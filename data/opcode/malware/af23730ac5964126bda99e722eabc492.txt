sbb
add
mov
push
stc
pop
xlat
pop
leave
lahf
cmps
mov
push
push
call
cld
bound
cs
cmc
inc
jmp
lods
add
pop
fwait
cmp
jecxz
in
xor
xchg
inc
mov
pop
jb
mov
jnp
push
adc
jno
push
scas
repz
js
mov
add
mov
repnz
push
inc
inc
cmp
push
jle
inc
xchg
pop
dec
fs
popf
out
adc
aad
imul
mov
add
mov
cli
xor
xor
out
add
leave
fcomp
(bad)
ja
add
sbb
jae
icebp
jbe
fsubr
sbb
lahf
(bad)
xor
xchg
or
mov
xchg
les
sbb
or
cdq
aas
jmp
fwait
das
xor
shl
inc
and
div
sti
sahf
jecxz
xchg
movs
jge
addr16
mov
das
in
aam
add
xchg
test
aaa
xchg
jb
dec
into
fs
popf
ss
stos
out
push
arpl
xchg
(bad)
into
push
ret
push
mov
(bad)
xlat
xchg
call
push
dec
jno
aam
push
cmp
jp
fmul
js
out
pop
into
and
mov
dec
into
or
inc
dec
sti
ficom
retf
rcl
pusha
and
vrcpss
mov
mov
pushf
outs
dec
adc
arpl
jmp
loop
xor
mov
div
stos
push
loope
xchg
fist
mov
mov
inc
dec
aaa
and
(bad)
mov
cwde
adc
adc
(bad)
lock
add
out
pop
xor
loope
cmp
(bad)
xchg
movs
push
sti
inc
pop
aaa
ss
loop
ss
lahf
aad
jbe
(bad)
dec
shr
xchg
movs
popa
movs
dec
les
add
xchg
shl
je
mov
fwait
add
int
xor
mov
popa
ins
jmp
or
pop
jno
pusha
in
clc
and
pop
sub
pop
add
das
int
lock
(bad)
popa
xlat
add
mov
mov
scas
(bad)
std
popa
push
or
mov
idiv
xchg
and
mov
mov
jno
jns
xchg
dec
push
(bad)
div
cmc
movs
mov
(bad)
push
inc
and
(bad)
rol
and
mov
xor
push
sub
popa
fs
jb
std
push
sub
loopne
inc
pop
pop
sti
xchg
sahf
scas
adc
or
jmp
cs
jp
pop
push
sbb
retf
sub
pop
daa
cwde
test
fucom
jnp
outs
adc
sbb
ss
sbb
dec
inc
(bad)
idiv
(bad)
nop
leave
pop
mov
and
nop
aad
(bad)
in
fsub
ds
out
pop
(bad)
or
rol
jmp
ja
fisttp
xor
cmp
lock
add
inc
pop
hlt
xchg
xor
aas
(bad)
jmp
fcomp
bound
inc
jo
dec
mov
jne
and
int
fbstp
or
dec
and
jge
sar
lock
cmp
or
fimul
enter
cmp
or
push
or
mov
xor
pushf
mov
in
mov
pop
xchg
int3
cmp
sahf
mov
ds
dec
or
pusha
jmp
(bad)
xchg
(bad)
xchg
out
pop
imul
push
push
mov
sahf
addr16
fbstp
jmp
(bad)
mov
xchg
sub
mov
push
int3
adc
sub
sbb
ret
push
xor
ret
jge
in
cmps
rcr
ins
imul
ds
(bad)
pushf
lds
xchg
mov
dec
ja
(bad)
push
in
test
mov
icebp
dec
push
sub
xlat
iret
scas
xchg
mov
jmp
fisub
xchg
neg
inc
out
test
cli
mov
jg
daa
mov
lock
dec
mov
pop
or
in
mov
pop
cmp
cmp
push
cmp
lock
rol
clc
mov
add
int
jo
sub
adc
cmp
mov
adc
enter
pop
sar
fadd
cmp
sbb
(bad)
(bad)
jl
pop
jns
sub
pop
stos
mov
mov
cmp
inc
fcmovnu
xlat
inc
dec
lahf
(bad)
mov
xor
les
inc
or
dec
test
ds
push
js
mov
pop
ja
xchg
dec
mov
push
loopne
xchg
mov
cmps
dec
and
pop
push
(bad)
addr16
dec
jo
rol
xchg
dec
ja
outs
mov
ficomp
sub
pop
dec
cdq
clc
ja
mov
adc
mov
mov
push
fwait
ins
stos
jne
pop
inc
push
add
je
js
xlat
dec
int
repnz
out
nop
sbb
add
mov
jae
jle
sub
pop
sbb
in
inc
into
and
sub
xor
jo
and
jno
pop
dec
fcmovbe
bound
mov
inc
cmps
push
jg
popa
aaa
aas
adc
fmul
hlt
test
arpl
mov
int3
xchg
mov
mov
sbb
arpl
pop
ja
push
push
rcl
mov
jmp
pushf
ins
push
jne
es
xlat
ss
pop
ins
jg
adc
push
shl
push
popf
xchg
stos
mov
and
push
sbb
sbb
ret
and
movs
inc
or
lods
mov
push
cmc
test
mov
mov
xchg
cdq
inc
nop
call
iret
stos
xchg
lds
out
jne
jge
xchg
fisttp
pop
cmp
aaa
mov
das
test
xchg
sub
lds
mov
lock
mov
aad
sub
bound
inc
movs
mov
dec
push
mov
ja
or
jge
adc
mov
hlt
inc
jg
jg
cdq
rcr
fimul
out
dec
loop
pushf
adc
inc
repnz
jnp
cmc
mov
ret
pop
es
imul
je
mul
xchg
inc
jae
sub
pop
ffree
dec
jnp
mov
sub
imul
clc
out
or
sbb
cmp
popa
loopne
push
mov
mov
and
(bad)
idiv
les
push
(bad)
js
nop
dec
sti
dec
inc
mov
mov
sbb
adc
mov
cdq
jno
cmc
gs
sub
ja
add
xor
mov
test
jbe
dec
pop
mov
and
mov
xchg
mov
or
test
scas
sub
adc
sub
xchg
jmp
hlt
jbe
pop
dec
repnz
(bad)
fcmove
outs
retf
cmps
enter
pop
cdq
dec
mov
out
push
rcl
(bad)
pop
popf
sahf
mov
jns
test
(bad)
cmp
aaa
call
ins
inc
dec
aad
adc
add
cmp
aaa
sub
pop
enter
sub
call
sub
test
and
leave
jne
pusha
ret
push
and
aad
push
out
add
rcr
jmp
popa
fimul
dec
jecxz
cmp
lahf
in
jg
loope
inc
adc
ror
adc
and
in
imul
inc
jbe
stmxcsr
pop
test
sbb
sub
and
cli
push
int3
fs
jl
aad
sbb
and
mov
adc
xchg
adc
cmp
ficom
pop
xchg
or
add
xchg
int
mov
mov
lods
adc
jl
xchg
(bad)
xor
loopne
rcr
adc
inc
sbb
neg
in
mov
push
int
cs
jne
sbb
mov
dec
mov
cmps
sub
fs
or
mov
dec
mov
mov
push
dec
ins
ficomp
push
cld
mov
retf
xchg
mov
cmp
cmps
and
jae
int
mov
push
mov
xchg
add
dec
lock
aad
js
jl
jmp
push
xchg
hlt
fisubr
pop
(bad)
daa
mov
xchg
or
repnz
scas
sar
xor
pop
add
sub
in
dec
ret
push
xchg
inc
lock
sub
pusha
jbe
pop
add
retf
inc
call
cvtpi2ps
loopne
xor
mov
leave
pop
jl
xor
imul
mov
imul
cmp
into
hlt
mov
ja
je
int3
or
ss
push
ins
push
dec
mov
dec
arpl
xchg
cmp
mov
sbb
and
xlat
inc
pop
mov
popaw
adc
adc
xchg
rcr
cmp
loop
loopne
jl
and
and
push
cdq
push
icebp
jo
sbb
fidivr
arpl
mov
test
pop
sub
jmp
(bad)
or
in
(bad)
fist
mov
retf
test
mov
jno
cwde
out
xor
retf
mov
int
mov
sub
cmp
cmps
push
test
(bad)
into
cmp
jle
stos
mov
xchg
ja
stos
movs
dec
nop
or
push
test
lahf
xor
jne
call
dec
in
aam
scas
and
rcr
sbb
call
and
cmp
bound
add
std
add
mov
or
sbb
jp
shl
retf
sub
out
(bad)
and
push
leave
mov
and
mov
jbe
cmp
clc
adc
and
je
cmp
dec
or
and
fstp
gs
mov
aam
jge
jmp
imul
adc
mov
push
sbb
jne
jle
add
xchg
test
cmp
add
pop
xchg
xor
jne
js
push
dec
pop
lods
sar
stos
pop
jl
mov
mov
ror
frstor
jge
xchg
outs
mov
data16
jbe
xlat
adc
repnz
nop
jmp
jnp
movs
add
dec
push
stc
jg
sbb
sub
dec
ins
dec
call
mov
loopne
push
rcr
add
movs
and
jns
(bad)
hlt
leave
sti
pop
cs
pusha
sub
(bad)
sbb
test
shl
test
jbe
cmp
pop
mov
jnp
jb
icebp
lock
pop
mov
sub
imul
fist
cld
lds
mov
jnp
ds
dec
or
shl
pop
jno
add
sbb
sub
inc
mov
ins
repnz
arpl
pop
push
cmps
xor
shl
and
push
inc
mov
adc
out
cmp
mov
sbb
ja
push
push
int
mov
nop
les
xchg
out
aas
int3
cmp
cmp
jmp
lock
or
movs
push
dec
shl
clc
or
call
fimul
call
scas
(bad)
cmp
or
(bad)
sbb
rcl
xor
rol
jecxz
test
scas
jno
fwait
daa
xchg
and
in
jle
jb
stc
dec
sub
mov
ja
adc
mov
xchg
int
mov
sub
inc
xchg
sar
enter
(bad)
xchg
and
icebp
stos
cmp
imul
mov
rcr
shr
dec
cmps
mov
and
std
sub
cmp
icebp
or
dec
mov
cs
mov
loope
sbb
or
and
stos
jo
push
aad
and
cmp
inc
sti
pop
xor
in
xchg
aad
mov
or
xchg
xlat
adc
mov
gs
es
outs
ins
xchg
hlt
fist
or
add
push
and
in
mov
dec
xchg
stc
ja
test
pop
xchg
repz
test
jno
mov
shr
xor
mov
sbb
cmp
test
(bad)
adc
xchg
jnp
bound
(bad)
fidivr
mov
pusha
int
and
mov
sbb
push
imul
imul
call
repz
mov
(bad)
jns
mov
xlat
fsub
cmc
in
cmp
ret
or
int3
sub
mov
call
into
ret
sar
xchg
and
xor
(bad)
pop
in
add
push
and
hlt
and
lods
add
sti
pop
mov
adc
xchg
jne
test
adc
sbb
out
or
out
xor
sub
jp
mov
sub
daa
aam
sub
dec
ret
lods
sahf
xor
out
push
test
cmps
dec
(bad)
xor
lods
ficomp
fdivp
mov
out
xchg
lods
mov
fistp
gs
lea
je
outs
test
fadd
pusha
sbb
aam
pushf
cdq
loopne
js
and
dec
fistp
enter
jb
je
mov
mov
pop
adc
cmp
mov
push
frstor
imul
and
aas
add
dec
sub
in
and
push
mov
inc
jo
pop
mov
xchg
mov
test
gs
sbb
push
lds
into
popa
in
bound
loope
pop
test
scas
call
adc
lock
jb
mov
dec
mov
(bad)
mov
and
mov
ret
fidivr
bnd
mov
jne
jmp
scas
mov
inc
fs
adc
and
sbb
test
std
push
xchg
adc
or
pop
push
inc
mov
xchg
xor
xchg
cdq
repz
dec
arpl
mov
cmp
push
pop
test
pop
xlat
sub
mov
xor
pop
jo
mov
xchg
(bad)
mov
push
push
loopne
dec
movs
sbb
mov
enter
sahf
clc
sar
push
shl
push
sub
or
cld
shr
push
mov
pop
and
mov
cs
aas
in
xchg
xchg
gs
mov
sub
push
xchg
jmp
cmp
imul
addr16
pop
jecxz
mov
inc
xlat
rcr
mov
dec
in
mov
les
mov
in
loop
sti
mov
sbb
pop
mov
mov
adc
ret
xchg
or
cmc
sub
add
dec
sbb
pop
outs
ret
and
sub
js
add
cmps
xor
sbb
das
das
call
cmp
xor
mov
push
jnp
jmp
sub
push
sbb
test
scas
xor
int3
jmp
dec
mov
call
lea
jp
scas
and
mov
aam
mov
mov
pop
jnp
rol
or
pop
fldcw
icebp
jno
fstp
test
cmp
adc
jmp
and
cmp
rol
mov
repnz
jl
repz
jae
xchg
hlt
imul
dec
loope
xchg
arpl
xor
test
mov
jae
outs
mov
stos
ret
popf
jbe
dec
loopne
xor
enter
xchg
sar
pushf
or
mov
or
into
jb
jl
or
lods
loop
ss
jg
call
push
sub
inc
xor
sub
dec
and
xchg
jnp
pop
and
push
push
add
push
mov
ds
add
test
mov
sub
add
fxch
cdq
mov
mov
rol
jb
gs
dec
popf
jp
das
jle
xchg
inc
xor
fnstcw
or
mov
dec
test
cmp
rcl
mov
xor
(bad)
js
xchg
neg
mov
and
jnp
sbb
xor
fdiv
fsubr
adc
loopne
jbe
aaa
dec
inc
mov
fwait
pop
clc
dec
adc
cld
add
pop
aaa
fistp
xlat
mov
jmp
sbb
sub
and
cli
mov
push
std
xor
cmp
jecxz
add
xchg
push
ja
dec
or
pushf
stos
pop
dec
int
mov
call
fidivr
out
test
mov
stos
jae
xchg
xchg
mov
xlat
add
and
lods
xlat
dec
pop
inc
xchg
push
xchg
(bad)
lods
xchg
pop
call
adc
dec
jg
mov
xchg
cmc
and
push
mov
inc
fist
stos
mov
jbe
jnp
jmp
mov
or
call
lahf
or
cmp
(bad)
xchg
xchg
push
addr16
push
clc
inc
and
les
and
adc
out
add
lahf
push
idiv
fcomp
ret
adc
pop
stos
in
jne
cwde
and
mov
mov
pop
mov
stc
pusha
mov
sub
addr16
ret
aam
test
or
inc
(bad)
ret
es
inc
pop
shr
mov
aaa
dec
pop
xchg
shl
js
sub
jo
dec
test
add
fstp
movs
cmp
and
cld
lock
sbb
xchg
std
sbb
(bad)
test
adc
outs
dec
dec
pop
push
and
pop
xchg
mov
dec
adc
add
enter
call
mov
xchg
call
pop
jb
popa
repz
sbb
mov
dec
retf
mov
fild
and
rol
adc
test
pop
scas
dec
adc
inc
push
fcomp
pop
jle
mov
outs
jae
mov
adc
push
xor
xchg
enter
or
sub
inc
cmps
mov
jp
rcl
push
xchg
outs
repnz
dec
fidiv
add
das
test
inc
(bad)
ja
inc
sub
sub
fsubr
pushf
in
into
icebp
call
fs
das
push
cmp
sahf
jns
fldenv
inc
sub
test
cld
mov
adc
ss
jo
pop
pop
or
(bad)
fld
inc
pop
(bad)
adc
mov
mov
xchg
sub
pop
scas
add
fcomip
stos
in
jp
ja
daa
cmp
call
loope
sub
cmp
sbb
idiv
dec
xlat
adc
hlt
lahf
popa
push
or
icebp
retf
jnp
cmps
mov
cmp
jae
cmp
stos
xchg
loopne
das
and
jnp
ret
stos
xchg
ins
and
add
add
and
sbb
mov
cmp
or
push
int
shl
xor
dec
or
sbb
sbb
(bad)
mov
or
or
rcr
adc
jne
into
pop
dec
push
pop
or
out
sbb
popf
mov
adc
mov
jmp
lea
stos
jg
dec
daa
mov
inc
mov
dec
xor
sbb
ins
xchg
mov
or
jecxz
shr
ss
push
xor
jp
xchg
in
mov
data16
xor
sbb
call
jne
jle
inc
jge
out
test
add
or
and
inc
in
aas
inc
int
mov
jbe
adc
stos
jl
out
or
inc
pop
inc
push
mov
fdiv
stos
mov
sub
and
shl
mov
jb
mov
inc
jmp
popa
pop
mov
mov
ret
ret
cmp
add
retf
test
mov
daa
push
cmp
(bad)
xor
and
dec
jnp
mov
lods
popf
adc
mov
movs
ins
iret
mov
fld
pop
loopne
ins
jbe
jle
jl
cmp
cwde
int3
cmps
mov
jecxz
inc
rol
cmp
in
sahf
cmps
xchg
cmp
out
or
imul
out
sbb
jo
ja
pop
lea
addr16
pop
ds
std
adc
sub
or
lea
cwde
or
(bad)
pop
outs
addr16
shl
(bad)
in
in
test
sbb
lds
xchg
xchg
in
and
mov
movs
icebp
pop
inc
xor
mov
sub
dec
xlat
(bad)
cmp
cmp
mov
jmp
test
mov
dec
mov
push
mov
xor
mov
(bad)
std
xchg
or
mov
repz
scas
jne
cmp
scas
pop
or
std
cmc
cmps
push
sub
js
nop
mov
mov
ins
sub
repz
push
shl
fstp
fcomp
cld
inc
int3
push
jno
or
jp
cmp
adc
fcom
in
sbb
and
hlt
add
imul
push
in
jbe
jae
sub
cs
cmps
inc
mov
and
jecxz
push
mov
js
pop
arpl
sbb
shl
call
enter
cmp
dec
xchg
sub
dec
sub
mov
sub
push
icebp
cld
arpl
and
(bad)
repz
push
mov
cdq
sub
imul
and
inc
aaa
fcomp
inc
in
pop
sbb
(bad)
xlat
adc
mov
inc
out
hlt
sahf
iret
or
sub
mov
ss
jmp
test
mov
cmc
stos
adc
test
arpl
mov
or
bound
and
sbb
cmp
scas
les
icebp
push
arpl
mov
mov
adc
inc
pop
mov
cwde
std
mov
jmp
pop
sbb
adc
jne
xchg
mov
retf
xchg
mov
mov
clc
in
pop
stc
adc
outs
mov
push
inc
inc
add
mov
mov
push
cmp
fimul
mov
xchg
js
test
pop
loopne
rcr
jbe
dec
adc
inc
xchg
lock
add
repnz
sub
mov
xlat
pop
out
push
out
add
sbb
cmps
mov
mov
fisub
clc
stos
jmp
dec
jae
cmp
mov
add
fwait
ret
cmp
mov
and
or
jne
push
jo
pusha
(bad)
test
sub
sbb
mov
iret
cmp
in
add
mov
imul
stos
(bad)
out
les
add
out
les
mov
mov
repnz
les
test
dec
cdq
int
sar
cmp
stos
retf
mov
scas
cs
pop
and
pushf
ret
ins
daa
or
pusha
and
arpl
mov
int
adc
cmp
jecxz
mov
mov
sub
gs
pop
cmp
mov
mov
push
jne
jmp
inc
call
stc
call
imul
cmp
jle
sti
fucomip
aaa
xchg
addr16
mov
mov
loopne
dec
rcl
or
xchg
out
and
loope
arpl
push
sbb
test
push
sub
rcl
arpl
xlat
xor
xchg
xchg
dec
or
pop
stc
sbb
shl
lock
sub
outs
sbb
inc
add
ins
imul
sar
push
fnstsw
add
mov
cmp
mov
mov
push
and
ror
inc
jno
call
repnz
pop
inc
push
mov
sbb
sbb
mov
mov
cli
push
sar
or
jae
mov
jp
add
imul
jmp
jae
and
cmp
cmp
xor
adc
adc
into
cmp
lahf
sti
xchg
pop
cwde
dec
adc
pusha
jne
movs
movs
loop
fstp
mov
inc
fmul
loop
shl
gs
adc
pop
mov
int3
mov
dec
ret
mov
jecxz
or
(bad)
rcr
jmp
outs
mov
pop
xchg
mov
sbb
cli
mov
inc
adc
retf
rol
shr
cli
cmp
pop
das
adc
adc
popf
nop
inc
adc
sbb
dec
test
mov
out
lahf
jbe
mov
mov
dec
push
test
cli
cmp
fwait
arpl
stos
mov
mov
inc
inc
pop
sub
adc
dec
inc
mov
dec
or
jbe
out
mov
or
and
mov
pusha
cmp
(bad)
sbb
xor
sahf
repnz
fwait
mov
mov
pop
or
cld
jmp
fistp
or
vmovapd
mov
jecxz
or
xchg
mov
outs
add
cmp
jne
xchg
add
movs
(bad)
dec
mov
cmp
test
push
mov
and
push
cmp
mov
sub
dec
cli
stos
push
pushf
cmps
sti
push
xor
push
xor
push
out
mov
popf
call
jno
and
adc
sbb
stos
inc
in
(bad)
mov
pop
pop
iret
je
call
icebp
add
or
mov
clc
jle
mov
ins
in
cmps
or
out
xchg
lods
jl
int
pop
mov
mov
and
dec
ret
fs
retf
repnz
fistp
xchg
xchg
mov
ins
(bad)
mov
cmp
in
push
mov
sub
sbb
aad
cmovno
jg
es
leave
and
aas
inc
push
clc
adc
addr16
hlt
pop
pop
arpl
push
lds
popa
push
mov
mov
mov
push
sub
xor
mov
shl
ds
push
add
adc
adc
loopne
dec
(bad)
or
leave
push
jo
imul
fwait
xor
mov
adc
add
mov
mov
cmps
scas
stc
jge
js
ret
mov
mov
mov
loope
cmc
push
xadd
adc
fdivr
nop
stc
stc
xchg
inc
xchg
ds
ret
test
les
cmp
not
push
sbb
aaa
(bad)
mov
daa
push
stos
int
cmc
popa
out
cmp
push
jg
lock
or
add
mov
push
mov
fst
cmps
sbb
mov
call
xchg
stos
ds
call
sub
jl
push
adc
mov
xchg
mov
push
lock
pop
test
movs
pop
movs
(bad)
cwde
xor
mov
xchg
mov
rcr
fistp
jge
jecxz
out
cli
daa
cmp
and
xchg
imul
pusha
clc
bswap
cli
dec
pop
jnp
adc
pop
sahf
es
sub
mov
push
dec
outs
push
pop
mov
cmp
imul
mov
xor
and
ret
retf
fsubr
nop
inc
push
dec
xchg
push
xor
lea
into
pop
mov
add
xchg
dec
fistp
ins
arpl
lock
gs
xchg
and
jne
ins
mov
repz
jl
mov
nop
mov
push
jecxz
(bad)
adc
ins
jle
mov
not
sbb
adc
clc
xchg
out
pop
mov
cmps
clc
mov
sub
jb
cmp
ins
mov
cmps
jle
jmp
or
data16
adc
fcmovnu
inc
mov
dec
dec
cwde
add
mov
fmul
jnp
cld
xor
dec
cdq
xor
stc
inc
mov
out
sbb
outs
xor
test
mov
cmp
xor
xchg
hlt
inc
cmp
pop
sar
add
call
adc
xor
jmp
add
loopne
mov
iret
cmp
jns
aaa
mov
out
jb
pusha
ja
bound
or
xor
and
ror
rol
jecxz
daa
fmul
or
ins
inc
cmp
hlt
outs
mov
xlat
dec
xchg
push
jmp
ins
aaa
jmp
iret
jne
jecxz
push
pop
mov
xchg
mov
add
mov
push
add
cld
jns
stc
mov
imul
dec
push
adc
mov
xchg
adc
xor
jbe
lahf
mov
test
xchg
jmp
bound
call
mov
jno
loop
pop
and
(bad)
stc
xor
mov
add
xchg
(bad)
imul
pop
shl
xor
retf
test
clc
leave
pop
ror
sub
adc
leave
mov
dec
push
mov
jmp
enter
(bad)
mov
xlat
jecxz
pusha
lock
sub
mov
sub
push
lock
mov
scas
sahf
xchg
int
stos
jp
sahf
pop
cmp
sbb
xchg
aaa
sub
enter
pushf
out
pop
test
pop
cli
sub
cli
mov
xchg
fxch
adc
mov
add
sub
mov
cwde
mov
fist
leave
xor
adc
inc
nop
or
pusha
jp
lds
pop
sbb
and
out
(bad)
adc
retf
iret
stos
nop
mov
jb
mov
cmps
xchg
call
cmp
aaa
xor
pop
push
(bad)
pop
test
mov
jns
mov
popa
mov
adc
jo
pop
les
mov
inc
pop
dec
(bad)
iret
sub
mov
mul
aad
cs
inc
dec
call
out
mov
(bad)
cmps
mov
pop
jle
int
stos
pop
nop
das
rcr
pop
daa
out
fisubr
jl
mov
ret
(bad)
push
dec
sti
icebp
int3
cmp
imul
jmp
out
pop
(bad)
push
imul
ret
ins
pop
mov
aam
mov
outs
movs
add
aam
jmp
pusha
test
jne
pop
nop
jnp
cli
loop
cs
mov
(bad)
hlt
pop
pop
movs
bound
fsubr
mov
popa
(bad)
out
fdiv
fnsave
mov
je
mov
daa
xor
out
out
inc
add
jno
dec
or
mov
add
adc
mov
xchg
call
fcom
test
mov
(bad)
imul
jo
pop
push
lock
mov
outs
jne
dec
xchg
jb
adc
call
push
sti
or
cmp
sub
neg
imul
in
mov
iret
movs
test
retf
jecxz
ret
jns
xor
jl
mov
cmp
sbb
popf
or
and
int3
pop
cmp
pop
jmp
inc
jmp
int3
lock
xchg
jp
rol
mov
bound
cwde
xchg
or
or
hlt
mov
out
(bad)
daa
push
cmp
mov
test
repz
sub
cmp
cmc
popa
lahf
inc
imul
sub
push
xor
push
mov
jge
test
cwde
adc
addr16
fnsave
sar
popf
sti
pop
mov
fnsave
aas
int3
add
fsub
pop
and
jmp
adc
cmp
ss
push
jns
not
xlat
jle
sub
scas
push
iret
ret
rep
xor
in
jo
ss
(bad)
(bad)
clc
push
das
xor
push
inc
out
mov
sub
in
sub
xor
adc
js
mov
inc
sbb
jns
test
adc
call
mov
lods
leave
std
popf
imul
arpl
scas
mov
adc
cmp
xor
out
sub
mov
call
hlt
and
sub
fdivr
xchg
out
fcomp
gs
scas
xchg
int
outs
rol
loop
hlt
push
jmp
mov
xchg
and
rcl
out
jge
aas
std
add
pop
mov
jo
lea
xchg
pop
sub
add
sbb
fwait
xchg
fisttp
sub
mov
cwde
jns
mov
lods
pop
out
xor
cli
cmc
imul
lods
leave
mov
lods
jle
es
cli
sub
leave
std
xor
pop
xor
adc
js
into
out
fst
ds
lods
loope
pop
out
ret
lods
or
mov
into
(bad)
cmps
outs
jbe
mov
stos
cld
push
cwde
ins
cmp
xor
ins
cmp
inc
aaa
xchg
setns
rcr
pop
cmps
arpl
sbb
test
pop
div
adc
xor
cmp
sub
int3
retf
xchg
mov
ret
xchg
cmp
and
fidivr
xchg
jnp
sub
jmp
enter
stc
jmp
xchg
retf
es
adc
mov
fidivr
mov
add
jne
cmp
nop
jne
dec
jecxz
or
mov
mov
and
inc
fsub
ror
xchg
movs
out
aaa
sbb
hlt
mov
fld
mov
adc
add
sbb
jae
dec
jmp
xor
call
call
or
adc
pop
sbb
push
mul
(bad)
in
leave
jle
ja
outs
jb
(bad)
ins
aam
adc
mov
mov
and
in
mov
xchg
mov
in
ror
push
or
scas
mov
dec
jb
inc
xor
mov
cmp
cli
pop
cmp
jecxz
push
(bad)
pop
adc
or
lock
mov
shl
push
shl
sahf
sub
and
push
and
add
mov
add
or
push
call
call
hlt
mov
sbb
fidiv
mov
lea
pop
pop
cmp
or
add
aaa
arpl
xor
mov
lods
loop
and
mov
dec
js
div
push
lods
sar
xchg
add
movs
retf
enter
out
sub
fsubr
push
aas
mov
mov
mov
imul
xchg
push
aad
out
inc
cmp
jnp
or
int3
mov
inc
cs
fld
pusha
fcmovnbe
mov
push
add
aas
jmp
jne
pop
and
test
cwde
adc
out
mov
imul
cmp
pop
xchg
pop
mov
int3
or
mov
shr
pop
dec
sbb
outs
lahf
loopne
out
push
adc
ins
sub
jne
mov
xchg
aad
out
add
or
mov
test
sub
jmp
fld
cmc
jp
out
ins
and
ds
adc
fs
mov
adc
outs
sub
push
lea
jle
xor
iret
test
loopne
out
pop
(bad)
cmp
repz
(bad)
fmul
dec
push
leave
ds
cmp
xor
or
jecxz
stos
xor
or
div
and
cmp
jne
dec
imul
sbb
out
xlat
retf
xor
mov
mov
lods
jle
sti
add
mov
std
shl
dec
stos
cli
in
or
lods
jb
jle
push
inc
xor
int
out
cwde
into
adc
and
xchg
(bad)
xlat
lods
jmp
push
jmp
(bad)
jbe
(bad)
sbb
mov
fcmovnb
dec
rcr
and
sub
fs
sbb
mov
fisub
lods
push
xchg
and
dec
movs
outs
movs
sahf
pop
pop
movs
je
push
into
push
or
push
jmp
or
aas
mov
cmovb
push
bound
mul
fs
push
into
in
dec
nop
out
out
cs
sahf
retf
loope
mov
sbb
fldenv
ror
repz
xchg
inc
jb
aas
xchg
dec
stos
es
popf
and
and
cs
xchg
mov
sub
out
enter
xor
or
(bad)
mov
mov
repnz
sub
scas
ror
fmul
or
sub
lea
mov
adc
mov
retf
pop
adc
(bad)
cmps
ins
xor
xchg
xchg
dec
scas
pop
imul
mov
sti
add
outs
jg
push
inc
sub
sub
shr
int3
xor
xlat
jns
ja
xor
xchg
push
inc
jb
into
mov
gs
xor
cmp
or
imul
popa
inc
adc
add
xchg
fucom
or
outs
sar
inc
push
xchg
in
cmps
or
je
mov
ror
mov
mov
sbb
sub
loopne
rol
sar
call
and
jae
(bad)
dec
jmp
int
sub
icebp
or
push
push
ret
xor
and
pop
add
push
sbb
lock
dec
hlt
popa
pop
mov
xchg
xchg
sub
shl
adc
and
sbb
mov
sub
out
inc
sahf
sti
push
adc
enter
cs
ins
iret
(bad)
pop
pusha
ret
pop
mov
jnp
pop
adc
pop
inc
adc
mov
in
or
mov
stos
jns
cld
shr
pusha
xchg
mov
addr16
push
and
or
fdivp
out
out
in
adc
mov
push
dec
or
mov
(bad)
mov
fcmove
out
inc
cwde
lahf
push
or
dec
addr16
iret
retf
push
add
into
sahf
call
call
adc
mov
jp
pop
(bad)
mul
(bad)
jmp
popf
sbb
loope
test
repz
mov
add
ja
cmp
ror
sub
leave
push
jmp
cmc
mov
retf
jns
imul
push
cmps
mov
aad
je
jbe
xchg
enter
ret
mov
mov
mov
neg
in
add
or
sbb
test
icebp
into
inc
stos
test
jmp
push
js
mov
or
mov
fild
push
push
push
icebp
sbb
lea
xor
xor
mov
fsubr
clc
xchg
loope
ret
ror
and
cmps
sbb
pushf
jne
retf
mov
or
aad
sbb
cmp
cmovp
jp
mov
xor
add
jp
push
add
movups
movs
adc
pushf
fistp
dec
jecxz
cmp
add
mov
add
cmc
nop
sub
cld
mov
icebp
mov
dec
imul
test
ret
das
push
xchg
xor
shl
nop
les
cmp
jg
sub
inc
pop
sub
mov
jmp
std
lds
and
and
bound
imul
shl
sti
push
add
jl
inc
push
aas
inc
fsubp
cdq
call
sub
or
or
dec
push
aam
push
retf
ret
or
xchg
xchg
and
xchg
test
out
ret
and
inc
cs
sbb
in
fistp
sbb
adc
push
test
and
push
aad
dec
(bad)
pop
mov
mov
addr16
mov
nop
sbb
loop
sbb
mov
mov
cmp
jns
rcr
ss
sbb
das
cmp
add
ret
sbb
sub
cmp
pop
stc
add
ins
adc
cs
out
push
sbb
ret
mov
adc
scas
jae
fmul
inc
mov
sub
pop
ja
xchg
push
mov
sub
or
xchg
(bad)
inc
lods
repz
std
pushf
nop
add
cmps
push
or
lock
jbe
out
inc
out
iret
xchg
push
sti
clc
jns
cmp
adc
js
and
add
cmc
jb
mov
out
movs
popf
leave
test
sub
sahf
mov
jne
and
mov
sub
push
(bad)
not
mov
nop
stos
and
(bad)
jecxz
aas
fs
dec
out
adc
in
out
xchg
push
test
dec
sub
sti
add
dec
and
add
(bad)
xchg
ror
movs
int
jmp
ins
push
and
call
push
cdq
pop
and
and
and
jns
in
or
fwait
jo
sub
ins
out
pop
add
mov
pop
cli
fwait
sub
adc
jmp
stos
cmp
inc
push
aad
or
sub
push
sbb
inc
sub
fmul
jmp
stos
les
pop
imul
(bad)
fwait
and
aad
gs
pop
sbb
fld
dec
cmp
inc
int
xchg
mov
mov
sar
mov
cmp
mov
pop
mov
inc
cli
int
pop
cmp
sahf
dec
movs
cld
cmp
and
xchg
jecxz
and
dec
out
out
mov
pop
mov
arpl
sub
dec
cmps
xchg
aad
loope
jecxz
sar
push
mov
sub
retf
cmps
or
jle
inc
dec
mov
or
mul
jb
push
in
fisub
ret
aas
(bad)
int
sbb
test
out
js
(bad)
retf
loopne
in
cmc
pusha
dec
and
and
aas
loope
loope
dec
out
rcl
sub
and
mov
(bad)
and
mov
pop
or
sub
mov
psraw
jns
arpl
ja
cmps
lds
mov
fcmovnbe
dec
mov
or
add
out
dec
in
pusha
call
push
sbb
repnz
and
sbb
out
cmps
inc
ss
xchg
adc
pop
dec
push
and
mov
ds
hlt
mov
frstor
sti
sub
not
and
add
push
ds
mul
ja
jge
mov
iret
jmp
fs
pop
xchg
(bad)
xor
leave
ror
jmp
push
and
jmp
push
fwait
fwait
xchg
inc
in
inc
sub
fmul
inc
popa
mov
in
into
leave
mov
aam
repnz
jo
imul
or
fcomi
and
sbb
and
inc
or
pop
dec
jge
jp
dec
xlat
pop
push
or
add
loop
cmp
je
sti
sbb
test
adc
fcmovbe
or
stc
mov
hlt
cmps
ja
pop
lahf
sbb
xchg
xchg
sahf
es
stos
sub
int3
mov
rcr
adc
arpl
mov
mov
pop
stos
add
ret
pop
push
inc
inc
imul
aad
inc
daa
pop
dec
ins
jns
add
jb
arpl
lahf
in
xchg
idiv
fs
mov
xor
pop
out
sti
push
cmps
or
in
loope
imul
mov
cli
retf
pop
add
mov
dec
inc
aam
(bad)
es
(bad)
icebp
push
hlt
cmp
or
mov
in
imul
stc
mov
js
(bad)
test
push
aad
imul
cmps
push
retf
sbb
inc
jle
mov
inc
pushf
mov
add
int3
rcr
test
loop
loope
fwait
mov
mov
mov
lock
inc
push
mov
dec
inc
ja
aad
loop
inc
push
push
rcl
inc
xchg
call
(bad)
fisub
cli
lods
xor
xlat
and
aas
les
sbb
push
cmp
popa
pop
dec
sub
push
out
pop
repz
aas
jle
lahf
adc
outs
aas
pusha
in
lahf
leave
pop
and
ficomp
iret
mov
sbb
fld
sbb
cmp
xor
add
fdivr
fist
xlat
mov
jg
xchg
(bad)
or
fwait
mov
call
push
sbb
test
dec
retf
inc
sub
ss
sbb
pop
pusha
test
lods
xchg
and
rcr
ficomp
jl
xlat
test
dec
mov
mov
jp
call
mov
shr
inc
dec
aaa
and
(bad)
sahf
inc
lods
sbb
or
popf
or
mov
lods
sbb
out
in
sub
arpl
(bad)
out
shl
mov
push
repnz
retf
push
xor
shl
push
in
dec
add
cmp
sbb
inc
lock
mov
adc
(bad)
inc
pop
jo
dec
adc
add
inc
ror
xor
test
outs
das
repnz
jl
add
inc
jbe
mov
pushf
ficomp
call
leave
rcr
sar
mov
and
pop
jns
inc
in
inc
or
movs
pop
jmp
ins
cmp
sub
adc
pop
push
xlat
lods
lods
jmp
lahf
imul
xchg
imul
int3
dec
dec
sbb
fwait
mov
sahf
fcmovnu
sub
adc
inc
sub
adc
mov
mov
das
popa
cmp
ret
ss
rcl
sbb
pop
sub
push
repz
icebp
xor
clc
mov
stos
retf
xchg
sub
mov
jge
fwait
int
inc
sub
sub
dec
test
fsubr
sub
or
out
in
cmc
lea
mov
ds
and
or
popf
daa
pop
pushf
cmp
shr
mov
inc
dec
add
or
es
sub
mov
sub
ja
sub
cmp
fs
mov
inc
(bad)
dec
jno
(bad)
aam
cmp
jnp
ficom
sub
vmread
ins
popf
in
cmp
jo
out
and
in
sbb
pop
jno
ds
xor
sbb
mov
out
mov
xchg
stos
and
sbb
mov
push
push
cli
test
repnz
or
int
ret
jbe
push
mov
xchg
pop
cld
pop
daa
xrelease
dec
fs
or
sahf
fmul
pop
retf
or
clc
or
mov
jmp
mov
and
cmp
xchg
(bad)
cmps
pop
and
popa
movs
(bad)
movs
enter
pop
ins
push
adc
into
mov
wrmsr
aam
add
push
and
sub
mov
in
imul
out
pop
test
imul
xchg
pusha
mov
rcr
mov
dec
test
or
lods
retf
(bad)
aas
aad
mov
or
cdq
ja
into
mov
leave
and
in
jb
popf
cmps
test
dec
shl
dec
(bad)
jmp
scas
int
mov
xor
fs
ret
js
cmp
mov
jae
in
or
sti
inc
mov
cmp
mov
retf
inc
mov
xchg
aam
xchg
sti
add
and
push
call
ret
test
pop
and
retf
dec
pop
push
fwait
outs
dec
loopne
mov
out
add
mov
mov
cmp
adc
mov
inc
pop
cmp
push
xchg
push
and
adc
jbe
shl
xchg
aam
cmp
pop
das
xor
jmp
and
jno
mov
mov
xchg
aaa
inc
or
and
popf
or
addr16
or
mov
in
push
dec
stc
xchg
idiv
jmp
push
jmp
aas
inc
jo
js
pusha
pop
mov
rcr
lea
jecxz
out
mov
test
dec
shr
push
cmps
jnp
ja
imul
xor
fwait
in
inc
dec
fld
jmp
inc
push
pop
mov
jmp
stos
inc
imul
imul
jnp
sbb
les
outs
and
lock
inc
jae
dec
(bad)
mov
aam
cwde
clc
cmp
adc
(bad)
jmp
push
lea
adc
mov
data16
push
mov
mov
shr
dec
dec
push
push
xchg
pop
jnp
xchg
pop
ficom
xchg
dec
stos
xchg
and
xor
ror
dec
outs
ss
push
or
cmp
popf
fdiv
dec
ins
stc
dec
push
pop
xchg
mov
aam
enter
dec
sbb
sub
aam
jns
sbb
pop
mov
(bad)
int3
scas
cmp
mov
dec
add
adc
mov
in
adc
cld
fbstp
pop
mov
out
(bad)
mov
mov
lds
ins
jg
sub
inc
mov
stos
mov
fstp
mov
ret
out
xor
fbld
aad
outs
sti
xor
inc
fcomp
int
jge
dec
fsubr
or
jne
and
outs
push
arpl
inc
call
pusha
pop
stos
jge
dec
data16
scas
inc
sub
movs
jnp
je
inc
les
sbb
cli
and
sti
imul
out
ffreep
sbb
xlat
cmp
movs
fs
outs
or
add
sbb
mov
cmp
pop
cs
enter
push
sbb
add
retf
sar
jbe
int
fist
add
sub
adc
mov
sub
aad
mov
inc
in
xchg
sbb
lds
sti
jns
cmp
adc
movs
mov
adc
xor
push
xchg
mov
xchg
xchg
movs
int3
movs
rcl
movs
inc
into
cmp
sbb
pusha
into
jecxz
mov
jecxz
(bad)
test
mov
dec
push
mov
sub
jg
cli
retfw
(bad)
test
xchg
test
jl
pop
add
call
push
cmp
test
or
or
enter
aam
xor
das
(bad)
std
push
(bad)
cdq
rcr
xchg
sub
mov
xor
fdiv
ret
xchg
and
sbb
mov
sbb
or
sub
and
mov
ds
inc
out
xchg
mov
add
sahf
addr16
cmp
jbe
xchg
movs
and
xor
sbb
fild
fidivr
push
cmps
adc
push
mov
jne
and
mov
cmp
pop
(bad)
cmc
(bad)
sub
pop
and
int3
fimul
lods
arpl
inc
test
mov
popf
xchg
xor
fwait
jo
in
or
sbb
xlat
(bad)
sti
cwde
adc
fstp
jo
imul
psllw
jne
mov
aaa
arpl
stc
jg
jmp
inc
jae
scas
adc
cld
add
aam
jmp
ins
psadbw
sub
mov
test
inc
mov
mov
xor
jns
pop
xchg
and
ja
es
jmp
adc
cmp
fistp
mov
mov
sub
or
mov
retf
xor
(bad)
fwait
add
and
lods
adc
in
mov
fwait
push
cdq
fwait
sbb
push
loopne
in
repz
sbb
mov
clc
mov
inc
mov
jo
jmp
lea
icebp
mov
mov
pushf
test
dec
push
pop
cmp
or
cdq
pop
xchg
mov
or
push
sub
sub
pop
xchg
in
mov
in
jmp
and
ja
pop
or
stc
es
(bad)
mov
in
data16
imul
jnp
add
xchg
sub
js
jmp
mov
lods
daa
retf
or
pop
mov
pop
jne
dec
add
(bad)
or
xchg
fmul
push
leave
jle
or
push
sub
mov
iret
test
mov
into
jge
mov
call
imul
adc
sbb
push
imul
sbb
and
mov
daa
and
inc
(bad)
retf
xchg
pop
arpl
cmps
aad
mov
cs
sti
jo
and
nop
push
aas
pushf
dec
sbb
es
push
mov
lods
mov
inc
pop
jbe
jnp
push
xchg
or
adc
xor
movs
sub
jecxz
mov
icebp
retf
inc
aaa
sbb
mov
mov
adc
jle
mov
(bad)
into
nop
loope
loop
and
jmp
out
cs
jns
test
rcl
repz
loop
mov
pop
push
fild
int3
jns
cmps
cdq
lock
xchg
mov
popa
lock
push
add
daa
and
dec
retfw
int3
jp
mov
jg
loope
xor
jge
std
arpl
mov
stos
xchg
or
fsub
ret
sar
ds
adc
pushf
js
rol
sti
cmps
sub
inc
neg
cmp
jnp
mov
dec
mov
arpl
rcl
aam
repnz
adc
xor
or
les
and
fld
jmp
test
jb
mov
xchg
test
sar
mov
inc
pop
or
cmp
stos
mov
js
sbb
imul
ss
dec
add
mov
movs
jp
popf
push
push
inc
jae
ror
neg
lahf
dec
out
jb
and
out
xor
push
jl
pop
callw
mov
pop
or
jecxz
scas
pop
ins
push
mov
push
mov
mov
cmps
pop
xchg
cdq
jg
arpl
lods
add
nop
cmp
nop
xchg
movs
dec
out
sbb
or
mov
cmps
stc
and
mov
sbb
ret
por
aad
push
cmp
mov
or
(bad)
lods
and
push
adc
push
mov
es
mov
jo
rcr
push
inc
adc
jge
jo
sub
jno
sub
in
mov
shl
std
int
ret
xchg
mov
daa
(bad)
outs
fsub
lahf
xchg
addr16
das
lods
xchg
add
sar
jle
loopne
xchg
mov
pop
in
sub
cmps
iret
popf
lods
loopne
cwde
jge
mov
fistp
daa
out
iret
rcl
cdq
cdq
jmp
les
pop
dec
(bad)
xlat
test
pop
mov
pop
xchg
pushf
test
aad
cmp
sub
dec
lods
scas
and
and
dec
and
(bad)
jae
dec
xor
adc
not
ficomp
adc
add
add
mov
fimul
inc
jecxz
test
add
push
mov
out
jle
movs
scas
jbe
js
pop
mov
jle
loopne
mov
pop
(bad)
push
mov
push
push
into
pop
cmp
mov
pop
inc
mov
sub
popf
test
cwde
mov
shl
int
ins
out
movs
cmp
adc
jnp
mov
mov
and
retf
inc
xchg
ins
movs
mov
mov
cmp
sbb
push
sub
lds
cdq
movs
movs
idiv
mov
dec
add
sbb
mov
add
sti
es
cmp
sub
cmps
(bad)
leave
xchg
mov
jecxz
sub
jmp
icebp
icebp
in
aad
mov
ins
stc
inc
retf
xor
or
pop
pop
aas
pop
mov
adc
retf
sti
adc
mov
test
movs
std
jbe
je
mov
xor
outs
xchg
pusha
dec
xchg
rol
cmps
test
inc
push
(bad)
test
jp
adc
mov
(bad)
fistp
inc
(bad)
shl
frstor
ins
into
cld
add
push
inc
scas
pop
xchg
(bad)
out
xchg
push
fnstsw
je
imul
sbb
push
mov
ja
or
and
push
dec
enter
sbb
mov
stc
bound
xor
movs
jbe
pop
or
mov
jnp
into
sbb
retf
sub
push
bound
jno
push
jns
dec
cmps
sbb
jle
sub
mov
xor
and
xchg
std
ins
mov
dec
pop
mov
xor
dec
rcl
fist
cs
mov
pop
lahf
lods
cmp
mov
adc
test
repnz
hlt
mov
imul
cmp
pop
mov
add
test
mov
fst
arpl
jo
shl
popa
sub
cmc
or
jg
popf
inc
push
add
dec
xor
int3
int
mov
fucomip
cmp
aas
push
pushf
popaw
imul
cmps
idiv
inc
mov
call
dec
aas
cmps
sahf
jne
retf
dec
and
and
mov
int
or
push
mov
sbb
mov
fidivr
cwde
pop
fnsave
pushf
xor
pop
and
cmc
push
mov
rol
inc
sar
js
shl
(bad)
mov
movs
xchg
mov
mov
sti
and
push
(bad)
enter
or
mov
fcmove
popa
push
js
mov
cmp
pop
ins
out
or
mov
(bad)
inc
xchg
es
test
std
or
inc
and
nop
and
or
cmps
in
sub
jg
and
and
cwde
ss
rcr
push
pop
scas
pop
sahf
sbb
sub
bnd
dec
jae
xchg
push
cmc
mov
shr
leave
dec
push
push
mov
mov
xchg
push
(bad)
cmp
sbb
sub
mov
adc
retf
aas
mov
jl
mov
push
mov
mov
xchg
inc
mov
mov
mov
xchg
pushf
pop
sub
mov
fimul
repz
js
fstp
mov
sub
(bad)
push
dec
shl
mov
int3
hlt
or
out
push
jl
in
lea
adc
jmp
xor
push
sar
ja
and
pop
dec
xchg
sub
push
fisubr
inc
cmps
stos
pop
dec
pop
retf
inc
push
or
jecxz
fwait
rcr
cmps
les
ja
int3
adc
inc
rol
dec
inc
mov
or
xchg
sub
loope
jg
xlat
int3
test
or
mov
push
jb
sub
addr16
push
lea
test
push
jp
xchg
je
inc
daa
mov
sahf
cmps
sbb
and
rcr
dec
xchg
es
dec
mov
gs
rcl
and
mov
inc
pop
test
int
pop
jns
mov
pop
(bad)
je
xor
mov
call
mov
mov
cmp
popa
mov
test
xor
dec
das
loop
inc
lods
arpl
dec
pop
(bad)
shl
push
pop
push
cmps
or
rol
mov
fcom
dec
inc
ss
add
movs
call
jae
push
stc
push
and
add
xor
jne
stc
icebp
pushf
daa
jge
inc
outs
and
into
lods
ret
ret
push
dec
jecxz
ins
pop
jbe
inc
xor
cmp
pushf
sub
repnz
js
sar
add
jmp
loopne
shr
sub
mov
jns
pop
mov
(bad)
mov
or
std
jl
stos
sbb
mov
shl
rol
loopne
or
lahf
xor
mov
sbb
inc
stc
or
inc
test
das
mov
jae
push
sub
loopne
xlat
xchg
xchg
out
cs
std
ins
xchg
shl
sub
call
pop
jg
adc
push
inc
sub
dec
inc
dec
dec
xchg
pop
in
enter
mov
in
loopne
fs
pop
add
cdq
pop
cs
sub
or
repz
adc
mov
call
sub
inc
dec
adc
call
and
cmp
pop
ins
mov
popf
dec
dec
faddp
jnp
mov
inc
dec
aam
xlat
in
mov
jecxz
push
lods
lea
xor
scas
sbb
mov
into
(bad)
and
aam
mov
out
pmulhuw
cld
add
repnz
jb
push
es
sbb
arpl
mov
sub
clc
out
mov
dec
bound
and
gs
cmp
mov
mov
stc
addr16
rol
or
(bad)
imul
icebp
inc
inc
jbe
sar
xor
imul
test
add
and
test
es
jmp
outs
mov
jmp
mov
scas
ss
push
popa
adc
inc
push
scas
xchg
lock
mov
enter
xor
sbb
test
loope
xbegin
or
xchg
sbb
mov
outs
ins
fwait
stc
pop
add
mov
arpl
or
in
repnz
mov
xchg
cs
cmp
sub
sub
adc
sub
adc
jo
push
out
in
sahf
jmp
mov
test
pop
rep
mov
(bad)
cld
jo
sub
or
fwait
dec
hlt
jns
sahf
push
jmp
adc
and
mov
mov
test
or
(bad)
mov
jg
mov
ret
xor
jmp
int3
and
lahf
pop
dec
ins
and
dec
shr
jae
lock
in
dec
xchg
pop
adc
push
loope
adc
jle
inc
push
retf
dec
push
fisttp
int3
not
lds
push
and
ss
push
aas
push
adc
add
arpl
retf
cmp
(bad)
and
xchg
push
fdivr
in
cmp
lock
sbb
sbb
cmp
je
call
mov
mov
pushf
int
fistp
mov
cmps
aam
sbb
pop
jp
xchg
div
push
push
or
jecxz
leave
mov
xor
(bad)
fstp
pop
sbb
repz
bound
inc
xor
ret
mov
shr
fidiv
shl
outs
pusha
adc
jae
outs
shr
cdq
adc
jb
mov
leave
in
cmp
or
mov
repnz
mov
jmp
add
jne
add
and
inc
cld
mov
cmp
cdq
xor
push
jnp
dec
cmps
test
xor
cld
pop
mov
pop
push
shl
mov
retf
sahf
imul
es
out
(bad)
sub
inc
out
mov
xlat
mov
mov
adc
sub
push
fdecstp
push
cmps
mov
xchg
popa
inc
adc
lock
mov
frstor
mov
jl
pop
int3
loop
loop
fnstcw
(bad)
ss
add
imul
mov
neg
push
mov
dec
jb
cmc
sub
inc
dec
fmulp
outs
sub
cmps
sub
cmp
and
cld
and
push
sub
dec
xchg
cmp
push
test
jo
stos
repz
das
and
cli
fdiv
ins
jb
jecxz
xor
lock
sub
mov
call
scas
outs
fbstp
(bad)
sub
push
or
xchg
or
xchg
jge
neg
xchg
jnp
jge
data16
push
sbb
mov
inc
aaa
mov
xor
ss
cmc
inc
ja
push
push
call
add
enter
cmp
scas
jno
arpl
inc
fiadd
call
addr16
outs
add
popf
jmp
aas
add
repnz
inc
inc
outs
aad
fstp
jne
cmps
sub
cmp
(bad)
std
sbb
inc
xor
adc
xor
mov
push
dec
aaa
sar
leave
add
xlat
or
adc
inc
push
sbb
add
pop
cmp
in
into
pop
and
lods
jle
mov
jbe
gs
pop
xor
jbe
clc
daa
adc
dec
and
pop
push
adc
call
enter
dec
lods
stos
push
xchg
adc
fsubr
mov
mov
cmp
mov
jo
lock
push
mov
inc
ss
pop
test
and
fbstp
pop
gs
shl
xor
push
test
in
(bad)
js
pop
cmp
lea
(bad)
out
inc
mov
xlat
(bad)
push
xor
or
addr16
retf
jns
mov
push
sub
ret
adc
in
shl
xor
fist
out
xchg
pop
mov
les
mov
shr
push
push
out
ret
loope
xchg
ins
mov
sbb
es
push
cmp
jnp
mov
push
sti
mov
inc
cmps
add
mov
push
repnz
ret
mov
ror
idiv
les
cmps
retf
ja
(bad)
ror
cmp
cld
nop
lods
mov
jl
ffree
sbb
rcr
jmp
int3
dec
push
mov
add
or
cli
xchg
lock
sbb
mov
mov
call
or
push
xchg
div
xchg
jg
ffreep
das
xor
aam
xchg
mov
out
push
xchg
mov
xchg
iret
test
mov
fstp
or
dec
cmp
cwde
arpl
pop
push
cmc
outs
ret
mov
sub
fstp
into
or
pop
cmps
imul
dec
mov
lock
in
jg
mov
sbb
mov
adc
or
sub
inc
xor
nop
sub
lea
push
fs
inc
cmp
aaa
or
jg
dec
pop
jmp
xor
and
(bad)
push
cmp
push
cwde
dec
shl
and
pop
push
dec
and
out
addr16
sbb
loope
add
daa
mov
dec
lahf
adc
sar
ret
and
cmovae
shl
and
es
push
pop
repnz
pop
test
sti
xchg
daa
lods
add
repnz
ss
fstp
push
push
mov
or
movs
sbb
mov
in
int
sbb
les
push
pushf
push
jne
fisttp
lds
js
xchg
popa
in
and
mov
sbb
inc
je
jae
out
sub
in
pop
sbb
adc
rcl
add
xor
gs
inc
adc
adc
jno
pop
jecxz
lahf
push
outs
jb
xchg
inc
sbb
mov
icebp
rol
pop
jmp
scas
out
not
in
fs
jnp
jne
mov
stc
ret
data16
and
sub
mov
(bad)
js
movs
xor
daa
mov
adc
or
sub
sbb
out
les
rcr
iret
and
shl
mov
mov
(bad)
push
mov
fcmovnu
dec
inc
push
loope
xchg
movs
adc
lea
in
out
out
mov
sar
mulps
mov
mov
retf
fsubr
and
in
jl
popf
mov
cmp
inc
fidivr
cwde
push
test
movs
mov
push
pop
mov
xchg
scas
lock
sbb
jbe
fs
out
fidiv
fidiv
pop
mov
adc
test
fwait
test
sbb
pop
jb
mov
mov
or
scas
adc
sub
mov
ins
pop
mov
sbb
(bad)
es
mov
dec
and
mov
scas
mov
mov
into
leave
loop
in
cmp
cmp
jns
(bad)
movs
sub
vmwrite
fisub
or
mov
xor
dec
ror
loopne
sahf
(bad)
cmp
data16
pop
cli
mov
out
icebp
mov
push
and
repz
add
xor
push
ficom
cdq
cmp
mov
mov
out
jp
lods
jmp
add
test
pop
fnstsw
int3
mov
cmps
fwait
jne
xchg
push
push
add
dec
fcom
pop
jp
pop
cmp
aad
jmp
ror
or
mov
fnstsw
pop
hlt
sahf
arpl
dec
loope
rcl
inc
inc
add
push
ficom
sahf
jge
push
mov
mov
jno
sbb
sub
stos
pop
add
sbb
mov
jns
sub
rcl
push
jl
dec
pop
fldcw
clc
(bad)
inc
cwde
loopne
adc
push
dec
mov
lods
xchg
xor
jne
or
push
loopne
pusha
jp
push
inc
jo
xchg
adc
add
mov
jae
pop
ins
test
nop
inc
xor
ja
movs
push
xor
push
(bad)
rcr
push
jb
neg
jnp
mov
cmp
das
arpl
mov
push
aam
(bad)
jb
push
fwait
adc
ret
sahf
and
and
sub
ret
xor
xchg
imul
test
and
mov
mov
in
push
push
data16
stc
xchg
and
int
pop
cmp
cmp
stos
cmps
(bad)
rol
push
sbb
shl
ins
inc
or
push
and
and
xchg
push
(bad)
sbb
xor
pop
sbb
jnp
jmp
cmp
jge
and
int
cs
xor
xor
mov
lock
push
fmul
mov
mov
inc
mov
cmc
sbb
and
mov
mov
test
mov
cmps
and
(bad)
jecxz
push
xor
(bad)
xchg
ja
xchg
and
pop
daa
in
sahf
push
sbb
xor
push
jne
fsub
push
lods
push
mov
push
push
test
and
adc
out
mov
inc
sahf
mov
hlt
jl
sbb
xchg
(bad)
sbb
fstp
popf
dec
lahf
cmp
out
pop
cs
push
dec
push
sub
fcomp
push
push
mov
mov
mov
add
pop
sub
fild
mov
in
sar
jae
test
shl
retf
and
je
aam
mov
pusha
mov
fst
ins
sbb
jne
inc
jmp
or
fist
lods
out
push
lods
sub
dec
(bad)
icebp
inc
pop
sub
xor
popf
pop
or
xchg
and
fnsave
cmc
add
btr
dec
pop
xchg
nop
outs
mov
mov
ret
sbb
movs
sub
and
aaa
inc
iret
sub
in
mov
out
fs
dec
xchg
rcr
clc
xchg
jno
iret
jbe
mov
outs
lds
scas
daa
mov
outs
jle
xchg
cwde
or
(bad)
loopne
test
add
out
test
clc
and
xlat
sub
push
mov
mul
cmp
mov
push
je
in
addr16
xor
aas
xor
dec
mov
int3
adc
fistp
jp
or
xchg
nop
cwde
add
bound
test
aam
ret
and
sub
push
ins
out
lahf
add
pop
sbb
or
mov
aam
jl
xchg
test
cmp
mov
pop
add
(bad)
sti
jecxz
xor
out
mov
les
mov
fst
mov
adc
movlps
mov
jb
pop
mov
dec
sbb
mov
push
adc
daa
into
xor
dec
mov
xchg
aaa
out
mov
push
into
mov
fild
dec
clc
aam
ror
mov
leave
fadd
daa
stc
(bad)
inc
rol
push
add
arpl
adc
test
imul
or
add
sbb
fidiv
sbb
neg
cmp
arpl
mov
jle
cmc
repnz
test
aaa
sub
in
mov
mov
and
jns
pop
shl
imul
mov
stc
jo
(bad)
aam
pop
aas
je
cld
aam
push
mov
mov
inc
daa
and
push
div
cmp
cld
call
dec
pop
clc
sub
cli
adc
pop
dec
(bad)
push
(bad)
xchg
add
or
adc
or
ret
xor
mov
jns
and
nop
jp
push
cmp
sub
div
jp
enter
mov
out
and
retfw
mov
jecxz
addr16
or
cmp
sbb
push
push
cmp
popf
pop
push
(bad)
and
leave
mov
sub
stos
add
leave
jmp
jae
jnp
jno
or
dec
(bad)
jno
push
test
pop
pop
push
int
pusha
xor
cmps
mov
pop
xchg
jbe
ins
sub
stos
rcr
and
ins
jl
add
les
cdq
sti
inc
or
mov
inc
scas
test
and
mov
inc
inc
inc
iret
or
aad
or
adc
push
loop
leave
and
ret
inc
and
mov
loopne
pop
mov
in
mov
jp
ins
mov
out
loope
aad
mov
push
call
(bad)
es
outs
ror
mov
hlt
ret
pop
ficomp
jg
mov
loopne
in
mov
mov
xor
jae
jb
loop
addr16
push
adc
adc
mov
cmp
lock
rol
sbb
es
sbb
movs
and
or
sub
les
fcmove
sub
ret
int3
cmp
iret
mov
pop
push
(bad)
mov
sub
neg
mov
lods
xor
dec
jp
push
cmp
aas
enter
xor
fcomp
push
daa
gs
stc
add
loope
scas
cmp
cmp
gs
adc
sub
push
jmp
fs
cli
pop
mov
lahf
fsubr
pop
inc
pop
cmp
xchg
pop
lods
ret
call
aam
push
imul
ret
out
jmp
push
xchg
into
sbb
pop
(bad)
jmp
jno
cmp
ret
cmp
out
dec
aas
test
mov
jmp
fdiv
jp
fs
push
and
arpl
(bad)
cmc
imul
jae
dec
and
cli
dec
lods
sub
sub
test
leave
mov
fidiv
ficomp
pusha
popf
jmp
push
inc
ret
push
out
jp
inc
ror
pop
or
lock
out
inc
cmps
mov
push
cmp
or
scas
mov
pop
outs
ds
out
fld
test
in
and
out
test
and
mov
push
and
cvtps2pi
and
mov
mov
fs
mov
adc
mov
xchg
jle
ja
and
inc
(bad)
shl
pop
imul
adc
jo
pop
xor
mov
scas
scas
sbb
xchg
out
shl
lods
mov
gs
xor
xor
std
call
inc
sbb
xor
cmp
mov
adc
xchg
jg
xchg
push
dec
out
jb
daa
jbe
loope
adc
jnp
or
ja
push
dec
loopne
arpl
fiadd
std
dec
jmp
inc
sbb
mov
and
jmp
and
adc
fadd
push
fnstsw
stc
aaa
and
xchg
cwde
mov
and
aas
sub
aad
popa
sub
jmp
bound
data16
pop
and
push
retf
pop
lods
jae
pop
push
icebp
popf
jmp
outs
and
push
cli
cmp
add
dec
sbb
imul
jmp
neg
cmp
inc
lahf
loope
(bad)
sub
je
nop
fild
mov
mov
dec
(bad)
jmp
mov
imul
and
adc
retf
inc
mov
fbld
and
jno
adc
mov
pop
das
ret
xchg
aas
mov
popa
pop
xlat
mov
les
fld
fsubr
add
cmp
mov
leave
dec
mov
(bad)
lods
fisubr
mov
jg
or
test
push
(bad)
in
sar
hlt
jg
stos
mov
xor
or
mov
sub
hlt
mov
cs
dec
adc
sub
push
cdq
out
mov
addr16
xor
(bad)
mov
nop
int3
aaa
aad
add
push
dec
pop
xchg
mov
xchg
lods
pop
loope
xor
xchg
(bad)
jl
sub
adc
imul
clc
mov
add
imul
pop
cmp
jmp
inc
and
fstp
inc
sahf
jl
cmp
jp
jno
mov
adc
lahf
xchg
and
mov
inc
lock
test
xchg
les
mov
out
or
in
lods
scas
cmps
das
adc
sar
gs
addr16
mov
jg
jmp
test
fsub
pop
and
ror
bnd
test
mov
adc
dec
shl
aaa
xchg
jbe
jae
push
cli
fsubr
cmp
sub
pop
sbb
or
jmp
add
data16
dec
sub
pop
outs
mov
jnp
sbb
jbe
mov
cmps
mov
out
adc
sub
push
or
test
imul
jb
lea
xchg
xchg
sub
add
jmp
ss
cwde
mov
cmp
mov
or
push
or
jmp
cmps
mov
or
std
in
clc
out
cmp
inc
pusha
adc
push
scas
or
gs
rcl
test
adc
add
pop
cli
outs
dec
inc
lea
mov
paddd
pushf
rcr
mov
jo
ss
test
aaa
call
xchg
sub
jmp
push
sbb
sbb
daa
or
enter
jb
popf
cdq
int3
stos
add
mov
cmp
xchg
lods
gs
clc
xor
push
xor
sar
mov
nop
add
fsubr
sub
(bad)
pop
xor
mov
in
mov
int3
pop
stos
pop
inc
not
adc
or
pop
int
mov
pusha
jno
mov
jns
je
xchg
and
jnp
loop
dec
jae
push
aad
and
inc
xchg
jns
xchg
mov
sub
enter
and
into
push
jb
mov
movs
push
jne
fs
fst
int
test
cmp
movs
push
jmp
outs
inc
sub
imul
cmps
not
push
aad
mov
stos
sbb
inc
jmp
cwde
dec
shl
cmp
pop
out
sahf
xchg
dec
in
int3
cmc
and
mov
push
sahf
jmp
repnz
sub
add
fiadd
outs
movs
xor
lods
cmp
in
push
mov
adc
stos
iret
push
ja
icebp
test
add
in
inc
lods
sbb
mov
movs
xchg
shr
jp
in
mov
add
test
enter
xor
ss
fmul
pop
(bad)
out
imul
push
cs
pop
jmp
mov
fdivp
ss
ror
out
or
test
(bad)
js
ins
push
cwde
test
and
inc
pop
retf
sbb
adc
ret
popa
stos
jnp
test
push
hlt
and
mov
xchg
ins
dec
div
sub
mov
jp
jge
fistp
mov
sub
fcomp
out
mov
mov
ins
fwait
add
inc
push
fidiv
es
pop
(bad)
pop
xor
sbb
add
in
clc
dec
xchg
xchg
mov
adc
mov
repnz
cmp
aad
dec
mov
aas
dec
cmp
scas
sbb
adc
jl
mov
stos
or
dec
push
or
sub
lea
shr
add
xchg
ja
add
cwde
pop
push
sub
mov
dec
add
shl
sar
lods
or
cmp
fidiv
fisttp
push
mov
adc
movs
repz
jne
mov
in
out
adc
sbb
enter
or
sub
jecxz
in
cwde
xchg
mov
scas
add
fmul
popa
stos
es
pop
xchg
shl
jne
adc
xor
pop
sti
jmp
pop
retf
in
ret
imul
push
ins
ins
xchg
(bad)
(bad)
jmp
jo
cmp
jbe
sub
xchg
jl
jb
mov
xor
iret
imul
scas
mov
inc
sahf
pop
sbb
fistp
inc
cmp
sub
sub
and
add
adc
cmps
xor
sub
mov
movs
in
inc
add
outs
loopne
div
and
test
and
push
cwde
xor
(bad)
cmp
daa
aaa
fst
push
adc
repz
adc
xchg
inc
(bad)
sub
fcom
mov
pusha
pop
jno
xchg
mov
in
icebp
shl
cmp
stc
scas
js
not
add
pop
pop
adc
mov
stc
or
(bad)
test
inc
ins
xchg
add
scas
mov
pop
inc
out
inc
jp
(bad)
mov
mov
add
push
xchg
loope
push
mov
jmp
mov
retf
add
or
fstp
and
cmp
cwde
adc
push
rcl
rol
pushf
ss
int
mov
rcr
push
or
ss
and
ins
dec
pop
fcom
push
adc
movs
pop
(bad)
mov
test
in
mov
fsub
stos
pop
mov
cld
sub
(bad)
aam
retf
mov
jmp
or
adc
adc
inc
jns
test
mov
fmulp
aas
mov
xor
mov
fisttp
pop
fisub
or
xchg
int3
imul
ja
push
push
and
or
ret
pop
lea
xchg
repz
shr
out
xchg
dec
jle
mov
movs
sub
loopne
mov
xor
jl
jecxz
mov
inc
sbb
jmp
pop
test
aam
mov
cdq
addr16
xchg
and
stc
imul
ror
cmp
addr16
mov
dec
je
sbb
loop
adc
lds
retf
aam
sbb
mov
inc
repnz
data16
idiv
adc
mov
sbb
adc
aad
sub
scas
fwait
out
lods
bound
mov
stc
call
mov
mov
push
push
cmp
retf
jne
fist
sbb
push
mov
add
call
mov
and
mov
loopne
xor
in
bndldx
sbb
pop
lods
test
in
mov
xchg
js
or
pop
jb
push
sub
inc
bswap
les
inc
pop
fstp
jnp
push
push
stos
lds
mov
je
sbb
bound
scas
into
div
sub
lods
fcmovbe
fsub
jns
jp
test
outs
fs
(bad)
icebp
inc
and
xor
cmp
lods
pop
mov
jecxz
adc
xchg
push
and
push
std
sbb
jno
inc
stos
stos
les
add
mov
jle
(bad)
mov
mov
test
icebp
and
push
je
stos
push
fisubr
jno
outs
rcr
cwde
imul
mov
pushf
mov
leave
outs
ret
xor
inc
push
stos
jbe
mov
mov
mov
lea
imul
mov
xlat
shl
(bad)
pop
jp
jg
sub
inc
mov
pop
dec
imul
mov
shr
retf
dec
mov
mov
stos
pop
and
adc
(bad)
mov
xlat
stos
lahf
lea
lods
cmps
ret
in
call
bound
dec
mov
mov
cld
dec
test
popa
xor
cmp
mov
mov
in
push
shl
inc
mov
adc
lods
mov
or
test
loop
jl
jmp
mov
test
jg
andps
test
mov
mov
aas
popa
rcr
mov
mov
lea
fstp
hlt
and
jp
ror
and
sbb
inc
fs
hlt
xor
push
lahf
lods
pop
fucomi
mov
pop
or
(bad)
sar
je
push
inc
cmps
push
sub
cmc
ret
rcl
push
lods
arpl
pop
movs
sbb
outs
sbb
lock
int
lds
or
xchg
and
(bad)
fist
out
and
jns
cwde
jl
test
mov
mov
loopne
mov
retf
test
xchg
add
repnz
mov
inc
in
ret
and
pop
mov
jl
push
mov
out
aam
add
cmp
lahf
cmp
sbb
push
mov
aaa
movs
push
cwde
inc
pushf
push
(bad)
sahf
sahf
mov
inc
rcr
cld
repz
fmul
inc
test
and
sti
cld
fdiv
push
push
mov
cmp
mov
cwde
(bad)
(bad)
in
inc
mov
add
adc
mov
jl
inc
ror
jo
test
loope
jns
xchg
pop
cdq
adc
jge
inc
mov
jns
sub
inc
lock
lahf
js
loop
lds
jne
mov
sub
bound
(bad)
imul
loopne
or
pushf
or
aaa
pop
dec
xor
mov
in
sub
adc
dec
adc
adc
stos
ret
inc
out
out
jle
cmc
inc
fsubr
inc
popf
xor
sbb
xchg
pushf
hlt
and
int3
int
mov
mov
rol
mov
sbb
in
jnp
push
xor
retf
jecxz
push
dec
sub
sbb
and
inc
dec
sbb
ret
scas
jecxz
movs
and
fcom
pop
cwde
arpl
lea
(bad)
in
test
cli
inc
je
xchg
sub
nop
iret
sub
inc
clc
iret
lods
clc
ret
xchg
mov
out
(bad)
scas
mov
inc
arpl
fadd
and
pop
dec
cwde
aaa
lods
cmp
sti
bnd
mov
pop
div
jle
sbb
add
std
push
add
aad
les
movs
jmp
retf
pop
jg
xchg
mov
xor
(bad)
in
mov
loopne
jae
f2xm1
sbb
push
call
pop
fwait
mov
lds
bound
cmps
and
cmc
dec
addr16
repz
sti
out
data16
sbb
adc
cmc
ret
(bad)
xor
pop
mov
ret
bound
and
pop
sbb
stos
add
sub
sahf
loope
jae
xchg
out
sub
dec
not
xchg
jnp
sub
icebp
jle
pop
xor
je
pop
arpl
movs
xchg
(bad)
mov
dec
xor
in
push
xchg
lods
test
mov
repz
mov
pop
add
and
cli
fist
xchg
js
push
daa
xor
and
scas
pop
aas
sbb
dec
adc
dec
jbe
lea
add
call
sti
test
push
shl
adc
rep
or
mov
cwde
ds
dec
cli
in
cmp
retf
lds
sbb
addr16
outs
push
pop
xchg
inc
sbb
repnz
stos
push
call
cmp
pop
loop
jmp
ins
push
sub
sbb
and
aaa
mov
xlat
jo
(bad)
retf
pop
mov
stos
and
retf
or
push
or
mov
in
shl
in
shl
lahf
mov
and
cld
mov
test
inc
outs
sub
movs
shr
push
test
ins
ret
sub
hlt
rol
dec
ins
sahf
sub
jg
xor
dec
cmps
mov
and
jb
test
and
xor
sbb
cdq
std
mov
push
mov
sbb
ins
adc
ret
movs
fwait
xor
add
jb
lds
push
inc
adc
cmp
jb
mov
xlat
xchg
pmuludq
mov
mov
out
nop
and
mov
xlat
das
sub
sub
cmps
test
adc
clc
mov
push
test
fwait
mov
cdq
movs
repnz
jp
sbb
fldenv
and
daa
push
push
dec
sti
xor
and
or
dec
sub
or
or
inc
(bad)
dec
xor
mov
sti
add
xchg
or
cmp
repz
jno
inc
xchg
sub
push
jle
(bad)
sti
retf
fwait
sbb
or
push
dec
or
in
int3
in
lds
nop
jno
xchg
mov
ficom
popa
loopne
jo
cld
jmp
jo
xchg
call
scas
leave
(bad)
xchg
js
ins
aaa
clc
mov
call
arpl
or
jge
cmp
out
mov
gs
or
shl
leave
inc
arpl
scas
sbb
dec
jecxz
popa
stc
push
or
push
and
stos
push
mov
fsubr
inc
call
mov
cmp
cmp
fmul
loope
into
cmp
aas
and
fwait
cmc
in
mov
push
dec
mov
cmps
in
cmp
pop
mov
or
cmp
pop
xor
sbb
daa
(bad)
aaa
mov
lds
xor
lock
icebp
aaa
les
pop
icebp
imul
or
jbe
pop
gs
jl
jmp
mov
(bad)
xchg
lods
loop
xor
mov
push
push
fwait
xor
fist
add
jne
xchg
jno
pop
retf
ja
ret
sbb
and
jge
pop
mov
not
cli
cli
jl
sbb
jns
and
or
add
xchg
add
fild
inc
mov
(bad)
mov
push
dec
pop
hlt
out
jb
xchg
repz
push
clc
(bad)
mov
cmp
adc
in
push
(bad)
push
nop
cwde
jl
pop
jae
xchg
add
out
sbb
xchg
cld
pop
push
mov
xchg
xchg
sub
das
(bad)
rol
push
and
lods
adc
scas
and
das
xor
mov
test
popf
pop
pop
pop
inc
jge
and
jnp
in
fist
loop
sahf
outs
out
repz
aas
jecxz
js
mov
pop
arpl
retf
imul
add
add
pop
test
mov
cmc
call
jae
jo
sub
pusha
das
sbb
mov
inc
add
xor
das
sbb
jns
pop
push
or
pushf
enter
inc
xchg
mov
push
mov
shl
sbb
xchg
sar
push
out
(bad)
fist
adc
fmul
mov
push
sub
mov
xchg
les
xor
ds
adc
xor
lahf
leave
jno
inc
pop
imul
loop
and
in
in
mov
pop
movs
jne
imul
bound
jnp
stc
jg
adc
xor
push
(bad)
in
out
push
nop
in
and
push
(bad)
xor
arpl
jo
(bad)
sbb
test
mov
loop
movs
rcr
fsub
or
mov
jbe
sbb
lods
sbb
mov
xchg
cmp
rcr
mov
shl
xchg
ret
push
jb
sbb
xchg
inc
pop
mov
jnp
push
cld
jge
dec
mov
std
cs
pop
or
jle
pop
xor
mov
ins
mov
jmp
push
jae
pop
(bad)
push
leave
outs
sbb
inc
pop
sub
ins
mov
sub
in
jmp
dec
shr
pushf
(bad)
sub
int3
mov
jo
test
xor
into
scas
jmp
add
jge
sbb
push
pop
cmc
jo
lock
cmps
repnz
mov
jo
cmps
add
test
sub
enter
xchg
(bad)
test
sbb
sti
in
inc
pusha
fs
add
es
fcomp
dec
in
loopne
push
jle
sbb
imul
cwde
sbb
cwde
mov
cmp
shl
mov
jmp
outs
in
pop
lahf
adc
xor
inc
or
or
outs
sub
cdq
js
fadd
in
and
lds
mov
mov
xor
push
cld
ins
pop
(bad)
jmp
mov
adc
add
ret
mov
push
std
sbb
fst
xor
(bad)
std
sub
mov
out
loope
cli
repz
add
into
movs
not
mov
fisttp
dec
xor
imul
sbb
outs
cs
ficomp
aaa
xchg
gs
jb
jmp
dec
fucomp
fadd
push
jb
and
cmp
enter
pop
xor
cmp
icebp
xor
fwait
test
es
in
add
and
fldenv
fwait
jno
in
iret
mul
stos
repnz
adc
dec
call
retf
jo
sub
(bad)
sbb
mov
jno
aam
push
jo
or
sub
and
test
mov
imul
xor
jb
cmp
(bad)
call
jb
jne
cmc
dec
je
dec
cli
sub
loopne
mov
jp
mov
mov
call
stos
(bad)
ins
add
xor
or
cwde
data16
and
into
adc
xchg
mov
xchg
loop
inc
cmp
cmc
cli
inc
arpl
fbld
test
iret
xchg
idiv
adc
cwde
loope
add
out
jl
aam
std
xor
jge
sbb
cmovp
ss
adc
add
jns
gs
and
mov
mov
inc
mov
mov
inc
std
cmps
lods
xor
push
cmp
cs
push
retf
add
push
(bad)
arpl
inc
mov
sbb
dec
or
cmp
dec
test
je
mov
jo
pop
add
sbb
sub
cmovae
pop
lds
shl
lods
sbb
xchg
scas
test
movs
sub
js
out
xlat
fisttp
fisub
sub
(bad)
rcl
xchg
and
das
je
mov
fucomp
mul
fistp
pusha
sub
test
jno
vpmaxsw
cmp
arpl
lods
jb
dec
scas
pop
cmps
xchg
jno
nop
retf
fs
out
pusha
imul
dec
repz
sub
addr16
cmp
and
add
xor
arpl
cmc
loope
fstp
mov
inc
cmp
frstpm(287
inc
mov
xchg
mov
addps
and
lods
or
and
push
mov
sbb
inc
push
dec
movs
aas
bnd
mov
aad
dec
or
inc
cwde
hlt
sbb
test
xchg
dec
imul
mov
mov
push
inc
xor
ret
mov
add
repz
push
out
jp
ret
push
xor
aad
sub
cmc
popf
loopne
adc
in
xlat
test
mov
aam
xchg
(bad)
sub
push
call
icebp
cmps
dec
add
xlat
xlat
les
push
fdiv
cli
mov
shr
into
cmp
loop
or
into
cli
mov
fild
imul
repz
ficom
adc
inc
xor
arpl
or
imul
jno
test
(bad)
xchg
repz
lea
push
out
dec
imul
mov
xchg
bnd
xchg
pop
adc
scas
dec
mov
xor
or
neg
sbb
push
dec
rcl
push
jo
je
jae
mov
sub
out
sub
scas
das
aaa
jg
sub
fldenv
jg
mov
lods
lahf
pop
sti
test
jle
cmps
aam
inc
mov
mov
and
hlt
jmp
enter
aam
adc
lods
pop
cmp
nop
popf
mov
mov
cmp
dec
rcr
fcomip
dec
adc
add
mov
mov
xchg
shl
or
pop
lods
popa
adc
cmp
mov
cmp
in
in
adc
addr16
mov
add
in
mov
cwde
sbb
push
stos
(bad)
pop
xchg
jl
mov
lods
add
in
mov
(bad)
mov
add
xor
push
push
outs
out
sub
(bad)
sub
inc
pop
push
xor
test
ins
enter
dec
stos
push
bound
pop
pop
call
jle
out
out
sbb
aas
push
mov
or
into
ins
(bad)
stos
push
out
aam
in
pushf
cmc
rol
or
mov
inc
push
sahf
in
loop
rol
movs
cld
mov
cs
inc
repz
aad
out
and
scas
movs
(bad)
pop
push
out
mov
aaa
fmul
xchg
cmp
push
jae
test
dec
scas
iret
push
jle
mov
sub
scas
in
xchg
jle
dec
popa
pop
sbb
push
fldenv
aam
mov
jns
fcmovb
fisub
pushf
xor
cmps
xor
lock
test
xchg
push
cld
xor
test
push
dec
mov
inc
inc
enter
mov
sbb
dec
sbb
hlt
jmp
adc
inc
jmp
jge
int
pop
je
data16
mov
dec
retf
cdq
jmp
xchg
jnp
lea
cdq
xor
and
push
jnp
test
cmps
mov
imul
in
pushf
fmul
mov
arpl
ins
cmp
lds
inc
or
xchg
inc
and
loopne
fmul
push
jne
iret
pop
and
ret
xchg
clc
ds
outs
and
sub
test
test
(bad)
clc
sbb
ret
cmps
test
mov
in
mov
mov
cmp
in
cmp
push
scas
loop
outs
jb
mov
mov
pop
and
loope
dec
ret
push
add
cmp
xor
pop
cmp
add
push
fld
xchg
jle
jno
push
imul
cld
rcr
fcomp
mov
push
xchg
dec
gs
scas
sub
arpl
inc
mov
loop
push
dec
out
icebp
jmp
mov
inc
pop
arpl
shl
mov
or
ja
dec
sub
mov
jo
aad
cld
jns
lea
repz
std
mov
inc
lods
sub
fsub
stos
mul
js
mov
push
lock
stos
jbe
lock
adc
and
sbb
pop
lods
out
cld
fldenv
mov
inc
sub
mov
jge
mov
sub
inc
xor
scas
lds
shr
mov
mov
push
adc
and
in
clc
dec
mov
test
test
fistp
jb
xor
pop
xchg
sub
sub
push
leave
sub
js
lods
jmp
mov
pushf
adc
fwait
jne
mov
pop
fs
retf
(bad)
xchg
inc
xchg
in
or
sbb
cld
add
jge
push
call
and
retf
out
cmp
(bad)
not
stos
xchg
gs
lods
fwait
cmc
push
or
pop
arpl
cmps
in
xor
inc
jno
scas
jmp
fistp
(bad)
icebp
pop
fs
out
lds
neg
clc
iret
fdiv
adc
pop
dec
(bad)
js
nop
push
jle
inc
or
and
push
mov
leave
pop
push
xchg
ds
pushf
retf
sub
(bad)
lods
mov
cmps
mov
mov
sub
or
test
sbb
es
pop
inc
nop
scas
xchg
test
add
sbb
xor
pusha
sub
sti
scas
or
push
sub
and
popf
cmp
fild
(bad)
mov
and
jns
dec
and
add
mov
cwde
inc
cs
push
ret
add
nop
es
not
sbb
sub
sbb
fwait
sbb
aam
sbb
adc
arpl
jnp
ror
cmp
scas
sub
adc
push
xor
xor
outs
or
push
or
call
pop
(bad)
faddp
stos
jmp
(bad)
mov
pop
int3
ret
out
ret
push
imul
mov
mov
int3
out
and
sar
mov
(bad)
sbb
or
arpl
cmp
lahf
jmp
add
leave
xchg
daa
scas
add
movs
dec
xor
cmp
xchg
cwde
pop
je
inc
pop
inc
(bad)
mov
mov
dec
xchg
mov
mov
mov
and
(bad)
mov
div
or
shl
sti
sbb
(bad)
lea
sbb
jl
push
sub
inc
je
aaa
cli
cmp
add
es
stc
sbb
jbe
mov
sbb
stc
push
push
std
jge
or
cmp
shr
test
fwait
(bad)
lds
rep
push
movs
fld
lods
nop
cmp
inc
sahf
div
mov
push
sbb
mov
mov
sbb
jmp
ja
out
fnstenv
cmp
xchg
popa
out
pop
pop
xchg
sub
and
addr16
adc
or
add
pop
int3
stos
les
xor
nop
xor
fs
test
pop
(bad)
mov
mov
rcr
mov
adc
sbb
mov
ins
and
jb
arpl
mov
dec
ds
sbb
jmp
ins
or
xchg
sub
lock
(bad)
adc
sub
adc
cmps
or
xchg
ins
mov
aaa
mov
and
scas
cmps
gs
loopne
xor
int
xor
lds
pop
push
call
mov
push
push
mov
adc
lea
in
mov
mov
cmp
aaa
mov
ins
or
mov
mov
sbb
cmp
and
scas
(bad)
or
mov
cmp
sbb
and
shl
jmp
and
and
jl
add
sub
aaa
cmp
cmp
dec
(bad)
ins
sti
adc
cld
add
xor
inc
sub
test
cwde
pop
jo
sub
sbb
popa
leave
xor
mov
push
test
cmp
xchg
loop
sub
bound
or
sub
test
sbb
sbb
aas
xchg
call
push
dec
sar
loop
mov
sar
jmp
sbb
sahf
add
bound
ss
push
das
lahf
pop
and
es
dec
shr
pop
mov
aas
int3
ja
test
mov
dec
sti
mov
jg
cwde
xchg
mov
add
in
or
jb
imul
addr16
mov
ret
cmp
(bad)
sbb
(bad)
dec
or
ret
ds
in
inc
pop
lock
mov
ja
mov
out
xor
jae
movs
(bad)
jo
jne
div
jns
(bad)
adc
dec
jno
xlat
pop
retf
mov
test
arpl
(bad)
lds
push
fcmovnb
iret
or
popf
rcr
xor
xor
pusha
pop
icebp
mov
leave
dec
stc
mov
shl
inc
sub
xchg
in
gs
loop
sbb
repnz
pop
in
dec
jge
ss
inc
pop
stos
push
xor
test
mov
sahf
ins
cwde
inc
dec
outs
(bad)
mov
aad
xchg
and
bound
cdq
inc
and
out
mov
lahf
pop
shl
fs
in
xchg
or
adc
(bad)
sub
enter
(bad)
adc
pop
xchg
xchg
push
cmp
out
jmp
inc
xchg
jl
enter
mov
mov
cwde
(bad)
outs
das
arpl
das
mov
jl
je
mul
pop
sub
and
popf
cmp
mov
sbb
jecxz
sub
cmp
cld
xor
pop
sub
pop
retf
or
add
jns
mov
dec
fdivr
add
mov
jmp
sbb
xchg
cmp
call
daa
fadd
mov
or
mov
jo
jne
aad
xor
sub
ins
int
cwde
cmp
in
jns
mov
mov
jp
sbb
sub
xor
xchg
adc
jbe
loop
xor
add
mov
cmp
adc
adc
mov
mul
dec
leave
rep
int
pop
repz
clc
push
(bad)
pop
or
fsin
sub
cld
add
ret
ins
dec
xchg
pop
gs
pop
mov
mov
xor
or
out
inc
mov
adc
icebp
stos
or
(bad)
mov
out
xchg
out
push
pop
mov
mov
jmp
mov
jb
mov
mov
push
ja
stc
add
cwde
sub
in
in
push
jmp
adc
cmps
cmp
call
cmp
sub
in
ds
or
pop
loop
mov
xchg
jle
pop
mov
lahf
mov
xor
in
ror
retf
ss
ins
or
sbb
test
xor
(bad)
jo
neg
xchg
xchg
shl
lds
jle
inc
out
out
and
and
mov
mov
mov
stos
dec
arpl
add
loope
dec
arpl
(bad)
rcl
fistp
mov
sbb
mov
add
or
dec
xor
push
sbb
sub
mov
les
sub
test
test
out
cmove
adc
call
and
icebp
mov
mov
sub
push
mov
pop
into
lods
pop
xor
mov
mov
and
es
mov
dec
test
imul
pop
mov
xor
(bad)
int3
jbe
nop
or
dec
movs
sbb
adc
or
inc
imul
xor
mov
fistp
cmp
jne
push
popa
and
fsubr
cmp
mov
loop
fwait
mov
cmp
mov
(bad)
out
jns
adc
adc
xchg
mov
or
xchg
jo
enter
adc
idiv
mov
popf
ja
add
adc
btr
test
and
cld
cld
das
fnstsw
int3
mov
sahf
and
jmp
leave
aam
sub
repz
fidivr
jnp
sbb
sbb
aam
daa
fadd
xchg
adc
shl
inc
loopne
xor
adc
(bad)
(bad)
sbb
rcl
mov
in
daa
je
(bad)
pop
mov
mov
daa
jl
inc
push
mov
cmp
inc
dec
mov
ret
popa
push
dec
mov
dec
push
test
ret
daa
out
cmps
jp
pop
mov
push
xchg
movs
cli
push
ror
xchg
idiv
inc
fadd
repz
fisttp
ins
fstp
loop
inc
lds
jae
jg
rcr
repnz
cdq
pandn
mov
adc
(bad)
imul
fs
sti
enter
ins
stos
sbb
rcl
xor
je
xlat
outs
aad
jl
mov
(bad)
out
cdq
jb
push
xor
leave
jbe
aad
push
or
sub
aad
or
xor
sbb
repz
jp
push
lahf
cmp
xor
movd
cmps
fistp
loopne
into
dec
jnp
inc
cld
mov
push
dec
hlt
call
gs
mov
mov
pop
pushf
repz
xor
pop
xchg
retf
lods
sbb
sbb
cdq
lds
add
xchg
aam
mov
out
lahf
jl
pop
dec
sub
int
mov
out
pop
mov
push
lods
inc
mov
das
sbb
sbb
daa
xchg
adc
xlat
sbb
(bad)
mov
fild
sub
mov
lea
or
and
cld
aas
(bad)
and
cmps
out
sub
mov
lods
(bad)
outs
sbb
out
push
dec
add
bound
pop
fwait
xor
js
mov
mov
leave
mov
out
cld
out
xor
stos
dec
inc
inc
sub
add
mov
out
ud1
int
and
mov
out
push
xchg
dec
xchg
repz
das
scas
imul
sti
in
lock
adc
push
mov
sub
dec
je
sub
push
jge
fdiv
adc
call
dec
movs
cld
adc
(bad)
loope
push
push
xchg
inc
sbb
xchg
call
mov
push
mov
cmps
mov
outs
ror
(bad)
sub
jbe
mov
mov
jae
xor
pop
(bad)
cmps
test
ins
aam
and
fsubr
scas
out
or
dec
hlt
and
push
ror
inc
sub
mov
jp
xor
adc
jl
or
stos
push
mov
(bad)
into
xchg
xor
mov
je
push
int3
sbb
xor
lock
fbld
sub
dec
inc
jns
xchg
mov
or
es
xor
aas
dec
dec
mov
lahf
cmps
sbb
xor
aaa
jmp
ss
or
xchg
or
and
lods
add
dec
(bad)
out
or
cmp
imul
mov
jns
xor
lods
dec
retf
fsub
cmp
loope
ss
mov
out
shr
xchg
lahf
dec
add
adc
xlat
mov
(bad)
iret
loop
cdq
dec
push
je
call
sbb
clc
and
lods
push
cmp
sti
test
push
data16
or
add
sti
or
adc
(bad)
lods
push
mov
inc
(bad)
jbe
mov
pop
inc
popa
push
xchg
inc
out
mov
std
rcr
mov
cmc
movs
jno
jp
repz
add
push
xchg
ins
stc
out
jmp
xchg
and
lds
jecxz
inc
xchg
or
xor
call
es
sbb
stc
pop
into
call
mov
mul
and
add
pusha
push
retf
outs
xchg
fwait
and
dec
outs
xor
fdiv
xor
push
xchg
cmps
jbe
imul
dec
adc
cmp
jg
aas
xchg
add
mov
ins
pop
(bad)
cwde
or
and
push
in
mov
cmp
xchg
jbe
retf
mov
aam
movs
ins
pop
call
cmp
or
sub
icebp
jnp
sub
mov
ja
mov
retf
loopne
out
fbstp
pop
fld
cmp
std
and
xchg
dec
fucom
jmp
loopne
xlat
sub
pop
dec
ins
sub
xchg
into
scas
sub
cmp
mov
lds
jmp
or
mov
sub
cli
add
dec
and
mov
stos
adc
mov
pop
sub
(bad)
xor
push
loop
fld
mov
add
(bad)
xchg
sub
and
mov
and
into
shl
test
sub
jnp
stos
pushf
inc
add
leave
add
inc
xchg
cmp
mov
lea
cmp
js
mov
mov
jg
adc
jmp
mov
mov
mov
sub
gs
jo
ret
jb
aad
inc
pop
shl
pop
add
in
jns
adc
pop
scas
fsubr
aaa
add
dec
inc
or
and
(bad)
out
call
push
jp
adc
sbb
inc
inc
ja
mov
mov
or
(bad)
popa
cmp
sub
mov
movs
mov
jmp
sbb
mov
adc
(bad)
sbb
mov
jno
push
les
and
xchg
(bad)
or
loope
in
sti
aaa
stc
mov
mov
pusha
rcl
pop
jg
or
or
pop
fwait
in
stc
dec
cmc
ss
dec
in
xor
nop
mov
cmps
push
cwde
scas
mov
mov
in
mov
jno
out
stos
push
lock
dec
(bad)
jbe
daa
imul
cmp
mov
sub
jbe
sbb
pop
in
cmp
mov
jns
or
or
cmc
fxch
or
xor
and
loope
mov
or
cld
pop
movs
cdq
ss
ja
sbb
pavgb
cmp
sub
in
xchg
jae
outs
out
in
hlt
test
sbb
inc
imul
and
jl
leave
inc
xchg
sub
mov
sbb
nop
jl
lea
jle
and
mov
add
sbb
jmp
lods
inc
lds
or
loopne
not
adc
adc
push
cli
fwait
jns
js
fnstcw
xchg
imul
adc
daa
push
push
test
lea
enter
inc
jne
outs
cs
jne
(bad)
cmps
out
cmp
inc
adc
(bad)
repnz
loopne
jecxz
push
sti
bts
lahf
dec
jecxz
xor
out
(bad)
sbb
xchg
push
or
pop
sti
icebp
sub
fwait
loope
dec
cdq
push
in
sub
out
cmps
js
pop
inc
pop
dec
sbb
xchg
mov
push
sub
push
repnz
sub
push
dec
and
call
inc
movs
test
shr
sbb
test
retf
(bad)
enter
dec
psubusw
mov
adc
bound
or
out
add
cmp
inc
cmp
xchg
mov
dec
repnz
add
jg
jno
or
pop
test
in
dec
js
push
pop
pop
adc
push
mov
fidiv
in
hlt
jecxz
ja
ficom
ret
sahf
retf
sahf
mov
imul
inc
aaa
rcl
(bad)
stc
std
stos
pop
cmps
mov
mov
or
add
xchg
xchg
mov
in
nop
repnz
push
jmp
inc
out
jmp
les
cwde
je
dec
inc
rcr
xlat
mov
push
dec
sub
dec
out
aad
rcr
cmps
inc
mov
xor
out
jge
mov
daa
fs
and
mov
inc
cmp
fcom
inc
cmps
in
and
push
test
out
movs
sbb
je
pop
xor
sti
aas
test
dec
in
inc
push
hlt
mov
ins
jecxz
mov
stos
lock
sbb
lods
lock
js
(bad)
sbb
pop
sbb
movs
outs
mov
aad
mov
inc
outs
in
xor
xor
mov
sub
sbb
(bad)
bound
(bad)
popa
neg
fld
sub
xbegin
popf
fnsave
mov
pop
ss
mov
inc
sbb
or
cmp
pushf
push
cwde
adc
ins
xor
push
cmove
add
int3
and
daa
pusha
inc
std
fnstenv
icebp
lahf
int
push
jge
sub
and
shl
mov
ins
jecxz
test
arpl
(bad)
leave
out
call
call
mov
xchg
jmp
xchg
xchg
jns
ror
(bad)
jae
inc
pop
arpl
xchg
test
ins
mov
inc
mov
mov
and
popa
adc
aaa
jp
pop
aad
adc
(bad)
cli
cmp
pop
test
jb
sub
out
call
stos
push
mov
loope
loop
retf
adc
lds
loope
fsub
int3
out
xor
add
sbb
dec
pushf
sub
xchg
push
mov
jge
xchg
sub
mov
ror
dec
xor
xchg
jmp
scas
fwait
xor
pop
jecxz
mov
xor
lahf
pop
xchg
and
mov
jle
gs
test
and
daa
push
stos
fadd
imul
lods
jl
adc
aas
lock
in
jae
jne
jnp
sbb
xchg
push
daa
jno
mov
inc
jbe
ds
inc
mov
fwait
and
out
retf
mov
cmp
adc
fisttp
adc
ror
mov
lods
or
jecxz
dec
jno
mov
push
lock
ds
jmp
movs
icebp
movs
inc
jmp
sub
mov
mov
cld
loop
mov
mov
and
cld
loopne
jle
pop
mov
outs
mov
cs
cs
lods
mov
shl
sbb
or
xchg
inc
leave
sbb
sub
jnp
dec
add
jae
add
outs
inc
mov
push
ins
lahf
loop
fmul
mov
hlt
out
(bad)
loop
jbe
call
mov
not
adc
mov
mov
push
stos
jbe
in
xchg
cmp
aad
add
dec
adc
movs
retf
out
xchg
repz
retf
sbb
mov
and
mov
dec
mov
jne
aas
adc
add
fld
mov
imul
fldenv
nop
out
add
sub
jmp
sub
inc
inc
test
adc
push
pop
cli
jmp
mov
aaa
outs
dec
fstp
test
mov
or
fs
jnp
test
into
mov
mov
outs
test
and
arpl
aas
fadd
mov
loopne
shl
pop
and
cmps
xchg
in
adc
mov
dec
push
inc
add
lock
mov
add
or
xchg
pop
inc
aaa
cmc
imul
fldlg2
add
mov
push
pop
push
jecxz
jns
ins
push
in
arpl
ret
js
mov
mul
jne
mov
sar
push
xor
lods
ins
sti
and
jmp
add
push
sbb
mov
xor
pop
pop
(bad)
pop
jmp
fwait
cld
loopne
xchg
test
imul
jne
call
mov
mov
sbb
adc
jmp
rol
dec
mov
cli
cmp
cld
outs
or
pop
lea
inc
and
mov
adc
push
fdivr
fs
mov
mov
(bad)
out
dec
sbb
fiadd
in
adc
inc
shr
imul
mov
push
in
or
into
lods
cwde
test
repnz
nop
xlat
ret
mov
test
mov
arpl
cdq
mov
or
cli
push
repnz
jecxz
push
cmps
in
fmul
fild
cmps
pop
inc
mov
test
jne
dec
cmp
ret
shl
mov
and
mov
jp
xchg
(bad)
sbb
xor
aaa
sbb
inc
out
ins
dec
mov
adc
push
push
pusha
mov
push
pop
or
xor
inc
jp
aam
nop
(bad)
and
inc
mov
js
and
mov
jmp
xchg
xor
pop
fisubr
jb
sub
je
dec
int
jbe
jp
imul
sbb
mov
adc
fwait
mov
rcr
mov
push
push
xacquire
push
int
out
and
mov
mov
out
cmp
ret
xor
adc
cmp
lea
ror
stos
mov
add
pop
aas
push
lock
mov
mov
out
sub
rcr
cs
add
cld
push
xor
mov
cmc
push
lods
test
sahf
neg
fdiv
fisttp
xor
cmp
jno
je
loope
lea
dec
repz
loope
jecxz
retf
cmp
loopne
dec
mov
inc
pop
push
repnz
inc
jmp
popa
jb
out
add
fild
push
fild
mov
pop
popa
xor
push
push
out
dec
adc
enter
stos
retf
lds
mov
retf
enter
fucompp
mov
mov
sub
inc
pop
fstp
mov
test
ret
xor
push
or
(bad)
and
bound
retf
mov
mov
retf
mov
rol
idiv
(bad)
xor
lods
add
push
add
cwde
push
mov
outs
dec
ss
jno
(bad)
mov
and
inc
inc
mov
arpl
mov
push
ins
pop
push
int
in
or
call
fcomp
dec
inc
sub
jmp
dec
pusha
mov
and
lahf
out
inc
or
cli
loop
pop
dec
cs
xlat
pop
or
push
gs
or
push
gs
test
and
sub
es
pusha
mov
mov
sub
int
dec
jb
icebp
and
mov
es
nop
and
xor
test
mov
mov
inc
jnp
sub
mov
mov
ja
mov
mov
xor
jmp
fmul
sub
or
test
pop
jmp
push
test
push
(bad)
in
xor
or
in
push
retf
sub
ds
and
cmps
push
xchg
jmp
xchg
inc
out
(bad)
push
int3
push
adc
fcom
jl
xchg
mov
ret
cli
jbe
es
jle
xor
imul
scas
xor
add
(bad)
jo
jl
fldenv
push
xor
pop
mov
add
loopne
je
paddsw
int3
add
adc
call
jmp
pop
call
ret
out
cld
or
rcl
imul
scas
sub
xor
neg
pushf
cdq
popa
out
int3
push
stos
xchg
clc
push
hlt
mov
pusha
mov
les
or
out
or
out
or
and
mov
cli
ins
add
and
inc
xchg
push
jmp
and
imul
cmp
sub
dec
push
and
dec
in
dec
dec
pop
pop
stos
inc
jo
mov
mul
pop
mov
or
mov
loope
push
icebp
jmp
and
icebp
(bad)
mov
movs
call
dec
jbe
add
stos
pusha
outs
mov
das
iret
inc
cmp
jmp
test
enter
retf
cmp
mov
lods
sbb
imul
sbb
sub
(bad)
fs
mov
mov
cwde
sahf
mov
adc
jp
popf
fnsave
test
sub
iret
imul
dec
xlat
push
or
(bad)
addr16
(bad)
sub
sbb
push
cs
pop
mov
loope
inc
pop
inc
xchg
clc
call
push
and
sbb
out
enter
jp
and
(bad)
jb
jmp
sahf
ins
jle
push
and
add
gs
daa
mov
sub
pop
or
mov
and
scas
and
xchg
shl
cmps
inc
fwait
arpl
fs
fcomp
mov
push
pop
sub
pop
inc
(bad)
icebp
in
cmp
and
fucomi
sbb
lock
xchg
jmp
xor
pop
mov
inc
test
bound
in
mov
cmp
mov
leave
call
sub
loopne
xlat
inc
ror
outs
aaa
mov
iret
xor
adc
dec
xchg
pushf
push
das
adc
push
mov
imul
xchg
movs
or
pop
test
out
outs
out
mov
adc
sub
lock
add
or
fwait
retf
in
dec
fs
inc
or
jl
cmc
pop
fldenv
mov
pushf
sub
xchg
les
dec
test
imul
test
loop
sahf
adc
add
stos
in
(bad)
xor
int3
push
sub
inc
dec
lods
cmp
adc
cmp
inc
out
mov
ins
cld
aaa
cmp
pop
cli
imul
xchg
popf
fimul
jl
shr
lea
adc
dec
inc
fld
xor
jbe
into
or
pusha
jle
fwait
enter
test
fldln2
lea
mov
xlat
aaa
jb
les
ret
(bad)
sti
xchg
mov
or
or
xor
loop
jmp
mov
push
mov
call
adc
adc
sub
rcr
fistp
lahf
mov
pop
pusha
mov
stos
test
imul
mov
push
loope
aam
aad
jmp
dec
aad
or
rcl
add
enter
shr
cmp
iret
loop
ret
and
sbb
aaa
dec
and
(bad)
dec
xor
addr16
jmp
pop
(bad)
lahf
or
inc
lods
cwde
(bad)
sub
add
dec
ds
xchg
mov
test
sbb
ds
hlt
push
fadd
sbb
imul
push
dec
mov
clc
mov
adc
or
pop
and
jmp
aam
pcmpgtw
xchg
in
dec
lods
ret
lea
adc
sbb
imul
scas
fbld
pop
push
add
cmp
inc
pop
mov
xchg
jmp
loopne
adc
loopne
inc
dec
fs
cmps
xchg
leave
sar
rcl
push
rcl
xchg
es
fidivr
shl
std
ret
movs
es
sub
push
xchg
xor
ss
push
out
mov
jge
pop
push
push
cmp
jae
out
arpl
xchg
push
sbb
cli
adc
loopne
nop
mov
xchg
in
(bad)
mov
and
adc
pushf
fisub
adc
adc
mov
mov
arpl
sbb
or
inc
iret
loop
lahf
test
aad
cmp
dec
stc
pop
or
cmp
ins
xchg
mov
jg
adc
jmp
inc
and
adc
ins
cmp
sbb
inc
push
sbb
jae
adc
ins
push
add
inc
mov
push
mov
push
in
mov
loop
mov
enter
imul
dec
and
cdq
jle
pop
sub
jp
clc
and
jmp
sub
enter
in
jb
scas
lods
sub
std
sti
mov
in
xor
jb
lea
jl
and
fsubr
jge
cmp
(bad)
call
scas
das
cmp
out
jae
mov
sbb
push
sbb
mov
ja
jecxz
sahf
and
mov
xor
icebp
mov
int
mov
icebp
jns
jp
lds
inc
dec
dec
pop
mov
mov
fcmovnb
es
pop
or
sbb
mov
jae
cmp
jnp
inc
mov
jbe
ins
loop
rcl
fcomp
(bad)
leave
pop
inc
adc
mov
mov
test
out
inc
mov
xchg
js
and
dec
dec
dec
xchg
sbb
cmp
cmp
pop
fdiv
xchg
mov
adc
jo
sahf
lahf
movs
popa
movs
ss
push
(bad)
enter
lahf
dec
(bad)
in
push
mov
inc
fstp
(bad)
push
repnz
lds
in
je
enter
jge
pop
repnz
int3
rcr
bnd
adc
sbb
adc
(bad)
(bad)
sti
cmc
and
push
xor
jae
push
(bad)
imul
mov
neg
mov
fisttp
loop
sub
jns
mov
add
js
icebp
mov
and
mov
and
fdivr
add
pop
add
push
(bad)
fisubr
dec
ja
sbb
mov
xor
sub
push
mov
cmp
int
xchg
pop
dec
movs
mov
mov
pop
push
test
not
cdq
jle
cmovb
es
jo
pop
out
push
out
stc
(bad)
adc
pop
sahf
add
or
jae
pop
mov
jp
fisubr
cmp
fcom
movs
loope
adc
pop
jge
push
jp
xor
(bad)
cmp
int
adc
and
aas
mov
sahf
and
pop
pop
xlat
repnz
(bad)
or
sub
ds
(bad)
push
pop
adc
mov
mov
and
scas
outs
adc
jg
dec
sbb
pop
imul
or
mov
mov
(bad)
inc
sub
out
retf
je
jae
pop
mov
cmp
enter
dec
out
xchg
jno
scas
adc
inc
cmp
sub
and
pop
imul
xchg
outs
jg
nop
or
jnp
scas
mov
(bad)
mov
push
or
push
lock
dec
test
dec
out
mov
arpl
add
sub
fsub
push
cmp
(bad)
scas
jbe
mov
mov
adc
cli
add
jmp
fst
mov
inc
jecxz
fmulp
dec
retf
jmp
push
cs
xchg
cmc
iret
xchg
mov
mov
add
add
sahf
push
lock
nop
xchg
and
stc
hlt
push
add
mov
cmp
bnd
pop
aad
aad
lock
bswap
jbe
cmc
es
clc
or
mov
outs
jno
fsub
mov
adc
push
xchg
or
jae
aaa
fidivr
lahf
mov
jl
dec
sbb
and
inc
mov
mov
in
imul
psrlq
mov
xor
loope
dec
iret
mov
jecxz
push
jnp
out
or
dec
scas
mov
pushf
enter
popf
jb
sub
aad
out
pop
lods
shl
add
(bad)
xor
movs
xchg
mov
xchg
sub
movs
scas
or
mov
xor
sub
jae
pop
(bad)
test
scas
out
leave
neg
repz
pop
hlt
movs
and
cmp
(bad)
push
(bad)
loopne
and
ins
xlat
push
iret
lock
jns
rcr
adc
xchg
imul
inc
mov
cwde
inc
shl
add
xchg
aaa
loop
data16
cmps
sbb
jecxz
cld
or
mov
cwde
inc
shr
add
inc
out
add
push
call
xor
popa
fld
outs
jno
jge
cmp
cdq
leave
mov
movlps
push
pop
(bad)
pop
sahf
fbstp
dec
retf
mov
ins
scas
sub
mov
sub
(bad)
into
in
push
test
sub
mov
push
ins
fs
pusha
cmp
sbb
lahf
in
xchg
(bad)
sbb
fld
retf
jg
cs
daa
adc
mov
(bad)
xchg
sub
fs
cmp
and
mov
popf
pop
adc
(bad)
inc
mov
into
int
imul
out
in
inc
aaa
retf
cmp
cmps
push
and
jnp
push
xchg
loope
aad
es
retf
aaa
arpl
and
mov
into
or
ja
xchg
pop
jo
ficomp
jmp
ss
xchg
aad
daa
xchg
fst
cld
das
leave
mov
sub
inc
leave
inc
and
mov
mov
cmp
push
ins
xchg
test
(bad)
paddd
jb
jb
shr
jb
push
and
mov
fsubr
imul
fisubr
aas
inc
fsubr
arpl
stos
inc
or
add
shl
and
cmc
imul
xchg
cmp
test
jno
jmp
std
ds
les
sbb
dec
loopne
shr
inc
push
test
call
call
arpl
mov
sbb
or
or
mov
or
repz
fucom
movs
and
inc
div
in
mov
fsubr
sub
loopne
in
cmps
mov
mov
(bad)
push
je
xchg
jbe
lods
sub
pop
jle
mov
jbe
cwde
std
jb
pop
mov
pop
sub
fstp
sbb
ja
cmp
mov
retf
sbb
xchg
jg
cmp
adc
mov
bswap
cld
sbb
mov
icebp
ret
ins
fsubr
bnd
lea
or
adc
dec
clc
pop
ds
push
mov
xchg
fisub
adc
adc
pop
shr
push
sar
loopne
(bad)
push
cmp
adc
mov
test
push
mov
adc
ror
int3
lea
mov
sbb
pop
ins
ret
cli
and
aad
xchg
cdq
jns
jmp
pop
or
push
sti
mov
sbb
push
repnz
cmp
ins
cmps
jnp
jne
push
cwde
dec
lock
mov
pop
(bad)
dec
mov
inc
cmp
out
cwde
dec
pop
mov
xchg
add
xor
loop
sub
enter
pop
dec
nop
and
ins
mov
imul
addr16
cli
mov
shr
(bad)
cwde
jle
and
cmp
icebp
xor
mov
mov
pop
mov
and
jae
jmp
cmp
fs
push
lea
push
fidivr
sub
clc
add
jnp
ds
repnz
mul
mov
dec
push
adc
test
cs
and
fwait
pop
mov
bound
push
inc
mov
retf
mov
inc
call
mov
call
(bad)
ficom
enter
adc
int3
jno
sbb
xlat
scas
xor
in
dec
push
rcr
inc
cmp
outs
rcr
fdivr
dec
jb
push
push
rcl
add
adc
loopne
and
add
and
repz
mul
sbb
adc
sar
in
fidiv
push
into
mov
imul
adc
add
push
lea
clc
mov
lea
xor
out
push
pop
and
(bad)
jns
lods
sbb
jne
push
mov
cmc
clc
mul
inc
(bad)
jns
neg
test
or
outs
xor
pop
bound
fcom
ret
jmp
fidiv
in
mov
and
sar
popa
mov
jmp
add
aad
sub
dec
pop
js
sub
push
cdq
sbb
inc
iret
pusha
sub
sub
pop
enter
xchg
pop
sbb
mov
sbb
sub
dec
cld
arpl
(bad)
push
inc
sti
jo
es
aad
fldcw
and
sbb
fcmovb
push
fwait
pop
xor
daa
pop
sti
pop
or
pop
movs
add
or
data16
test
and
dec
movs
and
movs
add
push
lahf
jl
out
sub
ds
lahf
mov
rol
arpl
pop
cmps
dec
inc
lea
test
ret
outs
or
sub
dec
fwait
subps
lods
movs
push
add
push
adc
fbld
(bad)
retf
inc
xchg
lods
movs
scas
adc
cwde
ret
add
pop
pop
mov
lock
dec
inc
xor
add
imul
addps
mov
scas
mov
retf
push
mov
cmps
(bad)
data16
ja
cld
aas
cli
xchg
aad
int
scas
adc
xchg
leave
das
inc
enter
inc
sub
adc
pop
imul
or
(bad)
dec
loope
js
add
loope
xchg
sub
ins
shl
pop
les
push
jnp
or
js
arpl
inc
inc
adc
lock
ret
mov
jp
bound
push
jmp
test
movs
stos
mov
fld
xlat
mov
xchg
sub
dec
paddusw
cld
jmp
adc
lea
mov
lea
mov
push
mov
sti
leave
hlt
pusha
jbe
(bad)
fisub
fdivr
pop
inc
push
sahf
outs
mov
cmp
pop
sub
pop
aad
ficom
js
sti
(bad)
jge
sbb
and
add
(bad)
sub
or
stc
cmps
jb
add
mov
sar
retf
push
shl
pop
inc
xor
xchg
mov
ror
lock
cmp
js
jns
into
(bad)
push
dec
in
dec
mov
sbb
loop
leave
in
add
mov
adc
cmps
sti
push
out
ds
ja
xor
mov
sub
add
cmp
adc
jae
mov
sbb
dec
pop
add
imul
sub
ret
lock
retf
pusha
aam
lahf
cmp
cmp
out
shl
cmps
or
inc
jb
jmp
pop
ret
dec
xchg
pop
psubsw
int
sub
jp
sbb
adc
and
jno
pop
push
add
add
cs
fisub
mov
ins
std
(bad)
ret
jg
sbb
test
call
cli
mov
fld
ins
pop
pop
jl
push
repz
jl
aaa
lock
push
push
cmp
(bad)
xchg
xlat
out
lock
sbb
int3
xor
(bad)
movs
xchg
into
mov
jge
dec
mov
jae
lock
loop
cmp
push
dec
push
cmp
test
pop
and
in
cmps
stos
shrd
int
sbb
das
sub
call
add
imul
scas
adc
data16
mov
mov
mov
push
jnp
stos
add
mov
or
mov
into
rcl
sbb
daa
(bad)
imul
cld
pop
mov
dec
les
ficom
movs
dec
cmps
in
retf
ds
pop
out
fsub
push
push
pop
xchg
inc
int
cmps
fs
stc
jb
loopne
jecxz
retf
sub
imul
lock
scas
fistp
or
push
inc
or
add
dec
mov
inc
repnz
sub
fs
out
jo
and
dec
or
push
jo
leave
icebp
pop
pop
(bad)
mov
xchg
aas
fwait
stos
inc
mov
add
and
adc
in
pusha
lea
dec
ins
ret
dec
imul
fist
inc
imul
xor
jns
out
or
rcr
and
dec
xchg
mov
or
ins
xchg
mov
xlat
cmp
push
mov
sbb
fidiv
push
inc
test
pushf
ins
(bad)
lock
push
and
ins
pop
add
or
cs
sbb
cmp
adc
ss
jno
adc
dec
mov
in
shl
and
adc
inc
nop
pop
add
sar
pop
pop
push
in
mov
les
sub
push
pop
mov
shl
(bad)
sub
popf
stos
push
popa
and
repz
ins
and
fld
lahf
adc
add
or
xor
les
cld
pop
call
addr16
test
stc
pusha
adc
lock
ins
imul
int3
daa
mov
mov
ret
neg
or
adc
xchg
push
test
jecxz
int3
inc
bound
lahf
test
scas
bound
dec
xchg
and
sub
loope
jne
mov
shl
cmps
mov
retf
sub
(bad)
icebp
or
out
cmp
inc
pop
mov
sub
and
mov
pop
test
aas
popa
in
shl
out
or
cdq
es
cdq
imul
mov
fcomp
stc
les
add
jle
test
stos
call
pop
bound
or
adc
add
rol
aam
mov
mov
jnp
mov
shl
dec
enter
dec
dec
inc
push
pop
push
push
sar
mov
sbb
in
jl
jb
punpcklwd
and
jle
(bad)
loope
js
sub
mov
pop
mov
push
in
xor
in
mov
ja
push
fsubr
push
mov
lahf
mov
push
out
sub
xor
je
mov
jne
nop
or
xchg
adc
or
cld
push
scas
imul
shr
movs
vpandn
test
cmp
loop
pop
mov
fs
sbb
repnz
lock
pop
jmp
rcl
vaddps
push
push
cmp
gs
loopne
xlat
jns
aad
iret
into
rcr
jbe
fs
scas
mov
fst
mov
fisttp
dec
mov
fneni(8087
fstp
cmp
mov
sbb
loope
push
(bad)
mul
les
out
fs
inc
es
stos
push
sub
cmp
push
cs
and
pop
pop
lea
gs
pusha
outs
or
loope
aaa
mov
fcom
aas
rcr
hlt
pop
arpl
mov
imul
xor
cwde
inc
jae
jmp
sub
imul
call
and
push
pop
stos
add
fstp
gs
xor
jo
out
loopne
mov
pop
ficomp
stos
(bad)
mov
mov
mov
push
sub
mov
pop
push
ret
and
push
shr
outs
sub
out
stc
push
add
xor
push
inc
sub
es
cmp
shr
std
adc
mov
movs
and
outs
cs
adc
ror
adc
outs
iret
jle
sets
lahf
jp
dec
je
je
adc
cmp
or
hlt
cmp
cmp
lock
mov
popf
(bad)
and
inc
fs
or
pop
pusha
cmps
xor
or
mov
adc
pusha
jl
sti
mov
fcomp
retf
adc
mov
lea
pop
inc
mov
mov
in
inc
and
daa
leave
loop
jp
add
in
mov
adc
fist
inc
push
lods
xor
mov
stos
out
es
xchg
or
push
push
sbb
push
test
jno
push
iret
mov
stos
inc
inc
adc
aam
cli
add
pop
aad
sbb
(bad)
pop
(bad)
push
sbb
and
xor
clc
test
cs
stos
cld
test
in
in
stos
sti
mov
inc
out
inc
push
push
or
mov
shl
popa
cli
push
mov
xchg
xchg
pop
iret
outs
mov
in
and
sub
jns
int3
adc
sar
jmp
cmp
leave
(bad)
hlt
(bad)
xchg
stc
(bad)
scas
pop
jo
pop
add
cmp
das
mov
mov
js
push
addr16
sti
scas
ret
mov
and
std
push
mov
sub
add
ja
call
cmp
out
jge
and
push
ret
mov
mov
arpl
repz
mov
mov
mov
pop
push
fimul
dec
mov
xchg
pop
and
icebp
mov
push
mov
jl
jno
jne
hlt
jo
sbb
aaa
je
(bad)
and
mov
inc
xchg
sbb
sar
cmp
test
sbb
outs
dec
push
jmp
dec
je
(bad)
mov
mov
in
hlt
std
jae
ss
xchg
(bad)
shr
pop
inc
adc
rol
inc
cmp
inc
fldcw
lock
hlt
leave
xchg
test
dec
ins
ja
dec
outs
adc
ret
adc
sub
outs
test
loop
sbb
sbb
ins
sbb
pop
fistp
rcr
xor
dec
pop
scas
test
cdq
mov
hlt
out
inc
pop
ret
mov
shr
mov
push
jae
pop
ret
and
mov
les
cmp
pop
inc
addr16
mov
sub
inc
out
sub
pop
push
les
(bad)
fist
push
push
pop
xchg
or
js
push
jg
sub
mov
adc
or
mov
fstp
push
xchg
shr
fprem1
ret
gs
jne
push
shl
pop
pop
cmp
cld
pop
and
std
jg
lds
or
in
xor
xchg
and
mov
xchg
mov
call
pop
add
mov
pusha
rcl
and
jmp
jbe
mov
call
jge
(bad)
outs
sbb
push
lock
push
or
mov
(bad)
add
fisttp
fisttp
xchg
fld
xor
inc
lods
fwait
sbb
pop
dec
adc
in
add
add
shl
xchg
xchg
stos
push
mov
pop
inc
pop
mov
jno
stos
jge
and
adc
mov
das
mov
jg
cmps
mov
in
cmc
xor
jns
push
cmps
xchg
retf
cmp
xor
jnp
push
add
sbb
pop
inc
add
outs
jge
test
sub
es
xchg
cmp
das
stc
out
cmc
dec
inc
inc
xor
ret
lahf
stc
dec
cs
dec
xor
xchg
loopne
cmp
rcr
fs
(bad)
stc
sar
add
retf
pop
shl
jg
sar
sbb
sbb
les
cmp
xor
fnstsw
add
push
and
jb
aam
add
repnz
xchg
push
xchg
mov
adc
push
mov
pop
add
cmp
xor
cwde
mov
add
pop
inc
or
scas
pop
pusha
sar
cmp
xchg
ds
inc
pop
add
lods
fsubr
in
daa
dec
ins
out
fmul
push
cmp
popf
mov
and
js
mov
nop
jl
xchg
push
(bad)
jmp
jmp
xchg
outs
lea
movs
lds
mov
cmp
in
shl
dec
mov
call
je
add
pop
js
test
sub
sub
sbb
in
add
dec
mov
cs
xchg
push
out
jne
mov
(bad)
jns
jmp
stos
(bad)
out
mov
push
xor
xchg
popa
xor
aaa
inc
loope
mov
shl
pop
sub
je
add
xor
add
repz
and
and
adc
push
(bad)
xor
ja
in
repnz
fsub
inc
dec
out
xor
xor
xor
inc
mov
or
je
lods
arpl
jno
lock
fst
je
mov
lea
pop
mov
(bad)
add
ret
push
xchg
dec
cmps
mov
es
dec
popf
adc
ins
sub
(bad)
mov
inc
xchg
out
pop
ret
pushf
call
xchg
hlt
dec
xchg
jne
imul
pop
into
jno
and
pop
push
mov
(bad)
cmps
push
ss
fidivr
xor
les
jo
pop
shr
jnp
stos
nop
add
loope
fnsave
jle
adc
xlat
les
adc
cld
adc
mov
cld
pop
dec
cli
out
shr
sar
jecxz
(bad)
fstp
adc
cmps
dec
cli
out
fld
mov
add
sbb
mov
rcl
xor
jmp
cmc
call
aam
mov
xchg
dec
sahf
in
cmps
mov
pop
lods
std
mov
sub
xabort
data16
push
leave
jno
adc
and
dec
adc
and
xchg
or
test
cmp
fst
mov
inc
mov
xchg
or
les
aad
movs
cmp
push
jns
mov
xor
pushf
mov
and
inc
dec
lods
mov
ret
jbe
mov
sub
xor
cdq
dec
mov
nop
fisttp
sbb
popf
or
dec
and
pop
popa
add
jb
lea
lahf
fist
aas
into
mov
out
push
je
or
ins
or
in
mov
or
dec
test
in
out
jmp
loopne
mov
jmp
push
gs
jmp
movs
push
xchg
mov
int
hlt
jmp
test
push
retf
inc
sub
sbb
jmp
push
ja
in
adc
xor
mul
ror
ins
mov
pop
push
iret
mov
jmp
add
out
xchg
mov
pop
add
sbb
out
cmc
dec
sbb
movs
mov
(bad)
es
cmps
js
jns
in
shl
retf
push
sbb
xor
mov
cmp
in
adc
test
sbb
(bad)
and
add
dec
mov
movs
outs
jge
bound
in
shl
mov
data16
or
and
test
or
setle
neg
xor
stos
jl
cwde
popaw
mov
sub
push
imul
xor
and
cdq
xor
mov
jle
or
jno
push
in
fld
push
xchg
sub
frstor
push
fild
(bad)
or
mov
(bad)
dec
ins
or
bnd
int3
add
or
(bad)
pop
xchg
xchg
jl
push
out
ss
pop
mov
pop
jecxz
xchg
arpl
aad
dec
lea
pop
pop
fisubr
std
test
stc
jb
aam
jns
aas
(bad)
jmp
sbb
das
rcr
out
dec
jmp
aaa
adc
xor
out
bound
inc
dec
sbb
mov
push
push
pop
fld
pop
mov
xchg
xchg
pop
mov
pop
call
dec
cmp
enter
scas
mov
xor
into
sbb
stos
jl
out
mov
mov
xor
mov
adc
xchg
frstor
jne
dec
dec
dec
fisub
sahf
inc
adc
sub
xor
or
sub
test
mov
xchg
(bad)
jmp
lea
loopne
mov
inc
lea
xlat
std
ja
imul
cld
inc
push
outs
dec
add
cdq
push
xchg
jle
mov
pop
sub
arpl
leave
mov
push
js
inc
xor
lods
fs
clc
movs
iret
das
popf
add
test
mov
adc
mov
inc
outs
outs
lods
jge
and
xor
fld
repz
add
aad
mov
inc
popf
or
cmps
pop
push
dec
sbb
cmps
hlt
inc
sub
lods
ins
pop
xlat
cs
mov
mov
popf
inc
pop
bound
lock
ret
repnz
popa
pop
(bad)
jmp
ja
push
into
in
(bad)
stos
pop
jae
or
int3
push
retf
mov
(bad)
adc
in
aam
cmp
push
inc
mov
into
mov
xchg
fisttp
mov
fnstenv
jp
and
jl
inc
jmp
int3
cwde
fld
sub
movs
pusha
xchg
(bad)
sbb
repz
jns
jns
add
jge
xchg
mov
sub
imul
cmp
ret
(bad)
xchg
fisttp
iret
rol
imul
mov
(bad)
and
add
cli
test
push
daa
arpl
cmp
test
and
push
mov
xchg
sahf
ret
cmp
cmp
retf
adc
push
jno
pop
adc
icebp
sahf
daa
jo
leave
out
test
les
leave
sbb
mov
loop
xchg
xchg
pusha
sti
lock
(bad)
jb
jmp
out
dec
ins
inc
movs
scas
push
mov
imul
mov
or
sbb
imul
cld
ret
adc
(bad)
mov
fadd
addr16
je
ds
in
push
jl
push
xor
out
mov
rcl
push
mov
bound
cmps
pop
pusha
retf
push
sub
push
outs
leave
push
(bad)
shl
mov
jae
icebp
cs
cmp
loop
out
mov
inc
or
add
cmc
mov
popa
add
xchg
pop
cmp
fldenv
jo
mul
in
outs
fcom
leave
je
and
xchg
popa
dec
daa
jne
cld
ret
in
add
sahf
xor
or
or
dec
jecxz
adc
test
loope
xchg
xchg
xor
mov
or
fstp
mov
das
aad
add
stos
in
mov
push
inc
mov
out
rcr
fstp
cmps
jge
loop
lds
imul
sbb
mov
sti
(bad)
call
cli
cmp
mov
sub
das
dec
outs
sub
scas
dec
call
test
pusha
div
lods
in
add
fcmovnu
adc
lods
div
cmp
inc
test
inc
mov
xchg
and
in
popa
dec
mov
or
push
jecxz
xchg
mov
mov
das
dec
dec
sbb
mov
dec
push
add
mov
neg
fst
ja
fwait
loope
xlat
push
push
sub
dec
shl
(bad)
mov
cli
inc
or
fmul
sbb
or
xchg
or
push
push
xor
push
add
and
notrack
inc
cdq
mov
jge
xor
jmp
retf
fucom
lds
xchg
push
add
fistp
xor
cs
imul
mov
push
clc
js
pusha
sbb
xlat
loopne
fcom
cmps
out
sbb
mov
or
in
and
jo
fsub
push
sbb
fstp
enter
jo
xor
ss
int
fucom
ins
ss
aam
in
ret
idiv
jmp
mov
nop
mov
push
pop
pop
stos
aas
xchg
cmp
xor
add
je
(bad)
pop
sbb
les
jge
pushf
loop
sbb
ins
sbb
int3
leave
fwait
shl
and
pushf
sub
shr
shl
push
fcom
mov
sbb
icebp
daa
repnz
loopne
sub
fsubr
fstp
(bad)
jp
xchg
or
les
lea
inc
std
fs
jp
push
pop
mov
mov
cmp
jle
stos
cwde
gs
push
stos
ins
dec
inc
movs
aam
call
std
push
cdq
add
aad
adc
pop
xlat
add
adc
stos
xchg
adc
xchg
lods
sbb
inc
sbb
mov
xchg
jae
call
xor
xchg
add
jb
sub
pop
fild
xor
xchg
outs
xchg
sti
mov
xchg
adc
pop
pushf
push
pop
inc
(bad)
ret
loop
pop
cmps
aaa
cld
rol
sbb
or
push
mov
outs
jmp
jp
xchg
xchg
sub
jnp
cs
sbb
movs
mov
mov
stos
(bad)
jae
rcr
jmp
sbb
fs
shr
xchg
push
std
lock
sub
test
pop
and
mov
fild
cmps
in
in
mov
mov
fst
shl
xchg
and
sahf
jp
cmp
movs
mov
rol
lods
xchg
sub
mov
push
sub
mov
stos
fwait
adc
mov
fimul
neg
push
cld
sbb
leave
dec
mov
cli
pop
xor
sub
pop
jno
lahf
mov
fisttp
adc
add
mov
fild
mov
sar
sub
adc
fld
scas
aad
rcl
jge
xchg
adc
sub
pop
iret
jecxz
movs
lods
cmp
and
lods
mov
and
lock
add
stc
mov
jg
scas
in
addr16
cdq
std
into
repnz
loop
je
mov
cmps
push
imul
lods
jne
fwait
sti
ret
les
mov
lea
ror
mov
jecxz
xchg
lds
mov
out
dec
xchg
in
jecxz
sub
outs
cmp
imul
shr
ds
fcmovnb
(bad)
xor
push
fdiv
shl
lods
into
fidiv
repz
in
lea
les
or
or
stos
jns
inc
jb
mov
or
icebp
pop
repz
sub
mov
xlat
cmp
inc
pop
xchg
add
cli
addr16
sub
stos
pushf
je
cmp
ins
retf
sub
add
push
fnsave
out
test
cmp
in
push
add
push
mov
mov
js
cwde
not
ret
mov
mov
ficomp
call
enter
sub
inc
dec
les
ja
or
test
les
pop
test
js
cmps
imul
movs
jnp
std
push
sbb
push
outs
psubsw
fwait
mov
mov
add
and
inc
ret
test
sub
pop
dec
ss
in
test
and
in
mov
div
add
pop
ret
popa
mov
(bad)
mov
dec
out
call
jnp
cmp
scas
sbb
sahf
lea
xchg
dec
mov
push
mov
ins
xor
lods
(bad)
mov
xor
mov
sbb
jmp
push
jecxz
dec
popa
pop
out
jnp
push
and
mov
outs
mov
inc
test
imul
inc
cdq
and
test
loope
ins
ins
jae
mov
jae
adc
ret
push
call
loopne
push
pushf
adc
mov
sar
call
stos
push
xchg
and
loop
fcom
mov
add
cmp
movs
push
mov
enter
neg
js
lods
adc
ror
repz
sar
or
aad
les
jb
lahf
mov
xlat
stc
cli
mov
sub
(bad)
fild
xchg
jle
add
pusha
int
jecxz
dec
jmp
mov
cmp
out
mov
sub
pop
ja
adc
cli
cmps
xor
sub
stc
stos
sub
mov
sbb
dec
or
test
mov
adc
xchg
and
add
push
add
(bad)
ret
sub
pop
icebp
ins
daa
jae
call
sbb
rcl
js
(bad)
xchg
cld
mov
pop
adc
pop
(bad)
push
pushf
imul
imul
pop
sbb
mov
xchg
jge
mov
fsub
inc
retf
or
cld
dec
cld
in
inc
push
jmp
push
pusha
mov
jno
cmc
test
out
or
cmps
sbb
lea
test
cmps
je
iret
test
sub
in
dec
retf
pop
test
pop
mov
sbb
outs
test
lods
icebp
cmp
lock
mov
sahf
push
inc
mov
push
scas
sbb
stos
add
addr16
push
inc
dec
enter
push
sbb
push
fisttp
mov
dec
sub
aas
or
jmp
xor
pusha
ja
xchg
test
movs
rcr
or
mov
outs
push
and
je
mov
lock
sub
pop
cmps
sti
sti
not
fldcw
aad
daa
test
xchg
add
js
aaa
test
in
sub
int
test
and
push
out
mov
mov
xor
cmp
inc
pusha
pop
cmp
jnp
pop
ds
inc
popa
adc
ins
stos
stos
call
test
or
test
mov
clc
(bad)
sub
push
ds
cmps
xor
dec
ins
lock
dec
and
inc
pop
shr
lods
add
int3
ret
js
icebp
stos
add
push
(bad)
or
xor
xchg
(bad)
lock
nop
dec
sbb
mov
cmp
sar
and
pop
cld
aas
loop
jae
push
imul
mov
ss
shl
xchg
cmp
aas
mov
dec
jg
or
mov
les
int3
clc
add
and
ins
cmp
pusha
sahf
mov
imul
loopne
imul
imul
jnp
or
lahf
add
int3
xor
add
xchg
xlat
add
scas
sub
cdq
and
test
mov
sub
movs
push
ret
jmp
popa
dec
push
cmp
stos
cmc
cdq
outs
mov
add
sub
(bad)
(bad)
test
imul
cs
push
leave
jmp
xchg
jge
enter
xor
pop
mov
add
mov
sub
repz
lods
push
mov
pusha
push
dec
mov
gs
test
or
jmp
mov
lahf
aas
or
and
in
call
repnz
adc
rol
push
mov
pop
jp
imul
aad
inc
mul
shl
and
jnp
mov
(bad)
out
mov
cld
jmp
int3
or
idiv
loopne
dec
out
sub
xor
test
dec
push
and
scas
push
dec
loopne
inc
or
mov
adc
loopne
add
dec
fwait
push
jae
(bad)
sub
dec
mov
xor
aam
(bad)
xchg
sbb
mov
xlat
loope
scas
mul
icebp
dec
inc
push
lea
int
jbe
imul
imul
pushf
mov
sbb
popf
outs
fs
dec
std
lods
adc
call
sub
int3
jge
fstp
dec
retf
ds
call
xor
fs
or
(bad)
cmp
mov
rcr
cli
jb
push
pop
cmps
inc
mov
lahf
or
test
pushf
(bad)
mov
in
inc
daa
fscale
movs
outs
pop
mov
test
dec
popf
in
lea
adc
push
in
aad
inc
adc
xor
imul
pop
adc
inc
or
and
and
test
cld
push
dec
test
jl
mov
out
(bad)
dec
inc
and
mov
adc
out
or
addr16
js
pusha
jb
xchg
xchg
xchg
mov
call
dec
pop
jne
out
bound
inc
mov
push
movs
inc
call
ret
or
mov
mov
inc
and
mov
stos
scas
xchg
or
movs
popa
fcomp
add
jo
cmps
inc
loopne
lock
xor
loop
sub
push
inc
xlat
jnp
xor
jb
(bad)
push
lods
(bad)
test
push
push
pusha
mov
or
mov
data16
jmp
ss
cmp
hlt
rol
sbb
pop
fwait
lods
and
clc
push
lods
rcr
inc
mov
retf
push
jno
lods
aam
(bad)
jp
dec
in
dec
fwait
inc
cs
mov
arpl
call
or
push
pop
cmp
shl
adc
fldenv
data16
stc
mov
lock
inc
ror
mul
rol
pop
dec
mov
(bad)
enter
shr
aad
(bad)
and
addr16
call
pop
or
mov
test
jg
ret
call
push
call
int
or
cmp
mov
add
aam
and
inc
popf
dec
xchg
push
or
jb
ds
add
cdq
and
inc
imul
rol
scas
stc
xchg
pop
jle
shl
popa
xchg
sub
mov
ins
ret
push
push
jmp
addr16
mov
call
or
jp
xor
sub
(bad)
xor
fisub
add
sub
js
or
mov
mov
xchg
aad
popa
stc
push
jp
repnz
cwde
or
in
mov
sbb
les
jmp
data16
and
out
adc
mov
test
xor
mov
cmp
cli
neg
jno
pop
jmp
outs
aaa
dec
in
test
push
cmp
push
and
js
mov
mov
gs
cld
scas
lds
out
mov
cmp
shr
xchg
fist
pusha
mov
scas
adc
sbb
push
cmp
sti
jns
mov
dec
in
add
into
icebp
sub
jns
out
push
xor
test
mov
lock
mov
dec
adc
lods
in
adc
sub
jne
call
jle
sbb
ret
loop
jecxz
cmp
fcom
call
cmp
xor
mov
sub
jo
ins
mov
in
int3
mov
dec
int
or
mov
push
inc
dec
in
dec
test
push
pusha
mov
sub
xor
test
stc
push
lock
sub
sahf
dec
xor
xor
jne
cld
and
xchg
add
sbb
movs
imul
ins
xor
xchg
mov
mov
movs
mov
mov
jge
jo
(bad)
out
mov
int3
pusha
sbb
sbb
or
not
sub
add
cmp
cmp
es
fldcw
test
jo
inc
movs
xchg
(bad)
cwde
fiadd
add
pusha
pusha
xor
xlat
(bad)
adc
xchg
push
dec
std
xchg
xor
adc
adc
out
std
cdq
or
aad
sbb
jo
xacquire
xor
sub
add
sub
or
repz
arpl
ret
sar
xor
in
mov
data16
sbb
push
fucom
sub
mov
mov
call
pop
clc
or
add
bound
fadd
adc
loope
mul
repz
adc
inc
cli
fs
mov
(bad)
iret
dec
gs
xor
scas
cmp
aas
xchg
movs
adc
loop
push
lahf
or
pop
lods
inc
in
or
inc
pop
loopne
jns
add
daa
cli
jge
loop
or
pop
ins
push
das
div
jo
inc
cmp
sbb
or
adc
pop
xchg
lea
stc
aad
loop
pop
dec
idiv
mov
stc
dec
iret
mov
pop
fcom
stos
dec
dec
jl
cwde
xlat
lods
shl
into
movs
mov
add
mov
ret
mov
mov
push
adc
sub
dec
aad
in
xchg
jb
or
ins
sbb
(bad)
xchg
ret
inc
std
mov
mov
xchg
mov
imul
dec
retf
sbb
inc
pop
adc
add
jge
pusha
push
jle
add
test
popf
outs
sbb
or
inc
mov
cmp
shr
pop
and
jg
cmp
add
or
test
outs
inc
ins
std
jmp
mov
shl
popf
inc
add
xor
adc
(bad)
xchg
pusha
add
repnz
lea
lods
ficomp
mov
lahf
imul
xlat
jge
mov
dec
mov
mov
jmp
mov
fst
jmp
mov
mov
sub
repnz
neg
ja
fs
add
sbb
xlat
neg
adc
hlt
inc
cmp
call
fisttp
dec
and
scas
leave
push
popf
hlt
adc
out
imul
sahf
ss
jne
push
dec
lock
fistp
lods
mov
push
and
or
jb
cmp
mov
cld
push
fabs
inc
sbb
mov
ret
ss
int
inc
adc
mov
mov
push
lods
xor
mov
rcr
popa
adc
mov
mov
in
mov
inc
mov
adc
push
push
in
fisttp
adc
cmp
jl
xchg
div
daa
xchg
clc
dec
ss
dec
inc
and
sbb
adc
or
les
test
sbb
xchg
mov
(bad)
jg
shl
jae
push
daa
adc
out
push
jmp
div
xlat
fsub
mov
adc
add
jb
dec
adc
mov
mov
cmp
retfw
imul
loope
push
rcl
(bad)
mov
test
cli
or
es
push
adc
sub
pop
cmp
sub
jp
jbe
jmp
push
pop
sbb
ret
dec
stos
jp
mov
sbb
shl
inc
xor
add
jmp
out
push
jmp
sbb
sub
jae
jl
add
sbb
dec
mov
out
xchg
inc
inc
mov
ins
stos
ins
and
pushf
dec
sbb
les
inc
xchg
rcr
into
and
xor
dec
outs
fadd
or
retf
inc
push
dec
sub
sti
stos
cmp
ret
lods
pop
add
call
xchg
jb
rol
pop
cld
lods
out
sub
add
ds
sahf
cs
jae
jl
scas
je
pop
cs
jl
icebp
imul
aaa
fisubr
mov
xor
push
mov
ror
mov
ret
mov
in
sub
daa
sbb
mov
lock
lods
cmps
xor
pop
push
inc
pop
shr
push
pop
enter
jae
rcr
push
ficomp
jle
and
push
pop
jb
mov
push
les
mov
sub
pop
fistp
inc
into
ins
popf
jge
shl
mov
jb
mov
or
push
fisub
sub
sbb
ins
and
data16
mov
cwde
icebp
sbb
jnp
inc
dec
mov
pop
sbb
inc
test
cmp
pop
fscale
push
daa
mov
shl
add
and
sbb
loop
(bad)
cmps
inc
fwait
cmps
mov
shr
mov
jne
xchg
or
(bad)
adc
ins
daa
pusha
pop
xchg
jge
int
mov
hlt
movs
pusha
mov
(bad)
lahf
out
lea
movs
loope
popf
jg
jg
push
das
lds
scas
icebp
es
mov
sbb
out
pop
rcl
mov
aaa
dec
cdq
movs
inc
add
jmp
mov
lahf
push
and
out
sub
mov
jne
(bad)
out
imul
(bad)
movs
sbb
out
outs
ins
jbe
push
test
fwait
ret
adc
xchg
jp
div
pop
mov
call
outs
add
push
cmp
mov
into
(bad)
in
push
add
in
xchg
aad
stos
add
inc
sahf
mov
shr
ja
ds
add
int3
jge
jo
lds
add
adc
add
cs
add
jo
add
mov
pop
adc
mov
xchg
mov
fldenv
jmp
lds
and
mov
pop
pop
push
pop
adc
push
xchg
jns
xlat
fisttp
xchg
(bad)
xchg
add
mov
fs
mov
jecxz
sbb
(bad)
test
add
ins
imul
retf
(bad)
dec
(bad)
mul
imul
nop
sbb
int
jns
sahf
fcom
cmc
push
and
imul
inc
mov
leave
pop
push
pop
mov
adc
popa
add
lahf
idiv
dec
sub
sbb
jno
(bad)
cmp
fcom
mov
ffree
repnz
xchg
mov
or
retf
data16
inc
mov
dec
xchg
xor
push
mov
jnp
sahf
push
cmp
outs
inc
ins
sbb
sti
sbb
push
push
sbb
mov
push
fldenv
fs
(bad)
sti
push
test
int
loop
cmps
mov
mov
sbb
lds
(bad)
jno
adc
xchg
popf
(bad)
xchg
add
(bad)
push
retf
or
loopne
hlt
psllq
cdq
xor
aad
test
add
fs
push
scas
jge
push
jbe
dec
pop
jge
mov
ins
bound
cli
pop
stc
push
mov
stc
out
dec
test
call
aam
xchg
lds
pop
fsubr
push
imul
jns
std
ss
mov
lahf
jo
call
lea
mov
pop
add
(bad)
stc
sti
fidiv
xor
sti
jnp
jae
iret
and
pop
lock
shr
mov
pop
push
lea
popf
xchg
mov
inc
out
push
xor
mov
pusha
and
movs
ds
fist
jl
jle
out
add
imul
and
test
das
jb
and
outs
dec
sub
shl
adc
push
jle
adc
fst
dec
push
daa
shl
sbb
out
mov
xlat
scas
xor
repz
icebp
push
xchg
adc
rcl
cmps
and
ret
cld
dec
mov
daa
repnz
cmps
xlat
mov
test
and
cdq
adc
dec
cwde
mov
mov
daa
inc
int
cwde
jge
fist
rcr
mov
mov
aas
lods
jle
xchg
lods
xor
or
lods
bound
or
js
sar
popa
gs
mov
hlt
adc
sbb
shl
adc
inc
or
cmp
fidiv
xchg
(bad)
call
mov
bound
daa
not
ficom
ins
mov
adc
lods
mov
push
mov
and
pop
mov
push
shr
mov
les
aaa
push
pop
cmps
in
loop
sbb
add
mov
(bad)
repz
pop
push
lea
mov
or
fsubr
and
pop
stos
push
scas
adc
test
icebp
xchg
xor
in
xlat
or
add
out
jecxz
out
stc
mov
jecxz
sub
inc
aaa
je
xchg
and
loop
stos
data16
pop
(bad)
gs
xor
cdq
je
call
iret
xor
hlt
mov
xchg
loop
push
xchg
lea
and
push
or
call
cmp
pop
xchg
aaa
(bad)
jge
aad
mov
hlt
cs
sbb
pop
mov
stos
repz
xchg
dec
and
or
mov
imul
xacquire
das
jns
push
add
add
inc
mov
or
pop
stos
data16
out
adc
popa
jae
div
mov
push
loopne
mov
cwde
xchg
es
sbb
push
pop
sbb
cwde
in
dec
mov
and
xchg
adc
aaa
pushf
and
rol
jmp
mov
adc
cs
std
leave
rcl
push
mov
in
mov
xchg
sbb
fs
jbe
outs
push
sbb
sbb
cmps
aas
bnd
fwait
lahf
push
fcomi
adc
jg
dec
xor
fstp
popa
dec
push
or
jmp
aad
dec
fild
pop
leave
push
fsubr
sub
cdq
jnp
xchg
cmp
aas
add
mov
lds
xchg
in
xchg
lahf
sar
cmp
loopne
addr16
push
popf
cli
shl
std
outs
adc
ins
cmps
js
inc
inc
or
fcmovb
bnd
sar
xor
ins
cmp
adc
(bad)
call
mov
lds
cli
(bad)
xor
ds
and
sbb
in
xchg
das
outs
nop
fs
addr16
or
dec
clts
pushf
or
sub
cdq
stc
inc
out
das
das
dec
lods
call
out
sbb
stc
inc
push
mov
push
cwde
jmp
push
and
push
arpl
(bad)
jns
mov
popa
jo
sub
imul
push
add
ret
sbb
push
cmc
add
iret
cs
(bad)
in
add
inc
int
or
cmc
jb
cdq
sbb
(bad)
push
data16
or
lods
mov
inc
jecxz
shr
lock
lock
jmp
test
lahf
(bad)
sbb
inc
not
sub
mov
fldl2e
repz
mov
jbe
jno
imul
mov
out
mov
dec
cmps
mov
out
cmps
mov
push
pop
or
stc
lds
mov
je
mov
imul
not
stc
out
in
push
push
(bad)
test
xlat
jg
movs
pop
xchg
and
sub
in
mov
mov
cmps
pop
inc
xor
imul
adc
xchg
mov
and
dec
lods
xchg
jmp
jae
or
dec
sti
ss
and
rcl
cmps
mov
inc
adc
add
dec
mov
test
cmps
shl
adc
pop
out
adc
inc
fsubr
imul
cmp
mov
out
pop
fnstsw
pop
dec
mov
inc
sbb
mov
sub
fisub
mov
(bad)
pusha
shl
pop
pop
mov
aaa
ret
fdivr
xchg
out
pop
and
or
xchg
mov
retf
sbb
out
dec
pop
(bad)
aaa
sbb
or
dec
retf
imul
ja
mov
push
mov
(bad)
outs
hlt
xchg
adc
fwait
std
or
add
xchg
popa
int3
inc
inc
inc
loopne
cs
jp
popa
push
std
gs
fchs
push
jne
(bad)
out
call
add
push
ja
int3
(bad)
fidivr
add
add
xchg
call
cmp
mov
sbb
cdq
mov
pop
loope
test
add
std
xchg
jns
pop
lods
idiv
out
cmp
movs
and
sbb
subps
inc
xchg
jnp
out
popa
leave
and
iret
std
mov
out
dec
mov
pop
and
xchg
xchg
addr16
(bad)
xor
push
in
mov
jo
das
push
daa
xor
data16
jo
leave
mov
jmp
rcl
xor
cmp
cld
dec
in
mov
imul
shr
push
mov
out
sahf
pop
bound
adc
xchg
mov
dec
sbb
and
js
fsub
jo
xchg
mov
js
(bad)
pushf
mov
push
push
or
inc
and
xchg
xchg
in
sbb
test
or
xchg
jno
sbb
xchg
test
mov
out
cmp
sbb
ds
mov
mov
pop
jmp
xor
cmp
adc
pop
and
jbe
into
sub
int3
adc
into
shl
fmul
adc
jne
xchg
pop
push
test
aaa
not
lds
mov
jae
pusha
stc
out
fbld
mov
loop
sub
add
inc
jno
add
jp
test
dec
jp
xor
movs
cmp
jg
addr16
cmps
push
mov
mov
int3
cmp
mov
add
dec
inc
add
out
adc
lds
in
cmp
out
fwait
adc
sbb
cmp
xor
leave
pop
int3
data16
cld
adc
xor
fdivrp
or
sub
dec
jmp
mov
stos
adc
clc
rcr
cmp
movs
stc
cld
pushf
gs
jbe
cmp
retf
mov
stos
jae
enter
jg
fchs
rcl
push
jno
lock
mov
xor
mov
inc
sbb
mov
addr16
mov
das
lods
into
xchg
cmc
aas
(bad)
lahf
out
fwait
movs
bound
mov
iret
or
mov
loopne
jmp
pop
das
sar
outs
xchg
push
pop
pushf
loopne
repnz
adc
sub
sub
sub
sub
adc
add
jl
fimul
pop
dec
dec
cmp
xchg
cmps
mov
out
adc
mov
les
pop
sbb
sub
xor
push
jmp
mov
push
fld
adc
jb
test
lods
or
rcr
cli
cmp
adc
or
loop
push
pop
imul
test
mov
inc
mov
cmps
leave
sub
rcr
(bad)
mov
mov
out
aad
cmps
imul
adc
inc
jmp
and
lea
inc
retf
cli
fild
inc
adc
in
movs
gs
popa
(bad)
out
sbb
outs
(bad)
cmp
stos
pop
dec
stos
shr
push
stc
repnz
call
out
cmp
cmp
jl
arpl
and
movs
stos
movs
and
and
lock
sar
loopne
xchg
sub
ins
ret
out
jns
mov
loopne
inc
mov
or
in
loop
loope
cmp
in
shl
push
adc
cmp
dec
add
lods
out
sbb
(bad)
sbb
nop
sahf
push
call
out
out
(bad)
int
push
mov
ins
cmps
push
inc
dec
shl
jl
(bad)
fs
adc
or
push
mov
and
xchg
xor
outs
xor
add
js
mov
ja
push
mov
and
xchg
mov
or
add
sahf
dec
(bad)
les
sar
inc
jnp
test
ror
jmp
int
xchg
mov
pop
les
cmp
pop
popf
cmp
scas
shl
or
sub
fsub
fidivr
(bad)
push
cli
mov
adc
arpl
rol
or
dec
sbb
mov
xor
cmp
imul
adc
dec
test
or
push
(bad)
std
lahf
sbb
inc
mov
outs
fdiv
les
pop
cwde
rcr
add
mov
inc
and
sbb
lods
sbb
xor
dec
or
pop
stc
out
cmp
sbb
adc
xchg
gs
dec
sbb
iret
gs
sub
test
in
enter
and
sahf
sahf
mov
xchg
add
addr16
jp
push
inc
cmc
sbb
push
into
add
push
sbb
sub
mov
push
mov
cmp
cmp
inc
and
(bad)
loope
fcmovnb
xchg
(bad)
(bad)
jmp
pop
jl
jecxz
mov
adc
(bad)
iret
aaa
mov
in
xor
mov
dec
push
pop
rol
jg
daa
push
sahf
scas
mov
sbb
es
lock
jne
je
aad
pop
inc
pop
or
cmp
jmp
imul
aam
mov
sub
pop
add
shl
test
adc
imul
sahf
inc
adc
imul
mov
xchg
fcom
test
pop
cmp
ret
pop
mov
out
shl
pop
cmp
adc
push
push
fwait
sub
dec
or
push
loop
adc
xchg
pop
into
xor
fldcw
iret
xchg
pop
mov
dec
mov
adc
jmp
pop
inc
imul
bound
stos
outs
movs
dec
mov
xor
jecxz
stos
push
adc
lock
cmp
call
cmps
fistp
imul
test
add
jae
jno
stos
cs
hlt
pmulhw
js
xchg
jle
sub
shl
push
or
aas
jb
sbb
pop
movs
pop
jg
imul
cmp
cmp
jl
fbstp
mov
fistp
clc
lea
les
in
fnstenv
jmp
leave
sbb
jno
xchg
inc
in
das
jae
loope
cmp
comiss
jecxz
je
sub
push
test
jne
jp
div
scas
inc
lods
jge
sub
ins
xchg
cmps
add
fstp
cmp
mov
(bad)
iret
xor
gs
mov
push
fnstsw
push
cdq
movs
bound
sbb
inc
xor
(bad)
mov
or
stos
icebp
sbb
out
or
dec
cmps
xor
jg
aas
test
test
xchg
(bad)
mov
int
rcr
imul
or
pop
add
inc
jge
push
cmp
ret
cdq
std
(bad)
inc
syscall
in
out
sub
mov
xor
(bad)
imul
sbb
sahf
push
mov
jno
cmp
inc
daa
ret
mov
jmp
and
(bad)
movs
in
fist
mov
(bad)
pop
lea
pop
cmps
sbb
sbb
mov
popa
(bad)
jmp
scas
stos
(bad)
imul
ins
sbb
xchg
xchg
add
or
shl
in
mov
nop
jno
clc
jo
push
into
jle
xlat
int
sar
outs
je
pop
(bad)
leave
mov
add
sar
aad
xor
and
fidivr
jnp
retf
lods
stc
call
in
je
sub
repnz
out
mov
(bad)
stos
xchg
nop
sbb
daa
xchg
or
aaa
bound
rcr
fst
xchg
call
pushf
gs
outs
or
push
add
jle
mov
xor
dec
adc
xor
mov
scas
lds
dec
inc
sbb
movs
xchg
inc
adc
jno
leave
cli
mov
mov
imul
mov
mov
ja
repnz
or
dec
and
das
jno
and
aam
xchg
pop
(bad)
int
sub
xchg
mov
jp
mov
pop
(bad)
(bad)
jmp
gs
push
xchg
push
push
cmp
call
iret
call
inc
adc
mov
xor
mov
(bad)
div
jg
jns
or
and
adc
sbb
fimul
addr16
inc
push
into
xchg
mov
outs
add
mov
rcr
out
out
aas
outs
scas
mov
push
or
mov
jae
sar
dec
shl
cmp
mov
mov
inc
mov
aaa
mov
in
enter
sahf
retf
mov
add
mov
cli
leave
fwait
lods
imul
pop
and
call
jae
add
dec
out
push
cs
loop
add
sub
fsub
lds
push
cmp
cdq
jge
in
cmp
mov
push
rol
sbb
aaa
cmps
mov
xchg
movs
outs
pop
or
fcmovnb
and
cld
ret
xchg
or
push
or
es
add
mov
repz
scas
xor
mov
fsubrp
pusha
pop
inc
mov
call
movs
outs
and
push
stc
pop
fs
dec
cmps
cmp
addr16
daa
je
jae
push
fsubr
push
(bad)
xchg
push
dec
stos
into
pop
test
ins
xor
shr
mov
cdq
mov
inc
cmp
xor
jge
outs
add
inc
add
adc
les
call
jbe
mov
sbb
xchg
mov
cmps
xchg
push
xor
jmp
adc
adc
add
loop
sbb
inc
or
mov
loopne
sbb
xor
jge
in
add
cmps
out
add
leave
and
mov
loope
popf
aas
fadd
in
and
and
rcl
mov
(bad)
aaa
mov
int
clc
mov
cmp
aam
push
mov
aam
int3
or
mov
scas
jno
mov
fs
repnz
mov
sbb
jae
mov
pop
cdq
jmp
cmp
dec
cwde
out
movs
dec
xor
lods
pop
imul
mov
data16
ins
mov
scas
imul
push
bound
cmp
mov
(bad)
lock
push
jg
aaa
aam
aas
(bad)
cld
scas
mov
movaps
pushf
jae
pop
jmp
xchg
aad
adc
inc
cmps
(bad)
xor
xchg
push
call
fwait
or
jo
jmp
jle
xchg
fwait
dec
addr16
inc
pop
xchg
inc
out
inc
adc
dec
(bad)
jae
out
mov
push
lods
iret
mov
xor
push
push
(bad)
out
popf
lds
xlat
call
mov
or
xor
inc
adc
popa
push
mov
xchg
mov
xchg
sbb
and
jp
pop
jl
and
fldenv
sbb
push
sbb
pop
jmp
adc
retf
sbb
pushf
retf
xor
stc
popa
mov
push
in
lods
xchg
adc
or
das
adc
test
or
mov
dec
push
sbb
in
xchg
jle
pop
ret
pop
aad
in
push
xchg
enter
int
sbb
or
mov
dec
xor
mov
mov
mov
mov
scas
jg
mov
jl
sbb
add
test
add
stos
dec
aad
ss
jmp
mov
or
repz
jne
xlat
fdivp
mov
jno
lea
fidivr
sub
mov
sar
(bad)
(bad)
xor
out
ja
fld
inc
push
mov
mov
nop
jle
mov
(bad)
pop
add
out
mov
(bad)
jnp
adc
jbe
cmp
neg
add
cmp
sub
scas
dec
outs
out
js
retf
arpl
repz
push
stos
pop
hlt
jmp
cmp
(bad)
enter
(bad)
xor
or
add
cwde
(bad)
int
enter
mov
shl
outs
mov
jo
jl
lahf
popf
mov
adc
popa
jmp
icebp
and
js
out
adc
add
add
(bad)
push
sbb
loopne
test
jmp
xlat
push
sbb
loope
popa
(bad)
mov
mov
jl
repz
xchg
outs
push
adc
lds
ds
sub
int
sbb
mov
das
fisubr
rcl
sbb
enter
pop
dec
test
ja
mov
hlt
mov
mov
in
xlat
pop
cwde
mov
jle
fsubr
xor
ins
scas
or
sahf
shl
imul
dec
jbe
add
add
stc
pop
xchg
nop
popf
aaa
or
push
test
cmps
bound
ret
in
cmps
clc
jge
aad
repz
out
sub
movs
sub
out
mov
mov
lods
xchg
dec
jns
mov
enter
repz
or
and
mov
(bad)
jg
and
push
xchg
inc
fild
jbe
gs
(bad)
cmp
out
ja
repnz
and
sub
pop
aad
pop
dec
(bad)
dec
cmp
xchg
jge
cmp
inc
ds
movs
aad
push
in
outs
xchg
aam
js
test
stos
movs
div
ja
inc
push
pop
push
and
sahf
das
es
scas
pop
jl
dec
outs
bound
(bad)
xchg
mov
xchg
cmps
inc
and
cmp
mov
out
test
sti
std
movs
mov
in
add
dec
lods
mov
shl
xchg
fnstsw
mov
hlt
rol
xchg
repz
sbb
pop
add
jno
xor
fst
dec
dec
or
pop
inc
add
inc
push
lds
cli
das
jns
push
inc
rol
push
push
inc
xor
jo
enter
cmp
loop
movs
loopne
cmp
inc
cmps
(bad)
jb
retf
pop
leave
jmp
adc
add
sub
rcr
imul
sahf
arpl
sbb
test
mov
or
or
add
pop
push
dec
es
(bad)
push
leave
gs
add
mov
dec
xchg
pop
inc
mov
jecxz
jb
addr16
or
lock
repz
or
mov
push
pop
loope
sbb
repz
(bad)
fcom
jnp
lods
inc
cld
and
pop
sub
mov
clc
inc
repnz
xchg
or
lods
mov
sbb
sbb
xchg
mov
je
inc
xchg
mov
(bad)
jb
push
mov
addr16
xchg
stc
call
jbe
call
pusha
adc
jecxz
loop
add
add
les
jmp
int
pop
push
xor
ret
mov
rol
cwde
or
test
sub
stos
pop
clc
mov
repnz
adc
jmp
add
inc
jno
cdq
mov
loop
outs
enter
inc
sti
cmps
clc
mov
loopne
cmp
repz
sbb
jno
bound
dec
dec
js
movs
loop
mov
fiadd
mov
enter
scas
int
retf
pop
adc
sbb
xchg
jge
jae
or
in
sbb
cdq
scas
mov
ret
sub
push
jmp
inc
daa
inc
xchg
stos
mov
mov
cli
mov
pop
mov
xchg
add
mov
xchg
jecxz
clc
jae
adc
adc
pop
mov
or
xor
in
fwait
or
push
dec
adc
nop
dec
mov
movs
pop
inc
dec
imul
lock
xchg
add
mov
fidiv
addr16
jnp
mov
mov
fucomip
test
inc
cli
xchg
mov
adc
outs
jle
movs
call
sub
and
je
ret
mov
bound
pop
or
in
dec
jbe
enter
and
cdq
movs
cmp
add
mov
xchg
xchg
shr
es
push
out
inc
mov
(bad)
call
movs
sbb
dec
call
dec
lods
popf
sub
call
es
and
mov
xor
jge
out
pop
(bad)
cmps
xor
add
shr
sub
(bad)
mov
sbb
and
cmc
and
jge
pop
hlt
pusha
fwait
dec
adc
pop
xchg
or
lods
es
cmc
icebp
push
adc
cmp
(bad)
neg
aad
pop
addr16
inc
cs
imul
xor
rcl
jge
fisttp
cmp
pop
cmp
imul
rol
jae
mul
xchg
lock
push
aaa
repz
adc
ss
pop
sub
jg
jne
mov
adc
fdiv
icebp
fdivr
imul
in
mov
mov
in
push
sbb
mov
mov
inc
add
mov
loop
inc
mov
mov
mov
inc
mov
jno
fcmovb
jmp
fs
sbb
dec
xchg
bound
fcomp
les
je
fimul
icebp
mov
mov
stos
pop
pop
mov
inc
call
jns
lods
test
cmps
xchg
mov
bound
push
std
out
inc
gs
setp
jb
xchg
cld
test
jns
aad
mov
pop
inc
or
ds
inc
jmp
pop
jmp
je
add
xchg
loope
cmp
jb
mov
add
add
enter
mov
lods
cmp
cmps
cmp
inc
cmp
mov
shr
les
(bad)
imul
es
add
and
add
mov
ja
mov
dec
js
bound
movs
int3
xchg
nop
add
shl
imul
mov
clc
mov
add
out
push
mov
push
mov
call
sub
sbb
cmps
sbb
pop
(bad)
mov
xor
inc
inc
push
pop
mov
int3
daa
cmps
out
pop
mov
mov
int3
mov
add
sub
pop
cwde
push
in
ds
imul
xor
mov
loop
(bad)
push
pop
inc
xchg
outs
inc
cmp
movs
add
mov
fiadd
scas
js
mov
jne
fwait
pop
retf
idiv
cmp
sbb
cld
cdq
push
mov
mov
sti
test
xor
push
mov
mov
loope
in
sysenter
into
retf
adc
pop
mov
xchg
xchg
cwde
sub
inc
test
or
or
mov
imul
pcmpeqw
call
popa
adc
imul
add
cmps
dec
es
int
dec
sbb
sbb
jle
dec
scas
das
push
js
scas
retf
xchg
call
dec
popf
stc
mov
in
out
lods
adc
in
hlt
sub
and
and
or
out
outs
xchg
mov
sbb
mov
push
mov
adc
cld
inc
cmp
aas
push
and
jg
lahf
iret
cmc
clc
xlat
sbb
lea
mov
pop
shl
out
mov
or
mov
movs
in
inc
call
inc
cmp
cmp
mov
mov
or
mov
mov
data16
movs
bound
iret
xchg
loop
mov
add
push
repnz
xchg
add
sub
or
dec
sbb
std
outs
rcr
jg
iret
movs
and
dec
push
inc
or
mov
sbb
jne
cmps
js
(bad)
jmp
add
mov
push
fcom
ins
dec
mov
jecxz
and
stc
or
inc
inc
or
xchg
lds
fwait
(bad)
leave
stc
loopne
mov
call
inc
xor
out
mov
add
jns
and
add
xor
scas
sub
scas
or
ss
(bad)
ds
dec
sbb
shl
lock
in
ret
pop
sahf
fnstsw
in
mov
shl
and
retf
xor
or
out
gs
loopne
add
jg
loopne
in
sbb
xlat
inc
jmp
repz
dec
adc
loop
adc
jmp
leave
ss
push
(bad)
mov
daa
adc
hlt
sub
xor
jp
stos
icebp
call
jae
popa
es
pop
gs
test
push
pop
repz
and
ins
xchg
bound
xor
retf
dec
jge
push
stc
fwait
push
adc
enter
sub
in
mov
ror
clc
push
inc
aaa
imul
xchg
xchg
sbb
cmp
shl
push
call
cmps
pusha
test
cmp
add
out
nop
shr
mov
mov
or
mov
cld
and
or
jne
or
ds
mov
call
add
sbb
push
add
pop
adc
cs
jg
in
aas
add
jmp
and
(bad)
mov
(bad)
(bad)
sbb
sub
(bad)
mov
into
inc
mov
sbb
popa
sbb
xchg
movs
icebp
lahf
mov
enter
mov
mov
in
jo
xchg
test
fadd
xor
fs
cmp
mov
fisttp
sbb
loopne
adc
xor
mov
sbb
jmp
mov
(bad)
call
or
cmp
(bad)
aam
jp
mov
mov
lods
and
sbb
inc
jbe
outs
out
mov
mov
movs
push
dec
mov
add
jae
(bad)
jae
imul
sar
cs
and
xchg
ins
out
jae
lds
pop
iret
and
add
add
xchg
popa
fs
mov
mov
and
xchg
xchg
sbb
mov
cld
xchg
ffree
sbb
call
pop
pop
int
sub
mov
clc
rol
mov
jae
ret
xor
cmp
mov
cld
in
int
jbe
in
sub
lods
mov
sub
retf
sbb
fld
lahf
jmp
leave
xor
jecxz
and
mov
xchg
out
dec
int3
and
mov
fwait
add
adc
pop
or
out
sbb
das
pop
dec
mov
or
or
shr
inc
xor
jl
push
inc
inc
call
(bad)
shl
xchg
pop
fmulp
je
sar
sub
aad
icebp
aaa
xchg
xchg
pop
sti
sbb
fld
pop
push
mov
push
mov
retf
xor
xchg
dec
mov
in
adc
aad
shl
sbb
js
(bad)
in
sbb
or
sub
mov
push
fwait
mov
inc
bound
pop
mov
clc
inc
adc
int3
jge
pop
lods
retf
adc
mov
in
mov
mov
sbb
fbstp
in
mov
sub
stc
xchg
out
ror
je
or
ss
imul
pop
push
mov
inc
stos
jmp
mov
push
jae
(bad)
or
add
into
or
sbb
sub
mov
leave
mov
push
test
nop
xchg
retf
js
sub
dec
mov
fmul
out
out
mov
stos
add
ins
int3
gs
stc
cmc
mov
push
ss
add
pop
push
stc
ret
imul
scas
add
mov
fidiv
push
inc
(bad)
jmp
stos
dec
ret
call
mov
sbb
cmp
(bad)
fnstcw
hlt
stc
and
nop
daa
fadd
mov
ror
push
scas
stc
fwait
xchg
mov
les
rcl
or
movs
inc
adc
mov
mov
ffreep
fistp
div
fstp
call
dec
push
and
xor
mov
(bad)
jo
and
shr
in
xchg
xchg
hlt
mov
mov
stc
add
mov
sbb
test
pushw
pop
fild
popf
loopne
pop
cmps
adc
lahf
cmp
(bad)
pop
std
push
xchg
add
pop
cmp
ret
mov
pop
push
js
aaa
loope
mov
mov
xchg
xchg
jno
scas
mov
jne
pushf
loopne
mov
imul
push
inc
dec
sbb
xor
mov
fadd
mov
xchg
ins
into
fsubr
inc
mov
dec
ja
mov
sbb
dec
jno
jmp
and
fisttp
fcom
ret
mov
mov
mov
dec
cmp
lds
push
cmp
add
mov
inc
pop
inc
sahf
scas
and
xchg
test
xor
(bad)
jnp
add
ret
out
imul
fwait
arpl
jecxz
cmp
inc
jno
mov
popf
stc
jns
cs
jl
(bad)
cs
repnz
or
pushf
leave
push
into
stc
test
aam
cmp
add
or
push
and
cmp
mov
mov
mov
push
adc
mov
dec
bound
xchg
push
cdq
mov
popw
push
push
clc
cmp
mov
mov
sub
test
popf
xchg
pop
imul
loopne
stc
out
(bad)
jns
jne
lods
push
pop
mov
lea
call
push
sub
(bad)
jmp
dec
test
cld
adc
dec
dec
stos
mov
lods
jbe
sbb
jae
dec
push
fldenv
inc
cmp
pcmpgtw
jg
jmp
sbb
(bad)
(bad)
cmp
or
out
dec
mov
cmp
add
into
xor
add
mov
dec
sub
jg
and
pusha
fdiv
pop
jmp
daa
mov
pop
inc
pop
fnstsw
loope
aad
dec
enter
popa
sbb
fstp
or
or
retw
call
loope
jns
fsubr
mov
(bad)
fild
loop
lods
adc
shl
mov
out
out
mov
shl
push
fimul
jle
out
cmp
ret
mov
add
push
out
mov
and
sti
pop
ret
or
mov
push
ficomp
mov
push
mov
(bad)
cmp
dec
pop
jge
pop
in
iret
icebp
cmp
or
mov
push
mov
dec
addr16
test
pop
cli
and
mov
call
into
adc
nop
retf
jno
icebp
pushf
outs
in
push
adc
stos
ret
pop
mov
dec
sub
cli
xor
xchg
cmps
inc
arpl
imul
and
inc
imul
scas
xor
add
sub
movs
xor
ss
stos
mov
(bad)
mov
ja
jbe
loop
jecxz
or
or
add
ins
dec
pop
dec
lea
push
sub
dec
int
cld
in
dec
sar
mov
aas
or
jg
or
rcl
lds
iret
dec
add
ret
jge
fild
lea
test
xor
outs
jmp
cmps
xor
dec
outs
cmp
mov
ret
pop
add
lock
pop
ds
sub
clc
jl
out
hlt
outs
xchg
imul
(bad)
test
repnz
cmp
cmc
add
inc
ss
xor
or
(bad)
out
sahf
lds
jmp
mov
jmp
sub
scas
cdq
mov
shl
push
jp
dec
pop
add
pop
loopne
sub
lds
and
imul
sub
cmp
mov
fs
jle
push
leave
cld
dec
add
inc
mov
(bad)
pop
pop
jns
ins
mov
cld
pop
jb
lahf
in
lea
mov
dec
movs
adc
and
out
pop
fwait
mov
pop
mov
xchg
mov
sbb
pop
inc
ror
jl
popa
popa
inc
pop
in
adc
jp
out
not
push
adc
aam
sub
loope
add
mov
call
pushf
aas
and
fucomip
dec
inc
aas
iret
jns
jno
pop
out
test
cs
mul
dec
adc
jb
xchg
repnz
push
sub
adc
mov
outs
push
lods
hlt
test
mov
fstp
out
daa
dec
adc
mov
nop
rcl
outs
lock
imul
cld
sbb
xchg
inc
sub
fsub
cdq
lods
fisubr
jp
or
into
mov
nop
mov
out
icebp
mov
push
pushf
sbb
add
and
and
test
sti
(bad)
ret
jne
cmp
arpl
or
xchg
lods
popa
or
mov
dec
pop
and
push
mov
in
jo
fadd
outs
jbe
mov
inc
pop
stos
cmc
cmp
mov
ins
sbb
(bad)
mov
je
jl
ss
push
mov
mov
mov
call
sbb
stos
xchg
or
outs
push
pop
xchg
mov
sti
and
push
mov
cmp
mov
ret
cmp
retf
adc
ror
push
push
adc
shl
inc
sar
shr
push
in
jmp
lea
pop
retf
pop
hlt
test
outs
in
fisttp
add
call
cs
lea
cmp
mov
mov
repnz
or
sub
je
stc
push
and
push
pusha
test
ret
cs
and
dec
pop
xchg
je
adc
sti
xor
int
mov
popa
jmp
shl
sbb
scas
sbb
add
mov
pop
paddq
jno
mov
ins
cmp
clc
and
in
jne
mov
leave
pop
sub
pop
xor
test
lea
sbb
xchg
jns
dec
and
fidiv
nop
iret
sub
popa
push
and
jg
out
fwait
mov
pop
jmp
jae
sub
dec
movs
sub
sti
test
mov
dec
xchg
out
pop
(bad)
adc
dec
xchg
ret
ret
data16
xlat
mov
mov
add
ins
movs
lods
jnp
iret
mov
mov
push
loopne
sbb
(bad)
cmp
dec
jmp
push
mov
sahf
cdq
mov
jno
stos
xchg
das
(bad)
pop
push
sahf
mov
push
xchg
rcl
in
pop
nop
outs
xor
lock
stc
arpl
das
arpl
or
cdq
jns
js
add
xor
test
(bad)
pop
and
adc
shl
xchg
aaa
xchg
pop
stos
sbb
imul
int3
std
jle
pop
das
add
push
xor
mov
ins
js
adc
cmp
lock
pop
bnd
stos
in
mov
scas
inc
into
pop
(bad)
aaa
xlat
xor
add
or
pop
jmp
and
(bad)
mov
xor
hlt
dec
push
push
(bad)
aad
sub
cmp
scas
in
retf
push
jns
cwde
mov
les
(bad)
retf
cs
jge
mov
push
jbe
shl
mov
movs
cld
mov
jnp
dec
mov
jmp
rcr
fwait
adc
mov
adc
pop
xchg
iret
ins
xchg
(bad)
out
mov
jbe
stc
push
repnz
neg
int3
inc
adc
sbb
stc
add
cmp
xlat
jecxz
xchg
mov
sub
or
sub
lahf
arpl
push
mov
cmp
call
jle
nop
(bad)
jmp
xor
rcr
mov
pop
stc
movs
movs
popf
(bad)
cmc
mov
daa
sbb
pop
loop
pop
mov
sbb
inc
aad
xchg
arpl
cdq
xor
mov
xchg
call
mov
dec
xor
loope
xchg
imul
cdq
cmp
stos
jl
aad
out
pop
lods
shl
in
xor
cdq
mov
nop
jb
out
imul
or
or
xor
pop
add
cmp
out
mov
rcl
icebp
outs
pop
in
mov
movs
gs
sbb
mov
and
out
push
cmps
cmc
outs
test
jle
iret
mov
scas
hlt
cmp
in
mov
idiv
mov
push
mov
fimul
xchg
add
nop
ins
add
mov
pusha
pop
pop
cli
call
je
xchg
loope
leave
popf
pusha
imul
push
fisub
fstp
adc
movs
into
jge
push
mov
mov
pop
(bad)
out
adc
dec
repnz
xor
pop
test
push
jmp
mov
test
xor
ins
xchg
pop
cs
lock
jg
and
mov
and
mov
mov
retf
or
jg
lds
pop
fcomp
pop
fs
dec
rcr
sub
aad
xlat
or
mov
leave
inc
xchg
jne
sbb
or
(bad)
movs
pop
ins
(bad)
jb
ss
rcl
pop
repz
jb
xchg
std
mov
ret
inc
fs
push
and
lahf
and
inc
jne
imul
addr16
hlt
push
add
pusha
jmp
sub
fsubrp
jmp
fcomp
mov
(bad)
lock
pop
or
test
pusha
ret
cwde
push
lahf
mov
mov
add
les
enter
icebp
call
pop
mov
ja
add
xor
pop
clc
add
mov
loope
pop
ins
push
xchg
icebp
mov
cmp
mov
push
scas
mov
jns
add
push
mov
or
aaa
jne
lahf
mov
jl
mov
xor
(bad)
rol
fwait
cwde
gs
push
fcom
xor
or
mov
das
and
push
fcmovnb
loop
stos
mov
jmp
int
loop
fisub
push
int
daa
ds
mov
or
int3
ds
pop
or
test
jmp
add
sbb
cld
mov
push
aaa
push
mov
pop
jg
movs
loope
fiadd
inc
popa
popf
cmps
pop
jo
cwde
call
mov
movs
repz
pop
call
jb
jl
xchg
jae
push
dec
cmp
xchg
not
adc
pushf
jp
add
sub
dec
xchg
cmp
into
cmps
mov
rol
les
xchg
in
cmp
jmp
xor
pop
adc
rol
(bad)
push
test
ins
adc
fcmovnbe
mov
loopne
push
pop
adc
push
sbb
outs
sub
mov
lds
out
dec
shl
movs
xchg
xchg
mov
push
cwde
int
popf
mov
ja
mov
test
add
mov
inc
adc
test
inc
cmovle
xor
jp
imul
jmp
stos
sti
into
aam
arpl
add
out
repz
(bad)
mov
jae
popa
stos
cmp
mov
sbb
(bad)
test
push
cmp
lock
dec
mov
fwait
mov
xchg
adc
ja
leave
ret
adc
(bad)
out
pop
lods
loope
(bad)
mov
stos
and
aas
sbb
aaa
xor
cdq
das
clc
in
test
mov
xlat
mov
cmp
dec
and
xchg
mov
outs
mov
inc
and
stc
daa
in
repnz
aad
cdq
mov
in
jg
dec
or
cmp
add
add
dec
and
in
jns
cmps
or
pop
sbb
sbb
sahf
out
push
bound
dec
lods
std
or
push
fld
push
jp
sbb
mov
scas
or
mov
pop
mov
add
push
bound
scas
sub
movs
test
mov
inc
shr
cld
xor
not
stos
sbb
nop
mov
(bad)
(bad)
fs
push
xor
xchg
dec
cwde
sub
or
mov
jge
aad
mov
and
stc
and
mov
mov
lahf
adc
xlat
mov
jns
mov
aam
iret
movs
adc
clc
and
fild
and
test
sbb
loope
xlat
mov
jo
mov
xchg
enter
mov
mov
jne
adc
xchg
sbb
xchg
mov
adc
dec
mov
ret
add
mov
in
sbb
xor
push
sub
int3
jmp
aas
or
lods
ins
fist
adc
fbstp
jmp
and
shl
test
scas
popf
loop
enter
out
lahf
xor
test
cwde
xor
cs
xor
imul
xchg
test
pop
lds
(bad)
cmps
jecxz
sub
inc
xor
push
sub
je
mov
ds
jl
sar
inc
push
fstp
pop
iret
retf
mov
int3
sub
inc
cmp
add
je
call
lock
stc
add
mov
stos
xor
add
loopne
les
inc
or
test
int3
jns
ds
rcr
int
jmp
and
and
xchg
hlt
test
rcr
(bad)
loop
adc
in
test
stos
push
out
mov
xor
sub
dec
(bad)
popa
xor
fst
dec
dec
loopne
icebp
mov
ret
(bad)
push
add
cmp
fist
sub
mov
inc
mov
xor
pop
repz
lea
in
fcmovu
(bad)
in
lds
retf
outs
gs
dec
gs
adc
inc
dec
rcl
in
sub
push
shr
sub
or
pop
in
jle
and
retf
or
fild
arpl
push
add
out
xchg
(bad)
jbe
daa
popf
std
nop
mov
stos
cmps
test
pop
fnstenv
dec
pop
bound
sub
repz
pop
dec
xchg
pop
repz
les
push
ds
fisub
sti
push
imul
sbb
mov
mov
sbb
test
test
(bad)
mov
dec
out
stos
adc
(bad)
cmp
push
dec
test
fist
rcr
ret
push
pop
or
or
out
pop
push
out
hlt
pop
and
(bad)
mov
scas
lds
or
xor
test
shl
push
xchg
pushf
test
push
loope
pusha
lds
ss
cmp
push
dec
cmp
xchg
inc
test
jmp
mov
jbe
xlat
retf
ror
dec
leave
dec
arpl
or
lahf
push
jg
or
test
mov
mov
or
test
pusha
imul
xor
sbb
pop
retf
and
pop
test
rcr
retf
adc
(bad)
(bad)
sub
stos
and
(bad)
xchg
push
mov
adc
mov
aam
sub
sahf
pop
push
daa
mov
jb
in
ss
movs
gs
test
sub
mov
mov
repz
rcr
sar
xchg
not
push
cs
or
test
fs
xchg
fst
int
adc
sbb
aas
test
aas
in
xchg
ret
imul
test
shl
hlt
sbb
push
inc
push
ja
clc
push
mov
lods
mov
je
scas
gs
cmp
test
jne
push
mov
push
aad
add
mov
fcomi
push
jb
push
fs
pop
imul
add
stc
std
sbb
jae
xlat
dec
cmp
test
fisubr
pop
ja
daa
or
mov
iret
push
inc
enter
inc
popf
adc
jmp
(bad)
pmaddwd
mov
call
dec
pop
xor
test
pavgw
(bad)
xlat
outs
inc
fnstenv
dec
icebp
mov
mov
xchg
lahf
jle
les
sub
dec
mov
sub
js
dec
std
repnz
dec
cmp
pusha
test
xchg
cmp
popa
xchg
mov
and
sub
and
movs
lods
rcr
inc
xchg
daa
push
xchg
push
jecxz
push
leave
popf
in
mov
mov
cmp
inc
into
mov
les
pushf
cmp
inc
jecxz
nop
test
fcmovbe
sub
out
adc
enter
cmps
test
outs
mov
mov
call
retf
es
and
fisubr
stc
or
xor
jne
or
push
sbb
dec
cs
sub
mov
imul
fnstsw
xchg
push
cwde
sbb
adc
shl
aaa
push
xchg
cld
mov
in
icebp
add
mov
pop
cld
adc
cld
mov
mov
pop
dec
(bad)
shl
mov
sub
cwde
jp
adc
sbb
enter
xlat
outs
sub
(bad)
out
pop
sub
sbb
or
lds
or
(bad)
out
leave
mov
imul
mov
cdq
jb
repz
push
aaa
inc
jnp
or
or
adc
aad
sbb
jmp
fidivr
idiv
ret
les
sub
aas
or
inc
idiv
int3
cmc
pop
test
dec
in
xor
add
xchg
scas
cld
dec
retf
(bad)
(bad)
out
fidivr
push
test
xchg
sti
fdivr
inc
pop
dec
push
sub
adc
add
inc
scas
in
sar
lock
in
pop
je
push
xor
fistp
dec
cdq
dec
pop
xlat
mov
loope
movs
rep
mov
sbb
push
call
js
movs
(bad)
arpl
aas
xchg
enter
inc
xchg
shl
pop
dec
jecxz
add
js
pushf
mov
xor
push
ja
lods
xchg
cmp
(bad)
je
loope
push
loopne
jb
loop
fiadd
test
xor
and
and
rol
not
inc
(bad)
out
jmp
mov
loopne
retf
inc
push
push
lods
sub
rcl
stos
int3
mov
sbb
mov
clc
dec
add
int
adc
dec
sahf
fimul
and
cmp
in
lock
mov
cs
test
mov
pop
and
mov
sbb
mov
mov
jle
push
mov
js
or
mov
loopne
fdiv
mov
pushf
mov
retf
test
mov
int
dec
shl
imul
sbb
lods
cmp
rcr
pop
jnp
mov
jle
fisub
std
movs
fisubr
xor
xor
and
sbb
not
out
stos
bound
pop
add
push
jmp
leave
mov
mov
pop
cwde
xchg
hlt
sub
aas
push
or
ror
inc
add
loopne
stos
cmp
push
xchg
leave
adc
wrmsr
ss
imul
stc
mov
xchg
and
xor
jbe
add
jae
loopne
leave
cdq
call
ret
sub
sub
xor
cmp
sti
push
(bad)
cmp
dec
aad
inc
xor
stc
jo
adc
scas
outs
adc
cs
jno
int
inc
dec
movs
mov
xchg
idiv
jns
adc
lods
daa
cdq
jge
stos
add
jnp
adc
or
xlat
lea
sbb
push
ds
push
rcr
mov
xor
mov
pop
enter
inc
xchg
int
mov
push
stc
xchg
mov
sti
mov
jecxz
fucomp
jns
(bad)
and
push
fucom
pop
dec
mov
dec
popa
mov
mov
jge
xchg
inc
xor
jecxz
js
add
repz
rcr
or
mov
frstor
sbb
inc
int3
sbb
leave
mov
xchg
(bad)
loope
xor
sar
push
pop
jl
push
cld
mov
adc
fdivr
shl
sub
cmps
adc
dec
and
scas
mov
(bad)
retf
jno
ror
push
dec
imul
test
arpl
mov
or
adc
jno
out
out
arpl
push
out
outs
and
xchg
xor
cdq
(bad)
cld
leave
sub
lahf
addr16
xor
and
and
jne
jne
div
loope
js
dec
adc
mov
sub
mov
mov
scas
or
fwait
jne
aaa
push
inc
iret
pop
nop
div
sub
adc
fild
aam
push
mov
imul
mov
into
or
adc
inc
dec
jecxz
fst
cmp
lds
push
mov
imul
push
in
mov
fistp
std
pop
das
retf
xchg
iret
imul
lahf
adc
popf
rcr
inc
pusha
sti
int3
div
jge
or
rcr
mov
jae
mov
dec
(bad)
xor
bound
mov
jo
and
icebp
or
stos
imul
jg
or
cmp
das
add
(bad)
aas
lea
add
data16
add
mov
(bad)
in
add
jp
jmp
cmps
or
adc
enter
sbb
and
lods
ficom
add
call
jmp
arpl
cdq
xchg
iret
sub
aad
jge
cmc
in
mov
pop
pusha
pop
add
in
xchg
and
sub
lea
inc
xor
mov
sbb
cs
mov
test
and
push
jge
jo
pop
jbe
dec
loop
adc
sbb
jecxz
clc
jge
jns
scas
lods
add
fild
add
leave
xchg
hlt
lds
xor
lds
mov
mov
pop
frstor
daa
mov
push
mov
retf
mov
aad
mov
mov
adc
push
add
dec
fwait
push
loopne
xor
into
scas
mov
xchg
addr16
arpl
mov
outs
mov
test
and
push
push
mov
xchg
dec
add
repnz
jmp
mov
dec
and
add
jbe
sub
in
mov
(bad)
cs
push
iret
sub
cmp
add
sbb
xlat
pusha
(bad)
rcl
sub
xlat
and
sub
(bad)
lock
add
daa
in
outs
add
lods
sbb
push
mov
out
mov
xchg
mov
lods
fstp
lock
loope
lods
bound
scas
mov
push
stos
ror
mov
xchg
cmp
jns
bound
out
dec
ds
mov
es
mov
jmp
xlat
push
push
push
sbb
adc
(bad)
sbb
daa
add
leave
jmp
aaa
into
xlat
xor
sbb
fs
repz
lea
inc
fsubrp
out
lods
and
xchg
daa
sbb
cmp
jmp
jno
int
xor
mov
int3
fsub
sub
aad
push
rol
add
or
(bad)
stc
mov
and
xchg
sbb
aas
movs
call
or
mov
or
ins
adc
push
pop
aaa
mov
pop
or
add
cmc
in
(bad)
es
xor
mov
(bad)
xor
or
mov
mov
into
scas
(bad)
les
aad
addr16
and
jae
sar
pop
out
lods
clc
pop
pop
repz
jne
fs
xchg
pop
movs
shl
mov
pop
dec
jnp
ins
mov
jne
rcr
fwait
sbb
test
xor
cmp
xchg
movs
rcr
adc
dec
aam
(bad)
clc
ss
dec
mov
mov
or
rol
pop
imul
call
lea
xor
or
pop
mov
rcr
inc
imul
aas
sar
pop
jnp
xchg
clc
sub
pop
push
(bad)
and
leave
add
ror
push
push
aad
jbe
test
mov
fwait
jbe
hlt
in
js
call
inc
add
jmp
mov
lock
push
xchg
pop
pusha
ret
inc
pop
sahf
sbb
ins
jecxz
mov
jle
xchg
cmps
aas
aam
in
outs
xchg
mov
sub
push
inc
shr
and
inc
ds
call
outs
xor
ins
and
xlat
and
loop
mov
and
neg
jbe
adc
lea
and
xor
cmp
addr16
jl
into
sti
xchg
ins
inc
and
jecxz
push
ror
mov
mov
adc
cmp
xchg
xchg
outs
out
jb
push
mov
pop
fcomi
(bad)
mov
and
(bad)
nop
fbld
jecxz
jg
call
loope
inc
jge
push
ror
mov
jg
movs
sahf
adc
cmps
je
push
sub
or
loopne
push
(bad)
ss
je
or
shld
(bad)
inc
(bad)
jecxz
mov
or
pop
add
mov
xor
test
xchg
jnp
(bad)
mov
push
paddd
push
hlt
xchg
(bad)
push
ret
xor
dec
fcom
iret
(bad)
xor
mov
sbb
mov
loop
xchg
shl
inc
jns
pop
in
push
mov
jecxz
cmp
daa
mov
jb
pop
stc
sti
mov
and
sub
add
(bad)
fst
cmp
int3
nop
mov
and
mov
push
inc
imul
lods
sub
or
jno
mov
and
das
jae
jnp
addr16
cmc
cmp
mov
cmp
cmp
sbb
(bad)
sub
or
retf
sahf
sar
mov
js
bound
fisttp
jns
sti
mov
mov
jns
xchg
bound
jp
fstp
sar
hlt
adc
xor
cli
inc
in
push
push
out
inc
retf
mov
in
push
sbb
out
push
(bad)
int3
ret
(bad)
mov
pop
and
add
add
dec
ds
rcl
xchg
sub
dec
icebp
mov
cmp
pop
push
loopne
daa
dec
ret
scas
pusha
aas
in
popa
lahf
test
pop
in
mov
iret
cli
xor
xor
nop
cmp
inc
nop
imul
loope
inc
cs
mov
pop
xor
dec
sub
xlat
cs
sar
jne
sbb
cld
pop
stos
jbe
adc
adc
es
adc
sar
jg
pop
jae
ja
sub
lock
mov
test
jl
test
cmps
jecxz
mov
retf
popa
and
das
or
out
outs
leave
xchg
int3
pop
pop
inc
pop
xor
pop
cmc
mov
out
iret
pop
jne
mov
pusha
cld
cmp
dec
scas
pop
or
stos
dec
call
cmp
ror
mov
jge
sbb
jecxz
movs
ficomp
push
xchg
repz
minps
ret
sub
pop
cmp
jmp
gs
jg
and
pop
daa
inc
push
rcl
jnp
aaa
xor
xchg
xchg
loope
enter
mov
popf
jno
cmp
xchg
repz
mov
cdq
jmp
dec
int
lahf
in
push
and
xor
push
sbb
cmp
mov
aaa
mov
enter
retf
cmc
cmp
leave
mov
pop
mov
inc
sbb
maskmovq
dec
loope
jp
add
rol
movs
jae
pop
mov
add
arpl
mov
fstp
iret
adc
add
hlt
xchg
es
pop
lea
js
adc
sub
bound
add
mov
mov
std
xchg
ins
rcl
adc
or
adc
ror
and
pop
scas
mov
sahf
cmps
mov
and
push
ins
dec
rcr
int3
(bad)
xchg
test
xchg
sbb
cld
xchg
cmp
outs
dec
adc
cmp
sub
out
mov
ja
mov
push
cld
cmp
jl
jle
jecxz
into
jnp
add
enter
(bad)
mov
jmp
call
push
in
jbe
and
pop
or
mov
or
cwde
sub
call
inc
nop
dec
out
in
fs
cmp
jp
cmp
push
xchg
and
push
cmps
adc
dec
stos
dec
div
mov
push
ror
or
arpl
js
pop
or
cmps
and
jb
jbe
sahf
push
(bad)
lods
mov
and
scas
or
scas
outs
lds
dec
std
std
xchg
das
mov
call
cmpss
push
cli
imul
pop
lahf
jle
scas
mov
sbb
jmp
popa
or
sti
loope
inc
sub
inc
arpl
retf
test
push
pusha
adc
std
ja
loopne
dec
mov
xchg
xchg
pop
jp
mov
out
call
jno
xchg
fist
inc
cmc
aaa
mov
dec
mov
loope
mov
mov
jbe
mov
mov
scas
mov
inc
mov
sub
mov
sbb
pop
sbb
stc
adc
inc
and
nop
fwait
add
nop
sar
out
dec
push
out
inc
push
jg
and
hlt
or
arpl
adc
pop
movs
daa
movs
xor
dec
stos
mov
pop
xchg
cs
sub
mov
pop
gs
loope
in
je
fadd
aaa
sub
xor
(bad)
sti
adc
push
in
inc
dec
sub
dec
mov
add
clc
dec
cmp
add
xor
sub
jle
lods
sub
mov
test
repz
fcomi
add
cmc
nop
sbb
inc
push
adc
stos
loope
leave
out
jne
and
push
adc
out
sub
into
dec
push
stos
fstp
mov
mov
call
mov
cmps
(bad)
and
fptan
not
out
and
rol
inc
data16
pop
aam
sbb
mov
mov
ret
cmps
push
or
in
sbb
hlt
enter
sti
jle
cmp
pop
lods
mov
(bad)
and
sub
xchg
cmps
dec
mov
mov
(bad)
xor
daa
push
ins
pop
mul
xor
add
out
dec
es
inc
jo
inc
lods
add
jmp
jne
cmps
scas
(bad)
dec
sbb
dec
cmps
shl
ficom
ret
jno
sbb
add
add
xor
mov
jae
enter
daa
ds
jae
lods
push
push
mov
jb
and
pushf
mov
cmp
setg
fisubr
outs
ja
aad
(bad)
(bad)
into
clc
xchg
test
or
out
test
sub
retf
fld
loopne
dec
in
sbb
inc
popa
xor
cmp
dec
fcomp
cmp
int3
ud2
inc
js
lahf
adc
outs
fmul
std
daa
gs
mov
or
(bad)
cwde
or
sbb
popa
das
repz
xchg
test
cmp
pop
inc
ss
rcl
sahf
sbb
push
sub
sub
popf
aas
inc
pusha
sbb
and
clc
push
movs
dec
cmp
or
mov
aas
or
adc
xor
mov
mov
(bad)
push
icebp
cdq
xchg
or
(bad)
popa
scas
(bad)
stc
fsub
leave
lds
aam
adc
xor
push
loope
cli
mov
cmp
aam
inc
adc
test
pop
xchg
fdivr
jp
je
clc
fsub
stos
test
rcl
sub
fnstenv
ror
aad
push
xor
sbb
or
jg
int3
xchg
test
rcl
push
dec
xchg
adc
pop
test
jmp
inc
adc
mov
add
mov
push
or
mov
pop
test
call
adc
jg
lods
push
pop
or
fsub
inc
dec
pop
dec
sar
push
pop
xchg
add
mov
push
sbb
push
aas
in
and
test
(bad)
mov
dec
jmp
push
nop
std
gs
fstp
sub
cmc
xor
push
lahf
inc
cwde
sub
push
inc
pop
dec
pop
retf
pop
stos
cmp
xor
push
mov
out
jnp
xchg
stos
push
rol
fdiv
int3
adc
ret
sti
sbb
idiv
adc
(bad)
cmp
cli
fstp
repnz
aas
loopne
or
out
data16
dec
or
jbe
jge
push
nop
inc
pop
mov
or
popa
lahf
leave
lea
xor
dec
mov
jl
ss
aaa
mov
and
outs
cld
mov
push
xchg
retf
pop
jbe
add
add
sub
loopne
lahf
nop
es
or
and
push
mov
mov
shl
enter
in
inc
push
xlat
pop
in
xchg
lock
hlt
stos
test
dec
xor
stc
or
imul
cmp
xchg
mov
or
imul
scas
push
inc
pop
jo
jmp
faddp
add
ds
mov
jnp
sbb
xor
and
aaa
aad
dec
jmp
jmp
leave
fwait
pop
mov
movs
data16
sbb
jnp
inc
jecxz
pop
fstp
jae
jg
mov
jbe
in
xlat
adc
xchg
xlat
loopne
mov
fisttp
lock
js
rcr
cmp
jb
call
cmp
(bad)
adc
sub
jbe
bound
mov
shr
push
xchg
adc
adc
pop
shr
cmp
mov
mov
sbb
xchg
ss
xchg
js
mov
ret
push
sbb
and
mov
mov
mov
in
mov
add
int
mov
mov
or
mov
push
pusha
sub
ja
sbb
outs
jmp
bnd
call
jmp
push
test
out
data16
gs
push
dec
popf
jns
push
adc
test
xor
cmps
adc
mov
xchg
cwde
scas
xor
popf
aaa
shr
movs
sbb
in
rcl
push
sar
cli
bound
or
repnz
into
dec
and
fistp
mov
out
jno
mov
mov
pop
sbb
lods
dec
cs
inc
mov
fwait
cmps
pop
mov
or
push
xor
imul
in
fucomip
movups
in
jp
sub
mov
jg
push
pop
dec
xor
sbb
hlt
cmp
lea
int
call
jle
cmp
mov
int3
setbe
movs
call
pop
push
ja
jge
dec
int3
jnp
jne
hlt
cmp
leave
xchg
out
jmp
adc
jmp
pop
in
inc
inc
xlat
and
mov
or
jl
retf
push
inc
sbb
imul
rcl
sbb
(bad)
cmp
pop
xchg
sbb
popf
jns
ficomp
pop
outs
inc
scas
(bad)
sbb
jbe
int3
inc
dec
cmp
jns
test
fsubr
stos
in
pop
arpl
sti
sbb
lods
xor
stc
mov
pop
(bad)
retf
jae
arpl
inc
jge
das
dec
mov
pop
cwde
aaa
stos
mov
hlt
inc
xor
xchg
sbb
fisubr
xchg
shl
jg
inc
push
pop
mov
call
xchg
leave
push
add
pusha
inc
add
data16
(bad)
cmp
test
mov
push
inc
fwait
adc
mov
xlat
and
fimul
sbb
cmp
mov
out
pop
call
sbb
mov
repnz
out
jnp
popa
ret
xor
mov
leave
ret
mov
pop
ss
retf
fsub
inc
xor
cwde
outs
mov
sub
ins
adc
lea
add
and
sbb
sbb
cmp
jb
cmp
sbb
pop
sbb
mov
pop
aaa
add
inc
scas
inc
mov
jmp
cwde
xchg
in
(bad)
mov
mov
jmp
mov
leave
mov
loope
loope
lahf
scas
rcr
cld
dec
out
movs
push
fstp
xchg
pop
fmul
push
pop
and
cmps
pop
adc
dec
outs
addr16
pop
pop
aam
xchg
dec
cmp
outs
sbb
pop
test
leave
bound
jnp
clc
mov
jo
test
mov
or
les
jle
mov
mov
add
aad
popa
pop
xchg
aaa
imul
dec
xor
inc
int3
pop
sub
(bad)
mov
push
and
icebp
mov
or
xor
xor
jl
push
pop
popa
out
js
cmp
pop
call
out
stos
mov
jns
sub
out
test
and
cmp
sbb
mov
emms
ret
test
stos
push
mov
and
outs
fistp
mov
xor
out
push
enter
aaa
jle
test
jp
xor
hlt
jl
movs
dec
and
cmp
retf
pushf
pop
ret
mov
popa
mov
loope
sub
in
mov
dec
dec
mov
mov
adc
push
fnstenv
xor
(bad)
fucomp
dec
or
cli
in
stos
icebp
mov
neg
mov
clc
cmp
fist
mov
push
mov
retf
aas
adc
jle
in
xor
test
lods
mov
or
scas
or
pop
push
or
inc
mov
sbb
sti
fisttp
rol
popa
adc
sub
sbb
and
inc
cmp
retf
adc
dec
ins
movs
cmc
stc
jne
or
add
cmp
sub
ja
cs
jg
cwde
pop
stos
inc
fidivr
xor
mov
lahf
lods
jnp
(bad)
ficom
xchg
shr
fldenv
mov
lock
push
add
sahf
test
rcl
scas
int3
push
and
jno
add
push
push
jne
sbb
xchg
cld
(bad)
test
jl
mov
in
cmps
cld
sbb
outs
adc
out
cmp
inc
push
cmc
inc
sub
je
dec
or
cmc
lahf
and
daa
cmp
add
dec
dec
mov
inc
jbe
xchg
scas
les
push
mov
mov
inc
out
ds
or
xor
push
ficomp
js
aad
icebp
push
inc
cli
lea
jo
outs
or
jmp
sub
adc
stos
in
aam
add
jo
mov
jle
inc
cmp
xor
adc
push
jl
pop
sbb
mov
jg
add
mov
mov
shl
ficomp
stos
xor
xor
xor
test
sub
cmps
jae
jg
push
cli
add
in
jbe
xor
je
cmp
cli
out
cmc
mov
clc
rcr
adc
retf
mov
xor
cli
xchg
or
stos
inc
sub
or
cmc
and
call
cdq
mov
push
push
js
push
bound
fst
jg
mov
and
jbe
mov
and
popa
add
xchg
pop
out
adc
mov
jne
add
loop
mov
shr
inc
(bad)
fbstp
mov
push
add
jmp
dec
push
lea
dec
cwde
sar
dec
repz
outs
dec
test
dec
xor
stos
dec
sub
(bad)
mov
ss
icebp
pop
clc
jmp
jnp
imul
adc
adc
sub
push
and
xchg
pop
rcr
cmp
push
jg
enter
arpl
mul
in
call
lods
loopne
mov
idiv
cld
jmp
inc
in
les
xchg
or
out
mov
dec
jmp
jb
cmp
in
push
mov
mov
push
pop
sbb
ins
inc
xor
xchg
mov
loop
ss
jmp
push
ficomp
fcomp
adc
mov
pop
inc
lahf
nop
mov
pop
cmp
jge
stc
mov
rol
cmps
hlt
cmp
jb
addr16
aas
enter
pop
inc
outs
pop
fbld
sub
xchg
pop
and
mov
arpl
test
mov
push
cld
stos
xor
lods
inc
call
ins
jl
dec
nop
les
and
loopne
xchg
out
mov
es
aam
imul
lods
mov
aad
cmp
cmp
les
sbb
adc
adc
push
xor
dec
mov
xchg
in
push
mov
xchg
jne
int3
push
push
pop
sub
mov
cwde
out
push
xchg
sahf
xor
dec
cmp
outs
pop
and
pop
(bad)
repz
cld
push
pop
addr16
mov
outs
sti
xchg
pop
or
sub
inc
aaa
aas
jb
popa
mov
mov
nop
xor
xchg
and
adc
dec
dec
cdq
inc
sti
das
cmp
mov
out
(bad)
sbb
in
xor
enter
arpl
or
xor
ins
inc
inc
out
inc
test
int3
cmps
call
daa
ror
add
stc
aam
jmp
sub
add
cmp
cmp
or
xor
xchg
jl
test
jl
es
mov
out
call
int
mov
push
(bad)
cli
test
pushf
(bad)
fsubr
and
and
fs
sub
retf
repnz
cmc
lock
xchg
lods
loopne
xlat
adc
push
or
lods
fisubr
out
mov
out
popa
(bad)
les
in
inc
div
cmp
(bad)
push
out
fdivr
xchg
xor
daa
push
mov
out
fistp
pop
ret
sbb
xor
imul
dec
pop
std
retf
cld
dec
jg
inc
stos
fldcw
xchg
daa
cld
inc
outs
pop
int3
adc
outs
leave
icebp
cmc
mov
fsub
sbb
inc
cmp
sub
je
out
inc
femms
call
imul
add
dec
mov
clc
movs
cmps
imul
test
(bad)
mov
dec
add
es
in
lods
lea
popa
lods
push
cmp
and
dec
loope
inc
inc
push
sub
ja
mov
lods
add
xchg
scas
sub
stos
pop
inc
js
push
in
mov
into
stos
jbe
loop
fdivr
pop
mov
jmp
fnstcw
xor
scas
cwde
sar
scas
jge
xlat
popa
jl
mov
outs
fdivp
(bad)
adc
mov
or
gs
xlat
pop
ins
fstp
(bad)
nop
out
mov
add
stos
stc
push
loopne
pop
out
or
enter
mov
out
imul
push
jecxz
test
pop
jno
ret
lods
das
jbe
out
or
mov
loopne
repz
(bad)
rol
xchg
add
jbe
mov
sub
jnp
adc
lods
jnp
xlat
push
jnp
mov
add
dec
xchg
add
std
cmc
imul
(bad)
fdiv
(bad)
scas
(bad)
jmp
pushf
ret
enter
sbb
add
push
jo
out
xchg
sbb
mov
mov
scas
retf
rcr
pop
popa
mov
or
aaa
test
mov
cwde
ror
das
sub
mov
mov
mov
or
test
add
add
movs
retf
shl
sbb
vmwrite
inc
mov
adc
add
int3
jbe
test
aaa
fisttp
test
add
xchg
cmp
pop
xchg
mov
mov
push
push
mov
vmulpd
adc
xor
push
cs
or
and
xor
pop
out
popa
cmps
inc
xchg
sub
mov
mov
retf
retf
pop
xlat
cwde
sub
sbb
test
test
call
sub
(bad)
push
add
shr
cmp
aam
push
mov
pop
dec
stc
pop
inc
adc
sub
mov
sbb
mov
ins
push
int3
pop
pop
mov
imul
dec
fnsave
fld
repnz
cmp
jnp
out
and
jg
arpl
sbb
pop
lods
or
dec
mov
loop
outs
mov
(bad)
pop
mov
mov
ds
cmc
out
das
and
popa
out
sub
jmp
pushf
inc
push
arpl
mov
mov
in
xor
call
loop
mov
jb
scas
push
xchg
and
jae
adc
(bad)
aaa
mov
mov
mov
pop
inc
cmp
xchg
push
gs
mov
add
jno
bound
mov
mov
aam
bound
mov
sti
jp
cmc
mov
pop
jns
scas
stos
stc
ret
jmp
cmp
push
clc
jne
leave
fst
call
test
popa
sahf
add
inc
sub
and
add
imul
nop
mov
ja
jb
pop
leave
lods
mov
mov
push
sbb
lahf
mov
sbb
mov
or
jne
pop
add
stos
lods
push
xor
jbe
fwait
xor
mov
jmp
xchg
sbb
test
sbb
xchg
sti
mov
mov
push
adc
jmp
mov
sets
inc
and
jl
lahf
stc
push
dec
sti
clc
scas
pop
mov
dec
(bad)
dec
adc
inc
jge
ds
sub
(bad)
or
or
into
or
mov
mov
and
call
sahf
jmp
dec
jp
inc
(bad)
cli
fs
mov
cmp
fnstsw
aad
jns
fisttp
js
inc
cmp
ret
add
inc
in
cmp
bound
mov
cdq
shl
popf
jecxz
xchg
mov
jnp
inc
fs
jmp
jb
sahf
jecxz
mov
and
test
outs
popf
retf
lods
out
rcl
daa
int3
dec
movs
sub
inc
iret
enter
sub
js
in
(bad)
mov
fs
xchg
mov
retf
inc
or
(bad)
enter
shr
js
sub
repz
dec
(bad)
(bad)
(bad)
(bad)
push
aam
inc
dec
mov
cmc
push
repz
cmp
adc
aaa
inc
push
pop
hlt
int
adc
fiadd
shr
lahf
add
sbb
and
sbb
mov
xor
cmp
je
(bad)
pop
lds
lea
inc
(bad)
add
mov
xchg
xchg
xor
xchg
sub
xor
pusha
les
outs
sahf
mov
cli
inc
loopne
cmp
outs
mov
fst
adc
push
cmc
xchg
or
hlt
lea
mov
leave
sub
mov
mov
push
adc
jp
in
mul
mov
movs
cmp
push
dec
(bad)
cmp
jmp
mov
mov
stc
dec
hlt
xchg
add
retf
xor
cmp
into
and
retw
sub
out
aad
lds
add
mov
jb
xchg
data16
rcr
sub
sbb
ds
push
jp
movs
out
aaa
int3
call
jecxz
bound
(bad)
ds
xchg
in
jns
jp
xchg
mov
or
pop
fs
cmp
mov
nop
adc
mov
xchg
iret
test
dec
inc
sub
pushf
jb
outs
pusha
inc
mov
scas
(bad)
mov
lahf
fiadd
movs
jns
retf
sub
ds
sbb
(bad)
loop
cli
mov
(bad)
cmps
xchg
mov
mov
jle
(bad)
ins
mov
and
mov
sbb
cmps
sti
int
inc
add
test
jle
shr
add
mov
bound
dec
mov
data16
sub
mov
add
clc
sbb
xchg
jl
jmp
jmp
(bad)
retf
cdq
cld
inc
push
int3
mov
sub
pop
int
jns
pop
call
push
pop
cmp
(bad)
in
out
aas
out
and
pop
loope
rcl
clc
pop
clc
into
jecxz
pop
fidivr
cmp
pop
test
std
cmp
inc
cmps
test
inc
cwde
cmp
pop
aaa
xchg
push
test
inc
out
jns
pop
fnsave
cmp
xchg
lahf
mov
out
popf
mov
cmp
pop
call
jae
leave
in
pop
pop
icebp
test
mulps
aad
retf
mov
aad
call
repz
jmp
mov
inc
or
xchg
push
jl
out
cli
out
inc
ds
or
mov
enter
cmp
rcl
ja
inc
pop
sahf
fwait
sub
push
xchg
(bad)
out
jmp
mov
push
xchg
add
int
sbb
je
jle
je
inc
pop
hlt
sbb
push
dec
dec
adc
jo
fsub
jnp
outs
adc
popf
stc
arpl
in
out
sbb
xchg
lea
and
(bad)
cmc
and
jg
iret
cmp
in
cmp
sub
and
sub
mov
fdivr
xor
jge
pop
out
mov
(bad)
test
push
push
xchg
push
jle
cmps
bound
and
jge
lds
xor
adc
pop
dec
frstor
adc
jp
jmp
test
sbb
mov
push
ud1
js
cdq
int3
repz
dec
rcr
stc
lods
adc
add
movs
sti
inc
mov
jmp
movs
sub
inc
aaa
jno
fimul
or
ror
mov
or
mov
pop
and
cmc
sbb
xor
repnz
ins
push
dec
dec
pop
mov
push
std
dec
pop
adc
xchg
gs
test
mov
xor
jle
push
div
cmp
pop
xchg
add
in
add
jp
test
in
push
es
imul
lock
or
repz
fisttp
shr
dec
sub
adc
fs
shl
mov
dec
fistp
cmp
mov
sbb
dec
test
fwait
cmc
sub
ja
(bad)
orps
push
pop
es
sub
mov
cmp
xchg
leave
pop
repnz
mov
mov
sbb
jg
mov
fidivr
or
inc
sbb
mov
jg
(bad)
repz
xor
push
cmps
dec
pop
repz
jmp
xor
mov
fnstsw
and
jecxz
stc
stc
dec
cmp
dec
out
add
cmc
xchg
rol
stos
mov
ins
or
jne
mov
mov
sbb
mov
lahf
into
arpl
fistp
outs
cmps
ins
jmp
loope
arpl
xor
adc
push
pop
daa
aam
jecxz
jmp
fild
jns
xchg
push
dec
leave
fistp
pop
cmps
mov
js
jno
scas
in
pop
jmp
out
clc
fwait
mov
xlat
mov
mov
pop
sub
cld
int3
shl
pop
call
push
mov
inc
retf
pop
fwait
retf
add
xchg
sahf
mov
push
xor
mov
cmp
sti
xor
(bad)
sub
jle
and
jg
mov
pop
adc
lods
push
mov
rol
pop
in
xchg
loope
jecxz
inc
mov
test
in
pusha
and
aad
pop
push
and
and
cmp
sub
scas
adc
es
call
ins
adc
aas
inc
cmp
sub
and
fdiv
fistp
push
popf
jno
jge
out
pusha
and
arpl
jbe
out
outs
pop
cli
adc
mov
fdivr
arpl
aam
mov
mov
xor
sub
ja
push
add
xor
mov
mov
sub
int3
dec
push
fcmovbe
hlt
mov
inc
add
faddp
adc
pop
inc
sub
pop
imul
int
push
ss
pop
dec
mov
xor
mov
jns
(bad)
addr16
pop
jle
and
sub
jns
test
mov
and
stc
fwait
push
imul
sar
out
cmp
mov
add
movs
sub
push
scas
loop
rcr
sub
and
xchg
add
pop
pop
inc
dec
mov
pop
adc
push
mov
xchg
sbb
ret
xchg
ss
cmps
or
cli
dec
xchg
aas
hlt
cmp
mov
lock
push
lock
add
and
jbe
push
inc
push
jbe
mov
inc
out
dec
mov
adc
mov
ficom
lahf
je
stos
pop
scas
push
inc
push
xchg
sahf
rcl
mov
fst
sub
or
lea
leave
sub
(bad)
imul
push
aaa
aas
aad
adc
adc
add
mov
fwait
push
push
icebp
add
je
pop
loope
popf
xor
int
aam
push
push
ins
std
pop
loope
xchg
cdq
pop
inc
xor
test
or
(bad)
in
ins
lea
pop
add
loope
mov
mov
js
nop
ds
mov
jge
pop
mov
inc
xor
jbe
push
pop
push
arpl
mov
xor
mov
and
push
sbb
and
adc
cmp
cs
xchg
push
push
gs
xor
lahf
out
xor
push
jns
sub
adc
scas
adc
push
out
leave
stos
dec
test
test
jg
inc
pusha
daa
dec
adc
lds
inc
pop
xor
jge
inc
or
aas
lahf
ds
arpl
pop
push
jp
movs
or
adc
imul
pop
sbb
push
bound
mov
push
loop
push
mov
xchg
add
fistp
pop
dec
sbb
bound
cdq
imul
in
xor
jge
not
ret
pop
test
or
push
cdq
mov
sub
mov
and
aad
dec
or
dec
stc
movs
(bad)
cdq
pop
out
jno
push
add
ret
stos
inc
jmp
(bad)
or
push
in
pushf
mov
jge
and
adc
adc
push
fxch
fstp
test
sub
dec
sbb
pop
push
push
push
jns
adc
mov
jecxz
shl
or
dec
aas
(bad)
jne
jno
dec
mov
mov
push
or
loope
sub
popf
ror
addr16
adc
test
rol
pop
int
add
adc
jmp
pop
sub
add
xchg
stos
sbb
in
aam
repz
inc
mov
rcr
(bad)
xor
test
mov
jle
xor
mov
mov
xchg
mov
pop
lds
jmp
add
fs
push
and
xchg
cmp
mov
(bad)
fadd
not
pop
sub
imul
jmp
jmp
les
sbb
(bad)
loopne
shl
repz
shr
fcom
aam
jnp
scas
mov
retf
ins
xchg
xchg
add
loop
fsub
and
lahf
add
ins
adc
lds
ds
mov
std
inc
push
fdivr
imul
cmp
das
rep
mov
sub
fld
jle
or
mov
xor
sbb
ins
mov
mov
inc
adc
movs
cmps
adc
and
mov
mov
inc
jns
mov
xchg
(bad)
mov
in
inc
jo
and
scas
out
scas
mul
mov
mov
adc
cld
pop
ss
jge
pusha
jp
push
(bad)
mov
pop
sbb
sar
and
popa
xchg
push
dec
or
and
jmp
cmp
mov
push
xchg
mov
sub
mov
fisub
adc
xor
popf
jb
xor
jecxz
mov
xor
gs
sbb
xlat
cmps
bound
ss
aas
sub
xchg
jmp
neg
(bad)
js
pop
mov
shl
jg
sub
popf
sbb
fs
pop
jle
sbb
or
push
adc
or
jne
retf
mov
xchg
nop
pop
leave
imul
mov
sub
mov
ret
or
loope
shl
fstp
add
nop
inc
popa
jg
call
inc
sbb
retf
sub
mov
inc
ffree
sub
sub
test
ret
aaa
out
mov
int3
sbb
icebp
shl
pop
outs
mov
fs
fcomp
in
sahf
xchg
fsubr
repz
mov
jg
pop
push
iret
push
ds
push
mov
ins
ficom
(bad)
fs
adc
call
cdq
ins
aaa
rcr
cmp
jnp
jae
mov
push
xchg
pop
sbb
mov
and
lock
cs
jnp
pop
fs
mov
mov
adc
aam
jne
into
mov
add
loopne
inc
cmps
cmps
aaa
sub
retf
jmp
xor
sub
jo
rcl
cwde
dec
jo
mov
outs
iret
std
mov
mov
pop
out
mov
arpl
ja
in
pop
sbb
hlt
cwde
pop
dec
xor
adc
mov
cmp
cmps
xor
sbb
xor
xchg
inc
pusha
inc
inc
push
push
lods
xchg
and
inc
cmp
ret
arpl
ficomp
bound
mov
fs
call
jge
push
jne
scas
pushf
iret
mov
push
mov
test
cmp
test
mov
fwait
sbb
out
call
repnz
and
pop
repz
inc
in
mov
mov
sbb
call
mov
mov
ins
call
xchg
mov
sbb
das
inc
sti
push
lock
in
arpl
sub
je
in
fwait
add
jg
ret
xlat
push
dec
jae
pop
xor
or
bound
xor
sbb
mov
mov
cmp
mov
dec
cli
loope
dec
xor
dec
dec
mov
mov
loop
mov
mov
loopne
test
out
sysret
jle
mov
adc
cmps
push
retf
mov
ins
(bad)
xchg
sbb
lods
mov
out
stc
les
in
rol
xor
(bad)
jg
clc
dec
mov
jns
pop
push
adc
pushf
jnp
cmp
retf
push
imul
or
shr
inc
push
cmp
inc
push
push
sar
lea
push
mov
fcomp
inc
push
repz
(bad)
mov
xor
in
gs
adc
mov
je
rcr
push
dec
cmp
cld
repnz
cmp
push
sbb
es
cmp
sbb
push
pushf
pop
pop
mov
dec
ins
sbb
or
pop
jns
fs
lods
in
sub
test
cmc
mov
jg
call
xchg
rcr
push
xchg
icebp
outs
scas
call
jno
inc
gs
aam
xchg
mov
scas
jecxz
std
fwait
repz
inc
dec
jnp
sbb
sub
dec
dec
iret
lods
imul
shl
(bad)
ss
push
sub
push
mov
mov
and
add
in
mov
ss
push
jae
mov
jmp
rcr
and
pusha
adc
lea
imul
aam
stos
iret
vpaddsw
mov
lea
cmc
cmp
into
xchg
loopne
push
cmc
push
(bad)
sbb
cmp
jg
dec
fst
mov
das
add
jl
sbb
aad
shr
sub
mov
sbb
xchg
jbe
jnp
(bad)
out
xchg
loope
dec
cs
mov
inc
fistp
cmp
add
xchg
mov
(bad)
adc
cld
aam
xchg
mov
mov
(bad)
outs
cmc
mov
test
shr
inc
ds
or
lea
fst
in
pop
test
or
aad
fwait
and
lea
pushf
push
cwde
daa
ret
loop
xchg
jp
ret
cmps
in
push
pop
sti
das
sub
mov
and
cmc
inc
mov
not
adc
pop
gs
sar
mov
mov
jge
ret
rol
js
pop
enter
stos
pop
cmps
dec
mov
and
xor
stos
push
call
mov
jecxz
and
cmp
push
in
xchg
mov
xor
pop
xor
mov
xor
or
fcom
bound
not
xchg
add
mov
mov
aas
sub
adc
xchg
cmps
loopne
es
ret
mov
shr
mov
outs
mov
dec
inc
push
and
loope
pushf
inc
cmp
mov
bound
es
xor
jmp
nop
dec
mov
sahf
pop
pop
jl
(bad)
adc
rcl
sub
push
int
ror
and
cs
jb
sbb
lods
icebp
out
add
and
adc
test
das
pop
inc
sub
inc
mov
mov
jo
mov
mov
bound
jne
cmp
xchg
stc
(bad)
pop
pop
fs
inc
retf
add
add
pop
adc
loope
fidiv
add
into
cmp
push
jb
jp
fidivr
aaa
dec
xor
nop
mov
clc
jno
js
sbb
mov
pop
pop
aas
or
cmps
pop
retf
or
cld
lds
xchg
aas
in
sub
imul
push
movs
pop
movs
xchg
test
inc
mov
bound
bound
(bad)
jg
cmps
dec
jle
int3
aaa
push
fild
mov
and
fnsetpm(287
pop
cld
fs
ret
out
(bad)
add
jl
pop
adc
cmps
pop
mov
sbb
mov
jbe
mov
pop
cmp
dec
and
mov
jle
add
add
adc
out
call
cmp
ror
out
bnd
inc
std
pop
out
jecxz
test
cdq
test
sub
mov
mov
inc
scas
pop
jg
xor
sti
inc
mov
push
popa
pop
push
(bad)
mov
push
enter
inc
cmc
lahf
aam
stos
xchg
imul
cmps
jl
std
xlat
call
aad
scas
mov
pop
sbb
mov
test
xor
cdq
call
ss
outs
int3
mov
inc
xchg
adc
jno
loopne
mov
xchg
xlat
movs
mov
fidivr
shl
pop
or
fidivr
call
cs
call
jl
pop
push
xchg
inc
mov
push
sub
mov
jae
or
jge
lods
(bad)
sub
(bad)
mul
ret
stc
sbb
jae
shl
and
add
cmp
mov
or
add
es
loopne
dec
xchg
and
pop
mov
retf
jo
test
inc
and
mov
sub
push
pop
cmp
mov
jecxz
pop
cmp
stc
call
aam
jns
bound
sub
pop
cmps
push
xchg
xor
inc
adc
xor
xor
or
inc
jmp
xor
data16
push
sub
dec
xchg
push
inc
aam
lods
mov
stos
or
cmc
pop
xor
cli
xchg
mov
mov
in
std
pop
movs
push
sbb
push
lahf
out
cmps
shl
retf
cmc
mov
jae
sub
mov
xor
push
adc
pop
in
xlat
jae
mov
sti
pop
out
mov
pop
jo
lahf
mov
pop
out
(bad)
(bad)
call
lock
div
je
sbb
int3
mov
fnstsw
popa
dec
fnstcw
sahf
shl
sbb
(bad)
push
cmps
pop
mov
mov
mov
outs
ins
or
xor
das
cmps
scas
cmp
dec
mov
nop
iret
movs
mov
adc
mov
dec
xlat
icebp
inc
sti
arpl
call
enter
stos
rol
cli
jecxz
pop
sbb
retf
mov
and
adc
mov
mov
nop
pop
push
mov
rcl
jp
xchg
sub
shr
xor
push
adc
aaa
inc
mov
repnz
adc
dec
gs
sbb
push
mov
push
imul
not
push
ror
mov
test
sbb
in
sbb
and
sbb
pop
je
adc
enter
add
popa
pop
bound
mov
scas
add
into
sub
dec
fisub
sub
jmp
or
jne
cmp
sbb
xchg
mov
fdiv
xchg
bound
dec
xor
xor
xor
mov
fbld
xor
cmp
adc
int3
xor
jle
imul
jno
xchg
add
pop
fld
sbb
int3
fstp
cmp
int3
push
sbb
cwde
push
fdivr
pop
int
xlat
mov
mov
mov
add
mov
mov
pop
and
cmp
jmp
jecxz
hlt
out
pop
gs
out
inc
ins
in
iret
xchg
cs
loope
inc
mov
cmps
mov
mov
mov
add
(bad)
popa
jecxz
lock
push
je
into
(bad)
aam
xchg
(bad)
not
mov
cdq
inc
leave
mov
inc
push
int3
pop
push
cmp
bound
sbb
fcom
pop
cli
and
mov
add
mov
mov
(bad)
mov
out
sbb
cwde
xor
cld
jne
add
imul
imul
leave
daa
cs
movs
cwde
pop
stos
cwde
pusha
ss
fstp
cs
mov
pop
imul
sub
and
retf
sbb
push
add
les
lea
mov
inc
int
mov
jnp
and
xlat
xchg
mov
mov
mov
push
(bad)
mov
adc
add
mov
add
inc
or
inc
imul
div
xchg
clc
cmp
shl
(bad)
adc
xor
shl
call
cld
int3
mov
add
cmp
cdq
or
(bad)
mov
adc
cmps
mov
fisubr
lods
je
call
int
adc
imul
pop
sub
div
jmp
(bad)
mov
pop
loopne
out
adc
xchg
jmp
test
or
dec
mov
pop
push
mov
int3
pushf
in
rcr
out
lahf
jmp
dec
or
lock
xlat
dec
fdivr
add
sbb
mov
dec
xor
imul
cmp
scas
mov
sub
fdivr
xchg
cmp
xor
xor
pop
add
ins
jbe
scas
call
cmp
jmp
jge
dec
mov
test
mov
cmp
cmp
xor
fidiv
ins
xchg
aad
sub
loop
sbb
adc
repnz
pusha
das
int3
mov
push
jg
gs
cs
(bad)
adc
aad
outs
xchg
cmc
fs
jnp
mov
popf
and
jg
xor
fdivr
daa
add
and
inc
inc
cmp
jno
push
dec
jp
bound
cmp
jb
cmp
shr
adc
fstp
mov
xchg
cdq
mov
pushf
mov
loope
mov
and
loop
cmp
and
xor
inc
xchg
arpl
cmp
inc
fcomp
adc
nop
cdq
add
mov
pop
fcomp
inc
inc
aaa
cmps
pop
sti
mov
outs
es
dec
sar
inc
ja
push
pop
pop
mov
div
cmc
jge
xor
push
push
js
js
dec
add
or
loopne
in
or
mov
add
test
repnz
repnz
xchg
adc
popa
cmps
add
in
adc
cmp
push
xchg
out
rol
mov
cmc
inc
out
adc
mov
sbb
inc
rcl
daa
lea
fstp
xchg
imul
sbb
fwait
lods
fdiv
imul
and
femms
sub
lock
lds
push
ja
imul
retf
gs
fadd
xchg
call
push
and
or
into
lods
in
xor
push
imul
ss
mov
mov
adc
popa
outs
cmp
ret
lods
inc
not
ss
call
cli
push
or
or
xor
mov
fucom
int3
mov
jb
loopne
rdpmc
xor
jae
lds
or
imul
xor
outs
jl
nop
outs
mov
mov
cs
leave
in
xchg
adc
aam
cmp
sar
mov
sub
js
lahf
mov
sub
mov
call
sub
jns
psrld
ja
(bad)
stos
cmps
mov
and
jl
icebp
mov
fwait
push
iret
mov
and
dec
outs
in
xor
cld
(bad)
push
fidivr
xor
shl
jo
jecxz
cmp
fmul
aaa
push
jns
pop
inc
bound
rol
pop
and
pop
lods
sbb
ss
outs
cs
sbb
in
jnp
shl
sub
xor
fnstenv
das
aad
js
cmp
imul
out
data16
out
inc
aaa
adc
and
lods
and
inc
mov
xor
stos
jo
mov
jne
jmp
or
fistp
xor
jae
enter
adc
clc
adc
(bad)
pop
(bad)
in
enter
(bad)
adc
push
icebp
das
arpl
pushf
sbb
pop
out
in
jmp
je
jmp
pop
shl
in
aaa
test
pop
les
inc
jae
mov
invd
add
cmp
push
sub
cdq
int
push
fdivr
push
push
in
hlt
add
test
dec
in
lahf
xchg
fdivr
adc
cmps
pop
inc
aas
push
cmps
ja
clc
xchg
mov
arpl
fimul
mov
push
push
sti
add
fiadd
push
retf
popf
mov
frstor
out
mov
movs
pop
pop
and
or
pop
das
xor
pop
push
fidiv
mov
lods
mov
mov
(bad)
(bad)
sbb
mov
mov
sub
and
out
cld
ss
or
push
out
rcr
lds
mov
das
mov
xor
sahf
imul
ins
dec
push
push
mov
jbe
jno
es
stos
xchg
add
pop
fbstp
aad
add
dec
cmp
push
add
sbb
xor
(bad)
pop
push
add
cmps
retf
sub
nop
xchg
dec
ss
das
pop
rcl
sub
out
cmp
pusha
jle
jg
call
adc
mov
mov
or
push
xlat
xor
popa
jno
fimul
dec
push
test
je
xchg
sti
data16
test
inc
jae
nop
inc
outs
sti
scas
std
fcomp
xchg
xor
or
or
rdtsc
jo
or
(bad)
sub
pop
data16
sar
call
jmp
push
icebp
shl
les
add
aad
(bad)
pop
adc
(bad)
ret
cmp
push
(bad)
pushf
mov
sbb
fwait
inc
rcr
sbb
out
pop
retf
sti
leave
mov
mov
jae
shl
in
nop
xchg
lock
xor
push
xlat
adc
and
sbb
pop
mov
in
mov
jg
inc
iret
sub
lahf
bound
adc
rol
and
push
jmp
cmps
rcr
(bad)
test
in
fdivr
jg
retf
or
add
les
sub
pushf
mov
push
mov
sbb
push
cs
push
sub
sahf
movs
pushf
dec
pop
scas
repz
lock
mov
sub
mov
jl
mov
xchg
dec
cli
mov
retf
or
cld
test
daa
mov
add
pop
push
repnz
or
mov
cbw
xchg
sti
jne
adc
dec
js
stc
lock
sahf
shl
mov
sub
inc
movs
stos
stos
jb
out
jb
iret
mov
sahf
or
jno
test
inc
xor
mov
and
sti
cmp
imul
movs
(bad)
xchg
stos
outs
push
clc
daa
or
ins
nop
sub
jns
stos
pop
lock
xor
imul
rcl
fnclex
fld
imul
xor
mov
jecxz
addr16
ins
lea
dec
shr
iret
sub
push
call
fsub
pop
cdq
retf
push
sahf
xchg
mov
cmc
fld
mov
add
mov
fwait
ror
sub
or
lds
data16
xchg
mov
mov
loope
es
dec
or
loope
stc
aaa
out
xchg
jg
addr16
sbb
add
scas
xor
lds
mov
jg
cmc
sbb
jecxz
(bad)
cmp
or
mov
inc
jae
xchg
add
jge
repnz
scas
push
jmp
scas
mov
sub
xchg
jbe
fwait
cmp
repz
mov
ret
(bad)
push
xor
aad
cmp
sahf
loop
dec
jecxz
das
(bad)
int3
retf
or
lahf
retf
loop
xor
push
dec
mov
(bad)
mov
mov
outs
aas
jo
xor
xor
and
imul
lods
gs
add
jnp
(bad)
sub
cli
(bad)
sub
ret
xor
retf
out
into
fnstcw
push
call
mov
pusha
or
iret
setp
lds
div
lods
pop
push
fadd
pop
test
pusha
shr
test
xchg
ss
jge
das
les
pop
sub
pusha
jl
or
dec
rcl
xor
hlt
or
cli
lea
mov
int
adc
dec
imul
push
and
and
mov
mov
add
pop
mov
test
jle
sahf
(bad)
cld
push
in
push
in
(bad)
fs
in
cmp
pop
push
sbb
retf
out
dec
dec
pop
loopne
punpckhwd
cli
les
push
add
inc
mov
jp
popa
or
xor
les
jae
aad
mov
fs
lea
mov
test
(bad)
xor
or
outs
mov
inc
ins
sub
and
sub
fwait
mov
cdq
push
jp
fldenv
lock
jg
in
into
je
dec
push
cmp
movs
pop
inc
or
mov
out
cmp
or
sub
test
xchg
or
add
mov
cmp
pop
push
cmp
jecxz
add
sti
shr
ret
wbinvd
popa
inc
nop
cli
jo
ror
lods
rcl
jo
cmp
mov
sahf
cmp
ror
not
sub
loopne
mov
stos
cwde
test
dec
int
fiadd
rcr
out
movs
aad
fstp
cli
stos
fwait
push
stos
or
jno
and
icebp
sahf
xlat
fidivr
jmp
retf
sub
inc
push
or
dec
mov
sbb
imul
mov
and
cld
jb
mov
out
xchg
popa
das
add
mov
out
sbb
jns
sahf
sti
jg
dec
jne
and
unpckhps
rol
bound
push
(bad)
in
mov
jne
push
cmp
push
shl
pop
jb
xchg
das
mov
mov
enter
mov
jl
adc
rol
push
jmp
inc
xchg
adc
test
cmp
or
scas
xor
jb
movs
mov
retf
movs
daa
cmc
jnp
in
pop
pop
out
xchg
(bad)
cmp
bts
outs
aam
cmc
push
adc
adc
dec
inc
mov
aaa
lahf
cmp
scas
pop
jl
jmp
imul
pushf
sub
mul
lock
enter
inc
pop
mov
jge
test
sub
ja
sub
icebp
mov
mov
jmp
test
gs
push
and
lods
jns
lds
pushf
test
movs
and
jmp
test
inc
xchg
dec
add
test
cmc
xchg
(bad)
es
aas
fcomp
push
xchg
mov
sub
mov
bound
in
cdq
call
pop
add
(bad)
xlat
sbb
xchg
inc
jle
xchg
inc
cdq
ret
jp
pop
dec
push
pop
shr
cvttps2pi
stc
je
enter
inc
mov
leave
inc
in
scas
repz
push
add
(bad)
push
dec
mov
and
push
out
cmp
add
call
push
in
xor
jg
scas
ret
ins
xor
cmp
fsubr
xchg
imul
cs
call
xchg
mov
cmp
adc
repz
sahf
shl
xchg
xlat
mov
xor
mov
lahf
xlat
adc
fmul
rol
cmp
ja
call
movs
movs
pop
sbb
rcr
cmp
daa
dec
cdq
pusha
push
sub
mov
xchg
mov
xor
popf
xchg
pop
or
jge
into
pop
mov
jg
out
mov
push
dec
pop
call
repz
sub
hlt
and
pop
(bad)
outs
fdiv
adc
mov
and
sub
mov
ins
jbe
mov
jbe
mov
jne
fnsave
jg
bound
cs
pop
or
daa
mov
dec
jge
lods
repz
jg
lea
dec
cmp
loop
retf
cmp
mov
adc
pushf
mov
adc
adc
aas
imul
cmc
pop
dec
adc
icebp
xlat
cs
xchg
stc
aad
push
pop
fcmovnbe
push
out
mov
and
pop
push
pop
inc
fst
dec
jne
inc
adc
jl
dec
retf
(bad)
jp
jmp
adc
mov
arpl
cmp
xor
stos
and
daa
dec
xchg
mov
imul
or
jae
push
jbe
cmp
dec
cmp
add
pop
sbb
dec
rcr
jmp
int3
fst
add
data16
scas
fs
fwait
pop
retf
xchg
xchg
sbb
(bad)
add
sahf
out
dec
outs
mov
jb
mov
pop
push
daa
push
jb
jle
fisttp
aaa
push
out
out
hlt
add
(bad)
and
mov
cmp
call
test
jl
push
inc
sub
jnp
fldenv
test
(bad)
fidivr
imul
dec
call
sbb
lahf
mul
js
nop
or
arpl
xor
ficomp
sar
fsub
cs
mov
int3
lahf
(bad)
shl
rcl
pop
cmps
sub
push
shr
jle
pop
mov
xor
or
cwde
xchg
outs
add
sar
jo
adc
add
or
mov
ins
xchg
xor
call
inc
pop
ficomp
aad
xchg
xchg
shl
call
cmp
test
popa
jp
fild
adc
push
dec
fcomp
scas
retf
fbstp
sbb
lods
fcom
cmps
js
adc
sbb
sub
sbb
jnp
fst
mov
sbb
scas
xchg
push
jmp
stos
cmc
sub
pop
std
inc
stos
mov
jg
jnp
mov
out
out
icebp
and
repnz
js
inc
lea
test
sub
mov
pop
lahf
repz
sub
inc
rcr
out
shl
jno
lods
aas
sbb
add
push
stc
mov
sbb
push
inc
cld
cmp
xor
xchg
or
jle
mov
movs
cmp
iret
call
hlt
mov
mov
mov
mov
jmp
cmp
xchg
pop
out
push
mov
in
loopne
(bad)
rcr
sbb
xor
add
ds
sbb
in
cwde
adc
jmp
mov
(bad)
arpl
sbb
cmp
test
js
mov
pop
shr
or
add
inc
or
rol
out
push
movs
pushf
mov
pop
popa
adc
cs
sahf
mov
dec
mov
jge
jo
mov
in
dec
adc
or
pop
inc
movs
stc
pop
xchg
ror
dec
dec
jne
shr
mov
inc
mov
les
fnsave
xchg
sub
xchg
repnz
xor
pop
cmps
(bad)
es
cld
das
push
mov
jmp
xchg
cmp
or
(bad)
(bad)
enter
mov
mov
jg
xor
sub
jo
(bad)
jg
xchg
mov
das
or
pop
pop
dec
jb
mov
xchg
mov
faddp
call
inc
imul
xchg
push
lahf
adc
in
dec
out
dec
scas
rol
hlt
xchg
ret
mov
outs
retf
push
out
and
mov
jbe
out
jmp
mov
movs
icebp
lods
fldcw
push
in
push
test
sub
fnstcw
mov
mov
xlat
stos
xchg
jle
into
xchg
shl
sar
or
das
add
ja
or
stos
not
mov
out
nop
jnp
arpl
jl
pop
mov
xor
(bad)
xchg
and
fidivr
mov
pop
imul
lods
sub
(bad)
pop
js
pop
jo
push
int
stc
adc
sub
pop
and
sar
mov
inc
gs
push
cmp
add
sahf
and
pop
pop
jae
sub
js
xchg
jmp
and
test
adc
in
shl
cs
xor
mov
jmp
(bad)
loopne
aaa
pop
and
test
rol
lds
mov
popa
cld
retf
jae
test
mov
push
inc
sbb
or
add
ret
test
mov
jne
push
aam
xchg
test
adc
xchg
aaa
sub
fldcw
lea
mov
movs
stos
xor
push
mov
in
pop
cmp
ss
mov
leave
inc
imul
and
clc
xbegin
repnz
dec
imul
and
lods
cld
(bad)
cmc
adc
sahf
into
std
pop
jmp
mov
mov
cmp
cdq
sub
mov
fdivr
les
aas
xchg
xchg
in
cmps
popa
pop
push
in
push
leave
mov
sbb
rol
mov
or
ud2
mov
sub
(bad)
xor
xchg
(bad)
pop
ss
inc
lea
repz
into
lock
push
jl
mov
mov
jecxz
jmp
cs
or
pushf
into
pop
repnz
jmp
inc
adc
sbb
dec
js
mov
dec
call
sub
lods
cmps
inc
es
cmp
je
jae
test
ret
arpl
inc
cmp
mov
xor
shl
dec
mov
ja
aaa
sbb
mov
ficomp
mov
call
imul
cwde
cmp
das
xchg
jg
xchg
cmp
mov
jge
jns
add
enter
in
mov
clc
(bad)
(bad)
packuswb
test
jo
int3
or
je
mov
pop
lods
and
leave
jmp
sahf
mov
sub
(bad)
xor
sbb
cmps
popa
stos
call
jmp
adc
sub
imul
mov
mov
aaa
out
repz
xor
inc
and
ret
inc
and
ja
xchg
lds
or
test
mov
jne
adc
fcom
in
sti
(bad)
mov
sub
call
scas
or
add
or
adc
mov
push
cmp
jb
and
push
or
adc
ficomp
sahf
adc
call
jl
jo
add
retf
(bad)
jg
xchg
cmp
mov
push
ss
rcr
and
or
popf
jmp
repz
cmp
jg
inc
cmp
adc
(bad)
push
fdivr
push
sub
and
cwde
lods
mov
ds
push
sub
push
lods
repz
xchg
jg
jl
fldpi
out
xchg
lods
daa
push
xor
inc
push
jge
xchg
cmps
mov
loopne
mov
lods
pop
or
and
add
cmp
or
test
mov
enter
mov
fidivr
(bad)
sbb
adc
mov
pusha
mov
imul
inc
test
rol
mov
shr
shl
xor
into
jp
pop
mov
repnz
outs
mov
outs
sub
mov
mov
js
xchg
rol
shl
mov
dec
pop
xor
mov
sti
test
push
iret
adc
push
adc
mov
idiv
add
rol
cmp
popa
mov
mov
aas
lock
mov
jmp
sub
or
in
add
cmp
ret
es
ins
inc
aas
lock
scas
ror
pop
add
pop
mov
dec
mov
mov
mov
cmp
push
adc
push
loope
out
sbb
idiv
pop
sub
gs
jb
xchg
add
mov
sbb
cmp
jns
test
cwde
out
cmc
xlat
int3
push
imul
xor
sub
sar
call
pop
mov
popa
out
sub
stc
dec
mov
popa
test
xor
jmp
sbb
pop
push
lock
xchg
xchg
test
sbb
push
mov
xchg
in
sub
mov
cs
pop
jns
inc
sub
out
pushf
cmp
mov
in
mov
adc
inc
into
popf
mov
lods
pop
addr16
inc
adc
pop
imul
add
repnz
jge
sti
dec
fild
imul
dec
inc
pushf
jl
dec
cmp
xchg
mov
dec
ret
retf
fwait
xchg
lods
enter
aas
pop
mov
int
push
scas
call
inc
mov
jp
add
retf
mov
push
xchg
loop
dec
push
pushf
ficom
out
mov
mov
jae
mov
xlat
mov
pushf
xor
inc
aam
je
es
and
(bad)
arpl
inc
jae
mov
jns
shl
retf
outs
enter
jo
and
mov
cmps
xchg
cs
dec
jns
daa
mov
pop
fld
mov
(bad)
xchg
popf
cld
sbb
pop
sti
adc
mov
cmp
lahf
gs
rol
mov
cmc
in
daa
(bad)
mov
ja
dec
fild
jbe
movs
retf
or
pushf
adc
shr
(bad)
sbb
inc
cmp
jle
mov
aam
stos
sub
mov
lea
sub
xor
lock
out
nop
push
inc
sub
xor
clc
lds
adc
xor
mov
mov
cmp
cmp
or
enter
fs
mov
xchg
jmp
mov
dec
iret
ins
adc
jns
test
data16
(bad)
mov
jl
rol
(bad)
cmp
rcl
(bad)
imul
inc
jae
add
sbb
adc
sub
cmp
mov
gs
sub
push
mov
cmps
outs
jp
xor
mov
into
push
sub
aas
shl
cmp
cld
mov
hlt
mov
iret
sbb
jno
jae
fdivr
xchg
or
(bad)
push
pop
push
sbb
push
shl
aam
add
and
sbb
add
cli
inc
pop
aaa
or
jg
and
jge
pop
call
ds
add
aam
repnz
retf
cli
in
ds
fidivr
inc
jns
(bad)
leave
std
xchg
mov
cmp
push
je
daa
movs
sahf
out
(bad)
imul
sahf
(bad)
daa
aas
push
mul
adc
into
mov
in
adc
dec
add
mov
sub
je
ins
retf
aad
mov
sub
push
pop
xchg
into
ja
outs
cmp
je
cmp
clc
cld
push
mov
(bad)
js
sub
test
mov
aad
out
cmp
arpl
jnp
das
jns
xchg
inc
imul
cmp
jae
jmp
cmp
adc
dec
pop
mov
and
cld
int3
and
cmp
outs
pop
les
xchg
stos
dec
mov
mov
xchg
cmp
cli
xor
cli
test
(bad)
mov
bnd
popf
cmp
fdivr
fstp
ss
jnp
dec
ret
mov
hlt
imul
add
mov
jmp
pop
rol
(bad)
jecxz
mov
sub
cmp
test
pop
popa
adc
sub
pop
add
out
jnp
mov
pusha
inc
pextrw
jecxz
ret
xchg
pop
mov
jmp
jge
xor
pop
mov
adc
fisub
iret
movs
push
xor
test
and
push
iret
pop
lea
int3
inc
cmp
or
xor
aam
sbb
(bad)
cmc
jno
mov
retf
mov
lods
aaa
sub
xor
test
add
aam
adc
sub
mov
out
scas
das
mov
(bad)
xchg
sub
mov
clc
scas
adc
in
cmps
pop
pop
inc
bound
cs
inc
mov
jno
pusha
repnz
xor
mov
cmp
adc
mov
or
ss
xchg
inc
lock
adc
repz
sub
dec
enter
ja
adc
mov
mov
or
rcl
inc
repnz
sbb
fnstcw
cld
hlt
pusha
cmp
add
lods
and
lahf
retf
or
imul
sbb
sub
or
cmp
add
pop
dec
dec
out
fwait
jne
sti
leave
and
adc
adc
icebp
mov
mov
sbb
test
ins
hlt
int
addr16
sbb
jp
cmc
gs
int
aas
sbb
repnz
retf
dec
pop
xchg
stos
jbe
frstor
cs
add
or
out
xor
and
jns
push
add
sub
in
inc
jne
or
mov
loope
loop
rol
dec
dec
push
cmp
sub
out
xchg
xor
dec
xlat
xchg
popa
ret
mov
or
fnsave
sar
jecxz
sub
jmp
and
sub
push
jl
sub
shl
jp
push
inc
add
cmp
push
icebp
sub
hlt
push
mov
xor
push
jns
adc
jbe
movs
xchg
fs
dec
jbe
out
stc
mov
mov
jbe
sub
adc
inc
pop
lds
scas
mov
dec
movs
jmp
mov
mov
jge
out
fadd
je
and
lods
mov
jecxz
fucom
fsubr
pop
inc
imul
push
xchg
int
(bad)
adc
xor
iret
loope
inc
add
shl
ja
mov
je
mov
jecxz
sti
pop
lock
jmp
in
add
mov
cmp
jb
cmp
xlat
test
ja
(bad)
mov
dec
fmul
ret
in
push
xor
sub
push
cmps
inc
push
pop
ja
push
mov
in
cmp
pop
jmp
mov
and
pop
mov
call
icebp
test
out
leave
inc
scas
mov
push
popf
jo
or
ret
xor
xor
xor
jns
pop
js
call
sar
xor
movs
int3
shl
push
loope
xor
mov
inc
(bad)
lock
xchg
daa
inc
push
(bad)
loopne
mov
sub
jnp
outs
fistp
push
ror
outs
mov
mov
fst
fldcw
ins
fmul
mov
(bad)
cmp
xchg
push
int3
mov
pop
and
stc
mov
scas
sub
bound
pop
jp
mov
dec
and
mov
add
xchg
mov
or
cld
inc
xor
lods
xchg
mov
xchg
enter
in
jae
push
mov
and
loope
sti
cs
push
addr16
les
push
adc
mov
daa
sub
pop
aam
inc
repz
movs
push
jecxz
pop
cmc
and
jnp
cli
int
mov
shl
or
mov
lock
sbb
push
lods
jg
jno
mov
cld
jmp
jb
jecxz
cwde
sub
sbb
jmp
ins
fadd
inc
mov
push
jle
stos
lds
dec
and
adc
ins
iret
mov
ret
dec
xor
dec
(bad)
arpl
push
mov
mov
(bad)
sbb
cmc
arpl
dec
dec
jbe
jl
pop
xlat
rcr
mov
rol
jne
retf
out
dec
rcl
pop
inc
and
js
pop
in
and
gs
sub
lds
out
mov
sub
hlt
inc
add
push
adc
call
cmp
cmp
and
xchg
stc
ret
mov
popa
jp
fisttp
xchg
cmc
mov
push
sub
(bad)
mov
ds
retf
jle
sub
imul
cmp
pop
fs
cmp
sbb
push
sub
xlat
jno
les
pop
bound
pop
in
dec
movq
xlat
mov
lahf
pop
sbb
icebp
sub
(bad)
sbb
jae
mov
daa
xchg
imul
cmc
add
inc
jge
mov
movs
enter
and
xchg
ret
test
fbstp
jo
popf
paddsb
mov
(bad)
xor
jmp
movs
movs
pop
ror
jo
push
ja
sub
or
or
push
push
push
mov
pop
retf
inc
lea
sbb
or
dec
jne
sbb
shl
adc
lock
outs
xor
mov
push
out
jo
dec
add
lds
add
les
mov
es
retf
sub
mov
sbb
fisttp
dec
mov
inc
mov
popa
call
fdiv
xor
and
push
movzx
ds
movs
mov
jb
jge
push
je
scas
mov
jnp
popf
add
cli
stos
sub
adc
ds
pop
ficom
lahf
aas
dec
or
inc
xchg
jp
sbb
sub
daa
ret
outs
ret
xchg
mov
xchg
and
pop
or
fs
lods
shl
mov
jge
push
cmps
pop
(bad)
xchg
or
pop
jle
sub
pop
test
je
hlt
xchg
loopne
pop
add
cli
and
pop
dec
mov
pusha
add
shl
mov
sub
sbb
aas
fcmovbe
js
or
sbb
pushf
cmp
cmp
mov
mov
xor
cmps
adc
adc
and
cmp
je
js
neg
cmp
xlat
lods
pop
cmp
lods
leave
and
pop
xor
dec
xor
push
cdq
arpl
jg
aam
imul
ss
into
sub
sub
and
or
dec
dec
push
add
imul
cs
test
xor
xlat
mov
or
cwde
das
(bad)
mov
test
clc
js
xchg
sub
push
aaa
sti
xchg
int3
sub
mov
mov
das
ins
lock
test
jge
lea
or
dec
lds
pop
stc
pop
out
into
mov
pop
cmps
inc
cmps
pop
mov
int3
mov
aam
pop
lds
mov
shl
inc
xchg
loopne
pop
jns
xchg
inc
lea
dec
adc
es
int3
jecxz
lock
sahf
das
in
jmp
scas
ja
stos
mov
fisubr
cmp
lds
jl
and
dec
je
bound
test
cld
dec
add
loopne
sub
cs
(bad)
aaa
fdiv
pop
(bad)
push
xor
popf
inc
and
ds
inc
or
jmp
mov
mov
je
push
mov
sbb
add
cmps
add
mov
push
test
outs
clc
fidivr
scas
mov
inc
movs
sbb
aaa
mov
dec
adc
xor
cld
stc
rcr
mov
stos
hlt
mov
shr
aas
pushf
dec
popa
push
hlt
aad
jg
data16
cmp
jb
xchg
and
xor
sub
mov
inc
repz
mov
jmp
and
add
loop
cld
call
popa
sahf
dec
scas
mov
cs
je
loopne
and
xchg
enter
sub
bswap
xchg
inc
inc
fcomip
pop
fnstsw
aaa
cmp
sub
ret
xchg
aas
repz
outs
mov
sbb
into
push
jns
call
jl
sbb
adc
ret
out
in
(bad)
stc
bound
mov
inc
shr
dec
ret
xlat
push
jge
add
xchg
nop
bound
sbb
or
jmp
rcl
push
rol
imul
lock
xchg
fcmovnu
xor
mov
or
pop
cdq
ret
leave
push
ret
xor
iret
retf
sub
xchg
push
cmp
cmp
or
pop
lahf
mov
inc
out
icebp
mov
mov
ret
in
in
and
sti
int3
add
mov
or
add
adc
push
and
stos
imul
mov
adc
pop
mov
mov
or
aad
ret
adc
pop
pop
lods
pop
cmp
aam
(bad)
lahf
call
shl
sub
push
mov
inc
ds
out
sbb
(bad)
xor
out
xchg
data16
mov
sbb
mov
jnp
imul
mov
xchg
dec
sbb
xlat
fnstsw
cld
push
fld
fsub
lds
cdq
imul
sub
sub
inc
outs
mov
icebp
lods
lahf
fld
pop
sbb
jle
mov
jne
xlat
and
mov
stos
mov
mov
adc
movs
in
cmp
mov
xchg
les
fstp
push
and
loopne
ja
(bad)
in
scas
mov
mov
in
pushf
add
inc
scas
ins
sbb
mov
mov
shl
imul
retf
ror
xchg
pop
or
movs
jge
cli
add
sub
les
into
adc
xor
movs
pop
xchg
jae
inc
xchg
mov
and
or
sahf
ror
cld
nop
sub
and
cmp
xor
add
mov
push
push
lds
inc
enter
xor
xlat
fadd
test
cmp
std
gs
sti
push
ins
xchg
fld
jg
cmp
test
js
data16
in
adc
xor
repz
mov
xchg
cld
jle
jl
push
mov
inc
retf
push
push
push
test
mov
shl
jae
aad
daa
cli
sub
arpl
pop
adc
iret
and
xchg
mov
xchg
loopne
sub
mov
bound
sar
fcmovne
loop
(bad)
adc
or
inc
cmp
lea
aam
xchg
or
dec
std
fld
push
pop
aam
mov
loopne
(bad)
ja
jmp
or
aas
mov
mov
push
mov
or
add
pop
test
jb
ror
or
mov
mov
ins
js
cmc
pop
loope
enter
cs
call
dec
xchg
jnp
rcl
pop
inc
out
jmp
cmp
cmp
lock
repz
push
call
pop
jbe
or
cmp
movs
jbe
push
xlat
(bad)
arpl
cli
aaa
mov
add
aad
imul
sub
movs
movs
jge
fwait
shl
adc
dec
cmps
mov
scas
ja
int
pop
packsswb
sub
add
lds
pop
fwait
inc
add
sub
shl
jne
fs
ja
xor
sub
xor
std
test
cmp
(bad)
jmp
jbe
retf
ror
sbb
call
div
fld
lea
ds
test
push
mov
xor
mov
jns
retf
or
clc
ds
push
or
loop
das
retf
(bad)
stc
inc
xor
icebp
push
and
rcl
ja
push
push
pop
sbb
mov
inc
sub
aad
mov
sbb
sbb
xor
out
(bad)
cli
push
aam
jle
scas
mov
(bad)
ja
push
aam
push
mov
pop
pusha
ror
jns
mov
mov
ret
xlat
cs
sbb
dec
mov
in
repz
in
dec
mov
jmp
or
stos
sti
pushf
sbb
xchg
cld
stos
or
fmul
sub
(bad)
push
push
jmp
repz
inc
fbstp
into
cmp
sbb
in
test
sbb
repz
jmp
shl
jl
daa
inc
aaa
popf
lods
dec
mov
pop
add
ret
inc
pop
repz
popa
mov
(bad)
fnstsw
jno
daa
test
shl
or
out
mov
inc
sub
add
xchg
sub
mov
arpl
jmp
fwait
jg
fucomi
sub
(bad)
jecxz
cmovle
or
jmp
mov
out
aam
jge
sahf
out
gs
popf
popa
pop
jmp
push
retf
sar
and
push
sub
repnz
cmp
iret
cmp
push
xor
dec
jp
popa
popf
mov
dec
sti
mov
push
jns
test
or
es
ins
rcr
popa
pop
xchg
shl
mov
repz
(bad)
inc
cmc
and
pusha
cwde
mov
cmp
xchg
push
js
or
sub
xchg
cmc
inc
aam
mov
cmp
xchg
cld
mov
in
jl
cdq
adc
mov
and
or
(bad)
add
nop
pop
js
popa
inc
mov
aas
xchg
popa
scas
movs
fld
push
and
ficomp
into
add
mov
push
mov
sub
mov
jge
ror
scas
inc
and
aaa
or
out
std
dec
stc
fld
xchg
mov
xchg
nop
popa
rcr
mov
div
mov
iret
jge
xchg
out
lods
arpl
ja
pop
jae
mov
lods
aaa
inc
shl
es
mov
ror
push
pushf
jl
out
adc
scas
ins
pop
movs
mov
in
(bad)
(bad)
shr
xor
dec
jbe
stos
pop
inc
xor
pop
fistp
dec
inc
outs
push
push
dec
inc
jo
fwait
xlat
fdivr
lds
inc
mov
mov
ficomp
cmp
adc
xlat
push
push
sbb
das
(bad)
pop
ret
cmp
jmp
sub
les
fild
cmovl
mov
jnp
fcomp
xor
les
and
je
outs
adc
jg
pop
cmp
dec
int3
lea
jmp
rcl
xchg
in
enter
push
xchg
and
mov
add
inc
and
ret
pop
push
or
aas
sub
jecxz
and
iret
jmp
push
lds
xchg
mov
or
aad
pop
push
inc
push
jns
pop
jae
frstor
add
loope
add
fwait
ret
out
mov
cmps
push
mov
pop
leave
jno
and
int
xchg
mov
aaa
mov
lds
inc
pop
scas
push
push
sbb
sub
retf
and
sub
sub
add
ins
push
jg
mov
sbb
loope
fwait
or
sbb
sbb
jl
shr
sbb
fld
rol
xor
cdq
lahf
sti
sbb
in
outs
xchg
arpl
mov
fneni(8087
adc
or
add
dec
inc
xchg
sti
xchg
out
inc
push
outs
call
jnp
xor
sub
daa
mov
jnp
and
pop
call
pop
addr16
ret
xchg
pop
pop
ds
js
stos
mov
in
jmp
frstor
(bad)
inc
xor
jl
scas
mov
inc
lahf
nop
aam
sti
iret
popa
mov
scas
jle
add
xchg
push
ss
or
sub
rol
and
xor
sahf
lahf
test
dec
mov
add
mov
mov
(bad)
jae
ins
xchg
test
leave
out
mov
(bad)
call
mov
(bad)
or
ret
or
repz
push
xchg
and
mov
jle
xlat
adc
adc
lea
fidiv
sbb
sbb
in
repnz
inc
mov
outs
mov
test
out
sub
or
ins
lds
scas
jp
xchg
push
enter
cmp
out
pop
adc
ss
popf
mov
mul
cmc
jle
inc
mov
cmp
aas
pop
and
cmp
jno
inc
aam
and
adc
and
cmp
push
pop
sub
add
mov
or
sbb
fwait
pop
cmps
cmp
sbb
je
pusha
jnp
dec
repnz
push
jns
dec
mov
cmp
mov
cwde
aad
aas
inc
or
les
push
inc
ins
lds
sbb
fdiv
mov
jnp
cmp
(bad)
jg
arpl
pop
(bad)
sbb
jle
sbb
adc
adc
xor
sbb
add
fsubr
gs
fiadd
push
enter
inc
inc
pusha
ret
inc
repz
test
lea
and
setge
sub
adc
dec
pop
scas
inc
mov
push
out
sbb
cmp
mov
push
mov
(bad)
popa
cdq
fs
jg
inc
dec
repnz
nop
aas
and
push
aaa
(bad)
push
cld
iret
into
cmp
jno
inc
int
out
pop
pop
mov
push
in
stos
adc
je
dec
dec
adc
ret
pop
retf
jno
ins
(bad)
push
out
ss
pop
(bad)
std
push
pusha
pop
fstp
and
dec
mov
xor
dec
mov
cmp
jge
adc
jg
addr16
test
sahf
mov
jg
imul
dec
push
push
aam
ror
in
lods
nop
dec
fwait
rcr
push
(bad)
lds
fisubr
pushf
dec
mov
cdq
sti
(bad)
sbb
dec
out
adc
out
lods
(bad)
js
popf
push
test
in
adc
adc
and
test
leave
jnp
fcom
popf
lds
fs
xor
fldcw
ret
pop
push
or
stos
mov
cmp
mov
js
add
mov
jo
rcl
cmp
sub
aaa
add
retf
into
cmps
fwait
clc
dec
mov
xor
lea
mov
pop
pushf
push
imul
prefetch
xchg
mov
mov
jno
outs
push
mov
push
(bad)
dec
mov
mov
xchg
and
pop
push
jae
add
push
xchg
(bad)
xor
cmc
lahf
movs
mov
dec
call
cmps
iret
out
push
shl
xor
mov
push
add
stos
push
xor
push
add
das
xor
dec
loope
fs
popa
push
cdq
xor
cvtdq2ps
push
clc
shr
test
out
mov
xlat
mov
cmc
or
sub
xor
stc
lds
sbb
sti
xor
cmp
retf
sbb
aam
rol
pushf
or
scas
sahf
sbb
psrad
push
or
ret
aaa
imul
gs
push
lea
or
shl
xlat
test
sar
adc
mov
push
pop
jge
xor
jp
or
aam
mov
sahf
call
jmp
push
outs
push
adc
aam
mov
jns
pop
fimul
test
sub
xor
mov
pusha
pop
lds
pop
pop
mov
std
push
sub
shr
sbb
lods
call
mov
retf
popa
sahf
sar
mov
aas
dec
(bad)
jbe
std
inc
or
clc
or
jmp
pushf
out
pop
jmp
and
mov
fcomp
mov
(bad)
mov
jmp
js
dec
sub
mov
mov
ror
std
ins
or
inc
mov
or
inc
inc
mov
ja
xchg
xor
ror
xlat
ds
dec
or
xor
pop
push
mov
dec
shr
add
fcmovb
loope
fisttp
or
sbb
or
mov
add
fsub
jecxz
mov
mov
sub
add
sub
retf
movs
push
mov
mov
cdq
jmp
xchg
mov
(bad)
pop
xchg
daa
push
and
int
iret
xchg
test
imul
scas
fld
and
pop
pop
(bad)
pop
or
add
push
xchg
add
cmc
movs
jnp
daa
js
fwait
dec
mov
and
scas
cmp
jno
out
add
stc
add
sbb
pop
gs
cmps
jle
call
adc
ins
sub
xlat
sti
cmp
sub
cmp
inc
and
push
push
lock
adc
movs
mov
js
cmp
ret
push
jno
int3
cmps
dec
push
sub
lahf
retf
rcl
mov
cmc
jl
push
ret
or
sub
loopne
jge
iret
cmp
pop
das
(bad)
mov
repz
jns
icebp
xchg
cmp
dec
neg
mov
daa
and
fsub
fsubr
ja
jnp
(bad)
ss
jl
inc
mov
pop
dec
neg
and
jecxz
daa
mov
call
mov
adc
fidiv
or
dec
jne
push
add
scas
shr
pop
cmps
(bad)
jmp
outs
adc
jb
imul
fwait
cmps
dec
jmp
stos
xor
iret
jbe
jl
cmp
mov
outs
add
call
sub
inc
pop
mov
mov
mov
cmp
sub
aas
and
aas
mov
mov
(bad)
dec
mov
inc
outs
mov
mov
shl
sbb
jmp
xchg
daa
cs
je
pop
push
mov
cmp
jg
push
dec
out
dec
shl
arpl
xor
lock
mov
adc
lods
pop
mov
and
xor
pushf
aad
jmp
stos
inc
cmp
neg
out
mov
and
mov
dec
sub
cmps
call
les
dec
fcom
out
rcl
div
sub
sbb
sti
les
xlat
dec
and
test
xor
lock
icebp
adc
cmp
outs
xor
hlt
fcmovnb
in
fbstp
mov
daa
and
retf
mov
repz
test
sbb
out
data16
cmp
retf
jl
dec
in
test
jecxz
or
jle
test
mov
pushf
outs
cmps
mov
xchg
mov
(bad)
movs
stc
imul
out
adc
int3
out
aas
push
sub
push
test
cmp
or
pop
addr16
sub
mov
sub
or
das
ret
cmp
cmp
inc
xchg
jo
xchg
jle
xor
pop
(bad)
jg
xlat
aam
jmp
and
mov
or
sar
pcmpgtd
movs
leave
or
mov
ficom
dec
mov
mov
fcmove
mov
xor
inc
or
pop
enter
iret
pop
push
mov
xchg
data16
ficomp
bound
std
jge
retf
inc
in
ins
repnz
xor
dec
xchg
or
or
jle
fs
pusha
sar
shl
rol
sub
adc
mov
ss
mov
fimul
cmp
add
xchg
cmp
lods
push
fild
fs
push
mov
cmps
cmc
jmp
pop
lods
cs
loopne
fisttp
pop
cmp
jecxz
fisubr
les
(bad)
mov
adc
je
shr
(bad)
sub
movs
ret
push
je
add
das
scas
mov
fwait
jecxz
mov
rcr
es
pop
jmp
out
or
dec
jo
and
cli
out
int3
cs
sub
jnp
outs
and
dec
sub
(bad)
dec
lods
xchg
xor
push
or
ss
xchg
pop
loope
shr
and
scas
add
mov
dec
push
js
jl
mov
xchg
movs
pop
mov
pop
enter
mov
ss
sbb
and
sbb
cmps
adc
addr16
ja
or
repz
xor
out
outs
mov
push
add
test
test
mov
shl
retf
inc
pushf
mov
fwait
lods
sub
jecxz
out
mov
sti
ins
sub
xor
loop
dec
sbb
mov
jmp
idiv
jb
and
cdq
stos
pop
in
frstor
pop
shl
add
ja
lea
adc
xor
(bad)
rol
cmp
je
icebp
aas
xchg
outs
jmp
jmp
push
xor
out
xchg
cmp
icebp
and
(bad)
es
sub
jge
out
dec
nop
adc
push
push
inc
cmp
push
loopne
xlat
lods
loop
ret
add
fnsave
or
ret
mov
push
add
xchg
jbe
out
fiadd
mov
inc
sbb
and
mov
pop
not
jl
jmp
inc
xor
div
mov
xor
pop
retf
adc
cmp
ffreep
mov
push
(bad)
scas
iret
stos
push
test
xor
cs
fwait
out
and
and
cld
in
retf
mov
std
xchg
cli
jne
rol
mov
gs
cmp
and
aaa
imul
pushf
imul
mov
aas
xor
jns
loop
pop
loopne
jae
ins
dec
fstp
out
mov
sbb
in
sar
cdq
iret
loop
xchg
sar
cmp
xor
push
in
xchg
cwde
sbb
sub
pop
imul
xor
(bad)
call
jbe
sbb
(bad)
xchg
pop
aad
pop
hlt
das
dec
fsubr
cmp
mov
mov
test
adc
inc
loope
lods
sub
push
neg
std
inc
popa
outs
hlt
das
xlat
dec
sub
mov
add
cdq
push
cmc
shl
(bad)
pushf
js
stc
fwait
das
or
fcmovnbe
mov
repz
adc
loop
inc
pushf
shl
mov
jmp
mov
out
mov
cmp
mov
mov
idiv
pop
scas
(bad)
xchg
adc
into
sub
daa
fsubp
fcomip
or
jecxz
sub
(bad)
call
xor
enter
add
and
xor
xor
cmp
add
add
add
dec
shr
add
xor
or
mov
and
inc
sti
fisubr
cld
add
retf
bound
cld
xchg
sti
fiadd
sbb
xchg
leave
sahf
gs
mov
mov
xchg
adc
test
fiadd
xchg
fld
inc
std
pusha
neg
test
cmps
frstor
adc
jno
cmp
outs
stos
mov
aam
mov
add
add
dec
cmp
call
adc
fcom
rcr
in
push
mul
mov
stos
cmp
lahf
xchg
pop
pop
mov
ss
and
xor
out
mov
stc
cmp
pop
xchg
ins
jmp
xor
sbb
or
addr16
pop
cmps
ret
iret
fmul
fst
sbb
add
xor
mov
pop
in
mov
ret
out
xchg
and
xor
cmp
mov
sbb
inc
lods
cmp
pop
add
popf
xlat
add
pop
lock
fsubr
sbb
addr16
leave
retf
call
call
xchg
dec
pusha
aam
clc
push
mov
pop
ret
sbb
inc
pop
mov
xor
out
lea
pusha
xchg
xchg
in
adc
enter
mov
enter
pop
push
dec
xchg
push
mov
popf
mov
adc
mov
sahf
and
dec
mov
xlat
xchg
jle
jns
push
dec
enter
sti
cdq
shl
loop
pusha
jae
mov
data16
jmp
sbb
sub
into
nop
or
cmc
xor
sbb
je
mov
inc
pop
and
and
imul
pop
xchg
movs
sahf
bsr
sub
cmps
xchg
pop
out
jae
sbb
or
retf
sub
adc
mov
mov
jge
cdq
cmps
inc
cmp
jo
pushf
adc
mov
mov
dec
mov
dec
or
stos
add
mov
imul
jbe
ret
repnz
cmps
sbb
inc
dec
pop
add
lahf
jbe
dec
in
lods
fild
rcr
pop
sbb
and
inc
dec
js
in
sub
lock
sbb
cs
loop
jle
sub
cmps
sbb
adc
adc
mov
sub
jecxz
das
jbe
inc
movs
push
js
popa
mov
cli
std
int
je
push
es
lea
enter
mov
sub
sub
scas
or
stos
xchg
idiv
cs
jge
xor
imul
sar
clc
xor
xchg
arpl
dec
pop
sahf
fucom
mov
frstor
arpl
push
fmul
push
pop
imul
push
inc
mov
fs
rol
sbb
sbb
pushf
jae
inc
(bad)
and
add
(bad)
jge
push
mov
and
ret
dec
fnstsw
mov
xchg
jo
pop
sbb
fst
ror
pop
push
xchg
cs
or
cs
dec
mov
pop
mov
dec
stc
enter
shl
push
jno
xchg
js
(bad)
push
je
add
xchg
loopne
adc
js
ja
xor
in
mov
out
xor
pop
nop
sbb
mov
js
mov
test
fisubr
sbb
iret
cs
add
cmp
and
sub
xchg
pop
mov
loop
xchg
jmp
jp
mov
hlt
pop
in
shl
lahf
out
retf
add
cld
xchg
lahf
xchg
jnp
std
inc
cwde
das
bnd
int3
jb
cs
sbb
jnp
test
push
pushf
test
pop
push
cld
add
cmp
ficomp
mov
mov
add
aam
scas
cdq
addr16
fcmove
ss
mov
mov
sti
test
pop
mov
fcom
rol
(bad)
dec
adc
mov
retf
jnp
xchg
mov
imul
pop
adc
adc
jnp
mov
sub
mov
inc
icebp
pop
pop
push
sub
ret
aas
mov
gs
ins
push
rcl
pop
xchg
adc
aas
push
icebp
scas
jns
mul
xchg
inc
inc
push
mov
pushf
iret
bound
call
repz
jl
in
push
mov
jge
push
dec
lahf
fadd
mov
sub
lds
int
jne
xor
add
dec
xor
xor
push
dec
mov
push
fild
push
sub
retf
sbb
push
ror
dec
mov
test
jb
loope
push
pop
pop
mov
xor
fisub
push
inc
in
jl
cmps
int
xor
push
cwde
fucomi
in
xor
sub
aas
pop
or
lahf
or
int3
push
or
cdq
shl
cmp
inc
popf
cmps
cmp
mov
outs
cmps
jp
(bad)
icebp
ja
mov
int3
ins
sti
retf
aaa
pop
mov
cmp
sub
mov
jnp
daa
cli
jecxz
push
bnd
std
and
lods
inc
sub
sbb
cs
hlt
das
add
mov
es
fdiv
lahf
mov
leave
test
scas
xchg
in
movs
popa
sub
and
add
mov
jno
mov
pop
and
mov
imul
or
pop
dec
pop
lods
test
pop
mov
(bad)
adc
xlat
out
dec
adc
cdq
xlat
inc
mov
dec
pop
or
test
mov
fwait
div
js
cmp
ins
add
ss
push
cwde
mov
push
out
dec
shl
jg
ret
(bad)
enter
out
outs
shl
sub
dec
dec
jp
stos
or
mov
movs
pop
shl
stos
ror
inc
pop
int
sub
inc
jnp
fs
pop
and
cmp
cmp
adc
dec
pop
push
test
add
mov
sbb
cmp
cmp
(bad)
jae
pop
mov
and
dec
les
gs
pop
ret
mov
les
movs
fwait
mov
(bad)
jbe
push
mov
sahf
es
xchg
nop
or
rol
sbb
imul
mov
test
pop
test
inc
clc
mov
inc
inc
push
xor
test
inc
cdq
pop
leave
out
pop
sbb
mov
cmp
shl
daa
dec
in
fwait
and
ins
hlt
movs
sub
pop
xchg
add
(bad)
push
sbb
cmps
fild
pop
inc
cmps
shr
leave
loopne
push
sub
push
xor
std
cld
add
sbb
cdq
mov
jmp
cmp
test
xor
adc
int3
retf
scas
dec
mov
imul
shl
call
push
lahf
test
pop
push
adc
or
push
jge
cmps
and
cld
arpl
mov
pop
mov
lahf
push
fsubr
mov
(bad)
push
not
xor
cmc
inc
jmp
jae
loopne
dec
sub
cmp
inc
cmps
out
inc
xor
and
enter
sub
adc
iret
scas
push
loopne
mov
fadd
ins
cmp
test
lods
test
mov
popa
mov
add
cmp
icebp
sbb
add
xor
sub
dec
mov
retf
or
jecxz
jecxz
pop
push
in
cwde
lahf
pop
mov
mov
stos
push
ret
xor
xor
stos
loopne
mov
mov
xor
push
pop
aam
fsub
and
push
sub
test
jmp
cmp
sbb
les
pop
cmps
inc
ins
imul
cwde
mov
popf
(bad)
rcl
das
inc
sbb
sbb
push
inc
pusha
shr
pop
mov
xchg
das
lds
cmp
or
icebp
in
fld
rol
ret
sub
lahf
daa
cmps
pop
mov
popf
div
sbb
fldenv
adc
add
mov
dec
ret
(bad)
fdiv
popf
jnp
in
xchg
int3
jb
ror
push
in
test
movs
dec
cmp
or
push
sbb
fsubr
test
mov
pushf
adc
sub
leave
mov
int3
hlt
sti
push
adc
add
xor
jmp
retf
aad
lahf
inc
int
scas
lock
xor
mov
div
dec
movs
out
xchg
lods
cmp
pop
push
and
repnz
pop
mov
(bad)
mov
sbb
ja
iret
loope
mov
scas
repz
(bad)
xor
out
mov
or
sti
shl
sub
xchg
push
xchg
jecxz
movs
test
xchg
repz
jmp
inc
(bad)
pop
mov
mov
inc
adc
inc
icebp
(bad)
out
inc
and
xchg
scas
ficom
repnz
frstor
cmps
cdq
aad
xchg
jnp
dec
nop
mov
cmp
adc
sub
pop
loopne
mov
inc
xlat
fild
adc
inc
xor
jo
outs
lds
mov
xchg
shl
jae
cmp
pop
mov
xchg
lods
pop
cmp
jns
xor
ficomp
(bad)
sub
call
jmp
xchg
mov
xchg
ja
loope
daa
pop
leave
shr
pop
inc
mov
mov
mov
mov
or
addr16
dec
push
push
bnd
xchg
icebp
hlt
popa
push
mov
out
sub
pop
fnstsw
xchg
xor
push
sub
je
push
stc
in
cli
sar
sub
push
sbb
dec
mov
pushf
pop
aaa
dec
dec
push
lods
push
call
adc
(bad)
jg
jno
sub
inc
movs
jl
sbb
jbe
in
and
lds
aaa
test
ret
or
add
push
push
mov
jne
or
dec
ins
and
aad
cdq
aad
push
pop
outs
lock
mov
mov
test
popf
out
sar
pop
pop
cli
and
test
sbb
sahf
lds
and
pop
pop
stos
inc
out
sbb
adc
mov
add
pop
data16
pop
xor
in
call
push
mov
fst
mov
jecxz
mov
sub
mov
jg
push
or
jb
aad
test
push
(bad)
aam
lods
pop
dec
retf
jns
das
inc
jns
mov
push
int3
push
push
dec
aam
mov
and
les
rep
popa
fwait
mov
arpl
ins
pop
mov
cmps
xlat
jge
and
std
loop
jns
out
mov
dec
bound
adc
inc
xchg
xchg
add
gs
iret
or
ss
scas
push
or
push
sbb
call
ja
push
iret
mov
into
adc
dec
inc
ja
adc
add
sub
sbb
leave
xor
push
ins
out
dec
mulps
jne
(bad)
ins
test
ja
adc
pusha
retf
js
outs
pop
xlat
or
pop
or
jae
imul
scas
cdq
cli
xor
das
or
syscall
enter
sub
pop
xor
push
cs
icebp
(bad)
cmp
(bad)
out
xor
xchg
jo
stc
push
sbb
cli
ret
sti
inc
test
(bad)
test
inc
or
out
call
jmp
lds
lods
fdiv
enter
pop
(bad)
cld
mov
mov
lahf
sub
push
xor
shr
inc
loope
and
in
clc
fdivr
push
ds
push
inc
xchg
movs
jg
mov
stos
loopne
cmc
xchg
cmps
out
call
fst
sahf
stos
sbb
mov
retf
mov
out
cwde
mov
outs
cwde
(bad)
into
jmp
inc
xchg
mov
mov
cs
pushf
mov
mov
les
cmp
in
cli
xchg
sbb
lock
adc
jecxz
add
or
cmp
inc
mov
rcl
aas
fs
aam
pushw
aas
mov
lods
pop
and
mov
popa
pop
cmp
inc
clc
scas
imul
add
cmps
inc
push
jbe
leave
mov
inc
mov
(bad)
cld
sbb
pop
mov
cmp
inc
mov
jne
cmp
mov
mov
(bad)
sub
in
mov
std
scas
sbb
jp
test
add
pop
stos
dec
les
adc
stc
sub
and
mov
and
jbe
dec
ss
pop
movs
mov
pop
std
(bad)
js
jnp
addr16
and
jge
pusha
cmp
and
stc
enter
push
jle
imul
out
xor
in
ror
pop
dec
add
fsubr
sar
mov
inc
call
adc
inc
fwait
cdq
mov
sub
cmp
aaa
int3
scas
sbb
jl
mov
ficomp
and
sbb
mov
pop
inc
icebp
sbb
inc
jne
push
push
imul
and
scas
cmp
and
jecxz
sub
shl
push
je
push
mov
sub
xchg
pop
nop
and
and
mov
mov
sub
push
xchg
xlat
dec
into
out
mov
in
mov
mov
xor
ja
into
jl
int
(bad)
cmc
xor
aaa
and
xor
xor
mov
jae
push
pop
fsub
mul
adc
mov
scas
pop
loop
or
xchg
enter
fiadd
fcomip
pop
pop
inc
int3
das
sbb
sub
push
mov
nop
xor
mul
(bad)
dec
lock
jne
dec
arpl
push
arpl
cmp
mov
dec
aas
or
in
popf
ret
sub
inc
and
cmp
jb
sbb
inc
xor
or
cmp
sbb
sub
scas
out
ins
or
pop
pop
inc
fidiv
pop
xchg
mov
inc
add
into
call
in
push
push
push
ret
test
cmc
jo
pop
dec
xchg
mov
mov
and
in
sahf
mov
lock
retf
ja
arpl
fsub
lock
rcr
popa
cld
cdq
dec
jp
cmp
js
cmp
in
push
scas
jge
ret
push
sbb
sbb
add
outs
adc
or
xlat
inc
mov
in
addr16
push
push
mov
push
dec
imul
stos
or
bswap
bound
jb
push
(bad)
rcr
(bad)
jb
(bad)
stos
push
cwde
clc
inc
sbb
cwde
push
shl
mov
mov
call
ja
inc
cmp
div
dec
cli
jo
ror
mov
popa
dec
pop
retf
and
xor
or
mov
pop
jmp
cmps
ret
sub
ss
jle
stos
gs
mov
xor
pop
shl
(bad)
pop
js
push
fadd
aaa
std
xchg
jmp
shl
div
dec
mov
call
pop
mov
adc
push
jl
pop
cmp
xlat
mov
or
push
xchg
mov
daa
jmp
ret
test
movs
jp
and
daa
jne
or
test
retf
clc
bound
fdivr
dec
(bad)
call
call
jmp
pop
xchg
push
jno
into
js
clc
add
(bad)
out
push
jbe
popa
cmp
call
inc
sbb
pop
sbb
pop
pop
jmp
outs
mov
icebp
xor
stos
xor
sub
retf
adc
mov
addr16
push
and
test
cmps
ror
fadd
pop
mov
cmp
xchg
sti
mov
sub
retf
pusha
sar
jge
mov
in
addr16
mov
cmp
mov
loopne
call
xor
xlat
cmp
aas
push
stc
push
push
sbb
arpl
int3
icebp
lahf
cs
fcomp
push
repz
and
ror
test
jnp
cld
xor
out
mov
jb
dec
and
push
das
(bad)
xchg
push
xor
jne
adc
(bad)
mov
data16
ins
cmp
data16
sub
cmp
shr
push
fdivr
ins
movaps
icebp
pushf
xor
mov
repz
push
adc
push
mov
dec
fsub
mov
addr16
mov
inc
adc
push
test
mov
aas
leave
jecxz
stos
(bad)
push
out
icebp
shl
mov
push
fbld
and
jmp
inc
js
inc
xor
jge
adc
push
sub
icebp
es
and
out
pop
cdq
xor
jns
cmc
xlat
push
or
loop
mov
cld
adc
fidivr
out
or
push
loope
jbe
sar
jbe
add
xlat
mov
ins
(bad)
in
(bad)
ror
adc
das
mov
push
pusha
mov
(bad)
call
jno
push
pop
dec
addr16
pop
popf
inc
int
mov
jle
xchg
jecxz
or
xor
aam
ficom
mov
rcl
jp
cs
xor
outs
push
mov
into
add
adc
adc
pop
lea
xchg
xchg
sbb
jo
ds
ins
rcr
or
(bad)
fstp
mov
repnz
jecxz
xchg
xor
cmp
repnz
bound
push
mov
cmps
push
pop
mov
add
or
mov
push
movs
xchg
and
fwait
or
add
cmp
sbb
fisub
inc
les
ret
loope
cs
sar
xor
pop
xchg
div
mov
sahf
mov
xor
push
cwde
mov
xchg
cmps
pop
aad
dec
jne
stos
sahf
(bad)
mov
jp
mov
mov
xchg
pop
ins
rol
cmp
out
or
sahf
lock
mov
dec
cmps
pushf
aam
pop
cmp
or
out
loopne
int
inc
in
pop
jae
hlt
stc
stos
jbe
add
aas
ja
xor
mov
add
fisubr
into
xchg
movs
adc
jmp
ins
(bad)
xchg
add
call
test
adc
sub
rol
fwait
mov
add
outs
popf
xor
daa
pop
aam
call
cmp
pop
push
cli
cmc
xor
mov
ds
mov
ret
push
push
fistp
jl
retf
imul
test
(bad)
aam
xchg
jne
popf
mov
outs
sbb
ret
leave
loop
pop
sub
stos
and
jmp
sub
cmp
jbe
fcmovnb
inc
push
(bad)
mov
out
into
jnp
mov
adc
imul
icebp
mov
or
mov
xchg
out
lock
cmp
push
or
movs
loop
jg
scas
rol
dec
mov
dec
rcl
jbe
inc
shl
adc
cmp
in
push
pop
lods
cmc
movs
sbb
stc
push
mov
bound
mov
test
jmp
icebp
pop
iret
inc
fiadd
and
pop
xchg
dec
mov
mov
clc
repz
sbb
cmp
pop
adc
nop
mov
(bad)
shr
fwait
push
outs
jmp
js
mov
jmp
mov
ret
xchg
stos
cmps
xchg
xor
les
rol
out
in
jge
es
(bad)
cmp
(bad)
std
and
ds
retf
mov
fsubr
and
jns
out
sbb
cmps
mov
ds
jle
lock
pusha
test
jne
cs
jne
pop
jo
retf
mov
jl
cmp
jmp
xrelease
fdiv
cmp
sub
pop
ins
(bad)
fs
rol
aaa
jne
in
mov
and
jne
push
bound
hlt
fstp
call
or
cmps
mov
cmp
jmp
jne
inc
xchg
dec
mov
mov
mov
enter
dec
scas
dec
lock
je
pop
test
gs
out
fldcw
add
lods
jl
jecxz
mov
std
arpl
rep
test
(bad)
mov
jne
inc
ret
push
bnd
ins
push
fisttp
jl
push
outs
dec
xor
out
push
or
imul
out
aas
daa
fucomip
sbb
not
or
cmp
or
and
xor
std
mov
cmp
xor
add
addr16
test
push
(bad)
mov
test
xchg
jo
in
sub
xchg
idiv
outs
inc
enter
pop
mov
sbb
or
sti
aaa
cld
clc
mov
dec
cmp
xchg
popa
or
mov
or
adc
stos
sbb
xchg
in
gs
nop
cmps
(bad)
push
mov
inc
inc
mov
inc
add
inc
(bad)
in
sti
popf
sahf
iret
fs
sbb
je
mov
ret
ss
aam
cli
push
(bad)
idiv
xchg
in
sub
pop
je
or
xor
dec
mov
jne
call
jb
fcomp
and
popa
jns
cmp
in
mov
lea
xchg
mov
aas
mov
pop
mov
ror
xor
cli
or
dec
inc
cwde
or
outs
sar
dec
mov
and
pop
xor
sub
mov
aam
shl
dec
jp
enter
in
add
add
shr
mov
adc
xchg
int
xor
stc
xor
jns
test
out
jno
retf
hlt
in
imul
and
pusha
mov
lods
test
js
dec
pop
shr
cmp
shl
shr
and
xor
je
xlat
stos
mov
pop
lahf
mov
sub
cmp
test
mov
jnp
std
jge
into
cmps
rcl
sbb
fs
mov
call
push
mov
mov
pop
push
rcl
add
sbb
pop
mov
mov
shr
cmp
xor
jmp
push
int
and
add
add
movs
jmp
loope
ins
jne
and
(bad)
ja
pop
das
(bad)
aad
rcl
or
add
in
mov
cmp
jle
push
int
call
and
xchg
pop
int
in
dec
add
fsub
sub
pushf
inc
adc
fbstp
outs
dec
xchg
adc
sbb
or
stos
sub
add
mov
add
mov
or
retfw
pusha
in
and
in
sar
cmc
inc
adc
popa
test
and
sbb
maskmovq
mul
loope
push
adc
loope
pop
(bad)
push
push
dec
(bad)
pop
repz
in
lods
add
xchg
pop
jne
pop
mov
fadd
movs
jge
and
js
pop
mov
and
sbb
aad
fdivr
popf
rcr
push
mov
aas
rcr
xlat
jae
retf
pop
and
add
rcl
jle
mov
fisttp
cmps
mov
lahf
push
add
adc
mov
jl
out
stos
retf
xchg
stos
or
sbb
sbb
repnz
sbb
cli
adc
dec
(bad)
in
xchg
outs
xchg
faddp
cmp
sub
xchg
in
adc
and
or
mov
fsubp
test
mov
lahf
jmp
xchg
xor
pushf
push
lods
stos
shl
ficomp
adc
out
add
loope
push
repz
in
xor
enter
and
adc
inc
mov
inc
cmp
cmps
mov
xchg
(bad)
movs
xlat
xchg
pop
or
jae
push
gs
aad
xlat
daa
stc
popf
ss
(bad)
mov
add
fisttp
jae
sbb
repnz
mov
adc
cwde
and
daa
xlat
lds
cmc
adc
adc
cmp
dec
in
jmp
mov
inc
mov
int
cmp
push
movs
aaa
in
iret
test
pop
ret
sbb
jne
jnp
into
adc
push
(bad)
call
add
adc
sbb
jno
add
sub
cs
jns
adc
test
mov
cmc
mov
mov
cmp
cmps
data16
(bad)
aam
movs
pop
popa
adc
pop
rcr
xor
shl
rcr
cdq
jmp
sub
mov
mov
pop
or
xchg
(bad)
mov
test
shl
shl
jmp
push
xchg
sub
retf
sti
add
or
mov
pop
inc
scas
scas
sub
test
fs
in
mov
adc
mov
out
hlt
xor
outs
push
mov
add
sbb
jae
mov
mov
xchg
adc
das
adc
pop
out
movs
adc
mov
pop
in
jmp
and
xchg
popa
fdivr
pusha
loope
and
jecxz
adc
jecxz
jbe
xchg
mov
aas
or
stc
je
dec
sbb
jbe
adc
and
jb
sbb
popa
inc
ja
pop
adc
(bad)
inc
push
sbb
push
inc
and
bound
inc
pop
in
push
or
mov
xor
and
pusha
daa
mov
and
jge
not
inc
mov
or
test
adc
ret
cmp
push
adc
into
or
jo
mov
mov
jae
push
and
pop
sub
fwait
inc
cdq
bound
xchg
call
cmp
outs
push
(bad)
leave
jmp
lahf
pop
mov
xor
mov
unpcklps
cmps
push
xchg
sar
inc
mov
mov
fisub
pop
xchg
inc
mov
test
pop
and
sbb
sbb
dec
xlat
xlat
div
repnz
xchg
adc
and
shl
jnp
(bad)
sub
les
sbb
xor
out
mov
mov
fbstp
repnz
add
daa
cmps
mov
clc
add
je
ja
fsub
clc
ds
out
cmp
pop
adc
movs
xor
mov
loopne
mov
lods
fdivr
xchg
popa
shl
jno
cmp
in
(bad)
xchg
cmp
dec
fld
fild
mov
jmp
inc
es
mov
add
sbb
clc
xor
or
clc
sub
arpl
fcomi
test
push
xchg
out
adc
sbb
jns
or
jnp
stos
mov
xchg
adc
dec
daa
aad
psllq
add
out
loope
xchg
mov
jecxz
arpl
or
push
lods
int3
adc
jmp
shr
call
jb
fsubr
sti
sub
and
frstor
mov
sahf
hlt
cwde
push
mov
std
mov
jle
mov
cld
pop
ror
pop
dec
inc
lods
sub
mov
adc
int
cld
push
sbb
lods
and
jnp
dec
jle
hlt
fs
loop
sbb
push
mov
mov
fdivr
jecxz
xchg
xlat
sar
mov
rcl
sbb
icebp
inc
jne
inc
or
push
leave
cmp
lahf
and
out
js
frstor
test
push
adc
aam
cld
mov
mov
jl
sti
loop
(bad)
mov
test
cld
pop
mov
stos
mov
cwde
xor
(bad)
stc
pop
test
popa
mov
and
pop
seto
inc
pop
add
and
addr16
test
mov
icebp
cmps
pop
imul
(bad)
(bad)
cmp
jl
ja
push
fisub
pop
dec
xchg
jno
sti
jecxz
bswap
jo
neg
retf
mov
call
out
mov
jmp
inc
addr16
and
add
and
stos
call
fucomip
mov
retf
jge
mov
and
mov
xor
push
inc
inc
test
shl
mov
fcom
shl
gs
in
dec
push
xchg
mov
and
push
pop
lahf
mov
pop
rcr
inc
pop
in
pop
or
cld
call
push
into
xchg
mov
xchg
fsub
pop
pushf
mov
pop
das
(bad)
pop
adc
movs
pop
cmp
jmp
xchg
sub
pop
fld
jnp
rcr
cmp
mov
inc
leave
int3
adc
mov
inc
je
in
mov
inc
and
xchg
jmp
pop
jae
and
pop
inc
fisub
int3
dec
sub
int3
add
jmp
jno
pop
pop
mul
jmp
mov
lds
push
ja
dec
pop
bound
mov
add
test
mov
cdq
sbb
pop
nop
mov
data16
mov
and
fimul
nop
sbb
push
pop
nop
jle
and
fs
mov
mov
pop
aad
mov
hlt
sahf
aad
inc
movs
mov
sub
pushf
out
loopne
dec
jmp
sbb
sbb
cmp
mov
pop
mov
mov
dec
or
push
sbb
je
vmread
mov
rol
jno
xchg
test
stos
shr
adc
inc
ins
lock
fidivr
mov
rcl
dec
test
mov
pmullw
adc
pop
push
jg
xchg
jl
or
sbb
sub
xchg
call
pusha
xor
call
and
movs
jp
rcl
cmp
les
jge
adc
push
stos
dec
fbld
xchg
jmp
sti
repnz
push
mov
inc
sbb
push
scas
cmp
repnz
sub
in
shl
jnp
pop
es
add
adc
xor
retf
xchg
rcr
adc
js
cmp
mov
inc
jge
fwait
mov
inc
ret
or
xchg
or
mov
push
stc
lahf
sahf
dec
das
add
mov
mul
dec
dec
pusha
jbe
mov
rol
cmp
jge
mov
xor
push
icebp
jae
mov
js
and
outs
lods
xchg
ins
mov
ds
rcl
adc
movs
les
out
mov
jl
jl
push
loop
xlat
out
sub
mov
outs
inc
jmp
sbb
jmp
xchg
hlt
mov
or
jo
sub
lods
fdivr
movs
je
mov
call
pop
mov
dec
out
movs
adc
add
das
inc
ds
push
mov
cs
sbb
push
ds
mov
rol
aas
ins
(bad)
cmp
jmp
aaa
das
in
mov
dec
mov
sbb
aas
jns
add
rol
(bad)
div
in
mov
ins
aaa
aaa
and
cld
lahf
stos
adc
movs
sbb
aad
add
in
call
outs
sub
nop
lods
fs
dec
dec
in
ds
clc
adc
cmps
mov
lahf
stc
add
and
mov
daa
mov
cmp
ins
inc
ins
push
jne
in
pop
imul
fidivr
and
or
inc
pop
push
retf
mov
cmps
mov
int
mov
sub
test
pusha
int
les
mov
ret
or
outs
retf
ins
mov
push
sbb
call
shr
loope
mul
cmp
jns
rcl
fiadd
lods
movs
jne
mov
cmp
sub
xchg
popa
mov
sbb
pop
stos
sar
sahf
mov
imul
and
mov
(bad)
outs
xchg
enter
xchg
mov
mov
aad
pushf
mov
jg
mov
pop
mov
add
bnd
push
cld
pop
cwde
inc
cmc
sub
adc
add
xor
xchg
pop
test
out
out
rol
loopne
dec
mov
and
mov
imul
cld
mov
push
pop
inc
scas
cld
xchg
pop
pop
lahf
cmp
outs
ja
cmc
sub
loopne
pop
icebp
ja
popf
repnz
sub
int3
jb
push
push
rcl
je
out
(bad)
xor
(bad)
jmp
and
mov
(bad)
sti
fsub
adc
or
arpl
pop
pop
sbb
mov
idiv
cmp
mov
imul
ds
mov
push
lds
cwde
mov
mov
inc
mov
out
cmp
jle
cmp
push
push
xchg
add
inc
mov
mov
sbb
xchg
xor
mov
cdq
fwait
cmc
ror
sub
push
or
jecxz
pop
loope
cli
mov
xchg
pop
push
push
pop
test
cs
retf
xor
rcr
mov
ret
cli
popf
mov
jle
gs
nop
jbe
cmp
mov
lds
ja
test
repnz
xchg
cmp
sub
add
in
dec
loope
cmps
sub
mov
jmp
fucomp
pop
and
pushf
sub
daa
xor
xchg
mov
outs
xchg
mov
xor
push
(bad)
dec
retf
inc
push
sub
dec
inc
mov
scas
data16
lods
and
sub
xlat
xlat
cdq
jl
or
adc
std
adc
pop
inc
fstp
fdiv
or
adc
sbb
adc
xlat
mov
inc
retf
cmp
mov
and
adc
call
mov
std
xchg
jo
pop
sub
push
and
(bad)
jge
sbb
test
mov
mov
in
fstp
cmp
fs
test
pop
repnz
pop
xchg
jmp
pop
(bad)
jge
jo
mov
mov
sbb
je
sbb
iret
xchg
mov
scas
rol
fcmove
imul
add
shl
pop
aas
imul
dec
mov
jmp
mov
cmp
adc
in
push
imul
fwait
mov
add
stos
ss
xchg
xchg
mov
sar
sub
push
pop
xchg
cmp
stos
mov
sar
add
and
dec
(bad)
outs
loop
or
xchg
test
fadd
xchg
or
dec
ins
push
in
xor
cmp
gs
ins
bound
pop
or
ins
push
jl
outs
loop
(bad)
jle
mov
mov
mov
arpl
and
xlat
in
shl
dec
jae
sbb
std
fcom
pop
xchg
and
bound
sub
loope
aaa
adc
ret
pop
adc
dec
push
pop
cli
mov
sbb
int3
fisttp
mov
call
mov
test
pusha
cwde
int
mov
dec
call
repnz
sub
ja
fimul
and
or
pop
call
mov
lds
xchg
xchg
cs
xor
dec
jle
std
mov
call
and
mov
adc
cmp
xor
inc
cs
xchg
movs
xchg
cmp
scas
push
jbe
mov
dec
test
mov
lods
aas
stc
jecxz
bound
jo
inc
xlat
div
mov
pusha
jns
add
and
inc
xor
mov
mov
call
push
sbb
iret
adc
repz
ret
cmp
into
mov
and
mov
cld
cli
and
int3
pop
jmp
jmp
jo
push
mov
cmp
pop
fs
hlt
jmp
sub
inc
mov
loopne
mov
add
das
ins
lods
xor
leave
jl
pop
inc
test
and
inc
sbb
cmp
add
ret
aas
push
jmp
add
fist
and
jae
aas
das
pop
adc
(bad)
ins
(bad)
clc
mov
mov
scas
mov
inc
test
cmp
loopne
cwde
cwde
cmps
jmp
cwde
aam
mov
repnz
pop
shl
stc
xor
push
aad
push
iret
cli
jp
jecxz
(bad)
mov
pop
fcom
je
pusha
out
cmp
sub
icebp
jnp
lea
xor
neg
hlt
scas
jl
and
pop
xchg
repnz
test
mov
xchg
cs
adc
shr
outs
or
push
ja
ficomp
mov
call
fdiv
sbb
pop
or
sub
add
jecxz
xchg
cdq
sti
adc
retf
pop
shl
test
movs
push
inc
adc
pop
push
js
test
and
rol
dec
in
pop
xchg
push
xor
daa
jb
mov
fiadd
or
outs
fadd
cmps
and
jmp
push
xchg
int
(bad)
repz
aaa
cld
jae
out
mov
aad
popa
xor
push
xchg
xor
das
in
call
pop
std
test
(bad)
mov
arpl
in
daa
cmp
push
push
inc
adc
add
movs
xchg
bound
dec
mov
aam
add
in
test
jne
mov
sub
adc
inc
and
or
jb
(bad)
xor
gs
mov
shl
xchg
xor
test
repnz
mov
mov
dec
mov
rol
adc
shr
in
cmp
xor
add
fisubr
pusha
mov
(bad)
jmp
es
pop
aad
xchg
xchg
ja
rcl
shl
or
add
pop
pushf
int
fwait
sbb
repnz
ins
xlat
cmc
repz
lds
into
push
lods
arpl
push
bound
adc
sbb
mov
js
xor
and
stos
mov
xlat
xor
cdq
sbb
movs
das
sbb
in
mov
jle
out
scas
add
movs
xor
ja
jmp
cmp
(bad)
jp
sub
mov
jb
pop
adc
dec
push
jmp
out
mov
mul
add
(bad)
push
movs
and
ds
dec
in
js
xchg
shl
dec
stos
add
sbb
pop
int
sbb
test
popa
ss
nop
stos
pop
shl
jbe
jnp
cmp
fimul
loopne
test
data16
outs
aam
data16
mov
cmp
repz
xor
inc
sbb
test
fs
push
push
ror
test
push
cld
and
sbb
and
pop
(bad)
jp
xchg
cmp
daa
jg
add
daa
mov
outs
daa
dec
inc
pop
adc
dec
sbb
cmc
outs
pop
icebp
mov
push
ins
jl
loop
or
enter
adc
ds
and
repz
or
and
push
stos
dec
ja
mov
call
cmp
mov
jns
inc
(bad)
mov
clc
pop
icebp
cmp
lock
mov
outs
mov
aaa
mov
stos
(bad)
xor
mov
dec
jbe
popa
sbb
cli
push
enter
xchg
mov
outs
(bad)
data16
sbb
cmps
cmc
arpl
cld
imul
lds
enter
out
dec
ror
into
add
pop
dec
inc
aaa
shr
stos
daa
jmp
mov
sbb
repnz
xchg
aas
ss
imul
lods
out
(bad)
jmp
add
fbld
xor
in
in
test
push
mov
push
fiadd
js
data16
lea
loopne
sub
or
adc
mov
dec
xchg
mov
cmovns
inc
cli
jno
test
stos
jl
in
int
cli
aad
sub
shl
cmp
and
jns
inc
pop
fcom
sbb
add
push
xor
jmp
loope
(bad)
jmp
(bad)
es
fwait
push
cmps
jmp
add
ss
clc
fidiv
and
inc
add
je
pushf
mov
cwde
add
arpl
sub
or
pop
sub
cdq
sub
fiadd
mov
iret
jge
ja
lods
(bad)
push
mov
mov
mov
xchg
pop
cmp
adc
fst
es
xor
mov
das
and
pop
adc
jns
cmp
add
dec
lds
(bad)
jbe
nop
dec
cwde
fidivr
xor
fs
(bad)
nop
add
sub
out
mov
jp
and
push
jns
icebp
sbb
dec
push
mov
aas
(bad)
fnstcw
loope
test
shl
ss
pop
xchg
ds
or
imul
push
les
pop
jmp
push
dec
jne
ss
jle
jbe
lods
and
jg
mov
xlat
imul
mov
jne
pushf
enter
arpl
test
mov
aas
mov
adc
imul
fisttp
mov
pop
(bad)
shr
adc
adc
cmps
leave
adc
adc
pop
(bad)
ss
dec
adc
push
pop
pop
lods
jle
inc
fs
cvtps2pi
mov
ret
pop
mov
fcomp
rcr
or
fnstcw
adc
fidivr
mov
push
xchg
mov
stos
push
mov
aaa
xchg
movs
sub
dec
sbb
pop
jp
mov
inc
sbb
ins
loope
mov
nop
div
loopne
pop
(bad)
or
test
jb
int3
ret
into
int3
call
cmps
sbb
push
sbb
imul
test
xchg
adc
xor
adc
mov
push
call
jecxz
lods
shl
cmp
sub
out
xchg
inc
jmp
push
daa
inc
fld
repnz
jb
mov
sbb
(bad)
call
fidivr
jl
sbb
(bad)
xchg
jne
xchg
cmps
sub
cmp
and
mov
xor
pop
stos
test
mov
mov
mov
shr
add
lods
pop
and
dec
out
sub
and
fbstp
sti
mov
idiv
jo
sahf
or
sahf
inc
stos
rcr
or
call
xchg
jbe
cs
ins
inc
data16
mov
xchg
jne
aaa
out
cmp
or
mov
out
xor
jae
movs
mov
xchg
mov
or
cmp
daa
pop
cdq
push
xchg
ret
gs
outs
jns
in
mov
and
or
mov
in
imul
jb
call
fadd
push
lds
aam
sbb
lea
xlat
ss
adc
(bad)
jns
fwait
push
test
xchg
mov
hlt
popa
sbb
jp
in
lea
mov
mov
ds
shl
push
es
sbb
bound
ror
mov
adc
jl
sub
fimul
pop
imul
adc
cmc
out
pop
add
mov
pop
dec
(bad)
or
fwait
icebp
jo
push
mov
cmp
dec
ins
(bad)
movs
int3
cli
xchg
mov
jecxz
mov
xchg
jae
mov
mov
in
mov
dec
sbb
(bad)
adc
pop
or
pop
adc
shr
test
test
mov
add
adc
fild
sbb
in
sbb
jmp
scas
sar
cmps
gs
std
push
(bad)
or
je
fwait
mov
les
add
xor
mov
inc
push
inc
mov
cli
das
pop
not
test
pop
in
cmp
sub
arpl
push
movs
scas
aas
inc
push
mov
sbb
xchg
iret
cld
inc
mov
sub
test
mov
retf
scas
and
xchg
mov
pusha
mov
lea
mov
(bad)
dec
lea
clc
gs
loopne
adc
xlat
shr
pop
inc
sbb
fsubr
pop
in
fisub
push
ret
sbb
arpl
mov
stc
cmp
fwait
sbb
add
adc
mov
adc
mov
sbb
adc
xor
add
dec
sub
pop
xor
or
and
loop
pop
push
js
outs
pop
cmp
sbb
or
sahf
dec
mov
sub
sbb
ror
ret
(bad)
sbb
not
je
pop
sub
jg
push
jb
test
jne
jnp
clc
jae
sbb
sub
dec
daa
xor
(bad)
out
pop
shl
jb
int3
rol
gs
sbb
mov
sub
dec
icebp
repnz
(bad)
ins
retf
jbe
mov
fs
mov
pop
sar
adc
xor
fs
dec
push
mov
inc
lock
mov
loope
mov
push
mov
(bad)
mov
ss
pushf
add
jns
xchg
jmp
add
stc
xchg
add
pop
mov
xchg
push
sbb
jno
adc
sbb
or
(bad)
push
push
jnp
xchg
jmp
jno
sahf
mov
dec
cmp
add
pushf
lock
lahf
je
cs
and
sbb
mov
repnz
inc
ror
cmp
aam
shl
das
movs
sbb
jns
sub
xlat
add
std
fild
cmp
xchg
sub
lods
pop
dec
sti
retf
jmp
das
out
repz
bswap
add
mov
neg
fld
enter
add
addr16
jbe
aas
xor
cwde
cmps
cwde
imul
mov
lods
jmp
mov
mov
push
fnstcw
mov
out
inc
inc
stos
cmp
pop
inc
hlt
lock
(bad)
stc
jle
sub
mov
xor
jl
repz
lods
adc
pusha
(bad)
cli
and
jbe
xchg
lahf
sbb
sbb
xlat
inc
jb
test
inc
daa
mov
cdq
or
mov
(bad)
lock
nop
test
stos
retf
sbb
ins
call
outs
enter
mov
jnp
retf
loopne
sub
inc
jg
xchg
rcr
int
(bad)
jle
or
lea
(bad)
enter
and
adc
inc
mov
sub
fwait
pusha
pop
push
pop
xchg
jo
enter
hlt
dec
outs
fsub
and
outs
adc
cli
ja
mov
shl
push
xor
sbb
add
add
mov
inc
jnp
imul
xchg
pop
iret
jmp
cmp
adc
dec
mov
sar
in
cli
xchg
popa
adc
in
test
push
cmps
sub
cdq
push
inc
das
cmp
inc
inc
cmps
dec
enter
xchg
xor
dec
xchg
dec
adc
sbb
aad
dec
push
in
ret
sbb
outs
pop
lea
ja
clc
pop
mov
sub
cmp
outs
loope
stos
xchg
dec
imul
jmp
dec
mov
cs
stos
mov
and
lea
test
add
push
sbb
sti
xor
jbe
add
popa
mov
fimul
jnp
in
and
test
loopne
mov
inc
sub
jo
mov
lods
cli
or
inc
jne
and
shr
int3
xchg
and
lods
pop
push
inc
retf
fild
adc
adc
mov
push
pop
jmp
or
xor
clc
xchg
and
int
jb
add
icebp
lds
xchg
sub
out
mov
or
pop
in
mov
loope
inc
ret
movs
call
push
add
(bad)
cwde
stos
add
cdq
mov
shl
shl
cli
fneni(8087
pop
outs
mov
cmc
sbb
adc
clc
test
jp
cmps
fidivr
mov
and
jb
sub
jne
jno
ins
hlt
push
mov
ins
push
cmc
out
fmul
and
mov
movs
xchg
inc
jg
test
inc
fucomip
adc
mov
push
add
jmp
cmp
jae
sub
mov
xchg
fwait
xlat
mov
loope
xchg
or
imul
cli
loope
gs
aaa
fcmovnb
retf
sub
(bad)
jmp
and
sub
aam
xchg
fidiv
mov
(bad)
test
mov
out
js
lock
(bad)
add
mov
ror
jle
mov
jecxz
adc
out
sbb
sub
cmc
sbb
fwait
jmp
dec
mov
ss
loopne
aas
inc
jbe
cmps
mov
add
std
out
sub
dec
hlt
daa
mov
xchg
or
push
hlt
test
lods
pusha
inc
pop
xchg
xlat
adc
loope
(bad)
pop
mov
mov
push
stos
pop
repnz
jle
inc
rcl
inc
push
les
add
fcomp
cwde
clc
jo
xchg
ss
mul
mov
loopne
xchg
call
add
dec
shr
aas
in
mov
lahf
in
and
aam
mov
adc
jnp
das
(bad)
and
inc
bound
dec
or
rcr
cmp
sbb
out
or
push
jo
out
ret
out
nop
or
push
xor
movs
sbb
add
mov
xchg
cvtpi2ps
imul
jb
loop
leave
lods
ins
push
sbb
arpl
movs
stc
movs
or
push
into
mov
fs
(bad)
call
sub
jbe
repz
scas
jae
int
pop
test
cdq
test
sub
pop
icebp
inc
inc
(bad)
xchg
inc
ret
mov
retf
sub
je
shl
outs
adc
add
jnp
mov
and
std
(bad)
xchg
fisubr
inc
push
shl
or
mov
icebp
pop
pop
xchg
push
adc
and
cmp
jp
mov
xchg
mov
sub
nop
call
inc
push
outs
push
xor
adc
aam
add
jmp
sahf
pop
call
sbb
add
leave
daa
push
push
cs
fistp
arpl
cmovle
pcmpeqb
cmp
fisttp
mov
sbb
xchg
imul
je
nop
(bad)
jp
cmp
(bad)
loop
ret
adc
jb
cld
je
ja
daa
pop
lahf
cmp
repz
lahf
cmps
mov
mov
xchg
push
adc
cmp
neg
aaa
rcl
in
or
xor
add
cmp
xchg
mov
and
and
sbb
sbb
dec
out
jge
not
out
xchg
sub
mov
sbb
retf
push
dec
js
jle
scas
push
adc
test
mov
xor
std
add
(bad)
jmp
add
xor
add
sbb
add
jbe
jo
ds
lock
or
or
cmp
mul
mov
push
xlat
inc
sti
adc
mov
and
dec
daa
in
ret
icebp
xchg
mov
ja
mov
xor
lods
dec
dec
push
dec
jno
mov
dec
ret
mov
ret
jae
sbb
pop
push
xchg
or
(bad)
call
mov
xor
shl
inc
jmp
xor
ret
stos
shr
in
push
ss
push
mov
mov
mov
sub
call
into
push
push
cld
ja
jnp
sbb
iret
mov
adc
sub
pop
pop
stc
dec
ins
sub
xchg
inc
mov
scas
iret
sub
cmp
nop
mov
pop
sbb
or
jecxz
mov
xchg
(bad)
mov
pop
and
xor
js
loop
call
cwde
std
dec
sub
sbb
int3
movs
out
mov
sahf
or
dec
icebp
stos
mov
imul
adc
rol
adc
loopne
loop
mov
sbb
jge
cli
push
jle
jbe
push
retf
and
mov
fnsave
dec
add
sbb
sahf
cmp
rol
and
hlt
adc
pop
lock
cmp
add
jmp
mov
jmp
inc
xchg
xor
xor
out
cmp
sub
or
mov
pusha
add
or
arpl
idiv
loopne
inc
popa
ja
pop
add
inc
and
(bad)
aad
jne
jmp
cdq
add
cmp
sbb
icebp
je
mov
cld
ret
lods
xchg
add
add
push
sbb
sbb
sbb
push
inc
jg
sub
adc
jns
jns
xor
cmp
inc
sub
in
mov
popa
pop
mov
jl
out
(bad)
out
dec
sub
inc
push
xchg
lock
daa
mov
jae
mov
pop
ins
inc
xchg
push
fild
stos
pushf
(bad)
or
call
call
inc
jge
cwde
movs
(bad)
mov
scas
mov
push
pop
ss
xor
sub
ds
or
(bad)
xor
mov
movs
repz
test
ss
mov
adc
or
test
lds
ins
mov
daa
cmc
inc
out
jg
int3
and
mov
mov
xor
dec
hlt
xor
pop
movs
inc
out
and
(bad)
cmp
pop
mov
je
adc
or
cmp
scas
pusha
stos
test
cmp
aaa
mov
(bad)
cwde
imul
dec
mov
and
out
xor
call
inc
mov
mov
outs
ret
fdivr
dec
or
inc
xor
sub
stc
mov
into
jne
test
sbb
daa
ja
test
call
(bad)
stos
jg
(bad)
fdivr
xchg
icebp
mov
dec
inc
packsswb
inc
mov
pop
(bad)
mov
ret
(bad)
mov
dec
in
xor
loop
cld
xchg
jp
fistp
mov
nop
push
adc
pop
xchg
stos
sub
adc
cmp
or
or
iret
pop
bnd
clc
ret
jae
mov
inc
shl
sub
mov
or
rcl
mov
addr16
scas
shr
icebp
push
xor
push
push
dec
inc
dec
rol
leave
xchg
push
subps
lds
xor
xchg
scas
dec
dec
aad
fs
mov
sti
mov
cmp
das
stc
jb
pop
mov
cmc
mov
xchg
add
fs
lock
popf
into
(bad)
jp
or
jae
cli
and
and
and
retf
sahf
sub
mov
jne
add
idiv
std
and
push
inc
gs
or
inc
adc
xor
fdivp
mov
inc
enter
cmp
push
push
in
sub
jbe
push
jno
out
jl
retf
mov
cmp
ins
or
sti
jno
or
das
jbe
sbb
das
add
push
leave
fwait
jmp
shl
cmp
jecxz
pop
mov
in
movs
int3
adc
cmp
(bad)
test
xchg
cmps
adc
xor
mov
cmp
shr
loopne
adc
push
scas
push
adc
ja
scas
mov
push
jg
pop
into
repz
sti
repnz
les
imul
jle
iret
adc
jl
dec
ret
mov
shl
fwait
adc
sti
lods
mov
mov
pusha
lods
pop
cmp
imul
adc
ficomp
outs
xchg
xor
in
or
mov
adc
fcomp
pop
push
or
cmp
leave
(bad)
cmp
pop
pop
xor
aaa
mov
xor
popf
loope
loop
gs
arpl
lock
sub
ds
pop
mov
mov
xor
xchg
cmp
addr16
aas
jle
pop
sbb
mov
out
mov
xchg
repz
push
jmp
or
test
in
pop
loop
iret
ins
loop
(bad)
jmp
pushf
stos
shl
jp
jl
push
dec
je
dec
pop
sub
mov
aam
sbb
clc
dec
sbb
add
sar
push
jo
and
(bad)
adc
scas
cmps
adc
int
dec
fmul
sub
add
sbb
cli
movs
pop
cmp
mov
dec
dec
popa
cwde
cmp
(bad)
cmc
adc
mov
lods
sbb
xor
rol
mov
mov
test
xchg
jbe
or
mov
rcl
sar
push
(bad)
jg
mov
int
cmp
sahf
jns
mov
jmp
loope
cmc
jno
xor
xchg
int3
movs
mov
inc
add
dec
or
pop
stc
cdq
or
push
push
mov
xchg
xchg
enter
pop
out
push
pusha
push
das
dec
pop
mov
push
adc
inc
jge
sbb
in
cmc
mov
fbld
out
mov
cmp
sub
stos
test
data16
(bad)
pop
push
aas
jno
or
adc
aaa
inc
mov
stc
loop
icebp
xchg
or
(bad)
dec
push
sub
add
jp
dec
mov
adc
add
loop
fsub
div
pop
add
mov
in
xchg
push
out
mov
cmp
or
mov
mov
jg
sub
add
aas
jge
mov
(bad)
icebp
or
(bad)
pop
ss
(bad)
int
sub
mov
push
jle
push
add
push
cmp
add
cmp
loop
dec
push
push
repnz
pop
cmp
mov
mov
stos
dec
dec
jo
mov
cmps
ror
cmp
add
jecxz
mov
cmps
push
mov
dec
test
rol
ret
mov
mov
sbb
aad
mov
xlat
mov
pop
lods
xchg
pop
pop
(bad)
fild
mov
xchg
(bad)
jmp
mov
les
push
cwd
(bad)
aad
fs
inc
retf
(bad)
movs
push
jae
jo
sahf
in
movs
mul
cvttps2pi
rol
xor
loopne
sbb
adc
sbb
sbb
aas
aad
neg
dec
fwait
adc
sahf
pop
jge
and
push
cmp
dec
push
(bad)
gs
movs
sub
imul
jg
pop
jmp
loop
push
mov
or
es
sti
push
add
lods
mov
sub
add
mov
xchg
ds
rcr
mov
cmp
or
jnp
aas
cmc
rcr
cmp
jae
stos
xchg
(bad)
jmp
mov
mov
inc
ins
rol
push
sub
or
je
fadd
mov
mov
aad
inc
xlat
xor
add
pop
xor
cmps
cdq
pop
sbb
mov
call
test
mov
bound
jl
jg
jp
push
pop
rcr
sbb
repnz
call
jb
ins
xor
add
ficom
and
inc
push
dec
xlat
and
mov
das
leave
sbb
push
pop
enter
call
mov
mov
sub
and
inc
mov
(bad)
sti
in
mov
mov
dec
jns
adc
push
cmps
and
mov
push
addr16
xlat
movs
shl
loop
inc
xchg
mov
xchg
daa
mov
cmp
or
push
stc
pop
jecxz
aas
pop
sub
push
add
and
test
mov
push
arpl
div
pushf
mov
mov
pop
cmp
bound
xchg
enter
push
xor
xchg
mov
jp
imul
les
xchg
mov
scas
xor
aad
test
out
mov
(bad)
add
jmp
je
test
pop
ret
nop
xor
pop
sti
xor
popf
xor
add
scas
adc
and
mov
(bad)
mov
movs
mov
add
clc
push
adc
jno
cmps
inc
mov
jb
loopne
sbb
or
shl
adc
inc
les
jno
adc
inc
lock
add
sar
arpl
dec
add
sbb
add
mov
in
adc
cmp
push
jge
movntq
data16
fnstenv
xchg
xor
mov
mov
and
in
xchg
(bad)
dec
call
pop
pop
mov
xchg
ror
jo
jb
cmp
cs
jb
jp
aad
retf
pop
mov
xchg
lods
movs
xor
xchg
int3
hlt
shr
xor
stos
out
inc
mov
aaa
ja
sbb
mov
hlt
xchg
fsub
mov
pop
xchg
add
add
adc
xchg
pushf
or
mov
sub
data16
test
or
mov
adc
(bad)
jns
push
mov
sahf
jb
pushf
ret
xchg
mov
mov
pop
movs
jo
out
add
push
dec
cmp
dec
adc
xor
or
mov
adc
(bad)
data16
sti
dec
pop
xchg
pushf
pop
ss
cli
ret
mov
xor
ins
call
push
adc
pop
sbb
fdiv
add
sbb
lods
fist
fnstcw
xor
ror
jno
mov
fdiv
out
mul
dec
ins
shl
js
sub
pmaxsw
cmp
js
cmps
mov
and
movs
fwait
add
aas
adc
into
popa
stc
jns
inc
dec
into
xchg
rol
push
xchg
test
(bad)
fisubr
(bad)
inc
int
inc
cmp
stc
fist
mov
cmp
(bad)
xchg
xor
sub
mov
xor
push
icebp
or
arpl
and
push
repz
dec
or
enter
add
es
imul
dec
inc
xchg
xchg
mov
ss
cmp
push
mov
xchg
ret
or
cli
inc
cmp
inc
sbb
jl
sbb
sbb
mov
push
movs
ja
pop
stos
pop
ret
push
out
xor
test
movs
adc
out
sub
(bad)
fwait
retf
sbb
mov
retf
fist
sbb
movs
cmp
jge
int
aas
retf
ret
mov
lods
or
dec
add
mov
ficomp
sub
ja
cld
fimul
xchg
xor
stc
les
cli
mov
mov
mov
(bad)
fdivr
loopne
mov
stos
aad
sub
ret
jne
jp
jo
out
call
stos
lds
cmp
push
mov
mov
push
push
nop
inc
imul
ret
mov
mov
pop
and
pop
xchg
cmps
push
sub
cmps
mov
cmp
mov
jns
jl
inc
test
mov
and
adc
scas
cmp
pop
adc
div
mov
mov
mov
in
xchg
ret
mov
or
nop
iret
xor
jmp
mov
jl
jl
sbb
hlt
inc
pop
add
sbb
loopne
shl
shr
rol
mov
imul
jae
js
inc
xor
cwde
push
jl
push
mov
aas
rcr
pop
push
in
xchg
add
(bad)
xchg
mov
ret
mov
inc
pusha
stos
or
sbb
mov
fidiv
bound
nop
fs
aas
fwait
add
adc
adc
mov
xchg
lock
js
cmc
test
pop
adc
bound
push
dec
fist
mov
ret
cmp
fwait
add
and
(bad)
(bad)
(bad)
inc
xchg
ror
ins
or
push
movs
jecxz
out
adc
or
aad
lods
ror
sahf
movs
int3
add
jecxz
fild
jb
call
hlt
cmc
int
dec
lods
out
mov
ficomp
shr
pop
inc
notrack
dec
pop
(bad)
push
xor
and
cmp
(bad)
fcmove
dec
aas
cli
sub
(bad)
or
das
and
(bad)
shl
push
dec
sub
clc
jbe
mov
sbb
mov
dec
jmp
scas
inc
mov
xlat
cdq
rcl
or
leave
jb
jg
add
add
scas
or
pop
(bad)
jns
call
retf
dec
pop
mov
sbb
rcl
js
popa
add
stos
push
xchg
xchg
mov
adc
ds
call
add
out
je
sub
xor
int
push
loop
push
dec
inc
add
aam
push
adc
clc
call
dec
ins
sub
cmp
ins
idiv
inc
enter
cdq
jne
cvtpi2ps
xchg
mov
jne
xchg
(bad)
jnp
call
call
dec
aaa
jae
cmps
out
inc
lods
cmp
je
jb
push
jmp
jne
or
push
jmp
test
jp
mov
pop
pop
jbe
xchg
inc
jno
jl
dec
push
dec
(bad)
retf
ret
aam
scas
mov
adc
call
xchg
dec
fcom
shl
mov
push
xor
in
icebp
outs
inc
shr
dec
test
outs
mov
push
loope
movs
data16
jl
xchg
movs
cwde
dec
cmp
mov
lock
fst
inc
push
js
inc
sbb
pop
cli
jmp
data16
push
adc
sbb
and
pop
mov
call
cmp
out
in
or
shl
dec
xchg
push
call
(bad)
xchg
es
inc
push
lahf
mov
cmp
pop
inc
and
pop
cmp
and
xchg
es
or
ror
(bad)
xlat
add
imul
cli
ja
sahf
fnsave
aad
sub
xchg
jb
inc
jg
into
push
divps
cmc
push
push
cmp
push
stos
mov
or
jnp
inc
mov
inc
fs
pushf
dec
pop
outs
push
in
xchg
or
push
outs
push
pop
fidivr
rcr
or
mov
into
fdiv
leave
ret
shl
ins
retf
sbb
sub
addr16
outs
shl
imul
in
and
ins
aas
xchg
sahf
push
js
sar
clc
pop
cmp
repz
xchg
int3
jne
loop
aad
sub
test
(bad)
xchg
dec
nop
and
hlt
mul
call
cmp
xchg
pop
clc
inc
rcl
mov
aad
call
pop
aad
dec
mov
jl
ds
fwait
les
fst
fbld
sbb
push
xchg
inc
push
ror
push
sar
mov
inc
jmp
ins
sbb
ror
gs
cmps
mov
neg
mov
xlat
cmp
scas
push
cmc
add
aam
xchg
jb
push
fsubr
lahf
mov
(bad)
rol
sar
jno
scas
and
stc
xchg
cs
add
daa
clc
and
int3
pop
jecxz
jno
pop
jl
lods
aad
sti
dec
mov
cld
inc
stc
outs
imul
jecxz
call
imul
inc
nop
test
loop
cld
int3
jmp
xchg
movhps
dec
movs
aam
mov
lds
push
adc
(bad)
(bad)
mul
jno
or
jecxz
outs
cwde
mov
jb
rcr
dec
or
test
js
jbe
xchg
into
dec
add
sbb
loope
into
inc
adc
sti
jne
in
lods
fiadd
jg
xchg
imul
cld
mov
mov
jmp
mov
lahf
lds
mov
add
add
cwde
je
jl
jp
icebp
stos
gs
sbb
jns
daa
cmp
sar
in
adc
sar
sbb
mov
aad
lahf
jmp
sub
ret
jle
cmp
repz
inc
jo
xchg
and
push
inc
shr
sub
fwait
jne
inc
inc
cmp
jns
and
idiv
mov
loope
les
outs
xchg
jle
(bad)
and
imul
pop
cmp
cmp
call
and
mov
mov
in
icebp
and
lods
iret
cmp
daa
adc
imul
dec
repz
ja
mov
int3
jbe
jne
fadd
repnz
ret
cli
mov
inc
xchg
retf
movs
xchg
stc
pop
int
rol
loopne
dec
popf
add
and
loopne
sahf
sbb
inc
push
pop
scas
cmp
and
ins
enter
jp
pop
add
inc
pop
jl
xor
cmp
mov
aam
adc
rcr
mov
mov
jmp
es
in
(bad)
xor
cli
js
dec
push
je
imul
test
dec
outs
retf
cmp
sub
rol
div
dec
xor
jecxz
inc
out
test
nop
adc
lea
retf
cmp
dec
push
adc
mov
or
sbb
mov
mov
add
push
jno
push
mov
daa
or
icebp
ja
gs
sbb
and
mov
fcomp
jmp
xchg
fiadd
int3
push
push
jne
stos
sbb
mov
out
jb
mov
xor
adc
inc
scas
out
inc
ficomp
add
test
mov
ins
add
clc
adc
cmp
cmp
jmp
add
popa
jg
fild
nop
inc
mov
mov
sar
mov
pusha
xor
mov
retf
xor
jno
and
mov
popf
pop
pop
sub
xchg
fwait
dec
mov
sub
sbb
adc
js
add
in
in
add
test
aas
jg
sbb
scas
pop
gs
pop
jle
sbb
jns
mov
xchg
and
or
(bad)
pop
and
hlt
cli
std
ins
test
dec
fisttp
push
and
mov
or
jb
adc
cmp
frstor
dec
mov
mov
popa
push
push
mov
jmp
std
bts
adc
scas
cld
iret
dec
xor
xchg
mov
cli
add
xchg
in
stc
pop
aaa
inc
cmps
icebp
data16
scas
std
xlat
cmp
xchg
add
out
mov
leave
lds
add
jmp
call
mov
test
dec
or
popf
test
aad
mov
mov
dec
dec
mov
mov
push
int3
inc
jecxz
jnp
inc
sahf
cs
cmp
jle
xor
mov
cs
mov
pop
aaa
ret
gs
add
in
jle
mov
and
ror
add
sub
adc
sub
or
shl
jns
add
scas
repnz
ja
xor
dec
ret
xchg
mov
jp
push
jne
aam
sbb
call
add
out
push
sbb
test
(bad)
repz
xchg
sub
ror
ss
je
xor
cmp
adc
lods
sbb
jl
inc
repnz
push
ror
jg
jnp
pop
call
stos
sub
jge
(bad)
push
xchg
mov
cmp
and
jmp
loope
sub
lock
mov
movups
imul
lock
and
jl
jg
cwde
dec
add
sub
popa
gs
mov
scas
fadd
movs
mov
xor
enter
add
add
dec
add
outs
xor
call
adc
cdq
adc
sbb
addr16
xor
adc
mov
adc
rcr
cmps
xor
stos
addr16
cmp
mov
rcl
cmp
mov
mov
sahf
fs
ds
into
iret
call
(bad)
ficom
int3
(bad)
inc
or
in
lods
cmp
jl
or
call
cmc
out
into
fdiv
push
loop
fwait
xor
cld
clc
movs
add
mov
or
xor
scas
in
sar
jmp
cld
ret
into
aam
xor
cmc
mov
sbb
jmp
mov
dec
add
mov
enter
add
xor
mov
sbb
push
mov
lods
shl
inc
pop
or
xor
and
out
add
add
push
cdq
cli
test
and
into
pop
jmp
scas
xor
push
cwde
ret
pushf
or
cmp
mov
jne
xchg
retf
add
nop
mov
xor
and
sub
pop
stc
jg
popa
pushf
ss
pop
mov
xchg
pop
sub
maxps
mov
adc
sbb
and
lahf
jg
mul
and
imul
pop
pop
mov
cmps
mov
jns
jne
outs
sub
and
sub
mov
cdq
neg
out
ret
rdpmc
mov
out
or
and
ins
sbb
loopne
pop
add
mov
lds
add
dec
and
mov
xor
add
or
in
mov
outs
dec
out
sub
mov
mov
jmp
iret
mov
xchg
sub
jmp
ins
shr
pop
sbb
jns
fcomp
js
test
sbb
cmp
sbb
jae
lods
pop
icebp
sbb
push
pop
nop
inc
xchg
pop
fs
mov
fwait
jo
sub
sub
in
out
jae
ins
push
frstor
pop
sbb
fild
mov
int
xchg
movs
mov
aam
mov
mov
add
movs
push
stos
ja
sub
test
mov
xor
or
pop
pop
mov
mov
jp
bound
inc
gs
lea
xchg
add
sbb
add
push
lods
mov
mov
and
cld
xchg
bound
ror
in
(bad)
pusha
sub
sbb
cs
out
push
and
scas
cmp
rol
adc
xchg
mov
mov
mov
lock
mov
xlat
mov
xchg
out
mov
sub
cwde
mov
and
shl
cmp
xchg
mov
xchg
pushf
imul
fcom
cmp
xor
sub
xor
add
xor
iret
dec
pop
or
aam
xchg
sub
xchg
clc
repnz
pop
bound
lock
ins
lea
cmp
in
jns
ins
inc
arpl
jp
ret
inc
neg
inc
cmp
mov
daa
xchg
adc
mov
hlt
ins
call
aam
mov
daa
movs
(bad)
fcomp
sub
and
inc
or
mov
push
xchg
enter
test
call
inc
add
nop
daa
inc
mov
inc
fcom
(bad)
ja
call
loope
mov
or
add
push
imul
or
pop
icebp
movs
movs
or
ins
shl
fimul
arpl
pop
fwait
les
jmp
mov
or
xor
and
ret
xchg
inc
neg
sbb
jne
aas
outs
or
fsubr
xor
mov
and
jbe
test
xchg
xor
jae
sbb
inc
mov
or
push
aas
stos
cmp
fldcw
xor
xchg
popfw
or
je
clc
jns
inc
and
and
adc
pop
jnp
dec
add
jb
ins
stos
test
xchg
out
add
mov
push
push
cmc
jbe
and
test
ss
lods
inc
push
cli
and
xor
sbb
mov
and
ficomp
dec
hlt
cld
mov
pop
repz
mov
ror
retf
daa
mov
ror
dec
jns
loope
hlt
cld
sbb
popf
xor
iret
repnz
inc
je
les
cli
pop
xchg
mov
add
sub
dec
sbb
js
fld
out
xor
xchg
xor
sub
or
loop
ja
adc
fmul
in
fistp
jns
jo
add
pop
aam
ss
xchg
push
loop
mov
mov
dec
fist
xchg
pusha
pop
jg
(bad)
fcomi
ins
pop
jl
hlt
adc
jmp
adc
or
ins
dec
jbe
adc
xor
pop
jecxz
or
aaa
repnz
inc
inc
mov
xlat
jmp
inc
add
push
int3
jg
sub
outs
std
jne
lahf
adc
retf
mov
mov
mov
cli
ret
loopne
stc
push
pop
es
xchg
inc
shl
out
(bad)
jp
retf
sub
ins
test
retf
push
or
or
jecxz
hlt
xor
add
fistp
iret
out
dec
nop
mov
stos
pmulhw
test
inc
jmp
jnp
add
(bad)
pushw
mov
jl
es
or
fisttp
and
mov
cwde
mov
xchg
or
test
sub
ja
jns
seto
mov
mov
mov
adc
gs
sub
cmp
(bad)
lea
sub
xor
inc
adc
xchg
ja
scas
mov
inc
shl
add
mov
clc
sbb
bound
or
out
sbb
xchg
stos
jbe
cmps
pop
test
retf
or
cmp
mov
or
out
sbb
or
nop
jmp
and
ja
shl
stos
add
jmp
arpl
push
repz
mov
push
mov
jle
scas
data16
add
sub
pop
(bad)
pop
ret
pop
adc
add
xlat
jne
fwait
shr
fwait
bsf
cmp
in
lods
push
xchg
cmp
repnz
shl
adc
popf
arpl
sar
jb
(bad)
or
dec
stos
push
loopne
dec
sbb
arpl
shr
fwait
cwde
sbb
addr16
lahf
xchg
mov
ja
fimul
push
daa
jae
out
inc
xlat
stc
ds
inc
dec
movs
dec
outs
cmp
loop
mov
add
ret
aas
das
ror
mov
dec
aaa
call
not
scas
add
xor
push
fwait
pusha
adc
pop
mov
scas
pop
pop
pop
dec
fldcw
xchg
sbb
add
das
mov
fadd
adc
call
mov
ret
inc
test
mov
push
inc
outs
sahf
aam
cmps
loope
(bad)
arpl
daa
and
fsubr
jecxz
dec
add
(bad)
sub
in
add
and
les
jmp
mov
cmp
jmp
mov
add
dec
pop
push
pop
mov
scas
dec
out
xchg
push
shl
movs
neg
pop
mov
cmovo
xor
pushf
test
mov
dec
xchg
adc
addr16
push
loopne
mov
das
bound
push
pop
mov
pusha
(bad)
push
out
sub
dec
dec
retf
jnp
jl
addr16
sub
mov
push
ja
sti
das
mov
test
out
shr
jmp
lock
stos
sbb
repz
xchg
sbb
sub
shr
imul
xchg
cmp
and
jp
pop
and
push
ins
inc
into
push
leave
popa
mov
imul
push
jg
fst
add
push
sub
jbe
jne
jnp
and
neg
aas
cs
aad
ret
subps
jl
push
loope
outs
shl
loopne
cmp
push
in
out
cmc
ins
push
shl
div
mov
mov
cmp
jbe
(bad)
retf
mov
mov
retf
sti
pop
inc
push
ds
int
cmps
(bad)
movs
outs
int
mov
dec
adc
mov
sbb
test
inc
gs
pop
popa
sbb
pop
out
outs
imul
mov
or
aaa
icebp
inc
or
(bad)
jmp
call
jbe
xor
movs
sar
cmp
and
nop
push
ret
or
mov
int
jp
add
dec
std
aam
test
loopne
(bad)
lods
mov
sahf
jbe
or
loope
pop
cwde
inc
paddq
imul
imul
mov
call
jg
ror
push
cld
mov
popf
clc
aas
call
addr16
sub
pop
mov
mov
mov
lods
jg
lahf
std
mov
xchg
(bad)
cld
push
iret
aaa
call
fisub
(bad)
xlat
dec
fbld
jecxz
ds
cmc
or
ror
pushf
int
sub
add
jnp
les
inc
push
mov
loope
or
sti
arpl
cmp
pushf
sti
mov
sbb
push
bound
das
sti
test
cld
test
in
fisubr
lock
xlat
cld
cmp
cmc
cwde
in
adc
push
ins
add
aam
ret
xchg
mov
clc
mov
and
movs
push
add
ds
movs
sub
sbb
(bad)
mov
(bad)
loope
cdq
and
retf
sbb
xor
pop
mov
jmp
icebp
rcr
enter
xor
and
pop
or
mov
retf
call
fisttp
add
adc
out
jp
loope
inc
and
data16
cmp
ds
push
in
bound
xlat
into
(bad)
xchg
jnp
jb
push
pop
arpl
cmp
lock
stos
cmp
(bad)
or
test
dec
jae
pop
stc
jp
xchg
dec
shl
pop
inc
mov
loop
scas
ret
mov
push
pop
mov
push
retf
bound
out
out
test
add
retf
popf
sub
test
add
and
jae
push
cmp
sbb
pop
xlat
es
mov
ss
sub
popf
push
dec
sbb
mov
xchg
je
dec
xor
jge
cmc
and
sbb
lods
fcomp
ss
pop
xchg
xchg
mov
adc
jb
lds
mov
femms
and
push
mov
popa
stos
pop
inc
adc
push
xlat
or
data16
aas
rcl
lods
xlat
pop
jmp
sub
loope
sub
mov
push
(bad)
in
ins
pop
pop
mov
mov
imul
test
(bad)
jle
nop
daa
xor
mov
xlat
aam
retf
sub
hlt
xor
jae
bound
cmp
cmp
xchg
and
mov
xor
sbb
adc
dec
cmps
int
mov
(bad)
in
aaa
dec
xlat
sbb
mov
inc
cmc
outs
or
dec
pop
mov
cmp
or
sub
jae
stos
dec
stos
jmp
leave
mov
sub
sbb
adc
xor
cmps
inc
jge
push
aad
mov
push
mov
or
and
aam
inc
and
push
hlt
ds
jle
pushf
mov
push
js
sub
out
icebp
(bad)
or
mov
push
xor
dec
jbe
pusha
shr
lea
cdq
movs
cld
cmp
popa
shl
add
xlat
pop
std
xchg
adc
sub
fstp
pop
int3
rcr
lock
fiadd
inc
in
xchg
pushf
inc
add
push
clc
(bad)
aad
dec
clc
sbb
push
jle
xor
dec
sbb
cld
outs
dec
mov
out
jp
push
retf
cdq
hlt
xchg
dec
sbb
frstor
cmps
fnstcw
mov
repz
xchg
xor
xchg
pop
data16
sbb
pop
push
dec
sub
cmp
and
xchg
inc
sbb
xchg
push
push
aas
fwait
add
mov
ror
mov
mov
loop
jnp
jle
cmp
daa
jecxz
movs
push
xor
push
je
scas
dec
xchg
mov
inc
scas
sbb
cmp
lds
sub
xor
or
mov
or
mov
inc
in
out
ins
sahf
fist
shl
call
push
pop
and
or
dec
jnp
daa
inc
not
sub
into
xchg
push
or
mov
and
push
adc
jb
loope
popa
hlt
js
cmps
sbb
cmps
jge
lods
add
leave
xor
aam
xor
pop
retf
add
repnz
outs
push
adc
out
inc
fs
stos
add
xor
leave
cmps
js
mov
jbe
inc
cdq
mov
cwde
outs
out
mov
mov
ss
int3
outs
stc
dec
sti
add
imul
(bad)
ret
(bad)
push
popa
popf
cs
inc
cmps
inc
pop
xchg
not
ficom
mov
inc
cmp
add
adc
jle
in
push
dec
int
adc
cmc
xor
test
dec
mov
adc
cwde
mov
xor
std
std
clc
or
sahf
sub
mov
hlt
pop
jl
popa
pop
mov
and
aas
sub
add
in
sti
outs
xor
lods
add
pop
mov
or
ret
std
sub
jbe
xchg
cmp
jns
pop
fimul
pop
jae
xchg
cmp
pop
leave
dec
cli
mov
arpl
imul
sub
(bad)
fdivr
retf
mov
push
loop
mov
or
fist
in
mov
sub
mov
mov
mov
xor
cdq
aas
lods
add
mov
push
xor
add
idiv
mov
mov
(bad)
mov
fs
(bad)
nop
sahf
xchg
arpl
popf
fxam
mov
adc
cwde
dec
mov
fs
mov
adc
in
mov
dec
cmp
add
ret
add
arpl
mov
dec
pop
daa
mov
pushf
inc
dec
int3
leave
(bad)
pushf
in
lods
jae
jbe
mov
inc
jbe
ins
xchg
xchg
fnstsw
out
sbb
sub
xchg
jmp
outs
addr16
popa
outs
inc
jo
adc
adc
push
retf
addr16
jb
lea
xor
dec
cmp
mov
rcr
jbe
push
jne
inc
push
lea
pop
xchg
shr
pop
cmp
xchg
in
push
or
data16
in
stc
add
sub
jg
xchg
xor
push
test
mov
out
pop
adc
(bad)
push
pop
mov
sahf
fisttp
pop
jae
xchg
lock
sbb
cmc
add
jno
sub
adc
fdiv
fwait
ss
cmp
movs
cmp
jne
sbb
add
shl
dec
pop
lods
popf
jb
ins
rol
mov
cmp
mov
int
dec
pop
push
pop
fiadd
pop
out
adc
xlat
push
adc
mov
cmp
xchg
xchg
in
lods
cmp
loopne
push
add
ret
cmp
pop
data16
int3
in
aaa
ret
mov
push
dec
(bad)
shl
lods
mov
dec
movs
sub
ss
push
push
jecxz
jmp
(bad)
ds
mov
popw
pop
shl
mov
inc
pop
bound
add
add
mov
xchg
mov
pushf
and
aaa
dec
call
push
into
xor
jg
push
push
retf
push
adc
xor
shl
pop
dec
bound
pop
push
xlat
jbe
mov
cmp
and
or
loope
inc
mov
lahf
bound
dec
stc
fsubr
in
gs
sub
imul
pop
mov
out
cmp
(bad)
jge
mov
mov
or
jle
push
shr
je
push
mov
arpl
inc
enter
or
or
(bad)
adc
push
mov
sub
mov
add
jo
jp
jnp
push
push
add
icebp
lods
mov
mov
fst
out
shl
out
loop
jns
pop
shl
loop
jge
(bad)
adc
xchg
cmps
aaa
arpl
jmp
mov
ret
dec
or
or
aaa
mov
out
arpl
(bad)
mov
and
hlt
xchg
out
mov
adc
cwde
sbb
sbb
in
sbb
dec
mov
mov
gs
or
and
rol
push
pop
mov
and
call
cmc
nop
push
(bad)
(bad)
callw
rcr
aad
mov
not
inc
sbb
iret
lock
inc
cmp
daa
sub
fwait
dec
push
enter
xor
sbb
pop
mov
fmul
xor
fsubr
les
pop
xchg
fldenv
mov
fcomp
xchg
lds
ins
icebp
cmps
xor
imul
data16
mov
fidivr
push
daa
lods
mov
sub
xchg
dec
div
add
pop
es
imul
xchg
dec
lds
push
in
mov
lods
loopne
daa
dec
and
fs
fld
repnz
ja
pop
cmp
enter
inc
xchg
cwde
or
test
outs
and
(bad)
xchg
pop
arpl
ins
ja
daa
imul
jge
pushf
push
inc
sbb
mov
and
ins
popf
dec
int3
fimul
sub
test
mov
xor
push
xor
jl
cmp
dec
ins
ds
adc
jae
in
imul
in
mov
mov
shl
enter
sub
int3
xchg
popa
cwde
xor
movs
into
pop
mov
fidiv
test
dec
rol
adc
sub
push
dec
push
xlat
test
fdivrp
into
aaa
cmc
pop
add
xchg
push
cmp
jp
popf
inc
cmp
les
ret
jecxz
fwait
jae
lea
adc
das
xor
xchg
loop
xor
or
je
sbb
bound
add
pop
jp
pop
mov
jmp
sub
fild
adc
xor
shl
or
fwait
dec
shr
inc
mov
enter
mov
xchg
dec
pop
xchg
and
jno
mov
call
xor
pusha
push
push
scas
add
into
jg
int3
std
pusha
inc
fld
nop
das
into
cwd
les
je
test
mov
scas
daa
push
shl
or
pop
je
ficom
ss
xor
and
shl
(bad)
push
jne
mov
dec
(bad)
push
sub
arpl
xchg
and
cmp
mov
dec
rcl
mul
xor
pop
inc
xchg
movs
jmp
adc
stos
mov
xor
gs
xchg
or
mov
sbb
loopne
mov
adc
pop
sti
in
daa
xor
ins
rcl
sbb
inc
jecxz
and
mov
pop
adc
mov
fisub
mov
enter
xchg
mov
jl
pop
neg
xchg
repz
inc
cmp
push
sub
adc
retf
add
mov
cld
sbb
ds
inc
inc
xchg
inc
jl
add
mov
in
(bad)
(bad)
mov
clc
xor
ss
in
ficomp
pop
nop
addr16
pop
js
jbe
jns
out
ficom
pop
popa
mov
stc
jmp
fwait
int3
repz
mov
inc
add
fisubr
into
mov
pop
mov
mov
retfw
in
inc
into
(bad)
jno
pop
imul
adc
stc
jge
(bad)
int
or
sub
(bad)
push
and
shl
mov
out
outs
fwait
jnp
stos
sub
ss
sub
inc
mov
lock
gs
sbb
jne
mov
mov
leave
mov
gs
xchg
aas
add
sar
movs
inc
repnz
js
or
outs
cli
add
fld
xchg
push
add
add
mov
dec
not
clc
adc
mov
adc
nop
xchg
sahf
mov
(bad)
push
fild
in
mov
mov
jp
adc
adc
xchg
and
dec
cdq
loope
in
jl
sbb
pop
mov
ficom
jl
test
sbb
je
or
shl
mov
mov
inc
or
push
mov
inc
pop
mov
imul
pop
movs
shr
jnp
xchg
repz
inc
add
ret
sub
pop
add
jg
scas
sti
rcl
and
dec
mov
mov
pop
adc
inc
pop
enter
inc
fnsave
push
dec
cmp
ss
aaa
sbb
push
test
stos
pop
sahf
inc
out
mov
or
push
cmc
cmp
adc
xchg
pushf
cmps
aad
xchg
(bad)
dec
in
hlt
rcl
xor
setg
in
xor
ret
out
outs
int3
das
inc
rcl
cmp
xor
int3
leave
add
sub
dec
inc
jg
adc
mov
dec
jmp
push
xor
xchg
mov
mov
adc
sub
fbld
adc
hlt
jmp
jne
or
jmp
les
pop
cdq
call
sub
mov
xchg
xor
pop
daa
dec
jbe
mov
sbb
mov
cmp
and
sub
xchg
retf
jl
inc
add
cdq
iret
jle
and
jb
iret
add
(bad)
leave
cmp
aaa
fs
mov
mov
jbe
imul
out
adc
aam
add
arpl
ins
mov
mov
mov
cmps
movs
cdq
aas
adc
or
mov
out
push
ds
dec
les
pop
(bad)
mov
push
pop
sbb
mov
out
or
inc
mov
cdq
dec
sbb
cmps
inc
jae
stos
repnz
pop
dec
or
xor
pop
lods
popf
call
push
callw
iret
xor
or
mov
sbb
cmps
imul
or
fnstenv
cmp
loopne
mov
inc
cmp
mov
xchg
enter
sub
xchg
adc
mov
retf
aas
scas
lahf
jmp
ins
or
fdivr
pop
sbb
cmp
(bad)
fild
es
lds
xor
(bad)
sbb
pop
aas
cmp
xchg
jnp
pop
sti
add
mov
jp
jne
cmps
mov
jmp
(bad)
jnp
or
mov
retf
cmc
add
or
mov
cld
loopne
xor
sbb
(bad)
stc
enter
push
jl
inc
in
retf
or
add
or
ret
imul
cli
ja
scas
ins
mov
xchg
pop
(bad)
call
mov
icebp
mov
pop
dec
cvtps2pi
add
iret
push
jne
xor
jno
outs
(bad)
retf
jle
jno
xor
xor
lods
inc
mov
lods
cmps
ds
loopne
sbb
jae
popf
fidiv
out
call
fwait
loopne
push
sbb
push
test
fnstenv
adc
push
bound
arpl
add
aas
jg
fistp
(bad)
iret
std
sar
xor
mov
sahf
push
pop
jb
or
in
and
enter
cmc
neg
mov
fidiv
sub
lds
adc
push
in
arpl
push
mov
xchg
repz
les
mov
loop
lahf
pop
pushf
int
rcl
push
in
or
sar
rcr
sar
shl
inc
dec
mov
mov
cld
loope
ins
xchg
dec
or
out
loopne
rcl
js
mov
stc
leave
call
push
mov
gs
stos
call
out
cmps
mov
dec
(bad)
and
sbb
pop
das
and
mov
inc
call
std
sar
xchg
sbb
dec
mov
add
pop
frstor
aad
sbb
ss
add
xchg
rcl
pop
fcom
mov
dec
sub
pop
sbb
pop
js
inc
inc
mov
arpl
daa
push
mov
mov
inc
push
cmc
lock
dec
rcr
inc
loope
aas
jmp
sub
cmc
(bad)
cmp
xchg
jo
xor
out
mov
into
inc
xchg
fs
adc
sbb
pop
out
mov
mov
xor
mov
jno
pop
ins
sub
je
pop
jnp
xchg
mov
mov
fsubr
push
add
ret
inc
dec
call
jg
mov
and
or
dec
push
add
or
sti
aam
mov
sbb
inc
retf
jnp
stos
lock
xor
mov
or
xchg
imul
outs
fsub
fdivp
cli
sbb
xlat
inc
sbb
clc
sar
imul
jbe
pop
jns
pop
xor
movs
xor
jg
push
xor
pop
add
xor
das
bound
gs
test
aam
iret
sub
call
mov
inc
ret
mov
ins
and
fld
xchg
sti
shl
stos
iret
pop
add
push
fadd
push
stos
push
les
inc
repnz
(bad)
shl
sbb
in
test
movs
xchg
sbb
test
inc
test
cwde
cmovl
jecxz
adc
jecxz
clc
jb
call
dec
and
xor
hlt
add
mov
adc
lods
jo
add
ror
jp
xor
hlt
and
out
shl
pop
jmp
xor
ja
xor
and
call
or
sbb
pushf
ror
xor
sbb
mov
aaa
mov
and
std
inc
cmp
mov
pop
addr16
xchg
push
repnz
aam
imul
pop
cmp
jle
js
or
shr
dec
(bad)
int3
or
call
sar
leave
iret
bound
push
bound
sub
xlat
dec
lahf
push
inc
dec
test
and
xchg
add
pop
add
je
(bad)
pop
ret
(bad)
mul
fidiv
xchg
inc
cmp
(bad)
loop
mov
cmp
inc
fdivr
jnp
inc
jne
xlat
adc
sub
bound
rol
retf
lahf
cs
loopne
loopne
stc
fadd
std
mov
and
jmp
ret
cwde
cmps
(bad)
inc
sbb
stc
adc
sub
or
ret
mov
xchg
(bad)
adc
jle
xor
inc
lds
cmps
call
jp
(bad)
in
cmp
ror
test
sbb
outs
jp
ss
dec
cs
pushf
mov
(bad)
sub
cmp
jg
inc
rcl
mov
or
inc
ret
rcl
into
imul
mov
ficom
mov
or
inc
mov
push
fiadd
xor
push
out
dec
add
cmp
int
mov
cmp
(bad)
dec
mov
mov
retf
ss
mov
sbb
jl
mov
stos
push
inc
push
sahf
jo
cmp
push
mov
call
jnp
fnstenv
cld
scas
sbb
jecxz
or
in
push
je
inc
push
aaa
retf
call
sbb
js
cdq
ror
cmp
fstp
sbb
jge
clc
cmps
push
pop
neg
lahf
aad
dec
pusha
inc
je
stos
div
sub
sub
inc
cwde
out
shl
(bad)
aaa
mov
ud1
sbb
aam
xor
mov
loop
inc
inc
mov
jb
cmp
repz
mov
and
call
lock
xor
es
mov
sbb
dec
or
addr16
jno
je
dec
(bad)
mov
mov
(bad)
push
xchg
js
add
fst
xchg
push
sti
mov
mov
sub
outs
cli
and
dec
fst
(bad)
out
test
xlat
sub
jge
xor
movs
sub
xor
out
cwde
or
jbe
xchg
push
std
dec
cmc
ret
push
stos
sbb
inc
loope
repnz
inc
in
add
add
out
push
ss
in
ja
inc
shl
hlt
fiadd
xlat
or
popf
adc
das
nop
aaa
sbb
in
fnstsw
add
test
xchg
sahf
js
scas
sbb
aaa
push
push
mov
and
adc
cmp
mov
fs
xchg
or
push
(bad)
les
mov
sbb
pop
js
jge
data16
jecxz
adc
cld
lods
aam
hlt
add
mov
cwde
jbe
scas
pusha
fiadd
aas
(bad)
fimul
fld
sbb
in
or
in
mov
sbb
dec
stc
jb
xor
std
movs
inc
loope
or
sbb
shr
loop
sub
mov
aaa
inc
(bad)
icebp
mov
js
mov
mov
xor
outs
push
xchg
(bad)
jbe
add
adc
sbb
mov
nop
sub
inc
scas
dec
scas
lods
not
jnp
fisttp
ds
xchg
add
enter
pop
mov
dec
je
loopne
into
xchg
daa
inc
inc
dec
mov
add
sub
jne
push
jl
sub
retf
mov
je
popa
mov
icebp
push
sbb
inc
cmp
stos
push
inc
bound
fild
gs
in
sub
js
mov
xchg
test
mov
jns
add
sbb
jnp
adc
outs
pop
push
cld
iret
adc
arpl
cmps
jne
loopne
ds
nop
(bad)
adc
xor
pop
inc
add
fdivr
mov
repnz
popa
leave
push
xchg
in
cwde
aad
stos
mov
inc
or
or
stc
add
and
cmp
lods
xchg
cdq
push
jno
mov
dec
xchg
xchg
lock
into
mov
cmp
cmp
xor
or
hlt
sbb
imul
stos
pop
mov
ss
jl
jecxz
or
scas
dec
mov
inc
mov
pop
mov
or
pop
into
outs
inc
fidivr
xchg
lock
inc
mov
loop
cmps
ja
add
push
mov
pop
xor
push
jmp
scas
jmp
add
pop
ja
nop
daa
inc
aad
sbb
jne
sub
mov
push
pop
sub
dec
push
or
adc
push
xchg
ficom
in
movs
out
pop
je
mov
sbb
jg
cmp
jle
aaa
dec
cmc
cmp
icebp
(bad)
adc
cmp
out
dec
(bad)
(bad)
and
jno
stc
int3
cmp
or
movs
and
sbb
iret
aaa
push
xchg
pop
(bad)
movs
mov
ror
or
sbb
mov
add
dec
lods
push
or
scas
xchg
prefetch
cwde
fsub
setl
inc
adc
mov
sub
pop
or
and
imul
cwde
cmp
rol
ins
fcmove
mov
jo
cld
sub
cwde
pusha
adc
xchg
or
pop
pushf
ror
mov
pop
lahf
sbb
mov
fbld
je
sti
or
iret
js
outs
jb
or
into
pop
aam
push
jle
lock
push
pushf
test
dec
loopne
adc
retf
xor
jg
stos
add
pop
xor
not
mov
les
xor
into
mov
dec
(bad)
(bad)
gs
mov
sti
mov
jmp
in
adc
mov
sar
in
or
je
mov
dec
cmp
ss
adc
idiv
adc
dec
xchg
stos
add
and
mov
mov
fadd
(bad)
ss
adc
jg
fwait
and
ja
bound
pop
xchg
loopne
inc
xchg
(bad)
(bad)
fdiv
pop
stc
push
inc
sub
in
icebp
mov
and
inc
adc
stos
dec
int3
and
imul
xor
in
push
mov
fstp
sbb
adc
push
in
adc
push
aam
jno
jb
jmp
mov
(bad)
sbb
pusha
cmp
and
mov
in
sub
jae
push
mov
shl
hlt
xchg
pop
push
(bad)
or
inc
rcl
loopne
adc
aas
jmp
fsub
loope
je
inc
scas
aam
lock
dec
xchg
jmp
sbb
xchg
leave
cwde
mov
std
shr
jae
enter
(bad)
pop
retf
xchg
outs
sahf
xchg
cld
ds
(bad)
stc
fmulp
aas
fmul
test
cmc
or
mov
hlt
test
mov
jg
dec
sbb
int3
adc
retf
std
imul
in
arpl
pop
div
adc
icebp
pop
imul
mov
pop
fwait
aaa
add
or
xchg
xchg
inc
mov
fdivr
and
fisttp
and
into
enter
inc
sbb
pop
daa
test
pop
punpckldq
dec
xchg
push
mov
pop
pop
fcmovne
ins
shl
dec
xchg
mov
sub
and
and
out
push
(bad)
jae
das
xchg
add
imul
pop
pop
fsub
jge
fnstenv
fcomp
(bad)
(bad)
movs
dec
out
adc
push
imul
pushf
cmp
ffree
outs
nop
sub
xor
mov
scas
push
jg
bnd
cs
and
test
fist
mov
dec
outs
test
div
mov
inc
shr
add
cdq
mov
or
xchg
fsubr
in
sti
pusha
dec
push
xor
loope
test
ret
xor
clc
jne
xchg
scas
cmp
ins
or
add
jae
push
mov
push
push
cmc
mov
sbb
sbb
mov
jp
push
or
inc
popa
outs
outs
repz
popf
pmaxub
add
jmp
test
shr
push
inc
add
sbb
and
call
inc
int3
jmp
fimul
pop
shl
arpl
dec
loopne
aad
or
aam
cs
push
aaa
and
lea
mov
add
shl
push
mov
mov
cmp
data16
push
adc
shl
lods
gs
add
push
sbb
xlat
enter
adc
pop
pusha
mov
and
iret
outs
push
imul
mov
dec
arpl
bound
pop
xchg
retf
ins
push
test
dec
jno
dec
push
movs
push
outs
xor
cmc
test
leave
movs
outs
inc
ret
cmc
xlat
scas
test
pop
loope
jl
test
test
mov
inc
fistp
aad
dec
pop
xchg
(bad)
xchg
inc
stos
jne
add
adc
stc
xor
frstpm(287
aaa
push
popf
jne
jg
ret
call
neg
movs
stos
sahf
jmp
iret
jns
dec
iret
(bad)
movs
(bad)
push
adc
jp
xchg
aam
or
ror
ret
lods
daa
push
or
mov
and
or
xchg
inc
mov
scas
ja
ror
or
sbb
xchg
cmp
pop
add
int
adc
shrd
repnz
cdq
inc
in
icebp
(bad)
ret
mov
sqrtpd
dec
xchg
call
jb
fdiv
retf
lea
xchg
pop
loope
test
fwait
pushf
xor
or
leave
stc
test
mov
out
cmp
mov
leave
inc
or
sub
xchg
out
std
fcom
mov
mov
jns
adc
in
xor
mov
cmps
lock
cmp
pop
test
test
jmp
cmp
xor
inc
jge
mov
xchg
dec
mov
xor
adc
sti
jp
call
mov
(bad)
(bad)
int
jmp
test
mov
out
(bad)
out
mov
pushf
mov
cli
rcl
adc
call
cmp
addr16
or
mov
psubb
pop
call
dec
or
mov
mov
div
pop
xchg
pop
push
mov
jmp
(bad)
push
mov
cmp
inc
adc
push
data16
pop
in
aaa
mov
sbb
mov
mov
mov
fdivrp
jno
cmp
leave
mov
ds
popa
sti
jnp
mov
or
sub
mov
das
adc
dec
lea
push
cmp
add
cmp
fidivr
add
cmps
or
push
in
stos
out
jno
push
or
fisubr
aas
xchg
mov
dec
push
out
ret
ret
je
(bad)
fwait
mov
and
rol
cs
pop
or
jo
imul
inc
in
aaa
pop
lock
scas
mov
mov
movs
push
or
mov
dec
jg
jp
fwait
push
mov
fadd
lahf
jnp
out
xchg
mov
or
loope
jp
add
and
dec
pop
popf
sbb
out
mov
jecxz
mov
pop
mov
push
adc
push
sbb
pop
out
xchg
jecxz
xor
into
popfw
icebp
sub
fisttp
push
sub
jmp
and
jbe
and
xor
inc
pop
jnp
fidivr
dec
movs
cmp
jmp
icebp
mov
mov
daa
add
lock
mov
push
enter
rcr
cli
(bad)
pop
adc
xor
fimul
push
ret
daa
and
adc
retf
push
out
rcr
cdq
fdivr
or
jae
repnz
es
retf
out
iret
push
leave
xchg
mov
or
fcomp
je
call
cmps
and
xlat
and
(bad)
rcl
ins
jecxz
repnz
cli
int3
cli
movs
pop
and
adc
popf
retf
add
sub
fstp
cmp
dec
sbb
sub
xor
retf
jmp
mov
cmp
pushf
jl
dec
push
push
mov
test
fisubr
xchg
or
adc
xor
xchg
cmp
hlt
pusha
repnz
cmp
mov
mov
jne
add
(bad)
lods
sub
xchg
cmp
ins
sahf
sub
mov
movs
leave
test
rcl
push
clc
sbb
out
nop
jb
mov
pusha
in
xor
cmp
jns
sbb
dec
dec
dec
mov
mov
lahf
(bad)
cdq
test
mov
ror
gs
pop
mov
mov
push
fiadd
pop
lock
stc
les
es
add
or
xor
push
pop
fidivr
fcomp
dec
push
jmp
std
mov
imul
arpl
sub
lock
enter
cdq
ss
mov
cmp
mov
sbb
call
popf
(bad)
sub
into
jp
add
loopne
jp
movs
mov
jge
retf
push
jmp
cmp
cmp
fisttp
jmp
xchg
int3
imul
ins
and
pop
mov
fmul
inc
ja
nop
adc
sub
dec
inc
int
repnz
mov
neg
test
adc
mov
push
out
out
mov
and
jecxz
cmp
rcr
mov
cmp
adc
xor
cmp
faddp
mov
cmp
mov
outs
lods
int3
enter
mov
out
push
inc
xchg
stc
lea
sbb
mov
xchg
jge
mov
mov
fs
inc
cmp
and
repnz
aam
sbb
add
xor
xchg
cmp
sbb
(bad)
mov
mov
mov
or
sbb
cmp
jae
jle
adc
jnp
lea
pop
adc
jmp
stos
xor
(bad)
adc
cmc
out
jecxz
pop
daa
mov
neg
inc
dec
and
dec
inc
pop
cli
xor
mov
dec
and
adc
and
stc
(bad)
lock
test
fimul
sahf
push
loop
xor
sub
(bad)
cmp
gs
mov
fdivrp
retf
jno
add
cli
sub
int
in
test
mov
rcr
(bad)
push
ret
fcomp
push
mov
imul
icebp
push
test
pop
mov
or
sub
jl
push
lock
jno
(bad)
gs
push
retf
enter
mov
fld
(bad)
aad
sar
cs
pop
sub
in
pop
pop
xchg
jp
mov
imul
xchg
leave
pop
sbb
sbb
push
or
rcr
sub
fcmovnb
nop
mov
pop
sbb
mov
mov
retf
xchg
call
std
cs
mov
sub
xor
mov
(bad)
mov
out
pop
and
stos
aam
pop
sar
lock
sub
mov
scas
out
mov
(bad)
into
cmc
mov
test
lds
xor
inc
retf
xchg
cmp
pusha
dec
mov
mov
bound
dec
fs
inc
add
or
mov
adc
out
xchg
dec
cmp
push
arpl
rcl
(bad)
adc
lock
mov
and
in
or
mov
in
push
test
pushf
pop
jnp
nop
dec
dec
sub
mov
sub
test
fisttp
fisubr
xchg
mov
js
push
mov
adc
lods
sub
adc
je
mov
ins
mov
test
ret
add
add
mov
cmps
gs
enter
dec
and
dec
sti
in
lea
mov
xchg
fidivr
mov
push
add
fwait
popa
inc
xchg
in
jp
jl
or
xor
pop
icebp
outs
sti
adc
inc
mov
jle
sar
pusha
pop
cmp
sub
push
push
push
mov
aas
push
mov
jo
out
sub
cmp
pop
ins
fs
xchg
and
cmp
fs
jmp
test
jo
cmc
push
daa
jge
mov
sub
lds
arpl
fstp
(bad)
adc
jge
push
nop
xchg
call
int3
pop
fs
xor
and
jg
std
inc
shl
pop
mov
fwait
mov
add
cld
(bad)
call
xchg
jl
cmp
push
sub
popw
inc
loope
aam
sti
mov
jle
or
or
push
movs
push
mov
xchg
sub
in
fnstsw
icebp
scas
ror
les
mov
cmps
or
push
push
aam
std
ret
inc
push
mov
jmp
inc
mov
xchg
clc
cmp
hlt
in
and
push
mov
ror
push
xor
inc
imul
ins
xchg
mov
adc
mov
adc
xor
ret
ror
rcr
mov
dec
mov
sbb
(bad)
or
mov
xor
xor
out
popa
sbb
fwait
(bad)
stc
jmp
mov
adc
stos
or
repz
mov
in
fisttp
adc
push
or
jmp
leave
je
jne
shr
inc
cdq
adc
xor
lods
adc
sbb
add
mov
sbb
xor
jb
adc
jmp
loope
or
(bad)
test
enter
enter
cs
mov
push
cmp
fcmovne
outs
dec
mov
sbb
ins
push
adc
ror
jnp
dec
adc
jg
add
jb
jo
or
dec
cwde
xchg
dec
push
inc
adc
or
mov
mov
(bad)
(bad)
addr16
loope
in
stc
xor
pop
pop
mov
mov
test
dec
pop
fcomp
pop
fld
lahf
loope
ror
mov
adc
sbb
gs
mov
jl
sub
retf
mov
adc
mov
fsubr
push
and
loop
sub
cmps
xor
es
cmp
(bad)
dec
jp
cmc
push
push
aas
xchg
push
imul
pop
test
imul
add
scas
cmps
fisubr
ja
(bad)
leave
push
cmp
imul
out
scas
scas
sbb
push
(bad)
stos
adc
mov
pop
das
jle
iret
push
mov
inc
(bad)
aaa
in
pop
in
sar
daa
inc
aaa
sub
das
jb
xlat
inc
loopne
idiv
lock
test
mov
fimul
out
leave
scas
mov
mov
fdiv
sahf
or
mov
inc
jg
dec
fld
cmps
leave
push
out
jae
out
jge
or
fs
retf
mov
adc
dec
lea
es
ds
jp
icebp
adc
fisttp
popa
jmp
push
mov
or
inc
loop
push
mov
xchg
mov
jl
xchg
fmul
adc
shr
sub
mov
sar
xor
in
and
dec
lock
in
jmp
sbb
push
out
mov
or
mov
nop
out
dec
stos
rcr
call
add
jp
add
dec
pop
cmp
pop
jmp
es
iret
popa
(bad)
cli
dec
addr16
cmp
out
pop
sahf
div
in
sbb
ds
inc
addr16
pop
pop
cld
lds
jno
xlat
or
cmps
jns
mov
or
(bad)
xor
xchg
cmp
mov
fs
jmp
mov
mov
hlt
jne
addr16
call
and
dec
retf
dec
sbb
and
iret
scas
ds
xor
(bad)
pop
xor
imul
mov
sub
push
xchg
movs
out
(bad)
retf
in
imul
out
push
xor
push
xchg
shl
xchg
aas
inc
xchg
fld
add
sub
std
pop
jne
lods
jae
test
test
loope
pop
lea
adc
pop
rol
add
loop
int3
ret
jnp
mov
mov
push
add
lods
mov
retf
sub
(bad)
pusha
test
(bad)
pushf
sub
jge
xchg
jo
mov
sub
cdq
xchg
fistp
and
in
cmp
je
cmp
cli
jb
cmp
fild
sbb
scas
mov
or
and
mov
in
(bad)
(bad)
sub
and
imul
adc
into
jno
bswap
jo
stc
cmps
mov
loope
fiadd
stc
aad
cs
and
dec
sbb
push
inc
scas
mov
add
push
loopne
ret
scas
call
pop
push
js
std
mov
mov
out
push
or
sub
dec
add
std
div
pop
and
out
pop
push
aaa
sub
cmp
fistp
les
jnp
daa
int
loope
shr
push
cmps
jge
repnz
sbb
out
inc
enter
fcom
push
sub
outs
adc
in
jle
adc
(bad)
fdiv
cmp
inc
pop
mov
daa
cmp
stc
mov
sub
add
inc
jns
fcom
xor
fwait
cmp
inc
cmc
(bad)
arpl
retf
les
push
jns
cli
pop
sub
sbb
mov
lods
inc
dec
inc
push
stos
cmp
adc
and
leave
les
jg
mov
daa
inc
jle
arpl
loopne
gs
sbb
imul
xchg
cs
out
and
jl
xor
stos
add
sbb
xchg
in
mov
loope
pusha
cmp
ret
outs
pop
ror
das
bound
jl
xchg
js
mov
mov
push
jne
or
inc
xor
sbb
outs
shl
repz
test
loopne
mov
fs
inc
imul
add
fidiv
scas
adc
and
es
fdivr
push
in
jnp
mov
daa
adc
(bad)
nop
in
mov
and
mov
dec
sbb
jmp
hlt
xchg
adc
(bad)
jmp
inc
ds
push
(bad)
gs
add
or
add
push
jmp
add
push
lods
leave
mov
or
add
addr16
sub
in
int3
push
or
xchg
stos
or
jb
xlat
or
and
mov
or
test
aaa
nop
aaa
xchg
test
ret
arpl
lds
sar
jge
in
dec
mov
lea
push
fwait
xchg
nop
stc
hlt
jecxz
inc
inc
aam
sbb
dec
frstor
xor
mov
xlat
dec
icebp
fmul
popf
mov
cdq
in
push
and
ret
mov
adc
mov
mov
popf
inc
lds
push
xor
es
ror
xchg
out
sahf
jnp
push
stos
lods
shl
mov
add
loope
pop
(bad)
in
pop
add
fsub
xchg
fnstcw
add
outs
mov
stos
test
cwde
inc
mov
mov
xchg
test
fist
jb
sbb
pop
pop
aas
test
add
je
inc
jns
cmps
push
mov
mov
sahf
add
push
mov
add
dec
push
inc
ret
jbe
pop
xor
mov
rol
pop
dec
sub
or
in
cmp
cmp
(bad)
std
add
test
cmp
dec
cmp
addr16
jp
and
xor
jecxz
retf
(bad)
sub
jnp
fisub
out
mov
or
or
aam
call
fbld
clc
ins
or
add
cmp
sbb
out
(bad)
mov
sub
out
inc
pop
aad
inc
push
(bad)
pop
or
sbb
jnp
pushf
js
mov
iret
retf
rol
inc
clc
popa
adc
add
popf
cmp
dec
inc
xchg
mov
loope
adc
daa
push
nop
or
cwde
cli
fsub
add
mov
sub
or
and
and
leave
enter
or
add
or
pop
mov
addr16
or
push
mov
push
sub
sub
cmp
inc
ss
cmp
lock
(bad)
movs
int
scas
bound
dec
add
mov
stos
sub
test
adc
test
cdq
icebp
add
sbb
mov
cmp
mov
(bad)
sub
sub
stos
fsubr
loop
push
jmp
nop
add
mov
in
jmp
xor
aad
mov
gs
cs
js
arpl
lea
sub
xchg
test
ret
lods
loope
(bad)
out
jbe
xor
push
jge
xor
inc
fldcw
sbb
jl
sbb
loop
int3
cmp
pop
xlat
popf
add
scas
fnstsw
cmp
clc
dec
imul
imul
sub
inc
outs
lods
scas
sbb
mov
xor
repnz
jae
mov
cmp
out
iret
test
or
pop
mov
(bad)
mov
fdiv
rol
mov
fistp
ret
or
mov
loope
push
lods
push
pop
fxch
ds
cmp
add
(bad)
xor
xchg
stos
ins
js
add
inc
out
jle
push
cwde
scas
cmps
pop
out
adc
(bad)
loop
fsub
mov
shl
sti
leave
xchg
std
iret
inc
add
mov
or
add
in
pop
aaa
jecxz
xchg
add
scas
cmp
in
stos
or
mul
daa
(bad)
jo
jge
push
push
test
jb
jnp
bswap
add
mov
cdq
sub
(bad)
popa
fild
popf
mul
test
add
call
xchg
or
inc
push
pop
xor
mov
shr
jp
pop
in
lea
mov
adc
outs
rep
adc
aas
out
cmp
xor
push
pop
pop
jo
(bad)
mov
and
dec
(bad)
jns
cmps
imul
or
daa
mov
mov
sub
mov
add
fnstenv
es
dec
inc
mov
test
pop
xchg
sbb
je
adc
scas
pop
cld
xor
aaa
xchg
mov
push
call
jecxz
cmp
pushf
pushf
fidiv
push
test
mov
adc
jge
mov
lods
inc
shl
jl
out
push
(bad)
lods
fs
jb
sbb
inc
cmp
mov
jne
xchg
mov
mov
int
out
js
scas
xor
scas
(bad)
lods
mov
sbb
fmul
fldenv
cmp
nop
cmp
and
xor
cli
sub
jae
mov
jo
jp
jge
std
cmps
scas
dec
pop
jnp
test
add
stc
push
mov
fs
pop
retf
push
fnstsw
fcom
pop
dec
inc
mov
lock
addr16
mov
lods
cmps
push
sbb
cli
add
xor
loop
pop
imul
bound
mov
push
xchg
and
clc
lods
gs
mov
xchg
jle
mov
(bad)
mov
sbb
xchg
mov
fcomp
out
repnz
dec
dec
call
or
das
in
js
jb
loop
xchg
xor
in
std
and
push
push
jnp
mov
jb
sub
jns
sar
xchg
jnp
push
or
stc
(bad)
std
ret
arpl
out
push
into
rcl
pushf
fadd
(bad)
xchg
sti
push
mov
add
push
cmc
xchg
arpl
(bad)
sahf
aad
pop
or
cld
pop
jno
arpl
mov
or
(bad)
sub
push
(bad)
jae
sub
jns
sar
adc
mov
into
push
cli
nop
scas
stc
xchg
mov
jmp
stos
out
push
xor
jg
add
mov
xchg
sub
pop
sbb
pop
fcmovne
sbb
int3
add
sbb
cmp
mov
jno
pop
xchg
ss
xlat
inc
push
fwait
pop
sbb
mov
xchg
movs
ss
mov
into
mov
outs
mov
mov
sub
fwait
inc
(bad)
jne
call
pop
jbe
call
adc
add
sets
or
cld
xchg
pop
xchg
mov
jbe
jge
and
fsubr
pushf
jl
into
sbb
jmp
data16
pusha
mov
lock
aad
loopne
xchg
and
mov
cmp
loope
adc
mov
mov
or
and
mov
inc
sub
xchg
sbb
in
ror
pusha
mov
inc
fisttp
mov
push
add
fs
hlt
icebp
mov
fnstenv
xor
shr
je
mov
jns
dec
mov
pop
cmp
or
rcl
in
repnz
xchg
(bad)
lock
add
push
mov
je
out
std
aam
add
call
pop
pop
pop
movs
shr
loope
cmp
cli
or
and
imul
pop
mov
jmp
daa
dec
ins
imul
icebp
or
lds
add
test
lea
mov
retf
pop
adc
jo
inc
gs
lods
retf
cmp
jb
push
std
dec
add
pop
pop
dec
push
inc
xchg
jecxz
test
sar
daa
stos
push
sti
cli
or
adc
arpl
mov
jl
push
shl
adc
cmp
cmc
push
mov
mov
pop
cmc
icebp
daa
(bad)
aaa
sub
xchg
pop
dec
jae
and
mov
ss
int
adc
cmp
fidiv
sbb
sar
cmp
cmp
xchg
out
dec
hlt
or
push
jmp
mov
test
mov
pop
xchg
pop
jmp
mov
dec
jo
rcr
and
fist
sbb
pop
sub
push
mov
daa
inc
pop
xor
repnz
sbb
mov
or
out
imul
std
inc
cmp
shl
(bad)
in
adc
sub
mov
ins
pop
jmp
mov
push
push
inc
fwait
cmp
int
xchg
movs
xor
aad
sub
test
jecxz
test
sbb
xor
push
sub
xor
repz
(bad)
icebp
cmp
in
pop
pop
sbb
or
cmp
fs
adc
mov
fldcw
loopne
in
scas
or
push
loope
int
dec
in
and
(bad)
aas
sti
out
sbb
(bad)
cmps
mov
arpl
retf
(bad)
add
jmp
imul
push
stos
int3
and
fcmovnb
or
dec
in
cwde
jle
inc
neg
or
or
xchg
repnz
xchg
(bad)
pop
lock
mov
sti
loope
jp
mov
je
mov
adc
xchg
adc
or
sub
ins
imul
pop
ror
pop
lds
call
cmp
mov
(bad)
and
mov
xor
int3
xchg
pop
(bad)
test
jge
dec
popa
mov
mov
inc
push
sbb
call
inc
inc
test
lods
cmp
xor
mov
movs
xor
aaa
jp
jno
mov
je
inc
adc
clc
or
es
imul
push
fild
out
mov
retf
sub
rcl
movs
pushf
pop
mov
inc
hlt
arpl
arpl
sbb
adc
loope
pop
into
in
nop
lahf
and
clc
outs
sub
(bad)
lock
cs
popf
std
retf
pop
not
ret
xchg
cmps
cli
sbb
and
adc
jle
pop
inc
mov
movs
neg
fist
inc
(bad)
je
inc
gs
push
std
mov
pop
jnp
xor
adc
(bad)
pusha
int3
je
scas
je
inc
lds
out
retf
pop
stc
xor
retf
pop
dec
mov
cmps
fcom
sub
mov
shl
hlt
mov
sub
adc
out
aaa
cbw
pop
add
ret
retf
dec
in
sti
sub
mov
enter
mov
int3
cmp
repnz
ret
shl
adc
jecxz
mov
sahf
xor
mov
ret
or
test
push
xor
adc
or
fwait
sub
inc
cmps
jle
pusha
and
int
mov
shr
or
or
lods
out
or
in
cdq
xchg
nop
mov
inc
xor
inc
scas
sar
mov
push
or
sub
cmc
xchg
add
aaa
cmps
pop
cmp
jp
mov
fdiv
test
sti
sar
mov
cwde
out
jl
sbb
add
sahf
jne
aad
pop
clc
sub
outs
dec
icebp
inc
std
mov
mov
not
jb
push
dec
popf
loop
mov
sbb
push
popa
pop
mov
ds
jbe
inc
(bad)
sub
shl
sbb
test
cli
add
aas
pop
xchg
lea
neg
jp
movd
mov
mov
cmp
jnp
ret
fcomp
dec
pop
out
pop
xor
mov
adc
daa
mov
pop
push
fcomp
nop
sbb
cmp
les
inc
mov
pop
punpckhwd
sbb
dec
inc
ret
mov
fs
xor
addr16
inc
movs
jnp
push
add
clc
inc
push
push
lods
push
aaa
ret
cmps
jmp
mov
adc
mov
cmp
mov
xchg
test
into
std
lock
es
inc
ja
add
(bad)
and
jecxz
push
jl
sub
pop
jge
jge
and
jmp
cld
fxch
cwde
out
mov
int3
call
out
sbb
xchg
data16
mov
(bad)
mov
test
add
frstor
cmps
mov
test
mov
mov
cmp
outs
jnp
xchg
clc
push
push
adc
inc
(bad)
or
xchg
and
inc
mov
sbb
sub
(bad)
ja
(bad)
repz
jns
out
es
imul
jecxz
out
pop
mov
pop
dec
call
call
and
int
lock
mov
mov
aaa
cmc
fcom
iret
imul
adc
out
test
retf
or
dec
addr16
xchg
sbb
mov
mov
lock
mov
retf
out
out
les
mov
stos
mov
mov
jl
and
out
daa
push
mov
imul
mov
sti
jnp
or
mov
dec
(bad)
in
push
sub
lods
pop
stc
cmps
cmp
dec
pop
sbb
or
sbb
cdq
aas
iret
and
xor
mov
mov
jno
stc
jmp
push
mov
pop
retf
mov
out
rcl
retf
mov
je
push
imul
mov
icebp
jno
es
jb
leave
dec
push
pop
mov
aam
or
cdq
not
mov
sbb
sbb
lahf
pushw
popa
xor
fcomp
mov
xchg
xchg
mov
sbb
clc
(bad)
(bad)
cwde
adc
inc
or
ins
call
ret
aaa
xchg
out
shl
push
xchg
loope
stos
xor
xor
popa
cmp
cmp
pop
sub
jo
fs
out
aad
xor
aad
outs
jg
sub
shr
xor
sti
xor
mov
sub
ret
xchg
xchg
push
and
fcom
mov
pop
outs
push
repz
sbb
mov
xchg
dec
mov
cmps
jecxz
fcmovbe
daa
xchg
and
out
sbb
retf
cs
sbb
mov
pop
sbb
fwait
xchg
adc
aaa
cmps
leave
jp
into
int
dec
xchg
mov
or
loopne
sti
xchg
dec
push
ror
jnp
cmp
jmp
mov
out
mov
(bad)
mov
xor
dec
sub
loopne
in
repnz
xchg
es
sbb
xor
adc
jns
push
or
xchg
xor
sahf
inc
pop
(bad)
jmp
or
repnz
popa
jle
scas
cmp
mov
sti
jne
div
fpatan
imul
cmp
adc
sti
aam
pusha
sub
mov
stc
retf
lahf
lods
push
pop
fwait
jge
mov
pop
push
mov
jl
mov
sub
cwde
push
mov
jmp
adc
in
(bad)
das
pop
mov
in
or
js
cmp
xor
ins
push
cmp
mov
(bad)
sti
add
sub
pop
data16
cmp
shl
enterw
inc
inc
test
mov
xchg
(bad)
call
inc
push
fisub
adc
ja
and
jns
xchg
sbb
(bad)
sub
and
test
pop
aam
inc
pop
inc
xor
in
(bad)
jmp
sbb
outs
stos
pop
into
inc
or
test
lods
add
fstp
jg
inc
scas
push
into
mov
fbld
jns
xchg
fs
jo
(bad)
js
xchg
sar
inc
shr
inc
cmps
jmp
mov
push
mov
xchg
lds
fcomip
dec
sar
adc
push
mov
dec
mov
dec
icebp
call
push
dec
in
pop
aad
retf
int3
xchg
outs
xor
push
inc
pop
and
rcl
movs
pop
fsub
(bad)
sub
ins
aas
scas
add
out
in
pusha
sar
push
(bad)
cli
test
jne
cmp
xor
inc
jp
fdiv
aas
rcr
adc
add
stos
pop
pop
cmc
cmp
mov
push
cmc
std
fistp
cmps
test
sub
mov
ins
fdivr
ficomp
cli
aaa
push
data16
movs
(bad)
into
mov
jb
mov
int
call
iret
mov
ficom
cs
aas
sub
sub
fwait
dec
ins
aad
out
ins
jmp
fcom
sti
je
sbb
jecxz
adc
mov
cmps
scas
push
push
xchg
retf
jecxz
cld
jno
mov
imul
mov
push
cdq
pop
pop
retf
data16
sahf
dec
popa
push
call
jbe
adc
mov
xor
jle
int
xchg
call
imul
fcmovbe
adc
inc
xchg
cli
outs
popa
test
mov
daa
cs
adc
xchg
ss
popa
pusha
adc
sbb
fistp
add
pop
add
jl
sub
adc
mov
mov
pop
push
cmp
ret
sub
add
repz
pop
push
cld
push
in
leave
pop
mov
sbb
data16
adc
inc
pusha
cmps
leave
sbb
sbb
sub
push
jp
or
inc
xor
push
add
aas
(bad)
(bad)
mov
mov
loop
shr
pop
stc
xor
add
jecxz
pop
popa
in
out
jle
cdq
ret
shr
int3
push
mov
jae
pop
out
shl
and
jb
push
iret
or
fistp
push
jge
mov
and
aaa
pop
jg
shl
push
or
dec
jno
daa
aas
sbb
(bad)
(bad)
fldenv
jne
inc
out
mov
mov
add
cs
push
xchg
or
fild
je
add
adc
jo
pusha
mov
cli
sahf
fild
cld
call
ror
aas
call
cmps
pop
mov
pop
(bad)
lock
fmul
push
mov
jno
or
test
sahf
cmp
adc
mov
out
int3
jmp
aas
test
popa
in
pushf
mov
mov
pop
std
repnz
test
cwde
shr
xchg
push
call
jbe
cs
(bad)
out
inc
add
ja
inc
or
mov
fdivr
dec
adc
aas
pop
mov
cmp
adc
pop
jns
mov
dec
das
sbb
xchg
out
jp
pop
or
in
jbe
xchg
mov
daa
cwde
rcl
loope
arpl
mov
aas
rcl
jp
and
outs
or
dec
inc
dec
adc
call
imul
inc
cmps
jmp
cmp
dec
sti
push
sar
(bad)
mov
pop
inc
push
sub
sbb
mov
jbe
ins
mov
xchg
pop
push
dec
dec
mov
jl
push
xchg
and
(bad)
sbb
mov
sub
mov
mov
stos
pop
pop
pop
fs
fdivr
stc
or
shr
mov
add
ss
mov
push
cmps
sub
(bad)
pop
mov
and
fld
xchg
in
xlat
mov
lahf
push
lds
mov
enter
mov
not
jmp
mov
popf
rcr
inc
xchg
ins
jmp
test
mov
adc
pop
in
mov
xchg
ds
pop
gs
aam
mov
add
cmp
and
xchg
ror
jge
ss
jno
and
xchg
wrmsr
test
cmps
inc
je
mov
pushf
bound
data16
popa
jbe
inc
mov
mov
lods
add
sub
sub
sbb
adc
jmp
pop
xchg
ss
call
not
add
jne
ficom
inc
bound
data16
jb
std
scas
stos
sub
mov
cmps
sbb
icebp
aaa
dec
jne
lods
ror
sub
inc
jno
ja
fstp
inc
pop
ins
jmp
mov
mov
mov
mov
push
les
adc
or
ret
pcmpeqd
mov
lods
add
ja
or
ror
sub
push
jbe
xor
pop
jns
cmp
rcr
fbstp
xor
push
les
test
iret
ret
cs
call
sub
daa
add
cmps
lock
cwde
xor
cmps
xchg
test
mov
push
dec
push
in
ret
xor
in
pop
leave
jno
stos
dec
xor
mov
lods
xor
not
push
sub
sub
add
mov
fcmovb
fstp
sbb
dec
data16
shr
pusha
or
(bad)
xor
mov
sub
adc
jp
in
loopne
sub
imul
pop
ins
test
movs
inc
mov
jge
jecxz
xchg
fdivr
mov
mov
pop
leave
repnz
bnd
mov
add
daa
jmp
(bad)
sbb
or
in
ds
push
enter
cwde
cmc
setne
xor
je
push
fmul
ror
ins
les
ss
mov
test
bound
dec
sar
test
jbe
and
jecxz
mov
mov
pusha
aas
adc
test
pop
jns
add
pop
cwde
push
push
mov
fwait
ds
adc
repz
cmp
pop
shl
out
sub
fs
cli
mov
or
pop
icebp
in
mov
xchg
(bad)
addr16
add
lea
mov
cdq
invd
ret
sbb
out
sub
push
mov
adc
shl
test
test
jmp
mov
mov
xor
xchg
sbb
dec
push
xor
fcmovu
pop
fs
frstor
jge
hlt
or
aam
les
test
jo
mov
aaa
movs
test
jmp
xchg
lea
push
fcomp
pop
mov
lock
adc
cld
cvttps2pi
cli
(bad)
jg
push
jmp
xchg
and
xor
or
ret
pop
inc
stos
rcl
cmp
shl
lahf
repz
push
mov
push
mov
sub
gs
sub
pop
in
jne
jnp
jmp
loopne
pop
sub
lock
lds
and
adc
mov
sub
pop
push
lea
mov
lods
cmc
sbb
dec
jmp
mov
(bad)
call
sbb
push
adc
sub
add
cmp
aam
loop
test
jmp
repnz
daa
hlt
scas
popf
jmp
jb
dec
mov
jae
jmp
idiv
sti
pushf
xor
mov
xor
mov
xchg
out
outs
(bad)
push
stos
call
outs
repnz
xchg
jns
cmp
or
hlt
inc
mov
adc
sbb
loop
stc
clc
push
bound
in
mov
mov
frstor
adc
push
in
inc
sti
add
mov
jmp
or
lahf
pop
mov
mov
jb
dec
retf
and
les
shl
int3
push
stos
sahf
pop
or
rcr
or
cmp
fwait
push
xor
push
scas
sub
adc
mov
pop
enter
arpl
add
addr16
jle
adc
stos
mov
mov
movs
mov
scas
adc
out
mov
xchg
dec
hlt
or
(bad)
and
add
daa
adc
stos
add
vpsllq
retf
loopne
ret
jo
mov
xchg
adc
add
mov
mov
inc
mov
mov
push
push
pop
xor
es
jge
add
fisub
mul
xchg
sub
dec
mov
push
xor
xchg
cld
sbb
xchg
ss
or
imul
xchg
iret
test
adc
xchg
pusha
outs
repz
add
pop
jb
shr
inc
ins
test
test
or
jp
xchg
stos
cmp
test
aam
sbb
retf
test
dec
xor
movs
dec
int
sub
fs
cmp
enter
pop
push
mov
mov
in
push
je
sbb
rol
fwait
dec
lea
nop
pop
add
push
mov
fdiv
in
mov
shl
push
cmp
inc
sub
xor
scas
adc
cwde
add
cwde
and
xchg
push
fcmovnu
popf
(bad)
and
repnz
sar
stc
gs
sbb
mov
adc
mov
xchg
retf
in
(bad)
repnz
cdq
test
xchg
add
inc
lahf
test
mov
dec
jge
rol
idiv
add
lea
jl
loope
pop
mov
xchg
ret
imul
or
(bad)
mov
into
push
sub
scas
call
dec
xchg
pop
mov
bound
jle
icebp
ins
and
xor
or
dec
(bad)
int3
retf
xchg
movs
nop
pop
add
je
clc
mov
call
data16
push
stos
pop
dec
jp
adc
inc
lahf
jle
mov
xlat
pop
dec
scas
mov
fsubr
pushf
mov
xor
in
mov
cmp
pop
cdq
stos
nop
add
nop
gs
ss
lds
mov
jecxz
div
ret
(bad)
mov
ret
xchg
test
jno
jle
sub
sub
imul
ficomp
test
and
sbb
daa
outs
les
test
shr
push
in
sbb
mov
fidivr
or
cmps
cmp
sub
enter
cwde
xchg
(bad)
out
clc
and
sahf
cmp
add
cmp
call
mov
mov
movs
dec
cmp
jno
mov
jecxz
movs
into
mov
lods
in
pop
out
inc
pop
pop
mov
push
js
pop
enter
or
pushf
pushf
xor
arpl
and
add
adc
addr16
xchg
outs
jb
scas
jne
sbb
in
cmp
inc
lock
rol
add
lahf
dec
mov
jp
retf
or
in
mov
jbe
pop
les
add
movs
jo
or
sub
and
add
dec
imul
mov
mov
and
jl
pop
ds
retf
pop
inc
pop
pop
cld
cmp
arpl
pop
sbb
pop
scas
dec
movs
out
dec
jo
push
sti
mov
clc
sbb
enter
(bad)
adc
and
mov
mov
iret
cmp
stc
push
adc
ins
in
and
not
sub
push
xchg
and
ja
sbb
fdiv
int
movzx
out
test
xchg
inc
xor
mov
add
dec
xchg
adc
daa
xchg
outs
xor
fcomp
les
jo
inc
sbb
sub
lock
jne
inc
aaa
retf
icebp
fcmovnb
cli
in
or
adc
push
cmc
sub
pop
xor
and
in
xor
mov
scas
(bad)
clc
mov
sbb
icebp
outs
cmp
mov
push
add
xor
jp
(bad)
mov
sub
sub
xchg
jo
ins
pushaw
pop
ins
mov
jbe
xchg
(bad)
sub
pop
gs
xor
es
sbb
mov
jb
cmp
dec
inc
sbb
pop
jae
fnstcw
mov
fs
jle
cmp
cmp
or
pop
push
inc
inc
test
add
pop
push
push
jmp
or
fidiv
sbb
hlt
shl
and
popa
fmul
aaa
pop
add
adc
mov
ins
inc
out
sub
fistp
(bad)
aam
ret
inc
adc
pop
retf
movs
sar
and
xchg
js
gs
ins
ret
fldenv
ss
or
mov
mov
xor
push
adc
sub
dec
(bad)
push
pusha
ret
shl
mov
jmp
jg
inc
push
add
sub
and
sahf
and
sbb
ret
pop
and
or
or
fbld
mov
mov
ss
daa
sahf
or
xor
idiv
fisub
cmp
loope
or
stc
js
dec
jg
sti
fsubr
stos
fistp
dec
mov
cmp
push
xchg
lock
scas
fisubr
fsub
(bad)
pop
rcr
jnp
ror
push
add
push
loopne
shl
inc
cwde
or
jno
(bad)
aad
aaa
lds
push
jp
adc
and
nop
fdiv
push
cmp
call
jns
repz
imul
pop
fbstp
shl
push
jl
loopne
rcr
leave
mov
xor
jb
cmp
xor
aam
bound
call
push
pop
aad
mov
lds
sbb
jge
dec
int
mov
shl
push
jo
mov
(bad)
jecxz
out
or
lahf
inc
sub
jno
jae
pop
cmps
jae
fcmove
mov
adc
sahf
ror
aaa
test
pop
sub
je
sub
movs
(bad)
clc
movs
push
sbb
sub
cli
add
pop
push
or
movs
stos
dec
push
sti
jle
shl
mov
movs
test
or
adc
(bad)
sub
mov
ins
outs
fnsave
fist
cmps
sti
icebp
shl
sbb
aaa
fwait
shr
loope
outs
dec
mov
sbb
or
push
mov
stos
sub
push
xchg
lahf
push
ss
pop
sub
pop
pop
xor
cmp
mov
adc
adc
push
pop
ret
loopne
mov
sbb
sbb
sbb
cmp
mov
idiv
jp
jl
add
inc
cmp
sbb
(bad)
mul
mov
mov
scas
xor
rcl
mov
xor
ret
scas
cs
jae
mov
or
and
ins
stc
scas
call
dec
jp
dec
mov
je
pop
into
or
int
cmp
adc
or
sar
lahf
adc
out
mov
sar
ffree
int3
pop
repnz
push
out
mov
inc
push
jp
or
jne
jl
int3
sahf
fsubr
in
test
xchg
lea
scas
fbld
adc
inc
cli
sar
adc
sub
sbb
add
(bad)
repnz
and
fwait
dec
scas
dec
push
sbb
add
and
fst
dec
stos
jl
jne
(bad)
std
and
std
add
and
aas
jecxz
push
cmp
es
imul
rcr
inc
js
ins
mov
and
in
jmp
out
(bad)
mov
arpl
mov
push
daa
jbe
std
cdq
daa
jg
push
pop
xchg
dec
(bad)
fdivr
loope
mov
enter
xchg
cmc
push
pop
retf
ds
inc
cmp
retf
mov
jns
loop
mov
es
sub
imul
push
xor
imul
sub
cmp
cmp
std
xchg
jmp
sti
lods
xor
lods
dec
int3
cwde
and
in
xor
inc
in
icebp
out
xchg
jno
popa
mov
test
arpl
mov
aaa
ja
and
in
push
adc
rol
xchg
gs
xor
call
mov
xchg
jae
adc
mov
retf
cmp
fwait
mov
in
push
lahf
pop
fstp
fidivr
lds
pop
sbb
je
out
and
mov
adc
dec
adc
outs
jmp
dec
push
jnp
or
mov
sub
or
mov
sub
dec
fucomip
pop
inc
stc
ret
loope
xchg
movs
stc
outs
cs
ss
js
or
lds
sub
xor
add
gs
mov
cmp
xor
test
into
outs
pop
mov
in
ret
pusha
xchg
ss
lds
xlat
ja
rcr
cmp
sub
(bad)
es
not
mov
or
fcos
mov
add
(bad)
in
stos
mov
sbb
adc
in
sbb
sbb
push
cs
out
inc
out
sar
out
into
jp
lock
int3
aaa
push
ficom
cmp
inc
aaa
and
fwait
out
ret
ins
jnp
pop
xor
xor
test
out
xor
xchg
sub
leave
fistp
sub
add
lahf
mov
mov
cmp
dec
xor
lds
repz
jmp
add
mov
cmp
cs
jge
mov
or
stos
sub
jg
jae
or
imul
pop
cmp
xor
sub
inc
daa
and
mov
or
rcl
jle
xchg
test
or
imul
adc
ins
sbb
mov
mov
jns
jg
push
dec
xor
mov
leave
hlt
jle
fld
adc
and
stc
cmp
mov
jmp
or
push
mov
pop
js
ja
in
push
out
xchg
or
cmp
mov
sub
sbb
dec
xchg
dec
push
clc
inc
sbb
inc
lea
loope
pop
es
push
xchg
xor
push
xchg
rol
push
aad
jo
mov
and
and
je
add
scas
inc
xlat
dec
retf
(bad)
dec
ins
fld
call
aaa
in
lock
inc
fsub
sub
nop
ror
inc
adc
retf
add
loope
jae
adc
adc
sub
ss
(bad)
call
ja
repnz
ins
inc
jo
jp
fadd
add
pop
xchg
jmp
xor
jno
dec
mov
mov
mov
push
inc
imul
push
mov
int
push
fsubr
mov
out
push
sbb
lods
in
test
stos
test
test
push
xor
adc
xchg
call
(bad)
iret
jle
movs
xor
ret
ret
cdq
adc
in
add
ret
dec
pop
in
jmp
fmul
(bad)
cmp
or
add
xchg
jb
popa
sbb
int
push
fwait
jp
repz
sbb
rcl
xchg
mov
mov
cwde
mov
imul
jg
cmp
add
sub
lds
das
jbe
(bad)
mov
adc
add
out
rol
pop
mov
int
out
dec
ja
pop
xor
inc
shl
xchg
pop
add
popf
mov
mov
cmp
arpl
les
ins
aam
mov
xor
cmp
push
call
pxor
addr16
mov
cmp
movs
sbb
xchg
fmul
ins
pusha
cmc
das
mov
je
jecxz
xchg
dec
fcom
xchg
mov
idiv
push
mov
out
push
push
jno
movs
hlt
pop
or
nop
inc
pop
xchg
sar
in
and
std
xchg
push
mov
xor
mov
sub
in
push
ja
scas
pop
push
cmp
jns
cdq
mov
(bad)
loop
dec
cmps
sub
shr
pop
and
jne
int
inc
dec
in
sbb
pusha
popa
int3
adc
cdq
cld
test
push
fucomip
push
cmp
mov
cmp
out
movs
pop
adc
xor
out
jl
fisubr
jnp
add
lods
xor
inc
inc
je
mov
leave
mov
inc
adc
mov
push
popf
push
mov
pop
pop
xor
data16
ins
loope
dec
pop
push
fsubr
lahf
ins
pusha
scas
test
je
sar
in
jne
jne
leave
mov
(bad)
or
or
aaa
test
mov
sar
imul
inc
mov
enter
in
repnz
mov
int
lods
into
mov
xchg
xor
scas
inc
push
lods
bound
sti
repnz
sbb
and
mov
sbb
cwde
movs
sub
xor
std
std
xor
fwait
jae
shl
jmp
and
inc
xor
cli
stos
dec
sbb
xor
inc
xchg
ds
stos
ins
fwait
dec
adc
rol
lock
jbe
fidivr
pop
dec
adc
mov
mov
pusha
retf
retf
push
popa
push
jbe
test
(bad)
mov
xchg
mov
addr16
sub
loop
push
ret
jmp
inc
out
xchg
or
bswap
pushf
movs
adc
stc
dec
xor
dec
jbe
fmul
xor
jb
das
push
lods
dec
and
push
icebp
xlat
and
jecxz
shl
rol
push
jmp
in
or
inc
mov
jns
mov
push
mov
aad
mov
mov
ror
pusha
sbb
jmp
and
imul
mov
jo
jno
ss
imul
dec
or
mov
xor
int
add
loope
push
das
and
test
push
dec
jmp
and
stos
push
adc
and
mov
cwde
add
add
cmp
mov
add
cdq
inc
xor
or
cmps
xchg
not
adc
(bad)
call
adc
push
xlat
inc
fild
mov
adc
jnp
(bad)
daa
jno
mov
and
adc
shr
fnsave
stc
mov
aas
lea
div
idiv
mov
inc
mov
and
xchg
pop
xchg
das
rcr
mov
push
cli
cmp
xor
imul
icebp
or
xor
ror
add
mov
mov
push
and
fcomp
jns
mov
push
nop
jp
scas
and
add
lods
jmp
dec
loop
imul
fist
call
cmp
scas
jmp
jb
mov
aam
lahf
ins
adc
je
arpl
fwait
cmp
call
pop
xor
daa
sbb
ret
cmp
mov
cmp
push
jge
sar
leave
cmp
test
jno
add
mov
and
repz
ja
xor
or
and
out
and
aam
mov
jg
std
sub
xchg
or
data16
jb
stc
add
ds
dec
push
fcom
mov
and
cs
mov
es
pop
clc
cmps
sbb
sbb
xor
mov
je
out
scas
ss
add
xchg
fbld
xchg
out
inc
push
(bad)
mov
ss
dec
xor
xchg
pop
test
jo
neg
xor
xor
jp
jns
lea
test
arpl
aas
popf
outs
call
ret
dec
add
imul
rcr
test
shl
mov
jl
movs
pop
gs
cmp
and
bound
cmps
in
push
dec
in
jecxz
jnp
mov
loope
fwait
jmp
mov
les
fcom
pop
adc
pop
push
push
cdq
xchg
fst
mov
repz
pop
push
stc
or
xchg
inc
fucomip
dec
xchg
xchg
ins
loop
out
push
retf
or
mov
xchg
imul
(bad)
xor
pop
rol
iret
pop
lods
retf
adc
cmps
(bad)
dec
xchg
add
popf
idiv
jb
dec
ficom
cmc
and
and
enter
(bad)
out
adc
mov
shl
add
sbb
jae
pop
mov
xchg
jmp
loopne
dec
xchg
ins
div
jmp
jns
ins
add
push
in
inc
mov
mov
lock
sub
push
jl
cmp
mov
push
and
xchg
push
pusha
movs
pop
(bad)
fdiv
repz
pop
pop
aas
clc
pop
sbb
xchg
movs
scas
sbb
fadd
mov
mov
pop
jecxz
push
rol
sbb
and
mov
push
fistp
add
out
jae
cld
cmps
sub
(bad)
call
xchg
mov
outs
pop
mov
or
jo
hlt
adc
or
daa
test
sub
retf
mov
xchg
push
sbb
hlt
pop
dec
in
mov
push
ins
inc
movs
xchg
fsub
adc
add
ja
mov
cdq
call
sbb
mov
mov
pop
pushf
xlat
pusha
sar
adc
mov
jne
xchg
popa
inc
daa
mov
jp
adc
mov
sbb
xchg
popa
cmp
mov
dec
push
push
xchg
sub
xchg
mov
mov
jg
xchg
(bad)
xor
mov
int3
fmul
adc
add
add
push
dec
jo
jae
ret
jge
sub
icebp
in
les
out
stos
retf
mov
and
add
test
mov
pop
sbb
ret
popf
sub
mov
add
rcr
les
add
rol
or
add
std
push
aaa
jnp
mov
fistp
add
daa
in
mov
jo
pop
push
nop
sbb
mov
ins
in
mov
pop
std
and
xchg
test
sub
ins
rcr
jecxz
xchg
cmp
aad
mov
sbb
dec
mov
mov
and
mov
xchg
ret
sub
xchg
cdq
xchg
cmp
dec
jno
ins
fs
inc
jmp
push
call
mov
cmc
out
ins
int3
jg
sbb
pop
mov
or
pushf
cmp
test
in
inc
retf
(bad)
push
jnp
push
popa
xor
fst
movs
mov
(bad)
in
(bad)
sahf
in
loop
mov
outs
shl
mov
dec
xor
jne
dec
xor
rol
inc
sub
pop
jle
jg
nop
ror
sbb
xlat
xchg
into
sbb
fnsave
add
jp
das
sub
mov
push
enter
ins
jmp
xchg
jmp
(bad)
imul
push
js
(bad)
loope
inc
icebp
cs
cdq
xchg
mov
stc
fs
push
pop
lea
push
xor
out
sahf
inc
repz
jle
or
mov
bnd
adc
pop
push
xchg
and
dec
dec
add
add
icebp
loopne
mov
xor
pop
test
iret
rol
and
jae
xor
lahf
xchg
out
shr
jnp
arpl
fsubr
add
scas
sub
imul
xchg
mov
es
out
pop
xor
fist
cmps
jmp
dec
push
mov
xchg
retf
into
pusha
push
and
add
xchg
les
xchg
or
adc
pusha
mov
xchg
movs
fs
mov
xor
daa
repnz
mov
xor
lock
into
ret
pop
call
fiadd
sbb
inc
stos
popf
in
fnstcw
aad
lahf
jns
lock
lock
push
and
repz
dec
rol
scas
push
ficom
nop
or
sub
cmp
or
and
mov
repnz
jl
shr
and
or
cli
pushf
fwait
lock
test
add
or
int3
inc
data16
mov
popf
cli
or
sbb
jns
loop
sahf
mov
imul
cli
xchg
shl
adc
sub
cmp
ja
ret
daa
adc
mov
mov
imul
dec
or
movs
stos
pop
outs
jmp
loop
in
add
jle
pop
sbb
or
push
das
dec
retf
int3
js
xor
dec
leave
(bad)
mov
xchg
push
push
fst
std
xor
jg
sahf
inc
std
add
jno
repz
imul
dec
jg
mov
push
out
sub
ds
in
mov
mov
(bad)
repnz
xchg
and
adc
mov
mov
mov
sbb
xchg
mov
in
and
cmps
cmp
add
inc
shl
lds
addr16
gs
mov
mov
nop
loopne
retf
jmp
sbb
adc
cmp
div
push
aaa
adc
retf
lea
bound
mov
sbb
add
mov
mov
imul
leave
(bad)
jge
je
sub
std
out
xchg
and
imul
inc
inc
js
jbe
dec
mov
mov
gs
xchg
movs
sti
sbb
ins
addr16
pushf
sub
imul
fwait
out
scas
cwde
aaa
cmp
cmp
lahf
xchg
adc
xchg
mov
je
into
adc
add
scas
imul
into
loopne
pop
push
dec
sti
imul
lea
inc
add
cmp
mov
push
jo
mov
jnp
movs
dec
cmp
push
je
push
js
push
(bad)
fdivr
push
and
pop
dec
adc
mov
lods
mov
fwait
addr16
icebp
mov
loop
jmp
mov
int
hlt
mov
mov
adc
and
jne
imul
pop
jp
sub
call
movs
and
movs
jo
vmaxss
cmp
sub
lahf
sub
jp
dec
add
int3
adc
mov
retf
push
cmp
dec
cdq
shr
jno
movs
pop
adc
test
movs
jmp
(bad)
push
not
mov
jl
or
leave
and
cs
cmp
jb
fdiv
icebp
adc
sub
jbe
fdivr
and
cs
ja
xchg
outs
icebp
cmps
xchg
hlt
movs
cmc
push
dec
pop
mov
scas
dec
cmp
sbb
and
sbb
cmp
sub
inc
and
jecxz
ss
jns
dec
in
jns
fdiv
retf
sub
sti
outs
fadd
sti
out
sub
lock
retf
pop
rol
sbb
scas
dec
sbb
and
cmpxchg
add
lahf
mov
xor
sbb
fisttp
scas
call
xchg
mov
jno
push
bound
lods
pop
arpl
in
mov
pop
(bad)
cld
aad
pop
sti
nop
xchg
xchg
xor
retf
mov
cld
push
sti
lock
and
imul
adc
mov
cmc
adc
mov
or
aad
cmp
rep
sbb
sub
mov
sbb
cmps
ins
movnti
loope
jg
mov
adc
add
sbb
mov
dec
out
stc
dec
mov
cmps
push
pop
mov
fcom
div
dec
jb
or
adc
test
pop
jbe
cmps
mov
push
out
int
xchg
std
adc
fimul
jb
call
fidiv
or
push
pop
xchg
cmps
push
or
pop
push
sub
jl
fsub
cmc
(bad)
shl
stos
std
or
mov
mov
adc
inc
iret
push
scas
and
push
xor
es
repnz
jmp
pop
add
adc
int
mov
out
int3
addr16
imul
(bad)
(bad)
cdq
mov
lods
aaa
fwait
ins
movs
pop
fldenv
xchg
gs
jg
sbb
enter
mov
or
fiadd
mov
in
movs
pop
sbb
cmp
jns
ret
mov
mov
mov
(bad)
and
sti
popa
dec
push
int
jle
rcr
jmp
movs
sahf
pop
jle
imul
ret
(bad)
out
sti
sbb
jae
add
call
mov
ficom
and
outs
dec
dec
adc
repz
sub
jnp
mov
loope
in
add
lods
mov
int
adc
pop
cmp
push
in
sub
mov
pop
add
inc
stos
mov
(bad)
xchg
jbe
into
outs
cmc
outs
xchg
sbb
sub
jmp
js
mov
enter
xchg
jp
dec
cmp
lea
push
cmp
push
popf
loope
dec
pop
clc
xlat
pop
jp
sbb
std
xor
imul
(bad)
xor
lea
dec
shl
cmp
inc
test
mov
push
sub
sbb
add
jmp
jp
imul
xor
dec
add
ja
or
and
mov
and
sbb
jne
lahf
cmp
jae
pop
fwait
mov
add
int3
test
cmps
and
dec
dec
pop
cld
pop
xchg
dec
adc
cmps
in
pop
(bad)
outs
xor
int3
imul
out
stc
sbb
sub
sbb
xor
dec
mov
and
inc
adc
xor
shr
xchg
inc
jmp
lods
(bad)
adc
fucomp
pushf
daa
fcmovnu
jl
push
lds
sub
popf
imul
in
sar
jbe
mov
int3
pop
jmp
in
shl
pop
jmp
xchg
bound
jae
fisttp
pusha
jl
xlat
mov
movs
mov
adc
ret
mov
inc
pop
and
ja
jno
ret
and
scas
lods
loope
mov
push
scas
pop
clc
cmp
int3
pop
mov
lods
jle
or
icebp
pop
mov
mov
shl
pop
or
std
cmp
push
cli
add
ror
dec
loop
adc
nop
fstp
cmp
sub
pop
(bad)
lea
icebp
out
mov
adc
mov
sub
call
xchg
idiv
rcr
rcr
mov
das
push
sub
add
int3
out
fwait
stc
mov
push
sbb
mov
mov
xchg
aad
push
xchg
test
fdiv
(bad)
leave
jle
das
pop
sub
sbb
call
loope
rcr
fist
sahf
xchg
mov
pop
std
rcr
inc
imul
(bad)
inc
sbb
xchg
loop
scas
mov
(bad)
ja
sbb
(bad)
pop
pusha
jecxz
pop
iret
outs
xchg
pushf
bound
pusha
push
jl
mov
in
cdq
(bad)
ds
lock
lahf
pop
shl
test
mov
sar
outs
adc
test
mov
xor
enter
sub
div
mov
in
fldz
add
dec
sub
inc
lods
add
clc
cmp
sbb
int
das
inc
adc
mov
add
xlat
out
fcmovnb
js
adc
add
data16
and
aad
dec
and
mov
out
inc
dec
pop
sti
adc
mov
and
mov
pop
pop
or
and
mov
add
imul
cmp
sbb
loope
push
popf
das
or
xor
add
inc
or
repnz
retf
xchg
ret
sbb
or
daa
int3
cmp
pop
rol
pop
pusha
(bad)
ds
ss
mov
jae
nop
adc
(bad)
jns
out
gs
and
pop
sahf
pop
fld
mov
retf
dec
(bad)
pop
sub
mov
inc
xchg
(bad)
xchg
jge
mov
fwait
or
adc
shl
lods
cdq
pop
retf
jecxz
fild
xchg
ins
daa
ficom
sbb
xor
xchg
add
stos
retf
mov
adc
(bad)
stos
jo
push
fidiv
dec
mov
xchg
ins
xor
in
les
pop
sti
cmp
jmp
daa
mov
xchg
lods
ds
sbb
mov
cwde
pop
dec
test
mov
inc
cmps
jns
into
jp
dec
movs
sbb
int3
enter
jae
test
in
ins
add
push
data16
mov
sbb
cld
fwait
mov
ins
adc
cmp
pop
jae
lea
jmp
pop
push
push
and
aad
mov
mov
test
xlat
fadd
arpl
mov
addr16
inc
sub
dec
mov
adc
sar
add
inc
lock
retf
movs
push
add
pop
sub
cmp
or
gs
pop
icebp
jnp
(bad)
jg
push
(bad)
or
ins
retf
pop
mov
movs
pop
in
mov
dec
pop
pop
adc
pusha
and
ins
sub
xchg
fldcw
mov
bound
pop
push
dec
sbb
xor
lds
push
rol
sub
arpl
ret
jmp
(bad)
lods
in
mov
lea
loope
xor
(bad)
scas
aam
sbb
fcomp
push
jb
je
lods
pop
lea
mov
les
nop
cmp
mov
popa
sub
or
push
rcr
ds
xchg
das
sub
inc
cmps
pop
inc
inc
out
jmp
xchg
add
outs
ficomp
aaa
dec
add
adc
inc
cwde
add
lods
mov
fild
mov
sub
sbb
xchg
scas
iret
xor
mov
push
cmp
push
test
loop
mov
or
mov
repnz
jb
pop
sbb
lods
fnsave
stos
and
dec
leave
dec
xor
cdq
add
pop
jecxz
mov
cmp
loope
jne
mov
ror
lds
push
pop
out
out
ja
jno
aaa
xor
inc
mul
xchg
call
das
stos
idiv
mov
inc
sub
adc
adc
and
mov
shl
retf
movs
mov
jge
xchg
push
push
jb
add
mov
pop
cmp
xor
(bad)
cmp
test
xchg
repz
sub
mov
cmp
in
sbb
xchg
aaa
loope
in
and
cmp
add
sar
xor
mov
and
or
dec
pop
xchg
jp
mov
pop
outs
pop
mov
jg
pop
hlt
scas
dec
mov
push
xor
lods
jne
mov
xchg
and
cs
test
bound
xchg
retf
leave
neg
aas
pop
ja
test
aad
imul
dec
mov
or
dec
adc
in
mov
clc
push
xor
xchg
sub
leave
or
loopne
(bad)
mov
clc
push
push
jne
xor
pop
cmp
sti
ins
cli
xchg
xchg
repz
xor
dec
cmc
add
outs
cmp
cmp
imul
enter
add
cmp
jmp
xor
pop
dec
jns
mov
daa
mov
push
mov
pop
test
cmp
and
out
or
call
aaa
adc
in
imul
leave
xchg
push
stos
stos
adc
sub
ret
sub
mov
aaa
das
push
(bad)
js
and
jbe
jle
mov
inc
mov
push
or
push
in
dec
push
les
retf
push
mov
sar
mov
inc
sub
add
lea
and
repz
push
mov
adc
in
ficomp
mov
mov
dec
pop
pop
add
test
mov
mov
js
and
aad
outs
dec
push
pop
xor
push
and
adc
cmp
adc
enter
cmps
mov
pop
jmp
dec
addr16
test
rol
inc
jmp
icebp
adc
aad
push
push
test
jmp
sub
pop
and
ins
fcomi
in
call
sbb
mov
fcmovnbe
dec
data16
xor
gs
clc
in
and
dec
pop
popf
movs
xchg
movs
in
mov
cld
cmps
mov
or
pop
xor
loop
(bad)
inc
lods
pop
loop
sub
repnz
rcl
test
sub
xchg
daa
cmp
bound
xlat
xchg
inc
and
scas
test
mov
lds
pop
xlat
pop
sti
sbb
or
sahf
and
dec
adc
pusha
cmp
imul
leavew
fs
mov
(bad)
mov
scas
mov
outs
push
adc
fs
jne
adc
pop
pop
pop
aas
shr
(bad)
mov
loop
retf
div
popa
cli
repnz
shr
outs
mov
and
sbb
cmp
sar
sti
add
mov
daa
pop
arpl
aas
dec
xlat
and
repnz
out
push
retf
fwait
adc
pop
mov
mov
retf
jbe
rol
sub
call
stos
pop
stos
test
ins
fs
dec
sub
push
loop
pop
(bad)
pop
sub
sub
add
sub
fisubr
or
cmps
imul
stos
sub
jo
mov
movs
in
fneni(8087
sub
ret
loopne
enter
xchg
xlat
mov
popf
mov
lea
frstor
sbb
movs
mov
sbb
fist
outs
les
inc
test
mov
jbe
mov
jne
addr16
mov
push
xchg
jle
fistp
nop
xor
dec
xchg
daa
cmp
push
loopne
fld
xchg
mov
lds
push
fistp
lahf
xor
sub
iret
push
loop
pop
loope
arpl
lock
out
punpckhwd
sub
popa
loope
out
in
ror
mov
pop
adc
xchg
(bad)
inc
ds
repz
push
and
xchg
bswap
test
hlt
scas
js
dec
mov
repz
dec
shl
or
xor
and
sub
jg
xchg
inc
and
mov
add
(bad)
pop
mov
mov
xor
mov
jl
pop
clc
jmp
out
add
in
mov
shl
adc
sbb
xchg
and
adc
inc
mov
adc
push
cmc
pop
and
test
sbb
int
jmp
inc
loope
cli
stos
mov
out
xor
mov
scas
inc
mov
push
fcomp
pxor
out
sbb
mov
add
in
(bad)
jne
xchg
mov
call
mov
std
cmp
scas
scas
or
xor
adc
cdq
jnp
shr
scas
hlt
lods
sub
mov
out
sbb
js
lahf
mov
hlt
out
sub
jnp
push
pcmpgtd
enter
fbstp
and
je
or
or
movs
mov
and
lds
cmps
fdivr
stos
fnsave
dec
imul
jecxz
push
clc
mov
pop
xlat
cwde
and
jp
call
gs
in
push
ret
icebp
fdiv
mov
and
es
in
test
leave
inc
xchg
dec
ins
(bad)
inc
scas
xchg
xor
stc
cli
adc
sti
jmp
push
(bad)
call
cmp
pop
sbb
pop
pop
(bad)
inc
xor
ins
inc
and
repnz
mov
loope
stc
mov
int3
pop
push
jmp
into
mov
lock
iret
mov
ss
dec
or
mov
mov
dec
cwde
push
dec
and
push
dec
daa
stc
shl
push
test
int
sbb
rol
ud2
inc
arpl
neg
(bad)
loopne
call
cmp
cmp
and
dec
mov
fnstenv
test
jl
sub
cmp
fs
ins
xor
dec
push
mov
jmp
mov
cmp
retf
das
adc
mov
pop
cs
add
jmp
fiadd
xchg
lock
test
test
push
or
call
cmp
in
and
adc
or
jecxz
clc
add
push
sbb
pop
mov
mov
int3
push
dec
mov
jns
mov
aam
fisttp
inc
mov
lods
xor
push
mov
or
or
mov
dec
sbb
xor
mov
popf
push
addr16
mov
inc
mov
push
dec
into
mov
lds
add
(bad)
fdiv
sbb
mov
in
jmp
push
jp
mov
data16
adc
mov
leave
sbb
test
mov
dec
dec
push
mov
mov
(bad)
or
xlat
xor
lahf
sub
inc
push
xor
xor
add
mov
mov
sbb
xchg
cmp
cmc
ja
jle
jo
add
cmp
mov
add
cs
sbb
call
push
add
sbb
mov
fldl2e
sbb
sbb
mov
jae
xchg
and
push
cmps
(bad)
cmp
popf
or
sbb
mov
daa
idiv
dec
call
call
add
mov
fwait
jnp
(bad)
out
push
shl
retf
jmp
outs
pop
adc
dec
inc
mov
inc
test
neg
out
mov
cmc
in
ss
xchg
dec
lods
sub
lods
jo
adc
call
jmp
loopne
push
pop
popa
add
and
stos
dec
xor
addr16
fild
push
adc
shr
sub
(bad)
mov
jmp
loope
popa
scas
lods
sub
jge
call
cmp
lds
adc
xchg
adc
stos
xor
hlt
loopne
adc
ror
in
inc
cli
inc
jns
sar
scas
stos
fcomp
movs
arpl
sub
imul
int3
ja
mov
out
add
sub
cmp
push
in
loopne
aas
pusha
movs
xor
hlt
push
dec
sbb
lock
lds
out
(bad)
jne
jbe
cmp
arpl
inc
jae
add
lds
sbb
xchg
hlt
jne
mov
mov
cmp
jle
mov
mov
aas
int3
popa
sbb
aam
addr16
sbb
adc
daa
iret
jb
dec
(bad)
jmp
push
sbb
add
lods
push
pop
enter
jno
sbb
xchg
ret
setl
rcr
and
imul
or
aas
clc
fs
in
sub
fidivr
gs
cmp
and
fadd
pop
lahf
inc
xor
jb
jecxz
clc
dec
mov
dec
fistp
shl
daa
icebp
movs
test
ins
stos
ins
sub
inc
dec
(bad)
lahf
and
jl
das
cmp
sub
dec
jecxz
sub
pop
out
ins
mov
jge
mov
fldcw
push
and
loop
mov
cmp
pop
cmp
cmp
stos
(bad)
ins
and
shl
xchg
cmp
mov
loop
mov
sahf
inc
push
stos
pop
pop
setl
push
mov
xor
xchg
(bad)
xchg
mov
mov
(bad)
(bad)
imul
ins
sar
shl
enter
call
xlat
int
loope
or
push
xor
dec
mov
test
mov
mov
rcl
sub
mov
xchg
daa
pusha
in
retf
and
fldenv
dec
int
or
sti
and
or
icebp
pusha
into
add
cwde
rcl
arpl
cwde
iret
xor
push
xor
ins
lea
adc
xchg
cmps
mov
cmp
sti
loope
es
and
lods
stos
not
arpl
aad
(bad)
adc
cld
mov
ffree
arpl
(bad)
loopne
mov
mov
sub
sub
enter
dec
push
push
or
mov
nop
fwait
sbb
scas
cld
leave
jmp
addr16
jo
cli
lods
cmp
cmp
movs
mov
rcl
ja
sbb
imul
lea
in
or
imul
fsubr
movs
sub
mov
pop
test
xchg
push
mov
fmul
pop
(bad)
mov
xchg
out
test
retfw
adc
idiv
sbb
sbb
pop
pushf
pop
mov
pmaxsw
shl
push
test
pop
ficomp
lea
int3
mov
cmp
arpl
fs
mov
inc
xchg
push
push
frstor
cmp
adc
sub
mov
gs
add
ret
mov
mov
cs
sub
iret
push
fisub
test
xlat
enter
outs
jno
retf
sub
fisttp
stc
scas
out
retf
mov
mov
scas
nop
pop
in
dec
pop
pop
outs
in
in
or
data16
cmps
cmp
imul
mov
cld
or
fld
pop
cmps
fwait
inc
cmp
jge
clc
jmp
bound
rcl
rcr
stos
push
mov
mov
jmp
xlat
cli
fistp
test
dec
das
shl
sbb
out
aad
jnp
test
inc
dec
cmp
sbb
cmp
popf
xchg
xor
mov
xor
xchg
je
in
in
in
fistp
jmp
pop
in
or
aaa
retf
stc
cmp
aad
xlat
or
add
xor
jno
dec
mov
into
aaa
mov
jno
retf
les
jbe
mov
xchg
or
dec
and
mov
test
gs
les
add
pop
outs
test
test
mov
sbb
mov
or
jnp
(bad)
(bad)
cli
jg
lods
rcr
mov
sub
push
cmp
ss
call
cmp
scas
mov
add
lock
inc
jae
or
popf
repz
out
shl
cs
xor
test
mov
ds
add
shl
stc
(bad)
mov
sti
sub
dec
(bad)
mov
adc
xor
dec
mov
xor
xor
fldcw
ret
mov
push
jp
xchg
pop
sub
hlt
cmps
cdq
push
xchg
xor
rcl
out
push
and
movs
ja
push
popf
es
sti
clc
stos
scas
jo
xchg
xor
imul
mov
and
pop
jnp
xchg
icebp
xor
mov
lods
(bad)
(bad)
je
push
mov
sub
fs
fistp
push
inc
mov
or
push
aas
sub
mov
sbb
aad
and
xor
ror
scas
ret
stc
and
or
jnp
mov
stc
out
lahf
cmps
jb
stos
inc
rcl
ins
pop
jo
loopne
cmc
add
dec
fwait
xor
pop
shl
sbb
mov
mov
mov
dec
rcr
sbb
jo
loop
mov
pop
add
in
xlat
or
mov
push
mov
sbb
mov
mov
stos
mov
test
mov
xlat
sbb
in
xlat
arpl
cs
hlt
bound
mov
push
stc
rol
fiadd
ins
(bad)
ss
arpl
stc
mov
adc
pop
fst
pop
add
jl
jns
cmps
ret
and
adc
push
pop
hlt
dec
inc
pushf
jae
xadd
iret
movs
aas
inc
mov
push
xlat
push
lods
push
enter
sub
cmps
push
sahf
mov
xchg
inc
cmc
adc
inc
xchg
fist
inc
add
dec
ret
jmp
or
cmp
std
shl
mov
inc
sbb
adc
nop
mov
mov
or
ja
jnp
xchg
or
into
cmp
ror
fnsave
sbb
loopne
in
push
push
retf
add
sahf
mov
lock
cdq
jmp
imul
shl
or
inc
add
jecxz
pop
sbb
cmp
pop
dec
and
mov
and
arpl
push
scas
gs
sub
or
mov
mov
lahf
imul
rcr
pusha
fnstenv
xchg
push
xchg
inc
mov
mov
sbb
scas
fadd
aaa
adc
nop
pop
nop
cmp
push
mov
ret
cs
scas
call
jns
lds
mov
jecxz
outs
iret
imul
fidiv
in
mov
mov
jns
(bad)
pop
inc
test
mov
das
das
mov
daa
mov
jge
int3
inc
(bad)
xchg
jge
int
mov
mov
sub
in
out
dec
fidivr
mov
mov
jns
mov
xor
ds
xchg
cmp
call
clc
repz
push
dec
enter
pop
mov
sbb
or
xchg
and
out
or
leave
test
hlt
jge
mov
mov
cmp
add
xor
add
jmp
(bad)
and
(bad)
pop
es
inc
int
loop
inc
mov
mov
cmp
mov
or
mov
xlat
push
sub
bound
add
add
xchg
push
cld
(bad)
hlt
int
stos
iret
(bad)
mov
add
inc
jmp
xchg
retf
test
mov
sbb
push
inc
xor
push
xor
and
mov
es
add
xchg
and
mov
sbb
mov
outs
(bad)
pop
mov
in
scas
xor
and
dec
jno
sbb
push
inc
add
dec
pop
in
mov
(bad)
loop
push
sti
sbb
adc
add
push
stos
ja
push
and
mov
jo
aam
or
out
cmp
ss
add
xor
rcr
pop
rcl
loope
(bad)
imul
popf
sar
add
jmp
fistp
ror
mov
test
adc
add
push
addr16
ret
sub
mov
push
mov
inc
popf
push
mov
dec
xlat
repz
in
xor
mov
xor
(bad)
mov
lahf
popa
push
add
adc
inc
call
fld
mov
shl
into
cmp
adc
popa
push
aam
(bad)
jp
(bad)
pop
pop
in
jle
bound
sub
mov
inc
ficom
or
sbb
lods
mov
test
push
adc
(bad)
ds
xor
scas
xchg
dec
xlat
lods
sbb
add
fstp
push
repnz
and
mov
xor
inc
ja
imul
xchg
(bad)
cmp
xor
fwait
test
lahf
jl
jle
sbb
jne
inc
jmp
add
ret
sbb
mov
loopne
push
out
aas
sub
adc
mov
repnz
lds
(bad)
aas
cmp
sahf
sar
mov
mov
sahf
call
lods
add
fdiv
(bad)
push
push
xchg
(bad)
popa
add
out
data16
pusha
(bad)
dec
mov
dec
fbld
jecxz
xchg
sbb
jbe
dec
adc
mov
mov
mov
push
add
popf
stc
mov
arpl
aaa
pop
jbe
and
lods
xor
mov
loop
(bad)
xchg
sbb
pop
or
push
jecxz
in
aam
outs
xor
shl
jne
dec
cmps
(bad)
fpatan
dec
ins
xor
test
jmp
xor
(bad)
stc
or
ins
loop
xchg
sahf
xor
js
fdivr
imul
push
inc
inc
or
cmp
out
aas
dec
add
movs
test
xchg
dec
and
and
pusha
and
xor
jp
cwde
jg
sub
mov
and
inc
mov
retf
lds
inc
cmp
cmp
leave
xor
inc
dec
shl
xor
popf
xchg
xor
ins
jns
pop
call
jp
int3
and
ret
pop
ss
call
stos
(bad)
mov
(bad)
cmp
pusha
pop
pop
fadd
xor
aad
push
lods
cmps
add
xor
inc
pop
stos
cmp
cld
jnp
pop
sar
sub
xor
imul
pop
cs
sub
scas
cwde
push
pop
cwde
fs
nop
push
rep
pushf
dec
push
mov
push
gs
in
nop
or
dec
cmps
push
test
pop
mov
ret
test
push
pusha
mov
movs
(bad)
out
cmc
popf
and
xchg
and
loope
mov
arpl
add
adc
pop
xchg
(bad)
push
sbb
mov
mov
add
mov
dec
sbb
mov
add
jnp
je
fwait
adc
cmps
(bad)
dec
leave
jae
popf
cmp
(bad)
push
xchg
(bad)
div
push
add
test
push
das
sbb
cmp
lds
idiv
out
add
jl
sahf
leave
jge
add
mov
xchg
out
sti
dec
sbb
add
retf
ret
and
aad
xchg
pop
mov
mov
sub
sti
je
jno
xlat
pop
fisub
dec
adc
jns
outs
push
xchg
dec
loop
mov
cs
mov
adc
mov
xor
nop
call
mov
(bad)
fwait
sub
add
cmp
pop
push
in
push
lds
dec
rol
lock
stc
cmp
jbe
cmps
add
movs
aam
jle
pop
shl
sub
jo
nop
push
in
test
lods
xchg
mov
nop
cmps
push
movs
call
cdq
push
scas
loopne
int
jne
xor
std
and
xor
loop
sub
neg
mov
gs
and
or
adc
adc
and
mov
pusha
xor
test
loope
add
mov
adc
mov
mov
mov
jae
fbstp
and
and
pop
sub
nop
push
cld
and
sbb
inc
(bad)
clc
outs
jb
mov
pushf
or
sub
cmc
inc
std
jmp
cmc
dec
adc
pop
xor
jmp
xor
clc
sub
imul
push
mov
lds
add
mov
inc
jns
mov
jl
cmp
int3
inc
iret
dec
neg
data16
ja
jl
gs
cmp
cmp
aaa
hlt
dec
imul
xor
mov
or
jmp
daa
sub
xchg
jecxz
dec
iret
and
retf
je
enter
fstp
pop
stos
pusha
and
ja
xor
ins
(bad)
addr16
ror
data16
dec
(bad)
packssdw
add
cmp
pop
lds
sub
pop
xchg
mov
int3
xchg
out
test
pop
sbb
scas
xor
push
sbb
(bad)
retf
adc
jns
xchg
idiv
in
or
aam
push
movs
mov
(bad)
dec
pop
push
sub
jmp
mov
leave
push
and
lea
push
xor
(bad)
sbb
je
loop
dec
dec
jb
push
push
add
mov
xor
mov
ret
push
in
jmp
mov
xchg
jge
jae
dec
shl
pop
jo
cmps
dec
stos
jmp
enter
and
lds
pusha
or
xor
push
mov
rcr
mov
scas
pop
cdq
ret
mov
or
xchg
or
inc
push
mov
hlt
pop
xchg
mov
cmp
int3
xchg
xor
mov
xor
adc
xlat
ds
loope
shl
and
bound
jne
xlat
jo
mov
inc
sar
push
jle
stos
xchg
in
fadd
movs
ror
add
cs
mov
xchg
jge
push
loop
loopne
mov
xor
fisttp
xchg
(bad)
rcl
mov
out
addr16
ds
iret
cs
rol
push
xor
ret
cmps
fsub
mov
outs
jmp
data16
aas
mov
test
rcr
into
mov
inc
push
clc
lods
rcr
lock
repnz
add
mov
add
mov
test
ret
add
push
(bad)
push
inc
call
cmc
loope
sub
aam
jb
(bad)
int
add
xor
xchg
cmp
adc
or
mov
mov
sbb
push
cs
cmp
outs
sahf
mov
into
adc
fdivp
ss
jmp
cmps
mov
jl
mov
add
mov
stc
mov
push
xchg
dec
test
into
imul
outs
pop
pop
sub
jo
jmp
fstp
push
jne
shr
push
adc
push
sbb
jo
xor
mov
mov
dec
std
(bad)
int
inc
iret
out
fidiv
les
sub
adc
ins
pop
test
pop
mov
mov
repz
leave
pop
mov
rcl
popf
(bad)
ds
outs
(bad)
mov
jne
adc
mov
addr16
movs
repnz
gs
aas
je
aas
es
sbb
repnz
popf
ror
inc
inc
ss
jp
stc
mov
dec
fild
jge
lea
(bad)
fst
push
scas
pop
pmulhuw
arpl
mov
pop
mov
dec
push
sti
inc
push
ss
movs
dec
cwde
mov
mov
mov
nop
mov
jle
xlat
sahf
or
fidiv
sub
les
dec
inc
xor
adc
mov
pop
cmp
pop
push
ficomp
sbb
pop
sub
fsub
scas
cmps
push
dec
rcr
cwde
add
cmp
sbb
aam
stos
cmp
jge
mov
daa
inc
cmp
aas
jmp
gs
ror
aaa
sub
ins
jp
xor
std
pop
js
mov
mov
mov
in
ret
nop
xor
sbb
or
sub
in
and
test
mov
adc
mov
cmp
jge
push
xchg
push
jb
cwde
jns
xor
xchg
hlt
ins
fcomp
stos
outs
pop
test
jmp
popa
push
xor
adc
ret
dec
fstp
sub
push
jle
in
scas
cwde
addr16
pop
inc
xchg
sbb
stc
fist
dec
pusha
mov
ds
pop
sar
push
jbe
mov
push
mov
sbb
jl
pop
pop
inc
sub
jae
iret
cmp
sub
les
push
(bad)
mov
dec
shl
fwait
jne
cmp
inc
sbb
popa
jecxz
xor
sub
lahf
mov
dec
jb
xchg
or
xor
cmp
aas
and
test
cmc
adc
in
sahf
fadd
cmps
mov
cli
xor
in
loope
lock
pop
shl
scas
or
aas
retf
adc
mov
movs
dec
add
xchg
fbld
inc
(bad)
repz
inc
inc
and
int3
pop
enter
and
jns
outs
retf
test
xor
add
and
arpl
jo
daa
pop
sahf
or
cmp
iret
inc
fwait
or
pusha
arpl
dec
shl
frstor
call
lds
push
dec
adc
adc
bound
mov
jl
adc
inc
in
adc
mov
push
in
ds
jns
int3
leave
xor
int
dec
pop
aad
mov
test
mov
xor
movs
inc
scas
(bad)
ja
push
jbe
lahf
or
adc
cmp
cld
pop
mov
retf
inc
(bad)
mov
retf
xchg
inc
loope
adc
jg
js
pop
add
leave
xchg
out
push
add
arpl
call
test
push
jne
enter
xchg
shl
push
pop
leave
ret
mov
out
and
adc
ins
jmp
jecxz
ds
aaa
test
mov
lds
adc
sub
cmp
cwde
rcl
(bad)
xor
(bad)
cwde
inc
jle
and
push
enter
and
in
bound
mov
cmp
mov
mov
push
imul
xor
cmc
xor
cmp
inc
shr
jmp
pop
in
pusha
mov
sub
mov
call
aad
jmp
aad
jle
mov
ins
mov
inc
sub
shl
shr
adc
(bad)
xor
or
lds
fldcw
cs
push
call
or
lahf
and
sub
bound
movs
push
dec
mov
mov
stos
xor
add
retf
mov
xchg
sysenter
adc
mov
repz
cmp
in
test
push
dec
sysexit
push
push
mov
bound
mov
and
mov
add
test
inc
imul
adc
lods
dec
rcr
mov
movs
xchg
aas
push
add
add
out
mov
nop
or
aas
lahf
xor
popf
dec
adc
into
add
or
mov
mov
add
push
mov
retf
pop
(bad)
aam
xchg
xchg
or
cmc
repnz
push
lods
cmp
mov
shr
call
mov
or
sub
mov
xor
and
add
mul
or
shr
jl
ss
cld
loopne
push
inc
sbb
push
mov
inc
or
cmp
jl
fldcw
scas
cmp
ins
popf
mov
xchg
pop
cdq
push
pop
js
into
adc
mov
enter
scas
ss
lods
cli
inc
int3
scas
mov
or
stos
mov
retf
push
loop
je
xor
sbb
shr
outs
jbe
imul
int
cmps
dec
and
or
ret
fidiv
pop
test
adc
scas
cdq
xchg
pop
fdivr
or
fcomp
stc
mov
icebp
inc
xlat
fucomi
sar
inc
out
dec
pop
pop
jecxz
mov
sub
and
dec
std
and
in
push
sbb
sub
jno
out
pop
bound
sti
pop
pop
pop
call
mov
sub
mov
call
mov
call
std
adc
lds
adc
dec
xor
mov
mov
sub
pop
mov
loope
jb
xor
pop
inc
movs
cmp
mov
or
jb
adc
pop
or
sti
rcl
mov
mov
mov
test
dec
loop
push
xor
xor
adc
mov
test
imul
mov
in
arpl
fadd
fwait
xor
and
inc
push
pop
and
push
push
mov
scas
pop
adc
or
fsub
mov
or
push
xchg
sti
pop
nop
xchg
push
push
pop
inc
jmp
dec
jg
out
xchg
fstp
or
jae
or
mov
inc
mov
pop
xor
xor
mov
rcr
inc
cmp
int
cmc
push
add
fs
(bad)
xor
call
arpl
sbb
pop
add
(bad)
sub
dec
fs
dec
call
sub
neg
aad
dec
push
(bad)
ins
sub
sbb
jns
imul
push
mov
jb
fcom
fsub
push
ret
dec
mov
shr
cmp
arpl
and
jne
push
pop
retf
push
inc
xchg
jne
or
push
push
xor
adc
and
imul
dec
add
loopne
mov
add
push
leave
pop
ins
xchg
aas
imul
pop
jmp
or
push
push
iret
dec
inc
xor
sar
sub
rol
test
jecxz
out
mov
push
pushf
aad
xchg
cmps
jmp
xchg
jmp
adc
add
mov
cmp
stos
lds
fimul
mov
aam
or
push
lods
jle
pop
pop
jle
in
fwait
enter
clc
and
push
popf
push
iret
push
cld
dec
cvtdq2ps
sbb
repnz
mov
add
adc
push
cmp
outs
sbb
ret
ins
and
jg
test
jp
inc
cmp
idiv
icebp
jns
lahf
sahf
in
jb
cmp
or
stos
pop
jmp
xchg
add
lods
add
mov
and
(bad)
(bad)
mov
scas
sub
mov
and
cld
or
xchg
out
sub
pop
(bad)
pop
xchg
sbb
xchg
sbb
mov
leave
movs
fimul
jmp
sub
pop
push
lods
sub
add
aam
xor
int3
mov
mov
or
nop
add
cmps
je
adc
stos
lods
je
mov
adc
enter
jg
dec
push
cs
push
add
jnp
push
inc
clc
repz
repnz
mov
(bad)
mov
xchg
jbe
jmp
and
clc
lahf
inc
imul
mov
and
push
mov
mov
retf
rcl
xor
mov
lock
(bad)
mov
je
icebp
mov
mov
sub
mov
and
data16
jmp
and
or
xchg
add
lock
pop
or
scas
out
dec
in
icebp
test
gs
mov
xchg
jmp
mov
fist
cwde
pusha
inc
add
aam
push
jl
pop
mov
cmp
adc
mov
jbe
mov
jge
mov
sub
sub
cmps
or
jb
add
ret
fs
mov
xlat
stos
das
add
outs
ror
xor
mov
dec
pusha
dec
xchg
test
sub
bound
inc
fmul
lods
or
pop
int3
imul
(bad)
out
push
imul
mov
sub
cs
lea
lea
cmp
shl
xchg
std
push
sub
sbb
scas
xchg
mov
jb
pop
outs
popa
push
add
add
sbb
(bad)
clc
and
mov
mov
pop
aam
or
cmp
jb
sub
dec
sub
sbb
inc
(bad)
hlt
out
pop
xor
ins
mov
ins
cmp
push
lds
inc
add
pop
pop
inc
mov
xor
shr
cmp
inc
dec
pop
cmp
inc
in
and
pop
leave
test
sub
clc
stos
pop
ja
xchg
dec
bound
(bad)
out
dec
retf
pop
or
(bad)
cmp
or
add
and
imul
or
test
cmp
push
in
pop
jno
dec
std
sar
js
lods
inc
and
jmp
bound
repz
pop
mov
sub
and
and
fnstenv
xchg
mov
retf
add
lock
aam
xchg
jg
and
xor
neg
mov
cld
mov
je
je
cli
pop
pop
inc
mov
test
mov
daa
adc
rcr
(bad)
stc
cmp
sahf
mov
inc
lock
pop
jp
sbb
push
jmp
je
inc
fcmovbe
fisttp
cmc
mov
icebp
sbb
adc
movs
jg
inc
(bad)
pop
fdiv
sub
addr16
fiadd
add
jl
push
pop
popa
imul
or
mov
pop
xchg
out
imul
dec
mov
jo
xchg
or
call
xor
jl
ror
inc
add
sti
sbb
iret
inc
xchg
sbb
arpl
push
scas
rcl
ret
dec
inc
push
js
push
mov
cmp
mov
and
fbld
dec
retf
sub
ja
cs
aad
jns
cmp
xor
and
mov
outs
nop
mov
(bad)
shr
jge
test
xor
or
popf
sbb
push
push
(bad)
int3
jne
mov
movs
dec
or
and
cmp
cmp
(bad)
(bad)
gs
mov
jle
jg
pop
sbb
jo
lahf
jl
pop
inc
ds
outs
div
mov
sub
retf
adc
test
pop
mov
int
mov
scas
ss
test
or
jp
push
push
test
push
mov
mov
dec
xchg
adc
aaa
sti
mov
xchg
stc
mov
into
inc
loop
mov
sbb
sbb
sub
adc
aas
(bad)
in
or
jmp
das
je
inc
(bad)
cli
pushf
cmp
pop
clc
xor
in
mov
jae
cmp
and
xchg
jnp
cli
dec
pop
mov
hlt
fimul
ret
adc
or
dec
sub
call
xor
inc
call
jge
in
cmp
adc
mov
dec
jp
xchg
adc
imul
xor
or
in
in
es
sti
retf
(bad)
sbb
xor
pop
xchg
mov
in
test
sbb
mov
mov
in
fs
xchg
sahf
bound
dec
cwde
inc
popf
test
or
js
sahf
stc
cmp
xor
xchg
aas
xor
adc
cmp
outs
adc
int3
nop
sbb
mov
rcl
and
push
sbb
(bad)
pushf
mov
shl
leave
sub
xor
je
lock
hlt
pusha
addr16
cmp
jno
enter
ins
lods
(bad)
xor
jo
repz
daa
sbb
sbb
cmp
test
or
sbb
push
movs
jne
adc
pushf
jns
(bad)
aaa
adc
frstor
or
or
sbb
cli
test
sbb
push
pop
and
add
pushf
sahf
ror
add
imul
add
js
lods
(bad)
sub
and
cmove
pushaw
or
mov
dec
pop
cmp
shl
jne
sar
popf
outs
mov
dec
push
push
xor
out
cmp
adc
arpl
xchg
xor
loope
js
cmp
aam
jl
inc
(bad)
cwde
je
lahf
cmp
popa
fistp
retf
ficomp
add
enter
je
lods
mov
xchg
out
outs
ret
fisttp
jmp
arpl
cmp
imul
ret
aam
push
cmp
xor
or
jo
ins
out
cmps
call
mov
xchg
js
gs
xchg
aas
add
adc
jo
pop
sub
fbstp
ins
jecxz
ror
cmp
mov
push
push
in
mov
jecxz
push
sub
cmp
pop
jnp
out
or
mov
sub
xor
push
les
mov
push
imul
or
jmp
xor
xchg
in
rcl
add
outs
hlt
std
dec
push
pop
clc
lea
mov
cmp
inc
js
stc
fdiv
jns
mov
mov
pop
cdq
in
ja
dec
pop
mov
push
push
mov
cmp
jae
and
int3
adc
jl
ins
mov
loope
nop
xchg
(bad)
push
cmp
in
adc
ror
std
or
and
mov
inc
pushf
test
(bad)
ins
mov
adc
mov
pop
jmp
xor
push
and
imul
icebp
in
rcr
loop
aad
push
imul
rcr
outs
push
push
push
add
xor
aas
jmp
(bad)
adc
test
sbb
dec
in
fs
test
xchg
xchg
addr16
xchg
jle
movs
push
ret
inc
cmp
mov
push
loope
and
shr
test
pusha
cs
aam
push
mov
mov
loope
(bad)
call
cmc
mov
sti
scas
(bad)
jae
bound
lea
sbb
pop
loopne
push
daa
add
fwait
xlat
int
scas
dec
pop
in
loop
inc
sub
xchg
enter
popa
jb
mov
dec
xchg
inc
ins
add
add
sbb
xor
xor
cmp
push
rcl
lods
adc
sub
and
cmp
jno
and
jmp
and
dec
rol
inc
repnz
dec
fcomp
ss
cmc
test
ins
or
mov
lds
pop
push
int3
dec
daa
retf
xchg
adc
mov
fcmovbe
(bad)
sub
xchg
mov
fisttp
and
bound
test
lock
dec
xchg
push
push
(bad)
sbb
stc
in
dec
cmps
imul
fwait
loope
adc
int
push
mov
out
sub
inc
popa
mov
pop
mov
cli
push
shr
add
and
(bad)
arpl
cli
inc
out
jb
and
push
dec
jle
in
pop
sbb
mov
stos
cmp
pop
cwde
jecxz
pop
retf
call
push
loopne
pushf
and
mov
mov
into
mov
inc
lock
stc
push
fwait
inc
outs
jo
adc
cmp
aam
jne
outs
mov
imul
mov
gs
xchg
add
mov
and
sub
loop
xor
push
packsswb
loope
ins
lock
push
xor
(bad)
fnstenv
in
je
imul
cmp
pop
push
jp
push
into
(bad)
add
jns
loopne
sbb
in
je
adc
leave
into
loopne
dec
fild
xor
gs
mov
push
pop
xchg
imul
mov
mov
mov
outs
lods
scas
test
or
mov
sbb
jne
or
movs
xchg
(bad)
jae
std
(bad)
repz
jmp
sbb
cmp
lahf
dec
sbb
aas
adc
inc
je
mov
cld
inc
and
push
data16
mov
sub
cmps
js
adc
pop
cwde
lods
outs
jnp
je
pop
adc
shl
sbb
mov
mov
idiv
and
nop
repz
aas
loopne
lahf
call
inc
push
scas
mov
add
inc
jl
add
mov
bnd
iret
bound
out
(bad)
enter
mov
dec
sub
pop
xor
hlt
xlat
loopne
pop
pop
sti
outs
loope
cmps
enter
fdivr
stos
xchg
cmps
sti
sar
punpcklwd
jnp
jo
clc
(bad)
out
mov
jns
ins
sahf
mov
xor
mov
or
mov
inc
std
sub
dec
test
hlt
outs
neg
and
push
add
push
stos
xor
sahf
shr
fcomp
jl
pop
pop
lods
mov
xchg
xchg
jl
cmps
cmp
cmp
popf
pop
test
sub
mov
xchg
rcr
jge
pop
push
inc
lock
nop
pop
movs
dec
or
adc
mov
(bad)
pusha
out
es
imul
dec
dec
xor
sbb
xchg
adc
cmova
mov
push
jns
ja
sub
jecxz
jg
jae
ins
add
sub
push
push
mov
fwait
jns
inc
mov
or
fisubr
test
pop
add
sub
mov
and
iret
jmp
scas
ror
sub
cli
pushf
retf
clc
inc
scas
ret
fwait
pop
repz
add
adc
mov
call
mov
add
cmps
xchg
inc
(bad)
retf
mov
(bad)
shl
mov
stos
aad
mov
loope
jbe
pop
xchg
daa
imul
add
sbb
pop
mov
mov
jb
inc
push
pop
cs
rcr
inc
pushf
repnz
mov
jno
mov
std
js
out
xchg
sbb
stos
push
mov
int
push
push
mov
and
icebp
inc
shr
retf
xchg
jp
mov
jcxz
iret
(bad)
mov
add
sub
push
pusha
mov
lds
mov
mov
(bad)
test
(bad)
jns
and
or
retf
mul
scas
xor
cld
mov
adc
inc
inc
pop
xor
aad
jno
out
mov
mov
add
movs
sbb
push
sub
inc
loopne
lods
fisubr
sub
mov
ja
clc
jmp
and
clc
mov
int
ret
hlt
cld
(bad)
fisub
pop
push
imul
scas
push
mov
push
icebp
xchg
js
pop
in
jbe
jae
popa
outs
retf
dec
mov
adc
outs
cmps
jne
add
pop
lods
or
sbb
sbb
sub
jno
int
inc
and
push
sahf
je
out
cli
int
jno
jmp
(bad)
pushf
xor
std
add
push
int
js
mov
mov
popf
js
jmp
xchg
xchg
sahf
jmp
inc
push
fwait
and
retf
ja
push
fiadd
fistp
dec
(bad)
nop
adc
and
add
cwde
dec
pop
mov
cmc
push
jecxz
lods
xchg
dec
sbb
sbb
xchg
xor
daa
and
dec
jns
ret
and
aas
mov
jge
out
popa
pop
retf
outs
sar
call
sub
ror
xchg
push
fdivr
add
(bad)
pop
and
push
jmp
push
js
pop
in
(bad)
jo
imul
clc
mov
popa
ret
retf
fcmovb
imul
jb
jmp
cs
inc
mov
mov
pushf
imul
mov
mov
pushf
je
inc
sub
aam
ret
lods
xchg
das
test
mov
cmp
xlat
aas
ds
and
xchg
cwde
dec
inc
adc
aam
sub
imul
jno
dec
adc
shl
inc
popf
mov
pop
lock
sub
add
cld
clc
ja
enter
or
hlt
ffreep
sub
scas
(bad)
in
and
inc
mov
ja
enter
retf
jno
adc
aaa
ja
mov
arpl
aad
popa
loopne
retf
and
jae
out
dec
cs
(bad)
fnstenv
sub
dec
jl
popf
adc
(bad)
mov
jae
pop
dec
ss
cs
mov
sbb
xor
imul
xchg
sbb
adc
jbe
inc
test
rcl
fist
add
xchg
cs
or
cdq
jle
or
xchg
and
push
fwait
adc
mov
inc
pop
fnsave
mov
clc
adc
das
arpl
jno
outs
fadd
pushf
ret
sbb
mov
sar
push
sar
fnsave
pushf
xchg
pop
pop
inc
lods
(bad)
scas
ja
arpl
mov
addr16
pop
inc
push
call
lods
loopne
or
leave
push
into
int3
fisttp
push
add
das
mov
mov
loop
xor
dec
adc
fstp
jb
lahf
leave
es
xor
mov
(bad)
mov
(bad)
xlat
mov
push
inc
pushf
repnz
mov
ins
push
(bad)
test
mov
leave
sub
mov
inc
lock
adc
in
(bad)
jp
loopne
fild
pop
jmp
add
call
fs
and
cwde
or
or
mov
dec
test
add
or
push
mov
add
into
imul
cli
enter
or
push
mov
jle
idiv
lods
add
cmp
out
stos
rcl
pop
fdivr
out
push
mov
mov
push
pusha
sbb
sub
hlt
push
fidivr
or
rol
add
cli
xor
sahf
or
push
inc
jle
jl
ds
xor
arpl
(bad)
sbb
mov
jo
js
mov
inc
and
aad
cld
mov
or
fsubr
inc
or
dec
lods
push
inc
jne
ffreep
scas
lahf
jae
shl
sbb
imul
xchg
pop
push
popf
fwait
cmp
mov
sub
sbb
out
mov
sbb
and
mov
push
cwde
add
jle
cld
std
add
into
cmp
jnp
mov
sub
add
push
jb
test
mov
add
cli
mov
and
mov
in
inc
cld
inc
fcomp
xor
add
push
xchg
pop
std
out
mov
mov
shl
mov
sbb
retf
in
adc
enter
adc
xor
loope
sbb
pop
or
ret
adc
(bad)
shl
jmp
xchg
mov
shr
push
cmp
inc
mov
adc
or
ds
imul
mov
aad
sar
mov
xchg
sahf
pop
jge
xchg
push
hlt
stos
sub
fst
aam
push
lahf
imul
rcl
test
push
xchg
jp
nop
shl
pop
ins
out
pop
xor
xor
add
adc
mov
pop
(bad)
gs
repnz
mov
imul
in
push
outs
xor
jge
pop
xchg
out
jns
jmp
cli
mov
jbe
neg
retf
in
xor
mov
aad
sub
cmp
cmp
and
idiv
adc
adc
(bad)
inc
adc
out
aam
jo
outs
cmp
stos
mov
int3
xchg
lds
sahf
popa
add
xor
(bad)
dec
aas
and
mov
mov
add
mov
repnz
fmul
movs
sub
inc
xor
adc
mov
out
xor
inc
add
and
daa
cld
dec
test
xchg
cmp
int
inc
cmps
mov
jle
nop
cmp
mov
fnsave
jo
xor
mov
and
and
js
data16
sub
sbb
jnp
punpcklbw
mov
add
and
addr16
retf
dec
adc
sbb
or
dec
cwde
call
and
into
and
mov
or
out
inc
repnz
mov
xchg
lahf
jns
outs
jl
inc
sahf
or
cmp
mov
pop
lds
jp
arpl
mov
or
(bad)
outs
sub
repz
adc
dec
mov
sti
xlat
les
sub
push
xor
arpl
in
sbb
dec
add
or
mov
add
call
icebp
dec
pusha
jmp
xor
pop
sub
ror
adc
mov
and
ja
cmp
aad
mov
jae
retf
push
jo
popa
(bad)
cdq
movs
stos
shl
ret
mov
in
xor
sbb
test
add
and
leave
or
cmp
cld
(bad)
out
sbb
stos
or
popf
outs
neg
dec
cmps
lods
dec
dec
dec
inc
jmp
cmp
push
les
adc
sub
(bad)
mov
loope
adc
adc
lea
mov
push
lods
push
xor
cwde
xchg
jne
or
jge
jbe
cld
and
and
out
mov
sub
pop
mov
sbb
inc
fbstp
enter
or
rcl
aad
sub
sbb
mov
or
test
xlat
test
aam
sbb
call
push
push
jmp
ins
and
jns
lahf
gs
push
ficom
sbb
fld
mov
mov
inc
in
outs
in
shl
mov
popa
and
dec
movs
outs
push
cmp
inc
jns
and
inc
sahf
hlt
xchg
out
div
pop
in
in
jge
jmp
stos
aad
(bad)
jmp
jmp
adc
lods
mov
fwait
adc
xchg
call
lahf
jno
fld
pusha
sbb
jl
mov
aas
(bad)
sub
es
jle
movs
xchg
mov
nop
fdivr
cmc
shr
ret
sar
in
stc
add
retf
mov
xor
frndint
imul
test
cmp
and
add
pop
fst
cmp
push
popa
dec
sahf
jg
adc
sbb
xchg
shl
pusha
jo
xchg
das
pop
(bad)
cwde
adc
cmp
stc
outs
mov
loope
dec
and
popf
dec
out
into
ror
mov
mov
js
cmc
adc
jecxz
add
lods
xchg
sbb
aas
sub
cs
xchg
and
jns
adc
mov
jbe
(bad)
mov
ds
(bad)
fcomp
pop
xor
push
aas
enter
in
lds
push
lahf
jecxz
and
ror
adc
mov
push
add
loop
cwde
mov
cmp
or
in
jbe
data16
add
sbb
jg
xchg
pop
pushf
in
je
mov
test
aam
xor
add
popf
mov
sbb
add
shl
xor
test
sbb
ror
sub
adc
mov
out
dec
icebp
arpl
adc
add
iret
jle
sbb
or
cmp
dec
fneni(8087
jle
jbe
fstp
or
repz
inc
mov
inc
sbb
jbe
daa
push
fisub
les
ret
iret
or
pop
inc
imul
cmp
inc
mov
loop
out
(bad)
call
inc
(bad)
xchg
jns
mov
retf
pop
bound
push
out
jle
xchg
sbb
outs
mov
hlt
xor
xor
and
scas
or
jno
cmp
mov
jecxz
add
jnp
or
jmp
mov
pop
pop
dec
jl
in
(bad)
jle
push
cld
lock
sbb
je
loop
xor
xchg
lds
adc
mov
mov
jmp
arpl
jo
sti
dec
mov
in
clc
cmp
or
mov
(bad)
xchg
jne
pop
push
inc
sub
sahf
mov
iret
dec
cs
inc
adc
mov
pop
cld
lock
in
nop
sub
adc
pop
mov
inc
clc
and
lods
add
push
mov
adc
imul
mov
and
scas
movs
out
sti
inc
neg
lahf
cwde
imul
icebp
and
xchg
xchg
sbb
in
out
(bad)
inc
and
shr
rcl
enter
jmp
adc
sub
jecxz
sbb
loopne
adc
idiv
push
push
mov
popa
xchg
mul
dec
fmul
scas
or
and
test
movs
aad
sub
aaa
fwait
mov
ins
push
lahf
pop
sbb
sahf
ja
fs
and
sub
shl
mov
test
js
or
jo
mov
stos
add
xchg
mov
(bad)
jnp
lock
sbb
adc
arpl
rcl
cmps
scas
pushf
in
or
in
mov
mov
jno
mov
sbb
mov
das
add
or
cmps
stos
jae
xor
jno
ja
pop
mov
inc
add
pop
(bad)
or
mov
mov
or
jno
enter
fs
retf
xchg
adc
rcl
dec
arpl
sub
jmp
mov
jge
pop
xchg
nop
cmp
jae
inc
(bad)
xchg
sub
in
xor
pavgw
sbb
push
bnd
adc
pop
loope
inc
mov
aam
sar
xchg
dec
and
inc
iret
lods
xchg
fidivr
pusha
push
push
xchg
fdiv
ret
sti
rep
(bad)
lahf
out
xor
and
pop
test
test
in
jns
and
sub
daa
and
cdq
pusha
sub
adc
xchg
jne
fmul
adc
daa
pop
cdq
cmps
ffree
jnp
adc
mov
neg
mov
mov
fcomp
clc
mov
mov
je
push
data16
rol
sub
mov
enter
call
xchg
hlt
adc
xchg
mov
xor
lods
stos
in
mov
(bad)
sahf
mov
sub
loope
gs
jmp
retf
mov
imul
adc
out
repz
sbb
xchg
mov
adc
mov
iret
(bad)
pop
test
cmps
inc
xor
mov
fnstsw
cli
hlt
(bad)
out
sbb
push
inc
adc
stos
loopne
fdivr
sar
jnp
dec
(bad)
mov
jb
mov
cmp
(bad)
jg
sbb
sti
or
imul
in
shr
dec
shr
leave
dec
xor
or
pop
repz
and
inc
mov
test
test
cld
scas
inc
in
pop
dec
xbegin
fisub
xlat
xchg
sub
sbb
fistp
retf
sub
data16
fsub
mov
jmp
xchg
xor
aad
sbb
outs
aas
push
mov
ss
int
lds
lahf
sbb
test
cmc
adc
sub
mov
push
test
jb
xchg
cmp
xchg
cwde
outs
cmp
push
inc
fld
mov
mov
cmp
jl
add
jno
(bad)
(bad)
test
and
adc
pusha
mov
mov
or
cmc
repz
sub
and
jno
inc
push
inc
fidiv
scas
(bad)
add
push
sbb
in
icebp
dec
add
cmp
fsub
dec
ins
dec
jns
sbb
movs
inc
sar
sbb
in
or
repnz
gs
mul
ins
jno
xchg
cwde
ret
dec
shl
xchg
push
(bad)
loopne
push
push
or
mov
sub
and
adc
retf
sub
fisttp
push
ds
rcr
mov
mov
add
mov
dec
dec
cli
lods
inc
inc
pop
mov
xor
ds
add
pop
jae
and
leave
test
mov
int
push
into
loopne
stos
outs
pop
imul
pop
jge
(bad)
jns
test
ins
div
mov
add
into
fild
mov
inc
mov
stos
movs
push
push
add
lods
imul
hlt
push
adc
div
sti
pop
aam
and
inc
ja
xor
ja
xlat
mov
dec
jmp
(bad)
sub
bnd
in
daa
ret
aaa
mov
test
(bad)
scas
dec
fsub
cmc
cmp
out
fist
mov
in
out
mov
push
rol
pop
pop
dec
pop
jo
or
mov
add
(bad)
test
ror
pop
mov
mov
xlat
sub
pop
add
int
jb
pop
mov
push
das
add
or
xchg
adc
iret
pop
arpl
push
enter
mul
mov
cmp
pusha
icebp
push
data16
push
pushf
pop
stc
inc
push
add
mov
pop
mov
xchg
(bad)
pop
push
loope
imul
mov
les
inc
adc
pop
mov
xchg
int
dec
test
add
retf
les
cmp
xchg
mov
retf
xchg
fwait
xor
out
test
sub
xor
push
mov
push
fist
std
sub
xchg
dec
mov
sahf
bound
fld
adc
mov
icebp
jge
fisttp
cmp
(bad)
leave
aas
pop
mov
sbb
add
push
or
stos
or
mov
sar
pop
jp
cs
mov
and
and
ret
(bad)
pop
push
les
push
(bad)
jo
das
or
xor
out
loopne
and
cmps
jnp
(bad)
clc
dec
mov
out
gs
shr
rcr
and
pop
imul
les
ins
jg
mov
sub
sub
popf
sub
(bad)
out
std
push
add
(bad)
adc
inc
mov
push
xor
ud2
pop
mov
fdivr
push
arpl
jb
iret
jg
xor
cs
dec
repz
fdiv
mov
and
(bad)
sar
pinsrw
xor
sub
out
out
rcr
xlat
mov
dec
or
call
outs
call
cmp
test
imul
imul
mov
cmp
(bad)
adc
into
inc
cmc
and
adc
mov
cmp
push
lods
add
imul
cdq
in
imul
add
sub
icebp
scas
(bad)
shl
sub
gs
jne
mov
xor
mov
daa
aam
xor
jmp
or
(bad)
ja
adc
mov
add
jl
bound
aad
movs
out
mov
jno
xor
mov
push
adc
xchg
mov
dec
out
ror
jl
jg
pop
lods
push
mov
(bad)
cld
sbb
xchg
xchg
ds
cmp
sbb
inc
popf
fistp
div
cli
(bad)
push
ins
xchg
sbb
mov
add
inc
das
rol
cwde
pushf
(bad)
loop
sahf
xchg
mov
mov
cs
(bad)
nop
mov
dec
stos
sbb
xchg
mov
inc
push
lock
inc
xchg
jle
cld
ja
in
ds
mul
push
jle
movs
add
mov
sbb
mov
leave
dec
movs
jno
or
fadd
retf
xor
scas
ret
or
iret
leave
sar
neg
cmp
push
test
push
sbb
lds
pushf
call
aaa
xchg
and
or
sbb
mov
and
push
loop
cld
test
mov
mov
add
mov
pushf
js
ins
mov
iret
jmp
outs
fdiv
into
push
pop
and
jp
ds
xchg
inc
adc
fidiv
push
aaa
mov
pop
pusha
shr
mov
les
or
jle
(bad)
test
cmp
xchg
fcmovb
mov
or
inc
push
add
ds
jo
mov
pop
xchg
adc
dec
xor
pop
push
jecxz
push
rdpmc
xchg
retf
in
add
adc
test
xor
bound
out
out
icebp
call
fcmovu
out
js
and
jp
imul
pop
mov
stos
jmp
mov
inc
fisubr
cmp
ret
xchg
cmp
bound
scas
sti
movs
idiv
popf
test
xor
inc
pusha
rol
ror
stc
adc
and
jne
shl
adc
iret
xor
das
loopne
in
cli
(bad)
push
cli
movs
jp
hlt
or
(bad)
sbb
fsub
aad
lods
mov
mov
jne
retf
pop
xchg
ja
push
es
movs
add
and
push
imul
idiv
jo
xlat
sbb
in
dec
leave
mov
retf
iret
adc
sub
sbb
retf
xor
or
xor
xchg
add
pop
sbb
lods
lock
dec
mov
out
addr16
in
sbb
arpl
das
loop
jle
or
push
adc
add
mov
mov
dec
push
and
mov
inc
push
mov
inc
sar
cmps
sub
mov
dec
pop
mov
cmp
and
jle
sub
and
mov
inc
pop
push
pop
sbb
and
or
cmp
ret
cmp
addr16
inc
js
(bad)
ror
inc
jae
sbb
dec
sub
ficomp
push
out
mov
pop
shr
xor
and
jmp
mov
or
xor
mov
fimul
ins
rcl
mov
push
retf
lds
pop
fld
das
pop
mov
(bad)
jge
mov
mov
adc
xchg
ret
dec
idiv
lahf
and
pop
pop
fs
mov
dec
mov
adc
jo
inc
mov
xlat
jecxz
add
mov
js
mov
jp
sti
sar
je
dec
(bad)
cdq
pop
std
xor
cld
jp
xor
repnz
ret
hlt
xchg
js
mov
add
jae
mov
mov
fsubr
pop
push
out
arpl
or
icebp
ss
int
imul
(bad)
retf
(bad)
int
jmp
push
dec
rcr
(bad)
cld
jno
jae
and
sti
add
dec
push
mov
rcl
or
mov
not
and
mov
jg
sbb
mov
xchg
jge
shl
dec
push
test
(bad)
and
or
fimul
push
adc
inc
je
cmp
jmp
mov
in
add
mov
fwait
and
xor
inc
mov
das
(bad)
and
jae
mov
pop
arpl
xchg
add
cli
adc
jle
nop
and
sbb
and
jge
dec
fsubr
xor
cli
daa
mov
add
(bad)
out
cmp
shr
(bad)
xor
test
push
mov
(bad)
mov
add
xchg
mov
add
scas
xchg
jno
mov
popf
pusha
inc
sub
add
stos
sub
jge
retf
sbb
inc
rcr
enter
push
lock
repz
pop
test
test
sbb
call
mov
mov
xlat
sub
mov
push
adc
jge
retf
aaa
fs
jle
cld
xor
adc
in
adc
pop
xchg
sub
or
push
mov
inc
(bad)
stos
iret
mov
mov
ins
mov
adc
push
or
sub
jae
pop
push
lds
cmp
rcr
test
mov
test
fxch
(bad)
and
push
leave
and
ficomp
sub
icebp
push
and
xchg
aaa
outs
mov
out
dec
test
push
xchg
pop
aas
cdq
pop
cmp
(bad)
pop
loope
loop
add
shl
fwait
xor
mov
mov
jmp
arpl
xchg
scas
pop
stc
mov
cmc
retf
neg
add
mov
mov
(bad)
xor
mov
xchg
fimul
sahf
pop
les
test
dec
lock
(bad)
sar
inc
fmulp
popa
imul
ror
gs
jb
out
shl
inc
xchg
inc
push
mov
imul
lock
sbb
bound
push
sbb
(bad)
fiadd
push
imul
dec
mov
add
lods
inc
fwait
cmp
sbb
popf
lods
(bad)
cli
inc
or
stos
jmp
pop
xlat
pop
push
add
and
or
ror
movs
(bad)
or
pop
rcl
mov
sub
rdmsr
xchg
ds
scas
movs
mov
mov
iret
stos
daa
or
mov
push
cmp
xor
out
or
out
cmp
pop
repnz
movs
outs
sti
stos
scas
arpl
mov
xchg
xchg
icebp
cdq
mov
jmp
jae
sbb
push
call
inc
lock
fstp
mov
mov
cld
popa
adc
and
xchg
cwde
lods
mov
add
mov
add
add
nop
out
sar
pop
lods
xor
xor
xchg
push
in
mov
lock
and
imul
jmp
mov
mov
mov
inc
cmp
adc
xor
in
int
aaa
cld
not
sub
ja
cmp
push
push
mov
jne
push
mov
and
push
leave
push
pop
lods
andps
lods
(bad)
jne
pushf
addr16
mov
sbb
aaa
(bad)
shr
cld
int
adc
dec
les
sub
test
out
(bad)
fidivr
fmul
shl
jne
xor
sbb
push
mov
dec
mov
jmp
mov
xchg
cmp
pop
cdq
rcl
fdiv
inc
xchg
mov
and
int
fadd
loopne
inc
js
mov
xor
xlat
sub
hlt
push
fistp
sub
and
addr16
cs
jmp
pop
aas
nop
adc
icebp
cli
mov
cdq
inc
jmp
or
jle
(bad)
cmp
and
xor
mov
push
(bad)
mov
out
call
shl
cmp
aam
arpl
xor
add
icebp
sbb
rol
out
ins
mov
lea
fs
adc
sti
xchg
sahf
fidivr
(bad)
popf
stos
xor
sbb
mov
cli
mov
mov
add
xchg
retf
enter
push
mov
movs
repnz
loop
push
cmp
iret
mov
xor
push
xor
and
fwait
cmp
jne
ror
aad
(bad)
xchg
sar
and
dec
inc
adc
sub
inc
rcl
ins
sbb
mov
pop
stc
rcl
mov
xchg
mov
cmps
add
add
in
leave
mov
mov
cmc
jmp
lods
push
mov
sub
clc
repz
sbb
retf
sub
dec
hlt
mov
mul
xor
je
test
call
adc
hlt
fdiv
mov
xlat
pop
aam
in
fs
xchg
into
or
out
sbb
icebp
pop
outs
mov
push
shr
test
icebp
inc
test
mov
cmp
adc
or
pushf
test
add
test
push
fwait
clc
xchg
ins
repz
mov
sub
jae
mov
addr16
xchg
xchg
sbb
inc
repz
fucomp
bound
sub
add
test
dec
xor
cmp
pop
add
mov
test
or
jno
mov
leave
pop
in
push
je
(bad)
sub
add
jmp
bound
push
nop
push
jge
(bad)
adc
mov
mov
mov
mov
xor
xchg
push
or
cwde
dec
in
pop
adc
out
ja
loop
lods
jl
retf
mov
push
js
jecxz
sub
push
mov
rcr
cmps
scas
lock
data16
(bad)
or
sbb
test
inc
mov
pop
retf
or
push
hlt
add
and
pop
clc
sub
and
arpl
jae
mov
data16
cmps
(bad)
fidiv
test
mov
arpl
xchg
fmul
lock
sbb
push
jae
mov
mov
xchg
cmc
scas
(bad)
push
push
jb
jg
out
sub
jg
xor
or
inc
cld
retf
int
mov
mov
shl
(bad)
mov
sbb
pusha
imul
cs
mov
cmp
mov
loop
push
inc
ret
inc
daa
dec
sar
xor
fs
inc
adc
mov
cld
jmp
push
and
sub
dec
call
fwait
push
repnz
or
push
xchg
cdq
outs
dec
in
movs
shl
mov
bound
les
add
icebp
push
pushf
ret
or
rcr
or
ins
cdq
xor
stos
test
jl
fstp
aas
cwde
sub
movs
cmp
or
data16
add
out
inc
rol
sti
pop
xchg
es
jo
mov
dec
mov
xchg
rol
loope
push
idiv
lods
(bad)
cmp
mov
call
or
adc
test
adc
movs
call
ret
cmps
jmp
jns
jb
dec
js
xchg
sahf
loop
mov
(bad)
push
xor
mov
jno
repnz
mov
movs
dec
mov
push
mov
inc
call
arpl
ret
dec
test
add
jno
dec
mov
(bad)
xor
out
sub
sub
dec
shl
out
cmp
cmps
xor
push
sub
xchg
call
jo
outs
xchg
sbb
adc
push
xor
bound
cmp
popa
pop
lea
ror
or
push
imul
mov
jnp
fwait
cmpxchg
aam
inc
jae
stc
shl
sub
jno
into
adc
pop
inc
stos
cmp
(bad)
sbb
popf
mov
(bad)
clc
mov
sbb
push
dec
ret
pop
scas
xchg
push
fdivr
push
in
stos
in
fwait
sbb
ins
jns
pop
enter
push
into
push
cmp
out
and
adc
or
push
dec
xchg
sub
test
mov
xchg
or
outs
imul
(bad)
xlat
in
adc
xor
xor
inc
inc
and
dec
lahf
or
jae
cmp
inc
retf
repz
scas
cmp
inc
movs
xchg
aam
out
cmp
pusha
in
jmp
push
pop
pop
xchg
and
mov
add
out
or
out
jnp
lds
mov
movs
rol
(bad)
pop
mov
jle
and
xchg
cmps
push
div
xchg
xlat
popf
xor
pop
dec
rcr
sub
mov
xchg
ficomp
adc
xlat
out
inc
xchg
shl
add
ja
fcmovb
stc
xor
shl
mov
sub
cli
test
add
xor
sahf
dec
jne
fs
mov
inc
sub
push
jnp
jmp
mov
jnp
ins
jle
sub
cmps
movs
int
mov
fwait
pushf
jne
mov
cwde
outs
mov
sahf
cmp
adc
push
in
retf
push
cmp
and
outs
and
xchg
xchg
jp
lock
xor
lods
movs
or
cmc
xor
or
jg
mov
push
jbe
jnp
ja
test
mov
mov
test
push
out
push
dec
mov
repnz
lds
scas
add
sti
jnp
sbb
enter
stos
push
mov
push
xchg
xchg
push
ss
packssdw
clc
std
ror
pop
mov
dec
xchg
fst
mov
(bad)
call
(bad)
cmps
outs
or
(bad)
jmp
add
test
push
inc
or
cmps
xor
cmp
cmp
pop
sub
mov
or
shl
sub
(bad)
in
xor
mov
outs
push
in
pop
dec
push
iret
je
out
jnp
sbb
xchg
outs
pop
mov
mov
add
mov
adc
cwde
daa
rol
cmc
hlt
inc
test
es
pop
cmp
ins
mov
(bad)
sbb
xor
in
test
scas
push
aad
push
lea
call
adc
sar
mov
cmp
mov
pop
sub
pushf
mov
sbb
inc
push
repz
cs
inc
(bad)
dec
outs
cmp
dec
dec
cmp
test
xchg
sar
cmps
or
es
or
cmp
sbb
pusha
cwde
push
cmc
and
inc
sub
retf
jo
out
imul
jns
push
mov
test
stos
aam
mov
cmp
xchg
aas
and
stc
sub
inc
push
push
clc
push
popf
adc
cwde
sub
xchg
fcom
dec
xchg
pop
dec
in
mov
or
je
cld
pusha
and
ds
test
mov
imul
fwait
cmp
mov
push
imul
hlt
push
iret
fwait
clc
jnp
adc
adc
mov
pop
mov
mov
clc
cmp
in
js
mov
and
pushf
add
into
jecxz
outs
mov
mov
mov
sub
xchg
leavew
les
(bad)
xlat
test
out
aas
loop
pop
sti
imul
fs
in
xchg
fdivr
fiadd
cmp
sub
or
pop
stos
retf
mov
mov
jmp
adc
fisttp
ds
or
dec
popf
push
or
mov
inc
adc
mov
aam
jae
sbb
in
imul
mov
int3
cmp
and
imul
icebp
stc
fild
xor
push
adc
xchg
aas
xor
jg
(bad)
outs
pusha
mov
loopne
(bad)
retf
rcl
pop
(bad)
in
lock
call
(bad)
ret
(bad)
scas
inc
sub
pop
loop
mov
out
outs
mov
dec
inc
jne
test
lds
pop
mov
call
loopne
cmps
imul
test
mov
and
push
sbb
mov
test
mov
in
xor
jle
xchg
out
pop
pop
sub
sub
rcl
inc
aad
in
and
sti
push
or
inc
pop
dec
mov
aam
inc
mov
pop
into
push
inc
mov
sub
fsubp
pop
jnp
shl
test
leave
mov
mov
or
pop
ror
mov
pop
mov
(bad)
sbb
sub
jae
in
mov
mov
and
sub
ins
repz
gs
add
and
clc
push
test
xor
sub
add
bound
xor
jbe
(bad)
nop
std
dec
adc
inc
mov
fild
jecxz
ja
pop
sbb
xor
ret
ins
push
and
pop
shl
sbb
lahf
loope
mov
stc
mov
pop
pop
jae
mov
je
movs
or
pop
cmp
bswap
xchg
fisttp
icebp
movs
xchg
pop
and
and
js
movs
pop
out
jae
and
aaa
rcl
lods
leave
push
stc
add
inc
push
ficomp
mov
call
pop
xchg
mov
sti
xchg
rcr
fisttp
adc
xchg
fstp
retf
pusha
push
or
aam
js
(bad)
stc
lfs
mov
rcr
add
(bad)
rol
cmp
sar
mov
dec
dec
int
cmp
test
lgs
push
pop
into
scas
sbb
inc
pop
add
inc
out
sbb
jp
jo
sbb
xor
out
sub
sbb
mov
ins
mov
aaa
(bad)
sar
arpl
cwde
aad
push
jmp
and
cwde
mov
inc
test
push
fisub
cld
sub
lahf
mov
add
pushf
out
pop
pushf
jbe
mov
xchg
cld
push
pop
loope
cs
inc
cmp
jge
aad
sbb
ds
push
mov
sahf
fmul
popf
in
push
push
loopne
xchg
lea
sub
or
lahf
scas
int3
int
mov
inc
jno
cmps
repnz
xor
ins
mov
cwde
leave
push
jge
es
scas
popa
adc
cli
push
in
mov
mov
cli
repz
aad
mov
and
retf
(bad)
sbb
pop
mov
inc
ja
cmp
mov
lock
cmp
fst
inc
fld
dec
mov
scas
inc
xchg
repnz
ss
adc
xor
jmp
popf
inc
cwde
sub
xor
call
cld
cmp
test
push
cli
test
idiv
and
push
clc
jae
fsubr
rcl
jb
inc
jae
mov
addr16
adc
xchg
pop
push
pop
adc
cmp
mov
jo
arpl
fistp
pop
out
cmps
pop
hlt
jb
push
mov
push
(bad)
sub
pop
aaa
addr16
add
(bad)
call
jmp
ins
mov
sub
pop
inc
mov
(bad)
(bad)
repz
pop
lods
xor
jmp
inc
jb
inc
fst
push
je
imul
xchg
xchg
movs
add
sbb
mov
loop
or
pop
fsubr
inc
rcl
js
(bad)
stc
push
pop
and
in
push
outs
jp
xor
pop
bound
bound
es
add
fld
pop
add
xchg
int3
std
pop
cs
or
pop
xor
mov
ins
mov
push
sub
mov
stc
and
mov
push
loope
cmp
inc
test
ret
sub
lahf
mov
repnz
or
int
test
repz
pop
and
jnp
mov
stos
inc
lds
ds
adc
repnz
xchg
xor
cdq
inc
sbb
test
sub
xchg
and
cwde
adc
test
nop
js
int3
mov
out
adc
push
ret
push
dec
jg
test
daa
adc
dec
mov
ffree
out
sub
inc
pop
inc
pop
pop
push
inc
dec
stos
or
fild
gs
sbb
pop
mov
jo
repnz
cmp
lock
push
pop
das
(bad)
call
dec
xchg
add
and
add
fistp
push
dec
dec
cli
jmp
les
js
stos
add
cmp
push
jl
pusha
mov
sub
stos
jle
pop
mov
mov
shl
and
jecxz
push
inc
mov
stc
(bad)
out
test
scas
adc
and
call
popa
pop
popf
(bad)
push
cmps
test
and
test
retf
xor
jg
(bad)
cmc
icebp
pop
xor
arpl
mov
jne
repz
cmp
aam
out
(bad)
pop
(bad)
ss
es
call
or
and
xchg
fwait
int3
lods
in
sub
daa
jle
addr16
out
or
or
shl
lods
mov
mov
out
(bad)
out
ins
mul
ret
push
and
adc
or
inc
out
push
dec
pop
int3
mov
pop
or
and
jle
ret
addr16
inc
test
push
adc
(bad)
jl
loope
dec
je
(bad)
cmp
pop
xchg
into
repz
pop
aas
mov
inc
cmps
sub
out
push
xor
pusha
mov
pushf
mov
push
imul
ret
or
cmp
fidiv
sahf
mov
cmps
retf
imul
daa
jg
pop
sub
pop
cmc
iret
adc
in
or
pop
imul
xchg
xlat
jg
lds
sar
and
mov
push
add
fcmovbe
xchg
call
(bad)
cmp
push
cmc
xchg
pop
inc
in
add
out
add
push
inc
or
imul
pop
xchg
sub
add
popf
cli
push
fsub
adc
ins
add
fcom
pushf
push
sahf
fwait
mov
adc
push
rol
fild
movs
adc
fidiv
(bad)
ins
sub
mov
fs
xor
loop
cmp
cmps
popf
retf
mov
rol
mov
pushf
xchg
jae
cli
mov
xchg
int
pop
jno
mov
fs
cmps
inc
aad
cmps
jno
ret
push
mov
shl
or
mov
mov
mov
mov
retf
and
pop
and
(bad)
aaa
sbb
dec
sub
sbb
setle
neg
xchg
mov
jge
jmp
cmp
shl
repnz
jecxz
inc
pop
cmp
sub
ins
xchg
dec
or
push
icebp
sub
adc
pop
out
mov
cwde
pop
dec
push
fst
or
int
imul
xor
(bad)
loope
xchg
test
xor
js
loopne
iret
dec
frstor
mov
sbb
ja
sub
outs
dec
fstp
(bad)
repz
sub
retf
imul
jnp
xchg
add
stc
enter
jle
xor
push
sar
sbb
pop
mov
int3
add
push
(bad)
push
push
inc
aad
int
mov
xchg
xchg
fwait
mov
cmc
cmp
retf
(bad)
out
sbb
repz
adc
sub
retf
jae
fld
scas
scas
and
mov
inc
sbb
js
jnp
cld
xor
cmp
pop
or
xchg
sub
pop
pop
int3
repz
mov
nop
fstp
xor
dec
mov
inc
push
inc
popa
jno
xchg
jl
push
aam
push
jne
xchg
mov
mov
fs
lods
aas
pop
retf
jo
(bad)
aad
ja
ins
sahf
jecxz
xor
scas
cmp
shl
int
dec
inc
push
adc
jb
sahf
jae
stos
xor
fldenv
or
jns
xchg
and
xor
ret
inc
sub
adc
fadd
clc
xor
mov
push
jg
jle
xchg
mul
loopne
fisubr
and
scas
fmul
in
jmp
into
or
(bad)
stos
jg
loope
xchg
xor
lds
add
add
movs
bound
xchg
sub
mov
dec
inc
mov
pushf
repz
pop
cwde
adc
in
push
(bad)
stos
or
cdq
jnp
add
jns
jg
and
dec
fsubr
xchg
jmp
aad
ret
retf
xlat
mov
clc
push
xchg
add
and
int
enter
add
into
int3
sub
xchg
into
adc
int
add
xor
test
into
pop
xor
aaa
and
xchg
in
sbb
sub
daa
out
cwde
xchg
pusha
arpl
mov
jno
aaa
mov
retf
mov
ret
and
(bad)
mov
fmul
fdiv
cmp
ja
adc
lods
xor
in
iret
inc
jae
lahf
leave
movs
ss
push
pop
cmp
icebp
in
xor
jbe
in
inc
inc
inc
popf
dec
test
jp
xchg
xor
fisttp
aaa
cmp
retf
shr
xor
and
push
scas
mov
xor
xlat
add
movs
lahf
adc
movs
jmp
gs
push
push
jecxz
mov
jno
lds
sbb
mov
cdq
sbb
pop
sub
cdq
mov
in
inc
scas
cwde
scas
loop
jns
out
sbb
xor
rcr
xchg
imul
aas
int3
clc
jo
cwde
inc
cwde
ja
repnz
adc
dec
xlat
imul
adc
adc
cmp
mov
retf
jae
lods
cmps
mov
stos
test
lea
je
shl
ja
and
jnp
mov
push
jo
xor
dec
dec
xchg
popf
std
popa
add
arpl
push
into
inc
mov
sub
jae
cmps
sbb
je
adc
pop
mov
scas
xor
sti
fistp
outs
in
cdq
jp
push
(bad)
fild
push
test
cdq
in
adc
inc
pusha
fist
jmp
jno
xor
dec
pop
(bad)
icebp
push
jb
icebp
dec
shr
cmp
rol
adc
lea
loope
in
lds
jno
ss
xchg
fdivr
xchg
adc
cld
mov
mov
pop
rcr
cmp
out
mov
or
pop
mov
popa
mov
pop
jmp
mov
(bad)
jb
cmp
retf
scas
xchg
xor
outs
sbb
(bad)
cmp
and
ins
push
sbb
fimul
int
inc
jmp
ins
and
xor
or
aas
pusha
data16
retf
test
cwde
push
fwait
mov
loope
repnz
push
mov
(bad)
sub
jle
cdq
or
cs
add
push
rcl
ret
pop
call
pop
mov
aas
inc
loopne
shr
add
sbb
mov
inc
mov
push
das
fwait
cmp
loop
add
int
ins
mov
arpl
jne
sub
je
enter
adc
add
sbb
arpl
and
or
mov
dec
sub
adc
movs
fldenv
inc
ficom
retf
mov
gs
shl
out
and
mov
in
sub
mov
or
cmps
repz
cld
fld
fsub
dec
push
cdq
pushf
int
mov
out
adc
repz
sbb
(bad)
enter
clc
popf
inc
repnz
dec
dec
je
xor
and
and
es
jg
or
adc
fidiv
std
jnp
inc
loope
mov
adc
cli
hlt
adc
mul
mov
jnp
(bad)
mov
ret
loope
daa
and
inc
loope
mov
mov
xchg
mov
stc
outs
sub
xor
and
pop
cmp
inc
inc
cmp
push
dec
push
cmp
jno
mov
(bad)
in
in
sbb
dec
fbstp
jmp
popf
cmps
mov
neg
stc
sub
(bad)
in
jbe
inc
mov
jno
iret
push
movs
cmp
fisub
stos
push
xchg
out
add
scas
sub
mov
out
pop
scas
xchg
dec
jp
js
cmp
sahf
mov
aaa
das
das
retf
shl
dec
sti
jle
mov
mov
cmp
mov
rol
dec
sar
xor
out
dec
or
leave
adc
and
fdiv
adc
loopne
mov
adc
pop
mov
sbb
rol
(bad)
pop
pop
int
pop
add
push
push
inc
das
js
ret
inc
cli
mov
adc
push
out
sub
imul
ins
and
scas
inc
into
xchg
scas
or
jmp
iret
push
movs
sbb
mov
pop
int3
icebp
or
mov
add
nop
jne
xchg
cmp
push
dec
dec
dec
push
xor
push
xor
pop
out
mov
or
xor
add
fsub
jb
xor
test
out
(bad)
push
movs
rcr
push
jno
jne
mov
repnz
and
jg
loopne
mov
and
sub
inc
outs
stos
js
daa
addr16
les
sub
fdiv
xor
or
xor
xor
bound
les
add
dec
mov
enter
stos
(bad)
(bad)
cld
imul
call
or
in
sbb
test
jecxz
cld
in
dec
out
outs
push
lods
fldcw
jnp
mov
in
jmp
dec
cmc
pop
shl
aad
cwde
inc
add
dec
push
fbld
loope
inc
and
mov
leave
clc
cmp
lea
popa
aaa
(bad)
adc
cmp
(bad)
push
mov
xchg
or
jmp
cli
lock
cmp
pop
fidiv
pop
jo
fidiv
add
fs
cmp
sbb
and
mov
mov
pop
mov
leave
cwde
gs
mov
ins
mov
push
das
das
xor
cld
cmc
(bad)
aaa
in
pop
jns
dec
aaa
mov
lahf
je
mov
ss
mov
dec
mov
aas
jmp
push
jmp
cdq
pop
aad
mov
js
js
push
xor
(bad)
loopne
sub
dec
xor
mov
out
lock
or
repz
dec
pop
aas
out
cmp
imul
std
popa
popa
imul
dec
xor
rol
ret
call
jbe
call
sbb
cs
lock
nop
adc
repz
pusha
jb
jle
scas
push
and
xchg
jae
add
xor
dec
cmp
mov
cli
or
movs
jae
fs
pop
push
push
inc
cwde
add
and
ficom
or
pusha
mov
loop
dec
cmp
fwait
xchg
(bad)
mov
out
or
mov
out
mov
aas
jns
(bad)
mov
mov
xchg
mov
xchg
clc
cmp
cwde
add
out
mov
(bad)
dec
xor
int
or
xchg
fcom
push
sub
or
sbb
add
jne
xor
cmc
mov
sub
(bad)
int3
dec
adc
ret
xor
call
sub
cs
std
lock
in
xor
test
push
mov
xlat
xor
pushf
outs
nop
jmp
repnz
test
in
das
push
push
cmp
rol
and
mov
out
fmul
xchg
or
cmp
loope
sbb
ret
nop
pop
push
hlt
not
mov
mov
cmp
pop
ret
fst
xor
imul
sti
nop
cmps
(bad)
repz
pop
inc
sbb
es
xchg
pop
mov
mov
push
test
mov
js
nop
cmps
call
hlt
outs
jbe
add
ins
shr
ss
jnp
retf
jmp
sub
out
cmp
stc
scas
jno
push
mov
cmc
xchg
nop
mov
add
int
pusha
push
inc
push
xor
jg
test
es
lahf
movs
inc
jle
daa
push
jp
leave
pop
xor
int3
iret
ret
lahf
ja
cmps
outs
adc
lods
dec
pusha
das
push
(bad)
pop
dec
mov
stos
enter
les
push
sub
stos
aad
pop
mov
mov
push
sbb
push
add
cli
mov
pop
pop
cdq
pop
and
add
loope
pop
repz
jne
cmc
xor
or
out
push
bound
fld
fwait
adc
push
push
out
jbe
push
lock
rcl
xchg
cli
pushf
mov
in
add
push
sub
mov
ds
ja
and
jecxz
inc
mov
mov
jge
cmp
push
sbb
add
mov
mov
(bad)
sub
cmc
sub
push
jb
or
jl
data16
sbb
rcr
cmp
jecxz
cdq
repnz
cmp
mov
fcomip
jbe
mov
ins
dec
inc
mov
push
mov
ret
call
pop
aas
(bad)
(bad)
loopne
scas
inc
pop
mov
xchg
mov
out
out
or
out
mov
fnstcw
mov
data16
or
cmps
retf
xor
lods
dec
in
outs
(bad)
add
and
in
outs
cmp
jmp
rcr
call
inc
leave
lods
inc
mov
clc
add
call
sbb
adc
ds
pop
pop
dec
bound
cmc
fidivr
and
mov
lea
leave
mov
fiadd
mov
pop
jbe
pop
adc
push
adc
les
in
loop
push
jge
lods
rcr
pop
(bad)
push
mov
rcl
test
or
or
fwait
sahf
ror
jl
lods
mov
pop
call
inc
pop
ja
clc
adc
adc
push
(bad)
movs
adc
scas
stos
inc
push
xor
shr
adc
loop
fwait
js
mov
mov
(bad)
xchg
pop
mov
cmps
xchg
(bad)
add
sar
adc
xchg
jg
push
inc
popf
mov
adc
cs
jbe
inc
test
sbb
ds
xchg
push
add
pop
scas
mov
ja
mov
xchg
add
cs
mov
pop
inc
jl
nop
xor
aas
xor
inc
fist
mov
adc
pop
jge
push
icebp
mov
sbb
ss
dec
int
mov
xlat
mov
les
mov
aad
inc
outs
xor
pusha
cmp
sbb
push
jns
push
fild
adc
outs
dec
sbb
ins
pop
jne
(bad)
hlt
lock
retf
outs
test
test
leave
mov
xlat
xchg
mov
hlt
sahf
jb
and
sbb
retf
inc
lea
jae
mov
push
sar
and
mov
ror
dec
or
xchg
out
pop
pop
xlat
loop
daa
cs
mov
mov
mov
sar
add
out
sbb
push
mov
pop
adc
dec
dec
leave
jmp
push
call
xor
das
dec
dec
aaa
pop
sub
add
cli
mov
add
push
cmp
push
or
mov
xchg
mov
pop
cmc
and
leave
outs
xor
jmp
mov
jg
test
xchg
push
iret
or
fs
out
(bad)
sahf
jg
mov
(bad)
fnsave
sub
jl
jle
js
xchg
stc
ret
xor
add
dec
mov
sub
adc
adc
cdq
cmp
idiv
int
dec
inc
fmul
arpl
mov
inc
inc
jle
pop
add
loope
aad
sar
jne
mov
leave
push
xor
pop
rcl
lea
push
call
sub
cmp
stos
popa
test
js
pop
mov
fld
push
sub
cmp
pop
cmp
push
lods
fadd
and
sahf
scas
or
cmc
xor
sub
or
mov
daa
xor
adc
clc
sar
addr16
movs
mov
lds
ficom
sbb
push
and
pop
sbb
jle
mov
mov
in
adc
fistp
dec
adc
and
push
dec
jecxz
es
lds
out
mul
int3
loope
fstp
cmp
test
push
cmp
mov
dec
sar
mov
xchg
xor
xchg
sti
xchg
pop
dec
movs
sbb
mov
cmp
sub
mov
movs
mov
push
(bad)
push
arpl
outs
cmp
or
jb
mov
xlat
or
dec
pop
retf
jmp
repnz
movs
and
popf
in
adc
mov
imul
sub
mov
fwait
jecxz
leave
into
jo
mov
mov
mov
and
jbe
cmp
sub
jmp
stos
sbb
neg
mov
pushf
int3
pop
cmp
into
sahf
cwde
add
test
(bad)
inc
mov
sbb
in
or
cdq
mov
dec
push
shl
out
mov
xor
xor
inc
cmp
in
test
mov
(bad)
inc
xlat
pop
sbb
(bad)
push
jae
xchg
pop
cmc
pushf
lods
inc
enter
(bad)
fucomip
xlat
cmc
inc
pop
inc
lock
lds
dec
je
fnstsw
add
shr
shl
inc
mov
and
jb
pop
clc
lods
xchg
in
hlt
movs
add
push
je
push
outs
mov
xchg
stos
fsubr
xor
std
pop
repnz
pop
sahf
js
pushf
push
dec
mov
mov
(bad)
dec
jo
sbb
out
push
sub
add
cld
(bad)
cmp
cwde
push
scas
push
test
push
and
cmp
xchg
sahf
push
lock
xlat
jp
pop
std
sbb
mov
cmp
popa
push
stc
mov
adc
es
mov
xor
or
outs
jle
(bad)
cmp
jno
push
mov
mov
repz
(bad)
push
cmp
and
ss
ins
jb
test
pop
nop
sub
out
cmp
mov
cmp
xor
cdq
add
adc
mov
pusha
(bad)
inc
xor
out
outs
push
clc
leave
(bad)
in
dec
inc
inc
dec
dec
push
push
sbb
sbb
sub
sub
aas
das
sbb
int
cmp
or
std
mov
std
jl
sahf
add
data16
movs
mov
mov
jge
ret
mov
es
push
xchg
sar
push
pop
movs
xor
das
jge
xchg
loopne
in
and
arpl
jecxz
cmp
(bad)
and
mov
call
xor
das
adc
or
cmc
jo
push
and
dec
push
xor
ins
icebp
popa
es
inc
jg
popf
mov
xchg
adc
test
pop
and
sub
repnz
leave
inc
or
out
xchg
xchg
pop
das
stc
daa
shr
jo
mov
cld
push
adc
out
xchg
dec
stos
jl
mov
fisttp
repnz
scas
in
and
je
das
loopne
sub
inc
xor
pop
pop
cmp
add
jp
inc
inc
push
jg
aad
jbe
fsub
inc
cmp
push
sbb
call
bound
popa
out
call
inc
add
or
add
sbb
out
mov
xchg
shr
sbb
cmp
push
shl
test
ret
push
sub
xchg
and
xor
sbb
lods
adc
pop
pop
jne
inc
js
dec
and
mov
int3
aad
cmc
test
adc
jne
iret
lods
sub
push
lods
mov
outs
sub
adc
xchg
xor
pop
mov
dec
and
nop
popa
rol
jmp
xchg
mov
leave
popa
adc
or
aas
add
aaa
test
add
cld
test
sbb
adc
mov
icebp
shl
aas
repnz
loop
xchg
test
push
inc
inc
out
ret
lds
shl
cmps
cmp
sbb
jo
adc
test
or
stos
dec
mov
push
jmp
cld
imul
jle
jae
enter
loop
call
mov
mov
cmp
xchg
stos
pop
jp
je
jmp
mov
clc
jae
cmp
pop
jnp
repz
aas
loop
rol
xchg
clc
out
jle
popa
dec
rcr
sbb
jo
cmc
loop
test
xchg
cli
push
add
mov
(bad)
rcl
ss
(bad)
loope
mov
in
inc
push
neg
sub
scas
pusha
sbb
or
cmp
or
mov
cmc
in
jmp
jmp
add
stos
cmps
dec
or
int3
cmp
mov
and
pop
int3
jecxz
(bad)
adc
xchg
pop
jns
xor
adc
adc
sub
inc
mov
lods
popa
and
lods
xchg
push
adc
mov
mov
jmp
leave
sub
pop
mov
cs
pop
(bad)
cmp
pop
gs
fldenv
frstor
mov
cmova
fisubr
push
push
xchg
aas
mov
jmp
sbb
push
xchg
fs
mov
dec
push
fwait
cmp
fistp
dec
mov
mov
xchg
lahf
jb
sbb
and
push
mov
or
add
std
cmp
jg
add
shl
js
adc
xchg
push
iret
add
repnz
cli
les
cmp
je
aas
imul
(bad)
xchg
sub
xor
prefetchwt1
add
test
fmul
sbb
out
xchg
fmul
lods
jg
xchg
xor
jns
adc
nop
sbb
adc
cmc
out
repz
loopne
test
enter
aad
pop
jne
(bad)
sub
pop
push
mov
(bad)
call
push
fisubr
adc
pop
(bad)
fxch
cli
js
into
cdq
jae
aad
pop
pop
outs
pushf
or
mov
test
or
or
or
in
dec
mov
cmc
stc
sbb
sbb
jae
(bad)
mov
rcr
jno
and
mov
ins
das
ret
sbb
stc
js
mov
xor
retf
pop
mul
mov
add
stos
and
int
jl
stc
aam
mov
and
sbb
mov
mov
int
push
push
inc
pop
sub
ds
xchg
in
lahf
pop
test
inc
idiv
mov
cmp
rcl
stos
mov
xor
sub
push
cmc
pop
das
loop
or
shl
pop
pop
std
jns
push
sbb
mov
jne
jo
adc
dec
mov
adc
fmul
push
pop
pop
nop
xchg
mov
aaa
jmp
inc
das
out
jge
inc
repnz
out
test
popa
pop
cmp
push
pop
jb
sub
cdq
(bad)
pop
mov
lock
retf
sub
xor
xor
into
pop
mov
inc
and
(bad)
mov
jae
mov
push
mov
shr
neg
jp
idiv
stos
mov
outs
pusha
rcl
jmp
mov
fsubr
jl
push
mov
addr16
xlat
jne
jge
cmps
dec
add
pop
pop
clc
adc
cwde
and
mov
pop
cmps
push
adc
pop
nop
fist
jp
jns
inc
and
stc
out
loopne
pop
jo
jmp
call
add
jmp
retf
mov
lahf
in
leave
int3
dec
movs
or
popf
xlat
hlt
lods
jge
ins
mov
xchg
pop
and
scas
ret
aam
stos
das
movs
mov
ja
cmp
repnz
fimul
retf
mov
sub
add
neg
mov
inc
mov
inc
jecxz
hlt
inc
call
(bad)
lock
and
push
scas
test
xor
cdq
in
lods
clc
lods
int
add
cwde
cmp
pop
pop
out
(bad)
loope
or
mov
retf
test
mov
aaa
sub
movs
(bad)
ror
lahf
js
clc
and
mov
dec
pop
cmp
or
mov
jmp
outs
add
daa
cmp
cmp
sub
push
push
aam
aaa
idiv
mov
or
sbb
fmul
(bad)
cld
and
mov
fwait
std
cmps
mov
jecxz
lahf
fistp
test
out
adc
lock
mov
mov
or
push
repnz
mov
xchg
test
push
dec
xchg
fwait
push
aas
pop
xor
lock
push
or
push
and
inc
xlat
or
sti
jo
jg
repz
retf
pushf
clc
(bad)
pusha
xchg
in
movs
sar
push
pop
mov
outs
or
mov
(bad)
and
enter
adc
xchg
retf
and
mov
sub
popf
dec
dec
lea
add
(bad)
imul
in
ret
movs
jae
jnp
ss
push
push
nop
mov
pop
dec
inc
add
jae
hlt
xchg
fnsave
dec
fdiv
sbb
push
lods
loop
mov
mov
add
jl
inc
lods
and
out
pop
dec
pop
sub
inc
sar
int3
mov
sub
ss
test
cli
cld
outs
je
fsubr
pop
push
clts
cmp
push
add
ret
pop
or
mov
int
popf
loopne
loop
sub
mov
loopne
pushf
or
push
fdivr
setg
adc
rcl
in
arpl
add
adc
test
lock
jp
cmove
mov
push
pop
xlat
ret
repnz
jp
mov
test
arpl
rcl
dec
pop
sysenter
push
test
jno
mov
pushf
sbb
push
fdivp
pop
dec
jne
std
cmp
and
cmps
leave
sub
xchg
push
in
ja
inc
cs
pop
pushf
xchg
or
pop
out
rcl
sbb
xor
mov
adc
mov
sbb
fld
(bad)
jmp
(bad)
pop
mov
arpl
es
and
cmps
mov
fwait
in
cmp
das
in
mov
sti
(bad)
scas
pop
xchg
jnp
push
jmp
out
mov
movs
scas
and
mov
cld
adc
pop
sub
pop
xor
imul
mov
retf
popa
ss
std
js
xlat
retf
mov
mul
fadd
fiadd
inc
jg
and
fist
in
mov
movs
aam
sub
ret
push
jmp
dec
pop
sbb
dec
jae
pop
or
jl
xchg
push
iret
and
adc
xor
lods
cmp
leave
xor
icebp
jl
jbe
lock
jl
mov
mov
xor
movs
mov
jmp
fld
nop
jmp
sar
inc
popa
add
mov
push
pop
sub
add
imul
std
fild
jecxz
icebp
mov
push
aas
adc
out
call
mov
lock
sub
cld
add
in
mov
cmp
xor
mov
mov
mov
sub
inc
add
fcmovnb
aaa
call
mov
call
aam
mov
call
das
inc
inc
cmp
sub
fnsave
hlt
ficomp
out
inc
xchg
mov
ret
inc
cmps
push
adc
push
adc
push
gs
cmps
mov
sti
aaa
in
into
mov
xor
inc
xlat
out
stos
or
shl
lds
jns
iret
lea
mov
sbb
(bad)
test
cmps
sub
inc
test
(bad)
xchg
imul
xor
push
les
clc
and
sbb
rol
mov
xor
jb
jae
pop
fidivr
das
cmp
jp
shl
adc
push
mov
xchg
jbe
push
inc
cmps
xor
add
cmp
or
repz
adc
mov
inc
ss
adc
add
mov
inc
jbe
je
lds
mov
xor
and
jp
pop
xchg
es
ret
sbb
xchg
mov
int3
loopne
stos
int3
push
loopne
push
movs
sub
or
lds
in
lahf
and
ret
or
adc
push
or
xor
xchg
cdq
inc
enter
jo
in
inc
sub
sub
leave
xor
adc
(bad)
sti
xchg
repnz
push
lahf
lock
cmp
hlt
mov
ins
xchg
xchg
xlat
arpl
jle
push
xor
xchg
test
aam
inc
add
aad
js
add
and
xor
dec
ds
leave
fsin
sub
cmp
movs
stos
jns
sub
pop
cmp
dec
sbb
je
cmp
popa
gs
loop
fwait
cmp
inc
mov
mov
mov
and
dec
inc
(bad)
adc
and
pop
sbb
and
dec
jnp
sub
dec
cs
retf
out
(bad)
push
mov
arpl
fs
jge
(bad)
mov
call
dec
or
adc
mov
fnstcw
cmp
lock
pusha
mov
std
sbb
es
ins
pop
pop
(bad)
ficom
mov
iret
std
xchg
clc
loop
mov
add
pop
pop
fistp
clc
cdq
sub
cmp
mov
inc
ins
dec
mul
sbb
bound
fld
sbb
stos
jo
push
cmp
or
test
mov
mov
push
adc
sub
dec
cdq
sbb
push
popa
loop
arpl
xchg
stos
cmp
fldenv
fild
movs
out
sub
(bad)
push
fidivr
dec
jg
or
adc
push
lea
pop
push
push
lds
jmp
mov
mov
shr
js
and
fisub
cmp
mov
push
icebp
jns
mov
add
loop
or
or
mov
ins
rcl
fsubr
gs
or
cmp
dec
out
sbb
pop
mov
or
enter
mov
les
jnp
jae
sub
out
iret
rol
aam
push
out
mov
les
or
mov
loope
mov
(bad)
xchg
mov
sar
sub
mov
adc
daa
scas
and
jae
dec
cmps
adc
sbb
fwait
push
cli
fadd
(bad)
and
loopne
lods
fwait
leave
enter
xchg
test
cli
jge
pop
test
push
inc
dec
les
data16
(bad)
jne
cmp
je
and
inc
fld
pop
sbb
dec
sbb
test
movs
xchg
out
sub
pop
push
div
sub
xor
adc
mov
ins
retf
shl
jmp
or
test
pop
fs
xor
movs
nop
mov
int
push
rol
sbb
mov
sar
adc
call
lods
lock
lahf
inc
sub
push
cdq
stos
in
fninit
and
push
fnstenv
push
add
sbb
pop
loopne
sbb
cmps
sbb
mov
inc
repz
jge
mov
sbb
jns
inc
sbb
fstp
dec
stos
in
stc
cld
ins
pop
stos
mov
dec
dec
jmp
lods
or
jp
fld
call
fild
(bad)
jecxz
push
pop
xor
xchg
mov
call
cmp
push
adc
mov
or
fiadd
movs
(bad)
mov
jbe
dec
jnp
(bad)
and
inc
dec
stc
les
push
xchg
xchg
and
pop
lock
jo
and
enter
ret
add
push
ins
mov
sbb
(bad)
push
imul
inc
adc
ins
(bad)
nop
cwde
add
inc
jbe
imul
scas
cmp
jne
stos
jb
push
enter
push
ret
addr16
and
push
psrld
fwait
cmp
push
xor
fcmovbe
cmp
jmp
mov
or
fild
mov
push
jle
shl
and
mov
pusha
xlat
aad
cmps
stos
pop
cmp
add
aad
popa
into
mov
shr
(bad)
xlat
ss
mov
outs
jae
jb
jle
mov
fimul
loopne
and
popa
out
push
(bad)
hlt
xor
add
sbb
out
or
adc
shl
repz
cwde
mov
jmp
dec
sub
cmp
inc
in
pushf
icebp
lea
int
push
dec
xchg
(bad)
test
mov
icebp
push
xor
scas
push
mov
adc
add
mov
adc
xor
xor
cmp
inc
xchg
mov
or
js
je
inc
xor
xchg
adc
int3
out
lahf
nop
push
mov
(bad)
or
(bad)
mov
adc
cmps
loope
imul
xor
push
aas
add
arpl
cmp
add
jno
cmc
adc
data16
dec
mov
arpl
or
xchg
call
push
faddp
push
aam
cmp
dec
stos
or
push
mov
popf
mov
cvtps2pd
repz
ror
pop
cwde
xlat
xchg
xchg
push
clc
pushf
push
cwde
xchg
dec
jo
daa
fst
and
js
mov
out
mov
cmp
pop
das
or
xor
icebp
push
jbe
xchg
adc
clc
shr
mov
dec
fld
push
inc
xchg
mov
(bad)
sub
out
repz
mov
push
xchg
or
cmp
test
or
popf
sub
sbb
leave
shl
test
mov
cdq
ret
adc
call
clts
xchg
popf
lods
xchg
bound
inc
out
sub
lds
or
idiv
hlt
mov
mov
std
dec
iret
and
push
sub
fiadd
dec
jne
mov
popa
or
bound
mov
(bad)
(bad)
aam
sti
xchg
cld
add
fild
jg
mov
sbb
xchg
cmp
mov
mov
les
mov
outs
jge
xchg
xchg
faddp
jne
jno
cmp
leave
add
and
xchg
jns
ins
addr16
inc
pop
bound
mov
leave
sub
das
out
movs
mov
bound
jbe
(bad)
ins
mov
mov
in
mov
add
lods
pop
aam
pop
pop
test
out
std
(bad)
cmp
stc
adc
in
lods
jg
xchg
sbb
push
sub
inc
(bad)
shl
push
(bad)
jmp
xlat
push
inc
pop
aaa
rol
dec
fisubr
pop
add
(bad)
test
(bad)
jbe
cs
mov
adc
addr16
(bad)
push
inc
sbb
mov
xor
and
loope
mov
out
push
movs
cdq
adc
out
ins
pop
push
aaa
ins
sbb
jmp
xor
cs
push
or
push
xlat
fadd
rcr
mov
add
xor
xchg
int3
rcl
pop
inc
mov
shl
ret
hlt
pop
repnz
stos
sub
vaddsubps
sub
gs
repnz
mov
mov
xchg
mov
xchg
sahf
call
sub
test
in
popa
cmp
dec
add
enter
dec
xlat
inc
call
cmp
sub
adc
shl
lea
into
mov
xor
cmp
pop
fcmovu
(bad)
(bad)
xchg
xchg
in
scas
pop
iret
inc
inc
push
fcom
movs
inc
add
push
and
out
stos
push
pop
cmps
or
movs
(bad)
xchg
pushf
mov
xor
imul
and
inc
xlat
or
movs
mov
mov
fidiv
xchg
mov
push
add
mov
jae
lods
add
jns
test
and
lahf
repz
fidivr
mul
or
sub
jns
mov
push
jmp
pusha
stos
inc
and
(bad)
inc
loopne
push
jecxz
and
sar
js
push
add
movs
xchg
daa
stos
xchg
xchg
sbb
pushf
pop
loope
ret
push
mov
cmps
call
mov
pop
rol
bound
les
jmp
inc
nop
pushf
mov
icebp
mov
pop
mov
sbb
jmp
xchg
sub
leave
xchg
mov
aad
mov
das
adc
sbb
jnp
cmp
repnz
in
(bad)
ret
in
pop
aas
(bad)
mov
push
es
dec
and
lock
lock
mov
das
lock
jge
arpl
mov
jl
mov
fist
xchg
mov
sub
sbb
lea
test
cmp
lock
outs
scas
ss
cmp
cmp
jmp
cs
xchg
and
aas
retf
pop
jecxz
ret
or
ror
leave
retf
in
cld
mov
push
jle
push
pusha
mov
aam
inc
and
clc
push
pop
xor
lock
inc
push
and
mov
cs
pop
xchg
hlt
(bad)
in
sahf
add
jmp
push
test
pop
inc
inc
mov
inc
inc
mov
or
inc
push
xchg
out
xor
in
fdivr
cmp
dec
gs
push
adc
arpl
push
cmp
push
jge
inc
fadd
or
pop
icebp
stos
fwait
ret
push
out
cld
jp
dec
test
mov
jb
cli
aas
or
lock
rol
out
scas
or
pop
pop
mov
mov
push
movs
lock
adc
push
ins
loope
sub
jns
mov
loopne
lock
inc
fbld
xor
push
sbb
int3
mov
xchg
add
sbb
sbb
add
cdq
stos
sub
cmp
dec
sub
bnd
xor
xchg
and
sub
cmp
adc
je
mov
scas
shl
mov
push
in
inc
into
pop
mov
mov
mov
fstp
push
mov
or
cmc
add
xor
add
push
xchg
mov
or
pop
or
dec
xor
dec
ja
xor
icebp
mov
sub
dec
nop
(bad)
mov
out
push
aaa
jmp
xchg
mov
push
mov
mov
mov
dec
mov
sbb
scas
sub
cmp
push
jo
mov
mov
pop
mov
data16
adc
jle
pop
sub
je
add
and
or
rcr
iret
mov
cs
scas
lock
add
xchg
loop
xor
loope
inc
stos
idiv
jns
mov
mov
xlat
mov
adc
leave
aaa
mov
ss
push
in
mov
mov
jb
push
pop
inc
movs
clc
lea
xor
fsubr
loopne
cmp
leave
hlt
pop
mov
xchg
adc
and
or
jl
mov
test
mov
(bad)
fiadd
les
cmps
jb
sahf
movs
adc
pop
xchg
call
and
rol
and
aaa
inc
dec
and
sbb
leave
call
sbb
das
add
jne
fbld
mov
jp
jl
push
pusha
mov
fiadd
dec
loop
ror
sub
and
push
mov
inc
inc
adc
pop
js
(bad)
pop
mov
cld
js
cmp
clc
fnstenv
sbb
xor
push
cmps
sub
pop
(bad)
(bad)
dec
mov
mov
loope
push
cmp
cmp
or
pop
dec
fwait
push
adc
aad
pop
mov
inc
xor
sbb
or
(bad)
std
ja
iretw
out
int
add
mov
add
sti
add
inc
cmp
inc
lds
fistp
cmp
lahf
mov
cmp
dec
and
cmp
or
aad
mov
call
jae
shr
mov
mov
adc
cmp
adc
dec
mov
sbb
jmp
jns
aad
hlt
push
stos
imul
inc
or
mov
rcl
pop
jb
push
call
stos
cmps
cmp
xchg
xchg
aad
push
or
or
inc
les
es
scas
std
data16
xchg
adc
(bad)
mov
movs
outs
sub
frstor
cmp
popa
xlat
jg
or
jmp
cs
popa
ds
ins
loopne
in
rol
mov
into
lods
or
push
mov
ss
add
push
mov
sub
scas
mov
ja
inc
sbb
xor
fidiv
inc
mov
int
push
call
mov
mov
das
jecxz
pop
hlt
push
push
cwde
in
or
aad
pusha
jne
div
mov
mov
adc
sbb
inc
imul
repnz
or
fimul
fisub
hlt
adc
jmp
mov
mov
xor
mov
outs
push
push
mov
pop
and
loopne
jno
cld
daa
push
into
gs
pop
in
fcomi
cmp
(bad)
ins
pop
push
push
test
je
xchg
mov
jecxz
sbb
and
or
mov
jae
or
push
mov
and
inc
push
pop
out
inc
ja
mov
adc
sti
dec
retf
mov
sbb
xor
(bad)
movs
xor
js
and
repnz
pop
pop
in
cdq
int3
and
or
stos
mov
js
scas
ds
sbb
and
or
xchg
pop
push
add
add
push
cmp
mov
mov
mov
sub
adc
mov
mov
in
shr
jne
xchg
xor
cmps
sbb
fwait
mul
repz
lock
lods
xchg
cmp
test
or
imul
mul
or
gs
dec
mov
sub
cmp
adc
es
outs
push
and
sbb
cmps
es
data16
and
jle
cmp
inc
call
cmps
mov
mov
imul
jmp
dec
mov
gs
pop
cmps
loope
pop
cmp
pushf
pop
ret
retf
int
push
cdq
in
jnp
fidivr
pop
sub
xchg
mov
xor
mov
and
mov
pop
cmp
outs
push
sbb
mov
inc
mov
shl
sbb
or
test
fild
and
je
mov
xchg
shl
scas
mov
push
push
call
icebp
cmc
ret
bound
stc
scas
sub
jp
sbb
mov
stc
mov
add
(bad)
repnz
dec
inc
iret
scas
fcomip
fisub
push
int3
les
jnp
ins
popfw
xchg
or
arpl
fsubp
sbb
jne
loopne
or
add
inc
lahf
pop
loop
inc
ret
repnz
or
pop
enter
aam
retf
inc
sub
jle
pop
loop
iretw
inc
mov
outs
(bad)
push
enter
mov
or
repz
int
add
mov
out
sbb
mov
cmp
and
mov
(bad)
nop
cs
in
mov
mov
inc
icebp
or
fdivrp
out
pop
dec
jb
call
test
pop
loop
stos
dec
ins
js
(bad)
jne
call
lods
inc
push
test
ret
mov
sar
es
mov
add
nop
dec
jg
mov
psrlw
add
or
and
in
cmp
jnp
jmp
lock
cdq
cmp
loope
pop
test
cmp
pop
lods
aad
inc
iret
stos
test
push
ds
jmp
test
adc
jne
and
jb
mov
pop
cmp
mov
cmc
imul
adc
int
xchg
sbb
dec
lods
mov
cmp
cs
or
hlt
stc
jmp
mov
in
(bad)
jmp
test
push
add
sbb
test
bound
add
push
hlt
imul
mov
(bad)
inc
iret
scas
ret
pop
rcr
ret
int3
fidiv
xor
arpl
iret
pushf
xlat
popf
mov
nop
lods
cmp
lock
inc
bound
mov
mov
ja
out
inc
daa
clc
loopne
jo
sbb
dec
sub
push
dec
hlt
fistp
pop
into
sub
fsub
inc
and
inc
jecxz
sbb
arpl
or
adc
mov
and
mov
imul
outs
inc
imul
jo
mov
cli
aam
fist
sar
inc
cmp
sbb
cdq
pop
add
dec
ror
mov
int
or
fdiv
xor
int
retf
icebp
addr16
std
and
loop
pop
mov
jbe
data16
and
mov
les
es
repz
jmp
std
mov
mov
sub
out
xchg
mov
repnz
vucomisd
push
mov
pop
mov
pop
into
call
sub
mov
fsubr
mov
pop
adc
cmp
fsubr
mov
dec
jl
out
in
sbb
in
mov
jnp
(bad)
cmp
mov
jp
enter
sbb
mov
cmps
leave
cmp
mov
jno
sbb
mov
push
loop
dec
ins
out
subps
inc
int3
lock
sub
mov
icebp
inc
pcmpgtb
cmps
stos
add
mov
mov
sbb
out
inc
test
sub
(bad)
jae
pop
sub
jg
add
repnz
mov
xchg
mov
cmc
test
sbb
std
sub
aaa
test
push
lods
(bad)
lods
mov
in
or
sbb
movs
mov
dec
aam
stc
in
stos
outs
in
xchg
xorps
mov
pop
sti
push
xlat
lods
jl
inc
sti
sbb
nop
inc
std
imul
xchg
push
dec
scas
push
icebp
cmp
lds
inc
pusha
mov
mov
and
adc
rcl
or
mov
aam
push
pop
cmp
shl
push
pop
jbe
stos
retf
jp
lods
jne
push
not
test
add
mov
pop
xor
dec
mov
or
bound
mov
sub
cmp
or
jg
ja
push
sti
push
movs
push
hlt
mov
jo
(bad)
xlat
adc
ins
sub
(bad)
into
mov
pop
imul
mov
sar
repnz
pop
mov
jbe
sbb
mov
arpl
push
or
cdq
jle
mov
data16
mov
repnz
xchg
imul
mov
retf
push
adc
xor
adc
pop
xor
lahf
mov
hlt
dec
jg
xlat
data16
dec
mov
dec
lods
shl
jl
mov
push
xchg
and
dec
nop
aam
addr16
(bad)
cli
xchg
out
test
adc
imul
jmp
or
mov
cwde
sbb
adc
loopne
cmps
sti
aam
stos
pushf
fistp
jg
push
mov
icebp
clc
lahf
rcr
push
inc
cmp
and
xlat
(bad)
js
push
mov
cmc
sbb
or
movs
inc
je
mov
cmp
in
ins
adc
push
xor
mov
cmp
das
and
dec
icebp
jns
push
cmp
jl
mul
pop
hlt
aad
sbb
scas
inc
dec
(bad)
adc
sub
push
push
push
mov
sub
je
pop
in
push
sub
mov
loop
inc
cmp
into
add
or
cmps
lods
mov
cmps
outs
push
add
sub
popa
inc
dec
mov
popa
pop
outs
inc
in
jle
xor
push
daa
pop
mov
cdq
sbb
mov
adc
push
xchg
outs
adc
xlat
idiv
pusha
es
in
dec
test
jmp
push
cmps
mov
jg
jo
sti
mov
adc
jnp
icebp
mov
jmp
out
pop
in
xchg
jae
add
sub
xor
fidiv
hlt
jmp
je
and
test
mov
sbb
daa
clc
cmp
hlt
cmp
cmc
sub
sti
xchg
lock
popa
cmp
sti
add
or
mov
mov
cld
out
iret
xor
fidiv
cmp
dec
sbb
cmc
jp
xor
in
mov
imul
or
jns
pop
pop
jg
cmps
add
ins
jnp
add
pop
in
loopne
movs
int
or
out
dec
inc
and
xchg
lahf
enter
scas
cmp
sar
into
or
xor
jecxz
test
lods
inc
mov
out
mov
sub
pop
xor
xchg
in
add
test
push
push
sub
pop
ret
pop
xor
fld
dec
out
test
mov
jmp
sbb
icebp
mov
ret
add
cmps
cmps
fsub
jmp
add
call
(bad)
mov
xor
xchg
out
xchg
fist
iret
aaa
mov
mov
(bad)
(bad)
jbe
(bad)
out
repz
leave
dec
inc
mov
cmps
lock
jns
(bad)
out
scas
(bad)
jbe
xchg
adc
es
popf
sub
aad
mov
inc
push
test
cmp
ins
addr16
ret
aaa
cmps
(bad)
sub
push
aad
cli
mov
sbb
cld
call
lahf
cli
cmp
jge
call
pushf
or
in
pop
stc
loope
stos
dec
lods
or
inc
xchg
jo
popf
xor
mov
mov
scas
jecxz
loop
imul
imul
ins
jge
js
xor
pop
ja
sti
xor
std
mov
movs
push
lock
or
inc
in
das
mov
dec
inc
mul
test
popa
(bad)
xchg
test
mov
out
aad
push
ds
dec
ret
pusha
inc
in
mov
add
or
pop
sbb
imul
out
pop
bound
fidiv
retf
sbb
jle
icebp
xor
das
fcom
imul
push
lds
mov
pop
rcr
aaa
iret
(bad)
xchg
repz
lods
ss
or
mov
sar
fdiv
std
(bad)
xchg
cmc
mov
addr16
mov
sub
pop
rol
aad
mov
std
pop
cmps
cld
(bad)
arpl
dec
nop
dec
test
ja
movs
sbb
std
pop
repnz
cmps
movs
push
test
mov
xchg
inc
or
sets
out
imul
inc
jbe
xor
inc
in
retf
and
pop
(bad)
sbb
add
bound
cmps
mov
std
mov
cmps
sub
pop
push
inc
lahf
mov
mov
shl
xor
cmp
cmp
ficomp
and
dec
mov
xchg
aas
(bad)
pop
call
mul
mov
outs
sbb
int3
or
adc
dec
dec
sub
sub
xchg
xchg
and
dec
sub
iret
pop
loop
add
xchg
call
jbe
(bad)
sub
rcr
mov
inc
jle
mov
or
shl
adc
das
rcl
adc
lods
or
cmps
out
nop
xor
and
outs
data16
mov
sub
aas
les
adc
icebp
call
aad
mov
mov
ret
outs
jp
popf
and
xchg
and
test
cmp
retf
pop
inc
and
movs
pop
lock
inc
xchg
push
sbb
push
popa
jno
add
sub
inc
mov
inc
dec
loop
(bad)
into
pushf
xchg
lods
cmp
or
leave
ss
(bad)
ds
sub
pusha
out
scas
push
shl
es
leave
cmp
call
mov
add
xchg
adc
jmp
out
(bad)
mov
xchg
popa
push
mov
jmp
pop
icebp
popf
in
(bad)
rcr
add
and
(bad)
aam
imul
inc
jecxz
or
repnz
xchg
mov
lahf
push
cmc
pop
fst
lock
jne
mov
sub
inc
mov
jge
out
mov
js
bound
add
jecxz
xchg
into
mov
sbb
xchg
rcr
adc
rcr
je
call
or
mov
lods
loope
push
test
dec
xabort
mov
call
mov
(bad)
adc
(bad)
pop
cmp
pop
add
add
xor
pop
add
dec
pop
jmp
inc
sub
mov
bound
aad
movs
mov
jl
xchg
ins
mov
(bad)
ror
adc
xor
xchg
inc
sbb
and
repz
out
pop
mov
cmps
mov
sbb
xchg
mov
push
xor
scas
jns
sbb
dec
adc
push
mov
sub
mov
retf
aas
xchg
movs
(bad)
out
xchg
xor
es
aam
jo
icebp
jno
cmps
int
aaa
inc
mov
xor
mov
mul
lahf
mov
cmp
loop
jle
push
inc
add
xchg
lea
int
dec
loope
lock
scas
push
and
jnp
cwde
test
xor
aam
loope
or
mov
pop
in
pop
mov
push
je
in
popf
test
jl
sub
ins
cmp
cmp
mov
mov
adc
xor
push
jg
shl
jnp
push
sbb
jne
adc
or
jae
dec
add
xchg
mov
xor
pusha
fmul
popa
je
imul
sub
pop
add
enter
lahf
fs
lods
out
sbb
lock
pop
mov
adc
dec
jmp
and
outs
enter
mov
add
jne
push
nop
mov
test
shl
lock
in
dec
and
sub
cs
jge
call
add
xor
retf
sbb
or
add
out
ja
mov
jecxz
jle
repnz
mov
dec
jle
sub
cli
add
mov
adc
out
sub
lods
inc
cmp
ror
mov
rdpmc
(bad)
cmp
adc
and
(bad)
and
pop
cmp
lock
imul
push
shl
call
outs
loopne
add
inc
(bad)
mov
sahf
out
cld
cmc
loop
jnp
mov
(bad)
mov
fstp
adc
call
stos
ins
cmovb
in
jb
arpl
adc
xor
or
mov
push
out
sahf
cdq
iret
or
jle
pop
jno
xor
dec
mov
stos
and
push
sar
xor
sahf
pop
out
push
jbe
inc
cmp
jns
push
jecxz
adc
add
and
add
retf
leave
pushf
adc
in
ret
aad
arpl
mov
inc
mov
pop
mov
xchg
outs
test
jno
repnz
data16
jns
and
push
mov
mov
in
loope
lods
repnz
mul
dec
test
arpl
out
fstp
cwde
mov
and
pop
nop
lods
xchg
adc
sbb
aas
jo
inc
adc
and
mov
xchg
jle
int
ja
out
add
int3
(bad)
push
sbb
pop
scas
mov
sbb
pop
ret
jae
sub
test
or
adc
loope
shr
push
jle
test
mov
jle
xor
sub
push
or
xchg
push
dec
pushf
test
or
and
push
dec
in
push
mov
push
nop
jns
jl
(bad)
mov
mov
adc
sub
std
jo
retf
cmc
push
pop
cmc
push
mul
sar
cdq
mov
xor
xchg
in
or
jp
aaa
xchg
and
loopne
fist
bound
pop
sbb
push
or
sub
fild
add
xor
xor
jge
cmp
mov
ins
sbb
loopne
lods
popa
cmp
or
les
ins
xor
sub
inc
xor
inc
and
mov
jae
inc
and
aam
ret
xor
inc
lock
xchg
adc
call
out
adc
pop
clc
and
mov
jo
inc
push
cs
popa
cli
in
out
and
xchg
lds
sub
movs
jg
imul
adc
gs
pop
stc
ret
nop
in
xor
inc
popa
imul
addr16
add
fs
clc
aam
add
mov
adc
lock
pop
setnp
or
hlt
or
sbb
mov
mov
fild
rcr
xor
ret
imul
mov
das
mov
xchg
pop
cmp
imul
mov
jae
cmp
icebp
outs
imul
pushf
test
dec
and
adc
aaa
xchg
xor
jb
adc
and
mov
cmps
cmps
push
add
or
mov
fistp
cdq
jmp
add
ret
repz
popf
hlt
rcr
call
mov
rcl
mov
or
sti
loope
inc
mov
mov
mov
es
fnsave
mov
enter
stos
imul
comiss
push
xor
arpl
jne
push
add
jo
in
jno
jae
mov
es
fstp
inc
scas
in
add
xchg
out
mov
mov
push
pop
jo
test
adc
cmp
push
dec
or
and
adc
vfnmsub231ps
icebp
adc
cmp
nop
push
and
test
pop
mov
and
fadd
pop
das
jnp
rcl
or
fwait
jmp
mov
inc
mov
mov
loope
cs
es
mov
jbe
repz
jmp
aas
xchg
jg
adc
ret
scas
retf
(bad)
cmc
das
aas
sub
ja
into
fdivrp
adc
pop
addr16
in
xor
sbb
cmc
rcl
cld
idiv
cli
jne
mov
sbb
cmps
jmp
xor
je
add
ins
aaa
mov
les
mov
ds
cmc
popa
test
xor
cld
mov
stos
arpl
push
sbb
or
add
lock
and
pop
out
inc
and
lea
lods
push
add
and
into
ret
sub
imul
bound
imul
xor
mov
pop
pop
sbb
or
jg
add
mov
jmp
call
adc
xchg
or
cmp
not
mov
sub
dec
push
xchg
lds
add
stos
sub
push
jae
push
das
xor
icebp
mov
je
inc
cmp
xchg
or
(bad)
(bad)
cmp
retf
add
and
clc
aas
dec
and
adc
mov
ja
pop
and
sub
xor
mov
(bad)
mul
xor
jg
mov
icebp
mov
movs
pop
test
mov
mov
jbe
sbb
sbb
inc
sbb
inc
xor
(bad)
scas
xlat
push
icebp
sub
popf
aas
loopne
pop
test
scas
repz
cmc
push
pusha
dec
xchg
sub
mov
and
and
inc
in
or
es
imul
push
cmp
out
shl
imul
xor
and
(bad)
sub
and
aaa
in
mov
cld
adc
idiv
out
xor
xchg
fbld
mov
push
adc
or
xchg
jo
loope
pop
call
sub
push
xchg
je
test
hlt
mov
retf
clc
and
pop
push
adc
call
cmps
(bad)
add
fnstenv
jge
fld
cmps
int
(bad)
mov
push
mul
aam
cmp
icebp
mov
jmp
es
xor
sub
or
inc
lahf
add
(bad)
(bad)
sbb
cld
mov
push
sub
or
iret
push
rep
jecxz
cmp
repz
retf
and
aam
test
mov
pop
(bad)
shr
adc
or
mov
and
fcomi
add
pop
loop
lahf
mov
add
arpl
addr16
jl
(bad)
cmp
test
and
mov
sahf
inc
in
(bad)
lahf
add
pop
rcl
loope
mov
add
mov
fistp
mov
movs
cmp
pop
repnz
clc
(bad)
cmp
xlat
mov
jmp
test
or
sbb
pop
jmp
mov
xchg
cmp
mov
cmp
sbb
dec
or
in
adc
jecxz
fist
mov
dec
xchg
mov
lods
lock
push
dec
call
sbb
repnz
xchg
out
scas
add
cmp
jge
bound
fild
icebp
push
scas
and
inc
popf
int3
sub
enter
mov
push
xchg
stos
push
pop
mov
mov
lahf
push
sar
mov
aad
in
pop
test
retf
inc
int3
out
cmp
mov
(bad)
push
adc
cmp
sbb
repz
ss
popf
jp
add
cmps
mov
sbb
sub
cmp
jae
jno
rcr
xchg
xor
sub
push
xor
push
cmc
pop
sbb
mov
inc
push
add
xbegin
xor
xchg
cmps
mov
or
cmps
pop
inc
xchg
(bad)
adc
cli
sar
push
(bad)
mov
ret
dec
icebp
retf
movs
mov
movs
in
mov
add
inc
sbb
stc
int
in
xor
xchg
add
loop
xor
loope
push
movs
push
mov
mov
mov
fsubr
xchg
mov
call
(bad)
ror
rol
mov
sub
gs
call
sub
test
cmc
test
push
not
pushf
in
sbb
test
add
sbb
push
neg
loopne
ja
sbb
jno
cmp
sbb
cmp
xchg
jmp
outs
cmps
push
mov
or
xchg
jns
adc
ss
jg
mov
inc
icebp
stos
dec
out
imul
rol
movs
inc
adc
movs
(bad)
or
xchg
add
mov
jbe
pop
outs
mov
je
add
inc
and
dec
(bad)
xchg
test
icebp
mov
pusha
fcomp
repz
arpl
inc
sbb
les
mov
cmps
xor
sub
mov
xchg
push
cli
cmps
es
push
jne
mov
jb
shl
outs
sbb
or
cmp
daa
add
jp
pop
add
jp
mov
outs
xchg
xor
jno
out
leave
cmp
dec
jns
and
dec
in
sbb
loop
sub
aad
pop
sub
jnp
cli
adc
mul
push
and
pop
out
cs
das
ss
lods
push
icebp
mov
rcr
(bad)
out
rol
loopne
inc
mov
(bad)
arpl
in
adc
add
outs
xchg
repnz
sbb
div
dec
mov
fs
jmp
mov
(bad)
daa
mov
cmps
add
int
xchg
fdivr
loopne
fcomp
mov
stos
mov
sub
das
mov
mov
sub
add
ret
dec
sub
retf
ins
jb
mov
data16
jp
jge
aas
leave
rcr
addr16
adc
fwait
jp
rol
mov
(bad)
mov
ss
outs
loop
mov
mov
pop
ss
jae
and
cdq
sub
bound
jl
push
push
jns
dec
mov
loop
mov
xor
dec
mov
iret
or
adc
jnp
mov
scas
adc
dec
outs
ins
movs
pop
inc
(bad)
(bad)
(bad)
scas
or
xor
mov
(bad)
sbb
cmc
mov
loope
sbb
xchg
test
les
inc
retf
mov
inc
push
aad
jae
add
out
mov
xchg
imul
test
sar
fiadd
jnp
xchg
outs
inc
jge
inc
lods
and
lock
adc
ja
add
push
mov
jb
mov
xchg
jbe
jns
xor
mov
fcom
aas
rcl
pop
lea
fst
icebp
dec
push
cdq
in
mov
rcr
mov
lods
stos
sbb
cmp
xor
clc
xor
push
lds
outs
test
cmp
dec
or
jae
lahf
jae
mov
test
add
cmp
hlt
test
test
test
cmp
ret
mov
pop
pop
push
inc
fadd
xor
mov
bound
rcl
sbb
mov
imul
out
rol
fbstp
int
sahf
(bad)
and
es
and
mov
lods
outs
push
xchg
push
inc
push
in
int
jno
test
nop
pushf
into
stos
out
aam
(bad)
sbb
dec
fist
movs
pop
xchg
or
pushf
mov
xchg
mov
mov
mul
push
popa
dec
add
dec
mov
ja
xchg
repnz
and
mov
sub
fs
xchg
sbb
sub
imul
xchg
mov
fwait
pushf
mov
xor
out
dec
les
data16
out
gs
add
xchg
movs
pop
mov
retf
sub
gs
rol
push
nop
aas
bound
cmp
sbb
jmp
dec
mov
or
push
mov
ins
mov
lock
push
pop
add
aaa
push
and
push
jns
popa
aas
cs
and
es
pop
test
xor
int3
sahf
xlat
cwde
rol
or
pop
push
stc
xchg
das
jge
add
fcom
es
mov
mov
jmp
stos
or
sbb
in
cmp
pop
mov
sbb
push
add
add
cmp
xchg
jecxz
in
sub
scas
pusha
jb
fist
pop
mov
push
xchg
mov
(bad)
sbb
adc
pop
call
lock
jmp
jbe
push
dec
cmp
mov
cmc
in
int3
and
ss
sbb
in
stos
rcr
jmp
sbb
cmps
xor
adc
cld
cmp
cdq
dec
std
jecxz
push
jmp
(bad)
lock
bound
jne
xchg
stc
pop
fnstcw
into
push
push
ret
push
add
jmp
mov
aas
push
inc
aam
push
inc
xor
pushf
cmp
dec
jp
cld
push
jp
pop
xchg
pop
shr
pop
mov
inc
dec
gs
mov
icebp
pop
jnp
lea
cmp
sub
xchg
sbb
iret
push
out
sub
(bad)
mov
push
mov
xlat
push
frstor
push
cmp
fbld
mov
inc
xor
cmps
ds
xchg
jnp
into
out
gs
jle
push
and
sub
jge
idiv
inc
add
imul
jbe
ror
stos
or
lods
sub
inc
pop
movs
retf
in
ss
js
xchg
and
mov
scas
push
pop
and
mov
leave
lods
mov
xchg
int
(bad)
jnp
mov
push
mov
fimul
data16
popf
adc
pusha
sti
shr
push
or
ja
mov
outs
mov
fwait
inc
and
stos
sub
xor
push
mov
xor
shl
jb
aaa
push
out
jo
and
adc
stos
je
(bad)
std
or
lahf
xlat
sbb
inc
sbb
jge
or
rcr
fwait
mov
jl
jmp
test
cmp
jp
pop
jp
sar
cmp
(bad)
in
mov
mov
push
into
sbb
fs
es
lds
cld
sbb
fmul
fdivr
clc
add
std
repz
xchg
or
xlat
stos
jo
sub
fcmovnb
sbb
xchg
mov
pop
mov
and
jmp
gs
test
sub
call
xchg
sub
inc
and
push
jbe
cmp
xor
lods
mov
inc
xchg
inc
jg
mov
ret
aam
in
jl
sar
push
sub
dec
retf
jl
pop
jno
sbb
or
in
jo
fistp
ins
pop
mov
adc
mov
dec
xchg
daa
movs
loopne
sub
add
mov
sub
mov
adc
jg
pop
cmp
xlat
out
inc
inc
cmps
shl
in
inc
scas
inc
push
pop
adc
mov
jmp
ins
pop
repz
stos
xor
jge
push
stos
(bad)
neg
movs
or
jle
out
adc
mov
cld
pop
(bad)
adc
cdq
aas
leave
dec
add
into
cdq
jmp
aaa
xchg
push
add
out
aam
push
hlt
push
xor
xor
cwde
in
out
ins
outs
out
nop
xchg
mov
xchg
xchg
xchg
add
mov
(bad)
sbb
xor
pushf
out
inc
jge
mov
cmp
fmul
ins
ror
ret
inc
je
and
fimul
dec
mov
jne
in
jns
push
or
je
lods
push
mov
sahf
repz
(bad)
out
pop
inc
push
jge
or
fbstp
xor
inc
push
fldcw
ins
jle
icebp
fucomi
add
fcom
shr
mov
mov
pop
mov
lahf
jge
stc
lods
rcr
lea
and
out
stos
je
xor
scas
mov
ss
fst
and
jg
out
(bad)
mov
mov
es
neg
(bad)
adc
xor
xor
xlat
xor
sar
fnstsw
aam
rol
xor
movs
repz
mov
icebp
ret
sub
pop
push
in
mov
call
les
cmp
mov
xchg
jne
into
movs
aam
std
aam
retf
in
add
imul
bound
rol
dec
adc
fidiv
mov
inc
loopne
out
into
outs
jmp
dec
repz
out
mov
mov
ins
stos
iret
mov
pop
cmp
in
mov
jecxz
inc
add
or
aaa
out
in
icebp
lea
scas
mov
cs
int
enter
sub
sahf
int3
jmp
int
fild
add
cli
adc
test
and
add
push
les
sbb
pop
and
push
adc
stos
pop
sti
mov
inc
dec
lea
repnz
sub
pop
xor
lods
in
into
(bad)
mov
mov
pop
scas
sub
jns
ja
icebp
add
add
loop
adc
je
leave
cmp
fwait
or
xlat
mul
sar
add
je
pop
xor
ja
sbb
rcr
aam
movs
xor
jp
mov
cld
test
fdiv
dec
mov
mov
shl
imul
xchg
dec
or
inc
in
pop
jmp
cdq
mov
mov
aam
enter
jp
inc
push
add
sbb
outs
sbb
std
out
cs
movs
or
push
inc
retf
hlt
stc
sbb
dec
and
or
fldenv
dec
inc
add
ja
(bad)
icebp
in
into
les
mov
sub
int
nop
mov
cmp
adc
add
test
pusha
call
adc
adc
inc
es
mov
xchg
lods
(bad)
mov
movs
call
(bad)
retf
repz
adc
int3
push
jns
scas
aad
push
aam
xchg
mov
pop
dec
and
inc
in
in
fadd
fst
add
loopne
shr
rcr
dec
or
or
dec
in
pop
xchg
dec
stos
inc
mov
mov
call
mov
std
xchg
push
push
ins
pop
adc
call
mov
jnp
mov
dec
push
pop
lds
dec
pop
(bad)
or
xor
pop
fs
(bad)
dec
pop
add
outs
fdivr
push
rcl
cmps
cwde
mov
out
lock
push
pop
add
mov
and
popf
js
dec
jno
mov
sub
mov
ins
or
sbb
cld
push
fsubr
scas
xchg
hlt
mov
or
cmp
fadd
mov
loopne
or
ins
cwde
cmp
jbe
cmp
dec
pop
sbb
push
mov
sbb
fcmovu
mov
fisub
test
mov
fisttp
int
mov
repz
push
mov
dec
add
or
bound
lods
test
pop
push
mov
pop
jae
cmp
cmp
push
push
push
pop
cmp
add
loope
cdq
and
inc
outs
lods
in
rcl
sub
push
jns
xchg
cmp
push
mov
jae
push
mov
pop
shl
sbb
xor
ficom
popf
adc
jecxz
int
test
call
adc
aas
mov
shr
js
push
mov
fiadd
ins
(bad)
cmp
cmps
xlat
in
cmps
cmc
mov
stos
hlt
dec
fadd
or
jo
and
add
xchg
lahf
dec
mov
inc
imul
sar
fwait
inc
idiv
arpl
addr16
cld
sbb
add
cld
popf
xor
push
mov
hlt
push
xlat
movs
rcl
out
dec
imul
fmulp
xchg
xchg
out
cwd
sbb
es
arpl
fcom
push
mov
jle
inc
stos
out
cmovae
ins
and
out
cmp
cmps
add
jmp
fiadd
or
sub
pusha
fsubrp
fisub
daa
ret
dec
out
pushf
fsubr
dec
jp
sub
push
jmp
int3
cmp
lods
stos
imul
aam
adc
cmc
jg
out
push
loopne
ds
mov
sar
jnp
ret
(bad)
stc
sub
dec
mov
add
cmp
add
dec
pop
(bad)
mov
clc
(bad)
xor
push
sub
jnp
mov
cmp
mov
push
into
mov
push
out
out
adc
mov
or
in
adc
xchg
imul
jmp
sar
xchg
ds
jl
std
push
stos
mov
gs
mov
xchg
sbb
inc
pop
mov
sbb
test
ins
xchg
test
pop
es
xchg
inc
mov
mov
fcomp
arpl
push
inc
push
retf
(bad)
loope
and
pop
sbb
mov
jmp
into
lods
addr16
add
sti
sbb
test
push
in
das
popf
pop
sub
das
xchg
or
and
xor
pop
enter
je
dec
push
aas
lods
inc
xor
mov
jmp
test
sub
xchg
out
fcmovnb
and
jb
das
iret
jo
(bad)
xor
les
mov
bound
push
dec
mov
inc
fnstsw
fdivr
scas
daa
outs
add
stos
jmp
repz
sub
and
cmp
pushf
jmp
fldenv
sub
imul
jmp
data16
sub
ror
fs
mov
icebp
fldenv
mov
lods
cmps
repz
repnz
stc
push
xchg
jno
out
cli
mov
cmps
test
ins
je
or
push
jmp
mov
test
cmp
mov
hlt
or
pop
shl
adc
lods
inc
ins
xchg
sub
mov
jnp
and
jne
xchg
adc
call
inc
stos
lea
and
pmaxub
inc
in
mov
pusha
ins
pop
das
sub
and
dec
pop
mov
pop
mov
cld
xlat
mov
shr
out
push
aaa
shl
push
lds
pop
fcomp
ins
fdiv
push
cld
leave
xor
scas
call
push
jmp
dec
jmp
mov
(bad)
sbb
sub
pop
push
mov
cmp
xchg
pop
icebp
or
mov
loopne
sar
xchg
mov
in
popa
leave
cmps
cmp
adc
mov
mov
sahf
dec
call
inc
popf
outs
mov
movs
aaa
xchg
mov
ror
std
push
add
out
lock
rol
jle
cmc
pop
add
rcl
fistp
push
outs
pop
scas
pop
mov
sub
bound
shr
out
pushf
and
jo
push
out
add
mov
ins
sub
push
outs
sub
pop
sbb
push
out
mov
hlt
sbb
ins
loop
jne
xor
hlt
or
jge
repnz
and
mov
test
ja
leave
call
adc
push
stc
cwde
lea
fild
sbb
ror
pop
stc
enter
mov
adc
pop
pop
out
retf
adc
pop
adc
xor
and
mov
stos
xor
pop
stos
mov
mov
jmp
(bad)
sub
outs
pushf
rcl
lea
clc
mov
jge
mov
bswap
add
add
scas
outs
shl
in
cmp
aaa
lahf
jg
(bad)
leave
repnz
aam
outs
adc
imul
and
adc
and
xchg
mov
cmp
cmp
fdivr
cs
pop
cs
adc
mov
sbb
stos
fs
ins
xchg
rol
or
and
call
leave
jmp
mov
pop
pop
cmp
ror
daa
mov
call
cmp
pop
dec
mov
push
cmp
dec
jecxz
or
pop
frstor
je
ins
push
dec
ret
adc
jg
jo
bound
fisubr
test
xchg
cdq
push
dec
mov
mov
pop
call
mov
fdivp
sbb
xchg
and
in
sub
mov
mov
fsub
or
inc
xchg
enter
ins
jg
loop
shl
(bad)
adc
xor
inc
mov
add
jae
or
dec
push
loopne
sub
inc
sub
add
dec
dec
or
or
jnp
mov
and
sahf
jge
mov
retf
inc
sbb
inc
cs
aad
ret
adc
jne
imul
rcr
push
pop
sbb
sbb
sub
mov
sub
ins
stos
leave
xchg
shl
stc
mov
xor
(bad)
test
jae
add
cmp
cmc
xor
and
lgs
push
push
call
xchg
lds
or
neg
ret
shl
movs
imul
arpl
and
xchg
pop
out
(bad)
icebp
jnp
jle
scas
push
push
mov
push
sbb
push
cmps
std
lds
cld
mov
hlt
(bad)
cld
test
jp
mov
neg
arpl
mov
lock
mov
fs
in
sub
jg
jg
leave
adc
mov
mov
les
pop
pop
jb
hlt
fidiv
jno
or
jb
xchg
sub
enter
mov
xchg
mov
jbe
add
pop
sahf
std
mov
out
std
xor
xor
mov
push
(bad)
(bad)
adc
jp
jno
mov
xor
jmp
adc
hlt
xor
loopne
pop
jmp
inc
pushf
adc
leave
mov
push
cmp
ins
add
sbb
add
retf
rcr
and
push
jmp
mov
and
gs
mov
mov
sub
ret
daa
out
shl
xor
jmp
shr
jnp
out
mov
xchg
test
jg
inc
aad
dec
sbb
jae
fwait
push
stc
push
out
fldcw
mov
scas
test
xchg
mov
sub
sub
cdq
xchg
xchg
fldenv
mov
in
call
sbb
mov
shl
mov
fisubr
inc
jmp
mov
xchg
lods
xchg
fild
and
pushf
and
adc
repnz
xchg
imul
aam
lods
or
and
pop
inc
adc
mov
mov
movs
mov
pop
xchg
cmps
scas
xchg
xor
loop
iret
clc
jl
ror
push
push
cwde
movs
or
pop
outs
scas
adc
imul
rcl
cmp
mov
push
or
sti
pop
enter
aad
ds
mov
jge
xchg
inc
pop
xchg
jp
cmp
add
fs
adc
dec
ins
les
loopne
retf
sbb
ds
leave
push
jg
xor
icebp
hlt
inc
loopne
bound
(bad)
das
aas
out
push
push
jecxz
jno
movs
cdq
xchg
jp
pop
jne
loop
jge
jecxz
push
neg
aad
xchg
nop
repz
call
jb
out
fld
loopne
ds
arpl
icebp
sbb
jae
xchg
xchg
stos
outs
(bad)
cmps
pop
icebp
xlat
lea
jmp
inc
xchg
hlt
sub
pop
push
imul
fstp
mov
in
sbb
test
jne
sub
js
mov
enter
stos
or
cmp
push
cld
pop
mov
dec
mov
repz
pop
test
pop
imul
lods
add
arpl
pop
mov
test
ja
ret
pop
ins
inc
adc
jno
mov
mov
inc
rcl
pop
in
jp
ret
rcl
mov
loope
cmp
rcl
gs
and
imul
(bad)
mov
popf
push
rcl
ja
jno
fist
std
enter
pop
jo
mov
push
cmp
push
mov
dec
(bad)
movs
sub
pavgb
(bad)
mov
cli
jg
mov
inc
lea
xchg
push
aaa
imul
cmp
(bad)
push
push
ss
pusha
outs
shr
(bad)
cdq
in
sbb
cmp
retf
int
js
scas
or
out
sbb
hlt
dec
aad
into
mov
in
pop
fstp
add
dec
xchg
das
pop
mul
and
add
(bad)
out
in
aam
je
das
int
loope
fwait
and
sar
mov
mov
test
fist
out
mov
inc
stc
scas
mov
jl
mov
lock
cmp
fnsave
pusha
add
sbb
sbb
iret
(bad)
mov
les
jo
rcl
rol
xor
mov
cmp
xchg
and
movs
cmp
xor
in
mov
push
cli
arpl
das
(bad)
push
aas
mov
add
xor
xchg
outs
add
or
enter
movs
add
add
cmp
out
ror
mov
lods
mov
xchg
cmp
int
movs
enter
mov
cmp
pop
or
mov
mov
xor
xchg
inc
cs
test
mov
pop
mov
push
or
dec
fmulp
pop
pop
xchg
inc
cmps
xchg
sub
xor
(bad)
int3
fucomp
sti
int3
mov
call
jl
loopne
jp
ins
or
mov
inc
add
xor
std
pushf
push
sub
pop
jnp
mov
or
mov
xor
retf
cmc
push
or
leave
dec
pop
ret
ja
bswap
cmps
xchg
ds
push
mov
mov
sbb
cld
inc
jmp
and
add
and
int
out
push
add
add
rcl
mov
cmp
mov
fs
fs
xchg
dec
jmp
out
jl
stc
div
jge
sub
sbb
test
lods
loopne
add
cwde
cmp
mov
cmps
int
test
sar
cwde
and
cwde
jp
pop
adc
jnp
add
mov
push
sub
rcl
hlt
inc
out
inc
inc
(bad)
dec
pop
inc
mov
hlt
sbb
mov
mov
ins
xchg
adc
pop
jg
push
in
mov
fcmove
sbb
pop
loop
or
call
hlt
or
sub
loopne
push
test
xchg
jns
sub
push
xchg
dec
jno
add
bound
push
pop
jl
jnp
call
cmp
xor
adc
inc
xchg
adc
jb
(bad)
jecxz
addr16
mov
mov
aas
neg
cli
pop
bound
inc
cli
enter
lock
cwde
fcmovnb
fadd
mov
mov
scas
cmp
call
xchg
or
movs
fisub
pop
(bad)
fstp
fidivr
adc
add
mov
arpl
jp
ins
push
pop
adc
push
dec
adc
lea
mov
leave
test
cwde
xor
cmc
jmp
fcmovb
fidiv
xor
(bad)
or
push
add
sub
xor
jmp
and
mov
xor
inc
movs
call
call
inc
xor
les
int3
mov
cmp
test
xchg
dec
(bad)
aad
jp
jmp
xor
jae
push
pop
xor
ficom
adc
(bad)
inc
cmc
mov
js
imul
mov
push
daa
mov
ror
xor
adc
aaa
adc
inc
sbb
outs
clc
int3
fcom
shr
inc
adc
mov
pop
cmps
pop
add
jl
imul
fs
jle
mov
pop
adc
pop
das
inc
push
js
jp
(bad)
repz
mov
push
lahf
xchg
add
popa
in
mov
mov
pop
xor
push
or
sbb
mov
dec
sub
in
inc
jmp
in
lods
push
pop
dec
adc
mov
pop
mov
in
xchg
xchg
push
or
pushf
jl
push
mov
jmp
fldenv
and
ret
pop
cmps
sbb
mov
jmp
test
adc
leave
dec
jns
mov
cwde
fldenv
xchg
das
xchg
xor
push
mov
inc
xchg
pop
and
call
and
dec
setg
adc
addr16
out
daa
sub
push
mov
add
pop
popa
or
jmp
sub
add
mov
add
or
ds
push
adc
push
not
xchg
loop
fnsave
test
ror
pop
fistp
icebp
xchg
(bad)
nop
sub
stos
push
xchg
jecxz
adc
xor
std
dec
mov
test
jecxz
add
ds
cmp
rcr
inc
mov
sti
outs
push
cs
not
jne
mov
pop
mov
inc
rcr
int
mov
retf
in
(bad)
cmp
pop
jle
cwde
outs
in
pusha
add
mov
mov
mov
fadd
lods
leave
push
xchg
xchg
out
and
add
out
(bad)
sub
retf
cmp
or
mov
call
(bad)
adc
movs
inc
in
add
icebp
cmp
or
ds
icebp
lds
dec
and
aad
fsubr
outs
nop
push
retf
test
pop
mov
das
sbb
or
push
(bad)
xlat
sub
mov
adc
jo
adc
pop
shl
sub
mov
sub
test
hlt
pop
xor
inc
pushf
adc
inc
pop
aas
lock
test
mov
inc
repnz
adc
add
imul
mov
or
adc
outs
or
inc
call
xchg
nop
jno
repnz
out
(bad)
les
das
sub
xlat
xchg
data16
mov
sub
retf
test
retf
lahf
retf
adc
into
in
aad
jbe
mov
nop
jecxz
es
fimul
aas
icebp
push
mov
je
dec
bound
pop
mov
in
adc
repnz
pop
xor
movs
outs
loopne
xor
(bad)
sbb
ret
and
and
repnz
or
daa
dec
and
sub
push
adc
dec
inc
xor
sbb
inc
shl
or
xor
pusha
and
adc
imul
int3
push
lods
out
cs
inc
(bad)
repz
inc
push
test
shl
in
inc
int3
call
dec
ins
into
add
loope
mov
cmp
jno
jno
pushf
inc
adc
push
sub
mov
stc
pop
add
mov
in
add
add
pop
into
jne
cli
pusha
inc
js
cli
add
jge
iret
pmaxsw
xchg
test
out
icebp
dec
or
nop
pop
mov
std
out
pop
mov
sar
shl
mov
pop
xlat
into
scas
cmp
or
pop
ret
pop
fwait
sub
xchg
in
or
inc
lods
or
add
cmp
push
jo
and
and
out
mov
push
dec
mov
cwde
jnp
loop
ss
dec
mov
test
sub
out
pop
pop
fld
mov
retf
add
sub
xchg
imul
in
je
xchg
add
sahf
xchg
pop
cmp
sbb
aad
hlt
call
(bad)
dec
fild
jne
call
xchg
sbb
cld
int
retf
call
fdiv
fidiv
retf
hlt
(bad)
sbb
mov
(bad)
adc
pop
or
rol
stos
sbb
jne
add
xor
push
popa
int
pushf
int3
jns
xor
push
mov
mov
(bad)
jge
push
lahf
adc
sbb
add
sbb
push
pop
sub
dec
call
dec
dec
sbb
ins
out
mov
aad
fs
ds
ror
ins
inc
sub
stos
(bad)
out
or
pop
cwde
mov
int
or
sub
loop
aam
sbb
ins
mov
mov
cmovb
and
xor
dec
cli
mov
test
out
dec
mov
es
stc
les
ss
xchg
out
dec
pop
gs
pop
inc
sti
xchg
cwde
jne
mov
pop
xchg
mov
xchg
push
mov
lds
or
push
cmp
and
sbb
out
fnstcw
jle
adc
inc
or
fs
aaa
les
push
aaa
push
test
test
ffreep
push
xor
das
pop
icebp
cmp
push
test
mov
push
or
sbb
int3
sub
sbb
cwde
dec
addr16
pop
iret
call
or
mov
in
sub
sbb
rol
xor
mov
dec
mov
mov
mov
jne
or
gs
mov
bound
bound
jno
push
adc
mov
leave
fld
xor
sbb
cmp
call
mov
mov
push
mov
adc
std
cs
adc
mov
pusha
cmp
out
adc
lods
test
cmp
outs
das
jle
pop
mov
xchg
fs
sar
fiadd
stc
pop
mov
sbb
lea
ror
ja
call
test
mov
pop
sub
or
int
xor
nop
shr
pop
(bad)
lods
sub
push
xchg
mov
(bad)
pop
xchg
ret
loope
and
adc
ss
or
sub
push
out
sar
ror
push
addr16
sahf
pusha
dec
sbb
cmps
cli
mov
and
out
sub
pop
lock
into
add
dec
jp
cmps
cmp
pop
mov
cmps
shr
jmp
inc
xor
sub
mov
cmc
push
dec
lock
xchg
ins
and
push
pusha
hlt
mov
hlt
dec
sti
inc
cmp
push
pop
cmp
in
add
adc
cld
lods
sar
cld
jae
jne
fadd
inc
fucompp
cli
sub
(bad)
scas
xor
fstp
adc
push
test
pop
push
jg
add
xchg
push
mov
and
in
xor
rcr
(bad)
jae
cmp
stos
aaa
mov
or
pop
cs
adc
call
push
push
fdiv
mov
out
and
jnp
pop
(bad)
or
pop
mov
dec
fsubr
popa
xor
cmp
fs
jle
in
out
jmp
dec
jmp
arpl
mov
pop
mov
add
cmp
xor
and
and
daa
lods
es
xlat
cmp
mov
call
sbb
or
int
rcl
pop
pop
and
pop
das
std
pop
jge
add
push
push
int
pop
add
shl
or
lock
xchg
mov
sar
sbb
fsub
and
test
scas
mov
shr
imul
sbb
fsub
inc
out
cmp
stc
and
out
push
call
mov
xlat
add
push
iret
fld
(bad)
jmp
aad
gs
outs
(bad)
fadd
cmp
adc
mov
xor
int3
sti
pop
xchg
ror
aas
inc
movs
enter
push
outs
aam
adc
mov
neg
cmp
adc
sub
push
mov
dec
popf
idiv
mov
or
cmp
fisttp
cmp
fnstenv
mov
xchg
xchg
mov
les
mov
loop
add
jp
xor
jae
xchg
dec
mov
pop
push
outs
inc
push
mov
aas
pslld
mov
dec
(bad)
shl
leave
mov
sub
popa
movs
int
xor
mov
into
pop
test
mov
inc
ja
add
daa
jp
not
(bad)
sti
mov
mov
test
jl
fld
jns
add
xchg
fadd
mov
inc
out
push
add
or
jnp
(bad)
pusha
xchg
inc
push
jecxz
and
test
sub
xchg
retf
loopne
pushf
lock
je
mov
aaa
adc
aaa
(bad)
into
sub
popf
mov
xor
inc
es
mov
gs
rcl
jecxz
movs
std
jmp
aam
cwde
pop
loope
mov
fdivr
stc
loop
jmp
adc
shr
lods
cmp
inc
lods
xchg
xchg
sub
ins
xchg
lds
cmp
aam
outs
adc
jp
pop
push
push
push
adc
adc
push
pop
mov
enter
shl
ss
ret
int3
in
fcmovnb
or
mov
mov
mov
test
mov
jge
xchg
xor
push
xchg
adc
xchg
repz
xchg
das
(bad)
sbb
in
(bad)
clc
mov
retf
call
test
jns
shr
cmp
push
in
pop
jmp
dec
add
xchg
jge
pop
inc
push
mov
mov
xchg
push
jmp
arpl
in
dec
aaa
jo
ror
inc
inc
sub
xor
push
dec
or
std
je
stc
lock
cs
gs
add
sub
sub
jnp
mov
int
lds
jp
ss
loope
int
mov
adc
or
and
mov
lods
mov
or
xchg
mov
adc
rep
jmp
push
adc
stos
xchg
push
jns
sub
jno
and
pop
mov
ficomp
sti
cmp
iret
int
jecxz
jmp
xlat
stos
cdq
fsubr
ret
mov
mov
jo
jns
jnp
dec
lods
imul
mov
dec
xchg
lods
mov
add
arpl
xchg
into
jge
jge
or
mov
dec
lds
rep
(bad)
mov
(bad)
push
js
xchg
add
xor
pop
mov
imul
fs
xor
jnp
jmp
xchg
fist
pop
adc
adc
neg
xlat
push
ja
xchg
test
dec
rcl
(bad)
stos
scas
jle
ins
mov
rcl
xor
and
jb
imul
sub
and
inc
pop
sar
xor
xlat
(bad)
icebp
xchg
adc
push
aas
stos
bound
dec
fsub
xor
into
popf
fwait
dec
adc
inc
jmp
xor
xchg
mov
neg
into
popa
cs
hlt
int
cmp
adc
pop
cmp
push
lods
iret
mov
xor
pop
push
rcr
popa
mov
test
mov
movs
sbb
ins
jno
mov
add
push
call
jecxz
push
fadd
outs
imul
jle
mov
cs
inc
jle
xor
loopne
cmps
aaa
aad
(bad)
fsubrp
fcom
push
jmp
cmp
push
push
ds
push
ret
pop
mov
jae
sub
jns
pop
adc
cmp
popf
mov
or
ss
ins
sub
sar
mov
fwait
and
mov
(bad)
loope
mov
xor
rol
(bad)
stc
ror
leave
and
mov
sti
in
fstp
xchg
mov
sti
jne
pop
outs
ins
imul
test
lods
ss
push
jno
mov
leave
dec
mov
scas
out
sub
scas
mov
adc
nop
fld
ins
dec
aaa
(bad)
jmp
mov
ins
test
push
push
sub
mov
add
jae
in
mov
lods
add
mov
sbb
xor
std
inc
cmc
mov
in
adc
push
jp
fwait
xchg
adc
(bad)
mov
adc
or
test
pop
hlt
icebp
(bad)
fldcw
or
je
or
dec
adc
nop
icebp
xchg
pop
jno
add
(bad)
xor
lock
jmp
push
sahf
mov
shl
sub
hlt
ret
aad
sbb
jmp
jg
pop
add
jmp
push
add
int
pop
pop
es
sub
(bad)
push
fadd
fs
cmp
push
mov
add
sbb
or
pop
add
out
rcl
fld
cmp
xor
lds
xchg
int3
movs
ins
or
aad
js
cmp
xor
and
(bad)
(bad)
iret
mov
test
push
inc
pop
fnstcw
push
pop
add
sbb
in
sbb
mov
or
inc
cmp
jnp
and
and
pop
mov
lock
xchg
int
jae
(bad)
sbb
jo
aas
(bad)
cmp
xchg
push
sub
push
test
ins
adc
sahf
mov
jns
rcr
xor
ror
shl
fadd
mov
sub
add
sub
cmp
pop
fld
jmp
sub
xor
arpl
push
xchg
push
test
scas
mul
in
sub
jns
and
pusha
sti
sub
(bad)
sbb
push
sti
and
xor
pop
or
mov
jl
imul
ret
dec
jecxz
sub
bound
mov
sub
mov
fld
and
pop
loop
xacquire
ins
jg
xchg
dec
shl
mov
pop
out
jl
cmps
int
mov
jmp
movs
std
test
dec
and
pusha
dec
aas
pop
mov
cli
add
pop
cdq
xchg
adc
inc
mov
or
xor
cmc
rcr
int
mov
inc
(bad)
ror
aas
adc
js
movs
mov
xlat
mov
cmp
repz
jno
cmp
lahf
inc
add
mov
pop
lea
enter
mov
push
jg
(bad)
sahf
movs
clc
pusha
movs
cmps
jmp
xchg
mov
and
jg
lock
or
fwait
add
and
sahf
xor
(bad)
fnstsw
and
push
lods
je
daa
retf
xor
mov
fsub
push
shl
test
mov
cld
call
fistp
std
push
or
sub
cmp
inc
retf
les
sar
inc
pop
xor
mov
mov
lods
or
add
lea
cmp
jnp
inc
push
adc
arpl
add
push
push
inc
dec
adc
jns
aad
inc
cmp
ds
arpl
cli
out
adc
or
adc
mov
aas
and
pop
popf
mov
cmps
pop
das
retf
mov
mov
jb
push
jp
pop
pop
jmp
das
mov
cmp
mov
pusha
sub
fld
cmps
push
dec
or
loopne
inc
adc
xchg
push
movs
nop
mov
sbb
test
add
mov
mov
mov
add
add
pop
pop
outs
test
in
cs
push
or
add
xchg
repnz
mov
pop
lods
mov
ss
add
sub
popf
into
ins
sbb
inc
jle
dec
call
sbb
and
ins
pop
cmp
and
cs
mov
hlt
out
jns
nop
sahf
xor
cs
sti
fstp
and
sub
js
xor
xchg
int
hlt
bound
cmp
hlt
mov
dec
mov
pop
cmps
cmps
das
sbb
jno
push
test
sbb
icebp
popf
(bad)
push
jge
dec
outs
aam
cmps
add
loop
fmulp
ror
add
call
adc
in
retf
ins
xor
movs
outs
cmps
neg
pop
enter
adc
jl
jmp
mov
xor
out
nop
in
xor
daa
mov
bound
dec
mov
adc
retf
cmps
ins
in
nop
or
mov
adc
cli
push
test
xor
push
push
(bad)
mov
sbb
aaa
pop
lds
dec
lods
(bad)
dec
push
scas
mov
in
mov
cmovne
xor
les
xor
jmp
mov
sbb
fidiv
or
das
sti
inc
add
dec
or
or
pop
and
jmp
cmc
mov
push
inc
inc
fmul
icebp
sbb
jmp
mov
out
xor
pop
push
mov
jo
loopne
dec
xor
sbb
loop
jo
push
adc
mov
dec
sbb
push
add
mov
lahf
cmc
mov
aad
push
loopne
xchg
test
movs
js
cmp
mov
adc
xor
inc
in
sar
pop
pushf
retf
popf
aas
jmp
cmp
push
cmp
mov
cli
paddsw
jb
add
push
inc
bound
xchg
loopne
mov
arpl
push
push
out
sub
dec
(bad)
jmp
or
jecxz
repnz
stc
out
push
push
(bad)
mov
out
out
cwde
inc
and
pusha
mov
cmc
or
leave
inc
fisubr
dec
outs
pop
pop
addr16
pop
or
jbe
mov
mov
push
aaa
xchg
xor
test
mov
aad
aas
out
jecxz
js
repz
and
repz
gs
fst
mov
(bad)
xor
addr16
jbe
sub
cmp
test
enter
shr
sbb
dec
inc
pop
mov
jecxz
sbb
ins
movs
jp
rcl
gs
mov
jle
cdq
xchg
int
mov
call
pop
xchg
idiv
push
add
out
sub
jp
out
int3
scas
jnp
fild
pslld
xchg
dec
jl
push
std
repnz
mov
mov
mov
aad
aas
inc
in
ret
lock
xor
sti
inc
mov
push
inc
test
jne
mov
pop
in
cmp
inc
pop
loope
pop
ror
sbb
adc
push
cwde
int3
and
dec
cmp
jecxz
fwait
cmps
leave
pop
cld
pop
cdq
shr
xchg
lahf
xchg
fiadd
call
(bad)
in
xchg
mov
fstp
loopne
push
fwait
mov
ror
stos
out
retf
fwait
pop
pop
sub
lods
dec
loop
mov
int3
xor
push
pop
retf
jo
sub
inc
lahf
push
aaa
jmp
mov
pop
add
and
mov
or
jns
jne
jle
sub
(bad)
lods
adc
and
sahf
ret
push
outs
mov
adc
test
shl
sbb
fmul
(bad)
sub
push
or
mov
cdq
or
mov
ja
jns
das
sbb
sbb
sub
repz
in
pop
in
xor
mov
test
jecxz
xchg
mov
dec
ja
rol
xor
pop
xchg
jb
ins
push
adc
dec
dec
dec
push
repz
shl
iret
fistp
pop
loop
sbb
xchg
inc
cmc
jge
adc
or
lods
mov
sub
in
int
pop
lahf
and
ret
cmc
or
popf
cmp
sbb
in
xor
xor
mov
cs
loopne
inc
ret
adc
inc
aad
jmp
xor
add
xchg
cmp
mov
(bad)
add
cmp
not
mov
idiv
xchg
sub
enter
jmp
(bad)
ffreep
xlat
lea
in
call
test
jno
push
movs
gs
test
dec
ja
das
imul
jl
xchg
nop
or
rcl
add
cli
sbb
dec
addr16
cs
scas
or
mov
cmp
fsubp
(bad)
rcr
add
mov
cdq
lahf
(bad)
cmp
cmp
xor
test
call
inc
sbb
fcomp
cmc
mov
inc
add
js
sbb
js
repnz
int3
or
jbe
and
push
into
mov
cmps
lea
(bad)
ror
bound
mov
pop
pop
or
cmp
xchg
out
shr
sbb
sbb
ss
arpl
xchg
and
test
lock
xchg
fisttp
xchg
out
sbb
nop
packuswb
xchg
mov
(bad)
cmp
mov
scas
adc
xchg
ret
into
gs
adc
pop
xchg
fsubr
dec
pop
jmp
call
mov
dec
sub
cdq
mov
popf
or
out
idiv
cmp
mov
cmp
adc
sahf
outs
ret
cs
int3
add
sub
fisttp
push
sbb
movs
inc
out
inc
inc
and
outs
int
fwait
and
xchg
int
jb
out
sbb
mov
jo
cs
lods
(bad)
adc
cld
push
repz
cmp
cmp
ret
jg
mov
outs
sbb
(bad)
es
push
retf
pop
adc
repnz
mov
pop
lock
gs
retw
adc
stos
xchg
scas
add
loopne
mov
hlt
and
add
sub
jae
ins
mov
add
data16
loope
retf
dec
into
jo
cdq
loope
push
add
in
pushf
jmp
adc
jno
sub
sti
ficom
xor
mov
jns
mul
mov
je
sti
cmps
cmps
fcomip
dec
int3
data16
cmp
or
out
mov
add
pop
inc
clc
xchg
sub
call
dec
ror
push
add
shl
and
sbb
xor
sti
mov
xchg
mov
rcr
xchg
shl
dec
or
jae
or
xchg
adc
push
or
inc
mov
mov
pop
aas
outs
add
cwde
xlat
xchg
mov
xchg
xor
loop
fs
test
out
rcl
jge
ret
and
hlt
jl
push
xchg
add
jae
aaa
fadd
pop
jg
das
retf
pop
push
dec
xlat
(bad)
push
es
dec
dec
jle
jne
mov
(bad)
shr
stos
frstor
xchg
add
aad
fiadd
mov
cmp
mov
pop
retf
jne
pop
mov
adc
int3
aad
xchg
imul
imul
hlt
cmps
sub
fstp
pushf
or
adc
(bad)
adc
jmp
xor
xor
xchg
mov
mov
sbb
dec
mov
add
leave
out
icebp
ins
jns
sbb
inc
adc
outs
add
inc
cdq
rcl
test
test
xor
(bad)
or
and
idiv
mov
jne
repnz
call
add
sub
scas
test
push
imul
test
adc
ja
test
inc
and
test
cmp
loope
sub
xchg
(bad)
fsub
sbb
adc
aaa
mov
ds
pop
cmp
push
add
inc
ins
mov
jne
gs
sar
movs
outs
data16
adc
sbb
das
(bad)
out
xchg
test
and
mov
sub
pushw
movs
push
sbb
sub
dec
lods
loope
stos
sub
push
pop
out
mov
add
stos
enter
jmp
dec
aas
sub
pop
push
inc
jge
adc
movs
sar
repnz
les
xchg
(bad)
adc
mov
inc
sahf
clc
mov
add
dec
aam
inc
or
jae
jmp
in
cdq
shr
rcl
pushf
(bad)
push
jg
test
jb
mov
adc
dec
(bad)
ins
push
nop
or
or
(bad)
and
dec
sub
neg
les
bnd
pop
and
jg
loopne
and
xchg
imul
sbb
icebp
cli
pop
pop
ret
and
ss
adc
jle
std
jge
push
pop
out
mov
enter
pop
cmc
mov
push
inc
arpl
cwde
cwde
sub
mov
and
inc
repnz
repnz
je
sub
jno
es
sub
(bad)
in
lock
scas
xor
data16
xchg
pop
add
fadd
outs
mov
mov
fwait
(bad)
aas
daa
pusha
or
inc
sub
mov
iret
push
arpl
xchg
inc
cmc
adc
stc
add
(bad)
data16
mov
xor
mov
cwde
enter
popa
cmp
jle
push
mov
lds
cwde
xor
les
cdq
xor
mov
dec
fidivr
jno
pop
inc
outs
repz
sub
add
pop
sub
dec
mov
das
or
mov
iret
mov
fdiv
pop
jne
pop
repz
int
(bad)
(bad)
fist
(bad)
mov
cmp
cmp
lods
or
mov
cvtps2pd
mov
mov
adc
push
cwde
or
mov
inc
pop
mov
pusha
dec
jne
mov
sti
(bad)
aas
scas
jmp
or
repz
repz
sbb
mov
and
lds
cmc
adc
bnd
mov
loop
add
imul
sub
pop
fdiv
sar
mov
xchg
dec
loopne
leave
call
dec
jae
fdivr
push
pushf
fisttp
dec
or
mov
in
dec
pop
into
aaa
and
outs
push
adc
inc
icebp
lods
les
shr
test
add
mov
mov
je
mov
xchg
out
lea
fcmovne
fst
add
ins
movs
pop
fwait
pop
mov
sbb
add
xchg
push
mov
xchg
lahf
jp
sub
cmps
jmp
jnp
repz
push
or
push
adc
fucom
movs
dec
sbb
pop
mov
push
icebp
xor
mov
push
pop
sbb
test
mov
outs
rcl
add
js
mov
or
std
lea
lahf
add
xor
xlat
ret
sar
adc
dec
jp
idiv
int3
std
rcl
push
inc
sub
lods
fdiv
add
and
jns
bound
add
in
movs
xor
cmp
scas
xor
push
cmc
iret
add
lods
mov
aas
ins
(bad)
int
or
inc
lods
and
sbb
retf
jge
cmp
cmp
aad
mov
jg
mov
movs
mov
xchg
pusha
pop
and
sti
xchg
(bad)
mov
enter
and
dec
div
(bad)
mov
stc
sub
enter
data16
jl
push
xchg
pop
jo
lea
sub
cmps
cmc
cld
ds
push
xchg
dec
xchg
sbb
popa
xor
shr
inc
add
sbb
sbb
jmp
enter
nop
fild
pop
add
shl
fcom
add
push
adc
or
or
test
in
jp
or
and
inc
mov
and
push
lea
ret
adc
mov
xchg
pop
xor
dec
les
or
sbb
cmp
in
add
fmul
(bad)
icebp
sbb
out
cmp
mov
or
adc
in
pop
jae
cdq
les
jnp
mov
(bad)
mov
pop
add
dec
and
mov
push
mov
xchg
in
add
and
mov
ins
dec
fwait
push
test
and
rcl
pushf
ret
in
mov
mov
les
stos
cmp
ss
sbb
jb
leave
push
push
enter
aad
aaa
sar
push
mov
push
pop
pop
mov
(bad)
movs
call
xor
pop
dec
or
or
ins
mov
sub
add
mov
xor
aas
or
cmp
imul
or
cmp
jmp
cmc
xlat
out
movs
pop
scas
bnd
and
jmp
sub
mov
data16
push
add
sbb
or
inc
or
push
mov
sub
and
xchg
mov
sub
pop
jecxz
mov
scas
mov
(bad)
dec
sti
add
pandn
xchg
jbe
(bad)
in
gs
pop
dec
pushf
cmp
pop
cmp
add
pop
(bad)
sar
in
mov
sub
arpl
arpl
mov
stos
push
inc
popf
xchg
jno
jg
jmp
pop
call
pop
loopne
and
ins
pop
int
ret
mov
arpl
repnz
mov
jbe
add
mov
inc
retf
sbb
pop
jne
stc
leave
adc
mov
fdiv
xchg
(bad)
mov
mov
or
shl
cld
ret
and
mov
ficom
push
sub
sbb
xchg
xchg
(bad)
cmp
cmp
movs
pop
cmc
inc
mov
cmp
xor
xchg
sbb
mov
data16
mov
mov
jmp
push
sbb
inc
inc
fst
sbb
xchg
daa
jno
aaa
adc
in
cdq
and
jnp
retf
xchg
imul
leave
in
call
scas
mov
mov
xor
fbld
lahf
inc
push
push
movs
push
retf
xchg
ror
push
mov
mov
sar
or
repz
jno
fnstsw
cmp
cmp
nop
adc
sbb
(bad)
xchg
adc
mov
add
sbb
xor
cmps
inc
cmps
retf
or
mov
enter
dec
stc
jo
or
fcom
lods
aam
mov
pop
jb
pop
pusha
jae
ret
inc
sbb
xlat
add
mov
ret
and
loope
pop
scas
adc
in
push
int3
pop
das
cwde
xor
xchg
cwde
dec
lock
imul
cmp
inc
(bad)
in
push
pusha
mov
cmp
push
sbb
out
pop
mov
clc
cmp
retf
outs
je
out
pop
sub
in
adc
mov
pop
dec
stos
mov
pop
xlat
daa
adc
sbb
popa
push
inc
int3
sbb
mov
adc
or
xchg
mov
popa
js
in
cld
push
loope
push
push
shl
cmp
dec
and
push
sbb
pop
in
push
(bad)
fimul
stos
mov
clc
mov
mov
cmp
mov
test
ja
loopne
in
cs
popa
xor
call
pop
jmp
ret
adc
shl
jle
ins
cmp
in
mov
dec
mov
sub
mov
dec
mov
neg
mov
mov
mov
jmp
push
shl
dec
aas
out
sub
sbb
clc
add
pop
out
ins
jg
adc
mov
mov
test
test
sar
add
xor
aaa
ret
jmp
stos
dec
dec
adc
xor
in
ds
test
sbb
lods
inc
dec
jmp
mov
push
rcl
or
bound
lea
lods
je
mov
mov
and
adc
loope
mov
cmps
pop
mov
pop
arpl
or
cld
mov
mov
mov
xchg
xchg
repz
cmp
in
(bad)
pop
out
gs
gs
inc
scas
ficomp
frstor
shr
mov
loopne
call
cs
ror
jmp
or
xchg
movs
jns
jae
fld
mov
adc
mov
jg
fwait
xor
dec
sbb
sub
inc
mov
jle
ret
pop
and
inc
out
or
mov
stc
and
mov
div
adc
jns
repnz
cdq
push
or
mov
sar
pushf
mov
ret
jnp
mov
pop
sub
stos
dec
scas
pusha
outs
jle
loop
gs
or
bound
jmp
test
fdivp
outs
adc
stc
cmp
xor
or
add
cwde
mov
das
fwait
sbb
sub
inc
mov
jge
sti
mov
and
and
adc
gs
test
es
scas
(bad)
dec
pusha
pop
push
sub
push
fstp
mov
mov
mov
cmp
retf
outs
test
aad
movlps
xchg
or
fld
aad
test
out
cmc
cdq
cwde
test
fiadd
mov
and
or
jbe
push
mov
or
cli
xchg
lahf
shl
sbb
popa
add
jg
popf
jmp
repz
sbb
mov
xchg
outs
xchg
mov
cmps
fucomip
dec
shl
mov
por
(bad)
(bad)
(bad)
ds
mov
stos
jo
icebp
or
push
inc
ds
idiv
push
ret
hlt
(bad)
cli
cmps
inc
xor
into
fsub
inc
scas
xchg
sub
xor
retf
outs
and
rcr
popa
ret
sub
lea
adc
add
push
xor
xor
daa
imul
adc
enter
push
mov
sbb
aad
and
cdq
out
jl
cmp
xor
pop
push
mov
rcl
js
in
and
pop
jne
lds
repz
jecxz
ins
cwde
jbe
dec
mov
xchg
inc
jmp
fmul
test
aad
dec
jge
lds
xor
shr
test
adc
(bad)
dec
pop
bswap
mov
daa
or
leave
repz
inc
inc
cmps
fs
add
aam
retf
pop
dec
stc
ins
mov
sbb
sbb
(bad)
addr16
push
xor
fidivr
push
(bad)
mov
sub
inc
or
test
add
pop
mov
push
cmp
cmp
rcr
out
cmp
scas
test
fcom
cmp
or
sbb
push
rcr
ret
push
es
xlat
cmp
pop
std
inc
push
mov
or
pop
add
imul
(bad)
in
jecxz
mov
loope
fst
loope
retf
out
mov
idiv
pop
lock
shl
(bad)
loopne
mov
pushf
jb
sub
ins
xchg
(bad)
fiadd
mov
hlt
cmc
dec
xor
jp
fadd
xchg
fdivr
mov
add
and
and
mov
sbb
and
xchg
sti
xor
loopne
in
ror
push
xchg
cmp
push
xor
popf
push
retf
jg
cmp
movs
and
cdq
es
push
ins
mov
xchg
dec
stos
int
xchg
dec
cmp
call
lods
add
repz
push
xor
retf
(bad)
retf
movs
inc
cld
retf
pop
aas
or
dec
lahf
xchg
mov
mov
xor
pop
sbb
mov
jmp
pop
repz
cld
std
add
cmp
mov
test
movs
rcl
mov
pop
sub
out
stos
xchg
in
test
xor
test
dec
data16
sub
(bad)
or
repnz
cmp
mov
repz
push
movs
stos
pushf
fcomp
mov
dec
cmps
stos
xor
xor
mov
jl
ds
(bad)
lods
jle
jmp
repz
ror
cli
xor
xchg
dec
xchg
push
and
inc
add
lahf
pop
test
js
sub
adc
(bad)
rol
daa
gs
sbb
faddp
mov
mov
aad
and
adc
dec
sti
xchg
dec
mov
push
mov
xchg
in
inc
and
adc
fcomi
or
cmp
lods
int
dec
and
loop
imul
fstp
test
or
dec
sub
fcmovu
fst
sub
clc
shr
and
stos
out
sub
cmp
je
ja
scas
xchg
pop
ins
inc
cmp
cmp
xchg
and
dec
rol
xchg
enter
mov
xchg
pop
cmp
add
aam
hlt
ror
daa
mov
sub
or
ins
loop
mov
popf
inc
les
add
push
retf
push
push
jecxz
jle
pusha
(bad)
mov
adc
jbe
mov
imul
add
xchg
shr
ret
ffreep
jmp
fdivr
rol
jp
xchg
lea
xchg
(bad)
and
mov
mov
lods
push
fnstenv
scas
out
inc
in
dec
outs
in
push
loope
jns
pop
arpl
mov
mov
jns
popf
loopne
push
add
or
push
stos
cdq
lock
mov
shl
pop
enter
mov
ins
lods
je
xor
popf
mov
xchg
dec
repnz
pusha
rcl
mov
fwait
movs
xor
bound
sar
fisub
pusha
xor
cmp
sub
dec
fcomp
in
adc
int
inc
push
js
or
dec
fdivr
popa
lea
fwait
adc
and
xor
mov
sbb
push
push
xchg
fmulp
adc
fild
add
ret
std
loopne
cmps
aaa
rcl
sbb
push
or
adc
add
fadd
cmps
leave
jg
mov
lods
popa
aaa
or
gs
cmp
fwait
pop
pop
lock
sbb
ss
cli
adc
mov
ss
dec
jb
mov
sahf
std
ins
dec
(bad)
lock
push
or
dec
ret
jmp
sub
push
sbb
adc
mov
fist
inc
imul
cli
push
xchg
popf
fwait
jmp
add
pusha
cmp
sub
mov
cmps
pop
and
fsubr
gs
jbe
aam
out
fcom
inc
scas
mov
popw
pop
inc
cli
clc
sbb
inc
dec
gs
pop
mov
xchg
xor
cwde
mov
add
jmp
mov
adc
pop
into
pop
hlt
pop
ficomp
in
mov
imul
mov
leave
shr
ja
mov
bound
(bad)
pop
sahf
mov
jge
shr
push
shr
and
in
add
adc
or
aad
inc
in
lock
cmc
xchg
cmp
das
or
inc
xchg
(bad)
dec
inc
or
movs
mov
loopne
adc
and
dec
jbe
pop
retf
cwde
xor
fild
push
mov
and
movs
out
ficom
cmp
push
jns
(bad)
cs
(bad)
nop
jmp
inc
xlat
mul
in
cmp
daa
les
aas
push
add
xor
mov
pop
xor
and
mov
add
ds
inc
or
enter
out
mov
push
or
(bad)
xchg
repnz
std
inc
loop
and
mov
xchg
and
in
or
sbb
sbb
jmp
enter
adc
or
not
mov
ins
mov
mov
ror
js
test
jmp
repz
aad
and
out
push
ss
jl
jne
jge
sti
inc
(bad)
in
icebp
sub
stos
mov
mov
mov
sbb
popf
je
add
pop
ds
sub
mov
sbb
int
jns
and
lods
pop
in
sbb
test
enter
mov
scas
or
and
idiv
fdivr
test
mov
cmc
dec
mov
sub
(bad)
jmp
push
sbb
jne
mov
and
cmc
mov
(bad)
stc
icebp
push
aam
loop
jmp
adc
cmp
jecxz
shl
and
pop
retf
ficom
xor
(bad)
jno
in
sub
pop
in
enter
pop
test
inc
fcom
or
stos
sar
sbb
test
ins
rcl
push
or
mov
jmp
cmc
push
jge
popa
adc
mov
ins
pushf
fnstsw
mov
ret
and
cmc
mov
in
adc
shr
pop
xchg
adc
mov
mov
push
test
scas
(bad)
bound
pop
lea
sti
(bad)
mov
test
pop
out
mov
mov
ds
adc
push
mov
and
dec
fwait
or
mov
jb
das
sar
arpl
cdq
and
sbb
bnd
shl
ins
push
mov
sbb
jg
aam
shr
jp
pop
movs
nop
aaa
pop
mov
(bad)
jae
icebp
jno
(bad)
cmps
pop
mov
dec
popa
mov
cmp
jmp
dec
push
pushf
fsub
push
fist
gs
imul
mov
test
test
pushf
cmc
cmp
sbb
pop
mov
clc
pusha
imul
mov
sub
xor
loopne
jnp
bound
xchg
cmps
pop
and
push
inc
cmp
data16
outs
pop
outs
push
outs
je
cmps
mov
mov
retf
mov
shl
mov
mov
add
mul
sbb
std
sub
ins
xlat
shl
and
pop
lock
push
das
(bad)
and
cmp
movs
mov
sbb
in
and
neg
sahf
push
imul
ds
push
jmp
cmp
dec
lds
(bad)
push
dec
jle
rol
mov
mov
(bad)
(bad)
movs
call
xchg
mov
cmp
repnz
(bad)
movs
sub
cdq
push
je
dec
jg
nop
mov
outs
jbe
shr
ret
xchg
aaa
mov
push
mov
sub
loopne
mov
dec
dec
frstor
loopne
mov
jnp
mov
cs
dec
cmp
clc
out
addr16
dec
pop
rcl
mov
shl
jmp
jecxz
push
daa
or
pop
rcr
sub
mov
cwde
add
and
sub
xor
das
scas
xor
xchg
mov
outs
pop
mov
xchg
jecxz
and
es
mov
out
fucom
push
and
xchg
repnz
sbb
cdq
daa
inc
adc
jmp
call
pop
les
sub
lea
add
sub
push
cs
cwde
mov
jae
push
dec
sub
ins
add
hlt
leave
ret
scas
mov
int
les
jb
pop
test
das
mov
dec
mov
movs
imul
ins
enter
(bad)
ss
pop
repnz
adc
shl
out
push
push
es
repnz
add
jne
ficom
dec
pop
xor
add
xor
je
sbb
push
sbb
aam
and
push
ret
loopne
shr
or
xor
iret
dec
cmp
push
int
ss
sbb
mov
(bad)
cmp
jl
test
and
mov
scas
shr
xchg
pushf
addr16
mov
xlat
dec
stc
push
and
xor
movs
xchg
or
outs
push
adc
pop
outs
or
(bad)
push
ret
inc
cli
dec
adc
adc
or
dec
repz
sub
jg
cmps
out
mov
(bad)
call
xor
std
inc
mov
enter
hlt
adc
mov
fiadd
sbb
test
and
push
fwait
cli
sbb
rcl
adc
mov
cmp
jne
dec
add
leave
push
addr16
cmp
arpl
mov
adc
jg
add
stos
mul
ds
int3
dec
mov
and
or
or
(bad)
jo
push
jmp
and
or
(bad)
test
dec
outs
inc
add
add
push
jb
jo
mov
test
pop
jmp
mov
xchg
add
sbb
cld
and
pop
or
dec
int
dec
pop
mov
shl
addr16
cmp
enter
outs
jmp
addr16
add
es
test
out
cwde
and
inc
movs
pop
out
add
pop
adc
xchg
jb
pushf
mov
int3
add
mov
iret
add
xor
adc
iret
mov
stos
outs
adc
pusha
lods
cmp
xor
sahf
inc
in
ror
pop
and
rcl
or
in
jmp
ss
dec
push
pop
mov
repnz
rcr
in
pop
cmps
pop
(bad)
shl
xchg
ror
sti
lahf
cmp
loope
push
xchg
aam
adc
aad
ss
mov
mov
movs
push
test
or
rcr
mov
mov
and
sahf
mov
aad
adc
and
mov
jmp
out
(bad)
jo
mov
dec
xor
clc
mov
push
jp
out
adc
pop
xor
mov
dec
daa
(bad)
adc
inc
les
movs
loopne
std
repnz
pusha
or
scas
jns
dec
pop
into
mov
pop
popa
shl
loope
push
lahf
mov
cld
add
shl
loope
sbb
or
das
pop
dec
neg
arpl
sbb
adc
sub
dec
int3
rcl
test
jmp
adc
xchg
mov
mov
repnz
pop
cld
frstor
bound
jle
jecxz
in
sti
pop
push
dec
rcr
xchg
shl
sub
cmp
push
cdq
push
mov
pop
mov
and
out
push
shl
aas
mov
xor
dec
enter
popa
int
sbb
cmp
rcl
out
xchg
sub
fst
add
push
(bad)
jmp
push
dec
jb
mov
cmp
pushf
jge
push
push
sbb
or
int3
mov
inc
pusha
mov
test
mov
dec
fnstcw
fcomp
psubusb
(bad)
nop
xchg
push
inc
into
div
pop
jno
repz
pusha
cmp
rol
cmp
pop
push
adc
out
push
mov
push
fucom
add
mov
push
xor
xor
cwde
(bad)
mov
lea
mov
dec
rcr
mov
push
jo
sbb
fs
fdiv
mov
cmps
daa
fldcw
outs
out
inc
pop
iret
sub
mov
fmul
push
daa
rol
mov
call
in
xor
mov
sbb
shl
imul
mov
mov
xor
movs
sbb
jecxz
push
movs
mov
dec
jbe
pop
mov
inc
xchg
sbb
jbe
adc
fsub
stc
cmp
cmp
aas
scas
sbb
add
sub
sbb
iret
jg
(bad)
xchg
(bad)
sub
aaa
out
sub
or
sbb
cli
jmp
dec
hlt
retf
add
(bad)
lock
scas
add
mov
mov
stos
imul
popf
mov
mov
cmps
fsubr
bound
pop
fbld
ja
fistp
neg
in
aam
sahf
outs
cmp
cdq
lahf
jecxz
jns
jbe
cdq
xchg
dec
pop
sub
fild
and
xchg
dec
add
sub
fadd
and
jmp
jno
sbb
imul
mov
mov
ret
mov
xor
bound
aad
fist
mov
jb
xchg
int
aaa
cmp
cmp
dec
fmul
xor
jnp
xchg
jg
adc
scas
ds
test
or
mov
mov
in
test
push
outs
stc
out
test
fwait
fs
push
call
xor
push
adc
in
js
jae
mov
mov
sub
lds
xchg
push
cmc
jnp
jne
shl
cmp
sub
jb
mov
add
fsubp
mov
sar
jecxz
sbb
mov
ficomp
xchg
mov
or
sahf
shl
imul
ss
mov
jmp
scas
std
inc
js
jns
icebp
add
xor
(bad)
push
and
(bad)
ja
add
add
pop
jo
push
nop
nop
sub
sbb
popf
push
inc
inc
jg
mov
daa
fiadd
fimul
mov
xor
shl
pop
dec
push
add
(bad)
dec
loope
outs
test
sbb
cmp
or
into
in
inc
and
sbb
icebp
pop
fisub
mov
cmp
ret
adc
push
scas
cmp
mov
dec
sub
cld
mov
cdq
xor
push
in
mov
push
out
sub
test
popa
adc
js
and
aas
pop
stc
in
aas
and
fld
xor
dec
or
fdivrp
xchg
pop
retf
mov
in
xchg
dec
jo
les
jbe
inc
or
mov
xchg
call
repnz
adc
cwde
cmp
mov
xchg
push
icebp
lea
stos
cli
xor
adc
xor
pushaw
push
jge
jg
(bad)
jae
adc
adc
stos
mov
sbb
xchg
in
sbb
mov
push
and
daa
sbb
adc
push
fs
sbb
adc
test
mul
je
movs
sub
je
daa
mov
sub
int3
pop
inc
push
sbb
cmp
in
sbb
mov
outs
xchg
fsub
mov
sub
pop
pushf
sub
call
sahf
xchg
aaa
sbb
push
add
outs
lods
(bad)
dec
popa
push
and
fs
adc
cmp
mov
inc
and
scas
mov
aam
dec
add
dec
sub
out
sahf
hlt
or
retf
outs
movs
mov
daa
stc
xor
cmp
aam
dec
jecxz
retf
jg
and
pop
xchg
push
jg
imul
or
cwde
test
scas
fcom
mov
or
shl
xchg
add
cmc
ror
in
inc
aad
sti
dec
hlt
mov
ret
das
dec
stos
scas
push
adc
cmp
mov
(bad)
stc
retf
mov
ja
popa
pop
or
cmps
popa
dec
cmp
jae
sub
push
push
cmp
push
add
out
stos
inc
std
sbb
add
aad
dec
cmp
ja
fmul
xchg
scas
lahf
addr16
push
loopne
ja
cmp
sub
mov
out
(bad)
pop
inc
jle
mov
fdivr
jb
repnz
inc
stos
sbb
dec
cmps
push
mov
test
adc
pop
sbb
mov
inc
pop
dec
sub
leave
gs
scas
cmp
dec
sahf
mov
add
jns
fs
mov
sahf
es
rcr
out
fstp
loopne
mov
inc
call
int3
fwait
shl
xor
(bad)
cwde
push
jo
dec
mov
ins
stos
cmp
xchg
outs
push
mov
call
int3
and
pop
xchg
jmp
adc
sbb
inc
xchg
or
adc
push
xchg
sbb
and
sub
or
retf
test
push
and
mov
lahf
mov
js
call
inc
cwde
pusha
sti
shr
ret
mov
mov
push
pop
pop
xlat
adc
adc
fdivr
mov
call
add
xchg
call
cmp
loop
jns
cmps
dec
mov
mov
mov
pop
push
out
push
mov
sub
fld
popf
stc
mov
enter
xchg
lea
sub
out
pop
sub
mov
lds
pop
fucomi
mov
cmc
push
adc
jae
mov
shl
addr16
pop
cmps
repnz
fimul
mov
jmp
aaa
adc
stc
mov
in
pop
sbb
stos
stos
cmp
push
dec
jb
jl
jl
push
shr
test
inc
adc
test
add
xor
mov
jbe
loopne
lea
cmp
stos
and
and
dec
jns
xor
outs
enter
cmps
ins
cmp
ds
(bad)
lods
inc
sbb
fisubr
(bad)
and
inc
sub
or
jp
inc
pop
jle
call
ret
mov
hlt
js
dec
fld
push
add
loope
or
sbb
imul
xchg
xor
scas
nop
stos
pop
cmc
jecxz
in
pop
sar
cmp
ret
mov
popa
jbe
movs
in
pop
xor
adc
jge
push
outs
outs
loop
sub
out
push
push
push
sbb
enter
inc
ficom
rcr
(bad)
repnz
push
add
or
mov
sub
cwde
push
popa
out
mov
stos
or
loop
sbb
sub
dec
out
add
cs
icebp
cld
adc
sub
loop
jnp
das
div
add
mov
mov
jne
jmp
cmp
test
adc
sub
into
jge
add
inc
je
shl
mov
jle
loop
cli
(bad)
pop
dec
sahf
fsubr
dec
test
push
sbb
jnp
enter
lods
fwait
inc
out
cmp
pop
call
es
mov
cdq
test
pop
inc
out
aaa
movs
ret
mov
test
xchg
mov
cmp
aad
cmc
inc
iret
cmp
cmc
inc
jmp
retf
cwde
cmp
bound
cmp
arpl
push
icebp
cld
lahf
loopne
div
cmp
jns
push
aas
xor
fs
arpl
adc
lea
stos
loopne
lea
sub
mov
jmp
lds
sub
or
push
movs
xchg
add
or
movs
fild
add
loopne
push
mov
lahf
mov
push
pop
mov
and
cmp
dec
mov
sub
fucom
dec
cmps
outs
imul
addr16
int3
sub
aaa
(bad)
xlat
mov
cs
sub
or
loopne
scas
inc
out
xor
and
inc
sahf
mov
xchg
icebp
xor
add
(bad)
mov
popf
jp
outs
es
les
cmc
les
inc
ret
aas
std
(bad)
nop
movs
mov
push
aas
mov
cmp
mov
push
dec
aas
std
xor
dec
scas
pop
cld
and
xchg
xor
add
call
cli
mov
cmps
lods
sbb
add
adc
pop
sub
sbb
mov
icebp
xor
test
rol
daa
ror
jbe
lods
jecxz
mov
inc
add
jecxz
cld
pop
or
cmp
test
imul
ret
add
movs
xchg
stc
jbe
stc
sbb
dec
cld
cmp
push
mov
ins
add
mov
mov
cmp
(bad)
and
mov
fimul
adc
push
clc
out
and
rol
dec
sti
cmp
cli
sti
nop
pminub
inc
pop
pop
bound
pop
test
loopne
jmp
std
and
push
fisub
mov
add
xchg
fmul
add
arpl
push
into
(bad)
fs
int3
fisub
jae
or
and
add
mov
sbb
mov
jmp
xchg
push
jl
xchg
int3
movs
xor
mov
xlat
mov
pop
in
icebp
shl
(bad)
jmp
hlt
mov
pop
push
jle
pop
add
and
es
or
ret
arpl
push
call
mov
jno
mov
imul
pop
jno
pop
aas
outs
jecxz
mov
cli
xor
out
cmp
xor
ins
loope
adc
sub
test
xchg
jg
mov
and
dec
pop
ins
dec
xchg
jne
inc
sahf
outs
mov
dec
jmp
add
in
mov
dec
push
inc
scas
(bad)
or
jg
mov
inc
jecxz
(bad)
ins
rcr
aas
into
out
jb
lahf
jno
mov
cli
stos
push
lods
xor
or
jp
std
xor
pop
es
mov
icebp
inc
cmps
add
loope
cmp
outs
ret
adc
sub
pop
jne
cmp
dec
int3
stos
ret
or
mov
outs
xor
mov
jbe
add
cmps
gs
mov
sbb
test
xchg
in
std
cmp
inc
mov
or
outs
not
cmp
xchg
and
dec
cmps
movs
fwait
sub
nop
mov
scas
inc
and
dec
sti
and
mov
pop
and
ror
inc
cmps
movs
push
xchg
and
mov
mov
fimul
aam
push
aam
test
out
inc
mov
cmp
xchg
xchg
rcl
cmp
in
or
in
jae
dec
xchg
adc
repnz
inc
dec
inc
inc
rcr
arpl
outs
add
js
and
call
jg
movs
or
jb
xor
pop
push
xchg
test
fisub
xchg
or
jno
cmp
scas
jbe
int3
xor
mov
and
call
call
movups
mov
(bad)
ds
or
xchg
dec
(bad)
nop
lahf
jge
imul
cdq
cmp
cmp
xchg
mov
pusha
ja
jmp
sbb
push
sbb
sub
test
sahf
dec
xchg
mov
mov
pop
outs
or
and
out
add
psrad
shr
push
loopne
cmp
fcom
or
push
pop
pop
es
jno
add
xlat
adc
mov
add
sub
test
js
sub
xor
inc
hlt
xchg
repnz
sbb
icebp
aaa
pop
mov
push
pop
enter
adc
mov
repz
jmp
adc
jecxz
movs
xchg
cmp
popf
imul
outs
adc
jmp
mov
pop
test
out
jo
lea
pop
dec
sbb
mov
mov
mov
jnp
sbb
(bad)
cmc
data16
push
pop
push
jne
icebp
aad
or
adc
mov
mov
mov
arpl
pop
test
cmc
adc
out
pop
rol
jo
or
xlat
mov
inc
popa
jb
push
outs
jge
jp
push
jge
push
xor
aas
arpl
jo
inc
adc
cmp
fbstp
cli
xor
cs
neg
scas
cmp
cdq
inc
cmp
push
xor
cmps
sub
sahf
xor
dec
call
test
in
mov
jmp
sub
cwde
loop
shl
cmp
jle
in
xchg
jl
scas
add
call
mov
jnp
mov
in
add
(bad)
jne
outs
inc
data16
mov
fild
jg
icebp
jbe
jecxz
cmp
mul
jmp
fiadd
pop
mov
jno
dec
inc
xor
mov
push
mov
inc
xchg
jmp
mov
push
je
xchg
inc
sub
fidiv
aad
or
cmp
loop
cmps
adc
call
cmp
outs
jmp
int
popf
test
mov
dec
fneni(8087
xchg
cli
jl
(bad)
and
dec
mov
out
xchg
add
aam
cmp
mov
js
jle
sub
das
jp
shr
xor
leave
xlat
lea
mov
jbe
mov
arpl
mov
mov
sbb
jae
pop
arpl
loopne
fdecstp
adc
lds
rcr
retf
cmps
es
jmp
jp
imul
aas
popa
(bad)
in
sub
xor
mov
mov
lods
es
std
jl
jo
cmc
lods
jmp
and
sbb
push
int3
jo
push
cmps
aas
call
jbe
ret
in
inc
jecxz
movs
cmp
test
jns
add
sbb
leave
sub
daa
mov
dec
cmp
ret
sbb
rcr
xchg
and
dec
xor
test
adc
stos
pop
loopne
or
and
xor
push
push
not
inc
push
mov
xchg
ds
test
cmc
push
mov
(bad)
inc
push
xor
push
cmp
or
stc
jnp
mov
cmp
cmps
and
add
aam
mov
ficom
lds
add
shr
inc
sbb
xchg
xor
jnp
sub
add
fistp
pushf
mov
fadd
test
xor
les
(bad)
cmp
call
add
push
dec
(bad)
pop
xchg
ins
mov
test
fstp
cwde
or
inc
xor
into
add
cmp
adc
pop
mov
rcr
int
inc
iret
xor
mov
dec
add
sbb
rcl
or
(bad)
aaa
(bad)
shl
jl
pusha
lods
mov
inc
shr
shl
lods
int3
mov
call
sbb
jae
ror
push
adc
sti
daa
scas
sbb
and
mov
xlat
mov
aaa
jmp
nop
adc
xchg
imul
movs
push
adc
add
pop
adc
stos
xor
mov
and
ret
mov
add
xchg
sbb
jl
das
call
xor
mov
outs
push
ss
mov
cmp
mov
push
push
shr
das
aas
aad
mov
iret
int3
jg
ja
mov
sbb
call
(bad)
fnstenv
(bad)
mov
mov
mov
xor
push
pmaddwd
enter
test
mov
dec
imul
push
bound
nop
mov
and
movs
out
out
pop
neg
dec
push
adc
and
jns
stos
cdq
stc
outs
add
leave
lahf
fxtract
and
int3
aas
jmp
lds
das
repnz
cmp
cmc
add
mov
cmc
mov
loop
rcl
cmc
into
sbb
test
jo
imul
xor
popa
(bad)
retf
std
out
int
cwde
push
pop
test
rcl
adc
fisub
jmp
mov
jb
out
sar
xor
inc
cmp
fidiv
cmps
mov
call
fdivr
and
mov
dec
popa
in
or
adc
pushf
pop
jecxz
pop
imul
fucomip
adc
jmp
test
out
lods
xchg
xor
(bad)
xlat
mov
mov
mov
xor
lods
enter
jl
push
ret
(bad)
and
outs
push
push
cdq
push
xor
or
je
mov
call
xchg
pop
pop
add
xchg
ins
or
sbb
xor
lds
gs
xchg
mov
call
out
loope
mov
sub
(bad)
sahf
dec
ins
mov
(bad)
pop
adc
xchg
jns
loop
rol
or
fcom
jo
push
rol
jmp
out
shl
lock
ss
stc
inc
ror
ror
std
aad
mov
iret
and
mov
jno
cmc
sbb
sbb
(bad)
(bad)
ficomp
jnp
dec
imul
call
mov
cmp
in
push
js
mov
push
xchg
mov
call
adc
inc
pop
movs
mov
jg
in
sub
xor
outs
add
mov
pop
arpl
xabort
icebp
pop
mov
leave
mov
leave
xor
cmp
js
xor
retf
outs
rcl
sar
imul
push
add
and
and
sbb
js
dec
or
mov
and
inc
test
jmp
mov
xor
pop
or
enter
pop
jmp
push
hlt
mov
out
and
cmp
shl
add
in
sub
dec
sub
imul
cli
cli
push
xor
adc
xchg
(bad)
loope
add
in
std
movs
fisttp
xor
and
xor
cmps
mov
pop
fdiv
lods
xor
cli
and
movs
jg
sub
jo
xchg
cmp
jg
mov
js
sub
pop
je
adc
inc
push
jge
aaa
push
inc
rcr
pop
clc
or
cmp
jno
pop
jno
xchg
inc
fcom
mov
sub
lahf
das
into
push
das
fs
pushf
ds
jo
and
push
jmp
or
or
fucomi
call
jne
aaa
ror
in
fisub
jle
and
aaa
(bad)
das
jnp
jno
icebp
(bad)
dec
xor
retf
push
sbb
jno
leave
jmp
inc
call
and
in
mov
jecxz
xor
dec
cs
or
jl
icebp
sub
outs
push
sbb
aad
xchg
dec
aas
mov
cwde
jmp
add
push
mov
test
in
rol
sub
and
daa
(bad)
xchg
rcl
xchg
pushf
sub
pop
mov
xchg
aad
pop
or
pop
inc
mov
inc
(bad)
and
pusha
pop
and
or
xchg
div
cmp
xor
cmp
lock
pop
data16
aad
imul
adc
cmps
jmp
lds
xor
pop
call
inc
cmp
xchg
jno
dec
xchg
mov
add
fwait
xor
jne
add
mov
mov
(bad)
mov
push
jl
pop
int3
pop
mov
mov
mov
or
jmp
mov
(bad)
cld
loop
sar
(bad)
cmp
test
mov
push
repz
out
xchg
pop
dec
scas
(bad)
int
fbld
push
add
or
movs
adc
push
sub
push
cli
cmps
dec
scas
popa
pop
jecxz
cmps
sbb
lods
mov
push
jmp
mov
out
lds
inc
cmps
cmps
fmul
xchg
sahf
and
imul
out
mov
or
adc
mov
(bad)
mov
xchg
xchg
xchg
jecxz
inc
ret
icebp
adc
lods
pop
bound
push
dec
std
mov
rcl
call
adc
enter
(bad)
push
sbb
aam
mov
mov
aam
push
xchg
add
dec
lds
cdq
mov
and
xchg
push
xor
dec
jo
outs
mov
hlt
pop
cwde
int3
sub
lock
cmp
cmc
sar
pop
dec
pop
pop
int3
sub
pop
push
or
push
xchg
cmp
adc
push
mov
loop
retf
sbb
or
push
(bad)
stc
js
dec
inc
jp
mov
push
dec
mov
add
stc
mov
ret
outs
daa
pushf
and
cdq
cs
pop
lock
sub
xor
inc
inc
(bad)
js
ja
sbb
shl
gs
mov
mov
lahf
addr16
adc
push
sbb
dec
scas
clc
popf
out
sbb
clc
lea
mov
push
(bad)
loope
ror
outs
sbb
repz
adc
or
daa
inc
cmp
adc
fmulp
sub
pop
jp
push
add
and
adc
retf
or
out
jo
jmp
clc
xchg
retf
in
mov
push
sbb
or
adc
inc
or
iret
aad
inc
dec
in
xchg
mov
fldcw
dec
ret
(bad)
sbb
mov
push
je
and
fisubr
inc
xlat
mov
enterw
aas
dec
stc
std
inc
cmp
iret
test
and
(bad)
push
jecxz
adc
cmp
xchg
inc
push
xchg
push
sbb
mov
iret
pop
ret
mov
mov
pushf
mov
mov
or
push
sub
rcl
aam
arpl
jbe
or
popa
mov
dec
call
push
xor
push
xchg
rcl
cli
mov
jae
mul
cdq
outs
xchg
add
(bad)
and
and
add
or
mov
es
add
adc
cli
dec
retf
dec
jno
sbb
fmul
dec
jo
adc
in
jge
imul
jecxz
ja
sub
jle
xchg
rcr
je
add
loope
mov
push
sbb
push
fisttp
cmp
jb
(bad)
iret
fcom
jge
pop
cld
sbb
into
gs
fxch
dec
xlat
in
sbb
leave
jnp
ja
nop
sub
mov
jge
mov
xor
push
cmp
int3
dec
das
lahf
jmp
push
jmp
lods
xor
lds
sti
fsub
jge
inc
cmp
iret
mov
cmovo
rol
adc
pop
inc
lock
fsub
ins
or
loope
add
inc
mov
adc
sbb
lea
push
retf
ins
ds
xchg
sbb
shl
dec
push
aaa
sbb
push
sub
ret
sub
mov
into
sbb
cmc
sbb
inc
pop
in
mov
inc
in
mov
push
test
retf
mov
pushf
fsub
out
sbb
mov
cld
jns
aad
jbe
stos
pop
sar
dec
push
pop
sti
leave
inc
dec
push
jno
xchg
inc
imul
dec
xchg
test
popf
jne
jge
push
adc
or
push
mov
and
cdq
sub
inc
(bad)
rol
shl
out
cmp
jno
fdiv
call
mov
sti
pusha
pop
addr16
loope
rcr
mov
mov
arpl
sbb
push
inc
call
imul
mov
daa
inc
jbe
pushf
in
pop
mov
pop
add
(bad)
or
mov
and
dec
je
imul
inc
sbb
pop
ret
mov
nop
ja
mov
lea
cdq
iret
das
sbb
jns
(bad)
xchg
and
or
push
jecxz
cdq
xor
jl
mov
adc
cs
mov
jne
sub
lds
retf
aam
or
adc
jne
and
(bad)
adc
mov
inc
adc
xchg
bound
das
push
add
sti
pop
outs
out
dec
jne
cwde
adc
mov
imul
lock
nop
push
cld
scas
test
call
cwde
adc
cmp
ins
and
and
clc
jecxz
neg
mov
inc
cs
mov
jo
enter
aas
jns
icebp
dec
cmps
add
sub
(bad)
leave
push
cs
mov
push
jae
xchg
fidivr
imul
jp
ds
and
retf
repnz
adc
xchg
adc
fwait
xchg
xor
movs
fsubr
aad
mov
xor
add
sbb
fcom
cdq
inc
jns
outs
pop
dec
jl
jecxz
imul
xor
mov
in
popfw
(bad)
movs
arpl
pop
ret
mov
or
jae
push
sbb
sbb
add
out
inc
std
push
sbb
sub
jb
aas
fcom
popa
pop
xchg
xor
adc
adc
sub
popf
retf
dec
fdiv
pop
rcr
pop
stc
scas
xlat
fstp
sbb
shr
pop
sar
mov
rcl
mov
push
cmc
and
inc
inc
cld
adc
xor
fst
test
or
mov
shl
sub
mov
add
retf
loope
mov
add
repnz
(bad)
xchg
or
je
test
ret
and
xchg
fwait
cli
xchg
ins
sbb
jmp
mov
mov
popa
mov
imul
test
fnstsw
ficom
not
ds
cli
ins
test
out
out
push
nop
and
shl
sub
ins
mov
fs
ficom
jg
shl
mov
hlt
popa
loopne
movs
mov
imul
pop
test
mov
cmp
cmp
or
cs
or
xchg
jb
aam
push
pop
leave
inc
jmp
mov
stos
mov
inc
push
mov
cli
fisubr
mov
movs
mov
push
nop
xchg
add
inc
or
mov
ret
mov
shl
push
test
add
outs
mov
jecxz
add
stos
inc
into
or
mov
adc
sbb
xchg
mov
clc
rcl
jo
adc
jl
push
les
xor
(bad)
push
(bad)
loope
pop
(bad)
stos
and
and
jmp
and
mov
xchg
add
and
in
stos
iret
(bad)
sti
mov
xor
jle
mov
pop
pop
loope
das
push
sti
cmps
dec
sub
fsubr
mov
xchg
or
out
dec
dec
das
popf
sub
push
pop
mov
das
clc
jno
sbb
imul
aas
and
scas
cmp
inc
pusha
sbb
ins
pusha
cmp
outs
ret
mov
icebp
jp
out
or
cs
push
movs
dec
mov
in
inc
push
push
mov
jne
jnp
repnz
dec
outs
xor
dec
inc
call
jmp
repz
ja
hlt
sub
adc
gs
xchg
jmp
cmp
fsubr
test
jns
sbb
push
inc
xchg
xchg
pop
mov
jb
xchg
xchg
xor
(bad)
jge
cld
adc
rcl
and
(bad)
fiadd
dec
pop
mov
leave
jge
jno
imul
sub
xlat
mov
(bad)
mov
dec
or
push
dec
pop
adc
mov
and
stos
push
or
xchg
add
cmp
into
and
pop
xchg
in
mov
jnp
sbb
lahf
sbb
in
dec
inc
stos
mov
dec
inc
cmp
dec
pop
xlat
cmps
sbb
cmp
sub
jecxz
cmp
cmp
and
cld
(bad)
jns
loope
stos
jbe
mov
inc
test
rcl
call
nop
sar
xchg
mov
mov
jb
dec
cmp
sub
mov
std
stos
pop
repz
xchg
adc
cli
or
out
add
cmp
mov
dec
enter
pop
inc
pop
nop
push
stc
dec
(bad)
jae
movs
das
icebp
mov
dec
and
sub
lods
add
shl
mov
xor
push
cmps
sub
or
sbb
mov
pop
sbb
xchg
ror
mov
scas
gs
je
pushf
inc
fild
addr16
mov
daa
arpl
es
stos
and
inc
out
ss
jl
lds
dec
std
(bad)
loop
popa
syscall
and
sub
fistp
xchg
mov
ds
lahf
xor
push
xor
repnz
add
or
adc
mov
dec
mov
mov
shl
das
addr16
loopne
dec
push
movzx
ficom
out
fiadd
ffree
aas
pushf
adc
xlat
jmp
push
ja
pop
ins
fisubr
out
cld
mov
mov
loop
add
sbb
mov
pop
lock
push
xor
enter
sbb
inc
sbb
or
fisub
inc
pop
mov
jo
pop
call
fdivrp
out
inc
dec
sub
xchg
cmp
lahf
stos
xlat
xor
dec
(bad)
sbb
mov
lea
push
dec
mov
pushf
sbb
pop
in
loop
fadd
icebp
push
mov
xor
add
clc
pop
out
inc
xchg
xor
call
sbb
xchg
or
(bad)
adc
add
mov
cs
xor
rcr
pushf
mov
jb
or
scas
jns
outs
xchg
dec
ins
mov
movs
aaa
(bad)
pop
into
iret
into
sbb
arpl
retf
cmp
pop
jne
in
or
push
xor
sub
mov
xchg
cmp
jg
lods
mov
call
pop
cmc
aam
xchg
and
pop
in
cli
test
je
xchg
ds
movs
imul
lahf
sub
push
mov
pop
repz
imul
push
stos
(bad)
cmp
jmp
jae
mov
inc
pop
cmp
pop
mov
sar
sbb
and
sbb
mov
inc
jmp
add
xchg
rol
jb
lods
mov
into
ss
clc
in
pop
or
movs
scas
add
out
xlat
inc
xchg
jmp
jb
pop
dec
adc
xchg
xor
shl
cld
sahf
cmp
fistp
(bad)
idiv
ror
push
repnz
and
sub
neg
int
dec
sub
xor
mov
xchg
adc
cs
stos
enter
xchg
sub
xchg
jo
in
in
iret
fisttp
push
cmc
call
stos
jg
push
and
and
push
jne
call
dec
call
gs
jg
inc
jl
or
imul
adc
pop
xor
into
out
mov
ins
mov
jg
lods
shr
dec
sbb
icebp
xchg
les
jbe
add
cmp
or
push
pop
aas
std
ret
scas
std
xchg
fadd
(bad)
push
jne
and
pop
daa
daa
movs
jae
and
popa
inc
lea
neg
cmp
add
test
pop
in
xchg
or
pop
mov
fcom
int
mov
sahf
and
dec
sbb
cmp
adc
out
repz
cmp
dec
push
test
mov
xchg
push
dec
adc
(bad)
shr
mov
push
xchg
adc
sub
cs
loop
outs
jae
or
mov
dec
call
in
repnz
sbb
sub
bound
shr
out
out
imul
retf
das
mov
repnz
adc
inc
jecxz
xor
inc
mov
test
xchg
add
or
jge
sti
adc
pop
mov
xor
mov
mov
adc
adc
(bad)
mov
push
cmp
push
clc
mov
fcom
daa
dec
pop
ret
rol
add
pop
jmp
repz
inc
hlt
dec
push
inc
dec
hlt
fiadd
jae
imul
jae
retf
sub
and
sbb
mov
mov
pop
jne
movs
repz
sti
or
mov
mov
adc
ins
(bad)
repnz
xor
jecxz
mov
sahf
rol
cwde
pop
nop
mov
in
js
iret
dec
ret
cmp
sbb
pop
retf
push
inc
daa
and
xchg
jns
or
popf
mov
ins
inc
xchg
sub
jmp
and
not
adc
sub
int3
xchg
popa
(bad)
ffree
xor
and
mov
sub
pop
jp
xor
lods
cmp
jmp
xchg
or
pop
adc
aaa
push
xchg
xlat
pushf
pop
pop
mov
cmc
cmp
es
mov
ja
and
les
lods
xor
icebp
sub
je
movs
popf
xor
mov
cmp
imul
call
aaa
sbb
aam
cld
mov
imul
jne
adc
inc
jp
shr
pop
cmp
or
stc
sub
xlat
or
or
test
mov
mov
stc
frstor
fild
(bad)
leave
mov
add
(bad)
cmp
test
jge
jno
inc
push
inc
dec
shl
inc
sti
push
cdq
sahf
fld
(bad)
and
pop
inc
xlat
sahf
bound
or
jecxz
aam
xor
dec
pop
adc
movs
add
fmul
test
mov
test
xchg
inc
pop
in
daa
lock
add
xor
push
movs
xlat
cmp
repz
jge
shr
stos
push
movs
mov
fcomp
inc
add
cmc
fst
cmp
mov
push
inc
fsubr
mov
xor
stos
ins
dec
loopne
ds
pop
pop
retf
lods
xor
dec
xchg
and
imul
inc
ins
and
ja
xor
ds
arpl
movs
add
or
stos
and
div
add
jg
cmps
outs
xchg
rcr
popa
in
fisubr
(bad)
inc
add
retf
cdq
push
jns
ret
or
ins
call
shr
es
dec
push
(bad)
aam
jge
(bad)
xor
xor
mov
dec
jle
cmp
adc
push
xor
clc
outs
lods
and
cmp
bound
mov
popf
jmp
jbe
ins
mov
mov
ret
mov
ror
in
add
fs
dec
jne
mov
fmul
adc
sub
in
mov
jg
inc
mov
xchg
movs
add
in
sub
push
hlt
add
daa
and
test
movs
fisubr
hlt
movs
test
push
mul
sahf
xlat
(bad)
pop
leave
sbb
lea
push
or
jecxz
ja
int
das
jb
push
sub
jne
sub
push
mov
push
popf
xor
loopne
add
pop
popa
cmp
movs
push
jo
mov
out
mov
cmp
mov
sbb
push
pusha
loop
mov
fld
fcom
fild
sbb
and
shr
lds
xor
or
push
push
das
fcomp
xchg
and
loope
or
xlat
and
mov
in
or
add
(bad)
jo
mov
jecxz
test
scas
jl
jmp
addr16
ret
or
jmp
cld
jns
mov
outs
repnz
cli
xchg
popa
sbb
(bad)
lods
sbb
jb
push
mov
pop
or
and
lods
loopne
pop
out
ret
test
ret
cmp
push
mov
dec
xchg
add
pop
and
fimul
xchg
out
add
dec
cmps
and
xor
sbb
fidiv
fadd
jae
inc
cmp
repz
loopne
or
inc
mov
retf
or
jg
sub
popa
dec
adc
or
adc
iret
out
fnstenv
in
xchg
or
daa
add
sub
dec
data16
pop
sub
fidivr
jbe
jmp
cwde
cmp
pusha
mov
cmp
mov
xlat
js
pop
dec
cli
js
jmp
mov
xor
pusha
outs
fs
adc
pop
fisttp
mov
mov
popa
ins
out
cmc
cmps
inc
add
mov
jecxz
xor
out
dec
out
in
jnp
mov
mov
push
mov
hlt
test
dec
cmps
movs
test
out
mov
aas
jl
or
(bad)
icebp
push
jne
push
lods
push
lahf
imul
idiv
std
sub
jecxz
fadd
int
cdq
and
and
jne
push
push
sbb
loope
mov
inc
dec
pop
sahf
pop
sub
and
xchg
aad
addr16
jmp
loope
xor
popa
dec
cwde
xor
adc
add
inc
push
jle
or
or
mov
push
push
iret
(bad)
mov
fsubp
add
in
adc
ret
and
outs
popa
fist
cdq
xor
sbb
inc
repz
repnz
push
xor
mov
clc
hlt
xchg
out
cmp
fiadd
rol
aaa
cmp
push
faddp
pop
push
jmp
mov
ret
clc
int3
add
xchg
xor
sub
xchg
bound
dec
cs
std
add
aad
ret
jnp
jg
and
cmps
movs
cld
add
mov
inc
lahf
in
push
(bad)
in
and
cmp
loop
cmp
jmp
xchg
mov
loopne
out
mov
dec
jl
js
mov
xchg
xor
fstp
jno
pushf
movs
mov
xor
jge
pop
inc
movs
rol
arpl
mov
hlt
out
test
stos
cdq
fwait
sub
outs
bound
ss
mov
fbld
and
push
(bad)
fadd
or
mov
fsubrp
mov
hlt
inc
sub
out
or
pop
std
int
pushf
add
fldln2
xchg
mov
(bad)
lea
mov
adc
add
mov
adc
dec
mov
jl
inc
les
push
cli
lea
mov
mov
jmp
in
inc
(bad)
push
cmps
pop
adc
dec
mov
mov
lahf
call
mov
adc
fwait
sub
not
sbb
cmp
ja
loope
push
mov
sar
jle
neg
data16
jg
aam
stos
xor
scas
pop
push
ja
int3
pop
xchg
adc
ins
std
shl
addr16
pop
mov
hlt
(bad)
push
hlt
jnp
fiadd
cs
nop
and
mov
mov
(bad)
lods
adc
sub
shr
jns
xor
adc
pop
(bad)
lahf
xchg
cmp
les
mov
test
bndstx
pop
mov
pop
mov
lods
fisubr
and
mov
sbb
(bad)
xchg
inc
cs
sub
add
daa
sbb
xchg
jmp
xor
test
(bad)
mov
sub
call
(bad)
jb
sub
retf
arpl
inc
nop
pop
mov
adc
or
jmp
mov
add
push
jecxz
pop
js
fnstcw
cmp
xchg
cmp
ror
lock
(bad)
aam
lods
push
fnstcw
add
and
xor
xchg
push
adc
or
jmp
jb
jmpw
(bad)
aad
(bad)
addr16
scas
xlat
pushf
cld
mov
loopne
dec
rcl
and
inc
outs
daa
imul
data16
fist
aam
sub
push
xchg
cdq
dec
and
mov
ja
test
stos
pop
nop
and
add
mov
aad
out
div
mov
mul
clc
mov
js
outs
in
mul
out
ret
das
out
add
cmp
dec
push
fldcw
mov
mov
push
cmc
in
loopne
sub
shr
jmp
jecxz
mov
icebp
mov
mov
nop
jne
dec
in
int3
xchg
aam
mov
jp
push
jmp
scas
test
jmp
xchg
mov
and
cmp
(bad)
mov
inc
sub
add
sbb
mov
jge
pop
imul
mov
loop
mov
sbb
pop
inc
jbe
je
sbb
ficom
sbb
dec
xchg
int3
adc
mov
inc
cmp
leave
mov
pop
push
push
dec
jp
retf
shl
cmp
lea
push
push
add
or
enter
mov
(bad)
loopne
mov
cmp
bnd
and
inc
sub
mov
mov
mov
out
xchg
cmps
ret
dec
adc
out
pop
fsubr
ss
push
push
jmp
add
inc
add
(bad)
mov
mov
or
adc
sbb
pop
stos
aam
in
stos
xchg
(bad)
mov
mov
nop
ret
popf
lds
movs
and
std
jle
inc
and
jae
in
scas
add
push
mov
jbe
pop
and
xor
lea
xor
aad
push
add
sbb
pusha
jl
rcr
and
data16
xchg
mov
cmp
shl
and
jbe
sub
fiadd
or
add
jl
cmp
mov
xchg
dec
push
mov
outs
jns
pop
mov
sbb
pop
pop
dec
aas
loope
bound
mov
mov
and
dec
jns
adc
rcr
mov
xchg
js
imul
inc
add
xchg
in
shl
retf
mov
aaa
dec
fisttp
cmp
mov
dec
stc
pushf
into
xchg
ds
mov
sub
dec
inc
popf
sbb
jle
loop
fadd
jmp
jbe
and
call
mov
and
pop
xchg
mov
sub
in
pop
test
inc
mov
(bad)
mov
pop
add
sbb
fisub
aam
pusha
and
dec
mov
and
and
push
lea
rol
inc
test
add
retf
dec
adc
push
xchg
es
push
adc
and
cmps
sub
pusha
push
mov
in
(bad)
push
sbb
sub
loop
call
mov
xchg
add
(bad)
sti
and
or
pop
xlat
in
jb
ja
sti
(bad)
lock
and
mov
xchg
jp
enter
xchg
add
lods
ins
imul
mov
sub
jmp
jle
in
bound
xchg
fcomp
neg
nop
movs
mov
adc
mov
push
sahf
call
(bad)
clc
mov
push
shl
and
pop
xchg
mov
jmp
stos
ds
aad
es
mov
lods
push
cmp
mov
jle
mov
sbb
sbb
pusha
mov
jbe
lods
aam
sbb
mov
lahf
in
xchg
pop
lds
ins
fsubp
in
pop
call
and
inc
xchg
pop
call
push
sahf
stos
inc
pop
cmps
cmp
add
lahf
das
fwait
jg
pop
adc
stos
fsub
pop
xchg
iret
cs
call
shl
mov
mov
outs
ins
jne
push
adc
mov
pop
dec
dec
push
add
cmp
bsr
rcl
loop
mov
xor
pusha
add
and
push
repz
mov
push
add
xchg
cmp
jnp
popa
and
inc
(bad)
rcl
add
and
pop
ficom
push
je
pop
and
pop
sbb
adc
jp
sti
pop
push
shl
pop
and
ret
arpl
out
mov
push
test
xor
sub
push
test
fdiv
ja
inc
ss
or
jmp
jns
cwde
bound
fwait
movs
mov
ins
addr16
and
cmp
lods
or
and
push
loop
add
(bad)
inc
jl
ret
xchg
outs
pop
daa
pushf
(bad)
stc
dec
mov
movs
out
aad
push
pop
or
and
cmp
cld
add
cmps
test
mov
mov
mov
and
push
cmps
mov
or
mov
mov
aad
mov
xchg
dec
mov
dec
push
xchg
or
dec
stos
mov
or
outs
cmp
mov
ins
pusha
mov
sbb
and
outs
push
adc
dec
inc
mov
inc
add
fs
xor
cmp
js
test
dec
pop
sub
adc
push
aam
cmps
outs
ds
stos
add
adc
js
cdq
mov
add
loop
ds
and
test
(bad)
xchg
mov
jnp
sahf
ins
aam
test
dec
mov
mov
dec
cmps
fstp
push
daa
rol
pop
adc
jne
cdq
loop
push
inc
sub
inc
rcr
fimul
mul
mov
repz
adc
aam
sub
adc
bound
pop
cmp
jl
sub
(bad)
xrelease
mov
cmp
pop
mov
shl
cdq
jge
jp
dec
pop
rol
sbb
cli
inc
sahf
or
daa
mov
pop
scas
cmp
jmp
iret
xchg
int3
adc
aas
pop
shr
inc
cmp
int
icebp
push
xchg
les
cmc
or
fsub
call
lahf
add
pop
cmp
mov
ja
xchg
addr16
in
loop
sahf
sub
adc
inc
loopne
je
xchg
sar
scas
in
repz
bound
adc
inc
add
mov
(bad)
out
in
jge
sbb
dec
xor
push
data16
mov
fwait
mov
jb
cmps
loop
dec
inc
pop
xchg
cmp
xlat
jne
adc
or
fucomip
push
mov
mov
loop
pushf
dec
psrad
loopne
pushf
pop
retf
cmp
push
push
shl
jo
sahf
dec
sbb
pop
ret
add
xchg
rcl
clc
sub
ja
fnstsw
arpl
push
inc
jecxz
xor
imul
lds
lods
sub
sbb
rcr
dec
fisub
sbb
ja
inc
xlat
cmc
arpl
push
jb
sub
cmp
xor
mov
xchg
jae
push
data16
xchg
xchg
enter
or
xor
adc
xlat
mov
and
out
jmp
dec
ret
pop
in
add
xchg
(bad)
fcos
es
xlat
lods
fwait
jmp
sbb
pop
in
jbe
adc
dec
daa
movs
xchg
ja
sub
jl
or
mov
mov
in
popf
and
sbb
(bad)
add
les
leave
ss
mov
icebp
jle
imul
xor
jp
fiadd
loope
cmps
mov
pop
xchg
inc
xlat
mov
inc
outs
(bad)
inc
pushf
gs
ins
pusha
push
fist
jecxz
imul
mov
pop
(bad)
in
mov
stos
shr
xor
pop
sub
ror
push
push
dec
add
mov
cmp
adc
mov
add
call
push
sbb
cmc
xor
jmp
std
push
jno
pop
stc
adc
adc
test
neg
dec
jb
loope
stos
lds
pop
or
ja
cmps
adc
dec
test
imul
sbb
xchg
rol
xchg
pusha
cwde
cmp
or
std
shl
mov
scas
xor
lods
adc
loope
in
aad
fwait
jbe
test
fimul
loope
out
das
daa
mov
jnp
pushf
lds
mov
scas
jle
mov
arpl
fadd
sbb
fist
pop
loop
sbb
(bad)
dec
sub
pop
(bad)
test
fsubr
mov
and
inc
lods
in
hlt
jg
js
ja
pop
movs
dec
daa
or
or
inc
stc
ins
xchg
push
aam
fbld
sub
inc
in
jne
(bad)
aad
mov
adc
adc
hlt
aas
jmp
xor
adc
jp
daa
sar
aam
retf
cmp
mov
dec
daa
pusha
or
sub
mov
test
std
mov
push
stos
les
or
and
push
enter
pop
xchg
push
cmp
js
fwait
je
mov
push
fnstenv
jp
lods
imul
cmc
cmp
sti
xchg
outs
dec
sub
aad
sbb
in
xchg
adc
dec
mov
mov
xor
and
jmp
xchg
jmp
div
jmp
mov
das
hlt
or
loopne
pop
push
xor
jb
push
dec
bound
test
imul
jmp
test
inc
ja
ss
lock
cmps
sub
or
movs
dec
in
mul
mov
cdq
scas
sbb
iret
cli
or
mov
sub
loopne
stos
jno
xchg
loope
add
mov
inc
(bad)
(bad)
xchg
xlat
lahf
rol
push
stos
mov
enter
test
sbb
clc
dec
pop
(bad)
(bad)
jp
pop
call
test
dec
arpl
int
push
fisub
dec
ins
test
and
sbb
sbb
fisttp
sub
push
out
cmc
xor
add
push
retf
mov
(bad)
arpl
dec
sub
fcom
xchg
outs
in
popf
(bad)
jmp
aad
fbld
sub
stos
lea
outs
jecxz
push
test
add
xchg
mov
sbb
push
imul
or
dec
or
ret
andnps
(bad)
gs
test
mov
cs
adc
cmp
mov
mov
std
ds
ror
xor
vphadduwq
call
sub
mov
pop
jge
repnz
pop
ficom
xchg
loopne
loope
and
jbe
test
clc
push
mov
mov
xor
arpl
and
mov
imul
xchg
push
cli
retf
cs
rol
and
xchg
mov
in
sar
jno
mov
fisub
retf
add
inc
mov
test
jp
gs
jmp
out
mov
pop
std
pusha
(bad)
xchg
into
(bad)
and
inc
sbb
lods
pop
dec
mov
inc
aam
retf
pop
fs
mov
push
out
repz
cmps
mov
mov
dec
les
popa
dec
inc
jle
mov
sti
test
cmp
movs
add
rcl
or
(bad)
and
xchg
es
jmp
mov
xchg
aas
push
sbb
jge
pop
out
or
or
(bad)
cmp
push
xchg
add
mov
pop
icebp
inc
push
sar
call
mov
ret
dec
popf
xchg
pop
add
mov
(bad)
sub
dec
push
aad
jecxz
mov
(bad)
outs
adc
adc
sbb
test
and
es
in
mov
ins
and
sbb
test
sub
lea
mov
pop
cmps
dec
mov
pop
mov
stc
and
inc
push
mov
outs
mov
push
inc
dec
xchg
jge
add
popa
xchg
add
sub
and
pop
cwde
jo
push
cli
call
imul
(bad)
clc
cmp
dec
popf
packssdw
cmp
jecxz
sbb
pop
aad
and
cmp
data16
pop
popf
mov
jge
adc
repnz
(bad)
jmp
or
sti
mov
bound
xor
xor
aas
add
sub
jb
sbb
cmp
int
sahf
and
mov
lahf
jg
pusha
dec
(bad)
xor
mov
mov
test
inc
das
hlt
and
repz
cmp
jnp
mov
ins
rol
callw
sub
int
mul
pop
scas
adc
xor
add
mov
sub
mov
lock
mov
push
jne
adc
cmps
dec
and
fadd
mov
nop
sbb
jns
xchg
movs
xchg
rcl
sti
adc
movs
mov
and
ja
mov
lahf
icebp
stos
xchg
add
add
imul
cmp
pop
add
and
pop
jnp
push
cmp
mov
das
push
daa
push
add
mov
mov
scas
in
movs
adc
hlt
scas
add
mov
sahf
stos
xor
imul
mov
in
inc
push
std
dec
pop
inc
stos
push
or
test
test
sahf
cli
(bad)
fld
mov
dec
adc
inc
sub
and
mov
(bad)
repz
outs
mov
shr
jb
dec
inc
pop
pop
mov
hlt
cmp
cmp
push
pop
and
xchg
sbb
jp
test
add
stos
seto
shl
imul
sar
(bad)
dec
pop
push
sbb
adc
in
fs
lock
sbb
jle
sub
arpl
pusha
push
imul
ret
inc
mov
jmp
mov
movs
leave
mov
addr16
sbb
(bad)
fnstcw
dec
xchg
(bad)
pop
ds
sub
push
mov
cli
push
imul
inc
mov
out
scas
push
ror
or
jl
gs
call
and
cmc
loop
data16
repnz
(bad)
repnz
imul
jb
adc
test
mov
xchg
clc
scas
jl
ret
sub
jbe
jmp
xchg
cli
and
inc
and
xchg
cmp
mov
icebp
sbb
icebp
push
jecxz
rcr
cmp
mov
lods
out
into
push
(bad)
out
xor
mov
outs
cmp
adc
and
mov
clc
pop
retw
sbb
hlt
xor
jmp
sti
in
inc
(bad)
mov
pop
rcl
out
aad
pop
test
mov
mov
add
adc
push
xchg
sbb
retf
aad
mov
push
fistp
adc
mov
popf
pop
push
and
jmp
fadd
scas
(bad)
out
push
enter
jp
je
and
fiadd
and
fwait
hlt
mov
sahf
retf
fiadd
inc
adc
in
or
cmp
jg
pusha
fisub
adc
out
nop
mov
xor
es
push
ret
stc
add
jge
ins
lea
add
je
sbb
cmps
jge
out
xlat
loope
jne
mov
in
adc
js
or
inc
push
sbb
and
leave
fwait
(bad)
out
sub
sub
rol
daa
popf
stos
jae
inc
push
dec
or
je
ficom
mov
xlat
sbb
sbb
inc
push
pminsw
inc
jnp
popf
pop
loope
fiadd
mov
sub
sub
dec
mov
mov
aad
push
push
inc
out
or
fisubr
mov
sar
adc
das
mov
or
daa
xchg
ds
retf
iret
es
sub
lahf
add
mov
repnz
stos
pop
repz
jo
sbb
ret
pushf
ret
rol
loop
int3
mov
and
jo
pushf
push
or
and
xchg
adc
inc
fwait
arpl
cmp
xchg
int
fistp
retf
and
in
dec
add
adc
xor
mov
call
cmc
int
mov
sub
dec
outs
rcr
cmp
jb
test
or
clc
lods
shr
mov
outs
mov
and
cmp
cdq
adc
mov
sar
xor
sti
mov
xor
clc
loope
call
sub
aam
ja
or
adc
and
dec
das
or
fisubr
sub
in
ret
and
enter
cmp
cs
adc
test
mov
ins
cmps
mov
sbb
adc
div
xlat
xchg
iret
push
mov
scas
idiv
leave
(bad)
into
rcr
pop
fcmovbe
test
out
pusha
cmp
push
sbb
mov
xchg
pop
adc
pop
mov
push
or
in
mov
bnd
xchg
cmps
push
dec
(bad)
iret
xchg
cmp
mov
test
daa
or
push
inc
or
and
aas
or
or
test
add
push
icebp
mov
mov
jns
nop
inc
cmp
push
sub
push
fadd
inc
hlt
add
pushf
rol
mov
push
jmp
ja
clc
xchg
hlt
fsubp
les
sbb
ds
adc
mov
stos
jmp
mov
xchg
cmp
ror
inc
(bad)
jmp
es
jle
add
fsubr
sbb
retf
cmp
mov
test
xlat
pop
arpl
and
(bad)
pop
mov
sub
mov
imul
iret
imul
scas
hlt
xor
leave
add
mov
mov
or
pushf
pop
in
jmp
in
pop
jmp
jmp
xor
iret
mov
sbb
repnz
xchg
rcl
stos
xor
xor
dec
cld
lods
hlt
inc
push
fdivr
call
push
jns
popa
jl
cmp
lds
gs
(bad)
arpl
jmp
push
jecxz
mov
out
pop
ficomp
stos
push
shl
add
mov
lods
cmp
cmp
inc
cmp
add
adc
int3
or
inc
jge
fst
repnz
fcom
xor
(bad)
ret
push
mov
dec
xor
adc
fdivr
and
jmp
cmc
mov
aas
inc
lahf
sub
or
jmp
push
dec
inc
or
pushf
push
lods
pop
mov
push
xor
add
xchg
adc
or
xchg
int3
in
xchg
or
adc
loopne
loopne
imul
loopne
mov
fs
mov
popa
jbe
push
mov
(bad)
pusha
repz
xchg
out
ds
shr
out
clc
in
jo
ret
push
adc
gs
popa
scas
pop
or
sub
sub
retf
sbb
sahf
sbb
push
dec
cmc
mov
outs
shr
sub
sbb
push
push
bound
out
mov
fiadd
rcl
or
hlt
mov
mov
and
fsubr
out
fmul
mov
adc
xor
call
jne
fnstsw
xchg
xchg
jmp
leave
mov
pusha
add
cwde
loop
fbstp
out
(bad)
xchg
aam
jge
add
push
mov
ffree
jle
pop
add
loop
icebp
ror
movs
test
push
loope
inc
xchg
fdiv
in
add
retf
das
bound
mov
in
ins
xor
cli
jp
add
adc
sbb
xchg
xchg
mov
dec
add
gs
dec
pop
scas
pop
pop
stos
out
ins
pop
mov
jno
fucomip
adc
xor
(bad)
dec
jae
imul
sub
mov
stc
pop
retf
and
test
xor
mov
dec
xlat
neg
cmp
test
loopne
mov
mov
push
js
(bad)
pushf
pandn
dec
retf
inc
repz
push
mov
or
lods
arpl
mov
push
jg
jmp
adc
push
push
out
jle
and
stc
fwait
(bad)
aam
imul
xor
retf
cld
(bad)
dec
mov
mov
xchg
div
sbb
dec
cmp
jl
into
add
mov
hlt
jmp
inc
aad
push
mov
sbb
js
leave
inc
in
cmp
dec
cmp
sub
sbb
sub
jne
fwait
xor
push
push
mov
test
push
inc
adc
adc
mov
and
imul
fs
retf
test
add
(bad)
mov
mov
push
cmps
cwde
jmp
push
mov
xchg
xchg
or
rcl
mov
nop
stos
adc
add
dec
mov
pop
mov
out
cmps
cs
add
xor
bound
mov
ficom
nop
dec
inc
call
call
inc
lahf
ja
cmc
jecxz
rcr
sub
and
aas
ficomp
pop
ret
lds
icebp
mov
sub
pusha
pop
aam
cmps
ss
fcom
aas
not
push
and
and
inc
cmp
xlat
sub
sub
or
fnsave
lock
es
jo
mov
outs
fcom
mov
xchg
mov
push
cmp
test
inc
cmp
out
das
punpckldq
sub
jmp
into
outs
sub
rol
push
sbb
inc
imul
push
pop
loopne
mov
in
div
cmps
mov
ficom
inc
mov
addr16
lock
adc
pop
arpl
sbb
pop
cmp
jae
sbb
pop
outs
and
repnz
jae
lds
cmps
jle
loope
iret
aad
sbb
mov
pop
test
fwait
push
ret
mov
out
push
jbe
pop
inc
sub
jge
(bad)
std
push
pop
ins
loope
xchg
xchg
mov
push
adc
pop
mov
test
mov
jmp
or
or
mov
inc
dec
jne
dec
leave
push
lds
in
mov
push
fdiv
or
retf
push
popa
and
mov
add
ins
and
push
pushf
(bad)
std
cmp
int3
ror
mov
cli
inc
sub
inc
push
fisubr
cld
pop
fcomp
dec
ins
out
stos
sbb
cmp
or
inc
nop
jmp
sub
inc
imul
jbe
xchg
push
push
lahf
daa
div
out
or
inc
out
icebp
mov
xchg
cmps
push
in
adc
cld
into
push
in
xlat
js
adc
cmp
daa
outs
pop
jmp
jle
and
push
fnstsw
shr
push
(bad)
aas
daa
dec
adc
out
inc
hlt
sub
dec
in
pop
leave
push
ffreep
xlat
push
ja
xor
pushf
ss
add
adc
and
test
pop
das
dec
loopne
mov
es
sbb
inc
xchg
out
leave
ret
push
xor
jge
and
mov
dec
jg
lahf
fld
loope
xchg
pushf
xchg
(bad)
xor
mov
(bad)
(bad)
jle
cdq
aaa
imul
push
je
lods
int
jp
je
and
ret
(bad)
cmp
mov
call
sti
push
jg
mov
and
test
push
sub
add
in
call
pop
lahf
push
push
(bad)
leave
sub
pop
jg
in
xchg
ins
push
faddp
call
stc
std
or
jne
or
push
icebp
loop
outs
aad
out
add
pop
leave
dec
mov
ror
xchg
popa
add
imul
jno
push
push
lock
(bad)
jne
(bad)
adc
pop
adc
aas
sub
sub
xor
mov
dec
fdivr
jmp
jmp
fistp
fwait
xor
imul
cmp
jne
xor
fmul
xchg
mov
inc
mov
out
(bad)
stc
dec
scas
or
mov
or
sti
adc
scas
(bad)
push
movs
push
fcmovb
mov
and
sub
lahf
sub
mov
fist
cwde
cli
mov
and
lahf
mov
xchg
jbe
jp
jg
fbld
int3
stc
push
or
push
and
mov
dec
hlt
pop
aas
sti
add
repz
push
inc
jne
xor
fs
pop
push
add
xor
inc
inc
mov
pushf
lea
imul
in
or
xchg
push
pop
lods
mov
pusha
adc
mov
xor
pop
stos
loopne
push
popf
xchg
inc
xchg
cs
out
imul
fistp
in
loope
mov
dec
(bad)
test
dec
xchg
pop
rcr
jns
(bad)
jae
pop
es
mov
inc
sub
(bad)
pushw
retf
sub
movs
jg
shl
dec
test
xor
cmp
adc
jo
inc
mov
or
imul
scas
je
fwait
dec
mov
adc
iret
pop
leave
mov
dec
or
aas
mov
jmp
add
cmp
push
in
or
ss
out
add
inc
xchg
imul
push
popf
xlat
mov
mov
int3
shl
cli
std
enter
or
mov
push
jae
jbe
stc
repz
pop
xchg
add
clc
sar
ffreep
out
adc
(bad)
sub
mov
std
jmp
mov
call
mov
adc
outs
adc
mov
xlat
cmc
push
repnz
loop
das
jb
push
repz
into
cs
(bad)
imul
push
xchg
pushf
out
lods
rep
xchg
sub
and
mov
and
or
fs
mov
fwait
imul
push
fidiv
adc
pop
test
push
mov
in
dec
adc
into
adc
xchg
in
jl
ja
or
cmp
pop
nop
cmps
or
cmp
or
shl
jle
iret
sub
je
dec
std
or
loopne
inc
ins
pusha
or
cmps
rcr
inc
mov
adc
lock
mov
sbb
push
repnz
rcr
push
or
data16
push
clc
sub
jecxz
hlt
enter
rcl
xchg
test
imul
rol
push
mov
mov
add
and
xchg
cmp
or
pop
cs
outs
and
sbb
or
and
inc
jecxz
push
and
inc
mov
sbb
pop
jl
popa
mov
mov
ret
jbe
jmp
jbe
ds
ins
out
add
mov
ret
jp
mov
jle
sub
push
cld
pop
shl
fild
dec
adc
outs
push
cmp
fnstcw
(bad)
dec
pop
popf
pop
add
arpl
jo
jmp
fst
dec
movq
adc
mov
cmp
adc
shr
xlat
cmp
retf
ret
enter
cmp
and
xchg
pop
sub
ins
lahf
jo
sub
sbb
neg
mov
jno
test
mov
sahf
jb
ins
ins
push
mov
jo
rol
push
push
mov
inc
stos
in
mov
js
push
dec
adc
rcl
test
jle
jle
shr
cdq
into
stos
shl
loopne
cmps
inc
push
mov
adc
in
jnp
add
push
jnp
ins
lods
fld
and
sub
sti
nop
sub
cmp
push
mov
jl
test
inc
and
xor
xchg
push
jl
clc
cmps
sub
dec
cld
imul
mov
mov
push
jecxz
nop
jmp
(bad)
or
call
iret
fld
ficom
push
stc
ins
cmp
cmp
rol
iret
bound
call
xchg
xor
aad
fsub
or
sub
fidivr
dec
inc
out
shl
sti
out
je
pop
xchg
hlt
fs
pop
and
jae
cmp
add
ret
xchg
sahf
lods
(bad)
or
push
xor
or
add
hlt
fstp
adc
fmul
jge
push
ret
in
scas
and
fcomp
jmp
clc
sub
repz
xchg
jbe
or
in
test
test
pop
or
sahf
outs
popa
gs
repz
xchg
jne
cmps
outs
test
ins
sahf
stos
lea
add
mov
or
jbe
pop
js
cli
dec
fmul
test
cmp
xchg
data16
ret
sar
and
pushf
mov
pop
ss
loop
add
stos
fstp
cwde
add
add
cmps
stc
leave
mov
loop
mov
add
mov
inc
aas
loope
jns
pop
gs
cli
pop
rcl
push
sahf
jge
pop
jge
jno
add
inc
fidiv
jmp
inc
inc
loop
repnz
fnstenv
jmp
xor
cmp
xor
mov
enter
xchg
int
(bad)
test
mov
sub
jmp
imul
mov
cmp
jb
push
fild
cmp
(bad)
in
ds
jns
pop
mov
cmp
mov
test
enter
cmp
cmc
loope
cmp
push
push
imul
call
pop
stos
jmp
dec
jecxz
sbb
in
repnz
inc
sub
inc
hlt
jmp
mov
sub
xor
cli
lea
rcr
push
and
out
cld
xchg
popf
jne
sbb
jmp
imul
gs
cli
frstor
jno
xor
jmp
mov
int
(bad)
xchg
xchg
sahf
dec
xor
jl
push
scas
pop
mov
aam
test
cmps
std
test
mov
jbe
(bad)
pop
xor
loop
stc
mov
xchg
xor
dec
xchg
add
retf
ret
pusha
push
stos
pushf
sbb
cmp
lods
inc
scas
iret
pop
bound
dec
inc
(bad)
lahf
stos
inc
pop
aas
dec
sbb
lahf
dec
dec
in
add
ja
pop
cmp
inc
jmp
push
aad
std
jb
inc
fdivr
mov
xchg
cmp
xchg
mov
xor
(bad)
add
dec
xlat
cmp
mov
inc
call
lea
cs
inc
test
push
adc
movs
xor
mov
and
hlt
clts
cmp
mul
sahf
idiv
mov
leave
mov
mov
retf
pop
adc
jne
mov
or
ja
and
cmp
add
in
cmps
jno
stos
into
sbb
cli
std
sti
or
push
cmp
add
int3
push
push
test
mov
out
cmp
das
outs
test
hlt
neg
hlt
push
sbb
cmp
lahf
ins
test
fwait
cmp
mov
inc
ret
dec
and
fadd
xchg
add
inc
cmps
ja
add
ins
jns
push
in
sbb
xchg
pushf
push
adc
adc
inc
jns
ja
loopne
push
(bad)
and
inc
cmp
or
jns
(bad)
aas
jne
mov
and
mov
out
sbb
jp
stc
imul
xchg
into
push
dec
add
popa
(bad)
jmp
mov
push
ja
inc
jmp
movs
in
fstp
and
mov
fst
jo
in
cmps
cmc
xchg
inc
jp
ret
mov
cli
and
push
xchg
hlt
mov
mov
je
jg
fwait
(bad)
fbld
jns
jnp
pop
cmp
pusha
cmovle
nop
pop
mov
ins
xor
mov
xlat
inc
fcmovnbe
mov
sub
clc
and
push
retf
and
mov
(bad)
cmc
jmp
adc
(bad)
jbe
loop
cmp
adc
and
jmp
xchg
pop
dec
sbb
pop
and
mov
pop
lods
xor
push
mov
sub
addr16
imul
hlt
sbb
outs
add
mov
add
(bad)
movs
aad
in
ficomp
mov
jb
adc
arpl
cmp
fidiv
out
push
and
cmp
add
xchg
test
add
scas
int
retf
mov
stc
jmp
imul
repz
and
add
mov
cmps
adc
push
dec
iret
or
div
lock
xchg
clc
imul
ret
inc
pop
pop
mov
bound
and
cmps
lock
dec
scas
imul
xchg
ds
push
es
mov
sub
js
mov
idiv
outs
cmp
std
loop
xchg
dec
repz
ins
mov
mov
adc
or
shl
fsubp
xor
retf
ins
inc
out
sub
xchg
xchg
jno
and
mov
mov
cwde
cmps
int
fist
inc
xchg
mov
fcmovnbe
not
loopne
aas
xchg
sub
cmc
popa
icebp
popa
cwde
jb
and
and
and
and
mov
xor
push
xchg
int3
sub
sub
mov
jl
dec
mov
and
sub
cwde
rol
jae
(bad)
mov
enter
and
ret
jo
sti
jnp
mov
pop
add
push
xor
jmp
dec
int3
sub
ds
ret
pop
xor
sub
imul
inc
lock
(bad)
(bad)
outs
ret
or
mov
add
mov
ret
sub
outs
movs
inc
retf
xor
and
or
in
jge
js
xor
cdq
cmp
(bad)
jmp
or
mov
dec
and
nop
mov
test
(bad)
jo
cmc
dec
(bad)
cmps
xor
xchg
mov
sbb
adc
xor
adc
add
loop
pop
inc
in
xor
push
int
mov
pusha
(bad)
cmc
push
or
or
hlt
ror
mov
jns
out
cmp
fbstp
dec
adc
push
jl
test
push
dec
mov
jg
in
and
retf
ins
sub
inc
ins
sub
xlat
and
outs
pop
or
lock
lods
cmc
xchg
or
ins
mov
add
xchg
push
sbb
bnd
sbb
fnsave
inc
in
or
cmp
adc
adc
sub
test
dec
ret
and
cmp
mov
mov
out
mov
iret
ss
into
sub
push
sbb
ss
in
test
ins
daa
outs
cmp
std
loope
xor
jo
cmp
fcmovu
jmp
shr
xor
mov
sub
sbb
push
mov
xchg
(bad)
and
ds
fild
mov
and
jmp
jmp
mov
ficomp
sbb
push
cmp
fistp
dec
test
adc
test
repz
cmp
ror
inc
clc
lea
fwait
idiv
xor
dec
push
inc
push
pop
jl
cmp
xchg
adc
rsm
fmulp
sbb
cmp
popf
cmp
mov
xor
inc
sbb
add
push
fld
mov
pop
icebp
pushf
fst
add
pushf
dec
popf
fdiv
adc
cmps
mov
hlt
stc
mov
cmp
popf
and
mov
push
popa
adc
xchg
push
(bad)
ror
loopne
(bad)
out
xchg
jmp
popf
cmps
pop
mov
inc
js
mov
es
xchg
or
bound
fidiv
cmps
and
push
addr16
inc
and
dec
fsubr
cmp
pop
in
std
int3
adc
jae
sbb
dec
scas
push
push
jl
cli
sbb
jns
test
cld
dec
jo
lds
mov
shr
adc
sbb
inc
and
dec
ret
and
jmp
and
push
inc
rcr
jge
scas
leave
pushf
adc
test
shl
retf
mov
adc
leave
aad
fs
mov
loopne
xchg
sbb
mov
out
mov
(bad)
adc
and
jmp
lods
xchg
xor
(bad)
aas
add
test
int3
add
pop
(bad)
call
mov
cmps
clc
stc
out
cmp
add
popf
sbb
shr
pop
or
fwait
cwde
jmp
add
js
call
loopne
out
aad
and
ret
retf
mov
jno
popf
inc
inc
mov
rep
das
cld
lds
pop
stos
inc
iret
data16
xor
js
dec
ins
not
xor
rcr
inc
jnp
mov
push
out
mov
push
mov
lds
cmp
sbb
sbb
in
xor
mov
(bad)
adc
cmp
(bad)
leave
cmps
shl
mov
neg
iret
xor
mov
dec
pop
push
or
je
mul
and
stos
ror
stos
fisubr
popf
jnp
popf
cdq
mov
jle
imul
clc
(bad)
not
dec
push
dec
push
xor
xlat
dec
mov
mov
mov
aaa
xor
adc
pusha
bound
scas
in
inc
dec
mov
xor
dec
pop
adc
iret
mov
imul
cs
(bad)
mov
mov
or
sbb
(bad)
push
jge
ret
lds
pop
push
mov
and
sbb
jae
clts
mov
mov
mov
inc
push
(bad)
ror
adc
repz
mov
test
jle
mov
mov
mov
ins
xchg
cmps
sbb
cmps
adc
(bad)
pusha
inc
pop
mov
adc
and
pusha
sub
mov
pop
lea
lea
(bad)
dec
mov
and
push
jl
repz
ja
fldcw
test
pushf
lods
addr16
es
(bad)
dec
cmp
push
add
mov
fisttp
fist
adc
fnstsw
mov
test
sbb
(bad)
push
fimul
clc
sar
cmp
add
push
movs
add
pop
push
xor
gs
cmp
arpl
out
dec
jbe
loopne
lea
mov
and
pushf
repz
ja
sub
ret
mov
(bad)
js
xchg
add
(bad)
les
or
call
sti
mov
dec
xchg
xchg
jae
(bad)
cmp
in
repz
xor
push
cmp
(bad)
fist
das
push
ins
jne
sub
movs
fwait
xor
mov
lods
mov
sti
mov
mov
pop
jg
loop
xchg
mov
test
xor
push
pop
es
shr
add
sub
sub
(bad)
ficom
and
push
jo
push
icebp
gs
in
adc
inc
dec
jmp
push
std
push
out
mov
in
mov
push
out
mov
push
jecxz
push
sbb
cmp
mov
nop
out
mov
cmp
(bad)
(bad)
mov
mov
sti
inc
pop
jne
sub
xchg
xor
shl
idiv
sbb
ret
(bad)
jmp
loopne
test
je
cs
xchg
retf
push
sub
int
mov
push
ds
ret
mov
dec
call
xor
ins
mov
adc
mov
push
add
dec
aas
in
cmp
jecxz
in
(bad)
sub
xchg
scas
in
test
call
gs
leave
xchg
mov
aad
mov
dec
arpl
sbb
jmp
test
adc
sub
mov
movs
add
push
adc
inc
dec
popa
pop
in
ins
mov
stos
in
out
and
add
push
cmp
std
or
inc
jg
int3
out
dec
cmc
jl
int3
sbb
adc
icebp
aad
cmp
sub
cmp
aas
scas
mov
ins
je
mov
mov
push
(bad)
shl
call
jno
or
fidivr
int3
in
add
retf
push
or
xlat
loop
push
fisttp
xchg
or
clc
test
sub
jge
or
xchg
scas
out
or
jno
call
or
jecxz
sbb
push
scas
lock
jmp
aaa
push
sub
xchg
xor
imul
int
and
pop
movs
test
out
xchg
das
inc
gs
mov
lahf
adc
fnstcw
gs
push
or
aas
or
fstp
push
out
scas
mov
lock
cdq
scas
sti
xor
and
popf
and
jbe
adc
adc
lds
mov
sbb
hlt
aad
lods
aas
pop
xor
cwde
hlt
cmp
cmp
inc
mov
or
dec
adc
bound
leave
mov
xor
jb
sub
sbb
sub
aas
sbb
sub
leave
ror
int
mov
repz
ja
or
(bad)
call
xchg
sub
loopne
jg
pop
cmps
je
scas
cmp
aaa
pop
jae
or
lods
push
xchg
push
movs
iret
inc
(bad)
jmp
jne
mov
sub
sub
push
jmp
sub
fadd
outs
jge
ret
pop
call
mov
xor
gs
push
mov
stos
and
in
dec
sbb
dec
or
push
rcl
addr16
nop
inc
add
lods
in
call
mov
mov
lds
dec
in
and
inc
mov
call
ins
retf
sub
xchg
sbb
sbb
std
repnz
push
retf
shl
push
aad
fadd
shr
repz
inc
push
jg
cmp
cmps
pop
xchg
pop
rcr
cwde
add
retf
pop
or
add
lock
jb
and
and
cld
sbb
js
in
jae
push
dec
push
mov
mul
pop
jae
in
pop
adc
jmp
sti
mov
in
mov
or
xchg
pop
pop
cli
mov
fldenv
cmp
data16
add
fcmovbe
add
and
adc
jns
or
(bad)
inc
sub
mov
imul
scas
adc
call
or
inc
mov
es
ror
mov
and
and
mov
add
pop
out
loopne
pop
jmp
xchg
js
movs
sub
in
imul
push
add
cmp
xchg
adc
(bad)
test
ror
push
jmp
sub
push
xchg
repnz
in
ins
adc
add
scas
out
outs
fucom
(bad)
mov
cld
xchg
es
xor
out
push
out
sub
or
or
pop
jmp
xor
xor
test
fwait
cmp
xchg
mov
fild
mov
cli
sub
int3
sbb
pop
icebp
sbb
cmp
enter
cwde
shl
mov
and
push
test
jbe
ins
test
cmps
dec
lds
or
sub
fwait
push
push
and
int
iret
sbb
mov
addr16
les
or
loopne
dec
shl
ret
mov
in
loop
sub
pop
push
into
push
jecxz
call
aad
retf
fld
aas
ins
movs
xlat
repnz
xor
imul
ja
(bad)
push
and
pop
push
add
pop
das
sbb
inc
ds
fnstenv
pusha
mov
stc
mov
rcl
mov
cmps
pop
add
jmp
xlat
test
push
cmps
xchg
outs
add
mov
and
pop
fcmovu
jae
scas
in
rcr
outs
ror
adc
push
and
mov
add
test
dec
cmp
jl
arpl
jl
test
adc
cmp
mov
or
adc
movs
mov
rcr
sub
add
gs
ret
bound
and
and
jnp
mov
mov
jp
mov
add
mov
sub
sbb
jbe
mov
dec
inc
pop
mov
mov
pop
cld
stos
(bad)
shl
and
enter
ins
sahf
sbb
sub
(bad)
jmp
aaa
mov
call
cdq
mov
lods
loope
mov
rcl
xor
cmp
cmp
inc
and
jno
les
xor
push
cmp
mov
call
adc
push
sub
dec
push
clc
stos
mov
ror
test
push
adc
mov
push
mov
movs
or
adc
cdq
out
fldenv
mov
pslld
jmp
xchg
adc
sbb
or
xor
push
aad
inc
or
mov
dec
adc
jle
cdq
inc
push
sbb
jne
(bad)
out
adc
jg
ss
or
or
pop
push
(bad)
mov
mov
sub
loope
in
cld
mov
stc
test
push
and
jno
sub
pop
mov
int3
mov
lea
hlt
inc
cmp
pop
or
push
test
pop
outs
sub
int3
ror
pop
out
adc
clc
in
xchg
inc
sahf
jl
mov
outs
int3
gs
lods
mov
sahf
or
inc
mov
mov
aad
(bad)
fcomi
sahf
xor
fnsave
add
inc
ds
sbb
sub
or
div
dec
into
ss
and
push
sbb
mov
adc
popf
fs
fmul
outs
xchg
pop
call
or
jle
sahf
mov
div
je
push
sbb
or
clc
or
js
cmp
pop
push
ss
repz
inc
inc
rcl
sbb
and
jl
pop
jmp
xchg
cmp
daa
(bad)
aad
test
into
push
pop
jbe
test
lock
adc
add
std
mov
sbb
mov
les
ret
adc
xor
push
and
icebp
cli
stos
in
mov
imul
scas
popf
jmp
icebp
jmp
cs
inc
dec
pop
fimul
sub
cli
popf
ins
fmul
ins
scas
data16
(bad)
test
push
call
test
jmp
ins
add
lds
les
sbb
sahf
or
les
test
add
aaa
push
pop
sub
(bad)
and
mov
daa
sub
adc
imul
dec
rcl
jmp
in
pop
and
mov
push
xor
add
sahf
mov
push
retf
cmp
xchg
cld
shl
add
sbb
out
mov
leave
sub
pusha
xor
sub
inc
cli
push
jo
pop
xchg
cs
add
lods
or
cmp
xchg
adc
out
push
test
xlat
or
cli
cld
cmc
mov
or
pushaw
fadd
retf
pop
and
sbb
mov
cmp
pop
jmp
jb
xchg
lock
shl
out
lods
push
mov
sbb
adc
push
ja
lods
(bad)
inc
imul
mov
mov
jg
(bad)
jle
mov
or
jge
sbb
lahf
sbb
in
adc
out
mov
mov
sub
ds
in
(bad)
ins
fstp
mov
xchg
cmps
lahf
mov
in
mov
in
push
mov
mov
mov
mov
mov
mov
mov
mov
push
call
js
jmp
fiadd
out
in
cmc
fidivr
pop
cmp
ficomp
jne
jno
push
xchg
fist
ins
and
lds
mov
repz
bound
jle
pop
in
mov
add
xor
lahf
mov
cmp
(bad)
frstor
call
xor
ja
xchg
pop
stos
mov
mov
gs
les
cmc
sbb
sbb
in
adc
push
enter
sbb
push
leave
scas
jecxz
jo
and
sbb
js
xchg
xchg
loope
test
cmps
fbstp
mov
data16
shr
dec
bound
iret
mov
aaa
cld
xchg
ficomp
inc
cdq
ins
outs
add
fst
pop
and
movs
xlat
inc
lahf
sti
out
add
test
call
mov
add
fisttp
sbb
mov
jb
push
sub
fldcw
in
fcmovnu
xchg
shl
xchg
cmps
test
ror
push
pop
add
mul
pop
icebp
into
icebp
test
jl
ins
pop
movs
and
mov
push
inc
es
xchg
lods
add
stc
dec
repnz
cli
rcl
fiadd
sti
and
rcr
call
shr
pop
xor
cmp
xchg
mov
xchg
xor
dec
push
or
inc
mov
out
popf
inc
test
jb
push
jp
popf
dec
out
mov
mov
dec
sbb
inc
fmul
movs
xchg
xor
mov
jbe
inc
inc
cs
lea
mov
ret
gs
(bad)
push
sub
push
sub
(bad)
inc
pushf
shl
imul
xor
cmp
fs
adc
shr
xchg
cdq
or
dec
lahf
pop
xor
jb
fcmovne
mov
addr16
scas
push
push
int3
out
test
hlt
add
cwde
jg
xchg
(bad)
pop
aam
or
inc
pushf
outs
lea
pop
mov
xor
push
sar
mov
inc
leave
dec
pop
sub
mov
mov
push
and
xor
mov
push
mov
lods
cmps
mov
sub
fwait
add
loope
in
cld
xchg
ins
clc
mov
xchg
xor
pop
mov
scas
popf
or
mov
mov
xchg
pop
mov
mov
push
cmps
sbb
dec
sbb
into
and
xor
rcr
xchg
mov
pusha
inc
fidivr
mov
iret
rol
xchg
mov
popa
mov
mov
mov
add
sub
inc
and
inc
sahf
shr
ja
std
test
mov
loope
lock
mov
jge
dec
cmp
mov
push
(bad)
int3
popf
test
loopne
mov
ds
daa
and
push
test
push
movs
sbb
cmps
aaa
adc
or
in
(bad)
jnp
fadd
sti
loope
fnstenv
(bad)
pop
cmp
arpl
stos
mov
shl
and
rcl
shl
test
popf
ficomp
popa
mov
ins
mov
mov
adc
and
xor
sbb
mov
stos
dec
mov
and
cld
inc
les
or
inc
retf
mov
rol
jmp
jmp
dec
movs
inc
out
push
mov
add
inc
mov
inc
dec
adc
dec
add
sahf
stc
cmps
mov
popa
cld
xchg
(bad)
les
repz
sub
xchg
lods
das
loop
sub
daa
push
fmulp
loop
addr16
add
add
rol
inc
dec
adc
mov
call
and
rcl
daa
xlat
sbb
push
das
jg
pop
imul
sub
push
xchg
data16
mov
mov
retf
int
mov
jecxz
jbe
test
mov
adc
sub
dec
jns
pop
pop
mov
or
int
aam
mov
mov
mov
push
add
ffreep
outs
push
xor
jne
ret
fistp
adc
arpl
inc
xor
ret
dec
push
ss
call
outs
or
sub
mov
cmps
clc
push
aad
test
ja
inc
add
retf
dec
pop
(bad)
cld
add
add
jle
mov
or
push
jle
push
repz
call
xchg
or
jmp
cld
push
jb
mov
add
aad
(bad)
imul
movs
lods
cmps
es
jg
jo
js
cs
mov
mov
mov
hlt
sbb
sub
adc
ins
add
idiv
dec
push
lods
fldenv
pop
push
imul
(bad)
cmp
mov
mov
imul
push
pop
movnti
add
imul
add
mov
int3
call
rcl
(bad)
xchg
push
push
icebp
fild
add
mov
xchg
mov
pop
clc
cmps
pop
out
not
xor
cmp
jb
mov
scas
ficom
xor
int3
jle
or
and
sbb
sub
scas
lock
popf
je
mov
add
xor
clc
daa
mov
out
and
sar
xor
xor
fild
mov
adc
fstp
xor
and
dec
cs
mov
jo
in
push
push
fdiv
lods
xor
dec
sbb
test
adc
pusha
fdivr
sub
add
xor
rol
add
nop
or
jbe
push
push
cmp
in
or
aam
mov
out
pop
rcl
dec
cmps
dec
sti
cld
dec
jg
push
add
(bad)
daa
jg
cld
pop
xor
inc
movs
pop
loope
or
imul
sub
push
(bad)
shr
test
cmc
add
sub
jecxz
repnz
icebp
or
sbb
and
lds
jmp
sbb
cmp
adc
es
inc
jge
xor
mov
cmp
test
fwait
jns
(bad)
in
bnd
jl
stos
cmp
pushf
push
sub
push
daa
xchg
js
shr
push
or
sahf
or
fld
test
ja
lea
ins
or
aas
cmp
dec
shl
xchg
out
push
jo
mov
mov
mov
sti
xor
pop
inc
in
sbb
pop
cdq
cli
jbe
push
pop
push
mov
nop
or
stos
add
inc
ds
enter
cli
inc
pop
inc
rcl
and
cdq
out
mov
movs
push
adc
sbb
cmp
setbe
int3
push
mov
or
es
pushf
xchg
jns
lahf
scas
movs
fist
push
add
pop
push
repnz
or
aaa
sub
inc
jecxz
into
scas
and
fadd
ja
add
push
ja
and
pop
fisttp
lods
cmps
(bad)
jbe
lods
inc
and
inc
ins
mov
xor
data16
sub
pop
adc
xchg
lods
and
loop
jle
popf
pop
or
inc
aas
push
mov
aas
xor
popa
inc
pop
sahf
in
imul
movs
ja
or
lds
or
jnp
jne
jecxz
xchg
jno
adc
das
inc
pop
pop
ret
(bad)
ficomp
push
fistp
lahf
enter
or
in
sub
mov
int
mov
mov
(bad)
out
xchg
and
push
lods
out
sbb
les
jmp
popa
jmp
movs
aas
mov
add
icebp
pushf
xor
outs
lock
test
out
daa
dec
or
stos
inc
stos
mov
sub
and
push
int
call
add
pushf
or
movs
aaa
mov
retf
fsub
test
push
lods
mov
ret
aaa
adc
jb
xchg
pop
repnz
jb
xor
fcomp
outs
sti
mov
daa
mov
jno
add
data16
mov
sub
inc
(bad)
or
and
ds
pop
fcomp
inc
fimul
jmp
lock
ror
xchg
pop
stc
sbb
pop
outs
stc
pop
push
popa
jmp
push
mov
pop
cmps
pop
ret
(bad)
ret
mov
mov
pop
mov
into
cmp
jmp
outs
rep
xchg
ss
addr16
xor
out
stos
aas
sahf
aas
jno
add
into
fsubr
cmp
aaa
mov
pop
mov
stc
scas
test
cli
mov
movs
les
push
outs
movs
fsubr
inc
push
sbb
test
cli
dec
call
sub
stos
mov
iret
jmp
pop
jge
cmp
add
leave
jns
jle
push
sub
add
xchg
inc
mov
hlt
sbb
loop
sub
mul
hlt
les
(bad)
and
lds
adc
movs
mov
xor
fidivr
dec
sbb
adc
mov
js
(bad)
jo
rcl
add
pop
or
(bad)
jo
dec
or
out
enter
cmp
mov
dec
add
sub
and
and
sub
cmc
pop
adc
push
das
jp
jge
pop
mov
call
fadd
jno
mov
push
push
shl
and
pop
mov
jbe
ja
ins
lahf
mov
movs
sbb
call
das
aaa
test
call
mov
in
sbb
mov
mov
mov
imul
std
or
inc
(bad)
out
ins
push
cmovne
xchg
cmp
hlt
cmp
popf
mov
pop
cld
movs
mov
mov
mov
ds
mov
push
or
xchg
mov
jno
xchg
or
mov
loop
mov
in
sar
add
inc
add
out
pop
inc
and
sub
and
xchg
dec
sbb
push
xor
xchg
rcr
dec
stc
(bad)
hlt
js
out
jns
lds
or
mov
ins
mov
and
pop
inc
mov
lahf
getsec
mov
jg
dec
fmul
je
iret
inc
repnz
mov
xor
addr16
clc
(bad)
and
mov
sub
(bad)
repnz
scas
or
ja
xchg
pop
mov
jns
add
call
fisttp
stc
popf
test
dec
sub
sub
adc
inc
jg
cdq
fcmovb
pop
jp
xchg
mov
jo
mov
lock
mov
inc
lahf
xchg
xor
mov
xchg
jl
int
pop
jg
fst
xchg
fcomp
pop
outs
mov
mov
movs
mov
imul
mov
push
cmp
inc
cmp
fs
imul
jmp
adc
sub
cmps
add
in
xlat
(bad)
jg
das
int3
pop
je
and
mov
setp
pop
sbb
fsub
cmp
test
movs
loope
jg
ins
cmps
loopne
out
adc
push
dec
test
mov
test
or
inc
enter
enter
sbb
add
icebp
cmp
adc
retf
pop
cmps
(bad)
out
adc
pop
adc
pop
jg
mov
frstor
or
pusha
test
xchg
(bad)
cld
push
pop
push
push
mov
pop
ret
and
sub
out
outs
jmp
call
mov
out
adc
aas
gs
and
out
xchg
mov
sub
scas
xchg
das
pop
sbb
add
add
and
(bad)
jb
mov
xor
mov
fs
fdiv
pop
leave
inc
pop
xor
lock
(bad)
cmp
mov
push
xchg
xchg
jmp
lahf
xchg
add
ffree
loopne
xchg
popf
jns
mov
pop
jmp
xchg
pop
sti
imul
push
inc
das
loopne
inc
xor
mov
push
and
sbb
fadd
cmp
jnp
mov
ja
popa
jb
stos
in
and
dec
addr16
jb
push
fs
(bad)
shl
add
sub
mov
xor
cmp
add
pushf
or
aas
retf
mov
in
mov
adc
stos
les
stc
dec
shl
cmp
enter
mov
mov
push
pop
ja
cmps
shr
mov
nop
loop
ds
cmp
sbb
fs
fdivr
xor
pushf
cmc
mov
and
jecxz
sbb
je
adc
dec
movs
daa
pop
inc
mov
cwde
pushf
or
jo
or
movs
das
(bad)
cdq
outs
mov
push
add
test
neg
aaa
fisub
iret
clc
and
inc
adc
pop
bound
mov
mov
sbb
adc
fdiv
icebp
push
inc
imul
test
out
nop
mov
mov
inc
push
pop
(bad)
test
ret
mov
fstp
lds
mov
dec
icebp
enter
call
and
cmps
sbb
or
pushw
sar
stos
adc
xchg
scas
mov
sub
push
ss
jge
push
mov
xchg
sub
movs
dec
fisttp
and
out
xor
fisubr
jmp
xor
outs
jb
push
xchg
pop
mov
repnz
sbb
movs
sahf
pop
(bad)
inc
inc
scas
sbb
daa
out
data16
or
jbe
cld
call
je
mov
xlat
test
lds
and
retf
lods
clc
call
repnz
sbb
aam
push
repz
ret
xor
clc
adc
push
inc
mov
mov
mov
add
dec
jne
leavew
jae
xchg
and
jge
push
and
aad
in
sub
inc
cmp
push
jno
mov
(bad)
add
pop
fwait
push
inc
push
mov
cmp
pop
loopne
jo
js
pushf
aad
cmp
jno
or
mov
js
sub
stos
ret
retf
cmps
mov
movs
jmp
inc
pop
mov
pushf
cld
push
pop
mov
ror
jecxz
dec
mov
jne
shl
jecxz
nop
dec
aaa
fdivrp
mov
sub
inc
push
cmp
xor
cmp
mov
(bad)
mov
jmp
push
test
call
xor
cmp
inc
inc
ins
in
daa
jp
ins
movs
out
push
es
dec
cmp
xor
inc
xchg
xchg
mov
cmp
sbb
cwde
mov
and
dec
add
cwde
ins
addr16
mov
jle
mov
fisubr
mov
(bad)
cld
sahf
pushf
into
sahf
sbb
aam
push
sub
and
ja
mov
sbb
add
or
ins
push
imul
cld
sti
mov
leave
push
addr16
dec
scas
cmc
xor
iret
lds
test
out
dec
mov
cmp
test
sbb
das
aad
cmp
mov
pop
pop
inc
sub
scas
fs
mov
in
imul
inc
test
jl
adc
cdq
xchg
fsubr
fst
aam
not
push
mov
test
pushf
inc
jno
adc
mov
lods
sub
aaa
mov
adc
bound
dec
gs
xchg
aam
rcr
shr
call
xor
fsub
int3
scas
xchg
dec
lock
cld
popa
ja
mov
movs
add
lock
mov
das
(bad)
mov
jmp
xchg
adc
(bad)
pop
and
mov
jnp
lock
std
mov
out
ins
fistp
and
cmps
fisttp
out
in
fdiv
inc
cld
js
or
(bad)
stc
pop
sbb
adc
movs
inc
xor
jmp
cmp
dec
jo
sub
push
in
cmc
lahf
mov
icebp
xor
(bad)
fsubr
mov
(bad)
mov
fidiv
test
lods
and
adc
icebp
mov
and
addr16
out
xchg
mov
pusha
bound
(bad)
out
jb
xor
mov
mov
adc
fadd
xchg
into
sub
pop
inc
dec
pop
jmp
mov
jl
lds
rcl
and
cwde
int3
mov
arpl
aad
add
add
jecxz
sub
cs
jle
repnz
mov
inc
sub
mul
pop
jmp
jecxz
movs
jle
ins
jp
arpl
movs
sub
add
mov
and
mov
or
out
mov
sbb
std
push
jb
add
mov
dec
ins
imul
inc
pop
sti
cmp
sbb
jno
mov
pop
sbb
ins
add
sbb
faddp
xchg
stos
or
call
ret
jb
stos
(bad)
(bad)
cmovle
jns
in
and
ss
xchg
mov
cmps
sahf
add
inc
mov
push
stos
mov
dec
aas
mov
sbb
dec
jae
ret
adc
pop
neg
lods
push
jns
push
(bad)
out
adc
or
sub
dec
out
cwde
addr16
or
mov
rol
sbb
inc
adc
jmp
les
xchg
mov
xchg
and
sub
repz
movs
mov
mov
jle
cmc
mov
lods
dec
mov
popa
mov
jnp
(bad)
in
xchg
jecxz
ret
or
inc
(bad)
inc
add
test
cmp
inc
mov
cmp
test
fdiv
xchg
inc
jb
daa
cli
pop
(bad)
lock
mov
jno
mov
jnp
ret
jno
pop
(bad)
aam
rol
mov
cmp
xchg
and
addr16
xchg
mov
mov
inc
(bad)
ror
jno
movs
or
lods
cld
dec
sub
jo
push
(bad)
out
inc
mov
jo
sbb
test
outs
loope
test
mov
cwde
rol
repz
rcl
or
rsqrtps
inc
mov
int3
test
inc
lds
dec
cmp
xor
mov
lahf
mov
pushf
nop
in
sahf
gs
sub
lds
xchg
(bad)
adc
mov
push
imul
imul
or
fdiv
xchg
mov
sub
aam
and
xor
sub
ja
mov
jmp
push
hlt
pop
inc
mov
icebp
sbb
hlt
fadd
xchg
adc
sahf
lods
inc
push
push
pop
adc
data16
sbb
xchg
(bad)
jmp
loop
mov
mov
fstp
fwait
int
jmp
imul
mov
sub
int3
cmp
ja
jnp
inc
repnz
repnz
mov
pop
adc
shr
dec
fld
push
stc
push
(bad)
xchg
cmp
outs
or
push
int3
lods
sub
imul
addr16
jns
jle
xor
mov
jle
mov
pop
push
push
test
cmp
enter
sahf
sub
sub
test
and
repnz
sahf
inc
jbe
clc
cmp
jno
lods
pusha
nop
fdivr
loope
push
lahf
pop
clc
or
clc
mov
push
cmp
test
(bad)
fist
push
jl
js
aad
push
xor
mov
push
loope
sbb
cmp
xlat
xor
inc
push
test
sahf
jp
leave
push
mov
push
add
jle
or
stos
jmp
push
les
xchg
xchg
in
ss
or
ds
in
mov
dec
ins
aad
cmps
ret
cwde
lods
mov
out
aad
jmp
xor
push
(bad)
inc
ror
idiv
test
rcl
clc
jmp
fwait
mov
retf
xchg
and
call
mov
in
adc
cli
xchg
std
and
push
cmp
adc
jmp
pop
pop
gs
cwde
shl
movs
loope
fs
mov
outs
add
shl
lahf
mov
lods
test
mov
mov
mov
jmp
int
outs
mov
enter
icebp
or
repnz
popa
cdq
(bad)
push
mov
mov
div
out
stos
cmp
stos
cmps
out
jb
hlt
sub
daa
inc
lods
mov
xchg
mov
and
sub
push
test
enter
test
retf
pmulhuw
mov
aas
mov
iret
(bad)
add
cld
push
sbb
xor
aam
jmp
ret
les
mov
adc
add
dec
cmc
mov
and
add
hlt
ss
adc
jmp
(bad)
jecxz
push
push
xchg
loop
lods
xchg
ins
repnz
dec
mov
test
out
call
fbld
sub
stc
bound
pusha
leave
mov
outs
addr16
(bad)
push
add
mov
mov
sqrtps
xchg
jle
jo
mov
in
rol
test
push
cmp
popa
dec
retf
repnz
fmul
jae
addr16
cwde
ins
lods
(bad)
adc
retf
out
ins
xchg
adc
clc
mov
and
push
push
push
(bad)
call
and
pop
lods
inc
jbe
sub
mov
add
and
and
dec
xchg
sbb
xor
xor
or
or
cmp
xchg
iretw
pop
test
lods
mov
stos
aas
and
imul
add
stos
mov
aam
mov
imul
jnp
and
ins
mov
cmp
add
retf
nop
xor
or
cmp
push
test
addr16
inc
dec
outs
xchg
push
push
jmp
sti
std
cmp
sbb
xor
jmp
lods
mov
retf
mov
adc
leave
mov
jg
mov
dec
and
mov
mov
jo
push
mov
lock
mov
jne
mov
js
(bad)
imul
push
ja
clc
daa
(bad)
mov
lock
pop
adc
jmp
pop
mov
sbb
(bad)
fistp
sub
sti
cs
ja
inc
stc
cmp
mov
pop
jnp
add
scas
call
xchg
fild
sti
out
test
jl
dec
fcom
inc
(bad)
sbb
jle
repnz
jl
out
iret
idiv
dec
icebp
std
add
sbb
xchg
xchg
adc
cs
inc
push
cmc
pop
xor
push
scas
fnsave
dec
loopne
sub
je
fnstsw
das
or
int
xchg
jl
fwait
pop
cmp
push
and
fs
pop
and
mov
stos
adc
aas
sbb
lea
jle
test
(bad)
adc
push
cdq
xchg
inc
outs
inc
jle
jmp
rcr
dec
(bad)
addr16
cs
add
hlt
xor
xor
int
dec
imul
es
and
xchg
xchg
scas
cld
in
mov
scas
mov
sti
cmc
out
clc
pop
inc
mov
push
leave
pop
js
dec
ins
xchg
push
mov
push
mov
ret
ja
or
inc
push
push
ins
in
dec
(bad)
xor
fsubr
test
fstp
push
cmps
aaa
xchg
add
fwait
xor
movs
xchg
out
stos
gs
mov
and
add
cdq
pop
jecxz
in
lahf
push
push
fistp
(bad)
xor
(bad)
js
push
cmp
cmp
cs
xchg
lea
out
mov
mov
push
sbb
int3
popf
xchg
push
sti
sub
or
xchg
ds
mov
adc
daa
ror
adc
sbb
add
out
adc
cwde
push
mov
mul
cmp
movs
push
shr
sub
push
adc
xchg
call
mov
(bad)
popa
imul
popa
pop
ret
adc
aad
push
rcl
xor
bound
fadd
arpl
inc
retf
nop
shl
mov
xor
dec
punpckhwd
rol
adc
mov
cmp
(bad)
and
xlat
jg
in
mov
jnp
cmp
mul
or
fisub
sub
add
lock
pop
stc
dec
out
jb
das
in
cmp
in
jp
jnp
or
xor
adc
dec
pop
or
loop
sar
arpl
out
lock
loopne
(bad)
(bad)
pop
and
cmp
repz
sub
ins
popf
mov
pop
pop
mov
leave
pop
and
fcmovu
dec
push
stos
int
in
(bad)
cmp
jns
cmp
pop
movs
arpl
(bad)
dec
or
jnp
cmp
popa
fs
dec
cmp
aaa
inc
mov
dec
adc
cmc
inc
cli
pop
xor
daa
dec
inc
dec
push
loop
pop
jl
leave
call
pop
mov
push
scas
jg
jl
push
imul
pop
imul
mov
movs
das
jns
inc
call
pop
sbb
mov
jae
(bad)
leave
mov
popa
(bad)
scas
std
fisubr
outs
stos
(bad)
hlt
jl
add
out
adc
mov
aas
repnz
add
gs
push
movs
scas
int3
push
dec
inc
xor
push
lock
out
and
mov
mov
lds
mov
cmp
pop
pop
mov
sbb
xchg
aad
(bad)
or
and
clc
mov
(bad)
sbb
sbb
cld
xor
scas
or
xor
fidivr
scas
ret
movs
jno
ret
jo
inc
add
mov
ror
sub
xchg
loop
and
nop
xchg
cmp
test
enter
inc
jo
add
jle
add
rcr
or
gs
jbe
cmp
pop
fs
iret
adc
enter
or
xor
stos
pushf
lea
or
clc
ret
or
scas
ret
pop
push
mov
popf
mov
ja
or
mov
test
push
data16
faddp
jg
cmc
and
pop
out
jae
cdq
pop
cvttps2pi
push
jle
lea
xchg
(bad)
jns
push
mov
cmp
les
ja
sub
sbb
fisttp
arpl
stc
inc
aas
mov
cdq
sbb
sub
push
xchg
mov
es
add
push
xor
(bad)
ret
fwait
ins
popa
pop
js
stos
xor
mov
clc
inc
inc
stos
mov
pop
ins
or
leave
clc
aas
add
shl
jne
inc
nop
cwde
push
out
aad
and
shl
cmp
cmc
mov
sahf
adc
stos
aaa
mov
or
sbb
dec
cmc
adc
add
cmp
cmp
test
cmp
out
mov
test
push
call
and
jmp
sub
call
sbb
out
ss
dec
xchg
cmp
mov
jge
xor
js
test
stos
dec
aad
popf
into
mov
inc
fwait
sub
data16
in
xor
je
test
cmp
pop
test
adc
test
inc
fimul
std
mov
push
inc
adc
call
ds
retf
imul
daa
xor
test
das
push
movs
add
std
dec
jb
push
test
jmp
test
jecxz
mov
xchg
enter
push
sti
fcompp
sub
rol
out
mov
cmp
mov
mov
mov
cmps
retf
xchg
lods
ftst
jl
fdivr
or
in
(bad)
adc
cmc
inc
jns
dec
pop
arpl
dec
cdq
add
ja
and
dec
ret
sbb
cmps
mov
stos
icebp
dec
pusha
movs
jb
ins
or
jnp
fistp
dec
jne
les
or
mov
inc
push
inc
adc
jg
shr
jno
or
jnp
or
ficomp
aam
add
jmp
lock
sub
ins
xchg
pop
sar
daa
loope
or
scas
push
adc
scas
sbb
out
xor
stos
dec
and
(bad)
pop
jp
test
pop
jb
add
fldenv
inc
test
pop
mov
xor
dec
mov
add
push
pop
repz
mul
xor
sbb
in
xchg
dec
cmp
lock
dec
pop
dec
cmp
lds
xor
mov
or
and
jg
call
rol
jns
xlat
mov
cmps
call
xchg
loop
cmc
sub
nop
pop
and
mov
pop
xor
xor
and
je
xor
imul
imul
loop
fisttp
dec
cmp
xchg
int
shl
(bad)
cmp
ins
adc
xor
sub
les
outs
pop
ret
and
popf
scas
push
in
loopne
or
pop
jmp
adc
cmp
pop
pop
xchg
mov
mov
retf
pop
arpl
ret
xor
adc
ss
sbb
cmps
push
mov
mov
daa
xor
jmp
or
shr
repnz
pop
xchg
nop
pop
or
xor
pop
in
sub
push
retf
adc
shl
ds
retf
sub
or
test
add
jg
mov
sub
push
mov
mov
icebp
leave
outs
not
in
mov
adc
add
repz
sub
mov
dec
or
gs
pop
xchg
sub
dec
(bad)
mov
call
adc
(bad)
aad
iret
push
ja
jp
mov
lahf
outs
inc
shl
xor
imul
nop
into
add
jmp
xor
add
aad
jge
pop
retf
pop
and
mov
dec
addr16
imul
xadd
add
out
lock
out
pusha
outs
dec
sub
sahf
sti
neg
cmp
push
clc
leave
xor
inc
pop
mov
mov
xor
mov
mov
jg
clc
mov
mov
stos
sbb
jns
out
pop
loope
adc
lea
xor
cmp
xchg
sti
adc
mov
test
dec
push
pop
out
mov
scas
popf
and
loop
mov
jecxz
inc
sti
out
xlat
(bad)
xchg
fmul
push
mov
hlt
jecxz
(bad)
movs
jae
mov
pop
js
pushf
cld
cdq
cmp
jne
mov
mov
cmp
rcl
aam
in
movs
push
int
dec
hlt
adc
pushf
mov
xchg
fdivr
jmp
aad
ss
mov
jl
push
dec
xor
imul
je
mov
dec
sbb
push
ins
rcl
xor
mov
jp
mov
mov
sbb
nop
cdq
ins
movs
pop
or
mov
sbb
adc
and
mov
(bad)
jge
les
jbe
loop
leave
mov
jnp
sbb
(bad)
fsub
cmp
jl
and
or
test
retf
mov
mov
jb
xor
int3
aas
movs
inc
cmp
cmp
xchg
dec
stc
push
hlt
jmp
sub
xor
jnp
sub
ins
mov
add
pop
retf
daa
push
cli
mov
push
je
xchg
ins
cmp
jno
(bad)
std
push
cmp
jp
mov
jne
shl
mov
aad
pop
lods
outs
cs
dec
adc
pop
push
sbb
cmps
(bad)
imul
repz
test
pop
add
xlat
xchg
shl
mov
lahf
inc
movs
stos
ret
push
or
je
mov
sbb
repz
call
cmp
sbb
cmc
jo
dec
push
fnsave
pop
fsubr
xor
ret
stc
retf
xor
cmc
in
(bad)
out
mov
ins
adc
jmp
movs
xchg
cdq
cld
fadd
push
ficomp
jmp
cwde
add
push
addr16
outs
mov
hlt
aaa
out
sbb
mov
xchg
mov
push
ja
movs
xor
fcmovu
xchg
inc
scas
es
jbe
pop
cmc
push
cmps
int
inc
fdivr
xor
ja
lock
rcl
jg
rep
es
pop
and
cmc
inc
jnp
repnz
sbb
icebp
cli
retf
mov
mov
adc
inc
inc
lock
popa
daa
mov
dec
mov
aad
out
push
nop
rcl
ins
ret
das
or
and
and
out
and
jnp
arpl
xchg
mov
jmp
cmp
out
push
mov
add
cmps
push
shl
jl
rcr
adc
jge
cmp
data16
xor
pop
leave
inc
or
arpl
dec
sub
or
ja
mov
cdq
or
pop
or
fisttp
and
out
or
cmp
sbb
test
test
imul
sub
pop
xchg
jmp
sbb
sub
jmp
ins
sbb
mov
gs
test
sahf
pushf
jb
(bad)
push
push
imul
pusha
jmp
or
inc
cmp
int3
pop
push
jg
adc
rcl
div
mov
mov
mov
rol
add
xchg
sar
mov
or
mov
fmul
xchg
data16
mov
rcl
stc
hlt
adc
xadd
fwait
add
ret
pop
mov
add
or
mov
cmps
arpl
mov
std
dec
test
and
imul
dec
adc
jmp
pop
or
fidivr
dec
mov
sub
and
mov
xchg
sahf
xlat
jns
add
mov
loop
stos
rcl
loop
data16
and
and
sbb
push
stos
adc
rcl
or
adc
dec
fnstcw
xchg
or
fcomip
pop
xchg
jno
cmp
xchg
shl
bndstx
into
push
adc
call
cmp
in
mov
aas
pop
sbb
pop
push
test
imul
iret
jne
sbb
mov
movs
xchg
ins
repz
out
push
push
inc
cmp
(bad)
adc
add
test
cdq
(bad)
out
dec
daa
jp
and
ins
jg
dec
test
lods
adc
repnz
xchg
pop
sbb
xchg
dec
xchg
fs
rol
fs
jg
fs
mov
jecxz
pop
xchg
arpl
call
add
stos
sbb
std
mov
(bad)
imul
cli
push
add
or
pop
popf
sbb
jbe
xchg
fldcw
xor
lock
and
into
cli
(bad)
lea
mov
sub
cld
jp
cmc
je
adc
je
faddp
cmp
sbb
shr
das
push
push
sbb
mul
dec
daa
mov
ins
int3
js
rcl
daa
mov
ret
or
pop
dec
nop
xor
hlt
mov
mul
and
in
(bad)
psrlq
lea
sti
mov
and
xrelease
xor
dec
into
test
inc
mov
(bad)
mov
shl
cmp
fiadd
int
lahf
inc
and
mov
retf
push
xor
and
loop
mov
pcmpgtw
push
sbb
xchg
sar
sub
scas
cs
inc
or
add
push
stos
data16
imul
sub
xor
and
mov
pop
mov
shl
cmps
jl
repnz
nop
cmp
dec
cmp
sbb
cli
push
pop
ror
xchg
pop
cld
add
xor
data16
xchg
sbb
out
bound
iret
punpckhwd
sub
rcr
xchg
push
inc
cmp
push
outs
pop
imul
pop
dec
hlt
data16
ficomp
add
adc
popf
pop
jo
daa
aaa
outs
test
adc
mov
aam
fdivr
lods
xor
inc
jo
int
jg
mov
and
jo
add
xchg
push
retf
lock
jns
mov
jle
xlat
or
ss
mov
push
inc
mov
ins
push
sti
es
(bad)
clc
mov
inc
scas
dec
add
jmp
push
and
sbb
inc
xchg
sub
xchg
popf
xchg
(bad)
sub
inc
mov
std
in
push
sbb
jo
cmp
push
arpl
add
mov
je
mov
retf
cmp
cwde
pop
jge
imul
cmp
xor
cmps
dec
jmp
adc
pop
sub
mov
sub
pop
mov
sbb
mov
ret
mov
stos
sbb
dec
rol
xor
fnstcw
push
mov
sbb
fisubr
sbb
mov
inc
sbb
cmps
dec
xor
movs
jmp
dec
mov
xchg
or
mov
out
cmp
jnp
sub
fidivr
retf
(bad)
data16
inc
retf
dec
loope
mov
shr
mov
cli
rol
sub
mov
pop
xchg
sbb
lahf
and
dec
sbb
test
(bad)
adc
repnz
inc
lahf
jae
daa
or
loop
jne
lock
ret
ficomp
mov
clc
inc
jne
mov
test
sbb
adc
mov
rcl
xor
xchg
je
inc
push
cmps
mov
sti
cld
cmps
loopne
and
mov
movs
fild
sbb
mov
sar
mov
jae
arpl
add
sbb
test
push
add
retf
pusha
jg
push
xor
xor
rol
out
or
lahf
mov
inc
fwait
inc
out
jmp
iret
sub
leave
mov
add
dec
jno
setbe
jb
fld
jae
sub
inc
in
push
xchg
pop
pop
dec
and
jbe
push
xor
cwde
imul
xchg
xchg
sbb
dec
fs
aaa
(bad)
in
lods
sbb
test
mov
out
jmp
nop
cmps
adc
push
mov
sbb
sbb
movs
xchg
je
int3
rcl
call
inc
push
jae
pop
pop
and
sbb
daa
push
jmp
mov
mov
enter
sub
add
out
sbb
cdq
xchg
fisttp
in
dec
inc
scas
in
iret
ret
sbb
in
pushf
jbe
pop
add
xchg
sub
js
push
push
jbe
movs
sub
pop
jl
lods
(bad)
outs
xchg
adc
or
ins
(bad)
push
fisttp
jbe
pop
ror
cs
pop
aas
add
xchg
jb
jge
imul
mov
out
movs
jbe
aas
mov
and
mov
mov
aas
in
lock
cdq
bound
mov
add
cdq
retf
fptan
pop
and
movs
mov
mov
pop
inc
push
sbb
imul
mov
mov
gs
or
mov
jl
cwde
inc
inc
dec
idiv
pop
cdq
fld
add
jecxz
cmp
adc
inc
mov
sti
push
cli
adc
and
add
pop
out
xchg
outs
pushf
daa
or
xor
inc
add
jno
sub
pushf
inc
pop
sub
mov
aam
popf
mov
pop
call
scas
cmps
inc
shl
or
arpl
cmp
inc
sbb
mov
mov
stos
in
jle
fidiv
cmp
jle
jb
sti
or
xor
sub
mov
sub
mov
call
in
fadd
(bad)
cmp
inc
mov
addr16
fstp
fiadd
cmp
sbb
js
out
idiv
push
inc
or
aam
cld
test
in
push
inc
mov
push
xor
pop
mov
mov
aas
pop
mov
das
dec
and
jne
aam
push
xor
test
das
in
xchg
ja
cs
xchg
sbb
xor
inc
mov
or
sbb
push
mov
imul
aad
leave
xor
lahf
push
cwde
xor
shr
je
jl
xchg
pop
mov
push
mov
inc
call
es
push
scas
jecxz
sub
lods
adc
or
cld
les
shl
sti
push
fistp
xor
pushf
add
jne
mov
jmp
test
stc
fstp
stos
and
repnz
jecxz
rcl
(bad)
iret
pop
jns
or
sub
jb
test
and
outs
cmp
jg
and
leave
arpl
push
xor
sub
in
pushf
and
xor
mov
ficom
nop
popa
and
pop
jge
fnstcw
mov
aaa
jae
inc
aas
push
push
inc
aas
stos
sbb
and
push
sub
hlt
pop
xchg
cmp
ret
or
cmps
loope
ins
dec
test
loop
dec
(bad)
lods
or
or
fbld
in
push
mov
xor
xor
mov
xchg
loop
sbb
xchg
ins
adc
loop
fadd
and
dec
pop
jl
out
pushf
cmp
aad
jmp
icebp
dec
sbb
jecxz
sub
test
xchg
and
ror
or
test
xor
add
mov
pop
xchg
in
add
data16
mov
test
ret
dec
xchg
ins
mov
shl
mov
adc
in
mov
popa
pop
out
shl
icebp
inc
in
dec
cmp
inc
shr
adc
or
nop
test
sub
fwait
test
add
mov
mov
sti
push
xor
inc
and
pop
frstor
ins
imul
add
ret
inc
xchg
mov
dec
mov
retf
rol
bound
dec
rcl
pop
xor
shl
into
enter
mov
call
sbb
(bad)
xchg
sub
pop
cmc
(bad)
mov
inc
fcomp
xor
pop
cs
pop
daa
xlat
lds
stos
loope
dec
xchg
add
repnz
test
cmps
ds
adc
push
cmp
mov
mov
sub
fidivr
cli
jo
mov
or
lods
out
cmp
stos
je
inc
mov
mov
mov
dec
adc
inc
leave
inc
mov
dec
test
add
iret
stos
scas
cdq
adc
lock
pop
call
sbb
lea
push
mov
mov
sbb
scas
xor
cmp
mov
mov
hlt
cdq
das
xchg
pusha
xor
push
and
push
xor
retf
mov
mov
jnp
add
xchg
xor
shl
retf
sbb
shl
adc
xchg
xor
jno
or
pop
movs
dec
sbb
dec
outs
es
or
loope
pusha
cmp
js
inc
cmovno
adc
pop
cmc
jmp
pop
mov
div
dec
sub
dec
lods
mov
pinsrw
test
es
icebp
fld
test
xor
sbb
or
sbb
mov
xchg
inc
clc
xor
mov
push
lea
sub
pop
imul
inc
mov
out
sub
out
adc
cvtps2pi
or
stos
outs
pop
ja
int
sar
xor
aaa
cmp
call
sub
sub
xchg
mov
mov
aam
test
cdq
retf
push
dec
in
dec
test
les
rcl
fmul
mov
sti
es
push
int
imul
(bad)
and
cmp
pop
jg
jle
inc
jmp
push
inc
push
adc
mov
and
rcr
sub
adc
xor
mov
jge
mov
jo
push
lahf
dec
xchg
cmp
mov
into
aam
in
and
mov
gs
int
push
lods
xchg
inc
fs
das
fild
adc
lods
jmp
inc
jmp
mov
jbe
pop
sbb
inc
bound
push
lahf
test
imul
inc
call
in
scas
push
mov
push
mov
push
push
retf
cmp
aad
call
and
xchg
xchg
mov
aam
stc
xor
xchg
inc
test
retf
push
fdiv
mov
stos
xchg
push
popa
xor
and
hlt
sbb
scas
ret
xor
xchg
sti
ins
ror
xlat
imul
cmp
sub
cmp
add
iret
and
jle
or
movs
add
test
jle
test
fld
call
dec
cmp
jge
idiv
xor
inc
test
mov
(bad)
(bad)
fdivr
es
mov
adc
lods
not
outs
push
inc
push
(bad)
sbb
fild
cmp
popa
mov
pop
xchg
fs
adc
mov
test
sti
scas
lea
hlt
mov
cwde
jns
dec
or
jns
scas
stc
mov
adc
ret
fstp
inc
stos
scas
inc
mov
dec
and
dec
call
ja
aad
fldcw
lods
and
sub
cmp
inc
or
xor
jno
dec
adc
mov
mov
xchg
xchg
retf
hlt
test
or
inc
shr
(bad)
adc
popf
retf
jmp
arpl
rcr
adc
adc
jno
xchg
dec
adc
retf
rcr
sbb
daa
fwait
jnp
or
and
lods
leave
shl
and
xor
pop
mov
dec
call
(bad)
movs
pushf
add
ins
dec
add
stos
fidivr
xor
and
out
rol
xchg
push
mov
movs
mov
cs
inc
xor
and
pop
imul
(bad)
pop
std
das
rol
in
dec
sub
ror
adc
add
jbe
mov
call
xor
jle
cmp
scas
cdq
shl
in
pop
push
adc
inc
pop
(bad)
je
out
in
call
daa
shl
or
sar
sub
xchg
mov
popf
or
bound
cmps
frndint
in
retf
mov
sbb
out
inc
push
test
push
test
and
ins
scas
jmp
mov
out
push
cmp
loopne
mov
add
fcom
cld
sub
inc
(bad)
or
out
mov
nop
aaa
clc
jbe
pop
or
or
adc
adc
mov
mov
or
jmp
mov
jae
and
(bad)
inc
inc
xchg
test
cld
pop
adc
push
shr
ret
sub
mov
add
cwde
repnz
mov
jl
test
mov
hlt
mov
pushf
loope
test
outs
bound
pop
mov
jecxz
xchg
sub
jmp
pop
scas
pop
data16
cmps
out
pushf
pop
or
imul
and
push
jne
xchg
cmp
hlt
cdq
mov
lods
pop
cmp
inc
movs
push
cmp
sub
scas
add
mov
aad
lds
or
jle
inc
adc
jg
repnz
mov
repz
rcl
mov
loop
cli
jecxz
push
xchg
das
stc
aam
inc
neg
fwait
mov
sahf
pop
mov
xchg
mov
xchg
div
not
pop
popa
lds
stos
push
dec
xchg
sbb
dec
fs
scas
mov
mov
mov
rep
je
and
sbb
mov
jp
xchg
mov
adc
lds
jle
dec
mov
test
popa
lds
xchg
xchg
inc
int
mov
adc
add
sbb
cld
sbb
jl
fisttp
fsin
jmp
push
xor
sub
lea
out
mov
out
scas
(bad)
ds
adc
pushf
pop
cwde
imul
pop
pop
ret
inc
repnz
lahf
cmp
jbe
add
push
out
pop
rcl
lock
xor
pop
ins
push
mov
test
cmp
rcr
lods
lea
xor
loope
pop
test
fwait
jnp
and
imul
sbb
mov
lahf
shl
sub
push
push
test
test
out
aas
(bad)
add
test
mov
imul
jbe
repnz
sub
ds
fisttp
and
xor
sbb
mov
leave
and
add
mov
or
mov
dec
popa
mov
xlat
call
dec
das
bound
mov
xchg
adc
std
inc
and
mov
push
cli
(bad)
int
daa
fcmovnb
adc
cmp
push
cld
outs
inc
outs
pop
adc
repnz
setns
outs
das
imul
inc
pop
cmc
enter
fwait
movs
call
sub
sub
jns
add
sbb
movs
fidivr
daa
push
inc
je
stos
shl
movs
mov
addr16
ret
sbb
in
pushf
cmp
pop
inc
and
xchg
pusha
mov
cli
(bad)
adc
jmp
xchg
imul
sub
clc
ror
sar
repz
xor
push
lock
push
dec
mov
sbb
ds
pop
push
mov
data16
mov
mov
and
sbb
cmp
(bad)
neg
stos
ja
fs
(bad)
jmp
and
std
ins
test
mov
sbb
dec
mov
pop
or
adc
sahf
mov
outs
mov
jmp
mov
mov
daa
push
push
inc
xor
adc
mov
vmovntps
xor
int
sbb
push
and
pop
sub
push
(bad)
adc
mov
ins
cmp
(bad)
adc
retf
adc
loopne
or
xchg
jo
and
cmp
fistp
cdq
mov
sub
aam
pop
cmp
rol
cli
enter
or
std
add
add
jmp
ins
adc
(bad)
push
fnstcw
xchg
xchg
or
pop
xchg
or
mov
inc
xor
es
ret
outs
add
jle
fisub
xchg
mov
cmp
push
out
push
fsubr
push
mov
adc
mov
fstp
cmps
aas
mov
adc
sbb
adc
outs
loopne
sbb
das
iret
fsub
push
mov
xchg
shr
out
xchg
push
adc
or
sti
popf
jmp
arpl
jmp
or
(bad)
enter
mov
mov
add
ds
mov
fisub
aaa
and
cs
(bad)
out
leave
push
das
cmp
icebp
jmp
inc
or
mov
inc
loopne
lock
shl
sar
adc
dec
dec
sub
cmp
mov
(bad)
(bad)
dec
lods
mov
iret
add
(bad)
repz
pop
cli
ror
aas
jmp
pop
add
(bad)
shl
not
test
jecxz
add
jbe
movs
dec
ins
pop
push
dec
jecxz
dec
pop
cs
push
cmps
cld
fdivp
pop
dec
out
test
stos
loope
inc
adc
mov
test
repnz
push
dec
lahf
push
cwde
es
and
jg
inc
mov
and
rep
add
xor
mov
outs
out
pop
mov
das
mov
pop
mov
jns
pop
add
push
je
mov
rcr
mov
(bad)
dec
ret
pop
rcr
pop
xor
or
nop
dec
xchg
sub
or
das
push
(bad)
clc
pop
pusha
add
jecxz
std
pushf
jp
mov
mov
sub
dec
mov
mov
ret
inc
pop
mov
sub
mov
xchg
lods
jg
and
mov
call
mov
pop
test
or
pop
pop
sbb
enter
int
cmps
shr
jne
imul
hlt
call
xchg
arpl
jmp
daa
cmp
xchg
les
ror
cwde
sub
dec
xchg
mov
loop
pop
pop
mov
add
dec
lock
xchg
pop
dec
inc
mov
cmps
jb
mov
sbb
pop
std
sub
arpl
and
mov
pusha
and
mov
daa
and
pushf
and
xchg
sahf
xor
push
rol
cdq
ins
xchg
mov
dec
shl
popa
in
fld
fnstenv
jg
sub
inc
retf
mov
inc
iret
mov
push
addr16
nop
scas
fist
ins
push
and
mov
out
fmul
pop
dec
(bad)
ja
mov
jle
ret
icebp
fiadd
add
in
jnp
push
adc
add
add
xor
push
adc
mov
jp
mov
or
test
sub
jbe
ret
pop
dec
imul
push
push
dec
xor
sti
cld
jmp
sbb
xchg
test
(bad)
mov
pusha
and
add
call
inc
cmps
rol
inc
sub
jecxz
stos
loopne
push
jecxz
sub
mov
mov
inc
in
add
inc
(bad)
or
ror
mov
nop
sbb
inc
rcl
daa
inc
in
lahf
mov
bound
xchg
adc
test
push
les
(bad)
fnstcw
sub
(bad)
and
mov
xor
mov
or
clc
mov
in
in
adc
sub
or
mov
cmps
xchg
xor
jecxz
add
addr16
sub
or
lods
pop
sbb
mov
hlt
add
mov
nop
mov
jecxz
sbb
mov
push
dec
mov
std
retf
lds
mov
xchg
fild
popa
sbb
in
gs
and
jmp
push
push
mov
cmp
and
and
aam
dec
fnstenv
lea
fdivr
ss
inc
scas
test
and
hlt
les
and
ja
jle
neg
(bad)
mov
add
shl
mov
sbb
in
push
ins
adc
xchg
jmp
mov
sub
sub
lahf
push
out
inc
push
dec
jno
push
test
in
in
lahf
aam
mov
enter
aas
stc
enter
push
out
cwde
jnp
push
push
test
bound
mov
mov
aad
inc
ins
cdq
or
cmp
in
sbb
add
cmp
ss
movs
xchg
inc
jecxz
xchg
fistp
mov
mov
mov
jl
dec
popf
push
dec
jne
mov
neg
retf
ds
adc
dec
mov
pop
in
add
ins
xor
aad
fidiv
adc
out
sub
cmc
jecxz
mov
xor
std
stc
xor
mov
jno
popa
xchg
mov
in
push
push
dec
mov
dec
mov
lea
out
aam
push
or
fisubr
test
mov
or
ins
js
dec
jbe
xor
and
push
dec
inc
movs
out
jne
and
xchg
in
sbb
jl
popa
sbb
sbb
jl
mov
into
or
and
loope
test
ret
test
xchg
xor
repnz
dec
inc
sbb
cld
xor
cmp
inc
and
or
xchg
in
xlat
xchg
ds
sahf
js
lock
add
mov
jmp
lds
pop
push
cdq
lock
fs
loope
icebp
ja
cmp
ins
test
cmp
sbb
xchg
les
lock
cmc
and
sbb
sub
ror
dec
push
out
sbb
adc
pop
(bad)
pop
js
add
std
adc
test
add
inc
ficomp
adc
mov
cmp
jl
js
out
add
mov
dec
inc
cmp
or
inc
mov
xchg
cld
ja
push
daa
sti
jo
jne
mov
(bad)
(bad)
cdq
jg
loopne
mov
dec
pop
ret
xor
cwde
push
inc
sub
ds
cld
cld
xchg
adc
mov
imul
xchg
aam
inc
jne
repz
je
movs
clc
imul
jle
jo
pop
pop
shl
cwde
fadd
xor
inc
push
fild
pop
(bad)
loop
dec
jp
pop
adc
cdq
xor
nop
xor
xchg
jnp
dec
call
dec
cmp
ins
loop
sti
sub
in
cmp
pop
clc
inc
addr16
inc
mov
and
or
int3
retf
push
(bad)
lods
pop
dec
mov
push
xchg
xor
mov
add
pop
(bad)
js
xor
test
sbb
mov
inc
in
test
(bad)
call
es
fcmovnb
sti
imul
hlt
inc
push
fistp
push
mov
dec
scas
js
dec
(bad)
mov
sar
adc
std
icebp
inc
pop
mov
mov
cmp
scas
clc
out
ds
in
sub
pop
add
pop
scas
fnstsw
sub
push
jne
sub
std
push
mov
xlat
mov
hlt
inc
push
xor
xchg
aad
xchg
and
add
icebp
int3
outs
aaa
ret
pop
push
cwde
push
xchg
and
sar
mov
loope
sub
inc
fcomp
ds
ins
fst
mov
mov
mov
shl
nop
sbb
pop
mov
int
pop
rol
bound
mov
add
jge
std
fdivr
imul
add
push
(bad)
into
dec
and
push
dec
jo
inc
(bad)
or
sbb
hlt
mov
inc
xor
push
pop
sub
dec
jbe
or
ss
int
mov
mov
pop
xor
test
push
int3
push
in
push
mov
(bad)
loope
mov
mov
mov
imul
adc
or
and
mov
popf
clc
lahf
loopne
int
pushf
cmp
mov
push
loopne
fs
pop
clc
push
femms
shr
into
std
vpalignr
pop
push
mov
sub
xlat
test
(bad)
push
sahf
push
dec
leave
lds
xor
push
in
call
daa
and
jecxz
arpl
inc
push
mov
fist
ss
or
sar
nop
push
(bad)
cmp
jge
movs
xchg
sar
aaa
mov
inc
dec
out
cwde
adc
test
mov
loop
lock
popa
dec
mov
popa
cmp
dec
mov
mov
pop
rep
test
xchg
ins
cmp
rcl
dec
inc
icebp
aam
inc
dec
jl
cmp
outs
xchg
inc
push
cs
mov
xor
mov
leave
cmp
mov
rcr
leave
xor
lods
dec
jb
jno
xor
inc
push
aas
sbb
movs
or
sub
mov
sti
pop
jecxz
cmp
aam
inc
outs
test
dec
jmp
retf
movs
push
mov
sbb
iret
retf
lods
inc
nop
sub
ins
jbe
or
mov
cdq
add
push
dec
mov
pop
push
test
sahf
dec
cmp
retf
and
jg
mul
push
jl
xchg
out
sub
cmp
mov
dec
cmp
mov
maxps
and
inc
xchg
jl
sahf
mov
sbb
div
aas
mov
cmp
test
xchg
mov
jne
adc
xchg
push
inc
dec
mov
cmps
mov
pop
bound
sub
cmps
and
nop
cmp
dec
dec
out
cmp
in
or
mov
in
pop
out
pop
xchg
leave
xor
jno
push
daa
lods
retf
adc
inc
push
hlt
(bad)
push
adc
hlt
sbb
out
ffreep
adc
out
or
es
sbb
(bad)
clc
sub
pop
(bad)
adc
mov
sub
mov
cmp
dec
jnp
cwde
ficom
icebp
ja
lea
and
mov
adc
int3
mov
int
push
mov
xor
pop
into
mov
jp
sti
(bad)
fs
(bad)
mov
dec
cmp
mov
test
xor
mov
cmp
cli
rol
aas
xchg
or
arpl
loopne
nop
les
jg
and
xchg
mov
xchg
retf
xchg
shl
xchg
xlat
ss
jmp
push
setle
sub
xor
loopne
mov
jno
mov
cld
ja
and
sti
lock
add
xchg
retf
aad
in
test
and
ins
enter
sbb
cdq
rcr
jmp
std
jbe
xor
pop
fwait
ins
push
jns
fsub
add
jbe
rcr
jp
add
(bad)
or
stos
pop
ss
cmp
(bad)
mov
rol
mov
xchg
das
or
repnz
xchg
pusha
ret
push
jns
jmp
iret
imul
cmp
outs
cli
adc
popf
xor
dec
iret
mov
adc
shl
jns
out
push
ficom
mov
bt
jge
out
mov
inc
pop
push
mov
addr16
xor
dec
jbe
fbld
nop
mov
xor
or
push
mov
enter
in
retf
push
cmp
lods
dec
loopne
sti
add
xor
pop
(bad)
fmul
and
in
mov
cli
xor
jne
dec
aas
lods
pop
js
aad
jno
clc
push
cmp
std
dec
stos
push
sbb
lods
dec
es
rcl
cmps
test
jbe
test
or
push
test
movs
sbb
loope
or
call
call
pushf
sbb
adc
mov
cmc
(bad)
fwait
iret
and
sar
test
aaa
hlt
jns
int
jae
mov
adc
cmp
xchg
inc
cmps
aad
jno
mov
(bad)
stos
mov
(bad)
out
jg
call
xor
bound
in
(bad)
mov
icebp
lods
pop
pop
lock
stc
push
pop
lds
retf
out
add
jl
es
mov
in
outs
xor
or
jge
in
jns
jmp
leave
ss
movs
mov
(bad)
(bad)
pop
pop
jmp
xor
add
mov
imul
xchg
stc
(bad)
fadd
jb
inc
push
add
push
fiadd
dec
xchg
stc
leave
jl
lahf
mov
push
mov
or
(bad)
test
or
mov
int3
mov
test
enter
stc
dec
xchg
rcl
fnsave
nop
cmp
pop
mov
gs
popf
sbb
call
jmp
ins
sbb
fwait
cmp
rcl
and
je
popw
mov
push
push
pop
jbe
and
nop
inc
loop
mov
add
sbb
ss
sar
pusha
sub
movs
loop
jno
pop
fldenv
inc
dec
(bad)
xchg
mov
xor
aad
imul
jne
xchg
bound
jl
addr16
adc
xchg
and
dec
mov
and
dec
push
test
mov
or
movs
fidivr
adc
sub
pop
fs
xor
inc
sub
jmp
(bad)
sbb
rcl
push
daa
push
xor
jp
xchg
add
lea
add
jge
xchg
pusha
repz
dec
jp
sub
and
in
and
cmp
jne
jl
out
rcr
cmp
xor
inc
fcmovne
fnsave
ss
ins
in
fadd
addr16
xor
adc
pop
cmp
xchg
mov
mov
cwde
pop
adc
add
cs
sub
cli
push
jbe
stc
aaa
jns
jle
push
sbb
push
cmp
pop
ret
scas
in
lock
xor
std
out
enter
fnstenv
sub
imul
shl
pop
test
jo
xor
xchg
out
scas
push
xchg
inc
jecxz
dec
xchg
add
push
mov
out
dec
cli
fld
push
inc
sub
scas
cmp
lods
ins
xor
or
jne
imul
sub
(bad)
sbb
jmp
sbb
pop
inc
ret
stc
cmps
leave
mov
in
and
enter
ins
dec
sub
or
nop
loope
mov
push
inc
in
push
adc
cwde
repz
scas
cdq
(bad)
scas
fwait
pop
adc
and
inc
cmp
push
push
jne
ins
jmp
or
aad
push
add
int3
icebp
test
and
xchg
and
outs
mov
mov
push
cmp
mov
clc
scas
dec
gs
cmp
js
idiv
in
push
cmps
inc
or
mov
sbb
cs
pop
xchg
or
bound
jmp
std
xchg
adc
sahf
dec
cwde
pop
fisubr
push
in
cdq
jg
test
aaa
pusha
mov
and
mov
mov
dec
imul
push
push
sbb
sbb
aam
inc
pop
push
pop
dec
xor
stc
stos
push
sbb
(bad)
outs
sti
and
test
dec
loopne
sbb
xchg
lds
cmp
enter
jp
test
dec
dec
aad
test
mov
add
outs
jno
fnsave
daa
leave
(bad)
(bad)
iret
xchg
aas
mov
push
inc
dec
and
cmps
clc
shl
cs
les
int
pop
dec
mov
sbb
cmp
and
test
lods
addr16
jnp
test
out
pop
iret
dec
cmp
jno
pop
stos
pop
cmp
int3
(bad)
lods
cmc
jl
xor
lds
pushf
es
mov
repz
add
mov
xchg
test
xor
dec
mov
mov
push
dec
mov
enter
inc
jl
jo
dec
scas
jl
out
jp
xor
push
test
in
sub
test
in
aas
pop
clc
popa
cli
ins
repnz
mov
iret
je
sbb
aad
xchg
jmp
or
repz
ffreep
sub
scas
stos
mov
xchg
mov
adc
in
pop
aad
xchg
xchg
cdq
push
into
popa
retf
fcomp
bnd
aam
cmp
pop
jmp
nop
jp
loope
inc
rcl
ds
pop
jns
push
jmp
lahf
(bad)
xlat
adc
test
or
jl
mov
dec
stos
adc
arpl
adc
out
sbb
cmp
loope
sub
fmul
push
rcl
sbb
aas
adc
push
lods
lea
ret
out
fs
jp
xchg
in
jb
mov
stc
xchg
rcr
daa
adc
sub
or
push
dec
lahf
pshufw
test
fstp
push
in
mov
data16
push
cs
lods
push
dec
loope
cmp
push
xchg
(bad)
imul
sub
bound
mov
call
pop
cmp
push
push
inc
jne
mov
push
xchg
inc
mov
mov
lds
jne
dec
std
cli
(bad)
sub
fadd
jge
nop
mov
fld
cli
dec
cmp
and
cmp
xchg
cmp
(bad)
sbb
ss
push
mov
fimul
push
arpl
sbb
stos
(bad)
hlt
call
mov
or
mov
or
push
rep
jp
jns
jmp
loopne
push
push
int3
push
cwde
sbb
call
mov
lea
lods
mov
cmp
lock
sub
push
das
xchg
stos
or
inc
or
add
(bad)
push
lock
inc
scas
out
pop
loop
pop
retf
pop
call
jo
push
addr16
mov
inc
mov
scas
jne
push
cmps
push
jnp
test
(bad)
fadd
xchg
jle
mov
sbb
ret
mov
jno
mov
mov
inc
out
into
sbb
xor
push
fwait
adc
test
mov
mov
pop
enter
or
xchg
retf
lahf
mov
cwde
xor
pop
mov
addr16
call
movs
mov
ret
inc
sbb
into
pop
mov
(bad)
and
push
cmp
(bad)
lds
pusha
pop
aas
xchg
pop
push
pop
cwde
inc
xor
push
and
adc
(bad)
dec
sub
lods
les
fisubr
not
dec
loopne
shl
aas
stc
idiv
jge
and
fmul
sbb
movs
sbb
cmps
mov
mov
push
xchg
dec
cmp
ins
repnz
push
sbb
pushf
imul
rcl
mov
jmp
add
daa
lock
dec
jmp
aas
or
shr
xor
es
int3
or
xor
rcr
cli
dec
imul
pop
push
jge
lahf
lea
xor
xchg
sub
jle
pop
mov
aaa
mov
sbb
mov
(bad)
cmp
sbb
add
retf
sub
push
in
push
inc
fisub
ins
in
cmp
sub
mov
ss
mov
cmps
adc
icebp
and
and
ud0
aam
(bad)
ss
int3
clc
sub
sbb
pop
or
sub
or
mov
stos
sbb
inc
add
lock
pop
cmp
lds
jne
dec
xchg
mov
and
mov
mov
push
jbe
stos
repnz
cmps
fsubp
test
push
data16
jae
fs
push
add
test
sbb
jo
and
dec
cli
imul
loopne
jmp
ds
dec
shl
pop
adc
add
pop
xchg
aam
mov
cdq
inc
mov
sub
lock
mov
push
sub
push
add
mov
push
jae
into
jns
pusha
pusha
std
sub
pop
pop
inc
cmp
add
call
out
push
xor
outs
push
cld
xchg
sti
inc
adc
inc
ins
sbb
es
iret
sbb
or
xor
lea
aad
fucomi
inc
and
sbb
cmp
xchg
sahf
and
arpl
fs
pop
xor
icebp
stos
arpl
retf
mov
mov
aam
or
mov
inc
push
movs
cmps
fmul
jg
aas
jmp
push
adc
push
dec
mov
es
(bad)
imul
push
outs
hlt
je
ret
xchg
and
in
pop
push
xchg
xchg
ret
mov
mov
outs
pushf
popa
and
pop
dec
ins
inc
(bad)
push
sbb
ins
jns
or
cdq
mov
xor
popa
popa
jb
cmp
pusha
pop
enter
jae
push
ja
dec
sbb
lods
aas
dec
pop
inc
pusha
in
or
(bad)
inc
xor
ja
stc
stc
fs
sub
pop
mov
jmp
fisub
bound
(bad)
push
sahf
jge
dec
sub
add
cli
(bad)
fwait
dec
add
rcl
push
add
rcr
dec
sbb
pop
test
jp
cmp
pop
jl
sub
xchg
inc
and
xor
enter
or
mov
sbb
xchg
fcomp
ss
push
pop
jge
ss
stos
mov
mov
imul
or
jmp
push
or
jp
fsub
fisubr
ss
xor
pop
clc
adc
xor
out
or
mov
and
div
mov
scas
cld
int
outs
pop
sub
aaa
add
jle
xor
sub
addr16
pop
jge
and
aaa
pop
jg
ss
out
jg
stos
xchg
mov
jp
push
mov
dec
in
movs
cmp
test
test
pop
xchg
pop
mov
cmps
pop
push
dec
lea
mov
clc
popf
rcr
push
fucom
jb
xchg
cs
std
dec
adc
scas
dec
into
and
push
adc
and
mov
push
cmp
jo
out
imul
inc
test
sub
or
pop
lahf
add
rol
ins
push
inc
xor
fst
std
jno
imul
mov
pusha
mov
(bad)
clc
imul
and
and
pop
adc
or
dec
clc
ret
cdq
cld
loop
dec
sub
int3
retf
mov
xchg
pop
call
push
push
lds
mov
pop
js
out
(bad)
push
dec
mov
pop
(bad)
xchg
cmc
pusha
(bad)
mov
call
outs
jle
hlt
sbb
cld
push
jp
lods
or
pop
loopne
mov
inc
push
adc
retf
mov
pop
arpl
rcr
dec
fisttp
fmulp
shl
test
mov
push
dec
xchg
pop
xor
mov
dec
mov
mov
cmp
(bad)
call
ficomp
clc
mov
mov
add
call
or
adc
adc
sahf
in
jp
or
sub
ins
adc
mov
sbb
push
icebp
jbe
cli
jle
mov
les
lods
ins
inc
in
fwait
jl
push
mov
js
fsubrp
xchg
xor
shl
popa
(bad)
ds
fs
and
pop
and
in
test
inc
scas
inc
movs
outs
jo
in
push
mov
mov
xchg
out
les
add
repnz
jmp
fs
sub
dec
scas
sti
mov
fld
test
test
and
push
sub
xchg
adc
out
stos
push
call
aas
inc
mov
retf
add
mov
sbb
pop
mov
scas
dec
jecxz
into
pop
mov
lock
mov
adc
mov
inc
mov
xchg
jbe
outs
or
stos
sub
leave
pop
cs
xchg
xor
fisttp
test
repz
js
lods
push
cmps
mov
shl
imul
out
out
stos
inc
mov
(bad)
xchg
cmp
and
mov
mov
das
imul
js
mov
push
movs
inc
out
jo
mov
cs
and
imul
imul
jl
je
mov
es
xor
int3
push
xor
icebp
out
xchg
jl
je
jb
cmp
popf
adc
mov
arpl
int3
or
cmp
sbb
fidivr
ja
pusha
sub
ins
data16
add
shl
in
add
push
pop
popa
ror
sub
call
fwait
stos
xchg
leave
pop
push
in
push
mov
pop
xchg
scas
ins
aad
jmp
adc
xor
callw
mov
mov
idiv
pop
out
stos
inc
push
lods
xor
sysret
mov
xchg
sub
nop
(bad)
(bad)
add
test
pop
pop
sti
jle
out
addr16
pop
fisttp
mov
aas
or
adc
test
cmp
not
imul
pop
sub
into
inc
mov
stos
and
pop
test
cli
mov
nop
jl
ret
xor
xchg
xor
push
shr
bnd
mov
and
xor
not
xchg
clc
add
sub
scas
jg
inc
std
aam
mov
pushf
xchg
mov
cmp
pop
fstp
jae
sub
movs
out
dec
loope
nop
push
add
outs
in
cmp
pop
cwde
cli
mov
movs
jb
sbb
(bad)
add
gs
stos
push
and
outs
and
add
add
mov
add
jb
push
cmp
xchg
je
push
icebp
dec
mov
inc
mov
jecxz
pop
push
fs
inc
inc
or
in
sbb
in
inc
stc
cdq
sti
cmps
retf
fcom
mov
sar
enter
add
push
cmc
mov
xchg
mov
cmc
pop
mov
xchg
ror
pusha
or
sbb
fwait
dec
les
loop
pusha
pop
in
and
movs
add
out
mov
add
xor
sbb
adc
or
pop
xchg
jg
xchg
inc
loop
sub
adc
jae
mov
pop
scas
sbb
sub
dec
jmp
inc
pop
fld
test
test
pusha
inc
dec
ins
mov
jp
sub
push
dec
push
test
hlt
xchg
bound
jb
stos
sub
repz
test
popf
inc
dec
out
mov
mov
rcr
arpl
(bad)
sti
into
xor
sbb
call
pop
jp
inc
lock
xor
test
mul
aaa
outs
cli
cmc
es
popa
orps
pop
xchg
inc
xchg
hlt
test
mov
ror
fnstenv
repnz
push
xchg
push
xchg
xlat
loopne
pop
cmp
pop
in
mov
adc
fnstcw
js
mov
scas
gs
pop
jne
pop
cdq
(bad)
les
ins
aam
(bad)
popa
and
jo
test
ficomp
fadd
sbb
mov
call
cmp
(bad)
mov
imul
cmp
dec
xchg
into
add
push
lock
or
iret
adc
jo
dec
xor
test
mov
es
sbb
sbb
or
adc
pop
xchg
xchg
and
xchg
xlat
cdq
shl
mov
dec
je
cmp
cmp
loope
movs
pop
xchg
dec
mov
dec
push
add
add
push
inc
sub
retf
cmps
push
push
shr
sbb
sbb
pop
popa
into
push
cmp
fs
(bad)
mov
fiadd
dec
ja
and
ret
cwde
cwde
xchg
cmp
fisttp
push
and
sti
loop
inc
pushf
je
dec
jae
pop
adc
inc
pop
fsub
adc
stc
adc
je
lods
not
jbe
pop
mov
dec
adc
mov
clc
cmps
sbb
arpl
jmp
rcr
adc
gs
pop
jle
mov
xor
push
cmp
adc
mov
mov
mov
ret
inc
in
out
xlat
iret
sbb
call
fistp
test
stc
fabs
jae
cmps
push
lods
adc
adc
mov
xor
cmp
pushf
adc
fisttp
mov
inc
iret
push
fwait
adc
jl
retf
rcr
ret
mov
dec
dec
mov
clc
pop
aas
div
inc
cmps
xor
push
xor
stc
inc
jns
nop
repz
add
and
jae
retf
pop
add
sar
push
ret
cmc
(bad)
xlat
push
push
sub
dec
xadd
push
pop
aam
adc
retf
fs
push
cmc
sahf
hlt
xchg
or
outs
adc
outs
fsubrp
jbe
rcr
xchg
ja
cmc
and
cwde
mov
call
inc
pusha
test
push
imul
hlt
jo
push
add
adc
add
retf
fwait
sbb
sti
mov
and
stos
inc
adc
dec
outs
sbb
es
sar
and
imul
pop
xor
mov
das
std
enter
xchg
fwait
cmp
rcl
sbb
(bad)
xchg
and
shl
push
ror
pop
js
pop
inc
jecxz
mov
add
push
outs
and
mov
or
xchg
push
jne
sbb
jge
dec
pop
out
nop
call
jp
jae
or
xchg
test
cmp
fisttp
adc
adc
ds
dec
mov
dec
add
arpl
mov
fldenv
dec
imul
ja
rcr
fistp
xor
add
lea
sti
mov
repnz
sbb
jo
js
sub
pop
or
push
jmp
adc
mov
mov
push
inc
(bad)
pop
movs
jl
stos
mov
retf
sbb
sbb
test
fsubrp
mov
div
jo
jns
xchg
dec
mov
cmp
stos
je
movs
mov
sbb
jno
dec
in
or
mov
jmp
jge
cmp
xlat
fisttp
inc
jecxz
cmps
out
adc
mov
cmps
sbb
cmp
jl
dec
imul
sub
ret
mov
pop
arpl
and
jp
xor
xchg
jge
inc
(bad)
int3
jb
dec
xor
enter
mov
movs
retf
rcpps
jb
stc
pop
push
sahf
(bad)
out
adc
fild
out
cmp
out
cs
iret
popa
test
pushf
add
rcl
lea
mov
fs
data16
inc
dec
ja
and
mov
sbb
fld
or
es
retf
sbb
mov
cmp
gs
cs
les
cmps
mov
js
inc
outs
and
sub
jns
out
inc
push
cmp
mov
adc
and
xchg
xor
js
mov
sar
or
mov
out
push
and
or
rol
rcl
fcmovne
or
sub
mov
mov
xor
les
sahf
(bad)
mov
aam
pusha
mov
sub
pushf
inc
push
test
lock
inc
bound
dec
sbb
fiadd
xor
fs
pop
mov
pop
ds
xor
jno
add
rcl
pop
nop
cli
clc
pop
mov
fwait
pop
adc
xor
clc
mov
ret
ret
pop
jbe
fld
inc
xor
neg
adc
ror
jecxz
sub
xor
mov
rcr
add
jecxz
pop
lock
add
(bad)
mov
push
mov
sahf
mov
jg
in
sub
in
sbb
mov
out
push
xlat
scas
enter
cmps
ret
cs
mov
add
rol
imul
fild
out
shl
data16
ret
fxch
pop
push
rcl
ja
sbb
jg
test
pop
iret
test
push
adc
clc
imul
jp
mov
mov
dec
mov
mov
pop
and
inc
dec
sbb
retf
push
sub
mov
ss
movs
movs
into
fsubr
neg
clc
add
popf
sub
cmp
nop
dec
std
jl
xchg
and
mov
cmps
or
std
iret
jns
pusha
pop
pop
pop
retf
ret
data16
dec
dec
icebp
loop
lahf
jns
inc
stos
test
mov
or
jne
jae
mov
int3
cld
push
icebp
sbb
movs
inc
push
push
imul
dec
cwde
push
mov
rcr
outs
mov
mov
fs
push
pop
pop
mov
hlt
or
dec
sub
cmp
or
ss
mov
fs
std
out
jne
out
cmc
loopne
fidivr
adc
mov
scas
xor
(bad)
xlat
add
xchg
adc
cmp
(bad)
pop
sbb
xchg
mov
pop
xlat
adc
mov
jmp
fwait
sub
out
mov
repz
popf
arpl
mov
cmp
test
out
xor
mov
and
dec
jp
mov
imul
mov
scas
call
es
sub
mov
xchg
inc
jmp
aam
cmp
push
push
adc
repz
aad
mov
repz
sahf
sub
in
aas
retf
lods
dec
sbb
hlt
ret
iret
dec
adc
je
lods
cwde
into
je
xchg
jno
daa
int3
push
movs
jns
pushf
dec
mov
inc
dec
pusha
out
lods
mov
mov
hlt
pop
mov
sti
xchg
clc
das
inc
in
add
push
stos
xchg
mov
mov
push
pop
aas
push
mov
into
pop
mov
cmp
(bad)
je
mov
and
sti
sahf
fwait
ror
scas
pop
mov
xlat
(bad)
leave
rcr
dec
mov
enter
jne
hlt
and
cmp
push
std
les
loop
test
and
clc
out
(bad)
push
lods
retf
and
and
push
repnz
pop
aaa
call
push
in
js
jmp
mov
jmp
fsubr
in
or
dec
imul
pop
mov
sti
cld
jbe
sub
iret
jmp
or
inc
or
imul
push
movs
xor
ret
in
in
fdivr
dec
add
repz
and
xor
mov
sub
cmp
add
and
inc
xchg
push
mov
pop
pop
test
call
sub
retf
sub
fwait
stos
fwait
or
mov
cmp
(bad)
cld
mov
cli
cmp
jbe
outs
es
aas
cld
les
sbb
pop
dec
popf
jne
jns
pop
fwait
mov
clc
hlt
ficom
xor
aad
adc
mov
pop
xchg
popa
xchg
mov
rcr
outs
dec
aaa
push
cmp
ds
xchg
sub
shr
mov
mov
je
mov
sub
dec
push
(bad)
xchg
scas
mov
or
xchg
mov
xor
push
xor
lahf
jo
add
fbstp
jl
in
pop
cmps
test
out
loope
mov
loopne
inc
sub
push
mov
jo
fdiv
ins
das
or
ficom
dec
push
or
xor
mov
pop
add
movs
arpl
or
add
pop
jp
ins
sbb
fcmovu
test
xchg
imul
pusha
fadd
std
inc
outs
shr
(bad)
xchg
pusha
lea
imul
test
push
test
fmul
push
mov
(bad)
icebp
push
mov
(bad)
xchg
ja
cmps
inc
adc
icebp
stos
push
call
ret
test
pop
dec
and
or
mov
js
jnp
pop
lahf
fdivrp
mov
loop
rcr
xchg
call
test
xchg
je
and
adc
inc
xchg
lods
jecxz
imul
jl
ficom
fs
rol
xchg
jmp
in
test
nop
pop
fs
(bad)
mov
fcmovnbe
stc
mov
dec
sub
ins
in
mov
in
fsubr
jns
jae
sub
int3
push
xor
cmp
inc
sbb
cld
dec
adc
or
fsubr
pop
cmp
ficom
dec
mov
das
mov
jmp
push
dec
fnsave
inc
inc
cdq
cdq
scas
out
and
and
dec
push
jae
cwde
push
cmps
dec
(bad)
enter
or
xchg
aad
ret
imul
imul
cmp
sub
mov
push
call
xor
jno
cmp
rcl
adc
jl
in
add
cmp
repnz
jg
stos
jle
jmp
rcl
std
inc
cmp
(bad)
mov
cmc
aaa
xor
cmp
xchg
xchg
mov
mov
mov
cmp
out
mov
mov
repz
stc
or
mov
hlt
cmc
add
jmp
and
pop
push
in
dec
(bad)
fst
adc
repz
xor
dec
dec
cmc
xor
iret
imul
pop
xchg
mov
xor
xchg
popa
and
jne
aad
add
adc
data16
stc
pop
xchg
add
pusha
cmp
dec
rcr
pusha
loopne
and
test
mov
jecxz
xor
xchg
jmp
xchg
mov
ds
jecxz
adc
or
cwde
icebp
mov
je
push
cmps
stc
sbb
aaa
dec
push
add
sar
jge
add
xchg
push
fdiv
cld
scas
shl
retf
dec
pusha
add
in
sti
or
and
mov
jmp
jo
gs
iret
(bad)
mov
and
loop
or
or
movs
xlat
mov
push
mul
fs
popa
ret
inc
test
(bad)
(bad)
loop
je
cdq
mov
add
into
and
jmp
not
outs
mov
and
call
in
xor
into
and
int
mov
or
pop
jge
sbb
in
push
arpl
aad
jno
js
jbe
mov
sbb
add
sub
adc
gs
aam
test
mov
test
jg
fdivr
ins
call
mov
cs
jl
rcr
pop
imul
cmc
ja
out
push
adc
sbb
push
data16
sbb
call
inc
and
jns
and
or
out
js
mov
imul
(bad)
sub
jo
lea
cmp
sub
lods
dec
ret
xchg
dec
rcr
pop
loop
stc
xchg
or
jl
mov
xor
inc
xchg
pop
inc
dec
push
jns
lock
movs
fldcw
div
sub
mov
pop
(bad)
scas
js
sub
mov
into
xor
call
js
shl
and
jbe
out
fmul
fimul
sub
jnp
xor
hlt
and
mov
rcr
pop
and
adc
sbb
leave
sub
inc
mov
in
aas
push
hlt
inc
sub
dec
jmp
int
mov
cmp
test
inc
iret
(bad)
or
jl
arpl
bound
xchg
lahf
mov
ror
cmp
cmc
(bad)
(bad)
cmp
jo
out
mov
push
cmp
adc
call
xor
test
add
pop
mov
repz
add
push
mov
popa
jmp
lahf
cmp
lock
sub
mov
aas
test
sbb
dec
jmp
fsub
shr
push
(bad)
sub
adc
push
inc
dec
push
lds
mov
xor
rcr
adc
sar
loope
arpl
sti
xchg
jnp
daa
inc
retf
fwait
sbb
je
lods
std
push
rol
mov
add
mov
in
sbb
xor
je
push
pop
test
or
pop
and
fist
cmp
loop
(bad)
fwait
mov
je
test
sbb
jbe
xor
and
adc
sbb
loope
push
outs
mov
jmp
icebp
mov
sti
(bad)
ret
jo
ds
lods
data16
and
xlat
xor
mov
int3
mov
cdq
lods
xchg
les
jmp
js
in
mov
clc
outs
aad
cmp
cmp
into
out
fild
leave
out
stc
out
in
mov
jae
call
stos
xor
dec
pop
int
xchg
pop
pop
pop
addr16
ret
cmp
mov
fs
ins
push
xor
test
mov
aaa
cwde
aas
xor
out
out
inc
inc
xor
jmp
pop
or
jg
jo
out
jb
fwait
imul
dec
pop
cmp
xchg
sub
add
add
cli
adc
stos
ffree
mov
and
popa
movs
mov
xchg
aam
xor
int
data16
or
outs
inc
mov
aam
js
push
(bad)
clc
arpl
mov
shl
dec
cmp
enter
in
adc
jmp
(bad)
in
push
and
rcr
lock
jns
sub
sbb
test
std
aas
daa
dec
add
mov
mov
jle
in
pop
jb
xchg
sub
fsub
add
js
leave
inc
mov
dec
mov
test
loop
push
sub
(bad)
mov
mov
or
in
into
scas
mov
mov
mul
or
mov
frstor
mov
push
mov
adc
aaa
xchg
pop
fwait
mov
sbb
dec
jmp
inc
es
cmps
xchg
pop
daa
sbb
sahf
inc
aas
push
in
sbb
lahf
xchg
pop
out
hlt
outs
rcr
div
or
addr16
inc
jmp
mov
mov
sub
in
rcl
or
jno
add
inc
xchg
jmp
or
adc
fcomp
shr
sahf
div
fs
fdivr
arpl
das
add
rcl
pushf
mov
adc
dec
fwait
pop
xchg
retf
outs
push
outs
inc
or
in
cli
jmp
ror
cmp
daa
iret
aad
outs
clc
push
aad
jbe
mov
pop
and
in
add
inc
retf
fwait
push
scas
sub
sbb
pop
xchg
aad
push
sti
daa
inc
mov
add
leave
das
jns
mov
hlt
and
(bad)
(bad)
ja
aaa
xchg
das
in
mov
push
sbb
cmp
lock
mov
inc
and
int3
push
inc
xor
push
jns
jb
mov
cmp
adc
and
call
push
push
not
ret
int
aam
stos
cmp
mov
nop
popa
mov
dec
inc
xor
jbe
push
not
cmp
in
mov
mov
(bad)
xor
pop
mov
dec
xlat
ss
scas
sub
push
cmc
and
cdq
jne
mov
(bad)
daa
push
sub
(bad)
shr
push
mov
or
daa
xor
pop
clc
retf
sahf
xchg
fs
mov
mov
loopne
mov
pop
nop
push
inc
(bad)
mov
add
jl
(bad)
pop
or
push
cmp
xchg
add
outs
cs
sub
dec
xchg
test
je
xor
pop
loopne
movs
in
jns
bound
call
mov
mov
or
push
push
sahf
aad
stos
cmp
out
gs
xor
add
push
inc
inc
test
pop
hlt
rcl
dec
cmps
sbb
add
data16
and
in
dec
add
js
push
mov
jmp
inc
enter
xor
into
cmp
jmp
aam
mov
stos
ss
jmp
or
jbe
loopne
mov
add
sub
add
aam
pop
jno
mov
fs
cmc
jo
sub
push
mov
dec
(bad)
int3
push
jle
out
out
popf
pushfw
out
xor
sbb
lock
or
push
dec
shl
jmp
stc
mov
mov
mov
mov
outs
js
idiv
(bad)
adc
out
pusha
xchg
lods
mov
stos
add
push
pop
dec
stc
push
xchg
mov
stos
(bad)
mov
push
cmp
out
orps
es
jbe
call
ds
jg
loope
mov
cli
sbb
jbe
cmps
jmp
add
jmp
(bad)
dec
sahf
push
popa
mov
fcom
popa
(bad)
adc
loopne
mov
xchg
test
mov
fistp
(bad)
or
les
mov
fwait
pop
call
mov
and
cmc
xchg
push
pushw
and
cmp
cdq
sbb
mov
popf
xchg
repz
rcr
sub
add
outs
xchg
sbb
sahf
call
and
int
loope
out
cmps
js
addr16
popf
paddw
mov
jae
icebp
xchg
test
(bad)
add
push
sub
fs
cmps
xchg
ret
dec
std
test
(bad)
cmps
mov
leave
and
cmp
nop
fcomp
das
xor
mov
xchg
in
std
movs
xor
adc
jle
pop
xchg
adc
(bad)
loope
inc
xor
stos
sti
(bad)
jp
sub
movs
aad
movs
mov
jmp
jmp
pop
xchg
jnp
fyl2x
push
mov
sub
test
out
inc
mov
mov
out
aam
arpl
cli
add
pop
mov
(bad)
add
adc
scas
or
mov
inc
pop
je
fmul
adc
(bad)
fadd
dec
cld
pop
mov
ss
jg
sbb
ret
mov
or
jmp
xor
sbb
sbb
enter
jl
mov
iret
pop
lahf
cli
dec
cdq
jb
mul
sub
push
cld
xor
add
(bad)
adc
sub
fadd
push
xchg
fsubr
pop
xchg
jne
mov
mov
xor
or
add
dec
je
mov
cmp
fbld
stos
int3
add
sub
adc
add
mov
stos
pop
sub
in
add
jle
in
mov
test
in
(bad)
into
mov
ret
dec
sbb
cmp
cdq
pop
mov
jne
sub
push
push
mov
jg
in
pop
fwait
jo
adc
mov
xchg
and
cmp
out
xchg
push
repz
inc
push
imul
fidiv
or
inc
or
daa
pop
push
outs
fstp
(bad)
push
pminub
push
shl
cmp
pop
imul
cld
or
in
jae
sbb
pusha
test
cmp
scas
mov
in
shr
mov
pop
pop
mov
clc
mov
into
ret
mov
test
ret
mov
inc
push
inc
cs
fld
mov
std
cmps
js
or
xchg
cmps
retf
add
test
jno
push
lods
pop
push
in
cli
stos
adc
xchg
out
jns
aam
fsub
mov
arpl
ret
imul
jg
sub
ins
addr16
mov
imul
add
dec
dec
inc
sbb
aad
(bad)
ss
fsub
xor
stc
mov
(bad)
xchg
xor
pop
sbb
mov
adc
rol
cdq
mov
or
movs
pop
ds
jno
and
sbb
call
add
push
sbb
adc
mov
or
or
aas
int3
sub
adc
and
dec
add
pop
and
sahf
sbb
push
mov
inc
mov
out
sub
pop
outs
shr
mov
fnstsw
dec
mov
hlt
dec
dec
lock
pop
push
mov
call
dec
sub
mov
add
pop
push
mov
xchg
and
pop
push
mov
xor
xchg
mov
icebp
push
cmps
fs
(bad)
cmps
movs
pop
pop
push
cmp
cmp
stc
(bad)
cmp
xor
push
push
call
fwait
dec
out
lock
in
sbb
repnz
mov
pushf
cli
(bad)
jmp
ja
adc
push
pop
shl
icebp
mov
jo
addr16
xchg
cmps
and
sbb
dec
dec
pop
xchg
jge
(bad)
dec
add
lods
lea
xor
(bad)
pop
mov
mov
outs
pop
cmp
loopne
sbb
and
iret
or
aam
loope
cmp
jns
vunpckhps
std
adc
repnz
repz
aam
jmp
pop
inc
(bad)
retf
inc
push
mov
xchg
ret
div
mov
daa
ret
mov
pop
mov
xchg
ror
imul
loopne
mov
xchg
out
lock
or
mul
test
fmul
mov
retf
xchg
out
(bad)
jbe
dec
out
ror
add
mov
cmp
stos
rcr
test
test
cmp
aad
lods
mov
mov
sub
ja
xor
les
fbstp
int
xchg
out
lods
jmp
jmp
aad
push
bound
xchg
mov
mov
dec
pop
ds
ds
outs
nop
sar
xchg
test
push
and
pop
retf
scas
mov
jp
adc
inc
outs
mov
in
loope
adc
xlat
or
xor
mov
push
cdq
pushf
pop
xchg
mov
add
out
movs
out
daa
scas
cdq
pop
cmp
adc
movs
jmp
jbe
test
jb
int
dec
(bad)
addr16
mov
mov
and
shr
xlat
and
stc
adc
adc
mov
xchg
sbb
pop
xor
int3
sbb
jge
push
push
iret
cmp
xchg
loop
fsub
or
push
fadd
xchg
mov
cs
cdq
cmc
and
sbb
aaa
cmp
adc
cli
mov
lods
rcr
inc
mov
pop
shl
inc
pusha
push
jnp
push
sbb
cmps
jecxz
fs
xchg
xor
sbb
jno
jge
pop
jle
add
repz
xchg
dec
arpl
sbb
jo
loop
dec
mov
inc
xchg
lods
test
cmp
add
or
ins
xchg
mov
arpl
pushf
in
mov
lods
jbe
inc
stos
xchg
pop
and
pusha
push
xor
sbb
fstp
mov
push
cwde
xor
cld
xor
test
jl
call
sbb
retf
aas
xchg
sub
mul
xchg
mov
jp
push
push
xchg
in
push
daa
push
cmps
jb
cmp
xchg
shl
scas
aam
vpsadbw
in
or
retf
dec
jnp
mov
mov
sub
push
cmc
xor
mov
shl
pop
xchg
sbb
scas
pop
mov
sti
mov
(bad)
sbb
in
inc
sbb
cmp
(bad)
fld
mov
sti
sbb
cmp
dec
dec
sub
fld
ja
pop
call
or
fisub
hlt
pop
sbb
test
rcr
nop
sbb
fild
and
mov
push
push
mov
loop
mov
xor
xchg
mov
(bad)
repnz
jnp
int
(bad)
mov
mov
sahf
xor
scas
in
jecxz
xchg
repnz
repnz
sub
sub
sub
mov
xchg
lea
or
popa
xchg
adc
lock
inc
mov
mov
addr16
sahf
mov
test
pop
(bad)
fst
jge
shr
dec
jp
xor
mov
int
aas
adc
cdq
lea
push
test
cmp
mov
repz
inc
clc
fisttp
pop
ds
xor
xor
sbb
ret
inc
test
or
fisub
jne
jmp
pushf
leave
add
ss
loopne
push
mov
push
inc
inc
mov
sahf
int
or
in
mov
push
push
mov
jnp
mul
leave
data16
xchg
cmp
inc
adc
dec
or
xchg
fild
sub
ret
sub
data16
lea
ja
dec
dec
shl
pop
popa
mov
leave
or
lahf
xchg
adc
push
sbb
out
adc
and
mov
in
jg
pop
mov
test
sbb
data16
not
and
sbb
call
pop
sub
rcr
jp
ins
dec
pop
jp
push
jb
mov
das
jmp
add
outs
cmp
fisubr
mov
or
bound
pop
int
adc
daa
mov
in
and
outs
ins
lock
add
(bad)
fcom
in
cmp
inc
mov
icebp
push
or
push
mov
jge
inc
mov
dec
pop
jmp
ins
inc
loopne
mov
rcl
ss
(bad)
in
cmps
in
add
into
sbb
(bad)
xchg
sub
pop
nop
cmp
xchg
popa
add
(bad)
data16
(bad)
fimul
cmps
cmps
or
inc
adc
xchg
test
pop
sbb
ret
lods
pop
jae
push
push
add
xchg
outs
jge
jb
(bad)
xor
aam
inc
lea
imul
mov
popf
xchg
cmp
sti
mov
add
imul
stos
mov
mov
(bad)
sub
rcl
jg
adc
cli
fldenv
jecxz
rol
pusha
popa
mov
sbb
xchg
pop
inc
fs
stc
(bad)
das
cmc
cmps
mov
sar
mov
fsub
sub
pop
cmp
fadd
push
scas
adc
retf
adc
outs
shl
pop
call
test
xlat
push
or
pop
mov
mov
mov
push
pop
push
retf
push
loop
fidiv
xlat
clc
xor
inc
jo
xchg
adc
jecxz
push
jmp
cwde
idiv
aas
inc
iret
xor
mov
les
aaa
cmps
dec
fdivr
fs
dec
iret
inc
and
outs
cmp
mov
dec
stos
xor
mov
sub
dec
call
mov
icebp
inc
lea
retf
or
or
inc
retf
push
leave
out
imul
rcr
je
ret
sti
adc
retf
and
mov
in
dec
xor
outs
jns
mov
stos
xchg
jo
jno
pop
dec
push
retf
gs
int3
dec
scas
inc
or
sbb
adc
stc
mov
fs
and
sbb
and
outs
sub
sbb
mov
call
adc
jbe
xor
outs
iret
pop
fistp
pusha
stc
add
xchg
stos
in
sahf
retf
in
jge
cdq
xor
mov
movs
mov
sahf
jecxz
push
sbb
push
aam
imul
or
jno
push
jnp
or
fldenv
iret
pop
mov
mov
aam
or
outs
cmp
cmp
dec
xor
ss
std
iret
or
aad
fistp
jg
cmps
mov
jecxz
inc
xlat
cmp
shl
cs
in
clc
test
xchg
pop
arpl
lds
pushf
and
cs
add
xchg
push
mov
popf
and
lods
xchg
imul
xchg
(bad)
jmp
sbb
div
adc
and
leave
xor
ret
mov
and
addr16
sar
xor
xor
js
not
inc
out
push
mov
mov
sub
sbb
sub
adc
mov
fcmovne
aaa
push
jl
jns
cld
icebp
imul
(bad)
jbe
icebp
fld
mov
fld
mov
fisub
mov
jg
int
pop
and
adc
retf
repnz
pop
pop
push
add
lods
mov
xchg
push
add
(bad)
mov
add
mov
push
repnz
pusha
in
dec
mov
xchg
arpl
inc
(bad)
pop
sub
pop
stos
sbb
stc
mov
push
clts
sub
(bad)
(bad)
jb
shl
std
loopne
pop
pop
pop
xchg
mov
mov
mov
pop
lahf
xor
(bad)
scas
pop
sbb
sub
dec
xlat
not
outs
push
sub
es
ficomp
cmp
sahf
lods
out
ds
fild
mov
xchg
xor
and
mov
push
pop
adc
repz
stc
jae
fst
or
in
or
mov
test
loopne
inc
add
or
mov
inc
cmc
dec
fwait
push
or
inc
test
cmps
ins
outs
mov
je
sbb
loop
add
jae
or
inc
xchg
(bad)
or
clc
mov
ins
mov
ret
mov
add
xchg
es
in
js
ja
or
push
retf
sub
or
cwde
ss
adc
xchg
xchg
clc
jo
push
sbb
cmps
(bad)
fmul
or
std
mov
pop
add
sub
push
arpl
adc
push
cmp
sub
add
inc
and
cmp
jbe
cmps
pushf
mov
mov
fild
adc
xor
jecxz
push
jmp
jg
push
es
or
adc
push
mov
enter
ins
inc
push
mov
das
xchg
push
and
nop
inc
retf
sub
cmps
jns
or
pop
nop
(bad)
rcr
jns
adc
ss
xchg
mov
pop
mov
rdmsr
jge
cmp
in
or
hlt
inc
lahf
push
xchg
cld
fsub
or
mov
ds
test
js
pop
xchg
xchg
pushf
cmp
int3
mov
cmps
xor
rcr
shr
mov
cmp
add
sbb
jmp
js
jecxz
nop
and
jl
repz
rcl
js
mov
or
push
popa
dec
addr16
bswap
and
push
or
sub
cmp
push
inc
pop
loopne
push
jle
sbb
in
fsubrp
pop
dec
mov
pop
psrlq
jb
jecxz
call
mov
mov
jge
test
clc
push
push
sbb
les
xchg
lock
lock
mul
jge
cmp
xor
add
les
cmp
and
inc
pop
pop
repnz
fist
aad
jae
inc
out
jnp
push
loopne
xor
mov
ret
push
mov
cwde
adc
pop
jl
arpl
push
mov
mov
jb
sar
xchg
adc
xchg
push
imul
and
fisttp
mov
pop
jb
add
enter
mov
jnp
hlt
(bad)
fmul
adc
aaa
jbe
xchg
hlt
pop
jg
inc
adc
fs
pop
sahf
mov
jp
shr
fdiv
sbb
xchg
repnz
mov
jl
jl
mov
les
lods
in
xlat
xor
movs
xchg
push
pop
sbb
xlat
(bad)
(bad)
aaa
jb
sar
jmp
mov
(bad)
adc
adc
(bad)
ins
out
mov
hlt
stos
addr16
into
add
out
cld
sub
lods
xor
jmp
and
(bad)
xor
clc
and
je
inc
xor
test
je
or
dec
(bad)
jge
dec
imul
jmp
push
call
(bad)
div
sub
outs
sbb
sbb
lods
aam
pop
vaddpd
lods
ins
sahf
pop
jo
leave
mov
mov
sub
iret
mov
lods
imul
inc
pop
xchg
push
and
sahf
push
aaa
mov
int3
call
mov
call
out
mov
dec
sbb
xor
out
push
sbb
push
jns
loop
sbb
adc
lods
add
dec
sub
bound
call
mov
in
inc
xchg
inc
rcl
shl
rol
ds
push
pop
jnp
in
pop
or
test
out
test
cmp
dec
arpl
mov
jne
dec
repz
or
test
ins
xor
pop
add
and
pusha
aad
add
and
jo
fdiv
mov
mov
pop
add
cmp
xchg
aaa
add
fist
outs
add
add
adc
pushf
xchg
scas
fsub
stos
fs
ret
daa
gs
ins
sub
sub
in
add
or
hlt
aas
push
and
mov
cs
cmp
call
into
pop
jae
call
inc
call
and
ja
xor
sub
movs
jmp
push
add
daa
push
retf
xlat
add
dec
dec
(bad)
cdq
fs
int3
gs
fmul
loope
mov
jns
ss
(bad)
fchs
mov
test
ret
call
push
hlt
inc
adc
jae
xchg
mov
fmul
fs
pshufw
popa
push
cwde
imul
std
retf
and
ret
xchg
imul
inc
cmps
adc
fstp
hlt
jl
fsub
inc
xchg
inc
jns
cwde
test
mov
mov
cmp
ja
fld1
setae
add
scas
xchg
mov
push
jmp
dec
add
inc
xor
nop
or
dec
xchg
mov
les
fbstp
fwait
add
push
imul
adc
sbb
sbb
iret
pop
les
test
and
call
mov
dec
inc
xchg
sbb
and
sub
mov
ds
in
das
in
(bad)
mov
adc
mov
js
rcl
xchg
outs
inc
lea
jg
cdq
cmp
imul
cmc
mov
mov
jo
or
pop
in
test
dec
mov
ja
stos
mov
add
push
dec
ins
sub
mov
stos
mov
dec
nop
add
test
sub
retf
adc
psrlw
jb
test
test
(bad)
mov
pop
int
fwait
add
or
push
adc
jno
js
mov
adc
push
dec
cli
into
pusha
mov
jo
sbb
xchg
push
arpl
mov
push
arpl
jle
and
mov
push
mov
pop
jmp
dec
cmp
hlt
popf
jo
pop
cmp
dec
daa
sbb
mov
cmps
test
adc
inc
into
mov
mov
push
push
shr
mov
xchg
push
add
jecxz
sbb
ds
ja
les
(bad)
or
jbe
pop
shl
lods
jecxz
es
inc
add
pop
push
xchg
mov
cmp
rcr
adc
inc
test
jp
mov
inc
in
push
inc
xor
inc
jmp
adc
clc
jle
not
push
outs
push
add
inc
dec
add
and
icebp
mov
imul
jl
sub
ret
cmp
pop
jb
cmp
int3
mov
mov
in
jl
sbb
pop
test
inc
mov
mov
sub
xor
push
fdivr
inc
into
ja
or
in
xchg
daa
sub
cmp
test
loope
adc
push
xchg
push
mov
out
fldenv
mov
or
ret
add
dec
icebp
adc
scas
jle
mov
fimul
adc
dec
xchg
nop
retf
les
add
in
push
nop
enter
ret
loop
mov
push
loope
xchg
fiadd
iret
cmp
cli
push
pusha
test
js
push
mov
out
(bad)
push
adc
mov
fdivr
(bad)
std
cmp
cmp
push
pop
pop
adc
hlt
std
pop
clc
cmp
or
pop
xor
add
dec
adc
cmp
mov
js
push
mov
jb
push
xchg
dec
xchg
mov
jge
mov
hlt
neg
int3
add
int
imul
jl
sti
sub
jo
pop
mov
pop
daa
mov
sub
xor
ud2
cmc
cmps
push
outs
xchg
lock
es
inc
(bad)
je
inc
addr16
cmps
div
(bad)
(bad)
cmp
xor
div
sbb
sti
xchg
(bad)
mov
addr16
pop
dec
dec
cld
movs
lods
sti
enter
add
adc
and
icebp
test
fisubr
dec
mov
inc
fld
inc
push
inc
mov
fs
movs
mov
(bad)
dec
jecxz
icebp
add
sbb
dec
scas
add
addr16
jbe
xor
cmp
ja
jns
retf
inc
mov
and
in
outs
sub
fiadd
clc
jnp
int3
js
mov
sbb
imul
inc
push
xchg
in
repz
stc
mov
and
mov
ret
adc
mov
xchg
test
arpl
xlat
lds
sbb
fisubr
push
xor
push
adc
mov
mov
and
sub
lods
pop
shl
xchg
fdivr
push
jo
xchg
aas
mov
cmp
ins
or
mov
aad
jae
cmp
pushf
mov
and
leave
pop
jl
js
jmp
in
sbb
jecxz
mov
mov
repnz
mov
jo
cmp
mov
xchg
xchg
xchg
rcr
jb
movs
mov
add
jo
mov
rcr
mov
ss
popf
inc
popf
jp
enter
pop
adc
stos
mov
cdq
into
scas
push
pop
mov
stos
test
aad
js
jmp
lods
outs
repz
push
add
or
mov
fs
mov
dec
shl
outs
mov
jmp
loope
jmp
pop
or
mov
addr16
jno
push
lock
add
in
dec
je
mov
ret
xchg
outs
test
adc
das
std
out
push
fsub
cmps
int
stos
mov
cli
out
stc
fistp
dec
xor
and
jno
fwait
cmp
cmp
add
call
cmp
push
jg
xor
aad
pop
imul
out
dec
jmp
or
xchg
js
and
dec
inc
dec
add
adc
sbb
int
xor
fmul
cmp
dec
dec
and
adc
push
cmps
test
pop
shl
imul
pop
js
and
test
lods
mov
cs
dec
sub
(bad)
xor
sar
es
sub
push
cwde
leave
les
mov
test
iret
sahf
jg
retf
push
(bad)
aas
loop
das
and
pop
adc
nop
(bad)
sub
inc
outs
cs
(bad)
sti
aad
pop
sbb
(bad)
jmp
adc
test
inc
sbb
mov
adc
dec
lds
out
nop
into
movs
and
rcr
nop
test
mov
xchg
cmp
jle
shr
test
test
fldenv
pusha
and
fstp
iret
push
test
xchg
lods
adc
mov
cmp
mov
in
fisub
xor
jns
cdq
inc
pop
push
inc
fld
push
xor
xchg
rcl
retf
add
inc
jle
jbe
mov
(bad)
(bad)
pusha
cmp
push
pop
sub
mov
sbb
adc
and
das
xchg
and
dec
mov
les
(bad)
jbe
mov
add
int
sbb
adc
mov
or
inc
and
add
or
pop
mov
aam
shl
imul
movs
into
jle
psubusb
sub
les
jae
aad
jb
(bad)
xor
push
jl
je
mov
icebp
push
add
sbb
stos
push
test
movs
push
sub
sbb
cmp
aaa
pop
push
push
jg
out
xlat
dec
repnz
sub
jecxz
inc
mov
aad
out
sbb
int3
ret
retf
cmps
mov
popa
and
sbb
push
mov
sahf
jmp
mov
out
ins
push
pop
xor
loopne
leave
dec
mov
cs
cmp
and
mov
fst
bswap
aas
jp
cmps
fild
call
pop
xchg
push
mov
add
aaa
pop
je
add
enter
cmp
mov
or
ss
mov
inc
inc
xchg
push
cmp
jns
movaps
fist
jno
and
add
mov
jmp
das
cmp
inc
sbb
sub
je
push
xor
data16
(bad)
js
pop
movs
ficom
and
fwait
aas
hlt
cmovnp
int3
mov
xchg
dec
cmp
stos
cdq
jmp
pop
imul
ret
(bad)
fisub
jo
push
pandn
add
push
mov
in
sub
and
push
or
aam
and
add
jmp
sbb
sahf
push
loope
mov
dec
push
stos
dec
test
or
data16
movs
aam
mov
push
(bad)
mov
pusha
(bad)
daa
ins
(bad)
sbb
cmp
sub
jmp
es
pop
inc
sbb
sbb
mov
xor
loopne
es
cdq
test
or
iret
clc
cmp
into
dec
scas
add
add
int
adc
add
mov
stc
(bad)
ja
xor
fs
mov
xor
idiv
out
pop
push
(bad)
aad
div
jp
lods
sbb
or
hlt
jmp
retf
sbb
xor
arpl
js
mov
repnz
int
mov
out
add
sbb
inc
and
mov
call
xor
(bad)
call
inc
xor
les
xchg
inc
xchg
gs
cwde
mov
mov
dec
jo
js
cmp
push
jns
mov
fnsave
jle
mov
add
in
xchg
sbb
and
push
pop
mov
ret
push
test
mov
dec
stos
push
retf
aam
and
hlt
test
in
(bad)
cld
or
and
ja
inc
push
outs
movs
push
ret
adc
mov
xchg
sub
fimul
mov
ficom
test
add
xor
push
mov
sub
jmp
shl
add
test
sbb
(bad)
xchg
addr16
das
movs
movs
sub
daa
inc
cmc
mov
push
pop
scas
push
push
mov
fadd
out
sbb
xchg
fnstsw
pop
fidivr
xor
or
push
xor
neg
popf
or
cwde
xor
and
iret
cs
jge
xchg
loope
mov
js
xor
mov
add
das
(bad)
push
xlat
pop
data16
sbb
jbe
add
jge
(bad)
aaa
pushf
test
mov
jle
leave
rcr
movs
je
(bad)
or
add
hlt
sub
mov
add
call
xchg
pop
leave
mov
ret
inc
pop
push
jg
shr
jge
popf
push
cs
cld
or
aas
lds
adc
int3
cmc
xchg
pop
inc
xchg
enter
jp
cmp
ret
(bad)
out
add
mov
push
push
xor
add
enter
(bad)
sub
pop
adc
add
jo
dec
arpl
outs
in
or
int3
outs
hlt
scas
cwde
scas
pop
mov
xor
cmp
add
xor
push
fs
sbb
add
jl
cmps
stos
mov
jecxz
push
(bad)
inc
jmp
mov
movs
xchg
pop
add
sar
mov
xor
and
cdq
jmp
mov
mov
jge
jl
mov
add
adc
pop
retf
ds
jecxz
or
fld
xor
cdq
sahf
lds
mov
cwde
imul
cmp
push
aaa
fxch
enter
mov
imul
adc
retf
mov
scas
push
adc
jl
xchg
xor
into
and
scas
jp
pushf
mov
push
add
xor
arpl
cmp
mul
(bad)
(bad)
outs
add
xchg
(bad)
rcr
jge
or
xchg
movs
and
loopne
shr
and
add
sbb
dec
or
cwde
lods
xchg
int3
sahf
push
push
and
push
repz
and
mov
sub
imul
sahf
inc
mov
imul
mov
xchg
js
jbe
and
push
add
push
jmp
dec
sub
mov
dec
cmc
mov
sbb
scas
lods
stc
xchg
jb
push
mov
pop
adc
push
outs
addr16
mov
push
call
jo
fidiv
test
pop
nop
in
retf
mov
xor
add
jmp
icebp
movs
jl
fwait
aaa
sbb
shl
mov
push
hlt
cmps
mov
(bad)
push
lods
mov
adc
dec
push
or
pop
jmp
jmp
cs
repz
cmp
out
adc
pusha
rcr
dec
mov
test
js
pop
stc
dec
and
sti
cdq
mov
out
daa
jmp
dec
add
adc
ds
push
push
push
mov
pop
mov
cmps
jo
daa
out
stos
jne
pop
cmc
daa
cmps
out
inc
stc
and
addr16
sbb
mov
ins
sub
push
sub
outs
int
imul
xchg
adc
pop
xlat
pop
clc
lea
call
xor
adc
xchg
test
xor
clc
mov
mov
mov
mov
xchg
xor
call
jo
in
lock
repnz
fs
(bad)
mov
or
cs
ret
je
mov
xor
push
addr16
cmc
mov
jno
mov
fimul
inc
sahf
mov
and
jmp
rep
mov
push
out
sbb
inc
push
dec
fdiv
or
lds
pop
les
pop
lahf
call
mov
xadd
mov
fldenv
in
mov
jb
cdq
xchg
adc
mov
loop
mov
xchg
xor
mov
repnz
ja
mov
add
cli
rol
test
mov
das
dec
xor
loop
dec
mov
ror
push
es
icebp
aaa
aad
cmp
jmp
mov
mov
ret
push
mov
and
pusha
ss
(bad)
icebp
aaa
(bad)
cmp
xor
or
sbb
dec
cmc
sub
jne
sub
jp
idiv
je
mov
(bad)
pusha
test
pop
mov
sub
ret
mov
jecxz
sbb
cmp
popa
daa
push
in
fist
clc
xchg
loopne
ins
push
loop
jns
cmp
inc
shl
in
push
ss
sbb
mov
jle
popa
dec
or
add
push
ret
loop
shr
xlat
pop
jmp
dec
les
jmp
pop
inc
mov
or
out
mov
retf
ins
or
cdq
jnp
gs
adc
inc
jmp
in
js
rcr
mov
(bad)
mov
jns
jmp
sub
test
mov
push
mov
aas
sbb
aas
into
jno
loop
gs
(bad)
(bad)
pop
cwde
and
add
sub
test
inc
inc
out
fwait
mov
div
cli
ss
xor
(bad)
ret
jbe
scas
xchg
movs
inc
pop
cmp
mov
dec
ds
jecxz
imul
mov
xchg
push
cmp
std
xchg
adc
cmps
dec
sub
call
jae
ret
xchg
mov
icebp
cmps
jmp
pop
fild
mov
fmul
ins
cmp
and
rol
inc
add
fnstcw
xor
dec
popa
jg
sahf
in
jb
jge
das
std
mov
adc
mov
retf
daa
and
(bad)
push
call
mov
out
(bad)
ds
ret
(bad)
mov
fptan
sbb
fs
retf
js
imul
cwde
push
xor
int3
cs
and
jmp
sub
ror
mov
pop
popf
dec
pop
mov
inc
(bad)
popf
xchg
add
cmps
and
stos
test
and
push
sbb
ja
fnstcw
pop
test
xor
jns
dec
gs
scas
nop
or
ins
bound
test
arpl
movs
push
adc
pop
fild
fwait
mov
imul
dec
inc
push
or
sbb
lea
call
cli
fcomip
repz
sbb
cwde
nop
popa
adc
movs
aaa
cmc
push
mov
xchg
neg
aam
xor
cmp
pushf
push
fstp
test
mov
hlt
push
repz
xor
sar
sbb
cmc
mov
in
jno
push
dec
or
fnstsw
mov
pushf
or
pop
xor
inc
push
push
xchg
add
jge
call
mov
es
adc
out
xlat
in
xchg
push
or
or
cmp
cmp
mov
xlat
stc
fidiv
inc
pusha
fld
inc
mov
sti
mov
mov
data16
es
fldenv
gs
(bad)
out
pop
mov
dec
call
sub
mov
cli
imul
or
mov
mov
lds
mov
push
jne
and
scas
bound
ss
xor
arpl
rcl
mov
add
push
push
ror
repnz
ins
push
jl
mov
jns
addr16
sub
adc
push
mov
mov
mov
enter
(bad)
ror
aaa
in
inc
popf
popa
fbld
ins
inc
or
adc
push
cld
cmp
ins
jge
movs
inc
pop
movs
popf
sbb
mov
aaa
ret
jne
push
pop
sub
loop
push
sbb
loopne
adc
sbb
cmovo
and
dec
(bad)
lahf
rcl
push
or
out
mov
pop
(bad)
pop
jge
or
cmp
xor
pop
fdivr
dec
addr16
pop
pop
imul
mov
mov
pop
dec
lods
mov
(bad)
jmp
stc
scas
popa
pop
jmp
mov
xlat
mov
imul
in
xchg
ins
repz
imul
cmp
mov
mov
rcr
add
jno
jmp
jl
mov
jmp
in
add
jl
jo
stos
mov
rcr
or
aad
xchg
test
sbb
inc
jp
rcl
inc
jo
xchg
ds
sahf
xlat
sbb
ds
ds
xor
jb
stc
fisub
fwait
add
cmp
or
adc
sbb
jae
sub
jae
dec
dec
cmc
in
xlat
pusha
xor
or
in
(bad)
mov
and
jge
rol
jle
popa
mov
(bad)
pop
jae
aaa
cmc
fst
lods
ret
dec
stos
cld
mov
pop
test
or
iret
movs
inc
add
sbb
jns
push
add
mov
popf
cs
jmp
enter
dec
mov
mov
rcl
adc
cmp
mov
add
sti
push
xchg
mov
retf
je
push
ret
ds
jbe
sub
xlat
scas
adc
mov
outs
mov
add
icebp
pusha
lds
mov
sub
sbb
add
(bad)
fwait
xor
ds
daa
out
xchg
fsub
loopne
jge
jge
fdivr
push
push
repz
hlt
aas
jnp
xchg
ss
cmc
fcomp
enter
fidiv
mov
jge
cwde
iret
aam
aas
cmp
and
test
jbe
cmps
jno
cmp
in
add
mov
mov
test
jle
xor
shl
jge
push
mov
stc
les
data16
(bad)
aaa
arpl
inc
std
add
mov
rcl
jecxz
fnstsw
jl
cmp
or
in
(bad)
xlat
cmc
mov
mov
and
iret
cld
and
jne
int
sar
fs
out
sub
repz
xor
cmp
ror
ja
jle
add
sub
cmc
mov
sub
icebp
xor
push
pop
xchg
test
(bad)
pop
jnp
jl
call
stos
cmp
int3
mov
fidiv
pop
rcl
pop
push
push
fucomp
cmp
sbb
repz
pop
out
dec
fdiv
cmp
jmp
sti
push
mov
push
or
mov
gs
jae
mov
out
pop
jmp
aad
mov
adc
dec
sbb
dec
dec
int3
rcr
aas
or
pop
inc
mov
outs
movs
jne
adc
xchg
adc
sbb
inc
mov
sbb
int
stos
(bad)
xchg
adc
(bad)
jecxz
mov
out
out
or
cmc
loopne
rol
fs
outs
mov
pop
xor
aam
mov
fimul
cmp
adc
cdq
dec
in
mov
xor
sbb
xchg
imul
repnz
jle
push
push
cs
push
in
adc
xor
enter
mov
mov
pusha
xchg
add
jb
inc
pusha
mov
fucomp
mov
icebp
adc
(bad)
retf
test
out
nop
pusha
arpl
inc
ret
dec
mov
mov
add
cmp
in
and
shr
dec
cmps
rcl
out
mov
das
xor
or
cmps
xor
push
adc
add
cmp
dec
cld
pop
dec
jns
cld
jle
bnd
repz
movs
push
and
fbstp
mov
ror
dec
mov
lods
push
mov
pop
repz
xchg
(bad)
cmp
sub
out
jno
in
or
les
ds
scas
cs
push
push
add
pop
dec
push
add
push
cmp
neg
and
fisub
mov
mov
call
and
cwde
adc
mov
cmp
ror
int3
and
cmps
iret
mov
push
fst
pop
mov
call
inc
cli
cmp
adc
xor
gs
stos
inc
outs
iret
xchg
adc
adc
inc
xchg
push
ja
xchg
imul
fs
ins
sbb
leave
neg
scas
add
push
inc
mov
sar
pop
repnz
call
daa
fidiv
xchg
retf
je
add
aaa
or
pop
xlat
mov
bound
push
xchg
in
loope
(bad)
push
mov
mov
push
push
mov
es
or
sbb
dec
pusha
and
mov
add
loope
sahf
stos
cli
add
pushf
adc
pop
test
cmp
cmps
sahf
popf
outs
adc
mov
out
sub
not
das
push
jg
popf
cmp
aas
rcr
outs
movs
push
ja
cmps
or
adc
mov
or
and
inc
add
lods
jecxz
or
repz
les
dec
xchg
jno
pop
xor
je
mov
mov
aad
movs
sbb
push
mov
adc
mov
cmp
mov
movs
xchg
mov
sbb
mov
jecxz
adc
call
or
addr16
or
ror
cmc
retf
xchg
icebp
retf
clc
inc
sub
inc
scas
in
jp
xor
mov
adc
mov
hlt
pusha
inc
mov
xchg
sbb
dec
pushf
loope
and
push
popf
aam
(bad)
pop
es
xchg
xchg
cli
push
push
cwde
push
rcr
mov
xor
icebp
mov
or
jnp
scas
xchg
test
shl
mov
fdivr
(bad)
sbb
mov
mov
adc
xchg
sub
cmp
push
mov
movs
sub
cwde
pop
pop
mov
aam
hlt
xchg
and
repz
push
and
ja
je
retf
jmp
aad
or
mov
push
fwait
mov
cmps
mov
fisub
mov
cmp
ret
shl
lods
inc
aad
cdq
cwde
cdq
inc
sti
icebp
sbb
clc
push
lods
ins
enter
inc
adc
xchg
cs
xor
inc
dec
bnd
imul
mov
xor
mov
sahf
out
fisub
xchg
push
mov
mov
push
pop
inc
pop
int
add
stos
pop
push
push
adc
mov
mul
xchg
ret
fisubr
xor
loopne
inc
bound
hlt
adc
(bad)
sub
fcom
retf
xchg
arpl
inc
mov
add
or
daa
mov
out
add
imul
arpl
xlat
inc
cmp
mov
lea
sbb
pop
in
daa
mov
sbb
leave
xchg
mov
and
cmp
cld
jp
test
push
loope
lods
out
inc
mov
clc
out
add
mov
push
xor
and
jno
outs
and
pop
mov
sbb
iret
jb
lods
xchg
fstp
movs
inc
or
xchg
ins
dec
lahf
mov
ret
int
jg
and
inc
addr16
dec
fist
cld
mov
pop
push
les
std
xor
leave
mov
dec
cmp
movs
push
scas
add
add
jmp
enter
or
mov
and
mov
jns
or
jl
mov
xor
sti
in
int
nop
sbb
push
cmp
nop
mov
jp
not
add
xchg
cmp
mov
add
cmp
hlt
stc
jmp
stc
mov
adc
pop
sub
test
mov
pop
jae
mov
mov
adc
nop
dec
test
clc
sbb
cmp
(bad)
out
pop
ror
sub
into
test
stc
dec
sub
dec
out
pop
out
cmp
(bad)
xchg
fisub
dec
push
pusha
popf
jmp
in
ins
mov
adc
pop
xchg
jo
xor
sti
xchg
loope
cmp
pop
sub
mov
xchg
mov
inc
mov
pop
push
cmp
add
mov
out
arpl
xor
sub
push
dec
inc
cmp
jae
pop
test
cmp
push
mov
jmp
inc
inc
scas
in
or
mov
jnp
stos
and
nop
xor
sti
nop
fadd
lahf
stos
and
sbb
div
jno
mov
mov
hlt
mov
pushf
mov
sub
test
scas
jle
and
mov
pop
cwde
and
push
add
neg
cmp
xchg
sub
or
cmp
pop
dec
(bad)
xchg
jp
ins
push
mov
test
mov
mov
dec
mov
(bad)
arpl
dec
scas
and
ins
pop
sbb
inc
add
sbb
cmp
jl
push
imul
imul
sbb
xchg
xor
pop
fstp
push
popf
in
jmp
icebp
repz
mov
aam
mov
mov
push
mov
mov
(bad)
ror
(bad)
and
pop
leave
xchg
pop
sahf
and
pop
sub
mov
adc
jmp
and
bound
ds
cmp
push
fst
pusha
xchg
push
ret
dec
mov
(bad)
loope
and
(bad)
mov
fidivr
aam
mul
mov
outs
dec
shr
push
pop
lock
or
adc
loopne
outs
cbw
stos
cmp
mov
nop
loope
mov
mov
repnz
inc
test
push
mov
mov
pop
mov
mov
jns
xchg
inc
lods
ins
push
outs
or
cmp
imul
cld
aam
in
mov
sbb
lods
add
sbb
or
dec
cmps
bound
lahf
dec
adc
cmp
outs
icebp
loopne
jnp
sub
push
push
scas
ja
fsubr
mov
test
mov
daa
adc
test
cmp
repnz
ja
(bad)
mov
retf
cmp
and
xor
and
mov
mov
cdq
je
jne
cmps
fwait
xchg
xchg
cli
add
jmp
or
pop
sbb
cmp
xchg
jl
aas
xor
sub
fisttp
mov
cmps
es
sbb
mov
(bad)
loope
scas
adc
jae
cmp
pop
and
std
lods
adc
gs
(bad)
fisub
outs
inc
adc
cdq
jns
inc
gs
adc
pop
cmp
mov
icebp
jnp
out
adc
mov
stos
stos
ins
icebp
push
mov
mov
loope
les
push
ja
je
jp
std
mov
fs
ja
adc
lods
fisubr
mov
scas
ficom
sub
fisubr
bound
mov
lahf
(bad)
or
jae
inc
shr
imul
and
out
dec
test
(bad)
test
inc
outs
mov
je
sbb
sbb
add
dec
xchg
xor
retf
test
shr
adc
call
jp
mov
dec
or
sub
out
test
xor
retf
mov
dec
icebp
inc
xchg
je
sub
stc
fmul
and
jecxz
and
pop
cmp
jmp
retf
mov
jmp
je
fs
xchg
or
loope
mov
outs
ins
imul
enter
sbb
cmp
iret
pop
jne
dec
xchg
shl
mov
ret
dec
sbb
mov
test
mov
(bad)
inc
mov
add
ins
push
stos
xor
sbb
scas
movs
sbb
shr
ret
mov
fsub
cld
mov
pop
pop
out
test
icebp
xlat
mov
jbe
xchg
repnz
xchg
scas
ror
pop
lock
jle
dec
sbb
push
lahf
mov
mov
inc
xor
push
mov
xor
sti
shl
cmp
outs
push
jo
mov
aam
mov
cmps
sub
mov
cmps
push
mov
cmp
rol
add
lods
sub
rol
pop
(bad)
cmps
sub
mov
push
bound
pusha
push
jp
sbb
out
xor
in
push
jmp
xor
fs
push
add
in
xchg
js
loop
ror
dec
outs
xchg
test
fimul
imul
inc
and
stos
pop
mul
mov
loope
fs
pusha
push
sub
sar
(bad)
sbb
sbb
fisttp
loopne
lods
pop
pop
push
xchg
lods
jne
je
jae
jno
imul
fdiv
pop
mov
pop
xchg
les
das
lods
in
and
sti
push
add
repz
stos
push
pop
push
retf
mov
cli
shr
sub
add
mov
mov
repz
popf
adc
xchg
jecxz
mov
loop
(bad)
xor
movs
ret
mov
retf
push
call
lods
inc
retf
or
pop
pusha
mov
mov
or
pop
(bad)
ds
nop
ret
leave
pop
sti
jns
js
jae
jmp
retf
pop
add
lods
mov
sbb
call
jns
ret
and
hlt
mov
imul
push
push
and
fldenv
jo
gs
xor
or
adc
adc
daa
cdq
ret
mov
adc
in
aad
and
sub
inc
fcmovbe
gs
aad
inc
retf
sub
or
dec
and
xor
in
stos
inc
dec
movs
in
shl
(bad)
pop
loope
or
push
(bad)
pushf
hlt
je
fs
(bad)
dec
add
cmp
adc
cwde
jbe
into
mov
mov
xlat
dec
add
sub
(bad)
and
or
and
data16
adc
inc
dec
jg
sub
or
sti
jg
rcr
mov
popa
sub
gs
sub
adc
adc
dec
stos
push
test
xlat
lock
int3
xchg
add
lods
lods
mov
pop
push
inc
push
mov
push
mov
pop
or
retf
out
pop
inc
ret
mov
daa
pushf
cmp
in
or
xlat
enter
ds
push
lock
inc
xchg
outs
pop
add
and
stos
push
and
repnz
inc
data16
dec
xor
jle
pop
and
push
xchg
cmp
cmp
js
stos
pop
dec
loope
fiadd
stc
and
(bad)
sub
push
daa
mov
fdiv
inc
dec
or
js
fcom
lds
jbe
aaa
xchg
or
cmc
push
daa
mov
aas
aas
movs
pushf
mov
pop
push
pop
or
xchg
pusha
fsubr
(bad)
shr
dec
adc
lods
jmp
mov
(bad)
stos
xor
inc
xchg
cmp
rol
dec
out
test
and
lods
in
mov
and
or
cmp
mov
mov
push
mov
push
pop
inc
pop
pop
stos
mov
xchg
xchg
mov
not
int
aad
pop
jb
fisub
imul
cmp
hlt
js
push
or
xchg
ret
aad
push
fild
(bad)
not
pop
dec
fiadd
(bad)
(bad)
imul
and
xchg
and
(bad)
imul
pop
jl
xchg
iret
aas
xchg
loope
and
sub
lods
cmp
cwde
cwde
or
in
push
mov
jle
adc
xchg
adc
sar
pop
js
sti
push
and
lds
push
cmps
test
and
sub
dec
cmps
int3
push
stc
shl
inc
stos
cmp
sbb
mov
mov
aaa
mov
ds
or
cli
jle
inc
mov
xchg
inc
xchg
inc
jmp
lods
ja
add
sub
mov
ja
scas
add
jecxz
sub
popf
pop
mov
popa
nop
xchg
in
div
js
stc
ins
xor
jno
fnsave
mov
stos
rcl
sbb
sahf
inc
sahf
and
cmp
jno
ins
outs
add
add
aad
ins
(bad)
in
movs
jne
jle
pusha
and
movs
mov
in
(bad)
push
fwait
push
rcl
mov
xchg
pop
mov
cmps
loope
(bad)
(bad)
pushf
sub
xchg
and
loope
cmc
neg
loopne
(bad)
cwde
fidiv
aad
lods
aas
sbb
cmps
push
popa
or
pop
xlat
out
imul
or
arpl
cmp
cmp
cmc
push
loope
pop
dec
inc
pop
arpl
cmp
jge
adc
(bad)
pop
out
mov
fdivr
(bad)
xlat
mov
xor
cli
fwait
aad
pop
mov
pop
cdq
pop
fwait
je
cmp
sub
dec
cs
push
pop
into
not
gs
(bad)
xchg
jae
add
cmps
jb
sbb
das
aad
rcr
inc
mov
inc
cli
jecxz
cdq
cmp
cwde
in
jle
jb
(bad)
pop
adc
cmp
outs
cmps
sti
add
and
call
or
mov
pop
inc
xlat
sbb
cdq
stos
jmp
sbb
xchg
test
sub
imul
shl
call
cmp
xchg
out
data16
leave
in
add
mov
xchg
mov
push
xchg
retf
mov
sub
xchg
or
in
nop
cli
mov
movs
ret
stos
inc
stos
mov
mov
test
or
dec
fwait
mov
mov
mov
cdq
sti
test
ds
js
inc
ins
pushw
sbb
pop
adc
dec
or
lock
shl
cmps
mov
pushf
ret
test
mov
aam
and
and
cmp
xor
(bad)
int3
pop
sbb
xor
es
xor
dec
mov
call
push
xchg
fcmovnb
xor
mov
fwait
repz
fld
nop
inc
mov
pop
inc
mov
add
mov
and
cmc
push
xor
imul
push
sub
test
add
mov
call
call
rcl
cs
add
(bad)
xchg
rcr
push
add
jmp
pusha
jecxz
daa
sbb
iret
fbld
jg
stos
add
mov
popa
cdq
dec
(bad)
and
repnz
aaa
pushf
test
mov
jne
xor
aad
stos
in
aas
popf
loope
dec
dec
or
inc
push
jecxz
out
pop
test
jl
out
mov
cmp
pop
movs
mov
add
stos
dec
fs
in
or
(bad)
enter
jp
sbb
sbb
movs
es
sbb
test
sub
and
neg
pop
aad
aam
and
dec
stc
je
movs
pop
xchg
cmp
xchg
fnsave
pop
movs
addr16
rcl
xchg
xchg
push
mov
sbb
mov
sub
sti
sub
sbb
push
mov
retf
push
mov
adc
jnp
loopne
mov
sub
enter
pop
sbb
stos
pop
pop
cwde
cmp
data16
cmps
cmp
adc
movs
(bad)
cli
xchg
lds
adc
mov
adc
aas
rcl
mov
pop
xchg
(bad)
jle
(bad)
cmp
sbb
cdq
pop
stos
mov
cmp
pushf
cdq
rol
in
(bad)
out
dec
dec
popf
icebp
jae
(bad)
or
push
stos
jmp
sbb
imul
movs
cs
fwait
push
rcl
push
mov
add
mov
push
mov
jmp
push
fs
aam
out
sahf
mov
mov
cmps
pusha
test
mov
ret
sub
(bad)
push
ins
mov
je
inc
imul
pop
mov
mov
push
dec
jno
add
add
mov
sbb
sub
cs
sub
adc
ret
aam
sub
xchg
add
mov
imul
push
xlat
int
push
jle
jmp
adc
mov
jecxz
push
cmp
pop
fwait
push
movs
pop
ret
pop
(bad)
mov
cwde
ins
fnstenv
jbe
xor
fadd
mov
cs
dec
out
mov
xchg
xchg
stc
sub
jecxz
ss
out
aas
les
push
jl
and
aad
xor
aam
or
adc
cwde
mov
out
lock
xor
xor
mov
call
push
pusha
je
and
test
fcomp
mov
int3
add
and
dec
push
mov
fmul
aas
jp
pop
addr16
ss
rol
mov
mov
ss
aam
or
int
test
(bad)
into
inc
cdq
jle
jg
mov
sub
fdivr
adc
aaa
pop
dec
lods
add
ss
pop
ret
push
add
iret
fld
and
popf
cli
mov
aam
sbb
or
and
mov
cdq
dec
mov
pop
xor
jmp
pushf
pop
movs
lahf
sti
mov
or
aaa
push
mov
xor
das
mov
popa
arpl
adc
iret
mov
xchg
add
sub
adc
out
outs
push
sbb
rcl
jno
ss
movzx
mov
sub
nop
mov
out
cmps
mov
les
and
out
xchg
movs
xchg
cs
enter
push
cmps
inc
hlt
dec
fild
mov
iret
neg
xor
loopne
arpl
addr16
jae
mov
lods
sub
pop
xchg
(bad)
cmp
cmp
mov
jl
std
imul
fsub
lods
cmp
push
inc
or
cmp
inc
mov
jl
dec
sub
dec
cmp
jne
xlat
cmp
(bad)
push
ficom
mov
fdivr
and
pop
jo
push
test
jge
mov
cld
sbb
jb
push
add
fstp
jbe
sbb
lock
ret
test
mov
mov
stos
call
scas
xchg
cli
jg
sub
pop
and
or
pop
(bad)
out
jns
jle
fstp
and
adc
sbb
movs
repnz
das
std
dec
(bad)
test
mov
jno
clc
jl
dec
and
push
push
aad
ins
xor
dec
adc
or
mov
int
cwde
in
in
jmp
jns
fstp
cmp
add
(bad)
(bad)
sbb
out
jp
mov
leave
and
lods
aad
push
mov
cdq
test
jae
into
bound
aaa
lods
adc
push
aam
adc
(bad)
fldcw
mov
add
adc
push
cwde
pop
cmp
xchg
in
inc
or
push
jmp
mov
je
repz
scas
inc
xor
jnp
fisttp
push
jb
inc
add
sahf
inc
loope
jp
stc
mov
lods
xor
mov
xor
add
dec
faddp
sbb
jecxz
shl
jno
fisubr
je
imul
(bad)
push
pushf
jl
jmp
fldpi
pop
mov
stc
sub
sbb
xor
retf
mov
lods
ror
pop
mov
test
out
pop
cwde
cmps
call
retf
sub
sar
leave
je
cmps
mov
fnstcw
ja
add
xchg
nop
es
pop
inc
and
xchg
xor
add
in
repnz
jmp
sahf
pop
xor
imul
mov
push
and
rcl
xor
dec
mov
jg
and
bound
add
push
pop
lock
sbb
nop
cmps
fwait
out
xchg
sub
stos
push
mov
and
cmps
enter
dec
rcr
cmp
leave
lock
hlt
repnz
mov
rcl
nop
jge
push
jno
cs
cmp
mov
cmps
push
mov
pop
rcr
sub
push
pop
push
lock
movs
lds
xor
inc
mov
cmovb
mov
loope
popf
lds
jecxz
cli
jl
stc
pop
pop
test
mov
sub
ins
jb
dec
pop
xor
add
je
call
ds
nop
pop
sbb
call
push
fadd
test
scas
add
sbb
addr16
xor
popa
cmp
lfs
add
sbb
sub
mov
jge
add
je
pop
(bad)
mov
aas
test
adc
sbb
popa
pop
pusha
mov
repz
ret
pop
dec
push
jb
jge
movups
(bad)
repz
inc
cli
cmps
lock
shl
pop
movs
retf
adc
xchg
cmp
sbb
jnp
xor
stos
mov
out
and
int
mov
cmp
jp
(bad)
pop
aam
jg
sub
leave
cdq
ret
or
sub
clc
loope
or
out
scas
ret
adc
dec
mov
dec
sbb
sahf
cmp
inc
xchg
add
xor
shl
inc
addr16
rcl
pop
jo
pusha
lea
and
pop
clc
adc
or
fiadd
push
xchg
mov
mov
xchg
mov
mov
pop
cmp
js
dec
sub
push
ja
inc
pushf
daa
retf
add
ror
hlt
aas
jl
mul
or
pusha
and
lods
daa
fprem1
fwait
sbb
or
rcl
pop
mov
xor
xchg
pop
retf
sbb
push
lea
test
test
add
imul
sahf
mov
jo
loope
add
icebp
sti
cs
fadd
loopne
adc
arpl
adc
cwde
int
(bad)
xor
loop
sti
es
test
pusha
mov
sbb
(bad)
mov
or
and
test
fldcw
outs
inc
push
pushf
aaa
out
sub
xlat
xchg
dec
sbb
in
cwde
and
cmps
cmps
xlat
dec
jae
xor
mov
fcom
fs
jb
std
in
sbb
pop
sub
adc
movs
popa
mov
cmp
movs
test
or
or
int
inc
add
xor
xlat
bound
dec
ds
mov
xchg
dec
jbe
jae
mov
sbb
sub
lods
push
jb
sbb
mov
ss
and
push
xor
ins
fistp
add
sub
gs
inc
jnp
mov
pop
loope
cld
icebp
jle
adc
rcr
leave
pop
mov
or
shl
imul
loop
ss
mov
movs
adc
gs
mov
push
call
mov
jae
ret
or
jmp
popf
out
out
sbb
cmps
shr
dec
shl
or
jae
int
mov
ret
mov
xchg
cmp
adc
in
shl
lods
push
dec
aad
enter
dec
gs
repnz
pop
mov
xor
outs
in
mov
pop
or
mov
jo
shl
cdq
fstp
xlat
xchg
popa
mov
out
or
repnz
mov
sbb
push
out
hlt
mov
xor
xor
out
add
lock
movs
mov
add
inc
int3
outs
mov
cli
push
aas
icebp
add
inc
dec
int
dec
mov
xor
pop
sbb
out
mov
cdq
sub
pop
call
and
aas
test
out
adc
sub
or
stos
add
push
mul
in
mov
pop
pop
shl
out
aaa
imul
test
add
sub
jle
rcr
pusha
xchg
xor
sub
out
out
sbb
mov
adc
sbb
cwde
movs
push
xor
xor
sbb
xchg
outs
lods
add
add
add
enter
cmps
add
sub
jb
dec
jp
sub
mov
sahf
inc
dec
mov
js
xchg
(bad)
mov
(bad)
xchg
nop
mov
pop
cmp
lods
xchg
inc
mov
pushf
(bad)
inc
pop
out
xchg
jg
add
fldcw
pop
scas
(bad)
xchg
mov
loopne
jmp
out
push
sub
cld
out
and
lods
mov
xchg
fwait
dec
adc
jmp
ret
mov
mov
mov
fucom
and
scas
jo
aas
sub
cmp
jmp
cmp
pop
test
mov
loopne
xchg
stos
pop
(bad)
dec
enter
movs
cmp
popa
movs
idiv
sbb
retf
in
jg
(bad)
(bad)
sahf
lds
mov
loop
dec
scas
add
adc
dec
mov
cmp
jmp
mov
in
push
ins
dec
lock
out
pop
rcr
jp
adc
mov
dec
fsub
dec
and
nop
(bad)
cmps
inc
je
cld
ficomp
jbe
jecxz
in
mov
dec
jmp
and
jg
push
jg
ins
in
jns
inc
cmp
arpl
and
dec
movzx
inc
and
sbb
fwait
mov
enter
mov
push
in
jmp
inc
ds
push
pop
sbb
pop
adc
sbb
mov
push
paddusb
add
sub
pop
les
mov
imul
call
jo
sub
(bad)
je
push
cmp
push
mov
inc
pop
fiadd
retf
push
movs
or
mov
pop
lods
and
sub
cmc
jle
dec
add
mov
jg
push
xor
cmp
hlt
or
dec
mov
rcr
xchg
sub
jo
(bad)
(bad)
fcmovnbe
add
adc
shr
cmps
jg
pop
push
jae
cmc
daa
ret
ja
jns
icebp
hlt
mov
jno
xchg
mov
ins
int
stc
lock
sbb
dec
lahf
inc
push
int3
ror
adc
lods
adc
fcom
xor
daa
out
or
outs
stc
mov
dec
sub
cmp
and
jnp
jecxz
scas
out
daa
fimul
adc
mov
pop
mov
jg
xor
clc
cmp
lods
push
nop
sbb
bound
das
cmc
test
test
push
sti
pop
adc
leave
bound
adc
lea
or
and
jecxz
imul
sub
ds
pop
or
fcomip
mov
and
sub
ins
pusha
jb
rcr
int3
mov
or
add
inc
aas
bound
rcr
sbb
repnz
nop
out
movs
mov
adc
mov
lea
sub
push
dec
mov
xchg
jmp
stos
ja
mov
add
ficom
xchg
and
nop
bound
mov
and
daa
les
into
lahf
dec
dec
clc
leave
jge
xchg
xchg
in
or
fisttp
or
push
out
and
pop
or
jg
jae
and
shl
jmp
mov
push
sub
(bad)
mov
mov
mov
int
mov
sub
dec
pop
scas
lds
into
jg
das
out
jmp
imul
mov
lock
jmp
cdq
mov
test
push
mul
int3
hlt
(bad)
pusha
(bad)
push
in
inc
push
xchg
mov
call
push
inc
mov
push
fldenv
xchg
add
pop
and
stos
sbb
xor
sbb
psrlw
neg
call
sti
icebp
out
push
stc
int3
ins
cdq
dec
pusha
mov
jecxz
jne
push
mov
sub
jae
jl
xchg
mov
div
or
push
fcmovu
dec
fistp
or
popf
push
mov
jbe
add
popa
fstp
popf
jmp
lods
iret
js
inc
sbb
ror
addr16
frstor
xchg
sbb
inc
xchg
pushf
xlat
daa
mov
push
pop
in
add
dec
fiadd
jne
jnp
or
js
pop
das
sub
add
aam
pop
pop
jge
cmps
or
mov
sbb
and
xchg
(bad)
cdq
mov
push
mov
xor
cmp
sbb
dec
fisubr
dec
pusha
scas
in
mov
add
or
cli
mov
sub
add
push
out
ins
xor
dec
dec
sub
call
add
in
aam
arpl
mov
push
loopne
fsub
js
arpl
sub
jae
mov
adc
into
sub
dec
jmp
sahf
sahf
xor
aad
imul
cld
aas
lods
int
imul
mov
adc
sahf
or
movs
jne
and
sbb
sbb
rcl
fcom
mov
or
call
ja
mov
push
add
or
retf
(bad)
sbb
rol
jmp
lods
cmp
lods
mov
repnz
inc
mov
adc
(bad)
mov
rcl
data16
xchg
mov
inc
imul
jecxz
cdq
or
outs
dec
adc
stos
and
ins
ss
cmps
jns
out
icebp
mov
dec
mov
pop
add
push
mov
repnz
lods
(bad)
dec
sub
dec
es
adc
xchg
scas
lea
or
ds
mov
outs
cwde
repnz
in
in
add
pop
out
in
cwde
in
mov
mov
(bad)
sub
push
in
and
(bad)
inc
cld
mov
mov
pop
jmp
aad
mov
mov
dec
mov
jbe
dec
aaa
sub
mov
stos
bound
outs
inc
stos
sub
pop
mov
ins
sti
xchg
jmp
cdq
mov
mov
mov
sahf
shr
outs
mov
xlat
repnz
call
rol
sahf
cmps
pop
xchg
push
jecxz
or
cmc
movs
popf
in
outs
or
fs
push
fwait
mov
pushf
aad
outs
and
test
cdq
jno
loopne
jp
mov
aam
mov
mov
cmp
mov
das
pop
data16
jnp
ror
push
call
lods
or
retf
sbb
bound
sub
jge
pop
inc
pop
lods
cs
out
ja
icebp
not
icebp
mov
hlt
ja
inc
xor
arpl
push
sbb
sar
jecxz
mov
push
(bad)
cmps
fnstcw
aad
ror
xor
xchg
outs
and
div
aas
or
lea
outs
outs
cmc
dec
shr
in
popa
mov
inc
pop
cmp
cmp
xchg
pop
jmp
outs
xchg
xor
cmps
cmp
lar
in
cmp
(bad)
bound
sbb
sub
pop
rcr
fnstenv
loop
add
nop
mov
lods
gs
inc
fsubr
cmp
retf
mov
sub
xchg
inc
fild
ss
inc
mov
ds
xchg
outs
pop
shl
mov
adc
and
mov
es
lods
outs
jle
scas
and
push
dec
push
sahf
xchg
sbb
jo
out
pop
sub
mov
dec
ja
adc
inc
(bad)
int
mov
mov
jb
call
(bad)
int
in
and
shl
js
and
test
push
add
fwait
sbb
std
add
sbb
(bad)
in
push
sub
jge
xchg
add
ins
imul
ins
ror
aad
hlt
lahf
sahf
dec
dec
leave
mov
sbb
and
cmp
sub
mov
enter
hlt
les
leave
mov
or
sub
inc
loopne
retf
xchg
dec
cmp
dec
fstp
jnp
push
mov
or
mov
test
std
call
cs
mov
adc
adc
rcr
popf
mov
sub
ror
mov
shr
pop
mov
and
pop
pop
repnz
jmp
jecxz
push
adc
aas
push
aaa
xor
xor
push
imul
xor
inc
(bad)
mov
inc
adc
imul
push
int
xor
jns
data16
fdivr
imul
cmp
scas
adc
or
dec
std
push
adc
or
push
xchg
and
in
sbb
(bad)
movs
stc
mov
mov
je
inc
es
sbb
int3
push
jp
outs
pushf
jle
imul
mov
mov
sbb
jle
popf
push
in
rol
outs
jns
inc
lods
int
and
lock
add
adc
retf
pop
xchg
retf
popa
push
mov
sub
mov
xor
and
bound
jp
call
mov
and
imul
pop
cld
push
leave
and
mov
xor
ins
inc
rcl
pop
in
pop
add
test
xchg
jle
fsubr
mov
cmps
outs
dec
inc
push
ror
cmps
aaa
mov
or
dec
add
mov
cmp
inc
nop
ins
data16
cs
sub
push
mov
shr
retf
rcl
ds
mov
sub
cld
jmp
dec
xor
icebp
and
iret
icebp
inc
(bad)
mov
sub
leave
jne
jp
jle
xchg
pop
jb
jmp
mov
or
shr
stos
sub
xchg
adc
pop
xor
and
xor
shl
push
cmp
jecxz
inc
jle
mov
(bad)
pop
push
imul
cmp
movups
inc
or
fs
outs
sub
cdq
mov
sahf
or
mov
or
inc
cmc
sbb
xchg
div
and
push
loopne
lahf
cmps
cld
inc
scas
fxch
or
fs
mov
cmp
in
inc
cli
or
rcl
(bad)
fcomip
sub
popa
cmc
(bad)
fld
into
loopne
pushf
push
xor
dec
mov
fadd
pop
push
aam
sub
rcl
ja
adc
arpl
out
dec
sar
nop
(bad)
vzeroupper
xchg
repz
lahf
inc
jb
and
jp
xchg
loope
popa
jecxz
fcomp
adc
cld
mov
out
jge
cwde
or
jo
or
add
pusha
xchg
in
pop
mov
jmp
fucom
loop
xor
fdivr
cld
add
inc
push
push
retf
int3
fiadd
sbb
fldenv
test
push
or
adc
mov
adc
cwde
add
fwait
cmp
jmp
aaa
xchg
ins
cmc
and
enter
mov
ds
ds
add
dec
mov
ss
(bad)
jne
sub
scas
adc
mov
bound
push
xchg
fisttp
and
push
sbb
mov
mov
lods
sub
ss
loope
jnp
sar
mov
push
and
mov
ret
adc
pop
xchg
and
push
bswap
mov
push
push
jl
out
pop
outs
(bad)
retf
popa
xor
push
test
add
or
(bad)
pusha
fdivr
test
xor
jecxz
mov
movs
imul
adc
and
and
fisttp
pop
xchg
out
mov
or
mov
clc
pop
sub
pop
lahf
(bad)
sahf
xchg
pop
out
dec
hlt
jno
cdq
push
jecxz
inc
sbb
push
lahf
sti
jno
sar
mov
mov
ins
cld
ins
and
push
outs
mov
jmp
sbb
imul
retf
pop
inc
mov
and
jne
iret
and
imul
dec
arpl
add
stc
sub
out
xor
mov
fild
or
jno
leave
test
jo
jne
fiadd
push
adc
repnz
sub
cmc
movs
and
mov
mov
mov
pushf
mov
inc
arpl
mul
sbb
sahf
jp
adc
pushw
mov
jmp
inc
fmul
add
daa
cmps
add
or
pop
pop
retf
out
sub
jo
neg
and
inc
hlt
imul
aad
pop
fistp
add
(bad)
xchg
out
rcr
loopne
pop
out
aad
pop
dec
aaa
cmp
cli
loopne
inc
movs
push
in
fistp
sub
hlt
adc
in
xor
fcomp
mov
add
and
adc
ja
ds
mov
jp
pop
push
xlat
dec
out
cwde
hlt
cmp
xor
xor
sbb
mov
and
stos
xchg
aaa
push
(bad)
repnz
cmp
daa
jecxz
sub
push
mov
and
jo
xor
and
ret
fdivr
inc
or
(bad)
test
push
aam
cmp
mov
dec
sub
in
fsubr
aam
adc
cmp
and
jl
dec
adc
out
sub
lds
mov
jns
sub
jne
xlat
lahf
pop
xchg
fmul
xchg
call
jecxz
push
add
xor
push
jo
icebp
dec
pop
cmovnp
pushf
cmp
sub
fsub
jne
mov
or
lods
mov
pop
jmp
pop
std
add
shl
push
add
repz
dec
mov
jge
mov
sti
adc
xor
enter
jnp
mov
lock
sbb
test
dec
repnz
je
adc
cmp
aaa
push
inc
cmps
xor
dec
mov
enter
call
mov
(bad)
push
in
pop
mov
inc
xchg
shl
sbb
test
mov
pop
mov
and
clc
adc
inc
pop
aam
push
pop
dec
mov
stc
or
loopne
push
popf
pop
jo
mov
gs
(bad)
js
inc
sbb
retf
cmp
cmp
lds
mov
push
dec
arpl
iret
dec
mov
cmc
and
dec
push
and
and
mov
sti
cli
dec
inc
and
shl
mov
call
sbb
dec
and
sbb
dec
cmp
sbb
mov
mov
mov
nop
pop
mov
pop
or
fwait
mov
sub
pop
dec
(bad)
(bad)
cli
rcl
ror
(bad)
mov
add
mov
fistp
ja
pop
inc
jbe
mov
push
pop
pop
mov
imul
xchg
div
pop
movs
inc
scas
inc
cmc
movs
test
mov
pop
test
mov
cmps
hlt
mov
test
adc
pop
(bad)
mov
icebp
mov
out
lods
(bad)
mov
jl
xor
mov
sbb
daa
aad
cdq
xor
(bad)
mov
inc
in
inc
stc
test
xor
xchg
loop
mov
cs
in
xor
mov
(bad)
sub
add
in
loopne
fsubr
cmp
mov
arpl
sar
jmp
mov
add
addr16
repz
cmp
cmp
dec
pop
lods
push
sbb
sub
js
jmp
jns
hlt
xchg
adc
icebp
lods
mov
inc
je
push
or
int
push
arpl
(bad)
xor
inc
ret
call
arpl
repnz
pop
dec
or
xchg
shl
mov
lods
ins
add
ret
cmc
es
loop
or
inc
cmp
(bad)
mov
push
fcom
int3
xchg
push
js
push
mov
into
lods
jae
clc
add
mov
inc
repnz
jg
or
and
sbb
popf
leave
mov
popf
jne
stos
mov
cwde
dec
dec
repz
imul
loop
push
in
mov
pushf
fcom
ins
push
add
mov
mov
jle
xchg
ficomp
loopne
sahf
mov
xor
arpl
and
pop
push
cmp
shr
retf
out
cmp
xchg
jecxz
adc
(bad)
inc
movs
mov
in
pop
outs
inc
add
mov
mov
movs
mov
adc
cmc
push
pop
mov
mov
cpuid
xor
scas
jo
inc
inc
jl
ins
mov
loope
add
jo
je
mov
sub
imul
lock
cmps
jp
and
ds
ror
jb
fs
xor
jle
gs
push
jge
sahf
loope
daa
movs
cld
fldenv
addr16
inc
retf
xor
mov
mov
or
iret
out
mov
add
aas
out
fist
aam
enter
xor
rol
pushf
xor
adc
mov
mov
jl
xchg
outs
push
jb
cwde
fbstp
outs
push
addr16
call
movs
inc
lahf
pop
repz
xor
jmp
cmps
scas
lock
pop
sub
stos
in
in
nop
ret
inc
pop
sbb
adc
iret
xor
cmp
int3
sbb
xchg
sub
addr16
cmp
cmp
pop
xchg
add
add
mov
mov
inc
jecxz
push
stc
xchg
jo
xor
adc
mov
addr16
push
pop
mov
jns
or
pop
push
lahf
ds
ja
xchg
lods
xor
test
inc
cli
mov
or
sub
and
les
rcl
xchg
inc
adc
mov
test
(bad)
scas
xor
mov
and
mov
rcl
pop
int3
outs
je
mov
xlat
mov
lods
or
jmp
dec
popa
or
and
pop
ja
and
pusha
mov
scas
cwde
inc
addr16
push
cs
xchg
popa
hlt
fild
jge
ret
xor
loopne
push
rol
jmp
inc
cmp
(bad)
repnz
pop
xchg
je
push
aas
cli
test
inc
dec
cmp
shl
xor
aad
shl
inc
mov
lea
and
xchg
es
cmp
mov
dec
stc
xor
inc
fldenv
adc
arpl
mov
loope
jle
(bad)
arpl
inc
or
xchg
js
ret
sub
jecxz
imul
mov
aad
push
mov
or
or
into
adc
sahf
jo
cld
vfrczpd
inc
jo
sub
movs
fcom
out
call
lahf
push
dec
jp
sub
pslld
and
or
push
ds
enter
sbb
xlat
sbb
repz
mov
outs
jg
mov
jmp
jo
xlat
arpl
push
or
fiadd
push
cs
sbb
ins
lods
rcl
repz
out
push
pushf
(bad)
sbb
push
(bad)
fcmovnb
or
add
adc
mov
pop
add
jmp
sub
test
iret
xor
dec
mov
lock
shl
sub
(bad)
ss
mov
push
cmp
sub
jl
(bad)
xchg
pop
lahf
sbb
shl
jle
push
xor
xchg
imul
movs
test
aam
in
inc
mov
ins
lods
xor
mov
aas
movs
or
retf
mov
fwait
test
movs
xor
sub
jno
pop
dec
jl
fdivp
mov
(bad)
mov
outs
repz
jmp
cmc
xchg
add
addr16
into
popa
push
push
in
repnz
jge
pop
leave
fdiv
inc
xchg
jmp
dec
bound
test
push
push
outs
pushf
sbb
dec
aas
sbb
sub
movs
(bad)
jge
or
and
stos
(bad)
add
xchg
dec
test
int3
(bad)
sub
movs
dec
sub
adc
in
cmp
mov
mov
bound
hlt
not
xor
fwait
pop
mov
retf
cli
out
mov
pop
(bad)
in
push
mov
push
pop
jl
div
cwde
xor
ror
jp
popf
mov
ror
pop
or
inc
ror
imul
jp
cmp
sbb
cs
in
cmp
addr16
aaa
and
loopne
imul
and
movs
inc
push
jae
dec
in
cmps
enter
or
mov
movs
push
add
popa
call
push
add
push
inc
ficomp
jle
jmp
out
into
cmps
jge
ja
mov
jno
push
jo
pushf
dec
test
movs
mov
out
(bad)
std
fld
cmp
or
rcl
xor
iret
sti
sbb
cli
scas
push
xor
fist
test
push
mov
cwde
mov
aas
push
add
add
(bad)
daa
inc
sti
das
xchg
mov
mov
sub
ficomp
(bad)
mov
shl
mov
push
or
push
mov
loop
mov
jb
mov
add
in
sub
mov
inc
stos
push
sbb
rcl
mov
and
popf
inc
popa
dec
pop
sub
pop
jle
(bad)
mov
xchg
nop
xchg
mov
xchg
jge
inc
test
jae
nop
push
daa
mov
cld
ror
jmp
test
(bad)
cmp
sbb
in
shr
imul
or
out
hlt
arpl
sar
mov
in
ret
movs
rol
stos
pop
sub
loopne
pop
add
xor
ficom
mov
out
mov
out
xchg
push
aad
mov
or
pop
test
pop
int3
inc
popa
adc
ror
aas
and
mov
push
xor
enter
xor
xchg
retf
cmp
(bad)
enter
lock
pop
cmps
cmp
mov
inc
shr
je
clc
jmp
lods
je
inc
jg
jg
push
popf
mov
fstp
out
push
mov
jmp
or
xor
push
dec
js
or
(bad)
cmp
or
popf
xor
lods
and
sub
aad
ja
and
pop
fild
xchg
cmp
pop
inc
push
lds
lea
mov
repnz
psubsb
popf
cmp
or
repz
clc
ret
fbld
aam
rcl
sub
(bad)
cmps
bound
jle
cld
jmp
push
ret
ret
retf
aaa
in
xor
adc
adc
lock
icebp
cdq
adc
xchg
jge
adc
dec
adc
repnz
test
pop
and
scas
cmps
leave
push
xor
or
dec
not
xchg
bound
or
icebp
je
mov
lahf
add
retf
pop
xchg
leave
mov
ins
mov
rcr
push
dec
jp
add
pop
scas
pop
and
inc
nop
sahf
jmp
adc
inc
dec
fadd
or
cli
mov
icebp
sti
mov
jl
repnz
sar
pop
hlt
sub
rcr
and
inc
test
or
rcl
stos
push
xor
imul
fist
pusha
jno
leave
test
aad
push
pop
test
repnz
jecxz
jl
jb
push
mov
ror
mov
xchg
sbb
jo
push
pop
int
test
and
jecxz
jg
call
push
push
not
lds
(bad)
in
mov
push
clc
icebp
adc
and
mov
mov
std
les
xor
lods
mov
call
mov
cmp
test
mov
or
lods
xchg
push
adc
ins
mov
aam
ret
test
jmp
add
dec
add
jmp
sub
lahf
out
gs
cvtps2pi
xchg
je
push
sub
pop
popa
cvtpi2ps
inc
fs
gs
hlt
call
ficomp
mov
mov
mov
jno
(bad)
cmps
mov
push
cli
dec
repnz
inc
leave
fs
jl
gs
push
cmp
loop
mov
cmp
and
sbb
aad
push
xchg
sbb
and
adc
lahf
add
repnz
adc
outs
in
es
cmp
retf
in
(bad)
ds
cmp
movs
shl
adc
sbb
stc
inc
push
cmc
cmp
cmp
popa
mov
test
jmp
sub
inc
enter
fiadd
cwde
int3
das
push
in
cmp
mov
sub
scas
xor
mov
sbb
and
lods
(bad)
test
pop
call
jl
inc
fmul
sub
imul
lods
cmps
or
fisttp
sbb
jp
int
mov
retf
add
and
dec
ret
and
shr
mov
into
xor
fcomp
or
test
mov
or
mov
and
mov
mov
(bad)
mov
or
inc
cmp
mov
andps
fwait
and
je
mov
mov
push
out
div
and
aas
outs
adc
test
in
retf
xchg
div
jle
mov
jns
add
pop
dec
(bad)
pushf
mov
fstp
(bad)
out
pop
sub
retf
jo
inc
pusha
ins
mov
sbb
mov
push
push
scas
push
jecxz
vcvttss2si
sub
ins
mov
aad
fcom
xor
jmp
sbb
xchg
mov
push
pop
aad
sbb
in
xchg
xchg
push
jecxz
pop
mov
ins
stc
cmps
(bad)
jmp
or
dec
inc
aas
sti
add
scas
lods
mov
aad
mov
into
or
popa
push
hlt
pushf
push
cmp
fistp
mov
and
jmp
js
fsubr
test
dec
or
or
cmp
xchg
mov
es
mov
dec
call
cmps
imul
rcl
cmp
jo
test
mov
and
mov
jo
test
(bad)
stos
mov
fld
data16
and
cmp
jle
push
cdq
imul
jo
cdq
call
nop
test
dec
stos
mov
sbb
ja
jle
scas
call
mov
das
iret
inc
mov
fcom
fdivr
sub
sub
mov
mov
mov
sbb
pop
leave
arpl
iret
mov
(bad)
cmovbe
jle
sbb
sub
cmc
in
outs
pop
nop
in
cdq
rcr
push
dec
mov
loope
retf
stc
jo
(bad)
popf
rcr
mov
lock
ret
push
ins
dec
cld
sub
imul
sbb
shl
push
(bad)
rcr
mov
mov
lahf
iret
fs
xchg
leave
push
les
and
xlat
das
sar
jns
aas
dec
inc
scas
leave
js
pop
cmp
xor
aas
cmp
dec
outs
sbb
fistp
jns
jns
cmp
and
aam
out
dec
es
repz
pop
mov
cmc
push
movs
nop
and
and
inc
clc
lock
icebp
cmp
faddp
out
stc
pop
sbb
or
cld
xor
cdq
fcomp
and
aam
dec
mov
jl
add
pop
push
repnz
jp
add
push
inc
out
ins
mov
mov
jmp
ss
or
test
mov
xchg
sbb
lods
xchg
ja
jnp
scas
and
outs
arpl
xor
das
mov
push
clc
jmp
movs
test
in
adc
mov
repz
adc
leave
bound
(bad)
adc
cwde
mov
cli
inc
enter
clc
js
adc
aaa
adc
movs
fsub
popf
xchg
cmp
mov
xor
lea
jb
push
jmp
loopne
cwde
jbe
and
xor
test
movs
test
les
mov
sti
dec
or
cmc
mov
ret
adc
sub
imul
mov
sub
es
pop
adc
xlat
xchg
and
inc
out
inc
ss
jle
cwde
js
mov
and
loopne
xchg
xor
test
retf
xor
ss
xlat
pop
ss
pop
mov
enter
dec
(bad)
jno
inc
push
rep
xor
jns
xor
jle
std
adc
mov
sbb
or
sbb
mov
cmp
int
inc
sub
mov
cmps
test
shl
mov
loopne
push
call
jp
fnstcw
lods
enter
cmp
fdiv
out
adc
and
cmp
add
xlat
inc
adc
in
sub
xchg
jge
mov
jno
push
in
xchg
ss
cmp
pop
adc
daa
jbe
dec
aas
div
popf
cmp
sbb
push
push
jmp
call
loope
jb
iret
jecxz
lds
jle
and
add
cs
movs
sahf
add
lahf
xchg
test
(bad)
push
sbb
test
sar
pop
jnp
dec
shl
in
cld
rol
sub
dec
jle
fcomp
lods
push
sbb
mul
push
loope
jl
imul
mov
mov
fwait
(bad)
into
js
out
add
xor
inc
lock
stos
in
(bad)
mov
addr16
arpl
mov
dec
cdq
xor
mov
and
sub
jle
fwait
or
cmp
xchg
ret
ja
dec
cmp
mov
xlat
mov
xchg
mov
aad
dec
mov
xor
loop
sbb
int3
fcomp
sub
scas
in
xor
cmps
dec
shl
adc
mov
arpl
push
mov
data16
not
out
inc
sub
add
jnp
sub
fld
pop
nop
ret
push
jmp
cmps
daa
jmp
mov
inc
ret
scas
jne
xchg
mov
fidiv
inc
sbb
add
or
dec
mov
pop
div
scas
push
jbe
and
pop
jnp
adc
or
add
test
repz
(bad)
sbb
pop
cmp
dec
sub
pusha
xchg
sahf
call
add
fisttp
in
ret
xchg
mov
jge
add
dec
lahf
in
cmc
aam
adc
hlt
outs
push
sub
or
xlat
jb
xor
movs
mov
jo
ins
adc
mov
aad
xchg
inc
ja
js
cmp
adc
addr16
push
pop
xor
enter
and
out
daa
mov
movs
daa
out
popa
jl
loope
push
cld
int3
pop
xor
mov
retf
cld
cs
shl
inc
rcr
mov
mov
push
jns
or
in
(bad)
mov
mov
add
pop
pop
mov
add
jmp
sub
push
sub
hlt
cmp
ficomp
shr
enter
adc
or
pop
jns
push
(bad)
and
mov
aad
xor
fistp
dec
mov
or
into
lods
dec
mov
inc
sbb
or
loop
mov
mov
fdivrp
test
das
jae
into
cmp
sub
test
dec
js
ret
icebp
gs
dec
leave
push
mov
xor
cmps
push
dec
cmp
mov
aad
fistp
push
sbb
jl
(bad)
push
aad
loopne
mov
jmp
lods
sub
pop
adc
mov
adc
mov
jge
jbe
retf
inc
dec
mov
je
jge
stos
inc
je
or
mov
or
pop
mov
int
xchg
add
jno
or
fsub
(bad)
mov
ret
mov
shr
cli
sbb
ret
cmps
adc
popa
jge
mov
pop
ret
mov
xor
mov
das
retf
fxam
pusha
ja
jmp
push
mov
push
movs
aas
or
jno
sub
pop
movs
push
mov
int
dec
mov
retf
inc
into
data16
cmp
enter
loop
bound
adc
sbb
jo
pop
imul
mov
out
xchg
pusha
inc
fwait
dec
and
into
pop
jmp
sar
sub
jno
out
mov
and
(bad)
loop
xor
mov
popa
(bad)
mov
je
inc
stos
dec
fstp
jb
xchg
cmps
cld
dec
xchg
(bad)
ins
mov
push
sub
test
mov
cmc
inc
xor
sbb
dec
and
dec
scas
test
sub
sti
pop
fist
adc
sar
retf
dec
sti
icebp
in
adc
mov
push
jnp
or
adc
ror
dec
pop
cmp
or
inc
(bad)
adc
adc
ret
pop
inc
int
lahf
out
int3
ror
cmp
nop
xchg
push
xchg
cmp
sahf
pop
inc
sar
mov
call
in
in
es
jbe
in
push
cdq
jl
out
aaa
(bad)
and
popf
pop
push
in
inc
arpl
pop
rcr
call
push
nop
lahf
push
fs
xchg
pop
inc
mov
sbb
push
xchg
repz
cmp
rcr
sti
dec
loopne
out
imul
mov
clc
push
fcmovnbe
xchg
out
jg
int
adc
mov
aaa
jb
jge
mov
movs
ins
cmp
pop
inc
jp
in
div
jnp
retf
fs
adc
jl
in
add
inc
push
imul
and
imul
jb
inc
hlt
jle
jmp
fcom
adc
pop
sub
shl
inc
jno
and
(bad)
and
pushf
mov
xor
pop
fild
jge
aas
ins
and
jo
mov
adc
stos
arpl
and
mov
jne
pop
mov
jno
repnz
or
cmc
sbb
add
sub
repnz
lods
lock
dec
into
test
jl
jae
push
sub
ret
mov
lods
jb
push
inc
push
or
repz
mov
push
in
pop
xchg
cld
sbb
cmp
lahf
jp
cmp
sbb
xchg
hlt
pop
mov
ja
dec
retf
xchg
jb
icebp
bound
cmp
push
bound
mov
or
daa
sbb
sar
retf
jmp
ds
jns
xor
in
out
fsub
cs
pop
mov
push
sub
inc
or
ret
and
cmp
xor
sbb
out
jecxz
popa
dec
lods
push
fisubr
pop
jecxz
fdivr
sub
push
and
cli
repz
out
fild
sub
movs
jne
mov
inc
imul
repnz
mov
push
sbb
hlt
shr
cmp
fisttp
repnz
dec
sub
dec
arpl
and
ins
or
mov
retf
popfw
xor
inc
or
iret
inc
push
cs
mov
push
and
aaa
jne
mov
or
sub
rcl
ja
data16
sahf
sbb
push
jns
lock
ds
out
pop
cmp
adc
mov
imul
or
pop
cmp
add
iret
push
out
je
cmp
iret
ds
inc
mov
test
test
xor
inc
pop
test
mov
test
add
add
cmp
fwait
jl
inc
neg
jp
push
adc
push
shl
popf
test
inc
out
int3
in
rcl
clc
push
xor
and
push
push
ins
pop
aad
mov
push
clc
mov
push
icebp
sti
jne
sub
push
test
pop
icebp
or
stos
pop
add
fmul
or
mov
cmp
sub
lahf
or
mov
xchg
into
(bad)
xchg
es
jb
pop
inc
push
sbb
dec
or
inc
bound
mov
fstp
jmp
or
mov
xchg
(bad)
ss
ds
xlat
(bad)
call
fcmovbe
xor
push
and
inc
and
or
es
outs
mov
adc
adc
cdq
inc
(bad)
dec
scas
sub
jnp
repnz
push
push
outs
cmp
sub
or
pop
mov
pusha
inc
pop
out
or
push
ret
push
fsubr
arpl
add
cmc
xchg
rcr
shr
and
xor
push
inc
cdq
add
mov
imul
(bad)
int3
mov
push
mov
push
loopne
into
sbb
and
or
push
cmp
mov
jle
add
jnp
and
(bad)
push
ret
loop
add
adc
dec
inc
xchg
shr
jae
pop
mov
add
and
push
in
outs
sbb
loopne
movs
inc
xchg
hlt
imul
inc
adc
(bad)
sbb
or
test
in
cmp
inc
xor
sbb
mov
cli
mov
retf
jle
cmp
fmulp
mov
bound
push
(bad)
out
aad
inc
rcr
sti
mov
ja
lds
xor
xor
inc
add
push
ror
or
push
cdq
test
add
lods
retf
inc
dec
rcl
test
mov
retf
mov
outs
mov
(bad)
mov
lds
dec
and
mov
je
add
aam
call
cli
pop
nop
(bad)
ins
scas
mov
mov
adc
sub
fwait
lods
ret
out
gs
call
sub
dec
xchg
aad
addr16
je
mov
fwait
jl
in
mov
popf
mov
shl
jnp
dec
icebp
arpl
xchg
dec
xchg
push
call
daa
mov
into
(bad)
xor
lds
jo
cmc
xchg
test
cmp
xchg
add
push
push
inc
bound
dec
jecxz
mov
jecxz
pop
jmp
cli
outs
dec
push
adc
jle
mov
dec
aaa
fcom
cmp
xor
jl
ins
mov
xchg
imul
outs
cmps
aam
outs
sbb
hlt
and
repz
hlt
sub
test
or
jo
xchg
lods
xor
(bad)
mov
ds
sub
pop
jl
pop
mov
xchg
mov
movs
stos
mov
loopne
add
push
jl
aas
(bad)
das
ss
mov
into
mov
xor
pop
sbb
jle
out
arpl
mov
stos
pop
loop
or
hlt
iret
out
mov
or
and
mov
mov
sti
adc
(bad)
mov
lea
jnp
fs
je
adc
sub
add
sbb
cld
cdq
scas
popf
neg
inc
(bad)
movs
aas
jecxz
je
les
inc
pop
xchg
nop
out
les
cmp
movs
repz
add
js
inc
arpl
push
xchg
mov
std
mov
push
push
fsubr
pop
pop
loopne
mov
pop
add
cmp
pop
xchg
mov
xchg
ret
or
or
jp
mov
adc
out
or
pop
and
xlat
clc
jbe
pushf
out
cli
mov
lods
mul
in
add
loop
adc
adc
inc
fisttp
popf
push
inc
shl
pop
xor
cmp
pop
test
cs
daa
xor
popa
mov
retf
sbb
int3
add
push
(bad)
dec
fist
mov
inc
sbb
xor
out
icebp
rol
imul
idiv
call
fwait
stc
data16
sti
int
dec
mov
cmp
cmp
or
cs
xor
xor
pop
nop
mov
or
and
mov
fs
mov
inc
pop
lahf
push
lock
sar
addr16
mov
lods
xor
sbb
rcl
gs
icebp
dec
icebp
push
mov
fistp
push
mov
lods
hlt
sti
sahf
adc
or
jbe
(bad)
fimul
movs
imul
call
sbb
mov
cs
pop
xchg
jmp
lahf
sub
dec
jne
xchg
ja
sbb
xor
inc
dec
jl
inc
lock
popa
aad
pop
fisubr
xchg
pop
pop
pushf
cmps
das
mov
mov
and
sub
loop
lea
jmp
pop
bound
shr
mov
push
ins
(bad)
jg
jae
out
(bad)
movs
sar
ss
rcr
jo
test
loop
and
lahf
mov
imul
xchg
mov
das
test
dec
outs
fiadd
adc
add
stos
rcr
mov
mov
pushf
rcr
jmp
and
inc
xchg
jns
xchg
jne
mov
lea
push
enter
aam
jg
sbb
out
sub
out
and
push
int
ror
ins
cdq
stc
ret
xor
push
aaa
adc
fyl2xp1
mov
sbb
pop
clc
push
add
inc
cmp
mov
retf
pop
adc
pop
clc
inc
sbb
pop
cmp
in
jl
leave
or
imul
sbb
stos
push
ret
inc
push
mov
jge
iret
mov
adc
cld
scas
push
inc
adc
xor
sub
pop
cmp
push
dec
jnp
xchg
hlt
xor
je
(bad)
ds
je
pushf
ror
xchg
add
ret
inc
push
pushf
pop
xor
cmp
test
out
pop
imul
dec
xor
loopne
inc
mov
or
daa
(bad)
fdiv
imul
and
and
cmps
int3
(bad)
cmp
fimul
rcr
in
mov
call
sub
or
cli
aam
adc
jb
call
popa
cdq
pop
cld
push
adc
stc
push
xchg
dec
push
ins
retf
cwde
push
mov
pop
loopne
sub
pop
imul
fs
xor
adc
sbb
jae
inc
(bad)
add
lea
out
mov
xor
dec
cmp
and
loope
sar
fstp
into
movs
mov
jmp
ins
push
mov
movs
aaa
dec
sub
push
jp
pop
jmp
sbb
or
shr
or
ja
das
inc
add
shl
outs
fist
pusha
fadd
adc
call
in
jae
mov
fcmovnbe
in
sbb
jb
call
sub
mov
fs
mov
xor
sbb
jecxz
scas
daa
adc
cmp
xor
fadd
mov
sub
leave
lds
add
jnp
movs
bound
ja
pop
cmc
(bad)
lods
lods
loop
div
add
mov
or
cmp
cdq
push
pop
popf
sub
mov
scas
sbb
frstor
and
xchg
sbb
adc
xor
repz
dec
fidiv
cmp
lods
push
jecxz
addr16
into
mov
test
sbb
stos
adc
cmc
in
mov
rol
or
lods
mov
inc
inc
mov
fld
cmp
(bad)
inc
nop
or
pop
jp
daa
test
push
in
sub
ins
hlt
or
scas
add
jb
pop
je
data16
add
shl
scas
aam
setae
or
jne
ret
in
pop
jmp
push
rcr
clc
push
sub
jle
or
sbb
xchg
popf
or
popf
xchg
mov
inc
mov
scas
fld
xchg
cmp
(bad)
js
mov
pop
xchg
mov
push
scas
icebp
push
pop
das
test
push
lahf
jmp
xchg
shl
fisttp
mov
sub
cwde
add
adc
xlat
mov
loopne
mov
xchg
xchg
std
jmp
mov
xchg
loope
inc
retf
push
cmp
lods
arpl
sub
cmp
mov
cli
retf
mov
and
xor
jbe
sub
in
nop
cdq
(bad)
sub
cmps
mov
cmp
inc
into
leave
mov
xchg
xchg
pop
stos
pop
mov
add
neg
rcl
mov
push
xchg
jle
pushf
pop
fisttp
or
in
pusha
sbb
cmp
bound
fs
leave
mov
ror
cmp
enter
jbe
sbb
pop
fwait
jb
xchg
push
out
jp
dec
sbb
sub
pop
sbb
cmp
xor
xchg
stos
xlat
stos
js
loopne
mov
(bad)
test
jg
aaa
mov
dec
dec
adc
jge
out
mov
push
cmp
push
stc
imul
lock
or
sub
adc
cmc
jae
cmpps
or
xchg
and
in
ret
cli
xor
int
add
aas
lds
loopne
push
ss
jecxz
jae
cmp
lods
add
out
cmps
lods
stos
dec
xor
mov
or
add
push
mov
xchg
mov
push
in
dec
push
jecxz
fsub
xor
jns
inc
and
cmp
(bad)
fdiv
mov
jne
sti
inc
lods
repz
push
test
and
rcr
adc
daa
jnp
push
cs
sub
cdq
mov
inc
inc
adc
leave
out
fimul
nop
and
retf
fdivr
cs
in
sar
sub
mov
scas
add
and
mov
push
jno
cld
outs
inc
pop
sbb
(bad)
dec
in
add
fwait
out
and
cmp
arpl
call
enter
loope
ja
ja
cmps
loopne
fadd
mov
std
call
mov
xor
das
push
inc
cmp
dec
pop
(bad)
leave
fwait
ins
sbb
cmp
sbb
in
inc
loop
mov
jl
outs
push
jno
add
xor
mov
add
or
or
or
imul
inc
jae
xor
push
xchg
jle
and
mov
repnz
jo
pop
iret
jmp
lds
or
leave
jmp
clc
adc
(bad)
nop
dec
mov
xchg
popa
jbe
mov
shl
inc
mov
jge
jmp
ins
cmp
retf
dec
adc
and
sub
neg
addr16
mov
jge
mov
out
jbe
mov
into
mov
push
jge
mov
call
mov
xor
push
out
ss
(bad)
int3
cmp
push
movs
not
jg
sub
mov
out
rcr
test
ret
into
jbe
jno
xor
mov
out
ret
mov
inc
imul
xchg
sbb
cld
jmp
mov
mov
cwde
mov
scas
inc
or
test
lahf
ins
js
mov
(bad)
into
stc
add
sahf
pop
ja
test
mov
jecxz
inc
jmp
stos
rcl
int
pop
xchg
xchg
repnz
rcl
mov
add
icebp
aad
or
and
add
repz
push
mov
jle
mov
inc
sub
out
pop
das
xor
rcl
jecxz
mov
pop
push
xor
mov
inc
pop
push
xchg
int3
jle
jmp
push
mov
pop
mov
div
adc
mov
sub
in
popa
adc
sahf
adc
pop
es
jb
sub
adc
es
ret
outs
jne
lods
jo
xchg
adc
and
inc
mov
nop
jmp
(bad)
cmps
push
pop
imul
aam
int
cdq
adc
loopne
aam
cmp
pop
into
mov
mov
fcomp
jecxz
sub
push
cmp
mov
pop
repz
push
dec
pop
sbb
jb
imul
(bad)
out
add
mov
popf
ror
xchg
push
jge
outs
addr16
enter
sar
and
push
dec
retf
out
cdq
sbb
jmp
add
test
add
xor
in
icebp
mov
out
inc
aad
cmps
dec
movs
movs
sub
outs
dec
daa
inc
ret
scas
add
adc
mov
push
dec
pop
and
lods
(bad)
(bad)
jne
in
adc
dec
sbb
add
sahf
xor
je
mov
jl
jb
xor
xor
cmp
push
retf
dec
mov
out
add
outs
xor
pop
cmp
xchg
add
imul
jl
inc
xor
dec
fidivr
repz
ret
push
xchg
xor
mov
push
xchg
inc
or
adc
or
and
shl
shl
push
jge
cmp
int3
stos
cmc
or
lods
sub
push
call
aad
inc
mov
push
mov
xchg
shl
mov
mov
add
mov
add
and
enter
mov
cmps
lock
mov
ds
dec
sub
xchg
movs
loope
aaa
mov
and
lock
jl
shl
add
fldcw
xor
mov
test
(bad)
push
and
push
pop
dec
aaa
gs
iret
add
popw
lods
dec
mov
ss
das
out
rcl
mov
dec
and
push
and
inc
aam
loope
lock
jg
mul
xor
lock
mov
movs
fcmovnu
push
fs
sbb
mov
cli
cmps
or
mov
jle
adc
xor
enter
or
cmps
fld
mov
jmp
xor
sbb
not
jno
jmp
outs
jl
icebp
adc
ret
mov
cmc
retf
scas
push
popf
or
(bad)
ins
mov
sub
cli
scas
cmp
cmp
mov
stc
adc
jg
add
xor
pop
sub
mov
xor
sub
jecxz
mov
sbb
adc
sub
icebp
adc
push
and
sbb
int
pop
jns
xchg
ret
fmulp
icebp
sub
pop
jmp
cld
movs
loop
shl
mov
and
arpl
sar
xor
dec
sbb
dec
jns
cmp
int3
cmc
int3
mov
repz
xor
les
cmp
ret
imul
pop
pop
and
stos
inc
and
inc
cli
call
lahf
or
xor
jmp
cmp
cld
in
add
call
iret
add
mov
popf
das
out
push
cmp
xor
push
xchg
pop
test
jmp
imul
dec
cs
jg
inc
cdq
pop
adc
inc
ss
mov
dec
push
mov
mov
movs
int3
jns
cmp
xchg
mov
jne
js
cmp
aad
mov
pop
adc
inc
and
adc
daa
retf
icebp
inc
pop
das
int3
dec
cmp
xor
es
popa
aad
jb
cdq
mov
fimul
sub
sbb
or
fiadd
or
ror
fcom
xchg
retf
mov
shr
adc
sub
fcmovu
mov
out
movs
jno
jnp
pop
dec
push
jo
fbld
xchg
or
(bad)
lea
retf
mov
mov
ins
sbb
mov
push
lahf
inc
pop
mov
call
es
fisttp
mov
and
cdq
je
leave
scas
scas
adc
adc
adc
xchg
pop
adc
pop
aam
hlt
mov
ret
jbe
dec
clc
pop
shl
std
imul
ror
inc
push
pop
add
push
and
stos
cs
xchg
int
mov
cmp
dec
add
sbb
adc
jmp
enter
loop
mov
retf
rcr
pop
xchg
jecxz
and
fstp
jnp
(bad)
push
sbb
and
mov
fild
std
loope
jl
scas
out
jge
cmc
mov
movs
adc
mov
cwd
sbb
icebp
lahf
icebp
push
pop
xor
cld
cld
push
or
retf
pop
cmp
cmp
jae
outs
sti
push
pop
mov
dec
imul
sub
push
mov
jo
mov
pop
add
push
cli
imul
and
in
sub
outs
jmp
sub
dec
xchg
daa
shr
pop
dec
(bad)
(bad)
loope
xchg
and
add
mov
repz
cmp
mov
scas
daa
adc
and
sub
add
shr
loope
mov
pushf
gs
push
in
mov
inc
pop
cmp
jp
adc
inc
xor
pop
pop
and
ja
pop
mov
sbb
push
or
loop
sar
lods
retf
mov
icebp
push
push
scas
pop
(bad)
stos
lahf
(bad)
out
inc
imul
xor
lea
test
dec
mov
or
cmp
inc
scas
pop
mov
xor
and
jp
fdivr
pop
pop
pop
push
rol
sbb
shr
push
mov
in
mov
mov
cmps
xchg
xor
push
mov
and
sar
and
mov
push
adc
sbb
loop
jnp
jae
or
fbstp
out
jb
push
add
or
jl
add
ja
out
and
sub
sbb
adc
in
enter
push
test
cmp
pop
jae
ins
sbb
enter
mov
sub
icebp
fisttp
sbb
cwde
xchg
dec
jecxz
fdiv
add
add
inc
jmp
sbb
mov
out
xor
pop
mov
aam
dec
sub
js
dec
push
pop
xchg
pop
pop
jno
div
adc
cmps
adc
fisttp
daa
mov
and
loop
lahf
and
data16
pusha
aas
mov
mov
dec
xlat
mov
je
jmp
mov
dec
mov
pusha
push
or
adc
cmps
push
(bad)
icebp
dec
sti
sbb
xchg
cmp
mov
xchg
and
test
clc
mov
mov
or
test
dec
xchg
sbb
cmp
xchg
or
(bad)
cmc
jle
xor
sub
addr16
call
adc
xchg
les
jle
jmp
mov
cmc
cmps
jge
xor
xchg
lds
shr
das
or
sub
xor
call
mov
shl
(bad)
dec
fs
push
xchg
dec
and
cmp
ja
adc
pusha
inc
lahf
rcl
sbb
pop
pop
lods
pop
test
shl
ret
shr
sbb
repnz
rol
mov
sub
dec
mul
sub
xor
and
mov
jl
or
stos
sub
loope
add
call
pop
outs
pushf
or
idiv
enter
retf
adc
rcr
ja
push
fld
add
jmp
inc
in
dec
(bad)
inc
int
xor
push
mov
out
loop
cmp
pop
dec
mov
adc
sub
jge
push
in
fwait
sub
gs
pusha
aad
retf
in
and
jb
pop
push
xchg
mov
cmp
mov
scas
mov
ins
push
sar
adc
fwait
test
jns
xor
(bad)
in
int
mov
enter
retf
sahf
mov
loopne
(bad)
jne
add
inc
in
sub
lods
inc
inc
ror
mov
stc
and
imul
xor
push
ret
adc
adc
pushf
xchg
lods
sahf
xor
divps
clc
add
pop
inc
cmc
sub
loope
push
retf
call
lock
fidiv
mov
pop
sar
out
(bad)
cmp
xor
mov
xchg
ret
scas
test
js
and
and
shl
iret
mov
es
stos
pop
dec
dec
imul
jno
xchg
add
jmp
push
and
xor
mov
xor
add
jbe
call
jne
aam
dec
sub
stc
imul
nop
call
sbb
xor
jmp
cmp
fldcw
rol
or
cmp
int3
out
and
adc
jne
xlat
add
adc
or
mov
xor
fstp
stc
cdq
loop
add
jle
call
(bad)
fiadd
popa
cdq
inc
xchg
icebp
mov
loope
xchg
fidiv
xchg
inc
adc
or
adc
inc
popf
jle
test
cmp
or
add
mov
lock
add
stos
addr16
push
and
daa
in
ror
popa
adc
fsub
mov
pusha
shr
adc
fmulp
sbb
dec
mov
or
sbb
test
fs
sub
sub
mov
ds
push
jmp
data16
sbb
sbb
fnstcw
mov
aad
mov
xchg
sub
and
add
bound
mov
mov
bound
enter
mov
rol
aaa
dec
(bad)
(bad)
adc
repnz
mov
scas
add
fisttp
pusha
das
mov
out
int
xor
push
sbb
sbb
fwait
outs
shl
and
shl
out
mov
call
test
or
sar
int3
jae
pop
test
push
test
mov
fisttp
dec
and
and
das
mov
mov
adc
add
inc
or
mov
int3
icebp
or
or
adc
pop
jo
mov
dec
inc
je
push
(bad)
imul
mov
mov
out
add
mov
fs
jmp
ret
jg
mov
(bad)
cmp
sub
mov
cmp
sbb
pop
popf
add
pusha
addr16
rcr
adc
into
shl
sbb
xchg
mov
loope
in
xchg
mov
hlt
stc
sub
daa
xchg
loope
call
cmp
das
pop
pop
xchg
aas
pop
push
xor
enter
adc
pop
leave
jnp
mov
aas
out
pop
fdiv
rcl
je
add
cdq
sbb
pop
popf
mov
cmp
mov
mov
retf
mov
dec
ffreep
xor
arpl
rol
(bad)
mov
xchg
xchg
stos
cmp
xor
xchg
xor
gs
arpl
inc
mov
pop
push
hlt
inc
push
rcl
mov
cmc
je
(bad)
in
sub
and
out
das
jmp
out
mov
ins
pusha
push
repz
pop
(bad)
rol
rol
inc
out
sbb
retf
ins
push
jg
dec
mov
jg
mov
and
scas
pop
push
test
cmp
mov
adc
adc
test
pop
retf
lods
mov
sti
sub
stc
cmp
cmc
xlat
aas
xchg
xor
dec
sub
push
imul
xchg
lds
fld
(bad)
in
test
stos
and
fld
jne
xor
add
retf
xchg
out
sbb
mov
mov
std
(bad)
out
sub
pop
inc
jae
cmp
mov
jne
out
fucom
jns
mov
adc
sti
push
dec
adc
inc
ins
adc
mov
mov
mov
fsubr
sbb
cld
retf
out
jmp
and
push
mov
xchg
dec
outs
inc
fimul
je
push
cmp
cmps
pop
shl
adc
pushf
dec
mov
sub
dec
les
loop
adc
rcl
or
jmp
jmp
sbb
(bad)
icebp
mov
nop
mov
jb
mov
sahf
scas
or
inc
or
aaa
adc
jne
cmps
in
cmp
in
call
mov
ds
inc
cs
cmc
sbb
out
fdivp
aaa
xor
jle
dec
ins
or
and
xor
cmc
pop
pusha
aam
cwde
fild
loopne
imul
fst
sub
or
inc
sbb
int3
pop
fidivr
mov
dec
jnp
cmp
lahf
ds
icebp
push
mov
add
xchg
lock
and
inc
js
jae
retf
sbb
or
mov
mov
inc
mov
cmps
aad
sti
pop
add
xor
or
lods
retf
pusha
pop
mov
mov
test
jne
add
emms
cmp
inc
cdq
xlat
(bad)
out
jl
pop
sub
loop
je
bound
int
lea
mov
fld
dec
add
imul
stos
leave
mov
add
ss
imul
div
cmp
pop
test
jb
mov
push
and
les
adc
mov
in
pop
das
dec
test
stos
or
cmc
in
cmp
push
dec
jae
pusha
nop
cli
push
out
inc
mov
jns
call
inc
stos
sbb
out
mov
cmp
sub
xor
aad
cmp
add
popa
mov
aas
test
mov
xchg
test
sti
test
pop
mov
pop
jge
dec
mov
shl
dec
fadd
ret
push
push
out
xchg
das
jae
jg
lods
push
ins
sbb
add
leave
push
cmps
mov
neg
in
out
es
jge
pop
push
sahf
icebp
mov
pop
movs
and
add
repz
cmp
iret
fbstp
xor
push
push
outs
sar
stos
mov
jo
and
jp
pusha
pop
mov
or
xor
mov
cs
xlat
jns
rol
xchg
(bad)
fs
push
fdivr
xor
mov
or
jmp
(bad)
retf
fstp
sbb
push
jno
dec
aaa
les
outs
addr16
pop
hlt
dec
iret
xor
mov
repz
pop
repz
aaa
fwait
sar
mov
retf
hlt
pop
frstor
ret
popf
cmp
pop
(bad)
hlt
add
pop
pushf
dec
shr
push
test
push
push
xor
loop
xchg
pop
cmp
push
pop
lea
jle
jns
push
fst
xor
and
cwde
shr
pop
into
inc
fsubr
mov
out
add
mov
xor
inc
add
in
mov
scas
jne
aam
out
sub
mov
or
jno
or
pop
pop
xchg
call
mov
inc
add
jmp
sbb
fbld
clc
cdq
mov
push
scas
bound
stc
adc
fistp
leave
in
jnp
pop
xchg
jns
popa
push
lock
xor
mov
loop
outs
sub
arpl
mov
jp
jns
cmc
xchg
int3
cmp
int3
xor
fdiv
loopne
sar
mov
sub
mov
mov
and
pop
push
rcl
mov
enter
das
test
cwde
xor
or
sahf
(bad)
leave
sbb
inc
sub
sar
shl
sbb
xlat
shr
adc
fdivr
ror
mov
inc
xchg
fcomp
inc
cli
fadd
imul
iret
aaa
pop
jns
and
mov
sub
int3
fcmovne
xor
sti
sub
aas
out
mov
or
and
xor
xchg
pop
pushf
jno
xchg
gs
jmp
mov
mov
fstp
retf
stc
push
fstp
or
shl
jp
pop
xchg
sub
cmp
aas
test
sahf
pop
dec
enter
iret
js
sbb
push
xor
rol
mov
cmp
push
push
ss
sub
xchg
inc
cmp
(bad)
aam
xchg
ja
arpl
loope
dec
arpl
inc
sbb
sti
adc
fwait
dec
fwait
popf
jg
div
fs
shl
pushf
dec
xor
in
stos
and
and
in
pop
dec
pop
daa
pop
mov
je
mov
jno
popf
inc
scas
out
xchg
xor
xchg
in
into
cmp
call
mov
(bad)
cmp
sbb
dec
in
lock
and
push
pop
ins
jg
xor
xchg
call
out
sub
mov
cdq
js
mov
pcmpgtw
push
mov
jne
sbb
xor
mov
outs
xor
sar
ret
jbe
das
adc
jnp
test
push
sub
push
out
cdq
shl
inc
movs
pusha
aas
xchg
or
push
cmp
call
add
retf
jne
jne
mov
movs
or
mov
addr16
sbb
and
or
xchg
cld
imul
(bad)
outs
cmc
jg
pushf
scas
test
add
or
or
xchg
sub
shl
cmp
dec
pop
pop
sar
clc
xchg
sub
popa
and
sub
mov
inc
pop
sub
cmps
and
and
pop
sub
inc
stos
xchg
add
mov
xchg
pusha
je
cwde
popf
js
cs
ins
cmp
xchg
stos
push
xchg
out
mov
inc
ret
inc
xor
rcl
das
outs
mov
arpl
call
jae
dec
pop
fidivr
(bad)
adc
inc
mov
xchg
cmp
in
cmps
pop
xchg
push
test
push
pop
and
push
jmp
sahf
sub
(bad)
xor
dec
push
sahf
mov
fisub
mov
jecxz
xchg
movs
sbb
add
cmp
sbb
int
aaa
jbe
bound
repz
dec
(bad)
imul
xchg
inc
clc
sbb
inc
sbb
cmp
jne
int3
mov
jp
popf
xchg
dec
adc
mov
jno
arpl
retf
jmp
stos
mov
jae
mov
jb
ja
adc
pcmpgtd
cli
retf
aaa
or
jmp
cs
cmc
adc
stc
cmp
pop
xchg
sbb
mov
ja
inc
sahf
es
in
enter
imul
push
ins
xchg
das
push
sub
dec
or
movs
(bad)
outs
push
(bad)
xchg
push
into
call
(bad)
fs
mov
ficom
sub
pop
jne
sub
jge
mov
test
ror
jge
loopne
mov
push
iret
scas
imul
(bad)
cmp
fnstenv
dec
call
dec
xor
mov
pusha
and
jnp
xchg
push
mov
daa
xor
dec
inc
and
rcr
mov
out
(bad)
cmp
sub
jno
repnz
int
pop
loope
in
mov
loop
ret
ins
pop
out
jbe
cld
xchg
aam
ja
dec
pop
jp
test
pop
adc
mov
idiv
aaa
add
sbb
aam
ret
loope
and
cmp
push
adc
jp
cmp
mov
js
retf
cmp
and
sti
pop
xchg
push
enter
ja
jg
ins
(bad)
pop
cld
rcl
inc
cli
aas
ret
push
mov
push
or
cli
and
mov
dec
jle
repnz
mov
mov
jnp
repz
jle
sbb
ins
fmul
test
cmp
in
mov
xchg
mov
cs
fcmovu
jle
scas
mov
test
test
cmp
xchg
sbb
in
arpl
mov
mov
adc
cmc
retf
xchg
call
jns
jns
loope
fisubr
shr
out
mov
cwde
in
push
or
cwde
inc
into
fs
jg
(bad)
and
mov
xor
xchg
inc
xor
cmp
ss
add
lahf
adc
jecxz
xor
nop
xchg
mov
loop
fdivr
bound
stos
pop
cmp
pop
(bad)
fcmovnb
pop
mov
cmp
pusha
pop
mov
push
cmps
push
enter
jg
popa
cmc
int3
loopne
shl
push
cmc
pop
xchg
xchg
mov
mov
jl
xor
data16
cmps
pop
dec
pusha
and
out
fnstcw
xor
jno
sbb
ret
mov
bound
scas
ret
dec
pop
pop
push
inc
jl
shl
sub
add
int3
inc
adc
jge
(bad)
sar
fwait
mov
dec
icebp
test
jl
xchg
test
jmp
cmp
movs
inc
outs
jnp
nop
jae
pop
lahf
dec
pop
or
jle
and
leave
add
adc
inc
div
sub
sbb
mov
xchg
cmp
jmp
cmp
fisubr
or
xor
dec
dec
enter
out
addr16
ds
or
fwait
je
adc
pop
xchg
addr16
mov
mov
scas
lods
pop
arpl
jae
js
pop
mov
movs
lds
leave
mov
adc
lea
jp
add
(bad)
and
push
aad
jecxz
(bad)
sbb
cmp
sub
mov
mov
repnz
push
add
arpl
out
vunpcklps
stc
das
add
jne
mov
and
ds
push
mov
dec
pop
sbb
test
adc
mov
mov
pushf
shr
mov
test
xchg
fwait
inc
into
xor
sub
jae
inc
xor
xchg
add
xor
mov
fcom
add
add
inc
ss
lds
retf
shl
mov
fdivr
ins
mov
lods
sbb
js
in
ficom
arpl
or
clc
sbb
jns
jns
add
mov
adc
fdivr
inc
imul
jae
mov
call
test
pop
fnstenv
push
push
(bad)
pop
pop
out
mov
fsub
mov
gs
inc
xchg
mov
out
movs
enter
je
stos
std
mov
pop
jg
jae
xchg
jge
mov
sub
mov
aam
nop
loope
out
cmp
stos
or
push
daa
add
lods
ficomp
fcomp
cmp
pop
xchg
or
out
add
mov
vmovups
scas
mov
cmp
lods
push
bound
fs
pop
test
xchg
repnz
mul
popf
fidiv
cli
jae
push
and
test
aaa
jne
mov
pop
fimul
mov
not
mov
cdq
mov
jmp
cmp
push
pop
or
test
push
push
ins
pop
data16
call
test
call
jle
xor
sar
sub
push
xchg
fbld
dec
mov
scas
xchg
in
(bad)
popf
mov
push
mov
popa
in
imul
shl
lea
add
les
sub
sbb
lods
loop
mov
in
sbb
jno
movs
leave
dec
mov
imul
cmp
mov
mov
mov
outs
mov
push
leave
mov
dec
stc
sub
arpl
and
hlt
loope
push
inc
mov
out
in
sbb
scas
shr
adc
xor
push
jns
mov
mov
dec
ret
sub
out
in
shl
push
imul
xlat
push
(bad)
out
or
inc
sahf
pop
(bad)
cs
mov
dec
sub
cmp
inc
jne
pop
je
fs
pop
ja
in
ror
xchg
iret
sub
add
loope
xor
dec
mov
xchg
lds
jmp
push
mov
xor
imul
xor
stc
loop
lods
inc
sub
popa
fisubr
add
xchg
cli
cli
retf
bnd
cmps
xchg
bound
xchg
mov
shr
mov
push
ror
add
arpl
mov
pop
adc
mov
mov
gs
stos
call
pusha
xchg
retf
pushf
and
popa
mov
arpl
(bad)
stos
aaa
sub
mov
mov
loopne
xor
jae
inc
cdq
test
pop
ins
cwde
ja
add
imul
das
cwde
rol
mov
test
mov
add
adc
mov
dec
push
jmp
leave
ja
retf
sbb
pop
scas
pop
xor
and
inc
dec
and
movs
cmp
add
xchg
scas
pop
shl
push
fs
cmps
xor
cmp
cmc
inc
(bad)
sar
lods
sbb
push
stos
icebp
ja
xchg
pop
aam
xchg
imul
jmp
inc
fcom
pop
scas
and
and
sub
ds
xor
(bad)
gs
imul
loope
push
sub
popf
test
arpl
xchg
xchg
dec
sahf
out
inc
mov
mov
xor
hlt
xchg
and
mov
or
mov
mov
arpl
dec
dec
mov
mov
dec
clc
xor
pop
jl
outs
add
enter
mov
mov
js
sub
push
out
stos
sahf
cli
mov
(bad)
bound
pop
sbb
inc
cmp
sbb
or
or
push
sahf
mov
aaa
mov
cli
inc
ins
xor
repz
cmp
mov
pop
dec
mov
sub
jne
bnd
dec
sub
movs
jmp
es
cmp
dec
loope
dec
and
adc
or
das
vpunpckhqdq
bound
cmp
ss
(bad)
je
fidiv
ret
and
je
mov
aam
cmp
js
(bad)
test
inc
daa
lods
add
ja
xor
push
xchg
cmp
(bad)
adc
leave
gs
in
and
xor
pop
ins
repnz
cmp
mov
mov
pop
fs
push
mov
inc
bound
std
in
inc
aam
mov
mov
mov
in
jecxz
jle
ss
std
pop
fistp
xlat
clc
stos
enter
push
push
repz
cmps
imul
push
adc
sar
ins
std
add
dec
sbb
rcr
gs
mov
mov
cs
in
(bad)
jle
pop
icebp
call
imul
cmp
aam
int
pop
(bad)
xor
dec
jmp
inc
dec
cmp
fnstsw
cmp
and
dec
mov
(bad)
aam
sub
mov
ins
bound
in
xchg
jp
jl
stc
xor
jle
mov
rcr
imul
pusha
loopne
(bad)
std
jne
mov
lods
cs
inc
pop
dec
cdq
and
aad
mov
(bad)
outs
retf
sub
mov
cmp
jl
add
dec
mov
xchg
mov
cmp
mov
gs
imul
in
fisttp
shl
dec
in
dec
and
push
repz
cmp
inc
xchg
popa
mov
sbb
ror
(bad)
call
mov
jmp
repnz
push
ins
das
dec
loop
jp
stos
mov
inc
out
pop
cmp
in
(bad)
or
ds
pop
and
jno
idiv
cmc
jmp
adc
cmp
inc
push
and
in
mov
adc
pop
cmc
dec
ss
or
imul
adc
dec
cmp
xor
jl
std
xor
dec
nop
inc
mov
mov
mov
add
and
enter
data16
imul
mov
repz
call
mov
pop
add
leave
retf
jle
mov
fwait
sbb
and
add
jp
add
cmp
mov
cmp
add
jnp
xchg
cmps
push
pop
call
mov
aaa
jmp
jnp
cmp
sti
jb
pushf
call
inc
cmps
jg
loopne
dec
ror
mov
lods
in
cli
jecxz
fisub
dec
pop
and
out
(bad)
pushf
daa
test
adc
and
ret
mov
fwait
jo
loope
(bad)
shl
pop
test
shl
mov
sbb
xor
shl
mov
sub
inc
rcl
dec
mov
xchg
movs
pop
adc
jae
pop
mov
rcr
cmovbe
fs
xor
cmp
movs
mov
in
ds
data16
int3
popa
out
inc
shl
adc
push
push
pop
shr
mov
inc
movs
scas
sbb
mov
mov
mov
xor
mov
cmps
cwde
cmps
das
lock
jge
(bad)
push
sub
xor
cmp
outs
out
adc
dec
stc
pusha
mov
sbb
jg
and
fist
pop
dec
cmp
xor
repz
pop
aad
xor
fwait
je
fbld
in
sub
adc
adc
inc
ja
dec
(bad)
fwait
fs
pop
cmps
jbe
lods
mov
cmps
ret
inc
sub
xchg
idiv
mov
sbb
daa
(bad)
xor
daa
push
jmp
sbb
rol
pop
adc
sahf
push
rcl
pop
mov
adc
(bad)
sub
mov
out
mov
sti
in
mov
xor
repnz
sbb
cmps
out
xor
enter
dec
xchg
ins
aad
jle
scas
into
enter
jo
int3
xchg
fwait
stos
jmp
cmp
pusha
popf
xchg
cli
mov
clc
inc
jecxz
(bad)
push
retw
xor
mov
test
push
cmp
mov
sbb
cmp
fist
pushf
mov
and
fadd
mov
ins
mov
js
cmc
xchg
mov
(bad)
adc
mov
cmp
cmp
dec
jbe
repnz
std
mov
pop
out
hlt
jbe
sbb
and
ss
xchg
pop
inc
fmul
daa
nop
jb
and
lahf
(bad)
sub
loopne
xchg
dec
call
and
push
dec
mov
add
test
aam
pop
retf
jl
and
cmp
in
fwait
stos
jmp
cmp
stc
shl
add
jle
adc
or
cmp
movs
mov
lea
pop
pop
rol
jns
fbld
dec
ret
cli
ja
sbb
mov
lods
inc
les
add
lds
movzx
mov
les
add
fisubr
scas
in
inc
sub
pop
mov
lock
mov
mov
in
mov
loop
test
and
pop
push
mov
xchg
mov
jbe
dec
sub
inc
lea
mov
add
aad
jge
idiv
fsub
push
xchg
inc
fdivr
out
mov
aas
test
ja
push
cmp
add
mov
scas
or
shr
dec
mov
xchg
xchg
out
out
xor
and
psubd
sbb
movs
pop
jp
retf
shl
xchg
add
mov
mov
pop
or
fldln2
or
xchg
xor
sbb
pop
and
ss
mov
jmp
jno
clc
push
test
cmp
rol
add
cmp
and
adc
push
dec
adc
jmp
xchg
lds
or
sbb
fidiv
aam
ins
push
cdq
push
das
push
sub
push
adc
sbb
xor
enter
push
mov
shl
or
xor
push
mov
push
mov
ja
sub
xchg
ror
mov
ins
dec
xchg
sbb
cwde
in
sbb
in
into
xchg
sub
ret
lods
and
and
mov
xor
fadd
or
faddp
and
mov
push
or
sar
mov
stos
imul
ror
in
data16
jne
mov
scas
popa
fistp
loope
mov
mov
cs
clc
cmp
pusha
push
gs
jp
js
ja
hlt
inc
loop
mov
push
shl
or
ja
lds
or
jmp
and
aaa
cmps
jge
adc
in
add
xchg
xor
in
xchg
sbb
idiv
sub
sub
xchg
xchg
and
and
stos
xor
sbb
and
pop
cli
(bad)
cli
inc
sub
mov
aas
jo
xchg
aas
hlt
mov
test
cmp
inc
add
loopne
lea
out
out
push
push
add
mov
and
and
in
arpl
aas
je
xchg
rcl
test
mov
inc
lods
push
ins
ficomp
cs
adc
addr16
add
es
retf
cmp
aam
mov
sub
call
ins
inc
sub
outs
in
xlat
jmp
sbb
jmp
aam
jns
enter
cs
xchg
pop
movs
push
adc
paddd
add
and
mov
js
ja
lods
mov
pop
jae
in
mov
clc
fdivrp
(bad)
int
jnp
addr16
push
adc
imul
leave
add
test
mov
inc
movs
or
cmp
pushw
push
mov
mov
dec
retf
ficom
dec
les
sub
pop
sub
icebp
and
in
or
sub
nop
mov
out
and
push
rcr
stos
mov
(bad)
(bad)
ins
xchg
fldcw
jmp
mov
cmp
lea
push
sub
pop
mov
add
pop
mov
ret
pop
cld
adc
jp
cmp
push
iret
outs
mov
lock
ficom
cmps
dec
addr16
cwde
mov
mov
xor
das
clc
pushf
imul
inc
aas
xor
es
scas
jmp
xchg
push
sub
pop
push
jp
inc
retf
pop
dec
xor
or
cmp
aam
repnz
daa
ins
lods
jae
dec
(bad)
lock
out
pop
imul
(bad)
in
test
mov
ficomp
lds
mov
cmp
push
and
(bad)
fiadd
push
and
lods
or
cmp
es
loopne
popf
call
sub
in
rcl
push
fsub
xchg
js
fwait
stc
push
adc
jbe
int
xor
mov
jg
mov
sbb
ins
mov
sbb
mov
ret
jmp
cmp
jo
push
dec
out
mov
into
cmc
cwde
push
mov
xchg
mov
sbb
scas
cld
lock
push
jb
mov
stos
inc
int3
adc
jle
arpl
and
jp
add
mov
mov
or
fstp
mov
push
jle
rcr
inc
loop
xchg
cld
pop
xchg
xchg
mov
movs
test
mov
nop
sbb
call
xlat
push
outs
inc
adc
sti
or
jle
jle
mov
add
clc
adc
sahf
retf
adc
jecxz
and
repz
push
pop
loopne
push
add
fs
dec
mov
stc
pop
call
inc
mov
shl
mov
add
ja
lea
xchg
aad
pop
inc
dec
adc
es
mov
stos
inc
ret
je
or
inc
retf
jnp
jo
cmp
and
aam
repz
mov
scas
dec
pop
and
shl
lods
aam
std
inc
setae
jne
ds
cmp
dec
loop
push
mul
in
cmc
inc
mov
xor
mov
fisubr
xor
mov
popf
mov
pusha
scas
cld
pushf
sub
in
adc
inc
or
pushf
or
and
xlat
or
pop
mov
jnp
jg
mov
mov
popa
inc
adc
mov
add
pop
jg
pop
out
mov
arpl
cmp
xor
movd
inc
mov
inc
nop
jge
int
call
xor
arpl
js
sbb
into
mov
pop
jae
stos
dec
hlt
addr16
mov
pop
rcl
popf
pop
xchg
les
xor
pop
shl
mov
and
sub
mov
sub
mov
mov
mov
ins
push
inc
call
sbb
pop
mov
jb
mov
loopne
sub
dec
pushf
jg
les
pop
xor
fdivr
aad
xchg
push
ja
push
mov
jecxz
std
pop
fisttp
scas
mov
jb
ffreep
push
out
dec
stos
mov
push
pop
jp
(bad)
lods
loopne
fstp
cmp
cmps
xchg
fwait
push
addr16
bt
push
fsub
or
cld
dec
push
icebp
das
sbb
std
inc
sbb
(bad)
das
clc
xchg
and
inc
jmp
ror
mov
cmp
pop
sar
leave
pop
scas
jbe
and
jmp
xchg
dec
sub
xchg
call
inc
cmp
cwde
scas
xchg
(bad)
dec
or
into
ror
(bad)
mov
iret
mov
push
test
fwait
xchg
cs
lods
xor
scas
xor
xchg
pop
push
adc
mov
inc
pop
inc
or
pusha
cmp
mov
cmp
fst
loop
mov
rcl
pop
pop
add
pop
add
jne
sti
gs
jg
imul
jp
cmp
adc
mov
jp
mov
sub
dec
push
and
jl
xor
sbb
jle
pop
lods
add
lahf
xchg
mov
inc
fwait
sub
popf
jmp
wrmsr
and
shl
xchg
jmp
adc
out
ja
scas
inc
mov
lods
je
imul
or
sbb
and
shl
test
sbb
push
bound
dec
shl
sbb
call
or
jl
data16
cmps
add
cli
popf
out
pop
and
mov
mov
xor
push
adc
mov
aaa
mov
aam
xlat
repz
sbb
aam
xor
pushf
or
ret
aad
adc
icebp
ins
inc
inc
inc
idiv
scas
dec
pop
mov
fstp
mul
in
cmc
jecxz
(bad)
jle
jmp
jb
jmp
pop
lahf
imul
fadd
xchg
jnp
mov
xchg
stos
out
mov
sub
jle
ret
psrld
out
mov
inc
xchg
pop
mov
rcl
jecxz
mov
popa
cmp
inc
inc
push
cmp
ins
cmc
sub
je
bound
(bad)
sub
push
fnsave
push
aad
pop
ret
bound
enter
nop
mov
out
xchg
bound
mov
ja
mov
xchg
retf
adc
bnd
add
(bad)
movs
test
cmps
jg
call
pusha
ins
dec
sbb
sahf
push
and
retf
or
addr16
xor
pop
js
ret
mov
cmc
inc
adc
inc
add
leave
or
(bad)
(bad)
inc
movs
pusha
pop
and
xchg
mov
in
cld
pop
mov
and
and
out
leave
pop
and
ins
shl
mov
jbe
icebp
push
or
fmul
jmp
pop
mov
mov
xchg
fsubrp
pop
aad
daa
lods
xchg
lods
nop
mov
std
in
mov
clc
sti
and
dec
lock
push
mov
sbb
xchg
mov
adc
add
cwde
push
push
imul
ss
rol
fbstp
xchg
mov
idiv
push
(bad)
stc
adc
repz
fsubr
dec
popf
add
call
or
adc
lock
jle
push
sub
test
pop
jns
fidiv
call
hlt
(bad)
out
sahf
pop
cmc
aad
test
dec
adc
call
inc
sub
xchg
shr
in
push
rcl
pop
dec
jns
adc
xchg
xlat
sbb
dec
sbb
sub
out
adc
fcom
adc
lahf
sbb
les
xor
jl
jnp
mov
xchg
call
pop
adc
xor
repz
repz
dec
pop
add
cmp
xchg
out
aad
repnz
cmp
xchg
or
aad
ret
sub
adc
out
push
cmps
push
push
push
outs
int3
xor
fisttp
add
jp
or
push
add
jne
icebp
mov
jmp
jae
sub
cmps
ror
imul
out
out
fild
fwait
leave
dec
ins
xor
push
xchg
mov
out
int3
push
sbb
mov
xchg
fst
push
jne
mov
out
or
pop
cmp
push
add
sti
add
mov
jno
rcr
inc
retf
jns
jp
add
and
retf
mov
(bad)
xlat
lea
dec
sbb
mov
pop
and
fiadd
xor
mov
mov
jmp
push
add
jp
stos
rcr
shr
enter
add
or
(bad)
push
loope
fsubr
mov
int
mov
jle
adc
mov
xor
xor
mov
(bad)
mov
cs
push
gs
jle
mov
stos
jecxz
ins
fst
in
inc
lods
fdiv
inc
shl
gs
mov
(bad)
lock
sub
push
fldcw
lahf
xor
and
outs
cmp
mov
scas
cmp
jmp
aaa
mov
dec
inc
add
daa
lds
icebp
(bad)
ins
xor
xchg
jecxz
adc
gs
mov
stc
cmps
test
sbb
fmul
int3
inc
in
add
dec
(bad)
push
in
mov
fs
inc
jge
test
push
retf
cwde
pop
in
in
lds
jl
mov
inc
cwde
push
ret
pop
and
sub
sub
out
add
push
movs
xchg
adc
adc
aam
mov
(bad)
aaa
fstp
xchg
pop
xchg
or
adc
or
sbb
(bad)
adc
mov
push
push
repz
dec
push
push
sub
and
cvttps2pi
sbb
sar
in
xchg
fs
add
xor
and
push
fs
adc
stos
inc
stos
stos
pop
xchg
cmps
push
inc
out
(bad)
xor
mov
cmps
inc
es
jae
and
ins
jl
xchg
js
lds
in
or
stos
push
and
and
fwait
mov
loop
in
dec
pop
cmp
dec
push
and
clc
cld
gs
xchg
add
pop
add
or
mov
in
mov
inc
push
sti
jo
nop
pushf
ds
in
sar
inc
cli
(bad)
aam
(bad)
pop
mov
jns
pop
cmp
sbb
int
loope
sub
add
fadd
mov
ficomp
(bad)
sbb
repnz
mov
cmps
pop
or
in
xchg
mov
ret
pop
sbb
sbb
outs
mov
cmp
icebp
xlat
(bad)
nop
int
test
sub
push
mov
in
dec
jb
loop
pop
test
dec
dec
xchg
icebp
sub
sahf
loop
or
add
adc
shr
or
dec
sbb
dec
xchg
ins
pop
test
rcl
rol
(bad)
add
scas
pop
lock
iret
mov
push
test
mov
nop
jb
stos
mov
sbb
stos
fcomi
mov
das
test
jmp
cwde
(bad)
pusha
das
(bad)
dec
ret
ret
or
int
mov
xor
dec
sub
outs
outs
sbb
retf
pushf
xor
fs
pop
and
in
sahf
xor
nop
cwde
or
add
and
and
std
cmp
ret
cli
fsub
and
loopne
sti
and
sbb
fdivp
xchg
std
mov
mov
or
sub
std
mov
int3
jns
scas
in
pushf
or
lock
and
repz
cmp
adc
sub
adc
dec
sub
pop
and
jne
aam
scas
retf
movs
xor
mov
adc
xchg
mov
cld
int
(bad)
mov
xor
xor
xchg
aam
lahf
xor
loop
sbb
cmp
js
push
aaa
and
dec
test
mov
fidiv
addr16
cmp
les
add
rcl
arpl
stos
inc
push
mov
dec
int
jbe
inc
call
mov
xor
inc
mov
inc
sar
cs
int
xchg
xchg
fild
pop
rol
ret
mov
sbb
lds
int3
xor
sti
push
jns
push
inc
cld
or
adc
stc
fiadd
test
jl
or
cmp
cmp
mov
int3
xor
or
dec
or
dec
xchg
sub
mov
push
mov
sbb
inc
mov
dec
mov
jle
loop
cmp
fsub
push
nop
cs
inc
jge
sbb
inc
outs
push
iret
(bad)
pop
xor
sbb
xor
mov
lods
xchg
pop
cmp
(bad)
imul
outs
sub
out
mov
enter
or
or
into
out
fsubr
xor
js
pop
cs
push
ss
jns
add
cmp
push
jg
push
or
sbb
cli
mov
fwait
outs
out
push
cmp
aas
pop
outs
lock
mov
test
adc
outs
cmps
stc
(bad)
cmps
push
add
mov
loopne
cmp
adc
imul
scas
cmp
and
xchg
fbstp
sahf
pop
in
es
push
pop
popf
push
push
mov
or
imul
or
inc
sti
stc
push
mov
mov
inc
xchg
arpl
jle
dec
sbb
sbb
push
movs
popf
pop
mov
cmp
sbb
fs
sub
push
popa
cmp
and
mov
xchg
mov
cmp
and
push
ins
sub
ss
sbb
mov
mov
push
outs
xchg
mov
div
cmp
(bad)
mov
xor
pop
les
sahf
es
xor
enter
push
arpl
mov
shr
mov
mov
les
test
push
pop
jo
cmp
xor
sub
pop
fdivr
call
mov
bound
cli
dec
bswap
cmp
push
mov
cmp
xlat
jo
mov
push
adc
in
popf
mul
lods
or
mov
ds
push
jl
push
and
push
ror
pop
sahf
or
in
pushf
into
or
xchg
in
scas
dec
popa
mov
xor
and
imul
pop
call
inc
xchg
add
mov
mov
aaa
out
fs
call
adc
dec
ret
jbe
mov
ret
or
fisttp
lahf
lock
push
pop
xor
mov
out
mov
dec
inc
jb
jae
and
ins
stos
inc
dec
fs
hlt
mov
inc
pop
data16
sbb
adc
mov
pop
and
movs
pop
push
sar
push
jmp
je
jmp
sub
pop
out
pop
pushf
stc
stos
push
(bad)
jp
(bad)
or
loope
inc
xchg
adc
in
popf
push
imul
fld
into
push
scas
fdiv
idiv
dec
xchg
rcl
adc
push
sbb
or
inc
jl
aas
mov
test
call
enter
daa
retf
inc
and
mov
icebp
loop
jle
and
xchg
call
sub
cdq
and
leave
sub
daa
push
ret
mov
push
in
push
push
push
(bad)
dec
add
mov
fcmovu
add
stos
push
daa
sub
out
pop
and
shl
imul
mov
inc
out
push
outs
xor
in
pop
out
scas
mov
fcom
push
or
pop
pop
add
and
retf
cs
call
mov
hlt
test
adc
test
mov
fmul
push
or
rol
mov
cmp
or
xor
ins
add
or
push
xchg
or
push
stos
xor
mov
dec
out
sar
jae
cld
stc
push
pop
cld
pop
loopne
adc
clc
outs
in
adc
sbb
es
rcr
xchg
sub
adc
shl
push
fdivr
sar
adc
sub
out
inc
or
push
or
aam
inc
daa
pop
xchg
pop
arpl
sub
int3
push
inc
cmp
cmp
jge
cmp
cmp
adc
sub
pusha
xor
cdq
cmp
cwde
mov
shl
push
das
mov
add
and
fldcw
or
sbb
pop
nop
jmp
xor
pinsrw
cwde
pop
fild
jmp
(bad)
shl
or
sbb
pop
outs
push
mov
adc
xchg
adc
in
(bad)
fdiv
js
ret
sub
cmp
ins
or
or
mov
cs
inc
and
mov
nop
or
rol
push
sbb
jg
dec
sub
ds
xor
xor
pop
sub
xchg
push
xchg
dec
sbb
sub
dec
cwde
jnp
or
jge
repnz
dec
mov
cmps
mov
bound
mov
xor
popa
jae
out
sub
mov
icebp
inc
scas
add
js
rdmsr
ja
out
push
pop
out
mov
ret
or
test
jl
or
sti
ja
ret
push
pop
std
out
adc
xchg
push
into
sar
xchg
retf
aaa
jmp
dec
lods
fst
addr16
push
(bad)
pop
dec
inc
mov
(bad)
iret
dec
xchg
test
or
push
mov
push
icebp
jb
sbb
test
mov
jge
cmp
js
mov
sar
cmp
jge
mov
pop
sub
xchg
in
mov
sub
mov
sahf
fdecstp
out
add
lea
mov
add
aad
pop
jns
push
mov
mov
mov
fwait
push
(bad)
xchg
and
push
fsubr
sbb
sbb
test
pop
sar
sbb
or
adc
(bad)
clc
sub
or
cmc
xor
add
stos
mov
int3
cmp
pop
not
cmps
rcr
loopne
test
pop
mov
mov
fist
(bad)
rcl
jnp
(bad)
mov
adc
pop
jno
mov
mov
jno
sbb
in
jle
cmp
adc
in
test
or
inc
sar
scas
cmp
cli
adc
sahf
push
push
xor
cmp
xor
sub
sbb
cdq
or
sahf
(bad)
xchg
loopne
imul
cmps
cmp
stos
sub
xor
or
repnz
loop
dec
jg
dec
into
jno
pop
(bad)
jmp
jb
push
mov
std
sbb
xchg
jmp
nop
aas
lahf
adc
push
dec
push
lahf
data16
pop
mov
xchg
mov
dec
movlps
lock
dec
inc
and
add
jp
or
stos
mov
out
adc
mov
idiv
cmp
and
ins
push
in
pop
int
xchg
cmps
xchg
mov
adc
gs
pop
movs
mov
inc
dec
jno
outs
xor
repz
fsubr
pop
and
sbb
sbb
inc
mov
imul
dec
outs
xchg
cmp
(bad)
shrd
xlat
ret
pop
pusha
mov
cmp
(bad)
sub
loopne
inc
out
xchg
dec
xchg
mov
jp
popa
and
dec
push
cli
(bad)
dec
(bad)
cs
xlat
mov
in
and
inc
mov
cli
mov
jb
aam
stos
aam
lock
or
fs
cmp
inc
mov
dec
pop
test
xchg
arpl
fsubrp
iret
repnz
ins
pop
add
mov
or
loopne
xlat
sar
cwde
ja
add
aas
mov
sbb
call
push
cmps
gs
aam
pop
push
pop
test
test
or
int3
mov
mov
iret
stos
cmps
sub
retf
test
stc
fmul
mov
dec
(bad)
out
shl
cmp
call
retf
add
push
pop
pop
cwde
pop
cdq
cmc
push
sbb
sub
cdq
movs
push
repnz
mov
adc
jmp
not
ret
jmp
inc
leave
push
scas
fwait
aam
shl
jp
je
cmp
mov
popf
(bad)
mov
bound
jle
retf
dec
scas
jnp
dec
mov
pusha
mov
(bad)
mov
in
pop
xchg
in
add
outs
test
(bad)
outs
fcomp
or
cmp
cmp
pop
fistp
mov
mov
cli
sbb
xor
mov
js
jmp
sub
adc
sub
push
in
leave
mov
jns
(bad)
std
pop
retf
jns
adc
arpl
sti
lods
pop
ret
sbb
inc
sbb
mov
inc
push
lea
pop
pop
popa
lds
jge
cmp
push
loop
push
loope
add
jecxz
xor
pusha
pop
mov
ret
aam
das
popf
jmp
std
dec
xchg
cmp
pop
ins
push
jbe
inc
or
and
lods
xchg
leave
xor
jae
adc
xor
(bad)
test
outs
sub
sub
xchg
jl
mov
push
test
ret
push
jg
push
push
sub
cwde
and
xor
sub
mov
xor
clc
lds
sbb
(bad)
test
scas
pushf
cdq
shl
rcr
test
test
and
out
add
pusha
arpl
aaa
retf
enter
test
dec
lods
call
add
cmp
idiv
dec
add
adc
xlat
push
push
push
mov
xor
mov
cdq
add
mov
dec
dec
scas
test
in
retf
in
ror
add
cwde
cmp
mov
fdivrp
dec
cmp
jno
push
enter
stos
scas
(bad)
mov
pop
add
test
jne
pop
jle
sub
cwde
lods
jmp
xchg
int
xlat
fistp
jmp
inc
scas
pop
mov
sub
ja
sub
es
mov
int
mov
jnp
fs
and
ret
and
mov
ret
scas
js
aam
arpl
push
repnz
pop
pop
imul
(bad)
scas
imul
xor
scas
push
mov
jmp
and
(bad)
sbb
or
add
(bad)
idiv
mov
add
xchg
retf
xchg
repnz
scas
sub
jmp
repnz
retf
(bad)
fstp
test
cwde
jbe
gs
sub
sahf
fist
jno
je
jge
xchg
(bad)
in
test
mov
cmp
inc
fld
push
push
mov
cmp
jnp
addr16
cmp
mov
sbb
push
mov
cmp
mov
les
xchg
mov
ja
out
jge
mov
mov
mov
mov
xchg
sub
lods
xchg
or
loop
std
xchg
pop
mov
popa
in
lahf
dec
or
pop
mov
std
sub
inc
mov
fwait
int3
call
push
pop
mov
mov
test
out
mov
add
in
dec
int3
xchg
lods
push
fcom
aad
mov
dec
pushf
cmp
pop
scas
aad
test
std
shl
and
push
fst
add
xchg
out
jp
mov
inc
and
cli
clc
imul
fimul
ja
inc
dec
xchg
std
mov
lock
mov
push
(bad)
into
or
or
cmp
jbe
jp
bound
data16
retf
lea
xor
test
sbb
ror
xchg
out
es
fwait
lock
lods
push
mov
call
cs
or
arpl
sub
cmova
xchg
ins
mov
and
jmp
mov
es
cmp
mov
mov
or
(bad)
icebp
fnstenv
mov
sbb
jmp
stc
repnz
shl
popf
sbb
rcr
mov
mov
xchg
enter
sub
leave
aam
nop
call
cmp
mov
and
hlt
lea
mov
call
sti
popf
pushf
mov
jle
add
jo
shl
add
stos
xor
out
popa
ret
mov
icebp
lock
add
fadd
xor
and
sub
pop
cmp
and
pop
cld
mov
xchg
das
shr
(bad)
leave
adc
dec
scas
mov
and
in
stos
test
adc
xchg
inc
xchg
ret
rol
test
push
test
ds
push
sub
cmp
xchg
mov
adc
and
dec
and
cwde
jle
cmp
js
add
hlt
ins
popa
push
inc
or
inc
sbb
mov
xchg
addr16
sbb
js
jecxz
iret
(bad)
out
out
xor
ss
jnp
pop
aad
and
jecxz
mov
add
enter
mov
ret
add
inc
push
add
mov
leave
stc
lods
in
xchg
mov
or
xor
add
mov
pop
dec
sbb
ss
mov
push
aam
mul
loop
and
fadd
sbb
adc
push
sub
cmp
pop
jbe
popf
into
jp
loopne
int
in
pop
sub
shl
push
call
xor
mov
lods
cmp
add
mov
lahf
repz
out
in
push
icebp
sub
jo
ins
std
aad
or
fisub
loopne
and
push
cmps
jmp
std
cmps
cmp
dec
sbb
xchg
push
dec
scas
pop
push
xchg
push
sar
call
das
pop
ss
sbb
jmp
not
mov
dec
(bad)
shr
mov
sub
inc
xchg
dec
dec
jge
lock
jp
pop
push
and
jb
or
sbb
pop
push
xor
lods
pop
cs
cmps
and
pop
push
aad
rol
ficom
inc
fs
sbb
aas
repnz
sti
in
cld
push
mov
pop
call
or
pop
xor
dec
inc
xor
inc
jecxz
aam
repnz
ret
mov
and
cmps
cdq
arpl
mov
shl
or
shl
retf
call
rol
popa
inc
scas
outs
mov
hlt
mov
shl
(bad)
repnz
scas
imul
jmp
push
add
pop
or
aad
in
xor
fild
fmul
mov
ds
jmp
int
shl
or
in
jp
mov
leave
dec
pop
pop
pop
sbb
sbb
(bad)
cli
dec
inc
call
mov
xchg
pop
ret
mov
shr
aad
mov
nop
jnp
cmp
shld
out
sbb
imul
sub
ins
fwait
fwait
sub
lods
mov
jb
mov
add
cmp
jge
mov
push
loope
fs
xor
and
ficom
(bad)
nop
rol
movs
add
fdivr
fcmovb
arpl
mov
(bad)
mov
sar
enter
ins
add
or
sub
(bad)
xor
xlat
jmp
push
outs
popa
sbb
or
or
adc
repnz
jle
cmc
icebp
mov
int
xchg
dec
jmp
pop
inc
inc
sbb
loope
and
xchg
in
push
sbb
cmc
hlt
pusha
xchg
sub
je
scas
jg
dec
call
mov
(bad)
mov
mov
(bad)
cmp
loope
das
mov
cmp
in
fiadd
icebp
movs
fwait
cdq
stos
push
loope
dec
aas
inc
adc
mov
sub
fnstsw
hlt
push
push
mov
mov
and
scas
test
(bad)
pushf
sub
and
sar
test
leave
test
jno
add
in
fdivr
mov
push
dec
pop
cld
std
inc
jmp
js
cmps
dec
dec
movs
out
repnz
mov
pop
loope
stos
dec
pushf
repnz
stos
add
xchg
aam
adc
add
jne
imul
leave
add
test
ins
dec
cmp
sbb
xchg
fisttp
inc
imul
pop
je
jp
jns
sar
retf
push
sar
xor
mov
movs
jns
xlat
push
xchg
inc
in
sbb
out
push
push
call
jno
inc
(bad)
xchg
(bad)
movs
std
fwait
enter
mov
jge
cmp
mov
mov
fucomi
sti
cmp
dec
in
xchg
mov
xchg
or
je
mov
ins
push
adc
jb
mov
pop
jb
pop
xor
int
jno
mov
je
ds
es
adc
jo
xor
xchg
popf
rcr
xlat
sub
sub
pop
(bad)
int3
pop
jae
jb
cmc
call
loope
fs
xchg
addr16
icebp
xchg
out
xlat
popa
(bad)
push
imul
sti
(bad)
sbb
adc
pop
fidiv
aad
push
dec
(bad)
jmp
popf
and
xor
clc
pop
cwde
add
shl
(bad)
adc
pop
jge
dec
sub
xchg
icebp
fsub
push
jg
cmp
int3
sub
sar
iret
(bad)
xlat
sub
pop
sbb
xchg
ds
sub
mov
xchg
ss
jecxz
mov
scas
(bad)
repnz
push
mov
aad
xor
in
pop
sbb
sbb
xchg
js
pusha
cmp
repnz
gs
sub
fcmovnb
out
cmp
mov
fistp
and
or
cmp
hlt
out
adc
ret
std
call
and
mov
jecxz
inc
sub
adc
jge
xchg
and
outs
adc
mov
mov
xchg
popf
test
jb
mov
mov
or
jnp
xor
pop
pushf
or
mov
sar
inc
cmp
pop
push
xor
xchg
fld
jp
pop
lods
push
lods
jle
inc
div
cli
ror
xor
out
adc
jp
and
add
out
mov
push
(bad)
rol
adc
cmp
sbb
inc
ja
jne
sub
fs
neg
mov
push
call
daa
mov
jmp
hlt
sbb
shl
or
mov
repnz
xor
movs
jl
and
pop
pop
fbstp
imul
inc
fwait
cmps
aas
dec
stos
or
lods
jmp
ficom
mov
jmp
cmp
jbe
add
sbb
sub
addr16
jbe
iret
mov
repz
loop
add
cmps
push
and
jecxz
sub
mov
or
jns
pop
jp
std
xor
xor
and
(bad)
retf
push
sub
mov
pop
iret
cld
movs
push
xchg
outs
xchg
ins
cmp
add
cmp
popa
fsubrp
or
lock
jnp
fcom
push
dec
in
retf
scas
inc
push
xchg
(bad)
mov
xor
mov
pop
push
addr16
cdq
jb
xchg
popa
or
push
je
cs
sub
(bad)
mov
cmc
lds
jecxz
push
push
movs
and
or
and
xchg
jb
adc
mov
test
les
pinsrw
or
div
loope
retf
loop
push
fs
loopne
inc
mov
dec
in
mov
lock
rcr
rcl
repnz
ret
pop
ins
dec
jmp
retf
push
inc
xor
ins
push
inc
fnstenv
into
push
inc
ins
dec
pushf
xchg
sub
push
cmp
xchg
out
xchg
rcl
or
push
add
sub
in
shr
cmp
mov
rol
stc
push
cwde
add
out
ficom
leave
or
mov
jp
imul
pusha
dec
in
push
mov
xor
loopne
add
out
stc
dec
arpl
sub
cwde
in
sbb
leave
call
xchg
mov
xchg
dec
pop
lods
mov
bound
into
call
or
mov
neg
mov
das
or
inc
sub
bound
lods
mov
and
mov
add
and
mov
inc
xor
dec
fs
cmp
mov
mov
inc
neg
dec
sub
in
mov
frstor
hlt
fisubr
psrlq
sub
call
push
addr16
jg
idiv
bound
int
fld
add
mov
mov
or
outs
(bad)
pop
inc
and
loope
mov
lock
cmp
push
sub
leave
shr
popf
xor
shl
or
fimul
push
mov
and
gs
(bad)
div
and
and
nop
pop
out
call
sbb
cld
ficom
pop
imul
add
stc
nop
hlt
mov
(bad)
pop
ds
jb
pop
jns
test
psrlq
sbb
call
jp
mov
xor
dec
push
push
cmp
dec
adc
and
fidiv
out
imul
adc
std
inc
or
mov
xor
sub
nop
scas
push
xchg
inc
mov
inc
outs
mov
nop
aam
jae
jns
rcl
test
movs
jp
sub
cmp
jp
pushf
ror
cli
(bad)
idiv
sahf
dec
stc
push
movs
in
int
xor
in
xchg
stos
test
test
jmp
mov
add
movs
imul
aad
jno
ror
mov
dec
or
jno
xchg
out
mov
les
in
aam
out
jo
iret
addr16
setno
mov
jb
movs
inc
ret
out
shl
adc
xor
test
sub
mov
jo
adc
xchg
ds
cmp
inc
call
addr16
or
fsubr
test
mov
push
dec
push
jp
sbb
xlat
mov
push
and
mov
sub
stos
stos
add
(bad)
loopne
mov
(bad)
aam
mov
fwait
shl
inc
add
sub
fld
or
inc
or
fnsave
sub
cmp
sub
and
add
mov
int3
adc
mov
xor
pop
or
sbb
inc
sbb
jo
mov
jp
pusha
sbb
in
jo
daa
add
je
push
xlat
in
iret
sti
stos
icebp
xchg
xchg
mov
out
or
sub
popf
in
into
arpl
pop
repz
ror
mov
lods
jecxz
jmp
into
push
push
add
push
mov
add
fcmovnbe
mov
sar
aam
test
mov
sbb
aam
mov
mov
xchg
push
jmp
adc
inc
std
xor
sub
es
stc
or
inc
jae
in
inc
test
scas
mov
pop
out
jmp
loope
retf
(bad)
mov
sbb
je
mov
ret
xor
loopne
add
or
fld
xchg
mov
test
sub
cmp
rcl
sbb
and
mov
mov
and
pop
push
inc
icebp
ins
xchg
sub
jmp
outs
jecxz
mov
ja
adc
dec
retf
and
xchg
lock
xchg
pop
pop
sub
dec
pop
rol
xchg
fwait
jl
push
mov
sub
cmp
test
jl
sbb
test
push
adc
xlat
add
add
popa
neg
mov
lea
mov
icebp
jb
fldenv
hlt
mov
xor
lock
jno
and
ret
push
(bad)
pop
push
ds
dec
dec
enter
jmp
or
sbb
test
add
push
ins
dec
or
dec
inc
cmp
aaa
ret
call
les
(bad)
inc
jo
sub
icebp
loope
mov
sub
xchg
mov
push
mov
lds
stos
adc
gs
or
push
mul
jmp
pop
popa
push
sbb
sub
iret
mov
daa
ret
lea
outs
jecxz
mov
hlt
sub
mov
aad
hlt
retw
push
movs
sbb
fbld
outs
jb
sub
or
sub
mul
lods
cdq
inc
push
jb
xor
mov
sbb
sbb
iret
clc
push
xor
push
ins
sbb
cli
xchg
dec
mov
cmps
mov
inc
nop
mov
shr
add
and
and
and
sbb
mov
jbe
sub
mov
push
xchg
adc
sub
(bad)
cli
cmps
stos
in
and
test
imul
out
mov
loope
pop
bound
cs
push
test
add
out
retf
push
aas
xchg
imul
mov
push
mov
call
rcl
loop
pusha
and
pop
inc
dec
ror
dec
mov
jns
mov
js
jmp
aam
aam
jae
xor
test
outs
(bad)
into
sahf
rcr
pop
retf
cmp
xor
mov
jl
pushf
or
push
int3
shl
add
cmp
push
push
push
and
or
ret
rcr
scas
repnz
add
mov
sti
sar
bnd
mov
or
sbb
repnz
add
push
jl
lods
mov
push
popa
lea
mov
ret
push
xchg
into
adc
push
cmp
jecxz
rcl
ror
dec
mov
dec
and
push
jmp
ficom
jo
imul
mov
sbb
jo
push
leave
fnstsw
lea
cmp
scas
jmp
daa
adc
clc
mov
add
jg
cmp
jecxz
cmp
sti
jns
shl
push
inc
nop
xchg
sbb
repnz
dec
das
test
inc
sub
xchg
iret
ja
cdq
pusha
mov
or
mov
stc
(bad)
xchg
pop
inc
add
jge
fdivr
adc
dec
adc
push
ins
or
push
ret
ins
xlat
xchg
sbb
inc
mov
mov
cdq
adc
sub
inc
loop
ds
mov
pushf
in
ret
inc
push
mov
loopne
jno
mov
int3
mov
push
inc
xchg
inc
(bad)
mov
xchg
stos
dec
mov
inc
mov
mov
mov
fs
xchg
(bad)
out
push
and
adc
dec
retf
dec
add
lahf
xchg
out
lahf
push
jle
mov
loope
cmp
xchg
pusha
jno
mov
add
sub
sub
sahf
cs
(bad)
push
jb
rcr
cdq
icebp
mov
mov
hlt
mov
out
or
outs
fcom
pusha
jae
call
and
mov
xchg
mov
push
dec
addr16
loope
xor
sar
dec
(bad)
cmp
mov
mov
imul
sbb
sbb
mov
xchg
adc
loopne
aad
stos
mov
hlt
sti
mov
fdivr
mov
pop
rcl
xchg
loope
or
dec
jae
scas
call
jo
retf
cli
rcr
or
subps
pusha
mov
es
jl
out
cmc
mov
jno
addr16
pop
inc
out
jbe
retf
dec
xor
add
lods
sahf
mov
dec
shl
out
add
scas
push
daa
mov
aaa
cmp
arpl
inc
sbb
test
loope
ffree
xchg
jg
les
xchg
and
jno
mov
jmp
sbb
and
lea
mov
cld
mov
mov
mov
stos
or
pop
mov
sbb
dec
sub
jp
addr16
push
and
mov
ret
mov
adc
std
push
cmp
mov
push
or
int3
xor
shr
nop
test
es
mov
cwde
lock
fwait
cli
sub
syscall
je
in
aas
imul
mov
mov
mov
sbb
cld
pop
scas
dec
retf
cmc
sti
xlat
daa
cwde
movs
js
jmp
mov
and
and
jae
sbb
mov
loopne
out
repz
sbb
mov
mov
aam
jbe
xchg
dec
scas
inc
and
dec
idiv
in
add
dec
and
xchg
push
sub
xchg
pop
jge
xor
jbe
repnz
mov
xchg
jns
shl
mov
dec
add
aaa
cmps
pop
push
je
rol
mov
xor
daa
aas
inc
(bad)
mov
jmp
jge
pop
push
loopne
jne
inc
(bad)
dec
aad
inc
xlat
add
stos
cmps
leave
loope
popa
inc
sahf
imul
jnp
arpl
(bad)
out
lea
lods
cmc
inc
cmp
into
loop
jbe
add
repnz
idiv
in
and
jbe
and
mov
js
and
imul
(bad)
mov
(bad)
mov
(bad)
cmp
movs
xor
jecxz
sbb
mov
lea
jmp
es
push
inc
mov
mov
sub
retf
add
xchg
in
iret
pcmpeqd
dec
movs
cmp
movs
add
(bad)
lahf
push
mov
arpl
stc
(bad)
ins
xchg
cmp
aad
adc
ror
and
xchg
lahf
std
pop
fild
jne
mov
jle
mov
divps
test
mov
or
aas
idiv
cs
cmp
imul
dec
retf
fst
ja
mov
sti
shr
mov
popf
(bad)
imul
mov
mov
repnz
xchg
xor
sahf
mov
mov
je
fst
mov
ret
inc
or
and
and
xchg
inc
and
gs
mov
push
inc
push
(bad)
push
mov
aam
jmp
jmp
jae
mov
(bad)
adc
push
or
cmc
push
fs
inc
xlat
xchg
pop
sub
(bad)
cwde
adc
shl
into
pop
push
xchg
or
enter
mov
dec
scas
bound
or
test
push
jae
adc
mov
xor
sahf
movs
movs
stos
(bad)
and
lods
lea
xchg
lods
xor
mov
xlat
mov
ja
push
cmp
xor
in
test
out
inc
jmp
outs
lods
(bad)
ja
mov
sbb
push
(bad)
leave
jmp
cmp
xor
cwde
mov
push
sub
leave
mov
dec
mov
or
cmp
rcr
inc
sbb
sti
sti
xor
mov
jecxz
pop
mov
dec
pushf
mov
ins
sti
cli
jp
xor
fst
cld
mov
loopne
iret
adc
in
mov
std
rcr
outs
jle
xchg
aas
pop
ficom
lds
xchg
sar
cs
jnp
(bad)
xlat
inc
cwde
push
ror
loopne
sbb
push
pop
or
and
inc
or
retf
mov
push
pop
dec
les
and
pushf
inc
xchg
jns
ret
cmps
dec
jmp
add
sti
cli
push
xor
and
push
ret
scas
outs
add
mov
xchg
sbb
(bad)
xchg
sbb
hlt
cmp
mov
ins
loop
push
fld
push
gs
and
cmp
mov
xor
xchg
push
pop
es
jmp
out
ins
adc
rcr
lds
push
xchg
jecxz
js
adc
xor
dec
loop
clc
inc
xchg
(bad)
sbb
addr16
cwde
aaa
mov
fidivr
mov
icebp
mov
mov
mov
lahf
punpckldq
xchg
add
jns
jns
pop
(bad)
add
add
lea
push
jp
push
leave
jmp
das
jnp
or
dec
call
push
jg
xchg
mov
xor
in
mul
dec
inc
sbb
call
js
and
aas
mov
jge
sbb
mov
iret
xchg
push
mov
cmp
lahf
jno
or
sahf
lods
rcl
(bad)
pop
bound
jmp
pop
mov
push
dec
pop
in
mov
xlat
mov
sti
push
pop
cmp
cmp
scas
mov
cmp
sar
sbb
xchg
push
cmp
mov
pop
push
sbb
out
xchg
push
pop
outs
jge
and
push
out
mov
movs
ja
cli
and
lds
jle
add
inc
and
inc
imul
pop
cld
pop
std
push
mov
adc
stc
into
lods
dec
(bad)
mov
pusha
and
sbb
test
(bad)
int
ficomp
inc
add
jns
pusha
adc
js
ret
idiv
or
imul
(bad)
or
std
fnstenv
nop
mov
test
mov
fidivr
cmp
lods
adc
lahf
pop
adc
fnsave
and
add
sar
js
fist
mov
adc
dec
mov
mov
scas
add
lds
adc
dec
cmp
sbb
into
cmp
jnp
or
adc
das
fcomi
aad
push
rcr
shl
push
call
aad
mov
frstor
sbb
fiadd
cmp
loope
les
imul
(bad)
jmp
add
fsub
shl
pop
(bad)
sahf
mov
push
dec
es
push
ror
mov
adc
out
cmp
out
mov
push
mov
(bad)
daa
push
jl
les
sub
jns
fidiv
mov
cmp
ror
dec
inc
ror
dec
out
idiv
leave
adc
mov
xor
dec
jmp
cwde
jmp
cmp
mov
mov
aaa
inc
sbb
pop
xchg
add
add
or
aam
add
std
sbb
ret
jg
dec
dec
mov
cmp
outs
cld
test
xchg
jle
dec
js
cdq
jl
and
sti
pop
mov
ins
outs
mov
sbb
(bad)
fbstp
fs
push
fidiv
dec
adc
sahf
push
or
sbb
movs
(bad)
iret
or
dec
ret
jle
sbb
les
pop
clc
xchg
in
in
clc
cmp
stos
js
and
jp
push
sub
dec
push
inc
enter
ds
pushf
loop
mov
outs
pop
xchg
add
push
arpl
xchg
(bad)
rcr
mov
jbe
fcmovnu
mov
and
(bad)
test
out
adc
mov
fistp
mov
xchg
dec
leave
cmp
mov
sbb
test
inc
in
ret
sahf
(bad)
pop
jnp
bound
pop
add
sub
and
jmp
les
cmp
adc
pop
push
mov
push
int3
arpl
lods
rcl
stos
mov
lds
movs
lds
js
ror
cmc
inc
push
es
ins
push
add
hlt
cmp
xor
jl
jne
or
popa
pop
pop
(bad)
cmps
or
(bad)
into
push
mov
aam
shl
jge
cli
nop
mov
aam
pop
out
ja
xor
add
push
push
fucom
xor
movs
inc
test
cmp
sub
cmp
or
(bad)
std
push
es
cli
cs
(bad)
loopne
das
sub
mov
in
dec
(bad)
fldenv
repz
mov
pop
fsub
mov
dec
mov
lods
sub
cmp
cmp
int3
mov
mov
dec
push
sub
ror
push
pushf
(bad)
sahf
add
inc
enter
popf
std
cmps
scas
repz
jmp
loopne
xchg
dec
rcr
sahf
mov
hlt
fst
int3
xor
jmp
dec
icebp
mov
and
cli
mov
or
retf
dec
jmp
push
and
scas
dec
hlt
test
ficomp
mov
mov
mov
inc
mov
mov
mov
or
adc
pop
test
loope
repz
xor
hlt
repz
test
dec
cli
and
mov
shl
inc
enter
mov
data16
cmc
leave
cmp
retf
mov
arpl
mov
xchg
cmps
mov
pop
dec
in
xchg
mov
fisub
aaa
xor
pop
mov
pop
dec
and
(bad)
mov
jno
mov
ret
int
mov
sub
repnz
pop
or
cmc
daa
add
mov
stc
cwde
outs
popa
push
aas
shl
cmps
jne
out
mov
jp
xchg
adc
(bad)
daa
sbb
cmc
rcl
cld
daa
cdq
fstp
and
or
jo
fnstenv
and
js
adc
push
div
(bad)
shl
nop
add
rol
mov
sahf
movs
fst
jne
pushf
jae
jmp
jno
adc
fbld
cmp
push
call
cmps
xchg
or
xchg
add
jl
push
jb
mov
mov
mov
fdiv
test
and
out
mov
cmp
mov
(bad)
jg
jle
ins
push
mov
push
or
pop
or
loopne
push
int3
scas
scas
hlt
repz
mov
(bad)
int
shl
xchg
and
cmp
outs
push
int3
dec
xor
or
jbe
retf
mov
jno
or
add
mov
push
mov
outs
xchg
scas
sub
(bad)
fnstcw
xor
icebp
icebp
pop
loopne
sbb
xor
cmp
enter
jnp
or
cmps
mov
nop
dec
movs
pop
stc
out
mov
inc
fcom
mov
or
cwde
pop
xchg
rol
cs
stos
pop
add
dec
mov
ds
loopne
fst
or
jo
xor
xchg
jnp
push
fs
and
push
test
or
imul
or
clc
loope
mov
jl
aam
popa
xchg
loopne
pop
daa
or
nop
rcr
sahf
sar
scas
mov
fcmovnb
into
pop
es
mov
xchg
jbe
pop
stos
mov
mov
mov
jmp
nop
movs
ss
pusha
adc
stos
add
cmp
cmp
out
cli
outs
cmps
repz
inc
pop
cmps
pop
sti
mov
xchg
stc
xchg
stc
sbb
push
hlt
xchg
nop
push
test
pop
lods
push
retf
das
mov
rol
and
pminsw
cmp
dec
js
(bad)
and
xor
repnz
loopne
cmp
fs
std
std
xor
xor
cmps
call
je
cmps
movs
jmp
shl
std
inc
je
dec
loopne
imul
cmp
push
inc
addr16
cdq
test
repz
push
jae
repnz
mov
dec
push
rcl
scas
pop
fdiv
push
sbb
movs
xor
jecxz
pop
push
pop
repnz
(bad)
add
pushf
mov
push
mov
std
test
outs
add
adc
push
retf
jg
lods
scas
or
xlat
jge
(bad)
jbe
pop
push
cmp
stc
call
scas
and
adc
sub
adc
aaa
mov
bound
jne
(bad)
in
inc
pop
mov
stc
loop
js
repz
pop
out
inc
inc
outs
in
leave
cli
out
es
sbb
push
sub
and
or
sbb
lea
sar
jnp
mov
sub
std
loope
mov
sbb
dec
in
stc
sbb
into
sub
ficom
mov
pop
and
(bad)
xor
int
push
sbb
dec
push
jnp
movs
or
stc
mov
xchg
call
out
push
jo
test
dec
pop
aad
mov
jp
xchg
outs
pop
xchg
in
sub
repnz
mov
xchg
inc
inc
pop
sub
(bad)
dec
cmp
sbb
add
cli
xchg
ins
add
sub
mov
xchg
jb
cmp
ja
add
mov
inc
jo
xor
pop
sbb
or
jb
mov
pop
(bad)
rcl
mov
ja
add
inc
mul
and
sahf
aam
sub
add
push
mov
jle
dec
inc
inc
inc
cmp
aam
and
sub
loopne
mov
ret
ja
push
cmp
adc
andnps
mov
pop
repnz
ficom
sti
add
neg
dec
xor
push
pop
test
xchg
int3
aaa
dec
dec
xor
dec
ficomp
call
pusha
jns
rcl
mov
je
fidiv
cli
xor
sub
inc
jns
call
fnstenv
call
push
cmp
jp
mov
xor
sub
leave
es
add
mov
mov
stc
les
cmp
cmp
in
mov
xchg
sti
fidiv
ret
int
mov
daa
lea
push
inc
neg
ja
aas
enter
clc
push
retf
fisubr
pop
ss
leave
out
cmp
test
cmps
xchg
xor
ret
(bad)
sub
adc
inc
add
aaa
xor
fwait
pop
fimul
inc
lahf
bound
mov
xchg
dec
push
sbb
and
push
sbb
cmp
mov
cmp
(bad)
mov
inc
or
sub
add
loopne
push
xchg
dec
push
push
push
imul
and
fistp
adc
sti
cmp
push
inc
out
sub
rcl
shl
xchg
ja
addr16
ficomp
in
loope
ins
xchg
or
rcl
mov
jbe
add
pop
cmp
xlat
ret
push
scas
ins
inc
sbb
pop
xchg
nop
pusha
sbb
fst
add
call
dec
mov
or
pop
push
ficomp
enter
std
sub
dec
push
xchg
fist
push
aam
jl
stos
inc
mov
int
xchg
imul
jg
pop
add
add
mov
ss
add
xor
call
mov
inc
(bad)
data16
or
ins
pop
mov
nop
mov
lock
and
std
sbb
add
(bad)
jge
pop
inc
inc
mov
push
sti
fs
or
fisttp
push
out
out
xlat
push
lds
sub
push
movs
adc
aad
mov
mov
jae
pop
xchg
add
fwait
in
fadd
ficomp
mov
repnz
push
mov
movs
iret
dec
push
push
add
mov
push
xor
daa
and
ret
xchg
fild
cmp
push
jne
ss
pop
pop
ret
int
push
pop
aad
dec
out
lock
fdiv
hlt
pushf
sbb
movs
mov
in
(bad)
jnp
jecxz
retf
cwde
test
js
sbb
(bad)
movs
dec
pop
mov
jle
pop
(bad)
sahf
cmp
cmp
jae
(bad)
pusha
(bad)
pop
add
repnz
aad
jo
cmps
push
arpl
push
ret
pop
mov
push
test
xor
repnz
sahf
and
ins
add
(bad)
fsubr
ja
xlat
ins
dec
mov
jg
jnp
or
pop
outs
xor
sar
outs
push
jbe
mov
jno
out
dec
loop
mov
xchg
enter
or
outs
xor
or
pop
lods
pop
pusha
cmps
test
aaa
stos
lock
fwait
or
inc
js
xchg
out
adc
cmp
dec
enter
lds
add
bound
leave
push
xabort
in
sub
jge
push
jne
cmps
xor
add
cdq
cmp
popa
jmp
fdivr
inc
adc
daa
adc
(bad)
test
mov
jnp
popa
loope
dec
xchg
pop
cmp
neg
and
or
sub
icebp
cld
dec
popa
repz
adc
jg
jecxz
mov
dec
shufps
sbb
movs
imul
sub
ror
adc
scas
mov
mov
nop
dec
bound
sub
and
lea
cwde
call
push
inc
(bad)
mov
aad
repz
cmp
mov
aam
jecxz
fadd
mov
push
mov
jno
sbb
cmp
cli
or
cmp
pop
add
ins
es
xchg
popf
out
jp
sbb
test
test
out
adc
xchg
xchg
pop
les
adc
shl
pop
or
push
adc
mov
(bad)
cmp
jg
test
push
sub
gs
mov
mov
xchg
icebp
mov
imul
call
mov
push
pop
xchg
or
mov
test
ins
fst
or
out
xor
mov
imul
xor
mov
enter
push
push
fidivr
or
ror
jmp
outs
mov
sbb
dec
jo
pop
outs
arpl
cmp
(bad)
cmp
xor
cmp
inc
xor
or
lods
pop
fadd
push
jmp
jnp
stos
scas
sub
(bad)
iret
loope
outs
xor
sub
sub
push
jno
dec
inc
inc
jae
rol
push
sbb
sbb
jmp
jge
lock
pop
add
(bad)
call
xor
bnd
inc
xor
and
mov
in
inc
inc
jge
ror
or
pop
cmp
call
pop
or
mov
lahf
pop
ficom
cmc
arpl
cs
rol
ret
stos
(bad)
adc
pop
and
in
out
lock
retf
xchg
ins
fdiv
lock
sub
cmp
(bad)
popf
into
sbb
test
pop
inc
mov
(bad)
stos
(bad)
shl
(bad)
dec
pop
mov
or
xchg
adc
mov
xchg
jg
mov
xor
xor
adc
mov
pop
mov
imul
xor
xor
cmp
jne
out
adc
dec
inc
gs
lds
imul
fadd
hlt
leave
out
jns
dec
sub
shl
xchg
test
sub
jmp
out
xchg
jo
frstor
sti
xchg
mov
call
and
sub
mov
mov
fwait
xlat
fcmovu
jge
dec
retf
into
sub
fsub
pop
aam
dec
and
mov
sub
inc
adc
(bad)
ins
add
ja
retf
inc
sub
(bad)
clc
xchg
fstp
mov
adc
inc
fst
sub
inc
ins
sbb
adc
ret
jae
inc
addr16
pop
sub
loopne
(bad)
bnd
push
je
arpl
lock
xor
std
cld
fwait
pop
pop
pop
sub
pop
xchg
cmp
jns
mov
push
xchg
dec
jno
rol
mov
and
xor
dec
mov
fs
and
dec
call
pop
out
mov
fimul
dec
inc
bound
add
cmovno
inc
push
fsub
(bad)
or
fst
mov
cmps
and
aad
inc
sub
dec
hlt
sahf
leave
and
clc
outs
fmul
adc
cld
leave
and
hlt
push
add
gs
in
loope
fadd
mov
mov
loop
push
aam
sub
inc
push
cmp
adc
cmp
sub
add
inc
clc
adc
out
xor
pop
sbb
scas
inc
push
imul
jmp
mov
push
clflush
push
aas
lahf
in
mov
sub
fisub
sub
aad
push
push
inc
mov
das
xor
mov
adc
pop
mov
cmp
(bad)
in
mov
pop
loope
cmp
sbb
out
push
sar
cmp
dec
out
or
push
jbe
sub
pop
aas
imul
dec
add
stos
retf
lods
xor
loop
cmp
mov
jmp
retf
sbb
or
mov
xor
lods
fcmove
or
rcr
xlat
add
mov
into
je
add
jns
xchg
(bad)
cmp
movs
in
dec
and
sub
xor
cwde
or
sub
sti
sahf
jge
rep
pop
in
lods
sti
cmps
and
push
push
pushf
rol
cmp
gs
fwait
xor
rcl
(bad)
adc
mov
(bad)
push
imul
pop
rcl
adc
mov
xlat
lods
(bad)
xlat
add
mov
cmp
sub
mov
inc
adc
mov
push
aad
pusha
test
retf
and
lock
adc
dec
out
add
ror
pushf
jmp
mov
inc
dec
add
leave
ss
fs
adc
cmc
cmp
(bad)
sub
in
push
std
pusha
fnstenv
lods
pop
sub
test
sti
mov
pop
push
push
mov
dec
fiadd
xchg
daa
hlt
jmp
icebp
dec
out
sub
adc
mov
jp
(bad)
out
or
test
les
out
imul
mov
cwde
inc
bnd
enter
mov
cmps
jo
shl
iret
das
push
sbb
push
loop
fstp
jmp
pusha
pop
jmp
add
call
add
test
mov
mov
or
fnstcw
enter
pusha
movs
lahf
dec
and
cmp
(bad)
dec
(bad)
int
mov
push
mov
test
(bad)
shr
cld
cmps
in
je
pop
ret
js
adc
inc
dec
push
sub
mov
call
in
mov
js
pop
retf
mov
shr
dec
repnz
xchg
movs
arpl
stos
mov
xchg
xchg
xor
pop
cld
outs
rcr
bt
push
(bad)
out
stos
lods
fiadd
mov
jecxz
cmp
cmp
push
sbb
nop
or
add
inc
mov
and
push
push
out
shrd
outs
add
clc
mov
addr16
adc
mov
rcr
fst
adc
mov
inc
ins
mov
inc
in
or
pusha
pop
stos
mov
xlat
push
inc
sbb
imul
(bad)
cld
and
push
ja
shl
xchg
inc
fsub
or
loopne
push
in
push
push
and
inc
sbb
cld
jmp
pop
mov
pop
icebp
stc
pop
push
scas
call
or
adc
inc
cmp
shr
clc
cmp
jge
mov
mov
xchg
inc
stos
out
push
loope
cs
push
mov
das
inc
adc
sbb
adc
pop
xchg
clc
inc
pop
adc
fisub
ins
std
mov
outs
shr
dec
sbb
aas
mul
jae
shl
adc
sbb
xchg
repz
ror
stos
aas
dec
shl
jno
shl
cmps
xchg
mov
fidiv
into
jg
sbb
(bad)
and
in
fstp
leave
adc
cdq
sbb
push
nop
inc
xor
sbb
adc
icebp
add
mov
imul
jbe
xchg
test
daa
xchg
push
xchg
sub
and
or
stos
and
add
std
jb
pop
shr
iret
mov
sbb
les
xchg
iret
out
push
retf
rcl
mov
stos
jbe
and
lds
mov
pop
pushf
mov
push
xchg
cmp
cwde
add
stc
idiv
mov
nop
or
push
es
cmp
cmp
call
into
je
inc
shr
push
ret
xchg
jne
jmp
cmp
add
in
inc
pusha
inc
or
lods
sbb
retf
xor
fwait
jle
xlat
sub
scas
shl
jno
clc
out
add
js
xlat
in
aaa
push
jbe
dec
sub
cdq
(bad)
fstp
and
ins
mov
jae
shr
inc
fiadd
imul
hlt
jns
sbb
mov
push
in
push
pushf
pop
loope
adc
out
ins
jnp
add
jge
push
sub
ret
mov
bound
nop
(bad)
cmp
pcmpeqd
sbb
fbstp
leave
dec
sub
jmp
ins
bound
adc
mov
(bad)
ds
neg
jg
and
gs
jecxz
cmp
shr
jb
test
jmp
ins
dec
bound
in
retf
mov
mov
dec
inc
jbe
popf
mov
daa
hlt
es
mov
mov
(bad)
retf
cmp
(bad)
(bad)
clc
adc
cmp
mov
and
shl
push
popf
sub
sbb
out
enter
fwait
sbb
or
adc
add
je
movs
(bad)
sbb
fs
pop
outs
std
ss
or
add
mov
xor
adc
into
push
movs
rcr
mov
and
add
dec
mov
das
(bad)
cmp
adc
leave
pop
ss
mov
int3
mov
mov
push
sbb
mov
lods
retf
daa
mov
pop
es
and
call
inc
cmps
not
jl
loop
and
das
iret
jo
repz
pop
mov
mov
dec
xor
ds
into
jae
les
popf
lss
mov
xchg
push
jmp
or
jmp
and
mov
jb
js
add
adc
iret
jbe
ffreep
add
mov
jns
xlat
stos
jmp
and
(bad)
leave
or
pop
hlt
sti
and
pushf
(bad)
stos
cmp
dec
cs
dec
xor
loop
std
(bad)
xor
sti
and
ja
inc
loope
jle
or
outs
pop
(bad)
and
cld
and
dec
mov
pop
sub
jmp
cmp
adc
sub
(bad)
fdiv
std
retf
jmp
jbe
mov
inc
mov
xor
xchg
jne
out
pop
push
dec
aam
inc
ror
mov
add
cwde
(bad)
cmp
leave
lods
ds
rol
push
in
add
outs
out
sbb
loop
loopne
jl
or
test
jg
mov
mov
sbb
pop
xchg
(bad)
mul
sub
stc
(bad)
stc
push
push
lock
add
ins
jmp
ins
push
dec
add
mov
test
mov
inc
push
mov
push
mov
pop
or
sbb
adc
sub
aaa
jbe
push
jo
push
(bad)
repnz
pop
sub
mov
dec
xchg
popf
iret
leave
loope
mov
enter
(bad)
lea
mov
inc
adc
push
jmp
ret
in
std
adc
cmp
push
ja
jo
add
(bad)
scas
and
sub
add
mov
pop
adc
ins
not
mov
es
retf
xchg
les
movs
sbb
shr
bound
imul
shl
or
mul
mov
mov
rcl
in
xor
pusha
add
aas
mov
bound
mov
cld
nop
in
jae
lods
repz
jmp
ins
shr
movs
shr
or
mov
fucomip
fbstp
arpl
out
add
xor
aad
test
pushf
test
pop
(bad)
retf
jns
or
cmps
dec
repnz
jo
call
fsubr
jg
fwait
scas
call
test
and
push
test
mov
retf
mov
adc
fadd
or
lods
add
push
nop
xchg
sub
mov
adc
pop
add
fstp
inc
dec
mov
add
das
mov
cmc
pop
aad
imul
sbb
ja
shl
xchg
jns
fisub
call
nop
inc
int
jae
das
aam
cmp
das
in
mov
fwait
in
mov
inc
(bad)
jge
and
xor
push
sub
cmp
xor
or
sbb
movs
pop
and
aaa
loop
test
pop
mov
lds
pmaxsw
fstp
and
xlat
js
int3
jg
mov
out
cmp
call
add
jmp
sbb
loopne
sbb
cmp
jle
mov
loop
clc
and
sub
hlt
outs
daa
adc
or
xor
enter
jmp
icebp
lods
mov
ss
stos
rep
shl
xchg
fisub
(bad)
mov
aam
aaa
aad
sbb
clc
leave
inc
or
add
out
and
movs
add
mov
fidivr
inc
add
mov
inc
idiv
adc
aam
push
and
jl
or
call
xchg
sti
xchg
adc
fwait
retf
sub
jns
mov
leave
mov
scas
call
mov
imul
scas
sbb
pop
icebp
xor
xchg
pop
mov
aad
fnstenv
in
or
shl
or
jp
sub
ret
mov
jae
ins
mov
jg
jns
pushf
test
cmp
inc
std
mov
push
inc
xchg
fst
mov
enter
std
sar
fstp
and
test
pop
mov
inc
or
clc
dec
aam
adc
std
pop
xchg
xor
cmps
dec
xlat
dec
in
int3
pop
pop
cli
dec
cmp
adc
dec
out
dec
jle
cdq
out
imul
sahf
js
(bad)
xchg
and
scas
sub
cmp
mov
dec
xor
cmp
pop
jne
daa
pop
jbe
push
mov
cld
es
js
pushf
dec
unpckhps
std
inc
pop
sbb
mov
sbb
cmc
jl
das
inc
lds
and
mov
loopne
(bad)
pop
repnz
or
pop
nop
xchg
push
jge
lods
dec
xor
mov
mov
jo
rol
pusha
xchg
cwde
dec
loop
and
nop
imul
popf
or
adc
(bad)
mov
or
dec
add
das
push
jl
push
mov
int3
ins
gs
lds
push
jg
(bad)
jl
mov
mov
leave
nop
xchg
rcr
jne
sti
sbb
mov
xchg
xchg
arpl
xchg
daa
in
stc
mov
or
retf
outs
push
aam
inc
call
sub
xchg
(bad)
scas
push
jg
in
jecxz
push
xchg
add
pop
push
movs
lods
adc
(bad)
lock
cmp
and
loope
in
pop
inc
push
ret
lods
adc
push
clc
data16
add
pop
inc
mov
cs
test
mov
lea
inc
jbe
repnz
das
push
fidivr
sub
loop
xchg
jl
xor
cmps
sub
mov
adc
push
xor
sahf
adc
dec
jbe
sbb
mov
mov
mov
pop
paddusw
mov
bndstx
scas
mov
leave
ficomp
lods
cmp
ds
mov
add
test
idiv
clc
push
shl
dec
mov
add
cdq
gs
xor
sbb
pop
or
sbb
mov
and
xchg
fidiv
addr16
hlt
outs
(bad)
cli
ror
lgs
mov
test
jmp
xchg
add
bound
dec
xchg
push
cwde
cmp
repnz
out
shl
xchg
ret
or
sbb
mov
push
push
stos
rcr
push
xor
not
lods
xor
mov
cmp
cmp
das
xchg
int3
cmps
stc
dec
add
mov
push
das
xchg
sub
pop
xor
shl
xchg
jg
mov
xchg
leave
mov
outs
sub
mov
or
inc
les
or
sbb
push
jl
jmp
fldenv
mov
in
hlt
fsub
popa
pop
mov
mov
in
mov
xor
out
(bad)
inc
mov
pushf
push
retf
fild
push
lahf
sti
or
sub
jae
not
std
cmp
je
xlat
inc
and
pop
ins
jp
test
mov
xor
in
test
inc
daa
enter
ret
int
mov
inc
pop
popf
call
dec
dec
dec
mov
sub
mov
dec
dec
xor
aam
or
test
mov
(bad)
sub
push
ret
hlt
push
or
pop
into
lock
lods
mov
push
push
dec
add
push
out
imul
xchg
repnz
pop
fist
sub
outs
add
adc
aad
jne
pop
cs
jo
add
sahf
or
in
mov
pusha
sbb
mov
sti
in
jns
aad
frstor
mov
shl
imul
inc
sub
dec
mov
enter
retf
aaa
xor
clc
and
add
jp
jnp
pusha
fistp
mov
arpl
retf
pop
xor
jne
xchg
mov
pop
add
cs
int3
xchg
add
xchg
cwde
push
sbb
cli
pop
adc
lods
int3
xchg
or
mov
adc
push
jge
push
retf
addr16
inc
add
bound
rcr
jbe
and
out
pushf
dec
(bad)
dec
add
inc
fsub
inc
out
(bad)
sub
cmp
jbe
inc
leave
fcomp
sub
jno
jle
sub
fld
push
stos
mov
clc
pop
dec
es
outs
mov
aad
push
inc
cmp
jp
mov
outs
fcomp
jno
dec
sub
imul
enter
les
sbb
or
fucomip
push
sahf
sar
pop
pop
ds
mov
outs
or
enter
repnz
jne
adc
fprem1
sub
jmp
sub
shl
jmp
fs
out
movs
inc
jno
push
push
mov
test
aad
mov
cs
fdivp
sub
jnp
or
inc
icebp
(bad)
xchg
mov
push
daa
mov
addr16
rcl
inc
cli
and
out
icebp
sbb
or
jno
or
mov
pop
mov
jg
push
inc
je
sar
mov
cmp
xchg
leave
test
fwait
mov
add
and
aam
aam
pop
fist
push
and
gs
sbb
push
div
sub
mov
adc
sbb
xchg
ret
cmp
push
(bad)
mov
cmp
test
jo
bnd
or
jmp
test
jle
dec
test
stc
inc
fild
jbe
or
(bad)
or
dec
(bad)
cmps
mov
test
test
sti
jnp
adc
xchg
test
std
push
repz
in
push
jb
xchg
jmp
test
(bad)
cmp
fst
pop
or
add
lds
adc
and
or
fadd
cli
cmps
cli
in
ret
xchg
dec
push
aad
mov
scas
out
or
cdq
pop
imul
cwde
mov
push
and
cmps
fimul
mov
es
loopne
adc
cld
push
aam
or
stos
add
aaa
jmp
push
mov
bound
inc
jge
mov
stos
mov
jo
push
pop
or
ins
fmul
cmps
pop
or
icebp
jae
jl
cmp
inc
cdq
aam
je
dec
sub
mov
clc
cmps
mov
mov
(bad)
ds
mov
iret
adc
ds
add
mov
pop
setbe
add
std
in
add
shl
stos
cli
sub
pop
lea
adc
or
pop
cld
fwait
mov
jbe
(bad)
jmp
into
pop
sub
int
cmp
and
jge
push
and
lods
dec
inc
je
cmp
fs
add
and
push
dec
shl
mov
mov
or
xor
add
pop
and
jmp
sbb
(bad)
cmc
dec
push
out
mov
or
loop
mov
mov
xor
sti
cld
sti
shl
test
adc
cmp
retf
in
inc
jmp
lock
sahf
sub
inc
xchg
push
pop
movs
cmp
cwde
loop
pop
mov
or
movs
dec
inc
aaa
push
stc
pop
pop
mov
pop
inc
xchg
movs
(bad)
mov
dec
push
mov
ins
cmp
push
test
fcomp
jo
mov
mov
inc
mov
jbe
inc
jae
xchg
jno
jbe
mov
sub
repz
retf
jl
mov
inc
push
fs
out
mov
ins
shl
mov
dec
add
mov
jae
fs
fwait
mov
mov
sub
ja
push
retf
inc
sbb
cmp
cmp
add
dec
popf
sbb
popa
les
punpckhbw
mov
dec
sub
pop
inc
shr
js
push
cmp
inc
sub
(bad)
inc
mov
jg
mov
int
and
movs
xchg
cmp
mov
lahf
push
cmova
popf
sub
adc
idiv
dec
js
call
int3
lea
cli
inc
mov
cmp
repnz
fsubr
dec
fimul
sti
xchg
clc
xchg
mov
jg
adc
or
inc
and
dec
test
lahf
gs
or
arpl
jo
pop
sub
out
dec
push
xchg
add
or
shr
adc
mov
jle
repnz
inc
(bad)
retf
add
pop
in
mov
and
xor
sbb
jecxz
call
or
xor
dec
and
ret
retf
les
ins
dec
cmp
(bad)
cs
gs
fistp
jo
or
int3
jecxz
jecxz
das
xlat
in
sbb
mov
rcr
nop
fwait
je
scas
outs
or
mov
jl
xor
stos
dec
push
cmp
sub
push
aaa
(bad)
sbb
dec
(bad)
and
rcr
fwait
pop
jbe
rcr
dec
mov
mov
nop
(bad)
mov
test
sar
mov
rcr
mov
push
xchg
pcmpgtw
sub
pop
jns
lods
and
and
loope
add
pop
add
push
ror
jp
mov
aam
repz
jl
dec
and
xchg
out
ds
(bad)
sbb
shl
add
mov
scas
or
xor
or
jb
xlat
cmps
popa
and
dec
add
out
mov
iret
jmp
push
(bad)
mov
out
pop
jnp
data16
sbb
mov
dec
int3
ss
push
ins
arpl
nop
add
xchg
sub
test
and
icebp
repz
xchg
jle
jg
dec
xor
in
in
repnz
outs
icebp
mov
cmps
test
iret
fstp
in
sub
shl
mov
mov
xor
js
xchg
push
jne
(bad)
in
cmp
icebp
cmc
sub
cld
mov
fs
mov
pop
jmp
pusha
mov
mov
mov
outs
loope
lds
mov
add
jmp
push
rcr
mov
sub
(bad)
push
mov
push
jnp
popa
fstp
repz
xchg
push
push
ds
data16
pop
adc
dec
bound
push
dec
mov
jno
xchg
xor
sub
jecxz
xor
cli
push
loopne
loop
sbb
les
(bad)
out
stos
pusha
jbe
lods
sub
test
jb
neg
mov
popf
retf
xchg
scas
push
vcmpps
dec
(bad)
and
sub
retf
push
nop
mov
loopne
push
outs
sbb
adc
out
data16
sub
push
push
dec
jl
aaa
xor
movs
or
stos
sbb
jp
mov
mov
(bad)
aam
aam
mov
xchg
jl
add
in
call
jg
int
sub
das
je
(bad)
adc
mov
sbb
(bad)
mov
adc
out
jl
cmps
or
test
mov
addr16
push
cwde
int
push
mov
lds
rcl
lock
pusha
loopne
inc
push
ret
call
xlat
inc
je
and
cmp
add
push
cdq
cmp
pop
(bad)
push
dec
inc
xchg
fstp
inc
push
xlat
xor
lock
adc
or
mov
test
sub
(bad)
out
inc
sub
pop
and
dec
sub
iret
js
in
jae
int
xchg
cmp
inc
ficomp
(bad)
xchg
jae
pop
setne
or
mov
add
sbb
popf
icebp
cld
gs
div
sub
ins
sahf
mov
outs
push
fimul
sti
add
cmps
dec
int
pop
mov
div
inc
adc
jmp
js
(bad)
and
xor
sub
adc
and
adc
sub
inc
jno
adc
sub
enter
mov
icebp
imul
in
js
add
stos
(bad)
out
call
nop
sub
stos
shl
movs
adc
xchg
mov
pop
or
and
(bad)
lods
add
sub
cs
(bad)
faddp
iret
loope
push
inc
retf
mov
jmp
mov
movs
push
jmp
jne
js
imul
imul
adc
mov
in
shl
sbb
mov
loop
(bad)
int3
out
(bad)
je
dec
cmp
loop
pop
jle
(bad)
jp
imul
imul
dec
(bad)
call
dec
add
sbb
dec
jb
cdq
adc
push
pushaw
ins
push
adc
in
dec
ror
xchg
dec
dec
mov
fsubrp
std
or
addr16
jbe
push
shr
sbb
loopne
icebp
inc
call
js
jge
js
enter
dec
fistp
in
aad
jb
xor
shl
out
fnstcw
xchg
loopne
mov
fstp
push
mov
xor
jge
jnp
sub
cli
lea
int
and
xchg
cmp
fdivr
and
lock
ror
hlt
ror
mov
cmp
int
add
sub
aas
lods
xchg
xchg
fist
retf
cmp
cmp
out
pop
(bad)
retf
inc
push
add
inc
imul
pop
mov
pop
cmp
jb
mov
pop
test
mov
jmp
fsub
pusha
push
push
(bad)
jg
jmp
pop
and
cmp
mov
imul
int3
sti
mov
xchg
mov
das
xor
cmp
or
aad
scas
(bad)
cdq
add
scas
push
add
xor
fdivr
loopne
push
mov
add
nop
pop
mov
test
movs
jbe
jbe
and
sub
aad
or
into
fisubr
cmp
mov
jno
test
pop
pop
pusha
jb
push
rol
cwde
dec
fldcw
jg
aad
test
js
movs
sbb
xor
loope
stos
jnp
(bad)
pop
shl
repnz
cmp
jmp
call
cld
dec
movs
aaa
jl
loope
repnz
sub
arpl
je
pop
push
jno
in
lock
dec
push
dec
loop
push
pop
dec
mov
fld
jnp
lea
sub
inc
call
in
leave
in
pop
dec
inc
out
sub
push
mov
and
pop
or
add
iret
xor
adc
mov
dec
mov
daa
ret
fldcw
in
rcr
inc
test
lods
outs
inc
into
fnstenv
and
cdq
and
shl
adc
icebp
inc
adc
xchg
add
pop
bound
movs
xor
sbb
sub
pop
xchg
add
out
mov
cmp
test
jmp
sbb
or
jbe
stos
in
jmp
ds
sbb
jne
xchg
mov
sub
mov
and
fdiv
fs
push
inc
ds
cwde
ins
mov
jg
pop
sbb
dec
push
sbb
daa
cmps
cwde
mov
scas
jno
repnz
lahf
icebp
ror
popf
popa
fucomi
xchg
aad
sti
xor
fiadd
loop
or
imul
fs
xor
add
lods
cli
and
push
cmp
std
popa
adc
iret
inc
stos
sbb
loope
add
xchg
fwait
lods
jns
retf
adc
inc
cmps
es
sub
lods
xchg
loopne
dec
sub
inc
push
loop
mov
lods
xchg
pop
xor
sbb
in
inc
xor
dec
sbb
scas
arpl
scas
cmps
repz
nop
push
out
xchg
add
je
ss
xchg
mov
inc
add
inc
add
movs
inc
fistp
jge
daa
adc
xlat
mov
push
mov
leave
fcom
imul
ins
test
div
add
cli
sub
cmps
lds
cmp
sbb
daa
lods
push
adc
(bad)
(bad)
sahf
sbb
add
or
mov
dec
movs
fnstcw
mov
dec
or
loopne
push
add
scas
inc
retf
rol
push
push
mov
xor
or
cld
(bad)
jnp
mov
jl
jo
retf
or
sbb
jge
mov
es
or
std
mov
mul
lock
mov
std
adc
js
int3
xor
add
mov
ja
and
(bad)
mov
cmp
cmp
add
adc
pushf
mov
mov
retf
movs
adc
xor
mov
sub
in
mov
push
or
aad
inc
enter
jmp
inc
inc
and
(bad)
sub
push
in
popf
dec
push
inc
sub
mov
xor
outs
icebp
pop
das
xor
push
lock
popa
es
adc
xor
loope
ret
sbb
mov
pop
pop
dec
imul
mov
cli
mov
or
neg
cmps
retf
push
sbb
cli
jecxz
cld
xor
cld
in
mov
push
mov
mov
add
jae
jecxz
outs
inc
mov
gs
out
sub
dec
movs
js
jbe
mov
xor
shr
(bad)
and
add
mov
ret
repnz
cmps
xchg
js
(bad)
js
es
cmp
or
mov
mov
inc
jns
xchg
inc
lods
xchg
jp
mov
cld
fsub
jb
ror
ins
sub
dec
scas
xchg
mov
ss
cmp
push
jle
out
jl
inc
ficom
stc
xor
gs
add
dec
pop
mov
add
push
(bad)
inc
jb
pop
test
jmp
pop
ins
aam
fiadd
inc
mov
popa
pop
and
xlat
jns
push
cwde
inc
dec
push
sbb
sbb
mov
dec
sub
test
xlat
mov
pushf
aaa
out
sbb
and
call
ss
ja
xchg
push
jecxz
lock
mov
jge
les
and
lock
retf
js
icebp
dec
cs
cmp
leave
mov
mov
out
rcr
mov
test
and
mov
push
leave
ja
dec
adc
int
loop
xor
lods
jns
enter
and
imul
out
mov
mov
leave
xlat
mov
xor
pop
clc
fstp
sub
fcmovnu
or
mov
ror
pushf
ja
fwait
adc
pusha
dec
xor
mov
retf
movs
inc
sub
div
sbb
cmp
mov
out
mov
mov
fsubp
sub
adc
adc
lahf
push
mov
adc
mov
pop
inc
das
(bad)
(bad)
jg
xor
jnp
out
sbb
add
call
ds
xor
ss
std
dec
sti
or
daa
mov
sbb
push
out
push
push
arpl
(bad)
(bad)
xlat
xor
retf
inc
and
(bad)
xchg
popa
dec
jb
mov
jb
pushf
stos
add
xor
adc
aad
call
loope
hlt
cmp
outs
ror
sbb
pop
into
sub
adc
daa
push
lds
leave
cld
imul
scas
int
fnstcw
add
(bad)
sub
xor
mov
xor
scas
sar
pusha
push
loope
scas
mov
jp
mov
pop
mov
mov
lock
aas
jnp
xor
lock
imul
into
out
mov
inc
push
adc
ss
xchg
cmc
fwait
rcr
aaa
sub
pop
xor
dec
pushf
lock
adc
fs
xchg
mov
inc
mov
mov
popa
cmps
jle
ins
pslld
and
cmps
add
cmps
push
movs
inc
mov
div
out
mov
cwde
aad
call
in
add
out
mov
iret
jnp
and
imul
test
xchg
stc
sub
stos
mov
dec
mov
push
inc
cdq
pop
hlt
shl
add
add
sbb
outs
ins
mov
jmp
out
stc
dec
jno
adc
movs
ficom
aas
clc
adc
addr16
push
mov
mov
mov
aad
les
retf
rcr
push
test
pop
adc
lods
and
rcr
out
test
or
or
je
dec
lods
test
jl
lds
sahf
das
scas
shr
add
sbb
fcom
and
or
in
pop
out
lods
ds
jbe
push
imul
icebp
dec
mov
or
mov
xor
scas
cs
aam
popa
nop
ret
gs
push
add
jmp
and
movs
xor
mov
dec
or
mov
out
xor
fimul
inc
es
cmps
and
or
cmp
es
lods
hlt
cmps
popf
xor
pop
aaa
push
mov
adc
stos
cdq
mov
leave
movs
stc
fist
dec
jle
fs
pop
out
in
mov
dec
std
scas
inc
jne
cli
popa
adc
cmps
arpl
mov
and
(bad)
(bad)
icebp
aad
dec
(bad)
js
dec
jo
(bad)
add
inc
pop
cli
arpl
shl
and
adc
push
les
xchg
sete
jne
call
push
mov
pop
fwait
xor
(bad)
xchg
push
scas
mov
(bad)
fcom
dec
cmps
or
mov
mov
add
push
lock
rcr
pop
pusha
cmp
pop
adc
sbb
nop
and
and
scas
hlt
sub
out
jle
sbb
jb
or
xor
inc
mov
pop
ja
mov
lea
pop
scas
pop
dec
mov
jns
and
push
dec
mov
add
fistp
daa
frstor
(bad)
sub
movs
movs
sbb
je
jge
cmc
fs
out
ret
or
dec
jp
sub
nop
dec
add
dec
jl
mov
adc
xchg
arpl
outs
cmps
fdiv
mov
xor
cdq
lods
xor
retf
push
inc
add
xchg
pop
xlat
mov
mov
pop
sub
inc
and
std
in
and
xchg
mov
stc
cmp
daa
fs
jne
div
call
call
lds
aas
mov
pop
push
sar
push
call
mov
popa
movs
or
xchg
cmp
enter
int3
xchg
int
push
dec
div
add
adc
in
add
jbe
ins
mov
dec
cmc
xor
pop
dec
stc
int
cmp
cdq
dec
test
mov
mov
imul
mov
scas
adc
fisub
jmp
pop
sbb
aaa
or
shl
cmps
aas
cdq
sbb
inc
add
test
jg
sbb
push
inc
addr16
movs
cmp
pop
sbb
jns
ss
sub
pop
(bad)
repz
test
jmp
call
jle
pop
push
adc
lock
push
repz
adc
mov
jns
or
pop
std
sbb
ror
enter
gs
adc
stc
sbb
add
jb
dec
js
cwde
inc
mov
enter
inc
sub
inc
adc
jmp
mov
inc
jmp
aad
or
loope
loopne
mov
push
fisub
js
not
xchg
lods
mov
push
int3
adc
jnp
mov
(bad)
iret
lods
inc
jo
out
cmp
inc
gs
std
aaa
fsubr
lods
daa
lock
mov
pusha
add
jge
iret
stc
pop
pop
jae
into
jge
jle
mov
jbe
dec
pop
jge
inc
aas
into
imul
mov
push
fistp
arpl
sbb
pop
add
lods
sbb
(bad)
cld
push
cs
mov
pop
scas
or
mov
imul
jno
dec
mov
mov
js
mov
add
add
(bad)
xchg
bsr
cmp
adc
sub
xor
jmp
je
sahf
pushf
stc
stos
xor
push
ja
and
nop
jb
jnp
and
pop
cld
test
cmp
repz
pop
jmp
adc
mov
cmp
inc
mov
jmp
mov
test
pop
stos
sahf
cdq
xor
jecxz
push
adc
(bad)
rcr
(bad)
addr16
jb
lods
imul
test
and
in
mov
in
retf
sbb
ffree
(bad)
gs
(bad)
or
add
cwde
(bad)
and
dec
xlat
and
scas
xchg
popf
jo
dec
cdq
gs
jmp
lds
mov
push
xor
into
pop
add
retf
push
xlat
leave
cmp
stos
cmps
inc
cwde
dec
daa
xchg
movs
dec
adc
retf
(bad)
push
push
fs
sbb
outs
fsubr
push
or
stos
fst
fdiv
or
inc
xor
aam
arpl
add
adc
in
mov
dec
sbb
mov
imul
fldenv
push
push
pop
push
loop
arpl
mov
fcmovb
aad
and
jmp
(bad)
(bad)
fst
repnz
fimul
adc
loope
push
inc
push
fidiv
inc
push
loope
push
add
jmp
inc
addr16
push
push
enter
and
mov
push
iret
mov
or
jno
sub
int
add
jp
or
pop
daa
sbb
out
pop
xor
pop
cmc
test
jae
and
ins
push
test
mov
mov
and
mov
or
and
popf
add
aad
jns
xchg
jge
imul
pop
or
pop
hlt
pop
sub
dec
ds
mov
inc
jl
scas
inc
jo
cmp
mov
mov
dec
lea
stos
mov
pop
pop
jl
aas
imul
cmc
loopne
pop
(bad)
nop
dec
enter
push
pop
aam
add
outs
lods
pop
imul
imul
lods
fbld
inc
mov
add
aad
inc
mov
inc
ret
lahf
xchg
xchg
scas
jo
adc
ror
xchg
xor
push
pushf
pop
ds
imul
out
call
pop
data16
jmp
and
jns
mov
mov
xchg
push
fst
mov
pusha
xlat
popaw
(bad)
nop
enter
sbb
scas
icebp
pop
ins
jmp
dec
shl
inc
gs
cmp
mov
icebp
nop
push
cmps
xchg
mov
dec
jno
shr
pop
xor
xchg
jno
xlat
xor
jmp
out
cld
lods
sub
push
sub
inc
push
fiadd
jne
stos
ja
aaa
int
aas
jnp
mov
xchg
xchg
or
mov
into
imul
(bad)
fnstcw
loopne
jmp
mov
mov
imul
repz
icebp
push
inc
mov
mov
jle
test
mov
lock
dec
lock
xchg
(bad)
rcl
hlt
mov
(bad)
cs
dec
aaa
(bad)
push
adc
cmp
lock
inc
or
loope
inc
adc
xchg
adc
push
int3
push
repnz
ror
retf
imul
test
enter
in
repz
test
sar
mov
sub
mov
pavgw
or
ss
jb
ja
cmp
pop
sbb
mov
mov
(bad)
loopne
std
cmp
mov
shr
test
sar
imul
in
fisub
jo
push
mov
loopne
es
pop
xor
sar
push
sbb
jne
adc
or
fnstcw
mov
push
xchg
bound
fidiv
push
inc
jo
adc
aam
jb
ins
aad
add
mov
push
ret
cdq
(bad)
sbb
(bad)
cmp
adc
cs
push
out
jl
mov
or
inc
pusha
jmp
pop
push
div
std
sub
into
cwde
repz
pop
stc
jl
mov
enter
mov
push
push
pop
adc
loopne
adc
sti
jne
(bad)
dec
cmps
popf
(bad)
movs
mov
mov
pop
xor
pop
pusha
les
sub
mov
lock
mov
sti
fwait
xchg
and
repz
cli
add
lods
mov
add
jbe
cmp
xchg
jnp
push
sbb
ins
out
inc
adc
mov
ret
je
ret
inc
in
mov
mov
xchg
(bad)
jle
scas
test
icebp
in
leave
mov
mov
xchg
mov
push
add
das
mov
pushf
dec
loop
cwde
dec
mov
std
mov
fld
ins
pop
and
inc
sbb
cld
mov
mov
mov
lods
add
jae
int
inc
imul
ins
mov
test
shr
es
mov
inc
int3
push
push
inc
mov
push
sub
inc
pop
icebp
iret
inc
sbb
push
adc
pop
jnp
int3
cwde
sbb
int3
mov
ss
stos
aam
mov
les
or
pusha
test
daa
jne
mov
or
mov
xor
out
addr16
mov
adc
arpl
adc
inc
cmps
fld
jp
cmp
pop
pop
sbb
jge
sub
add
ret
(bad)
mov
call
mov
aaa
dec
mov
push
hlt
rcr
adc
push
lods
mov
aas
cwde
dec
and
pop
inc
lahf
pop
in
dec
in
stc
nop
fistp
icebp
scas
adc
cdq
mov
cmp
pop
call
call
test
adc
(bad)
out
test
dec
cmp
out
inc
iret
loopne
inc
stc
cmp
dec
(bad)
cmp
inc
stc
inc
and
adc
mov
paddsw
push
mov
es
xchg
mov
nop
mov
scas
add
loopne
add
popf
repnz
push
lds
adc
push
das
push
cmps
add
pop
aam
mov
outs
lock
and
jmp
dec
gs
shl
sub
xchg
cmp
ja
lods
imul
dec
push
mov
movs
xchg
lock
sbb
mov
xor
rcr
arpl
int
push
or
sti
lods
mov
jno
mov
push
cmp
mov
es
mov
sbb
sbb
popa
mov
repz
pop
mov
aas
das
cmps
sbb
jo
sub
cmps
into
inc
ins
or
sbb
pushf
clc
ficom
pop
cmp
scas
cs
and
dec
sub
outs
daa
loope
les
cmp
imul
mov
mov
mov
xchg
xchg
xchg
bound
pop
and
and
inc
cwde
pop
test
add
jle
std
cmc
repz
mov
(bad)
shl
inc
push
add
dec
mov
pop
mov
pop
sbb
mov
and
leave
mov
les
stc
int
test
push
mov
sbb
out
jo
cmp
push
in
sub
inc
xchg
cwde
std
repnz
pop
or
lea
and
xor
mov
fdivp
push
jmp
xor
fmul
sub
cmp
aas
cmps
pop
cld
rol
xchg
and
loop
pop
xchg
in
movs
pop
shl
scas
data16
ret
sub
adc
adc
sub
mov
call
add
dec
dec
push
mov
es
mov
mov
jecxz
cmc
push
imul
addr16
pop
jmp
mov
pop
jp
push
pop
adc
in
pop
adc
sub
ins
add
mov
int
push
jecxz
out
cmc
pop
push
xor
xchg
sbb
movs
lahf
outs
test
and
inc
test
inc
pop
jmp
xor
mov
imul
pop
cmps
das
dec
loop
sub
cwde
push
stos
aas
ss
jmp
mov
ret
rcr
jae
jmp
(bad)
or
mov
subps
ds
lahf
stos
jbe
inc
push
or
pop
adc
outs
iret
test
sbb
cmps
inc
inc
stos
arpl
pop
rcr
mov
repz
aas
imul
add
das
cld
xchg
mov
and
int3
mov
outs
test
int3
data16
push
popf
aaa
sahf
jne
outs
pop
je
mov
xchg
xor
aam
lea
inc
mov
add
inc
data16
or
mov
sbb
fst
data16
cmp
sbb
adc
pop
and
and
(bad)
rol
mov
jmp
xor
dec
jb
cmps
shl
jae
push
lock
push
push
xor
ror
dec
mov
pop
adc
xchg
xchg
jmp
out
cmp
pop
sar
das
pop
xor
mov
xchg
jns
add
data16
add
adc
cwde
sbb
mov
pushf
sbb
loope
in
jb
xchg
push
mov
enter
fwait
inc
xchg
neg
popf
pop
in
icebp
mov
aas
jmp
xchg
inc
retf
dec
inc
push
leave
lods
nop
gs
jge
mov
adc
fisubr
cmp
xchg
mov
adc
or
sti
mov
mov
push
mov
sbb
xor
aas
mov
out
popa
loop
inc
aam
cmp
mov
xchg
add
cmp
movs
test
jmp
pusha
mov
jmp
ffree
movs
fcomp
pusha
pop
cmp
xor
mov
ds
popf
push
stc
sub
jbe
jecxz
sti
mov
xor
jg
imul
xchg
add
ja
push
rol
mov
inc
aas
or
stc
sub
dec
xchg
sbb
cli
inc
clc
dec
inc
mov
jle
mov
out
ret
mov
xchg
clc
(bad)
fist
inc
cmc
or
add
sti
(bad)
cmp
sub
js
mov
dec
inc
adc
push
inc
std
push
xchg
push
sbb
je
jl
dec
push
mov
and
ret
stos
fmul
into
mov
mov
stos
and
cmp
xchg
jmp
xchg
jmp
mov
mov
dec
fcomp
push
fadd
jo
daa
rcr
into
ret
mov
or
jns
pop
cdq
add
ror
inc
fnsetpm(287
adc
mov
jmp
cmp
retf
loope
stc
enter
inc
xor
dec
loopne
lahf
cwde
test
outs
dec
mov
cld
adc
popf
dec
movs
stc
inc
scas
add
xchg
stc
imul
fisttp
jge
in
adc
data16
dec
out
inc
je
sub
jne
add
xor
cmp
and
icebp
fst
stc
in
mov
push
lods
or
fadd
enter
imul
repz
and
or
call
pop
dec
lock
cmp
rol
outs
pop
dec
stos
aaa
cmp
xor
sahf
addr16
xor
cmp
lahf
add
push
mov
add
retf
mov
xor
in
pop
jne
shl
mov
ins
sub
inc
push
mov
(bad)
movs
cmp
add
push
xor
inc
hlt
fnsave
inc
je
je
test
xchg
mov
shr
inc
dec
sub
or
adc
add
popa
push
call
or
popa
(bad)
out
jmp
push
(bad)
jo
call
out
mov
lahf
int
pushf
loopne
mov
(bad)
test
pop
pop
push
out
push
add
cmc
inc
mov
xchg
jl
or
or
neg
sub
cmp
cli
cmp
or
fs
out
cdq
pop
jns
mov
bound
(bad)
loopne
enter
loopne
and
xchg
mov
and
adc
scas
mov
into
std
adc
out
dec
cmp
fistp
jg
and
test
fsub
pop
in
je
or
aam
push
and
inc
outs
mov
sti
ss
adc
pop
not
(bad)
ror
or
out
cmp
fwait
sbb
mov
push
xor
pop
mov
pop
into
add
lds
in
das
into
lods
imul
pop
cwde
jmp
push
outs
add
add
cmps
pop
push
lods
xchg
(bad)
xchg
jbe
pop
nop
inc
imul
imul
(bad)
repz
xchg
cld
or
dec
push
ja
mov
aam
cmp
push
out
sbb
cmp
gs
arpl
xchg
add
jae
push
icebp
mul
push
js
cmp
mov
lds
hlt
fsub
ror
inc
shl
jne
(bad)
jmp
inc
retf
imul
aad
popa
jb
shl
add
lea
xor
mov
mov
fimul
pop
push
call
mov
dec
dec
push
inc
scas
sub
bound
scas
push
cmp
sub
pop
cs
shl
inc
jge
imul
sub
push
int
push
adc
(bad)
cmps
dec
xchg
add
call
push
sub
pop
(bad)
fistp
xor
jmp
imul
mov
(bad)
xchg
neg
pusha
or
cvtdq2ps
call
adc
jmp
into
shl
pop
aaa
js
cli
cmps
jg
inc
sbb
outs
mov
dec
mov
add
xchg
shr
test
mov
leave
repz
(bad)
test
stos
add
adc
dec
xchg
inc
daa
adc
stos
jne
xchg
mov
out
and
dec
jge
iret
dec
and
push
(bad)
fimul
call
pop
push
xchg
sti
mov
ret
pop
repz
fldenv
cmc
or
ss
cli
pop
std
pop
xchg
shl
cmp
add
shl
cmps
pop
or
inc
cwde
popa
je
mov
daa
xor
inc
stc
scas
pusha
add
les
xor
push
in
sub
retf
push
inc
push
mov
into
stc
cmc
add
int
jle
ret
aaa
jecxz
clc
lds
pop
pop
out
adc
xor
add
jp
pop
ror
pop
imul
sub
fcomp
icebp
xchg
out
cli
xor
push
push
dec
cmp
xor
ret
rol
fisub
scas
mov
jnp
and
ss
movs
pop
cmp
mov
push
jl
dec
cmps
xor
sub
daa
push
adc
cmp
call
js
fstp
mov
not
fstp
pop
add
and
cwde
cdq
mov
jge
stos
lahf
and
sub
pop
push
jl
mov
or
push
xlat
sti
pop
add
dec
add
pop
cld
adc
add
int3
mov
lock
adc
fsub
rcl
popf
adc
jo
fwait
pop
mov
aas
inc
pop
push
fwait
(bad)
inc
scas
out
cmp
xor
dec
arpl
add
add
pop
arpl
sub
movs
sar
ja
(bad)
ins
adc
data16
ror
and
lea
mov
xor
je
call
inc
rol
jne
fstp
ret
fwait
pop
loopne
or
(bad)
cdq
add
shl
inc
add
cmp
and
mov
(bad)
cld
mov
jne
mov
adc
mov
sbb
mov
push
popa
mov
jns
fisubr
retf
ins
push
jne
(bad)
stc
inc
(bad)
(bad)
sub
aas
imul
mov
xchg
outs
jnp
jmp
jle
sbb
stc
xor
lea
scas
push
xchg
ret
popf
push
call
inc
jo
es
sub
sbb
fstp
dec
inc
mov
add
and
jge
cmp
retf
stos
mov
xor
add
sahf
je
lds
(bad)
retf
add
arpl
mov
cmps
jp
or
dec
push
lea
mov
loopne
test
add
cmp
xchg
jmp
cdq
xor
mov
and
jo
inc
rcr
and
aad
aad
cmp
jecxz
adc
jns
shl
sahf
sahf
mul
dec
push
dec
test
push
dec
scas
push
(bad)
addr16
inc
xchg
(bad)
sar
xchg
mov
sbb
adc
pop
dec
test
nop
and
dec
retf
xchg
rcl
inc
nop
mov
cmp
xchg
das
sbb
bound
pop
adc
dec
aas
and
test
cmp
std
stc
and
scas
dec
fld
out
out
inc
jne
xchg
jge
dec
jno
int
mov
daa
xchg
sub
pusha
cmp
dec
and
adc
ret
cmp
repnz
jl
idiv
cmp
out
ficomp
push
int
outs
rol
mov
jl
xchg
mov
call
out
data16
(bad)
sub
retf
ret
mov
push
dec
xor
repnz
cld
mov
ins
cld
or
or
punpckhwd
push
out
rcl
pop
or
ins
mov
stc
sub
iret
jmp
cdq
cmp
push
in
call
arpl
neg
add
push
sti
repnz
adc
add
pop
jno
adc
shl
cdq
(bad)
out
mov
add
sti
xchg
inc
js
les
jecxz
mov
adc
cvtps2pd
push
fs
clc
mov
rcr
push
imul
cs
or
bound
retf
mov
adc
(bad)
je
repz
mov
or
imul
push
dec
push
push
adc
dec
inc
js
push
cmps
ins
mov
nop
je
inc
icebp
and
jbe
xor
fs
aaa
div
aam
cmp
or
pop
pop
mov
pop
fwait
adc
dec
pop
xor
ja
imul
ret
cld
hlt
ds
push
push
jg
jbe
mov
xchg
xor
inc
jmp
inc
cmps
test
es
push
inc
fld
daa
addr16
xlat
mov
push
push
dec
inc
jp
into
mov
lods
fidiv
jns
clc
push
shl
add
aaa
out
jmp
leave
add
push
jns
mov
les
and
out
jge
mov
(bad)
jg
jmp
dec
or
daa
mov
jl
imul
mov
jnp
imul
cs
adc
xor
pop
js
call
in
jle
fisttp
(bad)
mov
jbe
add
or
sti
rcr
jmp
fist
jnp
test
iret
in
xor
dec
mov
push
or
cdq
in
jno
int3
lea
in
xchg
inc
push
push
dec
sub
push
jecxz
shl
sub
outs
lods
xchg
das
scas
push
push
bound
sbb
fdiv
add
adc
mov
int3
mov
out
and
cld
movs
das
pop
das
inc
ins
pusha
loop
xchg
mov
shr
mov
call
xchg
ja
mov
test
add
aas
out
ret
sub
mov
push
shl
mov
leave
dec
test
cmp
inc
shl
mov
push
mov
jl
and
cmp
and
adc
in
inc
add
hlt
pop
loop
mov
cmp
test
outs
cs
add
mov
adc
lahf
xchg
sar
pop
fwait
leave
frstor
pop
push
loop
push
lock
sahf
dec
(bad)
mov
jmp
sbb
dec
xor
pop
idiv
stos
inc
int
pop
mov
pop
pop
pusha
push
das
iret
mov
push
fisttp
call
sti
or
call
aad
mul
sbb
(bad)
hlt
xor
jmp
call
loopne
cld
sbb
lock
fld
push
call
mov
(bad)
cld
das
in
in
js
push
jecxz
sahf
mov
xor
stos
gs
push
cmp
pop
ret
outs
xchg
add
cmc
xor
dec
pop
mov
cmps
or
or
dec
int
stos
lods
mov
xor
out
mov
dec
xor
jl
fcmovbe
mov
sbb
mov
repnz
lea
mov
ins
loopne
mov
cmp
sub
xor
outs
ins
sbb
and
mov
jl
push
imul
jne
jl
push
ss
pop
addr16
je
add
cmp
sub
(bad)
fdivp
pop
mov
inc
adc
sub
mov
jle
test
nop
ret
and
xor
rcr
xchg
(bad)
push
sbb
mov
push
in
loopne
add
fcmovnu
adc
xchg
inc
lods
loope
movs
fst
and
inc
xor
out
xchg
cmp
cmc
inc
push
adc
sahf
fisttp
cwde
xor
or
jns
imul
push
push
xchg
(bad)
retf
inc
aas
pop
and
sbb
inc
jo
fsub
pop
arpl
dec
fcomi
fild
cld
call
cmp
sub
push
loope
and
jp
sbb
adc
jmp
pop
outs
popf
xchg
xor
sub
mov
loope
imul
mov
add
out
add
popf
and
mov
shl
adc
cld
add
je
xor
stos
mov
pop
jbe
jmp
int3
ret
dec
inc
mov
xor
and
jge
cld
inc
aam
(bad)
jae
xor
add
pop
sub
movs
into
push
add
aas
add
daa
ja
mov
aad
das
jne
and
pop
stos
adc
fcomp
jecxz
(bad)
hlt
dec
arpl
and
sbb
(bad)
sub
pop
mov
shl
sbb
pop
test
jno
fadd
cmp
mov
shl
push
ins
icebp
dec
fisttp
inc
das
pusha
lock
ret
and
push
je
or
iret
jno
push
pop
mov
mov
sbb
jg
ins
repz
jecxz
cmp
mov
xchg
and
pop
mov
loopne
lds
pop
pop
bound
mov
mov
jp
les
jb
or
xor
pop
or
(bad)
nop
dec
pop
ror
sbb
cmc
fstp
addr16
loopne
add
push
sti
jbe
pushf
shr
and
or
outs
add
or
fsubr
mov
cwde
xchg
mov
(bad)
mov
and
jae
out
xchg
stc
gs
dec
cmp
(bad)
xlat
lods
jnp
je
js
jl
(bad)
aaa
xchg
or
lahf
inc
lds
inc
arpl
ret
mov
clc
cld
pusha
inc
mov
mov
xchg
jecxz
loope
inc
sub
imul
std
mov
or
cli
cld
mov
popa
iret
aas
sub
bound
add
ins
cmp
jge
aaa
dec
gs
in
sub
push
xchg
ins
xor
nop
fiadd
pop
or
jp
in
lods
rol
or
scas
cmp
pop
adc
mov
mov
mov
push
movs
mov
outs
mov
mov
mov
fimul
dec
call
lds
lock
xchg
push
(bad)
fidiv
pushf
push
push
stc
mov
ss
loop
ins
retf
sub
xor
pop
jb
inc
retf
pop
sbb
mov
xor
imul
add
jp
dec
pop
pop
(bad)
fmul
fidiv
mov
pop
(bad)
pop
clc
retf
xchg
jb
mov
and
mov
xchg
repz
sub
pop
adc
xlat
fs
pop
jb
push
shl
jl
movs
mov
inc
hlt
pop
inc
inc
aas
pop
xchg
sar
xchg
pop
mov
ds
sti
xchg
pop
sbb
rcr
and
adc
mov
sub
or
xor
aad
jae
fmulp
inc
je
retf
ins
mov
int
xchg
jbe
jg
mov
repz
aam
mov
pop
push
pop
sbb
adc
pop
inc
add
aaa
mov
add
cld
cmp
mov
sbb
push
push
call
adc
xor
fwait
jge
retf
shr
data16
mov
outs
push
push
les
xor
adc
mov
jo
jb
ds
mov
lods
cli
js
adc
push
pop
and
retf
xchg
sub
xchg
xor
sbb
lahf
adc
push
test
and
jge
ss
fdivr
in
loope
cli
in
outs
lds
push
xchg
not
loopne
nop
sbb
inc
mov
es
sub
jle
aas
inc
jno
imul
push
repz
ins
les
push
stos
cmp
stos
subps
cmp
imul
stos
fcom
stos
cmps
dec
idiv
ja
mov
fnsave
add
jb
movs
cmp
inc
out
jmp
xchg
cmp
xchg
fs
sbb
shl
arpl
dec
inc
je
aaa
js
cmp
icebp
loope
mov
xchg
js
mov
je
and
jo
scas
sub
retf
mov
jg
lods
xchg
loope
xor
loope
dec
pop
nop
call
push
sbb
push
mov
outs
sub
push
jo
sub
push
sub
push
pop
jbe
pop
mov
mov
shl
in
fadd
aam
jmp
cmp
jb
or
pop
adc
mov
aaa
and
mov
jns
ja
or
adc
adc
sahf
(bad)
fstp
iret
daa
jl
sub
cmp
je
test
scas
sbb
and
xor
cwde
jbe
pop
mov
fs
shl
scas
popf
imul
push
push
inc
ret
not
icebp
mov
ins
mov
(bad)
bound
mov
nop
out
je
mov
xchg
sar
and
fdiv
popa
mov
mov
and
jne
sbb
adc
xor
out
dec
cmps
div
out
push
inc
sbb
xchg
mov
xchg
xor
fsub
add
ret
jp
add
icebp
call
pop
pop
sub
repz
cmp
test
aaa
dec
stos
pop
mov
inc
imul
jb
not
(bad)
dec
and
ror
div
mov
in
pop
mov
mov
xchg
add
jns
shl
test
pop
sub
sbb
xchg
imul
jo
fild
or
mov
test
xchg
push
lods
ja
les
shl
xor
or
test
cdq
test
jl
dec
aas
or
add
or
addr16
mov
in
in
mov
inc
jns
nop
push
test
mov
xchg
xchg
cmp
pushf
and
push
loope
rcl
and
xor
stos
je
xor
jns
out
pop
xchg
outs
int3
es
dec
(bad)
popa
icebp
mov
add
aam
imul
dec
jo
adc
jecxz
(bad)
dec
test
mov
shl
inc
xor
mov
xor
outs
mov
cmc
mov
bound
aad
into
sbb
jae
mov
mov
push
add
xor
push
xchg
jmp
xchg
stos
xchg
movs
stos
xchg
pop
repz
jmp
dec
add
xchg
ins
nop
mov
mov
(bad)
adc
jno
rcr
(bad)
call
dec
mov
fiadd
enter
mov
fmul
repz
mov
jno
sub
or
fs
jmp
out
retf
xor
test
jnp
inc
push
mov
add
jbe
(bad)
xchg
ins
repz
pop
or
(bad)
cmp
pop
mov
cmp
bound
xor
cmp
jmp
repnz
outs
cli
dec
xchg
cli
dec
aas
shl
neg
jge
ja
push
pop
mov
loopne
push
sbb
pop
ucomiss
jg
or
adc
imul
pushf
(bad)
mov
xor
hlt
arpl
push
push
push
test
hlt
cmp
and
cmp
ins
cmp
xor
jmp
xor
xchg
cmps
repnz
js
std
movs
mov
cld
mov
fimul
ret
dec
loope
call
adc
xor
out
dec
outs
fidiv
ds
push
rol
repz
aas
jo
adc
sub
push
cwde
adc
out
sub
or
dec
jmp
cmp
(bad)
xor
lahf
push
and
fisubr
ror
and
push
(bad)
cmps
mov
sti
cld
inc
(bad)
ror
loopne
mov
je
shr
ss
and
mov
mov
or
mov
pop
ss
jg
jmp
in
sbb
call
xchg
xchg
jae
pushf
inc
inc
push
adc
ror
or
jns
cmc
jp
cmovbe
shl
je
sbb
adc
xor
scas
pop
pop
repnz
mov
movs
(bad)
cli
fistp
(bad)
bound
out
les
sahf
xchg
jbe
adc
push
mov
push
lds
lahf
pop
adc
shl
pop
xor
out
xchg
into
lods
adc
cmp
jne
add
cli
int3
jg
jae
fist
inc
jno
jmp
aad
ins
mov
icebp
add
mov
jo
mov
jecxz
dec
lods
shr
push
pop
cmps
pop
xor
cmp
inc
sbb
sub
mov
jno
push
fs
xchg
adc
jmp
or
imul
lea
ins
bound
(bad)
leave
cmps
into
adc
nop
cmp
lods
add
call
fist
push
ret
adc
leave
iret
xor
rcl
mov
(bad)
sbb
mov
sahf
sbb
mov
mov
clc
cmps
int
jmp
push
pushf
sbb
fwait
sbb
xchg
and
fwait
push
jle
mov
mov
mov
sar
fcom
icebp
cmp
push
popf
jns
fnsave
push
adc
shr
sub
cmp
cmc
inc
dec
adc
xchg
mov
pop
inc
and
outs
jmp
arpl
js
ins
or
mov
imul
stos
inc
pop
jno
stos
into
push
mov
retf
mov
xchg
(bad)
pushf
pop
repnz
inc
xchg
mov
popa
popa
popa
jnp
pop
sbb
xor
cmp
mov
fadd
mov
add
inc
sbb
leave
mov
inc
jbe
jmp
es
ins
pushf
mov
int
ja
push
add
lds
das
or
cmp
ds
sbb
pop
ja
out
sub
sbb
popa
xor
mov
int3
push
retf
ja
sub
mov
jae
retf
jecxz
xor
mov
add
out
push
fld
mov
pop
adc
test
jnp
mov
pop
push
cli
inc
fidiv
push
ds
movs
jae
int
mov
dec
and
adc
jg
dec
inc
in
fiadd
retf
nop
fistp
lods
inc
arpl
xchg
or
lea
push
pop
xor
repnz
sub
sub
lahf
sbb
xchg
lahf
shr
pop
dec
scas
pusha
dec
pop
or
adc
into
inc
and
xchg
jno
shl
dec
and
cmps
and
sub
adc
push
mov
xor
arpl
imul
mov
out
cs
xchg
add
call
dec
sbb
xor
mov
call
fldenv
inc
add
jge
cwde
jno
sbb
cmp
dec
mov
in
inc
add
shr
inc
test
or
jg
std
mov
push
out
mov
sbb
push
test
inc
inc
push
imul
gs
sbb
inc
nop
push
adc
and
hlt
jnp
sub
jle
fwait
pop
jb
dec
out
dec
movs
push
sbb
pop
hlt
adc
and
xchg
cdq
mov
and
sub
adc
aas
jne
xchg
pusha
mov
pop
mov
lds
sti
fild
and
dec
mov
sbb
imul
nop
test
add
mov
pop
shl
rcl
clc
les
stc
adc
push
clc
xchg
cmp
cmp
nop
lea
in
(bad)
mov
sar
iret
sbb
out
or
out
or
and
std
test
call
xchg
lock
retf
repnz
int
(bad)
popa
push
push
sti
jae
aas
enter
imul
mov
pop
mov
mov
int3
pop
add
adc
mov
into
sbb
(bad)
mov
retf
jg
add
cmp
es
push
jmp
(bad)
mov
mov
lods
add
stos
mov
ret
mov
loope
lods
iret
je
imul
retf
xchg
outs
lods
mov
mov
into
aas
test
iret
mov
stos
inc
(bad)
jle
or
mov
dec
xchg
add
mov
jno
jmp
movs
or
pop
mov
movs
sub
pop
int3
in
loope
dec
mov
cmp
jnp
sbb
sub
mov
rcl
dec
xor
xchg
xchg
dec
xor
test
sub
adc
adc
mov
enter
jl
sub
jecxz
int3
dec
leave
lods
mov
and
xchg
pop
cmp
jo
inc
in
sub
sub
jecxz
imul
test
clc
cmp
push
das
xor
imul
in
cmp
push
lods
jle
test
outs
adc
shr
sbb
nop
pop
dec
jo
mov
aam
xor
mov
pop
inc
sti
xor
nop
inc
add
mov
mov
jno
push
push
xor
xor
pop
pushf
shl
call
pop
mov
ret
call
and
and
lods
and
into
fdiv
inc
fstp
push
popf
jnp
or
rcl
mov
pop
mov
fstp
fdiv
addr16
xchg
ds
pop
icebp
inc
mov
cs
adc
shl
dec
mov
add
lahf
cmp
(bad)
sar
inc
dec
inc
cdq
fs
xor
fs
popf
sbb
(bad)
mov
jo
fwait
into
in
ffree
pop
push
sahf
sbb
icebp
(bad)
push
dec
fmul
std
pop
inc
neg
inc
mov
or
mov
or
cld
xchg
xchg
pop
arpl
enter
inc
add
(bad)
fs
out
mov
aad
ds
add
cld
nop
push
sbb
pop
cmp
jecxz
or
loope
cmp
outs
jmp
dec
adc
repz
inc
mov
in
popf
out
or
push
pop
in
and
repnz
add
dec
jmp
in
add
mov
mov
add
cdq
or
jmp
xchg
popa
test
xchg
ins
(bad)
pop
ds
call
fidivr
push
es
ror
add
push
imul
lea
dec
pushf
out
js
xchg
call
sub
rcl
cmp
pop
add
test
scas
cmc
out
mov
dec
div
test
xor
mov
mov
clc
mov
out
test
dec
test
dec
fsubrp
mov
data16
aad
pop
push
add
and
push
repnz
xchg
xchg
mov
fild
fs
clc
neg
fbld
(bad)
jbe
stos
fdivp
push
cmp
rol
pop
fidivr
cmp
inc
adc
fcom
(bad)
cs
sahf
in
mov
cmp
sub
int
xor
mov
or
mov
cmp
pop
adc
pop
inc
xchg
cmps
popa
jo
xor
aad
bound
pop
addr16
xchg
out
dec
jp
loope
int3
mov
dec
xchg
pop
cdq
xchg
fcmovb
cmc
cmp
idiv
xchg
dec
not
pop
xchg
data16
inc
mov
adc
lahf
cmp
sub
sbb
(bad)
cld
sub
fld
xor
data16
xor
adc
cld
mov
and
push
or
sbb
data16
or
mov
cwde
stc
add
fsubr
ret
std
xchg
outs
or
or
mov
pop
loop
out
retf
cmp
mov
sbb
out
test
add
scas
or
retf
or
add
ins
cmp
push
leave
sar
shr
aad
icebp
ret
stc
xor
sbb
and
cmp
adc
imul
push
inc
xchg
fwait
pusha
iretw
ret
std
stc
jmp
mov
adc
ss
lock
fidivr
lea
sbb
adc
out
cmc
fiadd
stos
scas
sub
add
stos
mov
out
sub
sbb
dec
enter
xchg
dec
pop
ror
popa
mov
imul
loop
cmp
rol
iret
stos
adc
jo
enter
pop
ret
mov
aad
popa
int
cli
shr
dec
sbb
dec
or
push
inc
hlt
sbb
iret
xchg
and
dec
and
inc
xor
push
retf
(bad)
shl
jg
jp
push
pusha
ss
jp
mov
int
push
dec
addr16
or
mov
mov
cmp
cdq
cmc
jno
aam
std
retf
shr
sub
cmps
hlt
fidivr
or
jge
xchg
test
fwait
gs
cmp
xlat
idiv
jo
or
ins
cmps
xchg
ret
mov
dec
sub
(bad)
js
(bad)
push
out
jbe
or
cmp
inc
xchg
push
adc
cmc
fidiv
ins
pop
leave
xor
push
sub
cmps
or
add
cmp
sub
cmps
(bad)
pop
dec
sbb
stos
out
jge
push
adc
and
cmp
dec
add
dec
pop
jne
pop
pushf
and
pusha
push
mov
mov
pop
call
addr16
rol
(bad)
dec
cmps
push
sahf
adc
sbb
or
out
adc
icebp
and
adc
leave
mov
es
or
iret
push
add
adc
or
cmps
mov
adc
aad
jecxz
pop
cli
lea
je
push
xlat
mov
je
sbb
mov
bound
mov
inc
ins
sbb
cwde
fadd
pop
xor
xor
jecxz
jnp
pop
mov
ja
cs
fwait
sbb
and
int3
sub
jns
jae
scas
lea
xlat
loop
fstp
fdiv
inc
ds
out
mov
adc
sub
(bad)
xor
aaa
or
jl
movs
adc
mov
mov
retf
mov
jmp
xchg
test
lea
inc
and
jo
enter
adc
out
mov
dec
push
shl
inc
lods
(bad)
lock
dec
push
retf
mov
nop
sbb
lahf
jns
fnstsw
test
mov
adc
dec
fwait
cld
xchg
add
cmp
sub
adc
push
or
pop
push
inc
push
in
push
in
pop
mov
adc
add
test
pop
imul
adc
mov
lock
add
cmps
cmp
jl
add
inc
fld
repnz
std
pop
xlat
leave
data16
repz
sbb
push
pusha
mov
or
mov
push
jnp
call
cmp
jne
es
jecxz
mov
imul
cmc
or
xchg
xor
hlt
call
mov
mov
cmp
test
cmp
int
stos
mov
mov
scas
adc
sbb
inc
ins
int
jmp
pop
adc
std
ret
(bad)
ds
(bad)
ja
in
int3
mov
sub
stos
push
dec
mov
cmp
xchg
aas
pop
push
push
mov
pop
call
push
pop
cmp
or
sahf
ret
sbb
jae
scas
repz
int3
scas
jmp
(bad)
dec
ja
in
fbld
out
mov
mov
sub
scas
call
ss
adc
popf
and
mov
xor
daa
not
pushf
call
adc
mov
das
outs
icebp
sub
add
add
or
xchg
leave
stc
add
rol
pop
xchg
ror
and
(bad)
jmp
xor
int
mov
pop
jge
push
sub
inc
add
(bad)
cmp
icebp
outs
jecxz
or
inc
xchg
pushf
adc
sbb
std
ror
into
lahf
cmp
cdq
dec
inc
jne
mov
inc
sbb
jp
rcr
add
out
pop
adc
dec
enter
mov
pop
nop
jle
in
aad
or
pop
rol
and
inc
lahf
pushf
leave
push
shl
test
fild
out
jo
xchg
dec
lock
add
es
pop
(bad)
cmps
loope
pop
inc
clc
or
xor
int3
lahf
in
mov
hlt
push
push
and
mov
mov
jo
in
push
push
jmp
gs
cmp
ret
xchg
fwait
sahf
adc
shr
push
mov
sub
js
fisttp
clc
push
inc
(bad)
ins
xchg
mov
cmps
add
fnsave
and
clc
arpl
shl
cmp
ficom
test
(bad)
mov
int3
fsubr
sbb
bnd
mov
repnz
ds
(bad)
(bad)
mov
mov
fs
sub
leave
inc
test
mov
call
popf
mov
push
outs
fsubr
xchg
enter
mov
or
loopne
push
(bad)
inc
(bad)
jmp
test
inc
je
cmp
inc
cmps
pusha
cmova
retf
in
mov
cmp
pop
sub
leave
(bad)
(bad)
aad
jae
frstor
xor
in
sub
ss
nop
adc
mov
fsub
pop
retf
stc
mov
adc
xchg
in
mov
arpl
or
add
add
mov
xchg
out
popa
pop
movs
daa
ror
fdivr
add
adc
fadd
or
lahf
dec
jle
dec
sbb
(bad)
retf
xor
lea
ins
pop
bound
inc
fdiv
inc
leave
inc
and
(bad)
mov
mov
jo
fsub
out
dec
fs
adc
jno
jl
js
in
cmp
mov
pop
xchg
jg
inc
movs
push
sti
sbb
in
jne
jle
inc
add
push
(bad)
mov
(bad)
std
imul
stos
mov
(bad)
dec
dec
dec
pop
cdq
out
or
shl
ror
mov
xchg
je
inc
xchg
mov
add
xchg
cmp
adc
mov
ficomp
xor
push
mov
and
push
dec
add
pop
xchg
nop
int3
and
jmp
(bad)
pop
call
(bad)
add
ins
or
test
push
mov
xlat
aas
les
pop
dec
xor
int3
fs
or
sub
loop
adc
xor
je
clc
mov
jge
lahf
imul
mov
sbb
pop
scas
sub
or
dec
data16
inc
imul
mov
rcl
leave
in
outs
and
sbb
pop
cmp
xchg
mov
sub
nop
push
inc
dec
sub
fisttp
jb
aaa
adc
push
in
xor
mov
ficom
(bad)
xor
(bad)
fiadd
xor
pop
mov
dec
mov
pop
dec
mov
stos
pop
add
dec
icebp
jecxz
ficom
jae
clc
jnp
scas
icebp
jge
jmp
mov
into
out
adc
dec
xchg
jmp
aaa
lods
cs
data16
mov
inc
dec
loop
in
inc
ror
add
ret
push
out
mov
daa
loope
and
cwde
and
mov
xor
dec
(bad)
dec
push
jnp
xor
sbb
push
push
sub
test
inc
xor
popa
inc
add
inc
repnz
jnp
out
pop
std
cmp
mov
sbb
xor
mov
cmps
cmps
aaa
pusha
dec
jl
xchg
dec
mov
add
fadd
movs
loope
xor
mov
or
mov
bound
push
sgdtd
sar
mov
aas
dec
dec
cmp
out
rcr
and
mov
xor
sbb
add
gs
sar
arpl
mov
xchg
jae
nop
sbb
sub
jl
fdiv
push
addr16
or
push
test
aas
mov
movs
fnstcw
call
fcom
or
popf
or
xchg
mov
test
fidivr
ins
add
or
inc
jl
fs
shr
lds
push
add
(bad)
ret
shl
sti
mov
daa
inc
jnp
xchg
popa
out
jo
inc
jmp
xchg
jae
ret
inc
mov
ret
jo
mov
mov
lods
imul
ret
pop
mov
pop
mov
pop
cld
loope
or
loop
btc
or
push
or
and
dec
dec
pushf
ins
mov
or
sub
push
push
xor
add
pop
lds
das
jle
sub
icebp
rcr
je
iret
and
bound
test
or
setno
add
fiadd
cmps
jo
or
adc
fmul
in
into
jb
test
xor
cmp
leave
sbb
jae
shr
xchg
aad
jne
jg
adc
push
test
dec
mov
int3
adc
pop
mov
clc
mov
mov
idiv
fs
arpl
in
mov
pop
test
popf
inc
adc
and
mov
pop
adc
dec
push
mov
jg
call
jg
outs
imul
ds
fcom
push
(bad)
iret
xchg
add
inc
mov
enter
int
test
xchg
or
mov
into
mov
dec
js
pop
adc
sahf
inc
adc
cmp
repz
in
movntq
fidivr
popa
xchg
out
dec
lahf
je
ror
xchg
jp
xor
sbb
sub
mov
jns
xchg
ror
mov
push
bound
retf
iret
iret
fcmovnb
clc
fisttp
xor
inc
mov
adc
and
dec
shr
jbe
aam
sbb
aaa
cmp
jecxz
dec
pop
sbb
or
dec
pop
icebp
xlat
xchg
and
ret
cmps
jo
sbb
mov
fnstcw
inc
ror
call
cmps
pop
mov
push
scas
jno
imul
in
sbb
out
mov
(bad)
xor
fdiv
jb
rcr
mov
push
cld
dec
fdivr
add
mov
sbb
pusha
out
repnz
sbb
jle
outs
mov
xor
psrld
xchg
(bad)
loopne
test
dec
pop
jecxz
gs
fcmovne
fisttp
ja
mov
leave
xchg
mov
outs
data16
int3
ret
lea
and
mov
stc
aaa
xchg
and
xor
pmaddwd
mov
sar
movs
js
cwde
iret
mov
dec
mov
dec
or
mov
cli
or
cmp
ss
xchg
in
paddusw
cmp
aad
in
das
cmp
cdq
push
add
arpl
push
adc
push
loopne
mov
or
neg
bound
loop
clc
inc
add
push
add
inc
inc
sub
jg
cdq
sahf
imul
bsf
adc
shr
cmp
add
or
out
dec
xchg
sti
es
psadbw
imul
xchg
and
pop
out
pop
loope
mov
pop
ins
lahf
repz
fcmovbe
int3
sub
mov
test
popf
cmps
ins
mov
gs
dec
mov
push
ret
adc
push
add
loope
shr
int
adc
mov
add
push
mov
mov
and
repnz
push
inc
jno
and
mov
and
sbb
ss
jle
retf
out
sbb
pop
xchg
and
aam
inc
mov
lock
pop
sub
icebp
nop
cmp
dec
cmp
out
xchg
mov
or
mul
movs
scas
mov
(bad)
dec
lock
scas
jle
jne
inc
daa
das
xchg
gs
aad
and
pop
mov
and
dec
lock
mov
dec
cmp
adc
daa
repz
sbb
mov
mov
mov
pop
outs
jmp
push
in
pop
into
push
imul
push
not
data16
movs
ret
dec
fiadd
pop
mov
push
inc
pop
pop
xor
in
mov
mov
pop
or
xchg
xor
sub
xlat
rcr
jp
je
lods
fisubr
iretw
bound
jb
inc
or
popa
lahf
jbe
add
adc
int3
cmps
push
sahf
aaa
inc
xor
arpl
or
mov
aaa
iret
xchg
mov
ins
jl
test
dec
mov
push
mov
mov
cmc
jmp
push
mov
scas
xchg
add
jecxz
repnz
and
ficom
add
ror
dec
xchg
rcr
arpl
aam
lock
xchg
mov
inc
in
jne
pop
fstp
fistp
mov
fisubr
adc
sub
cmp
add
or
(bad)
cmp
sbb
push
lods
or
mov
test
ds
or
fs
xor
cmps
add
out
mov
mov
sti
cmp
sub
cwde
xchg
push
sub
jb
nop
add
fwait
sbb
loopne
cmp
dec
or
fstp
sbb
mov
nop
(bad)
ficom
cmp
jno
into
jle
clc
fwait
xlat
pop
js
int3
mov
sahf
push
test
fsubr
xchg
sar
stos
test
clc
icebp
xor
addr16
aas
jmp
add
(bad)
fidiv
std
scas
or
outs
ds
xchg
test
ds
je
aam
lock
push
cmps
cmp
xor
inc
mov
adc
push
pop
test
fdivr
mov
jge
nop
push
(bad)
iret
pop
xlat
andnps
jmp
mov
pop
mov
stos
cmp
(bad)
cmp
add
or
into
xchg
xchg
or
pop
movs
jle
stos
dec
nop
outs
les
fldenv
mov
mov
mov
shr
(bad)
lods
pop
mov
sbb
popf
sbb
ret
push
es
gs
or
aad
jno
xchg
pushf
test
pop
push
pop
ret
and
xchg
xchg
jle
jle
xor
pushf
xchg
mov
mov
gs
(bad)
and
(bad)
lods
cmps
lods
aam
or
repnz
cmp
xchg
retf
cmp
stos
push
sbb
sub
cmc
cwde
sub
loop
sbb
inc
adc
xor
mov
mov
shl
das
pushf
pop
ror
sti
cld
xor
leave
shl
fwait
push
dec
cmp
fstp
jecxz
(bad)
in
ror
sub
je
xor
imul
sub
add
xchg
test
clc
icebp
lods
push
mov
push
popf
mov
dec
dec
pop
outs
cmp
in
pushf
lahf
xor
je
test
fxch
clc
mov
movs
dec
scas
out
mov
iret
pop
mov
pushf
adc
dec
mov
add
cdq
aam
stos
or
test
mov
dec
call
xor
ffreep
out
push
jmp
xor
pop
sub
mov
or
inc
mov
xor
rcr
inc
lea
sbb
cmp
scas
(bad)
ror
mov
jp
lods
int3
inc
or
test
fsub
add
xchg
into
mov
push
repnz
cmps
jo
sub
fisttp
ret
dec
xchg
push
lea
(bad)
leave
retf
push
stc
imul
cld
jmp
pop
loopne
mov
cmps
lock
mov
js
cli
out
popa
push
sbb
pop
fsubr
xchg
jl
fisubr
jnp
out
push
aas
jl
and
aad
aad
aaa
neg
sbb
cmps
xor
mov
outs
add
ror
xchg
and
sub
mov
lods
out
mov
call
sbb
sbb
sbb
jle
add
add
xchg
mov
out
sahf
inc
mov
sti
(bad)
enter
loop
jbe
fwait
inc
test
adc
push
cmc
inc
mov
jp
je
jns
loop
pop
adc
loopne
or
mov
(bad)
mov
pop
push
jne
shl
pushf
ss
scas
jb
mov
or
add
loop
popa
fstp
pop
sbb
mov
outs
push
xchg
aaa
dec
mov
repz
ret
and
mov
pop
and
pusha
or
jmp
xor
cdq
jle
pushf
sub
dec
mov
cmc
add
mov
test
sti
daa
imul
pop
inc
jbe
sub
xlat
in
mov
xor
cmps
arpl
lods
sti
jmp
jmp
rcr
dec
pop
sbb
jbe
cmp
pop
mov
mov
pop
fimul
and
xchg
mov
movs
out
cs
or
cs
out
movs
mov
aaa
jae
arpl
dec
jns
dec
aam
add
int
neg
sbb
push
loopne
(bad)
call
add
pop
clc
sbb
pop
bound
dec
push
and
jb
or
dec
cmp
jg
mov
sub
fisttp
fstp
stos
xor
mov
shl
std
push
ins
pop
inc
(bad)
cli
mov
aam
gs
movs
and
push
mov
push
test
jg
push
dec
mov
aam
mov
out
mov
jo
jl
scas
sbb
jmp
mov
icebp
push
(bad)
pop
jns
ja
enter
outs
push
pop
mov
adc
xor
in
and
fld
fimul
fbld
xchg
add
sar
or
sahf
push
pop
lahf
fcomp
in
jno
inc
xor
xor
in
test
jle
dec
cmps
(bad)
lds
loope
push
xor
(bad)
cmp
xlat
out
lods
mov
outs
inc
hlt
mov
jmp
xchg
pop
out
sbb
cs
adc
fld
add
sbb
cmps
and
mov
jno
add
xor
pop
add
test
push
xlat
fdivr
cmp
xchg
out
imul
mov
ror
jmp
pop
mov
and
ror
mov
inc
neg
fst
daa
add
shr
push
mov
jo
sub
call
lock
inc
dec
hlt
and
pop
mov
sahf
lock
and
cwde
jno
out
leave
stc
or
(bad)
xor
cmp
hlt
sbb
cmp
mov
add
mov
mov
dec
into
loope
inc
dec
leave
cmp
jmp
out
mov
and
dec
jecxz
sub
div
adc
lea
push
dec
stos
mov
inc
push
mov
hlt
imul
mov
sub
mov
loope
inc
sti
adc
sub
xor
mov
sub
fild
xchg
nop
sti
fisttp
(bad)
lock
(bad)
adc
jns
mov
dec
inc
lahf
sbb
xor
mov
jl
inc
into
(bad)
pusha
rcl
mov
cmp
jl
ja
mov
lea
(bad)
popa
xchg
sub
fld
out
push
jle
mov
ret
icebp
mov
rcl
mov
js
dec
les
dec
int
(bad)
sbb
mov
bound
in
xchg
pop
push
sbb
sub
aaa
pop
dec
cmp
nop
fldcw
add
mov
stos
out
push
je
pop
lds
mov
inc
adc
dec
inc
xchg
sub
(bad)
cdq
jmp
inc
mov
sbb
push
pop
iret
int
pusha
imul
je
std
ja
add
fnstsw
int3
pop
add
and
nop
pusha
cmp
daa
xchg
and
inc
inc
pusha
mov
ror
retf
and
inc
cdq
je
sub
jne
push
inc
scas
pop
sbb
jl
adc
popf
push
sub
add
jns
jne
icebp
push
jmp
stc
into
push
jl
mov
push
loope
add
enter
push
cdq
das
push
ja
adc
les
mov
inc
(bad)
jo
out
outs
aam
dec
lahf
pop
xchg
sbb
lock
pop
sar
adc
nop
ja
clc
dec
or
and
pop
aaa
shl
jg
sub
jle
pop
in
adc
fs
cmp
(bad)
mov
cdq
cld
push
pop
inc
pop
dec
clc
and
call
(bad)
mov
and
pop
push
xor
and
rcl
fdiv
push
mov
ficomp
stos
fimul
(bad)
nop
loop
hlt
push
sbb
popf
les
pop
add
or
neg
mov
loope
pop
mov
mov
cwde
into
pop
cmp
sub
adc
pop
daa
in
mov
and
inc
sbb
test
mov
addr16
add
cld
sbb
stc
scas
in
leave
loopne
loop
pop
push
push
jno
sub
les
in
inc
into
(bad)
sti
mov
pop
dec
iret
mov
cmc
and
pop
xor
hlt
mov
cmps
add
test
icebp
push
test
jge
jae
inc
shl
popf
inc
cdq
dec
ds
xchg
or
sbb
xor
jae
aam
add
dec
data16
jg
cwde
jnp
(bad)
sbb
imul
mov
mov
daa
test
in
aad
pop
shr
test
push
call
sar
mov
jecxz
or
loope
inc
add
xchg
repz
mov
stos
hlt
shl
pusha
inc
jno
cdq
jnp
adc
push
pop
xchg
add
pop
sbb
sbb
outs
push
add
dec
fmul
sub
pop
push
add
nop
jb
imul
mov
clc
inc
fbld
mov
aaa
mov
or
sti
popf
sbb
aam
out
cmp
pop
mov
sbb
je
fwait
mov
push
ror
pop
std
and
imul
mov
arpl
sub
jg
adc
cmp
addr16
outs
cmp
xchg
dec
(bad)
mov
xor
or
lock
test
fwait
push
test
dec
inc
and
aad
mov
lahf
sbb
jmp
and
test
lods
jmp
sbb
mov
inc
sub
out
out
sbb
ins
fidiv
or
mov
cmp
in
mov
fdiv
sbb
stos
js
into
shr
cmp
imul
out
cwde
loope
push
fbstp
rol
xchg
cmp
adc
jmp
lods
jo
leave
mov
mov
adc
mov
sbb
(bad)
cdq
cli
int
call
dec
(bad)
lock
xor
mov
bound
popf
cmp
pop
cmp
movs
and
stos
inc
repz
in
enter
mov
stos
jl
cmp
xchg
scas
and
(bad)
sub
fisubr
gs
cmp
stos
in
cmp
push
mov
test
cmp
clc
ficom
mov
mov
lods
mov
jl
mov
dec
dec
xor
mov
or
mov
jmp
lods
or
aaa
mov
dec
xchg
cmp
imul
or
fldcw
mov
cmp
(bad)
out
mov
adc
mov
in
dec
loop
push
cmc
pop
pop
cmc
sahf
scas
jge
pushf
jge
es
push
and
rcr
push
sbb
psubsb
mov
jbe
pop
jle
mov
cmp
fcom
dec
pop
jl
rcr
xlat
movs
sbb
nop
fcmovnb
idiv
jg
in
pushf
mov
or
add
mov
test
enter
or
rol
dec
jns
dec
cld
ins
jnp
(bad)
imul
sbb
push
and
jl
pop
int3
mov
mov
xchg
xor
fdivr
push
std
push
xchg
out
in
cmp
mov
fwait
push
aaa
push
inc
push
js
jmp
xor
jb
push
xor
ss
dec
xchg
pop
or
call
xor
fwait
cmps
push
mov
mov
pop
test
in
lahf
mov
loopne
mov
inc
jns
sbb
xadd
and
mov
or
lods
push
ds
cdq
or
inc
call
cmps
or
jbe
cmps
inc
jae
aad
xchg
adc
and
cmp
test
pop
das
sub
shr
xchg
in
lahf
imul
pop
lea
pop
fsubr
push
mov
push
inc
jnp
xor
int
mov
pop
lods
repnz
es
and
fcom
pop
xor
in
xchg
mov
lahf
jmp
nop
addr16
cmp
inc
ror
add
and
pushf
sbb
lods
inc
repz
pop
cmc
aad
dec
test
pop
pop
jne
or
cmp
xchg
imul
data16
jb
mov
dec
push
pop
loope
xchg
sbb
(bad)
int3
mov
ficomp
imul
ret
pop
daa
inc
mov
mov
dec
push
mov
xor
push
bound
and
xchg
jge
ja
inc
scas
fwait
push
mov
cld
pop
inc
mov
push
and
xchg
cmp
pop
push
cdq
or
pop
je
sar
outs
sbb
call
mov
cmps
dec
dec
xor
aad
cs
cmps
in
enter
out
cmp
add
call
push
xor
daa
adc
inc
sahf
daa
mov
ret
inc
dec
push
test
mov
hlt
xchg
mov
ret
mov
mov
addr16
push
xchg
lahf
shl
cld
jmp
mov
inc
sbb
mov
xchg
shl
hlt
mov
xchg
js
jp
xlat
inc
imul
out
lods
mov
fiadd
js
cmp
xchg
js
cmp
jecxz
enter
sbb
mov
scas
sub
mov
jecxz
or
xor
adc
cmp
push
inc
adc
sbb
cmp
loopne
(bad)
enter
pop
xor
imul
cwde
pop
fs
jmp
xor
(bad)
pusha
into
movs
les
push
jne
xchg
dec
mov
popf
dec
sbb
add
(bad)
fld
leave
mov
leave
and
cli
out
lods
cdq
dec
jg
add
mov
xor
push
leave
or
and
pop
scas
and
aad
xchg
call
mov
sub
inc
sbb
push
lahf
ror
loope
fcmovu
dec
fmul
jnp
pop
xchg
inc
cdq
sbb
dec
stos
call
jnp
shl
add
rcr
hlt
lock
adc
imul
push
cmp
cmp
nop
dec
lea
xor
mov
push
pop
jbe
cmp
rol
add
add
retf
leave
xor
xchg
add
imul
mov
pushf
push
xchg
adc
inc
pop
xor
push
hlt
jmp
mov
cmp
(bad)
pushf
pop
xchg
xchg
pop
imul
pop
sub
adc
fucomip
mov
jecxz
adc
jl
test
pop
sar
fmul
and
inc
jae
jnp
fwait
hlt
in
sub
add
jne
push
adc
int
int
gs
js
adc
inc
test
aam
test
xor
lahf
mov
sub
cld
icebp
mov
ret
inc
mov
jb
call
(bad)
sub
cld
push
mov
pop
mov
xchg
mov
pop
jecxz
sub
and
cli
pop
dec
sahf
adc
ficomp
xchg
sar
rol
in
out
adc
call
pusha
stc
push
pop
out
aaa
dec
aaa
fs
sub
loop
test
sbb
dec
mov
xchg
ins
rol
repnz
lock
int3
je
sub
js
push
out
rol
xor
mov
int3
pop
or
gs
adc
sbb
fisttp
push
out
mov
adc
cmp
js
(bad)
jbe
movs
jp
xor
push
rcr
mov
js
add
sub
neg
mov
(bad)
aas
jp
dec
ins
retf
push
mov
addr16
iret
pop
inc
sub
or
push
inc
sub
fld
outs
xchg
cmc
push
call
xchg
jecxz
sbb
push
fs
sbb
ret
xchg
jns
adc
ins
lea
pop
mov
loopne
aad
push
pop
aad
imul
inc
and
jl
aam
mov
std
sbb
inc
jp
mov
jle
add
xor
outs
test
fsubr
sbb
jmp
cdq
jp
mov
pop
mov
and
xor
jmp
outs
fs
jle
shr
aam
test
stos
xchg
(bad)
jl
fild
stos
cmps
mov
cmps
or
push
or
movs
jg
jmp
cmps
int3
mov
adc
sbb
pop
je
mov
and
ds
mov
sub
cmp
xchg
mov
(bad)
das
ss
adc
mov
scas
mov
neg
in
(bad)
adc
cmc
push
sbb
sbb
push
mov
jno
(bad)
xchg
xor
mov
xchg
push
inc
sub
or
push
dec
xchg
(bad)
jmp
call
sahf
cmp
sahf
pop
iret
iret
neg
add
dec
mov
push
jnp
sub
and
push
cmp
stos
xlat
and
xchg
cmp
adc
cmc
push
pop
adc
and
pop
gs
pop
stc
test
or
icebp
xor
or
cmp
push
push
test
mov
mov
xchg
shl
adc
dec
jp
enter
(bad)
fbld
imul
test
les
outs
stc
std
dec
sub
jb
loopne
retf
pop
jmp
cmp
xchg
add
mov
scas
fnstcw
pop
loope
cmp
je
cmp
rcr
arpl
xchg
fild
sti
jmp
in
sub
jg
retf
pop
out
cdq
jg
scas
ret
xchg
loopne
xchg
jae
inc
push
sbb
sbb
call
stc
in
jl
push
or
gs
sti
inc
popa
movs
adc
dec
mov
mov
push
xchg
cdq
push
popa
pop
int3
scas
push
pop
jb
cmp
cwd
pushf
iret
ins
ror
repz
mov
addr16
imul
add
xor
cdq
test
push
dec
sub
(bad)
out
and
add
test
pop
adc
pushf
xchg
sahf
fdiv
or
test
cli
(bad)
dec
jbe
or
push
das
jo
enter
jle
adc
adc
movs
adc
inc
push
dec
hlt
call
int
mov
sub
mov
or
mov
and
jo
ins
and
repnz
xchg
push
mov
xchg
jo
scas
xor
retf
fsubr
xchg
mov
cli
fdiv
cmp
add
dec
inc
fist
adc
xchg
dec
bound
dec
jge
xor
mov
inc
rcr
cmp
dec
push
push
push
push
dec
mov
test
xor
test
cld
pusha
(bad)
imul
les
pusha
lahf
retf
xchg
cmps
jecxz
das
jg
push
test
xchg
jae
shl
xor
xchg
ror
fwait
pop
add
sub
pop
pop
mov
pop
int3
inc
test
sar
sbb
sbb
in
xor
lods
jb
pop
loope
push
retf
lds
push
mov
jecxz
dec
pop
cmp
aas
jg
aad
jge
stos
push
popf
inc
adc
or
mov
imul
and
std
hlt
inc
(bad)
mov
mov
adc
or
je
aam
int
dec
cs
and
fwait
mov
rcl
not
imul
xor
and
pushf
and
neg
fwait
push
push
iret
jne
inc
scas
imul
push
mov
cmp
les
mov
and
inc
dec
shr
push
inc
mov
out
test
jle
(bad)
jmp
aad
push
(bad)
out
in
int3
shr
outs
in
mov
fstp
adc
sbb
add
stc
lock
not
jne
push
sbb
jp
hlt
imul
jl
adc
ror
jae
hlt
loope
arpl
js
cmp
scas
inc
movs
xor
enter
inc
sub
jge
and
dec
xor
adc
jne
push
mov
int
out
pop
add
stc
xchg
enter
xchg
daa
inc
stos
ds
add
shl
push
add
dec
cmc
je
xchg
enter
pop
arpl
xchg
mov
push
fld
push
inc
mov
cdq
push
in
dec
jmp
scas
test
jle
cmc
test
and
and
sahf
pop
jmp
sub
cmp
data16
mov
repz
sbb
dec
and
mov
pop
icebp
fwait
mov
sub
mov
(bad)
dec
pop
daa
jp
jae
jmp
xor
xchg
cs
pop
xchg
and
mov
dec
hlt
adc
jge
pushf
mov
sbb
imul
test
inc
ret
dec
mov
mov
mov
dec
(bad)
out
scas
aad
sub
jne
loopne
inc
inc
sub
dec
lods
aas
or
jo
out
pop
(bad)
clc
repz
adc
ss
cwde
les
(bad)
fbld
sbb
test
sub
inc
mov
xchg
neg
in
call
cli
icebp
stos
idiv
test
pop
ins
adc
inc
xor
lods
push
leave
cs
fwait
adc
add
mov
rol
mov
shl
iret
in
push
cmp
jns
push
pop
jl
les
sbb
sub
push
movs
imul
mov
mov
loopne
inc
push
inc
dec
and
(bad)
out
pop
cmp
push
jnp
in
jg
(bad)
push
push
mov
ja
and
out
out
outs
inc
icebp
es
out
jl
mov
sti
popf
push
fstp
std
xchg
pop
out
or
retf
clc
shl
xchg
sar
loope
pusha
inc
jne
or
sti
mov
fiadd
std
mov
mov
stc
ds
jns
sahf
pop
std
into
es
sbb
cld
add
jne
in
dec
mov
or
sbb
imul
in
inc
repnz
inc
pop
xchg
cmp
xor
pop
rcl
push
pop
pop
jmp
xchg
(bad)
push
out
add
jl
out
dec
cs
cs
fisubr
sub
mov
nop
push
call
les
jne
push
add
mov
daa
xchg
cdq
cmps
cmp
sahf
lds
add
cwde
xchg
int3
xor
sbb
sahf
or
xor
(bad)
push
push
lods
scas
jo
repz
rol
cmp
rcl
jmp
jmp
add
push
pop
cmp
pusha
dec
sbb
sub
lods
(bad)
fiadd
cwde
inc
scas
or
add
sbb
ficomp
call
mov
jl
pop
cmp
pshufw
xchg
fmul
xor
jle
mov
and
cmp
in
in
addr16
ins
fcmove
mov
(bad)
ret
fs
ret
push
mov
gs
rcl
shl
sub
pop
ds
push
(bad)
cmc
bound
icebp
dec
aaa
mov
inc
jmp
xor
jae
cli
pop
imul
test
inc
dec
ja
pop
xor
adc
or
sub
xchg
(bad)
cmp
sbb
pop
xor
fsub
rol
stos
fwait
aas
or
adc
fild
push
xchg
xor
mov
push
lock
mov
in
cld
cmp
test
or
mov
out
inc
mov
jmp
sbb
bnd
(bad)
mov
add
shl
(bad)
add
fbld
cmp
xchg
(bad)
xor
popa
out
repnz
shl
mov
inc
pop
inc
cmp
shl
inc
(bad)
loop
into
aas
ins
ins
in
std
jge
int3
pusha
fiadd
loope
pop
mov
dec
nop
lahf
jmp
pop
sub
mov
cmp
xchg
xor
push
adc
fcom
dec
stos
adc
push
push
xchg
jb
out
cmp
pop
cli
scas
aad
push
mov
shl
jbe
cli
mov
aam
cmp
scas
and
clc
push
das
pusha
mov
mov
mov
pop
or
inc
add
sub
xor
mov
cwde
add
sbb
and
out
ret
adc
mov
ret
test
mov
xchg
sub
ins
or
mov
add
call
clc
fs
sub
push
pop
inc
xchg
add
mov
mov
jo
cmp
push
stc
jge
dec
faddp
push
adc
jns
pop
ins
out
sbb
mov
inc
popa
mov
mov
xchg
add
ror
sbb
ror
or
pop
xor
jae
dec
jge
lds
add
sti
push
outs
pushf
mov
mov
scas
loope
inc
stos
add
adc
and
lods
or
and
mov
fwait
and
stos
mov
adc
cld
push
dec
cmps
ss
pop
inc
nop
mov
or
mov
data16
(bad)
lods
daa
pop
jno
outs
mov
mov
mov
retf
popf
js
sbb
inc
jnp
adc
pop
push
imul
in
mov
cmps
xchg
aad
adc
jg
xchg
xor
sbb
jb
mov
push
mov
xchg
inc
repz
xor
mov
pop
das
inc
out
adc
fs
xor
in
cmc
mov
scas
xchg
gs
and
cmp
add
imul
xor
sahf
jo
inc
mov
add
jmp
ja
and
cmp
retf
mov
int3
add
pop
pandn
test
jb
sub
xlat
pop
pop
nop
(bad)
mov
jge
adc
repz
sbb
outs
mov
jl
jmp
popa
lods
into
sub
ficomp
pop
xchg
repz
vmovaps
fild
test
pop
aaa
sbb
jns
(bad)
dec
ficomp
inc
call
out
jns
sbb
daa
loope
sar
test
out
and
dec
and
rcr
sbb
or
ins
out
adc
pop
sti
sar
adc
mov
lods
mov
imul
mov
cwde
jnp
fimul
jae
scas
mov
jns
movs
push
mov
mov
sub
push
inc
scas
jg
div
xlat
jg
xor
mov
jnp
ror
ss
es
loopne
daa
repz
test
cmp
or
(bad)
mov
push
jl
lods
fwait
xchg
ja
repz
in
retf
add
mov
and
fdivr
jns
xor
out
loope
mov
mov
call
sbb
add
push
neg
ja
mov
push
fnstenv
das
outs
scas
or
shl
jg
je
fwait
std
inc
xchg
xor
iret
sub
test
test
loopne
lea
repz
in
inc
into
adc
inc
fldcw
pop
mov
inc
xor
mov
mov
into
test
mov
repnz
or
pop
ins
inc
pop
(bad)
retf
cmp
(bad)
and
inc
cmp
mov
jl
out
mov
imul
lds
out
ror
dec
mov
mov
and
out
loope
iret
enter
push
test
les
xor
push
in
inc
mov
jmp
xchg
imul
popf
div
pop
leave
pop
or
lods
pop
out
add
pop
das
rol
add
and
loop
(bad)
dec
mov
dec
retf
mov
adc
push
fcmovne
jmp
and
and
repnz
mov
dec
push
aaa
imul
mov
dec
pop
jp
dec
pop
daa
repnz
shl
xor
pop
add
in
jge
add
jb
push
inc
mov
push
sub
(bad)
push
sub
push
cmp
(bad)
je
adc
loope
fs
aad
mov
ret
test
prefetch
into
repnz
outs
pop
sbb
arpl
xlat
jg
sub
sbb
mov
and
push
inc
or
cmc
or
pop
fst
add
cmp
icebp
mov
fnstcw
cld
cli
lea
into
sbb
jl
sub
mov
jmp
jmp
test
call
sbb
cwde
aam
add
pop
daa
jl
xor
popf
mov
scas
retf
jno
stos
fmul
sbb
ja
das
rol
xchg
scas
test
shr
pop
cmc
xlat
jg
fwait
jmp
inc
pop
outs
out
push
push
adc
push
nop
jbe
loop
push
shl
or
xor
outs
push
inc
push
repz
stc
or
jns
mov
inc
test
ss
call
push
test
pop
dec
push
cmp
sbb
das
xchg
(bad)
mov
dec
cld
fldenv
nop
or
or
push
pushf
pusha
bound
fs
fbstp
mov
xchg
stos
xchg
push
in
sbb
cli
dec
call
add
jp
test
pusha
aaa
test
aam
jl
sub
daa
mov
test
std
(bad)
jo
ins
pop
adc
push
sub
xchg
call
stos
loope
mov
cmps
sub
fnsave
push
adc
mov
xor
imul
and
repz
test
xchg
into
in
ja
pushf
mov
mov
fstp
scas
cmp
mov
neg
ins
xor
stos
jns
dec
pop
mov
arpl
sbb
cmp
and
(bad)
cmp
xor
dec
push
cmp
ret
pop
add
fdivr
imul
in
push
xchg
adc
mov
pop
fidiv
cmp
fadd
les
into
sahf
push
xor
pop
dec
mov
jb
cmp
mov
pop
lods
mov
retf
mov
outs
loope
jge
jmp
loopne
movs
mov
push
ret
rcr
push
mov
inc
sbb
mov
cmp
inc
jecxz
mov
jmp
sar
call
cwde
sub
add
mul
cmc
xchg
jne
std
shr
loope
lock
(bad)
in
pop
retf
pop
call
push
adc
jg
lea
scas
bound
sbb
(bad)
stos
jl
dec
stos
xchg
push
inc
mov
fistp
sub
(bad)
mov
ja
inc
lods
sub
stc
popf
hlt
xchg
das
or
in
pop
push
leave
lods
leave
sbb
sti
jnp
repz
out
sub
dec
adc
jb
cmp
cmp
and
loopne
pop
iret
call
inc
push
xchg
in
pop
out
xchg
int
sub
jmp
nop
js
pop
mov
mov
pop
xor
imul
inc
stos
pushf
cmp
inc
das
xchg
mul
xor
icebp
xchg
not
lods
push
add
test
push
arpl
pop
cmp
mul
scas
dec
nop
test
test
adc
aaa
fcmovu
pop
loope
or
jecxz
nop
and
jnp
cmps
leave
sbb
test
xchg
dec
cmp
mov
ret
sbb
loopne
adc
fidiv
or
jmp
into
enter
push
shr
xchg
push
dec
xchg
mov
(bad)
jae
cli
or
inc
jle
cmp
jecxz
add
ins
jmp
cmp
adc
sbb
pop
ds
sub
sbb
inc
adc
ds
rcl
ds
push
lahf
lahf
mov
pop
repz
or
pop
add
daa
mov
sbb
adc
jle
int
loope
in
xor
movs
ret
push
and
sbb
stos
add
movs
jle
mov
daa
fld
mov
inc
mov
xor
pop
sbb
pop
out
xchg
pop
cdq
and
test
push
xchg
adc
lea
add
jle
xchg
sub
push
mov
movs
add
cmp
in
popf
add
mov
fwait
imul
lock
movs
imul
xor
rcl
lods
dec
sbb
in
jmp
push
retf
stos
mov
dec
lahf
out
nop
push
ins
mov
xchg
sbb
sub
lahf
or
mov
addr16
mov
xlat
xchg
call
ds
(bad)
icebp
jle
ret
std
bound
or
xchg
mov
(bad)
int
inc
fstp
xchg
push
push
pop
lahf
mov
xor
pop
int
jecxz
pusha
cmc
fcom
data16
or
cmp
ret
sub
xor
xchg
icebp
mov
imul
sbb
add
(bad)
mov
cmp
mov
cdq
je
test
rcr
lds
sub
push
pop
sub
or
clc
movs
dec
xchg
sar
scas
movs
cmp
mov
cld
xchg
xchg
pop
retf
mov
shl
sub
popf
push
lds
mov
ror
xchg
pushf
test
and
add
(bad)
lock
pop
push
fidivr
xchg
cmp
and
cmp
pop
sbb
aam
adc
or
cs
push
pop
add
not
inc
imul
inc
inc
mov
scas
pop
inc
inc
ins
hlt
xchg
leave
mov
pushf
xor
mov
iret
out
dec
mov
lods
add
es
movs
lods
sbb
add
add
pop
push
jl
lods
into
and
push
lods
dec
or
adc
das
pop
jo
lds
pop
fstp
and
ja
arpl
jge
in
(bad)
(bad)
cmc
stos
jmp
call
scas
jae
sbb
xlat
lods
dec
inc
aas
loopne
jmp
dec
scas
mov
stos
int3
int
pop
dec
inc
fstp
cmp
nop
test
out
(bad)
lods
mov
xor
push
ja
retf
scas
scas
test
les
cdq
inc
cmp
out
mov
aam
xchg
adc
or
jl
push
pop
cmc
xchg
stc
fadd
xchg
fcomip
jb
adc
hlt
mov
jmp
mov
add
(bad)
jg
(bad)
dec
push
and
hlt
popa
mov
add
and
push
fucom
cmp
loopne
xchg
jecxz
std
leave
pushf
ss
imul
iret
push
xor
jg
or
dec
mov
int3
cs
outs
(bad)
cld
lods
jmp
fmul
jl
mov
pop
xchg
idiv
data16
xor
retf
aad
fsubr
dec
or
inc
rol
ficomp
inc
add
mov
dec
xchg
jecxz
xchg
pushf
mov
xchg
cmp
sub
jmp
xchg
and
aad
in
push
sub
js
test
xchg
out
js
popf
add
nop
out
xchg
and
or
out
cmp
imul
fimul
shl
not
push
inc
mov
jge
lods
aas
jl
cld
lods
dec
dec
cmp
cmp
retf
mov
(bad)
fistp
out
enter
push
pop
cmp
inc
test
es
jmp
loop
(bad)
lea
sbb
out
and
sub
cdq
out
je
xor
in
or
and
mov
sbb
mov
pop
xchg
push
sbb
jmp
add
addr16
sbb
test
xor
lea
enter
call
cld
mov
jmp
push
and
out
push
scas
mov
cmp
test
add
call
add
pop
rcr
mov
mov
inc
in
xchg
xchg
add
movs
popa
jno
bound
pop
scas
into
pop
std
or
xor
nop
mov
loopne
mov
mov
sub
mul
jle
xor
xor
jno
rcl
cmps
ret
pushf
mov
xor
test
sahf
fwait
sub
jmp
sub
test
(bad)
pop
aas
jns
mov
aam
test
jl
inc
std
xlat
addr16
mov
div
cmps
arpl
outs
adc
cmps
std
or
xchg
stos
or
ret
sbb
test
mov
enter
retf
cmps
xchg
mov
jmp
imul
cmps
aaa
hlt
test
xlat
hlt
inc
dec
fdivr
cdq
add
mov
xchg
push
xor
fstp
jecxz
xchg
xchg
jmp
gs
adc
add
adc
lock
fdiv
xlat
mov
cwde
fdivr
mov
dec
inc
and
cmc
call
frstor
push
out
xlat
js
daa
imul
mov
jl
mov
das
fdivr
dec
jno
and
inc
(bad)
into
jo
js
and
cdq
mov
imul
lods
aad
fstp
addr16
ja
push
iret
sub
cdq
lods
sti
add
clc
cli
xchg
cli
outs
dec
(bad)
gs
add
test
pop
inc
pop
fsubr
inc
bound
lds
daa
mov
mov
imul
jb
pushf
cmp
mov
sub
add
in
test
xchg
cmps
pop
clc
out
mov
xor
sbb
or
dec
in
stos
jp
mov
or
cmp
pop
adc
cdq
and
and
std
mov
mov
ret
imul
sub
push
mov
add
test
inc
inc
int
push
clc
sti
adc
cmp
hlt
int3
inc
(bad)
std
push
stos
(bad)
rol
test
push
outs
stos
pop
cwde
xor
xchg
sbb
xor
pop
sbb
movs
jp
repz
mov
(bad)
enter
mov
ror
cld
loope
shr
mov
lods
cld
mov
popf
pop
cmps
mov
clc
xor
xchg
(bad)
cmps
push
sbb
or
push
jnp
jnp
mov
hlt
daa
push
iret
popa
sbb
sbb
pusha
adc
loope
bound
or
sub
sbb
pop
mov
sahf
mov
aas
mov
mov
inc
inc
and
scas
(bad)
js
mov
out
pop
retf
outs
jmp
xchg
jmp
repz
sub
or
push
arpl
jmp
bound
fs
outs
sub
cli
repnz
repz
repz
aam
aas
dec
cmp
cmp
pop
xchg
std
mul
mov
pop
retf
or
ss
iret
repnz
dec
repnz
push
push
(bad)
(bad)
rcr
hlt
sub
repz
lock
adc
mov
inc
fisttp
add
fist
or
loop
outs
test
cld
adc
jo
jge
aad
test
(bad)
mov
mov
sub
out
outs
sti
aas
call
xchg
fdiv
or
add
test
pushf
jmp
and
jp
ins
std
lahf
rol
in
add
paddsb
rcl
dec
xor
pop
les
mov
mov
fidivr
jmp
dec
fisub
and
inc
test
xor
aas
ds
into
aam
es
(bad)
cmp
inc
xchg
movs
and
enter
xchg
add
adc
ds
mov
popa
fst
dec
cmps
in
jge
adc
cmps
js
ins
push
push
fxch
mov
loope
test
xchg
leave
lahf
outs
sub
inc
cs
mov
les
mov
and
data16
and
and
sub
loop
mov
jmp
movs
mov
xchg
jne
mov
inc
push
and
or
aas
sbb
xchg
call
xchg
sbb
jae
xor
pop
jbe
or
jle
xchg
inc
jge
mov
stos
cmp
ficom
movs
popf
xor
shl
xchg
push
cwde
cmp
jl
mov
mov
pop
int
test
jb
mov
idiv
pop
les
xchg
daa
lock
movs
out
push
es
sub
and
sti
ins
jo
mov
(bad)
cs
stos
and
stos
fist
jmp
test
arpl
jbe
push
fist
inc
push
shl
ret
xchg
shl
dec
or
sbb
mov
xor
movs
sbb
movs
fcomip
out
cli
push
mov
cmp
jnp
nop
out
call
dec
cli
push
test
xor
es
out
loop
add
mov
ret
sub
in
js
push
leave
ret
push
loop
addr16
push
add
add
or
aas
inc
sbb
jb
in
add
xchg
arpl
push
dec
test
mov
xchg
push
pop
mov
mov
sub
jecxz
pextrw
pop
mov
test
mov
js
pop
shl
xor
lea
mov
stc
xor
adc
sbb
dec
inc
inc
rcl
xchg
and
sbb
imul
gs
mov
fldcw
adc
not
pop
sar
xchg
lahf
outs
xchg
add
cmps
sub
(bad)
cmp
lods
mov
cmpxchg
fwait
push
mov
add
in
and
aas
sahf
fistp
xor
adc
xor
jno
sbb
mov
(bad)
and
lahf
dec
ja
jnp
(bad)
cwde
and
mov
adc
mov
cs
pushf
mov
ins
mov
es
mov
mov
push
cmps
or
int
sbb
movs
mov
movs
push
arpl
mov
pusha
scas
cmp
jo
dec
sar
push
int3
or
sbb
inc
in
rol
add
pop
fcmovb
push
push
xchg
cmp
pop
nop
jnp
icebp
mov
fsubp
cwde
pop
repz
sbb
ins
xor
sbb
cmp
les
pop
mov
in
jmp
pop
mov
or
in
sbb
ret
sbb
nop
inc
jmp
call
cwde
mov
shl
pop
sar
mov
loope
out
fstp
mov
cmp
ret
mov
cld
push
dec
lods
push
sahf
(bad)
and
dec
mov
mov
sbb
cmps
fist
or
cmc
ja
aad
and
popf
div
push
jp
jno
repnz
(bad)
pop
sub
mov
or
inc
pushf
lods
push
sbb
pop
jo
aaa
mov
loop
jge
cdq
xor
rcr
mov
mov
cmp
or
mov
popf
(bad)
es
bound
mov
ins
sub
clc
xor
push
mov
and
sbb
lea
pop
xor
add
or
ror
test
fist
pop
ja
stos
pop
sbb
imul
fstp
ret
mov
xchg
les
inc
sub
mov
pop
inc
or
inc
loope
mov
jb
cmp
mov
or
dec
les
inc
idiv
jl
jae
mov
in
adc
(bad)
push
das
dec
stc
inc
mov
ret
into
mov
stos
adc
pop
stos
retf
pop
dec
popa
es
and
imul
aaa
inc
shl
cli
call
push
mov
inc
clc
rol
in
push
out
out
sub
call
add
dec
or
dec
fstp
fild
aaa
aad
mov
adc
das
xchg
es
call
xor
mov
xor
cs
push
loope
addr16
popa
clc
push
(bad)
xchg
cmps
push
(bad)
icebp
xor
lock
mov
pushf
jl
dec
jns
pushf
ret
ret
cmp
xor
ds
push
outs
mov
popf
out
fmul
and
push
mov
sar
jae
add
inc
dec
jle
sahf
mov
and
ficom
into
in
inc
push
pop
dec
pusha
sbb
pop
jb
dec
ins
and
(bad)
ins
aas
cs
out
inc
pop
mov
mov
shr
cdq
call
lahf
in
clc
push
das
stc
rcl
jmp
fs
shr
pushf
loopne
ja
std
xlat
es
not
loop
std
rol
sbb
mov
and
hlt
stos
xchg
push
lahf
test
mov
mov
adc
jae
bnd
jo
mov
outs
or
int
mov
lods
jbe
pop
push
je
or
jnp
and
popf
icebp
jecxz
gs
loopne
out
iret
mov
adc
jmp
jmp
maskmovq
not
mov
jno
mov
push
mov
mov
mov
mov
cmc
mov
cmp
std
push
mov
jmp
sbb
iret
and
enterw
inc
and
xchg
adc
jmp
inc
mov
add
nop
inc
in
xchg
pusha
jb
mov
xchg
ficomp
xchg
or
xchg
neg
mov
neg
xchg
iret
inc
add
pop
arpl
jl
cmp
push
or
push
stos
sub
rcr
bound
into
inc
scas
repnz
cmp
xlat
dec
fnstsw
jns
dec
test
dec
xchg
push
or
daa
imul
rol
or
out
jg
aaa
call
retf
mov
test
pop
mov
inc
adc
mov
or
cmp
xchg
in
pop
xchg
xor
(bad)
push
stc
pop
adc
test
test
jne
out
out
xlat
sub
and
and
fucomp
pop
adc
mov
push
adc
adc
daa
mov
xor
mov
iret
xchg
push
push
jge
mov
pop
jns
rcl
mov
popa
mov
outs
or
sar
int3
jae
scas
or
add
or
shr
jp
pusha
adc
punpckhdq
imul
fidivr
sub
call
je
fnsave
int
add
mov
add
mov
push
popa
mov
pop
mov
dec
and
mov
movs
sbb
jb
mov
dec
add
outs
inc
shr
(bad)
jl
fsub
push
iret
sub
aam
cmovge
inc
sbb
mov
pop
pushf
fidivr
mov
ins
in
enter
xchg
ja
mov
mov
jnp
outs
neg
sbb
repz
hlt
sub
mov
xchg
mov
popa
mov
stos
in
popa
pushf
stc
push
jmp
mov
pop
test
icebp
call
push
xchg
lods
aas
rcl
sub
movs
xchg
mov
sbb
mov
pop
jbe
stos
rcr
or
xchg
xor
scas
imul
adc
stos
pop
test
mov
push
aas
xor
add
aaa
and
sub
wrmsr
dec
cs
icebp
cmp
sbb
xchg
test
fisub
(bad)
cmp
inc
nop
dec
inc
retf
cmps
mov
rcl
add
scas
adc
cmp
jmp
pop
pop
call
pop
cmp
add
fnstenv
repnz
out
loopne
mul
scas
ret
dec
pop
inc
adc
sbb
inc
cs
mov
sub
push
adc
add
push
jb
xlat
mov
add
mov
cmp
xchg
inc
dec
test
pop
xchg
retf
ss
push
or
cdq
jns
lea
dec
movs
pop
inc
call
(bad)
dec
cmp
test
out
push
pop
xor
cmp
mov
push
xchg
(bad)
cdq
sti
sbb
xor
aad
jnp
imul
retf
push
adc
enter
hlt
pop
ins
or
sub
push
sub
xchg
xchg
test
(bad)
xor
pop
test
(bad)
leave
dec
test
inc
sub
or
ret
xchg
mov
inc
jle
out
lods
add
cmp
xchg
push
push
cs
dec
cli
popf
pop
add
sub
and
mov
outs
mov
icebp
pop
ror
ret
and
xor
jmp
mov
xor
push
pop
dec
std
pop
retf
cmp
leave
mov
imul
xchg
out
and
fprem1
cmp
xchg
cmps
inc
shl
xchg
rcr
adc
std
xor
sbb
adc
xchg
(bad)
idiv
shl
pop
sub
arpl
mov
jnp
xchg
(bad)
mov
fnstsw
jecxz
iret
aas
mov
pushf
std
pop
lahf
inc
stc
mov
lds
add
dec
pop
fwait
adc
xchg
mov
and
adc
aaa
mov
jo
dec
xor
movs
test
(bad)
(bad)
call
cmp
cmp
stos
stos
or
jecxz
int
popf
mov
xor
mov
jo
lock
xchg
pop
not
addr16
mov
mov
or
dec
movs
xchg
mov
jae
lods
mov
mov
pop
and
bound
mov
pop
rol
repz
cwde
(bad)
cmp
jns
outs
sti
jl
mov
pop
add
stos
or
cmps
dec
inc
cli
aaa
cmp
sub
dec
xchg
shl
in
in
add
rcl
xlat
mov
jo
mov
sub
push
dec
sub
jne
inc
arpl
pop
pop
sub
je
xor
aaa
and
imul
mov
(bad)
push
jmp
xchg
xor
int
(bad)
mov
fsub
imul
fwait
jae
and
ss
cmp
(bad)
cmp
adc
lea
mov
nop
(bad)
ror
mov
fsubr
cmp
js
jl
dec
out
xlat
les
add
mov
das
mov
cmps
and
pop
icebp
jmp
inc
stc
sub
rcl
jno
or
or
cs
ss
mov
loope
shl
inc
rcr
loope
mov
or
push
scas
push
into
sbb
es
pop
dec
xor
push
ss
cld
shl
retf
sbb
aaa
or
push
sub
(bad)
fcomi
pop
push
jmp
in
sub
push
dec
mov
xor
push
sbb
and
jmp
int
ret
pop
or
sbb
xchg
es
nop
fcomp
pop
and
shl
mov
mov
jle
int3
dec
jbe
test
(bad)
jmp
mov
aaa
push
fcmove
in
sbb
and
xchg
loopne
sbb
xchg
xchg
fdivp
dec
int3
cmp
mov
or
aam
mov
out
lods
dec
or
mov
cmp
out
and
test
adc
inc
das
and
(bad)
ins
lahf
cmp
dec
dec
mov
adc
and
push
les
sub
stos
push
mov
inc
ins
aam
cmp
lock
dec
fcomi
popa
shr
mov
jae
mov
add
pop
inc
cmp
sbb
in
pop
mov
and
sbb
push
fcmovnbe
hlt
cmp
dec
inc
leave
mov
repnz
fs
inc
sti
dec
inc
push
sahf
test
dec
es
and
inc
jle
adc
pop
out
and
and
fistp
inc
jmp
sbb
fwait
adc
adc
ret
xchg
fs
cmps
pop
cmp
ror
shl
cmp
ret
mov
inc
pop
addr16
mov
jbe
clc
push
call
movs
or
clc
stos
add
retf
fisttp
add
jnp
and
mov
out
shl
outs
jmp
mov
cld
loopne
out
jnp
stos
movs
or
sub
and
push
js
mov
push
cli
dec
cmp
and
test
out
push
cwde
mov
inc
test
mov
std
mov
push
jnp
push
and
adc
cdq
out
xor
(bad)
(bad)
mov
add
xor
sahf
lods
sbb
xchg
loope
push
pop
es
jle
mov
out
mov
adc
es
xchg
push
cmp
retf
cmp
push
and
xchg
outs
call
lock
and
xor
and
adc
sahf
movs
add
or
dec
dec
dec
stos
mov
and
scas
sub
jns
pop
fisub
xchg
xchg
out
outs
nop
adc
lahf
(bad)
ins
fst
(bad)
scas
jnp
(bad)
cmc
cmp
sar
bt
or
ror
and
aad
mov
xchg
dec
mov
xor
jecxz
xor
mov
mov
add
inc
aas
mov
(bad)
call
data16
mov
inc
push
pop
lods
outs
or
push
call
inc
loop
les
rcr
push
push
loop
stc
and
loop
call
data16
dec
sub
sbb
jns
arpl
pop
xor
and
stos
add
mov
fiadd
repnz
adc
sub
pop
js
adc
push
pop
push
mov
push
int3
cs
mov
push
xor
call
mov
or
lock
pushf
out
mov
pusha
dec
fucomi
sbb
xor
lea
mov
stos
scas
jo
mov
outs
jge
bound
fst
in
call
mov
outs
inc
mov
pop
add
out
mov
inc
jo
arpl
dec
mov
out
hlt
pusha
fisubr
mov
out
push
pusha
jecxz
pop
nop
idiv
push
jae
xor
(bad)
cmp
mov
inc
inc
cmps
pop
rep
call
jp
sbb
outs
sbb
(bad)
lahf
mov
inc
outs
mov
lods
xchg
aad
xchg
shr
jp
jbe
cmp
or
sbb
dec
cli
int
mov
jle
jmp
sbb
loopne
out
jmp
xor
mov
xchg
loope
outs
cmp
aas
jne
adc
sbb
sbb
mov
mov
outs
stc
jecxz
out
pop
popf
dec
mov
add
lock
ins
cmp
(bad)
jb
addr16
pop
jb
imul
pop
mov
inc
or
in
icebp
cmp
xor
into
jmp
jns
jnp
xor
pop
test
mov
sahf
sbb
mov
jp
adc
retf
ds
and
push
sub
jp
sub
mov
or
xchg
sbb
stc
or
pop
mov
(bad)
sbb
fnstenv
and
or
xchg
pop
aaa
out
jmp
xor
in
inc
cwde
ds
xor
rcl
cmp
mov
dec
(bad)
xor
or
mov
mov
push
xchg
adc
cmp
mov
aas
mov
cmp
shl
inc
xchg
add
int
repnz
imul
xchg
mov
in
push
out
or
mov
inc
adc
in
xchg
dec
aad
push
test
inc
mov
cmp
pushf
sbb
push
push
dec
xor
pop
daa
xchg
cmp
push
leave
int
push
dec
push
mov
sub
add
es
push
sub
lahf
cs
inc
dec
fcom
repz
imul
leave
jp
sub
cmp
inc
(bad)
retf
aaa
scas
imul
scas
xchg
nop
lahf
test
jns
sbb
sub
cdq
dec
fwait
xor
cwde
and
add
jb
pop
loop
call
lock
push
imul
int
lahf
xchg
jnp
gs
or
jns
mov
dec
rcr
push
test
cwde
lea
test
push
add
pop
in
mov
xchg
mov
outs
mov
ins
into
jns
push
cmps
mov
sub
sbb
push
or
clc
add
jbe
dec
(bad)
mov
stos
push
ret
int3
cmp
jle
lea
test
push
inc
lods
call
mov
cmp
add
sbb
icebp
lahf
mov
ret
popf
pop
nop
push
scas
dec
(bad)
aad
loopne
ss
or
add
cmp
push
inc
adc
xchg
push
pop
mov
mov
inc
cmp
dec
dec
dec
inc
or
fcom
fistp
and
jp
call
test
xchg
inc
jbe
fild
add
cmps
jecxz
cs
cli
sub
and
mov
(bad)
ins
mov
xchg
add
cmps
dec
or
xchg
aad
sub
xchg
adc
or
sahf
add
je
inc
add
test
push
std
push
jbe
dec
fcmove
sti
icebp
or
jge
fs
stc
retf
in
lea
mov
mov
mov
inc
cmp
int
aas
dec
jge
(bad)
mov
add
jle
mov
or
inc
sub
xor
adc
repz
fisubr
cdq
xchg
xor
mov
mul
push
mov
adc
(bad)
fcmovbe
xor
cld
xchg
stos
aad
dec
adc
jb
int3
push
or
clc
lea
xchg
fiadd
jle
call
fcomp
sub
and
cmp
inc
jle
xchg
mov
sbb
jb
cmp
jmp
adc
xor
push
stc
hlt
out
sbb
sbb
xchg
push
ret
loope
clc
js
mov
mov
les
imul
adc
scas
ror
sub
into
out
mov
pop
mov
dec
cmp
scas
ins
and
cmp
(bad)
or
imul
int
outs
mov
loopne
in
xor
cmps
add
xchg
aas
mov
stos
cmp
enter
mov
adc
imul
pop
push
add
loop
test
imul
ret
ja
mov
cmp
out
ins
rcpps
jp
adc
in
nop
add
mov
or
inc
cmp
js
call
xchg
bound
shl
sub
icebp
repnz
jp
xor
addr16
enter
and
je
xor
jmp
inc
test
addr16
xlat
jecxz
stc
mov
aam
icebp
push
mov
inc
aaa
jnp
cdq
push
bound
fisttp
push
add
mov
daa
popf
ja
jmp
jp
call
mov
aaa
into
push
call
pop
adc
arpl
pop
int3
mov
popa
cli
mov
stos
sti
and
adc
data16
fstp
arpl
sbb
mov
mov
mov
and
in
call
fcom
xchg
pusha
add
ja
mov
add
push
push
push
nop
scas
or
loopne
xabort
push
enter
pop
rcr
xchg
xor
js
xchg
imul
arpl
add
add
call
inc
addr16
loope
xchg
std
mov
imul
mov
lahf
cdq
lods
adc
cmp
cmc
mov
shl
adc
mov
call
or
adc
test
(bad)
jmp
loop
mov
sub
je
xlat
jmp
jge
jo
push
mov
and
mov
pop
imul
(bad)
dec
ret
pop
pop
rcl
cmp
pop
fwait
mov
(bad)
sahf
or
addr16
push
jmp
daa
fcom
out
and
or
or
daa
fcomp
fpatan
js
sub
(bad)
fs
or
xor
out
lock
dec
mov
mov
xchg
mov
inc
cmps
(bad)
jp
(bad)
jl
out
cmp
push
(bad)
out
xchg
stc
and
pop
stc
inc
add
or
push
pop
retf
fnstenv
dec
pop
sahf
or
test
mov
dec
mov
je
dec
sbb
rol
and
dec
xchg
adc
dec
or
sbb
xor
inc
jne
retf
mov
adc
iret
clc
xor
fucom
jl
or
adc
aad
inc
les
outs
inc
xor
push
jg
ret
sub
pusha
ret
sub
stos
pop
cld
inc
sbb
xor
jmp
in
ja
cdq
sbb
mov
stos
pushf
icebp
and
addr16
fwait
inc
xor
cmp
movs
pushf
rol
cld
adc
jbe
and
out
add
add
xor
sub
xchg
pop
jno
in
or
jmp
(bad)
jo
mov
in
in
cdq
in
cmp
test
mov
pop
mov
mov
dec
test
sub
sbb
mov
jmp
adc
mov
shr
std
cmp
push
pop
sub
add
stos
mov
movs
jmp
cli
dec
cwde
(bad)
pop
bound
pushf
sbb
scas
xor
stos
pop
or
mov
pop
sub
add
jge
cmp
pop
inc
sbb
test
scas
sub
stc
dec
push
xor
out
mov
push
mov
rol
xchg
sbb
adc
sti
into
push
stos
xchg
cli
fsubr
dec
test
jae
ror
jp
push
rcr
add
pushf
sub
mov
in
mov
cmp
sahf
ret
jge
mov
sbb
xlat
repnz
frstor
imul
pop
lods
into
ss
iret
pop
xchg
loop
ds
int3
xchg
mov
int
add
push
push
in
imul
mov
or
adc
in
into
mov
and
mov
stos
and
inc
add
cwde
pop
ins
inc
mov
repnz
push
mov
pop
xor
pop
vmwrite
loopne
das
jmp
dec
pop
dec
add
js
xor
jns
shr
cmc
cli
ins
jecxz
adc
cmp
xor
sub
add
mov
in
mov
(bad)
and
jmp
das
sar
jne
(bad)
retf
mov
mov
setae
xchg
sub
fisubr
out
fisttp
aaa
dec
mov
lahf
in
add
inc
test
pop
xchg
cmps
cmp
in
out
(bad)
cmp
sti
retf
ins
push
add
inc
inc
xchg
mov
ss
(bad)
push
out
xor
ret
bound
cmps
scas
push
jo
jle
mov
fisttp
mov
ja
sbb
mov
and
push
mov
jnp
add
stos
and
pop
enter
test
pop
jge
stc
(bad)
sbb
dec
nop
test
out
lods
push
call
sbb
inc
mov
jnp
stc
pop
fs
sbb
mov
cmp
(bad)
and
cmc
cmp
inc
xchg
mov
mov
cmp
cmp
pop
xchg
jnp
mov
and
mov
gs
xchg
scas
mov
and
mov
int3
pushf
in
xchg
stos
mov
add
cdq
mov
sub
shl
out
and
pop
mov
retf
inc
sub
das
xor
aam
dec
call
pop
mov
mov
xchg
inc
ja
xor
popa
div
dec
mov
pop
sbb
xchg
sub
out
mov
dec
cmp
jmp
inc
mov
sbb
push
adc
aas
mov
adc
jmp
loop
push
lds
and
pop
repz
cli
fldcw
pop
xlat
mov
push
xor
jl
fidiv
jecxz
dec
xchg
shl
dec
adc
dec
daa
mov
dec
(bad)
out
imul
inc
idiv
inc
sbb
inc
dec
sub
sbb
(bad)
pop
dec
stos
jg
lea
xor
push
out
mov
fsub
pop
push
cmps
ficom
ficom
mov
sub
sti
lods
mov
pop
jge
fbld
shl
and
dec
xor
push
call
stc
(bad)
fucomip
xor
hlt
in
inc
adc
aaa
arpl
lds
jnp
sahf
push
mov
cwde
adc
push
dec
call
pop
mov
mov
out
pop
fimul
ss
push
div
(bad)
inc
rdpmc
pusha
jecxz
push
jns
inc
adc
(bad)
mov
push
(bad)
loop
cmp
adc
cs
in
inc
outs
add
dec
test
adc
(bad)
sahf
cmp
lock
xchg
push
lods
out
es
mov
lods
std
shl
jb
push
fist
push
cmp
sar
mov
fld
leave
cmp
movs
lahf
adc
xchg
cmp
and
push
pop
(bad)
int3
aam
mov
leave
sub
xchg
(bad)
mov
lods
repz
int
(bad)
push
or
test
data16
adc
and
xchg
mov
mov
fiadd
push
push
and
jns
add
popa
mov
jecxz
inc
pop
rcr
ret
cs
sbb
jnp
dec
adc
cld
mov
xlat
shl
ror
jle
rol
push
xchg
stos
pop
loop
scas
fs
icebp
nop
repnz
jecxz
scas
and
sbb
push
sbb
dec
xchg
jmp
in
mov
pusha
adc
scas
sbb
dec
outs
movs
sahf
xchg
(bad)
mov
mov
(bad)
jp
lods
std
jmp
jmp
push
fistp
ins
cmc
movs
mov
xor
and
imul
jg
xor
fmulp
push
add
loopne
pop
retf
in
sti
rcr
into
fld
iret
rcl
cmps
ins
and
jg
adc
mov
das
or
repnz
fprem1
rcr
xor
push
test
in
int3
inc
mov
mov
xchg
call
sub
pop
dec
xchg
fs
ret
pop
cmp
jo
jg
lahf
xchg
inc
mov
mov
lea
shl
and
scas
or
mov
mov
cdq
sub
dec
mov
leave
call
mov
repz
xor
rol
xchg
cmp
xchg
jno
rcr
shl
fdivr
jmp
jnp
pop
pusha
pop
sar
and
aaa
into
shl
cmp
(bad)
shr
cmps
popa
xchg
daa
jae
xor
mov
ja
mov
stc
ds
rcl
mov
scas
adc
mov
mov
ins
scas
mov
rcl
ds
ja
inc
sar
clc
lahf
ja
retf
retf
fwait
imul
push
popa
dec
jmp
in
ja
dec
jecxz
sbb
xchg
cmp
(bad)
jns
(bad)
mov
add
or
inc
loopne
jbe
dec
pop
dec
cmp
aaa
loop
sar
(bad)
in
dec
(bad)
sahf
mov
je
mov
xchg
clc
add
mov
xor
inc
outs
dec
or
jb
rcl
paddd
aaa
lds
sub
inc
(bad)
push
jp
call
stos
(bad)
ins
xor
xchg
mov
mov
adc
lds
in
pop
(bad)
push
add
es
cmp
or
jmp
push
cmp
jne
sub
fisttp
mov
sub
ins
sbb
pushf
mov
push
jb
les
std
aaa
pop
les
scas
lea
sub
es
sub
jge
pop
pushf
ficomp
lods
sub
mov
cmp
inc
xchg
je
dec
mov
sub
or
dec
lock
sbb
aas
pop
xchg
repz
jl
mov
jmp
sub
sbb
mov
call
sub
mov
mov
or
es
(bad)
out
cmp
cmp
xor
iret
xor
ficomp
cwde
jg
lahf
push
pop
ret
and
mov
jmp
enter
sbb
xchg
xor
adc
gs
lods
(bad)
sub
dec
push
sti
and
pusha
jo
enter
mov
fcomi
lea
or
dec
inc
dec
mov
fucomip
mov
imul
adc
push
bound
test
cmp
cmp
xchg
hlt
sbb
xchg
test
jmp
dec
xchg
mov
iret
push
adc
iret
js
and
and
(bad)
add
mov
movs
popf
(bad)
xor
loopne
sub
int3
repz
mov
adc
xor
push
dec
push
mov
push
xor
xor
popf
xor
inc
dec
pop
dec
daa
fdiv
fnstcw
jecxz
sbb
mov
mov
mov
repz
mov
mov
and
jae
mov
jno
test
inc
out
in
sub
xor
test
add
sub
sbb
imul
iret
push
cmc
and
test
inc
pop
mov
jne
(bad)
lahf
mov
clc
fucomp
out
aas
in
cmp
std
test
das
shl
jno
les
and
int3
inc
push
pop
cmps
or
or
pop
mov
cmp
movs
pop
mov
adc
and
pop
xchg
mov
inc
xchg
cmp
mov
mov
mov
add
icebp
dec
jae
mov
pusha
shl
xlat
rcr
cmp
and
jno
test
cwde
sti
sub
test
inc
mov
repnz
pop
sbb
mov
add
dec
and
mov
retf
addps
push
cmp
sub
xor
ds
std
inc
enter
out
xchg
mov
and
aas
mov
mul
jle
cli
aas
push
les
inc
cmp
jnp
push
sbb
and
or
call
popa
add
jmp
lods
sbb
shl
inc
loop
push
aad
lods
jl
movlps
push
into
in
dec
stos
or
dec
inc
cmps
dec
bound
daa
cdq
pushf
push
les
cmp
test
jmp
ss
out
cmps
sub
sub
fldenv
push
ins
lahf
push
cmc
push
lods
and
sbb
mov
mov
loop
mov
inc
sbb
mov
cmps
nop
mov
repz
inc
jb
stc
loopne
pop
idiv
cwde
add
mov
dec
or
retf
mov
scas
(bad)
dec
inc
push
mov
sahf
push
mov
xor
ror
mov
xor
call
js
jecxz
out
in
sub
loopne
movs
push
test
mov
jmp
call
(bad)
mov
xor
div
leave
cwde
cmp
adc
outs
or
aad
sub
movs
imul
in
lock
in
or
push
mov
ss
xchg
adc
xchg
mov
pusha
push
in
scas
pop
jge
push
and
(bad)
jo
mov
adc
jnp
ss
push
jg
adc
mov
inc
adc
jmp
push
push
mov
mov
(bad)
mov
popa
jp
and
scas
and
je
ss
inc
fs
jmp
je
dec
mov
and
fdivr
cli
outs
cmp
push
jl
or
out
sahf
fcmovbe
scas
mov
pop
aaa
adc
nop
pop
iret
push
daa
mov
pusha
js
pop
pop
jo
mov
fist
jns
jmp
ds
inc
jno
pop
inc
(bad)
dec
xor
and
mov
cdq
mov
lods
jp
sti
stos
or
ins
xor
cli
int3
pcmpgtd
scas
out
push
into
ret
in
(bad)
dec
pushf
or
ss
loop
enter
jl
jmp
xor
mov
xor
ret
xchg
out
pop
cmp
dec
dec
movs
scas
xchg
test
ret
xor
adc
(bad)
mov
call
mov
popf
dec
add
imul
cmp
in
rcr
lods
pushf
jne
dec
cmp
or
cdq
mov
shl
add
in
or
scas
ins
or
or
(bad)
dec
or
pop
in
cmp
loopne
pop
jno
cmp
push
ins
outs
xchg
fwait
loope
ins
aam
pop
mov
ja
ins
fiadd
jg
and
not
loope
xchg
out
shr
cmp
sbb
pushf
sub
mov
jne
jns
in
clc
mov
mov
outs
push
or
std
jmp
push
mov
cmp
or
sub
mov
jne
sbb
hlt
and
test
push
(bad)
push
test
and
mov
into
push
clc
jmp
es
push
iret
test
arpl
pop
cmp
mov
pushf
pop
pop
or
outs
dec
xor
push
mov
enter
mov
sub
int3
mov
into
lock
cmp
fyl2x
imul
and
stos
xor
add
and
mov
sub
sub
jnp
inc
out
or
xor
inc
xchg
mov
iret
push
jo
or
int3
test
and
mov
fisttp
adc
fwait
outs
and
xor
xor
mov
sbb
jmp
pop
push
push
cmc
bswap
test
retf
shl
xor
dec
out
out
add
repnz
in
ret
cli
push
add
icebp
push
nop
test
in
movs
xor
add
hlt
inc
call
mov
loop
mul
jbe
in
(bad)
stos
(bad)
ins
aaa
push
in
test
sub
mov
(bad)
add
fs
mov
mov
int3
xor
pushf
pop
out
mov
sbb
fst
les
inc
stos
into
popa
daa
call
data16
jmp
loopne
sub
jle
fisubr
push
pop
dec
push
sti
sahf
jmp
and
(bad)
mov
outs
cmc
xchg
fstp
(bad)
out
mov
mov
test
xor
nop
ss
or
out
pusha
jmp
pop
(bad)
jns
data16
icebp
xor
jmp
jp
idiv
xor
sbb
icebp
inc
(bad)
rol
clc
xchg
inc
or
imul
test
xchg
daa
dec
xchg
out
hlt
xchg
sub
fisttp
or
or
push
das
mov
sub
mov
outs
mov
sub
retf
mov
loopne
xor
stc
fbld
pop
mov
mov
gs
mov
mov
xor
cmps
daa
push
call
popf
mov
mov
je
loop
movs
mov
test
sbb
and
pop
xor
jg
pop
push
adc
scas
test
mov
pusha
jne
add
gs
test
and
call
idiv
mov
retf
inc
loope
(bad)
mov
jecxz
pushf
mov
push
adc
sub
ins
in
(bad)
and
repz
or
xor
aaa
fcomip
xchg
leave
(bad)
test
int
dec
mov
pusha
not
push
cmp
adc
pop
jne
fcom
in
mov
clc
push
int3
xchg
mov
jno
xor
repnz
jmp
pop
movs
mov
ret
pop
xchg
in
enter
retf
mov
ror
aam
mov
pop
je
sahf
call
fadd
outs
mov
mov
fisubr
lahf
push
jle
push
and
or
jbe
jmp
pop
and
pop
test
mov
movs
mov
movs
jns
and
lahf
je
into
pop
repz
test
inc
or
adc
(bad)
fld
xchg
in
pop
push
dec
jle
aaa
cwde
loop
or
and
out
add
mov
mov
mov
aad
scas
fsubr
mov
neg
repnz
int3
cdq
aad
call
es
sbb
repz
fs
mov
test
out
dec
stos
fstp
sub
fwait
add
leave
inc
stc
outs
stos
inc
and
iret
mov
mov
sbb
ja
in
into
lods
scas
dec
leave
retf
cld
clc
dec
jbe
inc
xchg
push
mov
or
int
sahf
cmp
popa
scas
push
into
sbb
adc
push
mov
xor
xchg
xor
test
xchg
stos
sub
cmp
(bad)
cmps
push
cmp
pop
xchg
dec
dec
mov
lahf
add
pop
inc
shl
push
(bad)
in
mov
push
sub
in
btr
nop
loop
pop
xchg
les
jbe
les
mov
mov
jecxz
sub
fs
jmp
inc
test
dec
xchg
std
loope
xchg
rcr
cmp
xchg
retf
nop
shl
dec
mov
scas
test
or
mov
hlt
jg
push
cld
into
es
mov
sbb
into
cmps
push
and
jmp
jge
xchg
imul
ja
ja
inc
inc
push
push
sub
inc
daa
mov
push
test
pop
mov
jmp
pop
loopne
repz
dec
mov
icebp
call
adc
aam
call
jae
sbb
imul
xor
sbb
les
dec
mov
and
push
sub
and
cmp
or
push
shl
shl
inc
xchg
bound
ins
ds
sar
or
das
sub
les
jg
jl
(bad)
std
adc
xchg
hlt
int
inc
adc
out
div
sub
das
in
xchg
dec
jo
imul
dec
dec
xor
(bad)
(bad)
push
addr16
mov
jle
push
es
cmps
and
jmp
out
data16
int3
cmc
adc
jg
mov
popf
iret
cmps
adc
mov
in
sub
es
add
cmp
xor
inc
stos
shl
fcomi
mov
pop
test
imul
ficomp
mov
mov
lods
nop
inc
out
shl
sbb
scas
sub
jno
mov
push
outs
es
repz
pop
mov
ficomp
fwait
mov
inc
xor
mov
xor
imul
mov
inc
aad
lods
je
lds
imul
jg
push
sbb
ret
pop
push
adc
sti
hlt
enter
iret
mov
dec
or
dec
mov
mov
mov
sub
pop
clc
mov
sti
adc
and
xchg
movs
or
daa
push
dec
jae
jb
push
push
and
in
icebp
arpl
sub
and
test
pop
xor
mov
(bad)
and
out
sbb
(bad)
push
adc
mov
in
ret
or
loope
shl
push
fist
xchg
in
in
jecxz
aad
lods
cmp
mov
jge
and
or
sbb
rcr
divps
dec
push
add
add
push
inc
push
push
inc
fmul
pop
out
stos
mov
adc
test
cmp
and
(bad)
and
dec
xchg
int
(bad)
inc
mov
fwait
and
test
shl
std
fistp
xchg
out
jmp
pusha
out
fcomp
adc
add
bound
aad
jnp
or
push
xchg
and
std
cs
pop
data16
iret
xlat
int3
ror
mov
call
mov
js
sbb
push
test
xchg
mov
and
into
mov
lds
div
loopne
arpl
icebp
mov
xchg
ficomp
outs
(bad)
jp
shl
hlt
or
jae
cmp
push
cmp
push
xor
ins
(bad)
test
outs
xchg
stos
cmp
nop
lock
jne
fdiv
iret
jmp
and
cwde
(bad)
lds
inc
cmp
cdq
jmp
mov
outs
sar
(bad)
aad
dec
frstor
pop
hlt
div
repnz
xor
sbb
cld
dec
push
pop
retf
push
popf
jecxz
and
movs
or
pop
fwait
retf
retf
inc
leave
dec
push
shl
xor
stos
bnd
dec
ret
in
(bad)
inc
popa
dec
call
mov
imul
in
sbb
adc
mov
sub
(bad)
shl
or
aaa
ins
adc
sub
adc
clc
dec
loopne
push
cs
je
int
mov
(bad)
int3
call
shl
add
popf
pop
sub
dec
push
addps
sbb
cwde
push
jae
mul
add
data16
in
mov
fs
cmps
or
ds
jp
or
cmp
scas
lods
rcr
sub
(bad)
stos
jp
and
dec
push
clc
adc
rep
in
jg
outs
pop
jb
pop
bound
dec
fwait
ja
mov
ret
mov
and
into
pop
fdiv
mov
push
cmp
and
fdiv
jle
xor
xchg
sbb
cmps
daa
rol
and
ret
xchg
sub
push
cmps
add
mov
push
push
dec
mov
aas
(bad)
and
fmul
xchg
dec
adc
jae
sbb
jb
add
icebp
hlt
adc
xchg
mov
movs
xchg
and
jl
pop
mov
out
cwde
loope
jbe
cli
fxch
push
mov
stos
mov
and
imul
test
mov
fistp
lods
mov
fdiv
ins
adc
jbe
iret
inc
into
rcr
dec
rol
jnp
pop
ins
stos
scas
pop
cmps
and
outs
iret
adc
fdecstp
mov
bound
mov
push
and
xchg
or
(bad)
jnp
jb
aas
nop
mov
stos
xchg
test
sahf
idiv
(bad)
jecxz
jmp
lods
jo
cmps
push
outs
punpckldq
xchg
ins
mov
and
or
popa
bound
sti
shl
xor
fcom
pop
jmp
dec
fisub
inc
aam
and
jmp
and
pop
inc
scas
lea
outs
dec
mov
dec
mov
inc
xchg
xor
jp
je
shl
outs
xor
out
aad
bound
stc
push
sub
mov
dec
leave
jp
popf
call
maskmovq
test
inc
pop
mov
and
pop
xchg
in
mov
ss
pop
jl
and
inc
retf
iret
push
xchg
rcl
stos
mov
js
xor
push
sub
jnp
fxch
stos
shl
xchg
sub
fsub
cmps
loop
js
bound
inc
pop
(bad)
aas
or
xchg
jge
jle
lock
cdq
stc
cmp
xchg
imul
adc
inc
ins
(bad)
pop
sbb
daa
mov
push
rcr
sbb
push
fist
mov
dec
cdq
ret
das
movs
mov
sbb
inc
movs
retf
fwait
int3
js
or
xor
pop
(bad)
fcom
inc
(bad)
pop
sub
and
xchg
adc
mov
stos
in
gs
fwait
sti
sub
or
int3
or
pop
add
mov
jle
aam
(bad)
sahf
clc
inc
cmp
stos
sbb
pop
add
mov
xchg
sbb
mov
lods
mov
leave
sbb
out
div
fmul
mov
sti
pop
ret
xchg
das
pop
push
test
add
xchg
cmps
(bad)
xor
jecxz
fild
in
jnp
gs
jo
popa
aas
cmps
xchg
movs
call
repnz
cmp
js
pop
adc
out
(bad)
jp
add
mov
inc
dec
lods
pop
lock
out
and
pop
sub
inc
cmp
icebp
push
call
sub
lahf
jecxz
pop
je
mov
cmps
test
inc
jae
leave
fcom
arpl
loopne
mov
adc
fdivr
or
repz
xor
mov
jo
int3
or
popa
push
pop
mov
and
imul
mov
jo
push
daa
inc
jecxz
mov
and
in
sub
(bad)
repnz
nop
mov
add
jl
mov
dec
sub
mov
xchg
mov
ret
inc
nop
jne
outs
fbstp
cmc
add
ja
adc
loope
xor
lahf
sbb
(bad)
ja
(bad)
xor
dec
xor
icebp
or
jns
adc
cmps
stos
shl
icebp
into
xor
dec
pop
shr
idiv
mov
xchg
in
pop
in
dec
jle
call
xor
add
pop
test
xor
add
cmp
or
inc
out
or
div
sbb
mov
retf
lahf
sbb
rcl
cmps
test
jb
or
add
shl
push
cmc
xchg
and
dec
push
test
out
xchg
sbb
mov
shl
xchg
inc
call
mov
ficom
stos
jae
mov
sti
fs
xor
ins
push
sub
out
ins
pop
int3
mov
mov
add
jmp
clc
mov
sub
ins
aas
mov
dec
aaa
vpunpckhwd
iret
setp
test
sbb
jle
dec
and
adc
in
xlat
jp
cmp
dec
loopne
addr16
xor
inc
int
retf
cmc
int3
cmp
mov
shl
loope
cmps
add
mov
xchg
aad
lods
out
push
pop
mov
mov
sbb
cmps
scas
std
mov
aad
sbb
jle
gs
mov
jle
ret
sbb
or
cmps
inc
mov
sbb
pop
daa
iret
dec
aam
data16
aad
lods
nop
jnp
nop
or
out
bound
ss
fs
mov
add
movs
(bad)
mov
je
inc
fisttp
mov
(bad)
hlt
inc
out
pop
mov
ret
jne
fwait
push
js
loop
xor
sub
cld
pusha
sahf
pop
comiss
sbb
cmp
ror
in
addr16
neg
aaa
fimul
arpl
push
or
add
(bad)
fdivr
jp
ins
mov
pop
adc
xor
inc
xchg
inc
dec
jb
sbb
cmp
mov
push
and
or
dec
lods
pop
fs
mov
retf
cmp
lds
cli
(bad)
or
sahf
fnstenv
(bad)
dec
inc
mov
xchg
test
loope
lods
or
xchg
repnz
jmp
in
sub
test
pop
out
push
pop
fdivr
xchg
inc
nop
popa
sbb
mov
loop
stc
cmc
int
sbb
leave
push
mov
in
enter
iret
dec
inc
xchg
inc
imul
jg
pushf
add
mov
dec
in
mov
jno
retf
xchg
enter
jnp
or
repz
push
pop
and
mov
push
jnp
sbb
in
sbb
fdivr
push
ss
adc
xor
or
out
push
mov
outs
cmp
add
mov
sub
cmp
mov
mov
xor
push
test
fldenv
cs
jge
cli
rcl
into
jl
pop
mov
or
js
cwde
cwde
inc
loopne
cmp
push
xchg
sub
hlt
xor
push
jns
inc
inc
xchg
retf
or
bound
or
pmaddwd
add
int3
dec
(bad)
int3
pop
mov
addr16
jno
stos
cld
mov
jnp
adc
xchg
ds
gs
sbb
xor
jbe
sub
mul
inc
popf
imul
adc
cs
imul
mov
test
xor
jo
dec
cs
lahf
push
and
jl
setne
mov
in
out
sub
pop
add
movs
sbb
stos
hlt
pushf
add
daa
jl
aad
out
dec
addr16
in
les
icebp
and
jecxz
aam
les
push
mov
js
xchg
or
pop
mov
pop
call
jg
adc
hlt
pop
sub
pop
jp
sub
mov
or
fcom
cmp
mov
nop
xchg
dec
mov
outs
imul
push
jmp
cmp
test
call
lahf
rep
jb
scas
sbb
jae
ret
xchg
js
add
addr16
fnstcw
sub
rcr
dec
push
mov
and
inc
xchg
mov
sub
cmps
lods
gs
(bad)
cmp
inc
jl
ja
pop
cs
and
xchg
xchg
jae
push
sub
imul
pop
fist
xor
call
imul
rcr
int3
jmp
cmp
mov
xchg
test
psrlq
adc
pop
xchg
and
mov
lds
pop
push
cmp
push
xor
push
mov
in
(bad)
xchg
sub
and
jle
mov
scas
adc
aas
cld
mov
repnz
mov
fcompp
jecxz
loopne
sub
inc
cld
lgs
cmc
lahf
test
bound
adc
mov
std
mov
pop
fs
pop
push
mov
xor
mov
push
inc
xor
xor
sahf
pop
push
(bad)
jno
call
out
lods
mov
test
jp
sbb
ret
gs
dec
dec
inc
(bad)
mov
sbb
out
inc
pop
mov
add
mov
daa
sbb
or
mov
out
stos
add
sub
xor
mov
ja
pop
xor
mov
leave
and
(bad)
in
xchg
pop
xor
mov
fisubr
pop
and
add
cli
adc
jle
in
out
or
jo
jb
dec
and
mov
pop
dec
sbb
mov
add
push
pop
fstp
jb
xchg
push
inc
pop
pop
rcl
cdq
(bad)
xor
sub
in
sbb
ret
mov
and
sbb
xor
fimul
(bad)
repz
inc
or
in
xchg
dec
clc
and
test
push
inc
addr16
bound
fstp
and
add
inc
push
mov
sub
jo
daa
cmp
cwde
and
sbb
adc
sub
or
adc
(bad)
xlat
adc
inc
leave
dec
je
test
jp
mov
repz
push
or
in
xchg
xlat
mov
(bad)
in
xchg
jne
and
mov
scas
enter
jns
fwait
lods
leave
pop
jb
mov
loop
ja
enter
mov
mov
outs
test
loopne
call
in
sub
js
adc
inc
inc
outs
lock
nop
cmp
hlt
add
or
stos
(bad)
adc
sub
xor
xchg
xchg
dec
xor
and
dec
ficom
lea
inc
push
mov
add
in
xor
inc
pop
inc
and
lea
in
lock
test
fidiv
popa
movs
push
sbb
addr16
push
push
aaa
or
sahf
mov
xchg
iret
pop
out
call
jecxz
fst
jne
and
loop
mov
pusha
pop
sbb
xor
call
sti
stos
add
pop
test
mov
pminub
int
lods
sti
cld
jbe
cmc
fisubr
add
in
mov
fsub
jmp
call
and
imul
mov
xchg
lea
daa
int3
out
cwde
mov
fsubrp
call
out
dec
inc
jp
pop
out
nop
fsubr
lods
ds
push
pop
push
push
addr16
int
mov
movs
out
dec
shl
inc
add
mov
(bad)
mov
shl
pop
add
fbld
bound
sub
xor
adc
addr16
stos
cmp
and
scas
nop
test
pop
push
push
loop
fistp
stos
ret
in
imul
mov
dec
adc
add
or
test
rol
mov
sbb
mov
clc
dec
(bad)
jmp
sbb
mov
xchg
stc
push
and
add
sahf
pusha
xchg
mov
fstp
sub
retf
inc
xor
out
mov
push
add
mov
rcr
push
in
adc
call
jne
and
or
xor
lea
mov
mov
cli
test
iret
test
in
retf
fstp
push
fs
cmps
and
mov
aas
in
pop
sahf
cmp
popa
ficomp
dec
inc
add
lock
iret
mov
pop
not
xor
push
mov
ins
bound
lea
and
jne
push
(bad)
xlat
add
repnz
in
cmps
jle
cwde
jp
jp
mov
in
pop
ins
rcr
stos
dec
(bad)
das
outs
xchg
pop
inc
inc
pushf
pmullw
dec
test
lahf
mov
ins
pop
les
mov
add
push
cwde
sbb
mov
mov
inc
pushf
je
movs
scas
cmp
mov
mov
sub
jo
in
dec
cmp
fcmovnu
fdivr
add
or
push
add
ins
scas
jae
sub
in
test
mov
and
xchg
mov
stos
or
pop
popf
inc
lods
sub
add
push
jnp
popa
pop
and
in
or
cmps
pop
retf
sub
cmps
push
xlat
test
imul
cmp
cli
cmp
add
sub
rcr
xor
mov
mov
and
mov
pop
cli
lahf
jp
rcr
(bad)
stos
cld
xchg
inc
nop
test
cmps
mov
push
ror
int3
fdivr
fs
mov
movs
jmp
adc
xor
pop
mov
ins
xchg
leave
test
cmps
push
and
mov
jns
scas
xor
xor
push
dec
nop
test
jb
out
jnp
and
fdiv
mov
sub
add
xor
push
mov
das
sbb
dec
loopne
retf
into
sbb
add
mov
cmp
adc
out
js
dec
xor
stos
aam
mov
xchg
xlat
jp
dec
sbb
es
nop
and
retf
bound
in
test
sbb
stos
js
sub
adc
pop
mov
jb
les
xor
sbb
cwde
leave
movs
push
add
cmps
pop
ss
aam
aad
pop
aas
shl
lea
and
int3
imul
xchg
pop
scas
iret
jl
xor
jl
mov
(bad)
inc
cmp
and
and
pushf
pop
shl
mov
rcr
add
int
call
jle
mov
ror
fld
xchg
add
inc
inc
adc
push
enter
movs
jl
int
out
lods
jge
out
jp
inc
pop
std
pop
aad
retf
enter
and
lock
and
loop
pop
clc
xchg
repz
jmp
or
inc
aam
call
(bad)
into
cmp
mov
leave
loope
outs
jmp
sub
leave
aam
shr
fs
into
int
or
cld
xor
jns
mov
xor
je
loop
dec
xlat
mov
mov
pop
or
cmps
push
repz
sub
and
mov
fs
enter
movs
add
xchg
in
inc
and
push
aaa
ds
movs
dec
cmp
ss
nop
dec
pop
push
push
retf
arpl
jmp
mov
ds
cmp
adc
rol
es
add
or
push
out
push
arpl
test
pop
xchg
jecxz
fwait
ret
mov
jae
cs
sbb
in
shl
cdq
xchg
into
jne
fistp
cmp
cmp
xor
jo
movs
and
test
(bad)
adc
xor
xlat
xchg
xor
inc
dec
xchg
bound
and
sub
fstp
(bad)
les
sub
aam
and
sbb
push
in
retf
mov
cmc
mov
cmp
jnp
jnp
repnz
and
pop
and
das
jo
fwait
data16
es
(bad)
and
fimul
jmp
cmps
add
pop
cmp
dec
jge
jmp
out
int3
add
pop
inc
mov
add
fld
ror
and
aam
jbe
cmp
call
fbld
xchg
xor
add
adc
lods
jo
test
push
(bad)
pop
jns
scas
mov
ins
inc
stc
mov
inc
es
movs
out
into
fs
push
mov
int
mov
in
mov
dec
pop
pushf
mov
or
push
add
push
(bad)
(bad)
stos
dec
mov
push
bound
mov
xlat
and
push
pop
or
int
inc
jae
pushf
int
pushf
fdivr
mov
ja
jmp
mov
jge
icebp
fcom
inc
test
sbb
cmps
sbb
jno
ficom
fwait
inc
mov
addr16
sub
sub
adc
fnstsw
and
dec
jnp
jnp
pop
imul
fcomp
mov
xchg
mov
dec
or
std
mov
xchg
cmp
sahf
movs
inc
push
sysenter
fs
cwde
outs
lea
push
jmp
inc
rcr
jmp
xchg
shl
xchg
fdivr
jae
dec
lea
dec
jecxz
pop
aaa
mov
(bad)
jbe
lahf
clc
scas
xchg
repz
mov
dec
push
mov
nop
mov
jae
(bad)
sub
xor
test
and
mov
and
enter
adc
cmc
and
cmp
xchg
inc
push
xchg
cdq
and
jne
xchg
ja
lahf
adc
iret
das
shl
cs
and
mov
rcl
fst
(bad)
jno
scas
pop
cmp
out
adc
retf
xor
je
pop
jb
call
jecxz
mov
xchg
inc
mov
pop
dec
inc
es
(bad)
out
inc
push
pop
xchg
fisubr
add
sti
sub
sbb
inc
or
push
in
or
push
lods
jnp
sbb
mov
inc
cmp
sbb
enter
out
cli
les
jl
or
into
add
jbe
push
or
xchg
cld
xor
fld
je
xchg
mov
lods
mov
stos
sti
in
sub
mov
sbb
push
push
push
ffreep
and
jae
inc
mov
xchg
add
pop
repnz
add
sbb
lods
(bad)
icebp
push
retf
jno
or
adc
ss
xor
repz
mov
sbb
jmp
call
cmp
(bad)
mov
fcomp
clc
ret
fld
ret
or
cmp
aam
mov
int3
(bad)
xchg
jecxz
mov
and
push
out
cdq
fbstp
pop
push
sbb
loop
and
pop
jns
mov
lock
ret
inc
std
rcl
jmp
push
lds
dec
cmps
fsubr
test
cmps
je
add
imul
out
cmps
jmp
pop
bound
or
sbb
or
outs
(bad)
mov
aam
shr
ss
jge
sti
lods
jg
inc
fst
in
mul
aaa
and
or
les
mov
out
sub
inc
sub
pop
sbb
ficom
aaa
push
test
ja
test
pusha
mov
mov
inc
stos
mov
out
cmp
xchg
cmp
std
cwde
repnz
repnz
imul
fistp
je
sbb
push
repnz
xchg
test
xchg
sub
(bad)
or
xor
push
jp
mov
jne
mov
inc
dec
xor
inc
push
mov
repnz
std
cdq
sub
into
fmul
cmp
fwait
dec
jp
stos
xchg
mov
adc
repz
cmp
adc
rol
sub
mov
inc
out
mov
sbb
lods
push
fdiv
imul
loope
stos
gs
int3
aas
adc
and
add
jmp
xchg
sti
mov
(bad)
lds
xchg
jmp
inc
out
jo
imul
std
add
pop
cwde
dec
mov
push
cwde
xchg
xchg
mov
sub
jne
sub
popf
mov
xor
xchg
inc
push
add
sub
inc
(bad)
mov
movs
xor
imul
(bad)
dec
ret
int
popf
mov
nop
cs
push
cdq
rcl
jl
mov
mov
sub
fisubr
shl
aad
sbb
jno
pop
cmp
scas
and
ficom
or
xchg
jecxz
lea
cli
xchg
retf
mov
stos
repz
add
and
push
cmp
loop
cmp
dec
enter
jne
rcl
xchg
mov
xor
popf
cdq
fmul
in
push
dec
loope
bound
sbb
ds
jnp
adc
mov
cmp
movs
fdivr
mov
into
mov
enter
jne
out
jp
fs
cmp
pushf
mov
ss
pop
clc
ret
jl
jl
call
outs
in
cmp
lods
imul
pop
inc
sub
cwde
fs
mov
(bad)
fidivr
cmc
add
jp
jae
jmp
in
xchg
sbb
les
mov
pop
mov
movs
sbb
jmp
imul
imul
popa
push
les
loopne
stos
fcmovb
dec
repz
mov
mov
enterw
popa
mov
add
inc
cmp
in
and
ds
ret
movs
into
dec
mov
push
dec
jmp
dec
in
mov
fidivr
lds
es
fild
jle
clc
jmp
xchg
out
pusha
into
cmp
cmc
clc
bound
mov
mov
shl
outs
sub
popa
das
pop
mov
mov
jecxz
mov
in
ret
pop
mov
ror
test
dec
dec
cmp
and
enter
clc
and
push
leave
mov
or
int
jne
push
xchg
jmp
clc
sahf
jmp
scas
sub
or
cli
cmp
adc
dec
sbb
add
(bad)
xor
xchg
and
pcmpgtd
pop
pushf
sub
imul
mov
adc
mov
xchg
les
and
fbstp
imul
int3
dec
push
ds
cmp
rcl
lds
mov
mov
nop
clc
inc
stos
adc
mov
in
jne
mov
(bad)
push
dec
cwde
pop
ret
ror
sbb
push
bound
loope
stos
fist
(bad)
xchg
(bad)
sbb
int3
mov
(bad)
dec
cdq
dec
sub
aam
in
dec
pop
mov
in
pop
pusha
mov
mov
inc
(bad)
stos
add
mov
icebp
xchg
(bad)
out
jno
pop
sbb
pop
xchg
std
aad
push
out
sbb
adc
mov
cmp
mov
or
fcmove
and
xor
inc
xchg
mov
and
sbb
lods
adc
retf
or
xchg
sbb
jmp
or
outs
loop
shl
push
out
call
idiv
push
aam
ret
aaa
mov
mov
xor
sbb
sub
mov
mov
test
aas
jae
std
mov
(bad)
std
xchg
stc
(bad)
pop
(bad)
or
mov
xor
retf
mov
test
ins
inc
ret
ja
out
call
popf
nop
rol
sbb
cli
push
add
test
jmp
push
mov
lock
cmp
call
jbe
loope
into
jp
cmp
retf
rcl
xchg
loopne
retf
(bad)
cmp
lock
imul
leave
aam
add
int3
(bad)
sbb
and
jmp
inc
mov
lock
xchg
test
xor
iret
sbb
inc
mov
(bad)
cmp
jp
jns
(bad)
test
pusha
add
adc
retf
mov
je
repnz
test
dec
popf
retf
daa
pop
or
dec
(bad)
push
les
xor
fwait
(bad)
repnz
add
or
jp
test
jmp
scas
and
stc
test
xlat
loop
add
cs
sub
push
mov
mov
ret
xor
mov
adc
xchg
dec
inc
leave
repz
mov
in
and
stc
ins
imul
mov
and
shl
(bad)
test
cwde
leave
(bad)
aam
dec
jp
sbb
add
mov
push
aas
cdq
fwait
in
sbb
xchg
or
adc
mov
push
lods
fcomi
push
lahf
or
call
mov
je
jae
and
add
shl
cld
sbb
pop
mov
push
jle
mov
and
cmps
les
adc
sub
daa
xor
les
mov
sub
inc
in
outs
jnp
repz
push
pushf
outs
jl
sbb
jl
imul
push
add
mov
mov
sub
fild
adc
inc
in
jo
cmp
lea
add
sub
jbe
aas
nop
cmp
add
mov
adc
xchg
rcr
loop
and
imul
mov
sub
(bad)
sbb
xor
or
hlt
push
das
inc
sar
out
pop
mov
cmp
aad
test
fstp
inc
jp
sub
sbb
adc
pop
mov
(bad)
cmp
pop
xor
mov
pushf
enter
adc
mov
mov
mov
in
out
lds
mov
mov
dec
jno
les
sbb
mov
shl
xor
jnp
sar
push
lods
loopne
sub
inc
(bad)
push
into
push
pushf
xor
jbe
sub
push
push
pop
clc
mov
mov
fbld
sub
loope
mov
jg
mov
mov
cli
aad
outs
(bad)
sbb
into
stos
xor
(bad)
jle
xor
cmps
push
add
dec
rcr
sbb
add
fbstp
adc
jae
jb
xchg
jge
pop
xchg
ror
sub
dec
or
pop
jnp
mov
pop
and
xor
inc
and
inc
and
call
rcr
cmps
outs
xor
add
icebp
addr16
(bad)
retf
cdq
shr
pop
sub
mov
es
stos
sar
stos
loope
es
mov
cdq
adc
lods
cld
out
push
push
clc
pop
and
ds
or
or
mov
xchg
push
dec
rcl
push
aad
inc
movs
mov
imul
sbb
pop
dec
sub
dec
push
xchg
int3
cld
repnz
mov
repz
cmp
xor
pop
aam
jne
test
lods
cmp
mov
call
xchg
sbb
xchg
inc
mov
imul
mov
xchg
out
jmp
mov
movs
xchg
and
pop
movs
outs
adc
shl
inc
xchg
gs
cli
bound
(bad)
loop
xchg
cmps
scas
dec
cmp
sbb
inc
imul
call
in
mov
stos
inc
ja
mov
push
sbb
dec
fldcw
imul
arpl
mov
(bad)
idiv
outs
fstp
loope
mov
in
sub
fdivp
mov
jmp
adc
and
pop
fcomp
inc
out
aaa
fsub
sbb
loope
cwde
test
shl
sar
dec
lods
jle
cld
mov
sub
pusha
xchg
retf
push
pop
cli
(bad)
fld
xchg
cdq
int
popf
jmp
jb
mov
mov
inc
add
push
mov
xor
into
cdq
popa
jp
dec
scas
enter
sub
mov
scas
in
inc
xchg
bound
cld
arpl
dec
mov
out
or
in
mov
pop
arpl
gs
nop
cmc
and
jge
daa
inc
ins
lods
cmps
cmp
jnp
inc
xchg
push
fimul
aaa
out
inc
dec
das
leave
ror
je
dec
mov
inc
add
mov
add
stc
xor
add
mov
leave
push
clc
loope
stos
or
pop
aad
mov
dec
nop
fwait
dec
mov
out
push
pop
(bad)
pop
add
fbld
jp
test
outs
mov
xor
dec
rcl
bound
sub
push
mov
mov
popa
fs
enter
cmp
std
test
sbb
into
repnz
call
in
imul
jmp
jnp
push
and
mov
fwait
mov
ficomp
sub
lods
out
pop
clc
sbb
inc
pop
mul
sbb
out
mov
bnd
adc
mov
cmp
push
loope
xchg
in
push
(bad)
fsubr
mov
or
jl
pop
ins
push
cmps
aas
sub
push
in
pop
aad
pop
push
and
jg
jmp
and
dec
stos
push
cli
cmp
adc
out
pushf
mov
push
push
mov
and
mov
xor
push
dec
xor
jl
pop
jbe
fstp
dec
mov
jge
mov
sub
inc
mov
inc
out
inc
icebp
ds
imul
dec
push
ret
pop
sbb
fdiv
(bad)
ds
jg
push
inc
add
dec
(bad)
sbb
lock
dec
add
add
push
leave
push
mov
not
aad
in
(bad)
dec
imul
into
jne
arpl
inc
scas
cwde
xchg
mov
mov
cmp
lahf
push
dec
dec
ins
sahf
jnp
loop
add
jae
mov
xor
inc
xor
mov
mov
lds
jl
sbb
and
leave
test
adc
dec
and
(bad)
dec
fcom
bound
cmp
out
xor
mov
mov
ss
sub
mov
test
sub
(bad)
adc
lods
mov
enter
bound
enter
xor
test
jecxz
stos
(bad)
icebp
jl
jb
fisub
xor
dec
out
push
(bad)
call
rcl
lds
and
repnz
pop
inc
add
pop
ins
mov
push
jmp
or
dec
out
pushf
lock
stos
rol
inc
shl
loop
mov
nop
ds
cmp
xchg
test
xchg
sbb
aas
mov
push
and
cmp
movs
in
ja
inc
adc
ss
jg
fs
mov
sbb
cs
push
mov
jmp
lods
lahf
std
test
pop
stc
jmp
movd
mov
aad
cmp
cmp
cmp
imul
and
add
lods
ret
jmp
int3
pop
sbb
push
cmp
pop
cs
int
test
xchg
add
push
ja
add
mov
sbb
cmp
pop
push
or
and
mov
dec
popf
sub
stos
cmp
add
inc
sub
call
repz
hlt
mov
add
mov
movs
or
push
leave
hlt
cmc
mov
retf
shl
mov
pop
cdq
gs
xor
pop
rol
adc
call
mov
inc
mov
xor
and
pop
xchg
and
pop
bound
imul
mov
das
aas
sahf
push
xor
lahf
sbb
pop
jecxz
cmps
mov
xor
push
inc
jmp
mov
int3
daa
ja
cmp
in
sbb
inc
cmp
loopne
fdiv
adc
add
mov
and
rcl
stos
pop
or
xor
cmp
and
cmp
jl
xchg
out
out
pop
loop
cmp
lock
stos
pop
das
stos
cmp
outs
aad
stc
push
sbb
jo
out
sahf
aad
je
jb
push
and
ret
repnz
push
inc
or
jle
lods
xor
test
cmp
fcom
mov
push
push
hlt
cmps
cmp
(bad)
int3
push
or
ins
mov
xor
dec
frstor
mov
jecxz
adc
in
or
pop
lea
scas
mov
mov
pop
jno
pop
mov
sub
lea
adc
jecxz
and
push
mov
outs
pusha
pop
pop
lock
dec
aad
cmps
xchg
or
mov
ret
xchg
fadd
mov
loope
pop
cmp
push
fild
fdiv
popa
and
sbb
jecxz
pop
test
out
mov
scas
dec
add
int3
sbb
cmps
adc
repnz
lds
adc
lahf
inc
and
xor
movs
pop
cmp
call
push
aam
cmps
ja
popa
in
xchg
jge
inc
call
scas
pop
cmp
jg
pushf
data16
mov
dec
mov
xchg
dec
repz
adc
outs
dec
leave
outs
dec
mov
mov
inc
js
add
jae
or
or
push
fimul
stos
es
int
cmp
mov
push
jae
scas
test
sub
mov
jg
inc
loopne
dec
mov
cmp
jns
les
lods
stos
into
retf
arpl
jns
push
xor
mov
(bad)
outs
call
fdivr
mov
mov
push
(bad)
mov
test
sub
and
sub
cdq
dec
cmp
xchg
sbb
mov
xor
arpl
cs
pop
icebp
pop
cld
call
out
push
clc
pushf
xor
sahf
shl
ins
popf
test
push
fild
cmps
jae
fnsave
sbb
pop
aam
push
fsubr
mov
mov
cmp
xchg
mov
ret
outs
aas
cmp
loope
jo
arpl
add
(bad)
and
scas
jmp
xchg
lock
cli
mov
mov
fsub
mov
jo
jnp
outs
mov
xchg
sub
test
sbb
push
lea
and
je
mov
test
mov
cmps
push
sub
push
mov
inc
inc
jne
sbb
mov
cmp
scas
hlt
add
imul
mov
mov
push
popf
out
pop
mov
push
retf
and
dec
js
(bad)
jmp
inc
jmp
int3
mov
push
in
xchg
fwait
cmps
add
lahf
fisub
cmps
pop
(bad)
fimul
xor
mov
jge
mov
pusha
mov
pop
inc
fldcw
outs
cdq
aam
iret
mov
dec
dec
sti
test
add
xchg
inc
push
outs
sbb
dec
jmp
stos
leave
outs
pop
xor
mov
pop
push
jp
adc
stc
xchg
sbb
jne
mov
jmp
stc
jmp
test
xor
lock
bound
cld
add
push
sti
pop
pusha
xchg
aam
ror
push
imul
call
jp
data16
pop
or
scas
mov
inc
ds
out
hlt
mov
pop
cld
xchg
stos
add
outs
outs
cmp
mov
or
test
repz
(bad)
cdq
mov
sub
jecxz
retf
mov
es
xchg
pop
mov
mov
mov
fild
retf
inc
cmp
movs
jae
nop
loopne
jl
sahf
fild
or
popf
ds
and
pusha
sub
gs
les
rcr
xor
icebp
and
mov
cs
pusha
cmp
pop
adc
adc
cs
mov
cmp
cmc
fdivr
fnstcw
shl
jb
xor
cmp
dec
and
xchg
mov
cmps
pop
out
popf
mov
xchg
arpl
add
or
push
sub
jae
int3
inc
dec
pop
mov
lds
cmp
aas
jb
out
loop
fnsave
add
sahf
sbb
addr16
(bad)
les
jecxz
sub
adc
and
(bad)
pushf
fbstp
mov
out
mov
jl
pop
dec
add
sbb
push
popa
(bad)
fmul
mov
(bad)
retf
inc
mov
ss
add
scas
fs
xlat
mov
push
lods
push
(bad)
cld
pusha
jp
mov
mov
fwait
sub
shl
add
or
aam
addr16
push
xchg
mov
mov
mov
fsubp
popa
pop
cmp
in
inc
stos
ret
scas
jp
mov
xchg
inc
sti
xchg
sub
mov
int
icebp
mov
push
in
mov
push
jmp
ins
xchg
xchg
xchg
mov
jge
lahf
jns
enter
cld
jmp
mov
xor
xchg
mov
sar
add
mov
jmp
add
sub
sti
push
jo
add
hlt
outs
in
fs
sbb
call
repz
sub
cwde
jl
xor
sub
call
pop
cmp
pop
leave
aam
push
push
adc
jno
mov
mov
pushf
leave
cmp
mov
es
inc
hlt
aas
and
lahf
mov
push
jge
jmp
popf
rcr
iret
and
mov
adc
in
aaa
xor
cmp
ds
stos
dec
add
aad
jne
retf
sar
cmp
mov
dec
xchg
lds
shr
lock
sbb
int3
xchg
fldl2e
cld
les
sub
dec
pop
sub
cmp
stos
retf
mov
mov
cmp
jbe
loop
pop
xchg
ror
xchg
xchg
out
test
sbb
or
add
push
aas
mov
aad
enter
or
(bad)
nop
sbb
clc
dec
call
mov
cmps
and
cdq
pop
and
ror
lock
xor
mov
lahf
cmp
scas
mov
xor
mov
out
mov
cmps
sbb
lds
loop
dec
jne
fs
loopne
fcomp
cmp
or
jnp
mov
or
aam
cmp
aas
sbb
out
pop
mul
cmp
std
nop
jecxz
test
js
adc
retf
lods
stc
jecxz
cmp
and
out
lea
sbb
pop
jl
daa
mov
popf
stc
adc
pop
pop
mov
ficom
rol
mov
fimul
and
sbb
pushf
adc
(bad)
mov
push
sub
bnd
push
lock
stc
mov
xor
mov
std
pop
mov
mov
int3
loopne
add
xchg
sub
xchg
pop
jno
leave
ficomp
cmp
scas
push
imul
xchg
clc
jae
cmp
pop
inc
push
xchg
mov
mov
movs
rcl
adc
push
jecxz
xchg
push
fadd
or
dec
(bad)
loop
mov
add
add
lods
mov
aas
outs
mov
cld
push
mov
mov
je
push
adc
xor
mov
ds
pop
stos
sub
and
and
jmp
add
dec
bound
scas
dec
jb
dec
es
or
mov
adc
inc
aam
test
push
push
hlt
pushf
push
mov
cs
stos
dec
bound
push
(bad)
sub
in
jns
mov
bound
mov
ficom
pop
adc
pop
mov
cs
push
cmc
xor
mov
xor
add
push
fimul
js
push
mov
jno
xor
pop
adc
sbb
inc
and
push
inc
stc
std
push
(bad)
cmp
outs
mov
or
daa
or
dec
fisttp
scas
es
or
stos
icebp
and
aad
loop
add
add
cmp
in
push
aaa
(bad)
adc
adc
mov
aas
clc
mov
aad
or
aad
enter
call
hlt
cs
int3
retf
cmp
lods
fwait
adc
jne
cdq
pop
jnp
cwde
pop
add
aaa
xchg
lds
icebp
lods
or
sbb
mov
sbb
call
mov
mov
or
clc
mov
mov
jle
jp
(bad)
mov
xchg
ret
(bad)
rcl
retf
mov
pushf
xchg
imul
and
and
jg
fisttp
fidiv
pusha
int
pushf
xor
stos
jne
shr
pop
popf
jmp
retf
(bad)
in
je
bound
mov
mov
gs
sub
clc
pop
sub
lock
cmp
out
inc
in
mov
and
or
mov
aas
es
dec
xor
aaa
rcr
cwde
cmp
(bad)
mov
movs
jmp
inc
sub
push
movs
sbb
inc
imul
push
fsubr
sbb
xchg
adc
imul
cmp
jno
and
mov
movs
data16
xor
mov
leave
rcl
mov
call
fs
fcom
(bad)
(bad)
jp
dec
cwde
data16
xchg
mov
xlat
lock
popa
es
jns
jb
add
lahf
aam
jp
lahf
xor
lahf
sub
cmp
stos
cmp
int3
loop
fsub
imul
adc
adc
dec
or
mov
push
ja
sahf
inc
aas
pop
jg
aas
(bad)
cs
push
inc
push
pop
xor
sbb
ja
mov
out
hlt
(bad)
int3
iret
idiv
xor
mov
iret
cmc
xchg
pop
jno
push
mov
xor
or
mov
push
cmp
cdq
aas
lods
jnp
or
repz
cmp
test
mov
xchg
mov
call
sub
jbe
lahf
xor
retf
and
leave
sub
imul
scas
stos
dec
mov
sbb
pop
jbe
dec
ds
pop
cmp
jp
cmp
inc
out
xchg
cmp
adc
sub
aam
cdq
or
inc
lahf
adc
pop
xchg
mov
xchg
sbb
inc
jmp
jl
add
xlat
add
call
sbb
cmp
pop
in
xchg
popf
fucomi
jno
clc
jae
inc
call
lock
mov
cmp
add
(bad)
cli
lods
fwait
xor
inc
xchg
xchg
cmc
pop
pop
popa
rol
mov
mov
fmul
dec
pop
mov
or
stos
jb
scas
or
pushf
(bad)
scas
fcom
loopne
add
stc
stc
and
or
jb
cmps
or
sbb
cmp
adc
and
jle
jnp
sub
and
add
repz
hlt
int3
dec
push
shr
inc
xor
pop
loope
cmp
fwait
scas
icebp
(bad)
mov
rcl
mov
inc
clc
rol
sbb
inc
xor
movs
and
push
pop
mov
xchg
in
test
mov
fadd
loope
jle
aaa
jne
in
pop
pop
pop
je
jmp
shl
dec
(bad)
xchg
cmp
stos
lds
inc
je
mov
aaa
sbb
xor
cli
jp
fbstp
pop
into
push
cmp
or
ss
idiv
jmp
xchg
or
dec
inc
dec
sbb
loop
fisttp
je
stos
dec
repz
call
std
aaa
test
inc
fisttp
data16
jmp
mov
jp
repnz
ins
lock
push
pusha
movs
jmp
gs
mov
in
lods
jle
mov
lods
retf
push
xor
imul
jne
out
mov
mov
clc
cmp
ror
stos
ret
push
and
fist
mov
jecxz
mov
jb
(bad)
pop
mov
repz
jmp
jno
or
aas
rol
xor
scas
sbb
adc
dec
jl
inc
sahf
xchg
add
out
add
inc
mov
mov
xor
(bad)
aam
fiadd
inc
xor
push
mov
sub
dec
adc
push
shl
repz
push
jno
sbb
test
pop
test
add
dec
scas
adc
mov
mov
pop
sbb
sbb
mov
cmp
jecxz
sub
xor
retf
enter
dec
jg
mov
mov
mov
shl
arpl
popa
les
sub
mov
jl
outs
pop
adc
dec
push
cmp
je
cmp
(bad)
push
call
test
jge
js
je
loop
cmp
inc
sub
sbb
cmp
or
mov
jmp
dec
mov
cmp
div
add
fdivr
sbb
pushf
inc
dec
lock
jbe
mov
ficomp
pusha
xor
ja
sti
mov
xchg
pop
jns
mov
fnstsw
inc
les
bound
cmp
xor
ds
test
cmps
jp
js
mov
cmps
push
in
cmps
pushf
or
xchg
fwait
rcl
jo
xchg
jge
mov
shl
xchg
inc
mov
add
push
addr16
pop
sahf
and
retf
mov
xchg
push
inc
jb
in
pop
and
call
push
int3
in
sbb
ror
jne
mov
retf
iret
adc
adc
adc
push
or
outs
mov
aaa
(bad)
mov
push
ins
pop
pusha
sub
jmp
mov
in
not
(bad)
and
pop
or
jne
iret
mov
mov
cmp
fcom
xchg
jae
ret
xchg
jp
adc
leave
mov
mov
pop
sub
leave
rol
fcom
xchg
xchg
shr
movs
aam
cs
mov
push
mov
aad
test
jle
add
inc
dec
cmp
pop
jb
aam
cld
dec
and
retf
mov
iret
jns
inc
xor
mov
in
iret
bound
stos
dec
loope
xor
mov
out
push
xchg
push
push
sbb
js
cmp
(bad)
jb
mov
repnz
ficomp
pop
dec
ret
cmps
mov
xchg
sub
inc
cmps
sub
sbb
sahf
inc
inc
jp
gs
nop
sahf
adc
jne
or
inc
sbb
xor
jl
ds
jbe
sub
sbb
push
in
mov
push
retf
mov
and
inc
mov
stos
or
ja
sbb
mov
das
or
(bad)
int
sahf
ins
sbb
adc
cwde
push
xchg
dec
and
repnz
icebp
sbb
(bad)
in
cdq
sub
ror
popa
in
sti
inc
clc
fwait
xchg
or
push
into
scas
jo
lahf
sti
xor
or
ss
xchg
scas
fbstp
pop
cld
lock
imul
cmp
pop
push
pop
ss
dec
or
pop
(bad)
mov
xchg
pop
sbb
xchg
inc
call
loop
mov
punpckhbw
loope
adc
cmp
and
arpl
fdivr
clc
nop
ret
and
ins
mov
mov
fist
mov
add
das
std
xor
mov
adc
mov
pop
shl
jno
jns
sub
(bad)
shr
mov
xor
cmps
cmp
jle
pop
mov
jns
add
adc
out
mov
dec
add
push
fucomip
pushf
stos
ret
cmp
ja
and
mov
xchg
inc
rcr
jne
outs
pmuludq
into
pop
mov
pop
(bad)
lock
push
out
mov
clc
xor
mov
jb
into
adc
loope
loopne
pushw
mov
js
enter
ror
cli
sbb
int3
pop
mov
out
push
add
sbb
mov
fisub
mov
out
dec
out
jbe
xor
or
xor
in
pop
out
mov
mov
call
dec
aam
mov
sbb
cmp
mov
cdq
jle
cmc
jmp
pusha
fwait
test
aaa
jg
retf
loope
jb
xchg
mov
in
jmp
fild
pusha
iret
pushf
xchg
js
fimul
daa
daa
and
or
test
xchg
and
and
mov
cmp
les
sar
xchg
sbb
jbe
loope
clc
fnstcw
ss
stos
call
or
pop
mov
dec
or
pop
outs
push
outs
jle
adc
test
call
xchg
rcl
repnz
xchg
xor
sti
dec
jnp
jo
xor
or
sub
dec
push
loopne
mov
fwait
(bad)
xchg
in
sbb
bound
cdq
adc
paddq
push
out
mov
stos
mov
jmp
pop
xor
imul
cdq
loop
leave
mov
pop
or
cmps
push
xchg
dec
add
push
in
jno
outs
jae
sub
xor
in
out
je
ret
dec
push
push
dec
push
push
stos
add
push
sub
adc
mov
sar
pop
not
sub
inc
repz
cld
pop
neg
jnp
cwde
xor
mul
mov
mov
pusha
pop
and
xchg
adc
inc
stos
aam
push
xchg
ss
inc
push
fwait
cmps
and
or
call
or
loopne
sbb
call
push
pcmpeqd
cmc
mov
push
retf
dec
enter
cmp
lods
popf
fiadd
push
jmp
cld
lock
cmp
(bad)
pop
jl
mov
xchg
jo
sar
fdiv
mov
cmp
push
inc
add
push
pop
add
jns
jmp
or
push
inc
push
cmp
pop
gs
add
out
popf
cmp
and
call
pushf
sti
mov
cmp
dec
(bad)
xlat
outs
jnp
idiv
add
mov
add
pop
jae
and
pop
mov
xchg
adc
sbb
out
js
aas
xchg
adc
push
cmps
sub
cmp
jecxz
jge
cmc
int3
mov
retf
sub
stos
aaa
inc
aas
mov
rol
push
jnp
push
ret
outs
push
dec
bnd
movs
faddp
mov
in
mov
pop
adc
clc
adc
into
jg
aas
sub
dec
dec
dec
hlt
and
xchg
lods
xchg
ret
mov
jecxz
shl
popf
xor
pop
mov
jle
mov
cld
fbld
or
cmp
or
cmps
inc
push
dec
jnp
cmp
cmp
inc
outs
jne
pop
mov
pusha
dec
sbb
sbb
ds
fcmovnu
push
push
sub
mov
mov
sbb
cmps
imul
xor
cwde
cmc
push
dec
mov
mov
sub
in
xchg
mov
xchg
mov
sti
scas
sahf
call
inc
loopne
xchg
mov
aam
inc
inc
xor
pop
sahf
xchg
jmp
inc
popf
fwait
xchg
popa
clc
xlat
xor
add
retf
xchg
in
ret
xchg
jne
popw
sbb
add
cmp
dec
and
pop
sub
mov
and
push
jge
mov
mov
mov
fs
dec
hlt
stos
cmps
outs
imul
cmp
adc
ret
xor
lock
sti
cld
mov
fs
push
push
mov
sbb
or
fild
(bad)
cmp
fstp
xchg
stc
or
or
push
cmp
stos
iret
jecxz
inc
dec
cmp
jle
sub
jno
xor
imul
dec
mov
jmp
test
ficom
data16
retf
cld
outs
pop
cs
pop
es
les
dec
(bad)
or
dec
pop
leavew
xchg
mov
cmp
jns
push
retf
jge
dec
and
xor
add
out
enter
and
nop
push
arpl
adc
icebp
pop
xchg
sub
(bad)
push
scas
mov
xor
repz
jo
aaa
imul
jns
hlt
pop
xlat
test
dec
jmp
scas
ficom
or
cmc
dec
and
dec
stos
xchg
retf
add
mov
ins
rol
(bad)
pop
repz
and
push
cmp
mov
mov
sub
ret
inc
popa
(bad)
jecxz
hlt
clc
adc
lahf
jmp
popf
in
mov
je
cwde
dec
inc
cmc
jmp
or
inc
imul
iret
xchg
popf
ja
(bad)
jns
xchg
shl
call
aad
or
stc
mov
mov
xchg
aam
ficom
aaa
jmp
xchg
bnd
pusha
mov
sub
test
lahf
in
mov
jp
shr
or
sbb
ss
jmp
pop
int
and
fcom
and
mov
js
lds
dec
imul
sti
cmc
outs
and
cdq
cmp
movs
jo
or
arpl
xchg
dec
inc
(bad)
or
jmp
mov
mov
jp
jno
ret
shl
movs
xchg
sbb
push
mov
or
and
mov
or
cmp
lock
pop
ret
gs
retf
fist
and
fidiv
push
jge
sbb
add
scas
int3
pop
stc
out
add
icebp
jnp
mov
mov
test
xor
sahf
inc
nop
fcmovb
or
lods
xor
jp
sbb
cmps
call
jecxz
std
stos
add
xchg
xor
push
lock
aaa
test
push
loope
das
jns
xor
(bad)
stos
sar
popa
pop
adc
clc
test
xchg
jg
test
sbb
imul
xchg
or
cmp
mov
stos
imul
xor
sub
adc
pushf
xchg
sub
mov
xchg
cmp
pushf
bound
xchg
push
dec
push
mov
lods
mov
xchg
in
sub
adc
rcl
nop
mov
jmp
cmps
sti
cmp
push
or
dec
jns
pushf
aas
xchg
inc
aaa
push
xchg
add
and
gs
push
sbb
mov
sub
and
cmp
fisubr
xor
shl
push
retf
bound
pop
shr
fisubr
or
(bad)
(bad)
sar
dec
fimul
mov
lds
xchg
les
pop
xor
xchg
pop
mov
je
sub
add
inc
lods
or
aam
stc
mov
(bad)
clc
cmp
aad
imul
out
adc
pop
retf
enter
js
ficomp
dec
sar
push
fstp
inc
dec
pop
jg
mov
dec
push
cmp
inc
and
sub
in
add
inc
inc
dec
cld
sbb
inc
and
in
stos
scas
jge
mov
imul
xchg
mov
pushf
inc
fsubr
in
dec
xor
outs
sub
jne
xor
sbb
mov
mov
sub
push
les
pop
btc
push
test
cmc
repnz
clc
dec
in
xor
push
inc
pop
pop
das
mov
sti
xchg
adc
adc
es
dec
stos
xchg
test
loop
pop
jae
push
sbb
add
addr16
cdq
adc
js
xchg
ins
(bad)
sub
js
add
into
or
and
je
mov
(bad)
dec
lods
call
es
lea
push
xor
add
add
sbb
cmp
add
aam
je
jle
mov
pushf
xor
push
les
pop
nop
jmp
and
dec
jmp
push
sbb
mov
ja
cmp
aaa
xor
sbb
dec
movs
jo
gs
xchg
scas
sahf
push
retf
mov
sbb
xlat
sbb
pop
retf
mov
cmp
add
jns
div
loopne
mov
imul
mov
inc
add
inc
dec
xor
add
jle
mov
or
pop
add
mov
inc
fs
cmc
or
adc
rcl
push
xchg
inc
das
jo
xor
add
pushf
retf
sub
mov
pop
push
mov
jae
cmp
jae
loop
pushf
mov
or
mov
jb
inc
scas
xchg
(bad)
jmp
out
mov
addr16
push
fsubr
mov
inc
cwde
pop
and
repz
sbb
xor
sub
mov
int3
xchg
test
jne
leave
xor
xchg
mov
mov
lods
or
xchg
in
sbb
clc
aas
sub
dec
mov
ret
pop
(bad)
lods
or
enter
and
shl
cmc
fnstenv
mov
xchg
popfw
push
(bad)
sub
push
lahf
leave
imul
xor
jl
push
inc
aam
xor
lds
int3
stos
cmp
adc
jecxz
pop
jne
stc
jge
je
ret
stos
adc
pusha
sbb
or
cld
popa
into
loopne
mov
jae
sahf
out
ins
inc
popa
pop
mov
test
call
sbb
jle
lock
add
lods
add
jb
push
sbb
sub
pop
sti
jb
sbb
adc
push
cld
call
lods
ins
xchg
sub
or
dec
in
pusha
cmp
(bad)
repnz
adc
mov
cmps
dec
imul
fidiv
jmp
xor
push
and
fsub
cmp
hlt
pop
xchg
ret
xor
xor
scas
lahf
mov
outs
dec
icebp
jno
into
sub
xchg
mov
(bad)
imul
imul
test
cmp
cmp
imul
les
stos
jmp
fcmove
dec
in
xor
inc
sti
in
ficom
icebp
cmps
les
rcl
pushf
clc
push
or
lods
cmps
jbe
adc
stos
xor
lea
xchg
fild
cmp
lahf
sbb
cmp
shl
(bad)
jne
mov
lds
and
ret
mov
nop
adc
repnz
push
out
addr16
loop
cmp
and
mov
add
out
pusha
or
cld
jecxz
retf
xor
cmp
mov
lods
pop
push
gs
xchg
mov
push
ret
jae
dec
lea
stc
and
addr16
scas
mov
pop
jmp
arpl
pop
in
loop
jb
(bad)
mov
fimul
jle
inc
fbstp
int3
jge
jg
add
shl
mov
push
popf
bound
(bad)
mov
ret
and
fisub
add
jae
(bad)
mov
inc
pop
dec
ins
or
mov
and
ins
std
sbb
inc
popa
dec
cmps
les
cli
ret
sub
stos
in
or
mov
loop
mov
cwde
stos
pop
jno
sar
repz
gs
cmp
mov
loope
jb
fadd
rcr
adc
syscall
pop
mov
add
mov
lods
sub
and
jbe
mov
mov
jmp
mov
ins
jb
test
dec
(bad)
xor
lea
xchg
mov
sbb
pop
cwde
les
push
cmp
aaa
sahf
mov
lods
xchg
daa
fmul
or
and
dec
push
dec
iret
xor
mov
push
lahf
add
add
int3
iret
test
xor
std
jmp
jae
lods
fxtract
lahf
push
mov
cli
int
ffree
clc
les
cdq
xor
mov
add
mov
movs
dec
cmps
sar
or
sahf
aaa
retf
int3
shr
and
popa
pushf
mov
add
cdq
push
xor
jno
push
mov
xchg
stc
mov
xor
mov
xchg
nop
mov
sub
nop
rcr
lahf
aas
sub
fcomp
pop
cwde
jne
mov
test
sub
dec
xchg
or
dec
call
mov
pop
call
mov
sbb
jns
cmp
dec
mov
sbb
jecxz
in
adc
fadd
adc
out
idiv
ins
cwde
mov
jecxz
xchg
add
and
pop
mov
add
jno
jmp
xor
loope
(bad)
sbb
sar
xor
pop
mov
retf
pop
dec
dec
imul
aas
scas
sub
add
imul
and
adc
dec
cmps
outs
mov
aam
call
ret
in
shl
or
(bad)
push
ja
pop
rcr
aad
mov
pop
jae
stc
mov
mov
ins
mov
xchg
xchg
mov
arpl
jbe
fidivr
cmp
sahf
jmp
mov
int3
xor
sbb
scas
outs
mov
xchg
test
or
jns
popf
xchg
cmp
dec
(bad)
xchg
aas
sub
ffree
pop
div
mov
push
leave
lock
ret
(bad)
addr16
and
sub
xor
jp
pop
dec
pop
jmp
fst
ja
or
sti
scas
sbb
mov
push
enter
adc
shl
push
mul
bnd
call
pop
fidivr
(bad)
int
sahf
enter
pop
pop
outs
mov
push
imul
lds
add
xor
test
jecxz
hlt
movs
cmps
sahf
cmp
jecxz
push
and
data16
xor
sbb
mov
mov
push
mov
or
pop
arpl
in
cmp
dec
std
jae
rol
xchg
xor
lds
sbb
cmp
pop
fcom
push
jle
jbe
inc
xchg
nop
leave
js
lds
or
aas
das
lods
mul
call
pop
dec
cmp
jge
imul
pushf
dec
dec
retf
test
es
jae
std
test
inc
xlat
out
in
adc
pusha
cmps
adc
jmp
sub
pop
daa
imul
mov
aaa
fcmovb
xchg
jnp
or
mov
les
mov
cwde
inc
outs
mov
push
pop
push
xchg
mov
pusha
mov
imul
and
mov
sub
push
(bad)
jno
cmc
mov
out
mov
mov
dec
adc
pop
xchg
pusha
mov
mov
test
ficomp
xchg
int
mov
jns
in
fistp
mov
ins
les
lea
rcr
mov
add
dec
push
mov
jo
mov
push
jo
outs
loop
rcl
jae
dec
mov
inc
hlt
(bad)
adc
iret
dec
js
(bad)
sub
int3
add
sbb
fiadd
mov
arpl
adc
sbb
jo
dec
xchg
mov
and
test
inc
push
mov
fisub
dec
adc
push
mov
mov
dec
pop
mov
repz
xor
or
push
dec
lods
ret
into
fcmovnbe
pop
mov
add
cdq
push
stos
push
cmp
lea
popa
inc
mov
cdq
fild
sub
dec
arpl
sub
lea
ficomp
adc
sti
inc
repnz
sbb
retf
call
jmp
pusha
clc
push
push
mov
bswap
iret
add
repz
fnstcw
push
daa
push
mov
dec
mov
popf
aam
xor
cmc
call
push
movs
pop
das
repz
sbb
dec
inc
sbb
popf
inc
retf
xchg
xchg
jno
sub
sar
into
jb
lock
and
jmp
inc
adc
iret
test
repnz
sub
shr
mov
test
fucom
test
shr
or
gs
pop
aaa
fstp
idiv
cmps
mov
jl
pop
jae
sahf
adc
std
clc
inc
cmps
push
jecxz
fs
jge
adc
sbb
in
add
and
xor
(bad)
and
rcr
sbb
sbb
out
fistp
pop
mov
pop
sbb
lock
sbb
lods
xor
test
jmp
je
mov
ret
and
mov
adc
and
into
add
mov
imul
pop
mov
leave
cmp
mov
out
std
inc
push
test
retf
dec
test
xor
sub
fsubr
mov
jae
xor
push
nop
into
cmp
pop
mov
add
adc
jmp
inc
jnp
adc
sub
and
push
scas
dec
cdq
iret
test
xor
fwait
sti
dec
mov
jae
inc
out
or
in
addr16
or
(bad)
pop
retf
lea
mov
pop
lds
pop
jno
cmc
mov
cmps
xchg
sbb
push
lock
inc
push
pop
test
test
xchg
imul
jmp
mov
xor
cmp
fsubr
sbb
xchg
imul
pusha
out
mov
pop
push
out
clc
mov
add
or
pop
xchg
loope
or
mov
iret
jge
test
call
sar
cmp
jl
jo
pop
push
add
jp
mov
pop
pop
mov
or
push
neg
xlat
xor
and
sub
fadd
loope
mov
repz
in
out
push
add
mov
ret
xchg
mov
mov
lock
push
xor
mov
ins
push
mov
inc
mov
repnz
jb
sbb
pop
cld
jle
pusha
loope
cmps
(bad)
enter
in
and
das
mov
add
pop
xchg
fs
gs
movs
cmc
push
inc
xlat
and
push
push
in
sbb
mov
movs
je
(bad)
adc
stos
add
sub
out
mov
xchg
movs
stos
xor
stc
mov
leave
push
mov
jge
scas
xchg
out
into
hlt
mov
and
nop
jg
or
cmc
in
jmp
or
mov
push
mov
sbb
test
fist
mov
lds
retf
jnp
pop
jle
adc
inc
nop
mov
into
xchg
pusha
add
add
call
shl
mov
sar
mov
out
ss
jl
fiadd
cdq
inc
push
mov
or
xchg
adc
sahf
cmp
mov
xchg
inc
xchg
add
loop
push
mov
sub
leave
fwait
popa
popa
stc
xchg
outs
or
and
data16
lods
in
scas
mov
sbb
mov
lods
sbb
cmps
(bad)
sub
arpl
test
cmp
clc
xor
cmp
xlat
jmp
mov
mov
sub
ja
mov
xor
sbb
int
outs
shl
in
popa
adc
add
retf
sar
cwde
and
das
out
test
sub
sub
repz
in
jmp
and
sbb
test
and
call
mov
mov
ja
sub
sbb
sub
int
das
pop
sub
add
shr
ja
and
(bad)
mov
in
mov
or
push
xor
pop
shl
pushf
xor
pop
fs
inc
fcom
push
sub
mov
mov
test
mov
jl
pushf
cmp
mov
mov
sbb
ja
add
mov
ror
cli
sbb
push
(bad)
scas
arpl
movs
sbb
mov
adc
mov
xchg
je
call
push
lds
jge
mov
loop
daa
push
jno
xchg
fld
jmp
retf
leave
(bad)
xlat
jp
or
push
lahf
test
neg
in
aaa
daa
dec
inc
mov
jae
and
xchg
sub
in
sbb
fs
(bad)
cli
pop
call
xchg
sbb
lahf
int3
sbb
daa
xchg
cwde
mov
std
jns
(bad)
loope
push
pop
(bad)
out
cmp
sbb
jbe
arpl
inc
push
xor
xchg
(bad)
imul
push
lods
xor
dec
sbb
lods
push
fmul
mov
cmp
iret
and
push
mov
call
dec
push
mov
cmps
mov
push
xor
push
out
or
popf
mov
pusha
adc
inc
add
cmps
xchg
imul
hlt
outs
xor
js
into
jno
add
das
add
and
test
in
xlat
jae
and
mov
aaa
cmps
jbe
cmp
and
mov
mov
push
adc
(bad)
daa
lds
xchg
push
inc
xlat
xchg
mov
mov
sbb
cmps
and
sbb
in
push
dec
mov
aas
mov
push
sti
call
mov
(bad)
repnz
xchg
mov
push
pop
pop
mov
imul
fisub
out
push
push
and
loop
fbstp
adc
and
std
in
or
shl
icebp
dec
(bad)
jnp
retf
and
fadd
and
pop
cmps
inc
pusha
movs
or
std
inc
int
jns
cld
xor
mov
xor
jb
xchg
mov
int
shl
out
add
push
inc
packuswb
and
cdq
into
adc
das
cdq
fnsave
movs
jb
mov
in
sub
mul
mov
cdq
pop
mov
data16
mov
test
dec
fs
jg
(bad)
adc
cmp
adc
dec
fisttp
mov
sub
iret
jl
push
loop
ror
mov
jmp
ja
dec
or
mov
mov
(bad)
adc
jp
fidiv
push
xor
in
mov
mov
push
push
sbb
(bad)
movs
inc
jo
arpl
aaa
xor
xchg
sub
jmp
pop
inc
inc
daa
mov
adc
loop
push
jnp
push
fistp
dec
movs
sub
sar
and
push
call
sbb
mov
loopne
inc
dec
std
add
fcomp
out
mov
jl
cdq
test
into
test
stos
dec
push
xchg
jmp
xchg
mov
xor
cmp
rcr
pop
out
or
pop
push
daa
cli
je
inc
and
jbe
sti
lods
xchg
in
sbb
ins
mov
jmp
mov
mov
sbb
cli
mov
lds
nop
pop
sub
loope
loopne
enter
mov
ins
mov
cld
pop
xor
test
loop
test
fcom
and
popf
mov
int
push
inc
cmp
xor
sub
mov
ins
arpl
mov
jle
movs
les
int
outs
adc
pop
dec
cmp
jno
mov
scas
sbb
xor
jle
cwde
pop
adc
sbb
into
dec
imul
and
sbb
mov
xor
jg
shl
into
test
outs
test
cmp
icebp
ss
fnstsw
push
xor
or
outs
inc
cmps
mov
(bad)
out
and
push
nop
cmp
inc
jg
mov
add
mov
mov
mov
mov
lahf
sub
fsub
pop
cmp
(bad)
mov
adc
out
push
nop
mov
xor
cli
inc
fs
or
mov
xor
add
adc
jl
or
xchg
pop
psubd
ret
repz
cld
hlt
call
jbe
frstor
xor
(bad)
add
rol
mov
push
ret
mov
push
and
cmp
inc
and
mov
ins
mov
call
stos
lods
xchg
pusha
mov
div
div
mov
xlat
cmc
je
jb
sbb
push
jecxz
mov
add
stc
xchg
and
bound
mov
out
add
xchg
push
cmp
sbb
mov
outs
jbe
call
lahf
movs
nop
daa
mov
div
add
fisub
pop
sbb
push
fdiv
sbb
and
shr
in
add
fwait
adc
mov
mov
ja
ror
cmps
dec
es
jnp
stos
das
pop
retf
call
sar
xchg
xchg
(bad)
xor
icebp
push
in
cmp
xchg
es
(bad)
cld
inc
and
retf
mov
les
inc
sbb
ret
dec
mov
fbld
mov
std
or
sub
adc
add
adc
xlat
cdq
mov
or
xchg
sbb
jne
add
setns
push
cmp
mov
xchg
push
mov
(bad)
cwde
push
out
stc
rcr
adc
sti
int3
pushf
cli
inc
pop
out
das
mov
sub
jmp
(bad)
or
fidivr
retf
mov
xchg
jmp
inc
mov
rcr
std
inc
mov
call
ins
mov
fwait
ror
aad
cs
lahf
je
cmps
xchg
pop
inc
out
stc
mov
in
lock
(bad)
(bad)
outs
cmp
xchg
xor
xchg
mov
cmp
mov
stos
in
mov
pop
cli
repz
xor
xor
pop
inc
pop
loope
or
mov
jl
dec
dec
dec
pop
or
cmp
adc
jmp
or
mov
mov
jmp
fisub
dec
out
cmp
cmp
mov
out
dec
lods
aaa
jle
or
inc
out
(bad)
lock
das
pop
sbb
cwde
cld
jecxz
dec
stc
push
ins
aad
into
sbb
sub
cmp
push
(bad)
inc
mov
fadd
pop
mov
cmp
stos
(bad)
jo
adc
enter
loopne
outs
arpl
push
mov
fucom
bswap
add
xchg
repz
(bad)
fnstsw
mov
retf
loopne
dec
cmp
leave
lods
retf
fld
int3
lahf
fistp
inc
das
outs
outs
or
fimul
pop
rcr
les
dec
daa
ret
in
repnz
jns
push
dec
popa
mov
rcl
mov
arpl
shl
jge
popa
arpl
push
adc
and
mov
lock
xor
(bad)
dec
scas
mov
xor
xchg
ins
rol
mov
ins
push
jmp
(bad)
inc
jp
repnz
jge
pop
pop
mov
add
shr
jbe
arpl
pop
mov
push
retf
scas
pop
call
js
jge
mov
or
adc
xor
repnz
sbb
loopne
enter
sub
ret
test
data16
je
enter
sti
or
nop
out
adc
mov
retf
int3
mov
mov
cmp
mov
out
inc
jb
pop
dec
dec
mov
push
les
pop
or
jmp
pop
sub
mov
das
pop
adc
cwde
(bad)
clc
rcl
fwait
outs
jbe
and
xor
mov
popf
outs
mov
arpl
mov
pop
mov
repnz
xor
emms
je
out
inc
mov
aam
movs
mov
pop
pop
std
mov
adc
icebp
aad
inc
push
mov
fld
jg
dec
dec
daa
dec
dec
enter
retf
mov
xchg
pop
sub
jns
push
push
xchg
inc
jmp
inc
shl
xor
sub
cmp
popa
repnz
ficom
pop
push
xchg
arpl
inc
sti
jae
jne
jecxz
push
rcl
cld
mov
cmp
(bad)
pushaw
out
sub
mov
inc
inc
lds
inc
xor
test
scas
jle
sub
out
cmp
mov
jmp
xchg
or
retf
leave
arpl
lea
push
fidivr
cmp
int
pop
(bad)
test
cmc
jae
sbb
jmp
push
arpl
cmp
repnz
sbb
jno
mov
dec
mov
or
sbb
fld
loope
cs
sbb
cmp
inc
dec
push
add
mov
and
sti
in
mov
shl
jmp
cwde
(bad)
test
xor
or
mov
jge
xchg
pop
push
adc
fst
aad
(bad)
fwait
mov
cmp
sub
jno
sub
in
movs
inc
icebp
push
mov
sar
fistp
int3
aad
pop
pop
and
xchg
bound
retf
sub
imul
jo
je
xor
push
call
dec
loope
fdivrp
repz
jmp
mov
jp
ret
call
jae
push
shl
mov
cmp
push
test
icebp
sbb
ret
lods
jmp
ins
lock
mov
cmp
cld
dec
popf
pop
lea
xor
lods
sti
inc
leave
out
jg
cmc
adc
xor
xor
and
js
retf
stos
inc
mov
aam
push
inc
dec
not
mov
pop
inc
adc
xchg
mov
daa
or
pop
push
loop
push
jl
mov
xor
pop
sahf
ins
push
retf
cmc
ret
xor
mov
push
xchg
dec
in
mov
daa
in
fnstcw
mov
inc
lods
mov
dec
mov
xchg
call
mov
mov
(bad)
aas
lahf
sbb
cdq
shl
lea
hlt
adc
cld
jno
sbb
inc
imul
call
mov
mov
ret
popa
(bad)
xchg
push
cmp
hlt
clc
xor
out
retf
lods
or
scas
pop
xor
sub
push
outs
daa
ja
sti
mov
and
leave
jg
out
jb
retf
call
lock
sbb
in
cmc
mov
test
adc
and
cmpxchg8b
dec
ss
into
or
das
mov
mov
mov
out
dec
lods
outs
ds
jp
ret
hlt
xor
and
inc
jno
stos
scas
xor
outs
mov
scas
inc
retf
jecxz
mov
imul
xor
aas
fucomp
mov
iret
add
mov
pop
jmp
sub
iret
push
sbb
pushf
pop
call
nop
jno
adc
shr
js
shr
add
jae
pop
add
jp
fimul
retf
es
int
fldcw
push
dec
or
xor
xbegin
push
mov
imul
dec
pop
and
jne
xchg
loopne
xor
mov
add
mov
mov
fisttp
jbe
add
sbb
addr16
cdq
stc
pop
or
dec
or
cmp
jmp
mov
repnz
mov
pop
shl
cmp
or
aaa
sub
cld
loop
and
mov
add
aad
cmc
dec
cmp
jbe
mov
jno
add
push
sahf
jmp
retf
in
cmp
je
mov
dec
xor
mul
inc
xchg
xor
jae
add
sub
add
data16
pop
push
fs
ins
call
mov
gs
ficomp
jg
mov
loopne
push
out
mov
ds
(bad)
and
dec
xchg
cmps
pop
adc
pop
aad
sar
fidivr
dec
retf
sbb
jmp
dec
xlat
cmp
jo
test
mov
ins
inc
jno
sub
pop
sar
gs
xchg
mov
adc
mov
dec
sahf
pop
in
mov
mov
iret
cli
inc
pop
push
inc
xchg
push
(bad)
jecxz
into
or
pop
xor
xchg
psrlq
call
adc
mov
jae
jecxz
jle
dec
add
lock
dec
cwde
xor
aaa
out
(bad)
sbb
mov
loop
sub
imul
adc
mov
test
adc
dec
push
mov
xchg
xchg
in
(bad)
imul
sahf
push
mov
mov
mov
scas
enter
sbb
int3
test
or
mov
je
pusha
daa
das
cmps
stc
mov
call
add
mov
imul
repz
push
pushf
(bad)
popa
mov
movs
sbb
adc
sub
fsubr
shl
push
mov
aaa
fisubr
pop
leave
adc
(bad)
adc
(bad)
out
xchg
rol
mov
les
jecxz
jmp
jp
sub
xchg
int
mov
add
cld
xchg
sbb
mov
mov
xor
shl
fild
fld
mov
retf
mov
or
mov
ret
xchg
clc
pop
lock
xchg
adc
(bad)
push
adc
xor
mov
scas
and
xor
arpl
nop
push
pop
or
sbb
scas
push
inc
std
inc
test
ret
mov
push
fidiv
add
xor
mov
mov
xchg
xchg
pop
dec
test
cmp
inc
cld
jmp
add
scas
xor
sbb
xchg
ins
cmps
mov
cs
mul
cmp
push
pop
jle
fadd
test
repnz
xor
out
push
test
jno
ficom
or
and
(bad)
fsubr
retf
sahf
adc
dec
outs
xchg
daa
mov
xor
cs
mov
mov
and
adc
xchg
add
mov
repnz
dec
jle
xor
adc
xchg
in
dec
push
xor
das
stos
sti
jmp
rcr
inc
mov
inc
in
sub
pop
int
push
push
js
movs
cmp
push
lahf
test
or
or
pop
xchg
jae
popf
inc
mov
dec
cmp
std
xchg
jmp
push
repz
(bad)
mov
sub
dec
pop
out
xchg
jl
popf
and
hlt
in
inc
repz
or
mov
call
cmp
mov
mov
jg
js
jecxz
cmps
daa
outs
mov
dec
fucomi
dec
ja
or
inc
xchg
pop
adc
mov
outs
scas
jmp
movs
into
ins
dec
movs
loop
push
adc
inc
stos
lds
sbb
cmp
adc
push
inc
fwait
aad
lods
les
sub
js
aaa
repz
cmp
push
in
xchg
xor
xor
fldenv
xor
mov
test
ltr
mov
mov
xchg
mov
mov
push
popf
cmps
dec
push
add
popa
loop
dec
ss
cmp
or
ja
leave
leave
push
push
(bad)
call
mov
clc
mov
outs
sti
fisttp
outs
imul
ret
pop
int
pop
sahf
leave
dec
dec
mov
push
adc
daa
mov
imul
or
adc
add
cli
mov
into
mov
inc
mov
xchg
cmp
jg
xchg
xchg
dec
sbb
ror
or
pop
lods
sbb
loop
sub
mov
and
sbb
ds
sub
gs
sbb
push
sbb
test
jns
lahf
push
add
add
outs
data16
mov
or
fcom
and
jl
into
mov
cwde
and
mov
xchg
test
xchg
aad
inc
sbb
retf
mov
sbb
sub
lods
xor
mov
dec
inc
sar
mov
mov
(bad)
fsub
in
test
ins
hlt
call
lods
ret
scas
push
mov
enter
add
bound
or
cmp
cmp
aaa
sti
adc
xchg
inc
jle
nop
call
xor
adc
lea
jle
(bad)
pop
cmp
mov
(bad)
test
in
mov
add
loopne
ds
or
fidivr
imul
fistp
test
int
movs
sub
sub
add
js
lods
jmp
cwde
xor
retf
(bad)
addr16
dec
push
dec
inc
pop
aam
mov
je
jl
retf
and
out
stc
or
jmp
movs
sub
jp
scas
iret
(bad)
mov
and
push
je
or
xchg
shr
movs
stc
xor
cmp
daa
shr
xchg
sahf
xchg
pop
xchg
jnp
int
adc
adc
xchg
ficomp
xor
push
rol
sti
aam
pop
cmp
mov
lds
fistp
addr16
push
cli
pop
ret
mov
test
in
shl
sti
aam
outs
mov
lahf
(bad)
sub
push
fwait
jge
idiv
aaa
test
call
inc
xor
or
cmp
mov
adc
cwde
inc
test
pop
mov
cmp
jbe
push
neg
loope
out
pop
xor
lock
ficomp
call
hlt
in
mov
fisttp
or
repnz
mul
inc
add
push
mov
mov
fucomp
ins
dec
aas
pop
out
add
pop
pop
cmp
test
sbb
or
jmp
mov
mov
je
std
jecxz
rcl
(bad)
mov
push
sar
inc
cmp
jbe
cmp
sbb
xchg
stc
jmp
push
xchg
xor
mov
(bad)
xor
(bad)
out
call
lock
cmp
cmp
fyl2xp1
cli
push
nop
je
push
add
into
push
in
and
fdiv
jmp
popf
mov
pop
ins
push
(bad)
loope
test
sub
jmp
push
loopne
xchg
stc
pop
jle
cmc
call
ins
and
pop
aas
xor
cdq
out
test
add
(bad)
push
push
lods
inc
out
test
shl
sub
cmp
sub
lea
add
add
scas
or
xchg
pop
(bad)
icebp
sti
add
mov
dec
cdq
cmp
ins
xor
push
jecxz
aam
cmp
out
cmp
jl
and
sbb
mov
jmp
jo
bnd
jno
jne
xchg
enter
loopne
or
outs
es
mov
pop
jbe
movs
mov
aas
sub
adc
cld
js
repnz
mov
dec
inc
fld
lods
ror
into
movs
push
sbb
call
in
xchg
call
sbb
jmp
hlt
sti
lea
sub
push
(bad)
push
fs
pushf
cmc
add
in
ror
push
pop
adc
push
sti
nop
xchg
movs
mov
lds
stos
in
mov
fs
jno
sbb
xor
push
ds
xor
mov
or
adc
loopne
jae
loop
jmp
push
sbb
into
daa
aam
add
push
out
stc
aam
dec
mov
aaa
data16
iret
das
das
lds
mov
jg
xchg
add
sbb
and
push
imul
(bad)
or
inc
mov
jae
sbb
sub
push
cmp
out
out
mov
sub
cmps
xchg
(bad)
jb
sar
inc
fwait
mov
bound
(bad)
xchg
mov
(bad)
mov
in
jmp
jnp
or
xchg
xor
push
ss
xchg
cmp
sahf
loope
or
xchg
mov
out
or
pusha
mov
adc
pop
clc
cmps
sti
lods
popa
xor
mov
(bad)
jmp
xor
int3
enter
adc
pop
out
inc
lahf
mov
mov
call
xor
xchg
cdq
cmp
cmc
ret
cmp
jno
dec
loope
mov
push
fdiv
adc
fsubr
lods
mov
sub
clc
dec
dec
stos
mov
mov
rol
mov
rcl
stos
push
dec
lods
xchg
pop
test
imul
inc
aaa
jg
cmp
xor
repnz
icebp
fdiv
(bad)
pop
sar
pop
call
test
call
out
imul
jmp
aad
jno
ja
imul
pushf
mov
imul
xor
jno
and
xchg
lahf
dec
cs
out
cmp
mov
mov
mov
adc
scas
and
sbb
push
(bad)
das
mov
pop
push
xchg
iret
pop
inc
jecxz
popf
cmc
jo
es
pop
dec
retf
test
jg
sub
lods
xor
call
xchg
(bad)
iret
cmps
mov
ins
mov
cmp
xchg
scas
fs
syscall
bound
xchg
jg
mov
sbb
fcomi
aaa
mov
call
push
mov
inc
or
das
retf
std
test
out
ror
dec
(bad)
xchg
not
out
cmp
mov
scas
xor
(bad)
sbb
xchg
shl
or
fs
test
jns
ins
test
xor
pop
fs
rol
sub
ins
cmps
retf
inc
mov
inc
adc
loopne
scas
ins
cwde
test
jo
or
dec
clc
imul
xchg
push
bound
and
push
mov
sbb
mov
jae
xor
test
mov
test
aad
sub
enter
(bad)
jo
cmp
add
sbb
ds
xchg
pusha
push
movs
cmc
gs
xchg
call
mov
dec
xor
in
and
or
sub
xchg
scas
clc
call
pop
mov
push
inc
xor
pop
pop
mov
das
cmp
test
daa
rcr
mov
pop
jge
(bad)
stos
pusha
data16
hlt
jb
and
outs
je
movs
test
mov
xor
jnp
push
popf
outs
cmp
sbb
fstp
ins
js
inc
es
push
add
in
pushf
mov
mov
or
in
retf
je
mov
and
pop
fcomp
pop
push
dec
mov
or
sbb
leave
test
xchg
aas
dec
mov
fcomp
ins
push
xchg
shr
pop
stc
inc
scas
mov
and
jae
test
or
xchg
fsubr
mov
dec
jmp
sbb
mov
or
mov
cmps
mov
repnz
dec
mov
jg
pop
xchg
daa
test
sbb
jae
sub
ins
mov
mov
mov
sub
in
dec
and
and
pop
adc
dec
mov
aad
les
cmps
or
sub
mov
sti
fs
fwait
lods
inc
sub
imul
xor
pop
popf
jbe
dec
icebp
hlt
sub
les
js
into
mov
xchg
dec
adc
rcl
jl
pop
scas
pop
xchg
hlt
int
test
repnz
push
dec
imul
dec
mov
mov
sbb
pop
and
(bad)
retf
cwde
pop
mov
jmp
adc
leave
inc
mov
repz
xchg
push
test
jp
stos
addr16
and
fsub
nop
aad
ja
sbb
fadd
(bad)
and
shl
and
dec
adc
aas
mov
pop
cmps
push
fdiv
cdq
into
mov
mov
pop
stos
int
in
idiv
cli
scas
ds
push
mov
push
aad
imul
nop
inc
nop
or
sahf
add
pop
cmc
inc
pop
add
jae
aas
xor
and
push
add
and
sub
dec
xchg
mov
(bad)
stos
adc
jmp
push
mov
in
push
mov
leave
pop
fadd
mov
movs
jp
xchg
xchg
pop
gs
cdq
rol
push
mov
add
mov
cmps
push
cwde
and
fisttp
repz
les
mov
imul
cdq
cld
sbb
pusha
pop
cdq
daa
ss
in
icebp
adc
fnstsw
mov
scas
add
ins
push
adc
cmp
cmp
adc
cmovle
pop
(bad)
jno
mov
lds
add
test
mov
push
shr
dec
mov
inc
shl
push
lock
xchg
fs
adc
or
pop
mov
xor
sbb
aaa
mov
pop
dec
sbb
xor
stos
inc
dec
inc
xchg
gs
mov
retf
pop
test
xor
in
dec
push
xchg
cmps
xlat
push
rol
add
cmps
gs
jge
mov
cs
dec
adc
fnsave
das
push
xor
test
js
iret
and
sub
cwde
push
fiadd
and
xchg
jg
jge
ds
push
jbe
mov
daa
sub
xchg
inc
xchg
xchg
lahf
pop
jbe
adc
dec
adc
jae
inc
(bad)
mov
mov
mov
or
je
push
fadd
mov
outs
and
inc
jns
lods
(bad)
mov
pop
dec
dec
dec
nop
mov
aaa
jl
call
cli
sbb
or
cmp
pop
or
mov
(bad)
or
sahf
push
push
xchg
stos
cdq
and
pop
sub
cmp
nop
loope
iret
sar
ss
inc
int3
aaa
xor
inc
xchg
xchg
add
push
nop
jmp
adc
not
push
cmc
ins
jne
inc
sbb
mov
xchg
add
add
mov
ins
adc
xchg
inc
es
push
cmp
cmp
aas
cmp
mov
jle
jmp
aad
lods
jmp
das
push
inc
(bad)
push
in
sub
or
mov
jbe
sar
test
push
sub
ss
retf
ja
jno
mov
cmps
(bad)
out
ss
je
pop
xchg
jp
stc
call
enter
xor
(bad)
fadd
mov
ja
dec
icebp
int3
xchg
test
lds
loopne
push
sbb
nop
jle
add
in
xchg
xor
icebp
retf
jmp
shl
mov
fistp
call
mov
gs
movs
aas
sub
ret
push
mov
sub
repnz
add
enter
sahf
cmp
inc
clc
mov
sub
in
sbb
js
repnz
push
or
jmp
xor
std
pushw
call
fs
cmps
cs
add
jbe
pop
shl
jle
out
pop
cli
int
into
lods
out
fwait
cmp
mov
cmps
jl
retf
or
mov
adc
sbb
dec
mov
(bad)
jne
xchg
sub
mov
mov
mov
mov
inc
iret
(bad)
jnp
or
outs
xlat
mov
sub
test
jl
arpl
or
ud1
adc
push
xchg
add
stos
xor
fstp
push
inc
cmp
sbb
add
adc
aam
(bad)
loopne
push
add
sbb
jg
stc
leave
jle
jg
dec
icebp
cli
aas
lahf
aaa
jbe
dec
in
popa
xor
rol
sub
sub
out
mov
repz
and
add
stos
icebp
push
rcl
add
xor
ins
enter
push
jecxz
fisub
es
call
jp
fmul
out
imul
cmps
arpl
sbb
lea
lods
mov
mov
add
popf
out
int
dec
adc
mov
fldenv
pushf
mov
jp
fidiv
scas
add
ja
mov
xor
jno
sub
mov
out
mov
mov
mov
cmp
js
cmc
sbb
add
outs
sub
stc
(bad)
lahf
lahf
in
jle
mov
cdq
popf
(bad)
sbb
push
int
push
jge
cdq
stos
fnstsw
bound
out
xor
pop
stos
inc
sahf
xor
shl
mov
ret
scas
enter
cmp
cmp
test
sbb
pop
sub
push
mov
outs
xor
inc
pushf
or
or
jns
sbb
xor
fdiv
ss
xor
movs
mov
xor
mov
mov
in
add
push
sub
pop
jo
ins
rol
and
lahf
fcom
xor
push
test
xchg
fsubr
pusha
into
or
xor
pusha
lods
jg
shr
cmps
das
pop
dec
cmp
cld
movs
jbe
pop
sbb
pop
adc
push
add
test
clc
mov
fld
jmp
mov
adc
cmp
sub
mov
arpl
cmps
mov
ins
mov
es
gs
push
mov
cmp
push
push
pop
jnp
fild
imul
stos
push
rcr
call
out
cld
loopne
push
hlt
xor
test
sub
adc
nop
fild
retf
jns
or
retf
pop
jne
mov
int
(bad)
loope
js
out
movs
loop
pop
xor
imul
mov
xchg
adc
sbb
test
iret
dec
jmp
scas
add
push
pop
pop
ins
sbb
inc
and
jbe
lea
and
movups
(bad)
rcr
mov
xor
inc
movs
mov
push
add
out
(bad)
or
(bad)
ds
mov
mov
data16
sahf
test
xchg
push
fisttp
mov
add
imul
jp
dec
pop
pop
in
adc
mov
out
inc
sub
cmp
ins
pop
sub
(bad)
jmp
xchg
outs
jno
dec
cmp
(bad)
pop
movs
scas
into
sti
pop
pop
aam
push
les
xlat
adc
cmp
xlat
jp
loopne
push
sbb
and
jns
push
push
leave
pop
dec
jns
scas
ins
gs
sub
std
and
aas
xchg
inc
xor
add
mov
out
hlt
mov
xchg
hlt
jbe
into
jmp
mov
icebp
push
std
cmps
jle
pusha
out
cmc
pop
gs
add
fwait
dec
shr
adc
out
es
sub
jle
out
adc
xchg
mov
addr16
in
mov
or
js
ret
stos
sbb
xlat
push
test
cli
fcomip
mov
cmp
test
addr16
arpl
std
test
repz
shl
inc
or
icebp
ror
fucomp
ror
dec
pmovmskb
arpl
mov
stc
retf
out
fnstsw
test
sub
inc
fs
push
call
mov
icebp
or
sub
test
cs
(bad)
popf
inc
enter
das
data16
push
xlat
mov
push
sbb
add
nop
dec
cmc
push
cmp
outs
push
mov
or
jmp
adc
shl
movs
in
imul
fmulp
outs
add
popa
jne
dec
or
sbb
push
inc
sahf
jecxz
cmp
dec
js
mov
mov
shr
cmp
stos
jo
dec
mov
pop
or
dec
int3
and
or
std
adc
push
nop
movups
in
(bad)
mov
rol
call
stos
or
das
mov
fst
cwde
push
dec
out
nop
test
bswap
ds
pop
push
pop
test
nop
mov
leave
lea
push
pop
ror
cmp
fsqrt
jbe
ror
fiadd
push
and
std
xor
fldcw
fsubr
clc
dec
lock
mov
add
pop
ficomp
jae
dec
cmc
mov
pop
loope
retf
cmc
popf
sub
sub
sub
mul
xor
cmps
stos
xor
mov
jb
mov
jb
cmp
push
mov
loopne
ins
jnp
sub
call
mov
mov
ds
call
popa
xor
xor
mov
inc
das
or
push
and
jno
and
ss
daa
xchg
lods
bound
push
sub
xchg
stos
mov
mov
sbb
adc
mov
mov
iret
call
xchg
fdiv
push
shl
and
das
div
mov
pop
in
dec
mov
cmp
push
mov
das
int3
push
(bad)
sbb
pop
stc
scas
addr16
or
popf
lods
mov
mov
(bad)
in
push
arpl
mov
cld
dec
fdiv
jle
test
mov
mov
xchg
sub
jno
jnp
repz
mov
aam
lock
pop
(bad)
les
or
neg
mov
dec
push
(bad)
sbb
rcr
adc
add
repz
pushf
sti
sub
jmp
push
div
call
sbb
hlt
and
retf
sti
adc
repnz
ss
enter
mov
jne
or
cmp
fdivr
imul
pop
and
fs
inc
and
add
js
jb
xor
pop
jg
leave
popf
into
jno
outs
jno
adc
dec
or
retf
mov
mov
inc
cmps
adc
xchg
mov
inc
mov
dec
jne
add
mov
push
je
call
jmp
mov
(bad)
or
mov
ja
fsubr
sub
retf
ins
jp
adc
mov
jnp
test
sub
sar
pop
fild
sar
pushf
iret
or
ret
repz
stos
gs
inc
fnstenv
(bad)
xchg
test
stc
dec
dec
push
enter
pop
fdiv
mov
inc
js
mov
lods
mov
push
pop
loope
mov
dec
xchg
xchg
hlt
mov
push
jns
loop
mov
mov
mov
sbb
retf
mov
shl
call
aas
inc
xchg
scas
dec
pop
mov
dec
jg
int
xor
fcomp
imul
stos
outs
adc
cmc
xchg
mov
cld
pop
(bad)
mov
and
cdq
(bad)
pop
xchg
fcomp
loopne
(bad)
jmp
leave
aas
and
movhps
mov
sbb
jmp
jmp
xor
pop
jns
mov
(bad)
call
dec
(bad)
pop
les
mov
jbe
dec
add
shl
mov
cwde
xchg
es
std
sub
jmp
xchg
push
test
sub
mov
xor
pushaw
inc
adc
or
arpl
inc
mov
adc
xlat
cmp
and
sbb
add
fist
cmp
dec
mov
stos
fwait
out
popf
jl
ins
ins
aas
mov
jge
and
inc
retf
retf
mov
pop
fidiv
add
jp
(bad)
cli
push
inc
jge
jno
adc
dec
out
mov
or
pushf
cmp
sub
leave
and
sub
adc
jmp
popa
and
pop
iret
in
ret
xchg
lods
cwde
mov
jmp
mov
push
cld
xchg
mov
ja
xchg
push
dec
imul
cmp
jmp
sbb
jmp
sbb
pop
and
shr
test
dec
nop
sahf
in
mov
imul
enter
(bad)
out
dec
sahf
push
(bad)
jecxz
clc
addr16
xchg
fs
xor
pushf
mov
sbb
addr16
stc
adc
sub
fmul
gs
aam
es
ja
mov
leave
and
imul
std
adc
cmp
fistp
push
sti
xchg
jmp
int
adc
dec
dec
nop
arpl
mov
cmp
jle
inc
leave
mov
xchg
(bad)
and
nop
mov
xchg
xchg
jbe
or
sbb
call
dec
push
cmp
in
ret
dec
sbb
adc
and
xor
jle
cmp
xor
dec
cmps
adc
enter
and
int
xchg
mov
inc
dec
sub
sbb
loopne
ds
mov
pop
repnz
xor
inc
push
pop
dec
out
and
sub
scas
aas
add
dec
(bad)
sbb
pop
lock
jo
xchg
repz
retf
test
lods
jmp
cvtdq2ps
(bad)
xor
push
sub
loop
add
add
adc
cmp
mov
mov
xchg
add
lahf
cmp
sbb
jge
clc
mov
or
mov
sbb
movs
mov
in
and
push
add
in
add
dec
rcr
ja
xor
ins
or
xchg
pop
mov
pop
pop
mov
out
add
mov
and
mov
xor
pop
cmp
adc
push
mov
test
push
test
sbb
dec
test
push
jno
call
je
mov
and
pop
(bad)
pop
stos
pop
pop
pop
fcom
and
cs
lahf
mov
adc
cld
lea
sbb
push
push
inc
out
add
scas
fistp
inc
inc
xor
retf
(bad)
mov
shr
sbb
in
mov
hlt
pop
xchg
xchg
ror
and
clc
test
mov
jg
movs
leave
jbe
mov
adc
(bad)
fcomp
neg
fadd
xchg
jmp
call
fld
jp
(bad)
std
je
out
xchg
scas
gs
sub
lea
aaa
xchg
inc
mov
cmp
dec
stos
ds
jmp
jo
std
cmp
pop
ret
cmc
jp
dec
icebp
inc
cmps
cmp
jle
pop
fs
cmp
dec
cmps
aaa
std
leave
lods
mov
mov
xchg
adc
(bad)
stc
ins
pop
int3
push
add
jmp
xchg
cmp
mov
or
mov
sahf
mov
(bad)
and
out
fsubr
movs
leave
mov
(bad)
hlt
inc
out
nop
cmp
test
xchg
fiadd
mov
retf
jmp
bound
and
add
stc
mov
cli
and
sub
fst
test
cli
into
sub
add
mov
or
or
jae
inc
outs
loope
jbe
xchg
or
pop
mov
push
mov
mov
or
cmps
mov
aaa
dec
push
xor
xchg
hlt
inc
add
jne
nop
fidiv
stos
bound
movs
add
add
xor
pop
sub
div
stc
cdq
mov
cmp
xchg
out
rcl
popa
call
add
mov
retf
sbb
in
scas
mov
jmp
bound
mov
addr16
dec
cmp
in
jg
push
loopne
dec
mov
test
cmp
shl
mov
test
stos
aas
imul
stos
jmp
lds
(bad)
push
or
cmc
neg
jle
jmp
bound
or
cli
das
or
mov
ja
adc
xchg
test
xchg
xor
or
push
dec
addr16
mov
jp
cmp
mov
adc
mov
dec
arpl
mov
fisttp
jl
std
inc
mov
repz
mov
add
xor
dec
call
and
cs
inc
ss
inc
pop
jae
mov
loopne
xor
es
pop
test
pop
mov
jb
stos
xchg
outs
pop
fistp
icebp
sahf
push
or
pop
shl
scas
ret
cmp
xchg
xor
sub
int3
mov
out
xor
in
mov
jb
adc
add
add
mov
pop
stos
jmp
lods
push
or
sbb
xor
mov
cmp
and
stc
icebp
loope
jl
or
test
fwait
xchg
sub
gs
mov
int
fisubr
push
rol
test
std
mov
shr
out
add
dec
xchg
sub
or
jge
push
xchg
int
adc
sar
dec
aaa
cwde
ds
sub
test
push
repnz
push
jl
aaa
gs
or
push
jl
jns
sbb
das
push
inc
cmc
fdiv
cmp
push
ja
sbb
mov
das
dec
fs
(bad)
sahf
loopne
arpl
loope
xlat
or
sahf
xchg
(bad)
and
or
push
data16
(bad)
das
xchg
mov
mov
rcr
aaa
icebp
clc
sbb
pop
jmp
mov
ins
addr16
pusha
fwait
int3
ret
sti
xchg
sbb
mov
add
pusha
push
out
mov
mov
or
mov
aad
stc
scas
mov
ins
mov
mov
and
das
loop
call
xor
wbinvd
add
lea
jle
fldenv
das
adc
retf
stc
sbb
mov
mov
retf
jmp
jns
mov
sbb
clc
mov
(bad)
movs
mov
push
xchg
inc
adc
dec
in
in
sbb
cmc
jecxz
xchg
(bad)
fcom
fcom
jmp
pop
sbb
inc
(bad)
call
inc
cmp
leave
fs
xchg
lods
loop
pusha
dec
mov
adc
(bad)
xlat
or
bound
sub
cmps
scas
rol
ds
add
les
je
add
cmp
cld
jge
in
fidivr
pop
ds
out
dec
and
je
jns
dec
stos
jecxz
outs
stos
sub
inc
or
inc
das
sub
inc
sbb
push
and
dec
icebp
imul
xchg
add
adc
int
scas
fld
icebp
icebp
push
popa
dec
inc
dec
popa
jp
dec
scas
(bad)
out
mov
shr
int
inc
imul
pop
dec
jecxz
ins
sbb
fimul
mov
scas
jmp
sub
cmps
into
xlat
push
fimul
and
and
aam
cs
adc
cmps
das
xchg
or
scas
pop
arpl
ret
push
ins
shl
mov
pop
xchg
inc
mul
jo
sar
inc
jno
push
test
lods
inc
out
call
sbb
and
in
xchg
pop
fisttp
popf
adc
sbb
inc
sbb
int
stos
test
fisttp
(bad)
and
mov
mov
xchg
in
jb
cld
leave
icebp
add
push
mov
mov
clc
sbb
stos
ds
ret
retf
gs
push
jae
popa
repnz
xlat
int3
push
pop
inc
cmps
call
imul
adc
fist
sub
dec
rcr
pop
sub
pop
jns
test
outs
imul
fnsave
aaa
addr16
ins
jne
xor
int3
and
jl
push
sub
push
in
mov
cmp
mov
aam
scas
adc
popa
clc
clc
lds
movs
loopne
(bad)
jle
xchg
mov
adc
mov
mov
sub
dec
out
scas
daa
jbe
jnp
aad
in
ret
adc
aaa
in
shr
xchg
out
out
aad
retf
inc
outs
add
sub
xor
out
mov
xchg
mov
inc
jnp
and
jmp
sbb
inc
retf
dec
add
loopne
(bad)
test
in
(bad)
push
stc
es
xchg
xchg
retf
in
mov
outs
int
mov
pop
aaa
jecxz
mov
aad
push
cmp
out
sub
test
push
mov
xchg
jnp
dec
sbb
xlat
or
dec
cwde
jno
cli
inc
(bad)
jo
ins
imul
and
xchg
shl
into
or
jmp
ins
aas
ds
das
dec
xchg
push
dec
jnp
sub
adc
das
cmp
cmc
aas
pop
loope
test
mov
lods
xor
or
xor
cmp
adc
scas
sti
and
adc
mov
push
pop
jg
push
mov
mov
cmps
fdivr
or
into
pop
adc
push
xor
mov
ret
lods
add
adc
mov
fild
stos
jbe
mov
ror
sbb
(bad)
jmp
jnp
mov
lahf
jnp
popf
mov
out
cmp
or
fcmovnbe
retf
inc
mov
push
inc
popf
push
xchg
das
jge
int
or
jl
mov
pop
add
mul
jns
(bad)
add
inc
popf
jns
imul
shr
fcom
sub
nop
out
adc
or
test
cmps
xor
add
loopne
jecxz
sub
adc
dec
xor
inc
add
lods
outs
dec
dec
leave
out
mov
xchg
out
xlat
jl
test
hlt
in
cld
outs
dec
push
dec
push
gs
adc
mov
inc
dec
lock
and
or
pop
sbb
popf
shl
test
and
aaa
daa
jle
imul
adc
push
jle
fs
adc
addr16
and
mov
cmp
mov
adc
jo
xchg
in
pop
out
pop
mov
mov
xchg
pushf
push
pop
xchg
ss
sub
mov
push
dec
rol
fldcw
lock
jmp
jb
out
jb
xor
or
dec
push
sbb
pushf
cli
dec
mov
pop
cmp
jp
mov
fsub
les
mov
add
loop
push
sbb
inc
call
jne
cmps
cwde
gs
aaa
out
repnz
pextrw
mov
pop
dec
cmps
test
dec
xor
dec
sbb
adc
dec
push
outs
xchg
call
inc
mov
lahf
xor
or
test
mov
jne
shl
mov
dec
inc
inc
xchg
xchg
loop
shl
or
retf
cmps
mov
stc
push
arpl
lds
leave
or
jp
aas
push
sub
push
fs
stc
sbb
cwde
inc
push
mov
sbb
hlt
mov
cmp
sti
arpl
push
sub
cmps
icebp
into
stc
pop
cld
sbb
xor
add
jl
xchg
idiv
fwait
cmc
jge
inc
cs
mov
out
cmp
clc
lods
ror
sub
sub
mov
mov
(bad)
std
adc
mov
or
popa
push
mov
or
aam
cld
sti
jle
and
in
and
int
sbb
push
mov
cmp
xlat
stos
mov
or
jle
addr16
div
jae
mov
cmps
cli
rcl
movs
out
clc
sub
mov
test
push
jbe
out
fisub
aam
es
mov
mov
fstp
push
mov
cmp
es
adc
adc
jge
bound
adc
add
sub
mov
lds
sahf
cmp
aam
aad
rol
jecxz
mov
enter
das
mov
jmp
cli
daa
(bad)
cmp
jmp
fisub
lea
jle
mov
jmp
mov
pop
mov
push
data16
mov
mov
jl
ins
xor
inc
sub
movs
sahf
inc
(bad)
pusha
mov
mov
xchg
ret
test
push
mov
mov
sahf
into
jge
test
push
imul
sar
les
in
mov
cmp
pmulhw
sti
xor
ror
in
sub
mov
dec
imul
ret
test
retf
xchg
mov
add
sti
call
(bad)
bound
imul
or
aaa
ins
and
mov
ds
scas
imul
dec
and
push
jp
xor
gs
mov
adc
das
xchg
cld
fs
movs
mov
je
jne
jmp
cmps
iret
inc
jbe
hlt
xor
into
aaa
xlat
cmc
and
fcom
icebp
pop
or
adc
mov
inc
jne
cmp
sub
bound
mov
(bad)
cmc
dec
clc
mov
mov
mov
cli
inc
std
shr
jbe
lock
scas
(bad)
jno
mov
cmp
jecxz
push
fstp
in
data16
push
and
popa
or
test
pop
outs
push
mov
pop
push
cvtps2pi
adc
xchg
neg
pop
call
shr
stc
jg
jno
and
pop
and
jbe
ficom
adc
adc
out
add
loop
(bad)
lods
jno
test
je
cdq
add
mov
fcmovnb
lds
sbb
xor
sub
cmp
cmp
pop
mov
int3
add
jae
lea
jl
nop
into
sbb
sub
lods
jns
scas
xor
(bad)
sbb
lahf
gs
sar
js
shr
inc
xchg
movs
push
jne
sub
mov
(bad)
je
push
push
xor
push
mov
je
jl
xchg
add
fs
outs
sahf
dec
cli
adc
add
sbb
mov
cmp
dec
retf
inc
outs
sub
sub
xchg
pop
bnd
dec
push
jo
mov
jo
xchg
xchg
mov
sub
ins
rol
lock
xchg
and
dec
mov
scas
mov
mov
outs
test
push
mov
sti
mov
arpl
fcom
aam
fwait
test
fistp
push
push
or
imul
pop
outs
(bad)
es
xchg
(bad)
ret
pop
inc
jecxz
cmp
ret
xor
popa
inc
(bad)
mov
mov
adc
dec
pusha
sar
outs
pop
fs
call
mov
sub
mov
(bad)
iret
ins
and
mov
int3
repnz
mov
cdq
xchg
pop
pop
call
push
push
(bad)
fst
xchg
daa
jl
push
push
dec
imul
mov
jbe
cmps
mov
fnsave
or
mov
mov
jle
mov
pushf
xchg
leave
cdq
sahf
test
shr
aam
add
stos
mov
in
shr
pop
mov
mov
xchg
bound
mov
dec
div
jmp
push
xor
push
add
sbb
xchg
in
adc
fistp
pop
inc
clc
js
dec
imul
ins
push
add
push
mov
mov
jne
sub
bound
mov
adc
push
pop
iret
aad
jge
push
xor
test
or
mov
add
and
and
repz
xchg
sahf
mov
xchg
dec
mov
push
arpl
xchg
mov
cli
loopne
stos
dec
out
jb
mov
fcmove
push
icebp
and
mov
enter
or
fisttp
popf
lods
test
pop
repnz
dec
lods
cmc
pushf
imul
xor
jae
add
and
jecxz
clc
xchg
leave
sbb
fs
mov
outs
(bad)
test
out
(bad)
mov
xor
inc
sti
mov
push
imul
(bad)
jmp
fst
iret
je
out
iret
or
repz
dec
xchg
sbb
in
stos
inc
(bad)
out
retf
cmp
sub
imul
adc
fild
fcomp
jge
inc
(bad)
sar
cmp
sub
or
jg
ins
dec
jb
aaa
and
out
rol
repnz
pop
cwde
jg
enter
and
xchg
hlt
xchg
dec
retf
add
cmps
bound
jmp
push
sahf
mov
cmps
inc
inc
mov
cdq
adc
xchg
pop
and
xchg
(bad)
mov
jg
ins
xchg
movs
mov
jle
pusha
mov
ins
jp
mov
mov
lods
scas
jae
in
stos
pushf
xor
out
enter
repz
gs
push
(bad)
mov
lahf
xor
fcmovbe
aam
sub
xor
lds
sbb
sbb
cmp
mov
push
dec
fcomp
ins
cwde
pop
cs
add
or
mov
icebp
xchg
inc
test
aaa
xchg
in
xor
js
and
mov
add
ret
lahf
dec
sbb
int3
int
stos
push
scas
pusha
pushf
push
adc
cld
xchg
jae
test
xlat
call
paddw
sbb
dec
lock
mov
sti
pop
(bad)
neg
gs
aaa
mov
jmp
in
mov
mov
cmp
mov
daa
lea
jo
cmp
fcomp
cmp
arpl
fdivr
sbb
mov
(bad)
sti
gs
mov
sub
ins
mov
fsubr
sbb
sbb
or
inc
lock
dec
cmp
loopne
leave
lods
mov
test
mov
push
push
fst
pushf
inc
fidiv
jecxz
pop
push
or
xchg
xor
xor
dec
int3
cmp
cmc
cmp
inc
sub
cmp
mov
cmp
cmp
dec
mov
movs
and
mov
ja
mov
cmp
pop
or
add
inc
pop
add
out
(bad)
jnp
and
dec
jnp
xor
fnsave
xor
push
div
pushf
xor
stos
push
inc
pushf
ds
adc
add
test
mov
lods
jno
in
les
mov
cmps
mov
xor
rcl
ret
(bad)
push
mov
xor
imul
enter
aad
xlat
jle
pop
cs
add
loope
sahf
sbb
cli
xchg
pop
dec
int3
xchg
pusha
jl
retf
ins
loop
loope
cld
cwde
mov
int3
cwde
addr16
leave
(bad)
int
push
pop
in
test
sbb
inc
and
xor
or
adc
call
jno
pop
push
in
data16
ror
xchg
jae
mov
in
mov
fimul
(bad)
out
xchg
popf
aaa
cwde
dec
ror
lea
xor
pop
push
int
retf
sub
xchg
mov
mov
mov
addr16
imul
fs
enter
sbb
xor
pop
(bad)
cmp
mov
mov
jmp
push
std
cmc
jg
jecxz
sbb
leave
adc
dec
cmps
pop
mov
jg
int3
movs
cwde
es
imul
stos
mov
sub
or
jp
ds
mov
ret
cmps
add
in
jge
hlt
retf
ret
jnp
push
push
sub
mov
das
xor
inc
in
lods
add
out
or
cmps
popa
ds
addr16
fbstp
iret
cmp
jo
xlat
aad
jp
xlat
mov
call
scas
shl
stc
cmp
and
jle
push
dec
in
mov
mov
lahf
cld
pop
mov
xor
ja
ins
push
retf
pop
bound
cmp
cdq
(bad)
fild
retf
inc
dec
push
xchg
sbb
mov
dec
call
or
mov
adc
lds
imul
jo
ror
ds
pop
add
shl
adc
pusha
inc
pop
pop
not
or
mov
(bad)
fst
neg
jno
push
mov
mov
inc
sbb
loope
push
xlat
and
mov
inc
in
sbb
aaa
pop
scas
imul
mov
sub
cs
mov
xor
jo
dec
mov
out
add
jp
cmps
sub
mov
(bad)
sbb
xchg
push
push
psubsw
popf
push
mov
jae
push
push
inc
mov
stos
pop
cmps
inc
cdq
xchg
icebp
in
mov
mov
dec
in
mov
aas
out
xchg
cmp
je
fnstcw
dec
xchg
jbe
mov
pusha
(bad)
mov
ins
adc
xchg
jo
loopne
inc
mov
outs
and
inc
adc
jle
aad
mov
std
adc
xchg
dec
test
(bad)
pop
in
mov
lea
push
sbb
jp
pop
and
icebp
pop
movs
pop
les
jne
loop
test
ret
mov
jp
or
pop
push
or
push
test
and
lds
push
rcl
push
(bad)
or
pop
loopne
rol
int
or
cdq
loop
dec
jbe
test
loop
dec
jne
and
hlt
les
call
jmp
sbb
pshufw
loopne
sub
test
sbb
mov
xchg
cld
test
xchg
adc
xchg
inc
mov
and
into
xor
or
dec
cmps
mov
mov
adc
dec
add
sar
mov
mov
jae
or
bound
fcomp
(bad)
jmp
call
mov
clc
sbb
push
dec
jmp
into
mov
cs
jbe
or
and
cwde
cmps
pop
xor
imul
mov
xor
or
adc
cmp
xchg
cmp
sub
gs
mov
cmp
ret
icebp
pop
bound
push
xchg
popf
fldenv
enter
rol
in
xchg
clc
pop
popa
pop
fsubr
xor
fsubr
sub
stos
dec
mov
cld
outs
stc
(bad)
int3
mov
mul
xchg
test
mov
leave
fild
movs
cld
call
lahf
je
in
mov
push
xchg
les
cmp
iret
adc
jnp
jne
jle
lods
fsubr
mov
or
in
push
gs
lods
and
or
and
mov
shr
lea
xor
sub
fs
rcr
mov
loope
jne
and
mov
dec
cs
in
clc
dec
pop
pop
aaa
mov
fs
aas
test
mov
pop
mov
fnsave
cdq
or
mov
ja
jmp
sbb
add
inc
sub
clc
ja
mov
ret
and
ins
mov
sbb
ins
or
sbb
hlt
sub
or
aas
dec
adc
add
pop
mov
fistp
push
loope
test
movs
outs
enter
mov
(bad)
lods
cld
rcl
gs
jecxz
or
int
cld
inc
cmps
adc
aaa
fisub
and
arpl
clts
add
push
xor
outs
push
js
dec
ficomp
adc
shr
mov
add
test
sub
jle
inc
into
ret
mov
ss
and
jge
inc
add
movs
pop
enter
call
and
push
inc
push
push
inc
push
pop
mov
sbb
(bad)
(bad)
ret
rol
sbb
mov
push
out
xor
or
iret
push
dec
lock
sbb
dec
cmc
mov
sub
aaa
pushf
jmp
retf
(bad)
in
in
(bad)
adc
lds
mov
sbb
or
ss
lock
jge
pop
mov
mov
clc
pop
daa
xchg
adc
in
xchg
cmp
jne
lock
lahf
cmp
or
shr
inc
dec
scas
push
sti
push
std
add
call
sub
mov
sub
push
xor
cmp
adc
dec
call
bnd
popa
ins
adc
mov
dec
sub
and
aam
mov
sar
in
jne
push
shl
into
cmp
adc
inc
out
out
jle
jb
outs
cmp
gs
es
jno
test
fsubr
mov
outs
add
popa
enter
add
movs
fild
sbb
outs
jne
cmp
xchg
cmp
or
jae
leave
jge
dec
push
popa
stos
std
jge
pop
(bad)
and
ds
and
mov
or
dec
jecxz
nop
das
mov
pop
xor
mov
pop
or
adc
pop
scas
loop
xchg
mov
jo
pop
add
aad
sbb
iret
push
mov
cmp
out
add
sar
imul
xchg
aad
cld
pop
jge
sti
push
dec
gs
mov
xchg
xor
jg
cli
jp
imul
mov
mov
retf
dec
rcr
xor
inc
mov
inc
sub
stos
test
lea
sub
mov
ret
int
iret
jo
lea
push
cmp
xor
icebp
fmul
jbe
dec
inc
into
ins
ficom
leave
xor
test
ret
adc
out
(bad)
jmp
sbb
not
adc
inc
sub
shl
movs
enter
xchg
jb
ret
mov
ins
adc
test
into
and
lahf
mov
cmp
mul
call
push
cld
adc
pop
xor
fld
aas
jecxz
inc
ret
repz
xchg
mov
int
push
rcl
stos
jne
sub
aam
pop
repz
test
jle
int3
sbb
in
clc
mov
call
cmp
ficomp
(bad)
cli
jg
into
iret
xchg
xlat
cmp
movs
gs
xchg
xor
mov
cmps
xor
inc
mov
test
dec
mov
dec
xchg
repnz
jge
cdq
push
hlt
push
test
cmp
aad
das
iret
lods
jae
sub
jp
scas
mov
xchg
adc
mov
mov
inc
push
(bad)
jmp
jnp
int
jecxz
mov
mov
inc
lds
and
inc
push
fadd
ficom
leave
fmul
cs
push
sbb
js
and
or
inc
arpl
mov
aad
mov
sub
retf
rcl
test
stos
adc
imul
cli
cmp
lods
out
or
out
sbb
sbb
mov
arpl
mov
push
mov
mov
jne
pop
xor
xor
push
fdiv
dec
xor
mov
imul
pop
movs
jae
sub
jnp
addr16
mov
pop
adc
or
rcl
push
mov
es
push
addr16
cmps
mov
dec
hlt
mul
push
repz
aad
xchg
push
in
cmp
popf
mov
loope
jg
mov
jb
sub
lods
ds
es
call
pop
pusha
cmc
js
push
push
iret
mov
pop
adc
imul
mov
ret
cmp
inc
adc
cmp
xlat
sahf
(bad)
call
fs
fsub
sbb
movs
in
pusha
xor
sub
sbb
retf
ins
xor
dec
fdiv
into
sub
sub
dec
jo
clc
push
push
les
cmp
sbb
addr16
xor
ins
sbb
scas
sub
mov
aad
stos
pop
jle
out
pop
stos
lahf
sahf
leave
push
and
mov
dec
imul
(bad)
stc
sbb
aas
jo
cmps
push
dec
or
cli
ret
stc
(bad)
scas
addr16
inc
iret
xchg
stos
push
jecxz
test
mov
mov
cmps
cwde
imul
cld
jo
lds
retf
(bad)
sub
rol
sbb
fistp
fisubr
sbb
push
out
lds
and
jnp
ss
inc
mov
idiv
mov
or
les
dec
popa
and
inc
adc
add
pop
and
movs
push
xchg
aas
mov
inc
lea
mov
aas
mov
dec
sbb
xchg
and
ret
out
push
repnz
ins
(bad)
out
xchg
(bad)
shr
sti
jle
push
add
popa
pop
std
inc
push
push
js
cli
repz
add
dec
mov
out
push
mov
cmps
mov
add
int3
sub
inc
xor
sub
adc
mov
push
pop
mov
fs
pusha
inc
mov
mov
mov
adc
js
xor
mov
hlt
fs
dec
test
(bad)
pop
retf
pop
lea
pop
in
scas
xor
add
in
jle
xor
xchg
pop
push
mov
mov
jge
push
test
mov
stos
jae
cmp
(bad)
leave
push
int3
pop
(bad)
gs
xor
ds
imul
fdivp
fnsave
xchg
pop
push
adc
and
loope
adc
adc
rcl
outs
retf
(bad)
push
loope
out
pop
mov
or
ficomp
out
adc
cmps
adc
jb
les
lods
xlat
test
inc
out
dec
mov
push
je
jle
xchg
enter
xchg
out
je
out
sbb
add
fnop
jp
pop
inc
neg
push
nop
out
leave
or
push
jb
fwait
or
mov
mov
or
add
and
sbb
mov
cmp
and
inc
fisttp
mov
imul
dec
and
jl
fisubr
retf
cwde
push
rcl
fld
or
push
adc
or
sub
lds
cwde
mov
wbinvd
mov
sbb
jmp
je
jecxz
pop
sub
out
mov
in
mov
jnp
and
ins
ja
lods
xchg
mov
dec
push
xor
push
mov
out
movs
dec
inc
cmp
mov
call
dec
fstp
sbb
mov
popa
jne
sbb
fistp
push
icebp
dec
stos
ins
and
addr16
lea
push
mov
push
and
adc
xchg
mov
jg
lods
inc
cmp
push
push
icebp
mov
call
das
cmps
mov
jmp
push
jnp
out
lahf
cmc
mov
cmp
aaa
mov
jle
popa
push
pop
in
call
ins
arpl
push
sti
movs
mov
fwait
cmps
mov
dec
pop
pop
cwde
xlat
lods
in
fdivr
fstp
(bad)
icebp
mov
pop
ja
mov
sub
and
repnz
adc
mov
and
int
mov
aaa
je
or
shl
jg
sub
outs
stos
adc
cdq
je
sub
shr
ja
cmp
arpl
pop
(bad)
jno
mov
xlat
rcr
out
dec
cmp
fisttp
fadd
aaa
icebp
sub
jmp
xchg
test
call
jl
mov
pushf
lods
dec
push
imul
inc
fnsave
add
stos
adc
mov
movs
enter
lock
cld
mov
push
sub
stos
imul
rcr
push
adc
mov
(bad)
outs
cmc
xchg
dec
outs
call
cmp
scas
mov
cwde
rol
clc
lods
hlt
lock
pop
and
jno
cmp
adc
(bad)
mov
in
mov
sub
sbb
push
iret
cld
repz
inc
rol
xor
sub
push
ja
xchg
add
into
mov
and
xchg
scas
and
xlat
and
shl
shr
sbb
rcr
add
fild
mov
xor
xor
mov
int
sbb
dec
lea
fwait
arpl
out
scas
les
repnz
fdiv
cmp
cld
adc
push
enter
mov
(bad)
(bad)
loop
rsm
inc
popa
jmp
xchg
iret
ficomp
mov
retf
pop
cdq
into
cdq
cs
push
test
push
std
(bad)
lea
popa
add
inc
pushf
and
mov
mov
cwde
jno
iret
hlt
push
mov
adc
xchg
push
cmps
fucomi
mov
xchg
xchg
jmp
daa
imul
and
into
in
or
pop
mov
add
xchg
test
js
outs
sbb
push
mov
lods
test
push
mov
ds
out
jp
jbe
or
lds
push
jnp
fisttp
mov
jae
stos
push
jnp
cmps
lods
in
push
retf
inc
leave
movs
pop
arpl
int3
xor
rdtsc
pop
scas
movs
inc
lock
shl
out
cld
or
cmp
pop
inc
mov
out
jmp
out
out
inc
push
sbb
mov
sbb
cmc
dec
shr
mov
ds
arpl
enter
enter
shr
push
call
push
inc
inc
dec
ins
idiv
and
push
xchg
loop
jbe
mov
and
adc
icebp
(bad)
lods
out
and
add
xor
sub
and
imul
mov
xor
aaa
aaa
int3
dec
sti
pop
dec
(bad)
dec
jmp
inc
mov
cmp
ret
dec
ret
mov
fs
jecxz
idiv
cs
ret
out
ret
test
pushf
and
mov
jle
(bad)
fisttp
cmp
dec
add
pop
inc
xor
mov
and
test
inc
sbb
mov
jecxz
enter
je
rcl
pop
loopne
out
push
and
das
mov
sbb
mov
push
add
pop
scas
adc
push
fsubr
or
lods
shl
iret
daa
aas
adc
lahf
cmp
mov
cmp
mov
(bad)
push
jne
xor
sub
popf
cdq
es
mov
call
pushf
add
cdq
pop
inc
and
test
hlt
cmps
adc
leave
div
rcl
push
mov
fsubr
xor
adc
xor
inc
mov
add
scas
and
dec
out
sub
and
push
iret
outs
fldenv
shl
mov
add
mov
fcomp
sbb
sahf
into
retf
bound
mul
popf
cmp
(bad)
push
into
jne
xlat
push
(bad)
call
loopne
xchg
popa
call
sbb
or
xor
in
dec
ja
bound
in
and
int3
in
inc
inc
mov
pop
sbb
and
sub
dec
std
sbb
or
das
add
mov
je
mov
or
mov
outs
xor
ror
dec
in
mov
push
jo
or
dec
aas
sub
sbb
add
pushf
push
mov
push
xchg
adc
jmp
mov
and
out
shr
xlat
aam
push
fimul
dec
xchg
pop
push
fcom
shl
cmc
and
cli
mov
ds
jmp
xchg
and
dec
(bad)
ret
(bad)
and
dec
xor
punpckhbw
sub
ret
cmps
xor
in
and
mov
fs
retf
add
lock
jnp
sbb
sbb
lods
cld
inc
imul
ins
enter
stos
nop
out
xchg
jae
mov
mov
dec
push
addr16
adc
mov
out
call
xor
dec
scas
cmps
cmp
enter
adc
shl
push
dec
xchg
mov
sub
stos
and
movs
sub
mov
(bad)
dec
retf
and
addr16
shl
rcl
pop
test
mov
jno
ret
push
mov
or
shl
gs
xor
pop
lea
out
call
cli
lea
fsubr
cld
scas
(bad)
cmp
lods
out
sub
fcomp
jge
sub
mov
jne
rol
or
sti
addr16
fwait
out
int
stos
stc
das
mov
js
push
jb
lods
adc
cmp
sbb
mov
imul
sub
stc
jnp
cmp
dec
or
or
sahf
dec
lods
cmp
mov
repz
retf
movs
mul
int3
out
adc
add
fidivr
push
xor
gs
mov
and
popa
in
inc
dec
js
clc
and
lea
mov
ja
push
and
cmp
pop
mov
sub
ss
and
test
sbb
shl
cmc
loope
lock
clc
dec
es
pop
iret
pop
mov
jno
in
out
fld
cmp
clc
sub
clc
adc
add
jns
jl
(bad)
mov
push
retf
int
or
jl
push
adc
gs
mov
mov
cs
test
fmul
jnp
and
pop
pop
aam
sub
daa
jmp
xor
xor
xchg
xor
test
jae
sbb
out
xchg
lods
mov
push
out
push
mov
rcl
sub
push
addr16
(bad)
mov
in
jle
xchg
repz
movs
pop
or
imul
ficom
in
jmp
out
inc
add
fistp
sbb
inc
(bad)
jo
adc
xor
lahf
jbe
ss
xchg
mov
mov
mov
fiadd
or
mov
in
les
sbb
loop
rcr
std
fwait
popa
cmps
cs
mov
pop
pop
jmp
fcom
xchg
rcr
int
cmps
cmps
stos
sbb
popa
or
and
fs
sbb
scas
ret
jmp
data16
push
cdq
cmpxchg
gs
mov
xchg
push
mov
and
addr16
fdiv
pop
int3
ds
jb
and
sub
pop
clc
push
out
mov
mov
xchg
lahf
add
bound
je
ret
jbe
out
cwde
mov
mov
loopne
xchg
jmp
sub
pop
pop
sub
(bad)
mov
repz
imul
xchg
cmp
outs
aaa
ret
pusha
cmc
push
dec
jno
jg
xchg
cmps
pop
xchg
cmp
push
cwde
xchg
or
data16
sbb
and
dec
inc
mov
outs
inc
sub
mov
sub
dec
je
rol
in
ja
pop
mov
es
push
xor
mov
xchg
daa
icebp
mov
inc
xchg
cmp
push
pushf
xchg
mov
sub
js
lahf
cwde
adc
stc
jecxz
aad
les
cmp
xchg
mov
push
jns
loopne
and
xchg
jns
pop
jnp
lahf
and
in
xlat
rcl
adc
push
xor
mov
jp
mov
push
ins
mov
dec
ins
icebp
sub
push
out
repz
or
sbb
xchg
mov
jge
mov
push
test
hlt
xor
pusha
xor
aad
inc
or
jnp
dec
(bad)
cmp
xchg
cmps
scas
cwde
jns
outs
enter
cld
lahf
loop
jno
jge
out
repz
push
sbb
cmp
mov
or
inc
lods
xchg
js
jmp
sbb
dec
sti
fcom
test
mov
pop
xor
push
dec
add
and
pop
cs
mov
aad
pusha
ret
push
jecxz
dec
js
dec
fistp
xchg
test
popa
into
repnz
pop
cmps
loope
pop
rcl
sub
add
push
sbb
stc
adc
jge
movs
or
sub
neg
cmp
out
pop
mov
aam
push
xchg
dec
sub
xor
or
mov
jecxz
lods
mov
jne
movs
mov
cs
fwait
jo
sahf
and
xlat
inc
test
inc
(bad)
mov
push
inc
in
pusha
pop
movs
call
inc
in
pop
mov
fcmovb
push
std
mov
mov
fadd
cmps
lds
in
loope
push
mov
mov
xlat
(bad)
shl
jnp
cdq
lods
out
xor
pop
sbb
sti
xchg
cmp
or
mov
nop
sar
out
dec
mov
xchg
sbb
pop
inc
popa
or
sub
aas
out
ins
or
inc
les
xor
sub
fcmovne
xchg
stos
sbb
dec
pop
inc
or
in
inc
imul
pushf
inc
jmp
loope
xchg
sub
inc
aam
das
stos
mov
nop
mov
push
daa
fcmovnu
xlat
inc
or
scas
jns
xchg
push
jp
aad
icebp
mov
cmp
xlat
lea
dec
stos
xor
(bad)
mov
mov
adc
and
loop
sahf
push
push
xlat
mov
out
in
mov
aam
cmp
out
ss
jb
test
dec
(bad)
gs
dec
out
cmps
pop
fist
or
fs
xchg
mov
cld
adc
sbb
cld
mov
icebp
outs
sti
mov
ss
das
sub
pop
retf
out
rol
inc
dec
jg
stos
jmp
sbb
mov
das
ret
out
ds
lods
jb
jmp
jmp
xchg
mov
xchg
adc
stos
xchg
aam
leave
and
mov
fadd
add
inc
and
call
jle
mov
loop
mov
inc
or
lea
je
sbb
bound
iret
fsubr
xchg
es
xlat
inc
pop
loopne
pop
mov
push
jae
jle
cmps
cld
or
lds
sub
xlat
jbe
dec
test
pop
jbe
loope
pop
mov
jle
add
mov
xchg
jb
cs
into
sbb
rcr
aas
mov
push
cwde
xchg
adc
loop
into
push
inc
rcr
and
mov
push
aam
jb
jmp
and
sbb
mov
ds
ret
bnd
xchg
mov
mov
pop
imul
(bad)
ds
rcl
sbb
arpl
or
mov
shl
(bad)
leave
cwde
shr
xchg
rcr
(bad)
fstp
call
pop
loope
outs
sub
ins
pop
dec
(bad)
sub
fldcw
sbb
mov
mov
stos
mov
int
sti
jle
movs
mov
sub
rep
repz
or
loop
dec
test
loopne
xlat
add
add
inc
cmps
(bad)
popa
mov
xchg
aam
hlt
or
test
movs
fwait
ror
mov
xor
leave
xchg
add
add
cmp
in
pop
cmp
movs
or
xor
mov
(bad)
xlat
ss
(bad)
cmps
movs
dec
jae
scas
add
lods
add
xor
inc
outs
movs
neg
mov
stc
aas
stos
lods
arpl
aam
ss
and
fwait
cdq
movs
out
add
call
sub
add
pop
dec
arpl
cmp
cmp
(bad)
or
fstp
push
xchg
fdivrp
cmp
pushf
cmps
jmp
rcr
sub
add
(bad)
dec
vunpcklps
loop
dec
inc
stos
retf
mov
ds
call
daa
test
fwait
pop
mov
mov
xor
adc
and
iret
(bad)
or
leave
jae
mov
ror
retf
adc
cld
jecxz
clc
aas
push
test
xor
mov
mov
jb
xchg
mov
push
mov
mov
shl
rol
pop
es
ja
pop
mov
adc
xor
mov
addr16
add
xor
outs
test
bnd
fsub
sub
lock
jp
xchg
inc
test
xlat
fs
jg
jg
movs
int3
popa
dec
in
aad
or
cmp
mov
fwait
shr
xchg
fst
or
cmp
jl
popa
push
mov
xor
sbb
sbb
push
add
and
sbb
gs
fidivr
retf
pop
stos
inc
cmp
daa
sbb
stc
push
sub
ds
add
xchg
in
int3
inc
cmp
lock
sub
lea
out
and
adc
mov
fwait
cs
cmp
jno
sub
jmp
add
in
or
pop
(bad)
xor
jbe
repnz
cs
or
push
test
sbb
push
inc
(bad)
scas
clc
cmc
sbb
dec
in
out
call
inc
sar
(bad)
retf
sbb
das
into
hlt
pop
push
sub
inc
or
add
add
retf
test
je
mov
ins
ss
cdq
cmp
pop
sbb
(bad)
lock
xchg
ficom
add
scas
fisub
inc
xchg
and
push
push
imul
out
and
jno
jnp
add
jecxz
dec
shr
add
repnz
push
psadbw
shl
shl
pop
das
lods
fisub
pop
push
sahf
ret
cwde
iret
pushf
push
pop
xor
test
mov
(bad)
out
dec
dec
cmp
xor
and
pop
cmp
push
aad
adc
mov
cmp
mov
jnp
inc
jmp
ds
pop
xchg
adc
push
cmp
xchg
leave
push
or
sub
sub
jb
add
rep
(bad)
rcl
popa
sti
dec
sar
mov
xor
push
adc
popa
fst
repz
and
std
fdivrp
es
repnz
int
(bad)
ins
and
shl
pop
jp
cs
push
jmp
inc
xchg
arpl
mov
out
enter
call
mov
fild
push
hlt
mov
xor
or
push
push
shl
rol
inc
adc
and
outs
mov
pop
push
out
sub
outs
push
loopne
std
sbb
sub
call
js
stc
jle
jecxz
mov
add
int
inc
cmps
adc
cs
lahf
enter
mov
pop
xchg
ds
adc
cmp
inc
mov
xchg
jnp
push
cmp
ficomp
sub
mov
push
push
sbb
cmp
icebp
in
fs
cmp
ins
sti
in
jge
jb
test
enter
iret
in
repnz
in
inc
int3
ins
push
jle
xchg
inc
jo
lahf
fiadd
push
dec
lods
pmuludq
dec
mov
fild
retf
stos
scas
jmp
pushf
nop
jb
pushf
inc
or
push
sub
scas
shl
bound
sbb
add
test
rcr
or
rcr
pusha
inc
xchg
aad
mov
mov
inc
push
inc
cmp
into
sar
push
xchg
dec
inc
inc
ud0
jmp
inc
je
ffree
and
lock
inc
xchg
xchg
mov
pusha
mov
ins
inc
and
add
and
adc
outs
jnp
movs
pop
fs
or
lods
sub
inc
jp
mov
and
lods
inc
mov
lods
jmp
out
mov
es
jecxz
pop
movs
push
mov
pushf
test
dec
arpl
jmp
fisttp
adc
adc
loopne
sub
pop
jno
fstp
add
adc
pop
pop
dec
xchg
ficom
out
sbb
retf
(bad)
push
sub
push
retf
inc
xchg
cs
jne
imul
adc
mov
push
jnp
and
sbb
mov
cmps
pop
mov
imul
out
fcom
xchg
hlt
test
pop
sbb
(bad)
cmp
int3
outs
aas
push
ins
popa
pop
sti
pushf
xchg
test
and
jecxz
popf
mov
sbb
xchg
add
push
sahf
inc
jl
ins
push
mov
das
lods
out
push
lea
mov
cmps
nop
cmps
jmp
xchg
cmp
push
imul
cwde
jp
xchg
push
or
fldcw
es
adc
dec
lock
ror
cmp
pop
sbb
lea
jb
pushf
pop
push
test
adc
movs
nop
mov
pop
sbb
rcr
jb
add
pop
sahf
shl
jg
hlt
mov
inc
js
xor
fldcw
push
outs
aad
xchg
add
cli
stos
cmp
or
(bad)
daa
pusha
adc
cmp
mov
lds
xchg
iret
and
sub
mov
clc
dec
cmp
push
(bad)
mov
inc
movs
clc
std
inc
cmp
neg
cmp
sub
add
mov
aad
mov
cmp
outs
sub
jns
pushf
popa
mov
popf
call
add
bound
sub
xor
in
stos
push
ret
sbb
sub
hlt
mov
ja
dec
push
cmp
inc
sub
add
(bad)
push
ret
fdivr
inc
pop
call
scas
(bad)
fild
jecxz
jmp
in
and
test
sbb
xor
push
jb
std
lods
or
mov
inc
push
dec
(bad)
test
dec
and
in
or
out
imul
xchg
data16
mov
push
push
rol
xor
jmp
test
xchg
popa
fsubr
loope
add
(bad)
int3
jge
aam
test
mov
push
test
not
pop
pop
jns
ss
xor
dec
pop
and
push
pusha
es
sub
add
mov
les
xor
add
mov
mov
call
sbb
sbb
inc
add
push
add
inc
sub
movs
sub
sub
and
nop
sbb
fiadd
cmp
punpckhdq
inc
jno
push
dec
fnstcw
xchg
xchg
pushf
imul
sbb
cld
lea
(bad)
jbe
call
cmc
fsubr
push
lahf
popa
into
sub
mov
cwde
popa
pop
loopne
retf
retf
fs
mov
loopne
inc
or
pop
popa
xchg
popa
movs
fnstcw
dec
or
out
fild
cwde
pop
mov
xor
xor
cmc
sti
out
div
leave
not
pop
mov
pop
jp
add
pop
xor
cmp
lods
repnz
jge
cmps
repnz
sub
push
xor
pop
xchg
pushf
fwait
xchg
push
sbb
mov
imul
ja
sub
jbe
and
jge
fdivr
frstor
fstp
cli
leave
aad
popa
pop
sbb
mov
push
cmp
imul
test
shr
push
push
ins
ins
je
fbld
mov
call
push
stos
es
or
push
adc
cld
pop
jns
xchg
mov
cmps
pusha
ret
cmp
mov
sahf
adc
add
xor
sbb
pusha
mov
out
mov
addr16
icebp
out
lds
aaa
jns
inc
jne
out
xor
push
(bad)
sbb
dec
mov
mov
shl
addr16
and
mov
ficomp
xchg
in
xlat
xlat
cdq
or
adc
cmp
xchg
fisubr
ret
into
bound
movs
popf
push
lahf
ins
and
outs
(bad)
hlt
jbe
popa
mov
add
cs
icebp
test
push
imul
inc
icebp
cmp
inc
adc
or
xchg
scas
mov
data16
sub
(bad)
mov
outs
push
addr16
inc
into
and
cmps
cwde
out
in
mov
cmps
and
clc
xchg
das
out
icebp
mov
xchg
pop
fnsave
mov
adc
or
ret
outs
lods
mov
lods
xchg
js
mov
adc
dec
dec
into
cdq
outs
mov
sbb
jmp
push
dec
imul
push
jmp
loop
test
and
std
in
or
dec
mov
scas
dec
or
add
dec
lahf
push
push
aam
(bad)
out
xchg
dec
in
jle
loope
or
(bad)
cmc
mov
call
and
fwait
sub
out
test
test
div
mov
lahf
push
fsubr
mov
or
jo
adc
pop
and
lock
sbb
or
ins
mov
jns
jno
movs
shr
(bad)
out
push
nop
push
clc
xor
repnz
jle
mov
movs
push
call
imul
cdq
pusha
addr16
movs
xchg
cmps
xor
jns
fsub
(bad)
or
add
cmps
jno
jnp
data16
retf
push
mov
dec
or
loopne
xlat
paddb
push
fstp
cdq
adc
retf
xchg
cmp
xchg
dec
inc
xor
sub
xor
out
mov
or
mov
jbe
retf
fld
pop
rcr
repnz
iret
mov
jmp
xchg
cmp
ins
and
das
and
daa
shr
rcl
push
sbb
and
add
arpl
add
retf
dec
cwde
cmp
pop
repz
cli
fs
ss
aas
stc
adc
(bad)
xor
xchg
sahf
sbb
dec
pusha
test
ins
das
loope
inc
ins
adc
sub
push
fwait
push
in
clc
(bad)
mov
pop
xor
inc
jns
in
test
sub
or
cmp
xchg
(bad)
sbb
cmp
dec
sub
test
imul
test
push
lea
dec
sbb
jmp
pop
cs
jle
inc
mov
inc
sahf
int
add
dec
jp
out
jmp
sti
fiadd
std
push
fsubr
scas
cmp
or
or
dec
stos
xlat
stc
shl
and
retf
fldenv
xor
(bad)
mov
inc
add
push
or
sub
daa
test
ss
mov
nop
nop
mov
xor
popf
(bad)
fist
out
jae
cdq
xchg
adc
cmp
movs
jb
push
repnz
add
icebp
jnp
sbb
fadd
pop
xchg
add
es
repz
or
adc
inc
call
ror
add
je
jo
mov
jmp
scas
push
jbe
xchg
sub
adc
or
sub
jnp
mov
adc
xor
ds
repz
ins
inc
xchg
pop
bound
mov
pop
adc
sub
sub
mov
out
xor
xor
cmp
imul
imul
mov
lock
pusha
ds
push
mov
dec
lahf
aaa
sahf
and
retf
sub
into
xchg
ins
call
popa
inc
dec
adc
test
mov
(bad)
das
or
and
pop
jp
xlat
fisub
daa
das
jecxz
ins
mov
push
push
pop
pop
pushf
mov
mov
xor
add
push
imul
leave
jl
inc
jnp
inc
push
mov
add
aad
mov
sahf
scas
mov
jecxz
loop
fdivr
inc
je
xchg
dec
mov
out
in
rcr
ret
mov
sbb
repnz
jno
dec
test
pop
add
ja
mov
jnp
pop
push
cmp
out
dec
icebp
adc
icebp
leave
fwait
out
js
push
xchg
sbb
arpl
xlat
mov
xor
cdq
ds
ret
lds
xchg
adc
add
push
add
movs
outs
enter
leave
fstp
adc
imul
mov
or
and
loop
lods
call
xor
(bad)
rol
xor
sbb
or
int
xor
loopne
sub
push
ror
cmp
push
xchg
into
repz
jecxz
push
divps
cmp
mov
add
inc
cmps
popa
xor
into
mov
ret
add
inc
cmp
sar
sbb
movs
arpl
les
add
stos
cmp
mov
jo
lds
inc
imul
push
out
dec
inc
add
push
or
movs
ja
outs
aad
xchg
xor
das
les
add
dec
mov
adc
pop
js
and
int3
push
push
xchg
add
sub
push
aaa
push
xor
xchg
push
shl
(bad)
loop
mov
cdq
push
mov
js
sub
mov
dec
or
cli
mov
(bad)
sub
jns
scas
lahf
retf
and
movmskps
(bad)
push
mov
mov
jl
cmp
fild
xor
call
sbb
(bad)
mov
or
jae
push
arpl
pusha
mov
pop
inc
mov
cli
nop
xchg
ja
test
xor
(bad)
xchg
xor
int3
dec
push
repnz
ret
jle
cmp
mov
adc
fnstcw
test
jl
sub
cwde
movs
cdq
jl
jnp
adc
loopne
repnz
mov
mov
mov
xchg
(bad)
test
cld
stos
cld
push
cmp
loopne
xchg
popa
call
aas
(bad)
addr16
sub
(bad)
shl
mov
in
punpckhbw
bound
add
add
jecxz
ret
in
jns
xor
fadd
ins
aas
dec
retf
(bad)
jo
repnz
jp
xor
pop
push
mov
bound
cs
xor
pop
jmp
and
aam
pop
lods
fcom
add
cmps
or
scas
mov
pop
lock
nop
sub
xchg
cmp
mov
sbb
cwde
stc
imul
push
sahf
in
jbe
add
add
cmp
adc
mov
out
imul
idiv
cmp
add
pop
add
mov
sbb
cdq
retf
pop
inc
pop
mov
mov
dec
push
push
push
add
stos
cmps
sbb
dec
sbb
push
push
in
rcl
movs
ficomp
pop
push
aas
push
pusha
push
mov
jns
mov
inc
mov
pushf
sar
pop
xchg
ins
jmp
sub
sbb
jmp
out
shl
xor
and
daa
add
or
xchg
sbb
mov
les
cmps
in
push
inc
mov
imul
jns
dec
aaa
int
or
rol
cmp
into
icebp
pop
mov
stos
adc
leave
fisttp
xor
pop
pushf
ss
and
test
and
sub
(bad)
sbb
das
xlat
push
jb
test
fisubr
sbb
test
jp
cmp
fimul
push
jmp
push
popf
jl
dec
fnstsw
dec
nop
inc
push
inc
adc
imul
push
add
sub
inc
in
test
fiadd
and
fs
test
xor
or
adc
xor
stc
cmc
xchg
add
add
(bad)
pop
jne
jl
(bad)
(bad)
xchg
inc
std
fld
les
shr
ja
rcr
ja
jmp
jns
xor
in
in
xor
push
jecxz
in
xchg
xor
cmp
and
stc
rcr
(bad)
xlat
mov
sub
xchg
jno
mov
adc
test
push
cwde
mov
jmp
mov
inc
adc
popf
mov
repz
pusha
mov
shl
adc
mov
and
and
lods
xlat
imul
aam
adc
pop
mov
fmul
adc
inc
ret
push
cld
nop
mov
or
jnp
jmp
sub
add
sbb
add
ficom
mov
xor
clc
call
mov
and
pop
xchg
ret
pop
es
mov
pop
ja
dec
push
push
jmp
push
inc
shl
push
or
dec
out
bound
mov
pushf
and
cdq
dec
popf
cdq
fwait
(bad)
dec
push
gs
lock
xchg
push
test
or
in
ficomp
or
or
mov
push
push
or
mov
mov
cwde
pop
pop
loopne
stos
je
retf
or
inc
vmaxpd
pop
daa
pusha
mov
pop
nop
cmp
adc
dec
or
cmc
retf
push
mov
inc
and
mov
sahf
data16
(bad)
aam
stc
mov
setno
cmp
popf
stos
lock
ins
and
cmp
ds
test
inc
stos
mov
out
jno
pop
nop
mov
or
cmp
and
std
dec
in
mov
mov
mov
pop
int3
test
push
cmps
jge
outs
cmp
cmp
(bad)
push
stos
add
inc
mov
xor
push
cmps
sub
ss
test
pop
(bad)
retf
mov
sub
sub
xchg
xchg
adc
imul
pusha
mov
gs
repnz
xchg
sub
xchg
push
adc
mov
jp
out
add
jle
mov
aaa
daa
pop
mul
neg
fwait
mov
aas
dec
dec
retf
pop
add
rcr
pmulhuw
cmp
ins
daa
mov
and
mov
push
outs
lods
cmp
and
lds
add
cmps
jg
push
mov
cs
mov
or
out
push
fsub
les
pushf
push
and
cmp
pop
sub
inc
mov
aam
(bad)
inc
jns
xor
push
(bad)
mul
cmp
jmp
jne
imul
lds
pop
mov
sub
loope
mov
hlt
mov
imul
adc
clc
into
sub
ret
xchg
cmp
and
add
jnp
pusha
mov
aad
iret
je
pop
ss
push
adc
jecxz
adc
adc
pop
imul
push
mov
call
aaa
pop
add
add
call
mov
fwait
movs
adc
fwait
div
push
frstor
mov
in
paddw
push
in
leave
ror
mov
shl
(bad)
imul
lock
in
xchg
or
es
jns
ret
sbb
neg
jae
dec
add
icebp
adc
add
loope
sar
in
call
(bad)
retf
mov
sub
add
call
push
jle
addr16
pusha
jle
scas
mov
cli
sub
jecxz
xchg
iret
stc
idiv
ds
adc
lods
jmp
push
ins
rcl
test
bound
es
cwde
jmp
movs
sub
jmp
push
sbb
scas
cdq
cmps
stos
adc
stos
sar
leave
sbb
dec
(bad)
out
sbb
inc
or
xor
repnz
push
mov
ss
fsubr
and
cmps
sub
xchg
xchg
cmp
xor
arpl
mov
inc
cmp
cmp
inc
mov
repz
jo
mov
xor
test
enter
xor
scas
int
cmp
jecxz
push
xchg
or
fstp
fild
sub
test
dec
xchg
xchg
or
in
sbb
outs
sbb
pop
cmp
cwde
xchg
inc
lods
add
inc
test
dec
stos
push
cmp
lods
repnz
(bad)
fsub
mov
cwde
adc
ror
xchg
lods
xchg
jne
mov
dec
pusha
push
shr
and
or
xchg
je
es
js
retf
and
jnp
cmp
adc
stos
test
push
cdq
and
xchg
xchg
sub
fwait
sub
lea
std
inc
dec
xchg
repz
mov
lahf
inc
pop
xchg
frstor
or
test
and
test
in
sbb
push
and
sbb
sti
or
push
add
or
icebp
lds
fild
mov
push
movs
cmps
ins
(bad)
aas
sbb
inc
(bad)
test
cmp
stos
ret
sbb
and
xchg
icebp
cdq
mov
jmp
movs
inc
(bad)
std
sbb
mov
push
mov
clc
mov
cmp
dec
jl
dec
leave
mov
(bad)
push
cmps
call
cmp
mov
popa
loopne
pop
sbb
xchg
daa
fdivp
xchg
jns
jg
jmp
dec
popa
add
sub
das
cmp
sar
shl
mov
xor
inc
into
xor
fsubr
aas
ins
inc
ss
sbb
lahf
leave
mov
retf
adc
mov
fisubr
mov
mov
ins
jecxz
jmp
std
mov
fidivr
nop
lahf
test
jne
xchg
mov
inc
test
je
jmp
enter
mov
data16
dec
rol
inc
lods
add
out
ficomp
or
jp
xchg
mov
outs
(bad)
cld
data16
loopne
sbb
xor
dec
out
push
cmp
lds
sahf
jge
xchg
xor
sub
fdiv
and
xor
cmp
cmp
pop
(bad)
(bad)
div
jns
cmp
mov
sar
je
pop
xor
xchg
push
retf
xor
mov
lds
ficom
mov
sar
jmp
in
ds
pop
mov
in
call
pop
push
pusha
jmp
xor
dec
cmp
jno
lock
xor
sar
loopne
call
fwait
lods
push
js
ja
mov
xlat
add
stos
jo
loop
stos
inc
bswap
lock
mov
dec
push
inc
std
shr
scas
adc
loopne
xor
shl
imul
movs
push
retf
add
mov
test
rol
push
icebp
call
pop
jl
sbb
mov
jb
or
mov
popf
std
out
sahf
mov
aam
mul
movs
aas
jne
or
mov
mov
xchg
movs
iret
pop
jg
aas
loope
mov
cwde
inc
lock
in
repz
stos
xor
retf
fist
dec
xor
cmp
mov
mov
mov
push
(bad)
stos
xor
mov
mov
dec
sti
out
adc
adc
mov
xchg
shl
xchg
xchg
jnp
jne
repnz
daa
jo
pushf
shl
(bad)
xchg
stos
mul
pop
(bad)
xor
fwait
ins
push
lods
push
(bad)
jmp
inc
in
call
nop
inc
mov
cmp
sub
mov
or
xchg
cdq
push
outs
shl
or
aam
cmc
dec
cld
mov
rcr
scas
test
fs
sub
jle
out
push
sbb
leave
adc
cmp
jbe
mov
ror
xchg
cmps
aaa
popa
(bad)
clc
es
adc
jne
xchg
fnstcw
stc
dec
shl
into
lahf
call
pushf
adc
test
pop
lods
fisub
jp
sub
xchg
loopne
push
cmp
daa
aas
mov
push
(bad)
addr16
xchg
push
into
retf
fwait
les
arpl
mov
cmp
xor
stos
mov
add
mov
sub
xlat
and
scas
(bad)
in
fild
mov
mov
mov
sub
xchg
push
mov
prefetcht0
inc
lock
xchg
aam
es
mov
lds
pop
adc
mov
and
cmc
shr
sti
lock
xor
mov
leave
adc
popf
pop
(bad)
loope
inc
mov
lock
dec
cwde
sahf
jl
sub
dec
pop
xchg
xchg
mov
into
shr
and
xchg
mov
mov
push
repnz
hlt
xor
test
mov
mov
mov
cmp
bound
mov
cmp
xor
xor
mov
pop
fistp
adc
jbe
mov
push
mov
aaa
cwde
pop
loope
addr16
mov
mov
push
popf
in
push
test
daa
data16
in
test
dec
ret
sub
mov
data16
int3
mov
daa
inc
mov
movs
scas
fsub
call
mov
mov
sbb
jmp
jl
cmps
data16
and
(bad)
ror
pop
sti
gs
fsub
sub
push
mov
sbb
jno
mov
pop
fdecstp
sar
cdq
pop
sbb
push
(bad)
sahf
sbb
pop
repnz
in
retf
dec
fwait
dec
lods
sub
ret
xchg
je
ret
shl
jae
dec
jg
xor
ret
mov
jnp
(bad)
retf
xor
fwait
push
xor
sbb
iret
das
test
jb
ret
xchg
imul
xchg
dec
outs
jne
repnz
xor
jbe
jecxz
fcom
add
dec
outs
dec
div
mov
jp
cmp
adc
cmp
push
cmp
pusha
push
push
aam
sbb
shr
mov
sub
cmps
inc
call
adc
push
jge
retf
scas
xor
xchg
mov
xchg
mov
pop
(bad)
std
mov
stc
add
push
out
pushf
gs
scas
xchg
outs
scas
movs
ds
cmp
xor
and
sti
fld
jns
sub
popa
dec
retf
inc
nop
fiadd
adc
add
outs
rcl
jmp
data16
shl
push
xchg
test
jbe
rol
pop
jno
daa
es
dec
push
cmps
mov
mov
retw
or
mov
out
push
push
or
aas
xchg
iret
dec
jb
ret
lock
call
jmp
scas
inc
add
xchg
jno
daa
cmp
in
aad
push
mov
movs
fstp
or
xor
xchg
xor
outs
push
call
repnz
mov
xchg
les
mov
cmp
mov
jmp
jns
ds
jne
popa
and
and
jbe
xchg
pop
bound
pop
aam
and
xchg
out
aad
pop
push
cmps
cld
mov
add
int3
push
addr16
push
dec
ins
es
push
fisttp
aaa
xlat
cmps
adc
pop
(bad)
and
or
or
xchg
jmp
xor
arpl
cmc
push
bound
(bad)
sbb
dec
imul
mov
inc
cli
mov
or
mov
repnz
inc
daa
sub
or
inc
je
or
idiv
ins
(bad)
add
(bad)
mov
shl
fbstp
jl
je
push
pop
sub
pushf
retf
xor
mov
push
ret
ret
sub
outs
es
cmps
fisttp
or
mov
mov
xor
mov
and
push
pop
int
out
dec
xchg
mov
clc
mov
loope
inc
in
nop
xchg
(bad)
pop
mov
cmp
nop
inc
mov
and
cdq
mov
cmc
and
or
aaa
mov
mov
test
sub
mov
(bad)
adc
xor
(bad)
cmp
jl
push
xchg
xor
pop
daa
adc
xor
cmp
stos
pop
pop
(bad)
clc
in
sbb
hlt
jecxz
and
lahf
stc
jb
aam
movs
mov
adc
adc
mov
sbb
shl
xchg
rcl
in
xor
and
fneni(8087
pop
iret
and
mov
inc
mov
dec
scas
jg
arpl
cmp
scas
lea
push
mov
xor
imul
push
sbb
mov
into
xor
inc
jb
sub
daa
shl
pop
add
in
mov
jmp
imul
aaa
sbb
jecxz
rcr
imul
movs
xor
vandps
push
xchg
mov
cmps
mov
and
(bad)
mov
scas
xlat
retf
dec
(bad)
dec
ret
out
add
iret
mov
mov
sub
(bad)
aad
xor
inc
jecxz
jmp
dec
mov
fild
out
push
mov
pop
add
retf
xlat
rcl
xchg
push
ds
lock
mov
and
jle
sbb
dec
jns
aaa
add
aas
xlat
packsswb
xchg
call
xor
jmp
(bad)
mov
lds
ds
jle
je
fcom
sub
jb
sub
mov
pop
add
test
or
pushf
(bad)
popa
pusha
fild
sub
sub
jnp
sbb
fcom
mov
inc
xchg
mov
(bad)
fidivr
dec
xor
push
sbb
cmps
and
ins
dec
leave
xor
(bad)
je
cwde
jmp
jbe
aaa
jmp
push
stc
clc
sbb
popf
sbb
pushf
pop
sbb
data16
stos
xor
push
gs
mov
inc
gs
into
and
es
sbb
cmp
mov
sbb
inc
xor
mov
popa
aas
scas
dec
xchg
xchg
xlat
clc
ret
xchg
push
xchg
mov
lods
push
fs
mov
and
es
push
push
sbb
jmp
(bad)
jo
(bad)
fnstsw
mov
fcmovbe
jp
jo
jb
mov
mov
pop
inc
shl
lea
(bad)
sub
or
mov
lea
lds
dec
icebp
sub
pop
mov
ss
sbb
add
dec
aaa
add
or
ins
xor
mov
jns
(bad)
xchg
sub
pusha
mov
xchg
jg
push
pop
xchg
push
out
xchg
mov
mov
and
js
adc
daa
nop
call
push
repnz
std
out
cmp
daa
loope
xor
pop
retf
fwait
push
or
push
xor
mov
mov
and
adc
sub
out
sub
mov
fistp
mov
call
push
jno
xchg
xchg
sbb
cmp
adc
sbb
cdq
push
mov
(bad)
adc
call
outs
fisttp
js
iret
cmc
sbb
call
sahf
mov
mov
lods
dec
pop
mov
(bad)
cmps
ins
out
rcl
and
bound
call
div
mov
mov
sbb
jno
repz
add
inc
push
dec
cmps
mov
mov
test
dec
pop
fwait
ins
inc
push
rol
pop
cmp
push
call
sbb
cmp
or
push
gs
or
mov
jo
outs
movs
mov
popa
xor
mov
into
not
rol
add
(bad)
cld
cmp
or
push
iret
loopne
call
push
frstor
retf
mov
mov
mov
call
fidiv
jp
sub
add
cmps
fcom
retf
lds
mov
dec
(bad)
aas
dec
movs
xor
jg
pop
add
add
and
fld
adc
dec
inc
in
das
and
into
scas
mov
dec
push
adc
int
(bad)
test
in
dec
mov
cli
sub
pop
icebp
in
sar
test
jmp
jle
test
mov
jo
push
or
sti
jl
pop
test
dec
ins
adc
and
outs
adc
pop
pop
push
inc
int3
cs
mov
cmps
js
mov
or
mov
jp
mov
cmp
push
dec
fwait
leave
add
xchg
and
jb
mov
mov
loop
push
mov
scas
sbb
pop
adc
mov
sub
mov
rol
mov
cmp
and
mov
mov
scas
sbb
push
and
ja
bound
mov
pop
xchg
mov
mov
mov
movs
test
dec
ja
xchg
push
sub
xor
out
(bad)
add
mul
fistp
inc
or
push
addr16
fisubr
cmp
inc
xchg
(bad)
(bad)
mov
test
or
pop
xlat
icebp
xchg
stos
jo
stc
not
pop
mov
mov
adc
bound
addr16
daa
sar
push
add
or
xor
mov
sbb
sbb
dec
nop
loope
mov
cmp
cmps
sub
cmps
std
pop
loope
rcr
jnp
jno
aam
jge
jmp
jg
pop
aaa
out
pushf
fwait
xchg
dec
xchg
and
lahf
dec
mov
in
pandn
sub
cmc
les
xchg
jle
adc
fwait
sub
xor
idiv
inc
clc
ret
test
inc
dec
call
es
loopne
xchg
stos
popa
loope
dec
dec
mov
adc
ss
push
ja
aaa
scas
out
mov
ja
cmps
sbb
pop
jmp
add
xchg
lds
out
inc
sbb
or
pop
test
mov
jne
xchg
mov
das
mov
repz
jmp
iret
push
jbe
repnz
dec
xor
jecxz
lods
xor
movs
or
xchg
(bad)
dec
gs
pop
jb
jne
sbb
jecxz
(bad)
in
imul
adc
shl
mov
in
mov
cdq
(bad)
gs
inc
cmp
push
enter
mov
or
cmps
push
and
test
(bad)
jmp
sbb
sti
imul
adc
mov
mov
push
push
jns
add
jg
fcomi
test
sbb
clc
xor
jge
push
das
pop
dec
movs
jl
pop
f2xm1
stos
sub
out
in
jae
xchg
push
out
outs
stos
test
lea
jb
cmps
and
xchg
sbb
adc
xchg
jle
mov
jmp
jne
(bad)
inc
mov
push
test
sbb
mov
xchg
add
fs
cmp
xor
shl
cld
cmp
mov
je
out
in
ret
sub
int3
jmp
in
test
scas
lods
int3
push
dec
fild
mov
add
sub
adc
xor
or
gs
add
ficom
es
xor
cmp
push
or
enter
cmp
data16
xor
paddw
and
retf
xchg
pop
gs
sub
inc
aam
mov
sbb
fld
sbb
fisub
test
retf
cwde
popa
in
sub
out
sahf
add
imul
pop
nop
js
loope
mov
js
xchg
inc
cs
es
ss
icebp
or
test
jle
daa
in
test
into
push
loop
xchg
dec
inc
dec
test
fmul
xor
cmps
cs
and
in
add
xchg
jns
fild
pop
mov
out
(bad)
mov
int
in
(bad)
shl
clc
lea
(bad)
out
lods
dec
(bad)
lods
ins
mov
jbe
cmp
pushf
push
dec
sbb
and
sbb
jb
or
mov
stc
jmp
mov
sub
jno
lods
pop
neg
lods
adc
mov
int3
mov
fild
adc
inc
out
pop
push
lods
enter
xchg
ins
ins
jno
rcl
mov
sbb
outs
aam
cmps
mov
loop
fstp
pop
int
test
cli
jl
or
sti
cwde
or
lds
test
adc
adc
sbb
and
jns
cmp
xor
bound
push
mov
mov
mov
in
in
leave
cld
(bad)
sbb
aas
(bad)
xor
sub
mov
push
dec
inc
imul
(bad)
sbb
adc
scas
dec
sub
jns
jns
mov
ins
xor
xor
in
test
pop
mov
mov
imul
outs
das
cmp
cmp
scas
pop
fadd
into
or
mov
mul
not
loopne
or
test
das
mov
nop
jge
add
cld
imul
sub
cmp
cmp
xor
pop
lds
jbe
mov
loope
inc
aaa
(bad)
cdq
in
push
inc
int3
rol
sbb
and
sub
inc
loop
lgs
jbe
sti
je
mov
pop
jecxz
or
enter
ins
sbb
adc
cdq
xchg
xor
cmp
dec
popa
fld
neg
pop
mov
pop
cmp
inc
cli
(bad)
cmp
lods
push
outs
sbb
leave
inc
imul
scas
outs
jmp
bound
iret
(bad)
in
xor
mov
std
das
jge
(bad)
jnp
mov
sar
rcr
adc
dec
ja
xor
push
dec
stos
add
jle
and
inc
addr16
jp
(bad)
je
fcom
les
popa
mov
aad
pop
fwait
push
lahf
and
mov
adc
or
inc
(bad)
rcl
cmp
jae
mov
or
pop
fdivr
jnp
addr16
enter
add
mov
in
scas
int
stc
movs
adc
int3
je
push
adc
jmp
inc
and
push
movs
xor
imul
sbb
int
ds
rcr
add
fwait
movs
fdivr
sub
lahf
push
pop
mov
sub
adc
lahf
and
ret
xchg
or
movs
fild
lea
pop
ret
mov
clc
retf
leave
mov
(bad)
repnz
out
call
cwde
sub
fadd
mov
scas
aad
adc
sub
xor
inc
mov
hlt
icebp
ret
shl
rcl
rcr
sbb
or
clc
(bad)
out
arpl
adc
ja
je
push
and
lds
jbe
mov
movsx
ins
cmps
sub
xor
inc
sub
in
jae
aaa
push
bound
ror
jae
mov
ja
cmp
movs
add
leave
pop
popf
stos
shl
sub
jmp
add
inc
xor
dec
ins
ffreep
ja
mov
retf
in
inc
leave
or
ret
retf
or
dec
leave
sub
data16
into
pop
jl
ins
imul
add
cmp
jae
sbb
hlt
dec
out
jb
inc
iret
fstp
xor
xchg
sahf
aas
mov
shl
jne
mov
cmp
adc
lods
xor
div
les
icebp
mov
jae
dec
push
add
jp
xchg
jns
sub
sbb
adc
scas
jp
imul
xor
test
shr
or
pusha
inc
mov
call
xchg
sbb
ret
and
add
mov
fld
inc
aam
mov
imul
dec
test
inc
jmp
cmps
cmps
pushf
push
outs
outs
mov
lock
mov
dec
sbb
dec
or
cli
cdq
arpl
jmp
cmps
repz
enter
aas
loope
and
in
sysret
call
inc
mov
arpl
push
test
into
inc
cmp
pop
cmps
mov
xchg
retf
sbb
rcr
jecxz
mov
sbb
(bad)
pop
sar
xor
pop
test
jge
pushf
fwait
pusha
stc
(bad)
mov
xor
data16
jp
daa
popf
lods
stos
fs
(bad)
outs
adc
fnsave
or
call
xor
adc
inc
shl
fidiv
outs
fcomip
lds
pop
mov
mov
push
fisubr
cmp
ret
repnz
and
shl
add
and
popf
call
into
mov
pusha
pop
mov
shl
dec
and
into
or
push
push
or
es
dec
inc
add
in
pop
dec
cmc
ret
cmp
cmp
sar
mov
popf
call
pop
(bad)
mov
ret
rcl
push
js
cdq
inc
adc
and
mov
movs
and
je
add
call
jp
mov
aaa
adc
adc
add
inc
sbb
inc
xchg
sbb
push
dec
cmp
push
mov
jns
gs
mov
fmul
cwde
mov
jp
jp
cmp
cmp
or
stos
sbb
adc
cmp
mov
cld
inc
imul
setns
mov
in
popa
push
(bad)
loopne
cmp
movs
nop
(bad)
leave
xchg
jnp
adc
cmp
push
rcr
out
jnp
retf
add
imul
sbb
call
scas
rol
rol
call
add
mov
push
fwait
mov
cmp
call
ret
jne
aad
repnz
xor
sbb
add
dec
cmp
scas
jl
push
push
mov
sub
mov
rol
ja
sub
psrad
jl
cmp
int3
mov
mov
push
inc
push
mov
mov
sbb
call
rcl
hlt
(bad)
repnz
adc
sbb
gs
cmp
or
mov
adc
in
and
jns
mov
stos
push
test
cmps
shr
stc
cmp
aam
fadd
rcl
mov
mov
mov
mov
mov
aas
xchg
jge
iret
repz
mov
push
nop
inc
jbe
xor
mov
(bad)
push
xor
sar
xchg
cmp
or
mov
push
hlt
mov
mov
or
aam
cmps
or
mov
jns
xor
push
sbb
inc
sub
jbe
sub
bound
mov
xor
xchg
xchg
pop
pop
in
adc
leave
movs
lods
push
mov
test
mov
and
popa
mov
push
rol
ins
in
sub
xchg
outs
std
test
mov
lea
ds
cmp
jo
sbb
call
adc
shl
out
jo
in
(bad)
das
fld
loop
in
push
fld
mov
pop
pop
push
mov
pusha
and
(bad)
push
aaa
push
jmp
add
outs
adc
push
add
sbb
fcmove
or
jle
loop
clc
retf
jne
fld
repz
adc
call
and
fmul
and
push
ja
push
inc
(bad)
cli
popa
movs
push
not
lds
mov
inc
repz
loopne
xlat
adc
xor
mov
adc
movs
push
sar
into
cdq
(bad)
mov
rol
inc
pop
cwde
cmp
shl
cmps
lock
rcr
int3
pop
into
sti
pop
imul
xchg
cmp
xchg
adc
jne
fdivr
xchg
adc
jl
out
cmp
out
push
add
nop
fwait
in
jno
nop
mov
in
sub
sub
lock
adc
test
xor
dec
jb
pop
push
iret
mov
shl
or
and
ins
pop
pop
push
pop
mov
push
adc
stc
(bad)
pop
jnp
inc
or
(bad)
mov
int3
jle
ret
mov
(bad)
out
xchg
xchg
fst
mov
mov
push
push
daa
inc
pop
pop
test
popf
popa
fldcw
arpl
inc
pop
call
in
push
js
add
test
test
jne
jg
clc
sbb
mov
gs
pop
aaa
loope
jge
jae
call
fwait
popa
dec
sub
or
push
test
div
ret
dec
es
add
mov
scas
and
mov
inc
daa
dec
sbb
les
push
mov
pop
leave
mov
jmp
in
jmp
xchg
int
(bad)
mov
mov
inc
add
push
sub
adc
fdiv
and
addr16
sub
test
push
rcr
inc
and
push
xchg
lock
cmps
push
sub
jbe
inc
mov
icebp
mov
test
dec
(bad)
dec
in
and
pop
dec
jmp
mov
repnz
fsub
xor
(bad)
iret
repz
(bad)
shr
retf
mov
pop
retf
addr16
xlat
sbb
call
xchg
xor
mov
pop
sar
xor
cmp
xor
sar
sar
add
out
shr
jle
add
and
and
movs
mov
mov
pop
and
mov
out
push
xchg
jmp
adc
jnp
or
call
xor
shl
and
pop
cmp
xchg
inc
xor
dec
adc
sbb
jecxz
popa
cmp
shr
xchg
nop
movs
stc
push
sub
js
jno
adc
xchg
mov
out
fisubr
pop
cmp
nop
dec
into
mov
mov
jno
inc
aas
cld
lahf
pop
add
stos
cmps
inc
jae
dec
push
adc
sub
inc
sub
int3
out
cli
inc
ror
js
in
mov
fcom
adc
lahf
bound
jp
mov
jg
call
call
jge
xchg
shl
out
ficom
mov
cmps
jmp
hlt
(bad)
mov
out
push
in
dec
fbstp
gs
rcr
xchg
sti
mov
dec
or
clc
fdivr
lods
inc
jae
into
jnp
lds
mov
hlt
sar
popa
test
int
pop
das
pop
push
xchg
popf
xchg
cmp
daa
inc
cmp
mov
mov
mov
xor
xor
ficomp
xor
sbb
scas
or
adc
cmp
(bad)
push
jns
fwait
dec
dec
aaa
push
adc
xchg
leave
add
idiv
aam
push
jmp
sub
out
pop
nop
sub
jmp
push
cmp
add
xor
dec
ret
mov
dec
outs
popa
and
fs
cli
imul
mov
loop
(bad)
bnd
or
dec
je
dec
mov
cmp
xchg
xchg
pop
sub
mov
(bad)
and
sub
adc
dec
push
in
and
push
mov
jmp
aaa
sbb
(bad)
cli
ins
loopne
jae
or
dec
iret
inc
sbb
sub
ins
movs
or
mov
xor
xor
dec
push
xchg
mov
or
aaa
test
sar
inc
ins
out
jge
jmp
mov
int3
sbb
jp
dec
les
jmp
das
idiv
mov
int
sbb
jmp
pop
pop
dec
and
pop
out
out
test
loope
or
adc
out
js
push
mov
not
mov
sub
aam
lods
push
imul
jno
popa
test
mov
std
fisttp
aas
adc
xchg
add
sbb
xor
add
je
xor
mov
cmp
xchg
das
dec
mov
dec
imul
movs
(bad)
pop
mov
scas
pop
push
jbe
test
push
loop
mov
sbb
xchg
jae
sahf
pop
retf
test
adc
mov
mov
jnp
lds
hlt
pop
inc
int3
mov
std
add
pop
xchg
cwde
sub
cmp
aaa
or
in
and
push
mov
data16
aad
aas
or
daa
push
xor
sti
cs
aas
or
ja
mov
cwde
pop
aaa
xor
xor
test
mov
lahf
xor
jb
pop
fwait
sahf
jecxz
popa
jae
or
xchg
retf
cmp
movs
and
push
xchg
sar
pop
or
jle
lds
not
movs
es
jge
mov
push
xchg
cmps
mov
stos
xchg
cmps
arpl
cli
push
mov
xor
add
(bad)
les
adc
rol
bnd
pusha
push
enter
mov
fistp
ja
daa
mov
sub
enter
aad
cmp
sbb
mov
adc
fsubrp
jmp
xor
out
xor
arpl
or
aam
dec
out
int3
nop
xor
addr16
inc
sub
into
mul
push
shl
in
or
dec
inc
outs
jl
jg
xlat
lods
sub
add
or
lock
das
mov
(bad)
pop
rol
clc
out
cmc
dec
inc
test
ja
or
repz
push
aad
push
jbe
xchg
(bad)
jmp
adc
and
(bad)
aas
movs
or
int3
mov
or
iret
xor
mov
sti
addr16
mov
jae
pop
fs
ds
mov
sbb
cld
out
call
pop
push
iret
aad
ret
(bad)
cdq
xchg
into
jl
cli
movs
or
push
dec
push
sar
dec
in
mov
in
inc
stos
retf
vrsqrtss
pop
and
js
imul
neg
mov
lods
aas
(bad)
cmp
pop
adc
mov
push
push
push
dec
pop
jmp
pop
in
(bad)
xchg
call
rcr
xor
mov
dec
xchg
cli
xchg
push
out
and
xchg
test
aas
and
or
mov
jg
iret
mov
mov
cmps
pop
bound
test
and
pushf
sbb
imul
cmp
das
mov
mov
pop
mov
mov
fmul
push
call
sti
std
adc
push
pop
(bad)
sub
int
test
push
fs
sub
inc
adc
sub
fisttp
sbb
bound
ins
dec
popf
scas
sbb
out
cwde
(bad)
cmp
sbb
pop
daa
fiadd
xchg
jg
inc
dec
inc
je
test
lock
xchg
mov
mov
xor
pushf
int
pop
fstp
jae
mov
aad
or
pop
shr
movs
and
xchg
ficom
movs
pop
je
xor
retf
jno
(bad)
mov
or
jnp
adc
xchg
sti
outs
loopne
inc
xor
mov
sbb
in
ds
mov
xor
add
sub
(bad)
pop
clc
cmps
cwde
and
(bad)
xchg
mov
int
sbb
push
cmp
nop
mov
outs
lock
scas
sete
or
imul
jmp
sub
xchg
rcl
or
mov
cli
sbb
pop
push
push
scas
popf
dec
xchg
xlat
mov
jmp
ja
sbb
fmul
jg
fistp
jl
loope
mov
jmp
aas
lods
sbb
jbe
or
and
mov
call
ret
cdq
cmps
add
imul
push
into
xor
and
cdq
sbb
in
adc
aas
das
mov
aaa
jno
fldln2
pop
cdq
cmp
xchg
ss
xchg
xchg
dec
sbb
xchg
cmp
mov
ins
popa
aam
dec
outs
adc
xchg
pop
mov
mov
fidiv
push
lea
push
pop
xlat
mov
rol
push
xor
cmps
inc
push
or
cld
mov
out
jns
call
push
retf
sbb
dec
sar
(bad)
ins
push
fs
mov
add
test
inc
push
or
les
sbb
dec
pop
enter
adc
idiv
mov
mov
push
jnp
das
lahf
lea
push
pop
loop
push
push
test
mov
cmp
jmp
dec
stos
cmp
ret
mov
div
mov
xor
mov
les
test
mov
outs
fld
(bad)
shl
push
adc
cli
hlt
fs
jbe
mov
ja
xor
mov
jne
inc
call
(bad)
loopne
movs
cwde
xchg
ret
dec
sbb
dec
shr
in
shl
lahf
inc
sub
mov
push
jle
cmp
sub
(bad)
clc
mov
sub
retf
(bad)
pop
in
inc
ret
mov
das
mov
mov
dec
stos
jo
sti
cmp
cwde
push
repz
jns
call
bound
jae
int3
cwde
pop
xor
loopne
and
cmp
ja
push
in
in
or
out
in
xchg
in
in
lds
mov
xchg
sbb
ds
sbb
scas
hlt
xchg
std
addr16
add
in
je
fst
jne
cmps
adc
mov
pop
push
xchg
add
outs
push
rol
pusha
or
neg
rcr
mov
jl
dec
add
adc
adc
mov
call
imul
imul
imul
sub
sub
cmovne
mov
jg
(bad)
cdq
cmp
(bad)
ins
sbb
mov
retf
add
aam
sahf
(bad)
mov
movs
adc
pop
retf
add
retf
adc
cmp
dec
enter
iret
aam
push
sbb
cmp
lea
lods
lods
das
jmp
pop
out
xchg
dec
pusha
hlt
test
mov
inc
fs
push
imul
mov
dec
popf
repnz
add
and
(bad)
cmp
pop
fstp
push
lgs
mov
(bad)
mov
in
ins
adc
jne
sub
push
int3
pop
dec
ret
pop
in
xor
jmp
ret
and
adc
adc
das
jnp
mov
or
or
test
pop
add
jmp
mov
int
scas
add
data16
jae
jne
sub
dec
cmps
iret
sar
mov
enter
or
and
call
(bad)
imul
hlt
sti
push
enter
push
sub
test
mov
or
inc
stc
ret
push
pop
mov
pop
mov
xor
push
jl
push
xor
xchg
mov
mov
or
cmc
mov
jns
xor
xchg
inc
jae
cmp
fstp
clc
ds
cmp
xchg
push
cmps
adc
inc
ins
and
mov
mov
pushf
mov
xchg
mov
clc
gs
retf
jg
cmp
mov
add
ds
sub
int
inc
push
mov
(bad)
int3
imul
in
sahf
mov
popa
lods
mov
cdq
cmps
or
lea
mov
jo
(bad)
cmps
jp
xchg
mov
mov
cmp
ret
sub
movs
(bad)
outs
add
es
or
add
push
push
adc
add
or
push
sbb
jecxz
inc
loope
or
mov
data16
int
cmp
jb
mov
icebp
fisub
mov
and
ficomp
gs
fist
pop
pop
(bad)
jmp
cmps
jo
or
pop
in
aad
imul
sub
adc
sbb
in
dec
aam
lods
and
push
mov
js
adc
test
call
xor
faddp
or
rcl
mov
add
dec
jl
shr
aas
(bad)
(bad)
or
repz
mov
push
xor
test
cmp
adc
int3
fstp
pop
inc
fnstenv
jg
mov
rcl
into
aad
sar
enter
jno
mov
dec
cmp
test
inc
aad
adc
sub
adc
ja
and
stos
jmp
jle
loope
test
dec
gs
out
jg
or
mov
or
inc
aad
ror
iret
xchg
inc
ss
mov
pusha
dec
ret
das
stc
or
icebp
pop
fistp
push
inc
or
adc
jo
cli
inc
pop
test
out
xchg
mul
outs
sahf
test
sbb
and
repnz
cmps
mov
fldenv
stos
dec
push
je
icebp
stos
popa
ss
add
push
das
aad
pop
movs
call
jmp
xchg
xchg
rcr
das
dec
jg
sbb
mov
int
icebp
pusha
mov
call
pushf
dec
scas
inc
(bad)
sbb
add
ins
inc
fs
imul
lds
fdivr
sbb
repz
popa
and
pop
xlat
(bad)
stc
(bad)
pop
fisubr
mov
mov
cmc
xor
xor
jne
pmulhw
jecxz
cmc
iret
rol
push
ret
and
or
jae
lahf
scas
(bad)
movs
jg
in
stos
call
into
cli
or
enter
call
mov
add
(bad)
pop
lock
xor
iret
and
mov
ss
fadd
sub
out
or
adc
adc
in
(bad)
xor
mov
ins
pop
push
aam
repnz
daa
adc
test
ins
push
xchg
inc
or
shl
inc
and
inc
mov
sub
shl
dec
fild
push
mov
mov
or
(bad)
ins
ins
cmc
cmp
sub
stos
aam
aad
fstp
or
fmul
outs
loopne
ins
sub
dec
add
retf
mov
sbb
mov
cmp
and
push
(bad)
out
imul
jbe
int3
clc
adc
call
adc
xchg
outs
ins
fidivr
mov
(bad)
ins
pop
stos
fdiv
imul
add
xchg
jle
lods
es
div
jl
cmc
dec
sbb
pop
arpl
lods
sub
imul
adc
xchg
aad
cmc
xor
std
popa
push
and
inc
idiv
mov
cld
sbb
and
add
jmp
(bad)
jbe
gs
aam
and
int3
arpl
loope
or
retf
aas
add
in
xor
test
sub
xchg
inc
jle
adc
push
mov
jmp
retf
in
(bad)
cmc
std
ja
cmps
sub
and
jmp
xchg
ret
inc
adc
add
ror
mov
out
into
jge
clc
cmp
inc
dec
jmp
inc
enter
pop
shl
jl
(bad)
mov
and
xor
test
mov
pop
jmp
(bad)
cmps
lods
lock
mov
ja
xchg
mov
test
dec
or
shl
imul
mov
push
rcr
in
pop
mov
or
ret
retf
add
movs
push
cli
jmp
(bad)
movs
sub
dec
fsubr
imul
dec
cwde
jg
adc
es
and
adc
fcomi
retf
mov
scas
push
and
sub
cmp
sti
das
jg
push
inc
push
loop
arpl
mov
xor
mov
mov
sar
lods
or
test
xchg
jb
push
mov
int
xor
fnstcw
and
or
xor
aad
push
sbb
push
fadd
mov
sub
sbb
inc
mov
lods
cmp
inc
lahf
xchg
pop
movs
and
fs
adc
hlt
jo
cwde
outs
xor
mov
test
les
sahf
inc
leave
xchg
hlt
cmp
adc
into
sbb
imul
sbb
repz
pusha
mov
cmps
sub
jg
push
loope
and
push
js
cmp
push
ret
sub
fiadd
push
cmp
in
dec
lods
imul
fld
mov
adc
inc
outs
not
cmp
out
es
(bad)
dec
fld
retf
xchg
addr16
sbb
cmps
inc
out
add
mov
outs
mov
js
and
icebp
cmp
push
out
ret
cmp
sbb
pop
repz
mov
xor
mov
xchg
rol
pop
icebp
jle
cmp
fwait
xor
cmps
icebp
cmp
xchg
jg
jae
lock
(bad)
and
sbb
mov
or
jb
xor
push
(bad)
out
mov
rol
jno
in
dec
push
add
add
out
ins
dec
jo
mov
arpl
test
iret
inc
enter
call
in
in
lock
or
xchg
outs
inc
xchg
jmp
cmps
adc
cmp
(bad)
dec
mov
loopne
push
inc
cmc
push
xor
xor
inc
in
outs
int3
sbb
sbb
dec
rcr
adc
sub
dec
mov
push
pop
jg
outs
lods
pop
dec
or
mov
aam
mov
push
mov
jmp
adc
(bad)
addr16
addr16
fadd
iret
in
jecxz
dec
jecxz
ret
mov
test
and
icebp
mov
test
sub
cwde
cmp
fild
aam
xchg
mov
into
popf
dec
pop
addr16
sahf
pop
out
push
or
inc
dec
popf
push
dec
mov
push
in
pop
scas
into
mov
jle
add
dec
add
mov
or
ja
mov
iret
add
xchg
push
hlt
mov
jp
ret
jae
je
mov
retf
push
pop
(bad)
xor
adc
loope
adc
mov
xchg
adc
nop
retf
push
xor
and
ret
mov
(bad)
xchg
je
mov
dec
mov
aas
and
cmp
cdq
leave
add
lods
ret
pop
mov
outs
sbb
adc
daa
out
sti
sbb
pop
cs
xor
cmp
mov
not
leave
shl
or
mov
sar
or
test
scas
clc
xchg
sbb
xchg
mov
push
shr
daa
push
in
cmp
sbb
shl
shl
fidivr
in
lahf
mov
jecxz
xor
dec
add
out
sti
inc
cmc
push
div
sub
(bad)
jb
xor
jge
ins
stos
adc
jo
enter
push
inc
stos
push
stc
test
mov
stc
pop
repz
mov
retf
pop
mov
dec
in
stos
inc
push
pop
lods
or
push
nop
es
or
xorps
(bad)
xchg
inc
add
jmp
in
hlt
fcomp
sbb
jnp
(bad)
cld
and
aad
test
jp
pop
inc
div
or
data16
enter
stos
(bad)
dec
cwde
call
jno
add
xor
dec
push
rcl
stos
push
les
jle
test
aas
test
aam
test
(bad)
movs
or
pop
jb
mov
adc
cmp
push
push
and
enter
iret
push
add
sub
push
adc
mov
xor
(bad)
jmp
adc
shr
pop
rcl
or
fwait
adc
mov
hlt
xlat
mov
mov
mul
mov
inc
(bad)
xor
call
in
je
retf
and
mov
in
fldenv
cmp
daa
add
ror
test
call
outs
adc
xor
test
add
mov
jmp
push
leave
mov
movs
cmp
ins
in
(bad)
in
mov
ffree
pop
call
pop
fnstenv
das
enter
xadd
jge
sub
(bad)
pop
fs
lods
dec
adc
pushf
cmp
(bad)
call
cmp
pop
nop
lds
pop
call
push
clc
shl
test
push
movs
jmp
into
idiv
push
int3
pop
sahf
stc
ins
imul
push
and
repnz
add
cmp
int
hlt
xor
mov
fdiv
and
nop
loope
push
or
je
mov
jecxz
mov
popa
call
(bad)
cmp
ret
arpl
cmp
fisub
outs
dec
add
pop
xchg
inc
xor
cmp
outs
pop
jge
xchg
cmp
movs
jbe
jl
jecxz
xchg
mov
mov
mov
gs
repz
int
mov
xchg
test
movs
cmc
inc
mov
mov
imul
inc
xor
aas
xchg
dec
outs
retf
leave
cmps
cmp
nop
(bad)
ret
pop
dec
sbb
les
pop
test
inc
inc
dec
fidiv
cs
ss
test
pop
ss
sar
repz
mov
mov
dec
(bad)
and
pop
out
cmp
movs
stos
push
das
xchg
stos
adc
dec
sub
jb
cmp
(bad)
int
jg
leave
gs
pusha
adc
imul
sbb
(bad)
push
sbb
mov
outs
jb
push
and
sub
mov
stc
movs
arpl
dec
mov
jmp
inc
out
inc
retf
cmp
lds
sar
or
or
adc
or
cmp
shr
je
pop
xchg
enter
popf
data16
jle
add
ja
cmovle
xchg
pop
push
sbb
lods
mov
enter
inc
add
adc
sbb
xor
xchg
daa
cmp
mov
cmps
lahf
retf
pop
xchg
out
aas
jns
dec
sti
ja
ins
jb
push
jle
jle
aaa
xchg
mov
mov
xchg
push
std
repnz
aam
sub
push
mov
ins
jge
pop
sub
add
loopne
daa
data16
repz
in
nop
pushf
addr16
xrelease
scas
dec
xchg
mul
retf
arpl
jg
ss
mov
add
(bad)
jl
lock
push
dec
adc
xlat
sbb
(bad)
push
cmp
fdivr
dec
adc
clc
push
inc
test
dec
imul
sub
mov
fwait
push
dec
mov
dec
inc
ins
shl
pop
jge
int3
int
hlt
jg
pop
mov
lahf
or
das
push
je
xor
hlt
data16
mov
arpl
jne
cmp
popa
rol
dec
and
dec
sbb
or
int3
xor
jb
jne
push
movs
inc
gs
pop
inc
icebp
mov
xchg
add
adc
fwait
into
(bad)
jmp
fnstcw
cmp
mov
sub
popa
jmp
ret
test
inc
loope
test
inc
fstp
cld
dec
lock
(bad)
fnstsw
xor
fistp
das
xlat
not
xor
(bad)
and
sbb
pop
call
cmp
outs
cli
sub
xchg
fucomip
jns
cmp
xor
(bad)
cli
icebp
dec
xchg
pop
jnp
xchg
sbb
aad
push
cmp
out
push
lahf
adc
in
dec
add
sub
fs
call
jle
ror
or
ins
cld
cmp
dec
push
repnz
int3
pusha
add
fstp
mov
cmp
mov
inc
xor
sbb
(bad)
mov
cmp
dec
fnsave
mov
adc
mov
outs
popa
leave
pushf
pop
mov
jl
pop
ins
rcr
sub
add
in
arpl
test
dec
mov
fwait
inc
in
test
(bad)
cdq
cli
sbb
xor
push
sbb
hlt
mov
imul
call
shr
int3
mov
and
hlt
mov
adc
cmp
bound
outs
ds
xchg
mov
dec
cli
inc
test
fwait
stos
repz
arpl
sbb
movs
retf
mov
shr
rcl
mov
dec
fdivp
loopne
ret
xchg
mov
sub
sub
or
js
cs
cmpps
mov
inc
dec
push
into
div
scas
sbb
test
fs
pop
dec
fmul
pop
xor
stos
hlt
jge
ins
dec
adc
sub
icebp
fs
fyl2x
mov
test
lods
cmp
call
add
ja
add
fs
xor
scas
pop
inc
and
or
push
jmp
clc
aas
ss
or
(bad)
jo
push
sbb
mov
mov
adc
mov
jnp
imul
mov
movs
stos
mov
sbb
jb
sbb
jge
scas
stos
jl
and
inc
lock
outs
(bad)
movs
jp
xchg
mov
cs
(bad)
repnz
int
test
sub
sub
mov
fs
jecxz
pop
dec
cmps
test
mov
ja
dec
jge
dec
sub
xor
rcr
cmp
ins
inc
xchg
fsubrp
cmps
shl
mov
add
mov
test
add
fdiv
jns
adc
push
jnp
adc
xor
cli
aas
xor
mov
jno
mov
out
fsub
inc
movs
push
inc
loopne
dec
pop
jge
push
loop
addr16
(bad)
fadd
in
pop
cld
ss
sub
pop
adc
nop
test
push
imul
xchg
mov
and
mov
aaa
cdq
in
adc
test
neg
frstor
or
jo
mov
push
enter
repz
fadd
lods
cdq
fisttp
sbb
movs
js
rcr
sar
stos
test
pop
add
push
int3
jns
mov
daa
(bad)
xlat
sub
xlat
adc
add
out
jp
fld
je
lea
ror
(bad)
sbb
sub
leave
xor
lock
mov
imul
loope
or
ret
dec
cmp
dec
arpl
sahf
in
std
pop
or
fwait
shl
bound
cmp
aas
mov
xchg
test
das
retf
sub
icebp
cmps
dec
xchg
mov
shr
push
fsubr
xchg
mov
sbb
jb
xor
cwde
cmp
push
sbb
hlt
jge
cdq
js
leave
daa
out
cdq
push
ja
hlt
les
arpl
aam
pop
je
outs
into
imul
or
jg
add
jbe
mov
adc
les
lds
xor
or
add
xchg
adc
push
aaa
inc
pop
push
clc
aad
mov
xor
or
inc
ret
sub
push
mov
xchg
cwde
loopne
xchg
sahf
push
mov
nop
add
ret
adc
fnstenv
popa
cmp
xor
loop
rcr
cmp
retf
ss
cdq
nop
xchg
cmp
xlat
scas
test
call
push
pushf
or
inc
sub
push
jmp
retf
mov
mov
xchg
mov
mov
xchg
xor
mov
push
test
jo
in
jp
xor
push
imul
call
stos
jl
scas
sub
je
(bad)
mov
xchg
push
inc
mov
(bad)
div
jns
mov
dec
cmps
lahf
mov
inc
sti
stc
addr16
fstp
jb
fs
sub
(bad)
xor
ins
push
pop
push
push
sub
les
repnz
in
data16
xor
cli
test
out
mov
shl
cld
adc
xor
or
repnz
ins
icebp
xor
or
push
fyl2x
mov
push
xor
fstp
mov
loopne
not
cmp
hlt
inc
jb
cld
cmps
mov
or
jl
cmp
push
cdq
pop
cli
ficom
sbb
jmp
sahf
inc
in
fiadd
(bad)
cmp
popf
add
or
or
dec
cwde
and
test
outs
or
jae
lods
dec
scas
or
add
sub
test
popa
push
push
outs
repnz
loop
mov
mov
loope
mov
jns
int
push
aas
add
int
pop
push
xchg
daa
add
dec
cmp
sub
xchg
and
xor
cmp
mov
or
pusha
out
dec
and
add
mov
fscale
dec
cs
mov
mov
xchg
movs
pop
call
fstp
sbb
into
ja
mov
add
jbe
repnz
out
mov
xor
daa
mov
fld
daa
aam
jnp
rcr
sahf
jne
mov
frstor
adc
pushf
icebp
mov
loopne
jp
in
aas
rcl
sbb
adc
(bad)
cmp
daa
stc
mov
push
test
jmp
dec
jmp
mov
in
xlat
mov
adc
jbe
and
lea
pusha
ja
xchg
cmc
outs
fild
jae
adc
pop
jmp
xor
pop
pop
jns
pop
adc
ds
xor
jge
xor
test
jb
movs
lods
xchg
dec
sbb
pop
pop
mov
adc
mov
adc
jns
imul
jle
dec
sub
aas
cmp
and
shr
sahf
add
movups
inc
es
or
or
scas
pop
aaa
out
into
(bad)
jns
adc
adc
jnp
mov
cmp
inc
jecxz
test
das
ror
psrad
inc
ret
loop
daa
inc
jecxz
or
test
pmullw
mov
outs
icebp
div
sets
cwde
ficom
mov
fwait
mov
xor
in
pop
jno
cs
mov
ds
bound
movs
popf
pop
leave
rcr
mov
xchg
mov
scas
test
sti
jmp
ror
clc
xchg
add
pop
add
popa
sbb
jae
js
or
pop
hlt
sub
bound
loope
bound
jg
ins
inc
cdq
jmp
jmp
ror
push
cmp
shl
retf
push
xchg
stos
ret
(bad)
and
jb
sub
mov
pop
push
cmp
(bad)
repz
rcr
iret
iret
repz
xor
sbb
(bad)
mov
inc
scas
push
inc
je
jns
retf
sar
les
fwait
mov
jno
call
inc
or
push
jo
ficom
mov
loop
pop
stos
and
in
stos
in
jmp
hlt
pop
shl
shl
add
and
add
jo
rcl
jne
push
inc
xlat
sub
sub
cs
lods
xchg
repnz
add
xchg
xchg
sbb
test
stos
ds
add
in
jl
add
sub
push
mov
fiadd
stos
pop
sbb
or
add
xchg
dec
inc
cmps
stc
add
jecxz
(bad)
cmp
mov
enter
or
mov
out
mov
sub
les
xor
mov
int3
test
ret
mov
aaa
inc
jge
jne
pop
aam
push
cs
dec
jne
push
jno
ja
mov
jae
xchg
mov
inc
rcr
push
imul
mov
aaa
sub
mov
dec
xchg
mov
jbe
jecxz
outs
es
pushf
les
sub
jle
sub
xchg
cs
iret
aas
or
ins
stos
in
stos
lea
(bad)
loopne
add
iret
xchg
cdq
jmp
out
fidivr
fnsave
cli
or
pop
jno
cmp
ins
mov
xchg
inc
outs
fisubr
inc
mov
mov
dec
cmps
xchg
mov
call
test
mov
xchg
(bad)
xchg
pusha
lods
lea
or
inc
ss
sub
xchg
cmp
mov
data16
(bad)
mov
test
push
xchg
push
add
cmp
lods
pop
xchg
fs
xor
movs
adc
jne
or
movsx
push
cmp
ins
cwde
add
stc
loopne
and
and
xchg
(bad)
pop
mov
pusha
xor
pop
aad
stos
pop
or
into
add
or
sub
pop
adc
or
repz
sahf
enter
cmps
aam
or
aas
repz
cld
lods
cmc
ror
xchg
mov
lods
pop
gs
cmp
enter
les
dec
adc
in
push
popf
push
cmps
(bad)
cmp
push
int
mov
call
js
out
add
mov
cmp
fiadd
div
adc
pop
cwde
add
arpl
imul
add
push
sahf
in
mov
rol
xchg
into
loop
xchg
pop
sbb
mov
mov
fnstcw
sub
jmp
(bad)
out
ror
inc
xor
inc
cmp
mov
or
mov
retf
movs
in
inc
mov
stc
or
push
xor
add
jno
into
dec
xchg
scas
clc
dec
clc
mov
(bad)
mov
inc
inc
dec
dec
jmp
adc
nop
std
fmul
js
gs
inc
and
ins
xor
dec
std
or
add
pop
cld
adc
iret
in
dec
sbb
and
pop
std
into
imul
stc
(bad)
out
xchg
pop
xchg
lds
pop
ss
xchg
jns
shl
ret
jne
inc
fadd
adc
xor
add
ja
mov
bound
pop
mov
push
jecxz
jno
or
aaa
int3
sbb
out
ss
mov
aad
jae
out
mov
rcl
xchg
or
call
cmc
pop
std
fs
xor
or
clc
lahf
pop
leave
jbe
pop
test
in
and
sub
fs
pop
jmp
retf
xor
xor
fcmovu
or
(bad)
jno
leave
dec
jno
dec
fwait
dec
inc
sub
aad
fidiv
push
adc
push
fcomp
pop
mov
mov
aam
xlat
mov
cmp
mov
shl
mov
inc
jb
lea
lea
adc
std
jmp
div
in
sbb
je
push
in
fdiv
scas
(bad)
fist
pop
jg
or
xor
int
retf
ds
jne
ficomp
and
cld
mov
dec
inc
mov
add
jno
cwde
mov
mov
fidivr
push
xor
pop
adc
in
dec
dec
cwde
inc
push
jle
inc
mov
loopne
out
icebp
add
div
sub
jnp
adc
sub
xor
push
das
push
add
pop
xor
out
sub
mov
es
or
xchg
in
sub
sar
and
stc
xchg
and
sahf
ja
retf
ins
mov
jae
in
out
loopne
inc
fisub
in
dec
lods
or
out
(bad)
jnp
add
dec
jnp
(bad)
rcr
mov
mov
mov
sbb
loop
sti
fst
std
mov
push
call
cdq
pop
sbb
addr16
ds
sbb
mov
repz
mov
pop
(bad)
in
imul
(bad)
pop
outs
dec
in
mov
pop
shl
xchg
or
repz
lods
inc
inc
dec
and
or
jmp
ret
xor
arpl
inc
cld
pop
ret
inc
aaa
sbb
add
outs
or
xchg
cli
jge
test
shl
into
mov
push
das
pop
aaa
mov
and
add
jmp
idiv
jb
in
or
test
shl
and
mov
sbb
es
hlt
ds
adc
gs
xor
fldenv
cmp
cmps
repnz
lods
add
loopne
xchg
cs
aaa
jl
mov
les
call
add
inc
sub
bound
out
imul
xchg
lea
ror
xchg
shl
xor
add
pop
push
push
lea
sub
sbb
xchg
mov
sub
cmp
sar
pusha
jecxz
pop
push
push
or
xchg
vpunpckldq
pop
jno
mov
lea
repz
or
scas
sbb
shr
fistp
fst
aad
xchg
ss
fwait
outs
mov
das
int
cld
je
pop
div
mov
icebp
jecxz
mov
mov
inc
mov
pop
leave
pop
imul
retf
loop
xchg
lahf
lods
ss
cdq
bound
arpl
sti
cmps
fwait
sub
scas
out
lahf
arpl
push
jnp
jb
mov
push
dec
out
outs
add
(bad)
cmps
mov
adc
jae
pop
push
jbe
dec
(bad)
dec
std
popa
xchg
ficomp
push
shl
inc
loop
jge
add
pop
sub
movs
xor
xchg
adc
push
cmp
mov
push
imul
daa
sar
aam
sub
or
icebp
loopne
xor
neg
cdq
ret
cdq
mov
xor
xchg
sbb
xchg
enter
push
jb
dec
pop
xor
aaa
data16
ins
out
pop
hlt
xchg
rcr
mov
js
inc
iret
cmp
push
lds
sbb
jmp
xor
push
aad
ficom
mov
aas
lahf
mov
fisub
xchg
add
xor
pop
inc
sub
das
sub
pop
stc
inc
addr16
mov
mov
mov
inc
adc
inc
outs
pop
xor
(bad)
pusha
lahf
daa
pusha
ret
inc
ss
cdq
idiv
stos
je
pop
mov
out
hlt
dec
adc
pop
xchg
sub
cmps
call
iret
sub
retf
mov
jp
dec
pop
jle
in
mov
and
iret
dec
ror
pusha
fimul
call
sti
pusha
dec
or
popa
or
int
mov
sub
push
pop
push
stc
mov
(bad)
adc
idiv
sub
push
out
stos
addr16
xchg
mov
aad
push
shl
xor
add
jne
and
test
aas
in
call
mov
xchg
and
or
addr16
sbb
mov
mov
retf
sbb
and
scas
and
cmp
mov
dec
xchg
sbb
dec
test
retf
shl
inc
sub
push
fwait
push
jno
jns
mov
nop
jecxz
jmp
fwait
mov
xchg
pushf
mov
adc
mov
jae
mul
mov
add
jno
retf
adc
push
out
sbb
neg
movs
jnp
inc
push
int3
cmp
push
iret
hlt
adc
xchg
clc
and
push
and
outs
nop
data16
inc
inc
fucomip
(bad)
outs
mov
sti
mov
aam
lods
call
push
jmp
popf
jae
repz
sub
aaa
add
push
ss
push
enter
xchg
pusha
jmp
aam
xor
adc
test
ror
mov
ror
daa
and
aad
push
outs
scas
popa
push
das
addr16
aaa
aas
dec
xor
mov
cs
icebp
iret
retf
xchg
mov
in
pusha
xchg
inc
mov
mov
add
add
jp
push
jge
xor
cdq
fs
jmp
addr16
adc
sbb
add
adc
call
call
pop
and
mov
jns
pushf
jecxz
cdq
out
ret
adc
imul
jmp
dec
adc
pop
movs
test
dec
pop
int3
fnstsw
scas
xor
xor
mov
and
jle
pushf
pop
leave
cdq
loope
cmp
mov
rcl
xor
enter
stos
icebp
pop
jb
outs
or
fcomp
loope
fcmovne
clc
pusha
add
fisub
add
sbb
dec
dec
repnz
mov
jo
loop
push
xor
out
ss
ja
xlat
sbb
jecxz
(bad)
cmp
pop
mul
sub
mov
mov
pop
or
adc
jae
pusha
inc
push
add
dec
aaa
mov
int
xor
icebp
das
add
packuswb
movs
hlt
push
lods
pop
add
mov
dec
xchg
sub
(bad)
pop
and
psrlw
mov
or
cmp
clc
jecxz
leave
je
mov
xor
sahf
aaa
add
adc
(bad)
leave
fwait
scas
mov
aad
jmp
dec
cmp
inc
inc
cmp
sbb
fidivr
cmp
inc
or
lock
pop
ja
ins
xchg
dec
mov
jae
fcomp
pop
aaa
inc
mov
sbb
push
cmps
mov
xor
bound
sahf
mov
sub
das
pop
xor
lea
and
mov
push
mov
call
push
lods
aam
stos
fistp
jnp
sub
mov
scas
sar
popf
imul
cmp
daa
rol
and
sub
mov
and
arpl
sub
movs
add
dec
das
and
ds
test
mov
pop
xchg
les
rol
into
mov
(bad)
sbb
stos
inc
rol
hlt
xor
jbe
mov
out
inc
cmp
pop
scas
mov
add
neg
xchg
pop
xchg
das
pop
pop
mov
mov
inc
ret
aam
lods
cwde
sti
stos
push
mov
push
push
push
add
jno
mov
xchg
push
cdq
jl
in
fisttp
dec
xchg
jne
mov
jb
push
xor
xor
cmp
or
enter
aam
jle
fnstcw
test
in
outs
jecxz
push
sub
cmps
std
pop
sub
xlat
iret
(bad)
dec
icebp
popf
rol
mov
clc
stos
dec
fmul
lods
fldenv
mov
rcl
push
push
stos
movs
push
retf
hlt
xlat
xor
scas
(bad)
pusha
sahf
and
mov
sub
fst
adc
push
cwde
lahf
das
dec
mov
mov
push
mov
int
ins
sub
dec
pop
pop
in
mov
loop
idiv
jno
rcr
mov
jne
and
retf
fwait
ins
jns
sahf
inc
jmp
aaa
or
loop
scas
and
shl
addr16
ret
sub
jp
icebp
cmp
pop
adc
data16
mov
or
jge
pusha
(bad)
data16
xor
retf
pop
std
jnp
jno
push
sub
ret
sbb
inc
movs
bound
rol
or
xor
bound
ds
jle
out
mov
(bad)
aad
pop
lods
test
lock
add
test
xchg
aam
fsub
cmp
lods
xor
(bad)
adc
mov
pop
jnp
sbb
or
sbb
or
hlt
addr16
inc
fmul
sbb
mov
shl
cmps
xchg
sbb
popf
mov
jecxz
xor
jle
out
cmp
mov
pop
xor
inc
push
stos
or
or
xchg
adc
aad
mov
pop
pushf
cs
fst
push
xor
pop
ret
cmp
dec
xchg
hlt
jl
in
dec
and
pushf
cdq
ret
jb
mov
cmp
and
data16
lds
inc
sbb
push
dec
ins
jae
inc
jl
push
sbb
xchg
cmp
mov
arpl
xor
in
and
cmp
add
inc
ds
sub
in
pop
sar
push
div
dec
mov
mov
in
jno
adc
sub
mov
or
aaa
(bad)
mov
lea
mov
mov
jnp
lds
sti
(bad)
or
sub
pusha
add
data16
in
xchg
and
xchg
ja
add
xchg
in
adc
cwde
ss
(bad)
push
sbb
xor
in
shl
xchg
pusha
es
movs
xor
mov
cmp
mov
mov
xor
fld
fisubr
pop
jnp
in
scas
fmul
scas
pop
inc
loope
shr
adc
test
hlt
push
sub
fucomi
sub
or
sub
jo
inc
push
leave
fldcw
test
push
(bad)
or
out
mov
bound
jmp
mov
mov
or
sub
fwait
call
nop
sbb
cmc
cmp
(bad)
shl
push
and
inc
mov
fdiv
or
pop
xchg
test
mov
push
pushf
cmp
inc
inc
fidiv
jo
or
(bad)
iret
push
jo
and
loop
adc
pop
cdq
hlt
mov
mov
cwde
jo
push
lods
jne
mov
into
inc
mov
pop
dec
ja
arpl
jecxz
mov
movs
pop
ret
add
fwait
add
lahf
mov
fisttp
daa
dec
es
in
les
mov
cmp
and
lods
outs
mov
test
stc
in
or
sub
push
retf
test
jns
push
sahf
repnz
push
pop
push
cli
add
xor
mov
addr16
mov
xchg
movs
or
aas
dec
leave
mov
jne
lahf
xchg
mov
dec
xor
sbb
dec
sbb
inc
cs
or
mov
outs
xor
xchg
ret
cdq
sbb
not
ins
pop
lds
xor
lock
(bad)
xor
cmps
pop
push
and
jno
add
pop
xchg
xchg
sub
mov
push
sub
add
lds
xor
fcomp
xchg
js
xchg
ret
loopne
jg
icebp
dec
(bad)
jmp
mov
(bad)
js
je
xchg
sbb
add
ss
call
outs
mov
fsub
mov
xor
inc
data16
into
sbb
xchg
int3
pop
pop
les
aaa
ins
or
iret
pop
ret
inc
call
inc
or
adc
sbb
lods
push
les
mov
gs
daa
aaa
retf
or
lea
mov
stos
je
lahf
ffreep
loopne
stc
jae
stos
jmp
adc
inc
out
imul
mov
xor
loopne
mov
shl
call
outs
bound
cmp
movs
movs
and
stos
xlat
cmp
cs
push
push
dec
out
dec
ret
in
push
jmp
pushf
cmp
inc
rcl
pushf
pushf
ret
(bad)
shl
pop
pop
int3
test
xchg
retf
pop
cdq
icebp
xchg
shr
into
inc
into
mov
test
out
mov
mov
dec
in
dec
push
add
cmp
loope
repz
cmp
sbb
xor
mov
ja
(bad)
xor
pop
xacquire
xor
test
sbb
pop
out
xchg
mov
sub
call
imul
xchg
enter
push
stos
cmp
(bad)
cli
cmp
ret
stc
adc
cld
repz
fldenv
jnp
stc
sbb
xor
retf
jno
mov
mov
push
lds
push
ret
xor
out
cmc
js
and
add
push
push
sub
lods
cdq
fist
xchg
(bad)
ins
xor
retf
dec
es
movsx
push
inc
ins
inc
pushf
cmp
mov
aad
and
in
xor
jnp
bound
in
into
lods
jo
jmp
mov
sbb
fisttp
fisubr
mov
into
cmps
out
jns
loope
push
adc
adc
clc
mov
imul
pop
nop
mov
mov
popf
mov
ficom
out
cli
pop
leave
adc
and
loop
push
jmp
sub
or
jmp
mov
aaa
in
lods
pop
jmp
loopne
mov
mov
popa
mov
js
push
outs
icebp
sbb
cmps
icebp
ja
pop
xlat
push
add
popf
mov
vmovlhps
fnstsw
not
xchg
lea
mov
out
sub
jmp
test
cs
jnp
adc
xchg
jo
ds
retf
popa
inc
in
fsub
xor
dec
sahf
test
push
xchg
shr
dec
dec
pop
adc
ins
(bad)
xchg
scas
pop
sbb
push
jmp
out
cmp
xor
(bad)
dec
xor
push
xchg
fs
jae
mov
(bad)
push
shl
das
lock
jne
or
and
scas
dec
push
mov
dec
sbb
fnstenv
aam
cmp
and
sbb
sbb
cld
xchg
pop
push
enter
sub
sbb
inc
je
enter
jo
fcmovb
mov
lahf
loop
xor
push
pushf
call
sbb
outs
cld
mov
addr16
cmp
jns
dec
test
cli
cmp
or
mov
and
pop
inc
push
repz
push
and
hlt
adc
(bad)
loopne
dec
sub
popa
and
stos
dec
fwait
mov
int3
mov
xchg
out
jmp
mov
stc
cdq
mov
jle
add
into
xchg
and
push
xchg
and
cdq
pop
add
not
seto
ds
jl
dec
test
pop
mov
xor
fidiv
outs
data16
jbe
into
dec
pop
call
fmul
scas
mov
cdq
out
cdq
mov
aas
pop
dec
and
pop
je
rcl
xchg
jno
or
aas
cdq
int3
or
push
stos
mov
mov
sahf
test
xchg
out
xor
shr
mov
pusha
aas
hlt
inc
lods
popa
stos
cmp
cmps
dec
leave
xor
out
jmp
fadd
dec
nop
popa
in
icebp
loope
mov
inc
dec
neg
inc
pop
mov
cmp
add
jbe
mov
pop
mov
(bad)
ja
sub
push
jle
adc
jle
fisttp
push
add
sub
rol
jecxz
and
leave
ins
add
xor
cs
mov
popf
stos
cdq
push
call
push
inc
lock
pop
pop
dec
push
xchg
jns
es
xchg
xor
inc
movs
cwde
movs
or
in
push
add
lods
xchg
shr
mov
push
pop
xchg
push
jge
into
call
sub
ficomp
retf
xor
les
pop
adc
jmp
idiv
fucomip
jo
fist
or
clc
dec
mov
inc
cmps
sbb
add
jp
lds
cld
(bad)
rcr
jge
add
push
jge
mov
call
or
mov
movs
out
xchg
xor
sahf
or
leave
(bad)
lods
mov
(bad)
xor
mov
dec
and
push
adc
xchg
push
mov
lahf
push
icebp
pop
pushf
lods
es
scas
repnz
xor
stos
loopne
mov
das
fwait
adc
mov
ficom
cmp
sub
fcmove
inc
xor
jae
mov
xchg
adc
mov
out
mov
mov
inc
jae
cmp
scas
and
fisubr
scas
mov
push
pop
jae
ror
or
mul
pop
fcomp
xor
jp
pop
ins
scas
call
cmp
jmp
inc
repz
inc
or
or
pop
jbe
loopne
outs
into
add
in
repnz
sbb
inc
aam
in
sbb
push
in
(bad)
div
pop
int3
ja
mov
mov
loope
mov
push
inc
cmp
out
fidiv
ja
aad
rol
pop
mov
test
push
ret
xor
(bad)
cmps
add
das
out
cmp
pushf
out
retf
and
loop
pop
push
je
and
stos
cmc
xchg
mov
jecxz
outs
out
call
and
arpl
mov
std
icebp
sub
mov
mov
and
jbe
xor
mov
out
cld
mov
sbb
popf
test
add
pushf
sub
xor
jmp
clc
lock
in
xor
shl
jmp
mov
mov
mov
mov
dec
popf
cmps
outs
cmp
fnstsw
(bad)
pop
sbb
into
sahf
clc
sub
xchg
pop
out
repz
arpl
push
test
into
and
add
bound
call
ds
xchg
jae
ds
or
inc
cmp
ins
cmp
adc
sbb
jge
and
and
push
test
mov
or
sbb
mov
jecxz
sbb
pop
sub
rep
movs
push
pop
test
ret
mov
push
adc
mov
test
push
repnz
sbb
(bad)
loop
aaa
stos
mov
daa
mov
sub
adc
(bad)
mul
dec
sbb
ret
lds
cmp
pop
aad
loope
and
dec
dec
imul
in
cmps
(bad)
sub
inc
jg
and
xchg
inc
sub
jle
nop
xor
das
sbb
xor
mov
shl
xchg
xchg
mov
xor
jo
loopne
adc
sahf
(bad)
or
jmp
fcomp
xchg
(bad)
add
sub
(bad)
ds
mov
sbb
iret
das
sub
lock
fadd
ins
loop
or
arpl
add
repz
add
fstp
(bad)
dec
jnp
outs
(bad)
outs
cld
mov
inc
out
mov
cmp
outs
sub
jmp
xchg
(bad)
(bad)
mul
sub
inc
inc
mov
js
test
add
add
mov
in
fs
push
mov
and
push
push
xchg
mov
ja
mov
aaa
outs
std
cmc
dec
adc
push
sub
ret
sar
call
mov
arpl
push
adc
pushf
movs
das
xchg
out
inc
in
mov
mov
mov
lods
push
jns
cmp
sar
cdq
jecxz
div
leave
xchg
sahf
cwde
pop
cmp
jns
xchg
loop
dec
lods
mov
push
push
cmp
push
push
fsub
mov
ja
adc
pop
std
push
jnp
fst
pop
add
ja
jecxz
mov
push
pushf
push
adc
push
out
loopne
js
lea
mov
xchg
mov
mov
push
jp
pop
aam
mov
mov
jae
fadd
push
mov
call
lahf
push
and
dec
pop
mov
pop
sahf
mov
lds
dec
ret
pop
jecxz
mov
jg
jmp
xchg
sub
mov
push
stc
outs
outs
or
xor
add
jle
jl
rol
fldcw
xchg
pop
xor
scas
mov
dec
sar
repnz
ret
or
pop
and
mov
sbb
add
cmps
out
cmp
test
xchg
(bad)
mov
dec
xor
das
cmp
mov
sbb
(bad)
push
mov
push
jo
nop
push
mov
enter
retf
hlt
mov
pop
adc
gs
shl
into
mov
add
sbb
int
or
rcl
(bad)
xchg
das
xor
jg
stos
fs
das
pusha
dec
out
pop
mov
adc
sub
adc
sub
jae
je
icebp
jo
mov
(bad)
or
repz
xor
icebp
mov
and
adc
cli
das
ret
mov
cmp
add
(bad)
push
retf
lock
mov
jecxz
dec
add
xchg
dec
dec
dec
neg
sbb
out
mov
add
mov
clc
into
iret
and
mov
pop
add
or
mov
xchg
daa
and
pop
lahf
jae
sub
xor
mov
mov
fimul
sahf
sub
inc
cmp
cmps
xchg
in
and
ror
cmps
mov
mov
adc
cld
jne
xchg
dec
retf
push
jmp
popa
mov
mov
xlat
in
xor
add
sbb
or
retf
or
mov
adc
xor
cmp
xchg
fwait
dec
cmp
mov
mov
out
jno
cmp
in
lods
pop
shr
rol
mov
mov
loop
fisttp
jb
sub
push
or
ja
fcmovnb
push
mov
popf
push
dec
scas
mov
ss
daa
jns
loop
outs
inc
add
cmps
retf
xchg
sbb
cmps
(bad)
fimul
syscall
push
mov
or
out
repnz
rcl
add
mov
dec
in
lahf
jmp
hlt
pop
sbb
push
sub
jg
sub
pop
xor
xchg
hlt
xchg
aad
or
neg
jne
add
int3
cmps
nop
icebp
cmps
push
push
out
in
in
and
setl
mov
mov
cwde
out
mov
pop
arpl
je
mov
imul
(bad)
mov
xchg
mov
jae
and
stos
shl
nop
cmp
out
fs
enter
sbb
outs
stc
mov
push
pop
test
mov
in
nop
mov
push
adc
sbb
add
sub
rol
in
aaa
addr16
in
jae
pop
add
or
test
sub
setno
fst
mov
cmp
and
add
loop
dec
mov
jnp
cdq
adc
jbe
clc
cli
(bad)
daa
movs
push
xchg
xor
dec
mov
sbb
outs
pop
aam
or
sbb
jmp
dec
jp
movs
test
jne
add
test
in
dec
in
or
lods
mov
test
jmp
dec
jp
inc
js
shl
adc
pop
shl
xlat
jmp
jg
mov
cmps
scas
adc
jp
adc
fs
pop
inc
dec
retf
dec
or
es
or
scas
mov
pop
cmp
repnz
lods
fld
das
push
mov
inc
ret
cmp
ss
jae
cs
and
add
push
add
xchg
inc
ss
lock
ret
pop
cmp
js
in
shl
fadd
aas
mov
cmp
cmc
inc
pop
test
out
or
mov
mov
dec
sbb
test
cmps
sub
test
iret
ins
inc
pop
or
adc
(bad)
jbe
sti
sbb
sub
and
xlat
inc
sbb
inc
call
aad
(bad)
in
sbb
sbb
dec
xlat
jge
push
aam
aaa
push
xor
mov
mov
stos
add
mov
xchg
jno
hlt
stos
adc
ja
sbb
arpl
int
jecxz
fcmovu
jle
mov
cmp
rol
sbb
pop
sub
std
add
in
mov
fcmovu
xchg
mov
lods
test
test
aas
hlt
mov
add
add
inc
je
mov
cmp
and
inc
add
adc
xchg
(bad)
and
xchg
sub
dec
icebp
(bad)
pusha
adc
sti
icebp
lahf
pop
jmp
fcmovb
mov
in
dec
mov
xor
or
int
or
jnp
dec
push
ins
clc
(bad)
xor
sbb
iret
cmp
les
cli
(bad)
stc
or
mov
and
adc
xor
mov
xor
out
pop
in
repz
mov
add
push
cmp
enter
int3
or
jae
stc
dec
mov
ss
ficom
fild
into
sbb
mov
stc
sub
mov
retf
jl
pop
inc
xor
loopne
fwait
test
retf
in
dec
inc
in
fist
popa
sub
mov
and
sub
push
or
lahf
arpl
movs
ins
adc
ss
sbb
push
aas
pop
and
xchg
or
paddd
mov
(bad)
addr16
adc
popa
data16
sub
(bad)
stos
adc
jbe
jnp
cmp
ror
daa
lahf
cwde
repnz
xor
nop
(bad)
cmps
pop
mov
js
enter
jae
lahf
dec
jp
fs
out
xchg
outs
inc
cld
inc
aas
adc
popa
xor
ret
mov
and
js
shl
(bad)
pop
vpsubw
xchg
clc
push
out
out
arpl
repnz
data16
dec
push
mov
pop
call
xor
dec
je
rcr
cmps
jo
or
or
mov
and
pop
xor
sbb
mov
mov
pop
or
(bad)
pushf
test
test
mov
ja
sahf
dec
shl
push
ja
mov
sbb
aad
mov
inc
pop
(bad)
cmp
dec
push
fwait
mov
fwait
sub
mov
inc
inc
inc
fbstp
int3
aad
inc
int
jo
or
stos
test
outs
repnz
adc
js
shr
cmp
mov
xchg
imul
mov
addr16
xchg
cmp
mov
fs
inc
stc
add
fwait
lahf
neg
rcl
mov
or
bound
into
test
pop
push
mov
dec
pusha
imul
mov
push
ja
jmp
adc
xchg
aam
jno
in
sub
repz
call
inc
punpckldq
cmp
jno
dec
mov
xchg
jle
pop
in
in
adc
loopne
fst
xor
add
in
rcl
ds
jae
xor
mov
jg
mov
or
xlat
in
jg
sub
cmp
repz
ja
pop
dec
mov
mov
pop
mov
iret
mov
test
adc
jmp
pushf
stos
cmps
jmp
add
adc
jge
out
das
ret
int3
pop
outs
rcl
jnp
mov
inc
or
lea
pushf
movs
(bad)
dec
jge
sub
enter
inc
rcr
xchg
(bad)
js
mov
in
jns
cmp
pop
mov
mov
icebp
mov
sbb
test
leave
inc
mov
pop
imul
dec
and
fsub
jns
sub
fmul
xchg
call
jge
stos
or
jmp
lea
push
add
or
xor
out
jecxz
and
pop
xor
mov
in
adc
jb
push
(bad)
jae
mov
clc
daa
add
xor
sub
pusha
aad
mov
xor
inc
cmps
sub
test
std
pop
cmp
xor
int
sbb
cmp
loop
repnz
adc
es
pop
mov
mov
call
out
imul
out
call
or
repz
push
ret
aas
dec
sti
mov
inc
test
sar
mov
(bad)
fs
mov
ins
fs
popa
mov
ret
mov
inc
and
mov
out
out
mov
fadd
bound
jns
pushf
test
adc
lahf
lods
rol
retf
jo
test
scas
sar
jecxz
hlt
jno
pop
add
mov
ins
jb
xchg
sub
push
aaa
lahf
cmc
dec
adc
mov
adc
(bad)
jle
sti
xchg
into
adc
add
push
ja
cld
mov
retf
mov
jo
in
jbe
scas
popa
(bad)
xor
jge
cmp
or
xchg
sub
bound
adc
outs
push
and
pusha
inc
dec
mov
call
aaa
loop
jmp
dec
out
lods
xor
stos
and
mov
jne
jae
hlt
imul
inc
xchg
push
mov
pop
add
dec
xor
movs
out
(bad)
jmp
xchg
lods
stc
shr
or
adc
rcr
mov
in
and
outs
xchg
sub
jle
sub
pop
pop
shr
sbb
mov
pusha
and
push
test
out
in
pop
clc
(bad)
adc
ins
cmp
mov
and
jb
inc
pop
cmps
mov
test
test
jnp
fcos
ja
fdiv
adc
movzx
jno
dec
outs
pop
(bad)
xchg
jns
fdiv
pop
jae
push
es
mov
pop
not
cld
cmp
xor
push
mov
pop
sbb
pop
pusha
retf
sub
outs
cmp
push
pop
mov
test
jle
cmp
add
push
out
mov
retf
pop
movs
xchg
push
push
movs
or
ds
adc
call
and
popf
movs
(bad)
mov
push
leave
push
fcmovnb
mov
fwait
sub
jmp
aas
sbb
hlt
pushf
xor
mov
clc
lods
adc
ret
imul
xchg
sbb
pop
pop
push
fwait
push
(bad)
imul
adc
mov
sti
dec
adc
or
jp
js
cs
out
int
pop
ds
jnp
pop
out
cld
pop
les
adc
mov
push
cmp
adc
lahf
std
retf
(bad)
into
call
js
ss
lahf
arpl
and
in
cs
adc
jmp
popf
mov
xchg
loop
xchg
(bad)
frstor
push
scas
je
aad
and
adc
fld
cli
xor
icebp
clc
or
outs
(bad)
xor
cmps
data16
fidiv
or
push
(bad)
outs
imul
popf
repz
jnp
push
fistp
lods
or
dec
cmp
lods
sub
pop
dec
enter
repnz
or
adc
sbb
aam
mov
mov
arpl
jb
adc
sbb
sub
cmp
imul
push
imul
inc
push
mov
sbb
imul
popf
popf
pinsrw
loop
out
sub
mov
add
aas
sub
dec
popa
loopne
jg
pop
arpl
lds
or
(bad)
push
xor
clc
cmps
mov
pop
xor
push
cmp
int
ret
mov
sub
xor
test
mov
int
sub
or
repz
lds
mov
mov
shr
mov
(bad)
jmp
shl
xchg
fwait
add
into
or
add
outs
xchg
cmps
lea
adc
popf
pop
xchg
xor
sbb
fnstsw
es
stos
sahf
and
and
jno
inc
push
push
adc
bound
(bad)
lahf
in
es
mov
rol
lds
xchg
es
data16
int
xor
xchg
lahf
push
imul
push
cmps
lods
in
mov
(bad)
(bad)
or
cmp
gs
leave
cmps
mov
sub
dec
mov
movs
dec
mov
sub
repz
xchg
and
int3
test
out
adc
cmp
neg
adc
pop
cmp
adc
jmp
leave
sbb
fs
pop
xor
push
pop
data16
les
mov
or
inc
popa
pop
sbb
xor
leave
xor
xor
pop
mov
pushf
out
sbb
pop
xchg
push
bound
cmp
(bad)
cmps
call
out
test
pusha
xor
sub
sahf
cmp
mov
and
xor
ja
pop
shr
cdq
xor
sub
cwde
xchg
(bad)
inc
sbb
outs
imul
ja
div
fstp
adc
jecxz
gs
out
scas
sbb
in
out
mov
dec
retf
lock
addr16
retf
popa
adc
(bad)
mov
inc
mov
mov
push
push
repz
or
dec
and
pop
jne
ror
loope
test
(bad)
out
mov
popa
and
add
xchg
mov
xor
sub
data16
test
rol
push
rcr
pushf
fwait
pop
lahf
dec
xchg
pop
adc
ret
mul
or
imul
ds
into
or
les
sti
adc
add
in
mov
dec
pop
jge
adc
fldenv
sbb
outs
retf
sbb
retf
push
cmp
adc
loop
and
(bad)
adc
aam
lock
fisubr
(bad)
pusha
in
loope
push
push
pop
mov
aaa
lods
sub
push
dec
cmp
push
mov
mov
xor
sar
xchg
loop
leave
inc
iret
push
cmp
pusha
cmp
cmp
enter
lahf
pop
pop
xchg
cmp
inc
cs
inc
out
push
imul
test
call
outs
jmp
bound
jmp
mov
push
dec
out
or
pop
ins
pop
imul
rcl
imul
aad
dec
sub
jge
je
gs
es
xchg
ficomp
mov
fs
iret
mov
jnp
retf
(bad)
call
xchg
dec
jg
fmul
ja
add
in
cmps
mov
mov
pop
gs
or
scas
and
aam
mov
add
push
addr16
test
xor
inc
sbb
xlat
scas
inc
mov
es
das
mov
inc
xor
mov
iret
push
adc
cmp
ins
jnp
retf
lahf
pop
pop
and
and
not
mov
push
shr
sahf
mov
xchg
mov
xchg
aam
shl
or
int3
xor
mov
sub
and
or
fldcw
inc
fwait
add
sub
adc
xchg
jg
shl
aad
mov
pop
rcr
outs
je
cmc
mov
cmp
retf
inc
mov
sub
stos
xor
dec
ins
(bad)
clc
pusha
xor
jp
mov
in
data16
jne
or
add
cmp
xchg
data16
ror
test
ss
(bad)
mov
push
into
lods
popf
jae
pusha
cwde
(bad)
shl
sbb
sub
outs
sub
pop
adc
ja
jae
ja
mov
cs
(bad)
sub
in
shl
loop
cs
mov
xor
inc
mov
push
push
dec
push
pop
call
xchg
dec
and
rcl
out
out
ins
xchg
test
test
repz
outs
and
adc
fsub
push
shl
jmp
cs
inc
cmp
inc
out
(bad)
sti
mov
popa
iret
enter
jne
and
movs
push
jl
test
push
sbb
cli
test
mov
mov
call
inc
ss
arpl
dec
movs
pop
sub
dec
xchg
push
ror
sub
cs
inc
mov
pop
mov
cmps
enter
inc
push
pop
into
jecxz
and
nop
out
or
mov
enter
stos
mov
call
pop
mov
dec
inc
cld
adc
in
sbb
and
add
xchg
xchg
cld
or
xor
ins
sub
(bad)
int
stc
int
dec
dec
add
and
(bad)
push
cwde
(bad)
sbb
aaa
stc
cmp
in
into
rcr
xchg
pop
imul
mov
pop
add
test
and
inc
xor
(bad)
jecxz
fst
dec
lahf
mov
sub
jbe
or
push
out
hlt
inc
out
mov
jl
mov
adc
fwait
xor
pusha
adc
mov
(bad)
and
push
mov
mov
test
cli
loopne
(bad)
push
ja
xor
cwde
jb
call
and
jl
imul
ror
sub
push
pop
sar
jo
add
ins
add
dec
repz
test
jg
and
adc
mov
jp
xchg
inc
mov
int3
pop
mov
push
add
test
sar
adc
push
scas
xor
cs
mov
cld
push
jge
inc
mov
test
pop
scas
mov
mov
mov
inc
scas
ins
or
jmp
in
xor
out
push
jbe
ss
imul
xlat
mov
inc
icebp
inc
inc
or
pop
lock
bound
retf
jmp
shr
stos
test
push
cmps
mov
xchg
cmp
icebp
ins
sbb
jmp
sub
sub
xchg
jp
sub
sub
sbb
pop
add
loope
fwait
loopne
push
fisub
dec
mov
jmp
push
in
test
in
or
or
int
mov
hlt
cmp
or
or
xchg
mov
lock
out
pop
dec
pop
inc
unpcklps
push
inc
std
cld
in
lods
hlt
fdivr
mov
movs
push
pop
les
bts
pop
inc
fld
out
(bad)
and
mul
push
and
jg
in
jne
or
add
sub
adc
xor
mov
or
test
stc
xchg
test
or
mov
sbb
(bad)
and
sbb
jbe
or
sub
jno
jge
popa
bound
xlat
lock
ret
(bad)
call
mov
dec
adc
mov
test
outs
and
loopne
ss
jne
inc
cs
call
mov
das
or
push
mov
fs
or
adc
and
daa
push
lods
shl
cs
aaa
inc
aas
cmp
xor
mov
mov
mov
add
lock
lea
mov
loope
in
push
repz
fiadd
mov
in
ret
xchg
test
pop
loop
lea
and
dec
(bad)
mov
xor
mov
sbb
xchg
mov
into
pushf
xchg
mov
(bad)
(bad)
or
cld
and
jae
ror
jno
sub
popf
push
adc
repnz
mov
adc
dec
out
mov
out
fwait
std
or
adc
adc
test
cmp
and
xchg
loope
pop
call
xor
and
ins
cmp
add
push
in
and
mov
push
mov
jge
daa
ret
movs
dec
cmp
call
and
imul
push
out
(bad)
jmp
jnp
push
mov
loopne
mov
cmps
add
cmp
out
jp
inc
cli
sbb
push
cmp
out
mov
dec
cwde
js
jnp
pop
and
dec
test
out
mov
je
shl
jne
xsha1
cmps
dec
repz
enter
outs
mov
daa
out
fs
dec
fadd
or
mov
sub
add
inc
cwde
addr16
jb
push
and
pop
mov
mov
dec
mov
leave
push
rcl
xchg
jmp
bound
xchg
imul
imul
scas
imul
pop
push
mov
ret
push
push
xor
and
and
ja
dec
ret
outs
mov
stc
push
push
fidivr
sub
(bad)
scas
and
and
cmp
adc
xchg
pop
inc
jbe
ficomp
jmp
cdq
and
mov
push
mov
push
call
and
adc
jne
mov
jb
jmp
retf
ins
push
xor
push
ret
adc
bound
jmp
sub
pop
mov
inc
repz
in
popf
test
cmps
lods
jecxz
out
aad
mov
ins
mov
jecxz
xor
adc
sbb
jmp
pop
fmul
cmp
push
add
xchg
call
lea
pusha
mov
fst
sub
inc
sbb
cmc
call
sub
pusha
sbb
or
test
or
or
outs
std
ja
mov
xchg
mov
mov
pop
xchg
repz
xchg
mov
lds
mov
mov
push
xchg
jmp
les
aam
inc
test
cmp
pop
sub
xchg
out
mov
leave
icebp
cmp
shl
xchg
dec
jmp
(bad)
arpl
std
and
dec
int3
popa
cmps
inc
inc
lock
and
gs
test
out
or
ins
ins
repz
fwait
push
imul
inc
xchg
pop
pop
inc
mov
pushf
jmp
sbb
cmp
test
scas
xor
movs
sub
ja
cli
xchg
jae
pop
stos
adc
sahf
sbb
retf
add
sar
cli
scas
mov
mov
cmp
or
outs
cwde
std
sbb
ja
inc
cmp
xchg
xchg
inc
cmp
inc
retf
test
pop
cmp
dec
pop
rol
jle
and
movs
inc
sar
fwait
jno
adc
pop
add
psrlq
(bad)
jo
jo
adc
test
push
and
push
adc
mov
int
pop
inc
adc
sbb
in
jmp
js
xor
mov
fs
mov
sub
push
dec
mov
jp
inc
lahf
mov
xor
or
mov
in
sub
adc
inc
neg
push
in
stos
and
sbb
mov
sbb
cli
(bad)
adc
lahf
gs
sub
dec
dec
popf
cwde
daa
arpl
pushf
call
cmps
jle
out
add
adc
je
xchg
fcomi
cmps
fbld
(bad)
xor
push
(bad)
imul
jno
sub
mov
dec
(bad)
or
hlt
fist
ss
dec
fcmovnb
mov
cmp
dec
pop
pop
push
xchg
retf
jle
mov
not
mov
mov
mov
push
ins
sbb
ficomp
mov
and
in
and
cmp
rol
sub
test
loopne
sahf
mov
jno
pop
pop
jno
cmp
mov
in
cld
popw
imul
out
xor
sbb
repz
cmp
test
lock
and
lea
xchg
setne
cmp
xchg
inc
and
push
add
lahf
test
dec
sbb
les
push
add
sub
jno
fcom
sbb
ins
aas
xchg
(bad)
sahf
outs
push
add
pop
(bad)
xchg
retf
repz
mov
inc
imul
mov
fbld
sub
mov
movs
jp
xchg
and
rol
movs
jecxz
jnp
stos
les
jbe
and
rcr
xchg
(bad)
adc
jle
xchg
xchg
cmp
(bad)
test
cmp
dec
sub
or
sar
pminub
jge
push
push
push
xor
out
mov
or
push
jb
pop
adc
pop
add
mov
xor
add
repz
mov
js
int
clc
jmp
jg
sub
jle
(bad)
data16
fwait
adc
add
ins
aas
pop
sar
jge
push
jns
repz
sahf
xor
dec
inc
mov
sbb
adc
cli
outs
adc
movs
mov
sub
pop
fs
cmc
cmp
and
outs
addr16
sbb
mov
and
jae
mov
lahf
ins
js
push
mov
and
cmp
sub
xlat
pop
adc
dec
adc
dec
movs
into
pop
pop
imul
jmp
or
pushf
lods
mov
pusha
pop
(bad)
lock
mov
push
iret
push
inc
(bad)
sbb
das
movs
mov
mov
(bad)
xchg
adc
jo
es
loopne
xchg
dec
int3
repnz
add
dec
pop
mov
rcr
(bad)
push
mov
call
jp
add
and
or
adc
ss
dec
dec
mov
sbb
jmp
out
mov
jle
ja
int3
stc
hlt
cmp
movs
ret
add
(bad)
loop
mov
push
out
mov
aad
mov
lds
les
push
pop
loop
fs
mov
mov
jns
mov
loop
xchg
mov
jns
inc
int
add
mov
sub
pop
xor
dec
fiadd
pop
mov
push
in
lea
jge
jmp
arpl
sbb
leave
jmp
or
xchg
test
rcr
mov
sbb
std
cmp
ss
call
in
sub
fisttp
inc
adc
mov
fist
fild
das
repz
or
stc
jge
mov
clc
out
cli
fisttp
jns
sti
sub
stc
and
push
fbstp
call
adc
repnz
pop
cmp
inc
hlt
popf
fisttp
in
popf
pop
push
dec
ins
cli
xor
xor
push
mov
inc
aas
pop
inc
or
and
dec
jle
add
std
xor
aad
in
mov
mov
shr
adc
cmp
adc
xchg
jne
push
addr16
mov
adc
xchg
sub
adc
jmp
adc
pop
jl
(bad)
jmp
xor
xor
mov
mov
mov
ficom
cdq
pop
(bad)
jmp
aad
pushf
push
mov
inc
stos
mov
mov
pop
sub
scas
adc
push
jmp
jle
jge
movs
fisubr
pop
rcl
dec
cld
xchg
loop
xor
mov
adc
sbb
mov
ja
test
scas
ja
pushf
movs
jle
push
push
out
fdivrp
retfw
add
mov
push
add
or
xchg
sub
lods
sub
mov
dec
push
in
xchg
and
pop
or
clc
jmp
loopne
mov
fdiv
leave
ficom
dec
mov
retf
add
std
sub
imul
out
aad
add
enter
fpatan
aas
or
cmps
popf
mov
adc
cmp
clc
rcr
(bad)
ss
and
cmp
jo
jp
dec
inc
mov
jno
test
jecxz
push
sub
mov
pop
sbb
call
xor
cld
add
xchg
test
mov
add
push
or
das
jg
inc
pop
sbb
inc
push
cmp
lahf
or
jns
pop
mov
add
dec
add
cmps
bswap
mov
xor
adc
pop
sbb
pop
pop
sub
adc
or
mov
jecxz
repz
bound
jmp
xlat
mov
cdq
fwait
std
outs
in
jne
jb
fisubr
mov
and
call
stos
repnz
stos
push
sbb
rcr
sbb
push
cdq
bnd
jg
jo
pop
pop
mov
js
int
dec
or
fnsave
add
add
sub
inc
data16
xor
pop
or
pop
call
ja
maskmovq
mul
mov
stos
ja
scas
mov
dec
lahf
fst
xchg
data16
sbb
out
leave
lods
cmc
add
sub
push
(bad)
add
lds
push
mov
push
sbb
stc
not
xor
push
(bad)
pop
rcl
iret
add
repz
fwait
js
inc
add
scas
mov
in
cmp
mov
lods
test
or
sub
cdq
mov
mov
fadd
and
call
add
push
dec
pop
clc
jns
sub
mov
shr
les
mov
xchg
pop
cmps
add
add
pusha
ds
xlat
scas
sbb
cmp
loopne
inc
mov
out
and
bound
ins
sub
call
pop
fldcw
ins
cs
int
nop
pop
aam
js
cdq
dec
in
inc
mov
enter
fs
(bad)
xchg
aad
fs
es
(bad)
or
jmp
pop
or
xchg
push
lds
xor
mov
push
mov
or
inc
cld
dec
imul
xor
mov
(bad)
enter
mov
pop
xchg
arpl
dec
add
inc
xor
bnd
pop
ds
mov
cmp
or
push
mov
js
ds
mov
sbb
sbb
mov
pop
int3
int
sahf
fadd
sbb
or
nop
(bad)
sub
adc
jmp
xlat
add
mov
mov
mov
xor
dec
hlt
neg
std
in
xchg
pop
in
shl
sti
pop
adc
xchg
rcl
jle
dec
popf
rcl
mov
aaa
je
jmp
sti
ret
(bad)
xor
push
fadd
fiadd
pusha
add
outs
inc
lock
(bad)
fcom
adc
jmp
scas
shr
arpl
test
mov
cmps
test
retf
mov
call
push
sbb
sub
push
in
imul
mov
pusha
ret
cmps
mov
xchg
leave
xchg
cmp
dec
retf
je
das
cdq
add
jno
int
iret
div
inc
out
mov
push
push
cld
sbb
repnz
inc
sub
imul
aaa
into
fdivr
xchg
test
in
cld
lods
xor
ret
hlt
xlat
pop
sub
mov
cmp
inc
adc
test
jb
jge
and
dec
sbb
neg
mov
repz
in
fadd
or
mov
shl
popf
aad
or
int
and
shl
movs
pusha
cmc
ficomp
push
ror
jmp
cmp
enter
cwde
aad
pop
shr
pop
and
adc
setae
add
int
out
mov
arpl
mov
hlt
daa
push
adc
data16
fst
scas
popa
and
ja
inc
and
inc
pop
mov
inc
addr16
inc
arpl
inc
aad
fcomp
cld
(bad)
js
xor
and
sbb
jmp
mov
out
and
aad
or
sbb
dec
and
in
dec
pop
movs
dec
loopne
addr16
call
mov
fld
xor
pop
into
cmp
inc
mov
std
mov
jmp
mov
cmps
test
in
lods
mov
pop
rcl
add
mov
test
pop
data16
push
mov
repz
mov
adc
adc
js
mov
shr
loopne
inc
jne
aam
ret
aas
xchg
cli
retf
sub
shr
dec
retf
pop
cmp
xor
(bad)
xchg
push
add
loope
clc
fdiv
mov
fst
shr
repnz
fcomp
cmp
add
push
(bad)
es
jge
icebp
xor
jge
pop
cmps
loopne
bound
sub
les
or
scas
jnp
out
mov
cwde
mov
sub
cld
mov
xchg
xor
push
mov
pop
mov
mov
cmp
lods
xor
or
sbb
popa
lock
jns
les
push
int
test
pop
stos
in
inc
mov
sbb
fst
adc
repz
adc
repz
rcl
leave
mov
xchg
test
pop
stos
aad
xlat
popf
xchg
cmp
fidivr
ins
pop
or
inc
jg
aaa
int
mov
add
into
adc
or
jmp
aam
jecxz
pop
int
into
fmulp
push
cmc
daa
inc
cmp
ins
add
adc
cli
mov
pop
jmp
inc
add
in
xchg
lock
or
in
fwait
or
mov
and
movs
ins
cdq
retf
lods
jge
(bad)
outs
gs
jb
mov
cmp
retf
adc
mov
sbb
fist
xchg
sahf
push
mov
add
push
push
fisubr
jnp
cli
ret
fisttp
mov
xor
daa
sbb
mov
or
or
daa
cwde
cs
retf
push
jg
xchg
cmp
dec
dec
add
fistp
test
add
cmps
sub
call
outs
sbb
pop
pop
lods
int3
popa
xchg
or
add
outs
fdivr
push
push
mov
ins
mov
adc
aaa
mov
sbb
ss
adc
push
mov
add
in
xlat
push
cmp
lods
ds
xchg
cwde
cmp
lock
mov
shl
(bad)
div
inc
sti
or
mov
xchg
jo
or
das
jbe
pop
or
mov
xchg
daa
xchg
jnp
or
mov
pusha
dec
dec
hlt
push
push
(bad)
rcl
push
cmc
shr
imul
xor
xor
ss
sbb
mov
int3
jmp
or
adc
in
mov
shr
push
push
push
das
(bad)
in
fadd
jmp
lods
inc
shl
ja
sub
(bad)
pop
xchg
xchg
fiadd
jbe
scas
mov
idiv
enter
jno
xor
retf
sbb
cmp
ficom
pop
cld
cmp
adc
gs
(bad)
int
lods
sbb
retf
jmp
sub
xor
ret
shl
fldcw
(bad)
dec
hlt
jns
jecxz
and
cmp
push
clc
sar
push
into
jo
add
inc
shr
sub
hlt
and
mov
repz
dec
add
mov
(bad)
or
xchg
(bad)
int3
fist
dec
rcr
fstp
cmp
cmp
lahf
lods
pushf
mov
cmp
addr16
rol
sub
popf
jne
mov
mov
fidivr
std
push
jecxz
pop
cmp
ret
xor
into
cmp
cld
(bad)
fucomp
bound
jp
out
getsec
jo
std
xchg
adc
push
aad
fdivr
add
sub
mov
xor
sbb
cli
inc
add
cmp
nop
pop
test
mov
or
jb
cmp
inc
pushf
inc
test
aas
les
(bad)
loopne
cmp
into
push
loope
push
xchg
or
cmps
fistp
mov
and
lahf
in
loope
int
and
retf
(bad)
retf
rcr
lods
fxsave
fadd
pop
fimul
add
jns
xchg
push
xlat
faddp
ds
add
jl
cmp
sbb
sub
xchg
inc
and
adc
(bad)
fwait
mov
mov
pop
mov
mov
and
mov
sub
out
and
nop
cmp
fidivr
and
mov
lds
inc
popf
call
pop
dec
fcmovu
fistp
xor
add
movs
add
mov
pop
fnstcw
jo
mov
repz
mov
lea
jnp
rcr
(bad)
lea
sbb
cs
scas
int3
jae
inc
int3
mov
push
inc
ror
dec
pushf
xor
cmp
mov
fdiv
sub
gs
push
int
imul
pop
mov
aas
push
inc
or
adc
repnz
xlat
paddusw
add
cmps
mov
xor
sti
sar
adc
int3
es
lods
push
cmp
into
stc
lods
xor
push
lahf
sbb
js
or
aad
mov
out
sub
jo
pop
pop
sbb
imul
iret
pop
jno
ret
push
sub
js
xor
fldcw
or
mov
inc
pop
xchg
lods
xchg
jmp
sbb
test
mov
mov
mov
(bad)
sti
mov
or
stos
mov
gs
clc
cmp
push
jle
pop
adc
in
push
dec
cmc
hlt
or
or
add
sub
jge
(bad)
xchg
stos
in
jge
neg
imul
sub
sbb
jbe
lahf
ds
aad
xchg
dec
std
hlt
lods
test
inc
cmc
cmp
mov
imul
mov
mov
bound
in
hlt
daa
ficomp
sti
sbb
gs
ret
or
mov
ret
in
jnp
mov
xchg
outs
sbb
mov
lock
out
or
repnz
push
or
out
cmp
and
sub
(bad)
jae
(bad)
enter
or
stos
loope
xor
hlt
sbb
loop
daa
mov
in
pop
add
icebp
add
bound
aaa
out
push
in
int3
aad
sub
xor
xchg
push
jnp
scas
in
into
push
scas
jbe
sub
inc
dec
and
add
dec
or
push
mov
pop
retf
xor
imul
cld
adc
mov
aas
add
sbb
adc
push
add
or
je
mov
hlt
pushf
push
push
scas
mov
cmp
retf
js
cmps
in
ins
stos
scas
cmp
cmp
mov
jo
addr16
push
pop
sbb
sbb
lds
lods
and
ror
sbb
xchg
stos
lods
lock
inc
and
div
test
inc
jmp
mov
mov
out
inc
or
dec
mov
into
push
in
js
fcomp
inc
dec
rol
bound
lea
add
dec
xchg
jmp
cs
pop
int3
cmp
ja
out
(bad)
cmp
fadd
fild
jns
mov
cmp
add
push
adc
inc
or
fist
cmp
lods
adc
ss
lods
mov
push
push
mov
(bad)
cmps
(bad)
retf
or
iret
pop
xchg
scas
aaa
dec
shl
mov
outs
cmp
sbb
dec
add
xor
dec
int
or
jg
sti
push
outs
push
sub
pop
int3
mov
xor
stos
ins
jl
lea
popf
imul
repz
sub
pop
mov
outs
mov
mov
inc
push
cmp
dec
sbb
enter
sti
xchg
adc
ret
jge
je
imul
retf
adc
sub
ins
mov
imul
lock
cmps
out
pop
mov
or
aad
iret
sub
lods
push
xchg
sbb
into
jmp
dec
popf
mov
out
xor
cdq
mov
imul
mov
retf
xor
pop
dec
pop
or
xchg
ins
adc
daa
and
retf
pop
dec
or
push
das
test
(bad)
xchg
xlat
jmp
je
not
jne
aad
cmps
lods
mov
sub
mov
add
mov
imul
mov
fild
or
aaa
lock
pop
mov
push
shr
and
fsub
dec
lahf
xchg
clc
jmp
pop
mov
jecxz
cmp
dec
out
or
xchg
test
push
mov
fdivr
std
stos
jl
lods
jmp
adc
lds
enter
gs
dec
and
push
fistp
fst
mov
mov
imul
mov
test
adc
push
mov
push
jnp
pusha
sar
add
inc
push
fdivr
int3
and
fwait
inc
cli
mov
push
scas
sbb
mov
cmp
adc
js
aad
xlat
clc
leave
sub
add
push
in
mov
retf
rol
test
or
mov
adc
add
cs
(bad)
jae
daa
or
mov
fld
popa
imul
stos
pop
pop
jle
(bad)
js
(bad)
adc
add
rol
cs
lods
cmc
mov
sub
aas
dec
lahf
sbb
mov
gs
cmp
mov
inc
enter
jb
cmp
push
jo
sbb
cmp
add
shr
ret
shl
pop
cwde
and
iret
(bad)
push
dec
pop
sti
or
in
xchg
and
inc
ret
(bad)
jge
imul
mov
pop
(bad)
out
mov
mov
or
or
test
dec
fwait
mov
jb
aam
shr
mov
call
outs
dec
push
ret
xchg
adc
push
test
cmp
xor
sub
jae
test
adc
xor
xchg
push
and
dec
test
adc
(bad)
aas
cdq
push
iret
sbb
jb
cmp
add
imul
lds
push
cmp
sub
cdq
mov
fwait
adc
adc
sbb
inc
das
(bad)
out
pushf
cmps
cli
xchg
cli
xor
out
jmp
xor
cmps
dec
dec
push
inc
fwait
add
adc
out
movs
or
neg
dec
push
mov
scas
into
jmp
xchg
in
adc
xchg
jecxz
imul
xor
xchg
nop
fldlg2
imul
test
enter
xchg
sahf
add
ins
fistp
jne
inc
sbb
mov
mov
pusha
mov
cmp
jno
push
mov
push
lods
and
dec
addr16
cmc
dec
push
lds
jnp
pop
mov
and
daa
ror
cdq
mov
cmp
mov
mov
cwde
adc
or
adc
add
mov
cdq
sti
iret
or
(bad)
out
xor
and
inc
xor
enter
mov
ret
(bad)
fiadd
stos
les
xchg
int
pmaxsw
xor
nop
repz
outs
xchg
add
push
fisubr
or
(bad)
inc
and
mov
jns
rcr
scas
or
xchg
cli
nop
ret
push
push
pop
push
cs
adc
es
ret
loope
test
inc
or
fst
xor
leave
jbe
or
cmc
dec
dec
xor
mov
push
mov
sti
xor
jb
imul
les
fistp
push
outs
adc
(bad)
dec
mov
fmul
cmp
jmp
and
les
cli
imul
pop
inc
(bad)
ror
fwait
xchg
sbb
cmc
push
out
or
sbb
sub
mov
add
jl
mov
xor
loope
xchg
lahf
movs
retf
or
shl
cmc
push
daa
add
mov
inc
into
or
xor
pop
int
pop
shr
pop
add
jmp
mov
xchg
fiadd
es
or
or
js
and
pop
jae
bound
(bad)
dec
outs
and
ins
dec
mov
sbb
push
jae
lea
test
push
push
leave
jns
ret
inc
pop
sbb
sub
scas
xchg
mov
mov
cwde
test
mov
sbb
stos
icebp
sbb
ins
pop
adc
add
add
push
sbb
mov
fiadd
in
shr
ret
mov
jg
or
push
dec
pop
retf
sbb
out
popa
or
test
or
xor
jp
push
push
jne
inc
cmps
ret
xor
push
mov
fdecstp
mov
inc
mov
xchg
rcr
jp
retf
mov
and
or
or
out
lahf
in
in
xor
and
xlat
loop
retf
outs
fidivr
cld
mov
sbb
stos
loope
fnstenv
mov
push
adc
pop
push
aas
jle
or
push
rcl
xchg
push
sbb
(bad)
inc
cmp
sti
xchg
stos
xchg
push
or
jbe
pushf
daa
retf
sub
out
test
jmp
push
repnz
mov
pop
pop
pop
sub
neg
cdq
mov
ds
into
lods
imul
push
sub
sub
sub
pop
lock
xchg
adc
arpl
pop
test
daa
sahf
or
repz
pop
add
push
fcomi
fdivr
mov
jmp
pop
pop
cmps
imul
pop
jnp
call
int
and
test
imul
add
fdiv
scas
or
xsaveopt
mov
out
in
je
pop
fistp
repz
fwait
mov
lock
ror
shl
dec
push
adc
or
lods
jbe
arpl
retf
ja
and
loopne
jnp
ins
sbb
sub
mov
sbb
loopne
dec
es
out
je
mov
push
xchg
jecxz
sti
lds
cmp
add
or
pop
mov
xor
je
sub
cmc
jmp
in
into
stos
les
jmp
jle
inc
pop
rol
xchg
pop
and
mov
rcl
pop
cld
jl
les
mov
and
leave
mov
push
inc
jno
push
or
xor
in
jne
and
inc
in
jae
test
js
cs
mov
cld
adc
outs
mov
or
mov
mov
jo
and
jecxz
clc
inc
in
and
fucompp
ss
movs
repz
dec
pop
imul
inc
sbb
test
lea
(bad)
dec
add
cwde
aaa
in
jnp
xor
push
sti
sahf
(bad)
repnz
dec
dec
dec
add
jge
test
adc
test
add
xchg
mov
dec
xchg
or
outs
jl
or
mov
jg
inc
dec
ret
ins
loope
inc
imul
xchg
push
rcr
mov
cmp
dec
pop
sub
movs
call
in
dec
ret
mov
mov
push
add
sar
xchg
pop
(bad)
mov
je
cmps
sub
push
cli
add
dec
arpl
(bad)
mov
add
or
pop
js
shl
mov
mov
jmp
pop
fcomp
shl
pushf
mov
xor
pop
(bad)
or
loope
popf
sbb
mov
ss
and
sar
or
mov
fistp
outs
cmps
adc
enter
cmp
scas
jl
jl
rol
mov
in
mov
or
xor
mov
mov
ins
es
inc
or
cmp
mov
icebp
xor
mov
pop
rcr
cmp
jge
and
cli
cmp
aad
(bad)
fistp
inc
stos
hlt
imul
pop
add
adc
nop
fsubr
aaa
jg
mov
loope
xor
shr
scas
cmp
test
fsubr
mov
cmp
add
jb
ins
sbb
retf
(bad)
mov
mov
cmp
jge
mov
aaa
pop
daa
add
cmp
mov
mov
fwait
sbb
xchg
or
shl
jmp
sub
xor
mov
push
aaa
mov
push
xchg
jle
jmp
xor
out
jno
dec
mov
mov
push
sbb
mov
iret
rcr
add
cli
movs
jb
movs
movs
scas
out
xor
add
imul
out
das
sbb
shr
jae
jnp
popa
lds
inc
ins
mov
das
rol
icebp
mov
cmps
mov
pop
or
outs
mov
in
test
outs
call
into
sti
push
mov
xchg
movsx
dec
inc
xor
inc
call
sub
mov
in
push
xor
pushf
mov
pop
mov
sub
into
push
jle
xchg
repnz
aam
(bad)
or
jo
pop
test
jg
ins
cmps
faddp
sbb
int3
xchg
sbb
mov
repnz
adc
fwait
adc
sub
int
cmp
pop
jne
in
popf
fistp
test
jmp
dec
dec
pop
cmps
push
mov
and
imul
pop
sar
cmp
sub
iret
or
jae
inc
iret
cmc
retf
stos
cdq
cmp
sub
cmp
xchg
and
(bad)
movs
jecxz
mov
and
and
add
or
and
aad
jbe
loopne
popf
test
xor
(bad)
xchg
fisub
add
mov
sbb
xor
loopne
mov
add
jne
pop
loope
(bad)
dec
enter
stc
xchg
adc
cmp
adc
fsubr
(bad)
dec
cld
mov
out
xor
pop
mov
retf
jo
sti
push
jge
test
lock
sub
outs
push
xor
add
bnd
dec
mov
jbe
mov
imul
call
repnz
push
cwde
mov
lods
loop
lods
dec
mov
pushf
jne
mov
jnp
dec
movs
xor
stos
add
dec
loop
pushf
mov
jns
xchg
add
xor
push
gs
inc
popa
in
pop
xchg
fcomp
bound
rcl
aas
lods
pop
fiadd
sub
dec
les
imul
or
frstor
xchg
ret
test
mov
das
popf
scas
test
pusha
out
jp
bound
je
jb
and
add
ja
mov
(bad)
in
dec
int3
sbb
or
sbb
dec
jno
sub
cwde
daa
cli
call
mov
add
pop
ja
dec
sub
cmp
fimul
(bad)
mov
xchg
mov
scas
test
xchg
int3
shl
outs
test
sub
dec
sahf
(bad)
cwde
hlt
mov
(bad)
cmp
jno
push
in
imul
mov
fisub
adc
shl
aas
mov
adc
pop
push
in
addr16
sub
ret
dec
aaa
gs
xchg
push
xlat
call
dec
push
(bad)
or
adc
retf
jnp
cld
lock
pop
xor
or
in
add
lds
xor
and
xlat
js
(bad)
xchg
loopne
es
imul
or
mov
clc
das
ss
int
jbe
or
jo
repz
pop
in
fiadd
(bad)
cmc
mov
xor
mul
fdiv
jnp
mov
xor
or
retf
neg
mov
out
or
pop
iret
(bad)
xor
xchg
mov
inc
hlt
jo
pop
mov
out
out
sub
dec
sub
popa
dec
inc
adc
add
jmp
mov
test
xlat
lods
pop
jns
call
or
jns
push
nop
adc
xchg
pop
scas
mov
popa
jecxz
cmc
xor
addr16
jmp
mov
movs
push
pop
pop
dec
pop
mov
mov
popa
leave
xchg
sub
mov
loopne
js
cmp
(bad)
jne
fcmovnu
imul
push
or
mov
pop
div
adc
mov
idiv
inc
ds
pop
jo
mov
js
idiv
das
popa
mov
stos
imul
in
pop
inc
jecxz
sbb
mov
pop
fdiv
inc
(bad)
sti
cmp
stos
xchg
jns
sub
fwait
sbb
out
dec
push
mov
in
and
stos
call
outs
inc
sahf
aaa
cmps
mov
icebp
push
jnp
cmp
jo
clc
stos
iret
xor
jg
and
dec
inc
xlat
add
mov
mov
adc
outs
xchg
test
inc
and
mov
mov
sub
mov
daa
xchg
outs
adc
cwde
sub
or
sbb
cmps
jb
scas
jae
xchg
inc
pop
push
push
js
mov
xor
inc
pusha
sahf
push
inc
ficom
call
dec
xchg
ror
pop
mov
stos
bound
js
or
mov
repnz
stos
out
add
mov
push
pop
adc
cs
adc
mov
fistp
and
sbb
es
out
sub
adc
push
adc
and
jecxz
jbe
mov
xor
call
outs
(bad)
(bad)
pop
jbe
or
mov
imul
dec
sub
rol
inc
scas
xlat
loopne
xchg
dec
mov
mov
jae
push
repnz
pop
push
xchg
jl
jae
out
mov
xchg
cmps
out
jle
xor
push
and
fldcw
sub
dec
dec
xchg
cli
shl
lods
add
lds
movs
scas
xchg
mov
pop
enter
test
mov
push
mov
dec
mov
nop
adc
mov
fwait
add
adc
loopne
movs
sar
mov
mov
call
sub
movs
pop
dec
jbe
popa
jmp
sti
cmp
js
mov
adc
pop
cmps
das
mov
cmc
jmp
cmps
es
lea
and
mov
rcr
retf
(bad)
mov
ret
mov
(bad)
sbb
push
adc
xchg
mov
pop
movs
pusha
inc
add
jg
mov
jp
pushf
mov
mov
pop
repz
xor
(bad)
daa
and
enter
ss
inc
pop
add
pop
fadd
aam
div
out
cld
push
jbe
push
sub
fisttp
xchg
int3
sub
pop
das
jmp
dec
add
sub
jge
popf
pop
pop
sbb
mov
ffree
dec
shl
dec
cdq
and
inc
div
and
imul
or
add
dec
idiv
repz
cmp
jp
mov
add
imul
movs
sbb
inc
xlat
inc
ret
shl
int
push
repz
jge
test
iret
fcom
lods
in
inc
popf
mov
push
cmp
outs
mov
dec
mov
in
sar
dec
ror
or
retf
xchg
int3
jb
jle
sub
ins
test
shr
shl
dec
cmp
add
jae
repz
pop
inc
mov
mov
ret
stos
xchg
mov
mov
jmp
enter
mov
xchg
pop
jbe
mov
stos
mov
push
mov
mov
fs
adc
xchg
in
jo
std
or
mov
lahf
(bad)
jge
subps
cmps
pop
hlt
mov
sbb
out
test
mov
(bad)
adc
cmps
inc
fwait
call
fld
sub
das
movs
cmp
sub
das
mov
fmul
lock
and
xchg
ins
sbb
sub
es
into
es
or
pop
sub
and
sbb
test
test
fstp
xchg
rcr
add
jb
das
or
sbb
mov
pop
inc
xchg
cmp
cmp
in
ja
popf
fist
xchg
imul
or
gs
in
sub
(bad)
arpl
cmp
mov
xchg
push
imul
mov
out
bswap
pop
adc
inc
push
pop
xor
enter
lds
dec
xchg
pop
push
add
mov
inc
pop
data16
and
xor
imul
sbb
mov
sub
dec
loopne
ds
cs
push
and
and
lock
js
push
sbb
pop
inc
test
and
dec
icebp
mov
pop
xchg
ins
mov
out
outs
and
inc
mov
stc
mov
inc
push
loopne
pop
into
div
mov
sub
aad
inc
inc
jne
pop
cmp
adc
cwde
sub
test
push
bound
outs
adc
sub
int3
mov
mov
mov
inc
dec
xor
outs
stos
jb
sbb
jns
cmp
dec
sahf
pop
(bad)
cdq
or
pop
into
daa
les
xchg
push
xor
sbb
jno
mov
nop
test
mov
mov
cmp
push
fist
(bad)
cmp
mov
push
mov
cli
in
test
fdiv
stc
inc
arpl
jp
add
mov
dec
mov
mov
aad
leave
xchg
clc
leave
cmp
daa
test
outs
jl
cdq
mov
pop
clc
sub
jne
(bad)
mov
pop
pop
xchg
ds
icebp
pop
jae
call
fstp
nop
jnp
push
pop
mov
shl
jns
pop
inc
mov
jecxz
out
mov
stc
xchg
adc
(bad)
xor
test
std
mov
push
sbb
ror
mov
mov
out
(bad)
dec
push
shr
push
(bad)
mov
and
int3
jmp
lock
pop
pop
fwait
std
mov
mov
and
adc
(bad)
es
jmp
leave
or
stc
clc
cmp
in
stos
cld
sub
jmp
jnp
fldenv
imul
and
mov
and
push
mov
jp
mov
pop
cdq
push
ret
dec
pop
add
add
aas
or
or
mov
test
clc
and
or
lahf
mov
inc
out
sub
mov
cmp
lahf
sahf
jnp
fnsetpm(287
inc
lods
imul
add
adc
push
push
sbb
and
aas
jge
mov
stc
out
mov
add
mov
inc
mov
repnz
bound
rcl
pop
sub
das
ins
dec
or
nop
ja
pop
cmp
in
cmp
adc
jns
(bad)
xor
inc
sbb
bound
inc
addr16
mov
lahf
add
dec
call
jp
cmp
push
mov
mov
push
cmp
pop
(bad)
push
dec
mov
cwde
cli
jmp
je
add
xchg
dec
dec
mov
xor
xchg
adc
ins
jno
or
xchg
sub
jo
scas
and
fdiv
jno
sbb
mov
jbe
fiadd
cmps
outs
mov
test
inc
int3
gs
(bad)
inc
xor
cmp
dec
aas
pop
mov
repnz
loop
push
jno
push
pop
sbb
xchg
jnp
arpl
mov
shl
dec
jne
imul
imul
retf
fld
retf
in
xchg
lahf
jb
push
add
fstp
es
sbb
mov
pop
shl
pop
(bad)
and
enter
or
xor
xlat
inc
cmp
loop
push
and
pop
dec
mov
loop
cmp
mov
push
int
(bad)
out
pop
jle
add
(bad)
cdq
mov
push
mov
(bad)
les
shl
lahf
cmp
mov
pop
mov
test
push
nop
cmp
pop
fsub
ds
dec
push
gs
push
cmc
ss
sbb
and
jns
jl
popa
pop
fidiv
idiv
dec
rol
jnp
in
stc
aas
and
add
cli
jnp
test
aam
cmp
lahf
or
dec
sahf
and
bound
xor
sahf
push
push
sbb
gs
xor
jnp
in
pushf
popa
imul
inc
mov
imul
in
mov
mov
cwde
inc
cmps
add
outs
test
stos
int3
lea
sar
(bad)
pop
int
mov
and
xchg
adc
mov
add
cmc
jbe
pop
popa
outs
mov
add
lahf
dec
cmp
test
inc
sbb
sbb
inc
pop
add
arpl
bound
jp
mov
pop
fist
jae
adc
mov
sub
in
mov
sbb
sar
cmp
sbb
pusha
mov
mul
repnz
test
in
rcl
leave
les
loopne
lds
xchg
adc
stc
aaa
ja
mov
or
push
mov
mov
add
jecxz
cwde
aam
aam
inc
stos
and
sbb
retf
mov
(bad)
stc
cmp
add
mov
jo
neg
mov
pusha
jl
push
mov
add
gs
call
ja
push
pop
and
in
cli
addr16
sbb
adc
lods
lahf
jmp
mov
sbb
out
pop
sbb
cli
bound
push
fimul
mov
ins
mov
and
dec
adc
or
sbb
and
scas
sub
in
and
int
inc
popf
mov
icebp
mov
xchg
mov
xchg
lods
inc
push
lea
dec
not
and
xor
(bad)
mov
or
hlt
push
xor
aas
add
xor
popf
mov
pop
cld
inc
jecxz
push
mov
dec
cmp
dec
into
repz
adc
pop
(bad)
push
jns
lds
cld
cmp
lahf
push
jmp
or
inc
push
or
mov
fsubr
jge
jmp
xchg
popf
fs
test
jno
in
xor
xchg
loop
cdq
cmp
adc
dec
sbb
inc
inc
pop
lods
lods
pop
(bad)
mov
mov
xchg
cmp
fcmovbe
cmp
out
mov
in
jge
lds
pop
std
cmp
dec
or
mov
inc
pop
add
enter
sbb
call
inc
ja
imul
mov
es
ror
add
push
xor
sub
inc
mov
pop
gs
jno
clc
sahf
stc
pop
mov
ins
imul
call
dec
mov
xor
dec
mov
out
mov
leave
jnp
sbb
cld
(bad)
repz
or
mov
not
data16
add
dec
add
ffree
xlat
icebp
mov
call
jmp
aad
sbb
dec
aas
psubsw
pop
daa
stc
pop
cld
(bad)
mov
fnsave
dec
test
in
mov
add
out
or
xchg
sbb
in
mov
enter
repnz
setnp
or
xor
movs
inc
aad
pop
mov
aad
(bad)
out
loope
retf
(bad)
(bad)
pop
iret
jb
mov
retf
repz
or
xor
mov
cld
mov
outs
cmps
mov
mov
leave
into
cmp
xor
and
iret
push
sbb
(bad)
test
or
jb
mov
retf
iret
sbb
pop
sahf
pushf
mov
or
sub
pop
hlt
dec
imul
aad
push
xchg
std
mov
mov
or
out
xchg
jb
not
jge
jbe
jg
push
sahf
addr16
fldcw
jecxz
mov
mov
mov
xlat
adc
pop
push
movs
dec
inc
add
fldl2e
movs
mov
jg
push
mov
xor
add
add
es
mov
pop
adc
sbb
xchg
xor
stos
ins
out
mov
pop
rcl
hlt
mov
add
shl
(bad)
mov
stos
ret
adc
cdq
cmp
popf
mov
add
bound
lods
dec
inc
and
adc
(bad)
aad
ss
xchg
push
fcomp
push
fisubr
shl
das
mov
popf
shl
scas
call
lods
push
ror
cmc
ins
xchg
sbb
jno
jae
mov
xchg
ins
scas
push
inc
xchg
mov
cmp
ins
xchg
mov
or
jmp
pop
out
push
pop
xacquire
(bad)
ja
jl
(bad)
out
icebp
shl
fistp
inc
push
dec
(bad)
ins
mov
leave
dec
daa
mov
sbb
xor
inc
or
mov
push
push
(bad)
push
mov
fmulp
sub
sahf
inc
mov
add
pop
dec
loopne
xchg
mov
lock
add
sub
lds
sbb
loop
es
xor
add
jb
hlt
xlat
les
sub
leave
pop
xchg
cwde
outs
or
mov
or
mov
mov
ja
pop
sub
in
imul
call
xchg
je
jbe
sahf
clc
aad
cmp
repz
mov
push
dec
ja
mov
mov
lock
ss
jp
daa
loope
imul
dec
adc
shr
and
out
lods
in
movs
sub
call
xchg
out
(bad)
call
dec
jmp
dec
movs
cdq
inc
inc
mov
dec
hlt
das
jmp
add
das
cmp
push
jno
and
dec
mov
jle
dec
xlat
mov
clc
loope
lods
out
mov
(bad)
stos
shl
fdiv
out
out
cld
or
xlat
and
lds
lds
inc
bound
or
xor
sbb
test
mov
jl
aas
xchg
ret
jmp
or
dec
das
sbb
loope
loope
ins
mov
ins
pushf
or
mov
retf
mov
adc
pop
div
push
call
cmc
add
and
sahf
ss
ds
(bad)
fisttp
in
jecxz
inc
int
test
call
lds
aam
gs
in
inc
(bad)
shr
jbe
mov
dec
pop
nop
dec
mov
xor
sbb
ds
push
sbb
sub
test
mov
mov
push
mov
push
out
jb
icebp
jae
mov
sbb
stc
xlat
push
push
stos
(bad)
mov
cli
lock
jnp
repnz
add
or
stc
jno
mov
aad
adc
dec
push
cwde
and
pop
punpckhwd
call
cld
data16
aas
add
adc
or
rol
test
sub
inc
popf
jp
adc
addr16
dec
inc
dec
clc
push
cli
jae
shl
shl
movs
movs
or
aad
xchg
cmp
jnp
ss
iret
ds
fisub
jle
div
retf
sbb
in
fcomp
leave
jmp
retf
or
push
inc
loope
cmp
mov
fdivr
ss
sub
(bad)
or
bound
shr
aaa
push
rcl
mov
adc
dec
mov
jmp
arpl
dec
pop
pop
xchg
mov
call
cmp
dec
lea
int
shr
ror
mov
pusha
sub
cmps
inc
push
lods
push
imul
add
xchg
cdq
cmp
test
add
psrad
or
or
out
ret
test
jle
adc
popf
xor
(bad)
mov
inc
cmp
mov
xor
sbb
xor
push
pop
ja
and
cmp
ss
inc
div
stos
popa
and
(bad)
(bad)
test
push
out
sub
sbb
mov
and
or
pop
(bad)
xchg
loopne
jmp
xchg
outs
std
jecxz
les
sub
bound
(bad)
outs
jne
sub
add
rol
mov
cwde
cmps
pop
(bad)
add
in
int3
daa
ins
rcl
loop
or
mov
push
and
mov
stos
pop
lock
cmp
ins
jnp
ins
add
push
mov
mov
call
addr16
adc
fild
js
(bad)
jl
hlt
jns
cmc
push
leave
push
push
xchg
sar
dec
xchg
inc
dec
test
and
or
outs
xchg
pop
movs
pcmpeqw
xchg
int3
ficomp
ret
cmp
stos
cli
pop
out
mov
or
icebp
mov
jbe
pop
cmps
inc
dec
jno
std
stos
xchg
pop
jo
(bad)
cld
fadd
scas
xor
mov
ret
mov
adc
(bad)
fdivr
pop
mov
test
js
pop
and
stos
mov
sub
mov
pop
dec
jmp
dec
xchg
neg
fimul
inc
mov
and
mov
fcomp
mov
sti
jmp
(bad)
or
jg
push
jp
out
loop
inc
lds
(bad)
pop
test
lock
daa
jmp
and
bound
push
pop
xchg
std
into
lea
(bad)
into
or
pop
mov
and
sbb
inc
lds
mov
mov
es
mov
shl
xchg
test
fldcw
and
cmc
pop
xchg
jb
dec
pop
pop
sar
jecxz
stos
movs
pop
fld
popa
pop
xchg
inc
out
mov
hlt
mov
jge
cdq
movs
stos
(bad)
outs
mov
pop
repz
or
retf
stc
sbb
xchg
push
std
(bad)
loope
jno
pop
xor
hlt
jle
push
push
push
mov
pop
imul
inc
sub
mov
mov
sbb
and
repnz
dec
es
inc
aad
sar
add
shl
loop
push
(bad)
(bad)
xlat
lds
outs
les
pop
add
cwde
fldcw
(bad)
pop
imul
xbegin
test
addr16
push
loopne
sbb
gs
cmp
push
sub
sub
adc
arpl
cdq
sub
ja
jae
cmovle
xchg
enter
inc
repz
mov
in
sahf
jns
jmp
push
ins
adc
cmps
stos
jle
push
adc
test
stos
add
jno
cmp
enter
stos
fstp
mov
pushw
into
jo
pop
dec
xchg
mov
retf
outs
jb
xchg
add
fdivr
ds
dec
retf
mov
stos
retf
test
ins
js
dec
test
ss
pop
dec
cdq
dec
cmp
pop
xor
sub
rcr
push
mov
inc
fimul
mov
daa
xchg
add
inc
pop
daa
xor
retf
fcmovu
popf
xchg
add
daa
adc
into
or
dec
pushf
or
cmps
mov
scas
retf
mov
je
js
arpl
movs
(bad)
shr
push
gs
xor
pop
nop
mov
sub
test
xchg
stc
cli
call
ror
cmp
inc
es
ficomp
xchg
jmp
pop
test
inc
cmc
jmp
ins
and
jl
jne
outs
jb
xor
mov
lds
jns
adc
sbb
div
jle
xchg
jge
add
mov
retf
rol
imul
adc
or
pop
enter
xchg
jmp
push
xchg
out
sti
fs
sbb
ror
mov
pop
(bad)
cs
cmps
iret
push
pop
scas
jo
rcl
sub
dec
hlt
sahf
imul
mov
ds
sub
mov
sub
jecxz
bound
pop
pusha
dec
(bad)
jne
rcl
out
fcmovnu
adc
push
inc
mov
sub
xchg
outs
ds
mov
sub
(bad)
in
push
repnz
outs
adc
push
in
mov
repz
cmp
pop
iret
pop
xor
leave
icebp
push
lds
fstp
adc
adc
jno
xchg
push
lock
mov
dec
in
test
test
push
(bad)
fstp
dec
(bad)
cmp
movs
cld
pop
fiadd
jge
xlat
mov
sbb
jb
lds
enter
in
push
arpl
outs
sub
sti
cwde
repnz
mov
mov
xchg
push
popf
xchg
xchg
mov
clc
into
loop
pop
push
arpl
in
fs
jb
and
outs
cmc
retf
inc
push
sti
mov
aam
or
outs
jno
js
test
scas
int
in
fsubrp
data16
shl
int
mov
mov
imul
adc
or
jae
sbb
push
or
sub
mov
pop
aam
iret
inc
not
in
ret
(bad)
adc
nop
dec
outs
and
xor
fld
xor
(bad)
jb
and
mov
(bad)
mov
(bad)
push
jmp
mov
in
mov
xor
loope
dec
or
div
retf
fisttp
or
inc
cmp
xor
das
and
aam
fcom
mov
ret
sbb
mov
xor
jle
jmp
je
push
sahf
cmp
cld
sbb
mov
sbb
pxor
mov
icebp
imul
fwait
imul
lods
fwait
add
(bad)
stc
xchg
and
seto
sub
sub
sub
cli
das
in
xchg
sbb
jle
or
pop
pop
repnz
push
iret
int3
call
mov
push
es
loope
inc
and
sub
xchg
jne
cli
sub
in
dec
ss
adc
retf
int
dec
push
jle
mov
jne
xor
jne
ss
in
popf
dec
fcomp
push
xchg
or
icebp
inc
mov
pop
inc
ror
push
call
es
dec
mov
jmp
pop
cmp
mov
mov
xor
sub
popa
imul
aad
dec
push
mov
arpl
test
adc
jo
lods
arpl
stc
js
dec
in
stc
cmp
xor
jge
out
pop
inc
inc
dec
pop
icebp
ror
test
adc
loop
cdq
or
mov
in
push
sub
jo
jg
imul
sub
add
in
movs
xor
xchg
fwait
fwait
cmp
push
jnp
xor
stos
neg
test
adc
nop
call
xchg
pop
in
in
add
adc
pop
icebp
es
jmp
bound
and
xor
sbb
or
outs
rcr
dec
adc
push
aaa
clc
cs
std
icebp
ss
ins
js
jmp
in
add
xchg
(bad)
imul
int3
xor
test
adc
test
xchg
imul
int3
dec
(bad)
repz
add
pop
jmp
jbe
loopne
adc
cmp
sbb
dec
cld
mov
addr16
repz
cmps
jmp
pushf
add
dec
cmp
xchg
in
imul
pop
(bad)
xlat
push
outs
jns
and
jecxz
(bad)
jmp
pop
lods
lods
mov
push
pusha
xor
loope
xchg
icebp
mov
mov
popa
mov
mov
and
mov
xor
sbb
push
movs
scas
in
(bad)
dec
or
dec
pop
inc
paddsw
mul
inc
pop
movs
jno
and
sbb
jl
rcr
dec
dec
sub
sbb
cdq
dec
repz
sub
fcom
shr
and
and
iret
sub
inc
sbb
inc
fldenv
mov
cmp
scas
push
dec
cld
mov
cmp
jg
icebp
pop
cmp
add
jge
(bad)
lods
inc
nop
sahf
mov
add
movs
out
sbb
retf
cmp
je
pushf
inc
inc
jb
mov
dec
lock
cmp
xchg
inc
xor
loop
scas
enter
leave
out
xchg
fucomi
adc
loopne
imul
clc
gs
xchg
scas
lahf
dec
mov
and
mov
enter
push
loop
push
push
les
adc
enter
lods
xstore-rng
cmps
inc
mov
(bad)
stc
je
(bad)
and
mov
mov
out
movs
jp
ins
mov
pop
aas
loopne
gs
xchg
sub
jbe
fdivr
in
cmp
xor
ret
mov
fisub
cmp
push
xor
push
dec
cmp
mov
jle
fsubrp
jl
test
sub
lahf
mov
mov
push
nop
js
(bad)
xor
ret
and
pop
stc
xchg
sub
movs
fdiv
pop
adc
loopne
popa
lahf
sub
popf
mov
cmp
cmp
cmc
and
scas
cmp
sub
mov
dec
loope
std
sub
idiv
jg
push
xchg
xlat
mov
adc
sbb
or
push
imul
call
inc
(bad)
cli
cdq
inc
cld
ins
cmps
xor
add
sbb
xchg
push
lahf
ror
(bad)
adc
rcr
sbb
mov
scas
jbe
adc
stos
add
fist
pop
mov
mov
imul
inc
inc
fs
pop
xchg
push
dec
(bad)
pop
jno
arpl
cmps
dec
mov
cwde
jae
popa
cmp
pxor
push
loop
push
inc
or
adc
cmp
or
pop
leave
inc
bound
pop
retf
mov
rcr
cmc
jmp
retf
fwait
loop
push
adc
xor
test
adc
xchg
stos
imul
jmp
ja
fsub
xchg
adc
jae
xor
push
push
loope
add
xchg
out
and
out
pop
mov
outs
and
loopne
pop
mov
or
xchg
data16
addr16
cmp
jl
into
sbb
repnz
sbb
mov
add
clc
fbld
aam
mov
test
call
popa
fsub
sbb
(bad)
fld
movs
(bad)
shl
cmp
xchg
scas
add
mov
inc
ins
mov
mov
sbb
add
out
movs
fst
retf
fldenv
push
sbb
mov
ficomp
xchg
pushf
mov
cs
repnz
add
fld
sub
and
jmp
cld
test
pop
rcl
adc
jecxz
enter
cdq
loopne
fistp
repz
sbb
lahf
leave
mov
pop
movs
aad
and
jge
test
aad
and
cdq
mov
push
(bad)
xor
push
xor
cld
pushf
pop
jo
push
xlat
fadd
dec
cmp
loope
push
xor
mov
fs
mov
js
add
push
fdivr
or
adc
push
neg
adc
fld
mov
inc
xor
outs
add
mov
pop
call
add
or
aam
int
xchg
xchg
pop
mov
add
push
inc
movs
push
xchg
jnp
pop
dec
xchg
out
in
dec
ins
fnstsw
fdivr
mov
bound
arpl
shl
in
add
test
fwait
or
sbb
xchg
pop
aam
dec
retf
ret
(bad)
stos
cmp
push
xor
xchg
scas
and
stc
out
mov
icebp
pop
nop
enter
movs
mov
adc
mov
adc
icebp
or
adc
push
(bad)
xchg
inc
sbb
nop
pop
retf
mov
repnz
mov
test
test
xor
mov
xchg
sub
fs
mov
dec
jl
shl
sub
xchg
jmp
sub
dec
test
xchg
loopne
push
jge
test
sbb
fs
lods
mov
mov
sbb
int
cmps
fisttp
stos
fcmovnbe
addr16
and
dec
pop
inc
mov
cmp
ret
pop
into
push
mov
fdivr
outs
ds
cmp
cli
sub
call
retf
outs
ret
cmp
pushf
cs
jae
sbb
inc
adc
shl
data16
call
xor
pop
leave
nop
jl
inc
inc
(bad)
retf
fisubr
outs
mov
sub
loopne
jge
inc
ds
pop
inc
shr
aam
sub
and
test
movs
adc
jno
dec
add
cmps
call
jmp
rcl
std
cmp
xchg
popf
pop
rcr
mov
mov
ss
mov
or
jns
adc
outs
xor
mov
test
xchg
enter
mov
jp
sbb
jno
mov
cmp
test
cli
xchg
dec
bound
dec
mov
adc
dec
lea
outs
fsub
sar
sbb
sub
and
cli
les
shl
cwde
push
xchg
arpl
gs
imul
and
cmp
(bad)
leave
jns
int3
aaa
mov
imul
jae
jnp
push
(bad)
lds
or
adc
add
jns
mov
xor
or
jae
das
rcl
inc
pop
mov
pop
cs
iret
mov
js
mov
and
stos
mov
(bad)
sbb
je
fwait
fs
(bad)
in
adc
dec
jmp
out
or
pop
popf
sbb
shl
sub
stc
imul
fdivr
out
arpl
loop
(bad)
or
ror
push
retf
je
xchg
fild
pushf
daa
jmp
jl
fs
pop
inc
ret
test
adc
aas
repnz
mov
mov
mov
add
and
outs
pop
fisubr
pop
jb
inc
pop
lds
sahf
jae
ds
or
cmovne
and
(bad)
mov
push
outs
pop
pushf
mov
aas
pop
cmp
aas
and
loopne
add
mov
mov
jnp
push
xchg
and
and
into
pusha
lods
pop
mov
push
(bad)
dec
xor
dec
imul
and
sti
add
mov
fcom
dec
pop
and
pop
and
push
movs
cwde
scas
and
pushf
sub
xor
pop
retf
push
loope
sub
push
pop
aaa
pusha
and
lock
xor
rcr
iret
ins
(bad)
icebp
into
mov
rcr
mov
call
movs
jecxz
out
std
shr
push
leave
hlt
dec
cld
fwait
out
push
pop
pop
mov
out
pop
scas
shl
iret
iret
scas
scas
call
cld
cmp
push
lods
and
sahf
mov
popf
jb
lock
xor
daa
add
or
popa
or
push
sbb
adc
sbb
and
dec
dec
outs
and
mov
xor
jl
push
fsub
adc
test
and
and
adc
push
pusha
dec
push
and
and
div
xchg
cs
jmp
mov
adc
pushf
sbb
pause
into
cmp
repz
mov
pop
loope
imul
loopne
add
inc
jb
ror
xchg
jp
dec
jp
cmc
fcmovnb
xchg
jo
int3
out
test
call
ficom
jne
xchg
dec
test
jne
movs
and
fild
lea
adc
xchg
pop
sbb
ror
call
call
loopne
outs
stos
sub
in
dec
adc
adc
mov
(bad)
inc
(bad)
cmp
hlt
das
push
jo
dec
les
push
dec
or
mov
int3
mov
lss
mov
cmp
push
mov
(bad)
test
popf
adc
push
ror
xor
lahf
or
xor
bound
or
and
cmp
fmul
pop
push
dec
out
sub
mov
push
xchg
cwde
sbb
pop
mov
aad
push
push
sbb
(bad)
movs
mov
mov
xor
xor
sbb
pop
sar
inc
stc
sbb
mov
adc
xlat
not
or
mov
and
sub
pop
adc
or
sti
imul
mov
push
jbe
out
gs
mov
pop
into
inc
fnstcw
sahf
xchg
jl
in
arpl
mov
icebp
mov
iret
lods
jnp
test
lahf
sar
iret
push
mov
jns
mov
retf
adc
rcr
out
ret
bound
cdq
xchg
mov
sar
test
in
push
fistp
je
xor
dec
fimul
sbb
push
mov
ins
mov
sub
sub
scas
scas
jle
pop
pop
int3
mov
rcr
xchg
push
jbe
stc
xchg
hlt
mov
xchg
mov
retf
popa
mov
cli
adc
ss
mov
test
repz
aam
jmp
repz
cwde
xlat
pop
stos
or
movs
(bad)
rcl
xor
sub
retf
sar
mov
daa
cmps
out
cwde
mov
jle
js
fld
inc
mov
in
adc
cmp
cmp
scas
push
es
push
mov
(bad)
jmp
rol
es
in
mov
inc
je
mov
out
and
inc
popf
xchg
shl
rol
pop
cmp
cmp
popa
push
inc
stos
dec
popa
ror
enter
lods
and
lods
out
pop
arpl
out
adc
fdiv
iret
push
loope
adc
or
in
idiv
nop
test
sub
pop
jno
mov
cmps
jnp
cmp
out
sbb
dec
lds
push
push
je
js
ds
mov
call
movs
push
jp
rol
mov
dec
fmul
mov
test
cmc
hlt
mov
xor
das
(bad)
js
jns
jp
dec
sub
bound
and
addr16
scas
mov
jecxz
inc
jge
or
popa
mov
(bad)
js
movs
je
jo
jmp
lods
das
sub
scas
xchg
dec
movs
adc
xor
sar
push
ss
fistp
pop
add
cmp
outs
xor
mov
push
mov
fadd
pop
inc
popa
push
mov
xor
aam
std
movs
pop
inc
mov
push
loop
push
xor
sysenter
dec
sub
fldcw
imul
add
cld
mov
inc
repz
iret
bound
es
retf
add
push
inc
and
sbb
mov
inc
std
mov
mov
sbb
repz
pop
push
ret
clc
sbb
cmp
jl
inc
js
lahf
outs
dec
xor
lock
movs
or
jp
dec
jle
sbb
ds
sbb
rcl
fs
push
into
xchg
(bad)
push
xor
lock
jmp
movs
or
xlat
loope
cmp
in
shl
mov
(bad)
jecxz
and
push
push
inc
lea
call
mov
pop
fs
popf
adc
cmps
xor
out
mov
gs
inc
jae
rcl
pop
adc
call
in
pop
or
sub
xor
shl
repz
pop
pop
ins
pusha
and
dec
mov
or
in
or
jb
mov
iret
je
aas
loope
pop
jb
lods
inc
inc
fdivr
push
jnp
sub
call
sti
pop
sahf
or
mov
inc
cmp
pop
mov
push
inc
jns
and
and
and
adc
clc
ins
push
jbe
shl
pop
or
arpl
push
movs
push
mov
outs
sub
cmp
sub
pop
sbb
dec
pushf
inc
cli
push
add
add
adc
loop
sub
jmp
out
int3
fsubp
dec
and
adc
xchg
push
mov
mov
das
jae
sbb
imul
adc
leave
add
enter
fimul
mov
jne
and
outs
xchg
hlt
aad
jp
inc
ja
jmp
mov
adc
shr
imul
mov
xchg
fistp
xchg
sub
repnz
loopne
leave
sbb
shr
xor
cmp
call
icebp
inc
leave
and
inc
mov
sub
inc
test
frstpm(287
push
jge
outs
retf
popa
dec
loopne
(bad)
jmp
inc
inc
lods
push
xchg
(bad)
sar
ret
xor
sub
mov
bound
mov
mov
push
pop
jns
std
push
out
dec
ret
adc
mov
mov
sub
inc
and
test
sbb
aas
jo
adc
mov
pop
int3
(bad)
in
jmp
jp
mov
nop
add
es
loope
shl
cmp
dec
push
pop
iret
xor
mov
popf
mov
xchg
sti
retf
sub
adc
jl
xchg
repnz
and
jne
aas
and
retf
xor
and
cmc
jmp
(bad)
adc
pop
loope
sub
(bad)
jecxz
add
pop
shl
add
sub
fwait
mov
pusha
and
or
xchg
or
aad
inc
sub
movs
pop
ror
add
mov
and
sub
imul
idiv
cmp
fst
sub
dec
leave
les
sub
jne
or
adc
and
int
dec
add
xchg
sub
(bad)
xor
and
push
adc
dec
mov
or
fld
xchg
call
js
fild
push
fistp
hlt
pusha
xchg
add
stos
and
rol
loop
fs
add
xchg
rcr
push
shl
add
enter
int
jecxz
lock
sbb
cmp
inc
inc
out
mov
addr16
add
iret
fmulp
gs
jno
jb
dec
test
add
mov
xor
ins
addr16
cmp
(bad)
xor
sahf
fcmovb
outs
mov
sbb
icebp
xchg
and
gs
push
push
lds
mov
sbb
inc
and
cmp
cmps
outs
pop
jno
fnop
cmps
in
daa
loopne
sbb
add
jle
out
icebp
das
cmp
test
jle
retf
push
inc
ins
dec
pop
lods
cmp
ins
add
in
xlat
fucomp
and
add
jae
xchg
rcr
sub
xchg
ins
clc
pop
add
inc
inc
(bad)
lock
js
dec
add
bnd
call
dec
aad
push
pop
enter
cmp
push
sub
push
adc
xlat
sbb
xchg
mov
xor
mov
jnp
scas
xor
imul
sar
adc
jmp
test
or
call
ds
aaa
call
pop
mov
into
mov
fstp
add
jle
add
xlat
push
(bad)
push
mov
mov
jg
or
mov
xor
dec
ficomp
aad
jo
sub
lea
pop
or
(bad)
das
in
mov
popf
iret
add
add
xchg
(bad)
mov
mov
cdq
mov
aas
loopne
sub
pop
ret
mov
push
and
js
or
lods
leave
loope
inc
adc
xlat
cmp
fcomi
fidiv
pop
jae
scas
bnd
mov
jecxz
push
fmul
mov
out
movs
jecxz
dec
jge
pop
(bad)
cmp
add
sub
push
push
sbb
repz
mov
mov
les
loope
xchg
pushf
mov
xor
cmp
fcomp
mov
call
retf
test
sbb
sbb
popf
(bad)
push
sbb
adc
push
mov
jg
jo
jle
psrlw
dec
mov
cmps
pop
imul
mov
fisub
aas
push
cmps
rcr
pop
cdq
sbb
jle
sbb
mov
xchg
mov
push
xor
dec
xchg
ror
mov
inc
inc
das
sbb
push
sbb
adc
cmp
inc
outs
(bad)
sub
mov
xlat
retf
mov
dec
sahf
mov
sar
xor
push
push
mov
pushf
mov
add
rcr
add
movlps
shl
shl
pop
into
add
push
cmp
xchg
jp
jnp
nop
jae
mov
scas
aaa
xor
pop
dec
outs
push
xchg
xor
mov
movs
push
or
fbstp
mov
ficomp
imul
xor
or
test
pushf
adc
xchg
dec
ss
dec
fstp
jne
jns
mov
cmp
jecxz
pop
dec
div
ins
dec
push
add
push
into
xchg
jle
ins
or
or
mov
xchg
jae
sbb
adc
jae
jp
sbb
adc
push
call
inc
in
inc
not
sub
push
loopne
xchg
fadd
jmp
push
sub
jbe
pop
mov
xor
fisub
xchg
or
cmp
fild
pop
ss
ds
sahf
xor
(bad)
push
adc
or
push
scas
jg
outs
ins
fiadd
icebp
push
mov
mov
ja
push
push
sti
pop
push
in
jbe
jmp
mov
ficomp
xor
ins
sahf
cmps
mov
clc
jecxz
inc
add
sti
in
frstor
fnsave
sahf
clc
sub
cmp
xchg
push
lods
push
jg
xchg
neg
xchg
mov
sub
sbb
(bad)
aas
sub
aaa
xchg
add
sub
ret
sub
xchg
leave
ror
xor
and
gs
sbb
jg
call
push
and
sbb
loop
jae
jo
sbb
pop
jg
and
clc
sbb
sti
xor
ror
mov
dec
aaa
es
mov
sar
leave
sub
cmp
cdq
inc
je
fcom
ins
add
lock
mov
pop
js
sub
mov
aad
pop
sbb
push
xor
sti
retf
pop
pop
neg
or
adc
xor
dec
call
mov
jns
out
jne
and
fwait
arpl
mov
push
test
sbb
stos
mov
and
push
aas
sub
fidiv
sub
(bad)
pop
push
push
mov
scas
mov
pop
pop
jg
xchg
fst
call
jae
call
loop
retf
retf
xchg
addr16
loope
loop
neg
dec
sub
cmp
pop
xor
(bad)
ja
iret
ja
jb
dec
pop
lahf
xchg
cmp
pop
dec
jb
or
cmp
xor
sub
xchg
lock
pop
aaa
test
and
das
cdq
outs
jg
jl
pop
cmp
mov
add
(bad)
aaa
mov
cmp
jmp
adc
stos
sar
lds
aam
xor
dec
or
inc
xchg
mov
push
fild
mov
add
es
sti
mov
shr
les
stos
ficom
test
sbb
push
mov
inc
aad
hlt
ret
(bad)
imul
push
jbe
jo
ja
jge
dec
imul
cld
adc
ds
js
out
inc
out
push
arpl
sbb
pushf
cmp
jge
sub
sub
daa
mov
xor
mov
out
dec
jnp
push
push
test
ins
test
cmp
jp
pushf
lahf
retf
pop
dec
inc
xor
cs
xchg
xchg
mov
sbb
fsubr
and
mov
call
and
cmp
adc
stc
jecxz
out
xor
ss
shr
add
inc
ins
neg
dec
mov
push
jmp
imul
repz
mov
inc
push
xlat
icebp
jecxz
xor
push
xor
and
mov
movs
dec
popf
(bad)
addr16
test
(bad)
fsub
xchg
repnz
push
sub
cmps
jmp
popf
std
push
adc
sbb
or
in
mov
cmp
aaa
mov
adc
lock
scas
ins
or
outs
sbb
cmps
inc
cmp
cwde
iret
nop
mov
xchg
mov
fmul
das
inc
push
leave
add
jno
or
xchg
inc
inc
sbb
leave
mov
adc
cmp
push
dec
int
cmp
xchg
out
ret
jmp
ror
and
xchg
inc
push
add
mov
jmp
mov
mov
xlat
loope
cmps
push
cmps
mov
fxch
jecxz
jl
das
sub
jecxz
sub
or
jl
xchg
add
xor
or
inc
mov
dec
mov
cmp
pop
jo
mov
shl
hlt
xchg
push
pop
jl
sub
mov
pop
pop
movs
pop
xchg
call
mov
add
mov
push
movs
daa
dec
xor
push
jl
imul
loopne
xchg
pop
hlt
stos
pop
jnp
push
jbe
das
sbb
ret
lahf
ja
leave
jne
out
hlt
rol
(bad)
loopne
in
fsubr
inc
ret
push
dec
xor
xor
sbb
movs
mov
fidivr
mov
inc
je
popa
jle
mov
jmp
loope
xor
mov
cmps
in
sub
call
jmp
mov
mov
push
sbb
pop
and
mov
sbb
jge
mov
jmp
movs
xchg
cmps
sbb
pop
pop
xlat
pushf
adc
lds
or
inc
pop
test
cmp
push
test
cli
pop
sub
mov
aaa
mov
iret
jp
outs
gs
pop
pusha
in
push
pop
imul
jb
xor
mov
mov
xchg
lds
sub
sbb
xchg
cmp
mov
mul
push
jecxz
into
cs
mov
cmp
xlat
pop
xchg
sub
sbb
fdivr
(bad)
sbb
cwde
sti
daa
pop
iret
ins
aam
fild
cmp
adc
gs
cmp
or
jle
mov
jle
cdq
in
nop
mul
xchg
outs
jmp
xor
mov
fadd
lds
mov
test
pop
out
mov
ret
leave
shl
xchg
sahf
frstor
lods
xor
or
lea
sbb
mov
stc
mov
jge
sbb
jo
pushf
shr
jbe
or
pop
and
adc
bound
mov
mov
fmul
hlt
sub
cdq
xchg
loop
xchg
test
xor
cmps
sub
push
lods
fdivr
push
xor
bound
sahf
mov
in
es
dec
(bad)
leave
xor
lds
mov
ret
sbb
bound
mov
sar
adc
jb
pop
sar
adc
stos
pop
cmp
mov
pop
or
mov
inc
and
std
mov
xchg
mov
stos
das
push
xchg
fsubr
retf
sbb
jmp
sub
aaa
and
enter
clc
push
or
test
idiv
adc
cmp
in
loop
out
jmp
push
js
jmp
jmp
and
fcmovnb
push
data16
(bad)
(bad)
sti
inc
cmp
cmps
xor
cmp
out
push
daa
adc
jmp
cmp
pop
cmp
aad
outs
xlat
popa
and
push
add
aas
pop
fstp
pop
aad
mov
or
stc
push
fwait
into
fcomp
cwde
mov
ins
gs
xchg
and
adc
fwait
data16
outs
push
popf
fcmove
or
test
xlat
sbb
dec
std
push
inc
imul
in
repz
lea
sub
das
add
hlt
js
addr16
(bad)
jg
ret
repz
push
cmps
not
dec
loopne
xor
mov
mov
mov
aad
(bad)
lods
out
mov
in
jae
mov
test
xchg
push
adc
movs
pop
mov
test
mov
add
or
and
and
dec
movs
adc
inc
sbb
sbb
repnz
outs
xor
pop
pop
jcxz
scas
pop
cmp
mov
movs
mov
jge
dec
cmp
mov
js
push
jge
push
sub
rcr
(bad)
xor
mov
sub
adc
ins
sbb
cmp
je
inc
sub
ss
cmps
sbb
fmul
test
jne
sub
bound
rcl
adc
in
mov
movs
fadd
ja
cs
(bad)
rol
mov
adc
(bad)
lods
cmp
or
das
dec
aam
retf
add
push
dec
nop
in
test
outs
lds
mov
outs
test
hlt
in
or
add
retf
out
adc
ret
fimul
loope
bound
cli
retf
dec
clc
cmp
mov
stos
adc
mov
daa
scas
xchg
fldenv
(bad)
out
popa
mov
push
jb
sbb
xor
xchg
jmp
and
hlt
mov
stos
push
fs
enter
xor
(bad)
into
jle
scas
stos
ret
dec
je
push
sahf
mov
inc
mov
jl
inc
adc
add
pushf
fisubr
sti
movs
add
outs
ss
mov
pop
push
idiv
fcomp
ror
imul
mul
cdq
call
mov
mov
les
fs
pusha
pusha
xchg
fstp
cli
pop
clc
and
mov
push
push
fisubr
mov
(bad)
sub
xor
popf
loop
div
test
bnd
and
adc
sub
xchg
cmp
cli
(bad)
sbb
push
or
(bad)
test
mov
out
das
cmc
loop
mov
sti
fdivr
mov
loope
loopne
jmp
gs
jg
xchg
(bad)
popa
sub
push
pop
inc
or
push
sub
ret
jo
push
cld
stos
cmps
sub
and
xchg
enter
sub
add
pusha
pop
icebp
or
cmp
adc
test
and
dec
popf
repnz
xor
sbb
ins
mov
fcom
mov
outs
adc
mov
sub
xlat
add
dec
jbe
into
xchg
(bad)
jae
pop
lds
test
xchg
pop
sub
pop
dec
mov
mov
test
xor
xor
(bad)
push
mov
and
xor
bt
mov
in
inc
xchg
and
inc
fdiv
mov
jl
rcr
dec
or
jmp
or
mov
loop
sub
pusha
jne
inc
dec
ins
dec
aaa
dec
jns
inc
push
or
pop
dec
cwde
mov
sub
xor
dec
in
push
and
mov
aas
popa
daa
and
sti
int3
retf
xor
jge
pop
das
mov
dec
lea
(bad)
clc
pop
shl
pop
xchg
or
(bad)
out
sub
imul
xor
adc
xor
scas
popf
mov
or
mov
pop
out
data16
adc
xchg
cmp
xchg
inc
jp
iret
outs
push
mov
in
sub
sub
sub
clc
lds
or
aad
xor
cmp
scas
and
push
lock
adc
jnp
dec
mov
retf
scas
stc
loopne
inc
into
inc
cmp
shl
pop
jmp
cld
ret
and
outs
jns
sub
jo
mov
or
jae
cmp
fisub
(bad)
retf
fdivrp
push
gs
inc
mov
js
dec
les
aas
sub
test
push
xchg
ds
adc
retf
and
xchg
add
sbb
cld
or
adc
mov
ror
pop
mov
or
rol
call
inc
(bad)
xor
xlat
jle
sti
(bad)
sbb
ins
or
push
in
lods
pop
cmp
out
inc
adc
scas
cwde
call
test
mov
inc
stc
pop
ja
adc
inc
jnp
mov
(bad)
sbb
mov
jne
mov
fidiv
(bad)
adc
gs
ror
fdivr
adc
mov
repnz
dec
mov
mov
daa
pop
sub
xor
ins
push
test
retf
xchg
out
and
dec
retf
(bad)
mov
fsub
cmp
sbb
jo
imul
sbb
mov
imul
add
xchg
(bad)
xor
pop
aad
aad
into
mov
leave
test
sub
push
pop
push
pop
cld
bound
jp
scas
adc
fs
rcl
shl
clc
repnz
fcom
nop
jae
pop
rcl
mov
or
pop
xchg
gs
sbb
cmc
xchg
mov
out
pop
retf
sub
jo
scas
test
out
dec
ror
arpl
dec
mov
(bad)
in
dec
bound
jmp
test
cmc
add
mov
jp
xchg
add
mov
(bad)
push
(bad)
xchg
inc
test
(bad)
scas
cmp
out
push
je
in
pop
dec
jbe
lahf
je
or
add
enter
mov
and
and
adc
lock
dec
fwait
mov
jmp
fcom
lods
std
(bad)
mov
sbb
(bad)
call
repz
int
adc
aad
push
adc
push
mov
loop
sbb
cmp
jb
sbb
cmp
pusha
inc
add
jle
dec
add
movs
sbb
mov
dec
mov
retf
adc
cmp
rcr
xor
mov
push
jmp
mov
gs
fiadd
test
dec
outs
int3
cmp
lods
add
xchg
cmp
mov
pop
xor
jno
push
pushf
lahf
xor
adc
xor
int3
jb
or
idiv
out
test
ins
push
xor
cli
add
jmp
loope
ins
imul
mov
daa
pop
cmps
xchg
test
(bad)
sar
pop
or
xchg
pop
loope
mov
jbe
mov
out
scas
ins
xchg
jl
movs
aad
std
push
out
stc
push
jg
lock
mov
mov
mov
cmp
cs
jg
frstor
(bad)
mov
ins
movs
mov
mov
repz
inc
mov
dec
add
bound
mov
aas
dec
mov
mov
fst
jo
ret
dec
ds
add
jo
int3
add
icebp
out
imul
xchg
and
loop
iret
xor
and
cmc
in
repz
jb
mov
retf
adc
ins
push
sbb
mov
rcl
mov
stc
ins
sub
movs
shr
popa
lods
aad
dec
hlt
or
lods
xor
ins
push
pop
mov
int3
sbb
or
rcl
push
gs
pop
aaa
pop
or
jae
push
mov
rcr
gs
scas
push
loopne
and
out
mov
pop
adc
clc
lods
pop
loopne
xchg
push
mov
or
cmp
shr
pop
(bad)
(bad)
mov
mov
adc
jecxz
pop
leave
cmp
xor
inc
je
repz
ja
cmp
mov
add
xchg
push
in
mov
add
or
lahf
enter
sbb
xchg
imul
arpl
ret
fimul
mov
repz
cdq
test
cmp
fistp
out
push
fisttp
lods
aam
cmp
in
or
xchg
(bad)
fcmovnbe
stos
add
push
(bad)
dec
sbb
in
cmp
mov
cmps
stc
test
rcl
fcmovnbe
rcl
pop
and
mov
pop
sub
mov
sbb
jle
movs
cmp
cmp
adc
into
sti
mov
in
mov
or
call
mov
push
jmp
aam
xchg
adc
push
and
mov
cmp
jno
retf
scas
ds
rep
arpl
adc
test
fst
jle
mov
xchg
inc
setge
cmp
cdq
leave
mov
jge
lods
lea
mov
iret
xchg
dec
stos
outs
cld
jno
mov
push
pop
sub
hlt
cli
mov
daa
ror
push
inc
sbb
mov
cs
loope
cmps
mov
push
in
mov
push
das
lea
imul
jae
out
add
imul
xlat
mov
push
shl
gs
dec
add
cli
dec
xchg
in
fwait
or
js
scas
gs
jge
mov
cmp
call
add
imul
jae
jecxz
jg
xchg
xor
jmp
es
mov
cli
inc
mov
dec
ss
pusha
outs
mov
xor
js
or
cs
xchg
fidiv
movs
dec
cmp
jmp
mov
dec
seta
xlat
adc
sbb
in
int3
(bad)
call
add
inc
clc
pop
jne
fistp
sar
fs
dec
lahf
push
arpl
int
shr
enter
or
shl
out
or
sbb
mov
sti
adc
lods
push
xchg
stos
jae
mov
jge
test
xor
sub
mov
or
ja
div
sbb
pop
shr
jg
das
dec
or
xor
mov
retf
or
inc
sti
mov
stc
and
mov
scas
lods
or
dec
mov
push
cmp
adc
or
scas
adc
popa
or
icebp
mov
pop
sub
pop
jle
pusha
mov
sub
shl
mov
mov
push
mov
mov
in
in
cmp
loop
xor
enter
test
pop
rcl
jge
pop
imul
jae
sub
push
adc
jbe
sbb
imul
dec
pop
not
jne
cmps
ss
jae
ds
stc
xor
nop
ins
mov
xchg
sub
add
push
mov
xlat
mov
inc
mov
retf
jno
repnz
or
mov
pusha
add
cmps
adc
and
jo
push
mov
jmp
sti
jle
retf
sub
imul
mov
icebp
ins
sub
jg
adc
icebp
scas
fwait
stos
jl
cvtpi2ps
mov
fwait
nop
dec
xor
cmc
mov
psubw
(bad)
cmps
std
lock
loopne
and
mov
out
pop
adc
adc
cwde
sbb
dec
loope
or
mov
inc
sub
add
stc
inc
inc
mov
xor
fs
sti
ficom
cdq
sub
pop
adc
push
jbe
into
mov
or
sbb
in
jg
xlat
fadd
mov
sbb
dec
push
inc
jmp
repnz
dec
sti
mov
cmp
sbb
rcr
arpl
dec
or
(bad)
mov
pop
sub
bound
xchg
dec
ret
iret
mov
push
shl
ret
fs
mov
outs
mov
dec
jp
inc
int3
test
or
mov
outs
and
ret
(bad)
sub
stc
or
lss
pop
js
loopne
jmp
or
mov
mov
inc
or
add
sbb
cmp
cmps
mov
jnp
dec
clc
mov
cld
js
ss
sti
stos
(bad)
out
mov
fwait
and
fild
dec
ja
in
mov
icebp
mov
cmc
xor
out
xchg
or
sbb
adc
jnp
les
xor
fidivr
push
hlt
mov
loopne
cmc
mov
adc
mov
and
and
fnsave
jl
loope
out
fimul
cli
xchg
bound
inc
cmps
xor
jl
push
aad
cmp
mov
js
push
stc
leave
cmc
int
mov
xchg
xchg
push
in
pop
ins
jmp
jae
fiadd
fwait
sub
lock
push
jl
pop
jb
jae
bound
sbb
xchg
int
sub
cld
daa
or
mov
pop
xor
jae
aam
xchg
call
cmp
call
mov
mov
cld
inc
pop
dec
repz
jmp
mov
test
jb
inc
pop
jns
and
inc
push
js
jne
adc
aam
jo
sbb
xlat
call
retf
jp
adc
cmp
sub
leave
call
inc
data16
pop
dec
ucomiss
les
xor
movs
cmps
cld
arpl
jno
mov
sub
stos
sbb
and
xchg
xchg
xlat
cmps
test
push
sbb
retf
cmp
sub
xchg
fdivr
mov
aad
test
mov
mov
jns
loopne
jecxz
pusha
mov
dec
sub
dec
nop
or
(bad)
push
and
push
and
clc
test
mov
sub
popa
jg
pop
pop
dec
cmc
push
mov
sub
mov
nop
adc
std
push
daa
cmp
stc
aaa
movs
mov
leave
dec
out
mov
pop
or
push
fadd
push
add
sbb
jbe
xor
pop
test
addr16
nop
stc
jne
fcomp
stos
ins
pop
add
push
add
and
adc
push
ss
mov
lahf
jnp
daa
jno
dec
ins
xchg
dec
mov
adc
push
and
xor
imul
out
and
jp
mov
std
xlat
xchg
mov
pop
mov
stos
fidivr
sbb
out
clc
pop
stos
adc
mov
test
int
test
xlat
inc
mov
aas
or
cmp
xor
lods
rcl
and
dec
jl
sub
or
mov
ret
repz
cmp
test
popa
mov
iret
push
mov
(bad)
cmp
sub
fstp
loope
add
shr
mov
pop
sbb
aaa
mov
add
popa
push
mov
(bad)
mov
push
in
jle
addr16
sbb
fist
mov
or
sbb
fistp
mov
stos
les
daa
retf
inc
scas
jecxz
loope
or
(bad)
push
mov
pusha
or
rol
xchg
ins
call
cmp
outs
cmp
hlt
loope
syscall
push
adc
mov
push
mov
(bad)
mov
mov
or
movs
dec
stos
pop
clc
jo
xor
xchg
dec
call
inc
mov
jg
adc
lock
dec
fidiv
movs
ror
push
add
push
lock
push
dec
nop
ds
adc
push
in
dec
lahf
mov
mov
rcl
add
test
sub
lods
add
lock
or
arpl
in
adc
fcomp
xor
adc
in
jmp
jecxz
fild
push
test
adc
mov
sub
inc
lock
sub
daa
jg
shl
pop
aad
imul
xlat
sbb
sub
dec
loop
fld
cli
idiv
fsub
cmp
(bad)
cwde
stc
push
and
std
and
loopne
aad
out
enter
cmp
pop
outs
outs
das
lock
jns
shl
jl
xchg
xor
xchg
in
movs
push
lahf
enter
xchg
push
sub
sub
pop
add
pop
add
ins
fmul
push
mov
push
pushf
jmp
inc
xor
jmp
inc
sub
(bad)
mov
addr16
cmp
cdq
push
imul
fnsave
or
in
clc
push
mul
fdiv
adc
imul
std
ret
hlt
ins
mov
fld
and
cmc
enter
cmp
dec
mov
adc
nop
dec
sbb
adc
mov
jno
arpl
test
cmp
add
xchg
xchg
mov
push
push
add
cmp
aad
mov
dec
test
jo
dec
fild
cld
(bad)
pop
pushf
repz
pop
mov
movs
pop
stos
pop
(bad)
outs
cmp
in
sti
or
and
rcl
mov
mov
dec
jp
pop
jecxz
imul
sahf
push
xchg
jl
test
jl
sbb
into
push
xchg
stos
repz
jge
jns
fdivr
xchg
sbb
jl
sbb
hlt
sti
dec
imul
stc
or
cli
repz
push
sub
and
push
gs
stos
out
popa
cs
fdivr
mov
cmp
fstp
pushf
sub
jbe
dec
out
into
sbb
hlt
mov
cli
add
pop
cdq
jmp
inc
inc
sti
cli
ss
(bad)
popa
fst
in
mov
scas
sub
jge
sbb
(bad)
stc
ret
frstor
inc
lea
cmp
cmp
sub
mov
sub
mov
test
xchg
cmp
(bad)
jg
fild
call
cmp
sub
in
jb
mov
push
cmp
cmc
and
inc
inc
in
cmp
loopne
loope
aas
pop
push
xlat
sbb
adc
fucomip
jle
ja
mov
adc
jb
mov
jno
add
lods
mov
rcl
mov
or
push
inc
neg
bsr
mov
fld
fs
sub
cmp
loopne
sysret
or
or
call
std
fsubr
dec
in
cmp
repz
pop
into
repz
mov
call
sbb
xchg
js
clc
inc
ror
push
inc
aam
fmul
sbb
push
lods
dec
daa
movs
mov
dec
movs
inc
push
push
dec
push
mov
jnp
clc
js
sub
ins
fstp
retf
mov
sahf
jae
cmp
fcom
pop
or
dec
clc
(bad)
mov
cmp
arpl
inc
push
loope
arpl
dec
cmp
fcom
lods
mov
dec
jecxz
inc
fs
xchg
jns
sbb
hlt
sbb
adc
lods
add
cmp
hlt
ins
dec
into
mov
or
int3
pop
enter
cmc
imul
(bad)
in
mov
mov
and
lock
cli
out
mov
push
fadd
and
or
xor
xor
nop
rcl
cmc
loope
aas
pop
add
jp
and
add
arpl
cmps
xchg
fwait
retf
xchg
mov
test
jecxz
popa
mov
aam
jp
dec
inc
rcl
pop
(bad)
fsubr
adc
pop
push
push
sbb
mov
pop
mov
xor
add
out
mov
mov
mov
cmps
lods
adc
aad
out
push
cld
cmp
push
xor
add
or
ss
xchg
retf
cmp
xchg
cmp
daa
fwait
add
aas
dec
iret
cmp
loope
adc
ds
push
jecxz
cdq
test
fsub
jmp
push
out
mov
fmul
(bad)
adc
enter
sub
xchg
and
mov
sub
jae
retf
stc
fcmovnu
popf
adc
xchg
push
cmp
scas
or
sti
fcmove
rol
cmp
imul
es
int3
or
les
dec
aam
cwde
cmps
xor
stos
daa
ja
sub
fcmovb
call
(bad)
out
mov
rol
jle
and
cmp
pop
push
push
inc
pop
lods
inc
sub
mov
pop
into
and
add
daa
sub
ret
aaa
call
scas
es
dec
jge
mov
add
push
mov
pusha
mov
sub
dec
in
(bad)
sub
push
popa
or
fiadd
push
test
pop
fcomp
push
clc
cld
(bad)
push
xor
int
(bad)
call
pusha
stc
mov
or
dec
mov
mov
mov
add
retf
(bad)
nop
enter
fwait
dec
out
add
mov
cmps
xchg
daa
inc
scas
sub
pop
ja
dec
jg
xchg
xchg
ret
pop
das
adc
adc
stos
cli
popa
xor
jo
pop
stos
fsubr
retf
sub
adc
mov
cs
or
dec
mov
rcl
fdivr
lahf
push
daa
sub
push
shr
ret
dec
mov
cwde
retf
jo
add
mov
jo
dec
adc
stc
into
imul
cli
xchg
int
jae
sub
add
sub
pop
pop
sub
push
jg
idiv
lods
jmp
fwait
xchg
jmp
jp
inc
cmc
mov
xchg
addr16
bswap
sbb
pop
fdivr
lock
xchg
les
in
push
pop
fdiv
ret
test
sub
clc
ror
mov
push
push
arpl
mov
mov
mov
lahf
popf
jbe
ffree
jmp
fdivr
daa
add
mov
out
mov
push
mov
gs
ja
gs
mov
sub
int
jne
xchg
or
push
por
cs
cmps
call
inc
clc
neg
sub
popa
(bad)
mov
(bad)
mov
sub
sar
sbb
sub
push
fmul
adc
jg
inc
dec
ins
popf
xor
pop
mov
in
out
iret
jns
dec
ja
jmp
mov
sbb
in
outs
push
dec
test
pop
arpl
movs
inc
frstpm(287
test
mov
bound
jns
scas
xor
add
jno
pop
inc
repnz
aaa
pop
rol
pop
dec
jle
lock
jae
jmp
(bad)
jmp
shr
sbb
cmc
or
mov
js
pop
mov
adc
sbb
movs
or
mov
fwait
(bad)
sar
not
(bad)
mov
push
cmps
xlat
pop
cmp
retf
or
dec
jnp
fild
in
iret
sbb
jmp
sbb
mov
cmp
xor
mov
movs
test
sub
pop
inc
xor
inc
inc
(bad)
cmc
ss
jmp
movs
fmul
lods
jp
ret
mov
fld
fist
add
mov
push
jg
mov
imul
popf
dec
xor
xor
in
ins
fnstsw
scas
xchg
out
sub
mov
popa
popf
jb
and
int
xor
fstp
repz
shl
jmp
or
or
popa
push
lods
lods
sbb
sub
retf
add
jle
jg
rol
pop
xor
ret
(bad)
in
ja
sub
pop
popf
(bad)
sub
fist
paddusb
aad
out
dec
in
mul
fisubr
lds
stos
(bad)
push
retf
(bad)
dec
sub
pop
fs
push
mov
pop
mov
xchg
pop
jne
sti
test
mov
sbb
push
push
cdq
push
std
mov
fs
mov
xor
fistp
pop
pop
call
imul
jne
xchg
push
mov
test
outs
push
sub
mov
pop
xchg
fsubr
and
push
mov
ins
aad
pop
pop
jbe
inc
sahf
sub
je
xor
inc
xchg
aad
mov
cmp
lahf
(bad)
(bad)
xor
(bad)
fs
dec
xchg
sti
adc
xchg
xor
sub
aam
sti
and
test
jge
mov
test
stc
aas
js
jb
push
adc
call
dec
ror
push
xor
mov
sbb
jo
sbb
cmps
movs
or
push
lods
sub
js
sub
rcr
gs
inc
dec
adc
ret
mov
repz
sub
xchg
pop
jb
and
clc
imul
inc
xor
mov
movs
xor
call
jmp
outs
mov
(bad)
and
ds
(bad)
jmp
push
cmp
fs
sub
add
or
push
test
gs
sar
cli
sbb
pop
mov
stos
fisubr
inc
dec
push
pop
pop
mov
js
mov
or
jno
punpckldq
lock
jp
mov
jle
fsubr
sub
jb
xchg
mov
pushf
pop
or
inc
jg
xor
(bad)
jecxz
stos
rol
jmp
ss
lods
and
cmp
lock
(bad)
inc
sub
scas
dec
es
xchg
out
push
push
addr16
xchg
and
(bad)
xor
inc
(bad)
push
push
je
stc
out
mov
aad
clc
stos
and
imul
xlat
sbb
cmp
pop
(bad)
repnz
(bad)
and
pop
stos
cli
popa
cmp
addr16
sbb
fwait
lods
inc
cmp
or
rol
adc
fstp
jbe
pop
aam
sub
dec
mov
mov
mov
sbb
fimul
(bad)
hlt
cmp
push
adc
sub
pop
movs
in
jnp
dec
jp
xor
(bad)
cmps
push
jne
sub
fisttp
lahf
mov
icebp
out
into
aam
xchg
(bad)
jg
aaa
inc
push
dec
push
out
hlt
dec
les
push
shr
cmp
pop
jecxz
dec
lods
cmps
in
jo
loope
shl
out
and
ficomp
mov
or
mov
mov
mov
inc
jmp
lds
xor
sar
pop
sti
movs
pop
imul
mov
jmp
mov
pop
cmp
mov
adc
pop
pop
add
sbb
leave
aam
loopne
add
add
pusha
cmp
(bad)
scas
pop
add
mov
push
call
mov
inc
xchg
das
dec
cmp
outs
xor
add
or
or
jmp
cmp
pop
push
enter
add
xor
cmps
imul
sub
pop
and
xchg
cmc
ror
adc
bts
(bad)
or
fldcw
popa
xchg
shl
cdq
xchg
sbb
ret
rcl
inc
std
cmp
or
daa
xchg
imul
lods
test
sub
ret
cmps
xchg
sbb
arpl
cld
(bad)
mov
xchg
outs
ins
sub
das
mov
or
mov
into
enter
jg
repnz
cwde
cmps
jnp
pop
pop
xor
mov
sub
aas
inc
cdq
cmp
push
mov
dec
push
fstp
mov
dec
lock
inc
sbb
adc
(bad)
sbb
sbb
imul
xor
ja
push
mov
fdiv
mov
aam
mov
jge
and
(bad)
aad
push
rol
pop
in
inc
mov
in
mov
jmp
inc
rcl
mov
cmp
xor
sar
mov
xchg
rcl
cwde
jg
sahf
enter
adc
arpl
jmp
out
std
jl
div
cld
push
hlt
aaa
add
jae
movs
adc
cmp
push
push
fiadd
in
(bad)
jmp
mov
(bad)
daa
add
inc
popa
out
lods
adc
lods
mov
fidivr
pop
xchg
and
cwde
shr
cld
leave
mov
outs
mov
(bad)
xchg
cmp
ins
cmc
call
fwait
mov
sar
inc
push
rol
jno
clc
pop
in
xchg
and
add
jns
fdivr
push
std
(bad)
stc
dec
cmp
shr
pusha
out
in
sbb
dec
adc
shr
adc
(bad)
ins
test
cli
cmp
push
lds
les
in
test
loopne
stos
mov
dec
cmp
or
mov
pop
inc
dec
inc
mov
stos
mov
push
dec
mov
jmp
aam
lock
xor
sub
jmp
jg
(bad)
mov
jmp
pop
jle
lahf
sbb
pusha
mov
jmp
imul
xor
fldcw
retf
icebp
ins
test
mov
sahf
or
call
rol
cmp
jmp
xlat
fild
lea
ins
gs
in
xor
vpsubsw
push
mov
ror
jecxz
sub
clc
add
lods
addr16
xor
inc
shr
xlat
loopne
push
ss
mov
mov
(bad)
fidiv
(bad)
pop
add
cdq
cmp
jne
sub
sbb
push
popa
sar
and
jecxz
jle
icebp
ss
repz
ss
(bad)
jecxz
sbb
ret
jno
sub
mov
(bad)
cli
cmp
xor
cmps
int3
jge
movs
jno
xchg
push
cmp
stos
and
add
out
mov
push
loopne
fcomp
and
cmp
mov
jp
shr
mov
or
cld
push
push
rcr
cdq
fimul
fldcw
mov
mov
mov
cmp
cs
mov
imul
shr
cwde
nop
xor
mov
cdq
aam
xchg
and
gs
movs
xchg
cmp
pop
mov
lods
mov
mov
test
mov
jnp
rcr
iret
je
cmps
imul
push
out
movs
imul
hlt
mov
jl
add
xor
jae
jle
lahf
add
xchg
cmps
enter
and
cdq
sbb
sub
xor
mov
fstp
out
aas
xor
popa
iret
cdq
cmc
inc
or
nop
and
sbb
add
pop
inc
xchg
shl
fcom
popa
(bad)
loopne
fcmovnbe
pusha
pop
lock
inc
call
js
popa
xchg
inc
jmp
xchg
outs
lock
and
ins
loop
stos
add
test
adc
ins
out
popa
dec
out
out
nop
enter
nop
push
or
push
mov
cmp
jb
repz
stos
adc
dec
call
jb
imul
pusha
pushf
pop
mov
ins
push
ret
xor
(bad)
dec
cdq
aad
popa
jae
ror
push
xchg
xchg
ins
add
call
add
adc
mov
into
mov
pop
out
leave
inc
dec
mov
adc
jmp
mov
cmps
leave
mov
jl
cmp
or
call
adc
in
pop
xchg
cwde
(bad)
mov
popa
mov
sub
adc
pop
pop
fstp
inc
shl
fucomp
ins
stc
fninit
mov
sbb
mov
enter
cs
js
sbb
push
add
sbb
push
cmp
test
neg
or
cli
xchg
out
xor
mov
pusha
sub
daa
jbe
pop
xchg
test
add
test
cmp
fsub
jo
sahf
or
sbb
(bad)
mov
pop
sbb
fld
and
xchg
cwde
(bad)
in
cld
adc
fisubr
sbb
cwde
push
into
jmp
pop
loopne
fcom
pop
add
aad
push
mov
cmps
(bad)
(bad)
pop
add
dec
pop
pop
cmps
loopne
and
sti
adc
jno
jl
and
jnp
(bad)
imul
test
mov
es
jmp
repz
das
add
add
stc
adc
shl
xchg
sar
dec
pop
aam
or
ins
cmp
mov
aad
fmul
aas
repz
sbb
xor
nop
jo
cmp
mov
loope
(bad)
loope
mov
aas
out
cmp
fimul
jmp
add
(bad)
nop
inc
sub
or
repnz
mov
mov
and
icebp
gs
add
imul
push
or
repz
jne
in
sbb
or
pop
and
and
mov
jmp
jmp
cmp
mov
ss
clc
jmp
sbb
test
fnstenv
fimul
lds
add
mov
jge
push
repnz
jle
mov
push
and
pop
idiv
xchg
add
inc
add
repz
mov
push
dec
aas
js
inc
imul
mov
clc
imul
jecxz
cmc
movs
sub
sbb
cmps
dec
nop
nop
add
retf
sub
xor
dec
stos
and
pop
sub
pop
inc
ret
je
out
sbb
jp
jo
call
jne
pop
add
out
psubd
retf
jo
jmp
pop
jge
ret
es
adc
or
add
xchg
pop
lds
add
push
pop
call
xor
push
jecxz
push
hlt
inc
dec
(bad)
and
jp
das
lds
fsub
test
add
das
xchg
mov
imul
push
mov
inc
cdq
out
push
fcompp
add
lahf
or
xlat
xor
xor
jge
sti
push
jbe
mov
adc
cmps
jecxz
pop
mov
mov
jns
pop
adc
aam
inc
fst
mov
adc
mov
loope
xchg
test
sbb
lahf
push
dec
mov
sbb
jae
mov
mov
dec
das
cmc
inc
mov
rcl
add
call
out
push
test
cmp
stc
and
xor
lods
sbb
pop
inc
xchg
cli
xchg
xor
pop
ds
ret
repz
xchg
and
inc
inc
jno
shl
sahf
das
ret
sti
pop
aad
pop
test
sbb
cmps
add
xchg
push
aam
nop
in
popf
into
iret
or
cmps
lahf
outs
jo
jbe
push
or
sti
movs
aad
aas
and
mov
inc
mov
mov
bound
push
sbb
test
push
push
scas
out
mov
div
imul
shl
pop
adc
mov
pop
aad
popf
out
lock
xor
into
fs
test
adc
clc
add
in
in
cmp
adc
jae
test
ja
repnz
or
mov
(bad)
bnd
rcr
add
jl
call
mov
(bad)
in
jg
add
stos
sbb
cmp
mov
mov
test
retf
add
stc
or
sub
mov
test
pusha
xor
les
push
jecxz
jecxz
inc
frstor
out
nop
ds
mov
mov
lock
pop
pop
popf
inc
test
leave
call
cli
repz
mov
push
rcl
inc
mov
cld
push
mov
xchg
lock
stc
call
add
int3
pop
fwait
dec
aad
pop
mov
sbb
imul
test
and
pop
jae
in
mov
dec
sub
push
(bad)
adc
test
clc
ins
sub
and
sub
mov
mov
mov
pop
mov
fisttp
outs
pop
mov
std
xor
std
mov
xor
(bad)
pop
mov
jne
icebp
(bad)
ret
ins
icebp
dec
mov
pop
adc
stos
cwde
pusha
aaa
ins
sbb
adc
mov
int
sbb
sar
stos
arpl
sbb
jmp
jno
leave
(bad)
mov
movs
pop
ret
lea
ficom
inc
sbb
ds
test
stc
mov
aad
adc
in
mov
dec
jbe
(bad)
mov
std
popa
les
dec
lea
sbb
push
push
or
call
cmp
add
repz
inc
ret
(bad)
sub
adc
retf
mov
mov
dec
test
fst
inc
sbb
pop
ins
(bad)
mov
aaa
nop
dec
cwde
jne
mov
and
pop
mov
lahf
pop
lea
pop
push
mov
xor
(bad)
pop
jne
pmulhuw
inc
das
fmul
js
ja
vpalignr
stos
add
xchg
mov
fcomp
test
pop
jo
iret
mov
pop
mov
push
mov
pop
fcomip
push
mov
xlat
dec
xchg
stos
cmp
xor
push
inc
mov
ret
lods
xor
nop
aam
pushf
adc
sbb
dec
mov
sti
ret
push
jmp
call
sub
shl
jp
xlat
ficomp
fsubr
pop
pusha
into
xchg
cld
pop
test
ret
cmp
push
loope
adc
out
(bad)
shr
inc
lea
shl
hlt
ins
mov
and
mov
shl
xchg
push
push
mov
retf
hlt
adc
jge
ja
rcl
mov
inc
xor
or
mov
add
mov
dec
fidiv
sub
pop
push
mov
ficom
imul
call
stos
das
enter
iret
mov
cmps
mov
mov
in
xchg
pop
sub
adc
sub
xchg
icebp
fimul
jo
lods
stos
jecxz
out
popf
cmc
loope
mov
test
cmp
ins
push
retf
out
fld
pop
mov
out
sub
shr
mov
sub
xor
test
xchg
aas
mov
leave
mov
inc
call
test
dec
daa
mov
sbb
mov
icebp
fdivr
push
push
mov
pushf
add
in
icebp
and
sbb
movs
ins
ds
ret
xor
cwde
shr
ficomp
dec
ins
cmp
scas
cmp
dec
pop
add
sahf
xchg
shl
mov
add
fiadd
dec
cmc
xchg
out
mov
and
(bad)
or
jno
into
in
sahf
xchg
dec
outs
fst
aad
div
sbb
jg
(bad)
sahf
push
or
sub
fidivr
das
dec
out
sbb
xlat
adc
fnstenv
ret
aam
data16
(bad)
push
popa
loopne
mov
sbb
mov
xor
aas
out
xor
cdq
inc
sub
addr16
mov
add
xor
mov
push
cli
inc
lahf
lds
test
repz
popf
cmp
mov
or
xor
add
add
cmp
inc
sbb
dec
and
jg
xchg
adc
and
jecxz
ins
push
pop
dec
shr
pushf
and
mov
dec
jno
loop
inc
jg
js
lods
and
mov
dec
scas
cmp
lock
mov
dec
daa
iret
inc
out
dec
xor
push
adc
jbe
jnp
mul
mov
test
inc
mov
pop
imul
cmc
in
jmp
ffree
add
test
lods
and
out
out
(bad)
hlt
fwait
stos
into
jbe
xor
(bad)
fsubr
in
inc
cmp
lods
dec
or
pop
adc
push
adc
mov
inc
and
cmp
inc
outs
add
mov
cdq
mov
dec
pop
sub
cmp
test
jb
mov
cmps
pop
pop
mov
xor
dec
inc
sbb
lock
popa
pop
sbb
cmp
int3
push
retf
retf
cdq
mov
sbb
js
or
jae
jae
ja
adc
dec
xchg
stos
dec
lods
test
dec
pushf
jne
(bad)
jg
lea
xor
shl
push
lods
test
push
retf
xor
push
or
xor
sti
xchg
test
mov
pop
dec
sbb
mov
bound
xor
pop
out
(bad)
leave
dec
stos
mov
sbb
test
mov
or
test
pop
xlat
les
aam
scas
cmp
jle
add
push
push
mov
push
lahf
data16
add
mov
sti
pop
scas
movs
into
mov
cmps
cmp
xchg
in
clc
cwde
outs
out
mov
push
das
repnz
loopne
fadd
inc
push
push
xchg
and
int
rcl
mov
fnsave
mov
clc
pop
pop
jg
adc
je
fsub
mov
in
xor
mov
mov
popa
and
inc
inc
std
out
stc
es
xor
aam
push
add
popa
and
(bad)
mov
dec
xor
push
mov
inc
in
dec
sub
cmc
sbb
cmp
loope
fs
fidiv
stos
dec
cmp
inc
or
ffree
out
addr16
sbb
imul
mov
jnp
les
ds
add
inc
fsub
and
inc
or
xchg
mov
sub
lock
cmp
clc
mov
mov
xlat
outs
fcomp
retf
jae
inc
pop
rol
xor
sub
call
xor
mov
add
mov
iret
clc
jge
push
xchg
int3
(bad)
out
mov
stos
pop
xlat
ins
test
mov
bound
jle
data16
dec
jb
push
retf
xchg
push
rcl
mov
add
jae
test
jle
leave
mov
ins
lock
jns
push
xchg
shl
sub
stos
mov
fldenv
jne
jno
cmp
aam
inc
call
sar
and
mov
in
add
(bad)
push
hlt
pop
cmp
pop
dec
sbb
icebp
push
mov
cmp
pop
jl
xor
(bad)
movs
fisub
add
scas
jle
(bad)
lods
jge
shr
clc
arpl
push
out
xor
(bad)
hlt
jp
push
nop
add
mov
or
pop
mov
imul
mov
out
test
pop
cmp
aad
sbb
sbb
sbb
jl
jle
xor
pushf
movs
sub
mov
in
rol
mov
jne
rol
adc
inc
div
mov
adc
retf
push
cmp
ds
out
enter
aam
int3
imul
lea
jne
loop
sbb
mov
mov
ret
scas
mov
lahf
add
outs
inc
mov
add
aaa
bound
outs
out
xor
pop
jg
stos
sub
sub
jne
mov
fist
fdiv
popa
les
scas
stc
lods
(bad)
stos
aaa
ret
out
std
cdq
sbb
in
cwde
aas
push
or
outs
ret
mov
inc
nop
push
pop
or
and
pop
push
cli
(bad)
pushf
mov
es
sbb
xor
data16
jg
add
fwait
cwde
and
pop
aam
pop
inc
dec
cmp
out
mov
dec
daa
jbe
pushf
mov
movs
jne
sub
cmp
mov
adc
ins
cmps
and
inc
outs
cmps
lock
aas
cmp
dec
sub
adc
push
(bad)
xor
out
jae
bound
icebp
jp
mov
test
or
add
add
mov
or
cli
mov
iretw
mov
imul
jp
mov
fsubr
out
movs
xor
sub
inc
ror
mov
push
retf
sbb
jbe
adc
cld
shl
rcr
fstp
scas
outs
push
add
fmul
movs
mov
sub
or
scas
daa
dec
add
or
add
dec
sub
fs
fs
not
loop
lods
jns
xchg
out
mov
mov
dec
retf
arpl
xor
dec
(bad)
pop
jbe
mov
popf
cld
int3
test
fisttp
test
inc
cmp
sub
cmp
pop
sbb
mov
iret
or
mov
ret
fimul
arpl
jo
test
in
js
or
test
frstor
outs
pop
xchg
int
pop
push
lods
xor
push
std
pushf
retf
ret
cvtps2pd
adc
cmp
push
fld
mov
mov
cmps
mov
inc
das
add
lds
and
cmps
cmp
enter
stc
sbb
jno
cmp
xor
cmp
xor
sti
inc
add
push
inc
fisub
mov
popf
arpl
jge
push
push
movs
jb
pushf
out
jnp
xor
movs
stos
rcl
movs
mov
ins
sub
jecxz
mov
xchg
pop
imul
cld
adc
not
movs
stc
popf
cmp
push
sbb
gs
xchg
and
bound
fnstcw
mov
push
mov
and
clc
in
or
mov
cmp
fsub
adc
xchg
ins
add
test
or
add
nop
mov
jb
mov
sub
lea
loope
les
or
mov
add
dec
dec
jno
xor
call
(bad)
cmp
xchg
in
(bad)
xor
mov
inc
pop
sbb
int
push
cmc
xchg
push
std
jl
pop
xchg
repnz
push
xlat
dec
push
outs
dec
mov
pop
sub
pop
shl
mov
ret
sbb
outs
add
es
pop
xor
mov
inc
pop
push
js
aas
jbe
mov
pop
sub
hlt
mov
mov
mov
(bad)
pushf
jecxz
lahf
xchg
adc
call
daa
fdiv
inc
fidivr
cmp
scas
dec
in
rcl
lds
mov
fxam
idiv
cmp
es
sub
aam
ja
dec
xchg
adc
(bad)
pop
hlt
cmp
or
push
(bad)
ss
dec
loope
sub
mov
lea
xchg
push
cld
jbe
adc
jns
neg
retf
xchg
repnz
movs
and
jb
mov
mov
rcr
adc
or
int3
popa
sub
sub
jle
mov
cli
in
pop
stc
sbb
cld
adc
cwde
sub
out
lahf
mov
mov
and
xchg
repnz
ficomp
sub
and
clc
xor
mov
aas
push
inc
adc
xor
pop
or
in
xchg
out
dec
fnstenv
inc
xor
mov
loop
sahf
jecxz
lods
cmps
xchg
icebp
cmp
retf
sbb
cld
popa
popf
pusha
cmp
les
xor
sbb
dec
inc
es
inc
rcr
mov
ret
or
fcom
shr
pop
jne
cmp
mov
or
inc
(bad)
xor
or
mov
stos
arpl
(bad)
rcr
scas
gs
pop
rcl
or
sub
mov
dec
adc
fisub
in
inc
es
dec
stos
dec
js
aaa
cmps
fistp
xchg
mov
ins
call
cmp
enter
push
cmp
and
xor
mov
cwde
or
(bad)
pop
cld
jmp
inc
js
outs
xchg
mov
pop
or
pushf
inc
imul
jno
ja
add
jle
loope
retf
aam
xor
test
xor
into
cmp
pop
enter
addr16
mov
std
sti
lahf
push
hlt
adc
or
add
stc
xchg
call
xchg
ror
sbb
pop
outs
ret
fdivr
cli
mov
pop
mov
push
adc
push
loopne
adc
cmp
xchg
outs
idiv
jbe
pop
(bad)
sbb
or
cmc
xchg
push
mov
(bad)
out
movs
sbb
adc
push
or
sbb
xchg
jecxz
pop
and
and
fild
rcl
pop
imul
xor
or
in
in
icebp
adc
(bad)
lods
jle
sbb
call
and
jmp
popa
jl
xchg
test
mov
push
ss
fnstcw
shr
(bad)
fidiv
mov
mov
test
jno
loop
push
pop
das
(bad)
imul
dec
test
push
inc
cmp
push
and
inc
jmp
jmp
jo
pushf
jl
outs
fisub
(bad)
imul
xchg
sub
push
pop
push
mov
pushf
popf
jo
in
(bad)
mov
mov
test
ficom
mov
enter
dec
cmps
push
das
outs
push
pusha
jl
xchg
fs
inc
cmp
das
dec
icebp
in
retf
jo
iret
sub
ds
or
and
out
mov
add
lods
ds
movs
clc
pop
sti
cdq
and
mov
std
push
pusha
pop
lock
test
xor
fisubr
add
cmp
cmp
cmovs
dec
xor
add
push
mov
fstp
xor
in
or
cmp
mov
inc
in
cli
scas
ror
ja
shl
(bad)
mov
pop
pusha
jge
or
lea
and
add
jge
outs
adc
test
leave
jae
jae
sbb
or
xchg
(bad)
xlat
in
jge
mov
mov
stos
xchg
scas
fcmovu
inc
popa
jl
out
dec
stos
aas
push
push
imul
retf
in
movs
add
adc
hlt
out
adc
inc
rcl
test
push
xchg
enter
hlt
in
xchg
rcl
arpl
mov
cld
push
jl
scas
or
and
stc
xchg
sub
and
repz
pop
in
jg
jge
outs
(bad)
xor
xor
pop
jmp
pusha
cld
inc
ret
cmps
outs
out
test
outs
outs
arpl
mov
and
ret
mov
pushf
out
pop
mov
mov
xchg
js
mov
fidiv
(bad)
pop
bound
xchg
cdq
mov
mov
movs
xor
mov
movs
fnsave
cwde
adc
shl
or
add
jmp
out
iret
pop
data16
into
or
call
in
jl
xor
dec
sti
jl
and
(bad)
jmp
sub
std
xchg
and
ds
mov
ss
cmp
mov
lock
push
and
push
sbb
xchg
rcl
sahf
mov
retf
or
(bad)
ret
cmps
aaa
shl
ficomp
mov
fwait
jp
lods
cdq
mov
int3
push
ror
movs
stc
adc
jo
dec
std
mov
aam
imul
sub
or
mov
adc
cmp
pop
cdq
mov
mov
and
js
push
and
jmp
jae
loopne
cld
or
dec
loop
push
or
xchg
les
sbb
and
enter
dec
mov
stc
lods
push
adc
dec
fnstenv
and
les
push
(bad)
call
xchg
xlat
adc
xor
inc
imul
and
push
jmp
or
aam
xchg
hlt
xchg
(bad)
idiv
adc
jo
mov
xchg
cmp
(bad)
pop
add
mov
cmp
loop
(bad)
mov
sti
cmps
fsubr
mov
dec
mov
scas
mov
cmp
cmp
inc
stos
repnz
neg
push
mov
and
je
outs
cmp
and
test
jne
in
ror
pop
push
ja
(bad)
enter
int
cmp
push
outs
or
jns
pop
jnp
icebp
ins
lds
sub
cli
xor
mov
sbb
je
idiv
enter
mul
mov
jbe
sti
adc
sub
xchg
pop
movs
inc
daa
scas
xchg
sbb
ror
jmp
add
iret
mov
push
fsub
int3
push
aam
loop
movs
aas
jmp
push
xlat
fmul
js
jbe
mov
leave
mov
repnz
mov
adc
ds
call
repnz
lods
bound
out
cdq
in
sti
int3
xlat
scas
invd
lahf
cmc
jmp
fstp
gs
fcmovb
push
in
jecxz
in
cmp
cmc
mov
mov
push
mov
sub
ins
call
add
fnstsw
inc
cmp
and
pop
sbb
push
pop
fdiv
std
jge
adc
test
ins
push
and
fisttp
les
je
sbb
test
cmp
cmc
imul
arpl
pushf
mov
push
sub
das
jl
dec
fucomi
das
xchg
outs
aaa
jg
(bad)
mov
adc
cmp
mov
ds
fistp
(bad)
xchg
cdq
out
inc
fs
pop
shr
ja
stos
fdivr
int
mov
ficom
add
sahf
mov
nop
scas
pushf
xchg
add
je
sbb
ds
loop
xchg
adc
xor
xchg
xchg
cmps
ins
jmp
jae
mov
mov
ja
inc
push
test
lahf
movs
scas
push
mov
pop
mov
or
push
mov
and
add
pop
push
sub
jmp
ins
xchg
ror
jl
pop
popf
repz
sti
cmp
xor
stos
fdivr
adc
ins
sbb
jno
push
pop
pop
xlat
mov
in
pop
sti
inc
das
cmc
ins
push
(bad)
jns
(bad)
jl
out
lods
rcr
dec
(bad)
dec
mov
aam
jmp
adc
aad
daa
and
mov
jecxz
inc
js
out
and
(bad)
rcr
ror
mov
push
aam
xchg
in
loopne
rcpps
dec
push
aam
jo
in
cli
xchg
or
and
push
jecxz
dec
das
dec
(bad)
repnz
stos
adc
add
jl
sbb
stos
adc
pop
ss
xor
pop
lea
xchg
xchg
jno
mov
in
mov
cmp
xchg
cmps
push
retf
int
je
retf
cmps
xchg
sub
jns
rol
es
loope
lock
and
sub
cmp
push
mov
je
add
dec
mov
js
stos
sahf
mul
xor
push
jnp
test
(bad)
aad
xchg
lods
fs
gs
and
fisub
adc
mov
ret
dec
sub
cmp
dec
aaa
int3
xor
inc
bound
add
cli
mov
sbb
cld
dec
rcl
mov
mov
ret
sbb
mov
cmps
cmps
fld
adc
movs
mov
and
or
jmp
fs
push
cld
jp
retf
pop
fimul
int3
pop
cwde
movs
icebp
sbb
loop
jns
dec
fucomp
push
add
xchg
loopne
jbe
dec
pop
loope
aad
int3
or
mov
pop
outs
not
(bad)
je
inc
add
cmp
push
fstp
aas
pop
dec
call
add
mov
sub
scas
or
test
clc
pushf
jmp
(bad)
call
xlat
mov
loopne
push
int
test
mov
mov
pop
or
cmps
mov
inc
push
pop
repz
mov
dec
sbb
or
or
pushf
adc
sub
es
aad
xor
(bad)
mov
test
adc
adc
xchg
pusha
scas
in
mov
pusha
icebp
stos
test
test
inc
pop
(bad)
clc
adc
(bad)
ss
loope
lock
xor
lock
loope
dec
nop
pop
mov
sbb
shl
fs
dec
lods
daa
(bad)
push
mov
jmp
lahf
daa
adc
xor
fldenv
iret
mov
imul
or
mov
cmps
test
and
push
xchg
xchg
jge
mov
lock
mov
imul
pusha
retf
daa
test
repnz
fistp
inc
jge
jae
pushf
inc
mov
push
(bad)
popa
repnz
retf
pop
out
shl
xor
and
dec
dec
xor
inc
(bad)
int3
loope
es
inc
adc
mov
test
push
and
outs
sub
movs
nop
sbb
lods
adc
in
adc
test
push
mov
ficomp
call
jge
adc
cmc
xor
pop
hlt
jl
jns
popf
jmp
add
int
cmp
push
sub
mov
dec
loopne
stos
sbb
jb
cmc
daa
adc
sbb
jne
(bad)
push
push
add
ja
adc
bound
outs
xchg
clc
xor
ror
pop
ret
gs
jb
imul
xor
pop
aaa
ins
aam
icebp
pop
fwait
cs
mov
sahf
xor
dec
mov
dec
push
adc
out
jb
inc
push
jle
idiv
dec
xchg
lahf
rcl
lahf
clc
or
ja
add
cmp
push
scas
aam
sub
dec
std
adc
sti
sub
scas
xchg
stc
aad
xor
fs
test
movs
cmp
push
popf
sbb
push
add
mov
add
sub
mov
xchg
jg
imul
lods
and
or
cmp
push
jmp
lahf
and
fisub
inc
mov
mov
je
jno
inc
mov
cmp
loop
shr
movs
pop
imul
jl
stos
scas
jmp
test
adc
frstor
popf
enter
retf
cmps
leave
jno
mov
adc
sub
inc
cmp
and
cld
add
inc
inc
mov
mov
(bad)
push
or
(bad)
jge
pop
add
adc
fild
outs
mov
(bad)
aam
retf
test
xor
jmp
jae
cli
mov
fnstcw
mov
dec
cmp
arpl
add
repz
jno
je
test
outs
dec
inc
or
sub
mov
retf
sub
or
cld
push
add
sub
add
cld
fild
scas
ret
sub
and
jne
out
cmps
jle
or
js
loopne
shl
jbe
pop
arpl
adc
xor
not
in
out
xor
enter
out
outs
or
sub
inc
push
xchg
rcl
xlat
in
cli
cwde
(bad)
mov
add
pop
jmp
adc
das
sub
inc
inc
out
mov
fiadd
push
xor
in
cmp
mov
inc
gs
sub
sub
or
sbb
inc
(bad)
popa
sbb
xor
push
test
fadd
mov
or
pop
push
mov
test
push
mov
dec
retf
add
dec
in
mov
sbb
(bad)
cmp
fwait
inc
jo
cmp
in
xchg
clc
mov
daa
xchg
sti
dec
lods
fldcw
mov
push
(bad)
jmp
cmp
push
pop
cmp
lea
xor
aam
rcr
out
sub
sbb
add
sub
and
test
pushf
xchg
popf
in
jo
mov
ss
push
jo
mov
or
xchg
ret
(bad)
push
add
mov
lock
adc
jmp
xchg
enter
cwde
das
in
sti
in
cs
or
stos
sar
cmps
imul
push
xlat
mov
or
adc
shl
or
pop
ins
pop
dec
sub
test
pop
je
call
aaa
or
push
repz
rol
sbb
inc
cmp
jp
shl
inc
aaa
mov
push
nop
sbb
retf
jp
push
xor
and
sub
inc
and
mov
test
sub
xchg
std
xchg
pop
or
and
push
pop
sub
sti
movs
scas
cli
ins
dec
sub
add
(bad)
push
rol
ins
jo
nop
shr
jp
(bad)
jno
addr16
adc
dec
je
inc
fild
shl
pusha
out
(bad)
push
or
xor
sbb
das
dec
pop
xchg
in
lods
in
jne
lods
adc
mov
xor
out
mov
xchg
loope
pop
test
cmp
sbb
adc
push
adc
frstor
push
sbb
inc
dec
nop
outs
hlt
fistp
sub
into
outs
inc
mov
hlt
movs
jmp
mov
xchg
addr16
xor
fwait
jge
jmp
sbb
mov
js
iret
(bad)
outs
(bad)
mov
mov
mov
int3
sbb
stos
loope
xor
sahf
mov
pop
xor
add
pusha
mov
mov
ja
(bad)
mov
jmp
inc
cwde
test
sbb
iret
ror
xchg
mov
add
xchg
fstp
mov
call
xchg
or
ja
xchg
and
pop
mov
aas
mov
add
mov
push
stos
pop
mov
adc
xor
into
push
adc
push
add
shl
outs
jo
data16
or
cmp
cmps
and
pushf
jo
loop
cs
dec
jmp
jmp
sub
repnz
dec
xchg
adc
out
adc
addr16
inc
pop
dec
jecxz
jbe
fs
adc
xchg
xchg
mov
dec
mov
in
and
add
pop
int
push
repnz
or
inc
test
outs
fcomip
or
cmp
hlt
mov
push
inc
adc
aas
inc
xor
mov
aam
ds
enter
inc
push
sbb
jb
jge
or
xchg
cld
xor
jp
mov
mov
fs
bound
dec
pop
inc
(bad)
shl
sub
hlt
(bad)
inc
test
xchg
mov
(bad)
loope
stos
loopne
cmp
icebp
stos
imul
fs
sub
push
out
mov
add
mov
push
mov
pop
cmp
(bad)
pop
ins
dec
(bad)
mov
and
pop
pop
cld
test
jle
lds
xor
movs
call
fidivr
test
xchg
lds
les
mov
ins
lods
fs
pop
fcomp
test
mov
mov
xor
pop
lods
cmp
in
sbb
add
loope
(bad)
sub
add
mov
not
aam
fs
popa
cdq
sub
addr16
pop
pushf
dec
out
xor
call
ficom
cmp
ret
mov
xchg
xor
push
cmps
pop
add
inc
add
jle
mul
and
loope
(bad)
ins
jns
jmp
jns
fld
xor
aad
sti
cmp
mov
adc
test
outs
addr16
mov
iret
arpl
adc
push
xchg
sub
sub
mov
or
mov
addr16
icebp
iret
or
loopne
rol
cmp
ret
inc
add
loopne
mov
mov
mov
jmp
retf
dec
jmp
pushf
inc
xor
cs
sti
andps
mul
jae
frstor
into
fnstsw
sti
ret
ret
cdq
lods
popf
cmps
xchg
adc
lock
(bad)
pop
mov
fisttp
loope
dec
fs
push
push
mul
dec
cmp
push
xor
push
out
stos
ins
mov
mov
sbb
adc
jg
or
ds
shr
retf
imul
jne
mov
lds
jnp
cs
mov
pop
aad
outs
ficomp
jl
push
or
fist
push
cdq
push
fstp
pop
jbe
or
pop
mov
shl
dec
sub
push
mov
sub
add
mov
hlt
(bad)
jae
or
inc
sub
je
mov
add
push
or
pop
push
cli
mov
mov
movs
fcom
dec
mov
sbb
push
fisttp
sub
mov
mov
call
and
ror
cmp
(bad)
icebp
or
mov
and
fwait
push
dec
pop
inc
mov
mov
outs
ret
jb
(bad)
and
or
mov
pop
xchg
arpl
aam
pop
rcr
mov
pop
nop
mov
(bad)
mov
rol
test
and
(bad)
repz
test
jmp
jmp
xchg
pop
or
and
loopne
enter
or
and
and
dec
inc
sbb
inc
mov
pop
arpl
test
jb
sti
inc
aaa
pop
mov
jbe
cmp
add
ficom
or
inc
(bad)
nop
pop
call
cmp
pop
test
fsubr
push
data16
adc
pop
lahf
fstp
cmp
mov
ds
mov
jno
ret
ins
mov
pusha
mov
pop
icebp
fldcw
cmps
rep
(bad)
xor
leave
dec
mov
sti
inc
(bad)
(bad)
mov
adc
mov
not
add
fsub
lahf
in
arpl
mov
and
jle
aaa
cdq
cwde
push
jnp
mov
inc
outs
aad
ss
nop
stos
outs
int3
(bad)
or
popf
xor
mov
xor
jmp
pop
adc
mov
jmp
and
sub
push
and
movs
stos
adc
aad
sbb
fwait
jp
int
out
pop
fmul
pop
xchg
xor
scas
mov
jns
cli
sub
sahf
cmp
jb
icebp
lods
cmp
xchg
or
push
sub
stos
cs
and
inc
sahf
in
icebp
pop
and
out
xchg
call
call
mov
movs
xchg
ror
fimul
aas
retf
mov
inc
jg
popa
pop
ret
loope
sti
loop
or
loope
jle
or
push
cmc
repnz
popa
mov
mov
aam
jnp
test
fadd
arpl
sbb
add
add
inc
jmp
cmps
in
inc
jbe
(bad)
dec
in
sbb
rcr
cld
sub
movs
sub
hlt
mov
cmps
ins
out
dec
call
dec
mov
hlt
push
jp
mov
adc
scas
ror
pop
pop
mov
adc
retf
popa
xchg
xchg
pmaxub
adc
cwde
in
xor
shr
pop
pop
sub
retf
pop
imul
pop
dec
adc
push
stos
out
call
retf
int3
cmp
jmp
adc
mov
in
in
lods
pop
jns
cmps
popa
lods
dec
pop
mov
xor
pushf
popa
test
aam
fimul
inc
add
scas
gs
int3
and
mov
jge
sahf
cmps
jmp
jmp
mov
adc
xor
bound
loop
in
or
inc
or
out
int
jecxz
repnz
sti
cmp
xchg
pop
cmp
fs
pop
mov
sbb
sub
cmp
and
sbb
fwait
mov
(bad)
pop
pop
cmp
sub
out
add
iret
pop
sub
out
or
shl
lahf
out
adc
pop
mov
aam
outs
aas
adc
xchg
repz
repz
aaa
loop
push
cmp
aas
ficom
xchg
in
mov
mov
jmp
mov
mov
mov
int
ss
pop
popf
fnstsw
and
dec
int3
int
xchg
mov
stos
scas
add
lods
scas
pop
xchg
xchg
pop
dec
sbb
(bad)
and
cmps
int3
sub
jg
(bad)
ror
inc
scas
xchg
add
mov
stos
lock
lahf
mov
into
aaa
adc
scas
mov
jmp
xor
xchg
hlt
jns
push
movs
jmp
pop
std
and
repnz
dec
cmp
jno
cmp
jge
xor
xor
xchg
scas
mov
ret
push
adc
mov
in
cmp
pop
jp
cmc
add
fadd
add
mov
scas
imul
cmp
or
jmp
or
jp
popa
pop
inc
push
sub
inc
pop
popa
cmps
cmc
xor
ins
inc
mov
xlat
sub
jmp
aaa
hlt
xchg
stos
push
(bad)
cld
ror
cdq
enter
inc
mov
les
xchg
cmps
es
ja
add
loop
cwde
or
add
fsubp
sbb
in
push
mov
push
int
xchg
cmp
rol
ret
fucomip
addr16
mov
out
jb
add
sub
pop
adc
scas
stos
call
xor
jbe
push
mov
shr
test
or
cmp
xor
push
xchg
idiv
repnz
mov
jmp
cmp
cmp
(bad)
psubq
int
adc
jle
aas
call
xor
ds
popf
fucom
fnsave
sbb
mov
cdq
jnp
jecxz
repz
repz
pop
add
cmps
or
dec
mov
(bad)
mov
push
cmp
jle
or
cmc
ds
dec
test
push
outs
xchg
xchg
xchg
shl
stc
test
imul
jno
xchg
sub
sahf
iret
dec
ja
or
test
(bad)
xor
jge
xor
xlat
std
cmp
es
std
mov
jle
mov
out
sahf
xchg
leave
sub
pop
in
arpl
pop
pop
shl
jne
xor
mov
aaa
cdq
lods
arpl
dec
adc
(bad)
cmp
sub
aas
xor
jb
cmps
mov
jl
mov
enter
push
xor
enter
call
inc
mov
push
jge
and
jp
pop
repz
xor
pushf
mov
into
cmp
mov
inc
sbb
into
call
pop
cmc
xlat
and
mov
sub
cmp
sbb
inc
ror
fsubr
out
jecxz
call
jl
mov
lds
ins
add
cmp
je
mov
jb
sahf
cmp
xchg
lods
add
push
loope
jae
mov
data16
push
mov
sbb
outs
add
daa
cld
je
mov
inc
and
shl
mov
retf
ret
ror
inc
jae
jge
cmp
imul
sbb
icebp
sbb
pop
mov
xor
in
mov
ss
and
xchg
sub
into
movs
popf
sahf
or
popf
retf
int3
icebp
pushw
(bad)
out
jmp
add
jg
cmc
ja
sahf
xor
loop
pop
xlat
addr16
xchg
mov
lods
test
dec
outs
icebp
daa
loop
mov
push
add
repz
jmp
repz
call
jmp
outs
mov
repz
sbb
imul
cwde
xchg
fisub
cmps
in
mov
data16
xchg
dec
jecxz
js
mov
shr
and
push
add
cld
adc
gs
loopne
xor
es
dec
arpl
mov
pop
js
out
popf
(bad)
jno
scas
mov
dec
sub
(bad)
push
aaa
jnp
mov
push
loopne
push
mov
lods
push
rol
mov
in
out
in
dec
add
pop
pop
cli
pop
in
push
std
mov
sar
pop
add
xor
mov
or
sub
popf
popf
mov
lahf
or
aad
movs
scas
xor
jae
addr16
mov
or
push
add
std
mov
cmp
loopne
(bad)
mov
inc
or
fcomp
sbb
mov
sub
hlt
scas
cmp
pop
outs
and
(bad)
dec
and
fst
mov
je
or
loopne
mov
pop
outs
inc
sub
dec
jge
int3
pop
shl
push
clc
mov
mov
stc
cmp
xchg
fstp
je
movs
test
push
cmp
sbb
sbb
jnp
push
sub
mov
pop
jecxz
mov
push
mov
into
icebp
mov
aaa
sbb
dec
pusha
and
pop
outs
sub
push
sub
xor
lods
xchg
and
xchg
and
ja
jb
or
enter
ret
push
(bad)
out
dec
jno
sub
mov
jmp
pop
dec
or
(bad)
pop
jmp
sahf
call
sbb
cmc
ror
mov
sub
mov
out
leave
imul
arpl
je
inc
jo
sub
dec
adc
cdq
jle
and
loopne
xchg
inc
mov
inc
call
dec
xor
mov
or
fwait
or
test
mov
mov
fdivp
movs
cdq
add
pop
sub
sub
retf
sub
push
add
xor
cmc
inc
pop
pusha
and
outs
(bad)
leave
icebp
lea
jg
int
scas
ret
repnz
jnp
xor
and
bound
ret
mov
out
das
in
outs
xchg
retf
cmp
scas
(bad)
sbb
call
aaa
loopne
cmps
mov
jge
or
push
jp
movs
loope
adc
repnz
add
sbb
hlt
ins
pop
mov
sbb
sbb
and
icebp
push
jbe
pop
pop
sbb
mov
xor
outs
mov
in
jbe
divps
in
xchg
dec
mov
sub
sbb
int3
(bad)
icebp
pop
nop
shl
sub
jmp
sbb
retf
add
mov
dec
push
es
xlat
ja
jne
sub
and
gs
mov
inc
jae
ret
mov
or
test
pusha
fiadd
nop
mov
shl
push
ror
push
mov
dec
or
jmp
xchg
in
fs
pop
fstp
(bad)
adc
add
sbb
stos
call
jnp
push
in
mov
adc
in
sbb
into
jb
mov
lahf
cmps
xor
call
mov
inc
hlt
push
nop
and
pusha
lahf
loope
leavew
stc
add
push
retf
ds
(bad)
and
xchg
xor
sbb
repnz
clc
(bad)
sbb
xchg
jb
push
out
xchg
dec
jmp
data16
cmp
sbb
ficomp
jp
fdiv
or
ret
sbb
xor
pop
or
sub
fst
jno
mov
dec
and
movs
mov
xor
pop
(bad)
jno
imul
xchg
cmp
loope
mov
mov
or
ins
pusha
cmps
aam
xlat
mov
pcmpgtw
scas
jg
aam
xchg
and
sbb
(bad)
retf
lods
jmp
mov
inc
(bad)
pop
mov
dec
sub
pop
xor
fisubr
adc
iret
out
sub
add
sbb
scas
mov
xchg
into
test
xchg
sub
cdq
repnz
popf
xor
sbb
pop
xor
cli
mov
mov
push
mov
mov
add
stos
js
pop
and
ins
adc
in
xchg
adc
cmps
jns
ds
add
xchg
ret
les
shl
aaa
mov
and
shl
or
pop
xchg
fwait
cmp
sub
mov
mov
mov
xor
out
repz
cmp
pop
std
icebp
in
cs
pop
pop
nop
jl
mov
icebp
jmp
outs
pop
(bad)
je
mov
je
in
adc
jp
(bad)
pop
repnz
add
xor
into
xchg
sub
nop
and
inc
push
aas
int3
cmc
jns
stos
addr16
icebp
daa
and
cmp
dec
adc
or
aaa
push
pop
push
bound
and
xchg
popa
push
mov
pop
outs
jae
adc
mov
mov
fwait
das
out
add
jb
dec
mov
sbb
sbb
xor
movs
xchg
ret
leave
dec
inc
and
sbb
sbb
jmp
push
jbe
cwde
jg
mul
or
dec
dec
mov
jo
iret
push
sub
fsub
xchg
(bad)
dec
adc
mov
scas
mov
jp
lods
push
rcr
pop
ins
xchg
lods
loopne
cmp
cmp
and
add
sub
(bad)
and
mov
sbb
push
push
data16
call
retf
pushf
mov
jmp
and
ds
cmp
cmp
sti
mov
leave
into
pop
ss
hlt
in
xchg
adc
paddsw
call
cmp
std
imul
jge
mov
push
add
bound
test
xor
out
xchg
je
xchg
movs
xor
fdivrp
aaa
repnz
xchg
iret
mov
mov
xor
mov
lock
push
jl
imul
in
into
fistp
jl
popf
or
call
and
inc
(bad)
jne
or
sbb
fdivr
ret
pop
jle
pop
shl
imul
mov
inc
cdq
shl
fnstenv
cmps
sub
aas
jge
sub
aaa
or
xchg
and
cmp
cwde
jnp
and
jle
inc
adc
shl
mov
and
pop
es
and
repnz
mov
pusha
in
or
or
pop
les
rep
mov
jmp
out
fadd
dec
push
adc
ins
cmp
rol
sub
sar
inc
dec
repz
mov
imul
fiadd
mov
(bad)
dec
adc
mov
lods
mov
dec
xor
sahf
adc
mov
xor
jns
(bad)
jne
push
and
out
fild
adc
xor
push
adc
jmp
adc
shr
add
pop
(bad)
jmp
cmp
and
push
call
jmp
clc
ss
mov
ins
mov
ret
loopne
add
adc
xor
repnz
and
into
cs
cmps
push
xor
inc
xchg
repz
lock
rcl
cmp
add
fs
sbb
dec
cmovo
push
and
adc
xchg
mov
push
push
and
add
pop
gs
das
test
movs
movs
mov
ret
adc
pop
mov
ja
pop
sbb
or
cld
dec
dec
mov
jae
push
pop
scas
outs
lds
outs
ret
(bad)
enter
push
imul
mov
mov
dec
jb
cmp
cs
jge
sbb
in
cmc
pushf
xchg
sub
(bad)
sar
push
fnstsw
add
std
jb
pop
popf
out
push
in
repnz
add
jo
mov
dec
outs
imul
pop
data16
push
push
push
push
and
and
cld
stc
ror
aam
push
inc
(bad)
test
add
inc
aaa
cmps
xchg
aas
in
mov
sar
xchg
jge
jecxz
lahf
or
or
loop
jo
jge
adc
mov
(bad)
dec
cwde
(bad)
cli
pop
jp
ror
repnz
cs
movs
inc
adc
push
cmc
mov
mov
mov
mov
xchg
xor
xchg
jbe
pushf
push
cwde
xchg
xchg
sbb
push
jge
(bad)
push
add
mov
or
fwait
mov
inc
jmp
popa
or
cdq
pop
mov
mov
mov
sbb
addr16
jp
dec
lods
sbb
jns
out
fsubr
movs
sbb
cmp
push
aas
jl
lahf
pop
cmp
imul
pop
imul
in
mov
mov
nop
jge
xchg
dec
je
cmp
mov
lea
inc
sub
out
jmp
in
adc
mov
int
psraw
dec
sbb
jnp
out
push
mov
cmp
movs
in
add
adc
sbb
shl
out
adc
fcmovu
xchg
mov
addr16
data16
test
frstor
push
xor
out
icebp
mov
test
add
out
sbb
push
js
lahf
shr
ret
and
in
repnz
adc
pusha
mov
or
sbb
(bad)
sub
inc
xchg
inc
xchg
out
xchg
add
(bad)
(bad)
push
sbb
xor
xchg
imul
jmp
test
ret
ret
out
fsubr
or
test
aaa
dec
pop
sar
add
pop
or
push
call
sbb
aam
(bad)
jmp
pop
pop
fnstenv
add
in
xchg
cmps
add
aas
xor
inc
cmp
mov
addr16
std
in
jp
sbb
ficom
pop
jmp
call
pop
cmp
and
xor
xor
repnz
std
bound
test
ror
sub
not
int
lds
frstor
jno
add
and
movs
jp
inc
(bad)
rcl
ja
jle
(bad)
rol
mov
comiss
out
inc
xchg
push
mov
mov
stos
mov
jl
mov
or
or
push
cli
out
call
mov
sub
inc
pop
addr16
retf
inc
xchg
mov
sti
sti
cmp
ret
xchg
mov
stos
test
mov
rcr
jbe
or
cmc
jmp
inc
test
lock
data16
or
inc
jbe
push
std
dec
loopne
test
aas
mov
fcom
mov
dec
adc
mov
hlt
dec
mov
cld
aaa
movs
sbb
rcr
push
sar
repz
mov
cmp
adc
sbb
mov
add
fld
ret
mov
pop
ins
dec
clc
movs
idiv
dec
push
int
sub
jmp
mov
add
sar
or
cmps
pop
sti
dec
mov
lods
pop
and
sti
fmul
call
jb
mov
in
jecxz
xor
mov
and
jle
adc
add
cmp
inc
adc
cwde
int3
(bad)
out
rcl
(bad)
out
movs
dec
fisubr
retf
mov
call
or
add
pop
inc
dec
fistp
mov
cli
push
aad
pop
ret
mov
aad
es
jmp
mov
loope
rol
es
mov
mov
mov
or
shl
inc
push
int3
mov
add
lock
add
or
adc
leave
cmps
test
lock
cmps
add
jae
dec
es
js
es
or
enter
push
repnz
in
clc
jg
pop
scas
xchg
into
mov
mov
xor
shl
add
sbb
mov
fs
xchg
and
cmc
clc
xor
dec
outs
in
vmovhps
repnz
repz
lods
add
(bad)
icebp
pop
std
test
dec
iret
jmp
std
mov
nop
add
jae
xchg
in
ins
xlat
adc
jae
(bad)
stc
sub
jno
or
add
push
addr16
fisttp
mov
out
ins
aad
inc
mov
mov
addr16
inc
repz
xor
std
push
test
jge
ins
(bad)
push
std
ret
stc
xchg
dec
int3
xchg
mov
or
mov
pop
popa
icebp
add
or
push
xchg
(bad)
adc
mov
add
inc
pop
aam
cmovo
sub
xor
xor
stc
lahf
out
cmc
fisttp
cmp
ss
adc
sub
hlt
jnp
and
pop
or
adc
sbb
xor
aas
mov
aam
mov
xor
and
das
jmp
mov
imul
jge
pop
test
(bad)
mov
outs
lmsw
gs
lock
ret
mov
sub
mov
aad
xlat
iret
in
sahf
inc
fs
lods
lods
fmul
ret
cmp
mov
out
outs
or
das
and
outs
call
rol
nop
adc
cld
mov
dec
mov
mov
hlt
adc
jae
enter
mov
es
rcr
rcr
aam
or
xchg
popf
mov
push
neg
fs
retf
inc
push
ins
not
cdq
movs
adc
mov
test
stos
out
sbb
sbb
das
test
ror
test
fimul
mov
bnd
mov
cmp
jmp
ja
in
pushf
cwde
call
pop
mov
mov
jns
(bad)
xor
xor
pop
jl
nop
iret
mov
jecxz
out
cli
nop
jne
add
pop
or
mov
lock
mov
dec
ja
lahf
mov
test
repnz
aas
rol
adc
cmp
or
lds
jmp
adc
addr16
rol
in
jecxz
push
mov
add
std
sub
xor
add
add
inc
repz
mov
sbb
jne
add
xchg
dec
jg
mov
in
loopne
std
cli
cmps
stos
ins
dec
inc
jo
adc
ins
gs
push
pop
rol
fs
sbb
add
adc
pop
popa
or
sbb
mov
retf
push
test
add
cmp
and
sbb
jae
pop
retf
cmps
mov
and
jg
cmps
stc
and
push
fimul
sub
stos
inc
ins
cmp
push
sub
pop
aam
repnz
aas
fwait
push
and
aam
push
jg
mov
jle
fdiv
jge
pop
(bad)
jae
into
sbb
jnp
add
xor
xor
hlt
cli
(bad)
out
aas
fcom
sbb
mov
dec
pusha
(bad)
lahf
lds
ret
sbb
jecxz
add
xor
add
sub
push
in
push
xor
mov
lahf
xor
into
or
test
movs
shl
dec
mov
mov
jbe
bound
mov
mov
xlat
xor
push
aad
fsubr
mov
clc
or
inc
andnps
sahf
out
pop
(bad)
cmp
and
test
scas
(bad)
pop
pop
mov
or
cmc
xchg
or
out
pushf
xchg
cdq
xchg
pushf
(bad)
xor
pop
mov
xchg
cld
cdq
hlt
push
push
idiv
or
pop
cmp
ins
inc
test
pop
popf
pop
int
or
pop
sub
jo
jae
add
bnd
push
inc
cmps
jmp
mov
and
dec
mov
dec
jp
pop
movs
xchg
sbb
pop
sti
mov
nop
fwait
push
mov
inc
call
push
(bad)
jno
add
mov
iret
jge
mov
icebp
push
int3
ins
cdq
sahf
(bad)
jnp
add
jne
xlat
and
mov
mov
test
xchg
mov
jo
retf
sbb
popa
push
jl
mov
cdq
sbb
arpl
std
jmp
outs
cmp
les
xor
out
xchg
out
test
push
int
xlat
and
and
cmp
movs
cmp
pop
mov
lahf
pop
push
repz
stc
stc
mov
das
push
out
mov
jo
cmp
mov
add
sub
jmp
ffree
dec
pop
xchg
push
xchg
inc
inc
and
aas
cmp
popa
shl
sahf
nop
jmp
lods
cmps
mov
test
cld
mov
mov
push
(bad)
jl
out
cmp
fsub
cmp
xlat
lods
dec
mov
(bad)
sbb
add
out
or
in
div
stos
push
in
jecxz
es
dec
add
push
and
shr
mov
aas
stos
jnp
xchg
das
dec
jo
pop
(bad)
dec
stc
cld
loop
test
cmp
arpl
outs
fistp
not
ror
movs
aaa
and
inc
pusha
popa
push
retf
fneni(8087
adc
push
sbb
mov
push
ins
mov
test
xchg
fisubr
jnp
test
(bad)
lods
xlat
repnz
adc
je
retf
cmp
fidivr
add
pop
ret
aas
adc
pop
xchg
jbe
xor
inc
push
addr16
(bad)
fild
lea
in
or
cmp
cmp
push
add
out
ins
or
dec
jecxz
scas
test
sbb
ror
pop
dec
cmc
addr16
mov
jnp
cmps
xchg
jae
outs
bound
mov
daa
jne
lods
fdivr
jg
push
jbe
ins
sbb
adc
sbb
xchg
bound
pop
int3
popa
push
jo
xor
jp
aad
(bad)
jl
(bad)
movs
call
sub
xchg
pop
inc
in
and
cdq
or
jmp
stos
inc
mov
cmp
adc
inc
push
out
push
mov
mov
mov
push
inc
pop
outs
sub
ret
or
(bad)
movs
mov
in
lock
retf
and
out
mov
sbb
mov
fiadd
lods
bound
dec
mov
pop
mov
test
xor
loop
mov
or
mov
jp
pop
fisttp
fnstenv
int3
icebp
cmp
pop
push
pop
jno
push
rcr
imul
pop
std
aad
mov
push
pop
in
js
cmps
mov
mov
fwait
sbb
fs
jmp
cwde
mov
inc
add
daa
jecxz
leave
push
clc
pop
dec
ret
shl
loopne
jg
adc
xchg
adc
lods
repz
jge
sub
retf
test
xchg
push
or
pop
lods
outs
data16
or
xor
das
pop
and
stos
stos
jmp
data16
pop
push
mov
lds
mov
cld
adc
pop
xchg
sbb
sub
sti
pop
xor
xor
(bad)
in
fnsave
popf
daa
(bad)
pop
push
xor
ins
fwait
xchg
call
jbe
add
sub
pop
xchg
cmp
cmp
cmp
dec
xchg
loop
cmp
or
fwait
(bad)
adc
cs
inc
mov
pop
ins
(bad)
jmp
xlat
inc
cld
inc
xchg
cwde
adc
or
les
xchg
das
cmp
pop
ss
inc
jbe
inc
daa
and
pop
and
loop
add
outs
pop
ret
xchg
pop
movs
push
sti
or
mov
sub
jmp
sbb
inc
ja
xor
cmp
rcr
mov
mov
cmc
int
xlat
sar
sbb
sbb
ja
pop
jbe
sub
pop
inc
mov
dec
std
or
test
mov
lods
nop
add
(bad)
push
ds
icebp
xchg
neg
idiv
inc
mov
loopne
fst
xchg
test
pop
sub
adc
rcl
lock
dec
push
test
repnz
in
dec
leave
inc
mov
adc
test
push
jbe
mov
rcr
add
push
in
push
sbb
xor
jg
pop
xchg
imul
mov
push
retf
ficom
(bad)
or
add
rcr
jp
ret
scas
lock
sub
and
dec
stc
inc
cld
je
scas
popf
enter
jecxz
cmp
jp
movs
cmp
scas
sub
stos
sub
adc
or
lods
sub
call
sub
test
push
pop
jecxz
cli
(bad)
push
je
or
xor
cmp
sar
sar
mov
sbb
add
out
add
and
movs
ror
or
clc
lahf
in
ja
(bad)
lea
stos
add
dec
cbw
lea
mov
xor
dec
int3
mov
and
sub
xlat
push
ins
push
(bad)
or
test
fs
sub
(bad)
or
int
mov
pop
(bad)
pop
ds
jb
outs
fstp
xchg
movs
or
mov
add
cmp
in
fwait
mov
mov
inc
and
push
push
scas
loopne
adc
adc
test
dec
cmp
retf
retf
jmp
cmps
pop
jle
jae
outs
cmps
mov
pop
ds
mov
mov
fidivr
xchg
call
test
icebp
test
call
movs
mov
mov
dec
out
iret
sti
enter
pusha
sub
dec
mov
retf
ins
div
jecxz
pop
sbb
outs
add
mov
jmp
call
stc
sbb
outs
xchg
out
(bad)
xchg
xlat
inc
in
ds
lock
xor
unpckhps
sub
and
sbb
popf
sahf
push
das
push
xchg
push
add
adc
pop
mov
adc
aaa
mov
int3
jg
lea
fucomip
cld
test
addr16
scas
in
stc
xor
popa
mov
sti
xchg
jge
mov
ins
mov
js
iret
std
xchg
xor
xor
pop
cwde
xchg
mov
jp
push
jo
jmp
inc
fs
xlat
xchg
lock
push
push
jge
inc
(bad)
mov
pop
xchg
scas
inc
out
xor
pusha
adc
ins
out
jns
jmp
push
inc
test
test
les
ds
cmp
inc
add
adc
cmp
data16
aas
dec
or
cmp
mov
sub
stos
add
sbb
(bad)
cmp
std
lds
sub
adc
test
sub
ja
mov
adc
jae
sub
inc
cmp
jmp
cmc
push
ins
popf
arpl
cmp
push
stos
outs
adc
xchg
(bad)
sub
sub
and
fldcw
and
arpl
jp
dec
xchg
or
add
sbb
jle
sbb
(bad)
aad
sub
add
out
dec
or
in
ja
fwait
retf
sbb
(bad)
bound
aad
repz
cmp
in
inc
jle
call
cmps
mov
cmp
jae
and
inc
aam
jno
xor
or
outs
cmp
and
jne
mov
sahf
jnp
mov
pop
mov
(bad)
outs
add
push
clc
jb
jne
pop
and
sbb
fdivr
sbb
lods
arpl
mov
arpl
out
pop
mov
aam
add
ins
xchg
(bad)
xchg
fs
or
mov
(bad)
shl
add
popa
sub
pop
mov
movs
dec
or
rcr
xor
sub
out
(bad)
int3
ds
pop
ror
pop
add
and
(bad)
jne
dec
sbb
xor
jp
cmp
push
fimul
lods
call
pop
(bad)
mov
cs
mov
cmp
cmp
repnz
loope
fsub
inc
add
addr16
retf
mov
inc
std
or
in
rcl
jge
stos
ds
xor
js
pop
outs
add
xchg
mov
or
add
cwde
lods
mov
push
push
push
rcr
inc
addr16
xrstor
push
jl
sahf
rcl
retf
mov
ret
or
mov
(bad)
movs
inc
das
aas
shl
aad
pusha
scas
fwait
mov
pop
push
lods
(bad)
jae
aad
or
push
jl
ins
add
pop
pop
(bad)
sbb
sub
aam
xchg
in
das
outs
imul
jae
fnstsw
retf
or
mov
call
loop
xchg
xor
(bad)
stc
not
and
call
inc
push
push
rcr
retf
xchg
sbb
inc
loope
add
pop
out
sbb
or
iret
xlat
imul
into
lea
outs
test
push
(bad)
pop
xor
pushf
ins
ja
or
ret
push
sahf
retf
adc
addr16
pop
out
cmp
(bad)
push
mov
mov
jg
fistp
jmp
push
add
lds
neg
dec
out
sbb
mov
xor
sbb
inc
dec
push
or
ja
push
pop
lods
xlat
inc
rol
pop
pop
pop
dec
iret
gs
dec
mov
mov
sub
loopne
pop
enter
pop
call
push
aas
je
pop
test
jne
push
or
sub
jbe
sub
repz
lea
sbb
je
xchg
mov
pop
dec
mov
es
sar
dec
mov
xor
mov
ss
xchg
and
int3
into
leave
mov
dec
in
jge
push
xchg
jnp
cli
pop
je
xor
and
pop
inc
cmc
xchg
pop
sbb
ja
pusha
(bad)
in
dec
push
xchg
dec
fmul
jne
lahf
jbe
clc
dec
stc
sbb
pop
mov
(bad)
sbb
dec
add
mov
jmp
test
xor
out
retf
lods
test
shl
cli
cli
popf
mov
test
pop
cld
lods
adc
idiv
out
cmc
test
jb
jb
clc
jle
dec
xchg
add
ror
sub
xchg
dec
pop
xor
fdiv
fs
sub
int3
cdq
sbb
jmp
adc
in
cmp
jbe
adc
fmul
les
push
mov
push
dec
lods
je
scas
mov
scas
mov
and
pop
push
adc
aas
das
jne
mov
inc
outs
imul
mov
sbb
mov
xor
loop
repz
mov
sub
sub
int
loopne
enter
fadd
(bad)
dec
push
ja
push
pop
fcom
lods
cmp
fdivr
inc
popa
lods
movs
and
dec
pop
mov
jg
mov
dec
mov
enter
inc
nop
call
popf
ins
lea
xchg
xlat
shl
sar
mov
add
out
xchg
dec
ins
push
sti
shl
cmps
push
mov
bound
fs
mov
mov
test
sar
bound
xlat
sub
pop
mov
mov
push
or
sbb
leave
shr
pop
jp
cmp
and
mov
lea
jl
jl
xchg
add
xchg
test
adc
jno
sub
adc
push
mov
mov
mov
clc
shl
call
in
pop
pushf
hlt
cmc
in
mov
dec
lahf
mov
inc
lea
and
loopne
scas
out
sub
xchg
inc
push
std
cmp
mov
aam
xor
pop
mov
jl
test
(bad)
dec
dec
cld
gs
mov
inc
cmp
mov
add
xchg
shl
out
and
data16
ins
jmp
mov
cld
add
sbb
pop
or
mov
aas
scas
imul
sub
nop
jbe
mov
jns
call
mov
scas
mov
rcr
and
push
pop
adc
inc
jns
push
pusha
js
inc
xchg
call
sbb
or
lods
(bad)
or
fistp
xchg
out
lock
cmp
fst
push
sbb
shl
dec
int3
rol
inc
(bad)
pop
sub
in
nop
mov
icebp
ss
mov
push
and
pop
sbb
les
jmp
mov
xor
call
pop
mov
aam
add
popa
adc
pop
test
pop
mov
and
mov
fwait
inc
or
pop
inc
rep
jmp
jp
mov
push
push
sahf
lea
(bad)
out
sub
movs
jle
dec
imul
mov
pop
xchg
cmc
(bad)
scas
xor
addr16
pop
xchg
sbb
and
xor
lahf
xchg
rol
pushf
mov
(bad)
int
in
adc
push
adc
enter
dec
(bad)
test
lds
es
rcl
std
ja
lea
sub
or
xor
les
test
stc
and
iret
rcr
in
gs
test
sub
(bad)
pop
dec
mov
in
sub
ret
call
mov
inc
je
mov
jecxz
xor
sar
daa
or
push
add
xor
sar
mov
jmp
pop
outs
movs
cmp
ret
cdq
sbb
rcr
dec
outs
xchg
and
je
and
call
mov
cwde
cmp
adc
xchg
or
sbb
xlat
and
ins
cld
fnstcw
pop
retf
iret
fs
push
and
jbe
and
mov
bound
sub
jb
push
movs
cmc
add
(bad)
jge
cmc
inc
jg
jne
mov
adc
stc
test
imul
aad
adc
in
test
mov
stos
scas
std
push
xchg
mov
iret
cmp
out
mov
or
xor
std
outs
aaa
mov
mov
cmp
inc
dec
dec
push
dec
cmp
or
retf
inc
dec
jns
(bad)
mov
and
int
leave
inc
mov
in
sbb
popf
push
scas
push
in
or
xor
jns
mov
adc
js
loope
mov
or
push
inc
pop
xlat
push
fistp
fs
push
jmp
xchg
out
or
mov
jno
sub
imul
fs
sti
jbe
aam
mov
mov
dec
jb
mov
clc
rcr
push
fwait
sub
and
loop
mov
(bad)
cmp
inc
jbe
dec
push
or
test
mov
push
mov
jne
mov
jnp
fstp
dec
jns
xor
add
repz
pop
jno
jno
inc
out
movsx
jns
jae
push
pushf
inc
es
pop
gs
mov
cwde
fcom
jle
xchg
ja
mov
test
mov
cdq
jo
inc
js
inc
push
nop
sbb
mov
daa
lods
push
ss
xor
dec
sbb
gs
adc
movs
xchg
in
jecxz
fsubr
in
test
sbb
out
xchg
(bad)
jns
sub
xchg
inc
mov
or
dec
or
ret
dec
shl
es
xchg
jmp
daa
(bad)
sti
push
adc
jl
cli
loop
popa
xchg
aaa
mov
pop
jp
dec
je
scas
aas
xor
ins
xchg
lock
lods
jne
or
ss
jmp
jg
jb
mov
retf
mov
and
inc
bound
jecxz
adc
dec
aam
dec
inc
mov
and
fst
pop
and
lods
mov
cmc
mov
call
aas
shl
sbb
movs
fldcw
repnz
aam
std
xchg
ss
test
enter
pop
clc
ja
mov
jle
cwde
mov
sub
or
inc
hlt
or
pop
xchg
out
shl
mov
movs
jnp
adc
jmp
and
(bad)
mov
sub
js
xor
jae
ins
pop
fwait
and
aas
fwait
out
sub
lahf
inc
ret
fadd
iret
pop
cs
aaa
loop
sub
mov
or
mov
out
dec
cmc
jno
jmp
(bad)
outs
out
and
pusha
js
enter
lods
outs
les
int
aaa
fwait
jne
jne
into
lods
cmps
jge
test
jp
imul
mov
mov
inc
sbb
push
popa
jnp
jae
(bad)
iret
mov
cmps
add
inc
int3
mov
sbb
xchg
(bad)
and
and
jns
push
pop
sub
jg
ret
push
test
hlt
push
in
mov
int
and
pusha
scas
call
lahf
call
jp
icebp
lods
add
ret
outs
dec
jle
xor
and
inc
shl
cmps
lods
aad
jnp
ror
push
movs
pop
dec
sbb
aad
bound
sti
pop
adc
xchg
aaa
(bad)
xchg
add
into
dec
outs
lds
out
rcl
clc
stc
mov
retf
add
in
xor
in
mov
or
outs
jnp
scas
imul
ret
jl
mov
mov
call
lahf
mov
div
arpl
pop
mov
movs
daa
xor
cmp
and
xor
inc
xchg
inc
xor
jne
inc
pop
mov
pop
jp
cmps
add
inc
loopne
cmp
mov
fldcw
pop
mov
sub
add
and
retf
jae
dec
sub
mov
daa
mov
add
sbb
inc
popf
xchg
adc
sbb
out
push
add
mov
(bad)
ins
imul
addr16
sbb
push
xlat
cmps
pop
push
pop
pusha
sti
mov
test
mov
pop
out
popf
sub
and
mov
scas
sbb
ret
adc
call
xchg
mov
cmp
push
mov
cli
fadd
clc
push
mov
ror
push
sub
sbb
and
icebp
movs
jmp
lds
(bad)
pop
sub
cmps
mov
mov
(bad)
xchg
jns
aad
xor
inc
push
mov
sbb
test
sub
sbb
push
sub
retf
push
imul
sbb
cwde
stos
adc
push
dec
pop
sub
and
xchg
adc
leave
pop
xchg
mov
mov
js
xchg
jecxz
inc
in
std
cli
dec
xchg
push
mov
xchg
add
adc
mov
dec
out
ret
add
sub
cmp
(bad)
ins
push
icebp
cmp
idiv
gs
ret
dec
call
js
popf
out
fmul
nop
out
fisub
inc
(bad)
ficom
(bad)
(bad)
xor
jno
jmp
scas
ja
xor
sbb
add
or
sahf
out
add
and
jmp
jg
in
retf
push
out
or
dec
or
fst
bound
mov
sub
addr16
jecxz
mov
lods
or
xchg
jnp
sbb
sub
push
jb
xchg
sub
push
into
dec
pshufw
and
mov
mov
push
inc
mov
mov
mov
loope
mov
cmp
fldenv
xchg
pop
jmp
xchg
fsub
or
shl
xchg
lock
ds
leave
adc
sub
scas
data16
movs
(bad)
stos
xor
xchg
push
sub
mov
or
or
movs
cmp
mov
xlat
test
mov
rcl
mov
sub
in
and
push
xor
inc
mov
adc
fdiv
mov
mov
inc
or
jbe
in
add
sti
call
shr
push
enter
pop
daa
daa
sahf
enter
in
shr
sbb
push
or
cmp
inc
outs
add
add
mov
rcl
adc
dec
dec
sub
mov
lahf
test
sub
sub
adc
aas
or
shl
lea
test
xor
enter
aad
push
int3
lds
rcr
mov
fsubr
fwait
call
push
ret
or
cwde
iret
jne
repnz
call
dec
cmp
ins
xlat
js
pop
call
stos
pop
mov
jno
lahf
div
push
outs
adc
dec
dec
sbb
cmp
mov
and
(bad)
or
and
xor
(bad)
aad
(bad)
mov
pop
in
sbb
cld
jmp
loope
and
faddp
adc
or
mov
push
mov
jne
add
dec
pop
push
inc
retf
jo
jns
dec
ret
mov
rcr
add
pop
js
aaa
into
sbb
bound
pusha
or
icebp
or
cwde
jmp
mov
pop
(bad)
sar
imul
pop
inc
cwde
dec
test
xchg
adc
mov
scas
(bad)
outs
movs
xchg
clc
add
shr
mov
mov
mov
sbb
test
push
push
mov
nop
(bad)
stos
cmp
cwde
pop
aaa
or
xor
cmps
ror
dec
in
xor
sbb
jl
imul
xchg
int
ret
pop
sub
shl
mov
inc
bound
adc
pop
mov
pushf
es
aam
fst
popa
das
in
adc
jnp
fimul
inc
adc
fcomp
jle
pop
test
ja
aaa
push
call
ins
jns
xchg
mov
lods
lahf
pusha
loope
retf
cmp
pop
jnp
jg
pop
out
pop
call
pop
fwait
push
lods
ror
in
test
sub
shr
rcr
and
push
or
neg
aas
aas
and
std
xchg
pop
movs
inc
xor
pop
push
dec
and
cld
(bad)
ror
sbb
jne
sbb
popf
pop
sbb
rol
rcl
gs
inc
rep
fst
jbe
das
cmps
fisubr
aam
jmp
scas
mov
cmps
pushf
push
push
movs
xor
pop
fsub
inc
int
movs
stos
ror
in
fs
fsubr
xchg
xor
jb
into
pop
lock
push
sub
mov
lods
mov
push
fild
xchg
test
or
push
daa
mov
popf
div
mov
add
aaa
xchg
gs
mov
xchg
ins
jp
cmp
jo
push
arpl
test
pusha
and
sar
sahf
mov
leave
scas
fsubr
mov
xchg
scas
movs
or
in
out
cwde
xchg
dec
ret
fisubr
sub
(bad)
(bad)
mov
sub
mov
inc
xor
jmp
(bad)
fwait
scas
and
add
pushf
adc
mov
lea
arpl
fadd
or
xor
rcr
jg
ret
and
in
jns
shr
xor
lods
(bad)
jmp
pusha
(bad)
test
mov
sub
addr16
jg
ss
push
fistp
push
bswap
and
cmc
push
(bad)
jae
mov
and
jae
or
cld
or
push
sahf
std
enter
ja
push
hlt
aam
inc
jmp
popa
nop
fidivr
cwde
les
jle
ret
daa
ins
add
cdq
imul
mov
mov
ret
fwait
xchg
stos
dec
sub
stos
jae
xchg
dec
mov
loopne
mov
adc
cmc
mov
xor
dec
icebp
retf
dec
and
mov
lds
jecxz
and
mov
rol
jae
inc
cmp
sub
xchg
cmps
out
cdq
dec
fwait
xlat
jge
int
mov
dec
aam
dec
ret
sbb
sbb
dec
in
push
dec
sub
stos
(bad)
lods
xchg
cmp
das
std
hlt
xchg
sub
(bad)
sbb
mov
sub
out
push
out
sbb
adc
push
push
dec
pop
arpl
xor
fmul
retf
adc
aam
jb
xchg
mov
test
ja
fs
and
sahf
mov
mov
push
(bad)
rcr
pop
adc
nop
and
dec
jp
pushf
jmp
ds
sahf
es
jbe
into
cdq
pop
ds
lods
(bad)
cmp
(bad)
ja
jp
into
loope
sbb
gs
mov
add
xchg
xchg
cmp
push
test
sbb
call
mov
xchg
fisttp
jecxz
iret
outs
xchg
stos
fucomip
push
mov
out
or
int
mov
lods
or
jp
adc
sub
push
mov
in
not
dec
repnz
xor
push
or
pop
cs
push
mov
aad
xchg
add
xchg
cs
add
call
push
inc
inc
jnp
push
push
movs
mov
repnz
push
push
mov
cmp
jge
push
and
mov
xor
jae
fist
xchg
call
pushf
pop
pop
mov
push
loop
sbb
pop
retf
mov
test
push
jae
(bad)
add
jae
pop
xchg
out
stos
jl
inc
lock
ins
cmp
call
cmc
pusha
push
pop
(bad)
in
jno
mov
call
fisttp
shr
jns
mov
stos
adc
or
push
and
cs
push
rcr
and
pop
dec
jg
retf
jle
push
or
ret
or
push
arpl
inc
aad
and
test
lahf
fsub
push
adc
adc
pop
mov
fisub
jmp
jg
jae
mov
xchg
xor
cmc
jl
xchg
stc
push
in
mul
push
lods
mov
sub
lods
ret
xchg
into
bound
inc
pop
shl
and
out
in
cmp
mov
aas
jbe
inc
dec
mov
mov
sbb
xchg
ret
test
sti
pop
push
daa
popa
sub
add
aad
loop
sbb
or
fadd
leave
mov
jns
(bad)
lds
pop
ds
jne
push
popa
adc
mov
pop
mov
jbe
fst
js
inc
(bad)
int
in
pop
lods
sar
dec
xchg
or
lea
push
jl
movs
fldenv
retf
push
shr
je
sbb
or
jp
add
rcr
or
adc
cmp
xor
or
pop
aam
xchg
sub
cmp
(bad)
neg
dec
cld
xchg
int
mov
dec
pcmpgtd
sub
ins
mov
outs
xchg
mov
xchg
int
jmp
xor
arpl
jp
adc
fstp
jae
pop
dec
cmps
pop
xchg
sub
dec
fst
sub
das
das
pop
ins
mov
out
pop
dec
scas
loope
push
pop
mov
test
jno
and
push
dec
xchg
ret
sub
loope
or
jmp
add
repz
out
mov
jge
adc
add
inc
cmp
cmps
stos
cs
sar
pop
dec
cmp
mov
enter
test
dec
mov
sbb
mov
push
ror
je
fnstenv
mov
in
fdivrp
adc
push
xlat
popa
jl
(bad)
pop
add
adc
nop
in
idiv
adc
icebp
push
movs
mov
fscale
loope
xchg
and
shl
xchg
sbb
inc
cmp
dec
jge
out
pushf
cmp
arpl
inc
dec
and
push
mov
call
stos
mov
inc
js
sbb
fs
adc
adc
scas
rcl
rcr
mov
fstp
cli
cld
push
sub
adc
jb
aad
adc
enter
adc
das
pop
mov
push
and
jbe
adc
ins
popf
fstp
cmp
jno
fldenv
xor
stos
out
sub
pusha
pop
ret
or
aaa
outs
les
push
rcl
jp
xchg
jmp
sbb
mov
and
lods
xchg
jnp
fwait
add
mov
pop
sar
in
imul
(bad)
lahf
int
pop
fwait
push
push
lea
repz
cmc
push
xor
aad
sahf
and
sub
dec
mov
push
sub
sub
dec
inc
cmp
fsubp
(bad)
mov
retf
scas
jge
(bad)
mov
sti
push
sbb
ficom
ins
lods
xchg
idiv
jb
push
rcl
lea
outs
ret
and
and
sub
mov
or
clc
mov
stos
repnz
and
jbe
enter
inc
add
add
xor
pop
(bad)
or
neg
mov
out
inc
mov
push
push
outs
pop
fld
fs
rcr
mov
jl
sub
inc
bnd
pop
xor
int3
or
jbe
pminsw
iret
pop
test
xor
js
cmc
add
adc
mov
pushf
sbb
cmp
cmp
xlat
sub
movs
push
ficom
cmp
fs
cmp
popa
inc
mov
popf
add
sbb
movs
adc
inc
xchg
lds
test
aaa
mov
cmp
es
push
adc
push
stc
add
loope
sub
hlt
addr16
push
pop
jne
push
mov
push
adc
cmp
out
in
mov
jb
jb
xor
jmp
icebp
stos
jns
xchg
xor
mov
jbe
xchg
pushf
push
int3
inc
push
popf
add
xor
stos
daa
mov
dec
pop
and
push
repnz
cmp
and
mov
loop
jnp
inc
in
xor
inc
inc
push
jg
jb
aam
pop
mov
xor
mov
push
in
das
scas
lods
pop
jbe
add
xor
das
xchg
add
lahf
cmp
(bad)
imul
add
xor
mov
adc
push
stos
out
pop
call
iret
mov
test
xchg
fistp
or
bound
inc
jmp
sbb
jge
sbb
add
mov
out
add
dec
add
pop
sahf
or
xchg
or
in
fdiv
(bad)
pop
mov
cmovs
add
add
js
xchg
xchg
cmps
jbe
mov
add
mov
cld
hlt
test
lods
dec
gs
imul
cmp
cs
(bad)
(bad)
aad
dec
pusha
ja
not
inc
sbb
mov
mov
dec
or
jae
out
adc
imul
stos
push
adc
sub
stc
test
cmp
mov
aas
pop
sub
push
pusha
cdq
mov
inc
xchg
cmp
mov
lea
int
hlt
add
cmp
test
mov
loop
out
jl
es
lea
hlt
and
jmp
inc
cmps
inc
mov
sbb
cmc
mov
adc
cli
mov
(bad)
fdiv
add
jns
pop
inc
jg
push
sub
mov
jle
pop
jle
fstp
in
call
mov
cmps
sub
xor
xor
jo
add
jge
addr16
mov
dec
lods
(bad)
mov
jae
mov
xchg
gs
xchg
xor
cmp
push
cmp
pop
popa
lahf
mov
pusha
push
dec
aas
mov
jb
inc
fwait
xchg
test
bound
pop
sbb
pushf
popf
(bad)
mov
loope
xlat
mov
clc
fdivp
mov
xor
dec
cmps
es
sub
or
inc
add
gs
sbb
je
lock
mul
sar
mov
jle
and
jne
jmp
test
mov
and
ret
pop
enter
mov
mov
dec
retf
push
cmp
sti
lods
push
ins
mov
call
les
sbb
and
inc
sbb
sti
push
jnp
push
jo
out
mov
or
test
and
jge
jo
pop
xchg
cmp
out
fsubr
(bad)
(bad)
movs
cld
fwait
js
mov
mov
mov
psrad
mul
std
sti
push
jno
in
adc
lods
mov
or
aad
and
jmp
pop
pop
push
cmp
vandps
pop
(bad)
sbb
outs
movs
jp
stc
loope
sti
loop
jl
hlt
inc
(bad)
xor
call
fisub
push
rol
jnp
inc
mov
dec
mov
data16
retf
mov
cdq
and
cmps
jb
mov
push
jl
test
hlt
xchg
pop
fisttp
mov
mov
scas
pop
outs
cmp
or
xchg
xchg
shl
imul
dec
xlat
dec
stos
xchg
push
mov
adc
mov
push
pop
dec
mov
pusha
je
nop
ret
dec
xchg
mov
fcmovnbe
rol
(bad)
adc
mov
xor
clc
int
mov
xor
stc
fiadd
aas
mov
sahf
and
jns
(bad)
test
mov
add
icebp
xor
inc
call
dec
mov
scas
sub
and
push
ins
pop
(bad)
aam
push
jbe
mov
dec
shr
mov
cmp
jge
jl
pushf
mov
es
inc
arpl
fwait
(bad)
mov
or
push
sbb
sti
inc
and
in
inc
push
std
xchg
mov
inc
imul
fwait
sbb
je
js
fistp
xlat
ins
pop
mov
cmp
frndint
pop
jle
mov
dec
mov
test
cmp
cmps
dec
pop
cs
xor
(bad)
sahf
push
fnsave
mov
push
pusha
movs
jns
mov
out
shl
fsubr
or
loope
fwait
cs
push
out
fisubr
dec
xchg
adc
jmp
mov
pop
xor
push
outs
gs
(bad)
test
mov
jae
push
mov
lock
xor
adc
sti
inc
lods
rcl
loopne
mov
push
xchg
dec
push
ss
mov
mov
adc
mov
dec
mov
ror
mov
ret
lods
mov
sub
xchg
nop
repnz
mov
movs
pop
js
in
inc
(bad)
lahf
lods
push
inc
ins
ja
(bad)
stc
rol
nop
sar
push
xor
aad
pop
std
pusha
cmps
and
or
sar
sub
mov
retf
xchg
lods
add
adc
call
lods
pop
push
cmp
sbb
sbb
aas
mov
aad
movs
call
test
popa
inc
mov
clc
cmps
push
and
iret
in
sub
pop
mov
fs
mov
mov
xchg
and
push
inc
pop
sub
int3
pop
sub
sti
jmp
mov
retf
std
or
iret
imul
mov
hlt
lahf
out
adc
push
stc
jbe
ds
xchg
nop
jecxz
or
xor
pushf
push
or
adc
or
push
ins
sub
fcomp
sbb
call
popa
inc
pop
int3
fistp
int
nop
push
(bad)
in
mov
cdq
ins
nop
jns
push
popf
xchg
imul
or
gs
sbb
inc
pusha
mov
out
outs
fdiv
and
(bad)
adc
psubd
je
loop
aas
ror
push
pop
add
xor
fidiv
push
mov
cdq
push
in
dec
mov
cld
fstp
in
jbe
add
imul
or
jle
add
popa
lods
pop
ins
jle
js
jb
(bad)
arpl
xor
iret
sub
jnp
push
into
mov
pop
inc
popf
int3
mov
mov
dec
xor
or
inc
push
pop
ret
push
push
cmc
in
arpl
adc
push
icebp
cmp
cmp
fimul
out
fs
or
xor
or
stos
test
adc
inc
xlat
cmp
aaa
jge
lods
cld
pop
fsqrt
pop
xchg
xchg
add
loope
inc
cwde
push
lods
popa
pop
(bad)
cdq
pushf
bound
idiv
nop
stos
push
aaa
fucomip
add
push
in
inc
jp
sbb
out
lock
pop
mov
dec
nop
int3
pushf
stos
xchg
les
icebp
cmc
mov
xchg
aaa
les
sbb
sbb
rol
bound
mov
lods
retf
mov
pop
push
in
in
and
scas
or
es
or
mov
iret
shl
sbb
mov
outs
inc
lods
dec
jge
ja
ror
cmc
jmp
movs
(bad)
hlt
cs
les
mov
cmps
div
adc
cmp
outs
inc
pop
mov
mov
nop
mov
xor
add
jge
into
push
mov
mov
cs
push
xor
adc
dec
lahf
inc
jp
out
and
sti
cmp
(bad)
mov
mov
(bad)
retf
pop
xchg
mov
pop
pusha
sbb
pop
shr
cdq
mov
repnz
cmp
stos
fld
jle
rol
adc
(bad)
xchg
dec
cmps
ins
les
sub
push
mov
and
mov
(bad)
cmps
sub
lahf
lock
out
(bad)
pop
push
pusha
adc
dec
cmps
aam
adc
fs
movs
lock
ret
cmp
loop
imul
enter
repnz
or
adc
lea
push
inc
push
test
in
stos
mov
xchg
aad
xlat
mov
mov
xchg
rol
popf
pop
outs
(bad)
nop
xchg
cmp
mov
mov
inc
scas
je
xor
sub
in
dec
mov
pop
out
fdiv
mov
push
gs
sahf
mov
mov
pop
pop
jg
ds
cmp
lds
int3
xchg
mov
imul
mov
sahf
outs
aam
xor
outs
xor
xchg
cdq
add
cmps
int3
repz
adc
sbb
(bad)
jp
pop
cmp
out
dec
(bad)
cmc
push
mov
adc
adc
or
outs
sub
lds
nop
add
sub
pushf
cmp
push
mov
mov
xchg
nop
ins
ins
push
fistp
adc
cmp
addr16
pushf
gs
popa
imul
mov
test
pop
mov
mov
aam
add
mov
es
pop
sbb
mov
xor
mov
(bad)
mov
and
scas
loope
mov
inc
push
pusha
push
imul
or
out
or
(bad)
mov
in
xor
or
and
push
adc
sar
and
ret
jecxz
mov
pop
es
mov
scas
push
js
xchg
je
or
mov
pop
cwde
test
rcr
mov
sbb
cmp
out
xor
sub
daa
mov
pop
dec
jne
inc
aaa
retf
into
inc
sbb
test
sahf
adc
mov
fdivp
jge
fild
jl
adc
sahf
sbb
das
cbw
pop
bound
ror
fidivr
aaa
jmp
lods
xchg
shl
pop
mov
lock
sahf
jl
sti
jae
jmp
pop
mov
fcom
outs
sbb
adc
mov
jecxz
adc
inc
(bad)
pop
loop
test
xchg
dec
fs
popf
ror
(bad)
xor
ror
sub
retf
in
daa
retf
pop
and
push
stos
std
pop
jg
fmul
imul
cli
adc
retf
loop
popa
shr
movntps
std
scas
mov
inc
es
fs
sub
lods
dec
jge
sub
xchg
dec
mov
push
je
sbb
inc
mov
scas
call
gs
(bad)
adc
mov
fxch
adc
adc
lds
cli
pop
xchg
mov
jnp
pop
sbb
scas
das
sar
push
pushf
mov
jb
mov
pop
test
xchg
dec
out
lods
xor
aad
pop
aad
or
cmp
aaa
aaa
rcl
jns
xchg
push
push
sar
sub
xchg
aad
cmp
push
lahf
push
jne
cld
adc
leave
xchg
into
or
jle
cmp
sub
cmps
bound
xchg
xchg
ret
push
dec
enter
pop
pusha
xchg
(bad)
fstp
cli
jmp
or
out
in
cmps
or
dec
pop
push
fild
loope
push
push
lahf
sar
inc
adc
sub
and
in
jnp
cmp
jo
sbb
pop
sahf
xor
sub
stos
outs
imul
and
ss
add
inc
xchg
aas
jb
push
enter
bound
stos
hlt
in
xchg
ret
xchg
ror
inc
push
push
and
push
lods
loope
outs
jecxz
xchg
and
btc
pop
outs
adc
lea
jbe
mov
in
dec
xchg
sbb
or
mov
jbe
mov
pop
jge
addr16
pop
stc
push
gs
push
dec
pop
and
cmps
addr16
or
pop
add
push
and
in
mov
ins
std
push
mov
mov
jp
ins
repnz
loope
ins
or
aad
cmp
lock
pop
xor
jmp
fldl2t
lea
add
stc
lods
imul
push
add
aaa
out
add
xor
or
(bad)
retf
ror
xchg
mov
inc
mov
jbe
(bad)
inc
mov
sbb
cmps
scas
(bad)
sti
aaa
stos
gs
das
int
sbb
repz
cmp
loop
enter
and
add
rol
(bad)
lods
jmp
popf
call
repz
or
mov
sub
pop
cmps
rcr
test
inc
xchg
xor
mov
test
fwait
and
dec
das
iret
scas
cmp
pushf
ja
mov
dec
ins
pop
and
cmp
out
mov
rcl
dec
iret
pop
dec
repnz
jge
adc
mov
fwait
inc
pop
xchg
add
(bad)
repz
pop
pop
test
mov
nop
es
enter
pop
stos
fmul
cmp
push
(bad)
jb
mov
rol
(bad)
jmp
mov
shl
mov
repz
int3
js
enter
fild
inc
sub
outs
mov
cmp
push
mov
(bad)
in
xor
pushf
loopne
aaa
jmp
add
popf
aad
retf
inc
xchg
pop
pop
mov
ins
enter
mov
xor
mov
dec
add
lahf
mov
int
mov
push
ret
jmp
cmp
int
push
jmp
xchg
aas
in
lds
sub
aaa
ja
je
ins
push
xor
adc
mov
cmp
xor
pop
test
sub
add
call
ds
add
xchg
lods
inc
push
cmp
ds
mov
fimul
push
std
jns
sti
lds
jecxz
jmp
or
xlat
shl
pop
cdq
pushf
push
es
jmp
xor
leave
mov
push
jecxz
lods
mov
cmps
push
pop
and
xchg
ret
and
xchg
(bad)
lahf
shl
push
pop
cmps
xor
dec
test
shl
int3
lds
mov
fstp
lods
clc
stc
jns
(bad)
fmul
sub
mov
sub
out
cmp
push
retf
sub
mov
imul
dec
xchg
jns
cmp
mov
fidiv
jmp
mov
lods
lods
lds
pop
xor
jns
in
inc
dec
(bad)
int3
mov
fimul
ret
ror
or
xor
mov
in
data16
mov
adc
stos
adc
xlat
aaa
ds
adc
jmp
xchg
loope
mov
ds
add
aam
cmp
pop
jl
mov
cmp
add
adc
cmp
cdq
call
mov
cmp
(bad)
es
call
dec
jmp
xchg
cmp
add
mov
pop
and
cld
imul
icebp
fs
cmp
cli
aam
rol
aaa
cmp
xchg
clc
shl
or
in
repz
ins
pop
shr
mov
sub
adc
inc
lods
sub
push
out
rol
sbb
clc
push
retf
sbb
adc
nop
sbb
pop
and
repnz
jl
pop
stos
sbb
push
jl
push
mov
add
je
dec
fldenv
and
jns
mov
addr16
push
fild
push
arpl
add
sar
pusha
xor
mov
(bad)
pop
ds
sub
ja
out
mov
sbb
loop
mov
add
jle
dec
inc
and
xlat
cmc
pop
in
and
cmp
xor
fwait
xchg
retf
ret
aad
test
test
sub
(bad)
loop
in
pusha
and
push
xor
test
or
iret
cwde
das
aaa
mov
fild
pop
push
push
push
mov
test
inc
cmp
add
inc
xlat
sbb
out
(bad)
and
inc
pusha
rcl
mov
out
sub
push
pop
adc
pop
movs
sub
fwait
pop
rcr
cmps
push
pop
mov
ins
adc
fist
pop
stos
aaa
addr16
cmp
repz
jnp
xor
dec
shr
cmps
stos
in
jbe
out
repz
arpl
mov
ret
mov
cmp
push
dec
scas
jo
iret
xchg
dec
and
hlt
cmps
dec
jmp
loopne
sub
lock
mov
cmp
(bad)
nop
aad
sti
neg
mov
fwait
lahf
sti
add
and
cmp
mov
lea
cmp
loopne
sar
pop
xchg
fcom
push
shr
inc
push
jmp
enter
sar
pushf
arpl
cmp
fist
pop
rol
cmps
(bad)
ret
scas
(bad)
cmps
sahf
push
adc
push
xlat
scas
ficomp
push
lods
sbb
repz
jmp
add
fmulp
or
jmp
mov
inc
pop
jecxz
cmps
xchg
in
clc
(bad)
jbe
dec
pop
adc
loope
popf
adc
pop
mov
pop
imul
mov
shr
dec
data16
pop
inc
jbe
ja
out
push
xor
outs
push
ins
xchg
push
xchg
into
call
or
lods
adc
leave
jae
cmp
push
ins
jge
loope
shl
pop
(bad)
fsubp
lds
jbe
pop
nop
cwde
jae
cmp
push
outs
(bad)
ja
xchg
stc
jno
(bad)
jg
sti
or
loop
cdq
aaa
movd
ror
and
imul
jbe
popf
neg
mov
fild
out
mov
jne
jno
sub
out
jnp
movs
xchg
mov
or
(bad)
cmp
out
sub
lds
adc
stos
push
dec
push
inc
bound
adc
repnz
mov
or
cmc
jmp
adc
(bad)
enter
repnz
and
and
loopne
adc
sbb
pop
lods
cs
fcmovne
push
push
mov
add
lock
(bad)
inc
xchg
cdq
mov
test
pop
and
rol
ss
lahf
xchg
sub
(bad)
fs
cmp
sub
and
arpl
xchg
add
repnz
std
sub
push
sar
sti
xlat
push
mov
xchg
push
sub
and
adc
(bad)
pop
add
popf
ret
pop
pop
scas
add
xor
fs
test
xor
pop
pop
retf
bound
bound
push
pop
push
pandn
push
jmp
pcmpeqd
cmp
int
xor
div
mov
ret
pop
dec
stos
retf
lds
push
lods
mov
sbb
and
add
sub
stos
(bad)
aam
ret
in
and
ret
rol
cmp
fimul
xchg
dec
pop
fild
scas
inc
push
arpl
ss
dec
add
outs
sub
dec
mov
lock
xchg
cmp
out
xchg
cmp
mov
(bad)
push
jecxz
inc
enter
xchg
push
cmps
fs
fadd
fldcw
shl
adc
std
mov
in
jmp
les
cdq
shl
mov
jecxz
and
xor
out
loope
in
inc
xlat
sub
sbb
(bad)
mov
fsubr
xchg
push
into
pushw
cmp
ja
pop
movs
jae
jle
jmp
(bad)
ss
adc
jg
cmp
adc
push
ret
dec
test
mov
(bad)
mov
pcmpgtd
out
test
mov
dec
or
dec
lods
or
cmc
xor
add
sub
xchg
xchg
popf
cmps
cmp
lods
test
push
fnsave
stc
int3
imul
enter
or
dec
sar
jae
es
push
pop
aas
push
dec
cmp
shl
push
xor
imul
into
fs
outs
into
ficom
mov
and
loope
xor
xchg
xor
add
stos
test
xchg
mov
fiadd
mov
sub
sar
xchg
mov
stos
xor
pop
js
adc
pop
fmul
loopne
in
add
stc
and
and
jg
and
jecxz
mov
jns
es
loopne
jg
in
aaa
mov
je
sbb
sbb
push
lock
push
push
dec
mov
push
addr16
mov
and
cli
int
lahf
scas
fimul
push
xchg
pushf
jp
cmp
or
mov
and
jle
jecxz
aad
std
int
sbb
movs
dec
aaa
daa
and
fst
mov
jmp
pop
pop
pushf
mov
sti
xchg
xchg
pop
leave
lods
push
xchg
sbb
(bad)
das
mov
jns
jle
push
(bad)
js
fistp
dec
push
mov
sbb
inc
cmp
pop
xor
xchg
sub
mov
add
pop
imul
sbb
sub
inc
xchg
int
mov
pop
mov
dec
cmp
jnp
shl
lds
xor
loope
call
dec
dec
jmp
fcom
daa
or
jmp
lods
mov
sbb
push
mov
out
inc
aas
and
sub
jae
mov
and
or
rol
mov
add
cmp
enter
pop
dec
fisttp
imul
add
cwde
jmp
push
add
in
pop
fisttp
int3
jmp
int
fisttp
cmp
std
inc
out
mov
sbb
mov
scas
inc
mov
into
arpl
jge
jno
cli
movs
and
mov
lods
cmp
dec
sub
dec
ins
mov
adc
pop
or
mov
fidiv
xor
jne
cdq
out
mov
cmp
mov
cmp
addr16
loopne
xor
cs
ins
dec
add
lods
dec
(bad)
fisub
mov
xor
sub
inc
add
pop
and
inc
add
outs
imul
nop
sbb
call
mov
bound
mov
mov
int3
scas
fisub
fmul
pop
retf
mov
outs
sub
inc
sub
or
inc
cmp
adc
das
into
adc
das
out
ja
ss
rcr
imul
sub
das
jb
in
mov
popa
stos
fsubr
cmps
aas
ins
fwait
mov
pop
or
aas
repnz
and
push
sbb
mov
pop
cli
push
movs
ds
pop
adc
arpl
(bad)
mov
push
nop
or
push
js
rcr
add
call
push
push
out
dec
es
test
out
cdq
and
adc
jmp
mov
sti
out
sbb
jp
popa
pop
xchg
(bad)
test
gs
loope
out
inc
sbb
shr
div
push
rcl
inc
ds
call
ss
int
sahf
and
ror
push
int
scas
lock
hlt
adc
push
loopne
and
leave
ror
sahf
sbb
shr
cmp
adc
add
call
sub
push
inc
or
inc
pop
fs
retf
push
pushf
mov
pop
fiadd
jl
adc
xchg
jg
shl
jmp
jp
jmp
jmp
mov
mov
in
pop
(bad)
sub
jl
pop
mov
mov
sub
sbb
add
sbb
icebp
test
jb
and
scas
or
cld
inc
mov
xchg
and
adc
adc
sar
mov
cmp
adc
and
jecxz
cwde
imul
nop
push
sar
xor
xchg
xchg
adc
aaa
fwait
xlat
pop
and
out
cmp
call
sub
ja
cwde
loope
sti
fimul
xlat
adc
loop
xor
and
cmc
mov
repnz
es
test
cmp
xor
jle
int3
enter
movs
jno
mov
adc
repz
cmp
pop
push
jae
or
sbb
jne
push
movs
setae
sub
ja
sub
sub
jno
jge
mov
je
inc
jo
cmps
retf
stos
sbb
pop
jecxz
mov
popa
mov
mov
xor
mov
cmp
out
mov
sbb
cmp
pop
mov
aam
out
movs
jl
fadd
cmc
sub
inc
fdiv
mov
sbb
mov
dec
ret
out
data16
pop
adc
mov
xchg
inc
call
inc
pop
and
mov
xchg
mov
sbb
pusha
sahf
or
shl
int
sbb
outs
cmp
out
cwde
cmps
pop
movs
rol
test
dec
push
test
iret
repnz
(bad)
pop
sub
sub
add
int
xchg
mov
cs
ins
mov
in
fsub
lods
mov
adc
pop
es
outs
sbb
mov
inc
out
and
dec
adc
xchg
mov
mov
xor
movs
repnz
scas
fmulp
fwait
jne
push
adc
das
cdq
lods
ds
mov
sbb
inc
in
xchg
mov
fiadd
add
cmp
cmp
scas
mov
and
dec
fidivr
es
push
inc
add
repnz
sti
add
jmp
aad
in
and
jecxz
dec
pop
and
mov
dec
stos
sbb
shr
or
cdq
cmps
addr16
add
sub
pop
outs
idiv
jno
pop
icebp
cmp
ja
or
loop
ror
into
mov
pop
dec
int
add
cs
sub
aam
shl
stos
inc
push
leave
cmp
jo
dec
adc
inc
mov
dec
cmps
adc
(bad)
fistp
inc
push
movs
sbb
fistp
sub
repz
sub
or
cmc
fs
push
add
add
iret
in
sti
nop
jne
call
mov
jge
ins
sub
cmps
xor
push
ficom
pop
leave
jne
inc
dec
add
ds
(bad)
push
add
mov
das
ds
xor
daa
and
sbb
push
shr
pop
(bad)
and
lahf
ds
jnp
(bad)
ret
and
dec
push
cwde
inc
(bad)
cmp
inc
sbb
call
adc
retf
scas
push
add
jl
mov
fucom
lods
jns
mov
stc
sub
push
and
xchg
xchg
add
inc
jb
(bad)
sub
mov
mov
mov
xchg
cmps
stos
dec
call
not
ret
call
hlt
arpl
icebp
jnp
ror
rol
montmul
cmps
add
sub
or
mov
xor
movs
dec
sbb
out
addr16
adc
and
add
mov
std
cwde
dec
test
xchg
jge
retf
or
aam
xlat
mov
mov
pop
retf
aam
imul
xor
cmp
xchg
mov
mov
and
cmp
enter
cmp
adc
adc
fisubr
add
loopne
cli
int3
hlt
retf
mov
popf
mov
ins
shr
mov
psubw
sub
sbb
push
(bad)
dec
scas
inc
ret
add
mov
or
es
cdq
shl
sbb
call
push
popf
adc
test
pop
mov
add
int3
jmp
xchg
fldcw
add
dec
scas
jg
in
stos
xlat
arpl
pushf
adc
out
call
movs
stc
and
cli
or
dec
fdiv
aad
xor
cmp
inc
push
scas
sbb
mov
or
movs
arpl
pop
loope
or
ins
repz
aam
sar
inc
outs
mov
fiadd
or
or
(bad)
add
jg
dec
cmps
fsub
je
pop
cmp
fs
test
test
sahf
addr16
mov
data16
enter
mov
push
xchg
sbb
adc
loope
xchg
(bad)
in
jo
cmp
add
das
outs
push
xchg
sub
adc
mov
pop
cs
dec
push
dec
mov
leave
and
jle
pop
xor
sbb
mov
push
dec
pop
js
clc
bound
icebp
push
fistp
lods
jge
jecxz
xor
cmp
push
jp
iret
mov
pop
push
fisub
push
jns
scas
test
mov
cmp
(bad)
jne
or
das
(bad)
and
xor
in
and
push
les
sub
push
push
(bad)
cmps
iret
cld
pop
mov
clc
add
push
outs
std
push
mov
ds
into
mov
icebp
jp
(bad)
cs
push
cld
sahf
pop
or
das
sub
xchg
vsubpd
stos
inc
xchg
setbe
jle
or
pop
adc
add
dec
lea
fnstcw
test
and
jecxz
mov
in
push
pop
in
sub
mov
repz
sbb
dec
cmp
test
dec
jo
stos
rcr
push
sbb
push
sub
jecxz
int
and
cmp
imul
pop
dec
ror
inc
in
and
cwde
mov
mov
jbe
and
mov
(bad)
pusha
push
fadd
stos
out
out
cmp
inc
lea
sub
int3
dec
inc
bound
jb
xor
retf
add
xor
in
lock
ror
dec
jae
and
or
ja
push
out
in
loop
push
std
mov
jmp
mov
sub
cli
sti
lock
mov
mov
inc
arpl
mov
movs
jge
add
in
adc
push
push
push
ins
xor
pusha
dec
mov
ds
xor
mov
inc
pushf
cld
pushf
hlt
xlat
dec
jnp
cmc
js
ins
cmp
mov
mov
push
mov
sub
ret
retf
push
adc
dec
int
sub
movs
push
mov
aad
jne
dec
sar
and
aad
sbb
dec
mul
arpl
mov
pushf
inc
mov
cmp
jmp
inc
pop
inc
in
jae
xchg
or
mov
cmp
fild
dec
mov
push
inc
js
cmp
cmp
mov
mov
inc
mov
and
shl
inc
enter
cmps
test
add
jge
je
push
rcr
test
into
push
nop
lock
ror
sub
cmps
pop
call
not
ficom
pop
inc
cmps
shl
ficomp
scas
jle
les
or
das
adc
rol
jmp
arpl
test
pop
mov
jle
ins
inc
sbb
sti
fistp
je
cs
and
sbb
pop
int
add
into
mov
out
call
repz
out
sbb
jle
pop
jg
push
adc
retf
xchg
push
arpl
ror
cmp
cmp
popa
lahf
sub
and
push
dec
sar
fdiv
test
ret
mov
or
add
adc
sti
int
add
dec
add
in
jl
pop
shl
loope
call
dec
clc
outs
idiv
pop
add
in
(bad)
and
outs
ret
inc
pop
xor
or
int3
jmp
shl
inc
out
cmp
jg
mov
cmps
mov
jl
push
push
xor
adc
fist
jmp
test
ss
enter
sub
and
scas
push
(bad)
out
cmp
mov
cli
outs
out
sbb
jb
cwde
fnstenv
(bad)
sbb
mov
jb
sahf
popa
inc
push
stos
cmps
outs
mov
inc
sub
sar
xchg
cmps
shl
or
xor
cmp
aam
scas
add
jns
fsubrp
xchg
(bad)
jg
sahf
sub
mov
sbb
repz
fisubr
mov
push
cmc
adc
pop
popf
call
jg
(bad)
pop
dec
push
call
outs
lods
push
(bad)
idiv
in
pusha
or
imul
inc
loop
shl
push
iret
jle
jl
fadd
push
dec
mov
hlt
xor
jg
mov
(bad)
ins
mov
cmps
add
and
imul
and
push
or
enter
loopne
jns
mov
mov
test
mov
jmp
jge
cli
add
rol
imul
xchg
outs
fist
aad
bound
cdq
inc
sub
shr
ins
xor
test
add
mov
add
or
or
sahf
js
push
jns
jmp
dec
pop
push
in
je
sbb
mov
or
in
icebp
sar
sbb
add
je
call
movs
pop
push
inc
dec
in
inc
and
xlat
sub
jb
mov
ret
sbb
cmps
sbb
lahf
outs
nop
dec
fwait
sub
(bad)
sar
lock
fadd
mov
fisubr
adc
in
fucomp
mov
jae
out
and
inc
pop
sub
jmp
mov
jg
rol
inc
or
in
repz
adc
pop
jbe
in
and
rcl
mov
pop
xchg
xor
add
lock
mov
inc
push
fadd
(bad)
enter
cmp
cmps
les
retf
ins
std
dec
cdq
mov
push
scas
(bad)
cmp
repnz
push
data16
mov
loope
and
lahf
mov
test
mov
sbb
pusha
mov
shr
cwde
push
or
pop
jmp
lods
pop
sub
and
sbb
cmp
mov
dec
sbb
mov
jmp
push
and
mov
cld
inc
nop
mov
dec
add
enter
pop
movs
xchg
and
mov
push
(bad)
movlps
and
dec
test
jmp
fmulp
lods
xchg
sbb
retf
cmp
call
pop
jle
popa
loop
or
or
scas
test
mov
mov
mov
jmp
cs
jmp
jne
mov
dec
push
jo
add
sbb
sahf
inc
inc
inc
out
mov
jmp
or
sbb
je
jb
sahf
mov
adc
inc
call
arpl
jns
push
adc
fld
or
cmp
add
pushf
(bad)
and
rep
vrsqrtss
inc
xor
ins
or
mov
or
pop
fsubr
jecxz
rcl
cmp
add
adc
rcl
ins
jns
mov
lock
hlt
bound
addr16
call
push
jl
into
das
repnz
test
and
arpl
repnz
xor
push
jae
add
xor
(bad)
or
(bad)
fbld
or
mov
push
not
add
imul
mov
je
xor
out
add
not
jecxz
push
ret
ret
xchg
inc
scas
mov
push
repz
pop
jb
jp
aaa
iret
add
xchg
rcl
inc
pop
inc
ins
retf
retf
mov
jno
jg
adc
cmp
arpl
mov
jle
xor
sub
xchg
call
popa
dec
mov
retf
stos
fldcw
cli
dec
pop
fist
es
or
(bad)
outs
sbb
ss
and
dec
(bad)
imul
sbb
mov
sbb
adc
inc
pop
push
add
xchg
push
sbb
outs
pop
hlt
cli
ja
dec
retf
jbe
out
out
xchg
jbe
(bad)
pop
cmp
repnz
jmp
or
(bad)
in
cdq
pushf
retf
cli
cmc
jmp
inc
fdivr
sub
mov
rcl
dec
mov
adc
out
loop
mov
mov
dec
cs
xchg
imul
(bad)
fist
push
mov
adc
pop
push
enter
mov
jl
cmp
cmp
aaa
inc
in
inc
ds
stos
lods
mov
cmps
test
pop
push
or
movs
into
push
mov
inc
icebp
imul
(bad)
loop
(bad)
scas
jae
cs
test
cmps
paddb
push
fnstsw
push
arpl
push
out
loop
gs
xchg
movzx
pop
push
xor
inc
push
push
mov
cmp
popf
ret
lds
cmp
jne
movs
out
call
jg
sub
push
and
and
jne
stos
rol
pushf
lods
imul
fwait
mov
call
pop
or
sbb
inc
cmova
aas
scas
(bad)
cmp
push
imul
sbb
inc
in
(bad)
pop
lahf
cs
ins
sbb
dec
aas
arpl
icebp
movs
fs
aas
lock
xlat
adc
push
pop
dec
mov
int
push
xchg
arpl
and
pushf
neg
out
adc
lods
nop
(bad)
cmps
enter
cmp
jge
dec
jo
loop
push
sbb
mov
and
lods
and
call
and
into
rcl
pop
in
fsubr
add
out
cwde
dec
into
shr
mov
xchg
inc
mov
aam
int3
sub
loope
cld
sbb
inc
xchg
mov
mov
jns
daa
popa
sbb
sbb
and
aad
nop
sbb
add
xor
pop
mov
cld
xchg
es
mov
ret
aas
cmp
fimul
push
add
popf
push
pop
mov
push
add
mov
(bad)
and
out
sub
test
xchg
jo
adc
add
ins
scas
movs
dec
jge
pop
xchg
xchg
mov
ja
sbb
mov
scas
or
inc
test
mov
jno
vmwrite
sub
jmp
nop
mov
cmp
movs
fbstp
add
add
ror
xchg
cmps
dec
mov
add
or
stos
jb
and
mov
jnp
inc
nop
and
int
inc
aad
add
mov
ja
dec
cdq
cmps
test
clc
jp
aad
sbb
bound
cmp
shl
pop
adc
mov
out
jecxz
adc
sbb
dec
jne
out
jnp
adc
hlt
pop
push
popa
rcr
leave
inc
sub
cmp
push
jl
adc
push
fs
cmp
ins
adc
pop
inc
into
movs
lds
rol
repz
repnz
leave
push
jmp
sar
mov
int
pop
cmp
xchg
fcmovbe
and
fyl2xp1
push
xor
mov
rcl
jnp
mov
inc
pop
mov
mov
cli
nop
test
enter
mov
in
push
(bad)
xor
xchg
test
movs
scas
jae
bound
push
stos
mov
call
lahf
inc
xor
shr
inc
ins
ret
adc
push
js
push
jae
arpl
jno
xor
pop
xor
mov
push
ja
mov
(bad)
fdivr
es
retf
lds
add
jbe
add
jb
stos
inc
dec
out
mov
mov
es
cmp
fdivrp
aaa
dec
fstp
adc
or
cdq
xlat
scas
xor
dec
xlat
in
dec
and
and
lods
inc
fstp
mov
sbb
inc
add
xchg
jge
xor
sub
pusha
push
fld
fld
cwde
mov
cmp
jb
sub
cmp
mov
fcomp
cmc
int
aaa
push
push
jmp
xchg
sti
es
imul
jge
jg
mov
mov
loopne
jle
and
js
fst
xchg
mov
xor
or
je
fnsave
fstp
xor
movs
cmp
stos
ds
cld
test
pop
nop
sti
add
clc
xchg
or
push
call
mov
mov
in
popf
(bad)
cmps
fstp
retf
mov
sbb
xor
dec
mov
in
dec
and
aaa
mov
jns
popa
xchg
sub
pop
dec
loop
shl
fiadd
jge
int3
xor
js
mov
adc
push
sahf
dec
(bad)
cmp
dec
repz
lock
outs
add
(bad)
and
sar
shl
or
int
sub
mov
retf
add
lods
cmp
pushf
jge
add
xchg
jle
(bad)
xchg
inc
xor
or
adc
js
cmp
test
(bad)
mov
push
aas
idiv
stc
clc
and
xor
leave
rcl
out
mov
ret
imul
je
jp
cmp
aad
sub
jo
and
sbb
mov
loope
cs
(bad)
jge
sbb
aam
pusha
dec
arpl
jge
call
imul
jo
sub
leave
sar
pop
cli
jne
adc
popa
cmp
add
ja
push
lahf
ficomp
(bad)
jmp
arpl
retf
loopne
inc
icebp
(bad)
sbb
je
ja
inc
dec
cli
push
cmp
aas
jbe
inc
push
pop
lds
aaa
lds
lods
ret
test
iret
pushf
mov
jo
sub
scas
jns
ret
mov
fadd
and
out
jns
and
jns
sbb
inc
and
mov
call
jb
(bad)
fsub
cmp
ds
aaa
xor
loop
or
add
int
fistp
gs
int
lds
sub
pop
out
dec
pushf
and
ret
leave
movs
call
fnsave
in
mov
jg
fnstenv
jno
out
mov
lock
mov
jecxz
adc
(bad)
call
mov
mov
mov
call
(bad)
std
(bad)
cmps
jae
daa
imul
cmp
cmc
popf
fcomp
lds
adc
xchg
stos
in
outs
sbb
bound
or
mov
lods
ins
xor
mov
stos
pop
mov
adc
push
jae
push
imul
mov
loop
call
jecxz
repz
push
arpl
jmp
call
ins
aam
inc
(bad)
ins
sub
pop
pushf
push
push
xor
gs
scas
out
inc
loop
imul
jecxz
jb
sub
cmp
pop
and
div
out
mov
neg
es
pop
push
test
cmp
clc
push
mov
arpl
(bad)
pushf
repnz
scas
lea
mov
push
loopne
sub
mov
(bad)
sbb
pushw
mov
or
in
int
retf
fistp
mov
jmp
inc
mov
movs
call
jl
loope
jmp
inc
loop
cwde
pop
imul
mov
push
js
pushf
inc
int
ret
fsubp
cmp
pop
jnp
mov
daa
pop
cmp
xchg
sbb
sar
loope
pop
test
scas
inc
mov
in
fistp
pop
les
pop
adc
push
cmp
dec
arpl
hlt
mov
pop
inc
mov
or
sub
add
outs
iret
cmp
mov
jne
jmp
xchg
js
cmps
jbe
lds
outs
test
or
pop
dec
and
mov
push
add
data16
pop
cmps
fnsave
bound
ins
(bad)
dec
scas
out
sti
pop
icebp
mov
fldcw
add
repz
mov
mov
and
ffreep
sbb
inc
icebp
add
sbb
add
ins
push
adc
fdiv
jb
loop
dec
xlat
xchg
cli
stos
fisub
xor
xor
les
arpl
push
xor
push
fwait
pop
dec
fst
cwde
sbb
jno
xchg
lea
inc
add
frstor
xchg
shl
add
mov
enter
je
cmp
jae
(bad)
retf
sahf
dec
jnp
dec
dec
mov
imul
mov
aaa
push
jb
(bad)
loope
add
mov
(bad)
jmp
stos
xor
xchg
int
mov
out
test
jecxz
nop
jnp
cmps
xchg
mov
fst
rcr
mov
cmp
sti
mov
mov
fsubr
mov
enter
mov
mov
xor
enter
imul
cmc
ret
adc
les
mov
cmp
push
inc
xor
gs
mov
push
sub
int3
push
mov
dec
sub
sbb
mov
sbb
push
add
jne
and
mov
mov
mov
jle
clc
stc
inc
push
popf
dec
(bad)
mov
scas
jnp
mov
mov
lods
shl
aaa
inc
je
cmps
mov
and
push
adc
fld
push
add
movs
outs
ret
lods
pop
xor
ins
sbb
scas
sbb
and
test
std
cmps
mov
repz
cmp
cmp
add
jmp
inc
pop
repz
repnz
mov
rol
pop
ins
bound
mov
out
push
lea
lea
xchg
pop
scas
pop
lods
retf
pushf
test
pop
jno
fild
jp
pop
mov
jb
pop
ror
inc
jl
stos
lea
or
push
mov
ins
jl
imul
xor
(bad)
imul
push
mov
xlat
out
xor
in
scas
aam
sbb
mov
je
sub
ins
(bad)
jmp
mov
xchg
pop
not
mov
test
scas
test
sub
std
sbb
and
addr16
mov
and
ins
in
cdq
xor
mov
mov
jl
push
or
sbb
sti
stc
sub
(bad)
xchg
daa
ret
mov
mov
fwait
inc
and
sti
add
mov
xchg
rcl
push
stos
sbb
sar
push
arpl
fimul
inc
or
fadd
adc
add
xchg
lock
mov
mov
ret
push
ret
js
or
mov
into
add
loopne
or
mov
repnz
ja
adc
dec
mov
mov
xchg
out
loopne
(bad)
push
mov
lea
das
push
rcl
loop
jnp
mov
mov
mov
stc
stos
mov
hlt
aad
pusha
lods
xchg
xchg
and
adc
xor
sti
push
push
and
and
stos
inc
sbb
hlt
or
mov
pusha
scas
xchg
cmp
sbb
(bad)
fld
and
fs
and
adc
(bad)
xchg
cs
ja
mov
xchg
jns
pop
xor
scas
sub
inc
mov
ins
retf
xchg
sar
loop
jno
jmp
mov
and
arpl
sub
xor
mov
xor
mov
fdivr
movs
call
dec
mov
adc
ss
or
daa
inc
mov
dec
mov
adc
out
das
stc
push
mov
inc
pop
dec
jne
call
ret
lods
xchg
cmp
push
xor
fadd
sub
xchg
jecxz
dec
retf
int
into
pop
mov
push
xor
cmp
int3
sbb
adc
dec
inc
mov
clc
lahf
aas
ja
mov
fwait
jecxz
icebp
and
and
in
and
cmps
push
push
popa
call
cmp
mov
cwde
dec
sbb
test
jl
fnstsw
ds
mov
push
popa
jmp
je
jmp
stc
out
repnz
sbb
imul
ret
loopne
pop
shr
aam
push
xlat
dec
inc
pop
cmp
cwde
(bad)
push
adc
shr
sbb
adc
fcomp
movs
inc
xor
dec
andnps
push
ss
in
sar
pop
mov
ret
aas
add
sbb
or
xor
lahf
mov
jl
pushf
add
popf
mov
cld
pop
pop
mov
pop
cmp
pop
aam
hlt
add
cdq
leave
xor
icebp
mov
cmp
xlat
test
xor
mov
mov
test
pushf
popf
jns
(bad)
pop
pop
cdq
pop
mov
gs
xchg
and
jno
jmp
xor
push
push
cmp
xchg
test
ins
dec
jle
sbb
xor
or
faddp
outs
repz
cmps
aam
lods
jl
push
in
popf
retf
inc
leave
sti
mov
adc
sbb
pop
push
dec
fmul
inc
jne
rcr
jnp
das
out
push
sub
(bad)
mov
ret
push
test
pop
das
out
xchg
and
jnp
fcomip
sub
jne
jecxz
(bad)
and
or
loop
push
fld
shl
xchg
ja
or
xchg
sub
sub
(bad)
push
sbb
test
or
movs
das
mov
sub
imul
mov
push
mov
jno
fmul
ins
cmp
pop
and
aam
sbb
jge
xor
xchg
push
jmp
popa
ss
ret
imul
mov
rcr
mov
inc
adc
popa
jns
sub
xchg
push
push
data16
mov
push
push
sahf
test
movs
mov
inc
adc
mov
xor
dec
xor
clc
jmp
xlat
aad
mov
sbb
mov
mov
adc
sbb
adc
es
push
mov
jne
fisttp
and
ins
xor
pop
lock
xor
xor
cmps
(bad)
loopne
mov
shr
and
fild
sub
retf
data16
mov
icebp
mov
push
leave
mov
pop
es
adc
jecxz
mov
in
jge
call
jne
rol
xchg
ss
or
inc
gs
or
loopne
test
popa
adc
test
push
push
rcl
hlt
ror
pusha
add
xchg
scas
cli
stos
inc
fisttp
jl
je
hlt
iret
out
cwde
xor
pop
rcl
call
hlt
dec
inc
push
aaa
xlat
movs
adc
dec
and
mov
fs
xchg
xchg
fidivr
cmp
jbe
pop
sbb
push
int3
leave
(bad)
pop
sahf
jp
or
addr16
xor
fild
imul
mov
cmp
dec
push
mov
adc
hlt
lahf
arpl
stc
inc
cmp
push
adc
fisttp
into
add
aas
dec
jnp
sar
leave
ins
movs
inc
and
imul
(bad)
mov
fidiv
loope
mov
loopne
fild
cmp
or
sbb
mov
(bad)
jmp
sar
imul
push
pcmpeqw
dec
sar
jge
ins
mov
adc
nop
xor
inc
js
xchg
push
shl
xchg
sub
out
xchg
idiv
push
jp
rcl
add
mov
sub
sar
jp
sub
(bad)
(bad)
(bad)
fstp
mov
out
mov
push
sub
(bad)
adc
in
and
adc
pop
paddw
mov
aas
sbb
dec
(bad)
int
cmp
dec
xor
jmp
mov
xchg
push
sub
cld
sub
and
mov
xchg
iret
sbb
adc
iret
cld
cmp
pop
retf
pushf
sub
cmp
fs
shl
out
sbb
jle
les
fmulp
shr
lods
clc
push
or
ja
mov
gs
inc
add
fstp
inc
pop
cmp
outs
or
nop
dec
sub
div
fisub
cmp
pop
aas
mov
sub
mov
and
jecxz
xchg
addr16
(bad)
retf
jmp
out
or
(bad)
and
xchg
shr
(bad)
adc
inc
jmp
pop
cmp
iret
bound
gs
mov
out
jecxz
movs
push
mov
mov
mov
mov
cwde
daa
hlt
sbb
loope
inc
js
lods
cmp
sub
dec
mov
(bad)
and
inc
shl
retf
add
jl
sub
pop
mov
xor
mov
mov
js
push
movs
arpl
xor
out
lods
ret
clc
test
xchg
jle
xlat
xchg
jg
sub
outs
ins
jb
jae
sbb
fisub
imul
idiv
adc
jge
(bad)
xlat
adc
push
xor
xor
add
bound
pop
test
into
rol
outs
(bad)
mov
push
das
lock
mov
(bad)
lock
out
sub
arpl
jle
aad
jle
xchg
mov
mov
cld
or
pop
xchg
cld
pop
jnp
les
rol
dec
mov
cmc
loopne
and
jb
jl
fisttp
loop
(bad)
xor
mov
fcmovnb
inc
popa
je
and
pop
xchg
jne
les
ficomp
cdq
and
mov
out
jle
mov
pop
movs
pop
cmp
mov
xor
ror
loope
or
ds
je
fistp
inc
clc
mov
popa
xchg
pop
mov
jmp
in
jbe
pop
sub
push
push
or
xchg
inc
add
arpl
add
imul
(bad)
ja
cmp
fcomi
fisub
test
test
std
pop
xor
nop
jge
xor
clc
mov
adc
mov
mov
in
ss
jae
data16
add
je
xchg
and
mov
int
cld
enter
ror
push
adc
dec
xchg
add
inc
mov
adc
test
stos
shl
add
mov
dec
popf
cmps
sti
cmps
into
inc
mov
out
int3
cmp
stc
add
xchg
enter
jno
inc
xchg
push
mul
push
inc
and
inc
pusha
add
mov
xchg
test
mov
xchg
pop
bound
sbb
pushf
cli
sti
cdq
jns
je
mov
fmul
lods
xlat
loope
loope
mov
sub
lock
pop
call
ss
xor
pusha
stc
(bad)
xor
push
loopne
mov
nop
and
sub
icebp
out
inc
test
push
ror
pop
jnp
lods
or
rol
(bad)
fst
imul
fistp
jp
(bad)
jle
sub
mov
jl
push
xor
enter
(bad)
mov
mov
or
push
int3
push
adc
xchg
or
and
adc
les
mov
mov
shl
in
cmp
inc
repnz
scas
fmul
add
fist
(bad)
dec
and
icebp
retf
or
shr
dec
jmp
mov
dec
and
sbb
(bad)
mov
adc
mov
cmp
loop
add
outs
je
sub
ret
shr
sub
call
inc
and
inc
sub
cmp
iret
loopne
mov
retf
pop
(bad)
inc
shl
mov
fsubr
loope
pushf
mov
mov
stc
out
retf
fwait
mov
mov
jmp
movs
test
pop
add
xor
test
xlat
fisubr
cli
fild
jno
xchg
dec
(bad)
adc
cli
loopne
imul
fmul
mov
pop
inc
and
xchg
inc
pop
mov
in
je
scas
adc
push
pop
mov
pushf
cmp
int
sub
sbb
cmp
leave
pop
pop
ins
icebp
popa
ds
dec
shr
jmp
icebp
cmp
jl
mov
fimul
jno
test
mov
mov
out
sbb
(bad)
cld
rcr
mov
scas
loop
pop
retf
icebp
push
xchg
pop
mov
out
fsubr
scas
sub
hlt
xchg
outs
fisttp
inc
retf
xchg
cmp
adc
and
mov
or
inc
mov
mov
repz
hlt
pop
pmaxub
xchg
pop
lds
and
sbb
push
(bad)
in
jo
mov
addr16
inc
jecxz
es
retf
sbb
jg
pop
xor
mov
sub
call
jle
jae
in
dec
and
sbb
out
mov
mov
mul
or
pop
xor
bound
add
mov
fimul
imul
sbb
mov
cwde
inc
sbb
hlt
push
adc
push
(bad)
jl
sbb
les
add
inc
cwde
sar
xchg
mov
adc
icebp
sub
mov
inc
add
mov
in
inc
in
xchg
push
(bad)
test
mov
aas
jp
int3
add
popf
sti
scas
push
cld
enter
or
popf
out
cmps
(bad)
cmp
stos
repnz
and
cs
mov
ds
movs
xchg
mov
retf
adc
sub
dec
in
pop
je
test
mov
ret
lds
cmp
sub
call
push
jp
xor
sub
dec
lahf
lds
jns
pop
(bad)
lahf
lea
jmp
or
bswap
mov
pushf
fsub
push
push
(bad)
mov
xchg
xor
pushf
jo
outs
mov
add
(bad)
xlat
shl
lahf
mov
in
or
test
mov
shr
lods
data16
pop
mov
push
sub
push
stos
inc
mov
sti
stos
pushf
arpl
scas
mov
stc
mov
test
nop
xchg
dec
(bad)
jmp
mov
push
aam
jmp
mov
and
jo
inc
inc
sub
or
arpl
mov
sub
or
inc
mov
xchg
xchg
repz
int3
xor
pop
add
mov
mov
popf
jp
jp
and
jnp
sar
mov
loopne
jl
cwde
xchg
inc
pop
push
xchg
mov
out
inc
aad
sub
mov
cli
inc
aaa
or
xchg
scas
movs
push
ret
adc
mov
call
clc
daa
sti
xor
cmp
mov
ins
fcmovb
push
and
sub
mov
add
pop
mov
sbb
or
push
mov
add
cdq
stc
and
iret
dec
xchg
add
xor
mov
rcl
jge
icebp
add
out
xor
pop
and
push
es
and
shl
cmp
xchg
cmps
js
popf
push
xor
div
add
and
push
call
or
xchg
int
inc
ins
mov
push
aas
out
mov
mov
lahf
jg
mov
inc
not
mov
sahf
outs
test
pushf
aas
sbb
inc
leave
mov
xor
xchg
into
ss
cmp
ins
arpl
lods
call
jnp
xchg
outs
int3
xchg
push
jp
adc
or
bound
les
inc
mov
repnz
(bad)
lock
shr
mov
shr
sbb
lods
add
lds
and
mov
repz
and
or
push
jmp
pusha
add
int
call
jns
loope
cmp
xchg
sar
mov
and
mov
cmp
mov
xchg
jne
dec
lods
fwait
repnz
pop
(bad)
shl
into
mov
mov
or
xchg
js
js
inc
ficomp
int3
movs
xchg
outs
fwait
adc
or
mov
repz
pop
cmp
repnz
fisubr
pop
pop
fldcw
mov
mov
neg
mov
pop
(bad)
cmp
jae
js
cld
jle
sub
pop
gs
imul
sbb
add
inc
xor
sbb
lahf
push
ret
fnstcw
(bad)
std
push
jp
imul
jge
mov
test
mul
xor
or
inc
(bad)
mov
or
xchg
push
sbb
imul
cli
dec
push
ins
ret
pop
push
sti
(bad)
jg
div
push
test
fucom
pop
dec
sub
sub
es
dec
(bad)
movs
jle
(bad)
out
and
sub
push
sub
pop
and
call
bound
jbe
jns
xlat
fstp
jmp
mov
mov
mov
test
loopne
out
cmc
sub
outs
ins
add
inc
test
push
sub
out
out
mov
in
fptan
sbb
pop
idiv
addr16
call
(bad)
jge
sbb
call
ja
pop
cmp
jo
hlt
mov
xchg
jmp
push
dec
std
inc
adc
movs
call
inc
pop
sub
(bad)
leave
sbb
shl
push
and
and
xor
mov
cld
cmp
lea
xchg
jnp
fistp
push
in
jg
sahf
cmc
sub
data16
dec
jmp
outs
movs
jl
fst
cmp
inc
dec
jns
sub
pop
pop
sahf
and
cmc
cmps
mov
and
aam
fld
or
adc
(bad)
mov
test
pop
jp
jae
mov
sar
mov
cdq
retf
in
and
hlt
mov
add
jo
test
push
sub
dec
jle
fcmovnb
movs
fisttp
rcl
lea
pop
sub
xchg
jge
dec
std
xchg
pop
add
fsub
rol
xchg
jecxz
add
cmps
sub
cbw
xor
rcr
(bad)
push
fist
movs
mov
dec
arpl
jecxz
dec
add
in
and
xabort
das
and
addr16
jae
out
mov
in
add
cmps
xchg
jae
jg
dec
fisub
test
jne
imul
(bad)
aaa
or
cmp
adc
cmps
push
ds
(bad)
cli
inc
or
jmp
mov
sub
daa
sub
adc
dec
push
dec
mov
jae
retf
sbb
jb
xchg
arpl
out
idiv
or
pop
add
and
bound
cdq
(bad)
imul
mov
call
xor
jmp
int
(bad)
sub
push
fimul
add
xlat
mov
mov
comiss
int
push
push
lods
jnp
and
aam
push
jge
outs
mov
aaa
jle
(bad)
jmp
fmul
je
out
loop
mov
sti
push
jns
push
loop
outs
or
jb
mov
push
in
push
mov
mov
movs
adc
int
dec
mov
stos
leave
xchg
xor
sbb
add
mov
pusha
cmp
adc
ins
lock
fistp
iret
sub
push
mov
inc
adc
or
mov
jb
stc
push
rcl
rcr
test
inc
movs
mov
add
sub
dec
push
loop
shr
cld
sbb
enter
dec
fucomi
mov
ror
stc
repz
loopne
push
loope
dec
sub
push
and
aaa
aam
paddsb
bound
mov
fisttp
push
rcl
jmp
or
loop
and
stc
js
scas
imul
cmp
leave
test
nop
arpl
sbb
sahf
adc
mov
sub
dec
and
mov
push
fisttp
ins
dec
sub
xor
sub
out
icebp
jle
lahf
fild
jne
push
inc
push
cmps
or
dec
mov
xchg
push
sbb
xchg
push
jmp
out
sub
dec
mov
mov
out
cmp
cmp
cs
mov
adc
inc
into
xor
add
ds
retf
xor
push
fisubr
push
jae
imul
lea
iret
int
fnstenv
dec
lods
repz
jmp
leave
fcmovnb
outs
or
and
ja
xor
jmp
imul
and
aas
xchg
ds
mov
arpl
or
es
test
pop
pushf
inc
and
or
cmp
pop
add
pop
pop
mov
or
aad
sub
mov
retf
or
push
aas
or
push
xchg
stos
pop
xchg
mov
lock
and
cdq
(bad)
xchg
inc
mov
fst
dec
(bad)
sbb
push
push
sar
xchg
retf
daa
imul
push
mov
push
dec
inc
lock
mov
push
fwait
and
loop
daa
das
out
(bad)
(bad)
sbb
mov
or
push
das
push
add
adc
imul
test
adc
ds
cmps
in
fld
aas
mov
cdq
fs
retf
xor
push
add
std
dec
pop
(bad)
pop
ins
call
cmp
mov
adc
(bad)
cld
clc
ret
(bad)
xchg
aam
push
lds
test
xor
ror
jge
lahf
jle
(bad)
xor
test
cmps
inc
ret
mov
xchg
cmps
and
mov
stos
inc
jmp
add
pop
pop
into
mov
sbb
iret
repz
cmp
add
mov
pop
in
es
ins
ds
mov
cmp
adc
fucomip
sti
cmp
cld
pop
int
jl
lods
ins
hlt
mov
jg
mov
mov
mov
shl
mov
mov
jns
mov
cmp
dec
dec
icebp
inc
push
push
xchg
sbb
hlt
jns
test
lods
jo
pop
inc
enter
je
icebp
repnz
mov
sub
xchg
push
pusha
lods
pop
jmp
jl
out
ins
das
lock
xor
js
push
rol
sbb
and
or
test
pop
jnp
dec
mov
cli
xchg
and
dec
inc
enter
xchg
or
lds
outs
mov
mov
and
cmp
inc
jnp
lahf
add
xor
cmp
cmps
dec
(bad)
jmp
xlat
cmc
mov
mov
inc
cwde
mov
daa
and
cmp
xchg
outs
xchg
and
aam
inc
test
sub
(bad)
mov
adc
pushf
aad
mov
lds
in
fdivr
add
sub
sbb
mov
mov
adc
mov
(bad)
je
adc
enter
mov
xor
mov
jno
mov
cmp
or
movs
repz
pop
push
pop
adc
(bad)
cmp
ins
je
or
jns
adc
mov
mov
or
shl
jne
pop
out
fidiv
mov
(bad)
and
js
gs
(bad)
fild
or
push
jmp
cs
inc
mov
push
and
ins
(bad)
jo
shl
cs
pop
cld
cld
sbb
jbe
pop
clc
dec
jge
sbb
lods
(bad)
mov
dec
sub
popa
jl
lahf
cs
pop
push
cmp
lods
push
inc
push
or
or
mov
push
outs
clc
int
lock
adc
sbb
call
inc
push
xchg
cmc
stos
dec
or
or
iret
cmc
pop
jl
pop
sub
outs
and
rcl
mov
mov
jg
mov
add
mov
pop
pop
fnstcw
cmps
imul
push
add
ins
sti
popf
lods
in
xchg
push
adc
add
mov
sub
test
and
mov
das
sub
bound
sub
in
jmp
aad
ror
pop
dec
sbb
lds
call
xchg
nop
imul
or
cli
mov
jbe
mov
call
aam
xchg
mov
sub
arpl
sbb
mov
xchg
adc
stc
in
call
mov
ror
jmp
fsubr
cli
es
loop
retf
cmp
add
scas
cmp
dec
outs
jmp
sbb
fsub
xchg
lds
sahf
ins
or
cwde
in
retf
adc
jne
cwde
xor
test
mov
sbb
outs
add
popf
(bad)
xor
pop
mov
call
mov
fiadd
or
or
push
mov
rcr
jmp
mov
loope
popf
push
and
jno
and
pop
in
or
cwde
push
pop
call
cli
mov
aas
xlat
loopne
and
pop
jecxz
sbb
dec
inc
in
pop
pop
push
jnp
in
push
sub
out
push
aam
aam
xchg
and
ins
mov
ror
push
xchg
cli
sub
sub
mov
sbb
xchg
add
inc
mov
inc
pop
not
xchg
dec
aaa
add
movs
mov
push
add
out
fwait
mov
push
inc
xor
mov
adc
dec
mov
jge
test
mov
repnz
pop
mov
std
aad
cmp
test
or
jo
adc
das
mov
dec
(bad)
dec
in
mov
iret
mov
bnd
test
mov
lods
clc
cli
sti
idiv
push
or
pop
movs
mov
sub
adc
pop
jmp
leave
add
sbb
out
jo
in
inc
jmp
pop
pushf
jno
imul
mov
out
mov
adc
jmp
inc
cmps
inc
loopne
xchg
ins
fsubp
jo
jns
cmc
mov
mov
mov
inc
pop
gs
sub
loop
js
xchg
or
arpl
ss
cmp
or
stc
imul
addr16
aam
fdiv
(bad)
je
ja
les
stos
push
je
adc
loope
sub
xor
mov
cmp
pop
xchg
mov
xor
call
sbb
mov
lea
fisubr
div
pop
movs
aam
(bad)
out
or
xchg
mov
das
jno
xor
stos
out
push
stc
jecxz
aaa
push
inc
(bad)
jmp
cmp
add
pop
mov
stos
sub
sahf
mul
mov
jae
and
cmp
imul
mov
push
jle
jp
popa
and
imul
xchg
xchg
out
mov
out
or
jnp
(bad)
call
outs
fst
push
in
mov
aas
mov
xor
sbb
cmps
js
mov
js
int3
lahf
cli
(bad)
je
jo
inc
pop
test
push
je
dec
xchg
cs
dec
dec
jge
xchg
pop
pushf
imul
out
mov
outs
mov
mov
or
lds
mov
out
aas
movs
loopne
lods
ins
stos
dec
or
mov
adc
dec
stos
loopne
gs
xor
adc
mov
pushf
xchg
push
repnz
ins
ja
xchg
mov
add
sub
iret
dec
mov
mov
dec
movs
mov
mov
arpl
cwde
dec
sbb
xor
mov
adc
sub
cmp
dec
call
ins
push
adc
mov
mov
enter
enter
cs
xchg
fldenv
xchg
dec
xchg
arpl
in
inc
or
dec
into
arpl
sub
sub
dec
cmp
inc
sbb
daa
sub
push
test
mov
out
sahf
cli
retf
fstp
mov
add
(bad)
retf
cmp
jbe
out
jp
and
sbb
mov
fistp
push
xor
test
test
mov
les
mov
xor
mul
mov
mov
xor
out
cdq
in
fdivr
mov
xchg
xchg
mov
add
cmp
fmul
dec
int3
xor
or
dec
cmp
aad
dec
test
out
aaa
mov
pusha
sub
fdivr
and
sub
dec
ror
iret
loope
test
inc
cmp
inc
push
xor
pop
fisttp
xchg
or
arpl
in
sbb
mov
inc
dec
cmc
out
jmp
retf
adc
mov
sub
push
imul
cmp
sbb
push
lods
int3
mov
ret
call
rcr
lods
addr16
int
adc
pop
jge
add
fidivr
loop
xchg
or
rcl
and
xlat
or
xchg
pop
movs
pushf
pop
mov
enter
in
sbb
iret
mov
dec
jp
ds
xchg
jp
mov
idiv
and
push
icebp
adc
dec
pop
mov
fnstcw
mov
std
mov
stos
or
or
xor
push
cli
or
lock
sbb
mov
movs
push
adc
dec
mov
adc
or
outs
add
popf
enter
fnsave
sbb
sar
jg
inc
jle
xchg
adc
test
hlt
mov
jnp
push
scas
sti
inc
mov
inc
push
cdq
and
punpckhdq
cmp
xor
fidiv
cld
call
sbb
and
mov
lods
outs
mov
rcr
sub
and
(bad)
mov
std
data16
arpl
cmp
adc
inc
je
test
lahf
mov
ds
adc
loop
out
xchg
(bad)
popa
call
cmp
adc
pushf
or
out
ja
lock
test
and
test
loopne
in
aaa
mov
add
push
loope
xchg
add
cmp
mov
sbb
movs
push
sub
xor
dec
cmps
push
inc
stos
sbb
jns
push
xor
sbb
jo
sub
fs
pop
pop
aaa
sub
ds
in
idiv
xlat
jbe
inc
adc
retf
stc
push
and
cmp
int
sub
test
ror
add
jb
pusha
out
mov
scas
inc
aam
and
adc
ss
pop
lods
mov
jbe
test
xor
pusha
test
xchg
loope
sub
mov
int
sar
xor
jmp
inc
inc
xchg
fdivr
mov
inc
mov
mov
arpl
push
call
mov
inc
mov
gs
mov
sbb
aas
push
imul
dec
test
push
mov
pop
je
xor
push
adc
pusha
(bad)
aam
sbb
xor
or
adc
daa
xchg
lods
outs
dec
jecxz
adc
cmc
gs
aaa
js
fcomp
fcmove
sbb
imul
or
sbb
push
out
add
jge
lahf
aaa
mov
hlt
jnp
adc
sti
cwde
jns
adc
fdivr
adc
aas
push
dec
cmps
in
and
push
cld
xlat
(bad)
fdivr
push
std
cdq
or
test
mov
sub
jbe
xchg
xor
xor
shl
push
push
gs
repnz
dec
dec
sti
(bad)
out
mov
inc
xchg
and
push
fs
push
out
push
sbb
xchg
mov
jle
enter
les
cmp
cmc
xchg
adc
push
inc
dec
(bad)
dec
jle
jne
jae
aas
mov
dec
imul
aas
pop
dec
pop
ret
add
cli
outs
sbb
(bad)
retf
dec
repz
mov
inc
out
jmp
pop
scas
ret
mov
add
fldenv
(bad)
icebp
sbb
add
popa
sbb
jecxz
jo
int3
push
repnz
mov
cmp
jge
lock
mov
hlt
sbb
fistp
out
or
(bad)
cmp
xor
scas
dec
push
and
pop
movs
aam
fwait
mov
cdq
jecxz
push
mov
jmp
inc
push
jge
sbb
dec
aas
mov
dec
xchg
adc
pop
ja
cmc
addr16
mov
sbb
jnp
or
movs
jne
xchg
mov
sbb
jmp
icebp
cld
movs
pop
adc
das
ret
cmps
fidivr
(bad)
es
cmp
sar
pop
into
hlt
ror
sbb
inc
xchg
xchg
cwde
push
pop
pop
movs
mov
cmps
dec
or
lods
jns
dec
or
push
mov
icebp
call
mov
and
push
ins
adc
inc
int
loope
leave
xor
fwait
addr16
jbe
enter
push
cmps
sub
pop
jmp
xchg
adc
jmp
xor
loopne
or
push
dec
std
movs
mov
inc
pop
js
cmp
cmp
enter
daa
mov
push
stos
iret
push
out
inc
int
adc
inc
cmp
fstp
out
sbb
add
cmps
loop
in
dec
pushf
jecxz
sub
test
test
pop
adc
leave
dec
inc
popf
shl
stos
xor
push
rol
jg
lods
mov
pushf
mov
repnz
sub
stos
pop
retf
xor
and
stc
and
sbb
das
inc
fs
jecxz
dec
mov
nop
out
(bad)
cmp
not
(bad)
pop
inc
lahf
iret
cmp
fild
mov
jecxz
adc
adc
jmp
sahf
push
jmp
sbb
std
je
and
dec
mov
bound
cmp
or
scas
cwde
xchg
or
retf
fistp
xor
sub
ins
lods
mov
jmp
dec
mov
push
sbb
sbb
es
cmp
fld
pop
mov
movs
lock
sbb
mov
sbb
pushf
jne
xchg
retf
scas
(bad)
cmps
xchg
jge
fwait
add
fnstenv
lahf
popf
xchg
clc
jp
daa
jb
fldenv
mov
cli
pop
sub
jns
sbb
sbb
ror
jle
fld
mov
je
movs
xor
xor
jo
jae
dec
loopne
mov
cmp
mov
fist
cld
push
adc
ret
mov
sub
(bad)
mov
cli
mov
in
pop
sub
dec
sbb
mov
jmp
mov
pop
scas
mov
jns
mov
fwait
imul
je
jnp
stos
pushf
repz
xor
rcr
cmp
into
add
cld
mov
ror
inc
cmp
mov
or
(bad)
xchg
adc
sub
or
sar
jmp
pop
sub
imul
mov
xchg
ss
movs
fimul
push
inc
stc
pushf
mov
fmul
lds
push
lock
xor
stos
xchg
daa
push
add
mov
setns
cmc
into
jnp
sub
cwde
pop
movs
and
(bad)
push
inc
nop
and
gs
push
repz
pop
sbb
and
inc
fbstp
cmp
(bad)
std
push
and
xchg
cmp
sti
loop
loopne
sbb
fwait
nop
ins
xlat
xchg
mov
adc
out
test
stos
inc
out
push
adc
cmp
sbb
mov
imul
jecxz
in
jp
iret
mov
cmps
popf
dec
mov
fild
(bad)
pop
lds
pop
outs
ja
jmp
ins
cmp
das
mov
lds
aad
add
dec
loope
inc
xor
sti
add
sub
loop
mov
test
mov
sub
arpl
xchg
retf
enter
rcl
adc
or
and
ja
pop
xchg
mov
jecxz
mov
call
xchg
inc
cmp
xchg
inc
addr16
adc
xchg
pop
fwait
dec
(bad)
mov
sti
rcr
ins
(bad)
jno
jnp
push
cmp
inc
test
cwde
scas
lods
sbb
and
mov
out
inc
dec
xchg
mov
mul
jmp
or
push
sbb
pop
ins
mov
into
(bad)
aam
mov
out
sbb
jae
sub
daa
push
retf
jmp
in
mov
(bad)
mov
sbb
lock
pop
dec
arpl
stos
push
imul
adc
scas
adc
jp
pop
jnp
xchg
icebp
jbe
pop
jle
push
mov
and
sub
inc
mov
mov
outs
aas
mov
cs
imul
(bad)
sar
jecxz
mov
in
outs
rcr
rcr
and
cs
out
out
jecxz
cwde
xchg
int
push
dec
fst
es
fldcw
add
(bad)
test
(bad)
outs
adc
pop
sbb
or
and
push
xor
add
je
movs
push
jl
test
mov
xor
xchg
dec
jecxz
addr16
stos
pop
sbb
jmp
and
add
cli
xchg
mov
into
ins
pop
gs
(bad)
retf
movs
or
or
idiv
leave
nop
cmp
inc
hlt
mov
lods
fld
icebp
pop
pop
das
jne
cmps
repnz
(bad)
in
pop
(bad)
jmp
inc
call
aaa
bound
(bad)
es
fld
mov
jne
sbb
inc
mov
hlt
and
xchg
mov
outs
outs
(bad)
cld
xchg
add
jns
repnz
fild
ret
xor
(bad)
push
jne
mov
xlat
cvtdq2ps
neg
mov
xchg
ror
adc
jb
or
icebp
stos
in
fidiv
mov
es
add
push
or
pop
repz
js
dec
xlat
ss
movs
dec
or
bound
rol
pop
(bad)
fadd
and
bound
push
mov
test
test
mov
cmp
lods
cld
iret
mov
inc
nop
pop
in
lds
bound
ja
movs
adc
outs
pusha
stos
cwde
push
add
dec
test
ret
enter
lahf
cwde
inc
movs
out
mov
xchg
int
jmp
lahf
or
or
inc
mov
test
sti
jns
hlt
and
movs
psadbw
aas
mul
inc
sub
std
pop
push
jecxz
stos
out
mov
(bad)
das
in
xlat
imul
or
jmp
repnz
dec
add
ret
push
cdq
xlat
and
mov
mov
cmps
cld
jp
call
pop
xchg
dec
scas
mov
les
aam
mov
(bad)
or
mov
leave
cwde
jecxz
pusha
mov
inc
popf
les
ins
dec
retf
or
mov
cmp
pop
xchg
push
sbb
adc
cs
mul
pop
mov
and
or
movs
stc
sub
shr
mov
mov
cdq
in
(bad)
ficom
and
clc
imul
and
inc
push
test
fdiv
pushf
xor
iret
inc
dec
mov
ss
jnp
inc
mov
xor
(bad)
mov
jl
scas
add
mov
jae
jecxz
jae
into
adc
push
ret
xor
sar
pop
movhlps
or
ss
mov
std
sbb
push
lock
xchg
sub
mov
cwde
das
mov
lahf
cmp
(bad)
into
mov
mov
adc
loop
repz
imul
les
jmp
outs
and
xchg
aas
shl
push
pusha
mov
adc
dec
jae
retf
and
fwait
stos
retf
push
gs
push
dec
adc
inc
push
jae
(bad)
pusha
or
retf
aaa
xchg
xchg
ret
mov
lods
sub
retf
xchg
aaa
push
xchg
loope
cmps
mov
or
and
inc
sar
mov
das
jp
mov
xlat
test
(bad)
dec
shl
mov
cs
int
push
stos
and
push
and
or
(bad)
dec
cmc
dec
enter
dec
pop
fdivr
test
mov
and
mov
aas
sbb
pushw
push
dec
dec
xchg
adc
test
loop
in
clc
sbb
and
dec
pop
test
shl
push
lods
sub
popa
sbb
pop
push
out
(bad)
fcmove
push
or
ins
mov
mov
mov
aas
js
popa
jno
hlt
dec
push
jnp
mov
xlat
xor
mov
mov
mov
push
cwd
ret
sbb
xor
sub
pop
xor
and
or
pushf
leave
mov
lahf
mov
mov
in
(bad)
sbb
xchg
push
iret
repz
cli
ret
sar
fs
(bad)
mov
mov
stos
xor
es
or
xlat
test
xor
in
jg
inc
fwait
adc
cmp
scas
ret
gs
imul
mov
jo
inc
or
fmul
sub
jecxz
int
stos
ficom
sbb
sahf
push
jns
xor
lea
pop
inc
scas
xlat
in
in
fwait
lock
dec
xor
push
(bad)
into
fdivr
push
iret
xor
dec
test
mov
and
mov
and
or
or
sub
test
mov
add
dec
xchg
movs
dec
(bad)
retf
mov
fnstenv
movs
call
inc
fld
aad
xor
and
mov
retf
sub
ret
sbb
lods
in
pop
mov
xchg
push
jmp
out
mov
bound
retf
pop
sub
cmp
mov
sahf
je
or
xor
xchg
dec
test
or
mov
test
pusha
aam
xchg
inc
imul
mov
popa
test
(bad)
or
lahf
rol
dec
repnz
faddp
ss
adc
(bad)
or
xor
add
imul
mov
pop
pushf
add
cmc
sbb
sti
movs
loope
pop
add
fmul
dec
enter
ins
rep
or
add
into
mov
add
or
into
push
adc
xchg
push
xor
mov
xlat
shl
imul
std
adc
dec
inc
add
cmp
fdivr
mov
js
inc
sub
pop
in
int
xchg
jmp
sbb
jne
add
sbb
dec
lock
mov
dec
sbb
jae
push
(bad)
or
sbb
xor
loop
inc
loop
jo
fisttp
lds
movs
movaps
movs
jo
inc
mov
xchg
mov
sbb
fdiv
fst
mov
pop
adc
push
push
xor
(bad)
loop
rcr
jl
cld
mov
call
push
xchg
or
ins
push
pop
mov
stos
call
adc
push
inc
(bad)
call
and
(bad)
fstp
push
cmp
sub
mov
push
inc
vpcmpeqw
test
and
ret
pop
sub
fsub
mov
loope
shl
(bad)
jp
gs
dec
ins
iret
cwde
ret
stos
mov
cmps
inc
inc
ror
addr16
cmps
int3
mov
stos
cs
(bad)
iret
aaa
jno
mov
push
repnz
dec
mov
jne
xor
push
jne
cld
push
call
mov
push
popf
push
cmp
fs
fidiv
loope
or
jmp
fidiv
stos
pop
jmp
mov
fwait
sar
push
cmp
mov
and
mov
xchg
cmp
sahf
xor
movs
pop
retf
(bad)
jo
sbb
jge
mov
pop
adc
jmp
scas
jg
and
mul
adc
(bad)
cmp
ds
cmps
into
dec
xor
jg
test
sbb
and
loop
test
fild
cmp
repz
cli
push
rcl
pop
(bad)
xchg
add
pop
add
or
fcom
cmp
(bad)
call
add
mov
push
pcmpgtd
pop
cdq
les
imul
push
or
push
outs
dec
and
xlat
or
and
shl
jge
push
repnz
pushf
mov
aam
fwait
lds
mov
jb
xchg
adc
cwde
dec
mov
je
test
mov
fwait
into
jno
outs
adc
sahf
xchg
in
xchg
syscall
adc
mov
stos
push
and
mov
scas
psllq
xor
scas
lahf
ja
fld
rol
fwait
and
jmp
xor
jecxz
in
dec
mov
mov
xor
icebp
adc
hlt
out
add
out
xchg
ins
scas
jbe
call
mov
xchg
and
sahf
inc
xchg
inc
add
or
pop
popa
movs
push
pop
mov
dec
es
test
js
jmp
sbb
and
jmp
xchg
sbb
out
lock
jns
add
adc
loopne
fistp
lahf
cmovo
cdq
push
sub
(bad)
lods
fdivr
and
mov
xor
int3
lds
push
nop
(bad)
dec
fs
cmp
and
mov
mov
(bad)
movs
(bad)
imul
sti
cmp
pop
pop
fdiv
sub
jl
dec
clc
mov
inc
sub
add
ror
inc
or
dec
shl
(bad)
std
std
dec
cmps
mov
xlat
stos
cmps
add
hlt
inc
stos
fist
repnz
dec
(bad)
call
pushf
iret
xchg
push
aas
call
in
sbb
mov
(bad)
or
pop
(bad)
jp
sbb
sti
data16
psrad
int
and
sbb
fldenv
adc
jo
inc
(bad)
icebp
pop
inc
cmc
xor
shl
jmp
pop
jb
or
call
in
cli
shl
jl
js
dec
mov
in
xor
mov
mov
mov
in
jmp
mov
jle
movs
mov
imul
(bad)
sbb
jecxz
mov
bound
xor
dec
inc
inc
mov
inc
adc
cli
imul
mov
je
imul
fistp
fadd
out
or
xor
and
hlt
jge
stos
inc
adc
jbe
push
jb
xchg
es
push
ins
mov
in
inc
jg
or
sar
scas
mov
xchg
cdq
xchg
mov
imul
test
xor
pop
pop
sub
imul
call
ins
mov
mov
(bad)
int
aad
stos
pusha
jge
outs
or
call
mov
sar
jnp
scas
add
pop
push
and
imul
inc
or
jb
and
jecxz
loopne
xchg
jns
fdivr
call
rcl
inc
shr
mov
je
xlat
retf
or
fdivr
push
ins
mov
xor
mov
ds
imul
xchg
xchg
and
or
xor
(bad)
in
das
jecxz
aam
stos
cmp
les
div
adc
lahf
and
cmp
pop
sub
jmp
cli
mov
xor
cmp
call
loope
push
and
aaa
pop
aad
out
and
jge
or
out
pop
and
shl
sar
lahf
pop
dec
push
push
lds
xor
retf
test
jne
mov
pop
je
and
push
movs
xor
jmp
stos
mov
and
stos
push
push
add
lds
es
nop
adc
pop
or
or
xchg
mov
sbb
addr16
aas
sbb
add
mov
cmc
cmp
enter
push
lods
sar
dec
pop
push
pop
pusha
mov
cmp
jnp
jbe
(bad)
aas
inc
imul
in
js
sahf
sub
mov
lahf
and
cli
pushf
pop
mov
movs
mov
lock
dec
movs
inc
stos
pop
jns
leave
fcmovne
jns
enter
lock
int
mov
test
xlat
in
aas
inc
adc
push
sti
xor
push
add
mov
out
mov
pusha
push
enter
ror
nop
dec
push
rol
loop
inc
aad
cmp
and
jmp
lock
jmp
cli
inc
fisttp
adc
cmp
pop
hlt
repnz
sub
add
sub
mov
push
mov
nop
sar
out
pop
push
jnp
jge
cmp
pop
xchg
add
mov
mul
ss
pop
pop
fnsave
(bad)
bound
cmp
jp
call
aas
push
sbb
push
sbb
and
add
ror
cmp
or
fiadd
out
bound
dec
int
xchg
mov
push
js
or
imul
mov
sub
pop
retf
xchg
icebp
xchg
clc
xor
pop
mov
imul
xor
inc
xor
xor
repz
pop
bound
das
(bad)
retf
or
(bad)
sahf
push
mov
into
jns
add
jmp
hlt
or
add
mov
inc
movs
gs
sub
xor
rcr
sub
mov
data16
sbb
cmp
call
xor
(bad)
nop
jnp
mov
adc
(bad)
cli
pop
into
mov
leave
icebp
sub
cmp
fstp
sbb
imul
or
ficom
in
xor
dec
lahf
push
sub
mov
mov
shl
pop
push
sub
pop
dec
inc
cmc
push
aas
mov
pop
mov
pop
test
xchg
push
jbe
jnp
arpl
add
and
loop
mov
and
leave
dec
cmp
or
dec
mov
inc
add
push
adc
rcl
inc
nop
pop
xor
(bad)
out
daa
leave
jecxz
or
popa
mov
mov
in
shl
or
out
enter
mov
call
sbb
(bad)
and
xor
sahf
dec
adc
test
pusha
mov
xchg
add
push
or
lahf
add
cmp
ficom
mov
loopne
imul
ja
add
dec
jo
addr16
ror
mov
sahf
xchg
cmp
xchg
mov
ret
(bad)
mov
pusha
stos
sar
gs
cmps
int
(bad)
mov
pop
call
dec
fbstp
inc
add
mov
jno
inc
pop
or
mov
jmp
xlat
pop
lea
adc
push
sbb
and
or
dec
mov
xor
sub
call
jno
scas
mov
sub
mov
fwait
inc
(bad)
sub
mov
aaa
in
addr16
outs
inc
jecxz
jmp
xchg
(bad)
add
fsub
aas
fst
clc
adc
adc
out
jo
add
jp
sti
mov
into
fwait
shl
lock
jns
neg
push
in
jno
je
push
into
and
push
jge
sub
out
adc
fchs
pop
dec
add
jae
push
and
test
int3
addr16
pop
scas
das
jecxz
cmp
div
je
out
cmps
and
rol
sbb
test
pop
mov
mul
mov
imul
sub
dec
mov
lods
fisttp
movs
sub
cmovno
and
jno
retf
push
mov
fnstenv
mov
xchg
push
dec
movs
jmp
imul
jae
(bad)
(bad)
out
scas
ret
(bad)
in
pop
jne
mov
sahf
mov
loope
cmp
inc
add
mov
push
xor
push
leave
fdivp
add
cmp
mov
imul
xor
jno
xor
add
icebp
pop
push
ds
in
aad
xchg
cmp
mov
hlt
shr
dec
into
inc
jnp
jbe
xor
retf
data16
std
mov
or
adc
jmp
xor
or
cmc
mov
imul
jle
dec
lock
inc
test
adc
inc
or
inc
and
loopne
mov
fadd
or
sbb
jge
mov
loop
hlt
xchg
fist
inc
addr16
sbb
ins
sub
pop
lds
jl
sbb
sbb
xor
lahf
aam
ja
add
daa
jae
jmp
pop
xchg
call
pushf
xor
add
inc
mov
daa
loop
jmp
aaa
push
call
enter
int
or
ret
out
clc
sub
arpl
fld
imul
test
jns
mov
movs
jge
dec
leave
mov
repz
add
icebp
add
inc
in
and
setno
jle
mov
add
repnz
fmulp
cmp
cmp
pop
xor
jne
add
mov
inc
(bad)
jmp
mov
jb
jg
push
ret
jo
(bad)
mov
jle
sbb
or
cmc
mov
add
pop
sbb
pop
(bad)
push
jmp
pop
mov
stc
mov
xchg
jb
rcl
les
sbb
mov
es
or
lea
jmp
sbb
into
ja
xchg
test
daa
adc
nop
loopne
inc
or
fisub
das
xor
ret
jge
pop
inc
out
jb
xchg
cli
movs
vprotb
out
frndint
ror
jle
dec
sar
push
sub
push
mov
cld
addr16
and
ins
dec
mov
rol
shl
div
mov
jecxz
mov
and
jg
ror
mov
loop
mov
pop
xor
in
mov
lahf
dec
test
lock
xor
or
adc
movs
cmp
fisubr
dec
jo
sar
adc
sub
call
mov
push
jno
mov
dec
movs
mov
(bad)
mov
add
mov
jbe
ins
outs
dec
inc
icebp
aam
out
scas
inc
stc
movs
mov
jb
sahf
xor
sub
add
sbb
ficomp
push
xor
sbb
add
inc
shr
pop
inc
bound
mov
and
out
xchg
test
cmp
lock
push
jg
ror
adc
xor
in
ja
add
mov
mov
inc
push
adc
clc
in
mov
jnp
div
ret
aam
scas
clc
out
or
and
test
ins
lea
mov
and
out
leave
jae
cmp
pop
ror
shl
inc
cs
dec
pusha
pusha
sub
push
push
jae
and
adc
repz
lea
mov
fs
sub
dec
mov
mov
mov
push
cvttps2pi
(bad)
and
test
adc
popf
mov
cmp
or
or
sub
mov
mov
repz
or
adc
pop
int3
xor
mov
mov
cmp
ja
push
sub
pop
xor
push
sub
loope
lahf
fst
daa
add
dec
xchg
pop
(bad)
icebp
xchg
(bad)
pop
pop
ror
test
rcr
add
(bad)
jne
ds
or
repz
jp
mov
fsubr
inc
xor
cld
xor
mov
in
inc
inc
dec
pop
adc
mov
xor
xchg
jl
cdq
out
in
add
jb
or
mov
pop
ja
(bad)
cmc
or
rcr
lahf
fdivr
add
out
push
cmp
dec
xor
dec
scas
arpl
dec
out
arpl
fdiv
inc
(bad)
test
xchg
jle
cmp
cmp
pop
mov
out
iret
push
or
pop
or
add
sbb
mov
(bad)
sti
xor
cmp
aam
cpuid
pop
jbe
jae
dec
data16
daa
inc
outs
or
and
sub
je
mov
movs
sub
cld
aaa
and
xchg
hlt
pop
push
xchg
inc
iret
pop
push
push
pop
xor
pop
daa
mov
xor
add
icebp
out
lods
mov
aas
sti
int
mov
jmp
out
xor
(bad)
dec
retf
pcmpeqw
lahf
fwait
outs
outs
pop
sahf
aas
xchg
mov
dec
ins
push
xchg
mov
add
add
ret
pusha
adc
push
or
mov
xchg
jle
xchg
cmp
mov
std
dec
mov
mov
cmp
xor
stos
or
xchg
in
(bad)
xchg
mov
jp
xor
sbb
push
popa
daa
jmp
sub
int
ret
inc
push
fadd
cld
(bad)
es
es
mov
int
push
pop
not
inc
(bad)
xor
mov
imul
jae
in
fwait
sbb
icebp
rcl
ins
rol
push
pop
adc
xchg
ins
aad
sbb
(bad)
sbb
xchg
and
adc
popa
xchg
inc
xchg
mov
lahf
and
adc
aaa
int
sub
adc
rcl
ret
cli
cmps
sub
xor
shr
xchg
test
push
(bad)
or
jae
sub
and
in
fndisi(8087
push
mov
sbb
(bad)
stos
mov
or
aaa
rcl
and
pop
jmp
aas
dec
aaa
ret
test
test
jge
pop
push
pushf
and
jne
(bad)
pushf
jmp
ins
popa
ins
xlat
in
sbb
mov
pop
cmp
sbb
push
pop
or
mov
fcomp
cmps
fstp
add
sub
into
addr16
push
and
or
stos
mov
mov
pop
or
mov
aad
pop
jp
retf
stc
push
mov
fild
mov
push
add
sub
das
xlat
jns
call
out
push
(bad)
call
fcmovu
(bad)
add
add
mov
fsub
test
aam
mov
inc
loopne
leave
adc
cwde
mov
jno
adc
jns
ss
mov
xor
pusha
add
push
mov
and
mov
dec
jecxz
mov
or
xchg
scas
movs
mov
inc
push
mov
lods
cmc
add
add
not
daa
inc
out
leave
mov
mov
out
outs
cmps
js
fwait
daa
inc
xchg
mov
inc
out
pop
stos
(bad)
mov
or
sub
mov
into
outs
cmps
bound
fsub
jnp
xor
ja
inc
xor
test
jp
ja
loope
push
xor
je
cmp
(bad)
mov
inc
(bad)
sbb
or
shl
mov
pusha
lods
mov
pop
stos
and
push
shl
ficomp
dec
data16
imul
push
int
mov
ror
fmul
cmp
pop
pop
pop
xchg
push
adc
dec
ret
aam
cmp
mov
cmp
lahf
clc
stc
sbb
les
sub
dec
out
mov
not
mov
xchg
xlat
jge
or
cmc
fsub
not
mov
cmp
inc
jno
stc
sbb
jnp
stc
pop
stc
push
inc
xlat
adc
sbb
les
sub
xchg
scas
push
dec
and
(bad)
sar
stc
push
mov
dec
sub
in
(bad)
inc
stc
dec
ror
cmp
sbb
fbld
out
pushf
gs
retf
fpatan
or
push
scas
je
inc
mov
aam
and
xor
cmp
adc
jg
mov
ja
sar
jp
xchg
dec
das
sti
mov
xchg
fcom
pop
dec
js
or
lods
and
mov
and
pop
(bad)
ds
enter
push
xor
imul
into
inc
rcr
ss
rol
outs
mov
sbb
pop
shl
test
xor
sbb
or
pushf
push
aad
mov
cwde
inc
(bad)
xchg
aaa
push
dec
int3
dec
sti
jae
idiv
mov
xchg
mov
iret
cmp
fidivr
icebp
xlat
les
sbb
lods
inc
pop
in
or
mov
js
jno
sub
popa
enter
test
mov
xor
(bad)
bnd
mov
in
push
aad
mov
pop
mov
test
mov
inc
fnsave
sub
js
fldenv
jne
or
pop
mov
inc
xchg
xor
pushf
ret
add
loope
gs
jns
xor
jnp
popa
dec
jbe
mov
jp
dec
out
or
push
cmp
ror
retf
push
aad
jb
push
ret
sub
xor
xchg
dec
push
lods
repz
jmp
out
nop
pop
test
jno
fisubr
push
adc
sbb
or
mov
pop
lea
xor
iret
ror
ss
inc
cmc
je
aad
adc
xlat
data16
movs
popf
push
and
fwait
bound
mov
jp
mov
cmps
lahf
inc
or
lods
jg
(bad)
pop
or
pop
aas
leave
xchg
ins
jmp
push
mov
movs
iret
lea
inc
fisttp
sub
jnp
cli
cmps
shl
fisttp
les
and
sti
sbb
inc
inc
aaa
shl
pop
cwde
sbb
cwde
mov
stos
mov
ins
icebp
push
sahf
cmp
lods
sahf
inc
daa
sub
lea
mov
adc
dec
push
and
in
xchg
push
or
out
out
jmp
jb
hlt
adc
out
jne
ss
push
pop
rcl
dec
gs
sub
add
xor
sbb
stos
nop
adc
ja
rcl
and
aad
mov
mov
xchg
and
push
ret
mov
push
push
cmp
mov
jl
sub
jmp
mov
jmp
add
(bad)
lock
test
jnp
xor
je
test
push
out
xchg
jae
lock
xchg
adc
(bad)
(bad)
pop
hlt
lds
imul
jb
mov
retf
lock
cmp
xor
out
xchg
mov
repnz
push
mov
leave
test
dec
cwde
aam
inc
push
cmc
dec
out
cli
xlat
push
hlt
mov
pusha
cmp
cmp
enter
sbb
adc
mov
ja
and
push
mov
cwde
outs
clc
jg
inc
aad
je
imul
adc
cs
js
mov
mov
or
dec
jg
ja
bound
ficomp
test
jbe
ret
pop
xchg
mov
jae
and
les
mov
push
xchg
and
xchg
sbb
or
push
mov
lock
cld
xchg
ret
cmp
push
mov
in
dec
cli
push
cld
fnstenv
push
adc
push
and
out
inc
xchg
cmps
cmp
mov
in
ror
mov
and
sub
inc
jae
lea
xchg
sub
call
inc
cmps
xor
inc
xchg
adc
call
cli
dec
cld
sbb
adc
pushf
xor
mov
leave
and
mov
aas
push
cmps
pop
rol
fnstsw
mov
pop
push
sbb
and
pop
in
dec
xchg
cmp
sbb
cwde
or
jmp
aad
xchg
and
push
jno
scas
fcom
mov
retf
pop
mov
or
and
in
mov
es
iret
aas
mov
mov
lahf
and
cmp
movs
data16
fucomip
div
retf
adc
jns
mov
pop
mov
or
jp
iret
sbb
mov
mov
aas
call
outs
pop
push
and
adc
ds
mov
ss
sub
push
mov
or
xchg
call
xchg
adc
inc
jbe
daa
je
sbb
and
loope
inc
inc
mul
adc
push
pushf
jmp
or
jmp
mov
cmp
or
pop
add
sbb
test
and
mov
and
imul
mov
out
mov
rcr
push
aam
sbb
cli
mov
int3
pop
imul
add
pop
ret
jl
imul
xor
lods
pop
mov
fbstp
jne
jl
out
out
in
dec
push
ror
push
jno
ror
loopne
and
sbb
xchg
dec
outs
jl
fidiv
push
and
test
jl
stos
leave
je
fadd
jne
push
bswap
cld
xchg
jae
call
push
mov
clc
cmp
pop
jb
call
pop
in
xchg
xchg
pop
adc
sbb
aas
test
xchg
int
ins
pushf
dec
fcomp
rol
push
(bad)
(bad)
jbe
cmps
fmul
xor
xchg
pop
push
mov
mov
jp
or
xor
cmp
inc
imul
push
xor
cld
mov
ror
and
hlt
or
mov
mov
mov
daa
test
into
pop
in
adc
pop
jo
aaa
mov
or
cmps
pop
pop
in
dec
add
and
sti
adc
(bad)
cmp
lock
icebp
mov
popf
adc
push
inc
cmp
arpl
pop
fdiv
mov
shl
out
mov
xor
in
sar
je
mov
jmp
sub
mov
repz
fsubr
mov
ins
(bad)
mov
cmp
test
sbb
dec
fiadd
data16
mov
lods
out
or
xor
test
dec
push
xor
aaa
hlt
cmova
adc
push
and
xor
mov
sti
sbb
sbb
mov
test
mov
loope
retf
inc
out
inc
test
push
xor
scas
lahf
sub
je
mov
push
int3
inc
push
and
mov
out
or
push
aad
in
jnp
test
mov
add
scas
mov
sub
adc
push
scas
(bad)
mov
jne
push
pop
or
pop
jp
cmp
add
add
push
retf
cmp
in
into
daa
fs
adc
scas
pop
movs
mov
loop
fs
lock
out
ror
fnstsw
neg
sbb
sahf
fisub
pop
lods
and
dec
imul
cmp
lock
(bad)
cmp
ins
dec
retf
xchg
or
mov
or
loopne
sub
clc
dec
xchg
cwde
dec
mov
dec
cmp
inc
or
pop
pop
ror
dec
lods
and
clc
fistp
cmp
std
ss
fimul
sbb
cmp
inc
dec
and
not
(bad)
cs
mov
or
cdq
jbe
sbb
jno
nop
add
int
pushf
out
outs
and
inc
push
mov
mov
fadd
mov
iret
sar
cmp
mov
or
loopne
in
pop
ins
movs
xor
inc
dec
dec
dec
(bad)
addr16
inc
push
ss
cmp
adc
stos
mov
loop
jmp
xchg
and
aad
shl
adc
inc
sub
jg
cli
xor
mov
xor
iret
xor
pop
mov
retf
(bad)
xor
mov
daa
rol
not
push
jns
xchg
(bad)
mov
or
stos
gs
je
jnp
sub
cmp
sub
dec
and
fld
and
jae
ins
push
jl
adc
pop
cdq
mov
sbb
and
xchg
lahf
and
cmp
test
test
inc
mov
ins
jl
add
in
sub
stos
fist
add
pop
or
in
fsubr
push
inc
cmp
push
sti
bound
xor
lods
in
stc
enter
mov
ret
xchg
mul
xlat
imul
dec
dec
inc
daa
(bad)
call
repnz
scas
ins
inc
cdq
iret
xchg
xor
mov
out
or
shl
jl
test
or
int3
and
out
xchg
sbb
mov
repnz
retf
leave
and
ins
push
push
out
gs
jmp
loopne
lods
scas
jmp
stos
sbb
add
dec
enter
test
cmp
adc
je
std
stc
push
dec
cmp
dec
sub
add
std
jns
mov
jne
in
sub
sub
xchg
cs
or
and
out
(bad)
je
jb
mov
sti
push
lods
or
cmp
hlt
ret
call
add
mov
push
xor
and
out
ret
mov
xchg
cmc
fcomp
je
out
lods
adc
ret
(bad)
(bad)
popf
pop
jns
sbb
xchg
lea
mov
rcl
xchg
inc
push
mov
int
clc
iret
ss
sbb
jnp
mov
mov
pop
stos
xchg
push
clc
test
push
add
ret
and
inc
sub
hlt
loop
sbb
arpl
sbb
mov
call
aad
iret
jg
push
aam
inc
jae
dec
cmp
sub
in
lods
jecxz
jbe
leave
mov
xchg
mov
mov
mov
and
sbb
sub
xchg
add
in
cmp
xor
inc
lods
cmp
and
sub
pop
jnp
lds
dec
lods
mov
or
stc
into
xchg
inc
inc
mov
in
adc
jae
add
sub
xchg
pop
jns
loopne
pop
mov
sysret
adc
cmp
adc
jle
xchg
cld
imul
inc
ds
pop
test
sub
push
daa
test
stos
adc
popa
shl
shl
js
mov
sub
sahf
neg
cli
movs
ds
ret
jecxz
cmps
test
fld
iret
lods
js
lds
es
jne
xchg
mov
xchg
xchg
inc
ja
cs
push
ins
mov
inc
call
jmp
add
fisub
mov
mov
test
imul
and
adc
push
dec
int
imul
dec
jo
jecxz
mov
mul
call
ja
leave
enter
pop
or
xor
fist
aam
xor
jecxz
outs
gs
sbb
std
mov
sub
mov
or
ins
cwde
jle
dec
je
fdivr
sub
adc
aaa
movs
shl
pop
(bad)
outs
les
push
cmps
std
jae
mov
hlt
mov
iret
push
cmp
pop
xchg
pop
mov
(bad)
push
push
loop
xlat
popfw
jle
jg
mov
daa
pop
scas
imul
jmp
test
sbb
scas
cmp
xor
test
sbb
out
cmps
idiv
in
dec
dec
inc
mov
rol
scas
das
mov
lock
loope
cmps
sub
dec
cmp
and
fs
dec
sbb
mov
adc
fcmovb
sbb
inc
das
sub
(bad)
rol
adc
aaa
mov
inc
xor
pop
xor
inc
push
dec
(bad)
sbb
push
sub
push
jne
cli
inc
dec
addr16
iret
adc
mov
and
stos
cmp
jns
stos
pop
jmp
jmp
mov
in
or
jb
dec
sbb
mov
cmps
push
data16
cmp
lods
jns
in
lahf
fidiv
xchg
jp
retf
pop
inc
call
mov
test
lahf
sahf
lea
out
mov
mov
push
jg
sbb
jle
jge
and
and
mov
lods
aaa
ret
int3
icebp
leave
test
daa
xchg
inc
(bad)
mov
or
jecxz
push
mov
mov
jle
sbb
movs
pop
fdivr
fisubr
sbb
inc
adc
cmp
adc
dec
test
daa
stc
mov
bound
cs
shr
xor
sti
cmp
and
jecxz
cwde
ds
adc
cmp
xchg
jl
das
scas
mov
and
rep
mov
lods
test
push
hlt
cmc
sbb
ficomp
lods
bound
bts
cmps
cmps
jns
xchg
test
adc
mov
xchg
cmps
push
ins
push
loop
mov
mov
sbb
shr
xchg
jb
xchg
sub
out
xchg
ret
xchg
icebp
jp
fnsave
jg
xchg
repnz
ins
dec
mov
dec
xchg
retf
adc
lods
js
fucomp
movs
cmps
aas
imul
iret
pop
repz
xchg
adc
retf
adc
sti
je
sub
idiv
add
out
pop
imul
mov
inc
pusha
pop
fsubr
adc
inc
xchg
repnz
das
xchg
xchg
rcr
cmps
xor
(bad)
call
pop
xor
ss
pop
or
pop
ror
jp
sbb
scas
stos
ins
cwde
shl
fs
popf
fs
pusha
fwait
cmc
das
movs
xor
xchg
xor
xchg
mov
xchg
pop
js
xchg
fs
movs
adc
ret
dec
dec
cmps
and
push
sbb
xor
push
test
shl
push
cs
ss
mov
jp
and
inc
xlat
rcl
mov
push
cmp
or
mov
xor
fs
(bad)
push
adc
sub
xchg
out
pop
js
push
imul
xchg
das
mov
inc
mov
mov
shl
popf
mov
test
outs
mov
push
adc
add
pusha
dec
outs
mov
sbb
retf
ret
ins
out
sub
jmp
mov
scas
lods
das
jle
adc
dec
aas
mov
adc
in
push
std
jne
jge
iret
jge
pop
not
mov
adc
sub
cmp
jno
out
ret
or
ins
(bad)
sub
push
aad
ins
jle
fstp
jmp
and
es
in
cwde
enter
loope
(bad)
(bad)
(bad)
cld
leave
push
in
inc
or
xor
(bad)
clc
dec
aad
pop
xchg
test
mov
aaa
aam
rcr
xor
iret
push
adc
ret
sbb
pop
enter
idiv
pusha
add
js
fs
(bad)
mov
(bad)
and
mov
test
sub
mov
shl
pop
enter
push
retf
addr16
out
push
lds
jo
pop
sub
movs
popa
outs
int
mov
call
sbb
jnp
pop
shl
inc
inc
mov
imul
leave
(bad)
push
mov
fst
and
in
sbb
mov
clc
retf
pop
out
sub
cmp
sub
aad
fs
mov
mov
xchg
imul
es
xor
inc
jmp
jmp
jbe
push
iret
enter
sub
xor
fimul
mov
fsubp
jno
ds
fcom
cli
mov
cmps
xlat
sbb
mov
jno
mov
sahf
mov
jmp
xor
dec
leave
(bad)
xchg
ins
fsubrp
mov
ds
out
push
loopne
leave
push
sub
inc
adc
jns
inc
or
ror
inc
fcomp
idiv
aad
jae
mov
imul
xor
je
jnp
sub
pop
xchg
or
aad
mov
or
aad
and
inc
jg
mov
aas
xor
cld
inc
pusha
ret
mov
xchg
or
pop
call
aad
add
in
mov
mov
fsub
fbstp
les
inc
push
repz
movs
imul
popa
mov
add
push
js
bound
ret
mov
pushf
push
enter
cmp
and
sbb
or
mov
mov
inc
push
aad
loop
pop
sub
adc
imul
pop
scas
scas
push
sar
sub
ja
mov
dec
sub
adc
xchg
ficomp
and
test
das
jmp
int
sub
jl
jg
call
pop
mov
out
rol
mov
(bad)
add
iret
and
sbb
(bad)
inc
push
mov
into
push
stos
adc
call
(bad)
lods
imul
inc
jo
dec
mov
(bad)
xchg
sbb
icebp
das
xchg
and
jle
loope
cmp
(bad)
xor
xchg
es
mov
sub
es
jae
mov
sub
jmp
adc
mov
or
enter
aas
in
sub
add
mov
jns
fimul
call
mov
mov
inc
add
outs
push
idiv
leave
stos
pop
dec
push
sub
dec
aad
ja
jnp
cwde
leave
fwait
inc
dec
xchg
loopne
jne
in
lds
stc
rol
push
lds
adc
jmp
pop
mov
push
ds
or
int3
push
es
push
mov
cmc
or
inc
add
cmp
fmul
fs
shl
movs
sbb
add
dec
mov
scas
cmp
jo
dec
push
test
stos
sbb
pop
out
or
neg
or
jbe
(bad)
pop
xor
test
leave
push
ror
xor
adc
bound
cwde
push
inc
ins
cmp
push
addr16
pop
mov
jnp
pop
and
adc
mov
data16
or
pushf
adc
sub
mov
shl
ret
mov
and
fidivr
mov
sti
out
or
add
pop
and
out
out
popf
add
add
sub
push
and
popf
xchg
jmp
and
sbb
aaa
mov
push
jb
aaa
mov
sti
pop
aam
cmp
xor
mov
lea
cwde
adc
or
movs
mov
test
ret
dec
test
repz
in
les
sub
ret
pop
shl
popa
push
shr
imul
aas
pop
xor
lods
loopne
aam
and
cmp
fwait
mov
test
mov
mov
push
xchg
push
xor
retf
jo
jne
xchg
mov
push
mov
xor
push
push
rcl
xchg
mov
(bad)
out
pop
cmp
add
in
in
xlat
(bad)
test
xchg
xor
jmp
mov
push
popf
jbe
scas
and
sub
fdiv
sub
push
or
inc
jae
dec
sub
cmp
es
aas
adc
cmc
push
ins
js
fadd
arpl
cdq
jnp
(bad)
int3
mov
idiv
shl
push
int3
outs
mov
mov
jns
mov
xchg
xchg
dec
mov
inc
sahf
xchg
or
jno
mov
into
xchg
repz
mov
out
add
push
mov
bound
data16
test
scas
pop
push
xor
std
and
es
stos
stos
cmp
xchg
jg
push
fldenv
dec
lahf
cdq
pop
xor
leave
mul
(bad)
xor
outs
sbb
mov
sahf
movs
out
test
mov
test
sbb
add
inc
cdq
jle
jl
and
inc
imul
mov
movups
inc
test
(bad)
fadd
xor
xor
adc
iret
cld
jno
sub
scas
repz
jmp
sub
js
mov
fst
sti
mov
mov
dec
rcr
jge
retf
shl
xchg
fstp
cmc
mov
push
test
loope
retf
mov
push
push
aad
out
je
imul
sub
aam
add
xchg
nop
rol
out
dec
imul
mov
xchg
pop
cli
in
or
push
aam
sub
fwait
je
std
or
xchg
push
xchg
adc
xor
xchg
pushf
clc
and
jae
loope
ret
sub
dec
cmp
mov
fistp
dec
xchg
sbb
jl
push
fwait
and
dec
fnsave
jg
cli
cmp
push
sahf
push
mov
scas
loope
rcr
dec
packsswb
xor
mov
sbb
xor
out
icebp
scas
leave
call
(bad)
push
dec
out
xchg
cmp
ins
jg
ror
mov
clc
arpl
jge
pop
jae
(bad)
jmp
aad
scas
jb
aad
mov
xor
mov
movs
addr16
ror
xor
jnp
fist
mov
or
mov
in
mov
cmp
bound
xchg
jp
xlat
(bad)
sbb
jno
int3
dec
fmul
repz
jle
adc
mov
sub
(bad)
mul
inc
into
and
sub
mov
jle
or
movs
loope
mov
pusha
jbe
out
ds
scas
inc
mov
inc
dec
(bad)
lock
(bad)
mov
(bad)
push
mov
mov
cmp
je
mov
in
fsubr
pop
hlt
xor
inc
adc
dec
data16
mov
(bad)
enter
out
or
pop
lea
repz
inc
les
stc
jbe
cmp
outs
popa
xchg
and
push
or
push
ds
cwde
out
test
stos
xchg
xchg
pop
shl
clc
xchg
hlt
inc
iret
popa
lea
ins
sub
dec
pop
stc
push
(bad)
mov
push
xchg
shr
sub
mov
push
test
xor
xor
out
inc
add
cs
mov
push
out
loopne
or
outs
jl
jp
mov
adc
ss
adc
out
jge
retf
rcr
jae
lods
sub
test
inc
xchg
daa
clc
push
mov
cmp
xchg
mov
int3
push
pop
ins
cmp
sti
push
ja
xchg
push
xor
cdq
pushf
lods
xor
xchg
out
jb
inc
xchg
fdiv
out
loope
cmp
jle
mov
dec
out
fcom
xchg
sbb
dec
outs
sar
stos
cmc
cli
inc
xor
mov
add
in
fiadd
dec
jle
cmp
cmp
adc
int3
xor
cmc
stos
dec
xor
pop
aaa
pop
(bad)
neg
adc
cmp
mov
ds
pop
mov
xchg
cmp
dec
iret
stos
push
in
fisub
and
dec
push
lods
xor
ret
xchg
jo
cs
push
adc
lock
ja
js
popa
cmp
not
push
mov
push
or
cs
lahf
(bad)
mov
test
sub
repnz
dec
cmp
push
popa
jne
leave
mov
pop
mov
xor
mov
push
jle
sub
mov
sar
je
xor
dec
fidiv
rcr
sub
sub
(bad)
addr16
mov
ins
push
pop
popa
jns
inc
bound
lock
jge
jp
mov
(bad)
jne
xor
cmp
jmp
xchg
stc
scas
sbb
sti
fs
(bad)
xchg
icebp
adc
xor
int
mov
jno
jbe
adc
leave
aaa
shl
test
xlat
dec
inc
sub
es
lods
push
movs
int3
iret
sti
cld
jbe
jge
pop
push
loop
xchg
popa
pop
fistp
idiv
dec
fcom
lea
pop
stos
xchg
dec
shr
(bad)
sub
mov
cld
dec
fnstenv
push
stc
sahf
dec
push
xor
(bad)
jo
mov
fimul
adc
outs
xchg
dec
cmps
add
pop
ins
mov
inc
push
sti
push
lea
inc
bound
scas
adc
popa
dec
push
xchg
jp
push
or
test
mov
push
lds
aad
(bad)
lea
jns
pop
sub
jae
mov
add
imul
and
pop
mov
push
and
cld
cmp
ret
lods
pop
(bad)
in
add
or
mov
hlt
pop
movs
es
cli
retf
stc
dec
sbb
in
push
retf
cdq
daa
xchg
dec
fs
sub
fstp
pop
cwde
sub
fsubrp
repz
pop
sub
push
popf
and
sbb
adc
std
mov
dec
and
or
or
es
imul
adc
ja
fdivr
mov
in
sub
push
jp
ffree
xor
out
jecxz
ffreep
xor
sub
mov
and
adc
add
stos
(bad)
push
aaa
mov
jno
add
jp
push
adc
dec
pop
retf
ja
in
push
mov
dec
ins
xor
out
adc
fstp
jo
add
mov
or
(bad)
xchg
dec
hlt
inc
scas
gs
nop
or
xor
mov
out
cmp
stos
leave
fidiv
ja
sub
sbb
xor
fs
psrld
cld
mov
loop
aad
ret
fnstsw
sbb
stos
jbe
(bad)
shl
ret
stc
call
in
xor
adc
sub
inc
and
aaa
lea
sti
fiadd
push
ss
pushf
dec
mov
out
or
dec
add
mov
jge
mov
jns
ss
mov
jmp
mov
lods
or
call
inc
leave
inc
repnz
mov
xlat
fwait
push
jmp
fcmovu
or
add
ds
xlat
fiadd
inc
arpl
dec
(bad)
test
outs
addr16
dec
adc
pop
and
add
aaa
sbb
jl
cli
inc
mov
pop
or
dec
jg
call
sub
sub
out
jp
mov
push
cs
cdq
mov
icebp
push
(bad)
data16
xchg
(bad)
enter
mov
cmp
mov
push
add
mov
mov
cmp
pop
push
xchg
sbb
inc
mov
xchg
add
enter
inc
mov
cmp
clc
pop
jne
push
or
inc
sbb
pop
gs
adc
stos
xor
mov
add
push
push
push
add
mov
stc
nop
pusha
adc
mov
and
cdq
push
cmp
pop
inc
mov
aam
leave
pop
sub
push
sub
div
cmp
mov
mov
mov
push
repnz
int3
ja
shl
pop
test
xor
vmwrite
gs
mov
xchg
sbb
icebp
stc
sbb
add
adc
cld
or
scas
add
xchg
das
outs
je
je
jmp
inc
addr16
sbb
int
retf
jmp
mov
das
pop
mov
retf
dec
mov
(bad)
jno
(bad)
mov
loopne
inc
std
mov
repz
mov
push
mov
scas
dec
loopne
xchg
test
iret
loop
push
(bad)
std
adc
xor
sbb
pop
xor
(bad)
push
push
in
pop
mov
pop
inc
test
and
stc
pop
les
ret
es
or
(bad)
adc
jl
in
push
jb
and
out
shl
sti
test
stos
fist
pushf
pop
in
push
inc
cs
inc
loop
imul
fild
jp
adc
ret
fidiv
mov
int
jbe
xor
fisttp
adc
xor
movups
xor
push
cwde
adc
jb
sub
movs
inc
inc
push
or
lds
fisttp
cmp
adc
nop
jmp
add
inc
push
lahf
nop
mov
sbb
cmps
sub
pusha
add
call
cmp
push
pop
mov
xchg
add
xchg
into
sub
lock
sub
pusha
(bad)
jle
pop
dec
loop
test
mov
pop
jo
clc
xchg
ja
call
(bad)
sub
fs
or
and
or
push
dec
fsubr
inc
ds
push
inc
lea
push
push
out
sub
imul
lods
xchg
(bad)
fs
push
imul
nop
ss
add
jae
cmps
(bad)
les
rcr
test
repnz
scas
mov
mov
pushf
test
es
pop
jnp
xchg
jl
xchg
je
and
adc
bound
imul
popf
mov
(bad)
retf
push
xor
out
outs
std
sti
xchg
outs
leave
mov
ss
xor
inc
cmp
shr
add
fmul
mov
cmp
outs
jnp
(bad)
fsub
jmp
add
fwait
pop
lea
cwde
mov
(bad)
xchg
add
cmp
movs
inc
adc
xchg
xor
sub
add
test
xor
mov
mov
adc
mov
xchg
cmc
nop
add
popa
les
adc
pop
sbb
or
cs
ss
clc
imul
stc
and
ret
nop
fimul
shl
or
(bad)
sbb
dec
and
clc
js
or
dec
sbb
cmps
lock
rcl
or
mov
cmp
adc
xor
push
shrd
test
cmp
test
and
ret
jp
fwait
scas
pushf
lea
scas
clc
ja
pop
adc
mov
jns
(bad)
jecxz
mov
push
jg
push
retf
pusha
push
mov
mov
(bad)
xchg
lds
(bad)
cli
mov
aam
dec
pop
stos
js
cs
xchg
sub
inc
mov
cmp
lods
mov
adc
and
jge
mov
sub
mov
loop
int
test
sbb
mov
jns
mov
xchg
mov
mov
daa
mov
lods
aas
(bad)
fcmove
shl
fisub
inc
retf
xchg
(bad)
fadd
pop
lea
cwde
jbe
xchg
pop
adc
pop
lods
dec
ficomp
jecxz
pop
retf
pop
or
sub
lods
lea
(bad)
adc
stos
push
(bad)
cmc
xor
cmp
mov
scas
sbb
ja
cmp
pop
cmp
std
arpl
mov
inc
scas
dec
icebp
dec
imul
inc
fild
mov
sbb
fisubr
lock
nop
pop
mov
(bad)
jmp
ins
jmp
sbb
cmc
popf
lods
repz
neg
stc
jo
pop
sbb
aaa
inc
ins
jle
aas
mov
into
push
jns
fdiv
sub
jo
test
imul
dec
push
mov
mov
lea
cmc
cmp
mov
jl
fst
jnp
test
sub
mov
sub
cwde
mov
dec
loopne
outs
popa
jae
mov
fwait
inc
fild
mov
push
data16
movs
cmps
mov
fild
std
lds
sub
stc
sbb
adc
call
jbe
aad
jb
mov
cld
pop
mov
mov
enter
or
push
cmps
push
scas
pop
adc
std
mov
adc
mov
mov
iret
fs
or
lahf
adc
(bad)
inc
mov
mov
xchg
fisttp
es
out
add
mov
sbb
lods
xchg
enter
xor
adc
xor
(bad)
lods
add
mov
imul
movs
mov
mov
sub
cwde
push
sub
into
xor
mov
fdivr
not
pop
fimul
fisttp
or
mov
sbb
jle
retf
xchg
lods
shl
mov
dec
pop
mov
cmp
sbb
jge
pop
in
mov
gs
jp
in
mov
pop
xchg
xor
dec
popf
outs
scas
icebp
sub
lahf
sbb
jb
lock
and
inc
cmps
sub
fnstenv
push
adc
pop
sar
je
xchg
adc
hlt
mov
(bad)
hlt
mov
inc
test
ss
ror
jbe
mov
test
nop
cmps
pop
cmp
(bad)
jl
pop
fdiv
jnp
hlt
jp
mov
sub
mov
push
jno
icebp
movs
push
dec
aam
jmp
data16
ins
pop
bound
sub
mov
stc
out
sub
movs
movs
in
sbb
xchg
inc
cld
shl
mov
dec
mov
mov
repnz
or
dec
ficomp
mov
aaa
movs
jnp
mov
cmp
and
and
jo
xor
xor
xlat
les
or
arpl
cmps
mov
jbe
aam
imul
mov
sti
cli
pop
imul
pop
push
test
and
jge
adc
add
xchg
das
xchg
add
test
sub
mov
or
stos
adc
xchg
ret
jmp
cmp
or
adc
je
rcl
and
or
mul
mov
push
call
pop
sbb
scas
mov
and
push
scas
push
les
or
inc
jge
int3
in
je
sbb
sbb
retf
or
pop
(bad)
jmp
push
fwait
repz
add
jmp
daa
mov
imul
inc
mov
jmp
fdiv
mov
cdq
jp
mov
sbb
shl
xor
inc
add
or
std
inc
pushf
mov
dec
jmp
(bad)
and
(bad)
jb
into
enter
xor
and
or
and
or
es
xchg
jmp
lock
sub
adc
xor
cmps
mov
jecxz
jecxz
int3
xchg
jb
cmps
je
fnstcw
aam
or
je
jnp
std
cli
xchg
leave
inc
out
mov
mov
cmp
aaa
out
scas
movs
mov
sbb
push
fcmovnu
ret
in
stc
bound
test
sub
ret
xchg
jnp
dec
or
push
mov
fnstsw
push
jle
loope
inc
scas
inc
dec
pop
mov
daa
cdq
and
imul
imul
ret
repnz
rcl
ss
cmp
push
fild
pop
leave
sbb
pop
(bad)
xor
xor
fstp
or
loop
out
test
mov
scas
pop
gs
adc
xor
sbb
in
cmp
mov
adc
push
jle
hlt
into
push
lods
sub
inc
sbb
lods
jl
xlat
adc
inc
sbb
jbe
xor
movs
inc
repz
and
cmp
xchg
sar
aas
adc
sbb
sbb
popa
lds
(bad)
mov
mov
ret
sub
jb
mov
inc
inc
and
pop
and
xchg
mov
cwde
stos
sub
ss
cmc
push
cdq
rol
xchg
cmp
add
pop
je
scas
mov
mov
or
adc
(bad)
out
ror
test
mov
mov
and
test
add
daa
mov
stos
mov
cmp
into
or
leave
or
int
dec
mov
fcom
inc
mov
push
lods
cmp
pop
xchg
out
lea
pop
not
jbe
fcom
pop
fs
dec
jno
jl
xchg
lea
or
sti
fiadd
retf
xor
clc
add
out
xor
xchg
in
shl
imul
or
or
xor
xchg
jge
push
or
scas
sbb
daa
loope
and
les
shl
mov
and
jle
push
gs
sbb
test
mov
stos
js
nop
popa
inc
ja
mul
push
sub
or
outs
aad
xor
mov
fisub
xchg
or
inc
mov
jmp
jne
out
(bad)
lods
or
mov
push
jge
in
add
mov
adc
sbb
mov
mov
jne
jge
je
test
bound
cmp
xchg
xchg
jnp
cmps
pop
add
rcr
inc
add
xor
mov
or
(bad)
cs
xor
push
test
pushf
clc
adc
addr16
out
mov
pop
push
daa
xchg
jp
push
add
adc
mov
inc
add
adc
xchg
jmp
ss
ins
stos
sbb
sub
pusha
aas
add
add
mov
or
jle
outs
aaa
int
call
pop
test
imul
loopne
inc
inc
mov
xor
inc
adc
movs
xchg
shl
int
pop
cld
jecxz
bound
mov
xor
fnstcw
popa
push
sbb
stos
jge
cmps
jae
cld
fcmovb
iret
jl
pusha
jle
(bad)
retf
out
aad
(bad)
sbb
mov
sbb
jo
jb
cld
dec
adc
mov
and
clc
pop
mov
jge
mov
or
mov
aad
sti
mov
scas
mov
push
mul
jne
mul
jle
fcomp
dec
add
add
cwde
sub
leave
fdivr
jns
daa
jmp
inc
lds
lahf
cmps
inc
push
add
int
retf
jmp
add
(bad)
in
pop
call
(bad)
imul
pop
cdq
les
movs
stc
xor
and
mov
getsec
sti
push
pop
mov
jl
inc
inc
mov
pop
cld
ins
sub
jge
xor
sub
jge
pop
inc
jo
(bad)
loop
mov
and
cli
and
leave
stos
or
ja
popa
(bad)
fs
leave
cwde
inc
mov
jp
lods
or
in
mov
push
sbb
jne
xchg
cmps
dec
push
les
js
inc
dec
jmp
sub
outs
sub
or
test
xor
in
bound
shr
xchg
stos
add
and
pop
mov
cld
dec
xor
sub
xchg
movs
test
imul
rcr
cmps
dec
stos
(bad)
sub
test
loopne
cmps
sub
lea
sbb
scas
mov
sbb
stos
jl
mov
dec
pop
mov
inc
nop
or
pop
in
int3
jmp
jle
add
sbb
loopne
lods
es
popf
inc
iret
cmps
fdivr
ins
iret
mov
(bad)
or
sbb
stos
lea
inc
sbb
ds
add
mov
gs
stos
and
xor
cmps
in
or
arpl
in
gs
push
fcomp
mov
sbb
fnstsw
aas
jmp
(bad)
xor
or
fstp
sbb
and
push
sub
or
add
inc
adc
sti
nop
jnp
js
adc
outs
inc
push
loop
popf
(bad)
inc
xchg
inc
int3
inc
xchg
mov
arpl
sahf
scas
cmp
add
lea
inc
pop
(bad)
les
movs
rcl
int
(bad)
test
(bad)
dec
aas
push
aam
xchg
jb
xor
jno
cmps
les
mov
adc
jge
leave
jno
mov
mov
stos
aad
xlat
imul
and
xor
sbb
mov
(bad)
sar
sub
jae
mov
test
out
dec
mov
inc
sahf
addr16
dec
jmp
push
fild
jmp
sahf
bound
int3
int
cmps
inc
jge
int
out
loopne
test
dec
xor
jmp
fucom
addr16
loope
mov
jg
mov
in
push
xchg
loope
pop
add
jmp
pop
btr
and
(bad)
cwde
test
add
jnp
stos
mov
or
das
repnz
sbb
mov
sub
sub
mov
cdq
shr
loopne
push
adc
mov
add
dec
dec
cmp
(bad)
idiv
(bad)
pusha
xchg
push
push
push
daa
fwait
adc
fisub
(bad)
cli
pop
test
inc
(bad)
add
dec
sbb
dec
mov
mov
outs
iret
dec
retf
outs
xor
inc
cdq
sub
imul
push
ror
mov
pop
aaa
pushf
inc
mov
jnp
(bad)
cmp
jle
call
dec
stos
es
ins
add
jl
fisubr
sub
inc
push
aas
ror
jecxz
push
out
add
das
sub
inc
rol
in
ret
in
loopne
add
or
xor
addr16
push
cmp
jmp
shl
jo
fisttp
sar
sub
(bad)
imul
mov
mov
movs
mov
aam
shr
add
test
xor
iret
ins
popf
cdq
ret
lds
pushf
(bad)
sbb
ins
jbe
dec
iret
dec
adc
push
xchg
leave
fsubr
loopne
das
imul
call
rcl
push
faddp
pop
mov
stos
ja
sub
bound
xor
xor
aas
scas
and
and
gs
adc
or
or
test
jne
push
sub
fistp
cmp
rol
inc
int3
loope
fisttp
sub
aaa
js
jge
es
cmps
xchg
jp
call
cs
in
out
jg
call
js
pusha
rcr
pop
dec
aam
into
cmp
jp
scas
std
xchg
pop
push
and
add
sahf
jge
xchg
push
ror
mov
adc
lahf
cmps
aad
outs
data16
mov
sub
pop
pop
and
bound
repnz
cmc
inc
dec
hlt
loope
sbb
push
nop
pop
sub
sub
ret
xor
hlt
fdivr
call
and
xchg
mov
mov
pop
jno
pop
fwait
leave
fst
idiv
std
cwde
iret
frstor
fild
xor
loopne
or
lods
stos
call
sub
int3
or
sahf
icebp
leave
cmp
in
mov
addr16
and
fucom
jle
mov
(bad)
je
push
repz
pop
sbb
pop
ins
loopne
stos
mov
jae
mov
sub
repz
pop
push
ret
dec
dec
or
repz
(bad)
sub
in
test
std
mov
add
jbe
dec
adc
sub
pop
clc
sbb
pushf
pushf
sbb
std
mov
xchg
mov
pop
(bad)
xchg
stos
push
in
mov
pop
pop
add
push
jne
cmp
(bad)
xor
xor
adc
repnz
sbb
sub
out
mul
cmp
clc
and
lahf
xor
cmp
idiv
cld
test
fwait
pusha
test
out
mov
std
icebp
pop
adc
mov
sub
sbb
cs
fisubr
jae
and
data16
out
lahf
or
push
xchg
mov
push
stc
int3
inc
jae
popa
aad
rcl
scas
std
adc
xchg
loop
inc
and
movs
(bad)
jb
mov
cmps
ds
or
xchg
int3
mov
nop
sub
xchg
lock
mov
inc
pop
add
mov
cmp
pushf
in
loopne
xor
(bad)
mov
push
inc
pop
add
jecxz
rol
imul
cmp
call
pmaxsw
adc
div
add
or
and
pop
and
pop
push
sbb
mov
add
fcmovb
and
sbb
push
fadd
popa
push
sub
xchg
cdq
push
jmp
call
or
jmp
sub
enter
dec
aad
mov
jg
ret
ins
scas
or
push
lahf
sub
out
cld
aas
mov
adc
inc
or
push
adc
adc
cs
xor
inc
inc
in
lock
(bad)
cmps
inc
sbb
add
xor
mov
cmp
adc
loopne
push
xchg
inc
inc
scas
leave
mov
and
test
push
push
ja
push
xor
add
test
nop
mov
(bad)
in
fdivrp
stos
adc
add
punpckhdq
arpl
push
shl
ret
and
dec
movhps
sub
push
neg
sub
mov
mov
ret
adc
addr16
lock
xor
imul
pop
repz
retf
popf
repz
cmp
and
push
repz
fsub
aad
lds
sub
(bad)
adc
fdivr
push
mov
iret
push
cdq
(bad)
push
shl
scas
ins
adc
scas
ins
inc
inc
in
xchg
push
pop
xchg
mov
sbb
push
movs
or
int
xchg
mov
dec
jno
sbb
fisttp
xlat
(bad)
imul
stos
aam
xchg
or
shl
or
push
ins
clc
push
add
stos
jle
jbe
or
fadd
jbe
pop
pop
sahf
sbb
in
cmp
xchg
pop
adc
sub
or
pop
call
xchg
push
fild
fstp
pushf
mov
mov
mov
mov
adc
xlat
add
cmp
shl
ret
fs
xchg
xor
jge
mov
aad
sbb
int3
test
jmp
scas
fbstp
push
adc
mov
mov
cmp
ret
xlat
nop
in
iret
int
xchg
scas
mov
(bad)
jb
or
out
test
retf
xor
xlat
cli
inc
iret
mov
fidiv
push
cmp
out
popf
sub
bound
jle
test
and
outs
sar
inc
enter
fld
and
arpl
mov
out
shl
xor
jg
add
mov
movs
jo
pop
mov
sbb
(bad)
inc
(bad)
lea
xchg
sbb
inc
inc
pusha
inc
mov
adc
inc
pop
stc
xor
pop
test
add
jg
mov
pop
loope
pop
adc
retf
pop
fisttp
push
xor
sbb
mov
adc
push
inc
xchg
popf
and
pop
xchg
jbe
stos
and
retf
cwde
(bad)
and
cmc
and
jg
(bad)
into
dec
fwait
pop
test
icebp
pushf
pop
jmp
into
(bad)
push
xchg
leave
rcl
pop
ret
adc
lds
adc
dec
gs
add
shl
iret
mov
loope
cmps
and
daa
xchg
fmul
and
out
outs
xor
inc
sub
sar
xor
cmp
sbb
cmp
push
xchg
into
icebp
div
jbe
cdq
mov
pop
cwde
jb
(bad)
lds
and
mov
dec
jecxz
arpl
mov
jb
ret
xor
add
pop
sbb
imul
jae
mov
xchg
sub
adc
push
cmc
fadd
jmp
das
pushf
xchg
or
xchg
cmps
mov
mov
test
pop
jns
xor
xor
or
mov
into
sub
lea
mov
adc
mov
or
sbb
push
cmp
push
jnp
fcom
outs
cs
out
shl
test
pop
lods
out
add
jb
fcomp
rcl
and
neg
jne
mov
mov
xchg
jns
mov
sbb
(bad)
call
jl
int3
js
sbb
push
or
add
mov
rol
inc
push
bound
mov
clc
repz
push
cmp
cs
stos
push
neg
scas
(bad)
test
mov
push
jl
cdq
dec
mov
jbe
lea
xor
jmp
push
(bad)
or
call
push
mov
xchg
(bad)
loop
and
add
jbe
(bad)
xor
inc
(bad)
jmp
sahf
aam
xor
(bad)
dec
xchg
sub
inc
add
jp
sar
in
mov
sbb
nop
cmp
jl
inc
push
in
jle
aad
data16
add
in
cld
outs
add
sub
push
pusha
mov
adc
retf
fstp
pop
or
push
pushf
ja
popa
iret
sub
ffreep
xchg
sub
into
pop
and
pop
sub
pop
inc
cmp
and
inc
xchg
clc
ss
nop
pop
push
mov
inc
and
ins
or
jno
bound
dec
lds
test
sbb
and
mov
mov
sbb
sbb
mov
or
xor
inc
adc
mov
dec
mov
lea
(bad)
pop
push
std
pop
inc
outs
in
add
and
mov
jmp
jae
loop
nop
lahf
scas
das
call
stos
inc
in
(bad)
push
jae
jl
mov
jne
inc
ja
ss
mov
adc
xchg
inc
inc
cmp
jo
lods
pushf
xchg
fadd
push
mov
iret
leave
add
movs
mov
mov
mov
lock
inc
lds
or
or
mov
sbb
mov
and
or
mov
and
or
shl
std
and
repz
sub
int3
sub
add
jae
cli
add
jge
or
mov
inc
jne
movs
inc
jmp
pop
dec
(bad)
fbld
mov
push
pop
movs
test
shl
mov
jo
test
movs
inc
scas
xchg
in
out
ret
stc
enter
push
pop
pop
add
dec
push
fcomp
lock
sbb
mov
jo
cmps
mov
nop
lods
lock
adc
bound
push
shl
cmp
and
pop
pop
adc
icebp
ret
loop
and
sbb
or
outs
sbb
int3
pop
cdq
xchg
cmp
xchg
xor
jo
movs
ds
(bad)
stos
sub
inc
add
fldcw
add
push
aas
inc
not
in
jne
rdtsc
imul
je
add
xor
call
(bad)
add
adc
adc
leave
lock
mov
or
inc
pop
pop
(bad)
arpl
fidivr
mov
jnp
xchg
in
(bad)
lods
mov
pop
call
rol
xlat
mov
loope
inc
adc
stos
jno
jne
dec
clc
sbb
punpcklwd
shl
in
(bad)
push
ret
push
xchg
mov
scas
out
push
pop
clc
shl
(bad)
idiv
cmps
inc
sbb
ret
jb
pop
or
in
cmps
mov
leave
int
push
aam
jl
inc
lds
rol
int3
int
fimul
mov
ss
scas
aam
leave
int
push
pop
rcr
push
repnz
adc
or
mov
pusha
sbb
add
fidivr
fcomp
sbb
jmp
add
cmp
mov
add
mov
xchg
dec
or
mov
into
dec
cmp
fbld
xchg
rol
bnd
js
test
xor
loop
dec
call
mov
imul
arpl
aaa
cdq
and
xor
loopne
test
xor
and
mov
dec
xchg
mov
mov
sbb
xchg
dec
dec
pop
test
test
clc
jne
test
test
(bad)
mov
adc
jo
(bad)
jmp
add
push
push
out
xor
sub
xchg
adc
jo
rcl
push
mov
fsub
enter
(bad)
outs
bound
aaa
fisub
cmc
sar
push
add
cld
loopne
inc
mov
dec
das
inc
das
and
mov
mov
shl
push
inc
iret
mov
aaa
jecxz
adc
jne
sub
sub
out
icebp
mov
dec
jmp
in
loope
or
stos
mov
mov
std
cwde
mov
adc
mov
fst
adc
std
sahf
jmp
pusha
cmp
mov
mov
inc
xor
dec
retf
dec
add
mov
in
in
loop
dec
std
imul
push
outs
out
leave
aad
fsub
les
mov
std
xchg
mov
test
sub
ins
jae
mov
loop
lds
outs
cwde
into
addr16
or
mov
or
cmp
push
pop
out
push
cmp
mov
in
mov
jns
dec
fwait
data16
lods
and
jl
rcl
push
push
or
test
sbb
sbb
push
icebp
xchg
sub
pop
add
pop
mov
fninit
jnp
xchg
test
mov
loopne
cmps
cwde
pop
ret
dec
cwde
inc
arpl
push
mov
std
mov
jae
mov
cld
sar
mov
repnz
movs
cmp
rcr
xchg
aam
je
inc
cmp
pop
adc
mov
sbb
popa
retf
adc
dec
imul
xor
aas
cmp
inc
adc
shl
jno
mov
sub
mov
retf
add
das
stos
or
test
inc
ror
int3
mov
or
aam
inc
lock
inc
xchg
imul
ins
pop
cs
movs
cmp
int3
loope
inc
mov
out
or
xchg
test
pop
xchg
pusha
dec
push
aaa
mov
lahf
mov
mov
dec
stos
adc
cmp
test
jmp
mov
and
sbb
sub
sub
cmp
pop
ins
mov
cmp
(bad)
test
popf
dec
jbe
adc
xlat
inc
int
movs
cmp
sub
jns
dec
rcr
push
not
ds
and
jbe
in
jge
inc
xchg
or
fistp
pushf
div
jg
popa
add
xchg
mov
bound
out
adc
dec
mov
mov
aad
fwait
and
adc
fstp
push
sbb
inc
push
dec
mov
sub
bound
fsubr
sub
sbb
xor
int3
add
jb
js
sahf
scas
jns
popa
popa
dec
adc
push
mov
sbb
mov
push
sub
adc
push
fst
jmp
aad
daa
jns
int3
ins
sub
jno
push
jg
and
push
stos
sbb
sub
and
add
jne
sbb
clc
add
in
xchg
adc
ins
jg
js
or
ins
pop
mov
movs
icebp
or
cmps
xor
mov
popf
stc
sti
push
jge
(bad)
jp
xor
fwait
inc
jne
lods
or
lock
sbb
ror
mov
out
jmp
jo
sub
pop
nop
in
inc
jbe
push
add
sub
sub
pop
inc
cs
push
je
clc
arpl
sub
xchg
(bad)
sub
pushf
mov
mov
(bad)
loope
loopne
test
(bad)
(bad)
pop
in
in
out
ret
fbld
scas
mov
cld
mov
and
cmc
inc
sar
mov
loop
test
es
and
mov
push
mov
(bad)
out
xchg
add
inc
mov
mov
push
(bad)
hlt
ret
push
cli
or
push
cmps
push
pusha
xor
jne
cmps
dec
jb
outs
mov
jmp
frstor
dec
movzx
iret
retf
aas
lahf
dec
push
xchg
push
pop
jb
or
mov
sbb
ins
aam
mov
repz
out
cwde
adc
pushf
fsubr
sbb
lock
jbe
retf
lods
jno
mov
xchg
cs
in
jmp
adc
jae
fnstcw
push
pop
jo
xor
mov
xchg
mov
push
jecxz
adc
(bad)
(bad)
mov
fldcw
imul
sahf
jns
(bad)
adc
xor
mov
mov
or
popa
dec
mov
mov
gs
test
shl
and
shr
fwait
dec
cmp
adc
js
imul
adc
push
out
jle
loopne
or
ret
jnp
jp
pop
jo
cmc
xor
mov
retf
lea
imul
jl
pop
stc
xchg
xchg
jle
xchg
call
xchg
push
cmp
pop
pop
fnstenv
out
jb
into
push
neg
ja
mov
stos
ds
jg
inc
adc
out
sub
ror
fs
fwait
xchg
into
rol
movs
(bad)
jae
jmp
push
mov
jb
mov
out
xchg
icebp
push
jecxz
jl
and
stos
outs
adc
dec
sub
cmp
jl
ror
das
sub
std
daa
icebp
nop
fidiv
lods
cmc
out
dec
sbb
mov
push
int3
push
cmp
sbb
xchg
xor
or
and
jbe
push
int3
into
mov
xor
test
pop
or
loope
and
xchg
or
jp
jle
jmp
ret
int3
pop
xor
inc
std
in
in
mov
test
icebp
cmp
mov
out
jge
mov
dec
clc
idiv
cli
sbb
ins
jp
(bad)
iret
test
jnp
or
fisubr
inc
fadd
pushf
ret
cmp
mov
nop
loope
mov
jmp
jg
aam
neg
add
sub
cs
pop
lock
dec
jae
out
ror
sub
pop
retf
inc
xor
inc
outs
pop
add
out
sbb
xlat
dec
add
(bad)
lods
xlat
jae
adc
sbb
xchg
mov
outs
je
sbb
shl
cmp
dec
xlat
(bad)
lds
popa
cmp
lea
or
in
jae
mov
in
addr16
xlat
rcr
fucom
das
pop
int
nop
cmp
and
(bad)
or
adc
(bad)
fiadd
js
ins
aad
fcmovne
std
sti
add
pop
je
jecxz
call
cmp
fild
pop
lods
lock
jo
(bad)
dec
lock
jle
jp
mov
(bad)
in
pop
sub
push
add
inc
xchg
mov
jne
nop
std
imul
mov
bound
pushw
xor
xor
je
pushf
pop
sbb
out
fst
jmp
push
fimul
lea
call
ja
ins
push
aam
(bad)
mov
mov
or
push
jl
push
jge
dec
mov
pop
imul
sti
mov
addr16
mov
outs
jg
xor
loope
loopne
aad
dec
mov
cmp
xchg
mov
mov
add
cmp
pop
and
and
jmp
xchg
ja
fst
imul
enter
sbb
cmc
pop
mov
cmps
popa
and
loope
jae
sbb
xchg
jae
sub
call
je
mov
pop
cmp
aad
mov
sti
xor
cmp
call
jmp
cmp
sahf
pop
sub
aaa
mov
cmps
lods
ins
cmp
push
add
sub
push
pop
outs
outs
push
(bad)
lock
(bad)
inc
mov
bound
sbb
pop
rcl
mov
ds
dec
ins
ds
ds
repnz
sub
push
pop
test
loopne
adc
cdq
jp
inc
push
cmp
das
mov
pop
lds
std
repz
sub
or
lahf
fldcw
dec
mov
mov
push
push
mov
mov
xchg
aad
stc
mul
jo
js
push
loopne
lds
dec
mov
and
cmp
and
adc
in
scas
repnz
stos
mov
mov
xlat
sub
mov
fisttp
or
aad
int
(bad)
jb
lods
sub
enter
xor
arpl
loop
sbb
xchg
pop
lock
aad
out
jo
sti
fdiv
ffree
(bad)
or
test
aam
jnp
outs
inc
mov
and
pushf
leave
mov
mov
ret
in
inc
mov
jne
fimul
arpl
mov
cmp
push
mov
cli
fmulp
jge
xchg
inc
jne
xchg
jp
fnstcw
sub
movs
jno
pop
mov
sub
retf
mov
jecxz
adc
pop
and
add
inc
retf
call
iret
push
jb
out
sbb
es
mov
xchg
mov
xchg
repz
mov
sti
fld
fnstcw
and
mov
inc
int
gs
mov
and
sbb
add
push
rol
pop
ja
lods
sbb
loop
mov
leave
les
fdiv
ins
call
mov
inc
iret
call
mov
dec
jbe
pop
push
xor
add
inc
outs
cdq
(bad)
jno
aam
mov
jmp
cmp
inc
lods
cmps
das
daa
out
sahf
sbb
std
cmc
rol
add
scas
mov
add
sbb
inc
mov
jp
fisub
aas
fstp
mov
test
push
adc
push
inc
out
ret
lea
sbb
popf
mov
xor
cmp
gs
sub
lods
fldenv
cmp
adc
push
mov
pop
push
mov
stos
cmp
mov
lods
pop
sbb
pushaw
cli
and
mov
cdq
movs
imul
in
stos
mov
xlat
inc
out
cdq
stos
adc
or
jns
jp
cmp
bnd
cmp
ja
jg
test
push
fld
jecxz
adc
fimul
arpl
mov
mov
outs
sti
cmp
inc
jp
mov
mov
(bad)
xchg
dec
outs
jmp
sahf
call
iret
in
ins
out
jp
rcr
test
pop
scas
dec
scas
inc
ficomp
pop
inc
sub
mov
movs
test
aaa
retf
xor
and
popf
sub
sbb
pop
nop
pop
dec
or
shl
jo
mov
pop
daa
dec
jb
stc
sub
add
lds
loope
cmp
jne
xchg
lock
adc
xchg
mov
test
aaa
mov
push
mov
dec
pop
xor
outs
pop
into
call
inc
aad
cmp
retf
das
shr
ins
push
xchg
(bad)
lahf
mov
xor
sbb
push
test
fs
mov
stos
mov
sbb
and
mov
and
and
inc
pop
ds
outs
mov
sbb
jp
xor
and
aaa
jae
sub
mov
rol
cmp
xchg
or
jbe
push
sub
inc
sbb
xor
mov
cmp
jge
mov
mov
stos
lea
and
adc
and
cmc
push
aas
call
mov
sti
xchg
dec
sub
stc
pop
jae
aam
sub
or
mov
icebp
xor
and
push
ror
lahf
(bad)
cs
mov
in
and
inc
push
push
js
push
(bad)
pop
cmps
mov
or
aaa
mov
dec
js
and
mov
popa
ret
test
dec
cld
ret
pop
mov
xchg
and
frstor
aam
dec
repnz
fst
inc
in
aaa
(bad)
paddusw
or
mov
ror
out
lods
push
sbb
imul
mov
loopne
or
cdq
mov
mov
shl
enter
test
sbb
mov
and
inc
xor
or
(bad)
mov
fmul
add
pop
and
movs
xchg
arpl
or
icebp
imul
mov
mov
stos
push
sbb
mov
push
or
int3
mov
popf
add
push
ins
ins
jbe
lds
pop
out
mov
in
mov
adc
lahf
ja
popf
fwait
mov
add
jns
scas
dec
test
sub
mov
in
or
imul
mov
(bad)
fldcw
(bad)
xchg
pop
push
stos
add
in
idiv
push
jp
inc
int
fiadd
mov
cmp
xlat
fmulp
mov
iret
dec
pop
inc
(bad)
ins
dec
adc
xchg
pop
arpl
mov
out
(bad)
pop
lock
sub
dec
mov
ja
aam
cs
cmps
ret
and
fld
(bad)
cmp
inc
cmp
jle
adc
pop
das
jne
xor
xchg
js
mov
pusha
inc
add
rol
cmp
jmp
ret
sub
rcr
(bad)
jns
rol
loope
(bad)
std
lahf
add
das
ds
fisttp
(bad)
addr16
or
loope
data16
les
and
and
adc
jmp
ror
mov
in
xor
mov
mov
scas
mov
stc
mov
call
or
xor
aaa
push
ss
mov
(bad)
cmp
test
call
test
jnp
nop
rcr
jne
jmp
std
(bad)
repnz
push
and
nop
xchg
jo
xor
pop
xor
mov
shl
mov
xor
jae
push
bound
inc
pop
dec
scas
(bad)
int3
out
xor
sub
sbb
jmp
sti
call
jne
pop
pop
je
xor
repz
pusha
mov
sub
clc
cmc
fnsave
(bad)
fwait
stc
out
test
xor
or
mov
arpl
jb
sbb
jo
inc
push
and
adc
lods
push
jp
ins
xor
jge
sub
out
fisubr
(bad)
jmp
sahf
xchg
ins
add
add
jno
(bad)
fcmovnbe
sub
dec
bound
push
add
add
xchg
and
int
pushf
sub
gs
xchg
inc
mov
mov
imul
xor
jge
or
sbb
fdivr
int3
js
cmp
retf
in
rol
add
outs
enter
call
mov
push
add
dec
test
cmp
iret
(bad)
iret
dec
in
dec
mov
or
push
fdivr
mov
push
push
cmp
pushf
push
adc
adc
int
lea
outs
add
inc
mov
jo
movs
(bad)
iret
(bad)
hlt
in
arpl
sub
cmp
push
jmp
sub
or
inc
mov
popa
add
data16
in
lds
ins
aad
xor
out
adc
fs
daa
adc
jnp
fldcw
icebp
mov
je
out
dec
addr16
ins
and
and
push
and
mov
xor
cmp
in
jno
adc
adc
sahf
test
test
sub
adc
call
stos
pop
shl
add
sub
add
xchg
mov
or
inc
push
pop
(bad)
addr16
xchg
aaa
ja
mov
add
push
out
mov
add
adc
iret
push
pop
cmp
hlt
and
push
mov
push
fsub
clc
dec
add
and
mov
mov
xor
xchg
fcomp
lock
jl
repz
outs
mov
(bad)
adc
add
ins
div
sub
lods
jnp
pop
jns
repz
and
sti
push
out
fistp
aam
jmp
fdiv
and
inc
push
iret
mov
popa
xor
stos
aam
jg
mov
mov
aam
pop
mov
lds
das
cmp
neg
xor
jmp
push
leave
movs
cmc
lods
mov
mov
pop
test
enter
mov
es
add
lods
ret
or
ja
sbb
lock
imul
adc
out
jmp
sbb
push
mov
and
idiv
in
cmps
adc
pop
sub
lahf
push
loopne
xchg
repz
icebp
das
and
and
adc
movs
mov
pop
and
and
sbb
mov
sub
retf
es
mov
mov
jmp
adc
inc
lods
shl
pop
cmp
push
mov
jle
popa
dec
outs
sbb
daa
and
retf
imul
(bad)
imul
jns
les
xor
nop
adc
mov
scas
outs
adc
out
ins
adc
adc
outs
arpl
pop
jmp
rol
sub
mov
push
cld
add
or
mul
push
pop
aam
scas
daa
bound
dec
xchg
jne
xor
ficomp
in
mov
mov
jnp
pop
jmp
in
xor
mov
dec
or
inc
push
(bad)
mov
adc
jb
xchg
out
js
pop
jecxz
jl
ins
js
inc
lock
ret
or
xor
jp
sub
mov
inc
push
xlat
sub
cli
inc
(bad)
in
adc
call
jg
jne
add
int3
xchg
out
fwait
ror
test
dec
inc
xchg
dec
pop
xor
jb
xchg
div
mov
dec
in
in
cmc
push
add
push
mov
and
jno
mov
out
test
and
xchg
mov
cmp
xor
cmps
mov
out
mov
in
gs
ins
xor
and
push
lods
xor
cld
iret
pop
mov
mov
(bad)
std
je
add
jp
rol
mov
mov
or
inc
push
pop
fmul
xchg
xor
cmp
aas
xchg
inc
ja
ficom
and
inc
dec
xchg
arpl
loopne
push
and
sub
mov
or
jns
jnp
xchg
(bad)
cmp
out
and
jne
or
xlat
mov
fstp
into
bnd
aad
fwait
push
test
mov
cwde
call
mov
ja
imul
aas
fwait
arpl
pop
cmp
pop
pop
bound
and
pop
cmp
adc
pop
dec
aad
jl
jg
icebp
sub
inc
popf
cwde
out
adc
xchg
scas
pop
cmp
cmps
ficomp
push
cmp
sti
pop
shl
je
mov
mov
adc
fmul
inc
(bad)
loop
sbb
add
lock
imul
mov
xchg
imul
jnp
sbb
and
lods
xchg
mov
add
rol
daa
fstp
mov
sub
out
xor
dec
sbb
push
aad
or
xchg
(bad)
jnp
rcl
dec
addr16
dec
(bad)
sahf
xor
repz
mov
sub
jmp
inc
inc
jo
cmps
jo
jle
retf
loopne
cdq
mov
rcl
stc
rcr
xchg
cdq
fst
data16
inc
lea
shl
pop
and
inc
int
fcom
cld
test
loope
mov
sub
out
(bad)
sbb
jge
add
call
dec
(bad)
sbb
(bad)
ss
jecxz
or
imul
ins
or
add
sbb
(bad)
out
cwde
mov
out
mov
ins
cmp
(bad)
and
inc
mov
pop
mov
jp
mov
mov
daa
leave
ds
xor
push
idiv
jl
xor
add
ss
cmp
retf
aam
aam
sub
aaa
adc
sahf
mov
pop
into
mov
mov
jne
adc
and
xor
stos
inc
inc
or
and
mov
mov
test
retf
cs
fisubr
jbe
cli
retf
loopne
int
pop
jno
dec
sysret
retf
fucomip
dec
jno
adc
push
mov
pop
add
adc
jp
sbb
dec
fdivrp
fimul
jns
inc
btc
dec
hlt
xor
and
or
cmp
out
push
bound
nop
cwde
xchg
ror
stos
out
xor
add
inc
sbb
or
adc
mov
jmp
pop
xchg
popf
shl
mov
sub
xor
xlat
add
fldcw
pusha
mov
out
inc
mov
ret
cmp
mov
lds
in
jne
pop
xchg
rcl
cmp
rol
cdq
push
addr16
lock
jle
mov
pop
push
jge
mov
sub
fcomp
inc
and
mov
mov
popa
mov
scas
les
pop
push
xlat
fcomp
dec
stos
cmp
mov
jl
fsubr
ins
sbb
ins
pop
xchg
push
xchg
into
scas
int3
push
bound
xchg
pushf
repz
mov
push
mov
jbe
leave
loop
push
push
out
mov
mov
daa
popa
mov
or
cmp
scas
jnp
(bad)
mul
mov
clc
out
(bad)
jg
rcl
dec
ja
inc
imul
loope
push
dec
mov
imul
or
in
pop
cmp
mov
es
mov
pop
stc
add
in
iret
dec
cli
mov
jmp
fldenv
dec
sub
xlat
mov
cmps
test
mov
mov
xchg
dec
ins
xor
or
or
(bad)
fsubr
jl
push
push
out
xor
push
add
cmps
popa
push
xlat
mov
or
(bad)
(bad)
es
sub
pop
cld
dec
ror
adc
and
cmps
out
inc
jge
bound
int
loop
pop
jmp
mov
jle
jnp
fmul
(bad)
adc
(bad)
inc
jnp
push
adc
les
pop
adc
pop
or
adc
(bad)
adc
xor
dec
jge
lods
inc
jp
aaa
fstp
outs
push
int
xchg
loope
or
add
lods
and
jl
call
std
ss
bswap
out
xchg
xchg
cmp
pop
pop
test
xchg
mov
clc
(bad)
rcl
xchg
ss
mov
sub
push
mov
fstp
ret
clc
mov
(bad)
or
jmp
or
loope
adc
test
lea
and
push
outs
sub
sbb
add
push
cld
test
jp
lds
mov
and
lods
xor
daa
rcl
inc
push
stc
out
mov
dec
sbb
cs
add
loope
mov
dec
es
lea
in
js
cmp
in
inc
pop
fcom
mov
and
dec
cmp
cmps
(bad)
idiv
add
loope
js
mov
adc
mov
sbb
cmp
push
not
vshufpd
sub
pop
xchg
aad
das
inc
mov
push
mov
xchg
es
stos
pop
dec
addr16
stc
adc
adc
dec
xor
fs
fnstenv
jo
cmps
inc
mov
adc
add
pop
jae
not
ins
cwde
aaa
pop
mov
push
iret
test
ins
lahf
xchg
or
dec
(bad)
daa
aaa
fbstp
fcmovnbe
push
and
jbe
and
test
aam
cwde
out
icebp
adc
mov
jmp
arpl
out
pop
lea
mov
das
jb
cmc
fs
xchg
dec
push
imul
sbb
fsubr
repnz
in
mov
sti
js
(bad)
cmp
sahf
call
sub
jae
ret
cli
adc
xor
push
add
movd
mov
stos
inc
shl
pop
ret
dec
test
push
lahf
cmps
ret
cmp
out
iret
popf
dec
fld
mov
adc
test
mov
sbb
lahf
or
sub
stos
xchg
pop
or
movs
sbb
inc
test
andps
mov
pusha
adc
ret
xor
inc
sbb
and
(bad)
jae
inc
and
call
sbb
jle
call
hlt
iret
stc
mov
fistp
xchg
test
sbb
addr16
imul
cmps
jp
xchg
mov
shr
clc
fs
push
repnz
dec
pop
and
jnp
dec
ret
mov
dec
fistp
lods
push
xchg
cdq
or
push
cmps
loop
iret
cmps
ret
fld
call
mov
adc
lea
iret
jbe
fldenv
das
bound
fs
int
fsubr
xor
sahf
jl
mov
dec
stos
xchg
cmc
mov
idiv
cmps
arpl
adc
mov
jo
nop
pop
test
pop
xor
retf
or
shl
dec
retf
dec
aad
test
enter
jo
add
fbstp
cmps
xor
das
mov
cmp
(bad)
pop
jge
sbb
arpl
data16
ds
inc
mov
adc
adc
cmp
push
sbb
dec
rcr
jns
leave
inc
jno
test
in
mov
test
dec
adc
xchg
add
ds
sub
hlt
loopne
jp
sbb
stos
jns
ins
or
fnstenv
pop
inc
xchg
and
loop
pusha
dec
sbb
xchg
sub
cmp
mov
push
ret
adc
ror
(bad)
add
jno
je
ret
movs
loope
aas
jb
rcr
add
aam
adc
mov
add
fidivr
adc
shl
fisubr
mov
out
sbb
lea
add
inc
les
mov
bound
loopne
leave
adc
dec
cmovl
sub
movs
mov
inc
or
sbb
add
popf
jbe
add
out
cmp
sub
shr
inc
and
inc
dec
adc
in
inc
(bad)
movs
cmp
inc
push
inc
add
les
xchg
inc
gs
stc
mov
ret
xor
jmp
outs
or
data16
jl
lea
pushf
jp
jg
(bad)
sti
hlt
or
xchg
mov
inc
cmc
aam
xchg
jmp
mov
lea
push
das
pusha
xchg
into
stos
fbstp
cmp
mov
cmc
mov
cmp
jmp
xchg
dec
ror
popa
loope
sbb
rcr
xchg
test
push
cmp
pop
jne
ror
pop
mov
pop
(bad)
aam
shl
push
rol
lods
movs
cs
push
xor
out
cmp
xor
cli
fdivr
iret
movs
jno
shr
shr
(bad)
(bad)
mov
inc
daa
ss
push
fmul
push
pop
mov
stos
push
aas
mov
cmp
fldcw
pop
pop
in
mov
movs
fld
test
stos
sahf
dec
sub
or
fstp
adc
stc
inc
push
in
(bad)
jmp
inc
aas
xor
adc
add
sub
test
pusha
ins
add
lea
scas
adc
mov
mov
pop
mov
dec
and
imul
push
jl
outs
pop
cmps
push
jl
clc
mov
cmp
pop
xchg
and
jae
pop
jecxz
ret
add
cdq
sbb
shl
push
jecxz
pop
es
mov
mov
cdq
lea
shl
shr
xor
fsub
sub
iret
jno
sub
and
and
and
pop
fs
mov
and
mov
setbe
(bad)
adc
retf
or
cmp
xchg
mov
push
and
pop
push
gs
lods
jnp
ins
sub
push
jp
push
sbb
adc
mov
stos
arpl
mov
sahf
push
repz
xchg
ins
call
scas
fwait
scas
pop
clc
pop
test
xchg
dec
and
(bad)
hlt
mov
mov
fdivr
clc
xchg
ret
mov
push
addr16
std
pxor
jne
fild
jecxz
jo
or
call
fsubr
js
iret
std
loope
imul
xchg
adc
xchg
or
nop
xchg
cmps
test
mov
out
mov
sub
pop
push
xor
cdq
dec
mov
inc
daa
adc
and
lods
mov
jp
xchg
pop
jb
sbb
push
inc
int3
mov
dec
mov
xchg
jecxz
in
sub
xchg
sbb
jae
add
mov
test
sub
movs
in
repz
jg
sbb
rcl
outs
mov
jg
ds
movs
icebp
adc
jp
jnp
add
adc
cld
xor
fadd
les
imul
and
out
mov
jmp
aaa
shl
add
out
test
xchg
iret
xchg
mov
fsubr
xchg
cmc
push
(bad)
cs
inc
sbb
ds
cmp
sti
mov
retf
sbb
xchg
xor
into
mov
adc
mov
pop
adc
adc
adc
sub
loope
in
test
jge
ret
cmp
mov
mov
push
cdq
cmp
dec
push
mov
push
jl
mov
mov
gs
cli
aaa
and
dec
jmp
add
mov
aas
mov
lea
movs
cmp
adc
call
xor
cmp
mov
call
ss
fdivr
mov
mov
mov
aam
out
mov
clc
imul
sub
das
(bad)
xor
add
adc
adc
inc
xchg
ret
out
jle
stc
mov
loop
imul
data16
mov
(bad)
rcl
add
fwait
inc
psubusb
xor
imul
xor
popf
mov
inc
daa
fcom
(bad)
jmp
pop
fnstsw
movs
mov
js
jmp
into
shl
mov
das
dec
sbb
pushf
pop
or
mov
mov
sar
jno
jmp
xor
fldenv
dec
lock
pop
mov
es
push
xchg
fisub
ja
bound
xor
jge
or
fmul
inc
jns
out
bound
clc
fucompp
jb
cmps
jmp
push
add
pop
jg
inc
call
aam
xchg
jno
adc
sub
fimul
test
mov
or
dec
in
dec
(bad)
cdq
nop
jmp
pop
in
fdiv
sub
mov
rol
dec
add
adc
popa
test
(bad)
ficom
in
sbb
add
ror
sbb
dec
movs
test
xchg
shl
fcomp
js
push
cli
xor
cmps
mov
xchg
push
fwait
out
inc
in
(bad)
jb
in
enter
ja
shl
fsubr
movs
outs
jecxz
arpl
out
(bad)
sar
adc
cmp
fst
dec
mov
lea
sub
shl
mov
pop
xor
outs
or
outs
jns
push
push
hlt
pushf
sbb
or
mov
sub
bound
fs
push
push
rcr
rol
xchg
push
mov
xchg
cmp
add
pop
pushf
mov
or
xchg
movs
es
sbb
imul
push
shl
cmp
in
out
xchg
cmc
xor
pop
sbb
stc
or
enter
aam
test
icebp
out
clc
int
dec
or
and
add
xor
inc
jo
int3
jp
ret
and
not
mov
fisttp
arpl
cld
iret
(bad)
lock
(bad)
fist
jle
(bad)
call
iret
mov
push
xor
sub
jae
sub
repnz
push
pop
and
mov
aam
inc
daa
pushf
cwde
push
mov
ins
push
mov
sub
mov
mov
gs
dec
ins
daa
xor
push
xchg
dec
ja
leave
call
imul
adc
es
xchg
out
call
mov
std
cld
inc
out
cmps
and
aas
outs
jmp
add
hlt
sbb
imul
mov
inc
movs
mov
loopne
out
les
idiv
mov
pop
and
fsub
cdq
fcomp
push
fs
gs
rol
cmp
ficom
out
xor
pop
rcr
xchg
jnp
aam
(bad)
jo
out
test
jae
xchg
inc
push
jp
xchg
adc
xchg
or
pop
jp
xor
cdq
rcr
pop
sahf
ins
(bad)
push
and
retf
push
les
and
retf
jmp
aaa
mov
call
ret
xor
mov
mov
inc
test
xchg
(bad)
mov
imul
ss
xlat
push
or
inc
push
ds
loopne
mov
push
arpl
iret
mov
inc
inc
shr
pop
aad
std
test
je
adc
rcl
mov
hlt
mov
pop
sti
cmp
push
mov
aas
stos
popaw
mov
sub
jp
jge
xchg
pop
inc
xchg
imul
inc
out
ffree
xor
loopne
sbb
fs
dec
cli
iret
clc
into
ins
pop
fld
cmp
mov
int3
inc
mov
mov
das
aaa
repnz
push
icebp
pop
shr
push
mov
js
mov
dec
push
push
sbb
mov
cs
mov
push
clc
in
and
dec
fs
jnp
enter
test
xchg
or
loopne
pusha
jmp
adc
stc
fwait
or
sbb
pop
push
cld
retf
pop
inc
addr16
iret
pop
rcl
mov
mov
bound
sub
retf
jbe
and
and
pop
retf
dec
sub
xlat
and
pop
mov
cmp
xor
jecxz
adc
or
outs
daa
mov
pop
fdivr
mov
inc
pop
into
adc
mov
out
les
sbb
pop
inc
(bad)
pop
or
or
shl
sub
adc
mov
push
jmp
data16
cdq
xchg
sub
mov
stc
sub
fiadd
leave
sbb
out
test
sub
fst
cli
jne
lods
(bad)
not
shr
add
jp
pop
fsubr
imul
loope
jae
leave
test
jp
(bad)
ja
(bad)
dec
adc
and
call
mov
arpl
push
(bad)
call
cli
into
repnz
mov
xlat
mov
aaa
xlat
push
js
aad
icebp
push
jl
mov
mov
mov
repnz
ja
xlat
(bad)
repnz
repz
into
mov
adc
mov
cli
lods
mov
pusha
and
sub
lea
mov
std
fcmovnbe
cmp
mov
cmps
out
mov
adc
jmp
mov
sahf
stc
and
inc
in
call
repz
fistp
nop
mov
ret
aam
cmp
xor
stos
mov
scas
or
cwde
test
rol
xor
adc
ins
fst
jl
ins
loopne
push
cmp
cmps
test
arpl
jb
push
cmp
xchg
jns
sub
xchg
es
ja
mov
xor
jp
xchg
stos
sbb
movs
push
stc
dec
aas
mov
cmp
xchg
call
inc
and
push
out
mov
xchg
xor
add
jp
(bad)
push
jo
mov
jbe
and
and
mov
fsubr
adc
imul
call
pop
rcr
out
xchg
cmp
aam
aad
sar
and
jmp
mov
jnp
xchg
out
retf
out
jecxz
cmp
in
pop
stc
sbb
hlt
mov
push
jmp
pop
push
push
push
aam
pop
test
push
adc
adc
pushf
mov
or
in
pop
cwde
jb
std
cmps
adc
mov
scas
push
push
xchg
pop
dec
push
sbb
mov
and
or
xor
js
fs
dec
or
stos
ins
xor
loopne
mov
dec
pop
popf
adc
jecxz
or
mov
fiadd
out
sub
pop
leave
mul
psubb
add
xchg
and
enter
xchg
jp
fnsave
outs
outs
pop
add
cmp
loope
bound
nop
mov
scas
xchg
mov
and
test
adc
mov
mov
dec
cmps
shl
in
inc
aam
cmps
pop
xor
das
mov
retf
cwde
out
mov
adc
clc
push
test
fidiv
retf
lea
out
mov
push
push
jp
xchg
repz
cmps
mov
ja
xchg
repnz
loop
sub
or
or
fwait
push
out
jl
mov
adc
fdiv
pxor
sub
loop
sub
lea
lds
dec
ja
out
icebp
fisubr
rol
fld
(bad)
sub
and
dec
xor
fnstenv
mov
cmp
loopne
fstp
jmp
push
pop
mov
movs
sub
popf
sar
out
int3
f2xm1
jo
ret
loope
aad
in
push
push
jmp
xchg
frstor
les
lock
adc
sbb
test
stc
push
(bad)
xor
arpl
test
les
or
stos
xchg
mov
icebp
cmp
xchg
and
(bad)
sbb
fidiv
(bad)
or
xchg
or
in
lock
int3
sahf
rcr
add
xor
push
xchg
jp
shl
xchg
popf
daa
sub
int3
xor
xchg
adc
pop
jns
enter
cwde
push
or
pusha
(bad)
adc
and
test
cmps
mov
hlt
push
xchg
inc
mov
lahf
and
or
aas
outs
adc
mov
aam
ins
dec
stos
int
out
mov
retf
retf
test
lahf
xchg
(bad)
sbb
repnz
shl
inc
mov
inc
xchg
jno
daa
movs
arpl
movs
adc
or
pop
pop
mov
inc
xor
jg
inc
hlt
cmp
int3
je
push
mov
stos
cmp
movs
(bad)
call
addr16
(bad)
xor
mov
pop
mov
bsf
daa
cmps
xor
sbb
pop
xchg
mov
fsub
jmp
fld
add
pop
out
fisttp
jp
nop
pop
and
push
lock
pop
sub
or
out
pop
call
jbe
jge
pop
ror
pop
test
test
stos
or
in
adc
lods
aas
hlt
add
push
(bad)
adc
xor
lea
pushf
(bad)
out
aad
test
les
or
cmp
fidiv
pop
inc
jne
repz
cmp
and
jbe
data16
sub
sub
cwde
lea
enter
jae
test
pop
and
jmp
push
cmp
jmp
xchg
mov
jmp
jo
mov
pop
scas
bound
imul
pop
ins
pop
fimul
sahf
scas
xchg
pop
aas
out
aad
adc
jg
cmps
(bad)
xchg
shl
pop
pop
jg
pusha
shl
je
push
inc
jae
mov
adc
popa
cld
cld
je
mov
or
dec
push
and
sti
push
and
jmp
add
shr
push
cmova
pop
jl
ds
retf
or
dec
lods
sbb
iret
sub
jmp
ins
push
movs
arpl
push
fcom
jmp
stos
xchg
cmc
lods
xor
xor
fucomp
(bad)
out
aam
mov
mov
pop
shr
pop
sub
pop
lahf
stos
fcomp
xchg
dec
xlat
or
push
adc
pop
cmp
sbb
xor
cld
sbb
dec
inc
daa
(bad)
ins
js
adc
push
or
push
push
or
push
inc
outs
xor
stos
into
sub
pop
adc
loop
inc
clc
push
ficomp
(bad)
mov
pop
in
cmp
(bad)
pop
push
in
hlt
dec
xor
add
or
pop
mov
sbb
xor
fst
(bad)
push
jb
mov
dec
cmp
rcr
lahf
es
in
aam
sub
iret
pop
sub
(bad)
and
js
pop
test
js
out
(bad)
jnp
xchg
sahf
jge
es
repz
les
iret
mov
idiv
inc
loop
mov
jae
mov
mov
pop
add
out
pop
test
sbb
jbe
(bad)
mov
in
cwde
mov
(bad)
imul
mov
dec
(bad)
not
gs
push
xchg
xchg
imul
or
mov
mov
dec
mul
mov
movs
dec
jae
jp
mov
rol
cdq
cmp
nop
mov
loop
or
cmp
mov
fadd
xor
mov
adc
adc
mov
mov
(bad)
and
inc
cmp
push
fild
enter
add
push
rcl
mov
mov
jg
(bad)
xchg
loope
sbb
jle
pop
mov
fdivr
jo
(bad)
sbb
mov
mov
mov
mov
lods
mov
cmp
jmp
jg
je
xor
pop
push
out
pusha
fucomp
test
mov
daa
sub
in
and
inc
cmps
pop
xor
jnp
pop
pusha
dec
adc
jns
and
push
sbb
dec
bound
dec
xchg
test
mov
and
jmp
outs
add
inc
das
inc
push
sub
jmp
adc
test
sbb
jmp
xchg
fist
or
scas
out
jbe
dec
stos
int
xchg
add
in
and
add
jns
xor
pop
xlat
xor
push
jp
fs
inc
add
xlat
or
push
and
jno
pop
dec
xchg
inc
cli
mov
adc
jne
jbe
xchg
and
scas
leave
inc
shl
adc
xor
jle
jne
jle
xor
cmp
add
lods
push
(bad)
das
mov
(bad)
jmp
xor
sar
and
jb
dec
scas
aad
or
aaa
sahf
std
dec
pop
add
sub
cmps
ret
out
xchg
sbb
sar
sbb
in
(bad)
adc
add
mov
or
lahf
fcom
mov
mov
mov
(bad)
fld
mov
les
into
xor
cmps
or
out
les
sub
imul
pop
dec
les
popa
adc
sub
mov
cli
jmp
sbb
xor
xor
mov
stos
fs
inc
jg
mov
bound
in
jnp
inc
rcl
dec
cdq
add
js
jno
(bad)
adc
add
loop
sti
cmps
sbb
in
sub
or
mov
ins
inc
mov
mov
jns
pop
frstor
ror
rcl
mov
(bad)
neg
mov
mov
inc
pop
jge
xor
stos
xchg
imul
mov
add
jae
sub
and
mov
and
inc
push
jne
les
mov
mov
dec
test
or
fstp
test
in
xchg
or
(bad)
cdq
repz
pop
pop
outs
cmps
call
inc
lds
dec
je
mov
jmp
jge
push
xchg
ror
fisttp
push
sahf
hlt
out
adc
cmp
ret
cmp
stc
fnsave
dec
lds
sub
jp
ret
add
inc
xchg
sbb
dec
jae
dec
loope
and
aad
mov
scas
push
outs
jmp
pop
dec
add
mov
mov
xor
shl
mov
call
cld
in
jp
xor
je
sbb
dec
xchg
daa
sbb
fstp
loopne
inc
sbb
in
mov
call
and
out
out
sahf
inc
adc
(bad)
mov
add
and
cmp
lahf
xlat
sub
pushf
mov
addr16
push
loope
mov
(bad)
mov
or
mov
jle
call
inc
mov
retf
loop
adc
inc
mov
arpl
and
in
inc
xchg
cmps
and
xor
test
pushf
pop
push
fimul
pop
popa
and
add
push
dec
mov
movs
enter
retf
sub
mov
and
pop
jae
fs
mov
pop
mov
movsx
and
das
adc
inc
test
cdq
mov
arpl
or
sar
or
sub
cld
ds
retf
pop
inc
mov
sub
ins
imul
sahf
mov
jp
test
adc
sub
(bad)
ins
dec
fnsave
ins
loope
jge
mov
mov
push
add
fst
push
add
or
lods
cmp
push
sub
and
std
inc
int
ret
mov
and
loope
dec
test
mov
jnp
mov
mov
enter
clc
mov
inc
scas
xchg
int
ds
pushf
pop
cmp
inc
mov
test
fiadd
dec
int3
mov
(bad)
inc
lods
call
mul
jne
or
and
jnp
mov
dec
push
or
pop
mov
xchg
xor
jo
test
jecxz
fwait
nop
fsub
push
or
shl
mov
fiadd
xor
xchg
loope
test
in
es
shl
arpl
data16
repz
ds
bound
cdq
mov
xlat
pop
outs
mov
mov
sub
jae
cdq
add
xchg
xor
out
fadd
test
xchg
rcr
pop
fdivr
push
mov
cmp
retf
jo
data16
push
clc
or
(bad)
adc
outs
sbb
retf
les
(bad)
xor
cmp
or
lods
mov
inc
cmp
loope
hlt
es
push
mov
inc
dec
dec
hlt
xchg
fwait
jns
shl
dec
cdq
xor
adc
aas
sub
xchg
push
sub
aam
int
or
jbe
out
fsubr
adc
retf
call
inc
mov
pop
pop
fnstenv
shr
sbb
lods
cmp
sti
hlt
ja
scas
pop
jmp
inc
push
add
sub
stos
es
add
btr
outs
idiv
jecxz
scas
loope
out
stos
mov
daa
mov
mov
pop
rol
mov
pop
mov
push
push
cmp
ror
(bad)
dec
add
fstp
jne
ret
test
in
sub
jbe
mov
(bad)
dec
int3
dec
out
repnz
xor
sbb
xor
mov
sub
cmps
ret
cs
pushf
cmp
mov
pop
lahf
dec
push
add
or
xor
fidiv
sti
ss
push
push
jb
(bad)
jne
push
je
add
mov
sub
mov
pop
out
jg
dec
fadd
cmp
cmp
rol
repz
mov
stc
daa
or
jmp
jno
nop
outs
adc
ds
or
mov
mov
mov
test
retf
div
into
cmp
mov
ss
imul
sub
(bad)
loopne
cmc
push
adc
leave
out
adc
js
inc
test
aam
mov
(bad)
call
dec
lea
add
lds
fdivr
push
call
dec
add
call
dec
cmps
dec
pop
ss
dec
retf
pop
cwde
jmp
ins
in
ins
pop
sbb
ins
ret
fisttp
mov
pusha
push
cdq
pop
xor
cwde
pop
cmp
xor
(bad)
mov
sti
ss
(bad)
adc
mov
jmp
das
push
(bad)
sub
mov
mov
ror
movs
loop
xor
stos
daa
into
add
sbb
je
jns
cld
pushf
push
fstp
mov
xor
movs
nop
cs
call
push
aaa
jl
or
add
rcr
sti
xchg
add
arpl
fld
stc
cli
mov
sbb
xchg
(bad)
aaa
or
mov
pop
pop
arpl
adc
sub
je
sbb
std
dec
xchg
sbb
and
daa
(bad)
test
xor
popf
mov
dec
xchg
aaa
jae
and
xor
jne
cs
mov
add
pop
pushf
mov
loope
repz
cmp
mov
adc
ins
pop
jne
add
sub
inc
test
psubusb
sbb
dec
sub
rcl
push
xchg
add
adc
call
push
mov
gs
pop
pop
inc
sub
add
mov
fsubr
ins
leave
leave
jmp
inc
nop
fwait
cmp
jb
and
shr
dec
xlat
test
and
(bad)
in
push
mov
xor
mov
pop
imul
sbb
push
cmps
dec
(bad)
lock
jmp
(bad)
mov
cmc
and
jb
jb
(bad)
(bad)
ret
daa
test
mov
xchg
sbb
jl
loop
push
out
xor
shl
mov
dec
out
sbb
ins
ret
xchg
and
enter
fwait
cmp
leave
add
cmps
xchg
nop
mov
frstor
or
movs
push
inc
mov
pushf
mov
(bad)
pushf
pushf
cmp
cmp
jmp
add
iret
dec
or
scas
pop
xor
and
lods
pop
xor
sub
push
pop
mov
not
cmps
div
or
arpl
pop
sbb
sub
pop
inc
mov
sbb
test
dec
fnstsw
test
(bad)
stos
mov
mov
xchg
daa
outs
ficomp
jne
lahf
push
ror
repz
std
sub
adc
(bad)
cli
imul
pop
inc
test
rcl
loop
add
daa
cmp
inc
cmp
dec
movs
xchg
pop
cwde
jecxz
rcr
cld
xor
int
inc
and
in
cld
inc
(bad)
and
repz
jp
cmc
adc
mov
xor
movs
cld
adc
outs
add
jle
xchg
lock
fucomip
cmp
mov
xchg
push
mov
jnp
cdq
cwde
test
sar
clc
mov
mov
lea
cld
sbb
push
test
mov
retf
mov
xchg
jmp
js
loopne
fiadd
daa
xchg
out
sbb
ret
pop
lea
fdivr
cld
cmps
push
sub
ja
call
inc
cmp
loop
bound
push
clc
adc
cmps
or
call
push
pop
(bad)
fadd
hlt
inc
mul
stc
cld
ror
bound
es
or
xchg
and
loop
push
add
xor
lods
outs
inc
fadd
stos
lea
dec
mov
stos
je
call
xchg
mov
mov
in
daa
add
jmp
addr16
ja
inc
in
daa
mov
mov
jmp
dec
xchg
arpl
cs
jmp
push
sahf
pop
xor
lahf
jg
fbstp
cs
mov
in
ins
cmp
fwait
push
xchg
lods
cmps
mov
outs
stos
rcr
mov
jle
push
add
nop
popa
cmps
push
jo
cli
ins
mov
popf
scas
jne
iret
sub
outs
pop
sub
pop
daa
push
jo
dec
fcomp
and
xor
call
arpl
and
movs
add
into
jecxz
cmps
jmp
dec
inc
cmps
movs
outs
outs
xchg
mov
mov
xor
pop
push
mov
loop
xchg
xchg
js
xchg
dec
loop
hlt
inc
sbb
sub
fldl2t
mov
lahf
retf
ret
adc
sub
es
(bad)
mov
jmp
mov
shl
dec
pusha
add
in
pop
stc
pop
in
mov
dec
sti
cmp
or
xchg
mov
loop
scas
out
in
lds
push
icebp
orps
add
outs
(bad)
(bad)
shl
loope
mov
pop
pop
fistp
adc
push
jmp
mov
sub
scas
fwait
adc
push
cmc
cdq
inc
jecxz
xchg
lock
aas
ds
aad
iret
push
es
int3
cmps
xchg
add
movzx
and
out
fwait
inc
lahf
dec
mov
ins
(bad)
and
add
push
int3
aam
xor
xor
xor
(bad)
cmp
or
mov
nop
mov
fstp
sbb
clc
inc
rcl
add
outs
xchg
sbb
jmp
aam
(bad)
mov
std
sub
ret
sub
and
test
jp
lods
jbe
mov
icebp
aad
inc
rol
jmp
cdq
xchg
retf
dec
ins
sub
push
out
mov
pop
adc
(bad)
retf
mov
add
xor
inc
leave
pop
xlat
mov
jne
cdq
push
mov
daa
int
cmp
div
inc
sbb
sbb
adc
cmp
test
mov
test
imul
cwde
push
test
push
sbb
add
jge
fiadd
int3
jb
stos
enter
(bad)
dec
sbb
pop
pop
xchg
or
lods
and
cmp
jne
inc
retf
mov
fsubr
jno
rcr
adc
fs
mov
jnp
es
and
fadd
pop
stos
shr
sahf
and
sti
add
xchg
movs
test
xlat
in
push
aam
jmp
cmc
outs
jecxz
mov
mov
addr16
stos
jbe
nop
or
inc
shr
scas
push
out
and
sbb
cwde
ror
out
mov
scas
jo
mov
jbe
(bad)
shl
sbb
ret
push
push
mov
mov
scas
mov
ffreep
sbb
das
loop
test
or
mov
in
shld
das
cld
movs
or
sub
data16
in
jle
adc
pop
and
mov
cmp
and
cmps
int
jnp
(bad)
mov
jne
bound
mov
fist
enter
add
dec
push
adc
fstp
push
fwait
(bad)
lock
(bad)
sbb
adc
shr
mov
sub
push
cmp
cmp
sub
push
mov
adc
js
enter
cli
fcmovu
xor
pop
hlt
cwde
dec
out
test
mov
cmp
jecxz
cmp
cmp
mov
jnp
shl
jl
mov
jecxz
lea
ins
std
and
xor
sbb
mov
dec
fs
and
jl
adc
imul
(bad)
push
lods
push
repnz
fcomp
fdivr
scas
mov
sub
out
sub
push
jmp
int3
mov
cmp
stc
rol
cmp
ret
add
cld
aad
es
sti
test
and
inc
cmp
in
add
into
jecxz
pop
fdiv
inc
add
das
lahf
or
fs
pop
test
or
pop
jno
dec
movs
pop
inc
sub
call
setle
les
add
and
mov
test
ss
cwde
push
retf
mov
pop
daa
dec
(bad)
mov
push
arpl
cmc
sub
ss
sar
cld
repnz
xor
ds
ins
sub
mov
xchg
(bad)
xchg
jl
sbb
and
xchg
xchg
mov
(bad)
fistp
sub
outs
sbb
adc
jge
daa
int
test
rol
sbb
std
jo
nop
hlt
clc
and
xchg
ja
inc
mov
mov
push
ja
sbb
mov
out
jb
xlat
data16
lods
inc
sub
repnz
mov
retf
or
xchg
(bad)
pop
clc
mov
sar
mov
cmp
adc
adc
push
dec
inc
cmp
or
(bad)
sbb
icebp
jbe
cmp
cmp
rcl
mov
jmp
stos
pop
lds
xchg
mov
adc
or
sub
cli
outs
fsubr
mov
dec
xchg
jmp
pushf
repz
pop
or
es
mov
stos
xchg
in
inc
and
loopne
xor
add
sbb
and
cmp
and
imul
mov
bound
jp
aaa
enter
and
cmps
imul
jmp
nop
dec
sub
ss
ret
fcmovu
jecxz
js
fistp
pop
(bad)
lods
jns
popf
pushf
bound
xor
mov
outs
or
call
jns
scas
dec
ficom
outs
cmps
hlt
sub
imul
retf
dec
and
je
scas
in
jnp
das
shr
pop
loop
or
xor
and
shl
mov
pop
outs
cs
sar
lods
jecxz
mov
push
lahf
sub
loop
rcl
frstor
cmps
xchg
dec
xor
sub
icebp
pop
dec
push
sub
fnsave
leave
or
in
mov
lock
fadd
mov
add
sbb
iret
test
sub
and
xchg
movs
popf
xchg
pop
lahf
xchg
add
xchg
shl
mov
jl
in
pop
popa
mov
cmps
ja
jne
sub
dec
fs
push
icebp
jb
daa
add
push
retf
pop
inc
jae
ins
iret
sbb
cs
rcl
cmp
add
sub
xor
pop
dec
test
mov
daa
pusha
pop
pop
sbb
daa
jnp
scas
push
call
call
loop
xor
jo
idiv
push
push
inc
dec
leave
(bad)
loope
jmp
push
cli
inc
sub
dec
(bad)
fst
popa
xor
sub
mov
cmc
or
ret
sub
mov
arpl
cmp
xchg
clc
aaa
cld
aam
cld
je
mov
xor
mov
jmp
or
ds
cmp
push
aad
gs
sbb
pop
clc
or
xor
pop
mov
in
mov
paddd
cmp
xor
data16
lds
leave
or
xor
xor
not
cmp
out
mov
mov
xor
push
sbb
cmp
ss
pusha
push
inc
cwde
xchg
or
pop
mov
(bad)
imul
cmp
xchg
add
adc
(bad)
and
xor
int
jp
ret
mov
call
iret
push
ret
iret
adc
ds
sahf
outs
out
ficomp
dec
lds
adc
out
jl
adc
jmp
mov
pop
rcr
repnz
cmp
mov
mov
mov
cdq
xchg
dec
dec
test
or
mov
pop
jo
and
inc
gs
jecxz
or
and
cmp
dec
in
jmp
lock
into
(bad)
fidiv
add
xlat
dec
icebp
je
fst
enter
mov
dec
(bad)
scas
add
mov
add
stos
add
jmp
add
and
scas
sbb
cmp
mov
fld
jmp
ret
outs
pop
jnp
shr
imul
retf
cs
xlat
xchg
cdq
enter
test
call
xlat
ins
push
xor
retf
jl
stos
adc
push
ins
sar
std
pop
mov
or
push
sub
xchg
out
sar
in
test
jb
cmps
ins
and
mov
mov
pop
pop
fidiv
test
mov
xor
(bad)
xchg
mov
sbb
push
rcr
mov
lods
or
xchg
pop
mov
test
loope
loope
(bad)
lock
out
out
jb
dec
retf
add
mov
mov
add
out
sub
(bad)
mov
ud1
out
mov
pop
mov
xchg
mov
mov
call
outs
or
mov
push
cmps
pop
or
pop
adc
ja
clc
das
xor
mov
adc
popa
xchg
daa
lock
push
mov
dec
dec
idiv
hlt
jmp
ficomp
lods
fwait
push
(bad)
and
and
ins
add
fmul
test
jbe
xor
mov
sbb
repz
icebp
mov
inc
xchg
jne
jmp
mov
les
mov
scas
mov
pop
repnz
clc
ss
pop
push
pusha
fwait
mov
mov
mov
sar
push
push
mov
dec
pop
shr
sbb
mov
mov
lock
scas
test
xchg
xor
not
xor
mov
ror
jmp
xchg
inc
popf
movs
cs
imul
scas
movs
cwde
in
in
mov
scas
jg
into
cmp
sbb
or
jae
jecxz
es
xchg
jmp
push
in
dec
es
mov
mov
les
jl
inc
fmul
mul
lds
sti
adc
or
dec
mov
pop
and
and
xchg
jp
sti
xchg
push
pusha
inc
fidiv
icebp
dec
icebp
push
(bad)
or
pop
jg
adc
or
push
add
inc
sbb
hlt
inc
or
cmc
add
and
(bad)
fist
and
mov
and
fadd
arpl
sbb
imul
lea
aaa
jno
lds
out
add
add
cwde
stos
adc
pop
scas
or
fldenv
call
or
hlt
outs
adc
push
mov
stos
shl
and
add
cmp
push
cmp
shl
test
fsub
mov
std
cmp
mov
neg
and
lods
test
dec
mov
and
lahf
daa
mov
pop
inc
sub
pop
xchg
rol
(bad)
jne
(bad)
int
dec
bound
pop
fwait
and
adc
daa
imul
xlat
xchg
aam
jae
mov
push
outs
ret
ret
cs
fwait
push
jne
inc
sar
pop
xchg
push
mov
fild
adc
jbe
sbb
in
dec
jg
cmp
pop
sbb
mov
div
es
add
arpl
into
xor
inc
cmc
xchg
dec
push
(bad)
std
and
xlat
test
test
xchg
push
ret
push
push
push
sbb
rcr
jp
test
mov
stos
movs
cmp
dec
repnz
das
mov
jle
jmp
mov
or
dec
mov
adc
adc
(bad)
cmp
jb
cld
cmp
or
push
mov
fwait
lock
aas
mov
std
inc
sub
fisub
mov
ret
mov
cmp
(bad)
stos
mov
(bad)
and
aam
fcomp
cmp
jmp
addr16
pop
popf
sub
adc
loopne
jp
mov
(bad)
fisttp
fadd
and
add
daa
sub
jo
bound
out
stc
cmps
mov
retf
out
popa
xor
scas
cwde
push
loope
inc
pop
adc
addr16
sub
mov
push
xlat
push
(bad)
sbb
js
mov
scas
sub
and
(bad)
mul
rol
enter
dec
and
fcmovnbe
fdiv
gs
dec
out
scas
mov
add
xchg
xchg
test
repnz
dec
inc
jge
lods
jge
jmp
ficomp
inc
xchg
scas
mov
inc
and
mov
push
mov
push
xchg
push
movs
test
fs
dec
cmps
mov
xor
pop
mov
pushf
sbb
or
inc
ret
std
cs
(bad)
aam
aas
dec
fadd
das
jbe
popa
push
(bad)
jo
test
pusha
icebp
inc
ss
fist
imul
std
mov
lahf
mov
loop
cmp
and
mov
rcr
loope
xchg
dec
lods
dec
and
and
jns
fnstenv
mov
mov
xchg
frstpm(287
jnp
xchg
mov
lea
adc
es
xchg
jno
cmp
cwde
leave
dec
or
push
xchg
push
je
add
mov
sub
xor
(bad)
dec
push
mov
push
mov
imul
mov
and
add
leave
sbb
out
and
fcom
xchg
jae
and
dec
push
clc
jb
shl
sbb
cmp
mov
add
mov
ror
sar
int
mov
mov
ins
mov
inc
xor
sub
popf
cmp
in
mov
popf
imul
mov
mov
(bad)
sahf
dec
je
push
xor
pop
mov
push
imul
gs
mov
loopne
or
test
mov
in
(bad)
cdq
retf
dec
jne
call
ss
mov
(bad)
mov
xor
test
ds
test
in
fld
outs
loop
mov
or
(bad)
fild
push
lods
adc
outs
pop
dec
hlt
pop
mov
cmp
(bad)
addr16
adc
cmp
(bad)
out
test
mov
loop
adc
pop
mov
push
push
add
sub
add
cmp
out
loopne
in
xchg
push
adc
(bad)
xchg
or
jne
push
xchg
test
pusha
jecxz
adc
addr16
pop
mov
push
mov
shl
fidiv
push
movs
sbb
mov
int
inc
test
mov
imul
lahf
hlt
mov
inc
xchg
iret
jno
cmp
fwait
mov
mov
dec
das
and
inc
and
add
ja
inc
stos
push
cld
and
push
pop
pushf
dec
ins
fs
iret
pop
int3
iret
add
loope
pop
push
mov
xchg
adc
add
sub
fsub
scas
fidiv
outs
jecxz
test
pop
adc
sahf
gs
cs
lahf
(bad)
mov
leave
add
adc
shr
nop
aas
push
bound
mov
mov
pop
hlt
pop
gs
mov
pushf
lds
fsubrp
imul
dec
cs
popf
ret
inc
pop
les
jne
xlat
das
stc
scas
loop
cld
add
mov
repz
leave
dec
cmp
push
cmc
ret
retf
das
iret
shr
xchg
adc
jge
(bad)
mov
pop
ret
push
and
in
mov
cmc
sahf
pop
scas
lods
paddb
sbb
imul
sbb
fsubr
icebp
shl
inc
(bad)
mov
cmp
xchg
mov
test
mov
loope
popf
repz
mov
movs
loopne
inc
pop
mov
gs
dec
pcmpgtb
inc
push
xor
aas
fwait
or
or
arpl
daa
add
ins
cli
fs
sbb
inc
jmp
test
dec
test
aad
jge
pushf
iret
rcr
mov
inc
mov
push
test
js
push
das
pop
push
jbe
mov
fnsave
xor
jg
lds
aam
in
dec
pop
jecxz
sbb
aad
aaa
aaa
das
clc
push
dec
sti
pop
ds
push
sbb
jl
push
or
nop
jg
(bad)
sub
mov
add
rcr
arpl
(bad)
fstp
dec
mov
dec
mov
add
scas
inc
dec
add
fdivp
xchg
cmp
loopne
test
mov
xchg
adc
jae
mov
pop
xchg
pushf
pop
cmp
(bad)
std
inc
xchg
or
sbb
test
stos
sbb
lea
sub
repnz
sbb
les
cli
je
fmul
inc
mov
pop
mov
jmp
cli
pop
imul
dec
movs
adc
jbe
(bad)
pop
jae
fild
(bad)
out
mov
mov
and
cli
inc
dec
mov
pop
mov
push
dec
jb
shr
sbb
test
push
mov
div
daa
in
(bad)
hlt
sar
pop
ins
jp
movs
cmp
shl
sahf
lahf
sbb
in
jp
cmp
in
rcl
test
outs
inc
dec
inc
push
or
in
es
adc
cmp
sti
mov
cwde
mov
in
jno
mov
shl
xor
jns
xchg
fnop
int
inc
aas
in
iret
sub
pop
sbb
cld
ins
out
(bad)
fdiv
clc
sbb
xor
cli
xchg
ds
ins
jg
les
xchg
add
jl
jmp
xchg
xchg
in
out
or
out
inc
mov
inc
lods
clc
mov
jp
enter
je
pop
cwde
scas
test
xchg
in
mov
dec
cmps
fimul
arpl
and
loopne
push
popf
js
stos
stc
fsubr
xor
in
jbe
into
int3
pop
mov
lock
jbe
loope
daa
mov
mov
push
jno
adc
jmp
xchg
sub
sub
shr
pop
sub
pop
sbb
sbb
xchg
pop
das
push
int3
jge
pop
pop
lods
lock
test
push
scas
fnsave
xor
cmp
daa
inc
daa
loope
enter
test
arpl
enter
xchg
mov
pop
fadd
inc
lods
sbb
mov
addr16
test
sbb
mov
test
pop
cmp
push
mul
imul
push
sti
aaa
jl
fsubr
int3
adc
mov
sub
jge
aam
xchg
(bad)
scas
rcl
add
fdivp
loope
mov
sbb
jae
xor
ins
xchg
or
push
stos
fild
add
stc
outs
mov
ins
(bad)
pushf
sub
mov
inc
and
push
mov
inc
pushf
mov
or
addr16
call
clc
dec
adc
mov
cld
loop
ret
xor
or
mul
xor
mov
mov
mov
jmp
push
lock
in
xchg
push
pop
in
inc
lock
and
das
sti
xor
add
cmps
mov
push
dec
iret
inc
pushf
xchg
loopne
sub
or
arpl
outs
xchg
xchg
ins
sub
jge
xor
cli
mov
pop
push
paddusw
xor
xor
stc
jmp
cmc
mov
(bad)
mov
aad
repz
movs
fild
cmpxchg
inc
in
pop
sbb
lock
cmc
mov
(bad)
jo
jp
mov
mov
lea
sahf
call
jno
imul
ins
adc
pop
xchg
dec
in
mov
stos
and
shl
inc
(bad)
sub
shl
dec
jne
jp
pop
dec
(bad)
pushf
cwde
repnz
mov
in
xor
pop
and
push
jno
push
out
sbb
sbb
mov
xchg
jno
sub
aaa
lods
xchg
test
and
ret
mov
jnp
push
into
mov
jmp
sub
jnp
aaa
test
and
int
js
mov
ja
add
cmp
stos
cdq
std
cld
icebp
xor
popf
push
nop
test
push
lds
and
mov
cli
push
cmp
mov
imul
les
std
sbb
outs
xchg
daa
push
mov
mov
push
(bad)
mov
add
enter
xchg
test
sub
addr16
cmp
dec
mov
stos
pop
int3
push
aas
inc
lock
cld
in
in
xor
lods
cdq
lock
movs
jecxz
cs
jbe
xchg
lock
mov
push
imul
mov
and
sbb
pop
xor
inc
rcl
imul
ret
cmp
(bad)
jg
je
xor
test
mov
lock
arpl
fldcw
sbb
and
mov
inc
adc
and
not
hlt
cmps
mov
rcr
mov
xor
lods
rcr
test
jp
or
jge
imul
test
mov
pop
jnp
add
je
iret
sub
or
push
jb
or
and
in
mov
xor
sub
xchg
jo
or
ret
jo
push
or
dec
mov
adc
out
push
out
arpl
xchg
mul
mov
and
inc
ret
daa
jg
pushf
ret
and
xor
mov
sub
push
inc
fbstp
movs
push
test
mov
inc
inc
mov
and
sbb
sbb
and
cs
pop
addr16
pop
popf
mov
scas
mov
frstor
shl
jmp
out
xchg
mov
adc
dec
pop
(bad)
jle
aas
scas
push
cmp
xchg
xchg
lods
cdq
ror
and
push
sbb
pop
imul
add
jns
xchg
sbb
cmps
sar
xchg
out
cdq
cmp
adc
movs
adc
mov
call
jbe
out
stc
loopne
push
jne
lods
push
std
push
arpl
push
retf
test
in
or
sbb
pop
and
sti
test
adc
jle
(bad)
mov
sbb
sub
fld
jne
xlat
push
jnp
adc
push
jb
addr16
int3
movs
punpckldq
outs
push
cmp
cli
retf
in
xor
dec
int3
fwait
sbb
ja
in
mov
shr
loopne
aas
cwde
daa
and
daa
ins
adc
xor
test
call
mov
cdq
(bad)
xchg
pop
inc
dec
mov
sbb
dec
inc
mov
add
jmp
jnp
stc
and
pop
mov
push
mov
adc
(bad)
fucomp
jo
loope
sub
push
pop
out
(bad)
movs
cmp
sub
pop
outs
push
mov
dec
push
jns
das
jg
add
or
mov
ror
pop
jb
pop
sahf
xchg
add
mov
xchg
ja
rcl
mov
ds
push
ds
ficomp
in
aam
mov
mov
mov
push
hlt
test
inc
das
repnz
(bad)
push
adc
outs
cld
jecxz
movs
inc
dec
or
sbb
(bad)
test
dec
pop
xor
adc
(bad)
cs
scas
iret
inc
bound
iret
ja
cmps
out
nop
lock
(bad)
js
and
icebp
test
inc
dec
xchg
in
xchg
aam
mov
fnstenv
xchg
es
neg
xchg
adc
cli
nop
sbb
lds
stc
dec
nop
int
or
cmps
pop
mov
sbb
arpl
ja
pop
sar
ret
test
jle
or
shr
sti
dec
jge
das
fidivr
neg
dec
(bad)
sbb
pushf
inc
pop
and
add
pop
cmp
cmps
mov
push
mov
dec
pushf
sub
das
data16
pop
dec
xor
iret
(bad)
inc
hlt
cwde
out
(bad)
in
aaa
mov
repnz
movs
int
add
adc
mov
pop
xor
or
repz
ins
cmp
jae
or
adc
fstp
pop
stos
jmp
int3
cmps
add
in
push
fcom
cmp
inc
jp
xchg
add
push
sar
jns
mov
sub
xor
dec
sbb
lods
mov
das
push
out
adc
cmps
sbb
hlt
xor
sub
repnz
inc
cmp
push
arpl
mov
fst
rol
mov
pusha
icebp
xor
pop
mov
jp
aaa
xchg
lea
or
mov
popf
sub
or
stc
adc
mov
xchg
in
add
mov
(bad)
mov
push
and
std
cmp
jmp
inc
iret
jle
and
pop
lods
sahf
fcomp
leave
inc
data16
movs
mov
inc
stos
dec
lds
aas
add
bound
daa
les
ins
mov
ret
dec
pusha
adc
xor
sub
test
jne
fistp
inc
sub
nop
push
ins
mov
adc
mov
mov
pop
or
popa
lds
mov
xchg
push
xlat
cli
mov
cli
and
mov
xchg
jnp
pop
pop
movs
call
mov
xor
mov
nop
jbe
ss
xchg
loope
out
inc
sbb
mov
mov
es
mov
pop
jl
mov
loope
or
rcr
jge
mov
sar
ins
jae
pusha
ret
fadd
and
cmp
popa
dec
and
jp
std
test
out
fisttp
add
or
rcr
nop
out
push
arpl
xor
movs
and
inc
and
(bad)
inc
mov
pushf
loope
adc
out
mov
and
or
das
jo
add
and
(bad)
iret
aam
pop
imul
lea
mov
adc
xchg
in
data16
mov
jecxz
cdq
mov
lods
shl
jae
mov
push
(bad)
cmp
fisttp
adc
aas
shl
in
call
mov
fsubr
dec
push
fdivrp
outs
sbb
(bad)
ss
mov
mov
fst
mov
xchg
jle
sub
mov
dec
leave
jmp
dec
lahf
js
adc
dec
pop
push
xor
int
mov
or
push
das
pop
xor
mov
ret
inc
ret
mov
dec
repz
mov
inc
das
sti
xchg
in
daa
xor
cdq
jl
retf
jbe
rol
dec
pop
push
mov
scas
add
push
adc
nop
outs
jge
cmp
xor
(bad)
mov
and
rol
or
cmc
mov
push
call
lock
or
repnz
mov
retf
jle
int
bound
ins
test
lock
mov
cli
jbe
iret
xchg
(bad)
in
(bad)
pusha
imul
popf
clc
dec
mov
std
mov
inc
adc
leave
repz
fcmovnu
xor
sbb
shl
and
iret
js
mov
pop
dec
in
add
and
dec
cmp
dec
loop
mov
jmp
inc
jno
ficom
cmp
adc
(bad)
push
add
cwde
popf
fcomp
nop
loop
sbb
(bad)
icebp
mov
jae
xor
stos
cmp
ja
or
jne
pop
and
xchg
push
outs
out
xchg
xchg
mov
cs
push
push
cmp
repnz
lods
ja
inc
push
imul
leave
cwde
stos
mov
mov
dec
sub
push
(bad)
rcr
sub
jns
mul
ins
fs
push
hlt
lods
shl
xor
cmp
add
sbb
mov
je
add
cdq
in
iret
enter
xor
nop
jb
stos
push
fwait
pop
dec
out
das
push
pop
push
sbb
xchg
mov
cmp
jp
push
imul
push
loop
or
pop
jno
test
bound
popf
xchg
cmp
ins
lods
push
fist
mov
jle
fxch
icebp
scas
stos
ja
inc
xlat
xchg
push
cmc
push
and
dec
inc
retfw
lods
scas
pop
add
mov
scas
mov
pop
ret
pop
cdq
pushf
add
es
(bad)
popf
nop
sub
mov
push
sbb
mov
mov
push
dec
mov
xor
out
test
lock
icebp
dec
xor
adc
scas
fdivr
imul
es
and
jbe
daa
or
mov
in
cdq
jne
mov
jo
mov
pusha
jmp
and
cdq
call
movs
sar
push
(bad)
retf
cmps
mov
xchg
mov
es
imul
sub
ror
dec
sar
bound
mov
jne
fdivr
lock
or
retf
jl
push
lahf
or
push
inc
outs
test
or
push
enter
push
jne
in
or
xor
sahf
ss
fwait
sbb
jle
jecxz
cmp
pop
mov
mov
fidivr
stos
pop
scas
or
push
mov
cmps
into
sub
outs
repz
rcr
mov
ins
xor
mov
ins
and
sub
cdq
lods
pop
loope
jge
sbb
shl
fwait
cmp
jg
or
push
cli
sub
adc
lods
fxtract
sub
in
push
add
mov
fnsave
icebp
stos
sub
pop
icebp
push
fisttp
shl
retf
mov
mov
sub
mov
out
adc
rcl
xchg
inc
mov
out
dec
scas
hlt
mov
sbb
mov
retf
push
pop
or
outs
jb
or
(bad)
push
scas
xor
aaa
mov
std
div
bound
jns
rcr
push
inc
pop
lahf
adc
mov
pop
mov
(bad)
nop
mov
add
push
lds
dec
lods
out
sahf
jne
mov
addr16
and
cdq
stc
pop
sahf
mov
pop
into
add
repnz
push
inc
dec
clc
cmp
call
stos
adc
mov
int
cmc
mul
xchg
fs
ds
or
dec
ret
gs
fxch
int
hlt
dec
movd
outs
cld
and
cmp
jb
neg
cld
sbb
enter
cmp
xor
popf
loope
fild
mov
call
ins
in
dec
(bad)
cmp
lock
push
popf
ss
or
mov
in
vmulpd
xor
scas
lods
stos
sbb
je
xchg
and
push
cmp
jmp
vorps
xor
fmul
mov
or
add
sbb
and
(bad)
retf
ins
shr
cmp
jo
js
dec
ins
jns
pop
mov
jns
mov
xor
imul
retf
sahf
add
sub
fmul
xchg
add
push
imul
adc
movs
movs
cmp
test
mov
cli
inc
push
cmp
outs
xchg
movs
imul
mov
cmp
(bad)
ins
push
(bad)
rol
dec
std
clc
pop
lock
data16
cwde
shr
push
outs
std
jno
fmul
pop
xor
sub
(bad)
(bad)
mov
xor
lahf
popf
inc
iret
retf
je
retf
imul
mov
jmp
hlt
jecxz
jnp
iret
push
rcr
xchg
xchg
test
xor
jns
ror
(bad)
js
mov
dec
cmp
pop
jae
outs
pop
jg
xadd
aaa
loop
add
popf
lahf
ja
push
fild
rcl
(bad)
mov
xor
jae
cwde
mov
lods
or
jae
les
lahf
in
xchg
xchg
sbb
aam
mov
es
out
js
test
rcl
mov
addr16
into
jns
xor
pop
(bad)
(bad)
rcr
xor
jae
inc
push
xchg
out
icebp
sub
popf
loop
call
jbe
push
test
fimul
add
ds
outs
or
ins
pop
lds
jg
aas
pop
out
lea
inc
sub
mov
xor
dec
pop
not
push
jmp
mov
movs
cmp
arpl
icebp
jle
xchg
out
xchg
sti
pop
lods
retf
shr
repz
dec
dec
cmp
repnz
lock
xchg
mov
ins
popf
adc
imul
xchg
push
loope
push
mov
es
jnp
jl
mov
xchg
mov
movs
mov
shl
das
jno
mov
ror
scas
mov
push
sub
inc
hlt
mov
mov
fisttp
inc
xchg
mov
mov
pop
mov
(bad)
retf
adc
call
sub
aad
pushf
inc
pop
ror
ins
or
loope
sahf
pop
push
ret
push
pop
std
in
adc
hlt
push
push
dec
fmul
je
sub
push
data16
int
cli
rcl
call
js
xchg
test
cmps
xor
imul
cmp
iret
cmp
jo
mov
cs
and
into
imul
popa
xchg
xor
jl
sub
fisub
jge
mov
cmp
jnp
pop
and
(bad)
out
add
movs
add
fs
mov
jmp
sub
sub
icebp
mov
test
add
jnp
popa
cmp
xchg
pop
mov
int
scas
movs
inc
and
dec
mov
inc
cmc
mov
jge
fisub
hlt
mov
sar
jae
lock
int3
leave
cld
ds
inc
and
jg
es
jns
xchg
ret
aam
cmovo
cli
xchg
mov
push
jle
loop
add
pusha
ret
sub
mov
mov
iret
call
xchg
sar
repz
mov
imul
mov
or
data16
fwait
and
sub
out
or
leave
dec
mov
jb
retf
imul
push
shl
(bad)
iret
arpl
mov
push
test
test
rcl
ror
lock
daa
xchg
in
pop
fnstsw
jle
jb
xchg
int3
cmp
sub
pop
clc
(bad)
mov
or
jle
sahf
sub
inc
(bad)
hlt
sbb
sti
pop
outs
pop
stc
es
ror
and
fbld
mov
add
mov
inc
xchg
scas
pop
cmp
sub
pushf
lods
push
sbb
mov
sub
xlat
imul
call
jmp
(bad)
pop
jp
mov
call
adc
pop
mov
or
iret
in
jno
push
inc
icebp
mov
retf
imul
or
mov
xchg
mov
aas
stc
std
xlat
push
retf
or
loopne
or
xor
neg
jo
jmp
add
mov
mov
fidivr
(bad)
mov
sahf
xchg
mov
outs
bndstx
push
out
shl
pop
jp
test
push
add
in
jno
cdq
ins
sbb
dec
jne
aaa
add
das
cmc
jb
xor
or
and
cmp
sub
cmp
and
jbe
je
daa
cwde
inc
daa
dec
not
sahf
aad
xchg
retf
scas
imul
inc
imul
inc
push
js
test
and
push
cmp
cmps
es
add
je
test
ss
and
retf
jae
dec
push
fnstsw
mov
add
and
or
(bad)
(bad)
jp
fld
xor
mov
push
test
ficom
mov
nop
and
xor
xor
(bad)
mov
and
jae
add
js
call
leave
jae
ins
mov
mov
jle
inc
out
sub
rcl
or
jmp
fstp
or
out
inc
(bad)
pop
xor
aam
pop
ret
cli
push
(bad)
daa
ror
sbb
xchg
add
sbb
ret
jo
jbe
ins
push
bound
daa
fmul
lock
adc
inc
arpl
xor
cmp
dec
cmp
stc
sti
js
test
jo
mov
cmp
or
paddusw
mov
fsub
push
mov
lea
ss
jl
gs
out
aam
mov
cmp
inc
mov
cli
arpl
sub
or
je
ror
xor
retf
mov
mov
jmp
sub
mov
dec
cwde
aam
lods
shr
add
popa
adc
in
outs
mov
(bad)
cld
fnstsw
int
inc
repz
(bad)
int3
stc
adc
test
fwait
shl
jo
inc
ds
and
loope
pushf
(bad)
mov
jp
rol
jp
push
dec
pusha
sub
mul
jo
jo
xchg
mov
cmp
xor
add
rol
inc
cmp
dec
pop
xchg
and
dec
sti
adc
fdivr
shl
in
dec
fimul
jns
mov
jns
rol
push
sahf
cmp
add
sub
mov
push
inc
jg
imul
into
push
in
bound
mov
cmp
(bad)
push
fdivr
adc
push
push
aaa
outs
xchg
(bad)
push
shl
je
enter
dec
pop
cs
neg
fs
mov
stc
xchg
push
and
sub
fwait
push
dec
dec
scas
add
mov
aam
add
pop
add
cmp
xor
sar
lock
cmp
pop
iret
xor
dec
pop
xchg
mov
cmp
aaa
std
js
add
jge
out
mov
cmp
scas
in
mov
mov
dec
fst
jbe
and
push
sbb
push
(bad)
push
dec
mov
pusha
xchg
loopne
adc
pusha
mov
sub
sbb
fldcw
sub
mov
jmp
aam
push
int
outs
mov
and
push
test
int3
inc
xor
les
enter
(bad)
pop
add
movs
sar
mov
adc
push
arpl
mov
mov
aad
int
adc
xchg
jmp
add
pop
ins
pop
test
adc
fild
pop
popf
ret
or
das
pop
pop
call
xor
mov
rol
int
movs
xor
push
sub
push
jmp
in
push
arpl
daa
push
sbb
inc
or
adc
sub
xlat
rcr
cdq
clc
dec
xchg
sbb
pushf
shl
sbb
in
xchg
mov
in
addr16
inc
aam
jp
test
(bad)
aaa
and
xor
push
cmp
push
mov
dec
imul
mov
cmps
jmp
mov
cli
data16
sbb
int3
das
sub
jge
loop
mov
mov
mov
jmp
mov
je
(bad)
fdiv
sub
xchg
sub
scas
cmp
fs
xlat
push
test
outs
div
dec
les
in
cmp
lods
xor
aaa
push
shr
sub
fiadd
mov
imul
dec
les
pop
jmp
test
xchg
mov
fwait
jbe
nop
cmc
push
cmc
pop
aaa
jle
movs
imul
adc
dec
dec
imul
ret
ds
movs
int
not
cwde
str
imul
int3
xchg
sbb
sbb
jno
cdq
sub
pop
push
pop
in
rcl
push
or
jl
inc
cmp
jg
and
push
push
xor
sub
out
inc
xor
push
aam
inc
inc
xchg
push
dec
xor
and
cmps
cli
push
ins
addr16
pop
sar
movs
mov
fwait
and
inc
jge
jl
call
jecxz
xchg
and
in
aas
scas
jmp
and
rcl
cld
sub
mov
ja
push
or
outs
shl
or
stc
stos
sbb
mov
cmps
cmc
das
test
mul
lahf
cmp
cwde
test
icebp
adc
xor
add
xchg
(bad)
xchg
xor
mov
inc
out
out
add
inc
enter
imul
xchg
pusha
mov
call
div
lods
mov
jns
daa
mov
mov
stc
in
fdivr
jecxz
push
mov
ds
push
pop
mov
xchg
test
cmp
pop
push
adc
sub
je
push
cmp
adc
add
sbb
fld
or
push
xchg
xchg
xor
or
lock
retf
ficom
(bad)
sub
stos
popf
adc
sti
and
xor
xchg
adc
aas
xor
stos
pop
ret
ds
mov
stos
cmp
dec
xor
cmc
pushf
(bad)
loop
iret
adc
adc
and
jmp
mov
movs
pop
sti
loope
cld
xor
das
jge
test
xlat
mov
mov
cld
jns
dec
inc
and
sbb
neg
push
xchg
push
inc
adc
ror
test
mov
cs
mov
and
in
ror
and
je
mov
es
scas
cdq
inc
xchg
mov
out
and
or
(bad)
shl
mov
pop
mov
call
scas
ss
inc
mov
test
fld
xchg
jmp
xor
xchg
lods
dec
dec
daa
inc
add
nop
out
je
pusha
pop
jg
(bad)
mov
sub
dec
aas
jae
cwde
jae
mov
add
sti
pop
aas
out
add
enter
(bad)
movs
lock
test
cmc
cmp
push
adc
dec
std
sub
or
imul
or
and
stos
scas
cwde
fld
lods
jbe
aad
or
xchg
jge
mov
or
inc
fnstenv
fldenv
push
push
(bad)
cli
(bad)
aaa
cdq
call
adc
xchg
aad
adc
sbb
pop
and
lock
in
mov
dec
(bad)
ss
adc
or
(bad)
imul
retf
inc
rcr
dec
xchg
outs
clc
dec
pop
pop
jbe
adc
pop
aaa
fst
or
pop
sbb
lods
leave
sub
ficomp
cmp
inc
test
sub
lds
mov
mov
stc
mov
lahf
popa
push
sub
inc
jnp
pop
(bad)
mov
lea
push
aaa
dec
dec
aaa
jbe
push
lahf
sbb
cmp
jnp
lock
xchg
cmp
out
test
jns
jmp
add
in
cli
stos
or
push
cmp
xor
rcr
int
inc
(bad)
jnp
and
(bad)
mov
push
sbb
aad
cmc
push
push
xchg
ret
vpshlq
sbb
mov
sub
add
sub
outs
rcl
sbb
inc
ret
aaa
and
aad
into
dec
sbb
adc
fcmove
jo
inc
cld
mov
aaa
popa
div
fsubr
sbb
stc
repnz
pusha
xchg
mov
loope
push
xor
cmc
xor
push
pop
(bad)
xor
or
retf
test
xchg
fstp
sub
cmp
mov
bound
push
mov
ror
fcom
je
push
push
rcl
clc
retf
pop
push
stos
push
aam
cwde
enter
cwde
jae
jmp
out
push
pop
dec
and
call
mov
push
ss
jmp
xor
jp
dec
in
jmp
mov
ret
call
xchg
icebp
dec
pop
cvtdq2ps
pop
push
pop
aad
sub
outs
(bad)
es
and
push
inc
xchg
pop
nop
in
sbb
and
inc
xchg
jns
int
inc
cmp
xor
lods
mov
fist
loopne
hlt
mov
mov
jne
push
jmp
(bad)
std
adc
adc
std
mov
out
addr16
adc
ret
(bad)
aas
fcom
cwde
mov
std
scas
int3
ret
sbb
neg
mov
movs
sbb
aad
gs
or
mov
dec
mov
les
(bad)
les
in
shr
push
lods
mov
push
xor
lock
xchg
mov
push
jl
lods
dec
outs
int
outs
addr16
add
lea
mov
scas
test
jbe
ror
rcr
cmp
xchg
mov
mov
jno
bound
sub
and
cmp
adc
in
xor
push
mov
fwait
sub
pushf
adc
sbb
ret
or
ins
int
cmp
in
add
out
push
out
mov
int
mov
imul
fadd
xor
pop
sti
jmp
dec
adc
xchg
cmp
mov
and
jbe
inc
xlat
dec
lahf
(bad)
ins
cmp
push
je
dec
jns
push
loopne
pushf
imul
mov
test
cmp
jbe
in
js
mov
popa
shr
pop
(bad)
retf
mov
cs
in
ds
nop
mov
sub
cmp
inc
arpl
inc
ficomp
adc
out
stos
repz
test
and
and
inc
shl
jle
gs
repnz
and
(bad)
stc
xchg
lahf
push
stc
leave
inc
mov
pop
jb
scas
adc
retf
cli
leave
and
cmp
adc
mov
jo
inc
xor
(bad)
(bad)
push
mov
and
ret
dec
mov
test
test
movs
call
adc
xor
or
xchg
inc
cmp
loop
xchg
sbb
pusha
in
push
in
call
rcl
dec
fwait
sbb
mov
inc
aam
fwait
jnp
fwait
adc
jmp
rcl
aam
stos
xor
or
jno
jnp
xor
(bad)
xor
fsubr
sbb
inc
jge
fadd
jnp
xchg
rol
sbb
xor
mov
fadd
ret
cmp
out
jnp
xchg
jne
movs
sub
pop
(bad)
fsubr
mov
jge
cmp
(bad)
cmp
add
cdq
mov
inc
ret
popa
sub
inc
test
jnp
in
rcl
out
mov
push
out
fmul
pop
inc
(bad)
clc
sub
dec
outs
add
psrld
xor
jbe
push
push
sub
cmps
inc
push
and
sbb
xchg
pop
fild
(bad)
clc
add
jg
cwde
jp
stc
dec
jo
lock
iret
cmp
dec
jbe
jo
mov
out
retf
add
in
or
cs
mov
jle
xchg
mov
adc
bound
adc
jg
js
div
fisttp
lock
or
inc
leave
das
pop
(bad)
cmps
and
imul
pop
out
push
les
sub
push
push
rcr
bound
out
dec
sbb
push
xchg
jmp
(bad)
sub
adc
fsubr
clc
sub
enter
test
ror
and
in
mov
cmp
cmovle
fiadd
cmp
fcomp
addr16
dec
div
shl
es
out
adc
cmp
or
pop
(bad)
push
xlat
cdq
shl
adc
(bad)
je
or
mov
mov
(bad)
jo
call
in
mov
out
into
hlt
shl
push
and
mov
pop
nop
xchg
jno
mov
mov
mov
sahf
inc
out
fdivr
or
or
cmp
pop
add
cmps
das
dec
mov
bound
fsub
data16
loopne
inc
rol
(bad)
mov
mov
add
mov
or
jo
movs
cwde
pop
cdq
add
inc
lea
mov
mov
(bad)
dec
jle
lahf
scas
jae
mov
cld
clc
pop
and
icebp
fstp
retf
loop
shl
jmp
sub
jmp
jle
out
xlat
push
shl
jmp
mov
xchg
leave
mov
sar
ins
or
dec
pop
retf
enter
sbb
addr16
movs
jb
pop
mov
add
jo
lock
lea
xchg
xor
jg
cmp
pop
adc
mov
xor
repnz
jg
test
popa
out
mov
dec
les
mov
outs
in
jnp
ss
or
pushf
push
call
(bad)
dec
(bad)
mov
repnz
pop
pop
ja
mov
xchg
mov
imul
dec
idiv
cmp
call
scas
pop
cmps
cmp
adc
cmp
test
xchg
sahf
test
aaa
xchg
adc
jns
add
mov
data16
aaa
fcmovbe
pop
arpl
jp
ins
leave
data16
mov
popa
pop
dec
ror
jl
push
xor
or
test
rcl
ja
cmp
(bad)
fucomp
test
mov
ins
pop
xchg
jge
adc
out
jnp
stos
mov
cmp
xchg
call
(bad)
cwde
cmc
dec
icebp
bound
leave
mov
loope
lahf
bound
sub
in
pop
jp
jg
sub
cmp
push
jne
push
jg
mov
icebp
bound
pop
dec
clc
ins
(bad)
scas
adc
je
or
int3
dec
div
scas
add
jb
mov
sbb
int3
mov
call
ins
daa
into
cmp
cld
jle
leave
inc
loopne
cmps
dec
add
push
push
sub
lds
mov
in
loope
cmp
ins
or
cmps
fimul
and
stos
sub
push
dec
(bad)
mov
fimul
xchg
mov
imul
rcl
mov
add
(bad)
dec
movs
fist
es
pushf
lods
jmp
jnp
in
out
stc
pop
mov
xor
xlat
mov
pop
or
jns
(bad)
inc
mov
dec
les
in
retf
cmps
push
or
pop
dec
out
rcl
shr
sub
or
dec
fsubr
sub
fisub
pop
mov
mov
mov
mov
cmp
out
fmul
test
test
daa
fisubr
(bad)
sti
icebp
ror
fdivr
jns
mov
xchg
pushf
(bad)
adc
inc
mov
mov
movs
ins
retf
jmp
push
aaa
xor
mov
sub
sbb
push
stos
movs
inc
enter
cmp
repnz
cmp
js
inc
inc
mov
dec
sar
xor
push
push
mov
(bad)
loopne
(bad)
sbb
shl
leave
neg
inc
cdq
push
pop
mov
jp
aad
jecxz
mov
(bad)
ins
(bad)
clc
or
jae
pop
outs
mov
fist
inc
out
jl
pop
push
inc
into
rcr
push
pop
lahf
(bad)
mov
iret
call
dec
movs
sub
push
aam
popa
mov
mov
mov
xchg
fcom
inc
pop
xlat
mov
sahf
in
repz
xchg
or
mov
iret
adc
cmp
shl
and
ja
dec
imul
dec
mov
cmp
adc
jle
xor
fstp
jae
cmp
pop
enter
and
add
jne
sub
push
add
mov
pop
push
scas
sbb
xchg
in
outs
mov
mov
gs
dec
jae
loop
rcl
push
push
or
cmp
lods
cmp
and
test
cmp
mov
mov
cmp
push
js
mov
mov
mov
int
cmp
(bad)
je
cli
inc
aaa
fld
cmps
scas
int3
mov
lahf
ss
ins
mov
pop
enter
or
add
rcl
test
cmp
xor
test
mov
mov
xor
sti
enter
xchg
mov
inc
pop
imul
repnz
mov
das
ret
jbe
or
loopne
js
(bad)
popa
loopne
xor
dec
sub
mov
mov
push
mov
mov
pop
cs
movs
push
pop
pop
enter
lea
mov
mov
add
xor
dec
sbb
add
scas
popf
leave
pop
or
inc
ror
fadd
loop
pop
icebp
jo
sahf
out
jnp
into
lea
fidivr
or
or
fcom
or
sub
hlt
int
pop
push
je
add
adc
pop
lods
and
mov
outs
movs
xor
fild
aad
fimul
rcr
ret
xchg
cmp
push
aas
cld
arpl
(bad)
jmp
gs
sub
sar
push
mov
dec
ins
sub
jns
dec
cdq
pushf
cmp
add
cmp
mov
sub
in
stc
and
sbb
mov
retf
imul
push
cli
fisttp
jo
cwde
test
mov
jne
lock
int
popf
rcl
cli
mov
mov
push
int
sar
stos
inc
xchg
movs
dec
fxch
stos
xor
cmps
jnp
add
sbb
(bad)
push
push
push
call
inc
xor
push
movs
les
push
out
or
push
cmp
jnp
stc
add
fisttp
mov
data16
sub
xchg
fs
dec
inc
mov
dec
pop
mov
jae
sbb
scas
ds
arpl
jns
or
push
or
int
stc
mov
push
jp
pop
mov
enter
clc
(bad)
cmp
cmps
loope
scas
push
jbe
xchg
outs
jne
ds
xchg
adc
pushf
push
out
movs
push
xchg
xor
nop
mov
imul
iret
les
je
jmp
dec
dec
(bad)
xor
push
stc
stos
aam
jns
adc
push
stc
aad
xchg
fimul
jae
sbb
and
loop
pop
pop
and
fwait
and
push
cmp
sti
mov
adc
mov
inc
aaa
inc
pop
shl
movs
mov
push
adc
ds
sub
sbb
les
cmps
cmp
outs
push
inc
(bad)
jg
xor
push
jne
mov
scas
(bad)
pop
fstp
cmp
xchg
inc
retf
fwait
cdq
push
je
or
xor
cld
sub
dec
or
cmp
jne
das
sbb
cmps
and
lahf
or
mov
ja
in
xor
out
aas
cmp
sub
xor
pop
pop
lahf
mov
nop
mov
mov
push
mov
leave
icebp
repnz
and
add
jmp
out
add
lea
sub
shr
mov
jnp
pop
fiadd
inc
sbb
stc
dec
lahf
iret
imul
out
sbb
mov
dec
push
fistp
push
mov
xor
inc
mov
mov
jbe
add
daa
je
pop
fcmove
push
movs
cmp
jp
and
add
cdq
push
mov
or
push
pop
shl
fadd
ss
or
gs
or
xchg
xchg
test
shr
rcr
loopne
inc
lods
sar
xchg
nop
(bad)
arpl
es
out
aad
pextrw
cmc
mov
xchg
shr
ret
fild
mov
xor
adc
xor
div
das
or
dec
pushf
xor
pusha
sub
jb
mov
jge
xor
sahf
push
scas
inc
fucom
jle
mov
adc
dec
ror
popf
or
movs
xchg
fsub
mov
push
or
gs
pop
pop
jl
test
inc
dec
test
mov
out
shr
out
pop
imul
jns
sti
mov
stos
cmp
inc
mov
(bad)
cmp
mov
cmp
sub
(bad)
std
lahf
cmp
xchg
sub
cld
pop
mov
retw
pushf
jp
hlt
cmp
std
dec
mov
xlat
cwde
mov
rcl
(bad)
js
xchg
nop
retf
and
push
(bad)
out
xchg
and
retf
ds
jae
xchg
ficom
aas
mov
adc
stos
inc
popf
lds
lahf
scas
or
dec
jns
add
fwait
xor
imul
inc
out
xchg
je
push
leave
ins
scas
sub
lods
pushf
jo
jbe
int3
fisubr
and
sbb
push
push
lods
rol
adc
xchg
repz
int
add
daa
aam
(bad)
inc
out
dec
int
retf
(bad)
cmp
dec
daa
hlt
jb
cld
xchg
lods
sub
xchg
fild
pop
sqrtps
mov
mov
scas
inc
js
in
ficomp
pop
loopne
jb
dec
test
inc
or
jmp
pop
pop
cwde
mov
stos
nop
mov
inc
pop
leave
imul
push
mov
cmp
loope
lea
cmp
mov
push
pop
shl
mov
ss
repnz
adc
cmp
addr16
shr
xor
cs
aas
ja
jle
arpl
mov
pop
xchg
sti
sti
xchg
xchg
in
mov
mov
dec
sub
hlt
cli
and
or
xor
in
addr16
xlat
mov
mov
clc
xchg
inc
cmp
out
(bad)
mov
das
out
ret
sbb
sbb
jb
cmps
aas
imul
ret
mov
mul
mov
loope
and
loope
(bad)
js
sub
push
sahf
adc
sub
mov
push
push
mov
test
pop
jb
mov
sbb
(bad)
fnstcw
mov
test
pop
jb
das
pcmpgtd
inc
mov
jbe
cmp
fisttp
in
cmp
ret
call
outs
mov
enter
dec
jnp
push
inc
daa
inc
cwde
adc
sub
adc
pop
fmul
dec
add
pop
dec
jmp
xor
dec
lahf
add
mov
aas
jo
cmp
jmp
cmp
(bad)
(bad)
hlt
iret
xchg
jo
sti
in
(bad)
xchg
inc
cdq
inc
cmp
mov
cs
int
mov
nop
inc
loope
out
daa
cli
stos
mov
fwait
lods
add
and
push
dec
xchg
out
seto
sub
out
mov
rcr
pop
imul
bound
popf
and
imul
les
movs
sbb
xchg
mov
lea
pop
xchg
inc
and
cmp
int3
xchg
xor
ret
dec
mov
sti
jmp
adc
ds
dec
js
sbb
adc
pop
jle
push
dec
jae
push
call
outs
punpckhbw
dec
outs
ja
mov
lahf
fcmovnb
arpl
and
add
ss
fwait
test
aas
mov
les
pop
dec
shl
sbb
mov
mov
ins
add
mov
(bad)
cdq
pop
push
(bad)
(bad)
jo
call
scas
mov
adc
pop
(bad)
pop
sbb
mov
mov
pop
(bad)
pop
mov
mov
or
pop
(bad)
ds
jb
xchg
aas
outs
test
scas
pop
pushw
nop
push
and
ds
mov
cmp
push
imul
sub
mov
mov
dec
push
mov
push
mov
mov
mov
aad
repnz
js
push
test
add
xchg
add
jnp
mov
dec
hlt
jb
or
(bad)
(bad)
jg
or
sar
cmps
(bad)
lea
xor
inc
inc
mov
and
daa
cmps
pop
ins
jb
mov
cmp
fnsave
mov
pop
pop
push
mov
clc
gs
dec
push
mov
shufps
xor
mov
jno
(bad)
mov
add
scas
loope
adc
dec
icebp
rol
mov
push
test
push
es
icebp
bnd
jle
ficom
or
loope
push
mov
or
enter
call
ins
(bad)
and
cmps
cld
cld
sbb
aam
xchg
mov
jg
jb
test
xchg
xlat
and
xchg
add
in
adc
mov
and
add
test
mov
das
dec
pop
cmps
xchg
dec
pmaxub
xor
jns
mov
xor
hlt
js
dec
inc
sub
popa
adc
out
or
bound
push
imul
dec
mov
pop
fucom
adc
xchg
in
lds
xor
loopne
mov
int
xchg
sar
stc
mov
add
icebp
popf
xor
ins
not
or
pmulhuw
add
and
mov
jge
cdq
push
js
sahf
cli
xor
sbb
sbb
in
xchg
outs
mov
sbb
mov
pop
out
add
adc
jmp
movs
retf
aaa
ins
stos
mov
call
inc
jb
add
jnp
mov
pop
ficomp
out
add
fild
imul
add
jp
sbb
mov
(bad)
loopne
jecxz
aas
xchg
popa
jmp
loop
bound
ror
jnp
and
dec
lahf
cwde
fs
addr16
inc
sbb
dec
sub
into
(bad)
mul
lods
loopne
stos
xchg
imul
xlat
bound
add
(bad)
cmp
dec
shr
mov
sar
add
mov
test
mov
dec
xchg
dec
shl
gs
sar
hlt
leave
rol
pop
mov
ja
adc
xchg
int3
fidiv
fistp
fld
pop
int3
xor
shl
fild
mov
repnz
out
jmp
sar
movs
popa
arpl
add
in
shl
aas
xor
pop
push
arpl
dec
mov
retf
(bad)
bound
fs
jle
lock
imul
dec
adc
pusha
push
popf
inc
fadd
or
stc
xchg
cmp
jl
sub
out
jo
jmp
xor
xchg
or
mov
push
fdivp
loop
ins
popf
jp
mov
stc
test
call
je
int3
add
add
xchg
out
xor
test
fwait
(bad)
out
cld
push
mov
ins
jl
sbb
lods
test
inc
cmc
jb
test
adc
inc
nop
xor
pop
inc
jbe
pop
ins
dec
es
pop
cmp
xor
mov
pop
push
imul
mov
fnstcw
(bad)
out
sbb
or
aaa
and
inc
pop
xor
inc
or
ret
pop
sub
sub
ret
mov
pop
not
pop
mov
pop
mov
mov
(bad)
fcomip
mov
(bad)
xchg
inc
stos
jle
int3
and
mov
adc
mov
popa
jnp
enter
(bad)
call
xchg
pop
push
fwait
das
adc
pop
out
xchg
dec
and
mov
call
cwde
jle
int3
clc
daa
mov
mov
pop
fxch
out
pop
out
movs
in
xchg
xor
push
out
jmp
add
adc
es
cli
xor
imul
and
pop
es
mov
push
loope
scas
out
add
iret
xor
mov
dec
sub
lods
sbb
popa
sub
pop
loop
cmp
repz
js
or
loopne
jnp
push
fs
mov
cld
scas
outs
sti
mov
pop
rol
ja
mov
cmps
rcl
adc
ret
or
mov
cmp
data16
sub
icebp
or
pop
add
stos
xor
daa
loopne
repz
pop
cmp
aam
ins
dec
mov
std
add
gs
mov
or
sub
mov
rcl
mov
sbb
add
jb
repnz
cmp
jo
xor
std
add
inc
pop
addr16
dec
inc
pop
pop
in
inc
jno
je
push
outs
test
jmp
xchg
pop
aaa
xchg
jl
int3
push
pop
fld
(bad)
nop
test
sbb
dec
sub
add
sbb
or
mov
sub
nop
test
retf
daa
mov
mov
movs
rcr
xchg
gs
hlt
and
mov
push
scas
add
fs
xchg
dec
push
pop
jg
inc
pop
inc
xor
xor
jo
in
imul
dec
sbb
pop
movs
in
cmp
mov
cwde
mov
data16
enter
xor
fmul
xchg
mov
jge
jae
cmp
jle
sbb
or
jmp
and
jle
mov
xor
mov
xor
in
daa
retf
cmps
mov
cmp
xchg
xor
jmp
fsubr
(bad)
jb
aad
jbe
jne
call
fsubrp
jecxz
xchg
pop
cmp
movs
sub
mov
jge
xchg
movs
div
popf
stos
inc
pop
and
lea
mov
pop
scas
jae
sub
cmp
adc
sbb
dec
mov
loop
cmp
movs
ja
pop
rep
movs
pop
cdq
cmps
push
sub
and
pop
add
mov
sub
std
xor
inc
scas
push
scas
mov
rcr
sub
sub
icebp
imul
cmp
xchg
mov
jmp
fiadd
sbb
sbb
rcl
adc
mov
in
ror
push
in
sbb
adc
push
xchg
inc
out
jge
imul
in
mov
and
mov
fwait
mov
or
js
clc
cmp
cld
dec
(bad)
mov
mov
stc
sub
outs
lea
mov
adc
fisub
(bad)
dec
clc
addr16
mov
dec
mov
das
add
sub
pushf
ins
les
xchg
jmp
push
repnz
pop
adc
sub
jle
bound
mov
stc
or
push
cwde
sub
mov
cli
int
inc
mov
xchg
ret
in
cmp
test
les
xor
and
out
ins
mov
xor
mov
lds
adc
inc
out
add
xchg
add
cld
xchg
pop
in
rol
push
dec
je
call
jbe
imul
add
sahf
outs
and
dec
xor
dec
pmaddwd
stos
cmp
pop
(bad)
sbb
int
and
test
push
pop
and
ror
jmp
and
inc
sbb
push
mov
xchg
retf
sti
dec
cmps
ret
sub
xchg
(bad)
cmp
and
sbb
pop
mov
fcomp
mov
inc
push
sub
mov
cwde
xchg
xor
loop
lea
jno
push
hlt
dec
pusha
jbe
nop
pop
sub
rcl
adc
lods
fbld
sahf
in
dec
das
adc
rol
hlt
je
pop
scas
mov
mov
fs
into
push
adc
imul
sbb
jmp
dec
inc
mov
push
sub
sbb
movs
cmp
xchg
cdq
fild
(bad)
mul
or
push
or
cdq
xor
inc
clc
lods
mov
test
cli
mov
cmps
push
cmps
icebp
in
sbb
sub
stc
fprem
pop
ret
mov
fpatan
or
cli
and
daa
push
call
adc
int
call
test
(bad)
arpl
jg
rcr
loop
mov
call
cmp
je
stc
das
add
call
or
add
ror
mov
std
push
dec
adc
mov
dec
and
xor
in
mov
xor
cs
clc
dec
xchg
aam
fild
xor
or
cmp
mov
lahf
pushf
(bad)
cld
adc
out
ins
jnp
jb
lods
leave
call
and
call
push
loop
pop
aad
sbb
jmp
cld
call
or
inc
retf
inc
xor
fwait
xor
or
fnstenv
mov
retf
nop
fs
dec
push
cmps
ss
stos
inc
mov
or
jne
jnp
cmp
loopne
ja
ss
push
mov
int3
rol
xchg
loopne
ins
cmc
out
inc
inc
outs
sub
mov
shl
bound
leave
xchg
xlat
dec
call
push
rol
imul
xor
mov
inc
push
mul
fdiv
xlat
loopne
mov
sti
and
(bad)
out
mov
mov
and
adc
pusha
mov
mov
xchg
inc
lock
(bad)
fldenv
pop
int3
enter
call
pop
or
inc
pop
cmp
movs
sbb
fisttp
shl
test
jnp
or
(bad)
push
push
xor
mov
movs
pop
imul
cld
or
jmp
jb
sub
cmp
and
sub
pop
or
dec
xchg
and
sti
cmps
jl
push
sub
aad
in
loopne
cld
movs
and
out
pop
dec
stos
inc
mov
js
push
mov
imul
ins
repnz
popa
mov
sbb
pop
adc
jo
cmp
inc
mov
arpl
or
mov
xlat
pop
dec
shld
shr
pushf
jbe
pusha
out
dec
xchg
xor
push
ja
fs
mov
sub
fwait
jle
sar
inc
jl
fcomp
mov
mov
dec
ds
push
in
mov
cmp
xor
loop
imul
cmps
mov
xor
stos
je
outs
ret
(bad)
cmp
leave
adc
mov
cmps
data16
inc
add
mov
fmul
xchg
(bad)
std
mov
sub
add
sti
dec
push
daa
xor
mov
dec
fs
ror
scas
inc
lods
out
mov
cli
mov
pop
mov
pop
idiv
cmp
jmp
or
outs
cmp
pop
mov
je
cmp
push
dec
dec
ins
ins
test
sar
sub
sbb
scas
adc
cdq
pop
jb
xor
inc
mov
addr16
arpl
mov
hlt
fild
and
scas
mov
push
xor
out
test
test
lds
dec
into
xor
push
mov
bound
jl
xor
inc
fidiv
fidiv
adc
mov
in
adc
cld
mov
sbb
and
scas
adc
push
sar
sub
push
inc
push
mov
mov
xchg
lds
dec
adc
pop
mov
aaa
(bad)
mov
push
loopne
cmc
cli
icebp
iret
scas
or
dec
jge
pop
cdq
stos
imul
xor
and
mov
fld
mov
add
sahf
and
stos
call
fs
sbb
dec
sbb
test
gs
fcom
or
mov
les
mov
adc
int
cld
inc
or
add
loop
cmp
jecxz
shl
push
dec
push
pushf
pushf
jl
pushf
mov
imul
js
sub
nop
cwde
fld
ror
pop
popf
add
jmp
aas
push
and
popa
sahf
mov
rcr
jnp
movs
dec
or
test
jmp
loope
imul
jmp
dec
in
push
div
fmulp
inc
or
cmp
mov
cmp
fsub
pop
icebp
cld
mov
and
mov
mov
(bad)
sar
(bad)
jae
mov
es
or
xor
push
dec
sub
cs
inc
xchg
adc
inc
movs
sbb
jnp
add
les
out
neg
cmps
push
sar
mov
xchg
fdiv
shr
addr16
out
or
jg
aas
inc
pop
pop
mov
dec
xor
xchg
imul
lods
fbld
lods
adc
popa
adc
cmp
push
or
cli
out
fdivr
fs
mov
jbe
call
stos
push
ss
cli
mov
fmul
(bad)
aas
fidivr
pushf
sub
and
adc
mov
sub
adc
in
mov
test
fistp
pop
retf
and
xchg
popa
sub
jge
inc
(bad)
cmp
rcr
push
iret
mov
jg
out
and
in
call
mov
mov
std
mov
in
inc
and
ret
repnz
sbb
inc
mov
xlat
aam
dec
or
mov
pop
call
add
into
sbb
icebp
dec
out
xchg
jo
inc
bound
retf
pop
xchg
pop
jl
mov
aaa
repnz
or
jmp
movs
out
push
mov
test
push
cmp
adc
ret
pop
adc
outs
adc
cmp
fisub
in
mov
or
mov
jge
xchg
call
inc
mov
in
mov
in
mov
je
inc
leave
or
jmp
dec
adc
in
push
aam
jp
xor
inc
nop
pop
jo
fdivr
jbe
popa
push
lahf
or
adc
mov
sub
sahf
ret
xchg
pushf
xor
xchg
jp
mov
push
inc
loope
fst
das
xchg
xchg
sbb
dec
jmp
in
les
xor
inc
loop
daa
dec
cs
xor
loopne
or
jne
and
(bad)
push
(bad)
fnsave
icebp
mov
pop
lahf
xor
xchg
pusha
ret
pusha
and
outs
inc
bound
mov
leave
hlt
sub
in
mov
push
(bad)
sbb
cvtdq2ps
out
xor
inc
push
test
dec
mov
xchg
mov
dec
rcr
das
lock
in
inc
pop
es
push
daa
lock
sub
mov
shl
push
sbb
mov
movs
xchg
cld
stos
mov
(bad)
dec
fidivr
adc
push
jmp
ja
imul
or
addr16
add
test
mov
ins
call
mov
dec
daa
rol
cmp
jne
sub
sbb
repz
cmp
scas
stos
jne
jnp
xchg
fistp
cmc
adc
fisttp
fwait
in
pop
out
mov
outs
ret
into
(bad)
(bad)
push
dec
sti
(bad)
fidiv
inc
test
adc
pop
hlt
es
aam
data16
call
shr
fnstenv
popa
sub
fiadd
pusha
stos
jecxz
ins
push
sti
ret
xor
movs
ja
retf
mov
mov
sub
jecxz
push
icebp
cld
adc
ret
pop
rcl
ins
jmp
xor
loope
add
fs
test
sbb
fs
and
push
(bad)
rol
xchg
pop
lock
dec
ret
xor
into
cmp
cmp
pop
pop
fidivr
mov
cli
out
enter
daa
and
dec
xchg
aad
loope
ret
and
or
(bad)
jno
cmp
cs
rcl
mov
fcomp
sbb
add
dec
sub
add
adc
mov
(bad)
ds
bound
lods
xchg
ja
mov
add
bound
cs
mov
inc
dec
xor
ins
jl
popa
or
je
jg
jg
aaa
jno
shr
xor
loope
shl
rcr
ret
xchg
push
scas
(bad)
add
adc
jl
sbb
mov
sti
aad
repz
mov
mov
mov
cli
xlat
mov
mov
and
gs
cmps
xchg
cmps
movs
mov
xor
scas
fimul
in
cmp
stc
pop
fsqrt
adc
imul
add
inc
cld
jnp
enter
jmp
sub
xchg
aad
mov
ss
sbb
cmp
sar
mov
adc
in
rcr
sar
pop
xchg
fisubr
pop
pushf
mov
cmps
mov
icebp
mov
jo
cld
mov
loopne
fisttp
xor
lea
xlat
clc
bound
mov
retf
add
(bad)
stos
sahf
adc
inc
jne
sbb
xchg
lods
fcom
or
and
push
mov
popa
test
cmp
arpl
pop
jg
dec
push
ins
sbb
mov
inc
cdq
cli
popa
pop
jb
fisttp
push
jge
jb
xchg
cmps
push
js
retf
aad
push
stos
or
(bad)
aas
and
mov
icebp
rcr
adc
mov
mov
push
mov
mov
repnz
fisubr
jmp
leave
sbb
das
jno
cmp
sti
add
popa
cmp
(bad)
cmp
push
pop
xchg
and
aas
add
icebp
xchg
push
scas
lahf
lahf
or
add
xor
mov
or
in
into
out
xchg
mov
mov
jg
icebp
mov
push
jecxz
jbe
pop
cmps
xchg
nop
sti
jle
xchg
nop
iret
xchg
mov
test
movs
ins
test
xchg
jne
cli
pusha
dec
fld
loop
(bad)
fstp
test
pop
inc
mov
retf
pop
repnz
shr
repz
sbb
cmps
add
xor
ret
inc
inc
popa
in
inc
loopne
inc
stos
js
outs
ror
cmp
jg
call
adc
sub
test
push
rcl
sbb
xor
movs
push
mov
cmc
in
je
int
pop
shl
mov
std
test
or
enter
and
ins
test
hlt
lahf
es
shr
jmp
inc
jmp
fcomip
xchg
movs
jb
sub
adc
dec
aad
jno
dec
mov
or
repz
jmp
push
repz
sub
pop
mov
jns
and
inc
jne
sub
mov
sub
repnz
pop
or
call
jno
into
jl
xchg
sub
iret
and
pop
in
jnp
add
fisttp
mov
stc
out
sar
mov
iret
pop
ss
mov
cmp
adc
adc
lods
xchg
cmp
das
push
inc
cld
cmp
inc
(bad)
shl
cdq
stos
popf
add
xor
out
js
and
xchg
inc
cmp
cmp
mov
jno
loope
add
jecxz
add
ins
pushf
sub
ret
sub
(bad)
cdq
fst
sar
push
add
in
ror
test
stos
jge
sub
cmp
mov
inc
je
imul
rcr
lods
mov
mov
xchg
push
pop
test
jae
test
lock
adc
(bad)
ins
adc
xor
cdq
dec
ins
lds
pop
jmp
loope
pop
add
jp
inc
ds
into
gs
cmp
aas
bound
lds
fadd
sub
mov
adc
aas
add
adc
inc
jmp
in
push
mov
inc
out
pop
cmp
dec
cmp
idiv
(bad)
sti
mov
mov
loope
or
jmp
adc
and
cmp
popa
xor
ret
jns
sub
inc
xchg
popa
adc
dec
adc
popa
loopne
fsubr
test
dec
stos
xor
(bad)
retf
outs
test
stos
lahf
je
pop
(bad)
retf
adc
das
neg
xor
gs
div
and
xchg
xor
jmp
adc
sbb
rcl
or
jb
mov
push
xor
(bad)
shr
xchg
jnp
jbe
bound
cmp
sbb
add
(bad)
mov
add
cmp
out
and
call
repz
cld
lds
ins
xor
aas
pop
xor
data16
pop
fwait
or
les
mov
jne
cmp
fst
cli
mov
pop
fs
mov
dec
xchg
or
inc
mov
push
push
adc
push
xor
sbb
inc
sub
push
add
jl
jg
sub
jbe
jl
rcl
int
adc
jnp
adc
ins
test
pop
sub
adc
(bad)
pop
adc
mov
add
inc
push
dec
sub
es
cmps
addr16
sbb
leave
xor
push
neg
(bad)
cld
scas
and
dec
xor
daa
cmps
jae
mov
add
sub
clc
and
out
hlt
push
cmp
pop
cmps
cld
sub
push
fs
or
pop
sub
sbb
fst
(bad)
fdiv
popa
push
call
xchg
clc
jmp
out
mov
movs
pop
lahf
jle
std
ds
jno
push
pop
push
mov
in
cli
mov
stc
imul
inc
cmp
fstp
jne
or
ins
xchg
or
(bad)
(bad)
lods
js
jecxz
cmc
in
push
imul
add
cmp
bound
xchg
jne
rcr
in
jae
xchg
push
nop
mov
lds
repnz
enter
jnp
inc
adc
pop
movs
dec
(bad)
lea
lea
jb
mov
fst
pop
xor
pop
push
inc
sub
js
add
test
mov
pop
popa
mov
ins
scas
cld
push
xchg
(bad)
fsub
sar
dec
retf
in
mov
ds
sar
mov
sbb
ss
sbb
xor
push
in
clc
mov
cmp
mov
jnp
out
packuswb
out
pop
sub
pusha
(bad)
in
jns
sar
push
bound
cli
ret
and
mov
adc
mov
mov
pop
fdivr
inc
inc
or
lods
xchg
jp
xor
in
fst
jmp
xchg
inc
cmp
call
sub
xchg
lds
loope
mov
jns
das
xor
aad
pusha
cwde
mov
add
in
or
cs
cmp
(bad)
cld
dec
cmp
mov
pop
rol
ficomp
jne
and
aam
imul
pmulhuw
mov
leave
xchg
pop
xchg
data16
cmp
rcr
ss
imul
xor
sub
cmps
loopne
pop
pop
ret
and
push
in
cwde
ror
mov
jne
dec
xchg
inc
or
icebp
pop
mov
mov
push
pop
xor
fnsave
loopne
fisub
in
les
arpl
bound
cmps
jl
test
sbb
aam
and
in
call
repnz
push
popf
lods
fist
mov
xchg
adc
lea
(bad)
cmp
or
jge
movq
test
shl
xchg
push
jmp
dec
ja
cld
test
mov
call
clc
jo
ror
push
mov
call
scas
mov
or
lods
scas
dec
bound
pop
mov
pop
push
xlat
mov
not
jl
out
cmps
sahf
repnz
xchg
out
loopne
or
pop
arpl
les
fistp
ret
mov
ins
inc
test
nop
test
mov
mov
inc
sbb
or
cmc
dec
aam
fstp
xor
mov
push
jmp
sub
std
add
int
push
es
test
sar
rcl
inc
int
rcr
mov
daa
push
imul
daa
lods
add
out
fisttp
cmps
pop
loope
cs
push
mov
(bad)
push
mov
scas
iret
pop
fisub
hlt
xchg
push
int3
rol
out
and
push
out
test
adc
into
xchg
jmp
(bad)
clc
cmc
int
mov
push
cmps
push
mov
mov
mov
push
in
pop
fwait
pop
jmp
jb
sub
sub
out
xor
stos
test
call
mov
pop
ret
popf
jl
out
push
(bad)
scas
gs
in
add
jb
nop
jbe
call
mov
or
(bad)
adc
hlt
dec
jecxz
push
add
and
sub
jne
outs
pop
movs
lahf
into
dec
dec
add
loopne
repz
push
data16
rol
popf
ret
sbb
bnd
xor
dec
in
imul
and
test
and
xchg
sbb
mov
out
scas
pop
dec
ins
or
or
dec
mov
push
(bad)
(bad)
add
push
push
inc
dec
mov
adc
or
leave
xchg
push
(bad)
xor
push
je
aaa
xor
in
in
(bad)
in
fisubr
pop
pop
dec
out
out
loop
loope
mov
vcvtdq2pd
pop
xchg
xor
mov
call
dec
sbb
call
inc
pushf
cmc
mov
pop
push
gs
xlat
outs
fdivr
mov
inc
pop
push
popf
mov
or
jl
xor
jecxz
inc
inc
test
out
imul
push
fst
push
movs
pop
push
data16
pop
lock
xor
es
add
js
pop
pop
movs
enter
fld1
(bad)
out
scas
mov
mov
les
in
push
mov
scas
loope
inc
mov
fst
sub
push
pop
scas
jmp
push
imul
cmp
call
clc
jmp
pop
xor
in
mov
inc
div
inc
mov
push
in
rcr
mov
loope
in
imul
lock
pop
sub
jle
jb
inc
std
xchg
mov
shl
movs
js
cmp
cmp
bound
fdivr
mov
jmp
cmc
pushf
int
outs
lds
outs
mov
test
dec
add
arpl
inc
mov
cli
push
or
xchg
in
pop
dec
mov
(bad)
aas
cmp
mov
in
stos
inc
mov
leave
enter
inc
or
fmul
and
test
pop
mov
icebp
xor
loopne
imul
es
out
ins
add
das
and
inc
ret
pop
dec
push
push
sub
sbb
adc
enter
dec
data16
xor
fs
jl
jns
push
jmp
pop
imul
cwde
fsub
xchg
sub
shl
cwde
add
std
imul
sahf
xchg
les
jge
mov
mov
pop
cmps
cmp
test
dec
pop
jno
ss
jmp
and
sbb
std
jle
inc
mov
cmp
aam
out
lahf
jne
lods
push
mov
mov
or
mov
cld
cmp
test
jp
push
pop
int3
call
xor
xor
iret
xchg
dec
repnz
ds
jb
sbb
sbb
retf
xchg
mov
fmul
jnp
retf
out
(bad)
loopne
rcl
scas
loopne
push
in
popf
push
hlt
push
(bad)
jno
mov
jo
js
cld
scas
inc
push
xchg
pop
movs
mov
jg
mov
cmps
add
test
(bad)
aad
jge
into
pop
push
and
xchg
mov
mov
ds
popa
sub
xchg
cmp
aaa
(bad)
cmp
inc
(bad)
repz
xlat
mov
scas
jne
sbb
sub
pop
sar
and
movs
sbb
movs
jnp
xor
mov
cld
pushf
sbb
adc
push
mov
lock
(bad)
ficom
jns
lea
fadd
pop
jbe
mov
adc
lea
adc
xor
loop
pop
push
push
iret
dec
dec
rcl
std
and
and
add
adc
leave
jmp
outs
mov
xor
cmp
mov
std
or
xchg
into
cmp
fcmovbe
aas
iret
pop
hlt
xchg
xlat
sub
lods
aaa
mov
xchg
sub
inc
push
push
ja
stc
mov
fmulp
retf
test
add
cmp
or
lods
fs
std
xor
imul
xor
adc
outs
push
cli
sub
jns
add
fstp
pop
mov
pop
nop
pop
mov
push
call
push
mov
mov
xchg
out
ins
adc
jmp
ds
jp
xchg
push
cmp
scas
mov
cmps
adc
das
(bad)
jb
sti
js
xchg
in
cs
mov
dec
outs
pop
xchg
scas
inc
xor
(bad)
pop
not
lea
sub
pop
or
sub
shl
mov
xor
(bad)
cmc
mov
or
dec
cld
fstp
out
inc
(bad)
cli
mov
out
fwait
lods
loopne
add
mov
push
dec
fld
cmc
sub
lods
loope
dec
adc
ffree
setg
or
adc
mov
jl
(bad)
(bad)
sti
xchg
ss
xchg
aad
adc
push
mov
das
daa
lods
nop
es
in
mov
out
jp
xchg
sahf
lahf
sti
arpl
icebp
(bad)
adc
ins
mov
stc
and
retf
sbb
loopne
jg
cmp
push
mov
js
push
bnd
les
in
push
ja
mov
xchg
xor
cmp
xchg
sub
sbb
pop
mov
mov
(bad)
mov
(bad)
inc
adc
aad
lods
test
int
jge
pushf
xor
ret
mov
and
fs
sysexit
rcr
icebp
jg
loope
ja
or
aam
fmul
lock
mov
cmps
lock
out
sbb
sbb
sti
mov
push
inc
ds
add
inc
icebp
leave
push
mov
imul
fcom
mov
fadd
mov
ret
pop
aaa
cli
sub
movs
and
adc
out
adc
push
fiadd
and
pop
daa
mov
sbb
add
xor
sub
inc
pop
cwde
js
dec
mov
inc
sbb
pop
xchg
push
lock
mov
adc
pop
ds
pusha
mov
in
popa
out
into
mov
dec
push
aaa
mov
pop
les
or
sub
cmc
cmp
adc
ds
aad
fsubp
rcr
and
fisubr
ins
sub
out
ficom
mov
rcl
add
loop
int3
cmps
dec
das
in
xor
push
mov
jecxz
in
jmp
xor
jecxz
mov
mov
mov
and
ror
dec
add
and
(bad)
pop
dec
clc
xchg
mov
shl
mov
jo
fwait
(bad)
push
cs
call
push
dec
pop
je
adc
xchg
and
add
test
jp
rcl
(bad)
push
call
jns
and
jmp
pop
js
or
or
mov
lods
xchg
and
mov
test
xchg
xor
mov
rcr
pop
ficomp
jl
call
rol
cmp
cmp
jge
jo
in
and
sbb
or
adc
retf
sbb
sub
jbe
iret
pop
pop
lea
dec
or
jae
popf
arpl
mov
fadd
shl
jae
mov
in
pop
lds
inc
outs
xchg
push
and
add
imul
call
mov
cmp
ret
mov
nop
cmp
lods
mov
cdq
mov
adc
scas
pop
mov
imul
jnp
xlat
pop
jmp
jmp
cmps
mov
shl
mov
pop
jae
cmp
cs
mov
mov
lea
adc
movs
lock
inc
movs
out
dec
jae
jns
push
setae
out
inc
jne
and
mov
xchg
sub
push
(bad)
inc
in
dec
push
lahf
hlt
es
add
push
push
inc
sbb
pop
imul
cwde
in
mov
into
jge
btr
xor
and
dec
mov
mov
dec
push
cmp
pop
ja
cmps
mov
ins
pushf
inc
call
jle
dec
mov
lock
and
add
imul
cwde
or
in
fadd
ins
(bad)
adc
jl
mov
mov
loop
sub
js
add
cmp
push
into
xchg
out
fwait
out
mov
xor
add
loopne
and
movs
arpl
jl
push
add
addr16
mov
sub
fs
adc
cs
mov
cdq
test
mov
nop
lods
mov
nop
cmc
pop
lock
xchg
aas
mov
je
mov
mov
jp
adc
ins
mov
dec
in
bound
loopne
cli
stc
and
icebp
adc
and
pop
push
call
jp
dec
inc
shr
out
rol
and
outs
mov
test
push
mov
(bad)
adc
jmp
or
mov
inc
pop
and
rol
or
sahf
or
mov
in
leave
lock
sub
out
inc
clc
out
jno
add
imul
xchg
repnz
or
jecxz
shl
iret
push
loope
mov
in
mov
xchg
(bad)
in
ror
popf
xor
inc
pop
jl
js
mov
xchg
or
xchg
inc
movs
mov
fst
bswap
out
es
or
mov
fwait
stos
add
adc
add
push
stos
adc
fsubr
std
popf
adc
cmp
or
fs
mov
test
outs
(bad)
cmps
pop
sbb
mov
sbb
or
xor
adc
adc
or
pop
dec
movs
ss
add
mov
sbb
(bad)
dec
xchg
sbb
mov
mov
hlt
lods
outs
mov
rol
movs
mov
sbb
push
pop
(bad)
icebp
jecxz
xor
dec
sub
inc
mov
xor
pusha
jb
mov
or
inc
push
ins
fisubr
inc
dec
fldenv
movs
sbb
xor
cwde
mov
push
xor
inc
mov
dec
push
adc
int
push
pop
dec
in
xlat
pop
mov
push
jg
jl
sbb
arpl
popa
add
out
scas
add
xor
add
pop
loope
pop
out
sahf
xor
cwde
repnz
mov
inc
clc
gs
cmp
sbb
stos
test
in
test
lahf
sub
hlt
pop
adc
call
fsub
stos
sub
(bad)
imul
sbb
shr
pushf
adc
or
pop
ins
shl
mov
enter
mov
lods
pop
loop
out
das
aad
push
mov
xchg
fiadd
dec
idiv
xor
xlat
xchg
es
lds
aas
lods
mov
ja
sar
mov
xor
adc
aad
xor
or
sub
loopne
jg
in
push
sub
adc
add
lock
pop
mov
inc
sub
cwde
enter
jecxz
inc
push
div
add
fist
(bad)
mov
inc
push
sti
jne
(bad)
lds
jnp
jle
sub
dec
call
dec
stc
lods
and
add
pop
or
(bad)
imul
dec
and
dec
fs
cmp
retf
bound
xor
ret
dec
mov
mov
dec
add
jecxz
sub
fld
mov
pop
data16
pop
out
aas
test
sbb
add
cmp
les
and
add
mov
cld
lods
or
push
rol
inc
idiv
addr16
or
out
and
jbe
in
push
lea
xor
dec
mov
pop
ds
jb
pusha
pusha
stos
ja
adc
mov
cmp
dec
or
inc
sbb
inc
sub
call
rcl
iret
pop
or
jecxz
out
rol
mov
cmp
je
jmp
in
xchg
fidivr
jmp
xchg
or
inc
pop
dec
dec
pop
loop
add
dec
retf
repz
loop
and
into
pop
leave
jl
push
ret
jb
pop
dec
ret
push
pinsrw
ror
cmp
xchg
into
push
push
adc
fwait
xor
fucomp
cdq
mov
es
gs
stc
pop
push
mov
das
jae
dec
mov
leave
loop
cld
div
adc
dec
scas
test
mov
out
push
hlt
jl
adc
movs
mov
sti
dec
scas
ja
gs
bound
jl
cmp
das
dec
pop
aam
add
sahf
and
shr
ja
xchg
or
(bad)
jmp
lods
test
das
dec
pop
jne
cli
cwde
sbb
fwait
mov
pop
adc
cmp
cmp
sub
(bad)
push
popf
adc
and
jb
push
(bad)
pop
lods
add
mov
(bad)
dec
pop
mov
ss
movs
aad
mov
das
retf
jo
call
mov
sub
test
dec
jno
jae
xor
outs
daa
nop
inc
(bad)
cdq
test
xchg
test
xor
mov
ins
inc
cmp
sbb
sbb
add
push
mov
mov
inc
shl
add
sub
scas
mov
xlat
je
and
add
das
aaa
cmp
loopne
cdq
add
push
pushf
mov
adc
lds
inc
pop
ins
stos
scas
cld
mov
cmps
pop
mov
pusha
inc
dec
mov
pop
xor
xchg
sti
mov
fwait
bound
push
cmp
cmp
jl
jp
out
mov
std
push
repz
xor
add
loope
repnz
add
and
stos
pushf
adc
pop
sub
mov
retf
aaa
je
cld
pop
pop
ja
jno
sbb
mov
inc
xchg
push
jg
movs
in
movs
mov
mov
stos
popf
mov
mov
(bad)
stc
in
xor
or
js
push
mov
iret
inc
push
pop
bound
adc
into
enter
sbb
data16
imul
fild
aas
ja
loope
inc
jecxz
mov
ror
sbb
add
add
cld
test
lahf
cmc
test
inc
cmp
retf
push
lahf
mov
xchg
sar
xchg
inc
repz
mov
xchg
shl
movs
out
add
pop
cli
lahf
loop
nop
lods
movs
jmp
shl
sub
data16
adc
push
(bad)
je
xchg
or
movs
adc
xchg
jns
(bad)
aas
sbb
aas
not
out
arpl
in
js
push
xor
pop
pop
mov
lods
jge
aaa
inc
sub
jmp
clc
scas
dec
xor
dec
(bad)
loop
inc
jl
sub
in
or
ins
mov
ja
fcomp
test
mov
test
fs
ds
jmp
jmp
out
add
jle
mov
das
and
nop
sbb
jbe
mov
ins
push
add
mov
out
jmp
je
stos
retf
and
xor
sub
or
aaa
pop
jae
scas
push
xchg
mov
inc
test
cmp
inc
data16
mov
aad
pop
repnz
in
mov
sub
or
add
(bad)
stos
or
push
lock
sbb
pop
inc
pop
xchg
aam
mov
pop
cmp
add
nop
push
mov
fs
rcr
outs
mov
or
fisub
je
sbb
and
inc
mov
push
cmp
push
(bad)
push
data16
imul
fld
xchg
xchg
(bad)
fcom
cmp
lods
jo
and
repnz
fs
dec
xchg
test
shr
shr
lods
stos
imul
lock
or
inc
(bad)
out
sub
test
mov
stc
out
xor
inc
push
fwait
xchg
dec
out
push
imul
daa
into
xchg
xchg
cs
cld
lods
lods
out
loopne
fmul
jmp
xor
iret
imul
and
mov
daa
not
fistp
or
out
sbb
in
pusha
fbld
ins
outs
jp
cmp
test
or
fild
pop
xor
or
or
add
out
and
sub
push
sti
adc
jmp
outs
dec
sbb
fsubr
jmp
inc
js
(bad)
clc
mov
lea
sbb
imul
call
in
rcl
rol
in
in
repz
xchg
(bad)
cmp
rol
jmp
mov
in
sub
je
out
pop
xor
push
push
in
jns
out
int3
add
call
cli
dec
add
loope
daa
xchg
aas
inc
fwait
push
mov
add
jo
leave
push
cmp
movs
out
outs
jb
push
push
xchg
mov
fidiv
(bad)
sub
imul
out
push
xor
sbb
xor
mov
nop
test
cld
int3
mov
fwait
(bad)
dec
test
daa
sub
xchg
fldenv
mov
in
sub
mov
jecxz
jbe
mov
aas
xchg
addr16
pop
dec
push
inc
pop
mov
push
xchg
jns
cli
inc
push
(bad)
pusha
add
xor
pop
xchg
adc
jmp
imul
mov
cmp
adc
sub
add
xor
repz
mov
cdq
shl
inc
jge
pop
stos
test
mov
xchg
xor
jl
test
pop
xchg
inc
jb
mov
pop
lahf
push
or
jmp
ins
and
dec
cli
inc
(bad)
ror
mov
test
add
pusha
and
mov
into
ins
test
adc
cdq
jns
adc
xor
add
lock
xchg
(bad)
jb
dec
push
jno
sub
retf
bound
mov
sbb
sub
nop
movs
lods
in
addr16
out
mov
jnp
push
pop
lods
add
or
inc
xchg
xchg
push
pop
cli
jle
cmp
out
jmp
xor
adc
inc
mov
(bad)
pop
fwait
push
mov
bnd
in
mov
das
add
push
xchg
aam
push
shr
mov
xchg
inc
test
popa
mov
xchg
cmp
mov
inc
add
xor
inc
(bad)
xor
mov
sbb
daa
pop
inc
adc
das
int
pushf
sub
emms
pusha
xchg
jge
std
dec
lds
push
fwait
adc
mov
iret
aad
popf
jmp
das
nop
pop
in
sti
push
outs
(bad)
dec
arpl
xchg
out
add
xchg
cmc
stc
sbb
jnp
mov
repz
sysexit
int
and
inc
add
pop
adc
(bad)
enter
adc
xor
ret
fdivrp
dec
loop
jmp
cmp
push
sbb
scas
je
aam
loope
add
pop
test
jns
adc
dec
rcl
jae
callw
movs
xchg
push
sub
popa
xor
or
mov
lods
add
lock
push
addr16
xchg
add
fdivr
xlat
ror
data16
repz
cmc
push
je
(bad)
scas
in
dec
push
cmps
xor
movs
pop
dec
jl
jmp
std
cld
les
and
mov
xor
pop
pop
loop
ret
(bad)
jmp
fisttp
add
push
add
mov
sbb
adc
je
pop
(bad)
xor
lods
sbb
jge
sub
pushf
addr16
pop
xor
adc
mov
call
adc
retf
mov
mov
cmp
or
or
outs
cmc
xchg
cmp
(bad)
cmc
dec
cld
jbe
dec
add
outs
shl
mov
mov
push
mov
pop
inc
pop
xchg
sub
add
dec
imul
pop
jecxz
push
out
fwait
sahf
sbb
push
(bad)
mov
stos
shl
das
xor
int
test
ds
cmc
jno
xor
xlat
sbb
test
or
ds
lahf
iret
arpl
sbb
sbb
inc
nop
cmp
out
addr16
push
aam
sbb
jno
pop
or
cmp
jne
add
iret
sub
cwde
movs
add
and
jg
dec
pop
push
pop
lods
(bad)
jbe
sbb
xchg
cmp
mov
mov
popa
mov
fwait
inc
inc
xchg
lea
jge
cmp
jae
sahf
mov
add
add
sub
or
xor
mov
lea
cmp
int3
or
or
cmp
and
cmp
addr16
add
sub
dec
pop
cmps
fcomp
mov
push
mov
out
push
jge
icebp
push
(bad)
jp
loopne
inc
jmp
adc
out
nop
(bad)
shr
sahf
shl
(bad)
push
adc
adc
cdq
xchg
add
xchg
stos
fdiv
hlt
jge
xor
dec
fwait
pop
out
add
(bad)
in
fstp
xor
pop
mov
push
mov
mov
stc
fwait
pop
xor
push
sbb
sbb
outs
iret
into
add
jb
dec
(bad)
int3
xor
dec
in
in
dec
pop
sbb
push
in
mov
ret
push
mov
fwait
and
test
sar
outs
mov
jns
xchg
push
(bad)
push
dec
repz
jne
pop
jb
mov
inc
mov
popa
sub
sub
bound
adc
retf
ins
push
cmp
imul
(bad)
lock
jne
mov
push
div
hlt
jecxz
inc
adc
xchg
or
jmp
test
jbe
add
fcmovnu
data16
cli
cmp
mov
mov
sbb
pop
and
pextrw
add
sub
scas
dec
(bad)
and
xchg
cmp
movd
imul
cmp
pusha
adc
xor
stos
sub
cmp
push
rcr
retf
aaa
call
gs
add
sti
loopne
xor
sub
sbb
jb
fisub
jo
xchg
mov
mov
xchg
dec
ja
(bad)
imul
mov
shl
fisttp
or
jmp
xchg
or
push
add
add
or
icebp
imul
test
pop
mov
arpl
add
sub
lods
inc
bound
popf
stos
leave
fdivr
imul
outs
stc
bnd
es
pop
enter
mov
scas
int
add
(bad)
mov
imul
ret
add
ins
outs
(bad)
pop
xlat
and
into
jns
mov
gs
data16
call
stos
hlt
jg
pop
push
pop
sub
jmp
retf
xchg
mov
sahf
fisubr
mov
loopne
mov
sbb
test
in
adc
packssdw
xchg
shl
sub
add
mov
adc
fwait
dec
dec
add
int
cmp
jle
cmps
adc
ds
xchg
out
test
(bad)
sbb
and
cmp
mov
xor
mov
ret
xchg
sbb
test
push
lahf
xchg
repnz
dec
dec
mov
shr
dec
cli
shl
(bad)
gs
cmp
dec
xor
aad
fadd
cmps
scas
and
test
popw
xchg
mov
xchg
inc
xchg
push
jp
add
mov
push
jb
inc
pusha
ja
inc
mov
stc
ins
push
push
repz
jae
gs
movs
add
jbe
xchg
popf
adc
sub
sbb
fild
adc
push
mov
(bad)
shl
and
push
inc
pop
cmp
sbb
add
push
jns
out
ss
jge
data16
aas
stos
xchg
shl
xchg
add
lods
ins
cmps
adc
adc
(bad)
pop
rcl
stos
xchg
fcmovnbe
repz
mov
scas
add
pop
repz
int
adc
test
jge
adc
or
sub
call
adc
aaa
jb
xor
add
jno
inc
cmp
les
mov
les
je
mov
sbb
jb
dec
jmp
rep
test
ja
lea
xor
xor
repz
push
(bad)
(bad)
icebp
mov
cmp
aaa
add
in
xchg
jl
mov
inc
iret
out
jb
fadd
xchg
xor
sbb
out
retf
repz
mov
push
dec
mov
ss
fdivr
pop
arpl
or
pop
dec
popf
xchg
pop
mov
dec
fsubr
cmp
ss
mov
shrd
loope
mov
mov
jle
call
sub
mov
test
out
add
icebp
rcl
push
mov
cs
mov
sbb
mov
inc
pop
retf
jb
fs
jp
and
or
jae
sub
cmc
mov
int
jecxz
into
cli
inc
out
pushf
xchg
cs
fdiv
and
setne
mov
inc
mov
inc
mov
add
cmc
jno
out
lods
mov
adc
xor
mov
adc
lahf
loopne
mov
push
mov
mov
and
mov
adc
cmovb
hlt
das
dec
dec
pop
xor
pop
and
mov
cmp
in
aas
sub
icebp
sub
repz
(bad)
mov
fld
in
adc
repnz
jbe
cmp
push
or
aaa
scas
jle
sbb
and
xor
test
(bad)
mov
xchg
and
sar
pop
pop
retf
fdivr
in
ror
jle
add
adc
jnp
fild
sbb
pop
call
xchg
movs
lahf
adc
scas
loop
ins
mov
jle
inc
pop
pop
outs
cld
and
xchg
push
add
or
ret
out
dec
xchg
push
(bad)
mov
shl
ds
xchg
jnp
sub
sub
pop
mov
xchg
jbe
lea
jns
in
data16
pop
test
xchg
repz
xchg
mov
xchg
mov
out
pop
mov
ss
adc
inc
das
pop
adc
mov
xchg
call
adc
movs
stos
jmp
sub
das
inc
mov
sahf
movs
xor
jo
scas
ins
cmp
and
pop
or
jl
ficomp
or
sbb
or
xchg
add
sbb
ficom
ror
repnz
mov
add
or
clc
stos
dec
gs
and
push
adc
mov
xor
mov
dec
ins
repz
sub
xchg
lahf
adc
shl
lods
shl
xchg
jle
push
jge
sub
dec
pop
xor
dec
test
stc
jge
outs
jp
je
pop
ja
dec
push
pusha
loopne
pushf
pop
jmp
push
dec
jmp
and
stos
repnz
push
xlat
add
push
ja
and
ss
into
jmp
popa
sbb
jne
aad
push
mov
jl
or
cmp
lahf
inc
fbld
mov
mov
movs
or
scas
out
mov
fld
sub
mov
and
xchg
outs
hlt
jge
retf
aaa
xor
clc
jne
dec
push
cmp
push
push
scas
sbb
cmp
xchg
pop
mov
aam
inc
out
pushf
mov
jb
stos
mov
mov
(bad)
int
aaa
or
jbe
mov
xchg
xchg
push
xor
ins
sbb
push
jl
mov
test
mov
add
es
sub
mov
mov
fistp
scas
cmc
and
movs
and
(bad)
mov
sub
cs
lahf
xor
mov
mov
or
push
add
fcomp
adc
xchg
adc
repnz
push
pop
mov
xor
aas
mov
popf
pop
adc
shl
cdq
in
ret
cmp
ds
pop
xchg
movs
cs
mov
mov
addr16
add
fsubr
out
stos
(bad)
or
mov
jmp
cmp
pop
scas
test
cdq
popf
or
stos
popa
test
jns
and
neg
gs
fild
dec
sub
nop
ror
popa
fucomi
cld
dec
sub
sbb
pop
arpl
aaa
(bad)
fwait
iret
ror
adc
cmp
sbb
xchg
push
int3
imul
(bad)
xchg
push
pop
xchg
stos
je
int
inc
js
data16
xlat
and
and
(bad)
mov
cmp
popa
ja
dec
xchg
movs
mov
loope
ja
mov
jnp
push
sub
ficom
cmp
mov
xor
iret
jae
cmc
out
xchg
mov
sahf
mov
rcl
(bad)
test
mov
ins
sub
add
pop
test
test
frstor
pop
xor
das
sub
cld
lock
push
adc
add
sar
mov
sbb
int
dec
inc
pop
sub
mov
mov
rol
retf
adc
dec
adc
inc
pop
pop
xchg
dec
imul
rcr
gs
xor
rcr
xchg
inc
repz
dec
pop
mov
test
jle
les
ins
adc
jg
push
ret
test
xchg
arpl
add
inc
leave
pop
cmps
ds
mov
imul
aaa
popf
mov
add
xor
push
mov
(bad)
sbb
fstp
adc
mov
mov
xor
adc
sbb
add
mov
dec
dec
push
fcomp
cmp
hlt
jmp
shl
sbb
adc
pop
call
pop
dec
fcom
loope
(bad)
frstor
retf
imul
xor
hlt
sub
in
data16
sub
jb
mov
test
stos
paddw
jae
bound
js
ret
cmp
jmp
or
sti
xchg
adc
cld
retf
test
fs
or
jl
mov
adc
imul
cmp
xor
mov
pop
sub
repnz
cld
add
push
sbb
xor
clc
retf
les
cvtpi2ps
lahf
xor
jne
cmp
mov
adc
pop
test
xor
cmp
dec
stos
mov
les
or
sub
imul
bound
or
ret
stc
xor
imul
ret
push
es
dec
repnz
add
sub
fs
(bad)
std
ins
lods
mov
lds
(bad)
push
cmp
out
push
scas
inc
xor
jae
scas
and
fs
scas
sub
push
inc
ins
in
ja
jl
(bad)
and
cld
in
push
loopne
cmp
xchg
bound
fsubr
iret
inc
sbb
int
mov
push
cmp
and
lock
ja
push
les
test
shl
xchg
cmp
mov
mov
fild
adc
xchg
lods
push
ja
mov
xor
sub
add
push
fisttp
jg
fisub
mov
stos
push
push
pop
mov
(bad)
mov
not
fdivr
push
pop
push
fwait
shl
push
test
pushf
imul
mov
loop
loopne
mov
icebp
adc
test
loope
jb
arpl
loope
out
cmp
xor
inc
jecxz
push
test
push
ss
adc
(bad)
ds
mov
addr16
aam
inc
push
mov
mov
mov
cld
outs
xor
push
mov
js
pop
mov
dec
mov
je
mov
test
scas
into
movs
stc
xchg
dec
push
pop
(bad)
out
or
mov
adc
daa
das
pop
jnp
lahf
(bad)
imul
xor
sbb
adc
sbb
fs
jp
jb
cld
xchg
and
dec
fiadd
ins
xor
clc
add
ja
jmp
mov
mov
mov
xor
cmp
adc
pop
in
les
mov
mov
ins
sbb
sbb
icebp
xchg
cmps
mov
(bad)
jmp
sbb
(bad)
xchg
inc
data16
std
test
dec
call
cmp
dec
inc
mov
xchg
mov
(bad)
out
mov
jne
pusha
(bad)
adc
addr16
in
cmp
mov
int3
push
adc
lods
sbb
mov
das
mov
mov
push
into
pushf
retf
fwait
adc
loope
rol
inc
daa
fst
call
dec
push
xchg
mov
add
fmul
ins
and
in
int
dec
xlat
repz
scas
jl
mov
and
push
sub
std
fdiv
sti
das
inc
lds
jns
xchg
sub
or
jg
pop
adc
sbb
lahf
(bad)
fwait
in
pop
push
test
loope
adc
fdivr
fstp
stos
xor
leave
push
dec
ret
div
pop
cmp
ret
ret
mov
xor
ret
pop
out
jb
bound
add
test
jne
push
sub
test
mov
imul
xchg
(bad)
add
shl
push
add
mov
xor
and
xor
imul
mov
aaa
aad
mov
and
iret
fcomp
retf
aam
adc
inc
lea
out
in
dec
sub
nop
ror
cli
retf
movs
test
mov
cmp
neg
movs
pusha
mov
adc
cmp
aad
test
pop
retf
inc
sub
clc
ret
mov
popa
push
aam
rol
lock
clc
add
dec
out
nop
pop
(bad)
ins
nop
cmp
lahf
mov
push
inc
lods
pop
call
hlt
cmp
sbb
bound
aaa
adc
jg
pusha
cdq
pop
sub
mov
es
mov
clc
scas
fwait
sbb
mov
jno
dec
loope
dec
test
mov
mov
add
retf
fld
popa
mov
xchg
test
sub
bound
push
leave
cmp
repnz
or
pop
imul
mov
adc
pusha
rol
stc
loopne
js
ins
or
mov
jg
xchg
repnz
ins
popf
rol
les
inc
xor
gs
fs
sahf
adc
dec
mov
or
xor
xor
outs
xor
pusha
es
test
inc
mov
imul
xchg
dec
mov
sub
js
push
mov
fst
call
leave
popa
mov
cmp
in
xor
daa
adc
pusha
ret
test
sahf
dec
inc
push
ret
fcomp
inc
sar
push
mov
mov
inc
je
bswap
add
cmp
pop
pop
jecxz
or
ficom
pop
in
out
ret
xchg
imul
dec
xlat
cld
ja
push
mov
sub
xor
cwde
fstp
jo
fistp
push
iret
pushf
xchg
jne
(bad)
popf
inc
mov
(bad)
push
cdq
les
sti
loope
cmp
out
fisubr
dec
mov
aad
mov
in
lea
add
add
sbb
(bad)
push
rcl
sub
mov
lock
mov
ja
pop
stos
xor
(bad)
pop
mov
hlt
iret
inc
scas
out
out
or
mov
pushf
mov
jecxz
inc
repnz
mul
loope
test
push
in
arpl
outs
adc
fadd
jmp
push
pusha
mov
push
retf
ja
adc
ret
icebp
xor
out
outs
mov
and
call
js
jmp
adc
in
add
xor
lods
es
shr
cli
dec
sbb
mov
(bad)
int3
aas
fistp
jb
lea
dec
retf
pop
and
xchg
(bad)
add
dec
mov
and
fld
xor
mov
inc
(bad)
xor
xchg
push
adc
iret
add
shl
lods
jl
shl
popa
pop
cmps
pop
pop
adc
test
ins
inc
sahf
jecxz
ins
pusha
sub
jmp
fisubr
out
outs
mov
adc
outs
ror
aas
push
cmp
inc
xchg
lds
scas
leave
push
dec
mov
pop
dec
add
scas
ror
add
adc
dec
out
test
lds
lock
mov
and
dec
mov
lds
(bad)
dec
push
test
push
ins
out
cmp
out
pop
aas
cld
sbb
(bad)
cmps
push
rol
jg
xchg
arpl
mov
(bad)
mov
aaa
add
ins
or
push
js
xor
enter
pop
enter
fs
stc
ja
shl
xchg
mov
test
fwait
add
(bad)
es
test
pop
outs
and
aas
jne
lea
pop
loop
add
dec
jo
xlat
jmp
sub
aas
jne
aas
inc
not
sar
leave
stos
retf
mov
mov
xchg
xlat
cmp
push
mov
movs
dec
and
cmp
fnstenv
inc
int
stos
jno
rol
jmp
pop
pop
mov
rep
std
rol
cmc
jmp
not
add
hlt
mov
pop
and
fwait
bound
and
mov
add
pop
push
iret
addr16
cs
mov
pop
mov
outs
hlt
xchg
pusha
das
pop
cmp
dec
jne
mov
cmc
xor
cmc
adc
(bad)
sub
fs
imul
jae
in
nop
data16
mov
aaa
stos
mov
xchg
mov
aaa
fnstsw
mov
mov
adc
inc
int
leave
dec
xor
jge
or
imul
jg
mov
mov
cwde
imul
popa
aad
jb
out
in
movs
pop
and
in
jo
loopne
jmp
xor
out
adc
sahf
and
scas
push
mov
imul
das
mov
ja
or
pop
sub
movs
test
mov
mov
xchg
xor
retf
daa
inc
xchg
pop
dec
mov
xchg
sub
jns
pop
imul
xchg
retf
jle
inc
imul
mov
jns
pop
test
lahf
xor
nop
fimul
out
loope
xor
adc
mov
mov
sbb
inc
push
iret
inc
sbb
cmps
daa
ret
push
pushf
inc
dec
leave
mov
sub
dec
rcl
push
stos
adc
xchg
and
push
pop
into
dec
je
jp
rol
push
cmp
jecxz
sub
push
aam
add
in
mov
and
or
sar
aam
adc
les
aas
inc
or
sub
je
pop
(bad)
mov
push
fwait
push
sub
xchg
adc
outs
xchg
push
fdivr
mov
mov
cli
lods
or
inc
cwde
stos
call
ss
xor
jne
mov
push
xchg
shr
push
sub
jmp
dec
jo
addr16
sub
(bad)
aam
lahf
scas
imul
cmps
push
mov
xor
int
scas
movs
imul
retf
frstor
pusha
adc
mov
fcom
sbb
xor
pop
mov
shr
out
js
loopne
mov
xchg
and
add
test
jnp
or
cmp
sahf
sahf
icebp
sbb
dec
icebp
out
xor
mov
inc
add
jb
scas
and
(bad)
cmp
leave
cmp
shl
fs
add
fisttp
mov
fnstcw
push
lahf
outs
mov
pop
push
push
leave
jmp
add
movs
fsubr
mov
inc
test
nop
sub
into
div
ins
dec
retf
bound
adc
jmp
shl
adc
fidiv
cmc
mov
lock
(bad)
ins
dec
inc
(bad)
sar
movs
pop
fwait
mov
into
xchg
xchg
mov
mov
push
clc
aas
loopne
mov
sub
pop
and
adc
shl
jmp
mov
mov
jl
adc
adc
out
icebp
out
popa
aam
dec
jmp
movs
inc
dec
and
xchg
cs
xchg
cmp
hlt
movs
mov
cmp
lahf
ins
fisubr
mov
add
push
jp
or
mov
jp
mov
(bad)
jmp
jg
into
imul
scas
gs
sbb
xchg
pop
or
push
test
dec
arpl
loop
pop
(bad)
mov
shl
in
out
mov
int3
cmps
dec
inc
shl
jmp
mov
das
sub
pop
jecxz
pop
dec
jne
xor
cmp
jae
not
mov
push
test
push
adc
ja
cpuid
lock
push
gs
sbb
push
jge
cmps
xchg
test
int
cmp
jp
mov
pop
in
cmps
inc
mov
aam
inc
outs
(bad)
test
mov
(bad)
lock
xchg
scas
xchg
mov
dec
or
mov
xchg
mov
arpl
dec
mov
mov
pop
push
push
and
lock
fstp
inc
test
dec
(bad)
shl
daa
and
fisttp
mov
xor
stc
in
les
cmp
aaa
fsubr
loop
repnz
push
jg
jg
loopne
xchg
fbld
pop
rcr
pop
and
rol
xor
xor
xchg
jl
xchg
sub
cli
hlt
sahf
mov
jecxz
in
inc
push
jge
xor
retf
test
xchg
push
int3
inc
adc
add
stos
hlt
mov
loop
stos
out
xchg
rol
push
push
jecxz
mov
mov
jbe
movs
mov
cmp
sti
add
aas
xchg
mov
out
repnz
cli
inc
sbb
call
or
xor
std
out
sub
mov
jle
in
rcr
or
jbe
adc
adc
cmp
jmp
push
aaa
hlt
outs
mov
push
jmp
xor
outs
in
idiv
cmp
mov
lea
push
paddsw
mov
mov
cmp
add
leave
adc
push
scas
or
mov
jb
les
(bad)
fisubr
shr
call
adc
fwait
jo
dec
fs
adc
or
cwde
dec
stos
hlt
or
jns
test
inc
add
fs
inc
pop
pop
cmp
fiadd
(bad)
fldcw
(bad)
ss
icebp
outs
sub
(bad)
mov
adc
loopne
mov
aaa
leave
sub
je
xor
pop
fild
fnstenv
lock
lods
inc
pusha
cmp
sbb
inc
ss
aam
rcr
mov
xchg
jno
ja
lods
in
adc
push
xor
inc
and
mov
or
(bad)
fdivr
fidiv
fadd
sar
test
push
xor
bound
mov
cmp
pop
(bad)
into
lahf
(bad)
scas
sub
xor
pushf
imul
(bad)
out
jns
mov
jno
jecxz
jge
or
xchg
sbb
pop
sbb
test
pushf
ror
sub
mov
push
cmp
xchg
in
(bad)
mov
push
(bad)
pop
mov
cmp
jns
pop
inc
rcr
aaa
outs
test
bound
dec
sub
in
push
ja
ja
push
xlat
mov
imul
pop
ss
leave
jmp
mov
mov
pop
mov
aad
lock
jge
aam
push
dec
xchg
retf
mov
dec
repnz
mov
sbb
cld
cmps
mov
cmp
(bad)
das
push
mov
inc
sbb
dec
popf
imul
outs
jo
shr
pushf
inc
mov
pop
ss
and
in
fild
xor
repnz
xor
push
or
xchg
push
pop
fidivr
test
lea
out
jne
dec
cmp
lea
push
popa
popa
push
test
ss
pop
std
sub
lock
pop
or
ds
and
arpl
and
jp
pop
movs
in
adc
push
stc
in
lods
in
stc
movs
das
pop
jo
adc
add
push
mov
aam
mov
xor
dec
cld
ja
xchg
sub
or
test
cmp
mov
mov
add
mov
lods
inc
cmp
lock
enter
or
shr
add
daa
dec
call
mov
mov
mov
push
movs
int3
(bad)
(bad)
xchg
retf
xor
add
movs
cmps
loop
or
dec
cmp
pop
aaa
add
stos
inc
ss
mov
adc
cmp
pop
out
sub
test
xchg
mov
mov
dec
movs
rcl
jnp
daa
push
mov
(bad)
sub
rol
add
pop
push
lods
repnz
sub
int3
push
cwde
jno
mov
lods
add
fadd
pop
icebp
in
xchg
lahf
cmp
arpl
xchg
inc
test
mov
dec
adc
mov
cli
ret
in
popf
pop
(bad)
fdiv
inc
dec
loopne
mov
pop
inc
xor
xchg
xor
fcomp
popa
xchg
mov
(bad)
jmp
cmps
mov
adc
pop
jle
push
push
or
cld
or
dec
dec
or
stc
mov
push
mov
movs
push
pop
lahf
stos
call
aaa
xchg
fst
pop
out
mov
push
inc
cdq
cli
xchg
adc
nop
dec
and
cmp
or
jp
cli
pop
ja
mov
test
bound
adc
pop
adc
fucomi
pop
fmul
popa
(bad)
sub
adc
jbe
ds
mov
jae
gs
in
mov
xor
test
xchg
call
cmp
jne
addr16
out
add
add
(bad)
jp
sub
fcomip
stc
(bad)
xlat
lods
mov
inc
jne
mov
jg
jnp
ins
aam
(bad)
and
hlt
dec
mov
dec
lods
sbb
mov
cmp
add
xchg
das
call
dec
dec
add
not
dec
repnz
ja
repz
fmul
jns
pop
ds
lahf
mov
jecxz
jae
aaa
sub
and
adc
sub
cdq
repz
in
mov
cmp
lahf
scas
mov
sbb
mov
out
push
push
test
add
repz
sbb
adc
mov
xchg
cmps
loopne
xchg
mul
xchg
pop
jne
mov
das
mov
in
adc
mov
das
jns
mov
js
or
sub
push
mov
jmp
rol
out
sbb
mov
jmp
es
sbb
sbb
jg
xchg
cmp
fimul
scas
xor
or
add
sub
push
popa
scas
add
std
out
out
inc
push
mov
addr16
es
pushf
in
adc
pop
nop
sahf
es
popa
aas
dec
xor
ror
mov
pop
pushf
stos
and
test
loop
cmp
(bad)
in
adc
and
mov
cmp
nop
(bad)
lods
ds
mov
repz
int3
or
ds
xchg
bound
sbb
into
adc
ins
aam
clc
pop
leave
ja
xor
aad
daa
lock
push
xor
mov
cmp
fist
mov
in
mov
imul
pop
sti
cmp
cmps
shl
rcr
xchg
cmp
je
sti
jnp
fs
mov
iret
shl
pop
adc
xlat
push
sbb
je
call
sub
pop
mov
xchg
icebp
fwait
adc
clc
shl
push
pop
adc
xlat
jge
in
push
shl
or
adc
das
sahf
les
or
sbb
imul
adc
ror
fst
retf
repnz
ss
loope
into
or
or
stos
xor
(bad)
pop
fucomi
clc
mov
addr16
(bad)
(bad)
pop
push
push
ins
int
retf
cmps
or
bound
rcl
push
out
adc
mov
aad
ret
jno
stc
xor
cmps
pop
inc
sub
jmp
push
xor
mov
jb
hlt
adc
sbb
je
adc
es
clc
cmp
ret
push
lods
bound
or
xor
sub
out
mov
scas
nop
add
dec
push
push
cli
mov
or
push
stc
push
cli
scas
in
inc
pop
popf
arpl
push
jle
popf
jle
jb
jno
cld
sub
scas
mov
mov
cs
and
arpl
mov
lock
lods
xchg
call
mov
outs
or
and
xchg
call
in
sub
pop
dec
lea
frndint
outs
ja
enter
and
or
fcom
das
adc
je
popf
leave
movs
and
and
test
ds
mov
mov
sub
call
int
fstp
xchg
add
js
mov
mov
mov
out
or
frstor
(bad)
mov
xor
mov
xor
add
mov
jmp
inc
arpl
movs
mov
mov
lds
fwait
cdq
sub
retf
or
pop
sbb
jmp
cld
sub
int
inc
inc
adc
pop
xchg
mov
xor
jb
push
ss
and
mov
enter
fucomip
ja
xchg
sbb
(bad)
cs
jne
jnp
aad
std
add
call
fs
xchg
(bad)
out
mov
pop
div
or
xchg
cmp
sub
cdq
mov
jmp
(bad)
data16
cs
loope
(bad)
sahf
sub
pop
or
mov
pop
mov
repz
xor
mov
test
ror
in
mov
mov
mov
jno
pop
sub
push
push
and
repnz
(bad)
cdq
jge
fcomp
cmc
lods
xchg
inc
rcl
cmp
jno
add
mov
cld
in
mov
cld
iret
std
or
sti
adc
inc
add
movs
sub
cmps
lods
call
repz
out
jb
dec
int3
or
fmul
ja
icebp
jmp
cdq
ficomp
out
jae
cmp
cmc
cli
cmc
les
stos
push
int3
sahf
clc
test
mov
loop
inc
imul
ror
or
xchg
call
retf
pop
sahf
mov
loopne
ins
popa
rcl
ret
dec
dec
fdiv
xchg
mov
mov
scas
lds
dec
(bad)
fimul
hlt
cmp
or
stc
jecxz
test
jb
pop
dec
push
pusha
pushf
xchg
sub
cwde
mov
leave
sub
pop
mov
rcpps
mov
popa
jl
shr
push
xchg
mov
push
(bad)
mov
push
les
ss
jle
cwde
jmp
stos
pop
add
outs
aas
push
xchg
dec
test
jg
idiv
loopne
rol
mov
lods
xor
dec
xchg
into
pusha
jo
aaa
inc
cmp
int
jnp
mov
stos
pop
cmps
push
cdq
outs
popa
push
ja
imul
ins
mov
mov
cmp
les
cli
mov
rcr
mov
cli
xchg
test
adc
or
cs
fild
imul
int
push
sub
dec
adc
xchg
inc
ret
gs
aas
iret
xor
lea
fstp
mov
xor
out
lods
popf
add
jle
mov
adc
pop
test
push
fisttp
pop
push
lahf
dec
push
mov
dec
repz
inc
pop
es
fbld
sub
div
jno
ret
mov
inc
jo
jae
adc
stos
stos
mov
fld
push
cmp
sti
les
rcl
push
pop
mov
push
imul
xor
pop
fwait
inc
pop
and
ins
addr16
lea
cmp
std
jp
ins
jb
(bad)
(bad)
and
in
mov
iret
cmp
xchg
cmp
retf
lock
aad
mov
nop
inc
jp
loope
ins
xchg
call
in
jo
xlat
cmp
adc
outs
ja
bound
adc
imul
movs
cmp
mov
rcr
xchg
add
adc
mov
mov
int3
pop
call
popf
xchg
stos
jg
and
pop
arpl
cdq
cs
inc
rcl
mov
mov
jmp
rcl
ds
fwait
loop
dec
(bad)
xor
mov
loopne
shr
cmp
movs
sub
ret
cmp
adc
xchg
cwde
mov
lods
cli
out
movs
aad
push
xchg
jno
or
push
xor
pop
xor
cmp
push
inc
cmp
retf
ss
in
je
pop
push
inc
sbb
test
and
ror
mov
mov
rcl
movs
(bad)
mov
xchg
push
xor
psraw
(bad)
push
in
or
enter
call
push
sbb
add
jecxz
inc
inc
sub
pushf
jg
cmp
out
js
sub
xchg
out
fs
cmp
stc
mov
mov
test
daa
push
(bad)
lods
push
and
imul
xchg
mov
fwait
lock
mov
inc
mov
mov
and
fild
(bad)
stos
push
(bad)
push
mov
sub
cmp
inc
ja
xchg
test
dec
mov
retf
int3
inc
pop
fwait
scas
pop
test
sub
inc
in
pop
(bad)
fwait
inc
sub
imul
push
mov
xlat
ror
add
mov
xor
push
pushf
lods
inc
fist
or
movs
adc
cmp
xor
sbb
inc
inc
pop
jb
out
rol
retf
mov
xchg
call
(bad)
call
jl
inc
sbb
xor
sub
adc
loopne
mov
sahf
sub
mov
(bad)
cmp
(bad)
xchg
and
add
or
pop
jbe
int3
ds
mov
clc
xchg
pop
ror
push
mov
popf
movs
mov
ss
jmp
lock
mov
or
es
sbb
cs
cs
ins
daa
fistp
mov
hlt
popa
jns
inc
les
ds
and
jp
imul
addr16
xor
xchg
loopne
cdq
sbb
scas
pop
xor
movs
jne
cmp
sub
gs
cmp
add
pop
or
and
cmp
test
cmc
mov
pop
push
mov
or
lea
inc
push
(bad)
int
mov
fs
pushf
int
das
into
dec
xor
or
(bad)
rol
xchg
or
fdiv
lds
jmp
stos
leave
and
mov
cmp
push
inc
sti
and
nop
loope
xchg
add
xchg
pop
in
sub
lds
ror
ins
cmp
cs
out
jne
xchg
outs
outs
es
xor
sbb
ret
lds
add
or
mov
cli
sahf
jae
mov
xchg
leave
retf
lahf
push
ret
cmp
and
cld
sub
mov
jmp
mov
ror
fistp
mov
jne
cld
enter
dec
fwait
fs
pop
fadd
inc
fiadd
mov
(bad)
icebp
imul
jle
push
mov
(bad)
pop
push
sub
scas
rcr
jb
dec
inc
and
sub
frstor
movs
sti
fld
mov
std
push
jecxz
sbb
imul
mov
xchg
jo
sub
inc
mov
xchg
dec
je
mov
mov
and
std
cdq
std
dec
sti
dec
imul
dec
pushf
sbb
sti
test
ins
aas
mov
outs
fimul
lds
sub
xchg
and
loop
(bad)
mov
jnp
ins
push
ss
adc
popf
inc
mov
mov
add
mov
out
jge
(bad)
ds
(bad)
jno
rcr
cmps
and
nop
mov
es
(bad)
cmps
add
mov
out
lock
sub
push
shl
and
or
and
retf
cmp
hlt
xor
fcom
enter
cdq
mov
call
ss
scas
mov
js
dec
icebp
cld
push
add
or
cmp
mov
cld
or
push
lods
test
loop
imul
data16
dec
loope
mov
pop
out
stos
movs
inc
hlt
or
push
mov
xchg
cmp
inc
out
in
mov
scas
ror
jb
test
jo
push
retf
ins
out
daa
cmp
adc
push
cld
adc
cmp
fsubr
lods
shl
shl
jne
fistp
jecxz
adc
push
adc
mov
ret
mov
fld
cmp
test
ret
in
jae
and
add
imul
movs
(bad)
int3
pop
push
xchg
or
pop
in
inc
mov
(bad)
pop
adc
ins
popf
sub
sbb
add
xor
xchg
add
mov
xchg
pop
sub
pop
stc
rcr
and
mov
ret
std
fld
push
mov
loope
mov
lods
mov
pop
pop
push
rcr
das
mov
mov
pop
jns
sbb
in
mov
inc
test
test
xchg
pop
jmp
or
or
and
lods
fmul
push
cmp
cld
mov
nop
mov
into
in
jp
xlat
sbb
pop
test
stos
mov
hlt
and
pop
mov
lods
and
nop
iret
cmp
mov
and
cld
pop
das
ja
loop
stos
gs
add
inc
sbb
xor
ss
sub
mov
or
ins
push
pop
pushf
push
aas
mov
imul
fwait
lock
(bad)
and
out
int3
jns
xor
sbb
or
xor
mov
add
jno
jo
mov
call
call
xchg
sbb
jmp
dec
imul
imul
stos
or
in
adc
dec
cmp
jmp
pop
(bad)
and
mov
mov
add
cmp
xchg
jl
sar
dec
scas
mov
jnp
xchg
mov
call
fdivr
hlt
xchg
and
adc
mov
in
or
pop
js
jo
pop
sub
loop
sahf
ja
jmp
or
push
dec
psubq
dec
rol
fcomp
dec
mov
mov
push
imul
adc
mov
shl
or
jp
imul
pop
xor
or
jno
pop
cli
or
jmp
outs
add
out
mov
pop
mov
pushf
clc
dec
ss
call
cmp
mov
jmp
adc
mov
or
push
mov
push
sub
push
ror
dec
inc
or
pop
jmp
movs
enter
mov
dec
ja
push
ja
pop
mov
dec
xchg
adc
fs
xor
and
dec
and
out
adc
in
je
pop
outs
push
imul
aas
inc
hlt
cmp
into
sbb
hlt
ja
les
pusha
mov
icebp
ret
loope
shl
mov
pop
mov
movs
icebp
call
popf
jns
jmp
push
push
ds
jno
pusha
sbb
rcr
push
inc
jmp
jl
cmp
jecxz
xchg
cmp
pop
xchg
dec
mov
ds
pop
or
and
pusha
or
sbb
adc
sub
dec
sub
jl
out
ror
(bad)
(bad)
test
loope
cli
sbb
(bad)
es
sti
lahf
mov
sar
dec
pop
stos
xchg
cmp
lds
or
sbb
pop
movs
dec
push
ins
(bad)
sar
mov
mov
push
pop
shr
add
rol
pop
xchg
mov
or
push
cli
jno
mov
jno
cmp
loope
mov
pop
int3
xor
add
mov
mov
push
xchg
rcr
sbb
int3
loopne
xchg
add
out
push
fnsave
and
mov
scas
inc
rcr
imul
and
cmps
and
leave
mov
xchg
dec
cmp
sti
shl
aaa
mov
outs
xchg
frstor
lods
inc
cmp
inc
lock
scas
lock
fiadd
das
loopne
xor
fs
push
stos
ja
test
sbb
pop
(bad)
xchg
push
jne
popa
call
call
push
ror
dec
(bad)
push
push
sar
lahf
mov
sub
in
mov
ja
sbb
xlat
in
in
or
ror
fstp
aam
jo
sbb
add
xor
jnp
jmp
push
mov
sbb
imul
div
jl
adc
shl
push
xchg
lahf
leave
loope
xchg
pcmpeqw
mov
push
mov
xchg
popf
(bad)
call
(bad)
in
ret
push
inc
lock
sub
ss
mov
lods
cmp
dec
aam
mov
leave
mov
xor
neg
mov
mov
int3
push
stos
push
or
cmps
mov
jo
and
mov
jae
int3
mov
repz
jmp
dec
and
clc
fwait
arpl
arpl
mov
je
lds
or
mov
cs
mov
dec
jl
out
jecxz
dec
ins
mov
and
ret
cld
push
psrad
retf
js
shr
ins
mov
or
push
les
jns
mov
mov
pushf
mov
xor
retf
pop
les
lds
jmp
sub
ret
and
cli
fst
push
push
xor
mov
xchg
movs
and
and
mov
aam
pop
clc
or
sahf
sub
int3
pop
bound
pushf
imul
call
cs
lds
or
fs
pushf
scas
lds
sub
pop
xchg
mov
or
jne
inc
xor
or
stc
jmp
aas
hlt
js
add
repz
in
xchg
rcl
jge
aas
sbb
or
ins
push
loope
sbb
pop
push
cmc
(bad)
push
jo
in
inc
mov
sbb
dec
repnz
inc
push
xor
xchg
movs
ror
mov
adc
cmc
sbb
retf
clc
adc
mov
pop
cmps
sub
mov
sub
loop
aaa
sbb
push
neg
out
inc
mov
mov
cmc
xchg
ins
(bad)
ret
jmp
fcom
loope
cld
xchg
push
jns
shl
or
cmc
sub
repz
lock
and
or
stos
sbb
(bad)
(bad)
lods
push
sbb
cmps
shl
test
adc
lea
sti
sbb
push
mov
cmp
imul
jg
mov
out
fsubrp
mov
arpl
mov
add
inc
push
mov
std
xlat
jno
and
xchg
mov
test
(bad)
loope
fdivp
inc
jne
aaa
xor
fst
mov
scas
cmp
jmp
pop
pop
loopne
push
rcl
cmp
pop
and
or
nop
mov
xor
scas
jne
cmp
into
sbb
cmp
or
loopne
push
dec
and
jmp
sub
repz
scas
xchg
or
ss
jle
push
jbe
inc
push
sbb
ss
pop
aam
mov
pop
rcr
ja
test
movs
sub
inc
fwait
mov
hlt
mov
and
and
and
mov
mov
xor
mov
dec
fstp
cmp
pusha
out
popf
add
retf
push
ja
out
xchg
xor
adc
retf
mov
sub
pextrw
lahf
mov
mov
loop
(bad)
pop
int3
adc
stc
cmp
gs
inc
mov
into
lahf
clc
(bad)
jae
adc
xor
cmp
jmp
sti
out
mov
xchg
sub
gs
inc
mov
push
out
cli
not
test
adc
daa
popf
(bad)
mov
call
mov
stos
fcom
mov
aam
mov
jbe
mov
clc
sbb
dec
das
outs
outs
mov
pop
push
sbb
push
mov
xor
imul
pop
imul
pop
jmp
scas
mov
and
xchg
in
out
rcr
add
fidivr
data16
sbb
ret
add
pop
jns
loope
lock
(bad)
lods
popa
jns
pop
pop
dec
xor
(bad)
mov
pop
dec
jecxz
xchg
cld
es
sahf
lea
in
and
mov
mov
push
je
std
xor
adc
mov
scas
xchg
add
adc
mov
xchg
mov
jb
in
mov
(bad)
in
or
push
sub
xchg
ror
arpl
daa
add
pop
fsubr
mov
out
inc
dec
mov
dec
jmp
sbb
(bad)
xchg
mov
bound
mov
in
xchg
(bad)
add
out
push
retf
ror
popf
mov
lds
(bad)
rcl
ins
mov
mov
aas
movs
push
std
ins
fxch
pop
jg
mov
or
enter
mov
dec
sub
push
lods
sub
jecxz
cmp
cld
retf
cs
lods
xor
inc
and
outs
lds
sbb
test
outs
inc
xchg
push
or
cs
pop
push
cmp
and
fnstcw
rcl
inc
push
push
dec
test
arpl
addr16
inc
adc
xchg
mov
push
or
pusha
dec
xor
inc
jl
into
mov
pop
dec
lahf
pop
out
hlt
cmp
mov
lahf
add
ds
aas
add
xchg
dec
retf
je
out
xor
sub
repz
sub
xchg
iret
popa
pusha
cmps
xchg
shr
cmp
jmp
leave
inc
jae
out
push
shr
mov
nop
xlat
sub
sbb
fsub
(bad)
and
dec
jne
mov
or
fsubrp
jns
arpl
loope
gs
add
imul
xchg
push
scas
cwde
stos
jl
fcomi
adc
pop
sub
xchg
aad
adc
daa
and
and
xlat
in
xchg
mov
push
xor
stos
cmps
xor
(bad)
inc
test
hlt
cmp
pop
xor
jp
shl
xchg
or
push
cmc
mov
addr16
mov
or
or
fdiv
int
scas
mov
(bad)
sub
mov
hlt
xor
pop
jno
push
popf
push
test
adc
stos
sbb
inc
pop
adc
or
and
dec
out
retf
lods
(bad)
sti
add
dec
cmp
or
out
ss
call
pop
mov
jbe
or
addr16
jmp
jmp
push
into
or
push
xor
add
call
mov
fcom
mov
fnstsw
movs
cmp
mov
sub
ficomp
mov
mov
jns
mov
aaa
fistp
sub
test
xor
mov
dec
jmp
inc
add
or
mov
push
or
add
popa
popa
mov
push
mov
mov
pop
and
popa
and
daa
sbb
jle
je
hlt
and
push
push
xchg
inc
outs
xor
xor
lahf
ds
lods
sub
movs
cwde
ins
jg
mov
cld
mov
out
rcr
mov
pushf
jl
(bad)
mov
into
add
outs
sub
and
push
pop
lods
adc
cs
and
jg
dec
and
ror
je
dec
fstp
pop
inc
(bad)
jmp
arpl
or
or
lods
mov
jl
call
mov
mov
pop
xor
lods
(bad)
adc
mov
ins
mov
pop
aas
mov
mov
lods
mov
daa
xor
sub
xor
pop
mov
xchg
mov
loop
mov
sub
out
dec
aas
rep
into
adc
aas
inc
inc
sahf
mov
(bad)
xchg
imul
pop
(bad)
call
push
add
scas
mov
cmps
add
ret
sub
xor
mov
push
lods
fwait
mov
addr16
pop
outs
and
les
pop
clc
cmp
adc
inc
mov
das
mov
fcom
mov
mov
js
add
add
pop
lahf
push
jmp
daa
out
xchg
jno
mov
mov
dec
mov
lods
imul
add
jge
shr
(bad)
retf
mov
xchg
and
jb
int3
mov
jecxz
(bad)
enter
ins
imul
or
inc
test
in
push
xlat
lock
mov
jne
inc
std
inc
aam
mov
or
(bad)
jmp
pusha
(bad)
dec
bound
xchg
adc
stos
or
sub
aaa
mov
inc
iret
(bad)
loopne
mov
add
mov
xchg
cli
inc
xchg
cli
mov
add
sub
idiv
psrlq
outs
xor
int
neg
in
push
aam
mov
popa
rcr
out
cmp
push
pushf
sub
push
rcl
and
xchg
xlat
xchg
aas
cmp
or
fstp
js
dec
shr
iret
popf
stc
sti
mov
popa
sbb
stos
cmp
cmp
in
jecxz
xchg
or
pop
mov
ds
lahf
shr
bound
jecxz
xor
mov
(bad)
xor
aas
push
hlt
ja
popf
pusha
nop
dec
sub
push
jb
xchg
loop
add
in
jmp
mov
mov
ror
add
xor
rcr
mov
push
mov
mov
stos
std
mov
push
retf
mov
xlat
xchg
add
in
fwait
inc
push
imul
hlt
test
mov
xor
pop
outs
push
add
loop
inc
mov
add
dec
dec
stos
mov
sub
js
ins
icebp
push
cmp
nop
aam
inc
pop
ins
xchg
mov
push
hlt
in
jmp
dec
mov
loop
inc
test
imul
mov
xchg
mov
push
jbe
xchg
pop
sub
mov
fwait
pushf
pop
mov
mov
fidivr
add
retf
add
scas
into
jae
jmp
hlt
mov
loope
and
cdq
inc
(bad)
jmp
retf
mov
xchg
rcl
adc
xor
dec
rcl
and
jns
shr
add
xchg
call
inc
push
xchg
jl
push
nop
loop
sub
mov
pusha
jo
push
cs
or
lods
hlt
cmps
movs
mov
or
call
loope
mov
repz
out
sub
add
ret
push
fwait
lods
sar
into
test
push
adc
into
pop
mov
data16
jbe
add
nop
xor
mov
pop
(bad)
test
test
clc
mov
pop
or
mov
jbe
clc
loopne
in
push
cmp
and
jnp
data16
ins
sti
cli
push
mov
out
cmc
mov
cld
imul
ds
retf
ja
shl
jb
jae
mov
inc
ins
mov
pop
retf
into
test
scas
rcr
out
mov
ror
cmp
add
lahf
ins
outs
xor
out
jns
and
sbb
fld
or
je
mov
or
mov
jmp
ret
jne
iret
pop
xor
cwde
or
std
xor
fdiv
pushf
inc
dec
pop
das
mov
sbb
dec
aas
or
or
stc
adc
push
fcom
es
js
push
dec
cmp
not
sub
stos
jo
xchg
or
xchg
sub
mov
and
mov
mov
loop
and
add
sub
movs
pop
add
inc
push
jo
dec
xchg
inc
pop
fstp
xor
(bad)
pop
std
inc
dec
sub
mov
jo
cmp
cmp
ror
lock
fmul
ror
movs
lods
pop
pop
sub
xchg
fisttp
sbb
(bad)
mov
sbb
(bad)
std
in
cli
or
xor
pop
push
(bad)
test
sahf
popa
pop
nop
call
inc
sub
xchg
in
dec
push
and
mov
add
cmp
outs
aaa
sti
xor
shl
push
into
mov
cwde
xor
(bad)
dec
inc
mov
jg
jg
lods
jno
dec
xchg
popf
jbe
fcomp
in
das
push
mov
or
lods
fnstcw
mov
add
movs
hlt
pop
xor
aaa
sub
fsub
xor
dec
sub
idiv
pop
jp
pop
ins
xlat
frstor
cmp
fwait
ret
mov
sub
aas
pop
lds
jmp
repz
push
fs
dec
mov
or
lock
stos
or
mov
push
xlat
and
and
sub
and
dec
test
shr
or
in
push
in
or
push
cli
jle
mov
fadd
test
ss
call
or
adc
dec
lods
shr
mov
nop
loopne
lods
cld
repnz
jmp
pop
dec
mov
jp
mov
mov
inc
loop
ds
adc
pop
pop
out
stos
cdq
and
push
dec
jnp
jmp
cdq
lods
repnz
(bad)
xor
repz
pop
je
out
mov
enter
xchg
das
in
sub
sbb
test
push
mov
mov
icebp
mov
gs
or
sub
std
sbb
adc
aas
sbb
xchg
addr16
fs
mov
scas
dec
inc
xchg
in
movs
inc
mov
cwde
retf
pop
xchg
fbstp
imul
or
mov
jecxz
gs
call
and
aas
mov
jns
std
jo
cmp
jmp
cmp
cmp
out
jmp
les
xor
js
dec
fs
mov
push
out
cmp
test
cwde
stos
enter
cmps
hlt
sub
test
movs
mov
xor
sub
push
mov
mov
xlat
cmp
xor
je
sbb
in
lods
mov
sbb
sar
push
mov
hlt
jecxz
js
add
xchg
test
jecxz
rcr
sub
mov
mov
loope
jns
cmps
enter
add
mov
xchg
out
aad
sub
stos
xchg
test
jmp
(bad)
jns
ret
push
inc
or
sti
pop
adc
iret
sub
test
pop
lods
dec
or
adc
push
retf
fcom
xchg
or
pop
into
ins
add
cmps
mov
std
dec
xor
popa
(bad)
test
jae
and
xchg
mov
or
xchg
pop
test
stos
(bad)
or
xor
pop
inc
aaa
jbe
popf
cli
sbb
rol
arpl
or
test
push
mov
sub
fdivr
push
dec
pop
jge
(bad)
sbb
cdq
sti
push
jecxz
jmp
rcr
mov
inc
mov
repnz
jg
and
fild
movs
sbb
add
rcr
aas
adc
xor
jno
lods
les
out
mov
inc
pop
mov
arpl
fstp
sbb
sar
rcr
ss
sbb
test
sub
loope
mov
pop
mov
mov
lahf
add
std
jbe
movs
sub
repz
in
mov
stos
(bad)
out
shl
ss
int3
jae
sub
xor
mov
sbb
scas
pusha
sbb
(bad)
dec
shr
enter
xchg
pushf
fisub
xlat
cdq
mov
add
mov
xchg
inc
add
adc
mov
mov
adc
shl
push
iret
int3
fsubr
or
ret
mov
jns
pop
mov
pop
in
sub
dec
dec
pop
movs
pop
lds
cmp
dec
(bad)
fcmovnb
xchg
iret
cwde
jp
out
test
shr
pop
lock
int3
fiadd
add
push
test
jl
mov
cwde
test
pop
hlt
cld
jne
xchg
jge
adc
pop
sbb
mov
leave
ja
jmp
cmps
xchg
scas
jp
add
pop
shl
test
call
mov
cmp
ficom
jne
(bad)
retf
repnz
xor
cmp
leave
arpl
in
cmpps
scas
mov
mov
inc
dec
jmp
retf
or
hlt
xchg
sub
mov
pop
push
loopne
inc
or
jge
xchg
stos
jae
push
call
repz
cmp
sub
test
sbb
sbb
mov
dec
lea
aaa
fsub
push
jno
call
imul
lock
out
aaa
push
and
sbb
inc
ret
push
out
or
enter
out
lods
clc
fwait
call
inc
mov
jg
cmp
pop
jecxz
fiadd
push
mov
ins
inc
push
hlt
push
pop
lea
add
cmp
or
inc
adc
aas
ret
leave
iret
sbb
data16
aas
test
cmp
xchg
in
sbb
cld
call
xor
call
add
xchg
mov
ret
ss
xor
xor
leave
int
daa
sahf
and
or
adc
scas
outs
int
test
sbb
mov
in
stc
pop
es
add
and
(bad)
imul
cli
outs
leave
mov
sbb
add
pop
popa
or
pop
test
cmps
and
dec
dec
xchg
add
xor
or
xor
mov
in
out
aas
enter
sbb
je
ret
add
jecxz
scas
fild
dec
loope
cmp
call
jae
mov
into
scas
xchg
popf
xchg
std
jecxz
pop
mov
mov
jno
enter
int3
shr
imul
and
cdq
into
popa
imul
stc
jnp
jmp
inc
sub
sub
loope
je
int
fld
mov
cmp
fstp
add
pop
mov
xchg
jbe
pop
mov
lock
cmps
mov
ror
dec
test
add
mov
and
std
cmp
sub
fadd
dec
stos
adc
mov
inc
aas
jno
sub
mov
test
lock
cmp
mov
ror
daa
fisub
adc
out
enter
mov
js
bound
mov
fidivr
loopne
adc
mov
in
or
fbstp
pop
fisttp
push
les
aam
imul
imul
fwait
mov
or
dec
inc
cwde
sbb
ins
ret
push
jo
aaa
adc
mov
push
push
xchg
gs
mov
arpl
adc
pop
scas
pop
pop
js
xchg
sbb
jp
sbb
test
aaa
test
add
cdq
pop
mov
inc
push
inc
das
jmp
sti
outs
in
(bad)
jp
and
sub
and
xchg
sbb
push
xor
into
loopne
xlat
loope
call
ja
pop
push
dec
test
hlt
stos
movs
pop
js
dec
shr
dec
xor
xchg
or
xchg
xor
call
(bad)
jno
jle
xlat
jno
ss
mov
add
les
fdivr
and
(bad)
push
add
out
cmc
or
call
ins
fistp
push
out
sbb
loop
sub
cwde
ret
repnz
les
bound
sub
ficomp
stos
push
inc
gs
mov
pop
(bad)
xchg
call
addr16
in
jo
or
lock
das
push
sub
xchg
shl
ficomp
jno
fistp
stos
dec
sub
xor
das
inc
enter
(bad)
icebp
or
je
(bad)
clc
jo
jecxz
clc
jae
repz
test
shr
mov
retf
arpl
xchg
movs
jmp
in
cmp
cmp
aas
ret
lock
jmp
inc
and
sbb
jmp
sbb
mov
xchg
xor
rcl
push
cmc
mov
mov
mov
pop
jb
dec
or
dec
sub
neg
pop
xor
scas
std
loop
mov
movs
sub
cmp
fcmove
nop
icebp
fdivr
push
push
mov
mov
aas
imul
sahf
aam
fbld
cdq
jmp
jbe
sbb
inc
jns
(bad)
fdiv
jecxz
add
adc
adc
in
sahf
scas
mov
dec
jmp
scas
arpl
lea
xchg
adc
fidiv
dec
push
inc
xchg
and
jmp
lods
js
fild
adc
dec
jo
adc
(bad)
out
loope
adc
mov
fwait
inc
dec
repz
sbb
icebp
fs
movs
nop
adc
in
mov
inc
mov
(bad)
cmc
ins
jg
push
sbb
loopne
stos
ret
mov
call
sbb
cmp
(bad)
pop
and
inc
mov
mov
out
repz
adc
dec
sahf
inc
sbb
popa
in
cmp
dec
inc
dec
jae
cmp
jne
or
test
mov
xor
pop
xor
jns
sbb
dec
push
jecxz
or
addr16
dec
cmp
mov
cmp
cmps
push
mov
vpcmpgtb
mov
movs
inc
into
call
mov
jo
mov
(bad)
xchg
nop
and
nop
pop
cmp
jl
into
push
add
call
mov
repnz
int
cdq
or
test
test
xchg
sbb
neg
mov
stc
lock
mov
in
mov
adc
fadd
mov
bound
xchg
sub
or
xchg
shr
les
sub
cmps
cli
mov
ret
sub
sub
ins
and
leave
sub
xor
push
rol
and
popa
pop
push
jp
mov
xchg
sub
imul
adc
fucomi
bound
pushf
cmp
ror
dec
aam
adc
rcl
xlat
push
jle
popf
sub
mov
mov
mov
xlat
jo
pop
out
jmp
cmp
or
popa
mov
inc
std
ss
shr
(bad)
jbe
xor
cmp
ficom
jmp
(bad)
in
fadd
inc
loop
mov
daa
xchg
lea
icebp
(bad)
sar
cdq
adc
pop
pop
cli
fs
cmps
and
sbb
pop
retf
scas
adc
adc
shr
(bad)
gs
jne
push
int3
push
and
dec
dec
jmp
(bad)
add
test
imul
loope
call
or
fcmovnbe
movs
sub
jns
aas
adc
sub
lods
outs
dec
push
jns
add
jecxz
pop
retf
repz
xchg
cs
rol
imul
fisttp
mov
ret
sub
mov
xchg
add
into
ins
out
push
ja
jo
lods
mov
push
cmp
add
push
push
xor
inc
mov
stos
lds
out
jne
sbb
inc
xchg
loope
(bad)
and
lods
xchg
ds
icebp
xchg
sbb
sub
fnsave
vandnpd
imul
ja
mov
loop
jl
jmp
adc
loope
mov
dec
push
rol
pushf
mov
call
rcr
call
add
push
std
jae
retf
stc
lods
call
rol
xor
or
aas
rcr
iret
or
idiv
add
cmp
lock
dec
cld
push
adc
jnp
inc
pop
js
pop
(bad)
mov
clc
loopne
retf
push
dec
pop
daa
inc
mov
xor
push
pop
(bad)
inc
mov
stos
mov
jecxz
(bad)
push
pop
jo
scas
add
enter
pop
sbb
push
add
in
adc
cvtpi2ps
in
pop
push
pop
jns
cmp
jmp
outs
popf
shl
mov
cmp
jecxz
cdq
stos
rcl
nop
dec
or
ds
or
cwde
imul
or
xchg
inc
ins
mov
push
mov
adc
add
xor
icebp
stos
sbb
push
mov
xchg
aas
mov
add
pop
sbb
mov
cmps
sbb
fisubr
inc
push
cs
lea
dec
lods
ins
inc
(bad)
call
fstp
sbb
enter
mov
bound
in
push
jg
dec
mov
adc
mov
mov
push
(bad)
add
pusha
cmps
test
push
or
outs
pop
push
js
pop
mov
and
or
mov
push
push
push
aas
push
push
push
sbb
xchg
sub
popa
cmp
add
push
mov
jmp
sub
(bad)
retf
sbb
xor
adc
add
dec
js
or
cld
lahf
jb
mov
cdq
test
(bad)
loopne
(bad)
jmp
or
jne
cmp
xor
inc
dec
sub
sub
mov
lea
(bad)
pop
xchg
pop
aas
cmp
push
jnp
push
test
stos
cmc
sub
jg
sbb
int3
out
lods
fldenv
gs
stos
pop
mov
cmps
push
das
xlat
or
fldl2e
sbb
outs
xchg
mov
push
xor
pop
out
inc
arpl
mov
jae
cli
std
popa
jl
test
mov
in
and
test
jne
add
add
jnp
mov
add
mov
aam
adc
dec
jns
jle
repz
xchg
hlt
sbb
cdq
sub
push
(bad)
retf
call
jns
ret
and
lods
popa
cmps
jnp
adc
xor
mov
pop
mov
rol
xchg
out
sub
setg
clc
mov
dec
adc
sub
aas
stos
pop
add
and
jg
test
aaa
and
mov
div
pop
or
cdq
mov
(bad)
(bad)
cmp
cmc
cmp
mov
aam
pop
mov
pop
or
mov
fwait
and
jo
jae
pusha
je
pop
push
pusha
jle
outs
xor
push
icebp
xchg
cli
outs
xor
adc
mov
mov
xchg
inc
adc
xor
mov
rol
adc
mov
cld
out
std
mov
idiv
arpl
cmp
jmp
mov
iret
test
loop
test
inc
test
xchg
push
cmp
xor
pop
outs
push
test
call
addr16
enter
jb
push
push
mov
ins
lock
add
(bad)
xlat
sar
mov
dec
das
dec
out
lods
inc
test
jnp
pop
shr
and
loop
adc
cld
outs
jmp
popa
popa
dec
xchg
das
pop
cli
stos
dec
cmp
or
add
outs
iret
les
inc
lds
ror
sub
(bad)
fnstcw
push
test
pop
mov
in
mov
enter
(bad)
(bad)
fsub
fnsave
das
adc
cmp
int
ds
mov
or
movs
cmp
aaa
jmp
push
inc
cmp
ins
aad
hlt
mov
outs
mov
add
xchg
cmp
push
or
ret
daa
xor
xchg
into
sbb
push
xor
sbb
and
mov
inc
test
sub
cmp
das
retf
stc
xchg
fist
add
(bad)
aaa
sbb
pop
adc
mov
jmp
sbb
cmp
xchg
rol
test
fdivp
in
adc
shl
sub
cs
in
std
enter
inc
out
sbb
jns
daa
pop
lods
lock
sbb
mov
retf
int
cmps
sbb
mov
cmp
and
push
push
adc
or
and
out
int3
es
daa
cmp
inc
sub
mov
rol
ins
js
mov
mov
jno
jmp
mov
jns
jecxz
ficom
jae
outs
sbb
sbb
(bad)
retf
shr
addr16
and
xchg
test
add
in
pop
push
outs
sub
or
mov
pop
rcl
call
ret
jae
adc
lea
(bad)
dec
mov
mov
dec
xchg
jnp
add
gs
dec
mov
jl
add
retf
ds
js
push
adc
adc
(bad)
retf
ds
fs
fstp
mov
push
loope
loope
jle
pop
xchg
fcomp
xchg
es
mov
pushf
cmps
or
push
iret
xlat
mov
sub
add
fmul
hlt
cmp
sub
pop
test
test
ds
rep
push
icebp
jns
pop
pusha
stc
repz
push
out
ins
dec
pop
in
cmp
push
add
add
dec
(bad)
out
jb
(bad)
aaa
call
adc
fldenv
ins
xchg
add
push
jnp
or
push
call
dec
jmp
mov
dec
in
xor
mov
imul
pop
in
mov
cmp
xchg
vpmovsxwq
mov
pop
loopne
xchg
les
mov
dec
mov
aam
es
out
daa
fistp
xor
in
loope
mov
adc
retf
inc
mov
lea
les
dec
sub
sbb
loope
pop
mov
lods
mov
sub
jb
adc
dec
mov
jb
adc
sahf
scas
mov
jno
out
xchg
out
mov
jns
jmp
add
sahf
(bad)
push
out
pop
popa
mov
arpl
in
lss
sub
(bad)
shl
mov
dec
and
(bad)
fdivrp
mov
test
mov
sub
push
add
push
add
dec
in
mov
pushf
add
fistp
aaa
cmp
push
xchg
scas
mov
jg
js
pop
sub
repz
dec
inc
aam
(bad)
das
jo
ss
aaa
pop
out
dec
in
pop
syscall
ja
jmp
sbb
dec
retf
fsubr
pushf
ret
mov
test
sub
sbb
(bad)
stos
dec
fidivr
xchg
frstor
inc
pop
or
arpl
jle
loopne
repnz
jmp
cmp
dec
and
pop
dec
popf
jb
ret
retf
xor
and
movups
xor
add
sbb
ja
jmp
mov
dec
mov
retf
push
xchg
push
sbb
loop
mov
xchg
jl
adc
es
adc
call
sbb
jg
push
and
lods
pop
mov
das
cwde
jb
call
sbb
adc
cld
jmp
outs
das
pop
mov
sar
gs
inc
adc
in
mov
iret
add
mov
dec
int
sub
daa
imul
pop
jge
lock
inc
add
cmp
aad
xchg
mov
std
(bad)
mov
xor
out
adc
pop
lock
mov
mov
ret
sub
inc
xchg
invd
std
adc
cmp
sbb
sbb
(bad)
test
rcr
dec
sti
pop
jg
or
shl
mov
scas
js
in
call
cmps
popf
sbb
pop
or
lahf
aad
in
add
outs
xor
jns
dec
fisub
pop
retf
inc
inc
lds
xchg
das
and
ror
bound
and
push
xchg
mov
mov
(bad)
call
std
dec
adc
in
in
stos
out
lds
jns
mov
jmp
jns
adc
dec
xor
jl
sub
cmp
in
pop
push
sub
xor
push
cwde
daa
push
mov
lea
out
mov
adc
ja
shl
ja
push
mov
xchg
adc
retf
jl
pop
mov
loope
sar
div
push
push
and
xchg
loopne
xchg
popf
sub
adc
pop
cmps
sub
cwde
inc
hlt
aad
xchg
fst
or
xchg
and
ins
jne
cli
mov
shr
mov
add
inc
iret
mov
inc
movs
fisubr
sub
push
call
cli
std
push
call
les
mov
xchg
(bad)
jo
add
ficomp
or
out
mov
loopne
in
lock
mov
rol
jne
and
out
cmp
ret
cmps
add
and
div
xor
(bad)
cmc
pop
push
sbb
or
in
lods
pop
push
inc
inc
shr
aas
sub
mov
(bad)
mov
stos
(bad)
dec
cdq
out
cmp
pop
pusha
js
push
out
mov
in
jge
push
fmul
xchg
inc
cld
mov
shr
stos
xchg
pop
js
jle
cmp
push
outs
gs
inc
and
(bad)
movs
cmp
add
pop
mov
and
neg
out
fistp
imul
jp
in
mov
jb
add
out
mov
jle
push
jge
or
int3
leave
sbb
imul
push
inc
mov
xchg
retf
xchg
jl
sub
jns
jmp
mov
push
ds
mov
retf
out
push
jmp
push
push
js
call
scas
in
pop
(bad)
pop
dec
lods
cmp
stc
fucom
inc
jo
js
mov
lahf
pop
sbb
push
jb
adc
pop
hlt
xchg
sahf
push
or
ds
and
jl
cdq
fisttp
xchg
aam
lds
(bad)
sbb
daa
push
loop
push
sbb
mov
iret
dec
ror
push
jne
inc
call
dec
test
xchg
sbb
mov
pop
out
ror
jle
retf
fistp
les
sbb
add
or
xor
ins
out
push
mov
sbb
add
stos
and
cmp
pushf
ret
leave
jge
movs
mov
jne
cwde
sub
mov
dec
sub
aaa
cmp
mov
daa
cld
adc
push
dec
pop
jb
xchg
nop
or
in
xchg
movs
add
popf
repnz
cmc
mov
jmp
pop
xor
mov
cs
cli
adc
clc
push
dec
into
jb
std
sub
rcl
push
adc
cwde
data16
or
fsubr
xor
cdq
fisub
call
pushf
push
cmp
xchg
or
add
lea
cmp
sub
movs
(bad)
or
into
xor
pop
or
or
popf
mov
mov
inc
(bad)
outs
mov
jecxz
repz
mov
in
test
enter
nop
outs
or
mov
fldpi
push
push
cdq
sub
lahf
scas
or
lds
cmp
test
(bad)
int
push
dec
dec
call
ficom
push
cmp
push
inc
or
into
adc
lock
test
in
sub
iret
push
push
adc
loope
nop
inc
pop
aad
movs
sub
scas
(bad)
adc
pop
xchg
ret
sub
mov
mov
stos
add
call
scas
xchg
add
ins
push
xchg
inc
sub
pop
popf
repz
outs
iret
sub
mov
mov
nop
jb
cs
cmc
ss
mov
ss
sbb
mov
mov
xchg
adc
imul
dec
ret
add
(bad)
mov
int
fdivr
push
loopne
sahf
add
lock
and
pop
jmp
stc
pop
lock
jl
ins
in
nop
cmc
sbb
and
out
lods
cmp
rcr
cld
sub
hlt
sub
out
shl
ficom
cmp
out
retf
jl
dec
push
mov
sahf
push
ret
sbb
into
dec
je
neg
xchg
xchg
fsub
mov
jnp
mov
xchg
(bad)
fcom
cwde
ja
pop
popa
mov
dec
loope
cmp
sub
movs
rcl
dec
jbe
sub
dec
pop
pushf
aam
dec
ror
adc
and
pop
add
retf
aad
dec
sub
push
sbb
mov
jns
push
push
mov
hlt
or
shr
mov
push
test
push
push
cmp
(bad)
dec
add
icebp
push
fld
cmp
stc
xchg
push
popa
sub
fiadd
or
ret
scas
inc
cdq
jmp
out
nop
je
test
push
test
inc
mov
movs
ins
and
mov
mov
and
or
repnz
mov
ret
sub
add
xor
(bad)
lock
mov
sub
enter
mov
ins
dec
stc
mov
push
and
mov
daa
add
loop
mov
fstp
adc
mov
jno
push
adc
xchg
mov
leave
and
jecxz
repz
push
imul
push
jge
pop
(bad)
lahf
sbb
dec
test
pop
outs
iret
sbb
sub
add
aam
xchg
dec
pop
push
retf
outs
inc
dec
cmp
pop
pop
cmp
and
add
lahf
mov
xchg
adc
dec
xchg
push
addr16
cmp
inc
jmp
xlat
dec
cwde
ja
jmp
xor
push
icebp
adc
les
or
pop
jmp
push
nop
lods
push
sahf
rol
rol
and
aad
fldenv
les
mov
ins
or
dec
inc
add
sub
dec
sub
push
cmps
sub
sbb
movs
or
inc
mul
push
mov
and
inc
das
sbb
scas
sahf
and
mov
mov
stos
dec
mov
sub
test
dec
push
adc
push
or
jbe
inc
and
int3
push
jnp
cmp
fimul
fwait
movs
jmp
cmp
adc
mov
cmp
xchg
lock
jmp
jno
aas
in
sbb
mov
jmp
ss
cld
and
shr
xchg
retf
pushf
inc
or
or
dec
stos
pop
cmp
mov
ins
mov
pop
cwde
push
push
arpl
popa
mov
int
inc
in
jp
and
dec
push
(bad)
jbe
je
outs
cmovb
std
stc
xchg
jp
ret
fld
mov
ds
jle
fimul
nop
or
push
sti
mov
or
pop
rcl
add
into
mov
adc
xor
fwait
inc
push
and
push
inc
ret
cmp
test
int3
mov
sbb
inc
cwde
(bad)
mov
test
inc
in
aad
jle
pop
aas
cdq
iret
ins
ins
push
repz
jge
ret
repnz
xchg
push
(bad)
fcomp
add
xchg
(bad)
rcl
sbb
jo
xchg
xchg
pushf
stos
sbb
mov
(bad)
or
xchg
jmp
sqrtps
das
mov
adc
mov
ret
fistp
cmp
fild
xor
loope
pop
arpl
inc
test
mov
lods
mov
xchg
scas
dec
sub
dec
scas
xchg
iret
(bad)
fdiv
xchg
pop
sar
xchg
xchg
jp
(bad)
iret
jmp
in
inc
scas
cmps
mov
movs
stos
xchg
jno
push
pusha
add
ss
add
imul
jmp
mov
mov
shl
outs
ja
xchg
icebp
daa
cmp
dec
pop
inc
adc
mov
cmp
dec
test
pop
and
cmc
retf
xor
mov
jne
mov
or
sbb
fistp
mov
lods
ficom
dec
jo
lods
cmp
enter
aam
test
imul
sti
cs
jnp
je
scas
call
(bad)
fadd
movs
jnp
xchg
cs
adc
mov
out
js
cs
pop
in
aam
in
or
enter
or
sub
pop
fst
cmp
or
push
ins
mov
inc
lds
lds
pop
jo
lea
fcom
loope
add
jnp
xor
test
push
mov
retf
push
push
rcr
fdivr
inc
sub
scas
gs
pop
xchg
mov
cli
mov
loopne
(bad)
call
mov
fs
repz
repz
inc
popa
gs
push
(bad)
fwait
adc
xchg
aaa
jae
adc
out
in
cmp
xchg
pop
cwde
sub
div
inc
in
push
sub
lods
sub
sub
dec
pop
lds
gs
push
adc
jne
std
scas
sub
mov
mov
mov
push
out
mov
adc
enter
xchg
sub
pop
icebp
pop
mov
jns
pop
inc
xor
cmp
test
mov
jg
adc
pushf
pop
pop
jge
jne
mov
dec
xor
rcr
mov
push
aaa
mov
test
stos
out
xchg
add
ret
adc
out
rep
xor
mov
and
dec
mov
popf
sbb
cmp
mov
inc
jne
push
pop
into
rcl
jo
int3
pop
fstp
lods
pop
imul
test
jmp
add
out
and
cli
ror
gs
jne
jecxz
sub
add
xchg
or
shl
xor
mov
and
stos
shl
mov
(bad)
pop
sub
test
push
rcr
sbb
dec
mov
imul
adc
fst
ja
jns
das
sbb
call
adc
mov
mov
popa
js
es
ror
inc
jae
test
hlt
xchg
mov
fdiv
push
xchg
lods
add
ret
pop
xchg
sub
scas
sub
stc
rcr
out
adc
dec
lds
stos
fst
cmp
adc
icebp
js
mov
std
and
jge
sbb
cmp
sti
imul
mov
dec
cdq
ins
(bad)
icebp
sbb
test
mov
cwde
lds
adc
in
jl
mov
push
mov
jbe
pop
pop
mov
push
and
push
pop
repnz
retf
add
and
js
sbb
shl
stos
jnp
in
add
sbb
loopne
jl
push
cmp
aad
inc
and
pop
movs
leave
fwait
rcl
jmp
dec
daa
sbb
arpl
outs
dec
xor
push
(bad)
jmp
cli
mov
dec
cmc
aam
pop
inc
mov
mov
(bad)
inc
stc
xor
mov
xor
dec
push
pop
inc
sar
mov
sub
sub
mov
popa
daa
or
daa
push
sub
nop
fs
aas
in
pop
in
inc
push
fmul
inc
inc
sbb
adc
mov
adc
test
mov
add
cwde
cmp
ret
cmp
sub
push
push
or
test
xchg
fs
(bad)
sbb
mov
cwde
jnp
dec
mov
cdq
and
loopne
jb
push
mov
fldcw
xchg
jns
in
adc
and
jmp
jle
neg
neg
and
xchg
mov
and
xchg
(bad)
and
sbb
pop
sub
imul
jecxz
pushf
cmp
icebp
sub
and
push
js
adc
fs
cmp
cmps
xchg
push
stos
adc
push
xchg
push
dec
leave
inc
adc
sti
in
dec
adc
sub
fidiv
in
js
mov
inc
xchg
xchg
jmp
scas
mov
js
cmp
popf
pop
mov
mov
push
push
mov
and
imul
push
pop
js
cs
xchg
imul
mov
xchg
aas
jmp
into
fld1
(bad)
and
jno
cmp
pushf
add
mov
xchg
push
sub
(bad)
into
outs
sbb
pushf
mov
lods
sbb
mov
outs
cli
clc
mov
mov
lahf
cld
or
add
movs
out
or
je
arpl
xor
int
push
das
adc
pop
outs
(bad)
repz
cs
fwait
mov
sbb
fdivr
cs
jns
xchg
fld
ret
aam
mov
aaa
(bad)
js
sahf
mov
(bad)
cmp
pop
adc
push
mov
jbe
lods
or
stos
int3
cmp
or
pop
xor
aaa
jecxz
fdivr
adc
ror
cmp
imul
loopne
xchg
imul
sub
dec
fcomip
add
add
xchg
adc
in
pusha
xor
icebp
sub
inc
xchg
xchg
mov
sti
adc
pusha
jo
ja
cli
and
fs
mov
je
loop
fstp
loope
sbb
je
fs
adc
sub
pop
scas
call
inc
dec
and
rcl
mov
cmp
mov
push
pop
xchg
cli
stos
leave
mov
fadd
jle
mov
inc
loopne
movs
imul
dec
push
ins
xor
arpl
dec
rcr
cmp
xlat
xor
es
sahf
sahf
xchg
ds
fnstenv
sub
push
sti
adc
ret
pop
test
inc
leave
aas
push
lods
mov
jle
and
cmp
ins
sahf
sub
data16
dec
xchg
fnstenv
loop
and
int
aaa
adc
jbe
push
aam
mov
(bad)
inc
xchg
out
push
push
icebp
sub
das
inc
jo
adc
(bad)
jl
inc
outs
retf
xchg
in
repnz
xchg
mov
adc
cmp
aam
xor
pop
or
inc
fist
retf
pop
(bad)
loop
data16
jle
lods
outs
out
aad
stos
mov
inc
xchg
out
int
or
mov
xchg
xor
out
(bad)
inc
sbb
mov
je
push
adc
sub
mov
adc
ss
mov
jns
cmp
add
and
scas
xlat
out
std
mov
in
pop
pop
std
sub
fsub
das
push
outs
mov
xchg
loop
fidiv
test
int
loop
adc
or
jb
std
cmova
sbb
aas
pop
sbb
scas
dec
mov
pop
xor
in
and
mov
iret
clc
lods
ret
fbld
stos
jecxz
adc
enter
cmp
test
or
icebp
ds
ret
sub
cmp
inc
sahf
jne
dec
mov
rol
mov
scas
xchg
cmp
mov
loope
push
sbb
add
adc
dec
sahf
inc
mov
cmp
addr16
add
pop
fwait
xchg
retf
dec
ror
(bad)
sbb
mov
out
arpl
ins
fbstp
call
or
mov
rcr
cmp
stos
or
jle
push
out
cdq
sub
lods
add
add
cmc
push
mov
enter
int
and
daa
push
sub
adc
out
xchg
fsubrp
idiv
mov
popf
jge
cmp
std
jae
or
push
inc
mov
ss
add
mov
xchg
sbb
test
retf
adc
mov
adc
out
push
js
dec
mov
xchg
aam
retf
mov
shr
retf
or
mov
mul
or
stos
sar
ret
fcom
je
iret
lahf
mov
or
pop
or
movs
imul
ds
sbb
hlt
xor
jnp
mov
pop
fdiv
cmp
arpl
and
in
idiv
daa
inc
cmps
and
scas
fst
in
out
push
mov
jnp
and
sar
adc
lock
lahf
cmps
pop
pop
push
add
or
test
push
jmp
xchg
cli
mov
cld
out
or
enter
loope
adc
aaa
ret
pop
jmp
test
jnp
test
adc
ins
int3
jl
nop
add
jle
mov
and
arpl
and
mov
sbb
enter
mov
call
dec
sub
outs
inc
mov
pop
or
mov
add
xlat
xchg
fcomp
out
fcmovnbe
mov
and
inc
js
jecxz
adc
adc
ins
stos
inc
inc
iret
hlt
pop
aaa
jmp
ret
dec
loop
push
lock
clc
in
fild
shl
daa
into
std
mov
dec
mov
sbb
add
popf
pushf
jbe
shl
call
add
sbb
inc
dec
xor
or
mov
mov
mov
or
aas
ss
mul
sub
cli
push
add
ret
arpl
mov
cmps
retf
inc
pop
mov
in
ins
rcr
cli
add
xchg
ja
mov
cmp
and
inc
rcr
(bad)
mov
mov
cld
pusha
outs
pop
adc
push
cmp
out
pop
push
sub
jbe
sub
push
retf
imul
pop
or
cmp
cmps
retf
mov
inc
call
das
imul
sti
jge
and
leave
mov
loop
std
inc
aaa
inc
add
int3
inc
pop
in
lock
sub
jae
adc
loope
sub
dec
mov
add
(bad)
sbb
xor
test
add
out
xor
dec
mov
clc
pusha
aaa
ds
ficom
daa
jns
push
int
pop
adc
jno
int3
push
or
out
push
mov
movs
mov
push
ins
mov
cdq
push
xor
mov
mov
mov
pop
(bad)
test
aam
pop
dec
pop
in
fistp
dec
push
xor
and
jg
cwde
shl
sbb
popa
arpl
loope
push
out
push
xor
xchg
shr
sbb
(bad)
adc
sbb
push
mov
mov
shl
dec
or
adc
jno
xor
inc
fdiv
out
jns
xchg
fwait
aas
loopne
or
mov
ss
add
fldenv
fbld
dec
cmp
push
addr16
jl
dec
repnz
cmp
push
lock
adc
data16
leave
hlt
pop
jg
sub
sub
sbb
ror
push
cs
sbb
cli
test
xchg
mov
jne
mov
mov
jo
jne
add
or
mov
or
push
(bad)
lahf
in
or
imul
push
or
aad
xchg
sbb
or
and
stos
cdq
push
dec
add
scas
mov
ret
push
pop
stos
mov
rcl
stos
cmp
mov
(bad)
int
sbb
mov
jecxz
(bad)
fild
jbe
xor
add
imul
ja
jp
fdiv
mov
or
fisttp
and
mov
mov
xchg
push
adc
sub
popf
lods
adc
ss
mov
jg
adc
xor
cs
mov
dec
xor
std
add
mov
out
je
idiv
outs
push
rcl
xchg
fsubr
and
push
push
es
fadd
loopne
cmp
or
bound
push
jno
(bad)
adc
test
fcomi
push
xchg
scas
mov
mov
or
in
hlt
jmp
fadd
sub
inc
cmp
inc
outs
lods
stos
inc
push
pop
(bad)
movs
clc
jb
hlt
(bad)
jecxz
xchg
add
aad
lods
daa
(bad)
sbb
mov
mov
cmc
nop
(bad)
ins
out
inc
sti
mov
mov
cmc
xor
out
sbb
hlt
pop
jns
shl
data16
jb
pop
xor
shl
adc
adc
dec
cmp
(bad)
js
jl
add
xchg
push
push
and
cmps
daa
out
mov
sbb
ds
pop
pop
mov
pushf
inc
mov
popa
in
retf
ins
fdiv
stc
fucom
rol
pop
hlt
sub
adc
getsec
mov
fcmove
rcr
cdq
pusha
mov
movs
mov
mov
mov
out
rol
fcom
pop
aam
je
in
and
fisttp
push
ja
pop
xchg
movs
adc
inc
shr
xor
sub
pop
xchg
icebp
push
sub
push
mov
cmp
mov
dec
(bad)
push
in
inc
sbb
xor
or
aas
arpl
loop
mov
cmp
inc
ja
sbb
add
in
sbb
or
mov
imul
jge
enter
sbb
mov
daa
lock
pushf
popf
mov
es
add
inc
call
ret
xchg
ds
int3
push
out
ins
mov
ja
test
dec
jmp
rcr
aad
push
mov
(bad)
scas
mov
cs
inc
add
ins
jge
jno
jns
stc
cmp
ror
aad
cmps
hlt
or
aad
sar
sbb
in
fidivr
adc
mov
push
test
inc
addr16
lods
sub
mov
call
nop
dec
aaa
not
xchg
xchg
fcomp
cdq
loop
add
xor
pushf
push
shl
movlps
mov
clc
inc
syscall
jne
enter
xchg
repz
mov
fild
(bad)
into
imul
rol
cmp
xchg
xchg
scas
ss
fsub
scas
adc
dec
pop
push
mov
inc
sti
fdiv
push
or
mov
(bad)
mov
push
lods
dec
ret
(bad)
fisubr
lods
xchg
repz
adc
aad
bound
push
dec
scas
aas
and
cmp
aam
add
mov
outs
and
enter
xor
xchg
push
test
inc
(bad)
jb
push
loop
lods
(bad)
jle
std
out
neg
push
ror
push
sub
jo
sbb
dec
pop
sub
mov
pop
lods
aam
mov
mov
cmps
mov
mov
adc
mov
inc
out
fmul
cmc
ret
test
xchg
xchg
xchg
add
shl
int
mov
ins
sub
mov
or
adc
ins
enter
push
pop
nop
xchg
popa
(bad)
pop
sbb
cmp
pop
and
push
sahf
inc
and
daa
adc
cmp
das
stos
fistp
mov
fisttp
sbb
jle
aad
dec
and
jmp
in
adc
sub
jns
xchg
pop
stos
sub
(bad)
pop
xor
fidiv
and
in
retf
out
out
sbb
(bad)
xor
jb
push
stc
data16
fcmovbe
or
out
mov
repz
mov
cmp
mov
sbb
iret
std
ins
sub
ins
out
xchg
xchg
lahf
pushw
bound
xchg
push
pushf
stos
in
push
aaa
add
sub
pusha
mov
fwait
inc
cmp
fwait
sahf
mov
sbb
inc
mov
ror
mov
into
aam
inc
cmp
mov
adc
xchg
fidivr
mov
dec
jg
pop
aam
adc
stos
dec
jl
movs
test
mov
test
movs
push
push
inc
aaa
imul
ins
mov
retf
aad
(bad)
out
loop
mov
xchg
push
(bad)
dec
sahf
jmp
lods
push
int
ret
sbb
push
lds
loop
pop
repz
dec
jp
mov
inc
cmp
in
add
movnti
stos
cwde
shr
mov
ds
adc
jp
movs
push
xor
lahf
cdq
int3
jge
jo
mov
out
xor
cmp
push
push
idiv
(bad)
data16
fadd
scas
xchg
mov
sub
adc
out
cmp
outs
sbb
sub
and
int3
test
arpl
stc
clc
mov
std
pop
retf
push
push
xor
add
out
lods
stos
ja
inc
add
jo
jae
nop
mov
pop
xor
mov
dec
adc
xchg
mov
stos
movs
mov
scas
daa
enter
into
and
mov
pusha
mov
xor
ret
dec
inc
inc
into
mov
sbb
jae
(bad)
sbb
test
xchg
(bad)
lea
xchg
sub
inc
jp
jo
cmp
push
bound
xlat
sahf
add
pop
mov
sbb
push
inc
mov
sub
cli
cmp
repnz
xor
call
inc
add
rcl
sahf
idiv
inc
sar
imul
mov
mov
or
dec
or
loope
mov
and
bndstx
add
or
leave
not
pop
repz
mov
and
cld
cmp
or
push
int3
int3
xchg
popa
(bad)
ins
imul
jmp
out
pop
mov
or
leave
inc
stos
inc
cmp
retf
mov
jae
fstp
add
and
enter
inc
mov
es
add
scas
sub
xchg
inc
test
inc
mov
inc
dec
dec
jle
sub
sahf
lods
sbb
mov
(bad)
sbb
mov
add
dec
outs
sub
cmp
pushf
lods
jge
adc
inc
xor
mov
cwde
cmp
lods
hlt
fsub
pop
dec
int3
outs
inc
mov
xchg
xchg
adc
and
ror
xchg
fcomi
push
call
pop
loope
sbb
aam
das
push
sbb
bound
push
(bad)
out
cld
call
scas
push
out
adc
pop
sbb
and
xchg
rcl
cmp
(bad)
ja
call
ret
pop
fsub
sub
jnp
nop
pop
stc
pop
sbb
fxtract
call
neg
push
mov
sbb
retf
(bad)
adc
cli
aas
lock
push
iret
pop
pop
push
out
mov
fistp
fisub
out
mov
dec
and
shr
mov
cmps
add
hlt
pusha
pop
or
xor
sbb
mov
aam
stos
xchg
dec
cmp
mov
mov
cmp
and
xchg
dec
mov
in
jmp
inc
xor
dec
retf
cmp
push
ins
sbb
outs
lahf
call
jne
or
ds
dec
jg
adc
adc
sbb
jle
adc
sbb
pop
ins
dec
jo
arpl
(bad)
(bad)
shl
(bad)
(bad)
jmp
mov
pusha
sbb
xchg
fwait
mov
add
fcmove
(bad)
enter
fist
stc
push
into
mov
dec
jno
lds
je
icebp
mov
(bad)
shr
int
(bad)
retf
cwde
dec
ret
sub
add
mov
xor
pop
fld
retf
outs
and
xchg
sbb
cld
imul
(bad)
int3
push
mov
imul
out
cs
cmps
dec
dec
icebp
mov
adc
push
jmp
sub
dec
add
arpl
les
es
arpl
stos
add
js
aad
(bad)
out
sub
(bad)
into
pop
out
outs
dec
lea
pop
dec
in
pop
cmp
inc
cli
adc
xchg
ret
mov
fwait
dec
aad
dec
pop
adc
adc
aas
test
pop
cmp
push
gs
pop
pusha
push
and
lea
jbe
mov
dec
clc
out
push
or
mov
jle
jae
cmp
ficom
int3
sbb
jbe
xchg
lahf
enter
aam
fidivr
hlt
ret
mov
sbb
cmp
jmp
(bad)
xchg
inc
cmp
mov
push
xchg
into
jg
cmps
scas
and
and
adc
inc
cld
push
cmc
dec
pop
inc
sti
outs
or
sbb
pop
mov
cmc
imul
push
out
jmp
movs
(bad)
stos
mov
lahf
cwde
(bad)
scas
mov
pop
clc
scas
dec
gs
jmp
in
frstor
mov
daa
xor
jbe
arpl
repnz
shr
cmp
adc
xor
push
icebp
push
clc
sub
adc
cmp
cmps
fs
cli
xchg
call
popa
mov
mov
xchg
sub
mov
movs
fcmove
push
add
jle
mov
add
mov
scas
fimul
out
jns
das
push
mov
dec
jmp
xchg
push
in
outs
ror
(bad)
xor
add
jbe
ins
hlt
loop
jp
rcr
or
push
sub
add
adc
adc
cmp
push
xchg
cdq
ds
sub
retf
mov
movd
shl
jnp
mov
push
ds
sub
push
je
pop
xchg
xchg
cmp
clc
mov
adc
dec
fiadd
dec
and
cmp
movs
mov
call
mov
sbb
icebp
out
out
imul
cmp
push
outs
retf
jle
mov
pop
rol
pop
mov
movs
mov
pop
dec
adc
or
(bad)
jne
xlat
adc
rcr
mov
call
movs
dec
shl
sahf
loop
out
int3
sbb
jge
out
inc
outs
es
shr
mov
retf
adc
mov
sti
test
mov
lock
xchg
dec
mov
test
repz
and
xor
repz
out
xchg
ja
sbb
mov
ins
outs
test
jno
in
div
xor
add
add
inc
xchg
call
lahf
jp
imul
imul
push
adc
mov
add
pop
jns
xchg
or
push
daa
sbb
push
or
jo
sbb
int3
data16
cli
push
mov
daa
xor
(bad)
push
add
jnp
inc
mov
cmp
ja
xchg
jo
in
call
pop
jns
loop
fsubr
adc
frstor
pop
scas
sbb
mov
enter
jmp
into
std
pop
scas
es
lahf
xchg
mov
aad
inc
cs
fisubr
popf
imul
test
pop
mov
frstor
retf
mov
or
movs
into
inc
cmp
out
fs
xor
fidiv
add
mov
jl
movs
loopne
mov
mov
movs
and
in
mov
enter
clc
retf
xor
loope
out
add
jmp
xor
call
sub
jge
test
pop
ds
pop
jge
jecxz
sbb
xchg
cmp
push
jnp
jmp
adc
stc
and
fldenv
fist
aad
jnp
bound
push
out
out
jo
push
inc
push
or
imul
test
dec
xchg
push
jmp
xor
js
or
imul
cmp
push
(bad)
fidiv
sub
jns
jg
mov
je
or
jno
adc
ja
ss
xchg
xchg
stc
enter
retf
push
mov
xchg
fimul
mov
jle
cmp
je
aam
add
mov
pop
outs
add
pop
adc
push
mov
adc
pop
jbe
xchg
mov
mov
or
jb
mov
mov
cmp
or
aas
xchg
out
push
jmp
add
add
in
mov
jne
sub
adc
adc
les
retf
mov
(bad)
push
or
daa
sahf
gs
xchg
and
neg
push
repnz
dec
mov
and
jae
ja
mov
js
jl
inc
xor
sub
lds
sub
mov
jns
das
and
aam
jae
mov
mov
inc
push
pusha
shl
mov
or
mov
test
(bad)
ja
and
out
fsub
inc
ins
addr16
jo
fnstenv
fcom
cmp
es
jae
nop
sub
add
xor
add
xor
push
xor
shl
cwde
sbb
sbb
pop
dec
dec
dec
gs
jecxz
jl
jecxz
cmp
or
vrcpss
popa
pop
ficomp
aaa
jo
call
mov
mov
cmp
loop
fsubrp
sahf
sub
jmp
fisttp
shr
in
retf
dec
stos
loop
lods
or
fs
aam
and
sti
cmp
pop
sub
imul
mov
out
push
jno
test
ins
jb
imul
in
inc
sub
jl
sub
cmp
lahf
test
cmp
data16
sbb
xchg
clc
jg
pop
xchg
cli
mov
jg
xchg
push
(bad)
repz
cmp
xchg
mov
mov
fisttp
dec
(bad)
cli
inc
sbb
call
sub
xlat
(bad)
popa
arpl
enter
test
imul
push
fs
and
mov
sbb
(bad)
call
aas
mov
scas
cdq
inc
mov
addr16
jle
push
ret
mov
mov
sbb
lods
dec
int3
loop
jnp
ret
imul
jl
cmp
nop
shl
jae
push
pop
mov
js
loope
stos
mov
or
fsub
lea
inc
jmp
push
hlt
xlat
inc
adc
mov
adc
jb
ja
jecxz
jno
sbb
stc
cmp
xchg
sub
mov
or
push
dec
xor
test
into
push
sbb
dec
and
test
and
cmp
cmp
sbb
retf
loope
add
push
cmps
mov
iret
xchg
imul
mov
in
bnd
xchg
mov
retf
mov
inc
les
cmp
and
stos
fst
push
call
cmp
jmp
pop
jg
dec
pop
aas
mov
pop
sub
lds
inc
adc
xor
cs
in
pop
lds
idiv
mov
test
icebp
into
pop
ds
fwait
test
fadd
pusha
sbb
sbb
cmp
stc
mov
mov
ss
lods
dec
inc
and
sbb
pusha
jbe
mov
xor
test
dec
std
dec
jmp
pop
test
out
les
mov
mov
jns
adc
mov
js
imul
xor
push
lock
int3
dec
into
cdq
imul
mov
data16
cmp
fwait
mov
xchg
jl
mov
into
xchg
lods
pop
cdq
fs
sub
mov
sar
sub
or
fadd
in
cli
cmps
out
sbb
mov
les
fld
sub
sar
mov
jae
cmp
sbb
sub
dec
push
xchg
push
cdq
sbb
pop
sbb
dec
int3
into
jnp
nop
retf
cmp
rol
(bad)
or
jmp
jle
repnz
mov
cmp
add
mov
fmul
out
cmp
pushaw
sbb
lahf
mov
fadd
lea
mov
mov
rcr
jae
pop
mov
mul
mov
xor
cmp
pop
push
mov
pop
mov
mov
popa
cmp
xor
dec
xor
scas
pop
adc
xchg
bound
mov
xchg
mov
xchg
ins
or
push
inc
add
sbb
or
cmps
xor
aas
pop
adc
fmul
pop
cs
fwait
aad
push
pop
xlat
xchg
fbld
pushfw
push
mov
fnsave
je
repnz
ins
push
fwait
int
or
pushf
cld
sub
ja
and
call
add
cs
or
add
loope
or
add
or
jne
daa
repz
pop
jo
(bad)
xchg
mov
fsubr
push
sbb
push
jb
sub
ds
inc
fs
cld
push
inc
or
frstor
pop
inc
(bad)
xchg
fadd
fs
inc
in
call
jmp
es
packuswb
push
repz
add
daa
in
out
jbe
cs
mov
scas
mov
mov
les
ss
shl
dec
dec
dec
inc
cs
loopne
jmp
out
and
mov
push
sub
jbe
std
sub
jae
popf
pop
or
retf
pop
jae
out
cld
mov
in
xchg
dec
iret
xchg
mov
adc
dec
inc
xlat
int
pop
push
cmp
mov
idiv
xchg
test
mov
and
ins
jnp
jp
fst
cmp
jae
inc
sub
scas
ins
lea
mov
call
sub
rcl
test
push
mov
pop
scas
push
scas
adc
pushf
mov
cmps
jmp
rcl
sbb
lds
inc
xchg
iret
add
xor
enter
push
loope
lock
fs
xchg
add
or
cmps
cmc
mov
xchg
retf
dec
sti
sub
int
sbb
dec
fidiv
test
jle
stc
fimul
pop
(bad)
aad
cmp
ds
jl
sbb
int3
mov
cwde
retf
jb
aaa
inc
movs
sub
cwde
xor
xchg
push
sbb
movs
xor
adc
add
mov
stos
test
and
pop
push
(bad)
jmp
js
fsubr
mov
ds
cmp
jmp
jne
push
fld
mov
cmp
sub
and
cwde
out
adc
test
sub
sub
mov
add
jl
cpuid
add
mov
jmp
sbb
outs
add
cmp
push
mov
stc
jo
scas
or
lods
lds
sub
shl
scas
mov
(bad)
mov
sub
add
mov
cmps
sbb
arpl
je
fdivrp
adc
push
cmps
sbb
js
add
jmp
xchg
jns
push
sahf
sub
cmps
jmp
cmps
lods
ret
xchg
mov
jae
cmp
pop
jmp
jb
cmp
push
and
iret
shr
adc
repz
das
mov
out
dec
sub
inc
sbb
in
mov
repnz
mov
jne
jae
add
push
pop
jecxz
push
loope
pop
stos
stc
and
mov
jge
mov
icebp
mul
or
ins
dec
iret
retf
retf
test
mov
xchg
jno
lock
out
lock
mov
rol
mov
push
adc
in
ins
mov
and
fwait
mov
adc
adc
into
dec
or
in
sbb
add
adc
mov
jns
aad
cmp
or
jecxz
popf
or
jge
cdq
sub
mov
pop
cmp
sub
inc
test
sub
in
clc
in
xor
movs
pushf
lahf
mov
inc
add
push
lock
jo
xchg
mov
stos
stc
sub
sub
mov
inc
adc
aaa
push
sbb
mov
sub
adc
or
je
xor
wrmsr
jmp
push
mov
inc
or
(bad)
xlat
or
pop
test
clc
cld
inc
adc
mov
addr16
lods
jbe
leave
bound
push
pop
or
aam
gs
push
jns
mov
inc
push
aaa
add
push
(bad)
cmp
jmp
adc
cwde
bnd
mov
jae
and
clc
arpl
mov
dec
pusha
mov
add
icebp
dec
mov
fcmovnb
icebp
mov
xchg
or
loop
leave
test
add
int
ror
aad
in
aad
fnstenv
sbb
pop
jl
xchg
lods
nop
inc
(bad)
loopne
(bad)
repz
imul
nop
push
outs
dec
push
shl
test
dec
and
push
clc
retf
gs
xchg
jo
mov
add
sbb
lds
mov
movs
pop
(bad)
repnz
add
retf
ds
outs
sub
daa
jmp
lahf
or
pop
ins
xor
mov
sbb
inc
mov
dec
(bad)
inc
pop
add
mov
push
xor
daa
inc
cs
retf
(bad)
(bad)
pop
pushf
push
retf
popa
out
test
ffree
fcmovnu
shl
inc
iret
sub
cmps
fwait
loopne
leave
cmp
jns
dec
lock
pushf
fs
inc
xor
pop
popa
fadd
mov
dec
or
sahf
(bad)
das
and
push
jle
push
shl
dec
jmp
mov
mov
and
cld
dec
jp
cmp
mov
xchg
neg
ror
xchg
or
cmp
(bad)
shl
cld
(bad)
add
jne
inc
xlat
cmp
dec
fstp
ret
or
test
lea
shl
(bad)
div
mov
push
dec
stos
(bad)
sub
popa
iret
jo
popf
mov
mov
cmp
pop
mov
mov
mov
int
sbb
jecxz
xor
nop
sbb
cmp
inc
inc
sbb
or
out
cwde
cmp
fwait
pushf
pop
retf
push
cld
xor
les
xor
mov
retf
jl
jecxz
pop
rcl
lods
jmp
xor
xor
push
ss
fidivr
sub
add
mov
or
clc
test
sub
and
clc
mov
jb
or
mov
cmp
int
lds
push
push
call
sar
push
retf
adc
lods
inc
mov
xchg
mov
loope
mov
outs
aad
add
cmc
xor
out
stos
idiv
sub
add
in
ror
das
clc
mov
mov
pop
push
jmp
or
cdq
fadd
sub
jb
inc
mov
push
xor
dec
jo
icebp
cmp
retf
jl
pop
cmovno
xor
hlt
pop
xor
lea
cdq
jo
inc
mov
test
sbb
lea
out
adc
daa
add
imul
movs
push
or
cmp
sub
add
cmp
jl
movs
jb
adc
sbb
(bad)
mov
pop
arpl
add
not
and
repz
dec
jmp
mov
mov
or
fdiv
xlat
sub
popw
dec
mov
test
inc
xchg
cli
test
or
mul
xor
in
pop
lock
and
lods
jmp
mov
xchg
push
js
les
inc
es
(bad)
cs
loope
fdivrp
mov
shl
cmps
sar
cmp
add
imul
inc
ds
push
adc
jmp
fisub
xchg
cs
std
movs
imul
jo
xor
shl
test
data16
fwait
out
add
mov
jmp
movs
ins
adc
mov
repz
iret
loop
(bad)
cmc
fbstp
mov
push
adc
or
add
mov
aad
xlat
fmul
clc
add
loop
xor
mov
lods
xchg
push
xchg
cmps
jnp
in
jbe
adc
rcl
and
mov
mov
popf
cs
push
xor
stos
int3
movs
and
cmp
push
ins
loope
arpl
scas
aad
aaa
sar
mov
rcl
outs
sub
adc
sbb
xchg
dec
inc
call
jg
cmp
or
mul
std
ins
fild
push
adc
push
sbb
add
jne
aas
or
mov
jbe
mov
sbb
ja
rcr
loop
(bad)
aam
xor
mov
mov
jg
js
mov
scas
xchg
cmp
or
cmp
clc
clc
push
addr16
pop
(bad)
sub
xor
cmp
sbb
ins
mov
mov
pop
imul
mov
dec
aam
pop
outs
ror
std
jle
into
in
ss
jmp
sub
ins
mov
jne
(bad)
bound
adc
stos
inc
xchg
xor
sbb
iret
sub
cmp
ja
inc
or
mov
dec
movs
dec
cdq
add
xchg
mov
push
aaa
mov
neg
lea
add
or
loopne
adc
push
das
inc
les
xchg
in
sbb
dec
mov
dec
or
pop
inc
scas
mov
(bad)
ins
xor
mov
cdq
mov
repnz
add
jle
pop
jns
inc
call
call
cmps
hlt
ret
retf
dec
fcmovnb
in
sar
aad
mov
mov
pop
in
inc
in
jne
sbb
cmp
icebp
dec
jg
fld
rol
jbe
adc
mov
sbb
mov
inc
sbb
jno
add
xor
imul
sub
adc
rcr
push
push
add
shr
mov
pop
outs
cmp
mov
push
push
dec
or
(bad)
ds
aad
rcr
outs
add
inc
and
adc
sbb
jae
or
(bad)
xchg
dec
xchg
jno
adc
leave
inc
pop
xchg
js
test
or
test
mov
adc
sahf
in
rcl
out
je
mov
xor
fnsave
cli
xchg
(bad)
call
js
xchg
push
inc
jnp
jmp
fsub
xor
sahf
gs
inc
mov
js
or
dec
pop
cmps
rol
fdiv
jecxz
pusha
mov
(bad)
pop
xor
cld
and
int3
cmps
out
les
ret
int3
ja
xchg
in
test
loopne
pushf
mov
xor
pop
pop
mov
push
stc
pop
std
or
mov
std
xchg
inc
push
jne
sbb
jg
xor
push
fist
inc
cld
frstor
pop
cmps
js
movs
rol
dec
sbb
loop
repnz
adc
xchg
ffreep
sbb
ret
push
es
shr
pop
call
push
ss
fwait
add
sbb
sbb
hlt
cs
clc
or
lds
scas
out
mov
psrad
push
mov
ror
cli
in
test
pop
into
out
adc
adc
paddq
push
je
loope
jg
add
push
mov
sti
ret
push
ret
jns
jp
xchg
cli
dec
shr
jmp
push
call
das
push
aas
jecxz
sbb
inc
retf
add
aas
bnd
es
in
dec
inc
xchg
fidivr
mov
aad
mov
jnp
je
cmps
adc
mov
dec
mov
jecxz
dec
sbb
jae
sub
jnp
sar
es
xor
xor
out
or
sub
jmp
icebp
and
ja
fldcw
ja
retf
cmps
jns
repz
push
mov
jecxz
imul
cwde
xchg
xor
fstp
mov
fidivr
scas
stc
scas
dec
add
adc
fstp
pop
and
in
cmp
test
or
push
xor
pop
push
sahf
(bad)
icebp
sti
or
hlt
shr
mov
push
lods
rcl
pop
mov
ret
inc
cmp
pushf
sub
sub
sub
lods
cs
call
or
sub
ja
fsub
pmulhuw
or
addr16
jae
fbstp
repz
mov
cmps
and
and
outs
ror
sbb
fisubr
mov
test
repz
cwde
push
dec
and
xor
sub
fldenv
repnz
mov
cmps
out
xchg
nop
iret
inc
jecxz
sub
retf
xchg
test
ins
aad
pop
cmp
add
repnz
adc
div
dec
jge
mov
add
adc
cmp
and
in
popa
cmp
xchg
mov
mov
ror
rcl
sub
sub
xor
std
jns
stos
jo
xchg
inc
std
ins
call
or
add
rol
inc
add
in
ss
jnp
push
add
push
pop
adc
add
lods
and
jmp
scas
push
inc
jo
push
out
jno
mov
xor
mov
icebp
shr
retf
xor
push
or
mov
sbb
sar
push
mov
aaa
add
nop
add
scas
fist
imul
inc
iret
add
xor
sub
fstp
fmul
(bad)
fild
xchg
cmp
push
loope
rcl
adc
and
push
jmp
push
sbb
stos
ror
adc
(bad)
mov
stc
add
stc
cs
xchg
xchg
inc
movs
and
pop
retf
call
add
in
pop
inc
fwait
and
fwait
out
mov
xor
pop
push
pop
cmp
fmul
test
cmp
int3
xor
or
ret
repz
fwait
(bad)
mov
jno
iret
dec
loopne
and
pop
repz
jo
mov
inc
mov
sub
ret
loope
sahf
inc
cvtdq2ps
xor
sbb
fnstsw
sahf
test
sbb
adc
hlt
imul
xchg
sub
retf
test
fadd
mov
into
push
and
add
mov
jb
xor
lahf
cmp
fadd
dec
mov
mov
daa
outs
imul
mov
xchg
fcom
into
inc
and
mov
test
add
repz
scas
int3
mov
je
lods
mov
push
xchg
xor
ret
aaa
dec
or
xlat
and
stos
inc
pop
cs
iret
xor
cmps
and
dec
je
js
loop
ins
push
sbb
pusha
mov
lahf
adc
sub
jno
add
adc
iret
call
mov
mov
jge
fsub
outs
cmp
mov
xchg
adc
pop
mov
pop
js
pop
popa
xchg
out
jns
ja
lahf
cmp
pop
mov
fcmovnb
fiadd
cmps
jge
xor
cmps
jbe
inc
cmps
xchg
and
jbe
add
sub
push
pop
mov
loope
mov
data16
dec
sub
imul
and
stc
sub
pop
inc
mov
push
fdivr
pop
stos
push
mov
mov
mov
aaa
pusha
repnz
inc
loop
cmpxchg
fisttp
add
jp
xchg
pusha
ret
fild
shr
push
loop
dec
jle
hlt
sub
lods
add
loope
fist
pop
xor
sbb
and
lock
cdq
or
dec
aaa
sub
xchg
dec
adc
fst
(bad)
sub
test
jmp
movs
test
mov
in
inc
mov
pop
outs
mov
int3
call
jecxz
xlat
test
std
mov
in
data16
push
or
fimul
fsubr
push
in
mov
jl
sub
pop
aaa
pop
sbb
pop
movs
pop
in
pop
mov
push
and
mov
inc
jp
add
movs
add
dec
in
and
les
nop
movs
aaa
leave
mov
loop
(bad)
js
cmc
movs
clc
ficomp
fs
jb
sbb
out
jg
mov
test
add
enter
jl
cdq
je
push
cwde
jle
and
ss
es
(bad)
and
pop
mov
movs
sub
in
gs
pop
(bad)
fld
add
test
sbb
cmp
shl
cmc
(bad)
pop
add
jnp
lods
stos
adc
mov
push
dec
adc
ret
popf
not
cmp
loopne
or
cwde
(bad)
div
push
ret
add
xor
data16
loope
imul
(bad)
pop
sub
(bad)
mov
push
xor
mov
in
cs
mov
mov
xor
stos
ficomp
mov
sub
and
adc
cmp
push
jo
jecxz
icebp
add
(bad)
push
stos
push
push
adc
inc
push
test
fcmovne
sub
in
pop
push
fisttp
mov
ret
push
jecxz
xor
jl
mov
mov
outs
dec
fcom
ins
mov
scas
cmp
call
xchg
sar
sub
xchg
(bad)
lahf
mov
in
outs
sbb
out
std
jb
mov
xchg
imul
xor
imul
stos
jg
pop
call
push
sub
aam
sbb
adc
fs
call
arpl
sbb
push
xor
mov
cmps
sub
icebp
cmp
mov
xor
inc
add
test
icebp
pop
pop
gs
test
inc
inc
ja
rol
add
in
inc
xchg
push
xor
in
adc
pop
or
icebp
push
loope
jb
std
enter
rcr
or
idiv
mov
push
ins
or
push
pop
ins
ret
push
neg
mov
sub
inc
call
shl
xchg
loopne
retf
sub
int3
and
sub
gs
rol
xor
dec
test
mov
xchg
xchg
mov
int3
repnz
cmc
(bad)
cld
xor
xchg
pop
jne
cmp
xchg
jmp
xchg
icebp
loopne
lods
repnz
lods
push
cwde
fcomp
dec
adc
or
fst
fsubr
scas
mov
mov
in
ja
in
lahf
push
stos
lock
push
mov
add
adc
or
cwde
daa
dec
arpl
xchg
test
rcr
push
(bad)
and
mov
mov
xchg
push
add
icebp
sahf
dec
and
imul
js
jecxz
xchg
mov
pusha
jno
lds
mov
cmps
inc
bound
adc
sbb
mov
push
jge
mov
fwait
cmps
xor
cmps
jp
sub
jnp
jp
repz
and
cwde
push
mov
cld
mov
push
sub
pop
js
mov
mov
mov
xlat
out
add
cli
jecxz
pop
or
sahf
mov
mov
cs
enter
fs
fiadd
fmul
movs
push
adc
pop
jno
sub
and
cdq
push
pop
mov
jge
inc
pop
fs
jns
sub
push
je
add
loope
jmp
(bad)
in
idiv
arpl
cmp
jb
jmp
pop
mov
into
mov
push
clc
xchg
inc
out
cmps
fs
jg
fcmovnbe
daa
sub
dec
vmovhps
add
xchg
mov
push
push
ins
jb
mov
test
and
push
in
(bad)
repnz
or
leave
scas
repz
and
push
cdq
leave
out
clc
xor
je
xchg
or
pop
xlat
jo
call
(bad)
adc
cmp
call
ins
je
call
cmps
mov
dec
pop
out
mov
adc
cli
push
outs
push
sbb
pusha
pop
mov
adc
adc
ins
das
and
sub
pop
jge
mov
mov
xchg
pop
xchg
inc
int3
push
std
dec
dec
test
and
(bad)
clc
pop
xchg
stos
aad
mov
or
shl
adc
dec
call
sbb
lods
adc
ja
(bad)
xor
mov
(bad)
cmp
pop
mov
pop
ror
neg
cli
push
test
mov
sar
pop
pop
cmc
jnp
retf
inc
push
adc
(bad)
sub
test
adc
idiv
pop
mov
jl
push
xchg
(bad)
sbb
adc
loope
sub
(bad)
mul
mov
stos
and
dec
dec
xor
hlt
xchg
pusha
jnp
and
cs
xor
jl
aaa
push
jnp
call
cs
add
bound
sbb
dec
mov
retf
jbe
test
lahf
sbb
stos
lods
shr
lock
fdivr
sub
rcr
sbb
ret
pop
adc
mov
xor
pop
shr
leave
shl
mov
mov
sbb
xchg
add
sbb
adc
mov
push
fwait
scas
in
test
add
xor
xchg
add
test
cli
adc
xchg
cmps
cli
int3
sub
data16
xor
cli
xor
cmp
stos
popf
pop
neg
xor
lea
push
jge
ss
fs
xchg
fs
xchg
xchg
sub
je
pop
add
lods
sbb
pop
retf
cmps
xchg
push
std
loop
cmps
or
cmps
inc
in
shl
and
js
jo
xlat
cld
jle
mov
mov
les
jns
xchg
sub
dec
mov
imul
mov
mov
lds
sub
add
jae
or
mov
gs
push
inc
popa
or
in
and
add
adc
and
outs
popf
movs
pop
pop
xchg
pop
dec
mov
test
std
repz
jle
xlat
inc
sbb
cmp
mov
mov
add
push
pop
xor
lock
cmc
call
push
pop
cwde
dec
fnstenv
movs
addr16
push
(bad)
hlt
xor
pop
push
cmps
aad
ds
addr16
call
cmp
mov
jb
sub
scas
leave
sub
jge
mov
(bad)
aaa
(bad)
mov
enter
les
mov
pop
push
rol
mov
dec
leave
int3
fadd
dec
push
les
push
mov
cmp
cs
in
or
jl
shl
dec
push
mov
lahf
outs
ja
ret
sbb
les
cmp
push
xor
xor
push
fld
mov
test
shl
in
sbb
pop
adc
mov
mov
lahf
push
mov
imul
out
out
xchg
je
bndldx
sbb
repz
stos
push
das
pop
adc
addr16
jle
lea
ins
ss
dec
lds
sbb
jl
call
jb
inc
mov
les
pop
icebp
push
fstp
jmp
jp
test
js
js
daa
push
push
or
retf
(bad)
(bad)
gs
fcom
fbstp
test
mov
and
lea
fwait
dec
push
push
inc
pop
ror
jle
or
arpl
mov
mov
xchg
lahf
add
dec
xor
gs
fidivr
sbb
imul
push
retf
out
repz
and
scas
jp
int3
fisttp
pop
test
push
and
nop
or
pop
in
jne
mov
sbb
in
mov
cmp
push
xchg
out
(bad)
add
mov
adc
mov
xchg
pop
stc
pop
std
sub
imul
addr16
xor
cmp
or
add
add
nop
push
xchg
cmp
fs
jecxz
and
xchg
(bad)
(bad)
dec
add
in
jnp
adc
cmp
sbb
sbb
daa
add
adc
inc
sbb
pop
shl
imul
mov
mov
mov
aas
imul
pop
sbb
push
iret
call
les
(bad)
cmp
leave
sub
mov
retf
xchg
fs
ds
clc
lods
adc
test
(bad)
sub
mov
add
mov
xchg
sar
adc
xlat
jecxz
lea
in
jge
add
cdq
xor
sub
fs
mov
adc
test
mov
cdq
lds
loop
fmul
mov
and
push
hlt
xor
sti
xor
jbe
aas
int3
ins
and
add
rcl
cmps
mov
fwait
cld
xchg
test
adc
mov
jp
sub
sub
sub
add
ds
imul
lahf
js
fs
repz
xchg
shl
aaa
cmps
cdq
sub
cs
jl
hlt
add
aaa
mov
test
xor
loope
mov
mov
jp
adc
sti
cli
dec
xchg
test
lds
cmp
test
cmp
sbb
xor
inc
popa
add
jne
jge
adc
cmc
daa
push
call
lahf
sub
add
or
sbb
ret
in
into
mov
inc
rcr
test
mov
mov
xchg
data16
mov
inc
ret
sbb
sti
int
jns
out
dec
neg
adc
dec
mov
add
inc
sub
stos
addr16
(bad)
and
(bad)
sbb
jmp
dec
dec
loop
shl
lahf
dec
stc
loope
(bad)
idiv
jg
xor
in
xchg
mul
cmps
stos
mov
(bad)
sub
inc
into
mov
outs
stos
jns
pushf
das
fsub
(bad)
ror
mov
cwde
pop
xor
or
mov
fstp
jp
jp
loop
jge
or
test
shl
sbb
(bad)
out
popa
xor
leave
js
(bad)
dec
add
lock
repnz
add
fs
lods
pop
shl
adc
push
xor
scas
push
mov
lahf
retf
mov
cmp
jb
retf
cld
stos
aas
(bad)
push
pop
adc
ds
ret
fs
test
adc
imul
push
cdq
mov
test
leave
scas
pop
ss
fsub
fbstp
mov
cwde
jns
in
sbb
fwait
jg
or
jae
inc
sbb
pushf
mov
retf
cmps
push
mov
std
pop
std
mov
jns
mov
test
inc
ret
loopne
loop
cmp
push
hlt
xchg
sub
sahf
push
cmp
push
rcl
mov
das
pop
jg
(bad)
ins
pop
jmp
je
es
in
inc
(bad)
mov
cmp
xchg
or
pop
inc
data16
je
lock
add
aas
mov
cmp
xchg
push
in
mov
(bad)
jbe
push
lea
dec
lahf
add
jle
into
and
cmps
mov
add
aaa
and
cmc
sbb
mov
and
out
push
repz
(bad)
out
inc
(bad)
inc
arpl
mov
(bad)
js
sub
mov
adc
xor
and
pop
add
xor
sahf
mov
leave
neg
mov
dec
pop
sub
add
rol
stc
dec
mov
pop
adc
pop
ret
cli
or
nop
xlat
faddp
sbb
add
cwde
retf
dec
dec
sbb
sub
mov
cmp
(bad)
mov
jnp
retf
cs
fisub
(bad)
mov
stos
retf
pop
cmp
shl
test
sbb
mov
inc
xchg
and
sbb
test
jae
in
xor
sti
das
mov
xor
sbb
push
inc
mov
mov
out
clc
call
loop
mov
cmp
mov
pop
(bad)
mov
pop
(bad)
clc
xchg
inc
ins
jg
adc
adc
ret
inc
push
retf
(bad)
adc
jb
xor
int3
jl
pop
sub
push
dec
xor
xor
in
jl
mov
ins
out
mov
push
inc
aas
adc
ins
or
pushf
mov
jbe
pop
xor
push
or
into
enter
ins
dec
mov
loopne
cmp
jns
pusha
cmp
xchg
pop
push
lahf
dec
cmp
popa
sub
je
mov
scas
cmp
ins
jne
loop
cmp
stc
sar
out
inc
jmp
adc
(bad)
lock
mov
cld
mov
pop
push
pop
cmps
jnp
cmp
cli
cld
loop
ss
dec
mov
cmp
scas
dec
mov
pop
dec
aam
cmp
sbb
push
add
int
adc
ffree
pop
xlat
fwait
mov
sub
adc
jb
leave
and
je
dec
fsubr
and
cli
das
add
mov
push
adc
leave
sub
fdivr
inc
jge
std
mov
sub
fdivr
cmp
stc
add
fdiv
adc
into
das
add
jg
idiv
in
adc
and
push
test
out
cmps
push
jo
loop
mov
mov
psllw
xchg
mov
or
rcr
pop
aas
stc
ss
leave
repz
sub
je
add
or
add
and
mov
pop
into
inc
cmp
xchg
mov
jl
push
ret
mov
mov
xchg
and
xor
aam
push
mov
mov
push
imul
pop
cmps
sbb
int3
cld
mov
clc
mov
inc
or
push
jmp
les
jb
add
call
xchg
ja
sbb
cli
xor
scas
call
or
fcomp
xor
in
ret
cmp
movs
aas
cwde
cdq
xchg
dec
dec
xor
pop
mov
pxor
pop
add
adc
mov
dec
xor
loop
rcl
pushf
popa
push
and
pop
xor
jnp
fsubr
pop
add
jnp
ja
pusha
div
xor
cmp
xor
aam
sub
jno
inc
daa
xchg
jne
pop
mov
ja
dec
xchg
repnz
fstp
pusha
mov
test
mov
mov
adc
ret
mov
pop
or
pop
xor
cmc
fcom
and
sbb
popf
fs
push
mov
sub
sbb
xor
lds
push
das
mov
sbb
cmp
jmp
pop
mov
mov
mov
add
mov
(bad)
aad
pop
push
add
rcr
imul
adc
sbb
sub
and
aad
(bad)
and
and
test
jecxz
scas
repnz
sahf
leave
retf
movs
fild
xor
pop
ins
out
mov
fisttp
xor
sub
jle
(bad)
jmp
inc
cld
(bad)
sbb
mov
in
mov
jmp
pop
sbb
pop
dec
mov
test
jne
jno
das
add
jne
out
mov
xor
data16
xchg
shr
xchg
mov
adc
push
mov
not
xor
stc
fcom
pop
sbb
stos
adc
adc
cmp
inc
mov
fld
jge
addr16
aas
adc
dec
push
push
push
lods
ins
loopne
xchg
sysexit
aam
or
sub
mov
or
ret
jl
xchg
sub
lods
adc
pusha
pop
leave
pop
inc
cmp
jne
add
retf
and
sbb
std
fwait
popf
pop
jmp
cmps
adc
xchg
scas
call
cmp
addr16
ror
push
jo
out
pusha
push
xor
sbb
inc
jbe
or
enter
mov
or
in
xchg
mov
daa
mov
aaa
xchg
(bad)
mov
call
or
push
imul
aam
jecxz
jp
sbb
scas
xchg
fistp
cdq
stc
(bad)
mov
test
pop
and
ins
enter
stos
sbb
sub
jg
bound
lds
jns
adc
inc
dec
adc
sahf
push
cld
mov
mov
test
pop
rcl
aas
lahf
test
out
not
cmp
cmp
mov
or
mov
js
sti
int3
mov
adc
cmp
push
cmp
div
call
mov
cs
mov
gs
frstor
js
push
fwait
inc
push
jle
inc
mov
mov
sbb
sbb
sbb
scas
call
movs
dec
arpl
lahf
fs
mov
sti
and
cmp
fdiv
add
in
mov
pop
in
cmp
lods
scas
sub
stos
xchg
jg
jb
add
mov
(bad)
mov
pop
lea
cwde
push
fild
mov
fs
ins
dec
fs
adc
push
pop
lods
scas
cmp
bound
fist
sti
xor
jns
xor
int
jnp
inc
fs
and
ins
mov
das
lds
mov
mov
call
js
jle
dec
xchg
into
or
js
retf
lock
getsec
and
aaa
push
stos
jae
mov
xor
lahf
clc
fwait
jmp
jmp
inc
test
in
adc
stos
mov
push
jecxz
cmp
jae
push
out
adc
fs
sahf
ret
sub
cmp
push
xor
int
leave
mov
fidiv
xchg
inc
popf
push
pop
loop
or
std
mov
push
adc
mov
jno
mov
xchg
inc
xchg
jl
rcl
push
adc
jb
mov
mov
mov
adc
xor
inc
cmp
inc
pop
retf
inc
idiv
test
jmp
push
sbb
ds
sub
inc
sub
sbb
dec
addr16
or
or
daa
mov
jmp
out
mov
and
cmp
mov
pop
pop
adc
inc
rcr
cli
mov
int
mov
data16
(bad)
sbb
dec
mov
and
cli
aam
aaa
jns
ins
jg
out
or
dec
xchg
jmp
cwde
or
cmp
push
jge
xchg
iret
lods
and
inc
cmp
cmps
push
leave
je
sub
and
mov
arpl
lods
jnp
leave
repnz
sbb
jecxz
mov
jl
sbb
pop
bnd
nop
repnz
and
mov
jmp
test
xchg
jae
lds
push
xor
xor
stos
dec
ret
mov
div
push
push
inc
mov
ret
es
add
push
jne
sub
loop
mov
sub
rcr
xchg
ret
and
sub
dec
fnstsw
dec
test
inc
(bad)
jbe
xor
inc
ins
dec
ret
ins
rol
xor
je
out
cmc
call
ds
stos
ins
push
pop
adc
sti
sub
test
call
dec
push
out
in
fisubr
psubd
ins
pop
and
aaa
push
fsub
xor
xor
push
cmp
call
inc
in
ins
lock
xchg
ins
add
gs
jbe
or
mov
jmp
sub
sbb
lahf
(bad)
lods
scas
adc
mov
and
ja
mov
cmp
mov
fisttp
stos
in
out
dec
jmp
dec
xchg
and
and
xchg
repnz
cmp
sbb
loopne
xchg
mov
std
mov
lock
out
cmps
aaa
or
xor
sar
jge
add
lds
sbb
sbb
sub
(bad)
imul
pop
psrld
fs
ldmxcsr
cmp
push
mov
fnstcw
mov
inc
sar
push
cmps
add
pop
fsub
fidivr
and
jg
xchg
mov
test
in
push
xor
sbb
cld
cmp
enter
mov
movs
add
es
inc
into
inc
and
inc
dec
sub
jge
jae
mov
jne
push
xchg
xor
push
inc
mov
push
ret
push
les
or
retf
jb
out
gs
inc
mov
push
jg
add
rcr
push
mov
lods
dec
mov
shl
sbb
pop
xlat
outs
imul
jbe
and
mov
outs
call
push
sbb
les
outs
popf
loope
sub
push
aas
scas
jmp
int3
sahf
jno
loopne
jne
outs
(bad)
or
xchg
fiadd
test
(bad)
sub
(bad)
jne
ret
add
sub
sbb
pusha
stos
push
inc
push
or
aam
mov
pop
or
dec
sub
xchg
(bad)
into
mov
jo
jno
jo
pusha
pop
dec
push
in
lods
lahf
scas
push
pop
leave
in
test
mov
outs
shl
lods
fsubr
jg
ficom
lea
xchg
jo
test
jge
or
xor
icebp
jbe
sbb
mov
sbb
add
rcl
pop
pop
adc
inc
xchg
movs
ja
pop
pop
push
jmp
jp
cmps
sub
push
in
adc
xor
bound
inc
(bad)
pusha
call
popa
or
cwde
add
mov
add
cdq
stc
or
repz
jnp
and
stc
jmp
js
cmp
mov
jbe
dec
bound
int3
cmps
mov
xchg
mov
cmps
sbb
cmp
pop
cdq
xchg
push
ret
fwait
add
jg
mov
jae
aam
sub
in
jmp
adc
rcr
push
adc
push
popa
sub
and
icebp
mov
popa
cmc
inc
add
fisub
fld
stos
clc
cmp
in
mov
in
xchg
mov
jmp
or
or
dec
ins
addr16
sar
adc
sti
cmp
mov
daa
gs
lds
popa
shl
pop
pop
scas
dec
sub
fs
ins
shr
and
loop
iret
cmps
sub
inc
aas
fcmovbe
dec
stc
sub
fnstsw
fsubrp
pop
(bad)
mov
jb
retf
into
idiv
pop
pop
push
fsubrp
rcr
sub
push
or
push
xlat
loope
fist
jmp
push
int
mov
aad
and
xchg
push
(bad)
hlt
pop
(bad)
ins
or
sub
mov
inc
lock
sub
int3
xchg
mov
mov
add
sahf
pusha
(bad)
jae
push
sahf
mov
jns
sbb
sub
iret
cmp
(bad)
mov
je
mov
arpl
cli
jbe
sub
sbb
fadd
cmp
xchg
in
and
popa
mov
push
call
int
cmp
xlat
ja
xchg
loope
mov
retf
xchg
xor
cwde
gs
hlt
ja
and
cmp
xchg
cs
fisubr
jmp
inc
stc
cmp
(bad)
in
(bad)
jne
jmp
mov
mov
call
iret
sbb
sub
push
sub
loope
gs
xor
xor
fidivr
lahf
movs
test
push
lods
xchg
pop
cli
movs
scas
stc
sar
jb
je
outs
push
cld
lods
add
fldcw
add
inc
mov
imul
aad
stc
push
packuswb
fcmovnb
imul
js
push
jnp
shl
pop
leave
mov
bound
inc
retf
pusha
cmps
pop
xchg
push
scas
(bad)
pop
jne
dec
xor
(bad)
xchg
add
addr16
in
fwait
cwde
enter
xchg
jae
push
ror
push
mov
mov
neg
mov
add
cmps
dec
push
mov
xor
pop
mov
je
jle
mov
xchg
inc
mov
jae
clc
rcr
xor
ins
jno
hlt
inc
xor
xor
push
nop
push
push
pop
push
sub
pop
fidivr
and
sbb
pusha
fcomp
lods
gs
aad
(bad)
enter
sub
push
push
adc
or
into
xchg
push
bound
push
pop
mov
dec
xchg
lock
jne
data16
xchg
adc
leave
jecxz
popa
or
push
push
hlt
cmp
xchg
inc
mov
inc
in
inc
sbb
add
cs
cs
shr
inc
mov
pop
iret
shl
inc
outs
mov
jg
mov
test
ss
js
sbb
mov
mov
or
mov
idiv
mov
mov
xchg
or
fiadd
inc
inc
add
fwait
sahf
push
arpl
adc
add
ins
sbb
shl
(bad)
dec
fild
mov
xor
jp
mov
arpl
fcmovb
push
lods
aam
xchg
mov
fsubr
add
imul
rcr
stos
xchg
rcr
xchg
pop
retf
hlt
cmp
xchg
frstor
aam
ins
ret
dec
cmc
hlt
jbe
push
aaa
sub
stos
repnz
mov
outs
nop
cmps
popf
test
sbb
emms
sbb
sti
fs
and
or
das
pusha
ret
inc
popf
das
adc
jmp
in
inc
loop
in
ret
jbe
loope
cld
fs
add
inc
ficomp
sub
mov
es
mov
(bad)
ja
xor
sbb
xchg
std
pushf
jae
xor
stos
pop
push
pop
retf
sub
sbb
cdq
addr16
adc
inc
jp
mov
sar
lods
adc
loopne
sbb
sub
into
int
sar
mov
inc
arpl
bound
pop
ja
and
scas
or
jbe
test
js
add
jb
xchg
mov
mov
push
addr16
loop
cmp
and
addr16
add
push
les
cmp
mov
pop
xor
jo
dec
xor
repz
dec
or
(bad)
add
inc
repnz
xor
or
jge
adc
jb
sub
jae
jmp
mov
push
iret
mov
mov
dec
sbb
jne
aaa
sti
movs
sub
in
leave
add
mov
sbb
push
scas
push
cld
adc
lods
lods
daa
data16
mov
pop
rol
sti
xchg
xlat
pop
dec
dec
mov
jne
jle
xchg
fs
mov
fcmovnb
repz
mov
inc
and
lods
(bad)
fist
mov
out
push
test
cld
ss
pop
xchg
retf
das
sub
mov
mov
adc
fimul
call
jbe
mov
add
jns
mov
dec
div
or
cmc
inc
inc
scas
mov
jp
dec
or
mov
and
fld
sub
aaa
mov
xlat
cmc
push
scas
movs
jne
inc
jbe
pop
push
popf
inc
cli
and
int
add
ds
idiv
pop
inc
daa
std
mov
lea
jno
rcr
pop
pop
sbb
and
mov
loop
fcomp
inc
or
add
push
inc
push
not
jo
mov
rcr
xchg
adc
add
inc
aaa
mov
cmps
push
dec
sbb
sub
movlps
lods
mov
arpl
inc
repnz
out
add
out
push
imul
pop
lds
jecxz
(bad)
adc
inc
xchg
mov
xchg
and
aam
mov
pop
loop
pop
mov
(bad)
push
push
mov
int
test
pushf
in
xchg
ss
out
or
jo
lods
pop
mov
sub
cdq
sbb
sbb
or
sub
sbb
cmp
cmp
sub
add
mov
clc
xlat
pop
in
lods
pop
xchg
iret
inc
xor
sbb
ds
jecxz
stos
iret
movs
sahf
ss
call
sub
test
cli
dec
jmp
dec
push
je
xchg
ins
sbb
pop
sbb
push
pop
adc
xor
cmp
push
leave
cmp
fwait
inc
mov
fdiv
push
jnp
xor
fistp
adc
clc
mov
dec
xlat
add
mov
(bad)
jnp
and
dec
push
pop
imul
or
pop
cs
enter
dec
test
ja
push
loopne
or
sbb
stc
fdivr
sub
jle
(bad)
mov
inc
and
sbb
fcom
cmps
fisttp
mov
jnp
sti
enter
dec
mov
bound
jl
dec
aas
icebp
cdq
pop
pop
pop
ins
mov
inc
lea
xchg
inc
sti
stos
sub
aad
mov
popf
rcr
popf
add
retf
popa
adc
cmps
sar
into
sar
pusha
xor
adc
pop
and
(bad)
repnz
add
jo
daa
mov
mov
fld
add
aam
xchg
mov
sbb
cwde
pop
mov
fisub
push
fldl2e
mov
in
push
fimul
out
imul
in
movs
ret
mov
stos
mov
cld
test
hlt
pusha
push
bound
jno
dec
mov
arpl
or
adc
mov
sbb
or
fs
ds
or
test
pop
sbb
in
test
pop
mov
mov
leave
mov
into
fucom
aam
fist
sbb
xchg
aad
mov
js
pop
sbb
add
fs
fsubr
add
mov
retf
mov
push
sub
call
fisubr
gs
test
inc
std
lods
xlat
popf
pop
shr
(bad)
es
cmps
push
jle
sub
fnstenv
add
in
add
hlt
pushf
lahf
xor
call
stos
cmp
xor
mov
xchg
cs
push
test
jb
inc
inc
fcomp
push
push
mov
das
daa
jae
ret
lds
jne
ror
pushf
pushf
rcl
fstp
retf
ins
rcl
mov
hlt
pop
jne
mov
ins
mov
mov
inc
sbb
cmp
cld
out
ins
pushf
jnp
out
lods
ja
cmp
mov
mov
fsubr
inc
push
inc
bound
or
into
call
push
stos
addr16
and
retf
jge
cmp
and
or
xchg
add
push
test
imul
ins
outs
mov
pop
add
(bad)
ins
cs
lods
dec
add
or
and
mov
mov
pop
jae
jl
nop
mov
xchg
cli
mov
sub
lea
test
mov
jmp
xor
fcom
in
sub
outs
mov
jno
clc
xlat
cmp
inc
xor
daa
jmp
loope
repnz
or
dec
inc
ins
fidiv
enter
pop
stc
ins
xchg
dec
call
sub
cmp
xchg
adc
mov
sub
sub
mov
movs
add
jecxz
jle
mov
xor
fistp
push
fimul
cmp
cmp
in
and
inc
imul
xchg
mov
mov
(bad)
or
retf
adc
and
test
adc
mov
das
rcl
ds
ds
adc
rcr
cmp
inc
jbe
aad
push
mov
dec
mov
mov
lahf
cld
push
pushf
xchg
cmps
cs
mov
retf
dec
addr16
jnp
fadd
call
sbb
sbb
inc
sbb
jmp
mov
push
repz
jecxz
dec
les
cmp
mov
test
push
aas
and
cli
outs
push
dec
(bad)
das
dec
shr
jmp
adc
jbe
mov
adc
ins
mov
pop
sbb
(bad)
imul
popf
int3
fidivr
jle
popa
jmp
inc
(bad)
out
cs
mov
out
pop
fcomi
pusha
pop
in
sbb
mov
dec
sbb
rcr
fcom
pop
sub
or
push
cmp
fwait
jns
and
push
bnd
pop
push
mov
or
test
sbb
add
xchg
add
test
fwait
sar
mov
dec
loopne
popf
scas
int3
pop
dec
arpl
add
jle
std
push
ss
rol
(bad)
(bad)
fs
add
xor
cld
or
mov
ins
mov
ret
lds
push
jno
es
movs
lahf
movs
mov
mov
push
mov
push
in
pop
aam
dec
inc
or
sub
iret
(bad)
mov
(bad)
xchg
cli
and
sbb
cmp
ins
je
lds
mov
retf
in
cmp
sar
call
retf
cmp
es
sub
or
jb
xor
adc
xor
call
lds
cmp
sub
pop
(bad)
sub
cmp
bnd
jmp
cmp
add
jo
jle
ja
mov
jb
(bad)
je
in
push
cmp
les
add
mov
jns
cwde
pop
mov
jg
repz
in
out
adc
sbb
or
nop
les
or
jnp
fisttp
daa
cdq
mov
mov
ins
data16
in
mov
and
mov
call
cmp
std
fimul
ja
faddp
icebp
push
ficomp
call
test
clc
xchg
repz
into
inc
pop
(bad)
push
or
lods
div
push
aam
hlt
xchg
rcr
xor
adc
push
adc
cmp
cmp
test
mov
add
addr16
sbb
xchg
mov
test
mov
gs
out
stc
sub
in
std
(bad)
add
push
cmovae
pop
jo
xchg
aaa
and
jne
push
shr
ja
clc
sbb
jne
arpl
or
push
out
sbb
jle
in
in
(bad)
in
jecxz
div
pmulhw
xchg
xchg
out
xor
cmps
das
gs
clc
cmp
ret
cmp
in
adc
sub
sbb
mov
mov
mov
out
sbb
(bad)
mov
lahf
ret
imul
loop
xchg
in
lahf
pop
fnstcw
jae
mov
hlt
ins
loop
inc
iret
scas
jmp
xor
pusha
mov
neg
loop
popf
xor
add
inc
adc
cmp
inc
fs
add
pop
jns
lods
or
test
pop
mov
xor
int
xchg
ss
jns
and
xchg
cmps
xlat
or
pushf
in
sbb
jno
call
push
(bad)
fistp
xchg
enter
gs
push
lock
inc
repz
lods
ror
cmp
ins
mov
test
mov
mov
sub
icebp
movs
push
popf
push
and
mov
dec
test
pop
dec
aad
sub
dec
add
mov
inc
imul
pop
push
in
iret
inc
add
jp
lds
mov
sub
sub
jae
in
shl
dec
jge
out
jae
xor
mov
lahf
sub
jo
dec
jp
dec
inc
movs
inc
jmp
jb
addr16
repnz
bound
fidivr
lods
or
xchg
das
xchg
sub
mov
mov
mov
and
fwait
sahf
bound
in
or
adc
pop
jp
or
inc
sub
pushf
loope
(bad)
imul
ds
into
ror
mov
aam
arpl
or
gs
leave
(bad)
pusha
dec
mov
push
out
cld
pop
inc
pushf
dec
es
pop
enter
push
loop
imul
cmp
mov
imul
mov
push
cwde
ds
cwde
jbe
lds
dec
jnp
iret
aam
push
pop
push
retf
jb
sbb
add
mov
test
loopne
loopne
mov
add
add
dec
adc
cdq
and
cmp
mov
retf
dec
mov
xchg
mov
int
lea
push
jle
push
cli
xor
pop
int
(bad)
adc
pop
ja
hlt
retf
sbb
pop
xchg
ret
xor
sub
sub
push
ret
xchg
aad
clc
dec
int
cmp
jle
aad
mov
out
mov
push
mov
call
add
jge
push
push
ret
pop
(bad)
mov
dec
inc
xchg
cmc
mov
sbb
add
arpl
addr16
enter
imul
(bad)
or
in
cmp
sahf
pop
pusha
mov
mov
fnsave
mov
push
cmp
adc
clc
ficomp
dec
ds
and
jae
out
aaa
les
jmp
push
outs
jo
stos
lds
pop
push
int3
push
cmp
in
repnz
inc
les
test
xor
ss
mov
adc
ret
cmps
shl
aas
cmp
pop
or
cmp
maxps
lods
shl
ror
sar
int3
arpl
ficom
out
push
xor
int3
(bad)
jo
push
mov
adc
dec
cmp
sub
cmc
dec
test
mov
sub
cmp
mov
jmp
add
sub
repz
push
das
repz
cli
sub
aad
pop
call
jne
das
jnp
js
outs
retf
cdq
dec
(bad)
popa
mov
mov
lods
stos
cmp
iret
and
sub
inc
pop
lea
stos
push
lahf
pop
fxch
sar
mov
inc
in
pusha
xchg
sbb
pop
sbb
lods
repnz
xchg
jg
icebp
repnz
loopne
jbe
jl
adc
push
ss
adc
mov
xchg
cld
out
mov
sahf
and
leave
push
lods
out
xchg
mov
sbb
sbb
or
cmp
and
xchg
dec
ins
in
sbb
sub
inc
push
xchg
enter
xchg
icebp
push
loop
sub
loope
and
push
fadd
cs
sbb
les
leave
shl
in
out
push
ins
jb
mov
in
cmp
push
ret
push
ret
fbld
int3
and
mov
lock
test
adc
cmps
call
jbe
pop
dec
stos
(bad)
cli
xor
dec
ds
imul
jo
xchg
pushf
int3
cs
in
and
inc
inc
cmp
pop
xchg
mov
or
daa
outs
jnp
push
fsub
xchg
in
push
mov
add
sub
in
mov
inc
inc
mov
fild
add
dec
popf
mov
pop
push
mov
xchg
xchg
xor
retf
(bad)
sar
xchg
jle
xchg
mov
ins
(bad)
fdiv
fs
ficomp
iret
add
retf
aas
xor
call
mov
or
push
movs
push
(bad)
cmp
xchg
sbb
jns
aaa
pop
inc
ja
or
add
jecxz
push
ins
mov
scas
dec
sub
pop
ds
ret
loop
popa
rcl
jmp
test
cmp
mov
pushf
push
mov
inc
mov
call
mov
clc
and
out
(bad)
or
jecxz
ss
ja
mov
dec
lods
les
xchg
jns
jge
test
push
pop
mov
mov
into
or
push
and
outs
push
mov
fcomp
xor
cmp
adc
add
pop
dec
fwait
jb
and
adc
movs
add
sbb
jb
out
jnp
stos
ret
ds
cdq
xchg
cmp
test
out
aas
es
and
shl
or
pop
inc
pop
inc
daa
lods
mov
add
and
jmp
inc
fistp
lock
loop
jle
jmp
xchg
or
fwait
mov
lahf
xlat
jns
push
gs
(bad)
loopne
inc
dec
mov
add
dec
jns
jne
rcl
push
rol
sub
sti
push
mov
pop
push
(bad)
dec
in
mov
lds
(bad)
gs
in
mov
cmp
inc
and
jge
imul
adc
push
fs
(bad)
lds
aas
and
mov
push
pop
in
imul
or
stos
push
nop
mov
stos
fadd
push
jnp
inc
pusha
sub
xchg
out
ins
or
adc
out
pop
popa
icebp
shl
inc
sub
out
sbb
and
sub
add
fsub
pop
and
inc
xchg
mov
sub
add
mov
add
enter
push
add
(bad)
xchg
loop
shr
jge
cwde
cld
and
pop
add
test
adc
mov
in
and
fst
or
push
mov
jmp
outs
iret
xor
xor
mov
push
test
test
ss
test
jae
sbb
jp
add
adc
xlat
ret
sbb
fwait
mov
aad
nop
sahf
push
mov
movs
cmp
or
xchg
fist
sub
in
xchg
lds
lock
movs
and
lahf
and
ficom
dec
add
dec
inc
dec
xor
add
rol
and
retf
pop
aad
mov
fsubr
imul
pop
push
and
sub
adc
arpl
sub
aad
pop
lods
outs
push
arpl
add
sti
clc
cdq
movs
xchg
cmp
fild
sbb
fcom
sbb
(bad)
pop
jne
sbb
popa
int
push
or
xor
xchg
jb
jmp
(bad)
je
fisub
stos
jmp
aas
addr16
aad
test
pop
arpl
mov
pop
les
mov
outs
(bad)
push
scas
adc
int3
out
enter
push
dec
leave
push
aaa
mov
sub
repz
pusha
push
inc
lds
or
imul
mov
xor
out
jl
mov
add
imul
mov
pop
movs
stos
xor
loop
pop
xchg
lods
scas
(bad)
and
stos
push
mov
retf
sbb
xor
and
lahf
popa
pop
dec
cmovg
test
xor
adc
xor
xor
push
jg
ss
xchg
add
sbb
nop
mov
add
xchg
lods
in
pop
stc
add
jle
das
rol
inc
jecxz
sti
xor
imul
mov
push
fs
dec
fpatan
call
fs
test
clc
jle
pop
or
fimul
mov
pusha
stc
or
mov
xchg
add
mov
or
pop
mov
xor
div
inc
scas
pop
sbb
fst
ja
xor
push
jns
jmp
sub
mov
or
or
xchg
not
push
aas
test
xlat
daa
mov
mov
cmps
out
jmp
sub
test
cmp
in
pop
add
fs
xchg
mov
ror
in
sub
gs
fidivr
test
pop
sub
fucomi
sub
dec
addr16
out
pop
mov
gs
hlt
stos
sar
out
out
cmps
je
in
lods
jge
loop
gs
xor
xchg
or
cdq
mov
add
stos
xor
pop
fwait
jl
out
mov
sbb
dec
adc
or
mov
dec
xchg
pusha
aaa
lods
or
jb
push
fisub
mov
mov
leave
(bad)
mov
(bad)
aas
pop
mov
jg
in
(bad)
mov
and
mov
ja
dec
dec
test
test
imul
dec
pop
cmps
lods
push
ret
or
in
or
jmp
lds
inc
pop
adc
les
(bad)
test
nop
dec
mov
movs
hlt
xor
out
xchg
adc
mov
cs
test
(bad)
mov
sub
mov
pop
xor
cli
in
xchg
jae
or
cmp
adc
cmp
jno
mov
pop
xchg
ret
icebp
popa
arpl
loop
mov
int3
or
push
data16
leave
jo
outs
inc
stos
add
cmp
ins
and
lods
inc
adc
xchg
lds
add
xchg
call
sbb
xlat
fbld
push
outs
push
stc
mov
inc
jns
lods
sbb
and
adc
js
ja
into
inc
mov
test
cmp
adc
mov
fs
aas
jmp
mov
cdq
cmp
and
adc
scas
pop
mov
jp
jl
sti
mov
call
jo
mov
push
inc
pop
fnstenv
dec
sbb
ret
mov
cmp
daa
arpl
jnp
call
(bad)
hlt
imul
call
ins
inc
mov
(bad)
xor
mov
hlt
sbb
cmp
lock
cmps
pusha
mov
add
daa
and
jp
lods
mov
cmp
aaa
daa
jg
shl
(bad)
mov
pop
ins
in
pusha
pop
push
call
add
sbb
dec
pop
fs
mov
and
mov
and
or
fdivr
mov
inc
sbb
mov
jp
clc
stc
cs
sti
add
push
(bad)
push
test
and
dec
and
addr16
rol
cwde
xchg
cld
pop
shr
xor
loop
test
dec
(bad)
lods
adc
cmp
mov
arpl
jo
dec
mov
nop
pop
sub
xor
test
popa
(bad)
sbb
fisttp
sub
repz
stos
and
add
sahf
dec
out
neg
ror
popf
ins
add
mov
xchg
adc
pop
bnd
lock
cmp
sub
iret
dec
jp
add
inc
mov
sbb
fldcw
inc
add
or
xor
and
jecxz
ds
inc
pop
adc
icebp
inc
daa
inc
stc
cmp
sti
imul
dec
into
stc
jp
push
mov
mov
or
dec
jmp
adc
jge
mov
and
repnz
data16
(bad)
or
inc
jnp
popf
ffreep
dec
retf
mov
loope
mov
scas
js
inc
jp
shl
xchg
leave
lahf
outs
dec
les
jp
sbb
dec
sub
push
mov
ins
push
xchg
fsub
imul
jns
shl
dec
sahf
jl
bound
mov
cmc
fisttp
aas
adc
lods
xor
xchg
sbb
call
test
aas
push
daa
into
pop
popa
mov
les
retf
stos
lock
es
pop
xor
retf
retf
mov
inc
loop
ret
add
cwde
cmc
jmp
std
xchg
xchg
mov
fs
popf
inc
jmp
nop
test
ds
mov
int
sbb
add
xchg
mov
jge
fist
cld
add
mov
pop
lock
jns
push
cld
lock
xchg
mov
icebp
jbe
xor
fs
pop
shr
xor
or
xor
xor
or
shl
push
or
sbb
movs
ret
dec
cwde
push
push
inc
sbb
adc
xchg
sbb
jnp
xchg
fnstsw
mov
lds
mov
mov
test
stc
sub
sbb
xor
pop
mov
sar
sbb
cli
leave
xor
sbb
push
mov
cmps
(bad)
mov
jo
js
and
mov
sub
adc
sahf
and
dec
push
dec
out
xor
test
cmp
push
sahf
xchg
sub
pop
mov
mov
dec
ror
jecxz
pop
mov
mov
jo
mov
stc
jo
in
sbb
aas
xchg
clc
sub
es
dec
jmp
ret
push
cmp
jbe
repnz
push
push
in
and
out
fcomp
in
mov
repnz
cli
pop
aaa
or
add
test
test
movs
mov
mov
popf
jbe
mov
add
movs
push
sbb
call
out
data16
sbb
adc
ror
and
lahf
and
(bad)
cli
sti
aam
mov
jge
mov
(bad)
fnsave
shl
std
push
mul
shl
in
iret
pop
sbb
jmp
pop
imul
inc
xchg
aam
and
push
movs
out
xor
(bad)
outs
pop
adc
leave
inc
cmp
sbb
cli
out
enter
mov
fbld
test
rcr
adc
icebp
jno
rcr
xchg
sbb
stos
cs
cwde
push
daa
and
stc
sbb
xchg
cmp
xchg
jp
mov
xchg
xchg
clc
sti
jmp
cwde
push
test
push
xchg
sub
cmps
ror
stc
icebp
cmp
fisub
inc
mov
dec
push
sbb
mov
stos
out
repz
repnz
pop
add
sbb
jle
adc
jne
ret
in
lahf
xor
ret
push
fdiv
and
cmc
xchg
dec
or
xor
pop
dec
mov
aaa
es
push
scas
sbb
xchg
or
mov
(bad)
js
test
mov
aas
data16
scas
jmp
jmp
fnstsw
sahf
jp
pop
movs
(bad)
sub
xchg
dec
xor
jg
lock
jae
and
bound
pop
js
pusha
mov
retf
lods
pop
hlt
and
pop
xlat
jnp
aas
gs
inc
sub
lahf
not
lahf
call
mov
daa
stc
add
xchg
push
loopne
cmc
and
pop
hlt
div
cmp
mov
mov
call
pop
jae
push
and
cwde
ret
out
sbb
inc
sbb
clc
fild
pop
push
cld
das
or
popa
adc
lds
jbe
out
mov
loopne
call
push
call
dec
sbb
aad
cli
js
inc
adc
int
inc
shl
dec
mov
sub
sbb
out
rcl
aam
xor
mov
jle
and
xor
mov
fimul
push
or
jl
ja
jmp
ins
xor
xchg
mov
pop
cmp
dec
mov
mov
idiv
outs
xchg
daa
call
pop
jo
inc
fistp
mov
mov
xor
jnp
inc
jae
(bad)
ins
clc
lock
and
xchg
or
hlt
nop
stc
inc
loopne
test
lds
dec
jge
outs
adc
pop
arpl
mov
mov
ror
jmp
mov
cmp
inc
enter
xor
sbb
js
les
enter
sbb
adc
fldenv
inc
mov
adc
bound
mov
and
mov
jbe
sbb
lods
adc
test
adc
sub
out
sub
xor
xchg
xor
cmp
mov
das
pop
bound
arpl
iret
dec
outs
cmp
and
pop
ins
pushf
jmp
call
ins
scas
out
repnz
inc
aam
push
or
std
icebp
push
mov
jmp
mov
jbe
mov
sub
popa
pusha
or
xchg
les
xchg
push
xor
jecxz
jmp
mov
pop
mov
jmp
sar
jle
fdiv
adc
jmp
mov
test
or
mov
loop
mov
(bad)
scas
sahf
pop
inc
lea
inc
xchg
mov
dec
scas
cmp
popa
push
iret
push
in
bound
xchg
mov
(bad)
movs
sbb
mov
mov
icebp
ret
repz
adc
stos
jae
outs
(bad)
retf
and
inc
sbb
(bad)
mov
pop
aaa
ins
cmps
mov
sub
sahf
out
mov
sub
fild
jmp
popf
into
jne
enter
in
pop
pop
inc
dec
inc
outs
aaa
aam
adc
or
mov
hlt
cld
iret
test
iret
pop
xor
test
iret
out
gs
bound
in
add
(bad)
inc
sub
(bad)
out
das
retf
cmp
push
ins
mov
retf
dec
in
sub
aad
fistp
ins
test
pop
mov
push
aaa
adc
fnstenv
vpcmpeqb
inc
(bad)
jns
add
dec
mov
adc
and
cld
mov
(bad)
sub
jno
xchg
jmp
fstp
outs
test
icebp
xchg
sti
sub
fwait
mov
mov
cmp
mov
outs
mov
ins
push
cmp
mov
mov
mov
mov
call
xchg
mov
xor
dec
xchg
push
mov
scas
cmc
shl
push
xchg
jp
push
mov
cmc
rcr
and
(bad)
sbb
fsub
push
(bad)
push
in
mov
popa
sar
jae
ror
inc
neg
mov
jmp
xor
pushf
imul
repz
pop
jae
xchg
ins
and
push
add
xchg
mov
or
dec
jbe
lock
stos
or
mov
jne
xor
push
aas
les
or
out
test
push
jecxz
sbb
retf
bound
jmp
(bad)
es
test
mov
sbb
pop
and
or
in
ret
cs
mov
ror
ror
jmp
jge
add
add
adc
xchg
out
and
es
call
setnp
jbe
fsub
push
jp
push
pop
data16
mov
mov
ror
iret
pop
popa
jmp
ficomp
retf
push
repnz
or
push
mov
mov
push
mov
mov
xlat
xor
cmps
xor
mov
jmp
or
mov
popf
popa
cmp
xchg
ds
mov
dec
adc
mov
movs
xlat
mov
(bad)
in
jl
cld
inc
add
and
adc
mov
inc
fs
and
(bad)
pop
ds
call
je
jl
ins
es
ins
add
test
or
cmp
fcom
out
xchg
add
dec
loopne
and
sub
scas
add
mov
arpl
jo
sub
or
sbb
xor
mov
inc
jae
dec
das
sbb
xchg
dec
and
jle
sbb
test
(bad)
and
mov
ja
add
mov
inc
push
sbb
inc
in
push
mov
inc
jmp
into
ret
pop
sub
mov
repnz
popf
mov
mov
push
lock
and
das
mov
pop
cli
sub
fucomi
dec
repnz
ds
inc
ja
jbe
jmp
ss
push
and
adc
cmp
bnd
adc
leave
pop
sbb
jae
mov
mov
mov
aaa
mov
stos
(bad)
adc
xor
and
push
push
in
fisubr
xor
fsubr
sub
js
imul
mov
test
fisub
rol
loop
jp
cs
in
lods
shl
cmovno
retf
adc
cmp
enter
jns
mov
jecxz
push
cwde
iret
or
xlat
mov
or
pop
mov
mov
mov
inc
popf
scas
dec
adc
lods
push
test
test
aas
ds
ins
daa
ror
ds
in
jge
test
add
inc
or
pop
std
jne
lods
sub
div
dec
ret
jbe
(bad)
fwait
and
jge
sbb
jae
aas
retf
mov
stos
and
es
data16
add
out
mov
xor
sbb
test
rol
jle
dec
adc
push
jae
xchg
cmp
jmp
cmp
push
jl
mov
nop
int3
es
mov
enter
sub
fcom
lods
lods
imul
imul
mov
sti
inc
mov
inc
inc
ins
dec
ins
inc
mov
or
pop
inc
sbb
cld
scas
push
iret
adc
enter
mov
stos
es
xchg
xor
hlt
scas
push
je
ins
push
adc
pushf
mov
imul
(bad)
clc
data16
mov
adc
cmps
or
movs
mov
leave
add
mov
jae
enter
out
(bad)
add
fcmovnbe
cmps
xor
pop
jl
lds
jnp
jbe
popa
add
inc
fld
stos
test
popf
loopne
xor
ret
inc
and
jg
bound
jmp
lods
rcr
mov
sbb
leave
push
fwait
mov
push
and
xor
mov
bound
add
and
xor
cmps
dec
mov
lock
mov
stos
dec
repz
xor
cs
jno
cli
(bad)
call
xor
in
frndint
mov
les
mov
add
cmp
movs
out
mov
dec
inc
push
cmp
out
mov
mov
sub
xchg
add
movs
sub
mov
fcmovb
(bad)
aad
outs
jmp
pop
push
adc
icebp
mov
dec
data16
arpl
dec
cmp
xchg
aam
sub
jmp
mov
mov
dec
jle
sbb
jp
cdq
je
add
mov
stc
call
mov
int
repz
jnp
and
mov
add
es
mov
jbe
ja
inc
push
rol
ins
sbb
push
add
and
pop
jl
mov
sar
mov
sbb
or
sahf
cmp
ss
jmp
outs
mov
cmp
lds
xlat
fisub
dec
add
push
sub
shl
dec
push
lods
ins
mov
jb
dec
inc
clc
mov
dec
jmp
sub
mov
sub
jge
(bad)
jae
movs
test
add
sub
aas
pusha
in
jmp
fs
dec
movs
push
add
rcr
add
movs
xor
int
and
xor
cmp
jge
push
sti
movs
mov
cmc
xor
add
dec
lods
hlt
outs
cmps
out
retf
xchg
inc
inc
push
(bad)
adc
mov
push
push
ret
sbb
imul
aaa
fild
cmps
lods
dec
and
and
fnstcw
pop
or
into
pop
dec
lahf
leave
mov
(bad)
inc
mov
push
enter
and
addr16
call
pop
pop
stos
or
out
hlt
and
cmc
repnz
(bad)
test
cmc
ds
push
sbb
and
push
mov
lds
adc
shl
push
jnp
jnp
and
mov
ret
xchg
lahf
push
push
sbb
mov
xchg
push
sbb
xor
push
push
add
sbb
loopne
add
retf
call
jmp
gs
or
fisttp
es
fs
jmp
stc
ror
add
test
cmp
cmc
fisttp
mov
pop
test
add
scas
mov
cmp
out
outs
clc
sbb
cmp
ds
xchg
or
mov
xchg
or
jns
sbb
scas
dec
adc
les
(bad)
jns
aas
aas
add
inc
pusha
inc
push
cwde
cmps
(bad)
scas
out
sbb
fimul
mov
test
mov
adc
dec
aad
jbe
lods
jne
push
mov
out
dec
std
scas
(bad)
sub
enter
leave
add
cmp
dec
fwait
inc
xchg
mov
and
xchg
sar
push
add
sahf
mov
pop
mov
sahf
jle
ins
pop
adc
loope
adc
pop
mov
and
int
cwde
push
imul
adc
xor
(bad)
(bad)
push
(bad)
or
pusha
jae
mov
and
xchg
pop
dec
lods
mov
jge
js
ins
(bad)
fisub
ins
sub
cmp
cmp
and
cmovns
pushf
mov
fst
xor
test
pop
(bad)
enter
xchg
cmps
jo
xchg
aaa
mov
jmp
sub
add
leave
jl
cmps
mov
inc
mov
adc
jge
test
mov
sbb
mov
sbb
cmp
repz
imul
cmp
sub
cmp
std
xchg
jae
adc
or
jo
pushf
cmp
dec
imul
fstp
inc
call
mov
mov
repz
cld
std
js
aam
stos
mov
in
inc
add
mov
in
mov
push
or
in
xchg
mov
into
xor
aas
add
push
dec
push
or
push
jmp
(bad)
push
cwde
add
dec
xlat
add
les
fcomi
mov
dec
xor
sbb
call
fldenv
and
adc
mov
and
xor
mov
add
pop
pop
mov
or
add
fidivr
add
xchg
sbb
(bad)
fmulp
lea
mov
nop
mov
fidivr
dec
mov
lahf
retf
aad
adc
sbb
mov
jg
cli
mov
or
icebp
jp
adc
and
and
cmp
and
pushf
add
pop
push
push
mov
mov
push
pop
and
lods
dec
int3
jmp
shl
cmc
xlat
imul
jae
sahf
mov
aaa
pop
adc
add
adc
in
sbb
call
push
inc
cmp
inc
mov
jb
cmps
in
xor
or
mov
outs
(bad)
aad
mov
pusha
mov
out
es
jge
jecxz
shl
xlat
jg
inc
icebp
mov
fidiv
fcomp
scas
addr16
(bad)
ds
cmp
clc
cmp
jmp
out
movs
jae
push
test
or
jmp
cmps
cmps
mov
jge
pop
cmp
cdq
jno
push
test
scas
dec
and
fimul
outs
sti
scas
sbb
ins
sbb
sbb
inc
adc
mov
arpl
pushf
mov
or
sbb
cmps
retf
dec
xchg
xchg
inc
movs
ret
cwde
imul
jl
push
iret
into
imul
popf
fisub
inc
stc
mov
xchg
sbb
mov
data16
mov
jno
or
aaa
or
dec
pusha
cmp
pop
mov
and
mov
addr16
dec
dec
in
or
lods
fiadd
sub
or
fiadd
cli
addr16
inc
shl
(bad)
vmread
and
(bad)
xchg
aad
jne
mov
out
outs
mov
mov
xor
es
call
push
scas
add
push
bound
fstp
pop
outs
les
fstp
sbb
cmp
lea
jo
stos
sub
shr
xor
aad
retf
mov
jg
sbb
mov
outs
nop
inc
cld
cmp
stos
ss
push
out
sahf
das
xor
sbb
cmp
(bad)
jl
out
cmp
fnsave
jg
sti
xchg
lea
out
fidivr
les
jg
gs
call
adc
mov
mov
jg
push
sbb
stc
mov
jbe
dec
cmp
jle
hlt
inc
js
jne
in
dec
arpl
pop
inc
test
adc
dec
scas
dec
cmp
call
add
repnz
test
mov
or
out
pusha
xchg
mov
sub
popf
push
mov
lea
std
jp
lods
ss
idiv
pop
sbb
xchg
retf
ror
push
pop
daa
and
push
cwde
enter
cwd
xchg
dec
cmps
pop
scas
(bad)
out
fwait
out
dec
jbe
xor
loopne
les
inc
stos
pop
mov
and
call
arpl
cli
mov
jb
cmp
or
aam
sub
jns
dec
cmp
ret
icebp
inc
scas
adc
sub
mov
pop
and
push
ds
inc
stc
push
xchg
pop
mov
shl
and
leave
lods
sbb
mov
push
fwait
mov
cmps
icebp
inc
out
rol
imul
push
mov
shr
aad
into
mov
pop
add
data16
or
call
mov
int3
push
dec
mov
pop
daa
pop
mov
imul
pushf
in
int3
sbb
cmp
stos
xor
stc
gs
sbb
dec
push
mov
outs
cmp
les
sub
ret
retf
sub
retf
cmp
pop
fld
and
fldenv
(bad)
sub
jae
mov
jl
push
loope
idiv
test
test
movs
int3
jae
push
out
daa
(bad)
adc
dec
fisttp
shr
xchg
xor
mov
and
push
push
stos
pop
mov
add
dec
push
sub
adc
les
jmp
addr16
cmps
fild
cmp
inc
ins
aad
sbb
popf
js
mov
lds
add
sbb
push
jae
mov
stc
add
xor
inc
add
lahf
cwde
std
xchg
stc
sbb
jnp
add
jp
ins
sub
cmp
jnp
out
arpl
sbb
mov
out
mov
int
jge
or
jge
hlt
sub
mov
or
in
adc
add
mov
xchg
dec
pushf
mov
loopne
aad
xor
jle
std
jne
fst
aas
mov
dec
adc
dec
sbb
or
inc
mov
jl
es
enter
mov
jno
shl
stc
inc
jae
xor
inc
and
(bad)
test
dec
jmp
daa
punpcklbw
fwait
retf
mov
cld
jbe
cwde
jno
add
or
sbb
jge
and
jne
xchg
sub
popf
ja
outs
out
sbb
xchg
jae
das
imul
scas
cdq
loope
loopne
xor
sbb
scas
mov
rcr
dec
stos
fld
jle
xor
jecxz
imul
xor
xor
cdq
test
retf
imul
sbb
mov
adc
stos
mov
add
ins
xor
repz
dec
sbb
inc
mov
data16
rcl
arpl
ret
or
jg
pop
mov
bound
(bad)
sbb
lods
cli
or
(bad)
fxch
je
mov
imul
mov
fst
jbe
gs
jecxz
push
stc
stos
stc
pop
or
addr16
push
punpcklwd
hlt
(bad)
push
aam
push
mov
jecxz
es
mov
mov
lods
into
inc
and
lds
fst
xchg
mov
lahf
shl
or
aas
adc
pop
sahf
add
xor
rcr
outs
arpl
inc
lods
mul
inc
nop
adc
in
jmp
movs
gs
stc
clc
xchg
add
mov
cs
lods
dec
pop
sbb
mov
outs
and
or
dec
movups
mov
aam
loopne
popf
aas
mov
leave
fidivr
movs
lods
test
cmps
adc
push
mov
inc
fwait
adc
mov
loop
int3
mov
xchg
sbb
sub
int3
mov
push
add
dec
cdq
mov
jno
mov
sbb
pop
jbe
(bad)
int3
out
(bad)
fidiv
inc
aam
jmp
idiv
pop
or
xchg
ja
dec
(bad)
and
repnz
xor
cli
xor
int
cli
ins
jecxz
out
cld
daa
cs
dec
dec
addr16
stos
adc
mov
stos
mov
jne
dec
sbb
jmp
mov
xchg
adc
aaa
fwait
and
sub
or
and
jge
repnz
push
and
enter
out
popa
jbe
dec
in
sub
mov
fimul
and
arpl
jns
dec
mov
cdq
ret
int
cmp
sub
lods
inc
push
xor
les
nop
sbb
add
(bad)
cmp
adc
add
stc
xchg
ja
mov
call
fs
inc
inc
push
leave
jne
fisubr
mov
in
xchg
and
cmps
imul
iret
lock
movs
fwait
loope
dec
jnp
movs
inc
xchg
je
inc
pusha
icebp
arpl
fucom
push
sub
mov
or
retf
lock
dec
(bad)
sar
mov
jmp
mov
sub
lods
jmp
pusha
inc
mov
loop
(bad)
lahf
adc
adc
push
stc
dec
pushf
mov
pop
mov
sahf
test
repz
out
rcr
imul
add
(bad)
push
scas
push
xchg
das
ds
or
les
xchg
mov
and
add
sbb
sbb
inc
mov
je
je
loopne
fldcw
ficom
outs
fwait
or
push
add
std
push
in
sbb
nop
cdq
push
aaa
ja
mov
mov
xchg
ds
fdivr
or
xchg
in
std
lea
sbb
movs
(bad)
and
mov
sbb
add
xchg
aam
pop
shr
in
fnstenv
sbb
and
xor
fnstenv
push
in
mov
stc
es
scas
ret
and
add
or
and
xchg
bound
into
mov
and
sub
cmps
xchg
and
in
pop
xchg
jno
stos
jae
pop
sti
sub
sbb
add
xor
xor
inc
ss
jb
arpl
ins
push
inc
(bad)
push
mov
push
mov
mov
jmp
xor
sub
or
leave
push
mov
loopne
ds
pushf
inc
movs
cmp
and
inc
sbb
(bad)
paddusw
arpl
div
(bad)
rcr
sar
jge
int3
rol
clc
fstp
cmp
mov
ficomp
push
nop
dec
js
aam
(bad)
fwait
iret
inc
movs
(bad)
jno
inc
pushf
into
js
stos
cmc
mov
xor
test
jmp
xchg
ins
and
mov
mov
cmps
int
cwde
fild
leave
pop
inc
loope
or
inc
xchg
jge
and
xchg
pop
cmp
add
test
mov
sub
in
jno
mov
popf
xor
(bad)
mov
ds
ror
lock
mov
push
inc
cmp
test
fimul
out
repz
xchg
ret
das
jl
test
das
ret
and
call
rcl
xchg
aam
pop
lahf
test
mov
icebp
cs
lods
and
ret
lea
pop
jns
out
cli
pop
push
fnstsw
mov
mov
aam
push
movs
cmp
cdq
fstp
sub
enter
aam
sbb
push
cmps
push
add
mov
retf
jne
in
cmps
arpl
(bad)
cdq
(bad)
adc
inc
xlat
push
xchg
sub
loop
cmp
pushf
cs
jb
stos
ret
and
scas
fcom
out
dec
push
cdq
jmp
xor
jle
xor
inc
mov
sbb
dec
add
mov
iret
jnp
xchg
cmp
dec
ins
pushf
sbb
rol
addr16
les
pop
jmp
xchg
adc
add
add
xchg
push
sbb
hlt
loop
dec
int3
mov
iretw
int3
add
push
cli
mov
mov
(bad)
adc
sbb
scas
loop
cmps
cmps
add
xor
mov
and
(bad)
xor
fsubr
(bad)
loope
imul
mov
cwde
jl
adc
cmp
push
cli
jo
icebp
rol
dec
lahf
or
jae
jg
or
xchg
dec
jg
das
jg
clc
jbe
and
adc
int3
adc
sub
fwait
js
push
stc
movs
push
cli
fwait
cli
cmps
(bad)
fs
add
pop
and
pop
data16
loopne
xchg
sub
inc
fadd
sub
xor
or
in
push
push
mov
(bad)
mov
xor
leave
dec
mov
push
stos
pop
mov
sbb
add
sar
repz
loope
mov
mov
add
push
cmp
pop
xchg
movs
inc
daa
mov
fwait
push
xor
(bad)
movs
and
(bad)
and
ret
cmc
or
xchg
dec
inc
mov
xchg
xchg
ins
jge
jnp
pop
mov
mov
push
jb
xchg
or
and
or
pop
jge
sbb
push
mov
bound
ds
test
iret
test
bound
push
sbb
(bad)
scas
imul
sbb
add
mov
and
retf
loopne
sub
pop
pop
lods
jle
ins
xchg
jg
pop
es
cmp
rep
mov
push
pop
pop
not
sbb
gs
leave
xor
(bad)
out
dec
push
xor
xor
retf
inc
inc
inc
xor
pop
adc
sahf
data16
jecxz
fsubr
(bad)
push
push
mov
scas
sti
stos
loope
add
cmp
pusha
and
ja
fdiv
icebp
lea
or
and
cmp
or
sbb
cmp
xchg
dec
ins
retf
fistp
mov
ret
(bad)
out
in
push
sub
pop
aad
cli
sbb
leave
rol
pop
jmp
jle
pop
ret
imul
add
(bad)
ficom
mov
rcl
aam
mov
xchg
cmp
mov
in
ins
(bad)
movs
stc
jp
push
mov
out
sbb
dec
mov
fdiv
sbb
inc
test
and
dec
movs
jle
enter
pop
mov
ins
xchg
retf
pop
stos
fsub
xor
mov
nop
in
mov
mov
xor
cmp
mov
aad
les
and
xor
xor
mov
daa
jl
push
and
xchg
or
sbb
jne
or
arpl
dec
cli
add
shl
jno
fisub
shl
mov
mov
jbe
stos
xor
jae
add
adc
xchg
sti
retf
lds
adc
jecxz
push
shl
mov
shr
dec
iret
rcl
jae
les
inc
clc
push
add
ror
and
jp
retf
rcl
dec
xor
push
mov
add
add
(bad)
add
(bad)
arpl
mov
sbb
adc
retf
shl
enter
ret
aaa
mov
mov
(bad)
jg
int
nop
xor
call
add
popa
mov
xor
(bad)
xchg
imul
repz
push
imul
jb
adc
hlt
mov
inc
sub
adc
dec
in
(bad)
movs
out
pusha
es
inc
sub
loope
(bad)
div
mov
sbb
adc
js
popa
mov
call
scas
mov
addr16
dec
out
sahf
xacquire
cli
add
dec
push
(bad)
in
sub
dec
xchg
es
and
scas
lods
scas
jnp
jo
fistp
faddp
lods
xchg
push
push
inc
outs
cmp
out
pushf
pop
out
(bad)
into
(bad)
aad
inc
iret
sub
xchg
lds
mov
jecxz
dec
dec
and
sbb
cwde
test
sbb
sub
rcl
pop
mov
adc
sahf
sub
out
fisub
adc
mov
repz
mov
pop
add
xchg
ins
mov
fistp
ins
cmp
mov
test
xor
add
push
add
xchg
popf
jp
out
dec
neg
or
adc
xor
stc
ret
cmps
loopne
call
test
and
dec
adc
sub
mov
sub
and
sub
sbb
stos
jae
adc
ins
ins
ja
es
add
adc
dec
movs
pop
mov
dec
popa
adc
push
shl
hlt
pop
add
mov
push
(bad)
hlt
cs
int
push
cmps
shl
adc
jge
add
xchg
jnp
cmc
add
nop
sbb
jns
out
dec
popf
clc
add
scas
jmp
mov
push
ds
dec
mov
stc
retf
jns
or
pop
pop
pop
jmp
mov
sbb
pop
adc
jmp
push
addr16
mov
jmp
(bad)
jae
ins
mov
push
xchg
mov
mov
imul
cld
rcr
inc
cmc
or
mov
xchg
cwde
sbb
sahf
sub
je
add
adc
and
push
adc
jg
call
xchg
mov
inc
mov
jge
sub
sti
rcr
enter
call
mov
pop
rcr
and
jbe
dec
push
dec
aas
adc
push
jl
in
cmp
mov
jg
pop
call
data16
std
loopne
pop
(bad)
clc
std
popf
sub
cmc
jge
ret
out
daa
dec
sahf
mov
loop
mov
pop
or
push
test
xchg
out
dec
aaa
push
call
bound
cdq
movs
lds
push
mov
jnp
data16
inc
mov
(bad)
gs
jnp
test
lea
jl
jns
mov
pop
add
pop
(bad)
cmps
cdq
test
pop
pop
and
cmp
mov
movs
add
xchg
cmps
popa
lahf
and
inc
push
mov
mov
aas
pop
mov
add
add
popa
inc
test
not
call
sub
add
test
dec
mov
(bad)
out
sub
dec
sbb
sub
mov
or
pop
pop
call
idiv
imul
data16
je
sub
inc
pop
imul
out
cli
sub
pop
sbb
jb
xor
adc
pop
and
movs
xor
mov
inc
aas
lea
(bad)
fwait
jg
dec
mov
sub
sbb
add
inc
cli
lods
lea
dec
loop
and
add
in
in
sar
cmc
cmp
rcl
xchg
sub
xor
or
loope
add
mov
popf
aas
ret
inc
mov
push
sar
push
arpl
mov
sub
cmp
add
cmp
jle
pop
ss
add
push
jmp
lods
push
push
jecxz
jae
sbb
cli
xchg
mov
xchg
mov
sub
jle
sbb
inc
shl
shr
ins
mov
js
aas
xchg
inc
fisubr
(bad)
sahf
xchg
loop
push
sub
imul
movs
and
push
mov
cwde
mov
mov
sbb
outs
cdq
xor
(bad)
daa
movs
mov
pop
cdq
jno
out
in
out
or
add
push
push
jnp
sti
(bad)
inc
and
js
push
test
cmps
repnz
aas
scas
int3
cs
cdq
test
mov
pop
add
iret
pop
stos
cli
dec
mov
std
call
mov
inc
loope
mov
mov
jb
adc
push
and
sbb
xchg
leave
(bad)
add
mov
(bad)
je
jge
jl
out
sub
mov
jae
jbe
xchg
pop
adc
icebp
inc
dec
fwait
lods
enter
add
add
xor
mov
lea
xor
loopne
pop
ficom
shr
icebp
popa
fdiv
mov
daa
in
jge
scas
pop
sub
pop
mov
dec
sub
pop
xchg
out
add
test
je
fcmovnbe
mov
inc
js
mov
add
jge
sub
inc
mov
popa
repz
sbb
clc
es
inc
jmp
(bad)
mov
or
dec
call
retf
mov
mov
push
pop
jo
fdiv
push
mov
scas
and
and
add
mov
and
xor
mov
test
or
jmp
adc
out
xor
push
add
push
and
mov
cmps
sbb
mov
ror
in
enter
div
jnp
movs
in
mov
inc
ror
into
(bad)
jmp
xor
jo
push
and
mov
push
mov
fidiv
ja
jb
and
(bad)
aaa
inc
mov
push
and
cmps
(bad)
f2xm1
into
mov
es
mov
and
push
jg
leave
sahf
cmp
and
push
arpl
ds
mov
test
push
mov
pop
jg
sbb
outs
xchg
outs
stc
cmp
jmp
cmp
push
addr16
jnp
sub
push
sub
fbld
popa
aas
enter
div
sub
sub
out
jecxz
inc
ret
call
jne
add
scas
xor
dec
xchg
cli
xchg
xchg
enter
mov
sub
inc
or
jp
js
pushf
sub
stos
inc
dec
popf
and
outs
sub
push
dec
jmp
(bad)
mov
add
xor
adc
rol
cli
int3
cdq
lods
fidivr
pop
xlat
mov
shl
aaa
in
mov
push
dec
test
retf
pop
adc
ja
mov
inc
sbb
rol
mov
leave
xor
dec
push
aam
(bad)
fldenv
loopne
std
push
imul
retf
xchg
addr16
stos
adc
frstor
sub
ins
ins
aaa
xchg
stos
jg
(bad)
div
test
mov
add
lea
mov
push
popf
les
and
jno
cs
mov
data16
inc
cmp
cmp
push
jecxz
enter
hlt
dec
dec
outs
dec
sbb
rcr
inc
mov
lea
jns
dec
(bad)
pushf
shl
or
mov
fidiv
loope
jns
test
inc
jns
jae
mov
fimul
cmp
push
dec
mov
dec
aam
xor
push
fldenv
adc
mov
xchg
pop
xor
mov
sbb
test
xor
xchg
xchg
pushf
fisubr
mov
retf
dec
sbb
add
mov
jne
out
outs
xchg
lea
mov
sbb
outs
jl
test
shr
mov
and
sbb
jbe
jmp
dec
data16
dec
sar
or
cmc
call
jle
add
xchg
mov
sti
scas
stos
ss
add
xchg
pop
dec
sub
pop
xor
mov
cmp
add
repz
rcr
xor
outs
mov
mov
and
adc
jns
push
retf
mov
mov
pop
push
pop
mov
int
sbb
cmc
test
cwde
and
test
mov
jmp
stos
cs
fdiv
int3
scas
(bad)
aam
jg
jns
jnp
test
ins
pop
sahf
xor
lahf
and
rcr
jo
xchg
cs
cmp
mov
mov
int3
xchg
es
xchg
mov
stos
inc
sbb
sbb
ja
sahf
xchg
out
js
out
or
inc
cld
push
or
jge
push
mov
pop
jecxz
lods
xor
(bad)
sub
test
push
push
mov
fwait
xchg
int
ret
lock
in
fist
rcl
pop
movs
xor
mov
cmc
pop
ret
cmp
mov
xchg
lahf
pop
rol
aad
test
sbb
xchg
mov
(bad)
call
cmps
jae
jbe
inc
(bad)
mov
dec
popa
xchg
in
jle
or
test
shl
dec
or
jnp
dec
sbb
push
sbb
inc
push
add
es
rcl
(bad)
psrlw
es
push
push
push
and
(bad)
(bad)
mov
xchg
ror
pop
call
pop
cmp
stc
jp
mov
mov
das
jg
fist
iret
and
inc
loope
xchg
mov
xor
out
adc
or
ret
movs
mov
jnp
xchg
scas
push
or
repnz
fdivr
push
mov
xor
xor
mov
aad
bound
fcom
mov
push
xor
fucomip
fsubr
into
loope
cmp
jp
sub
or
fs
jb
jnp
push
adc
test
jno
mov
jns
sbb
ins
or
mov
mov
sti
or
mov
mov
cmp
add
(bad)
call
popa
(bad)
mov
movs
push
clc
ror
popa
cmps
test
inc
aaa
push
jnp
mov
add
cmp
div
scas
xor
add
clc
rcr
sub
dec
int
xchg
repnz
scas
aaa
test
add
add
in
jno
add
mov
js
imul
test
cmp
fs
imul
or
(bad)
or
loope
in
push
sahf
inc
pop
sar
aad
push
(bad)
retf
mov
dec
out
cmp
dec
mov
or
or
fcom
loope
xchg
rcl
xchg
xor
mov
jnp
xchg
mov
outs
xchg
int3
push
sbb
ds
ins
mov
imul
xor
cmp
cmp
xlat
cmp
fmul
jle
or
sub
xchg
mov
cld
xor
add
bound
(bad)
xchg
loope
cmp
fadd
jo
push
push
rcl
pusha
fiadd
jl
sbb
jl
sbb
push
sti
xchg
dec
iret
xchg
push
movs
movs
xchg
vpsrld
add
xlat
jg
xchg
sar
mov
ds
jle
(bad)
(bad)
xor
js
and
inc
xchg
xchg
sbb
push
push
les
sbb
ret
scas
das
cmp
jmp
fbld
clc
clc
mov
sti
in
and
jle
push
fadd
scas
add
jl
outs
xchg
mov
les
lods
pop
mov
in
stos
xchg
or
jp
xchg
dec
jecxz
or
xchg
mov
xor
mov
retf
inc
xchg
ficomp
xor
jae
retf
ror
sbb
mov
cmps
jmp
jae
stos
sar
mov
repz
aad
pop
dec
mov
adc
das
retf
sti
cmp
mov
rcl
dec
cmp
fs
arpl
mov
sub
fneni(8087
in
push
retf
les
xor
fcom
sub
std
xchg
mov
or
das
mov
adc
sub
punpckhdq
ss
test
aam
dec
daa
les
fabs
mov
add
jb
and
xor
scas
call
aam
clc
mov
xor
sbb
lahf
mov
mov
aam
scas
xor
bound
push
stc
fcomp
cmp
dec
or
pop
sub
sbb
mov
(bad)
mov
outs
mov
je
jo
or
push
jg
test
xchg
push
xor
scas
dec
or
es
mov
xchg
bound
cdq
dec
loope
pop
inc
pop
adc
mov
cli
push
scas
pop
cmp
imul
jbe
or
xlat
push
pop
xor
ins
mov
mov
dec
shl
jmp
repz
or
xchg
mov
in
adc
test
lods
stos
mov
pusha
retf
sub
and
jb
ret
dec
sbb
in
in
imul
xor
and
jo
adc
inc
pop
out
mov
jg
mov
inc
int
and
mov
dec
(bad)
dec
call
push
adc
std
or
inc
lods
outs
xor
sahf
imul
loope
cmp
sbb
aad
sbb
ss
push
in
add
repz
in
jae
mov
jo
pop
ret
jmp
or
enter
stos
int3
in
add
nop
mov
jbe
out
fistp
add
xor
jb
mov
mov
(bad)
xchg
faddp
push
pop
jb
push
jp
pop
movs
push
shl
mov
jne
push
mov
pop
mov
stos
enter
iret
mov
test
fs
and
pop
inc
ror
and
adc
jae
test
mov
loope
and
rcl
xchg
push
push
outs
imul
repz
xchg
retf
scas
xchg
adc
mov
repnz
xor
out
scas
loope
push
lahf
jnp
inc
out
(bad)
xchg
xchg
(bad)
mov
imul
scas
mov
outs
sub
in
mov
mov
shl
jb
cli
dec
pop
dec
adc
xor
mov
push
stos
jbe
loop
ja
adc
mov
int3
js
xor
outs
movs
(bad)
dec
sbb
sbb
or
xchg
inc
(bad)
not
inc
dec
mov
iret
xchg
push
dec
cmc
imul
pop
inc
sub
aas
or
mov
arpl
xor
inc
pop
out
outs
pop
cmp
movs
int
sbb
clc
out
ss
jmp
popa
mov
jb
cmp
fwait
inc
rol
(bad)
leave
lock
add
rcr
fldenv
clc
mov
rol
mov
sti
fst
cmp
test
and
in
jge
inc
cmp
aam
out
sahf
jp
sub
(bad)
(bad)
jp
ret
jl
mov
push
or
pop
adc
imul
hlt
inc
(bad)
ret
xchg
ror
or
xchg
sbb
xlat
jnp
sub
add
or
retf
and
xor
popa
jmp
and
xor
call
repz
bnd
sti
xchg
cdq
xchg
mov
xlat
xor
sub
out
pop
inc
out
stos
and
nop
dec
test
jle
fisubr
test
lds
sbb
add
in
mov
push
enter
jne
aam
cmp
(bad)
cmp
push
nop
fimul
jae
out
inc
add
mov
(bad)
xchg
push
int
mov
aad
or
rcr
adc
xchg
les
mov
call
or
or
stos
icebp
hlt
or
or
je
fbld
mov
(bad)
loopne
int
arpl
inc
jg
adc
lds
mov
xchg
rcl
sbb
inc
inc
ss
xor
sbb
jae
push
adc
repnz
xchg
and
dec
int3
inc
xchg
sbb
cld
inc
cmps
push
movs
outs
fidiv
loope
mov
xchg
and
dec
sbb
jne
movs
push
inc
mov
mov
xor
into
add
push
nop
xchg
xor
int3
lahf
jns
loop
scas
dec
adc
out
retf
bound
sbb
lahf
ror
enter
out
cmp
sbb
stos
pop
enterw
pop
mov
dec
jle
or
mov
stos
sub
dec
inc
movs
lods
repnz
push
fild
sub
mov
pop
movs
push
sub
out
mov
std
ss
jns
or
sbb
call
mov
cmps
xor
sahf
retf
cdq
mov
cmp
lahf
scas
and
jb
mov
fimul
stos
jns
cmp
jbe
fs
push
pop
shr
inc
push
cmp
push
sbb
sub
or
mov
mov
cmp
mov
pop
push
sub
dec
mov
(bad)
pop
jmp
dec
enter
daa
test
idiv
imul
jecxz
push
inc
imul
mov
repnz
jp
enter
loope
sbb
int
pop
push
xchg
cmove
mov
pop
shl
sti
mov
and
xchg
out
shr
jmp
jno
push
mov
mov
or
scas
push
add
add
test
test
lods
mov
out
pop
(bad)
xor
mov
(bad)
ss
sahf
inc
sub
xor
xlat
outs
pusha
sub
xchg
cdq
and
mov
sbb
push
dec
faddp
dec
imul
mov
cld
mov
out
cmp
in
fmul
outs
adc
popa
retw
cmp
push
dec
lods
fsubr
mov
cmovno
aad
jp
mov
(bad)
mov
adc
pop
push
bound
xor
xchg
leave
sbb
test
push
imul
adc
hlt
sahf
ds
scas
cmp
jp
adc
and
or
iret
mov
rcl
xchg
fmul
ficom
dec
cs
int
mov
test
fwait
dec
aam
call
or
jne
mov
inc
push
movs
mov
inc
sub
fisttp
shr
xchg
sub
aad
mov
inc
fisubr
rol
cmps
pop
jns
lock
loope
test
loop
out
(bad)
lea
xchg
pop
push
push
mov
push
xchg
ja
addr16
pop
js
jnp
leave
pop
int3
xchg
cmp
and
cmp
sub
cli
xchg
mov
and
dec
cmp
sub
aam
(bad)
jo
push
sbb
(bad)
out
les
cwde
mov
shl
stos
sub
jo
loopne
push
test
adc
jne
lods
adc
repz
push
add
nop
pop
pop
cld
xor
leave
out
jno
scas
push
xchg
fadd
mov
xchg
inc
(bad)
leave
cmc
mov
jnp
mov
pop
or
mov
mov
cmps
sub
lods
push
push
cld
or
mov
cmp
cmp
pusha
jbe
lods
int3
or
stos
mov
leave
mov
mov
loop
jmp
addr16
sub
jmp
adc
add
push
dec
xchg
stos
jo
es
je
test
test
stc
movs
xor
mov
xchg
cmps
pop
inc
popa
inc
into
jnp
js
pushf
mov
scas
mov
push
dec
cwde
and
fwait
dec
sbb
inc
sahf
and
ror
push
add
pushf
gs
mov
iret
scas
mov
mov
pop
or
fisttp
mov
or
pop
imul
div
jp
data16
jecxz
xchg
dec
ret
pop
dec
adc
xlat
dec
(bad)
in
or
hlt
nop
pop
movs
ficomp
(bad)
ds
inc
or
pop
ds
mov
sbb
clc
sti
sbb
sub
sub
xor
xlat
leave
mov
aas
dec
div
ret
mov
je
mov
fnstcw
add
pop
jno
mov
mov
mov
mov
ret
mov
jle
arpl
jp
sub
mov
sub
jecxz
xor
fisub
js
das
mov
lods
add
les
js
outs
lea
or
mov
aad
inc
ficomp
rcr
sti
cld
pop
push
cmp
cmp
xchg
rcr
inc
test
int3
and
iret
shr
idiv
dec
popf
xchg
gs
or
mov
int3
and
(bad)
cmp
outs
jns
jns
aam
mov
das
inc
mov
jmp
pusha
les
scas
pop
test
mov
xchg
xlat
imul
js
fdiv
sbb
idiv
mov
sub
xchg
jle
bound
jnp
cmp
fwait
(bad)
movs
push
xor
je
mov
loopne
(bad)
cdq
loop
jne
ucomiss
fistp
in
mov
sbb
and
int
daa
in
or
stos
cmp
lds
jge
adc
nop
push
mov
test
and
adc
push
fsubr
jne
mov
dec
popf
lea
and
cmps
cmp
and
sbb
retf
imul
sti
mov
loop
test
push
dec
adc
or
mov
xor
mov
fwait
pop
mov
rep
sub
icebp
lods
and
xchg
pop
cwde
ror
stos
cmp
cmp
cmp
test
shr
sti
popaw
fild
cmps
cmps
mov
jbe
into
movs
int
mov
push
data16
repnz
out
fistp
push
int3
or
xor
jns
in
call
neg
sti
mov
int3
push
mov
mov
pop
repnz
icebp
es
lods
xor
inc
inc
cmp
das
push
adc
mov
mov
imul
addr16
and
mov
add
mov
mov
sbb
jmp
mov
ror
xchg
push
adc
mov
test
(bad)
in
jnp
leave
mov
mov
rcl
int
leave
xor
mov
push
ss
(bad)
out
imul
scas
imul
xchg
xchg
push
xchg
sbb
lahf
retf
cmp
in
inc
pop
adc
adc
dec
outs
push
(bad)
scas
mov
test
popf
(bad)
xor
or
outs
push
retf
sbb
push
xor
cwde
push
outs
enter
retf
mov
ss
ins
mov
add
repz
out
inc
cmp
out
cmps
xchg
pop
mov
jl
mov
pop
sahf
ins
add
pop
xchg
fucomip
pop
add
mov
xchg
fsub
ins
sub
outs
mov
and
fcomp
stos
cmp
outs
jmp
lahf
or
sbb
fist
xrelease
and
xor
dec
aam
xlat
stos
ins
enter
div
ss
jl
loopne
jl
movs
sbb
inc
jge
push
add
xor
jb
(bad)
fwait
clc
movs
xchg
ins
cmps
in
cmp
mov
es
push
inc
fs
lahf
daa
xchg
mov
out
mov
add
in
sbb
mov
mov
es
adc
test
push
sbb
and
cld
mov
add
jge
shl
shr
cmp
add
lock
daa
aas
pop
js
xor
jle
xor
(bad)
div
call
inc
push
xor
sbb
dec
mov
pop
daa
aaa
dec
dec
jle
movs
es
pop
test
push
and
not
mov
ins
add
setl
xor
pop
(bad)
test
test
js
unpckhps
or
lods
cmp
xor
sar
cmp
pop
xor
in
mov
loopne
pop
loop
rol
jmp
das
cmp
ss
iret
or
add
jg
or
jl
push
sub
je
inc
jne
aad
loop
bound
add
jae
retf
pop
add
jecxz
mov
push
push
fst
pop
add
xor
cmc
movs
lds
inc
pop
dec
loope
bound
cli
mov
sbb
es
cmp
jmp
hlt
call
aaa
(bad)
pop
adc
adc
add
xor
xchg
mov
mov
repnz
inc
lock
sar
or
enter
or
paddb
out
leave
(bad)
ss
dec
sar
loope
dec
dec
icebp
sub
mov
xor
cmp
add
(bad)
pop
pusha
stos
movs
ds
sub
mov
cmp
inc
movs
fcom
out
inc
mov
scas
test
xchg
arpl
popa
or
mov
push
in
xchg
sub
sti
dec
jb
sbb
jmp
inc
rol
and
mov
call
xlat
mov
inc
pop
sub
mov
and
rcr
dec
int
retf
adc
sahf
jo
jp
mov
adc
cmp
loopne
out
test
pop
ins
sbb
aam
adc
ror
mov
dec
call
sbb
mov
repnz
js
es
fsubr
enter
arpl
xor
sub
or
(bad)
movs
jmp
push
push
dec
icebp
fchs
nop
sbb
cdq
adc
mov
nop
imul
scas
push
xor
push
inc
and
cmc
add
repz
cmp
lds
sub
into
pop
stc
pop
(bad)
je
sub
nop
aam
arpl
jle
lods
or
call
stos
shl
sbb
pusha
mov
xor
(bad)
push
ja
mov
test
push
std
xchg
dec
or
pop
test
mov
pop
xchg
popf
aad
sub
sbb
jb
test
fiadd
cmp
fwait
pop
pop
cmp
ds
jo
or
mov
hlt
(bad)
test
jne
mov
adc
pushf
mov
inc
push
aad
nop
fs
xchg
shl
xchg
mov
bsf
fsubr
add
in
mov
pusha
jmp
repnz
sbb
scas
repnz
lahf
call
sub
stc
cmp
das
push
mov
push
rcl
(bad)
mov
inc
sbb
retw
jmp
sbb
push
ins
clc
add
inc
mov
add
movs
in
inc
jno
scas
dec
call
test
sub
ja
xchg
add
jp
sub
(bad)
fs
aam
mov
jp
push
popa
add
inc
adc
cmp
mov
rcl
mov
aas
xor
(bad)
push
inc
mov
or
int
xlat
into
jb
dec
dec
out
aas
or
xchg
or
loopne
inc
js
sub
popf
cmp
push
and
xchg
daa
or
mov
movs
sbb
int3
jmp
cld
mov
cdq
mov
test
sbb
xor
fisubr
pop
pop
(bad)
stc
push
xchg
sbb
loop
cmp
and
fstp
mov
std
xchg
dec
clc
or
sub
(bad)
mov
(bad)
dec
cmp
xchg
or
jl
fild
inc
movs
int
mov
iret
outs
shr
xor
cmps
adc
call
cli
mov
ret
(bad)
xor
pop
pop
imul
and
sub
dec
mov
ror
bound
mov
in
mov
adc
pop
mov
mov
pop
fcomi
cmp
and
test
ret
dec
fs
mov
and
cli
or
add
push
jns
pop
je
pusha
rcr
jge
fistp
sbb
xchg
xor
test
jp
xchg
pushf
jg
mov
popf
or
popa
imul
mov
rcl
pop
fnsave
test
in
repz
cmps
sbb
cmps
xchg
pop
add
pusha
movs
xor
cmp
(bad)
mov
ret
shr
fs
popf
loope
push
or
lds
ins
jmp
push
neg
test
lods
hlt
repnz
dec
ficom
ins
lahf
adc
int
call
cmp
and
and
mov
jne
jl
push
sbb
lahf
arpl
mov
hlt
jp
push
loop
mov
(bad)
cmp
lods
push
and
push
stc
and
lea
xchg
sbb
xchg
sar
sar
and
add
or
pop
cmc
mov
lods
ds
mov
nop
add
xor
push
ss
call
xor
pop
(bad)
rol
sbb
dec
dec
or
sbb
jl
adc
ror
mov
ret
sub
and
call
rcr
xor
add
movs
test
sub
std
ds
mov
ds
jae
pop
xor
mov
mov
imul
pop
(bad)
mov
(bad)
xor
mov
sbb
fidiv
mov
mov
jnp
jecxz
mov
dec
mov
mov
adc
and
das
jmp
mov
(bad)
xor
dec
xchg
ds
and
in
out
xor
or
gs
lea
jbe
mov
sbb
jmp
int3
adc
or
sar
push
addr16
sar
les
mov
nop
stos
mov
in
into
jmp
ins
not
mov
cmps
psraw
push
mov
or
xor
aam
outs
mov
and
and
aaa
cmp
out
mov
jno
add
out
je
ret
pop
gs
mov
rol
lods
sahf
push
dec
push
mov
xor
mov
push
cmp
aaa
xlat
mov
pop
inc
std
lods
cmp
xchg
jmp
xor
mov
(bad)
sbb
mov
inc
cmp
inc
add
add
out
jmp
inc
sbb
adc
push
enter
rcl
or
xchg
jo
mul
pusha
(bad)
fsub
out
pop
jge
sbb
sbb
mov
push
lock
pop
test
rcr
xchg
sbb
pop
shl
mov
dec
(bad)
test
js
enter
nop
push
test
jecxz
popa
mov
push
das
dec
mov
xor
add
aas
rcl
sub
repz
mov
loope
test
cmp
jae
pusha
mov
push
and
shr
mov
and
cmp
jmp
daa
hlt
mov
ret
cmp
mov
add
shl
mov
and
cdq
sub
je
rcr
std
mov
inc
int3
and
mov
push
push
nop
aam
fistp
push
fiadd
stc
pop
mov
mov
cmp
dec
out
out
pop
add
pop
ja
ss
cmp
mov
aas
icebp
mov
adc
rol
pop
sub
push
adc
(bad)
mov
inc
gs
(bad)
fcmovne
cmp
int
push
ret
imul
mov
jmp
out
xor
das
mov
cmp
sti
xor
push
int
test
fnstcw
xchg
repz
push
sub
out
sub
js
adc
inc
mov
aas
push
retf
pop
jg
in
cmp
jge
jl
in
add
outs
out
gs
jmp
mov
les
mov
jbe
repnz
cmp
jl
test
sbb
ja
loop
add
or
lahf
rcr
hlt
pop
mov
or
fild
lods
sbb
or
adc
imul
arpl
addr16
test
mov
(bad)
jae
mov
pop
add
dec
sbb
jb
mov
xor
sub
xchg
xchg
and
adc
enter
stc
jns
ss
nop
bound
ret
sub
loopne
jle
jns
aad
add
mov
jbe
xchg
enter
cmp
es
mov
aam
push
dec
mov
jmp
jnp
cld
mov
lock
(bad)
sar
inc
clc
pop
lods
jmp
out
sahf
aaa
push
pop
xchg
xor
xor
mov
mov
sbb
mov
ss
ret
std
dec
aad
adc
inc
and
lods
push
xor
loop
add
pop
and
inc
les
mov
repnz
push
test
jmp
test
jecxz
add
sbb
dec
push
pop
imul
cmp
frstor
das
les
jge
retf
aam
aad
or
gs
jle
mov
jmp
or
rcr
or
clc
loope
ja
out
or
add
add
test
les
sbb
push
push
ss
scas
test
sub
mov
mov
push
mov
in
xor
mov
xor
(bad)
push
add
sbb
or
and
shl
and
or
fwait
mov
inc
cld
ss
mov
jno
aam
pop
loope
xchg
fsub
sub
add
mov
cli
idiv
push
bound
xchg
push
into
adc
xor
inc
nop
sbb
adc
gs
mov
(bad)
jmp
cld
jbe
pusha
out
mov
sbb
lds
gs
mov
dec
fld
jae
and
pusha
ins
adc
mov
test
clc
ret
arpl
ins
dec
ins
xchg
fbld
xor
mov
pusha
xchg
(bad)
pop
sbb
test
int3
stos
test
outs
clc
fimul
(bad)
out
loop
ror
ret
test
dec
sub
sbb
xchg
test
fiadd
icebp
or
mov
aas
and
mov
cld
cmp
xor
pop
dec
icebp
jo
dec
jnp
xchg
cmp
repnz
test
and
or
pop
mul
scas
adc
add
addr16
sbb
xor
lock
pop
inc
xchg
out
fcom
jbe
iret
and
sub
rcl
scas
mov
mov
pushf
adc
loopne
outs
sbb
pop
shr
sub
lea
lahf
or
retf
push
int3
ja
dec
xor
ficomp
pop
cmp
mov
out
pop
test
test
adc
push
xor
push
outs
shr
add
adc
sbb
mov
shl
jge
(bad)
je
ret
(bad)
in
cwde
pop
jne
outs
and
xor
push
cdq
jmp
stos
dec
jp
sub
repz
pop
jmp
inc
mov
push
dec
(bad)
(bad)
js
adc
pop
sbb
nop
inc
addr16
push
push
push
imul
xchg
jns
arpl
popf
push
push
push
cmp
dec
jge
cmps
out
mov
pop
mov
push
leave
test
jmpw
fst
ficom
cmp
test
lods
xor
test
inc
arpl
inc
add
inc
cmps
leave
lea
xchg
test
inc
mov
sub
gs
mov
add
ins
cmp
jp
mov
cmp
jl
push
sub
cmp
movs
sub
pop
cmp
mov
pop
xor
ret
pop
fst
xchg
mov
js
mov
ja
push
or
ficom
add
mov
jmp
sub
lahf
cdq
push
cmp
mul
sbb
je
imul
enter
imul
push
ret
push
jo
inc
mov
leave
dec
repz
pop
das
pop
movs
inc
pop
jno
lahf
inc
xor
mov
idiv
ds
ins
das
mov
leave
mov
push
ins
jns
jae
xor
add
sub
(bad)
leave
mov
xor
mov
je
and
adc
outs
mov
xchg
cmp
lock
push
cmps
in
div
std
(bad)
je
lahf
in
movs
pop
pop
jecxz
rcr
and
sbb
xor
inc
enter
in
mov
or
aaa
sbb
fcomp
stc
pusha
stos
retf
or
stc
iret
cmc
push
out
pop
rcr
fidiv
sbb
out
int
mov
add
xor
repnz
add
fiadd
data16
js
xchg
sbb
repz
mov
add
pop
ret
int
adc
mul
xor
xor
mov
jl
jno
movs
repnz
arpl
fsub
cld
fs
fdiv
in
(bad)
or
(bad)
mov
cmp
inc
fsub
sbb
pop
adc
pop
pop
add
dec
ficom
or
or
jecxz
dec
in
into
fidiv
loope
jmp
int3
adc
dec
out
mov
fadd
xor
pop
and
or
std
xchg
jg
nop
fdiv
ja
comiss
das
out
cld
add
or
stos
mov
push
xchg
jmp
stc
scas
ins
sbb
(bad)
dec
inc
daa
jo
adc
js
jmp
movs
lods
inc
mov
jmp
lods
lods
loopne
dec
add
bound
mov
fstp
lea
push
xor
mov
pushf
push
sbb
sbb
or
cmps
add
call
push
mov
mov
add
inc
mov
aas
retf
xor
jns
and
jns
jb
push
push
add
mov
xchg
shl
data16
mov
dec
inc
les
mov
stos
inc
sbb
pop
hlt
sar
pop
jp
push
mov
imul
inc
pop
scas
hlt
test
aas
mov
xchg
xchg
sbb
pop
xchg
rcl
stos
test
push
fwait
mov
jmp
(bad)
shl
imul
scas
xor
sub
xchg
es
sub
and
dec
push
cwde
mov
push
dec
xor
mov
test
cmp
pop
in
inc
sbb
cmp
mov
mov
int
fcom
inc
add
xchg
not
and
lahf
jae
shl
jb
dec
and
xor
outs
sbb
jg
(bad)
pop
retf
test
imul
sub
ror
loopne
movs
jne
jmp
mov
stos
cli
inc
leave
loopne
out
xor
and
xor
push
jbe
call
nop
nop
inc
and
sbb
enter
and
xlat
mov
dec
pushf
add
inc
sub
xor
pop
int3
xlat
ds
jg
mov
or
add
loopne
pusha
popa
or
sub
fs
stos
cmp
sti
add
push
dec
and
(bad)
mov
mov
and
pushf
lods
push
or
(bad)
stc
push
sti
xchg
xor
retf
test
sub
or
xor
cdq
lods
jmp
js
and
fistp
mov
sbb
jg
cld
add
jmp
pop
dec
in
stos
push
sub
daa
jbe
retf
xchg
scas
xlat
inc
clc
pusha
aam
push
dec
in
adc
std
dec
xchg
sbb
out
xor
(bad)
hlt
fcos
push
inc
cdq
xchg
in
jae
xor
jg
movs
push
push
dec
fwait
dec
stc
inc
in
inc
xchg
add
sub
add
scas
pop
mov
aad
push
stos
loopne
sub
out
stos
pop
addr16
add
dec
loopne
les
lds
sar
or
push
push
out
loop
cmp
mov
out
mov
xchg
cmp
adc
stos
test
mov
mov
jle
out
dec
arpl
sub
xor
adc
adc
xor
xchg
call
push
test
ss
push
popa
lods
icebp
(bad)
fdivr
mov
mov
pushf
inc
push
dec
add
sbb
outs
jnp
inc
movs
inc
mov
sub
jmp
push
in
popf
loope
mov
int
sub
pop
out
pop
sub
lods
outs
dec
ja
dec
adc
ds
xor
sbb
cwde
push
pop
jbe
lea
in
add
(bad)
hlt
jo
mov
push
scas
ins
or
outs
adc
sub
mov
jae
xor
push
mov
lahf
pop
rcr
cmp
jne
fld
sti
inc
lahf
ins
or
inc
mov
inc
lods
jae
sub
test
in
(bad)
cmp
ds
jns
inc
xor
pop
fcom
mov
outs
or
push
sti
inc
rcl
inc
push
fnsave
dec
xchg
push
int3
mov
mov
call
mov
cmc
not
dec
iret
rol
sbb
int3
xor
je
aam
loop
jnp
addr16
arpl
mov
bound
jns
cs
push
gs
and
jg
(bad)
pop
out
out
test
push
out
popf
jg
jmp
stc
(bad)
rcr
(bad)
stos
cdq
add
dec
in
outs
mov
pop
sub
adc
push
out
jae
pop
stos
mov
inc
jmp
push
fiadd
xor
loopne
adc
shl
sti
jno
call
ret
jge
cwde
jle
sub
lods
pop
ds
xlat
test
loopne
popa
(bad)
dec
repz
and
mov
jmp
stc
aaa
imul
adc
in
mov
jmp
pop
ficom
lock
outs
jnp
mov
std
pop
fdiv
fwait
add
lock
pushf
fsubr
jno
push
or
ret
les
loop
aad
push
xchg
mov
inc
xor
and
scas
fsub
pop
mov
in
push
loop
push
jae
or
push
es
cmps
add
test
mov
xchg
das
mov
add
cmps
jg
sub
or
jp
pop
shr
jge
ror
call
mov
push
lods
pushf
retf
xchg
jmp
jge
test
iret
sub
lahf
ret
stos
or
gs
das
pop
sar
in
imul
lods
(bad)
dec
call
scas
push
cdq
lods
popa
inc
je
and
pop
iret
ins
xlat
ins
outs
movs
pop
cs
aaa
mov
out
xchg
shl
lods
aad
pusha
test
test
pop
add
(bad)
retw
jne
jmp
and
vcvtsd2ss
mov
xor
and
(bad)
iret
sub
and
push
cmp
jne
fsubr
adc
(bad)
out
jns
rcl
scas
sub
repz
mov
pop
sbb
fadd
add
fldlg2
add
push
jne
pop
xor
shr
lahf
rcr
inc
mov
push
cmp
dec
or
xchg
mov
icebp
jl
dec
pushf
test
sub
clc
fild
mov
mov
push
sub
mov
rcl
es
rol
ds
aaa
bound
and
ret
mov
sub
ins
adc
inc
or
retf
data16
pusha
xor
daa
daa
inc
daa
sbb
mov
mul
add
ins
lods
fist
and
sahf
fwait
mov
test
adc
mov
mov
mov
into
cmps
mov
sub
xchg
jno
sbb
jge
mov
repz
cmps
xchg
enter
(bad)
jmp
pop
int3
mov
sar
mov
cli
or
arpl
arpl
movs
sub
clc
xor
mov
and
adc
cdq
jg
push
(bad)
outs
inc
push
inc
cmc
push
and
fdivr
inc
mov
pop
mov
and
sub
test
mov
mov
jae
sbb
mov
xchg
push
inc
lods
jecxz
pop
rcl
test
sahf
dec
mov
inc
mov
imul
and
pop
dec
pop
jge
sub
fadd
neg
int3
jbe
mov
out
dec
arpl
fmul
lods
sbb
mov
push
cmp
pop
jp
rol
jns
retf
mov
mov
cmp
cmp
sub
pop
mov
xor
aam
retf
cmp
inc
cmps
mov
sub
cmps
test
ffree
cmc
fcmovnu
xchg
stos
sub
push
mov
pop
in
cmpxchg
mov
jae
push
out
sbb
in
push
ret
addr16
(bad)
clc
ja
popf
mov
hlt
in
enter
pop
aas
push
ja
repz
or
mov
rep
popa
dec
stos
push
fdivr
push
sti
mov
cmps
inc
fidivr
push
inc
leave
dec
shl
punpckhdq
cld
xchg
cmc
retf
out
xchg
sbb
lock
stos
jmp
jnp
stc
adc
dec
sbb
push
ret
xor
add
pop
ins
push
enter
push
xchg
push
push
aam
add
retf
jnp
sbb
jp
jae
or
repz
inc
mov
push
push
lds
jne
mov
add
popa
into
sbb
call
fwait
dec
outs
lahf
mov
aaa
fs
outs
(bad)
enter
pop
mov
aaa
test
(bad)
popf
cs
sub
ins
in
mov
arpl
inc
mov
dec
mov
pop
(bad)
(bad)
ror
dec
je
jle
jmp
ficom
in
sub
out
movs
call
repnz
add
xor
iret
sbb
repnz
js
dec
outs
xor
adc
jg
jmp
hlt
ins
mov
adc
nop
jo
pusha
sbb
push
data16
sbb
xchg
mov
push
mov
test
scas
mov
out
mov
popa
test
add
enter
rcl
out
shl
test
(bad)
adc
nop
mov
data16
sahf
xchg
xor
cmp
xor
mov
rcl
sub
loope
push
daa
cli
or
fistp
jp
dec
inc
jb
clc
push
pop
shl
inc
nop
gs
mov
retf
lea
push
retf
add
and
div
or
inc
call
(bad)
lods
xor
and
and
fnsetpm(287
fwait
sbb
mov
fnstcw
xor
jecxz
or
in
dec
push
cs
(bad)
cld
pop
mov
jecxz
mov
fist
leave
adc
test
pop
aas
mov
add
test
mov
fldenv
int
xlat
mov
or
add
scas
movs
and
sbb
push
mov
fisttp
mov
mov
lahf
push
dec
pop
jg
inc
fnstcw
and
sbb
in
sbb
data16
in
aam
pop
xor
cmps
cmps
leave
jno
adc
inc
popaw
and
loop
stos
push
sbb
cmp
sbb
ins
sub
adc
mov
push
and
sti
or
movs
xchg
sti
in
sub
ss
sub
mov
leave
xchg
xchg
aam
(bad)
repnz
shl
push
xor
outs
cli
mov
dec
add
cmp
cmp
push
lods
cli
mov
lods
ficomp
stos
dec
nop
(bad)
mov
add
in
dec
icebp
cmp
add
jmp
jbe
pop
pop
xchg
mov
rcr
mov
xchg
cdq
or
lds
xchg
outs
sbb
retf
rcl
sbb
rcr
mov
mov
lds
vmovhps
dec
out
sub
imul
push
cmps
and
addr16
jmp
xlat
mov
xchg
sahf
fstp
test
xor
aad
dec
stc
les
adc
and
jecxz
(bad)
rcr
add
bound
jp
adc
jge
cmp
sub
test
dec
dec
sbb
add
adc
inc
scas
xchg
sub
out
cmp
iret
es
int3
dec
push
inc
push
or
mov
nop
cmp
pusha
jg
xor
lock
cmp
outs
push
mov
in
aam
enter
retf
aam
sub
fisttp
shl
add
jp
jb
jmp
sbb
gs
cmp
jnp
imul
cdq
mov
(bad)
in
fs
sbb
xlat
push
adc
mov
cmp
push
(bad)
pop
adc
add
mov
fs
pop
sub
loopne
add
dec
pop
xchg
les
sti
call
icebp
aas
or
lock
dec
jno
or
cmps
inc
sbb
xchg
fs
mov
cs
mov
or
in
clc
push
pop
mov
adc
lea
ret
fistp
test
mov
add
xchg
pop
mov
(bad)
sbb
dec
mov
shl
dec
add
outs
add
ret
add
or
xchg
ins
jge
paddsw
cmp
mov
xchg
dec
shl
push
(bad)
call
dec
sub
or
sbb
cdq
movs
sbb
push
pop
dec
pop
ins
gs
aas
jb
pop
adc
cmp
mov
dec
mov
xchg
sub
out
add
and
sbb
scas
dec
mov
gs
int
lea
or
push
dec
add
sub
in
sub
or
gs
in
mov
in
call
dec
mov
xchg
xor
pop
and
ins
lahf
sahf
jno
lock
sbb
call
bound
mov
pop
mov
mov
popa
je
addr16
pop
push
jmp
mov
test
imul
ins
bnd
lods
xchg
xor
and
mov
mov
ficom
lods
mov
imul
int3
bound
dec
mov
lahf
jp
push
mov
push
popa
call
dec
add
(bad)
mov
fcmove
push
or
cmp
mov
ficomp
ins
in
sub
cmc
(bad)
xchg
cwde
add
cmp
gs
les
aaa
lods
in
cwde
scas
popa
mov
aam
sub
jg
mov
loope
or
jbe
in
or
jg
js
lahf
mov
sar
xchg
call
xchg
pop
sub
xchg
fdivr
js
pop
push
dec
inc
lea
cmp
pop
sub
(bad)
xchg
fisubr
ins
stc
les
in
dec
xor
xor
stc
les
lods
ficomp
dec
mov
pusha
xor
ja
ins
mov
test
jno
jns
std
inc
es
loope
mov
dec
dec
mov
popf
call
out
out
shr
and
sub
and
mov
push
xchg
in
mov
add
fiadd
push
xor
daa
pop
jb
push
jp
into
imul
vpperm
dec
shl
icebp
mov
dec
bound
xchg
xor
nop
xor
or
inc
and
push
and
clc
jmp
aas
les
xor
shl
mov
or
xor
dec
add
mov
mov
mov
frstor
mov
stos
test
add
ret
fcom
call
mov
enter
imul
xor
int3
and
adc
in
test
xor
enter
or
dec
xor
sahf
stos
push
pop
jecxz
lods
ins
or
es
sbb
inc
mov
fst
sub
dec
mov
scas
outs
xchg
sbb
loopne
mov
mov
mov
ret
popf
outs
inc
dec
outs
push
dec
imul
jl
mov
daa
sub
mov
je
pop
aam
popf
dec
jmp
and
ret
xor
cmp
ins
or
fistp
mov
inc
scas
xor
(bad)
jmp
and
jle
(bad)
xchg
(bad)
sti
sbb
pop
inc
movs
jge
mov
daa
retf
cmp
outs
imul
call
adc
fidivr
ficom
not
repnz
push
aas
or
pop
int
xchg
cmps
fisttp
push
jo
loope
movs
push
push
inc
popa
(bad)
and
iret
push
mov
xchg
sub
cmps
or
leave
jmp
stos
inc
in
retf
and
cmp
aaa
into
jge
or
nop
dec
xchg
push
(bad)
in
arpl
stos
retf
push
mov
data16
js
ins
les
mov
clc
dec
lahf
stc
cmp
ret
inc
arpl
mov
dec
cmp
ja
xchg
bound
sbb
push
sbb
(bad)
dec
inc
push
xor
mov
dec
shr
out
jecxz
adc
sub
jge
jno
lods
xor
inc
jo
aas
push
cmps
pop
out
dec
adc
push
add
adc
mov
fild
cld
in
js
push
mov
jmp
ins
xchg
add
sub
(bad)
stc
lock
loop
fs
int3
int3
cli
mov
inc
push
aaa
lods
dec
mov
(bad)
jmp
cwde
pushf
pop
addr16
pop
cdq
sub
or
push
aaa
push
pop
push
cmp
je
dec
jecxz
jmp
push
mov
test
sub
ja
inc
popa
xor
adc
(bad)
scas
push
in
mov
jbe
jp
sahf
dec
mov
push
lds
scas
clc
es
aaa
jmp
ja
xor
push
gs
pop
add
test
jmp
sub
jmp
push
jl
(bad)
pop
rol
arpl
jl
jge
aas
or
xor
jb
loop
adc
dec
les
std
lock
mov
adc
imul
fs
(bad)
out
dec
push
mov
icebp
es
dec
adc
push
dec
in
ins
std
(bad)
jo
xchg
bound
push
mov
dec
push
aam
and
arpl
jno
sbb
adc
nop
adc
imul
out
jmp
dec
jmp
inc
lahf
rol
scas
les
outs
je
xchg
sar
ret
fstp
cmp
mov
xor
and
sub
or
and
js
fsub
xlat
cdq
bswap
sub
inc
xchg
popa
mov
sbb
pushf
push
push
das
push
fcomp
shl
jb
mov
enter
inc
stc
jns
data16
sbb
dec
scas
xor
push
dec
xor
outs
out
rcl
nop
add
neg
push
pusha
add
jae
xor
push
xor
das
dec
xchg
hlt
shr
sbb
jg
in
jbe
ins
mov
comiss
das
clc
and
cmp
scas
mov
shl
fstp
loop
pushf
jp
inc
pop
neg
div
sbb
jp
int3
sub
push
imul
movs
int
inc
mov
inc
in
push
bound
mov
cs
je
xor
scas
and
mov
push
popa
cmp
(bad)
retf
pop
jp
inc
inc
sbb
push
sbb
mov
dec
aad
je
dec
mov
mov
js
sub
lds
sahf
mov
sbb
aas
jmp
sar
(bad)
repnz
push
inc
mov
enter
sub
xchg
fxch
fs
add
test
pop
mov
out
inc
bound
and
mov
add
mov
mov
cli
push
test
dec
jg
push
jmp
push
inc
stc
imul
jae
nop
sbb
fsubrp
mov
xor
stos
js
sbb
fcmovnu
(bad)
xlat
xchg
sub
(bad)
in
cmp
xchg
dec
or
xchg
jge
and
fadd
dec
in
fiadd
test
pop
mov
or
std
(bad)
sbb
xchg
jns
in
jl
mov
cmp
popf
mov
movs
xchg
cs
neg
cwde
sbb
neg
jmp
cld
jns
(bad)
fldenv
cmp
faddp
add
cwde
jb
adc
sub
mov
adc
lock
sub
lods
(bad)
(bad)
retf
jnp
cdq
adc
adc
inc
inc
push
int
mov
ret
cmp
xchg
cmp
cmc
rol
sub
repz
add
add
cs
fsubr
stos
mov
inc
jns
mov
push
icebp
push
push
push
jg
in
cmp
(bad)
push
cmp
push
or
(bad)
dec
in
clc
(bad)
test
rcl
add
xchg
hlt
jno
dec
mov
pop
add
pop
dec
sti
pop
push
dec
(bad)
mov
or
in
addr16
or
xchg
and
mov
(bad)
mov
div
inc
lock
je
outs
mov
cmp
test
retf
mov
in
neg
(bad)
jecxz
stc
jnp
or
repnz
cmc
rol
sbb
es
and
pop
test
stos
push
out
ins
pop
mov
cmps
in
inc
mov
mov
jl
lds
inc
dec
cld
in
cwde
leave
xchg
mov
scas
cmp
inc
dec
jl
lods
push
or
stos
ret
test
add
fisubr
add
inc
test
sub
xchg
arpl
push
outs
mov
mov
xor
push
xor
outs
(bad)
scas
ret
and
add
mov
dec
imul
outs
mov
sbb
mov
ins
push
dec
data16
xor
adc
fadd
scas
pusha
pusha
cmp
movs
(bad)
int
xchg
mov
inc
ss
inc
add
add
inc
out
aam
fisttp
add
(bad)
jl
(bad)
mov
jge
pusha
stc
lock
inc
(bad)
adc
mov
xchg
jp
mov
bound
push
clc
cwde
out
push
inc
aam
xchg
add
(bad)
int
add
mov
shr
and
mov
lock
cmc
mov
mov
push
fbld
pop
mov
xchg
xchg
jmp
ds
aad
mov
lock
push
sbb
pop
imul
or
frstor
mov
ja
xor
repz
inc
sar
jmp
ins
daa
movs
sbb
(bad)
xchg
cmc
mov
add
call
push
and
cmps
fisub
ds
sub
dec
or
mov
fbld
rcr
daa
sbb
dec
jecxz
js
(bad)
test
stos
inc
push
jae
stos
inc
xor
call
je
pop
aam
aam
push
sbb
push
retf
jge
lods
daa
cld
cvtpi2ps
(bad)
cli
mov
stc
mov
adc
(bad)
(bad)
ja
mov
icebp
lock
lods
mov
fmul
xor
jmp
fcom
imul
xor
xchg
mov
push
pop
shl
ss
fld
push
dec
push
cmp
in
pop
loop
inc
inc
xchg
(bad)
daa
or
dec
jno
jecxz
xor
mov
sbb
or
adc
fiadd
adc
aas
pop
add
mov
pushf
and
stc
jae
or
cmp
sbb
test
dec
dec
jecxz
int
mov
imul
loopne
or
vmptrld
sbb
and
pop
mov
cli
into
neg
(bad)
push
and
cmps
mov
test
pop
movs
mov
arpl
ret
and
retf
jno
cmps
cmp
out
dec
push
je
stc
jno
push
pop
jp
sbb
xor
sub
cmp
add
jp
add
idiv
je
mov
mov
stos
fimul
not
xor
int
loope
aas
mov
mov
outs
call
sub
jle
imul
in
out
push
aad
sti
mov
std
shl
pop
or
(bad)
sbb
jne
xor
push
ds
xchg
(bad)
repnz
addr16
popf
cmp
or
aaa
dec
outs
pushf
(bad)
data16
test
push
cmp
rcr
call
int3
inc
mov
mov
mov
xchg
lods
repnz
jge
and
cmp
cmp
pop
push
xchg
inc
sbb
test
sub
and
push
jns
into
or
mov
cmp
xor
fnstcw
mov
clc
sub
aaa
add
dec
stc
icebp
jmp
or
js
dec
stc
mov
jle
mov
fimul
adc
mov
retf
loope
sub
shl
ud2
in
loope
xchg
inc
mov
inc
push
and
dec
inc
jno
or
jg
aad
(bad)
adc
not
idiv
test
jbe
mov
(bad)
shr
adc
cmps
lds
jg
add
ret
add
(bad)
jnp
popf
pop
sbb
mov
daa
xchg
dec
dec
sbb
lods
sbb
(bad)
movs
pop
mov
bound
(bad)
popa
shr
stc
or
cld
xor
ins
(bad)
push
push
std
cmp
mov
pusha
pop
in
(bad)
mov
lods
imul
ret
jmp
test
mov
inc
sbb
(bad)
imul
mov
xchg
and
fs
or
xchg
mov
push
nop
or
or
test
shr
jmp
nop
cmp
in
mov
jmp
mov
scas
movzx
mov
pop
push
jp
sbb
dec
ds
das
add
data16
inc
cdq
je
sub
out
ds
mov
and
mov
loop
not
add
test
xor
mov
mov
sub
jnp
sti
popf
push
mov
cmp
xor
(bad)
or
pop
dec
arpl
jmp
xchg
je
rcr
mov
push
lock
mov
cwde
mov
leave
mov
jg
xchg
adc
scas
jecxz
inc
gs
cmps
dec
ja
or
mov
fadd
push
nop
dec
test
hlt
xchg
fist
add
cmp
aad
hlt
add
outs
js
(bad)
in
scas
sbb
(bad)
pop
jge
ret
in
aaa
inc
add
pushf
cs
mov
mov
stc
adc
shr
ss
cmp
pusha
add
cmps
sbb
xchg
mov
repnz
popf
mov
outs
mov
mov
inc
sar
mov
outs
cmp
ss
add
mov
mov
inc
test
xchg
adc
repnz
or
fucomip
pop
stos
dec
xor
mov
int3
or
xchg
lods
xchg
ret
call
mov
xor
push
mov
lods
daa
push
cmp
jl
pop
lods
xor
cmps
aas
pushf
pop
or
ds
sub
sbb
outs
xchg
fwait
bnd
add
cs
leavew
test
aad
rcr
or
out
xchg
mov
jg
cli
add
cwde
xor
and
int
test
dec
ss
xchg
sti
std
mov
and
test
outs
rol
cmps
mov
pop
mov
ss
ins
retf
xor
pop
leave
(bad)
scas
mov
or
dec
cmc
jb
aam
mov
cmps
push
adc
stos
xor
fwait
loop
add
adc
lods
sahf
loop
sbb
mov
add
js
push
pop
cdq
push
inc
cmp
das
or
inc
loope
dec
fisub
or
sar
inc
or
cmps
shl
jge
jecxz
inc
mov
add
sti
mov
mov
sbb
jl
test
inc
inc
fidivr
outs
pop
loop
cmp
xlat
dec
not
push
(bad)
clc
sbb
mov
inc
pop
call
sar
sbb
adc
fist
out
sbb
push
nop
cmp
add
inc
lahf
mov
pavgw
xlat
or
sar
push
(bad)
scas
add
add
pop
sub
loop
sbb
sub
or
jle
xchg
sbb
arpl
cmps
xor
lods
lods
mov
mov
repnz
sbb
sbb
jmp
mov
jp
mov
mov
inc
in
(bad)
lods
sub
out
mov
inc
push
repz
jge
enter
stos
xchg
xchg
xchg
mov
scas
pop
test
jne
jae
pop
inc
or
mul
ins
imul
aaa
adc
scas
jnp
push
mov
mov
ficomp
add
mov
pop
add
nop
add
add
adc
pop
mov
add
jnp
das
or
mov
xchg
pop
div
int3
mov
xor
xchg
data16
jge
pop
(bad)
pushf
les
retf
sbb
ret
add
pop
jne
mov
cmp
mov
xchg
pop
pop
jno
mov
and
stos
xor
retf
movs
sub
imul
mov
jmp
ins
sbb
pop
repnz
ret
sbb
jle
movs
scas
(bad)
jb
lahf
shl
int3
cld
push
dec
adc
pop
es
jle
neg
push
in
loop
lds
clc
inc
pop
mov
mov
mov
ja
(bad)
and
dec
sar
mov
imul
repz
hlt
(bad)
push
inc
mov
pop
into
and
mov
push
data16
inc
mov
sbb
test
fndisi(8087
sub
pop
(bad)
into
and
dec
lock
out
sub
mov
shl
mov
fadd
fdivr
push
dec
cmp
pop
push
jle
out
and
xor
test
jns
lahf
pop
pop
xor
jno
out
leave
inc
jae
test
mul
sbb
popf
mov
inc
test
jle
fild
retf
rcr
dec
cwde
xchg
pop
idiv
not
and
pop
shl
xor
ret
dec
fist
adc
rcr
clc
retf
mov
mov
rcl
clc
call
std
jae
fiadd
aam
ret
fadd
stos
in
dec
imul
int
push
cmp
jb
pop
cs
sbb
ret
xor
pushf
cli
cld
inc
and
fidivr
xchg
or
pushf
je
retf
js
jno
out
push
mov
ins
lea
in
lds
int
adc
stos
data16
xchg
lea
xchg
jge
mov
inc
jecxz
jno
pop
mov
scas
fnstenv
cdq
(bad)
mov
into
jmp
adc
mov
stos
cmp
pop
ja
jae
pop
adc
shl
cmps
shl
outs
lods
rcr
fwait
push
in
jl
ss
xchg
inc
es
sar
shl
or
es
imul
mov
adc
sbb
inc
add
adc
gs
mov
adc
enter
bound
ret
push
stos
out
sub
inc
fild
mov
mov
or
pop
inc
mov
mov
cmps
add
mov
sub
push
adc
sub
or
(bad)
mov
mov
lock
in
or
xchg
icebp
loop
push
cdq
out
and
pushf
aad
outs
enter
and
movs
add
jno
shl
mov
sub
mov
dec
pop
aad
bound
mov
movs
dec
xor
jmp
add
push
add
jmp
mov
xlat
xor
ror
imul
mov
lea
(bad)
popf
adc
call
push
jmp
lods
mov
or
push
(bad)
xchg
mov
cs
js
jno
inc
mov
scas
jnp
cmps
retf
and
dec
mov
xchg
ins
add
ret
ins
hlt
xchg
div
retf
pop
lds
test
scas
pop
sub
cmps
add
frstor
and
sahf
inc
(bad)
fdiv
test
loope
jmp
mov
or
test
aaa
sub
cmp
lods
ds
in
stos
clc
cmp
int
or
data16
retf
sbb
dec
add
cmp
movs
push
icebp
or
jnp
out
(bad)
sbb
inc
inc
or
pushf
repz
and
bound
icebp
xchg
in
shl
mov
dec
pop
jmp
lds
jle
xchg
dec
test
test
xor
outs
mov
sbb
and
adc
sub
jae
js
out
shl
cmp
and
test
call
push
dec
pop
retf
jmp
xchg
lea
out
push
fnstsw
sbb
cmps
adc
aad
movs
ja
push
int
stc
pop
xor
pushf
test
out
dec
fisttp
sbb
inc
ja
imul
dec
jb
jo
popa
xor
mov
cs
sahf
int
lods
and
or
stos
xchg
jl
or
ds
fild
fisubr
cmc
push
pop
dec
ret
cmp
cmps
cmps
in
dec
cdq
retf
mov
add
lds
ret
mov
test
ins
popf
loop
scas
xchg
push
cmp
push
int
inc
popa
stos
dec
cld
or
sub
fwait
cwde
icebp
arpl
mov
or
movs
stos
sub
mov
lds
test
lds
je
bound
shr
inc
jmp
arpl
and
cwde
jno
cmp
pop
int
add
sbb
mov
mov
in
pop
mov
ret
dec
mov
loopne
nop
sbb
stos
cmp
adc
or
ins
fwait
sub
dec
xchg
cmps
into
enter
ins
xor
in
mov
cmp
scas
add
pop
enter
xchg
add
or
bound
sbb
dec
stos
pushf
fs
stc
enter
jo
loopne
pop
and
shl
enter
mov
mov
mov
xor
sub
cmp
loope
push
pop
and
xchg
mov
sbb
dec
cmp
in
or
fist
outs
ret
jge
jne
and
xchg
scas
jns
retf
stc
cmc
popf
ins
jo
or
or
test
loop
in
mov
cmp
int
push
fisttp
cmp
xor
in
outs
push
sub
in
(bad)
(bad)
jmp
mov
jmp
xchg
mov
inc
repnz
rol
hlt
push
sbb
js
int3
sbb
rol
sub
scas
mov
test
mov
jge
hlt
jmp
xor
push
fisub
gs
and
call
movs
sub
aaa
push
test
mov
lds
scas
ins
das
mov
es
ja
jmp
fild
ins
addr16
and
jb
adc
mov
pop
jno
dec
sub
cdq
add
sub
jne
lahf
loopne
xlat
xchg
test
push
inc
mov
dec
repz
cld
and
push
icebp
shr
adc
movs
push
(bad)
pop
xchg
or
xchg
call
sbb
jne
fsub
adc
das
mov
fbld
js
ins
jmp
push
xchg
mov
inc
jecxz
fdivr
aas
cli
out
xchg
inc
pop
or
scas
inc
xchg
jg
or
cmp
cli
xchg
or
sbb
stos
iret
adc
mov
add
call
dec
ins
fcmovnbe
les
outs
data16
adc
dec
xchg
int
call
fwait
push
lahf
sub
ret
fcomp
(bad)
add
inc
shr
mov
inc
enter
pop
scas
xlat
(bad)
cmps
pusha
mov
cmps
popf
and
in
xor
inc
in
add
das
xchg
shl
sub
jecxz
loopne
jge
push
fdivr
sar
pop
test
sub
imul
lds
jecxz
mov
ror
movs
jae
dec
loopne
ss
cmc
or
cmps
in
loopne
cmp
call
mov
push
retf
jns
bsf
sahf
sub
lock
popa
or
cmp
sub
scas
jno
adc
push
js
shl
fwait
sub
and
ins
add
adc
push
loop
mov
jo
test
movs
and
loop
add
jno
sbb
xor
es
cmp
adc
and
jns
mov
ins
int
sbb
jecxz
jmp
dec
dec
push
xor
jle
inc
ret
mov
mov
xor
in
jns
xchg
mov
(bad)
enter
push
mov
cld
aaa
cs
inc
movs
cmp
aad
mov
retf
push
dec
add
gs
xor
es
pop
sti
mov
cld
or
sahf
in
fcmovne
in
mov
lds
cs
dec
into
out
push
pusha
pop
inc
xlat
pop
pop
mov
int3
add
add
and
daa
adc
and
fdivr
jno
frstor
push
(bad)
out
mov
aaa
jb
sbb
es
stc
xchg
jmp
pop
mov
mov
or
loopne
sub
mov
int
push
jmp
xchg
jne
add
imul
jmp
xor
cmp
aas
ss
adc
xchg
xchg
lods
xlat
cmp
sbb
or
(bad)
xor
xor
xlat
mov
xor
cmova
pop
pop
pop
aaa
repz
push
sbb
and
cmp
sub
sub
loopne
loop
xchg
jmp
cmp
(bad)
(bad)
mov
pushf
test
and
jnp
imul
adc
and
lock
fcomp
ror
push
adc
or
rcr
out
push
add
dec
sbb
push
lahf
sub
push
dec
xchg
and
xchg
addr16
mov
stos
(bad)
into
fdiv
repnz
sub
mov
fstp
ja
cwde
(bad)
dec
mov
inc
sbb
xor
mov
(bad)
cmp
(bad)
xlat
pop
xor
mov
fs
jmp
add
jno
and
fistp
loop
push
fcmovnbe
(bad)
repnz
int3
je
pop
xchg
push
add
mov
jnp
in
mov
fsubr
cwde
js
out
or
xor
dec
and
pop
pop
stos
and
xchg
push
ret
dec
pusha
jg
cmp
outs
cld
cmp
or
mov
cli
cmp
pop
(bad)
loopne
and
add
add
loopne
ja
or
sub
cmp
push
pop
adc
mov
cmps
mov
cmp
(bad)
sbb
adc
mov
fsub
or
out
data16
dec
mov
jb
dec
and
cdq
popa
call
int3
shr
sbb
into
mov
stos
mov
imul
inc
sbb
inc
lock
jecxz
in
adc
sti
xchg
push
fidivr
and
arpl
dec
xchg
and
xor
xchg
loope
mov
sub
aad
inc
or
mov
or
cs
xor
mov
sbb
mov
shr
das
loope
cli
mov
lea
pop
jns
stc
inc
retf
outs
in
mov
add
adc
int
adc
scas
rol
outs
lahf
cli
sbb
std
sub
jnp
and
call
push
fstp
dec
jns
fild
test
int3
dec
fnsave
popa
cmp
add
dec
cmc
mov
imul
(bad)
sub
adc
int3
adc
pop
mov
aam
int
sub
clc
mov
hlt
lldt
stos
std
stc
leave
dec
inc
jle
fidivr
xchg
adc
mov
or
push
ja
adc
(bad)
fimul
xchg
push
jbe
les
mov
jae
xor
mov
enter
je
or
inc
cwde
mov
mov
xor
mov
adc
ins
xor
adc
call
and
or
aas
xor
adc
out
mov
jae
inc
gs
out
in
mov
fs
std
mov
cs
ret
icebp
dec
pop
xchg
cmp
adc
lds
and
sbb
int
sub
or
push
lock
cmp
in
out
adc
into
push
pop
or
jmp
cdq
add
pop
cmc
cmps
sti
dec
cmp
xchg
push
push
(bad)
loopne
in
daa
and
pop
cmp
and
mov
pop
aaa
in
cmp
sbb
ins
icebp
mov
int
fucomip
fcmovne
retf
bound
sbb
xor
out
mov
mov
xchg
jns
and
mov
mov
xchg
push
pop
ds
sahf
out
xor
jbe
bound
add
ins
in
dec
adc
sbb
lea
or
mov
dec
mov
test
xchg
sbb
jp
xor
getsec
mov
stos
lahf
adc
sub
mov
and
lds
pop
cs
ret
clc
idiv
mov
xchg
ins
fwait
dec
mov
idiv
sahf
add
and
jnp
and
add
jne
fsubr
enter
sub
lock
ss
xchg
inc
jmp
jmp
in
int
xchg
sub
repnz
movs
dec
out
ins
fsubrp
(bad)
sar
lods
es
xchg
push
cwde
or
jp
sti
lods
mov
das
sbb
mov
and
push
int3
mov
loop
and
dec
sti
mov
(bad)
clc
sbb
mov
adc
jecxz
inc
push
jae
mov
jo
fistp
pop
shr
inc
push
sub
push
inc
clc
push
mov
xor
cld
dec
in
xor
pushf
push
pop
sub
xchg
xchg
shl
in
sbb
push
fnsave
bound
mov
and
fbstp
mov
enter
mov
inc
dec
xchg
xor
mov
mov
sub
int3
mov
inc
cmp
xor
add
cmp
jecxz
add
cmp
pop
mov
mov
repz
cld
cmc
xor
div
pusha
popa
sbb
loope
xor
stos
inc
pop
push
dec
ins
scas
in
movs
adc
xor
jmp
jno
cwde
cmp
mov
vmovmskps
retf
in
or
mov
add
add
dec
push
sti
mov
mov
cs
fisttp
repz
xchg
cmp
lods
loopne
pop
or
rcr
xchg
stos
xlat
lahf
jp
pop
popf
js
sub
cdq
mov
mov
jmp
sub
inc
stc
jp
movs
cmp
jl
jle
test
and
adc
adc
push
(bad)
icebp
stos
pop
imul
outs
xor
addr16
aaa
jge
stc
jg
inc
shl
mov
push
cld
popa
inc
add
push
retf
push
neg
scas
out
scas
ror
in
adc
int3
jae
loope
gs
push
int
dec
test
mov
daa
(bad)
cdq
sti
scas
lahf
and
fwait
pop
rcr
push
mov
jge
pop
adc
or
int
cmp
cmp
inc
out
pop
mov
stos
or
jne
cmp
je
push
mov
leave
xchg
sbb
aam
xor
jmp
call
mov
mov
or
fnstsw
fwait
sub
mov
xor
and
and
call
ficomp
jo
nop
dec
inc
push
pop
inc
sbb
scas
lahf
push
(bad)
or
add
xor
sbb
repnz
or
pushf
mov
jle
lods
cld
stos
push
xchg
jb
adc
pop
cmp
push
cmc
sub
dec
push
ja
adc
push
add
enter
call
pop
and
pop
pop
fadd
pop
xor
adc
retf
cld
nop
pop
jo
ins
mov
or
outs
aas
sbb
mov
shl
mov
nop
call
jae
outs
and
ltr
xor
cs
scas
mov
xor
in
inc
mov
out
inc
sahf
das
test
or
enter
enter
mov
or
in
jmp
jmp
fmul
ss
in
sbb
or
aad
cdq
cwde
jl
push
jmp
lods
jle
xor
jae
pop
data16
and
xchg
arpl
sbb
dec
call
cmp
push
test
mov
je
mov
test
mov
in
sti
jg
xchg
les
daa
mov
xchg
and
or
into
test
inc
or
mov
xor
je
xchg
pop
int
test
pop
leave
mov
cmp
add
dec
add
mov
mov
rcr
sbb
inc
jg
push
in
pop
lds
jmp
mov
inc
dec
fcom
add
fisubr
mov
imul
or
fs
out
popf
cmp
test
pop
je
imul
push
inc
pop
pop
sbb
pop
push
xlat
mov
cmp
nop
pop
nop
imul
sub
xlat
mov
dec
pop
jb
xor
mov
iret
int
or
cdq
xor
leave
or
inc
fisubr
mov
bound
cmps
mov
ret
mov
push
xchg
pop
jns
or
add
jecxz
call
inc
fsubrp
jb
dec
sbb
movs
sti
test
shr
and
dec
fucomp
xchg
and
cmp
call
data16
std
and
js
jne
adc
call
movs
test
mov
xor
jnp
out
sbb
jp
xchg
gs
jbe
mov
and
mov
fisub
imul
sbb
mov
sub
ds
and
in
mov
adc
retf
bound
fldcw
pop
aas
pop
cmp
or
cmps
pop
lea
jmp
gs
sahf
mov
jmp
int
fwait
push
arpl
adc
(bad)
ja
sar
je
add
ficom
int
test
lahf
xor
push
cmp
cmps
add
ins
aam
outs
xchg
cwde
add
add
xchg
push
mov
mov
inc
push
sbb
fdivrp
jecxz
ret
mov
lods
xchg
cmps
and
data16
push
or
out
and
ret
mov
mov
mov
push
jl
or
ds
test
call
pop
sbb
dec
cmp
mov
pop
movs
pop
(bad)
out
sahf
lods
inc
outs
sbb
mov
ror
cmp
stc
ror
mov
adc
repz
fwait
loopne
inc
mov
mov
test
dec
ss
mov
fdivr
fild
test
lea
pop
jno
xchg
out
fcom
mov
push
dec
jge
dec
sti
inc
enter
and
xchg
xchg
cmp
mov
dec
dec
lock
mov
xor
xchg
ds
int3
or
jno
fisttp
ret
mov
jno
sub
and
pop
jl
pop
sbb
(bad)
fisubr
mov
js
gs
cmp
sub
int
xor
je
mov
icebp
jge
inc
pop
push
es
nop
leave
cs
inc
sub
clc
ins
add
and
neg
aaa
out
lahf
push
mov
add
xor
repz
xor
(bad)
mov
fbld
lds
hlt
pushf
push
div
add
and
test
push
es
jbe
jle
aaa
mov
add
stos
lock
rcl
add
adc
lods
or
pop
in
and
fidivr
les
xchg
ror
scas
gs
adc
in
and
aad
mov
std
pop
sar
adc
mov
aas
loop
inc
push
adc
jmp
fcmovnu
rcr
jp
sbb
and
(bad)
push
or
jl
ss
jecxz
adc
and
adc
xchg
push
outs
jg
inc
rcl
fld
(bad)
xor
mov
mul
add
pop
dec
mov
push
dec
lock
xchg
xor
jns
call
mov
sbb
xchg
adc
add
cmp
pop
sbb
repz
es
jo
cmp
repnz
jge
xchg
imul
mov
loopne
int3
lock
scas
repz
stos
scas
pusha
dec
pop
neg
jg
scas
add
jno
xchg
push
add
leave
lock
cmp
aad
in
mov
cmc
pop
and
jnp
sbb
jecxz
jns
push
shl
mov
and
push
sbb
sub
outs
das
jne
and
push
arpl
(bad)
aam
add
jl
jno
fisub
(bad)
mov
cmps
cld
enter
mov
pop
dec
out
mov
ret
outs
jb
add
std
jmp
mov
outs
inc
adc
jmp
imul
scas
sub
cs
fimul
fwait
push
test
lds
int
or
push
daa
not
xor
jp
pusha
pop
push
stos
jae
cmp
xor
xor
mov
cwde
cmp
mov
retf
scas
rcl
scas
push
inc
xchg
cmp
mov
ror
rdpmc
mov
mov
jmp
movs
inc
sbb
nop
mov
cmc
nop
add
rol
xor
jmp
sbb
xchg
(bad)
fld
mov
cli
movs
test
icebp
sub
fbld
adc
mov
iret
daa
cmp
shl
addr16
jo
out
sub
fld
loop
push
sbb
mov
dec
fwait
push
out
(bad)
out
sub
xchg
inc
inc
add
popw
inc
jp
and
pushf
aad
cmpxchg
sbb
gs
repz
mov
xchg
jp
outs
pop
sub
mov
cmp
pop
jl
cld
pop
not
hlt
cmc
adc
jae
xchg
inc
push
mov
shl
loop
adc
stos
lahf
sub
and
ficomp
dec
mov
(bad)
mov
xchg
or
mov
(bad)
aaa
(bad)
iret
stos
xchg
stc
cli
cmp
add
add
jp
fiadd
jg
rcr
and
je
loope
(bad)
bnd
push
jge
loope
pop
bound
dec
fwait
scas
xchg
mul
ja
icebp
cld
sti
mov
pusha
ds
call
sub
in
sar
jb
call
je
imul
mov
sub
and
test
sub
dec
repz
lock
jle
cwde
inc
fcom
lock
adc
popa
pop
test
xchg
pop
ss
sbb
ins
(bad)
hlt
addr16
mov
jmp
pusha
mov
std
pop
sub
out
cld
ret
ret
adc
(bad)
scas
xor
mov
(bad)
adc
mov
mov
mov
xchg
xor
add
or
test
xchg
jmp
loope
jne
pop
pop
xlat
push
test
mov
popa
xchg
add
imul
arpl
cmp
sub
ins
mov
ret
sub
jns
(bad)
jns
mov
cmp
inc
idiv
out
ja
fmul
mov
push
add
aad
xchg
sbb
pop
in
xor
inc
inc
mov
push
inc
lahf
lock
jge
or
mov
mov
mov
mov
test
data16
movs
push
xor
xor
popa
das
pop
sub
lahf
mov
jo
loope
mov
pop
inc
push
out
sub
inc
retf
cmps
cmp
aad
aaa
add
aad
cmp
fidiv
fstp
loopne
not
out
xchg
dec
(bad)
xchg
pop
ds
(bad)
and
or
pop
xor
add
add
pop
push
pop
in
jno
sbb
test
and
push
sbb
loope
mov
pop
adc
retf
retf
into
push
mov
loop
call
and
sbb
adc
push
dec
cs
call
dec
push
jns
push
shr
push
test
gs
lods
shr
and
adc
stos
jb
adc
push
(bad)
cmp
ins
mov
sub
(bad)
retf
inc
jo
adc
push
js
xchg
dec
pop
jmp
lea
(bad)
scas
addr16
popf
les
pusha
ds
xchg
lock
rol
test
jl
sub
jnp
or
push
cmps
ja
push
pop
loope
sahf
lods
jl
mov
sti
test
inc
add
adc
je
jg
or
mov
xchg
cmc
js
aad
in
(bad)
aam
cld
lock
xor
test
jae
(bad)
shl
xor
cli
mov
outs
jbe
ficom
loope
cdq
add
adc
sbb
inc
mov
mov
movs
cmp
xor
fisub
sbb
and
retf
xchg
shr
dec
es
ror
in
popf
pop
adc
leave
pusha
dec
ss
fnstcw
out
mov
pop
mov
mov
jg
sub
out
cmps
in
icebp
jbe
inc
out
call
in
(bad)
outs
pop
pop
outs
jne
test
mov
pop
pop
push
aam
fistp
cli
sub
adc
ins
dec
adc
cmp
mov
clc
push
jmp
ins
outs
pop
scas
mov
adc
aaa
rol
push
mov
sub
inc
rcl
push
add
shl
imul
arpl
mov
in
sub
and
addr16
cs
sub
out
leave
cmp
cmp
ret
sub
popa
aam
inc
jmp
out
sub
scas
xor
sbb
jl
sbb
and
ror
adc
(bad)
push
call
rcr
sub
arpl
or
(bad)
adc
mov
push
or
fimul
ret
icebp
fwait
jecxz
nop
mov
add
sbb
scas
loopne
data16
pop
adc
adc
jecxz
pop
call
ss
in
cmps
xchg
cmp
movs
out
xchg
ins
loopne
js
fs
inc
ins
stc
push
sti
adc
mov
push
and
mov
and
test
outs
fwait
mov
sahf
scas
dec
out
sub
mov
inc
scas
or
push
in
ja
xor
fst
or
mov
mov
xlat
out
call
ins
push
pop
fnstenv
data16
mov
inc
out
or
and
cmp
jp
nop
ja
les
sub
int
and
add
leave
dec
outs
js
xchg
out
std
sti
sub
adc
add
cmp
xchg
hlt
pop
cwde
ror
sbb
movs
mov
mov
ret
push
push
push
mov
adc
std
int3
mov
mov
lea
les
arpl
or
and
cmp
fprem
pushf
stos
in
movs
push
jae
push
mov
(bad)
sar
div
data16
icebp
je
jns
dec
sbb
mov
or
jo
xchg
inc
jb
data16
setl
push
mov
push
sti
jo
or
out
xor
adc
loopne
mov
aad
xor
int3
in
push
inc
shr
mov
pop
dec
push
jmp
sub
mov
fimul
add
push
adc
mov
jno
mov
mov
or
pop
mov
pop
int3
xchg
xchg
out
cmp
xchg
cmps
rcr
push
retf
jle
jecxz
push
and
es
lds
inc
in
adc
lds
mov
out
(bad)
mov
mov
mov
sub
jmp
xor
and
jge
push
sub
mov
jne
loop
adc
adc
pusha
not
ret
add
in
inc
lods
ins
icebp
shl
arpl
aad
cmp
sbb
sub
call
mov
in
fidivr
inc
adc
mov
push
cwde
das
ja
pop
push
add
jnp
ds
cdq
mov
call
icebp
push
dec
add
test
imul
sbb
cmps
pusha
mov
dec
inc
jnp
pop
rcr
leave
sbb
lea
loope
das
int3
out
int3
cs
inc
xchg
mov
mov
lds
(bad)
frstor
rol
push
adc
jg
movs
repnz
jge
and
retf
outs
mov
dec
je
and
mov
sbb
jecxz
push
mov
rol
and
adc
cs
(bad)
mov
retf
push
dec
pop
addr16
mov
dec
sar
das
jno
inc
or
(bad)
mov
mov
cld
or
or
mov
jmp
fldcw
fisub
fnstenv
xor
pop
add
in
enter
cmp
push
add
gs
ror
test
adc
mov
shl
cli
aas
xchg
inc
push
lahf
adc
int
daa
aad
xor
sbb
lods
std
jne
mov
or
inc
or
or
xchg
pop
fbld
addr16
out
mov
imul
jge
fidiv
shr
mov
jmp
fistp
xor
mov
cmps
ror
repnz
out
fsub
dec
mov
hlt
jle
sbb
lods
and
loope
inc
mov
sub
idiv
add
sub
(bad)
push
mov
leave
mov
mov
inc
xchg
loope
push
dec
pop
fs
mov
je
dec
ret
hlt
inc
ja
mov
jmp
jmp
out
inc
stos
inc
pop
xor
mov
test
in
pushf
dec
dec
sub
push
mov
push
(bad)
fimul
outs
stos
rcr
xor
or
cmp
es
mul
adc
push
out
(bad)
xor
gs
pusha
xor
aam
aad
stos
movs
imul
xchg
stc
cli
mov
stc
test
push
mov
xchg
sub
xchg
aas
xchg
adc
push
cmp
lods
test
xor
push
mov
std
xor
adc
pusha
outs
(bad)
sbb
jmp
xor
mov
ret
test
mov
pop
jmp
push
pop
jp
data16
rol
test
not
push
cmp
loope
mov
lds
sub
jne
popa
jnp
pop
arpl
ins
ins
cmps
ds
mov
retf
mov
fbstp
lods
mov
shl
inc
inc
cmc
pop
int3
loop
sbb
scas
xchg
hlt
jmp
xchg
outs
cmp
inc
mov
shl
sub
mov
loope
cmp
jge
and
(bad)
jbe
mov
addr16
adc
lahf
pop
adc
xchg
mov
scas
dec
pop
or
paddq
push
adc
xchg
adc
lock
cmp
and
in
cs
pop
jle
loop
test
daa
sub
push
in
fwait
and
call
enter
ja
mov
cli
push
loop
cmps
cmp
or
dec
popa
jp
pop
push
dec
jecxz
push
and
or
cs
cmp
dec
dec
sbb
sub
stos
cmp
pop
aas
ins
ss
pop
add
fs
adc
test
imul
hlt
jno
xchg
loope
in
arpl
fwait
xchg
in
mov
aas
imul
push
xchg
push
repz
xor
js
mov
cmc
(bad)
push
add
xlat
clc
cs
test
and
push
push
gs
push
mov
clc
lods
imul
(bad)
mov
idiv
mov
je
and
and
popa
mov
icebp
push
psllq
sbb
mov
retf
sahf
add
inc
fbstp
jl
icebp
jns
dec
(bad)
fistp
gs
movs
mov
mov
sbb
and
adc
shr
out
add
inc
mov
xchg
push
mov
pop
dec
push
mov
sbb
cdq
sub
adc
mov
call
(bad)
(bad)
pop
stos
cmp
or
mov
outs
jmp
aas
iret
test
add
mov
popf
add
jg
fistp
daa
jns
inc
adc
mov
ret
lods
xchg
enter
add
cmps
xabort
mov
sub
add
mov
out
mov
(bad)
mov
push
das
xor
shl
jns
fcom
stc
xor
lea
fld
lods
scas
xor
lock
in
in
dec
xor
xchg
dec
mov
sub
or
mov
or
cmp
fisubr
sub
push
pop
mov
mov
hlt
jae
sbb
ror
pop
nop
sti
xchg
cs
dec
fisubr
out
xchg
out
sub
dec
scas
pusha
dec
mov
cmp
cmc
xchg
push
adc
xchg
enter
mov
aas
mov
daa
call
ins
cwde
xchg
pusha
push
cmc
call
gs
jle
pushf
fmul
dec
cmc
gs
test
cmp
adc
int
cwde
in
fld
mov
dec
mov
xor
dec
imul
dec
leave
test
out
jg
addr16
cmp
pop
adc
aad
xor
mov
xlat
mov
push
inc
push
push
loop
cmp
xor
inc
pop
xor
popf
in
sub
int3
hlt
and
jg
inc
std
mov
dec
mov
jae
call
pop
adc
or
sbb
xchg
push
inc
retf
mov
adc
adc
xchg
jb
xchg
repnz
sub
loop
or
xor
imul
scas
out
push
mov
mov
in
sbb
mov
stc
push
jecxz
dec
mov
mov
adc
sub
mov
and
jne
push
repnz
sub
mov
and
cs
into
js
neg
ficomp
ret
dec
push
add
mov
sbb
jecxz
mov
mul
jp
mov
mov
dec
(bad)
fsubrp
or
cmp
lea
cmp
pop
test
dec
add
jecxz
cwde
pop
loope
xchg
cwde
fdiv
movs
cwde
jmp
cld
adc
hlt
sub
daa
stos
jns
pop
test
jle
cmp
and
pop
fdiv
mov
call
or
mov
jbe
or
add
pop
popa
xchg
jns
sar
mov
fnstcw
mov
lea
sahf
in
pop
cwde
pop
out
jge
dec
(bad)
pop
cmp
mov
mov
xor
add
retf
les
or
int
mov
int
in
(bad)
aad
popf
retf
sub
movs
aam
fcomp
inc
xlat
sub
repz
mov
ror
les
jmp
mov
jno
les
mov
xlat
hlt
cmp
shl
jns
loope
arpl
lods
ins
push
addr16
cmp
push
imul
bound
xchg
add
and
pushf
adc
mov
pop
inc
les
or
lea
test
ror
in
xor
xchg
jg
dec
stc
js
xor
inc
mov
test
mov
(bad)
mov
loopne
push
sti
sahf
xchg
js
jae
or
call
jbe
xchg
scas
adc
and
mov
cmp
popf
and
jae
adc
push
test
xor
enter
push
jnp
ins
into
cmps
pop
test
ror
inc
idiv
psubsw
xor
(bad)
std
dec
js
in
pop
sahf
and
sub
imul
inc
pop
rep
cmps
inc
mov
xor
ins
mov
jmp
cmps
sub
popf
inc
int3
sbb
xor
cmp
lods
ins
pop
push
repz
xchg
movs
mov
lds
loop
mov
xchg
push
xor
ins
mul
cmp
or
pop
pop
push
out
retf
add
inc
inc
cmps
in
pop
rol
popa
addr16
fbstp
popa
mov
enter
mov
loopne
pop
push
mov
or
and
adc
ja
pop
mov
cmps
and
pop
xor
pop
test
push
dec
adc
mov
ret
mul
inc
loopne
mov
sub
ror
daa
jmp
cmp
xchg
fdiv
imul
bnd
push
jno
cli
cli
jae
pop
imul
mov
mov
xor
fstp
xor
cmps
xor
mov
push
sar
aad
xlat
arpl
and
movs
jp
cmc
stos
out
pop
(bad)
rcr
adc
xchg
(bad)
js
stos
cmc
push
pop
fmul
cmc
push
push
and
or
lds
je
je
pushf
lea
xor
or
les
sbb
in
fwait
icebp
stc
cmp
add
enter
adc
add
add
push
jge
xchg
mov
test
jmp
mov
push
psubq
and
pop
cmp
sub
aaa
ins
or
arpl
add
clc
and
adc
pop
mov
daa
xor
jb
arpl
jb
fadd
ins
mov
mov
test
test
or
retf
add
push
mov
call
sbb
and
test
jb
sub
jne
arpl
pop
dec
imul
out
imul
adc
adc
pop
cmp
in
push
jmp
mov
xchg
es
push
mov
cmp
imul
cmp
dec
gs
jmp
xchg
dec
and
sub
sub
out
jo
outs
fwait
cmp
out
and
popa
aam
sbb
sbb
sahf
cli
jp
and
sbb
ret
adc
inc
pop
stos
jns
xchg
sub
mov
xor
jge
jne
js
adc
xchg
mov
repz
test
sbb
mov
les
movs
daa
sbb
push
xchg
movs
clc
in
fiadd
sbb
aam
sbb
adc
xor
or
jecxz
sub
xchg
aam
mov
les
push
xchg
push
popf
cmp
sti
sbb
xchg
sbb
mov
jmp
lds
mov
mov
cmp
sbb
icebp
(bad)
push
fmul
xchg
push
ins
pop
xchg
lock
pop
xchg
(bad)
aaa
aas
inc
jle
daa
ins
sbb
or
ror
jg
inc
adc
mov
jnp
cld
sub
ins
push
pop
sub
sbb
cmp
inc
shl
add
test
je
and
ret
std
and
ss
and
loopne
mov
aaa
xchg
shr
cmp
push
and
push
int
out
and
outs
dec
and
shl
jmp
idiv
mov
rcr
fadd
repnz
mov
les
inc
inc
out
jmp
test
mov
loope
enter
test
pop
imul
mov
(bad)
call
pusha
cdq
add
xchg
lods
cmp
xor
movs
push
shr
inc
rcr
std
push
jmp
fidivr
mov
int
inc
int
daa
lods
pop
add
xchg
cmps
push
xor
push
and
mov
popa
aas
fbstp
sub
out
xlat
dec
mov
jge
test
popf
cmc
shl
test
and
sbb
xor
push
pop
loopne
imul
fld
and
out
mov
jl
cmp
clc
xchg
jmp
cmp
inc
fimul
rcl
add
xchg
test
jmp
dec
xor
imul
pop
test
out
mov
cmc
inc
mov
sub
gs
out
dec
repz
sbb
pop
cmps
lods
adc
push
sbb
dec
jne
xchg
clc
pop
or
int
das
push
jmp
jg
mov
scas
lods
mov
popa
(bad)
mov
cwde
or
xor
test
pop
mov
mov
in
fwait
dec
inc
add
inc
inc
add
add
push
test
je
pop
adc
call
iret
push
jo
ret
xchg
ss
sub
mov
pop
shl
scas
cld
movs
jno
add
pop
cmp
out
push
ss
mov
scas
(bad)
fstp
lock
mov
inc
xchg
jb
xor
aaa
outs
dec
outs
in
lea
adc
call
frstor
adc
cli
daa
and
cmp
sbb
fnstsw
jno
test
icebp
retf
cmc
addr16
lahf
ret
into
cmp
test
(bad)
cmp
shr
push
cmp
retf
hlt
and
jnp
mov
and
sub
stc
pop
xchg
movs
mov
fmulp
test
adc
adc
sahf
hlt
xor
xchg
adc
lods
and
cmp
(bad)
icebp
rcr
test
cmps
fimul
jns
push
mov
jecxz
retf
push
loopne
pop
call
jl
fidivr
inc
fwait
jno
sbb
mov
sti
sbb
xchg
pop
je
test
adc
retf
inc
mov
inc
mov
jg
pusha
push
or
pop
(bad)
(bad)
jae
and
or
jg
jo
lods
push
ss
retf
stc
inc
into
out
pop
xchg
mov
xor
push
mov
dec
shl
jmp
dec
lds
mov
add
dec
(bad)
sbb
xchg
jne
mov
push
mov
sub
not
sbb
(bad)
popf
inc
adc
sahf
in
pop
push
dec
jge
pop
stc
add
popa
nop
lahf
hlt
ret
inc
popa
adc
mov
inc
aam
adc
inc
sub
fbld
pop
enter
cmp
sbb
or
sbb
dec
and
mov
inc
(bad)
jp
push
push
or
jge
nop
fmul
ret
pop
into
add
gs
xor
mov
jmp
lock
adc
daa
call
dec
cmp
popa
retf
std
test
into
in
pop
movs
fwait
(bad)
mov
mov
sti
jb
lds
or
dec
aaa
(bad)
mov
sar
call
jnp
ja
movs
movs
dec
jne
fidivr
xchg
push
adc
daa
xor
jno
jno
test
pop
cmps
in
jecxz
push
(bad)
cmps
mov
loop
cmp
test
dec
ss
jg
loop
les
call
fcom
or
out
jle
popf
xor
icebp
jmp
jp
jno
retf
js
jge
nop
leave
dec
xchg
int
inc
shl
xchg
shl
daa
push
jno
pop
jg
arpl
xchg
xchg
aas
or
xor
fsubr
mov
(bad)
dec
push
aas
fcom
mov
and
fisubr
pop
jecxz
loopne
std
cmp
lea
inc
or
hlt
hlt
mov
xchg
cdq
inc
jmp
or
push
sub
and
fst
call
clc
push
xchg
jo
ret
cwde
cmp
dec
(bad)
jecxz
xor
stos
mov
inc
cmps
and
xchg
daa
idiv
(bad)
push
mov
and
xchg
lea
xor
inc
call
clc
or
mov
fldcw
jnp
cmp
and
sbb
mov
or
xlat
pop
add
stc
icebp
inc
jnp
mov
mov
pusha
es
int3
jns
stos
push
mov
sahf
push
movs
das
fbstp
push
shl
inc
xor
aas
scas
dec
cwde
add
sbb
(bad)
mov
mov
inc
cmps
call
fdiv
clc
jb
jb
or
mov
test
jmp
sub
std
(bad)
jge
mov
or
test
mov
sti
into
ins
out
push
dec
cmc
dec
addr16
sub
and
rcl
push
push
add
or
pop
mov
xor
shr
xchg
sub
xchg
sbb
retf
mov
cmc
shl
in
ret
loop
sbb
adc
call
test
idiv
cmps
lds
lods
jle
inc
lahf
fisub
adc
ja
mov
shl
jg
sub
mov
adc
ins
pop
pop
xchg
sbb
jne
stc
mov
setnp
outs
inc
aad
jmp
fidivr
cwde
mov
cld
pop
cdq
fucomp
pop
mov
(bad)
rol
shr
cmp
sbb
xchg
bound
inc
pop
pop
mov
mov
in
or
inc
push
pusha
daa
xchg
jno
push
cld
(bad)
fwait
ja
mov
and
mov
push
cmps
xchg
gs
sbb
dec
sbb
add
inc
xor
cmp
cli
cmp
mov
loope
mov
add
nop
in
stc
sbb
inc
xor
in
cmp
repz
push
pop
repnz
dec
stos
inc
stc
popf
mov
pop
(bad)
in
jmp
in
out
cmp
jmp
ins
cdq
xor
sub
sbb
test
loopne
xchg
pop
or
or
das
pop
xor
cmps
jne
xchg
mov
lds
mov
(bad)
icebp
movs
jmp
cmps
add
push
iret
je
cmp
in
sbb
les
sub
mov
dec
sub
or
xchg
xchg
sub
xor
mov
out
pop
or
cmp
jl
mov
lea
mov
xchg
clc
outs
cmps
cmp
mov
mov
mov
ins
int3
sbb
jecxz
sub
arpl
test
sub
push
jo
scas
gs
rcl
mov
mov
idiv
fwait
(bad)
mov
sbb
jo
test
(bad)
in
stos
mov
movs
rcr
jmp
push
jno
mov
mov
shr
push
shr
js
adc
(bad)
jle
mov
fwait
inc
cmps
imul
pop
adc
jmp
sar
sbb
mov
pop
fsubr
fld
scas
xchg
push
mov
popf
jg
mov
sub
popf
and
adc
mov
sub
loop
outs
push
imul
cwde
sbb
push
and
cmp
add
cmp
lds
sbb
push
cmp
push
test
mov
xchg
xchg
lock
les
mov
push
jge
push
sbb
js
jmp
mov
int3
(bad)
pusha
xchg
sti
(bad)
xchg
leave
jo
jle
inc
push
(bad)
mov
sbb
mov
and
js
mov
mov
sbb
scas
in
out
jecxz
xchg
cmp
mov
xor
icebp
lock
test
pop
sbb
mov
mov
fadd
sahf
cs
mov
retf
retf
sti
cld
xchg
into
dec
mov
popf
fist
xor
sbb
mov
call
in
sbb
xchg
mov
jecxz
loop
retf
data16
std
leave
inc
xchg
mov
adc
xor
jecxz
ror
adc
(bad)
(bad)
cld
popf
ja
mov
outs
xchg
sub
fdivr
shr
call
push
push
shl
test
jmp
loop
fldcw
adc
mov
push
int3
and
mov
push
call
inc
call
sbb
ins
aam
jne
push
sub
pushf
mov
adc
lahf
adc
jmp
mov
sub
cmc
rol
sub
out
jae
mov
in
inc
xor
pop
sbb
int
cld
cld
mov
call
bound
repz
and
into
jecxz
xchg
sbb
fbstp
inc
dec
imul
(bad)
inc
popa
cmp
aam
jo
jl
jbe
ss
jmp
mov
scas
mov
or
ja
cs
shr
addr16
(bad)
nop
jae
jnp
mov
lahf
push
add
mov
mov
outs
sahf
aad
sub
sub
xchg
pop
nop
in
mov
popa
loopne
mov
in
mov
jecxz
add
push
pop
in
sbb
test
push
je
fisub
ins
xor
dec
icebp
sub
sub
cmp
out
ins
ja
xchg
lea
dec
xchg
push
popa
ds
mov
pop
dec
sub
js
cmp
outs
xchg
pop
mov
mov
sbb
push
sti
es
or
imul
cld
mov
sti
mov
mov
data16
call
outs
(bad)
outs
fstp
movs
mov
pop
aas
movs
pop
enter
and
adc
push
push
stc
sub
lods
mov
ss
push
test
xchg
push
fstp
xchg
ins
inc
retf
or
push
fs
inc
test
in
dec
xor
cli
push
xor
in
xchg
push
call
pop
popa
dec
sbb
jbe
pop
cmp
mov
loopne
xor
cmp
add
daa
bound
data16
cmp
sti
mov
dec
(bad)
imul
bt
or
daa
mov
mov
jp
(bad)
cmp
add
call
jo
lods
fisubr
mov
fist
and
dec
cmps
add
cmp
dec
mov
sar
jnp
mov
lods
scas
(bad)
and
mov
ret
(bad)
clc
inc
cmp
mov
ds
dec
and
cmp
mov
in
add
jmp
imul
repz
aas
loopne
dec
inc
cmp
push
mov
mov
sub
retf
cmps
aas
mov
lods
fwait
xchg
arpl
cwde
lods
call
add
popf
jmp
nop
out
xchg
push
xchg
xor
xor
fild
pop
mov
sbb
adc
add
or
cmps
out
xchg
ffreep
cmp
push
push
mov
mov
jo
or
mov
fisttp
xchg
fadd
fisub
mov
pop
lods
jbe
jmp
or
fimul
xor
imul
adc
inc
das
pop
mov
in
and
or
push
lock
pop
inc
xor
add
leave
iret
je
xor
dec
loop
dec
in
or
int
pop
ins
loope
inc
and
adc
mov
push
and
jb
es
in
sbb
mov
lock
sbb
dec
data16
leave
dec
push
mov
mov
icebp
lods
je
jg
dec
lea
inc
mov
add
std
sub
out
lock
call
jle
xchg
in
push
inc
inc
fisub
sbb
in
sti
fsub
jne
dec
mov
out
sbb
fcmovbe
not
or
mov
or
jecxz
out
(bad)
out
pushf
jl
adc
fld
ret
out
ja
add
cmp
adc
mov
sbb
mov
adc
imul
adc
sahf
push
call
xchg
dec
or
arpl
mov
retf
aaa
xchg
mul
mov
mul
sbb
std
inc
push
stos
aas
cmc
jmp
xor
not
bound
movs
mov
loopne
inc
jp
xchg
pop
xor
or
repz
enter
push
outs
jp
inc
into
outs
mov
repz
and
sub
xrelease
cmp
push
xchg
mov
push
inc
sub
lock
cmps
or
jae
scas
icebp
gs
push
mov
and
test
adc
call
into
sub
inc
xchg
in
mov
sub
stos
retf
pop
lods
mov
add
popf
sahf
cmp
xor
sbb
in
mov
sub
mov
cdq
xlat
imul
or
sbb
aad
dec
xchg
popf
icebp
cmc
daa
jg
shl
xchg
xlat
rcr
inc
dec
jecxz
jmp
cmp
cmp
sub
mov
retf
ja
mov
loope
call
js
mov
push
paddusb
cmp
test
test
sbb
ja
fcom
fild
pop
adc
icebp
push
int3
adc
xor
push
hlt
mov
sub
jne
xor
adc
daa
in
sub
test
jge
repnz
iret
dec
bound
xchg
pop
push
jmp
mov
mov
fidiv
lods
js
and
movs
mov
call
xchg
in
outs
std
pop
or
and
call
cdq
add
cli
or
mov
mov
imul
stc
mov
cli
xchg
cdq
addr16
ja
in
xchg
psubq
fnstenv
rcr
inc
sti
sbb
cwde
mov
sbb
push
add
repnz
bound
mov
aaa
stos
rcl
mov
adc
jl
push
add
push
les
mov
stos
inc
les
and
cmp
out
stos
sub
mov
cmp
ins
inc
inc
mov
inc
or
dec
icebp
sbb
mov
mov
fdiv
loopne
cmp
(bad)
jae
push
dec
or
aaa
popa
enter
test
pusha
mov
cwde
push
int3
xchg
clc
sbb
pop
mov
cmp
fcom
sub
cmp
pop
sti
fbld
stos
sbb
push
cmc
add
jp
pop
pop
sbb
add
add
mov
test
fcom
dec
enter
mov
mov
mov
sbb
das
mov
mov
shl
sbb
fcom
or
movs
cmc
out
in
pop
out
dec
mov
mov
mov
mov
mov
mov
mov
loope
hlt
das
inc
mov
xchg
test
test
outs
test
les
sahf
sub
(bad)
cmps
mov
std
(bad)
cld
sub
xchg
sti
jns
mov
dec
out
inc
paddsb
std
xor
test
pusha
push
jnp
mov
cmp
inc
movs
jo
push
test
adc
sbb
and
adc
repnz
xor
xor
pop
iret
add
push
inc
sub
fwait
mov
movs
or
and
dec
icebp
repz
mov
scas
es
stos
adc
mov
test
jl
hlt
and
or
mov
mov
xlat
push
hlt
jnp
cmp
or
pop
aam
cmc
lods
xor
test
adc
xchg
test
loopne
test
int3
add
stos
xor
lock
es
xchg
popf
xchg
movs
out
mov
xchg
clc
fisub
(bad)
sub
cli
cdq
mov
loopne
push
xchg
pop
mov
pop
dec
dec
(bad)
dec
repz
push
jg
sub
in
lea
fld
mov
ins
jo
(bad)
imul
cmc
das
xchg
inc
in
adc
xchg
push
xor
int
jmp
loop
dec
adc
push
rcl
adc
cmp
sbb
push
into
mov
call
pop
nop
mov
mov
es
arpl
stc
jmp
loop
(bad)
(bad)
pusha
adc
xchg
cmc
jmp
mov
ins
aas
stos
cmp
nop
cmp
jecxz
pop
and
adc
fwait
sbb
int
stos
and
and
dec
xor
push
or
pop
mov
pop
push
cli
pop
dec
test
jecxz
cmp
shr
movs
jl
test
mov
fidivr
cwde
movs
xor
popa
mov
fs
scas
fs
and
fistp
in
frstor
(bad)
or
xchg
out
push
mov
rcr
xchg
jb
cmc
cmps
outs
pop
cmc
jmp
ret
adc
jp
js
loop
arpl
push
stc
pushf
cmp
dec
lds
jmp
repz
push
enter
addr16
jl
jle
pop
(bad)
mov
sar
dec
test
add
lods
push
mov
fwait
xor
mov
call
aam
mov
mov
shrd
push
push
jnp
xor
daa
test
mov
xor
loopne
retf
(bad)
je
retf
in
dec
pop
les
retf
jmp
jg
sub
adc
in
gs
sub
loopne
rcr
sbb
adc
jmp
in
fidivr
jns
jae
or
pop
mov
inc
cmp
inc
outs
mov
push
fcomp
fdivr
dec
jne
inc
in
les
xchg
pushf
fwait
push
test
cmp
pop
test
aaa
xor
xor
xchg
sub
dec
scas
pop
inc
ret
(bad)
ins
stos
mov
aam
mov
pop
fidivr
dec
xor
ds
out
inc
inc
fsubr
in
ds
daa
jb
pushf
pop
jb
jbe
imul
push
adc
movs
jmp
mov
fs
js
(bad)
call
pop
sbb
xchg
and
rol
mov
mov
and
loop
push
jbe
xchg
int
call
ds
repnz
push
jle
(bad)
lods
nop
icebp
xchg
ins
mov
push
aam
enter
add
cmp
aad
ret
icebp
mov
xchg
xchg
add
fadd
je
fcom
aaa
and
mov
add
mov
stc
sbb
inc
sub
mov
or
push
cmps
jle
inc
test
sbb
add
sbb
out
sbb
dec
lahf
mov
imul
push
mov
mov
dec
shl
das
pop
dec
lds
lea
inc
xchg
ins
cwde
add
aad
xchg
cmp
fistp
mov
mov
dec
and
sti
scas
mov
imul
add
pop
dec
adc
out
in
inc
dec
push
ret
test
in
aas
stos
sbb
ror
dec
sti
daa
icebp
xchg
sahf
popf
mov
test
shl
jns
pusha
cmp
(bad)
or
bound
jl
sbb
jge
jo
(bad)
call
mov
leave
das
sbb
mov
addr16
cmp
jge
imul
adc
aaa
shr
push
cmp
or
mov
mov
test
aas
mov
fst
pusha
popa
push
mov
je
jge
sub
push
pop
xchg
pop
adc
mov
addr16
pop
bound
loope
inc
mov
imul
push
xor
pop
sub
cmp
xchg
mov
out
popf
mov
xor
std
std
repnz
xchg
scas
rol
mov
sub
and
ret
jmp
dec
mov
mov
test
jns
call
mov
xchg
xchg
imul
or
ror
add
adc
aam
mov
inc
jns
xor
sub
inc
enter
adc
cld
jecxz
jp
fwait
(bad)
gs
cmp
sar
sub
jne
push
cmp
sbb
sbb
(bad)
and
xlat
or
cmc
stos
xchg
cmp
mov
sub
mov
pop
fwait
mov
imul
out
ins
pop
out
cli
mov
loopne
out
movs
cld
xchg
call
mov
xchg
pop
movs
jp
xchg
sub
sub
dec
ins
fcom
adc
pop
pop
mov
add
cmp
jg
push
pushf
fwait
test
div
fidiv
jo
mov
les
inc
in
sub
out
dec
adc
mov
neg
mov
pusha
fnsetpm(287
sub
sbb
cs
add
out
sub
push
mov
inc
retf
xchg
rcl
stos
and
mov
mov
sbb
call
out
jmp
push
jecxz
dec
mov
pop
add
xchg
fbld
iret
pminsw
lahf
bound
repnz
and
popf
or
bound
inc
ins
into
outs
(bad)
mov
cmp
ins
retf
cmp
add
mov
jle
fldcw
ins
cld
dec
sub
jecxz
rcl
add
cs
div
nop
mov
cmp
leave
popf
clc
into
repz
cmp
inc
adc
gs
fimul
clc
fnstenv
xchg
aaa
mov
into
jmp
pop
jmp
sub
cmp
mov
mov
pusha
int
mov
lock
dec
fs
iret
imul
int
jb
or
cdq
cmp
cmps
movs
xor
sub
or
sub
push
das
std
mov
pop
int3
sbb
mov
fdiv
xchg
scas
in
add
or
sub
call
pusha
or
aas
mov
xchg
jae
xchg
push
test
aas
test
cli
addr16
cld
cdq
mov
scas
mov
or
iret
(bad)
push
and
adc
cmp
fs
or
pop
fisub
das
mov
or
data16
inc
pop
pop
xchg
int3
mov
jmp
ins
push
jae
push
xchg
ret
xchg
int
fs
popf
mov
and
xchg
psubsw
inc
(bad)
call
xchg
arpl
xor
(bad)
div
xor
or
lahf
rcl
into
jecxz
data16
push
rcr
fmul
sti
xchg
dec
mov
xchg
xchg
mov
daa
fwait
bound
xor
pop
imul
hlt
inc
ret
fidivr
popf
pop
cmp
sbb
rcr
cmp
fcomi
pop
pop
pop
add
scas
inc
jno
push
test
jne
inc
xor
mov
mov
add
ror
or
pushf
xor
jl
dec
xchg
jne
cmp
jno
mov
xchg
(bad)
pop
fwait
jbe
call
sbb
mov
jmp
call
jmp
shl
sbb
jecxz
fldcw
sti
mov
fwait
push
cdq
xor
or
iret
jne
fisubr
push
jmp
xchg
xchg
js
sub
cmps
mov
stos
push
xor
pusha
adc
fwait
cwde
add
lock
cmp
imul
cmp
and
fldlg2
push
(bad)
sahf
or
push
push
dec
sub
and
cmp
jae
es
dec
(bad)
out
inc
cmp
ins
loopne
jae
adc
mov
sbb
xchg
lea
enter
adc
cmc
lock
inc
ds
movs
jbe
scas
enter
xchg
iret
bound
jecxz
cmps
add
fcmovu
mov
imul
clc
add
into
pushf
mov
push
push
lods
sub
cmps
aam
je
bound
out
cmp
cmp
jbe
les
mov
nop
sub
aaa
xchg
mov
adc
mov
mov
ja
stos
mov
mov
das
or
neg
nop
sub
int3
stos
cmp
jno
jnp
mov
xlat
pop
dec
sub
sub
sub
cmp
(bad)
fcmovnu
push
rol
call
add
popa
ins
and
or
stos
lds
ins
and
call
jbe
push
xlat
pushf
call
into
mov
jmp
lds
adc
pop
mov
xchg
jb
add
sub
jo
mov
dec
rcl
shl
mov
lods
lds
xchg
pop
dec
jbe
mov
xchg
bound
sub
stc
arpl
test
cmp
ror
sub
lods
or
sub
in
sub
cmp
and
fcomp
inc
xchg
out
push
pop
retf
dec
push
sub
jg
and
fcomp
xchg
aas
add
imul
sub
in
fisttp
out
outs
jge
mov
int
jb
adc
int3
push
push
inc
xchg
fs
test
or
pop
jmp
int3
call
push
cmp
jmp
mov
pop
inc
xlat
es
shr
in
call
in
mov
add
leave
inc
jle
push
push
lea
cmp
ins
daa
sbb
pop
add
mov
jp
xor
push
pop
loopne
rcr
jo
jno
cmp
pop
retf
(bad)
add
jae
fadd
dec
jne
loop
cli
mov
out
xor
cld
sub
and
jle
test
push
(bad)
dec
jle
add
mov
les
sahf
mov
out
fmul
mov
pop
xchg
pop
mov
idiv
jge
mov
add
stos
mov
call
mov
dec
and
int3
fdivr
mov
fmul
mov
cmp
sub
cmp
add
adc
inc
and
es
sub
jmp
jle
inc
icebp
dec
outs
out
jg
push
or
nop
push
lea
and
mov
bound
sub
enter
movs
mov
jno
in
or
mov
mov
jb
cmp
jne
pop
and
mov
push
mov
xchg
dec
push
xor
mov
std
lds
pop
sbb
jg
inc
add
mov
cmp
mov
sub
or
xchg
pop
cmp
int
mov
or
es
ror
sti
dec
sbb
rcr
jl
dec
arpl
loopne
lods
push
fcomp
aam
mov
leave
pop
fistp
xor
cmp
mov
add
mov
in
sahf
xor
arpl
out
cmp
adc
jns
mov
or
loopne
push
xor
sbb
pop
pop
mov
pusha
jno
sub
dec
push
pop
mov
inc
adc
ins
retf
inc
dec
(bad)
push
mov
cli
sbb
sbb
xor
mov
xor
jae
ror
push
mov
dec
aas
xchg
jmp
pop
cmp
fadd
retf
(bad)
mov
push
fwait
mov
mov
pop
cmp
pop
outs
jne
gs
mov
ror
sti
mov
movs
out
pop
push
mov
or
das
sub
ja
xlat
jl
cmp
cli
or
repz
mov
add
mov
movs
test
push
nop
movs
dec
adc
cmp
sti
ins
(bad)
sub
div
lds
loope
cmp
jmp
ret
scas
arpl
xchg
push
xchg
je
stos
inc
jno
xor
mov
div
pop
stos
lods
out
shr
int
outs
add
arpl
out
push
int3
adc
repz
ins
push
aaa
mov
push
jnp
pushf
sbb
jmp
les
dec
(bad)
psubd
cmp
addr16
mov
mov
dec
jge
hlt
and
push
pop
imul
sbb
mov
xor
mov
pop
adc
add
out
int
dec
hlt
and
fdivr
sbb
dec
leave
dec
aaa
push
out
(bad)
in
lea
sbb
jp
mov
mov
lea
jecxz
in
mov
ss
(bad)
cdq
xor
leave
stos
ja
xor
bound
popf
cmc
call
and
shl
xchg
test
push
jl
scas
add
call
icebp
(bad)
pop
inc
pop
pop
jb
aam
xchg
xor
outs
data16
ins
mov
cld
sbb
jge
push
pusha
shl
mov
mov
call
shl
sub
popa
xchg
xchg
dec
test
sub
fisubr
or
bound
mul
je
jbe
and
jo
pop
mov
js
les
xor
sub
cmp
fwait
cmc
jb
cmc
pop
stos
xchg
and
or
(bad)
cmps
pop
mov
xchg
fsubr
adc
dec
pop
dec
gs
std
inc
sar
pusha
test
cmc
or
imul
xchg
dec
mov
outs
xchg
mov
or
adc
out
adc
nop
dec
js
jle
sub
hlt
scas
(bad)
cs
push
dec
icebp
xchg
fstp
call
add
lea
mov
push
xchg
xor
mov
dec
ja
mov
pushf
xor
ins
retf
(bad)
test
fild
mov
mov
test
jb
or
and
xor
and
idiv
pop
in
cmp
addr16
cdq
xor
cmp
or
movs
shl
mov
dec
div
mov
xor
sub
out
and
add
imul
pop
push
xchg
xor
ret
nop
(bad)
imul
aaa
mov
scas
jb
sahf
xor
dec
ins
fnstenv
fbld
fstp
call
jne
inc
push
test
sub
loopne
lods
or
push
jns
mov
and
push
and
fs
hlt
les
cmp
or
push
push
enter
or
js
daa
mov
inc
cmp
xchg
out
ss
jns
push
xor
sub
arpl
sbb
push
inc
dec
je
xchg
xor
push
xor
ja
arpl
adc
and
push
xchg
add
push
fldenv
and
xchg
test
cmps
inc
stc
sbb
clc
(bad)
push
movs
(bad)
(bad)
pop
pop
stos
jge
jge
(bad)
in
fcmovbe
xor
mov
pop
fstp
and
aam
scas
test
lods
push
sub
inc
sub
enter
dec
popf
ins
pop
sbb
nop
mov
and
push
lock
jge
pop
aas
sbb
mov
pop
data16
mov
aas
ffreep
getsec
xor
aam
ja
jae
pop
pusha
push
push
push
cmp
or
outs
test
fldenv
pop
xchg
repnz
sub
fidiv
jbe
out
addr16
pushf
jmp
test
aad
and
inc
mov
shufps
add
ret
(bad)
loope
test
push
aad
xor
hlt
mov
jecxz
ds
inc
mov
ret
xor
dec
dec
dec
mov
sbb
scas
imul
pop
pop
rcr
push
repz
adc
(bad)
jg
dec
pop
inc
out
and
mov
paddw
mov
ss
cmp
sub
push
cwde
(bad)
mov
cmp
(bad)
fdivp
mov
cmp
add
repz
push
adc
js
out
push
adc
loopne
(bad)
jo
outs
leave
or
test
lods
jg
leave
or
add
cmp
sub
pop
cwde
pop
js
cmps
and
xchg
cld
pop
(bad)
sbb
mov
call
push
les
(bad)
push
test
xor
je
sbb
lock
hlt
dec
ss
or
push
cmp
in
fnstsw
call
xor
xchg
js
or
mov
lea
cmp
jge
gs
sub
test
test
retf
into
or
inc
mov
and
mov
and
shl
(bad)
sub
pushf
lock
adc
adc
test
out
jmp
xor
push
push
jmp
add
inc
mov
cmps
out
lds
ss
pop
or
jle
sub
inc
test
xchg
ins
xlat
loopne
ins
push
add
mov
jns
adc
mov
xchg
pop
and
dec
call
fwait
mov
lea
movs
iret
in
or
mov
sub
mov
fbld
push
into
push
adc
pop
popf
ret
jmp
mov
jbe
mov
or
pop
mov
and
sbb
clc
fisttp
(bad)
mov
pop
mov
push
cdq
or
cmp
pop
cwde
or
mov
cmp
cmp
jl
shr
imul
into
push
in
in
or
mov
es
push
leave
and
clc
pop
fisubr
stos
dec
fbld
lahf
fadd
aaa
test
pusha
icebp
cdq
cmp
push
xor
inc
xchg
xchg
stos
push
rcr
(bad)
dec
dec
sahf
mov
retf
cmp
pop
mov
mov
cmp
adc
add
mov
ror
stos
and
adc
push
xor
scas
ins
jg
pop
hlt
ret
dec
test
push
cmp
stos
icebp
jecxz
mov
inc
jbe
pushf
ret
or
pop
outs
fwait
jmp
mov
and
inc
enter
shl
cli
cmps
inc
cmp
or
test
mov
inc
pop
sbb
mov
and
xor
les
or
je
sbb
pop
pop
inc
and
lock
inc
mov
stc
mov
mov
push
sbb
xchg
outs
scas
ss
iret
pop
push
push
jle
xchg
jecxz
stc
psubw
xchg
jo
rol
mov
es
retf
in
sbb
inc
xchg
xchg
cs
or
jne
mov
pushf
add
fist
dec
mov
sub
sar
call
and
push
and
xlat
mov
mov
cmps
cwde
outs
ins
sti
retf
mov
adc
push
jmp
outs
push
or
cwde
mov
and
jmp
sbb
sbb
loopne
or
and
test
int
push
mov
sbb
enter
mov
fistp
mov
push
hlt
iret
sbb
inc
push
sub
sub
inc
sbb
cmp
aad
sahf
movs
add
adc
mov
retf
scas
sti
or
cmp
jg
pop
and
rcl
mov
add
adc
loop
rol
pop
lock
into
cmp
sub
or
or
loopne
movs
adc
dec
or
sub
movs
dec
lods
or
xor
addr16
jl
fstp
and
jp
adc
or
sbb
sar
cs
push
mov
sbb
shl
push
fsubr
test
mov
ins
mov
stc
or
cmp
aaa
(bad)
fwait
mov
fwait
push
into
addr16
aaa
pop
mov
leave
mov
lods
or
fiadd
or
mov
scas
inc
pusha
fmul
stos
loop
in
mov
add
sbb
and
cmp
(bad)
cmps
or
sub
cli
out
adc
xchg
lods
inc
mov
ins
int3
mov
call
stc
enter
mov
xor
cwde
inc
push
adc
retf
fst
inc
xchg
fsubr
loop
adc
in
icebp
movs
jge
mov
outs
lahf
mov
rol
fist
lods
jmp
fstp
aad
push
cmps
das
mov
and
fxtract
xor
inc
pop
pop
ror
sub
clc
aaa
leave
sti
xlat
daa
aaa
or
shl
lods
mov
aam
(bad)
bound
fistp
test
mov
cmp
pop
push
call
push
jl
imul
push
adc
retf
into
add
test
xchg
xchg
iret
sbb
scas
sbb
sahf
(bad)
cmp
inc
retf
aaa
xchg
aad
out
cmps
pop
adc
cmp
rep
shl
iret
push
xchg
outs
push
mov
aad
pushf
pop
fstp
cmp
les
lods
pop
jno
pop
mov
pop
pop
or
xor
xchg
stc
out
(bad)
cmp
imul
mov
fcmovnb
dec
in
dec
cmp
cmp
mov
xor
idiv
jle
mov
and
xchg
sbb
stos
mov
sar
push
in
dec
repz
add
repz
push
dec
imul
jb
inc
(bad)
jne
int
(bad)
cmp
js
inc
shr
mov
push
out
mov
out
xchg
repnz
mov
lds
outs
xlat
mov
inc
jmp
mov
pusha
adc
pop
dec
leave
out
clc
popf
mov
push
movs
fld
dec
and
mov
jecxz
jg
mov
icebp
and
in
or
ret
sub
cmp
stc
popa
cmp
sub
sub
loopne
sub
stos
je
fscale
jb
stos
(bad)
fidivr
jbe
adc
enter
mov
mov
aad
daa
inc
retf
ja
nop
add
jbe
out
push
or
sti
in
pushf
fidiv
jmp
and
mov
repz
fist
cmp
dec
gs
stc
aaa
sbb
movs
cmps
jle
ins
sbb
xchg
test
pop
jle
arpl
aad
mul
and
ja
mov
push
pop
cmp
mov
inc
sbb
xor
cli
inc
rcr
xchg
jbe
adc
push
repz
div
mov
dec
push
jg
ret
mov
and
cmp
or
push
add
(bad)
mov
xor
and
fidivr
out
mov
sub
ret
adc
push
push
fnstenv
and
mov
sbb
jnp
popa
push
data16
and
inc
imul
scas
cmp
mov
sbb
xor
test
sub
dec
or
pop
call
pop
ret
push
fcomp
jecxz
lds
mov
cmps
add
mov
sub
jge
xchg
xchg
xor
jb
lds
ins
lock
fisubr
sti
je
push
add
out
popf
sub
add
jnp
in
not
sbb
sar
cmps
aaa
les
shr
jge
mov
retf
mov
jmp
push
fsub
cmp
(bad)
and
pop
cmp
push
mov
in
pop
adc
cmps
retf
das
inc
cmp
adc
pop
sti
mov
and
jae
inc
jbe
(bad)
pushf
shl
jb
das
adc
ret
pop
jmp
jb
cmp
bound
(bad)
mov
cmp
out
(bad)
mov
sbb
ret
pop
jnp
mov
es
loope
inc
leave
push
push
mov
xchg
dec
std
and
xor
cld
(bad)
jge
sbb
cmp
(bad)
mov
ins
mov
xor
mov
mov
ds
dec
mov
inc
sbb
jl
sbb
imul
sbb
pushf
pop
jbe
sar
sub
std
aaa
es
sbb
xchg
test
jno
(bad)
retf
repz
and
adc
jno
sbb
mov
daa
loop
aas
push
xor
add
leave
nop
rcl
jne
mov
lahf
sbb
cmp
cmp
out
jne
fist
ror
xchg
test
xchg
stos
out
dec
and
inc
pop
pop
retf
jns
ret
dec
sbb
mov
arpl
mov
add
pop
sahf
adc
(bad)
das
mov
jp
out
mov
jae
fidivr
or
push
shr
xchg
nop
scas
jg
mov
inc
stos
or
stos
xchg
retf
push
mov
in
stos
repz
or
or
push
mov
cmp
pushf
adc
nop
pop
lds
inc
jmp
stos
push
dec
test
js
sub
jle
dec
xchg
dec
ds
ret
mov
jge
jg
ins
jno
xchg
rcr
inc
xor
cmp
sahf
xchg
out
in
add
addr16
push
xchg
cmp
mov
and
fisubr
ins
out
outs
and
out
es
sti
jb
xor
and
sub
cdq
es
pop
lds
cmp
mov
repz
xor
lods
inc
jne
cmp
mov
and
ret
arpl
jl
push
push
mov
sub
es
mov
bound
ja
ins
sbb
popa
pop
pop
jae
aam
lods
cs
cld
sub
xor
outs
test
adc
add
xchg
stc
xor
aad
cmp
loope
rcl
ds
cmp
push
nop
jo
add
fld
fs
out
jmp
sub
imul
push
inc
sar
add
jge
aaa
in
psubsw
add
pop
cwde
sti
or
stc
lock
sbb
leave
mov
mov
or
sahf
(bad)
sub
lea
addr16
xchg
addr16
jo
sbb
daa
js
nop
aas
inc
hlt
pop
stos
stc
popa
inc
xor
or
daa
and
push
loopne
retf
sbb
test
movs
ins
xchg
mov
movs
or
sbb
loope
inc
fwait
popf
push
adc
jno
mov
adc
in
push
daa
cmp
jmp
test
mov
sbb
fwait
push
and
leave
mov
loopne
mov
aaa
adc
pop
sub
cmp
pop
xor
test
pop
test
int3
bound
mov
lods
push
(bad)
pop
in
sar
dec
fnsave
in
cmp
xchg
imul
and
adc
loope
ins
push
mov
loopne
push
ins
mov
imul
and
mov
ds
xchg
push
mov
mov
lds
sub
mov
sahf
(bad)
stos
push
add
fcmovnu
fist
lock
adc
push
add
pop
in
rol
mov
gs
and
sub
(bad)
scas
dec
cmp
ds
jnp
push
int3
call
ret
gs
rol
inc
ror
aad
mov
or
out
cmp
inc
push
sub
ja
not
add
shl
cdq
mov
xlat
clc
jmp
sbb
ds
pop
jmp
sub
pop
sub
xor
ins
mov
sar
jmp
fwait
jge
jg
jp
xchg
xchg
adc
in
out
sbb
xor
or
dec
mov
dec
inc
push
sahf
out
gs
jl
mov
out
xchg
(bad)
and
mov
mov
gs
test
or
push
mov
shl
xchg
cmp
mov
jne
inc
out
xchg
leave
xchg
mov
pop
pop
pop
or
in
jns
call
lock
les
pusha
mov
in
aas
and
xchg
jo
jbe
fsub
jmp
push
pop
fcmove
inc
push
and
mov
test
or
pop
outs
dec
sbb
dec
pop
hlt
inc
movs
jp
mov
call
cmps
or
pop
inc
cmps
dec
jmp
mov
fld
sbb
lea
rol
int3
pop
and
sahf
aas
add
push
add
mov
adc
hlt
ds
dec
cwde
and
retf
cmps
cli
div
cli
sbb
cld
out
in
aaa
push
call
aaa
(bad)
xchg
fsub
mov
jo
ins
test
hlt
psubsw
sti
fwait
sub
pop
pop
ds
int
cwde
mov
test
xchg
imul
fcom
push
in
shr
mov
clc
sub
fs
dec
or
mov
loope
sti
ja
push
pop
push
cmp
mov
pop
jecxz
movs
js
fld
jmp
dec
popf
push
adc
dec
xor
jecxz
call
push
pop
dec
jmp
cmps
retf
cmp
pop
repnz
xchg
aam
push
mov
inc
inc
mov
les
cmp
cdq
sti
fldcw
add
and
xchg
inc
movs
ficom
hlt
xchg
loop
mov
pusha
push
out
jecxz
inc
int3
std
aad
(bad)
push
and
add
ss
push
or
cdq
inc
(bad)
and
in
fmul
sahf
test
gs
jle
jp
aad
adc
sub
pop
shl
sub
aas
mov
pop
xchg
push
leave
call
cmp
mov
lock
popf
enter
popa
and
xor
xor
jne
adc
lds
jge
sbb
(bad)
call
jne
movs
repnz
adc
dec
sar
jmp
add
test
cmp
mov
sbb
sbb
aam
cmp
mov
mov
xor
mov
adc
cmc
mov
push
scas
cmp
retf
sahf
fdiv
and
fxtract
fs
paddsb
and
mov
(bad)
dec
sub
(bad)
popf
mov
fist
loopne
xor
movups
aas
push
inc
fiadd
je
shl
jae
fcmove
dec
pop
xor
cwde
movs
push
dec
rcr
jno
xor
shl
cmp
and
sbb
int
test
sub
enter
iret
push
jo
(bad)
jge
mov
xchg
pop
mov
adc
mov
dec
sbb
nop
push
push
inc
add
sar
jo
stc
dec
xchg
push
pop
adc
sbb
popa
push
pop
pop
mov
push
inc
mov
mov
push
xlat
adc
iret
rcr
enter
jmp
into
jp
rcl
ja
xor
mov
and
jl
xchg
retf
popa
xor
enter
mov
fdivr
jp
cmp
fadd
sahf
iret
retf
adc
sbb
in
xor
aas
mov
sbb
jp
fcom
fidiv
iret
add
xlat
in
and
xchg
or
push
push
pushf
inc
cmove
mov
shl
push
in
or
ja
sbb
cmp
jmp
jmp
jno
daa
push
add
jle
push
bound
popf
hlt
dec
(bad)
xchg
out
add
xchg
jmp
sbb
mov
ins
in
xor
(bad)
cmp
adc
pop
mov
out
sub
push
sub
dec
popf
outs
mov
dec
jo
inc
mov
inc
inc
nop
xor
ret
and
jns
rcl
mov
repz
ins
enter
in
dec
xchg
jnp
push
mov
jb
daa
sbb
test
and
es
retf
mov
jg
imul
iret
adc
iret
test
lds
shl
test
and
aad
and
test
xchg
mov
and
retf
mov
dec
xchg
cmp
adc
in
xor
xchg
nop
scas
sti
jp
je
ror
jmp
jbe
adc
mov
retf
out
nop
arpl
fs
jp
and
cmp
sub
pop
fcom
and
push
test
inc
out
scas
pop
inc
cmp
xor
outs
fisttp
inc
adc
pop
xchg
pop
outs
(bad)
aaa
fdiv
xor
mov
fsubr
pop
fcomp
or
dec
xchg
add
cmps
add
cmp
or
add
cmp
and
xlat
push
cmp
xchg
fmul
xor
in
mov
les
enter
sbb
loop
xchg
or
fnstsw
call
mov
sbb
aas
repz
sbb
or
dec
adc
adc
push
and
hlt
jbe
fisubr
(bad)
jl
sub
inc
cmp
enter
popf
mov
arpl
cmp
int
xlat
mov
xor
lods
mov
sti
pop
es
jbe
pop
or
sub
cmp
jle
sub
pop
ja
adc
jne
pop
or
or
xchg
mov
or
inc
pushf
(bad)
inc
mov
sub
jl
sbb
mov
test
pop
lods
xchg
ins
xchg
stos
je
push
xor
mov
adc
jmp
mov
xlat
mov
ret
cmp
mov
aam
popf
mov
iret
mov
outs
and
aas
xchg
cmp
or
dec
mov
dec
xchg
jmp
aad
sbb
mov
push
popa
(bad)
fwait
lea
sbb
out
sar
jbe
pop
mov
sbb
clc
nop
jne
mov
jle
mov
clc
call
outs
pop
add
enter
sahf
or
jne
adc
aas
adc
and
shr
sbb
mov
bound
rcl
inc
cmc
dec
adc
xlat
pop
xchg
stc
jbe
arpl
cmps
in
add
push
adc
cmp
jno
xchg
(bad)
fidiv
dec
cmps
add
or
cmp
mov
dec
repnz
cdq
sbb
(bad)
jmp
or
dec
cmps
cmp
cwde
sub
push
call
jo
push
adc
mov
lea
add
std
or
out
mov
fsubr
clc
dec
or
shl
mov
test
into
push
js
scas
stos
shr
or
mov
int3
mov
push
pop
mov
push
jb
add
in
xchg
jmp
sub
mov
push
pop
pushf
cmc
nop
xchg
aad
pop
fsubr
mov
loop
xchg
lea
je
inc
jecxz
inc
inc
pop
mov
int
push
ret
arpl
add
js
sbb
xor
js
outs
mov
or
mov
in
mov
in
push
xchg
mov
mov
int3
jg
sahf
mov
jg
sub
push
ror
ror
jnp
mov
out
jns
mov
mov
lods
fs
ror
mov
jl
out
leave
popa
arpl
xor
xchg
aad
js
in
or
jns
stc
pop
loop
rol
imul
arpl
cmc
jmp
mov
or
pop
bound
add
xor
lahf
ror
fsub
retf
jmp
mov
add
mov
fucomip
adc
mov
sbb
fcmovbe
les
add
push
scas
add
and
push
or
mov
loope
pop
enter
mov
pop
push
xor
les
fistp
mov
loop
inc
scas
cmp
cli
clc
pusha
in
enter
cli
mov
inc
fs
sti
cwde
mov
fbld
int
pop
cmp
fs
jne
jb
ss
sbb
enter
fsub
add
loop
loop
or
sbb
gs
sti
mov
into
stos
lock
mov
add
adc
retf
pop
sub
mov
and
retf
mov
cmp
das
scas
pop
je
jnp
push
imul
repnz
rcl
jl
jle
stos
(bad)
aad
inc
lea
jne
xchg
mov
mov
rol
xchg
sub
stos
(bad)
push
fcom
js
push
sar
sar
es
mov
test
jnp
push
mov
or
scas
lahf
test
ret
aas
push
in
pop
sbb
lahf
pop
lods
xor
pusha
pmuludq
shl
lahf
jmp
rol
(bad)
addr16
sbb
pusha
mov
xlat
gs
es
push
push
jg
sbb
shl
xchg
test
jecxz
inc
push
shl
push
sbb
sbb
pop
fs
push
sar
xor
mov
in
ja
cmp
mov
cli
aas
dec
and
iret
aad
gs
or
xor
xor
rol
or
lods
lea
xor
adc
outs
repz
xor
add
test
in
sbb
cmp
out
pop
sub
fmul
xchg
test
push
ret
xchg
push
mov
idiv
fwait
add
cmp
pop
(bad)
mov
and
fild
or
ins
rol
jns
cmp
fst
nop
fld
inc
sbb
mov
pushf
push
push
adc
pop
pop
mov
pop
xchg
dec
(bad)
in
xor
fsub
and
fist
mov
mul
or
mov
mov
fisttp
inc
fmul
dec
push
call
mov
pop
(bad)
test
add
mov
aas
mov
(bad)
adc
jmp
jo
clc
cmp
sbb
scas
stos
mov
vmwrite
stc
(bad)
aad
push
frndint
inc
mov
pop
hlt
mov
add
loop
dec
mov
jl
aaa
push
fdivr
out
sar
push
out
jl
js
mov
rol
call
cli
mov
test
and
push
lea
bound
inc
sbb
ja
imul
mov
ja
push
xchg
retf
inc
sbb
xchg
loop
jle
mov
mov
xor
out
pop
imul
cs
gs
add
aas
adc
jge
loopne
(bad)
jge
sub
stos
push
sub
div
mov
aas
call
call
pop
jmp
push
sub
outs
in
fild
adc
xor
xlat
fmul
outs
dec
jbe
pop
jno
(bad)
jnp
call
xchg
mov
xor
and
push
leave
int3
push
jnp
scas
ret
fist
mov
inc
hlt
inc
or
clc
ss
leave
dec
or
add
(bad)
mov
inc
stos
inc
or
iret
push
mov
movs
mov
inc
jns
jl
add
push
mov
adc
jbe
add
mov
xor
std
ffree
fwait
pop
cdq
sub
fdivrp
xor
adc
mov
mov
fldenv
push
out
sub
outs
dec
jl
inc
loopne
or
mov
loope
xchg
aas
xchg
cmc
(bad)
jns
sbb
adc
sbb
outs
sbb
mov
sbb
push
mov
pop
mov
test
mov
hlt
add
retf
in
leave
lods
inc
imul
mov
call
jp
pop
push
ret
mov
sub
icebp
std
ins
outs
sub
add
int
les
fisttp
jno
inc
idiv
dec
dec
xlat
sbb
fs
and
outs
pop
mov
dec
test
mov
push
or
shld
or
push
outs
lods
sar
loopne
sbb
aam
nop
and
stos
inc
cmp
mov
test
sub
and
fist
jae
aad
test
ds
(bad)
cli
jmp
lods
jno
ins
add
or
dec
jmp
dec
int
adc
lods
mov
mov
mov
jb
ret
lahf
ja
add
pop
push
xor
shl
push
cld
aad
sub
push
movs
dec
ja
(bad)
popf
jb
dec
jecxz
fisttp
fst
xor
aaa
sti
xchg
gs
idiv
call
adc
adc
test
and
je
adc
test
ror
call
jbe
stos
inc
pushf
add
inc
mov
xchg
mov
jmp
pusha
xlat
test
dec
adc
retf
and
push
int3
push
das
add
pushf
or
arpl
cld
out
aas
dec
mov
(bad)
xor
repz
add
scas
pop
inc
sar
ja
icebp
movs
mov
sahf
aas
call
sub
sub
pop
inc
repz
sub
jmp
mov
dec
mov
push
jp
push
pop
jmp
mov
fcmovne
stos
or
adc
pop
lock
(bad)
loop
and
jae
or
mov
call
jns
into
dec
or
out
in
stc
mov
dec
jg
fs
sub
dec
dec
ins
test
mov
mov
test
rol
dec
aas
cmp
ins
movs
add
xchg
mov
(bad)
dec
sbb
inc
inc
inc
adc
lods
(bad)
mov
enter
test
push
xchg
inc
jb
lds
ror
or
push
mov
icebp
(bad)
in
dec
loope
mov
cwde
mov
or
daa
add
call
jo
pop
mov
dec
out
add
add
add
fs
gs
test
ins
xlat
ret
add
xchg
lahf
movs
out
aaa
cmp
sahf
mov
(bad)
mov
dec
(bad)
and
sbb
call
mov
not
xor
fcomp
inc
into
and
imul
aam
enter
mov
and
test
out
adc
jne
stc
ja
sub
xchg
xor
mov
faddp
cmp
adc
bound
mov
jns
mov
scas
movs
imul
enter
mov
pop
add
out
xchg
mov
ins
jno
in
cdq
adc
jge
gs
rcl
ins
frstor
iret
mov
push
ins
xor
mov
jae
fidivr
shl
rcl
into
adc
or
or
out
outs
inc
aas
rcr
mul
mov
lea
lods
lds
pop
xchg
shl
pop
jno
fs
sbb
mov
mov
lods
retf
stos
cmp
jae
push
retw
les
jge
clc
push
mov
and
fucomip
xor
xlat
icebp
sub
cmp
jae
leave
stos
add
inc
sar
outs
push
std
jecxz
aam
mov
jge
push
adc
fs
inc
cld
lahf
xlat
repz
hlt
mov
cmp
sti
mov
add
imul
ror
repnz
xchg
inc
sbb
mov
call
mov
(bad)
dec
loop
outs
popa
xor
imul
mov
jnp
scas
push
pop
push
xchg
(bad)
jmp
pusha
mov
cwde
or
mov
adc
add
sub
jne
jle
scas
or
xor
inc
add
out
bound
mov
mov
xchg
mov
dec
shl
sbb
fisub
push
mov
xchg
out
xchg
mov
xchg
icebp
test
lods
stc
sbb
xor
jb
(bad)
mov
in
shl
xor
lods
cmp
inc
xlat
push
std
pop
loop
push
jne
xchg
dec
xor
xor
ret
pop
stos
sbb
xchg
mov
xchg
movs
loope
xchg
jg
lea
mov
add
adc
pop
inc
mov
dec
fwait
call
je
sbb
out
sbb
mov
mov
pop
mov
mov
pop
sub
repz
je
xlat
jmp
pop
jmp
addr16
retf
std
test
sbb
stc
in
rcr
pushf
(bad)
std
in
ficomp
adc
inc
fist
mov
icebp
inc
(bad)
int
xchg
inc
jle
push
loopne
dec
push
test
xchg
cmp
sbb
push
dec
push
ins
xor
adc
in
pop
push
and
jp
dec
fcos
icebp
lods
mov
or
sbb
stos
ins
dec
xchg
mov
test
dec
xlat
int
sub
inc
shl
out
inc
pop
push
push
mov
ss
loop
sbb
mov
pop
mov
sbb
stos
call
ret
sbb
dec
cld
(bad)
fnsave
adc
stc
sub
neg
adc
sbb
cmps
aam
xchg
fidivr
ftst
repnz
sub
add
jns
loope
loopne
pop
not
pusha
push
cmp
xchg
jle
or
adc
xchg
hlt
jmp
jbe
dec
scas
les
loopne
ret
je
out
push
out
sub
push
clc
icebp
lea
jecxz
pushf
adc
ror
jp
call
ror
fldcw
sub
fimul
(bad)
outs
ins
dec
les
ins
faddp
popa
or
adc
scas
jge
aas
call
das
pop
xchg
cld
add
mov
imul
or
popa
jne
pushf
add
(bad)
(bad)
pop
mov
jno
imul
push
adc
mov
inc
dec
pushf
sub
les
or
in
xor
jns
mov
(bad)
and
push
xchg
mov
mov
les
xor
vmovd
icebp
test
rcr
(bad)
jp
outs
in
jecxz
push
lods
dec
clc
inc
fiadd
dec
stos
fisub
dec
jmp
shl
fst
sub
pop
fmul
(bad)
inc
xchg
and
dec
mov
add
popf
lods
push
sbb
out
and
or
fcom
(bad)
int
sub
js
push
movs
jmp
jne
loope
jle
or
cmps
jge
pushf
xor
cmps
outs
xor
data16
sbb
movs
lock
adc
mov
ins
std
inc
or
pushf
sub
xor
(bad)
ds
lahf
push
sbb
jae
sbb
and
cld
imul
jp
in
mov
add
jo
xor
jecxz
xchg
addr16
(bad)
in
mov
mov
jo
mov
add
and
cwde
pop
in
inc
(bad)
loopne
and
(bad)
adc
in
movs
hlt
cwde
cmp
mov
imul
aad
jb
in
lock
inc
lahf
push
sub
mov
pusha
in
or
and
daa
mov
lods
cmc
arpl
pop
scas
aaa
bound
jae
int
call
sub
sub
add
test
push
aad
push
jmp
adc
std
popf
out
mov
(bad)
jne
(bad)
mov
mov
mov
mov
ins
ret
fimul
out
inc
movs
imul
dec
hlt
mov
fimul
cmp
sub
xor
jl
fldcw
cmp
pop
jl
scas
jbe
push
mov
push
dec
outs
cmp
inc
mov
push
mov
sbb
movs
inc
jae
shr
sar
jle
mov
clc
addr16
mov
retf
repz
pop
push
push
arpl
in
out
pop
pushf
sub
imul
mov
jl
mov
pop
test
inc
stos
ins
add
xor
into
xchg
xor
cmps
cmc
xor
jo
mov
jb
xchg
retf
xchg
nop
jnp
pop
jne
xor
push
mov
cmp
adc
dec
xor
push
inc
add
mov
add
sahf
sub
mov
addr16
(bad)
fcmovne
dec
ins
jmp
pop
xchg
xor
adc
dec
dec
fcom
mov
aas
xchg
lods
jl
mov
mov
fdivr
cli
and
popa
int
es
mov
mov
mov
and
shl
push
scas
repnz
sbb
fadd
(bad)
xor
adc
inc
sbb
xchg
mov
in
hlt
cld
dec
(bad)
mov
je
add
fnsave
rcr
fcomp
mov
pop
mov
push
mov
enter
xor
cmp
add
adc
(bad)
push
jmp
or
push
aaa
pop
mov
jp
and
int3
push
popf
and
pushf
fnstenv
lods
lahf
fist
dec
lds
lods
test
lahf
dec
in
inc
(bad)
cwde
scas
xchg
add
sub
fidivr
retf
xchg
and
add
sub
out
or
(bad)
fmul
and
test
adc
adc
xor
(bad)
(bad)
xchg
sbb
outs
not
mov
push
sub
dec
xlat
sbb
setg
mov
cwde
xchg
fadd
dec
or
xor
adc
jo
loop
dec
scas
add
pop
adc
retf
and
int
dec
(bad)
in
xor
jg
push
sbb
sbb
xchg
and
or
and
aad
fisttp
and
or
ja
daa
retf
sbb
push
pop
pop
add
or
enter
das
push
out
push
ins
xchg
sub
jle
dec
sbb
or
outs
leave
pop
loopne
into
test
nop
xlat
push
inc
dec
pop
inc
outs
ss
mov
test
or
imul
setp
push
mov
rol
adc
(bad)
adc
sbb
arpl
mov
dec
lds
xor
xchg
jnp
pop
push
movs
loop
fidivr
and
push
lahf
pop
xor
adc
or
push
int3
push
(bad)
icebp
inc
outs
adc
arpl
ret
ficomp
in
ret
lock
cwde
pop
sti
lods
lea
in
or
mov
in
stos
aas
ins
fs
adc
out
push
mov
push
cmc
loop
push
mov
adc
pop
xchg
dec
mov
push
mov
pop
dec
and
sub
mov
and
xor
inc
pushf
outs
push
push
(bad)
mov
(bad)
add
retf
popf
or
mov
sub
imul
pop
cmps
loopne
jb
mov
loop
out
rcr
lods
jmp
xchg
push
loop
cmc
and
push
aam
cdq
fisub
sbb
add
cli
mov
xchg
retf
shr
xchg
addr16
(bad)
pop
push
mov
test
mov
jb
(bad)
scas
or
cmc
aam
or
and
adc
out
jmp
pop
(bad)
js
xchg
xor
imul
mov
xchg
sbb
stc
xchg
mov
inc
lods
(bad)
cli
mov
jp
push
cmps
(bad)
sti
retf
push
push
ins
clc
and
and
inc
lods
dec
lahf
xchg
inc
sbb
int3
xor
adc
int3
mov
shl
pop
fs
pop
inc
mov
fwait
mov
jns
movs
jmp
adc
or
mov
mov
lods
sub
pop
and
sub
ret
inc
dec
adc
pop
jnp
sub
stc
ja
icebp
test
lds
icebp
cld
jmp
outs
shl
inc
mov
imul
sbb
or
out
xor
addr16
jo
retf
stc
or
hlt
enter
xsaveopt
enter
jp
mov
(bad)
jne
jbe
jp
jmp
jb
xor
out
fisubr
pop
repz
jl
enter
cmp
dec
push
and
fiadd
icebp
pop
mov
icebp
ins
std
push
dec
icebp
out
mov
aad
or
cs
push
lock
aam
hlt
(bad)
mov
ficom
and
fnsave
push
add
xor
cmp
jnp
jp
pushw
mov
dec
(bad)
xchg
mov
ds
or
enter
repnz
mov
sahf
in
popa
mov
sbb
in
dec
arpl
sbb
xor
lock
inc
adc
cmps
inc
jno
mov
repz
push
in
imul
mov
ds
or
in
fist
mov
dec
addr16
xchg
daa
movs
(bad)
stc
xlat
gs
jno
in
retf
dec
inc
sub
aaa
loopne
call
cdq
(bad)
shl
or
cmp
fist
int3
sbb
stos
ror
jmp
jnp
into
xchg
mov
repz
jg
push
inc
cmp
push
cmp
movs
leave
xor
cmp
cmp
pop
call
lods
mov
and
dec
mov
or
fs
ins
lahf
in
pop
add
inc
add
ret
ficom
ret
push
lds
jmp
jmp
push
test
mov
cs
jmp
ret
sti
pop
test
cwde
and
loopne
inc
test
pop
mov
xor
mov
fstp
cdq
sbb
sub
sub
pop
sti
call
int3
loop
int3
test
sub
stos
test
and
cmp
mov
adc
fistp
movs
push
push
sar
mov
icebp
fadd
pop
mov
cs
cmp
es
cmp
jp
mov
xchg
jp
sub
xor
or
movs
mov
sbb
fisub
fldcw
inc
into
retf
mov
and
xor
xchg
sub
push
xchg
jne
add
test
cmp
fdiv
imul
ja
xchg
jl
movs
xchg
mov
cmp
mov
lock
shr
dec
dec
add
imul
int3
stc
stc
sbb
jo
push
lods
lock
push
cs
(bad)
into
and
icebp
gs
scas
mov
je
ja
pop
test
push
cmp
pop
test
loopne
jo
cld
fadd
push
mov
adc
jle
push
and
in
pop
add
retf
mov
inc
or
call
xchg
aam
jne
dec
push
setnp
mov
fwait
sub
push
add
xchg
inc
loop
adc
cmp
add
ficom
xor
nop
call
inc
ret
xlat
scas
aad
jecxz
pop
add
in
fstp
jo
scas
hlt
inc
jecxz
hlt
jbe
pop
jno
add
loope
sbb
outs
retf
adc
(bad)
push
jmp
push
mov
int3
popa
std
imul
dec
jnp
and
fucom
mov
xor
pop
push
bound
call
aad
cmp
ror
addr16
sahf
into
jmp
out
aad
loope
imul
mov
mov
xchg
push
test
xchg
out
retf
test
mov
mov
push
loopne
jno
(bad)
out
sub
inc
add
ror
mov
jnp
outs
mov
and
aas
xor
sti
and
shl
lahf
inc
xor
aad
test
jmp
lods
pop
lds
dec
cli
stos
jae
and
mov
ja
sub
int
or
sub
inc
pop
sti
xor
xchg
and
daa
mov
inc
cmp
xchg
push
jg
mov
int3
ret
sub
ins
add
push
inc
push
pop
fdivr
xchg
pop
adc
adc
addr16
movs
inc
adc
ror
lds
or
jne
(bad)
addr16
mov
ret
ret
mov
fcmovbe
dec
cmp
shl
xchg
sbb
popa
int
pop
sbb
rol
test
xchg
xchg
sbb
in
loop
loope
or
test
push
lds
jnp
nop
dec
fwait
xor
or
jmp
inc
add
jmp
pop
test
in
inc
xchg
ins
cld
nop
movs
mov
in
lock
test
(bad)
fistp
stc
xchg
loopne
das
mov
int3
mov
pop
sbb
mov
mov
fcmovnbe
mov
add
ja
int3
and
popa
into
jmp
fcom
call
push
das
outs
jmp
enterw
in
ror
pusha
retf
adc
adc
mov
xor
pop
in
out
xchg
mov
out
sahf
and
imul
cwde
sbb
jnp
sti
mov
cwde
out
cli
int
push
fcmovnu
jmp
movs
es
cli
inc
xor
sbb
(bad)
mov
into
es
sub
or
mov
mov
lock
sbb
ss
cmp
sub
xchg
dec
fwait
xchg
(bad)
shr
repnz
inc
fstp
leave
mov
xlat
test
jae
test
test
cdq
(bad)
ficomp
sbb
mov
sub
adc
or
jp
mov
xchg
pop
mov
xchg
mov
(bad)
or
and
sti
iret
add
xor
loope
jg
(bad)
je
stos
adc
cmp
rcr
repz
and
cli
out
push
and
mov
pop
es
inc
jne
cmps
mov
sbb
add
jge
das
cmp
pop
out
scas
popa
mov
adc
mov
aas
mov
bswap
ss
add
cmc
jns
sbb
inc
push
sbb
and
push
std
scas
add
mov
imul
mov
inc
xlat
repz
adc
arpl
mov
scas
(bad)
inc
fld
jmp
or
jecxz
mov
mov
pop
pop
inc
leave
sbb
lock
test
out
lea
add
push
daa
out
dec
imul
sbb
daa
imul
pop
shl
mov
lahf
lods
pop
jg
lods
sbb
mov
mov
mov
sub
jle
jmp
mov
pop
push
pop
ins
pushf
mov
repnz
movs
sub
popa
pop
loopne
jbe
iret
jnp
aad
mov
popa
xlat
adc
call
adc
jl
jnp
push
dec
aad
mov
adc
imul
inc
psraw
retf
push
dec
add
iret
xor
aad
cmps
xchg
push
test
dec
es
sbb
es
mov
adc
jp
nop
sbb
inc
pop
fstp
rol
repz
push
test
leave
std
push
mov
ins
xchg
xor
addr16
jecxz
jg
loopne
lock
jl
das
pusha
fs
push
mov
jnp
fs
outs
mov
ss
(bad)
sub
or
arpl
ss
lods
mov
sahf
(bad)
sar
lods
or
mov
ja
arpl
push
loope
retf
add
xchg
ss
jle
sbb
dec
hlt
cwde
and
aam
fimul
repnz
fdivr
mov
aam
add
into
daa
mov
mov
sbb
lods
mov
test
outs
push
mov
sbb
push
lods
xor
std
loop
sbb
mov
fimul
sar
mov
stc
sti
push
cwde
popa
les
lods
sub
mov
sbb
add
mov
test
lods
ret
mov
add
cmp
(bad)
popf
test
enter
mov
retf
std
inc
sub
pop
push
les
cmp
sub
or
inc
xchg
hlt
pop
ins
enter
xor
xchg
fnsave
retf
ds
fidiv
loope
sbb
mov
sbb
mov
call
mov
sbb
cdq
jl
daa
stc
jge
(bad)
in
lods
sub
std
add
mov
mov
xor
or
inc
xor
icebp
cmps
mov
and
clc
dec
cmp
adc
mov
push
adc
sub
push
outs
add
(bad)
into
and
(bad)
push
mov
mov
pop
lods
jle
mov
cmp
repnz
popf
out
mov
jbe
mov
popf
jb
lods
fld
mov
xchg
adc
pusha
push
movs
stc
fisub
or
push
addr16
jl
das
arpl
mov
cmp
movs
aaa
jmp
inc
fwait
int
sar
dec
xchg
and
sbb
ficom
(bad)
jnp
mov
cmp
inc
jns
(bad)
cwde
pop
pop
push
push
out
inc
mov
mov
or
fist
pop
fmul
out
call
fimul
jp
das
push
jp
cmp
pushf
pop
sub
sbb
xchg
dec
mov
mov
mov
test
dec
outs
stos
jle
das
call
fcom
cmp
dec
mov
ret
(bad)
jne
je
test
and
(bad)
mov
(bad)
ss
sub
jae
cmps
pop
fst
movs
(bad)
mov
leave
xchg
cmp
iret
aad
add
mov
sub
push
and
inc
cmp
mov
fimul
jbe
cld
sub
push
mov
lods
jns
mov
mov
(bad)
sbb
mov
imul
les
ds
jo
xor
imul
fmul
cmps
dec
iret
and
das
cld
test
les
and
shl
ret
(bad)
jmp
sbb
mov
repz
mov
adc
add
mov
loopne
or
iret
dec
sbb
in
outs
jnp
test
xlat
and
jmp
xor
dec
mov
arpl
scas
aas
push
xor
nop
xor
mov
cli
push
sbb
fsubr
jmp
push
mov
mov
add
nop
mov
pop
ins
movs
pop
cmp
cmp
out
cmp
shl
or
inc
xor
xchg
cmp
dec
loope
fwait
pop
loop
jp
stos
inc
into
loop
sbb
dec
xchg
loopne
mov
push
das
cmp
adc
(bad)
lods
and
stos
(bad)
xlat
cdq
scas
test
out
stos
and
mov
or
aas
movs
lock
and
shl
adc
jbe
push
fsubr
lock
jge
push
or
mov
fidiv
sbb
stc
push
test
inc
shl
clc
xlat
push
fwait
inc
pop
out
mov
and
les
sub
addr16
jge
push
xlat
sub
jmp
popf
or
ins
stos
repnz
repz
call
(bad)
scas
cmp
cdq
into
in
cmps
ror
retf
sbb
mov
pop
popa
pop
cmp
jbe
rcl
or
fwait
adc
cli
call
add
push
movs
jo
push
or
(bad)
stos
mov
jecxz
ret
pop
mov
xor
clc
cmp
stos
jmp
aas
add
sti
loopne
imul
push
popf
or
jae
cs
jecxz
pop
sbb
mov
scas
sbb
xor
xchg
cmp
jmp
add
aas
dec
nop
loope
mov
pushf
cs
xor
mov
out
dec
cmp
push
push
int
int
cmp
popf
hlt
push
movs
cmp
sbb
jle
sub
adc
into
shl
cmp
push
mov
xor
arpl
jg
jecxz
xchg
sbb
call
lock
push
mov
sbb
dec
push
push
pop
int
jg
ds
sti
dec
push
cmp
pop
cmp
retf
mov
aas
sbb
pop
sbb
xchg
sbb
push
adc
retf
mov
xchg
mov
cs
mov
icebp
xchg
iret
jnp
cmp
mul
mov
jmp
js
arpl
imul
out
mov
pop
mov
dec
and
test
lock
dec
mov
scas
jg
adc
mov
test
loop
mov
adc
ins
jg
jmp
mov
js
and
mov
adc
inc
jbe
in
and
outs
cdq
pusha
movs
lods
and
or
dec
jmp
mov
dec
fld
nop
jmp
and
enter
inc
in
inc
mov
xchg
imul
push
cmp
bound
sub
int3
in
aad
fadd
xchg
cmps
jl
push
imul
pop
test
ror
cdq
pop
scas
xlat
lods
adc
aas
mov
jmp
lahf
scas
xor
or
pop
jecxz
mov
inc
test
pop
or
sbb
or
pop
inc
jmp
arpl
adc
pop
inc
retf
fcom
pop
push
cmp
push
les
inc
repz
(bad)
mov
push
outs
xlat
outs
mov
sbb
aaa
popf
push
pop
outs
ins
mov
stos
or
jbe
and
dec
fidiv
fsub
cmp
clc
jg
movs
ja
scas
mov
jl
cmp
movs
and
mov
xor
mov
in
mov
icebp
or
leave
mov
mov
and
dec
mov
daa
adc
in
adc
mov
cmp
retf
aam
pop
mov
mov
lds
jg
sti
sbb
xchg
mov
sbb
pop
fadd
rcl
lods
pop
push
add
and
and
out
push
js
jp
aad
sti
inc
sub
mov
sub
ins
adc
xchg
adc
shl
mov
jae
xchg
mov
mov
sub
mov
jg
push
jb
mov
shl
clc
stos
(bad)
mov
ja
nop
pop
cdq
push
adc
and
push
sub
push
ret
mov
sar
out
jnp
loopne
mov
mov
arpl
icebp
jg
mov
inc
sub
call
fimul
sub
out
jmp
ret
xchg
dec
push
clc
sbb
push
pop
pop
in
cdq
ds
and
sub
movs
rcl
cmps
ret
cmp
pop
mov
shr
in
adc
cmc
cwde
rol
test
les
aaa
adc
mov
es
imul
(bad)
sbb
jecxz
and
call
sbb
lock
jge
call
xor
cmc
stos
sbb
scas
lahf
mov
adc
mov
scas
movs
in
fisubr
add
inc
jp
call
sub
ret
in
add
fcom
dec
add
mov
mov
xor
mov
test
xchg
test
mov
(bad)
mov
and
aaa
xor
or
loope
movs
sbb
jo
pop
mov
mov
popf
std
mov
push
scas
mov
mov
inc
add
mov
dec
(bad)
scas
xchg
xor
aad
mov
rcr
adc
pop
in
rcr
mov
sub
pusha
xor
dec
xor
movs
cmc
(bad)
sbb
sbb
push
jp
jp
and
ret
data16
pop
inc
mov
inc
xor
jmp
add
pop
das
aad
imul
std
xlat
ss
sbb
mov
bound
xor
push
ja
pop
mov
iret
push
push
aas
and
pop
jo
fs
in
(bad)
cdq
(bad)
fdiv
test
mov
cmp
push
and
cs
(bad)
hlt
lahf
inc
arpl
leave
les
mov
cmp
jns
adc
sub
inc
fimul
mov
dec
ss
pop
jge
and
stos
adc
pop
retf
scas
cwde
cmp
pop
adc
cmp
ins
aaa
xlat
inc
sbb
retf
lods
out
stos
cmp
add
add
cmp
dec
mov
mov
inc
sub
mov
cmp
xchg
mov
pop
xor
xchg
and
add
cmp
scas
lock
fnstsw
xchg
or
movs
addr16
stc
inc
pop
dec
inc
in
jb
mov
pop
pop
mov
mov
pop
ins
lods
sbb
mov
je
das
cld
mov
dec
mov
or
mov
ret
repnz
(bad)
pushf
jno
es
addr16
into
leave
ret
cmp
pop
xor
les
jp
jo
jb
scas
nop
mov
cld
mov
popf
add
dec
mov
inc
das
cs
popa
loope
daa
aad
mov
or
and
pop
fidiv
xor
repz
inc
aad
imul
hlt
mov
dec
sbb
ror
aaa
mov
and
or
jo
mov
es
clc
cmp
leave
jae
and
adc
lea
pop
movs
push
and
adc
ds
jge
aam
mov
push
daa
push
ins
sbb
in
push
xchg
push
adc
dec
mov
mul
cld
cs
lea
jg
push
es
mov
scas
enter
or
fs
cmps
xchg
mov
xor
fcomp
sub
(bad)
cmp
ret
jmp
retf
mov
jno
dec
pop
push
movs
js
dec
retf
mov
push
inc
cmp
test
rcr
cdq
test
popf
xchg
lods
sub
mov
mov
jecxz
inc
mov
mov
fidiv
cmp
add
or
or
je
leave
push
mov
out
cdq
aad
lock
mov
movs
jb
cwde
repnz
adc
adc
movs
pop
pop
cmp
jo
in
mov
cmp
scas
ja
movs
cmp
lock
sbb
inc
xchg
push
push
punpckhbw
lock
and
cld
les
call
loop
ror
cmp
sbb
scas
movs
imul
xor
ret
call
mov
jae
inc
sub
repz
cmps
dec
das
mov
sbb
std
dec
inc
pushf
inc
daa
scas
dec
pop
push
(bad)
jmp
in
dec
rcr
adc
test
cli
push
bound
inc
mov
pop
lods
dec
imul
cmp
mov
dec
outs
aam
sub
mov
in
jno
fdiv
inc
mov
push
add
(bad)
test
mov
jns
mov
stos
fisttp
adc
jno
iret
or
js
jecxz
iret
cld
push
addr16
cmp
cmps
lods
(bad)
cwde
xchg
clc
adc
jnp
push
out
inc
push
dec
and
mov
push
dec
push
push
cmp
xchg
inc
and
cmp
and
pop
push
mov
outs
retf
sti
push
pushf
fild
mov
and
or
dec
scas
rol
fnstcw
push
sysexit
mov
aas
add
mov
(bad)
lock
ins
push
dec
push
and
or
fwait
call
cmp
pop
push
dec
adc
out
sahf
imul
cwde
cs
xchg
pop
cmp
aam
stos
pop
dec
inc
push
add
mov
into
sub
ret
(bad)
call
inc
ret
add
(bad)
out
inc
(bad)
mov
shl
rcr
jo
mov
sar
(bad)
jecxz
retf
dec
dec
jp
mov
push
jne
add
cld
sbb
enter
sub
lahf
repnz
int3
test
cmp
mov
hlt
imul
xchg
dec
loop
sub
mov
(bad)
inc
jle
cmp
pop
jae
(bad)
jmp
(bad)
pop
cmps
lock
or
push
(bad)
push
dec
pop
(bad)
mov
adc
jmp
cmps
or
(bad)
dec
sar
xchg
mov
cld
aaa
retf
or
fist
push
int
lahf
shl
mov
push
shr
inc
scas
lock
(bad)
jl
(bad)
repnz
sti
fmulp
push
and
(bad)
fs
(bad)
hlt
sub
xor
or
sbb
xchg
loope
cwde
pop
push
dec
loope
shl
or
xchg
or
shl
mov
sub
daa
stos
mov
adc
das
in
lea
test
movs
enter
call
out
sub
int
jl
test
fidivr
xchg
xor
or
setbe
add
jae
ret
jmp
and
test
mov
jbe
sbb
sti
lods
xor
std
stos
pop
sub
mov
inc
retf
dec
popf
jnp
jp
pusha
loop
call
(bad)
or
fnstcw
xor
scas
ret
mov
push
xchg
int
sub
icebp
mov
popf
fnsave
pop
add
scas
call
in
xchg
mov
xchg
cmp
xlat
mov
pop
dec
xchg
inc
clc
push
pop
jecxz
nop
push
icebp
mov
test
inc
push
add
ins
cmp
js
clc
and
(bad)
pushw
test
xlat
adc
stos
ins
in
cmp
in
shl
mov
xchg
sti
xor
mov
and
call
jbe
xlat
data16
sbb
cmp
and
dec
call
xchg
stc
arpl
push
sahf
push
mov
sbb
into
push
and
jb
arpl
inc
loope
fcmovu
out
dec
fist
ds
pop
fwait
add
mov
mov
dec
(bad)
jno
aad
int3
ins
fisttp
add
int
out
aad
jp
loopne
jns
cmp
pusha
cmp
dec
in
ja
jo
and
jmp
test
xchg
and
int3
xchg
xor
in
outs
loopne
loop
ja
dec
push
out
scas
jle
add
je
xchg
movs
push
xchg
dec
inc
cmps
xor
cmp
sbb
pop
jns
jno
out
push
lock
js
mov
lock
push
cmp
rcl
jo
addr16
push
push
mov
adc
lock
or
pop
iret
adc
out
mov
add
pop
aas
push
lock
add
mov
int3
or
stc
into
fcomip
mov
(bad)
push
mov
std
movs
sub
pop
cmc
fist
pop
and
push
sbb
fsub
jmp
dec
dec
cs
sar
push
cli
sbb
inc
and
test
sub
stc
iret
fild
aas
rol
xchg
sbb
push
in
fstp
dec
call
test
int3
pushf
cmp
adc
sub
xor
add
inc
fs
test
jmp
cmp
jbe
pop
xchg
sub
xor
mov
out
pop
test
fs
stos
std
addr16
nop
and
(bad)
shl
jmp
lock
xchg
js
repz
loopne
mov
leave
cs
cli
je
pop
mov
aam
jl
or
add
pop
cwde
sbb
arpl
xchg
loop
mov
(bad)
fst
popa
xchg
inc
sub
sub
or
jno
push
cmp
xchg
jmp
xchg
lahf
std
das
int
xor
xor
cmps
dec
(bad)
or
jbe
add
mov
mov
inc
mov
fwait
ret
or
mov
imul
pop
fisttp
in
jo
and
dec
and
aaa
jge
out
rcr
inc
ret
ror
xchg
mov
pop
mov
in
imul
idiv
pusha
pop
mov
retf
mov
aaa
sbb
pop
repz
addr16
stos
inc
adc
push
gs
enter
jmp
ins
fs
mov
ja
pmulhuw
aam
(bad)
push
js
stos
xchg
nop
mov
and
mov
(bad)
dec
out
xor
xchg
and
xchg
hlt
jae
adc
cmp
retf
(bad)
sbb
mov
inc
add
shrd
repnz
mov
push
dec
mov
sbb
cmp
scas
shl
cs
(bad)
ror
xchg
aam
(bad)
daa
add
or
sti
add
cmp
out
xchg
dec
jmp
in
sbb
sbb
mov
sub
mov
shl
sbb
add
pop
adc
mov
(bad)
cmp
das
mov
rcr
rcr
pop
pop
and
sub
xlat
aad
in
push
(bad)
dec
popf
sub
dec
mov
inc
fsub
fild
jp
in
mov
dec
cmp
(bad)
daa
jl
push
cmp
fcomp
push
fdivr
in
push
les
dec
sub
sbb
fistp
mov
ret
or
cli
pop
stc
or
mov
push
xor
jmp
and
or
jle
(bad)
loop
popa
lahf
pop
jl
(bad)
dec
add
fwait
adc
call
sub
mov
(bad)
push
clc
jmp
pop
aam
cmc
lock
pop
fwait
(bad)
sbb
push
xchg
jo
test
mov
mov
dec
out
mov
sub
in
mov
iret
popf
mov
movs
(bad)
or
gs
pop
dec
pop
ss
repnz
or
sub
stos
ja
ret
stc
icebp
xor
dec
ficom
aad
adc
pop
loope
jmp
not
mov
or
in
movs
in
inc
stos
and
jle
or
das
rol
push
dec
push
(bad)
fcmovne
hlt
push
sar
sub
cmp
xor
cmp
jae
or
fcomp
cmp
inc
inc
sub
or
imul
das
cwde
xor
rep
sbb
sub
jg
cwde
add
jmp
in
sbb
push
jne
call
inc
stos
lahf
push
pop
mov
xlat
das
cmc
stc
ss
add
les
jg
dec
int
rcr
mov
push
scas
fs
add
mov
fsub
sub
sbb
popa
daa
pop
ja
lea
test
sub
mov
dec
inc
push
inc
pushf
addr16
call
push
addr16
jle
(bad)
mov
inc
das
ja
lea
push
pushf
push
push
into
pop
sahf
push
sub
mov
pop
push
push
pop
gs
sbb
sti
leave
cli
mov
aad
pop
adc
xchg
mov
jb
stos
in
push
aad
inc
mov
mov
xchg
dec
cmp
pop
std
inc
xor
in
lahf
jno
(bad)
test
xor
retf
add
push
mov
jo
ror
or
push
test
ins
cmp
or
test
dec
iret
jle
(bad)
out
sub
iret
cmp
aaa
mov
mov
cmc
jno
or
push
and
xchg
rcl
pop
xor
pop
jg
push
out
xchg
pop
jbe
out
cmps
jno
xor
and
xchg
cmp
jns
push
xor
mov
test
add
retf
das
sbb
and
gs
enter
adc
mov
fild
fmul
push
xlat
in
popa
loopne
cmps
cmp
iret
shl
xchg
jle
stos
repnz
or
(bad)
not
in
test
aas
push
(bad)
adc
dec
ja
lods
rcr
adc
test
repnz
mov
xor
repz
mov
adc
mov
dec
test
(bad)
int3
movs
movs
fiadd
add
adc
sub
stos
imul
xor
push
or
push
das
dec
pop
stos
cdq
push
nop
hlt
fcmovnb
push
loope
inc
shl
shl
sar
mov
jns
mov
push
push
dec
test
inc
cmp
pop
mov
mov
(bad)
fnstsw
cs
cli
lods
repz
ins
jo
js
mov
xchg
xchg
inc
jae
cwde
cmp
add
std
iret
sub
sbb
sbb
shr
mov
dec
cmps
and
pop
xor
xor
add
test
jb
mov
jg
inc
mov
shr
xchg
pop
mov
ins
add
xor
popf
aam
jb
sbb
push
mov
arpl
data16
call
icebp
mov
push
retf
int3
nop
sar
adc
stos
and
dec
repz
dec
push
into
outs
ror
mov
inc
adc
(bad)
fild
pop
pop
push
xor
pop
jl
movs
pop
or
mov
dec
inc
mov
and
(bad)
jmp
push
jecxz
arpl
push
in
jns
inc
push
dec
aaa
sub
into
imul
hlt
dec
cmp
test
cmps
jecxz
retf
inc
popa
imul
or
into
or
and
std
push
add
js
(bad)
mov
int3
mov
push
call
inc
aaa
out
(bad)
jp
adc
pop
push
scas
push
sahf
and
pop
loope
out
push
sbb
jo
xchg
push
xor
cwde
ret
or
dec
sbb
popa
mov
mov
dec
adc
add
push
or
lods
and
push
sahf
sub
idiv
add
mov
pop
and
sub
cmps
retf
jne
mov
or
cmp
mov
in
ret
cwde
leave
retf
bound
add
xchg
xchg
dec
mov
jns
adc
push
movs
and
cmp
push
sti
inc
(bad)
pop
cmp
mov
sub
add
mov
adc
(bad)
(bad)
dec
dec
repz
xchg
xchg
jb
mov
iret
mov
movs
addr16
jb
push
inc
adc
addr16
int3
popf
xor
dec
pop
adc
jnp
mov
mov
adc
ja
imul
sbb
pop
imul
pop
cmps
pop
je
retf
sbb
sub
add
stos
mov
bound
mov
mov
mov
push
mov
repnz
mov
out
pop
jg
test
addr16
add
mov
inc
rol
retf
outs
sub
fsub
pop
iret
or
adc
(bad)
mov
and
dec
movs
inc
loope
outs
inc
loopne
out
cmp
mov
ret
and
movq
adc
mov
in
jae
bound
jge
inc
sbb
mov
pop
pop
ret
(bad)
push
inc
adc
cli
push
outs
cld
scas
cmp
sbb
inc
test
js
adc
retf
call
pop
out
sub
sbb
cdq
test
jmp
cmps
push
and
popa
fild
jl
cdq
imul
jbe
cdq
in
sar
rcr
jg
bound
adc
push
int3
mov
mov
fucomi
mov
pop
sub
jp
mov
or
pop
lods
jo
mov
jnp
jl
push
inc
pop
movs
or
inc
das
pop
mov
mov
cli
jle
out
inc
aam
mov
adc
loopne
mov
or
cwde
fisttp
std
popa
cmp
pop
shr
pcmpgtb
mov
xor
popa
data16
jne
jnp
xchg
outs
js
pop
or
ins
jle
nop
push
out
xchg
pushf
jo
xor
out
xchg
sub
mov
push
ret
aad
fs
cli
sahf
out
inc
xchg
xchg
or
dec
sbb
mov
fmul
inc
ins
inc
imul
lahf
jmp
in
push
cmp
adc
push
jmp
call
ja
in
inc
jnp
aam
push
xor
adc
inc
mov
test
cmp
cmp
mov
push
xchg
mov
push
mov
mov
add
jb
push
enter
push
cdq
aaa
and
(bad)
jns
push
add
mov
pop
push
fcmove
adc
inc
test
outs
lahf
sub
and
inc
inc
xchg
jo
rcr
jbe
fucom
es
xchg
or
frstpm(287
mov
jmp
mov
out
int
ficom
frstor
sub
and
adc
int3
adc
sbb
pop
in
cmp
rcl
data16
bound
cmp
mov
aaa
push
mov
xchg
jno
mov
(bad)
fcomp
pop
adc
sbb
dec
or
iret
stc
das
inc
ins
rol
scas
outs
lahf
pop
jecxz
es
add
adc
or
push
push
jno
ds
sahf
push
pop
imul
in
mov
and
cmp
add
dec
sub
in
das
loopne
xchg
js
sbb
daa
pop
sbb
nop
add
and
movs
and
aas
std
jo
daa
xor
mul
mov
adc
dec
mov
retf
not
test
push
jl
adc
push
dec
jbe
jmp
and
push
add
dec
xor
ror
ror
add
cld
lock
std
leave
lea
mov
shr
jge
sub
mov
pop
in
les
jno
scas
mov
ror
in
push
fisubr
ja
xrelease
rol
sub
xlat
cli
sbb
retf
pop
jmp
lock
dec
in
mov
cmp
xchg
loopne
stc
stos
fcmovnb
rol
jg
inc
adc
and
mov
mov
or
mov
and
mov
dec
cmp
in
test
(bad)
adc
fs
and
push
jae
aas
pop
pushf
outs
ficomp
hlt
cwde
sbb
clc
loope
xlat
or
adc
jb
cmp
and
int
inc
cmp
cmp
out
adc
call
mov
es
pop
rcl
or
push
test
mov
push
push
loope
jb
sub
lods
mov
mov
cmp
sub
mov
cli
mov
je
idiv
mov
retf
or
inc
inc
cmp
dec
lock
sar
sbb
ret
loope
lds
pop
dec
cmp
(bad)
xor
cmp
(bad)
push
adc
(bad)
sbb
xor
push
adc
xor
push
xchg
dec
movs
mov
mov
in
in
jae
xchg
hlt
pop
jno
imul
mov
or
jbe
sbb
enter
and
shr
cmp
xor
pop
mov
mov
(bad)
xor
pop
dec
test
call
xchg
sbb
add
adc
xor
cld
jne
xchg
clc
stc
fnstsw
shl
cdq
jbe
mov
ret
cmp
push
add
xchg
xor
das
jns
ror
mov
jae
lahf
aad
cld
repnz
out
jmp
mov
mov
sub
sub
sti
shl
cwde
pop
les
iret
test
pop
lea
jl
adc
sbb
jne
mov
lock
jle
cmp
mov
ins
ds
retf
(bad)
les
sbb
pushfw
adc
inc
mov
jae
dec
fstp
xchg
mov
jno
xchg
push
inc
pop
stc
stos
cld
mov
or
mov
mov
inc
aas
into
cwde
xlat
pop
and
xor
push
pop
iret
ss
loopne
mov
xchg
pop
fidivr
or
pusha
pop
not
jbe
jo
jo
ins
ret
push
out
ja
jnp
pop
daa
sub
out
scas
adc
jno
xor
pop
scas
nop
pop
mov
mov
cmc
mov
aad
sbb
aaa
mov
out
pop
add
daa
lods
jnp
cs
imul
(bad)
fsubr
or
ja
inc
mov
xor
jmp
push
or
mov
mov
test
cmp
sbb
(bad)
ins
pop
mov
xlat
xchg
icebp
or
mov
dec
clc
cmp
dec
fs
test
dec
and
cmp
(bad)
inc
fsubr
inc
(bad)
retf
xchg
dec
loopne
mov
xchg
out
rcl
jno
mov
pop
pop
je
sub
jb
push
jmp
push
ins
lods
and
add
inc
mov
add
push
test
(bad)
pop
enter
jnp
jmp
mov
pusha
ret
lahf
pushf
adc
jg
mov
jne
push
push
sahf
push
cli
inc
xchg
pop
repz
xchg
es
std
inc
lods
call
jg
cmps
(bad)
repz
cdq
jle
jecxz
or
imul
mov
cmp
sub
sbb
leave
mov
call
dec
adc
add
nop
ds
inc
sub
(bad)
stos
sub
and
push
mov
push
push
fild
hlt
ins
mov
push
inc
jnp
add
push
daa
mov
jmp
inc
dec
sub
ror
mov
scas
or
adc
mov
xchg
cmp
call
cmc
xor
repz
jp
fsubr
mov
popf
jmp
call
or
je
xchg
loope
movs
sub
popa
sahf
in
xor
aam
push
je
cmp
ja
xchg
lock
bound
dec
sbb
push
ins
jb
mov
xchg
and
pop
or
push
sbb
mov
mov
popf
in
in
and
push
and
xchg
jae
adc
pusha
movs
dec
jno
push
aad
inc
pusha
dec
xor
es
dec
fwait
cmp
mov
cmp
je
sbb
add
mov
pop
and
sbb
(bad)
adc
xor
cdq
and
aam
movs
call
push
inc
or
cmp
aad
xchg
xor
cmp
ins
fwait
push
mov
add
mov
pushf
jge
movs
sbb
je
sbb
sub
adc
mov
scas
clc
jmp
(bad)
jo
pushf
push
add
xor
sub
or
in
cli
hlt
pop
cdq
mov
cmp
cmps
jno
stos
pop
push
call
in
or
mov
and
js
dec
xor
ret
add
push
push
repnz
stc
fiadd
in
lahf
lock
jl
mov
das
stc
sti
or
test
in
std
dec
retf
cmp
xor
xor
jmp
or
pop
(bad)
cmp
sbb
gs
and
add
fcom
push
ja
dec
sbb
sub
mov
mov
rcr
jb
sub
fiadd
or
jb
loopne
scas
(bad)
xlat
mov
mov
jnp
clc
ja
daa
mov
cmp
icebp
sbb
mov
xor
pop
jecxz
fdiv
ins
push
gs
mov
xchg
pop
or
push
push
add
cmps
sbb
imul
push
pop
cmp
dec
add
inc
or
fwait
push
jae
call
jle
(bad)
into
pushf
scas
movs
cli
lahf
in
fxch
mov
ds
rcr
ficomp
mov
jbe
loopne
cmps
push
adc
cmp
cld
fild
mov
hlt
pop
dec
lds
fsubr
lock
movs
and
add
imul
(bad)
daa
mov
test
xchg
cmp
push
dec
and
mov
pop
cmp
jb
std
hlt
test
xchg
movs
pop
jge
add
xchg
mov
xor
xchg
sbb
bound
(bad)
xor
sbb
pop
bound
or
mov
pop
(bad)
(bad)
and
ja
inc
ja
or
sbb
or
loop
imul
add
scas
and
inc
xor
xor
adc
movs
ss
lods
mov
sbb
mov
jl
pop
jb
pop
mov
fcomp
sar
sub
cli
outs
pop
cmp
xor
mov
sbb
pop
call
or
stc
in
jb
mov
jmp
cmc
cmp
mov
pop
jge
push
mov
lds
inc
pop
xchg
mov
mov
xchg
sub
hlt
mov
(bad)
in
or
(bad)
cli
jbe
cmp
xor
cdq
push
or
dec
call
push
push
das
add
cmps
movs
sbb
fistp
sbb
adc
rcl
inc
jp
and
jnp
lock
or
adc
retf
pop
jmp
test
pop
and
je
je
loope
xor
retf
jo
push
push
xor
mov
jmp
push
sbb
jle
dec
dec
xor
arpl
int
popf
sbb
jmp
xor
pop
add
mov
sar
xchg
cld
fst
js
cmp
leave
jmp
mov
in
aas
paddsb
mov
cmp
sub
pop
pop
jb
test
add
ss
push
movsx
dec
adc
rcl
out
aas
or
cmp
sti
ja
dec
mov
adc
push
xlat
popf
ret
ins
pop
pop
leave
add
jge
cmc
int
push
push
js
aam
inc
call
fisubr
inc
out
and
mov
xchg
punpckhdq
rcr
sbb
adc
imul
test
repnz
mov
cwde
call
test
mov
in
jg
xchg
mov
mov
bound
lock
imul
and
(bad)
rcl
aad
cwde
sbb
sbb
adc
out
das
ror
and
adc
and
or
je
cs
push
clc
ret
xor
mov
inc
pop
push
xchg
inc
mov
xchg
jmp
fisttp
repz
xor
dec
retf
dec
dec
xchg
mov
xor
xchg
cmp
pusha
mov
sbb
xchg
mov
add
div
mov
sub
icebp
pop
mov
pop
jg
xchg
aaa
in
xchg
or
cmc
movs
mov
sub
xchg
imul
ins
leave
mov
inc
int
jo
clc
push
fsubr
sbb
and
push
xor
int
je
inc
imul
repz
mov
ins
fisubr
mov
in
imul
adc
mov
aam
xchg
push
(bad)
out
inc
loope
push
arpl
shr
out
push
stos
adc
mov
mov
lods
inc
xchg
xor
cmp
add
jge
jle
sar
dec
scas
push
mov
in
mov
enter
out
stos
jp
ss
fwait
out
movs
aas
sbb
push
std
cli
sbb
mov
call
pushf
iret
mov
or
out
push
movs
jmp
(bad)
outs
cld
ins
xor
dec
inc
ret
adc
out
lahf
mov
in
fldcw
push
cdq
mov
push
mov
cmp
push
push
jo
sbb
out
fist
pop
mov
ins
neg
sbb
ja
push
int
push
jge
aad
ret
ins
mov
outs
xor
in
jge
outs
sub
cmps
daa
mov
adc
jp
mov
into
fisub
aas
jb
ds
push
or
xchg
sahf
mov
sbb
daa
(bad)
out
mov
mov
mov
or
cmps
adc
jne
out
push
leave
(bad)
repz
std
push
mov
xor
icebp
out
lods
pop
dec
push
outs
fcomp
and
inc
lea
bound
mov
loopne
sbb
test
sti
jb
push
jmp
mov
pop
or
leave
fsin
aad
pop
daa
mov
sub
cmp
stos
and
ss
inc
retf
jle
lods
bswap
or
inc
shl
sahf
ficomp
mov
sti
out
cmp
adc
sti
mov
pop
xor
mov
sub
pop
xchg
das
mov
push
jle
lock
or
mov
add
inc
push
cs
and
xchg
comiss
es
sbb
call
fistp
ds
add
and
cld
test
popa
inc
mul
add
jns
pop
xchg
pop
in
ds
ss
xchg
pusha
stc
lahf
pop
clc
xchg
sar
out
push
call
test
sbb
imul
mov
or
mov
cwde
jo
and
pop
gs
pop
retf
mov
jp
jae
dec
adc
mov
add
shr
sub
adc
lock
pushf
sub
xchg
sub
stc
(bad)
cdq
or
imul
or
cmovns
push
mov
jecxz
ins
retf
in
jmp
pop
mov
test
and
cmp
push
test
push
inc
shl
cmp
jne
mov
mov
jmp
sahf
adc
jb
movs
jge
jae
aad
mov
in
cli
inc
cmp
sti
hlt
and
cmp
icebp
push
inc
in
mov
mov
arpl
inc
add
sar
inc
mov
fistp
adc
pop
(bad)
sbb
lock
sahf
dec
ret
movs
scas
or
xlat
mov
out
(bad)
mov
cmp
push
pop
push
and
test
push
jne
popf
shl
pop
hlt
hlt
inc
lods
aas
add
xor
fsubr
jne
mov
outs
mov
add
outs
out
xor
mov
fnsave
xchg
gs
ret
xchg
cmp
retf
dec
adc
cwde
out
stc
nop
hlt
adc
pop
dec
cmp
ret
cmp
mov
clc
cmp
ins
sbb
inc
lods
test
and
fsubr
inc
or
add
xchg
xchg
push
sbb
or
xchg
fsub
(bad)
sti
cmps
retf
aam
and
push
mov
inc
es
and
sub
inc
sub
or
cmps
xor
outs
sub
jecxz
pop
inc
cmps
ins
push
cld
ror
repnz
stos
int3
retf
cmp
dec
imul
outs
dec
std
pop
rcl
aas
add
xchg
repnz
pop
adc
xor
xor
rcl
add
dec
inc
cmps
sub
pop
push
loopne
xchg
cmp
das
dec
or
push
fmul
mov
add
out
inc
fs
add
je
cmc
dec
in
ss
add
shl
and
or
xor
sub
cld
xchg
xor
jg
cmp
test
push
inc
mov
scas
cmps
out
sub
vpminsw
and
aam
pop
cli
add
add
ret
stos
mov
jne
ret
mov
mov
xchg
sub
out
stos
nop
cmp
cmps
rol
xchg
leave
(bad)
jmp
lahf
stos
test
sbb
dec
(bad)
(bad)
pusha
jne
and
test
or
mov
sbb
jb
stc
(bad)
repnz
push
ins
fldcw
inc
aam
repz
sub
jmp
mov
test
or
adc
mov
lods
lds
sub
add
mov
and
in
pusha
or
mov
movs
aad
in
enter
dec
mov
adc
xor
retf
and
mov
jmp
imul
sbb
or
scas
pop
icebp
push
inc
mov
pop
lods
mov
add
mov
scas
popf
repnz
stos
push
stos
mov
dec
and
inc
lock
in
adc
mov
sub
or
mov
sub
jl
lods
sbb
pop
mov
fbld
or
std
dec
dec
inc
inc
mov
(bad)
aam
loopne
and
enter
mov
movs
mov
mov
sbb
mov
movs
popf
ficom
mov
sahf
ds
sbb
inc
cwde
add
mov
adc
in
fcom
cmps
jb
xor
add
test
movs
dec
jb
pop
push
popa
or
scas
push
aaa
stos
stc
inc
sbb
xor
aaa
inc
inc
lds
into
(bad)
ffreep
bnd
jns
fimul
cmp
aas
sub
sub
jp
int3
mov
xor
movs
xor
cmc
xchg
xchg
sub
(bad)
movs
das
outs
pusha
or
ficomp
mov
aad
test
daa
mov
jb
push
xchg
out
or
ror
scas
pusha
and
and
jl
lds
xor
xchg
push
mov
push
ja
mov
mov
sub
inc
cld
jno
gs
push
sbb
push
xor
jle
and
add
sbb
xor
jmp
hlt
out
xor
mov
sbb
clc
in
stos
push
xor
cmps
xchg
lods
out
mov
ficom
loop
pop
add
adc
xor
or
stos
shl
push
(bad)
sub
gs
xchg
inc
add
aad
push
xor
pop
outs
or
push
scas
xor
inc
or
in
repz
aas
mov
mov
pop
cmp
(bad)
inc
jmp
mov
adc
dec
xor
fidiv
xor
and
sbb
mov
mov
inc
adc
call
dec
lock
out
or
jmp
lea
sbb
data16
mov
mov
jmp
or
sub
cmp
or
xchg
lods
dec
in
pop
mov
js
arpl
jecxz
xchg
sub
cli
gs
arpl
jbe
sbb
xchg
pop
jecxz
aaa
dec
jge
mov
sar
or
shl
pop
push
out
outs
mov
dec
test
or
jne
pop
repnz
pop
cmp
mov
ss
mov
jbe
xchg
push
sub
jae
sti
mov
cmp
aaa
mov
cmp
rcr
sbb
js
and
mov
mov
push
repnz
xchg
mov
mov
push
and
int
push
inc
or
in
lods
push
mov
pop
sub
nop
aas
push
xor
clc
jl
pop
add
test
sbb
outs
aaa
out
xchg
sar
push
mov
add
mov
inc
mov
dec
cmps
aad
inc
fcomp
jae
adc
inc
stos
mov
jnp
cmp
pmaddwd
pop
(bad)
push
or
mov
lahf
jp
jno
jmp
pop
retf
push
xor
addr16
jno
outs
aas
add
(bad)
mov
stos
or
xor
loope
cwde
icebp
cmp
mov
fs
cmp
jge
jp
aad
ins
dec
nop
into
icebp
xor
cdq
lahf
jb
nop
sbb
xor
pop
icebp
or
or
mov
add
dec
pusha
push
(bad)
ficomp
and
fistp
pop
mov
mov
xchg
add
loope
je
pusha
mov
je
or
cmp
mov
add
push
out
pop
push
dec
nop
jae
mov
shl
mov
xor
int3
cmps
cwde
sbb
push
adc
fndisi(8087
sti
jbe
add
stos
xchg
test
hlt
fdiv
repnz
or
popf
dec
adc
push
xchg
sbb
xchg
dec
ds
arpl
fwait
call
cdq
adc
inc
loopne
nop
rcl
pop
xor
cwde
sub
push
mov
xor
(bad)
je
pop
cmp
jp
sbb
and
xchg
xor
adc
jl
jecxz
inc
mov
sub
dec
lea
and
adc
mov
and
(bad)
adc
arpl
jmp
dec
sbb
in
or
jmp
mov
add
dec
test
add
sub
mov
ret
adc
mov
fadd
push
fbstp
out
mov
jle
mov
fdivr
mov
in
punpckhdq
or
dec
(bad)
nop
leave
jno
xchg
ja
sbb
push
jo
(bad)
push
jae
cld
aaa
mov
jecxz
cmp
lods
popa
out
cwde
fdivr
xor
ret
mov
adc
in
xchg
sub
dec
sub
push
scas
add
mov
enter
push
jae
jecxz
mov
nop
inc
add
xchg
loop
icebp
push
outs
addr16
sub
xor
(bad)
mov
out
in
mov
sub
adc
pop
mov
push
ja
push
mov
sub
rcr
pop
leave
push
sahf
push
or
sbb
lea
call
or
add
imul
shl
fild
push
or
cmp
dec
aas
cmp
cli
lods
pop
xchg
push
out
iret
pop
stos
xchg
test
fisttp
cmc
scas
fstp
mov
pop
cs
int
(bad)
int3
mov
or
(bad)
fst
xchg
mov
inc
lods
mov
fwait
mov
inc
push
push
fld
push
add
(bad)
push
shr
scas
js
(bad)
jge
loope
imul
cld
loope
repz
xchg
and
fwait
xor
popa
sub
loope
adc
and
inc
sub
mov
ror
fcom
not
cmp
sbb
dec
dec
jle
je
daa
pop
xchg
leave
cmp
idiv
in
arpl
push
sbb
cmps
in
and
xchg
popa
inc
imul
fild
dec
dec
gs
pop
mov
xchg
or
jecxz
lea
movs
mov
dec
mov
jl
or
adc
and
xor
cmp
add
fdiv
jp
mov
jnp
sbb
clc
rcl
push
mov
test
xchg
fld
shl
mov
mov
pop
sub
inc
mov
call
aad
cmp
xor
fs
dec
adc
sbb
cs
sbb
inc
outs
pushf
xchg
xor
xor
jg
sub
ret
dec
in
push
fisttp
xchg
out
or
or
or
mov
cmp
dec
fsub
sbb
cmp
stc
lods
adc
xchg
lahf
retf
lock
xlat
cdq
outs
iret
fst
push
push
mov
inc
jbe
mov
not
push
out
pop
jo
inc
cmp
or
enter
and
loopne
das
shr
sub
ds
xlat
mov
loope
pushf
or
(bad)
(bad)
in
jae
shl
sbb
sysexit
add
xor
or
jl
jecxz
movs
clc
sti
(bad)
mov
mov
xchg
hlt
xchg
out
mov
aas
cld
rcr
add
adc
and
push
jns
add
sbb
mov
jo
fbstp
icebp
xchg
jno
pop
(bad)
std
outs
mov
in
mov
or
in
pop
int3
popa
push
cmp
popa
mov
int
lock
pop
push
xchg
lahf
or
cmp
push
inc
xor
movs
and
in
imul
jle
mov
dec
mov
jmp
int
ret
(bad)
sbb
dec
add
cli
aad
int
fidiv
ins
jp
int3
in
js
fadd
repz
pop
push
adc
mov
in
aaa
jne
paddsw
outs
sbb
push
ret
xchg
or
cwde
xchg
pop
mov
dec
dec
and
cmp
das
(bad)
aam
addr16
xchg
mov
pop
inc
push
or
cdq
cmp
test
pop
jbe
rol
push
mov
popf
jb
retf
mov
push
in
stc
outs
fiadd
jb
mov
stos
sbb
inc
(bad)
push
inc
mov
stos
fwait
call
jae
mov
cli
mov
out
pop
adc
fistp
fimul
push
mov
mov
test
dec
fld
push
aad
cwde
leave
stos
gs
sub
and
jle
les
ret
cmp
pop
push
in
in
rcl
and
test
or
push
and
sbb
in
das
sub
dec
stos
arpl
jae
bound
push
push
push
sar
jo
aam
jnp
adc
push
cmp
jg
add
aam
popf
bswap
rol
push
nop
dec
jmp
iret
outs
dec
inc
mov
and
iret
mov
ret
cdq
repz
mov
xchg
sti
adc
sbb
and
mov
shr
mov
cld
push
mov
popa
mov
push
jmp
inc
add
stc
call
aaa
or
push
sub
adc
ss
inc
pop
sub
sbb
daa
push
xor
lock
sbb
cmp
loope
lods
seta
sbb
cmp
clc
pop
dec
iret
add
mov
std
daa
xor
loope
or
test
shr
retf
aam
mov
into
pop
mov
in
mov
mov
xchg
faddp
cmp
je
push
mov
inc
xor
out
xlat
aam
push
push
jnp
sbb
dec
cmp
mov
jnp
and
add
es
and
rcl
add
(bad)
sub
ins
mov
xchg
sbb
xchg
icebp
ret
xchg
retf
push
addr16
dec
push
ficom
cdq
aam
jbe
adc
sbb
inc
cmp
out
clc
repz
je
shr
and
inc
lods
call
adc
push
out
push
sti
mov
out
jmp
fsubr
ja
and
xor
movs
imul
mov
adc
add
xchg
push
mov
cmp
xchg
xchg
mul
cvtps2pi
cmp
test
(bad)
jbe
push
pop
adc
pop
or
mov
fdiv
add
in
addr16
imul
fist
adc
or
test
mov
gs
xor
popf
mov
add
dec
(bad)
(bad)
fimul
sbb
mov
into
xlat
jmp
push
and
repnz
sahf
xchg
in
(bad)
jmp
jb
int
ds
inc
push
sub
pop
jmp
das
and
dec
or
inc
outs
jo
shr
mov
in
sti
xchg
stos
sbb
in
lahf
xor
out
xchg
and
add
enter
push
mov
stc
fs
stos
sti
shl
call
pop
jns
rol
jno
cmp
adc
(bad)
push
aad
adc
fimul
call
ret
pushf
sbb
stos
or
popf
mov
mov
xchg
inc
push
adc
aaa
jno
sub
les
cmp
sbb
xor
cwde
icebp
add
movs
scas
sbb
sub
inc
fidiv
retf
sub
jnp
pop
movups
xchg
adc
and
inc
sbb
outs
dec
jae
in
lods
push
or
mov
nop
fcomp
inc
and
xchg
sub
in
clc
add
push
mov
icebp
xchg
popf
outs
add
and
rcl
out
xchg
(bad)
mov
jbe
mov
mov
push
sbb
jns
or
inc
packuswb
lock
arpl
out
push
aam
ret
dec
sub
out
push
push
pushf
scas
fist
push
and
call
pop
xlat
arpl
lock
adc
sbb
loope
idiv
mov
adc
in
daa
xchg
sub
je
xchg
fld
in
dec
sub
(bad)
push
scas
sbb
ins
or
lock
xor
jbe
dec
sbb
call
into
inc
mov
xchg
inc
inc
add
jge
jb
sub
mov
shl
jmp
mov
sbb
sub
push
jg
int
sub
mov
cs
pop
out
push
mov
pushf
and
pop
push
ret
xor
ins
pop
lds
push
inc
es
xchg
aad
inc
in
je
scas
mov
rol
xchg
add
cmp
or
xor
jns
inc
or
mov
sbb
and
jecxz
rol
xchg
ins
mov
pop
retf
and
cmp
sbb
leave
inc
mov
in
in
cmps
shl
test
mov
rol
mov
lea
cdq
fdivr
inc
cdq
call
adc
push
shl
mov
sub
cmps
pop
div
aaa
(bad)
mulps
inc
mov
shl
lahf
aaa
push
pop
(bad)
and
add
sbb
xchg
pushf
inc
or
out
daa
sub
pop
jbe
imul
shr
jle
aas
sub
jnp
add
sbb
out
cmp
mov
adc
outs
(bad)
push
sub
jl
dec
movs
jae
js
adc
inc
and
pop
popa
mov
fnsave
cmps
mov
fist
cs
and
stc
xchg
int3
mov
push
add
jmp
ror
pop
retf
out
pop
cmc
test
sub
cmp
ror
and
aad
xor
inc
aas
nop
mov
fdivrp
cmp
(bad)
inc
mov
fsubr
fwait
push
cmps
adc
mov
bnd
cmp
sbb
sar
aaa
mov
div
fwait
and
sbb
pop
call
in
mov
jb
push
popa
dec
or
test
add
push
jae
or
(bad)
mov
inc
xor
out
mov
dec
shl
xor
daa
mov
jg
push
aam
mov
popa
aam
inc
data16
mov
cmps
sub
push
mov
mov
outs
(bad)
pusha
pop
gs
xchg
mov
ret
mov
pop
mov
jmp
(bad)
pop
mov
arpl
sbb
das
call
cmp
mov
jg
mov
cmp
sbb
inc
cmp
jmp
shr
iret
outs
out
enter
pop
lods
in
pop
cmp
inc
jb
stc
jb
mov
test
cdq
rcl
mov
mov
xor
pop
mov
fstp
and
inc
data16
sahf
aaa
push
inc
adc
mov
test
mov
dec
sbb
sub
xchg
mul
sti
xor
(bad)
idiv
mov
std
retf
in
enter
lea
js
push
sub
mov
movs
or
out
adc
in
adc
repnz
sbb
shr
inc
dec
jb
imul
inc
cwde
pop
sub
je
test
mov
cmp
in
mov
pusha
jno
gs
cwde
pop
out
(bad)
jb
shr
dec
gs
aas
mov
call
push
xchg
lods
jmp
inc
mov
(bad)
push
push
dec
fild
inc
cli
movs
das
movs
(bad)
or
cld
xchg
push
test
scas
es
mov
push
and
xchg
int3
xchg
pop
jns
pop
add
cmp
sub
xchg
loopne
(bad)
cmps
lods
mov
(bad)
jno
jg
xlat
inc
mov
and
popa
outs
and
pop
dec
inc
jle
jb
xchg
jo
mov
movs
lea
(bad)
(bad)
xor
xor
push
sbb
jmp
not
cmp
ror
cmps
test
sar
js
fdiv
je
(bad)
bound
or
bnd
and
movs
xchg
leave
push
ss
iret
fdivr
cs
loope
xor
sub
jle
inc
inc
dec
mov
mov
jge
jg
xlat
push
mov
rep
out
or
xchg
add
not
ret
(bad)
enter
sub
jo
adc
sbb
add
jae
jmp
pop
mov
jnp
jmp
sub
(bad)
cdq
dec
loopne
sub
sti
sub
icebp
inc
pop
adc
ds
loopne
inc
pop
jmp
lock
clc
mov
dec
popa
js
out
jecxz
mov
repz
and
cmp
xchg
jne
adc
dec
loope
pushf
(bad)
jecxz
cmp
pop
pand
adc
push
fmul
adc
out
pop
adc
fdiv
pop
sbb
push
jns
jne
mov
sub
and
pusha
pop
inc
pop
jle
loope
cs
sub
in
dec
add
leave
dec
sahf
cmp
add
aad
push
mov
inc
(bad)
mov
ins
add
inc
cmc
out
dec
dec
cmps
loop
sbb
bound
jl
and
fcom
xor
cld
dec
outs
mov
icebp
xor
aad
mov
fbstp
cli
sahf
push
inc
out
cmp
ins
fcomip
sar
cwde
rcl
rcl
popf
in
fdivrp
and
(bad)
out
jmp
inc
aam
mov
fbld
and
mov
xchg
dec
adc
mov
pop
mov
or
adc
push
pushf
adc
pop
pop
int3
lock
and
adc
cmp
push
adc
xchg
dec
in
inc
push
idiv
xchg
pminub
(bad)
and
shr
aas
shl
aam
into
lock
sub
ret
xor
int
mov
xlat
dec
sbb
fist
mov
mov
(bad)
push
cmp
stos
dec
sub
std
loope
fcomp
pop
stos
int
mov
(bad)
ins
loopne
sbb
rcl
xchg
movs
(bad)
(bad)
adc
repz
jbe
out
jg
imul
daa
scas
xchg
dec
cmp
mov
jae
cld
imul
cwde
adc
sub
push
loop
push
fnsave
jg
pop
pop
lea
jp
stc
call
dec
scas
inc
or
cmp
aad
mov
pushf
push
add
pop
mov
fs
or
test
daa
mov
push
call
cmp
fs
cli
jmp
and
shr
mov
inc
mov
sbb
jmp
push
stc
jmp
retf
pop
xchg
gs
ret
mov
aaa
in
jle
mov
push
jbe
aaa
push
les
test
fs
cmc
test
movs
inc
stos
(bad)
or
jb
daa
xor
(bad)
or
sub
push
or
xchg
inc
arpl
pop
retf
daa
sub
and
pop
and
arpl
test
mov
mov
xchg
or
add
or
xor
into
popf
mov
repnz
int
retf
xchg
loope
sbb
pop
das
lock
(bad)
(bad)
mov
scas
das
mov
iret
xchg
lods
imul
jbe
or
fwait
lods
cwde
adc
add
test
imul
ss
(bad)
cmp
rcl
popa
ds
xchg
cmp
(bad)
ins
jns
fwait
xchg
in
lea
aad
and
mov
test
test
add
jle
inc
sbb
test
inc
mov
push
dec
mov
and
dec
add
and
sub
loop
pop
rcr
out
in
(bad)
mov
aas
pop
mov
out
and
ins
fsubr
mov
xor
pop
movs
xor
push
mov
mov
xchg
and
pop
push
aam
xor
test
ds
iret
into
test
fcomp
icebp
add
dec
mov
push
pop
jnp
or
hlt
sbb
inc
inc
adc
push
outs
sub
mov
jb
(bad)
xor
iret
xchg
dec
mov
arpl
dec
(bad)
dec
sub
xchg
mov
popa
mov
out
in
and
cli
out
lock
jmp
sti
lods
pop
aad
loop
fcom
inc
sub
mov
loopne
mov
popa
jmp
clc
rcl
ffreep
bnd
test
in
xor
sub
push
sbb
or
imul
lock
cmp
xchg
xor
add
or
aad
and
sti
inc
movs
or
test
jp
pusha
retf
jecxz
aam
test
(bad)
vpminub
iret
push
xlat
xchg
frstor
pop
xchg
jno
sbb
jl
dec
bound
shr
xchg
mov
into
je
sbb
jae
mov
mov
mov
fidiv
ins
cmp
and
imul
xchg
and
cs
jb
cmp
shr
stos
fwait
xchg
lods
pop
dec
in
sahf
push
cmp
pop
push
(bad)
mov
sub
push
mov
aas
adc
adc
ins
popa
mov
jge
pop
adc
jmp
cld
(bad)
ds
and
jmp
int
mov
and
bound
iret
fs
dec
add
fcomp
mov
ss
xchg
movs
ja
test
jns
pop
push
int
mov
in
fstp
imul
or
ds
and
fcomp
pop
jg
xor
pop
dec
or
outs
mov
add
dec
scas
dec
ficomp
jbe
jmp
mov
les
rcr
scas
mov
fs
jae
jecxz
ins
dec
imul
in
dec
popf
jp
les
jecxz
lock
cmc
hlt
je
push
sar
lods
mov
pop
fld
lock
(bad)
(bad)
scas
sbb
stc
and
xchg
and
int3
mov
mov
push
mov
ins
xlat
xor
jmp
and
int
push
add
ds
add
test
push
adc
sahf
jge
sahf
xor
mov
cmp
test
dec
jp
mov
jns
fcmovbe
cli
and
push
ds
push
fnstcw
fmul
xchg
or
push
dec
cld
jb
movs
jmp
xchg
push
je
cmp
xchg
mul
mov
inc
dec
or
daa
das
adc
hlt
das
inc
sub
fmul
or
xor
jge
jb
jl
fld
sbb
push
(bad)
pop
sbb
cs
dec
xchg
jmp
push
int
adc
mov
push
jae
sub
ret
mov
pop
cwde
or
and
push
shl
imul
mov
pop
test
jnp
and
das
mov
jo
jo
fisubr
push
call
lock
and
mov
dec
xlat
dec
push
(bad)
mov
inc
sbb
inc
dec
mov
fnsave
push
mov
sbb
jp
sub
out
leave
daa
call
jno
add
adc
(bad)
ret
test
sbb
pop
dec
or
movs
add
daa
adc
lock
jns
xchg
jg
es
inc
add
fist
test
mov
pop
xchg
(bad)
xor
mov
stos
pop
jns
and
int
repz
mov
push
repz
adc
call
aad
mov
cmp
pop
adc
ret
in
(bad)
cmp
pop
sub
ss
in
add
jb
add
shr
cmp
add
outs
add
xor
add
(bad)
xchg
ins
mov
ins
mov
jno
nop
hlt
fwait
loop
mov
movs
or
cld
mov
es
and
enter
mov
inc
jge
iretw
mov
xchg
lock
test
mov
xchg
dec
shl
dec
push
xor
daa
cmps
mov
popf
arpl
std
popf
popa
(bad)
in
shr
pop
std
in
sub
mov
adc
(bad)
pop
out
std
scas
imul
inc
shr
js
xor
add
sti
repz
mov
xor
inc
mov
mov
xchg
mov
xor
jp
cld
pop
outs
sbb
repnz
addr16
addr16
mov
jge
inc
adc
dec
dec
jg
pop
pop
iret
ds
test
addr16
mov
mov
add
ins
mov
js
ror
and
sti
cmp
xchg
stos
in
inc
sbb
push
mov
sub
cmp
popf
add
stos
push
(bad)
out
pop
fwait
inc
ror
scas
sahf
xor
shr
in
addr16
jp
in
or
ins
mov
push
sti
pop
lods
jle
int
mov
mov
shr
mov
lahf
stos
in
aas
or
mov
push
std
xchg
rcr
jg
shr
sbb
inc
dec
xchg
mov
or
sbb
jp
push
inc
jns
dec
lea
fcom
xor
mov
jle
jae
add
clc
loop
int
mov
enter
sti
pusha
push
imul
mov
xlat
xor
out
aad
pop
adc
cmp
lea
jge
and
ret
out
call
pop
ins
aas
inc
pop
and
xchg
mov
repnz
jle
rcr
jb
pop
int3
jmp
jle
pop
popf
and
xchg
int3
jb
retf
and
push
test
jb
scas
out
stos
jnp
inc
sbb
std
aam
inc
stos
cmp
or
push
mov
stos
lock
inc
or
(bad)
imul
cmp
scas
jo
cdq
adc
movs
scas
(bad)
fisubr
push
sbb
sbb
imul
jmp
mov
mov
or
aaa
adc
cmc
ret
fbstp
jge
mov
aam
inc
fst
dec
pop
fstp
leave
jmp
push
pop
push
rcl
cmp
test
push
imul
xlat
cli
ins
xchg
inc
add
fild
sub
jl
stc
xchg
loopne
mov
add
or
iret
add
push
add
sahf
or
xchg
mov
mov
jp
sub
push
add
pop
pop
mov
cdq
je
jns
xor
cdq
xchg
bound
das
loopne
push
int
xchg
stos
cdq
lods
es
inc
xor
test
(bad)
mov
pop
retf
loopne
sub
ins
jp
(bad)
test
xchg
ret
jnp
pop
push
add
leave
scas
xchg
mov
jmp
scas
test
push
and
adc
ficomp
jmp
dec
enter
mov
push
pop
lds
or
fimul
lock
push
daa
sub
dec
(bad)
mul
push
movs
out
fcmovb
fmul
or
mov
leave
lods
jp
mov
mov
cmp
or
sti
push
jmp
(bad)
dec
inc
std
clc
adc
cmp
(bad)
sub
push
mov
sbb
leave
lahf
pop
xchg
stos
xor
sbb
in
ss
sbb
and
lds
mov
ror
jp
ds
inc
(bad)
pop
pop
xchg
outs
fadd
test
push
ja
inc
pusha
stos
cmp
jmp
cmp
mov
lds
imul
loopne
inc
xor
int
jb
je
mov
and
sub
out
mov
dec
xchg
outs
adc
sub
popf
sbb
and
xchg
in
jns
mov
xlat
mov
pushf
nop
test
sbb
and
stc
shr
lea
or
jmp
fidivr
inc
js
mov
aam
push
pop
or
ret
xchg
stos
cmp
inc
test
push
fild
stc
mov
cs
lock
inc
jb
jmp
int
retf
(bad)
call
push
gs
jge
cmc
push
fmul
xchg
in
pop
push
or
push
sub
or
push
add
dec
sub
clc
(bad)
xchg
cwde
cvtdq2ps
sbb
aad
xor
jae
add
jo
into
mov
fs
fwait
retf
ins
add
repz
rcl
repnz
(bad)
sar
ins
jo
adc
inc
cmp
inc
mov
xchg
fistp
xchg
cmp
pop
xor
ret
adc
ret
pop
sub
arpl
punpckhwd
addr16
jno
mov
push
cdq
mov
or
test
inc
rcr
repz
add
pop
cmps
and
jnp
push
xchg
movs
mov
pushf
jnp
and
sub
add
aas
sahf
inc
ins
jae
adc
jp
scas
xchg
jbe
into
mov
pop
rcr
idiv
fcomp
dec
mov
es
jae
aas
xchg
jmp
loop
pop
scas
(bad)
out
xor
add
xchg
cld
(bad)
out
dec
xlat
inc
imul
lds
jno
mov
push
ret
ja
mov
call
or
mov
scas
addr16
inc
push
stc
xchg
sbb
fisubr
jae
mov
xchg
jp
cmps
stos
lock
or
sub
jns
dec
fdivr
std
dec
mov
mov
loopne
cmp
std
pusha
inc
call
ficomp
xor
jbe
mov
inc
push
adc
scas
jmp
jb
cmc
or
call
xlat
adc
push
or
(bad)
push
(bad)
adc
jo
stos
cld
lds
add
imul
dec
pop
ds
mov
add
mov
or
xor
ins
mov
xlat
retf
inc
test
cmps
inc
add
adc
fldenv
add
inc
dec
out
cld
push
mov
xchg
inc
pushf
jmp
push
adc
mov
lds
iret
movs
dec
sahf
mov
hlt
(bad)
pusha
add
repnz
ds
sbb
sbb
xchg
jb
add
and
lock
push
lock
dec
sbb
pop
sbb
dec
mov
cmp
inc
jecxz
jo
jnp
fwait
mov
push
ins
sti
call
repz
and
xor
pusha
fcomp
andps
jae
aad
inc
pop
fistp
jo
push
fnsave
(bad)
ds
xor
lock
mov
xchg
leave
push
(bad)
cmps
stos
retf
lahf
mov
repnz
mov
add
test
sbb
cmp
sbb
scas
lahf
mov
jl
imul
(bad)
mov
je
mov
cmp
jb
sub
sti
shr
jle
retf
sub
sar
retf
pop
test
mov
dec
nop
sbb
sbb
adc
(bad)
xor
and
daa
or
loope
inc
call
rcr
(bad)
xchg
repnz
mov
push
retf
sbb
repz
outs
(bad)
xchg
sbb
push
sahf
rcr
test
or
add
or
pop
into
pop
xchg
mov
inc
stc
ficom
stos
adc
cmps
pop
add
(bad)
fisttp
jne
daa
push
ja
dec
cmp
adc
cmp
xor
cmps
cmc
mov
inc
mov
add
push
sbb
sub
cmc
(bad)
sbb
pop
(bad)
out
add
int3
mov
gs
push
add
jae
les
aas
push
and
js
push
pushf
jecxz
ja
inc
sbb
daa
and
xchg
daa
push
xor
mov
xlat
daa
push
lock
sbb
dec
sub
sar
mov
pop
dec
xchg
dec
int3
aas
pop
or
inc
and
add
xchg
loopne
popa
xchg
fnsave
add
shl
je
jge
test
mov
aad
dec
and
adc
mov
push
add
cli
inc
int3
push
test
adc
inc
rcr
mov
dec
inc
xchg
fisttp
lahf
imul
adc
imul
sbb
fwait
sub
stc
(bad)
in
je
inc
ret
pop
cwde
adc
and
fstp
test
push
jno
clc
jge
cmp
mov
leave
xchg
ss
enter
and
(bad)
(bad)
mov
and
std
jae
fiadd
jecxz
outs
cmps
and
sub
add
push
cld
or
adc
popf
daa
push
pop
cmp
ds
rcl
pop
and
mov
add
aas
dec
dec
test
sbb
ds
repz
sub
mov
fld
ret
jne
dec
inc
xchg
cmp
test
pop
pop
sbb
aad
push
ins
dec
mov
mov
out
call
lea
cmp
pop
fdivr
out
mov
dec
add
retf
jmp
loop
out
xor
out
pop
mov
jns
ds
retf
cmp
fld
jnp
sbb
sbb
pusha
pop
xchg
push
cmps
in
gs
push
or
pusha
ret
cld
and
outs
jge
enter
ror
(bad)
out
mov
jo
xor
xor
xchg
adc
gs
popa
xor
push
inc
push
mul
adc
adc
ds
out
int3
xlat
stc
aam
xor
pop
cwde
into
mov
out
inc
jne
push
mov
aad
scas
fstp
jae
es
and
iret
add
mov
aas
add
jmp
les
retw
int
retf
sbb
imul
sub
push
ins
fcom
pop
add
ja
lods
outs
fist
sbb
push
call
cdq
pop
out
shl
retf
ins
xor
fisubr
lods
mov
mov
xor
adc
test
ds
leave
ins
xchg
adc
outs
add
adc
jmp
jl
sub
icebp
ret
mov
adc
mov
pop
inc
cmps
inc
or
test
push
cs
cmp
push
mov
mov
push
retf
cmps
jp
into
push
xlat
pop
aad
mov
xchg
adc
pop
dec
ja
ficomp
(bad)
fadd
ins
mov
xor
call
nop
xor
sub
sbb
mov
dec
pop
hlt
loop
add
bnd
cld
add
ss
push
push
xchg
ds
sbb
cmp
jae
sbb
mov
pop
adc
pop
test
popa
or
or
je
dec
adc
mov
sub
imul
xor
pop
cmp
ja
adc
xchg
mov
enter
or
cmp
push
pop
xor
movs
das
popf
push
stc
sbb
adc
movs
mov
pop
into
inc
push
popa
jb
cld
ret
scas
repz
nop
cli
xchg
pusha
(bad)
into
push
jl
mov
rol
xor
inc
fidiv
bound
jmp
mov
test
inc
sub
sbb
pop
or
rcl
adc
inc
pop
cs
cmp
in
push
iret
xchg
jle
add
dec
pop
sbb
xlat
stc
mov
mov
mov
scas
not
in
jle
cmp
cmp
ja
mov
icebp
retf
into
cmp
iret
sub
pushf
mov
ds
and
pop
mov
js
cmp
aas
push
movs
in
push
ins
pop
js
or
xchg
ins
fmul
xor
fst
or
xchg
popa
(bad)
xchg
lea
and
(bad)
sbb
jb
add
movs
ins
cmps
mov
pop
sub
mov
dec
test
mov
rol
dec
in
push
stos
mov
adc
test
dec
push
mov
push
jg
mov
cdq
pop
dec
in
mov
aas
js
pop
cli
repz
pop
retf
push
xor
adc
add
sbb
sub
ja
mov
test
add
dec
int3
sar
and
adc
outs
arpl
xor
push
fsub
dec
push
cmps
sar
cmp
neg
sub
pop
ss
jnp
jne
outs
rol
in
sub
ror
imul
test
jmp
cld
cli
jecxz
cmp
mov
ffreep
lfs
in
dec
cmps
or
pop
and
jae
fdecstp
cmc
or
fwait
jp
ror
xor
sub
add
add
bound
jae
test
mov
xor
jmp
ror
xchg
pop
pop
add
and
cmp
out
jmp
iret
mov
inc
(bad)
aaa
mov
repnz
ret
sub
(bad)
pop
ret
xchg
lock
sub
mov
cmp
ds
out
stos
pop
imul
cld
hlt
jbe
xchg
bound
movs
push
push
pop
das
sub
dec
cmp
and
fcmovb
retf
ret
pop
cmp
cmp
xchg
daa
es
fsubr
sub
mov
test
cmp
push
xor
mov
ins
or
pop
sub
test
add
das
push
or
nop
or
in
push
in
ja
dec
add
mov
ret
stos
cmc
jmp
movs
xchg
mov
daa
or
fld
pusha
clc
retf
add
in
mov
test
pushf
mov
mov
xor
pop
jmp
dec
fs
mov
sub
test
outs
xchg
scas
xchg
or
mov
daa
or
cmps
pop
or
js
xor
retf
dec
fisttp
jne
mov
and
push
pushf
(bad)
ja
mov
dec
pushf
and
mov
jmp
je
int3
cld
inc
mov
add
mov
in
push
adc
xchg
gs
outs
mov
(bad)
jbe
push
mov
inc
test
leave
push
mov
inc
scas
fisub
mov
mov
out
out
sbb
push
cli
lods
pop
cmp
cmp
pop
lods
ins
ret
call
xor
lea
dec
(bad)
mov
jmp
pop
imul
addr16
sahf
cmp
or
mov
call
pop
pop
jo
mov
mov
jnp
push
cmp
movd
enter
hlt
xor
xlat
imul
cmps
or
sar
mov
fimul
adc
ins
mov
retf
jecxz
or
aas
mov
loop
scas
int3
xor
push
fistp
dec
sbb
xor
or
cmp
dec
push
sbb
mov
std
mov
movs
imul
(bad)
scas
(bad)
out
movs
mov
add
stc
dec
imul
nop
cmc
xchg
sbb
(bad)
push
cmp
popf
fisub
cwde
adc
mov
mov
dec
pop
inc
in
lock
or
pop
int3
sbb
add
xor
sub
push
pop
lods
push
push
sub
and
outs
out
sahf
add
call
jno
mov
int3
xchg
lds
xchg
loope
lock
(bad)
(bad)
jnp
or
mov
sbb
loopne
sar
xor
mov
clc
xlat
fcom
mov
mov
inc
test
add
ret
jmp
aad
inc
(bad)
cmps
lods
aas
mov
aaa
nop
xchg
mov
xlat
retf
aaa
sub
and
sbb
cwde
(bad)
mov
dec
push
icebp
leave
push
nop
pusha
or
leave
movs
xchg
add
mov
jl
cmp
xchg
push
mov
and
aas
and
dec
fs
fnstenv
adc
sbb
push
aad
repnz
loopne
pop
push
rol
icebp
(bad)
adc
iret
cmps
xchg
jmp
xor
je
mov
popf
dec
mov
fst
jb
or
dec
jbe
movs
(bad)
cld
sar
cli
pop
push
fisubr
push
sbb
jmp
repz
fild
xchg
mov
cmp
xor
dec
push
pop
les
dec
xor
xor
mov
xchg
dec
jno
inc
jecxz
into
xor
test
out
idiv
icebp
inc
aaa
jns
(bad)
push
sbb
lock
mov
repnz
cs
dec
sub
data16
(bad)
push
clc
test
lahf
dec
sar
lods
xchg
stc
adc
lock
rcl
cli
cmp
shr
sahf
jb
les
test
leave
mov
adc
jmp
xchg
pop
arpl
pop
inc
push
sub
leave
retf
nop
lock
mov
data16
movs
mov
das
movs
push
dec
ret
mov
scas
mov
stc
fwait
cmp
xchg
lds
push
jns
mov
sti
jno
shl
int3
aam
xor
add
push
mov
sti
push
fwait
lds
or
out
dec
daa
sub
jmp
push
hlt
popa
jge
dec
dec
outs
inc
adc
mov
in
sub
dec
ss
(bad)
loopne
push
pop
push
ficomp
loopne
test
xchg
jmp
sbb
mov
or
xchg
shl
sbb
xor
fwait
sbb
mov
nop
(bad)
call
popf
cmp
cs
sub
and
test
enter
cmp
ret
mov
xor
jns
jnp
repz
fmul
lods
mov
retf
push
and
or
retf
popf
mov
loope
xchg
inc
push
in
fdivr
retf
mov
addr16
push
xor
cld
xor
xor
push
or
jno
add
mov
and
xor
fdivr
addr16
vmovsd
adc
nop
jo
je
test
cdq
cmp
or
or
fs
lds
adc
mov
xchg
daa
sub
cmp
hlt
add
pop
sub
and
out
jb
outs
les
and
mov
lea
repnz
mov
xor
(bad)
jno
xchg
add
out
add
sub
mov
cmp
pop
adc
test
mov
xchg
inc
out
fisttp
pop
pop
pop
mov
sbb
into
test
fwait
mov
jl
aaa
dec
pop
cmc
lea
cdq
fcomp
mov
ror
jp
aad
dec
adc
js
or
mov
and
test
push
mov
popa
adc
dec
inc
jmpw
add
push
fcom
inc
arpl
test
jg
mov
test
dec
imul
mov
in
jbe
mov
push
retf
dec
fisubr
jmp
dec
ins
pop
int
(bad)
icebp
xor
push
push
out
call
into
pushf
fisubr
mov
popa
outs
nop
popf
retf
mov
in
mov
jle
bnd
mov
es
xchg
mov
and
mov
cmps
mov
xchg
pop
xchg
xor
sub
lods
sub
xchg
div
in
xlat
sub
push
mov
mov
(bad)
jne
loop
pushf
xchg
or
sub
lods
scas
ja
xor
(bad)
jecxz
adc
dec
sbb
lods
retf
aam
ds
or
jne
add
es
test
mov
dec
mov
cmp
outs
or
sbb
push
xor
sbb
mov
(bad)
call
jo
retf
leave
cmps
out
cmps
loopne
xor
push
cmc
sub
loopne
jbe
xchg
sub
pusha
xchg
push
repz
mov
inc
push
push
dec
lahf
xor
mov
ds
mov
cmp
ficom
bound
pop
enter
sbb
fpatan
fst
adc
mov
jge
scas
and
push
and
push
arpl
out
ror
push
scas
jmp
mov
mov
ret
nop
add
hlt
jo
inc
scas
pop
push
lea
xlat
fwait
adc
(bad)
std
xor
ret
push
or
mov
xchg
shl
pusha
lods
repz
not
call
pop
aas
fmul
movs
ret
jp
and
in
aad
movs
dec
push
in
xor
xlat
movs
jecxz
ss
repz
mov
mov
arpl
sbb
out
mov
call
sahf
cmc
movs
mov
arpl
or
pusha
dec
push
adc
jns
adc
or
jmp
addr16
fcom
xor
push
and
fst
dec
fcmovne
push
retf
scas
in
loop
out
push
sbb
lds
xchg
add
test
ss
stos
inc
mov
das
es
leave
push
jo
mov
frstor
inc
fwait
ss
dec
mov
jne
adc
xor
ds
daa
pop
popf
es
loop
ficomp
add
repz
pop
cmp
and
dec
out
mov
sbb
enter
and
xor
div
pop
je
jne
sti
xor
xchg
je
lds
mov
aas
(bad)
retf
mov
mov
sbb
sub
xor
call
sub
pop
pop
ins
aaa
sbb
or
xchg
into
data16
stos
movs
fist
adc
ror
push
stc
popf
movs
pop
pop
daa
movs
and
outs
shl
ror
jne
(bad)
cmps
dec
scas
imul
push
aas
jbe
jno
sar
lods
jo
popa
mov
in
inc
xor
dec
dec
mov
mov
inc
fdiv
dec
dec
in
adc
sub
xchg
jb
ret
add
push
js
inc
aas
or
scas
sar
inc
dec
cmp
ret
push
sbb
ja
ror
xor
jne
fist
pusha
and
jns
jno
lea
and
repnz
rol
in
adc
pop
jne
add
sbb
jae
and
in
ds
inc
mov
inc
(bad)
lds
xchg
stos
and
out
push
addr16
outs
das
addr16
movs
fimul
jl
clc
mov
stc
pop
mov
test
or
out
inc
lock
pop
lahf
int3
out
(bad)
push
in
hlt
add
retf
loopne
lahf
aad
lahf
mov
ins
je
test
mov
imul
and
leave
inc
clc
sub
sub
sub
jmp
or
cmc
push
lds
jo
add
loopne
push
xor
xchg
xor
fld
test
push
aas
fadd
add
pop
out
pop
cmp
(bad)
stos
mov
loope
xor
xchg
sbb
or
test
cs
sub
gs
inc
loopne
or
clc
retf
ud2
cmc
jno
enter
mov
add
add
cdq
pop
pusha
inc
push
jae
mov
popf
call
imul
push
aaa
mov
inc
in
add
jmp
xor
aam
sar
adc
hlt
inc
inc
and
int3
jle
ja
(bad)
push
ins
mov
adc
out
imul
aas
out
lahf
inc
push
mov
adc
out
mov
pop
and
inc
sbb
jmp
pop
lock
xor
mov
bound
lods
mov
lea
int
mov
aam
loope
fbld
adc
call
icebp
rol
dec
fwait
and
sti
into
in
push
push
xlat
push
jecxz
jle
in
xlat
pop
cmp
test
loope
add
retf
jno
mov
scas
mov
fstp
fcom
aaa
repnz
or
data16
add
rol
cmp
jns
in
into
iret
shl
popaw
xchg
fistp
adc
jae
dec
cmp
sub
xor
fwait
mov
imul
bound
imul
push
jmp
and
in
mov
fdivr
add
punpckhdq
inc
jo
data16
cmps
sub
(bad)
push
mov
pop
add
xchg
stc
cld
sub
mov
cmp
mov
add
mov
and
movntq
ret
mov
out
es
pop
xlat
jmp
out
and
push
sbb
inc
jmp
fadd
mov
push
movs
or
inc
mov
(bad)
mov
rol
cmps
xchg
call
jecxz
push
mov
stc
mov
ja
mov
je
mov
fcom
sub
push
push
nop
xor
dec
mov
in
mov
iret
and
xchg
(bad)
jns
test
je
aam
dec
push
popa
mov
jo
sbb
lods
mov
mov
(bad)
cs
(bad)
aad
scas
icebp
cmps
bound
push
in
mov
rol
mov
(bad)
pop
or
lods
mov
cld
mov
or
hlt
imul
lock
into
or
xchg
xor
not
popa
inc
(bad)
push
sbb
xchg
aas
xor
add
(bad)
(bad)
push
repnz
cmp
dec
ret
ja
add
push
ds
test
fst
shl
popf
fmul
ins
aad
inc
or
xor
fmul
sub
out
es
adc
jle
es
adc
add
lock
mov
fldcw
fsubrp
rcl
add
and
cmp
pop
test
jne
xchg
xchg
sub
clc
mov
jo
je
addr16
and
mov
pop
sub
xor
mov
mov
enter
jbe
push
cmp
(bad)
mov
inc
retf
cmp
or
es
xor
adc
outs
sub
(bad)
push
dec
js
popa
movs
fldenv
xchg
sbb
lock
mov
push
adc
in
repnz
xor
pop
push
push
xchg
xor
iret
sbb
pmaddwd
into
mov
popa
call
call
test
(bad)
push
lahf
inc
ins
xchg
inc
sar
or
or
xor
cs
or
mov
test
fisttp
addr16
aas
popf
fild
sar
pop
mov
in
lea
loop
xchg
push
xor
es
cli
test
mov
retf
in
pop
sbb
pop
outs
shl
aam
ret
sbb
push
push
jmp
mov
ficom
push
jl
fld
(bad)
imul
in
movs
pop
push
stc
jmp
jge
pop
mov
mov
or
mov
in
enter
sub
mov
mov
pop
dec
cmp
push
xchg
int
neg
push
faddp
jge
scas
imul
mov
stos
pop
push
fcmovbe
out
nop
push
push
imul
jmp
add
dec
scas
jecxz
jbe
push
dec
std
(bad)
call
mov
sbb
enter
popa
stos
pop
push
adc
daa
push
(bad)
mov
mov
scas
xor
daa
jb
icebp
pop
cmp
cld
mov
data16
arpl
pusha
or
mov
add
(bad)
jns
dec
or
mov
movs
push
outs
stc
mov
ins
int
adc
sbb
int3
mov
sub
iret
inc
fcmovu
ret
mov
mov
add
xchg
nop
xchg
mov
and
mov
and
mov
je
loop
cmp
shl
outs
dec
loopne
jp
retf
pop
pop
and
cmp
xchg
icebp
test
cmps
sub
loope
jp
ficom
inc
xor
mov
or
arpl
pop
or
xor
in
jp
fadd
mov
adc
ja
cmc
mov
inc
pop
aas
test
rol
xor
jp
jbe
pop
push
pop
adc
push
nop
jmp
pop
add
adc
push
inc
add
adc
popf
dec
mov
cs
mov
and
popa
int
scas
test
out
mov
inc
adc
sub
adc
call
shl
in
dec
mov
shl
xchg
mov
(bad)
repz
xchg
out
sub
pop
les
lods
inc
cmp
(bad)
iret
and
jae
push
out
aam
mov
cs
rol
xchg
loope
pop
(bad)
pop
pop
push
inc
adc
push
and
xchg
call
sub
jns
dec
das
cmps
push
dec
mov
mov
out
cmc
mov
fsubr
or
jp
gs
neg
test
stos
dec
dec
or
repnz
inc
xchg
jne
gs
sahf
cmp
jle
(bad)
stos
imul
xor
fucomp
jp
loop
imul
mov
imul
mov
and
loopne
data16
das
imul
fcom
in
sbb
mov
sub
dec
aam
ins
add
cmp
sub
aad
jbe
mov
and
repz
pop
jbe
pop
fst
cwde
popa
push
cmp
fcomip
cmp
and
jno
mov
xchg
xor
push
mov
(bad)
add
out
pop
jmp
xor
add
js
jb
mov
add
lods
jbe
and
mov
adc
add
(bad)
movs
sbb
aam
sysexit
int
adc
inc
call
hlt
sub
movs
repnz
(bad)
in
push
sub
dec
mov
or
clc
(bad)
imul
add
xor
adc
jmp
pop
jb
in
les
(bad)
xchg
and
in
fs
lods
mov
rol
popa
jae
sbb
jp
mov
cld
es
in
push
xor
dec
fadd
cmc
xchg
cmp
es
sti
arpl
fbld
enter
std
pop
bound
dec
sbb
fcmovnb
sar
nop
lods
xor
pop
(bad)
xchg
pop
or
push
lahf
add
ret
push
or
(bad)
in
sar
dec
xchg
loop
movups
call
push
fimul
pop
fs
dec
retf
jge
sahf
(bad)
mov
sbb
push
mov
in
bound
add
movs
dec
adc
sub
int3
dec
leave
bound
mov
or
cmp
push
push
add
test
iret
ds
(bad)
fstp
inc
daa
(bad)
dec
daa
or
ds
mov
push
retf
or
xor
cmps
xor
pop
push
jle
push
pusha
fwait
dec
fdiv
add
fadd
aas
out
ds
repnz
dec
std
or
jle
inc
enter
mov
sahf
ror
add
push
mov
pop
xchg
pop
sbb
loope
adc
jno
nop
mov
repz
jp
adc
sub
cwde
stc
retf
ud2
xor
xchg
mov
or
pop
mov
ret
adc
jl
clc
inc
lods
push
jmp
jg
or
sti
mov
jae
int
mov
cmp
in
je
sbb
xor
test
mov
addr16
push
test
xor
fxtract
(bad)
jp
push
push
shl
sub
push
cs
pop
mov
retf
xchg
imul
sub
imul
idiv
cmp
stc
retf
out
fild
xchg
mov
idiv
pusha
bound
cmp
xlat
shl
repnz
test
bound
jge
or
fnsave
iret
pop
ins
xchg
mov
pop
cmp
xlat
push
xchg
(bad)
imul
popa
xor
and
pop
adc
ret
inc
(bad)
stos
mov
mov
or
pop
push
(bad)
mov
dec
movs
leave
mov
in
mov
xchg
int
das
loop
out
dec
mov
into
out
mov
cs
pop
(bad)
ret
cmp
stos
push
lods
aas
push
push
stos
xor
movs
cmp
fs
pop
push
add
mov
je
xor
icebp
push
jmp
ins
mov
pop
and
sbb
mov
add
repnz
addr16
jecxz
out
jnp
outs
jl
fistp
(bad)
in
es
loop
ja
xor
mov
dec
idiv
pop
add
or
push
out
adc
inc
enter
push
aaa
xchg
mov
inc
js
ds
or
mov
clc
loope
(bad)
push
cmp
pop
movs
leave
push
mul
cmp
mov
mov
fdiv
pop
xor
in
mov
sbb
inc
scas
jmp
(bad)
and
jae
adc
bound
addr16
xor
sbb
iret
jno
cld
es
pop
icebp
and
ds
adc
dec
cmp
pushf
les
daa
push
imul
mov
jmp
repz
add
xchg
cmp
in
sub
scas
pop
xor
adc
inc
pop
cld
adc
sbb
jb
pop
fisubr
adc
push
xchg
jno
test
popa
and
loope
ins
mov
pop
mov
(bad)
fmul
not
outs
pusha
mov
sub
push
mov
add
out
xor
or
in
sbb
icebp
mov
mov
test
sar
xchg
popa
stos
mov
out
add
push
lea
adc
(bad)
addr16
pop
rcl
xchg
in
inc
push
push
imul
dec
mov
mov
(bad)
fisubr
test
mov
cmp
aas
fdivr
push
jp
out
test
mov
adc
xor
inc
or
push
das
sbb
ja
cmps
or
cmp
mov
aam
das
jns
add
aas
inc
shl
fs
push
les
sub
(bad)
xchg
jae
sbb
lea
rol
stc
mov
test
iret
push
xchg
loop
push
cld
fxch
sahf
xor
xchg
jcxz
retf
cs
std
int3
xchg
or
and
lods
sbb
mov
push
or
push
and
shl
cmp
(bad)
dec
retf
xor
iret
jp
pusha
arpl
push
add
sub
scas
sbb
(bad)
jecxz
idiv
jns
js
out
ret
test
push
sbb
cmc
fs
push
out
movs
test
test
call
jbe
xor
test
add
scas
xchg
push
xchg
push
mov
sti
test
mov
xchg
jne
or
inc
or
in
into
sub
dec
sbb
or
jmp
clc
ret
xchg
leave
in
and
sbb
jge
stos
daa
std
stos
xlat
sbb
cwde
jae
sub
nop
pop
mov
mov
xchg
lods
inc
dec
add
xchg
call
xor
dec
jb
(bad)
out
ins
sahf
int3
mov
jmp
jns
push
aaa
dec
mov
cmp
add
test
inc
xor
add
shr
mov
movs
in
inc
sti
mov
repz
mov
inc
fistp
sbb
xor
lds
xlat
sbb
and
push
mov
xor
in
add
sub
inc
fld
push
arpl
push
jmp
idiv
cmps
push
enter
retf
adc
movs
mov
push
fucomi
dec
call
lea
xchg
cmp
loope
or
out
or
sbb
pushf
xor
push
adc
adc
or
inc
jo
sti
jmp
dec
movs
ins
cmp
test
xchg
repz
stos
or
add
imul
and
sub
das
push
rcr
xor
stc
or
lods
fistp
push
call
popa
lods
mov
cs
mov
dec
lahf
int3
xchg
sbb
mov
aas
jbe
loop
mov
xor
adc
dec
or
jg
push
cmp
mov
imul
push
lock
sub
bound
cmp
sub
test
adc
adc
ins
cmps
retf
cmps
out
pop
jle
ins
jp
jo
cdq
xor
mov
mov
dec
iret
es
mov
mov
fisub
test
cli
pusha
test
mov
sbb
dec
push
or
cdq
jmp
or
mov
pushf
(bad)
fdiv
ficom
hlt
inc
xor
shl
outs
pop
dec
adc
and
inc
dec
jmp
cli
pop
add
shl
or
cmp
cmps
daa
cmp
fbstp
pop
or
retf
and
inc
mov
je
xchg
std
ins
add
inc
leave
pop
pop
dec
sbb
pop
xor
or
call
bound
scas
add
inc
mov
xchg
setp
je
fxch
fmul
inc
or
cli
add
ja
and
daa
ror
adc
lock
out
xchg
sbb
outs
pop
fwait
ret
retf
int3
mov
push
ja
fisub
scas
push
add
imul
cmps
pusha
stc
dec
mov
popf
(bad)
mov
dec
dec
aas
pushf
out
sbb
sub
mov
inc
sub
call
retf
int
xor
bound
sti
dec
mov
xor
inc
data16
adc
nop
add
add
adc
jae
fs
(bad)
jae
into
sub
cwde
enter
inc
cmp
sbb
mov
fcomp
dec
outs
clc
retf
rcl
sub
cld
dec
scas
sbb
(bad)
(bad)
push
and
jb
xor
les
jae
xchg
mov
and
and
mov
or
xchg
ins
mov
dec
out
mov
test
jno
cld
cmp
and
dec
lods
add
cmp
push
pop
hlt
or
bound
adc
pop
adc
in
jp
in
in
push
aam
sub
hlt
jb
int3
or
push
push
mov
mov
enter
and
lea
inc
add
mov
movs
push
std
and
fld
idiv
movs
pop
ret
int3
in
inc
je
aaa
shl
sahf
bound
retf
sbb
adc
dec
mov
ins
push
cmc
outs
aad
jae
movs
bound
in
jns
out
dec
test
popf
sub
inc
xor
ins
sub
mov
xor
cmp
fwait
xchg
cmp
cld
data16
jp
jo
mov
or
xor
dec
jne
ret
push
jbe
enter
mov
js
push
aaa
mov
jle
fist
push
(bad)
cmp
add
mov
xchg
out
xchg
sbb
sub
mov
loopne
(bad)
addr16
and
mov
and
sub
push
lds
inc
popa
lods
pushf
xor
lds
or
xchg
push
adc
cmp
jmp
test
or
rcr
adc
pop
pop
and
xchg
movs
call
inc
mov
inc
mov
(bad)
cs
icebp
jg
push
(bad)
add
sub
push
mov
fincstp
gs
add
loope
inc
test
push
add
mov
repnz
outs
xchg
pop
cwde
test
repnz
addr16
fst
sbb
inc
inc
jns
call
push
lds
cli
bound
outs
sbb
rcl
mov
sub
cmc
out
nop
sbb
test
adc
mov
and
xor
adc
(bad)
rcr
jge
pop
scas
shl
sub
cmp
in
xchg
dec
ins
jbe
adc
sbb
push
dec
popa
ret
or
add
sub
clc
into
lods
fdivr
stc
adc
jp
cmp
and
xor
clc
in
iret
dec
icebp
dec
sbb
cmps
push
cmp
lods
or
push
push
shr
ss
push
push
dec
cmp
mov
inc
and
lods
add
dec
jle
ret
cmp
cld
dec
push
jg
arpl
mov
sbb
push
mov
shl
daa
imul
pop
(bad)
mov
call
arpl
dec
adc
xchg
mov
push
fstp
mov
inc
test
fsubr
bound
mov
ror
fnstsw
mov
add
int3
sbb
pusha
ins
push
retf
stos
aad
cdq
outs
jl
pop
jmp
mov
inc
inc
repz
push
cmps
xchg
test
lock
inc
adc
mov
out
int
pop
and
bound
stos
pop
mov
test
sahf
pop
je
loope
sbb
jbe
mov
lea
lock
ins
icebp
and
inc
xchg
xlat
xchg
add
xchg
mov
fisttp
shr
xchg
scas
cmp
xor
sbb
iret
cld
mov
lods
retf
sbb
mov
iret
inc
mov
mov
ficomp
mov
les
jnp
and
outs
lock
imul
pop
add
or
fs
enter
or
mov
xor
mov
cmp
inc
mov
cli
jns
pop
cmp
jae
xchg
fisttp
(bad)
test
push
mov
xchg
ins
and
mov
outs
repnz
dec
jns
cmp
mov
enter
popfw
call
jl
jns
jne
pop
pusha
add
cmp
sub
sti
ja
scas
clc
xchg
dec
test
pop
ja
popf
xchg
mov
sti
push
and
mov
iret
leave
stos
shl
mov
cmp
into
adc
loopne
push
loope
clc
bound
out
fmul
(bad)
cli
int3
add
inc
mov
(bad)
outs
add
cmp
pop
mov
into
sbb
aad
cmp
pop
sub
xchg
xchg
inc
add
inc
dec
and
out
sbb
mov
mov
cmp
int
jns
fisttp
call
in
idiv
shr
lahf
fdivp
pop
cdq
add
mov
jae
sti
jb
inc
nop
dec
das
lods
imul
lods
lds
lds
cdq
inc
int3
push
out
shr
cmp
int3
add
add
mov
jl
popf
mov
enter
iret
and
into
xchg
sub
out
xchg
mov
nop
xor
jns
mov
clc
(bad)
test
or
push
jns
sub
mov
pop
inc
test
ds
pop
jg
add
add
mov
test
ficomp
loopne
inc
bound
fstp
pop
inc
scas
mov
adc
mov
sbb
xchg
mov
ret
movs
cmc
test
mov
sub
or
lods
cmp
(bad)
int
(bad)
in
stos
les
dec
(bad)
aam
fdiv
push
mov
leave
sub
inc
test
mov
pushf
cmp
sub
cs
adc
cmc
loope
xor
jnp
popa
mov
repnz
je
cli
sub
xchg
fst
xchg
nop
aas
cmps
(bad)
jl
sub
sar
in
and
sub
in
outs
jp
aad
jne
adc
add
and
lods
loopne
data16
scas
stos
mov
xchg
aad
lock
outs
lock
or
rol
xor
test
pop
pop
xchg
jmp
inc
push
shl
or
jecxz
(bad)
(bad)
mov
call
stos
test
mov
loop
fldenv
es
ja
sub
stos
xchg
mov
adc
adc
mov
add
push
mov
mov
cmp
pop
xchg
xchg
arpl
jno
and
jp
stos
inc
das
or
call
outs
retf
xchg
popa
jo
jno
cmc
aad
add
bound
sub
stos
sar
xchg
adc
xor
xchg
mov
or
add
rol
scas
xlat
sbb
mov
jmp
enter
push
mov
push
lock
push
jnp
jno
fcom
retf
shr
test
cmp
and
jmp
sbb
icebp
push
push
movs
cli
add
enter
push
or
cdq
cmps
cdq
outs
loope
add
mov
aas
ret
push
jnp
ss
ret
rcl
cmp
sub
icebp
bnd
pop
scas
or
xchg
mov
push
test
sti
pop
ficomp
inc
push
mov
and
dec
xor
in
jns
dec
or
je
cdq
fst
push
sbb
bound
ffree
add
pop
xor
push
divps
pop
xor
test
sub
ja
inc
call
jmp
pop
adc
sub
(bad)
lock
(bad)
and
xchg
push
jo
pop
nop
cmp
fs
stos
fidivr
pop
and
scas
sub
cwde
popf
mov
mov
mov
retf
add
jnp
mov
jb
cmp
mov
sub
cmp
or
cmp
in
jmp
repz
sub
dec
les
cwde
es
or
dec
repnz
in
sbb
adc
test
dec
ss
fsubr
dec
push
(bad)
es
test
pop
mov
fnstenv
out
in
lock
call
inc
daa
mov
(bad)
bound
cwde
aam
pop
add
div
cmps
xor
xor
xchg
cmp
push
iret
stos
icebp
sbb
pop
popf
sbb
fs
movs
xor
movs
push
adc
jmp
add
cld
imul
inc
jecxz
iret
inc
shl
and
pop
and
aam
jne
jg
dec
mov
iret
sti
test
push
push
cs
in
push
dec
add
jl
popa
pop
push
es
xor
or
cli
outs
cli
push
jnp
pop
lahf
mov
and
or
sub
inc
lahf
out
xchg
xlat
sub
in
mov
push
adc
pop
sbb
dec
add
jae
push
or
out
xchg
fs
push
fsubp
pop
aad
push
loope
lock
call
sub
aaa
cmc
cwde
xchg
or
mov
gs
jo
pop
xchg
js
add
jecxz
imul
iret
cmp
xor
pop
jecxz
and
jge
lock
imul
push
xor
mov
fisub
sbb
fwait
test
test
dec
xor
or
in
fild
sbb
(bad)
out
scas
ret
lahf
cmp
pop
in
jmp
ret
lods
push
mov
sbb
sub
test
push
movs
dec
sub
retf
test
inc
add
pop
and
adc
out
popf
mov
inc
mov
lea
dec
xor
out
and
mov
jmp
sbb
mov
jo
les
jmp
int
popa
pop
in
lea
mov
inc
and
and
push
jle
and
inc
add
mov
stos
adc
inc
int3
cmps
or
add
sbb
pop
push
inc
sbb
or
dec
ror
and
mov
xchg
popf
ds
rcr
push
leave
stos
aad
test
push
js
add
sub
xor
pusha
fistp
loop
leave
sbb
in
sahf
bound
mov
jmp
fstp
inc
push
jmp
mov
pop
mov
and
mov
scas
fadd
iret
(bad)
enter
lahf
test
stos
(bad)
loopne
cmp
inc
(bad)
push
jge
lds
std
adc
inc
xor
fldenv
cmp
stc
ror
in
add
fdivr
or
leave
dec
dec
cmp
imul
mov
and
retf
shl
jno
inc
pop
in
iret
or
inc
lahf
push
adc
retf
lea
xor
(bad)
(bad)
and
fdiv
sbb
or
push
mov
cmp
popa
mov
or
fcmovbe
rol
jnp
jmp
outs
fwait
movs
fisttp
or
int
sar
lahf
out
test
loope
or
inc
jp
(bad)
mov
jb
pop
sbb
rcl
push
push
fwait
test
cmp
mov
iret
out
(bad)
(bad)
movs
jno
mov
leave
xor
xchg
fld
add
aam
cld
ret
inc
cmp
mov
pop
ins
xor
lds
xchg
ds
dec
or
inc
adc
outs
push
loopne
sub
lea
es
loopne
sar
in
(bad)
fwait
call
push
inc
mov
loop
mov
jmp
mov
je
xchg
xchg
imul
les
inc
mov
hlt
clc
mov
mov
add
loopne
sahf
and
test
adc
push
xchg
arpl
rcl
dec
ss
lds
ja
inc
int
add
pop
cmp
or
jge
add
fsubr
sub
mov
jp
push
in
mov
fisttp
mov
dec
mov
and
cs
mov
inc
leave
sbb
fld
das
int
jbe
mov
xor
sahf
cld
sbb
aaa
add
xor
lock
push
(bad)
out
adc
es
sbb
dec
pop
xor
pop
mov
inc
into
shl
mov
add
add
inc
sub
mov
imul
mov
jnp
or
add
sahf
add
jmp
xchg
xchg
add
fst
cld
sbb
cdq
dec
ins
movs
jmp
in
ja
lock
int3
fidiv
outs
jo
outs
icebp
add
popf
cmp
movs
jns
or
push
rol
or
sbb
adc
xor
rcl
mov
repz
ror
xchg
dec
xchg
fs
xchg
mov
mov
fnstenv
enter
es
scas
dec
mov
mov
jg
push
ret
fcomp
movs
clc
pop
mov
pop
mov
imul
xchg
icebp
gs
mov
mov
mov
mov
xchg
cwde
add
(bad)
in
lods
pop
and
fdiv
loop
mov
mov
mov
mov
arpl
lock
repnz
retf
xchg
stc
dec
cmps
and
mul
popa
xchg
out
xor
mov
repnz
jb
and
sbb
cmp
cmc
stos
mov
push
lods
hlt
jns
xor
and
xchg
test
(bad)
add
(bad)
out
loope
mov
push
rol
xchg
shl
arpl
jmp
xor
jmp
stos
xor
(bad)
xor
mov
sahf
cli
int3
and
mov
mov
shl
lock
pop
sub
sbb
rcl
jne
xchg
xchg
cli
mov
test
retf
mov
adc
data16
sub
test
adc
sub
push
in
clc
sti
pop
xchg
fabs
movs
pusha
or
xchg
in
ror
retf
xchg
fwait
jg
sbb
(bad)
and
jle
jmp
mov
loope
lods
les
mov
(bad)
lds
sbb
pop
retf
push
lahf
pop
clc
cmp
pusha
jno
sub
retf
jle
push
adc
jg
loope
xchg
push
push
add
add
push
sbb
inc
mov
fs
popf
mov
ss
enter
ss
xchg
mov
sub
cmp
push
cmp
ja
xchg
xchg
add
jg
call
cmps
add
xchg
jb
pop
and
jo
mov
jl
in
sub
pop
pop
ja
cmp
stos
lea
in
pop
adc
call
mov
in
xchg
(bad)
mov
xor
xchg
mov
sahf
cmc
mov
sub
and
sar
lock
cdq
ja
jnp
add
(bad)
stos
cmp
cmp
push
in
mov
retf
and
les
adc
sub
inc
cmps
xchg
mov
push
int
mov
jge
(bad)
jmp
stos
movs
(bad)
movs
dec
je
bound
jns
out
mov
xchg
xor
dec
cdq
repz
pop
pop
and
or
adc
or
int
movs
ins
hlt
sti
int
push
dec
xchg
arpl
pop
scas
sub
cmps
ja
dec
pop
sub
leave
xchg
out
es
out
in
dec
stc
push
jmp
mov
cld
add
shr
shr
call
sbb
lea
or
push
and
and
ficomp
jp
jno
xchg
movs
dec
ins
cld
int3
fdivr
cmp
fwait
retf
pop
inc
inc
dec
cmps
int
aas
sbb
sub
iret
mov
stc
neg
daa
iret
ja
cmp
xchg
(bad)
xchg
dec
or
cld
mov
mov
pusha
fild
cs
push
bound
loop
dec
add
repnz
pop
movs
ror
mov
inc
push
iret
nop
and
ror
cmp
sahf
push
fs
fcom
test
enter
inc
fistp
jo
outs
inc
bound
popf
push
fwait
out
scas
push
xchg
push
ss
xchg
sub
inc
xlat
scas
(bad)
jecxz
das
int3
sub
xchg
stos
int3
(bad)
loop
mov
fbstp
stos
xchg
push
xchg
mov
push
xchg
(bad)
mov
je
pop
add
xchg
or
sbb
xor
rcl
cmp
ins
dec
dec
xlat
in
cmp
(bad)
push
popf
xchg
in
xor
std
or
xchg
dec
repnz
sub
shr
xor
cmps
int3
push
sti
sub
outs
adc
sbb
int
rol
pop
(bad)
mov
dec
or
sbb
sub
pop
stos
mov
pop
mov
lods
das
pop
(bad)
mov
sub
neg
cmp
sbb
mov
sbb
push
jecxz
jb
ins
jo
nop
ja
mov
addr16
pop
adc
jbe
lock
xor
adc
and
ror
jno
data16
bound
mov
push
xor
pusha
int
fild
call
movs
inc
dec
loopne
clc
retf
imul
pop
mov
push
jmp
repnz
mov
je
scas
leave
mov
leave
mov
sbb
xor
call
addr16
in
dec
jmp
mov
outs
fistp
xlat
dec
call
mov
out
cmp
mov
dec
jae
add
push
sub
jne
jl
out
lds
xor
pop
jg
jno
jns
fld
fstp
pop
jnp
xchg
ja
cmp
jge
arpl
popf
pop
outs
fisttp
adc
cmp
sbb
mov
(bad)
and
fsub
mov
aam
cmp
sub
clc
dec
cmp
inc
adc
test
cwde
repz
mov
nop
cs
push
test
cmp
inc
int3
cmp
fdivr
cli
mov
int3
fnstenv
inc
js
pop
rcl
and
idiv
das
int
xlat
sbb
and
test
pop
out
call
adc
push
sti
inc
inc
out
xchg
sub
and
cmp
stos
fld
icebp
mov
int
mov
push
imul
and
mov
test
pop
or
add
mov
sbb
leave
aaa
sbb
(bad)
leave
shr
int3
(bad)
sysexit
ja
inc
mov
outs
out
dec
fadd
(bad)
data16
ja
in
xor
sar
(bad)
and
mov
push
xor
xor
and
mov
inc
rcr
push
adc
sar
dec
jmp
xchg
mov
mov
push
cmp
test
push
aam
loopne
std
imul
pop
add
adc
jo
(bad)
lods
arpl
sub
mov
scas
jno
in
cmp
les
(bad)
and
xchg
cs
pop
pusha
pusha
lahf
xchg
push
test
outs
mov
xchg
dec
mov
sbb
xchg
dec
and
enter
cmp
dec
push
mov
sub
pop
xchg
or
(bad)
scas
sub
jo
(bad)
std
cmp
sub
sti
push
adc
stos
sbb
inc
loopne
loop
ins
pop
in
mov
or
out
or
lods
test
aaa
stos
lock
dec
jnp
jp
imul
mov
aas
adc
out
mov
xchg
xor
outs
scas
add
test
movs
mov
cmps
dec
mov
jecxz
sub
add
mov
mov
fcmovne
test
jmp
test
rcl
call
sbb
test
pop
mov
push
jl
inc
pop
cld
mov
ins
xor
dec
adc
sub
daa
dec
cli
jnp
fwait
call
add
add
imul
mov
add
in
mov
add
bound
sti
xlat
call
xchg
ins
(bad)
pushf
sbb
pop
sub
rcl
sub
scas
movs
pop
sbb
push
inc
sbb
ds
repz
xor
cmps
lea
(bad)
loopne
ret
sti
push
xor
sub
adc
add
sub
and
(bad)
cli
in
push
cmp
lods
stc
mov
sub
xchg
pop
jnp
xchg
adc
(bad)
rcr
cmps
das
and
out
sbb
jbe
outs
pop
push
mov
std
push
mov
pop
add
sub
test
push
iret
jle
jb
pop
cli
cmps
loopne
or
push
mov
in
sub
retf
imul
push
and
dec
fwait
pop
jb
paddsw
pop
popa
or
daa
xchg
xor
pop
call
xor
sub
(bad)
xchg
and
cwde
outs
jl
or
adc
sub
mov
lods
sahf
sub
mov
shl
cs
push
sub
stc
cmp
jmp
xchg
jbe
(bad)
mov
fs
fs
rcl
adc
sub
or
dec
jge
and
scas
cmps
scas
mov
lds
lock
fld
mov
push
sbb
xor
add
or
out
test
pop
cwde
lahf
jnp
lods
xchg
jecxz
inc
outs
sub
fadd
shl
pop
xchg
push
cmp
add
popa
fcom
aam
fisub
xor
xor
ficomp
dec
xchg
arpl
(bad)
cdq
popf
inc
xchg
mov
inc
cmovns
jns
int3
out
jmp
(bad)
retf
fidivr
out
xor
mov
pop
sub
data16
std
push
mov
pop
popf
mov
mov
xchg
adc
sbb
das
cmp
jo
inc
jmp
dec
mov
dec
mov
fidiv
frstor
add
fwait
cmp
mov
push
mov
adc
mov
mov
div
test
sar
inc
(bad)
int
mov
xor
out
mov
shl
sub
cmp
xchg
into
sbb
mov
cmp
jp
push
sbb
fidivr
or
mov
mov
sub
cmp
dec
push
pop
xchg
or
pop
push
rcl
pop
pop
daa
ins
stc
test
and
lock
sub
inc
ror
push
outs
popa
sub
movs
(bad)
push
push
clc
sbb
mov
sub
test
mov
lea
mov
js
inc
and
sbb
aas
and
xchg
popf
sbb
stc
mov
dec
cmps
dec
(bad)
test
pmaddwd
shr
shr
push
pushf
aaa
jmp
fdiv
mov
jbe
ror
inc
shufps
jge
(bad)
enter
mov
mov
mov
dec
cmc
inc
ja
test
leave
(bad)
out
out
(bad)
mov
out
int3
or
sbb
cmp
mov
outs
nop
push
adc
and
addr16
fwait
pop
xchg
sub
xchg
dec
cmp
popf
cmc
sub
(bad)
and
sbb
mov
xchg
popf
js
js
jmp
xor
mov
cli
dec
cmp
push
push
mov
dec
ret
rcr
xlat
repnz
adc
mov
in
(bad)
lahf
jns
cdq
xor
sub
sub
out
and
mov
jl
pop
aam
rcl
or
mov
xor
or
add
xor
popf
outs
jmp
(bad)
daa
mov
push
test
jne
push
fst
je
lods
push
(bad)
mov
and
xor
(bad)
cmp
rcr
jmp
sbb
sbb
mov
mov
jecxz
add
jl
pop
jecxz
popa
retf
js
ins
into
call
push
sub
mov
sub
data16
cmps
mov
enter
dec
(bad)
in
mov
lods
xchg
sbb
sub
ret
or
jbe
jmp
addr16
xor
sub
sar
popf
popa
lahf
jg
jo
adc
sub
mov
(bad)
cld
cli
ffree
inc
mov
cmp
repnz
mov
lods
pop
xor
mov
xchg
and
test
mov
or
sbb
mov
(bad)
pop
and
jle
sbb
ds
add
retf
mov
push
icebp
pop
inc
in
jmp
fsub
mov
lock
data16
mov
(bad)
push
add
out
jge
hlt
sahf
push
pushf
cmps
scas
jmp
fs
mov
jle
xchg
mov
std
sub
(bad)
jge
hlt
iret
imul
retf
popa
mov
pop
inc
ficom
outs
cli
clc
data16
pushf
(bad)
jno
adc
mov
or
xor
sbb
adc
fsubr
adc
dec
fild
imul
lahf
inc
ror
rcl
fisubr
cmps
push
jns
ins
push
dec
stos
push
call
enter
in
pop
adc
out
xchg
lea
dec
jmp
out
imul
stos
pop
sub
push
mov
add
xchg
mov
int
xchg
push
scas
xchg
inc
sub
sub
dec
stos
pop
cmp
mov
mov
mov
jae
dec
popa
cmp
and
mov
inc
lods
scas
or
or
in
xor
add
(bad)
(bad)
in
imul
(bad)
sbb
in
data16
sub
adc
inc
mov
jns
dec
les
mov
mov
inc
(bad)
mov
cld
xchg
jp
mov
sar
xor
add
mov
movs
pushf
sbb
iret
pop
add
push
pop
sub
jns
mov
jmp
sbb
(bad)
mov
xchg
sahf
pop
xchg
movs
enter
bts
mov
sub
ret
fisttp
aad
cwde
cmp
repz
sbb
cli
jp
jle
popf
lahf
scas
xchg
ret
dec
hlt
mov
push
aas
mov
jl
jmp
popa
inc
out
inc
sbb
sub
xor
pop
mov
fwait
inc
add
xchg
pop
xor
cdq
push
and
in
inc
bound
or
outs
push
sahf
pop
xor
push
xchg
pusha
add
cmps
idiv
xor
(bad)
jo
push
add
or
shr
add
push
xchg
push
add
mov
push
pusha
or
fs
add
gs
jle
mov
cmp
jge
dec
cmps
js
in
and
xor
dec
aam
jmp
pop
and
or
js
dec
jae
ror
fwait
sub
push
fimul
adc
retf
xor
cmc
add
jo
test
fdivr
sub
push
les
jo
xor
mov
jne
mov
xchg
out
aaa
popf
dec
(bad)
sub
inc
jne
xchg
sub
pushf
fs
push
sbb
jge
call
fsubr
sub
sub
jne
ret
xchg
mov
add
std
cld
rol
pop
movs
out
jno
test
mov
push
mov
add
add
adc
inc
ins
xor
idiv
xlat
sbb
call
and
jbe
mov
dec
fidiv
movs
xor
pop
or
inc
pop
cmp
add
mov
loopne
mov
fld
mov
and
cmc
mov
fiadd
mov
repz
push
jnp
sbb
push
out
fdivr
lods
jecxz
xchg
(bad)
not
fld
dec
(bad)
mov
(bad)
push
push
xchg
out
sub
mov
dec
out
outs
stos
mov
(bad)
hlt
xchg
ficomp
std
out
sub
pop
push
mov
push
stc
sbb
ja
imul
cwde
fld
sbb
sbb
cmc
enter
xchg
sub
and
mov
out
inc
out
pop
and
add
mov
arpl
loope
cmps
jnp
xor
sub
adc
mov
inc
test
ret
(bad)
mov
call
arpl
cmp
xchg
xor
inc
not
adc
test
adc
repnz
(bad)
cli
shl
test
test
mov
(bad)
xlat
outs
mov
out
mov
cdq
sbb
xor
(bad)
(bad)
mov
popa
pop
dec
jge
cmp
add
mov
ins
or
(bad)
mov
shl
jbe
ins
vcmpps
push
loopne
sub
jg
popa
jp
dec
pop
cmc
lods
mov
hlt
sbb
mov
stc
jnp
jbe
jne
push
and
sub
sub
rcl
scas
sbb
pop
aaa
imul
ror
(bad)
test
adc
in
ins
stos
aam
inc
outs
sub
dec
cwde
sbb
(bad)
push
test
test
xchg
pop
jbe
or
call
or
fsub
sbb
cmp
jns
ja
sub
ficomp
pop
xchg
add
mov
out
in
and
xlat
sub
and
(bad)
inc
jle
push
jb
sbb
out
ins
ss
cmp
xchg
and
jbe
adc
cdq
in
js
movs
jmp
push
mov
stos
add
xor
nop
icebp
loop
clc
inc
adc
jae
mov
movs
and
inc
imul
push
mov
sub
pop
xchg
out
movs
mov
push
movs
nop
mov
sbb
test
mov
xchg
and
sub
push
sbb
sbb
dec
cs
imul
adc
mov
push
lock
xchg
dec
sbb
scas
push
mov
push
sahf
loop
or
mul
pusha
xor
std
xchg
nop
ret
pop
cmp
ins
icebp
jp
inc
repnz
ficom
cld
nop
jle
mov
aas
cli
es
jg
cmp
ins
fadd
inc
sbb
jmp
les
push
movs
ds
and
ss
rol
movs
stos
lea
outs
pusha
add
xor
push
ror
pop
ds
push
repnz
jp
lahf
dec
sub
fsub
(bad)
aas
and
test
dec
xchg
pop
inc
imul
and
lock
pop
xor
push
sub
xchg
cli
fisub
(bad)
mov
aad
jge
mov
jl
cmp
(bad)
aad
inc
cmps
ret
inc
mov
lahf
push
dec
mov
leave
or
gs
pushf
and
mov
and
push
and
cwde
sub
pop
pop
sbb
in
out
test
jl
mov
xor
xchg
movs
leave
xchg
addr16
pop
(bad)
scas
push
in
dec
div
lea
std
mov
in
sub
mov
in
mov
inc
cmp
into
lea
mov
xor
mov
arpl
or
pop
sahf
out
push
retf
dec
and
(bad)
fsubp
or
mov
iret
xor
cli
cdq
je
(bad)
dec
popf
xchg
jb
test
nop
clc
mov
retf
mov
jle
(bad)
movs
out
fisub
sub
int3
sub
(bad)
jecxz
mov
or
iret
aad
scas
adc
xor
lds
adc
popf
jmp
fidiv
movs
mov
mov
sub
sahf
loop
aad
enter
mov
pop
add
inc
mov
into
ret
sti
cmps
sbb
mov
dec
sbb
punpcklwd
cli
iret
dec
inc
inc
(bad)
stos
dec
and
xchg
aad
sub
test
dec
adc
cld
mov
in
pop
aas
outs
(bad)
sub
and
push
push
pop
addr16
mov
sti
xchg
aam
adc
mov
push
pop
lahf
xchg
mov
loop
aas
sbb
push
dec
ins
cs
fwait
jg
xchg
cmp
inc
sub
(bad)
stc
(bad)
in
sti
push
leave
mov
pop
add
or
sub
fwait
in
cmc
pop
and
in
xchg
jb
xor
gs
mov
fisub
jecxz
push
jbe
pop
rol
jne
and
(bad)
push
scas
and
cld
scas
les
xor
xchg
cmps
(bad)
push
loop
adc
inc
mov
es
int3
arpl
daa
aam
(bad)
fcomp
xchg
lds
mov
push
pusha
mov
add
pop
out
mov
adc
pop
and
jb
jno
sub
push
shl
sub
cmp
push
inc
bound
sub
outs
xchg
inc
or
fidiv
dec
jo
out
mov
hlt
out
sub
cli
inc
push
arpl
dec
xor
jl
icebp
dec
sub
lahf
xchg
test
lahf
sbb
cs
lahf
push
in
loopne
jge
push
jae
cmp
bound
int
(bad)
fidiv
in
push
ret
sahf
in
mov
cli
pop
retf
or
pop
xchg
loope
mov
jecxz
das
xchg
ret
sub
xsha256
cmps
push
dec
fwait
mov
scas
sbb
sbb
mov
cmps
mov
xor
push
xchg
(bad)
ja
not
mov
and
xor
jl
frstor
push
xchg
xor
cmp
sub
jne
sti
jl
imul
(bad)
ret
test
dec
sti
lods
lahf
jle
nop
push
jae
xor
jle
xor
cmps
movs
push
cdq
fucomip
in
repnz
out
sub
sub
dec
push
icebp
cdq
ret
pusha
xchg
sahf
cmps
movs
stos
sti
cmp
xchg
ja
cmp
fldcw
or
imul
mov
shl
(bad)
fst
cmp
lods
cmp
add
cmps
loop
shl
fadd
pushf
xchg
xchg
lods
(bad)
out
inc
jecxz
dec
mov
lea
adc
pusha
pop
sbb
rol
je
mov
jge
scas
fbld
stos
pop
mov
pop
inc
push
or
shl
(bad)
jbe
js
call
or
push
cmps
test
das
dec
das
sar
push
neg
cli
push
push
sti
inc
sar
lahf
xlat
add
fsubr
dec
sbb
retf
inc
jbe
xor
cwde
jnp
cli
mov
stos
xlat
pop
pop
add
xchg
retf
and
jge
(bad)
cmp
test
inc
stos
jp
mov
jno
push
and
adc
mov
test
sub
push
imul
icebp
xchg
fisub
mov
adc
data16
pop
iret
mov
inc
push
mov
(bad)
xchg
xchg
je
push
shl
je
arpl
ins
cli
nop
push
repnz
loope
fcom
jle
inc
adc
fs
sahf
test
sar
adc
xchg
ins
cmp
jmp
mov
inc
pop
jae
mov
or
push
jbe
inc
xchg
inc
rol
sub
xor
cmps
retf
addr16
mov
aad
outs
add
push
adc
int
ja
xchg
pop
xor
test
pop
pop
in
stc
jg
test
dec
rol
cmp
sub
xchg
mov
icebp
or
and
nop
xchg
and
add
stos
pusha
fcomip
inc
pusha
jl
jl
daa
push
and
xor
stos
jns
add
mov
add
cdq
movs
ror
outs
or
popf
jae
arpl
xor
or
std
jp
mov
outs
fst
jle
jecxz
cmp
lods
mov
jecxz
cli
in
xor
test
mov
or
jbe
push
cmp
push
mov
sub
pushf
not
mov
xchg
jnp
adc
xchg
int
(bad)
js
fsub
movs
cli
test
popa
sbb
mov
inc
in
lods
mov
push
push
int3
dec
adc
adc
or
xchg
aaa
sbb
test
int
enter
cdq
adc
movs
ins
movs
fs
inc
cmp
jle
js
imul
sub
jnp
cmp
and
dec
rcr
(bad)
mov
push
push
(bad)
clc
add
xchg
mov
pop
inc
aam
sub
test
dec
xchg
push
scas
dec
xor
js
push
inc
xor
mov
push
push
dec
or
mov
jns
push
pop
loop
or
loop
das
rol
pop
int
mov
rcl
mov
scas
push
dec
loopne
arpl
or
pop
fdivr
push
jno
adc
add
add
jecxz
cld
adc
push
jg
dec
fsub
push
mov
xchg
xor
and
push
push
test
sub
dec
cmc
add
xor
xor
daa
(bad)
(bad)
cmp
icebp
cs
aam
push
push
(bad)
or
mov
ins
sub
shr
xchg
pop
and
dec
or
out
aaa
xor
out
cld
pushf
jp
sar
bound
call
movs
or
lea
and
push
add
jg
jle
dec
inc
shl
push
inc
ds
dec
stos
rol
push
stos
out
mov
test
aas
retf
adc
test
test
mov
cmp
dec
and
pop
xor
scas
test
imul
shl
aam
pushf
mov
add
data16
mov
sbb
out
mov
dec
xor
xchg
inc
clc
sub
add
(bad)
call
xor
int3
bound
test
dec
(bad)
cld
imul
add
stos
cmp
test
enter
or
inc
jl
mov
and
in
sbb
mov
(bad)
mov
(bad)
sub
not
in
aad
shr
jg
fcmovnu
mov
fbld
or
sbb
add
in
lods
ret
sub
int3
sub
(bad)
xchg
iret
push
push
mov
mov
loopne
aam
mov
sbb
push
mov
and
jle
xchg
js
mov
lea
inc
test
das
iret
mov
test
jo
fcomp
sub
dec
stc
hlt
inc
adc
jb
and
loope
cmp
imul
into
mov
jns
sbb
and
dec
imul
(bad)
push
rcl
adc
fwait
data16
cmps
add
addr16
aam
jp
scas
aad
mov
(bad)
int
add
mov
inc
shr
(bad)
cmp
inc
lds
out
mov
xor
into
inc
clc
mov
sbb
and
out
call
mov
mov
call
or
push
inc
icebp
inc
or
loopne
jb
jmp
push
pop
jecxz
jle
(bad)
fdivr
into
in
mov
dec
mov
mov
sbb
push
cmp
out
add
xor
fstp
push
mov
cs
lods
push
in
ss
scas
add
fidiv
push
pop
popf
jl
loop
push
xor
jge
iret
(bad)
sub
push
ficom
aam
out
jns
sti
outs
jb
fdivp
in
adc
push
(bad)
movs
xlat
or
shr
mov
and
mov
mov
es
jp
xor
cmps
push
and
push
sbb
push
cld
idiv
dec
xchg
out
cmc
fnstcw
sbb
cmp
sub
adc
mov
ds
pop
ror
shl
mov
cmp
imul
and
xor
rcl
mov
push
cmp
push
dec
sti
aam
pop
jmp
dec
lods
not
bound
sets
call
fiadd
sub
xor
jo
jnp
xchg
xchg
or
jno
xchg
fucomip
pop
mov
fnstcw
out
div
sub
nop
daa
cwde
cli
pop
cmps
push
jnp
xchg
mov
ja
imul
cmp
popf
jg
xchg
sub
mov
inc
call
out
(bad)
mov
jp
sahf
inc
inc
sbb
test
jmp
test
outs
jo
scas
repz
jl
(bad)
pop
fisub
push
push
outs
cmc
cmps
xchg
daa
popf
mov
cmps
fidiv
push
stos
add
mov
or
fisub
push
test
add
mov
inc
sub
jge
ror
retf
xchg
enter
iret
pop
lea
bound
call
xlat
mov
cmp
add
push
mov
lds
stos
xchg
mov
ficom
pop
push
sub
cli
dec
and
out
imul
dec
sahf
repnz
sti
xchg
test
and
pop
mov
mov
ins
pop
push
mov
fcmove
test
stc
adc
inc
jg
enter
pop
scas
loopne
mov
or
inc
(bad)
fwait
mov
hlt
mov
inc
outs
test
scas
retf
lock
lods
addr16
sub
icebp
lds
jl
add
add
add
and
sub
push
cdq
in
pop
dec
add
push
repnz
outs
hlt
(bad)
add
add
icebp
mov
jge
hlt
cmc
aas
imul
or
push
push
cld
cmp
push
fucomp
sbb
jmp
jg
pop
pop
fnstenv
push
shl
dec
add
jo
aaa
inc
call
push
cmps
cmps
int
push
bound
mov
ds
div
ret
add
imul
and
xor
and
and
mov
pushf
push
inc
rcr
cmc
cmps
add
test
push
sti
sahf
loopne
sbb
cmp
fcomp
sbb
loope
call
jp
mov
fisub
imul
dec
mov
xor
rcl
mov
mov
add
callw
push
fimul
test
mov
and
mov
and
dec
daa
or
dec
scas
in
das
and
std
lock
ret
movs
cmp
leave
int3
je
push
or
xchg
icebp
(bad)
fbstp
rcr
pop
add
leave
and
sub
test
adc
sub
ss
jbe
mov
imul
ret
dec
push
adc
dec
sub
fwait
push
bound
add
(bad)
mov
in
outs
es
xchg
shl
xchg
scas
ss
push
(bad)
mov
jp
mov
sahf
xchg
fadd
fstp
das
inc
test
out
stos
(bad)
jge
hlt
xor
pop
in
cwde
jmp
sub
mov
and
jnp
mov
les
enter
dec
lods
adc
add
cld
lds
loop
out
out
fild
ror
daa
(bad)
adc
sub
cs
dec
call
pop
stc
pop
icebp
or
sbb
add
jecxz
push
aam
imul
mov
mov
mov
xor
jbe
sbb
loop
mov
push
stos
mov
xor
and
dec
pop
addr16
cld
jo
xor
jne
push
ds
movs
and
cwde
es
dec
dec
call
mov
add
fnstcw
xor
int
sbb
dec
sub
adc
xchg
imul
(bad)
push
mul
inc
mov
cld
fdiv
clc
lahf
push
scas
dec
outs
jns
cmp
arpl
fs
lock
jo
fs
ins
dec
xchg
loop
test
dec
sub
xchg
mov
push
xchg
stos
xchg
ds
mov
xlat
(bad)
call
lahf
cs
mov
mov
pusha
std
pop
inc
in
pop
push
je
push
shl
add
cmps
mov
add
push
adc
test
push
into
inc
pop
adc
retf
nop
pushw
das
dec
call
sti
movs
add
mov
cmps
into
pop
ret
push
shl
in
add
pop
sbb
xchg
rcr
lods
std
das
bound
lea
shl
fiadd
mov
hlt
jno
or
fbld
jne
lahf
cmp
mov
enter
xlat
fidiv
out
aaa
xlat
rcl
lahf
adc
aad
out
dec
out
popa
xchg
mov
sbb
cmps
pop
in
shl
cmp
inc
aad
adc
inc
jg
and
and
clc
cmp
add
push
mov
push
dec
neg
scas
int3
and
pusha
stos
std
sbb
and
add
push
and
cmp
sti
add
cmp
das
arpl
sbb
scas
mov
scas
inc
dec
cmp
xor
mov
enter
pop
sub
out
addr16
jg
call
out
mov
out
sub
pushf
jmp
adc
div
or
inc
jp
adc
bound
out
mov
xor
fmul
fldcw
int
scas
pop
xor
mov
cmp
sub
cmps
inc
cmp
cmp
mov
movs
mov
movs
add
xor
cmp
outs
(bad)
iret
lar
or
dec
in
pop
stos
mov
mov
js
sbb
or
retf
and
dec
inc
enter
push
mov
jae
mov
test
jb
push
cmps
cmp
aad
cmpps
bound
lahf
or
out
dec
jecxz
sub
pop
fldenv
in
add
dec
loop
les
add
mov
jmp
dec
cmp
cmp
hlt
in
mov
xchg
lds
dec
rcr
gs
imul
mov
sbb
fist
xor
jnp
xor
xor
loop
mov
popa
lea
push
jge
ret
dec
out
clc
shr
mov
aaa
push
pop
es
fldenv
stos
cvtdq2ps
push
mov
xor
(bad)
into
mov
int3
inc
(bad)
mov
pop
out
jmp
cli
adc
int3
xchg
jmp
lds
into
push
push
mov
(bad)
aam
outs
fdiv
sahf
add
xchg
int
mov
imul
pop
and
pop
data16
and
sub
xchg
and
iret
inc
ja
xchg
cmp
mov
mov
sbb
and
mov
repz
mov
shl
popf
mov
jne
scas
repz
iret
jge
inc
mov
lea
movs
xlat
mov
inc
dec
mov
fs
pop
push
out
push
stc
rol
push
scas
adc
mov
int
movs
dec
les
sbb
pop
out
sub
call
push
adc
dec
jae
test
sub
mov
push
les
mov
test
(bad)
and
push
cwde
sub
sti
pop
sti
std
jge
sbb
dec
inc
pushf
push
dec
lock
out
fmul
retf
loope
out
and
xor
mov
ja
stos
push
or
pop
dec
outs
dec
push
adc
mov
addr16
cmp
add
fisub
xor
(bad)
jecxz
lods
iret
(bad)
push
cmp
add
dec
mov
stos
hlt
fdiv
and
outs
push
xchg
aas
mov
mov
adc
mov
push
jns
and
stos
sub
fs
ja
out
rol
xor
sub
gs
ins
in
mov
and
std
movs
loop
sbb
hlt
or
xchg
push
popf
pop
xchg
clc
cli
jg
ins
mov
push
sbb
(bad)
out
jbe
inc
(bad)
jmp
popa
add
sbb
jmp
or
mov
push
clc
sub
mov
pop
out
mov
sbb
jbe
aam
pop
mov
inc
(bad)
mov
(bad)
fmul
jl
adc
loopne
xor
cmp
shl
sub
enter
xor
xchg
int3
test
loope
hlt
jo
jge
stos
mov
retf
int
or
push
adc
xchg
ret
sbb
js
cwde
inc
jbe
jg
mov
or
sar
sahf
cli
not
push
addr16
test
adc
pop
jne
lock
aaa
dec
xchg
xchg
(bad)
push
in
mov
test
xchg
xor
out
icebp
lods
xchg
sbb
popf
cmc
xor
jle
scas
xchg
push
fnsave
inc
push
inc
xor
lods
xor
ret
and
jp
dec
mov
dec
mov
mov
xchg
imul
cmp
mov
jmp
sbb
adc
or
cmp
lds
push
jnp
inc
push
es
jmp
outs
pop
inc
pop
mov
ds
xchg
ins
jl
sbb
mov
icebp
mov
xor
out
or
into
lock
stos
sub
jnp
aaa
addr16
js
jo
adc
mov
cmp
mov
out
lds
add
cmp
sbb
jno
mov
pop
and
retf
pop
cmp
sub
(bad)
adc
mov
or
and
sub
fptan
not
cli
mov
(bad)
pop
pop
repnz
mov
xor
xchg
aam
rcr
je
xor
cmc
outs
or
ror
sub
scas
and
sahf
popf
fild
add
mov
test
rcl
pushf
adc
(bad)
js
mov
xchg
call
xchg
sbb
fld
adc
clc
fsub
shl
or
loopne
cld
(bad)
jmp
js
das
pop
adc
add
les
add
test
jae
pop
kmovd
and
add
mov
dec
jmp
inc
cld
jmp
add
neg
push
and
adc
iret
shl
or
repnz
(bad)
loopne
repnz
loope
dec
mov
ja
rcl
jle
sub
pop
mov
and
fistp
imul
scas
xor
(bad)
xlat
aam
aad
xchg
in
cmp
in
jb
xor
mov
sub
mov
cmp
call
add
test
xchg
and
mov
sbb
stos
in
jg
fs
and
xchg
mov
or
sahf
add
xchg
inc
out
test
ja
pop
xor
sti
imul
xchg
mov
jmp
jp
pop
scas
pop
or
inc
fs
lods
adc
pop
jmp
mov
sub
jns
sub
push
jl
icebp
enter
and
in
arpl
sbb
add
lea
sub
sub
mov
jp
dec
pusha
push
popf
sub
sbb
sub
test
popf
mov
sbb
jo
pop
test
pop
or
sub
inc
mov
movs
or
pop
(bad)
cli
pop
xchg
cwde
mov
pop
sub
pop
inc
xor
xchg
cli
push
xchg
xor
sbb
iret
push
xchg
inc
int3
xchg
sbb
call
mov
jbe
and
mov
cwde
mov
stos
out
call
fcomp
ins
inc
adc
(bad)
ins
into
xchg
fldenv
daa
or
xor
ret
push
scas
add
cmc
imul
popf
stos
sbb
sbb
stos
cmp
test
retf
sbb
mov
add
imul
mov
pop
mov
jg
push
sbb
mov
out
pop
add
pop
(bad)
stc
mov
pop
lock
fsub
xchg
or
mov
mov
cmp
movs
mov
lds
mov
ins
lahf
les
push
xor
mov
retf
jp
add
xor
rol
nop
xchg
test
jmp
or
mov
jecxz
ins
fwait
xlat
xor
imul
inc
mov
xor
xor
retf
fisubr
inc
xor
dec
jl
jmp
push
push
ret
cdq
dec
push
jno
push
inc
mov
push
dec
jno
outs
jle
repz
or
cld
mov
test
xchg
mov
adc
loop
pop
push
dec
dec
xchg
sbb
jne
and
mov
cmp
call
lahf
push
ss
das
imul
cli
popf
mov
out
je
mov
imul
nop
mov
retf
test
not
inc
clc
outs
js
mov
popa
pop
mov
cmp
xchg
xchg
ds
dec
xor
pop
xchg
int3
jmp
sbb
enter
aam
movs
xchg
mov
loop
mov
sub
jbe
ja
inc
mov
or
data16
add
cmp
in
inc
adc
shl
loop
cmc
inc
not
dec
into
pop
xor
aaa
jge
mov
xchg
idiv
adc
pop
paddq
js
loopne
dec
xchg
imul
sub
dec
mov
in
jg
or
and
and
mov
les
xchg
addr16
xor
cmp
xor
fwait
xor
jns
data16
jns
fcomi
int
and
iret
dec
add
add
bnd
pop
dec
cmp
cld
mov
outs
dec
es
inc
ret
in
and
xchg
aas
mov
mov
push
sbb
or
add
stos
leave
pop
movs
enter
rcl
and
cmps
jmp
mov
out
sbb
sub
or
mov
mov
mov
push
cmps
call
dec
enter
gs
and
fstp
xchg
pop
imul
(bad)
mov
jl
push
jmp
xor
adc
xlat
mov
dec
movs
adc
jbe
fs
and
sbb
in
(bad)
pop
fiadd
sbb
or
ds
jp
jbe
xlat
lea
jns
shr
mov
lea
les
pop
pop
and
lds
sahf
xor
lods
mov
mov
dec
mov
pop
mov
loop
mov
xor
xor
inc
xchg
(bad)
in
lds
sbb
mov
nop
in
xchg
add
dec
shl
mov
xlat
cld
push
inc
cli
into
and
loope
or
pop
aad
into
sub
mov
rcl
shl
ins
and
sti
enter
or
jecxz
inc
retf
push
stc
xchg
jbe
repz
aad
outs
xor
inc
inc
cmc
retf
inc
push
jge
data16
dec
add
jne
in
xor
sub
jno
lock
test
xchg
mov
push
jmp
outs
push
aaa
std
addr16
mov
or
pushf
cmps
enter
fstp
nop
imul
ret
repnz
js
add
pop
push
out
scas
stos
push
lods
repz
jae
sbb
test
lods
pusha
shl
mov
bound
add
adc
ror
add
stos
lods
je
not
inc
test
fsubr
push
push
sub
push
sub
mov
test
pushf
bound
rcr
stos
dec
stos
jo
enter
push
nop
sbb
stos
or
xlat
(bad)
iret
mov
cld
mov
leave
jo
cwde
jmp
cmp
xor
or
je
popa
shl
mov
pop
xor
(bad)
in
js
pop
jmp
mov
pop
aas
xor
or
mov
pop
inc
into
or
jns
or
movs
rol
mov
or
lods
movs
ds
cwde
cmc
xor
test
or
sub
rol
out
inc
fiadd
xchg
push
jg
jmp
out
adc
mov
sbb
dec
mov
pop
xor
and
jae
xchg
repz
xchg
add
xchg
fs
jmp
aaa
push
sbb
outs
(bad)
mov
push
push
call
punpcklbw
js
mov
sub
mov
fwait
idiv
addr16
xchg
mov
ins
scas
push
aam
mov
xor
inc
not
fsubr
sbb
xchg
jnp
mov
ror
imul
xor
stos
mov
iret
sbb
add
mov
cld
mov
leave
add
stos
pop
cs
enter
cs
mov
jle
cmp
sub
(bad)
jecxz
(bad)
mov
(bad)
neg
cmp
clc
test
jecxz
stc
cmp
inc
xor
and
fisub
or
stc
aad
cli
jbe
and
(bad)
adc
int3
fst
out
inc
jbe
jge
sbb
sahf
and
and
jno
out
cmc
cmp
dec
(bad)
jl
xor
cli
test
in
push
mov
imul
fistp
out
gs
std
(bad)
loop
sar
std
int3
test
push
and
sub
daa
(bad)
mov
jo
xor
sbb
mov
mov
dec
lahf
and
pushf
jg
pop
cdq
adc
jle
scas
add
sub
loop
push
sub
and
hlt
fistp
lods
addr16
inc
rcl
ins
or
xchg
add
push
xchg
or
cmc
movs
mov
stos
sbb
pop
popf
les
(bad)
sub
outs
xlat
sahf
push
mov
mov
out
out
lods
mov
mov
sub
int3
and
pop
add
mov
sub
call
or
aaa
mov
into
(bad)
sub
sub
(bad)
aaa
add
xchg
mov
leave
jb
xchg
cmp
cmp
in
lock
mov
jmp
enter
xor
es
mov
movs
out
xor
ss
pop
xchg
add
out
shr
sbb
(bad)
sti
mov
mov
xchg
aad
sub
aaa
fsubr
cmps
je
les
mov
push
(bad)
aaa
push
and
cld
es
loop
jo
pushf
jecxz
mov
pop
pushf
daa
jo
cmp
xlat
int3
icebp
pop
push
inc
daa
adc
inc
dec
mov
and
imul
bswap
add
cwde
movs
cwde
push
addr16
push
add
dec
out
iret
and
int
ds
in
sbb
cmp
ss
adc
sahf
jo
adc
jmp
dec
pop
push
ins
and
mov
movs
xchg
xchg
sub
addr16
add
pusha
addr16
jnp
jle
pop
pop
rcl
xor
xlat
and
inc
add
add
out
in
cdq
aad
or
fstp
test
xor
jnp
jno
push
fcom
arpl
or
jns
xchg
mov
ja
xor
sbb
sbb
xor
lds
(bad)
cmc
ds
(bad)
mov
sbb
adc
hlt
popa
stos
pop
retf
jge
fcomp
mov
jno
dec
out
xchg
ret
ror
pop
jg
into
add
pop
outs
jo
or
inc
cmp
or
xchg
mov
int
sar
xchg
call
sbb
and
out
es
xlat
das
sbb
jo
jge
cmp
loop
xchg
dec
pop
mov
scas
mov
ficom
mov
push
js
jae
dec
leave
mov
stos
inc
and
mov
sti
pop
movs
adc
pop
pop
lods
jecxz
(bad)
std
add
nop
test
test
ins
(bad)
dec
mov
in
fistp
(bad)
fadd
or
pop
jae
pop
mov
dec
and
or
dec
mov
shl
xchg
mov
and
in
mov
jae
add
cmp
inc
sub
mov
mov
jno
xchg
or
pop
ret
loope
pop
xor
sub
mul
lea
test
popa
sub
fwait
and
mov
pushf
cs
inc
loope
and
sub
adc
dec
pop
imul
or
mov
retf
call
in
mov
je
sub
add
not
dec
fstp
retf
repz
test
fldenv
xchg
pop
jae
mov
ins
cmp
push
cmps
nop
outs
movs
call
mov
leave
inc
adc
xor
sti
pop
sar
shl
cmp
mov
jae
add
in
arpl
adc
js
jb
xchg
mov
push
dec
xchg
cmp
neg
dec
adc
lock
fcom
(bad)
cmp
push
cmp
push
call
xlat
gs
sub
pop
add
and
add
shufps
(bad)
les
ret
sti
or
(bad)
push
add
clc
je
in
pop
movs
movd
cmp
sbb
jno
inc
xor
pusha
jne
enter
xchg
imul
cmp
call
in
ins
aad
mov
mov
push
xchg
shr
loope
imul
nop
retf
lea
mov
ret
cwde
push
jecxz
push
sbb
scas
push
inc
nop
retf
mov
lods
mov
repz
sar
inc
adc
mov
out
fwait
cmp
sub
pop
arpl
sbb
outs
ficom
sub
popa
xlat
das
out
sbb
add
push
sbb
call
xor
js
mov
dec
mov
into
ins
test
sbb
and
mov
leave
jg
jle
mov
stos
lea
sti
add
inc
int
aas
mov
xchg
test
cmp
(bad)
sbb
(bad)
jo
ins
fisubr
imul
jns
mov
daa
sbb
ins
jo
scas
aas
xchg
popa
sub
retf
mov
xlat
xor
lods
pop
adc
in
dec
idiv
sbb
mov
jge
adc
adc
cld
sbb
inc
repz
push
inc
inc
(bad)
pop
lods
pop
pop
stos
mov
xor
lds
sbb
add
pop
cmp
sar
into
sub
mov
ins
add
jge
bound
mov
adc
mov
cmc
fsubr
lock
inc
(bad)
xlat
add
add
retf
call
jo
shr
enter
retf
stos
addr16
pop
jle
jnp
inc
aaa
jmp
and
dec
int3
pusha
(bad)
adc
xor
das
dec
call
inc
out
xchg
enter
pop
xchg
into
push
imul
div
push
imul
sahf
mov
xchg
not
xor
xchg
test
retf
jecxz
sub
add
mov
test
jb
nop
loopne
jp
mov
cmp
pop
xor
xchg
sbb
pop
dec
fwait
cmp
pop
cmp
into
or
sti
aam
cmp
test
sbb
bound
or
outs
frstor
dec
mov
movs
call
mov
cmp
fucom
test
jae
imul
inc
or
inc
pop
test
jmp
jnp
inc
ficomp
sub
cmp
aaa
adc
es
inc
adc
call
sar
sti
pusha
sub
je
mov
in
push
sub
sbb
int
mov
mov
(bad)
mov
imul
push
mov
int3
cmp
cmps
cdq
int3
mov
jle
jl
push
data16
sahf
xlat
add
out
xchg
pop
xchg
nop
jecxz
jae
xor
sbb
std
mov
pusha
push
lahf
test
not
push
jb
mov
mov
mov
jmp
movs
pop
mov
cmp
ja
test
in
xchg
sub
pusha
into
movs
jp
xor
and
and
mov
fstp
lahf
mov
cld
repz
daa
xchg
xchg
xlat
add
xchg
les
mov
(bad)
mov
data16
jae
or
ss
imul
aas
mov
jmp
adc
sub
add
cmps
xchg
mov
pop
icebp
dec
jbe
cwde
push
ret
(bad)
mov
mov
lea
pop
retf
rol
aad
mov
or
shr
mov
and
push
std
out
cmp
jg
and
ror
lods
dec
dec
fist
rcl
xchg
int
es
dec
add
(bad)
jne
jbe
loop
aas
nop
fimul
aam
outs
jmp
lahf
cmc
push
xor
call
ja
push
ja
jb
out
in
cwde
mov
bound
(bad)
jnp
or
movs
enter
imul
dec
and
cmp
sar
xchg
push
pop
dec
dec
dec
and
in
test
rcr
push
imul
pop
sub
daa
loopne
sbb
dec
xchg
pop
inc
or
dec
mov
adc
xrelease
mov
jge
push
pusha
inc
mov
sub
(bad)
cmp
aad
dec
idiv
ja
xlat
xor
jb
fs
jge
out
scas
jg
mov
leave
shr
inc
cmps
xchg
cmp
cmp
pop
mov
aas
cmps
adc
loope
test
push
mov
in
mov
inc
xchg
mov
xchg
xor
cmp
cmp
inc
mov
jg
call
sub
dec
movs
sahf
fs
sbb
sahf
sub
cmps
fsubrp
sahf
cld
add
mov
cmc
imul
mov
(bad)
popa
jae
pop
xor
cwde
ss
push
movs
jmp
stos
sti
loope
or
std
lods
mov
sub
push
jmp
dec
or
(bad)
push
out
cmps
enter
cli
movs
cs
inc
mov
mov
aad
das
lods
pop
or
jmp
rol
mov
pop
or
lods
stos
sub
push
jmp
lods
cmp
(bad)
das
addr16
es
push
mov
sbb
popa
out
js
pop
and
inc
std
mov
or
dec
xlat
or
ja
xor
mov
push
mov
imul
fcom
push
retf
pop
pop
jge
nop
sbb
sub
mov
les
sub
mov
(bad)
lods
jmp
jmp
jns
sbb
lods
js
inc
mov
lods
clc
add
push
retf
cmps
xchg
popa
dec
ja
stos
mov
jmp
jo
and
pop
mov
mov
cmp
xchg
cmp
and
imul
mov
push
clc
xchg
cmc
popf
div
cmp
fdivr
xchg
cmp
repz
push
sub
js
retf
out
pop
popf
pop
sbb
test
aam
mov
push
mov
mov
cld
xor
xor
sbb
aas
enter
fisttp
xor
jae
mov
jne
sub
or
mov
aad
stc
and
int3
mov
push
sbb
inc
xor
ds
jne
jg
push
das
cmp
pop
pop
test
mov
stos
pushf
ja
jge
call
jmp
inc
xchg
jno
icebp
lods
aaa
stos
iret
mov
jne
xchg
xchg
(bad)
lods
cwde
aaa
push
xchg
xor
sar
dec
jle
int
add
sub
pop
cmps
adc
dec
je
jg
aaa
xchg
(bad)
neg
xor
push
mov
fwait
popf
mov
jae
addr16
and
push
lock
aaa
lods
imul
jecxz
vpmulhuw
mov
sbb
cmc
jmp
aaa
test
or
xor
sbb
xchg
dec
mov
cdq
mov
gs
lods
xchg
mov
es
imul
cli
ret
push
out
aaa
jecxz
inc
jnp
movs
sub
ss
lds
sbb
mov
adc
fwait
ror
xlat
dec
cld
and
shl
jmp
xchg
mov
add
scas
fisubr
xchg
data16
mov
xchg
pushf
bswap
(bad)
mov
and
push
adc
mov
(bad)
addr16
lea
out
cmp
mov
mov
dec
cmp
in
std
cli
lock
stc
sti
and
loopne
xor
repz
(bad)
adc
aas
xor
shr
inc
fsub
cmp
retf
in
mov
test
adc
push
or
call
test
mov
clc
leave
cmp
push
aas
sub
xlat
iret
out
mov
cmp
mov
and
and
mov
pop
sbb
xchg
jle
inc
jb
inc
fsubr
in
sbb
and
inc
cwde
cmp
and
lock
lahf
mov
lds
mov
test
sbb
sub
subps
adc
xor
es
cmp
inc
fdivr
fdivr
jno
mov
sub
inc
pop
test
push
in
ret
sub
shl
mov
test
mov
pop
pop
and
cs
ss
scas
out
fsubr
icebp
mov
cli
daa
cmp
inc
mov
arpl
sbb
mov
movs
popf
push
cmp
cmp
jmp
xchg
cli
fiadd
lods
jnp
fidiv
js
imul
sbb
les
pop
pop
pop
jecxz
or
cld
retf
imul
sub
inc
mov
mov
jle
rcl
(bad)
loope
jmp
jmp
xor
test
das
mov
xchg
mov
outs
push
(bad)
xchg
mov
in
fadd
leave
xchg
jmp
les
out
shl
add
push
(bad)
cmp
cdq
mov
int3
jmp
test
xchg
mov
and
inc
pushf
or
cmp
xor
pop
loope
add
pop
clc
les
sub
je
push
xor
sbb
inc
test
mov
inc
mov
mov
xlat
fs
push
fs
xchg
or
cmp
leave
dec
sar
jnp
sub
out
or
call
rcl
bound
add
sti
ret
push
jl
fcmovu
nop
push
push
pop
pop
jae
(bad)
pop
push
loope
cmp
jb
jns
js
add
sub
cli
xor
scas
fwait
scas
repz
cmc
leave
in
mov
cmp
dec
(bad)
loop
popa
imul
xor
jmp
cmp
jb
push
call
sar
mov
mov
add
dec
sub
mov
data16
xchg
(bad)
fimul
fidiv
aas
(bad)
sbb
cli
or
push
das
mov
inc
xchg
rcr
int
mov
bound
rcl
sbb
movs
enter
sub
int3
ficom
enter
mov
cs
retf
mov
scas
into
div
adc
mov
frstor
mov
lock
test
lods
push
or
adc
call
mov
xchg
add
lods
jns
sbb
sub
movs
add
(bad)
push
cmp
sbb
fcmovnu
mov
pop
stos
and
movs
aad
sbb
xchg
sub
lods
push
mov
and
mov
aad
and
push
cld
icebp
iret
inc
cld
push
add
xchg
in
jp
or
xchg
xchg
outs
xchg
fistp
(bad)
gs
cmp
shr
inc
and
xchg
hlt
pop
cmp
or
daa
shl
adc
imul
call
lods
dec
push
inc
push
mov
shr
jne
sar
xchg
inc
pop
xor
jbe
xor
mov
push
and
(bad)
push
retf
sub
lahf
mov
add
dec
or
pop
inc
cmp
retf
mov
loop
mov
popa
pop
repz
rol
call
ja
mov
dec
pop
push
mov
xor
mov
retfw
lods
test
das
xchg
xchg
cmps
sub
push
movs
dec
sub
add
ins
int3
shr
push
push
jns
jae
push
clc
xchg
(bad)
mov
(bad)
push
rcr
stos
xchg
mov
mov
daa
imul
sub
sub
mov
adc
lods
int3
loope
sbb
add
inc
xchg
push
push
jb
out
dec
(bad)
fsubr
sbb
movs
sar
sub
sti
and
mov
jne
mov
sub
les
cs
dec
mov
cs
dec
jge
adc
push
lock
icebp
ficomp
and
dec
push
pop
(bad)
adc
mov
pop
adc
cmp
mov
imul
clc
and
xor
lea
out
movs
adc
sbb
jae
push
retf
mov
cwde
je
jo
and
xchg
cmp
push
retf
or
in
or
sti
dec
mov
test
pop
mov
sbb
inc
add
jp
sbb
push
mov
push
in
or
cmp
adc
iret
cmp
(bad)
jecxz
dec
loop
xor
cli
test
mov
dec
sbb
iret
push
in
xlat
push
repnz
xchg
sahf
aas
ret
cmp
pop
jmp
push
ss
sbb
jmp
add
test
sti
imul
pop
or
cmps
arpl
mov
scas
jns
or
jmp
(bad)
data16
mov
hlt
pop
add
(bad)
mov
xchg
mov
pop
or
ret
cmp
in
movs
jge
imul
pop
mov
add
xchg
sbb
dec
xchg
and
rol
adc
stc
adc
sar
cmp
test
iret
fwait
cs
stos
stos
sbb
stc
or
or
shl
push
and
dec
pop
fs
adc
ret
iret
xor
jge
mov
and
ds
fisttp
js
dec
xchg
add
jns
call
scas
jb
ret
xlat
(bad)
ficom
(bad)
push
inc
test
scas
lds
ret
into
(bad)
xor
int3
push
loopne
sbb
or
inc
daa
fisubr
popa
mov
dec
jb
xor
and
(bad)
sar
fld
rcl
or
sub
cmp
adc
in
inc
mov
dec
(bad)
jo
jge
aaa
out
movs
(bad)
fistp
sbb
repz
movs
push
adc
mov
into
add
cmps
xor
imul
lods
pop
sub
or
ret
pop
add
xor
fst
mov
or
popw
test
sub
pushf
mov
jmp
test
in
sbb
imul
add
cmp
mov
lds
inc
mov
or
repz
cmp
mov
mov
dec
mov
dec
push
fbstp
and
mov
lahf
ds
dec
fist
sub
test
xor
dec
and
inc
inc
pushf
enter
aaa
and
xlat
gs
jg
lods
and
xor
out
sub
test
pop
mov
mov
pushf
pusha
mov
dec
xor
xlat
or
mov
outs
jg
inc
jne
outs
outs
add
outs
outs
shl
cmp
(bad)
fcomp
aam
sbb
out
cmc
jle
or
mov
rcl
stc
cmps
and
cwde
cmp
mov
pop
fwait
sti
gs
into
iret
mov
retf
jg
dec
pop
(bad)
jge
les
lea
mov
pop
std
add
mul
pop
daa
push
pcmpeqd
int3
outs
xchg
pop
push
inc
or
sbb
sbb
inc
clc
push
nop
arpl
add
xlat
mov
or
rcr
pop
cwde
xor
sub
adc
inc
imul
gs
mov
xchg
dec
iret
mov
sub
cmps
xchg
shl
sub
in
loope
pop
lods
mov
xchg
mov
pusha
call
dec
mov
lods
mov
push
call
cmp
mov
stc
cmc
sbb
sub
sbb
aas
lea
shr
out
pop
cmps
adc
and
cmc
scas
aaa
xchg
leave
(bad)
daa
cmp
xor
adc
adc
fwait
out
mov
addr16
mov
mov
outs
add
(bad)
repz
stc
mov
loop
dec
cld
dec
sub
(bad)
aam
jl
fisttp
rcr
out
mov
loope
inc
int3
sbb
cs
mov
sub
pop
icebp
ss
scas
iret
pop
mov
(bad)
mov
jb
retf
add
ffreep
jl
jl
mov
add
inc
hlt
mov
movs
scas
mov
pop
into
dec
pop
or
cmps
lahf
rcl
adc
or
add
movs
xor
pop
(bad)
cmc
retf
add
adc
fsubrp
push
dec
push
push
pop
in
mov
sbb
adc
push
mov
add
cld
ins
inc
(bad)
fsubr
clc
pusha
xchg
sub
mov
stos
and
cmp
lds
and
dec
xchg
(bad)
loop
mov
adc
js
inc
mov
aad
out
rcr
test
pop
jb
js
jne
sbb
xchg
lods
jo
pusha
cld
and
jecxz
repz
and
jo
push
sbb
jg
cwde
push
xchg
push
jnp
xor
ror
fiadd
inc
mov
inc
add
jmp
jge
data16
xor
aam
fwait
out
in
jmp
cwde
inc
les
push
lods
mov
jbe
icebp
mov
movs
adc
adc
xchg
or
xor
or
int3
and
data16
mov
fs
mov
ret
cmp
stos
add
icebp
addr16
pushf
fsubr
nop
loopne
push
ja
xor
pop
movs
retf
add
mov
out
repz
fiadd
push
mov
loopne
mov
jno
sub
and
xchg
rol
jmp
push
mov
aas
jg
pop
jle
sub
lds
cs
imul
push
pusha
test
cwde
or
fwait
sbb
mov
nop
inc
and
inc
cwde
or
pop
outs
psadbw
mov
movs
je
shr
sub
mov
shr
mov
in
adc
jge
sbb
mov
cmp
out
loope
ds
aaa
cmps
add
lds
push
pop
xchg
pop
mov
test
add
push
push
push
add
pop
pop
(bad)
arpl
xor
adc
in
inc
mov
push
aas
sbb
(bad)
jl
comiss
adc
jne
imul
and
aam
jmp
adc
mov
lahf
cwde
adc
es
jg
ins
loope
pop
jae
daa
add
call
(bad)
sar
mov
inc
mov
enter
add
mov
test
push
dec
(bad)
mov
fwait
pop
rcl
aad
mov
or
add
and
inc
js
and
test
mov
add
cmps
mov
daa
mov
mov
jecxz
jb
dec
loopne
test
aas
jp
ds
mov
imul
stos
gs
enter
clc
xlat
push
push
fcom
das
ds
adc
adc
popa
push
mov
jle
dec
inc
test
neg
lea
fsub
in
int3
rol
xchg
cdq
fisubr
add
dec
(bad)
(bad)
in
(bad)
sbb
mov
mov
out
fcom
push
xchg
in
jo
adc
mov
pop
pop
dec
daa
pop
je
(bad)
(bad)
(bad)
std
pop
stc
shl
popf
mov
(bad)
pop
push
adc
outs
stc
in
adc
(bad)
repz
mov
dec
clc
mov
loopne
stos
shl
pop
fidivr
rcr
loope
add
in
imul
mov
(bad)
pushf
test
rep
pop
cmp
bound
sbb
aaa
dec
xchg
mov
push
sbb
and
in
fcomp
push
ins
add
(bad)
dec
inc
aad
push
jmp
mov
push
cld
lods
paddq
and
fst
(bad)
mov
pop
xchg
imul
test
mov
lods
fwait
jmp
xor
adc
add
jecxz
and
fst
mov
outs
fld
pushf
nop
mov
jno
dec
mov
lock
(bad)
sahf
jecxz
pop
mov
inc
les
inc
jecxz
jns
cmp
xor
sbb
cmp
mov
jo
jecxz
and
aam
pop
out
scas
dec
bnd
sbb
pop
or
fdivr
in
sub
jo
fs
adc
std
sbb
lahf
or
push
aaa
and
and
jne
fadd
push
inc
add
push
push
push
jecxz
mov
(bad)
fmul
inc
repz
std
sar
or
aad
inc
outs
mul
mov
jo
stc
dec
popa
jmp
inc
mov
inc
push
arpl
enter
fs
mov
and
pop
lds
test
fbstp
test
loope
jmp
xor
mov
xor
add
mov
cmc
in
sub
fcmovb
mov
push
xchg
in
outs
push
jecxz
mov
mov
js
bound
push
(bad)
lds
imul
ror
leave
adc
fs
dec
or
lea
leave
paddq
fbld
fs
xchg
push
shl
mov
imul
jno
add
and
push
xchg
(bad)
cli
or
pop
lea
test
call
push
mov
mov
ds
ja
sbb
sar
repz
bound
call
pop
ficom
stc
mov
(bad)
mov
loop
jne
ret
(bad)
pop
ss
xchg
aaa
push
add
push
adc
std
fsub
mov
fdiv
dec
mov
push
inc
das
or
xchg
sar
sub
hlt
out
cmp
pop
lahf
xchg
test
xchg
pop
fdivrp
and
idiv
cmp
and
rcl
vmulpd
jbe
mov
popa
std
or
fwait
xchg
ins
sub
sub
pop
in
in
(bad)
in
or
jae
cmp
mov
lea
aad
bound
out
dec
xchg
add
cmps
mov
jb
ds
aas
shr
mov
enter
out
jl
xchg
mov
movs
lods
lods
push
adc
ja
(bad)
leave
sahf
or
ja
jl
xor
mov
or
clc
push
icebp
sbb
or
cmc
push
call
test
or
int
ja
xchg
mov
lds
pop
cli
and
into
fcom
and
jecxz
jmp
daa
sbb
js
lods
mov
fldenv
xchg
adc
test
leave
outs
xchg
outs
pop
bound
pusha
inc
dec
movs
mov
mov
sti
pop
int
pop
ss
push
mov
inc
loop
mov
or
adc
fld
pushf
int3
sub
xor
dec
mov
imul
retf
mov
pop
pop
add
adc
mov
and
push
scas
add
xor
leave
or
mov
stos
adc
fcmovb
push
(bad)
dec
mov
aaa
out
push
popa
rcl
outs
mov
out
repnz
push
dec
loop
xchg
mov
(bad)
cmp
repz
popa
movs
je
in
mov
xchg
push
gs
sub
or
icebp
fst
jle
je
push
sti
leave
mov
pop
ds
cmp
mov
sbb
nop
icebp
pushf
jg
stos
dec
outs
adc
repnz
cmp
pop
mov
or
hlt
scas
jl
test
out
cmp
fwait
loopne
inc
icebp
sub
(bad)
call
int
adc
sbb
mov
movs
xchg
and
cmp
and
pop
add
sbb
jbe
(bad)
or
pop
mov
xchg
sbb
xchg
sub
mov
add
addr16
fs
je
sahf
jle
sub
jns
jo
pop
or
jb
cmp
sbb
sub
call
sar
sbb
gs
pshufw
pop
mov
scas
or
jb
mov
sub
mov
cli
add
in
and
sbb
pushf
ins
push
mov
bound
fild
fld
and
mov
add
add
and
loopne
ins
dec
push
adc
sti
imul
ret
jae
xchg
or
and
and
sbb
clc
jle
adc
sub
dec
inc
cmps
in
fmul
imul
test
inc
adc
fdivr
retf
movs
sub
test
cmp
push
pop
aas
cmp
movs
cmp
adc
(bad)
ss
mov
aaa
dec
scas
sbb
pop
pusha
cli
pop
sub
repnz
hlt
and
dec
fs
imul
xor
popa
ret
xchg
sti
in
loopne
stos
popa
dec
or
pop
sub
sbb
xchg
add
call
repnz
adc
cld
cld
jne
xor
mov
sti
cmp
mov
mulps
push
cs
pop
mov
pop
aam
movs
(bad)
jb
mov
sub
cmp
push
out
push
aad
xchg
lods
je
pop
and
push
and
dec
pop
cs
and
add
(bad)
int
pop
call
fistp
jno
into
in
adc
sub
in
mov
call
shl
push
mov
dec
or
jg
jbe
movs
jns
scas
cmc
mov
xor
scas
inc
pop
xor
pop
mov
adc
shl
inc
mov
dec
dec
cdq
adc
pop
adc
push
jnp
movs
jge
jbe
ret
mov
std
cmps
out
mov
jno
je
jne
hlt
mov
dec
call
inc
(bad)
sti
pop
sti
jl
cmps
add
sbb
test
fcom
cld
dec
mov
aad
fidivr
mov
cs
or
in
add
cmp
retf
cli
xchg
jmp
pop
inc
stc
and
cmp
adc
xchg
jge
mov
xor
sbb
clc
cmp
ins
add
icebp
loop
pop
pop
xor
leave
dec
pushf
mov
rol
push
pushf
adc
xchg
jne
dec
nop
in
adc
in
fcmovnb
repz
xchg
enter
cmp
push
cmp
in
mov
(bad)
dec
inc
and
lock
or
frstor
inc
in
mov
dec
arpl
(bad)
mov
inc
out
cmc
pushf
adc
repz
sub
sbb
mov
shl
and
sbb
add
pop
shr
cli
hlt
and
loop
enter
sub
cmps
hlt
js
hlt
nop
mov
movs
jne
and
rol
pop
mov
inc
gs
add
(bad)
jne
scas
sub
cmps
lock
adc
ja
or
bound
lods
icebp
sbb
ins
mov
sbb
add
pop
xor
leave
mov
shl
adc
enter
lods
cmp
pop
dec
ret
adc
fisttp
jae
cmp
mov
cdq
mov
sbb
jne
push
lock
inc
xchg
sub
lds
cmps
jae
jg
ret
xchg
je
mov
mov
sbb
mov
mov
fsub
or
pop
out
cdq
dec
out
cmp
test
dec
dec
bound
adc
sub
clc
lahf
int3
or
cwde
mov
popa
cmp
sbb
call
add
cmp
in
pop
popa
(bad)
xchg
aas
iret
nop
imul
mov
jecxz
pop
pop
idiv
mov
ins
xor
mov
xchg
cmps
sub
jns
aas
lahf
out
xor
xchg
pop
sub
jle
cs
scas
adc
jecxz
mov
xor
mov
dec
(bad)
scas
sub
cmp
xchg
xor
pop
ret
sahf
mov
inc
in
mov
or
adc
pop
jae
push
nop
ret
icebp
shl
inc
enter
push
add
sub
sbb
fsubr
sbb
cmp
lea
int
jb
(bad)
hlt
inc
arpl
add
jg
add
or
cmp
push
pop
fisttp
and
imul
movs
enter
stc
sub
clc
push
adc
mov
cs
push
inc
push
sti
mov
in
in
mov
push
sbb
mov
mov
lods
(bad)
mov
sub
call
jmp
pop
or
fild
or
push
sub
sub
scas
repnz
xor
aaa
in
xchg
xor
test
or
sbb
add
mov
sub
cmps
xor
mov
pop
cmp
in
xchg
loopne
jmp
lods
xor
add
sbb
cmp
pop
pushf
pop
xor
add
loopne
pop
push
jecxz
xor
js
pop
xor
imul
fxch
ds
mov
inc
xor
adc
cmp
sbb
add
adc
fwait
jecxz
xor
loopne
aaa
sub
gs
das
cmp
addr16
add
push
fmul
sub
mov
outs
(bad)
pop
fs
push
(bad)
mov
popf
popa
sbb
or
cmp
repnz
adc
std
adc
push
js
dec
lock
sbb
dec
xchg
add
test
push
xchg
(bad)
jl
aaa
adc
les
pop
loope
and
push
scas
pop
mov
ins
icebp
mov
test
cs
mov
fiadd
mov
fcmovnbe
adc
sbb
mov
loop
jp
(bad)
mov
push
pop
inc
in
cmc
(bad)
sbb
push
adc
xor
lock
call
test
scas
pop
sbb
int
mov
push
xor
or
or
push
(bad)
rol
add
sub
addr16
mov
mov
cdq
mov
pop
cmp
inc
imul
out
rcr
sbb
push
addr16
not
mov
adc
sub
dec
pop
add
daa
mov
cmp
dec
pop
(bad)
and
call
jbe
cmp
jbe
shl
or
sub
int3
add
mov
cmp
aas
(bad)
lods
cs
xchg
inc
fadd
sbb
(bad)
sub
lods
sti
jo
test
adc
inc
jbe
(bad)
cmp
push
sub
adc
sbb
aad
sbb
stos
ret
xchg
gs
or
out
inc
inc
jg
dec
or
mov
call
mov
push
mov
xchg
push
or
jo
push
outs
or
jnp
ja
sub
jg
pop
sub
pop
jecxz
retf
ror
mov
adc
inc
rcl
rcl
or
hlt
ficomp
dec
jnp
pop
fist
pop
and
in
daa
sub
dec
lahf
in
pop
lock
cdq
popa
cmp
hlt
mov
adc
lds
push
call
cmps
aaa
or
jg
jmp
(bad)
in
arpl
les
xchg
je
push
add
cld
adc
xor
loop
in
add
mov
xor
test
mov
loopne
in
dec
les
xchg
mov
movs
shl
add
into
jb
ja
int
psllq
(bad)
xor
cli
and
mov
fnstcw
pusha
add
push
retf
dec
outs
pop
test
xor
mov
daa
dec
push
push
call
popa
jo
and
nop
dec
jge
pusha
pop
push
(bad)
mov
pop
test
scas
mov
rcl
call
rcr
in
dec
mov
ret
rcl
test
jne
mov
stc
repnz
mov
(bad)
in
mov
sbb
(bad)
pop
xor
ret
pop
loopne
push
lods
(bad)
leave
mov
ret
clc
or
xor
mov
daa
mov
cli
pusha
mov
jne
xchg
sbb
imul
scas
(bad)
mov
and
or
stc
fwait
xchg
jo
xor
sub
jmp
test
iret
fidivr
xchg
mov
in
fidiv
test
or
xchg
call
pop
xor
ficom
retf
or
adc
fidiv
fdivr
je
in
adc
push
je
arpl
addr16
(bad)
jmp
jle
inc
and
sar
call
popf
in
dec
pop
lahf
add
mov
movs
js
hlt
les
gs
cmps
sbb
aaa
push
push
leave
fsubr
popf
xchg
and
xchg
lahf
adc
and
pop
add
xlat
pop
or
into
retf
test
test
mov
fwait
sbb
inc
movs
std
push
imul
or
push
push
inc
push
jo
dec
test
push
in
daa
cld
and
mov
ret
jge
stos
out
xchg
inc
xor
inc
mov
jno
mov
pop
jecxz
sub
jmp
fs
mov
mov
fwait
inc
in
pop
pushf
mov
mov
inc
sahf
movs
pop
int3
into
jl
cwde
scas
das
repnz
and
jns
xor
(bad)
adc
es
jp
push
retf
mov
mov
das
retf
js
int3
stc
in
xor
add
jg
add
enter
mov
jmp
sub
fiadd
push
pop
mov
push
and
inc
addr16
push
add
test
jmp
inc
in
sti
mov
sub
xchg
pop
inc
pop
cld
cmps
(bad)
sbb
mov
stos
sbb
sbb
daa
pop
xchg
mov
popf
(bad)
call
sar
inc
mov
inc
std
test
mov
repz
stos
in
hlt
jns
js
repnz
mov
pop
fdiv
sbb
push
push
js
call
or
push
repz
cmp
dec
cmp
daa
inc
jns
shl
out
loope
jge
jb
icebp
rcl
cmp
mov
ss
xchg
stc
shl
mul
gs
jp
sbb
push
movs
fld
pop
popa
ret
scas
pop
and
xchg
cdq
pop
movs
inc
mov
movs
out
jne
call
jp
mov
cli
data16
call
add
push
test
inc
shl
xchg
aaa
js
fist
jae
mov
or
mov
or
repnz
xchg
popa
test
mov
cmp
cmps
loop
jae
or
push
jb
test
dec
mov
bnd
es
into
shl
(bad)
popf
jmp
and
mov
adc
rol
or
stos
cwde
pop
imul
in
ss
lock
mov
cs
or
stos
dec
out
cmps
iret
sbb
shl
mov
adc
mov
pop
push
dec
sbb
xchg
mov
fcomp
add
sbb
pop
push
lea
pop
loop
xchg
ss
xchg
lds
sub
test
mov
adc
sbb
sbb
push
(bad)
adc
add
popf
xor
aaa
jmp
out
out
pop
and
mov
bound
xchg
pop
and
mov
hlt
fld
mov
add
jbe
or
(bad)
out
inc
or
aam
scas
test
je
aaa
cs
sub
mov
sar
push
dec
or
gs
ins
shl
pop
add
mov
pop
fcom
inc
adc
rcl
in
cmp
stc
outs
pushf
test
fbstp
arpl
sub
mov
sbb
mov
fadd
je
int
out
sub
mov
leave
push
pop
retf
cmc
adc
call
and
adc
pop
retf
(bad)
jg
fisub
hlt
dec
call
jg
mov
cld
or
cmp
sbb
ins
out
sub
adc
popf
bound
out
inc
xchg
push
pop
push
aas
xlat
cmp
push
test
fst
sbb
(bad)
and
std
das
lods
in
lahf
or
hlt
sbb
push
pop
mov
sbb
sbb
jne
sti
aaa
push
or
aaa
xchg
scas
adc
cmp
popa
lea
out
fmulp
cs
cmp
loop
popa
push
add
cmp
jmp
sbb
in
pop
inc
fisubr
ins
call
xchg
fdiv
arpl
mov
pushf
(bad)
retf
xor
mov
pop
loope
loop
sar
pop
mov
push
mov
or
movs
seta
loope
sti
inc
js
loope
inc
into
ss
push
pushf
pop
sti
sbb
(bad)
fdivr
push
pop
idiv
and
pop
jmp
or
jne
pop
lods
movs
add
movs
or
mov
movs
add
sbb
sub
mov
inc
cwde
adc
leave
in
add
outs
icebp
cmp
fnstcw
fstp
mov
sbb
inc
inc
sbb
pop
movs
mov
ins
xchg
push
mov
scas
sbb
xchg
xor
cmp
mov
jp
out
cmp
std
cmp
cmp
mov
ins
and
shl
(bad)
into
mov
push
cmp
in
arpl
add
imul
jmp
or
add
push
xchg
shl
xchg
sub
or
ret
dec
push
mov
lods
aad
xor
or
or
cmps
data16
loope
(bad)
retf
retf
in
push
fstp
test
call
outs
mov
ror
pop
mov
aad
clc
push
movs
aas
and
mov
jl
inc
sub
cwde
or
cmp
stos
adc
pop
adc
inc
popa
jge
mov
lods
lods
dec
sbb
cmp
xchg
or
xchg
cmp
sbb
mov
xor
pop
push
ins
pop
push
xor
scas
sub
mov
and
test
ret
lds
mov
out
call
push
rcl
aaa
das
cdq
mov
arpl
out
add
mov
or
sbb
cli
sbb
(bad)
adc
pop
sbb
xlat
dec
fs
retf
inc
mov
mov
mov
test
jbe
dec
aaa
xor
jge
mov
push
mov
mov
data16
sub
test
daa
hlt
loop
aam
sub
mov
iret
jmp
and
mov
fmul
fmul
xor
xor
aas
js
jae
jg
dec
jne
xor
jmp
lock
leave
xchg
jb
mov
into
mov
cdq
call
js
add
add
add
and
mov
and
and
(bad)
cmp
sahf
jo
movs
inc
sbb
cdq
pop
fisttp
mov
jmp
and
pop
outs
dec
mov
jno
adc
fwait
push
mov
retf
dec
out
mov
fst
fwait
lds
push
jae
or
inc
enter
fimul
push
daa
psrlw
pop
(bad)
std
mov
ins
inc
ss
std
ja
sub
ret
(bad)
cmp
cmps
adc
push
into
aad
push
and
inc
jmp
cld
stc
dec
fistp
xor
outs
pop
add
lods
aam
popf
push
in
add
inc
adc
push
push
sbb
shr
repnz
ror
xlat
mov
pop
aam
ret
lods
rcl
and
dec
jbe
cdq
inc
lods
inc
fbstp
pop
pop
shl
and
test
inc
sbb
cwde
ror
mov
out
aam
and
adc
inc
(bad)
aad
sar
push
mov
cwde
ror
sbb
pop
repz
sub
jbe
cdq
in
fsub
push
mov
sbb
or
mov
out
fcom
loopne
jg
enter
xchg
sar
sub
inc
shl
in
xchg
cmp
cmp
adc
sar
(bad)
fadd
mov
xor
sub
sub
loope
lods
fld
or
push
xchg
hlt
test
mov
imul
movd
das
push
push
outs
mov
mov
jmp
cmps
jbe
adc
call
xchg
xor
cmp
call
ins
pop
jmp
mov
ss
or
jp
stc
cmc
mov
push
mov
in
nop
(bad)
in
push
stos
sti
push
jmp
pop
xor
pop
jg
mov
aam
ss
sub
mov
sbb
loope
in
fdivr
pop
lahf
test
sti
outs
jb
shl
leave
pop
pop
cmp
loope
(bad)
je
pushf
(bad)
leave
leave
icebp
sbb
lods
mov
outs
addr16
rcl
lahf
mov
cld
loope
xor
fdivr
ret
and
(bad)
in
sbb
mov
xor
outs
add
jns
mov
or
and
hlt
inc
jne
sbb
mov
(bad)
jge
into
paddsw
push
dec
pop
pop
push
or
cmp
sti
std
icebp
icebp
cwde
mov
(bad)
add
xchg
std
fidivr
push
inc
pop
movs
inc
xchg
mov
sbb
loopne
jo
ret
mov
xadd
rol
rol
out
out
scas
sbb
rcl
pop
pop
lods
mov
xchg
jmp
push
(bad)
dec
imul
int3
cmp
pop
icebp
fidivr
jg
addr16
pop
jns
mov
(bad)
mov
xchg
pop
xor
ror
outs
mov
cdq
icebp
push
sbb
cdq
push
cmp
pop
and
jg
test
movs
cmps
call
enter
cs
pop
into
sub
(bad)
xchg
cmp
inc
in
xchg
and
mov
data16
lds
les
jg
xchg
ret
popf
out
cmps
ins
and
imul
xor
cwde
outs
outs
pop
lock
test
and
ret
xchg
inc
xchg
ret
icebp
aas
mov
push
sub
ret
sub
jb
fs
aas
jbe
aad
(bad)
dec
mov
add
inc
jb
sub
test
ins
push
xor
ins
dec
jge
sahf
fcomp
xor
test
push
fsub
jp
jp
imul
sub
pop
imul
pop
xchg
jae
mov
cmp
mov
jns
xchg
xchg
mov
dec
in
std
sub
into
in
rcr
dec
(bad)
pop
in
jne
(bad)
dec
mov
rcl
inc
stc
sub
sub
fdivr
clc
ror
pop
ret
xor
lock
lods
scas
out
mov
into
and
sub
lea
mov
out
adc
pop
rcl
scas
inc
jle
pop
push
mov
jp
outs
popa
or
push
dec
sub
mul
and
cmp
mov
mov
adc
call
add
push
call
test
xchg
xchg
mov
pop
(bad)
push
and
or
fldenv
mov
popa
or
pop
test
int3
xchg
scas
push
push
cmp
inc
mov
inc
or
cmp
mov
sbb
dec
pop
fwait
mov
ja
mov
add
mov
out
cmp
mov
sbb
cmp
pop
dec
pop
sti
mov
call
inc
cmp
mov
pop
(bad)
(bad)
jns
inc
mov
cmps
iret
int3
leave
pushf
cs
sub
test
jecxz
(bad)
push
or
lock
lods
pop
sub
xchg
call
jg
fcomp
xchg
jbe
aad
adc
fwait
pop
sti
int
out
mov
iret
std
mov
ins
mov
call
xchg
pushf
xchg
inc
loopne
dec
pop
mov
jg
sbb
imul
mov
push
popf
mov
fucomi
push
dec
xor
jle
and
and
mov
rol
fistp
loopne
sub
add
cmp
out
dec
mov
loop
loop
jge
or
ins
fcomp
inc
xchg
ja
pusha
arpl
call
adc
mov
shl
xchg
enter
xchg
jno
sub
jae
inc
outs
sub
in
arpl
jmp
and
shl
adc
jp
adc
mov
mov
push
scas
xchg
in
test
lods
add
push
adc
mov
enter
mov
je
inc
jae
in
xchg
push
call
mov
int3
aaa
rcl
push
loope
je
call
call
xor
loopne
jbe
es
mov
or
jne
daa
ss
call
test
stos
cmps
sar
js
sub
pop
inc
jne
xchg
mov
outs
outs
pop
jne
and
xchg
in
lahf
mov
div
scas
mov
xlat
je
hlt
cwde
push
(bad)
cmps
ret
dec
jne
popa
das
test
cmp
or
ins
mov
or
xor
jle
cmps
jl
scas
les
cmp
or
fiadd
loopne
push
imul
jo
ins
jl
sbb
and
hlt
jno
cmc
mov
cs
dec
ds
je
xchg
stos
push
sub
cmp
mov
and
push
and
xchg
adc
jns
movs
xor
ins
(bad)
in
push
push
xchg
xor
push
pop
xchg
dec
fsubr
cwde
pop
sbb
data16
mov
cmp
adc
neg
mov
push
sbb
xor
mov
mov
mov
push
jne
pop
fdiv
dec
test
adc
inc
add
sbb
push
not
daa
jns
push
fadd
xchg
cmp
(bad)
jge
mov
gs
inc
or
mov
mov
pushf
cmp
inc
mov
cmps
sub
adc
jno
test
lea
daa
(bad)
and
into
jnp
fldz
sbb
push
sbb
stc
lods
pop
sub
mov
out
jge
dec
mov
jbe
or
mov
or
adc
sub
repz
mov
inc
scas
add
je
jo
push
je
sar
repz
jb
loope
fidivr
mov
dec
rcr
xor
push
loopne
add
mov
sbb
jle
cmp
imul
or
jecxz
pop
inc
xchg
push
movs
sub
xlat
and
outs
je
(bad)
into
mov
(bad)
out
pop
jnp
rol
mov
fwait
mov
xor
imul
ret
fcmovnu
xchg
push
xchg
fimul
or
push
mov
push
push
xor
je
test
mov
add
je
aas
fadd
aam
mov
xor
adc
fld
xchg
jp
sahf
clc
imul
mov
cmp
jmp
mov
inc
fcom
btr
das
mov
imul
fcmovnbe
stos
mov
add
inc
jne
mov
sub
aad
and
push
xor
pop
div
dec
mov
nop
(bad)
push
push
ins
adc
rol
xchg
les
cmp
int3
(bad)
push
xor
(bad)
dec
adc
leave
iret
pop
jb
xor
mov
out
lea
test
pop
dec
xchg
sub
inc
mov
loop
cmp
out
xchg
dec
or
mov
inc
cmp
inc
ins
outs
adc
sbb
mov
in
mov
xchg
repz
sahf
ficom
rol
call
xchg
cld
pushf
pop
cli
fabs
xor
xor
inc
xchg
sti
pop
loopne
mov
cmp
jmp
xchg
jae
mov
popa
mov
adc
add
mov
mov
jae
cld
xor
call
inc
int
iret
cmp
data16
shl
(bad)
and
shr
jnp
jp
repnz
jl
xchg
jmp
jae
hlt
push
fisubr
out
xor
pop
adc
xor
lea
in
dec
xchg
outs
rcr
jns
and
mov
imul
mov
jmp
mov
cs
mov
arpl
and
and
sub
fistp
addr16
lea
loop
dec
xchg
aas
loope
add
stos
cmp
(bad)
xor
sub
adc
fld
adc
jb
inc
mov
fcomp
outs
sbb
mov
addr16
mov
addr16
xor
imul
rcl
cwde
mov
fldcw
mov
daa
mov
jne
jl
dec
cmp
in
repz
ins
movs
mov
xchg
je
mov
dec
dec
rcl
push
add
and
pop
xchg
movs
mul
xchg
icebp
lea
mov
cmp
mov
lahf
rcl
(bad)
push
push
sub
inc
adc
arpl
push
pop
pushf
rcr
xchg
and
xchg
pop
rol
cmp
cmp
fld
jecxz
sahf
pop
pop
(bad)
inc
mov
(bad)
mov
call
leave
push
int
test
adc
es
mov
and
je
add
in
mov
push
popa
mov
out
mov
mov
push
xor
ja
imul
std
hlt
test
dec
es
sub
out
dec
jne
scas
popa
inc
hlt
xor
aam
push
pop
pop
inc
push
out
xchg
mov
sar
push
sbb
mov
mov
sub
jl
outs
push
fwait
pop
cmps
aad
(bad)
push
dec
dec
push
mov
add
out
outs
int3
loope
cmp
fild
cmc
test
mov
clc
mov
cmp
adc
popf
jge
pop
call
add
jl
rcl
mov
imul
(bad)
cmp
into
loop
jg
push
dec
or
lahf
in
xchg
add
push
mov
sub
jl
cmp
gs
cli
dec
(bad)
js
cmp
cli
push
sbb
push
test
or
inc
and
xchg
in
push
rcl
stos
pop
(bad)
clc
mov
add
inc
mov
(bad)
test
iret
scas
cmps
les
ss
or
add
test
dec
mov
push
xor
movs
into
add
inc
gs
add
mov
lods
inc
in
push
cs
ins
scas
(bad)
xor
test
jo
jbe
sti
cmc
bound
retf
pop
into
fdiv
mov
cmps
sub
xchg
repnz
lahf
imul
inc
jnp
dec
and
out
fimul
mov
sti
sub
iret
in
push
and
in
in
jg
ins
inc
xchg
lock
movs
aas
rcr
jbe
jnp
inc
ds
pop
cmp
push
jb
jmp
mov
sbb
paddsb
pop
mov
pop
loop
(bad)
dec
aad
adc
pusha
sar
mov
xor
std
or
mov
xor
ror
push
call
jae
fnstsw
ins
(bad)
mov
jg
jb
pop
mov
or
mov
and
repnz
repz
xor
shr
retf
dec
(bad)
repz
frstor
jp
out
in
mov
pop
mov
cmps
ret
sbb
shl
or
in
and
xchg
call
mov
fdivr
adc
pop
jns
imul
fld
add
hlt
movs
shr
or
sbb
outs
sti
mov
push
xchg
sbb
cmp
inc
call
mov
mov
int
inc
jmp
dec
sub
ds
jae
pusha
popa
mov
push
pop
fs
bound
jns
jnp
out
popf
xchg
jo
ror
(bad)
mov
mov
cmc
jmp
(bad)
xchg
mov
fwait
sub
fmulp
mov
push
cmp
daa
push
xchg
push
icebp
push
ds
mov
ds
inc
cli
sub
mov
fstp
fcom
(bad)
adc
push
sub
cmc
mov
repnz
in
jno
pop
out
rcr
mov
or
jecxz
mov
mov
push
pop
adc
bound
aas
mov
and
push
rcl
push
mov
pop
xchg
test
pop
pop
scas
mov
ret
cli
dec
xor
ds
xor
push
dec
(bad)
or
dec
mov
call
outs
mov
inc
adc
iret
cmp
mov
into
es
jmp
jns
(bad)
leave
(bad)
call
dec
mov
push
js
mov
outs
dec
and
lods
jns
adc
int
or
xchg
xchg
leave
adc
push
aas
xor
sub
adc
pop
and
sbb
imul
mov
out
fdivr
movs
fs
and
lea
mov
ins
mov
retf
mov
call
std
add
xor
loope
mov
test
sbb
pop
test
rol
jno
or
pop
cmp
inc
cmp
adc
cmp
jmp
xchg
int
retf
inc
test
imul
adc
into
xor
mov
pop
mov
test
retf
adc
xchg
mov
push
jle
push
mov
call
mov
cmp
xchg
xchg
hlt
cmps
fst
pusha
mov
loop
lods
xor
inc
ret
push
enter
cmps
call
bound
pop
fisttp
nop
push
mov
jae
imul
call
jge
inc
push
fcmovnb
repz
out
add
jmp
jp
or
cmps
and
fdivr
iret
fnstenv
mov
les
mov
inc
fdiv
scas
js
popf
or
add
jno
aaa
rol
push
or
cs
icebp
loope
mov
aas
mov
inc
adc
and
push
inc
dec
jnp
cmp
push
fistp
dec
dec
not
dec
xchg
fs
cmp
(bad)
fwait
imul
pushf
pop
xchg
xchg
sbb
out
loopne
inc
into
and
inc
mov
xor
sub
push
ja
mov
sub
jge
mov
jg
jbe
pop
aaa
add
outs
mov
or
(bad)
dec
lods
out
add
and
enter
rcl
cdq
xor
pop
mov
dec
xor
adc
fsub
arpl
xor
in
mov
mov
sbb
cld
xchg
push
dec
xor
mov
mov
neg
jbe
mov
sbb
and
shl
jne
imul
xchg
hlt
outs
sbb
add
inc
fstp
mov
pop
push
sar
lock
xchg
(bad)
sahf
sub
inc
ins
pop
(bad)
push
jp
outs
push
(bad)
das
add
fadd
jne
add
mov
xor
xchg
xchg
inc
xchg
push
movlhps
je
ss
fistp
les
cmps
mov
inc
movs
in
shr
jecxz
mov
out
ret
and
js
jg
inc
ficom
inc
mov
jno
pop
add
sub
mov
xor
aas
pop
in
pop
jne
fst
add
popa
push
mov
(bad)
bound
stc
mov
js
push
ins
sbb
xchg
cld
add
pushw
dec
sbb
stc
push
jnp
imul
mov
rcl
out
pop
into
ja
gs
sbb
ds
adc
cdq
in
cs
pop
pop
and
scas
adc
xlat
pop
inc
(bad)
push
xchg
jg
xchg
and
enter
call
aad
push
and
lods
out
mov
mov
icebp
pushf
xchg
push
icebp
push
push
xor
or
popf
(bad)
(bad)
dec
pusha
es
cmp
pop
ss
(bad)
cmps
aam
aas
add
ja
or
ret
xor
enter
popa
or
shl
pop
push
in
jmp
imul
dec
inc
xchg
and
in
mov
icebp
pop
popf
xchg
loop
push
ffree
jb
sar
stc
xchg
or
popf
into
add
mov
push
ret
jp
jge
out
xor
cwde
mov
xchg
arpl
mov
sub
adc
add
test
test
add
das
test
push
pushf
cmc
arpl
leave
inc
outs
cmp
(bad)
dec
dec
add
xor
add
in
dec
xchg
add
lods
mov
icebp
dec
(bad)
aaa
lods
inc
inc
int
push
and
or
mov
mov
pop
adc
scas
inc
xor
movs
xchg
mov
add
aaa
add
or
push
sbb
pusha
xor
hlt
mov
xor
mov
in
add
adc
(bad)
mov
sbb
cdq
or
pop
jb
loop
sahf
adc
not
push
out
push
adc
dec
(bad)
xchg
pop
xchg
imul
add
dec
pop
mul
in
retf
adc
jecxz
shl
and
sbb
push
mov
cwde
sbb
xchg
mov
je
sbb
mov
data16
mov
(bad)
mov
aad
repz
cmp
xchg
sti
cmp
std
xor
adc
add
(bad)
mov
scas
popf
pop
(bad)
cmc
xchg
push
cmp
lods
js
push
js
stc
(bad)
cmp
ja
inc
retf
(bad)
call
in
mov
or
test
mov
mov
push
dec
and
cld
mov
push
int
sub
or
cld
add
imul
cmp
out
out
sbb
repnz
mov
xor
gs
or
jl
push
push
sbb
push
mov
push
xor
cmps
fcomp
sub
push
push
dec
sub
fs
mov
cdq
adc
sub
xchg
adc
pop
test
call
in
shr
and
pop
jle
cmp
xchg
adc
mov
jb
jbe
xchg
adc
push
jb
xchg
stos
loopne
arpl
rcr
mov
jbe
and
jecxz
out
call
mov
xor
adc
inc
and
mov
xor
frstor
and
shl
mov
and
fst
ins
push
push
xor
cmp
out
xchg
sub
aas
push
inc
inc
or
push
cwde
xchg
repnz
movs
xchg
push
ret
sbb
cmp
sub
in
jmp
jae
jg
and
out
stos
jle
sub
pop
popf
fisub
push
inc
outs
jl
cli
mov
or
push
sti
scas
(bad)
and
cmp
jecxz
mov
enter
add
sub
imul
pop
cmps
sub
mov
mov
shl
dec
push
mov
or
call
in
clc
sub
and
xchg
xchg
ins
add
cli
mov
xchg
jg
jge
fsubr
add
or
(bad)
ins
fs
sub
inc
mov
or
inc
mov
xchg
jns
cwde
sbb
clc
nop
push
out
mov
add
shl
push
cmp
mov
cmp
jo
xchg
mov
xor
pop
(bad)
je
mov
iret
fwait
jl
lds
adc
and
cmp
into
daa
push
in
iret
mov
mov
and
cs
call
mov
or
or
inc
outs
test
call
repz
xchg
out
xor
or
sbb
leave
add
mov
(bad)
fdivr
das
dec
sahf
loopne
mov
iret
bound
jge
jb
adc
push
in
adc
loopne
data16
test
dec
lods
arpl
outs
xor
out
push
mov
xor
js
jl
cli
stc
inc
aas
jg
sbb
xor
leave
test
cmps
ret
mov
jl
or
rcr
cs
and
inc
retf
jb
xor
and
jmp
lods
jle
push
leave
cwde
test
test
dec
nop
mov
mov
icebp
clc
dec
dec
mov
aam
inc
or
mov
je
mov
xchg
daa
mov
xor
std
sti
push
adc
pop
xor
call
popf
stos
inc
sar
cmp
sbb
cwde
pop
es
jns
cld
rcr
sub
cmp
retf
data16
push
adc
test
call
mov
aam
pop
pop
inc
sbb
loop
xchg
push
icebp
jne
cmp
ins
retf
sub
xchg
adc
(bad)
dec
ret
out
jle
cmp
cld
pop
mov
lds
js
popf
dec
jg
xchg
or
jbe
mov
test
mov
push
div
fistp
jo
lock
dec
xor
mov
enter
mov
das
mov
(bad)
test
push
add
sub
in
es
jae
pop
jle
test
jecxz
push
push
mul
mov
mov
pop
shr
lods
lods
lds
or
repz
dec
ror
loopne
cmps
pop
push
imul
xchg
cmp
xchg
loope
retf
enter
dec
in
(bad)
imul
adc
jno
inc
mov
mov
add
sub
pusha
fnstsw
jo
test
and
push
cmp
xor
pushf
jo
fist
or
jmp
cmp
add
mov
mov
push
push
mov
and
cdq
add
jbe
add
push
push
mov
js
adc
add
test
ret
retf
outs
mov
ins
addr16
dec
add
pushf
mov
pop
das
(bad)
mov
jle
cmp
add
int3
adc
sbb
cmp
adc
push
lods
adc
adc
lahf
xchg
fwait
(bad)
outs
sub
repnz
or
ror
ja
add
adc
add
les
pop
add
fadd
cmp
push
aas
or
das
adc
pop
adc
mov
mov
pop
dec
enter
mov
cld
adc
pusha
rol
mov
inc
pop
mov
add
add
popa
mov
inc
push
rcr
add
repz
ja
mov
jecxz
icebp
mov
pop
ins
(bad)
jle
push
imul
enter
lds
dec
add
or
aas
mov
test
inc
(bad)
in
lods
pop
rcl
add
dec
repnz
sub
xor
jg
jo
sub
in
icebp
mov
rcr
fwait
xlat
(bad)
popa
outs
in
fidivr
mov
fild
sub
mov
inc
mov
mov
push
add
mov
jne
rcr
mov
inc
fdivrp
cmp
sbb
xchg
test
pop
adc
repz
cmp
das
repnz
jg
adc
ret
test
imul
call
sahf
movs
in
into
dec
or
sbb
test
cmp
pop
and
push
clc
mov
pop
inc
adc
cmp
and
ret
jp
popf
outs
jge
loop
pop
mov
push
push
push
sbb
stos
fsub
popf
push
dec
into
imul
out
mov
cmp
mov
mov
ins
pop
test
adc
push
shr
out
(bad)
in
push
and
hlt
bound
out
cmp
and
xchg
aaa
std
adc
aas
pop
cmp
adc
iret
popf
mov
jns
add
push
mov
inc
xchg
int
pop
loope
cwde
dec
mov
bound
pushf
fsub
and
sbb
fiadd
xchg
nop
mov
jmp
(bad)
cld
lock
push
sub
fld
or
addr16
sar
outs
mov
xchg
inc
out
ins
jns
(bad)
sbb
mov
adc
and
dec
fld
stos
daa
xchg
adc
call
sbb
push
adc
or
xchg
fcomi
in
ds
ss
or
cmps
or
jp
in
retf
div
fwait
mov
adc
mov
adc
push
push
push
out
bound
inc
jecxz
std
(bad)
fs
jecxz
inc
push
mov
mov
xchg
popf
mov
inc
rsm
imul
add
nop
pop
cmc
mov
stc
dec
shl
dec
push
rcr
and
les
(bad)
popf
cmp
imul
mov
mov
cs
mov
inc
ret
mov
movs
xchg
cdq
sahf
repnz
shl
shl
pop
fnstenv
xchg
xor
adc
lds
sub
mov
pop
push
adc
hlt
mov
scas
iret
jbe
pop
neg
cmps
mov
sub
dec
popa
gs
adc
imul
xchg
mov
inc
push
daa
rcl
pop
loop
pop
or
pop
adc
sub
mov
ja
data16
cmp
pop
arpl
adc
adc
sbb
repz
adc
xchg
out
jecxz
mov
pop
sbb
scas
stos
fsubr
jg
out
bound
push
clc
xchg
js
add
fnstsw
pushf
or
jbe
sub
pop
adc
dec
arpl
call
cmp
mov
idiv
jne
lahf
lea
hlt
lahf
dec
loop
das
push
loop
rcr
outs
call
sbb
es
adc
add
aam
icebp
jns
rcl
xchg
iret
inc
sub
aas
cwde
popa
inc
pop
not
outs
outs
shr
lock
(bad)
lock
pop
lds
sbb
in
mov
repz
sub
stos
out
cmps
mov
sbb
jecxz
add
lods
mov
pop
pop
and
xchg
nop
push
xchg
popa
out
fisub
xor
sub
cwde
out
push
xchg
add
push
and
adc
ret
push
in
and
cli
sbb
dec
dec
mov
ja
xchg
cmp
pop
sub
xor
test
bound
iret
pop
rcr
and
mov
outs
stos
int
sub
sar
jge
sub
xchg
pop
sbb
mov
sbb
push
dec
ss
leave
push
(bad)
sbb
mov
mov
in
scas
fwait
lds
inc
leave
push
dec
sbb
loopne
leave
jbe
in
mov
add
mov
or
ins
enter
and
inc
adc
clc
sub
sub
repz
stc
xor
push
sub
cmp
shl
cmc
xor
test
push
inc
mov
add
or
out
jl
xchg
push
ss
idiv
cmp
add
jbe
xchg
add
dec
mov
and
stos
jmp
adc
push
add
push
push
aam
jmp
cli
cdq
(bad)
jo
inc
sbb
mov
jmp
mov
imul
mov
xor
in
mov
mov
mov
push
xchg
mov
(bad)
push
push
adc
dec
mov
pushf
test
jno
ret
loope
add
lock
xor
push
inc
or
xchg
mov
mov
ret
xor
or
shl
and
pop
mov
cmps
out
ret
xor
call
jl
gs
popf
pop
cmp
push
out
test
mul
repz
ds
div
sbb
fwait
(bad)
mov
xchg
inc
mov
push
xchg
ffree
mov
es
ja
mov
push
push
out
fcomp
sub
fdecstp
push
jb
xchg
sahf
jne
jo
ja
pop
dec
adc
(bad)
stc
jmp
call
sbb
mov
lea
xor
cmp
sub
inc
mov
adc
inc
dec
lahf
call
jecxz
in
retf
dec
mov
test
loop
xchg
inc
gs
rol
cmp
loopne
fsubr
inc
rcl
jecxz
lock
push
xor
pop
or
cmp
jl
movs
xchg
push
mov
repz
ret
pop
retf
mov
add
xor
add
daa
ds
mov
cld
fldcw
(bad)
dec
jmp
jns
lods
loop
rol
sbb
shr
shr
xchg
fisubr
mov
call
mov
mov
push
cmp
push
icebp
retf
xor
or
jp
add
push
push
jmp
js
mov
or
jns
add
dec
sbb
jmp
push
adc
ins
dec
fst
adc
int3
push
in
out
xor
jle
loope
lahf
mov
(bad)
cmp
cmp
and
aad
add
arpl
outs
adc
push
es
xor
popa
mov
int
int3
and
out
cmp
ret
ret
mov
mov
(bad)
out
lods
movs
rcl
mov
pop
mov
aaa
int
ror
cdq
and
leave
(bad)
push
or
rcr
or
cmp
pop
and
cli
mov
or
enter
and
or
xor
and
std
dec
pusha
adc
mul
stc
hlt
ins
or
inc
into
jo
popf
fidivr
jns
mov
gs
jo
daa
jl
enter
push
aas
addr16
movs
pop
dec
xchg
mov
jg
add
cmp
push
int3
ret
cmps
fst
mov
xor
mov
(bad)
mov
pop
sti
jno
bound
fsub
fwait
das
icebp
in
arpl
pop
lods
xor
push
inc
mov
or
or
ja
cs
rcl
imul
mov
test
xchg
push
(bad)
cwde
faddp
popa
movs
push
pop
scas
int3
enter
push
outs
inc
pop
jmp
push
mov
iret
add
jecxz
pop
cmp
sub
add
jecxz
add
cmps
jle
fwait
retf
add
cmp
xor
push
outs
(bad)
scas
push
sub
outs
scas
or
ret
xchg
out
arpl
xchg
iret
fidivr
cmps
mov
cdq
ror
jno
stos
push
mov
xor
mov
mov
popa
add
jbe
mov
pop
pop
mov
push
aas
jbe
xor
dec
jg
test
fidiv
adc
and
pop
push
pusha
enter
xchg
and
movs
jnp
sbb
jne
inc
call
and
fwait
dec
shr
retf
pop
fld
or
mov
push
shl
sub
cmc
or
(bad)
fldcw
ss
ja
dec
out
shr
xchg
(bad)
test
pop
fcom
fcomp
lea
outs
dec
data16
inc
std
outs
and
push
pushf
sahf
push
mov
or
push
jmp
pushf
mov
int
pop
fmul
rcl
xchg
mov
mov
pushf
je
dec
mov
sbb
push
ret
aas
lea
ins
sti
mov
in
bound
pop
adc
adc
loope
call
jbe
mov
mov
jne
sbb
cmp
cmc
sub
repz
mov
(bad)
imul
mov
(bad)
aas
mov
outs
inc
clc
test
ins
not
mov
adc
(bad)
xor
pop
add
mov
imul
jp
cmp
and
cmc
sbb
push
mov
mov
jg
add
mov
ins
mov
out
dec
xchg
aaa
mov
ret
inc
ror
and
jb
xor
aaa
stos
shl
scas
cmp
std
imul
pop
inc
add
pop
adc
repz
aad
mov
scas
mov
pop
retf
cmp
xchg
repz
retf
clc
fs
cli
jmp
bsr
push
cli
mov
lock
inc
push
pusha
inc
pop
xchg
push
(bad)
add
(bad)
gs
push
sbb
mov
(bad)
push
adc
mov
mov
mov
(bad)
inc
sbb
mov
push
sbb
fcomp
sub
xor
ficomp
push
add
dec
hlt
rol
jns
(bad)
fisubr
adc
or
mov
sbb
sbb
test
ds
pop
dec
out
jg
movs
mov
jmp
aaa
adc
push
pop
gs
mov
movs
repz
stos
mov
ins
aaa
out
rcl
push
fucomp
addr16
push
shl
or
pop
(bad)
into
out
loopne
stc
test
test
dec
popa
aam
mov
cld
xchg
(bad)
pop
xchg
and
mov
aaa
push
sahf
push
neg
std
in
in
push
jle
iret
fs
adc
daa
jnp
pop
sub
test
and
mov
dec
xchg
bound
repnz
movs
call
out
jle
mov
test
push
ror
out
es
sub
dec
scas
mov
ficom
test
xor
sahf
out
cmps
push
or
cwde
je
dec
popf
imul
sub
mov
cmc
xchg
out
push
lahf
mov
push
add
xor
push
adc
sub
jb
adc
fs
je
pop
and
or
mov
pusha
icebp
popf
mov
cmp
cld
xlat
pusha
cmp
fsubr
or
imul
out
xor
(bad)
cmp
dec
ja
mov
enter
(bad)
cmps
in
clc
fcom
jnp
scas
push
adc
cmc
imul
jne
pusha
xor
adc
fucomp
jo
or
sbb
(bad)
mov
fadd
test
and
and
daa
iret
dec
stos
push
loop
loopne
dec
push
mov
fst
sub
mov
sbb
jne
imul
pop
(bad)
das
push
into
arpl
ss
fiadd
jnp
les
in
sbb
stc
push
(bad)
dec
sbb
adc
adc
push
aad
cmp
xlat
fbld
mov
adc
jnp
jne
add
mov
cmp
std
mov
popf
cmp
stc
jb
push
(bad)
stos
dec
ins
and
adc
mov
addr16
add
enter
retf
jne
mov
push
out
dec
cmp
shr
rcr
fcmovnu
ret
sub
in
xor
cmp
mov
jb
pop
cdq
mov
add
shr
iret
(bad)
mov
and
or
xor
in
mov
clc
sbb
xchg
mov
jmp
inc
push
xchg
psubsb
jno
cmp
jmp
or
mov
mov
cmc
fild
in
xchg
or
clc
bound
inc
pop
jbe
scas
jbe
mov
add
mov
into
cmp
lahf
mov
js
add
push
jnp
out
mov
mov
aaa
adc
jmp
out
sub
movs
jbe
mov
movs
dec
hlt
dec
mov
xor
mov
lahf
pop
test
bound
sbb
nop
mov
inc
mov
adc
adc
pop
stos
fisub
xor
shl
fmul
aam
mov
pop
aad
cmc
out
add
scas
test
loopne
xor
and
mov
cld
test
mov
jnp
xchg
xor
popf
ins
test
lods
out
add
lds
inc
add
movs
js
imul
sti
into
add
out
das
data16
mov
or
push
retf
jl
aad
scas
push
jo
adc
jns
pop
lds
adc
loop
sbb
(bad)
sbb
in
jmp
pop
xchg
xchg
jg
dec
fmul
sti
sbb
test
push
aas
push
call
cmps
test
pushf
repnz
push
aas
call
push
fisttp
in
call
pop
push
dec
push
xchg
xor
xchg
(bad)
pop
sub
mov
push
test
jae
pusha
adc
hlt
fwait
and
fiadd
nop
mov
iret
loopne
test
into
inc
pop
jne
imul
and
mov
test
into
rcr
aam
add
fidivr
xor
(bad)
shl
jne
inc
jg
push
inc
push
jno
mov
and
cwde
cmp
add
loope
adc
js
stos
test
jl
pop
cmps
fstp
scas
pop
ss
icebp
push
pop
cdq
cmp
inc
push
arpl
jns
mov
mov
pop
pusha
jmp
inc
xchg
ins
pushf
push
adc
pusha
aaa
sub
in
add
jo
enter
or
add
and
mov
out
xchg
jecxz
sub
arpl
fnstenv
adc
lea
push
sbb
xchg
jp
add
dec
das
shl
call
retf
out
cmp
movs
test
dec
out
cmps
push
xchg
adc
loop
pushf
js
adc
call
push
jge
fbld
jp
imul
lahf
loope
sahf
dec
fiadd
add
xchg
pop
imul
cmp
blcs
xchg
adc
pushf
ins
sub
cmps
retf
ret
or
pop
and
call
test
(bad)
scas
xchg
call
cmp
jge
pop
inc
or
lods
mov
push
sti
ror
in
(bad)
(bad)
stos
stc
mov
inc
adc
inc
pop
cmp
push
fisttp
push
repnz
test
mov
aaa
mov
call
hlt
sub
pop
jl
jmp
lods
rcl
mov
jbe
and
cli
bound
xor
iret
xor
(bad)
btc
push
inc
cmps
lock
cmp
dec
cs
mov
pop
pop
xchg
test
sub
jno
movs
sub
pop
and
call
adc
sti
pop
push
mov
pop
mov
or
stc
fld
inc
imul
dec
jge
test
repz
test
test
add
mov
(bad)
cmp
xor
mov
cwd
jmp
push
cmc
mov
leave
scas
loope
lods
int3
adc
inc
out
std
lods
les
sbb
rcr
ja
and
mov
retf
push
add
xchg
cmp
shl
cli
push
out
lea
adc
xlat
mov
bound
pop
dec
test
inc
and
in
cmp
or
into
cmc
cmp
add
xor
add
aas
adc
test
xor
jbe
mov
popa
in
mov
ja
in
imul
xchg
push
lods
test
inc
pop
loopne
lods
adc
jmp
pop
mov
mov
adc
adc
add
xor
sti
jne
fimul
sub
in
(bad)
cli
adc
int
in
icebp
adc
add
pop
loopne
add
add
shl
clc
mov
data16
into
sbb
test
inc
mov
gs
cwde
lahf
mov
ret
mov
stos
and
imul
fcom
scas
dec
adc
adc
dec
arpl
jecxz
push
out
fbld
cdq
ds
fsubrp
xchg
ret
inc
pop
cli
cmp
xchg
inc
mov
ins
dec
push
shr
push
mov
popa
or
into
jecxz
or
push
sbb
pop
cmp
pop
mov
dec
mov
pop
(bad)
retf
(bad)
jg
sub
and
ins
jno
in
clc
icebp
push
cmp
xor
sub
and
push
xor
les
push
mov
popa
or
mov
test
mov
push
pop
cmc
shl
mov
(bad)
ret
test
push
push
ror
nop
popa
ss
repnz
mov
mov
jne
arpl
mov
invd
sub
push
inc
pop
dec
out
xchg
jae
mov
sbb
mov
test
sub
addr16
(bad)
repnz
mov
xor
inc
xchg
outs
nop
xor
dec
add
je
xchg
and
or
inc
hlt
adc
sbb
jle
hlt
mov
popa
dec
clc
daa
pop
jl
adc
pop
sbb
ret
into
mov
neg
mov
repz
sbb
int3
int3
out
nop
jmp
fcomp
mov
shl
ret
jge
xchg
pop
xchg
pop
bound
jmp
xor
jge
xchg
lods
shl
cmp
cmp
daa
test
adc
inc
test
adc
mov
pop
iret
or
xchg
push
sub
mov
pop
push
cdq
div
or
dec
mov
aad
mov
shl
sub
and
xlat
data16
jne
stos
pop
aad
or
push
sub
mov
scas
pop
ins
shr
enter
mov
ret
pop
rcr
fs
inc
ja
xchg
adc
pusha
in
in
adc
iret
jb
and
add
sub
cmp
leave
push
jge
daa
sar
adc
fwait
jmp
jmp
mov
leave
jecxz
icebp
jg
sub
adc
repz
jge
mov
push
test
sbb
cmps
lods
fldenv
dec
fwait
icebp
int3
mov
mov
stos
xor
xchg
repz
sbb
cmc
jbe
and
jecxz
jmp
cmps
pop
repz
or
es
mov
push
rcl
dec
adc
ret
sub
pop
retf
adc
iret
mov
out
cmp
mov
cmps
stc
add
stc
dec
jmp
push
jmp
das
es
aas
and
bound
(bad)
mov
push
in
xor
mov
gs
test
mov
int
ror
adc
jmp
push
mov
sub
iret
mov
lods
mov
fldcw
sbb
push
dec
mov
retf
inc
das
pop
and
cmpxchg
mov
test
adc
and
push
repz
mov
jmp
xor
cld
or
cwde
cli
fs
and
call
jo
inc
(bad)
push
in
add
into
les
retf
inc
stos
mov
cmp
inc
ror
dec
in
xchg
out
add
in
mov
mov
out
inc
jmp
and
aaa
xor
arpl
icebp
ret
int3
out
pop
push
xor
mov
push
dec
stc
gs
rol
mov
xor
pop
cld
xor
cdq
add
(bad)
call
pop
sti
and
enter
out
pop
test
push
in
jbe
shr
mov
sahf
adc
adc
in
repnz
popa
mov
test
adc
xchg
bound
fisubr
cli
and
adc
outs
fucomi
imul
xchg
lea
xor
push
cs
sar
ret
rcl
arpl
jns
icebp
icebp
mov
add
(bad)
std
cli
or
rol
pop
daa
jnp
mov
test
inc
shr
jmp
aam
popf
out
test
mov
inc
aas
dec
hlt
sbb
xor
aad
push
(bad)
je
jmp
(bad)
jp
push
out
scas
outs
jmp
mov
lods
pop
aas
xchg
in
pop
jo
leave
shl
pop
xchg
dec
in
mov
push
sbb
(bad)
cld
clc
inc
jmp
in
and
bound
add
repz
adc
fwait
ret
xchg
aas
out
imul
in
(bad)
fidiv
jo
xchg
loop
xor
fistp
mov
push
xor
(bad)
xchg
jne
xor
dec
pusha
(bad)
outs
xchg
fidivr
jmp
and
and
dec
(bad)
mov
test
inc
int3
into
test
mov
jl
or
pushf
popa
xchg
sbb
adc
pop
lea
push
ds
ins
cmps
sbb
rol
and
sbb
xlat
fwait
(bad)
call
jae
hlt
jp
mov
(bad)
idiv
ror
xchg
addr16
into
fstp
int
je
fsub
jl
fadd
jp
sbb
dec
mov
int
pop
and
pop
pop
clc
add
repnz
ins
push
pop
adc
repz
lea
call
inc
prefetch
dec
mov
mov
mov
repnz
iret
fcmovnb
ds
arpl
les
push
movs
enter
inc
adc
into
std
xor
xlat
mov
in
mov
mov
sbb
add
scas
js
std
dec
sar
in
cmps
jg
sub
xlat
jne
sbb
scas
gs
lods
test
sub
mov
test
cmp
push
call
adc
xor
sbb
mov
cld
imul
mov
mov
add
add
sbb
jns
and
mov
inc
pop
cs
psraw
movs
imul
mov
xor
aad
cmp
ins
ret
mov
fsubr
out
out
je
ss
outs
adc
pop
jb
sub
lahf
test
jo
dec
sbb
inc
inc
add
rcr
in
mov
shl
or
lock
outs
cmp
divps
loope
in
cmp
lds
test
imul
aam
push
cmp
(bad)
mov
cld
lea
dec
imul
repz
lahf
add
jo
cmp
mov
add
(bad)
jno
adc
repz
mov
push
int
adc
pop
data16
jno
jo
ja
mov
cld
inc
xor
and
or
dec
rcl
lds
or
fisub
arpl
cmps
push
inc
hlt
aam
cmp
cmp
mov
(bad)
dec
in
adc
cmp
fwait
aad
sub
mov
divps
dec
fld
sbb
leave
mov
outs
mov
fsubrp
and
inc
and
dec
stos
test
repz
add
inc
ins
inc
cdq
dec
retf
and
cmp
pop
(bad)
ret
mov
mov
icebp
aam
enter
retf
add
arpl
jp
mov
adc
dec
mov
xchg
xchg
leave
shr
enter
fs
loope
sbb
out
repz
inc
add
xor
dec
jl
out
leave
sub
push
jne
adc
xor
sbb
inc
and
sahf
shl
test
jmp
mov
jns
scas
fadd
pop
(bad)
mov
scas
mov
mov
out
test
sub
xor
or
xchg
inc
or
mov
(bad)
and
cmp
add
(bad)
or
sahf
fistp
pop
aam
clc
mov
call
mov
in
xor
call
add
in
pop
test
(bad)
pop
out
or
adc
xor
add
rcr
les
push
ss
into
dec
add
dec
dec
sbb
in
es
into
aam
lea
push
dec
imul
dec
pop
mov
sti
in
(bad)
lods
mov
cmp
sbb
jle
retf
out
push
fisubr
imul
cs
cmp
xor
loop
imul
mov
jmp
nop
and
retf
sbb
jge
cmp
loope
pop
ds
sbb
fadd
jbe
mov
add
scas
adc
stos
arpl
sub
ss
mov
sub
xchg
call
adc
mov
add
(bad)
repz
add
xor
ret
(bad)
add
outs
inc
mov
sub
mov
dec
test
ins
cmps
xor
addr16
mov
cmp
and
fisttp
add
mov
sub
pop
test
dec
adc
push
cmps
aaa
stos
call
xchg
push
jb
jbe
jl
jo
and
push
inc
adc
pop
fistp
push
adc
xchg
ja
out
daa
mov
stc
cmp
(bad)
div
jne
cmp
mov
je
dec
jle
icebp
(bad)
inc
lods
push
xchg
add
ret
cmp
(bad)
sub
repnz
in
inc
push
pop
clc
call
outs
jl
mov
scas
inc
add
ins
sub
mov
add
mov
mov
cs
in
and
std
popf
mov
ins
xor
mov
ret
dec
ja
jno
lods
xor
je
mov
dec
pop
sbb
adc
xlat
mov
pop
fwait
mov
popa
inc
jne
je
pop
and
or
les
test
ret
cs
out
sub
jne
xchg
into
or
out
stc
ret
shl
jns
test
stos
cmps
xor
jae
test
inc
test
aas
cmp
(bad)
idiv
je
stos
aam
add
inc
cmp
mov
pop
(bad)
stos
hlt
outs
mov
dec
fwait
sub
iret
dec
in
je
push
retf
call
call
mov
mov
add
aas
pop
jle
inc
mov
stos
aaa
call
out
cs
pop
aam
adc
hlt
add
inc
adc
sub
and
cmp
std
iret
jp
push
std
ficom
sub
aas
test
xor
out
enter
jmp
iret
into
mov
sub
mov
and
hlt
xchg
dec
jno
adc
ret
mov
sbb
pusha
add
mov
fstp
lds
ss
test
xor
jmp
gs
lods
add
test
push
sbb
push
add
xchg
or
imul
and
test
pop
xor
sub
fimul
cmp
addr16
pop
pop
pop
adc
(bad)
(bad)
call
add
mov
mov
cmp
retf
ret
pop
pop
mov
stc
out
xchg
mov
jp
mov
movs
mov
cs
stos
lods
hlt
push
fstp
push
fidivr
cmps
cvttps2pi
repnz
pop
jno
or
arpl
lock
push
pop
bound
mov
push
push
sbb
jnp
or
je
push
mov
inc
xchg
stos
sub
repz
and
jmp
push
test
jne
test
clc
rcr
xchg
popf
call
fst
retf
imul
mov
pop
mov
xchg
sbb
popa
xor
outs
or
clc
out
dec
mov
push
int
dec
and
push
xor
lock
xchg
inc
stos
push
dec
jg
fimul
sub
jecxz
loope
aad
jns
jne
mov
dec
cmp
cwde
cmp
sub
test
sbb
scas
shl
test
or
and
cmp
in
mov
push
sbb
icebp
sahf
(bad)
jecxz
cmps
sub
test
or
mov
mov
sbb
pop
ret
push
popf
rol
fwait
sub
or
int3
pop
pop
pop
fwait
retf
inc
add
push
(bad)
fwait
mov
lods
jae
sbb
(bad)
je
dec
(bad)
pop
xchg
cmp
les
lea
pushf
sub
std
sub
xlat
pop
mov
mov
cld
movs
mov
cmps
dec
cli
test
pushf
pop
pop
push
mov
(bad)
mov
loopne
and
call
sbb
(bad)
jb
test
aaa
fadd
scas
aaa
and
shr
mov
lahf
addr16
or
cwde
sbb
mov
les
out
jecxz
push
xor
xor
xchg
popf
hlt
in
adc
fwait
cmps
mov
test
leave
sub
aad
in
shr
pop
lods
js
imul
mov
xor
mov
sub
sbb
je
cmps
test
les
adc
fmul
mov
movs
test
jp
sbb
aaa
push
aad
xchg
test
loope
test
sub
sbb
cmc
into
js
pop
xor
mov
mov
bnd
mov
adc
jle
ret
test
dec
pop
mov
cwde
sbb
or
xor
sbb
jae
mov
gs
mov
lahf
in
mov
imul
xor
sbb
cdq
sub
pop
cmc
cmp
mov
out
pop
pop
aas
sbb
xor
loope
sbb
xchg
dec
mov
dec
lock
ins
js
arpl
loope
dec
ror
jno
or
sahf
add
jno
loope
sbb
push
ret
mov
mov
retf
stos
or
mov
pusha
and
test
xor
sub
adc
cmp
out
adc
sub
mov
xchg
loopne
cmp
test
adc
or
lahf
xchg
xlat
outs
mov
mov
jecxz
sub
sbb
and
push
jecxz
call
pop
movs
sar
cmc
cdq
push
inc
jge
pop
in
sub
inc
dec
dec
xchg
xor
rcl
enter
arpl
adc
sub
push
xor
pop
dec
lea
push
inc
data16
call
jp
add
es
clc
xchg
inc
jge
out
cwde
nop
mov
stc
jbe
sbb
sub
mov
add
aas
push
push
fsub
inc
lock
stos
loope
dec
xchg
mov
sti
dec
mov
pop
ret
mov
ins
repz
ds
ja
mov
adc
dec
shr
pop
jne
call
fadd
aad
push
cmc
and
push
xchg
xor
pop
jle
lea
fcmovne
ins
test
imul
cmp
ins
adc
lock
adc
mov
dec
xor
daa
cmp
scas
int3
test
push
jns
sbb
into
sbb
push
rcr
ret
push
lods
pop
jg
jp
sub
inc
ret
sbb
sub
out
inc
xlat
in
and
fisub
mov
mov
icebp
cld
movs
sbb
add
add
jg
es
fld
sub
dec
jo
pop
mov
or
repz
lods
retf
mov
mov
mov
sbb
push
ror
sub
pop
iret
loope
mov
mov
fdivr
dec
paddusw
or
shr
aas
div
adc
ja
pop
jmp
mov
stc
adc
inc
pop
push
sbb
or
dec
ds
adc
rcl
sub
inc
add
shl
add
xor
mov
cmps
push
fdivr
cs
outs
cmp
test
fisub
fdivr
sub
sub
dec
push
in
loope
std
lock
jbe
pop
mov
push
retf
mov
pop
cmc
jb
pop
in
ss
mov
iret
xchg
dec
and
inc
leave
mov
jecxz
mov
mov
mov
ret
or
push
sbb
outs
mov
push
jne
pop
cmps
test
push
lahf
sub
in
inc
mov
xchg
mov
mov
shr
sub
test
sahf
shl
enter
sub
fisubr
pop
shr
cmp
or
mov
pop
xor
fs
imul
mov
out
ret
repnz
and
push
sub
jl
cmp
popa
pushf
fsub
(bad)
push
xchg
sub
xchg
fnstenv
fdivr
std
(bad)
movs
dec
dec
ins
cld
adc
pop
sahf
(bad)
adc
in
mov
enter
call
push
jg
jp
iret
imul
jne
fldz
cs
loopne
popa
ja
sub
nop
push
lods
aam
cmovo
xchg
inc
into
and
shr
bound
sub
sti
(bad)
aad
push
pushw
cwde
hlt
or
lahf
hlt
mov
jo
int
test
mov
lds
push
add
sar
imul
(bad)
sub
pop
mov
aas
sbb
push
test
cwde
cmps
adc
lods
sti
or
jno
jns
in
leave
add
mov
xchg
inc
inc
mov
mov
jbe
xchg
jmp
shl
mov
icebp
lock
or
jl
and
cwde
fwait
jb
mov
mov
mov
in
stc
or
shl
mov
mov
add
loope
fmulp
mov
lods
pop
sbb
aad
inc
inc
ret
out
jle
rcr
xchg
cld
in
mov
push
pop
add
add
cs
pop
mov
dec
dec
int3
push
add
std
dec
mov
fst
sahf
imul
sub
sub
sub
or
fld
mov
add
push
(bad)
mov
add
rcl
cmp
add
repnz
sbb
adc
adc
lock
retf
in
ds
and
xor
out
loop
pop
sub
cs
jl
xchg
ret
jp
xchg
mov
icebp
rcr
cmp
dec
cli
or
jecxz
mov
and
lahf
mov
mov
xor
sti
movs
(bad)
outs
mov
fldenv
cld
scas
arpl
out
xchg
pop
arpl
mov
cmc
jge
addr16
(bad)
retf
inc
(bad)
cmps
cld
retf
gs
and
mov
pop
mov
es
icebp
fistp
out
jb
jns
mov
push
inc
ja
lods
sti
imul
repnz
mov
dec
inc
jnp
or
xor
and
ret
stos
add
in
movs
xchg
fdivr
xchg
aam
push
cmp
xor
popfw
ror
mov
and
pop
mov
pop
aad
shl
inc
or
cwde
xchg
inc
pushf
jae
add
fiadd
sbb
add
aam
rcr
adc
je
mov
out
mov
test
sbb
inc
fmul
xchg
xlat
(bad)
fdivr
mov
mov
retf
pop
xor
mov
push
xchg
mov
pop
push
out
push
dec
inc
or
sar
loopne
adc
jge
mov
(bad)
dec
mov
stc
push
in
push
push
and
mov
sahf
inc
mov
arpl
sbb
fwait
pop
sub
add
(bad)
jle
stos
xchg
sub
xor
xor
cmp
test
sbb
xor
xor
loope
inc
mov
test
ja
xchg
mov
ja
push
es
imul
push
sahf
jmp
pushf
inc
jmp
sub
adc
or
test
add
in
mov
mov
stos
pop
mov
mov
add
icebp
in
cmc
gs
jns
test
mov
jl
lahf
sti
xchg
mov
xchg
nop
push
cmp
inc
mov
sbb
mov
in
out
fs
cmp
mov
jle
fsub
adc
lock
repnz
movd
or
dec
xchg
push
mov
cld
mov
jne
into
mov
mov
repz
and
push
jecxz
test
div
sub
pushf
es
repz
stos
dec
jmp
add
ins
mov
jmp
int
inc
test
scas
and
cld
ds
fs
sub
ret
popa
xor
dec
addr16
xor
pusha
and
mov
int
fmul
sub
pop
push
loopne
mov
addr16
mov
inc
test
div
mov
popf
nop
stos
mov
leave
in
sahf
in
in
or
mov
xchg
cmps
das
fsub
jmp
mov
inc
jg
mov
call
jge
cmp
cmc
sbb
xchg
push
push
js
lea
inc
rcl
push
xchg
iret
pushf
jge
pop
xchg
push
icebp
ins
pop
mov
xor
adc
ret
ds
fdivrp
mov
fsub
cmp
imul
inc
or
mov
gs
jb
fimul
inc
push
mov
mov
test
fst
outs
call
mov
or
repz
jo
scas
pushf
test
mov
sbb
inc
int3
and
(bad)
movs
fistp
aaa
cmp
out
stc
xlat
or
cmps
and
add
cmc
leave
test
xor
jno
loope
gs
pushf
mov
jno
(bad)
cld
jg
cli
push
stos
xor
and
imul
dec
out
sbb
imul
pushw
sbb
enter
je
iret
sar
cdq
push
push
mov
mov
push
or
iret
push
push
and
mov
cmp
dec
les
or
mov
add
loopne
cmps
shl
push
cs
inc
outs
mov
ins
ja
push
shl
shl
fwait
jl
loopne
enter
dec
ror
add
scas
jecxz
mov
jle
pop
xchg
mov
pop
xor
dec
pushf
cmps
or
std
xor
sbb
cld
jo
fidivr
and
scas
push
jb
mov
sub
pop
mov
sub
or
pop
cld
mov
push
xor
push
loop
outs
fiadd
xchg
add
test
stc
add
data16
sub
xchg
cmp
sbb
pop
fsub
(bad)
push
xchg
add
push
mov
dec
sub
cmp
dec
aad
mov
aas
test
mov
cld
cmp
jns
jg
sbb
adc
mov
push
mov
jg
mov
dec
(bad)
jg
mov
fdiv
xchg
sti
add
sub
leave
and
pop
add
xchg
and
xchg
cbw
repz
inc
mov
dec
push
aas
test
jno
pop
loop
lea
(bad)
movs
mov
aam
aam
mov
shl
jp
sub
sbb
xchg
mov
fcom
fwait
in
pop
ret
xchg
loope
test
push
not
pop
scas
int3
jbe
jne
enter
iret
xor
pop
popf
push
(bad)
inc
sbb
aas
push
fiadd
cmp
pop
jo
and
cmps
inc
or
sub
call
in
outs
stos
push
push
pushf
cmp
nop
shr
jb
inc
xchg
inc
pop
xor
cmps
pop
nop
leave
pop
jmp
cmp
repnz
sbb
mov
sbb
sbb
adc
ss
sub
mov
pop
dec
stos
into
adc
mov
inc
lods
adc
push
in
adc
pop
mov
inc
retf
ins
sbb
es
sub
lea
adc
fist
shl
imul
or
(bad)
iret
add
pushf
nop
loope
and
xchg
out
mov
or
dec
fimul
imul
mov
lds
adc
or
int3
mov
aad
sbb
icebp
mov
repnz
imul
and
test
nop
daa
push
sub
pop
jmp
pop
inc
or
push
cmp
fld
adc
inc
jecxz
mov
mov
jne
icebp
inc
gs
jns
aas
mov
jg
adc
aas
adc
aas
push
movs
sbb
dec
loop
pop
xchg
je
mov
mov
ret
outs
push
mov
and
sbb
ja
pop
jae
cmc
sti
mov
stc
into
cmp
add
and
cmp
adc
pop
mov
sar
cli
inc
(bad)
mov
in
pop
mov
shr
sub
dec
or
loope
arpl
sbb
sahf
push
inc
mov
sub
(bad)
mov
retf
lods
mov
cmp
xchg
call
and
data16
xchg
jne
jle
cdq
das
fidiv
cmp
xor
iret
mov
retf
ds
xchg
xchg
pop
or
cdq
ret
dec
mov
mov
ret
rcl
outs
cmp
xchg
bound
sbb
aam
aam
cs
add
mul
push
retf
xchg
cmc
xor
pushf
les
sub
inc
sahf
xor
and
jmp
mov
ins
sbb
cmps
clc
jmp
cmp
sbb
sar
and
cwde
fdivp
mov
in
xchg
push
lods
jmp
popf
fwait
or
mov
(bad)
mov
pop
adc
xchg
xchg
ins
jl
or
add
xor
xor
jbe
fld
xlat
push
push
div
(bad)
fstp
sub
push
xor
pushf
(bad)
scas
dec
push
jbe
and
pop
mov
retf
fwait
sbb
loope
mov
push
pop
div
(bad)
inc
xchg
xchg
mov
cld
xor
xlat
popf
ja
int
mov
pop
xlat
aam
sub
cmp
adc
mov
imul
sbb
dec
out
mov
mov
add
imul
cmp
jae
xchg
sahf
cmp
scas
mov
fwait
jg
dec
cmp
or
ss
jmp
imul
jle
sub
push
je
and
int
rcl
mov
scas
call
ins
out
pop
xchg
repz
inc
add
mov
jb
shr
push
push
adc
out
add
jo
inc
mov
cmp
mov
sub
dec
xor
aas
mov
xor
enter
xor
add
ins
ss
cmp
cmc
jne
xchg
mov
adc
jne
add
(bad)
into
mov
mov
and
popa
dec
sub
sbb
mov
jecxz
and
mov
or
shr
jl
pop
push
movups
fdiv
mov
lahf
gs
sub
sbb
dec
scas
jbe
sub
fsubr
rol
push
mov
and
xchg
push
mov
ins
lods
stc
ss
adc
mov
adc
mov
sub
dec
ins
addr16
cmp
mov
fild
jp
fild
(bad)
push
test
ret
jno
lds
inc
mov
hlt
mov
push
jp
adc
(bad)
rcl
xor
das
in
dec
mov
xchg
into
inc
xchg
(bad)
rcl
test
aaa
daa
mov
dec
div
(bad)
fstp
pop
or
vcvtdq2pd
dec
push
imul
pop
lods
pop
mov
lea
push
sbb
cmps
pusha
xlat
arpl
aas
int3
in
jne
sub
arpl
xor
xchg
movs
imul
mov
mov
fiadd
mov
in
ffree
test
fidiv
add
dec
inc
inc
test
mov
adc
or
adc
cmp
(bad)
pusha
jp
dec
(bad)
jnp
out
test
mov
js
dec
cmp
sub
sub
xchg
ror
add
jecxz
sbb
mov
aaa
cmp
dec
xor
les
xchg
xchg
out
sbb
inc
push
cdq
and
or
or
mov
cmc
xchg
mov
pop
ins
cmp
add
test
ss
cmp
cmps
dec
pushf
xor
pop
daa
mov
jp
xchg
and
test
and
inc
rcr
mov
call
fnstsw
sar
adc
addr16
xchg
cmp
rcr
fsubr
call
fiadd
cwde
sti
scas
sti
xchg
in
je
ds
xchg
inc
cmps
mov
sub
push
rcl
jp
shr
add
lods
aam
cmp
popa
test
xchg
loopne
push
(bad)
mov
rcl
dec
mov
mov
fidivr
pop
fbstp
dec
pop
into
jno
call
mov
je
and
pusha
shl
push
jo
int3
js
nop
jmp
call
test
shl
scas
inc
out
int3
inc
in
ins
gs
cmp
retf
xchg
lock
and
inc
push
fild
movs
jmp
call
call
jbe
ret
push
push
loop
int3
pop
jmp
pop
mov
sbb
jno
shl
mov
shl
call
mov
daa
jmp
dec
adc
dec
(bad)
adc
mov
hlt
jmp
aad
test
dec
shl
push
xchg
adc
push
je
call
push
or
xor
aad
pop
pop
mov
int
mov
dec
loop
xchg
dec
leave
push
mov
mov
jmp
cmp
mov
int
jnp
shl
add
jns
adc
push
in
pop
inc
int3
loop
xacquire
add
cld
mov
inc
xchg
jnp
sbb
lahf
loope
(bad)
pop
lods
repz
jp
mov
adc
pop
lahf
retf
and
or
cdq
sar
icebp
sub
inc
xchg
fmul
into
xchg
pop
js
pop
sub
enter
je
adc
retf
cld
or
cld
rol
jmp
jg
out
lahf
iret
(bad)
and
loopne
mov
push
mov
dec
ret
test
push
push
aad
pop
ja
xchg
imul
arpl
fcomp
mov
stos
sbb
lds
jae
loope
clc
mov
inc
jne
mov
xchg
add
call
xchg
push
stos
xchg
movs
loop
dec
stos
cmp
loope
sub
mov
xchg
clc
outs
lahf
push
xchg
(bad)
sub
or
push
xchg
hlt
bound
jno
mov
mov
and
mov
jp
mov
push
sub
enter
int3
jnp
dec
push
jl
cmps
dec
lahf
fdiv
add
mov
jnp
cmp
inc
(bad)
andps
fistp
and
ficomp
mov
test
(bad)
hlt
repnz
sub
aad
sbb
ja
lock
or
imul
jg
aam
call
dec
int
xchg
mov
ss
icebp
int3
mov
cmp
mov
setns
pusha
dec
scas
(bad)
mov
test
push
test
pop
inc
inc
mov
or
test
xor
ds
xchg
xor
add
dec
mov
lea
mov
fdiv
or
ins
and
pop
(bad)
aaa
cld
imul
push
scas
fcomi
leave
test
aaa
movs
cmp
cld
adc
sub
cmp
movs
sub
loopne
movs
add
es
test
loope
out
sti
nop
ror
mov
out
sub
scas
or
mov
or
sub
test
cwde
pop
(bad)
outs
retf
sub
dec
jo
(bad)
lods
test
sbb
fisttp
aaa
adc
cmps
dec
pop
cs
out
inc
outs
xor
push
xor
push
mov
mov
call
mov
cmp
ret
xchg
sar
and
(bad)
xchg
jl
push
adc
mov
inc
sub
sbb
xlat
xchg
or
into
inc
ss
sar
movs
stos
pop
sbb
add
lock
(bad)
jb
enter
iret
int
sub
and
lahf
clc
xor
push
adc
fcmovb
fisub
mov
mov
test
adc
pop
xor
int
xchg
loope
test
enter
sbb
leave
stos
mov
and
sub
mov
jle
sbb
xchg
shl
cdq
std
adc
retf
mov
test
aam
retf
mov
int
add
pop
cmps
lea
sub
adc
(bad)
icebp
mov
push
fabs
inc
jne
cmp
loop
push
std
mov
daa
pushf
adc
ror
mov
cs
lock
js
(bad)
out
and
cmp
cld
inc
jmp
ja
push
sbb
enter
clc
xchg
push
int
jmp
fs
mov
fdivp
push
pop
xlat
pusha
ins
or
pop
rol
aam
out
icebp
jmp
enter
rol
popf
enter
into
sbb
inc
and
add
push
push
inc
lea
mov
xchg
xlat
stos
xchg
retf
repnz
in
mov
inc
sub
in
repz
or
xor
out
cmp
mov
neg
push
jle
pop
call
or
arpl
(bad)
arpl
(bad)
adc
data16
dec
fcomp
add
cwde
cmp
mov
inc
mov
cmps
sbb
int
jb
imul
or
push
cmp
sahf
arpl
mov
pop
stos
jge
fiadd
push
into
imul
das
jb
pop
xchg
dec
adc
addr16
in
and
fmul
lds
cs
fdivp
pop
pop
mov
mov
inc
es
pop
add
jae
jg
push
mov
adc
int3
pop
pushf
pop
repz
adc
mov
cmp
aam
dec
ins
push
in
mov
xchg
int
scas
aas
mul
call
(bad)
sbb
daa
sub
je
mov
cmc
xchg
(bad)
rcl
aas
data16
in
sbb
xor
add
jbe
jne
pop
shl
cs
sub
push
inc
scas
adc
dec
cmp
mul
repz
stos
lahf
dec
sahf
ficom
cdq
mov
xchg
and
inc
je
arpl
mov
push
std
ret
mov
mov
bound
test
pop
jae
mov
addr16
bound
movs
add
add
call
and
faddp
push
daa
loope
mov
mov
daa
inc
(bad)
cld
xchg
lock
fnstenv
inc
push
sub
ins
push
lock
ret
inc
adc
or
pop
test
leave
or
mov
push
xchg
add
pop
sub
jnp
push
in
sahf
or
push
out
in
popa
ss
mov
lahf
pop
cmps
mov
jge
in
scas
sbb
loope
pop
sub
xor
arpl
push
enter
jl
dec
push
add
scas
cdq
inc
fld
fs
ins
mov
jmp
and
pop
or
arpl
and
xchg
fs
dec
jne
clc
pop
(bad)
jle
and
pop
ret
je
push
mov
mov
adc
jnp
mov
jo
les
sub
jno
in
and
shl
ins
clc
int3
rep
sub
push
xor
lds
faddp
push
cmp
das
inc
cmps
scas
or
(bad)
xor
push
stos
nop
out
ret
cmps
sub
or
ror
sbb
adc
fst
or
push
mov
out
jecxz
lock
bound
fld
cmp
cmp
xor
pop
xor
sub
jb
(bad)
xor
or
inc
push
xchg
cmps
popa
pop
or
fldz
gs
hlt
sub
fs
in
push
aas
inc
inc
jno
nop
pop
lods
call
inc
mov
loope
xchg
mov
aaa
inc
cmps
and
mov
sti
nop
ss
outs
mov
gs
adc
loopne
lea
xchg
out
adc
push
test
(bad)
retf
adc
push
test
mov
xchg
icebp
push
adc
fldln2
retf
sbb
fild
shl
popa
or
aad
sbb
cmps
mov
or
or
pushf
ja
jmp
cwde
imul
inc
pop
fdiv
jmp
cmp
push
test
xor
dec
cmp
mov
jmp
lea
add
adc
jb
inc
jne
push
out
test
mov
xor
aam
cmp
sbb
mov
cmc
fcomip
add
je
push
repnz
ins
sub
(bad)
ja
mov
dec
enter
stc
or
xor
cmp
jno
(bad)
std
and
int
hlt
test
lock
pop
push
cmp
inc
inc
adc
lock
xor
sbb
cmp
push
adc
clc
iret
jb
dec
sub
add
inc
cdq
mov
jmp
(bad)
cmp
and
mov
idiv
xor
lods
je
ds
jmp
mov
pmulhuw
rcl
aam
hlt
xlat
adc
adc
std
jmp
add
adc
movs
dec
stc
and
pop
xor
inc
je
jle
xor
in
mov
pop
iret
jle
es
rol
fsubr
and
std
loop
fcmovbe
xchg
data16
test
js
ss
test
(bad)
ss
mov
push
std
add
jl
(bad)
push
jne
pushf
movs
addr16
or
les
shl
les
xchg
loopne
aaa
lock
sbb
cmp
(bad)
pop
cld
lds
popa
add
cmp
jmp
mov
mov
test
in
xchg
shr
ins
push
cs
push
jle
jg
gs
and
cmp
sbb
es
and
(bad)
mov
inc
add
pop
or
push
jecxz
pop
xchg
or
or
imul
das
lods
push
push
test
(bad)
fdiv
int3
lds
div
add
pop
popf
inc
and
mov
je
jle
cdq
dec
lods
adc
adc
fdivr
jb
pop
xor
call
mov
and
sub
and
inc
jmp
and
mov
jge
shl
mov
pop
xchg
mov
adc
pop
hlt
retf
stos
cmc
in
dec
jge
pop
jae
mov
push
vpshld
sbb
jmp
pop
scas
xchg
xor
push
stos
add
mov
loopne
jnp
push
mov
and
jmp
fldenv
loope
lods
arpl
adc
xchg
adc
jo
aaa
lock
jecxz
repz
jl
loopne
push
rol
jmp
(bad)
js
and
or
add
dec
out
mov
xchg
movs
mov
push
add
mov
test
sub
and
movs
mov
lods
jmp
or
cmp
push
loop
shl
pop
js
jns
pushf
iret
mov
sbb
mov
xchg
fist
ficom
mov
and
in
cmp
scas
fbld
jecxz
jae
add
mov
and
nop
and
cdq
mov
fst
aaa
jnp
mov
cmp
jno
mov
jnp
push
sub
std
ins
mov
test
mov
or
fwait
sbb
int
pop
(bad)
js
loopne
lahf
push
xor
or
stos
xlat
(bad)
sub
add
bound
ror
ins
mov
aam
sub
jg
and
lock
ret
test
dec
aas
and
inc
mov
inc
mov
pop
lahf
loope
inc
loope
cmps
call
mov
lods
and
les
sbb
mov
ud2
mov
pop
mov
pushf
int
push
pop
mov
mov
test
pop
add
mov
add
cmp
inc
xchg
js
mov
(bad)
ficom
mov
sub
pop
sbb
xchg
(bad)
inc
retf
pop
and
jmp
ins
mov
scas
or
popf
jmp
bound
pushf
fidivr
mov
or
(bad)
retf
fmul
fmul
cld
mov
xor
outs
mov
add
or
jle
xchg
dec
stos
mov
ins
sti
mov
mov
pop
jl
push
leave
retf
test
mov
cmp
jne
lds
lock
movs
cwde
imul
cmp
jmp
xchg
xchg
hlt
icebp
cmps
fwait
pop
out
add
(bad)
imul
cli
(bad)
psubw
and
ror
cli
jae
pop
sub
and
xchg
adc
add
loope
xchg
sub
push
dec
out
(bad)
add
cmp
arpl
xchg
mov
inc
push
das
mov
adc
neg
ss
jmp
out
cdq
jmp
ins
mov
arpl
pop
sbb
test
cld
lock
cmps
inc
inc
call
in
imul
bound
adc
sbb
nop
cmp
push
xor
add
adc
mov
rcl
mov
or
sbb
mov
pop
les
mov
loopne
pcmpgtw
mov
xchg
pop
out
inc
rcr
test
jnp
ror
mov
inc
xchg
or
jg
scas
mov
push
or
aas
push
pop
dec
popf
into
jge
icebp
imul
mov
ja
cmp
and
imul
inc
mov
add
js
push
push
mov
jg
pushf
lds
inc
push
cmps
fisub
test
add
adc
cmp
xor
hlt
mov
xchg
or
push
mov
inc
jnp
jl
mov
pop
sbb
movs
into
out
clc
imul
and
loopne
jl
call
cmp
xor
xchg
mov
jno
sbb
push
iret
and
mov
call
push
inc
fisub
push
sbb
jno
sub
(bad)
xchg
icebp
aam
xor
cs
test
(bad)
mov
in
lods
and
xchg
aad
sbb
and
test
(bad)
mov
mov
mov
fucomi
jne
movs
pushf
mov
jnp
and
bound
sbb
aad
jl
ror
jne
out
and
ret
mov
ins
adc
inc
inc
sbb
out
fmul
ja
sbb
jmp
bound
loop
es
xor
addr16
and
sub
rol
jl
in
xchg
clc
dec
mov
lods
lea
into
outs
scas
sbb
mov
mov
shl
cmp
cmc
or
lock
cmp
cwde
mov
scas
aas
push
sbb
push
push
xchg
and
dec
mov
inc
inc
sub
pop
dec
cmp
jp
add
loop
or
es
sub
iret
arpl
hlt
and
mov
imul
inc
cld
push
pop
loop
xchg
stos
jl
out
(bad)
jns
adc
push
and
adc
out
pop
ins
and
loop
cmp
nop
ins
ret
adc
mov
cmps
aas
outs
jnp
hlt
push
jb
retf
in
movs
int
dec
movs
jl
js
adc
inc
js
rep
inc
inc
test
shr
or
in
sub
lods
jae
mov
cmp
scas
fisttp
jbe
xchg
sar
popfw
int
xchg
loop
daa
mov
mov
jae
cld
xchg
jnp
cdq
xor
sub
cs
add
dec
stos
jp
and
mov
rol
jbe
fisub
push
or
or
xlat
iret
icebp
nop
scas
ja
inc
inc
xor
mov
arpl
sbb
fist
ins
fdiv
or
jle
iret
lahf
jae
sbb
add
cs
cmps
cmp
and
test
cld
sbb
xchg
in
dec
ret
lds
test
pop
sub
les
test
mov
mov
cmps
dec
dec
sbb
(bad)
mov
inc
inc
push
movs
and
mov
mov
in
mov
and
loop
xchg
push
push
mov
jbe
push
jne
int
jno
sbb
mov
outs
aas
push
ss
lods
xchg
inc
pop
and
fcom
ret
xchg
add
in
movs
hlt
push
mov
ds
repnz
je
(bad)
mov
xor
test
pop
dec
mov
movs
call
stos
cmps
pop
cmp
and
mov
lock
std
xchg
jnp
aaa
dec
mov
lock
sub
data16
aaa
outs
lock
(bad)
pop
js
push
jbe
pop
mov
rol
jno
cmp
adc
cs
ja
out
frstor
ins
inc
jb
mov
stos
loope
cmp
adc
push
xchg
in
ja
add
mov
jg
sbb
xchg
and
mov
pop
fcomp
push
sbb
fwait
das
sbb
fwait
loope
fwait
and
xor
jp
lods
xchg
shl
fbld
mov
icebp
loopne
ins
pop
push
inc
(bad)
or
inc
dec
and
mov
pop
xchg
inc
mov
inc
and
ret
push
mov
and
cmp
push
dec
add
mov
push
cmps
mov
ja
push
mov
adc
jno
push
pop
shl
xor
aam
push
leave
add
and
test
ja
mov
pop
push
and
rcl
pusha
sbb
or
xchg
fnstcw
test
xlat
xor
in
jne
mov
or
stos
jmp
sub
ss
daa
jnp
sahf
arpl
push
movs
jbe
pop
dec
enter
xchg
xor
ins
loop
test
fwait
sub
xlat
dec
cli
div
sti
arpl
imul
jp
xor
rcl
repz
neg
add
or
in
dec
test
xchg
add
aad
sti
movntq
emms
jecxz
jmp
xor
mov
repz
cmps
inc
adc
mov
pop
frstor
add
jns
nop
test
pop
add
ss
rol
ret
jecxz
sbb
mov
and
shl
outs
and
xchg
retf
jmp
sbb
xchg
into
inc
int3
std
scas
aam
bound
fwait
(bad)
lods
test
call
(bad)
out
xchg
pushf
inc
in
xor
mul
loop
bound
lahf
or
das
mov
inc
test
jmp
sub
pop
xchg
jo
int
leave
lods
or
das
ret
ss
adc
pop
call
jae
je
mov
lahf
push
sti
xchg
or
jno
cwde
es
cmp
sbb
cmp
call
scas
mov
jge
jg
add
dec
(bad)
dec
addr16
adc
inc
(bad)
mov
cld
sahf
into
mov
dec
inc
aam
mov
sub
outs
call
outs
xor
mov
(bad)
stos
push
push
mov
pop
jne
cmp
loopne
rcr
aaa
cdq
mov
in
pop
and
xor
sub
loop
bound
sbb
and
loope
xchg
lods
mov
push
ret
xor
dec
scas
add
fsubr
fistp
push
out
imul
mov
lods
lahf
and
bound
scas
mov
add
xchg
into
scas
mov
je
fisttp
inc
es
push
retf
xlat
pop
dec
jne
dec
pop
dec
imul
sti
adc
leave
idiv
int
lods
xchg
div
xor
push
adc
xchg
js
dec
sub
data16
jbe
inc
adc
lea
jne
jmp
mov
cdq
and
out
movs
lea
lods
xchg
daa
push
jae
(bad)
pop
pop
dec
sub
fiadd
inc
test
pop
or
mov
xchg
mov
mov
in
imul
gs
xchg
ficomp
and
inc
dec
sbb
mov
xchg
sub
in
sub
inc
mov
cmp
mov
pop
mov
cli
push
sub
mov
rcl
xchg
daa
mov
popa
pop
dec
fbld
icebp
push
xor
sbb
and
ins
mov
mov
(bad)
rol
push
sub
imul
push
(bad)
mov
inc
es
in
sub
shl
pop
mov
lds
mov
sti
xchg
cdq
and
loope
mov
mov
add
aad
movs
push
fdiv
jmp
mov
int
jecxz
push
retf
sbb
repz
test
jl
push
out
jp
and
aaa
inc
mov
pop
dec
cmp
xchg
dec
es
int3
mov
push
xchg
shr
jmp
stc
ds
test
xlat
push
scas
shl
mov
mov
(bad)
test
add
xor
int
mov
jmp
inc
add
(bad)
jnp
pop
jnp
fsub
sbb
ret
or
push
cli
shl
or
retf
cmps
js
stos
cmp
mov
outs
test
imul
jbe
fild
jmp
es
dec
add
aad
enter
loop
cmp
xor
xchg
int
idiv
cmp
push
sub
mov
out
dec
mov
jmp
pop
and
clc
mov
jge
xchg
ss
neg
mov
inc
add
mov
jmp
(bad)
mov
jle
(bad)
add
cmps
fcomp
pop
jns
int3
mov
ins
mov
adc
sbb
sub
cmp
xchg
call
jnp
xchg
leave
neg
mov
fild
pop
cwde
inc
ret
ds
dec
idiv
jb
popa
xor
add
dec
aas
leave
or
xchg
int3
call
les
enter
jmp
shr
(bad)
inc
pop
fadd
mov
and
pop
aaa
sub
inc
jne
jo
addr16
std
getsec
mov
adc
xor
out
scas
into
xchg
xor
into
ret
dec
pop
xchg
add
stos
add
push
jl
or
rcl
cmps
popa
rol
and
and
jmp
or
fs
xor
imul
int3
jp
xor
push
jnp
mov
cmp
aas
sar
sbb
sub
fist
adc
sub
fwait
mov
outs
xchg
in
in
pusha
sbb
adc
loop
in
mov
xchg
inc
push
outs
xor
jmp
fidiv
dec
ins
sbb
outs
in
enter
dec
adc
ja
cwde
jp
jl
js
xchg
fadd
cli
stos
push
pop
or
movs
mov
jle
and
push
cmp
outs
popf
xchg
in
sbb
adc
push
push
push
test
push
cld
test
test
mov
(bad)
data16
mov
call
and
js
cmp
sbb
jae
hlt
jbe
jnp
jmp
popf
rsqrtps
add
outs
push
pop
sbb
dec
(bad)
repnz
sbb
cmp
test
mov
sub
sub
nop
xchg
push
mov
sti
mov
fwait
sbb
mov
sar
push
xor
pop
movs
mov
lods
adc
test
leave
xor
jge
fisub
fst
mov
lds
fisubr
adc
popf
test
inc
jb
(bad)
push
lods
cs
xchg
cld
cmp
lahf
mov
in
mov
xchg
stc
cmp
(bad)
popa
sar
add
adc
loope
cs
inc
mov
inc
cmc
mov
push
lods
cdq
imul
test
mov
xchg
movs
mov
xchg
xor
in
ror
jb
mov
inc
ds
out
cmps
enter
push
stos
mov
mov
sbb
inc
lds
adc
dec
push
je
cmp
scas
jns
test
push
ss
cmp
sahf
mov
jecxz
fisub
pop
pop
movs
movs
js
in
inc
pusha
jo
add
and
outs
and
xchg
push
mov
outs
sbb
adc
into
cwde
cdq
cwde
adc
pop
xchg
loope
inc
mov
sub
ja
dec
test
xchg
pop
sub
out
fst
push
dec
aam
iret
cmc
out
adc
or
pop
std
pusha
into
not
shr
lods
push
mov
lahf
xchg
adc
add
gs
and
push
test
pop
cmp
xor
or
out
pop
pop
lods
retf
add
sti
cmps
mov
adc
mov
jo
fwait
dec
inc
iret
(bad)
(bad)
data16
cmps
inc
fs
aam
inc
icebp
cdq
xchg
cmp
enter
sbb
push
jge
lahf
arpl
loopne
jl
cdq
pop
stos
cmp
xchg
mov
daa
aaa
push
sar
test
and
and
push
sub
cmp
fstp
mov
cld
mov
mov
(bad)
(bad)
shl
mov
push
mov
daa
pop
cs
xchg
pop
xchg
stos
xchg
add
cmp
push
adc
fiadd
int
mov
inc
push
xchg
ret
add
loopne
pusha
jnp
aaa
inc
push
cwde
xor
mov
fdiv
ret
mov
dec
mov
adc
dec
sub
xchg
push
sbb
pop
lods
jge
aad
test
stos
jl
scas
jbe
mov
mov
rol
(bad)
xchg
mov
inc
(bad)
cmp
fwait
push
scas
sbb
push
clc
mov
iret
je
fidiv
stc
(bad)
sti
dec
pop
mov
les
cmp
leave
push
push
add
in
or
popf
push
ins
xchg
inc
js
mov
sbb
or
adc
popf
mov
ret
mov
out
push
idiv
or
xchg
add
mov
cdq
xchg
outs
push
add
pop
mov
inc
imul
cwde
or
addr16
js
mov
cwde
or
fistp
push
aaa
je
jecxz
jle
(bad)
loop
adc
xacquire
inc
scas
stos
dec
out
dec
and
add
call
mov
or
and
mov
aam
push
cmp
cli
adc
dec
mov
push
inc
imul
jb
or
inc
pop
push
cmps
mov
les
test
fbstp
int3
aad
mov
mov
mov
sti
xor
cmp
es
push
push
daa
nop
nop
cmps
mov
in
sbb
add
(bad)
adc
sub
lods
out
in
je
frstor
pop
call
inc
mov
pop
cmps
test
mov
mov
in
into
inc
js
rol
mov
xchg
add
dec
mov
jno
test
sbb
out
mov
movs
popf
push
into
rol
cli
dec
loope
xchg
and
mov
push
adc
xchg
sysenter
stc
and
xor
lds
push
sbb
jmp
loope
jge
cli
adc
dec
inc
ror
push
lea
ret
ror
adc
aam
push
mov
xor
out
mov
rol
xchg
mov
adc
cmps
pop
loope
rcr
inc
xchg
jecxz
mov
sahf
inc
lods
scas
imul
sbb
retf
int
popf
pushf
(bad)
out
push
xor
mov
cld
inc
cmp
dec
outs
xchg
pop
(bad)
fisttp
mov
je
or
icebp
(bad)
jbe
and
dec
cli
inc
fcmovb
ins
leave
or
in
push
fmul
sub
aad
aaa
or
into
xchg
(bad)
rcl
mov
pop
cmp
lock
loope
ins
(bad)
push
xchg
aam
inc
sbb
into
cmc
sahf
rcr
lock
mov
retf
and
cdq
cwde
scas
or
fcmovbe
inc
sar
mov
loope
imul
jns
test
(bad)
dec
jg
rol
(bad)
mov
sub
cdq
pop
adc
pop
out
xlat
xor
out
dec
pop
adc
and
and
sbb
imul
adc
push
int
(bad)
pop
xchg
push
jmp
imul
ret
add
or
push
sbb
cmp
sub
xchg
rcr
mov
bound
add
and
hlt
mov
popf
sub
mov
std
and
(bad)
loope
test
xor
inc
add
outs
in
pop
jl
test
clc
or
(bad)
fbstp
iret
int
test
inc
mov
dec
mov
mov
clc
mov
cmp
or
(bad)
popa
sti
out
add
stc
movs
sub
int
mov
stc
aaa
sbb
cmp
or
mov
sti
mov
mov
mov
aam
fmulp
nop
loope
call
arpl
xor
(bad)
cmp
mov
(bad)
sti
aad
std
sub
mov
push
jb
cmp
scas
mov
or
loop
lods
mov
pop
xchg
lods
push
fucom
fstp
je
sub
jg
push
add
mov
mov
jb
inc
imul
adc
mov
icebp
push
inc
scas
adc
cli
sti
jecxz
mov
cmp
mov
xor
lods
jnp
(bad)
rol
jle
mov
xchg
aam
adc
mov
dec
mov
pop
jecxz
sub
mov
enter
jno
jno
or
inc
rcr
xor
xor
xchg
imul
dec
dec
fcom
jmp
repnz
sub
push
add
add
push
mov
or
jns
push
test
dec
jg
sbb
out
rcl
(bad)
(bad)
inc
mov
ja
adc
push
or
fstp
sbb
adc
adc
pop
retf
mov
in
scas
pusha
std
xlat
jge
and
and
mov
and
sub
mov
stc
pusha
fs
pop
add
stc
dec
jno
xor
lods
xchg
and
jo
xchg
sub
xchg
mov
scas
lods
jae
(bad)
cmps
jno
adc
pop
xchg
sub
retf
sar
sub
fisubr
lds
(bad)
aas
or
jmp
in
and
out
shl
in
and
scas
sbb
xlat
cld
shr
xchg
push
aam
or
inc
sbb
sbb
mov
dec
add
adc
add
inc
dec
fcom
movs
out
mov
outs
cdq
push
in
cmps
xor
pop
icebp
sbb
xchg
rol
inc
leave
sbb
test
xchg
cmp
inc
and
movs
cmps
(bad)
xchg
jle
lods
sub
push
or
or
inc
xchg
retf
add
js
scas
frstor
pop
pop
adc
cmp
dec
cmp
pop
or
inc
lea
push
lds
sub
fstp
sbb
jmp
add
dec
cmp
inc
pop
dec
push
sbb
fcomp
lahf
push
out
cmc
mov
mov
sub
pushf
inc
fidivr
in
and
loopne
ret
adc
jmp
aaa
pop
or
aad
(bad)
ret
(bad)
push
dec
jne
push
xchg
push
xchg
jmp
ins
outs
retf
into
daa
pop
cdq
mov
outs
xor
cmp
sbb
add
lds
(bad)
cmp
(bad)
and
int3
sub
add
test
jmp
repnz
jnp
inc
sahf
out
jl
repnz
xchg
cmp
leave
add
retf
loopne
xchg
repnz
fwait
cmp
mov
cwde
push
pop
adc
cmp
outs
mov
cmp
call
fmul
daa
xor
call
retf
aam
cli
mov
ss
cdq
cdq
or
jo
mov
push
inc
sahf
mov
in
xchg
ja
div
jo
and
fnstsw
gs
inc
arpl
arpl
in
repnz
rol
or
jle
adc
add
pop
jmp
and
call
pop
xchg
hlt
cmp
or
repnz
sbb
call
jecxz
jle
ds
mov
das
xor
addr16
arpl
sbb
repnz
cmp
ins
cmp
mov
shr
or
js
mov
cmp
xor
jmp
pusha
sbb
jbe
scas
ja
adc
rcl
nop
cmp
jge
push
sbb
call
aas
jno
jmp
aas
dec
ja
fisubr
add
retf
push
mov
push
pushf
mov
xchg
mov
retf
push
mov
popf
fdivr
dec
sub
out
mov
push
outs
hlt
mov
(bad)
jmp
and
sahf
mov
add
(bad)
and
jecxz
add
fmul
adc
pop
jg
mov
cmc
mov
mov
fmul
xchg
(bad)
mov
jmp
(bad)
test
pusha
ds
add
push
call
loop
call
les
(bad)
jecxz
fisttp
sub
mov
cmp
mov
cmp
mov
pop
test
cmp
idiv
mov
lds
shl
sbb
push
(bad)
dec
cmp
fs
nop
mov
imul
pop
mov
dec
jbe
xchg
(bad)
ins
xor
mov
mov
rcl
popa
lods
repnz
jns
add
call
add
cld
bound
cwde
sbb
jnp
cmps
xor
and
dec
and
jl
in
stos
xor
or
jbe
hlt
lock
daa
(bad)
(bad)
in
in
inc
sbb
push
dec
inc
daa
in
nop
scas
push
xchg
inc
xor
jecxz
ins
inc
into
mov
jg
dec
cli
mov
loop
ret
jg
mov
enter
mov
dec
push
fisubr
clc
push
push
gs
xor
ffreep
mov
add
ja
dec
aam
inc
adc
stos
loopne
clc
cwde
lods
cmp
aad
fs
pop
pop
pop
xchg
aam
icebp
in
or
aad
movntps
adc
pop
aaa
add
cmp
lea
sub
popa
push
jmp
adc
pusha
fadd
sub
lahf
xor
xchg
fcom
test
sbb
hlt
cwde
and
test
aas
and
adc
pop
test
mov
(bad)
(bad)
sbb
outs
clc
and
ja
test
fmul
daa
outs
adc
cdq
cmp
and
imul
mov
and
iret
xchg
gs
push
jmp
inc
or
loop
pop
pop
push
rol
dec
out
and
dec
bound
loope
jle
xor
push
and
and
(bad)
scas
push
(bad)
jns
popf
push
rcl
mov
loop
pop
inc
outs
and
sub
leave
xchg
jne
pop
test
push
xor
aam
add
cmp
cdq
push
lahf
test
and
jge
psubd
push
jle
enter
cmp
pop
int3
mov
sub
fstp
pusha
call
aam
aam
add
loope
mov
lods
adc
(bad)
or
addr16
and
dec
clc
inc
or
out
out
into
mov
pop
xchg
inc
addr16
inc
push
add
call
xor
jecxz
aam
int
sbb
and
mov
add
enter
fstp
and
fisub
inc
mov
push
inc
rcl
xchg
add
mov
or
js
push
pop
outs
ins
xor
mov
mov
ss
rol
add
sbb
sbb
pusha
sbb
out
outs
fdiv
imul
inc
cmps
sub
jns
jbe
fist
mov
add
pop
adc
fadd
push
jp
mov
fisttp
mov
and
fcom
jl
adc
cmp
add
das
mov
mov
(bad)
sahf
aam
in
cmps
fisttp
jmp
retf
test
std
jmp
jmp
and
dec
push
mov
jmp
in
push
mov
pop
inc
addr16
test
cli
loope
sahf
repnz
cdq
call
mov
out
ficom
cmp
imul
push
mov
and
iret
add
jp
adc
and
mov
das
popa
push
push
mov
jae
or
push
test
push
pop
fs
das
or
out
pop
loop
or
adc
pushf
add
push
(bad)
cmps
xlat
add
std
sub
test
mov
inc
test
dec
jns
mov
xchg
addr16
add
add
imul
addr16
mov
cmp
mov
cdq
sub
and
cmp
push
js
push
sbb
test
jp
stos
mov
imul
pop
dec
add
loop
pusha
nop
dec
stos
aas
mov
out
cmp
cmps
mov
and
jbe
fld
(bad)
out
stc
push
and
aaa
adc
lods
ret
xchg
dec
push
add
jg
xchg
sub
pop
ins
mov
cmp
sti
add
push
pop
test
aad
fsubr
sbb
out
jle
xchg
les
aam
adc
arpl
fbstp
or
retf
sub
cmp
loopne
sbb
mov
cmc
int3
mov
out
outs
pop
mov
jl
mov
inc
retf
aas
pushf
cdq
mov
mov
cwde
or
xchg
scas
enter
cmps
lea
adc
gs
scas
mov
jo
pop
(bad)
cmp
cmp
out
mov
pop
in
int
add
popa
jns
fisub
inc
mov
shl
dec
outs
sbb
or
add
adc
mov
repnz
xchg
aas
or
ucomiss
xchg
pop
cmp
sbb
pop
xchg
(bad)
out
mov
xchg
adc
xor
ret
pop
cs
pop
xor
aam
dec
sahf
aam
dec
test
ins
sub
pop
mov
loopne
out
sbb
push
push
push
dec
ins
ins
ror
clc
jns
push
es
scas
shl
mov
mov
mov
or
clc
xor
cmp
mov
fcmovbe
dec
add
sub
arpl
and
jb
cmp
inc
and
dec
push
dec
clc
fstp
adc
pop
push
out
pop
rcr
pop
ss
or
cmp
cmp
push
dec
movs
je
xor
out
push
bound
xchg
mov
lds
imul
inc
mov
test
mov
out
dec
xor
cmp
adc
jno
fsubr
stos
inc
ja
jmp
lods
xor
fstp
push
lahf
sub
push
rol
out
pop
sub
sbb
add
add
cmp
cwde
not
sub
cmp
pminub
ror
cmp
out
inc
sbb
stos
shl
iret
rcr
sti
fisttp
loope
daa
ins
mov
(bad)
imul
mov
cdq
movs
pop
fiadd
xchg
jmp
aad
in
sub
jns
xor
out
sbb
mov
push
dec
pop
dec
sub
add
pop
xchg
les
jns
std
shl
cmp
mov
dec
mov
xchg
fnstenv
popa
jp
div
push
adc
das
cmp
sbb
pop
jmp
dec
xor
mov
sub
xor
cmp
call
repnz
sbb
inc
sbb
push
jae
adc
jb
cs
jb
mov
rcl
pop
loope
out
dec
in
xchg
shl
ret
pop
mov
pop
pop
pop
add
add
push
jmp
jmp
dec
mov
gs
sti
sub
cmps
cmp
retf
fstp
pop
cmc
xchg
retf
push
cli
mov
sub
xor
mov
into
or
mov
mov
shl
pop
sbb
cli
push
(bad)
icebp
pusha
xor
call
jno
call
jae
mov
inc
imul
sub
pop
lods
mov
dec
movs
or
adc
pushf
mov
push
mov
sub
loope
mov
mov
loop
xor
adc
mov
xchg
test
(bad)
or
scas
sbb
ret
jb
push
mov
inc
div
hlt
out
mul
push
jae
test
xchg
hlt
daa
lahf
in
cdq
xchg
dec
loopne
test
dec
mov
cs
push
push
mov
std
pop
stos
mov
cli
es
mov
cmp
and
mov
dec
clc
push
jb
xchg
(bad)
xchg
pop
(bad)
xlat
inc
pop
out
mov
adc
xchg
mov
mov
out
das
cld
(bad)
mov
les
fild
add
add
fsubr
call
outs
mov
hlt
add
xchg
sbb
sbb
pop
adc
dec
lods
or
scas
inc
neg
pop
dec
push
out
(bad)
pop
pushf
pop
gs
cmp
lea
loopne
call
inc
add
int
ds
jae
add
call
data16
sti
pop
jecxz
pusha
sbb
add
aad
loope
imul
push
in
mov
inc
rcr
mov
cmp
jns
mov
or
fiadd
std
retf
or
cmp
xlat
scas
push
mov
pushf
movs
mov
retf
lds
movs
(bad)
out
mov
cmp
xor
shl
inc
pusha
fwait
sbb
lods
pop
sub
sbb
sub
lock
mov
stc
fisubr
push
pop
js
dec
xchg
mov
push
push
push
add
jecxz
iret
inc
pop
das
dec
dec
loope
cmc
mov
sbb
mov
cli
sbb
sub
rcl
jnp
lea
jle
test
push
jne
jp
movups
xchg
xchg
xchg
ret
jnp
xchg
adc
cs
out
call
jle
push
xor
rcr
lahf
cmps
inc
or
and
iret
jp
mov
ret
and
mov
inc
and
inc
imul
mov
mov
gs
or
shl
fst
ret
sub
imul
cld
or
pop
xchg
mov
mov
gs
mov
jb
lds
inc
aad
and
pushf
pop
mov
pop
pop
std
sahf
jb
cmc
shl
add
push
sbb
pop
or
mov
int3
setne
sbb
loopne
stc
push
daa
dec
scas
(bad)
cmp
not
not
inc
jnp
mov
jnp
(bad)
mov
popf
jae
mov
iret
sub
call
sbb
div
push
mov
rcr
inc
pop
in
cmp
call
pop
out
out
mov
mov
inc
out
mov
push
add
rcl
in
cmps
fld
std
pmulhw
sbb
int3
gs
adc
shr
sbb
mov
lea
cmp
fcmove
call
mov
fstp
mov
push
outs
or
mov
push
jp
lods
retf
rcr
add
xor
aas
adc
ins
jp
nop
add
in
fistp
dec
cli
sub
in
mov
outs
es
and
adc
jmp
mov
xchg
xchg
neg
sub
dec
(bad)
pop
inc
out
(bad)
mov
test
test
xchg
cmp
and
jns
mov
dec
repz
lods
lock
mov
xor
ficomp
pop
pop
jo
das
adc
xlat
adc
jb
xchg
pop
pushf
inc
jg
pop
push
cmp
xchg
call
mov
sub
push
iret
iret
aam
(bad)
push
xor
mov
adc
stc
or
lock
hlt
test
jb
(bad)
cmps
fsub
in
sbb
lahf
add
int3
push
pop
sub
inc
out
repz
popa
xor
sbb
shr
(bad)
cmps
pop
repnz
in
adc
xchg
jns
cli
fld
sbb
add
xchg
jmp
or
jle
sbb
outs
cdq
push
xchg
stc
movs
xchg
ret
neg
push
jmp
pshufw
lock
mov
loopne
sbb
packssdw
lahf
inc
push
ror
cdq
out
out
leave
sbb
sub
adc
jp
jg
jl
mov
js
xchg
inc
out
popf
out
ret
out
enter
lods
daa
not
fmul
ret
or
inc
inc
repz
sub
(bad)
test
jle
sub
in
mov
mov
test
ins
push
xchg
das
push
ret
in
lahf
(bad)
cli
jbe
pop
jne
jl
push
and
pop
(bad)
sbb
push
mov
dec
dec
sbb
repz
xchg
hlt
cli
ret
pop
or
add
xchg
push
test
pop
je
ret
sbb
xchg
mov
cmps
lods
(bad)
inc
pop
jns
pop
jle
outs
gs
lea
jp
jp
ror
call
lock
and
sbb
inc
in
push
xor
add
scas
das
ja
ror
ins
gs
cmc
cs
addr16
addr16
adc
inc
xlat
jge
dec
popa
or
sbb
lds
add
sub
(bad)
lods
mov
in
dec
ret
adc
xor
jge
and
jo
sub
fidivr
daa
xor
cdq
cwde
in
int
mov
nop
inc
daa
test
cmc
loop
sbb
sub
inc
sbb
inc
sbb
loop
dec
out
int3
push
inc
enter
ret
jecxz
add
adc
mov
shl
pop
mov
setg
inc
jge
stc
add
mov
out
xchg
cmp
retf
pop
mov
iret
mov
sbb
cs
and
dec
cmp
pop
or
imul
inc
sbb
icebp
adc
cmp
or
mov
not
jg
psubusw
xchg
adc
fst
fstp
and
jbe
int
jl
xchg
mov
adc
mov
inc
or
jl
push
(bad)
lock
movs
(bad)
hlt
pop
or
jmp
pusha
dec
popf
mov
pop
mov
ins
xchg
or
lods
and
jmp
adc
cmc
cmp
inc
add
test
mov
ret
je
out
xchg
aas
mov
lahf
jge
not
jnp
push
daa
jo
sar
dec
mov
dec
cmc
sbb
rcl
imul
pop
push
jns
rol
lds
xchg
in
pop
test
fbstp
inc
pop
cmps
adc
dec
jecxz
xor
clc
outs
addr16
inc
out
(bad)
xchg
mov
add
push
sub
jbe
icebp
pop
sti
out
scas
fwait
cmp
mov
loope
cli
pop
retf
es
adc
jo
sbb
jns
sub
(bad)
dec
or
sbb
pop
mov
movs
dec
jmp
aam
mov
xchg
fst
in
mov
sbb
dec
setg
jne
ins
jecxz
int3
mov
push
push
add
ficom
pop
add
(bad)
push
add
sub
aaa
(bad)
and
and
jle
aas
sub
jb
jl
aad
cmc
out
inc
das
push
push
mov
pop
pop
sbb
mov
loop
fistp
je
xchg
sub
inc
pop
lock
xchg
xor
iret
cmps
cld
add
aad
jo
mov
push
arpl
test
(bad)
in
popa
cmp
inc
sub
std
xchg
jmp
xor
sbb
jno
cmp
pop
sub
or
add
or
sbb
ins
lea
in
fiadd
call
leave
mov
arpl
fstp
and
jb
jp
fimul
and
sub
retf
push
jmp
and
sti
mov
rol
xchg
and
push
fidiv
dec
aaa
fs
imul
pop
in
loop
lods
retf
inc
pusha
mov
jns
mov
xchg
imul
je
xchg
(bad)
xchg
mov
mov
add
xchg
mov
cli
push
jnp
pop
test
mov
or
mov
arpl
jae
sbb
jbe
lea
stos
mov
push
or
xchg
inc
cmp
jl
js
fist
dec
xchg
lods
pop
lds
add
jle
or
jbe
loopne
inc
ret
mov
adc
add
pushf
imul
mov
retf
(bad)
fstp
mov
fnstenv
pusha
pop
mov
mov
daa
mov
pop
sbb
dec
pop
mov
outs
push
test
out
lods
mov
jmp
sub
push
jge
pop
jg
popf
int3
cmp
adc
jbe
stos
rcr
xor
retf
in
(bad)
cli
sbb
and
dec
jle
(bad)
push
dec
add
pop
in
out
fidivr
ret
push
addr16
pop
in
and
sub
xchg
stos
popa
shr
jno
in
jae
in
pushf
(bad)
cmp
(bad)
jecxz
xchg
mov
rcl
fistp
mov
pop
xchg
xchg
jg
jmp
ret
inc
xchg
inc
xor
mov
shl
cmc
divps
mov
add
ja
inc
mov
cmp
test
inc
pushf
repz
gs
cs
popf
das
loope
test
jns
cmp
retf
stc
loopne
inc
xchg
mov
call
or
sbb
std
jns
add
dec
inc
jmp
sahf
or
sti
sbb
push
xor
mov
mov
cmc
dec
fnstsw
pop
pop
in
pop
jl
imul
xlat
push
popf
inc
pop
add
in
and
cmp
cmp
dec
loopne
push
cmp
jecxz
(bad)
mov
xor
jae
or
inc
jns
sbb
xchg
daa
push
ins
sub
mov
addr16
pop
xor
jmp
or
mov
jns
scas
cmp
fst
ins
adc
xchg
lock
cmp
les
adc
call
dec
mov
mov
sub
sub
xchg
mov
int3
inc
das
xor
das
call
add
(bad)
xor
lods
xchg
(bad)
mov
leave
xchg
ins
ins
ins
popa
sti
imul
dec
stos
mov
add
xlat
cli
sub
push
hlt
adc
out
retf
pop
mov
lock
inc
neg
sbb
cmp
push
mov
cmp
das
fild
xchg
enter
inc
mov
xchg
inc
pop
jns
jg
rol
xor
add
cli
fcmove
fs
pop
mov
sbb
inc
in
cmp
sti
push
aaa
ror
call
out
fdivr
loopne
aaa
jmp
adc
mov
(bad)
daa
dec
shl
enter
sahf
aam
or
cmps
sub
and
lahf
dec
je
mov
sti
adc
or
ret
mov
enter
int3
or
adc
aaa
test
push
test
or
sub
ja
mov
xor
xor
push
inc
in
xor
or
int
je
imul
sub
sbb
jb
xor
and
and
fsubr
repz
icebp
push
mov
xor
repnz
nop
stos
jbe
inc
psubd
pop
ins
and
mov
mov
sbb
and
mov
inc
xchg
jno
sbb
leave
mov
fldz
in
test
fdivp
stc
jge
call
fwait
in
adc
test
or
clc
popa
out
xor
adc
aas
scas
ja
aad
xchg
pop
aad
fnstenv
mov
mov
jae
cmp
addr16
test
jge
sahf
shl
mov
enter
sti
jns
pop
inc
cmp
inc
add
mov
ja
in
xor
cdq
sahf
sahf
mov
in
les
lods
mov
xlat
cld
fwait
shl
not
cs
rcr
dec
hlt
ins
cmc
mov
jl
xor
push
pop
shl
sbb
jmp
push
mov
das
outs
arpl
rol
pop
jl
out
push
popf
and
and
into
adc
rol
jecxz
or
push
shl
cmp
xchg
shld
dec
pusha
cmps
out
mov
and
sbb
xchg
push
pop
sub
push
mov
lea
pavgb
test
xor
sti
inc
jmp
pop
pop
(bad)
adc
push
nop
xor
sbb
stc
addr16
xor
pop
mov
addr16
xlat
pop
call
aam
sub
ins
sub
cmp
clc
imul
int
gs
mov
sti
mov
sahf
inc
cdq
sbb
mov
cmp
jecxz
cld
xchg
inc
and
jno
mov
fisttp
xlat
(bad)
das
ins
stc
int
and
std
push
shr
iret
xchg
push
push
loope
iret
push
fdiv
ja
fwait
dec
adc
and
adc
mov
in
arpl
mov
sub
jo
outs
dec
ret
test
popa
jae
test
mov
popf
fimul
sub
dec
ret
xlat
test
mov
xor
in
dec
mov
pop
stos
mov
mov
jnp
inc
test
clc
or
adc
push
repz
dec
neg
add
ja
and
mov
in
mov
mov
inc
clc
enter
test
jl
fistp
jnp
shl
ins
mov
repz
add
(bad)
into
pop
fstp
mov
adc
cmp
(bad)
push
sub
dec
in
push
push
jle
mov
mov
jp
push
or
pop
call
retf
dec
retf
mov
fdiv
jmp
call
sub
mov
push
push
pop
sbb
mov
xor
mov
loop
dec
pushf
and
mov
jns
mov
jmp
sub
and
sub
repz
pop
fstp
inc
cld
inc
push
lea
xchg
ins
jle
pop
sahf
imul
es
adc
shl
mov
test
sti
cld
sbb
push
or
mov
int3
outs
add
ficomp
cmp
sbb
shl
cmp
int
cmovae
ds
sti
arpl
popa
push
jb
movs
ret
mov
(bad)
xor
sbb
sub
out
inc
icebp
sahf
mov
and
loop
in
dec
ror
xor
jne
pop
add
pusha
inc
pop
dec
ret
and
and
call
sub
push
jb
fldcw
and
(bad)
ds
mov
and
dec
cmp
inc
(bad)
addr16
add
mov
inc
push
dec
loopne
sub
sti
clc
(bad)
xchg
push
jno
dec
in
fst
and
rol
push
cmps
xor
(bad)
sub
pusha
fld
mov
rcr
xchg
lea
ss
push
adc
xchg
mov
dec
mov
jnp
daa
push
movs
mov
fldcw
adc
xor
mov
lods
jmp
rcl
movs
pop
call
inc
fidivr
test
pop
scas
mov
ret
adc
pop
es
inc
mov
es
lea
and
clc
inc
xchg
jne
mov
mov
rol
loopne
test
rol
cmp
retf
mov
jmp
adc
aaa
aad
xor
movs
arpl
pop
movs
jmp
push
pop
xor
shl
sbb
test
mov
adc
pop
scas
push
dec
xchg
jno
jge
rol
aad
sti
dec
fbld
adc
sub
xchg
pusha
pop
dec
push
call
les
int3
(bad)
idiv
push
das
fld
mov
or
(bad)
jno
out
out
xchg
std
add
out
test
fdivr
mov
mov
and
fdivrp
scas
mov
mov
in
mov
(bad)
adc
sbb
push
pushf
aam
(bad)
lahf
call
(bad)
dec
push
dec
(bad)
div
mov
add
repz
push
lahf
dec
inc
div
add
test
outs
adc
lock
push
mov
cmps
rcl
in
and
(bad)
or
test
cmp
mov
mov
outs
rol
jae
cdq
xchg
cwde
test
cmp
repnz
mov
mov
adc
imul
push
sbb
rol
test
xchg
push
ret
gs
jle
(bad)
sbb
xor
push
cmp
jge
aad
xchg
rcl
fs
dec
adc
push
mov
aaa
mov
movs
gs
ins
mov
hlt
xchg
cmps
loop
pop
jle
aad
shl
and
sbb
inc
test
xchg
jbe
push
js
inc
jle
xor
cmp
iret
adc
lods
dec
jb
fadd
inc
ret
lods
in
jne
add
aas
mov
lea
pushf
mov
in
jmp
mov
mov
dec
add
add
xchg
xchg
push
aad
js
mov
repz
psadbw
push
push
sub
ins
cld
push
cmp
stos
mov
inc
and
lock
nop
jbe
fcom
mov
adc
gs
jmp
mul
ja
(bad)
xlat
pop
and
ins
ins
cmp
cmp
cld
enter
sbb
fdecstp
(bad)
into
sub
mov
scas
sbb
push
adc
popa
retf
iret
mov
stc
pop
stos
mov
es
out
or
cwde
mov
xchg
pop
icebp
jg
rcl
push
pop
or
fstp
jo
inc
bound
adc
ins
sti
inc
or
retf
inc
fwait
or
mov
mov
push
push
iret
dec
ror
and
mov
and
mov
add
imul
push
pop
outs
gs
inc
sub
das
daa
ja
icebp
or
ins
sub
push
and
push
out
xchg
rcl
jns
sti
(bad)
in
cli
inc
fcomp
enter
mov
fnstsw
mov
mov
outs
out
jno
push
shl
inc
(bad)
out
push
in
ins
push
shl
es
stos
ins
pop
dec
pop
add
inc
popf
jbe
test
cdq
add
cmp
inc
or
jbe
lea
int
mov
sti
out
test
movs
mov
dec
and
xchg
sbb
aad
xchg
jbe
aam
sbb
push
xchg
in
pop
fnstsw
dec
add
(bad)
pop
addr16
pop
packuswb
mov
push
retf
xchg
adc
cmps
and
xchg
les
sti
adc
mov
dec
mov
or
xor
js
es
cmps
push
sbb
aad
inc
in
addr16
not
cmp
inc
std
in
xchg
movs
lods
dec
bound
cmp
jecxz
movs
mov
xor
cmp
vunpcklps
dec
mov
dec
mov
and
jl
push
cmovbe
pop
mov
cmc
xor
jge
xlat
mov
cmp
(bad)
sti
sbb
mov
repnz
mov
ss
sahf
mov
gs
(bad)
rcl
or
in
int3
fs
test
xlat
push
cmp
xchg
pop
push
adc
out
aas
add
sbb
pop
out
sub
aam
ret
xor
cmp
inc
cmp
jns
sti
jo
mov
xor
inc
mov
cmp
sub
jp
call
(bad)
out
cs
mov
es
jp
data16
xchg
push
sbb
rcl
adc
xchg
sahf
daa
mov
fwait
push
mov
rcl
aaa
push
xchg
add
scas
and
imul
std
add
retf
loope
dec
stc
je
jp
sbb
push
inc
fnstsw
and
jle
mov
push
mov
push
inc
pop
cwde
imul
add
popa
fisttp
or
(bad)
(bad)
push
mov
ret
aad
jmp
mov
fmul
sub
(bad)
icebp
push
inc
repz
jmp
repz
sbb
icebp
out
mov
int3
cdq
mov
shl
ret
cwde
repz
inc
cmps
and
shl
dec
mov
in
retf
cmp
push
push
and
sub
push
sbb
jbe
shl
xor
enter
push
sbb
push
jmp
fisub
mov
mov
sbb
pushf
inc
fstp
enter
inc
sbb
leave
scas
sbb
mov
or
cmc
imul
push
mov
(bad)
push
or
pop
jle
fcom
xchg
lods
sbb
pop
jns
into
mov
inc
push
test
xor
stc
dec
lods
xchg
and
addr16
mov
ret
inc
ret
or
cmps
jo
jl
push
jae
jmp
in
ror
movs
pop
or
jmp
jne
sub
inc
push
lods
std
pop
push
mov
sbb
pusha
push
jmp
iret
(bad)
push
xchg
push
dec
neg
xchg
cmp
std
iret
dec
(bad)
jmp
xchg
push
mov
scas
push
fstp
mov
add
cwde
add
fisub
dec
mov
int
xor
(bad)
and
hlt
mov
push
xlat
adc
ja
movs
push
cmp
mov
push
call
and
sar
hlt
retf
fcom
sar
lods
cmp
mov
and
(bad)
mov
xchg
pop
mov
into
pop
pushf
add
fucomip
push
pop
dec
imul
icebp
sub
lods
mov
sbb
sub
ja
pop
add
aaa
xchg
movs
mov
jo
fcom
add
mov
and
sub
push
out
push
and
cmp
data16
mov
shr
xor
fiadd
fstp
cmps
dec
dec
cwde
popf
aam
dec
push
stos
mov
adc
jns
dec
pop
lock
xchg
hlt
and
push
test
stc
test
popf
pop
cmp
std
mov
lods
cmp
inc
mov
imul
mov
dec
xchg
add
fistp
jecxz
push
dec
fsubr
push
mov
out
or
sub
les
mov
mov
clc
les
add
push
into
stos
inc
inc
call
int3
jae
cli
popa
jl
and
stos
rep
cmps
lods
adc
jp
mov
cmp
lods
push
stos
inc
mov
and
repnz
enter
retf
dec
movs
int
(bad)
mov
pop
rcl
push
pop
popf
add
(bad)
fidiv
leave
imul
cmps
int3
mov
jns
and
jno
cmps
dec
int3
or
cmp
push
push
cmc
jns
shl
(bad)
adc
xchg
xor
and
pop
lds
pop
stos
out
popa
pop
or
es
clc
dec
xchg
xlat
out
call
inc
and
sub
and
xor
add
je
mov
jmp
ins
push
pop
cdq
mov
(bad)
xchg
add
das
lods
xor
cwde
in
in
ds
hlt
push
sbb
mul
or
out
loop
push
(bad)
jl
retf
and
inc
loop
pop
fild
mov
inc
cdq
and
mov
jl
or
jmp
push
sub
(bad)
sbb
sbb
fisub
jmp
xor
rcr
xor
inc
adc
sub
cld
cdq
inc
pop
xchg
pop
loopne
xor
leave
xor
outs
pop
dec
pusha
les
pop
pop
cmp
inc
mov
fadd
call
xchg
cmp
adc
xor
movs
cmps
sar
mov
out
ss
cmps
ret
js
int
mov
(bad)
ficomp
repnz
out
mov
fcmovnb
(bad)
and
aas
add
movs
inc
sub
ds
xchg
sbb
inc
bound
imul
outs
sbb
int3
cmp
mov
jb
jle
imul
aas
ja
cdq
es
and
fist
pop
jno
mov
ss
mov
or
sti
and
call
sub
pushf
out
and
fldcw
cmc
pop
loop
mov
adc
sub
and
test
fwait
jmp
lahf
lock
mov
push
rcr
repz
sbb
scas
test
fsubr
rep
mov
jns
js
sbb
mov
jo
mov
les
adc
jle
or
push
cwde
shl
in
(bad)
xor
pop
leave
sub
jg
adc
(bad)
std
cmc
push
loope
push
retf
inc
or
mov
push
pop
cmc
test
mov
and
push
xor
xor
inc
ins
loop
dec
xor
fisub
xchg
mov
(bad)
dec
inc
call
jns
pop
dec
in
lods
mov
std
ins
cs
xor
jb
and
pusha
add
xor
or
inc
movs
and
nop
ret
cmp
add
and
cmps
cwde
ja
clc
pop
fwait
or
cs
sub
pusha
cmp
rol
mov
sbb
scas
shld
xor
mov
pop
xor
out
pop
int
aaa
and
dec
(bad)
sar
xor
mov
xchg
(bad)
outs
xor
sub
mov
xchg
call
dec
jp
cld
mov
cdq
mov
stos
bound
or
cmp
gs
sbb
clc
mov
or
and
mov
push
repz
xchg
jmp
out
push
popf
cmp
or
xor
cli
adc
aas
aam
(bad)
retf
stc
cmps
hlt
icebp
mov
mov
adc
or
fsub
call
retf
jno
(bad)
mov
mov
jmp
repnz
es
out
jl
dec
or
and
inc
test
pop
leave
adc
dec
(bad)
jmp
push
sbb
add
int
jnp
fwait
mov
inc
lds
ins
cmp
mov
xchg
les
mov
push
idiv
adc
outs
inc
sub
push
scas
imul
mov
push
mov
fst
jae
pushf
das
ss
xor
jp
mov
lods
das
fsubp
test
dec
bound
fsub
dec
jl
stc
jl
sti
or
stos
arpl
pop
jecxz
int3
imul
test
enter
and
mov
cmp
xchg
dec
js
outs
cmp
cwde
xchg
es
mov
adc
out
inc
fxch
jno
lods
add
adc
cmp
adc
stos
outs
(bad)
xorps
cwde
js
lods
fld
popa
jmp
and
lock
or
std
sbb
loopne
jno
call
pop
(bad)
xlat
jno
fiadd
inc
je
pop
sahf
dec
mov
mov
sub
fisubr
push
je
rep
pop
dec
pop
lods
jecxz
mov
adc
push
das
adc
arpl
mov
sub
push
and
xchg
lods
stos
adc
fist
bound
xlat
cdq
pop
xor
jns
enter
test
mov
dec
mov
jb
adc
xchg
sti
lock
sar
imul
or
icebp
xchg
adc
and
clc
scas
sar
out
pusha
or
and
scas
mov
ret
add
add
loope
jae
in
pop
(bad)
jmp
clc
push
xchg
das
cld
cmps
jl
add
movs
not
cmp
push
sbb
ja
ins
pusha
jge
ja
mov
adc
iret
inc
lahf
push
adc
(bad)
xlat
sbb
(bad)
int
sahf
add
cdq
xchg
movs
in
outs
jo
pop
enter
sbb
icebp
xchg
bound
stos
in
inc
jns
int3
loopne
std
jle
inc
cdq
xor
or
jge
fdiv
shl
in
push
inc
bound
mov
lahf
stc
add
xor
ins
sbb
sbb
cmp
adc
sub
sti
rol
sbb
cwde
sub
push
loopne
mov
and
imul
mov
mov
dec
xor
xchg
add
xor
add
jg
movs
mov
lods
aad
out
arpl
bound
inc
inc
loope
fld
cmps
test
cmp
sub
fldenv
pop
push
mov
mov
icebp
xchg
add
mov
rcr
movs
adc
pusha
test
pop
ja
sahf
cmp
sub
mov
jno
ins
popf
dec
dec
adc
loop
adc
mov
sub
imul
frstor
adc
(bad)
pop
sub
dec
ja
add
sar
cmp
mov
je
cmp
jns
stc
cdq
in
popf
(bad)
rcl
mov
xor
(bad)
cld
or
ror
(bad)
retf
jmp
retf
or
aaa
sbb
sub
mov
jmp
push
and
icebp
retf
xor
ins
push
push
cwde
call
push
in
xor
xchg
sub
adc
lods
xlat
dec
xor
xchg
test
sbb
test
sbb
or
cmps
mov
add
fild
adc
fsub
pusha
mov
aam
push
push
hlt
mov
aaa
int3
jl
pop
popa
xchg
in
adc
and
hlt
mov
mov
ficom
bound
cmps
xchg
mov
xchg
xchg
movs
jp
repnz
ja
in
out
inc
shl
mov
xchg
or
jb
cmp
xchg
push
jnp
lds
(bad)
das
jle
pop
mov
cmp
push
lods
push
add
or
pop
clc
mov
mov
jp
fsub
imul
fs
icebp
dec
cmp
and
inc
imul
movs
and
(bad)
jle
fidiv
jne
sti
push
mov
and
ds
gs
mov
sbb
jae
lods
sahf
jbe
jb
pop
movs
jg
repnz
pop
retf
in
xor
stos
imul
mul
test
je
sub
push
push
xor
xchg
sbb
and
imul
dec
sti
gs
pop
(bad)
fld
outs
mov
test
mov
jecxz
and
jbe
pop
mov
loopne
dec
and
fidivr
bswap
icebp
(bad)
into
mov
xchg
fidivr
enter
test
mov
repz
jae
sub
gs
cmc
les
xor
mov
and
(bad)
xchg
mov
adc
aas
mov
dec
dec
js
add
cmp
out
test
mov
or
retf
cmp
add
cmp
pop
(bad)
iret
mov
mov
iret
aam
dec
shl
pop
shl
xor
stos
sub
mov
jle
jp
ror
(bad)
cmps
xchg
mov
xchg
add
out
cwde
jge
les
push
dec
adc
jl
movs
cmp
lds
add
cmp
ds
mov
sub
out
sub
cld
xor
scas
inc
or
sbb
mov
shl
movs
dec
popf
leave
enter
aaa
mov
fcmovbe
sti
aaa
into
aad
mov
mov
loope
jb
push
and
cmp
daa
dec
mov
lea
in
stc
jo
mov
ja
xor
loopne
jp
in
and
aaa
ret
and
aas
dec
jmp
ja
pop
sub
fadd
fstp
movs
syscall
or
pop
repz
fwait
sub
mov
(bad)
push
out
(bad)
cmc
shl
xchg
mov
inc
jae
adc
and
mov
add
xor
out
cmp
mov
mov
lods
inc
jmp
outs
sub
mov
pop
jp
retf
repnz
adc
repnz
xchg
das
test
test
(bad)
pushf
jecxz
adc
mov
pop
loop
rol
inc
cli
mov
pop
nop
mov
sub
mov
mov
sub
enter
xor
add
jmp
jae
stos
and
loop
jno
push
xor
xchg
movs
xor
sbb
outs
jne
jmp
fwait
pop
sbb
std
mov
or
stos
adc
dec
cmp
xor
in
out
into
adc
stos
xor
shr
push
adc
jns
jne
xor
enter
or
cdq
pop
lods
and
xor
dec
mov
mov
or
loopne
shr
dec
outs
mul
test
imul
das
fnstenv
aaa
jnp
mov
inc
popa
aad
sti
jle
jne
out
stos
or
(bad)
jmp
jae
push
(bad)
xchg
fadd
aad
imul
mov
pop
stos
mov
in
dec
push
shr
js
repz
sbb
mov
rol
lods
add
into
hlt
jne
mov
call
or
dec
int
popf
outs
icebp
idiv
popa
dec
push
add
mov
dec
or
fiadd
push
std
pop
cmp
mov
std
xchg
or
pop
dec
fisttp
and
popa
movs
push
inc
(bad)
jbe
cmp
(bad)
call
pop
movs
inc
jae
inc
into
daa
cmps
push
std
adc
fimul
fsubr
sub
in
and
aad
and
loop
pushf
out
es
cmc
dec
push
sbb
sbb
vmulps
iret
or
stos
cmp
mov
or
mov
pop
push
ret
dec
mov
mov
mov
mov
jmp
mov
inc
xchg
in
cs
sbb
lock
(bad)
pop
sti
add
sub
rsm
jmp
imul
push
cdq
or
enter
mov
les
or
mov
pusha
jno
mov
ins
mov
ins
imul
cmps
repz
cmp
inc
push
mov
call
or
out
test
or
xor
pop
add
sbb
inc
push
mov
cwde
jmp
inc
aam
movs
movs
mov
xchg
and
pushf
cmp
out
pop
popf
push
movs
mov
mov
fiadd
dec
mov
sbb
cmp
adc
in
(bad)
icebp
adc
leave
nop
in
cmp
je
cwde
in
add
cmps
stc
std
scas
pop
jmp
xchg
jno
and
pminub
ret
ret
sbb
mov
repnz
and
push
push
in
(bad)
call
dec
lea
hlt
por
shl
(bad)
out
arpl
cmc
add
pop
mov
dec
aad
lock
or
fiadd
push
clc
movs
mov
shl
push
jmp
dec
xchg
push
out
jmp
inc
inc
adc
and
in
repnz
dec
arpl
stos
mov
mov
xor
push
lock
leave
cmps
ss
xlat
and
mov
inc
push
or
sub
xor
retf
cmc
pop
adc
sbb
add
clc
pop
sbb
loope
aaa
add
xor
fist
test
mov
repnz
xchg
and
jno
pop
jecxz
(bad)
leave
xchg
xor
loope
sub
inc
fild
ja
jbe
and
(bad)
cmc
push
pop
iret
iret
jne
shl
xchg
cmp
add
sub
jle
mov
cmp
or
jmp
bound
jne
pop
xor
inc
jbe
jbe
xchg
aam
jb
mov
div
dec
rol
into
jnp
test
in
clc
(bad)
lea
retf
sub
add
fbstp
popf
into
(bad)
jmp
in
inc
std
jmp
dec
or
iret
and
or
xor
call
mov
jecxz
mov
ltr
out
imul
inc
mov
leave
push
data16
sbb
movs
bound
rol
sbb
cld
gs
(bad)
xlat
call
dec
jg
mov
movs
mov
rcr
adc
fadd
pop
data16
and
or
dec
inc
cmps
clc
jno
and
push
xchg
cs
scas
mov
dec
hlt
fdiv
inc
lock
call
add
add
cmovle
push
dec
cmps
outs
lock
push
push
mov
out
add
pop
mov
stc
aas
(bad)
sbb
sub
pop
jo
jnp
pop
sbb
inc
or
add
fs
pop
push
aad
sar
ror
mov
and
or
and
fwait
test
cwde
mov
xor
das
fisubr
idiv
xor
(bad)
fnstsw
mov
sbb
addps
xchg
dec
retf
mov
ins
and
fidivr
sub
push
ss
test
mov
dec
push
ins
scas
sbb
sub
neg
xchg
outs
dec
mov
ja
leave
cmp
jecxz
arpl
cmp
push
adc
push
test
les
jge
(bad)
mov
pop
retf
test
outs
sbb
repz
xchg
leave
mov
mov
xchg
out
dec
das
lock
dec
stos
push
retf
cmp
push
(bad)
pop
in
adc
push
xor
es
ins
sbb
sar
mov
ins
fsubr
xor
mov
sub
adc
(bad)
jge
mov
out
retf
add
(bad)
clc
retf
inc
push
dec
iret
mov
bound
cld
dec
push
out
jle
mov
outs
xchg
ficomp
mov
dec
adc
ror
pop
or
jl
test
(bad)
xor
ds
mov
call
xchg
das
xchg
inc
ret
lahf
mov
sub
mov
icebp
ds
lods
dec
out
add
mov
retf
cld
add
jge
mov
scas
mov
xchg
out
and
stos
mov
in
adc
xchg
(bad)
rol
(bad)
in
mov
xchg
and
adc
daa
inc
xchg
es
outs
ds
cmp
mov
xor
clc
cs
or
stos
push
popa
inc
sbb
xchg
ins
sub
(bad)
ins
xor
adc
sub
mov
mov
or
xor
mov
xchg
mov
adc
dec
shl
rcr
sar
mov
mov
stos
mov
retf
mov
dec
xchg
ror
leave
enter
xchg
push
pop
and
lock
ffreep
aam
mov
jae
(bad)
imul
int
es
cmp
pop
rcl
outs
loopne
push
push
sub
inc
sahf
adc
repz
popa
cli
popa
xor
es
and
cmp
jmp
push
pushf
inc
ins
pop
bound
jo
pop
test
inc
cli
mov
je
sub
lods
sbb
rep
fistp
xlat
mov
mov
pop
cwde
psrlq
stc
imul
fist
cmp
cmps
xchg
aad
mov
mov
pop
and
or
mov
mov
call
sub
dec
shl
sub
shl
sbb
xor
popa
loopne
dec
or
xor
dec
movs
cmc
sub
(bad)
in
mov
loopne
xor
sti
adc
seta
aas
mov
cmc
mov
jne
adc
outs
sbb
pop
cmp
cmps
repz
imul
test
cdq
and
pop
sub
jge
sub
pop
ret
mov
mov
das
cli
ds
xchg
add
and
cmc
cmp
pop
push
mov
(bad)
pop
xchg
in
jg
and
inc
xchg
lds
jge
pop
ror
out
push
pop
xchg
into
mov
test
nop
cmp
je
jmp
mov
dec
fisubr
adc
xor
adc
sahf
(bad)
scas
(bad)
xlat
xor
pop
sbb
ins
pusha
icebp
call
fld
fimul
xchg
mov
outs
stc
mov
dec
add
loopne
shl
cmps
jle
xchg
cmp
scas
mov
test
ror
xchg
ins
sub
ins
imul
mov
movs
aaa
sub
cld
sahf
std
or
pop
and
pop
jmp
cmc
or
xchg
arpl
inc
xchg
mov
push
pop
retf
seta
jge
aaa
mov
jns
jecxz
popa
mov
xchg
int
rol
shl
les
out
sbb
jns
inc
add
neg
add
jbe
out
out
iret
ins
pop
sti
sub
add
push
shl
lock
scas
sub
and
pop
mov
ds
push
movs
inc
jno
mov
push
ret
test
(bad)
mov
(bad)
dec
add
rcl
(bad)
pop
add
sbb
clc
or
jmp
cdq
jmp
mov
lahf
add
push
or
inc
or
inc
cmp
add
shr
jns
jo
cmp
iret
hlt
xchg
cdq
aam
mov
outs
loop
or
loop
adc
repz
xchg
xor
dec
jmp
fimul
sub
sbb
and
sub
add
fisubr
xchg
and
xor
into
imul
pop
xchg
sub
sbb
dec
sub
jns
js
jmp
xor
mov
pusha
mov
jnp
push
or
fdiv
pop
xor
adc
shr
and
pop
xor
call
scas
out
inc
ret
fdiv
add
or
icebp
cmps
les
dec
jl
cld
int3
pushf
xchg
rcl
leave
cmp
daa
packsswb
pusha
movs
test
adc
bound
sbb
nop
cmc
cmp
mov
dec
and
mov
mov
push
scas
in
sbb
push
dec
push
imul
cmp
and
jmp
mov
cmps
in
mov
jbe
cs
cmps
loopne
dec
jg
mov
mov
or
imul
repz
xchg
jecxz
fadd
pop
jo
push
popa
rcl
sbb
imul
jge
es
add
dec
xchg
mov
ret
mov
adc
ror
out
mov
out
pushf
mov
mov
shl
cdq
pop
fsub
(bad)
jbe
inc
jo
das
push
push
mov
cmp
push
loop
shl
imul
dec
fldenv
jge
stc
xchg
sti
mov
clc
(bad)
sbb
or
fsin
xor
inc
adc
(bad)
outs
dec
add
mov
lods
clc
popf
add
adc
(bad)
loopne
sbb
cmc
mov
and
jmp
adc
rcl
and
jbe
pop
pop
(bad)
push
adc
xchg
cmp
inc
outs
inc
ds
jae
xchg
sbb
sahf
sub
call
popf
xor
ins
imul
xchg
xor
xchg
sahf
aam
addr16
cmp
(bad)
sahf
iret
pop
enter
into
push
add
adc
(bad)
mov
push
add
jnp
cmp
arpl
add
push
push
cmp
stos
mov
cdq
std
cdq
ds
mov
or
push
fild
repz
mov
aaa
lods
jbe
jne
lds
addr16
add
add
mov
push
jnp
push
inc
mov
xchg
cmp
retf
fwait
enter
push
pop
xor
xor
cld
loopne
push
mov
stos
or
fild
cmp
je
add
data16
mov
stos
or
adc
repnz
cmc
pop
and
inc
sbb
pop
jns
scas
push
sbb
or
add
(bad)
outs
repz
sti
adc
pop
in
dec
dec
adc
xor
sub
mov
xor
bound
mov
(bad)
test
dec
push
xor
mov
dec
(bad)
push
retf
repnz
mov
pop
mov
xchg
mov
les
enter
repz
lods
test
jge
or
aaa
cdq
push
cs
mov
imul
es
cmp
cwde
push
cmps
loope
mov
mov
mov
pop
test
or
cwde
inc
mov
mov
test
popf
sbb
ins
add
hlt
loop
pop
or
jmp
mov
loop
pop
sbb
mov
outs
mov
sub
cmps
ins
xor
(bad)
lds
call
fucomi
add
jp
push
jecxz
ja
jg
shr
int3
inc
push
add
jp
mov
xor
dec
inc
add
add
aad
jne
xchg
pop
pop
retf
dec
fisubr
jnp
jge
inc
xchg
dec
popf
leave
mov
push
or
loope
les
(bad)
sbb
movs
xchg
add
lahf
cmps
mov
loope
gs
sub
std
sbb
(bad)
jmp
adc
pop
add
call
fst
sar
jne
lds
sti
stos
xchg
mov
xchg
xor
mov
(bad)
in
paddw
jmp
mov
aas
sbb
xchg
mov
je
daa
fild
std
cdq
data16
mov
xor
pop
mov
gs
cmp
in
hlt
clc
fsub
int3
leave
inc
repnz
add
leave
lds
adc
xlat
dec
in
sbb
(bad)
push
outs
cmp
push
test
sbb
push
loopne
and
into
push
xchg
inc
adc
out
ins
or
aaa
cwde
sbb
sbb
shr
shr
mov
sbb
and
fsubrp
jle
rcr
pop
in
jns
sub
(bad)
or
push
push
mov
lods
out
in
mov
pop
mov
jmp
ins
rcl
and
adc
imul
pop
ret
pop
pop
mov
pop
add
push
jb
mov
out
mov
push
out
xchg
js
aam
add
xchg
test
pusha
mov
and
mov
pushf
xchg
cmp
and
fnstenv
arpl
xor
leave
fiadd
xchg
pop
fld
or
xor
dec
add
loopne
add
stos
push
repz
rcr
mov
adc
ins
out
aaa
or
mov
addr16
cmp
push
ss
mov
jge
mov
(bad)
retf
adc
clc
ss
lods
push
loope
in
cwde
and
les
xlat
(bad)
sbb
les
stos
cmp
mov
mov
mov
cmp
mov
lea
jp
inc
sub
dec
or
cli
and
sub
out
pop
sar
in
push
pusha
push
lods
scas
xor
push
dec
dec
xchg
sbb
sti
rcl
jle
mov
lds
lock
mov
popa
idiv
xor
outs
les
mov
arpl
repnz
cwde
cmp
cmps
sbb
mov
lahf
or
retf
xchg
clc
ror
iret
cmp
mov
les
add
movs
xor
mov
bound
push
mov
mov
lods
je
into
mov
sbb
sbb
xchg
je
pop
cdq
pusha
leave
addps
stos
jmp
push
push
int
hlt
(bad)
in
in
scas
in
add
sahf
mov
aas
push
pop
dec
sbb
popa
mov
iret
xchg
shrd
leave
in
cdq
js
pop
clc
pusha
repnz
leave
call
test
sbb
mov
dec
(bad)
mov
jae
mov
push
add
dec
leave
pop
xor
push
inc
xchg
mov
cmc
add
leave
xchg
clc
pusha
cmp
cmp
mov
ucomiss
cmp
(bad)
loope
add
and
sahf
and
pop
pop
jb
stc
sub
xor
in
xchg
jnp
sub
nop
sbb
nop
push
test
or
test
push
xor
pop
(bad)
int3
arpl
dec
adc
addr16
add
mov
dec
inc
xchg
cmps
loop
mov
ret
popa
cmp
mov
and
cmc
add
mov
jnp
dec
xchg
mov
in
popf
ins
js
lahf
out
scas
inc
jmp
push
(bad)
add
fcmovb
outs
push
dec
add
mov
add
sub
and
mov
fstp
cli
fisub
out
xlat
mov
scas
mov
dec
pusha
enter
test
in
mov
es
xchg
daa
ins
mov
cmp
out
call
cmp
ins
sub
xor
(bad)
(bad)
das
inc
aam
xchg
sahf
jge
test
into
jns
mov
inc
dec
shl
xor
mov
push
xchg
outs
xchg
stc
mov
push
inc
and
jp
mov
or
mov
retf
sahf
pop
test
inc
or
shr
xor
mov
(bad)
imul
out
stc
dec
cld
hlt
cmp
ds
pop
test
stos
std
loop
and
ja
pop
adc
or
inc
push
int
cmp
dec
xchg
mov
cmp
icebp
inc
call
or
jae
sub
mov
inc
stc
cmc
in
push
sbb
dec
ins
xchg
adc
scas
sar
mov
mov
mov
inc
mov
mov
imul
sub
pop
(bad)
adc
fist
xor
jnp
and
jo
cmc
mov
imul
sahf
scas
fsub
nop
movhps
into
cmc
pop
xchg
jae
cmp
mov
cmp
popf
sbb
adc
aaa
mov
out
out
(bad)
push
push
cmp
or
mov
mov
dec
xchg
leave
add
fucomp
mov
js
dec
out
xor
adc
pop
inc
cld
repnz
add
inc
not
icebp
jne
jno
cmp
cmps
sbb
ror
add
test
dec
mov
loopne
jmp
lea
jecxz
test
push
xchg
xchg
lock
or
stos
cdq
loopne
push
arpl
pop
(bad)
pop
xor
pop
sbb
fcmovu
inc
call
in
popa
cmp
or
bnd
jno
xchg
les
push
xchg
add
xchg
inc
pop
mov
pop
or
retf
sbb
int
sub
mov
xchg
mov
mov
ret
xor
add
cld
repnz
rcr
test
lahf
je
and
jge
cli
test
iret
jb
aas
aam
gs
leave
sbb
xlat
mov
jmp
add
mov
test
ret
and
xchg
pop
sub
xchg
sahf
lock
je
push
sti
mov
clc
fisttp
shr
pop
icebp
lods
std
repnz
adc
dec
(bad)
fld
cli
pop
push
fisub
mov
mov
jo
shr
mov
dec
sti
aad
cmps
jl
stos
sahf
add
dec
xor
popf
gs
icebp
fnstsw
sub
arpl
and
in
sub
push
xchg
mov
cdq
aad
mov
in
addr16
setge
js
jge
sbb
mov
scas
cmc
fs
jmp
call
fld
sbb
mov
sar
or
push
adc
fidiv
dec
repz
pop
xor
xchg
les
sub
sbb
sbb
stc
(bad)
repz
gs
xor
dec
xchg
(bad)
enter
mov
inc
neg
in
mov
popa
out
sbb
das
je
ret
mov
in
shl
movs
imul
and
add
cmc
(bad)
adc
test
(bad)
and
push
movs
mov
mul
cli
jbe
sub
jnp
js
jl
ins
outs
mov
data16
lods
mov
aam
or
arpl
neg
cmp
scas
(bad)
push
jne
mov
idiv
cmps
and
aaa
jge
xor
pop
mov
(bad)
(bad)
cli
ret
add
sbb
in
xor
rol
xlat
adc
popa
lods
mov
inc
ja
mov
mov
xchg
inc
inc
jne
jp
fucomip
xor
mov
imul
cs
mov
aad
dec
dec
mov
cld
shl
xchg
mov
add
xchg
jle
(bad)
repnz
into
retf
shl
ja
push
add
aaa
push
ins
mov
adc
sub
iret
mov
adc
jno
inc
ins
int3
cmp
gs
mov
pusha
dec
jecxz
sti
sbb
pop
xchg
xchg
xchg
cmp
jl
fwait
lods
mov
push
xchg
leave
mov
into
pop
clc
mov
(bad)
sahf
or
xor
push
push
loop
inc
push
iret
test
shl
clc
aaa
inc
mov
mov
mov
pop
call
repz
mov
xchg
stc
push
(bad)
mov
cmps
sbb
cmp
jge
imul
in
nop
out
push
ficomp
mov
xchg
cmps
aam
inc
leave
mov
stc
ins
sub
xor
cmp
and
loope
mov
mov
inc
cmp
push
out
mov
outs
ret
and
test
mov
bound
cmp
mov
mov
nop
dec
sub
add
mov
ret
cmc
das
fiadd
dec
dec
jno
in
jnp
test
out
pop
ds
and
aad
aaa
xor
add
pushf
pop
pop
add
(bad)
(bad)
(bad)
xor
fistp
pop
test
shl
sbb
loope
test
or
mov
push
(bad)
push
repz
jae
inc
or
push
lods
sbb
mov
ins
or
call
add
inc
xor
mov
ror
repnz
leave
inc
cdq
jle
mov
imul
movs
xlat
jbe
adc
and
sub
loope
push
push
xor
mov
pop
icebp
fstp
test
push
or
sub
pop
fwait
xor
bound
or
ja
add
call
rol
cdq
out
imul
sahf
nop
ins
mov
cld
cdq
add
jp
inc
mov
mov
mov
sub
pop
cmp
retf
dec
pop
jmp
push
fcom
mov
pop
icebp
lods
repz
mov
pushf
clts
mov
(bad)
les
inc
adc
push
mov
pop
fwait
in
pusha
movs
add
jmp
jo
inc
fst
mov
ja
je
adc
mov
outs
sti
ror
sbb
std
dec
aad
xchg
enter
jecxz
xchg
add
add
cs
xor
and
xor
xchg
or
xor
pop
loope
fptan
pop
inc
push
cmp
ret
cmp
inc
fs
rcr
fistp
adc
imul
js
out
dec
arpl
aam
mov
data16
out
jecxz
mov
aad
and
scas
jnp
rcl
push
inc
enter
mov
movs
push
out
movs
xor
jecxz
xor
sbb
rol
(bad)
shl
sub
xlat
cmp
in
hlt
sub
mov
(bad)
repnz
retf
mov
adc
jnp
push
and
sti
test
adc
pushf
dec
int
sub
cmc
push
push
stos
mov
xchg
hlt
ret
mov
adc
mov
push
(bad)
(bad)
arpl
mov
ins
cld
das
xlat
pop
test
add
push
loopne
imul
push
push
(bad)
sbb
cld
cmp
inc
jecxz
call
stos
or
push
dec
div
jno
(bad)
jmp
sbb
pop
mov
sub
xchg
sti
jae
mov
hlt
lods
dec
adc
rcl
sbb
push
sub
out
addr16
push
dec
imul
ficom
out
sbb
mov
xor
pop
lods
and
xchg
push
mov
sub
mov
cmp
add
sbb
inc
rcl
and
ficomp
mov
int3
das
je
dec
cmps
out
imul
jecxz
push
je
lea
push
ins
test
cmp
jo
adc
pop
adc
jns
dec
movs
clc
adc
jg
sbb
jmp
aas
cmps
cmp
ins
(bad)
into
xchg
mul
cld
test
push
cmp
sti
in
in
or
loop
or
jge
movs
pop
lods
dec
xchg
push
rol
pusha
(bad)
adc
jge
and
push
std
jae
stos
lea
dec
jl
and
rol
inc
jmp
mov
movs
adc
leave
and
stos
outs
pop
rcr
mov
mov
loope
dec
jp
aaa
test
cdq
pop
push
in
and
movs
pop
not
je
ficomp
mov
cmp
mov
icebp
(bad)
loop
daa
cli
and
inc
mov
inc
pop
dec
add
add
into
xor
adc
lock
pop
and
jns
mov
stos
test
test
xchg
fcom
xchg
jmp
pop
cmc
jo
mov
mov
mov
dec
jo
cmp
mov
(bad)
lahf
push
cmp
inc
fcom
test
ret
retf
and
in
out
mov
mov
sbb
sub
xchg
sbb
adc
jp
lahf
sti
inc
mov
xor
cs
lock
push
retf
xor
jnp
pop
mov
jmp
add
xor
jbe
data16
jbe
mov
aaa
mov
sbb
fnstcw
and
pusha
mov
push
fidivr
mov
cmps
bsr
jp
inc
sub
lea
pop
es
int
adc
repnz
aaa
adc
retf
ins
cmp
scas
addr16
dec
sub
aad
fistp
jo
repz
movs
jecxz
test
cmp
xchg
popa
cmp
cld
cwde
loop
xchg
pop
inc
jmp
sbb
scas
scas
or
cmps
cmp
mov
int3
aad
mul
cmps
push
pop
fcmovnbe
les
rcl
inc
dec
cmps
cmp
sub
test
mov
mov
mov
mov
sub
lods
aas
xor
mov
mov
in
fisub
mov
out
outs
dec
aas
int
mov
add
xchg
dec
cld
push
mov
adc
xchg
int3
xchg
jno
xor
lock
or
dec
add
inc
scas
cmp
mov
pop
jbe
popf
imul
mov
add
xor
sub
and
(bad)
imul
or
int
pushf
aad
(bad)
push
mov
sbb
(bad)
lods
loope
inc
(bad)
xor
sub
in
bswap
pop
cmp
dec
mov
fadd
in
inc
adc
or
or
stos
cld
ret
das
mov
(bad)
(bad)
stos
dec
xchg
cmc
seta
and
sbb
push
call
repz
inc
cwde
sbb
fbstp
and
shr
shl
pop
inc
and
movs
jne
sub
jns
int
jnp
sti
retf
cmps
jae
div
cmp
xor
xchg
add
push
in
pop
test
std
and
icebp
pushf
jbe
les
scas
mov
repz
mov
cmp
shr
mov
add
in
rcr
test
cmp
imul
mov
dec
push
jge
inc
pop
jl
std
fwait
stc
inc
and
mov
cmc
pop
mov
test
dec
dec
ret
inc
leave
cmp
mov
imul
push
push
inc
(bad)
jmp
cdq
fdiv
adc
cmps
push
lds
lea
xor
into
mov
mov
cmc
stc
sbb
fimul
ds
dec
cmps
mov
xor
sar
sbb
rcr
xor
mov
pop
mov
inc
mov
loope
(bad)
pop
movs
mov
(bad)
cmp
cld
gs
gs
cs
cmp
popf
imul
int
cmp
xor
sub
daa
sub
into
gs
fst
lods
pop
data16
push
ins
test
add
pop
loope
callw
lods
cmp
std
cmp
pop
mov
in
test
repz
mov
icebp
lods
adc
or
pop
xlat
pop
test
addr16
fsubr
sub
dec
pop
gs
jg
jle
cdq
xchg
lock
test
imul
jmp
mov
popa
jge
jmp
pop
cmps
push
sbb
scas
rcl
test
popf
retf
jb
dec
sub
repz
mov
ins
(bad)
mov
enter
jp
and
bound
loopne
push
fbld
sub
mov
(bad)
pop
inc
icebp
mov
add
je
in
inc
inc
dec
xor
inc
imul
add
test
out
es
xchg
xor
arpl
xor
js
into
mov
or
adc
not
sub
cs
mov
popa
lock
mov
ds
mov
shl
scas
(bad)
push
icebp
(bad)
into
sbb
mov
mov
test
cmp
mov
in
jo
call
daa
rcr
mov
jecxz
jle
icebp
idiv
scas
inc
frstor
xchg
dec
sbb
xchg
fldenv
jge
fdivr
dec
dec
inc
xchg
push
push
mov
pop
sti
xchg
cmps
sub
xchg
ret
xor
and
xchg
lods
in
(bad)
sbb
push
cmp
in
pop
sbb
lods
cmp
cmc
dec
out
in
or
sbb
das
test
movs
mov
xor
ss
mov
xchg
pop
fwait
pop
sub
enter
fs
js
std
ss
out
pop
ins
cmp
jno
movs
scas
ret
add
pop
push
or
push
jle
ss
push
aas
movs
mov
lahf
inc
mov
out
mov
inc
js
jg
xor
rol
cmp
out
sub
scas
inc
mul
or
dec
fimul
sahf
das
dec
push
mov
or
add
sub
cdq
xor
ss
cs
and
fcomp
mov
lock
inc
ja
pop
push
imul
ret
nop
mov
and
movs
jnp
lahf
sbb
mov
out
retf
inc
fisub
mov
outs
pop
add
(bad)
push
push
test
fstp
add
pop
out
(bad)
sbb
fdiv
rol
pop
(bad)
sbb
(bad)
push
jg
movs
daa
pusha
xchg
bound
gs
fist
push
sbb
outs
xor
mov
xor
fxch
adc
test
das
lahf
xchg
cmp
sbb
jle
jns
loop
inc
mov
or
lock
sub
xchg
loopne
clc
fist
out
outs
cld
clc
sub
repz
mov
fisttp
or
mov
outs
ss
push
mov
xlat
and
outs
cmp
jg
push
nop
lods
push
inc
std
mov
(bad)
jl
pop
aad
mov
lods
loopne
in
test
jns
(bad)
push
enter
sub
and
hlt
add
call
xor
sub
loop
lods
cwde
fidivr
mov
fsubr
inc
aad
xor
lock
retf
fwait
xlat
mov
add
dec
sub
(bad)
popf
lea
out
ja
ins
adc
nop
pusha
or
(bad)
jb
into
cld
daa
mov
mov
mov
mov
movs
jle
xor
sub
cmp
xchg
mov
jae
jo
sub
out
mov
jge
in
das
mov
mov
loopne
retf
arpl
test
imul
shl
fdivr
movs
outs
test
jb
mov
into
xor
out
mov
mov
fldcw
and
dec
ins
lahf
pop
sar
push
aas
jns
fwait
sbb
push
push
(bad)
(bad)
movs
into
adc
sti
std
clc
fs
iret
stos
or
push
mov
jle
out
mov
out
fs
inc
and
cmp
push
add
sub
and
lods
into
push
pushf
sti
and
imul
push
xor
and
ins
(bad)
and
hlt
mov
adc
sub
fadd
pop
cmp
inc
sar
add
retf
mov
mul
mov
ss
in
sub
data16
inc
movs
daa
retf
enter
in
jb
int3
jns
mov
pop
cmp
fisubr
icebp
jg
jle
xor
cmp
outs
sub
or
in
dec
fdivr
xor
into
cli
push
inc
test
jnp
retf
xor
mov
push
mov
jge
mov
fwait
add
fisubr
or
mov
icebp
daa
test
out
mov
sub
mov
xor
enter
mov
leave
addr16
repnz
idiv
mov
jo
and
sbb
pop
jmp
pop
fisttp
sbb
mov
xor
adc
jae
jge
into
leave
rcr
fcomp
cmp
or
mov
jle
mov
js
pop
scas
stos
lods
je
jle
sub
lea
jb
dec
jb
dec
pop
mul
in
push
mov
aad
mov
bnd
scas
and
push
outs
movs
stos
stos
inc
out
popa
fcmove
in
lods
sar
cmp
pushf
jg
popf
dec
mov
pop
(bad)
jmp
mov
xchg
inc
add
cwde
xchg
xchg
push
dec
movs
inc
adc
and
std
dec
test
lds
leave
pop
jns
ffree
addr16
aaa
push
es
ret
mov
push
jnp
fdivr
hlt
dec
adc
inc
dec
fsubr
dec
sub
jg
adc
mov
pop
or
stc
mov
push
popa
lea
enter
mov
xor
movs
xor
mov
push
add
xchg
fwait
xchg
or
arpl
jns
mov
scas
sbb
sbb
pop
cmp
sbb
fs
adc
jge
(bad)
mov
hlt
mov
pop
mov
jmp
sbb
sti
ret
enter
in
jno
neg
icebp
bnd
jno
fsubrp
jl
sub
dec
push
inc
popf
cwde
loope
jmp
rol
bound
jge
inc
aaa
xor
jg
inc
mov
(bad)
pop
popf
popf
fnstsw
pop
in
pop
xchg
in
adc
mov
hlt
or
push
xchg
arpl
and
out
jnp
outs
mov
loopne
movs
(bad)
cld
jns
call
lods
imul
or
jbe
dec
mov
or
(bad)
push
pop
out
jl
push
inc
mov
(bad)
mov
inc
les
cmps
lock
lock
jae
cmp
sub
pop
and
popa
mov
mov
cmps
mov
dec
std
aad
mov
je
nop
mov
push
fwait
scas
cmp
cmps
push
cmps
mov
sub
inc
jge
lods
xor
pop
and
fisubr
adc
cdq
pop
ret
dec
push
jbe
ror
gs
scas
mov
inc
sub
loopne
inc
sub
cmp
and
clc
mov
and
push
push
push
or
mov
dec
rol
mov
ds
mov
add
jl
mov
pop
popf
lods
enter
(bad)
test
cmps
cmps
sub
pop
js
dec
cmc
into
and
mov
jle
xchg
lods
cwde
xchg
jae
mov
push
jbe
add
xchg
dec
inc
cmc
mov
or
dec
das
out
xchg
in
and
es
push
in
xchg
shr
sbb
inc
movs
je
ror
xlat
out
dec
cmps
cld
aam
xor
push
jnp
adc
mov
fidiv
mov
mov
mov
jne
jecxz
and
shl
xchg
cmp
mov
cdq
push
adc
inc
(bad)
mov
iret
mov
jno
das
aaa
shl
sub
into
dec
jo
mov
dec
and
and
mov
and
dec
jmp
repnz
es
test
mov
cmp
iret
retf
dec
sub
xor
imul
adc
in
inc
mov
scas
fisttp
sub
mov
(bad)
mov
and
cmp
cdq
out
add
xchg
ret
cmp
sub
call
add
adc
pop
aaa
fcomp
sub
pop
rcr
add
ins
adc
into
sahf
sub
or
lea
cli
xchg
clc
jge
cs
push
dec
inc
rcl
adc
adc
cwde
fs
adc
out
loope
retf
cmps
push
(bad)
test
mov
mov
fnsave
out
mov
stc
lahf
out
das
loop
shl
inc
movs
loopne
mov
ror
retf
fs
jae
dec
fcmovnbe
jae
pop
lds
aad
dec
xlat
cmp
cli
(bad)
cmc
fwait
xor
fdivrp
mov
stos
std
dec
and
pop
mov
std
repz
clc
mov
xor
or
ds
int
jle
mov
xchg
adc
or
call
not
outs
dec
mov
ins
inc
pop
pop
cmps
adc
and
popa
mov
jae
int
cmp
jecxz
dec
jae
mov
mov
movs
dec
xchg
int3
pusha
sbb
mov
xchg
ja
movs
adc
adc
mov
adc
sbb
sbb
and
mov
mov
sub
loopne
xlat
xchg
adc
leave
sbb
xor
(bad)
mov
into
mov
and
or
xchg
adc
int3
call
ja
jmp
jg
ins
sub
xchg
jge
and
inc
cmp
cwde
(bad)
cmp
sbb
xor
lods
xchg
sar
cmp
shr
lock
inc
jmp
(bad)
xchg
xchg
mov
sub
lahf
(bad)
jmp
loopne
imul
sbb
push
scas
push
fisub
lods
inc
aas
scas
or
mov
mov
or
movs
push
and
mov
ins
out
sti
popf
call
shr
xchg
cmp
rol
and
sbb
scas
mov
adc
cmp
push
mov
xor
fst
inc
out
das
outs
jl
xchg
sbb
cmp
(bad)
sti
jo
repz
aad
inc
mov
cmp
stc
cmc
push
sub
dec
and
pusha
stos
mov
jno
mov
in
ja
mov
sahf
call
mov
rol
mov
sub
adc
pop
jp
mov
ins
push
cmp
push
lods
or
test
mov
repz
add
sub
mov
icebp
rdmsr
stos
test
cmp
add
push
fild
lods
dec
cwde
cdq
jmp
fdivr
shl
shr
and
dec
sbb
sbb
xchg
and
movs
fbld
rcr
div
jnp
adc
fst
addr16
cmp
mov
ret
mov
scas
jbe
xchg
fcomp
sbb
mov
mov
sub
jnp
push
rcl
or
xor
mov
jle
push
fsub
ja
mov
aaa
in
cld
neg
jmp
mov
int
xchg
sub
popf
inc
mov
out
mov
cmp
adc
xor
xor
pushf
or
xchg
repnz
mov
sahf
or
dec
adc
fild
adc
call
in
cdq
sub
into
lods
inc
retf
daa
test
scas
sub
lock
mov
mov
xchg
dec
je
outs
sti
mov
arpl
jmp
stos
vhaddpd
add
xchg
dec
adc
call
xor
es
lock
aam
push
inc
push
sub
jne
mov
rcl
out
out
movs
push
je
dec
mov
mov
push
sbb
lods
jns
retf
loop
mov
aas
stos
sti
pop
push
mov
cdq
xor
jne
xor
push
mov
rcl
jb
ror
fld
push
lea
jmp
mov
add
clc
iret
or
sub
daa
into
adc
mov
cmp
ja
pop
dec
cmp
cmp
lods
xchg
gs
cld
aad
xchg
dec
fdiv
cld
in
dec
add
pop
push
popf
movs
xor
(bad)
pop
mov
imul
sbb
lea
mov
call
enter
es
or
add
test
hlt
cli
add
shl
xchg
loope
in
loop
lea
fst
push
mov
fisub
aad
cli
in
sub
lds
(bad)
icebp
lock
fwait
mov
out
fcmovne
lds
in
adc
pop
sar
in
jmp
js
xchg
loope
mov
dec
xor
cwde
jle
aaa
jecxz
inc
mov
scas
mov
jp
lahf
mov
fs
popa
xor
push
dec
xor
sbb
sbb
mov
(bad)
pop
and
rcl
in
sub
aas
repz
sahf
adc
sbb
jo
not
into
mov
xchg
adc
cmp
and
jns
mov
mov
test
push
arpl
jb
dec
add
dec
pop
mov
or
sub
sbb
adc
imul
sub
dec
dec
sub
sub
inc
stos
std
jmp
ins
(bad)
jo
xchg
dec
into
add
push
ins
add
or
stos
cmp
cmp
jge
les
pop
sar
adc
mov
mov
jle
scas
mov
jl
imul
jmp
shl
pop
xchg
mov
(bad)
fidiv
pusha
cmp
retf
dec
xor
scas
(bad)
pop
fwait
sbb
mov
cwde
fcom
add
cld
cmp
mov
push
repnz
fs
sbb
sbb
addr16
repz
or
bound
xor
xlat
cwde
inc
jne
and
push
ret
cs
pusha
in
push
adc
mov
ret
movs
loop
fwait
or
fprem1
jno
stc
pusha
(bad)
or
pop
mov
and
shr
xchg
(bad)
push
retf
(bad)
xchg
mov
fadd
das
adc
xor
test
addr16
lods
sar
sbb
int3
jb
inc
fdiv
pushf
sub
das
mov
clc
not
in
test
mov
xchg
jmp
push
push
jle
cdq
jle
stc
mov
jbe
retf
in
icebp
inc
xor
jecxz
and
gs
jbe
jnp
test
icebp
cmps
push
add
int
xor
xchg
xchg
mov
fld
adc
pop
cli
daa
sub
pop
or
pop
data16
data16
ret
mov
pop
fucom
xchg
or
mov
test
or
retf
add
and
pop
pop
enter
mov
out
add
push
es
pop
jb
mov
dec
push
cmp
sub
ror
repz
clc
xor
lea
mov
pop
aas
add
jp
pop
cmp
ins
dec
rcl
push
sub
mov
mov
mov
or
cmc
adc
add
outs
aad
shl
mov
sub
xchg
jb
scas
cmp
pop
or
push
mov
and
add
in
push
xor
loop
mov
sub
add
shl
or
jle
xchg
xor
ja
lods
fist
jmp
pop
jmp
jge
jg
mov
mov
xor
call
sub
mov
push
mov
in
push
call
dec
sbb
pop
aam
rcr
fs
and
add
cld
sub
jbe
xchg
aad
inc
mov
push
pop
jmp
push
add
jnp
je
sbb
cmp
jl
out
xchg
dec
test
nop
test
(bad)
movs
test
rcr
in
fdivr
mov
into
add
xchg
rcl
or
mov
test
push
mov
pop
mov
or
shl
hlt
and
out
jno
ja
movs
cmp
rcl
mov
and
mov
mov
xchg
adc
xchg
dec
or
mov
inc
mov
add
dec
jns
jle
test
shl
push
inc
xchg
cs
ret
cmp
cld
pop
mov
fidiv
rol
xor
ret
shl
call
outs
dec
ret
leave
xchg
pop
mov
in
lds
es
fs
mov
push
xchg
mov
push
add
xchg
sbb
aas
pop
ins
cmp
xor
dec
out
mov
or
in
pop
dec
push
jno
mov
dec
sbb
mov
fpatan
mov
stos
lea
xchg
mov
mov
pusha
add
mov
(bad)
loope
and
jbe
xor
mov
push
shl
ds
mov
cmp
push
ss
mov
shl
test
fstp
pop
retf
adc
dec
push
sbb
cmp
out
mov
loope
jl
dec
dec
cmc
lahf
dec
xor
cmp
retf
popf
das
adc
(bad)
dec
push
mov
sub
cmp
fidiv
movs
sahf
inc
out
inc
cmps
and
sbb
aaa
pop
sbb
mov
or
pop
icebp
inc
adc
int
pop
sub
les
mov
div
jbe
cmp
jle
cmp
and
lahf
retf
repnz
sti
xchg
xchg
fcmovnbe
gs
repnz
dec
push
imul
pop
or
pop
mov
mov
cli
pop
xchg
sar
push
pop
xchg
(bad)
sbb
push
aaa
js
inc
(bad)
fiadd
inc
pop
sub
movs
je
push
fldln2
push
mov
sub
repz
in
jmp
inc
sbb
aaa
cmp
pop
ret
push
pop
mov
nop
leave
ret
hlt
in
dec
mov
mov
jb
xor
iret
ffree
ins
jl
stos
fwait
cwde
jbe
call
stc
retf
leave
mov
jecxz
test
sub
mov
cmps
mov
push
or
xchg
(bad)
aad
jbe
and
stc
push
(bad)
popf
xchg
lods
aad
(bad)
mov
fsub
mov
push
je
inc
mov
(bad)
js
sbb
jmp
xchg
xchg
cwde
(bad)
ret
jb
test
cmp
stc
fwait
jl
ret
lea
add
ror
sbb
inc
repnz
idiv
(bad)
jno
inc
mov
aas
or
fwait
sahf
fmul
scas
mov
mov
fmul
out
fadd
dec
adc
sbb
neg
push
push
jmp
jmp
dec
mov
cmp
mov
sub
in
dec
popf
sbb
imul
push
xchg
xchg
fistp
pop
out
or
inc
mov
and
fild
add
cmp
sbb
and
or
bound
xor
lods
xchg
dec
ss
cmp
adc
and
dec
sub
push
cld
fucompp
pop
push
je
jo
inc
push
push
out
jns
jl
adc
pusha
jmp
add
push
int3
pop
pop
xchg
push
push
xchg
mov
sbb
dec
int3
mov
in
sbb
and
popf
fwait
pop
xlat
nop
repnz
dec
mov
xchg
fldcw
cmps
xor
clc
pop
and
loop
and
xchg
retf
xchg
into
dec
adc
outs
push
inc
fidiv
xchg
ss
mov
add
mov
out
cmovl
xchg
aad
(bad)
cld
jmp
add
adc
fidiv
sub
mov
out
mov
outs
addr16
push
cld
adc
call
je
sbb
pop
or
sub
cmp
retf
mov
aam
dec
addr16
(bad)
imul
lods
sbb
dec
xchg
adc
inc
int
fidivr
add
mov
fs
dec
imul
int3
les
add
test
dec
test
sub
retf
cmp
jle
mov
sub
push
int
xchg
call
(bad)
cmp
add
hlt
pop
cwde
mov
(bad)
ins
adc
ins
cmp
ja
out
inc
mov
ret
cli
mov
xchg
xor
cmps
and
dec
inc
push
aaa
mov
(bad)
mov
cmp
or
and
fild
sub
mov
daa
or
adc
scas
fild
sub
xchg
mov
jle
ret
cmps
scas
xchg
fmul
in
mov
ret
ins
sti
push
(bad)
mov
(bad)
ss
add
sub
pop
aaa
sbb
popa
popf
jbe
adc
dec
loope
or
mov
fs
dec
or
jge
mov
mov
push
mov
mov
jl
inc
push
in
aaa
or
fwait
outs
adc
dec
adc
push
jl
clc
push
push
ins
adc
add
xchg
loop
bound
sub
gs
mov
cli
in
retf
loopne
mov
jecxz
cmp
popa
pop
mov
cmp
mov
jno
ret
add
(bad)
sbb
inc
push
and
add
mov
jbe
ret
or
(bad)
mov
repnz
sub
push
pop
cmp
xor
(bad)
int3
js
push
jae
addr16
jl
sub
or
loope
lods
and
mov
cwde
jae
sbb
pop
dec
bnd
sbb
lods
push
sbb
mov
lods
inc
js
mov
in
fwait
xchg
pop
push
cdq
and
loop
sub
and
jle
push
mov
ins
(bad)
mov
sub
(bad)
xor
adc
ins
inc
pusha
sbb
pop
adc
pop
sbb
jbe
mov
daa
lods
adc
stc
dec
shr
push
add
into
pop
ret
movs
lods
cmp
imul
sbb
popa
mov
dec
stc
es
push
addps
popa
shl
(bad)
lods
cmp
rcr
fmul
cmps
fst
push
fst
inc
(bad)
jp
je
jl
imul
(bad)
shl
out
sahf
xor
lods
call
lds
mov
or
xchg
xchg
(bad)
adc
retf
or
adc
dec
iret
(bad)
push
push
scas
out
jle
inc
push
mov
adc
cwde
xor
fwait
xchg
push
dec
jb
push
mov
jns
and
inc
mov
xor
jle
mov
mov
add
inc
adc
mov
push
dec
ins
mov
dec
xchg
push
or
shl
push
addr16
div
sbb
or
call
lods
jecxz
popa
bound
test
addr16
aas
lods
cld
test
mov
mov
mov
mov
sub
sti
sub
inc
adc
xor
xchg
xor
lds
les
imul
fld
sub
sbb
out
push
mov
push
rol
add
pushf
vmwrite
stos
xchg
mov
push
mov
xchg
inc
test
stos
mov
fsub
jle
inc
and
lock
adc
pusha
jne
mov
outs
mov
movs
jbe
mov
jl
hlt
es
ins
repz
adc
retf
adc
mov
cmp
dec
pop
mov
inc
pop
icebp
xchg
push
movs
into
dec
sbb
inc
cmp
arpl
retf
push
mov
mov
(bad)
pop
sbb
mov
xor
add
jo
repz
sub
push
sti
push
xor
pop
loope
or
ins
shl
and
scas
xchg
jb
out
pop
jo
mov
imul
sub
mov
dec
ins
aaa
or
stos
xchg
scas
push
dec
cmp
sbb
xlat
jge
jg
pop
add
xchg
call
fsub
dec
xor
xchg
imul
xchg
test
ror
mov
nop
jl
test
pop
mov
add
test
jmp
adc
push
imul
aam
jle
mov
or
dec
cdq
dec
stos
popf
stos
cmc
and
ja
shr
sbb
(bad)
arpl
pop
in
sahf
stos
stos
test
push
cmp
cld
cmps
mov
adc
mov
pop
jg
mov
sub
or
stos
(bad)
aam
mov
mov
je
adc
lea
cmps
cmp
enter
jp
cmps
aam
ror
pop
xchg
(bad)
sbb
mov
mov
dec
into
inc
fcmove
in
inc
and
mov
push
dec
cmp
push
xor
out
mov
lahf
dec
mov
(bad)
fild
xchg
adc
nop
pop
cmps
aam
(bad)
std
pop
push
fs
adc
inc
scas
and
test
pushf
jmp
or
pop
inc
imul
xchg
imul
cmp
jmp
mov
sbb
cmp
div
repz
sbb
or
mov
call
mov
loopne
dec
add
mov
ret
daa
int
xchg
out
xchg
sbb
xchg
jb
mov
push
jb
xchg
pop
lahf
mov
add
pop
dec
(bad)
jbe
ja
inc
dec
out
shl
dec
ds
jbe
dec
ror
mov
xchg
ret
sub
stos
loop
aas
xchg
sahf
adc
mov
and
pusha
lahf
(bad)
arpl
cmp
imul
outs
cs
scas
and
js
adc
repz
cmps
adc
pushf
push
bnd
mov
adc
int
cwde
out
pop
mov
jp
stos
iret
sub
dec
ret
out
inc
jp
cmps
daa
fwait
or
sbb
mov
(bad)
jmp
sbb
mov
inc
push
out
bound
ror
sbb
adc
sbb
inc
mov
mov
pop
or
push
jmp
dec
jo
sub
ror
or
mov
test
shr
mov
sti
in
jne
xlat
inc
sub
push
push
outs
mov
icebp
aaa
aas
jp
inc
and
das
mov
mov
xchg
js
pop
xchg
test
jns
sub
inc
adc
daa
fst
sar
sbb
call
dec
retf
mov
push
or
push
dec
sub
pop
enter
xchg
inc
idiv
(bad)
in
inc
stos
mov
xor
cmp
cmp
daa
pushw
fstp
leave
add
xor
push
sbb
popf
out
mov
mov
out
cmp
mov
retf
into
mov
sbb
jmp
inc
mov
adc
or
int
repnz
lahf
and
adc
and
and
lods
(bad)
lds
mov
ficomp
jg
sar
ss
ds
cli
imul
(bad)
xor
popf
mov
xor
in
mul
test
inc
hlt
jecxz
rol
push
xchg
mov
inc
lods
xchg
mov
enter
dec
and
lock
or
movs
mov
push
out
add
ret
pop
and
into
sbb
out
retfw
mov
rcr
andps
stos
inc
jne
dec
mov
cmc
sbb
repz
scas
cmps
hlt
xchg
leave
enter
jg
js
pop
push
call
bound
cmps
push
mov
or
mov
pop
mov
sti
mov
xor
jecxz
or
inc
push
hlt
push
inc
(bad)
test
sub
stos
out
mov
push
lea
xor
xor
sub
push
jns
dec
push
pushf
pop
in
inc
adc
ret
std
xchg
lods
int3
mov
out
jle
retf
push
mov
or
psubsw
dec
sbb
jl
retf
dec
xlat
xor
xor
jno
push
xor
cmp
jmp
sbb
div
ds
add
(bad)
cmp
test
test
push
dec
scas
sbb
mov
je
lea
aas
pop
inc
inc
pop
retf
aam
stos
add
sub
mov
inc
inc
enter
adc
in
xor
fstp
pop
jmp
fwait
call
cmp
rcr
push
fnstcw
sahf
stc
test
sub
outs
and
pop
icebp
dec
dec
imul
xchg
adc
cmc
les
jl
call
mov
add
mov
mov
stos
push
inc
shr
lods
and
mov
xchg
mov
rol
jge
push
cwde
xchg
sti
mov
repz
mov
inc
cmp
xchg
mov
cmp
adc
sub
add
sub
jmp
jne
test
pop
adc
xchg
data16
cmps
shl
jl
xor
mov
cmp
dec
jnp
push
cmp
nop
aam
test
movs
es
or
mov
add
mov
test
sub
out
xor
scas
ins
ficom
add
mov
push
push
sbb
pop
ret
jle
push
sbb
cmp
mov
jmp
pop
cmp
(bad)
mov
or
aaa
sbb
ret
jmp
popf
jbe
pop
cvtpd2ps
enter
push
jns
into
ins
mov
mov
leave
dec
retf
movs
cmps
and
mov
jnp
fild
retf
in
fcomp
vmmcall
loop
enter
sti
test
xchg
add
or
xchg
mov
push
iret
add
sub
popf
mov
movs
jmp
scas
aas
jp
clc
test
loopne
(bad)
adc
sub
sar
cli
push
mov
cmc
xchg
mov
cmps
test
add
pop
pop
fwait
repnz
les
push
call
lods
rcl
xchg
mov
jmp
inc
into
and
add
lea
int3
jl
vmovddup
daa
cmp
(bad)
shl
add
call
mov
je
and
lods
jbe
imul
popa
(bad)
pop
xlat
xor
shr
fnstcw
mov
add
ret
leave
popf
fadd
lds
cmp
lock
pop
mov
inc
pusha
enter
push
test
lahf
or
test
in
ret
jecxz
pushf
js
jno
outs
and
arpl
imul
dec
nop
jmp
shl
jae
in
cli
and
test
inc
sbb
fmul
inc
mov
or
lahf
stc
icebp
pop
out
xchg
push
je
daa
pop
imul
mov
lock
sbb
and
dec
push
imul
call
loope
xchg
and
ret
adc
sti
push
mov
mov
mov
add
xor
push
mov
jmp
dec
sub
xor
stos
mov
inc
mov
imul
daa
and
and
test
mov
rcr
retf
cmp
sub
push
inc
into
int
push
iret
xor
dec
out
pop
and
repz
mov
mov
fdiv
ds
stos
mov
pop
push
fcmovnu
and
or
mov
fsubr
pop
scas
xor
mov
nop
retf
jg
adc
mov
push
loop
ins
dec
sub
pop
mov
push
loop
dec
inc
dec
out
and
or
cmp
scas
cmp
aad
push
cmps
mov
in
data16
mov
unpcklps
int3
mov
scas
mov
jbe
mov
cwde
in
xchg
sub
mov
sbb
shl
sbb
mov
out
movs
test
cwde
sbb
div
(bad)
mov
and
mov
int
xor
out
sbb
cmp
gs
cmp
pushf
fbld
aaa
adc
out
or
(bad)
or
xor
ins
inc
enter
fdivr
xlat
iret
mov
mov
movs
pusha
pusha
mov
dec
fild
xlat
or
jns
xchg
fwait
inc
neg
mov
je
jno
in
cmp
pop
mov
out
mov
fidiv
cmps
jmp
inc
or
cmp
shl
clc
mov
mov
pop
ss
fadd
mov
jecxz
mov
shl
inc
inc
add
inc
mov
rcr
stos
or
adc
cmp
sbb
fsubr
adc
das
sar
call
push
inc
xchg
(bad)
pop
ret
in
and
and
pop
in
mov
test
mov
test
gs
retf
sbb
pushf
jmp
inc
or
clc
xchg
clc
out
mov
sub
add
pop
and
imul
fdiv
adc
jns
cmp
in
mov
lds
push
or
inc
rcl
scas
jo
push
out
and
push
aas
stos
ja
cmc
imul
and
call
xchg
adc
mov
ret
and
movs
mov
and
or
pushf
sub
outs
adc
xchg
mov
xchg
push
or
mov
adc
add
retf
leave
jnp
stos
test
and
mov
out
pop
or
sti
imul
(bad)
pop
sub
xor
jle
xor
jecxz
sbb
sub
(bad)
cmc
inc
dec
rol
cmovne
test
adc
mov
addr16
jg
xor
stc
fsub
mul
jmp
dec
or
pop
cli
imul
popa
(bad)
mov
xor
aam
(bad)
xchg
dec
cmp
jne
daa
push
xchg
sbb
je
in
dec
pop
and
and
sbb
dec
mov
out
pop
mov
pop
aad
sbb
pop
add
sub
loope
add
ja
mov
fwait
lods
fcomip
bswap
mov
cmc
mov
loopne
data16
sbb
push
inc
mov
mov
push
push
loope
sti
xor
xor
pop
dec
xor
mov
push
pop
mov
ins
pop
test
mov
(bad)
mov
xlat
push
retf
cmovne
repnz
popf
xchg
fcomp
sbb
out
mov
sub
cmp
out
cdq
lods
sub
ret
sbb
dec
mov
push
dec
xor
fucomi
xchg
adc
and
retf
fadd
das
add
ret
or
mov
pop
jmp
fdivr
sbb
add
jp
sbb
addr16
test
(bad)
sbb
in
stos
test
imul
add
xchg
sbb
shl
jl
aad
mov
mov
jnp
dec
mov
dec
in
pop
sub
ss
jg
adc
neg
jge
outs
or
mov
in
hlt
cli
adc
scas
mov
arpl
cmc
xor
stc
xlat
push
jmp
js
movs
push
or
and
xlat
sub
mov
sbb
push
ins
mov
mov
pushf
outs
stos
xchg
outs
loope
outs
movs
push
mov
and
push
xor
bound
fadd
cdq
ret
int3
cmp
mov
jns
das
cs
mov
cmp
in
lock
stos
push
inc
scas
mov
xchg
cmp
mov
mov
jecxz
jo
repnz
or
ins
ret
daa
xchg
xchg
pop
push
xlat
int
inc
inc
adc
xchg
sub
fidivr
lods
mov
test
cmps
jp
sbb
iret
fimul
loopne
dec
pusha
(bad)
iret
outs
pop
dec
jnp
out
repz
jge
enter
ins
mov
push
je
nop
out
nop
push
mov
test
lock
pop
not
ror
jbe
push
popa
push
pop
and
mov
sar
fsubp
and
retf
neg
push
inc
dec
test
or
das
fcmovne
jne
inc
xor
pop
hlt
stos
cmps
iret
test
pushf
jge
push
pop
les
mov
sbb
cmps
xchg
dec
mov
and
rcr
cwde
sbb
cmps
aad
cld
daa
xchg
jb
push
xchg
cmp
dec
sti
jecxz
retf
and
push
jle
jns
stos
stos
xchg
push
fcmovne
mov
xchg
dec
sub
sub
pushf
rol
or
or
lods
inc
inc
imul
sub
cdq
mov
and
repnz
sbb
mov
sar
sub
push
inc
mov
(bad)
adc
pushf
stos
sub
push
xchg
daa
push
fld
inc
(bad)
mov
dec
pop
mov
adc
popf
xchg
pushf
test
adc
outs
arpl
adc
ins
in
adc
pop
push
push
inc
addr16
fdivrp
movs
or
pop
xor
out
cwde
ret
fwait
xor
rcr
mov
xor
(bad)
push
fistp
or
(bad)
mov
or
nop
pop
cli
xchg
addr16
sbb
popf
inc
dec
xchg
mov
stc
cmp
shl
gs
pop
pop
ja
dec
mov
or
pcmpeqd
mul
and
fistp
mov
leave
call
xchg
xchg
jbe
xchg
jne
out
mov
sub
xor
dec
js
fcom
int
gs
fwait
lods
imul
test
repnz
ds
test
repnz
xchg
int
add
cs
ins
sub
push
push
adc
and
dec
sub
push
pop
pop
and
sub
pushf
push
sti
mov
cli
mov
jmp
test
std
popf
push
jle
and
iret
fild
pop
xchg
sub
test
fdiv
and
movs
pop
ud0
out
lds
test
ret
mov
push
in
inc
add
sbb
mov
clc
sub
stos
fisttp
dec
push
mov
call
mov
popf
arpl
mov
fidivr
ret
mov
mov
cmps
fs
out
sub
ss
push
cli
mov
push
retf
(bad)
ret
pop
movs
or
xchg
test
xchg
xor
mov
lahf
cmp
mov
scas
(bad)
add
leave
push
in
lock
inc
cmp
adc
jmp
fnsave
mov
xor
sbb
xchg
lods
xchg
sbb
and
and
jmp
jmp
inc
stos
inc
adc
push
lahf
sub
and
mov
jae
mov
out
dec
movs
sub
mov
cmp
inc
dec
add
cwde
adc
pop
test
mov
test
(bad)
pop
adc
pop
mov
leave
push
jp
mov
loop
adc
mov
sbb
pop
dec
mov
shl
in
(bad)
xor
outs
retf
mov
mov
popf
mov
jle
mov
into
inc
inc
out
xchg
icebp
out
mov
mov
gs
xchg
ds
in
sub
mov
jno
push
pop
ret
stos
jmp
loop
(bad)
jno
xchg
lods
mov
pop
mov
daa
push
dec
push
mov
adc
adc
xchg
jb
nop
xor
sbb
pop
cs
push
repz
adc
push
cld
cmp
sbb
push
imul
jg
fcomp
or
div
movs
xor
sbb
in
mov
call
push
and
or
add
into
sub
xchg
mov
fiadd
pop
mov
jmp
inc
popf
jbe
push
outs
int3
cmps
int
mov
outs
pop
or
mov
xor
addr16
scas
hlt
cmps
add
inc
fild
js
sub
out
pop
jg
mov
aam
sbb
sbb
loopne
add
jmp
imul
rcl
(bad)
mov
push
pop
enter
jno
aam
cld
mov
sahf
icebp
es
outs
and
mov
push
inc
mov
sar
int
inc
(bad)
lods
mov
sbb
push
xor
fs
lock
mov
add
je
je
call
mov
mov
(bad)
outs
int
push
cmps
cmc
mov
mov
xchg
inc
cmp
push
scas
gs
fidivr
call
push
xchg
sbb
xor
jl
mov
psrlw
dec
iret
sahf
sbb
sbb
test
pop
ror
xor
or
iret
retf
xor
pop
xor
repz
mov
out
aas
xor
pop
pushf
or
pop
sbb
lahf
sub
int3
dec
cwde
dec
inc
stos
push
xchg
ret
dec
stos
pop
int3
dec
adc
ins
popf
and
xchg
loop
data16
rol
mov
cmc
cmps
gs
cmp
jb
sub
push
sbb
arpl
(bad)
fidivr
inc
jmp
repnz
mov
xchg
daa
pushf
push
ins
loop
cmp
push
jb
aaa
fimul
jmp
adc
in
push
lahf
jle
(bad)
and
mov
fucomp
mov
or
jnp
in
mov
ja
jmp
push
pushf
mov
mov
adc
sub
ja
(bad)
fst
dec
in
cmp
sbb
or
xor
or
repnz
inc
push
push
pop
xor
xor
int
xchg
adc
fiadd
retf
mov
and
loope
les
cmp
imul
(bad)
mov
pop
ss
cmps
pop
and
cmc
mov
out
ret
add
dec
push
in
(bad)
(bad)
fld
jmp
push
mov
mov
jnp
push
(bad)
frstor
sbb
push
mov
jg
and
sub
daa
out
mov
lock
cld
dec
xor
inc
mov
rol
int
cmpps
pop
pop
mov
nop
jae
xor
ds
icebp
(bad)
fimul
add
cmp
and
into
xor
(bad)
mov
push
pop
mov
xchg
sub
aas
pop
outs
mov
mov
fxch
jae
mov
mov
dec
cld
je
mov
or
test
push
mov
inc
lods
pusha
and
fwait
lods
aam
lea
or
pop
es
mov
mul
int3
(bad)
dec
int3
jmp
mov
nop
pop
jo
repnz
idiv
test
cdq
pusha
(bad)
jl
nop
shl
nop
aas
adc
pop
jecxz
fsubr
and
pop
lahf
add
cli
(bad)
out
je
jmp
shr
pop
repnz
hlt
fs
mov
or
scas
loopne
outs
sti
xor
cli
mov
fsub
push
pop
mov
test
lea
xchg
pop
lds
dec
jnp
mov
jns
fucomip
xor
sbb
sbb
pop
adc
pop
mov
mov
adc
ds
adc
sbb
adc
inc
pop
jge
into
or
or
xor
jge
inc
dec
out
sbb
cmp
sub
mov
(bad)
outs
aas
inc
and
shl
popa
push
dec
xor
adc
cmp
xor
pop
nop
in
and
loop
aam
pop
lea
cmc
push
outs
dec
cmp
sub
mov
mov
add
clc
jg
inc
fisttp
ds
call
cld
sub
inc
int
call
repnz
repz
push
pop
retf
sti
cmp
xor
mov
ret
icebp
cmp
lea
int
stos
adc
xchg
xchg
jmp
pop
stc
and
sub
push
inc
mov
mov
dec
mov
fist
push
mul
(bad)
xchg
mov
sbb
mov
dec
cmp
ins
cmc
in
ret
xchg
dec
fcomip
push
ror
repz
jns
in
pushf
outs
es
imul
imul
scas
sub
mov
push
or
pusha
dec
jne
push
sbb
mov
call
pop
adc
(bad)
mul
iret
(bad)
out
inc
loope
and
xor
mov
and
es
dec
fwait
(bad)
push
ins
gs
repnz
sub
or
dec
int
cmp
or
mov
push
sti
cmp
repz
jle
xlat
lahf
ins
push
cmp
dec
lods
sbb
and
out
(bad)
push
loopne
sbb
pop
sub
pop
add
pop
and
xchg
daa
imul
jmp
or
dec
push
popf
popf
mov
imul
sub
inc
ins
call
jmp
lds
scas
push
clc
dec
or
jmp
jp
jns
in
js
mov
mov
das
mov
sub
fidivr
cmps
xor
xlat
xor
push
add
push
stc
jle
iret
adc
cmp
jb
or
push
inc
inc
sub
dec
mov
lds
push
retf
cs
fbstp
sbb
ret
jo
and
sub
add
jb
pop
mov
lea
stos
inc
add
les
mov
dec
jge
pop
and
jmp
aaa
push
xchg
jmp
ss
test
sbb
push
cmp
xor
mov
aas
sbb
adc
leave
jle
mov
inc
(bad)
dec
lahf
dec
xor
loopne
mov
out
repnz
xchg
arpl
xchg
sub
jne
and
pop
mov
push
in
aas
xor
cmc
aam
jl
inc
push
xchg
iret
jns
pop
ror
maskmovq
xor
dec
fwait
xchg
push
cmp
xchg
aam
ds
imul
and
test
mov
cmovnp
xchg
out
out
add
lahf
inc
daa
movs
fistp
inc
nop
daa
sahf
test
and
pop
or
pop
push
jnp
xor
test
pop
mov
push
in
ret
push
push
jae
fidiv
push
outs
push
fwait
inc
scas
fsubr
pusha
cmp
push
rcr
add
xchg
sbb
pop
jle
push
mov
mov
test
or
push
out
mov
in
das
mov
mov
fistp
push
nop
fmul
stos
jno
inc
call
adc
js
loop
shl
pop
jl
cmps
shr
popa
sub
jns
mov
mov
(bad)
push
ret
retf
sti
fwait
movs
inc
inc
inc
in
ret
ins
mov
sub
cmp
int
jp
ds
mov
sub
jnp
int3
mov
out
mov
daa
mov
das
push
rcr
cli
(bad)
push
adc
retf
pushf
out
push
push
push
xlat
xlat
loop
jnp
movs
or
inc
mov
push
pop
add
rol
push
ret
mov
inc
adc
int
add
out
out
lea
outs
sub
push
sbb
aaa
jb
adc
aaa
jle
jbe
outs
cmp
and
fldcw
arpl
push
jge
adc
retf
int
push
and
cmps
xor
push
(bad)
neg
mov
xchg
sbb
or
clc
bound
push
dec
add
push
inc
in
ror
sub
imul
inc
cmp
jmp
pop
mov
out
and
jge
lock
xchg
and
jle
inc
jmp
add
aad
test
sub
not
lahf
xchg
pusha
loope
out
adc
xor
sbb
inc
jecxz
and
sbb
imul
pop
outs
idiv
jge
repz
popf
loop
enter
mov
cmp
dec
pop
not
std
sub
add
sahf
xor
imul
pop
ret
mov
inc
jae
mov
popa
jne
fbld
cmp
data16
inc
scas
sbb
jg
pop
lea
out
push
push
cmp
jns
aas
outs
call
test
sbb
gs
push
fmul
lahf
lods
cmp
inc
sub
sub
gs
das
inc
movs
push
test
ins
popa
pop
mov
out
push
loop
gs
in
cdq
push
fs
xchg
sahf
packssdw
xchg
imul
push
push
sub
xor
jne
fist
mov
jmp
jae
daa
or
and
mov
fild
mov
and
mov
and
fs
(bad)
jno
movs
cmp
imul
jmp
sti
shl
and
mov
pop
mov
pop
in
iret
pop
lods
sub
int
sub
mov
fs
xor
xor
xchg
pop
leave
mov
call
sbb
mov
ficom
pop
cmp
(bad)
push
jg
push
arpl
loopne
out
xchg
gs
js
jmp
fcomp
fbld
jb
push
(bad)
jb
pop
push
xchg
xchg
jno
sub
js
push
scas
dec
jp
outs
movs
rcr
fld
cdq
das
outs
out
(bad)
es
mov
jo
push
pop
pop
sub
cmp
lods
int3
mov
inc
ins
bound
leave
ds
jnp
(bad)
cld
shl
adc
or
jnp
mov
nop
in
lods
es
mov
mov
cmc
add
fmul
test
sbb
loope
xchg
xchg
outs
das
jmp
(bad)
nop
out
dec
and
and
xchg
ins
or
mov
mov
or
jmp
inc
adc
aam
cs
add
dec
scas
jmp
mov
arpl
(bad)
call
hlt
loopne
neg
or
gs
in
lahf
icebp
(bad)
push
mov
add
mov
cmp
jg
sbb
fwait
popa
(bad)
cld
fistp
mov
(bad)
sub
inc
cmp
sub
imul
pushf
out
rep
inc
imul
es
xor
cdq
inc
rol
out
movs
(bad)
jmp
stos
into
cld
pop
sbb
mov
clc
sub
push
hlt
jmp
sbb
push
lods
dec
sbb
das
ins
fcom
test
or
sar
mov
lea
or
sub
mov
push
mov
jbe
push
cmps
in
test
popf
in
jae
dec
dec
xchg
scas
fwait
jmp
pop
outs
(bad)
fbld
lahf
fbstp
dec
jae
nop
push
retf
and
retf
mov
out
ins
and
sbb
mov
icebp
imul
xor
adc
cmp
retf
repnz
fisttp
jmp
in
cs
loopne
cmp
es
cld
mov
imul
movs
inc
iret
cdq
jge
pop
data16
xlat
fcomp
adc
jne
push
adc
fstp
mov
inc
cmps
jae
sar
cmp
mov
push
pop
jne
dec
fidivr
pusha
rol
adc
mov
adc
fidivr
shl
int3
cmp
(bad)
fsub
cmc
repz
ds
mov
adc
xchg
xor
dec
movs
cmps
sub
int3
mov
pop
add
sbb
xchg
mov
mov
mov
fadd
in
jne
fimul
mov
std
xor
xor
fcom
inc
test
xor
jge
sbb
xchg
rcr
or
and
retf
xor
int3
imul
mov
jl
(bad)
sub
and
ins
sub
rcr
mov
pop
jmp
popf
adc
jge
mov
add
fmulp
in
sbb
icebp
xor
xor
pop
mov
xor
inc
in
outs
sub
pop
int3
scas
(bad)
push
movs
js
rcl
aad
cs
pop
jg
sbb
xlat
xor
jb
cdq
pushf
cmp
enter
or
pop
je
call
(bad)
adc
leave
add
rcl
cmp
xchg
retf
cmp
mov
add
jne
jno
ins
(bad)
xor
into
dec
sub
int3
je
clc
test
repz
test
pop
cs
lds
mov
add
sub
fmul
adc
xchg
mov
mov
shr
xlat
xor
add
sahf
je
or
push
pop
push
jmp
and
mov
test
ins
xchg
xor
xlat
popf
pop
enter
sbb
xor
sbb
rol
imul
push
pop
leave
loop
ret
add
(bad)
popf
mov
mov
pop
sub
loop
cmp
sub
popa
jmp
adc
aam
in
xchg
or
jge
pop
aam
cmp
mov
fld
mov
jmp
inc
jmp
jbe
mul
push
jp
adc
jbe
ficom
popa
out
mov
mov
inc
push
(bad)
push
rol
int3
adc
add
inc
add
ja
repz
push
cmp
xor
cmps
xor
cmc
stos
pop
(bad)
(bad)
jmp
enter
inc
imul
in
lahf
jge
xor
xchg
fcmove
or
fs
imul
push
and
jnp
loopne
jg
js
sbb
jge
sar
push
mov
fsubrp
pusha
pop
ss
das
inc
sti
push
loopne
dec
dec
xchg
mov
out
cmp
xchg
xchg
xchg
ror
inc
jne
pop
jno
inc
hlt
loope
loope
clc
ds
mov
adc
push
sbb
sbb
xchg
inc
hlt
ds
push
mov
xchg
scas
dec
jno
push
xor
outs
int
push
jb
add
add
(bad)
xchg
mov
out
js
mov
add
ret
sub
shl
sti
(bad)
ins
sar
cli
mov
jne
outs
pop
sub
bnd
xor
cmp
into
scas
(bad)
adc
mov
inc
push
loope
dec
jbe
jmp
pop
xchg
cmp
ja
std
xlat
cmps
bound
mov
out
or
push
js
scas
or
inc
cmp
sub
imul
movs
and
call
xor
lods
mov
and
(bad)
pop
fdiv
rol
lea
sub
mov
cld
and
mov
mov
mov
adc
jno
adc
xor
xchg
mov
or
cwde
mov
retf
sub
out
add
jge
xlat
ins
jmp
icebp
xor
mul
dec
xchg
adc
gs
cmp
sub
xlat
repnz
push
mov
adc
or
cmp
into
retf
gs
sub
iret
push
sbb
add
mov
stos
add
jmp
dec
fild
xchg
mov
xchg
adc
and
mov
pop
lods
mov
ss
lods
sbb
and
fcom
(bad)
outs
adc
mov
xchg
shl
adc
rol
mov
xchg
shr
jb
xchg
dec
mov
push
sbb
push
jmp
stc
pop
loop
xchg
fadd
push
push
inc
test
mov
mov
add
jmp
mov
jnp
pop
adc
pop
mov
jp
cdq
lods
xchg
addr16
das
data16
outs
aad
int3
test
pop
mov
push
or
test
aad
scas
mov
add
adc
xchg
inc
(bad)
out
fbld
ss
cmc
mov
adc
aam
shl
cdq
add
mov
aam
mov
jle
js
inc
lods
jnp
pop
in
ja
lahf
loopne
xor
std
ret
xchg
bound
mov
ret
add
and
nop
cmp
add
push
jp
fmul
movs
ins
movs
repz
xor
xor
mov
jmp
fsubr
dec
fs
dec
leave
call
arpl
(bad)
ja
sbb
push
push
pop
adc
fincstp
out
or
mov
adc
outs
sub
int
ins
das
scas
out
cmps
jno
pop
sub
int
test
xchg
add
movs
movs
mov
gs
cmps
icebp
push
aas
pop
cvttps2pi
test
in
mov
dec
es
add
mov
xchg
jns
test
fld
dec
push
fwait
test
in
dec
push
mov
or
inc
in
mov
cmc
clc
and
mov
add
imul
dec
jl
push
arpl
dec
add
and
inc
jge
mov
jmp
icebp
arpl
dec
mov
mov
xchg
or
pop
pop
xor
mov
pop
stos
bound
push
jmp
mov
mov
mov
clc
mov
mov
outs
icebp
adc
es
mov
and
sbb
jp
(bad)
cmp
inc
shl
mov
ja
push
xchg
sbb
in
fisttp
fwait
cmp
das
mov
imul
mov
mov
call
sbb
inc
in
adc
adc
mov
add
into
add
xor
and
hlt
mov
adc
aas
xor
(bad)
pop
push
ret
push
pop
xchg
jno
(bad)
sbb
pop
mov
sbb
dec
cmc
out
mov
repz
retf
inc
dec
les
leave
not
neg
shl
movs
ret
call
jecxz
push
inc
nop
sbb
adc
mov
test
icebp
inc
fucomip
pop
std
je
pop
inc
out
sbb
lea
outs
ins
adc
ret
adc
cld
xchg
push
rep
imul
stos
cmp
je
mov
mov
pop
ret
ss
mov
aam
jp
add
mov
retf
bound
inc
loope
dec
ja
jle
fdiv
jmp
nop
inc
out
imul
dec
cwde
mov
stos
or
or
idiv
sbb
mov
js
pminsw
test
mov
out
adc
xlat
jmp
cmps
gs
jge
out
xchg
repz
inc
add
ins
(bad)
movs
dec
inc
syscall
mov
lods
(bad)
(bad)
scas
push
xchg
mov
mov
stos
mov
adc
mov
and
mov
push
inc
mov
jno
std
ret
loopne
mov
(bad)
xor
pusha
mov
mov
add
xlat
ficom
out
adc
mov
push
inc
inc
ds
cmp
mov
adc
loop
jg
and
push
shl
repnz
mov
(bad)
das
loopne
repz
jnp
sub
sub
fwait
int3
xor
pop
inc
ins
rcl
adc
mov
sahf
push
out
call
sub
ret
loope
inc
sbb
data16
ud0
fcomp
push
fiadd
in
jmp
xlat
stos
aaa
outs
or
pcmpgtd
sub
xor
sti
pop
push
dec
call
mov
mov
in
into
adc
hlt
mov
mov
enter
(bad)
stos
(bad)
fist
js
mov
call
push
inc
mov
lds
in
sub
sub
ss
xor
arpl
ins
jmp
xchg
adc
pop
or
call
cmps
mov
aas
stos
jbe
in
push
(bad)
sbb
and
sbb
in
mov
test
xchg
call
fstp
adc
outs
(bad)
je
add
lea
mov
mov
popa
pop
mov
shr
or
jbe
cmps
retf
test
lahf
pop
inc
push
jmp
movs
dec
rcl
ficom
nop
(bad)
dec
add
mov
out
xchg
add
int
imul
repz
stos
xchg
sbb
cmps
jge
dec
sar
scas
stc
sbb
or
jnp
or
test
dec
arpl
push
(bad)
mov
sub
mov
sub
pop
bound
sub
popf
(bad)
shl
inc
push
imul
loope
int3
pop
stc
loopne
inc
inc
sub
xchg
jns
mov
jbe
cdq
mov
pop
arpl
cmps
sub
mov
cmp
lods
jae
jge
cmc
push
xchg
mov
dec
xlat
lea
enter
mov
lods
dec
mov
xchg
or
movs
push
pop
dec
scas
cmp
(bad)
push
outs
pop
pushf
mov
cld
in
xlat
pop
fisubr
mov
(bad)
jg
dec
inc
call
mov
jecxz
jg
inc
into
cmp
test
mov
mov
popa
jmp
pushf
dec
mov
jb
rol
shl
popf
rcl
lods
sbb
dec
jns
daa
add
cld
shl
jo
(bad)
retf
push
popf
add
into
cmc
inc
ret
icebp
int3
cs
jmp
daa
cld
cmp
pop
(bad)
inc
sub
mov
jns
aas
xchg
or
rol
pop
mov
pop
mov
jl
nop
ror
js
xchg
and
mov
and
scas
sub
ds
adc
jae
xchg
in
dec
push
push
sub
popa
mov
(bad)
and
stos
and
cmps
jno
in
or
push
retf
mov
mov
dec
int3
sub
jecxz
int
cmc
adc
(bad)
lods
leave
push
push
fnstsw
stos
loop
jle
push
loopne
dec
dec
js
lahf
iret
sti
adc
test
and
nop
aaa
in
cmp
jmp
push
adc
jmp
cmc
adc
jo
aas
sub
lods
fidiv
pop
pavgb
cmps
loop
mov
jo
pop
out
cmp
dec
call
push
pop
jbe
jmp
lods
jnp
xor
xor
jp
mov
sti
jmp
mov
mov
mov
jge
adc
mov
dec
(bad)
aam
sar
push
jecxz
and
ins
shl
add
mov
or
stos
cmp
push
ret
(bad)
xchg
cmp
pop
jo
add
cli
rol
adc
in
mov
inc
dec
push
xor
int3
push
xchg
int3
adc
stos
cmps
je
xor
cs
bound
push
int
pusha
rcl
fsub
jmp
jecxz
mov
ret
gs
lods
xor
fcompp
stos
dec
leave
mov
cmps
inc
lock
pusha
test
arpl
mov
push
fistp
xchg
stos
push
xchg
jnp
arpl
(bad)
jo
cwde
jle
jmp
jbe
sahf
out
(bad)
sbb
cmp
test
stc
xor
stc
push
sub
js
rcl
adc
mov
or
jg
das
cmp
mov
mov
test
fsubrp
adc
ret
ss
imul
pop
(bad)
adc
xor
pop
mov
sbb
adc
ror
and
js
mov
add
(bad)
sti
pop
pusha
imul
adc
add
das
dec
aaa
test
or
(bad)
dec
out
pop
adc
mov
push
sub
sub
les
in
dec
xor
push
test
mov
cwde
ds
add
repz
(bad)
xlat
add
mov
bound
in
addr16
push
in
jo
xlat
retf
fsub
lahf
pop
into
cmp
add
jbe
mov
test
ins
ins
push
mov
movs
repnz
jb
push
dec
cdq
mov
xchg
push
cmp
cmc
out
mov
inc
movs
sub
xor
and
adc
jae
inc
xchg
stos
sahf
jbe
sub
mov
and
enter
inc
loop
retf
pop
cmp
pop
push
push
xchg
jae
aam
mov
sub
push
mov
mov
jbe
jmp
cld
loop
ja
aaa
jmp
jl
push
and
xchg
out
and
xor
and
pop
xchg
dec
gs
imul
mov
xchg
data16
cmps
push
(bad)
mov
ror
inc
pop
retf
mov
call
icebp
sbb
push
movs
or
rol
into
jns
mov
ja
jno
push
or
inc
movs
cmp
ss
mov
gs
adc
inc
mov
aaa
or
pusha
fistp
cld
scas
lahf
aad
out
xchg
jne
and
ins
bound
xlat
data16
sub
call
ss
je
call
cmps
pop
shr
lods
clc
aam
and
popa
lods
call
cmp
xchg
and
push
push
mov
les
inc
bnd
xor
or
test
das
icebp
jmp
rcr
nop
repnz
arpl
retf
adc
push
mov
aad
or
test
into
sbb
pop
inc
(bad)
cli
mov
sub
sbb
jg
or
sar
dec
pusha
mov
int3
pop
xchg
loope
or
mov
cmp
inc
sti
hlt
mov
push
inc
pop
cli
pop
ins
sbb
jns
mov
xor
mov
pop
stos
les
rcl
pop
hlt
xchg
aad
sti
dec
mov
mov
sahf
adc
sbb
test
xlat
or
xchg
add
mov
repz
dec
jae
push
push
adc
adc
cmps
mov
(bad)
(bad)
in
mov
out
repnz
repnz
out
aam
out
das
jge
(bad)
lea
lds
movs
add
shr
pushf
cs
imul
pop
add
xchg
mov
std
inc
out
loope
mov
dec
xor
dec
sti
ja
test
leave
mov
cmps
jmp
adc
loopne
in
les
xchg
iret
(bad)
push
test
rcr
scas
xor
mov
jle
stos
loopne
in
add
clc
jb
or
movs
aas
jmp
add
clc
mov
lahf
aaa
fidivr
adc
int3
pop
pop
adc
dec
popf
cmp
cs
pushf
ins
mov
mov
int3
mov
aad
enter
rcr
leave
mov
xor
jae
inc
bound
sub
retf
add
cmp
xor
push
xchg
dec
xlat
sub
movs
pop
stc
(bad)
aad
out
add
push
xchg
pop
ins
movs
cmps
cs
jno
shr
mov
jbe
mov
sub
push
sbb
jb
jg
stos
inc
dec
mov
sbb
xchg
sahf
xlat
leave
xchg
mov
scas
xchg
aam
jmp
xchg
sbb
dec
cmp
mov
div
mov
rcr
pushf
mov
stos
cs
sbb
scas
fiadd
push
mul
in
xchg
add
imul
jmp
movs
push
adc
pop
gs
fcom
dec
mov
js
inc
stos
cwde
inc
push
pushf
mov
cmp
fdivr
or
xchg
addr16
test
fbstp
xlat
inc
mov
jmp
in
movs
stc
popa
ret
push
imul
stc
test
data16
gs
dec
arpl
repnz
jo
cdq
test
inc
ins
mov
sahf
call
in
pop
jmp
test
(bad)
cmp
or
sti
icebp
lock
ror
test
mov
cdq
mov
sub
push
std
mov
jb
(bad)
icebp
sbb
cmp
mov
mov
push
jmp
sbb
or
add
js
in
sub
fucomip
mov
cmp
aas
push
sbb
cmp
loope
jmp
mov
mov
sub
out
xlat
adc
mov
mov
pop
jae
scas
pop
mov
pop
adc
mov
xchg
or
push
or
sbb
xchg
xchg
sbb
js
icebp
cmp
jg
sbb
mov
mov
mov
mov
adc
pop
dec
pop
jge
inc
(bad)
push
dec
dec
and
and
push
movs
xchg
lahf
jmp
nop
mov
push
push
mov
jmp
sub
mov
cmc
inc
push
jp
mov
retf
shl
dec
mov
pop
ds
fnstsw
jmp
jo
shl
push
sbb
mov
or
cdq
mov
add
ins
mov
inc
push
cdq
cmp
xor
fwait
jecxz
adc
pop
sahf
hlt
and
xor
push
mov
dec
pop
dec
xchg
dec
sub
retf
mov
pop
pop
push
fsubr
cld
enter
pusha
dec
lea
pusha
in
lods
les
add
pop
es
xchg
sub
rol
in
mov
cmc
jns
outs
xchg
mov
push
mov
xchg
fbstp
add
shl
out
fidiv
dec
in
pop
sub
(bad)
or
je
ret
and
js
sar
bound
push
mov
or
(bad)
cwde
lahf
mov
in
lods
fcom
cmp
mov
mov
add
arpl
jae
adc
mov
shr
fwait
xor
out
stc
sbb
or
ret
int3
push
sub
test
xchg
ldmxcsr
sub
hlt
out
inc
push
sbb
movs
xchg
inc
inc
sti
mov
mov
sub
repz
and
pop
sbb
mov
add
mov
unpckhps
push
retf
jns
mov
mov
sar
fincstp
loopne
(bad)
push
or
mov
pusha
cmps
scas
mul
push
sub
lods
sbb
xchg
in
out
std
pop
out
xchg
stos
outs
jo
xchg
xor
mov
aaa
jnp
in
and
xor
(bad)
test
ins
outs
sahf
sub
fimul
fidiv
aaa
sub
pop
inc
aam
cmps
xor
dec
pop
pushf
jns
mov
dec
sub
inc
nop
fistp
ds
in
movs
cwde
fidiv
lods
xor
(bad)
mov
(bad)
stc
stos
ja
lods
mov
dec
dec
inc
inc
and
hlt
daa
jo
scas
nop
sub
push
fcmovbe
sbb
mov
ss
movups
les
sar
sbb
xchg
lods
jecxz
sub
cmp
out
(bad)
cld
push
lods
fistp
cmp
movs
inc
xchg
or
ins
stos
mov
jecxz
test
dec
pusha
sub
push
jb
fdivr
jne
aaa
das
mov
mov
out
xchg
enter
xor
xchg
mov
stos
adc
cmc
sahf
dec
loopne
jae
aam
loop
adc
call
movs
mov
mov
shr
xchg
sub
sub
cwde
mov
hlt
test
push
jns
pushf
add
mov
(bad)
out
pop
fs
fistp
pop
(bad)
xchg
pushf
xor
stc
test
stos
mov
in
xchg
outs
call
imul
test
in
arpl
int
lock
enter
adc
jae
sub
out
pop
jmp
add
lds
(bad)
sbb
mov
gs
daa
movs
mov
fwait
test
bound
cmp
lds
or
lea
mov
cld
inc
stc
aas
jns
movs
popa
fdivr
(bad)
dec
cmp
pop
push
jle
inc
out
mov
xchg
les
ins
pop
pop
sub
push
cmp
push
mov
repz
mov
mov
call
add
(bad)
fdivr
jb
fadd
mov
dec
cmps
mov
imul
lods
mov
lds
in
mov
or
mov
rol
call
bound
test
test
sub
dec
rcl
popf
add
addr16
jno
cmp
pop
cmp
fild
adc
(bad)
imul
shl
lds
push
test
test
icebp
ja
sahf
mov
loope
cmp
or
mov
retf
jbe
xchg
push
xchg
lods
mov
popf
stc
movs
jg
jbe
cmp
jmp
stos
lods
pop
add
sbb
jmp
ror
das
leave
and
sub
and
sbb
sub
push
mov
sub
sbb
inc
cld
adc
dec
mov
aad
pop
test
mov
std
pop
push
gs
rcl
adc
cmps
or
xchg
xlat
in
sbb
mov
in
retf
dec
lods
je
add
lea
movs
xchg
outs
xchg
mov
shr
jns
xchg
imul
mov
pop
clc
sti
xchg
mov
inc
repz
push
mov
out
cmp
jle
movs
jb
push
cli
push
and
inc
mov
push
cmp
data16
jp
jmp
jne
repnz
icebp
gs
mov
xchg
loope
sub
sbb
mov
push
daa
push
push
stos
(bad)
cmp
out
add
(bad)
shr
cmc
call
add
cli
movs
ss
cmp
or
sub
test
ja
xor
repz
xor
cs
dec
cmc
outs
mov
fstp
std
es
clc
rcr
mov
bound
in
(bad)
iret
inc
mov
ret
movs
pop
add
call
lock
add
pushf
add
(bad)
adc
adc
mov
adc
sbb
in
or
in
iret
jb
(bad)
retf
mov
leave
cmp
xchg
mov
leave
push
mov
dec
ffreep
stc
inc
mov
stos
popa
nop
adc
lahf
fwait
or
xor
jmp
pop
mov
adc
std
cmp
adc
cwde
add
loopne
cmp
jns
adc
or
test
inc
rcl
ret
lea
shl
jo
jmp
aas
pop
jecxz
pusha
test
and
(bad)
mov
ret
and
pusha
shl
mov
xchg
cmp
cs
pop
adc
or
and
aad
in
jg
jno
(bad)
xchg
sbb
(bad)
stos
xor
stc
xchg
mov
inc
jb
jo
xor
push
div
sbb
call
push
adc
or
out
xchg
ror
adc
jo
sbb
dec
ins
lock
push
or
lods
imul
pushf
mov
rcl
sub
add
xor
jp
mov
jecxz
ins
adc
(bad)
dec
or
inc
int
dec
mov
test
lods
mov
cmp
sub
dec
xor
enter
xchg
das
cld
pop
sbb
gs
push
loop
mov
mov
inc
aad
and
shr
mov
pop
and
xchg
cmp
mov
xor
fidiv
jmp
into
push
ins
push
ficom
push
and
out
inc
xor
in
shl
dec
adc
adc
pop
stc
sub
in
jecxz
adc
call
jns
fsubr
adc
mov
rcr
mov
sub
mov
int
add
outs
mov
in
sbb
retf
fwait
pop
cdq
mov
dec
test
mov
(bad)
mov
inc
mov
icebp
(bad)
push
scas
and
movs
imul
ret
jne
dec
sub
xchg
or
enter
dec
inc
ss
dec
fidiv
cmp
xchg
js
cwde
adc
pop
inc
lock
push
call
jbe
test
push
das
je
rol
jl
scas
mov
push
aas
mov
into
xor
cmc
lahf
dec
ds
enter
popf
out
rol
daa
aas
repz
push
cmps
sbb
xor
mov
push
cmp
icebp
push
jno
inc
(bad)
imul
mov
dec
test
scas
clc
scas
xor
out
dec
sub
mov
out
cmps
int3
gs
sar
push
stos
inc
fadd
fild
push
outs
xchg
adc
mov
jp
and
mov
test
mov
mov
call
adc
mov
(bad)
lds
xor
mov
dec
mov
adc
daa
subps
jg
ret
mov
sahf
cmp
retf
nop
jmp
cld
add
mov
es
push
addr16
das
cmp
out
jno
cmps
lods
aas
imul
push
pop
xchg
dec
cli
jmp
or
jge
call
xor
(bad)
push
xlat
mov
shr
mov
ins
jae
push
mov
ret
loope
in
ins
out
ss
and
les
(bad)
in
daa
(bad)
loop
jo
push
cli
jns
fldcw
jg
retf
outs
jmp
lods
sub
sub
popf
sub
push
and
jne
fwait
je
shr
(bad)
mov
mov
cwde
clc
(bad)
ins
mov
xor
popa
jp
stos
mov
dec
mov
jae
es
push
pop
jo
pop
aad
adc
cmp
ins
fbstp
lods
iret
inc
cli
sbb
sbb
xor
lea
ins
dec
cli
es
cdq
stc
mov
or
in
std
(bad)
sbb
mov
xchg
sub
fisttp
arpl
pop
scas
enter
cmps
xor
gs
push
addr16
and
inc
mov
pusha
jns
xchg
adc
loop
out
(bad)
sbb
nop
scas
je
and
and
cmp
das
adc
imul
clc
mov
jg
jle
push
cmp
repz
vpsrld
iret
dec
pop
inc
bnd
scas
inc
adc
inc
push
repz
out
xchg
je
cli
or
cs
xchg
add
imul
dec
pop
sbb
rcr
xor
sub
push
ja
shr
cmp
or
mov
fadd
ins
leave
sub
jg
lock
sbb
dec
lea
(bad)
je
not
inc
out
push
jmp
and
xchg
in
(bad)
fmul
or
rol
dec
xor
aaa
xchg
dec
cmp
movs
pop
sbb
gs
in
pop
mov
xchg
jb
jb
adc
popa
movs
sbb
jmp
and
jne
jnp
or
mov
cmc
mov
dec
rcl
test
pop
mov
pop
push
popf
mov
or
dec
and
in
(bad)
cmc
ins
sbb
neg
shrd
mov
mov
push
jg
xlat
sub
fbld
cmp
jno
mov
adc
arpl
cmp
cli
pop
push
iret
test
aam
sub
mov
mov
call
or
push
cmps
retf
xor
pop
ja
and
cli
pop
mov
jae
mov
dec
pop
pop
into
mov
mov
clc
gs
or
sbb
mov
ja
(bad)
(bad)
icebp
push
jo
and
push
add
cmps
jmp
or
dec
cwde
or
inc
inc
mov
lods
mov
(bad)
pusha
pop
adc
daa
adc
push
push
and
data16
mov
pop
(bad)
clc
inc
xchg
out
push
ror
dec
xor
dec
sti
or
retf
shr
repz
or
je
cld
mov
dec
mov
and
push
les
jmp
xchg
js
push
push
push
out
push
adc
push
(bad)
(bad)
cwde
mov
aad
(bad)
div
xchg
pop
inc
data16
repnz
or
js
lock
cmp
xchg
ja
je
call
pop
xchg
and
mov
ins
aas
stc
enter
test
retf
outs
(bad)
shl
movs
push
sahf
loopne
dec
adc
and
dec
arpl
xchg
sbb
sub
xchg
jecxz
jg
xor
xchg
arpl
pop
movs
aaa
ret
aam
test
adc
xchg
sub
jge
mov
sbb
das
(bad)
mul
int3
sub
retf
mov
outs
lods
movs
sub
mov
or
loope
adc
jns
pop
loopne
fisubr
or
ss
stos
call
jne
and
imul
push
mov
loope
mov
(bad)
aaa
dec
mov
dec
mov
cmp
out
jno
mov
push
inc
aas
cwde
adc
lahf
outs
add
mov
nop
push
retf
sbb
pop
mov
xor
leave
out
push
dec
mov
repnz
call
xchg
xor
sbb
pushf
jnp
pop
sub
xor
mov
js
rol
fadd
sbb
and
mov
sbb
xchg
enter
xchg
push
rol
ds
(bad)
xchg
mov
das
dec
fisttp
or
xor
lods
mov
fist
jmp
outs
mov
and
and
add
(bad)
in
mov
bnd
ret
and
adc
push
out
in
xchg
inc
sbb
mov
or
stos
jge
rcl
addr16
sbb
bound
pop
fdivr
ins
dec
mov
adc
sub
fistp
dec
outs
call
(bad)
lods
and
sbb
leave
cwde
jae
(bad)
sub
cmp
xchg
rcr
lods
inc
test
cmp
loopne
out
(bad)
xor
inc
mov
jae
xchg
imul
sahf
push
xor
jg
and
fsubr
sub
or
scas
shl
leave
jbe
xchg
out
bound
or
mov
daa
ret
cs
pop
out
in
xchg
jnp
sub
or
js
mov
mov
or
pop
and
pop
js
adc
sbb
pusha
xchg
push
ret
jns
mov
fwait
and
mov
(bad)
and
rcl
lods
ror
das
out
pop
cmps
jns
xor
xchg
jmp
inc
inc
(bad)
pop
pushf
pusha
mov
sub
adc
dec
cmc
xchg
nop
push
or
into
mov
icebp
jbe
in
mov
ss
pop
adc
les
mov
out
pushf
aaa
mov
sbb
jge
adc
xchg
mov
jg
mov
out
and
pop
add
dec
push
addr16
call
(bad)
xor
jmp
call
ss
dec
stos
data16
jb
inc
sub
dec
rol
pop
lods
repz
jne
call
mov
and
(bad)
out
rcl
out
adc
loop
ja
xlat
neg
neg
in
mov
fucomp
in
fadd
inc
pushf
xchg
ja
test
outs
mov
out
add
cmp
inc
mov
rcl
js
(bad)
mov
mov
jmp
and
call
adc
mov
les
add
test
fimul
push
sbb
ret
xchg
or
push
xor
cmp
es
push
and
inc
xlat
pop
mov
xchg
sub
pop
xchg
push
cmps
push
jne
mov
cdq
shr
cmp
jmp
and
imul
stc
ret
jno
mov
mov
(bad)
stos
sbb
xchg
addr16
scas
add
push
ins
mov
ins
mov
daa
sbb
xchg
(bad)
push
int
add
adc
ficomp
inc
mov
inc
outs
jo
adc
adc
mov
dec
mov
xor
nop
mov
pop
stos
push
mov
add
and
loope
fstp
dec
sub
sbb
fist
fcmovnu
(bad)
pop
push
inc
in
cmps
inc
mov
dec
mov
pop
or
in
test
in
test
stc
fs
imul
fucom
retf
aam
inc
mov
mov
arpl
adc
enter
inc
mov
add
xor
mov
and
cmp
jmp
sahf
add
pop
xchg
call
sub
out
xlat
adc
stos
loopne
cwde
retf
xchg
sub
(bad)
retf
call
stos
and
pop
or
xchg
popa
rol
fcom
inc
mov
sbb
mov
adc
mov
mov
push
pmulhw
mov
retf
adc
cmp
das
jmp
inc
out
ds
outs
clc
mov
das
scas
repnz
jge
stos
adc
lock
xor
cmp
ds
and
dec
pop
mov
(bad)
fsubrp
stc
cmc
mov
js
(bad)
retf
cmps
mov
dec
adc
cli
or
int
dec
imul
arpl
cdq
mov
pop
(bad)
lds
sub
jo
cmc
in
mov
sahf
add
adc
int
nop
stos
push
and
sahf
les
inc
xchg
popf
call
pop
loop
ins
sbb
or
pop
adc
rol
mov
fstp
int
or
js
sbb
pop
fcmovnu
pop
out
mov
pop
xchg
movs
xor
sub
repz
mov
rcl
hlt
ins
fist
pusha
fdivr
hlt
lahf
es
inc
lock
cmps
imul
mov
rol
adc
fbld
cmp
mov
sub
imul
ficomp
cld
push
inc
adc
dec
pop
jmp
jge
jp
ds
dec
aam
adc
mov
test
enter
pop
test
call
and
loop
xor
test
pop
enter
dec
dec
inc
jp
xchg
mov
xor
ins
mov
cmps
add
xor
dec
mov
xlat
push
imul
cmp
(bad)
pop
xor
inc
xor
scas
aaa
add
jmp
sbb
pop
daa
sbb
xchg
cmp
(bad)
scas
outs
mov
add
ja
gs
and
push
test
sbb
and
cmp
lock
bound
popa
and
or
jbe
mov
cmp
in
mov
lea
mov
jmp
adc
dec
push
fistp
or
cwde
cmp
in
retf
pop
retf
int3
daa
mov
pusha
cmp
sbb
ficom
test
ins
mov
and
scas
push
sar
movs
cmp
jne
fmul
push
mov
mov
sbb
dec
test
xchg
mov
fs
shl
mov
(bad)
mov
fsub
lds
mov
xor
inc
xchg
daa
mov
mov
ret
xchg
cmp
mov
test
inc
scas
mov
xchg
pop
mov
arpl
in
or
or
test
mov
gs
shl
pop
pop
fsubr
jg
int
lock
sbb
push
out
pop
je
mov
ret
shr
cdq
mov
xchg
popf
mov
or
popf
call
stc
xchg
push
ror
cmp
inc
icebp
mov
jge
push
out
outs
call
and
push
outs
mov
sbb
movs
inc
sbb
xor
add
mov
sbb
(bad)
mov
adc
xchg
sar
dec
out
sub
or
inc
cmp
mov
iret
les
adc
test
arpl
dec
sub
shl
fnstcw
add
cmp
in
rcl
xor
push
inc
nop
inc
cdq
xor
(bad)
xor
xor
or
out
movs
cmp
dec
add
add
inc
xor
mov
(bad)
push
cdq
cmp
(bad)
test
or
mov
addr16
test
adc
cmps
je
adc
ret
rcl
cmp
into
sbb
(bad)
leave
addr16
adc
out
aad
loope
cmps
loope
fmul
imul
je
(bad)
imul
cmps
cli
retf
dec
push
cmp
push
push
jmp
pop
mov
adc
(bad)
pop
inc
inc
cld
add
mov
fld
mov
retf
adc
sbb
js
cmp
retf
or
lahf
xchg
jnp
xchg
out
lds
daa
xchg
inc
or
cmps
std
popa
js
aad
or
adc
shl
or
bound
es
push
add
cli
dec
stos
lock
jno
aas
or
loope
sub
dec
xchg
pop
jae
xchg
scas
hlt
retf
adc
lock
jmp
xor
jmp
(bad)
push
jnp
xor
push
addr16
pop
outs
fst
in
and
aad
or
mov
clc
sahf
xchg
mov
xor
dec
nop
xor
int3
icebp
ja
daa
add
test
out
ins
jmp
je
xchg
pop
pop
push
cmc
lea
adc
add
(bad)
ss
hlt
pop
test
cmp
ins
adc
jnp
xor
or
ficom
loop
jl
jl
cmp
or
pop
dec
mov
aaa
push
call
xor
jae
xor
jg
xor
jno
fisubr
cmp
xor
or
stc
ins
jge
out
leave
mov
popa
mov
imul
pop
xor
shl
jl
sub
stos
sub
dec
outs
movs
arpl
pop
in
imul
pop
sbb
xchg
std
pop
call
adc
xchg
ss
movs
sbb
jbe
pushf
aas
inc
cmp
mov
mov
cmp
ins
push
and
pop
jmp
mov
sub
stc
(bad)
adc
repz
add
jmp
lahf
mov
jp
call
jmp
xchg
push
adc
jmp
lock
popf
fcomp
daa
lock
(bad)
dec
and
jmp
ins
call
push
je
adc
outs
jbe
jno
mov
cmps
movs
xchg
dec
popf
and
xchg
xor
inc
mov
adc
(bad)
hlt
cs
sahf
add
inc
jp
pop
push
add
(bad)
imul
out
jge
dec
arpl
inc
enter
popa
fcmovnb
gs
dec
xor
add
sub
out
stos
inc
mov
rcr
sbb
cmp
sbb
xor
ja
call
jbe
sar
inc
inc
inc
add
call
adc
mov
sub
(bad)
(bad)
ds
or
jb
inc
loope
leave
aas
loopne
or
mov
pop
mov
jecxz
jg
std
not
mov
mov
dec
jp
adc
and
je
stos
ja
dec
push
sbb
pop
push
test
sbb
icebp
xchg
shl
cmp
rcl
call
in
ret
push
jns
mov
or
cli
addr16
xchg
pop
scas
jmp
fisubr
adc
(bad)
repnz
sqrtps
sbb
sbb
les
lea
in
cmc
in
push
mov
push
icebp
inc
add
xor
aaa
mov
or
jo
and
push
fs
sahf
(bad)
out
fwait
test
mov
and
outs
sub
repz
dec
sbb
inc
and
jmp
jmp
xor
stos
cmp
jl
mov
push
jmp
xchg
in
rcr
push
gs
inc
mov
mov
inc
cld
mov
cli
jmp
push
push
push
jo
arpl
js
mov
mov
mov
add
js
(bad)
or
mov
add
inc
adc
clc
pop
mov
enter
iret
xchg
jns
(bad)
push
out
(bad)
jbe
or
stc
scas
jmp
cs
pop
push
daa
xor
aaa
rcl
adc
or
(bad)
inc
imul
rcr
add
in
pop
cs
outs
addr16
jo
int3
xor
sahf
ds
sbb
lock
sub
gs
inc
add
add
mov
(bad)
rcr
mov
(bad)
pusha
push
and
repz
cs
fistp
fs
dec
leave
jmp
xor
jb
jne
jns
fnstsw
ficom
inc
inc
push
outs
or
cmp
sbb
push
add
out
arpl
xchg
jo
cmps
sti
loope
lods
jbe
pop
(bad)
sub
enter
out
into
push
cmp
cmps
pop
push
pop
mov
repz
stc
jne
aas
int3
xor
lock
lods
or
pop
jnp
adc
xor
xlat
push
dec
cmp
int3
fs
fwait
jb
mov
add
popf
mov
ins
cmps
sbb
scas
cmp
push
pop
test
pop
mov
lea
xchg
inc
dec
pop
out
hlt
dec
repnz
push
stos
retf
cld
nop
dec
push
mov
loopne
movs
ss
sbb
retf
cwde
adc
xlat
pop
xchg
push
(bad)
stc
ins
add
popa
push
mov
aas
push
mov
sbb
imul
xchg
jmp
xchg
or
mov
ins
js
push
rcr
sar
ret
adc
jp
into
cwde
fs
scas
xchg
mov
scas
std
mov
int
lea
pop
pop
sub
xchg
ins
fbstp
add
(bad)
fwait
xor
jmp
imul
jmp
das
or
push
aas
cs
sbb
jge
mov
jle
lds
sbb
icebp
sub
sti
loope
add
add
sub
sbb
cmps
dec
sub
xchg
mov
outs
cli
call
jo
nop
retf
jae
jns
stos
add
loopne
add
pop
inc
popa
xchg
adc
push
ret
sahf
mov
xchg
xchg
sahf
dec
nop
xchg
and
imul
add
inc
cmps
xor
sub
mov
in
in
push
pusha
es
fcomp
mov
xor
mov
mov
sub
or
iret
rol
sbb
pop
jne
dec
sbb
jmp
jp
cmp
xor
dec
and
xor
xor
mov
ror
icebp
xor
push
xor
test
sub
jno
retf
push
pop
xchg
xchg
sahf
sub
enter
fnstcw
ins
bound
pop
aam
fadd
shr
rol
retf
loope
jns
cmc
mov
cwde
(bad)
sbb
adc
test
call
dec
cmp
outs
xor
dec
mov
push
inc
pushf
fistp
movs
in
jmp
aaa
push
push
fisttp
cmp
sbb
cmp
dec
pushf
xchg
mov
mov
scas
in
adc
popf
fsubr
ss
movs
jns
mov
imul
pop
xchg
jno
test
sar
sub
rol
jp
adc
shl
ficomp
pushf
das
loope
test
mov
xchg
pop
and
and
enter
xchg
test
mov
xchg
(bad)
mov
sti
mov
xchg
jne
cwde
mov
int
mov
(bad)
xchg
push
push
bts
pop
mov
push
ja
and
jle
mov
in
(bad)
ror
cdq
outs
and
fnstcw
cs
hlt
mov
out
jl
call
pusha
lods
dec
pop
sahf
inc
cmp
or
push
mov
clc
and
scas
pop
das
test
cmp
in
add
mov
(bad)
xor
pop
jle
mov
push
ss
fsub
jno
cmp
xor
es
in
inc
inc
mov
nop
test
cmp
mov
fmul
mov
inc
js
retf
or
lods
data16
fldcw
add
cs
xchg
fisubr
fs
dec
xor
pop
jg
rol
push
adc
add
std
jl
dec
add
fistp
dec
jo
pop
pop
adc
xchg
push
addr16
adc
jg
dec
fldenv
or
mov
ficom
xchg
out
imul
ja
and
and
adc
cmp
sub
movs
cmp
outs
jnp
mov
xchg
repz
mov
xor
add
xchg
popf
rcl
nop
dec
sub
sub
push
mov
movs
cmp
cmp
pop
popa
push
jl
push
iret
push
out
retf
fwait
lods
cmps
shl
jp
mov
repnz
inc
sti
std
in
sbb
out
aam
iret
jmp
add
imul
movs
and
push
leave
outs
dec
push
retf
pop
jns
stos
pop
fbstp
and
xchg
xor
cmp
test
js
dec
dec
ret
jmp
push
push
leave
call
mov
add
lods
and
add
and
je
mov
and
imul
mov
add
loopne
xor
out
mov
loopne
jecxz
mov
adc
mov
xchg
(bad)
sbb
test
enter
into
dec
xor
mov
push
jp
xchg
data16
test
xchg
or
jno
push
or
out
les
cld
(bad)
xchg
imul
sub
push
fcomi
cmp
mov
outs
mov
xchg
imul
int
mov
or
aas
or
daa
mov
loope
(bad)
cld
mov
out
not
or
mov
sbb
adc
les
call
ror
pop
jbe
fbld
lods
outs
sahf
jl
lahf
push
cmp
push
loopne
cdq
mov
arpl
jle
test
out
ret
fdivr
(bad)
jmp
lahf
cmp
outs
xor
adc
scas
xchg
cdq
cmp
sub
pop
push
xor
rcl
sti
lock
pop
xchg
pop
in
add
or
add
sub
mov
aas
aad
es
and
add
mov
leave
je
mov
jnp
or
dec
xchg
int
ss
push
xor
(bad)
call
or
xchg
adc
or
dec
repz
fistp
mov
xchg
sbb
mov
or
cmp
cli
sub
out
sbb
push
int3
aaa
pop
cmps
fdivr
lods
or
push
adc
repz
aaa
jns
push
cmp
pushf
ucomiss
and
(bad)
or
repz
add
inc
retf
cs
sbb
mov
dec
(bad)
aaa
add
ins
inc
xor
xor
out
mov
pushf
lahf
add
inc
(bad)
push
js
aaa
mov
sbb
mov
jmp
and
lods
sti
push
or
sub
inc
rcl
lock
jp
popa
fcomip
das
mov
inc
sbb
and
xchg
loope
xor
aad
mov
xor
mov
cmp
ret
scas
pop
enter
stc
shr
or
pop
mov
jbe
cmp
ss
loop
adc
and
clc
cmps
lock
add
(bad)
pop
push
or
mov
fistp
jle
xchg
cwde
push
dec
sti
in
test
or
push
leave
xchg
jle
and
ins
pushf
sbb
push
push
sub
repnz
sbb
cmps
jno
cmp
jno
(bad)
into
test
outs
into
rcl
test
fld
rcl
retf
loopne
in
adc
pop
movs
call
cmps
jle
jge
pop
leave
out
cmc
mov
test
in
dec
pop
ror
xor
fwait
mov
cmps
push
int3
adc
add
and
pushf
add
inc
jno
daa
dec
mov
mov
push
push
pop
cmp
stc
xchg
mov
jp
cli
mov
xor
sbb
xlat
lock
hlt
sahf
je
pop
shl
jge
jne
in
js
push
xor
fs
jg
cdq
popf
(bad)
jnp
test
cdq
popf
pop
mov
mov
(bad)
xchg
pop
or
ds
(bad)
and
sbb
add
xchg
push
push
das
or
outs
add
inc
mov
xchg
icebp
inc
cwde
dec
imul
call
outs
xor
fst
rcr
jmp
and
pop
in
mov
xor
sub
fs
sub
xor
aas
dec
sbb
ins
and
cs
xor
adc
cli
arpl
ret
leave
js
cmp
xchg
dec
das
mov
mov
add
and
jo
test
or
pusha
mov
(bad)
in
in
leave
jmp
pop
push
pop
mov
cmp
or
adc
(bad)
pop
test
std
mov
and
std
cmps
add
and
xchg
dec
ins
scas
inc
mov
fstp
xor
int3
imul
jle
(bad)
and
icebp
jmp
pop
(bad)
enter
aas
mov
mov
stos
jne
inc
retf
in
loopne
iret
icebp
inc
add
jo
je
fs
cmp
xor
adc
mov
push
pop
cmp
sar
(bad)
in
and
stos
or
jle
call
retf
and
add
and
inc
cmps
int3
pop
jns
leave
hlt
loope
jl
xor
sub
xchg
inc
shl
push
mov
mov
sbb
ficom
std
pop
cmp
sbb
sbb
sub
and
xchg
or
cmps
jae
dec
xchg
push
cmp
test
mov
pop
test
clc
xchg
and
mov
jp
cmps
(bad)
sub
das
stos
stos
int3
mov
dec
mov
in
cwde
movs
pop
pop
repz
add
adc
mov
push
iret
pop
leave
inc
lock
adc
arpl
pop
sbb
xor
shl
inc
pop
pushf
mov
test
add
imul
scas
mov
loopne
sbb
inc
(bad)
outs
test
pop
push
lea
es
push
addr16
in
fisttp
jle
(bad)
mov
push
dec
mov
mov
and
retf
push
xchg
jle
mov
out
dec
xlat
addr16
loop
int3
inc
into
dec
inc
and
ficomp
ror
out
imul
iret
arpl
sbb
outs
ins
push
dec
leave
xchg
in
cmp
ds
and
scas
shl
shl
(bad)
in
dec
xlat
xor
aas
pop
add
and
inc
jecxz
in
js
ins
cmp
add
and
xchg
mov
xchg
dec
or
cwde
js
mov
xlat
sti
fwait
xchg
mov
ret
inc
cmp
mov
test
sub
pop
sahf
enter
sbb
mov
fidivr
test
inc
xchg
out
pop
out
lahf
inc
icebp
pop
loop
mov
mov
cwde
icebp
cmp
xor
cmp
and
test
push
test
sar
arpl
sbb
loop
xchg
retf
ret
inc
jmp
ins
outs
stos
repnz
fidivr
mov
out
cs
jl
gs
and
ss
add
or
fisttp
and
mov
mov
mov
mov
jbe
adc
add
fidiv
mov
stos
fisubr
in
das
in
int3
je
pop
bound
scas
add
enter
lea
sbb
out
lods
and
js
pop
pop
jmp
loope
jb
test
pop
xor
nop
push
xor
call
xchg
arpl
out
fs
mov
sbb
dec
pushw
in
js
movs
pop
jecxz
push
loopne
push
leave
iret
sar
xchg
and
cmps
sti
mov
mov
(bad)
shr
outs
daa
cld
dec
inc
icebp
(bad)
push
lahf
dec
mov
and
push
xchg
xor
and
lahf
imul
es
cmc
adc
push
enter
xor
bound
xlat
int
pop
pop
icebp
dec
adc
jnp
sbb
mov
outs
inc
ret
les
ret
test
loope
pop
jnp
mov
mov
arpl
adc
or
push
loope
out
and
xor
xchg
pop
pop
jo
aam
mov
inc
cmc
das
pop
ret
sti
cli
enter
ficom
jg
int
or
mov
mov
xor
adc
sar
(bad)
jp
cmp
jnp
adc
gs
or
call
imul
sub
and
sbb
mov
inc
or
xlat
xor
shl
cmp
dec
pop
adc
pushf
xor
sbb
jmp
sbb
mov
test
sbb
jg
xlat
cmps
mov
test
add
adc
mov
(bad)
and
test
sub
pop
retf
dec
iret
mov
lahf
or
retf
pop
jle
xchg
int3
in
push
push
jnp
xor
push
or
sub
fistp
or
or
xor
mov
push
out
hlt
out
xor
and
sbb
pop
cmp
cld
bound
test
loop
cmps
(bad)
pop
mov
test
jle
call
pop
test
or
retf
or
jno
xchg
loop
xor
stos
cmc
pop
sub
mov
test
cmp
push
loopne
add
dec
mov
fisttp
ins
adc
popa
or
(bad)
jno
(bad)
in
adc
or
inc
fiadd
mov
sbb
push
cmp
cmps
mov
test
xchg
ins
popa
pop
ss
mul
mov
outs
adc
xor
dec
call
in
and
mov
mov
lock
cmp
jp
and
xor
lock
sub
jg
test
popf
adc
push
xor
(bad)
cmc
sti
and
fidiv
out
jg
mov
mov
dec
jne
outs
and
or
xchg
fwait
push
xchg
pop
mov
lods
cmp
mov
imul
pop
cmps
or
ins
out
jae
push
cmp
(bad)
pop
movs
cmp
in
es
sub
stc
adc
push
ds
or
adc
inc
jno
mov
cld
repz
cwde
sbb
xchg
ds
aaa
sbb
adc
xor
pop
hlt
fsub
push
leave
call
mov
mov
fucomp
rcr
movs
test
mov
push
stos
outs
dec
pop
mov
repnz
or
inc
pop
cmps
cmp
daa
addr16
popf
fwait
and
push
(bad)
mov
sahf
xchg
mov
and
pushf
mov
add
or
adc
mov
mov
int3
add
adc
mov
les
jno
jl
shr
cmps
mov
rcr
inc
xchg
cdq
lods
stos
add
out
dec
imul
es
add
inc
ds
test
push
imul
lds
mov
retf
and
rcl
int
jl
xchg
adc
shl
sbb
lods
mov
popa
xlat
and
jae
lods
lock
mov
inc
xchg
jne
xchg
push
jns
inc
push
out
sahf
lds
mov
mov
out
mov
in
aam
ror
pop
lods
test
fld
lahf
pop
fwait
daa
cwde
and
push
test
fsubr
and
cmp
cmc
adc
or
call
jmp
mov
or
in
lds
call
mov
lahf
leave
or
jbe
jns
xchg
aad
cmp
add
cld
fwait
or
push
pop
sar
pop
jl
ret
ja
fst
in
nop
scas
popf
mov
fiadd
pusha
mov
dec
out
out
and
adc
ffree
xchg
push
int3
add
loope
mov
in
xchg
xchg
or
inc
mov
sahf
jl
jp
jbe
lahf
mov
mov
push
fninit
jo
xlat
enter
mov
shl
mov
out
pop
stos
sbb
inc
mov
aad
and
pop
repnz
cmc
ins
jecxz
jns
pop
adc
jnp
aaa
xor
or
mov
and
and
mov
in
cmp
jo
call
mov
rcr
xor
int3
cmp
adc
aam
(bad)
inc
adc
xor
mov
or
mov
mov
fcmove
mov
pop
out
fwait
and
nop
mov
push
jge
jae
xchg
xchg
and
adc
push
or
rol
hlt
jnp
xchg
xor
push
mov
mov
mov
mov
hlt
sahf
jmp
dec
dec
jbe
cmp
por
ficom
in
push
inc
pop
mov
mov
aaa
adc
test
pusha
sbb
retf
leave
ss
mov
cmp
dec
mov
xor
mov
push
in
dec
push
cmp
sub
jns
jmp
xor
xchg
xor
mov
push
les
neg
push
adc
(bad)
std
scas
bound
dec
pushf
push
lock
rol
stos
cmp
jecxz
mov
pop
mov
cs
sub
fsubr
stos
(bad)
sub
jae
not
jns
sub
cld
(bad)
or
movs
mov
mov
hlt
cld
cmp
inc
pop
mov
cmp
xor
arpl
jbe
xor
daa
es
ja
lods
and
push
adc
sub
dec
jbe
push
add
stos
outs
sbb
pop
test
jmp
stos
and
je
pop
dec
test
push
bound
cmp
je
mov
ss
(bad)
sub
fisubr
fs
loopne
jge
inc
xor
div
loope
mov
mov
push
jecxz
add
pop
push
adc
retf
cmc
std
jg
stos
push
loop
pop
xor
sub
and
jb
test
movs
xchg
outs
imul
int3
and
outs
adc
sar
sbb
cdq
rcl
movs
sub
daa
jg
add
mov
fisttp
mov
sub
mov
mov
iret
xlat
xor
enter
adc
leave
idiv
movs
sbb
mov
inc
xchg
sbb
or
pop
cwde
ds
sbb
lahf
out
push
add
neg
icebp
pop
inc
fdivr
mov
loopne
stos
mov
out
rcl
repz
xlat
in
mov
lock
pop
push
retf
adc
(bad)
cmc
xor
push
or
add
bound
mov
xor
call
(bad)
pop
fwait
(bad)
jae
mov
inc
push
call
dec
int3
loop
arpl
adc
mov
push
sbb
push
aam
mov
je
or
mov
dec
adc
sti
and
cmp
jno
shr
popa
in
mov
dec
jl
repnz
popa
mov
(bad)
sub
jb
mov
jns
movs
jno
je
mov
jae
scas
inc
jge
ja
call
jg
rcr
lds
iret
xor
mov
retf
add
xor
sbb
mov
ss
ja
sub
or
(bad)
adc
outs
xor
icebp
mov
inc
shl
push
xchg
stos
iret
sub
dec
or
add
fldcw
loop
out
push
sub
and
sbb
sub
int3
adc
cmp
sub
mov
js
sti
(bad)
addr16
pop
pop
call
add
ret
cmps
repnz
adc
in
sbb
lea
test
pop
movs
hlt
int3
jmp
in
aad
cmp
jg
test
jmp
xchg
leave
imul
mov
(bad)
lds
scas
nop
call
jno
mul
cmp
jmp
xchg
pop
popf
sahf
je
cmps
lods
or
sbb
dec
inc
pushf
fld
xor
out
fstp
out
aaa
pop
add
xchg
js
push
add
xchg
jmp
call
jmp
push
mov
inc
sahf
jmp
dec
scas
std
jae
push
and
mov
adc
add
les
and
xchg
mov
ret
mov
enter
adc
push
inc
cmps
fdiv
mov
jmp
cmp
inc
sub
into
dec
in
out
inc
mov
and
cmp
retf
push
jecxz
imul
cmp
pop
push
cld
pop
jmp
adc
jl
and
or
jb
cmp
pushf
lea
mov
imul
addr16
jnp
mov
gs
scas
cmp
arpl
test
mov
pop
sbb
fisttp
rol
sbb
dec
mov
sbb
int3
rcl
mov
xlat
(bad)
jne
xchg
jb
out
adc
dec
adc
pop
sahf
sub
jp
aas
mov
jno
mov
cmp
test
adc
pop
dec
movs
jnp
xchg
fs
lods
mov
int3
push
push
mov
leave
inc
bound
jg
ss
lods
dec
pushf
test
pushf
das
shr
dec
jno
outs
mov
sub
scas
fist
fild
lahf
imul
stos
mov
sar
fdiv
retf
outs
cmp
xor
push
push
cli
enter
ficom
out
stos
sbb
and
into
xor
addr16
add
les
mov
stos
xor
dec
cli
mov
div
vmread
repz
(bad)
adc
popa
and
jnp
mov
xor
ja
inc
fidiv
jnp
call
push
push
into
xchg
dec
aaa
inc
imul
rcl
fisttp
movs
cmp
fcomp
mov
js
sbb
mov
lods
mov
in
int
bound
adc
jge
test
pop
inc
lock
cmps
mov
mov
push
adc
je
cmc
cwde
in
xchg
fdivr
jbe
add
push
dec
adc
and
pop
adc
sbb
xchg
(bad)
scas
mov
add
cmps
int
outs
xor
(bad)
hlt
loope
or
pop
dec
add
(bad)
cmc
cmps
adc
js
cmp
ss
and
test
mov
lea
mov
lds
xchg
int3
xor
std
add
rol
loopne
test
loope
mov
xlat
pop
mov
add
repz
fistp
mov
xor
retf
xor
test
jae
adc
inc
dec
daa
rcl
shl
iret
movs
xlat
inc
fwait
in
adc
lods
fisttp
pop
sub
dec
pop
fild
pop
aad
cmps
cwde
(bad)
and
inc
xor
xor
stc
cmps
and
jl
mov
mov
pop
xchg
fdiv
sub
adc
xlat
pushf
clc
aad
xchg
shl
test
jne
out
pop
cmp
adc
dec
cmps
(bad)
fstp
fmul
adc
test
add
ins
cmps
mov
aad
jnp
add
(bad)
cwde
sub
push
inc
sbb
jmp
test
(bad)
cmp
and
mov
mov
das
cmc
lods
fimul
shrd
jno
and
dec
mov
push
ret
imul
dec
cwde
cmp
ret
out
cmps
fcmovnb
push
popa
pop
hlt
pop
popf
ret
jecxz
dec
lahf
shl
retf
mov
out
mov
sti
rol
(bad)
rol
cli
nop
rcl
scas
js
mov
test
add
jecxz
adc
sbb
cmps
mov
jp
jl
pop
test
xor
lods
dec
mov
ss
shr
xor
adc
rcr
inc
adc
div
andnps
adc
and
out
mov
xchg
icebp
mov
xor
pop
jae
jl
sub
fist
(bad)
sub
mov
adc
adc
push
push
pop
outs
rol
out
ds
cmp
push
dec
inc
push
dec
out
leave
in
mov
arpl
aas
dec
dec
mov
pushf
mul
outs
mov
stos
push
or
or
fmul
shl
lea
xchg
inc
xlat
das
test
and
test
sbb
sbb
in
jl
pop
movs
xchg
call
mov
adc
mov
retf
scas
adc
sub
and
dec
xor
mov
cmp
push
out
xchg
lahf
or
xchg
stos
push
imul
out
cli
or
ror
mov
adc
jnp
xchg
stos
xchg
sbb
mov
in
xlat
data16
out
adc
data16
inc
fisttp
mov
cmp
push
push
mov
les
test
mov
and
loope
sar
rcl
rcl
outs
test
or
adc
movs
sbb
mov
fs
call
retf
test
xor
inc
and
rcr
dec
cwde
dec
pop
aam
jbe
and
pop
push
scas
inc
cli
ret
pop
repz
outs
sub
ss
xchg
leave
in
pop
int3
xchg
call
inc
mov
push
mov
std
push
cdq
cmp
(bad)
(bad)
sar
sub
lods
cmp
push
pop
mov
int
imul
sbb
or
or
mov
sti
jg
rcl
leave
(bad)
sbb
pushf
sub
and
aaa
xchg
jg
sbb
mov
mov
mov
mov
mov
loope
leave
cs
push
icebp
das
mov
ret
test
xchg
mov
cmc
fsubr
push
lahf
mov
and
mov
add
jecxz
imul
sub
ins
sbb
cdq
inc
mov
test
mov
mov
xchg
pop
mov
xchg
mov
cld
repnz
add
in
in
inc
jno
outs
div
fwait
cs
jnp
repz
fld
inc
cmp
popf
pop
iret
mov
push
imul
nop
sbb
cmp
mov
gs
dec
inc
xor
fwait
sbb
jbe
cmp
pop
lock
add
add
jp
dec
cmc
sbb
(bad)
rol
xchg
lahf
(bad)
lahf
lods
inc
cmp
or
lds
and
retfw
movs
lds
sbb
or
sbb
mov
jecxz
das
scas
jl
mov
iret
mov
fmul
jo
dec
cmp
int
adc
fnstsw
cmp
test
jmp
sbb
cmp
ror
xchg
je
je
adc
and
sar
jge
daa
stos
out
rcl
push
fcom
out
cmc
push
push
je
loopne
mov
pop
cmp
leave
xchg
sbb
push
outs
(bad)
mov
test
movs
jmp
inc
jl
mov
test
shl
lock
das
jne
push
jo
rol
mul
fmul
jo
dec
(bad)
mov
test
fsub
in
mov
mov
xchg
sub
mov
adc
sub
fld
arpl
jns
dec
mov
sbb
pop
into
dec
ins
cmp
es
lods
jnp
push
fmul
mov
sub
bswap
(bad)
arpl
inc
jl
add
in
repnz
push
sar
outs
arpl
jg
fild
mov
sbb
xchg
je
pop
sub
and
addr16
dec
pop
pop
jnp
hlt
aam
pop
adc
or
mov
ins
enter
dec
out
in
enter
push
ret
pushf
jb
popw
adc
pop
hlt
mov
shl
js
aad
retf
iret
(bad)
pop
xchg
jo
lods
and
mov
ins
je
lea
mov
repz
push
xor
mov
or
jle
mov
sbb
dec
pushf
inc
movs
mov
ror
cmp
sub
pop
retf
ret
arpl
sub
inc
ins
cmps
push
loop
clc
and
mov
sbb
xchg
cli
nop
and
es
xchg
lds
repz
xor
enter
lock
in
adc
mov
mov
xchg
rol
pop
push
push
mov
xor
jns
jmp
fisubr
cmc
push
fucompp
cmp
xchg
es
ds
dec
test
out
mov
sub
jns
adc
test
icebp
xor
push
mov
xchg
push
dec
fsub
out
mov
lods
aad
sti
scas
xchg
addr16
dec
dec
push
pop
mov
inc
int
xchg
jb
sub
lahf
pop
add
push
xor
or
popf
xor
sbb
hlt
pop
sbb
or
xchg
cmp
sub
or
sahf
dec
rcl
mov
and
lea
pop
pop
je
sbb
cld
jne
sub
retf
adc
and
jmp
stos
outs
mov
loope
cmp
xor
aad
sub
dec
int
fwait
jno
xchg
(bad)
fwait
cmc
push
int3
or
loopne
dec
lea
adc
jo
pop
clc
cmp
daa
cmps
out
scas
test
imul
add
popf
adc
adc
in
movs
hlt
xchg
jb
mov
jl
ds
out
add
sbb
adc
cli
adc
adc
push
das
iret
into
jmp
aas
jmp
jbe
adc
sbb
cmp
push
push
lea
cmp
stos
aad
mov
test
jge
mov
or
loop
mov
mov
cmp
mov
cmp
scas
aas
inc
imul
xor
xchg
pop
dec
rcl
jbe
xor
xor
mov
sbb
adc
inc
cdq
inc
outs
fcmovbe
shl
xor
shl
mov
std
xchg
mov
std
cmp
dec
sub
mov
sahf
adc
dec
stc
cli
sub
fwait
push
aad
push
stos
jb
jp
xor
xchg
adc
arpl
pop
jo
test
lock
jno
iret
push
sbb
adc
pop
ficom
lods
nop
vmwrite
das
aas
dec
clc
cmp
push
dec
mov
sbb
mov
mov
nop
sbb
adc
and
push
mov
sahf
loop
int3
mov
fld
sbb
xchg
cld
add
in
xor
ret
lds
movs
pop
jae
sub
inc
and
call
pcmpeqw
fs
push
outs
rep
inc
jle
mov
and
push
call
lahf
dec
mov
pop
jb
push
retf
adc
inc
lahf
inc
push
mov
lods
add
leave
adc
xor
sub
les
xchg
jp
sbb
add
arpl
outs
cmp
dec
sub
mov
sub
mov
cmp
xlat
adc
xor
jp
adc
inc
jmp
mov
sub
std
xor
ins
xlat
and
pop
mov
jl
add
add
jle
or
out
gs
aas
(bad)
xchg
dec
iret
cmp
push
adc
das
push
push
xchg
pop
push
shl
sub
mov
(bad)
outs
stc
test
retf
add
outs
push
sti
push
pusha
xor
xchg
int3
cdq
es
bound
es
jp
sub
repnz
movs
aad
shl
(bad)
adc
lahf
call
mov
cmc
(bad)
in
sub
movs
sahf
sub
or
adc
lods
cmp
shl
out
sub
(bad)
mov
out
imul
(bad)
jne
inc
mov
hlt
ins
inc
sbb
mov
jne
in
cmps
lods
pop
mov
mov
scas
nop
enter
cdq
pop
xor
and
daa
addr16
arpl
mov
in
das
ss
(bad)
popf
and
add
addr16
dec
xor
sbb
mov
sub
mov
test
iret
adc
xor
push
cld
adc
shr
add
mov
mov
add
sub
retf
lds
dec
inc
cmc
mov
movs
outs
shr
xor
add
and
je
jnp
cli
xor
xor
add
xchg
push
cmp
icebp
sbb
(bad)
out
pop
scas
out
cwde
shr
and
mov
sub
push
cld
imul
xchg
int3
mov
rcl
xlat
fstp
or
lods
mov
push
inc
jge
ds
and
pop
mov
fisttp
into
xchg
sub
stos
test
pop
jp
(bad)
mov
fistp
sti
push
sbb
int
(bad)
lea
in
ss
xlat
adc
ds
push
fst
repz
stos
pop
out
jge
dec
test
push
xor
hlt
mov
jno
ror
and
sahf
jnp
(bad)
mov
test
in
cmps
inc
mov
and
mov
loope
gs
cmps
andnps
mov
cmp
les
neg
pop
cmp
jecxz
(bad)
(bad)
xchg
jmp
push
test
mov
sti
dec
pop
jbe
cmp
test
or
xchg
fwait
stc
ins
call
add
rcr
inc
inc
mov
sub
scas
out
int
adc
call
inc
push
mov
inc
fdiv
jecxz
xchg
(bad)
daa
mov
mov
push
pop
inc
mov
mov
jnp
rol
dec
imul
push
(bad)
das
xchg
int3
aaa
adc
sub
imul
jle
mov
cli
jp
loop
sar
dec
cdq
loope
mov
xchg
push
cmp
out
sahf
or
sbb
and
and
leave
push
sar
ja
inc
mov
sar
aad
in
es
lods
sbb
xchg
aas
aas
shl
adc
pop
mov
lods
mov
in
add
pop
shl
pop
push
test
ins
shl
xchg
sahf
inc
gs
(bad)
xchg
adc
int
cli
call
jle
sub
push
dec
mov
outs
pop
fldcw
xchg
mov
mov
push
popf
or
test
push
test
push
xchg
js
xchg
(bad)
xchg
mov
fs
data16
or
mov
hlt
aam
(bad)
fcmovnb
sub
push
dec
imul
xchg
ffree
push
(bad)
jp
dec
dec
inc
(bad)
xchg
dec
mov
mov
mov
cmp
inc
pop
out
aam
adc
cmp
popf
stc
xor
aas
outs
fsubp
pop
push
retf
sub
ret
jl
add
dec
add
or
aad
add
or
add
lods
adc
ja
xchg
add
push
test
add
and
sbb
int3
ficomp
outs
dec
daa
xchg
ret
out
dec
or
push
mov
pop
cld
call
adc
(bad)
xchg
stc
sub
push
stos
adc
imul
sbb
mov
xor
xchg
imul
push
retf
sub
in
push
jne
and
mov
sub
pop
mov
or
xor
jmp
(bad)
call
(bad)
pushf
in
sub
fild
fstp
outs
pop
rcr
dec
cmp
cld
clc
mov
inc
adc
cmp
add
xlat
out
loop
xor
sysenter
dec
das
mov
add
sub
test
cmc
inc
inc
ja
xchg
sbb
(bad)
add
cwde
int
dec
nop
mov
ret
inc
loope
jmp
pop
xchg
mov
mov
sub
mov
push
aad
pop
mov
dec
cmp
bnd
aad
fst
retf
stc
fwait
mov
into
jbe
dec
xchg
cmp
(bad)
test
or
aam
fs
adc
jg
mov
jno
xchg
dec
popa
ja
sbb
popf
adc
mov
push
imul
mov
(bad)
retf
xor
mov
push
mov
pop
lods
bound
push
push
test
rcl
xchg
idiv
and
test
bswap
sbb
gs
in
ret
mov
cmp
add
ds
iret
pop
or
ds
mov
mov
inc
mov
adc
sub
mov
out
xlat
xchg
je
(bad)
in
cmp
fiadd
leave
loopne
jmp
dec
fs
icebp
push
or
ret
repnz
cmp
sbb
fucomi
loope
jnp
shr
(bad)
jae
outs
or
cs
adc
loope
je
jmpw
xchg
push
je
inc
pop
mov
ins
push
xchg
iret
and
xchg
call
sub
adc
das
in
das
jmp
je
lods
loopne
mov
sbb
mov
outs
lahf
xchg
mov
pushf
ds
out
sub
mov
cs
and
pusha
bound
cmp
jg
dec
js
cmc
int
mov
mov
jns
cdq
ds
dec
aas
fild
fistp
aaa
retf
test
push
sub
inc
cs
jle
aam
cmc
jge
js
or
cs
xor
es
mul
addr16
dec
xlat
sbb
dec
sbb
jge
loopne
ror
push
xor
jmp
scas
sub
iret
sub
repnz
mov
lods
rcr
pop
sar
sub
xor
cmps
or
pop
out
or
inc
or
ss
popf
into
aaa
sub
not
aas
fsubr
jnp
stos
sbb
pop
cmp
pop
sbb
cli
in
add
lahf
mov
mov
out
push
mov
cmp
sahf
and
jmp
dec
add
sbb
jnp
fnsave
je
or
hlt
js
dec
dec
je
retf
cmp
dec
pop
or
pop
popw
mov
and
adc
dec
scas
popa
fcom
mov
and
in
(bad)
and
inc
pushf
dec
neg
fisttp
adc
fild
cmp
lock
and
daa
fwait
mov
pop
sbb
cmp
cwde
hlt
pusha
addr16
and
mov
mov
ret
popf
cmp
jo
sub
xlat
inc
and
rol
or
pop
movs
or
jl
add
std
dec
mov
xor
ds
mov
(bad)
shr
sbb
call
pop
and
sbb
sbb
js
jnp
cdq
pusha
imul
retf
jne
sbb
cmp
pop
je
enter
mov
dec
push
pop
xchg
and
scas
xchg
inc
into
jb
jmp
mov
ins
mov
fmul
jecxz
adc
pop
cmc
adc
test
test
es
stc
pop
mov
mov
callw
and
mov
pop
push
ficom
jg
sub
mov
pop
ret
mov
push
out
icebp
cwde
sar
sti
popf
fidiv
adc
aad
out
movs
stos
test
sub
pop
mov
iret
mov
cmp
add
xor
xor
jbe
shl
dec
sbb
push
pop
(bad)
lock
fcmove
stc
adc
mov
cmps
test
sub
add
rcl
loope
cmp
mov
xchg
mov
adc
leave
or
mov
cmp
fsubr
das
sub
mov
sbb
jg
push
enter
in
jns
test
dec
push
add
push
ins
pop
nop
sub
jmp
jge
sahf
les
mov
sahf
jo
mov
inc
inc
retf
iret
and
mov
add
inc
je
xor
cmp
in
mov
mov
fstp
pop
out
jns
push
mov
add
mov
mov
or
mulps
and
clc
pop
mov
ret
sub
pop
pop
add
ret
pop
leave
adc
fs
cli
ret
not
cmp
pop
inc
fs
int
daa
jb
mov
out
int3
xlat
jmp
hlt
mov
dec
push
sbb
xor
push
fsubrp
jo
lahf
pop
call
or
data16
lods
fdivr
inc
(bad)
mov
loop
bound
dec
ficomp
repz
pop
push
retf
xor
mov
push
mov
mov
sbb
dec
mov
jae
xchg
jmp
cmp
in
fdiv
loop
or
pop
(bad)
int
dec
cmp
mov
pop
lock
sahf
add
repz
arpl
jp
enter
ins
hlt
out
push
jmp
ss
jg
mov
xor
cs
gs
sti
lea
mov
(bad)
dec
mov
data16
iret
mov
jnp
cdq
shr
out
dec
dec
push
popa
dec
inc
xor
jb
ins
cmp
and
aad
gs
mov
and
test
ja
lods
aad
test
mov
ss
call
pop
ficomp
lahf
das
loopne
and
xor
call
cli
mov
inc
or
ret
loop
clc
clc
add
sahf
mov
outs
push
jnp
(bad)
fcom
aam
xchg
not
jle
jecxz
ins
cld
push
fld
popf
repz
or
call
stos
(bad)
mov
cmps
dec
sub
inc
mov
pop
call
lea
fadd
mov
add
fidiv
jns
out
inc
jne
jg
add
sahf
push
dec
dec
movs
les
and
ins
icebp
or
push
aaa
pop
push
inc
push
jle
jnp
mul
jns
mov
cmps
jb
mov
loope
cmps
fstp
xor
sti
push
cwde
dec
xor
ret
scas
fwait
daa
cmp
dec
popa
retf
mov
stc
adc
inc
jle
test
mov
call
je
cs
std
mov
clc
scas
xchg
add
push
dec
xchg
push
fmul
mov
mov
or
inc
sar
and
imul
lock
in
sub
outs
add
ds
pop
jno
push
pop
pop
mov
jecxz
jno
(bad)
pop
out
xor
inc
cld
mov
mov
xchg
push
pop
and
or
push
cmp
xor
stc
shl
mov
(bad)
xlat
loope
in
inc
sub
and
nop
or
ds
sub
lea
sub
ror
mov
out
jmp
fst
mov
(bad)
std
outs
mov
rcr
lahf
and
push
into
sbb
push
add
xchg
lods
lods
push
cld
cmps
sub
in
mov
and
repnz
sahf
ret
out
out
aas
shr
dec
jns
arpl
imul
mov
lods
dec
mov
xor
test
das
jno
call
xchg
es
shl
ja
pop
push
lds
(bad)
pop
xchg
test
stos
dec
xor
pop
mov
inc
aam
add
sub
or
pushf
in
test
lahf
bnd
jns
(bad)
out
or
inc
test
add
jp
sub
or
dec
cmp
clc
(bad)
shl
test
pop
ret
push
push
push
and
(bad)
jmp
and
pop
push
mov
mov
pop
push
mov
ja
xchg
or
jae
fdivp
aaa
retf
jbe
movs
ror
out
jno
jg
test
sar
out
lock
lahf
popa
jmp
xchg
dec
imul
push
mov
out
(bad)
push
cdq
shl
inc
lds
pop
add
mov
jbe
mov
fbld
(bad)
icebp
xor
out
xchg
hlt
cmp
std
retf
loope
ret
ret
inc
mov
movs
push
jmp
or
mov
mov
mov
mov
sbb
jmp
gs
jno
xchg
push
in
push
pop
test
ficomp
inc
lahf
adc
cmp
retf
jmp
add
xor
test
ja
sbb
dec
pusha
fisub
mov
cwde
loopne
fs
gs
mov
pop
and
sub
loope
ss
es
and
xchg
out
sub
adc
leave
jns
sub
dec
in
push
mov
shl
push
mov
pop
popf
mov
cmp
push
xor
int3
xchg
aad
stc
jo
popf
or
jmp
nop
cmc
aas
mov
dec
mov
out
xor
je
in
nop
or
xchg
adc
pusha
dec
lock
inc
sub
mov
mov
push
jg
xlat
xrelease
(bad)
pop
std
inc
cmp
cmps
aaa
popf
(bad)
shl
aam
mov
das
cmp
aad
mul
in
push
fiadd
mov
ss
cmp
das
cld
sbb
sub
mov
je
inc
inc
ins
and
jae
fst
ror
lahf
ds
movs
cmp
xlat
daa
add
in
cmps
pop
ss
inc
out
les
loop
add
in
xchg
dec
add
aad
sar
dec
inc
cwde
or
jge
xor
jmp
lea
add
hlt
dec
jle
mov
push
retf
cli
dec
ins
dec
(bad)
mov
mov
lods
out
mov
push
mov
adc
adc
cmp
xchg
sbb
mov
or
jmp
dec
outs
inc
mov
xchg
xor
(bad)
in
sub
cmc
push
fdiv
int3
enter
inc
jg
fidiv
mov
mov
jecxz
les
push
push
bnd
out
push
adc
call
mov
xor
dec
shl
mov
scas
ja
jg
loop
ret
jg
cdq
jp
pop
es
je
xchg
fmul
fdivr
xlat
dec
pop
add
mov
cld
cmc
std
xchg
into
adc
jno
xchg
test
xchg
int
in
sbb
xchg
jmp
cmp
sahf
jecxz
movs
ins
pop
repnz
add
mov
hlt
xchg
out
cld
jae
shl
call
mov
(bad)
out
or
pop
xchg
outs
add
add
mov
jnp
ds
pop
(bad)
in
cmc
jns
fdivr
les
and
shl
in
inc
dec
addr16
jno
pop
(bad)
gs
test
(bad)
neg
mov
cmp
lea
in
stos
or
out
mov
xchg
inc
lock
(bad)
rcl
cmp
and
xor
mov
or
sub
push
adc
dec
stc
jo
dec
mov
aaa
fmul
sub
(bad)
aad
adc
fisubr
inc
out
out
pop
loop
cmp
dec
or
pop
mov
repz
mov
dec
pop
inc
mov
push
aad
(bad)
aam
clc
ret
(bad)
enter
mov
xchg
scas
ds
test
stos
add
sbb
(bad)
(bad)
mov
xor
test
dec
jb
xchg
fwait
and
scas
mov
or
les
das
loop
dec
xor
fsubp
sbb
shr
xlat
jl
dec
pop
pop
cmc
popf
fsubr
xor
jnp
lock
fistp
jge
shl
stos
rol
mov
fcom
ins
cmp
sub
or
es
mov
rcl
pushf
xchg
and
outs
repnz
(bad)
cmps
repnz
ins
xchg
sahf
mov
mov
or
aaa
push
call
ss
mov
mov
fdiv
(bad)
rol
mov
fs
sti
inc
mov
dec
pop
pop
pop
call
(bad)
out
add
inc
stos
cmp
or
xchg
fistp
push
or
repnz
dec
sbb
outs
pop
stos
mov
inc
into
xor
push
xchg
into
lgs
mov
cmp
push
pop
push
repnz
mov
mov
adc
xor
xor
pop
push
in
sub
cs
pop
push
jo
jmp
xor
bound
lods
or
sbb
inc
dec
and
fwait
test
cmc
mov
test
mov
outs
xchg
sub
scas
sbb
pop
jmp
xor
test
imul
stc
loopne
bound
cmp
xchg
or
dec
ret
jle
data16
sbb
add
hlt
xchg
lahf
xor
pop
out
adc
and
jno
mov
stos
push
add
xor
mov
fild
or
shl
jns
jmp
mov
cld
into
js
mov
imul
popf
outs
add
inc
ins
movs
push
cmps
neg
push
sub
lds
sub
ret
sub
and
test
sub
pop
clc
or
fisub
movs
add
mov
sub
mov
xor
dec
push
sub
push
pop
dec
sbb
repz
xor
pusha
int3
pop
jmp
mov
movd
loope
test
add
daa
xchg
(bad)
ds
movs
inc
repnz
xor
sbb
push
jmp
fwait
test
pop
mov
cs
or
arpl
xchg
test
push
outs
jmp
inc
jne
mov
fldenv
aas
dec
and
mov
stc
mov
cdq
in
cmp
cmp
pop
cmp
add
int3
in
(bad)
loope
je
popf
xlat
xchg
jle
outs
xor
outs
ja
stos
imul
div
add
cmps
cs
add
movs
data16
les
clc
dec
mov
inc
and
aas
adc
jmp
or
adc
ror
jmp
mov
jne
cmps
clc
mov
add
inc
in
sub
mov
push
ja
int
call
pop
test
loop
xor
fwait
sar
sar
push
(bad)
sub
cmp
in
or
call
or
cwde
jae
rcr
pop
retf
out
jle
xchg
inc
pop
fistp
gs
jns
jecxz
shl
lahf
popf
ret
out
shl
scas
fimul
gs
jg
jmp
and
(bad)
cmp
jbe
call
inc
cmp
cmp
fisub
mov
dec
mov
cwde
jmp
mov
adc
test
in
test
fs
jb
(bad)
dec
xor
mov
sbb
(bad)
mov
sub
cmp
inc
cmp
sbb
fsubr
(bad)
xchg
sahf
cli
fs
add
jp
or
les
repz
or
mov
call
sbb
rol
loopne
dec
popf
jl
cmp
add
jo
jnp
jnp
stos
mov
imul
adc
aas
cmp
dec
shr
cmp
imul
xchg
mov
inc
inc
int3
stos
add
je
es
mov
imul
loope
jne
icebp
cmp
test
pop
scas
stos
push
repz
inc
mov
adc
push
or
push
and
mov
inc
or
pop
mov
mov
mov
inc
push
icebp
clc
mov
addr16
mov
pop
(bad)
in
popa
jmp
add
(bad)
enter
jl
pop
cmp
sub
imul
fcos
or
push
js
lods
in
mov
xor
push
add
(bad)
lock
sub
ja
and
push
test
ins
adc
pop
sub
adc
mov
sub
jp
add
xor
test
xor
jmp
mov
and
xchg
adc
sub
and
cmp
rcr
neg
or
adc
mov
jmp
fdiv
(bad)
mov
add
sub
int
mov
cmp
xor
(bad)
fmul
test
(bad)
frstor
nop
dec
sub
cmp
(bad)
mov
pop
popa
sbb
push
(bad)
sbb
jmp
lods
call
mov
lds
add
inc
not
cmp
frstor
add
mov
clc
test
imul
cmp
adc
dec
sub
(bad)
je
iret
(bad)
inc
int
mov
or
int
mov
out
out
adc
push
test
(bad)
repz
(bad)
sbb
pop
retf
outs
gs
fidivr
mul
gs
fidivr
repnz
jmp
mov
outs
(bad)
jmp
ror
daa
inc
push
cmps
ret
add
dec
sbb
imul
xchg
pop
push
mov
dec
call
movs
test
cdq
jne
and
in
jp
or
mov
xchg
xchg
add
cmp
pushf
scas
movs
jmp
sub
clc
jns
mov
iret
cmps
std
and
jle
push
ins
xor
mov
fild
xor
mov
out
cmp
in
push
hlt
add
fs
(bad)
pop
cs
loop
sbb
push
int3
jb
xor
mov
(bad)
mov
jmp
mov
pop
clc
int3
dec
out
mov
popa
mov
mov
(bad)
cmps
cdq
rcl
or
and
leave
or
mov
cld
and
and
sbb
xchg
out
sbb
jmp
cmp
sub
aad
fcom
mov
xchg
call
add
scas
mov
cmp
dec
mov
cmc
lods
(bad)
sar
mov
lahf
(bad)
ins
lods
dec
and
(bad)
lds
out
cmps
inc
pop
fmul
adc
js
add
xor
imul
pop
outs
or
dec
outs
outs
icebp
dec
jne
retf
add
popa
jbe
stos
pop
sub
lahf
pusha
or
xchg
xchg
arpl
push
xor
sub
repz
mov
jne
inc
daa
jno
sbb
xlat
jbe
imul
jp
xor
sti
sbb
(bad)
in
sub
sar
mov
pop
mov
outs
adc
iret
daa
xor
neg
and
int3
mov
xchg
sub
mov
daa
push
adc
aam
jle
or
mov
out
cdq
jle
add
fstp
mov
int3
mov
in
lods
mov
cmps
mov
and
dec
cs
test
or
push
mov
ja
lods
movs
add
(bad)
lods
test
aaa
inc
push
ror
retf
rol
xchg
mov
shr
ror
loope
je
enter
ffreep
add
jnp
jae
out
or
sub
jae
aam
push
adc
das
sbb
sbb
cmp
adc
in
or
or
mov
mov
pop
push
movs
retf
iret
int3
or
xor
xor
lds
js
mov
mov
add
pushf
xchg
push
aaa
ficomp
idiv
scas
mov
or
mov
or
add
inc
addr16
cmp
dec
xchg
push
cmps
mov
add
push
dec
(bad)
rcl
sbb
(bad)
and
sbb
mov
jb
fnsave
shl
call
aam
mov
out
loop
cli
mov
fadd
mov
imul
adc
retf
cmp
fild
scas
loope
and
lock
cmps
mov
push
hlt
aaa
rol
dec
add
jg
call
ret
mov
add
add
movs
(bad)
test
mov
mov
(bad)
in
jmp
cvtps2pd
arpl
call
jo
push
inc
imul
test
pop
dec
mov
movs
xchg
addr16
int3
jmp
sub
clc
xchg
cmp
mov
test
dec
retf
cmc
mov
xchg
lock
ss
fsubr
jmp
ins
mov
std
(bad)
loope
int3
push
and
ficomp
ins
arpl
push
bound
rcl
push
and
jbe
cli
push
jmp
mov
xchg
add
ror
mov
add
or
and
sbb
shl
aad
stos
neg
xlat
jbe
mov
pusha
fxch
int
(bad)
mov
(bad)
repnz
enter
imul
in
cdq
shr
cmp
and
adc
mov
sub
pop
push
xchg
repnz
push
pop
jl
cs
mov
xor
add
xchg
in
cmp
cmc
dec
xlat
sbb
lea
push
jp
fnstenv
loop
ins
daa
xor
aaa
mov
inc
xchg
sbb
cmc
enter
ret
sbb
in
xchg
retf
test
mov
pop
sbb
aas
push
cmp
jl
int
aad
inc
sub
add
lods
mov
pop
inc
push
out
jns
dec
mov
icebp
sar
mov
ins
sbb
mul
xchg
shl
adc
dec
inc
imul
test
xchg
call
ds
mov
out
imul
push
add
sar
push
xchg
in
inc
jne
mov
ins
sbb
(bad)
scas
in
pop
ret
dec
sbb
fdiv
mov
daa
xor
stos
inc
ficomp
adc
dec
push
fbstp
cld
test
loopne
test
retf
jp
and
ins
lea
cdq
cwde
jl
add
or
inc
sahf
add
jb
lock
xor
mov
jl
gs
pop
mov
(bad)
pop
mov
(bad)
adc
add
jecxz
pop
jmp
or
and
push
pop
test
lds
or
inc
inc
sar
jg
mov
fs
stos
test
push
daa
lods
pop
push
jae
sahf
mov
cmp
xchg
sahf
xchg
idiv
adc
mov
mov
mov
mov
or
mov
imul
sbb
sbb
sub
aas
push
shr
xchg
call
out
push
pop
popf
inc
lahf
aaa
xor
inc
mov
into
mov
int3
mov
mov
pop
aas
cmp
or
add
ret
add
clc
out
jbe
ja
jge
mov
sbb
mov
test
test
pop
nop
inc
cmp
packsswb
shl
fnstsw
xor
ss
push
mov
mov
cmp
hlt
pushf
sar
aas
(bad)
xchg
(bad)
lods
cmps
inc
mov
mov
mov
sbb
mov
push
add
jo
xchg
mov
jecxz
dec
jmp
sbb
push
mov
repnz
dec
mov
cdq
imul
mov
xor
push
gs
pop
cmc
xchg
inc
and
movs
push
ret
mov
ror
ins
test
(bad)
sub
push
fist
pop
cs
(bad)
lahf
ins
or
test
cmp
or
aas
add
sub
add
retf
push
arpl
xchg
pop
mov
fidiv
hlt
lea
mov
shr
push
sub
mov
movs
int
cmp
push
(bad)
mov
ffreep
adc
cmp
inc
cmp
push
add
stos
stos
cmps
fucom
xchg
or
sub
sahf
xchg
inc
and
mov
push
rcr
or
test
cmp
inc
cs
cmp
jb
dec
sub
xchg
jecxz
cs
icebp
push
dec
dec
jb
pop
call
inc
xor
xchg
test
scas
mov
fldcw
push
repnz
in
add
sbb
outs
pop
cmp
cmps
lea
test
sub
sti
xor
xchg
sbb
imul
out
xor
xor
out
push
xor
push
mov
push
das
add
and
in
leave
sbb
cli
jecxz
jecxz
in
sbb
push
ss
jae
add
iret
mov
sub
outs
lahf
pusha
icebp
test
pop
(bad)
add
test
mov
arpl
xchg
mov
jb
jecxz
cdq
cmps
ficomp
retf
icebp
xor
mov
and
cmps
popa
add
ins
in
movs
stos
out
cmps
sub
(bad)
xchg
jl
xchg
scas
stc
pop
or
jmp
inc
fsubp
sbb
aam
jno
mov
fwait
scas
or
nop
pop
pushf
mov
loope
cmp
popf
jo
pop
sbb
and
inc
lahf
jmp
movs
xor
test
or
rcl
ins
je
movs
xor
cmp
ret
xor
clc
mov
cmc
or
jae
ins
out
cmps
pop
outs
retf
push
(bad)
fst
cmp
je
mov
popf
retf
gs
lds
es
push
xlat
jne
loope
cwde
push
pop
shl
outs
test
fs
test
fdivp
mov
mov
push
pop
pusha
and
xlat
push
ret
jp
mov
sub
mov
mov
out
xchg
xchg
sbb
and
sub
cmp
dec
xchg
jbe
mov
adc
leave
loope
out
inc
xchg
ins
inc
clc
repnz
dec
cdq
sbb
js
xchg
fisubr
je
adc
ror
push
push
or
mov
push
(bad)
jbe
pusha
pop
pop
out
adc
fwait
in
outs
scas
add
fild
cmp
enter
and
lds
loopne
push
and
cmp
int3
xchg
aas
adc
outs
ret
into
ror
sbb
es
jl
arpl
ret
nop
aad
cmps
mov
mov
mov
fs
mov
xchg
mov
fdivrp
and
jae
jmp
mov
aad
push
pop
std
mov
adc
xchg
and
xchg
sbb
sbb
movs
or
mov
retf
cmps
shl
jae
push
and
scas
loopne
mov
stos
jno
or
cmps
and
loop
mov
pop
mov
cmp
cdq
cmp
cmp
adc
ss
add
jmp
mov
xor
pop
call
je
add
pop
scas
test
(bad)
xchg
add
enter
pop
in
aaa
push
xor
jb
mov
fisttp
test
rcr
push
outs
jl
mov
mov
outs
movs
sub
xlat
mov
movs
ins
pop
dec
pop
in
pop
dec
iret
sbb
sub
and
sbb
and
or
aam
dec
sub
cwde
leave
arpl
ins
jle
mov
sub
mov
in
jge
jbe
xlat
mov
cmp
lea
xor
inc
inc
sahf
pop
enter
les
loop
xor
int3
dec
jmp
int3
mov
clc
sbb
xchg
lods
dec
or
pop
outs
out
xchg
push
fistp
pop
fucomi
pop
(bad)
dec
jne
shr
mov
adc
adc
hlt
cmp
inc
xchg
pop
ins
imul
inc
clc
lods
and
(bad)
jns
cmc
(bad)
jmp
mov
fdiv
psrld
sub
xor
fist
test
cli
xlat
idiv
inc
jne
sub
jmp
xor
ss
in
fwait
adc
adc
scas
push
pop
adc
daa
es
movs
test
mov
stc
test
shr
cmp
loopne
(bad)
ret
shr
inc
sbb
pop
or
ss
call
jle
aam
inc
sbb
out
cmp
or
iret
jle
shr
mov
or
cmps
mov
jmp
pushf
stos
pop
in
imul
imul
jo
or
inc
bound
sub
jmp
push
dec
nop
in
rcr
scas
sbb
call
sbb
addr16
mov
imul
dec
pop
stos
sub
jl
mov
push
out
dec
add
pop
xor
sub
(bad)
mov
sub
and
scas
xor
ins
rol
test
out
(bad)
ins
lahf
add
rcr
ret
test
inc
inc
cld
jl
aaa
fisubr
add
lods
adc
fstp
inc
in
add
add
mov
xchg
ins
ins
loopne
xchg
fimul
ins
btr
stc
add
jns
arpl
nop
pop
test
xchg
xor
lock
adc
sbb
test
pop
jmp
jae
push
push
fidiv
into
dec
cmps
sbb
mov
sbb
pop
rep
jae
and
jp
shr
dec
ret
sbb
outs
xor
je
and
call
sub
push
inc
jecxz
jo
push
jp
call
adc
inc
push
push
ins
push
loopne
mov
add
or
adc
jne
mov
dec
das
mov
data16
test
jmp
aam
mov
fnsave
dec
int3
jmp
shl
sub
ds
dec
mov
(bad)
in
push
int
mov
int3
inc
push
mov
dec
rcr
and
mov
sbb
pop
add
sti
mov
aam
pop
xchg
ins
pop
(bad)
pop
inc
xchg
cmp
scas
push
xor
xchg
aaa
mov
inc
jmp
push
push
cmp
outs
lds
hlt
xchg
in
mov
ret
retf
nop
cdq
jnp
ins
mov
pushf
stos
mov
inc
ficom
cld
dec
jb
mov
dec
(bad)
or
pop
push
jns
or
pop
int3
cmps
lods
ins
loop
hlt
cld
loop
xor
sbb
pop
xor
ret
pop
pop
xor
enter
xchg
cdq
xor
scas
cld
call
add
fbstp
(bad)
into
mov
(bad)
mov
push
pop
jnp
ret
add
mov
lds
or
xchg
dec
icebp
jns
daa
push
arpl
or
jo
imul
pop
sbb
xchg
arpl
repz
or
mov
movs
iret
loope
jno
lea
daa
dec
xor
fcom
cli
cwde
xchg
jbe
sub
adc
inc
adc
shl
mov
fld
cld
ss
ja
cmc
cmp
push
xchg
cli
and
jo
or
outs
jecxz
cmps
nop
xchg
push
mov
imul
lahf
mov
dec
stos
(bad)
pusha
fiadd
fistp
xchg
mov
enter
cmp
push
test
dec
cmp
rcr
pop
cmp
sub
sbb
lea
pop
jmp
and
cmp
push
imul
test
(bad)
lahf
repnz
sahf
in
jle
fdivr
pop
dec
add
rcl
mov
or
add
dec
sbb
mov
and
cmp
cmc
xor
mov
rcl
pop
fst
adc
fcom
arpl
test
sub
sub
or
push
add
mov
mov
jns
cwde
jecxz
add
adc
xor
imul
cmp
imul
mov
ins
rol
cmp
inc
repz
mov
in
lock
ins
ret
mov
add
add
jno
cmp
lea
repnz
(bad)
xor
ins
jp
imul
je
dec
test
push
(bad)
mov
adc
in
sbb
cli
mov
and
lock
sbb
aad
jno
stos
pushf
inc
lods
aad
push
ret
(bad)
mov
das
mov
repnz
jnp
retf
add
sub
cld
push
stos
mov
lods
iret
cli
pop
jecxz
jb
sub
in
sub
sub
jbe
call
fwait
das
stc
mov
mov
(bad)
std
retf
jne
out
rol
movs
xor
and
fs
push
arpl
test
hlt
push
fdivr
mov
mov
push
xor
lods
mov
xor
dec
mov
movs
dec
hlt
cmps
inc
push
in
xor
add
dec
push
jno
ja
out
arpl
popf
xchg
aas
jo
in
pop
mov
aad
mov
test
sbb
sar
jg
test
test
adc
cmp
test
cmp
das
lahf
or
repnz
les
cld
and
pop
adc
sub
cmps
or
xlat
or
jnp
rcl
pop
sub
daa
sbb
sbb
dec
and
push
or
jno
pop
sbb
fisubr
inc
xor
rcr
cmps
fcom
mov
xchg
(bad)
pusha
sbb
repnz
dec
dec
mov
cmc
pop
sbb
call
pusha
js
std
out
ss
sbb
loopne
loopne
dec
mov
mov
dec
push
xor
pop
inc
push
xchg
jmp
gs
movs
dec
push
dec
sub
test
mul
pushf
jmp
sub
jecxz
stos
adc
sbb
push
in
cmp
jp
mov
pop
xor
pop
mov
aaa
cli
mov
push
fwait
in
push
add
push
cmp
adc
cld
in
dec
hlt
jmp
or
neg
rcr
out
add
inc
retf
div
mov
inc
cmp
icebp
fdivr
test
sbb
mov
adc
rcl
fidiv
xor
ja
fstp
add
arpl
icebp
pop
iret
adc
push
cmp
pop
mov
push
push
stos
test
mov
cmps
mov
sub
cmp
jae
test
mov
and
add
fcmovnu
sar
pop
rol
cmp
(bad)
mov
mov
stc
jo
fisttp
dec
xor
das
ins
nop
xor
rcr
loop
mov
imul
sub
iret
int3
push
xor
sub
pop
mov
jmp
xchg
(bad)
popa
rcr
mov
mov
inc
push
stos
div
push
add
outs
pop
aad
inc
outs
inc
mov
out
and
js
mov
mov
xchg
pop
mul
push
cwde
push
xchg
jno
sub
call
xchg
popf
jecxz
jnp
pop
xor
fwait
jg
xor
push
dec
imul
repz
inc
daa
fidiv
lds
pop
cmps
or
add
or
imul
pop
pop
aad
outs
ins
jmp
inc
add
inc
imul
aam
xchg
pop
dec
push
movs
in
repz
mov
and
adc
cmovns
out
mov
push
dec
scas
or
cmps
(bad)
jne
cmp
int
pop
rcl
cmp
ja
hlt
test
push
arpl
es
mov
mov
ins
sti
mov
add
jns
xor
sti
test
sti
pop
imul
xchg
sbb
xchg
retf
push
call
inc
xchg
pop
or
iret
mov
ins
test
mov
retf
lock
adc
mov
and
and
jno
dec
test
lods
pusha
sub
or
mov
call
mov
pop
(bad)
pop
mov
sbb
loop
(bad)
bnd
jle
into
jmp
stc
and
ror
add
outs
xor
call
sub
mov
dec
aaa
xor
mov
xchg
jp
jo
cmp
cmp
lods
sbb
push
xchg
push
jecxz
retf
cmp
sub
loopne
push
pop
pop
fcom
xchg
xlat
cdq
retf
sub
inc
loop
mov
cmp
mov
sbb
fld
pop
icebp
clc
sbb
push
pop
arpl
mov
pop
sub
mov
leave
repnz
sbb
popa
test
(bad)
imul
sub
jne
xchg
and
lds
outs
packsswb
sbb
sbb
cmp
or
sete
mov
and
or
je
shl
not
hlt
(bad)
dec
cmps
daa
aam
aaa
imul
hlt
out
mov
repnz
xor
lea
xor
mov
dec
jnp
inc
or
and
cli
inc
adc
pop
sub
repz
mov
fild
(bad)
and
push
cmp
xor
pop
sbb
and
ins
(bad)
lahf
sub
pop
jg
in
outs
ret
push
push
ins
scas
dec
jp
call
loop
cwde
lahf
jno
mov
and
mov
dec
pop
inc
leave
pop
sbb
xor
jle
shr
clc
xchg
ror
stos
in
pop
cmps
mov
scas
rcr
mov
outs
mov
cmp
mov
xlat
and
inc
add
idiv
repnz
inc
loopne
sbb
xchg
call
(bad)
loop
fistp
fldcw
dec
mov
test
fs
push
hlt
mov
adc
add
inc
(bad)
jo
mov
(bad)
mov
pushf
pusha
push
js
jg
mov
adc
not
test
adc
in
fadd
fisub
outs
dec
jo
add
aad
mov
in
(bad)
mov
mov
dec
rcr
pop
fistp
jae
dec
or
xor
cld
jmp
shl
shl
hlt
cmps
cmp
ret
mov
xchg
pop
mov
sub
xchg
cmp
mov
and
(bad)
int3
jmp
fisubr
ja
jne
idiv
inc
push
ret
fs
enter
cs
pop
mov
pop
cmp
icebp
rol
hlt
ins
dec
ins
dec
mov
rcr
add
dec
mov
add
cdq
call
shl
sbb
sti
fwait
call
sti
shl
movs
push
push
lea
in
lock
xchg
test
jne
xchg
jecxz
rol
(bad)
(bad)
mov
cmps
popf
pop
fistp
jb
and
cld
ror
jb
sub
xor
add
outs
jno
in
mov
xchg
push
and
mov
(bad)
ins
cmp
sub
xor
xchg
push
push
push
add
cmp
imul
jae
mov
outs
fs
or
nop
push
in
jl
test
pop
test
stc
cli
mov
and
stos
pop
pushf
fstp
push
mov
movs
mov
lods
mov
adc
sbb
xchg
or
lods
mov
fild
mov
inc
fwait
or
adc
stc
push
xor
in
paddw
(bad)
fiadd
out
neg
leave
add
vpsrlq
enter
jmp
dec
sbb
push
sbb
loopne
xor
les
sub
xchg
xchg
das
xor
(bad)
std
(bad)
clc
inc
dec
adc
and
lea
arpl
jp
fbld
ror
mov
mov
dec
popf
and
arpl
or
pop
ins
sahf
test
adc
and
jmp
mov
es
jno
sub
inc
xor
(bad)
mov
adc
add
ins
inc
movs
and
pop
inc
or
pusha
stos
cmp
mov
shr
fisttp
mov
inc
add
cmps
mov
cmp
ror
pop
cmp
sub
xchg
dec
lahf
inc
sub
ficomp
stc
sti
mov
bound
mov
push
jmp
popa
fdiv
mov
adc
xor
xor
adc
mov
rcr
pop
test
sub
or
inc
jmp
adc
(bad)
data16
adc
aas
and
jmp
sub
sub
bnd
ficom
adc
loopne
leave
(bad)
in
out
jp
pop
mov
jecxz
cmp
pushf
enter
fsubr
adc
dec
loopne
mov
jno
imul
pop
lods
loopne
popa
mov
adc
bound
pusha
out
test
cmc
or
pop
push
adc
jbe
mov
and
inc
loope
test
(bad)
outs
add
in
jecxz
jmp
dec
cmps
xor
std
add
sub
fmul
sub
jl
shl
adc
pusha
push
addr16
mov
add
pop
jnp
in
aaa
(bad)
lock
jmp
stc
loop
adc
scas
(bad)
in
lahf
adc
test
and
mov
or
push
xchg
jecxz
lds
dec
(bad)
push
mov
pop
mov
mov
add
das
std
sbb
loope
mov
mov
sahf
fidiv
nop
or
push
js
test
jmp
or
sbb
dec
sar
stc
je
sbb
inc
int
and
das
outs
arpl
pop
adc
cmp
xchg
fcomi
inc
add
xchg
dec
movs
sbb
jp
mov
arpl
push
sub
jmp
stos
lea
push
inc
mov
xchg
mov
frstor
or
repnz
mov
(bad)
fiadd
ret
push
fidivr
sub
xor
scas
call
xchg
js
jle
lods
dec
mov
mov
or
mov
mov
add
ret
sbb
dec
nop
jge
jne
mov
mov
test
jecxz
hlt
fdiv
dec
or
mov
sub
xor
cmp
add
sbb
or
(bad)
fwait
pop
or
mov
push
(bad)
enter
pop
rcr
mov
mov
ja
sub
imul
rcr
dec
cmp
push
mov
xor
mov
cmp
fistp
mov
push
sahf
dec
das
fwait
aas
(bad)
sub
loop
imul
dec
dec
jae
jmp
ins
cld
mov
out
inc
ret
xchg
sar
iret
cdq
adc
inc
pop
push
(bad)
ja
inc
cmp
gs
cmp
or
sar
mov
inc
add
and
pop
mov
sbb
in
es
pop
sbb
es
add
jb
lods
jl
mov
sahf
inc
repz
cmps
push
shl
(bad)
in
cmc
push
jl
push
mov
xor
shr
sar
test
mov
repz
adc
fbld
sub
pop
arpl
dec
fadd
cld
call
clc
push
daa
jbe
cmp
jl
push
femms
or
mov
fbld
xor
fwait
inc
mov
repz
jne
in
jle
(bad)
into
(bad)
push
call
hlt
mov
mov
int3
call
mov
pop
es
retf
fwait
cmps
push
je
pop
or
es
add
and
pop
and
sbb
and
ss
aam
or
cs
jbe
test
gs
push
cld
fisub
inc
stc
fbld
shrd
fisttp
mov
sahf
mov
stos
pop
rol
xchg
mov
retf
ret
mov
imul
cld
mov
adc
jno
and
mov
pop
adc
and
jnp
aad
test
jmp
mov
xchg
out
out
std
or
mov
inc
lds
inc
and
jnp
pop
std
int
mov
repz
sub
mov
scas
mov
mov
sbb
jb
sub
mov
ret
int
mov
jmp
aaa
jl
sbb
lods
fldcw
sbb
push
ins
nop
ret
jno
lahf
in
pushf
les
sar
pmulhw
or
cmps
addr16
mov
in
retf
mov
pand
punpckldq
sub
retf
xor
adc
mov
push
mov
add
fidivr
cdq
or
js
(bad)
iret
xor
clc
xor
pop
test
inc
(bad)
out
(bad)
outs
inc
cmps
xor
lea
aad
sub
jg
inc
loope
out
cmp
xlat
loop
mul
xchg
int3
push
mov
data16
push
je
mov
fnsave
btr
sub
cmp
ds
push
retf
rol
mov
lods
je
shl
xchg
repnz
aaa
dec
scas
push
int
aaa
iret
cmp
repnz
outs
call
cmp
jnp
inc
cmp
into
test
je
cmp
adc
daa
cmp
jo
into
mov
pusha
ja
sub
dec
jno
cmp
sbb
sbb
hlt
in
fild
add
push
lea
adc
lods
daa
fbld
mov
jb
inc
xchg
mov
dec
(bad)
in
jge
jecxz
test
repz
pop
pop
sub
imul
(bad)
or
mov
inc
dec
fimul
int
rol
jecxz
sar
and
lsl
cmp
lock
sbb
pop
cmp
dec
cmp
mov
cmp
xlat
cli
ins
mov
mov
xchg
ficom
enter
dec
xchg
es
hlt
sub
inc
fidiv
mov
mov
iret
jmp
add
imul
jne
cli
stos
sar
cmp
lods
sub
pusha
xchg
mov
outs
sbb
push
and
sub
xchg
add
sub
or
add
outs
push
or
pop
mov
sti
jne
rol
dec
sbb
movs
scas
push
in
cmc
dec
push
inc
mov
and
xor
dec
mov
inc
cmp
jecxz
call
stos
lods
leave
and
push
xchg
fstp
inc
push
rcl
lahf
pop
cmp
sbb
(bad)
hlt
dec
shr
out
std
push
xchg
sub
cmp
add
sar
cwde
loop
movs
test
mov
xchg
push
or
test
jo
sbb
xlat
mov
xchg
(bad)
add
sub
ficomp
inc
fmul
or
push
in
cmp
push
pop
lea
adc
inc
ins
jbe
out
lds
dec
jns
xchg
sbb
in
addr16
sahf
and
mul
leave
mov
xchg
jbe
loop
cmp
cmp
xchg
pop
leave
fisub
inc
div
lods
cmp
cli
into
jnp
cmp
ja
mov
dec
push
(bad)
inc
pop
lods
(bad)
(bad)
fcmove
adc
mov
(bad)
out
push
rcr
sbb
and
xchg
in
xor
call
(bad)
aad
repz
mov
mov
push
rol
in
nop
push
cli
push
or
mov
or
jecxz
jns
daa
mov
aas
ja
call
mov
ds
add
nop
mov
out
push
inc
jo
shl
cwde
mov
inc
bound
jecxz
mov
(bad)
jmp
scas
call
loope
or
or
pop
pop
xlat
sbb
js
sub
fs
dec
sub
scas
(bad)
test
aad
mov
sbb
aas
jns
(bad)
mov
icebp
and
inc
(bad)
mov
cmp
push
scas
lahf
pop
and
mov
sub
mov
fisubr
mov
xor
rcr
mov
test
cmps
(bad)
scas
mov
xor
xchg
inc
movs
inc
jae
stos
sub
push
and
stos
stc
jne
jns
pop
sub
sub
mov
push
call
mov
out
test
xchg
inc
cmps
dec
dec
and
or
mov
(bad)
(bad)
ret
pop
sub
lods
popa
sub
addr16
hlt
fldenv
enter
fwait
push
inc
mov
icebp
cs
lahf
jno
shr
dec
mov
(bad)
les
mov
xchg
mov
or
mov
int
mov
mov
cld
push
pop
push
xlat
cwde
xor
fwait
test
mov
and
add
js
jp
(bad)
loop
mov
retf
jge
xor
in
imul
int3
jmp
retf
cmp
add
push
cmc
out
cmp
xchg
pop
(bad)
ins
jecxz
lahf
pop
adc
inc
ja
retf
outs
xor
adc
adc
mov
bswap
pop
out
outs
xor
ret
enter
jne
rsqrtps
xor
xchg
xor
ror
push
mov
mov
stc
retf
inc
aaa
inc
gs
daa
ret
push
jmp
jp
mov
ins
inc
adc
pop
sub
mov
in
and
xchg
pusha
push
mov
push
aad
int3
out
out
dec
or
je
sub
not
or
das
inc
mov
mov
push
dec
add
xor
xchg
cmps
push
int3
mov
or
js
pop
stc
mov
jmp
outs
push
add
pop
or
jle
cli
mov
mov
clc
jmp
imul
lahf
cld
shl
in
mov
and
enter
xor
xchg
pop
inc
(bad)
fdivr
xchg
push
shr
pop
ret
movs
enter
add
out
hlt
sub
imul
(bad)
push
inc
gs
nop
xor
and
xlat
loop
loope
and
movs
scas
cmc
and
pop
fild
dec
fwait
mov
test
push
bound
icebp
jle
push
jp
mov
dec
(bad)
or
jo
out
cmp
add
jno
mov
test
and
mov
clc
and
(bad)
leave
sub
ins
or
mul
lock
jns
jo
fdiv
or
sbb
mov
into
mov
sbb
add
(bad)
test
mov
sub
es
test
cdq
ins
jnp
ins
push
mov
popa
pushf
cmp
test
(bad)
lods
imul
lods
vcvttsd2si
jmp
push
pushf
mov
mov
in
imul
xor
(bad)
xor
jle
ins
and
dec
movlps
jg
lds
add
cmps
xchg
jbe
mov
push
es
xchg
xchg
mov
ror
mov
in
sti
call
jp
xchg
pop
jne
enter
test
in
(bad)
jo
mov
out
push
inc
xchg
aaa
jg
pop
and
dec
jno
inc
dec
mov
sbb
xchg
or
out
imul
popa
sub
cmp
in
retf
hlt
mov
and
xor
hlt
and
lods
gs
xchg
fsub
jb
in
add
or
call
xlat
mov
and
pop
mov
xchg
out
mov
mov
mov
out
xchg
sub
iret
(bad)
mov
imul
push
(bad)
scas
push
add
jbe
movs
mov
mov
sub
mov
sub
sbb
add
call
movs
jmp
cmc
and
jns
jbe
jmp
mov
cs
fwait
push
xchg
pushf
inc
cmp
mov
jp
retf
movs
retf
mov
pop
dec
dec
push
mov
jmp
sahf
adc
inc
retf
ja
out
in
dec
jae
jbe
adc
inc
inc
mov
push
mov
lds
dec
cmp
aas
fucomp
push
fidivr
fwait
xor
sbb
test
push
xchg
ds
rcl
pop
jl
jecxz
mov
retf
test
sub
imul
and
jne
xlat
ror
jns
mov
jl
cmp
sbb
sti
inc
test
ins
movs
and
imul
cdq
xchg
xchg
nop
push
retf
fwait
pop
jp
or
jl
xchg
mov
add
lea
cmc
pop
and
hlt
jae
pop
mov
(bad)
and
cmp
imul
jno
jno
es
pusha
or
cmp
pop
jg
pop
nop
mov
mov
pop
sar
rcl
lock
xchg
outs
mov
or
enter
xor
test
sbb
mov
mov
jmp
sbb
sub
(bad)
sahf
ja
mov
mov
movs
fwait
int
cs
shl
pusha
cmp
outs
mov
mov
mov
ins
into
loopne
(bad)
mov
shl
or
sti
rcl
add
jmp
addr16
lea
mov
xor
idiv
cmps
cmp
neg
push
out
call
adc
sbb
sbb
inc
bound
add
std
or
mov
add
mov
or
jno
dec
ret
jne
dec
popa
jmp
pop
cmp
and
sbb
or
dec
clc
push
out
imul
xor
push
and
push
into
add
dec
cmp
out
dec
jb
or
icebp
test
pop
cmp
mov
scas
cmp
sub
in
ror
sbb
inc
sub
(bad)
cmp
mov
addr16
outs
cwde
outs
clc
adc
xchg
push
dec
push
and
mov
and
mov
lahf
or
arpl
sahf
add
out
xchg
mov
pop
js
cmp
sub
data16
repnz
pop
mov
mov
jnp
outs
bnd
aas
xor
push
cmp
xchg
pop
pop
jo
popa
mov
jns
out
loop
mov
xchg
bnd
imul
xchg
pusha
dec
sti
and
inc
repnz
push
popa
or
outs
push
xchg
xchg
pop
fst
mov
and
push
lahf
sub
ins
push
and
(bad)
dec
mov
inc
pusha
out
jno
nop
mov
pop
fstp
das
fnsave
pop
loop
adc
inc
hlt
out
repnz
mov
mov
ss
jp
into
xor
adc
repz
sar
repnz
cmps
shr
dec
sbb
pop
jno
out
rcl
dec
stc
mov
nop
pop
test
mov
cmp
pusha
jp
and
ds
sbb
xor
lea
lods
lea
pop
loopne
sub
pop
sahf
rcl
(bad)
icebp
pop
mov
imul
into
loop
ror
pusha
or
outs
pop
jno
jmp
and
out
mov
mov
in
xor
sbb
test
pop
sti
push
adc
mov
sbb
test
or
sbb
movs
fwait
pop
call
es
add
sahf
pop
or
cbw
sub
cmp
int
mov
and
jbe
mov
fstp
nop
ins
mov
pop
das
aas
out
adc
push
lds
mov
mov
into
mov
jb
inc
rcr
repz
pop
out
cmc
outs
enter
pop
fs
dec
sub
xchg
(bad)
push
scas
iret
fucom
out
fsub
add
jle
xor
push
lock
xor
jle
out
pop
rcl
ja
outs
xor
ins
fldenv
aad
outs
and
push
add
ss
dec
out
adc
retf
sub
js
lahf
(bad)
xchg
pop
or
ret
imul
(bad)
xor
push
clc
jno
dec
hlt
sub
lahf
mov
int
fs
sbb
mov
dec
xabort
mov
ret
enter
test
clc
pushf
cli
scas
mov
stos
dec
out
or
or
retf
xchg
add
mov
in
ins
adc
mov
mov
jl
cld
add
or
mov
nop
std
mov
adc
add
add
mov
popa
fidivr
rcr
test
inc
shl
das
ins
sahf
mov
jne
aad
and
xor
mov
icebp
dec
movs
pushf
pop
out
pop
cmp
and
js
cwde
imul
jnp
push
jnp
movs
xor
mov
sbb
inc
jns
das
(bad)
jge
aam
loop
movs
hlt
cld
sub
mov
stos
imul
cmp
call
pop
scas
sub
out
hlt
ja
sub
idiv
out
mov
mov
sbb
cdq
xor
mov
fstp
inc
cli
add
cmps
dec
sbb
repnz
push
fs
cmps
aad
hlt
add
(bad)
jle
dec
cmp
mov
mov
or
sub
aad
jmp
imul
(bad)
push
js
aam
in
adc
adc
arpl
(bad)
jnp
pop
push
movs
jbe
out
mov
xchg
dec
hlt
sub
hlt
and
ss
popa
popf
xor
pop
bound
mov
sti
adc
mov
pop
mov
mov
mov
dec
push
push
fsubrp
addr16
and
mov
mov
loope
xchg
mov
lea
fistp
lea
xor
js
ss
imul
test
dec
rcr
mov
arpl
arpl
lods
fnsave
sbb
pop
sti
sbb
(bad)
(bad)
ins
sub
jb
out
sub
or
(bad)
mov
(bad)
fadd
jnp
add
jp
rol
sbb
daa
in
sti
lea
xchg
dec
in
(bad)
cmp
mov
sbb
xor
popa
inc
(bad)
mov
ret
fld
jne
xchg
dec
xchg
cmc
mov
lahf
loopne
add
xchg
test
repz
adc
sbb
cs
xchg
scas
add
out
or
ret
scas
arpl
rcr
fcom
xor
xchg
sbb
mov
xchg
mov
push
jg
in
addr16
stc
pop
mov
pop
cmp
and
dec
jbe
xchg
xchg
xchg
mov
mov
pop
sbb
adc
sbb
push
out
cmp
std
mov
ror
adc
int3
fldenv
push
fdivr
test
jne
mov
mov
ins
arpl
loopne
ret
push
icebp
cmp
jmp
mov
adc
aam
repnz
add
loop
inc
dec
pop
sub
xchg
stos
imul
sti
popa
and
jp
aaa
mov
pop
loope
dec
cs
cmc
mov
cmps
sub
or
lea
aas
pop
mov
or
dec
out
lods
or
fdiv
out
inc
and
and
cmp
fdiv
jge
fs
leave
pop
stos
or
(bad)
pop
dec
pop
jns
jmp
sbb
pop
outs
loop
or
cli
dec
pop
push
mov
jp
pop
aam
push
cs
dec
mov
std
inc
cmp
rcl
adc
sub
loopne
fsubr
push
mov
aad
in
aaa
cmps
inc
js
rcr
jmp
pop
inc
mov
hlt
pop
fiadd
fs
dec
rcr
dec
mov
adc
jle
out
rcr
pop
sbb
xor
xchg
pop
int
cmp
popa
int
pop
inc
cld
imul
in
cmp
xor
fst
mov
retf
mov
hlt
sti
outs
pop
or
pushf
pop
js
mov
cli
retf
mov
js
sbb
sbb
scas
mov
and
or
cld
mov
xchg
and
sub
aas
mov
retf
dec
test
dec
int3
adc
jns
push
jmp
cld
(bad)
xor
andnps
xchg
popf
ins
cdq
aas
shr
ret
inc
jnp
push
(bad)
xor
jp
shl
cli
push
xchg
push
in
jg
lahf
(bad)
in
js
mov
(bad)
cmp
sub
mul
mov
sub
or
bndldx
aaa
in
mov
xchg
mov
push
(bad)
(bad)
xor
ja
aad
loopne
ds
hlt
aaa
mov
dec
mov
cmps
jl
ret
and
mov
xchg
jns
mov
sub
loop
out
or
pop
xor
jmp
imul
test
iret
repnz
cli
das
lock
mov
lods
out
dec
outs
xor
inc
out
dec
pop
fisttp
pop
inc
ds
scas
gs
sbb
mov
add
jg
pop
mov
inc
loopne
not
adc
add
shl
popf
fs
cmp
aad
or
dec
std
inc
scas
mov
xor
std
dec
lea
and
int
lea
cmp
sbb
and
popa
add
outs
dec
adc
popa
ja
mov
adc
(bad)
data16
div
clc
scas
push
std
push
pop
dec
lds
pop
mov
stc
sub
pop
mov
dec
fidivr
repnz
cmp
clc
cmp
mov
shr
push
xchg
fisubr
xlat
ror
fwait
add
in
pushf
rcl
in
inc
sbb
inc
leave
inc
fwait
mov
cmc
stc
jbe
mov
out
mov
fs
call
aad
jne
inc
dec
loop
add
int3
shr
mov
imul
xchg
xchg
jne
adc
mov
stos
jnp
adc
lea
leave
dec
test
ds
into
es
mov
sahf
push
dec
sub
(bad)
out
into
pop
sub
sbb
sar
mov
enter
mov
cmp
mov
cli
(bad)
data16
stc
xchg
push
aas
lods
test
stc
cmp
aam
add
add
dec
shl
shl
(bad)
in
pop
inc
arpl
fcom
js
dec
enter
sub
dec
jmp
sbb
dec
call
hlt
push
xchg
lods
ficomp
mov
not
sub
pop
mov
sub
inc
mov
cmp
inc
push
jae
repz
add
jb
jb
sbb
cmp
sub
aam
push
jecxz
gs
or
mov
or
retf
cmps
push
shl
sub
(bad)
push
jmp
ins
pop
fsubr
movs
call
retf
cwde
mov
adc
push
bound
xor
pop
sub
call
cli
pop
sub
fwait
scas
adc
pop
jge
sti
or
mov
mov
daa
cmp
xchg
ins
je
sbb
mov
mov
sahf
or
loope
inc
out
and
sub
mov
daa
cmps
dec
cs
jnp
lds
data16
pop
sbb
jmp
out
cmp
sub
es
mov
test
data16
jg
inc
or
shl
dec
clc
cmp
push
push
dec
jnp
shr
(bad)
pop
jae
out
jne
and
jp
mov
cld
mov
call
cmp
call
inc
xor
pop
js
cmps
stc
adc
mov
xchg
(bad)
fcmovb
adc
in
repz
or
adc
jb
xchg
loopne
dec
mov
hlt
xor
rcl
fwait
sub
pop
or
adc
vmovsldup
cmp
jmp
es
xchg
call
rcl
push
push
es
jecxz
add
jmp
test
cmp
shr
xchg
cdq
inc
adc
add
leave
push
lods
repnz
(bad)
rcl
push
cmp
and
xor
sub
cmp
inc
out
xchg
add
loopne
mov
push
fistp
jmp
xchg
sbb
pop
pushf
jae
add
sbb
hlt
mov
test
jmp
dec
inc
or
out
jge
popa
or
enter
mov
and
fxch
cs
pop
movs
cmc
neg
sahf
mul
pusha
loope
shl
mov
push
dec
mov
mov
shr
loop
inc
nop
(bad)
(bad)
sbb
sahf
jns
push
ds
mov
mov
mov
xchg
pop
fbld
out
out
mov
jecxz
stc
push
aad
nop
mov
and
enter
ret
sub
push
arpl
mov
in
ret
add
pop
cmp
fisttp
jle
(bad)
in
xchg
xchg
mov
outs
adc
mov
popa
fild
lods
cmp
cs
mov
imul
mov
or
pop
dec
ins
fmul
xor
je
in
outs
jns
bound
xor
push
jg
(bad)
sbb
and
sbb
daa
mov
push
add
cmp
sbb
icebp
test
add
xchg
fstp
dec
fstp
adc
fnsave
outs
jge
jle
lea
dec
js
push
pop
(bad)
shl
out
cdq
adc
inc
js
enter
xor
outs
mov
stos
out
jo
and
mov
(bad)
and
push
add
xor
cmc
adc
inc
xor
add
push
sbb
dec
pop
rcl
cmp
or
arpl
sbb
add
(bad)
adc
xlat
or
mov
jmp
inc
stos
mov
jne
mov
movs
(bad)
imul
or
(bad)
idiv
fs
hlt
mov
mov
arpl
mov
outs
fidivr
sbb
sbb
mov
mov
jbe
pop
inc
adc
jmp
sahf
movs
cmps
xchg
jae
xor
test
fild
mov
push
inc
xchg
sub
loope
test
sbb
cmp
loop
cli
int
sub
cmp
xchg
cmp
xchg
sub
sar
icebp
dec
pop
mov
and
call
push
call
je
lods
or
sub
int3
mov
and
xchg
xor
loope
loope
les
push
xchg
in
and
pop
push
in
inc
repz
dec
dec
and
push
mov
imul
ins
aaa
or
jmp
jge
das
fadd
or
mov
ret
jne
add
mov
sti
in
aam
sbb
add
clc
add
cmp
cmp
adc
(bad)
push
aaa
iret
(bad)
sub
cld
pop
xchg
hlt
or
xor
dec
stc
mov
sti
push
or
dec
ins
stos
add
sub
int
lds
pusha
sub
movs
cmps
ins
jne
inc
ins
and
mov
mov
sub
mov
dec
push
adc
xchg
mov
aaa
movs
or
repnz
stos
sbb
cli
mov
ret
inc
lds
sbb
sbb
retf
lock
pop
mov
div
xchg
and
and
ret
mov
into
retf
mov
sub
inc
ins
iret
pop
mov
mov
(bad)
mov
sar
lahf
push
mov
mov
daa
sbb
mov
imul
std
out
aam
js
fcom
pavgb
ror
into
mov
test
xchg
pop
mov
es
mov
je
ins
ins
in
lods
mov
xor
mov
mov
cli
test
scas
pop
in
shr
mov
push
xchg
mov
cmp
mov
ins
shr
and
mov
and
mov
mov
mov
jl
push
ds
inc
mov
shl
ins
shl
xchg
adc
imul
sbb
adc
mov
sub
ficom
imul
out
inc
pop
sti
adc
cmp
mov
int3
mov
and
or
cmps
dec
cli
icebp
jns
or
cmp
mov
mov
xor
ror
mov
jmp
and
sbb
out
mov
ret
push
mov
xchg
inc
shl
mov
or
pop
mov
icebp
dec
push
cld
pop
jmp
or
ret
sbb
(bad)
mov
movs
das
cdq
jmp
mov
mov
xchg
(bad)
xor
outs
ins
push
jbe
xor
sub
(bad)
mov
jnp
inc
fcom
cli
ins
mov
nop
aad
cdq
and
mov
int
aad
loope
inc
stos
push
lahf
cli
pop
sub
xor
(bad)
cmps
popf
or
adc
sbb
jae
sbb
(bad)
jbe
push
mov
je
aas
xor
pop
sahf
pop
sbb
fiadd
addr16
(bad)
pop
mov
push
cmp
add
in
fdiv
loope
aam
js
and
imul
data16
shl
imul
push
push
nop
ror
daa
or
test
retf
pop
sub
xor
mov
punpckldq
cld
stos
jne
push
loop
ror
nop
and
mov
js
sbb
cmp
ret
cmp
and
xchg
jle
jp
movs
lock
hlt
and
cmp
mov
dec
js
ins
(bad)
sub
jl
sbb
loopne
mov
pop
jmp
inc
sub
mov
jae
icebp
jg
hlt
dec
in
push
or
dec
leave
pushf
inc
mov
repz
xchg
mov
es
out
sbb
xlat
ja
lea
shl
aam
mov
out
add
in
pop
sahf
push
or
ror
loope
ja
out
aad
cwde
(bad)
out
mov
jo
ror
add
sub
repnz
call
and
pop
fsub
and
pop
push
out
dec
adc
sti
fcomp
pop
or
dec
or
push
xchg
xlat
adc
(bad)
cmc
daa
or
xlat
rcl
pop
imul
fisttp
or
jle
repz
pavgw
loop
lahf
xor
cmps
loopne
lods
xchg
jmp
jl
adc
push
cmp
sbb
pop
xor
ja
scas
adc
cmp
jecxz
push
xor
sbb
jecxz
cmp
popa
loop
pop
jbe
and
xlat
clc
movs
faddp
aad
xor
lahf
mov
pop
sbb
mov
mov
mov
inc
xor
sub
dec
in
loop
cmps
pop
scas
fidiv
xor
cwde
add
pushf
cmp
mov
xchg
push
push
shufps
lahf
sbb
ja
push
mov
inc
push
ins
cmp
ins
pop
xor
sbb
neg
leave
sub
loopne
mov
rcl
retf
pop
adc
add
(bad)
sbb
add
int3
and
cmp
clc
arpl
cmc
or
ins
enter
rcr
push
pop
cwde
mov
cwde
push
shr
movs
pop
sbb
dec
and
sbb
add
add
fwait
hlt
and
and
out
shl
mov
call
sub
xchg
xchg
fwait
or
mov
test
inc
push
aam
retf
inc
test
daa
push
fwait
inc
sbb
jl
mov
test
xor
add
dec
in
test
movs
lahf
sbb
js
push
daa
mov
sbb
or
rcr
or
and
cmp
push
add
loop
pop
push
nop
ds
lods
cmp
(bad)
cmp
shr
mov
xchg
(bad)
loopne
inc
sub
mov
not
xlat
adc
adc
icebp
adc
mov
inc
mov
int3
(bad)
enter
sbb
mov
push
or
push
adc
push
pop
mov
adc
xchg
xchg
cmp
jno
or
fsubrp
jne
sub
fsub
popa
dec
mov
aas
jmp
xchg
call
bound
push
push
das
xchg
out
mov
xor
(bad)
cmp
call
push
push
dec
add
xchg
jle
mov
hlt
add
adc
cmp
pushf
xor
gs
mov
pop
pop
xor
dec
adc
xchg
fld
stos
inc
adc
(bad)
push
add
and
not
fs
xchg
lahf
sub
ins
retf
ss
mov
dec
xchg
fbstp
mov
stos
lds
ins
adc
fstp
xchg
sub
rcl
adc
add
and
retf
adc
or
shl
lock
cmp
inc
push
sub
ror
mov
fcom
fcmovu
xchg
ss
xor
push
lock
cs
stos
ret
in
(bad)
lods
mov
dec
cmc
scas
jae
xchg
xchg
xor
push
mov
and
idiv
js
int3
aam
std
cmps
sbb
(bad)
retf
(bad)
scas
xchg
pop
mov
ret
mov
fidiv
sbb
in
jnp
lock
cs
pop
call
xor
mov
mov
jo
retf
int
test
(bad)
jb
in
(bad)
fbld
repz
(bad)
std
mov
(bad)
movs
mov
call
movs
and
and
fcom
retf
xor
sub
cdq
fs
add
test
dec
jle
lahf
lds
cmps
dec
popf
ins
hlt
jecxz
shl
stos
cld
jb
and
dec
leave
dec
int
bound
or
jle
inc
out
mov
sti
jle
sub
adc
mov
cmps
push
je
pop
mov
hlt
mov
out
add
adc
and
repz
imul
jp
push
inc
push
ins
fldcw
aaa
popa
or
ror
pop
test
mov
inc
retf
xlat
cmp
inc
jmp
and
enter
push
fwait
sub
jnp
adc
pop
sbb
(bad)
test
adc
xchg
lahf
cld
ss
cmp
push
mul
mov
repnz
imul
mov
stc
push
shl
outs
fxch
int
push
cmp
test
stos
(bad)
jns
push
js
xchg
ds
cdq
imul
pushf
sahf
jmp
enter
cwde
xchg
clc
cdq
jle
mov
xor
mov
ror
in
popf
sahf
test
fldcw
pop
(bad)
inc
fst
sub
dec
cmp
jl
ins
cwde
inc
cmp
add
addr16
pop
scas
push
push
or
inc
aaa
out
adc
mov
add
and
mov
dec
fwait
sbb
call
leave
aad
xor
imul
xor
or
pusha
cmp
inc
mov
xchg
mov
icebp
sar
cdq
mov
mov
scas
mov
push
addr16
or
pop
push
or
aam
push
dec
sub
mov
std
aad
(bad)
cld
push
or
push
jo
or
mov
imul
out
jns
pop
mov
inc
sahf
and
xchg
pusha
lods
xchg
add
jne
cmp
leave
cmps
in
add
and
int3
pop
mov
std
adc
add
int
shl
test
dec
jmp
je
in
jb
cmp
out
jo
push
xor
mov
lea
dec
stos
mov
aad
mov
xchg
sbb
cmp
enter
pop
jg
cdq
sahf
in
enter
or
pushf
and
fdivr
div
ins
xor
and
pushf
cmp
pusha
xchg
pop
pop
pop
ja
das
adc
and
(bad)
loope
sub
cmp
sub
ret
jmp
outs
inc
es
mov
shr
mov
mov
mov
shl
inc
push
enter
pop
push
hlt
xlat
cs
adc
std
and
jmp
pop
add
inc
into
mov
jns
push
push
pop
cmc
add
(bad)
jecxz
lods
xchg
rcl
loopne
(bad)
hlt
pop
sahf
xchg
jae
and
fs
push
call
jp
inc
movs
int
fbstp
adc
ds
dec
xor
(bad)
dec
add
jp
push
sub
sahf
into
movs
mov
test
(bad)
lock
movs
xor
sbb
aad
adc
pop
adc
and
in
adc
lods
mov
aam
add
not
in
adc
or
xlat
pop
or
mov
cwde
test
(bad)
fild
pop
mov
daa
mov
jbe
mov
sub
outs
mov
push
cmps
mov
mov
mov
scas
idiv
cmp
shl
mov
cwde
stos
stos
iret
out
adc
dec
mov
call
imul
(bad)
loope
jns
dec
jae
loope
icebp
jno
shl
mov
push
aas
movs
mov
push
aam
jnp
aaa
dec
mov
mov
arpl
pop
mov
cld
pop
cli
pop
and
lahf
leave
push
and
sbb
xor
sub
push
fdivrp
push
xor
movs
mov
pop
xor
mov
xchg
push
imul
fadd
xor
ss
cmc
or
cld
xchg
xchg
add
test
in
stos
iret
push
jecxz
sti
or
sbb
sbb
lods
mov
(bad)
mov
mov
stos
scas
es
retf
xor
scas
ds
sub
lock
in
cli
sub
aaa
movs
out
mov
mov
push
rol
fiadd
ret
sbb
push
inc
out
sahf
xor
dec
and
bound
(bad)
imul
or
jnp
addr16
jae
mov
dec
popa
outs
push
scas
je
pop
iret
aam
sub
xchg
adc
mov
sub
div
cmp
imul
fimul
mov
xchg
shl
or
inc
dec
lahf
mov
dec
push
shr
aad
lods
or
outs
and
pop
lds
loopne
movs
in
mov
mov
rol
cmovg
xor
outs
xchg
mov
neg
pop
iret
adc
std
jnp
push
loope
jecxz
out
iret
pop
mov
in
lock
sbb
adc
popa
mov
mov
mov
std
aaa
add
loope
inc
sbb
mov
add
arpl
mov
movs
test
aas
(bad)
test
adc
(bad)
dec
pop
ds
out
icebp
es
sub
in
pop
mov
je
xchg
sar
test
shr
ror
push
mov
rcr
and
mov
sar
test
jmp
add
adc
xor
or
adc
gs
out
aad
and
sbb
(bad)
out
push
fucomi
ret
jno
push
add
push
gs
test
(bad)
mov
ins
hlt
movs
repz
call
shr
adc
xchg
xor
imul
mov
neg
jb
or
and
imul
add
inc
test
sbb
mov
or
shl
jg
cmp
mov
mov
iret
mov
mov
or
ror
xchg
bound
call
mov
hlt
(bad)
bound
and
ds
das
sub
cmp
dec
mov
ins
cld
pop
cmc
xchg
inc
and
das
or
cwde
add
adc
sbb
jno
cmp
jo
jo
(bad)
ja
retf
loop
cld
cmp
sahf
pop
in
xchg
cmp
in
push
inc
dec
imul
or
or
mov
(bad)
test
test
daa
fs
aam
fild
aam
fcomi
mov
xor
ss
and
fsubp
xchg
sub
cmp
mov
or
jno
call
jge
popa
enter
idiv
inc
shl
or
pop
mov
dec
mov
rcl
jb
rcl
shr
aam
cwde
rcl
shl
jno
out
bnd
fsubr
xchg
cmp
cmp
jae
int3
shl
mov
adc
sub
ins
scas
stos
mov
xchg
jbe
sbb
jns
movs
fld
mov
pop
sub
pop
cmp
jno
mov
imul
add
es
ret
add
mov
inc
shr
xlat
aaa
das
sbb
jp
call
push
xchg
sub
ds
mov
pop
neg
call
arpl
popf
lods
fiadd
sbb
jo
pop
add
cmp
sti
pop
adc
(bad)
(bad)
cmp
xchg
call
nop
pusha
dec
out
loopne
cmp
div
loopne
dec
and
ds
mov
pop
sbb
mov
pushf
push
in
push
mov
imul
xchg
mov
retf
lods
hlt
add
mov
ret
sbb
mov
jp
iret
pop
out
push
in
aas
add
(bad)
fisubr
test
push
inc
pop
push
mov
mov
arpl
rcl
pop
je
add
repz
ja
cmps
test
jge
push
stc
jp
add
neg
stos
mov
in
mov
clc
lds
xlat
mov
sbb
dec
imul
sub
xor
mov
cld
es
sub
xchg
imul
push
les
aam
cmps
jnp
cmp
ins
adc
mov
sahf
call
fwait
add
daa
out
rol
lods
retf
push
add
icebp
mov
rcl
movs
inc
int3
cmp
movs
mov
sbb
cmp
cwde
xor
push
and
and
into
outs
retf
mov
fs
out
mov
dec
out
pop
add
movs
mov
sti
adc
jns
sbb
out
adc
xor
(bad)
rcr
add
mov
pop
(bad)
lahf
mov
xchg
test
mov
ins
cmp
call
mov
stos
sar
ins
push
mov
jnp
test
stos
js
sub
in
jbe
lea
inc
cmp
dec
pop
push
lds
pop
(bad)
sbb
call
pop
pop
fcom
clc
mov
sbb
push
out
push
daa
dec
mov
mov
scas
mov
sbb
jp
mov
jae
iret
sbb
fld
xor
push
cmp
mov
sbb
dec
loopne
cmp
dec
pop
mov
push
add
sbb
cwde
mov
or
pop
in
cli
arpl
mov
jmp
out
cmps
mov
cmc
fwait
dec
es
cdq
inc
pop
sbb
fwait
xchg
jns
popf
dec
xor
int
daa
iret
cdq
xor
or
mov
push
adc
pop
sub
in
nop
sti
pushf
movs
mov
and
ret
cdq
push
aaa
iret
lahf
jbe
je
repnz
leave
not
(bad)
shl
outs
push
mov
adc
xchg
je
push
movs
adc
clc
fs
sub
pop
mov
gs
fsubrp
(bad)
mov
sub
loop
mov
mov
ins
cmps
xor
or
mov
icebp
les
sti
xchg
jb
scas
clc
inc
test
xor
repz
jns
call
push
popa
mov
mov
lds
jo
shl
popf
cmps
int
nop
clc
pushf
and
xor
mov
into
jo
pop
enter
mov
cli
lock
lds
cli
jmp
retf
es
cmps
imul
fucomi
enter
push
lahf
out
test
je
bound
pop
pop
push
add
xor
sub
sub
or
adc
ret
sbb
das
fndisi(8087
jecxz
test
pop
ror
scas
cmp
fld
push
adc
jo
rep
xchg
imul
or
push
cmc
std
out
pop
and
cld
jmp
shl
mov
lods
(bad)
bound
cwde
je
pop
xor
pop
cmp
xor
arpl
inc
lahf
inc
adc
cmps
div
push
push
dec
mov
retf
mov
(bad)
push
cmp
(bad)
outs
push
adc
mov
fcmovnbe
xor
div
sbb
scas
or
scas
pop
in
ret
mov
ins
adc
xor
pop
clc
pushf
jecxz
cmp
in
push
pop
jl
and
sub
xchg
xor
dec
cmp
lahf
xor
xchg
enter
pop
test
mov
std
jg
rcl
jecxz
clc
pop
cs
das
fstp
and
inc
add
pushf
daa
test
cmp
loopne
pop
inc
jno
sub
cmp
jae
cdq
add
push
or
je
xor
ficomp
cmp
lahf
(bad)
sti
cmp
int
mov
dec
xchg
dec
test
mov
aam
push
scas
cmp
pushf
sti
adc
mov
mov
push
xchg
mov
es
mov
jno
mov
cmp
test
adc
lds
scas
aaa
push
rcl
xor
rol
push
sbb
mov
rcr
xor
int3
and
add
popa
cmps
imul
xor
call
daa
dec
hlt
push
inc
mov
pop
inc
loopne
xchg
adc
jmp
inc
mov
or
aad
ins
push
dec
push
aas
jp
adc
hlt
sub
out
and
pop
cdq
push
scas
cld
or
test
push
push
jno
inc
push
cmc
jae
(bad)
outs
ds
inc
out
mov
dec
lea
popa
scas
jg
push
into
in
add
sub
xor
clc
fistp
cmc
sbb
mov
pop
adc
add
cmps
sbb
mov
loopne
inc
dec
and
daa
adc
inc
aam
push
xlat
stos
dec
pop
sub
cwde
lods
je
mov
ror
in
rcr
movs
(bad)
in
mov
push
mov
popa
pusha
ror
push
adc
enter
xor
cmp
ret
inc
inc
inc
or
jo
jns
test
mov
xchg
shl
add
mov
fisub
push
sbb
dec
sbb
lods
das
mov
sub
pop
jbe
in
ficom
pusha
jp
jbe
jle
add
add
fdiv
dec
and
loopne
ds
add
leave
inc
inc
xor
(bad)
dec
inc
cmp
mov
cmps
mov
cwde
xor
cmp
in
dec
xchg
push
push
fbstp
add
mov
sti
leave
dec
pop
rol
add
dec
loopne
inc
rol
push
stos
jecxz
mov
(bad)
pop
pop
(bad)
sysexit
and
in
neg
fs
sub
mov
pop
xor
movs
loope
sub
add
xor
and
out
popa
push
jp
out
or
(bad)
pop
jp
fcom
cld
push
and
cmps
push
inc
add
pusha
ficomp
js
sbb
jmp
inc
ja
fwait
test
mov
sub
push
pushf
add
daa
jae
sbb
mov
push
ds
cld
fist
enter
cmp
dec
inc
cmps
sbb
popa
ins
sbb
xchg
in
fcmovnu
cwde
pop
outs
adc
ffree
push
je
mov
leave
hlt
pop
or
push
stos
push
or
dec
jmp
(bad)
add
test
fstp
mov
div
(bad)
jbe
cmp
mov
xchg
sbb
inc
jecxz
sahf
inc
push
stc
in
and
xchg
sbb
add
dec
or
push
clc
(bad)
int3
outs
les
(bad)
in
retf
sbb
mov
xchg
daa
mov
dec
(bad)
xchg
adc
inc
test
jmp
(bad)
leave
push
jae
adc
mov
cmp
mov
cmp
ds
fcmovu
jp
jle
hlt
cmps
fisubr
xchg
outs
sbb
scas
sbb
sub
cld
fidivr
aad
sbb
sbb
push
daa
in
mov
fcomp
or
movs
add
mov
popa
and
test
into
push
scas
aad
hlt
pop
and
dec
pop
or
hlt
cmp
pop
fs
cmc
lods
fisubr
mov
hlt
sbb
add
push
add
leave
hlt
inc
add
bound
int3
call
adc
xor
ins
retf
cmp
mov
sahf
int3
test
mov
dec
jge
cmp
fidivr
lds
nop
sbb
cmp
lea
xchg
cmp
fs
mov
ins
scas
(bad)
xor
or
sbb
mov
in
jns
fistp
adc
xor
jecxz
and
lea
lods
(bad)
jno
xchg
push
inc
(bad)
and
daa
adc
and
lods
xchg
jmp
inc
inc
sbb
xor
loope
pop
push
push
rcl
xchg
inc
adc
mov
arpl
inc
cmp
cmps
mov
pmullw
xchg
inc
jb
push
add
cs
leave
sar
inc
adc
(bad)
xor
addr16
fild
sahf
pop
pusha
sbb
mov
pop
mov
mov
test
aam
in
movs
(bad)
mov
fs
cmp
pop
push
push
xlat
mov
push
or
add
pop
stos
pop
pop
and
push
mov
adc
sbb
lock
sub
cs
xor
je
fs
xchg
dec
sub
dec
push
inc
cdq
push
ins
sahf
xchg
cli
mov
inc
mov
add
fs
(bad)
scas
es
ja
dec
into
inc
xor
xor
jecxz
lahf
loop
cmp
push
mov
jbe
push
jl
mov
cld
icebp
scas
cmp
push
xor
loopne
dec
adc
dec
aad
or
bound
popa
ins
cmps
enter
movs
adc
sbb
lods
push
sub
add
pusha
jecxz
xchg
and
jo
(bad)
(bad)
dec
adc
ss
mov
stos
aaa
repz
xchg
cmps
cmp
adc
jg
sbb
fs
test
lea
shl
jo
movs
pop
jl
ficom
pop
imul
mov
sub
mov
loope
sahf
jne
push
pop
or
das
sbb
mul
call
adc
repnz
fmul
add
mov
(bad)
dec
push
add
mov
inc
sbb
neg
sbb
ds
mov
mov
mov
pop
dec
fimul
xchg
in
pop
and
fsub
jp
outs
ret
movs
xchg
shl
lds
xor
mov
call
lods
or
je
into
mul
rol
add
in
test
in
xchg
loop
je
(bad)
out
mov
and
jge
stc
inc
(bad)
loop
outs
test
xor
sub
cs
sbb
xchg
hlt
cmps
jl
dec
aas
dec
fld
xor
jbe
ja
data16
or
sub
inc
or
sar
push
js
or
ret
cld
shl
inc
enter
jae
(bad)
dec
sbb
mov
movq
test
dec
ins
jne
and
ss
nop
movs
cmc
jnp
or
jmp
enter
ins
dec
pop
push
push
xchg
or
mov
inc
imul
xor
shl
ins
ja
jl
gs
add
cmp
mov
popa
mov
lock
inc
mov
push
cmp
sbb
rcr
hlt
dec
imul
inc
push
pop
movzx
(bad)
pop
loopne
cmp
pop
fs
xor
lock
cld
adc
unpckhps
dec
iret
mov
jl
mov
ins
sub
into
pop
(bad)
cmps
dec
lock
pop
lds
rol
xadd
call
cli
cmp
fs
iret
push
movs
xchg
adc
outs
dec
pushf
mov
ss
dec
outs
ins
es
or
inc
mov
movs
sub
xchg
clc
mov
pop
fbld
xchg
data16
rcr
cmp
xchg
mov
push
loopne
test
in
(bad)
sbb
push
adc
mov
ss
adc
test
call
push
xchg
mov
in
loop
movs
adc
popf
sbb
(bad)
mov
mov
xchg
mov
icebp
lods
sbb
frstor
sbb
sbb
xor
cmp
cwde
fistp
xchg
ror
cwde
fidivr
inc
ret
pop
pop
outs
xchg
into
imul
sbb
imul
lds
retf
mov
pop
adc
int
dec
mov
aad
pop
push
sub
cmc
in
and
push
dec
stos
cmp
or
xchg
or
jle
adc
fcom
fidivr
jo
test
jb
scas
xor
inc
jecxz
stos
jbe
sub
sti
cli
cmp
mov
ret
rol
and
call
lea
push
sub
repz
mov
rol
xor
push
mov
mov
cmp
mov
ret
cmp
sbb
out
mov
sub
out
outs
and
push
(bad)
retf
fisub
mov
mov
sub
and
xor
inc
mov
pop
mov
loop
in
jg
lods
pop
mov
push
mov
repz
es
test
mov
pop
dec
mov
jp
pop
or
sbb
mov
or
add
addr16
adc
or
mov
push
pop
add
cmc
neg
xor
mov
pop
(bad)
mov
push
pop
sub
sbb
in
icebp
dec
push
lahf
les
shl
addr16
test
xor
push
std
repz
cmp
movs
xchg
ins
jae
sbb
int3
enter
pushfw
(bad)
adc
mov
cmp
lods
dec
out
ja
xchg
call
jns
iret
pop
mov
movs
push
pop
out
aas
mov
mov
in
adc
retf
and
inc
pop
jl
retf
xchg
retf
add
mov
pop
sar
movs
dec
jmp
stos
xor
rcr
push
sub
mov
fdiv
and
add
rol
xor
(bad)
adc
mov
int3
repz
jb
xor
or
prefetch
or
inc
jo
and
js
mov
add
test
inc
out
xor
call
and
imul
dec
fs
xor
or
inc
inc
in
fimul
xchg
xchg
fld
xor
cmp
and
push
mov
stc
aas
mov
sar
or
cmp
mov
ja
loope
adc
es
lock
pop
int
mov
adc
xor
in
pop
dec
mov
sbb
mov
push
sub
adc
mov
dec
mov
lock
jg
iret
pop
adc
and
lea
inc
jmp
test
sub
sub
jg
scas
pop
cmp
ret
call
add
cmp
pushf
scas
fcomp
in
sbb
jnp
pop
jmp
mov
rcl
pusha
cli
and
in
and
rol
hlt
retf
add
clc
pop
and
xchg
push
mov
int
pop
cmps
cmp
jmp
dec
mov
sar
dec
cmps
sub
call
inc
aam
jge
add
int3
mov
ds
rcr
rcr
leave
aam
ss
in
repnz
and
xchg
outs
clc
(bad)
add
pop
int3
mov
dec
pop
and
into
adc
out
out
mov
fimul
adc
fnstsw
sbb
push
cmps
imul
sbb
cmp
and
std
cs
push
je
repz
push
fidiv
jnp
adc
mov
les
mov
lock
lahf
retf
jmp
popf
and
(bad)
out
ja
rcl
add
inc
cwde
xchg
mov
(bad)
jle
mov
out
iret
add
cmps
adc
xor
sbb
push
sub
sbb
and
push
sub
xchg
pushf
sbb
cdq
push
push
add
xor
outs
fist
out
arpl
repnz
and
es
or
aaa
enter
retf
xor
xchg
sbb
xchg
imul
pushf
mov
dec
add
xchg
push
out
(bad)
pop
retf
in
fldcw
or
sbb
fistp
pop
xchg
add
mov
sub
sbb
fstp
fisttp
lea
mov
xor
shl
or
jp
aaa
xchg
xchg
pop
jg
push
(bad)
lods
cwde
jmp
hlt
xchg
fdivr
mov
movs
jle
push
fcomp
cdq
or
imul
leave
mov
mov
jb
xchg
in
ret
imul
sbb
sar
pop
scas
inc
imul
cmp
(bad)
or
es
pop
test
cmp
xchg
jg
mov
out
out
push
std
rcl
ds
movups
xchg
push
shr
dec
xor
sbb
sahf
ins
imul
cmp
pop
bnd
xchg
add
add
and
(bad)
push
dec
adc
cmps
mov
xchg
ds
mov
je
xchg
in
sbb
stos
adc
jg
push
sahf
and
add
add
sbb
push
push
cmp
mov
outs
mov
dec
in
nop
mov
push
and
adc
dec
mov
dec
leave
jg
mov
fist
xor
in
fbstp
test
sbb
hlt
ja
mov
(bad)
pushf
jp
and
out
ins
test
mov
push
adc
push
into
mov
sub
cmp
or
pusha
pop
ret
aas
jmp
dec
cmps
xchg
shr
sub
cdq
retf
retf
mov
(bad)
xchg
sub
shl
in
mov
sbb
ins
xchg
jmp
lock
xchg
shr
cmp
jae
jl
fwait
shr
sub
or
xchg
sub
add
out
dec
cwde
pusha
stc
xor
mov
or
faddp
adc
ins
add
ins
jecxz
and
mov
dec
lods
les
xchg
iret
inc
or
(bad)
push
cmc
jp
fsubr
add
outs
or
movs
pop
outs
inc
pop
mov
int3
retf
imul
mov
pop
aad
cmp
ja
xor
xchg
push
and
movs
cs
cmp
cmp
fwait
lods
(bad)
mov
sub
cwde
cmp
cmp
jno
adc
dec
sbb
inc
fistp
addr16
ins
rcr
dec
mov
jge
cmp
pop
pop
clc
push
iret
iret
je
movs
shl
mov
jbe
mov
test
test
js
mov
sbb
or
fiadd
hlt
cmc
pop
or
mov
jle
loop
fcmovnb
jb
xchg
sahf
and
into
imul
stc
adc
jo
pop
test
xor
ss
lds
test
imul
scas
xchg
jns
fidiv
sahf
sub
jnp
pushf
inc
into
loop
gs
jmp
pop
push
add
mov
xchg
mov
inc
mov
jmp
popa
mov
jo
jns
imul
push
pop
xor
call
pushaw
jo
fist
js
jmp
scas
or
mov
ins
push
es
pop
or
and
(bad)
pop
push
in
push
or
popf
repnz
pop
(bad)
cmp
repz
scas
xchg
sti
pushf
jl
and
dec
shl
push
adc
imul
icebp
adc
lods
jbe
fwait
or
pusha
fidivr
ds
jmp
rcl
dec
lods
shr
jo
or
into
sbb
jle
jbe
mov
retf
in
lods
ret
xchg
and
ret
add
dec
cmp
hlt
fidivr
dec
mov
cli
jo
in
pop
ret
sbb
push
and
das
push
aas
repz
mov
push
popa
retf
jnp
icebp
push
mov
lock
in
inc
push
jno
mov
fldl2e
cwde
sbb
repnz
mov
xchg
cmp
push
lods
adc
adc
jp
movs
mov
sub
mov
add
dec
movs
fimul
aam
scas
std
(bad)
adc
(bad)
ins
or
fstp
xor
outs
loop
and
pusha
stos
in
add
(bad)
push
jg
adc
stos
jg
mov
mov
and
add
dec
clc
clc
sbb
jg
dec
in
push
xchg
mov
xchg
fistp
dec
mov
pop
loope
into
popf
into
mov
cmp
js
sub
inc
iret
or
jmp
int
in
xor
pop
scas
in
mov
xor
sbb
dec
cmc
or
inc
jnp
nop
inc
(bad)
jns
into
pusha
push
std
movs
sub
cld
push
out
pushf
fimul
adc
mov
mov
pop
int3
leave
jge
add
and
sbb
enter
imul
mov
jge
test
jo
pop
ret
mov
mov
mov
fimul
sub
push
fistp
fild
pop
pushf
neg
les
jbe
enter
movsx
mov
push
jo
sub
dec
mov
dec
jbe
push
push
or
mov
pop
jno
std
add
inc
and
dec
jae
xchg
or
aam
push
and
and
ja
out
(bad)
mov
cmp
lods
xor
jns
pop
ficom
ret
jo
mov
xchg
das
fst
lock
cmc
ret
in
sbb
xchg
sti
add
test
dec
adc
les
cmp
add
mov
mov
gs
das
jp
and
mov
sbb
pop
retf
sub
pop
mov
cmps
pop
or
or
pop
cmp
inc
add
adc
dec
jae
pop
daa
mov
adc
xor
je
and
mov
sub
in
imul
cli
push
test
cmp
(bad)
cdq
mov
js
aam
mov
mov
mov
fnstcw
(bad)
dec
or
add
call
mov
(bad)
jo
mov
js
sbb
dec
mov
(bad)
add
jbe
loop
popf
mov
dec
mov
gs
mov
jns
and
jb
push
pop
inc
ins
adc
scas
je
dec
ds
pushf
not
dec
lahf
enter
push
aaa
sti
fiadd
jg
popa
sub
retf
mov
mov
push
stc
(bad)
mov
xor
gs
inc
jmp
es
jg
jno
jl
ficom
and
movs
sub
xlat
leave
mov
aas
out
jp
jmp
mov
fcom
fcmovu
test
cwde
jmp
mov
ret
lea
inc
es
xor
sti
mov
mov
mov
inc
or
xchg
icebp
jo
js
popfw
sub
cmps
jo
adc
jnp
idiv
retf
fs
jmp
out
and
jnp
cmp
mov
das
inc
xchg
mov
pop
dec
test
lea
pop
idiv
test
xchg
pop
mov
out
push
loop
test
lock
(bad)
cli
xchg
mov
sbb
loope
push
jle
fnsave
dec
pushf
push
out
mov
pop
pop
jmp
mov
movs
popa
jb
mov
(bad)
test
bound
xchg
push
cmp
repnz
js
jl
je
add
lea
sbb
sahf
scas
ja
int
mov
fist
dec
sbb
add
lods
jb
adc
js
add
fiadd
cli
sub
mov
adc
xor
pop
pop
jge
mov
outs
test
in
lods
or
adc
pop
fwait
pop
adc
mov
outs
data16
jp
mov
inc
xor
dec
cmp
ins
addr16
sbb
jle
cld
shl
or
mov
fdiv
adc
hlt
inc
jmp
add
sub
dec
ret
xchg
fbld
jle
add
leave
rol
jecxz
jmp
jo
fcom
fild
jg
mov
push
js
adc
sub
stos
rcl
neg
popf
push
cmc
ins
dec
loope
sbb
repnz
cmp
adc
mov
inc
lock
mov
imul
pop
lds
cmp
pop
stos
loopne
cs
mov
mov
add
cs
popa
jp
outs
jge
xchg
loop
sub
dec
push
(bad)
xor
pop
in
pop
movs
iret
push
cmp
lods
fisttp
and
push
mov
fstp
and
sahf
push
cs
sbb
rol
aam
xchg
xchg
fimul
mov
jmp
inc
mov
pop
fcmovbe
adc
xchg
and
cmps
ficomp
imul
out
call
sti
jae
xor
and
ins
data16
sub
(bad)
idiv
movs
lock
mov
jp
xor
imul
adc
mov
sbb
cmc
les
int
cmp
test
sub
retf
jge
(bad)
icebp
mov
in
sbb
cli
fistp
xor
stc
cld
(bad)
xlat
int3
push
out
mov
jbe
cld
pop
pop
fldln2
pop
sbb
jo
ficomp
(bad)
cld
add
aas
xchg
inc
sub
xchg
push
jmp
jno
xchg
retf
aaa
ficomp
movs
lock
xlat
stos
and
adc
jmp
push
dec
sar
fisub
neg
jb
push
lock
jmp
lock
into
jl
add
retf
jp
and
inc
mov
push
sbb
in
inc
cmp
xor
mov
iret
mov
shl
and
aam
stos
or
call
push
cmp
xor
mov
fbstp
lock
fst
mov
iret
inc
retf
mov
cli
jmp
rol
ret
repnz
jmp
push
lds
dec
out
or
mov
int3
dec
lea
xchg
dec
out
popf
sbb
jp
cmps
sub
mov
sbb
pop
pop
sar
scas
adc
arpl
jbe
sahf
addr16
aad
cmp
lea
rcr
mov
test
les
mov
aam
ret
dec
sbb
(bad)
and
neg
clc
je
dec
sub
mov
fcmove
les
aam
sub
repnz
sbb
push
ins
push
out
loope
xchg
xor
xlat
leave
dec
call
push
sbb
dec
inc
adc
xchg
xlat
mov
mov
movs
arpl
add
cmp
xor
call
bound
repnz
dec
cmps
mov
call
adc
inc
xor
sub
enter
fsub
and
push
xchg
xor
sub
pop
cwde
push
clc
sbb
mov
mov
add
retf
jge
in
aad
(bad)
mov
pop
cmps
stc
out
std
jle
clc
push
mov
jmp
cmp
das
jmp
test
lock
or
jg
mov
xchg
iret
or
shl
aas
xchg
mov
imul
in
inc
inc
out
xchg
(bad)
cdq
scas
inc
cmp
aad
scas
mov
cmp
int
rcr
inc
test
push
sub
ins
push
mov
jl
xor
lods
pop
ret
ins
or
(bad)
scas
stos
xor
jno
xchg
cs
sbb
and
int
sahf
fild
xor
fwait
push
jnp
retf
aaa
xchg
scas
and
aam
jp
sbb
push
mov
or
jo
sbb
in
mov
xchg
shl
clc
test
(bad)
mov
mov
arpl
push
sbb
push
and
sbb
cs
fsub
scas
lds
and
sub
aad
mov
or
nop
and
mov
dec
dec
stc
fistp
xor
(bad)
loop
mov
jle
leave
or
icebp
xchg
mov
inc
iret
retf
cmp
test
out
cmp
imul
or
leave
dec
enter
and
fidivr
push
out
inc
imul
mov
or
adc
adc
ret
or
mov
cld
outs
fiadd
(bad)
out
add
retf
push
data16
jp
loop
push
sbb
shr
inc
pop
xor
in
jecxz
ret
ficomp
jae
push
daa
adc
add
adc
push
dec
mov
xchg
xor
mov
push
stos
ret
in
sbb
push
xlat
push
pop
jnp
dec
out
repnz
hlt
mov
popf
mov
int
sub
or
push
jecxz
fldcw
ins
test
mov
stc
fdivr
jne
add
int3
xor
pop
and
mov
xchg
lahf
add
push
stc
xchg
push
xchg
xor
or
mov
repz
out
test
loop
pop
stos
jno
arpl
outs
mov
inc
xchg
xlat
pop
jge
xchg
inc
sbb
int
mov
mov
or
adc
add
pushf
jne
jecxz
sahf
or
lea
clc
adc
push
aas
mov
lock
lea
pop
das
push
or
out
xchg
adc
(bad)
out
and
push
cld
jmp
dec
sub
pop
adc
or
adc
xor
out
shl
pop
xchg
idiv
call
hlt
clc
shl
ret
push
movs
icebp
test
inc
imul
and
jo
pop
fldcw
pop
inc
daa
test
shl
mov
out
sub
fld
sub
int3
mov
adc
dec
ja
(bad)
cwde
movs
enter
ja
sar
mov
mul
popf
inc
dec
loope
xchg
sub
shr
cmp
xchg
add
mov
push
pop
call
push
mov
jmp
and
mov
xor
pop
cmp
push
push
rcl
lock
rcl
add
rol
stc
sub
xor
hlt
repnz
into
sbb
out
popf
aaa
jecxz
and
int3
in
stc
mov
or
xchg
jmp
dec
sub
fiadd
adc
pop
fnsave
add
es
and
sbb
push
cmp
in
cmps
in
xor
repz
lock
mov
loopne
or
ret
into
shl
add
hlt
jbe
push
and
xchg
daa
xchg
jp
jle
jg
push
shl
jmp
pusha
(bad)
ja
fnstcw
jl
fs
addr16
div
jo
adc
dec
cmp
cmps
cmp
dec
pop
mov
jp
loopne
push
pusha
push
jmp
lods
mov
dec
mov
sbb
enter
xor
mov
(bad)
aam
push
xor
das
jg
retf
sti
jmp
and
dec
shr
and
mov
adc
sahf
mul
cdq
xchg
add
push
out
sbb
mov
mov
mov
scas
inc
and
sahf
mov
mov
mov
adc
das
lds
retf
mov
mov
pop
in
stos
push
inc
sub
adc
adc
and
pop
push
cmps
pop
sti
pop
test
jnp
jmp
ja
mov
lahf
out
or
adc
mov
xlat
mov
and
cmc
push
mov
je
shl
or
inc
sub
lods
fisub
je
xor
cmovle
out
aad
cmc
mov
adc
sbb
icebp
xor
jb
loopne
pop
movs
and
mov
std
adc
push
repz
repnz
xchg
xchg
(bad)
popa
mov
and
outs
cmp
popf
jnp
cmp
jp
or
cmp
in
rcr
fdivr
and
out
adc
cmp
stos
mov
cwde
iret
sti
test
inc
into
cs
(bad)
das
das
adc
scas
sub
out
fist
sbb
push
retf
fcomp
out
cmp
les
pop
cli
mov
in
lock
sti
mov
in
(bad)
cmps
ret
inc
(bad)
sbb
mov
aam
pushf
mov
(bad)
lods
or
ret
std
ja
adc
sti
push
fs
daa
jp
outs
xchg
push
imul
cmp
jl
jae
adc
shl
xor
or
loopne
ss
mov
xchg
xor
jo
out
fldcw
js
or
(bad)
pushf
jmp
cmc
arpl
mov
or
xchg
push
and
dec
(bad)
xchg
dec
retf
dec
clc
in
ds
xchg
jcxz
cmp
es
xor
leave
(bad)
repz
add
clc
dec
sbb
or
scas
adc
jmp
call
push
scas
xor
mov
imul
nop
jno
inc
push
cmp
cli
inc
lea
ins
arpl
push
pushf
out
outs
jle
(bad)
jne
pop
test
test
nop
and
int
ficom
fadd
jo
dec
call
lds
jnp
inc
lahf
jmp
pop
cmp
out
fmul
ja
test
in
or
pop
push
or
dec
sbb
(bad)
push
aad
cmp
iret
add
loopne
retf
js
sbb
jecxz
or
call
pop
lahf
movs
cmps
sub
cmc
fdivrp
cmps
cmp
lods
pop
xchg
cmp
mov
data16
and
dec
sbb
jp
xchg
sbb
scas
push
repz
push
mul
push
call
fwait
ss
mov
aam
jmp
pop
xlat
sbb
jbe
in
mov
imul
sub
clc
retf
adc
sub
dec
and
cmps
pop
pop
jge
test
imul
mov
test
sti
push
push
or
out
sub
pop
adc
pop
rcl
pop
xor
adc
cmp
mov
xchg
repnz
xchg
rol
or
popf
cs
sahf
jecxz
and
cdq
loopne
push
xchg
stos
sar
push
jo
push
sbb
xchg
mov
ja
ins
fbld
cmp
test
cmps
cmp
pop
stc
out
loopne
cdq
nop
lods
inc
xchg
cmp
cmp
adc
cmp
cmp
dec
(bad)
repnz
std
jae
loope
dec
and
jg
scas
pop
cmp
xchg
dec
inc
cld
leave
out
adc
es
adc
fwait
ror
movs
jle
jno
jmp
sub
repnz
cmp
mov
add
mov
mov
jecxz
fmul
inc
lds
mov
push
xchg
dec
mov
xchg
push
aad
sbb
cmps
or
mov
icebp
idiv
pop
sar
xor
fdivr
es
cmp
mov
add
mov
mov
or
inc
arpl
imul
jmp
mov
jmp
sar
(bad)
or
pushf
sti
stos
popa
mov
(bad)
sbb
lahf
test
scas
xchg
je
add
imul
lahf
fmul
dec
add
test
faddp
cmc
or
xchg
cwde
repnz
pop
push
sbb
and
xor
cmps
adc
jne
js
jecxz
adc
mov
(bad)
outs
and
add
bound
pop
xchg
sub
xchg
aaa
cld
pop
pop
(bad)
fnstsw
(bad)
xchg
sbb
push
push
pop
mov
cdq
outs
(bad)
sbb
sbb
out
aam
jae
ss
dec
fs
imul
nop
cmps
mov
imul
ror
pop
and
and
cld
fcom
mov
push
fisubr
es
push
mov
add
mov
pop
dec
rcl
in
pop
adc
cmp
shl
into
dec
push
mov
mov
sbb
push
adc
stos
inc
pusha
push
push
out
xchg
pop
or
jmp
mov
dec
jle
jge
xlat
std
stos
xchg
dec
adc
pop
jmp
xor
scas
xchg
pushf
scas
xor
and
aam
in
in
test
call
cmp
imul
push
cli
pop
add
cmp
fsubr
pop
imul
xlat
add
ss
lea
movs
and
cvtpi2ps
cmp
jo
jne
fs
enter
push
inc
fs
mov
(bad)
fs
test
add
or
rcr
xchg
fwait
mov
jl
mov
mov
mul
jae
xchg
dec
aaa
inc
xchg
jp
ds
dec
movs
fisubr
mov
fabs
lock
out
or
dec
dec
out
shl
push
rol
sub
loope
in
(bad)
adc
inc
mov
aad
mov
mov
fist
cs
or
imul
sub
inc
daa
lds
push
aad
xor
dec
rol
aad
xchg
sub
mov
mov
out
stc
rsqrtps
push
pop
add
ret
fist
and
fisubr
sub
lahf
retf
aam
test
retf
mov
sbb
fidiv
mov
mov
jns
into
jnp
movs
mov
lahf
xor
pusha
pop
sub
sbb
and
mov
inc
jne
mov
idiv
pop
(bad)
imul
jmp
pop
nop
ret
mov
push
mov
xor
pop
lahf
push
out
cmp
cmp
es
loope
fcom
xchg
aaa
jmp
sub
xor
jnp
inc
sub
dec
cmp
fcomip
jmp
pop
ss
push
jmp
dec
popf
in
jge
(bad)
in
xchg
int
imul
dec
cld
ss
int
std
sbb
sbb
push
pop
call
inc
repnz
data16
and
clc
and
push
scas
cld
mov
add
jg
pusha
outs
clc
xchg
das
mov
sbb
sub
shl
mov
aam
inc
or
out
dec
dec
add
mov
ins
popa
mov
sbb
mov
mov
xor
in
cmp
(bad)
mov
mov
adc
pop
dec
adc
enter
retf
mov
add
adc
js
jl
js
cmpxchg
(bad)
icebp
in
popa
movs
inc
nop
cwde
mov
jb
fsub
cld
in
int
(bad)
dec
mov
mov
bnd
daa
(bad)
pop
sahf
cwde
aam
add
xchg
sar
in
repz
stc
(bad)
xchg
pushf
imul
mov
enter
inc
repnz
jae
hlt
(bad)
xlat
(bad)
(bad)
pop
pop
(bad)
out
call
retf
int
mov
pop
mov
mov
aad
or
in
js
ds
mov
add
aad
sub
mov
inc
cmp
adc
pop
pop
int
cmp
jl
mov
sub
cld
pop
out
adc
into
push
lahf
inc
cmp
mov
js
or
data16
dec
mov
rol
xor
loopne
push
pop
jae
lahf
adc
movs
sbb
and
and
repnz
pop
lods
xchg
dec
pop
dec
mov
adc
add
mov
ja
in
scas
push
cmp
ror
add
call
call
push
daa
and
xor
sub
xor
stos
cmps
ror
adc
rol
imul
ds
ja
xchg
push
jmp
or
xchg
pop
cmp
sub
rcl
mov
push
jp
test
movs
fild
fucom
sbb
inc
mov
inc
inc
jae
pop
repz
mov
ins
bound
loop
in
sbb
idiv
jae
scas
cmp
push
mov
mov
inc
mov
pop
push
fisttp
pop
addr16
mov
push
sbb
call
fld
in
push
xchg
mov
dec
push
adc
pop
push
pop
jne
ror
pushf
jle
stc
hlt
stc
mov
(bad)
push
inc
ja
cwde
daa
lea
pop
or
push
mov
push
mov
inc
inc
mov
mov
call
xchg
push
mov
and
adc
pusha
push
xchg
push
xor
fcomp
test
in
mov
inc
cmp
ja
inc
jmp
fcomp
jnp
(bad)
or
jp
xchg
mov
inc
push
retf
pusha
add
xor
mov
es
cmps
mov
(bad)
ror
clc
lock
cmc
aam
push
xor
push
cmp
je
in
mov
aam
ins
test
jnp
or
mov
pop
repz
sbb
mov
push
int
jbe
stos
sub
ror
int
int3
push
test
mov
adc
arpl
inc
and
sbb
pushf
cld
in
xchg
movs
xchg
or
out
outs
or
rol
aas
ds
add
dec
bound
lea
cld
fadd
and
adc
jge
cmc
lea
ja
push
ds
jp
loopne
sti
loope
sub
xchg
add
push
sub
mov
cli
pop
mov
sub
scas
xor
call
int
dec
add
mov
stos
popf
mov
dec
pop
out
mov
stos
sub
xchg
int3
mov
das
ss
adc
cmp
retf
mov
inc
adc
cwde
in
neg
test
push
popa
adc
movs
bound
ins
leave
xlat
push
hlt
(bad)
mov
icebp
adc
push
addr16
jg
in
or
repz
sub
inc
mov
test
sub
or
sub
push
fdivr
shl
test
xchg
pushf
mov
pop
and
fldenv
scas
dec
and
adc
sbb
jo
sub
js
bound
stc
aam
jb
dec
and
imul
das
dec
adc
pop
sahf
test
ficomp
xchg
mov
into
sbb
mov
(bad)
mov
pop
xchg
ds
leave
cs
pop
or
push
loope
dec
jmp
movs
add
(bad)
in
add
mov
ja
or
nop
push
sbb
sbb
pop
in
jno
pop
mov
and
xchg
pop
or
jg
adc
repz
gs
int3
jmp
adc
mov
in
or
sbb
sub
stos
inc
or
add
xchg
mov
or
xchg
or
sbb
sti
addr16
mov
std
sbb
jl
push
lock
cmps
pop
aad
cmp
dec
pop
nop
and
fmul
jne
ins
outs
pop
fistp
movs
sar
les
loopne
fsub
adc
jle
les
cli
ds
push
xor
dec
lods
loop
sbb
jmp
xchg
ror
xor
jne
fmul
add
popa
cmp
enter
retf
pop
add
adc
pop
mov
rcr
clc
mov
aam
mov
dec
loope
pusha
sbb
mov
or
add
int
test
inc
add
xlat
cmp
mov
fwait
sub
dec
lock
jmp
fist
ds
xchg
mov
arpl
ins
mov
out
or
cmp
adc
pop
leave
das
cdq
imul
mov
jae
lods
pop
mov
outs
ja
xchg
fxch
sbb
sar
stc
sub
fwait
mov
sub
retf
test
push
mov
ja
inc
inc
cmps
mov
sub
add
mov
xor
adc
ins
sahf
mov
dec
jle
mov
or
js
mov
jp
ror
xor
fsub
pop
xchg
shr
cli
call
xchg
mov
mov
pop
in
ficomp
mov
pop
push
call
lods
or
adc
stos
out
int
lea
push
std
xchg
leave
stos
fwait
ret
jb
xchg
or
arpl
ret
pop
pop
hlt
js
cli
aam
ins
(bad)
xchg
mov
pop
popa
xchg
jns
imul
mov
inc
movs
add
arpl
nop
cmc
stc
push
fisub
xor
inc
push
jo
push
imul
mov
jne
stos
cwde
scas
pop
fcmovne
ins
inc
mov
sbb
repnz
js
fmul
mov
xchg
add
mov
int
cdq
push
pop
dec
or
xor
sub
add
cdq
std
inc
mov
sub
mov
enter
ror
retf
jb
popf
or
call
dec
xlat
fnsave
ds
pop
push
ret
test
cmp
and
mov
lods
icebp
popa
adc
outs
pop
stos
adc
sbb
dec
mov
(bad)
mov
and
jp
outs
xor
mov
fiadd
push
xor
rcl
sbb
xchg
cdq
js
dec
mov
add
sub
test
loope
stos
jne
add
repz
jb
in
sbb
jl
inc
ret
sbb
jmp
test
pop
or
cmp
lock
in
adc
test
aas
mov
jae
stos
jns
call
fistp
jmp
xchg
retf
in
lds
inc
jg
xchg
cmp
out
xchg
adc
inc
xchg
adc
imul
mov
jl
xchg
repz
add
pop
aas
clc
out
dec
in
inc
retf
push
iret
inc
sbb
in
push
fisttp
aad
out
mov
xor
mov
aad
push
xor
push
movs
xor
in
pop
call
loope
adc
test
js
(bad)
enter
jg
xchg
into
mov
xchg
(bad)
in
fldenv
ins
sbb
imul
xor
in
iret
fst
xchg
sti
lods
jns
aad
dec
cwde
jp
test
mov
test
mov
add
xchg
add
pushf
vxorps
popf
nop
pop
cmp
cld
xchg
(bad)
and
out
push
stos
sbb
lahf
and
test
mov
shr
dec
xchg
mul
xor
push
call
add
into
aaa
fdivr
inc
fiadd
sbb
xchg
daa
enter
imul
jb
and
jl
push
out
loopne
and
ret
jmp
sbb
movs
sbb
fidiv
test
popf
retf
outs
fmul
mov
inc
scas
into
sar
imul
mov
frstor
pop
push
loop
adc
sub
stos
jle
push
adc
xchg
loopne
inc
add
mov
pop
cdq
mov
pop
push
push
shr
and
xchg
mov
push
sbb
test
loope
test
mov
int
out
repnz
cwde
jno
cmp
jo
into
gs
pop
ret
dec
inc
ror
cmp
jecxz
mov
mov
loope
aam
and
hlt
(bad)
cs
dec
pop
xor
in
adc
in
mov
xlat
scas
enter
shr
inc
ror
popa
mov
inc
jbe
fnstenv
mov
or
adc
ds
popa
dec
or
stos
int3
stos
popf
leave
rol
mov
gs
imul
pop
jmp
pop
mov
push
rcr
mov
pop
test
mov
and
mov
inc
shl
lods
inc
xchg
pop
ret
popa
mov
lods
xor
xchg
mov
fld
adc
mov
test
mov
and
cmp
and
fcomp
mov
call
jmp
stos
add
retf
sbb
loopne
lods
mov
fdivp
mov
nop
inc
lahf
icebp
ja
cmp
shl
or
mov
mov
adc
push
push
push
add
(bad)
lds
fdiv
fcmovnu
and
mov
pop
inc
and
cld
pop
pop
push
int3
mov
push
sub
sub
pop
or
pop
jno
ja
push
(bad)
mov
push
imul
popa
fs
mov
inc
dec
mov
rcl
and
mov
jmp
gs
xor
mov
call
in
shl
jbe
pop
xlat
cwde
bound
push
xor
mov
(bad)
test
enter
loopne
sub
lds
jno
dec
sub
pop
mov
sbb
push
es
xchg
test
aad
popa
cld
jno
add
add
call
bound
add
and
mov
add
cdq
fstp
cdq
sbb
aas
mov
std
bound
fstp
retf
xchg
retf
hlt
sbb
aam
int
daa
fld
adc
push
mov
jmp
xor
add
mov
hlt
call
and
and
adc
xor
xlat
stc
sbb
nop
xor
sub
test
mov
jecxz
fmul
leave
push
movs
pop
pop
scas
fidiv
call
(bad)
stos
push
sub
inc
data16
jmp
cli
aad
pop
cwde
pop
(bad)
sbb
aam
mov
push
or
es
adc
pop
sbb
or
sub
mov
push
mov
push
mov
pop
xor
cmp
cld
jg
cld
fmulp
test
loopne
outs
pop
icebp
call
lods
push
call
add
fs
sahf
sbb
mov
jecxz
jns
xchg
mov
stc
cmp
loopne
lods
mov
push
xor
sbb
nop
pop
movs
or
or
add
push
or
mov
dec
add
iret
adc
dec
movs
fadd
dec
aaa
jnp
ret
fst
mov
jl
jb
dec
pop
imul
imul
jo
jg
jbe
dec
loope
adc
and
loopne
sub
add
jno
mov
pop
inc
mov
mov
scas
pop
sub
sub
dec
dec
or
mov
scas
outs
jno
adc
int
call
xchg
fdiv
sub
cwde
retf
push
lea
ss
ror
das
imul
leave
aad
mov
cmps
out
dec
pusha
lods
mov
(bad)
in
hlt
push
inc
popa
je
push
adc
out
xor
jl
adc
push
jns
xor
fidiv
repnz
cld
jne
test
fadd
mov
fwait
pop
fsubr
sub
out
aaa
inc
cmp
inc
inc
dec
jmp
mov
outs
xlat
mov
sbb
fs
les
and
fild
gs
aas
mov
fsub
mov
mov
jl
pop
and
jmp
mov
nop
(bad)
in
jbe
sub
mov
(bad)
loope
in
frstor
loope
das
jg
mov
icebp
iret
jnp
jecxz
hlt
mov
push
pop
jl
push
rcr
out
xor
cmps
loopne
mov
test
test
int
bswap
mov
push
js
xlat
sbb
mul
fs
pop
inc
shl
push
ds
hlt
cmp
sub
jecxz
inc
dec
or
cwde
mov
addr16
adc
imul
ss
mov
int3
push
mov
jae
pop
sub
ret
shl
cmp
mov
and
popf
dec
lock
dec
pop
mov
ins
xor
fsub
xchg
cmps
sub
sahf
xor
lahf
sbb
xchg
cmc
add
add
(bad)
pop
dec
in
pop
loopne
push
lods
test
sbb
mov
push
or
std
cli
jmp
cmp
test
out
sbb
dec
mov
mov
xchg
pop
outs
std
mov
pusha
add
inc
pop
push
int
cld
shr
aaa
into
rcr
pop
jno
loopne
xchg
dec
sbb
bound
push
push
adc
mov
movs
jae
inc
adc
lods
add
jnp
or
mov
or
inc
cmp
mov
add
sub
movs
mov
xor
jge
or
add
cmp
scas
hlt
popa
and
mov
js
cmp
inc
or
fidivr
rcl
inc
push
cwde
ret
sub
ficom
add
sub
call
test
sbb
jae
fmul
and
push
test
sahf
mov
dec
retf
cmc
xchg
cs
psubsb
in
inc
dec
(bad)
pop
dec
dec
pop
out
icebp
inc
neg
gs
aam
daa
dec
ins
addr16
pusha
xor
in
jecxz
movs
cdq
adc
mov
or
les
push
out
movsx
iret
leave
cld
push
pop
pop
cmp
xchg
mov
ss
adc
cmp
adc
stc
cdq
mov
rcr
jecxz
sub
mov
ret
sbb
outs
xchg
sbb
daa
scas
(bad)
mov
enter
das
(bad)
outs
leave
clc
xchg
mov
cmp
aaa
bswap
mov
outs
div
sbb
push
fsubr
push
es
aas
cmp
mov
or
push
xchg
sub
xor
sub
xor
inc
lods
dec
push
jmp
iret
xchg
mov
cmp
in
je
push
lods
xchg
pop
loopne
ja
arpl
cmp
sbb
jb
push
(bad)
mov
in
fstp
daa
lea
cmp
mov
jne
sbb
pop
bound
shr
xchg
inc
(bad)
cmc
mov
idiv
jo
push
ror
les
mov
mov
and
fdivp
dec
std
pop
lahf
pusha
jns
or
add
xchg
mov
adc
mov
xlat
aam
pop
pop
fsub
mov
jge
cld
and
jb
adc
mov
shl
mov
hlt
xchg
xor
jb
inc
imul
int
mov
repz
mov
pop
call
bound
movs
cmp
sub
js
xor
ror
jge
pop
hlt
dec
imul
out
out
dec
jb
arpl
test
aaa
std
lea
cmc
add
jno
jnp
stos
leave
sbb
cwde
mov
mov
das
sbb
scas
mov
loop
lock
lea
mov
fild
xor
jle
dec
icebp
arpl
sub
cmp
or
pop
or
inc
dec
ja
sub
add
ins
inc
push
call
jnp
je
xor
in
sub
cmp
fwait
and
adc
icebp
xchg
nop
cmp
push
mov
mov
repnz
xchg
test
push
shl
cmp
xor
cmc
push
xchg
int3
and
movs
int
mov
scas
sub
mov
sub
(bad)
pop
jne
mov
mov
xchg
adc
push
aas
pop
jp
adc
sub
sub
pop
mov
fdivr
sti
ret
out
int
pop
mov
(bad)
mov
sub
dec
out
sbb
es
(bad)
(bad)
repz
js
dec
lods
pushf
cmp
cmp
data16
xchg
jle
and
ds
ror
loopne
inc
mov
(bad)
addr16
jge
sub
aas
and
mov
jecxz
int
mov
and
cmp
aam
push
lds
pop
ror
mov
pop
test
lock
adc
xchg
mov
pusha
retf
lods
lods
jmp
mov
jb
pop
sbb
push
outs
adc
lock
jp
aas
cmp
dec
adc
out
loop
dec
and
repz
lods
fimul
inc
jle
add
lods
gs
dec
dec
xor
cmp
pop
push
jno
enter
mov
mov
gs
inc
mov
pop
aas
jnp
or
aas
out
ss
push
pop
dec
mov
xor
(bad)
leave
push
out
ss
js
mov
jne
push
mov
ins
loop
pop
mov
jp
cs
xchg
shl
dec
enter
or
cmp
mov
pop
mov
pop
sbb
ror
pop
cmp
xor
aam
mov
or
sbb
mov
xor
push
ret
nop
lahf
xlat
scas
xchg
nop
xchg
into
dec
cmp
test
imul
leave
mov
inc
retf
inc
push
ja
cli
aas
std
call
out
inc
popf
bound
(bad)
pop
lock
dec
pop
cmp
aam
mov
push
jnp
fs
jecxz
stos
mov
add
in
ret
jb
inc
test
rol
icebp
stc
jns
je
and
(bad)
jl
or
fld
loopne
retf
xchg
xor
xchg
mov
mov
loopne
out
aad
dec
jns
dec
sub
push
mov
mov
or
mov
test
shl
retf
cwde
lods
pop
std
adc
adc
push
or
clc
gs
push
call
pop
dec
xchg
xchg
sbb
mov
fucom
lods
mov
fiadd
loopne
mov
(bad)
xor
adc
popf
ins
mov
dec
dec
ins
cmps
jnp
adc
push
hlt
(bad)
into
cmp
sti
std
sub
(bad)
stos
or
clc
div
mov
into
cli
cmp
mov
imul
ja
jmp
add
dec
mov
icebp
fiadd
lods
xchg
jle
sbb
in
mov
movs
jno
and
cmc
mov
je
add
arpl
jnp
cdq
in
fwait
push
mov
adc
push
sbb
outs
push
inc
xchg
stc
bound
or
dec
dec
fsub
xchg
mov
stc
scas
add
push
xor
out
cmp
dec
rcl
lods
pusha
mov
js
mov
fcmovu
add
sar
pusha
es
adc
and
ins
dec
or
cmp
dec
addr16
fwait
and
jmp
dec
cmps
sub
add
int
rcl
push
loope
pop
dec
and
je
adc
xchg
pop
fidivr
retf
bound
shl
jmp
jno
push
or
popf
idiv
sbb
mov
mov
int
shl
cmp
mov
fsub
mov
pop
ror
hlt
mov
test
cld
mov
repz
repz
mov
dec
retf
ret
and
imul
test
stos
mov
loopne
add
ret
test
les
aam
lods
pop
or
push
into
addr16
push
mov
jge
clc
outs
dec
nop
sub
lea
push
fstp
loope
(bad)
mov
pushf
scas
js
outs
adc
mov
and
dec
or
push
test
push
pop
add
je
imul
ins
mov
enter
sbb
stc
jae
pop
int
clc
bound
idiv
mov
mov
lds
stc
mov
cs
xchg
jmp
xor
enter
xchg
xor
jb
int
shl
movs
clc
mov
mov
repnz
out
dec
test
jo
jg
bound
shl
scas
mov
pop
aaa
into
aad
mov
inc
or
adc
in
xor
and
mov
stos
dec
sbb
jns
dec
mov
lock
sub
cmp
adc
lds
sbb
cmp
popa
add
xor
pop
pop
popf
xor
jl
cmps
xor
push
mov
idiv
call
mov
js
pop
addr16
dec
pop
pusha
inc
movs
push
cld
fstp
test
cwde
inc
cs
aas
mov
std
xchg
jg
push
(bad)
mov
or
or
pop
or
pop
xchg
daa
mov
jno
cmp
(bad)
or
inc
mov
jae
mov
(bad)
shr
out
and
or
pusha
mov
(bad)
dec
or
ss
aad
adc
mov
ins
loopne
cdq
pop
jg
dec
pop
jle
retf
jnp
push
mov
cmp
stos
ins
cmp
nop
sbb
fwait
dec
jno
jne
jle
pop
frstor
ret
out
and
shr
cmp
xchg
test
inc
sub
pop
pop
xchg
mov
sub
leave
push
or
pop
lock
pusha
aam
imul
sub
pop
inc
(bad)
cmps
gs
cld
(bad)
not
arpl
pop
loopne
rcr
pop
xor
xchg
jge
test
pop
sbb
push
(bad)
cmc
sbb
int
in
stos
pop
lahf
rcr
rcl
outs
xchg
ja
inc
jb
bound
ins
mov
clc
sub
(bad)
lds
sub
push
add
adc
inc
shl
cld
sub
aas
mov
push
push
mov
push
icebp
push
xor
loope
dec
int3
sbb
xchg
fxch
jge
adc
loopne
sub
int3
pop
pop
ds
dec
sub
push
add
dec
add
dec
jmp
sbb
pop
jp
jge
mov
pop
aam
xchg
sti
and
push
cmp
sub
mov
jnp
imul
in
fisttp
mov
stc
fsin
inc
mov
xor
cwde
adc
shl
add
or
les
jmp
push
addr16
pop
aas
inc
ds
push
push
xor
test
in
inc
lds
(bad)
cmp
mov
daa
mov
fnsave
xchg
outs
gs
xchg
dec
jmp
and
bound
or
xchg
sti
ins
lahf
mul
dec
cmc
push
fcomp
loope
je
pop
aam
xchg
cs
push
adc
ins
test
xor
ins
mov
mov
out
ret
mov
xchg
push
push
xchg
icebp
push
ins
dec
push
fs
xchg
pop
mov
mov
push
xor
xchg
das
loopne
hlt
mov
mov
loop
push
sbb
shr
cdq
sub
inc
adc
add
and
cmc
lahf
data16
sub
jg
or
jge
lahf
inc
test
clc
xlat
lea
push
sub
outs
jae
cmc
dec
adc
pushf
sbb
inc
jl
mov
pusha
imul
jmp
dec
nop
pop
push
jmp
sub
mov
stos
pushf
(bad)
popf
sbb
ins
cmc
cdq
js
or
cmps
ss
jmp
inc
int
inc
cmp
cmp
clc
push
jle
or
fs
adc
add
or
call
and
ret
and
dec
inc
sbb
cmc
sar
lock
mov
sub
jl
xor
sbb
ret
sub
das
and
sub
xor
fwait
xchg
jmp
test
add
sub
aad
push
xchg
pop
imul
cs
loop
sub
cli
xchg
cmps
jb
icebp
sbb
(bad)
mov
or
jne
sub
cmps
mov
fdivr
pusha
(bad)
jmp
repnz
mov
cdq
mov
push
(bad)
mov
(bad)
out
dec
call
loope
loopne
out
shl
pop
ins
lea
test
ret
sub
mov
inc
popf
fadd
sub
xchg
dec
outs
lea
in
sbb
pop
cmp
outs
loopne
outs
out
xor
mov
shl
mov
cld
mov
cmp
inc
add
xchg
jno
push
adc
push
inc
sti
div
or
sbb
push
jb
es
xchg
dec
dec
in
outs
mov
xor
shl
cwde
gs
gs
dec
cmp
in
push
scas
cmc
ja
push
popa
ins
retf
outs
cwde
int3
push
and
jg
or
in
push
stos
test
test
jp
rol
(bad)
and
mov
adc
adc
fwait
or
or
jne
in
sbb
push
loopne
or
mov
mov
movs
lods
add
(bad)
stos
xchg
mov
into
mov
xchg
mov
dec
icebp
xchg
or
pop
push
hlt
inc
sbb
ins
sbb
cmp
sbb
jle
ins
addr16
cmp
jne
gs
push
push
es
cs
push
push
mov
ss
adc
jae
xchg
jp
les
inc
inc
ret
inc
cmp
cmps
ins
pop
and
dec
mov
push
pop
or
sbb
pop
and
sub
outs
adc
in
sbb
out
hlt
aam
jmp
in
out
sub
and
ret
dec
or
jle
fld
push
rcr
adc
ins
dec
imul
and
dec
adc
mov
xor
add
in
cwde
push
bound
mov
ja
push
frstor
and
ins
cmp
test
ins
lods
int3
sbb
jmp
icebp
ror
stos
pop
je
mov
sub
test
imul
inc
mov
test
cdq
mov
aaa
lods
adc
movs
xchg
outs
dec
fwait
std
js
iret
pop
jecxz
push
aas
push
inc
test
fs
jl
mov
pop
mov
movs
fstp
mov
iret
test
mov
cmps
sbb
int
test
xchg
adc
dec
jge
xchg
pop
shr
sub
das
hlt
xor
jo
mov
loope
popa
loop
lock
adc
(bad)
in
fnstsw
jecxz
fldenv
cmp
pop
push
add
les
push
mov
in
lea
sub
clc
mov
inc
cmp
call
add
aad
inc
push
sti
dec
inc
ja
leave
xchg
adc
lods
prefetch
shl
or
mov
pop
mov
pop
pop
cmp
add
enter
icebp
mov
arpl
add
cli
scas
cmp
inc
icebp
repnz
test
ror
add
add
data16
and
test
ins
retf
clc
dec
imul
es
test
mov
stos
jnp
lock
add
pop
std
pop
xchg
sub
inc
lods
or
pop
mov
int3
inc
jns
call
repnz
pusha
cmp
dec
int3
mov
mov
aad
and
xor
lahf
and
bound
sub
shl
xor
test
cld
jge
mov
lods
ret
mov
sub
jbe
mov
or
mov
loop
in
in
pop
cmp
mov
dec
dec
out
and
les
mov
xchg
push
cdq
pop
push
lahf
mov
push
xor
stos
or
pop
push
pusha
test
fstp
add
sub
retf
into
gs
cwde
mov
mov
mov
inc
cmp
rol
jne
adc
sub
std
mov
test
dec
lods
mov
inc
das
in
mov
sub
and
jmp
fwait
xchg
mov
retf
sbb
ins
std
mov
and
adc
(bad)
xchg
inc
mov
xchg
ss
push
es
test
mov
and
xor
gs
pop
in
out
mov
fisttp
aaa
xor
push
pop
mov
xor
mov
cmp
sbb
inc
jns
repz
pushf
xchg
inc
inc
cmps
mov
or
pusha
(bad)
jbe
rcr
mul
add
mov
(bad)
fstp
jl
(bad)
lds
xchg
sbb
cmp
and
xor
mov
lar
dec
imul
jmp
inc
iret
fisubr
loope
nop
scas
cli
sbb
xchg
and
push
adc
or
dec
sbb
daa
clc
jge
clc
mov
add
das
lahf
push
jl
stos
add
xchg
in
and
shl
pop
clc
fisttp
sar
xor
push
fstp
jecxz
sti
dec
fwait
jecxz
sub
mov
jno
mov
cwde
mov
add
mov
cwde
ret
ins
push
mov
lahf
mov
pop
pop
cmp
fadd
aaa
sbb
scas
sbb
sbb
adc
mov
ret
jg
pop
inc
aam
push
ficomp
ins
push
mov
sti
jmp
ret
(bad)
shl
dec
sahf
rsqrtps
ds
hlt
push
fist
cdq
xchg
sbb
repz
es
cmps
jo
or
push
mov
aaa
mov
pop
xor
mov
jmp
dec
int
nop
dec
js
sbb
jg
(bad)
jae
mov
sbb
adc
sbb
pop
mov
cdq
into
push
cdq
push
jbe
sbb
push
stos
les
jge
pop
(bad)
into
or
xchg
into
mov
neg
sub
int
pusha
xchg
mov
inc
iret
stos
ins
adc
outs
xchg
jp
fwait
and
ins
adc
dec
sub
pushf
push
inc
xchg
pop
dec
jae
mov
mov
and
adc
dec
adc
inc
mov
or
adc
xchg
das
outs
xlat
jl
das
cs
aad
mov
xchg
les
push
adc
push
je
sub
lock
add
ja
mov
and
fisub
mov
(bad)
inc
xchg
fstp
popf
pop
cmps
out
out
dec
call
jno
les
adc
cmp
push
mov
test
les
fidiv
xchg
test
nop
ins
test
test
add
mov
pop
mov
xor
(bad)
gs
mov
sar
aam
ror
rcr
imul
mov
push
sbb
iret
outs
je
mov
outs
jge
test
mov
rol
fisub
push
cmp
or
mov
push
pop
frstor
cs
mov
pusha
pop
mov
imul
neg
repz
data16
jg
push
je
int
aam
fist
mov
in
jmp
cmp
shl
adc
test
adc
(bad)
ror
and
mov
call
pop
pushf
dec
in
mov
mov
inc
idiv
sbb
pushf
pop
dec
sbb
mov
cmps
popf
push
xor
les
aad
mov
xchg
and
xchg
mov
mov
fst
mov
je
xor
(bad)
jne
fwait
mov
mov
loopne
rcl
push
inc
mov
test
sub
mov
pushf
lahf
adc
lods
int
cld
xchg
jae
adc
js
or
sbb
js
and
sub
pop
xor
mov
aad
fs
mov
xchg
aam
cmp
sub
shr
inc
mov
fwait
je
and
push
or
xor
pop
ret
adc
sub
mov
mov
mov
jnp
pop
jl
jnp
test
adc
aam
fnsave
push
dec
ds
call
movs
fadd
retf
or
jne
sub
push
add
js
movs
jge
fld
jle
pop
test
je
mov
out
ret
mov
cmp
fcomp
out
dec
fwait
inc
add
loop
push
cmp
int3
and
imul
xor
je
adc
aad
pop
cwde
xchg
push
mov
addr16
inc
in
mov
xchg
xchg
push
lea
repz
cmp
test
pop
push
jnp
adc
push
add
mov
iret
aas
push
retf
and
mov
push
sub
cwde
mov
xchg
mov
inc
fstp
inc
add
mov
mov
clc
es
outs
add
xor
mov
int3
adc
sbb
lods
cld
add
mov
dec
ss
xor
jp
pop
leave
push
repnz
rol
sbb
xor
dec
lahf
das
arpl
outs
inc
sbb
js
mov
es
mov
out
dec
adc
jb
neg
push
push
test
dec
adc
(bad)
int3
icebp
lahf
dec
or
xchg
nop
lods
call
cwde
test
movs
in
ss
movs
dec
mov
movs
cld
jecxz
jo
cmp
mov
sti
pop
loop
or
out
test
jne
jmp
pop
xchg
mov
sbb
call
sbb
mov
in
or
pop
cmps
xchg
out
in
loopne
sti
js
pop
pop
add
cwde
jno
push
test
iret
shl
imul
mov
out
jnp
cmp
fadd
sbb
dec
jo
iret
ss
test
mov
push
jnp
add
mov
add
push
cdq
dec
shl
dec
push
jo
std
mov
fist
add
(bad)
pop
int
ror
add
jecxz
push
adc
rcr
jne
cmp
into
jmp
jnp
or
dec
mov
ss
cwde
rol
(bad)
pop
imul
and
popa
daa
inc
adc
or
out
mov
cli
repnz
adc
sbb
(bad)
aaa
test
sub
stc
xchg
mov
xchg
mov
push
inc
call
adc
jmp
test
aam
mov
clc
aad
in
dec
jecxz
mov
xor
neg
in
jecxz
ss
out
and
adc
cmps
dec
inc
jno
ret
or
out
pop
fs
mov
aam
and
jnp
stos
sbb
mov
mov
out
ds
int
lds
mov
sbb
lea
dec
mov
dec
push
mov
mov
int3
outs
ret
(bad)
sbb
rcr
int
pop
in
inc
push
int3
sbb
adc
push
mov
xchg
mov
pop
sbb
js
fild
push
(bad)
sub
pusha
xchg
push
cmp
loop
and
popf
mov
test
neg
mov
mov
in
fdivr
dec
pushf
add
dec
pop
inc
cmps
sti
jnp
mov
test
mov
mov
(bad)
xchg
add
pop
push
xor
pop
add
ja
jne
add
xchg
sbb
addr16
inc
push
lods
test
rcl
dec
loope
icebp
mov
xchg
push
test
cmps
cmp
lock
sahf
nop
adc
or
cld
fsubr
jbe
bound
in
int3
call
movs
sbb
pushf
jns
mov
mov
ins
mov
pusha
pop
push
test
shl
inc
mov
mov
mov
fxch
jl
push
stos
test
(bad)
repnz
push
cmps
enter
sub
sub
jmp
ret
mov
ds
sbb
lods
or
ins
retf
or
mov
pop
inc
and
out
outs
push
cmc
out
mov
loopne
lds
(bad)
mov
bound
(bad)
adc
pop
fldcw
repz
fisubr
out
sbb
arpl
push
fst
xor
jb
dec
loopne
jno
scas
push
jp
data16
and
jb
dec
mov
inc
push
test
vcvttss2si
adc
icebp
(bad)
cmp
cs
pop
cmp
rsm
jmp
inc
inc
outs
jae
mov
sbb
and
outs
dec
enter
retf
jne
rol
ins
ins
retf
loopne
sub
adc
or
addr16
jp
fcomp
out
jae
add
int
movs
xchg
(bad)
sahf
cmp
and
xor
xchg
inc
dec
leave
mov
test
clc
lea
xor
pop
ret
out
xchg
call
loope
add
cmp
dec
jbe
cmp
cmp
cdq
popa
xchg
shl
lods
push
loope
xor
(bad)
enter
push
sub
arpl
push
and
mov
icebp
(bad)
jl
jecxz
mov
les
stc
jge
jmp
sub
inc
sub
sub
sbb
clc
and
inc
inc
test
jg
cld
fnsave
push
addr16
fs
aam
ins
cmps
(bad)
pop
add
ror
cs
adc
pop
adc
shl
dec
xor
push
fidivr
mov
in
retf
data16
dec
pop
ds
fmul
jno
fdivr
or
cmp
lods
pop
sub
rcr
xchg
popa
out
cmp
push
out
in
stc
sub
jge
lods
push
jb
jb
test
lea
sub
mov
pusha
or
pop
xchg
es
dec
mov
pushf
call
inc
pop
outs
lods
js
cld
fdivrp
popa
inc
(bad)
sub
xchg
sub
fadd
sbb
or
and
test
pop
mov
pushf
dec
adc
(bad)
and
mov
aam
ret
test
pop
popf
dec
mov
(bad)
push
add
fisub
mov
xor
or
fiadd
jg
mov
ins
inc
jae
jmp
add
ret
pop
inc
add
adc
(bad)
aaa
xchg
repz
cwde
mov
mov
pusha
sbb
sar
ins
jecxz
xchg
pop
das
pop
sbb
mov
pop
das
push
jnp
cmp
mov
inc
jmp
ret
mov
mov
xchg
clc
push
sahf
inc
aam
ss
mov
add
movs
sti
jecxz
lock
pop
xor
jns
fs
sbb
popa
add
pushf
sbb
push
(bad)
xor
push
test
pusha
adc
jmp
jb
xor
and
dec
mov
or
gs
push
pop
aaa
shl
cmp
movs
popa
jg
fadd
pop
mov
cwde
rcr
jmp
push
xchg
add
jl
push
fsub
xchg
lds
out
cs
not
sbb
push
inc
ins
les
cmp
leave
adc
(bad)
sub
data16
call
inc
aaa
xchg
push
jnp
cmp
imul
and
dec
mov
or
adc
mov
or
adc
in
cs
xchg
inc
xor
std
adc
sub
mov
adc
shl
int
(bad)
aaa
adc
adc
jbe
and
loope
aam
ret
jle
dec
or
ds
(bad)
cmp
pop
dec
and
inc
sbb
cwde
(bad)
std
(bad)
pop
mov
lds
std
sub
xor
mov
mov
(bad)
test
mov
or
mov
test
push
push
sub
push
push
cmp
imul
jns
ret
or
pusha
push
push
pop
push
mov
xor
leave
lods
mov
stos
adc
jno
icebp
retf
imul
int3
mov
dec
fimul
ret
and
push
push
clc
fdivr
out
and
lds
es
mov
sub
mov
inc
(bad)
fadd
jae
pop
pop
into
mov
nop
lds
jl
and
lahf
(bad)
cmp
jge
pop
xchg
cmp
xchg
repnz
(bad)
mov
ins
repz
mov
mov
pushf
mov
jecxz
loop
fadd
or
outs
lods
cli
xchg
ret
mov
ret
pop
in
fwait
xchg
mov
jmp
xor
pop
dec
sbb
aaa
inc
fisttp
call
(bad)
iret
jge
ins
sar
jns
cmp
repz
mov
ins
cli
jg
fdiv
cmps
xchg
scas
in
mov
push
or
fdivr
dec
inc
std
mov
je
aad
or
ja
xchg
mov
and
mov
(bad)
dec
movs
ins
mov
add
xlat
push
inc
xchg
shl
sub
aad
xchg
sbb
pusha
cmp
cmp
fwait
jle
push
repnz
or
call
jns
xor
mov
sub
pop
xchg
dec
idiv
in
dec
dec
sub
in
adc
sub
jmp
jno
daa
mov
pop
pop
adc
rcr
pop
sub
or
mov
jne
inc
mov
popa
cwde
mov
(bad)
test
add
xor
dec
out
dec
(bad)
push
push
pop
es
cld
jecxz
js
dec
pop
das
sbb
and
inc
(bad)
cmp
mov
dec
hlt
test
xor
xor
int
test
sbb
or
push
rcr
xchg
cmps
adc
in
push
call
int3
sar
xchg
vmovshdup
dec
ror
push
in
adc
sbb
rol
sti
ficomp
xor
rcr
mov
mov
jg
loop
mov
fadd
push
pop
mov
mov
div
inc
ret
mov
gs
xlat
mov
mov
mov
call
xor
out
in
jo
lds
lds
scas
test
imul
mov
idiv
xchg
pop
add
cmps
loope
push
mov
pop
cli
imul
push
stos
xchg
loopne
lods
out
mov
push
inc
sub
gs
and
mov
add
ins
push
es
popf
adc
dec
icebp
in
mov
repz
stc
pop
inc
mov
xchg
inc
sub
mov
sub
rol
mov
enter
mov
ror
lahf
cmp
loop
mov
pop
mov
cmp
scas
mov
or
loop
in
jae
or
inc
retf
int3
pop
push
dec
push
pop
mov
push
retf
stos
or
call
scas
mov
hlt
pop
loopne
in
push
jb
movs
jmp
ret
popf
inc
jmp
jnp
rcl
les
mov
(bad)
ins
loop
es
jb
hlt
jo
adc
push
mov
int
je
mov
cmp
jmp
jmp
and
movs
dec
and
push
das
mov
sbb
xchg
in
ss
dec
or
sbb
xchg
push
ds
sbb
mov
or
das
fadd
or
mov
adc
adc
fidivr
pop
dec
and
xor
call
mov
sub
jle
add
xor
fild
(bad)
out
push
aaa
inc
adc
push
push
mov
fwait
mov
test
and
hlt
aas
and
int
inc
test
xor
push
(bad)
out
xchg
stos
sub
mov
mov
lea
jle
(bad)
fcom
cmp
test
repnz
data16
outs
mov
test
push
(bad)
dec
xchg
repz
out
xchg
shr
rol
ins
and
inc
scas
push
inc
imul
(bad)
popa
add
xchg
stos
ins
sbb
fs
and
stc
push
xchg
(bad)
adc
push
fcom
xor
xor
jge
push
mov
stos
(bad)
cdq
call
dec
(bad)
push
es
sar
jl
test
ss
sbb
and
sti
xor
adc
or
lods
add
fnstenv
movs
aas
ins
sub
mov
adc
repz
jne
add
icebp
pop
imul
xor
retf
push
xchg
test
shl
(bad)
mov
xor
repnz
cmp
pop
xchg
push
rcr
mov
inc
add
xor
and
hlt
cli
movs
jae
pusha
je
add
push
cmp
xor
lea
lods
lahf
cdq
push
push
sbb
sbb
push
dec
shl
and
fwait
movs
outs
push
aas
jg
pop
ret
scas
pop
mov
or
jle
imul
ins
gs
fs
out
ret
and
inc
sti
add
mov
add
fldpi
xchg
popa
xor
das
jmp
dec
push
fwait
ins
shl
pop
inc
dec
retf
in
sar
mov
pop
fidiv
xor
jg
imul
stos
lea
lea
inc
jns
aad
add
out
jecxz
ds
out
mov
sar
adc
dec
xchg
jg
ss
aad
stc
cs
ins
es
ret
push
mov
xchg
xchg
js
cmp
fdiv
ja
fadd
inc
ret
jne
sbb
sub
jmp
fcmovnbe
fisubr
mov
dec
jne
or
jno
out
shl
daa
loop
or
ret
cmp
xor
fisubr
inc
(bad)
jg
pop
(bad)
cld
cmp
add
rcr
jno
fwait
lds
repz
add
push
add
inc
xor
add
loope
imul
ds
imul
inc
stos
xchg
in
scas
adc
lock
sar
cmc
rol
xchg
neg
test
mov
xlat
cmp
lods
push
jbe
mov
dec
jg
out
inc
or
into
enter
dec
inc
mov
mov
sbb
aaa
jmp
or
jge
mov
pushf
inc
call
dec
in
(bad)
inc
mov
cmp
jge
loop
mov
push
test
loopne
inc
ss
adc
cli
cmp
out
inc
pop
call
inc
and
mov
fistp
loop
xchg
push
mov
cmp
mov
xchg
jp
daa
mov
dec
je
cmps
clc
out
cld
daa
jae
clc
enter
pop
pop
retf
aaa
sbb
xor
dec
xor
(bad)
(bad)
in
lahf
mov
div
cmc
fld
rol
movs
sbb
fcmovnb
out
sub
pop
add
push
xchg
cmps
test
xor
addr16
jmp
mov
mov
and
push
cmc
pop
xchg
call
pop
push
imul
inc
jae
inc
pop
inc
dec
clc
les
pop
jbe
pop
sub
sub
movzx
cmp
pop
lahf
into
enter
adc
sub
les
jmp
out
and
pop
call
dec
sub
(bad)
sbb
ds
outs
jl
sub
add
or
mov
int
pop
mov
xchg
stos
sub
(bad)
sub
jge
aaa
jecxz
cwde
and
xchg
mov
mov
sti
mov
xor
ficomp
test
es
cli
sub
pop
adc
push
stc
mov
lock
cdq
mov
cwde
jbe
cwde
sti
pop
popf
jg
dec
mov
mov
or
mov
js
sbb
out
sbb
xchg
dec
call
lods
sub
cmp
fcom
sbb
ins
or
test
jge
in
cmp
pop
mov
push
test
ror
es
pop
add
arpl
dec
jmp
push
and
pop
data16
fs
fld
(bad)
mov
jmp
jmp
add
jns
clc
push
(bad)
movs
and
jne
popa
adc
adc
pop
adc
mov
and
mov
pop
mov
add
adc
or
or
xor
js
inc
jne
mov
iret
int
mov
or
sahf
dec
call
inc
les
or
repz
push
or
(bad)
(bad)
and
imul
pop
push
pop
and
(bad)
(bad)
(bad)
sbb
add
adc
sahf
pop
add
and
mov
enter
jb
es
aad
xor
push
jecxz
jecxz
out
rcl
sub
dec
test
repz
dec
xchg
xchg
into
loope
shl
add
xor
adc
pop
lock
fisubr
repnz
jle
push
add
lahf
sub
lods
fidivr
pminub
out
jmp
(bad)
mov
push
jl
hlt
test
mov
icebp
cmp
jb
cdq
jmp
mov
xor
inc
repz
or
daa
test
or
push
out
and
push
adc
aas
lahf
popa
push
cmp
pop
hlt
out
push
dec
(bad)
fisttp
mov
and
jl
or
cmp
loopne
and
outs
(bad)
int3
mov
xor
or
inc
adc
push
movs
jle
sahf
add
into
mov
into
hlt
leave
(bad)
dec
ins
inc
jo
ret
outs
push
inc
je
xchg
push
dec
mov
fist
or
pop
mov
rcl
cwde
xchg
sbb
and
xchg
inc
mov
dec
xchg
sub
out
cmp
pushf
rcl
mov
in
mov
imul
push
pop
or
mov
fldenv
sar
mov
shl
inc
std
mov
sub
cmp
mov
and
pop
cmps
leave
lock
mov
jle
ins
push
and
repz
jmp
addr16
lods
push
inc
jecxz
jge
das
mov
xor
push
repnz
jne
xchg
cmps
mov
cmc
mov
add
dec
mov
test
cmps
icebp
and
push
mov
push
out
loopne
sar
push
inc
or
jbe
mov
cld
in
inc
cmp
or
mov
loopne
pop
dec
and
mov
out
add
push
push
add
adc
xchg
pushf
popa
mov
sbb
jb
cmp
stos
lods
aaa
lea
mov
jo
call
rol
cmp
or
repnz
cmp
sbb
nop
inc
ror
mov
js
das
mov
out
add
fidivr
xchg
out
sbb
sbb
jne
loop
jne
leave
cmps
ins
stos
mov
sbb
test
call
pop
xor
retf
jb
jbe
out
inc
call
aam
fnstenv
mov
pop
mov
lods
std
sbb
xor
mov
jmp
iret
mov
mov
or
sahf
sub
cmp
idiv
cdq
in
adc
inc
cli
popf
jo
rol
test
imul
es
adc
xor
aad
cmp
inc
gs
ss
pop
add
inc
das
xchg
jp
mov
mov
xchg
lahf
xchg
pop
scas
adc
arpl
(bad)
xor
ja
lods
cmp
pop
pop
ror
push
nop
dec
rcr
iret
gs
cmp
lea
fcom
sbb
and
cmps
scas
(bad)
mov
push
fistp
xchg
lods
jle
retf
push
adc
pop
inc
push
mov
jno
adc
call
inc
cmp
add
adc
imul
jge
pop
rcl
leave
sti
movs
push
xchg
or
mov
jp
aaa
mov
movs
push
mov
jp
and
xor
jle
cmp
mov
xor
cmp
sub
lock
int3
clc
and
jmp
push
adc
pop
out
into
inc
mov
sti
in
stos
pusha
mov
pop
test
sub
adc
cmps
bound
mov
mov
out
dec
mov
aas
xor
jbe
ins
mov
push
into
sbb
jle
test
into
mov
adc
sub
in
bound
jnp
test
xchg
loope
dec
mov
test
or
inc
(bad)
aas
inc
push
or
and
(bad)
pop
fnstenv
jle
popf
mov
ja
push
inc
pop
dec
jmp
dec
jmp
cmp
iret
xor
test
(bad)
mov
xlat
pop
(bad)
dec
xor
sbb
bsf
or
sub
jp
sti
into
dec
xor
cmc
add
sbb
repnz
mov
push
xor
into
bsf
mov
outs
sbb
sti
test
shr
dec
xchg
lods
cmps
call
jns
sub
mov
mov
retf
ja
jecxz
mov
adc
ficom
inc
mov
repz
jmp
call
into
jmp
push
data16
aam
test
pop
dec
mov
sub
jge
daa
arpl
mov
nop
(bad)
gs
xlat
popf
rcl
sub
or
jmp
gs
pop
xchg
pop
xor
out
jno
mov
je
jne
into
add
aad
ret
push
or
out
mov
push
cmp
sbb
fisttp
int3
pop
mov
add
or
aad
mov
loop
adc
jmp
xor
ror
movs
movs
(bad)
dec
mov
aas
push
jb
es
outs
(bad)
mov
push
lds
cmps
push
leave
xchg
ins
int3
aaa
and
push
lock
jmp
pushf
adc
mov
clc
add
jmp
cli
add
repz
dec
mov
aad
mov
jecxz
out
jg
scas
mov
data16
or
jecxz
lock
fadd
out
mov
add
fs
push
xlat
adc
leave
inc
mov
add
sub
add
imul
and
mov
xor
repnz
jmp
xor
lods
idiv
pop
mul
call
stos
dec
imul
in
jmp
sub
adc
bnd
loop
mov
gs
fdiv
sahf
add
add
imul
ja
out
outs
push
cmp
mov
cld
ds
sub
jb
sbb
and
dec
mov
push
pop
ja
push
pop
mov
icebp
imul
hlt
daa
xchg
into
dec
push
hlt
lods
adc
xchg
aas
sub
dec
sti
not
push
push
test
xchg
ror
ds
inc
jmp
invd
push
push
dec
cmp
jb
popf
aaa
mov
test
mov
sar
jmp
mov
lahf
push
test
and
inc
cmps
(bad)
xchg
inc
out
stos
mov
sub
xchg
cmovo
xchg
iret
xchg
shr
inc
and
rcl
mov
jmp
cmc
or
arpl
add
mov
std
and
pop
imul
daa
shl
jg
jb
(bad)
popa
jg
movs
xor
or
jmp
add
xchg
inc
cmp
call
sbb
jmp
popf
fldenv
out
idiv
cmp
popf
inc
jge
outs
mov
mov
push
and
std
push
outs
push
ins
cmc
and
and
xchg
jae
sbb
mov
fild
enter
and
pushf
mov
test
popf
mov
jle
jns
sbb
in
pop
pop
dec
dec
(bad)
xor
adc
clc
in
sub
mov
sbb
jle
lea
pop
inc
fmulp
push
xchg
stc
mov
sub
cdq
aam
cld
jb
add
ret
inc
adc
pop
cld
pusha
cli
pop
cmps
loopne
int
mov
shr
xchg
movs
rcl
lea
inc
retf
cmp
or
ficomp
sub
arpl
movs
inc
mov
push
add
add
in
xor
sbb
enter
inc
and
stos
mov
daa
and
cld
sahf
mov
mov
mov
(bad)
ins
movs
call
or
idiv
dec
cmp
loop
push
(bad)
repz
mov
mov
pop
fcmovu
jmp
in
adc
popf
adc
pop
sbb
push
push
in
xchg
retf
and
pushf
enter
nop
ds
sbb
mov
imul
push
mov
(bad)
int3
call
xchg
adc
push
jae
jmp
jo
cmc
int3
jmp
and
(bad)
mov
lea
dec
push
or
or
mov
dec
dec
add
mov
sbb
nop
mov
jb
add
pop
cld
das
imul
mov
scas
shl
iret
in
jle
inc
push
shr
push
pop
adc
sub
call
jne
ds
push
mov
popa
(bad)
dec
or
mov
(bad)
jno
js
and
jns
out
into
jmp
jne
(bad)
xor
jns
or
xchg
cmp
jmp
mov
sub
dec
outs
outs
fwait
cdq
or
inc
push
inc
enter
mov
jg
or
push
test
lods
jp
dec
imul
jle
cdq
inc
cmp
xlat
js
in
sub
and
xchg
push
xchg
cmp
mov
ror
stos
mov
mov
std
xor
mov
jns
cwde
push
mov
outs
sub
mov
push
sbb
or
shl
loopne
xchg
movs
loop
xor
xor
inc
arpl
push
cmp
jno
mov
(bad)
dec
(bad)
add
mov
xchg
(bad)
(bad)
shr
xor
scas
dec
push
mov
cdq
(bad)
stc
es
cmp
popa
dec
outs
xor
sub
jno
arpl
dec
mov
sub
mov
jb
(bad)
data16
loope
jbe
dec
aad
and
(bad)
mov
inc
inc
xor
mov
or
mov
rcr
mov
(bad)
mov
mov
sub
fwait
push
jl
or
mov
pop
aad
in
ds
mov
stos
jp
in
cmps
fmulp
fcom
xor
push
sbb
sub
call
in
shr
movs
popf
adc
mov
ja
rcl
mov
mov
mov
sahf
scas
push
lods
pop
add
push
add
sbb
in
mov
mov
mov
inc
adc
sbb
js
mov
hlt
rcr
stc
mov
daa
push
jmp
mov
pop
mov
push
cmp
mov
ret
out
nop
out
mov
stos
mov
jbe
stos
stos
mov
pop
(bad)
xchg
dec
scas
pop
test
sub
cmps
pop
pushf
(bad)
fdivr
sbb
stc
retf
pop
xchg
cmps
jmp
es
add
jb
outs
ret
addr16
cmp
pop
jo
sbb
adc
inc
dec
mov
dec
int
or
dec
jmp
fld
and
pop
stos
(bad)
xlat
sbb
mov
mov
pop
sub
inc
sub
xor
out
dec
sub
outs
dec
jmp
or
loope
iret
mov
xchg
cld
or
xlat
add
stc
(bad)
cli
fidiv
(bad)
in
or
sub
push
(bad)
xlat
aad
dec
fist
mov
inc
push
adc
inc
fdivr
inc
cmp
xchg
cmp
call
cmps
push
ja
popa
scas
fldcw
inc
mov
push
test
daa
(bad)
mov
iret
popf
mov
fwait
xchg
push
or
lods
inc
sub
movs
mov
inc
loopne
jnp
in
in
repz
jbe
stos
pusha
stc
mov
ror
cwde
add
(bad)
jnp
inc
cli
leave
loope
call
mov
popa
dec
retf
pop
cld
ins
and
lock
movs
out
mov
in
pop
pop
loop
xchg
mov
cmp
int
fisttp
adc
pusha
pop
xchg
cs
adc
pop
xor
mov
push
fsubr
es
in
and
xor
aas
pop
in
mov
fimul
jo
and
std
add
sub
cld
aaa
mov
push
out
aas
ja
movs
inc
ret
mov
sbb
stos
adc
cwde
(bad)
mov
inc
cli
scas
lds
mov
pop
in
repnz
popa
lock
hlt
xlat
jb
cmps
xchg
test
fsubr
mov
into
pop
pop
or
sub
mov
test
or
scas
mov
xchg
jmp
jno
cli
xchg
(bad)
mov
add
dec
stos
mov
test
js
call
xchg
mov
cld
pop
scas
bnd
aas
push
std
int
xchg
pop
pop
repz
ja
ins
ins
loopne
popf
sub
lods
jmp
mov
popa
call
or
xchg
pcmpgtb
mov
mov
push
push
movs
jg
xor
pop
sub
call
jmp
fbld
fs
push
mov
call
mov
into
mov
adc
ins
ins
and
push
mov
jg
pushf
in
and
cmp
jmp
inc
jno
in
loop
sbb
int3
pop
jecxz
sahf
cmp
rcl
xor
adc
in
shld
cmp
and
daa
and
fcmovu
add
icebp
push
dec
mov
sbb
fcmove
cmp
cmp
mov
fistp
mov
popf
cmps
popf
pop
mov
test
scas
mov
pop
xchg
jmp
push
leave
lock
int
lock
sbb
loop
fs
adc
icebp
cld
or
push
jl
inc
mov
lea
xchg
jnp
test
mov
test
xchg
gs
mov
enter
adc
test
pop
push
jge
leave
push
inc
push
cmp
in
pop
pushw
push
lock
int3
div
fld
stc
daa
cdq
pushf
call
shl
repz
cmp
sub
aas
je
sub
and
outs
add
xchg
push
sahf
shl
clc
cdq
jle
jno
push
add
cmc
arpl
pop
add
sbb
cmc
dec
and
hlt
xlat
and
push
jmp
xor
pushf
push
mov
inc
xor
call
jg
test
mov
pusha
data16
clc
mov
and
cdq
aad
inc
gs
pop
sub
imul
sti
es
xchg
js
sub
ds
xor
into
arpl
addr16
icebp
sub
imul
mov
int
and
test
xchg
(bad)
jl
(bad)
dec
clc
inc
movs
jmp
mov
enter
pop
sub
mul
jge
and
test
lock
popa
call
lds
push
dec
and
push
cmp
inc
mov
mov
test
dec
ja
in
push
xchg
add
rcr
xchg
add
mov
dec
xor
mov
xor
sar
cmp
sub
mov
in
(bad)
(bad)
ins
and
rol
scas
(bad)
jmp
dec
fld
pusha
in
and
jle
push
xchg
inc
push
test
out
mov
add
or
imul
push
and
and
pop
pop
lods
xchg
cmps
test
push
mov
sub
rcr
adc
(bad)
aad
adc
dec
neg
ss
icebp
adc
daa
xor
loope
fcom
je
mov
jl
mov
add
and
and
cmp
fild
dec
stc
sar
xchg
xor
pop
mov
inc
mov
call
mov
mov
sub
xor
pop
or
and
adc
dec
push
dec
int3
imul
sbb
and
inc
ss
xchg
mov
or
jbe
cmps
outs
mov
cmp
inc
int3
and
jl
xchg
or
pop
js
dec
jp
xchg
arpl
or
int3
xchg
adc
retf
popa
xor
pop
fwait
cwde
loop
add
mov
jb
and
sbb
xchg
xchg
jmp
mov
xchg
dec
adc
enter
jno
sub
inc
gs
loopne
data16
div
out
jmp
add
push
call
cmp
into
adc
mov
ds
xchg
rcr
ja
or
and
(bad)
xor
push
nop
inc
push
inc
mov
jle
dec
inc
push
imul
pop
add
mov
jmp
xchg
jp
jmp
int
pop
add
mov
push
leave
sbb
push
mov
and
push
push
add
jle
mov
cmps
inc
mov
stc
mov
movs
stos
mov
jo
pop
out
cmp
es
fs
adc
xchg
xchg
fsub
jg
mov
fnstenv
push
mov
mov
rol
mov
adc
out
dec
scas
in
imul
aaa
div
mov
xor
sub
test
mov
add
mov
push
clc
dec
cmp
and
sbb
scas
cmc
in
std
(bad)
push
aaa
clc
loopne
mov
imul
gs
addr16
adc
mov
jns
add
cmps
adc
xor
or
mov
inc
hlt
and
fdivr
clc
je
into
leave
mov
add
outs
xor
dec
sbb
sub
(bad)
xor
jno
repz
cmps
mov
lock
sbb
pop
xchg
push
xchg
ret
pop
xchg
sub
mov
mov
mov
dec
retf
pop
lds
sub
xchg
inc
fldenv
shl
pop
jp
ins
mov
sub
jbe
cld
cmp
jge
dec
or
mov
in
or
mov
cmp
cmp
push
push
cmp
ret
in
adc
jmp
inc
xchg
call
scas
pop
jle
lea
xchg
pop
imul
add
sbb
fdiv
push
xchg
pop
xor
in
std
repnz
jecxz
mov
pop
clc
xor
pusha
addr16
inc
and
jae
jle
aad
xor
or
add
jl
lods
mov
push
hlt
mov
das
pushf
aaa
sahf
or
(bad)
cmp
xchg
ds
popf
(bad)
repz
out
cmps
adc
xor
js
(bad)
aam
pushf
lahf
jmp
inc
cwde
iret
sbb
and
pop
adc
mov
(bad)
pop
mov
pusha
cmc
jg
push
cs
stos
(bad)
out
pop
unpcklps
data16
cld
outs
dec
out
loop
lods
fmul
mov
inc
add
test
ja
in
xor
les
es
xor
pop
xchg
or
ds
sbb
mov
xor
aad
cmp
jae
and
daa
inc
clc
maxps
mov
imul
aas
push
push
enter
inc
into
inc
lahf
jl
fst
call
loope
mov
gs
jle
jl
xor
xchg
outs
fnstenv
push
xchg
rcl
ins
and
nop
loop
jmp
sbb
es
es
pop
jo
mov
daa
mov
test
add
pop
mov
jecxz
jne
repz
mov
int3
or
xchg
dec
mov
test
std
jle
adc
jne
loopne
(bad)
pusha
push
ja
rcl
repnz
in
mov
jns
jo
int
out
test
jmp
loop
mov
outs
or
sbb
neg
call
fist
xor
int
jmp
(bad)
(bad)
aad
jnp
adc
dec
scas
xchg
clc
dec
cmp
lea
cmps
ins
jp
add
mov
sti
fyl2xp1
push
ja
fwait
push
cmp
fs
lods
sub
push
sub
(bad)
loopne
das
mov
jle
retf
rol
sar
mov
sar
push
popf
in
inc
mov
movs
mov
mov
sti
dec
and
dec
jb
push
retf
ficom
push
adc
jl
mov
mov
cmp
pop
sub
cmp
push
jmp
dec
mov
and
add
retf
sbb
jl
pop
mov
jae
hlt
int3
add
fs
cdq
cmp
in
sbb
iret
mov
jnp
pop
ds
cli
je
jnp
mov
hlt
pop
jge
or
cwde
sahf
add
mov
pop
repz
jl
rcr
jno
fs
mov
int3
sub
jo
les
sahf
dec
dec
jae
imul
mov
push
sub
or
xor
xchg
sub
pop
fdivr
fsubr
inc
dec
pop
dec
pusha
push
inc
sbb
xchg
push
xor
xchg
mov
inc
push
cli
sub
sbb
sbb
rcl
ins
inc
push
inc
mov
mov
push
mov
outs
or
or
jns
xor
xchg
or
stc
jp
sub
adc
push
push
cdq
outs
data16
std
or
test
jmp
inc
rol
pop
mov
ss
into
mov
ret
push
cs
mov
sub
or
cmp
cli
fidiv
cld
shl
pop
stos
fcmovnbe
repz
jnp
jle
push
push
sub
mov
movzx
push
aas
xchg
push
retf
idiv
inc
aaa
sbb
inc
mov
sub
and
mov
bnd
in
mov
es
test
add
dec
pop
sar
jl
sub
fist
and
dec
xchg
loop
sbb
mov
adc
call
in
imul
jbe
xchg
mov
sbb
cmp
dec
sahf
lahf
adc
aam
mov
into
push
mov
and
shr
push
pop
jl
(bad)
fwait
sub
adc
fld
(bad)
in
inc
sar
mov
enter
push
(bad)
add
je
xor
cmp
in
pop
aam
adc
mov
hlt
mov
sub
mov
enter
test
js
enter
lods
adc
xchg
inc
jb
fisub
rcl
jo
mov
mov
inc
test
mov
adc
out
dec
and
jmp
mov
inc
sub
(bad)
iret
imul
and
scas
xchg
fist
movs
inc
leave
mov
ror
das
cli
imul
sti
fcom
(bad)
ins
mov
cs
imul
in
mov
cmc
retf
(bad)
xchg
pop
sub
scas
out
jge
push
retf
aas
lahf
sub
popf
xchg
mov
mov
xchg
add
test
fisttp
sub
retf
mov
xor
adc
push
outs
mov
inc
cs
push
pop
lock
sbb
loope
js
cs
or
or
repz
adc
or
(bad)
popa
push
fimul
mov
imul
or
xor
lea
imul
daa
dec
std
mov
imul
into
in
fdiv
rcl
retf
out
aad
jno
dec
test
mov
xchg
dec
mov
inc
mov
adc
loopne
dec
pop
(bad)
mov
mov
dec
sbb
(bad)
aad
or
push
out
shr
imul
inc
das
lock
fst
ret
js
sbb
std
push
mov
test
scas
pop
jle
pop
sub
outs
daa
mov
nop
or
in
call
push
lahf
inc
out
mov
sub
dec
addr16
dec
lods
jne
bound
scas
and
call
sub
std
cmp
add
mov
test
stc
fxch
and
test
fld
push
mov
adc
sub
call
retf
sub
sub
pop
stos
cmp
sub
xlat
cs
mov
jmp
call
movs
sahf
jns
sub
push
dec
in
and
and
mov
(bad)
call
push
push
xchg
push
rcr
fidivr
mov
inc
mov
sbb
aad
in
mov
loope
idiv
or
adc
push
fld
js
or
iret
xor
jb
test
jmp
inc
movs
push
in
sub
test
add
popa
xor
inc
(bad)
mov
mov
cmp
scas
fild
add
xor
adc
push
loopne
dec
mov
into
lahf
jl
xchg
divps
sbb
mov
in
out
pop
jo
int3
mov
mov
jbe
out
sahf
and
int
mov
sbb
and
inc
adc
sbb
push
clc
imul
pop
inc
std
mov
ret
daa
sub
sahf
mov
js
or
mov
cwde
int
(bad)
rcr
scas
jmp
push
jno
adc
mov
push
add
(bad)
int3
or
xor
loop
add
xchg
pop
daa
jbe
in
add
repz
nop
adc
(bad)
lea
ds
xor
test
pop
int3
mov
or
int3
adc
dec
pusha
rol
ss
into
loopne
and
js
mov
ins
mov
pop
jg
push
in
stc
repz
ficom
ins
imul
movs
sub
dec
xlat
mov
cmp
jp
iret
jecxz
int
ins
mov
push
test
arpl
movs
jne
jl
bnd
sahf
pop
cmp
add
push
push
das
ret
push
std
xor
mov
data16
push
cmc
xchg
push
int
hlt
mov
mov
pop
cmp
loop
stos
add
clc
mov
xlat
xchg
cmc
inc
cmp
push
cli
aaa
or
add
and
std
xor
ss
sbb
cmp
mov
(bad)
aam
lods
push
ret
ret
ins
or
das
rcr
xlat
aad
fwait
push
cmps
add
sub
bound
cmp
or
fist
les
pusha
clc
or
mov
cli
enter
shl
daa
clc
scas
cmps
clc
add
jnp
mov
sbb
mov
xor
jne
call
push
mov
fisttp
push
popf
add
pop
jno
push
in
mov
ss
out
xchg
xor
cmp
pop
retf
push
push
xor
int
add
xor
or
cmp
icebp
lahf
jle
(bad)
int
dec
fs
dec
daa
push
inc
mov
sub
clc
and
or
fidivr
std
icebp
cmp
test
jae
mov
xchg
dec
cmp
das
sbb
scas
cmps
nop
mov
sbb
(bad)
cmp
(bad)
test
fs
stc
ss
cmp
push
push
into
lods
mov
bnd
adc
bswap
inc
push
inc
mov
jmp
pop
xchg
movs
xchg
xchg
xchg
jae
int
outs
sbb
in
lods
fwait
and
popf
pop
(bad)
imul
sar
jmp
cld
push
xchg
cmc
ss
mov
fptan
shl
mov
sahf
push
loope
shl
push
or
jle
fild
out
pop
or
ss
retf
pop
mov
mov
bound
fst
std
dec
shl
stos
push
jae
mov
push
aam
pop
xchg
inc
mov
jnp
popf
add
jnp
adc
imul
cdq
(bad)
iret
rcl
setbe
mov
pop
xor
das
(bad)
cmp
repz
test
lock
sub
sbb
jl
gs
cmp
loopne
jne
inc
inc
pop
xor
jle
xchg
dec
pop
stos
mov
(bad)
dec
sbb
cmp
pushf
stos
cmp
sub
jl
test
cmp
jge
or
xchg
les
push
xlat
div
dec
jo
sub
fs
ret
add
icebp
push
iret
or
or
inc
mov
cwde
sub
test
push
loopne
add
xchg
cmp
add
popa
jmp
push
jb
dec
inc
add
sbb
or
sub
out
adc
inc
adc
neg
jmp
mov
xchg
pushf
call
and
or
sub
push
xor
adc
fidiv
sub
retf
jmp
xor
sub
xchg
(bad)
ins
push
mov
pop
mov
xor
call
fistp
or
fisub
test
lds
xor
xor
into
xor
push
(bad)
imul
cmp
in
test
pushf
xchg
mov
lods
sbb
movs
fsubr
stos
mov
stos
jne
or
mov
jecxz
mov
xchg
dec
mov
jno
sub
data16
xor
push
inc
jns
mul
and
retf
rcl
xor
test
in
cdq
add
jbe
dec
leave
adc
or
jecxz
dec
pop
mov
(bad)
inc
xor
ins
mov
push
test
out
sbb
movs
push
xchg
push
outs
shl
scas
push
jmp
rcl
and
nop
enter
(bad)
dec
imul
mov
scas
and
dec
call
xor
stos
adc
dec
xor
push
stos
mov
(bad)
test
mov
or
fcom
xchg
inc
mov
jb
cmp
loopne
mov
cmp
and
xor
pop
jg
repz
inc
add
sbb
inc
jge
push
jecxz
imul
out
fwait
ss
xchg
cmp
dec
xor
cmps
add
movs
cmp
inc
inc
dec
mov
imul
(bad)
mov
retf
mov
add
push
out
mov
pusha
jnp
dec
les
dec
es
bound
jmp
adc
inc
mov
cmc
test
rol
cmc
or
enter
pop
je
clc
mov
push
(bad)
jbe
sti
pop
mov
mov
push
sub
imul
xor
dec
dec
push
sbb
int3
icebp
mov
(bad)
cli
or
data16
cmp
xor
scas
cmp
push
das
ins
inc
dec
loop
ss
and
les
outs
clc
jno
and
and
sbb
fiadd
cmps
cmps
pop
dec
enter
stc
mov
ds
or
ficomp
outs
fistp
sbb
mov
push
jnp
sub
ret
adc
les
jbe
push
add
shl
sbb
dec
sub
nop
and
out
and
jo
fs
cs
cmp
xor
ror
addr16
icebp
das
mov
lahf
or
mov
sar
mov
adc
out
push
stos
dec
es
and
xchg
mov
out
dec
xchg
adc
adc
fsubr
dec
mov
cmps
inc
repz
inc
je
cmp
xor
mov
push
push
cwde
push
punpckhbw
or
mov
enter
jnp
mov
es
cli
aam
pusha
sbb
xchg
pop
fisub
ret
mov
pushf
(bad)
mov
fxam
jg
inc
jge
outs
test
and
pop
sub
in
xor
mov
pop
sar
fdiv
stc
and
cmps
or
fnstenv
and
(bad)
loop
pushaw
push
cwde
stc
push
push
dec
mov
add
push
jno
leave
int3
ins
mov
les
mov
dec
and
xchg
xlat
push
int
aad
iret
mov
mov
dec
call
jo
stos
dec
leave
and
cwde
mov
cmp
dec
retf
ja
adc
mov
in
bound
mov
xchg
jne
xchg
popa
adc
in
addr16
jbe
fnstenv
sub
pop
fsubr
add
and
jae
jns
xor
ret
(bad)
mov
push
mov
fs
inc
fwait
movs
es
inc
mov
movs
or
mov
pop
fabs
cwde
and
mov
out
mov
popf
and
int3
sbb
iret
dec
xchg
arpl
inc
(bad)
fist
xchg
sub
hlt
sbb
push
add
mov
inc
loope
pandn
ins
sbb
inc
and
push
cmc
cmc
or
push
adc
xlat
jmp
dec
fwait
dec
adc
xchg
or
ficomp
push
sbb
lock
js
scas
movs
mov
sahf
and
dec
repz
dec
cmps
xchg
xor
js
stos
test
retf
repnz
mov
lock
cli
jmp
mov
inc
or
dec
aad
mov
enter
push
push
movs
arpl
call
shr
xor
popa
imul
ins
cli
daa
imul
fistp
(bad)
fdivr
aad
jge
fisttp
or
lods
outs
cli
jmp
or
int
stos
inc
pop
test
xor
ror
into
dec
push
mov
inc
xchg
xor
or
call
jmp
das
mov
sbb
adc
xchg
mov
neg
or
js
ret
int
lds
inc
mov
icebp
push
aad
pusha
popa
dec
les
jae
pop
cmp
sub
das
xchg
das
mov
xchg
repnz
dec
cmp
push
dec
add
sbb
jnp
pop
pop
mov
fcomip
leave
ins
sub
into
mov
dec
xchg
nop
arpl
or
inc
mov
mov
jo
jecxz
mov
in
aas
add
loope
scas
mov
or
not
call
dec
push
sub
xor
jne
enter
pop
aaa
mov
aad
rol
mov
stos
mov
pop
icebp
xchg
sahf
(bad)
and
xchg
loope
mov
xchg
adc
loop
int3
fcmovnu
(bad)
xlat
dec
dec
popa
cmc
xchg
out
lods
or
daa
xor
rep
les
cwde
or
push
xchg
retf
mov
push
xlat
mov
and
add
jmp
push
iret
cmp
xor
es
je
(bad)
jmp
jle
(bad)
ror
mov
sub
lea
daa
xchg
sub
(bad)
jg
les
test
sub
add
push
push
inc
cmp
int3
(bad)
loope
shl
mov
jl
jge
jne
or
or
or
scas
jl
pusha
enter
and
pop
rcr
xor
xor
ins
adc
cmps
and
mov
outs
popa
sub
dec
cmp
xchg
int
mov
mov
fmul
jnp
sbb
push
push
ficom
push
mov
cmp
sbb
iret
add
mov
jb
mov
pusha
xchg
jl
pop
dec
and
push
add
cdq
in
inc
push
jmp
jecxz
mov
mov
sbb
sbb
or
lahf
jp
fisttp
dec
(bad)
adc
imul
mov
shr
or
push
shl
pop
retf
shl
mov
jge
inc
in
sub
bound
push
cdq
jns
jo
adc
and
imul
xor
mov
push
test
jne
dec
ror
xor
ror
xchg
xlat
xchg
xchg
and
test
iret
ror
sub
mov
add
xor
sbb
aad
cmp
std
xor
push
(bad)
adc
pushf
mov
push
or
inc
inc
inc
jl
push
xor
stc
inc
in
(bad)
xchg
jmp
xor
jecxz
jl
mov
dec
cmp
(bad)
aad
out
inc
jns
add
inc
popa
ins
call
repz
lock
mov
dec
lahf
(bad)
in
aad
lahf
in
xor
bound
hlt
ret
popa
mov
call
mov
push
(bad)
jo
sahf
fidiv
cmp
or
xchg
sbb
nop
clc
shl
loop
sub
sub
dec
jne
daa
inc
scas
bound
aam
jb
adc
cmps
and
les
jo
int3
mov
test
aam
lea
push
dec
jo
jecxz
js
cmp
sbb
sbb
add
push
dec
stos
cmp
cld
ror
data16
je
mov
daa
daa
repnz
and
imul
stos
int
pop
push
xchg
lahf
jns
pop
pop
and
dec
shr
ins
mov
adc
enter
stc
out
push
sar
xchg
and
push
ss
les
push
jmp
xor
das
cmp
fst
ds
adc
pushf
(bad)
stos
ins
js
retf
shr
xchg
jne
mov
push
ror
(bad)
adc
fldcw
adc
xor
sub
xor
test
pop
ja
into
push
push
sbb
and
loop
mov
ss
cmps
cmp
jae
sbb
jmp
fld
nop
dec
push
int
mov
add
cmp
hlt
dec
shl
(bad)
cld
and
call
adc
fidiv
scas
test
bound
jle
mov
jne
out
rol
popa
adc
and
jns
pop
sub
fisubr
cmps
xor
push
aam
push
ret
in
dec
add
pop
mov
and
mov
fs
pop
sti
popa
adc
fucomp
stos
ja
(bad)
stos
mov
xchg
cmp
js
pop
movs
callw
mov
pop
pop
jl
mov
inc
cdq
jg
imul
fdiv
xor
push
test
add
dec
and
fisubr
bound
in
cmp
fs
shl
xchg
jns
push
adc
in
push
or
cs
mov
(bad)
enter
ds
push
(bad)
cmc
iret
inc
call
lea
pop
xor
sti
inc
lods
and
push
popa
and
lea
push
iret
push
add
or
mov
leave
pop
sub
cmp
aam
imul
leave
lods
iret
arpl
test
and
mov
test
mov
xchg
dec
retf
es
rol
add
push
jnp
inc
push
xchg
dec
dec
fcmovnbe
or
aas
push
mul
and
sti
pushf
ror
push
add
mov
sbb
lods
or
xchg
jp
aas
jno
std
sub
lds
cmp
mov
mov
inc
ret
fimul
pop
aad
je
pop
aam
fadd
xor
adc
(bad)
mov
imul
inc
lods
adc
cmps
test
rcr
adc
xor
fdivr
loope
fistp
dec
sub
jmp
or
in
jne
mov
je
xor
cs
cdq
outs
sbb
out
test
pop
inc
xchg
and
sub
lods
mov
mov
or
rcl
cmp
sbb
fidiv
sbb
sub
std
call
xor
xchg
inc
mov
cmp
daa
retw
stos
inc
jo
push
inc
inc
sub
ins
iret
dec
push
pop
adc
pop
jno
inc
xchg
dec
aad
gs
cmp
mov
mov
test
sar
std
jmp
fild
pop
cmp
cmp
hlt
mov
pop
inc
mov
xchg
icebp
mov
cdq
(bad)
in
xor
(bad)
xor
jmp
add
or
jge
in
cmps
test
arpl
xchg
or
or
pusha
(bad)
stos
repz
xchg
xchg
push
mov
ins
out
mov
jmp
dec
push
add
adc
ins
jg
mov
stos
test
or
dec
clc
mov
cmp
test
pop
inc
or
mov
(bad)
jl
mov
test
push
xor
movs
test
jle
fmul
icebp
imul
outs
repz
mov
push
pop
inc
and
and
adc
and
or
or
or
add
js
inc
pop
push
(bad)
aas
into
retf
adc
push
adc
push
xchg
(bad)
pop
stc
cli
(bad)
inc
mov
arpl
xchg
popf
and
cld
sbb
movs
push
mov
add
pushf
cld
xchg
aaa
js
lahf
je
jne
mov
or
jns
movs
stos
aam
jo
imul
test
retf
sbb
out
add
sub
adc
inc
in
mov
daa
add
sar
xor
test
mov
into
push
movs
dec
push
lds
dec
inc
jmp
adc
fcomp
lds
nop
and
and
jl
xchg
cmp
jecxz
push
stos
inc
into
dec
arpl
adc
push
dec
cwde
push
mov
xchg
xchg
mov
push
test
loopne
clc
vmwrite
out
or
in
mov
jnp
retf
mov
lods
dec
mov
mov
add
aad
sbb
mov
inc
xacquire
jnp
sti
mov
mov
jo
aaa
pop
sub
jbe
test
test
sbb
mov
adc
mov
cmps
push
pop
in
jmp
inc
lods
pop
les
pop
mov
sbb
fs
push
xchg
gs
enter
cmp
xchg
es
test
inc
fisub
pop
jl
adc
add
pop
xlat
scas
aaa
inc
sbb
adc
xchg
retf
inc
push
ins
into
mov
jmp
push
ret
repnz
xchg
leave
mov
gs
and
aad
mov
ins
cli
add
fst
sbb
dec
and
and
clc
cli
dec
mov
int
arpl
pop
or
inc
cmp
mov
dec
dec
cwde
sahf
push
mov
scas
xor
jae
pop
out
mov
loope
in
xchg
sbb
into
sub
loopne
lock
and
bnd
pop
push
icebp
pop
sub
jae
adc
pop
cmp
lahf
xor
daa
inc
out
jnp
je
arpl
pop
out
mov
inc
mov
scas
adc
stos
imul
add
cmp
aaa
popa
(bad)
out
jbe
add
cmp
call
cmp
jae
shl
cmp
movs
sub
or
scas
lea
xchg
add
jmp
mov
ret
inc
sub
bound
scas
repz
shr
xor
outs
icebp
jge
sahf
div
dec
ins
adc
and
sub
stos
loop
dec
jmp
ja
test
jmp
cmp
in
and
sub
gs
sub
test
call
ror
ins
xor
(bad)
xlat
or
pop
mov
jno
add
shr
mov
xchg
push
adc
cmps
cdq
mov
ins
fs
ss
cmp
jbe
pop
sub
cdq
jo
scas
jmp
jp
xor
out
cmp
sbb
dec
xor
pop
push
cs
shr
stos
push
pop
jns
fwait
pusha
or
jmp
and
pop
and
or
(bad)
push
push
aaa
sbb
cmp
lods
neg
dec
sbb
int3
jno
into
ins
lods
mov
ret
inc
or
ret
imul
mov
xchg
jb
icebp
daa
inc
mov
add
mov
mov
xchg
jecxz
mov
ret
loop
mov
mov
mov
rcl
fdivr
push
repnz
jle
cld
sub
das
(bad)
loop
mov
xchg
rol
push
cmp
add
cdq
add
mov
popa
retf
rcr
fld
je
arpl
lock
jae
pushf
adc
jno
or
ins
stos
xchg
push
inc
cld
xchg
add
sub
repz
(bad)
(bad)
cmp
bound
(bad)
cmp
jnp
and
xor
cld
pushf
push
fcomp
imul
repz
sub
adc
jno
cmp
adc
inc
pop
add
jg
push
sub
pop
adc
adc
hlt
retf
(bad)
loop
addr16
jo
add
mov
(bad)
mov
mov
lock
mov
mov
sbb
push
cmp
call
bound
sbb
(bad)
sti
mov
sub
add
dec
xchg
add
mov
stc
ins
xor
shr
dec
mov
scas
leave
mov
mov
or
xchg
inc
stc
dec
out
mov
pop
inc
dec
xor
xor
push
ret
and
xchg
call
ins
sub
or
nop
ror
dec
pop
mov
outs
daa
sub
dec
scas
push
aaa
out
lods
dec
popf
add
sub
fdivr
(bad)
(bad)
call
sub
sti
movs
dec
sbb
fsub
stos
mov
test
push
test
push
es
imul
pop
fcmove
js
test
imul
pop
out
clc
aad
inc
adc
outs
bound
in
mov
or
sbb
xchg
mov
pop
mov
into
cld
jb
push
or
scas
popa
cmp
mul
ins
leave
sahf
sub
pop
push
std
rcr
push
jne
jne
push
mov
lds
fimul
(bad)
sub
shl
pusha
in
cs
push
addr16
sbb
cwde
xor
pop
or
dec
ret
ins
lods
inc
adc
or
xchg
(bad)
nop
repnz
push
movs
out
pop
xchg
dec
pop
xchg
and
sti
inc
outs
fidiv
aas
mov
sub
cwde
imul
add
cmp
dec
jae
jns
add
shl
fimul
jo
cmp
and
cmc
ret
idiv
sbb
dec
pop
fwait
push
fmul
xor
xchg
ins
sub
adc
scas
xchg
pop
fs
loopne
push
push
jg
xor
adc
stos
pushf
cmp
scas
call
pop
push
inc
pop
(bad)
movs
popa
bound
daa
nop
cmp
ss
push
inc
je
(bad)
push
adc
cs
clc
loop
pop
aam
iret
hlt
gs
add
or
jbe
fidiv
push
or
sub
push
xchg
cmps
inc
and
mov
jns
xor
(bad)
push
push
push
or
fistp
xor
adc
or
dec
dec
fwait
adc
dec
out
test
retf
mov
lods
retf
out
stos
pop
je
jle
xchg
scas
xchg
pop
cli
inc
je
jbe
mov
jmp
add
push
lods
lods
dec
mov
mov
popa
pop
sub
rol
push
mov
add
lock
inc
in
xor
adc
inc
pop
cmc
pushf
or
mov
and
mov
scas
in
add
ror
es
fiadd
xor
call
les
lods
std
push
lods
mov
jns
aaa
pop
adc
inc
dec
lea
xor
push
lahf
cwde
sub
lods
sbb
add
push
or
cmps
stc
xchg
or
nop
test
out
dec
popf
sub
retf
iret
retf
push
jge
mov
sbb
xor
clc
ins
adc
mov
or
addr16
fisttp
in
and
sub
sbb
jl
in
sub
pop
test
jmp
imul
adc
mov
pop
pop
push
mov
f2xm1
fisub
mov
dec
fmulp
test
aas
push
clc
gs
xor
and
ret
cmps
cmp
adc
mov
mov
mov
cmc
idiv
repz
(bad)
lahf
pushf
jg
inc
std
mov
call
mov
lahf
out
inc
cmp
cdq
leave
sub
push
or
std
les
add
out
cmp
or
xchg
mov
pop
xor
cmp
retf
stos
nop
xchg
out
inc
pop
loope
jg
fld1
push
push
push
fwait
test
add
ret
loop
xchg
lods
cmp
loop
mov
test
sbb
mov
(bad)
(bad)
cmps
xchg
jns
cmp
xor
pop
mov
adc
sbb
mov
push
in
pop
(bad)
outs
das
mov
cmps
pop
aas
and
fdivr
inc
add
sub
xchg
retf
loopne
shl
dec
lods
or
mov
or
push
iret
jo
inc
fisttp
(bad)
daa
rcr
sbb
call
loope
imul
loope
sub
loopne
adc
push
add
or
fnstcw
inc
lea
into
jmp
push
scas
(bad)
ins
inc
add
shl
es
fst
int3
push
inc
mov
sub
or
lods
dec
mov
loopne
pop
in
lea
mov
shl
mov
stos
pop
int
xchg
and
inc
or
add
jmp
fmulp
jp
push
stos
gs
out
clc
and
sbb
push
test
sub
add
call
sti
cmps
iret
xchg
loop
sbb
push
inc
mov
repnz
das
pop
mov
aas
xor
adc
cmp
jae
out
and
fbld
mov
cmp
cmp
test
mov
clc
pop
js
mul
nop
js
push
xchg
scas
and
fild
retf
xor
sbb
add
cdq
(bad)
and
sahf
mov
and
int3
sub
or
movs
nop
clc
stos
adc
cmc
test
mov
adc
in
mov
xor
cmps
cmps
lods
pop
pop
jns
sbb
aam
xchg
add
cmp
jbe
mov
jg
push
das
jne
cmp
jb
inc
inc
dec
fld
pop
xchg
sbb
nop
retf
mov
add
sbb
xor
call
pop
xlat
sbb
xlat
jno
dec
cdq
and
fdivr
add
adc
jae
imul
or
mov
jns
in
cmps
sub
lgs
pop
jbe
es
adc
mov
xor
push
push
jecxz
cld
call
ja
mov
mov
mov
fcomip
push
mov
ss
cmp
push
inc
push
mov
push
(bad)
in
dec
inc
nop
adc
das
fmul
mov
push
ja
inc
mov
lods
dec
dec
pusha
push
and
and
adc
mov
fcomp
jmp
pop
call
jmp
add
and
out
rol
add
popf
not
inc
lock
inc
cmp
es
ss
ja
pusha
cmp
popa
test
imul
lahf
(bad)
jae
lea
mov
adc
push
mov
mov
ja
mov
mov
add
mov
dec
js
mov
out
push
jno
or
hlt
pop
cmps
lods
repnz
(bad)
repnz
mov
loopne
mov
sub
push
jns
mov
pop
mov
ret
mov
sub
ret
imul
sbb
aam
pushf
mov
(bad)
push
cwde
movs
movs
jle
not
xchg
cmps
cmp
sub
mov
ror
(bad)
imul
shl
dec
aad
pop
jg
cmps
inc
pushf
(bad)
rcl
sbb
shr
jns
xor
stos
jae
inc
sbb
xchg
xchg
ss
sub
pop
or
sti
or
repnz
fcmovne
jo
dec
aaa
call
pop
das
punpckhwd
xchg
out
sbb
dec
test
xchg
sub
sbb
ins
mov
push
inc
cmp
sbb
inc
rcl
ss
push
neg
and
mov
fcmovne
idiv
xor
repnz
cdq
and
inc
cs
adc
cmps
stos
dec
push
pop
adc
scas
cwde
xchg
ins
cmps
cwde
adc
in
int3
pop
sbb
loop
aas
movs
xchg
push
adc
jns
retf
(bad)
imul
call
inc
cmp
mov
adc
aaa
jns
lods
shl
fadd
xor
cmp
aad
ins
loopne
push
inc
loopne
mov
or
mov
cmc
cmps
idiv
in
mov
pop
dec
repz
mov
mov
dec
jg
lods
cmc
fcmovbe
and
ss
cdq
mov
pop
fisttp
shl
add
ds
dec
inc
or
sbb
arpl
pop
xchg
mov
popa
sahf
jl
fnsave
xor
jb
cmp
jns
sbb
in
aaa
(bad)
(bad)
xchg
pop
shr
or
in
sahf
add
cmps
addr16
sbb
add
mov
sbb
add
jp
dec
test
std
push
rcl
lea
dec
test
out
mov
and
mov
sub
fisttp
sbb
pop
mov
xor
(bad)
dec
dec
sub
xchg
(bad)
aad
add
pop
ret
scas
icebp
add
ror
retf
push
je
mov
add
mov
push
pop
test
fstp
mov
mov
push
adc
ss
js
or
sbb
sub
shl
push
dec
imul
ret
lahf
jo
xor
test
rol
test
pusha
je
mov
in
xchg
aas
mov
jp
arpl
sub
retf
fst
inc
lds
or
mov
lahf
inc
int
jecxz
xchg
mov
jmp
or
in
xor
out
inc
or
lods
mov
clc
ror
inc
(bad)
xchg
cmp
add
out
sahf
xor
lock
fucomp
shr
aas
cmp
mov
add
(bad)
jle
dec
or
or
lahf
pop
add
lock
addr16
xor
or
mov
addr16
mov
jmp
pop
in
inc
sub
sub
mov
push
sub
jns
or
(bad)
fidiv
and
or
lods
push
ror
scas
retf
adc
daa
add
mov
(bad)
not
push
arpl
and
shr
push
sub
or
xchg
nop
in
sub
adc
stos
pop
inc
dec
enter
add
mov
sbb
add
jp
and
call
ret
ret
popa
aaa
arpl
into
pop
xchg
retf
stc
(bad)
mov
into
jmp
into
aam
mov
mov
inc
and
lahf
jmp
pop
test
sbb
or
into
dec
jge
popf
rol
jg
jmp
mov
lahf
or
push
jns
xchg
xchg
fcomp
jp
(bad)
cwde
mov
cmc
push
push
pop
shl
mov
jns
call
xor
lock
push
lahf
dec
sti
fdiv
push
fbld
test
jns
into
out
inc
dec
outs
stc
cmp
enter
neg
cdq
pop
push
gs
mov
ror
mov
and
push
enter
rol
in
cmp
outs
or
jne
add
test
pop
push
fdivr
cmp
(bad)
aad
pushf
inc
or
popa
jmp
xor
enter
push
add
pop
add
aad
adc
add
cmps
fidivr
retf
(bad)
xchg
cmp
adc
xor
pop
(bad)
sti
pop
cmp
pop
cwde
(bad)
aam
adc
xor
jb
and
xchg
lea
je
add
in
(bad)
cli
cmps
or
test
mov
cmp
(bad)
or
in
idiv
rcl
add
enter
pop
push
xchg
shl
scas
mov
pop
mov
lods
or
cld
adc
add
fistp
sub
jecxz
jge
sub
cmc
adc
(bad)
iret
jbe
inc
or
mov
ins
jg
(bad)
push
jp
mov
push
pushf
dec
or
xor
pop
idiv
(bad)
clc
(bad)
jmp
test
xchg
lods
push
adc
and
dec
push
xchg
inc
sub
aas
shr
clc
dec
and
cwde
ins
rcr
inc
adc
cmp
shl
in
jns
push
jnp
data16
xchg
xor
jmp
stc
cmp
cmps
inc
iret
fucomp
adc
pop
sbb
pop
mov
cwde
sub
ja
mov
push
adc
jmp
mov
lds
loope
test
xor
sub
or
sub
fst
scas
jmp
mov
test
aam
or
and
mov
outs
es
push
repnz
loop
cmp
dec
jbe
xor
push
rol
or
in
xor
loopne
jae
cmp
inc
cmp
inc
or
xor
mov
je
hlt
lods
scas
mov
jo
sub
jecxz
jp
push
and
sbb
mov
inc
and
add
mov
adc
push
out
or
jecxz
push
push
imul
out
cli
jae
cmp
or
test
adc
sub
pushf
xor
call
sub
inc
movs
mov
dec
stos
cmp
inc
arpl
rol
pop
shl
adc
movs
jle
lock
cmp
cld
scas
pop
pop
push
pmuludq
test
iret
lea
push
mov
jg
out
rol
ja
cwde
jo
aam
test
push
xchg
clc
iret
popa
inc
ins
cs
jno
loop
popa
add
xor
pop
adc
mov
into
retf
mov
fs
pushf
sub
xchg
mov
push
mov
clc
aaa
imul
inc
jle
popf
test
popa
xchg
mov
(bad)
mov
and
inc
pop
jle
les
retf
sbb
dec
sub
rol
mov
sar
or
loop
fsub
jns
pop
xchg
test
jecxz
mov
imul
mov
or
jne
dec
rol
ds
leave
daa
pop
outs
inc
push
stos
into
jno
mov
adc
xor
jns
test
rol
jnp
and
sbb
mov
in
lods
and
loop
cmp
mov
sbb
retf
neg
xchg
clc
jae
jl
jae
cmp
mov
cdq
mov
pop
and
les
mov
lahf
and
inc
cmp
sti
or
popf
stc
fidiv
or
xchg
mov
pop
add
fisttp
rcr
repz
ss
xlat
jmp
mov
das
in
sbb
fwait
imul
adc
js
jecxz
inc
out
(bad)
in
mov
sub
xor
neg
sahf
xlat
sub
inc
jecxz
cmp
aas
mov
aaa
push
popf
lods
inc
xor
add
xor
dec
sbb
add
nop
das
add
icebp
xchg
js
inc
adc
xchg
and
psubsb
mov
push
cmps
cmps
and
call
ss
push
(bad)
jno
mov
lods
and
dec
sti
sbb
test
or
popf
clc
pop
or
cwde
out
push
inc
fs
mov
repz
xor
mov
sub
lds
push
jnp
push
scas
mov
enter
test
and
leave
and
leave
xchg
and
push
xor
test
jo
fild
push
or
stc
shl
or
fimul
in
xor
dec
add
stc
repz
push
scas
sub
and
out
pop
outs
mov
and
jo
popa
dec
xchg
mov
jge
loope
(bad)
add
jb
xchg
inc
fisub
sbb
cmp
and
ror
sub
sar
jecxz
jmp
sbb
inc
aaa
sub
ret
dec
push
aad
xor
add
jmp
mov
add
sbb
nop
and
xchg
js
retf
stos
outs
ret
mov
jge
or
sahf
add
dec
add
dec
or
mov
(bad)
fnstcw
mov
mov
push
cdq
loop
cmp
mov
sub
push
inc
retf
inc
stos
je
sbb
pop
movs
inc
dec
pushf
xchg
sbb
div
inc
daa
ja
or
ja
int3
test
iret
jmp
ja
jecxz
cmp
stos
int3
add
xor
ret
fst
add
push
mov
jp
inc
or
xchg
outs
xor
clc
xlat
pop
sub
dec
cdq
jmp
sar
out
jns
mov
push
cli
cmps
cmp
cmp
inc
enter
out
nop
and
jb
add
xchg
mov
cmp
cs
outs
icebp
or
or
or
push
ja
test
add
js
xchg
into
rcl
sub
mov
fadd
sbb
ret
mov
pushf
and
pop
push
and
in
and
or
in
add
push
push
cmp
sbb
mov
add
cmp
sbb
pop
sbb
test
in
ficomp
fild
scas
ds
inc
jmp
xchg
cmp
push
jmp
mov
jl
shl
outs
jmp
add
stos
fsub
jo
popf
add
cld
mov
mov
and
pop
sub
fimul
out
lock
sbb
push
mov
inc
push
and
inc
sbb
xor
movd
shr
pop
repz
retf
out
jae
xchg
mov
not
mov
je
ins
(bad)
in
sahf
ret
inc
and
aam
sti
or
mov
add
sub
add
popa
jecxz
test
pop
(bad)
push
adc
xchg
pop
ret
ret
in
sbb
xor
shl
shl
cld
xor
sbb
mov
jns
div
movs
les
stos
pop
ins
imul
and
xchg
stos
push
call
aam
mov
das
xchg
sti
aas
pop
push
(bad)
add
nop
inc
xchg
sub
popa
(bad)
lds
int
into
sub
repz
in
mov
mov
popa
pop
addr16
shr
xchg
push
in
sbb
jmp
lds
xor
sub
imul
std
xchg
jg
sti
or
inc
dec
imul
fidivr
push
and
in
xchg
sbb
mov
inc
and
xor
xchg
push
jo
add
cmps
ret
pop
adc
mov
cmp
retf
jecxz
xor
xchg
fdivp
adc
xchg
repz
jp
outs
repnz
out
fcom
(bad)
xor
xchg
mov
and
push
inc
enter
sbb
stos
daa
adc
mov
scas
mov
jns
in
sbb
cmp
xor
sti
mov
aaa
lea
(bad)
pop
jns
fidivr
cmp
xchg
iret
retf
addr16
in
push
xchg
xchg
dec
xor
or
push
mov
frstor
lahf
sub
push
jae
cmp
fsubr
sbb
adc
sti
std
push
add
aaa
sub
das
loop
inc
test
retf
adc
xor
popf
scas
pop
stos
jp
inc
stos
addr16
dec
ins
sbb
fisub
cmps
sti
push
inc
stos
add
mov
mov
adc
je
mov
and
xor
in
jmp
adc
jge
push
leave
mov
bound
mov
mov
adc
gs
clc
dec
xor
fwait
push
sahf
and
push
mov
adc
test
mov
pop
outs
sbb
shl
mov
dec
push
retf
mov
push
mov
jno
xchg
cmc
jmp
out
stos
repnz
xchg
dec
mov
sub
sbb
(bad)
jne
mov
mov
loopne
mov
push
mov
jmp
cld
xchg
sbb
mov
mov
cmc
nop
std
push
(bad)
xchg
ins
(bad)
mov
test
int3
cdq
clc
sahf
rcl
cmp
xchg
adc
arpl
imul
or
sub
jmp
(bad)
sub
pop
mov
and
test
bound
mov
sbb
pop
shr
jmp
fisub
dec
stc
in
stos
test
inc
xchg
stc
jge
mov
fcom
adc
and
test
aas
leave
test
arpl
xor
repnz
push
push
cwde
fwait
xlat
jno
fcmove
loop
stos
add
lods
push
ret
cmp
ja
mov
or
ret
(bad)
inc
mov
das
and
stos
xor
mov
mov
jno
(bad)
int3
jae
add
jne
fld
rcl
adc
arpl
fs
fstp
stos
adc
and
jle
push
dec
xchg
adc
push
push
fwait
inc
push
ins
push
dec
aaa
in
and
js
out
jb
push
aad
std
sbb
sbb
jg
mov
sbb
not
fnsave
mov
pop
adc
mov
scas
jb
gs
mov
inc
sub
push
push
add
loop
mov
fld
inc
add
dec
xor
int3
cmp
pusha
(bad)
cmp
add
ins
xchg
dec
bound
fst
(bad)
cmps
cmp
inc
inc
loope
add
lods
fnsave
test
sbb
sbb
sub
ins
mov
mov
cdq
mov
std
mov
movs
shl
out
xchg
in
xor
fcom
mov
aam
repnz
retf
inc
ret
pop
test
xchg
fsubr
push
call
inc
fnsave
push
adc
ins
mov
push
call
and
inc
mov
pop
jnp
cld
leave
push
(bad)
xlat
sub
popf
inc
sahf
div
rol
xlat
imul
sub
pop
jmp
mov
push
fisttp
pop
inc
adc
dec
xor
pop
cmp
movs
jge
(bad)
xor
xchg
or
je
and
add
arpl
test
mov
fwait
mov
stc
cmp
cmp
out
jle
cli
(bad)
stos
mov
push
jb
mov
fsubr
retf
shl
mov
mov
gs
jl
add
add
fwait
pop
mov
fnsave
inc
lds
mov
adc
(bad)
dec
cmps
mov
popa
stos
je
add
and
or
adc
jle
clc
outs
mov
add
(bad)
mov
imul
not
test
jns
ins
mov
or
mov
out
call
repz
sahf
mov
push
test
xchg
fcomp
xchg
popf
xor
jns
cs
mov
scas
je
jge
fsub
pop
pop
mov
imul
outs
sub
lods
or
popa
sub
adc
lsl
test
test
sbb
or
cdq
popf
jle
inc
or
mov
clc
cmp
dec
add
cmp
jl
jge
pop
mov
and
pop
gs
pop
jge
pop
add
dec
sub
xchg
xchg
xor
and
mov
test
and
clc
je
jo
mov
pop
mov
jnp
inc
adc
sub
add
inc
hlt
scas
xchg
cmp
adc
mov
test
or
adc
xchg
xchg
adc
fiadd
shl
sub
fstp
bound
cld
cmp
add
mov
(bad)
pop
inc
xor
inc
push
inc
out
mov
rcl
outs
in
fwait
dec
and
xchg
inc
lahf
sbb
and
xchg
add
push
ret
outs
and
cs
jecxz
fwait
mov
ds
lods
cmp
cwde
or
imul
cwde
sbb
hlt
(bad)
daa
data16
aaa
mov
cmp
mov
aas
pusha
adc
mov
repnz
pushf
ins
dec
pop
mov
mov
test
mov
dec
pop
cmp
add
outs
adc
loop
out
sbb
retf
sub
adc
outs
imul
cmps
rcr
mov
mov
neg
sub
pusha
test
jl
mov
jae
pop
outs
fldcw
mov
fisubr
push
loopne
mov
adc
dec
jno
mov
inc
(bad)
cld
xchg
adc
clc
fnsave
sbb
stos
movs
out
pop
sbb
int
(bad)
in
xchg
lds
(bad)
jbe
pusha
(bad)
cld
jmp
xor
and
cmps
hlt
mov
leave
inc
loopne
arpl
pop
dec
in
aam
dec
mov
xchg
cmp
loop
cmp
sti
call
xor
jae
cmp
push
ins
mov
jl
inc
push
mov
int3
enter
sbb
or
cmc
adc
mov
adc
loop
and
jge
cmp
dec
test
fld
jo
fs
xchg
shl
jns
pop
lods
std
fwait
or
sub
test
inc
mov
mov
xchg
bnd
cmps
call
test
inc
outs
jns
mov
hlt
dec
mov
jmp
add
scas
inc
jl
out
ins
jbe
stc
adc
cmp
dec
js
outs
and
pop
test
jecxz
(bad)
xlat
shl
dec
dec
jmp
sub
arpl
push
aam
shl
and
jo
xor
loope
mov
sbb
pop
sub
aad
cmps
sub
pop
mov
push
sub
xor
sub
cdq
fiadd
adc
repz
mov
js
sbb
lods
mov
jne
mov
xchg
lods
(bad)
(bad)
jmp
adc
jns
mov
sub
jmp
dec
adc
push
mov
clc
xchg
cmps
jp
push
(bad)
push
jbe
fild
test
jle
jae
push
loopne
lods
cmp
jbe
add
add
sbb
push
scas
dec
ins
rol
cmp
jecxz
mov
mov
nop
xchg
adc
pushf
dec
int
xchg
mov
sbb
mov
cmp
sti
mov
jb
pop
scas
fist
mov
inc
pop
repz
add
loop
stos
shl
push
lahf
mov
jne
sbb
imul
cs
les
bound
in
cmp
int3
sub
outs
jb
in
sbb
mov
out
adc
popf
popf
add
push
aad
dec
ins
add
in
lock
and
jb
nop
push
test
xor
push
daa
hlt
mov
pop
jo
and
push
cmp
add
jmp
sbb
(bad)
shl
mov
mov
mov
arpl
jp
neg
cmp
add
repz
pusha
xor
mov
neg
or
jae
add
mov
add
pushf
or
fisub
mov
adc
movs
nop
xchg
movs
add
ret
push
in
mov
push
repnz
and
cwde
fs
xor
mov
inc
xchg
push
nop
nop
shl
ret
push
push
dec
les
retf
fisttp
lahf
bound
jnp
stos
out
xchg
in
push
fld
xchg
cdq
ins
pop
pop
xor
ret
adc
mov
(bad)
mov
addr16
jb
sub
add
sahf
call
in
jge
daa
mov
cmp
test
dec
sbb
push
test
lahf
ins
xchg
out
sbb
ss
and
pop
mov
xchg
mov
(bad)
fiadd
ins
fidivr
es
push
out
into
push
ret
add
stc
jl
push
retf
or
mov
cmp
sub
aad
idiv
in
xchg
aaa
push
and
lods
iret
and
(bad)
pusha
das
or
call
or
ficom
shl
and
test
or
lahf
mov
cmc
ds
clc
movs
arpl
loop
mov
mov
fnstcw
jle
pop
inc
pop
aaa
loope
or
retf
int3
(bad)
fcomp
add
or
shl
dec
adc
push
into
inc
push
(bad)
mov
in
test
inc
fidiv
into
sbb
inc
repnz
jg
and
inc
add
pop
mov
xor
mov
inc
test
fsub
inc
xchg
push
idiv
and
dec
cmp
lods
pushf
adc
cmp
mov
aam
lods
pop
adc
sub
je
xor
outs
imul
fsubr
repnz
shl
retf
fsubr
xor
pop
ror
sbb
iret
loop
xor
je
mov
mov
repz
dec
popa
push
das
aad
jns
dec
pusha
add
fisubr
or
imul
xor
xchg
outs
lock
add
sahf
inc
das
repz
shl
add
add
xchg
cmps
push
add
xlat
and
cs
in
movs
and
mov
lahf
adc
xchg
mov
adc
and
js
xchg
test
fisttp
push
shl
das
jne
icebp
test
scas
mov
push
stos
or
sbb
push
sub
pop
sar
mov
setg
push
mov
cmp
and
int3
push
loopne
push
ficomp
sbb
add
cmp
mov
ret
lods
inc
mov
cmp
(bad)
movs
xchg
xor
mov
mov
ret
xchg
movs
push
xchg
(bad)
jne
and
sbb
(bad)
xchg
xor
fistp
jp
cmp
jmp
mov
mov
pop
cmp
mov
and
shl
ret
pop
adc
xchg
and
(bad)
shr
not
pop
(bad)
push
daa
mov
pop
mov
mov
pusha
test
out
ss
jbe
rcr
cld
mov
ret
push
sub
in
shl
stc
dec
clc
js
test
cmps
and
push
add
dec
out
lahf
sub
sub
mov
and
aaa
xchg
jp
mov
ds
add
lahf
sub
aas
(bad)
pop
test
sub
cmp
retf
fimul
adc
dec
je
push
repnz
shl
and
mov
mov
cld
sti
les
adc
sbb
in
js
mov
sub
cwde
cmp
lods
sub
nop
mov
mov
mov
inc
adc
shr
sbb
imul
adc
jmp
jg
mov
push
fs
dec
cwde
push
pop
xchg
xchg
lea
mov
(bad)
(bad)
movs
fnstenv
inc
lds
div
or
into
out
dec
pop
pop
lods
test
stos
in
shl
clc
inc
sbb
sub
jae
(bad)
daa
mov
test
rcr
mov
adc
cmps
mov
mov
neg
mov
mov
(bad)
cmp
mul
pop
or
cmps
mov
add
into
push
push
mov
push
cmp
pop
gs
jae
int
test
sub
lahf
lock
mov
out
leave
and
shl
xor
cmp
sub
inc
jg
or
mov
pop
jns
or
aaa
mov
mov
mov
xor
dec
dec
mov
and
jnp
fucomp
dec
jo
mov
cs
sti
iret
cwde
sbb
fstp
mov
mov
dec
sub
movs
cmp
lods
and
les
mov
pop
jecxz
adc
xchg
in
sbb
lahf
push
fisttp
aam
or
bound
rcl
xor
cmp
cmp
push
pop
dec
xchg
shl
inc
out
call
outs
call
cmc
adc
sbb
sub
(bad)
mov
lods
push
cmc
sbb
mov
add
mov
jl
push
lds
inc
lods
jmp
icebp
push
mov
push
mov
mov
ret
push
inc
mov
pop
scas
mov
dec
push
add
push
dec
ficom
jbe
jae
jmp
mov
mov
pop
pop
fist
jl
xchg
cld
into
jge
inc
sub
push
or
dec
adc
xchg
jb
outs
cwde
js
clc
sub
jle
mov
xor
mov
mov
xor
mov
sub
out
lods
inc
add
xchg
push
out
dec
(bad)
adc
loope
push
enter
ret
div
or
sub
sub
popf
mov
sub
jo
xor
xor
sahf
push
xchg
cli
and
bound
and
mov
and
push
imul
movs
pusha
lods
dec
pop
sbb
sahf
dec
movs
mov
mov
pop
jecxz
ret
inc
(bad)
sar
cs
ins
dec
adc
out
add
pop
push
sub
mov
mov
dec
mov
data16
cwde
mov
mov
stc
xchg
mov
jl
jns
inc
push
mov
lods
loopne
into
and
jge
add
mov
inc
int3
inc
lea
jnp
jmp
add
daa
jne
push
mov
mov
sbb
dec
xlat
mov
pop
jecxz
mov
mov
pop
rol
int3
xchg
pop
gs
jmp
aad
stos
xor
push
outs
jmp
sbb
mov
sbb
push
sub
ins
sub
leave
push
add
adc
inc
lea
mov
inc
cmp
lods
ins
mov
neg
fbld
xchg
cmp
repnz
leave
sbb
test
push
nop
neg
clc
push
mov
pop
dec
dec
cld
loopne
stos
or
pop
cmp
arpl
xchg
test
pop
cmps
or
ds
xchg
sti
mov
jo
popf
push
pop
sub
jmp
(bad)
cmps
mov
imul
mov
icebp
push
test
les
(bad)
and
pop
push
sub
cdq
fs
xchg
or
inc
mov
sub
out
xchg
and
mov
mov
dec
jecxz
cmps
dec
jae
or
xor
addr16
aad
adc
lahf
jae
cwde
fsubr
xchg
cmc
shl
imul
call
lods
leave
push
xor
mov
cdq
pop
xchg
pop
sbb
xchg
inc
adc
cmp
lea
mov
imul
fimul
sbb
aam
cmc
test
pop
inc
rep
stc
jmp
adc
stos
pushf
push
int3
sub
adc
sbb
les
cmp
pop
pop
je
cmps
or
(bad)
mov
push
jecxz
lods
bound
sahf
shr
mov
push
adc
jg
call
pop
jmp
pop
loope
push
push
jg
sbb
push
and
sbb
scas
leave
ret
in
(bad)
jecxz
sbb
and
(bad)
sub
fldlg2
push
test
int
sbb
pop
dec
push
sub
sub
pop
jge
mov
mov
rcl
icebp
arpl
out
and
sbb
pop
or
idiv
mov
pop
cmp
cmps
mov
mov
popa
push
fist
xchg
je
repnz
sbb
xor
ja
jl
xchg
ficom
btc
not
fsub
xchg
xor
or
out
add
loop
adc
push
jg
std
push
pop
out
sbb
pop
in
fistp
(bad)
out
test
int
(bad)
xchg
lods
cdq
retf
sbb
loope
ltr
fs
das
push
(bad)
cld
jg
stc
cmp
dec
inc
cwde
fwait
dec
aam
and
or
jae
fs
pushf
dec
sbb
xor
movs
int
add
aaa
push
mov
mov
inc
pop
fldenv
ins
je
cmps
sub
enter
pushf
(bad)
scas
inc
xchg
test
ins
sub
fidivr
movs
pop
and
repnz
mov
scas
cmp
sub
jg
sbb
je
popa
or
outs
(bad)
jle
and
jge
cli
push
mov
xchg
arpl
shl
call
(bad)
fist
ficom
lock
add
mov
inc
mov
loope
movs
call
xchg
lock
jmp
or
sbb
cwde
aas
call
fadd
cld
ins
jnp
jo
lds
jle
arpl
add
outs
xchg
loop
lahf
cmc
xor
xrelease
xor
sub
cmp
xchg
movs
or
sub
push
xchg
adc
add
mov
jge
and
adc
mov
sahf
jo
cmp
iret
mov
adc
inc
ja
xchg
mov
or
cmp
push
cmp
pop
dec
arpl
(bad)
sub
orps
dec
mov
pop
mov
mov
push
sub
sub
daa
adc
mov
sub
adc
mov
add
pop
aas
in
jae
test
ret
mov
aad
aad
ficom
cdq
inc
cmp
sbb
cmc
mov
mov
mov
and
into
aas
or
das
xor
les
sub
mov
mov
clc
xchg
scas
sar
sub
outs
xor
shl
xchg
inc
jno
xor
mov
mov
or
push
fild
fst
add
push
xor
shl
jnp
imul
push
sub
mov
xlat
fistp
test
xchg
(bad)
push
bndstx
movs
sbb
call
mov
pushf
stos
pusha
sub
cmp
ins
pop
jecxz
jno
mov
cmp
sub
(bad)
shl
jle
dec
test
std
jnp
(bad)
mov
inc
mov
retf
adc
(bad)
loopne
stos
cdq
xchg
push
xor
div
cmp
mov
mov
xchg
cmps
mov
fidivr
cmp
call
leave
xor
cmps
pop
inc
add
stos
xor
add
call
fbstp
pop
sbb
sti
adc
mov
repnz
xor
call
dec
and
out
dec
(bad)
mov
fild
push
sbb
pop
inc
test
add
icebp
add
fmul
addr16
sub
sahf
aad
dec
add
jmp
outs
das
repnz
cmp
cmps
push
sub
daa
rol
mov
or
test
mov
adc
xchg
or
aas
push
outs
push
jo
push
dec
push
add
push
in
icebp
sti
cmp
push
ins
jmp
lock
lods
sub
and
jg
lods
fisub
js
inc
call
pop
je
imul
and
jns
es
sub
into
cmp
aaa
pusha
les
xor
das
jge
cmp
test
pop
mov
cmps
and
ins
adc
icebp
sub
imul
pop
jns
and
(bad)
dec
jo
and
push
and
daa
fmul
jg
das
data16
xlat
xlat
cmp
push
ficom
add
call
and
mov
fisttp
xor
retf
jge
ret
add
test
push
and
fstp
loop
mov
fist
int
cmps
pop
fstp
inc
pop
add
dec
sti
out
sub
sti
popf
dec
bound
pop
sbb
cli
stc
mov
jle
ja
ds
sbb
sahf
cwde
inc
cmps
lods
daa
and
(bad)
rol
push
stos
mov
mov
and
dec
(bad)
mov
dec
sbb
pop
mov
push
fwait
adc
retf
test
adc
pop
in
mov
pop
pavgb
push
int3
movs
clc
and
cwde
dec
dec
push
and
inc
cmps
or
repnz
mov
jge
xor
lock
icebp
sbb
inc
fdiv
xchg
test
shl
jg
adc
shr
add
add
out
scas
or
aad
jmp
mov
outs
xchg
loope
call
enter
mov
mov
jmp
dec
pushf
shr
test
xchg
xor
mov
xchg
xchg
or
push
call
mov
mov
mov
adc
mov
je
inc
inc
in
nop
je
xchg
arpl
cmp
call
pop
bound
xor
jecxz
add
mov
mov
test
call
repz
and
dec
fdiv
push
dec
hlt
jp
stc
dec
mov
pop
jp
cli
scas
jbe
mov
int
dec
(bad)
cs
loopne
lss
std
xchg
jnp
jno
jns
lods
cwde
pop
cmp
dec
rol
shl
loop
mov
inc
jl
(bad)
push
lahf
popf
xchg
je
xlat
inc
adc
int3
sbb
(bad)
or
mov
(bad)
add
add
inc
inc
mov
or
test
sbb
ret
sahf
add
adc
fs
push
mov
dec
push
inc
or
hlt
dec
add
leave
in
xchg
loope
jp
jmp
cmp
mov
push
xor
dec
add
xor
clc
pop
pushf
xchg
stc
repnz
pop
dec
bound
adc
cwde
out
sbb
in
(bad)
stc
push
sbb
xor
fadd
lods
pop
pop
call
cli
mov
mov
adc
out
jle
imul
jge
and
pop
pop
arpl
lds
push
sub
and
shl
mov
pop
inc
ins
gs
repz
call
dec
mov
mov
ret
mov
cld
es
sbb
jle
lods
pop
aaa
cmp
and
enter
fsub
mov
pop
lock
pushf
out
push
mov
dec
jge
je
movs
cmp
and
mov
xchg
or
jl
ds
int
outs
in
sbb
sbb
aam
push
aam
adc
repz
jbe
jle
ss
movs
test
addr16
(bad)
clc
jl
xchg
mov
popf
xor
pop
push
ja
test
cmp
bound
jnp
sar
neg
in
cs
inc
ss
loopne
mov
or
mov
adc
mov
adc
popf
into
sub
and
in
int3
sbb
sbb
dec
dec
sub
mov
scas
popf
jmp
in
(bad)
mov
xchg
bound
jne
div
jp
nop
and
mov
shl
pop
xchg
jnp
imul
shl
int
imul
movs
sub
in
leave
inc
test
mov
cmp
xchg
push
xor
fsub
shl
shl
scas
ds
mov
sub
lock
xchg
cli
xlat
add
xchg
iret
pushf
pusha
mov
jb
and
mov
repnz
cld
adc
fisttp
test
ins
mov
stos
mov
add
fisttp
xor
and
mov
sbb
cmp
inc
not
xor
mov
inc
or
pop
pop
inc
popa
je
(bad)
cmp
jae
dec
mov
rcl
retf
mov
stc
loopne
out
js
inc
push
push
adc
and
xchg
ret
movs
mov
mov
shr
push
xchg
retf
push
lds
mov
push
es
push
fcmovb
iret
ja
scas
jbe
xchg
ret
xor
aad
(bad)
scas
mov
inc
dec
(bad)
cmp
add
sbb
mov
jmp
sub
lods
mov
dec
into
mov
add
cmps
and
jge
xlat
adc
imul
test
out
xor
mov
(bad)
mov
inc
into
xchg
ins
retf
aas
pusha
xchg
push
fistp
test
xor
aas
mov
cld
aad
out
jecxz
push
push
inc
mov
das
ss
aam
mov
dec
sub
aad
jbe
dec
repnz
int3
sbb
and
xor
popf
fidivr
jl
sub
dec
pcmpgtb
sub
(bad)
xor
movs
in
pop
int3
in
pop
pop
and
cld
xchg
retf
in
mov
xchg
call
repnz
shl
or
sti
cmps
vmptrst
or
mov
and
mov
or
inc
(bad)
sti
dec
xchg
ror
push
(bad)
mov
mov
sbb
cmc
sbb
push
js
ficom
sbb
rol
bound
mov
mov
jo
arpl
fs
(bad)
jmp
test
sti
movs
add
rcl
dec
(bad)
scas
stos
adc
inc
sti
cmp
int
jo
popa
jnp
xor
aam
lods
adc
cmp
sar
push
adc
dec
adc
bnd
adc
fistp
cmp
mov
cld
call
outs
ins
inc
rol
ins
mov
dec
jne
pop
sbb
lahf
adc
jl
xchg
xor
pop
adc
movs
jmp
lods
inc
retf
cmp
loope
dec
mov
les
in
es
sub
loope
or
push
repz
cmp
leave
rol
aas
add
fcomp
mov
xor
cmc
mov
retf
jne
aas
xor
dec
pop
in
leave
or
(bad)
ss
fcom
shr
ds
aaa
imul
add
sbb
nop
cmps
(bad)
push
movs
dec
enter
mov
mov
mov
sbb
cmp
fisubr
in
inc
mov
stc
hlt
aam
mov
xchg
test
into
in
int3
pop
outs
js
cmp
cmp
fimul
(bad)
push
and
outs
shl
adc
dec
imul
mov
sbb
ins
pop
mov
mov
icebp
fcmovu
test
fwait
xlat
xchg
iret
les
mov
mov
fist
mov
(bad)
mov
lods
or
outs
enter
leave
pusha
retf
lods
into
cmp
add
push
fmul
scas
test
xor
dec
arpl
ret
outs
mov
movs
in
ret
jmp
push
scas
cli
mov
imul
lods
xchg
dec
cmc
scas
sub
in
xchg
dec
fisub
aas
dec
inc
or
and
retf
les
clc
mov
sub
pop
dec
stos
lods
ins
push
gs
or
xchg
adc
pop
mov
scas
dec
xchg
cmps
push
jecxz
retf
in
sub
pop
push
sub
sbb
push
ret
loopne
mov
call
mov
xor
jecxz
fcomp
pop
sub
fxch
jno
cmp
es
dec
test
sbb
cmp
mov
lock
mov
sub
adc
xchg
imul
adc
shl
push
pop
(bad)
ja
test
push
das
(bad)
leave
out
out
sbb
inc
js
fldcw
je
inc
cs
fisubr
out
mov
or
in
xor
retf
xchg
xor
xchg
fwait
es
lock
jo
or
mov
pop
imul
mov
or
push
jmp
and
add
inc
icebp
xchg
icebp
cli
jo
or
fs
cwde
xor
jg
cdq
cmp
aad
(bad)
dec
pop
jae
mov
out
loope
add
mov
and
jle
mov
dec
enter
xchg
int3
push
lods
repz
sub
pop
(bad)
cmp
mov
push
movs
aam
mov
mov
ss
sbb
std
mov
sub
add
aam
xchg
fcomi
bound
(bad)
pop
mov
adc
mov
xor
arpl
xchg
mov
jmp
stos
scas
adc
mov
sbb
scas
or
sar
bound
sbb
mov
in
fmul
pop
lea
dec
popa
push
cmp
sbb
push
cli
imul
sub
sahf
sub
inc
scas
es
fst
sub
mov
sub
dec
daa
jle
sahf
push
jle
add
adc
xchg
jl
add
daa
fwait
out
add
mov
or
mov
in
iret
push
xchg
pop
push
(bad)
call
jne
rol
add
bound
call
ret
push
cwde
pop
jle
aaa
ins
or
fld
xlat
push
cmp
stos
std
push
xor
add
call
and
fdivrp
bound
xor
cli
(bad)
mov
cld
sub
clc
call
test
leave
pop
and
push
mov
fimul
or
ja
stos
retf
cmp
mov
or
popf
mov
sar
scas
sbb
hlt
in
retf
adc
mov
dec
push
push
es
sub
inc
pop
enter
sub
sbb
mov
xor
into
mov
push
movs
scas
mov
dec
sub
or
dec
mov
jge
jl
pop
das
cmps
cmp
cwde
cld
push
sub
rcr
jns
dec
jl
dec
xor
imul
out
mov
inc
dec
inc
pushf
(bad)
mov
and
inc
pop
(bad)
inc
jb
(bad)
lods
mov
sti
xchg
and
mov
cmp
mov
out
push
ds
lds
call
movs
cmp
in
pop
or
inc
lds
shl
shl
cdq
loopne
and
add
pop
cmps
data16
mov
sub
movs
es
loopne
add
adc
add
repz
call
or
xchg
(bad)
loope
lods
sub
and
mov
pop
sbb
mov
mov
fpatan
pop
(bad)
push
jns
sub
daa
inc
jo
push
dec
popf
into
push
jo
ja
xor
mov
jno
cmc
cmp
fs
aad
arpl
jb
jle
pop
push
add
test
or
jp
movs
in
ins
sbb
jnp
jns
mov
and
lahf
and
mov
rcr
inc
test
sahf
xchg
imul
or
jle
and
stos
je
xchg
or
or
push
sbb
pop
or
sbb
adc
fs
add
stos
push
inc
inc
dec
and
cld
sbb
mov
loopne
movs
sub
xchg
(bad)
push
mov
jne
not
pop
push
shl
dec
sahf
jge
xchg
and
xor
push
sbb
or
pushf
push
push
repnz
lahf
mov
sbb
jbe
les
inc
fisub
or
mov
pop
int
sbb
inc
into
mov
bound
push
cdq
sbb
or
je
retf
outs
outs
cwde
cmps
hlt
scas
daa
out
aas
(bad)
pop
lahf
mov
jo
push
xchg
and
push
inc
add
inc
in
and
(bad)
mov
cld
lea
ret
imul
jmp
xchg
xor
xor
int3
pop
or
xchg
pop
cmp
add
push
ficomp
xchg
mov
xlat
cdq
repnz
imul
jge
(bad)
nop
test
shl
xchg
mov
test
pop
add
inc
dec
adc
xchg
and
nop
mov
fwait
int
cmc
test
and
(bad)
jmp
add
loope
daa
dec
push
mov
aam
fsubr
fild
leave
loopne
or
dec
push
loop
xchg
jmp
mov
mov
aad
scas
sbb
cmp
les
mov
out
clc
jge
outs
cdq
adc
dec
xchg
mov
add
pop
jecxz
jmp
scas
cmc
pop
mov
sub
or
mov
push
push
lods
mov
gs
xor
js
unpckhps
mov
fwait
scas
adc
mov
in
addr16
jg
pop
pop
sbb
cmp
dec
neg
mov
aad
push
rol
xor
and
aas
leave
cmp
mov
inc
lock
or
test
cmp
inc
jecxz
pop
push
add
fidivr
mov
mov
ins
and
cli
out
scas
dec
cmps
sbb
pop
sbb
mov
std
ds
hlt
xchg
jmp
lds
sti
shr
fst
stos
imul
out
pop
popa
sahf
mov
cmp
inc
loopne
mov
ror
loop
jmp
pop
push
fdiv
fdivr
sbb
rcl
xchg
push
mov
stos
mov
imul
inc
sub
loopne
cld
cmp
jbe
repnz
push
loope
adc
jg
jo
in
jle
inc
mov
xchg
clc
inc
dec
dec
push
loope
pop
mov
push
mov
inc
js
movs
shl
jmp
adc
jne
cmp
xor
clc
xor
dec
shl
lahf
in
push
xor
mov
dec
xor
jne
adc
dec
mov
xchg
mov
call
mov
mov
adc
cmp
fnstcw
push
div
pop
mov
rcl
add
scas
jp
das
movs
xor
outs
aas
add
(bad)
movs
or
call
cmps
ja
mov
mov
pop
xchg
jnp
adc
or
jle
adc
vpcmpeqd
jae
push
test
pop
inc
add
add
or
daa
mov
leave
inc
scas
push
cmp
test
stos
mov
jp
mov
test
out
sahf
cmp
inc
(bad)
pop
data16
jmp
pop
out
inc
sti
pop
inc
and
push
sti
dec
push
loopne
rol
int3
fs
daa
jo
sbb
fidivr
imul
sub
fidivr
and
cli
xor
hlt
(bad)
and
pop
(bad)
lea
cmp
mov
add
jno
iret
push
fbstp
pop
(bad)
adc
push
pop
inc
repz
arpl
(bad)
adc
mov
cmp
in
aam
mov
gs
dec
mov
imul
(bad)
inc
mov
shr
out
cli
jmp
mov
jbe
int
sbb
mov
push
test
xor
std
sub
das
mov
aad
adc
jecxz
pop
mov
sbb
dec
jmp
push
or
scas
pop
test
xlat
adc
in
cmps
cmp
pop
sbb
and
cmp
jmp
cmps
ins
cld
shr
jno
xadd
aaa
jmp
fsubr
leave
mov
fld
stos
cmp
inc
movs
push
adc
jb
mov
jae
test
cwde
outs
imul
push
adc
out
test
or
in
int
and
lds
xchg
or
addr16
pop
and
xor
jno
std
ret
jnp
imul
mov
repnz
mov
nop
mov
inc
call
pop
repz
jle
aas
cdq
out
cmp
inc
loopne
pop
lods
mov
mov
cmp
inc
mov
loopne
int3
outs
retf
shl
data16
jle
adc
repz
pop
mov
cmp
pusha
outs
or
fsubr
cmps
fcomp
jle
retf
push
dec
add
scas
stc
push
popa
xor
icebp
lods
jmp
mov
(bad)
jo
mov
xchg
add
fidivr
dec
xchg
into
xor
cmps
sbb
lods
sbb
mov
push
jmp
rol
jge
imul
push
mov
jns
mov
in
jo
mov
shr
push
xor
add
cmp
add
in
mov
sbb
ins
daa
adc
pop
mov
mov
dec
mov
inc
cmp
enter
mov
push
add
mov
mov
enter
fld
inc
dec
stc
cli
xchg
aad
scas
mov
clc
pop
lds
stos
pop
loop
cs
push
mov
and
cwde
sub
retf
dec
jmp
pop
mov
ror
into
xchg
mov
jae
pop
xchg
xchg
fild
ds
fistp
add
mov
div
cmovnp
mov
in
sbb
sub
mov
imul
addr16
sbb
mov
addr16
inc
(bad)
adc
push
dec
aaa
dec
jl
fcom
mov
icebp
push
mov
xor
sbb
mov
inc
and
xchg
add
popa
loope
cmp
push
mov
(bad)
aam
push
fwait
shl
shl
nop
add
or
retf
jo
icebp
push
inc
push
icebp
jp
cmps
and
cwde
sti
daa
jns
mov
adc
sbb
mov
cdq
sbb
sbb
shl
push
lods
ins
sahf
xchg
mov
push
(bad)
(bad)
cld
fidivr
lds
sub
mov
xchg
and
jb
dec
xor
sahf
hlt
(bad)
jmp
push
fs
pop
mov
jg
xchg
xchg
or
rcl
mov
clc
mov
test
xchg
jle
(bad)
lods
mov
cmc
addr16
fwait
rcl
inc
rcr
arpl
push
mov
jae
fcmovbe
or
mov
mov
push
or
mov
or
aaa
pop
(bad)
mov
in
and
imul
jecxz
sbb
cwde
pop
jo
adc
jmp
push
loopne
loopne
fs
(bad)
ss
movs
adc
cmp
sub
popa
sar
inc
popf
icebp
sub
and
push
out
clc
xchg
push
inc
popa
sub
xlat
jnp
xor
xor
mov
lea
test
dec
adc
sub
jbe
cdq
mov
ins
push
dec
or
adc
mov
mov
push
stos
or
and
and
mov
out
adc
pop
xor
mov
lds
dec
mov
jg
adc
xor
inc
sbb
sub
repz
es
xor
and
dec
pop
out
xor
sub
inc
mov
outs
scas
or
mov
js
push
jmp
dec
in
aam
clc
jnp
mov
sbb
data16
xchg
movaps
fidivr
hlt
into
cmp
xchg
jo
pop
test
push
out
adc
xchg
ret
sbb
add
mov
add
push
retf
adc
(bad)
push
add
and
mov
sbb
jmp
(bad)
rol
mov
mov
xchg
inc
jle
in
dec
xor
sbb
jne
cmp
clc
stos
pop
inc
fs
sbb
pusha
cmp
push
aaa
shl
inc
sbb
sahf
and
mov
mov
sbb
inc
mov
pop
and
sbb
fs
jle
mov
and
dec
int3
cmp
fldenv
fstp
xchg
mov
xchg
xor
mov
addr16
lds
aad
xchg
mov
xlat
push
mov
imul
xchg
jne
jae
pop
jp
aaa
lods
dec
sub
rol
xor
stos
fnstsw
push
out
mov
sbb
push
push
ds
jle
les
cmp
ja
sti
frstor
(bad)
cmp
fbstp
pmullw
dec
push
add
cld
push
cld
movs
lods
imul
mov
das
inc
adc
sub
(bad)
sub
dec
mov
mov
jae
cmc
lahf
out
adc
cmc
mov
jb
in
inc
repnz
(bad)
sbb
dec
in
jne
int
adc
mov
call
cld
bound
fiadd
sub
mov
cld
adc
lea
loopne
cwde
push
popa
imul
and
inc
pop
fidivr
fcomi
bound
adc
sub
fnstenv
mov
or
std
iret
push
and
and
and
(bad)
daa
jle
push
fs
repnz
mov
jle
das
cmps
in
jno
mov
jp
cmp
ja
stos
data16
retf
(bad)
sbb
sbb
jns
jns
popa
xchg
xor
movs
mov
out
popa
xchg
dec
scas
call
sbb
dec
cmp
fcomi
add
adc
mov
jl
call
pop
or
cmp
mov
push
push
cdq
dec
scas
cmp
jp
mov
test
std
sub
jecxz
int
bound
sbb
(bad)
in
outs
pushw
mov
sahf
mov
adc
jbe
fdiv
or
cmp
pop
stc
or
mov
or
fst
dec
jno
popa
dec
inc
or
xchg
inc
pop
jle
test
mov
jo
fbstp
sub
out
call
sub
scas
aam
xor
mov
in
add
call
adc
cmp
sub
out
rcr
fcmovnbe
push
jo
cmp
jp
mov
pop
jno
fcomip
gs
xchg
imul
leave
inc
mov
movs
inc
mov
iret
sar
jbe
popa
pop
mov
adc
sbb
aas
das
mov
fcmovne
jb
test
ja
xchg
jl
xor
add
cmp
out
rcr
push
frstor
add
jmp
inc
xor
outs
push
sar
inc
xor
push
push
fimul
pop
push
push
test
fwait
add
or
xor
mov
lods
pop
xchg
mov
pop
mov
mov
in
std
test
and
lea
test
pusha
xchg
and
ret
in
mov
ins
pop
repnz
inc
or
jge
daa
push
imul
pop
cmp
inc
jns
and
bound
mov
pop
or
rcl
push
jp
jno
push
and
sub
inc
lods
mov
loope
mov
jecxz
add
popa
je
jmp
pop
cmp
fs
aas
int3
mov
js
enter
or
rcl
pop
movs
cmps
cmps
aam
add
retf
mov
sub
sbb
stc
nop
les
push
fdiv
mov
cdq
cmp
shl
rcr
(bad)
mov
add
fsubr
jmp
mov
pop
mov
pop
repz
je
or
mov
sub
in
mov
mov
enter
es
outs
sbb
iret
sub
mov
sub
pop
hlt
xor
jns
jl
data16
push
mov
mov
mov
jle
mov
cmc
xsha1
cmps
mov
adc
cmps
stos
push
mov
or
in
pop
add
mov
mov
mov
xchg
into
ins
(bad)
cmc
and
dec
push
lds
jb
adc
xorpd
xchg
pushf
fnstenv
push
xchg
mov
mov
fs
rol
and
aam
add
arpl
sahf
fnstsw
inc
add
adc
mov
(bad)
push
push
call
adc
sub
adc
adc
cli
push
es
aaa
adc
mov
pop
cs
ins
movnti
xchg
arpl
je
jmp
pusha
cdq
jmp
sub
add
jp
push
in
push
jb
test
test
cs
mov
ss
ins
in
adc
cmp
mov
hlt
mov
jns
jne
sti
popf
jne
ret
aad
mov
jge
retf
or
cmp
neg
mov
mov
jbe
push
xchg
std
hlt
aaa
mov
mov
push
inc
jno
repz
icebp
aad
not
push
or
push
dec
adc
add
pop
fdivr
shl
mov
jl
jge
adc
dec
dec
fucomi
sub
mov
push
mov
in
xchg
test
scas
test
or
out
cld
add
jecxz
into
(bad)
cld
sahf
cmp
aam
sub
sbb
xchg
sub
mov
pusha
fst
mov
push
xchg
dec
dec
icebp
mov
jle
cli
(bad)
jmp
xchg
mov
lods
mov
cmps
mov
push
nop
jbe
ins
cmps
retf
mov
mov
cmps
in
dec
je
fwait
lods
push
cwde
fimul
xchg
add
imul
lahf
or
cmp
icebp
or
push
push
lods
cmp
je
push
mov
dec
fst
and
and
xor
mov
add
sub
xor
rcl
jno
cmp
test
aaa
mov
(bad)
xchg
xor
sub
inc
xchg
in
xchg
jecxz
cmp
fiadd
or
lods
xchg
and
mov
cvtps2pi
sub
fs
std
rol
mov
leave
popa
jns
mov
adc
aad
mov
and
cmp
xchg
outs
pop
inc
fldenv
outs
inc
sbb
or
shl
scas
ins
jle
aam
dec
dec
pushf
stc
test
nop
std
cmp
inc
pop
jnp
inc
je
cmps
stos
sub
iret
mov
dec
nop
dec
stos
mov
xchg
xchg
fs
mov
push
dec
mov
xchg
lods
(bad)
sbb
cwde
xlat
mov
shl
js
push
imul
or
mov
cmp
or
jmp
xor
inc
adc
fmul
xor
dec
dec
mov
push
sub
js
pop
inc
add
xor
xlat
add
jp
mov
(bad)
repnz
add
lock
in
pushf
test
sahf
adc
mov
pop
retf
sbb
enter
xchg
mov
sbb
push
or
xor
push
test
inc
and
es
dec
sbb
daa
test
cwde
add
call
jne
aam
out
or
in
push
sbb
push
(bad)
neg
ins
test
stos
push
cmp
xchg
inc
(bad)
ficom
int3
pop
stc
pop
or
fidiv
jne
fidivr
call
(bad)
cmp
ficom
pop
sbb
cdq
pop
clc
sub
test
pop
jae
popa
movs
cld
aam
inc
jno
mov
leave
and
cmc
add
sub
scas
add
xchg
(bad)
or
outs
mov
movs
push
retf
daa
js
xor
dec
and
pop
jmp
(bad)
xchg
adc
(bad)
sub
push
mov
push
aas
lock
ret
push
fwait
movs
inc
fadd
pop
mov
clc
xchg
jb
fsub
pop
mov
jmp
in
arpl
dec
adc
jae
adc
and
cli
jno
sbb
cmp
cmp
pop
jge
call
call
ins
ret
pusha
mov
mov
repz
call
mov
(bad)
sub
push
js
scas
xor
ins
stos
daa
idiv
adc
cmc
push
cli
jmp
movs
loope
mov
aad
add
pop
sbb
test
mov
xchg
test
cmc
and
push
push
mov
inc
mov
push
pushf
test
rcl
and
inc
jo
aas
mov
jbe
pmullw
icebp
sti
xor
sbb
cmps
jge
loopne
mov
xchg
aaa
punpckldq
dec
mov
retf
popf
iret
jmp
data16
push
call
xor
icebp
enter
push
pushf
and
loop
nop
pop
das
mov
repz
rcl
movs
cwde
xchg
add
rcl
outs
sbb
cmp
data16
ret
inc
stos
xchg
repz
inc
ss
pop
push
data16
fnstenv
xor
cmp
jb
mov
add
xor
dec
or
pushf
aam
sub
add
sub
in
xor
sar
pop
jns
loope
jbe
pop
pop
out
mov
adc
ins
inc
sub
fisttp
lods
and
(bad)
xor
in
fs
imul
xchg
cmps
inc
jge
add
stos
stos
aas
sbb
xor
bound
mov
bound
mov
inc
gs
pop
in
out
sbb
xor
nop
fist
xchg
imul
fdiv
inc
jge
push
inc
jmp
cdq
sub
push
cmps
sar
sub
sbb
cld
enter
add
pusha
xchg
inc
lahf
xor
sub
add
not
add
mov
in
scas
xor
and
sti
sub
ins
sub
in
mov
repz
sub
inc
push
cmc
aaa
mov
movs
test
pop
imul
adc
movs
lods
mov
int
cmps
clc
mov
sub
std
in
movs
ror
fs
mov
sub
cmp
adc
or
dec
jp
adc
movs
pop
loop
xchg
xor
leave
or
fwait
fs
lahf
dec
mov
or
adc
push
ss
bnd
jecxz
push
cmp
mov
add
rcl
or
mov
cld
leave
cli
jbe
jmp
and
xchg
scas
xor
mov
jmp
sub
pop
xchg
aaa
jno
jb
sbb
loopne
shl
not
dec
mov
push
jne
adc
push
test
and
movs
mov
pop
pop
jecxz
push
mov
aaa
in
mov
xchg
lock
sar
xchg
mov
sbb
in
dec
xor
aaa
call
retf
lods
mov
repnz
es
jns
lds
imul
dec
lods
sahf
xchg
outs
sbb
inc
stc
mov
pop
or
sub
jns
test
lahf
or
arpl
ja
loop
popaw
or
cmc
sub
les
pop
leave
adc
mov
mov
and
shl
sbb
dec
xlat
mov
(bad)
mov
sbb
popf
rol
int
fs
fisttp
popf
clc
dec
ins
(bad)
in
sahf
or
inc
int3
push
pop
xor
in
xchg
aam
addr16
sub
dec
mov
add
aaa
push
push
(bad)
std
pop
xchg
or
push
mov
bound
push
dec
sbb
xchg
or
lods
gs
sbb
aas
mov
into
daa
mov
add
mov
test
cmps
push
and
lock
mov
out
push
mov
sub
pop
mov
cwde
ins
int3
fs
stos
push
cs
inc
dec
mov
sub
sahf
and
and
int
or
sub
mov
int
int
inc
push
int
push
pop
adc
hlt
repz
pop
pop
dec
xor
in
lods
add
shr
mov
fnstenv
bound
shr
out
jae
inc
sub
loop
mov
cli
and
mov
cmp
addr16
jg
jne
mov
pop
fwait
and
inc
dec
bswap
inc
sub
jle
push
mov
mov
iret
push
pop
je
xchg
mov
push
and
inc
out
mov
xor
xchg
push
dec
fwait
icebp
xlat
leave
cmp
fwait
dec
dec
lahf
in
cli
push
mov
scas
enter
push
call
fs
mov
xchg
cmp
sbb
and
jl
loop
dec
mov
add
arpl
aad
inc
or
arpl
mov
mov
sbb
pop
es
shr
mov
stc
loope
cdq
out
mov
out
ret
nop
iret
pop
pop
inc
jl
pop
enter
sub
cmp
cmp
adc
push
cdq
and
mov
xchg
mov
jbe
enter
dec
adc
out
hlt
jb
(bad)
mov
jg
sbb
inc
dec
es
out
cli
pop
bound
aam
pop
aaa
pop
adc
pop
ja
in
std
scas
jge
push
xor
pusha
and
sbb
push
fimul
push
xlat
lods
adc
int
stc
imul
ret
add
or
xor
push
mov
pop
retf
sbb
inc
ror
inc
jge
in
inc
mov
sub
jge
sbb
lds
mov
and
cdq
outs
cdq
cld
test
xchg
pop
adc
fiadd
xchg
pop
nop
sbb
lods
pushf
sub
mov
test
lea
aas
pop
jo
xchg
stos
icebp
inc
(bad)
lock
mov
xchg
out
outs
imul
loope
dec
lods
push
outs
mov
cmps
adc
sub
mov
js
mov
push
test
mov
sbb
xchg
and
and
dec
adc
lock
in
push
cmp
add
loop
dec
mov
das
shl
fidiv
xchg
and
in
fcmovnb
sub
out
add
lods
imul
pop
movs
inc
fadd
iret
adc
cli
lea
xchg
fdivr
cmp
out
retf
daa
test
sbb
sahf
fldcw
mov
push
jb
jle
inc
pop
jmp
(bad)
and
dec
data16
test
arpl
(bad)
aas
in
ds
out
call
sub
in
mov
mov
call
sbb
int3
gs
mov
jmp
arpl
push
pop
or
mov
test
hlt
or
pop
jmp
arpl
push
cdq
mov
lods
inc
pop
pop
inc
sahf
retf
jle
cmp
sahf
sahf
mov
mov
popf
stc
sub
adc
lods
and
(bad)
mov
out
stos
test
xchg
mov
or
jns
sbb
fnsave
fst
outs
mov
into
jb
and
pop
dec
xchg
daa
mov
shr
in
shr
hlt
jmp
in
pop
xor
pushf
gs
mov
mov
in
mov
nop
popf
stos
cmp
inc
ins
dec
pop
mov
push
jns
adc
int3
aam
jl
add
aad
lock
pop
ror
in
mov
dec
push
out
loopne
cmp
pop
retf
(bad)
sbb
iret
xchg
jl
lds
pop
xor
xor
adc
aam
or
setl
sub
push
rol
fadd
call
mov
call
xor
dec
fwait
icebp
in
lods
sbb
std
addr16
scas
pop
jmp
movs
xor
mov
imul
mov
test
cmp
aam
(bad)
mov
and
cli
xchg
pop
int
xor
xchg
in
outs
shl
push
scas
inc
je
enter
push
xchg
jnp
(bad)
jmp
cmp
enter
fisttp
rcr
inc
ins
push
push
or
cmps
ror
mov
mov
mov
sar
pop
sub
lea
dec
mul
sub
fldcw
xchg
jmp
mov
clc
icebp
add
repnz
and
sub
xchg
imul
loop
sub
sub
in
mov
inc
dec
ret
xchg
jbe
mov
(bad)
ins
frstor
je
inc
imul
icebp
test
push
pop
mov
aas
mov
icebp
xchg
jmp
mov
out
call
shl
sbb
push
retf
into
test
adc
mov
call
push
pop
je
js
or
icebp
push
test
pop
outs
inc
sub
daa
int3
push
mov
fist
add
outs
mov
sub
dec
adc
popa
jnp
clc
int
sbb
push
ret
sbb
lods
sub
cmp
fdivrp
cdq
sbb
ins
adc
push
and
pop
cmps
in
mov
std
retf
es
cmc
les
sbb
das
xor
test
test
jge
mov
jge
fst
pop
jmp
xor
adc
jne
mov
stos
mov
push
loope
(bad)
push
repnz
jge
nop
cdq
dec
cld
jbe
mov
sub
pusha
sti
cdq
or
stos
mov
scas
jnp
repz
jmp
pop
xchg
cmp
(bad)
icebp
js
pminsw
test
mov
push
movs
adc
sub
mov
stos
xor
inc
add
pop
fs
inc
(bad)
mov
mov
(bad)
push
inc
loope
pop
ret
int3
movs
xor
xchg
test
mov
dec
or
not
rol
xor
mov
xchg
xlat
sub
push
lea
xor
or
push
add
int3
jns
das
inc
nop
mov
jne
inc
fcomp
jmp
pop
nop
push
rcr
dec
sbb
hlt
inc
repnz
popf
inc
jg
inc
out
push
jp
pop
cmps
lods
or
jnp
in
out
xor
mov
pushf
sbb
lahf
aas
mov
xchg
mov
addr16
sbb
mov
mov
loop
in
stos
les
mov
retf
cmp
add
adc
push
push
std
daa
inc
add
and
jnp
mov
ss
push
jb
mov
ss
mov
(bad)
daa
xor
rol
aam
or
push
fld
out
fdivr
ror
in
sbb
fdivr
pop
leave
fxch
push
cmps
sti
mov
retf
rcl
arpl
push
dec
mov
or
fmul
adc
aas
jmp
and
pop
sbb
xchg
sbb
sbb
mov
pop
fs
mov
les
and
inc
int3
mov
jne
nop
jns
js
pusha
into
sub
outs
popa
adc
push
ds
cvtdq2ps
jns
call
pop
push
sbb
lahf
push
dec
pop
cmp
loope
pop
sub
inc
cmp
push
popf
xor
sub
sub
in
nop
dec
call
mov
sub
mov
add
pop
sub
xor
cmp
add
or
xchg
jno
popa
mov
push
mov
repz
jle
popf
shr
push
aaa
sub
and
sahf
mov
ret
stc
add
int
and
mov
nop
inc
in
inc
add
sub
std
push
adc
mov
mov
loopne
aam
mov
inc
iret
aaa
lahf
mov
push
aas
push
inc
jmp
icebp
aaa
js
dec
stc
shl
sbb
pop
mov
ret
int
div
pop
push
sbb
dec
and
(bad)
jmp
add
jp
mov
mov
pop
dec
or
dec
(bad)
jge
test
and
retf
iret
sbb
push
mov
pop
jns
repz
bound
js
fnsave
jae
mov
popa
or
adc
cs
sbb
bound
mov
mov
or
push
jmp
jne
mov
repz
(bad)
icebp
loopne
int3
mov
mov
sbb
aaa
cmps
jnp
push
les
dec
addr16
push
push
cmps
dec
mov
xchg
test
sub
test
pop
data16
js
mov
mov
dec
or
pop
push
xor
das
mov
movs
xchg
in
arpl
cmp
retf
jbe
jns
push
arpl
addr16
xor
stos
inc
in
jnp
inc
dec
es
pop
dec
neg
xor
mov
pop
mov
sti
xchg
push
mov
add
dec
ds
dec
std
sub
shl
mov
sub
js
or
sbb
retf
xor
ret
retf
mov
ja
addr16
test
inc
add
fwait
jmp
test
jmp
sar
pop
xlat
xor
xchg
daa
ja
mov
mov
jo
and
int3
aaa
jmp
add
les
xchg
int3
and
add
gs
stc
sub
div
int
dec
or
and
mov
xchg
imul
xor
xor
add
outs
dec
(bad)
and
icebp
sbb
(bad)
jmp
sbb
data16
xor
adc
jnp
mov
dec
test
aas
pop
(bad)
mov
and
jmp
jae
dec
jae
(bad)
fnstsw
aam
push
adc
lods
loopne
imul
hlt
xchg
sub
push
xchg
repz
loope
in
movs
loop
and
imul
jb
sub
inc
scas
xor
mov
jg
sub
out
bound
sar
push
sbb
add
test
sub
daa
pushf
dec
inc
lock
sbb
jp
mov
jle
push
cmp
into
sbb
push
out
ins
mov
xchg
push
push
fcom
(bad)
aam
xchg
add
sub
or
push
imul
pushf
jge
cwde
retf
sbb
ret
cdq
push
jns
dec
lods
jecxz
push
push
or
repz
movs
mov
add
mov
fsubr
pushf
adc
push
in
sub
push
inc
sub
das
xor
add
dec
fistp
inc
push
imul
xor
iret
dec
mov
les
lods
and
add
sti
jb
cs
and
and
into
dec
xor
icebp
lods
mov
(bad)
add
dec
enter
sbb
mov
and
dec
xchg
mov
rep
and
push
push
out
inc
or
fs
fstp
xor
cwde
jmp
mov
stc
cmp
and
fdivp
inc
loope
mov
pop
xchg
mov
dec
jmp
dec
xor
mov
sub
and
inc
fnstcw
fcomp
inc
mov
(bad)
int
fidivr
ja
mov
lods
repnz
(bad)
push
inc
retf
cmp
jne
jmp
jecxz
repnz
pop
retf
dec
ds
push
lahf
loope
test
(bad)
fild
sbb
jl
mov
lea
mov
xchg
pop
inc
xchg
adc
daa
push
fisubr
mov
jns
lds
pop
xor
test
inc
shl
hlt
ret
jp
mov
pop
jno
(bad)
pop
and
icebp
pop
mov
shl
mov
cdq
and
ret
sbb
cmp
xlat
ins
xchg
loope
push
in
sahf
push
in
and
daa
sahf
pop
arpl
stc
jnp
fsubr
cld
cwde
or
jp
leave
into
lods
test
(bad)
out
inc
jb
shl
dec
test
int3
sub
sub
repnz
fwait
leave
sub
sbb
mov
dec
and
psrlq
sub
mov
mov
mov
push
(bad)
int
inc
iret
mov
push
icebp
pop
pop
bound
sbb
lea
jo
xor
bound
mov
mov
(bad)
pop
pop
jecxz
fsub
dec
and
adc
xor
mov
mov
and
aaa
outs
int3
addr16
xchg
stos
xchg
(bad)
xchg
and
imul
jle
sbb
ja
fwait
(bad)
xor
dec
sub
arpl
shr
push
xor
add
out
imul
aam
out
(bad)
(bad)
cmps
inc
sbb
xchg
sub
cs
scas
icebp
test
lods
test
cmps
daa
xor
dec
scas
push
aam
jl
dec
test
push
je
xchg
movs
adc
gs
gs
mov
ret
jae
mov
int3
mov
enter
cmp
fsubr
mov
jge
adc
push
xchg
shl
sbb
xchg
ret
sar
jp
sti
std
stc
jb
jecxz
hlt
xor
adc
xchg
test
sub
stos
out
jle
ins
data16
inc
fsub
neg
movs
mov
sbb
ficom
jbe
or
jne
mov
sahf
mov
sbb
sub
jecxz
out
mov
test
mov
in
test
xor
adc
lea
cmps
ins
push
rcl
pop
dec
mov
jno
mov
dec
ret
mov
test
mov
(bad)
leave
out
mov
mov
and
dec
mov
mov
das
hlt
xor
ss
lahf
inc
mov
xchg
xchg
jge
sbb
into
sub
and
in
inc
stos
bswap
dec
fmul
mov
push
inc
aas
out
leave
and
aaa
mov
div
out
je
int3
(bad)
clc
cmp
mov
ja
adc
mov
pop
cmp
(bad)
sti
adc
cmp
(bad)
xor
mov
(bad)
adc
sbb
cdq
out
dec
adc
push
mov
fsub
loopne
xchg
mov
xchg
cmc
push
fs
repnz
test
std
ss
scas
sub
cmp
push
rol
mov
pushf
push
into
stos
ret
xchg
xchg
and
loope
xchg
jecxz
cmc
pop
lods
and
int
imul
call
fiadd
ins
mov
jle
dec
mov
in
pop
xor
adc
jp
push
aas
std
fwait
stc
test
rcl
pop
and
and
repnz
std
sbb
mov
cmps
outs
push
xchg
cmp
dec
mov
pop
inc
xchg
popa
xor
adc
add
mov
stc
pop
test
pop
sub
pop
push
mov
outs
aad
pop
sbb
jns
fist
popa
push
cmp
outs
fstp
(bad)
jae
jae
mov
ja
adc
pop
jg
xchg
call
sub
sti
mov
je
rol
hlt
dec
outs
fnstcw
xchg
movs
sbb
call
stc
xlat
push
and
repnz
inc
add
cmp
push
icebp
inc
sbb
push
mov
shl
aaa
stos
sub
into
stos
and
mov
repnz
mov
mov
pop
or
ja
or
push
outs
xchg
addr16
mov
sub
addr16
cmp
out
cmp
sbb
jmp
repnz
inc
pop
call
out
icebp
fbstp
pusha
pop
adc
nop
pop
into
gs
inc
pop
jmp
dec
repz
jp
rcl
sub
jle
es
scas
mov
(bad)
fsubr
lods
fdivr
or
add
loope
div
nop
popa
inc
sub
sbb
sti
dec
xor
mov
add
out
cmps
mov
das
xor
dec
push
cwde
inc
sub
dec
dec
mov
enter
add
lods
test
leave
inc
jae
je
ja
fadd
pop
xor
and
cs
mov
adc
mov
retf
imul
sub
pop
xlat
shl
mov
nop
sub
sub
jmp
adc
repnz
sub
xor
std
or
push
mov
mov
jno
ins
icebp
push
lods
inc
pfrcpit2
mov
or
push
aad
adc
bound
add
(bad)
jne
aad
inc
adc
sub
xchg
retf
inc
jge
imul
pop
inc
mov
or
pop
fimul
data16
int3
mov
add
gs
sbb
inc
aad
inc
jmp
adc
in
repnz
int
test
cmps
mov
dec
sub
xchg
jmp
sub
cmp
adc
rcr
mov
push
xchg
xor
xor
pop
xchg
pushf
mov
(bad)
adc
(bad)
sbb
js
xchg
sub
xor
jae
sbb
sub
cwde
outs
shr
dec
hlt
shr
dec
jne
mov
rcl
pop
(bad)
sub
mov
cdq
jl
outs
mov
sbb
jl
and
pop
inc
repz
imul
and
pop
jne
rcr
jo
scas
aad
ss
out
lds
aaa
mov
add
or
hlt
jmp
sbb
sti
sti
in
push
adc
inc
aam
enter
pop
stos
pop
xchg
push
push
xchg
(bad)
movs
(bad)
rol
jge
cld
push
iret
cmps
dec
mov
je
sub
popa
jo
pop
retf
push
scas
cdq
sbb
push
inc
mov
cs
dec
mov
xor
in
inc
call
adc
outs
loopne
xor
push
or
inc
(bad)
outs
stos
int3
pop
mov
sub
shr
xor
push
mov
gs
mov
aam
mov
sbb
test
(bad)
aas
repz
dec
mov
adc
add
out
sub
xchg
and
sbb
in
jl
xor
arpl
sbb
push
cld
jo
imul
pop
or
fidiv
jb
or
xchg
stc
pop
(bad)
push
cmc
jnp
inc
sbb
scas
jge
push
(bad)
repnz
sbb
retf
dec
in
js
mov
xor
add
imul
pusha
sti
aas
mul
ja
lds
xor
mov
add
pop
adc
add
in
sub
push
dec
jbe
out
cwde
inc
mov
and
adc
div
loopne
cld
and
push
(bad)
fiadd
xchg
out
dec
adc
movs
int3
daa
in
xchg
data16
dec
cmp
hlt
sti
rcl
pop
sub
sbb
mov
sbb
cmps
push
mov
pop
mov
in
mov
(bad)
rcr
inc
les
in
xchg
push
or
pop
stc
cmc
pop
adc
mov
bound
add
xlat
dec
aam
lds
addr16
std
popf
jl
adc
(bad)
std
push
pop
push
arpl
imul
xchg
mov
xchg
push
fiadd
outs
dec
daa
cmp
mov
inc
loop
lock
pop
inc
push
mov
shr
lock
xchg
fadd
scas
rcl
mov
ss
ret
jnp
pop
out
push
dec
in
jo
jmp
push
sub
jae
into
jb
cmp
or
mov
cwde
movs
fild
sbb
arpl
test
out
mov
inc
fldcw
jb
mov
xchg
mov
hlt
dec
mul
pusha
adc
movs
add
daa
pop
test
sar
packssdw
sub
jge
loopne
mov
imul
jnp
(bad)
(bad)
rcl
sub
iret
movs
xor
pop
mov
scas
inc
xor
push
in
adc
out
int
jle
ss
pop
fld
mov
cld
test
or
(bad)
lahf
and
jmp
sbb
adc
mov
mov
retf
ins
ins
fwait
js
loop
dec
push
xor
add
dec
and
arpl
cmp
or
out
pop
jns
pop
lods
and
(bad)
stos
add
les
cli
inc
arpl
loope
xor
cdq
adc
dec
and
enter
test
sbb
xor
aas
out
rcl
pop
call
es
push
frstor
dec
mov
mov
inc
and
daa
ds
jl
out
xor
cli
mov
mov
ds
rcl
enter
cwde
shr
xor
stos
fwait
in
fwait
mov
ret
jecxz
call
(bad)
stos
mov
pop
sub
pop
test
outs
mov
cmps
sbb
dec
pop
adc
xchg
push
push
jae
xchg
mov
nop
jmp
cli
int3
daa
pop
popf
and
jne
cmps
repnz
mov
push
xor
outs
mov
mov
sbb
mov
adc
inc
jmp
ret
cmp
dec
popf
sub
out
mov
movs
mov
scas
push
dec
cli
sahf
setnp
(bad)
or
lds
sub
jno
lods
ins
sbb
out
mov
mov
nop
xchg
ja
push
lods
mov
mov
enter
cmp
rcl
mov
adc
lods
or
xor
pop
add
inc
out
adc
dec
mov
jge
dec
into
mov
cs
jbe
dec
mov
test
aam
jmp
cld
jno
cmp
push
(bad)
mov
loop
mov
mov
jge
sbb
repz
(bad)
out
je
inc
sbb
adc
add
inc
cmp
sbb
nop
sbb
(bad)
jl
jp
int
push
ret
or
cdq
push
lods
js
push
adc
pop
nop
hlt
cmp
mov
mov
outs
ins
push
mov
dec
xchg
dec
pop
outs
out
mov
jns
push
inc
dec
out
das
jbe
push
mov
or
cli
leave
aas
cmc
enter
mov
inc
icebp
shl
xchg
xor
lock
in
pop
sar
or
retf
hlt
retf
ins
shr
into
addr16
stc
std
xor
or
adc
sbb
iret
mov
arpl
mov
(bad)
cmc
std
stos
sar
or
nop
sub
and
arpl
lods
add
fldcw
gs
or
add
dec
in
cdq
clc
imul
adc
xlat
and
std
outs
ret
in
jns
aas
ja
inc
cmp
and
iret
cmc
aam
lods
sbb
sti
jmp
cmp
mov
adc
pop
(bad)
out
push
int
and
int3
ins
add
lods
xchg
sbb
mov
les
dec
push
xor
dec
cdq
fiadd
pop
cli
pop
int
push
push
cmps
push
aas
mov
jmp
fdiv
adc
xchg
loope
outs
mov
cmps
or
pop
inc
pop
sahf
push
fstp
fwait
jmp
push
test
arpl
jecxz
jns
(bad)
mov
add
jae
xor
in
jmp
out
mov
jno
mov
stos
ret
xchg
js
(bad)
ficomp
es
les
int3
adc
imul
jo
mov
shl
sbb
fisttp
jecxz
aam
adc
in
xor
pop
mov
dec
mov
out
jmp
arpl
add
imul
loop
mov
xchg
pop
add
mov
sbb
lea
mov
dec
cmp
dec
inc
shl
push
cwde
xor
add
mov
aad
neg
pop
mov
imul
dec
hlt
sbb
sahf
aam
icebp
scas
test
xor
fwait
pop
inc
jnp
inc
fmul
pushf
mov
or
sub
fdivr
adc
dec
loop
mov
mov
jge
movs
dec
pop
mov
or
in
jne
icebp
out
ins
in
xor
popa
or
mov
sbb
or
pop
inc
and
or
mov
shl
test
sbb
push
je
scas
fild
icebp
cmp
or
(bad)
cmp
lock
call
icebp
stos
adc
pop
(bad)
pop
push
or
rcl
mov
call
adc
bswap
mov
xchg
add
mov
sbb
rcr
adc
(bad)
push
fsub
push
out
fs
fst
dec
mov
cmps
sbb
ja
call
imul
call
scas
cmps
xor
loopne
pop
int
add
scas
lahf
lods
cwde
lods
out
and
cmp
jge
sbb
arpl
mov
cdq
fcmovne
mov
lods
pop
mov
stos
dec
inc
loop
jnp
je
add
jg
rcr
bound
lock
std
sbb
loop
cmps
cdq
xchg
dec
mov
push
xchg
inc
push
xchg
add
jge
dec
push
inc
icebp
(bad)
push
adc
xchg
xchg
mov
jl
ds
and
push
push
repnz
mov
mov
jle
shl
movs
data16
mov
xchg
mov
cwde
popa
mov
pop
xchg
cmp
cld
mov
fld
xlat
mov
and
(bad)
(bad)
fidivr
repnz
je
popa
stos
ret
out
fidiv
(bad)
push
push
jle
scas
ins
in
leave
int
add
mov
fdivr
cmp
pop
shr
fisttp
hlt
adc
lahf
repz
mov
push
or
sahf
les
and
mov
push
pushf
ds
mov
rcr
inc
jmp
jg
push
xor
xchg
pop
and
lds
lods
movs
in
aam
ja
sub
pop
xor
fcom
dec
mov
sbb
sar
retf
sti
sbb
jns
pop
pop
sbb
dec
push
repnz
mov
mov
fcmovnbe
inc
(bad)
push
lock
mul
sub
bound
and
pop
gs
sbb
mov
in
rol
xchg
rol
and
jmp
pop
mov
scas
out
cmp
test
repnz
imul
(bad)
ror
mov
rcl
mov
ficom
mov
jo
lds
inc
cmp
ret
xor
fcom
ficom
scas
inc
mov
push
out
aas
movs
xchg
fs
int
push
out
pop
cmp
neg
pop
add
in
xchg
or
call
out
push
pop
inc
sti
es
rcr
dec
mov
std
jns
icebp
ret
aad
jg
pushf
stos
mov
in
sbb
sub
test
xchg
mov
xor
div
pop
jnp
inc
inc
pop
jnp
neg
push
jecxz
fwait
pop
jns
cmps
add
jno
push
cmp
(bad)
leave
adc
test
inc
inc
adc
sbb
fs
jns
add
(bad)
push
out
xor
sub
daa
pop
imul
and
jmp
ja
aas
xor
in
test
push
ins
(bad)
cli
in
mov
mov
add
cmp
ret
out
mov
mov
add
and
bound
or
enter
rol
xchg
out
cmp
and
test
inc
and
mov
xor
in
in
stc
ror
push
(bad)
jmp
aaa
das
jle
ins
inc
cld
fidiv
mov
mov
jl
inc
dec
ret
(bad)
mov
inc
loope
sub
in
dec
xor
push
xor
xor
movs
xchg
xchg
push
sub
xchg
sub
je
xor
mov
mov
and
push
std
stos
mov
push
xchg
leave
inc
popf
add
rcl
sar
les
std
icebp
lods
mov
js
push
das
sub
dec
mov
out
jnp
add
fwait
push
cmc
sub
gs
aam
sub
dec
mov
lahf
inc
mov
pop
xor
sbb
rcpps
sbb
adc
iret
inc
add
push
xor
pop
add
jb
addr16
jp
imul
cwde
out
and
mov
mov
outs
mov
aaa
aad
(bad)
repz
enter
fnsave
xor
pop
xchg
jne
(bad)
retf
xchg
cmp
bound
adc
or
xchg
mul
mov
fsub
(bad)
jmp
cli
loope
pop
mov
jb
out
xchg
fist
mov
cli
or
xor
mov
jmp
inc
cmp
and
outs
or
add
leave
and
imul
adc
xor
scas
inc
sub
mov
add
dec
(bad)
sahf
cmp
pop
in
sub
sar
stc
push
in
xchg
inc
sbb
or
jne
cmp
adc
inc
ret
sub
ret
lea
bound
xchg
div
jp
sub
mov
cmp
repz
push
mov
fistp
or
push
mov
mov
ret
scas
or
in
push
(bad)
addr16
push
add
enter
mov
out
add
cmp
popf
sar
and
(bad)
and
pop
push
(bad)
add
jle
(bad)
iret
sub
and
(bad)
mov
stc
mov
hlt
dec
mov
cmp
pop
push
xor
xor
shl
dec
inc
hlt
push
adc
push
sbb
es
imul
cmp
icebp
or
lea
out
sti
fs
rcl
mov
or
cmp
fwait
adc
sti
dec
or
sub
pushf
cmp
test
loope
aad
sbb
cmps
add
jmp
mov
adc
daa
fnsave
(bad)
mov
mov
mov
add
fld
add
cli
xchg
fadd
jbe
cdq
jbe
xchg
pop
rcr
add
lock
xchg
cs
inc
icebp
loop
inc
mov
adc
and
jecxz
sahf
xchg
fs
push
in
fcmove
and
lahf
mov
or
leave
or
ja
cmp
ret
xchg
mov
out
popa
imul
out
addr16
pop
xchg
jmp
push
add
fist
mov
or
xor
lock
popf
pop
push
mov
arpl
cwde
retf
cmp
xor
loope
push
sub
lods
jae
aaa
inc
sahf
mov
nop
sub
jl
or
mov
(bad)
test
dec
loope
lods
mov
adc
dec
adc
sbb
stc
pop
std
and
mov
outs
retf
push
jmp
or
lahf
js
in
pop
jecxz
sub
loop
and
inc
mov
aaa
sub
(bad)
or
nop
mov
fsin
pop
retf
das
jb
mov
mov
jbe
push
sub
fwait
inc
pop
outs
bsf
jo
pop
and
sar
popa
inc
sub
xlat
or
fwait
xchg
(bad)
push
mov
retf
shl
dec
dec
mov
pop
movs
dec
ror
push
xor
mov
and
ja
or
jmp
add
cmps
in
xchg
data16
pushw
push
push
pop
ss
dec
mov
xchg
push
pop
and
inc
adc
xor
icebp
pop
push
pop
mov
cmps
add
pop
hlt
adc
sub
(bad)
call
jmp
outs
cmp
mov
outs
repnz
sbb
fwait
xchg
and
dec
sub
retf
xchg
in
mov
or
or
mov
pop
(bad)
adc
xlat
pop
xchg
push
xor
test
into
inc
jo
loopne
pop
xor
pop
mov
or
mov
(bad)
lahf
out
dec
adc
fst
inc
ror
sbb
stos
movs
sbb
jecxz
mul
mov
sbb
ds
push
jnp
or
xor
mov
iret
jo
std
mov
dec
pop
push
lahf
sbb
stos
icebp
pop
leave
push
(bad)
rcl
push
jmp
fnstcw
mov
jmp
push
mov
adc
cmp
adc
inc
(bad)
sbb
or
mov
aas
lods
or
mov
loop
enter
add
pop
dec
or
ins
inc
and
pop
movs
or
mov
enter
jl
and
or
mov
pop
pusha
out
fst
sti
mov
jns
dec
push
xchg
outs
retf
adc
push
clc
xchg
mov
inc
daa
call
inc
lahf
ficom
jo
sahf
dec
out
ret
mov
pop
(bad)
sti
jbe
adc
push
xor
push
clc
xchg
iret
inc
jb
mov
(bad)
shl
pop
iret
test
stos
mov
pop
mov
inc
fisubr
cs
dec
(bad)
loope
ret
mov
pop
cmp
sub
pop
push
jns
and
and
es
mov
cwde
push
int
xor
mov
inc
cmps
das
xlat
or
mov
dec
mov
sub
ins
or
fdivr
lds
pop
(bad)
mov
fld
and
test
inc
(bad)
sbb
sub
inc
mov
push
(bad)
jecxz
fs
jmp
dec
mov
adc
ror
in
mov
in
(bad)
jo
push
push
sar
popf
push
adc
shr
xchg
jb
sub
sbb
dec
push
push
lea
test
cdq
stos
scas
cmp
in
popf
sti
aam
fmul
adc
xchg
sbb
jmp
mov
inc
fiadd
add
fsubr
mov
jno
sub
imul
inc
ss
ins
mov
fdiv
loopne
sub
js
inc
mov
sub
push
fbstp
sbb
jecxz
es
sbb
adc
inc
fimul
xchg
jmp
in
push
out
sbb
repnz
adc
shl
xor
pushf
dec
pop
cmp
bound
xchg
or
je
not
dec
push
popa
dec
movs
sbb
ror
inc
sbb
and
icebp
inc
and
nop
(bad)
in
pop
out
add
into
mov
inc
pop
test
fist
xor
scas
dec
stc
hlt
jmp
lahf
test
jmp
push
or
sub
scas
mov
clc
test
push
div
jp
push
in
push
movs
jle
cmp
push
in
scas
mov
xor
pushf
add
stc
add
and
inc
or
jge
cwde
ja
cwde
sbb
mov
push
sub
(bad)
div
js
inc
int3
enter
sbb
jmp
inc
mov
rcr
ror
ja
ret
repnz
push
stos
mov
ficom
mov
shl
jne
jge
stos
jecxz
fidiv
sub
add
sahf
popa
pop
jbe
dec
push
sbb
push
sbb
push
inc
xor
lea
loopne
outs
mov
fimul
cwde
xor
mov
inc
sbb
mov
retf
test
adc
mov
fistp
ins
add
in
stos
mov
xor
mov
cwde
or
add
int
imul
rcr
cwde
call
cmp
lds
and
jmp
inc
push
iret
fsubr
daa
xchg
jg
call
sub
shr
nop
int
jns
or
and
jns
jp
pop
stc
das
mov
es
mov
adc
popa
pusha
ins
jle
sbb
mov
test
lods
mov
mov
leave
adc
bound
pop
or
add
mov
xchg
push
rol
outs
mov
and
mov
icebp
pop
sub
add
inc
push
neg
xchg
xchg
jno
xchg
popf
lds
call
imul
fst
sub
inc
int
fdiv
jne
sub
loopne
data16
fs
aas
jmp
push
(bad)
mov
mov
enter
imul
cmp
pop
rcr
sub
push
mov
ror
popa
rcr
mov
in
inc
cmp
xchg
and
aaa
add
shr
js
ds
fsub
pusha
xlat
mov
ss
(bad)
mov
in
push
pop
dec
out
push
neg
mov
adc
pop
arpl
jnp
iret
je
in
dec
dec
clc
jb
dec
mov
and
dec
scas
je
fdivr
test
retf
or
lock
popw
loop
cdq
mov
sbb
stos
arpl
or
sub
and
adc
adc
je
das
cmps
mov
cli
sti
(bad)
mov
imul
rcl
ss
int3
ret
or
add
stos
in
add
and
paddb
pop
clc
jge
rcl
inc
cld
repz
mov
sbb
adc
add
retf
mov
adc
pop
retf
mov
aaa
test
adc
mov
test
inc
inc
xor
aad
cmp
imul
into
hlt
dec
rcl
hlt
adc
call
mov
mov
inc
rcr
pop
lods
jg
jbe
add
stos
das
inc
xchg
add
repz
mov
adc
add
pop
push
dec
leave
ins
sar
(bad)
sti
aaa
lahf
movs
ror
movs
and
imul
adc
std
ror
imul
(bad)
push
fcmovne
ds
js
dec
mov
push
mov
call
stos
jmp
ja
mov
cmps
add
add
movs
fs
ss
and
in
ds
push
mov
ins
mov
in
in
jg
dec
js
pop
cwde
(bad)
fs
ja
shl
add
mov
imul
sbb
xor
lods
mov
shr
pop
mov
xor
dec
sahf
or
repnz
adc
sub
or
push
in
dec
loopne
(bad)
push
xor
push
fwait
and
jbe
std
dec
sti
cmp
cmps
mov
cmp
or
ret
mov
sub
pusha
mov
mov
xor
dec
jle
mov
jp
and
cmps
or
and
jle
xor
mov
or
jne
ficom
sub
pop
xchg
mov
popf
push
mov
jecxz
mov
adc
and
push
mov
or
pop
fcmovu
ficom
(bad)
cmps
rcl
pop
sbb
dec
cmp
xor
cmp
mov
sub
sub
jp
ins
out
test
test
(bad)
jnp
je
into
adc
add
setns
mov
push
mov
and
int
dec
ret
jb
add
mov
outs
cmp
xchg
xchg
aas
jl
xor
pop
ins
pop
fldcw
imul
outs
xchg
stc
adc
add
mov
cmp
inc
jle
(bad)
push
push
fcom
rol
jecxz
and
or
in
out
fucomp
stos
ss
fld
cli
arpl
scas
mov
jl
add
pop
scas
adc
mov
mov
cmp
mov
sti
jp
jno
mov
sbb
inc
cmp
sub
loopne
adc
imul
js
jmp
xchg
lea
loop
pop
jns
test
iret
sbb
xor
std
mov
es
mov
fsubr
inc
retf
aam
jp
mov
rol
cmps
or
arpl
jne
jmp
xor
cmp
(bad)
or
dec
dec
dec
sbb
mov
repnz
xchg
je
push
shl
bound
jle
push
popf
jae
aas
imul
jnp
(bad)
cmp
inc
ror
(bad)
lods
inc
jge
jmp
adc
sar
cmp
ins
jae
mov
and
mov
push
sahf
fidivr
rcr
addr16
dec
stos
lods
int
lahf
dec
or
into
leave
loop
push
ins
ds
mov
enter
ins
imul
jmp
stc
gs
jecxz
out
mov
push
pushf
jbe
fs
push
lahf
mov
call
adc
enter
mov
nop
aad
lock
sub
stc
(bad)
and
sbb
pop
and
dec
mov
push
nop
shl
stc
add
adc
je
add
out
aaa
hlt
outs
cmp
mov
inc
out
jecxz
je
out
dec
ins
outs
pop
je
out
jg
scas
adc
push
adc
jno
lahf
mov
iret
(bad)
repz
lods
mov
fwait
lods
call
pop
sub
xchg
cmp
jo
shl
call
lds
jl
xchg
lea
dec
loop
add
mov
or
adc
imul
test
add
aad
lods
cli
mov
lods
pop
push
push
out
xor
in
and
je
jl
xchg
mov
movs
sub
sbb
lds
ja
enter
enter
cmp
mov
xchg
in
jg
pushf
das
mov
push
(bad)
(bad)
jmp
sub
pop
jnp
jle
mov
lds
dec
cmp
inc
mov
mov
inc
adc
aas
pop
imul
xchg
push
mov
mov
mov
dec
mov
mov
mov
pop
jmp
in
int
sbb
fadd
movs
call
pushf
sbb
out
rcr
adc
stos
xchg
test
pop
or
and
addr16
(bad)
loope
in
mov
imul
jg
xor
lods
mov
sub
xlat
aaa
xchg
rol
adc
icebp
pop
mov
push
test
dec
pop
jmp
cs
lahf
push
sub
inc
(bad)
fnsave
sbb
in
add
cmp
enterw
ret
ret
inc
aaa
push
int
push
rcl
xchg
cmp
inc
repnz
pop
dec
shl
mov
movs
in
xchg
div
leave
popf
jl
fistp
mov
add
push
nop
imul
xchg
mov
test
jne
je
(bad)
xor
or
aam
sbb
or
mov
mov
test
jo
and
jle
sub
pop
mov
jle
sar
xor
stc
push
pop
jno
push
(bad)
sbb
les
mov
test
pushf
into
mov
addr16
cwde
inc
pop
dec
add
bound
addr16
lock
jecxz
(bad)
push
xchg
cmps
add
mov
cwde
jecxz
std
pop
mov
enter
das
add
pop
sbb
fimul
les
arpl
fimul
retf
scas
adc
in
jbe
push
lods
xchg
outs
mov
shr
sub
sbb
es
daa
push
cwde
mov
jae
push
xor
out
mov
jnp
mov
les
mul
dec
ja
out
pop
inc
jecxz
fstp
loopne
(bad)
cmp
clc
test
adc
fwait
and
cmps
pop
hlt
and
inc
mov
dec
dec
aam
fist
pop
into
xor
mov
popa
shl
pop
xchg
pop
mov
cdq
xchg
(bad)
adc
cmp
(bad)
adc
inc
inc
fld
ss
into
mov
shl
push
packssdw
loope
sbb
or
mov
into
xor
cwde
ins
bound
inc
fsubr
nop
test
adc
sbb
xor
xor
pop
jo
xchg
ror
sub
xor
dec
sti
ins
jge
jne
loop
or
imul
push
sbb
sub
xchg
jbe
push
jo
movs
add
pop
(bad)
les
cmp
inc
mov
xor
sub
stos
push
lahf
xacquire
pop
pop
mov
(bad)
adc
sub
sbb
push
retf
mov
mov
cmp
movs
mov
adc
jge
ins
cld
jl
imul
add
push
jo
mov
mov
(bad)
adc
pop
xlat
mov
fsubr
mov
std
sar
push
cwde
push
jecxz
cmp
add
aaa
pop
cmp
push
xchg
iret
frstor
push
int
inc
cmps
stc
sub
aad
pop
cmps
retf
jmp
inc
jae
je
repz
inc
mov
lods
test
adc
xchg
dec
xchg
or
imul
mov
push
and
test
xor
add
clc
add
adc
hlt
add
adc
inc
pop
lock
mov
aaa
push
pop
pop
lods
(bad)
rol
jo
xchg
ins
or
inc
adc
ret
iret
add
add
sbb
scas
div
outs
jmp
lahf
cmp
ins
dec
popa
cmp
shl
jle
add
por
mov
mov
std
xlat
add
pop
cmps
sbb
xor
cmc
mov
(bad)
xchg
ins
std
cmc
or
jbe
sub
or
adc
mov
ror
data16
xor
mov
jo
jno
xchg
or
mov
loope
ret
int3
and
inc
or
adc
outs
std
js
add
fsub
mov
and
mov
and
xor
retf
(bad)
fdivr
mov
leave
or
je
aas
stc
lea
in
add
add
jb
inc
sar
cdq
xor
xchg
and
popa
test
leave
xor
pop
push
xchg
jl
nop
push
xchg
ret
xlat
sbb
pop
arpl
aas
sti
dec
inc
xor
cmps
mov
inc
jp
test
pop
add
mov
fsubr
je
jne
nop
jno
leave
cmps
dec
xor
jecxz
loop
inc
hlt
sahf
jecxz
adc
jge
les
pop
mov
mov
push
xor
mov
pop
fdiv
cwde
cwde
push
sbb
iret
dec
xor
ret
sahf
cld
xor
add
mov
fstp
inc
and
ror
inc
push
es
shl
mov
add
pusha
mov
ret
xor
js
ret
cmp
push
fld
sbb
imul
bound
mov
sbb
sub
ret
test
nop
retfw
fisubr
daa
test
xchg
xlat
xchg
mov
fcmovu
adc
cmps
dec
mov
sti
push
sahf
inc
arpl
adc
movs
adc
pop
shl
ret
xchg
leave
cmp
in
loope
stc
and
faddp
xchg
mov
sti
ja
sbb
cmp
mov
bound
in
or
leave
cmc
rcl
stc
call
or
leave
(bad)
shr
fiadd
adc
loope
data16
xchg
lock
lock
xor
push
movs
pusha
loop
mov
rcr
(bad)
ds
outs
xchg
jae
adc
ret
das
icebp
je
fbld
push
or
jne
mov
inc
inc
jmp
cmp
cmp
bound
dec
out
call
push
add
ins
lods
in
dec
mov
pop
push
es
bound
rcl
retf
(bad)
arpl
ss
loope
sub
gs
add
pop
inc
fsub
mov
leave
scas
cmc
out
jo
sbb
test
jge
test
sbb
xor
int3
repz
loope
dec
jg
jb
shr
or
lds
jno
es
pop
sbb
inc
sub
bound
add
shl
repnz
hlt
mov
adc
mov
xchg
lock
lahf
mov
cdq
in
adc
cmp
and
mov
lea
adc
data16
or
adc
inc
mov
loope
mov
lock
cmps
xor
sahf
lock
mov
xchg
xchg
or
aaa
sub
in
jl
idiv
push
or
mov
adc
cwde
je
pop
dec
add
mov
mov
inc
lds
dec
std
xchg
into
mov
add
or
add
dec
sub
sub
xor
push
sub
stos
test
inc
call
mov
dec
stc
push
sub
jae
retf
pusha
inc
sbb
scas
lods
(bad)
aad
mov
call
arpl
dec
push
scas
ret
xor
mov
xchg
nop
mov
sar
out
jle
call
mov
cdq
mov
jge
cmps
pop
inc
retf
test
mov
adc
fcom
mov
arpl
lea
mov
loop
jb
sub
rol
mov
mov
repnz
mov
jge
and
fisttp
or
pop
xchg
sub
cmp
fadd
cmp
lock
xor
mov
dec
mov
mov
xchg
inc
fistp
dec
pushf
lds
inc
ror
or
jmp
jbe
imul
jno
jg
fcomip
xchg
call
sbb
mov
dec
or
gs
ss
clc
test
dec
add
mov
addr16
push
dec
(bad)
bnd
push
xchg
repz
cdq
sbb
into
cdq
hlt
mov
test
fimul
xor
ja
je
enter
cmp
pop
mov
fdivr
xor
mov
jg
movs
call
and
(bad)
shr
xor
inc
mov
xchg
and
cdq
ins
mov
stos
scas
ds
ficomp
in
out
scas
(bad)
call
pushf
push
mov
retf
int3
jge
fwait
popa
into
cdq
sub
adc
fnop
stos
inc
outs
push
sti
jmp
addr16
jno
repz
adc
f2xm1
xor
xchg
pusha
xor
shl
mov
in
test
adc
push
repz
outs
daa
add
pop
push
icebp
mov
sbb
outs
es
pop
ss
mov
mov
xchg
ds
mov
es
sub
aaa
jl
pop
test
push
sti
stos
push
je
xor
les
ret
fdivr
pop
mov
dec
adc
jo
xchg
int
inc
mov
cmp
jae
in
sti
ret
popf
rcr
rol
call
jmp
mov
fdivr
fisub
ret
mov
or
dec
sub
push
bound
xor
cld
inc
jecxz
pop
push
pushf
movs
dec
and
cmps
js
out
mov
int3
gs
and
pop
in
mov
xlat
lock
mov
pushf
sar
mov
add
cmp
or
cld
leave
add
iret
mov
movs
ds
and
mov
xchg
pop
sub
aas
xor
mov
rol
add
and
stos
push
push
jns
push
mov
in
and
(bad)
std
or
repnz
push
push
loope
repz
pop
or
out
(bad)
mov
cld
xor
ja
popf
add
inc
bound
outs
cdq
stos
pop
mov
push
mov
adc
sbb
pop
outs
cmps
or
xchg
xor
xor
inc
dec
call
jmp
mov
cmp
outs
mov
pop
mov
adc
jmp
inc
lock
ret
es
jnp
sub
mov
in
mov
push
mov
pop
test
cmps
dec
mov
mov
jp
xchg
sub
add
jbe
xor
xchg
sbb
jmp
push
(bad)
cmp
and
mov
push
inc
or
and
out
xchg
shl
add
jae
js
ror
data16
pop
mov
jns
jl
sbb
add
and
mov
sahf
rol
jmp
shl
cli
adc
mov
dec
or
mov
dec
shr
popf
shl
(bad)
mov
cmps
enter
sbb
mov
stc
xor
dec
and
shr
aam
xchg
ds
mov
out
daa
in
out
popa
fs
aaa
pop
in
add
xchg
mov
dec
nop
sub
xchg
and
imul
cdq
movmskps
nop
loop
pop
push
test
sbb
test
rcr
popa
enter
jb
data16
aas
pop
push
stos
ret
add
fsubr
imul
adc
cmps
push
fstp
push
jbe
mov
test
(bad)
adc
cmc
xor
mov
pop
and
in
push
push
dec
mov
mov
and
jmp
lods
dec
and
out
pop
fdiv
cmps
scas
retf
stos
fcomp
cmp
call
xchg
xor
movs
xrelease
(bad)
dec
xor
cmp
xchg
das
pop
aas
jle
fadd
lahf
ret
xor
ds
xor
mov
jg
fmul
inc
out
dec
inc
xchg
adc
adc
aas
pop
mov
(bad)
cmp
hlt
test
xchg
(bad)
adc
scas
and
iret
dec
dec
imul
mov
cs
xchg
in
push
repz
lea
mov
rcr
cmps
out
data16
jmp
jno
shl
mov
cmp
ds
jmp
pop
adc
adc
movs
mov
repz
mov
or
pop
inc
data16
popf
adc
arpl
cmps
pop
movs
sbb
scas
add
imul
enter
in
jmp
inc
in
pusha
push
ins
pop
sub
sahf
sbb
imul
mov
dec
jae
or
push
hlt
pop
jmp
pop
adc
inc
call
gs
(bad)
mov
ret
sub
aam
pop
out
xor
ficom
pusha
cli
lods
xor
sti
sar
push
adc
push
push
xor
xor
adc
mov
inc
sbb
cld
inc
data16
pop
sbb
sub
push
popa
xchg
push
add
popa
repnz
das
lds
cs
push
adc
add
fdivr
add
call
(bad)
fcmovnu
fs
pop
loopne
adc
pusha
loop
aam
ja
push
std
xchg
adc
jp
ins
retf
(bad)
and
adc
nop
jmp
cdq
xor
adc
jmp
inc
sub
test
ss
in
cs
lods
in
into
ds
dec
loopne
clc
mov
mov
loopne
mov
fwait
and
inc
inc
mov
ja
repnz
mov
add
jb
pop
retf
cmp
cmp
push
mov
cmp
jecxz
jne
ins
sbb
shl
xadd
pusha
and
cmc
(bad)
popa
mov
push
(bad)
cmps
call
and
xchg
pop
cwde
mov
cmp
ror
jg
shl
jns
inc
cmp
sub
test
cmp
inc
gs
cmp
addr16
xchg
adc
pop
sub
(bad)
xchg
in
ret
inc
sbb
sub
xchg
mov
mov
or
pop
shl
les
aad
out
mov
cwde
inc
into
call
fisttp
mov
or
data16
mov
imul
(bad)
cwde
retf
inc
add
outs
adc
sbb
(bad)
retf
jge
ins
scas
xlat
and
aad
or
shl
ret
in
lea
ror
or
jg
and
push
pop
xor
pop
cs
imul
add
xor
mov
jle
push
or
lea
mov
mov
pushf
clc
and
pushf
(bad)
pop
xchg
mov
(bad)
xchg
out
mov
pop
retf
push
dec
push
ins
cmp
pop
xchg
scas
lods
ja
nop
adc
and
push
frstor
into
out
and
outs
cmp
adc
add
ret
test
stos
pusha
hlt
pop
or
dec
push
mov
fsubrp
dec
(bad)
fld
pusha
cld
pop
or
mov
rol
push
adc
mov
lea
mov
std
call
jg
jmp
jle
outs
dec
or
aad
retf
sbb
sub
add
retf
outs
in
adc
mov
(bad)
inc
mov
adc
dec
int
cmpxchg
jecxz
add
clc
sub
gs
xchg
pushf
xchg
repnz
lods
xchg
call
dec
jmp
inc
lock
add
pop
js
ins
sbb
ins
and
push
and
and
lds
rol
movs
add
xor
fwait
mov
push
xchg
stos
xchg
pop
sbb
pop
jle
jle
mov
leave
sbb
jnp
mov
pop
je
cs
sub
xchg
mov
adc
sbb
(bad)
pusha
mov
sub
dec
xor
lods
pusha
jmp
mov
xor
or
push
push
mov
outs
call
aas
sub
jmp
mov
or
xchg
or
dec
or
sub
loope
inc
mov
xchg
adc
das
mov
inc
hlt
dec
jle
mov
dec
imul
mov
mov
jle
add
and
ins
push
mov
test
dec
jne
imul
pop
aad
shl
xor
pop
cld
popa
cmp
jp
pushf
xchg
inc
je
push
test
pop
loop
sahf
fsubr
sbb
cdq
xchg
bnd
loop
in
mov
xchg
mov
arpl
mov
mov
or
push
cmp
jle
dec
mov
cmps
ret
ficom
mov
sbb
arpl
into
adc
imul
stos
inc
push
(bad)
jmp
fbstp
sub
jns
repnz
dec
pop
sbb
lock
fwait
adc
jnp
pop
je
pusha
or
(bad)
out
clc
xchg
push
ret
loope
or
jae
sub
push
xchg
jne
cmp
sub
out
fcmovbe
jne
inc
into
popa
xor
pop
or
xchg
mov
rcl
clc
pop
fild
xchg
sub
inc
mov
sbb
add
popf
in
rcr
xor
mov
adc
jb
jae
jo
mov
sub
push
(bad)
clc
loop
das
and
fucomip
repz
in
push
cmp
add
iretw
int3
mov
bound
lods
loope
icebp
sbb
enter
inc
out
inc
ret
xor
in
in
das
shr
push
popa
rcl
xor
movs
test
pop
test
mov
std
sub
push
add
add
fwait
dec
add
mov
inc
mov
(bad)
push
push
mov
cmps
jne
pop
mov
scas
cmp
jl
lods
imul
mov
lahf
dec
jnp
fnsetpm(287
imul
clc
pop
mov
in
jp
sbb
es
retf
add
dec
cmc
lahf
add
data16
and
icebp
dec
mov
scas
xchg
and
add
xchg
push
inc
push
fnsave
shl
push
dec
mov
inc
sbb
dec
mov
cmp
lds
fmul
jp
lods
cmp
adc
or
inc
ja
dec
nop
cli
pop
arpl
dec
sbb
jno
adc
or
mov
jecxz
aaa
repz
mov
and
call
pushf
add
jge
fcomp
add
push
dec
call
jl
xor
sti
call
rcl
jmp
adc
cmp
jnp
mov
inc
sar
mov
fist
aas
pushf
xchg
div
aam
mov
jbe
cmp
aad
daa
dec
loopne
or
or
dec
ss
mov
xchg
pop
push
pop
mov
or
inc
retf
xchg
lods
mov
inc
mov
sti
pop
fdiv
dec
inc
mov
push
fdiv
xor
dec
inc
addr16
(bad)
test
cdq
fisttp
call
mov
cmovle
sub
push
mov
xchg
dec
fwait
stos
inc
xchg
ror
jmp
cli
shl
out
ss
push
xchg
push
shl
add
pop
ret
inc
sub
fmul
sub
sbb
rcr
xchg
push
and
adc
not
js
xchg
mov
and
pusha
push
fcmovne
xchg
retf
sbb
sub
fmul
loop
lea
pop
sub
jbe
(bad)
loope
cmps
sub
push
cs
pop
jge
jmp
sar
or
xchg
call
mov
test
mov
xlat
and
(bad)
xor
sbb
(bad)
cli
mul
inc
out
fisubr
xchg
pop
sbb
pop
dec
test
xor
repz
movs
sbb
fadd
mov
bound
mov
and
sub
cmp
xchg
mov
add
inc
pop
fcom
imul
push
xchg
cmps
call
int
sbb
inc
or
pop
ror
adc
and
adc
dec
pop
jp
sub
jb
cmps
shl
in
mov
popa
mov
cwde
in
mov
fwait
pop
add
lods
cmps
adc
repnz
pop
xor
or
sub
sub
dec
push
outs
sub
lock
push
test
sub
mov
add
sbb
outs
rol
or
ss
xchg
outs
xchg
sbb
and
add
ltr
inc
dec
(bad)
hlt
lods
sub
inc
inc
and
int
or
aas
cli
pop
mov
cmp
(bad)
jmp
sbb
js
fsubr
retf
dec
(bad)
js
stos
jns
retf
dec
sub
xlat
scas
adc
cmp
int3
or
jbe
(bad)
mov
retf
push
pop
or
dec
adc
mov
mov
repnz
push
scas
push
and
outs
sti
xor
popf
mov
mov
test
and
or
inc
dec
icebp
fild
test
cld
cdq
or
loop
pusha
jno
aad
cmp
(bad)
fsubrp
cmp
add
les
dec
pop
aas
pop
mov
scas
cmp
bound
sbb
out
rol
pop
aaa
shl
daa
mov
movs
(bad)
lods
pop
shl
xor
not
arpl
sbb
fcomp
pop
sbb
and
sti
jp
dec
data16
mov
sub
icebp
jl
add
dec
add
(bad)
push
call
inc
(bad)
cli
and
pushf
jnp
(bad)
jns
movs
dec
mov
cmp
aaa
jo
retf
adc
dec
and
leave
mov
sbb
fbstp
sub
test
out
popf
xchg
dec
xchg
or
call
and
das
dec
add
bnd
std
sbb
stos
add
cmp
jnp
mov
or
mov
mov
xor
sbb
je
jge
loopne
int3
dec
retf
jo
sahf
fidivr
movs
sub
retf
mov
clc
div
adc
ins
sbb
jmp
fsubr
ss
adc
inc
sub
sar
out
cdq
xchg
cmps
iret
mov
sbb
push
sbb
dec
push
or
pop
mov
add
xor
adc
ja
mov
loopne
and
adc
scas
add
je
scas
into
or
sub
shr
rcl
adc
fiadd
in
sub
jae
cmps
(bad)
hlt
mov
cmp
dec
jno
fdiv
sbb
movs
clc
dec
imul
bound
cmp
test
adc
les
mov
pop
push
lsl
mov
mov
pop
mov
push
cs
popf
add
jmp
pusha
popf
mov
dec
bound
mov
ss
aam
fcmove
jmp
in
mov
xchg
mov
cmps
mov
or
mov
test
push
jge
dec
fwait
movs
pop
jle
xchg
add
adc
jae
call
(bad)
out
out
mov
ret
ret
loop
mov
mov
ret
cmp
jmp
fnsave
ins
movs
fcomp
inc
out
pop
and
dec
mov
adc
cmp
(bad)
push
pusha
mov
gs
or
adc
ins
mov
cmp
popa
cmc
pop
popf
dec
jmp
or
pop
mov
jbe
clc
add
out
mov
scas
(bad)
fs
dec
xchg
cmp
hlt
stos
in
jno
lock
jmp
lock
test
pop
pop
jae
pop
and
test
inc
imul
imul
cli
adc
sub
xor
nop
cld
sbb
cmps
out
sbb
jbe
mov
push
inc
inc
xchg
push
dec
add
pop
xchg
pusha
arpl
xchg
rcr
xor
pop
xor
sbb
cmp
and
clc
xchg
dec
adc
add
iret
data16
inc
ds
test
retf
std
into
add
or
add
jmp
popf
fbld
mov
xor
outs
sub
adc
and
mov
jecxz
xor
stos
out
mov
mov
aad
cli
mov
inc
jecxz
or
int3
sub
sub
sbb
adc
mov
ror
fdivrp
out
xor
jecxz
leave
nop
mov
ins
arpl
movs
out
mov
mov
add
mov
mov
fmul
leave
sbb
jnp
mov
mov
mov
dec
push
cmp
cmps
pop
in
(bad)
mov
pop
mov
mov
shl
or
and
xor
mov
mov
jg
jmp
and
ds
push
stos
test
xor
mov
es
mov
xchg
test
jl
cmp
(bad)
nop
inc
adc
movaps
xor
mov
cli
into
neg
stc
ja
lock
xlat
sbb
adc
and
dec
leave
aas
add
xchg
pop
fld
pusha
mov
mov
fwait
sub
inc
and
jo
xchg
(bad)
(bad)
jg
(bad)
arpl
cwde
and
dec
and
or
push
push
(bad)
pop
dec
cdq
mov
cmp
pop
test
push
sar
cmp
push
jmp
adc
nop
pop
in
cdq
leave
pop
test
fwait
jns
or
inc
mov
mov
nop
addr16
out
lods
test
test
test
cmc
and
dec
lock
push
push
mov
jecxz
pop
div
jb
in
xchg
rcr
xlat
sti
outs
les
sti
aaa
and
in
push
aam
and
mov
xchg
icebp
adc
into
xchg
mov
jl
imul
or
cmp
lods
pop
inc
cs
and
leave
enter
test
fs
(bad)
push
outs
movs
(bad)
fdiv
jnp
pop
mov
and
jb
xor
push
stc
call
push
imul
scas
mov
sti
mov
mov
add
mov
pop
push
in
or
mov
mov
in
push
or
mov
fwait
jg
lds
(bad)
int
inc
addr16
mov
push
mov
push
jbe
pop
cli
sub
(bad)
sbb
mov
jnp
aam
(bad)
xchg
nop
add
mov
ror
repz
or
pop
(bad)
es
jns
mov
push
sub
and
fidivr
xor
jl
jbe
sub
mul
adc
mov
xor
fwait
push
xchg
mov
add
jb
sbb
pop
iret
pop
push
cmc
popa
int3
and
mov
aad
mov
jne
push
cmp
clc
xor
hlt
jg
in
inc
push
fnsave
sub
sub
daa
mov
shl
(bad)
mov
pusha
jno
dec
add
mov
sahf
and
movs
mov
out
call
inc
adc
daa
sbb
dec
aas
jae
cmps
and
aas
loopne
mov
(bad)
push
cwde
lahf
dec
clc
push
cli
rol
test
xor
and
xor
movs
push
outs
jle
bound
(bad)
retf
push
rol
ja
shl
add
addr16
jg
or
pop
xor
test
repz
add
xor
fstp
jge
add
outs
dec
and
imul
aam
xchg
out
loopne
mov
xchg
lods
sub
es
test
mov
pop
jae
cmp
jg
inc
mov
pop
(bad)
in
mov
jl
int
pop
or
lea
cmp
cmps
fisub
jno
dec
and
icebp
jae
call
ds
inc
icebp
sbb
xlat
and
sub
and
(bad)
xchg
inc
sbb
mov
clc
adc
repz
jmp
inc
push
cmps
mov
push
and
pop
fcomp
xchg
js
inc
cs
in
and
test
pop
push
pop
xchg
and
movs
scas
popf
scas
pop
aaa
aas
loopne
push
retf
mov
sub
mov
icebp
inc
jne
and
adc
cld
pop
xor
out
(bad)
frstor
xchg
loope
data16
retf
lock
cmp
mov
mov
push
push
fsubr
ins
jge
push
and
outs
xchg
retf
sub
es
jae
loop
push
ret
sbb
clc
mov
mov
cmp
add
test
sbb
jmp
xor
popf
jg
push
and
ins
mov
lods
mov
adc
cmp
jmpw
mov
pop
push
push
test
cmp
shl
sbb
mov
ret
cmp
add
fadd
cdq
xchg
aam
sub
mov
neg
and
mov
mov
jmp
jno
ds
(bad)
(bad)
jmp
mov
aas
or
push
ss
push
cli
jae
mov
jbe
jecxz
mov
into
xor
mov
je
fwait
out
jae
mov
push
into
mov
enter
sbb
int
or
add
inc
(bad)
out
nop
pop
data16
dec
sbb
sub
xchg
arpl
mov
pop
aad
mov
js
outs
inc
mov
mov
nop
ja
shr
test
inc
push
mov
jne
mov
ds
sub
test
mov
mov
bound
(bad)
xor
out
xchg
push
inc
dec
xchg
add
cmps
dec
sbb
retf
out
test
jne
add
test
aad
jge
xchg
fadd
into
dec
int
in
adc
cli
ja
pop
jbe
mov
mov
adc
pop
outs
jo
daa
pushf
add
xor
das
adc
fld
stc
push
out
repz
lds
mov
movs
cmp
mov
shl
fsubr
aam
fwait
mov
inc
div
fisubr
mov
xchg
and
mov
test
pop
push
pop
inc
out
out
sub
bound
pop
or
mov
pop
pop
imul
int3
push
dec
nop
call
push
mov
mov
add
pop
gs
lds
dec
fcomp
xor
push
xchg
push
jo
sub
adc
dec
pop
sbb
pusha
pushf
dec
cdq
outs
xchg
ins
xor
push
xchg
cmps
jecxz
enter
inc
adc
ret
pop
cmps
nop
xchg
add
jecxz
add
push
fisubr
fst
dec
sub
or
sub
mov
sar
jo
lahf
mov
sbb
je
cmps
arpl
xchg
mov
data16
sub
enter
iret
mov
retf
out
fcmovnb
push
test
das
jbe
xor
inc
xchg
repnz
xlat
xchg
jp
mov
fcom
clc
pop
and
int3
jg
xchg
cmp
push
sbb
jb
dec
xchg
sbb
mov
and
call
add
out
movs
sahf
xchg
outs
push
clc
scas
pop
xor
mov
push
add
jmp
js
adc
fstp
mov
pop
mov
movs
xchg
cdq
adc
push
mov
xor
addr16
pop
or
test
cmp
jb
cs
pop
pop
mov
mov
int3
sahf
aas
inc
mov
es
add
push
lods
jl
retf
mov
push
dec
xchg
std
ficom
icebp
adc
or
daa
jmp
(bad)
sti
push
in
cmps
sahf
fldenv
shl
sub
cdq
cmp
jne
xor
popa
std
mov
jne
aaa
in
pop
je
inc
dec
rcr
adc
inc
ret
sbb
jb
ret
jg
fwait
in
sbb
test
fcom
stos
mov
sbb
test
adc
dec
out
retf
cmp
xchg
shl
cli
cmc
mov
xchg
mov
xchg
and
adc
add
pop
call
and
sahf
pusha
in
adc
xor
pop
mov
addr16
loope
xor
inc
xor
xchg
(bad)
fdivr
cmp
fs
scas
(bad)
push
sbb
mov
sbb
enter
inc
sbb
test
xchg
adc
clc
xor
push
shr
jecxz
jae
les
mov
mov
dec
jp
adc
ret
sub
cmp
and
mov
pushf
cmp
into
cmp
ret
inc
inc
dec
add
inc
jge
push
jge
cdq
xchg
rcl
xor
sti
test
dec
pusha
pop
jno
shl
cld
in
jge
adc
pop
push
pop
cmp
push
push
mov
push
jns
xchg
sbb
push
mov
cmp
(bad)
ror
pop
pop
call
dec
pop
push
fcom
xchg
sub
stos
xchg
out
in
es
add
int3
cmps
shl
dec
aas
shl
aas
mov
push
fld
dec
dec
xor
ins
and
cwde
addr16
std
cmp
jns
inc
cdq
lods
xchg
pop
shl
call
or
xchg
sub
cmp
data16
ret
aam
push
xor
fstp
das
pop
in
imul
adc
scas
loop
xor
pusha
cwde
cwde
in
fist
xor
aam
xor
jns
test
jp
sti
or
inc
inc
push
test
and
stos
or
push
(bad)
stos
mov
nop
mov
ja
loopne
mov
mov
fimul
jecxz
xchg
shl
movs
pop
dec
and
cmp
and
dec
sbb
fisub
xor
stc
pop
movs
stos
inc
push
outs
or
mov
iret
rol
cmp
(bad)
call
or
repz
clc
mov
adc
mov
psllq
push
test
push
movs
xchg
jl
arpl
and
scas
jmp
push
xchg
aad
dec
add
mov
lods
inc
mov
mov
or
push
rcl
leave
mov
push
shl
xchg
pop
cmp
out
mov
xchg
mov
dec
jmp
inc
outs
ss
in
dec
enter
adc
pop
movs
adc
add
ror
push
push
test
into
dec
movs
jae
je
sub
xor
sar
test
(bad)
push
(bad)
repnz
sahf
and
aaa
mov
ins
dec
fild
cli
(bad)
es
or
test
js
cld
pop
pusha
fdivr
jmp
mov
(bad)
cld
in
xor
nop
aad
jo
push
cmp
loopne
inc
es
push
in
xchg
jge
aas
rol
pop
jnp
jns
in
test
iret
xchg
adc
retf
add
sub
mov
mov
lea
retf
xchg
scas
mov
leave
xor
inc
ins
add
inc
int
cmp
adc
dec
repnz
xor
or
(bad)
repnz
fstp
movs
imul
lock
or
push
pop
cmp
or
imul
mov
jno
shl
pop
cmps
test
ret
dec
cli
mov
xchg
jo
pop
push
push
(bad)
mov
mov
mov
inc
cs
clc
ss
loope
call
mov
xchg
jbe
pop
imul
(bad)
or
jno
or
jns
push
movs
sbb
sbb
pusha
loopne
cmp
pop
jmp
push
mov
data16
scas
pop
retf
xchg
mov
sti
icebp
dec
xor
pop
repz
movs
dec
out
mov
adc
(bad)
ins
mov
sub
not
jb
pusha
rcl
push
inc
idiv
push
jae
mov
or
fcomp
inc
sbb
mov
xor
cmp
rcr
sbb
sbb
mov
outs
pusha
mov
push
int
dec
push
in
mov
cmp
mov
cmp
(bad)
mov
cli
mov
cmp
adc
or
mov
aad
inc
dec
xchg
leave
push
into
pop
cmp
vpshuflw
sub
retf
in
js
ss
push
cmp
movs
ss
call
xchg
pushf
loopne
pop
sub
cmc
push
call
mov
or
xor
sbb
push
(bad)
mov
and
retf
push
dec
cmps
mov
aas
imul
lahf
jae
lea
sub
pushf
sti
aas
in
cmp
mov
mov
imul
fldenv
mov
imul
bound
fwait
ror
push
sar
xor
retf
xor
mov
out
push
add
sub
mov
and
xchg
mov
pushf
dec
push
jg
push
jmp
cli
fdiv
xchg
mov
dec
addr16
(bad)
fisttp
fld
inc
or
stos
xor
aaa
sbb
shl
js
or
xchg
(bad)
mov
xor
pop
mov
pop
push
ja
fwait
cmp
adc
inc
jge
call
jno
or
pop
imul
(bad)
cdq
not
(bad)
cli
(bad)
shr
cmp
enter
jns
pop
push
dec
rol
or
rol
fdivr
pop
ins
iret
and
(bad)
push
xchg
enter
push
mov
loop
sbb
or
sbb
jne
out
dec
scas
adc
gs
mov
pop
xchg
xchg
push
div
ret
dec
or
and
inc
mov
cmp
pop
ja
jecxz
or
mov
stos
gs
xor
lock
in
pop
or
mov
in
pusha
jb
or
mov
es
into
pop
das
pop
dec
xor
mov
aam
aad
loope
sbb
cwde
ret
adc
mov
aaa
sbb
arpl
test
rcr
stc
outs
aad
xchg
add
pop
push
iret
test
sbb
inc
pop
sbb
jb
(bad)
dec
pop
aas
loop
retf
cld
jb
jmp
popa
adc
in
ror
push
cmp
dec
ins
mov
(bad)
dec
repz
movs
rcr
in
shl
lds
jb
iret
les
shl
sub
cwde
mov
mov
jge
loope
mov
sub
dec
xor
jle
loop
mov
cld
xchg
(bad)
fcomp
std
jle
(bad)
(bad)
div
xchg
cs
stos
lds
lds
cmp
loopne
cdq
lahf
xor
sub
sahf
popf
sbb
mov
das
xor
add
pop
mov
add
inc
sbb
aad
lahf
in
shr
xchg
test
shl
imul
and
jns
addr16
mov
or
jmp
sbb
jg
outs
mov
xor
cmps
jnp
mov
int3
and
mov
ss
addr16
lahf
imul
arpl
and
rcr
lods
dec
dec
xor
mov
ins
mov
or
dec
inc
cmp
rol
xor
dec
mov
in
jnp
jp
jnp
popa
dec
test
mov
lahf
add
mov
cld
not
push
imul
xchg
scas
(bad)
rcr
icebp
mov
stos
(bad)
mov
nop
pop
(bad)
mov
hlt
jns
xor
xchg
push
or
xchg
lock
std
fld
mov
(bad)
jecxz
movs
mov
sub
pop
je
fcmovnbe
adc
jmp
loopne
jge
cld
iret
push
(bad)
(bad)
sub
shl
ja
je
aad
jmp
in
loope
(bad)
push
(bad)
das
inc
gs
sbb
mov
dec
shl
shl
ret
(bad)
mov
jecxz
(bad)
or
dec
fldcw
and
cmps
es
add
retf
repnz
and
rcl
test
xchg
push
loop
or
adc
pop
add
dec
pop
stos
pop
lds
mov
sahf
push
out
(bad)
mov
adc
(bad)
outs
popf
mov
inc
ud0
scas
movs
push
repnz
cmps
call
scas
mov
sub
xor
(bad)
call
outs
push
(bad)
vsubss
fmul
adc
into
cmp
inc
stos
adc
aad
cmp
pop
mov
and
or
out
rcl
xchg
pop
pop
or
data16
shl
push
push
lods
and
adc
and
xchg
not
xchg
sub
sub
sar
cmp
idiv
inc
movs
or
mov
dec
sahf
test
inc
inc
jb
add
in
cmps
pop
mov
cli
xchg
cs
aaa
pop
jb
push
and
jg
test
std
ss
adc
or
sub
es
sbb
dec
mov
aad
ret
jb
sbb
add
mov
adc
stc
daa
cld
xchg
lods
ins
xchg
and
push
(bad)
aam
sar
pushf
data16
ins
xchg
dec
lock
or
mov
jnp
int3
icebp
cmp
fist
mov
sahf
dec
out
push
arpl
inc
mov
push
sbb
jl
jp
mov
hlt
adc
lods
scas
jo
mov
inc
push
or
aas
hlt
in
lea
dec
fild
cwde
ja
jne
mov
xchg
or
addr16
pop
pop
sbb
shr
(bad)
sbb
and
pusha
adc
data16
and
xor
ror
das
add
jae
pop
jnp
test
movs
mov
mov
iret
imul
xchg
mov
fs
or
push
xchg
hlt
mov
or
ret
nop
mov
mov
fmul
push
and
add
hlt
lds
pop
dec
mov
pcmpeqb
stos
push
cli
aaa
mov
pushf
cdq
jbe
imul
lods
cmp
imul
sub
addr16
pop
icebp
push
imul
sub
outs
pop
dec
out
sub
(bad)
push
daa
ds
dec
test
or
repnz
sbb
jmp
mov
or
popa
mov
icebp
jmp
enter
in
xor
out
jp
outs
sbb
movs
mov
inc
or
cmc
cs
adc
xor
sbb
dec
or
sub
adc
cmp
in
shr
out
add
rol
cmps
mov
cwde
mov
push
test
jo
(bad)
stos
pushf
dec
and
jb
popf
mov
pop
out
gs
mov
popf
out
sti
aaa
retf
dec
es
mov
or
sti
adc
sbb
dec
mov
mov
add
rcr
dec
movs
test
outs
pop
mov
fdiv
out
cmp
pop
mov
fcom
outs
icebp
lods
sti
ret
or
mov
out
les
xchg
push
int3
sub
mov
retf
jno
inc
sub
mov
pop
call
mov
sbb
and
stc
adc
(bad)
(bad)
jecxz
pop
ret
pusha
adc
push
mov
add
cmp
stc
test
dec
mov
xchg
pop
pop
jmp
add
cmp
pop
inc
in
or
push
outs
mov
psllq
sbb
retf
cmp
in
push
mov
outs
or
or
idiv
push
mov
ret
inc
or
aam
loop
(bad)
mov
cmp
loopne
sbb
sbb
in
sbb
das
loop
mov
mov
mov
icebp
add
retf
jl
aad
mov
jl
sar
stos
add
mov
gs
loope
sub
(bad)
(bad)
sbb
mov
jmp
cdq
ror
scas
or
add
rcr
sub
out
jo
pop
enter
sub
mov
inc
ret
mov
xchg
ins
jge
mov
pop
loopne
mov
je
add
imul
cmps
outs
cmps
sbb
sbb
mov
shr
or
ss
das
(bad)
cmps
push
jecxz
xlat
in
inc
cmp
scas
loopne
out
daa
(bad)
(bad)
xchg
ffreep
bound
fst
xor
dec
(bad)
pop
jo
push
daa
sbb
test
int3
mov
ins
mov
aad
mov
mov
mov
pop
mov
add
loopne
test
inc
ror
xchg
sti
scas
fs
loope
xchg
adc
fsub
ja
in
push
or
arpl
gs
dec
fimul
jmp
xchg
add
sahf
or
call
push
dec
(bad)
or
mov
jns
jl
and
cli
adc
in
xchg
into
sar
into
sahf
mov
xchg
adc
and
adc
inc
retf
dec
inc
push
mov
add
sbb
jno
mov
ja
xchg
add
add
dec
lock
inc
lods
add
or
and
(bad)
in
aaa
popa
mov
outs
sub
enter
pushf
mov
aaa
in
movs
sar
inc
cmp
daa
rcl
add
clc
sbb
add
in
loop
outs
adc
jns
or
and
sti
nop
sub
jg
mov
hlt
push
mov
stc
stos
jl
and
sbb
xchg
fdiv
bts
test
call
jno
push
popa
cmp
adc
pop
lds
ins
popf
sub
imul
jo
push
cmp
cmp
or
mov
lahf
jle
or
cld
push
cmp
add
pushf
in
or
cmps
xchg
jne
mov
stc
and
push
pop
and
arpl
out
enter
xchg
mov
ins
jge
out
fnsave
cmps
popa
arpl
fnstenv
or
inc
shl
sub
cmp
loopne
adc
xchg
int3
xchg
lods
jecxz
mov
fcomp
mov
(bad)
cmps
(bad)
test
and
add
ss
or
adc
popa
movs
mov
rcl
adc
mov
dec
test
(bad)
xor
sahf
add
das
xchg
jp
enter
cmp
xchg
(bad)
pop
mov
jne
cmp
movs
lahf
jmp
mov
ja
leave
rcl
xchg
xor
sub
movs
or
cmp
jno
sub
add
inc
add
mov
test
rcl
jle
push
dec
je
push
aam
iret
adc
jmp
add
pop
sbb
(bad)
jno
mov
xchg
and
loop
push
cmp
in
mov
inc
jmp
push
leave
stc
inc
in
dec
mov
sub
imul
or
fstp
push
movs
daa
fmulp
es
sub
out
cmps
xchg
dec
xor
inc
inc
stc
aaa
ss
mov
jl
cmp
std
jo
mov
fist
imul
cmp
xor
(bad)
aaa
add
cwde
or
mov
in
fisttp
ins
or
push
pop
cmp
ds
xlat
or
xor
out
out
push
(bad)
jge
mov
inc
xor
push
in
test
fmul
loop
pusha
fldenv
lds
sti
call
mov
sbb
cli
sbb
mov
sbb
inc
adc
std
cmp
std
pushf
jecxz
dec
cmps
ja
mov
push
jle
xchg
add
vpcmov
and
jmp
sti
push
call
push
scas
push
(bad)
(bad)
fstp
or
(bad)
(bad)
push
mov
ja
adc
mov
imul
aaa
pushf
inc
sbb
jne
fwait
dec
movs
jl
das
test
aas
stos
es
test
push
or
jmp
inc
cli
lock
cmp
sysexit
adc
mov
ror
inc
loopne
cmps
cwde
out
test
jbe
in
out
cmp
out
sub
test
cld
aas
(bad)
sbb
jo
push
imul
cmp
(bad)
daa
or
pop
shl
mov
test
and
out
stos
add
inc
in
iret
lahf
jbe
fsub
aas
mov
mov
cmps
gs
nop
add
das
xchg
imul
ror
test
and
sbb
lods
in
and
pop
add
mov
movs
movs
xor
pop
sub
mov
imul
dec
pop
sub
sub
sub
xor
rcl
outs
repz
or
cdq
int
dec
stc
pop
test
test
mov
pop
fild
xchg
stc
adc
lods
sbb
add
mov
jae
int3
loop
jmp
ret
fst
fsub
ins
jbe
xchg
das
loope
or
int
mov
loopne
push
sbb
out
mov
pop
xor
ret
inc
sub
ins
mov
dec
(bad)
cmps
dec
add
xor
and
imul
mov
inc
call
lahf
in
sbb
or
and
lds
fpatan
push
cld
xchg
loop
cdq
jp
inc
test
out
or
enter
mov
shl
jmp
mov
add
daa
lock
lods
adc
fcom
iret
cld
push
push
popf
inc
pop
fcom
mov
icebp
cli
lea
pop
mov
repz
push
repnz
shl
imul
jmp
adc
or
pop
jmp
cmp
retf
bound
jg
xor
xor
pop
stos
cmc
mov
mov
(bad)
sbb
adc
xchg
test
jp
or
(bad)
shl
fcomp
pushf
(bad)
mov
add
sbb
call
sub
jp
or
mov
sar
push
xchg
adc
lahf
dec
xchg
inc
and
dec
mov
push
test
fisubr
lahf
and
inc
aad
fsubr
test
push
inc
in
lods
loopne
(bad)
dec
push
fstp
fbstp
outs
lock
jne
lds
gs
dec
(bad)
in
cmp
mov
xchg
aad
jmp
push
mov
xor
iret
lock
adc
fdiv
xchg
test
mov
aad
mov
ror
xchg
pushf
sti
mov
lock
shr
mov
sbb
scas
inc
or
cmp
dec
scas
mov
ror
je
xor
test
jne
add
into
add
movs
jmp
std
dec
inc
shl
into
je
mov
add
pop
cmps
or
es
push
in
sbb
aam
push
push
movs
pop
sub
push
mul
cmps
mov
jecxz
xchg
pop
(bad)
fld
push
fwait
loop
mov
xchg
add
add
ja
push
stos
push
push
int3
add
shr
shl
push
sbb
inc
test
adc
push
mul
pop
inc
je
cmps
and
icebp
scas
xchg
fstp
jo
aam
popa
es
pop
jg
dec
inc
(bad)
cdq
in
jbe
sub
mov
(bad)
ins
mov
xchg
sub
cmp
mov
pop
(bad)
xchg
push
stos
pop
mov
sub
sbb
hlt
outs
push
(bad)
int
cmp
dec
inc
mov
dec
neg
pop
add
loopne
cmps
cmp
push
loop
jne
(bad)
je
loope
lods
push
or
(bad)
sub
stos
sbb
shr
movs
hlt
add
xor
jmp
out
pop
or
mov
(bad)
jae
rol
inc
out
cmp
fisub
enter
mov
lods
and
into
icebp
sbb
daa
inc
mov
xchg
add
cmp
sub
cmps
mov
mov
add
je
sub
inc
inc
in
lea
mov
mov
sahf
js
out
out
mov
lods
iret
inc
mov
mov
xchg
push
cli
retf
mov
mov
ss
push
popf
pop
out
xchg
iret
push
sub
or
sub
loope
lea
sub
or
ja
cmp
imul
adc
in
movs
stos
je
in
jns
sti
push
jp
push
clc
sbb
add
mov
cmp
or
and
sbb
cdq
in
mov
add
cmp
jo
imul
jle
and
fcomp
mov
lahf
push
ret
cmps
imul
sub
stc
test
popf
ss
int
ins
movs
out
ret
fild
jmp
jmp
xchg
loopne
mov
int3
jp
scas
retf
adc
cmp
test
jecxz
adc
sub
retf
ins
sub
dec
hlt
xor
in
imul
jg
cmps
imul
ins
rcl
jmp
sbb
add
int3
div
(bad)
popa
mov
inc
mov
adc
xchg
mov
icebp
jp
popf
inc
jmp
ror
jge
fcmovbe
mov
popa
xor
cmp
dec
pop
ret
stos
jge
popf
xor
loop
xchg
xor
xor
lods
mov
das
je
rcr
mov
push
int3
retf
and
movs
xchg
cmps
jl
xor
cld
mov
(bad)
and
aas
xor
xchg
cdq
loope
fs
mov
mov
jl
sub
pop
xchg
fisub
addr16
sub
repz
mov
jnp
add
das
hlt
rol
cmps
js
push
mov
stos
icebp
jp
mov
sbb
rcl
mov
call
sub
push
xchg
not
outs
dec
jg
fistp
cmp
cmp
sbb
dec
mov
xorps
fmulp
push
mov
mov
mov
sahf
and
or
cmp
sti
sub
ins
xchg
pushf
(bad)
rcl
xor
mov
sub
(bad)
pop
pop
xor
sahf
data16
fcom
lods
add
shr
add
loope
cmp
cmp
test
xchg
cmp
call
mov
ret
into
add
popf
inc
jne
std
loopne
ss
mov
mov
push
in
or
jmp
mov
hlt
cmps
gs
dec
sahf
out
add
add
dec
sbb
dec
jb
fdivr
mov
mov
pop
cmp
mov
sbb
imul
xchg
js
push
fcmovu
mov
or
ins
pop
movs
retf
cmps
mov
push
push
mov
clc
xor
loopne
rol
addr16
je
scas
pop
and
or
stos
mov
adc
jmp
push
(bad)
xor
out
icebp
dec
sub
jmp
shr
stos
add
and
jnp
fwait
add
inc
fiadd
push
loope
retf
xchg
mov
cmp
icebp
pop
xor
ja
ror
cs
sub
lock
test
mov
push
loopne
xor
push
sbb
aas
hlt
test
push
fwait
cwde
ds
mov
fwait
dec
mov
push
add
jecxz
(bad)
lock
aam
mov
cmp
(bad)
mov
sbb
cld
sbb
stos
cld
aam
int
sti
or
sbb
add
stc
cmc
push
imul
add
cmp
mov
fimul
out
int
mov
(bad)
pop
out
sub
mov
dec
push
(bad)
xlat
xor
cdq
rcr
add
sbb
fucomp
sub
add
icebp
add
xchg
fs
fistp
or
fsub
mov
ins
pop
inc
mov
ds
push
xchg
jb
jmp
mov
push
pop
repz
add
in
or
mov
dec
das
mov
inc
fstp
out
xchg
out
fstp
jbe
repnz
inc
cld
(bad)
call
retf
xchg
out
fwait
cvtps2pd
aaa
(bad)
ins
mov
dec
loopne
ret
add
nop
clc
mov
imul
stc
out
add
lea
xbegin
add
jo
outs
leave
sar
inc
rol
loopne
fs
push
test
(bad)
clc
xor
add
pop
jp
cmps
scas
xor
jno
int
ins
and
lds
pop
or
in
fidiv
xchg
shr
mov
mov
arpl
and
(bad)
(bad)
jo
adc
cdq
and
push
sbb
neg
jae
jnp
movs
pushf
retf
aad
push
inc
mov
iret
fisub
test
jmp
push
cdq
and
xchg
jb
cmp
sub
dec
add
dec
adc
aad
sahf
push
mov
test
mov
xlat
gs
outs
leave
jo
arpl
push
inc
call
mov
out
inc
dec
add
nop
adc
lea
repz
les
daa
daa
xchg
add
add
aas
sbb
push
jnp
das
xchg
cwde
jns
cli
and
repz
mov
hlt
sbb
scas
scas
cmp
xor
inc
(bad)
sbb
hlt
push
mov
inc
std
adc
cdq
out
test
scas
or
sbb
icebp
imul
popa
mov
dec
in
cmp
cmp
repz
(bad)
sbb
sti
cs
repnz
loopne
in
sbb
mov
and
pop
inc
pop
ja
pop
add
lods
hlt
xchg
sbb
mov
inc
(bad)
push
inc
jae
or
mov
dec
test
mov
in
repnz
in
retf
xchg
sar
dec
xchg
add
pop
adc
xchg
dec
adc
aas
xor
cmps
inc
mov
push
inc
loope
adc
enter
fnstsw
xchg
aad
ja
leave
sub
hlt
jnp
push
sbb
pop
ins
scas
iret
and
mov
mov
jno
ret
or
pushf
adc
fimul
xchg
jg
imul
mov
data16
xchg
jl
push
enter
pop
jg
imul
or
jne
ja
lahf
pop
iret
cmp
xor
cwde
add
sub
rol
popf
(bad)
and
in
xor
and
cs
push
mov
cs
shl
inc
mov
std
adc
ins
ja
sti
and
inc
cmc
mov
sbb
inc
mov
mov
pop
loopne
adc
rcr
pop
nop
pop
mov
test
mov
cld
sbb
pop
mov
and
stos
lar
repz
pop
sahf
push
test
or
or
rol
scas
mov
jno
and
xor
mov
jmp
stos
push
iret
mov
dec
xchg
dec
(bad)
xor
jl
sub
hlt
push
sub
outs
push
mov
mov
dec
(bad)
pop
xor
xor
mov
sub
dec
mov
nop
pop
sbb
cmps
je
fisub
pushf
repnz
es
outs
loope
push
jae
jle
ror
les
dec
sar
dec
data16
popa
or
pop
xchg
inc
mov
ret
add
jmp
jb
sahf
jne
lds
pop
dec
jmp
aas
mov
xor
mov
or
sub
sub
data16
mov
mov
pop
and
xchg
call
jle
dec
jmp
sub
jp
push
inc
jl
xor
pop
bnd
std
dec
mov
xor
push
stos
push
imul
call
push
mov
add
arpl
sbb
and
test
cmp
mov
(bad)
jg
hlt
jl
jae
and
jbe
sub
mov
cmp
repz
mov
pushf
data16
xchg
push
sahf
daa
pushf
add
sub
popf
xlat
fldz
sub
test
in
adc
scas
jo
xchg
call
sub
rol
jno
mov
test
mov
dec
(bad)
iret
mov
jnp
xchg
push
jns
data16
mov
jo
pusha
cmp
mov
(bad)
pop
dec
scas
xor
mov
sub
or
sbb
sub
idiv
push
ja
mov
mov
(bad)
mov
jae
mov
pop
popa
pop
sub
imul
or
lods
xor
jnp
sbb
cmps
sbb
rol
sbb
xchg
sub
adc
cmp
cdq
cmp
or
push
jmp
mov
xor
xlat
jae
add
test
sbb
xchg
xlat
cmp
cmps
add
pushf
or
imul
cmp
into
adc
sahf
push
mov
pop
cmp
ds
jnp
sbb
inc
push
sub
push
lahf
cld
aas
xor
lahf
rol
(bad)
(bad)
cmps
bound
sub
adc
jne
push
adc
idiv
rcl
and
ja
mov
loope
push
fcmovnu
sub
or
adc
call
(bad)
dec
sti
das
add
lods
jns
iret
xchg
das
adc
daa
shl
repnz
sbb
call
xor
mov
add
arpl
movs
push
dec
push
(bad)
fstp
imul
inc
mov
sbb
cdq
fist
lock
jns
cmps
test
add
fs
push
or
mov
and
push
das
test
sbb
dec
fld
dec
ins
hlt
push
arpl
mov
out
inc
cld
aam
jle
lahf
jns
adc
popf
fwait
ja
jmp
test
push
mov
add
sbb
popa
test
fadd
pop
retf
inc
and
inc
in
xor
adc
add
and
jecxz
jle
mov
lods
fdiv
push
loope
aaa
rcr
and
js
jmp
lea
add
sbb
mov
cs
pushf
scas
in
lock
inc
fs
inc
inc
es
scas
inc
mov
in
psllw
daa
sbb
inc
inc
push
dec
popa
xchg
and
mov
fwait
adc
inc
push
hlt
movs
mov
push
jle
sub
aad
sti
jae
imul
add
mov
and
out
ja
adc
add
je
mov
xlat
mov
ins
imul
adc
and
xor
daa
mov
jmp
push
xchg
outs
fcom
pop
mov
jmp
xor
add
clc
mov
push
mov
push
pop
add
mov
jae
pop
(bad)
out
xor
popa
outs
sub
mov
mov
push
or
cld
pop
mov
(bad)
jmp
cli
out
dec
(bad)
icebp
jge
dec
pop
retf
dec
arpl
sub
jbe
ror
jnp
gs
and
leave
xchg
call
cmp
hlt
fs
pop
outs
fs
xor
ret
mov
jg
in
xchg
pusha
sub
adc
pop
adc
arpl
stos
retf
jne
mov
xor
or
inc
push
icebp
ins
mov
xchg
sbb
fild
loopne
das
sbb
xor
or
hlt
icebp
adc
mov
rcr
clc
pop
push
mov
scas
sahf
fcmovb
repnz
neg
ins
add
inc
sub
mov
push
adc
ret
iret
out
mov
sar
(bad)
pop
push
mov
sub
(bad)
aaa
and
lds
and
or
mov
sbb
cdq
push
dec
dec
dec
jne
stc
jle
gs
test
xor
sub
jno
repnz
inc
push
xchg
dec
int
xor
mov
sbb
test
jmp
ins
push
lock
xchg
xor
les
aas
pop
mov
cli
jl
gs
mov
mov
test
mov
pusha
mov
out
xor
pop
(bad)
and
xor
cmp
imul
dec
jmp
popf
outs
jns
rol
shr
pop
lock
in
ja
ins
cmp
pop
mov
je
push
and
ins
push
xchg
add
ins
jb
cdq
jmp
imul
dec
or
test
(bad)
movs
call
pop
inc
push
imul
mov
or
adc
mov
sbb
cwde
inc
inc
mov
xchg
hlt
rcr
xor
fnstsw
or
sbb
and
mov
(bad)
aas
push
(bad)
jmp
out
movs
dec
pop
pop
mov
nop
push
lds
sub
cdq
add
push
and
jl
(bad)
sti
lods
retf
test
cmp
shr
or
daa
ret
sbb
or
sbb
jmp
mov
pop
pop
mov
mov
mov
scas
add
add
in
mov
imul
jbe
sbb
pusha
pop
sub
ret
mov
xor
mov
mov
push
cmp
punpckhdq
or
mov
mov
add
inc
test
imul
int
retf
(bad)
das
ins
in
int
sub
lds
xchg
loope
clc
jne
js
aaa
fild
(bad)
cmps
shr
add
lahf
addr16
inc
add
ins
ret
xchg
scas
mov
cmp
cli
imul
add
dec
sbb
mov
add
les
sub
fmul
sbb
je
or
dec
imul
sbb
lods
push
pop
jo
imul
xchg
mov
imul
or
pop
cdq
fcomp
mov
xor
(bad)
jnp
int
add
push
aam
push
sub
icebp
arpl
push
xchg
fmul
mov
dec
add
dec
sub
cmps
and
pop
pop
in
mov
sbb
inc
leave
push
shl
mov
in
push
push
mov
lods
js
pushf
mov
sbb
and
loop
add
outs
mov
icebp
inc
es
mov
mov
inc
lods
scas
push
test
pop
or
mov
shr
xchg
bound
call
mov
ds
pop
ins
out
ror
cdq
push
jne
mov
jg
jbe
aas
(bad)
(bad)
mov
movs
cmp
sub
(bad)
hlt
jecxz
jp
pushf
test
movs
push
test
data16
retf
sub
nop
cs
(bad)
dec
sahf
loopne
xchg
xchg
js
jecxz
ins
test
mov
std
mov
dec
add
lds
jecxz
in
mov
sbb
popf
mov
push
in
push
xor
outs
jp
jne
int3
call
push
stc
pop
ins
fdivr
mov
fs
push
add
loope
mov
fnstsw
dec
ds
sti
and
inc
outs
out
aam
inc
popf
inc
ficom
aad
mov
shl
or
ret
cmp
pop
and
pop
adc
xor
mov
mov
sbb
push
and
(bad)
pop
add
loopne
hlt
repnz
dec
adc
push
scas
mov
sahf
rol
ins
cmp
in
sub
mov
and
mov
xchg
popa
or
loop
cli
mov
out
ja
dec
popa
cmp
inc
into
inc
(bad)
jmp
aaa
adc
std
push
dec
(bad)
cwde
(bad)
ss
push
cld
fwait
and
(bad)
neg
mov
loopne
sub
lods
xchg
jb
test
add
mov
adc
std
nop
xor
dec
cmp
(bad)
ret
test
(bad)
and
clc
leave
mov
and
mov
and
xlat
jno
aaa
mov
jecxz
repnz
movs
ja
mov
sahf
out
push
push
inc
pop
add
dec
add
test
jbe
or
in
pop
inc
out
cmp
pusha
mov
cmps
adc
retf
pop
push
(bad)
xor
dec
jo
aaa
dec
sbb
mov
mov
xchg
sti
test
ds
ror
mov
cmps
outs
(bad)
mov
inc
fldlg2
in
mov
cmps
mov
jbe
or
rcr
xchg
adc
lods
dec
sti
mov
(bad)
ins
arpl
add
shl
cmp
sti
ret
inc
ret
pop
push
xor
sub
dec
movs
call
xchg
into
add
mov
fist
rcr
mov
popa
push
stos
aad
out
xchg
and
or
int
je
ins
es
push
std
ret
mov
sub
into
ja
repz
in
push
jne
mov
mov
daa
retf
and
mov
xchg
or
loop
lods
pop
xor
sub
popa
and
iret
jecxz
jge
push
sub
push
push
xor
dec
push
jl
arpl
out
in
or
retf
stc
retf
cmp
mov
(bad)
mov
pop
jb
loopne
jl
cmps
push
jbe
cmc
out
icebp
test
mov
and
pop
adc
xor
xor
test
pop
out
lods
jl
fbld
xor
lods
aaa
(bad)
mov
and
pop
pop
jnp
push
pmaddwd
movs
call
imul
lock
xchg
movs
adc
stc
mov
add
add
or
dec
rol
pusha
adc
movs
pop
push
xor
dec
and
push
shr
mov
push
pop
movs
or
lea
fisttp
and
lods
outs
sub
pop
xchg
sahf
cmp
add
push
jnp
xor
inc
mov
mov
cmp
cmps
xchg
out
bound
push
xchg
push
xchg
and
mov
jo
lods
gs
jge
dec
mov
sbb
mov
cmp
sbb
aam
repnz
arpl
fnstenv
imul
stc
sub
jne
and
iret
xor
repnz
push
nop
neg
pop
or
sbb
(bad)
orps
lods
ds
int
neg
sbb
or
xchg
sbb
pop
dec
push
pushf
loop
loopne
inc
call
xor
sti
cmp
dec
inc
leave
(bad)
and
out
pushf
dec
bound
sub
xor
inc
mov
sbb
lds
ret
add
sub
ret
and
push
out
movs
xchg
sbb
shl
pop
fstp
nop
ret
xor
pop
call
cld
and
jmp
pushw
pop
jmp
pop
cli
(bad)
jle
stos
xchg
xchg
(bad)
mov
fwait
jmp
push
in
js
shl
(bad)
mov
dec
jo
aas
scas
ror
imul
outs
mov
sbb
je
inc
mov
mov
jl
in
out
pop
cmp
cwde
aas
add
pop
test
cdq
mov
and
push
add
in
mov
int
ins
xor
mov
loope
xor
mov
das
mov
or
das
add
out
dec
call
xchg
sub
adc
push
bound
mov
mov
(bad)
jb
imul
mov
(bad)
lods
mov
cdq
adc
shr
mov
imul
inc
sub
mov
imul
js
mov
dec
or
les
retf
dec
mov
arpl
xor
outs
add
or
sub
loop
jne
enter
adc
mov
arpl
add
adc
arpl
hlt
rcl
cmp
push
xlat
jecxz
retf
stc
or
call
test
lahf
les
inc
jp
cwde
cdq
push
retf
push
in
movs
mov
aas
sbb
lods
jge
and
movs
xor
cmp
mov
sub
push
shl
xor
add
rcl
(bad)
jae
xchg
jnp
hlt
sub
out
pop
data16
aas
sub
out
inc
and
shr
mov
cmps
mov
cld
inc
cmp
loopne
pop
es
sub
imul
stc
loope
and
es
aas
cmc
js
out
push
jp
or
push
aad
(bad)
adc
test
cmps
rcr
(bad)
ror
add
jle
dec
ja
xchg
mov
dec
rcr
jg
push
cmps
out
iret
mov
sbb
jg
cmps
add
inc
cmp
inc
out
jno
movs
jmp
retf
mov
test
push
mov
pop
sti
mov
jne
aam
in
nop
test
(bad)
mov
add
or
ins
push
mov
ss
xor
inc
daa
xchg
xor
jl
sub
cmp
jmp
mov
mov
clc
cmp
xchg
dec
call
add
lds
sbb
mov
retf
mov
jle
mov
pop
push
imul
jno
push
test
pop
pushf
xor
ja
fs
(bad)
(bad)
and
add
push
popf
hlt
shl
mov
adc
mov
inc
sbb
aas
mov
mov
pop
sar
data16
push
test
int
inc
test
aad
popa
hlt
and
test
sbb
and
jmp
pushw
mov
je
mul
mov
pop
jle
shl
mov
mov
fcom
daa
xor
dec
arpl
push
pop
push
fidiv
xor
ja
int
jb
into
or
xchg
adc
out
or
fcom
daa
add
push
aas
push
aas
pusha
(bad)
adc
int3
pop
mov
cmps
xor
repz
pusha
sti
xchg
aas
mov
mov
imul
aam
int3
aas
pop
std
sbb
cwde
outs
das
push
dec
icebp
jmp
dec
loopne
mov
inc
xor
inc
push
and
lds
xchg
retf
push
mov
jb
add
or
lock
or
pop
push
dec
jne
jmp
inc
imul
rcl
dec
bound
mov
fsubr
dec
loopne
dec
sbb
push
mov
stos
cmps
cli
stc
ins
ficomp
add
stos
test
outs
aas
movs
sbb
mov
not
call
mov
mov
out
adc
jmp
xor
in
add
test
add
stos
idiv
xchg
fimul
dec
and
cmp
inc
(bad)
mov
mov
push
adc
retf
in
(bad)
(bad)
xor
call
stos
inc
push
mov
cld
add
mov
cli
add
in
add
mov
outs
adc
ret
pusha
test
sbb
and
mov
mov
inc
adc
enter
xchg
sbb
push
not
inc
leave
int3
adc
repnz
dec
cli
jno
rcl
sub
push
(bad)
xchg
or
imul
mov
(bad)
imul
idiv
push
adc
daa
aad
stc
adc
sbb
mov
test
popf
push
shl
cmp
adc
fidivr
jb
ins
test
push
or
jne
inc
push
xchg
or
cld
dec
in
sub
sar
mov
push
imul
and
sti
(bad)
call
jno
pshufw
mov
jb
sbb
and
mov
jae
dec
in
xchg
xchg
jle
or
test
lds
mov
stos
push
inc
xor
mov
test
mov
je
cmp
dec
and
fs
jbe
dec
or
rcr
add
xchg
inc
pop
out
push
jp
(bad)
mov
retf
lock
jnp
icebp
ret
jecxz
out
popf
fistp
xchg
mov
xchg
std
and
add
pop
out
or
hlt
nop
jo
push
cmp
mov
jo
aas
dec
jns
pushf
out
mov
push
adc
lea
xchg
push
rol
mov
fwait
test
and
adc
add
dec
je
int
call
cli
or
imul
repz
mov
adc
or
cli
jg
or
xlat
sti
mov
push
xchg
jns
arpl
ss
sbb
mov
nop
fwait
xor
loop
out
push
or
mov
mov
scas
pop
cmps
sbb
push
iret
les
jecxz
mov
mov
rcr
pop
gs
test
enter
or
xchg
adc
mov
add
ror
test
movs
mov
mov
mov
test
xor
mov
outs
aaa
xchg
lock
imul
mov
or
sub
mov
jmp
pop
mov
fs
popa
das
out
cdq
cmp
(bad)
rcr
pop
fbld
push
dec
cmps
add
inc
sti
fdiv
inc
mov
ret
pop
dec
daa
pushf
(bad)
push
inc
adc
ror
adc
jg
cmp
jp
mov
push
aad
popf
ss
lock
inc
rol
xor
jbe
lods
and
in
call
in
dec
retf
cmp
std
mov
push
xchg
mov
sub
lea
or
jl
(bad)
jmp
cmp
test
int3
loopne
mov
je
add
add
outs
pusha
add
add
jl
cli
xchg
and
cli
ss
push
cmc
aam
jg
pop
cmps
push
out
pop
lods
in
jns
test
nop
(bad)
fwait
pop
das
cli
popf
dec
inc
retf
add
rcr
pop
and
jmp
cmp
mov
shr
dec
retf
xchg
out
dec
pop
(bad)
fldlg2
pop
(bad)
js
mov
and
shr
mov
sub
jne
mov
inc
shr
mov
push
scas
jmp
adc
push
test
leave
fwait
cmp
push
les
mov
je
dec
cmp
int
icebp
or
lea
jg
movs
xchg
scas
std
dec
xor
loope
cmps
and
adc
inc
lahf
sbb
adc
xchg
pop
inc
repz
and
mov
cwde
mov
dec
add
cmp
push
sbb
and
jns
mov
sub
lar
repz
imul
jbe
push
mov
fs
arpl
js
sub
pop
repz
inc
es
xchg
xchg
mov
push
inc
pop
push
sbb
aad
push
rcr
push
xor
out
stos
fnstenv
mov
xor
xchg
jne
ja
in
sahf
rcl
inc
or
mov
(bad)
call
or
push
lds
and
(bad)
(bad)
mov
outs
ret
mov
xchg
mov
ins
in
stos
imul
aas
lds
es
mov
(bad)
pop
mov
mov
test
int
jecxz
mov
in
repz
div
cmps
std
in
repnz
(bad)
ins
mov
cmp
std
enter
push
sub
sahf
(bad)
shr
mov
adc
mov
mov
push
push
jo
inc
imul
ins
add
movs
adc
sar
pushf
push
sbb
jmp
inc
cld
jns
in
push
add
xor
fmul
and
out
jg
enter
xchg
scas
cmp
lds
test
xor
xlat
cld
xchg
pop
out
mov
cmp
loopne
inc
dec
and
sar
cld
jp
and
pop
les
and
fwait
push
add
push
mov
lock
sub
stos
mov
mov
fiadd
mov
mov
fwait
or
mov
mov
xor
jl
dec
or
sbb
lods
jb
push
adc
xchg
and
push
cmps
sbb
mov
adc
ror
sbb
pop
mov
popf
fistp
push
sub
shl
xor
mov
xor
scas
jmp
or
or
sar
imul
jle
pop
push
jne
mov
out
mov
sub
aaa
dec
(bad)
jecxz
pop
mov
mov
into
fisubr
push
mov
push
push
mov
popa
test
test
jbe
sbb
ins
loopne
mov
(bad)
adc
movs
cs
(bad)
or
inc
cwde
mov
xor
into
xlat
adc
adc
fwait
inc
test
jns
mov
dec
aad
lea
mov
pop
cmps
push
addr16
sbb
(bad)
cwde
jnp
push
add
xchg
repnz
mov
mov
sbb
sahf
(bad)
jmp
and
lods
cmp
(bad)
cmp
push
(bad)
js
pop
ins
pop
push
popa
add
xchg
mov
hlt
out
in
push
out
xor
jl
test
pop
jge
pop
out
jp
test
cwde
js
mov
call
nop
fisub
ja
pop
adc
mov
mov
mov
mov
arpl
cmps
je
pop
add
jb
cmp
icebp
push
push
into
jns
(bad)
xchg
sbb
or
adc
sbb
shr
movs
jecxz
pusha
sub
cmp
add
lahf
je
add
push
cmc
and
dec
popa
inc
ds
shr
mov
iret
xor
push
arpl
jb
xchg
popa
xchg
clc
aam
or
(bad)
pop
iret
xchg
xchg
pop
ficomp
aaa
mov
jno
repnz
mov
addr16
daa
les
jmp
rol
pop
dec
mov
add
xchg
and
xchg
or
int3
mov
mov
test
mov
or
jno
pop
mov
test
push
and
mov
xchg
cmp
retf
sub
sub
js
aas
ror
popa
clc
xor
pop
in
mov
push
pop
clc
dec
cmp
mov
aam
sub
mov
mov
xor
cmp
push
xchg
(bad)
push
mov
inc
enter
daa
and
data16
fist
xchg
pop
(bad)
xor
mov
imul
push
or
loope
in
inc
and
push
mov
ins
cmc
js
in
push
inc
adc
in
rcl
jno
out
icebp
jbe
pusha
scas
xlat
test
outs
repnz
int3
xchg
or
mov
xchg
icebp
sbb
xlat
call
sub
cmp
in
jo
shr
dec
ins
dec
cmp
(bad)
loope
in
popf
aas
mov
add
xchg
test
add
mov
les
ins
loope
neg
jbe
push
jl
cs
mov
mov
in
in
mov
dec
jmp
inc
sbb
xor
aaa
and
enter
mov
retf
hlt
jnp
cld
adc
push
loope
sbb
ins
(bad)
mov
call
mov
fcom
fdivr
outs
mov
inc
test
or
pop
mov
pop
xchg
in
push
inc
ja
jl
xor
fisub
dec
popa
or
fwait
shr
cmp
mov
sti
jnp
popa
inc
inc
sbb
or
xor
xor
mov
ds
cmp
add
jae
imul
dec
in
fisttp
mov
cdq
mov
pop
scas
inc
mov
ret
(bad)
retf
cmp
nop
fwait
add
loopne
push
scas
js
fmul
ror
add
cmp
add
mov
cmps
add
sub
mov
loopne
add
test
cmp
mov
fwait
scas
js
or
xor
imul
push
xchg
arpl
pop
cmp
jle
mov
pop
movs
mov
ins
test
add
and
xchg
lea
fisubr
inc
or
sub
iret
push
adc
test
stc
jo
mov
cld
fwait
(bad)
out
xor
add
push
rcr
or
(bad)
into
push
dec
(bad)
pop
aad
dec
loopne
fld
fisttp
dec
mov
inc
fild
and
sub
cmc
loopne
add
dec
aad
adc
cmp
pop
(bad)
addr16
cmp
xchg
js
and
xlat
and
and
jl
mov
add
movs
inc
mov
int
cld
ins
inc
sub
xchg
xor
mov
inc
mov
xor
push
pop
jge
inc
clc
pop
jmp
(bad)
mov
es
lods
lahf
mov
inc
dec
mov
mov
fbld
test
push
imul
js
inc
loope
push
pop
repz
push
icebp
jmp
out
stc
outs
sar
rcr
xor
push
cmp
sahf
in
push
mov
pop
into
pop
xchg
out
aas
pop
mov
push
int3
and
xor
dec
cdq
push
call
pusha
mov
jbe
and
(bad)
and
movs
sub
mul
movs
lods
sub
pushf
jg
lea
sbb
sub
pushf
inc
mov
push
mov
call
xor
mov
das
and
rcr
dec
fsubp
aaa
fisttp
push
sub
dec
or
xlat
dec
dec
jp
out
cmp
(bad)
pop
add
dec
and
mov
xchg
imul
push
and
lods
fnsave
in
push
jge
sbb
mov
adc
push
pop
jo
ret
fdivr
mov
and
jmp
imul
mov
lock
lea
pop
sbb
ja
(bad)
or
icebp
sub
les
or
fidivr
pop
xor
fdiv
mov
mov
ret
mov
fwait
mov
inc
into
aas
pop
mov
jmp
retf
test
sub
into
dec
and
adc
sub
jnp
in
xchg
fcmovnb
aas
daa
cmp
add
stos
lods
fild
cmc
or
into
xchg
pop
dec
push
call
mov
aam
dec
call
fmul
mov
hlt
dec
jb
stc
adc
mov
imul
fwait
xor
retf
mov
sub
add
cdq
sub
pop
sub
xor
jl
adc
and
adc
sbb
call
ud0
cwde
lods
jl
enter
ins
inc
adc
xor
and
jmp
inc
jnp
enter
jne
mov
fldcw
jns
(bad)
out
and
xor
(bad)
call
add
imul
test
in
mov
inc
xor
or
xchg
jecxz
add
or
push
mov
push
fstp
(bad)
push
test
sbb
xor
ja
xor
pusha
mov
mov
shl
pop
pop
es
stos
and
lea
jae
fdiv
sbb
popf
jmp
xor
clc
sahf
jp
inc
test
in
ins
mov
inc
data16
push
xchg
js
stos
add
stos
or
jg
int
stos
jbe
fisttp
stos
rcr
add
sub
lods
dec
(bad)
push
int3
imul
lock
pop
mov
outs
(bad)
test
int
imul
fisttp
in
out
ins
adc
inc
mov
xchg
add
loop
add
push
sub
in
rol
dec
aad
cdq
xchg
and
and
cwde
vmread
inc
std
adc
cmc
push
leave
dec
inc
cmp
sti
push
clc
cmps
lods
push
jnp
xlat
dec
ret
adc
push
js
xor
sbb
xchg
js
mov
int
adc
push
loop
fld
into
jp
cmps
jge
lds
dec
xor
mov
sbb
dec
ja
or
dec
push
cmp
rcr
push
neg
call
pop
xor
jmp
adc
sbb
dec
popa
pop
or
ja
pop
add
mov
lods
or
in
scas
push
xor
mov
and
xor
aas
sbb
or
(bad)
test
mov
or
add
js
and
(bad)
push
pop
mov
sbb
xchg
int3
jnp
push
nop
cmps
inc
mov
xchg
jno
jl
push
in
mov
push
fwait
mov
fild
sub
mov
pop
scas
iret
ficom
and
sahf
push
cmp
dec
add
pop
je
out
in
mov
int
in
mov
xchg
movs
push
mov
mov
aad
jno
sub
xor
pop
mov
jl
cmp
std
aas
lds
dec
dec
gs
adc
or
leave
leave
pop
in
fisttp
out
shl
sti
or
xor
movs
xchg
lods
xor
js
and
mov
je
sbb
push
ror
xor
mov
arpl
rol
scas
xchg
fimul
or
and
(bad)
and
push
adc
jecxz
pop
adc
sbb
xor
mov
test
push
mov
push
adc
xchg
mov
or
in
in
(bad)
ds
pop
mov
out
mov
ret
es
sti
mov
and
dec
cdq
loope
jne
fisubr
popa
xor
jns
pop
test
cdq
mov
dec
mov
call
(bad)
push
mov
jge
mov
xlat
data16
gs
pop
movs
imul
movlps
pop
inc
arpl
cdq
xor
adc
push
xchg
fs
ds
inc
aad
cmp
rcr
popa
inc
lods
(bad)
add
ret
adc
push
jnp
fwait
cmc
pop
inc
scas
pop
or
pushf
inc
in
add
les
pop
pushf
pop
rcr
test
inc
cmp
(bad)
fisttp
shr
pusha
mov
add
cmp
xlat
inc
out
and
mov
dec
push
ror
sub
dec
add
rcl
cli
ret
and
hlt
pop
jmp
(bad)
cmp
stos
leave
int
sub
jg
pop
rcl
and
std
inc
clc
push
pop
call
je
fwait
iret
sbb
lods
mov
dec
mov
pop
xlat
rcr
xchg
mov
ins
pop
pop
hlt
dec
and
data16
loope
adc
imul
arpl
pop
lds
sbb
inc
cmp
sub
xor
or
sahf
xchg
call
loopne
jmp
sbb
cmc
fstp
loope
mov
add
inc
loope
xlat
sbb
add
cmp
call
xchg
xor
fwait
push
mov
or
movs
adc
je
adc
and
das
fyl2x
pop
sti
data16
into
inc
pusha
(bad)
loope
retf
mov
mov
pop
inc
ret
call
dec
add
(bad)
cmp
push
add
push
add
adc
mov
pushf
ret
cs
dec
inc
dec
in
cmp
mov
push
pop
ret
dec
outs
pop
pop
mov
mov
jne
mov
inc
enter
pop
loope
imul
push
add
ja
adc
jp
mov
cmp
std
clc
jbe
dec
dec
cmp
cdq
das
rcr
(bad)
daa
test
pop
mov
sahf
dec
mov
mov
sbb
mov
ja
jg
mov
imul
(bad)
jecxz
and
ds
cld
inc
lock
mov
mov
ss
mov
in
xor
or
pop
in
es
sbb
adc
in
test
clc
add
shl
or
imul
shl
or
fnstcw
sub
out
in
repnz
inc
jmp
je
mov
stos
mov
push
or
(bad)
rol
fs
sbb
fnstenv
iret
ret
pop
test
push
scas
cli
add
aad
idiv
xchg
jmp
inc
pop
pop
mov
jne
in
out
ins
aad
mov
push
rol
(bad)
jne
and
ret
add
mov
ret
jb
test
inc
jno
mov
lods
mov
sub
out
arpl
ds
lahf
and
ja
imul
adc
cmp
and
sbb
and
cmp
add
(bad)
jns
adc
adc
pop
out
test
sbb
xlat
xor
sub
and
sub
jecxz
fwait
xchg
ins
jle
jle
fld
mov
or
stos
jl
mov
fidivr
in
ret
xchg
inc
rcl
neg
pushf
jbe
push
in
cs
hlt
add
mov
pop
fsub
ret
(bad)
pop
push
cmp
push
daa
mov
iret
test
lahf
arpl
sbb
mov
or
movs
cmp
fwait
and
sub
push
cmp
mov
xor
mov
adc
pop
popa
add
popf
std
dec
inc
test
mov
pop
xchg
inc
mov
dec
not
mov
retf
in
mov
sub
mov
dec
test
test
inc
mov
shr
mov
fisttp
cdq
mov
sbb
dec
mov
cmp
and
(bad)
aaa
in
call
dec
xchg
aaa
push
lock
fxtract
(bad)
adc
push
add
fidiv
test
call
mov
loopne
arpl
sub
std
jecxz
nop
frstor
test
mov
or
test
sbb
or
xor
push
adc
and
cdq
(bad)
sbb
repz
mov
cmp
rol
movs
jns
sub
loopne
ficomp
fdiv
and
and
in
popa
rol
out
bound
sub
push
add
cmp
fistp
mov
or
movs
jbe
aad
or
lahf
adc
mov
pop
not
xchg
addr16
push
js
push
xor
in
inc
out
jecxz
dec
and
adc
test
in
add
and
shl
cmp
or
sub
cmp
gs
dec
not
shr
sub
jb
jg
fwait
inc
xlat
popf
mov
sbb
ret
adc
or
push
gs
and
mov
mov
in
shl
mov
inc
sub
pop
imul
mul
cmp
sbb
test
push
adc
cwde
movs
in
dec
sbb
rol
mov
xor
cmp
adc
call
aas
jmp
lods
in
repz
mov
aam
push
and
lahf
fmul
push
xlat
mov
inc
iret
mov
add
xor
push
push
loop
ss
bound
icebp
push
shl
les
jne
(bad)
mov
push
hlt
inc
mov
and
stos
push
(bad)
mov
sbb
jle
xchg
mov
sbb
bound
push
jo
dec
movs
inc
mov
popa
popa
call
dec
push
scas
rcr
mov
xor
cmps
adc
jbe
das
inc
aad
cli
mov
fstp
cli
jnp
cmp
push
push
push
sbb
dec
mov
(bad)
jmp
or
push
jbe
lock
cli
or
push
lds
fcom
pushf
sub
jmp
mov
or
or
mov
xchg
fild
sub
out
iret
adc
xor
inc
iret
push
or
mov
mov
jmp
adc
or
inc
call
cmp
and
stc
mov
sahf
jns
push
cli
ret
cld
inc
mov
mov
das
sub
or
dec
js
cli
and
or
jo
lea
mov
ss
jmp
imul
dec
inc
sub
push
lea
into
call
js
mov
xchg
stos
inc
fbld
mov
mov
loop
xchg
mov
jnp
cmp
(bad)
xchg
push
mov
push
jecxz
xchg
inc
adc
inc
push
adc
fstp
jge
movs
inc
xchg
mov
and
outs
fsubr
cmps
(bad)
ja
and
xchg
xchg
cmps
add
or
add
sub
stos
nop
jecxz
mov
mov
lods
pop
cdq
mov
dec
mov
add
div
sub
cmp
mov
cdq
push
sbb
xchg
pop
mov
jmp
mov
test
dec
pushf
psadbw
mov
les
loopne
cwde
jae
mov
xlat
xchg
lods
jmp
mov
sub
sbb
inc
mov
adc
daa
sbb
jo
aam
out
adc
in
ret
data16
popf
fiadd
xchg
test
fcmove
push
out
mov
add
inc
lods
popa
rcl
mov
(bad)
ds
adc
cmp
mov
call
jno
push
int
mov
std
pushf
ds
out
lods
inc
sbb
sbb
pop
out
jle
mov
jno
std
(bad)
cmp
and
xor
pushf
sub
loopne
xchg
mov
mov
fcomp
fwait
add
add
xor
lods
jbe
push
pusha
push
xchg
add
(bad)
cmp
pushf
call
dec
cs
and
xchg
in
fisttp
(bad)
shl
add
outs
rcl
sub
adc
push
inc
push
sub
int
xor
in
push
fisttp
sbb
jle
mov
sahf
adc
les
clc
pop
sbb
test
mov
mov
(bad)
sahf
in
xlat
cld
inc
adc
cmp
jns
mov
adc
push
lahf
mov
into
jns
popa
es
or
dec
(bad)
popf
movs
call
fsubr
mov
ficomp
test
inc
push
in
test
mov
jno
popa
and
or
movs
xor
ret
ds
xor
arpl
fcmove
movs
xor
bound
sub
adc
lods
cdq
lods
inc
xlat
mov
pop
loope
inc
(bad)
and
aam
mov
and
xchg
dec
mov
ja
add
ror
xchg
call
imul
jo
jb
cli
xchg
pop
sar
in
mov
retf
sub
or
pop
call
or
stos
imul
lods
inc
sbb
in
(bad)
jne
or
inc
cdq
sub
xchg
pop
cli
in
popa
pusha
adc
mov
or
xlat
shr
push
inc
jp
and
and
cli
pop
dec
das
push
test
std
jbe
jbe
inc
not
mov
cdq
or
mov
adc
sbb
fsubr
loopne
xor
and
addr16
inc
cmp
jno
fdivp
cmp
xor
or
add
mov
clc
out
cmp
sub
or
mov
or
ins
dec
mov
(bad)
scas
iret
cmp
xor
cmp
test
loop
arpl
pop
call
sub
es
or
mov
mov
push
xchg
cmp
call
sub
jp
or
adc
les
inc
(bad)
outs
in
xor
push
and
lock
mov
add
shl
xchg
inc
xchg
sbb
mov
std
jecxz
(bad)
test
xchg
cmp
mov
mov
adc
jmp
sub
xor
dec
inc
mov
outs
xor
xchg
pop
dec
ins
mov
push
pop
gs
jae
mov
pop
and
inc
or
mov
scas
jge
movs
push
jecxz
addr16
mov
mov
mov
xor
cwde
(bad)
leave
and
int3
dec
add
xchg
iret
and
pop
stos
out
push
scas
push
add
js
pop
enter
jno
mov
out
add
jp
cmps
jge
mov
or
(bad)
inc
cmps
retf
mov
into
pop
cmp
stc
pop
call
test
adc
call
xchg
mov
mov
add
fs
test
rcl
fs
dec
jmp
dec
das
in
cmp
jmp
fisubr
icebp
xor
hlt
(bad)
outs
(bad)
cld
inc
and
mov
mov
xchg
loopne
dec
cmp
mov
adc
movs
mov
jb
jnp
fwait
or
bound
shl
in
shl
inc
lahf
iret
fistp
add
ins
lds
nop
xchg
out
aad
cdq
or
xor
sbb
inc
enter
mov
xchg
push
mov
adc
sub
enter
xchg
mov
lock
ins
dec
push
loopne
xchg
push
inc
or
or
sub
xor
inc
stc
adc
jns
rcl
add
xchg
scas
pop
pop
or
pop
lock
and
adc
pop
in
(bad)
jb
dec
pop
adc
xor
sub
add
pop
les
rcl
in
add
or
pop
mov
xchg
push
add
adc
icebp
(bad)
test
and
cld
je
iret
xor
clc
push
push
icebp
mov
mov
cld
jns
dec
shl
sbb
push
inc
xchg
jns
adc
mov
addr16
fsubrp
xchg
stos
in
mov
in
addr16
pop
jns
cmp
add
xchg
rol
outs
xchg
xor
das
inc
xchg
popf
add
xor
icebp
dec
(bad)
sti
(bad)
loope
sbb
sbb
cmps
adc
mov
mov
in
fnstsw
sbb
cmps
push
push
adc
sbb
jge
inc
push
inc
dec
jne
sub
lea
mov
jge
es
and
jns
fisttp
aaa
pop
lods
je
icebp
jecxz
mov
dec
inc
add
lea
pushf
jb
movs
and
jp
xchg
sbb
mov
out
retf
dec
int
in
mov
repnz
add
or
inc
or
jbe
ja
(bad)
xor
shl
imul
aam
cmp
mov
mov
shl
cmps
shr
fadd
mov
dec
shr
mov
and
xor
(bad)
stos
mov
mov
xchg
jecxz
int
cmps
sbb
mov
xor
mov
mov
jnp
mov
mov
(bad)
and
or
movs
shl
or
sti
add
lahf
mov
mov
dec
pushf
push
and
cld
dec
xlat
and
push
push
add
sbb
push
mov
retfw
hlt
je
mov
addr16
adc
and
jnp
xchg
fcmovnu
and
cmp
adc
je
in
xor
xchg
mov
sub
jno
cmp
jb
xchg
xchg
sahf
test
call
js
inc
neg
fs
test
jecxz
or
aaa
pop
push
fwait
xchg
popf
push
dec
test
mov
cwde
dec
loop
call
cmp
ss
mov
aas
inc
adc
sbb
(bad)
push
adc
sbb
inc
cmp
call
out
sbb
adc
jmp
scas
lds
je
add
jge
movs
pop
inc
lods
enter
adc
xor
jecxz
cmp
xor
imul
mov
adc
fist
jg
lock
shl
xchg
mov
fist
ds
pop
aad
jg
mov
(bad)
iret
or
les
add
xchg
jnp
sti
mov
fucomi
xor
push
lahf
int
icebp
(bad)
div
mov
mov
iret
imul
mov
pop
jno
jmp
je
int3
pop
adc
ds
xchg
loope
ja
jle
add
push
or
inc
pop
jle
mov
xchg
icebp
loop
xor
sbb
arpl
sbb
jo
stos
jp
jp
pop
mov
mov
sub
aad
push
or
xchg
push
xchg
cli
stos
and
mov
push
call
cmp
pop
push
movs
fistp
dec
or
fwait
push
push
pop
mov
push
push
inc
movs
xor
push
gs
mov
mov
and
mov
xchg
sbb
xchg
pop
jnp
pop
out
sub
bound
jb
call
(bad)
push
push
sbb
and
mov
xchg
dec
out
jnp
cmp
nop
inc
mov
push
dec
or
pop
mov
bound
repz
clc
dec
sbb
jp
sahf
mov
dec
movs
push
pushf
aaa
sbb
(bad)
pop
push
scas
stos
stos
nop
sub
xchg
inc
dec
in
cmp
cwde
add
jg
sub
xchg
fidiv
in
dec
(bad)
jl
sbb
xor
(bad)
jle
daa
push
pusha
cdq
jmp
inc
and
pop
sar
imul
sub
iret
dec
push
pop
push
sti
cli
sub
dec
into
call
sub
and
sbb
sub
pushf
inc
fimul
ret
(bad)
daa
sub
inc
lds
repz
cmps
xchg
jg
xchg
shl
sub
or
inc
cmp
mov
or
sub
push
mov
jecxz
cld
pop
out
cmp
cmp
or
rcr
das
and
cmp
jp
mov
(bad)
daa
cmp
push
adc
or
jg
xchg
jmp
push
jp
(bad)
inc
cwde
jb
sub
pushf
loopne
pushf
xor
sub
in
jge
outs
or
fistp
fwait
or
(bad)
cmc
sbb
xor
in
mov
lods
sbb
dec
jge
retf
pop
sub
mov
adc
xor
nop
test
jecxz
adc
out
xchg
xchg
retf
or
push
mov
cmp
pushf
arpl
sub
and
add
pop
mov
mov
popa
ins
sbb
fimul
xchg
xchg
addr16
adc
shl
mov
dec
es
jecxz
arpl
fistp
call
inc
mov
mov
lods
xor
dec
cs
push
cmp
xor
icebp
shl
xchg
ror
mov
arpl
cmps
aad
cld
mov
sti
frstor
or
sbb
sbb
adc
pop
call
sbb
mov
push
mov
in
imul
jbe
pop
jp
push
and
pop
call
dec
mov
ss
in
pop
sub
gs
mov
arpl
nop
sub
push
and
nop
es
push
dec
rcr
call
push
cmp
lds
imul
pop
mov
pop
adc
push
mov
adc
or
sbb
rcl
pop
sahf
mov
enter
test
div
mov
bound
sub
in
mov
xlat
sbb
icebp
(bad)
in
push
mov
and
mov
ds
inc
jb
xchg
mov
out
(bad)
test
movs
out
cmp
pop
das
test
mov
jge
adc
and
rcr
cmp
aas
mov
repz
push
or
mov
lock
cmps
aam
pop
or
cmp
frstor
mov
pop
xlat
shr
xchg
cmp
mov
loope
add
pop
fst
retf
std
mov
mov
cli
adc
(bad)
mov
push
sub
je
and
jno
iret
cli
mov
dec
cmps
cmp
add
cmps
or
lods
jmp
sbb
pop
iret
retf
xor
mov
in
int
sub
adc
sbb
clc
ja
mov
cmc
outs
dec
loope
jo
xor
pop
and
mov
fisubr
cmp
dec
addr16
stos
sub
push
pop
sbb
dec
stos
push
mov
call
inc
jae
loopne
pop
aaa
sbb
(bad)
cmp
ror
mov
mov
vpsadbw
or
jecxz
(bad)
inc
sbb
dec
push
lea
in
sbb
mov
pop
cmp
int3
adc
xlat
push
xchg
inc
inc
mov
xchg
dec
cdq
mov
fs
enter
loop
mov
(bad)
jb
mov
jno
sub
jb
pop
jbe
and
add
int
push
frstor
mov
shl
xchg
shl
mov
test
test
fisubr
aad
int3
outs
pop
xchg
data16
pop
and
popa
cdq
inc
push
push
push
test
push
push
cmc
fsubp
lds
jmp
inc
(bad)
stc
outs
dec
adc
add
aas
cmps
cdq
sbb
push
jns
fdivr
pop
imul
mov
fild
ret
test
xor
iret
fidivr
sbb
and
xchg
jge
adc
lahf
adc
add
and
dec
sbb
sbb
dec
movs
mov
daa
push
jne
aas
cs
pop
ins
test
sbb
pop
push
cmp
sub
and
mov
cli
xchg
xchg
stc
push
and
test
out
(bad)
int3
lock
xor
xchg
fadd
push
aas
idiv
push
ret
test
loopne
push
jge
sar
pushf
(bad)
(bad)
jmp
popf
xor
ins
dec
push
mov
push
push
cmp
add
pop
and
pop
dec
test
out
inc
jle
jo
dec
(bad)
(bad)
in
aad
fwait
inc
int
push
shr
aam
fwait
imul
mov
data16
mov
mov
fmul
push
daa
arpl
inc
mov
xchg
mov
push
sub
inc
mov
cmp
sbb
in
pop
mov
(bad)
lds
push
add
jo
jnp
es
(bad)
shl
jg
cmps
test
shl
ret
mov
cmp
enter
int
push
ret
not
mov
retf
xchg
aam
jmp
pandn
add
push
dec
sub
in
jae
adc
leave
add
ficomp
js
sbb
bound
scas
jmp
call
jbe
mov
xlat
mov
pop
cmp
lods
es
jl
pop
fnstenv
xchg
xchg
sub
into
jnp
test
sbb
push
ss
mov
and
js
push
ins
jl
pop
xor
push
(bad)
pop
out
aas
and
popa
cmc
and
jo
dec
dec
push
(bad)
or
retf
nop
add
xor
(bad)
loop
push
sar
movs
mov
dec
das
cmp
add
sar
loop
jbe
inc
sar
inc
sahf
mov
cdq
jecxz
hlt
or
mov
fwait
and
xor
ret
mov
add
adc
in
cli
mov
mov
pop
add
enter
jge
sbb
mov
xchg
int3
pop
push
pusha
adc
push
shr
dec
mov
scas
cwde
pop
popa
lds
gs
fwait
int3
addr16
xor
push
or
hlt
adc
xor
mov
mov
mov
dec
push
dec
cmc
bound
or
rcr
inc
mov
rcr
pusha
cld
mov
in
pop
add
lods
repz
xor
jge
test
in
outs
(bad)
neg
test
push
iret
nop
cmp
int3
out
push
dec
push
test
push
inc
arpl
enter
cld
cmp
rol
pop
adc
cmp
js
fist
sbb
call
test
inc
push
xor
fimul
hlt
cmc
(bad)
xchg
sub
cmps
inc
inc
adc
lods
sar
or
mov
bound
push
sbb
mov
and
mov
jl
mov
jmp
repz
xchg
cwde
ret
xchg
mov
scas
cmp
data16
adc
mov
jo
mov
mov
int3
sub
mov
sub
int3
(bad)
out
sahf
mov
and
(bad)
fwait
daa
or
ffree
ret
cld
test
stc
mov
mov
rcl
hlt
cs
pop
les
jns
arpl
stos
mov
stos
scas
cmps
mov
jbe
into
lock
enter
out
and
std
lods
jl
mov
out
add
jae
fcom
cwde
cmp
mov
cmp
inc
and
pop
inc
jo
repnz
and
sub
jecxz
cli
sahf
ja
mov
mov
in
int3
sub
retf
retf
sub
pop
and
pop
xor
xchg
pop
push
rcl
pop
dec
jp
cmps
icebp
xchg
pop
sbb
push
clc
xor
cmp
shl
ds
mov
or
fs
test
push
jno
popf
out
stos
mov
or
les
out
push
mov
test
push
jp
mov
pop
mov
sub
sub
dec
pushf
cmps
adc
loope
cmc
test
mov
lods
gs
mov
nop
xchg
and
push
jns
lds
fiadd
push
ret
xchg
test
add
xchg
xchg
add
or
inc
(bad)
jnp
icebp
lods
ficomp
(bad)
ficomp
push
jnp
sbb
mov
lods
sbb
icebp
push
mov
not
test
jp
jae
jge
push
mov
adc
ins
stos
pushf
dec
mov
in
dec
ds
push
ror
inc
pop
ja
cmp
mov
push
retf
rol
push
inc
mov
int3
mov
mov
mov
mov
pop
and
pop
add
shl
std
jmp
mov
fsubr
xchg
nop
xchg
or
(bad)
scas
jae
mov
jno
cmp
add
icebp
pop
inc
or
pop
sbb
out
inc
push
sbb
mov
hlt
jl
dec
sbb
jb
sbb
mov
int3
cmp
adc
cmp
inc
xor
cmp
int3
mov
rcl
retf
div
pop
sub
mov
xchg
int
call
fwait
add
lods
jmp
sub
mov
fldenv
rol
mov
rcl
and
sahf
xor
icebp
add
stc
pushf
je
sbb
fistp
mov
mov
mov
sub
ins
scas
jge
inc
mov
imul
adc
int3
xchg
inc
xchg
xchg
je
push
outs
in
sahf
popf
sbb
inc
cmp
mov
mov
in
aad
outs
ins
mov
dec
mov
push
out
jo
call
pushf
into
push
cwde
shr
dec
jb
push
adc
or
fcomp
cmp
bound
dec
sbb
out
enter
xchg
or
sbb
gs
cmps
test
gs
push
ss
fmul
or
inc
out
aas
movs
ja
fcomp
adc
xor
icebp
jle
cdq
or
(bad)
aas
mov
imul
adc
jmp
repz
cdq
push
gs
push
and
add
dec
mov
stos
ja
xor
into
lods
push
mov
scas
xor
dec
adc
in
outs
test
mov
fisub
movs
test
xor
xchg
lea
jb
mov
and
popa
je
push
lds
adc
lods
call
cmps
leave
imul
(bad)
fsubr
pop
dec
inc
fstp
push
cdq
ins
inc
ja
mov
or
(bad)
mov
xchg
lea
(bad)
imul
dec
in
cwde
jle
popa
movs
outs
mov
movs
push
cmp
jns
and
mov
daa
dec
int
add
test
mov
lock
lods
ret
sbb
or
jmp
sar
or
xor
imul
fmul
fucomi
test
sub
movs
sbb
scas
repnz
dec
xchg
mov
push
sbb
add
sub
inc
sbb
call
gs
div
push
pop
cs
arpl
jg
loopne
int3
jle
add
xchg
sbb
cs
shl
mov
jns
test
pop
and
sbb
xchg
out
popa
and
xor
push
inc
not
jbe
pop
loop
outs
rol
icebp
sub
xchg
push
mov
ret
test
push
pop
outs
inc
cwde
test
jnp
xchg
addr16
mov
push
aam
fild
mov
fstp
shl
push
call
sbb
test
cmc
lds
lods
jo
sbb
and
out
adc
jg
mov
cld
push
inc
cmp
(bad)
jecxz
nop
in
fistp
mov
adc
cmp
push
inc
pminub
xchg
and
cli
into
mov
and
or
(bad)
outs
nop
cmps
sub
sbb
xchg
imul
push
aam
out
add
xchg
fist
jo
in
sahf
cmp
or
mov
mov
hlt
mov
out
sbb
in
sbb
sar
cmp
sbb
sub
(bad)
out
popa
test
push
push
out
aas
xchg
mov
mov
movs
jne
sbb
cmp
pop
les
(bad)
push
(bad)
call
aaa
pop
mov
test
data16
dec
cmp
xlat
call
movs
sbb
inc
pop
inc
mov
xchg
rcr
int3
js
adc
mov
ins
fstp
rol
dec
das
or
sti
xchg
push
(bad)
xchg
jnp
dec
adc
scas
retf
push
pop
adc
jo
push
sub
out
imul
xor
stos
xchg
loopne
pop
hlt
test
stos
dec
xor
pop
lea
cmc
fidivr
push
mov
sti
(bad)
and
out
pop
aas
mov
inc
jnp
mov
push
and
pop
aaa
xchg
mov
inc
add
mov
mov
imul
fwait
fwait
xchg
ds
and
cmps
into
fidivr
(bad)
rcr
rcl
mov
repz
in
mov
xchg
shr
push
and
sub
rcl
retf
cmp
out
std
jle
xor
mov
cmp
mov
pushf
inc
jno
loopne
push
xor
leave
mov
inc
(bad)
mov
shr
call
pop
sub
push
inc
xor
push
(bad)
mov
add
add
aas
mov
mov
push
mov
mov
imul
out
pop
das
add
imul
push
push
stos
or
pop
inc
push
leave
je
imul
pop
jmp
sub
stos
pop
push
imul
cwde
cmp
loope
add
shr
push
mov
shr
shl
not
(bad)
jo
mov
cmp
push
dec
outs
push
scas
sbb
dec
inc
fisttp
retf
fist
out
sbb
pushf
sbb
push
es
mov
mov
fbstp
dec
mov
sbb
adc
int3
fcmovnu
fst
inc
mov
aas
leave
jae
test
xor
or
movs
push
gs
(bad)
mov
fdivrp
pop
mov
inc
cmc
sbb
mov
xor
mov
xchg
add
mov
inc
loopne
or
outs
aam
out
sbb
aas
pop
ss
mov
or
inc
cmp
mov
int
test
call
call
imul
stc
rol
sub
scas
jbe
pushf
cmp
pop
mov
popa
nop
dec
repz
cmps
sub
mov
in
scas
mov
push
add
push
fwait
xchg
bound
sub
dec
sti
sbb
xchg
lods
fild
int3
jecxz
shl
data16
inc
or
std
push
jecxz
mov
repnz
or
(bad)
xchg
or
pop
ins
scas
jp
push
jno
call
pop
popf
nop
pop
sub
arpl
aas
sub
in
mov
(bad)
int
jno
jb
add
add
ret
cwde
jle
gs
or
sahf
bound
sub
push
xchg
pop
fwait
(bad)
fcomp
pop
and
inc
daa
sub
call
cld
mov
xor
jnp
mov
loope
add
mov
xchg
mov
xchg
lods
sub
fcom
push
inc
outs
add
out
and
ret
sub
(bad)
mov
ja
loope
arpl
aas
add
in
xor
push
and
or
xlat
ds
int
lds
aam
push
push
lahf
add
stc
shr
mov
sub
xor
imul
pop
jl
sti
call
lahf
shl
fwait
add
mov
add
movs
into
aas
mov
repnz
push
or
popa
jmp
in
pushf
fbld
inc
ficom
pusha
out
and
int3
sub
cwde
jmp
shr
jns
dec
js
ud0
jle
cmp
stos
cmp
mov
xor
sub
jl
shr
pop
ins
pop
fcmovne
adc
jne
adc
adc
repz
jb
dec
mov
jmp
iret
outs
retf
test
in
mov
push
pop
mov
rcl
lock
mov
inc
mov
pop
jns
dec
pop
xor
call
stos
sbb
in
cmp
cs
fld
sbb
int
jl
paddw
nop
cmc
ficomp
dec
mov
out
jl
call
adc
aad
sub
mov
call
(bad)
cmps
es
pop
dec
mov
dec
push
cmp
add
dec
(bad)
movs
pop
mov
mov
jp
xchg
pop
in
rcr
ds
jbe
jne
lods
mov
into
mov
rol
push
aaa
aas
movs
out
rcl
dec
lds
addr16
leave
fnstenv
imul
mov
int3
jnp
mov
in
push
mov
dec
scas
add
push
int3
ja
iret
or
mov
sub
addr16
jmp
fucomp
in
jmp
pusha
mov
es
cmp
xchg
inc
xor
retf
push
mov
add
clc
mov
fidiv
stos
jl
adc
dec
mov
retf
jg
jl
push
mov
inc
(bad)
jmp
dec
std
ss
push
imul
jle
pop
leave
out
scas
repnz
mov
fs
fnstsw
dec
ret
jecxz
mov
push
ins
sub
sbb
cmps
push
loop
mov
xchg
push
dec
mov
inc
inc
outs
jbe
mov
cmp
aas
movs
ja
gs
mov
outs
popf
cs
pop
or
xor
cmps
(bad)
sbb
rcl
fiadd
fwait
mov
mov
cmp
les
pop
cmp
xor
(bad)
push
push
jns
add
cs
sbb
je
sub
fcmovnu
add
pop
test
clc
xor
test
aas
or
popa
jo
out
nop
pop
rcr
shr
ret
sbb
jmp
cwde
or
adc
mov
xchg
int
je
jb
and
cmp
inc
enter
sbb
xchg
inc
fstp
shl
pop
mov
popa
or
add
mov
jg
int
mov
xchg
mov
dec
addr16
adc
aam
lea
outs
dec
lea
arpl
call
cs
push
adc
dec
add
xchg
adc
sub
mov
lods
cwde
outs
adc
add
mov
xchg
jmp
mov
sbb
mov
arpl
setb
push
mov
inc
jecxz
push
imul
loopne
jb
(bad)
ret
jge
fmulp
int
adc
mov
or
add
test
add
mov
and
mov
inc
cli
(bad)
jl
popa
lods
mov
out
cwde
jmp
xor
push
shl
push
out
inc
js
xchg
and
rcl
add
jg
adc
push
pusha
retf
cmp
cmp
sbb
(bad)
and
xchg
aad
xchg
sbb
pop
push
fsubp
mov
dec
call
mov
push
cmps
aam
imul
enter
mov
mov
pop
jnp
push
and
scas
and
jns
addr16
data16
int
and
jle
push
call
(bad)
inc
or
arpl
inc
cmp
daa
add
out
(bad)
mov
out
scas
(bad)
in
out
xchg
mul
retf
imul
cs
jecxz
or
neg
mov
or
stos
push
push
fcomp
mov
add
into
pop
pop
pop
mov
ins
xchg
jmp
inc
pusha
stc
enter
push
adc
xlat
mov
ret
jae
add
dec
test
push
lahf
jp
pop
pop
loope
cmp
dec
sub
cmp
ins
and
mov
rol
pop
loope
mov
sbb
adc
jle
imul
push
(bad)
and
mov
jno
test
jne
or
in
dec
pop
cmp
or
push
and
sbb
es
iret
inc
popf
or
dec
ror
imul
and
mov
frstor
(bad)
mul
or
rol
push
mov
or
push
rol
inc
aad
pop
push
push
fwait
and
pusha
fdivr
fbstp
test
sbb
mov
or
cmps
push
cs
imul
cmp
nop
pop
xor
enter
push
out
adc
dec
fadd
das
out
pop
jle
or
dec
movs
adc
push
push
pop
in
mov
popa
or
es
jo
out
adc
jns
add
(bad)
push
push
outs
push
(bad)
sbb
jno
jle
sub
ins
add
lock
pop
jmp
retf
popf
cmps
cmps
call
jo
nop
ds
imul
xor
jmp
ror
add
scas
xchg
inc
aaa
int3
das
leave
(bad)
jmp
push
xchg
and
inc
sahf
ins
rcr
or
rol
xor
dec
ss
icebp
emms
sbb
loop
xor
div
aam
adc
sub
ffree
shl
mov
ss
rcr
idiv
adc
xchg
loope
call
inc
cwde
adc
cmp
pop
repnz
js
pop
test
cmps
inc
js
mov
test
hlt
inc
push
nop
icebp
repz
(bad)
pushw
scas
xor
mov
mov
mov
dec
pop
nop
push
mov
sub
cmp
pop
mov
dec
pushf
push
in
push
rol
push
cs
retf
xchg
and
nop
add
cli
call
mov
imul
push
outs
pop
pop
mov
cmp
jmp
push
inc
mov
jae
mov
pop
fdiv
add
in
pop
fiadd
mov
mov
out
cmps
mov
test
xor
sub
adc
adc
or
mov
sbb
rcl
movs
and
mov
xor
xchg
xor
imul
xchg
jge
add
xor
lea
cld
nop
push
lock
add
xchg
sti
jl
std
aas
xchg
push
fdiv
and
fdiv
xor
lahf
mov
loopne
fild
inc
sub
mov
mov
les
aad
jne
add
mov
mov
call
xor
fs
icebp
mov
xor
(bad)
call
(bad)
das
out
jp
mov
mov
ja
xchg
lds
cwde
pop
xchg
test
rol
push
cld
lds
pop
jp
pop
lods
retf
pushf
xchg
fdivr
adc
fst
jo
adc
ins
pusha
xchg
add
test
pop
setle
(bad)
sbb
call
pop
cmc
cwde
dec
or
add
or
icebp
shl
hlt
scas
fs
(bad)
mov
pop
(bad)
or
jne
nop
sub
mov
push
daa
into
xor
shr
lods
cmp
add
bound
jl
push
imul
out
and
adc
cld
mov
retf
jbe
mov
fucomip
xchg
dec
stos
inc
push
ds
jp
dec
cli
mov
mov
lahf
iret
and
fmul
mov
out
xchg
and
sbb
int
xor
sbb
jns
gs
push
fimul
(bad)
xlat
in
test
rcr
repz
(bad)
out
hlt
push
mov
push
sti
push
or
inc
lods
setle
test
push
das
or
pop
cs
add
and
cmp
dec
xor
jecxz
push
push
imul
mov
test
mov
mov
loopne
mov
rcr
cmp
pusha
xchg
dec
cmp
and
stos
stos
jbe
push
test
pop
je
test
cmps
out
out
popa
sbb
dec
rol
push
jae
xor
popa
lods
pop
push
in
mov
cmp
std
inc
mov
mov
pop
call
call
(bad)
mov
rcr
(bad)
fldcw
xchg
jl
fcmovne
mov
jl
ins
pop
xchg
les
xchg
sbb
xor
mov
(bad)
fmul
pop
or
cmp
adc
sbb
test
jg
pop
imul
xor
fidiv
xchg
test
stc
shl
sahf
es
add
nop
lahf
jle
ret
cmp
aam
je
or
and
jp
push
adc
cmps
es
sar
cmp
xchg
call
cmp
jl
fild
pop
pop
js
cmc
mov
out
cmps
imul
shr
aas
mov
mov
pop
pop
lods
adc
push
and
scas
loope
ret
fld
test
mov
jmp
inc
lock
jecxz
push
popa
dec
clc
rol
push
sahf
inc
mov
stos
pop
cmp
jmp
fistp
scas
daa
test
inc
mov
pop
push
cmp
xor
mov
xchg
fld
ds
stos
test
or
test
sub
mov
mov
mov
push
or
cmp
sahf
(bad)
sar
(bad)
xchg
xor
rcl
push
je
sub
test
repnz
mov
inc
jb
test
pop
and
mov
ficom
pop
ins
sub
sub
aad
fdiv
std
inc
fst
mov
jo
cli
es
add
in
call
push
mov
push
jmp
inc
mov
add
sbb
sbb
add
sub
popa
mov
jecxz
scas
fldenv
dec
push
and
dec
movs
mov
out
jae
and
rcl
mov
sub
sub
ret
mov
aas
pop
out
xlat
dec
outs
mov
mov
lods
pop
mov
sbb
cwde
pop
jae
popf
and
loope
cs
pop
test
mov
cmp
and
inc
fdiv
pop
pop
nop
jmp
sar
pop
inc
mov
rcl
popf
push
xor
mov
test
inc
call
iret
icebp
cld
pop
(bad)
cmp
loop
icebp
popf
jge
mov
hlt
mov
dec
and
mov
fld
outs
mov
cmp
in
loopne
mov
in
dec
push
mov
mov
sub
and
inc
push
test
pop
xchg
leave
test
mov
push
loop
add
in
or
mov
loop
cdq
loopne
dec
mov
(bad)
xor
jo
cld
in
sub
inc
(bad)
xlat
xor
bnd
jns
imul
mov
xor
mov
cmp
int3
sub
or
adc
mov
add
xchg
or
xchg
scas
mov
fisub
fmul
packssdw
inc
mov
jb
mov
fld
rcl
sub
shl
rcl
add
add
inc
jmp
push
sub
mov
xchg
in
inc
sub
aad
mov
cmp
cmp
icebp
gs
pop
or
cli
push
mov
push
fsub
pop
cld
(bad)
shl
dec
jecxz
add
sub
push
dec
div
nop
dec
in
xchg
push
xor
ja
bound
cld
push
pop
sbb
shr
ret
test
cmps
pop
enter
retf
mov
inc
fld
sub
lods
jno
cmp
loop
push
imul
pop
aas
cmps
ss
inc
retf
shl
mov
adc
retf
pop
mov
inc
or
jo
mov
add
push
cmp
add
jne
sub
mov
xchg
mov
std
neg
mov
fucomp
lea
repnz
imul
mov
pop
adc
enter
ss
mov
xchg
cmps
inc
cld
sub
jbe
je
out
mov
inc
ret
(bad)
or
sub
call
mov
or
arpl
cmps
mov
inc
jb
add
out
cmp
xor
sub
stos
nop
loop
push
outs
test
push
mov
and
and
mov
lahf
(bad)
jb
add
cdq
inc
in
add
push
cmps
add
inc
sub
xchg
pop
jecxz
jl
mov
scas
test
pop
fistp
or
add
jnp
leave
and
stos
aam
int
imul
fcomi
cmp
sbb
mov
mov
mov
or
ret
pop
sub
xchg
out
mov
mov
mov
add
ss
cmp
iret
iret
icebp
pop
out
mov
ja
stos
sar
setnp
fsub
mov
js
push
not
fsubr
sub
inc
in
add
rcl
mov
mov
hlt
pop
pop
rcl
imul
sub
inc
mov
push
push
jmp
cmp
in
mov
ror
mov
icebp
push
push
push
lds
mov
cmc
xchg
mov
jg
test
out
cmp
xchg
and
push
mov
sbb
iret
mov
jae
xchg
in
repz
aam
ss
js
out
sbb
ret
fld
or
dec
mov
or
jb
dec
scas
push
aad
mov
lds
ret
aaa
push
or
sbb
jle
and
jmp
xor
hlt
xchg
sub
mov
mov
or
sbb
(bad)
sbb
or
call
push
jl
(bad)
jmp
test
dec
xchg
fsub
cmps
xor
enter
mov
test
imul
dec
daa
xchg
push
ror
loopne
sub
shr
xor
jecxz
shr
ret
adc
inc
sar
xchg
shl
test
jne
(bad)
es
out
out
mov
push
xlat
fiadd
adc
pop
ficom
loope
scas
pop
imul
stos
dec
js
mov
popa
jb
fsubr
leave
and
mov
js
pusha
sbb
cdq
mov
sti
push
je
push
in
mov
packsswb
in
xchg
in
xchg
in
sub
test
retf
cmp
mov
fst
stc
or
xchg
mov
sbb
ret
lods
add
xor
or
dec
cwde
(bad)
fidiv
sub
les
mov
or
pop
or
mov
or
pop
mov
xchg
into
(bad)
adc
mul
jns
jmp
xor
ror
mov
movs
ds
in
xchg
enter
adc
pop
call
mov
mov
in
sub
and
fldenv
cmp
jae
shr
inc
daa
add
mov
lea
pop
push
mul
xchg
add
add
jne
xor
push
or
sbb
xchg
popf
mov
cdq
xchg
xchg
or
add
popa
aaa
mov
inc
rol
je
xlat
outs
xor
pop
outs
sbb
(bad)
das
scas
pusha
push
ins
pop
jno
push
push
push
cwde
les
call
aas
dec
sbb
daa
xchg
jl
shl
xor
js
ja
xchg
not
push
popf
test
ins
arpl
jbe
mov
inc
xchg
popf
add
sbb
inc
in
and
push
or
retf
iret
aaa
sub
mov
mov
inc
aaa
and
adc
sbb
icebp
jg
(bad)
data16
imul
shr
int
sub
pusha
cmps
ror
add
fbld
inc
sub
out
pop
mov
sub
mov
push
sub
loop
xchg
out
call
rcr
into
add
jno
scas
sub
mov
clc
sub
push
pop
inc
pushf
aad
dec
jnp
xchg
movs
out
movs
sbb
repnz
test
test
daa
pop
pop
ret
lock
xchg
pop
test
cmp
pop
bound
lds
stos
daa
cmp
not
es
xlat
sub
pop
out
and
cmp
jnp
aad
mov
aad
mov
lds
inc
ret
push
jae
sbb
xlat
mov
add
iret
jne
lds
addr16
pop
xchg
je
call
test
(bad)
cmps
jns
or
adc
imul
dec
push
mov
call
aad
xlat
retf
ins
sub
push
std
imul
pop
fldpi
loop
sub
test
xchg
retf
adc
pop
ret
mulps
fisub
out
inc
fist
cmp
daa
cmp
mov
push
dec
popw
ins
xor
pushf
fwait
out
fxtract
cwde
jmp
dec
push
iret
mov
lods
sub
lahf
pop
push
out
iret
add
xlat
mov
jle
(bad)
movs
call
pop
call
and
mov
jne
jmp
or
inc
fdiv
push
dec
cwde
pop
lea
(bad)
call
mov
imul
add
lds
jmp
or
dec
jbe
adc
shl
ret
scas
jns
leave
mov
into
mov
xor
mov
push
xchg
and
cmps
not
dec
aad
enter
sub
imul
aam
and
aaa
(bad)
into
and
bound
int3
xchg
inc
fistp
retf
cld
dec
in
ror
mov
jmp
mov
push
sbb
arpl
inc
pop
push
jo
jo
aaa
into
inc
jle
push
xchg
jl
inc
inc
cwde
push
mov
cwde
xor
movs
add
sub
out
sub
dec
mov
retf
push
sbb
cmps
push
jl
jmp
jge
jbe
adc
rol
cli
daa
mov
jns
and
add
mov
add
or
data16
cdq
inc
shr
int3
and
jae
pushf
retf
xchg
and
jno
inc
cmp
sti
out
int
or
fisttp
mov
fcomp
ins
call
retf
rcl
jle
into
out
push
mov
sbb
fld
xchg
fucomi
mov
jmp
aas
pop
push
les
dec
inc
popa
enter
dec
sub
aas
imul
push
jp
mov
xor
mov
xchg
jns
add
jl
add
into
mov
fsub
imul
imul
or
xor
or
loope
idiv
out
nop
adc
jp
xchg
push
inc
cmp
inc
cmps
mov
fcom
fucomi
add
inc
xor
xchg
leave
sub
js
jbe
ret
popa
scas
push
sub
jg
stos
jns
jecxz
out
sub
cdq
cmc
jbe
(bad)
out
xor
or
imul
or
sbb
mov
fnclex
(bad)
mov
cwde
in
add
test
mov
xchg
push
imul
lahf
movs
(bad)
lods
repz
adc
push
lods
enter
add
mov
ret
call
nop
mov
(bad)
shl
adc
leave
or
ja
add
sbb
shl
pop
pop
cmp
mov
mov
aam
retf
xchg
ja
xchg
push
push
scas
dec
xchg
div
and
std
and
dec
int3
cmp
cs
inc
in
ss
(bad)
aam
push
lahf
lahf
push
jmp
stos
ffreep
sub
mov
leave
sbb
pop
inc
push
or
dec
pop
sbb
push
cmp
sub
jnp
jne
mov
sub
popa
cmp
jo
add
jg
xor
sub
ret
xlat
or
mov
(bad)
mov
or
lods
aad
dec
sbb
ds
lock
out
xchg
inc
stos
sub
and
and
cwde
js
adc
mov
fcomp
mov
and
sti
xor
pop
aad
je
sahf
call
jp
pop
ins
retf
popa
push
push
(bad)
jle
inc
sub
dec
imul
call
push
aas
sti
xchg
les
xor
je
loop
xor
inc
(bad)
std
dec
inc
jmp
fadd
fwait
mov
dec
cmp
dec
sar
add
popa
(bad)
loop
pop
shl
mov
cs
outs
popa
movs
adc
mov
repnz
sub
sbb
movs
xor
cdq
out
mov
push
(bad)
call
mov
inc
idiv
xchg
fcmovnu
xor
out
fst
adc
mov
or
cmovp
(bad)
pop
xor
test
arpl
dec
retf
pop
call
adc
sub
pop
rol
jns
ror
mov
fadd
xchg
pop
pop
aam
inc
mov
out
mov
jns
adc
out
imul
lea
pop
shl
push
int
mov
jae
popa
dec
sahf
or
out
fs
(bad)
repz
pop
ins
push
iret
or
cmp
jge
lods
out
imul
int
xlat
data16
jecxz
cmp
test
in
sbb
jo
out
mov
ins
jno
leave
sti
test
dec
test
adc
xchg
je
movs
std
jecxz
push
in
cdq
je
push
stos
sub
fwait
mov
xor
or
pop
(bad)
repnz
push
mov
sbb
pop
fmul
nop
jmp
dec
popf
inc
arpl
cmp
xchg
xor
lahf
cmp
cmc
call
and
sub
jmp
xchg
dec
(bad)
xor
cmc
adc
mov
ins
and
enter
xchg
popw
mov
add
sub
fdiv
mov
push
jne
pop
aas
test
sbb
cld
cs
(bad)
in
cmps
jle
inc
mov
dec
arpl
pop
mov
rcr
xor
xor
shl
push
mul
lods
fistp
shl
fnstsw
repnz
mov
int
add
test
popa
popf
in
or
mov
mov
and
push
jnp
mov
stc
xor
mov
mov
(bad)
pop
inc
dec
inc
xchg
pop
adc
lahf
mov
or
push
pushf
push
out
(bad)
push
dec
iret
push
lock
fdiv
out
jge
pop
sub
or
inc
lahf
jle
out
xlat
outs
inc
in
mov
jnp
jnp
scas
pop
add
in
in
loop
(bad)
(bad)
pop
jns
jnp
lock
and
and
mov
or
xchg
xchg
loop
aad
aam
in
hlt
(bad)
xor
in
movs
dec
mov
xchg
inc
cwde
sub
xor
jmp
push
lahf
std
lods
out
sub
inc
jl
adc
mov
cmp
sub
les
mov
inc
xchg
inc
in
(bad)
rcr
fsubrp
sbb
ins
(bad)
(bad)
stos
sbb
jg
mov
dec
mov
dec
adc
outs
test
cmp
xadd
mov
sar
add
dec
sub
repnz
mov
data16
int3
push
(bad)
cld
jecxz
adc
(bad)
xor
add
mov
sbb
out
je
lea
cli
js
std
sub
add
sti
fstp
sub
mov
add
pop
call
gs
and
or
inc
mov
mov
fstp
jne
jno
(bad)
shr
ret
jno
test
mov
and
push
mov
shl
rol
and
dec
imul
and
arpl
or
shl
jecxz
into
test
fucomi
dec
imul
inc
addr16
sbb
add
or
clc
jnp
mov
loop
dec
(bad)
call
mov
clc
sub
xchg
fld
ss
adc
fidivr
cld
jne
cmps
or
stc
jno
inc
call
mov
inc
aaa
cmc
je
pop
fldcw
xchg
cli
fwait
bound
(bad)
stc
jle
mov
sbb
mov
cmps
push
mov
test
ds
jg
movs
movs
loope
stos
mov
hlt
(bad)
cmp
jbe
les
mov
out
pop
pop
or
inc
fucomi
sub
out
ror
data16
dec
and
sub
cdq
ja
imul
mov
test
and
int
loop
xchg
push
jb
jbe
jmp
adc
fstp
lock
vminsd
mov
pop
xor
je
inc
scas
cmp
repnz
aam
pop
daa
test
xor
mov
stos
or
ins
shl
mov
div
mov
jle
inc
mov
es
mov
xor
mov
sbb
clc
mov
into
dec
rol
jbe
mov
scas
repz
push
jae
lahf
les
(bad)
popa
mov
xchg
push
push
stos
clc
jmp
rcr
std
dec
imul
arpl
add
xor
ret
mov
mov
sub
stos
arpl
mov
mov
sub
sbb
cwde
je
cmp
mov
stc
xchg
leave
(bad)
jo
(bad)
(bad)
loopne
mov
push
fwait
(bad)
in
mov
in
jp
xchg
sub
fild
xchg
aas
jae
(bad)
mov
inc
jbe
jmp
push
mov
add
xor
mov
push
test
add
mov
fmul
and
inc
sbb
xchg
cmps
jno
retf
popa
hlt
cdq
dec
add
mov
push
cli
ficomp
(bad)
mov
es
add
retf
div
pop
call
leave
(bad)
cmp
xchg
and
in
sahf
push
inc
out
popa
pop
adc
jo
xchg
mov
or
cdq
add
pop
ins
mov
xor
fild
test
cmp
call
dec
adc
stc
xchg
pop
mov
std
xor
lea
stc
sub
mov
sub
pusha
clc
jns
hlt
or
inc
(bad)
(bad)
push
xor
push
jmp
dec
outs
retf
xchg
ins
pop
xchg
adc
pushf
cdq
es
mov
neg
sub
sahf
daa
mov
mov
out
or
(bad)
dec
(bad)
aas
lea
mov
sbb
stos
fs
add
dec
scas
nop
push
in
(bad)
in
(bad)
gs
sub
shl
imul
or
xchg
jmp
adc
inc
pop
cmp
inc
jmp
outs
dec
frstor
fimul
xor
fucomp
mov
in
repnz
pop
in
mov
or
movs
xor
cmp
sbb
leave
clc
jmp
out
push
add
out
iret
pop
nop
xor
(bad)
pop
sbb
(bad)
mov
and
mov
fdiv
aas
sbb
pop
add
cwde
sub
ins
repnz
ret
test
jae
test
movs
xchg
test
and
push
jmp
sub
cmps
jge
cmp
movs
and
stc
mov
test
jae
mov
jno
pop
sti
popf
push
jp
das
cmp
pusha
daa
pop
sub
sbb
jp
bound
xor
retf
outs
cli
in
jl
cmp
imul
cmp
repnz
cmp
lods
pushf
loope
mov
xchg
pop
jg
adc
out
pop
xchg
repz
push
stos
cmp
addr16
pop
add
push
cmc
push
std
jnp
sbb
dec
cdq
addr16
jle
hlt
mov
sbb
js
mov
test
xor
mov
push
cmp
xchg
lahf
sub
xor
retf
mov
mov
cmp
inc
maxps
cdq
stos
ins
ins
adc
adc
sbb
(bad)
mov
xor
outs
mov
out
xchg
clc
pop
jbe
cmc
ss
in
pop
mov
push
sub
lock
sahf
dec
loop
out
movs
pusha
ret
push
mov
xchg
(bad)
jge
data16
mov
leave
sub
adc
pop
dec
sbb
pop
arpl
fdivr
sub
or
xchg
ret
das
imul
daa
ss
mov
sub
in
mov
cmc
cld
fwait
xor
ja
mov
mov
inc
jmp
pushf
fcomp
xor
or
cmp
into
test
loop
into
jg
fimul
dec
pusha
xor
rcl
test
add
shl
mov
jmp
adc
das
pop
pop
dec
retf
lock
mov
inc
out
and
adc
jns
sbb
int3
sbb
out
scas
mov
adc
in
xor
inc
loop
imul
in
or
(bad)
std
mov
push
jbe
retf
push
fnop
test
mov
push
rol
or
(bad)
(bad)
mov
jne
and
sub
jns
xchg
jne
pop
add
mov
inc
xchg
inc
push
push
sub
hlt
xchg
or
inc
scas
sub
sub
aaa
nop
pop
dec
sub
mov
jnp
xchg
jmp
mov
imul
push
sbb
pop
les
xchg
stos
mov
aam
sub
add
mov
xchg
out
pop
inc
mov
sub
mov
mov
cdq
cmc
mov
fnclex
inc
ror
leave
ror
add
dec
dec
mov
add
jae
push
push
dec
mov
mov
shl
ins
push
mov
les
cmp
xchg
repz
push
movs
mov
xor
out
cdq
cmp
fucomi
push
cmp
and
(bad)
adc
pop
mov
cs
int
out
hlt
test
mov
rcr
mov
inc
sub
cmp
shl
ins
dec
or
mov
or
pop
xor
addr16
imul
mov
ja
outs
push
test
jmp
mov
dec
jne
imul
inc
inc
je
add
out
mov
jno
call
inc
shl
push
in
scas
adc
ds
(bad)
push
sub
data16
out
movs
jo
sub
aad
mov
or
add
push
mov
dec
push
ins
cmp
mov
xor
push
ror
je
jb
jg
les
add
cmp
ins
mov
out
loope
push
and
out
(bad)
push
call
(bad)
cmp
mov
int3
in
xlat
test
sbb
stos
add
mov
outs
mov
movs
xchg
mov
popf
cmp
inc
dec
add
xchg
sbb
sub
mov
aas
lahf
fisttp
cmp
hlt
sti
fisttp
stos
xchg
inc
movs
scas
ror
outs
in
jmp
jmp
or
cmp
mov
lock
in
mov
mov
jg
jl
and
call
and
xor
mov
jmp
inc
cmp
imul
inc
cli
cmp
sub
aam
push
imul
and
mov
ret
(bad)
ror
dec
(bad)
scas
daa
push
repnz
popa
lahf
(bad)
pusha
mov
je
loopne
adc
xchg
shl
push
mov
cmp
in
out
retf
out
mov
dec
mov
jbe
aas
pop
jnp
int3
cs
repz
aad
push
loopne
jo
mov
dec
or
(bad)
loopne
jo
lds
mov
jmp
fcom
push
scas
(bad)
and
and
sub
jmp
xchg
pop
lods
fidivr
adc
or
outs
mov
inc
jae
pop
(bad)
rcl
add
or
lock
jns
call
cld
outs
push
pop
pop
lods
and
push
or
mov
ins
inc
fst
mov
lahf
xchg
mov
inc
ja
(bad)
int
jo
or
add
sbb
mov
cmp
call
sub
cs
pop
ins
cmp
and
dec
cmc
dec
inc
mov
fistp
idiv
loope
adc
cmps
ja
call
scas
(bad)
fdiv
rcr
popa
mov
jbe
push
or
sbb
hlt
(bad)
mov
fstp
mov
int3
xor
push
xchg
pop
out
ins
cs
pushf
in
je
jo
pop
loope
pop
ret
lahf
jnp
push
push
popa
jne
pop
add
adc
aas
mov
movs
stos
(bad)
test
push
dec
arpl
mov
ja
cmp
jp
bound
push
(bad)
dec
cs
mov
xchg
sbb
pop
test
sub
arpl
fld
in
inc
fadd
pop
push
stos
xchg
mov
adc
les
inc
call
mov
mov
push
aas
mov
mov
fstp
test
jg
xor
sbb
jg
dec
call
jg
aas
scas
xor
xor
fiadd
dec
or
pop
cmp
les
call
mov
inc
dec
into
sub
out
mov
into
add
inc
int
test
adc
and
pop
(bad)
fcom
(bad)
pop
dec
or
iret
mov
bound
popa
push
cmp
jno
(bad)
stos
xchg
xor
mov
movs
mov
out
das
fisubr
shr
cmc
jmp
ja
mov
and
pop
shl
xchg
pop
ins
sbb
(bad)
xchg
mov
mov
mov
mov
bound
shr
cmps
pop
in
push
scas
inc
jle
jg
add
inc
shl
xor
dec
ror
loope
dec
lods
daa
gs
sahf
mov
out
addr16
ins
dec
and
jnp
xor
pop
das
inc
jmp
mov
xchg
pop
stos
dec
fdivr
dec
jnp
fdivp
or
dec
jp
iret
inc
xchg
pop
test
hlt
clc
pop
int3
cmp
sub
ret
dec
mov
or
sbb
mov
push
jmp
pop
cmp
dec
mov
and
cdq
loope
daa
adc
sub
xor
sub
and
loop
scas
jnp
daa
mov
inc
loop
(bad)
mov
clc
movs
loopne
fdiv
sbb
repz
sbb
adc
xchg
or
rcl
add
icebp
(bad)
cs
mov
lods
jl
mov
pop
push
aam
xor
sar
and
adc
rcl
inc
xchg
dec
(bad)
shl
loop
into
cdq
inc
test
mov
out
cli
pop
test
pushf
les
(bad)
pop
mov
jno
jecxz
popf
sub
add
jns
hlt
inc
xor
sub
enter
or
adc
cmp
add
fistp
movs
retf
sbb
sbb
cdq
in
sbb
pop
out
bound
add
adc
out
or
das
mov
add
jo
pop
test
or
inc
clc
shr
push
xor
scas
aaa
xor
out
mov
push
mov
xor
xchg
cmps
mov
cdq
aad
lock
mov
mov
clc
test
jle
and
dec
ins
sbb
call
test
neg
jbe
push
xchg
cld
jne
adc
(bad)
in
cmps
gs
jmp
pop
jmp
xor
(bad)
jmp
pop
sbb
retf
xchg
push
data16
jns
inc
sar
xchg
push
push
mov
push
inc
mov
cmc
mov
pop
adc
dec
dec
out
push
out
jmp
loope
mov
pushf
lods
add
fld
shr
aaa
fmul
ja
sti
mov
std
sub
ss
pop
inc
push
enter
sbb
push
iret
jno
inc
xchg
ds
pop
xchg
sbb
dec
in
call
inc
lock
push
mov
in
adc
inc
retf
adc
pop
mov
jmp
xchg
mov
xor
pop
push
idiv
pop
dec
gs
add
hlt
dec
lea
jo
and
stos
fs
dec
ins
icebp
imul
enter
add
add
cmps
(bad)
std
sar
das
mov
and
jg
cmp
in
xor
add
and
inc
mov
xchg
out
out
sub
push
jns
sub
je
pop
mov
push
mov
repz
out
push
dec
or
outs
out
cwde
popf
and
repnz
scas
mov
(bad)
sbb
jg
into
inc
fcmovnb
jne
xor
jns
adc
cmps
or
fldenv
dec
xchg
mov
inc
jle
push
add
jecxz
repnz
cmp
mov
in
jo
or
jnp
jmp
add
fst
ds
test
xor
adc
push
xchg
int
add
leave
enter
push
mov
les
imul
and
clc
scas
mov
jl
test
xchg
lods
(bad)
push
xor
leave
sub
sub
ss
fsub
lahf
sub
in
add
ins
enter
mov
ret
call
arpl
jmp
adc
std
(bad)
jmp
mov
pop
in
jle
sahf
pusha
mov
mov
xchg
jl
xchg
icebp
test
(bad)
retf
adc
push
int
pop
aas
push
push
and
idiv
outs
mov
in
lods
sti
lods
out
push
mov
(bad)
sbb
in
ja
icebp
or
cmps
inc
cmc
les
mov
sub
dec
mov
dec
imul
call
inc
stos
mov
outs
cmp
cld
ins
xchg
inc
xor
add
test
or
imul
push
cmps
push
test
sti
int
and
cmp
xor
ins
xor
sar
inc
xor
ds
dec
(bad)
mov
sub
ds
xchg
addr16
(bad)
cmp
xor
outs
dec
fiadd
xchg
daa
lea
push
mov
jne
in
out
imul
jge
jg
retf
fnsave
push
jb
adc
sbb
and
cmp
leave
(bad)
pop
stc
or
push
push
lds
rcr
aad
add
mov
stc
mov
xlat
mov
xchg
mov
and
lock
(bad)
rcr
lods
pop
inc
mov
xchg
stos
or
pusha
imul
push
in
or
hlt
add
fld
std
pop
(bad)
push
pop
movs
add
push
push
add
and
fld
pop
xchg
pop
xchg
call
xor
add
push
mov
lahf
fidiv
or
test
in
fcom
jno
dec
fisttp
addr16
popa
xor
sti
mov
pop
call
dec
iret
adc
add
add
sbb
mov
push
jmp
ret
add
mov
jge
je
stc
sub
fchs
adc
clc
mov
mov
aad
mov
fisubr
inc
daa
repz
mov
jo
and
xchg
out
xor
icebp
scas
cmc
jnp
nop
arpl
sub
xchg
cmp
push
inc
push
sbb
cld
sub
call
imul
mov
imul
jmp
xlat
(bad)
cmp
mov
call
sub
dec
cmp
jns
ffreep
xor
imul
mov
int3
push
cmp
notrack
test
cmovg
push
jecxz
neg
mul
inc
cmp
mov
jmp
pop
sub
shr
daa
retf
loop
loopne
sub
xchg
sti
xor
in
xlat
inc
ja
fisttp
xchg
bound
push
adc
push
ins
add
fstp
ja
in
mov
cmp
dec
nop
inc
cmovle
jp
xor
movs
in
inc
std
lea
mov
push
adc
xchg
add
mov
fwait
dec
cmp
xchg
sahf
stos
(bad)
(bad)
enter
cmp
add
ds
out
adc
dec
popf
mov
lea
icebp
and
pusha
bound
lock
cmp
xchg
fld
and
mov
sbb
ins
and
sar
(bad)
and
pop
imul
xor
inc
aas
out
lea
mov
pop
fwait
and
push
cmp
leave
sub
mov
sub
pop
add
sbb
fwait
out
xchg
pop
test
lea
in
cmp
or
in
ror
adc
xchg
mov
push
sbb
pop
mov
stc
test
mov
mov
jne
sub
xchg
pop
pop
sahf
mov
fisubr
out
dec
and
xor
and
mov
and
popa
jmp
jmp
add
adc
popa
xor
pop
sub
jle
rcr
add
int
mov
test
aas
pop
or
push
jmp
jl
ret
mov
addr16
into
push
loope
dec
ds
cmp
xor
inc
add
aas
ss
(bad)
shl
sti
(bad)
lods
enter
jl
out
mov
lahf
retf
test
movs
outs
mov
push
std
pop
lock
int
out
adc
and
arpl
ret
loope
sub
mov
retf
inc
stos
cmps
lods
nop
or
mov
fmul
int3
and
leave
sbb
sar
inc
mov
repz
scas
mov
and
ins
pop
mov
mov
push
fnclex
inc
loop
and
sbb
mov
xor
mov
std
fcmovu
xchg
int
or
pop
or
pushf
(bad)
loop
popf
(bad)
nop
jae
aam
retf
cmp
jge
pop
jb
push
iret
and
lahf
pushf
fst
sbb
cwde
cmp
in
aad
xor
push
sar
pop
int3
sub
aam
inc
data16
(bad)
push
mov
sbb
fucom
lock
movs
mov
mov
push
jo
jmp
sbb
xchg
or
mov
jmp
inc
mov
arpl
sahf
inc
cs
cmp
mov
in
mov
dec
fnsave
not
mov
aam
xchg
out
mov
pop
mov
sbb
movs
movs
fs
jmp
rol
push
ret
clc
pop
loope
popa
mov
int
int3
ss
das
mul
sub
fwait
mov
in
cmp
cmp
push
aaa
inc
push
loopne
js
cmp
outs
repnz
sub
add
fucompp
sbb
imul
xor
push
mov
add
mov
retf
aaa
cmps
ss
add
xchg
jno
arpl
js
ffreep
adc
cmp
or
aaa
jl
cmc
sub
(bad)
call
push
add
fsubrp
jno
or
out
mov
ss
jns
mov
sub
inc
adc
sbb
inc
jb
aas
aaa
add
push
pop
mov
xlat
jg
inc
add
mov
es
sar
adc
cmovp
test
add
sub
mov
ret
cli
cmps
out
aas
pop
inc
jmp
pop
xor
lods
aaa
out
(bad)
mov
xor
cdq
push
popa
and
mov
shl
repnz
pop
mov
pop
push
pop
sti
shl
jne
push
movs
fld
inc
inc
retf
mov
and
or
mov
or
data16
dec
daa
jmp
inc
pop
push
idiv
cmps
pop
in
push
sar
jb
jo
mov
mov
xchg
call
movs
push
into
cdq
dec
or
cmp
cmps
push
cdq
fyl2x
inc
jg
mov
les
jmp
das
shr
loopne
movs
(bad)
pop
adc
sub
push
mov
in
lds
push
adc
or
lods
gs
xchg
popf
clc
loopne
sbb
cmp
jmp
sub
push
push
and
xor
dec
cmp
pushf
mov
int3
or
mov
sbb
sbb
loop
jmp
inc
xchg
cwde
jmp
cwde
sti
adc
jo
sub
pop
test
aam
cmp
mov
(bad)
stos
movs
(bad)
and
test
sbb
fidivr
inc
cmp
pop
xor
cmp
popa
jge
add
cmp
in
mov
ret
fadd
add
fld
nop
popa
mov
out
cmp
lods
cmps
outs
js
xor
and
add
jb
in
sub
stc
(bad)
fdivr
es
sti
cmp
(bad)
jp
push
imul
call
outs
mov
pusha
test
sbb
(bad)
clc
ret
cdq
stos
cmp
cmp
mov
sbb
bound
dec
rcl
test
mov
dec
xchg
jne
push
pop
jmp
pop
out
sbb
jg
mov
stos
fimul
cmp
in
call
push
push
push
(bad)
jae
stos
fmul
scas
push
jecxz
dec
xor
adc
aaa
out
out
dec
adc
inc
add
inc
mov
inc
adc
cmp
dec
nop
push
inc
mov
mov
int3
dec
in
jno
jle
imul
jecxz
or
aad
mov
add
int
inc
add
pop
int3
dec
lea
sti
and
mov
xor
jl
ret
(bad)
cld
mov
ss
ins
stos
add
or
mov
xchg
cvttps2pi
dec
mov
in
sub
icebp
adc
imul
or
inc
les
jo
push
data16
aad
ror
mov
(bad)
ja
add
sbb
sub
movs
int3
das
ss
inc
js
gs
fidivr
(bad)
xchg
inc
out
xchg
sbb
(bad)
lods
shl
push
push
(bad)
in
mov
adc
push
xchg
(bad)
rcr
in
jl
mov
pusha
ins
fsub
shr
pop
aaa
jb
inc
adc
jge
(bad)
lds
cmp
out
ficomp
sub
or
pop
call
mov
cmps
retf
enter
test
aam
jmp
mov
mov
daa
and
jmp
shl
mov
push
and
or
(bad)
push
jge
xchg
movs
push
clc
out
inc
pop
gs
mov
outs
rcl
mov
jns
fwait
out
mov
inc
pop
mov
mov
mov
enter
or
or
jns
add
mov
or
test
add
jp
sub
and
add
push
cmp
xor
jecxz
iret
test
mov
test
movs
ja
adc
or
mul
call
dec
data16
jg
sbb
in
cmp
sub
mov
add
ret
pop
or
inc
nop
pop
sahf
jg
push
sub
mov
pop
fistp
hlt
ss
es
add
mov
push
push
stc
std
mov
cwde
iret
push
loope
cmp
xchg
mov
mov
in
pusha
xor
mov
lahf
cwde
inc
rcr
and
mov
sub
and
adc
pop
daa
sbb
adc
push
pushf
sub
rol
nop
cmp
out
js
ins
dec
and
push
pop
enter
sahf
mov
pop
mov
aaa
inc
(bad)
adc
adc
push
loopne
imul
mov
sbb
sbb
sub
adc
stc
out
xchg
and
repz
(bad)
out
and
(bad)
cmp
rcl
jmp
lods
inc
lods
jnp
mov
outs
inc
movs
(bad)
jp
cmps
out
gs
es
ins
or
imul
mov
mov
jl
or
std
aas
cmp
in
add
sbb
or
jns
int
push
jo
push
(bad)
xor
cwde
mov
js
push
jb
mov
call
test
adc
push
xor
sub
push
and
in
dec
mov
add
or
fst
test
retf
xlat
ja
cmp
xlat
sbb
(bad)
outs
inc
add
push
xchg
and
enter
test
cld
or
scas
rol
jle
sbb
xchg
jmp
and
dec
(bad)
mov
test
cmp
iret
jecxz
dec
xchg
cld
imul
stc
push
pop
sbb
or
sub
stos
pop
int
(bad)
movs
mov
ja
fimul
mov
lods
add
adc
sub
cli
std
je
sbb
push
test
test
jmp
cdq
mov
sub
add
mov
cld
xchg
arpl
or
loopne
gs
ror
rol
or
out
dec
repnz
sidtd
sbb
je
mov
mov
mul
jnp
mov
lahf
retf
div
lds
and
pop
jg
inc
xor
hlt
shr
imul
or
adc
dec
add
sbb
adc
xor
inc
and
cli
ficomp
popf
add
dec
in
jle
inc
lods
imul
iret
xor
jle
xchg
in
imul
pop
xor
lods
pop
add
int
and
outs
scas
(bad)
sar
adc
and
cmp
cmp
dec
ret
rcr
call
push
hlt
int3
mov
or
ret
popf
dec
sub
sub
enter
cmp
and
clc
bound
inc
repnz
ja
push
loope
ret
lods
or
aaa
sub
mov
xor
stos
sahf
mov
jp
sbb
inc
psubd
mov
retf
cmp
psubb
daa
fcmovbe
retf
test
stos
(bad)
cmp
retf
pop
inc
dec
pop
jno
jb
xor
(bad)
in
jl
xchg
dec
cmp
or
sbb
fcomp
mov
mov
adc
push
in
cmp
fldcw
mov
fdivr
push
lahf
popf
and
cli
push
rep
stos
outs
cs
push
cmp
adc
push
out
cmp
push
fwait
mov
fadd
mov
and
jl
mul
nop
sti
lock
data16
inc
mov
push
mov
dec
jne
inc
dec
add
mov
fsub
scas
repnz
mov
mov
das
add
sbb
(bad)
out
out
(bad)
(bad)
mov
xchg
(bad)
int
sbb
data16
enter
mov
dec
int3
neg
mov
mov
xchg
shl
jmp
adc
pop
xchg
lea
inc
repnz
cmp
fild
push
and
cmc
mov
and
lock
mul
sub
push
xchg
fdivr
xchg
push
xchg
xchg
mov
aad
jmp
ret
inc
cmp
mov
movs
aam
push
mov
add
pop
addr16
xchg
add
jns
cmp
retf
outs
les
scas
jge
pop
(bad)
mov
scas
and
ret
hlt
mov
es
fisub
or
scas
pop
jo
sbb
cmc
inc
add
mov
loop
test
fstp
pushf
sar
jb
mov
xchg
push
lea
dec
scas
int3
not
fcmovnbe
fldenv
test
push
(bad)
fmul
rol
(bad)
int
jg
xchg
or
adc
lea
dec
(bad)
sbb
icebp
jl
lahf
jbe
adc
retf
sahf
cmps
test
dec
dec
add
adc
inc
pop
jae
adc
sub
pop
push
jb
cld
ficomp
stos
out
xchg
dec
mov
mov
xor
mov
movs
lock
test
std
dec
xlat
xchg
repz
mov
mov
(bad)
sti
and
retf
add
xchg
(bad)
and
sub
add
and
retf
pop
(bad)
mov
ret
in
ret
pop
pusha
xchg
mov
outs
sub
add
rol
outs
test
mov
or
js
add
icebp
add
pushf
in
xor
push
out
xchg
(bad)
jo
lea
mov
sub
push
mov
xor
and
adc
outs
mov
xor
and
add
jo
out
push
xor
pop
add
inc
(bad)
int3
cmp
jmp
mov
adc
fsub
scas
retf
mov
jg
and
push
pusha
cmp
or
xchg
dec
sub
dec
nop
out
rcr
fiadd
hlt
iret
(bad)
mov
ja
xchg
bnd
and
jg
xor
push
lds
inc
mov
mov
jmp
and
lea
je
ret
add
in
popa
jmp
out
or
mov
pop
mov
lds
xor
inc
jae
sbb
xor
cdq
jae
cli
dec
mov
jl
int
fnsave
test
aaa
or
imul
jne
stos
ss
dec
xchg
push
js
jo
das
xchg
es
mov
inc
xchg
nop
pop
out
nop
sahf
mov
jbe
inc
pop
lahf
dec
jg
lock
and
mov
ficom
add
call
fxch
xchg
dec
xor
movs
cmp
jbe
test
imul
add
pop
ins
(bad)
loopne
xchg
mov
in
imul
dec
inc
xchg
inc
test
fs
sti
outs
bound
lds
mov
adc
xchg
sub
push
sub
adc
mov
scas
clc
mov
push
push
xor
loope
in
in
sahf
sbb
imul
popf
xor
lahf
pop
dec
fwait
ret
imul
cwd
jo
imul
xor
push
pop
mov
ret
cmp
(bad)
sub
fimul
and
iret
sbb
in
sbb
inc
je
pop
push
cli
dec
stos
jne
mov
or
sub
mov
or
sub
ret
mov
addr16
lea
not
jle
xchg
xchg
sub
push
cmp
push
jns
in
cmp
jno
mov
retf
aas
push
pushf
push
mov
aaa
sbb
pop
pop
dec
push
movs
mov
ror
xchg
mov
jge
cmp
mov
shl
cmp
xchg
out
enter
rcl
dec
shr
repz
in
push
dec
push
dec
loop
dec
push
jmp
mov
or
out
jg
addr16
int
jecxz
mov
jg
and
repz
pop
jmp
xchg
sahf
mov
push
mov
int3
pop
sbb
sbb
or
push
mov
(bad)
and
xlat
lock
mov
test
jno
dec
sub
ins
bound
loop
mov
sbb
ins
jl
pushf
fidivr
inc
xor
movs
cmp
adc
mov
pushf
sbb
or
push
dec
mov
ss
jg
ss
stos
jg
aad
push
xchg
pop
xchg
xor
mov
pop
ss
(bad)
push
xchg
push
sbb
pop
lea
ret
jp
cmp
add
mov
lods
(bad)
mov
(bad)
pop
or
rol
jle
jecxz
fst
repnz
les
cmc
jno
out
push
cmp
push
cs
adc
cmp
cs
xor
jl
jecxz
xchg
jne
push
enter
push
xor
mov
sbb
mov
es
or
xchg
jge
iret
je
retfw
xchg
and
mov
lods
pop
rcl
inc
mov
dec
xor
mov
mov
xchg
das
jl
jo
jbe
mov
mov
aas
fsub
std
or
push
in
push
ficomp
inc
pop
(bad)
mov
cli
xor
les
push
mov
fidivr
pop
leave
push
gs
out
xchg
xlat
sbb
sbb
aas
push
popa
mov
adc
or
mov
fidivr
push
fstp
nop
add
iret
(bad)
loopne
ds
fld
(bad)
ins
add
mov
sub
jg
sar
sti
mov
out
xchg
shl
pop
into
ja
mov
xchg
adc
inc
jge
call
cmp
jge
mov
loope
movs
mov
or
dec
adc
js
fstp
in
jl
mov
in
xchg
jne
jecxz
mov
loopne
mov
std
bound
in
xor
enter
add
dec
jecxz
popf
xlat
add
mov
inc
loop
in
sbb
addr16
sbb
xchg
jae
scas
adc
ret
sar
mov
js
int
loope
je
cmp
(bad)
out
adc
fisubr
aaa
fistp
jo
xor
rcl
cmps
jle
mov
aam
and
fisttp
scas
inc
cmp
loope
jg
cmp
scas
outs
jno
or
scas
test
fcmovnu
jne
xchg
mov
ret
ss
test
loopne
inc
jecxz
mov
mov
xor
cmps
sub
sub
scas
stc
loope
mov
call
loopne
test
(bad)
std
bound
stos
nop
(bad)
lahf
adc
mov
xor
inc
(bad)
adc
fdiv
push
jo
mov
mov
movs
sbb
xchg
scas
dec
xchg
pop
loopne
mov
push
bound
test
daa
sbb
mov
jno
and
clc
sar
sti
movs
fld
leave
clc
and
rcl
sub
cmp
pop
and
int
jns
test
push
xchg
xor
push
xchg
adc
xchg
add
pop
pop
nop
inc
jecxz
mov
push
mov
sti
push
pop
dec
lea
pop
retf
sub
sbb
dec
jmp
xchg
sub
je
sub
inc
sbb
dec
les
cdq
push
mov
push
pop
es
pop
xor
(bad)
stc
xchg
jge
inc
cmp
mov
int
pop
sub
idiv
(bad)
rol
push
push
and
inc
inc
movs
outs
lds
and
jo
stc
push
xchg
xchg
in
(bad)
and
add
and
mov
retf
(bad)
xchg
fwait
les
mov
xor
or
xchg
pop
inc
jae
add
push
js
cwde
xchg
(bad)
cli
jo
pop
pop
jno
out
push
imul
xchg
push
ror
mov
add
ja
aaa
mov
pop
mov
div
(bad)
xor
(bad)
(bad)
mov
jmp
dec
addr16
daa
(bad)
out
dec
ror
cdq
lds
test
pushf
outs
popf
scas
sbb
xchg
mov
int3
cmp
in
hlt
outs
pop
inc
loopne
inc
xlat
cmp
jmp
sub
xor
test
aas
retf
aad
inc
mov
xchg
lods
sub
cmp
xor
xchg
out
int
out
rcl
stos
shl
jmp
lods
int
rcr
push
sub
int3
sub
fisub
aad
adc
arpl
xchg
dec
push
(bad)
aam
mov
ja
ror
inc
mov
int3
dec
cli
xor
and
push
movs
adc
mov
cld
dec
dec
or
movs
test
xor
hlt
jbe
sub
dec
aam
stc
(bad)
mov
push
sbb
leave
and
ret
outs
and
pop
and
fwait
cmp
jbe
in
stc
pop
fwait
push
push
jmp
cmp
mov
xchg
push
mov
es
sbb
(bad)
movs
jge
or
or
in
dec
and
ret
xchg
mov
inc
imul
jmp
std
rcl
dec
scas
aam
sbb
into
push
xchg
sub
out
sbb
xchg
inc
out
inc
ins
cwde
sar
jl
icebp
jno
into
jne
(bad)
out
(bad)
out
mov
outs
ja
test
mov
pop
sub
sub
das
mov
in
sbb
inc
or
ja
dec
sbb
into
mov
gs
leave
pop
xchg
sti
sub
aam
add
or
imul
xchg
movs
push
push
retf
ret
dec
sar
retf
mov
ds
inc
inc
in
adc
jmp
jnp
cmp
mov
sub
retf
repnz
xlat
fcmovu
jbe
inc
cmp
xor
aam
dec
cwde
pop
fsubr
ins
pusha
ret
pop
test
pop
retf
ror
push
or
dec
cld
(bad)
fild
mov
shrd
repz
inc
ja
dec
imul
popf
mov
jl
fstp
sbb
test
clc
jae
cmovg
cs
out
loop
sub
leave
mul
test
sahf
shl
or
imul
xlat
pop
jb
mov
mov
aaa
jnp
mov
test
je
call
adc
sub
mul
pop
leave
push
mov
cmc
ret
dec
loopne
ja
and
xor
sub
pop
ja
jg
sub
in
ja
jae
mov
pop
test
and
inc
inc
hlt
aaa
and
retf
outs
ins
daa
dec
dec
sub
gs
mov
into
sbb
jmp
cmp
retf
jns
mov
cwde
call
push
(bad)
fsub
push
sbb
test
shl
mov
cmc
dec
and
ds
mov
xor
test
test
mov
lea
xor
pop
push
add
dec
add
xchg
mov
loope
lea
into
cmps
sahf
(bad)
loopne
xchg
mov
repz
cmc
pop
jmp
push
fst
lock
mov
pop
ins
inc
mov
jne
or
xchg
xchg
sbb
test
pop
repz
dec
lods
cwde
out
cmp
pop
in
add
ins
pusha
xchg
mov
addr16
fdiv
loopne
push
repz
mov
and
xchg
push
stos
cmp
out
mov
in
repnz
pop
cld
sub
dec
xlat
loop
cmp
ins
outs
and
das
rcr
inc
std
fidivr
mov
sub
sub
push
xchg
and
dec
xchg
mov
test
xlat
mov
jmp
addr16
jno
inc
aas
mov
jg
push
sub
test
jnp
fld
xor
std
popf
dec
repnz
sub
xor
jg
dec
pop
pop
xor
pop
ins
cmp
adc
push
push
and
cli
fisttp
mov
add
pop
sub
push
mov
xlat
arpl
inc
clc
clc
mov
enter
(bad)
and
clc
push
sub
lahf
(bad)
call
out
call
test
push
adc
xchg
ss
xchg
pop
mov
cmp
jmp
pop
sar
mov
out
mov
mov
jecxz
jmp
adc
clc
or
jne
jmp
addr16
dec
lahf
and
pop
loop
mov
fld
and
pop
loope
popf
inc
jns
nop
outs
sub
cmp
inc
lea
xor
inc
icebp
adc
mov
sbb
pop
iret
cmc
gs
popf
xchg
xchg
mov
dec
inc
fcom
in
mov
fwait
push
mov
adc
pop
xchg
sahf
xchg
sub
xor
movs
lea
and
idiv
xchg
push
pop
aad
mov
xor
sahf
ds
cmps
cdq
push
sbb
inc
cmp
outs
adc
jno
mov
movs
(bad)
cmp
pop
dec
loope
sub
mov
adc
xor
add
or
fdiv
fwait
jbe
lahf
mov
jl
inc
jae
xlat
mov
inc
ins
add
pop
cmp
mov
pop
jmp
inc
xor
jmp
ret
loop
add
inc
pushf
cmp
dec
xor
loop
xor
push
push
je
sub
adc
adc
mov
data16
push
inc
fcomp
retf
in
test
dec
jnp
int3
nop
xor
or
cmp
lods
mov
jbe
sub
xchg
add
jbe
mul
add
daa
aaa
dec
mov
in
cmp
push
outs
ja
sbb
(bad)
test
sub
cmp
cmp
lods
push
xchg
or
and
add
in
sub
push
cwde
imul
leave
or
inc
fadd
shl
add
out
xchg
mov
jge
jb
es
fs
dec
ds
mov
das
gs
sbb
clc
arpl
lahf
mov
(bad)
cmps
loop
cmc
test
mov
imul
jbe
dec
div
mov
xor
sub
inc
test
pop
push
add
xor
clc
mov
mov
inc
aas
or
mov
fbstp
add
pop
adc
push
add
arpl
add
xor
xchg
add
sbb
inc
std
cwde
in
jecxz
adc
dec
inc
dec
(bad)
mov
cmp
adc
mov
xchg
sbb
iret
repnz
add
sub
mov
adc
or
jno
sub
cmps
xlat
and
es
mov
xlat
ja
inc
call
and
ss
sbb
loop
outs
imul
scas
push
dec
out
jns
retf
mov
fcmovne
loop
lds
sub
(bad)
sar
mul
cmp
sub
data16
scas
test
hlt
bound
jnp
mov
inc
fldlg2
(bad)
adc
xor
cmc
and
fistp
adc
ins
popf
sbb
mov
xor
sbb
mov
push
lahf
push
clc
aas
retf
test
ror
mov
pop
loope
jbe
or
pop
xor
xchg
pusha
push
mov
inc
pop
jmp
int3
jg
lahf
repz
std
test
mov
pop
in
inc
cwde
push
outs
cmc
push
mov
cmp
push
dec
iret
jecxz
adc
xchg
retf
cdq
cli
add
rcl
adc
inc
jle
adc
mov
pop
xchg
xchg
sbb
in
mov
ins
xchg
mov
mov
cmc
es
push
mov
ins
les
add
adc
int3
cmp
mov
inc
and
inc
mov
cld
push
(bad)
in
call
ret
(bad)
das
je
adc
or
adc
sub
ret
jne
int3
jmp
rcr
stos
mov
and
mov
pop
ja
mov
mov
sahf
jp
cmp
mov
mov
fwait
sub
les
movs
(bad)
pop
pusha
push
std
xor
adc
ss
pop
addr16
sub
mov
push
mov
aaa
out
sbb
mov
data16
loope
lahf
adc
test
sti
push
(bad)
enter
dec
mov
vpmacswd
dec
sub
adc
stc
jbe
mov
inc
jg
push
mov
push
adc
pusha
outs
dec
cmc
inc
mov
inc
ret
test
mov
pop
mov
sbb
fisub
test
push
in
test
shl
mov
xchg
sahf
enter
out
cmp
repnz
inc
enter
mov
mov
(bad)
jmp
scas
pop
in
dec
test
and
xor
inc
xchg
cmp
push
sti
bound
jg
xchg
int
dec
in
test
ja
mov
imul
stos
mov
fcomp
out
rcr
cli
dec
pop
inc
xor
fst
das
or
xchg
sub
mov
pusha
ins
or
dec
mov
jbe
jne
sar
inc
ja
mov
push
pop
adc
jno
ficom
pop
cmp
mov
lods
pop
xchg
mov
dec
add
les
je
pop
dec
imul
rcl
mov
nop
int
imul
sbb
jne
inc
mov
sub
mov
jne
sbb
or
sub
in
jmp
lods
fwait
cmps
sahf
hlt
aam
push
neg
out
adc
push
les
rcr
mov
push
cmc
inc
and
(bad)
lahf
out
das
and
sub
(bad)
loopne
mov
pop
mov
mov
xchg
mov
pop
rol
sub
ficomp
retf
call
and
stos
xchg
push
jb
mov
and
test
cmp
ja
or
retf
inc
iret
adc
push
(bad)
rcl
mov
mov
xchg
add
out
cld
xor
xchg
mov
jno
sub
js
xchg
aaa
sbb
inc
xlat
xchg
call
mov
clc
das
neg
mov
in
ror
add
and
mov
and
call
popf
mov
push
ss
cmp
dec
inc
gs
movs
xor
mov
sbb
mov
mov
in
sbb
mov
sub
dec
mov
inc
push
mov
mov
add
aad
sub
mov
inc
xor
and
dec
xor
xchg
xor
push
nop
sub
fild
and
test
xor
xchg
loope
or
jno
pop
mov
cmp
ret
xchg
jmp
cmp
movs
inc
mov
and
xor
jmp
inc
dec
iret
ror
cli
push
push
mov
inc
xlat
std
jns
jmp
cli
cwde
jnp
xor
ja
push
loope
adc
mov
mov
push
rol
es
popa
(bad)
and
lods
sbb
adc
sbb
dec
push
jmp
(bad)
test
lea
vmwrite
cmp
xor
and
ror
not
scas
and
mov
cmp
iret
call
rcr
fcom
call
nop
dec
mov
fisubr
xor
or
jne
dec
xor
pop
lock
lds
hlt
mov
or
mov
mov
xchg
sbb
push
xchg
or
mov
fwait
cs
pop
jnp
xchg
fcomi
shr
inc
pop
aas
jo
add
je
jno
mov
outs
pop
adc
xchg
xor
pop
xchg
cmpxchg
mov
dec
adc
mov
cmp
retf
jnp
push
stos
int3
mov
dec
out
rol
(bad)
mov
adc
pop
(bad)
(bad)
push
test
outs
scas
jbe
push
repnz
pop
mov
retf
aad
mov
mov
sbb
scas
adc
push
fst
mov
lahf
inc
inc
test
cmc
mov
fisttp
push
(bad)
xchg
mov
xchg
dec
inc
(bad)
sbb
mov
out
cdq
cmp
fld
lahf
dec
push
and
dec
test
scas
fdivr
jecxz
mov
push
out
inc
push
rep
push
test
adc
push
sub
stos
mov
xchg
ja
mov
getsec
ds
mov
push
clc
mov
in
es
(bad)
(bad)
and
sahf
popf
push
rcl
mov
rcl
push
xchg
popa
test
mov
rol
pushf
ret
xchg
(bad)
xchg
xor
pop
in
jl
(bad)
in
sub
adc
inc
dec
xchg
and
or
data16
ds
movs
jb
adc
fwait
xchg
stos
iret
(bad)
call
xlat
cmp
xor
mov
hlt
push
xchg
imul
sti
mov
sub
sub
adc
fisub
in
movs
leave
mov
adc
or
pop
mov
xchg
mov
and
dec
js
jmp
in
jp
push
xchg
xor
iret
in
dec
mov
dec
iret
fidiv
jns
inc
cmp
imul
dec
inc
jne
dec
(bad)
dec
into
adc
push
cs
add
aad
dec
pop
stos
and
gs
test
xchg
out
xor
in
test
push
inc
mov
ja
and
test
je
arpl
mov
stos
mov
push
mov
sub
cld
xor
fidivr
push
scas
cmp
inc
sub
mov
and
pop
sub
nop
push
inc
scas
inc
(bad)
sar
hlt
jns
mov
pop
mov
stos
mov
ins
das
add
lahf
aam
xchg
add
cmp
dec
adc
bound
pop
jne
sub
jns
mov
xor
test
lock
mov
pop
adc
xchg
pop
stos
inc
arpl
sub
and
inc
out
dec
xor
aad
xchg
mov
mov
dec
scas
ret
(bad)
out
jmp
jnp
add
xor
jle
and
pushf
cdq
mov
mov
jmp
clc
dec
mov
(bad)
lock
push
movs
enter
adc
inc
xchg
repz
bound
popa
loopne
push
sbb
jmp
and
rcl
and
pop
xchg
scas
cmc
js
pop
fld
inc
gs
in
mov
aad
mov
sub
ds
adc
mov
cmp
pop
sub
sbb
retf
mov
retf
fidiv
mov
repz
or
pop
mov
mov
jae
and
inc
stos
adc
or
pusha
inc
pop
inc
or
sbb
add
pop
loopne
jne
movs
xlat
inc
pop
fcom
mov
(bad)
pop
in
(bad)
cmp
cwde
stos
mov
cmp
imul
imul
(bad)
push
stos
sbb
outs
movs
inc
adc
or
sar
mov
stos
pop
dec
jbe
jmp
out
and
pop
movs
xlat
dec
pop
adc
(bad)
das
push
js
mov
ja
loop
cmp
and
repz
adc
mov
or
popa
pop
pop
je
mov
pop
aas
fstp
loope
mov
and
mov
neg
mov
jl
or
call
dec
pop
out
pop
je
jp
ss
rcl
fld
sub
outs
stc
jl
mov
in
jmp
sub
cdq
push
aad
mov
and
inc
scas
aad
mov
inc
adc
jl
popa
xlat
sub
cmp
out
xor
pop
(bad)
fldenv
shr
xor
cld
in
mov
ret
shr
pop
adc
nop
jne
jg
dec
outs
shl
mov
or
mov
jo
aaa
pop
popa
mov
addr16
repnz
pop
dec
or
aas
movs
lods
push
out
sbb
sub
in
mov
xchg
int3
int
fidivr
lds
and
dec
mov
sub
retf
push
mov
mov
sbb
stc
loopne
inc
xor
adc
push
fstp
scas
cld
and
cmp
sti
inc
inc
jle
imul
mov
repz
pop
cld
gs
jp
test
fidivr
and
jl
cmp
mov
(bad)
push
sti
mov
dec
inc
cmc
scas
aas
(bad)
cdq
mov
in
lahf
in
pusha
pusha
inc
sahf
mov
push
sub
into
enter
jns
imul
sub
xor
xor
(bad)
stc
xor
in
cwde
or
cmp
(bad)
nop
das
popa
rcr
jns
nop
adc
ret
stos
mov
push
adc
shl
pop
mov
call
int3
jecxz
sbb
cdq
icebp
out
sbb
scas
pop
jge
mov
aas
inc
pop
push
neg
pop
stos
fild
das
and
inc
aad
popf
mov
sbb
jge
cmp
das
stc
xchg
popf
data16
adc
test
into
push
jle
cmp
lods
ret
push
dec
fidiv
out
lods
fdiv
loopne
adc
scas
mov
xor
loope
dec
jmp
cmp
sub
movs
push
pop
xlat
call
imul
movs
mov
dec
fcompp
iret
mov
dec
sbb
bound
call
lock
sub
call
repnz
outs
les
cmc
push
mov
and
pop
(bad)
dec
and
enter
ins
test
ret
xor
or
mov
push
sub
cmp
push
mov
pop
in
dec
ja
or
cli
adc
add
cmp
mov
cmp
mov
pusha
and
retf
mov
call
mov
sbb
sbb
scas
(bad)
jg
adc
ins
adc
iret
inc
lods
sub
pop
out
sub
ficom
ret
fnstcw
retf
iret
xor
int
out
fisubr
mov
(bad)
push
outs
call
and
jo
in
xor
imul
or
stos
imul
in
sti
das
pop
fcmovnbe
mov
push
lods
push
and
pop
cmp
pop
dec
push
xchg
leave
jno
rcl
mov
inc
ins
sub
pop
icebp
sbb
ins
mov
shr
add
mov
repnz
rcl
ins
or
add
adc
xchg
inc
xchg
push
out
daa
movs
cmp
(bad)
in
std
ret
inc
or
mov
add
pop
repz
stos
pop
mov
fisttp
movs
sar
pop
sbb
xchg
inc
adc
xchg
jo
xcrypt-ofb
cmps
out
and
in
stos
push
mov
push
push
xlat
xchg
mov
inc
leave
sub
bound
adc
sti
hlt
or
push
or
scas
jno
movntq
out
inc
adc
(bad)
pop
(bad)
jno
inc
cwde
pop
push
xchg
push
sbb
sbb
push
jg
add
mov
mov
arpl
push
call
cmp
and
clc
loope
out
movs
jge
inc
mov
scas
push
jae
test
test
movs
fs
dec
and
pushf
les
or
in
mov
sbb
adc
xchg
mov
neg
fisub
arpl
xor
adc
aaa
or
cmp
inc
xor
pop
int
call
jmp
mov
idiv
xchg
test
pop
cmp
mov
pop
cmp
rcl
sub
push
adc
cdq
scas
iret
mov
jp
push
fnstsw
pop
std
jp
inc
ins
xor
aam
movs
dec
popf
inc
adc
cmps
call
mov
dec
cld
adc
mov
mov
inc
stos
xchg
add
mov
loope
pop
icebp
stos
or
cmp
cmps
out
data16
out
popf
rcl
rcr
ror
dec
xchg
hlt
pop
adc
ret
retf
sar
out
enter
sub
push
popa
(bad)
movs
cmps
pop
pop
ret
adc
out
cmp
in
mov
push
fisubr
imul
fwait
in
pop
out
js
imul
jl
cmp
addr16
or
fwait
sar
pop
dec
xchg
sub
sub
aam
pop
jmp
push
jne
xchg
mov
fisttp
test
add
mov
ja
cmp
data16
push
dec
xchg
(bad)
jge
leave
xchg
clc
pop
cmp
xchg
cmp
rol
and
shl
retf
cmps
push
add
dec
leave
and
mov
adc
adc
ss
fsubp
int
hlt
clc
push
jl
adc
dec
xchg
loope
cmps
inc
lahf
or
pop
jmp
jle
xchg
into
push
outs
popf
add
lea
jb
jg
sahf
sbb
dec
mov
(bad)
cmps
add
jo
sahf
idiv
shr
mov
cmps
jne
repnz
ret
stos
aaa
lea
repz
sub
push
xchg
mov
inc
inc
fcomp
call
mov
mov
xchg
lds
mov
inc
lds
fisttp
and
pop
jno
hlt
mov
(bad)
jo
add
inc
int3
pop
cmps
pop
xchg
jg
lods
lods
pop
loopne
aas
loope
mov
loopne
push
sub
jns
adc
mov
mov
pop
leave
out
test
sub
sar
jb
cld
mov
pop
fnstenv
fwait
repz
ins
pop
pop
sub
cmps
addr16
and
push
cmp
jmp
aaa
lea
mov
pop
pop
aad
into
jns
ret
lock
push
out
jp
xchg
imul
mov
mov
lods
jno
inc
lods
int3
inc
inc
mov
test
mov
jmp
mov
(bad)
jle
xchg
xchg
sti
mov
gs
inc
bound
dec
test
cmps
(bad)
sbb
(bad)
fist
sub
mov
es
outs
jno
sbb
cmp
popa
js
pushf
or
out
jbe
xor
xchg
pop
into
adc
pusha
and
stc
sub
std
cmp
jge
inc
adc
mov
arpl
and
mov
lock
push
repz
cmps
inc
mov
retf
xchg
mov
leave
and
data16
imul
cmp
stos
data16
cld
pop
bound
xchg
pop
adc
shr
(bad)
out
out
jo
mov
mov
addr16
mov
push
adc
mov
std
cli
cmp
mov
lahf
xor
xchg
adc
mov
cmp
inc
outs
push
pop
sbb
cmp
cmp
dec
inc
dec
aad
add
out
and
fwait
movs
sub
je
sub
xchg
int
mov
lahf
(bad)
add
cld
jne
sub
mov
adc
mov
jmp
cmp
mov
push
adc
mov
jecxz
cmp
or
daa
mov
loope
adc
and
mov
nop
sub
add
loopne
cmp
add
xor
add
mov
out
test
pushf
fcom
bound
sub
js
cld
shl
mov
xor
add
add
ret
lea
ss
adc
dec
inc
es
add
push
xor
mov
sgdtd
xchg
mov
sub
dec
out
sti
cmp
out
movs
cli
jmp
repnz
adc
add
adc
and
outs
leave
xchg
mov
hlt
lods
mov
and
ret
das
je
(bad)
xchg
mov
repnz
add
sbb
shl
in
enter
imul
retf
(bad)
sbb
or
jle
mov
loope
popf
add
sbb
jle
call
adc
sbb
in
shl
jns
stos
mov
pop
sar
mov
xchg
cs
int3
sbb
jmp
jae
test
fistp
pop
sar
mov
into
mov
lods
popa
ja
add
add
push
(bad)
lods
add
rol
clc
jecxz
ins
nop
popa
das
cmp
sub
cdq
push
adc
test
stc
arpl
dec
shl
xchg
mov
xor
(bad)
fld
das
xchg
and
rol
or
lock
push
repnz
and
bnd
cs
sbb
div
or
sub
mov
out
cmp
scas
cmc
pusha
loopne
(bad)
mov
add
sbb
out
and
test
push
fwait
inc
fnstcw
cmp
push
jge
pop
xchg
push
cli
jmp
mov
mov
mov
and
mov
push
inc
clc
inc
adc
cmp
scas
jo
push
or
rcl
mov
pop
jl
inc
xchg
and
aaa
aad
mov
dec
add
aaa
loop
inc
dec
mov
sahf
push
mov
ret
adc
cld
pop
mov
(bad)
in
jbe
dec
les
pop
(bad)
aam
loopne
xchg
pop
(bad)
mov
and
pop
add
call
popa
js
jl
fidivr
dec
push
retf
push
lahf
mov
fs
push
rcl
mov
and
mov
pop
xchg
retf
mov
outs
pop
call
std
xlat
inc
sub
or
test
lea
in
mov
cmp
add
push
mov
adc
xchg
jmp
mov
aaa
js
push
lods
pop
pop
or
jbe
sbb
or
sar
and
aas
push
mov
inc
mov
mov
icebp
mov
std
call
jo
hlt
sar
adc
cld
imul
retf
push
out
xchg
mov
inc
retf
call
or
stos
or
out
test
jno
addr16
mov
mov
cs
mov
arpl
icebp
fdivr
icebp
cmps
inc
pop
mov
mov
jle
mov
mov
out
adc
ja
lods
aaa
leave
or
pop
xchg
adc
sbb
cmp
jmp
inc
mov
fcom
mov
aad
cmp
adc
xchg
movs
imul
or
mov
xor
jge
into
add
daa
lahf
in
xchg
leave
repz
cmp
cmp
jmp
aaa
std
das
mov
sub
add
js
lahf
shr
or
fidivr
test
outs
and
add
cld
pusha
bound
jns
xchg
jnp
stos
fild
shl
or
enter
mov
cli
ror
cmp
lahf
xchg
pop
pop
aaa
lahf
leave
add
inc
test
mov
ret
test
adc
mov
outs
out
rol
aaa
cmps
push
scas
adc
retf
xchg
or
cmp
sub
cmp
out
sbb
adc
outs
(bad)
fldcw
add
mov
xchg
into
aas
nop
ins
push
popa
iret
test
adc
mov
gs
mov
dec
mov
cmp
in
add
cmp
pop
test
push
add
jae
popf
jno
push
(bad)
fmul
mov
and
jmp
jbe
cmps
xchg
dec
rol
sub
xchg
inc
fiadd
dec
sbb
scas
or
popa
addr16
mov
imul
sub
adc
pop
inc
or
jnp
fadd
loopne
test
mov
test
mov
xor
sbb
adc
cmps
loop
and
lahf
sub
inc
mov
and
and
mov
frstor
ret
jo
sbb
aad
ins
ret
jb
lods
ss
sub
jae
xchg
adc
outs
or
sbb
jmp
stos
push
ins
and
sub
push
mov
jb
iret
iret
mov
test
mov
xchg
fdiv
cwde
stos
lods
mov
pop
pop
inc
test
(bad)
lods
aas
je
aas
sub
daa
popa
sti
imul
add
push
mov
aaa
es
inc
and
xchg
dec
and
add
mov
cmp
xchg
sbb
pop
enter
mov
cli
mov
(bad)
leave
inc
int
cmp
enter
jmp
or
xchg
push
fstp
and
mov
cld
bound
cmp
jecxz
scas
jle
jmp
fidiv
lods
sub
xor
add
mov
push
jns
mov
ficomp
cmp
mov
ret
jo
cmovne
stos
loope
mov
stc
mov
addr16
sti
cmova
mov
test
xlat
call
lock
loop
ficom
out
mov
je
fs
ret
adc
cdq
push
popf
hlt
pop
adc
and
loopne
and
mov
pop
mov
pop
out
outs
mov
fbld
mov
sub
jnp
add
cwde
xchg
fcomip
sbb
jecxz
(bad)
icebp
jmp
sahf
mov
aad
lock
dec
(bad)
push
ins
test
add
aad
mov
lods
add
sub
xchg
sar
cld
aas
sub
add
xchg
pop
out
fstp
mov
jp
dec
cmp
pop
or
test
push
dec
shl
les
icebp
fnstcw
pop
shl
push
(bad)
call
dec
imul
aam
jg
je
jno
xlat
mov
rcl
or
xchg
mov
fadd
dec
loop
(bad)
cmp
and
push
popa
sbb
mov
gs
jo
mov
adc
mov
ror
cmp
cmc
xlat
loope
inc
push
imul
mov
arpl
xchg
and
jae
repnz
icebp
cmp
stos
fwait
dec
test
mov
std
jns
sub
or
ja
fimul
ins
mov
(bad)
fdiv
repz
xchg
and
sbb
sbb
jmp
push
(bad)
sbb
movs
sub
in
xchg
or
sub
(bad)
fistp
lods
ficomp
arpl
(bad)
and
fisttp
jns
xchg
cld
cmp
jl
cli
xchg
sbb
test
cdq
les
mov
push
arpl
fstp
nop
fwait
loope
sub
sbb
cs
cmp
in
jl
xchg
or
cmp
movs
movs
in
pop
imul
(bad)
lds
sub
stos
cmp
pop
mov
inc
lods
lea
cmp
push
jecxz
or
or
xchg
nop
retf
sbb
xor
dec
inc
xchg
loopne
jnp
aas
jle
cdq
cmps
xor
ds
xchg
gs
mov
loope
or
push
mov
inc
push
ja
jl
addr16
cmp
ins
loopne
adc
(bad)
imul
dec
loope
add
lods
nop
jb
dec
jns
loop
dec
popf
cmp
cmp
stos
push
in
test
adc
mov
push
(bad)
loop
(bad)
scas
sub
sar
jl
mov
in
test
sti
adc
fistp
sbb
add
cmp
pop
into
stos
aam
mov
and
test
adc
mov
jmp
sti
mov
mov
xor
push
(bad)
jbe
dec
das
mov
mov
inc
mov
mov
mov
(bad)
xor
pop
pop
sahf
mov
mov
leave
inc
stos
cmp
adc
fucomi
mov
shl
dec
mov
sub
fisttp
jmp
js
jns
jmp
push
retf
lods
add
idiv
jge
sub
out
(bad)
out
pusha
cmp
lods
repz
jle
push
jge
neg
cmc
cmps
dec
mov
jmp
retf
push
or
xor
lods
or
repz
jg
movs
push
adc
popa
jb
xchg
fs
lods
repz
in
cmps
push
inc
sbb
dec
xor
std
outs
(bad)
xor
dec
mov
call
cmps
sub
out
push
clc
nop
adc
mov
scas
jnp
pushf
pop
lods
xchg
pop
lds
mov
(bad)
in
sbb
dec
pop
dec
mov
cmp
adc
xor
dec
int3
add
xchg
cmp
mov
push
inc
out
mov
sub
popa
movs
mov
out
jne
out
out
sbb
cli
inc
adc
pop
xchg
test
cld
mov
cli
(bad)
imul
gs
retf
mov
call
mov
shl
loopne
nop
adc
iret
addr16
add
daa
push
in
frndint
fidivr
in
pop
retf
aam
xor
movs
adc
or
test
fistp
jne
dec
(bad)
push
mov
mov
std
gs
jae
xchg
mov
nop
sbb
inc
pushf
xchg
iret
fucomp
aam
mov
jle
movs
stos
imul
fdivr
sub
mov
ds
mov
(bad)
in
repnz
push
or
add
cmc
jp
ret
mov
mov
stc
es
cwde
and
and
nop
or
call
mov
test
outs
arpl
sbb
sahf
cmps
xchg
mov
das
inc
ins
xchg
mov
sti
mov
retf
(bad)
stc
jl
sbb
popf
pop
xchg
mov
iret
loopne
lea
lods
je
add
(bad)
mov
mov
add
ins
mov
xor
inc
push
and
xor
and
sbb
shr
mov
js
mov
lods
loope
loopne
sub
push
push
js
inc
dec
jo
cs
jo
scas
std
pop
shl
adc
pop
and
movs
mov
inc
sub
scas
add
jle
call
rcr
mov
pusha
add
cmps
loopne
sub
adc
adc
add
push
or
(bad)
loope
jmp
push
fisttp
iret
leave
xchg
shr
mov
icebp
xchg
xchg
sub
push
pop
iret
and
mov
cmp
cmps
pop
adc
out
imul
xor
inc
in
loop
movs
test
dec
inc
gs
dec
neg
mov
sbb
lock
mov
or
in
xchg
inc
out
push
in
out
pop
rol
std
mov
or
sbb
push
frstor
retf
sar
popa
pop
and
inc
jae
dec
call
mov
pop
loopne
push
in
sbb
lods
(bad)
stos
jmp
arpl
xor
outs
or
pushf
aam
sti
(bad)
mov
push
rol
xor
sti
bound
out
dec
out
ret
pop
repz
scas
(bad)
ins
pop
add
mov
inc
jb
cld
retf
jno
cld
sub
repnz
sub
neg
ins
daa
sbb
jns
stos
ja
jnp
cmps
cmp
scas
cs
das
adc
sbb
sbb
mov
adc
xchg
push
pop
pop
loopne
shl
pop
pop
jl
mov
lds
in
or
cli
mov
loope
test
mov
jne
stos
out
push
(bad)
sub
sbb
xchg
mov
mov
loopne
push
add
sbb
mov
loop
xlat
and
adc
pop
sub
lds
push
lds
sub
xlat
mov
test
shl
push
rcl
pop
clc
test
fwait
arpl
fiadd
stos
xchg
jl
ja
push
or
out
mov
inc
test
aad
add
and
test
sbb
or
mov
xor
stc
inc
dec
je
hlt
cmps
repnz
mov
pop
jmp
out
mov
jmp
dec
or
mov
cmp
cmp
dec
rcl
mov
and
sub
cmp
mov
lods
jno
cmps
pop
sbb
test
psubsb
outs
dec
mov
shl
inc
cdq
push
mov
movs
cwde
jo
ds
call
adc
out
dec
or
mov
int3
dec
pop
(bad)
jae
xchg
add
test
xor
mov
and
call
xor
dec
cmp
push
mov
push
lds
and
sub
sub
out
ret
dec
or
mov
rcl
cmp
ins
mov
dec
scas
mov
or
xchg
mov
dec
icebp
xchg
mov
mov
pusha
ss
sbb
dec
push
dec
aad
and
gs
cmp
mov
sbb
arpl
in
adc
outs
rcr
lds
mov
stos
adc
fldenv
leave
xor
pop
fbstp
sbb
or
sub
adc
stc
add
sahf
xor
icebp
iret
mov
cmps
(bad)
jge
mov
mov
and
mov
aad
scas
pop
push
xchg
adc
cmp
int3
push
mov
fnstenv
pushf
fs
(bad)
(bad)
mov
int
je
cdq
data16
jne
push
add
sar
out
push
leave
dec
retf
adc
aad
nop
scas
in
mov
in
jmp
out
nop
loope
dec
ds
dec
mov
sahf
mov
sar
jne
xchg
bnd
inc
xor
movs
lds
xchg
pushf
popa
out
inc
xchg
call
adc
jno
push
cwde
push
pop
inc
sbb
shr
ins
cmps
sub
aad
setbe
mov
jmp
rcr
test
ins
pop
aad
in
(bad)
push
jmp
adc
mov
push
stos
pop
leave
add
push
cmp
dec
lds
sub
cmps
sub
xchg
mov
cmps
inc
call
mov
loop
inc
cmp
dec
dec
push
xchg
add
dec
int3
mov
xor
push
adc
clc
loopne
add
or
inc
lds
mov
sbb
cmp
push
pop
push
jp
add
lods
cmp
mov
dec
int3
or
cmc
loop
mov
xchg
jne
and
arpl
add
mov
arpl
or
xchg
dec
ds
and
xchg
cmps
fldenv
mov
repz
xor
neg
mov
xor
add
push
lock
adc
adc
ja
pop
xchg
mov
fdivr
fscale
xchg
shl
xchg
or
int3
mov
imul
mov
jb
pop
mov
aas
test
cli
test
repnz
add
mov
push
sbb
(bad)
jnp
sub
sbb
push
mov
jb
pop
ja
fist
cld
xchg
fiadd
add
scas
cmp
js
inc
mov
call
push
test
xor
push
dec
pushf
adc
or
sub
int
scas
loopne
(bad)
lods
int
ret
sahf
mov
mov
adc
loopne
add
test
mov
mov
out
xlat
jmp
inc
loopne
call
imul
shl
inc
rcl
mov
lock
test
mov
adc
push
push
and
out
mov
pop
(bad)
jmp
and
mov
fs
cmp
in
scas
loope
adc
xor
int3
sub
popf
push
ja
scas
fwait
mov
test
jns
iret
pushf
add
xor
jmp
js
sub
xor
dec
ret
adc
add
xor
pause
mov
lock
push
sub
(bad)
pop
(bad)
std
adc
imul
jecxz
adc
sbb
mov
adc
shl
(bad)
xchg
and
or
popa
aam
outs
mov
jmp
retf
out
push
daa
sbb
pop
(bad)
shl
inc
xchg
xchg
ror
pop
xchg
mov
dec
call
pop
mov
push
pop
mov
repz
xor
and
ror
xchg
mov
push
call
out
lods
xchg
xor
inc
retf
lea
popa
pop
mov
xor
adc
xchg
lods
adc
jbe
sti
mov
jo
adc
loop
mov
inc
ficomp
pop
jae
nop
clc
out
loope
test
loopne
test
xchg
push
add
xchg
sub
int
jge
xchg
mov
mov
mov
addr16
retf
emms
(bad)
cli
retf
loopne
icebp
add
xchg
loopne
jle
into
(bad)
mov
ficom
call
pusha
aaa
jb
shl
mov
jnp
jmp
fs
mov
sbb
lock
push
test
(bad)
arpl
add
setb
cdq
push
add
jb
inc
add
lds
loop
pop
out
pop
lahf
xor
mov
jmp
jns
jle
mov
pop
adc
stc
cmp
imul
sbb
push
xchg
mov
jg
loop
and
cmp
scas
cmp
push
sbb
add
ret
test
daa
test
xchg
pop
xchg
xor
inc
xor
dec
cmc
xchg
sbb
(bad)
(bad)
xchg
mov
scas
xchg
xor
xchg
jp
xchg
lds
ret
dec
add
stos
cmp
js
jae
ret
repnz
in
cdq
addr16
mov
cmc
and
sub
inc
sbb
cmp
adc
bound
sub
pop
or
jns
rcl
mov
ja
mov
fldenv
in
loope
push
repnz
scas
xchg
cmp
add
bound
cmps
stos
jbe
inc
xchg
popa
push
and
xlat
lea
repz
rol
push
out
dec
hlt
aas
cmp
enter
(bad)
mov
cwde
dec
mov
bound
add
fiadd
jg
hlt
mov
xchg
sbb
(bad)
fcmovbe
push
add
ficom
mov
push
mov
hlt
inc
iret
push
sbb
inc
pushf
mov
repz
lds
loopne
inc
mov
cmps
enter
cmc
bound
pop
std
clc
movs
stos
cmps
rcl
sub
dec
jp
jno
sub
loopne
adc
or
add
loop
sbb
xchg
cdq
rcl
pop
mov
lea
push
xchg
pop
pop
movs
adc
xor
mov
push
fwait
aaa
add
push
xchg
or
jb
sbb
jo
lea
cmp
(bad)
cmc
out
mov
push
lahf
push
push
and
pop
jecxz
mov
ss
aad
bnd
xchg
sbb
mov
mov
xchg
inc
and
adc
mov
ds
fld1
sahf
push
or
scas
shr
bound
dec
xchg
push
dec
push
jmp
mov
dec
and
and
out
test
cmp
sub
fist
retf
mov
mov
mov
mov
std
int
adc
or
ja
ret
jge
call
sbb
mov
mov
inc
(bad)
rcr
jne
fwait
nop
sbb
imul
jmp
iret
(bad)
sub
or
cs
adc
movs
out
jp
int
jge
jne
pushf
cwde
movs
push
pop
jne
leave
xor
adc
or
in
mov
jmp
hlt
neg
xchg
mov
mov
shr
mov
add
sub
inc
ja
je
sub
push
fs
cs
add
neg
sahf
pop
jns
or
cmp
jno
aad
jle
sahf
icebp
inc
or
add
cdq
movs
rcr
mov
xor
pop
mov
push
mov
dec
sub
stc
push
ins
dec
mov
fs
jp
push
mov
pop
hlt
cdq
sbb
js
mov
dec
push
lods
xlat
std
push
jo
fbld
push
add
push
pop
call
inc
lods
add
pop
icebp
push
push
mov
jbe
es
jbe
out
scas
xchg
sbb
or
(bad)
inc
xor
imul
and
aas
inc
fadd
bound
push
mov
sbb
lahf
and
div
sbb
loope
test
sub
mov
pop
std
call
pop
out
ret
inc
mov
sub
fld
cmps
into
dec
mov
mov
jno
xor
test
xchg
sahf
xor
retf
rcl
pop
cmp
mov
mov
scas
in
lods
sti
adc
push
movs
or
cmp
and
or
repnz
icebp
mov
lods
inc
jp
test
adc
outs
mov
(bad)
cmp
or
inc
add
pop
shl
xor
cdq
push
mov
cmp
out
mov
out
mov
xor
fs
std
(bad)
iret
outs
cmps
stos
mov
sti
popa
addr16
fnstcw
inc
xchg
clc
es
mov
je
cmp
inc
and
test
xor
lds
push
jae
neg
mov
rcpps
mov
loopne
in
mov
rep
bswap
cmp
inc
cmp
mov
pop
shl
repnz
mov
cli
pop
xchg
mov
jle
adc
or
(bad)
es
mov
mov
arpl
fwait
aad
sub
pop
add
adc
repz
cwde
inc
arpl
and
mov
aam
dec
pushf
push
xor
sahf
jmp
iret
loope
into
jb
shr
nop
in
and
cmp
(bad)
jae
adc
sbb
movs
cmps
cdq
jo
xchg
cmps
aad
xor
dec
add
imul
int3
ret
cmc
std
inc
hlt
in
push
xchg
sbb
ins
or
loope
push
adc
cmc
out
jle
push
add
aam
std
cmps
daa
clc
xor
mov
retf
sbb
mov
add
stos
and
lahf
push
lock
jecxz
mov
mov
add
pop
dec
cmp
jle
xchg
and
add
jecxz
neg
call
jne
jns
xchg
sti
pop
sub
ss
jmp
jp
aad
or
in
in
outs
das
les
inc
adc
cmp
clc
jno
add
add
movs
inc
pop
rcl
cld
cmp
sbb
stos
mov
xor
inc
add
xor
jne
mov
inc
jb
pop
or
jns
jmp
pusha
out
inc
inc
imul
cld
mov
es
dec
cwde
sbb
cmc
sbb
fidiv
mov
out
jecxz
cwde
imul
add
push
movs
repnz
test
jmp
popw
ffreep
mov
jecxz
aad
or
pusha
push
xor
out
es
dec
icebp
(bad)
movs
sub
hlt
xchg
sahf
mov
bound
test
iret
into
pop
sar
inc
mov
xchg
test
cmp
pop
lods
stos
xlat
pop
sahf
cld
and
sub
or
aaa
mov
sbb
sub
enter
call
ins
sub
fild
or
mov
test
cs
and
xchg
xchg
sbb
test
xor
sbb
(bad)
adc
test
movs
inc
test
mov
dec
fiadd
push
call
fisubr
or
push
std
xlat
pop
jl
cmps
or
das
aam
movs
lahf
pusha
shr
mov
stos
xor
mov
fisub
jmp
loopne
rcl
scas
inc
jnp
xchg
mov
hlt
add
mov
xchg
and
in
rcr
out
mov
ins
and
inc
(bad)
or
or
add
cmp
fsub
clc
shl
pop
push
xor
adc
xor
and
jmp
sbb
(bad)
jp
lods
mov
sub
pop
fucomi
mov
push
stc
call
push
rcl
adc
(bad)
sbb
test
and
movs
stc
cmps
clc
cmps
mov
fcmovnb
imul
in
in
fidivr
imul
pop
add
xchg
js
pop
and
sar
push
jmp
jbe
dec
(bad)
jmp
jns
sub
jbe
pop
nop
(bad)
in
pop
or
lahf
lea
sbb
out
cmps
push
mov
repz
adc
cmps
aam
jnp
fist
or
mov
xor
out
in
sub
push
sub
sahf
sti
nop
and
mov
sub
push
mov
mov
xchg
das
and
fdivr
jns
add
(bad)
or
fld
jge
(bad)
enter
xor
retf
gs
push
ins
rcl
ds
stos
adc
pop
add
cmc
imul
lds
jbe
push
cld
sbb
(bad)
repz
dec
das
mov
mov
or
push
imul
(bad)
dec
and
pop
push
jg
cmp
jns
ret
mov
imul
hlt
shr
inc
push
bound
push
adc
and
aad
pop
jle
push
xchg
lahf
mov
rcr
mov
push
rcpps
daa
add
imul
ins
scas
scas
dec
daa
loope
jp
sahf
or
in
and
cmps
dec
lea
jmp
xor
repnz
xchg
and
rcr
mov
push
(bad)
clc
jo
xchg
push
and
dec
jecxz
or
jecxz
stos
mov
out
je
into
loopne
xor
xchg
xor
iret
ror
popf
xor
fisttp
xchg
cli
lods
jns
div
cmp
in
inc
mov
ret
push
sbb
js
pop
push
repnz
mov
mov
sbb
(bad)
cmp
mov
call
adc
frstor
out
add
dec
mov
mov
loop
aas
inc
jno
pop
aas
jbe
cmp
dec
cmp
cmps
das
popf
xor
ror
pop
arpl
test
fst
loopne
ins
push
xchg
push
sbb
or
rcr
ficom
ret
add
inc
sub
push
dec
outs
je
bound
loop
cmp
or
and
test
adc
and
fadd
in
jae
mov
pop
fcom
mov
mov
cmp
in
fnstcw
sbb
push
and
mov
pop
imul
adc
adc
fld
sti
movs
movs
repnz
scas
(bad)
adc
push
pop
cmps
inc
outs
jecxz
jno
fistp
stc
sub
inc
cmp
mov
cmps
movups
jmp
sub
(bad)
mov
icebp
jge
dec
int3
mov
pop
out
push
popf
es
add
enter
mov
sub
jmp
or
test
jns
lods
cmp
lods
pop
call
pop
xchg
imul
xor
add
and
lds
inc
les
sbb
outs
pop
fwait
or
aam
in
xor
mov
loopne
xor
or
test
jae
cmp
(bad)
movs
outs
call
hlt
cs
movs
inc
ins
(bad)
pop
mov
add
dec
dec
add
pop
xchg
cmp
push
cmp
sbb
mov
sub
mov
scas
in
aad
pop
and
push
xchg
mov
stos
cmps
lds
push
inc
sub
repnz
test
pop
jns
stc
xor
(bad)
loopne
cmp
mov
xor
jmp
mov
inc
lods
mov
shr
xchg
(bad)
(bad)
xchg
pop
jno
pushf
xchg
nop
sbb
(bad)
lahf
add
(bad)
fild
hlt
and
idiv
ins
push
stos
aam
stos
sbb
pop
pop
mov
push
pop
je
jne
push
pop
mov
fisttp
sahf
mov
jge
push
cmp
push
fcmovnb
mov
ffree
shl
cmps
rcl
cld
sbb
mov
xchg
add
push
pusha
xor
inc
jbe
std
retf
movs
push
sub
cmps
pop
dec
push
mov
xor
sub
xchg
outs
inc
inc
test
sahf
(bad)
sti
sub
js
jae
adc
inc
sbb
pop
mov
inc
dec
and
icebp
loope
adc
push
xchg
jnp
jnp
pop
xor
test
inc
outs
test
aaa
dec
sub
xchg
loopne
jno
(bad)
fadd
(bad)
mov
je
lock
inc
inc
(bad)
xchg
inc
dec
mov
or
mov
bound
out
call
pop
stos
lods
xor
(bad)
mov
sbb
push
in
fimul
jp
mov
call
pop
lods
mov
out
rcl
pop
push
fdivr
mov
push
mov
icebp
inc
push
dec
and
fcmovu
and
sub
cmp
ins
add
sub
std
hlt
in
shl
xor
add
pop
push
add
and
fimul
add
dec
scas
dec
lock
shr
xor
not
inc
sub
out
adc
mov
xchg
pop
gs
jnp
dec
jo
xor
scas
push
xchg
add
add
jecxz
cmp
fcom
and
jno
push
add
inc
movs
dec
xor
add
out
(bad)
jp
cmp
inc
daa
stos
pop
jno
ds
add
jg
ret
imul
xchg
mov
sar
mov
sar
jno
push
stos
das
xor
sbb
js
enter
sti
sbb
adc
ret
cvtps2pd
icebp
pop
addr16
add
fstp
cmps
mov
sub
inc
sahf
cmp
adc
lods
out
call
sub
cli
mov
retf
(bad)
xlat
and
inc
shl
scas
dec
push
xchg
cmp
dec
add
movs
mov
popa
cmps
push
xlat
adc
sbb
pop
inc
enter
aaa
jo
idiv
out
inc
(bad)
into
sub
mov
shl
das
repz
mov
push
ins
mov
sub
push
je
ret
into
adc
test
movs
jno
pop
loope
dec
adc
idiv
mov
bnd
pop
or
pop
jne
dec
inc
cmc
xchg
scas
popa
sbb
adc
jno
mov
test
ins
leave
inc
rcl
repz
inc
ret
mov
xchg
mov
(bad)
adc
dec
or
(bad)
cmc
ss
js
sbb
pop
adc
shl
lods
popf
sub
ja
retf
pushf
test
pop
cmc
(bad)
mov
xchg
(bad)
aad
mov
lea
cmp
(bad)
loopne
ror
or
cmp
repnz
cmp
hlt
add
sub
xchg
jo
sbb
cmp
cs
jecxz
movs
daa
repz
loope
add
pop
lds
fisub
arpl
(bad)
xchg
or
xchg
retf
or
xchg
and
inc
loop
popf
pop
scas
sahf
pop
xor
jle
data16
sub
sar
mov
jl
outs
out
mov
loope
in
imul
hlt
movs
pop
ret
(bad)
mov
pop
jns
dec
pop
cmp
cli
and
out
scas
repnz
shl
ins
push
mov
ficom
retf
mov
sbb
cmp
cli
(bad)
mov
cmps
xchg
add
mov
cmp
ret
adc
gs
inc
sbb
and
repz
imul
mov
imul
test
pop
shl
push
mov
rcl
push
xchg
or
or
adc
ret
ficomp
add
and
enter
cmp
and
cwde
push
mov
cs
mov
or
jnp
xchg
in
in
sbb
mov
mov
movs
mov
les
mov
xchg
jbe
dec
sti
stc
inc
pcmpgtw
fdivr
iret
xchg
retf
sub
sti
lahf
rcr
cld
int
or
push
cs
std
out
push
jp
rol
and
mov
pop
inc
in
xchg
mov
xor
dec
mov
jge
push
fcmove
daa
into
mov
scas
neg
or
push
mov
movs
enter
add
mov
add
push
mov
sbb
adc
stc
xchg
lods
stos
(bad)
adc
out
xchg
and
jne
pop
cld
mov
xchg
arpl
scas
xchg
cmp
xlat
push
in
add
mov
pushf
jno
(bad)
push
call
cmp
mov
jle
fnstsw
sbb
es
xor
or
retf
mov
scas
into
sub
pop
push
arpl
ja
(bad)
fcom
push
jp
ds
or
ror
in
sub
xchg
jno
outs
loop
test
int
adc
sub
test
cs
inc
ret
mov
jp
retf
movsx
arpl
and
fist
inc
arpl
push
std
sahf
mov
inc
jp
mov
in
inc
push
cmp
xor
imul
sbb
xchg
cmp
cmps
inc
pushf
mov
nop
cmp
sar
jmp
push
cwde
jmp
mov
xor
pop
fwait
aas
push
in
stos
sbb
sbb
std
in
popf
pop
xchg
icebp
or
je
clc
into
cs
mov
sbb
out
push
imul
pop
out
push
xchg
dec
int3
or
fwait
repz
scas
pop
xchg
fld
repnz
leave
jb
pop
outs
jne
mov
movs
lahf
lods
stc
es
sub
mov
aam
cmp
(bad)
fnstsw
pop
je
nop
xor
xor
dec
sub
push
pop
push
mov
xchg
push
sub
test
xchg
inc
inc
sahf
test
fldenv
pop
or
bound
or
rol
mov
(bad)
jl
cmp
test
jno
rcr
inc
(bad)
shl
mov
in
imul
push
jge
add
cmp
fsubr
sar
push
adc
xor
cmps
pop
stos
mov
or
aam
out
imul
(bad)
adc
fwait
push
jb
js
lahf
mov
pop
pushf
test
das
or
icebp
jge
sub
test
add
(bad)
in
repz
scas
aad
adc
daa
xchg
sub
out
gs
bound
mov
mov
mov
mov
loop
inc
xchg
sub
btc
arpl
test
cmc
in
mov
fdiv
mov
aaa
in
mov
mov
sbb
add
mov
and
xor
(bad)
pushf
push
inc
xor
mov
mov
pop
sbb
repnz
test
test
jle
es
out
add
mov
popa
or
mov
inc
int3
cmp
gs
add
cmp
sub
and
mov
nop
clc
add
inc
inc
movs
(bad)
cmc
stc
int
sbb
xor
pop
imul
jno
mov
ja
imul
xchg
lock
out
mov
gs
cmp
fld
js
mov
ret
or
add
fimul
sbb
xor
or
pop
cmc
and
and
ret
mov
je
repnz
mov
stc
call
pushf
push
push
lds
aaa
mov
mov
adc
lock
data16
add
dec
pop
cmp
push
xor
inc
movs
push
arpl
sub
fs
aam
jae
es
in
lods
mov
add
adc
loope
sar
lea
and
outs
std
arpl
cwde
push
xor
push
rep
adc
ds
ror
pop
call
fsubr
aaa
scas
or
push
dec
scas
shl
clc
xchg
lods
in
ss
ins
loope
in
mov
(bad)
test
xor
cmc
(bad)
fild
mov
add
xor
pop
cmps
inc
das
not
mov
test
outs
rcr
xchg
ror
mov
in
inc
loopne
aaa
jecxz
cmc
mov
ret
scas
inc
mov
sbb
xor
inc
mov
add
addr16
mov
pop
or
adc
mov
adc
push
or
repz
clc
movs
jl
addr16
mov
cmp
shl
cmp
mov
fidiv
aam
sbb
sub
shl
cmp
arpl
xor
pusha
mov
mov
pop
add
push
lods
addr16
call
or
pop
mov
adc
(bad)
sti
pop
mov
cmp
(bad)
movs
retf
push
ins
add
inc
pop
jge
mov
(bad)
jp
jnp
sti
mov
mov
sbb
pop
enter
add
daa
dec
xor
imul
into
outs
rcl
test
ror
test
es
add
xchg
in
ds
add
stos
mov
stos
stos
jb
sub
jbe
fisttp
aaa
jns
jmp
xor
cmp
jmp
xchg
fwait
ins
xor
pop
fldln2
call
lods
sahf
lds
pusha
outs
mov
mov
mov
xchg
add
in
xchg
mov
xor
pop
enter
mov
xchg
mov
jno
(bad)
inc
clc
xor
jns
ret
jo
push
imul
pop
pop
inc
mov
sub
scas
mov
aaa
lods
data16
add
and
jo
xor
sub
inc
jmp
xor
adc
test
stos
mov
add
stos
pop
mov
ins
cmps
imul
stos
and
add
loope
or
cmp
in
jnp
sar
js
jmp
gs
dec
das
out
sub
or
lahf
adc
ss
sbb
mov
lods
add
dec
shl
icebp
push
push
pusha
sub
cmc
aaa
lahf
add
jmp
ja
xchg
loopne
and
(bad)
dec
push
mov
int
ss
ins
and
xchg
sbb
addr16
ror
xchg
loopne
sbb
popf
xchg
jmp
adc
pop
ja
jno
sub
daa
(bad)
add
xor
sub
add
jb
daa
mul
imul
mov
jle
inc
cmc
hlt
adc
fistp
addr16
pop
data16
cmc
xchg
popa
div
mov
les
add
or
push
bswap
push
pushf
bound
mov
and
ja
lea
dec
adc
aam
jnp
push
shl
mov
pushf
pop
ins
jge
sbb
mov
jne
std
add
xchg
std
xchg
(bad)
(bad)
cmp
sub
add
or
mov
dec
sub
mov
adc
fdiv
add
jne
data16
xchg
lahf
pop
jge
push
xor
dec
dec
ja
and
outs
mov
lea
es
cs
mov
and
in
jb
das
fadd
pop
jg
shl
jmp
xor
dec
outs
adc
int3
pop
test
sbb
pop
push
pop
pushf
aam
xor
and
sub
loop
and
sahf
pop
push
push
adc
pop
fcomp
adc
or
mov
sub
add
dec
lock
mov
or
stos
outs
imul
cmp
movs
nop
and
sti
adc
aaa
ins
sub
sahf
adc
nop
test
popf
add
iret
sbb
pop
jns
or
and
imul
out
jno
ins
add
daa
gs
mov
sub
arpl
mov
xchg
jmp
adc
outs
pop
(bad)
lock
cld
nop
dec
inc
int3
fisttp
jl
(bad)
mov
xor
sub
movs
lock
movs
in
add
jnp
mov
repnz
push
jns
jge
cmp
cmp
les
test
sti
inc
mov
and
lds
mov
sub
ins
arpl
mov
(bad)
push
add
dec
rcr
mov
xchg
mov
mov
sub
ror
or
jno
mov
mov
mov
xor
(bad)
or
sub
pop
mov
sar
ins
push
cmp
push
and
lods
xchg
stos
inc
das
or
js
or
outs
adc
cmps
std
in
je
push
cmps
and
cmc
repz
fiadd
xchg
mov
lds
fs
cmps
test
test
sub
cld
int3
enter
sbb
push
fcmove
push
inc
xor
arpl
xor
push
rcr
push
test
cld
adc
xor
jle
mov
inc
sbb
test
mov
mov
pop
int3
out
sbb
jne
cdq
mov
je
jno
xchg
and
outs
cmp
and
fsub
sub
dec
ret
cs
push
sti
out
mov
cmp
out
push
scas
sub
dec
out
test
push
xlat
pop
and
out
sti
mov
pop
xchg
loop
fcom
retf
bound
ins
ror
and
lods
dec
inc
jmp
data16
sbb
in
jmp
sar
cmp
lods
sbb
stos
nop
into
jno
add
push
push
(bad)
inc
or
repnz
(bad)
push
dec
js
aas
popa
xlat
jns
rcl
div
xchg
add
mov
jecxz
jecxz
cmp
mov
push
push
cld
jno
daa
jmp
inc
ret
pop
mov
fild
add
mov
push
stos
dec
out
out
aas
jle
or
add
call
(bad)
add
retf
mov
ret
xchg
in
inc
aad
js
fldcw
dec
fldcw
xlat
cmp
leave
in
mov
not
stos
sbb
pop
out
lock
hlt
mov
(bad)
jns
(bad)
push
sti
inc
jno
mov
in
pop
stos
and
in
pop
imul
enter
adc
bound
pop
inc
sub
pop
push
in
cmps
add
jno
adc
inc
xchg
pop
dec
lea
xchg
mov
fcmovu
and
fs
cli
xor
mov
out
sahf
xchg
or
dec
add
(bad)
pop
test
dec
int
mov
xchg
push
push
fdivr
jne
mov
xchg
and
and
in
pop
arpl
inc
call
fadd
hlt
cmp
mov
jle
int
pop
in
add
pop
adc
jbe
mov
outs
mov
xor
add
sbb
sub
jne
repz
jbe
mov
mov
test
inc
push
adc
ins
test
stos
xchg
jne
(bad)
ins
sbb
ror
mov
xchg
sti
pop
jl
push
cmc
sbb
std
or
xchg
inc
jbe
mov
cdq
mov
call
dec
xor
shl
rcl
ja
std
add
inc
mov
push
jg
inc
call
movs
jg
mov
jge
jle
iret
xor
pop
sbb
mov
rol
sub
or
inc
xor
add
call
jl
or
ror
icebp
shr
ficom
jp
cmp
push
js
mov
xlat
test
gs
shl
jne
stos
mov
mov
out
xor
test
les
push
sub
cmc
inc
inc
js
inc
or
pushf
xor
stos
shrd
or
daa
lods
test
adc
and
outs
and
test
and
cs
inc
mov
cmps
fwait
xchg
dec
ret
(bad)
jmp
jge
mov
fsincos
stos
gs
in
dec
cmp
das
or
stos
out
push
inc
or
or
jmp
lds
push
enter
adc
retf
into
cld
popa
repz
adc
jg
pop
dec
imul
fild
push
jb
cmps
xchg
dec
ins
cmp
push
xchg
jg
xor
push
in
jb
ins
fs
rol
or
jo
add
cmps
div
pop
iret
jmp
lea
stos
stc
jno
sub
inc
adc
shl
leave
inc
lock
enter
inc
ficomp
add
cmps
and
jne
in
call
shl
xor
pop
inc
mov
mov
(bad)
push
popf
jmp
les
add
jo
xlat
jle
aad
mov
push
mov
push
ja
push
pop
pushf
loopne
loopne
ret
fcom
xchg
inc
mov
loopne
dec
outs
adc
and
shl
push
push
ret
test
loopne
dec
push
imul
cwde
and
inc
inc
inc
sbb
movs
jne
es
push
xor
ins
out
mov
into
imul
inc
jmp
or
mov
out
push
out
mov
ret
in
push
jge
fdiv
ror
mov
ficom
xor
sub
jmp
mov
dec
jae
mov
xchg
xor
mov
dec
pop
fwait
loopne
and
pop
icebp
retf
mul
add
cmp
jmp
test
outs
nop
aam
lds
or
aad
ss
mov
push
xor
or
data16
jmp
iret
mov
mov
mov
sti
mov
sahf
loop
std
push
adc
scas
inc
sub
mov
fnstsw
dec
fimul
(bad)
loop
mov
dec
mov
shl
add
push
ja
push
outs
add
cmp
pop
xchg
cs
xor
xchg
xchg
nop
addr16
mov
dec
and
fnstcw
pop
repnz
pop
mov
jae
inc
xchg
enter
push
push
mov
jae
xor
mov
pop
out
mov
and
push
fs
inc
je
hlt
mov
repnz
add
or
sbb
xor
sub
inc
mov
xor
push
lock
sbb
fistp
or
loop
out
retf
shr
retf
fisttp
push
add
xchg
mov
outs
add
mov
xchg
inc
pop
sbb
or
xor
cmps
fld
mov
jg
sub
adc
in
imul
call
or
and
mov
push
push
fisub
fisttp
or
jecxz
enter
hlt
inc
sub
xchg
adc
xchg
mov
mov
fcom
fucomip
cmp
mov
and
cli
iret
rol
jl
xor
in
loop
mov
fcom
retf
je
xor
into
cdq
cs
call
add
pop
sub
add
pop
pop
ret
into
out
sub
pushf
imul
add
stc
mov
pop
inc
inc
ret
pop
mov
stos
sahf
ja
je
shr
add
jne
and
sub
pushf
inc
push
jnp
push
loopne
aad
imul
mov
inc
push
or
dec
loop
inc
fwait
sub
jae
and
xchg
cmp
clc
sbb
mov
fbld
into
adc
xchg
fsub
and
xlat
or
adc
push
push
lods
retf
fs
sub
cmp
jmp
mov
dec
(bad)
xlat
test
adc
shl
loope
sbb
mov
cmp
clc
mov
data16
jg
out
sbb
stos
pmullw
jb
mov
push
(bad)
test
fisub
lods
gs
enter
scas
pop
nop
imul
scas
xchg
push
pushf
push
adc
sub
sbb
cmp
jl
adc
or
or
and
repnz
cwde
xor
pop
xor
xchg
mov
out
nop
imul
jmp
add
cmps
addr16
xor
fsub
and
cli
inc
repz
fidivr
jmp
cli
lods
push
sbb
sub
mov
cmps
fwait
stos
jmp
sbb
lock
cmp
out
sbb
push
in
sub
stos
jns
and
stos
mov
test
sti
sahf
xchg
fcmovu
xor
adc
xchg
or
shl
or
jle
hlt
(bad)
adc
call
pshufw
lock
std
or
inc
jb
imul
sbb
adc
or
fdiv
sub
js
dec
imul
(bad)
imul
lock
push
jp
cmp
dec
test
xor
mov
adc
xchg
in
mov
pop
in
aam
fcom
dec
fs
jb
xlat
mov
stos
xor
out
adc
pop
in
shl
sub
imul
push
push
jmp
jmp
sbb
sub
jns
mov
repz
adc
add
repz
pusha
inc
and
loope
bound
fsubr
adc
les
loop
ficom
(bad)
mov
cwde
jl
sahf
and
rol
and
push
and
ja
jo
in
aam
sbb
pop
clc
ds
push
or
adc
movs
imul
cmp
adc
adc
xor
pop
fsubr
neg
jno
xchg
push
out
mov
das
ja
dec
cmp
jo
xchg
push
mov
fstp
xchg
mov
leave
sbb
std
bound
dec
stos
mov
sbb
std
rcl
out
inc
and
cmp
xchg
in
jmp
jecxz
das
mov
dec
add
inc
push
je
sub
cmp
aaa
sbb
xor
or
sub
add
push
jae
cmp
or
scas
test
pop
out
aaa
popa
(bad)
mov
not
mov
js
push
int
pop
nop
cmp
sbb
mov
cmp
sahf
pop
aad
ss
mov
push
stos
jg
fldcw
or
inc
dec
shl
jecxz
out
add
aad
push
xchg
scas
and
test
aaa
pop
sti
in
pop
ror
loope
push
mov
fnstcw
xchg
cmp
out
jecxz
add
cmps
ja
les
pusha
sbb
and
xchg
push
mov
and
(bad)
cmp
je
les
movs
push
shl
xor
loope
fidiv
stc
add
push
(bad)
cmps
or
movs
je
pusha
push
ret
push
inc
inc
pop
sbb
div
iret
or
mov
jns
icebp
add
xchg
jl
movs
mov
cmp
popf
test
fild
cdq
outs
pusha
xor
lea
pop
sbb
sub
call
out
nop
aaa
mov
(bad)
jno
sar
jne
(bad)
jg
xchg
int
xlat
gs
adc
(bad)
frstor
pusha
xchg
int
(bad)
mov
inc
jmp
add
pop
mov
repnz
xor
hlt
loop
mov
loope
sar
xchg
mov
push
xor
enter
sub
int
or
cmp
mov
dec
push
hlt
mov
movs
cli
shl
inc
sti
iret
fidivr
push
inc
adc
test
imul
int3
pop
push
aam
aam
xor
out
aaa
mov
mov
or
movs
mov
sbb
sbb
adc
pop
pop
xchg
js
fwait
in
pop
add
mov
aaa
or
(bad)
fisttp
sbb
push
je
mov
fwait
and
push
jo
xlat
mov
dec
jne
stos
cmc
clc
loop
stc
test
(bad)
push
xchg
sub
inc
(bad)
mov
fdivr
mov
push
dec
or
sbb
fdivr
xchg
(bad)
inc
fcom
cmp
dec
inc
xchg
movs
mov
fdivr
cmp
mov
add
push
mov
pop
call
jnp
sar
push
jle
iret
inc
loopne
mov
dec
retf
mov
add
mov
adc
aas
scas
dec
add
pop
and
add
into
pop
and
cmp
adc
(bad)
pop
test
or
pop
mov
xchg
pop
loope
sub
pop
sub
movs
mov
jge
call
mov
mov
xchg
cmps
mov
cmp
dec
and
xor
idiv
push
add
je
jp
mov
retf
push
push
push
arpl
adc
pop
inc
imul
adc
xchg
hlt
inc
mov
ret
jmp
add
arpl
fisttp
jmp
iret
mov
add
aam
dec
je
neg
jbe
test
push
test
or
outs
adc
inc
outs
inc
mov
mov
jge
cmp
shr
adc
pusha
stc
jecxz
lahf
out
mov
fcmovnu
aas
xor
mov
frstor
rcr
mov
mov
or
sti
fisttp
loope
adc
and
add
mov
pop
mov
dec
in
cld
and
jbe
mov
lods
add
adc
test
outs
push
sahf
cs
xor
or
cmp
push
test
sub
(bad)
addr16
test
ss
jmp
push
daa
mov
mov
fdivr
lds
sbb
imul
mov
out
mov
dec
cdq
lock
xor
(bad)
push
ins
(bad)
adc
call
mov
adc
repz
repnz
pushf
scas
cmp
push
test
cmps
pop
xchg
dec
xor
pop
aaa
push
movs
fimul
test
rcl
pop
ins
sub
mov
mov
test
cmp
rcr
daa
adc
jne
sbb
jmp
sahf
cmps
adc
cs
push
inc
rol
push
aas
push
mov
sahf
mov
loope
push
inc
fs
push
scas
xchg
iret
daa
mov
xor
cli
(bad)
and
jl
push
inc
fdiv
xchg
fbstp
mov
adc
xchg
jo
xchg
scas
pop
jle
cmp
(bad)
xor
jbe
inc
or
push
jge
pop
imul
mov
jp
sti
pop
dec
sbb
test
mov
jb
out
fidivr
mov
cmp
sbb
int
mov
iret
loopne
call
repz
iret
(bad)
arpl
repnz
pushf
lods
mov
xor
dec
cmp
ret
adc
daa
sbb
inc
stos
sbb
mov
mov
dec
xor
and
int
(bad)
popf
mov
ror
stos
ret
outs
cmp
push
test
cwde
outs
(bad)
sbb
and
xor
cs
sub
mov
mov
jl
mov
aaa
pop
cmp
sahf
scas
nop
pop
outs
lods
in
out
aam
arpl
and
cmp
push
mov
aad
int
jmp
jae
cmc
cmps
ret
sti
xchg
adc
pop
sar
xlat
push
mov
ins
pop
mov
push
mov
push
push
sbb
push
out
mov
pop
and
add
ror
lds
push
jb
and
sub
not
jb
pop
dec
xor
lods
outs
(bad)
push
popf
pop
mov
imul
sub
xor
lock
outs
std
scas
sbb
(bad)
cmps
pop
sub
jne
cmp
jno
push
push
rcr
clc
jmp
js
push
pusha
popf
jmp
mov
or
xchg
or
mov
(bad)
sti
stc
sub
jge
aaa
adc
xchg
rcl
ins
adc
ror
es
jb
sub
and
jle
adc
out
mov
gs
(bad)
or
out
push
cmp
not
jo
fwait
jae
jmp
sub
ss
mov
jg
or
or
fst
imul
(bad)
stos
push
cwde
sbb
ins
pop
adc
pop
out
dec
mov
cmp
or
(bad)
mov
pop
cmp
pop
inc
shl
xchg
or
call
inc
xchg
in
fldenv
and
hlt
mov
jb
sub
out
sub
stos
xor
scas
inc
push
popf
pop
movs
loop
sub
and
mov
push
push
jae
mov
and
xchg
hlt
add
inc
fild
adc
mov
jo
fwait
out
nop
fisub
inc
pop
jle
(bad)
xchg
ror
lea
xor
mov
pop
inc
mov
ret
sahf
arpl
jp
push
sub
call
xor
leave
cs
inc
das
fpatan
out
outs
xchg
mul
outs
cmp
mov
bound
push
mov
leave
sbb
arpl
push
dec
pusha
push
ja
fimul
sahf
sub
cmp
push
cwde
cmc
test
in
inc
clc
(bad)
fnstenv
mov
scas
adc
ja
add
fisttp
(bad)
jno
out
pop
cdq
jne
fdivp
ja
and
into
aaa
sub
enter
xchg
xor
out
mov
lods
push
ja
movs
rcr
cld
sbb
hlt
dec
in
sbb
jno
repnz
xor
int
data16
je
stos
mov
push
sub
dec
outs
fnstsw
or
pop
push
adc
ror
jge
aam
xchg
cwde
lahf
rol
inc
test
xchg
movs
fst
neg
add
(bad)
rcl
sti
fnstcw
or
and
rol
adc
push
xchg
mov
movs
mov
fwait
adc
add
ja
xor
stc
jge
or
adc
jno
xor
sbb
jle
into
mov
and
cmp
in
jne
(bad)
cs
int
pop
pop
pop
pop
push
push
pop
imul
sti
dec
mov
jle
pusha
push
xchg
ret
xchg
cli
cmp
cld
dec
imul
mov
xor
popa
mov
pop
push
inc
push
xor
stos
lods
data16
xor
jl
pusha
rcl
xchg
xchg
imul
mov
inc
mov
inc
stc
push
mov
dec
cmp
call
aam
movs
fldenv
cmp
jno
cmp
test
and
data16
or
add
pop
out
xor
dec
lock
cmp
mov
pop
mov
push
sub
xor
mov
inc
call
stos
int
out
jne
in
ja
add
outs
inc
mov
or
mov
xchg
sbb
jmp
enter
in
sahf
and
cdq
cmp
sub
fcmovb
mov
fadd
add
jmp
and
std
mov
fistp
or
out
jge
in
jle
movs
imul
jo
repz
or
fdivr
xlat
xchg
scas
call
out
jecxz
sti
enter
add
nop
push
mov
setbe
jae
clc
push
sub
je
repnz
out
scas
push
push
data16
(bad)
jno
mov
(bad)
jno
cmp
out
call
mov
jbe
test
sbb
inc
sub
mov
xchg
mov
je
mov
outs
lock
jb
and
fwait
mov
lock
mov
leave
fistp
jp
fwait
shr
push
ror
xor
aas
mov
test
push
or
mov
push
or
cmp
shl
jmp
pop
cmps
inc
call
inc
es
and
sbb
(bad)
sub
mov
inc
cmps
inc
shl
dec
test
sub
push
js
jl
cmp
jmp
cdq
xchg
jmp
call
push
dec
add
jmp
mov
jge
push
ja
cwde
push
test
cmp
inc
sub
jge
in
daa
add
xchg
jl
xor
lahf
pusha
sar
ror
dec
shl
(bad)
ja
jnp
mov
test
mov
pop
out
mov
idiv
ret
sar
or
pop
aas
out
jno
aas
ss
jbe
push
pop
sar
add
and
adc
in
addr16
movs
sti
daa
cmp
lods
xchg
je
imul
sub
dec
cmps
ins
xchg
(bad)
push
mov
pop
or
mov
dec
mov
fld
mov
mov
cdq
add
jp
das
push
mov
jg
sahf
mov
dec
mov
idiv
shl
popa
adc
std
adc
xlat
mov
mov
sbb
and
xor
jne
nop/reserved
(bad)
sub
fdiv
je
fdiv
into
mov
(bad)
sbb
sub
xchg
cli
or
lds
dec
iret
aam
sub
sbb
jecxz
xchg
inc
fwait
cmp
xchg
rcl
pushf
pop
fist
adc
(bad)
ficomp
test
jno
or
push
movs
jo
cwde
inc
sbb
jge
mov
xchg
mov
(bad)
pop
loope
shr
fwait
mov
and
shl
sbb
sahf
mov
mov
ja
mov
push
adc
loop
cmp
mov
pop
mov
fidiv
cld
iret
dec
mov
outs
cmc
or
inc
inc
mov
lods
ds
lea
cdq
mov
cmp
xchg
ficom
gs
add
dec
out
call
ds
mov
push
ror
xor
addr16
int3
xlat
and
clc
fwait
stc
outs
dec
repnz
rcl
mov
mov
sub
adc
inc
add
adc
pop
in
retf
xor
cmp
or
and
add
cwde
loope
xchg
push
leave
xchg
xchg
mov
repz
mov
sub
and
pop
fisttp
jno
test
mov
addr16
and
out
repnz
mov
ret
jmp
mov
rcl
dec
jg
addr16
sbb
push
call
(bad)
mov
outs
ret
stos
imul
or
adc
imul
repz
and
or
cmp
xchg
and
(bad)
cld
shl
push
(bad)
xor
fimul
ins
jg
cmp
add
sub
add
cwde
mov
dec
pop
int
out
mov
fstp
inc
popa
pop
sub
cmp
mov
out
test
and
gs
stc
cwde
fbstp
out
sub
sub
stos
popf
fs
cmps
jbe
repz
mov
rol
ret
(bad)
fnstcw
icebp
mov
call
add
push
inc
push
(bad)
push
inc
or
jae
nop
push
jns
mov
js
sar
pop
test
fwait
dec
mov
aaa
mov
hlt
or
xchg
ror
call
in
jmp
jae
in
dec
push
out
lea
add
loop
mov
bound
lods
xor
mov
inc
mov
sbb
push
jnp
jecxz
call
mov
popf
sub
cmp
leave
push
inc
push
pop
mov
cmp
cmp
test
pop
xchg
adc
push
jb
out
repnz
xchg
test
cli
(bad)
aaa
js
xor
push
(bad)
or
mov
je
push
sbb
add
mov
imul
call
(bad)
les
jnp
in
xor
pop
fstp
in
xor
and
js
outs
ret
enter
dec
call
jmp
add
inc
jbe
pop
and
mov
test
pop
lock
outs
xor
add
dec
rol
in
xchg
cmp
nop
dec
push
shl
mov
adc
and
inc
pushf
aaa
xchg
sbb
daa
pop
mov
stos
mov
loope
ret
jnp
mov
xchg
in
lea
dec
out
cmp
sub
pop
jmp
pop
(bad)
sub
outs
ficom
jno
in
push
xlat
movs
cdq
sbb
or
(bad)
xor
push
leave
js
mov
pop
inc
dec
out
xor
das
das
mov
sub
inc
and
mov
xchg
xor
mov
rcr
nop
jge
test
sahf
test
popf
js
shl
mov
in
xor
mov
sahf
ret
jae
(bad)
cld
or
cmp
ja
add
retf
in
mov
sbb
add
into
icebp
jnp
scas
cmp
cmp
imul
and
icebp
pushf
jbe
add
push
xchg
int3
aad
(bad)
adc
retf
sub
mov
ffreep
in
mov
mov
jmp
mov
jae
rol
mov
jmp
inc
retf
jp
push
stos
arpl
dec
addps
add
(bad)
mov
(bad)
in
adc
in
popa
mov
imul
xor
mov
in
shl
lods
push
test
pop
iret
cli
jae
xchg
aam
jmp
pop
push
(bad)
aad
cmp
daa
adc
pop
cdq
dec
mov
out
shr
xchg
je
xor
outs
popf
inc
mov
adc
into
or
in
inc
or
icebp
push
call
enter
jno
push
mov
cmp
out
popf
iret
retf
jmp
pop
or
xchg
ins
ficomp
stos
push
dec
int
mov
dec
pop
stc
jnp
add
dec
push
fs
or
imul
jp
fstp
movs
dec
push
pushf
jl
fld
mov
lods
bound
out
dec
cmp
push
xlat
xor
in
daa
sbb
mov
cmp
pop
adc
jns
hlt
mov
sub
push
mov
mov
xchg
nop
and
or
pop
das
xor
adc
mov
imul
lahf
add
mov
push
jg
sti
and
std
inc
stos
mov
and
(bad)
adc
sar
outs
in
shl
push
(bad)
pop
mov
mov
add
outs
and
test
jns
pop
xchg
test
pop
adc
lods
stos
je
sub
cmp
rcr
or
jg
repz
dec
xchg
push
xor
xor
dec
fistp
jge
xchg
(bad)
popf
test
shl
das
int
jge
aaa
push
into
xchg
retf
sub
xchg
scas
push
sub
and
xchg
call
jns
push
loopne
mov
(bad)
sbb
or
mov
pop
test
jb
addps
je
(bad)
push
xor
in
lods
call
add
mov
xchg
xchg
(bad)
js
pop
call
push
jp
dec
mov
outs
xchg
add
out
imul
push
push
sub
arpl
jmp
xor
aad
pusha
cdq
aad
add
stos
push
mov
enter
or
imul
push
mov
pop
fdiv
xchg
mov
xor
nop
xchg
ror
in
sar
add
jno
add
cmp
loope
mov
into
mov
hlt
push
inc
ins
pop
out
fcomp
mov
adc
mov
retf
and
push
fnstsw
lock
jb
lods
jmp
retf
jne
nop
sub
add
aam
sub
cmps
add
adc
add
sub
or
push
ret
ficom
stc
cli
cmp
xor
inc
int
pop
test
jne
inc
stos
jne
in
bound
div
nop
add
jno
shr
(bad)
sbb
sbb
mov
scas
js
and
adc
sub
xor
cdq
fidivr
fs
jae
cmp
ror
movs
int
fs
out
call
(bad)
icebp
dec
sub
mov
aad
cmp
clc
fwait
enter
stc
mov
push
push
popf
xchg
mov
cmp
popf
cmc
mov
sub
jecxz
test
mov
lahf
fbstp
hlt
jl
cmp
mov
cmp
mov
cld
and
je
push
jmp
enter
sar
pop
lods
cli
(bad)
scas
xchg
add
xchg
add
mov
xchg
xchg
loop
jmp
nop
outs
add
mov
cs
xchg
(bad)
outs
jns
or
test
test
mov
sbb
call
dec
and
xchg
push
leave
adc
xchg
retf
dec
pop
stos
cmp
scas
mov
lea
in
inc
cmp
add
jbe
fisub
push
jle
fdivr
mov
inc
movs
xor
leave
cs
xchg
ss
mov
mov
nop
popf
stos
inc
jno
cmp
pop
xor
and
adc
jle
(bad)
sbb
hlt
fs
int3
ja
and
xor
in
mov
dec
arpl
cmp
outs
rcr
rcr
mov
sbb
cmp
(bad)
jecxz
push
loope
and
mov
inc
stos
mov
mov
sub
pop
sbb
mov
or
adc
stc
repz
cmc
dec
mov
push
mov
test
nop
cli
jns
sub
inc
fild
mov
popf
xchg
sbb
ret
scas
je
test
pop
in
xor
jg
in
or
ins
in
addr16
sub
bound
call
jno
out
xor
xlat
daa
aam
adc
mov
test
(bad)
std
inc
les
aad
mov
xchg
(bad)
mov
call
mov
mov
mov
inc
into
lar
adc
leave
mov
ins
jns
jp
data16
das
rol
fldenv
jmp
bnd
call
xor
pop
sbb
dec
popf
test
pop
and
xchg
dec
or
outs
sti
loope
loope
rcl
add
push
pop
sar
xchg
and
cmc
rcr
add
push
cmps
or
(bad)
nop
sbb
jecxz
test
icebp
mov
test
dec
push
jge
mov
shr
into
cmps
mov
xchg
xor
daa
(bad)
and
retf
push
ins
xchg
jns
mov
sbb
mov
int3
lock
xor
lock
in
ins
dec
push
or
push
repnz
sbb
jmp
js
setg
xor
bound
(bad)
xor
pop
retf
outs
clc
sub
iret
or
xchg
pop
xchg
test
mov
adc
imul
ja
cmp
stos
adc
retf
jl
xchg
loop
mov
call
or
bnd
xor
pop
call
inc
test
inc
dec
dec
into
out
popa
sub
xor
pop
xchg
in
cwde
mov
dec
leave
pop
rcl
add
pusha
push
xor
mov
mov
jge
mov
fwait
mov
cmp
mov
setp
mov
sub
push
or
push
test
or
enter
cmps
(bad)
shl
jp
pop
outs
push
pop
cmps
out
cdq
dec
dec
data16
dec
mov
out
xchg
(bad)
fisubr
jns
call
ja
xchg
(bad)
repz
paddsw
inc
and
sbb
pop
out
in
(bad)
lea
ss
test
test
add
jle
fld
jb
inc
push
int3
jns
je
xchg
jge
jle
mov
out
test
push
jmp
pop
push
xchg
add
fwait
popa
jbe
jbe
xchg
inc
sbb
in
int
test
push
ins
mov
adc
shr
stc
daa
movs
(bad)
imul
pop
iret
inc
nop
fsub
mov
fmul
stos
test
inc
push
xchg
and
ins
adc
cli
dec
mov
add
js
push
mov
imul
jmp
repz
cmp
jecxz
adc
fwait
ja
cmp
or
jbe
jo
inc
(bad)
arpl
fild
and
fnstcw
outs
mov
and
into
call
imul
gs
stos
sahf
cmps
mov
ins
push
sbb
sub
cwde
sbb
push
pop
fild
movs
icebp
aaa
je
mov
div
cmp
fs
fdiv
pop
jge
sahf
dec
sbb
in
call
(bad)
js
pop
xchg
add
mov
pop
push
stc
cmps
mov
mov
int
mov
dec
fwait
inc
retf
add
mov
test
inc
pushf
cwde
mov
push
popf
aam
xor
popf
mov
pop
clc
stos
out
sbb
scas
icebp
mov
mov
scas
mov
mov
dec
test
mov
cdq
xor
stos
push
out
fild
push
mov
aad
xchg
iret
cmps
cmp
je
cmp
nop
jg
mov
fwait
sbb
inc
xchg
mov
sbb
clc
movs
je
in
int
mov
mov
inc
dec
dec
push
nop
repz
push
jne
push
xlat
dec
jge
ss
jp
cld
xchg
sbb
stos
lahf
sti
mov
mov
add
pop
shl
dec
stos
dec
fimul
in
ja
je
daa
and
xchg
shl
out
mov
fs
cwde
rep
mov
in
push
sbb
hlt
call
pop
mov
dec
repz
mov
icebp
aam
or
and
jo
lods
pop
mov
mov
and
shl
fcomip
mov
push
ja
popa
sub
pop
jb
or
adc
ja
xor
mov
cmps
lods
xchg
pop
jg
adc
sub
std
add
push
xor
loopne
stos
arpl
jo
je
cmps
stc
add
(bad)
aam
ds
cld
mov
or
fs
add
cld
scas
push
mov
pushf
dec
addr16
sub
shr
out
xor
lods
test
adc
xlat
out
mov
cli
jae
push
cmp
lods
xchg
jns
mov
cmp
sar
int
call
scas
inc
fistp
aad
loope
push
cli
and
(bad)
adc
sub
pushw
in
outs
lods
je
loop
imul
out
rol
rcl
lock
or
stos
pop
mov
fsubr
adc
pop
pop
adc
or
call
jns
adc
call
or
xchg
xor
iret
je
jmp
cwde
or
lea
jbe
jecxz
cmps
xor
in
ja
nop
test
cmc
stc
test
outs
push
ja
and
mov
push
mov
ins
jg
shl
or
adc
pushf
sar
adc
mov
call
movs
scas
xchg
pushf
mov
add
fadd
push
je
pop
ins
cmc
mov
inc
sub
enter
inc
bnd
push
cmp
fdivr
push
dec
mov
test
xchg
jnp
iret
int
pop
addr16
bound
xchg
push
scas
out
hlt
out
pop
(bad)
and
retf
push
pop
inc
sbb
push
add
fwait
inc
inc
push
or
mov
dec
mov
cmps
pop
fld
ret
fst
mov
sbb
mov
call
ficomp
cmp
movs
xchg
movs
movs
mov
mov
shl
cld
ins
push
push
xchg
fwait
mul
popa
sbb
out
cmc
add
jecxz
mov
repnz
push
push
jg
fdivr
fldz
popf
jg
into
int3
mov
push
fisub
pop
inc
push
mov
popf
icebp
ret
lods
mov
jns
ftst
bound
out
sub
mov
out
jle
jmp
hlt
jmp
or
jb
in
mov
out
mov
addr16
dec
adc
outs
aas
lea
xor
pop
leave
das
out
stc
cwde
loope
dec
imul
jg
mov
sub
sar
out
movs
fwait
dec
cwde
mov
clc
rcl
inc
sbb
xchg
or
mov
push
ror
dec
call
sar
mov
cld
test
aaa
adc
bound
sbb
call
push
das
mov
xor
retf
jno
(bad)
pop
pop
inc
xchg
inc
int3
push
imul
push
sub
cmp
inc
lds
mov
bound
sbb
adc
(bad)
pop
mov
adc
inc
add
icebp
gs
inc
pop
retf
xor
ror
or
jnp
xor
enter
call
mov
dec
repnz
je
fisub
push
ss
jp
iret
dec
pop
push
(bad)
clc
sub
push
push
clc
mov
(bad)
ss
fcom
adc
xchg
loop
loope
sbb
xchg
sub
out
add
repz
fisttp
hlt
jecxz
jmp
icebp
sub
pusha
ja
shl
sti
push
xor
jbe
hlt
jb
adc
xor
jbe
lahf
push
jno
xchg
aaa
cmp
mov
ror
pop
int
jae
clc
mov
push
(bad)
dec
pusha
sub
scas
jb
xchg
inc
mov
dec
inc
xchg
jmp
lahf
test
out
or
fs
out
enter
and
test
mov
inc
sub
fadd
popf
jge
cwde
sub
jge
movs
xchg
lds
iret
std
or
mov
mov
ret
xchg
jl
call
push
sub
fild
ror
add
popa
outs
xchg
xor
(bad)
jge
call
push
clc
pusha
arpl
push
bound
cld
outs
leave
cmps
outs
or
gs
jb
dec
out
jecxz
pop
inc
stc
aas
mov
jbe
mov
cmps
jl
cmps
mov
inc
pop
cmps
mov
pop
adc
cmps
dec
pushf
mov
call
push
arpl
int3
push
or
dec
enter
into
dec
adc
pop
cmp
scas
popa
mov
xchg
jg
pop
jmp
cmps
in
push
mov
mov
in
hlt
imul
lds
lea
dec
jle
test
cmc
mov
pop
push
jne
in
pop
jl
cli
cmps
pop
jo
fs
dec
inc
std
jo
xor
stos
xchg
mov
sbb
jbe
retf
repnz
(bad)
sbb
pop
dec
add
push
xchg
test
xchg
xor
rcl
or
repz
pop
mov
je
shl
out
and
dec
jmp
mov
adc
or
test
dec
fcmove
js
ss
sbb
out
inc
cs
aad
lea
outs
ret
les
adc
or
push
sub
aam
push
mov
test
shl
ffreep
cmp
dec
sti
xchg
pop
pusha
push
cmp
add
xchg
dec
pop
sar
mov
pop
and
fmul
popf
stos
xor
test
outs
adc
in
xchg
outs
mov
push
adc
lods
in
out
aad
mov
jns
pop
pmaddwd
xor
loopne
cmp
mov
mov
and
es
retf
and
mov
stc
retf
clc
xchg
push
into
sub
test
inc
unpckhps
jbe
mov
mov
in
out
mov
jne
lods
ins
mov
or
xor
cli
dec
ins
xchg
test
sbb
daa
(bad)
push
iret
popa
ins
ja
ret
sub
xchg
imul
cmp
movs
enter
scas
or
ret
cmp
div
mov
xchg
mov
jae
pop
add
sbb
imul
mov
sar
shld
and
add
nop
jmp
mov
fsubr
test
dec
daa
outs
rcr
cmp
pushf
std
les
lea
jae
stc
xchg
lds
clc
rol
and
sub
out
and
std
push
outs
sub
sti
pop
int
mov
add
and
pushf
xor
test
loopne
call
mov
or
fcom
cmps
ror
retf
mov
jecxz
jmp
adc
dec
into
lds
mov
jb
adc
push
fld
inc
iret
mov
je
ror
add
lds
test
cmp
scas
cmps
in
hlt
xchg
enter
pop
push
mov
xchg
sar
inc
pop
adc
les
push
mov
stos
outs
push
adc
fdiv
pushf
xchg
xchg
repnz
aam
or
daa
(bad)
daa
pushf
cdq
lods
cmp
cli
vpunpckhbw
dec
pop
xor
and
fcom
and
mov
cwde
sub
sub
jle
imul
(bad)
or
scas
jle
movs
jp
test
idiv
test
fs
sahf
and
aaa
xor
aam
cmp
and
test
nop
cmp
mov
add
and
cmp
pop
fwait
pop
jge
add
mov
sub
inc
xchg
je
mov
add
adc
push
adc
dec
inc
shl
aas
shl
add
mov
push
cld
imul
ins
fst
push
pop
pop
or
inc
(bad)
mov
dec
addr16
mov
fwait
call
std
mov
shr
cmp
out
ins
in
lods
adc
jl
push
cmc
fisubr
pop
jg
xor
mov
(bad)
lods
jg
aas
cmc
jno
repz
out
pushf
cmp
cmp
(bad)
neg
jae
adc
pushf
data16
mul
add
dec
retf
call
pop
fsubr
xchg
xchg
loop
inc
push
sub
ja
push
push
push
add
(bad)
mov
push
loopne
cmp
add
adc
sub
test
or
fsubrp
retf
mov
jmp
cmp
or
jo
jmp
cmp
sar
add
test
sbb
rol
xchg
cdq
inc
sub
inc
aas
mov
ror
jnp
adc
push
loopne
call
fdiv
xor
leave
jmp
sub
or
pop
lods
sub
cmc
mov
xchg
mov
pushf
xor
pop
into
pop
inc
pusha
mov
mov
test
xor
sbb
push
sar
sbb
xchg
mov
xor
inc
mov
and
arpl
or
lds
mov
xchg
es
loope
and
je
es
push
imul
sbb
cs
mov
mov
mov
mov
sbb
inc
ffreep
mov
repnz
pop
cmp
aaa
pop
jnp
jecxz
jmp
shl
mov
push
push
sbb
ret
scas
f2xm1
push
vcvttsd2si
call
xor
xchg
setae
pop
sub
inc
sahf
aaa
adc
mov
shl
or
clc
in
jp
call
fimul
clc
and
fst
mov
test
push
pusha
mov
out
xchg
jg
mov
and
mov
jl
loopne
sub
adc
sbb
outs
(bad)
jno
nop
aad
ror
cli
pop
or
mov
jmp
push
shl
lds
outs
cli
inc
arpl
std
jns
mov
imul
sub
push
lods
cmp
aam
push
cmp
int
adc
or
call
popa
or
xchg
shr
retf
inc
fld
imul
in
sahf
jmp
xor
jp
push
ret
mov
push
(bad)
adc
pusha
adc
test
popf
sbb
cmc
fnstenv
fidivr
push
addr16
cmps
scas
pop
lock
stc
or
test
and
mov
inc
inc
dec
push
inc
mov
sbb
pop
scas
push
pop
out
cmps
or
and
mov
cmps
ror
push
push
mov
mov
sbb
aaa
mov
js
xchg
sbb
pop
daa
in
pop
push
scas
jg
fdiv
mov
sbb
rcl
ds
or
aas
aad
rcl
mov
inc
xchg
cld
cmp
push
inc
mov
jl
add
pop
mov
sbb
mov
aam
cmp
repnz
lds
sbb
jge
lock
das
mov
xor
add
jmp
mov
icebp
popw
jne
jns
mov
jb
fisttp
(bad)
test
call
dec
and
outs
push
mov
mov
inc
mov
adc
outs
cmp
cmp
sahf
jnp
xlat
jno
jg
out
cmp
ret
add
push
jno
mov
push
rcr
out
and
mov
mov
jg
fiadd
outs
dec
and
loop
shl
mov
ret
and
xor
ret
popa
jp
inc
imul
sbb
pop
imul
cwde
movs
jmp
push
into
movs
leave
mov
stos
mov
pusha
ins
and
add
call
popf
jbe
call
add
xor
cli
cmps
ror
and
(bad)
out
enter
(bad)
xchg
sti
mov
clc
push
mov
mov
cmps
(bad)
pop
xchg
mov
mov
fwait
jnp
gs
push
hlt
mov
cmps
or
pop
push
repz
or
sub
mov
mov
push
dec
enter
cmp
pushf
fs
std
sub
pop
inc
mov
add
xor
xchg
iret
mov
sub
out
mov
es
push
pop
fnsave
imul
xor
ficom
sub
mov
pop
scas
test
and
(bad)
js
lods
mov
xor
imul
adc
mov
ficom
push
inc
test
jns
popf
in
lahf
cmp
pop
in
cwde
pop
cli
inc
iret
fsubr
pop
loop
cmps
dec
mov
fcmovnu
jecxz
adc
ret
outs
cmp
mov
ds
enter
adc
sub
push
std
and
mov
imul
adc
(bad)
sub
push
add
call
xchg
es
xor
mov
push
test
out
pop
mov
dec
and
lea
int3
push
idiv
leave
xchg
mov
test
cmp
adc
jle
pop
leave
fisub
rcl
ss
inc
outs
sbb
sbb
imul
sub
sub
in
inc
mov
pop
sub
inc
cmp
mul
pop
and
cmp
dec
out
ins
aad
sub
jecxz
mov
enter
inc
adc
mov
(bad)
cdq
sub
adc
ds
pusha
pop
rol
idiv
mov
ficom
mov
mov
and
arpl
sub
hlt
dec
sub
jae
retf
comiss
push
xchg
dec
bnd
dec
data16
xchg
in
cmp
into
xchg
leave
push
mov
push
dec
mov
lea
xor
int
jle
in
jbe
ds
scas
xchg
std
nop
cwde
and
aas
call
add
nop
cmp
inc
clc
xchg
or
into
sbb
push
loopne
or
dec
cs
(bad)
cmp
out
jl
pop
gs
retf
jo
mov
sbb
pushf
add
xor
test
pop
enter
str
sbb
add
adc
(bad)
repz
dec
mov
push
mov
rcr
fldcw
(bad)
jno
loopne
sub
inc
xor
dec
es
cmp
(bad)
js
imul
sar
mov
dec
add
lds
add
jb
lds
mov
fstp
push
pop
cs
cmc
mov
fwait
jmp
or
repnz
pop
idiv
nop
adc
dec
jmp
mov
dec
jo
mov
out
inc
and
xchg
mov
mov
jge
mov
pop
imul
or
push
xor
(bad)
mov
jl
cmps
jl
jb
retf
icebp
mov
or
or
ret
out
push
test
mov
sbb
mov
sahf
adc
aaa
in
push
out
pusha
sub
mov
je
mov
leave
xor
cmp
sub
mov
test
mov
movs
mul
pop
adc
test
dec
add
sub
push
imul
in
mov
rcl
inc
push
inc
out
std
sbb
add
adc
xchg
ins
mov
xor
jecxz
add
sbb
xlat
movs
(bad)
jae
outs
dec
xchg
sub
dec
loop
push
loope
loop
xor
imul
mov
ds
loopne
lods
lds
test
push
and
pop
pusha
out
cmp
imul
mov
int3
imul
fyl2xp1
mov
xchg
add
sbb
enter
call
sub
jg
imul
pop
inc
outs
pop
cmp
pop
cdq
xchg
lock
shr
dec
xchg
mov
jmp
pop
cmp
(bad)
iret
mov
mov
lods
sub
out
cli
add
jae
sbb
aam
test
mov
mov
jge
jns
push
(bad)
xchg
sti
scas
dec
and
xlat
xchg
mov
inc
call
loopne
inc
push
pop
push
jb
add
icebp
sub
gs
push
in
dec
or
mov
sub
test
imul
test
clc
pop
lds
in
cmps
inc
xor
and
and
ja
push
scas
mov
push
mov
not
adc
mov
test
inc
clc
pushf
dec
inc
jp
int3
popa
add
dec
test
ds
mov
std
fs
and
aaa
cld
std
cdq
or
arpl
enter
jo
pop
xchg
mov
scas
lods
gs
movs
jo
mov
daa
data16
and
sar
or
or
out
imul
(bad)
in
cmps
arpl
and
xlat
les
ja
sbb
xlat
jg
fst
and
jg
sar
and
or
or
ins
popa
loope
push
ret
leave
xor
popf
outs
imul
and
dec
push
jl
adc
fst
inc
add
push
dec
repz
lahf
loopne
icebp
stc
sahf
outs
inc
mov
or
clc
shr
mov
cmp
sub
and
adc
and
cmp
hlt
inc
jle
setae
repnz
cs
gs
and
fldenv
div
fsubr
ror
repnz
dec
test
aaa
sbb
add
xchg
add
xlat
in
sti
cs
test
mov
mov
fcomp
cmps
fcmovb
je
push
bnd
loop
adc
adc
lock
jne
scas
sbb
daa
pop
mov
xchg
popa
sar
xlat
rol
pop
dec
fsubr
imul
xchg
cmp
mov
sbb
pop
xchg
jae
jl
int3
imul
mov
add
fld
mov
pop
pop
dec
jns
or
xor
add
sub
xchg
push
jmp
fimul
cdq
hlt
sub
pop
add
sbb
loope
in
ret
sub
cmp
xchg
add
mov
fwait
mov
mov
cld
shr
xchg
fimul
shr
clc
int
adc
mov
sub
mov
(bad)
js
add
clc
leave
mov
xchg
jne
test
leave
rcl
cmp
jle
ror
sub
dec
xchg
and
jl
(bad)
lahf
loope
mov
mov
lahf
enter
mov
hlt
dec
pop
and
fiadd
mov
lahf
sub
and
dec
push
inc
xchg
sbb
ret
pop
ficomp
inc
sub
(bad)
clc
repnz
xor
loopne
lock
fdiv
aaa
cli
jmp
cmps
retf
adc
pop
jno
lods
lock
test
pop
push
cmp
xchg
pmaxub
pop
gs
sar
dec
jmp
jecxz
outs
push
mov
xor
loope
aam
jno
mov
xor
mov
xor
jns
push
movs
or
cmc
push
add
pop
and
(bad)
sbb
add
ins
xlat
dec
xor
cmp
jp
fcmovnb
jnp
or
mov
in
or
out
(bad)
ficomp
jge
scas
jl
fisttp
cmp
into
or
aaa
lds
rcr
out
sar
stc
and
loope
jmp
or
in
retf
in
dec
jecxz
mov
sahf
fs
dec
push
stos
or
xor
(bad)
cs
inc
add
pop
inc
jbe
sub
cmps
sbb
test
dec
mov
inc
and
mov
popf
add
(bad)
jle
xchg
adc
cwde
adc
loop
inc
out
adc
xchg
fdivr
push
xchg
jno
inc
int
lock
mov
dec
mov
or
loope
xchg
jle
sbb
ss
fiadd
scas
pushf
fldenv
scas
jne
mov
(bad)
lea
jno
ja
inc
movs
add
cs
inc
push
dec
stc
ds
inc
out
sub
jle
repz
xor
fiadd
ins
div
lds
pushf
mov
dec
into
imul
dec
dec
sbb
or
les
mov
scas
mov
out
and
pop
fadd
mov
cmps
test
loope
push
loope
cdq
xor
repz
ja
rol
inc
jecxz
scas
mov
popa
popa
or
sbb
mov
ror
and
adc
sbb
and
pusha
xor
add
leave
movs
shl
or
adc
test
adc
jg
pushf
xchg
icebp
push
cmps
jbe
dec
lods
jbe
xchg
pop
(bad)
data16
hlt
cmp
push
stc
mov
xchg
mov
or
push
js
outs
pusha
shr
popa
mov
imul
pop
pusha
and
pop
xchg
leave
jno
lahf
out
jle
gs
repnz
cmp
ret
rol
aas
test
pop
xor
ds
jae
sbb
inc
mov
in
cmp
mov
dec
adc
outs
inc
test
popa
sub
inc
(bad)
mov
addr16
jmp
inc
push
mov
fadd
enter
jo
sbb
outs
xor
out
or
push
aaa
in
pop
jnp
outs
inc
outs
shr
fisubr
jmp
stos
repnz
into
aam
pushf
cmp
push
jno
imul
ja
sbb
jmp
mov
nop
cmp
ret
sub
imul
mov
mov
mov
imul
into
loop
test
bound
les
enter
shl
dec
cmc
js
cwde
add
in
sub
push
neg
inc
std
test
cmp
push
retf
or
imul
jmp
scas
cmp
in
dec
pop
or
dec
ret
mov
xor
data16
aad
xchg
loopne
and
mov
out
imul
hlt
(bad)
test
cmp
inc
sbb
jle
mov
pop
ja
lock
mov
push
add
clc
int3
je
and
(bad)
sub
popf
cmps
jno
jmp
mov
mov
ror
pushf
popa
xchg
xchg
mov
mov
sub
xor
cmps
sub
inc
and
stos
adc
popf
inc
inc
inc
dec
pop
cmps
outs
jbe
jb
dec
mov
jl
cwde
xor
into
sti
icebp
and
jecxz
dec
jecxz
(bad)
loopne
dec
fs
add
hlt
outs
test
in
inc
or
and
push
mov
pop
dec
leave
mov
adc
sbb
mov
lahf
lds
cmps
adc
and
inc
jmp
xchg
push
adc
sub
cmc
addr16
mov
fst
push
push
cmp
xchg
jmp
in
dec
in
loopne
mov
adc
aam
call
cmps
mov
(bad)
enter
in
push
sbb
mov
and
mov
cs
test
sub
inc
xlat
add
jg
mov
(bad)
in
(bad)
into
js
hlt
fistp
push
xchg
cmp
inc
leave
cwde
xchg
(bad)
sbb
push
cli
cmp
cmp
xchg
pop
(bad)
rcr
jns
xlat
imul
sbb
or
inc
cli
neg
mov
ja
idiv
das
scas
cdq
and
stc
out
dec
xor
and
jp
icebp
out
cld
int3
adc
pushf
retf
push
ret
lahf
rcl
jecxz
add
cmc
push
sub
setno
aad
push
xchg
push
mov
mov
mov
sbb
cwde
out
loop
jbe
retf
(bad)
mov
retf
(bad)
daa
mov
mov
dec
sti
cmp
cmp
gs
pop
jae
mov
xor
cmp
jg
mov
ret
js
xchg
xchg
dec
leave
jns
pop
dec
jmp
or
enter
adc
adc
cmp
and
addr16
(bad)
icebp
jne
scas
xchg
aaa
xor
cs
add
adc
jp
(bad)
xlat
add
push
repnz
cmp
xchg
or
rcl
inc
adc
xlat
push
mov
neg
into
cdq
lea
xchg
outs
rol
jb
sub
popa
sbb
adc
mov
imul
leave
sbb
pop
xor
mov
aas
xor
or
push
mov
jmp
mov
fiadd
mov
cmp
jb
pop
push
cmc
bound
ds
(bad)
jl
test
jecxz
test
and
mov
jge
add
cli
cmc
inc
sub
add
fbld
pop
xchg
loop
push
jmp
mov
cmps
cmp
mov
sub
jo
aas
inc
jle
leave
mov
jae
(bad)
push
jecxz
popa
(bad)
mov
popf
not
fwait
cmc
pushf
in
ficom
push
mov
(bad)
fdiv
icebp
ins
add
mov
jnp
div
retf
nop
int
cmp
and
pop
movs
pop
cmp
call
mov
aas
stos
cmps
repz
xchg
add
(bad)
sahf
cmp
push
es
add
xchg
pop
inc
pop
jmp
adc
xor
jnp
repz
mov
loop
ret
xor
adc
fcmovne
lds
push
mov
aaa
fild
cmp
test
xchg
das
cmp
stc
ins
jnp
and
ins
into
ret
jb
and
imul
xchg
lea
shr
xchg
movs
repnz
sub
mov
out
sub
fiadd
adc
sbb
loop
jo
lahf
and
daa
fnclex
(bad)
push
and
ret
sub
xor
pop
enter
and
out
nop
add
mov
clc
mov
fidivr
call
xchg
ins
cmp
push
sbb
and
mov
(bad)
push
dec
jns
frstor
bound
test
jns
call
pop
clc
mov
in
mov
and
add
mov
cmp
icebp
ret
push
fs
cld
push
in
inc
out
and
dec
sbb
repnz
sbb
ror
imul
dec
add
dec
jne
lods
div
xchg
mov
xor
in
(bad)
push
xchg
ss
cld
cmps
in
fcom
popf
nop
(bad)
jl
fsub
mov
call
fdivr
cmp
sub
mov
jmp
mov
or
or
dec
jp
add
shl
(bad)
stos
ins
pop
sbb
aaa
pop
add
ret
sub
and
mov
xchg
or
inc
fdiv
loope
rcr
es
add
mov
or
xchg
pop
cmp
(bad)
stc
popa
cmps
clc
dec
lods
mov
cmp
in
adc
adc
and
inc
jo
sub
movs
adc
jne
es
mov
cmp
mov
sub
aas
fild
dec
sub
or
iret
mov
jmp
jle
mov
mov
lock
jg
outs
popa
(bad)
adc
fstp
mov
inc
addr16
mov
add
aaa
mov
aad
(bad)
stos
jne
mov
pop
loop
sbb
data16
sti
outs
(bad)
(bad)
cmps
push
jmp
inc
xor
pop
and
push
xor
xor
or
mov
dec
mov
imul
cld
pop
shr
cmps
(bad)
or
cmp
sar
in
fdivr
mov
fucomip
xlat
cmp
cmp
aam
sbb
setns
jp
out
sub
lods
(bad)
cli
outs
ins
popf
or
in
stos
dec
bound
jae
test
mov
pop
test
fs
data16
stc
sti
scas
lock
cmp
scas
mov
and
lods
dec
retf
rcr
clc
jl
xlat
mov
cmp
inc
sahf
enter
sub
in
dec
jmp
jmp
and
lods
into
push
jmp
xchg
pop
xchg
dec
dec
shl
stos
jle
cmp
pop
in
push
push
call
daa
icebp
pop
mov
cmp
mov
stos
mov
xor
clc
jge
add
adc
imul
test
loop
xor
sbb
and
or
cwde
bound
add
stc
mov
push
cli
mov
pop
(bad)
lock
jne
into
xchg
add
stc
xchg
pop
iret
xchg
fldenv
or
adc
in
add
xchg
in
(bad)
mov
das
fs
dec
push
pusha
inc
in
jl
test
and
(bad)
cmp
lea
dec
inc
iret
shl
int
cmp
mov
imul
mov
daa
jmp
push
(bad)
or
in
stc
inc
fbld
stos
jno
or
test
retf
mov
pop
mov
push
mov
push
push
cld
cmp
pusha
mov
loopne
shl
mov
xchg
aad
outs
stc
and
jg
mov
pop
jp
out
add
out
stc
sbb
jmp
sbb
(bad)
dec
pop
loopne
cld
push
mov
jp
sub
push
xchg
fcmovnbe
adc
outs
mov
push
cmps
ins
mov
mov
in
xchg
or
inc
iret
lahf
dec
add
in
or
push
mov
jmp
mov
jl
icebp
fwait
pop
mov
mov
out
loop
cmc
out
icebp
xchg
mov
fild
(bad)
cmp
xchg
adc
outs
mov
int
test
retf
jnp
mov
daa
inc
sub
or
inc
test
sub
mov
mov
minps
rcl
jle
out
into
sbb
rol
mov
push
xor
test
push
adc
sub
imul
or
ror
arpl
imul
sbb
ss
jnp
test
xchg
cmp
xor
jbe
cli
lods
mov
jecxz
in
push
mov
cmp
lds
dec
add
adc
adc
cli
dec
and
popf
popa
or
shl
mov
sub
add
cld
sub
jmp
jnp
adc
div
fs
xor
xchg
stos
aas
mov
push
mov
rol
ins
cdq
mov
inc
(bad)
cmp
add
(bad)
fnstenv
out
pop
push
jb
call
fwait
in
xchg
aas
ret
imul
cmp
cmp
xor
mov
push
aad
(bad)
pop
mov
and
rol
in
jb
cli
push
(bad)
bound
xchg
je
loop
icebp
pop
pop
cdq
test
int
jmp
ret
call
fdivr
fld
or
xor
sub
pop
pushw
or
sti
lods
cdq
sub
lods
mov
adc
in
pop
inc
aas
(bad)
shl
imul
int
cmp
xchg
adc
xchg
xchg
fldcw
test
xchg
xchg
mov
(bad)
sub
pop
mov
stos
cmps
fstp
mov
mov
js
ss
mov
popa
aad
pop
pop
ja
dec
cmp
test
cmp
(bad)
je
mov
inc
sub
push
ins
push
sar
mov
push
into
xchg
clc
jb
adc
mov
jns
hlt
test
std
inc
aas
mov
jbe
pusha
aaa
add
add
adc
mov
call
xrelease
pop
jge
cmps
es
adc
outs
pusha
fist
mov
mov
cmc
sub
jae
lods
or
pop
test
or
int3
jle
sahf
inc
or
or
popf
int3
cmp
in
add
jae
xor
(bad)
mov
into
xor
push
mov
ret
or
sar
stos
jmp
int3
jg
jp
das
out
jge
inc
mov
xlat
je
fisttp
push
out
mov
sti
and
(bad)
adc
cmp
(bad)
fidiv
(bad)
(bad)
pop
ss
jo
(bad)
bound
or
add
pop
in
mov
sti
aas
xor
cmp
fidiv
push
bnd
mov
jmp
xchg
push
inc
nop
add
ret
mov
mov
imul
or
neg
jmp
dec
pop
xchg
cmc
sub
cmc
mov
call
aaa
inc
inc
addr16
mov
xor
aas
xchg
pop
test
jo
loope
mov
sbb
adc
mov
es
pop
std
fs
add
pop
sti
fld
push
out
out
inc
pop
sbb
adc
pop
xchg
pop
jmp
jge
cli
outs
fbstp
sbb
imul
out
push
mov
sub
and
mov
je
jae
nop
cmp
add
outs
xor
sub
cmp
test
jp
fwait
inc
mov
lds
or
sub
and
inc
arpl
push
arpl
dec
(bad)
push
test
dec
int3
scas
xchg
sub
icebp
push
inc
int3
xor
imul
arpl
loopne
dec
mov
dec
movs
scas
mov
mov
repz
out
sub
je
ret
pop
cli
mov
cwde
sub
int3
neg
cmp
cmp
bound
adc
(bad)
add
int
xchg
mov
push
(bad)
mov
mov
pop
popf
movs
out
jmp
pop
mov
add
jp
ins
(bad)
lods
imul
and
test
fnstcw
(bad)
mov
push
int
clc
jle
cmps
cmp
cmp
sub
shr
add
stos
xor
inc
sbb
add
shl
clc
mov
xchg
icebp
pusha
or
loopne
ja
push
xor
jne
jg
call
rcl
std
(bad)
int3
inc
and
(bad)
jg
and
ins
cmp
mov
dec
or
jmp
mov
shl
mov
inc
addr16
xlat
inc
mov
mov
and
mov
outs
jle
imul
or
or
jae
mov
mov
fdivrp
push
or
sbb
pop
xor
leave
mov
or
mov
pusha
js
repz
mov
xor
push
mov
faddp
mov
xchg
fsubr
xchg
sti
jno
lock
pop
das
fldz
mov
into
mov
mov
movs
jmp
data16
(bad)
pop
add
pop
test
imul
das
cmp
in
mov
or
hlt
inc
jle
test
inc
stos
ins
mov
repnz
push
imul
adc
dec
ret
out
out
sar
cmp
dec
daa
movs
mov
push
mov
sbb
pop
inc
faddp
arpl
xor
jle
test
jmp
jne
sbb
cmps
fiadd
sbb
push
imul
dec
push
adc
imul
or
jl
sub
cmps
pop
imul
add
retf
clc
pop
jmp
stos
fisttp
mov
push
inc
fst
imul
xchg
scas
add
popa
push
xchg
cmps
add
inc
inc
loop
mov
es
loope
jmp
sub
jmp
sub
xchg
das
fst
ja
out
inc
mul
and
lods
pop
add
mov
cld
scas
jns
mov
je
inc
fsubr
xor
push
jmp
mov
sub
sub
mov
xor
cli
lahf
push
sub
mov
push
jnp
push
inc
cmps
loopne
pusha
sbb
aam
call
cwde
mov
ror
popa
test
jp
cwde
adc
and
movs
lock
(bad)
mov
aad
push
dec
ds
dec
es
ror
inc
clc
push
sahf
xor
xchg
pushf
or
cs
rcr
or
and
pop
cmp
cwde
call
pushf
jmp
mov
rcr
cwde
sub
sbb
loope
(bad)
outs
adc
sbb
fidivr
push
pusha
inc
inc
aaa
dec
int
loop
mov
add
push
cmp
push
jmp
sub
into
test
in
cmp
int3
inc
mov
push
xor
dec
sbb
cmp
jbe
jb
movs
enter
xchg
pop
adc
iret
push
pop
repnz
inc
loopne
(bad)
and
addr16
icebp
push
pop
inc
lods
mov
xor
xchg
sub
mov
dec
xchg
mov
ret
popa
repz
xchg
ret
xchg
mov
movs
jecxz
retf
and
mov
lods
mov
xchg
sar
jecxz
in
mov
stos
popa
fwait
addr16
jns
or
sub
cmp
push
xchg
cli
push
inc
jo
adc
jge
out
dec
cmps
push
mov
sar
loope
cmp
sbb
push
sub
pop
mov
in
and
cli
inc
icebp
mov
inc
jge
xchg
test
je
fisttp
loop
fld
or
push
xor
push
(bad)
pusha
rcr
and
ins
mov
lds
cmp
inc
not
xor
xor
push
sbb
dec
mov
pushf
ja
test
sub
jecxz
xchg
int3
in
inc
ror
jno
retf
mov
in
push
jmp
sbb
retf
aas
imul
cld
shr
sar
pop
out
js
shr
push
adc
and
mov
inc
(bad)
jl
mov
repz
ss
jns
fcom
shl
dec
adc
push
adc
mov
push
xchg
adc
pop
cs
push
dec
ret
or
mov
mov
les
cdq
sbb
pushf
aas
jo
sbb
cmp
xchg
call
movs
pop
and
outs
push
cli
jg
test
out
and
(bad)
jae
cld
push
sar
mov
dec
inc
sti
cwde
or
inc
(bad)
cmp
in
sbb
addr16
lea
sub
frstor
mov
jle
js
aaa
sar
push
cmp
pop
stos
sbb
add
mov
ror
mov
int3
sub
ror
cdq
xor
ins
cmp
sbb
fldcw
ja
or
sub
icebp
pushf
lahf
sahf
es
add
jg
aam
dec
cmp
mov
hlt
mov
and
sbb
out
adc
jmp
test
jmp
xchg
dec
out
js
dec
adc
std
adc
dec
(bad)
loopne
pop
data16
mov
inc
lea
sbb
add
sub
inc
jecxz
call
mov
in
pop
scas
mov
mov
in
or
or
jns
int3
shl
jecxz
daa
inc
pop
sahf
push
and
jge
jmp
adc
fistp
cld
sahf
mov
mov
mov
pop
js
mov
icebp
fbld
jbe
dec
test
jno
push
loopne
xor
(bad)
scas
stc
popa
arpl
push
sub
xor
movs
jbe
mov
js
and
mov
lahf
xchg
adc
push
add
jecxz
jl
push
inc
hlt
cmp
cmp
or
imul
mov
sub
pop
jmp
xchg
cmp
add
das
push
lock
and
sbb
dec
stos
pushf
or
sti
out
and
ins
jo
sbb
pop
fwait
retf
jne
into
xchg
cmp
nop
add
inc
jmp
clc
mov
sub
mov
xchg
pop
xchg
push
push
ins
and
and
out
lds
fwait
mov
adc
iret
mov
retf
sub
sub
fimul
outs
cwde
lea
xor
mov
mov
cld
cmp
mov
add
imul
xchg
jl
int
mov
cmp
xor
xor
jl
icebp
sub
mov
clc
jl
pop
movs
das
imul
out
sbb
mov
stos
mov
xor
jle
mov
push
push
jmp
lods
jg
inc
test
adc
pop
jmp
sub
xor
add
outs
loopne
(bad)
ret
loop
xchg
push
(bad)
rol
mov
lahf
sbb
in
adc
fiadd
adc
jp
cmp
das
sbb
jbe
cmc
adc
sar
or
out
or
sub
scas
call
loop
loop
xchg
push
ret
sbb
arpl
nop
call
add
es
push
fisub
xchg
mov
mov
mov
scas
int3
or
push
cmc
jnp
or
out
cdq
(bad)
jns
rcl
aad
mov
cmp
addr16
in
push
mov
or
test
mov
sub
jnp
imul
mov
inc
stos
(bad)
fnstcw
leave
and
adc
and
sub
je
test
pop
push
jp
mov
inc
nop
repnz
lods
adc
test
cmc
bound
into
sbb
pop
shl
shl
call
and
int
xor
test
ins
lock
cmp
add
pusha
out
mov
ja
xor
imul
je
cmps
imul
ja
stos
aaa
test
or
add
shl
sahf
pop
sbb
dec
js
arpl
pop
lds
cmps
test
inc
in
jecxz
jmp
repnz
cmp
mov
mov
ins
xchg
fstp
and
bound
repnz
pop
push
jno
adc
sub
jg
mov
cmp
cld
xlat
test
jo
daa
ffreep
adc
stos
adc
test
jo
sbb
sub
mov
mov
xor
jne
loopne
inc
inc
std
jns
fstp
iret
mov
stos
push
aaa
push
sub
jae
sahf
dec
adc
push
cwde
lods
mov
push
jmp
inc
test
pop
or
xor
jle
add
mov
movs
push
jge
or
scas
sub
dec
xchg
pop
bound
jecxz
sti
(bad)
pop
push
clc
or
dec
inc
sbb
sub
pop
jmp
repnz
iret
push
jbe
sub
cdq
cmc
jmp
pusha
ds
dec
movs
popa
loop
or
adc
xchg
pop
mov
popa
rep
jge
cmp
call
lods
cmp
or
(bad)
(bad)
and
or
push
fdivr
xchg
movhps
in
movs
adc
sub
test
call
xor
fidivr
nop
lods
call
jb
sbb
nop
movs
vpextrw
dec
mov
push
cmp
sbb
cmp
std
test
cld
lock
out
jb
mov
ins
popaw
aas
mov
inc
inc
sahf
in
adc
in
or
cs
mov
pop
pop
jle
cmp
or
outs
mov
xchg
pop
in
pushf
jmp
jns
in
mov
xor
retf
mov
jge
jne
call
push
clc
jle
and
sbb
fistp
mov
cmp
cld
pop
imul
mov
dec
test
cmp
inc
repnz
xchg
int3
stos
sbb
fsubr
js
cmp
mov
pop
fimul
inc
nop
dec
dec
js
retf
jb
es
test
sub
and
fild
jnp
rcl
pop
scas
add
loop
les
int3
push
pop
mov
rcl
sbb
jae
out
in
mov
pop
cmp
jnp
(bad)
movs
neg
sub
clc
fidiv
mov
aaa
mov
int
dec
enter
data16
dec
ss
jnp
loope
ja
es
ins
das
stc
mov
pop
mov
cwde
call
loope
mov
add
dec
push
pusha
mov
adc
and
xor
ins
ret
sub
mov
push
push
es
pusha
shr
call
mov
cwde
ret
push
neg
cmp
sbb
out
or
pop
imul
pop
fadd
or
les
std
popf
mov
add
cld
cmp
push
hlt
or
out
push
jne
cmp
cmp
add
inc
lahf
fmul
xchg
dec
sbb
dec
(bad)
clc
(bad)
out
daa
fwait
jge
mov
(bad)
imul
dec
xor
jb
je
xor
popf
xchg
repz
push
pop
jo
fst
mov
jbe
sbb
mov
mov
inc
inc
enter
mov
(bad)
cmps
fucom
(bad)
mov
js
stos
(bad)
aam
mov
(bad)
pop
xchg
scas
ds
repz
mov
rcr
add
jle
mov
in
mul
pusha
shl
cmp
dec
jne
xchg
fwait
and
xchg
xchg
mov
inc
pop
fsub
fs
or
sti
jge
lock
loope
cmp
jno
sti
fisttp
cli
outs
imul
scas
xlat
repz
or
das
and
imul
push
aad
lock
in
cmp
(bad)
js
test
cli
lods
pop
das
dec
xchg
ss
xchg
add
imul
retf
ret
xor
sub
add
or
shl
and
mov
gs
in
mov
test
pop
push
or
ret
loop
arpl
shl
test
ja
retf
scas
inc
stos
stc
arpl
popf
ins
fsubr
cmp
mov
and
jmp
mov
ss
push
sub
in
adc
lds
pop
push
add
retf
fwait
js
fild
test
and
call
mov
mov
sahf
xor
cdq
les
xor
cmps
icebp
mov
mov
jns
(bad)
in
cld
jno
xlat
push
jmp
idiv
shr
ss
popa
jg
iret
or
inc
pop
jg
sub
adc
das
je
ret
pusha
outs
adc
test
sub
enter
sbb
jp
xchg
push
lds
mov
scas
jnp
jmp
imul
ds
cmp
je
aas
sbb
xchg
scas
lahf
inc
fist
iret
inc
pop
ds
xor
aaa
loopne
pusha
xchg
jnp
mov
jecxz
hlt
inc
fldl2e
ins
push
shl
mov
imul
ror
jo
or
mov
xchg
cmp
sbb
xchg
mov
xchg
sbb
out
data16
xchg
ins
outs
fld
int
pop
push
addr16
push
cli
push
ins
dec
xchg
nop
jb
pop
daa
jb
push
in
pop
jb
xlat
mov
pop
icebp
jae
inc
sahf
and
xchg
outs
ret
or
in
dec
pop
push
pop
mov
(bad)
(bad)
pop
add
fstp
outs
push
pushf
jle
mov
pop
or
dec
les
cmp
sub
imul
ins
fnsave
push
(bad)
or
inc
cmps
mov
mov
stos
cld
(bad)
jmp
fisttp
mov
jmp
and
rcl
and
stc
test
outs
adc
dec
aaa
and
mov
or
jmp
mov
(bad)
mov
gs
cmp
retf
jle
mov
or
clc
xchg
xor
iret
add
(bad)
imul
xor
jle
xchg
imul
sub
xor
popa
(bad)
mov
shl
gs
out
pop
dec
(bad)
mov
mov
or
pop
mov
icebp
ret
jno
push
iret
sbb
cli
push
or
int
jnp
std
and
xor
jg
ja
fdiv
inc
lahf
aas
ficomp
add
pop
cmp
pushf
int
mov
lea
jo
pop
shr
bound
call
mov
mov
outs
mov
popa
pop
imul
xor
stos
jl
ror
dec
mov
jecxz
xor
enter
dec
mov
xchg
mov
fstp
inc
addr16
or
scas
int
test
pop
lds
pop
mov
out
ins
pop
mov
inc
cmp
les
xchg
leave
adc
outs
or
inc
mov
ret
add
xchg
or
scas
in
and
adc
(bad)
loopne
mov
jno
dec
(bad)
lahf
pop
lea
loope
xchg
outs
pop
pop
loope
xchg
aaa
pop
pop
mov
ja
repz
jmp
pop
mov
mov
in
not
sub
dec
cmc
call
mov
jbe
adc
or
hlt
cdq
push
or
jmp
xchg
xor
pusha
shl
cmp
imul
loop
pop
cli
cmp
jle
lea
int
push
jmp
xor
inc
jmp
pop
xor
xchg
adc
fisub
adc
stos
mov
adc
push
out
retf
add
xor
ret
mov
sub
jge
xor
mov
mov
popa
fwait
jg
mov
push
sub
inc
cmc
(bad)
nop
mov
jne
xor
adc
shl
jne
jecxz
add
sbb
jg
mov
sti
xor
dec
mov
add
hlt
ds
push
lods
shl
nop
ja
arpl
jle
push
movs
(bad)
cdq
cmp
rcr
pop
xor
les
sub
fcmovu
div
mov
js
pop
fist
dec
or
scas
mov
xchg
push
or
ds
jne
push
mov
xlat
pop
stos
xor
mov
lahf
mov
push
outs
push
fistp
cmp
mov
adc
cmp
mov
test
retf
pop
test
imul
pop
jl
or
or
push
mov
out
pop
das
cmp
outs
das
sti
mov
sbb
fwait
or
nop
xor
sbb
lds
fldenv
cmp
inc
and
(bad)
xchg
xchg
movs
dec
repz
sbb
mov
ret
aad
mov
shr
dec
push
movs
jno
xchg
fidivr
mov
jle
test
inc
sub
pop
jb
add
fisttp
(bad)
sub
xor
jno
mov
xlat
push
lods
fnsave
ss
out
fwait
or
jle
push
push
adc
std
jmp
test
in
adc
add
cmp
cmp
xor
lea
ret
mov
in
clc
adc
rcr
push
leave
std
rcl
mov
push
nop
or
pop
inc
stc
add
push
cmps
cdq
lock
or
adc
jle
inc
vpshufd
push
daa
lods
mov
jno
shl
in
add
dec
xchg
pop
push
push
xchg
int3
pop
test
xor
ret
loopne
fisubr
fwait
and
fiadd
dec
push
sar
jp
mov
sub
xor
data16
test
ror
push
pop
push
and
adc
push
add
mov
mov
pop
mov
loop
or
sub
mov
fnstenv
or
xchg
mov
mov
nop
imul
or
cmps
dec
aaa
mov
mov
aaa
jge
fcom
xor
and
sbb
mov
mov
sub
cmp
adc
(bad)
int3
mov
mov
jp
pop
les
scas
sbb
push
jnp
bound
out
mov
inc
sub
jle
jne
stos
icebp
popf
(bad)
fiadd
imul
movs
mov
mov
xchg
stos
sub
push
add
jbe
xchg
mov
fcomp
pop
push
shr
pop
mov
cli
mov
cmp
mov
int
pop
aad
bound
dec
movs
jne
cmp
mov
mov
not
cmp
iret
std
sbb
pop
retf
sub
pop
out
mov
inc
ja
xor
adc
sub
lea
dec
cld
pop
(bad)
xlat
aas
in
sub
mov
push
and
mov
int3
adc
jl
jo
xchg
call
loop
mov
ins
pop
mov
cmps
sbb
pushf
jns
dec
or
and
nop
retf
jg
shl
clc
retf
int3
mov
hlt
sbb
je
dec
cmp
cdq
pushf
or
mov
mov
pop
mov
jp
sbb
mov
test
sahf
dec
mul
mov
add
das
sub
mov
call
popf
jp
and
cli
js
and
pop
sbb
jle
add
mov
mov
inc
in
icebp
dec
stos
mov
jne
dec
aad
mov
lods
clc
mov
sbb
sar
jns
out
cmc
les
add
cmc
mov
xor
mov
adc
jae
or
xchg
inc
jbe
enter
xor
ins
out
test
adc
mov
ds
push
jg
dec
sub
sub
cmps
(bad)
aad
lock
jns
popf
test
mov
and
push
jbe
jne
into
jne
xor
xor
adc
fistp
xchg
scas
data16
outs
sub
inc
fwait
jecxz
sbb
push
stos
xchg
inc
jmp
rcr
xchg
push
out
or
(bad)
xor
sbb
movs
sub
cmp
pop
jb
scas
movs
jg
xchg
xchg
jp
xlat
dec
inc
add
push
cmps
shl
popf
cmp
sub
cmp
retf
jmp
retf
fisttp
iret
scas
or
add
jb
cmp
test
cdq
daa
sub
scas
popa
mov
inc
cmp
cli
cs
and
(bad)
cmp
test
fs
inc
xchg
pop
pop
xchg
sub
add
popa
adc
pop
icebp
test
add
pop
int
ret
or
push
xor
cmp
das
in
jge
dec
sbb
cwde
lods
mov
or
push
int
jns
fisub
ss
xor
pop
push
sub
in
imul
(bad)
bound
and
pop
cmc
pop
(bad)
dec
into
jbe
scas
add
icebp
inc
(bad)
xchg
push
cdq
int3
retf
lock
dec
xor
sti
push
dec
fadd
xchg
(bad)
and
push
test
mov
imul
(bad)
mov
test
cmp
cmp
jbe
jp
sub
rol
nop
cmps
inc
or
or
lea
or
lods
test
and
jl
shr
lods
lock
mov
jns
test
xchg
and
mov
jbe
jnp
and
sti
es
out
push
mov
ins
cmp
mov
rcl
push
int3
popa
call
fistp
xchg
ja
sbb
jp
and
cmp
pop
push
ss
call
or
jmp
mov
mov
jne
pop
sbb
jo
xchg
xchg
xor
inc
imul
adc
cmp
mov
stos
aaa
cmp
and
(bad)
mov
mov
mov
mov
pop
inc
cmp
scas
or
sub
mov
mov
les
std
mov
mov
inc
loopne
scas
or
nop
fisubr
jne
cmp
pushf
clc
xchg
retf
xor
sub
les
stc
push
popf
add
jb
adc
aaa
gs
test
push
adc
or
cli
inc
fwait
mov
cmovg
pop
cld
mov
cwde
cdq
pop
(bad)
jne
arpl
sbb
jnp
in
lods
dec
push
std
cwde
xchg
mov
dec
push
jecxz
loop
push
mov
rol
fcomp
ja
mov
data16
sahf
rcl
push
jmp
xor
mov
stos
push
fs
adc
xor
dec
stc
cmps
add
sti
or
xchg
aas
out
aas
fcomp
inc
adc
gs
iret
test
ret
loop
xchg
dec
js
sbb
mov
push
cld
bound
jno
dec
daa
sbb
xchg
mov
mov
adc
mov
mov
sbb
push
lea
push
add
jmp
into
xchg
cwde
and
inc
sub
cmp
jecxz
xor
or
pop
call
test
retf
or
fld
rcl
lods
loope
(bad)
sbb
and
lods
mov
lds
xchg
loopne
mov
sub
xchg
cmps
push
es
(bad)
jl
pop
ror
(bad)
push
jp
and
xchg
adc
sub
test
rcr
sub
ror
dec
stc
or
mov
je
out
mov
call
push
jle
mov
push
shl
pop
aad
pusha
inc
fs
push
test
(bad)
popf
and
gs
jg
mov
sbb
mov
mov
cmp
dec
sub
add
jl
sbb
ror
mov
pushf
pcmpgtw
movs
push
inc
push
bound
cmp
xchg
popa
loop
call
mov
dec
sub
jl
movs
fiadd
pop
mov
mov
rol
or
dec
inc
frstor
mov
shr
add
retf
in
sub
sahf
imul
stos
mov
adc
and
sar
dec
stos
(bad)
adc
in
cmps
mov
dec
adc
test
jne
call
fisub
inc
and
jmp
test
add
enter
test
stos
mov
out
cmp
arpl
lock
cmp
cmp
xor
movs
sti
push
pop
push
add
dec
add
or
sbb
xchg
or
retf
ds
xor
idiv
inc
es
cli
fisub
cmp
mov
(bad)
retf
xor
out
pushf
add
test
cmps
loop
outs
fmul
dec
adc
mov
ret
into
test
dec
push
jnp
pop
sahf
imul
mov
enter
jb
sahf
clc
dec
xchg
out
add
test
rol
ja
retf
mov
dec
jo
les
mov
cmp
sub
or
out
out
loope
aas
mov
or
adc
cld
dec
jle
fbld
fwait
jo
adc
test
jl
xchg
stos
lods
inc
fmul
mov
ror
scas
mov
xor
jl
les
retf
adc
jle
scas
push
or
pushf
aaa
in
pusha
inc
fs
jmp
xor
shl
jnp
xchg
loope
rcr
in
stos
push
call
dec
sbb
movs
mov
(bad)
xchg
mov
ja
inc
cdq
sbb
ja
cmp
mov
(bad)
shl
aam
push
mov
push
add
neg
(bad)
jb
jnp
sub
sar
or
pop
repnz
inc
movs
add
sub
xchg
in
daa
and
outs
imul
call
jae
jno
int
cli
mov
sub
pop
sbb
push
(bad)
or
xchg
push
dec
mov
das
ins
push
mov
ret
cmp
cmp
sbb
push
dec
mov
adc
inc
xchg
jo
xor
xlat
xchg
leave
pop
int
xchg
mov
sbb
dec
xchg
push
dec
cmp
out
call
and
in
dec
mov
mov
push
xchg
cmps
mov
xchg
adc
mov
out
xchg
(bad)
fmul
stos
mov
mov
pop
jo
sbb
cmp
lds
aaa
cmp
icebp
xchg
(bad)
cmp
movs
bound
jns
add
cmps
push
jnp
je
leave
les
cmp
mov
dec
xchg
adc
(bad)
pop
xchg
mov
or
and
xor
jno
xchg
retf
dec
mov
lahf
pop
cmp
dec
jge
lods
cmp
sahf
jl
(bad)
adc
mov
out
mov
imul
and
popf
iret
bound
dec
cmps
daa
mov
sbb
or
mov
jl
push
fs
jns
out
sbb
mov
arpl
jmp
mov
jmp
xchg
jecxz
push
mov
jmp
test
jge
sar
cmp
cdq
out
cmp
ins
outs
cmps
xor
push
(bad)
xchg
dec
repz
pushf
dec
cmp
mov
inc
js
adc
test
inc
cmp
nop
out
adc
add
and
inc
aam
int3
xor
repnz
aas
or
sbb
ss
and
(bad)
movd
dec
loop
and
jl
nop
aam
fdivr
outs
jne
call
cwde
out
jb
clc
inc
pop
jl
jb
push
es
stos
sti
jp
mov
lds
ins
in
mov
fiadd
add
mov
sbb
stc
xchg
(bad)
cmps
mov
movs
bound
pop
mov
imul
lahf
sbb
gs
mov
mov
push
gs
loop
or
ins
adc
mov
jnp
(bad)
and
push
push
enter
or
in
dec
retf
loop
out
out
aaa
std
arpl
dec
stos
test
aam
xchg
pop
push
inc
mov
mov
stos
js
lock
pop
jmp
out
adc
(bad)
sub
jbe
mov
xor
pop
add
mov
mov
jle
movs
or
adc
pop
pop
loope
xor
stos
cmp
scas
jmp
cdq
jmp
loop
jg
stos
cli
mov
inc
cmp
(bad)
jae
js
shl
dec
(bad)
push
pop
sub
call
pop
ficomp
wrmsr
es
into
add
ficomp
mov
push
fbstp
pop
cmp
and
mov
adc
mov
aad
cmp
jbe
jp
jecxz
pop
push
mov
popf
dec
and
xchg
mov
popa
mov
ficomp
xchg
ret
(bad)
mov
dec
icebp
out
inc
cmp
int3
loope
inc
enter
push
ret
mov
mov
stos
sbb
pop
jecxz
js
sub
dec
test
(bad)
into
shl
and
adc
clc
rcl
ins
cmp
rol
loope
jecxz
xor
xchg
xchg
loope
loop
pop
aam
pop
jp
(bad)
jns
inc
fcmovb
inc
aaa
mov
es
jl
or
or
dec
or
dec
icebp
jg
pushw
call
cmps
and
shl
mov
inc
fidivr
push
out
mov
mov
pop
sub
push
jle
out
pop
push
pop
not
push
pop
mov
sub
xchg
je
sahf
in
out
sahf
in
xchg
imul
out
es
je
xchg
add
jmp
jle
out
jmp
jecxz
inc
daa
and
mov
mov
jle
es
dec
jns
fwait
int3
jp
mov
mul
push
jno
dec
(bad)
ficom
add
jp
iret
mul
cmp
mov
push
sti
data16
fwait
mov
ins
stc
ret
out
sub
pop
nop
fbld
or
xchg
or
add
call
movs
mov
mov
es
sub
xor
(bad)
xchg
mov
arpl
jmp
sti
fist
in
cmps
mov
push
xchg
call
out
loope
mov
inc
dec
add
mov
(bad)
ja
add
xlat
push
sub
add
not
popa
mov
(bad)
imul
xor
add
es
sub
xchg
push
scas
pop
mov
popa
daa
call
jmp
inc
xchg
fldcw
or
gs
push
pop
fadd
icebp
enter
jge
rol
fdiv
pop
sub
icebp
xor
test
js
pop
inc
ss
das
rcr
test
pushf
mov
std
cmp
stos
pusha
xchg
xchg
sbb
out
test
out
inc
div
mov
sub
inc
cmp
(bad)
outs
sub
jne
loope
pop
fist
sbb
sub
xor
sbb
int
mov
pop
int
jb
sub
in
jmp
inc
call
ins
pop
(bad)
pop
adc
sub
inc
push
xchg
adc
outs
pop
enter
mov
mov
cmp
ins
ret
movs
inc
push
int
int3
mov
in
fbld
dec
jne
fcomp
mov
test
push
xor
test
cmc
pop
adc
cmp
sbb
gs
into
xor
retf
push
gs
jnp
inc
call
mov
push
cmp
aaa
push
daa
sahf
or
shl
mov
mov
(bad)
or
adc
jnp
das
adc
fincstp
jg
test
(bad)
stc
cmp
adc
cmp
xor
test
xchg
pop
bound
pop
adc
enter
imul
aaa
arpl
add
(bad)
std
rol
jno
cmp
mov
or
shl
sahf
push
test
xchg
scas
push
inc
out
leave
mov
xchg
jns
mov
mov
out
sar
(bad)
cmps
js
fbld
push
nop
std
mov
adc
add
or
cdq
or
pop
xchg
xor
xchg
out
pop
imul
test
mov
(bad)
gs
push
sahf
ret
das
jae
iret
daa
into
das
icebp
sub
xor
push
fimul
or
ror
icebp
mov
mov
sub
cmp
sbb
test
das
aad
jbe
arpl
arpl
sbb
pop
int3
sar
mov
pop
ja
push
dec
xchg
lock
dec
das
push
loope
aad
hlt
and
(bad)
mov
enter
mov
bound
in
add
imul
or
adc
retf
(bad)
mov
outs
ficom
and
mov
xor
jne
sub
loop
add
out
mov
js
xor
retf
adc
fsub
ss
xor
lods
sub
inc
fcom
mov
into
ror
les
pop
pop
xchg
sbb
push
jns
mov
je
inc
enter
jno
aaa
push
fld
cmp
pop
dec
ins
and
leave
arpl
loop
(bad)
fsub
out
pop
cld
rol
outs
mov
pusha
fcmovbe
fsub
cmc
pop
int
cmp
sbb
or
mov
les
xor
push
inc
fimul
stos
mov
fld
cmp
inc
not
pop
adc
lods
outs
and
lods
hlt
(bad)
fsubr
addr16
and
mov
mov
dec
inc
test
test
pop
movs
mov
pop
mov
std
sahf
xchg
push
or
loope
inc
adc
repz
icebp
mov
ja
or
call
or
or
inc
repnz
mov
pop
push
push
jle
jae
push
cmps
mov
and
imul
pop
jb
and
lds
pop
jl
ds
dec
adc
cmp
jp
jg
add
fwait
loopne
out
xor
jmp
out
pop
mov
xor
retf
mov
pop
mov
mov
jo
or
sahf
inc
repz
and
ret
and
shl
dec
pop
pop
mov
xchg
dec
sbb
inc
inc
cmp
div
push
jne
stos
xchg
nop
push
lea
add
xor
jb
mov
ins
loopne
add
ret
push
sbb
stos
int
test
jge
mul
outs
paddq
mov
dec
(bad)
aaa
and
ins
xor
and
cmp
in
xchg
jne
aas
addr16
sbb
push
jno
iret
jge
cli
retf
dec
dec
sti
mov
cmp
mov
push
sub
sbb
or
and
idiv
in
arpl
pop
push
fstp
out
xlat
in
out
jbe
inc
push
cmp
imul
jp
pop
ds
les
pushf
repnz
(bad)
(bad)
mov
call
cmp
call
arpl
pop
add
xchg
scas
fild
or
dec
push
test
cmps
mov
iret
mov
ror
ins
outs
add
scas
inc
test
or
pop
mov
(bad)
retfw
ret
xchg
outs
loop
jbe
sbb
add
dec
(bad)
jmp
fadd
xchg
test
shl
gs
ja
inc
int3
lds
push
mov
fwait
mov
pop
xor
push
iret
push
retf
fst
sub
and
push
mov
cmp
in
or
xchg
mov
push
(bad)
mov
or
xor
out
sub
popa
sti
scas
call
add
out
repnz
(bad)
das
push
lds
cmp
arpl
(bad)
cmp
int
scas
inc
inc
enter
stos
mov
xor
into
hlt
push
push
push
or
cmp
out
sub
xchg
push
loopne
adc
daa
add
mov
inc
loope
retf
rcr
ins
mov
mov
out
mov
pop
cmp
and
rcl
sahf
mov
or
daa
int3
cmps
jnp
push
xor
stos
(bad)
jp
stc
inc
out
inc
in
scas
rcr
adc
out
mov
fild
or
jb
cmp
mov
dec
cdq
inc
add
push
mov
sbb
xchg
push
push
mov
pop
push
mov
or
out
jl
je
(bad)
xchg
dec
stos
ins
xor
sbb
mov
mov
leave
arpl
sbb
icebp
mov
leave
cmc
(bad)
pop
xor
push
mov
push
dec
sub
push
adc
mov
gs
shl
js
add
(bad)
(bad)
fst
bound
lds
cmp
mov
push
arpl
test
inc
movs
mov
and
aas
enter
daa
mov
sbb
hlt
sbb
test
retf
jmp
test
sahf
addr16
shr
pop
adc
sbb
mov
push
adc
(bad)
mov
adc
cmp
pop
fisttp
lock
pop
xchg
xor
inc
retf
push
push
xchg
pop
xor
std
ja
movs
add
inc
cmp
and
or
shl
movs
xchg
cwde
es
fucom
push
mov
jg
push
bound
ret
ror
push
lods
mov
stos
pusha
xchg
aad
pop
jl
push
add
push
adc
stc
addr16
adc
scas
mov
mov
std
bnd
cmps
fxch
cmp
(bad)
mov
enter
mov
inc
cli
dec
lahf
or
adc
jmp
lds
mov
(bad)
fist
push
pusha
add
sbb
mov
loope
dec
ins
sub
retf
inc
popf
(bad)
push
test
imul
xchg
xchg
dec
cmp
push
lods
nop
sbb
cmp
jbe
mov
test
out
and
cmps
ffreep
xor
adc
jl
ins
test
pusha
dec
xor
jle
inc
popf
inc
mov
shl
and
cwde
inc
sub
test
iret
lock
stos
neg
hlt
and
(bad)
cmps
and
xor
push
or
cmp
mov
out
pop
je
fisttp
pop
movs
push
xor
jecxz
mov
dec
mov
add
and
sahf
les
mov
push
fstp
sub
call
push
in
sbb
dec
add
(bad)
sub
or
cmp
push
mov
call
(bad)
cmp
(bad)
call
fcom
shl
pop
fstp
into
inc
mov
aam
adc
sub
call
outs
leave
repnz
clc
dec
dec
pop
push
inc
xor
rcr
ret
and
out
sub
sbb
xchg
xor
and
push
(bad)
fwait
and
jns
stc
mov
cmps
mov
mov
jb
(bad)
pop
mul
jmp
clc
adc
inc
out
lods
sub
mov
jecxz
(bad)
push
or
pop
dec
lea
dec
cmp
sbb
xchg
test
fiadd
mov
iret
movs
rol
out
jbe
ja
into
test
dec
mov
mov
(bad)
mov
dec
and
ror
ret
std
movs
pslld
jne
shr
fsub
xor
mov
and
out
mov
nop
push
fwait
dec
cdq
sbb
xchg
ret
ret
inc
sub
leave
sbb
jae
jmp
mov
shl
dec
pushf
mov
or
mov
addr16
call
dec
inc
cs
ja
mov
ins
push
jge
or
lea
cmp
mov
push
(bad)
fmul
out
push
(bad)
ror
cdq
push
rol
test
xor
outs
mov
cwde
std
and
int3
ss
fs
fs
mov
mov
aad
jno
push
(bad)
push
test
sti
jbe
cmp
mov
je
adc
imul
or
stos
mov
call
icebp
pop
pop
adc
sbb
pop
fisubr
push
mov
rol
scas
mov
dec
mov
cwde
jmp
cmp
sti
jns
sbb
sub
cmp
mov
mov
inc
jne
pop
aam
test
or
cmp
call
retf
into
rcr
adc
outs
std
out
cli
add
int3
mov
mov
jge
mov
inc
inc
jmp
int
push
dec
xor
add
dec
retf
jnp
bts
sbb
sub
sub
fdiv
push
ret
push
xor
lahf
and
push
stos
loope
rol
xor
test
mov
cmp
in
jne
int
lods
xor
jno
and
repnz
loopne
jbe
push
dec
jmp
sub
sub
cmp
outs
mov
clc
push
xchg
cmps
ins
outs
and
or
test
push
hlt
cmp
loop
ret
bound
mov
ret
jle
pop
mov
imul
xchg
inc
in
dec
cs
jb
js
and
imul
out
arpl
es
pop
ins
sub
sbb
jge
mov
xlat
popf
or
sub
or
mov
in
pop
in
cmp
xchg
shl
xchg
pop
push
div
mov
jo
ror
clc
dec
xchg
data16
push
xchg
mov
mov
jecxz
mov
loop
cmp
popf
dec
dec
dec
push
xor
and
jns
addr16
mov
lea
outs
cmp
sub
push
dec
mov
mov
aas
out
lods
cmps
adc
clc
mov
pop
mov
ds
pusha
sub
stos
adc
cmp
fidiv
fsub
xlat
(bad)
hlt
enter
lods
lock
nop
pushf
and
xor
cli
jae
xchg
cmc
mov
push
popf
cdq
push
test
lahf
and
and
sbb
pop
xchg
add
(bad)
cs
paddd
xchg
xchg
mov
cs
mov
mov
pop
into
(bad)
adc
lods
dec
mov
sbb
jle
push
sahf
mov
imul
(bad)
ja
and
mov
in
adc
add
adc
aas
xor
sub
push
push
cmp
in
dec
push
jecxz
xchg
and
(bad)
imul
es
adc
(bad)
(bad)
pop
jle
push
imul
xchg
xor
rcr
push
pushf
sahf
dec
test
adc
out
lods
(bad)
je
ror
xchg
shl
scas
(bad)
and
pop
mov
sbb
push
xchg
out
repz
sbb
in
pop
out
scas
and
dec
jno
push
xor
int
int3
les
shl
shr
sub
in
(bad)
push
call
jno
push
cld
cmc
arpl
cld
(bad)
lahf
sub
xor
cli
(bad)
popf
bound
and
inc
add
cdq
pusha
sub
lods
leave
les
mov
(bad)
data16
mov
in
push
stos
or
test
stc
aam
push
pop
out
test
out
or
adc
cmp
div
(bad)
cmp
adc
push
arpl
lods
scas
push
dec
mov
inc
aaa
mov
ins
(bad)
cmp
ror
push
sub
daa
push
jp
inc
fdivr
and
pop
das
test
test
sbb
jae
loopne
scas
adc
xchg
push
dec
jo
in
jno
cmp
sub
inc
and
mov
sub
add
fimul
push
mov
mov
leave
cmp
mov
mov
adc
fsub
aad
jg
mov
imul
(bad)
push
ret
cwde
adc
(bad)
je
out
dec
movs
int3
or
cld
inc
or
and
imul
mov
inc
push
xor
sbb
mov
mov
or
xchg
retf
(bad)
xchg
aam
cmp
jnp
pop
mov
stos
xor
aad
xchg
cmp
(bad)
ror
jmp
add
or
pop
xchg
adc
cld
push
fcom
mov
aas
cdq
fldenv
ins
or
gs
mov
in
mov
inc
aam
or
adc
adc
(bad)
lds
fst
ins
cmp
pop
mov
ins
call
sti
das
jno
not
ss
push
mov
fdiv
dec
sbb
retf
mov
clc
fbld
ins
jecxz
dec
es
les
jl
xor
js
add
scas
pop
lds
cmp
mov
sub
call
sub
call
pextrw
scas
movs
and
jmp
or
popf
jne
(bad)
lods
into
sti
fadd
jmp
lea
rcl
data16
arpl
jb
fbld
add
rol
inc
mov
push
test
xchg
push
movs
bound
arpl
mov
pusha
ror
mov
lods
inc
jg
or
retf
movs
mov
cs
cmp
sub
xchg
sub
movs
lahf
aas
push
sar
cmp
inc
push
xchg
push
jle
xchg
pop
cmp
inc
inc
fdivr
push
mov
sbb
xchg
mov
clc
cs
cwde
test
je
mov
stos
sbb
repnz
sbb
fstp
mov
je
pop
push
mov
mov
fwait
jo
ja
push
sti
in
loop
xchg
aas
cmps
fild
adc
xchg
retf
dec
push
(bad)
stos
cld
loop
sahf
sbb
jle
mov
shl
xchg
mov
mov
push
(bad)
push
not
cwde
sbb
es
ins
push
ret
push
sub
mov
cmps
mov
int
mov
scas
lds
sbb
movs
inc
jne
push
retf
pop
loope
loop
jae
push
ins
fidiv
test
sub
mov
lahf
sub
mov
jns
adc
imul
clc
in
dec
clc
fild
cli
dec
mov
addr16
lea
ror
retf
sub
pop
mov
xchg
and
xor
pop
lahf
leave
inc
cli
add
cmp
frstor
xchg
scas
call
leave
and
xchg
daa
pop
mov
mov
outs
adc
fdiv
popf
pop
into
mov
adc
inc
mov
scas
aas
cmps
inc
sub
cli
mov
mov
(bad)
push
mov
das
(bad)
dec
js
outs
inc
cmp
push
push
jb
pop
int
adc
gs
and
fidivr
rcl
sbb
jmp
outs
or
adc
in
ffree
push
dec
mov
push
imul
cmp
and
xchg
fisttp
nop
mov
mov
int3
call
scas
hlt
fcomp
jno
imul
clc
das
les
inc
loope
pop
add
adc
sub
or
jmp
mov
bound
push
lds
sub
stc
jmp
gs
(bad)
xor
fcom
les
jns
movs
sar
jb
mov
adc
stc
push
jo
out
ret
js
sub
sbb
fcomi
push
addr16
or
fbstp
push
add
adc
iret
pusha
outs
ja
xchg
pop
fs
pop
mov
int
call
jle
sti
xor
or
es
cli
mov
cld
sub
jno
fs
xor
inc
movs
call
or
test
jmp
adc
outs
sub
sub
sbb
setne
scas
scas
imul
dec
scas
ror
cmps
shl
fmul
clc
jo
pusha
mov
sub
hlt
mov
pop
in
jg
push
pushf
jne
mov
or
xchg
dec
add
dec
mov
sub
repz
jae
xor
rcl
adc
iret
and
or
sbb
repnz
shr
int
cdq
sub
outs
test
ds
pop
adc
push
sub
dec
mov
push
call
xlat
call
popa
test
aam
sub
xlat
cwde
inc
push
adc
enter
std
loopne
retf
mov
addr16
xor
xchg
in
jae
xor
div
fadd
push
sbb
jmp
sbb
cmp
(bad)
jmp
push
add
in
push
mov
imul
addr16
mov
les
ret
dec
repnz
dec
add
lea
jb
adc
(bad)
lock
jge
push
rcr
in
cmp
test
and
cmp
ds
xor
xlat
stos
out
adc
or
stc
out
inc
das
jecxz
xor
cmp
add
test
inc
cmps
movs
sbb
inc
inc
in
mov
xor
jl
popa
bound
cmps
cmps
push
clc
cmps
lea
shl
mov
jno
xor
add
stos
mov
add
push
shl
fsub
pop
pop
add
add
pop
or
xchg
popf
(bad)
mov
das
test
sub
retf
sbb
shl
mov
mov
pusha
rol
cmp
adc
fcom
jecxz
fistp
jg
jmp
xor
popf
rcl
xchg
adc
sbb
push
loop
aad
pop
xor
sahf
sbb
mov
sub
addr16
pushf
xchg
icebp
fstp
jg
jmp
pop
std
pop
cmp
xor
cmp
dec
add
aam
sub
repnz
mov
and
push
or
sbb
stos
or
push
leave
pop
and
out
mov
dec
test
ins
je
(bad)
fcmovb
push
pop
aas
or
ret
arpl
jb
sbb
out
and
adc
(bad)
loopne
bound
fwait
lds
pusha
cmps
mov
je
mov
or
xlat
push
dec
mov
inc
sbb
test
mov
rcl
ret
pop
jbe
dec
jle
les
jp
pusha
push
int3
fisub
cmc
pusha
cmp
xor
movs
xchg
sbb
xor
add
cmc
or
xchg
xchg
mov
xor
sbb
fidivr
les
or
aaa
add
xlat
ret
mov
or
xor
mov
pop
adc
aaa
sbb
rcl
add
add
or
mov
xchg
pop
mov
dec
mov
dec
pusha
pop
(bad)
pop
cmps
out
add
aam
icebp
adc
test
jp
mov
xchg
dec
or
or
icebp
leave
imul
leave
jb
mov
xchg
popf
sbb
fcomp
icebp
push
pusha
nop
adc
nop
ds
fs
rol
rcr
retf
cmp
rol
cli
adc
jle
outs
movs
test
cwde
call
ja
cmps
jo
test
xor
inc
sahf
cmps
fist
in
call
mov
mov
mov
cmp
mov
xor
aam
pop
jge
stc
je
cmc
xchg
xchg
inc
cmp
retf
sbb
add
ins
jl
in
xchg
mov
data16
jecxz
test
or
sub
and
clc
loopne
icebp
mov
and
mov
jnp
cmp
mov
and
mov
add
and
stc
xor
and
cmp
imul
pop
cpuid
int3
inc
mov
sbb
arpl
enter
xchg
adc
imul
xor
ins
cs
pop
imul
jns
adc
cmp
aas
int
arpl
add
arpl
iret
or
ret
mov
sub
js
push
xchg
mov
out
dec
fiadd
xlat
xchg
test
dec
fisub
push
fcom
nop
mov
xor
mov
test
cmp
fs
daa
jo
out
aad
jo
mov
stos
shl
push
stc
mov
popa
mov
add
push
sub
mov
dec
push
add
data16
mov
int3
xor
jmp
mov
xchg
mov
cmp
mov
add
retf
mov
dec
movs
and
mov
enter
ret
imul
xlat
sar
xor
or
pusha
neg
jbe
pushf
aas
mov
es
push
scas
mov
arpl
and
sub
mov
int3
inc
adc
ins
add
pop
mov
inc
aam
fs
mov
mov
xchg
imul
mov
icebp
push
ins
add
jo
leave
int
mov
push
lahf
xchg
mov
or
outs
fcomp
retf
cmp
mov
lods
jg
or
mov
sbb
mov
lahf
and
ins
pop
rcl
push
das
stos
dec
ret
jmp
sbb
add
jns
dec
jmp
movs
or
cdq
sub
push
sub
test
rol
ja
pusha
fdiv
pop
aas
loop
mov
fsub
add
mov
stc
ins
jl
fwait
push
mov
call
adc
inc
sbb
(bad)
pop
stos
jae
cwde
sub
xchg
fstp
pop
(bad)
retf
push
and
xchg
mov
pop
sub
push
pushf
pop
aam
ins
cli
retf
pop
int
xchg
ss
outs
pop
out
inc
shr
jmp
xor
sbb
neg
imul
adc
and
std
jns
aam
mov
dec
dec
push
(bad)
cld
mov
iret
sbb
push
in
add
xchg
mov
push
idiv
xlat
or
mov
cmp
adc
std
stos
fldenv
hlt
mov
jnp
outs
arpl
pop
mov
inc
or
(bad)
xchg
push
mov
mov
repnz
mov
sbb
scas
sub
push
lock
pop
xchg
out
xchg
(bad)
xlat
or
adc
into
pusha
cld
imul
dec
hlt
dec
mov
ins
adc
inc
mov
inc
cmp
xlat
lds
in
nop
loop
inc
shr
pop
and
arpl
pop
inc
(bad)
aam
js
mov
xchg
xor
cmp
mov
dec
adc
aaa
push
test
sub
imul
pop
or
addr16
jge
cmp
lock
add
gs
or
ds
jge
and
xchg
lock
dec
and
jne
mov
fstp
cli
add
xchg
sub
call
sahf
loop
test
nop
and
mov
sub
xchg
add
leave
push
and
inc
fmul
jns
jnp
dec
aas
adc
repnz
cmp
adc
mov
rcr
enter
bound
icebp
xor
aaa
fcomp
sahf
mov
les
add
add
xor
js
dec
sub
int
out
sbb
push
into
cs
iret
xchg
sti
retf
dec
(bad)
aas
dec
call
ss
inc
sbb
adc
iret
cld
pop
mov
rcr
or
jno
lahf
sbb
jecxz
and
xchg
dec
cwde
rcl
cmp
movs
in
in
adc
sub
dec
inc
push
fs
cmc
(bad)
in
sbb
pop
jl
outs
js
cld
sbb
dec
jge
js
xchg
xor
call
or
enter
(bad)
in
inc
dec
push
xor
xchg
aam
inc
sub
out
xchg
fsub
cld
mov
addr16
ds
inc
fiadd
call
repz
push
adc
push
test
mov
jmp
cmp
mov
add
or
je
mov
pop
(bad)
jmp
sti
mov
mov
ja
pop
clc
add
mov
in
cmp
fist
xchg
adc
mov
adc
and
imul
adc
mov
call
adc
fst
int3
mov
pop
(bad)
out
mov
dec
mov
(bad)
push
adc
loope
enter
push
add
adc
mov
scas
icebp
or
or
xor
sbb
push
iret
(bad)
mov
(bad)
mov
(bad)
jge
mov
push
call
adc
loopne
ins
inc
sahf
mov
sbb
enter
out
mov
ins
lahf
mov
not
scas
push
std
and
jmp
pop
jle
je
cmp
inc
sbb
or
loope
sub
outs
pusha
inc
aas
sbb
jae
aam
lods
dec
jmp
sbb
stos
scas
sbb
jae
stos
mov
icebp
popf
and
outs
popf
add
xchg
inc
push
push
shr
xor
adc
cs
stos
stos
mov
pushf
lea
outs
mov
lds
cld
mov
jp
ds
lahf
in
scas
retf
mov
xchg
cmc
mov
mov
add
popa
dec
adc
loop
push
mov
leave
fldenv
mov
inc
mov
cmc
lock
add
inc
and
sub
mov
es
js
pop
xchg
hlt
test
mov
cmp
or
stc
mov
mov
(bad)
xchg
popa
ret
pop
nop
mov
xchg
pop
ins
jg
jns
mov
fwait
inc
fistp
call
and
jecxz
out
xor
mov
or
cld
xor
xor
ds
adc
hlt
stos
popa
xchg
add
jae
mov
pop
xchg
inc
xchg
mov
xchg
xor
les
ss
xchg
cmps
aaa
push
jae
push
js
mov
add
push
inc
mov
daa
mov
dec
adc
adc
outs
fcmovnbe
inc
aad
in
or
mov
jnp
sti
adc
push
add
push
xchg
jmp
adc
push
daa
aam
add
hlt
ffree
cdq
lock
test
leave
jae
stc
and
int
(bad)
and
icebp
popf
fstp
pop
and
rcr
cmp
sbb
outs
outs
xchg
mov
fld
inc
lods
inc
loope
enter
(bad)
inc
jl
call
stc
xchg
jmp
dec
out
movs
xchg
and
push
lods
outs
mov
popa
add
or
out
test
and
ss
out
hlt
out
mov
adc
mov
add
lea
pop
jle
test
jo
lds
aam
xchg
(bad)
sbb
outs
lock
les
out
cmp
add
adc
or
daa
pop
fwait
(bad)
loopne
shl
xchg
fs
xchg
push
mov
and
cmp
mov
adc
jge
sub
or
cwde
(bad)
fldenv
bound
fst
fwait
pop
push
daa
jle
push
push
pop
std
jns
add
push
xchg
in
ins
loop
mov
or
repz
test
mov
or
das
adc
(bad)
dec
inc
mov
mov
cmp
mov
xchg
xchg
xor
push
and
pop
adc
jecxz
mov
ret
ret
dec
or
cdq
sbb
mov
scas
pop
or
adc
movs
test
icebp
xchg
movs
loopne
push
jmp
push
inc
push
jns
imul
xorps
(bad)
jbe
mov
cwde
retf
js
mov
in
inc
stos
push
fisub
pop
mov
push
sbb
mov
mov
adc
xor
call
out
mov
stos
or
xchg
and
ja
enter
das
sub
int3
out
mov
shr
or
inc
in
stc
js
jbe
pop
sbb
int
loop
adc
jo
pop
cwde
pushf
or
daa
repnz
mov
mov
mov
mov
and
lods
push
dec
movs
fistp
add
outs
mov
repnz
std
mov
xchg
ret
shl
sub
pop
popa
push
push
outs
cld
(bad)
cs
fadd
push
and
sti
imul
xchg
fld
push
add
sub
adc
push
pop
mov
sar
adc
arpl
clc
jge
mov
and
adc
mov
adc
sbb
jg
mov
sahf
daa
and
inc
(bad)
out
xchg
sbb
rcl
push
pop
add
dec
outs
lock
cmp
xchg
into
cwde
jnp
jne
cmp
retf
jns
(bad)
not
sub
sub
test
aad
mov
call
je
pop
mov
adc
or
out
xchg
xchg
mov
pop
add
stos
lock
push
mov
in
push
and
cdq
pop
xchg
leave
fld
or
aam
ins
popf
mov
mov
je
add
outs
push
or
push
fs
dec
inc
je
inc
out
cs
repz
xchg
(bad)
imul
pop
mov
das
xchg
fsub
mov
movzx
jae
rcl
mov
ins
pop
mov
mov
jns
mul
mov
in
mov
adc
xchg
pop
cmp
aam
and
xchg
out
es
cli
sbb
in
adc
popf
mov
dec
aaa
popf
cmps
stc
fist
loopne
mov
mov
jbe
dec
mov
add
cld
mov
mov
and
sub
cs
enter
mov
mov
add
adc
xchg
aas
mov
jno
jo
sbb
dec
les
xor
mov
jnp
data16
cmc
int3
mov
out
adc
fdiv
adc
dec
and
in
fist
xchg
scas
jg
add
jl
stos
push
iret
jb
rcl
sub
arpl
mov
xchg
in
mov
adc
jl
or
sbb
shl
(bad)
sti
mov
in
clc
sub
mov
or
mov
out
into
inc
fsubr
ins
stc
cmps
repnz
ret
jmp
push
cmp
in
dec
and
retf
and
scas
mov
push
call
stos
pop
hlt
shld
mov
(bad)
imul
stos
xchg
sbb
call
push
not
mov
scas
adc
xchg
ins
inc
mov
popa
adc
mov
fsubr
(bad)
jge
mov
mov
iret
adc
cwde
test
or
inc
mov
imul
cwde
lods
mov
lea
cmp
pinsrw
test
ins
adc
mov
outs
add
mov
stos
push
push
mov
lods
push
push
fiadd
jge
jmp
push
iret
inc
in
aam
fld
mov
mov
and
lea
inc
or
cmps
mov
ret
stos
fdiv
ins
out
inc
icebp
xor
repnz
clc
repz
push
add
daa
shl
rol
inc
jo
push
xor
or
and
dec
mul
aam
bound
loope
(bad)
xlat
inc
push
and
dec
or
out
(bad)
fdiv
pop
pop
fs
ret
push
jmp
adc
cmp
jg
popf
retf
mov
xchg
xchg
mov
mov
fnstenv
sub
mov
sbb
addr16
sbb
pop
pop
cmp
leave
das
test
cmp
imul
pop
pop
int3
dec
cmp
aas
xlat
mov
mov
loope
xchg
xchg
js
mov
in
(bad)
test
pop
push
loop
outs
mov
dec
enter
sbb
mov
dec
leave
mov
cmp
es
popa
hlt
xor
push
xor
cdq
out
cmp
out
(bad)
adc
add
inc
jmp
push
test
mov
xchg
add
nop
mov
mov
(bad)
cmp
mov
(bad)
xor
jmp
mov
adc
sbb
aaa
add
cwde
dec
dec
std
lods
jne
mov
fnstsw
add
stos
mov
sbb
xchg
arpl
fs
ret
sbb
mov
jge
sbb
hlt
retf
xor
pop
dec
cmp
push
sti
inc
sbb
pop
jp
push
out
ins
jbe
clc
iret
adc
fild
mov
call
std
neg
punpcklwd
dec
repnz
xchg
and
push
inc
cli
jmp
adc
add
scas
pusha
xchg
aaa
push
cdq
(bad)
push
pop
mov
imul
out
sub
xor
leave
jmp
mov
cmp
sbb
or
mov
jbe
cdq
das
push
test
pop
mov
cmp
xor
(bad)
adc
enter
xor
add
sbb
mov
shr
pusha
push
jo
xor
xor
jb
push
outs
stc
iret
xor
push
loopne
add
cmp
mov
push
lock
sub
dec
mov
lods
imul
stos
pusha
(bad)
ins
adc
push
dec
mov
mov
jecxz
inc
or
dec
mov
(bad)
cmp
aaa
mov
int3
loope
fs
sbb
jp
xchg
aam
cli
adc
fiadd
into
std
wbinvd
cmp
adc
ja
push
inc
loop
lock
mov
arpl
jmp
iret
jnp
mov
inc
mov
mov
push
jbe
cmp
push
cld
shl
mov
mov
add
jmp
pop
popa
outs
add
pop
xor
int3
lea
ins
jp
call
repz
movs
out
imul
je
jnp
mov
fs
push
(bad)
adc
pop
mov
inc
dec
inc
popa
lds
xor
je
mov
sub
sub
test
and
xchg
jge
lods
add
mov
je
movs
sbb
stos
pusha
test
push
push
and
(bad)
sbb
stc
scas
pop
test
mov
out
int
mov
js
idiv
dec
lock
fmul
pop
push
cmp
mov
lock
call
ins
lds
out
hlt
inc
retf
jo
mov
sahf
shl
or
sahf
mov
sub
jns
adc
inc
shl
push
fcomp
fstp
jns
and
call
mov
xchg
mov
dec
iret
push
sbb
dec
dec
aas
in
fisttp
inc
shr
das
out
mov
mov
adc
mov
stos
imul
pmaxsw
mov
test
fmul
sbb
sti
scas
int
mov
out
add
stos
jbe
jmp
outs
iret
test
xor
and
mov
inc
cmc
cmp
or
mov
mov
pop
in
push
inc
mov
sub
(bad)
jmp
sbb
call
shl
jnp
icebp
push
add
and
cmp
mov
ret
cmps
pop
sub
add
loop
test
fild
out
sbb
shr
add
ins
inc
mov
push
xlat
fcompp
jb
out
jmp
sbb
cmc
push
cs
enter
jg
iret
and
mov
and
call
or
push
dec
cli
dec
mov
or
jns
in
gs
mov
mov
or
adc
or
pushf
xor
shl
inc
mov
jge
jg
sub
shl
xor
fild
shl
daa
imul
repnz
std
loopne
cmp
leave
xchg
popa
fdivr
push
and
mov
cmp
jne
ret
das
push
dec
stc
jle
shl
jmp
aad
push
inc
shl
scas
ja
iret
and
leave
dec
xor
mov
(bad)
xchg
mov
test
adc
in
mov
cs
fimul
and
adc
push
fnstsw
pop
push
int
rcl
jle
sbb
(bad)
sbb
setl
jmp
jecxz
cmps
jne
pop
push
dec
adc
xor
cli
add
and
jbe
icebp
leave
in
aad
sub
ffree
and
xor
addr16
lods
adc
xor
mov
ds
repnz
xchg
lds
js
aad
loop
or
jae
jns
mov
sbb
out
xchg
lahf
adc
dec
iret
or
dec
sbb
xchg
xchg
add
out
in
(bad)
js
ret
dec
ss
out
lods
mov
test
cmp
popf
xor
mov
pop
stos
fisttp
fcom
adc
das
pop
mov
sub
xor
jns
jbe
jecxz
jp
imul
test
enter
ins
xor
ret
pop
jmp
or
sbb
xchg
add
dec
idiv
cdq
pop
mov
mov
cdq
jo
cwde
inc
mov
in
xchg
out
inc
fwait
nop
and
dec
fmulp
mov
outs
xor
xor
mov
cmp
imul
aad
push
pop
ds
mov
add
push
lods
cmp
repnz
test
stos
add
xchg
cmp
jbe
popf
mov
push
inc
leave
jnp
imul
mov
pop
fwait
sbb
mov
mov
sahf
icebp
mov
jnp
mov
adc
ret
add
rcl
cmp
jno
push
scas
rol
jg
xchg
adc
dec
cmp
shr
jl
xor
add
jns
(bad)
push
mov
scas
loope
xchg
fwait
loop
bound
sub
xor
scas
icebp
sbb
pop
and
ins
add
add
retf
inc
jge
aam
lahf
out
fisub
das
(bad)
jp
outs
xchg
push
fsubr
aaa
mov
mov
int
adc
jo
call
arpl
mov
dec
stos
and
pop
jnp
repnz
daa
inc
xor
sub
jecxz
cmp
mov
sub
push
out
stos
(bad)
and
xchg
icebp
mov
std
sti
loop
fdiv
cmp
cmp
mov
nop
imul
imul
cwde
mov
push
arpl
inc
sub
sahf
pop
int3
push
and
sbb
inc
dec
xlat
loop
jb
in
sub
scas
hlt
(bad)
ficom
mov
mov
ss
aas
xchg
adc
sub
push
fs
in
add
inc
stos
jmp
fsub
ret
outs
(bad)
(bad)
sub
and
sti
das
mov
loop
sti
mov
inc
xor
jp
or
scas
mov
xor
fsubrp
bound
sbb
in
jnp
jmp
sbb
ror
add
mov
mov
shl
in
sti
outs
mov
dec
clc
movs
cwde
or
cmp
or
jge
mov
cmp
ins
repz
xchg
je
pop
sbb
cmc
out
js
jle
sub
mov
jle
fiadd
scas
xor
xchg
jp
outs
into
ret
call
adc
push
outs
push
shr
pop
lods
jp
mov
xchg
nop
mov
sbb
imul
sbb
sbb
sbb
or
lods
add
out
clc
push
ret
xor
daa
xor
sub
mov
stc
mov
fimul
push
call
lods
addr16
xchg
mov
les
cmp
into
sbb
jbe
inc
mov
retf
cmp
out
pop
mov
adc
iret
add
or
sti
int
(bad)
call
(bad)
jmp
(bad)
push
pop
test
jns
movs
cmp
out
inc
pcmpeqb
arpl
(bad)
jb
adc
cld
ja
push
push
dec
add
jmp
ret
mov
jp
or
mov
add
dec
cli
cmp
fidiv
(bad)
gs
mov
retf
mov
xchg
mov
cs
xor
cmp
ds
or
xchg
nop
out
les
in
pop
ja
fwait
out
(bad)
mov
ficom
jb
push
jnp
lea
cmps
inc
push
mov
test
ja
xchg
pushf
in
and
lahf
jg
push
push
xchg
lods
cmps
sub
inc
xor
mov
and
or
outs
jle
sbb
pop
stc
lea
mov
push
push
popa
fdiv
push
imul
jmp
shl
push
adc
ret
gs
jmp
inc
sub
push
mov
pushf
or
xor
dec
or
mov
imul
mov
gs
mov
iret
adc
jns
jo
pop
push
std
aas
sar
jns
loop
cmp
push
sub
scas
xchg
pop
or
int3
mov
fnstsw
call
mov
mov
mov
(bad)
xor
push
xchg
jecxz
jb
cmp
cmp
clc
lock
inc
call
cmp
sub
(bad)
(bad)
shl
mov
or
dec
popf
inc
test
icebp
or
mov
adc
push
jp
push
mov
pop
mov
mov
sbb
lods
xlat
jmp
aaa
fninit
out
xchg
adc
rcr
adc
iret
std
ror
je
lods
or
cmp
ror
(bad)
sbb
iret
(bad)
push
xor
xchg
call
pop
lods
icebp
adc
mov
stc
mov
jnp
and
outs
sti
sahf
jmp
loop
jne
lahf
aaa
inc
fs
adc
popf
js
mov
std
cmc
or
jecxz
icebp
xor
dec
icebp
mov
mov
test
ret
add
xchg
cld
xor
inc
clc
movs
iret
test
mov
mov
sahf
jg
imul
fsub
dec
mov
sbb
mov
shr
mov
je
inc
mov
rcr
ins
or
and
mov
inc
cmp
into
mov
add
adc
test
in
mov
gs
fcmovbe
or
xchg
ss
iret
or
fadd
push
jmp
or
jb
mov
xor
inc
or
leave
sub
jmp
shr
sbb
lea
jns
std
out
into
jo
adc
dec
xor
outs
adc
(bad)
inc
sar
xor
xor
cmp
or
mov
out
jb
inc
leave
ins
sbb
add
add
sahf
jle
pop
inc
push
test
or
jo
inc
daa
aaa
push
ds
mov
gs
cwde
imul
or
pop
jp
scas
in
or
sbb
stos
ror
in
stc
jp
adc
inc
loope
mov
cmp
sti
(bad)
jmp
cmp
lahf
loope
mov
(bad)
sti
jb
xchg
stos
push
push
movs
(bad)
mov
mov
or
inc
lods
mov
stos
jae
add
mov
mov
mov
and
(bad)
outs
outs
out
outs
bound
fwait
cmp
mov
imul
sub
ins
or
mov
and
sub
ins
in
xchg
and
mov
imul
mov
add
inc
cwde
out
test
test
test
out
gs
jns
push
pop
pop
daa
jecxz
and
push
pop
ror
sub
movs
stc
loop
xchg
sbb
pop
mov
(bad)
cmp
cli
les
dec
(bad)
outs
jne
mov
ss
push
fstp
dec
es
pop
jp
pop
dec
gs
sbb
inc
inc
inc
popa
sub
js
jo
ret
loope
push
or
mov
sbb
push
movs
xchg
xchg
dec
inc
daa
ins
(bad)
fild
outs
in
shl
into
js
jnp
ret
and
(bad)
aaa
dec
fsubr
sbb
icebp
push
(bad)
dec
dec
sbb
in
test
inc
and
(bad)
mov
sub
test
cli
pop
aaa
mov
(bad)
stos
addr16
popf
outs
mov
or
mov
cmps
add
stc
xlat
(bad)
addr16
cmp
das
jnp
clc
push
inc
daa
jns
xchg
sti
(bad)
pmullw
iret
cmc
hlt
pop
xor
(bad)
pop
and
test
scas
lods
stos
jno
fdivr
bnd
popw
je
mov
push
lea
dec
or
mov
das
dec
xor
in
pop
repz
fcmovbe
in
sub
sbb
fs
adc
(bad)
jno
adc
lods
dec
fwait
xchg
shr
or
jo
mov
push
mov
mov
pop
push
mov
xchg
outs
in
cli
(bad)
fimul
outs
pop
shl
mov
scas
inc
lods
adc
jle
mov
out
pop
jo
retf
rol
add
lea
xchg
sub
sub
push
jecxz
jnp
add
pop
dec
and
push
fdiv
out
mov
xchg
imul
inc
mov
push
sbb
enter
shr
sahf
in
iret
dec
imul
dec
jmp
xchg
fld
inc
and
je
test
data16
imul
(bad)
jmp
sar
and
and
sub
popa
fcomp
test
mov
inc
xor
add
in
push
sub
cs
into
dec
inc
gs
(bad)
sub
sbb
std
mov
arpl
lods
iret
push
cmp
retf
ins
adc
ror
std
ds
rcl
test
cmp
rcr
(bad)
jbe
movs
outs
push
int
xchg
test
jl
mov
mov
mov
into
sub
cli
jns
adc
mov
retf
push
xor
dec
inc
xchg
jbe
out
jge
fadd
cld
dec
stos
outs
add
inc
or
dec
push
jmp
and
or
lahf
inc
movs
push
inc
cmp
jnp
dec
(bad)
push
adc
mov
outs
sar
mov
mov
jmp
test
xor
jo
and
scas
dec
sbb
and
jmp
jns
xchg
imul
ja
adc
shl
adc
into
rcl
in
int3
outs
out
jp
lahf
adc
push
(bad)
jns
test
sub
lahf
or
rcl
xor
lock
mov
ror
out
out
push
adc
xor
mov
nop
xchg
test
inc
stos
rol
mov
dec
pop
push
jmp
push
inc
out
stos
jecxz
aad
das
dec
jmp
xor
bound
sbb
jge
dec
mov
pop
js
fwait
lahf
mov
jl
inc
mov
jp
or
fild
fcomi
icebp
pop
xchg
dec
inc
dec
lods
pop
push
sbb
pop
frstor
sub
jge
in
addr16
xchg
(bad)
jle
mov
jo
and
mov
aam
daa
inc
rcr
jne
pop
(bad)
and
mov
dec
cmp
xchg
push
push
iret
mov
leave
nop
pop
jmp
cmps
stc
outs
sbb
std
(bad)
in
mov
jns
js
out
bound
sub
dec
sbb
sar
add
mov
jg
bound
loope
retf
adc
jns
jb
popa
xor
cmp
fiadd
push
popa
pop
(bad)
mov
std
pop
jns
fcmovu
jne
je
and
mov
dec
test
cmp
cwde
pop
fistp
aam
out
pusha
sahf
jne
or
ficomp
test
fsub
sbb
inc
pop
ss
(bad)
sbb
div
push
cmp
add
inc
jno
loop
sti
aaa
push
cs
rol
retf
rol
stos
xor
test
in
std
add
lea
mov
xor
stc
lea
loope
cwde
test
mov
test
lds
lods
push
push
mov
or
lds
push
add
ja
lock
sar
bound
sub
(bad)
add
jne
sbb
repz
fist
addr16
repz
ins
daa
dec
loope
div
test
fs
push
mov
or
xchg
xor
add
loope
pop
push
push
inc
lds
gs
cs
push
in
xor
adc
aad
fiadd
clc
xor
imul
xchg
mov
lods
mov
cld
nop
cmp
jecxz
jle
pop
lahf
sbb
bound
in
push
ret
pop
mov
js
mov
and
out
cmp
das
mov
fdiv
mov
mov
and
lea
nop
into
leave
(bad)
jecxz
jo
pop
jp
mov
xchg
fild
push
aas
jns
adc
call
or
or
in
cmp
stos
xchg
int3
les
pop
inc
ror
mov
sub
movs
jns
pop
gs
mov
dec
inc
xor
scas
pop
stos
pop
(bad)
out
push
test
dec
fwait
cmp
ins
std
sub
jecxz
loop
xchg
in
pop
or
int3
adc
ds
or
retf
pusha
mov
(bad)
inc
pop
aaa
add
inc
int
sbb
or
add
sub
mov
loope
and
ins
inc
sbb
lahf
shl
mov
out
test
pop
nop
rcr
jecxz
sbb
fcom
nop
in
adc
fisttp
lods
mov
sbb
in
out
mov
mov
cmp
sbb
push
cs
mov
mov
or
in
inc
adc
fst
ins
mov
outs
xor
adc
test
push
(bad)
dec
es
iret
cli
popf
test
inc
dec
ins
push
jnp
fdiv
(bad)
mov
push
push
into
popf
dec
cmp
sbb
and
out
lds
add
and
pop
jne
ds
outs
lahf
xchg
xchg
pushf
jge
mov
dec
dec
pushf
sbb
pop
fwait
mov
xor
aas
xchg
pop
pop
and
retf
daa
dec
push
dec
cmp
daa
mov
fxch
pusha
add
cmp
sbb
and
jo
rcl
xor
(bad)
leave
call
cld
inc
cmp
shr
or
push
data16
mov
mov
int3
push
aaa
outs
jg
xor
sbb
in
dec
(bad)
adc
jmp
ficomp
pop
jb
and
push
test
inc
sub
les
int
in
mov
and
push
stos
jmp
out
mov
xchg
call
mov
cmps
mov
popa
inc
stos
pop
aad
jp
xor
fldlg2
jl
push
mov
push
cwde
mov
xor
es
pusha
ss
out
inc
pusha
aad
(bad)
sbb
into
movs
mov
repnz
dec
adc
mov
mov
aaa
sar
sub
iret
mov
ror
sbb
stos
adc
pcmpgtw
imul
scas
and
push
add
int3
mov
ss
jg
mov
jno
sar
ror
inc
fsub
push
jmp
xchg
icebp
hlt
arpl
jecxz
jecxz
sahf
or
jle
in
xor
jne
repnz
jnp
dec
inc
(bad)
or
mov
mov
adc
pop
fstp
pop
add
in
fild
pop
dec
mov
pop
loope
sub
retf
bound
outs
cs
cmp
add
xor
dec
mov
movs
mov
mov
(bad)
jmp
arpl
fimul
sub
mov
fmul
cmp
out
push
sahf
sbb
in
push
xchg
sub
in
inc
mov
cdq
in
xabort
inc
cdq
mov
lahf
add
pop
xor
dec
ror
arpl
push
inc
or
jnp
mov
lds
sahf
and
and
nop
fsub
jmp
mov
iret
pushf
add
dec
cwde
scas
inc
lahf
xchg
mov
push
cli
into
cld
push
sub
mov
push
gs
or
js
inc
and
mov
in
test
out
popf
(bad)
or
stos
xchg
inc
retf
inc
popa
lods
inc
sub
push
jae
cmps
pop
loopne
xchg
xor
je
mov
sbb
dec
sbb
xchg
xchg
and
pop
sbb
jae
mov
mov
dec
aam
add
stos
pushf
adc
jne
inc
mov
(bad)
aam
hlt
data16
jae
pop
cdq
inc
aad
mov
sahf
pop
out
pop
icebp
adc
rol
popa
cmps
lahf
test
sbb
nop
sbb
(bad)
xlat
or
int
arpl
std
inc
shl
ret
mov
je
xchg
(bad)
cdq
cmps
inc
into
in
and
(bad)
sbb
out
inc
pop
(bad)
jno
jmp
nop
and
repnz
dec
inc
cmp
add
xor
cmp
sbb
loop
lahf
dec
push
and
jl
shr
pushf
and
dec
(bad)
cli
das
jnp
inc
or
xchg
adc
shl
dec
mov
pop
inc
pushf
shl
jbe
and
dec
sub
std
pop
mov
test
retf
jg
in
dec
push
das
cmp
jp
adc
sub
sub
push
ror
in
cmp
mov
mov
jb
push
int3
jb
int3
test
dec
(bad)
push
pop
test
cmp
call
fisttp
cdq
add
sbb
mov
jl
ret
inc
sti
leave
call
int3
jmp
pop
sub
add
cmp
and
ss
add
jl
loopne
in
push
mov
push
jl
mov
ficom
adc
push
mov
ins
pop
xor
inc
fisttp
arpl
not
scas
pop
sbb
cld
jg
test
inc
rcr
xlat
sahf
or
ret
cmp
out
iret
popa
mov
sub
add
push
fsubr
xchg
jae
popf
sbb
aas
addr16
loop
push
add
dec
xchg
(bad)
fst
shr
imul
aas
out
imul
lahf
xor
iret
repz
jo
jo
pop
aam
cmp
cld
mov
outs
sub
or
not
(bad)
into
ret
mov
push
mov
adc
aad
mov
imul
pop
data16
dec
fild
pop
test
sti
mov
pop
mov
das
pop
mov
cs
sub
cmps
nop
jmp
adc
sbb
mov
cs
mov
movs
das
fldenv
fidivr
out
leave
das
aaa
out
xor
aas
jg
push
cmova
cmp
call
jge
fadd
ds
in
imul
and
addr16
in
xchg
das
or
fldcw
xor
pop
fisubr
mov
outs
dec
sbb
sub
sbb
mov
jle
sbb
shl
dec
or
cmps
test
icebp
pop
(bad)
cmp
cdq
jb
mov
popf
(bad)
ds
pop
gs
xchg
mov
xchg
lods
sub
out
xor
std
mov
sbb
mov
stos
inc
mov
pop
mov
adc
add
xchg
cmps
fwait
dec
cmp
retf
sub
rol
inc
dec
mov
jns
push
xchg
std
das
(bad)
add
cld
xchg
mov
or
clc
mov
je
ja
scas
mov
mov
push
aas
jae
add
sbb
cmps
ins
pop
inc
add
test
add
push
sbb
push
cwde
(bad)
push
dec
push
push
mov
into
arpl
aam
push
xlat
outs
add
imul
and
(bad)
inc
enter
mov
test
aam
xchg
rep
pop
jno
into
sbb
xor
in
paddusb
and
gs
test
mov
loop
(bad)
mov
ins
rcr
mov
mov
aad
ins
mov
pop
outs
xor
int3
lock
fst
xor
mov
sub
or
mov
lock
mov
inc
push
aam
or
sbb
add
fldenv
into
les
jmp
xchg
xchg
inc
pop
cli
lea
ss
fidiv
xchg
(bad)
xor
push
int
fucomp
out
test
jmp
sub
add
inc
pop
movs
shr
mov
push
pop
cmp
jl
lods
cmp
adc
mov
inc
out
cli
mov
xchg
jo
sub
and
mov
cmps
movs
out
fstp
mov
cmp
push
push
fimul
adc
push
add
pop
outs
xchg
cmp
retf
sar
cmp
xchg
xchg
mov
xchg
shr
ins
scas
cmp
mov
push
mov
mov
imul
rol
sub
xor
retf
(bad)
sub
mov
sub
sub
mov
scas
jp
inc
jbe
daa
jle
sahf
xchg
outs
sub
adc
imul
sti
test
push
pop
out
mov
add
jb
je
mov
mov
mov
in
mov
push
dec
mov
pop
sti
mwaitx
inc
add
stos
xchg
inc
es
and
adc
bound
bound
cmp
pop
popa
push
mov
sahf
loop
movs
iret
mov
stos
mov
pop
add
fcmovu
push
and
call
xor
loop
jbe
ret
jl
mov
mov
sub
aaa
bound
in
dec
jle
aaa
scas
xor
jns
test
xchg
call
pop
pop
loopne
xchg
(bad)
or
jb
xor
jg
xchg
xor
in
dec
inc
(bad)
(bad)
cmp
jg
retf
es
(bad)
call
cmc
gs
push
retf
pop
mov
imul
xor
neg
in
jnp
outs
or
mov
es
push
aas
sub
or
push
inc
pop
push
xor
retf
in
fisub
jb
in
pop
lahf
rcl
mov
(bad)
mov
es
lods
cmp
les
xchg
lods
add
jl
stos
cli
and
jno
cmc
into
add
push
out
test
jns
sbb
movs
or
sti
cmp
in
adc
daa
jl
jb
ror
test
push
aaa
call
mov
lahf
test
adc
pop
popa
mov
sti
mov
sub
push
xchg
es
rcl
mov
cs
retf
add
mov
cmp
aam
jmp
leave
xchg
jecxz
cld
repz
or
and
mov
mov
(bad)
enter
outs
test
mov
add
(bad)
shl
mov
mov
lea
xlat
rol
sti
lahf
les
add
cmp
xlat
inc
sbb
jecxz
fcomp
and
iret
mov
bound
pop
push
add
cmp
test
icebp
push
aas
adc
xlat
rcl
call
inc
jmp
jno
fwait
dec
mov
sbb
jne
imul
xor
jp
mov
add
sti
xchg
sub
adc
repnz
je
mov
pop
xor
jae
lea
fnstcw
fisttp
(bad)
addr16
shl
aad
mov
rcl
mov
pop
(bad)
(bad)
cmps
or
enter
jnp
inc
push
ins
jge
xchg
loop
xchg
out
inc
popf
push
xor
fistp
jbe
imul
test
jmp
jae
jg
loope
cmp
test
inc
and
push
cwde
mov
repnz
xchg
in
cmp
js
fs
pop
cld
and
push
push
or
or
xlat
aas
popa
aam
pop
or
cmp
fldenv
iret
push
mov
pop
fcomp
pop
lock
pop
mov
movs
fcmovb
cmps
pop
mov
hlt
push
mov
or
pop
stc
xlat
test
sbb
adc
jge
push
push
bound
sbb
mov
push
sbb
out
pop
dec
into
aaa
jge
pop
dec
enter
bound
sub
mov
xor
vorpd
xchg
test
jno
daa
cmp
call
(bad)
mov
stc
push
das
dec
sub
cli
sbb
cmp
div
pop
ja
ficom
jle
int
adc
mov
xor
push
clc
aad
inc
outs
pop
sbb
pop
jae
cmp
lods
dec
outs
ret
hlt
cmp
out
fwait
aaa
ror
push
xchg
dec
int3
xor
(bad)
into
push
jge
arpl
pop
cld
xchg
or
xor
cmps
cmp
adc
pop
mov
jg
lds
stos
pop
inc
pop
fdivr
cmp
mov
pop
mov
lods
pop
(bad)
xchg
pop
pop
pop
retf
or
jmp
push
std
mov
mov
(bad)
mov
jle
loop
inc
mov
adc
pop
add
adc
push
pushf
mov
xchg
cmp
ja
xor
pop
jno
cli
xchg
mov
jge
je
dec
xor
pop
popa
and
jle
mov
xchg
stc
dec
mov
xor
outs
cmp
and
mov
xlat
cmp
aaa
rcl
pop
icebp
es
jns
inc
neg
in
jbe
daa
(bad)
mov
in
adc
sahf
mov
sti
cmp
shr
dec
xlat
sbb
lods
loopne
push
repnz
sub
sub
mov
mov
fsubr
call
jecxz
mov
xchg
mov
shl
(bad)
out
mov
xchg
xor
xor
aam
xor
mov
leave
mov
inc
in
movs
adc
add
mov
fnsave
aaa
stos
dec
mov
add
(bad)
fxch
loop
mov
push
xchg
mov
(bad)
jmp
lea
cmps
push
(bad)
imul
test
aaa
js
loopne
es
cs
jg
mov
jmp
dec
and
fcomp
or
ret
retf
add
mov
pop
dec
rcl
leave
fwait
cmps
jb
in
ins
test
xchg
jns
xchg
and
mov
fdivrp
xor
std
dec
rol
xor
sbb
push
add
mov
cmc
xchg
ret
push
cmps
test
inc
push
mov
mov
adc
xor
movs
scas
cs
js
jbe
retf
ja
pop
ja
pop
cwde
bound
adc
cs
push
out
fst
lock
fmul
es
and
retf
mov
adc
mov
or
inc
int
or
sahf
push
call
test
dec
and
out
dec
cmp
pushf
movs
dec
cli
inc
leave
sub
mov
test
out
push
fist
shr
pop
sbb
lods
jo
mov
retfw
xor
xor
mov
xlat
bound
mov
mov
pop
adc
sti
add
(bad)
push
retf
hlt
aad
mov
adc
cmp
sub
or
(bad)
es
jle
dec
mov
xor
retf
push
in
hlt
dec
sub
fst
enter
pop
add
dec
pop
xor
stos
lods
push
inc
(bad)
push
pop
test
add
xor
pushf
xor
xchg
aad
pop
dec
nop
mov
fldcw
push
aaa
mov
mov
ret
jmp
mov
jnp
cmp
mov
loope
in
popa
lods
ss
imul
jbe
pop
dec
mov
bound
sub
jne
scas
mov
loop
data16
push
(bad)
in
mov
and
mov
mov
sub
or
mov
cld
ins
leave
mov
and
ror
(bad)
mov
mov
pop
cmc
dec
adc
xor
push
sbb
ins
inc
fs
loope
ins
cmp
(bad)
pop
sbb
addr16
xchg
or
(bad)
js
gs
pop
call
outs
ins
inc
out
icebp
(bad)
lahf
mov
mov
pop
push
fistp
inc
loopne
cmp
lea
push
aam
mov
jns
mov
and
je
fstp
in
mov
fidiv
repnz
aad
sbb
fs
ror
call
out
mov
add
cmps
mov
ret
lock
dec
mov
fs
mov
adc
into
mov
js
push
in
xchg
or
bnd
(bad)
cwde
out
xchg
les
sbb
jns
mov
or
cmc
add
popa
mov
sub
or
rcl
sbb
cli
sub
ret
cmp
jmp
inc
out
xchg
cli
jne
adc
xchg
mov
jle
addr16
xchg
mov
pop
call
mov
jno
jmp
dec
pop
repnz
pop
sbb
ins
sub
ins
not
retf
fidivr
push
loopne
sar
out
push
cs
xchg
inc
jne
(bad)
repnz
push
ja
dec
cld
jae
sbb
call
cdq
mov
sbb
addr16
sbb
mov
mov
cld
fucomp
inc
cmpxchg
int
jae
dec
mov
sbb
std
adc
popa
dec
xchg
mov
pusha
pop
pop
arpl
cdq
sub
in
dec
push
sti
das
mov
xchg
mov
mov
retf
push
and
inc
fiadd
mov
push
mov
fldenv
aad
jmp
es
pop
pop
int3
mov
arpl
jno
daa
mov
xor
(bad)
icebp
inc
cvtps2dq
lahf
inc
push
repz
mov
enter
cmp
and
shl
push
xor
scas
inc
fisttp
in
rcr
mov
(bad)
scas
shr
cmp
dec
std
std
cmovbe
pop
and
ins
out
inc
fcomi
(bad)
(bad)
mov
fidivr
dec
xor
inc
xor
cmp
out
push
jmp
mov
ret
out
jnp
xor
fdivr
adc
sbb
shr
push
js
pop
sbb
mov
(bad)
mov
ret
loope
sub
hlt
mov
inc
sbb
daa
cmp
cmp
lods
xlat
xchg
icebp
jecxz
lahf
mov
mov
mov
adc
push
movs
jge
or
and
or
xor
sahf
or
lock
and
jge
dec
xchg
pop
loop
xor
bound
jne
cld
into
stos
icebp
addr16
ret
lahf
(bad)
fs
jno
movs
jge
mov
into
pop
out
outs
mov
or
sub
mov
punpckhbw
in
pop
div
xor
out
add
inc
inc
mov
adc
arpl
or
cmps
call
loop
push
add
out
and
xchg
inc
sar
mov
inc
add
add
sub
inc
cmp
jb
outs
mov
dec
cmps
inc
lods
cmp
shr
adc
pop
jnp
in
das
jp
xchg
jge
sti
loopne
popa
lahf
out
mov
lods
es
push
mov
mov
mov
ins
adc
scas
and
js
mov
or
ffree
add
sbb
fbstp
icebp
or
push
or
push
xchg
jo
adc
(bad)
hlt
or
sbb
shl
jmp
sbb
and
push
jle
mov
stos
inc
jg
stc
add
mov
mov
or
add
shr
loop
sub
mov
add
stos
adc
xchg
or
dec
mov
cmp
jecxz
shl
test
movs
mov
dec
out
lods
mov
lea
repnz
loope
mov
add
pusha
rcl
xchg
out
out
adc
adc
ror
inc
aaa
cld
nop
add
add
jbe
(bad)
dec
jg
cmp
sub
cwde
aam
mov
scas
arpl
lock
jl
mov
outs
push
js
pop
sbb
cs
adc
mov
icebp
cmc
dec
call
dec
jnp
mov
fidivr
xlat
inc
jo
arpl
add
lahf
movs
xor
test
cmp
jge
xor
mov
dec
xor
or
dec
sub
out
mov
js
aad
add
inc
or
and
sbb
sub
cmp
cmp
mov
adc
dec
mov
dec
xchg
jmp
inc
leave
jmp
stos
jbe
mov
sbb
(bad)
fstp
jg
or
stos
iret
stos
stos
icebp
lds
sub
adc
xor
pusha
lock
daa
ret
loope
test
mov
dec
sti
inc
fdiv
cmps
mov
mov
scas
cmp
arpl
adc
xchg
mov
pop
push
adc
xchg
mov
mov
push
mov
xchg
loope
lds
stos
call
js
xchg
and
mov
inc
and
adc
mul
(bad)
xchg
movs
sbb
push
xor
jmp
pop
or
ss
push
xor
hlt
sahf
xchg
mov
lods
sbb
dec
push
or
cmps
inc
enter
les
mov
nop
dec
mov
mov
mov
ds
mov
mov
je
in
and
jecxz
xchg
inc
outs
sub
mov
inc
xor
mov
adc
adc
lds
stos
sub
or
mov
mov
jae
out
adc
bnd
push
mov
xchg
cmp
sub
ins
shr
push
loopne
pop
mov
mov
leave
xchg
ret
mov
loopne
out
mul
lock
outs
or
ins
pop
repz
retf
scas
xchg
jmp
outs
mov
xchg
shl
push
sub
and
and
xchg
lahf
int3
jl
lods
(bad)
(bad)
call
mov
and
mov
cmp
xchg
les
cld
push
sub
jl
xor
sbb
fwait
mov
jb
mov
sub
out
dec
popf
push
adc
in
(bad)
dec
inc
mov
aam
fs
jmp
div
cmp
in
imul
jge
mov
out
jae
adc
mov
push
lock
fisttp
ret
cs
test
jno
adc
rol
xor
aad
adc
dec
mov
out
sbb
pop
rcr
push
xchg
cli
sbb
mov
xchg
mov
ins
cwde
cmps
dec
add
aam
xchg
fdiv
sbb
js
adc
sub
adc
xlat
out
mov
popa
cmc
lds
sub
xor
jns
inc
sbb
shl
push
add
mov
data16
sub
jb
je
sbb
pop
mov
push
rcl
mul
int3
xchg
adc
ror
shr
cmps
jp
mov
lock
xor
test
pop
stos
mov
sbb
sub
pop
jge
loop
fcom
or
mov
or
sub
mov
and
into
mov
xchg
iret
or
cmp
rcl
mov
inc
adc
or
je
or
into
in
imul
inc
pop
(bad)
jbe
mov
mov
test
dec
add
mov
mov
mov
frstor
ret
add
dec
nop
fld
aam
pushf
bound
add
dec
loopne
pop
push
xor
and
or
aaa
cmp
(bad)
or
mov
mov
xchg
mov
mov
(bad)
test
div
in
repz
int
mov
ins
outs
jbe
adc
add
fst
sbb
adc
cmp
adc
nop
dec
xchg
adc
xor
jp
xor
les
pushf
cmp
cmp
out
jge
and
popa
mov
addr16
fwait
test
jnp
mov
add
pop
or
cwde
pop
and
and
cmp
fs
mov
pop
pushf
pop
adc
rol
xor
stos
lods
lea
dec
ja
mov
mov
inc
inc
std
xchg
into
pop
mov
mov
jb
data16
imul
jp
stos
dec
cmc
xor
pop
imul
iret
jo
xor
and
xchg
dec
xor
scas
int3
daa
push
pushf
daa
and
and
ja
clc
lds
mov
imul
mov
add
imul
cld
dec
inc
cwde
sub
push
xchg
cdq
in
pushf
jmp
aaa
mov
test
mov
fcmovnbe
mov
lods
test
cmp
pop
sub
scas
leave
cdq
outs
aam
ret
out
jo
sbb
mov
pop
stos
ss
sub
add
push
arpl
push
adc
xor
add
adc
enter
pop
push
out
mov
cdq
xor
push
sub
mov
cdq
fisttp
xchg
cvtps2pi
sbb
unpckhps
in
mov
jge
pop
dec
lods
xor
and
lods
or
adc
rcr
sub
into
push
cmp
add
pop
jno
fisubr
repz
int3
jbe
jbe
cmp
add
cmp
mov
push
mov
pushf
add
adc
mov
scas
icebp
aad
ins
jbe
je
aam
xchg
or
pop
pop
mov
xor
cli
jae
in
shl
repz
xchg
sbb
cdq
dec
cmp
add
dec
xor
inc
inc
push
js
pop
mov
dec
mov
xchg
ins
cmc
jl
and
mov
cs
and
dec
mov
stos
mov
xchg
xlat
das
pusha
pusha
sbb
jnp
repnz
repz
cld
mov
jo
mov
or
mov
adc
dec
and
popa
ja
or
add
sub
in
les
cmp
pop
mov
lock
arpl
ror
out
mov
cmp
inc
mov
mov
add
sub
or
or
push
xchg
rcr
aas
inc
mov
cmp
pop
cmps
sub
mov
call
ret
shl
cdq
(bad)
dec
mov
das
ins
scas
lds
mov
aam
mov
sbb
sub
push
int3
push
repz
mul
aam
xchg
test
adc
sub
sub
xchg
stc
sbb
jle
data16
sbb
call
xor
xor
pop
push
cmp
push
pop
cmp
push
ins
sub
ror
jae
jg
inc
pusha
out
push
jno
out
sub
lods
dec
or
arpl
ret
outs
sti
pop
cmp
ja
jns
jno
es
int3
(bad)
test
ss
dec
pop
in
fisubr
sbb
nop
inc
hlt
fbld
or
or
jge
ss
test
ror
push
jb
stc
inc
xor
and
sbb
dec
push
push
pushf
test
aad
ss
mov
outs
push
xchg
mov
adc
inc
repz
and
cwde
aad
mov
dec
mov
cmp
xchg
xchg
icebp
push
mov
sbb
cmp
mov
mov
and
mov
rcl
fldcw
jmp
and
mov
and
mov
cmps
cwde
add
xor
jb
pop
loop
push
sub
pusha
pop
sbb
icebp
test
lds
mov
mov
add
push
push
jae
jno
sub
loop
sar
cmp
retf
pop
dec
push
out
pusha
xchg
popa
ret
add
mov
(bad)
lock
push
div
fistp
adc
mov
or
adc
outs
fidiv
dec
adc
cmp
sbb
(bad)
test
dec
pushf
loopne
jns
mov
mov
mov
pushf
je
xlat
pop
jmp
dec
push
es
sub
aas
inc
dec
aas
xchg
cmp
cmps
stos
rcr
es
dec
jl
xor
pop
inc
std
pop
cmp
adc
shl
fdiv
add
int
jne
and
jg
repnz
mov
pop
ins
add
int
xor
or
jg
fistp
out
mov
in
inc
(bad)
cli
jae
cmps
aam
sbb
imul
(bad)
mov
retf
(bad)
or
adc
xchg
iret
mov
mov
xchg
scas
xchg
lods
adc
jo
mov
xor
jle
sub
mov
jl
cwde
or
jno
ss
xchg
arpl
adc
push
and
xchg
iret
push
je
mov
out
ret
aaa
xchg
das
mov
push
mov
and
xchg
push
inc
shr
push
pop
inc
or
aas
bound
lods
cmps
bound
cwde
adc
out
sbb
or
dec
jmp
pop
sub
je
retf
pop
lock
(bad)
cmp
cmps
jge
xor
inc
inc
add
fbstp
fild
ins
aas
into
sub
xor
add
movs
xor
xchg
cwde
ins
int
xchg
inc
xchg
popa
and
mov
add
ds
xor
and
jg
aad
enter
mov
fstp
out
lahf
pop
cmc
(bad)
and
outs
mov
les
xchg
dec
cmp
in
imul
fidivr
sbb
nop
xor
outs
jno
add
mov
xchg
pop
sub
adc
sar
inc
cs
sbb
adc
scas
push
mov
xchg
mov
xchg
ds
cmp
add
mov
movs
inc
loopne
and
loope
icebp
cdq
pusha
mov
mov
xor
jo
xor
cwde
sbb
mov
iret
push
fbstp
loop
sbb
pop
mov
cmps
imul
sbb
jecxz
push
jo
xchg
call
or
xor
arpl
fsub
imul
ss
fcomp
(bad)
das
cmc
or
or
daa
mov
mov
shr
pop
sbb
cdq
outs
push
cmp
call
adc
arpl
stos
ror
inc
jo
sti
sbb
inc
mov
sbb
dec
dec
aam
dec
push
mov
inc
es
sub
stc
sbb
dec
cli
retf
pop
arpl
adc
sbb
dec
aam
push
lds
daa
pop
dec
sub
mov
xchg
das
pop
mov
es
and
sbb
call
or
mov
jo
int
rcl
popa
mov
or
int
xchg
mov
in
xchg
inc
(bad)
cmp
(bad)
rol
push
mov
add
xchg
pop
popf
jmp
imul
sub
(bad)
(bad)
div
loope
loope
mov
or
or
mov
popf
push
mov
sahf
repnz
je
call
sar
adc
or
mov
iret
mov
in
scas
repz
push
loopne
sub
ja
mov
cmp
sbb
int3
into
mov
retf
out
add
mov
sub
xchg
mov
cwde
mov
leave
jbe
fld
fsub
xchg
or
or
test
or
cwde
ds
into
retf
(bad)
out
xlat
dec
xchg
outs
xchg
mov
int
adc
or
stos
and
imul
ret
adc
push
and
or
iret
retf
inc
icebp
sub
push
pop
or
ret
fcomp
call
mov
in
pop
pop
arpl
fstp
dec
loopne
push
int3
rcr
clc
sub
jp
cmps
jmp
cli
in
mov
mov
inc
cmps
mov
xchg
div
jle
dec
scas
pop
dec
loope
push
in
inc
mov
pop
pop
push
lock
ds
retf
fdivr
adc
cmps
mov
sbb
dec
mov
cmp
mov
mov
frndint
mov
fdivr
clc
popa
cmp
arpl
xchg
out
cmp
dec
adc
jmp
push
das
repz
jbe
clc
adc
dec
mov
jbe
iret
pusha
inc
aam
call
mov
stc
dec
loope
enter
or
fld
je
jg
mov
shl
xchg
bound
icebp
(bad)
int3
popf
lods
cmp
(bad)
xor
mov
arpl
adc
push
pop
adc
mov
test
lods
mov
xor
sub
push
jo
mov
gs
xchg
test
sbb
daa
imul
mov
mov
lahf
inc
(bad)
jp
aam
or
cdq
lods
aad
xchg
mov
ret
frstor
outs
xchg
mov
pop
or
dec
repnz
nop
jns
shr
mov
push
mov
xor
fisub
aad
jmp
xor
cli
xor
push
pop
daa
jp
push
inc
inc
mov
cmp
mov
gs
(bad)
fistp
dec
sbb
push
mov
mov
mov
and
mov
or
push
pop
repnz
and
imul
fwait
inc
pop
pop
pushf
push
sahf
adc
cli
addr16
dec
ror
bound
cmp
inc
hlt
dec
test
popa
jg
shl
mov
inc
push
mov
loopne
test
addr16
out
movs
mov
adc
fldenv
pop
dec
sub
jle
jmp
ja
test
out
sub
shl
ret
outs
push
aas
push
test
xchg
call
das
mov
cld
pop
cmps
mov
jle
push
das
sub
cs
or
sub
jmp
mov
mov
jbe
mov
cmp
ds
pop
cmp
imul
into
jae
lock
(bad)
pop
daa
jbe
stc
sub
push
or
out
bound
sbb
pushf
rcr
pop
hlt
mov
dec
pop
sub
cli
dec
pop
arpl
xor
add
push
xrelease
data16
xor
rcl
stc
jmp
jo
dec
repz
test
add
or
(bad)
(bad)
push
int3
dec
retf
jno
push
xchg
std
(bad)
ror
pushf
xor
adc
es
sbb
cmc
loop
cmp
ins
push
pop
jl
jbe
fisttp
sub
loopne
mov
into
rcr
mov
data16
cli
rcl
daa
sbb
call
adc
sub
jmp
cmp
mov
sbb
jns
xor
mov
mov
lds
test
sbb
jmp
sbb
sub
aaa
cmp
icebp
sbb
push
retf
sub
xchg
or
test
shl
mov
inc
not
mov
sbb
ins
lods
jecxz
dec
leave
in
mov
adc
test
dec
fadd
or
mov
pop
cmp
jle
dec
data16
stc
sbb
(bad)
push
out
jbe
in
pop
or
cmp
cmps
pushf
cld
mov
jg
mov
mov
mov
fsub
or
or
and
hlt
jb
jg
cwde
lds
or
(bad)
pushf
test
jecxz
sub
mov
call
adc
push
sub
lods
push
fs
and
add
fbstp
jecxz
lds
add
shl
popf
pop
mov
mov
cmp
outs
xor
neg
sbb
cmp
cmc
push
inc
pop
call
mov
xchg
cmp
call
cs
(bad)
into
push
stc
pushf
leave
mov
(bad)
std
ror
xor
pop
repnz
retf
jp
push
mov
shl
add
jge
fcmovnb
aaa
xchg
hlt
sub
loopne
loopne
mov
inc
xor
aam
mov
inc
inc
fild
call
push
xchg
cmp
nop
popa
scas
outs
lods
jns
sbb
add
jmp
xchg
gs
call
mov
in
aaa
lahf
pop
jnp
mov
movs
adc
test
mov
jecxz
push
aad
outs
and
cmp
push
mov
in
loopne
and
pop
and
test
fldz
xor
scas
and
or
mov
push
stos
mov
sbb
js
jmp
ss
test
jno
or
jo
add
add
mov
and
cmp
push
mul
cmp
sub
jmp
cdq
(bad)
out
dec
mov
into
sub
cmps
cwde
lods
mov
pop
cmp
or
xor
xchg
out
xor
das
pusha
dec
jbe
cmp
(bad)
jg
prefetcht0
mov
sbb
sbb
lods
pop
cli
aad
mov
sub
shl
lods
retf
mul
bound
xchg
xchg
dec
jmp
fstp
aas
lock
pop
xchg
rcl
push
or
pop
rol
rcl
je
lods
fsubp
or
inc
psubw
and
jg
dec
gs
into
mov
jmp
clc
fild
pop
lock
lds
mov
sar
jp
xchg
xor
and
scas
shl
or
adc
in
sbb
stos
out
test
jns
into
in
cwde
cmp
test
int
ss
aad
pop
repnz
(bad)
jnp
dec
push
pop
xchg
call
scas
inc
ret
cmp
inc
dec
and
jo
cmp
jle
mov
xchg
cmps
push
cmp
or
pop
loope
cld
inc
and
aam
and
jne
aam
mov
push
ins
test
jmp
gs
inc
push
mov
xchg
xlat
dec
add
js
sub
xor
aas
pop
jbe
data16
dec
mov
mov
ret
daa
xchg
xor
dec
dec
jbe
in
(bad)
sbb
push
xchg
lds
sbb
aaa
cmp
jg
sbb
movs
adc
movs
add
rol
adc
xchg
dec
cmp
push
bound
and
into
push
add
repz
or
ss
retf
mov
push
sbb
mov
xor
(bad)
mov
dec
mov
push
pop
(bad)
movs
std
(bad)
nop
shl
loope
rol
pop
mov
push
std
push
jmp
mov
cmp
xchg
xor
dec
jbe
mov
mov
or
push
xor
int
test
(bad)
sub
push
ds
pop
sbb
sbb
inc
mov
cdq
and
outs
movs
out
mov
jne
out
sbb
pop
retf
xchg
and
sub
sub
aam
xchg
add
dec
mov
out
mov
mov
lods
mov
dec
mov
loopne
in
(bad)
sbb
fnstsw
inc
xchg
jle
xchg
and
xlat
test
sbb
add
call
add
mov
loope
pop
push
inc
and
push
sub
pushf
adc
push
in
leave
int
inc
sub
iret
push
je
(bad)
cmp
xchg
test
jmp
sub
sub
xlat
jns
mov
sub
test
push
inc
inc
outs
aas
dec
shl
dec
popf
push
mov
mov
lahf
fcmovbe
cmps
and
je
enter
jnp
test
pushf
aad
ja
es
rcr
ja
push
xchg
frstor
aad
test
sub
xchg
fidivr
and
shl
push
mov
pop
imul
lods
dec
pop
bound
and
out
push
int
js
adc
pusha
mov
pop
xor
ds
sbb
dec
mov
add
popf
mov
dec
xor
xor
cmps
xchg
push
retf
and
fmul
push
mov
fdivr
cmc
loop
jmp
int3
dec
or
mov
xchg
or
xlat
in
push
popf
clc
jg
mov
inc
push
mov
sahf
nop
sbb
cmp
sub
es
push
jg
repnz
xor
push
loope
inc
dec
outs
sbb
cwde
(bad)
pop
mov
rol
(bad)
sbb
sbb
jno
mov
test
cdq
pop
lds
xchg
js
adc
(bad)
bound
movzx
sbb
fisttp
and
inc
(bad)
or
jecxz
cmp
or
pushfw
lea
imul
js
add
mov
cli
mov
std
push
cmp
dec
mov
or
ss
push
xchg
sub
xor
sbb
std
sbb
adc
(bad)
imul
out
adc
ins
outs
pop
xchg
and
aas
sbb
push
xchg
out
ret
cmps
pop
jae
push
push
adc
lock
mov
push
nop
push
jne
xchg
xchg
je
inc
sbb
cmp
bound
dec
xchg
or
xchg
fistp
scas
push
and
sahf
push
add
jns
test
pop
ins
aad
in
jb
cmp
outs
cwde
es
dec
mov
in
daa
(bad)
or
dec
int
mov
ins
xlat
dec
pop
dec
mov
call
inc
ins
lahf
sub
xchg
outs
and
xor
cmc
jg
pop
jmp
xchg
out
loopne
xchg
cli
cld
ror
dec
push
xchg
dec
cmc
fisttp
jmp
aaa
mov
sbb
out
fld
mov
loopne
adc
dec
shl
in
dec
mov
inc
imul
je
add
dec
retf
pop
and
sub
retf
test
stc
out
adc
dec
dec
or
cmc
icebp
mov
add
fcmovb
imul
jmp
(bad)
enter
sbb
fwait
data16
icebp
inc
daa
push
fisub
aad
xor
test
mov
je
cdq
sahf
repz
movs
fbstp
push
lea
aad
and
xor
in
icebp
loope
or
ret
adc
jle
push
adc
xor
je
nop
and
jmp
call
cmps
shr
enter
fs
inc
lds
push
xor
(bad)
push
(bad)
int3
loope
jl
cmps
imul
or
addr16
mov
push
and
or
cmp
jp
sbb
lods
cdq
push
push
mov
jmp
jmp
mov
in
sub
icebp
dec
dec
pop
add
push
jmp
rol
js
sbb
and
mov
push
(bad)
daa
sti
lahf
out
movs
mov
pop
sub
cld
imul
xchg
hlt
xchg
add
scas
gs
adc
jmp
adc
clc
adc
push
xor
sub
(bad)
ins
(bad)
out
mov
dec
shr
cwde
nop
je
xchg
fidivr
mov
fidiv
jecxz
xor
pop
xchg
mov
std
js
dec
pop
mov
xchg
and
mov
fistp
aas
stos
mov
sti
int
icebp
add
les
jge
ror
sahf
dec
sub
je
imul
cwde
cmps
jb
dec
cmp
imul
fdivrp
push
mov
adc
arpl
adc
sar
sub
sub
aas
adc
or
pusha
int
dec
das
push
inc
pop
aas
push
xchg
adc
mov
int
or
jnp
jbe
imul
sti
inc
and
jg
mov
(bad)
popa
call
cmp
inc
pop
popa
and
mov
lea
fst
sbb
xchg
jo
sbb
jae
ins
pop
inc
iret
cmp
push
pop
movs
(bad)
(bad)
cld
sub
inc
imul
(bad)
outs
(bad)
out
add
(bad)
hlt
adc
mov
adc
retf
stc
and
cmp
lahf
mov
ret
push
mov
cmp
dec
sub
mov
das
or
mov
pop
pop
xchg
sbb
int3
mov
or
adc
arpl
mov
(bad)
ins
retf
call
int3
jnp
sub
sub
jp
aaa
cwde
in
inc
add
mov
adc
adc
icebp
(bad)
data16
mov
push
outs
in
bound
mov
out
push
(bad)
push
adc
inc
loop
cs
jns
mov
dec
jae
not
js
jne
push
test
loopne
(bad)
call
or
dec
(bad)
in
aas
cli
mov
nop
outs
add
repnz
fiadd
jl
outs
into
adc
xchg
fist
adc
int
vmovhps
mov
sub
ficom
jp
sbb
cld
aam
pop
ds
and
fiadd
test
(bad)
stos
dec
bound
jnp
addr16
inc
cmps
lahf
ds
ins
stos
gs
xchg
mov
cmc
test
sbb
xor
inc
in
je
xchg
pop
mov
in
scas
dec
push
fisub
ins
test
sub
adc
dec
pusha
aad
aaa
scas
jbe
sbb
adc
and
fadd
push
dec
call
inc
and
(bad)
outs
push
xor
add
lea
ds
enter
sbb
rol
rol
cmp
leave
mov
or
sub
xchg
test
mov
sub
lock
in
pop
pop
stos
data16
add
loop
mov
sbb
and
mov
(bad)
shl
xchg
add
mov
dec
lods
mov
jmp
jmp
repz
dec
ins
inc
push
(bad)
xor
pushf
test
sbb
rol
movs
push
fisubr
movs
cmc
ds
jg
lahf
mov
cld
xchg
imul
aas
sub
(bad)
push
inc
int
js
fimul
add
pop
sbb
dec
dec
pop
lea
push
and
xchg
ret
outs
popf
stc
push
lock
adc
test
sbb
loop
lods
loope
sbb
dec
adc
daa
(bad)
test
jns
xchg
or
call
mov
(bad)
int3
cmps
and
pop
sub
add
aam
movs
jbe
xor
or
xchg
xchg
sub
xlat
retf
fcom
xor
jno
push
out
mov
(bad)
pop
jnp
call
outs
out
cdq
sub
shr
fimul
mov
push
cdq
xchg
outs
(bad)
xchg
lea
scas
leave
jno
inc
mul
dec
and
add
add
rcr
fidivr
js
bound
and
not
add
mov
cmp
cmp
xor
loopne
jbe
add
popa
ficom
and
sti
mov
and
mov
sbb
mov
mov
fadd
pop
int3
pop
jecxz
out
mov
rol
(bad)
cdq
lea
and
sbb
or
cs
pop
test
pusha
dec
pop
jmp
hlt
aam
sbb
ins
or
cli
in
cmp
jne
out
pop
push
(bad)
test
dec
push
or
test
(bad)
(bad)
ucomiss
or
xor
int3
xor
push
bound
stos
lahf
sbb
mov
fisub
jg
cdq
mov
or
mov
xor
bound
(bad)
hlt
addr16
xchg
clc
push
mov
mov
mov
jmp
in
aam
mov
mov
and
lds
jne
xor
cmps
in
nop
ss
(bad)
jmp
out
or
xor
mov
mov
dec
aad
push
push
lods
test
push
dec
fld
push
fdivr
cmp
or
mov
rol
sahf
inc
xchg
mov
dec
arpl
jmp
pop
xor
arpl
sar
sbb
int
push
inc
sbb
add
push
mov
loope
xchg
xchg
xlat
call
sti
pop
or
popa
mul
icebp
pushf
imul
pop
dec
sbb
out
sbb
cmp
jmp
(bad)
es
es
mov
loop
imul
test
jge
push
push
dec
aad
jae
loope
jle
push
shr
jmp
(bad)
fcom
push
mov
push
repz
xchg
push
mov
icebp
imul
mov
or
test
pop
mov
in
mov
xchg
push
cmp
or
jnp
or
repz
js
dec
jp
jnp
sbb
or
hlt
and
and
addr16
xor
(bad)
pop
cmc
mov
out
and
cmc
rol
jo
jns
fcom
dec
jle
pop
lea
mov
and
xor
(bad)
jle
call
dec
stos
aaa
in
and
xchg
imul
dec
cmp
retf
sar
push
inc
jmp
stos
pop
mov
sti
(bad)
xchg
sbb
(bad)
sbb
mov
adc
and
aas
jo
sti
ret
out
jne
mov
addr16
push
xchg
(bad)
adc
sbb
push
mov
and
inc
imul
push
addr16
popa
dec
mov
mov
add
xchg
adc
stos
jmp
out
in
cld
jns
add
jbe
and
je
(bad)
lock
int
retf
fld
(bad)
sbb
outs
ficom
xor
jae
ds
cmps
pop
inc
sahf
add
pusha
or
ja
leave
pop
adc
std
xchg
daa
adc
stos
call
in
scas
retf
and
ret
je
push
sbb
xchg
(bad)
rcr
loope
data16
jl
mov
ins
jp
stos
mov
inc
dec
(bad)
adc
jb
and
test
pop
iret
pop
pop
outs
loop
inc
sbb
jmp
mov
xchg
loopne
push
ret
mov
or
cld
mov
sub
rol
add
mov
jp
dec
xor
(bad)
mov
xor
sar
out
and
sbb
mov
dec
add
pop
cld
stos
mov
jbe
or
jmp
push
data16
sti
pushf
ror
mov
int
out
pop
in
mov
sub
mov
jbe
adc
fsubr
leave
and
push
gs
mov
add
adc
bound
adc
inc
xchg
sbb
jge
push
out
mov
jge
xchg
std
ret
or
xor
into
mov
or
mov
push
pop
in
mov
sbb
xchg
arpl
fcomp
adc
ss
loop
ja
ficomp
scas
lods
retf
mov
push
stos
sbb
pop
scas
jns
nop
out
icebp
mov
pop
adc
repnz
push
xchg
mov
or
cmp
adc
ins
mov
adc
fld
push
and
scas
sub
(bad)
les
ror
sbb
ret
sbb
daa
xchg
test
outs
push
cmp
xor
push
jle
xchg
push
adc
and
and
adc
push
jnp
inc
sub
cli
daa
mov
pop
add
les
jb
add
call
rcl
lods
push
dec
inc
cwde
outs
xchg
test
js
pop
dec
jae
fst
push
and
mov
es
sub
and
gs
dec
sub
mov
or
not
rol
sbb
imul
(bad)
xor
mov
sub
mov
pop
xor
or
mov
in
inc
dec
nop
push
fdiv
jb
mov
lods
push
iret
or
jno
pop
mov
repz
push
retf
arpl
push
mov
jecxz
in
repnz
push
xchg
jbe
add
cmp
adc
fidivr
outs
sub
fdiv
cmp
stos
xor
mov
pop
jae
out
sub
in
or
add
clts
mov
add
add
(bad)
mov
mov
cwde
jb
cmp
nop
retf
push
jb
dec
addr16
iret
(bad)
dec
sti
cmps
addr16
(bad)
dec
xor
addr16
aad
(bad)
lock
xchg
std
mov
in
lock
sub
aad
shl
les
sbb
fst
ja
jmp
mov
sub
or
add
nop
dec
gs
sub
lahf
fild
xor
inc
pop
out
add
xor
imul
sub
dec
push
mov
xchg
inc
iret
mov
nop
daa
add
cmp
aam
shl
mov
aam
pushf
xchg
shl
mov
adc
jae
not
data16
lods
xchg
push
in
dec
in
mov
or
sub
push
loopne
fimul
or
clc
push
mov
call
in
hlt
sbb
mov
add
xchg
or
or
and
shl
lds
jbe
adc
push
(bad)
jne
xchg
in
es
inc
das
and
mov
movs
mov
js
jno
cmc
cmp
pop
ins
and
mov
xchg
call
popf
mov
jg
and
cld
cmps
imul
cmps
sub
push
xchg
lock
xor
xchg
add
pushf
sbb
jae
or
adc
sbb
dec
test
ins
and
inc
idiv
pop
test
enter
and
imul
cli
xor
inc
inc
xor
sbb
retf
or
cmp
xchg
push
mul
ins
popa
and
fstp
call
repz
inc
push
push
push
cmp
shl
out
jmp
in
mov
inc
addr16
mov
inc
aam
out
mov
adc
xchg
ins
fnsave
pop
sti
dec
shl
addr16
mov
pusha
mov
jg
leave
lock
hlt
xchg
fsubr
adc
shr
daa
pop
test
mov
hlt
gs
fsub
outs
mov
cmp
pop
sbb
jnp
cmp
dec
mov
pusha
(bad)
lods
test
jbe
aad
das
and
jnp
movs
aaa
inc
jae
mov
leave
lea
xor
jbe
cmp
mov
jno
out
dec
rcr
or
pop
popf
test
jb
nop
or
mov
and
mov
and
mov
shr
xlat
ret
data16
movs
into
dec
ds
icebp
aaa
cdq
mov
stc
cli
xor
push
cmp
dec
jmp
cli
add
clc
sub
cmp
xchg
jmp
jl
icebp
push
dec
addr16
call
jo
sbb
hlt
inc
js
(bad)
push
fnstenv
sub
inc
fs
lea
mov
ret
push
int3
pop
and
cmp
sub
in
mov
rcr
enter
shr
mov
scas
fs
cmp
mov
mov
rol
jmp
and
adc
stos
adc
fisub
lods
mov
leave
mov
call
pop
cmp
sbb
mov
mov
jecxz
inc
stos
dec
cmps
test
push
mov
(bad)
scas
loop
jl
pop
popf
pop
fistp
pushf
div
ss
in
pop
or
mov
sbb
dec
adc
repnz
gs
inc
retf
adc
ds
rcl
popa
xchg
aaa
xor
iret
xlat
aam
mov
rcl
sub
and
jns
cmp
cmp
dec
push
retf
lock
sbb
cmp
into
or
jl
cmc
mov
mov
and
push
add
inc
test
mov
hlt
sub
cdq
into
push
cmp
div
stc
and
bound
hlt
dec
mov
xor
jno
jg
cmp
mov
into
push
pusha
xor
pop
dec
inc
pop
inc
in
data16
iret
ja
fwait
add
lods
in
or
jg
jbe
inc
int
jmp
mov
cmp
jno
(bad)
ror
(bad)
into
pop
mov
ror
std
and
sub
or
ror
jecxz
or
mov
mov
hlt
std
into
lahf
mov
mov
mov
ins
pop
test
add
ins
movs
into
fcomip
loope
mov
cmps
lahf
or
aam
xor
(bad)
pop
fild
stos
(bad)
sub
inc
rcl
or
inc
xchg
pop
pop
push
fsubr
push
loope
mov
clc
out
xor
call
pop
adc
test
cmp
lods
mul
bound
mov
aad
sub
xchg
in
loop
shr
jmp
iret
mov
mov
sub
arpl
leave
bound
out
aas
leave
test
retf
jbe
test
fcomp
dec
and
retf
mov
sub
add
popa
adc
idiv
pop
outs
sbb
push
mov
cmp
idiv
inc
loop
shl
adc
xchg
mov
enter
inc
sbb
xchg
pop
repnz
icebp
(bad)
call
aam
sbb
icebp
inc
push
clc
mov
fxch
mov
jmp
xor
stos
movs
sub
retf
ja
daa
add
adc
test
stos
pop
hlt
int
sub
mov
push
xor
adc
test
adc
fwait
xchg
les
pop
cld
cmps
cdq
sbb
aas
sbb
jns
pop
lods
push
pop
repnz
mov
loop
xchg
es
test
jg
stc
dec
mov
cmp
aaa
scas
js
jo
mov
cmp
fcomip
or
cld
bound
cmp
mov
mov
call
hlt
mov
push
sti
mov
pop
cld
mov
pop
mov
ror
dec
out
imul
mov
js
test
xlat
enter
jmp
mov
pop
and
jmp
fcomp
cmc
mov
mul
hlt
out
xchg
inc
mov
cmp
sub
sub
xor
ja
sbb
outs
fwait
add
retf
dec
add
pushf
fs
stos
sar
jns
xchg
fistp
pushf
push
jb
in
and
dec
mul
push
inc
mov
mul
sub
cs
enter
mov
xchg
je
mov
xor
movs
mov
aam
arpl
dec
inc
and
xor
jmp
cmps
pop
inc
mov
inc
aad
aaa
dec
sar
stos
sti
cmps
push
or
pop
stc
pop
(bad)
int3
add
push
dec
push
jae
out
test
in
sbb
sub
mov
sub
ja
jo
xchg
in
mov
and
or
ja
adc
jmp
inc
pop
pushf
mov
loope
in
pop
xchg
mov
fs
ror
jno
(bad)
aad
adc
jae
aaa
xchg
adc
sbb
cli
xchg
in
and
sub
popf
inc
fwait
or
je
or
repnz
mov
push
adc
or
pop
dec
sub
in
mov
rol
jae
mov
dec
push
ins
mov
adc
dec
or
or
or
je
stc
popf
stos
call
sub
cli
stc
out
lods
(bad)
mov
jns
inc
add
dec
call
mov
test
push
adc
retf
ror
sbb
loope
jno
pop
sub
xchg
push
in
xchg
push
cli
lea
fisubr
sti
popa
and
xchg
ficom
cwde
push
imul
sbb
mov
ins
xor
test
adc
les
test
ss
jle
repnz
sbb
pop
xor
mov
mov
outs
lahf
cs
loope
loopne
in
push
out
inc
mov
cwde
int3
jl
enter
ja
ret
scas
adc
js
jnp
inc
inc
mov
out
pop
(bad)
cli
cld
sub
cmp
push
call
xor
xor
(bad)
clc
test
hlt
xchg
out
lock
das
ret
loopne
jne
aaa
mul
cmp
stc
bnd
pushf
jge
mov
test
push
(bad)
scas
pop
sub
stos
mov
jmp
mov
inc
out
inc
cmp
xchg
popf
push
sub
in
ins
out
or
std
pop
pop
test
pop
js
call
push
lahf
mov
fcmovnu
hlt
out
call
inc
arpl
ss
xchg
adc
xchg
mov
ret
mov
adc
es
out
sbb
imul
std
cwde
daa
out
aas
fisub
push
(bad)
xor
nop
cmc
sbb
jl
inc
adc
mov
add
bound
jge
and
lock
int
add
stos
mov
sbb
test
push
inc
aad
rol
aam
push
(bad)
aad
sub
and
mov
leave
xchg
(bad)
jle
add
xor
or
mov
and
xchg
cmp
push
setg
lock
dec
dec
(bad)
dec
mov
pop
(bad)
jno
loop
cmps
xchg
shl
sub
stos
shl
sbb
jno
(bad)
je
or
stc
push
mov
inc
jno
pop
pop
mov
ds
retf
pop
xor
std
mov
bound
call
inc
shl
or
xchg
(bad)
imul
iret
fwait
pop
mov
dec
cli
xchg
cmps
mov
fst
dec
sub
push
pop
clc
sbb
cwde
lea
dec
dec
stos
cmps
mov
fldenv
test
sbb
cmc
cli
pop
jle
xlat
jmp
adc
xlat
jmp
dec
retf
daa
inc
ins
push
lds
mov
mov
aas
and
int3
xor
xchg
xchg
gs
pushw
jo
xor
sub
ret
adc
pop
push
jb
adc
xchg
das
fwait
enter
dec
int
mov
ins
xchg
je
or
loop
push
rcr
sbb
retf
je
das
daa
dec
sub
hlt
arpl
test
retf
pop
out
pop
mov
jno
in
mov
mov
into
popf
pop
je
sub
mov
push
sbb
pop
test
rcl
mov
int
inc
pusha
cmps
ins
in
push
retf
cmp
lods
dec
xor
sub
sahf
bound
stos
not
jae
dec
add
lahf
jge
fist
pop
push
es
pop
push
adc
inc
mov
and
out
imul
cmp
test
movs
cmp
pusha
xchg
call
xchg
daa
xlat
pusha
push
sti
in
jo
inc
sbb
push
mov
nop
lods
pop
call
jl
aam
out
(bad)
out
push
xchg
popw
out
mov
push
push
clc
scas
lahf
mov
cmp
mov
icebp
pop
mov
mov
xchg
std
rcl
fcom
jno
push
out
ret
lea
stos
xor
call
imul
shl
popf
nop
(bad)
jno
push
mov
dec
sbb
and
(bad)
sbb
pop
adc
mov
mov
ss
inc
popa
xchg
clc
test
sub
sub
ins
loop
jb
jb
test
push
add
sbb
daa
xchg
jp
cli
lock
std
jo
sbb
push
jl
enter
ins
push
repz
and
inc
test
or
cs
mov
push
jle
adc
dec
xchg
rcr
sub
mov
mov
test
adc
bound
xchg
movs
rol
mov
mov
mov
loop
iret
dec
mov
loopne
mov
ins
mov
pop
adc
pop
in
jg
hlt
nop
inc
addr16
fs
mul
jae
sahf
loop
jp
pop
xchg
mov
xor
inc
mov
xchg
test
out
aad
mov
dec
xor
call
scas
mov
lds
xchg
jno
(bad)
xlat
mov
or
sbb
push
adc
push
es
dec
call
pop
lds
adc
push
cli
mov
cli
mov
arpl
pop
aad
movs
rol
je
enter
inc
xchg
push
fyl2xp1
fcomip
jae
sti
sub
(bad)
or
ror
cmp
(bad)
out
ins
xor
mov
inc
add
retf
jb
sub
enter
nop
test
fsub
pop
lahf
cmc
adc
fdivrp
bound
sub
or
dec
stos
cdq
dec
sbb
aam
cmc
or
push
sub
jg
cmp
ja
nop
push
sbb
loopne
test
xchg
movs
in
dec
aad
sbb
push
mov
jmp
cli
xor
cmp
jne
push
mov
pop
(bad)
test
fsubr
int
inc
inc
loopne
aam
add
pop
lock
push
add
and
xchg
mov
popf
into
mov
jp
loope
out
xor
shl
jmp
add
inc
inc
mov
cmp
or
xlat
mov
sbb
popa
and
arpl
mov
inc
jb
scas
and
js
inc
mov
and
sub
pop
and
add
es
pop
mov
pop
push
xchg
ss
add
(bad)
clc
in
pop
jnp
rol
pop
sbb
fst
fwait
icebp
aad
inc
mov
das
dec
stos
inc
inc
inc
(bad)
mov
pop
xchg
jnp
cmp
ins
aad
jl
push
sub
inc
movs
inc
jnp
nop
sub
retf
ja
push
in
push
adc
mov
mul
inc
ss
outs
pop
xchg
inc
movs
outs
cmp
sub
das
add
in
mov
mov
xor
ins
add
sub
mov
(bad)
je
inc
mov
movs
call
lods
test
imul
int
cmp
lods
pushf
inc
jnp
repz
(bad)
je
loop
and
sbb
and
jg
popa
dec
pop
cmps
(bad)
sti
sbb
mov
retf
in
mov
lea
jl
ins
dec
dec
jp
mov
retf
cmc
sar
outs
adc
shl
scas
xchg
retf
sbb
cwde
push
out
jle
rcr
dec
outs
mov
inc
add
dec
sub
in
mov
and
xchg
push
mov
sbb
mov
in
mov
sbb
adc
jp
(bad)
aas
pop
arpl
adc
jle
out
rcr
fisub
and
hlt
add
and
js
fwait
nop
into
add
sbb
ror
mov
mov
cld
arpl
jmp
sub
das
jl
add
dec
cmc
pop
or
mov
push
test
or
aaa
loop
outs
mov
mov
dec
and
and
in
jb
dec
push
mov
cli
pop
fadd
mov
xchg
sbb
jecxz
fild
fadd
xor
hlt
out
ret
sub
outs
jno
popa
xor
pop
outs
xor
or
fcomp
jmp
call
mov
fadd
mov
jno
rcr
mov
test
adc
loope
(bad)
aaa
out
mov
mov
jbe
dec
xchg
mov
rol
pop
or
fisubr
shr
loop
ins
and
out
pop
xchg
fistp
pop
loopne
repnz
adc
xlat
ret
je
inc
js
loope
and
aaa
je
mov
pop
push
or
arpl
out
sub
sti
push
jne
xchg
push
inc
inc
(bad)
iret
xchg
dec
clc
cmp
test
out
inc
push
add
fsubr
std
jno
movs
mov
pop
(bad)
mov
xchg
not
sbb
data16
pop
mov
lock
je
fimul
and
retf
xchg
lods
jne
xor
leave
fistp
add
and
xchg
mov
add
inc
(bad)
icebp
stos
or
or
dec
arpl
cmp
mul
sub
call
mov
call
mov
js
cmps
xchg
cmc
stos
stos
and
fs
aam
test
outs
ds
mov
mov
mov
dec
jmp
jmp
mov
or
aaa
(bad)
xlat
lock
ss
jg
jg
mov
(bad)
rcl
repnz
or
mov
fcmovnbe
mov
loopne
lds
call
xchg
adc
jl
mov
arpl
or
scas
repz
je
fwait
sbb
push
jge
inc
jge
cli
cmc
(bad)
jmp
xor
div
aaa
mov
cmc
sub
cmp
jnp
inc
sub
retf
mov
repz
scas
cdq
push
icebp
and
adc
sbb
dec
repnz
cld
gs
call
dec
xchg
push
fidivr
push
mov
jno
and
dec
ror
rol
and
(bad)
cmc
cmp
scas
mov
inc
adc
jmp
cmp
fdivp
test
pop
and
and
xchg
mov
adc
add
in
pop
mov
xchg
xlat
sub
sub
ja
dec
lea
jle
je
ret
scas
fiadd
in
adc
jb
xchg
(bad)
jmp
mov
in
das
jmp
xchg
sti
push
ja
inc
cli
xor
hlt
mov
mov
enter
xor
or
repz
leave
aam
cmp
loopne
ins
out
dec
inc
icebp
mov
mov
sti
or
xchg
xchg
or
lds
or
jl
rcr
pop
test
sub
add
addr16
(bad)
pop
push
stos
xchg
sub
hlt
test
mov
or
sbb
add
jo
mov
repz
scas
adc
add
call
mov
xchg
cmp
loopne
in
cld
cmp
sub
mov
add
dec
vunpcklps
imul
sub
shr
mov
fmul
sar
lods
cmp
push
cwde
es
mov
ror
retf
jle
cmps
ss
sub
push
dec
pop
enter
mov
pop
xor
clc
inc
mov
pusha
or
inc
dec
cld
inc
mov
mov
test
mov
or
popa
mov
pop
lods
aad
cmp
push
lods
mov
gs
mov
leave
add
push
imul
cmp
mov
mov
dec
fs
hlt
jae
mov
sti
fidiv
aad
aad
stc
or
jns
dec
scas
add
scas
sub
pop
lods
xchg
mov
or
adc
jne
lea
jecxz
mov
mov
and
mov
jmp
movs
xor
dec
out
scas
imul
xor
std
xchg
out
shr
mov
adc
add
or
jae
pop
push
mov
mov
icebp
xchg
test
adc
xchg
ret
call
cdq
adc
loopne
(bad)
fs
xor
test
xor
out
js
mov
bound
mov
fsub
lea
lahf
mov
cmp
sub
jmp
dec
lods
gs
sar
adc
sub
test
pop
hlt
adc
shl
hlt
push
sbb
sti
mov
scas
rol
popa
pushf
rcr
(bad)
out
inc
cld
mov
cmp
inc
add
cmp
and
push
mov
or
aam
aam
mov
sub
(bad)
div
jge
in
push
jmp
inc
mov
and
jmp
cli
inc
(bad)
mov
sbb
stc
mov
call
iret
push
mov
xor
jle
rcr
fwait
xchg
sti
mov
add
pop
stc
sar
scas
jns
sub
fwait
das
push
xchg
mov
out
leave
inc
mov
pop
xor
mov
std
cmps
xchg
nop
add
push
pop
popa
fwait
xor
dec
dec
lahf
or
push
jbe
inc
test
mov
loope
jb
jns
push
clc
fild
xchg
fs
gs
fldenv
sbb
(bad)
shl
int3
cmp
(bad)
sti
ror
mov
in
inc
cmp
pop
pop
adc
idiv
test
lahf
or
push
and
out
pusha
out
sahf
pop
ret
mov
hlt
loope
pop
sbb
loop
pop
(bad)
cmp
sub
adc
mov
pop
pop
dec
and
lahf
adc
pop
cdq
mov
pop
ins
retf
mov
imul
(bad)
int3
fisub
int
mov
cdq
(bad)
push
test
sub
js
mov
scas
fisubr
sbb
add
pop
mov
xor
and
(bad)
ja
push
movs
push
push
mov
movs
adc
pop
push
jb
popf
outs
mov
cmps
stos
cld
int3
pop
fbstp
faddp
ja
gs
loope
fstp
sub
mov
mov
loop
aam
inc
jne
cli
push
push
aaa
inc
inc
ret
ret
push
inc
lgs
pop
mov
fistp
popa
stos
pop
sar
add
adc
push
sbb
daa
cmp
push
popf
jne
lock
fnstcw
sti
aaa
test
jno
inc
jle
int
and
aad
adc
rcl
retf
xor
jbe
loope
sti
sbb
pop
cmp
les
mov
retf
test
(bad)
rcr
inc
out
xchg
ins
in
fsub
and
je
inc
add
cmps
int3
out
xchg
sahf
pop
call
cmc
pop
xor
xor
in
or
jle
jbe
sti
imul
int
shl
mov
(bad)
mul
movs
cdq
xchg
out
fwait
mov
cli
in
mov
pop
pop
(bad)
leave
dec
cmc
sbb
mov
push
pop
cmp
ins
mov
sub
push
sub
or
gs
jle
pop
jle
push
aad
ins
js
sbb
cmp
sub
push
or
xchg
retf
push
fiadd
aaa
add
mov
push
clc
xor
add
es
loop
fdiv
push
cmp
loop
push
dec
push
fs
fistp
ficom
je
bound
out
pop
repz
xor
cmc
mov
clc
pushf
ss
adc
jnp
mov
inc
and
add
adc
or
mov
pop
movs
inc
jmp
icebp
gs
push
out
jmp
adc
je
cmp
aad
icebp
sbb
dec
iret
ins
sub
or
add
xor
inc
rcr
dec
sbb
(bad)
or
sub
lods
or
out
je
aad
fsubr
repnz
aas
xor
inc
fisttp
dec
sub
cmp
movs
lds
mov
int3
jnp
push
les
jmp
jecxz
dec
es
mov
cli
jge
loope
sar
lods
leave
scas
addr16
cmp
cmp
push
aam
xor
das
add
jbe
popf
arpl
mov
jno
add
add
pop
test
aam
pop
retf
dec
jb
ret
outs
popf
push
mov
ror
shl
js
mov
push
dec
addr16
sub
push
addr16
aaa
inc
mov
and
mov
mov
int3
xchg
push
inc
cmp
sar
lods
jo
dec
lods
stc
(bad)
adc
(bad)
sbb
in
mov
add
div
imul
inc
sub
lods
and
mov
or
cli
xor
in
mov
es
sbb
(bad)
clc
leave
xchg
stos
test
in
test
mov
dec
mov
(bad)
sub
aam
movs
mov
xchg
jle
add
out
jp
or
aam
popf
pop
outs
xchg
fild
cmp
outs
les
jmp
mov
inc
add
cld
jmp
call
outs
push
mov
in
(bad)
fmulp
bswap
push
adc
dec
sbb
xor
sbb
mov
(bad)
fwait
bound
jo
cmp
or
fstp
outs
ret
pop
imul
sub
out
sbb
xchg
hlt
out
js
mov
(bad)
(bad)
hlt
rcl
add
cmp
inc
repnz
mov
fwait
cmp
sbb
pop
cli
lds
mov
mov
push
pop
jae
loop
sbb
sar
cwde
push
dec
out
retf
sbb
test
inc
jecxz
push
sbb
xchg
int3
(bad)
call
cmp
and
lds
inc
and
xor
arpl
pop
and
sub
dec
inc
adc
shr
inc
repz
cmp
bound
jbe
dec
push
add
ja
inc
mov
fadd
(bad)
aad
aam
jbe
adc
adc
lds
inc
(bad)
push
and
inc
jecxz
sbb
xor
nop
into
mov
(bad)
retf
stos
push
xchg
or
or
ror
call
cmp
sub
dec
sahf
daa
sub
mov
xchg
aaa
out
imul
lods
mov
inc
jbe
cmp
fstp
fbstp
push
mov
xlat
sub
repnz
cld
and
mov
dec
pop
cli
repnz
sub
sub
(bad)
mov
repz
adc
fsubp
sub
xor
jecxz
sub
(bad)
addr16
mov
or
ins
sbb
sbb
jg
imul
inc
cld
pop
push
mov
sbb
add
adc
bound
pop
cmp
inc
call
jno
(bad)
xchg
lock
mov
adc
xor
push
push
(bad)
rcl
ret
in
sbb
aas
add
inc
sbb
mov
sbb
call
cmp
mov
pop
out
push
inc
sar
or
bound
mov
sbb
pop
xchg
sbb
outs
dec
mov
push
and
stc
jle
xor
push
std
arpl
inc
sbb
retf
test
xor
(bad)
cmp
ins
mov
stc
sar
inc
fnstcw
inc
outs
mov
icebp
xor
shl
mov
pusha
ret
inc
mov
pushf
mov
xchg
xchg
xchg
add
and
push
add
shl
sbb
int3
inc
mov
rep
push
sbb
ins
lock
mov
fimul
cmp
pop
mov
sbb
test
imul
ficom
int3
adc
mov
test
jle
adc
out
aam
xor
(bad)
pop
mov
cmp
fsubr
sbb
imul
push
xlat
fld
es
mov
pusha
stos
xchg
xor
or
int
or
or
or
aas
adc
inc
pop
dec
cli
retf
mov
test
mov
dec
dec
stos
inc
stc
mov
adc
push
sbb
pop
cmp
xor
xor
adc
call
mov
push
mov
scas
and
data16
cs
sub
int3
dec
jns
xor
xor
dec
xchg
out
push
and
mov
cmp
je
inc
mov
jns
out
add
js
add
add
dec
aad
les
(bad)
aaa
ror
enter
cmc
es
mov
pop
and
jns
mov
inc
fild
mov
jmp
stos
ror
js
jmp
xchg
pop
fild
test
inc
ins
inc
xor
scas
cmp
add
sbb
pop
xor
sti
jle
shr
inc
mov
push
push
pushf
lods
jb
imul
enter
pop
inc
add
adc
in
cld
sbb
pop
callw
pop
movs
xlat
xor
xchg
cmps
pusha
shl
into
push
iret
mov
mov
aas
pop
and
(bad)
aad
jmp
push
shr
jg
jne
test
mov
mov
retf
sub
pop
std
mov
call
sub
fcomp
cli
xor
ja
mov
xor
inc
jmp
test
out
xor
mov
je
test
loope
lahf
push
cmps
loope
pushf
inc
repnz
frstor
push
add
movs
pop
fiadd
sti
push
test
cmps
imul
pop
add
and
pop
aas
inc
mov
popf
jmp
xor
mov
das
add
mov
dec
ins
jns
push
xlat
test
out
shl
imul
mov
pop
cli
stc
popf
call
pop
mov
pop
bound
push
shl
inc
aaa
out
mov
dec
push
sbb
mov
pop
xchg
lahf
sbb
inc
pop
ins
rcl
jns
inc
inc
addr16
inc
(bad)
fldcw
dec
adc
sbb
inc
pop
and
pusha
push
movlps
adc
loop
(bad)
int
pop
sub
leave
adc
ss
pop
fs
gs
dec
pop
ins
rcr
hlt
push
ins
pop
out
or
push
gs
lds
xchg
ins
xchg
xor
mov
push
mov
cmps
dec
arpl
in
jo
cs
outs
std
pop
scas
stc
sub
xlat
out
stos
repz
gs
mov
aaa
popa
mov
add
leave
push
and
test
mov
jb
push
pop
jae
cli
inc
pop
mov
add
(bad)
ficomp
jmp
imul
out
loope
sbb
(bad)
imul
lahf
add
jge
add
cwde
mov
add
fwait
retf
pop
mov
fbstp
or
sbb
ret
mov
xchg
ret
call
imul
sbb
js
bound
in
fldcw
and
das
push
repz
ficom
pop
jb
add
data16
imul
jecxz
stos
inc
add
push
aas
mov
mov
(bad)
mov
frndint
dec
push
aas
repz
cmp
je
pop
stos
nop
sbb
cmp
icebp
leave
push
mov
cmc
xchg
xor
mov
mov
ret
inc
call
es
push
in
sbb
cmp
xlat
imul
fwait
xor
daa
gs
shr
fwait
imul
mov
add
mov
adc
cmps
xchg
ja
test
jne
pop
aam
mov
jmp
pop
movs
mov
std
je
pop
xor
bnd
daa
hlt
sbb
out
clc
je
sub
sub
xlat
dec
in
jmp
not
nop
imul
or
cmc
js
adc
jb
and
sbb
shl
ret
add
scas
dec
mov
lea
cmp
rol
or
push
pop
cmp
mov
cdq
and
or
imul
or
(bad)
out
(bad)
ror
into
dec
jnp
pop
ins
pop
data16
xchg
in
stos
mov
aaa
inc
into
xor
in
lahf
cmps
mov
icebp
jmp
xchg
repz
pop
jle
mov
out
mov
mov
into
js
aas
(bad)
je
inc
lds
loopne
mov
cmp
sub
js
clc
loop
push
imul
cmps
cmc
fisub
pop
mov
lods
das
rol
add
sbb
retf
push
mov
adc
push
nop
rcr
test
in
adc
pop
mov
and
fwait
or
jno
ins
sub
test
ins
(bad)
rcr
jno
(bad)
xchg
xor
fild
or
in
dec
dec
push
mov
out
xchg
jge
shr
rcl
dec
les
das
mov
pop
repz
out
jae
out
adc
push
push
adc
add
push
xor
xor
pop
xor
lahf
push
popa
(bad)
dec
outs
add
jmp
pop
test
mov
scas
inc
dec
ins
into
fldcw
out
mov
iret
add
add
lahf
mov
pushf
mov
sub
mov
and
stos
movs
rcl
jne
ret
test
(bad)
dec
mov
and
push
mov
xchg
pop
mov
xchg
out
pusha
call
and
test
sbb
push
mov
pop
cmovle
jecxz
out
cdq
mov
add
pop
add
or
sub
frstor
popa
xchg
out
shl
mov
imul
mov
add
lods
imul
add
cmp
cli
nop
dec
iret
in
inc
inc
mov
jo
ret
dec
enter
jmp
sbb
cmp
ret
stc
sub
std
mov
ficom
aam
aam
add
dec
mov
mov
ins
pop
pop
pop
inc
ds
leave
aas
out
sub
lds
jno
gs
adc
cld
fisubr
popa
test
sahf
xor
les
jb
fidiv
cmps
adc
mov
xor
mov
mov
inc
retf
and
xchg
fisttp
add
fisttp
fdivr
(bad)
pop
int
cmp
(bad)
mov
mov
cmps
in
mov
(bad)
loope
mov
jae
or
out
aas
arpl
lods
and
or
xor
jle
pop
dec
xor
int
(bad)
inc
iret
retf
dec
mov
add
sub
pop
push
rol
xchg
push
icebp
push
in
mov
fistp
jle
cmp
aas
pop
xor
icebp
ins
fs
sub
jl
repz
xor
(bad)
ja
mov
(bad)
aaa
call
ret
push
pusha
push
push
mov
fisubr
les
adc
aad
out
repnz
add
mov
mov
std
out
ret
jo
and
dec
adc
js
dec
in
repz
sub
push
adc
xchg
mov
shl
fst
pop
aam
ja
xchg
jmp
out
inc
mov
pusha
outs
jecxz
inc
mov
inc
cmp
(bad)
push
les
push
popf
pop
pop
pop
ficom
sbb
stos
mov
mov
mov
call
dec
adc
sbb
dec
mov
sbb
mov
loop
aad
cmps
add
in
pushf
sub
mov
mov
push
sahf
xor
jp
mov
pop
lds
pop
mov
inc
dec
push
jno
aam
xlat
lods
loopne
ror
or
xchg
and
xchg
stos
cwde
fimul
fadd
out
(bad)
scas
jb
mov
loop
sub
mul
sbb
cld
pushf
mov
and
push
fs
ret
inc
es
in
push
(bad)
mov
retf
cli
punpckldq
sbb
js
xchg
in
test
mov
ja
rcr
int3
rcl
push
and
fdivr
dec
sub
leave
jge
xor
cmc
jg
pop
push
mov
test
add
or
fs
hlt
sbb
xchg
dec
jp
fucomi
fwait
in
mov
aaa
shl
mov
ins
jmp
pop
iret
ins
mov
std
sub
xor
mov
push
loopne
xchg
arpl
cmp
test
lock
push
mov
mov
(bad)
test
jmp
repnz
(bad)
test
fwait
dec
or
or
lods
mov
dec
sbb
sbb
hlt
xor
mov
add
pop
rcr
out
xchg
(bad)
mov
pop
push
js
jmp
ss
add
or
or
or
inc
push
idiv
jo
imul
or
inc
jb
loopne
idiv
rol
repz
lods
out
add
lea
inc
push
or
popf
psraw
push
dec
ret
jg
push
shr
push
mov
pop
jl
sti
mov
or
jne
fdiv
pop
lds
mov
mov
jo
mov
icebp
fiadd
dec
addr16
(bad)
or
pop
outs
movs
addr16
add
push
es
(bad)
fld
outs
ret
jnp
mov
add
hlt
int
ret
es
sbb
in
icebp
inc
pop
xor
pushf
mov
xor
dec
arpl
mov
rcl
test
(bad)
push
ins
adc
movs
and
mul
adc
adc
ret
push
inc
gs
shl
mov
call
sub
cs
cmp
es
ret
cmp
cmp
or
sub
pop
rcl
popa
repz
mov
shr
(bad)
sub
nop
popf
dec
loope
in
or
rcl
add
jns
in
shr
mov
dec
jle
mov
outs
les
xchg
and
(bad)
mov
ss
xchg
mov
ss
add
je
inc
imul
(bad)
lahf
push
inc
or
fild
sbb
dec
(bad)
ficomp
rol
mov
out
dec
and
adc
cmp
jg
sbb
outs
jns
mov
inc
lods
and
dec
adc
mul
(bad)
fdivr
stc
in
das
mov
es
mov
stc
adc
xchg
aad
loop
imul
mov
outs
sub
add
call
out
aad
cmp
sub
push
fs
shl
mov
jne
jnp
aaa
pop
inc
pop
cmc
lods
sub
pop
pop
jo
adc
jbe
in
pop
in
add
cwde
and
data16
stc
mov
xchg
jecxz
xchg
sahf
das
mov
sub
mov
lea
fstp
fadd
out
mov
ins
fidivr
mov
frstor
inc
in
jg
pop
leave
mov
mov
into
mov
add
jnp
adc
sbb
fwait
cmp
imul
stc
mov
inc
aad
or
mov
int
add
in
pop
fst
xchg
sar
dec
jp
(bad)
jne
call
ret
dec
mov
in
mov
aam
icebp
das
add
ins
pushf
jb
xor
fwait
push
aaa
cld
cwde
std
jmp
push
jge
push
fs
sub
fdiv
and
jecxz
inc
jmp
retf
jns
fwait
jns
jl
and
mov
inc
sub
in
mov
fstp
retf
push
adc
push
test
jnp
out
adc
xor
push
outs
xor
add
div
inc
repz
add
xor
push
lds
xor
lods
fwait
jle
xchg
test
sbb
ja
pop
cmp
fstp
pop
addr16
nop
mov
aad
lods
ret
push
cdq
push
fstp
repz
test
cld
fild
scas
(bad)
sbb
xor
dec
pop
fist
(bad)
lea
jnp
ret
ja
adc
push
sub
mov
aas
jo
call
xor
fadd
clc
jmp
cmp
inc
push
scas
cli
adc
push
jnp
movs
stos
pop
xor
adc
mov
push
pop
pop
adc
cmp
rcl
nop
adc
sar
add
enter
or
cmp
fdivr
pop
test
inc
fneni(8087
sti
nop
pop
enter
ss
dec
add
rcr
cmp
sub
and
shr
push
lods
xchg
xor
adc
loop
movs
jo
mov
sbb
(bad)
push
leave
and
add
mov
dec
push
jo
in
and
xor
jp
rol
loopne
cmp
ret
sub
inc
xchg
sar
nop
mov
mov
xchg
push
stos
and
(bad)
jmp
les
and
lods
ret
sbb
repz
xor
lock
xor
xlat
dec
or
add
inc
nop
xor
scas
xor
hlt
push
dec
in
mov
cmp
cld
mov
sub
icebp
cmp
js
mov
popf
in
hlt
pop
leave
mov
inc
iret
ret
mov
out
jg
mov
sub
mov
addr16
sbb
enter
jg
rol
inc
mov
jmp
xchg
and
fisub
cs
lods
pop
cmc
(bad)
mov
sub
lods
outs
movs
sbb
data16
sub
mov
jmp
jmp
add
pop
int
shr
clc
xor
and
hlt
cmc
jmp
push
and
mov
jae
ja
mov
jne
test
aas
add
je
pop
les
dec
jns
daa
in
aad
dec
das
jg
push
lock
neg
push
retf
xchg
cmps
push
mov
popa
dec
test
adc
test
push
sub
pop
pop
sbb
test
int
sbb
inc
stos
add
mov
ins
add
mov
and
test
xchg
sbb
addr16
mov
in
lods
push
cwde
jmp
cmc
fwait
dec
and
(bad)
cmp
dec
mov
inc
push
fdiv
push
adc
rcr
add
in
sub
dec
mov
xchg
jne
es
ds
loop
mov
inc
shr
or
bound
daa
mov
imul
data16
adc
ret
add
leave
dec
dec
stos
add
add
inc
jge
das
cmp
push
lock
js
ret
shr
xor
pop
pop
shr
imul
mov
jecxz
retf
cdq
movs
adc
sbb
shl
rcr
or
xor
push
(bad)
(bad)
mov
jmp
inc
test
movs
pop
and
gs
sahf
popf
pop
pop
push
pop
push
pop
inc
pop
sub
cmp
sub
mov
repnz
mov
inc
outs
aam
sbb
fidivr
cmps
neg
pushf
mov
add
outs
adc
js
jns
or
mov
bnd
mov
repnz
push
lds
cmp
adc
aad
push
jge
nop
aam
es
sbb
shr
(bad)
mov
sbb
dec
fst
cmp
add
aas
scas
fist
pop
push
call
mov
mov
or
(bad)
dec
stc
or
jne
xchg
jg
js
mov
pop
shr
inc
jne
call
in
cwde
lds
js
ret
in
sub
jno
repz
aas
pop
(bad)
xchg
dec
mov
movs
daa
sub
call
fs
in
pop
loop
cmp
pop
xchg
stos
sti
fs
mov
cmp
jno
pop
dec
dec
adc
sub
xor
retf
inc
aad
call
dec
rcl
mov
mov
jb
cmps
xchg
xchg
mov
and
jo
pop
jb
pop
(bad)
push
xor
scas
pop
ins
push
in
nop
fwait
pop
cmps
das
jg
jg
stc
cmp
inc
pop
bound
enter
xor
sub
xor
adc
repnz
sub
push
inc
and
mov
das
ret
jns
in
push
into
test
ss
sti
mov
dec
call
sub
xor
jne
leave
stos
mov
ficomp
stos
inc
ins
ds
int
lods
xchg
sbb
movs
mov
or
or
stos
int
add
jbe
fmulp
pusha
jmp
ja
push
rcl
outs
pop
pop
sbb
mov
jne
popf
jne
xlat
int3
cmps
loopne
mov
mov
inc
xor
out
das
lds
loope
push
lods
aas
push
sbb
pushf
push
fbstp
aad
test
or
push
gs
sub
mov
pop
test
xor
mov
jo
rcr
or
mov
and
ja
fiadd
imul
cld
jle
ds
mov
cmp
stos
mov
add
pop
ja
je
push
pop
inc
jl
int
push
sub
cmp
mov
push
sub
out
fcomp
add
rol
fsub
pop
and
adc
push
stc
jno
cli
daa
shl
cmp
adc
movs
cmps
fcomp
dec
cmps
loop
adc
mov
xchg
pop
mov
cli
fsubr
call
cmps
mov
jb
icebp
sbb
fstp
mov
inc
mov
or
gs
xchg
push
pusha
cmp
inc
jnp
sub
xor
mov
test
retf
mov
popa
mov
xchg
or
jb
int3
stos
mov
lock
cmps
mov
nop
jge
cmp
push
imul
retf
dec
addr16
cmp
(bad)
popa
aad
scas
(bad)
retf
imul
shr
cmp
xor
into
cmp
rol
lods
cli
lods
movs
repnz
inc
std
jne
stos
scas
je
lock
das
shl
pushf
mov
xchg
enter
addr16
jns
sub
je
in
ficom
ja
iret
outs
cmp
pop
dec
ret
mov
jbe
mov
int
push
sub
popf
test
test
in
fstp
gs
jbe
fadd
mov
pop
jnp
dec
cmp
out
ja
sbb
add
popf
les
or
ficomp
(bad)
daa
lea
fsubp
(bad)
mov
cmp
aaa
push
mov
dec
push
sub
fisubr
sub
add
bound
sub
mov
dec
call
je
ja
push
aaa
cmp
ss
ja
mov
nop
dec
pusha
aad
vaddss
or
add
gs
ins
adc
push
cld
mov
shr
sahf
outs
sbb
jp
mov
jl
sub
aam
fwait
movs
scas
xor
dec
cmp
cmp
sti
jnp
test
cmps
shr
dec
mov
and
and
retf
and
mov
dec
adc
call
jmp
test
jb
(bad)
jg
sbb
lods
pusha
fmul
push
xchg
in
out
and
test
or
inc
dec
dec
cdq
add
icebp
in
ds
jbe
fdiv
int3
dec
sti
imul
dec
jg
add
cmp
mov
dec
cmp
movs
lods
dec
les
lods
outs
xlat
add
sahf
dec
sbb
push
out
test
pop
jbe
test
retf
xor
fcomp
cdq
xor
cmp
sbb
sti
call
or
sub
add
or
inc
(bad)
lock
ins
outs
xchg
dec
jp
rol
push
rcr
ret
sbb
or
ss
stc
pop
fldenv
lods
jnp
and
cmps
leave
call
add
pop
enter
cvttps2pi
and
(bad)
push
or
nop
cmps
jl
push
lahf
sub
inc
fs
mov
out
sti
lahf
push
imul
mov
test
cdq
ret
and
movs
pusha
int
jmp
aam
in
add
sub
jns
xor
addr16
daa
and
retf
push
jmp
inc
test
jns
mov
cld
psrlw
mov
xchg
imul
retf
out
test
jbe
aam
xchg
cmp
lea
test
push
stos
fisubr
pop
dec
mov
fadd
cwde
out
arpl
or
and
fiadd
cmp
push
push
and
pop
popa
cli
daa
or
or
mov
inc
or
test
push
or
out
xor
test
jno
add
pop
add
mov
jns
inc
stos
cmps
je
adc
xor
and
aaa
xchg
stos
pop
xor
js
js
pop
add
lock
js
cmp
push
cmp
arpl
pop
es
sbb
push
add
mov
mov
xchg
fsub
pop
aad
push
loope
cmp
mov
imul
push
rcr
jb
(bad)
cwde
and
jmp
sbb
daa
test
aam
sti
add
fld
icebp
add
xchg
rol
repnz
ja
push
adc
pusha
add
mov
mov
push
xor
fst
or
pop
pop
cmp
int3
sbb
mov
jnp
mov
pop
ss
fucomi
pushf
mov
test
cmp
mov
and
jno
and
js
inc
push
scas
inc
(bad)
mov
or
and
sbb
sbb
loopne
push
retf
jo
loop
cld
push
pop
push
pop
nop
scas
js
rcl
jmp
mov
in
jge
xor
cld
ror
xor
lds
push
outs
mov
jge
ja
push
sbb
cmp
inc
xor
or
rcr
pop
mov
mov
mov
mov
jno
pop
ret
in
repz
int
movs
out
cmp
iret
ret
iret
mov
into
mov
xlat
mov
inc
adc
shl
xchg
shl
es
add
add
push
lods
int3
dec
cmp
cmps
inc
jno
adc
clc
ins
or
adc
pop
xor
cmp
pop
add
sub
inc
stos
cli
adc
mov
out
mov
scas
push
adc
mov
loop
data16
ins
in
fld
ret
inc
in
lock
(bad)
jmp
mov
pop
stos
ret
out
imul
jge
mov
(bad)
fs
pop
dec
fmul
xchg
nop
movs
ficom
ret
bound
inc
and
and
add
mov
dec
jecxz
sub
push
leave
(bad)
xor
jg
jmp
adc
lahf
gs
ja
cmp
pop
je
arpl
ins
xor
fdivr
(bad)
xor
jle
mov
xor
(bad)
push
xlat
popa
mov
jbe
xchg
jmp
xor
adc
movs
mov
add
hlt
mov
rcl
and
(bad)
int3
imul
outs
mov
and
sub
sti
and
pop
loopne
dec
cmps
fsub
add
push
pop
xor
retf
mov
cmp
cmps
lock
jg
sbb
xor
pop
cs
stos
pop
enter
adc
sti
adc
adc
movs
mov
(bad)
jg
xchg
jne
xor
or
pop
into
cs
cmp
add
mov
mov
push
into
sar
loopne
retf
jne
loop
pop
push
cmp
and
mov
pop
mov
pop
dec
jne
sahf
dec
stos
add
inc
dec
repz
push
push
xchg
push
sub
pusha
sbb
sbb
ja
sub
(bad)
lock
bound
stos
jns
in
mov
or
out
inc
lahf
jle
dec
(bad)
sub
fdiv
mov
inc
pop
mov
jns
rcl
lock
icebp
bound
js
mov
dec
outs
cli
fsubr
stc
loope
xor
cmp
jle
dec
icebp
jge
(bad)
sub
repnz
or
mov
sbb
adc
mov
sahf
xchg
out
xor
pop
cmps
call
rol
sbb
mov
ret
cmps
sub
stos
push
ss
movs
sub
popa
add
(bad)
stos
sbb
daa
adc
pop
add
cmps
aam
movd
ins
push
lods
mov
and
outs
sbb
fcmovnbe
sbb
mov
dec
and
pop
leave
adc
mov
pop
inc
movs
inc
push
mov
stos
mov
fstp
xchg
and
xor
fdivrp
jmp
jle
inc
mov
fdivr
inc
adc
adc
adc
sahf
jl
xor
addr16
xchg
sbb
fs
push
scas
jno
mov
test
repnz
dec
data16
or
mov
pop
pop
lods
call
scas
js
and
and
imul
mov
jne
xchg
leave
ins
push
xor
xor
mov
(bad)
adc
xchg
fucompp
xor
fdiv
adc
pop
es
or
add
and
push
and
mov
ins
movs
pop
out
std
(bad)
(bad)
bnd
inc
mov
test
arpl
scas
cmp
xchg
jmp
in
push
pop
mov
gs
or
cmps
dec
es
push
inc
jbe
jmp
addr16
ds
or
inc
pop
sbb
push
xor
fcomip
sbb
jmp
jecxz
arpl
(bad)
pop
iret
pushf
inc
pop
fiadd
mov
mov
and
lods
sbb
add
add
dec
shl
out
cmp
sub
in
clc
sbb
cmps
sub
cdq
push
(bad)
int3
mov
mov
and
ret
rcl
mov
fisubr
cmp
shl
shl
adc
in
mov
jmp
(bad)
jae
lds
sbb
mov
jno
ins
loop
xor
stc
mov
ds
jge
pop
pop
xchg
jnp
inc
xchg
fwait
jmp
and
std
mov
aam
inc
shr
cmp
popa
cmp
in
pop
in
jns
pop
stos
push
gs
and
out
mov
into
adc
mov
fadd
mov
loope
mul
mov
fidiv
cmp
push
lods
mov
rcl
fld
mov
or
js
cmps
mov
jg
dec
repnz
shl
(bad)
fsub
ficom
mov
outs
lods
jo
aaa
cdq
mov
int
gs
mov
sbb
cmp
pop
xor
call
mov
imul
mov
and
sbb
cld
add
inc
stos
dec
test
fcom
adc
dec
bound
and
add
iret
stos
icebp
mov
cmp
aad
adc
cmp
or
jmp
mov
lahf
je
scas
pop
icebp
std
mul
int
ins
xor
shr
das
rcr
push
movs
sub
ficom
or
mov
xchg
stos
pop
mov
xor
jae
stc
call
out
scas
ret
test
jg
mov
imul
jp
mov
cbw
and
xchg
push
mov
lds
or
imul
stos
mov
lock
and
aaa
xchg
popf
cmps
les
in
sar
repnz
push
(bad)
pop
js
cwde
sbb
dec
mov
xor
and
or
lds
mov
aas
dec
ja
add
rcl
jmp
retf
mov
push
dec
mov
ss
nop
sub
call
loop
adc
icebp
dec
jo
jb
dec
sub
lea
inc
lods
inc
adc
jl
xlat
repz
jns
stc
comiss
sbb
jle
sahf
sbb
add
pop
and
cs
mov
fst
(bad)
or
add
adc
xchg
xlat
jns
mov
sub
mov
gs
dec
sbb
jns
sub
hlt
in
xchg
sbb
inc
dec
lods
xor
sbb
scas
push
ins
push
push
les
test
pop
loopne
imul
daa
and
mov
fs
imul
pop
aas
gs
mov
jbe
cmps
(bad)
cmps
out
mov
(bad)
or
int3
stos
les
out
sub
mov
add
or
xchg
outs
shl
mov
adc
jl
fidivr
(bad)
sti
xchg
xchg
shl
mov
cdq
and
(bad)
jl
xor
add
pop
outs
mov
int
es
push
in
mov
mov
jmp
mov
mov
pop
inc
(bad)
push
std
dec
sti
mov
cmp
data16
ror
adc
mov
cmps
mov
push
fld
enter
mov
test
(bad)
pop
retf
mov
jnp
cmps
test
jae
stos
inc
mov
clc
cmp
ja
xchg
fld
cwde
and
mov
sbb
fwait
mov
lea
mov
jmp
shl
and
outs
mov
ins
ja
sahf
ins
nop
stc
sub
cmp
(bad)
lock
movs
inc
fcomi
imul
and
jle
mov
sbb
mov
mov
jge
js
push
jbe
addr16
clc
cld
inc
adc
sbb
into
call
or
iret
mov
(bad)
fnstcw
inc
sahf
sub
ds
pop
sub
or
xchg
jnp
ss
sbb
ror
add
add
into
dec
les
sahf
lea
jno
add
mov
mov
pcmpeqd
xchg
mov
push
movs
pop
xor
aad
dec
pushf
cmc
jno
ds
pop
xchg
xchg
xchg
loop
dec
xlat
sub
push
jle
xor
aam
aas
and
xor
pop
pop
mov
pop
mul
movs
jns
sub
and
mov
adc
xor
scas
in
repnz
inc
imul
pop
ror
stos
nop
mov
inc
or
cmp
xchg
fcmovbe
sbb
std
and
adc
cmp
mov
add
lods
into
pop
sar
pop
adc
xchg
rcr
xlat
and
xor
jb
push
pop
lea
sbb
cmp
in
js
ficom
loopne
pop
xchg
mov
sti
(bad)
je
xchg
dec
and
mov
inc
jne
dec
ins
pop
ins
cmp
xchg
rcr
cmp
mov
repz
or
das
add
arpl
jmp
xchg
pop
ja
xor
fmul
mov
popa
push
into
aam
xchg
div
adc
div
test
add
jns
xchg
rcr
jo
add
out
jne
inc
dec
mov
fs
pop
fs
xchg
repz
iret
xor
cmp
fs
(bad)
jo
sbb
outs
adc
pop
shl
mov
xchg
rol
data16
xchg
aam
inc
xor
in
repz
shl
jo
xor
jmp
cmp
adc
inc
test
adc
int
loop
xchg
out
mov
call
into
dec
adc
cwde
xor
add
mov
push
movs
dec
les
retf
ds
lods
mov
or
aad
dec
scas
fs
sbb
xchg
pop
cmp
mov
fcomp
mov
dec
or
sbb
rcr
dec
inc
rol
mov
mov
jmp
ss
xchg
nop
mov
int3
ret
lahf
sbb
popa
jae
sub
sbb
rol
sbb
jbe
out
jle
data16
sub
rcr
and
cli
adc
adc
sbb
add
cmp
xchg
jecxz
inc
push
or
out
fist
pop
jns
call
(bad)
sub
xlat
inc
shl
inc
out
jecxz
and
call
imul
cmps
mov
inc
out
(bad)
cmc
add
inc
cli
test
in
lds
push
xchg
or
jge
sbb
out
shl
add
int3
fist
jne
cmp
movs
int3
arpl
cs
out
icebp
cdq
dec
dec
mov
fadd
in
jo
(bad)
rcl
mov
outs
shr
(bad)
sbb
lahf
mov
sub
dec
mov
mov
cmps
shl
cmps
jg
div
cmp
cmp
sahf
and
(bad)
push
call
mov
test
adc
push
ja
scas
scas
cwde
xor
push
sbb
pop
jp
(bad)
out
clc
cdq
out
fidiv
mov
jl
add
js
sub
sbb
gs
in
repnz
test
and
sbb
mov
add
repz
lea
xchg
in
xchg
jns
repz
cmc
fcmovu
jl
mov
ja
mov
and
dec
in
mov
movs
enter
js
sub
ror
mov
pop
mov
xchg
sbb
inc
into
in
arpl
add
push
adc
test
lock
push
jecxz
mov
xor
fild
inc
fldenv
dec
push
fs
xor
or
sub
jp
mov
popa
pop
loop
stos
push
push
nop
daa
ret
sahf
popf
shr
fcmovnb
jb
xchg
shl
push
aad
dec
pop
ret
bound
sahf
sub
out
push
xchg
out
mov
rcr
lahf
es
cmp
loopne
movs
pop
stc
loopne
in
repnz
add
inc
es
je
out
inc
std
xchg
xor
mul
cmps
or
sub
cmp
outs
xchg
cmp
icebp
jno
mul
pop
mov
mov
or
sbb
mov
and
mov
gs
popa
cmp
data16
mov
(bad)
movs
test
sbb
dec
sub
push
(bad)
inc
mov
cwde
jno
jmp
xor
rcl
fild
cmp
mov
ds
pop
pop
add
movs
pop
add
sbb
sbb
das
iret
jg
and
ja
fwait
jnp
xor
cmp
popf
lea
loope
sbb
xchg
(bad)
mov
jp
loopne
nop
(bad)
or
imul
(bad)
int3
imul
xchg
and
and
add
scas
inc
lock
ja
stos
or
or
push
popf
ret
stc
pop
das
data16
lds
nop
ins
in
inc
fs
aas
mov
xor
call
mov
call
das
cli
mov
or
clc
fld
rcl
xor
cwde
xor
sahf
adc
jo
mov
cdq
in
pushf
mov
push
je
in
jmp
dec
sub
std
add
xchg
adc
inc
cmp
in
std
repnz
mov
xchg
pop
add
aad
add
call
sub
mov
lods
ret
cmp
daa
(bad)
sar
ficomp
call
push
push
addr16
sbb
imul
and
sub
lahf
cmp
les
adc
add
lods
div
push
pop
sub
call
test
xlat
mov
test
jp
repnz
mov
es
mov
jae
push
dec
movs
shl
and
xchg
scas
or
push
in
pop
jbe
mov
jb
imul
jecxz
in
loope
push
int
test
xchg
jl
fwait
scas
adc
test
pop
cmc
pop
out
out
stos
fdivrp
js
jno
and
xlat
repnz
inc
aam
aaa
retf
out
ficomp
cmp
js
mov
out
bound
mov
xor
rcl
icebp
xchg
jbe
fs
(bad)
cld
push
ficom
std
aas
shr
sub
adc
mov
(bad)
jno
call
xchg
push
xor
aas
mov
sbb
cmps
ror
add
sub
sahf
xchg
fstp
aaa
aad
or
mov
aas
mov
adc
sbb
sub
fcmovu
in
fld
or
and
jnp
inc
sbb
inc
leave
push
mov
xchg
jne
jo
xchg
fcomp
xor
aas
jbe
nop
arpl
xchg
jnp
mov
mov
fmul
iret
arpl
add
and
sub
inc
add
outs
jne
or
imul
or
jns
or
out
in
movs
mov
push
enter
and
inc
jb
add
shl
cmp
jmp
inc
retf
pop
xchg
ds
cmp
ficomp
mov
mov
clc
loopne
daa
arpl
js
std
(bad)
outs
leave
cmps
push
das
fistp
jno
lods
cdq
adc
test
xchg
repz
rol
cmc
das
std
out
pusha
jmp
jg
push
sbb
inc
fld
xor
out
mov
ins
in
adc
icebp
cmp
pop
sbb
test
dec
bnd
adc
sub
push
fisubr
inc
mov
mov
ret
and
add
sbb
imul
dec
adc
dec
jne
mov
call
(bad)
jmp
rcl
inc
pop
call
mov
xor
shr
adc
in
pop
addr16
outs
cmp
nop
jne
sub
fxch
dec
or
mov
(bad)
or
mov
dec
push
(bad)
je
pushf
pop
scas
dec
stos
xchg
repz
and
ins
mov
fiadd
push
xchg
sub
xchg
sub
mov
xor
dec
xchg
inc
sbb
cmp
pop
pop
ret
in
sar
cs
adc
lds
push
test
cmp
adc
jge
jb
or
inc
out
jo
jp
pop
mov
pop
push
loop
jbe
in
dec
cmp
dec
inc
(bad)
(bad)
test
mov
scas
loope
pop
jnp
dec
add
push
xchg
inc
ss
sub
fcomp
aad
lahf
xchg
outs
mov
and
mov
shl
sahf
pop
jnp
lods
stos
xchg
shl
push
inc
pop
adc
das
in
fwait
jp
(bad)
inc
or
push
inc
or
popf
mov
ror
lds
pop
add
mov
test
xor
push
repnz
daa
dec
fdiv
pop
jmp
test
into
adc
jb
cmp
rcl
mov
fcmovnbe
mov
jl
jbe
and
adc
fcmovbe
fmul
pop
jp
pop
shl
retf
cmp
add
sub
pop
xor
(bad)
das
mov
addr16
ss
fimul
cwde
daa
ja
inc
push
aam
jg
push
int
aas
sbb
pop
in
(bad)
mov
sahf
or
or
mov
ds
es
nop
adc
inc
pop
cmp
loop
sbb
mov
sub
aaa
xor
inc
inc
icebp
pop
lahf
dec
dec
and
mov
push
daa
loope
push
lds
lahf
mov
addr16
dec
adc
sub
sub
out
outs
pop
sub
xor
das
mov
dec
mov
jge
jle
push
fdecstp
(bad)
stc
iret
push
dec
add
push
sub
xchg
scas
gs
mov
xor
mov
mov
dec
sub
loopne
shl
jecxz
push
(bad)
cmp
ins
ror
mov
jge
loop
test
push
fnstsw
mov
pop
call
cmps
push
mov
cld
jmp
dec
sub
mov
push
shl
inc
sbb
retf
fcomp
cmp
cmps
xchg
push
xchg
jmp
mov
mov
push
mov
daa
dec
scas
mov
and
pop
and
(bad)
(bad)
fdivr
cdq
movlps
inc
inc
lds
(bad)
cmp
or
or
stos
out
shr
push
dec
sub
xchg
fsubr
and
ja
movs
mov
es
add
fstp
inc
inc
cmps
outs
ins
fmul
xor
data16
retf
add
push
in
jne
movs
mov
test
xchg
jne
aam
xor
cmps
mov
jae
daa
cwde
push
paddsw
dec
mov
hlt
leave
loop
and
xchg
cmp
scas
gs
pop
and
ds
pop
ja
jnp
ins
sub
sub
mov
(bad)
mov
sbb
bound
cmp
lock
lahf
and
rol
xor
mov
fild
inc
idiv
and
xchg
in
addr16
sbb
test
inc
mov
retf
mov
jno
(bad)
je
arpl
stos
push
cmp
inc
cmp
fsub
pop
imul
inc
adc
mov
inc
jae
push
cmps
pop
sbb
push
add
sbb
dec
pop
(bad)
arpl
fdivr
scas
sub
aas
stc
mov
(bad)
fst
retf
pop
shl
(bad)
in
ds
xchg
mov
cli
sub
les
test
mov
addr16
jbe
in
lock
adc
xchg
fist
(bad)
in
and
dec
xchg
stos
into
scas
jecxz
xor
in
ss
xchg
ds
jno
mov
cmp
or
mov
add
(bad)
fiadd
(bad)
scas
outs
aad
mov
xor
js
fild
add
out
call
inc
addr16
sti
jae
or
pusha
mov
(bad)
out
(bad)
sub
jecxz
fisub
(bad)
inc
jno
inc
popf
sub
fld
stos
out
pop
adc
cmp
xchg
push
dec
loop
call
int
lahf
sub
inc
cmp
lds
or
and
aaa
cmp
mov
cmp
gs
ja
add
mov
scas
int3
ret
js
in
cdq
cwde
cli
sbb
xchg
sar
inc
push
retf
cmp
push
mov
xchg
mov
bound
adc
sub
push
push
cmp
loope
sub
out
aam
add
push
nop
fbld
inc
and
(bad)
leave
fld
movs
(bad)
xor
leave
ins
xchg
jnp
int
neg
data16
pop
mov
ret
dec
add
lods
rcl
adc
int3
cmps
cmp
sbb
int
adc
xchg
sbb
mov
fs
or
jo
stos
add
mov
mov
pop
sbb
inc
sti
sub
fadd
add
out
pop
push
lds
out
rcr
lods
jp
popf
scas
mov
or
cli
jl
mov
out
das
mov
popf
xchg
jns
test
xrelease
xor
jmp
into
imul
stos
xor
lahf
push
sti
pop
mov
enter
sbb
jg
adc
popf
sbb
jecxz
sbb
cld
mov
lahf
das
outs
inc
mov
enter
sub
test
push
scas
nop
dec
sub
lea
in
pop
xchg
jae
jl
pcmpgtd
and
mov
jo
push
call
xchg
xlat
mov
jns
inc
fisttp
mov
jge
dec
ret
lahf
(bad)
xor
mov
or
mov
aad
sbb
call
adc
sub
bound
repz
ja
dec
bound
push
push
in
push
jb
rol
dec
retf
mov
and
cli
loope
test
jbe
sub
mov
lock
icebp
pop
bound
mov
call
mov
icebp
test
and
adc
add
addr16
xor
div
cmp
sahf
mov
retf
mov
jbe
pop
sub
xchg
mul
fwait
les
mov
mov
pop
xchg
xchg
cmp
xchg
ss
add
pushf
cmp
mov
sbb
arpl
mov
daa
mov
sub
in
outs
fld
(bad)
imul
inc
popf
sahf
jecxz
xchg
(bad)
movs
(bad)
ins
or
xchg
mov
cmps
fs
xchg
sar
ins
test
lock
test
and
push
cmp
pushf
pusha
inc
mov
mov
arpl
test
cmc
cmps
test
stos
cmc
push
loope
mov
(bad)
sub
fs
mov
mov
in
retf
fldenv
js
out
jecxz
pop
or
in
inc
(bad)
enter
ret
adc
push
mov
xchg
jbe
cmps
add
jae
xlat
(bad)
in
and
add
sbb
pop
lea
sbb
repz
out
jns
js
les
mov
jns
es
ins
adc
clc
xlat
leave
push
cmc
(bad)
imul
jno
int
adc
add
imul
xor
cmp
retf
in
pop
loopne
adc
xchg
inc
shr
inc
dec
leave
cmp
and
aam
(bad)
and
inc
leave
(bad)
aad
add
or
test
popf
jg
fistp
xor
jo
xor
cwde
inc
cmps
repz
lds
add
popa
(bad)
(bad)
or
stc
dec
cmp
push
cmp
stos
mov
xchg
cs
ror
in
shr
jo
mov
std
jb
sbb
stc
stc
mov
mov
push
cmps
pusha
ds
jne
cmp
fldcw
call
jge
push
fidiv
lods
scas
pop
pop
inc
sub
adc
jecxz
ret
cld
imul
adc
and
cmp
pop
hlt
std
cwde
pop
fst
mov
or
inc
in
inc
ja
ffreep
sbb
or
xor
or
popf
pusha
pop
stos
sub
push
mov
mov
xchg
not
lods
xchg
xchg
sahf
rcr
in
mov
ja
daa
inc
ins
mov
fadd
retf
mov
cwde
sti
inc
inc
neg
(bad)
dec
mov
std
cmp
dec
call
add
jmp
push
lea
lods
add
sbb
mov
inc
fiadd
inc
mov
outs
scas
pop
sbb
mov
jnp
xchg
jge
cmp
fwait
repz
pop
stos
mov
retf
add
push
cmps
add
test
pop
and
lock
jae
(bad)
fiadd
outs
jecxz
fbld
add
fwait
aaa
jge
and
inc
loop
push
sub
test
cmp
stos
(bad)
and
fs
pop
xchg
push
les
mov
xchg
and
mov
loop
stc
mov
inc
or
dec
xor
mov
or
add
push
jae
scas
xchg
add
push
pop
jle
das
jno
mov
xchg
sub
dec
out
loope
sti
ja
mov
push
or
cli
jno
icebp
add
movs
dec
retf
jge
scas
dec
std
sub
mov
ror
mov
pop
push
pop
inc
call
in
retf
pop
sub
lahf
inc
repz
dec
push
das
add
cmp
mov
xor
push
mov
mov
push
nop
fdiv
out
lods
lock
xchg
out
sbb
mov
mov
adc
and
inc
sti
scas
mov
out
out
out
add
std
fstp
jle
retf
xchg
add
add
and
inc
mov
xchg
popa
inc
and
test
fcom
or
or
daa
(bad)
adc
cmp
xchg
jb
sbb
pop
mov
jge
jecxz
sub
xor
imul
mov
loop
xor
push
mov
ja
or
stc
jns
imul
add
in
(bad)
pushf
(bad)
iret
loop
add
popa
mov
jmp
cs
sbb
mov
mov
jnp
(bad)
into
hlt
js
in
(bad)
fild
dec
lods
(bad)
or
jno
dec
jmp
leave
xor
jbe
fs
mov
cmp
jnp
sbb
xchg
or
test
mov
(bad)
adc
jnp
bound
cwde
test
repz
icebp
scas
aaa
jle
xchg
mov
adc
dec
jmp
cmp
xchg
mov
inc
push
clc
push
jl
add
and
and
jle
cmp
fild
xlat
or
mov
pop
jl
(bad)
inc
and
mov
xlat
sbb
mov
jmp
call
in
cld
fnstcw
inc
inc
xor
lock
or
lahf
sub
mov
cmp
adc
clc
test
int3
jmp
add
xchg
in
ss
mov
mov
loop
dec
jecxz
dec
push
cmp
add
sahf
pop
jbe
mov
out
nop
jb
int3
(bad)
mov
pop
sub
mov
data16
aad
pushf
icebp
adc
imul
test
mov
fs
jg
in
imul
fbstp
int
arpl
mov
enter
dec
mov
je
cmp
(bad)
pop
xchg
(bad)
xchg
pop
shl
cs
jb
xchg
or
pop
cmp
scas
xchg
iret
dec
les
call
stos
div
xor
push
loope
add
xchg
bound
dec
and
int
not
sub
ins
repnz
cmp
push
mov
sub
lods
jmp
jne
hlt
adc
test
in
lock
or
daa
mov
in
scas
jns
push
scas
(bad)
fnstsw
adc
push
xor
imul
pop
pop
dec
retf
pop
popf
sbb
jmp
leave
mov
push
icebp
push
inc
dec
ins
sbb
xlat
dec
sahf
(bad)
out
in
(bad)
xor
(bad)
xchg
mov
sub
sub
mov
in
cmp
sbb
jnp
movs
imul
or
inc
lock
sti
mov
pushf
aas
pop
sti
cmp
ret
or
and
add
adc
jmp
cwde
mov
les
jno
fstp
inc
aad
mov
out
jae
or
lea
pop
gs
sbb
in
push
nop
add
(bad)
xchg
mov
jg
sbb
pop
and
sbb
adc
std
stos
sub
ins
xchg
mov
push
jl
pop
movs
pop
jns
(bad)
clc
pop
mov
mov
sbb
adc
inc
push
jge
jmp
pop
add
test
push
add
push
imul
sbb
mov
(bad)
test
pop
inc
mov
aad
enter
mov
xchg
add
pop
stc
sub
(bad)
(bad)
pop
mov
pop
fisub
add
mov
stos
stos
inc
inc
pcmpgtw
push
ins
cli
ja
jp
jns
mov
mov
call
ror
dec
jg
sub
adc
or
xchg
and
fild
(bad)
adc
cmp
or
scas
jmp
pop
hlt
scas
jb
test
mov
das
mov
enter
jne
lock
push
outs
push
xor
xchg
outs
loope
xor
xor
sub
xchg
mov
es
and
pop
adc
cld
mov
(bad)
mov
loop
add
xchg
ja
out
retf
push
popf
jne
adc
repnz
repnz
inc
(bad)
fldcw
iret
xchg
jae
cwde
mov
lock
lea
push
lds
(bad)
in
mov
cmc
(bad)
test
adc
lock
pop
or
imul
xchg
sub
pop
mov
xor
pop
out
test
retf
add
and
stos
jo
int
into
push
inc
jge
pop
(bad)
jns
shr
dec
push
xlat
dec
shr
jmp
sbb
movs
push
mov
mov
rcl
cmp
test
cmp
jne
jno
pop
push
jmp
fcom
mov
or
scas
mov
aas
xchg
retf
int3
aam
lahf
stc
loope
or
cmps
outs
pop
cld
addr16
(bad)
jle
imul
out
xchg
out
and
and
push
xor
cmp
inc
(bad)
push
pop
in
pop
mov
test
pop
ins
add
popf
cmp
inc
add
rol
dec
inc
jno
sbb
jge
pusha
mov
pop
mov
fbld
out
pop
cmp
mov
and
cmps
cmp
mov
imul
sbb
retf
add
rcr
mov
retf
scas
adc
jmp
pop
call
or
add
inc
mov
lea
and
ds
aas
mov
retf
pusha
sahf
push
ss
aaa
nop
adc
aam
sbb
push
outs
xor
(bad)
sti
enter
add
jbe
loop
jne
popf
cmc
in
sub
cli
rcr
retf
inc
ds
mov
pop
cli
pop
xchg
lods
adc
dec
cmp
mov
hlt
fldenv
adc
shl
pop
jne
add
outs
lahf
sub
push
mov
jmp
stc
xor
rcr
xchg
cld
daa
mov
(bad)
fucomip
shl
ins
push
pop
rol
clc
(bad)
jle
pop
cdq
or
xchg
inc
and
(bad)
pop
push
(bad)
call
sub
test
xchg
dec
jg
and
push
xor
iret
jns
in
pop
ss
hlt
push
mov
xchg
sub
xchg
movs
mov
dec
ficom
cs
cdq
test
in
retf
xchg
mov
adc
cmps
and
pushf
cmc
mov
xor
cmp
fstp
pushf
sbb
mov
sub
lahf
stos
lahf
idiv
data16
xchg
lods
aas
imul
pop
pop
test
cmp
out
ss
mov
inc
xchg
mov
outs
mov
mov
je
sbb
add
sbb
mov
cld
jp
aaa
cdq
sub
sub
add
dec
fidivr
push
rcr
xchg
mov
cli
sub
outs
inc
xchg
mov
lods
sti
ret
push
inc
imul
mov
mov
ret
mov
mov
sahf
imul
aad
mov
xchg
jecxz
retf
cmp
push
dec
es
push
sub
mov
xor
sahf
enter
push
adc
adc
mov
and
shl
retf
in
sub
jge
shl
inc
daa
adc
retf
iret
outs
mov
cs
test
pop
sahf
aas
xchg
jle
mov
pop
adc
cmp
imul
pop
push
mov
int
sbb
mov
imul
add
sar
lahf
adc
test
sbb
jge
jae
pushf
in
mov
ja
cmp
dec
popa
push
mov
cld
(bad)
bound
push
mov
cmp
pop
mov
push
inc
sbb
out
movs
int3
xor
pushf
(bad)
call
and
int3
in
fisub
ins
mov
mov
(bad)
in
out
(bad)
retf
xor
inc
sub
rcl
hlt
mov
xchg
sub
sub
add
cmps
mov
push
dec
inc
scas
sbb
sbb
push
inc
ja
in
pop
shl
mov
test
iret
jle
push
or
jmp
jne
int3
mov
inc
out
add
test
aas
mov
das
mov
nop
push
in
cmp
fstp
int3
xor
mov
mov
sbb
fisub
bound
mov
mov
cmc
sbb
add
pushf
or
mov
shl
lods
xor
or
inc
jle
jnp
sub
pop
scas
xchg
sub
cmps
add
daa
or
jae
push
mov
xchg
adc
lea
cmp
ins
iret
ret
repz
dec
mov
out
xchg
xchg
inc
out
push
sub
adc
push
xchg
(bad)
in
ja
ret
mov
loop
cmp
sbb
and
retf
sbb
push
data16
sbb
and
dec
cmp
mov
pop
or
scas
jmp
sbb
mov
(bad)
out
dec
xchg
(bad)
scas
xchg
xchg
mov
enter
popa
sbb
pop
mov
mov
outs
sub
popa
mov
pop
jecxz
clc
pop
pop
les
pop
jno
mov
fwait
xlat
push
sbb
inc
cdq
xchg
mov
add
loope
ret
sbb
jmp
xor
call
js
lds
add
pop
jmp
push
mov
int
icebp
leave
mov
mov
movs
scas
mov
out
arpl
xchg
push
or
outs
jo
bound
clc
test
call
push
lods
pop
jb
sub
fcmovb
jno
sbb
jo
aas
inc
(bad)
xor
scas
or
push
out
jmp
and
(bad)
inc
lea
jmp
cmps
jl
fsubr
cmp
jmp
sub
into
mov
mov
(bad)
popf
imul
outs
fs
or
out
cmps
mov
add
dec
inc
xchg
addr16
iret
out
mov
mov
xchg
xchg
gs
cdq
adc
add
(bad)
outs
mov
xchg
mov
inc
test
add
mov
cwde
in
lea
stos
test
cmp
movs
sbb
int3
loop
sub
fsub
mov
int3
mov
stc
aam
dec
xor
push
sbb
retf
imul
sbb
test
test
jp
push
imul
retf
movs
sub
lahf
mov
dec
fisubr
lds
ldmxcsr
sar
sahf
enter
test
(bad)
mov
movs
or
pop
into
pushf
sub
popf
add
mov
push
xchg
push
(bad)
and
dec
jns
jl
sub
jns
dec
call
mov
mov
scas
xchg
xor
ret
movs
inc
jno
xlat
add
out
(bad)
leave
adc
push
push
scas
dec
jae
aam
inc
and
rol
cmp
in
or
sub
cmp
xchg
fs
push
ss
les
pop
or
push
ret
jne
js
inc
jge
sub
jp
ds
popa
or
xor
xor
push
cmps
std
dec
adc
neg
push
leave
sbb
fisttp
adc
mov
dec
stc
adc
mov
mov
(bad)
sbb
(bad)
ret
dec
jnp
repz
sbb
jl
shl
and
sbb
hlt
ja
fwait
hlt
xchg
out
jge
mov
mov
xchg
fcmove
pusha
xor
jno
xor
retf
ret
dec
jns
dec
or
(bad)
jae
ins
(bad)
cdq
mov
sub
and
and
inc
push
stc
push
jnp
(bad)
xor
stos
sahf
or
jno
push
ins
cmp
jo
mov
lock
fstsw
push
push
pop
push
sub
add
loop
aas
mov
inc
mov
jns
dec
shr
cli
pop
shl
xchg
aad
and
jge
repz
pop
or
out
outs
cmp
sbb
xchg
mov
sar
stc
int
mov
sub
out
inc
fadd
pop
pop
mov
ds
push
mov
or
(bad)
xchg
inc
mov
cs
xchg
mov
or
jle
inc
inc
dec
cmps
cmp
jne
cmp
push
and
cmps
sahf
inc
scas
cmps
push
fisubr
bswap
and
xchg
cmp
jno
rcl
adc
sar
push
scas
scas
aaa
push
fld
sbb
addr16
stos
sub
rcl
xchg
sti
add
jle
idiv
mov
jno
and
div
and
and
fisub
dec
repz
and
out
cmp
nop
arpl
bound
loop
(bad)
dec
push
div
imul
jne
ss
push
fadd
jmp
pop
xchg
aaa
adc
retw
xlat
in
add
push
fbld
fs
popa
out
outs
add
es
into
push
nop
retf
cmps
and
or
adc
add
cmp
scas
test
pop
mov
leave
and
push
ffree
pop
cli
adc
mov
js
repnz
jb
xchg
mov
imul
shl
adc
jmp
jmp
inc
mov
pop
push
xor
addr16
pop
cmps
loopne
mov
inc
xchg
add
fbstp
cwde
push
and
mov
or
cmp
jl
mov
push
cmp
test
les
je
je
fcmovnb
jmp
fwait
jg
(bad)
das
test
fs
mov
aad
push
push
and
inc
xor
addr16
retf
jmp
or
ror
icebp
fdiv
nop
fld
mov
dec
xor
mov
cmp
add
push
fwait
sub
inc
jbe
mov
aas
mov
movs
xor
jg
pushf
pop
stc
cmp
xchg
cmp
cmp
dec
popf
ins
ds
inc
test
and
add
fst
imul
ret
xor
aaa
sub
mov
mov
jge
sbb
out
outs
or
and
out
cs
xchg
stc
adc
repnz
call
mov
popf
pop
ret
pop
pop
sub
jbe
xchg
xor
into
ret
xor
enter
pop
repnz
push
repnz
and
addr16
adc
lahf
das
mov
fcmovbe
mov
mov
and
mov
cmp
les
mov
push
in
xlat
clc
add
add
pushf
cmp
adc
jb
in
loopne
sbb
or
adc
stc
outs
ins
sar
pop
xor
movs
push
js
das
jg
out
fsubr
aas
mov
add
xlat
dec
push
cmp
jg
enter
mov
sbb
retf
or
pusha
(bad)
lahf
xor
mov
mov
(bad)
or
mov
and
rol
mov
bnd
adc
xchg
cwde
adc
mov
and
dec
mov
push
mov
dec
fcomp
xchg
aas
mov
rol
popf
mov
jno
xchg
loop
in
ret
add
pop
cdq
inc
mov
xchg
cmp
mov
push
jmp
cmp
mov
jl
or
int
cmp
sbb
(bad)
mov
fcomp
cmps
sbb
cli
arpl
add
outs
jo
push
shl
push
xchg
loop
pop
push
mov
mov
sub
div
mov
mov
pushf
xor
pop
imul
jne
sub
rcl
cmp
(bad)
cmp
xchg
das
sub
scas
fsub
sub
mov
add
mov
add
mov
nop
mov
add
test
inc
inc
jmp
icebp
mov
mov
xchg
adc
leave
xchg
push
out
or
dec
sbb
mov
ret
xchg
xlat
(bad)
fs
test
xchg
adc
sub
outs
leave
repz
jnp
gs
call
mov
mov
(bad)
adc
push
dec
imul
dec
sub
je
add
enter
xor
shl
jl
cmp
es
push
xchg
nop
pusha
int
and
sbb
mov
cmps
data16
xor
dec
dec
sbb
out
fmul
push
pop
cmp
xor
out
jge
cmp
es
and
mov
outs
stos
adc
or
out
mov
cmp
add
jbe
xor
ja
cmps
add
sahf
into
pop
mov
adc
cld
loopne
out
aaa
aaa
test
cmps
test
stos
iret
adc
mov
lea
(bad)
push
stos
int
jmp
jl
mov
pop
outs
fld
or
inc
dec
mov
dec
icebp
push
ret
int3
loopne
mov
fwait
adc
xchg
cmp
dec
fistp
sbb
and
pusha
mov
rcr
xchg
sar
mov
adc
jnp
aas
mov
sbb
mov
mov
mov
jg
jle
js
test
push
add
mov
in
xlat
in
push
adc
sub
test
lea
(bad)
mov
aaa
cmp
and
xchg
int
sbb
fild
inc
rcl
dec
es
pop
jmp
sbb
sub
icebp
sub
push
int
and
mov
xchg
pushf
add
inc
rol
movs
jns
cdq
cmp
add
call
xchg
out
cmp
jnp
out
inc
adc
dec
sbb
out
pop
pop
ret
mov
nop
imul
ret
mov
inc
jb
xlat
or
xor
lea
jo
movs
call
out
mov
add
lock
(bad)
mov
cmp
mov
push
int
dec
nop
or
or
aas
sbb
test
rol
ins
and
add
and
inc
ins
xchg
test
adc
fdivr
jp
clc
xor
popf
or
or
mov
stc
and
movs
fistp
jle
repz
lock
not
push
sbb
push
dec
xor
cli
std
sbb
std
sub
lahf
jbe
jmp
xlat
push
and
retf
ret
popf
mov
fdivr
or
jne
outs
xor
sub
mov
aad
xor
jle
jnp
mov
add
sti
xor
or
aaa
std
adc
cld
repz
data16
lahf
lods
adc
clc
aam
aam
imul
pop
xchg
not
ret
mov
(bad)
aad
(bad)
push
shl
loopne
sub
mov
mov
retf
sub
and
retf
jmp
xchg
mov
fwait
shr
fidivr
mov
sar
sub
xor
pop
push
rcl
jmp
sbb
sbb
test
into
jecxz
or
arpl
jg
or
sbb
call
mov
xchg
pop
jl
cmps
cld
pop
mov
inc
aad
cmp
sahf
xchg
xor
pop
scas
push
test
and
cmp
loope
data16
cs
or
jmp
jp
movs
and
fcmove
pop
or
lods
leave
cdq
js
lock
fnsave
jo
jmp
and
(bad)
movs
stc
sbb
cmps
sub
cld
jne
repz
jl
stos
ds
fwait
sbb
jge
add
iret
pop
cmps
out
adc
(bad)
and
cwde
pop
pop
jno
xor
cwde
leave
lea
scas
int
and
xor
mov
mov
(bad)
cmps
adc
mov
adc
ds
out
or
jb
push
shr
sub
mov
mov
pushf
jbe
(bad)
rcl
xchg
scas
dec
in
push
mov
(bad)
dec
xor
es
in
not
lods
sub
add
and
xchg
les
and
cdq
mov
xchg
dec
mov
xchg
maxps
jae
popf
inc
test
sbb
pop
cli
xchg
clc
movs
ss
lods
in
(bad)
nop
int
push
cmc
ds
js
stos
popf
cwde
jecxz
call
adc
push
or
stc
(bad)
xchg
jmp
dec
inc
pusha
cmp
imul
push
jb
mov
cmp
xchg
sbb
adc
das
js
jns
pop
adc
iret
out
pushf
jp
outs
adc
inc
in
test
mov
fs
ret
data16
add
jg
pop
and
jb
dec
or
dec
pop
mov
ins
pcmpeqb
push
stc
adc
mov
cmp
pop
xor
into
sti
adc
push
xor
fild
add
mov
adc
imul
fs
sub
lods
adc
popf
out
ret
push
xor
cmps
cmc
jle
fld
push
pop
dec
mov
mov
cs
push
jae
(bad)
mov
mov
int
push
push
rcl
ss
sub
ror
mov
outs
mov
push
ud0
sar
lds
jo
pop
test
cmp
mov
xchg
aas
push
fcmovbe
aaa
mov
sub
adc
xor
mov
pop
jle
mov
dec
out
pop
scas
adc
push
lahf
add
xor
or
xchg
jns
or
add
and
dec
iret
jle
les
pop
lock
push
jl
sub
outs
push
int3
adc
aad
retf
push
out
das
mov
sahf
add
ss
pop
les
xchg
sub
stc
push
movs
adc
push
sbb
xor
xchg
mov
pop
xchg
jmp
inc
imul
fmul
cmps
in
sub
or
inc
pop
push
in
mov
pop
inc
addr16
mov
sub
iret
and
out
pop
in
push
add
sub
add
xor
adc
sub
loop
sti
push
push
pop
mov
add
je
jp
mov
icebp
(bad)
mov
mov
dec
cmp
aad
and
leave
inc
addr16
cmp
call
call
mov
retf
cmp
bound
xor
test
adc
pop
adc
add
retf
mov
dec
xor
xchg
outs
sub
ror
retf
and
nop
sti
ja
fistp
aam
imul
mov
jle
ss
inc
daa
push
sub
cdq
fistp
add
out
jbe
and
sub
iret
push
outs
sub
stos
pop
addr16
mov
dec
jns
in
gs
retf
or
scas
aas
fisubr
mov
les
adc
jmp
mov
lods
jle
fcmovu
adc
sbb
jo
test
lahf
jae
leave
(bad)
bound
mov
inc
mov
lahf
mov
loop
aaa
push
mov
imul
adc
push
inc
push
inc
test
cmc
sbb
cld
jecxz
xor
sub
mov
lds
fs
sbb
add
imul
pop
rcl
imul
hlt
push
xor
jle
and
xchg
mul
inc
dec
inc
fwait
stos
sbb
xlat
ret
(bad)
dec
(bad)
ja
out
sbb
pushf
outs
icebp
and
sbb
inc
mov
sbb
frstor
and
and
sbb
push
ret
cmp
xchg
mov
loop
hlt
test
add
ret
xor
sbb
cdq
push
ficomp
pop
jb
neg
xchg
and
rol
sbb
lock
fidivr
in
push
pop
push
ins
retf
inc
retf
xchg
mov
cld
xor
js
pop
les
retf
int
or
inc
stos
push
es
xchg
jns
pop
jns
(bad)
xchg
push
sbb
mov
cmp
mov
cmp
jae
hlt
mov
adc
cmp
ins
sar
sbb
fucomi
pop
add
ret
mov
mov
sub
call
mov
je
jmp
(bad)
adc
and
test
push
inc
jp
pop
add
sub
daa
les
xchg
nop
jbe
out
mov
rol
popa
fcomp
cmps
clc
sbb
hlt
cwde
out
xor
sbb
push
adc
popa
fistp
addr16
ss
sahf
pop
js
cmps
aas
dec
sar
adc
push
ja
jp
inc
and
pop
xor
mov
sbb
dec
jo
cli
enter
addr16
pop
pop
cmps
adc
ins
mov
jmp
sbb
jbe
popf
mov
xor
fsubr
jb
shr
xchg
enter
and
mov
mov
or
cmp
jg
fadd
inc
loop
ja
cmp
dec
cld
adc
sub
aaa
stos
jo
jmp
push
or
mov
jno
loop
push
addr16
retf
adc
xor
add
mov
mov
xor
mov
cmp
dec
data16
mov
inc
cs
pop
jmp
test
pop
xor
or
cmp
movs
push
sbb
lea
sti
jno
lds
shl
mov
scas
imul
in
repnz
fs
jb
call
call
outs
adc
lds
imul
or
lock
repz
out
inc
sbb
jle
push
xor
push
jb
adc
push
mov
out
aaa
sub
xchg
jge
lds
retf
vpaddq
pop
repz
mov
jns
sbb
ja
dec
push
jle
pop
lea
and
push
jecxz
(bad)
(bad)
retf
cwde
clc
ret
mov
daa
cmp
aad
add
mov
push
cli
mov
test
jle
das
lods
push
push
sub
jg
out
inc
sti
dec
stc
or
call
lods
xchg
jmp
xchg
int3
jnp
dec
pop
inc
inc
mov
push
xor
push
or
push
rcr
jg
repz
jne
xor
pop
add
pop
mov
mov
mov
out
pushf
inc
mov
inc
imul
fcom
(bad)
(bad)
and
in
xchg
loope
add
jmp
popa
jne
xchg
lock
inc
fisttp
push
dec
jle
add
mov
psrlw
adc
imul
dec
(bad)
sbb
adc
jae
mov
xchg
imul
pushf
xor
int
push
pop
sbb
mov
xchg
xor
fxch
movs
pop
dec
popa
mov
stos
mov
mov
or
cmp
xor
cmp
inc
icebp
outs
jbe
lods
cs
sbb
and
mov
aad
jecxz
gs
adc
outs
cmp
stos
lods
out
dec
inc
xchg
mov
push
sub
or
jne
push
addr16
test
sti
cwde
(bad)
push
or
ficomp
cmp
int
cdq
add
stos
push
sub
jle
adc
or
fs
test
pop
inc
add
jne
(bad)
and
xor
ret
push
mov
call
call
std
inc
ins
xor
adc
fadd
ficom
or
not
xor
fiadd
fdivr
pop
in
lea
add
mov
pop
pop
push
mov
mov
pop
and
cmp
jnp
lds
popf
shr
push
(bad)
mov
pop
xor
jbe
xchg
jmp
lods
mov
pop
sub
stos
pusha
mov
sahf
and
mov
dec
je
jp
scas
popa
xor
fistp
shl
sahf
js
jns
sbb
(bad)
lock
out
cmc
jbe
add
loope
cdq
mov
mov
or
enter
push
push
mov
stos
shl
or
fwait
cmp
jmp
shr
arpl
jne
dec
loope
sbb
in
sbb
sbb
in
jg
das
js
mov
cmp
lds
sbb
cmp
xchg
fadd
rcr
mov
inc
idiv
jo
mov
aam
dec
stos
push
jns
pop
(bad)
(bad)
push
(bad)
icebp
xchg
mov
fwait
jne
jp
aaa
jo
(bad)
loopne
movs
cmc
repz
push
movs
inc
push
add
repz
jbe
ss
mov
gs
pop
out
stos
inc
pop
xor
outs
(bad)
adc
(bad)
dec
popa
sub
jne
mov
ret
inc
retf
jecxz
sub
test
add
mov
sub
movs
pop
jne
push
sub
test
xor
loope
xchg
lods
adc
idiv
mov
stc
nop
jo
clc
frstor
xor
add
inc
into
adc
jns
sbb
cmp
cmp
je
sub
xchg
mov
push
push
inc
cmps
pop
fst
imul
ror
pop
xor
inc
mov
in
xchg
fwait
push
add
xchg
sbb
pop
pop
sbb
leave
xchg
fcom
push
dec
xor
xlat
mov
(bad)
jle
scas
lea
sbb
add
xor
(bad)
add
cmps
mov
stos
mov
xor
aad
std
sbb
adc
pop
or
inc
mov
xchg
inc
add
mov
add
sub
jmp
pop
aaa
shl
xor
push
push
inc
out
mov
sbb
sbb
xor
mov
jmp
and
out
test
push
and
xor
mov
out
xor
das
pusha
cwde
xchg
repnz
lods
xchg
sub
xchg
cmc
daa
lds
mov
push
jnp
add
inc
dec
mov
mov
mov
daa
mov
test
loop
jecxz
enter
enter
push
jl
mov
enter
mov
push
adc
ins
xchg
rcl
push
jo
add
mov
inc
es
scas
push
rcr
sbb
ss
repnz
out
ins
mov
xor
adc
(bad)
ss
add
ret
fwait
adc
sti
fcomp
shl
fsubr
and
out
mov
pop
sti
dec
shr
sbb
cmp
jb
and
push
sbb
mov
mov
(bad)
in
mov
jnp
nop
mov
clc
repz
fld
jns
test
xchg
mov
cmc
or
ins
dec
add
jnp
pushf
push
inc
xor
hlt
jmp
xchg
cmc
mov
dec
cmc
jmp
or
sub
pop
sbb
mov
dec
popf
aam
push
test
add
clc
in
mov
dec
aas
xor
mov
mov
push
rcr
add
mov
aam
sub
enter
cli
cwde
into
in
xor
inc
fstp
test
pop
pop
or
out
jbe
pop
push
adc
test
jmp
out
mov
or
fcmovnb
stos
pop
(bad)
and
vmread
mov
inc
mov
xor
push
sbb
(bad)
lock
dec
ins
iret
xor
dec
movs
mov
out
xlat
mov
pop
xor
jge
mov
mov
enter
sbb
jmp
retf
dec
bound
add
movd
fild
inc
cmp
mov
mov
sbb
mov
lea
jecxz
mov
xor
dec
add
mov
mov
loop
pusha
adc
pop
arpl
jb
(bad)
data16
in
or
lods
jge
jns
mov
sbb
inc
xor
pop
fs
aas
shr
test
xor
cmp
push
push
sbb
push
test
fild
out
dec
not
in
inc
jl
mov
or
xor
fist
inc
nop
dec
inc
push
or
movs
out
mov
mov
jmp
and
lods
xchg
lods
mov
mov
inc
ins
push
and
ret
(bad)
jl
repz
mov
in
and
sbb
ins
sahf
push
cmp
repz
mov
cs
mov
sbb
pop
lds
je
ficom
push
leave
push
sbb
xchg
inc
xchg
jmp
retf
jnp
pop
hlt
lods
xor
adc
sbb
loope
mov
or
add
daa
outs
mov
sahf
dec
xchg
pop
fstp
xor
repnz
lahf
mov
cmp
jo
adc
mov
mov
jae
mov
adc
inc
jge
mov
xor
cs
shr
ret
sbb
pop
aad
jbe
xchg
or
(bad)
or
(bad)
ret
test
cmp
push
mov
pop
mov
xor
(bad)
call
add
or
xchg
js
inc
icebp
xchg
iret
mov
imul
hlt
cld
pop
dec
test
call
pop
loopne
dec
pop
jmp
not
imul
push
jmp
nop
mov
push
mov
iret
out
jg
imul
sub
les
xor
scas
fisubr
mov
aas
xor
scas
dec
les
rcr
test
fwait
mov
and
fld
shl
cmp
jo
div
lahf
push
sub
mov
call
adc
(bad)
xor
mov
push
imul
shl
cmp
mov
dec
pop
cmp
aaa
xor
stos
lds
(bad)
shr
xchg
loopne
icebp
jbe
mov
xchg
xchg
jp
fs
int3
inc
dec
fldcw
mov
aad
and
outs
push
pop
xchg
das
mov
adc
js
in
sar
adc
sahf
or
inc
xor
jmp
gs
dec
nop
pop
addr16
(bad)
je
sahf
add
scas
das
(bad)
dec
mov
jmp
push
xor
push
or
jae
cmp
mov
push
sar
sbb
(bad)
call
outs
shl
out
bound
ja
lea
sub
mov
xchg
cld
xchg
and
xchg
sbb
and
pop
pop
movs
jge
cli
sub
rcl
das
push
dec
test
rcr
aas
shl
inc
fs
mov
inc
lods
xchg
adc
sub
dec
ret
sub
test
popf
aaa
push
sub
xchg
aaa
je
and
gs
(bad)
lahf
push
push
inc
adc
xor
mov
push
lods
or
xchg
mov
call
cs
mov
push
mov
fs
rol
mov
aas
xchg
pop
cld
fs
repz
mov
call
aad
xor
lods
pop
adc
int3
out
(bad)
mov
dec
jns
pop
call
leave
(bad)
out
xor
cmc
push
ret
add
mov
cmp
mov
jmp
add
movs
jns
adc
push
dec
idiv
test
pop
nop
cmp
inc
test
add
enter
cmps
ds
mov
pop
jnp
loop
xor
pop
xor
in
jmp
push
dec
add
xor
out
(bad)
mov
mov
xchg
pushf
sub
mov
aas
ja
xchg
cmp
xor
xchg
push
jmp
jl
dec
mov
mov
cmc
shr
jne
test
sbb
pop
sub
shr
jbe
test
vminsd
push
out
out
mov
cmp
fcom
jge
mov
push
data16
bnd
lock
in
scas
ins
retf
push
iret
repz
addr16
scas
(bad)
mov
inc
ins
sti
dec
jp
mov
stos
sub
fcos
ret
adc
movs
push
xchg
add
(bad)
cmp
jbe
sub
xchg
jle
pop
ss
sbb
xchg
scas
and
lahf
(bad)
pop
push
loopne
lods
mov
xchg
(bad)
fs
dec
mov
fistp
loope
push
xor
jo
xchg
mov
mov
stos
xor
push
jmp
mov
jmp
out
lea
aaa
mov
pop
sbb
inc
add
sbb
push
pop
icebp
push
push
pushf
sub
adc
cmp
call
add
pop
and
jmp
lea
stc
lea
mov
je
jle
cs
repnz
aam
in
cmpxchg
sbb
xor
mov
out
popf
jae
in
adc
fwait
add
xchg
inc
jmp
sbb
lods
ins
jmp
fidiv
loope
ror
pop
push
out
and
ins
cdq
sbb
sub
mov
mov
jecxz
push
imul
jg
xchg
inc
scas
rol
mov
add
fsub
(bad)
lock
popa
push
mov
add
aad
fistp
loopne
mov
scas
jb
fmul
push
aam
dec
cli
cmp
mov
mov
cmp
add
popf
cmp
test
adc
loope
or
fldcw
push
outs
stos
and
(bad)
mov
push
shl
pop
in
pop
push
jnp
fdivr
test
cmps
push
and
stos
shl
out
inc
jno
inc
fmul
mov
retf
sub
test
into
cwde
mov
pop
cmps
in
(bad)
dec
nop
enter
bound
sbb
pop
not
and
dec
sar
push
mov
or
mov
jg
or
les
cs
push
jmp
or
push
mov
sar
stos
mov
inc
ret
xchg
leave
and
stc
jbe
bound
xlat
inc
dec
or
loope
sbb
mov
in
pop
into
xor
call
cs
jnp
scas
or
push
arpl
cmp
adc
dec
and
lods
fidivr
inc
inc
loope
jecxz
xor
mov
adc
pop
and
cmp
and
fbstp
and
fiadd
mov
es
push
test
inc
cmp
mov
out
adc
aaa
pop
fdiv
cmc
pop
in
inc
jg
(bad)
mov
mov
sbb
mov
xor
call
xor
mov
and
inc
jne
mov
out
sub
jmp
push
ds
adc
call
dec
(bad)
and
inc
push
in
call
mov
test
ds
mov
sub
inc
push
or
mov
es
es
iret
push
jo
das
push
xchg
imul
nop
jecxz
ins
(bad)
adc
mov
shl
imul
pop
xchg
mov
aas
mov
pop
and
jae
fs
out
outs
(bad)
mov
sub
rcl
std
add
add
jae
pop
ret
movs
repz
dec
add
enter
ret
or
movs
ja
and
outs
inc
jae
lock
into
shr
jns
inc
mov
icebp
sbb
lahf
mov
jge
mov
mov
(bad)
outs
ins
call
aaa
adc
test
jge
fs
inc
nop
sti
cli
in
cld
sub
or
daa
lds
jbe
mov
outs
inc
xchg
xchg
pop
xchg
cmp
aad
ror
cmps
in
push
dec
mul
pop
adc
ins
iret
movs
push
and
scas
fdivr
outs
int3
jecxz
mov
sub
scas
call
loop
dec
in
cmp
jno
mov
lahf
mov
bound
out
mov
push
mov
arpl
adc
scas
gs
mov
mov
mov
adc
jbe
sub
retf
adc
(bad)
xchg
adc
out
mov
mov
cmp
mov
sbb
fist
imul
jnp
mov
(bad)
sub
jg
dec
xor
sbb
xor
movs
sub
gs
cld
sbb
and
call
xlat
pushf
inc
mov
cs
lock
adc
sub
push
mov
movs
inc
sub
mov
loop
inc
pop
call
push
test
push
mov
jp
or
adc
pusha
(bad)
jle
pop
jmp
int3
dec
das
jns
xchg
mov
xchg
jle
addr16
cdq
les
ss
in
inc
stos
sub
mov
xor
repz
pop
arpl
jns
or
dec
and
es
pop
xor
jae
cmp
pop
(bad)
and
xchg
push
dec
ins
adc
dec
enter
xor
shl
mov
iret
xchg
xchg
pop
popf
in
sar
imul
repz
das
inc
or
nop
and
es
pop
sub
in
jmp
test
mov
mov
xchg
sub
inc
xchg
mov
cdq
outs
xchg
and
fisttp
dec
push
icebp
scas
xor
push
adc
cmps
nop
stc
gs
fwait
call
xor
and
push
push
sub
xor
pop
jns
pop
jmp
aas
mov
add
xchg
call
inc
clc
mov
add
mov
mov
dec
fs
ins
cli
out
push
sub
ins
cmp
aas
inc
sub
test
add
pop
mov
adc
sub
mov
cmps
sub
and
outs
push
add
inc
mov
icebp
mov
mov
sahf
pop
jbe
mov
stos
jmp
xchg
pusha
mov
add
adc
outs
std
cmp
neg
not
sub
adc
dec
jl
lods
aaa
sub
jge
cdq
fldcw
adc
lock
jb
jns
jnp
inc
push
(bad)
in
aaa
loop
inc
idiv
lahf
mov
out
scas
outs
icebp
retf
dec
sbb
sti
fbstp
xchg
(bad)
mov
or
and
sub
xor
aaa
push
sar
fnstcw
pop
hlt
adc
add
dec
dec
ins
pusha
jb
mov
ror
push
das
out
xchg
add
add
push
arpl
(bad)
or
dec
push
loop
dec
sbb
mov
and
in
mov
sub
stc
outs
repz
sbb
iret
leave
mov
xor
add
mov
and
int3
clc
xchg
lahf
daa
jg
test
xchg
cmp
cld
imul
pop
retf
dec
hlt
mov
sub
lea
pop
adc
push
je
loopne
fldenv
jb
inc
mov
in
pop
mov
lock
jle
icebp
es
nop
cmp
jle
inc
mov
xor
jno
test
cmp
popf
inc
es
lea
jno
jmp
cli
xor
cdq
mov
cmc
fwait
inc
ret
repz
sbb
pop
rcr
(bad)
push
jno
int
aad
repz
cwde
xchg
sbb
aas
punpckhbw
push
jnp
int
scas
add
add
mov
sbb
xchg
jo
cmps
sub
gs
sub
mov
popa
fstp
test
sbb
mov
push
adc
je
push
add
out
add
imul
sar
cs
xchg
stc
dec
scas
loopne
cli
stos
fsubp
lods
jbe
mov
mov
mov
pop
and
add
jmp
repz
retf
outs
cmp
or
xor
not
movs
push
sbb
fsub
icebp
(bad)
mov
jae
push
push
xor
xor
xor
mov
cld
aad
sbb
call
iret
jne
cld
dec
jnp
xor
jnp
jp
imul
sbb
rol
sbb
pop
neg
outs
xor
dec
inc
je
sub
jnp
(bad)
in
inc
fwait
xchg
ins
out
ins
cs
mov
push
jp
hlt
jp
retf
inc
loope
pop
ss
pop
out
push
push
xchg
xchg
ret
xchg
sti
outs
xor
std
test
jae
push
stc
cwde
jg
pop
sbb
fmul
popa
bnd
jo
dec
jno
(bad)
dec
retf
xchg
pop
jecxz
ror
cmp
(bad)
cmp
js
(bad)
(bad)
in
iret
outs
mov
lea
xlat
push
sar
jbe
adc
mov
mov
(bad)
(bad)
cmps
or
stos
xor
scas
cmc
aad
addr16
cmp
mov
push
add
data16
cmps
and
sbb
xor
jbe
es
dec
clc
loop
aas
daa
aam
bnd
cmp
pop
push
jmp
data16
add
loopne
ins
test
out
pushf
jmp
lods
and
or
xlat
movs
out
sar
and
push
jmp
es
rcr
pusha
outs
cmp
dec
mov
push
xor
fwait
stos
je
mov
int3
lea
inc
movs
sbb
gs
aas
das
jbe
push
jecxz
jecxz
sbb
cmps
cdq
jp
ins
xchg
sub
icebp
int3
push
sub
leave
test
ja
(bad)
in
xor
inc
sbb
dec
shr
ja
inc
test
jecxz
sub
outs
inc
pop
sub
push
js
xor
dec
daa
sti
dec
xchg
mov
adc
mov
imul
aas
stc
jno
cmp
ficomp
aad
dec
(bad)
mov
bound
and
mov
lahf
daa
cdq
or
sub
pusha
mov
and
jl
sub
cmps
sub
pop
pop
scas
imul
add
test
(bad)
lods
and
push
sbb
xor
jl
hlt
cwde
mul
or
pop
push
jmp
cdq
stos
push
xor
xchg
mov
cmp
fs
mov
mov
mov
dec
enter
mov
in
shl
mov
mov
cmp
(bad)
call
call
lods
sub
test
and
xchg
scas
mov
sbb
pop
mov
stos
cmp
movs
ins
cli
addr16
out
push
push
int
pop
push
inc
cdq
aam
push
pop
mov
jbe
into
daa
cmp
pop
xchg
retf
jp
jle
dec
or
jecxz
stos
push
xor
out
jge
aaa
fwait
aaa
pop
nop
lods
popa
jg
mul
retf
or
aam
lock
nop
jmp
test
ss
imul
or
jmp
lds
push
sub
aad
mov
adc
lahf
imul
data16
xor
aas
cmp
into
shl
or
pop
cmp
jecxz
bound
cmp
inc
cmps
(bad)
mov
repz
jno
scas
add
push
jle
mov
js
js
shr
inc
mov
aas
scas
pop
sbb
call
enter
push
aad
inc
sti
sub
popf
call
and
das
push
jb
loopne
sub
pop
repz
call
xlat
outs
into
les
sar
repnz
xor
scas
cmc
inc
mov
or
cmc
es
cld
or
xchg
pop
push
sbb
out
lds
call
aad
push
mov
outs
inc
mov
push
fistp
mov
dec
fisttp
out
mov
cmp
mov
ret
pop
xchg
add
sti
(bad)
xchg
dec
(bad)
daa
cli
jmp
dec
(bad)
repz
push
addr16
jmp
and
add
pushf
and
jnp
sub
dec
js
imul
adc
shr
(bad)
xchg
fsubr
mov
cs
pop
jecxz
mov
and
adc
mov
mov
(bad)
xchg
jecxz
dec
pushf
int3
xlat
mov
mov
or
aas
loop
xchg
sbb
jbe
and
or
dec
adc
jmp
inc
xchg
fwait
movs
loopne
cmp
loop
pop
jb
jl
or
dec
or
dec
mov
daa
or
scas
cmp
jbe
dec
into
adc
add
ins
inc
bswap
shr
xchg
shl
sbb
movs
sub
pop
xchg
pushf
sahf
stc
jle
push
es
jmp
addr16
fcmovnb
mov
mov
add
ja
xchg
lods
out
int
enter
data16
dec
and
pusha
xchg
ror
repz
fisubr
dec
lahf
sbb
loopne
out
call
call
cmp
fistp
(bad)
push
jmp
or
movs
jmp
add
jmp
ds
dec
dec
mov
adc
in
cmc
or
je
pop
sbb
dec
and
popf
pop
pop
mov
popa
push
xor
jne
cs
jnp
mov
(bad)
push
ds
cmp
fld
ins
jmp
movs
imul
inc
xor
out
das
mov
scas
out
mov
push
loope
imul
jle
lods
jg
scas
movs
push
mov
mov
and
inc
repnz
js
xchg
jae
(bad)
dec
(bad)
xchg
ja
dec
sbb
cmp
sub
pop
daa
dec
daa
adc
popa
enter
or
mov
fiadd
pop
and
pop
shl
fwait
(bad)
and
imul
sbb
stos
sub
cld
pushf
mov
imul
sbb
pop
call
jne
push
and
cmp
imul
mov
and
xor
sub
cmp
mov
pop
jle
cmp
ret
das
(bad)
sti
out
or
sahf
ja
xor
clc
fcmovnbe
dec
dec
stos
sbb
jno
add
arpl
in
mov
jge
jmp
es
pop
jecxz
sbb
cmc
ja
pop
inc
push
sub
enter
mov
push
sbb
inc
xchg
and
or
push
das
mov
mov
imul
pop
mov
adc
movs
stos
ret
or
xor
movs
(bad)
enter
or
lods
dec
loopne
inc
rcr
cmp
call
cmp
jecxz
jle
cmps
int
into
xchg
(bad)
mov
sbb
pusha
inc
mov
sahf
frstor
or
pop
jge
adc
leave
test
or
add
cmp
pushf
jl
ss
mov
or
xor
retf
imul
cli
inc
sub
shr
mov
jns
out
fwait
or
add
cmp
sub
jb
push
dec
xor
mov
scas
lds
and
popf
mov
mov
sub
lods
xchg
jmp
daa
adc
dec
mov
jae
aaa
jae
lock
jmp
(bad)
cli
xor
inc
jb
inc
test
clc
jg
ja
and
mov
cmps
push
push
popa
and
ins
pop
daa
pop
int3
adc
mov
int
retf
dec
imul
mov
(bad)
push
cmp
(bad)
sub
adc
mov
inc
jmp
test
xchg
xchg
aam
and
inc
dec
aaa
sbb
rol
mov
add
xchg
jmp
lock
int
mov
adc
repnz
jmp
les
sti
in
mov
lods
retf
jb
ror
sar
inc
mov
sar
in
ds
arpl
or
mov
imul
jecxz
add
inc
sub
sub
test
(bad)
pusha
lahf
and
test
adc
cmp
shr
mov
xor
mov
mov
xchg
mov
ins
add
mov
jge
repnz
pop
popf
in
enter
mov
mov
pop
outs
pop
fnstsw
sub
pop
inc
mov
je
and
fcom
jl
icebp
dec
sbb
out
scas
sub
stc
or
mov
scas
inc
lahf
mov
push
xlat
xor
jecxz
fisub
xor
and
jg
scas
sub
or
mov
and
ret
rcl
retf
mov
cmp
jle
cmp
mov
popf
mov
in
vpsubq
jg
cmp
pop
(bad)
adc
pop
cmp
(bad)
loop
shl
jecxz
mov
sub
xchg
sub
addr16
push
lods
push
push
in
(bad)
rcl
push
fist
les
mov
pop
test
outs
icebp
jmp
push
xor
jge
xchg
jne
out
pop
data16
inc
aas
cdq
sbb
dec
or
and
ds
sbb
ja
jae
out
in
mov
jp
lods
pop
xchg
mov
pop
leave
xchg
stc
test
inc
scas
(bad)
das
pop
daa
jmp
inc
test
lahf
mov
inc
mov
div
repz
dec
mov
call
cdq
xor
in
push
mov
push
dec
out
aad
out
inc
pushf
mov
add
adc
push
pop
mov
dec
test
jb
jp
xor
ja
inc
add
cmp
xchg
sub
or
stos
mov
xchg
sahf
(bad)
addr16
xchg
(bad)
jmp
xor
sti
out
enter
sub
adc
test
ss
repnz
pop
xchg
lods
xchg
sahf
cli
fwait
mov
push
xor
dec
into
and
sbb
jmp
mov
xor
mov
rcr
push
xor
pop
or
or
and
mov
or
(bad)
mov
les
jno
mov
push
hlt
pop
sbb
lock
jnp
es
adc
mov
rol
in
test
repnz
jo
outs
xor
add
loope
cwde
xchg
add
pusha
shl
or
daa
mov
js
cdq
push
std
lahf
imul
jp
jbe
dec
int3
or
mov
and
lods
out
test
lea
jae
add
mov
mov
push
nop
call
sub
scas
xchg
and
and
stos
(bad)
aaa
shl
cld
ror
mov
dec
popf
mov
ret
add
jle
pushf
inc
hlt
popa
loopne
lea
aaa
daa
xchg
movs
cmp
fnstenv
out
mov
push
loopne
leave
fistp
outs
bound
je
sub
dec
adc
(bad)
sub
loope
push
lods
loop
and
ins
push
cmps
sub
dec
ss
out
mov
stc
test
test
jl
xor
add
ss
clc
cmps
out
jmp
push
add
hlt
sahf
ja
mov
mov
sbb
shl
dec
shr
cmp
or
adc
dec
mov
jmp
mov
stos
cmps
sub
add
mov
scas
std
mov
push
xchg
stos
sbb
mov
leave
ss
pop
popf
fidivr
(bad)
iret
push
rcl
outs
and
rcr
mov
inc
addr16
push
(bad)
pop
jo
jnp
and
ins
fdivr
sub
dec
xchg
push
aam
cli
sub
mov
in
dec
pop
sub
mov
sub
xchg
fld
lods
jo
push
test
fucomip
cmps
sbb
pop
or
or
adc
sub
movs
push
mov
shr
push
and
ins
push
adc
jle
test
pop
clc
pop
call
loop
xor
call
cmp
mov
mov
sbb
idiv
push
(bad)
jle
outs
adc
sub
mov
aaa
mov
cwde
xor
std
aas
jecxz
sbb
sub
ja
cmp
adc
mov
mov
inc
inc
xchg
ins
dec
jl
dec
pop
fwait
pop
dec
bound
and
sti
add
xor
sub
pop
mov
test
das
ins
pop
(bad)
fwait
shl
mov
dec
lods
dec
lds
lods
adc
popa
push
ins
adc
out
lods
lods
push
xor
ins
ud0
call
es
mov
out
fild
daa
push
sub
adc
repnz
jecxz
sub
ror
mov
lods
cmp
and
or
rcr
out
add
inc
dec
mov
adc
push
cmp
xchg
pusha
jne
fadd
rcl
mov
dec
cmp
aaa
data16
movs
(bad)
lods
push
data16
xchg
pop
inc
add
into
push
pop
outs
sub
outs
push
mov
fild
shl
lock
cmp
xchg
pop
add
pop
leave
lea
shr
fcmovnb
adc
aas
lods
mov
and
mov
aas
in
sti
xor
scas
cmp
fistp
icebp
mov
inc
fist
xchg
fwait
ds
fsubr
clc
mov
fst
shl
out
pop
sar
xor
mov
outs
pop
push
movs
cld
loopne
and
xchg
scas
inc
fsub
inc
xor
sahf
or
or
add
and
in
pushf
inc
fistp
cmps
bound
mov
sub
daa
call
in
bound
or
sub
mov
mov
sbb
jmp
cmps
ret
cdq
cs
(bad)
cwde
mov
pop
mov
cmp
call
fadd
retf
push
pop
dec
loopne
inc
lock
(bad)
and
pop
mov
inc
sbb
fisubr
repnz
and
mov
jmp
mov
mov
cdq
loopne
push
mov
jmp
test
call
jnp
adc
iret
ss
dec
lock
sub
ja
(bad)
int3
adc
out
loopne
jnp
ds
dec
lods
mov
jne
mov
sub
and
cdq
cmp
cmps
sub
sahf
mov
ror
hlt
movs
loopne
push
xchg
sbb
push
pop
mov
push
test
test
cmps
xchg
imul
lds
inc
or
ds
int
ja
outs
in
cmp
daa
mov
xor
ret
(bad)
mov
in
aas
mov
add
mov
pop
test
cmp
inc
push
pop
adc
pop
loope
into
mov
mov
dec
mov
js
and
in
inc
in
adc
adc
adc
mov
push
sub
push
xchg
pop
mov
sbb
jae
movs
add
mov
pop
or
xor
dec
inc
loopne
adc
inc
dec
xor
cdq
dec
movs
or
lock
push
pop
mov
mov
mov
xchg
mov
push
mov
fwait
icebp
repnz
(bad)
fldcw
repnz
leave
sbb
fs
mov
add
or
sahf
repz
jl
mov
sbb
jmp
scas
loopne
outs
scas
push
jmp
lds
(bad)
xchg
or
sbb
mov
ds
sub
push
lds
aaa
pop
ss
jns
or
leave
jp
not
push
xor
clc
enter
jecxz
jl
ret
fcmovbe
mov
sub
popf
lea
cmc
into
sub
jbe
mov
test
xchg
push
into
into
add
jge
xor
cdq
es
dec
push
push
push
stc
add
and
mov
imul
addr16
jo
mov
daa
retf
call
inc
stos
push
push
(bad)
int
movs
sub
push
xor
jp
push
mov
cmp
jo
rcr
fimul
scas
cmp
test
imul
sbb
scas
outs
pop
mov
(bad)
cmp
cmp
mov
dec
fdivr
inc
in
dec
scas
jle
add
ja
mov
pop
xlat
or
add
mov
pop
test
cmp
jl
stc
lock
or
scas
and
inc
cmps
into
out
xor
rcl
sti
add
xchg
cmp
add
adc
mov
xor
cmp
test
fucomip
xchg
movs
inc
mov
popf
cmp
push
sbb
ja
(bad)
mov
push
adc
xchg
jnp
call
mov
call
lods
pop
pop
js
jmp
movs
mov
aas
adc
adc
stc
(bad)
or
daa
xchg
cmps
ret
xor
fld
pop
fptan
push
cwde
jg
or
mov
jle
mov
cwde
ror
jns
ds
xchg
jp
js
test
mov
push
not
mov
hlt
fbstp
pushf
dec
(bad)
or
jmp
jecxz
gs
cmps
push
loopne
enter
or
push
mov
pop
sbb
sub
je
xchg
sbb
xchg
adc
jbe
stc
fcmovb
jmp
inc
je
in
pinsrw
mov
xchg
(bad)
movs
inc
push
scas
call
pop
mov
push
inc
cmp
sub
mov
fld
(bad)
out
out
stc
icebp
mov
mov
test
enter
arpl
xlat
int
jb
aad
out
sbb
add
push
xor
xchg
sti
test
cmp
or
addr16
push
loope
aaa
sub
out
(bad)
pop
xchg
addr16
add
xor
mov
pop
movs
mov
shl
and
jns
out
xor
xchg
xchg
stc
(bad)
ins
es
shl
mov
cli
sub
jno
jmp
jmp
or
in
call
imul
ins
test
out
push
popf
push
jne
jecxz
pop
mov
rol
das
xchg
mov
mov
mov
fld
das
dec
loopne
mov
xchg
ficomp
push
sub
xchg
(bad)
dec
cmps
scas
fsave
inc
push
push
jp
mov
inc
leave
xchg
in
jnp
(bad)
outs
ss
outs
out
mov
mov
jno
call
or
push
scas
inc
iret
test
(bad)
int3
mov
inc
aad
in
ffree
shl
cld
int3
(bad)
cmps
inc
sub
mov
xchg
jle
mul
adc
mov
out
cli
add
push
inc
sub
mov
cmc
loop
jo
add
imul
rcl
jl
(bad)
jge
jp
xor
mov
test
in
xchg
jg
push
movs
enter
jnp
jmp
jo
icebp
movs
ja
call
push
sbb
cmc
in
add
inc
mov
ret
bound
iret
nop
imul
sbb
cld
dec
fist
pushf
js
popa
retf
mov
dec
les
test
dec
jl
test
std
ins
jecxz
mov
xchg
pop
adc
out
fmulp
daa
inc
fidivr
mov
xrelease
repnz
and
rcr
xor
xchg
sbb
push
iret
and
lahf
jmp
jmp
stos
sar
fcmovu
arpl
inc
popa
(bad)
in
jge
clc
loope
or
rcr
ret
sub
cdq
stos
sub
gs
mov
cmp
mov
inc
xchg
jmp
nop
into
jae
out
test
inc
sub
inc
scas
sub
pop
cmp
les
aad
int
cmps
sub
cmp
and
xchg
rcr
jno
add
jns
mul
adc
iret
mov
jp
pop
jl
cmp
outs
call
and
push
out
scas
mov
add
xlat
jo
or
jmp
xor
adc
adc
das
push
inc
or
sub
xor
ret
shr
popf
jae
ror
lea
or
ja
push
aad
jmp
lock
nop
scas
(bad)
sub
fwait
ja
or
test
push
out
push
inc
mov
mov
cld
mov
sub
call
dec
jo
popa
inc
mov
repz
push
mov
jo
mov
dec
das
mov
pop
push
push
mov
adc
int
mov
cmp
inc
jecxz
pusha
mov
jb
add
adc
push
fwait
adc
int3
pop
rol
push
sub
mov
cmp
cmc
jmp
inc
in
add
call
cdq
das
ficom
je
inc
and
mov
push
mov
mov
cmp
ds
iret
js
loope
jno
rcr
adc
daa
mov
and
mov
rcr
xchg
or
cmc
movs
ins
sub
adc
jmp
pop
and
mov
call
sti
dec
enter
jl
cwde
sbb
sar
pop
or
mov
sbb
imul
loopne
and
pop
outs
out
addr16
cmp
mov
sub
xlat
inc
push
sbb
xor
fistp
adc
jle
add
test
push
sbb
add
scas
(bad)
sub
stos
xchg
iret
mov
repz
imul
repz
cmp
or
loopne
push
pop
push
mov
gs
stos
mov
xor
jns
gs
out
push
loopne
loope
dec
stc
add
xchg
daa
mov
xor
dec
cli
mov
or
dec
ins
cld
mov
(bad)
(bad)
scas
xchg
sub
mov
and
stos
outs
mov
add
sbb
cld
push
pop
in
and
fsubr
in
test
mov
rol
outs
int
cli
mov
mov
mov
inc
xor
mov
push
pop
loope
inc
cmp
shr
jg
xor
cdq
lock
cwde
jbe
inc
loopne
cmps
and
pop
fisubr
or
mul
imul
call
lea
mov
daa
test
stos
jbe
sub
push
ins
or
adc
sbb
mov
js
sub
clc
lods
xor
ja
outs
(bad)
int
outs
xor
xlat
fdiv
into
aam
jecxz
lds
mov
or
aas
imul
aam
pop
out
jl
cwde
and
or
(bad)
(bad)
adc
sbb
nop
lds
inc
lods
pop
rol
pushf
push
pop
retf
jae
into
inc
sbb
sub
adc
sbb
ss
stos
mov
push
jno
loopne
inc
and
jg
mov
scas
lods
stc
pop
shr
(bad)
cmc
test
pushf
sub
xor
je
pushf
popa
xchg
les
mov
cmp
xchg
int3
neg
lock
xchg
jge
or
xor
scas
xchg
dec
icebp
lods
mov
loop
dec
pop
loopne
fdivr
mov
mov
sbb
pop
adc
(bad)
fcom
into
sahf
clc
sbb
test
mov
test
repz
adc
jo
bound
jo
push
mov
outs
in
add
dec
xchg
push
add
lods
arpl
out
and
call
imul
jnp
cld
jmp
inc
out
sahf
not
loopne
cdq
mov
and
and
sub
shr
ds
jge
adc
add
into
or
test
std
fisttp
pop
cmp
ins
(bad)
add
jmp
aaa
scas
jle
xchg
addr16
add
test
push
jb
out
test
push
xchg
mov
push
jno
cmps
mov
dec
dec
push
retf
scas
sub
dec
in
dec
aaa
or
pop
std
pop
mov
cwde
push
adc
cmp
lods
mov
fstp
xor
push
sbb
xor
int
push
jbe
inc
movs
stos
xor
add
leave
rcl
les
pop
mul
in
xor
stos
and
inc
pop
adc
jmp
push
and
jno
or
xor
sub
(bad)
leave
pop
dec
push
xor
cmp
call
inc
test
and
movs
push
popf
xchg
inc
(bad)
in
lock
movs
and
push
push
dec
js
aam
push
pop
les
stos
and
cmp
mov
movs
mov
pop
test
and
adc
jb
repnz
cld
enter
in
jo
pop
js
hlt
and
pop
fwait
jnp
push
pop
inc
cmp
mov
cmp
xor
nop
dec
jb
pop
into
xchg
mov
sar
into
js
sahf
and
pop
out
bt
in
cmp
ja
push
jge
pop
out
fwait
pop
test
pop
push
loopne
sbb
scas
loopne
cmps
xchg
cmp
clc
ins
dec
mov
xchg
push
push
in
push
sub
(bad)
xchg
sbb
aam
cmp
mov
fldcw
ss
or
es
xor
cld
test
add
xchg
push
(bad)
push
xchg
sub
ss
emms
cli
nop
imul
ins
int3
mov
pop
in
stos
into
sar
loope
ins
sahf
lods
or
or
mov
movs
pop
aas
les
and
inc
mov
jns
cmp
lds
pop
add
push
cmp
test
dec
mov
inc
pop
out
adc
mov
push
test
mov
sbb
push
push
jno
adc
xchg
popa
nop
add
pop
push
jnp
cmps
lds
adc
clc
dec
mov
std
pop
pushf
test
jo
mov
imul
iret
adc
dec
sti
cs
ins
fisubr
in
lock
xor
int
adc
sub
loopne
loop
ja
test
stc
xor
cmp
xlat
imul
push
mov
loop
popa
push
loopne
mov
repnz
jno
mov
aad
imul
add
jge
pop
outs
xor
(bad)
mov
ds
ror
pop
mov
aad
and
mov
fsub
test
bnd
test
push
test
leave
adc
rol
xor
cmc
ficomp
sbb
out
dec
mov
jmp
xor
ret
or
pop
scas
dec
sub
xor
cmp
out
add
mov
mov
cs
mov
jnp
dec
mov
es
push
loope
push
mov
jbe
sub
cmp
fidivr
push
adc
push
jne
dec
repnz
push
xor
test
sbb
jbe
push
cmp
lods
xchg
les
movmskps
xchg
mov
imul
xchg
sbb
cli
dec
inc
or
adc
add
aad
mov
fwait
(bad)
fsubr
cld
in
mov
mov
or
or
push
sbb
pop
leave
pop
mov
jle
inc
cli
mov
int3
mov
pushf
dec
add
enter
out
cmp
jmp
jae
pop
add
out
aad
jo
push
mov
pushf
ds
jne
and
mov
xchg
les
push
mov
mov
mov
pop
or
xor
ins
addr16
(bad)
push
xor
iret
pop
stos
lods
pushf
mov
test
push
push
sub
bound
pop
iret
(bad)
push
inc
mov
lock
and
test
movs
pop
sub
(bad)
push
add
aaa
(bad)
mov
sbb
mov
dec
mov
adc
adc
inc
shl
mov
or
cmp
repnz
pop
in
sar
pop
inc
or
jg
rcl
lods
jecxz
jmp
jg
dec
dec
add
retf
lods
ins
outs
ret
and
mov
(bad)
fiadd
or
cmp
push
jecxz
jg
mov
inc
shl
xchg
into
std
xchg
int
fidiv
call
mov
repz
mov
and
popa
add
cmp
stos
mov
dec
loope
push
add
xor
call
mov
push
sub
add
ins
jnp
mov
int3
ss
cmps
mov
popf
cmp
adc
jmp
lods
aas
lock
sahf
out
cmp
adc
cwde
lds
jle
xchg
xor
dec
push
sbb
jl
movs
adc
and
mov
(bad)
sub
shl
and
fdivr
mov
add
or
xor
mov
sbb
add
cmp
mov
xlat
pop
xchg
rol
push
inc
xlat
dec
test
bound
dec
adc
lock
scas
adc
adc
ja
fs
sbb
pop
dec
(bad)
idiv
movs
cdq
inc
test
ins
pop
and
in
inc
pop
sbb
in
ins
(bad)
and
out
sbb
dec
jns
push
int3
out
push
daa
push
in
cmp
(bad)
call
daa
and
enter
push
pusha
mov
jo
jbe
outs
icebp
sbb
mov
shr
mov
mov
outs
lahf
in
cmp
mov
sti
mov
cwde
mov
stos
pop
jmp
mov
adc
(bad)
mov
mov
(bad)
je
mov
in
lods
xor
xor
dec
jmp
mov
cdq
pop
lea
adc
xor
jecxz
pop
hlt
adc
add
arpl
out
outs
test
pop
in
jbe
loopne
push
mov
push
sbb
mov
pop
jne
sub
sahf
add
imul
sbb
lods
xlat
adc
xor
mov
pop
jns
xchg
push
mov
sub
scas
sti
aam
xchg
test
out
push
add
mov
cmp
loope
inc
mov
jle
enter
mov
cmp
daa
jno
jnp
repnz
neg
mov
adc
loope
or
xor
setns
fnstcw
std
push
in
clc
not
push
adc
push
outs
xor
mov
cwde
imul
loopne
mov
push
cmp
mov
and
mov
fistp
adc
sub
push
and
sbb
xor
or
out
iret
jge
mov
push
adc
mov
push
in
aaa
pop
popa
and
in
and
inc
callw
mov
call
mov
into
cmp
sub
das
mov
es
(bad)
fwait
jae
call
lods
fnclex
mov
stos
mov
mov
hlt
std
vpand
add
loop
stos
adc
add
aas
(bad)
sub
jecxz
push
xor
mov
mov
lods
jecxz
mov
mov
dec
(bad)
movs
push
dec
pushf
outs
mov
sub
jmp
inc
mov
scas
and
pop
pop
jne
cs
and
dec
scas
xor
mov
and
sub
push
cld
lods
push
ja
push
mov
jne
imul
fimul
call
inc
adc
sbb
enter
mov
jmp
stos
xchg
mov
loope
and
aam
enter
mov
ds
pop
bound
add
(bad)
iret
push
mov
add
dec
push
adc
imul
fist
jb
mov
ret
sahf
pop
add
sbb
retf
dec
sbb
adc
dec
jns
out
fbstp
jge
add
sbb
sub
call
add
loop
cmc
add
stos
sahf
cwde
sti
add
imul
cld
xchg
mov
jg
or
jnp
repnz
scas
add
adc
movs
repz
and
cmp
pop
push
popf
sbb
mov
sbb
push
es
out
(bad)
movs
pop
call
jmp
pop
add
mov
adc
dec
sub
xchg
xchg
xor
rcr
adc
push
or
inc
mov
mov
xor
xchg
xchg
inc
add
rcl
movs
jbe
jg
jge
fdivr
xchg
cmps
jge
je
xlat
fidiv
push
imul
jno
mov
jns
push
mov
fldcw
(bad)
sbb
mov
add
mov
fisub
xor
test
test
stos
mov
not
jnp
mov
bound
pop
and
xlat
clc
scas
mov
loop
es
jecxz
xchg
dec
sti
loop
pop
sbb
jge
ret
out
ffree
adc
call
xchg
js
dec
cmp
jb
test
jge
mov
push
scas
sub
jmp
iret
pop
cmp
dec
jae
mov
inc
dec
push
pop
jno
repnz
aam
jne
mov
jl
iret
repz
cmps
popf
in
or
out
jle
aas
movs
jecxz
and
pushf
(bad)
cmps
jle
cmp
mov
cmp
adc
std
add
arpl
ja
mov
xchg
or
out
mov
jle
jns
shl
and
sti
retf
aaa
fstp
or
in
popf
push
cld
add
call
mov
sub
inc
xchg
add
or
in
xchg
jecxz
(bad)
pop
mov
xor
jo
ins
out
pop
jae
push
out
outs
movs
push
fcomp
pop
std
adc
shl
popf
(bad)
adc
sub
lods
(bad)
repnz
adc
jno
xchg
and
shr
mov
mov
fstp
adc
mov
push
ja
jno
jmp
jb
scas
xchg
mov
rcr
nop
or
jbe
adc
push
add
mov
dec
in
out
test
xor
jo
call
mov
or
push
fdivr
repz
out
aam
push
sub
imul
mov
mov
inc
inc
das
(bad)
mov
into
out
scas
fist
pop
push
outs
add
xor
test
sub
je
xchg
push
sub
gs
fbstp
adc
jno
inc
push
neg
sbb
gs
fiadd
pushf
mov
jp
jl
retf
adc
js
or
cmp
adc
mov
inc
scas
vpsubw
push
lahf
je
(bad)
push
mov
jle
stos
lods
(bad)
dec
mov
dec
fcmovnb
pop
pop
fld
das
mov
mov
jge
in
lods
outs
aad
push
mov
push
mov
cmp
push
mov
push
cdq
push
inc
ror
mov
into
push
sbb
enter
fsubr
pop
xchg
outs
and
mov
jmp
lock
mov
inc
stos
pop
xchg
fwait
popa
stos
xor
push
iret
jg
enter
arpl
call
(bad)
sar
inc
arpl
mov
loope
iret
pop
jo
aaa
xor
arpl
daa
and
inc
sub
mov
lea
adc
jle
out
inc
fs
fsubr
bound
popf
fdiv
pop
adc
outs
cs
inc
pop
mov
(bad)
mov
inc
dec
or
adc
loopne
fisubr
ret
ret
(bad)
mov
test
in
aam
push
sbb
cmc
add
pusha
lods
repnz
mov
fmul
fistp
sub
fdivp
fsubr
ja
adc
adc
mov
out
jbe
sub
sub
je
adc
xor
dec
cmp
pop
adc
push
out
cli
mov
hlt
pop
push
add
cmp
adc
shl
mov
dec
mov
inc
pop
mov
ror
inc
xchg
iret
mov
dec
add
lahf
test
repz
cs
(bad)
mov
push
out
(bad)
fldenv
add
nop
in
jp
nop
call
jl
(bad)
loopne
call
push
mov
pop
mov
(bad)
inc
rol
pop
jmp
fs
add
stc
cdq
push
lock
mov
cmp
cmp
pop
call
iret
out
and
aaa
xchg
xor
xor
les
cmp
retf
mov
aas
or
neg
(bad)
in
push
ret
pop
push
gs
adc
retf
or
adc
sar
add
pop
loopne
xchg
js
pop
mov
add
mov
cdq
add
imul
inc
jmp
repz
retf
aam
or
scas
jp
jns
lea
jo
popa
int3
ins
cs
sbb
int
sti
stos
mov
sbb
mov
aas
push
pop
test
adc
ret
dec
dec
adc
jns
dec
jmp
or
jno
(bad)
neg
mov
aas
adc
mov
xchg
sahf
mov
and
add
gs
xchg
mov
cmp
rcl
xchg
mov
repnz
gs
pop
pushf
dec
popf
nop
add
in
lds
in
push
les
addr16
push
pop
jmp
or
mov
xor
jmp
adc
jns
imul
sub
xchg
icebp
sbb
out
fdivr
mov
je
test
pop
(bad)
pop
or
inc
add
xor
cmps
ret
imul
or
dec
popfw
mov
arpl
lahf
mov
imul
xchg
cmp
out
stos
xchg
fistp
mov
push
xchg
nop
push
or
jecxz
jno
jmp
and
pop
sbb
jge
pop
or
dec
pop
(bad)
and
sbb
(bad)
retf
mov
pop
xchg
lea
jg
jmp
shr
fisttp
mov
mov
cmp
(bad)
bound
mov
mov
test
les
sub
jnp
mov
pop
fs
pop
ins
scas
shl
(bad)
mov
clc
mov
int3
cmp
sbb
nop
mov
push
dec
mov
jbe
pop
(bad)
mov
daa
cwde
sbb
stos
adc
sub
mov
movs
(bad)
pop
inc
les
pop
fisttp
push
pop
lods
mov
jo
cmps
loop
lds
test
test
mov
pop
out
sbb
bound
inc
pushf
mov
pusha
or
jmp
ds
jno
call
out
or
sbb
sbb
pop
xchg
xchg
mul
les
mov
push
fadd
mov
or
outs
test
(bad)
clc
mov
ret
cdq
out
push
aas
cs
scas
pop
inc
push
xor
pop
jae
shl
lea
cld
outs
das
mov
add
stos
in
inc
jnp
mov
in
ror
xor
cmps
sbb
and
mov
rcr
inc
test
lods
push
fist
sahf
xchg
call
stc
cli
scas
loope
jae
dec
loop
inc
add
faddp
mov
mov
neg
pop
nop
test
stc
sub
out
retf
dec
jnp
mov
inc
pop
mov
ret
or
cmp
and
xchg
cmp
jno
outs
jge
dec
loope
mov
out
push
sbb
xchg
dec
in
dec
repz
jbe
pop
xchg
inc
fdivr
ins
xchg
call
aad
xor
push
cmps
ret
(bad)
xchg
movs
xchg
inc
aad
(bad)
rcr
mov
and
sub
cmp
je
aam
fcomp
mov
mov
daa
gs
and
pop
or
(bad)
dec
or
mov
scas
and
out
repz
movs
xchg
lahf
fist
aam
fnstenv
retf
(bad)
cmp
or
mov
add
mov
fld
arpl
mov
cmc
or
sub
xlat
loopne
mov
pop
cmp
scas
push
stos
std
fiadd
fs
sub
repnz
sub
inc
mov
pop
xchg
iret
pop
loopne
inc
xchg
mov
pop
fisub
out
xlat
pop
add
ds
pop
arpl
jmp
xchg
adc
jns
test
and
jbe
xlat
aas
sub
mov
add
push
add
fadd
(bad)
out
out
aad
mov
fwait
jno
xor
jl
hlt
jecxz
test
dec
push
loop
sbb
or
mov
lahf
pusha
adc
xbegin
popf
push
clc
movs
mov
sahf
lds
inc
push
mov
jbe
xchg
add
push
and
popf
stos
xor
sub
xchg
dec
cld
xchg
push
pusha
iret
std
test
das
cwde
fs
(bad)
shr
sbb
jbe
fisub
xor
jne
test
xlat
or
jnp
rol
add
cmp
imul
inc
inc
cmp
push
(bad)
pop
movs
dec
push
test
stos
inc
pop
bswap
pop
inc
pop
jns
xor
sbb
ret
rcr
jb
jne
xor
pushf
scas
fisttp
inc
xor
pop
lea
aam
std
and
sbb
and
and
pushf
pop
shr
loope
jp
mov
fimul
mov
push
add
mov
jmp
mov
push
ret
inc
movs
adc
push
and
pop
adc
mov
pop
push
loopne
test
dec
dec
jae
pop
pop
icebp
adc
lods
mov
arpl
mov
setle
add
clc
pop
ds
cmps
add
sub
sti
push
dec
add
test
js
enter
push
aaa
loop
jb
retf
ds
fisttp
lea
inc
call
nop
pushf
imul
add
mov
mov
or
jne
pushw
mov
stc
jo
(bad)
cmc
iret
push
xchg
ret
dec
mov
jns
or
mov
dec
outs
or
ds
in
adc
dec
call
loopne
sub
sbb
dec
xchg
loop
ret
add
adc
mov
mov
jmp
and
popf
(bad)
cmps
scas
jmp
mov
stos
pop
xchg
pop
xor
outs
xchg
fwait
int3
int
add
pop
bound
jb
xchg
lods
pop
push
jne
xchg
ret
dec
xchg
sbb
pop
sbb
xchg
jb
pop
mov
xor
mov
movs
xlat
out
jmp
call
xchg
jp
(bad)
stos
mov
mov
aam
or
lds
xor
test
out
push
daa
pop
ss
add
or
xor
ins
or
mov
jg
ret
movs
or
dec
out
jbe
fsub
stos
stos
imul
sbb
pop
(bad)
and
hlt
out
sbb
inc
clc
mov
imul
sahf
xchg
dec
pop
hlt
mov
setp
lea
cmp
pop
aaa
xchg
test
mov
mov
push
xchg
jo
clc
and
(bad)
addr16
std
pop
stos
and
push
and
push
icebp
stc
sahf
test
pop
ret
(bad)
cld
sbb
jle
retf
into
pop
loop
add
cli
mov
push
mov
xchg
retf
lea
sub
call
adc
or
mov
push
in
js
js
enter
shl
cli
pop
lds
push
push
lods
mov
adc
xchg
sub
jg
jge
push
cmps
lahf
in
xchg
dec
mov
stos
repz
outs
aam
jp
inc
push
jbe
xor
cmp
mov
popf
and
pop
inc
outs
iret
sar
lahf
rcr
ds
movs
aaa
push
sbb
dec
and
gs
xor
and
fcomp
ja
add
jnp
idiv
mov
mov
das
mov
hlt
sub
inc
ins
add
hlt
dec
jmp
movs
movs
cdq
jl
pop
push
jne
retf
jo
mov
jmp
xchg
jmp
aas
lods
push
(bad)
xchg
nop
outs
add
loopne
mov
lea
mov
jns
add
sub
loop
jg
pop
or
pop
push
cmp
xor
sbb
push
ret
mov
xchg
addr16
or
mov
xlat
inc
xchg
fwait
(bad)
mov
fwait
ins
or
jnp
mov
pop
sbb
repz
out
pusha
xchg
ret
inc
xchg
xchg
outs
rol
aas
mov
ins
and
add
pusha
jae
cmp
mov
cmps
mov
xchg
std
push
jg
outs
(bad)
sar
cmps
inc
cdq
mov
inc
dec
test
and
sbb
mul
into
pusha
push
mov
sbb
fisttp
pop
dec
dec
repnz
cmp
les
or
imul
test
push
cld
in
mov
in
ret
mov
aaa
out
push
push
cmps
cmp
sbb
jmp
adc
mov
jge
aas
ins
scas
cmp
je
cdq
xchg
mov
push
pop
xor
jmp
ret
repz
popf
inc
(bad)
mov
xchg
js
shl
into
fs
aad
sub
call
push
aad
stos
cli
dec
jne
inc
add
int3
popa
sub
nop
jge
cmp
inc
pop
movs
or
mov
xchg
lahf
(bad)
xchg
inc
adc
fnstsw
lock
jp
test
fmul
rol
dec
dec
dec
cwde
stos
sub
iret
jno
mov
repz
rcr
leave
mov
ins
xchg
xor
pop
inc
ja
fisttp
out
shl
aas
jnp
cld
in
inc
cmps
jnp
sti
jecxz
sar
lods
sbb
fwait
xchg
mov
dec
push
push
mov
mov
jb
loopne
nop
jle
adc
inc
mov
outs
xchg
(bad)
xor
aas
call
jns
push
enter
jo
inc
xchg
lds
out
pop
push
fwait
cld
cmp
cmp
sahf
and
xor
cmp
cs
into
inc
inc
mov
or
rcr
cmp
or
mov
out
imul
pop
mov
add
mov
and
fcmovb
sahf
push
ins
mov
lea
mul
shl
cs
les
xor
adc
icebp
fs
sub
aad
pop
jns
cmp
adc
push
(bad)
sbb
pushf
mov
xchg
mov
mov
mov
mov
pop
dec
mov
dec
bound
cmp
scas
(bad)
push
retf
inc
cdq
outs
push
pop
xchg
jmp
neg
push
loopne
xor
jno
add
lods
and
pop
mov
into
sbb
lahf
hlt
js
mov
xchg
call
adc
imul
pop
pop
ficom
out
mov
imul
jno
cmp
adc
adc
std
das
pop
out
cwde
(bad)
xchg
aas
pop
cs
mov
xchg
mov
cwde
add
xchg
add
fcomp
cli
adc
jl
retf
jle
scas
push
movs
pop
fwait
push
pop
in
xor
adc
cmp
cwde
sbb
data16
xor
pop
and
mov
and
in
pop
outs
(bad)
adc
(bad)
leave
jbe
sbb
mov
rol
fwait
push
jmp
mov
cmp
rol
jnp
xchg
aam
ja
dec
movs
fbld
add
mov
mov
cmps
lea
mov
xor
push
xchg
xchg
push
xchg
pop
cmp
je
test
(bad)
gs
mov
xchg
lea
dec
xor
cmps
std
push
clc
push
out
adc
fimul
dec
dec
lea
mov
sub
pusha
jle
jg
sbb
sbb
jnp
xchg
mov
xchg
push
mov
movs
icebp
test
sub
sbb
daa
call
sbb
jbe
dec
dec
mov
push
xor
mov
ss
sbb
sbb
fmul
cmp
popa
addr16
mov
inc
(bad)
sar
xchg
push
shl
ftst
sub
add
xchg
movs
xor
inc
xchg
fld
jns
sahf
jecxz
leave
sbb
ins
push
rcr
or
cdq
or
ret
stos
shl
leave
fcom
fwait
push
pop
sub
int
cmps
sahf
stos
call
jecxz
cmp
ss
jp
cmp
dec
pop
cld
xchg
cs
ret
jle
hlt
mov
cli
push
push
cli
hlt
fmul
fwait
stos
push
xor
or
sub
movntps
imul
aaa
push
adc
xchg
inc
and
mov
mov
mov
add
shl
pop
adc
fwait
shr
adc
add
add
mov
int
scas
dec
ffreep
sbb
fs
xchg
pop
test
adc
jnp
cmps
mov
outs
lock
js
push
and
test
inc
or
jmp
aaa
jg
add
pop
fdiv
pop
pop
jno
mov
js
mov
(bad)
sub
xchg
stos
and
sbb
xchg
inc
xchg
push
add
dec
mov
and
lock
clc
mov
bound
daa
aas
in
stos
fadd
movs
cdq
pop
and
fisttp
outs
jecxz
bswap
push
mov
jb
(bad)
dec
add
call
cwde
mov
add
ror
lds
xchg
shl
call
pop
sbb
stc
push
call
fisubr
imul
sub
inc
adc
xor
or
sbb
repnz
sbb
inc
sub
push
and
(bad)
jo
ss
pop
sub
push
aaa
les
xor
sar
and
mov
xor
(bad)
enter
icebp
adc
outs
outs
push
nop
push
ins
pop
cmp
ins
push
imul
je
push
je
sti
ds
push
stos
loope
pusha
xor
dec
xchg
adc
outs
adc
cmps
int3
jl
adc
test
out
pop
fist
inc
xchg
mov
xlat
fimul
xchg
mov
retf
mov
add
aam
dec
lea
add
je
cmps
test
js
addr16
lods
mov
hlt
dec
push
ins
lods
sub
popf
rol
jge
and
mov
cwde
cmp
pop
test
shl
xor
xlat
lahf
fcomp
ins
test
in
fisub
xchg
fst
push
fld
shr
dec
cdq
popf
mov
stc
sub
adc
stos
jmp
lea
xchg
js
enter
dec
cmp
inc
loop
xor
inc
lahf
xor
push
nop
adc
cmps
imul
inc
scas
or
pop
sbb
cmp
mov
movs
sbb
je
pop
test
enter
xchg
jb
stc
sub
add
out
push
inc
inc
jo
cmp
sti
sbb
lods
(bad)
mov
push
shl
sbb
out
and
inc
jg
mov
dec
loope
inc
data16
mov
psubsb
rcr
or
(bad)
fucomp
or
retf
adc
das
lds
inc
or
aad
cmp
and
inc
pop
push
push
mov
(bad)
test
sahf
adc
in
mov
out
or
test
dec
call
sahf
dec
adc
in
or
inc
outs
add
xchg
cmp
cmp
neg
jg
push
mov
shld
mov
inc
and
xchg
loop
add
inc
es
mov
loopne
push
sub
mov
call
sar
repz
clc
clc
pop
jle
rcr
scas
mov
rcl
inc
in
inc
push
cmp
mov
test
or
mov
cmp
dec
(bad)
into
test
jae
fisub
inc
xchg
cs
nop
mov
mov
lds
mov
mov
pop
stos
pop
mov
sub
repz
hlt
mov
enter
jb
out
sbb
or
fstp
jnp
mov
retf
and
fs
lock
lock
jne
mov
call
xor
and
sub
gs
xor
aas
out
mov
lods
mov
into
lods
dec
jbe
sub
push
cs
sub
das
leave
retf
mov
lods
rol
push
leave
je
and
inc
mov
xchg
test
stos
push
adc
movs
inc
inc
bound
fsubr
mov
lods
mov
iretw
scas
popf
scas
lods
push
in
pop
les
loope
into
dec
pop
and
xor
dec
bound
mov
jb
ins
and
adc
shr
test
(bad)
dec
adc
popf
loope
mov
mov
pop
adc
jmp
sbb
jl
and
adc
in
mov
mov
paddb
bound
sahf
mov
mov
out
cmp
mov
clc
adc
dec
(bad)
sahf
xchg
fcmovbe
mov
mov
pushf
mov
pop
xchg
ffreep
leave
jg
je
aaa
das
and
imul
lahf
jb
sub
adc
xchg
jo
dec
jno
lahf
push
in
stos
ds
pushfw
je
jnp
lahf
sar
pop
xchg
(bad)
ds
loop
call
inc
mov
ins
cmps
outs
out
movs
hlt
cdq
or
adc
rcl
push
shr
sub
daa
scas
cmp
fst
xor
xlat
xor
add
cmps
push
ret
or
and
mov
dec
fisub
fs
xchg
(bad)
push
add
or
retf
aaa
dec
pop
ret
fistp
mov
cmp
bound
pop
movs
(bad)
pop
stos
test
sbb
and
and
aam
pop
pop
loope
aad
sahf
sbb
mov
test
sub
fcmovne
out
push
xor
dec
fsub
rcl
pop
jle
mov
int
outs
lock
repnz
xor
out
daa
ja
js
or
mov
dec
test
jp
and
cmp
push
adc
xchg
lods
adc
ficom
push
xor
fisub
mov
adc
into
aam
jecxz
mov
dec
xchg
jne
bound
dec
cmp
or
inc
lea
jecxz
test
pop
outs
pop
ds
jbe
retf
dec
imul
inc
cdq
into
jge
dec
jo
mov
jne
lahf
enter
hlt
xchg
pop
xchg
out
leave
xlat
cmp
movs
mul
add
mov
cdq
or
test
mov
push
repz
mov
sbb
or
ins
cli
adc
mov
repnz
aam
cmp
sar
pop
push
imul
(bad)
es
mov
aaa
or
enter
jb
pop
mov
div
adc
stos
push
mov
inc
add
lds
mov
fwait
jmp
add
and
xchg
ret
rcr
gs
dec
in
add
aas
aam
sub
(bad)
and
cmps
lahf
ja
adc
scas
retf
inc
inc
neg
cmp
ret
cli
call
test
sub
cmp
jmp
xchg
mov
jl
pushf
call
lock
test
dec
(bad)
cmp
(bad)
adc
loop
add
push
out
pop
into
std
push
inc
mov
ret
aad
or
cmp
xchg
inc
pop
push
cmps
mov
xchg
pusha
xor
jge
xor
(bad)
jl
xchg
dec
mov
ja
push
jl
je
lds
rcr
push
int
in
jns
out
xchg
adc
push
(bad)
movs
lds
jno
pop
inc
mov
mov
and
shl
add
pop
mov
add
gs
loope
lock
nop
(bad)
nop
xchg
or
dec
lods
mov
shl
(bad)
in
in
ror
sbb
pop
add
mov
push
pop
pop
idiv
ds
stos
mov
pop
popa
sbb
xor
push
sbb
stos
lods
ss
stos
xor
enter
stos
test
rol
adc
jb
cmps
dec
sbb
loopne
xchg
daa
mov
iret
pusha
and
in
int
bound
out
add
les
push
or
jp
dec
sbb
push
cmp
jno
dec
lods
sbb
sbb
enter
hlt
and
sti
push
xchg
or
add
or
cmp
jbe
imul
shr
les
clc
push
repnz
movs
retf
sub
clc
add
adc
nop
std
nop
ss
push
lods
dec
in
hlt
xchg
mov
mov
dec
data16
xor
ror
mov
adc
xchg
out
les
outs
mov
fidivr
sar
xor
js
jmp
inc
mov
cmps
sub
in
jne
cmp
jl
test
stos
loop
imul
je
sbb
push
sub
fistp
jl
shl
mov
dec
(bad)
mov
rcl
lods
lea
sbb
mov
mov
fcomp
push
movs
in
aam
iret
sub
cmps
inc
xor
mov
sti
(bad)
mov
imul
push
aas
repnz
in
mov
cmp
icebp
push
mov
cmp
leave
xchg
sbb
jo
stos
xchg
add
cs
stos
adc
cdq
sbb
and
dec
outs
hlt
and
jmp
xor
shr
imul
pop
iret
call
sbb
mov
fidivr
movs
outs
cmp
inc
and
lods
fcomp
out
xchg
mov
sti
js
loopne
sbb
or
jl
out
rol
pop
xlat
sub
inc
dec
inc
fwait
jmp
xchg
ja
or
mov
dec
cmc
adc
add
push
out
jnp
test
and
dec
hlt
xchg
jno
cli
pop
cdq
sub
into
xor
cmps
push
pop
stos
ja
cdq
or
in
inc
mov
jmp
ret
fcmove
stc
jg
push
push
sub
dec
lock
call
mov
xchg
jle
dec
cwde
fsub
das
(bad)
mov
and
jmp
jecxz
ja
mov
stos
xchg
out
mov
das
mov
fnsave
dec
test
mov
or
outs
test
or
push
mov
jnp
xor
ins
sbb
add
mov
test
lds
pop
mov
(bad)
shr
pmaxsw
mov
mov
pop
xchg
in
icebp
sub
dec
rcr
lods
and
jecxz
outs
fimul
inc
and
fadd
stos
inc
rol
add
adc
pop
imul
dec
iret
jl
(bad)
mov
mov
mov
inc
add
add
ds
dec
adc
lea
aam
ret
and
(bad)
inc
lea
stc
mul
or
and
add
mov
sbb
pop
or
cmp
push
mov
out
sbb
push
mov
jae
(bad)
cmps
add
pop
test
lods
(bad)
js
pop
cdq
imul
push
je
xchg
xor
fild
sbb
pop
test
scas
add
lods
sbb
and
scas
aad
jne
sub
mov
ins
in
leave
out
cdq
mov
and
mov
sub
adc
(bad)
push
dec
jle
jp
movs
(bad)
sahf
sub
leave
loope
mov
push
imul
or
cmp
stos
in
mov
cmps
je
pop
inc
cs
mov
add
scas
mov
adc
mov
inc
or
(bad)
imul
inc
(bad)
lock
je
cmp
xchg
sbb
sub
arpl
cmc
test
cwde
xchg
sbb
pop
lss
leave
mov
pop
push
popf
movntq
aad
jae
sub
imul
fild
xor
mov
sbb
test
leave
sub
dec
inc
das
push
js
sbb
cs
neg
mov
pusha
mov
jnp
add
xchg
paddusw
lods
clc
or
lds
inc
ins
retf
pop
xor
cmp
dec
les
jns
shl
rcl
adc
ret
fcom
xchg
scas
test
retf
push
xor
sbb
mov
inc
not
mov
out
xor
or
push
push
retf
inc
mov
iret
cdq
in
mov
mov
(bad)
into
movntps
cmps
cdq
popa
xchg
iret
lods
pop
(bad)
pop
xlat
mov
mul
ror
ret
ss
jnp
jmp
cli
je
popf
js
(bad)
(bad)
push
xlat
inc
popa
mov
(bad)
and
popa
leave
push
mov
add
cmc
in
inc
mov
mov
mov
sbb
jne
mov
cmp
scas
jb
fldcw
adc
push
xchg
xor
and
in
cmp
in
sahf
sbb
in
xchg
int
std
test
mov
popa
mov
aam
sbb
loope
mov
sub
loopne
cmp
or
push
sbb
xor
mov
aas
xchg
fdivr
cmc
rcr
jb
fidiv
shr
gs
jbe
xor
inc
sub
bound
retf
inc
je
das
aam
popf
xchg
aad
mov
inc
inc
imul
in
leave
into
int
mov
xchg
mov
stc
(bad)
rol
popf
in
pop
add
clc
jo
int
sbb
jb
ficom
sahf
xchg
jo
ja
mov
or
jge
push
or
lods
sbb
dec
xor
loope
add
pop
xchg
mov
and
or
pop
call
jge
cmp
js
add
out
dec
fdivr
mov
(bad)
out
aad
loopne
mov
xlat
and
arpl
retf
lea
mov
jecxz
xchg
jns
mov
shl
inc
mov
aaa
inc
adc
enter
aaa
dec
adc
cdq
je
je
cmps
dec
fcom
into
pop
mov
sub
push
fadd
das
out
push
dec
jge
or
mov
xchg
(bad)
rcl
push
sub
pop
in
mov
adc
mov
dec
in
mov
add
cmp
in
paddsw
into
cmps
nop
add
pushf
rol
mov
sub
mov
cmp
and
xor
xchg
jle
mov
cmc
fwait
mov
pop
fisubr
repnz
dec
ins
test
push
ins
adc
jne
xlat
aas
test
or
int3
enter
inc
sub
and
add
xchg
cmp
push
rcl
push
fstp
movs
mov
arpl
retf
aam
cmp
mov
sbb
xchg
mov
push
fisttp
aam
stos
adc
or
pusha
or
mov
cdq
lods
mov
xor
aam
sbb
mov
xchg
add
cmp
repnz
add
ret
popa
sti
and
jg
(bad)
movs
jae
jl
cli
lods
push
mov
test
daa
xchg
jle
rcl
mov
add
mov
hlt
and
and
ds
pop
out
sahf
mov
cmp
scas
lea
stos
fwait
adc
add
push
scas
mov
adc
fild
lods
pop
sti
cli
or
xchg
imul
imul
aaa
lea
aas
sub
dec
or
mov
or
xchg
jecxz
clc
lss
jg
sbb
sbb
and
adc
add
fmulp
inc
imul
pop
mov
cs
xchg
push
mov
test
mov
xchg
(bad)
pop
sub
sub
xor
add
sub
mov
pop
jns
mov
and
mov
movs
mov
mov
daa
fwait
pushf
imul
sbb
or
pop
xchg
js
xchg
data16
push
inc
out
imul
cmp
dec
add
sbb
inc
(bad)
jb
inc
jmp
xor
mov
or
aad
xor
push
cmp
outs
(bad)
clc
pop
inc
movs
jl
fcom
out
sbb
pusha
ins
mov
mov
cmp
cli
xchg
cmovnp
loopne
cdq
jecxz
xchg
mov
aam
push
cld
push
shl
ror
cmp
cld
test
mov
test
mov
adc
push
pop
pop
add
mov
sbb
xchg
pusha
(bad)
lahf
out
xchg
pop
out
push
mov
dec
inc
ror
dec
add
rcl
sub
psubq
fist
test
ret
lahf
sub
fimul
inc
jb
fistp
sub
push
pop
enter
lock
adc
(bad)
shl
jmp
mov
xor
jp
pop
push
mov
aad
dec
jl
ror
jmp
hlt
fwait
xchg
adc
gs
outs
aad
js
push
push
loop
jecxz
jnp
fist
imul
rcl
rsqrtps
arpl
push
neg
jle
aas
mov
xlat
repnz
fmul
into
jg
rcr
jne
(bad)
out
scas
ins
lea
movs
js
xchg
scas
and
ja
les
jmp
mov
idiv
rcl
pushf
lea
add
inc
(bad)
mov
(bad)
into
jl
sub
cmp
or
mov
add
ins
and
mov
cmp
push
or
jl
xor
jecxz
daa
pusha
push
and
mov
add
(bad)
mov
jmp
rcr
inc
mov
ret
pushf
jl
add
adc
mov
in
cmp
xlat
sbb
ja
xchg
xlat
xor
mov
daa
mov
cmp
jge
pop
leave
xor
pop
ficom
push
and
jg
push
std
inc
push
cmp
inc
cmp
jnp
jne
mov
jne
sahf
sbb
mul
(bad)
out
sbb
cmp
lods
pop
mov
nop
(bad)
jns
loopne
(bad)
jecxz
enter
es
lea
inc
mov
sub
outs
push
xor
stos
adc
neg
(bad)
jb
adc
imul
dec
fs
aad
dec
push
lock
sub
test
push
jmp
bound
cs
mov
cdq
push
stos
(bad)
fcomp
cmps
adc
pusha
jp
fs
dec
repnz
movs
fcmovbe
jbe
dec
ins
cwde
mov
std
scas
(bad)
(bad)
fcmovnb
test
(bad)
xor
cmps
mov
jo
jg
ja
push
scas
lods
xchg
jmp
enter
into
shl
add
sub
mov
test
pop
sahf
sar
xchg
leave
xor
xor
jbe
outs
mov
fstp
adc
cmps
fldenv
jmp
xchg
push
les
mov
mov
inc
retf
inc
fs
pusha
daa
in
aaa
in
sbb
div
xchg
pop
cmp
adc
movs
push
mov
xchg
xor
aam
imul
mov
int
jmp
xchg
(bad)
test
out
sar
cwde
sbb
mov
xchg
sub
and
ja
dec
loope
mov
test
cmp
xor
or
cs
in
xchg
xor
enter
je
jl
ja
out
cmp
inc
(bad)
dec
adc
mov
jmp
jmp
movs
jp
loope
in
xchg
hlt
cwde
jl
aas
adc
hlt
or
add
sub
mov
lods
mov
sub
in
dec
push
mov
cld
xor
loop
das
clc
mov
ss
sahf
movs
ds
or
adc
cli
mov
adc
add
into
es
nop
fcomp
push
loop
sahf
std
adc
pop
sub
sbb
xlat
stos
sahf
sbb
pop
ja
fstp
out
out
sub
sbb
jp
in
xchg
cmps
and
lea
add
dec
mov
das
ret
jecxz
sbb
inc
mov
scas
add
cmp
das
add
in
cmps
xchg
jmp
mov
mov
add
loopne
or
iret
dec
jmp
sbb
inc
pop
cmps
push
je
cli
shl
int3
in
mov
aaa
mov
outs
and
aas
adc
fsubr
cmp
ret
outs
xchg
sub
sahf
mov
and
fdivp
push
sbb
pop
into
xchg
int
loope
jo
gs
push
xchg
jne
arpl
add
or
jmp
and
cmp
(bad)
pop
imul
jmp
cmp
jp
adc
push
xchg
mov
mov
imul
push
mov
and
lods
cmp
(bad)
mov
sahf
je
xchg
jbe
xchg
scas
push
mov
(bad)
out
add
xchg
mov
pop
pop
outs
daa
cmp
ss
pusha
int
or
xchg
cli
jle
std
mov
push
mov
addr16
into
sti
ror
sti
mov
xor
cdq
js
sub
shl
addr16
arpl
leave
dec
xor
mov
sub
adc
cmp
mov
adc
adc
ja
test
fisttp
dec
mov
cmp
add
dec
push
lods
dec
loop
lods
sar
hlt
mov
cmp
push
add
adc
push
mov
cmp
maskmovq
test
sub
pop
add
sub
mov
mov
scas
jmp
dec
div
or
std
popa
in
mov
daa
push
xor
fstp
mov
mov
(bad)
gs
bound
inc
cdq
mov
lods
and
or
jbe
jmp
inc
cmps
cs
jnp
data16
push
jle
lahf
mov
call
imul
out
jl
adc
push
xor
sti
cmp
fcmove
or
xchg
sub
mov
cmp
repnz
dec
pusha
outs
out
xchg
in
mov
(bad)
and
xor
shl
add
pop
repnz
xchg
rcr
imul
sbb
jns
bound
adc
cmps
ins
bsf
cwde
scas
cli
pop
icebp
or
push
mov
adc
push
std
pop
sbb
xchg
pop
dec
pop
(bad)
int3
pop
sub
std
xor
pop
test
clc
cli
(bad)
dec
push
sub
adc
adc
sub
push
inc
xor
outs
outs
mov
jae
loop
sub
dec
or
or
test
cmp
(bad)
or
clc
aaa
cmps
sub
stos
lock
retf
xor
shr
cmp
mov
mov
xchg
movs
shl
out
pop
int
add
xor
fwait
shr
rol
push
lea
and
push
or
cwde
cwde
lea
hlt
hlt
fsub
aad
cmp
lds
push
loopne
movs
out
lods
push
and
sub
cmp
scas
sar
xlat
sbb
or
call
add
sbb
xchg
ins
cmps
mov
sbb
cmps
jno
push
idiv
mov
mov
sti
(bad)
loop
cmps
cld
test
push
adc
pop
call
ins
sub
addr16
push
sub
sub
mov
in
mov
outs
jge
mov
xor
xchg
mov
xchg
js
call
inc
sahf
and
daa
jecxz
xchg
in
movs
mov
mov
(bad)
aad
std
les
fadd
mov
mov
inc
mov
xor
sub
mov
xor
or
sbb
inc
push
stos
mov
inc
xor
dec
repz
mov
and
mov
adc
mov
pop
mov
iret
push
mov
and
clc
and
or
mov
stos
and
mov
pop
icebp
arpl
mov
stos
out
mov
daa
jmp
outs
sbb
in
cmp
int
jle
test
stos
or
jmp
sub
cld
xor
lock
mov
repnz
xor
popa
jmp
je
dec
push
(bad)
mov
mov
clc
dec
jmp
sahf
push
nop
mov
or
mov
push
and
xchg
icebp
icebp
pop
add
inc
mov
ins
test
sbb
scas
inc
mov
test
arpl
push
cmp
xchg
mov
rcl
dec
(bad)
push
pop
rol
xor
sub
shl
xor
pop
sbb
cmp
mov
xor
pop
add
mov
shr
pushf
ins
dec
(bad)
(bad)
pusha
(bad)
repnz
out
adc
sbb
mov
push
sahf
jb
es
ins
rol
loop
je
loop
fcom
xlat
repz
push
data16
cmc
pop
add
loope
xor
repnz
call
push
and
xchg
inc
sti
gs
mov
les
fwait
mov
test
adc
xor
test
lahf
adc
or
(bad)
loope
jnp
ja
outs
add
call
call
mov
ins
es
ins
fdiv
xor
inc
xchg
sbb
in
and
fs
lods
and
or
fwait
dec
jmp
fidivr
inc
retf
push
in
bound
or
out
inc
sti
add
xor
cmc
out
lahf
(bad)
fidiv
test
out
or
aas
rol
push
cmp
jb
jle
fild
mov
mov
push
pop
ds
aaa
mov
add
rol
add
popf
rcr
or
mov
fisub
(bad)
lock
jle
aad
stc
call
test
lahf
cs
jle
call
jge
lock
push
sub
retf
sbb
enter
stos
test
inc
pusha
stos
clc
push
sub
outs
icebp
jp
jecxz
loope
xchg
pop
push
mov
aam
pop
movs
test
mov
xchg
and
cld
lea
pop
repnz
push
inc
xchg
mov
test
aad
sbb
stos
inc
fs
cmp
stos
cmp
pop
xor
xchg
and
and
jae
idiv
xchg
lea
mov
mov
iret
adc
fs
fcomp
adc
aas
and
jae
mov
push
mov
sub
xchg
js
dec
in
movs
dec
daa
mov
inc
jbe
inc
add
mov
js
mov
push
push
lods
in
or
(bad)
loope
inc
and
and
ins
sbb
call
inc
xor
xchg
int
adc
stc
dec
(bad)
mov
bound
retf
jmp
xlat
pop
push
ret
and
test
das
xchg
push
xchg
or
sub
aas
sub
pop
stos
xor
(bad)
call
mov
loop
or
arpl
cmp
jl
xchg
sbb
out
push
sub
inc
aad
mov
outs
mov
xchg
shl
test
or
xchg
inc
retf
scas
dec
mov
adc
iret
xchg
sub
xor
push
cld
push
or
cmps
fistp
fisubr
jp
(bad)
and
jo
or
popf
into
inc
mov
cmp
mov
in
pop
stos
push
sub
lock
stc
jb
jns
dec
xchg
jmp
nop
pop
or
jmp
addr16
sar
cs
adc
jmp
iret
rcl
outs
xor
jbe
jecxz
pop
cld
push
sub
ins
mov
shr
xchg
ror
push
stc
mov
loope
mov
push
jnp
imul
fstp
out
mov
sbb
pop
xor
dec
repz
outs
jmp
mov
pop
mov
push
lds
add
sbb
aas
popa
jecxz
inc
push
mov
xchg
jb
add
sub
lahf
std
cmp
push
sub
retf
das
leave
es
sub
fidiv
in
adc
dec
mov
sahf
mov
enter
xor
fisubr
push
inc
mov
cmps
add
lods
int3
xchg
mov
sbb
adc
or
xor
fisub
pop
xor
shr
cmp
out
lods
sub
out
and
and
or
arpl
hlt
cmc
sar
in
sub
stc
aam
adc
push
outs
test
and
sub
jmp
pop
lea
bound
mov
lock
fst
mov
(bad)
pop
xor
jmp
xchg
test
ret
cmp
dec
mov
hlt
xor
cmps
mov
jns
jl
adc
push
inc
loope
outs
and
int3
imul
lods
cmc
xchg
pop
mov
mov
add
cmp
sub
dec
mov
xchg
not
sbb
lock
adc
jb
(bad)
mov
xchg
push
das
mov
jbe
mov
xor
mov
and
icebp
and
mov
(bad)
(bad)
stos
idiv
and
repnz
loop
das
ja
jp
pop
push
cli
mov
(bad)
xor
cmp
aas
lods
mov
bound
jnp
repz
mov
test
iret
pop
imul
and
outs
clc
mov
and
retf
mov
add
dec
jge
loopne
in
out
cs
(bad)
mov
ret
nop
outs
dec
lock
je
cmc
pop
add
lods
or
stos
imul
sti
push
pop
and
out
in
inc
enter
aaa
out
(bad)
xchg
push
pop
inc
xlat
sub
cmps
cmp
cs
js
dec
pushf
xor
shl
inc
xor
(bad)
iret
sahf
nop
ret
sub
add
int3
out
loope
aas
xor
dec
cs
(bad)
and
push
mov
sbb
stos
loope
xor
inc
js
dec
jl
lods
scas
cmp
mov
inc
imul
pop
sbb
inc
mov
es
popf
test
pop
inc
adc
xchg
and
cdq
dec
jge
sub
or
adc
and
inc
(bad)
mov
jbe
xor
aaa
pushf
out
xchg
push
ins
pop
fadd
inc
sub
or
jno
push
sub
and
outs
jecxz
out
mul
leave
stc
xchg
pop
push
(bad)
jb
aas
(bad)
dec
ret
aam
jg
push
inc
pushf
and
jmp
jno
popf
mov
mov
shl
inc
retf
int3
add
mov
pop
and
pavgb
xchg
dec
ror
in
xor
adc
sbb
and
mov
push
cs
test
cld
xchg
out
mov
add
sub
sbb
js
add
sub
jbe
aaa
ins
inc
(bad)
lods
add
mov
call
mov
call
call
adc
fisttp
mov
(bad)
ja
mov
or
mov
mov
daa
retf
rcl
out
sub
adc
mov
mov
(bad)
in
gs
sbb
test
in
jo
mov
lods
into
xchg
mov
jae
test
sbb
cmp
mov
loope
jge
sub
sbb
push
push
add
add
ror
fisttp
mov
adc
mov
fsubr
dec
addr16
dec
or
sbb
adc
xchg
leave
or
cld
inc
mov
arpl
inc
sti
add
xchg
sbb
push
sbb
pushf
sar
mov
xchg
pop
push
lods
add
mov
xor
stos
dec
imul
inc
popa
ds
popf
jmp
jae
fbstp
mov
sahf
movs
and
cmovp
xor
fisub
aaa
sbb
jae
in
fs
ja
aam
sub
(bad)
daa
shl
xchg
xor
jo
push
pop
push
push
mov
jno
movs
ficomp
sub
enter
sub
mov
iret
dec
cdq
stos
(bad)
dec
int3
push
dec
mov
mov
mov
xchg
cmp
sysexit
sbb
mov
adc
out
pushf
fild
lock
shr
mov
arpl
fdivr
push
dec
mov
sbb
and
out
dec
xor
dec
pop
sbb
sbb
icebp
sbb
xorps
test
rcl
sub
movs
je
(bad)
pop
inc
mov
stc
pop
pop
addr16
push
and
fdivr
mov
cmp
jo
call
or
dec
push
popa
mov
shl
sub
mov
jecxz
push
cli
faddp
fild
cmc
add
cmp
cmc
(bad)
jo
scas
pop
dec
dec
(bad)
fcomi
or
mov
stc
out
popa
jge
aad
lods
adc
loopne
pop
xor
fst
sbb
push
push
adc
stc
mov
cmps
(bad)
adc
dec
lea
retf
es
dec
lahf
cmp
mov
les
cpuid
xchg
adc
cmp
dec
jmp
push
fimul
jb
std
scas
aas
cmps
fs
mov
or
xlat
jmp
sti
sti
jmp
clc
mov
test
retf
or
repz
test
repz
cld
call
stos
push
or
fcmovnu
adc
sub
pop
sub
(bad)
call
div
mov
add
or
mov
pop
packssdw
sahf
mov
xor
mov
pop
add
daa
push
pop
sbb
out
les
imul
dec
iret
ror
sbb
cdq
push
imul
dec
mov
jae
and
pop
mov
retf
add
mov
retf
or
inc
into
push
ins
les
xor
std
xchg
push
in
ins
jae
stos
(bad)
jmp
fwait
and
adc
call
es
mov
pop
jmp
jns
sbb
mov
shr
scas
sub
sar
fimul
mul
(bad)
mov
jp
mov
ss
retf
bound
ins
lds
pop
(bad)
(bad)
jge
scas
add
push
in
jle
xchg
lods
push
push
js
pop
mov
loopne
mov
cmp
mov
add
add
and
inc
ins
jl
xor
adc
mov
inc
pusha
gs
cli
fmul
mov
movs
iret
adc
imul
aas
rol
data16
call
inc
ffreep
jns
add
xchg
ret
inc
lahf
pop
cmp
inc
fiadd
add
add
mov
in
pop
xchg
ret
mov
xchg
call
dec
xor
mov
(bad)
jbe
xchg
fadd
dec
lahf
jecxz
je
jg
mov
repnz
push
ficomp
add
push
and
out
xor
push
mov
sub
push
enter
aad
test
add
xchg
loope
or
neg
mov
aad
fs
dec
push
cmp
adc
js
dec
xor
jmp
mov
dec
popa
add
movs
loop
lea
jmp
mov
stos
sbb
inc
push
imul
cmp
sub
rcl
test
push
push
mov
ret
cs
xchg
mov
pop
fadd
out
cs
pop
add
push
fcom
rcr
out
loopne
adc
jl
div
in
daa
jno
and
xor
rcr
leave
dec
and
sub
test
nop
sbb
in
adc
push
popf
mov
loope
jae
test
pop
mov
or
call
lods
inc
cwde
cli
loopne
jae
xchg
test
loopne
xchg
mov
js
and
or
xchg
mov
mov
jecxz
mov
sub
packsswb
int3
fnstsw
push
cli
mov
jge
dec
jo
out
dec
inc
fwait
sbb
fisubr
nop
out
js
(bad)
in
mov
outs
mov
fs
dec
sti
xchg
push
jge
mov
es
jmp
in
mov
jne
mov
int3
(bad)
fucomp
mov
or
les
mov
dec
adc
and
jno
ds
aas
and
push
outs
mov
cmps
inc
dec
xor
hlt
adc
popa
push
jle
cmp
push
and
jp
mov
pop
popf
push
and
jl
sbb
push
lods
push
nop
sti
(bad)
int
push
xchg
mov
mov
stc
push
dec
pop
inc
and
jns
pop
loope
not
gs
fnstcw
inc
je
add
movs
dec
cmps
mov
and
ss
jne
xlat
mov
sub
out
mov
adc
ret
mov
out
adc
mov
sbb
mov
jno
adc
push
sub
idiv
imul
stos
popf
xchg
out
imul
sbb
adc
ins
add
push
fdiv
fdivr
cli
cmps
ret
cmp
fist
pop
shl
es
test
mov
(bad)
(bad)
mov
mov
mov
cs
inc
loop
mov
in
pusha
in
cmp
repz
dec
gs
sub
adc
dec
retf
or
inc
hlt
and
inc
jmp
push
and
fsub
xchg
add
cmps
add
mov
stc
sub
lds
mov
xchg
cmp
(bad)
or
push
jl
add
hlt
sahf
sub
xchg
push
and
push
test
retf
hlt
xor
mov
push
fsubr
arpl
(bad)
jecxz
mov
adc
fldcw
jne
iret
xchg
jne
sbb
push
aam
cli
jmp
adc
push
jp
xchg
jns
xlat
lea
outs
cmp
sti
scas
pop
or
cwde
jmp
js
pop
std
sbb
xchg
outs
xor
inc
cmp
loop
(bad)
adc
mov
icebp
cmp
int3
jmp
loope
cmp
jmp
mov
stc
test
pushf
or
or
in
sahf
cdq
mov
sub
jle
xor
pusha
add
mov
or
mov
and
pop
adc
mov
cli
dec
push
rcr
cld
rcl
popw
sbb
(bad)
xor
sub
stos
or
xchg
push
xor
rol
mov
mov
test
cmp
jg
inc
movs
mov
mov
movs
enter
test
jg
add
lods
pop
out
mov
push
dec
mov
xor
adc
fsubr
inc
pop
xor
fsub
adc
adc
call
repz
jge
sbb
aam
test
(bad)
loopne
(bad)
shl
std
dec
add
daa
pop
mov
jb
(bad)
in
sahf
in
in
or
lock
sub
and
out
imul
jg
sbb
push
sahf
push
push
and
push
jae
sub
or
mov
imul
jmp
movs
xor
mov
mov
in
retf
aas
mov
sub
adc
xchg
sbb
cmps
icebp
int
mov
cmp
cdq
aad
aad
mov
xchg
jne
(bad)
in
scas
(bad)
push
lods
fisttp
and
xchg
cmp
jbe
sbb
push
loop
pop
inc
pop
xchg
jmp
lods
int3
cld
sub
js
xor
mov
and
add
dec
iret
dec
xor
(bad)
shr
daa
dec
aam
inc
lods
pop
sub
mov
or
dec
aaa
dec
adc
push
sbb
push
cwde
push
int
mov
mov
ret
mov
xchg
popf
dec
sahf
js
mov
sub
mov
xchg
cmps
mov
enter
loopne
mov
imul
cmps
pusha
mov
sar
cmp
ror
gs
mov
bound
std
lock
scas
loopne
lea
sbb
pop
scas
sub
jle
inc
xchg
sahf
adc
call
cdq
dec
push
lods
not
inc
retf
ret
shr
stos
and
(bad)
retw
dec
inc
mov
out
movs
neg
jle
dec
and
(bad)
retf
inc
mov
out
(bad)
rcl
sbb
test
jne
daa
bnd
pop
push
dec
push
mov
fadd
shl
popf
push
inc
inc
popa
test
mov
sbb
movnti
(bad)
mov
pop
push
rcr
imul
pushf
pop
or
sub
pop
ret
addr16
aad
jae
and
cli
mov
fld
(bad)
repz
pushf
sbb
ret
mov
retf
(bad)
pop
imul
data16
js
xor
inc
je
js
sub
sub
movs
loopne
or
fidivr
xor
xchg
and
cmps
sub
mov
pusha
jns
sahf
push
push
in
int3
mov
adc
add
cmps
(bad)
jge
sti
mov
mov
fmul
push
clc
pop
jg
gs
arpl
mov
into
inc
sub
and
fldcw
stos
lock
mov
loop
pop
stc
mov
repnz
xchg
jmp
inc
ss
in
call
pushf
ret
mov
retf
add
mov
pop
and
cmp
or
test
call
xor
sub
fild
pop
sti
(bad)
movs
sub
xor
sub
sub
lea
(bad)
fimul
cdq
nop
inc
test
push
or
popa
mov
xchg
mov
fst
inc
pop
sub
leave
mov
jne
inc
xchg
call
stos
outs
sbb
cmps
xor
cmp
or
mov
mov
movs
ficomp
hlt
das
test
ret
push
xor
loope
test
or
and
and
sub
push
movs
xlat
dec
addr16
push
add
fdiv
dec
dec
(bad)
dec
jno
ins
lods
loop
div
add
retf
jp
nop
stos
fs
and
stc
popf
mov
retf
add
xchg
add
fnsave
inc
jmp
cdq
jmp
mov
movs
int3
sar
ja
fldcw
lods
xchg
out
jns
ret
xchg
test
push
add
adc
xchg
and
dec
dec
in
xchg
jmp
inc
xchg
call
sbb
lods
jb
and
dec
push
fmul
inc
je
(bad)
xor
sub
xchg
mov
mov
sbb
fnstsw
mov
gs
repnz
jns
cmp
mov
jp
lds
(bad)
aaa
loope
arpl
loop
xchg
sti
sub
pop
loop
pop
jecxz
xor
jl
push
lea
mov
fwait
add
ss
iret
jmp
ror
and
adc
retf
sub
inc
fcmovnb
lods
div
jnp
xchg
cld
mov
or
fcomip
dec
mov
rol
mov
xor
in
scas
xor
nop
pop
retf
dec
(bad)
icebp
test
push
push
cmp
inc
mov
mov
cmp
clc
addr16
or
inc
mov
xchg
pop
(bad)
int
lods
mov
ins
das
mov
fcmovbe
push
addr16
out
lods
loopne
(bad)
sub
cmp
dec
les
clc
mov
cdq
sub
out
ins
(bad)
pushf
xchg
shl
nop
stc
div
jnp
stos
pop
test
cli
xchg
sub
jp
ret
cmp
xor
add
push
push
sub
inc
jl
jae
add
mov
add
daa
les
mov
xor
int3
mov
cmp
imul
test
inc
cmps
jb
movs
sub
fsubr
ss
xchg
jb
popa
mov
out
xchg
mov
pop
imul
lea
xchg
loop
adc
std
xor
dec
hlt
leave
inc
dec
push
movs
out
push
lods
adc
or
or
mov
enter
cmp
bnd
push
inc
arpl
jmp
dec
jg
ret
out
jmp
mov
popa
adc
adc
sbb
lea
xchg
aad
or
movs
dec
icebp
add
sar
inc
mov
add
dec
into
stos
cmp
pop
xor
imul
and
popfw
jae
jmp
mov
repnz
adc
sbb
idiv
jnp
(bad)
call
inc
dec
inc
mov
shl
dec
sbb
out
inc
not
inc
xchg
mov
gs
jae
scas
or
test
push
mov
(bad)
popa
adc
xchg
push
cs
sub
movs
mov
and
stos
je
jge
jmp
mov
popf
inc
adc
inc
sbb
iret
loopne
xor
rcl
mov
test
mov
mov
dec
enter
test
mov
popa
push
mov
xchg
mov
(bad)
dec
lods
and
aam
not
xchg
test
(bad)
cli
(bad)
dec
clc
cmp
jb
jle
push
fsub
mov
retf
sti
test
and
jae
cmps
and
ret
and
jbe
mov
dec
jp
jbe
jg
arpl
mov
xchg
inc
jae
mov
ds
outs
adc
sbb
lds
inc
scas
jnp
inc
icebp
mov
ds
xor
in
sbb
hlt
cli
sti
xchg
dec
pushf
cs
push
adc
push
dec
mov
repnz
stos
sbb
or
aam
dec
mov
sub
fdivr
xchg
mov
and
in
mov
jb
and
push
add
(bad)
popf
clc
xor
push
and
nop
sub
jb
add
aas
(bad)
aad
dec
cs
or
hlt
mov
xor
pop
jne
stc
rol
dec
outs
aad
mov
clc
pop
mov
(bad)
sbb
mov
loope
mov
lock
test
lods
add
outs
ret
and
pop
ins
xchg
sbb
ret
sub
xor
out
sub
ret
and
(bad)
in
fiadd
sbb
jbe
(bad)
xlat
outs
dec
ja
(bad)
jne
cmps
lods
mov
out
das
iret
xchg
imul
or
pop
stos
sbb
pop
in
push
jl
mov
xlat
test
outs
(bad)
pop
mov
ficom
stc
sti
push
or
mov
movs
loopne
daa
dec
cmp
mov
sub
xor
(bad)
cmp
inc
mov
or
es
push
popf
mov
sub
cmp
movs
ret
scas
xor
enter
pop
xor
lods
inc
gs
dec
mov
cmp
push
lahf
aad
adc
xchg
cmps
pop
xor
js
pop
mov
es
loop
(bad)
and
pop
loop
cdq
mov
adc
xor
std
ds
dec
lahf
add
jecxz
stos
xor
lods
je
dec
jecxz
adc
or
imul
jb
rol
gs
pswapd
dec
test
sar
push
xchg
sahf
leave
xor
add
hlt
outs
cmp
xor
fmul
cmp
rcl
in
sub
lods
leave
cmp
and
in
adc
push
movs
mov
push
and
push
mov
outs
and
test
int
jno
push
aad
cs
es
or
cli
xchg
fist
sti
gs
jp
mov
aaa
jl
mov
fiadd
in
sti
xchg
sub
dec
fucomi
or
or
cli
cmp
ss
add
gs
out
mov
sub
jle
repnz
inc
and
sub
pushf
dec
popf
repnz
int
or
sbb
repnz
mov
sub
pushf
das
inc
(bad)
mov
push
out
adc
or
inc
fmul
inc
sub
movs
ss
cmc
cmp
pop
rcr
retf
xor
inc
(bad)
jecxz
jecxz
out
add
into
sahf
xor
inc
push
ins
iret
cmps
xchg
into
lods
sbb
ficom
cwde
xchg
and
sub
cs
dec
imul
sbb
jecxz
sub
icebp
out
pop
into
mov
dec
adc
inc
adc
aas
sub
aas
sar
xor
and
pusha
aam
aam
and
add
js
pop
pop
add
stc
sbb
jbe
loope
loope
loopne
push
rol
cmps
mov
inc
rcr
ja
lds
movs
ja
xor
inc
retf
loop
and
in
loopne
cmps
shr
popa
ins
push
add
push
dec
ja
cmp
outs
mov
call
sbb
dec
jl
lock
sbb
cdq
das
push
setl
fs
inc
xor
adc
dec
or
aam
mov
int3
mov
pop
sbb
cmc
imul
xor
mov
xchg
fld
jb
cmps
or
lahf
pusha
and
sbb
xchg
jp
retf
xor
jg
sbb
inc
sets
in
mov
je
add
iret
pushf
or
lds
loop
int
in
sub
enter
leave
and
cli
pop
jbe
lea
sub
sbb
mov
hlt
inc
inc
push
jnp
bound
bound
cmp
jge
push
cmp
dec
scas
xor
test
sbb
ret
add
(bad)
sbb
mov
dec
jne
loope
sbb
dec
lock
lahf
stos
xor
sub
jle
pop
mov
add
les
iret
push
cmp
push
mov
cmp
cs
jne
mov
mov
inc
dec
mul
aam
mov
das
(bad)
out
out
push
xchg
dec
test
test
call
(bad)
es
jbe
pop
sub
cwde
in
add
retf
bound
pop
ret
inc
mov
jno
(bad)
lahf
and
(bad)
clc
shl
add
test
xor
iret
push
aaa
cli
adc
cdq
cli
mov
icebp
mov
inc
fsub
push
inc
push
pop
outs
cmp
and
hlt
mov
ja
fs
daa
adc
mov
ds
xlat
add
bound
fwait
sbb
sub
or
cmp
pushf
sti
jns
jge
ret
add
lahf
push
mov
mov
(bad)
rcr
iret
in
adc
out
retf
lahf
fucomip
bound
out
(bad)
pop
xor
lods
ror
out
int
call
jo
(bad)
pop
adc
jne
pop
sbb
shl
and
jae
adc
aas
sub
and
test
(bad)
sub
nop
pop
aaa
mov
xchg
xchg
leave
pop
jns
int3
cmp
rol
push
(bad)
std
xchg
xor
sar
jb
retf
loop
in
dec
in
inc
sbb
loop
sbb
pop
shl
jns
push
push
nop
hlt
mov
mov
pusha
add
inc
mov
sbb
scas
sbb
adc
push
xchg
cmc
jno
pusha
mov
pop
adc
stos
ds
dec
faddp
mov
sbb
lods
or
xchg
mov
xchg
mov
mov
mov
jle
push
fucomp
mov
rol
bound
cmp
push
mov
ins
int
pop
sbb
pop
jmp
bound
push
xor
push
fdivr
(bad)
sbb
mov
dec
mul
mov
pop
and
mov
push
push
aam
lahf
xchg
mov
rcr
jge
pop
and
fldenv
imul
add
inc
loopne
pop
mov
pop
inc
fidiv
fnsave
pop
jns
bound
sub
out
ficomp
enter
pusha
stos
dec
and
addr16
es
mov
scas
mov
addr16
adc
mov
stos
adc
inc
stos
inc
sub
mov
pop
cs
aad
pusha
sahf
mov
lahf
jecxz
xor
movs
mov
or
dec
inc
jmp
push
push
ror
outs
mov
inc
and
jle
stos
cmp
cmp
xchg
cmp
fisttp
dec
mov
das
jno
xchg
sbb
dec
aam
(bad)
addr16
xlat
pop
ds
int3
ret
movnti
push
sub
pop
adc
push
mov
retf
sub
push
(bad)
fiadd
fstp
dec
enterw
dec
stos
addr16
mov
or
mov
loop
dec
xchg
sbb
mov
call
or
mov
cli
jo
imul
fld
or
cmp
mov
dec
adc
jle
inc
xor
inc
push
xor
(bad)
mov
cmc
adc
into
pop
push
sub
in
or
mov
in
int3
mov
std
cmp
dec
dec
push
inc
loopne
sub
fs
icebp
int3
pushf
ss
jmp
or
inc
dec
aam
xchg
popa
or
sub
pushf
stc
inc
mov
mov
push
xchg
jae
pop
outs
mov
mov
movs
outs
pop
adc
xor
jno
sar
sti
push
add
(bad)
aaa
(bad)
je
arpl
add
add
fcomp
dec
push
sbb
(bad)
mov
sub
or
popf
jo
rcr
stos
cmp
mov
inc
add
in
fcmovnbe
mov
mov
imul
call
jmp
(bad)
sub
daa
fdivr
lods
adc
jp
scas
mov
xor
jae
retf
(bad)
adc
xchg
lock
out
cmp
stos
mov
mov
test
jb
mov
arpl
call
aad
xor
sbb
jmp
mov
test
scas
jle
stc
(bad)
(bad)
pusha
out
test
stos
push
jmp
movs
lds
sub
push
iret
fdivr
jb
lahf
add
loopne
add
addr16
cwde
sbb
das
jb
pop
mov
cs
inc
into
call
imul
xor
mov
cs
ins
cmp
inc
mov
imul
std
dec
dec
ret
imul
xchg
jg
sub
pop
xchg
inc
mov
aas
scas
movntps
ja
mov
cmc
dec
iret
adc
in
mov
mov
hlt
sub
adc
sub
ficom
mov
rcr
ficomp
push
push
int
mov
pop
pop
fwait
stc
sub
loop
push
ja
movs
jl
sbb
retf
jl
jbe
mov
aad
pop
(bad)
int
jle
movs
test
pop
fidiv
add
sub
mov
icebp
push
dec
pop
lds
fld
lock
xor
leave
pushf
scas
push
jo
fistp
ficomp
out
push
jno
mov
mov
into
lds
pop
mov
test
xchg
sub
pop
fs
aad
js
pop
mov
sbb
les
xchg
out
sar
mul
ror
lock
(bad)
clc
cmp
out
and
ds
bound
inc
or
pop
ret
fwait
ror
icebp
out
movs
sbb
mov
inc
sbb
ss
adc
cmp
cmp
add
mov
sahf
dec
imul
test
add
jg
mov
repnz
dec
jmp
(bad)
(bad)
ror
jnp
jno
jae
popf
je
xchg
(bad)
shl
pop
pop
pop
push
adc
xchg
add
loopne
sbb
test
mov
into
pop
movs
add
xchg
xchg
xlat
cmps
push
sbb
mov
std
sbb
sub
xchg
hlt
jns
add
mov
call
jnp
out
jp
loopne
test
pop
test
push
mov
out
movs
mov
sbb
sbb
loop
jno
or
outs
dec
mov
jecxz
mov
fisttp
rcl
es
fs
repz
push
sti
outs
mov
mov
adc
xchg
cdq
mov
aas
idiv
and
fld
jmp
pop
xor
fdivrp
sbb
repnz
fdivr
fwait
inc
movs
iret
int
int
icebp
fst
aas
jmp
cmp
xchg
fs
aam
scas
inc
mov
xchg
cmp
test
jmp
xchg
mov
push
mov
push
xchg
iret
mov
test
popf
cs
test
cwde
scas
cdq
aas
fnstenv
push
sti
call
sbb
outs
dec
add
aam
(bad)
aaa
xchg
sub
neg
js
adc
pop
ror
out
dec
adc
jge
inc
adc
inc
lea
dec
fs
cmps
fsubr
not
adc
adc
in
mov
ror
xchg
fldcw
jb
cmp
sbb
xor
dec
imul
les
(bad)
xor
inc
push
ds
sbb
mov
sub
or
dec
and
mov
stc
idiv
(bad)
(bad)
js
mov
mov
mov
dec
jmp
jge
or
mov
xchg
inc
stos
pop
pop
cmps
mov
xor
mov
sbb
mov
push
adc
(bad)
rcl
sub
fdivr
and
out
adc
push
sbb
xchg
fstp
sti
adc
push
add
push
je
pop
xchg
xor
pop
and
movs
stc
sti
jae
and
mov
daa
sub
dec
mov
dec
and
xor
xor
mov
xor
stos
jp
inc
ror
add
aam
je
test
aad
mov
in
jmp
ins
push
adc
shl
adc
mov
(bad)
mov
sbb
rcl
fild
repz
in
inc
xor
cmc
sbb
js
(bad)
adc
imul
dec
rcl
repz
in
mov
push
gs
dec
sub
aam
out
or
dec
into
stc
jle
test
mov
stos
scas
scas
sub
mov
ss
mov
xor
pushf
std
arpl
cmps
dec
push
in
mov
imul
test
sub
dec
adc
sub
mov
pop
jecxz
(bad)
xchg
mov
mov
mov
out
dec
rep
inc
cs
in
enter
sub
das
retf
pop
cmp
nop
pop
mov
icebp
mov
cld
or
mov
sbb
popa
call
(bad)
xchg
lea
sub
jl
outs
(bad)
iret
dec
mov
and
add
and
jnp
or
outs
js
(bad)
jnp
jp
test
mov
call
imul
pop
xbegin
in
push
popa
movs
mov
push
mov
xor
inc
cs
jne
(bad)
pop
int
icebp
or
sub
push
mov
sti
(bad)
xor
mov
ds
dec
cmp
pusha
retf
call
repz
lds
pop
cld
retf
pmaxub
mov
mov
int3
cmp
pop
pop
dec
cmc
xor
adc
push
jl
sbb
mul
out
xchg
mov
sub
iret
cs
cdq
out
test
jge
fmul
and
mov
cmp
mov
and
in
jle
adc
sub
fbld
push
shl
int
arpl
clc
jno
mov
jl
fldcw
mov
mov
dec
in
cs
fmulp
cld
mul
mov
pop
xor
push
fxch
and
xchg
out
mov
enter
es
mov
(bad)
jbe
les
add
mov
stos
jbe
or
loope
dec
imul
stc
les
iret
jge
cmps
mov
and
retf
lahf
lea
push
fistp
je
call
cmc
loopne
daa
jo
adc
mov
xchg
idiv
push
sub
or
sbb
or
mov
nop
xchg
add
xor
inc
test
cli
sub
aas
adc
pop
mov
or
retf
mov
adc
or
fdiv
stos
(bad)
mov
xchg
mov
outs
xchg
fcom
fwait
mov
fiadd
iret
cli
data16
(bad)
es
stos
inc
mov
jmp
xchg
or
stos
scas
mov
and
jmp
sub
stos
int3
mov
xchg
or
and
je
jp
aaa
cmc
leave
or
and
inc
repnz
add
movs
sbb
xor
or
sub
das
add
ds
xor
push
push
cmp
arpl
popa
pop
leave
les
ins
sbb
movs
arpl
cdq
jnp
pop
mov
fadd
xchg
xchg
mov
adc
sti
ins
daa
jle
jae
or
(bad)
fadd
fcmovne
ss
outs
xor
and
mov
repz
xchg
jg
movs
mov
or
das
das
inc
fidiv
iret
cdq
push
addr16
mov
ret
clc
push
jnp
pop
add
mov
mov
inc
arpl
pop
iret
push
dec
sbb
ja
test
(bad)
daa
add
dec
cld
xor
push
dec
sbb
sub
jbe
movs
pop
je
mov
repz
icebp
and
dec
mov
loop
xor
addr16
pop
test
(bad)
dec
fwait
add
repz
pop
sbb
sahf
stos
mov
xor
mov
inc
(bad)
cwde
jp
push
iret
leave
shr
xchg
ret
fmul
ret
xor
sbb
mov
adc
cli
call
push
cld
loope
rol
add
cmp
jns
or
inc
ret
xchg
dec
push
int3
setbe
dec
inc
xor
repz
sbb
jmp
ret
inc
pop
push
in
aam
sbb
fsub
inc
repz
test
dec
jno
xchg
cdq
shl
mov
push
stos
push
ins
mov
xchg
add
sahf
add
cmp
dec
xchg
sub
(bad)
daa
jbe
mov
dec
pusha
mov
adc
ret
pushf
repnz
test
xlat
cmp
dec
mov
add
pop
sub
dec
xchg
ja
loop
xchg
iret
in
out
mov
dec
mov
test
push
or
lea
sbb
mov
mov
push
xchg
aam
in
inc
inc
sahf
pop
test
into
call
imul
add
jp
and
cmp
mov
retf
retf
pop
out
xchg
jo
and
mov
jae
retf
sbb
sbb
jae
inc
(bad)
cmp
clc
sbb
mov
ins
xchg
gs
ror
mov
sbb
mov
push
pop
gs
sub
xchg
test
(bad)
mov
bound
pop
sbb
xchg
xchg
and
add
xchg
lods
mov
adc
cmp
xchg
xchg
inc
(bad)
repnz
mov
div
and
addr16
fnstsw
and
ror
popa
adc
push
xor
jo
push
fwait
xchg
frstor
ficomp
mov
xor
sbb
jbe
sub
(bad)
jl
xor
mov
xchg
call
cmp
sub
out
ret
cmp
mov
addr16
dec
pop
sar
mov
jg
fisub
int
ficomp
mov
mov
test
ror
into
sti
cdq
repz
sub
fdiv
imul
bound
add
dec
mov
mov
jbe
adc
mov
or
inc
test
push
cdq
adc
xchg
enter
ret
das
in
je
xchg
aas
in
xchg
rcl
mov
scas
test
inc
out
or
mov
rol
mov
sbb
or
enter
loope
sbb
pusha
and
fimul
sbb
scas
sub
(bad)
popf
test
cmps
ds
sbb
cld
jmp
xchg
dec
imul
(bad)
aaa
sub
or
pop
in
mov
mov
mov
xor
dec
sti
aad
xor
mov
sub
add
pop
popa
dec
xchg
and
pusha
int3
sti
test
ffree
sub
stc
jo
pop
and
(bad)
push
sub
lea
pmaddwd
loope
pop
mov
stc
inc
mov
into
dec
adc
or
adc
daa
xor
out
fucom
mov
push
push
jle
inc
jb
shl
inc
xchg
mov
pop
mov
or
clc
fwait
dec
mov
in
xor
aas
dec
(bad)
cmp
leave
pusha
in
add
stos
sub
loopne
retf
data16
loopne
inc
loope
lods
jl
pop
in
sbb
jmp
out
outs
add
mov
xchg
mov
ss
fmul
cmps
add
mov
xor
out
(bad)
lods
lock
lods
jmp
mov
sub
xchg
adc
jmp
mov
inc
push
ins
test
outs
add
dec
mov
gs
in
adc
and
cld
sub
sbb
ins
jbe
movs
nop
fimul
adc
and
cmp
pop
pop
dec
xor
jmp
and
pop
scas
or
inc
inc
inc
gs
xchg
or
xchg
cwde
lock
gs
in
sahf
mov
mov
inc
inc
and
lea
jl
sbb
adc
fsub
stc
push
cmp
fs
cmc
movs
mov
test
push
fsub
pop
mov
fidivr
pop
fnstenv
mov
inc
test
push
dec
sbb
stos
out
sar
sbb
jle
mov
es
mov
into
xor
fwait
inc
das
sbb
mov
push
stos
std
(bad)
in
adc
mov
mov
sub
cwde
les
je
xchg
popa
pop
push
and
push
mov
call
aaa
adc
pop
push
ss
and
js
test
call
push
fisubr
sahf
xchg
shl
hlt
(bad)
dec
add
xchg
inc
in
inc
push
aaa
neg
dec
xchg
push
mov
xchg
outs
movs
jg
ret
lea
fdivr
cli
cmp
int3
je
js
and
ins
scas
not
mov
bound
dec
bound
int3
jb
movs
push
lods
xlat
or
xor
pusha
mov
test
adc
sahf
mov
sbb
cmps
addr16
into
cs
aad
mov
fwait
test
aaa
ins
xor
xchg
or
or
sar
pop
sahf
mov
xor
repnz
xchg
and
sub
scas
pusha
mov
enter
daa
push
cs
mov
scas
jle
sti
arpl
scas
push
dec
dec
sbb
mov
popf
push
fwait
lea
sbb
mov
(bad)
movs
jbe
popf
sbb
js
dec
adc
iret
mov
cmps
cmp
dec
xor
cmp
aaa
div
pop
adc
fild
sbb
jnp
sbb
ret
add
mov
xchg
cwde
mov
dec
mov
fisttp
fdiv
lea
stos
iret
fisubr
sar
dec
sub
xchg
je
sub
fucom
sahf
out
pop
and
imul
sbb
jp
mov
push
fild
pop
cld
aaa
mov
mov
mov
ins
or
sti
add
into
cmps
and
push
je
push
sahf
repnz
cmc
lods
pop
imul
adc
xchg
out
adc
dec
jecxz
jbe
add
sbb
pop
jb
mov
mov
lods
sbb
sar
jno
sub
in
mov
cmp
fcmovne
jp
stos
mov
sub
shl
loopne
mov
in
aad
or
and
mov
jmp
ror
xchg
in
jp
adc
sub
dec
retf
in
inc
xchg
push
addr16
stos
cmp
(bad)
dec
xchg
rol
adc
cmp
cmps
dec
stos
cmp
lahf
push
xor
inc
cmps
pop
iret
into
data16
cld
push
push
stos
pop
cs
ss
data16
push
mov
jmp
pusha
out
rcl
add
adc
and
or
(bad)
test
lods
pop
mov
and
xchg
jne
out
sub
mov
je
or
adc
lock
out
imul
into
and
push
test
pop
jno
sbb
add
sub
mov
xchg
aas
fstp
shr
fnstsw
xchg
mov
lds
sbb
gs
nop
ins
out
xchg
imul
ins
sub
jbe
jle
xchg
sub
mov
sub
jbe
jecxz
adc
sahf
popa
sbb
adc
cld
std
mov
pop
or
test
stc
xor
jmp
mov
mov
out
mov
sbb
ds
js
popf
in
out
cli
in
adc
mov
cwde
add
add
nop
xlat
loop
mov
mov
pop
or
cdq
mov
xchg
dec
sbb
add
cwde
std
aad
inc
push
cmp
cmp
fwait
cmp
inc
je
pop
mov
pop
in
pop
retf
bound
jne
xor
pop
inc
xchg
jns
icebp
xchg
mov
jl
push
in
sub
sub
and
adc
sub
int
xchg
or
xchg
or
enter
ror
push
mov
add
cs
xchg
repnz
jp
xor
shl
test
push
leave
cwde
sbb
iret
scas
test
pushf
xor
scas
xchg
or
mov
jecxz
mov
loop
sub
pop
imul
mov
pop
push
cmp
add
sub
call
cmp
call
and
or
inc
sub
cdq
shr
cs
xor
pop
cmps
rol
(bad)
sub
(bad)
aam
mov
test
mov
xor
fs
leave
sahf
inc
xor
xchg
test
and
inc
push
(bad)
jns
imul
add
movs
aam
pop
fs
sbb
mov
je
jl
and
xchg
xchg
gs
jbe
dec
(bad)
xor
jecxz
xor
or
out
mov
mov
adc
xchg
push
inc
cwde
fisttp
lods
sahf
mov
shl
js
aas
stc
hlt
push
add
call
pop
xchg
movs
pop
stos
xor
xchg
mov
xchg
loope
ss
sbb
jle
mov
retf
push
ja
aam
inc
add
jge
sub
imul
aad
mov
adc
out
leave
and
push
xchg
pusha
js
push
sub
mov
inc
neg
mov
jmp
mov
jmp
cdq
or
mov
push
or
adc
mov
mov
mov
xor
jo
leave
cli
cmps
or
sub
lods
fdivp
rol
or
mov
xor
je
call
(bad)
(bad)
das
retf
sub
xor
pop
je
jmp
xchg
push
or
sti
aas
jnp
mov
dec
int3
sub
fadd
mov
sbb
add
ja
fistp
not
in
and
movs
dec
inc
xor
mov
ss
mov
ret
jne
add
ror
pop
enter
mov
xor
pop
sbb
call
loope
mov
dec
repz
aaa
jns
cmc
ret
cmps
loope
or
adc
movs
scas
mov
aaa
int3
outs
scas
dec
call
pop
sub
mov
loope
jp
nop
push
loope
xor
in
sub
push
mov
ja
sahf
pushf
ins
xlat
mov
imul
mov
jbe
push
push
mov
pop
out
test
enter
mov
mov
cmc
pop
xchg
dec
arpl
bound
ss
(bad)
fcom
lods
push
mov
test
mov
mov
xchg
test
jnp
or
out
pop
pop
xrelease
movs
or
mov
cmp
xor
js
addr16
shr
sub
stos
ins
int3
cmp
and
push
clc
je
ja
cwde
jns
mov
dec
into
setns
or
sti
cli
out
xor
les
int
lea
cmp
loope
mov
or
adc
retf
add
clc
pusha
int
xchg
aas
popfw
out
mov
lods
icebp
xlat
pop
and
sbb
pop
inc
mov
dec
cmp
dec
or
mov
sbb
add
enter
jle
es
ds
iret
jecxz
push
popf
jl
jl
mov
mov
(bad)
xchg
inc
aaa
sbb
outs
sbb
ror
iret
test
lods
outs
inc
aad
xchg
aad
stos
lock
mov
addr16
pop
clc
ror
imul
adc
add
into
fstp
sbb
(bad)
std
push
enter
adc
cmp
sbb
aaa
fldcw
dec
or
xor
lods
xor
ficom
xchg
mov
adc
rol
into
addr16
jmp
xor
xchg
pop
hlt
push
jecxz
addr16
mov
adc
or
jbe
xor
imul
mov
inc
mov
jle
pop
cld
jnp
pop
xor
mov
or
mov
mov
(bad)
adc
test
add
leavew
mov
inc
pusha
ror
xor
(bad)
in
push
sbb
mov
inc
outs
mov
dec
lahf
mov
mov
aas
xor
pop
loopne
clc
pmullw
ret
stos
and
mov
cld
call
cmc
and
cmps
call
push
sti
push
sbb
sti
or
lea
movs
js
(bad)
sbb
jb
popa
out
repz
cwde
inc
aam
xchg
out
movs
dec
lahf
fsub
or
mov
shr
sbb
loopne
sahf
popa
sub
aam
mov
int3
das
das
lahf
popa
sar
push
aam
ficomp
sti
aad
rcr
jne
and
out
ja
push
call
pushf
fdivr
not
mov
aad
inc
shl
shl
stos
jl
xor
outs
shl
out
mov
in
lds
mov
push
xchg
test
(bad)
call
lds
xchg
sbb
outs
mov
adc
xor
retf
mov
xor
add
dec
mov
mov
int
add
mov
jp
inc
rol
xor
das
push
retf
xchg
(bad)
jmp
dec
cmp
mov
aam
call
xor
fs
push
cmp
mov
mov
sti
mov
inc
pop
ficomp
popa
dec
jbe
outs
mov
jmp
mov
rcr
aaa
scas
pop
ror
fs
pop
sbb
or
movs
or
ret
inc
jmp
and
add
movs
inc
in
data16
punpckhdq
jmp
daa
jbe
mov
mov
lock
sti
retf
call
adc
and
stos
dec
adc
ret
push
push
into
jmp
cmp
xchg
shr
cli
imul
test
adc
pusha
jmp
fwait
dec
mov
hlt
pusha
adc
mov
mov
add
scas
js
dec
push
and
sub
test
jo
es
sub
pop
(bad)
and
and
or
and
sbb
and
pop
sbb
and
sbb
pop
clc
(bad)
inc
ja
data16
xchg
sub
inc
sub
sbb
xor
cmps
add
ss
cmp
mov
xchg
or
mov
lock
jp
test
push
popa
jg
sti
inc
xchg
inc
jle
jae
pop
push
xor
dec
push
mov
div
icebp
in
mov
loopne
pusha
retf
jmp
data16
xchg
xchg
jo
rep
mov
(bad)
cmp
gs
dec
pop
cmp
ret
mov
ins
pop
xchg
inc
add
push
mov
ss
aam
dec
fcom
ficomp
add
pop
and
out
pop
inc
retf
popa
cwde
add
movs
sub
rol
sub
push
xchg
test
mov
xor
pushf
aad
arpl
mov
scas
lods
fild
pusha
sbb
or
dec
loop
std
(bad)
aas
lea
leave
out
daa
imul
aaa
dec
aaa
and
(bad)
fidiv
dec
fst
xor
mov
out
mov
xchg
repnz
adc
retf
in
(bad)
push
mov
mov
xor
gs
xor
mov
dec
push
retf
push
ret
shr
leave
or
les
repz
fs
inc
leave
ret
dec
fsub
scas
push
daa
call
scas
int
and
shl
mov
sbb
sub
sbb
(bad)
push
out
dec
(bad)
call
sbb
xchg
lahf
out
fmul
mov
ds
in
jmp
inc
adc
sub
jmp
inc
retf
xor
sbb
js
mov
fnclex
sub
shl
mov
je
outs
inc
data16
jle
jmp
fild
ds
sahf
push
or
adc
ret
cwde
fwait
push
mov
xor
cld
imul
jmp
stc
or
test
push
outs
xchg
mov
xchg
inc
xchg
mov
fldenv
cwde
sbb
push
jae
xor
dec
pop
jmp
pusha
sbb
cmp
in
dec
adc
cli
hlt
sahf
or
fs
mov
aaa
mov
and
sub
test
mov
inc
dec
sbb
pop
mov
mov
sbb
lds
adc
(bad)
lahf
sbb
adc
xor
cdq
jno
ret
das
sahf
nop
mov
fdiv
mov
das
cmp
sahf
hlt
jp
mov
xchg
rcl
pop
mov
pop
aas
sbb
cmc
fldl2t
dec
mov
and
in
xor
jns
and
push
(bad)
adc
repz
add
pop
push
xchg
and
retf
xor
pop
pushf
call
add
pop
dec
int3
push
popa
or
inc
jne
test
daa
xor
jno
repnz
cmc
retf
mov
aad
push
xchg
xor
rcr
std
je
daa
lods
push
call
jmp
mov
dec
std
outs
arpl
inc
jnp
pop
jg
mov
aad
push
adc
xlat
sub
lahf
fdivr
cmps
sbb
adc
dec
and
aad
pop
cmc
daa
clc
cmc
cs
inc
mov
out
stc
lea
sub
fadd
cmp
stos
pop
jmp
int
sub
retf
pop
jbe
pop
xor
loop
xchg
mov
xchg
dec
mov
jle
test
xchg
cdq
mov
(bad)
lds
movs
xchg
icebp
retf
and
xchg
in
shr
into
shr
fnstsw
cmps
(bad)
pop
les
pop
in
sar
sahf
pop
dec
cmp
(bad)
call
mov
add
int3
ret
xor
sbb
les
pop
imul
xchg
mov
mov
mov
inc
push
push
loope
dec
add
jb
js
movs
movs
pop
adc
mov
ret
mov
movs
outs
mov
xor
out
shl
rcr
aas
ret
mov
sahf
inc
pushf
add
clc
sar
jecxz
out
cmp
cmp
add
test
inc
out
dec
push
jmp
test
dec
dec
in
movs
pop
(bad)
movs
data16
in
mov
xchg
dec
fs
sar
fwait
push
inc
ret
and
stos
adc
ror
or
add
in
pop
(bad)
shl
fcomp
pop
stc
out
(bad)
push
cmp
fadd
mov
push
daa
ins
sbb
stos
sar
xlat
mov
dec
mov
adc
shr
out
push
test
pop
add
dec
shl
xor
mov
inc
int
mov
add
(bad)
push
into
fwait
push
cdq
inc
or
test
adc
pop
and
idiv
repz
push
movs
imul
movs
jmp
movs
push
push
fwait
mov
sub
xchg
iret
aam
ds
xchg
sbb
es
shl
and
sbb
ret
shl
xor
mov
in
and
xchg
or
psadbw
add
sub
adc
mov
mov
push
xchg
and
fwait
sub
lock
arpl
sbb
ss
icebp
add
cmp
lahf
mov
inc
shl
xchg
shl
mov
in
push
icebp
ficomp
mov
xor
inc
aaa
hlt
inc
movs
shl
jmp
dec
inc
mov
sub
xchg
xor
sbb
cmc
mov
shl
ret
ret
arpl
popa
imul
xlat
loope
(bad)
ja
movs
jmp
cmps
or
lods
adc
push
push
out
sub
int3
bound
sub
(bad)
ret
addr16
pop
lods
xchg
cdq
aas
sbb
mov
fsub
add
mov
out
xor
aad
shr
cmp
nop
mov
jmp
pop
push
dec
inc
cs
fidiv
(bad)
repnz
pop
ffreep
mov
add
aaa
add
mov
repz
cmp
cmps
(bad)
out
lds
pop
sub
push
adc
pushf
imul
jns
loope
repz
cmps
cmp
ds
ins
dec
(bad)
scas
js
or
lods
shl
sbb
(bad)
loop
in
aas
jl
in
lods
mov
or
mov
pop
xor
jns
fdivr
or
in
inc
jmp
dec
int3
push
inc
push
mov
rol
arpl
sub
mov
push
xor
jmp
fcmovb
jge
fincstp
adc
pushaw
push
(bad)
push
sbb
dec
cmp
sbb
xor
sub
sbb
or
in
push
(bad)
pop
xor
shr
loop
and
cdq
mov
clc
sub
lods
shl
pop
mov
ins
cdq
clc
pop
cmp
enter
inc
jbe
(bad)
ins
cmp
aas
fsubr
out
push
call
cmc
data16
push
movs
aaa
sti
popf
push
xchg
push
push
adc
mov
in
jo
xor
das
mov
daa
mov
and
inc
mov
cwde
(bad)
repnz
(bad)
out
sub
xor
mov
jb
xchg
fidivr
shr
dec
pop
and
lds
pop
jbe
out
xor
(bad)
in
or
mov
and
(bad)
aam
xor
lods
inc
and
or
mov
les
jle
xlat
pop
or
cmp
jnp
inc
into
movs
adc
cmp
pop
cmc
xchg
int
adc
call
sbb
lds
call
stc
and
pop
adc
and
(bad)
mov
push
(bad)
vfnmadd132ss
repnz
aam
cmp
mov
push
cdq
loop
pop
mov
rcr
sub
jns
pop
sbb
rcr
jl
push
adc
mov
bound
js
jp
sahf
(bad)
les
jg
out
mov
jae
loop
mov
not
sub
enter
push
scas
mov
jge
dec
ror
adc
mov
cli
jg
add
jl
sub
stos
fmul
sub
mov
jecxz
jbe
jp
mov
dec
movs
dec
icebp
data16
jns
pusha
pop
adc
call
clc
sbb
sub
push
mov
jp
mov
or
or
adc
and
and
leave
and
mov
mov
add
popa
movs
mov
test
push
(bad)
loop
mov
xchg
and
sti
cmp
xchg
mov
cld
iret
xchg
leave
jmp
push
addr16
leave
outs
push
sbb
cmp
jnp
mov
aad
stos
xchg
xchg
sbb
mov
sub
jbe
xchg
in
ins
xor
loopne
adc
sub
les
jg
xchg
add
lds
mov
dec
xchg
popf
cdq
xchg
retf
jmp
fidivr
xor
add
lock
dec
cmps
popa
or
xchg
pop
cmp
push
xor
mov
sbb
jge
cmp
mov
or
aas
leave
ss
dec
iret
repz
fwait
push
pop
pop
call
mov
aam
mov
mov
cmp
test
push
cmp
pop
lods
mov
ins
jl
fbstp
mov
xchg
inc
xchg
lock
out
mov
cmp
cmp
in
int3
cmp
sub
mov
add
mov
cli
cmp
xor
adc
inc
jp
xlat
ror
mov
sbb
push
fnstsw
sahf
and
sbb
mov
cmps
out
lods
aas
xchg
add
shr
mov
and
emms
sbb
jmp
(bad)
fs
ret
jmp
es
stos
aas
pcmpgtd
mov
cli
cmp
sbb
leave
shl
or
add
jo
daa
call
jnp
mov
jl
add
cmp
outs
dec
gs
mov
shl
pop
jle
das
lock
jle
js
mov
jnp
popf
xchg
loope
outs
stos
(bad)
fist
pop
add
mov
adc
pop
mov
hlt
xor
or
mov
mov
jg
arpl
(bad)
out
mov
lods
in
in
sbb
sbb
pop
inc
and
jg
das
cmp
sar
add
inc
mov
nop
data16
in
mov
data16
xchg
das
mov
faddp
sub
pminsw
push
in
ins
stos
inc
addr16
(bad)
lock
add
xlat
sbb
inc
sub
stos
cmc
add
popf
out
mov
sbb
icebp
(bad)
xchg
jne
cmp
xchg
jge
push
jnp
or
fsub
shr
iret
adc
lahf
in
xchg
add
inc
es
xor
dec
push
dec
shl
push
nop
lsl
push
add
push
dec
rcl
pushf
and
test
xor
test
jmp
mov
push
add
adc
out
and
inc
(bad)
outs
jge
in
outs
inc
ds
push
shl
bound
add
daa
lods
and
les
sub
(bad)
ins
xchg
dec
add
shr
(bad)
pop
out
fdiv
outs
dec
jmp
dec
inc
pop
adc
push
cmps
fsincos
jns
(bad)
fld
mov
push
cmp
lods
xor
lods
leave
fstp
mov
jp
repnz
jno
sahf
js
je
sub
fild
cmp
std
push
retf
inc
mov
std
dec
push
shl
cli
add
push
imul
out
xchg
es
jp
xor
mov
jno
cld
popa
inc
rol
dec
es
adc
aam
je
xchg
inc
push
jle
imul
ret
sbb
mov
xchg
jl
movs
dec
mov
lods
ss
sbb
sbb
outs
imul
retf
fucom
pushf
or
add
mov
ret
sbb
xchg
rcr
int3
iret
call
repz
push
(bad)
frstor
outs
xchg
xchg
or
movs
outs
jle
cmps
jo
xor
fs
shl
inc
not
inc
clc
adc
pop
or
and
test
daa
mov
inc
mov
test
mov
jne
test
inc
mov
repz
call
push
mov
loopne
xchg
mov
(bad)
outs
adc
test
inc
sub
in
sti
mov
sti
add
mov
cwde
cmp
loopne
cs
mov
ror
pushf
cmc
loop
je
fs
movs
and
mov
rcl
xor
sub
push
(bad)
jg
hlt
hlt
movs
sub
int3
inc
xchg
repnz
mov
fst
push
enter
and
dec
lock
sub
xor
cld
bound
mov
iret
aam
xor
push
leave
mov
push
mov
sbb
cmp
and
aaa
jecxz
mov
scas
clc
stos
xchg
push
in
(bad)
repnz
push
mov
retf
das
cld
sub
jecxz
ja
push
lock
nop
fcom
sbb
shr
push
pop
ret
imul
in
add
dec
mov
sub
jmp
fwait
mov
movs
mov
jnp
hlt
in
jns
cmps
outs
jne
dec
mov
sti
mov
or
cmp
jl
xchg
mov
in
mov
pop
adc
xchg
xchg
xlat
cld
(bad)
mov
cmp
(bad)
daa
jl
(bad)
out
dec
loop
rol
push
bound
xor
push
cdq
movs
mov
jne
lods
mov
in
addr16
or
lock
push
mov
inc
xor
rol
inc
pop
jp
jne
add
out
aad
adc
mov
mov
adc
fstp
push
xchg
sub
push
stc
xor
adc
and
ret
cli
in
adc
sub
aad
and
in
das
inc
cdq
fstp
jg
popf
push
imul
sbb
mov
pop
inc
xchg
or
aaa
jo
(bad)
push
mov
call
add
out
cwde
ss
scas
mov
xor
ins
data16
mov
dec
push
adc
aaa
retf
mov
mov
cs
and
test
pop
dec
out
mov
inc
or
aad
add
fdiv
adc
push
adc
test
dec
(bad)
popa
add
push
sbb
pop
pop
push
stos
and
cdq
retf
cmp
fistp
leave
mov
popf
push
idiv
js
push
add
popa
ror
sti
dec
push
cmp
loopne
enter
push
dec
hlt
jge
scas
dec
int
pop
or
dec
inc
jge
xchg
cli
out
and
(bad)
daa
xchg
(bad)
call
lods
ret
dec
jb
jae
and
xlat
aad
loop
mov
add
in
adc
mov
nop
push
sub
xchg
call
pusha
dec
cld
lea
mov
cmp
rcl
sbb
movs
call
sub
and
aam
cmp
lock
loopne
and
xchg
pushf
mov
call
or
fistp
in
dec
ficom
sbb
aam
mov
cmp
inc
rcr
in
mov
(bad)
inc
pop
pusha
or
fadd
mov
(bad)
mov
idiv
or
shl
call
sub
dec
dec
xchg
fidiv
mov
call
into
jge
stos
out
inc
mov
in
mov
das
jnp
stos
sbb
push
jmp
fwait
jmp
jb
fdiv
scas
mov
sub
pop
pop
lock
mov
dec
adc
push
pushf
pop
(bad)
leave
in
push
out
repz
mov
aam
or
int3
jge
leave
pop
inc
lods
stos
(bad)
add
hlt
rcl
outs
mov
cmp
lods
into
out
cmpps
ins
(bad)
aam
iret
and
xor
cmps
scas
(bad)
movs
shr
mov
sbb
bts
movs
xchg
int3
(bad)
icebp
mov
test
int3
repnz
mov
data16
sub
and
mov
iret
ins
add
pop
or
repz
adc
add
pop
xor
push
xchg
lea
mov
sub
pop
or
or
(bad)
js
add
mov
mov
jae
cmp
inc
lods
ret
sub
cs
out
pop
popf
aas
ins
add
xchg
pop
rcl
(bad)
push
jp
(bad)
sahf
fs
mov
dec
adc
cwde
sbb
xchg
sbb
sbb
pusha
jno
movs
test
jo
xchg
mov
loop
mov
jecxz
daa
mov
movs
rcl
ret
mov
mov
or
push
or
sbb
out
dec
stos
retf
push
mov
in
add
inc
sbb
push
mov
dec
cmc
lods
sbb
jnp
inc
and
inc
and
xlat
xor
mov
and
jmp
mov
scas
mov
xchg
sbb
mov
and
lods
adc
(bad)
retf
pop
in
push
jnp
cdq
mov
inc
imul
call
mov
sahf
xor
ficom
fadd
fld
mov
test
popa
jge
sti
aaa
and
add
sub
fcomp
lds
push
call
stos
and
dec
push
sub
sti
mov
pop
lods
dec
xlat
sbb
mov
(bad)
daa
cld
enter
mov
pop
fcom
xchg
cs
inc
adc
and
js
sub
stos
pop
xor
inc
jo
das
sbb
movs
xchg
mov
icebp
or
adc
jmp
xchg
pop
mov
retf
jbe
not
mov
or
mov
push
cmp
enter
das
loopne
ja
sub
cli
xchg
cmp
pop
pop
inc
rol
jle
das
inc
(bad)
adc
adc
mul
and
out
and
and
fistp
jnp
out
pop
out
ja
jmp
add
jmp
push
sub
mov
mov
retf
jmp
or
push
or
mov
je
mov
push
cmps
icebp
out
mov
shl
sub
mov
xor
inc
xor
iret
gs
popa
loop
loopne
xchg
aad
pop
mov
jmp
mov
inc
push
jle
fwait
mov
pop
outs
int
xlat
xchg
or
and
ins
mov
push
loope
cmp
xchg
ret
push
cmp
outs
jmp
jae
pop
mov
cmp
inc
sub
jae
loope
inc
xchg
mov
adc
xchg
call
loope
mov
into
or
sbb
xor
jle
call
data16
sub
mov
outs
add
mov
add
xchg
xor
repnz
pop
sbb
push
scas
sti
pop
test
test
jmp
fcom
sbb
shr
into
and
ret
inc
call
or
xor
and
sahf
add
shl
sbb
mov
sbb
push
daa
inc
aaa
add
stc
test
dec
push
add
es
outs
(bad)
push
or
and
cmp
inc
(bad)
mul
sbb
push
std
js
clc
dec
push
scas
retf
sbb
test
je
leave
pop
cmp
dec
dec
bound
or
xchg
jg
or
inc
or
adc
jmp
jb
int
add
test
in
mov
jmp
cdq
aad
push
adc
jg
movs
(bad)
add
lods
xlat
imul
cmp
ret
xor
xor
mov
adc
cmp
mov
(bad)
les
das
xor
into
daa
xor
es
rol
sar
fistp
sbb
(bad)
sbb
stos
nop
push
xor
dec
add
nop
cdq
in
test
in
sub
fisub
call
sub
je
das
retf
stos
mov
pop
loopne
repnz
pop
jmp
inc
pop
dec
and
aad
test
into
push
mov
mov
xor
(bad)
sub
push
shl
movs
xor
pop
ret
shl
cdq
in
fcmovne
sub
cmp
and
and
push
popf
cmp
and
out
add
add
shl
loopne
cmp
lock
ror
loop
mov
js
xchg
pop
aaa
in
jb
lock
add
cmp
jl
pop
fld
fild
popf
sbb
(bad)
pop
addr16
repz
mov
fcomi
in
in
loope
mov
sti
stc
stc
or
retf
das
loopne
retf
adc
dec
loope
and
jle
xchg
mov
mov
jmp
fs
inc
mov
aam
add
gs
(bad)
jle
sti
inc
sub
inc
mov
ret
sub
out
test
es
into
(bad)
and
mov
pop
mov
shr
cdq
sub
sbb
fmul
lods
gs
xchg
and
push
dec
lock
popa
mov
in
pop
cmp
test
(bad)
in
loope
popa
jecxz
add
pop
(bad)
lock
ret
inc
shl
push
pusha
lods
mov
or
push
fs
lock
mov
cwde
out
fwait
ret
jecxz
mov
ins
outs
pop
ins
sub
inc
outs
xchg
in
xchg
push
shl
sbb
data16
fnsetpm(287
pop
cld
pusha
jle
xor
adc
xchg
sti
daa
pop
and
ins
iret
cmp
add
repnz
mov
mov
movs
loopne
xor
pop
enter
sub
test
out
call
daa
les
or
sub
add
inc
cmp
xchg
cmp
imul
cli
aaa
mov
adc
dec
pop
and
inc
aaa
sbb
dec
sub
shr
out
dec
push
xor
loop
aam
and
retf
lods
jo
shl
imul
push
push
dec
sub
push
cmp
add
and
shr
add
imul
dec
lock
mov
out
std
sub
icebp
sbb
xchg
cs
mov
cmc
or
or
lods
xor
mov
loopne
sub
push
movs
iret
mov
lahf
add
rol
fsubp
bound
loop
rcl
sbb
and
push
or
ret
sbb
test
mov
or
cmps
or
push
fwait
into
sub
dec
push
fist
jno
loope
cmps
aam
xchg
push
ss
inc
sub
enter
call
mov
(bad)
movs
xor
outs
popf
cmps
mov
fwait
dec
inc
jnp
pop
xchg
iret
mov
(bad)
inc
hlt
daa
sbb
and
rol
sub
aam
lods
xor
sbb
inc
ret
and
(bad)
repnz
adc
mov
xlat
ret
mov
mov
dec
rol
jge
ret
mov
inc
popa
cmc
ds
inc
stc
push
fisubr
adc
mov
test
js
mov
out
outs
cmps
(bad)
call
mov
retf
shl
dec
cld
pop
mov
loope
fiadd
and
jmp
push
in
mov
mov
dec
call
sbb
gs
fild
xor
pop
outs
push
je
leave
cmp
ret
mov
inc
add
jmp
(bad)
cmp
pop
xchg
xchg
int3
xchg
in
sub
out
xchg
mov
sub
jmp
dec
nop
addr16
ja
jnp
or
ins
cmc
xchg
in
inc
cmp
shl
sub
js
adc
jmp
and
jno
push
or
fnop
adc
dec
(bad)
cdq
(bad)
(bad)
pop
jae
dec
into
dec
fistp
adc
jb
daa
pop
ds
adc
mov
loopne
lea
and
jle
dec
fdiv
scas
and
loope
jne
fsub
push
cmp
jg
ins
cs
xchg
xor
imul
jle
jns
jl
(bad)
dec
call
sub
shl
jecxz
pop
stc
sar
arpl
jno
jle
or
test
xchg
in
xchg
xor
xlat
rcl
pop
xchg
inc
scas
pop
add
scas
mov
add
mov
pop
movaps
lods
data16
xlat
fs
dec
leave
pop
push
cmps
fild
iret
outs
mov
ins
daa
(bad)
movs
and
push
sbb
ret
loopne
sub
into
cmp
xor
ins
push
and
mov
and
int
lods
ins
mov
mov
cmp
mov
sub
jbe
popa
cdq
(bad)
stos
(bad)
adc
and
(bad)
mov
pop
add
sbb
dec
adc
popf
cli
repnz
mov
stos
rcr
in
dec
test
inc
movs
pop
out
into
jg
adc
out
push
and
shr
das
shl
cmp
add
adc
fdivr
loope
fs
lds
pop
in
xchg
xchg
sub
and
fwait
cs
mov
lods
xor
dec
call
cmp
mov
pop
push
fdivr
sahf
jg
imul
loope
scas
imul
adc
lds
out
jns
aas
mov
out
or
sbb
int3
jb
(bad)
inc
xchg
cdq
cmovge
xor
adc
or
mov
or
dec
mov
in
pushf
inc
xchg
pop
xor
mov
dec
inc
mov
xlat
jge
pop
jle
lds
push
cmp
call
adc
(bad)
test
sub
fwait
mov
icebp
ficom
adc
sub
xchg
ins
xlat
adc
lods
neg
enter
adc
or
repnz
mov
xchg
daa
jmp
rcl
push
cld
pushf
push
add
enter
cmc
popf
or
fucom
(bad)
pop
or
push
dec
push
mov
jle
xlat
jbe
inc
xor
lock
add
or
in
inc
in
test
mov
jnp
pop
fwait
stos
test
aam
pop
outs
cmps
mov
push
lea
jg
push
dec
(bad)
fmul
pop
inc
dec
adc
(bad)
in
aaa
cwde
jo
sti
int3
in
nop
xchg
xor
or
dec
jg
or
rol
jb
mov
jge
xor
stc
sub
mov
sub
hlt
mov
scas
push
xlat
popf
ds
add
loopne
out
ret
out
jmp
sbb
xchg
int3
mov
jae
sbb
jge
out
dec
push
jbe
sub
(bad)
fiadd
cmp
stos
cmp
jae
in
xchg
adc
dec
fisttp
std
lods
jnp
scas
movs
mov
popf
inc
data16
pop
imul
cmc
into
loope
or
repz
mov
add
mov
scas
ja
jmp
inc
fsub
sbb
cmp
mov
or
call
pop
xchg
push
push
sahf
rcr
dec
sub
dec
scas
add
sbb
icebp
imul
bound
cmc
loop
das
lods
(bad)
xor
adc
(bad)
cld
sub
cmp
in
dec
dec
data16
pop
pop
jo
mov
inc
not
shr
jno
out
xor
dec
sbb
pop
pop
pop
push
pop
xchg
jno
add
mov
xchg
inc
sub
ret
pop
in
cmp
cs
pop
out
mov
call
(bad)
outs
daa
add
jo
pop
arpl
repz
push
fs
pop
retf
int3
ret
in
sbb
cmp
imul
jmp
mov
arpl
adc
inc
xor
rcr
int3
and
inc
mov
pop
shr
xor
loope
dec
nop
xor
lea
mov
add
jp
mov
ins
and
rep
popa
mov
push
mov
or
sub
gs
hlt
jne
xor
sbb
(bad)
jl
xchg
pop
add
inc
and
iret
push
and
mov
in
xchg
out
pushf
xchg
or
js
(bad)
sbb
inc
inc
movs
inc
mov
push
or
leave
cmp
(bad)
test
mov
pushf
pop
adc
add
test
lahf
or
iret
jge
fsubr
pop
jmp
lods
pop
push
or
hlt
jg
popf
push
fwait
movs
test
and
fist
sbb
sbb
mov
in
(bad)
jmp
mov
ss
(bad)
adc
sbb
repnz
pop
xchg
or
or
lods
mov
push
jmp
jns
mov
inc
push
pop
or
dec
lahf
popf
aas
add
inc
cld
imul
add
loop
fld
loopne
xchg
loopne
jbe
jne
je
push
imul
les
popa
sub
pusha
xor
or
mov
mov
xor
lods
loopne
ss
mov
push
mov
mov
loop
int
lods
hlt
pusha
mov
sbb
or
xor
or
mov
popa
sub
mov
mov
mov
in
das
(bad)
(bad)
xor
mov
icebp
ret
rcl
imul
jl
fidiv
repz
movs
adc
cmp
jae
iret
jne
(bad)
mov
jb
adc
mov
mov
xchg
xchg
push
dec
xchg
push
sub
xchg
(bad)
sub
mov
or
test
lods
mov
or
pusha
ret
and
fistp
movs
enter
push
mov
add
mov
or
imul
sub
out
shl
dec
ins
pushf
push
and
std
mov
loopne
xchg
pop
sub
cmp
pop
or
xor
xlat
leave
sar
push
rcl
aad
add
and
mov
jno
pop
adc
mov
mov
push
xchg
mov
mov
call
dec
jg
push
cli
ja
pop
dec
jnp
test
mov
addr16
mov
mul
enter
aas
mov
xor
cli
jle
jo
aad
inc
mov
mov
inc
leave
je
ins
nop
and
and
out
jg
jb
repz
push
iret
cmp
mov
mov
and
cmps
mov
adc
(bad)
shr
or
sub
leave
cmp
jle
je
or
jb
not
cmp
jmp
inc
push
dec
dec
mov
movs
xor
(bad)
sub
dec
fs
rcr
out
cmps
cdq
mov
push
fisttp
aad
mov
xor
mov
mov
sub
ret
cmp
dec
mov
or
daa
cld
mov
pushw
add
cld
jbe
xlat
jge
lahf
cwde
aaa
call
scas
push
mov
pop
(bad)
icebp
dec
cmp
enter
sbb
test
std
sbb
popf
pusha
mov
cmp
cli
mov
imul
sar
dec
mov
div
sub
aad
(bad)
or
pop
out
loop
adc
and
xor
loope
mov
int
xlat
xor
stos
add
pop
jecxz
pushf
cld
retf
aas
dec
mov
cmc
iret
retf
and
dec
(bad)
push
scas
cmp
adc
inc
dec
push
mov
lds
pop
xor
lods
ds
xchg
jae
xor
and
js
mov
sub
cld
(bad)
adc
mov
adc
fistp
jae
sub
mov
std
jl
cmp
inc
cmp
pop
sbb
gs
or
cmp
mov
shl
test
add
bnd
inc
mov
jne
aad
jle
out
repz
test
xorps
shr
jmp
sti
sbb
or
test
dec
inc
mov
mov
aas
pop
cmp
push
syscall
pop
cmp
pop
or
jle
outs
por
mov
jg
and
sbb
add
pop
push
cmp
pushf
adc
int
inc
dec
push
sbb
dec
mov
add
pop
ret
lahf
scas
retf
dec
xor
aad
mov
push
mov
nop
jp
xor
push
jbe
mov
or
test
dec
mov
sbb
jmp
sar
mov
or
fwait
and
imul
mov
lds
inc
test
lds
out
arpl
test
outs
dec
aaa
adc
repnz
xor
scas
(bad)
jg
cmc
push
sbb
pop
clc
xlat
stc
retf
add
dec
mov
xchg
mov
dec
out
addr16
retfw
or
push
(bad)
bound
mov
pop
xchg
(bad)
jmp
jmp
popf
pusha
add
test
pop
fbstp
test
xchg
movs
ja
je
push
lods
mov
push
pushf
movs
rcl
sti
mov
mov
(bad)
xchg
out
mov
and
cmp
cmp
push
xor
or
test
or
lods
into
adc
test
aad
push
call
mov
sbb
inc
ins
out
icebp
out
push
xor
sub
inc
and
push
adc
jg
cmp
pop
and
mov
cmp
jae
add
mov
out
fcomp
push
mov
adc
xor
push
mov
and
cmps
int3
mov
mov
outs
and
mov
pop
adc
aaa
adc
(bad)
jnp
cli
push
iret
sub
retf
stos
dec
pop
mov
cmc
push
inc
or
dec
xor
iret
add
retf
mov
cmc
or
push
test
shr
test
pop
push
add
je
bound
test
cmps
(bad)
fisub
adc
push
cmp
clc
ret
or
add
push
xchg
imul
gs
loope
or
push
jp
jb
fidivr
(bad)
lods
inc
test
and
add
xchg
cmc
and
mov
mov
shl
aaa
xchg
fs
loope
(bad)
popa
enter
push
fwait
push
jg
sbb
ds
mov
push
xor
mov
and
mov
pusha
inc
push
and
cmp
lods
loopne
popa
out
xor
mov
mov
sub
mov
loopne
pushf
(bad)
or
and
mov
or
icebp
addr16
inc
mov
inc
retf
adc
add
push
pop
add
aam
test
mov
stc
scas
inc
dec
inc
fcom
sub
ja
pop
neg
mov
mov
mov
test
mov
mov
jecxz
cmps
pop
je
inc
(bad)
in
pop
out
dec
mov
shl
ss
into
ret
jns
mov
jmp
in
inc
push
sti
push
mov
dec
mov
(bad)
jmp
pop
push
imul
or
jg
mov
shl
and
push
(bad)
xor
in
into
xor
inc
dec
data16
data16
mov
int
test
in
ds
and
fsubr
inc
jmp
or
sub
rcr
dec
push
sub
adc
or
inc
pop
repz
xchg
imul
sub
pop
sbb
popa
and
xor
pop
adc
scas
loopne
hlt
inc
jp
mov
sbb
shl
mov
add
xor
or
inc
daa
loop
xchg
pop
jecxz
mov
push
gs
outs
push
sub
push
jecxz
jg
xchg
call
pop
fmul
pop
pop
sub
or
(bad)
mov
call
and
popa
nop
aad
add
fucomip
inc
cmp
jle
ffreep
les
int3
dec
nop
cdq
add
inc
jecxz
adc
ins
xor
sbb
add
cs
in
popa
push
jns
stc
out
sub
fidiv
(bad)
cwde
cmp
int
jns
shl
push
leave
mov
or
lahf
dec
jns
inc
out
mov
test
mov
sub
jmp
xchg
scas
dec
xchg
in
push
inc
(bad)
clc
jecxz
outs
test
sbb
sub
ds
cli
or
mov
sub
sub
loope
in
mov
pusha
mov
pushf
loopne
inc
cli
mov
arpl
mov
inc
xor
lods
outs
das
ret
inc
inc
dec
mov
test
mov
in
cdq
(bad)
jmp
aam
and
outs
imul
jmp
sti
out
jns
jge
cwde
mov
sbb
arpl
out
adc
dec
out
in
push
inc
pop
push
(bad)
mov
mov
es
jl
push
lahf
(bad)
and
iret
adc
adc
jmp
xchg
jecxz
arpl
leave
and
mov
cmp
neg
mov
mov
pop
mov
mov
or
sub
jno
pop
dec
addr16
pop
and
push
adc
inc
in
lods
jp
xor
xor
adc
in
dec
stc
mov
bound
stos
or
jns
pushf
mov
stc
adc
(bad)
shr
(bad)
push
dec
dec
mov
pop
nop
push
and
mov
test
pop
fbld
mov
xchg
call
xchg
dec
or
add
sti
popf
jb
jl
mov
sbb
inc
rcl
test
push
loop
in
js
or
jl
jo
out
mov
idiv
popw
sub
enter
ficom
leave
dec
and
ins
add
xchg
push
jae
mov
popaw
xchg
xor
xlat
repz
into
inc
mov
dec
pop
shl
hlt
and
scas
xchg
in
outs
(bad)
out
ret
mov
fistp
fcomi
into
movs
out
neg
mov
(bad)
test
call
imul
dec
cmp
pop
sbb
dec
sbb
sahf
out
mov
sahf
inc
push
cli
loop
sbb
cmp
pop
iret
test
lea
lds
lds
dec
mov
shl
adc
xor
jmp
sbb
lds
mov
push
lds
cmp
ds
xor
(bad)
das
hlt
cld
xchg
(bad)
popf
sar
lock
sbb
cmps
popa
push
push
in
jno
pop
fld
push
mov
mov
mov
or
stc
mov
fs
int3
std
hlt
mov
stos
mov
mov
enter
xor
rcr
push
inc
out
aas
mov
dec
fstp
loopne
sti
pop
inc
call
retf
(bad)
pop
jne
vmwrite
inc
sub
idiv
add
test
mov
aam
jmp
outs
mov
xchg
fisubr
inc
pop
inc
outs
add
(bad)
out
sub
sub
(bad)
mov
mov
add
in
sbb
inc
pop
sar
jp
leave
mov
ja
and
push
outs
push
inc
mov
ja
sub
out
shr
call
test
test
xor
ins
movs
lea
scas
xor
dec
iret
pop
stc
jmp
and
cmp
sub
je
fwait
int
xchg
retf
mov
xor
add
sub
aaa
push
jl
jmp
adc
adc
add
pop
bound
or
ss
pop
inc
arpl
and
and
repnz
jo
xchg
loop
push
cmp
adc
jg
ffreep
push
test
sub
daa
into
jecxz
sub
leave
(bad)
scas
stos
bound
mov
test
cs
inc
rcl
adc
sub
call
and
test
push
mov
fsubr
addr16
movs
lods
xor
jmp
dec
sub
mov
fist
int
sbb
xchg
out
loopne
xor
int3
cld
jecxz
js
test
push
cmps
(bad)
push
and
imul
dec
cmp
mov
mov
sbb
sub
push
pop
jmp
rcl
test
imul
dec
mov
sbb
rcr
inc
cwde
or
mov
bnd
push
cmps
(bad)
aam
shl
xchg
mov
xlat
sub
adc
sbb
out
inc
mov
push
push
mov
xor
mov
lods
mov
test
xor
lods
lods
cmp
cs
std
shl
mov
gs
stos
cs
mov
out
jb
pop
hlt
in
test
pop
jb
test
pop
imul
stos
call
xor
ret
cmps
cmp
ret
repnz
int
jp
popf
or
std
shl
xchg
outs
imul
cmps
rcl
stos
imul
fwait
stc
loopne
inc
lds
and
adc
nop
js
mov
mul
in
cli
into
add
in
mov
test
and
fmul
pop
lahf
out
jle
rcl
add
cld
repnz
jmp
into
pushf
popa
mov
push
push
shr
mov
jmp
add
in
jae
inc
loopne
or
or
pop
stos
add
dec
imul
lods
ror
dec
ret
jle
jmp
ins
mov
dec
sti
sub
repz
dec
dec
push
xchg
stc
inc
adc
enter
dec
jbe
inc
and
cmp
enter
data16
mov
mov
out
clc
aas
xor
scas
popf
stc
mov
jno
shl
jle
sbb
and
pusha
in
pop
data16
mov
enter
dec
xchg
bound
jmp
je
hlt
inc
rcl
lahf
cli
es
mov
outs
adc
or
aam
(bad)
pop
sbb
and
ret
iret
xchg
fwait
aaa
(bad)
and
(bad)
pop
ret
daa
mov
mov
pop
jp
idiv
xchg
mov
add
aas
aas
mov
lds
pop
dec
popa
imul
repz
cld
cmp
lods
pop
push
js
fdivr
push
mov
loope
pop
cmc
inc
push
mov
dec
dec
jmp
aas
or
mov
push
movs
mov
mov
ficomp
loopne
pop
cld
jl
hlt
mov
aas
nop
mov
or
nop
cmp
jbe
mov
sahf
pop
out
or
cmp
fisubr
add
sbb
popf
outs
push
mov
pop
ds
jle
pop
adc
or
jl
push
cmps
out
(bad)
bound
push
cmp
push
cld
sbb
leave
adc
test
mov
pop
sbb
fs
add
jo
aas
and
jne
add
xchg
mov
add
xchg
hlt
push
ror
jp
mov
sbb
push
int3
scas
mov
fdivr
mov
outs
xor
in
pop
cs
cmp
std
jl
sahf
aam
aas
cmp
fist
push
scas
call
stos
jecxz
mov
fst
jbe
sti
call
ins
aam
inc
add
stos
outs
pop
jbe
xor
clc
push
loop
repz
imul
stos
mov
push
ret
cdq
std
js
pop
(bad)
push
(bad)
pop
push
addr16
sti
aad
jecxz
(bad)
std
or
pushf
dec
leave
and
mov
aas
das
add
aam
or
outs
(bad)
retf
lods
(bad)
jb
mov
mov
lods
out
sub
stos
inc
or
es
or
xor
inc
scas
xchg
dec
push
push
inc
dec
mov
ins
das
jmp
pushf
lock
movs
and
or
sub
je
pusha
mov
outs
dec
adc
jecxz
outs
inc
inc
inc
cmp
xchg
shl
fiadd
bound
jp
out
stos
cmp
stos
mov
pushf
pop
nop
in
je
cmp
mov
data16
gs
jb
shr
mov
xor
fstp
dec
jge
pop
in
cdq
mov
sbb
or
sub
xchg
loopne
inc
sub
lock
(bad)
pushf
movs
mov
dec
shr
pop
jle
leave
or
mov
cmp
in
sub
loopne
push
out
adc
mov
fs
xor
push
push
addr16
mov
fnstsw
or
out
cmp
fisttp
xchg
mov
jno
in
aas
js
cmp
jp
push
add
add
or
mov
push
mov
rcl
push
loop
xlat
dec
xchg
(bad)
sahf
out
mov
mov
ins
inc
rcl
inc
add
not
jl
cmps
enter
outs
inc
xor
or
scas
ss
jns
rol
loop
ficomp
ins
push
xchg
loop
out
mov
icebp
push
mov
nop
shl
lods
fadd
sub
sahf
push
mov
mov
call
jg
jl
test
mov
and
test
(bad)
sub
lock
xchg
gs
test
inc
out
xchg
push
fadd
out
xor
dec
ret
adc
test
or
ins
mov
rcl
inc
vmwrite
ret
shl
out
scas
sahf
in
mov
imul
retf
fsub
lahf
pop
pushf
retf
gs
cmps
dec
aad
dec
mov
ja
mov
add
adc
xchg
sbb
repnz
mov
fwait
dec
neg
rol
pusha
jne
sbb
shl
cmp
sar
rcr
add
jns
movs
idiv
mov
mov
sub
inc
mov
test
dec
inc
sbb
adc
in
and
mov
xchg
stc
cdq
hlt
xchg
stc
and
mov
call
scas
sbb
and
loop
jns
or
xchg
(bad)
ins
test
sbb
cmc
sbb
js
ins
inc
jmp
sub
cmp
loope
pop
ja
pop
mov
xor
jle
xchg
sahf
push
jns
test
lock
sub
add
repz
sahf
sbb
hlt
dec
test
jle
std
sbb
fist
or
int3
ficomp
inc
add
and
adc
jno
lock
push
jae
adc
hlt
pop
mov
int
sbb
mov
xchg
icebp
xchg
and
fnstsw
inc
loopne
push
or
test
push
dec
add
sbb
cmps
mov
jle
dec
(bad)
mov
inc
nop
lods
sub
test
inc
aad
cld
jae
mov
mov
mov
adc
pop
inc
ins
jecxz
xor
mov
xor
shl
repz
push
xchg
add
or
adc
push
psubsw
or
sub
push
pop
add
les
rcr
mov
adc
sub
sub
dec
int3
fst
popaw
movs
mov
pop
xor
adc
inc
mov
(bad)
mov
clc
sbb
mov
out
hlt
adc
icebp
jmp
test
add
add
and
mov
in
xchg
ror
clc
mov
lds
sar
hlt
fisttp
mov
ins
(bad)
popa
xchg
xchg
push
xchg
push
jae
in
lods
nop
jnp
dec
xor
push
add
xchg
cwde
or
lods
sub
pop
jle
mov
cdq
adc
std
mov
sbb
lea
ret
scas
ret
sbb
fiadd
adc
inc
sbb
jne
int3
fst
pop
in
or
xor
jmp
aas
addr16
imul
add
mov
pop
mov
and
repz
pop
test
cs
mov
arpl
fimul
push
(bad)
(bad)
mov
cmp
int
jecxz
jecxz
stos
into
ror
icebp
jl
sbb
(bad)
or
adc
sub
and
add
mov
addr16
add
and
push
pop
dec
sbb
add
bound
hlt
jne
inc
or
(bad)
mov
inc
mov
cmc
add
or
ror
inc
aad
ror
jp
adc
add
jmp
push
stc
xor
xchg
dec
shl
mov
push
fmul
cs
outs
sbb
cmps
jmp
pop
mov
stc
inc
xor
adc
enter
jne
stc
xor
hlt
sar
in
ja
jnp
jae
pop
cmps
xor
pusha
mov
add
cmp
neg
cmp
mul
mov
fimul
pop
movs
hlt
fs
inc
adc
add
or
jno
stos
mov
sti
inc
inc
xchg
dec
mov
daa
jle
jnp
add
dec
jl
push
jmp
pop
aas
pushf
ror
sub
outs
xlat
(bad)
push
iret
movs
adc
push
in
inc
pop
test
inc
test
inc
aam
js
or
jg
daa
adc
sahf
or
inc
sbb
sub
pushf
inc
push
call
push
in
aas
jo
mov
and
mov
pop
dec
adc
sub
rol
mov
xor
mov
imul
mov
dec
adc
in
jo
hlt
xor
and
xchg
dec
and
and
cmp
fnstsw
or
fwait
lods
int3
cmp
pop
add
neg
mov
mov
ret
mov
dec
mov
mov
cmc
mov
mov
jmp
adc
sbb
and
enter
fwait
sub
in
cli
add
mov
pusha
pop
sbb
or
xor
sub
scas
inc
xchg
adc
mov
push
inc
or
stos
push
dec
std
sub
adc
popa
aaa
ss
aam
jne
(bad)
xor
jmp
les
lods
shr
call
cwde
pop
push
mov
sti
cdq
adc
dec
sbb
stos
aas
pop
or
fs
dec
sbb
pop
jnp
mov
mov
test
pop
pop
jmp
je
cmc
stos
pop
dec
dec
cmps
jmp
iret
movs
mov
sub
push
push
jns
call
in
and
xchg
push
call
mov
push
outs
movs
rcr
in
repnz
jg
mov
(bad)
jle
jnp
aaa
js
imul
pop
loop
jne
mov
lods
aam
pop
outs
cmc
(bad)
pop
and
jmp
loope
pop
xor
scas
aad
imul
ret
jecxz
mov
push
daa
cli
jbe
xor
nop
mov
xor
inc
out
inc
sub
sbb
fimul
or
clc
imul
loopne
inc
xchg
fisttp
dec
push
dec
inc
scas
mov
rcr
adc
dec
ss
adc
xor
and
cmp
dec
adc
and
pop
sub
jmp
in
lds
mov
jbe
jo
push
out
pop
in
dec
inc
cmp
xchg
inc
lods
cmp
cmps
inc
pop
lahf
test
aaa
bound
stos
push
call
rol
retf
or
xor
xchg
inc
fwait
xchg
mov
xchg
hlt
loop
dec
add
xchg
cmp
add
jo
jge
gs
cmp
mov
xor
out
fcom
jns
out
jecxz
ins
adc
jne
aam
(bad)
jbe
pop
mov
push
jecxz
out
div
cmp
test
pop
cwde
das
jg
cmp
mov
pop
pop
rol
push
fs
jnp
xchg
jae
loop
into
push
mov
nop
imul
or
adc
xor
retf
xor
mov
fdiv
pusha
sti
mov
jns
jae
adc
pop
test
pop
xor
mov
ds
hlt
or
in
fcomp
je
xchg
cwde
std
and
mov
cdq
push
push
stc
in
pop
les
xchg
cwde
xor
pop
aam
push
jns
mov
out
jo
add
xor
aas
aad
pop
rcr
or
out
cmps
outs
clc
imul
shl
xor
fdivr
sbb
xor
hlt
cwde
lahf
sbb
loopne
aaa
sbb
dec
cmp
jecxz
call
gs
xor
jne
in
f2xm1
lods
jbe
aad
aam
loop
mov
xchg
mov
sub
stos
sub
sub
jmp
jnp
addr16
cdq
jbe
mov
mov
push
mov
fmul
scas
adc
fwait
cmp
xor
int
imul
mov
cmp
cwde
push
stc
in
hlt
dec
cmp
ds
std
test
std
sbb
or
sbb
xchg
xchg
daa
fwait
out
aad
mov
mov
jno
or
sbb
mov
jmp
adc
sbb
imul
adc
or
cs
xchg
adc
(bad)
scas
ror
cmp
mov
push
push
stc
dec
movs
push
mov
sbb
mov
sbb
leave
xchg
adc
in
mov
and
retf
pop
cmp
test
mov
mov
xor
retf
adc
int
jnp
sbb
cmp
xchg
retf
(bad)
cs
pop
inc
pushf
out
stc
call
lea
pop
scas
jg
dec
ficomp
lods
inc
mov
and
mov
mov
xlat
in
dec
push
out
mov
dec
out
call
fisub
or
rcl
xor
in
inc
xor
push
mov
aas
(bad)
mov
stos
jb
aam
div
retf
push
test
xchg
pop
test
sub
xchg
pop
outs
shl
mov
xchg
xlat
push
stos
in
jmp
(bad)
jmp
test
add
pop
xchg
xor
hlt
mov
enter
inc
jne
mov
push
push
dec
cmc
jg
xchg
and
call
mov
xchg
fld
cmps
mov
mov
cs
or
out
invd
mov
cmp
test
fdiv
aaa
push
inc
lods
mov
sti
mov
dec
add
dec
rol
jmp
xor
sbb
fsubp
dec
and
(bad)
aas
inc
test
or
sbb
adc
jo
shr
mov
ins
cdq
fldcw
fcos
sub
retf
sbb
clc
jmp
mov
adc
cmp
out
ds
or
addr16
xchg
pop
mov
sub
retf
add
or
and
lea
ret
pop
sbb
lea
inc
rol
jmp
fisubr
xor
mov
lock
loop
mov
dec
pusha
ret
push
cmp
mov
xor
loop
imul
loopne
aaa
ror
ss
xchg
inc
rcl
retf
(bad)
or
arpl
(bad)
std
xor
lds
mov
stc
aaa
fadd
inc
pop
xchg
mov
xor
movs
in
xchg
jb
repnz
adc
dec
mov
adc
and
xor
je
xchg
mov
ret
dec
jns
cdq
add
add
(bad)
jns
push
inc
shr
fcmovne
dec
out
repnz
cwde
sahf
lods
ret
mov
test
dec
jecxz
in
enter
dec
arpl
int3
inc
pop
sti
pop
cmp
iret
push
ret
test
pop
sbb
jnp
addr16
ins
add
dec
push
push
inc
test
je
cmp
or
vpsrlq
and
mov
lods
and
(bad)
in
loopne
jl
xchg
sub
sub
adc
cmps
dec
bound
movs
cmp
loope
xor
fist
call
jmp
sub
mov
retf
aaa
jnp
cmps
addr16
push
sar
lock
sbb
shl
add
pop
enter
ss
dec
adc
dec
cs
sbb
pop
call
ins
push
mov
aam
or
repnz
fcmovbe
xchg
push
pop
jle
inc
pop
push
nop
and
in
mov
xor
ror
mov
ficom
sub
(bad)
jp
ret
and
repz
out
loopne
cmps
jl
cmp
xchg
and
(bad)
dec
stc
push
push
out
(bad)
in
xor
mov
dec
sbb
jge
fisttp
xchg
iret
jg
cmp
iret
xor
dec
lds
call
popf
push
push
scas
xchg
popa
pop
jbe
retf
cli
das
jmp
sub
imul
jbe
and
shr
cmp
aam
jae
es
and
jo
mov
mov
cmp
mov
out
cmp
xlat
std
mov
inc
mov
lods
ja
cdq
scas
mov
push
pop
fdivp
sbb
mov
cmp
hlt
(bad)
(bad)
icebp
(bad)
imul
fisttp
sbb
adc
jae
test
sub
mov
cld
in
and
push
pop
jns
or
xor
pop
dec
fs
(bad)
pop
rcl
rcl
adc
adc
mov
cmp
(bad)
in
sbb
cmp
test
xchg
fidiv
pop
and
loopne
icebp
int3
mov
ins
add
mov
je
rcl
and
mov
xor
js
push
xchg
cmps
iret
dec
daa
cmp
cwde
push
push
aaa
(bad)
into
mov
adc
fcmovbe
in
data16
ins
ja
xor
push
push
adc
aam
mov
mov
and
cld
and
mov
push
fisub
adc
dec
test
dec
rol
ficomp
mov
clc
call
ret
push
and
ret
ins
mov
enter
xor
std
cmps
addr16
shl
adc
inc
jg
bound
jo
jge
out
mov
xor
or
push
xchg
and
and
ror
jle
cmp
and
pop
call
js
mov
enter
fwait
ror
call
push
ins
mov
pop
mov
in
out
das
sar
adc
mov
sub
mov
sub
pop
push
loop
pop
not
test
ret
cmps
je
in
jns
loop
and
push
call
aaa
push
add
push
aaa
jecxz
bound
je
dec
or
data16
pop
add
mov
pop
jecxz
xchg
inc
pushf
rcr
fst
push
push
add
xchg
jbe
mov
cli
repnz
test
fwait
dec
cs
pushf
sbb
xor
push
sahf
inc
xor
sbb
les
imul
push
lahf
ins
jmp
out
mov
ret
add
aad
push
pop
add
test
cld
(bad)
jl
sub
xchg
jmp
jae
fcom
bound
jle
and
std
xor
and
retf
popa
sbb
xchg
pop
sbb
rol
js
mov
dec
ror
jp
add
and
push
data16
out
push
iret
test
and
jbe
loop
adc
sub
test
cmc
mov
pop
sub
jle
leave
dec
jbe
arpl
mov
push
div
xor
data16
shl
jne
into
xor
xor
sub
mov
cmps
fmul
dec
addr16
jle
shl
lahf
dec
std
push
xchg
inc
lock
xchg
jne
sbb
dec
aas
push
outs
xchg
and
cmp
hlt
cld
jno
sar
add
or
ins
sbb
fsubr
in
push
mov
and
ins
jmp
ds
or
js
push
rcr
cmp
mov
pop
sti
icebp
test
pop
(bad)
mov
or
and
aas
dec
sub
xchg
ins
lods
xor
jge
outs
mov
inc
bnd
xor
sub
jns
mov
adc
inc
sub
cmp
sbb
or
push
in
cmp
jle
inc
pop
mov
ss
mov
(bad)
xlat
inc
dec
jno
test
nop
inc
jo
js
jge
cmps
mov
jle
cmc
mov
mov
sbb
mov
push
xor
mov
es
out
mov
dec
pushf
jb
test
mov
sub
das
adc
mov
repz
mov
rcr
(bad)
leave
dec
ret
(bad)
addr16
ja
idiv
js
js
xchg
or
push
int
jg
out
push
test
stc
xchg
cmps
jge
or
push
jl
xchg
ins
jecxz
fdivr
jle
jne
out
fcmovbe
xchg
pop
punpckhbw
(bad)
sbb
mov
out
aas
loope
call
mov
mov
inc
lods
and
pop
lahf
mov
pusha
imul
adc
jl
add
addr16
out
cmp
jecxz
sti
jmp
aad
jmp
sbb
js
ret
and
inc
add
adc
movs
in
dec
stos
inc
mov
push
int3
xchg
jae
call
test
outs
mov
inc
mov
fs
scas
cli
xchg
leave
aam
sbb
mov
jno
push
and
or
jo
cs
mov
xlat
mov
or
int3
clc
test
jp
inc
jae
pop
pop
in
movs
xchg
pushf
mov
das
js
pop
pusha
std
mov
in
and
leave
cmps
inc
aas
pop
mov
pusha
retf
inc
push
test
fcmovnbe
fsubr
scas
or
sbb
fidivr
lea
jns
js
push
cmps
inc
inc
mov
push
jb
int
loope
arpl
cmc
sub
icebp
add
adc
cld
push
sbb
out
leave
jae
xchg
fldenv
jb
push
pop
fidivr
fldcw
adc
xchg
adc
repz
xor
inc
in
pop
push
nop
(bad)
rcl
sbb
inc
cmps
retf
adc
dec
scas
ror
mov
sbb
enter
add
add
add
int3
pop
sub
cli
push
icebp
sub
fdivr
test
mov
jnp
xchg
push
xor
push
pop
push
pop
push
adc
or
sbb
es
std
shl
sub
jne
or
inc
pop
ins
sub
ds
cmps
out
cmp
push
pop
fdivr
in
push
xor
std
jge
xor
dec
xchg
mov
xchg
cld
pop
mov
fbld
std
xchg
ja
inc
xor
fld
call
mov
jmp
int3
(bad)
jo
jg
push
sahf
ret
add
mov
repnz
sahf
cmp
dec
dec
test
mov
icebp
jge
mov
or
mov
dec
out
leave
mov
sbb
xchg
imul
add
sub
mov
or
nop
add
push
je
add
ss
mov
sbb
pop
add
rcl
outs
fdivr
dec
pop
iret
adc
xchg
jne
mov
mov
(bad)
(bad)
xor
dec
sub
mov
test
jmp
inc
mov
push
repnz
mov
enter
sub
sbb
jne
or
ss
loope
dec
cdq
pop
or
retf
mov
mov
pop
mov
push
(bad)
(bad)
sub
and
pop
xor
jg
jle
mov
mov
add
retf
or
stos
mov
pop
add
popf
pop
mov
adc
mov
shl
in
retf
xor
xchg
movs
scas
clc
jnp
pop
(bad)
pop
rcl
stc
cmp
inc
ds
sub
ds
icebp
pop
cmp
std
fs
fidivr
pop
pop
mov
adc
bound
push
mov
ror
loope
mov
xchg
out
imul
lods
call
add
jo
ja
jnp
jmp
fmul
aas
cmp
popf
cmps
mov
jae
cmp
xchg
mov
jo
sub
fisub
cmp
(bad)
stos
cld
mov
jmp
mov
imul
dec
int
lods
mov
or
imul
dec
xor
mov
mov
jmp
inc
stc
aas
push
stos
mov
ds
daa
or
les
pop
nop
ret
(bad)
pop
stos
shl
loope
retf
daa
fsubr
data16
test
mov
xchg
mov
pop
mov
push
jbe
cmp
inc
pop
adc
fcom
daa
fsubr
dec
pusha
add
fstp
outs
adc
mov
test
jp
push
or
cs
lea
xchg
push
out
sti
inc
enter
dec
dec
test
jo
push
push
pop
in
mov
ds
rdmsr
push
mov
sub
mov
dec
xchg
imul
movs
pop
push
adc
fcomp
mov
inc
push
mov
test
jle
push
icebp
jecxz
ret
push
les
ret
arpl
out
loop
pop
into
mov
jmp
enter
enter
adc
in
cmp
mov
iret
xchg
pcmpeqw
dec
mov
mov
pop
rcr
and
xor
mov
test
jo
push
ficom
ds
sub
shl
scas
mov
test
sub
inc
cmp
vfrczss
mov
sbb
lock
ins
ret
pop
into
les
sbb
imul
mov
into
dec
jmp
sbb
adc
xchg
lds
ret
das
adc
push
push
inc
aas
add
int3
out
jl
dec
test
jecxz
cwde
hlt
mov
mov
and
inc
les
dec
xor
or
arpl
mov
rcr
ficomp
cmp
xchg
aas
and
jl
jbe
test
inc
pop
mov
cmp
jmp
cmc
mov
cli
jno
cmps
stos
add
test
and
aas
xchg
mov
sti
pop
push
ss
mov
add
clc
pusha
bound
xor
sub
cmps
jns
movs
test
out
fsubr
jno
out
cmp
sbb
es
(bad)
std
cmp
repnz
dec
ret
adc
leave
adc
mov
mov
cmp
movs
inc
icebp
xchg
icebp
call
mov
icebp
cmp
sbb
push
js
cmp
dec
outs
in
mul
push
cmc
sub
dec
pop
in
(bad)
neg
add
lock
out
jb
mov
add
lahf
aaa
or
ja
icebp
cmp
jecxz
addr16
mov
out
mov
jge
imul
imul
push
ficomp
xor
out
push
jg
or
outs
int3
xchg
in
sahf
stos
lods
push
arpl
pusha
scas
fmul
adc
mov
aad
std
ja
sbb
outs
stos
inc
les
inc
jle
xor
mov
cmp
ins
dec
mov
sti
in
dec
call
icebp
push
stc
xor
lock
push
inc
aaa
rcr
jns
push
and
pop
rcl
push
dec
adc
mov
push
xchg
mov
je
test
leave
xor
mov
inc
mov
xchg
jmp
gs
loop
outs
mov
cli
popa
mov
and
test
or
push
inc
arpl
ret
mov
xor
out
rcl
adc
sahf
sbb
or
stos
(bad)
sub
push
mov
iret
mov
mov
adc
outs
push
adc
mov
retf
mov
aam
push
mov
mov
fcomi
ds
mov
movs
push
cmps
hlt
repz
repz
test
lahf
lahf
and
js
daa
pop
jne
out
dec
sahf
sub
mov
cmp
dec
cmc
and
aas
ret
cmps
aam
add
movs
ins
fwait
je
int
and
punpcklbw
pushf
ins
jmp
cmp
jmp
lock
fsubr
xchg
xor
in
push
ja
push
mov
xchg
ror
mov
lods
test
jbe
push
xchg
dec
push
pop
mov
fild
lods
imul
(bad)
lock
repz
inc
cmc
and
pop
inc
test
call
pop
mov
jg
retf
jmp
push
dec
cwde
(bad)
cmp
sub
mov
jp
repnz
dec
jnp
jns
push
ins
mov
(bad)
pop
jb
pop
mov
add
inc
sub
ret
sbb
stc
hlt
jmp
push
and
push
mov
adc
or
pop
out
adc
xchg
(bad)
cmps
jp
mov
addr16
and
pop
mov
rol
inc
(bad)
sub
push
add
retf
retf
(bad)
outs
idiv
(bad)
or
hlt
mov
mov
adc
sbb
and
es
cs
test
pop
pushf
fs
pop
aad
pop
mov
xor
shl
pop
push
mov
push
sub
cmp
lods
add
sar
sub
movs
loopne
out
test
cmp
and
fstp
mov
jecxz
or
jne
adc
or
or
and
pop
mov
test
jno
pop
cmp
shl
dec
gs
pop
mov
sti
loop
push
out
jno
fcomip
xlat
adc
cmps
mov
(bad)
cmp
js
(bad)
fimul
pop
sbb
and
stc
inc
in
mov
int
inc
outs
mov
and
(bad)
lds
pop
movs
enter
cmp
mov
daa
(bad)
mov
mov
fnstcw
xchg
or
test
push
jg
ds
mov
movs
pop
dec
mov
out
xor
push
test
loop
xor
pop
mov
dec
xchg
mov
test
ret
cmp
xor
pop
scas
xor
fstp
inc
mov
sub
and
(bad)
std
clc
outs
sub
xor
pop
mov
call
ret
repnz
pop
pop
in
mov
mov
mov
dec
pop
(bad)
call
ror
lds
add
inc
jo
stos
mov
xor
cdq
sti
jecxz
dec
xor
stc
loope
(bad)
hlt
push
dec
pushf
jnp
inc
push
fiadd
xor
rcr
loopne
xor
sar
(bad)
jmp
das
jmp
cdq
cmc
sti
test
popa
popf
imul
daa
popf
sahf
or
dec
jns
add
sahf
jge
push
inc
adc
repnz
cmp
(bad)
stc
loopne
cmp
mov
out
rol
xlat
neg
push
sub
cli
popf
call
and
rcl
fild
icebp
inc
dec
sbb
sbb
add
xchg
dec
mov
push
push
sar
iret
pop
inc
out
pushf
jge
xor
dec
mov
adc
pop
div
lods
aas
sub
call
test
sahf
dec
inc
mov
jne
(bad)
adc
outs
sub
loopne
(bad)
int3
jp
mov
js
push
daa
inc
arpl
lds
push
mov
and
std
xor
out
mov
sahf
sbb
xchg
mov
push
mov
into
outs
test
mov
retf
nop
lea
mov
pop
scas
adc
fwait
shl
(bad)
(bad)
sbb
popf
imul
pop
push
loopne
jae
loop
(bad)
scas
cli
sub
arpl
ja
ins
inc
xstore-rng
cmps
xchg
and
jbe
dec
adc
cld
and
or
sbb
fisub
test
add
dec
jno
inc
cmp
pop
shl
and
(bad)
mov
xor
icebp
pop
xchg
dec
or
ds
xchg
push
out
imul
scas
sbb
dec
mov
fsub
fcomp
popf
cs
mov
jae
push
xor
mov
mov
imul
jle
into
fsub
sahf
repz
test
fisttp
(bad)
mov
push
add
mov
mov
icebp
scas
(bad)
or
rcl
aad
xchg
stc
xlat
in
mov
lock
cmps
bound
mov
cmps
jno
inc
div
ins
pop
sbb
and
mov
mov
xor
push
cmp
and
or
xor
sub
mov
cld
push
jno
lods
dec
aad
and
outs
mov
(bad)
loope
sub
dec
aas
xor
jge
sub
repz
jnp
test
das
retf
nop
sub
push
test
or
push
icebp
(bad)
lds
pop
pop
inc
mov
xchg
lahf
ins
mov
sbb
pop
repnz
or
push
cs
jl
int3
sub
fdivr
jmp
inc
nop
bound
pusha
xor
push
inc
jmp
mov
jo
and
ja
cwde
sbb
js
adc
scas
test
inc
xchg
or
ds
lea
xor
repnz
repnz
mov
je
cmps
mov
inc
fwait
stos
and
in
cdq
call
adc
inc
test
retf
das
sub
pop
aad
xchg
cmp
(bad)
fisubr
adc
lods
stos
mov
push
jge
mov
sbb
and
in
dec
xor
dec
arpl
mov
push
cmps
push
pop
xchg
mov
fld
and
bound
les
and
push
mov
jle
lahf
mov
cmc
retf
(bad)
push
mov
aaa
jmp
lahf
data16
lds
pop
outs
pop
or
xor
das
xchg
(bad)
and
daa
mov
adc
int
(bad)
repz
cmp
pop
stc
jnp
out
dec
pop
retf
inc
iret
cmps
adc
mov
xor
cdq
mov
push
in
mov
xchg
in
daa
mov
scas
or
add
lods
dec
cmp
sub
retf
add
sar
sbb
dec
aas
lea
push
sub
push
push
jbe
stos
pop
xchg
and
push
push
pushf
outs
ds
jo
jno
enter
sub
add
es
dec
jge
push
daa
push
or
(bad)
(bad)
test
pop
xor
repnz
pop
adc
js
pop
mov
sahf
dec
retf
add
arpl
add
mov
mov
or
push
iret
cdq
into
dec
stos
mov
ds
repz
add
call
in
fsubr
mov
push
dec
and
xchg
ins
sbb
(bad)
jb
xchg
adc
sub
xchg
frstor
and
dec
shl
dec
imul
in
pop
ins
(bad)
in
std
cwde
stc
cmp
xor
push
imul
icebp
adc
movs
jne
fnstcw
bound
xchg
sbb
and
loop
dec
pop
mov
mov
mov
je
sti
daa
xor
cmp
movs
jmp
stc
test
fs
mov
inc
in
es
shr
xchg
in
push
pop
stos
shr
xor
aaa
fnsave
jnp
and
call
clc
xchg
add
cld
and
int
aad
dec
mov
les
jne
inc
xchg
mov
sub
pop
cmps
push
xchg
inc
nop
aas
fs
or
mov
dec
ins
mov
xor
lods
xchg
repnz
inc
(bad)
data16
lods
test
int
or
jnp
xchg
(bad)
shr
fidivr
and
inc
mov
sub
ror
jne
shl
cmp
clc
aam
add
and
mov
in
test
jle
mov
stos
mov
test
fmul
(bad)
and
not
call
mov
cli
xchg
add
sbb
setae
xor
adc
mov
mov
bound
mul
dec
add
pop
dec
or
sbb
jmp
sahf
pop
xor
pop
lea
call
in
dec
add
call
push
xchg
add
hlt
popa
cmps
mov
fild
pop
int3
cmp
test
dec
sahf
cmps
jns
mov
mov
pushf
or
adc
inc
cli
stos
fistp
cmp
dec
stos
and
adc
fisub
(bad)
call
add
cmps
mov
test
sub
mov
or
fisubr
lds
idiv
add
sub
mov
fld1
repz
les
and
je
call
lahf
lahf
ins
xor
sbb
test
xor
popa
add
loop
jne
pop
mov
mov
jp
fsub
outs
and
pusha
lahf
cs
and
xlat
and
mov
jno
adc
sub
inc
out
jae
cmps
fs
shl
in
mov
(bad)
in
jns
and
call
pop
inc
retf
stos
inc
fwait
xor
dec
pop
xchg
mov
and
push
mov
dec
push
jnp
pause
test
pop
es
dec
jmp
aaa
movs
in
pop
push
inc
xchg
test
inc
sub
or
fnstcw
pop
sub
imul
call
jo
dec
repnz
mov
cmps
jcxz
and
pushf
clc
iret
or
jo
nop
push
rol
(bad)
js
push
xchg
out
loope
add
stos
popa
mov
shr
cmps
jnp
sub
clc
ja
cmp
and
xchg
pop
sbb
xor
xchg
mov
mov
mov
lea
dec
int
and
test
ret
sbb
fimul
jns
mul
imul
data16
iret
mov
ret
dec
mov
jne
repz
push
retf
sub
cs
jnp
xor
mov
cli
ja
jnp
adc
ds
push
xor
shl
add
push
pop
ja
mov
stos
and
sbb
push
and
xsavec
fisttp
jo
bound
ins
out
pushf
in
add
bnd
or
jne
xchg
cs
stos
inc
sub
mov
and
movs
jge
mov
test
and
xchg
sbb
jg
mov
(bad)
jae
mov
adc
sub
repz
inc
fsub
xor
retf
mov
pusha
and
mov
bound
das
fdiv
sub
sahf
sbb
mov
call
sbb
pop
mov
jp
out
pop
cmps
hlt
mov
ss
sub
and
pushf
lahf
(bad)
pop
and
aaa
jno
movs
pop
cs
xchg
sbb
xchg
or
ror
(bad)
push
in
mov
jp
test
pop
xor
xlat
adc
ins
xchg
pop
jp
fst
ret
mov
inc
movs
(bad)
ins
pusha
outs
stc
loope
out
sbb
ins
mov
xor
bound
pop
repz
mov
inc
inc
add
add
jmp
sub
xchg
mov
or
mov
jecxz
mov
ins
mov
pop
add
pop
sub
mov
push
jmp
jno
inc
or
jmp
imul
xlat
pop
movs
gs
sbb
inc
in
shr
out
pop
lods
mov
add
mul
sbb
ret
inc
clc
ret
fisttp
inc
xor
add
mov
outs
cmp
push
fdivr
inc
xor
outs
inc
mov
jge
out
popf
mov
(bad)
xor
jecxz
adc
repnz
fst
int
pop
pop
ds
xor
jae
xchg
popa
and
test
push
out
mov
pushf
mov
mov
movs
push
fcom
in
mov
jo
rcr
or
test
out
inc
jae
or
jo
mov
jns
mov
push
jp
and
mov
test
or
jb
pusha
and
int3
inc
mov
imul
cdq
pcmpeqb
pop
in
and
push
mov
inc
sub
push
shl
inc
retf
inc
and
aas
mov
scas
enter
mov
cmc
nop
cmp
aaa
jae
out
imul
fisubr
sbb
cmp
jp
ins
cmp
sub
repnz
mov
inc
xlat
das
data16
mov
inc
rol
push
js
outs
loopne
loope
xchg
sbb
adc
ds
in
push
push
dec
loope
mul
loop
fcom
movs
je
es
inc
cmp
cmps
das
sbb
icebp
loop
mov
cmp
sub
int
in
(bad)
arpl
push
test
call
loop
xor
rcr
outs
fxch
pushf
out
mov
nop
jne
and
mov
js
(bad)
sbb
lock
outs
mov
or
fadd
pusha
push
sbb
jge
jecxz
cs
jmp
xchg
ins
sbb
iret
sub
aas
sbb
and
add
mov
sbb
sub
adc
xchg
xchg
and
mov
sub
cmp
fcmove
out
jge
xor
retf
xor
cmp
xchg
pop
aas
scas
cmps
loopne
mov
not
arpl
cmp
aas
out
fiadd
push
fbstp
or
jns
jg
dec
push
(bad)
sbb
loopne
mov
cli
jmp
in
ins
repz
and
cli
xchg
adc
jmp
jne
or
sbb
mov
cli
adc
mov
inc
test
and
pushf
cmp
jl
popa
push
lods
and
dec
femms
test
hlt
push
cmp
add
jmp
xchg
test
cmp
xor
gs
arpl
push
adc
xchg
xor
lock
mov
sub
push
inc
nop
mov
das
out
xor
jo
(bad)
xchg
scas
push
shl
sbb
xchg
ins
cmp
adc
jae
stos
pop
popaw
push
loopne
jne
mov
sbb
jge
(bad)
mov
out
push
push
packssdw
inc
(bad)
ficomp
pop
xor
adc
cmp
ins
or
jmp
cmps
cld
add
mov
sub
pop
ins
cmp
sahf
repnz
xchg
mov
adc
mov
sbb
push
sub
mov
mov
inc
bound
outs
clc
daa
cmpps
mov
xchg
nop
lock
shl
movs
test
outs
lahf
dec
ret
into
and
push
jp
test
push
ja
popa
adc
jp
cmp
xchg
(bad)
in
push
mov
xchg
in
or
das
(bad)
jo
pop
xor
fs
sbb
fdivr
add
test
jl
test
movs
or
or
test
sub
cmc
jno
outs
enter
neg
cli
fnstcw
jb
test
cs
push
inc
xlat
mov
sbb
sahf
fmul
jae
mov
js
xor
out
shr
fisub
iret
dec
sbb
ss
adc
xchg
xchg
jmp
adc
adc
pushf
xchg
outs
sbb
aam
shl
sub
cmp
daa
loope
dec
popa
js
ret
dec
out
push
sub
xlat
ret
div
jb
lods
ins
(bad)
sahf
xchg
cli
cmps
iret
jle
mov
push
jle
push
cdq
lds
dec
cmp
lock
adc
jae
cwde
push
loopne
mov
rcr
mov
sbb
jl
stos
mov
loop
icebp
jae
inc
add
cli
enter
adc
lods
push
mov
or
sbb
xchg
jo
lods
inc
mov
cdq
mov
push
jb
inc
dec
int
lods
aam
or
xchg
push
in
and
sub
add
xchg
loope
adc
out
hlt
jns
arpl
pop
and
sub
fnstsw
loopne
int3
test
xor
pop
sub
mov
or
fdivr
stos
pop
not
xor
fstp
aam
jmp
mov
and
rcl
or
pop
leave
stc
mov
push
pop
pusha
mov
xchg
std
aad
dec
shl
out
cmp
mov
mov
mov
fadd
(bad)
xchg
pop
test
mov
ds
mov
fwait
cmp
inc
jo
lea
pop
jns
xor
cmp
jo
cwde
ficom
test
int3
sub
or
and
pop
mov
ret
test
imul
jns
push
and
repz
jge
fsubr
inc
mov
ret
pusha
(bad)
test
fcomi
nop
sub
xor
cmp
sub
shl
push
ret
test
sbb
pop
adc
sbb
jo
ret
cdq
or
cmp
add
sbb
icebp
in
jae
and
fdiv
loop
adc
jle
mov
repnz
out
into
push
loop
xchg
cmp
repnz
cmp
and
xchg
jmp
js
pop
int3
dec
imul
lock
xchg
mov
mul
xor
xchg
mov
mov
cmp
inc
push
stos
dec
pop
loop
lds
and
aaa
(bad)
sbb
xor
outs
sub
mov
sbb
xlat
mov
mov
mov
inc
in
(bad)
rcr
in
hlt
shl
xchg
dec
adc
pop
int3
sbb
mov
pop
in
imul
sub
je
cli
(bad)
sub
icebp
not
cmp
mov
out
in
daa
mov
inc
xchg
cmp
and
xchg
sbb
retf
push
xchg
jl
or
call
pop
mov
and
mov
or
sbb
inc
das
loop
dec
sahf
in
test
push
jg
inc
sub
enter
cmp
xchg
or
mov
shr
pop
js
jns
fldcw
ds
or
repnz
xor
xchg
xlat
je
(bad)
cmp
ret
fsub
jnp
lock
ror
(bad)
dec
mov
sbb
add
mov
mov
jp
mov
ret
ret
jge
sbb
push
inc
stos
xchg
lahf
jmp
inc
hlt
mov
sbb
imul
mov
pop
fs
popf
mov
aas
dec
push
push
push
out
jle
sub
std
push
pop
loope
dec
inc
(bad)
daa
cmp
movs
cmp
xchg
mov
xor
sub
loopne
add
xchg
mov
jmp
xchg
je
xchg
inc
in
cdq
add
xchg
pop
jae
lods
(bad)
push
jge
push
iret
cmp
add
jle
mov
push
mov
cmp
pop
aam
add
sahf
mov
cmp
cli
xchg
mov
out
mov
fst
jbe
push
add
add
dec
stos
jb
push
sar
mov
jecxz
push
lock
add
scas
add
mov
xchg
pushf
sti
iret
jo
(bad)
out
mov
sahf
and
hlt
aam
loop
ds
fisubr
imul
mov
psubb
inc
icebp
in
mov
pusha
cmp
sbb
pop
push
rcl
push
xchg
push
cdq
jecxz
movs
hlt
xchg
nop
mov
out
idiv
jmp
stos
push
jmp
in
rcl
shr
rcl
icebp
jmp
mov
stos
jmp
repnz
dec
pop
mov
in
pop
(bad)
nop
and
inc
stos
mov
cmp
(bad)
sti
push
jl
aas
jnp
or
push
jne
sbb
adc
arpl
aas
arpl
js
or
dec
push
adc
xchg
lds
cmp
into
xchg
jl
mov
sbb
aam
adc
pop
or
jecxz
sub
fisttp
sbb
pushf
lahf
dec
imul
push
cli
in
dec
imul
ins
cmps
pop
xor
sub
or
mov
retf
mov
scas
aam
bound
icebp
mov
fimul
xchg
cs
cmp
inc
sub
cwde
xlat
jbe
cmp
cmp
sub
movs
push
pop
aaa
xlat
imul
mov
scas
outs
(bad)
cmp
into
gs
inc
adc
(bad)
pop
sahf
iret
(bad)
lods
cmps
jbe
add
add
cmp
iret
xlat
jae
pop
je
fidiv
push
test
mov
add
fdiv
in
mul
sbb
repz
jmp
scas
add
iret
sub
call
ss
imul
xchg
xchg
cmp
ins
lahf
add
mov
in
loope
icebp
stos
mov
mov
js
or
iret
das
daa
ds
xor
cs
ror
ja
mov
or
dec
mov
cwde
push
movs
jbe
lock
mov
dec
mov
mov
clc
imul
cmp
ss
mov
cmc
icebp
mov
aaa
xchg
xchg
sub
int3
aad
xor
repz
push
push
push
push
mov
loopne
inc
push
adc
in
jg
push
mov
push
bnd
mov
push
mov
pusha
xor
pop
sbb
ins
shl
xchg
mov
push
fnsetpm(287
test
sub
dec
adc
mov
inc
(bad)
out
nop
retf
movs
inc
fcomp
mov
bound
repz
add
repnz
neg
ss
cmp
inc
push
aad
sbb
cld
mov
dec
adc
or
mov
ins
mov
jmp
shr
jecxz
cmp
and
fs
pop
int
shl
mov
test
dec
push
mov
jno
dec
int
js
cmp
mov
or
js
inc
mov
adc
leave
aad
mov
sub
scas
in
sub
iret
jmp
xor
popf
jmp
loopne
ja
or
sbb
push
dec
xchg
mov
jmp
xchg
jmp
xchg
cmp
js
test
mov
pusha
mov
mov
iret
pop
pop
loope
fld
ficomp
sub
or
repz
fwait
fs
xchg
pop
adc
or
int3
sub
inc
mov
test
pop
cmp
out
adc
iret
mov
sub
stos
push
and
fidivr
das
jns
test
js
hlt
ret
pop
cli
mov
xor
push
inc
imul
jae
xchg
xor
das
add
pop
sahf
dec
cmp
repz
sbb
mov
aad
loop
or
push
bound
jno
sub
outs
mov
icebp
fimul
mov
sbb
add
cmp
pop
int
imul
test
xor
jl
aaa
xor
fiadd
add
dec
outs
or
fs
fst
loop
loop
jle
test
neg
sbb
cs
mov
xor
sub
jo
jns
inc
jg
imul
xchg
inc
dec
adc
test
add
inc
outs
sub
aaa
stos
sar
out
jg
push
push
addr16
jp
sub
pop
jno
mov
mov
mov
jnp
inc
cmps
leave
cmc
cmp
scas
gs
or
dec
pop
int
and
sbb
sbb
(bad)
ret
fwait
push
mov
mov
out
movs
gs
xchg
arpl
mov
mov
addr16
push
ret
fisub
sbb
shl
jl
and
es
mov
lds
loopne
mov
and
movs
ins
call
adc
fst
xchg
xor
aaa
lock
adc
inc
dec
retf
inc
movs
mov
cdq
pop
inc
fwait
ins
add
movs
mov
in
(bad)
adc
xchg
adc
xor
sub
sbb
cs
and
shl
loop
inc
int3
jae
aad
xchg
push
jp
inc
out
vsqrtss
pop
hlt
pop
cmp
rcl
add
test
sub
jmp
jns
push
inc
(bad)
std
jp
fadd
call
xchg
sbb
jl
or
xchg
mov
push
aas
shl
jno
vphsubdq
stc
fimul
movs
retf
inc
jp
out
lods
fwait
push
jnp
sti
fisttp
mov
fsub
mov
int
mov
cs
cdq
sub
cld
fistp
push
push
movs
imul
std
jmp
ret
movs
adc
push
aam
or
stc
stos
mov
sub
push
out
stos
dec
push
icebp
cmp
addr16
sahf
mov
sbb
mov
jge
fsubp
or
shl
outs
dec
sti
in
aas
sub
(bad)
iret
push
jmp
sub
cwde
out
into
repnz
pusha
jnp
(bad)
jbe
imul
mov
popf
dec
icebp
jmp
ss
int3
out
mov
xchg
push
jecxz
sar
pop
popa
or
and
mov
jp
mov
dec
hlt
popa
add
push
xor
pushf
mov
pusha
and
fsubrp
and
repnz
imul
xor
dec
cmp
arpl
cmps
in
mov
stos
mov
xor
call
mov
mov
retf
jp
jmp
in
inc
mov
fist
fisub
hlt
push
daa
test
sub
sbb
push
mov
mov
aas
inc
aad
adc
xchg
pop
hlt
and
push
sbb
mov
mov
lods
daa
jl
lods
aam
and
imul
ins
add
stos
in
mov
mov
add
clc
scas
jns
test
ret
or
out
sti
cmp
pushfw
cmp
fstp
jns
cwde
loop
and
push
cmp
mov
jp
inc
fcmovnbe
or
cwde
adc
sub
je
lods
aas
dec
push
in
fs
pop
cmp
mov
imul
add
loopne
mov
std
mov
(bad)
stc
xchg
imul
adc
rcr
pop
pop
mov
adc
nop
jmp
cli
nop
pop
in
lds
fcomp
fdiv
jns
je
sbb
lahf
mov
jle
jle
pop
jp
xor
push
sbb
inc
out
inc
test
sti
sub
cld
xchg
jnp
es
cs
or
imul
cs
adc
in
ficom
test
in
aam
inc
inc
inc
or
sbb
repz
jo
dec
test
js
adc
add
xchg
jmp
cld
(bad)
(bad)
pop
pop
push
out
(bad)
and
retf
push
dec
sub
sub
clc
int
pop
mov
adc
fdiv
call
lahf
sbb
pop
mov
jge
jno
aaa
inc
or
lods
or
repz
out
mov
pop
mov
jb
jmp
push
and
clc
popa
cmp
je
xchg
pop
pop
cmp
imul
sbb
movs
loope
daa
(bad)
cmp
pop
fld
adc
shr
inc
int3
xor
gs
scas
cmp
ins
aam
clc
cmps
pop
mov
imul
mov
jp
leave
xor
call
mov
movs
mov
nop
stos
push
imul
and
int3
dec
dec
sub
pop
pop
push
out
adc
adc
lods
fdivr
call
dec
mov
push
in
lods
shl
or
fwait
jne
clc
jge
inc
lahf
sub
hlt
xor
sbb
cdq
fstp
push
nop
dec
sub
out
pop
inc
lea
iret
lahf
cmp
(bad)
in
mov
je
inc
pop
and
jbe
mov
push
pop
pop
pop
jle
in
mov
mov
out
rol
std
push
(bad)
shr
aaa
mov
push
sbb
push
add
loope
adc
push
movs
inc
inc
add
push
push
adc
xchg
jb
xor
dec
enter
scas
sar
ret
loope
pop
mov
xchg
das
aad
adc
addr16
xchg
push
push
add
in
mov
sub
imul
xchg
jmp
jp
mov
mov
stos
into
push
sbb
ins
mov
aaa
sbb
(bad)
mov
jo
push
xchg
mov
or
mov
sahf
sbb
mov
(bad)
movs
ins
js
rcr
add
fistp
div
shl
adc
mov
mov
mov
and
xchg
jae
cli
les
(bad)
nop
fwait
fs
cmps
jl
or
jle
cmps
push
scas
mov
adc
shl
or
pop
retf
xchg
push
mov
cmp
and
push
dec
je
and
adc
xor
mov
out
and
cmp
cmc
out
jno
scas
inc
jo
aas
loop
enter
int
push
outs
xor
cmps
repnz
push
rcl
mov
and
and
cmps
inc
addr16
or
pop
sub
mov
test
or
iret
int3
cs
add
add
or
idiv
adc
mov
gs
ins
jp
adc
mov
inc
(bad)
inc
mov
xor
inc
repnz
sbb
rcl
pop
mul
dec
and
xchg
add
loop
push
lds
imul
int3
xor
out
repz
enter
mov
xor
jbe
mov
xor
fidiv
das
pop
xor
mov
rol
mov
test
pop
aas
dec
pop
faddp
jecxz
and
mov
data16
imul
push
in
sbb
cld
mov
mov
fwait
lea
jae
mov
(bad)
lds
scas
cs
add
out
adc
lock
stos
dec
xchg
xor
rol
add
data16
xor
fstp
add
ror
inc
mov
xchg
xor
into
pop
dec
cmp
mov
fst
data16
ja
or
es
and
and
inc
mov
jecxz
ds
xor
sub
cld
push
stos
fs
sub
ret
dec
data16
js
movs
cli
js
test
cmp
sub
mov
inc
sub
dec
jl
mov
push
lods
inc
rcr
lock
sub
jb
rol
xchg
ret
inc
std
sbb
fwait
or
mov
outs
js
mov
loope
mov
mov
imul
test
cmp
mov
dec
mov
mov
cmps
xlat
shr
pop
or
cld
sahf
loope
add
rcl
cmp
add
xor
pop
mov
clc
aas
inc
mov
shl
in
adc
push
int3
sub
out
mov
jns
int
push
add
jg
in
scas
out
sub
cmc
data16
sub
dec
in
loop
test
push
fst
mov
adc
test
fwait
mov
cwde
in
loope
xor
xchg
stos
out
mov
sub
aam
sub
ds
dec
xchg
mov
rol
jl
pop
xor
ror
inc
data16
dec
push
jb
inc
pop
push
xchg
add
adc
repz
bound
cmp
mov
cmc
inc
and
retf
mov
adc
test
jae
sub
jns
fcomp
test
loopne
mov
mov
sbb
xchg
out
xor
loopne
mov
fistp
in
clc
jmp
jge
push
fs
mov
jno
lahf
mov
adc
int
outs
dec
or
les
mov
and
dec
jecxz
jns
jl
dec
mov
mov
rcr
xlat
out
(bad)
clc
pusha
pop
jl
daa
bound
push
cmc
jmp
push
lds
loop
adc
shr
mov
mov
mov
add
daa
fisubr
or
fld
cmp
pop
cmp
gs
mov
fistp
(bad)
xor
dec
adc
pop
and
scas
aad
cmps
push
bound
retf
jmp
hlt
(bad)
mov
ins
cld
or
ret
test
fstp
shl
pop
jb
inc
inc
inc
cmc
pushf
dec
scas
xchg
bound
inc
adc
jmp
cwde
cmps
jp
cmp
cmp
mov
loop
mov
push
inc
sbb
xor
jg
idiv
or
ret
repnz
ds
add
inc
out
(bad)
xor
push
push
or
xchg
push
sbb
movs
push
cmp
push
push
ja
mov
loope
dec
cmp
cld
scas
stc
lods
call
sbb
int3
adc
outs
or
pop
mov
movs
cmp
rcr
mov
xchg
enter
setge
outs
or
fild
mov
push
aaa
ret
jge
lods
or
outs
and
test
rcl
cmps
arpl
(bad)
(bad)
cmc
into
push
mov
out
add
and
in
sub
and
adc
sub
(bad)
lock
jne
fwait
jnp
lds
sti
(bad)
mul
aad
aas
push
xor
js
pop
cmp
add
je
jb
ins
pop
push
stos
jmp
(bad)
mov
cmp
or
and
jmp
sub
ins
or
pop
repnz
test
in
ss
adc
add
jno
inc
outs
jmp
lock
and
mov
ins
mov
cwde
cmps
jae
mov
cmps
cmps
pop
mov
jo
and
jmp
dec
ss
arpl
add
mov
or
aad
into
call
mov
lock
dec
(bad)
sahf
sbb
int
cmps
imul
sub
das
xchg
jb
aas
leave
adc
(bad)
data16
out
or
inc
push
outs
jle
lds
ret
rcr
mov
add
mov
or
cli
inc
(bad)
icebp
rol
daa
push
stos
test
mov
dec
mov
sti
pop
popf
xchg
nop
call
inc
inc
cmp
and
cmps
cmp
pop
jno
mov
fadd
mov
shl
jo
mov
xor
adc
ins
add
dec
jmp
cmp
loopne
rol
cmp
push
loope
and
sahf
sar
and
(bad)
push
jns
retf
jbe
sub
(bad)
ret
dec
in
add
jl
dec
mov
jbe
adc
pop
(bad)
cmps
or
sar
popf
data16
ins
xchg
mov
das
adc
jp
mov
jg
adc
inc
ja
dec
mov
imul
or
jns
popf
xchg
data16
add
aaa
jle
xchg
fdivr
mov
push
and
xchg
inc
xlat
dec
sub
clc
inc
ret
loop
and
inc
mov
dec
and
and
into
pop
neg
pop
adc
xchg
mov
xchg
popa
jo
inc
sbb
push
cdq
rol
(bad)
imul
sbb
mov
ret
imul
xchg
dec
adc
adc
movs
loopne
leave
scas
retf
push
inc
inc
loope
leave
in
adc
aas
daa
pop
popa
int3
inc
mov
outs
push
adc
addr16
adc
mov
das
push
xchg
pop
gs
xchg
sbb
imul
ss
aas
test
push
mov
add
dec
push
push
cmp
or
fwait
push
pop
aad
sbb
dec
cmc
cmp
cld
push
pop
repnz
push
mov
dec
out
ins
xor
enter
je
cmps
dec
cmc
icebp
jl
loop
adc
psadbw
ret
iret
jmp
add
jecxz
out
ret
or
loopne
in
call
outs
dec
repz
movs
mov
jnp
cwde
push
inc
xor
xchg
sar
mov
das
mov
push
xor
pop
jne
das
or
mov
lods
mov
xchg
mov
xchg
cmps
mov
inc
jae
gs
cld
hlt
in
push
nop
jne
or
repnz
leave
push
jo
add
mov
cmps
pop
sub
pop
sub
mov
mov
mov
scas
iret
jmp
add
mov
call
cmp
jmp
mov
mov
shl
clc
(bad)
sti
ficomp
xchg
neg
mov
imul
cld
xor
fidivr
mov
push
mov
add
das
add
mov
clc
mov
jb
push
ret
mov
xchg
(bad)
mov
push
pop
test
fisttp
sbb
mov
sub
mov
jle
dec
idiv
jne
or
mov
adc
popf
sbb
cmp
adc
(bad)
gs
ja
mov
leave
adc
loope
into
mov
mov
call
sub
jl
dec
(bad)
js
xor
xor
repz
jge
stos
ins
iret
icebp
cwde
shl
add
mov
icebp
xor
or
mov
mov
mov
adc
push
cwde
jae
test
or
pop
sub
xchg
jnp
pop
jg
in
sbb
jnp
dec
sti
sub
add
push
jb
cmps
fisttp
push
mov
stos
test
or
push
jle
sbb
in
mov
ja
cmc
out
jns
scas
mov
adc
out
mov
jo
mov
xor
test
js
ror
push
(bad)
sub
jb
mov
cld
enter
call
mov
outs
ds
int3
mov
adc
sbb
cmps
and
retf
xor
sbb
cwde
int3
add
ds
lahf
fxch
mov
outs
cmp
test
sbb
stc
mov
(bad)
dec
idiv
enter
sub
add
mov
jne
aas
mov
jg
sbb
stc
jnp
loopne
mov
stc
push
imul
nop
xchg
add
add
push
xor
sbb
mov
pop
ret
sbb
shr
jae
sbb
sbb
hlt
pusha
arpl
test
or
xchg
push
pop
push
push
pop
adc
xchg
aad
je
test
push
lods
ficomp
popa
cmp
sbb
cmps
push
es
ficomp
fcmovu
mul
mov
das
(bad)
cmc
pop
and
cli
js
mov
inc
call
add
call
mov
push
inc
or
jne
push
movs
push
aam
leave
fsubrp
mov
push
jecxz
and
push
into
pop
jge
clc
call
cmp
loope
sub
fdivr
imul
mov
(bad)
outs
and
xor
int3
mov
push
add
test
scas
ret
fsubr
mov
lahf
sub
sub
data16
dec
bnd
rcl
jns
pop
(bad)
or
or
sbb
lea
adc
xor
adc
mov
add
jb
daa
mov
mov
xchg
addr16
ins
(bad)
fbstp
cmp
cmps
sbb
cmp
mov
cmp
push
add
sahf
rcl
mov
cli
xchg
pop
test
fdiv
sub
xor
ss
(bad)
icebp
or
and
xchg
dec
or
add
dec
pmaxsw
adc
lock
ja
jo
pusha
and
mov
push
mov
mov
test
jnp
cmc
and
and
push
cmc
sar
mov
daa
dec
xchg
push
out
iret
mov
sti
shl
dec
xchg
cmp
xlat
push
or
imul
add
or
mov
or
imul
sbb
push
fist
ret
jg
mov
xchg
add
sbb
ret
stos
mov
aad
nop
xchg
loop
cmp
inc
shr
cmps
aad
push
daa
enter
mov
aas
inc
(bad)
out
cmp
das
loop
mov
sahf
in
sbb
jae
dec
sub
repnz
add
cmps
(bad)
(bad)
jno
and
lahf
pop
add
mov
outs
je
icebp
pop
add
mov
sbb
xor
imul
ror
mov
cmp
jp
das
dec
repz
pop
inc
mov
std
xor
xor
jbe
(bad)
inc
xlat
pop
mov
pop
mov
clc
xor
sbb
(bad)
addr16
loope
jno
in
in
adc
sbb
rcl
jbe
adc
or
mov
lea
loop
push
addr16
push
rcr
fldenv
mov
lods
sbb
sbb
mov
jle
mov
cs
call
rcr
repnz
fiadd
(bad)
les
sub
ret
mov
push
jnp
jo
shl
cmp
push
xor
(bad)
arpl
fisub
xor
jne
mov
out
push
into
(bad)
sub
imul
mov
sbb
jae
lock
sbb
jp
pop
add
mov
cwde
sub
mov
mov
pop
jle
pop
add
repnz
das
js
add
iret
test
cdq
popf
xor
add
and
adc
or
retf
sub
xor
xchg
inc
mov
cmp
and
into
popf
mov
pushf
scas
cdq
repnz
stos
int
inc
sub
lahf
out
xor
test
leave
sbb
jl
pop
adc
xlat
inc
sbb
lea
int
mov
in
(bad)
loop
lahf
ss
test
call
add
and
and
mov
mul
mov
gs
xchg
or
add
ins
sar
loop
hlt
mov
cmp
call
into
in
fucomi
ss
in
mov
in
fdiv
(bad)
mov
or
pop
out
lods
jmp
xchg
(bad)
inc
and
imul
rcl
sbb
mov
mov
or
cmp
mov
add
jo
int3
aas
test
hlt
call
xchg
jmp
mov
sub
mov
xchg
add
xchg
mov
push
sub
push
or
rcl
jnp
test
mov
jmp
hlt
inc
pusha
imul
gs
sar
(bad)
outs
je
xchg
ror
sar
clc
pop
sbb
gs
addr16
adc
pop
pop
and
mov
bound
pop
sub
je
arpl
xchg
push
jecxz
xchg
fwait
test
xchg
into
lea
sbb
icebp
xchg
fdiv
xor
lea
loope
mov
push
shl
mov
or
mov
mov
cmp
stos
movs
loop
in
inc
pop
xchg
xchg
ja
mov
pop
mov
(bad)
les
or
(bad)
stos
and
pusha
or
lods
adc
inc
inc
ins
call
inc
and
add
and
cmp
fs
sbb
and
xchg
mov
(bad)
out
mov
sbb
inc
call
aad
mov
sub
in
out
mov
sub
in
outs
push
sti
dec
movs
aas
adc
push
loop
jno
cmp
dec
in
aaa
sub
imul
test
mov
xchg
cmp
pusha
jecxz
mov
pop
mov
cmp
or
movs
adc
pop
jno
test
gs
dec
pushf
jp
and
pop
or
sbb
mov
mov
cwde
retf
inc
js
or
call
jl
jnp
dec
and
js
movs
outs
cmp
popf
hlt
xchg
push
repnz
pop
mov
out
movs
pop
ins
and
jge
jno
icebp
pop
in
jb
inc
les
es
mov
icebp
adc
shr
imul
jno
xchg
or
and
mov
sbb
mov
push
adc
jo
mov
xor
add
mov
ins
repz
scas
call
dec
mov
mov
mov
loopne
ret
and
call
dec
pop
idiv
dec
rcr
push
pusha
add
ja
push
xor
add
jo
repnz
std
dec
scas
mov
call
jne
cwde
dec
adc
fucomip
mov
jl
pop
mov
jnp
mov
push
les
inc
xchg
popf
fdivrp
jo
inc
ror
sbb
repnz
cs
in
popf
or
add
aaa
lds
cld
call
test
pop
test
movs
test
inc
pusha
into
je
cmp
call
je
loope
addr16
mov
mov
pop
jmp
daa
mov
xor
scas
lods
and
es
or
and
jns
or
arpl
mov
mov
pop
pop
cmc
sbb
mov
call
icebp
mov
pop
les
cmp
test
dec
inc
rcr
mov
mov
ss
stos
push
ret
mov
xor
mov
or
bound
jl
shl
aaa
loop
ret
es
jns
fstp
pop
sub
sub
push
and
jnp
scas
cmp
ja
loop
xchg
aas
dec
sahf
mov
mov
and
fmul
rcr
sub
call
adc
xchg
leave
xchg
xchg
jae
add
rcl
in
mov
xchg
jb
out
pop
xchg
xchg
add
jp
and
push
ret
lahf
mov
mov
pop
add
jns
inc
repz
sub
push
test
cs
push
mov
stc
scas
jmp
mov
cmps
and
lahf
sbb
movs
mov
addr16
or
and
pop
in
retf
retf
jbe
repz
fadd
fld
push
gs
inc
mov
sbb
jmp
dec
sub
mov
inc
cwde
xchg
mov
leave
sbb
push
inc
or
add
out
jnp
cmps
loope
inc
jecxz
xchg
ds
sub
and
dec
or
xchg
int3
ins
mov
sahf
mov
cmp
into
and
lods
mov
cmp
adc
sub
push
xchg
ja
pop
cmps
jl
jmp
(bad)
sbb
xor
add
and
mov
mov
mov
dec
fcom
mov
outs
sbb
inc
inc
gs
ret
jl
(bad)
jecxz
leave
out
fistp
inc
in
xor
or
ins
mov
pop
mov
cmps
icebp
(bad)
mov
frstor
pop
jp
xchg
leave
mov
call
inc
dec
bound
jge
retf
jne
stos
ror
movs
mov
or
xor
loop
in
scas
retf
cs
pop
sbb
jmp
ret
inc
neg
or
mov
(bad)
cmp
adc
xchg
mov
ret
cmp
push
cmc
aas
pop
sbb
xchg
gs
and
stc
push
mov
loopne
bound
or
add
outs
dec
add
inc
inc
inc
cmc
jae
xor
and
xor
add
mov
mov
mov
cwde
cmp
fild
sub
dec
add
mov
and
sub
fwait
loopne
arpl
pop
clc
mov
adc
fdivr
aad
loop
or
mov
mov
(bad)
test
jno
push
inc
xor
dec
ds
lods
or
sbb
mov
call
xor
jo
pop
xor
add
rcl
jbe
mov
xrelease
(bad)
test
pop
sti
or
jecxz
out
sub
ror
aam
add
test
shr
in
fistp
imul
inc
out
adc
and
and
ss
test
pusha
and
popf
(bad)
dec
pop
jbe
out
js
retf
xor
(bad)
sbb
inc
cmps
lds
jo
out
pop
fisub
lods
xchg
sub
add
mov
xor
(bad)
mov
jge
(bad)
in
retf
sub
xchg
pop
loope
loopne
ja
adc
sbb
icebp
push
and
frstor
int
aas
xchg
lods
xor
xchg
outs
scas
ret
jg
inc
xchg
mov
cmp
fimul
xchg
mov
cli
call
mov
jns
or
fwait
cdq
ins
and
or
inc
sbb
fmul
adc
inc
loopne
mov
push
or
test
mov
into
push
adc
and
xchg
mov
mov
ret
in
ror
dec
pop
pop
jo
std
xchg
pop
mov
les
out
cmp
fs
dec
mov
inc
out
xchg
adc
mov
dec
retf
stc
ins
ins
add
(bad)
and
pop
cmp
addr16
jae
movs
test
sub
pop
mov
or
int3
adc
aaa
cdq
mov
ror
push
sbb
inc
dec
mov
mov
xor
add
mov
or
xor
repz
mov
mov
cli
mov
cmps
jbe
les
mov
add
pop
(bad)
ss
mov
bound
ror
sahf
inc
sbb
mov
push
imul
in
sub
add
lea
sbb
mov
dec
stos
nop
shr
nop
pop
lds
div
inc
xor
dec
in
mov
xor
sahf
pop
cs
out
dec
add
mov
and
xchg
sub
jmp
sub
bound
and
jne
scas
or
cmps
arpl
scas
mov
ja
jno
ins
push
cmp
inc
ins
and
es
call
je
shr
repnz
and
pop
cwde
cmp
(bad)
loop
into
mov
loopne
test
shl
jmp
sub
push
(bad)
and
repnz
cmc
dec
das
ret
cli
mov
xchg
in
and
ret
jmp
push
test
xor
xchg
sub
adc
jge
or
(bad)
inc
(bad)
and
cmp
jmp
mov
loopne
push
outs
xlat
stos
xor
cmps
shl
pop
and
cmps
cmp
adc
cmp
fcmovnbe
or
call
ret
xchg
sbb
into
ins
mov
and
shl
adc
scas
fwait
arpl
push
pop
pop
adc
loope
repz
sub
pop
xor
sub
daa
xchg
das
addr16
xor
xchg
pusha
out
push
adc
movs
sbb
stos
popa
mov
mov
repnz
fisub
adc
adc
sub
sub
fiadd
stos
out
adc
xchg
and
shl
inc
test
push
ret
or
mov
sbb
jmp
xor
scas
bnd
sub
add
cld
fidiv
imul
ins
push
retf
or
das
sub
push
mov
fst
or
iret
push
cmp
shl
pop
mov
or
pushf
push
jne
iret
sbb
push
dec
sub
or
ret
fst
and
push
cmps
jle
loopne
and
adc
test
push
addr16
sub
adc
shr
adc
adc
jno
adc
add
je
mov
pop
and
das
xor
push
dec
xchg
and
cmp
cmps
call
push
cmp
inc
out
add
jno
test
sar
cmps
jbe
int
cdq
xchg
(bad)
mov
lods
mov
or
inc
or
mov
and
les
cdq
data16
sub
cwde
and
jno
jmp
push
push
lods
cdq
dec
in
jmp
jns
cmp
stc
gs
mov
add
cld
sbb
or
jge
ficomp
pop
xchg
in
sub
pop
inc
into
cmps
sbb
lea
xor
xlat
mov
adc
mov
stos
push
cmp
sub
mov
xor
into
add
sub
ss
cmps
push
adc
push
sub
fidivr
lahf
(bad)
push
outs
sbb
mov
mov
leave
inc
sbb
jge
(bad)
jmp
jmp
inc
imul
mov
cmps
mov
inc
je
inc
or
jae
vpackuswb
or
inc
(bad)
imul
mov
xor
jle
sbb
ds
mov
xor
mov
jne
mov
push
imul
loope
push
mov
adc
mov
imul
push
into
cdq
movs
movs
js
loope
fnstcw
xchg
adc
pop
pop
enter
shl
and
aad
inc
addr16
push
push
stos
push
jmp
pushf
and
dec
mov
and
test
push
hlt
lods
rcr
mov
cmps
fidiv
aas
(bad)
push
dec
mov
fldcw
xor
xchg
mov
test
test
inc
scas
mov
leave
leave
mov
dec
push
repnz
pop
xlat
(bad)
jae
jmp
inc
out
ins
mov
clc
and
mov
sub
xchg
mov
shl
sbb
rcr
push
(bad)
fsub
mov
xchg
imul
out
arpl
push
sti
jno
jne
aaa
adc
mov
inc
out
scas
cli
cmp
in
mul
scas
scas
sub
in
mov
loop
cmc
dec
out
loop
push
push
cs
cmc
scas
inc
and
dec
mov
mov
add
sahf
repz
pop
jl
stc
rcl
add
movs
imul
xchg
add
mov
lock
pop
adc
repnz
das
inc
in
push
into
ds
mov
repz
xlat
jns
mov
or
inc
add
es
xchg
xor
repz
ja
hlt
aad
dec
inc
xor
rol
es
jg
push
push
pop
idiv
xchg
mov
icebp
outs
ror
sbb
outs
mov
pop
repnz
icebp
repnz
bnd
popa
call
daa
aas
retf
dec
shr
adc
jl
sbb
in
and
cmp
or
xchg
or
ret
inc
cmp
xchg
dec
pop
mov
sbb
test
sahf
pop
push
push
mov
sub
js
retf
sub
mov
mov
mov
add
xor
fld
out
addr16
xlat
fld
mov
push
push
and
mov
iret
test
rcl
das
and
push
fsub
imul
rol
in
xor
jno
iret
outs
inc
mov
pusha
inc
mov
lods
loopne
pop
(bad)
push
mov
push
test
loope
stos
pusha
(bad)
pop
ret
div
adc
(bad)
data16
pop
or
out
push
mov
and
les
cmps
lods
pop
push
push
mov
inc
rol
ins
in
cmps
cmp
pushf
call
sbb
mov
pop
jns
call
mov
dec
dec
xchg
lods
call
(bad)
jmp
sahf
out
iret
(bad)
push
pushf
mov
pusha
fisub
dec
pop
cwde
ds
call
(bad)
dec
mov
(bad)
out
cmp
jp
xchg
fidivr
adc
push
hlt
mov
(bad)
xchg
int
fcmovnb
stos
popa
dec
jmp
push
dec
push
push
or
and
cld
mov
stc
std
mov
repz
(bad)
mov
cmp
mov
mov
aaa
(bad)
lods
stos
mov
popf
mov
fnstenv
mov
inc
ja
and
jno
xlat
fcomp
jne
jmp
push
scas
pop
addr16
jmp
fdivr
mov
in
(bad)
(bad)
(bad)
cmp
add
push
push
and
fucomi
mov
push
and
sub
push
les
and
stos
cmps
jp
shl
sub
sbb
mul
jns
lds
xchg
stos
in
stos
shr
mov
cmp
add
into
jg
nop
cmp
push
adc
aad
cmps
int3
cmp
lods
sahf
push
lods
arpl
mov
jecxz
sub
mov
sub
jnp
stc
inc
push
in
and
xchg
jbe
bound
shr
dec
jmp
fmulp
jle
mov
movs
push
push
jo
xor
cmp
data16
pop
dec
fstp
std
xchg
loop
sbb
fistp
or
add
and
imul
push
add
xchg
inc
jg
shl
stos
jl
push
jns
sbb
mov
sbb
call
add
jp
xchg
shr
and
jns
mov
pop
xchg
add
sub
dec
ficom
call
js
jne
hlt
jns
push
rcr
aas
enter
xchg
pop
mov
push
mov
xchg
rcl
xchg
mov
mov
xor
sahf
pusha
iret
mov
cmp
sub
test
jnp
jp
cld
es
test
mov
inc
adc
mov
in
jg
je
sbb
leave
sbb
dec
or
sbb
gs
icebp
test
pop
jge
dec
nop
stos
popa
add
or
pop
xor
xor
ins
dec
mov
or
pop
push
sahf
or
daa
xor
cs
popa
mov
mov
retf
pop
mov
mov
jle
and
add
adc
jae
data16
pop
add
call
sub
out
(bad)
add
add
cdq
lods
cmp
popf
data16
es
cmp
test
mov
inc
pop
xchg
add
jg
mov
and
test
ins
fdivr
scas
mov
cmps
fbld
fdivr
adc
fs
xchg
xchg
int3
cmps
fst
add
or
push
mov
sub
scas
pop
popa
sbb
out
sbb
(bad)
ins
mov
mov
mov
mov
jae
mov
outs
sbb
cli
cmp
push
sbb
xchg
cmps
dec
inc
aad
call
jb
les
cli
jg
cld
dec
jmp
or
push
pop
ficom
pop
retf
pop
int3
inc
cmp
pop
shl
mov
fcom
mov
in
sbb
retf
mov
fdivr
inc
loop
cwde
mov
imul
pop
and
rcl
sti
sub
data16
xchg
or
cmps
bt
push
push
inc
cwde
sub
(bad)
fs
test
in
add
and
stos
cmps
mov
fst
addr16
mov
adc
dec
sub
out
push
mul
fld
dec
mov
dec
shl
aam
add
sbb
xchg
or
imul
rol
ret
jo
inc
stc
cmp
dec
xlat
dec
in
fist
adc
out
pushf
jnp
lock
mov
fstp
mov
dec
cli
into
sbb
(bad)
cld
jmp
gs
repz
push
inc
jno
push
imul
mov
call
mov
inc
dec
xchg
cs
sbb
outs
pop
(bad)
fldl2e
mov
sub
cmp
and
and
xchg
nop
lahf
jnp
not
or
paddq
add
pop
sbb
add
jmp
repz
sub
xchg
out
test
add
loope
sbb
je
cmp
in
cdq
sub
call
push
sub
imul
outs
jbe
(bad)
data16
(bad)
aad
sahf
push
ja
jo
push
add
lock
pusha
push
mov
xchg
or
xchg
cmp
test
jle
lods
inc
ficom
fcmove
jg
xchg
lock
xor
mov
out
and
xchg
(bad)
imul
add
scas
inc
sbb
scas
das
xor
push
sbb
sbb
mov
add
in
and
into
add
mov
mov
cwde
mov
popa
cld
cmp
in
js
cmp
lods
fs
cwde
pusha
cmp
(bad)
outs
jl
sar
lock
and
aad
xor
(bad)
enter
enter
imul
add
sbb
pop
inc
jne
jmp
sub
mov
js
push
cli
sahf
fisubr
scas
(bad)
fwait
xchg
jne
xor
cmps
pop
push
xchg
mov
pushf
add
xchg
lds
out
mov
pop
mov
in
mov
jmp
cmc
adc
pop
add
mov
jmp
cld
add
and
imul
cdq
mov
mov
or
data16
pop
jno
add
xchg
iret
leave
xchg
dec
test
iret
adc
mov
mov
push
push
dec
mov
mov
lods
scas
ss
add
jno
enter
cmps
lds
xchg
pop
adc
sahf
lea
mov
xchg
mov
push
data16
and
mov
mov
mov
les
jl
adc
mov
jl
push
bswap
sbb
inc
cmp
dec
dec
fucom
inc
sahf
and
pop
cwde
xchg
ss
cli
daa
push
fcmovnbe
shr
inc
(bad)
xrelease
scas
or
idiv
(bad)
mov
or
dec
aad
mov
dec
(bad)
(bad)
mov
fdivrp
(bad)
jmp
inc
inc
or
mov
aam
fs
mov
cwde
pop
js
nop
push
dec
scas
jmp
adc
or
out
and
into
movs
rcr
push
mov
outs
loopne
inc
lods
inc
or
data16
test
add
add
(bad)
pop
outs
pop
bound
das
push
adc
lahf
sahf
adc
cmps
call
sti
adc
mov
adc
mov
out
mov
rol
mov
retf
out
cmp
cli
std
xor
(bad)
jge
push
sub
xor
mov
add
adc
mov
out
push
pop
adc
sub
lock
jbe
call
popa
mov
cdq
push
fidiv
dec
imul
add
xor
xlat
or
or
mov
call
ss
push
mov
inc
inc
dec
pop
dec
in
in
jle
inc
push
add
xchg
aaa
loope
loop
stc
xor
mov
mov
out
or
add
mov
dec
sub
shr
hlt
push
add
in
sub
add
mov
int
xchg
add
jne
mov
add
imul
fwait
push
sbb
cli
mov
pop
mov
inc
mov
pop
jecxz
out
or
mov
std
and
add
sub
stc
cmps
xor
test
xor
icebp
push
jge
jmp
jae
jp
xor
ss
sahf
dec
and
das
pop
inc
push
sbb
or
xchg
rcl
mov
dec
mov
cmp
mov
or
loopne
out
mov
(bad)
fidivr
hlt
or
(bad)
mov
loop
aas
dec
dec
lods
stc
or
jl
or
xor
loopne
adc
mov
test
mov
jp
scas
jno
and
xchg
scas
push
ss
das
fcomi
xchg
int
outs
dec
add
mov
std
xor
jle
sti
and
out
mov
fisub
std
cmps
cld
sbb
addr16
loope
inc
sti
push
int3
pop
gs
or
xchg
sub
popf
xchg
outs
cmp
jne
imul
push
adc
sub
push
push
dec
ret
sub
xor
mov
jns
dec
and
bound
xor
into
mov
sbb
xor
dec
icebp
push
cdq
mov
inc
pop
mov
mov
sahf
mov
in
aas
es
aaa
mov
push
clc
pop
jb
jne
stc
sar
fwait
or
or
sbb
sub
into
test
sbb
scas
mov
pop
jnp
nop
shl
pop
xor
(bad)
fld
xchg
mov
adc
sub
dec
int
push
jnp
pop
in
pop
inc
fiadd
js
ins
sub
cld
div
ret
retf
call
sub
fld
push
pushf
cmp
(bad)
push
push
sbb
xchg
retf
xlat
xchg
adc
icebp
lock
inc
daa
or
mov
loope
sub
fstp
cli
inc
outs
sub
repz
add
out
xchg
sub
pop
out
push
stos
or
imul
jl
xor
repz
ret
jmp
das
dec
fbld
push
mov
gs
loopne
push
add
jmp
pop
xchg
fstp
xchg
les
pop
add
inc
(bad)
repnz
xor
mov
loope
loop
adc
daa
je
pop
leave
push
mov
sbb
jo
loop
sti
aaa
mov
or
(bad)
out
adc
and
jg
(bad)
mov
cmp
pop
sahf
ror
jno
mov
dec
sbb
lods
imul
rcl
and
es
div
outs
mov
cvtps2pd
jae
loop
mov
push
jecxz
xchg
push
xor
nop
les
pop
in
test
push
sub
adc
out
dec
mov
test
sub
mov
(bad)
mov
js
gs
jae
xchg
mov
and
div
dec
xchg
test
sbb
cdq
int
retf
out
ds
jno
xchg
js
bt
loope
call
mov
inc
and
cwde
es
in
call
dec
stos
cli
(bad)
fisubr
cli
ja
mov
pop
gs
addr16
movups
pusha
cmp
out
and
pop
cmc
loop
cwde
xchg
in
and
in
mov
mov
xor
push
push
sti
stc
out
popa
int3
rol
leave
std
add
mov
and
(bad)
push
ds
icebp
jp
rol
jns
jmp
(bad)
fwait
stos
scas
push
in
shr
aas
pop
and
adc
test
xchg
out
repz
lock
fwait
scas
outs
push
mov
dec
xor
and
push
div
jl
fs
xchg
in
push
pop
popf
adc
popa
adc
jmp
shl
xor
pop
inc
call
and
hlt
cmps
adc
jno
or
sti
out
int3
lock
pop
pop
in
jmp
lods
mov
pop
xchg
aas
sbb
or
pop
sahf
xchg
hlt
out
test
add
sub
sub
out
mul
call
and
jle
fimul
push
push
xor
fadd
inc
and
jo
lods
mov
mov
jbe
push
or
xor
lahf
hlt
cmp
into
test
or
loopne
ja
outs
sar
mov
clc
push
pop
cli
and
hlt
repz
jmp
not
mov
mov
dec
pop
clc
das
icebp
inc
inc
jg
ja
addr16
imul
popa
sub
rol
sub
outs
push
adc
jl
mov
add
mov
inc
pop
daa
cwde
push
lea
popa
call
in
loope
rcr
fst
push
loope
adc
mov
xchg
cdq
ret
mov
lods
movs
pop
push
cld
adc
dec
cmp
mov
hlt
cwde
fisub
mov
and
addr16
pushf
dec
icebp
xchg
adc
pop
inc
cmp
aam
adc
or
adc
inc
inc
xor
push
int3
push
movs
movs
jmp
xchg
dec
iret
in
push
dec
rcl
or
jg
sub
call
adc
leave
sti
mov
pop
inc
(bad)
ret
les
xor
daa
or
rol
ret
ss
aaa
lds
rcl
jbe
cmc
loope
lahf
and
shl
cmp
nop
jl
cmps
rol
push
xor
push
gs
mov
add
jne
xchg
aam
jp
xchg
movs
test
xor
bound
aas
push
fdivr
pop
jns
dec
(bad)
imul
mov
xor
out
mov
cmps
aaa
test
xor
push
imul
(bad)
add
mov
mov
loop
ins
mov
sti
out
mov
fs
not
shr
push
add
push
ins
aaa
pop
jne
adc
pop
xchg
push
mov
add
(bad)
add
xchg
pushf
shl
inc
cmc
sbb
addr16
or
xchg
mov
stos
cmps
popa
push
push
cwde
and
pop
mov
enter
xchg
pop
jo
call
mov
or
pop
pushf
lds
pop
lods
cmps
push
cdq
addr16
je
pop
(bad)
loop
pop
out
sub
sub
sbb
mov
js
mov
cmc
sub
ss
mov
push
ins
sub
cmp
adc
fwait
push
scas
jns
fld
pusha
push
retf
dec
(bad)
imul
xchg
xchg
xor
mov
xchg
push
adc
imul
and
inc
popa
mov
rcr
jle
sbb
loop
loop
dec
mov
icebp
inc
addr16
sub
add
push
loope
shl
adc
dec
xchg
mov
pop
cmp
fs
jecxz
test
mov
retf
(bad)
cmp
mov
bound
jge
adc
ss
xor
rcl
ja
cmps
test
fldcw
jmp
pop
daa
push
jnp
add
loope
fiadd
stc
add
push
(bad)
(bad)
and
aaa
xchg
jp
sbb
jb
xchg
sub
add
add
xchg
dec
add
aam
pusha
jb
push
jae
dec
lods
mov
sub
cdq
inc
cmp
in
xor
sbb
push
dec
(bad)
shr
mov
pop
mov
xor
or
leave
mov
and
mov
inc
ror
sar
mov
std
jmp
and
aad
addr16
popa
xor
std
push
cmc
and
sub
xchg
jae
jle
inc
and
(bad)
out
es
push
sahf
imul
jb
jnp
ds
rcr
jo
into
pop
jmp
std
enter
out
aam
dec
push
cmps
call
xchg
rol
or
jmp
ja
ss
sbb
fcom
sbb
xchg
or
daa
push
in
and
fcmovnbe
fs
push
or
mov
pop
mov
repz
mov
xor
pusha
dec
icebp
push
push
movs
cmp
mov
aas
sar
jp
and
jge
shr
add
inc
stos
pop
push
jb
outs
lock
les
test
dec
lods
jge
adc
leave
sub
mov
mov
in
(bad)
jmp
sti
dec
mov
dec
js
fsubr
dec
xchg
mov
lods
xchg
sahf
pop
idiv
loopne
bound
in
movs
bnd
mov
retf
jecxz
jp
js
ds
in
gs
(bad)
mov
call
movs
dec
mov
mov
and
push
pop
sub
aad
loopne
repz
stc
call
fdiv
or
and
popf
daa
mov
test
(bad)
mov
setle
lea
out
sar
cmp
jno
jbe
lock
fs
mov
sub
gs
and
push
stos
and
cmp
push
mov
in
xor
les
dec
ret
in
jecxz
jnp
pop
fadd
adc
xchg
lods
mov
mov
add
dec
inc
adc
fnstenv
retf
jle
mov
mov
and
out
dec
sub
aam
icebp
sbb
xchg
out
xchg
retf
jg
sub
jmp
sahf
jmp
scas
retf
xchg
sub
inc
movs
sub
jbe
sbb
adc
xor
cmc
sbb
movs
in
mov
inc
mov
imul
(bad)
sbb
dec
sar
std
es
int3
aad
int3
push
cmp
xchg
sbb
fadd
push
aam
and
pop
fldenv
push
mov
pop
fiadd
sbb
mov
or
cdq
scas
ins
sub
jl
movd
lods
es
mov
shl
call
and
cmp
push
dec
jp
sbb
cmp
jmp
xchg
js
(bad)
adc
mov
test
jmp
push
xchg
lods
outs
dec
test
jecxz
mov
(bad)
pop
mov
xor
xchg
ret
xchg
icebp
fsubrp
in
cmp
cmp
gs
pop
imul
and
push
js
inc
fwait
add
(bad)
loope
test
in
iret
push
ins
mov
test
cmps
mov
or
add
sahf
cmp
adc
aad
inc
inc
and
lea
cwde
in
jb
pop
rcl
add
jg
push
out
mov
xchg
or
mov
sbb
je
das
mov
sbb
mov
or
sar
leave
cli
ror
mov
les
sub
mov
cmp
mov
js
fs
adc
call
push
adc
push
dec
dec
cmps
xchg
ss
dec
int
sbb
mov
xchg
aas
jmp
pop
icebp
loope
pop
jge
call
sbb
push
cmp
repz
movs
(bad)
in
aas
or
mov
ror
adc
pop
jecxz
aam
out
sub
mov
(bad)
outs
or
sbb
mov
pusha
ja
cld
movs
ret
(bad)
stc
xor
sbb
ret
mov
sbb
add
pusha
add
sub
loope
or
xchg
enter
iret
push
add
aaa
mov
sub
stos
pop
test
add
and
(bad)
xchg
je
jmp
xor
xor
push
push
call
inc
shl
adc
push
ret
mov
pop
ror
dec
sbb
std
imul
xchg
push
adc
retf
add
std
cmps
pop
add
ins
sub
adc
sahf
xor
test
cli
mov
dec
pop
(bad)
jno
jns
test
gs
push
in
cmp
mov
and
into
xor
cli
jb
push
nop
ficomp
pop
retf
mov
mov
cmc
adc
(bad)
repz
mov
inc
mov
inc
mul
ss
mov
push
pop
inc
jns
repnz
test
mov
js
iret
mov
mov
pop
sar
or
add
cmp
aam
ins
outs
repnz
aaa
iret
fiadd
adc
inc
sahf
or
clc
dec
add
cmp
jbe
add
pop
push
jp
sbb
and
je
imul
neg
fistp
(bad)
cli
mov
mov
mov
jnp
jmp
mov
imul
and
outs
cmc
dec
jmp
push
rol
jns
dec
mov
imul
in
push
pop
mov
xor
lea
xor
scas
hlt
push
movs
bound
mov
ret
in
xlat
push
mov
test
out
bound
rcl
xor
imul
into
loop
push
bound
mov
cmps
xor
stc
push
push
call
cmp
popf
mov
lods
fcomp
push
xchg
out
test
push
inc
push
mov
inc
dec
jp
add
lahf
out
jl
iret
and
cmp
mov
jmp
cmp
xor
adc
sbb
call
ss
imul
fnstenv
test
push
iret
out
xchg
add
push
mov
mov
xchg
push
stc
aaa
repz
push
push
mov
scas
mov
pushf
in
dec
pop
cwde
xor
cmps
dec
(bad)
not
movs
leave
xchg
xor
adc
adc
jnp
inc
fs
mov
add
(bad)
or
sbb
jecxz
out
mov
mov
jns
mov
mov
loope
sar
(bad)
pop
jnp
sbb
cwde
pop
push
test
xor
ja
cmp
out
into
stos
in
cmp
pop
sti
in
clc
(bad)
push
cwde
lahf
sub
iret
inc
sub
adc
aad
rcr
mov
scas
mov
stos
arpl
cmp
loop
sub
imul
ret
aad
and
pop
xor
out
(bad)
gs
ret
push
pop
fist
cmp
push
mov
addr16
push
pop
js
fcomp
adc
icebp
cmp
movs
loop
loope
push
pop
scas
bound
or
fild
(bad)
dec
mov
fwait
cld
out
pop
pop
test
outs
daa
arpl
pop
add
ret
pop
fld
sahf
or
pop
pop
lods
dec
fmul
icebp
jmp
aaa
mov
jno
inc
movs
mov
mov
jbe
out
sbb
cmp
adc
push
test
aam
mov
(bad)
mov
or
iret
lock
add
xchg
out
(bad)
pop
aam
push
xor
aaa
xchg
ins
sub
add
sub
daa
fsub
push
pop
into
mov
repnz
test
adc
or
pop
push
aas
nop
cwde
xchg
add
mov
xchg
shl
mov
cvtdq2ps
scas
sub
cmp
or
inc
cs
rcr
push
dec
xchg
xchg
push
push
hlt
rcl
mov
cmp
addr16
jnp
and
dec
xchg
pop
gs
push
mov
jbe
mov
mov
jbe
sbb
sub
push
cmp
ror
xchg
xor
push
jno
pop
xchg
pop
pop
push
stos
sub
mov
shl
pop
mov
adc
dec
sub
jb
(bad)
push
mov
loop
bnd
sbb
mov
fild
jno
aas
sbb
sub
pop
div
aad
jmp
pop
xchg
mov
pop
retf
adc
or
mov
mov
jle
pop
dec
out
call
call
fmul
jae
(bad)
jb
movs
sbb
sub
pop
imul
cmp
add
lods
in
cwde
frstor
add
xchg
add
sub
(bad)
pushf
jmp
cdq
movs
mov
mov
(bad)
mov
aam
xchg
mov
(bad)
fadd
inc
jns
rol
lods
(bad)
or
dec
jl
push
fadd
inc
nop
movlpd
sub
jg
xor
sahf
mov
aam
pop
add
cli
adc
xchg
mov
xor
mov
adc
and
mov
into
inc
clc
sbb
mov
pop
add
jmp
sub
and
shl
mov
rcr
dec
mov
out
push
mov
mov
add
push
out
scas
dec
stc
push
fs
out
pop
dec
mov
or
daa
adc
(bad)
in
mov
lds
dec
ret
mov
cmps
dec
sti
iret
mov
lds
stos
ja
lods
and
xchg
add
cmps
jle
sbb
in
repz
psubusw
ja
xor
pop
push
retf
adc
mov
sti
je
cdq
addr16
mov
inc
test
pop
and
test
mov
test
lds
leave
les
or
lea
imul
mov
out
xchg
mov
push
rcl
sub
xor
jmp
cs
push
mov
mov
jg
cmp
fwait
push
sbb
fidiv
loope
inc
dec
scas
jl
mov
sbb
adc
js
sub
jo
js
vptestnmw
lds
cwde
and
fiadd
aam
xor
and
cwde
mov
outs
sub
sub
jne
lods
jb
pop
daa
pushf
and
mov
das
adc
lods
sti
popa
sub
std
cs
cmp
or
sub
sbb
mov
mov
cmp
push
aas
loop
pop
pusha
sbb
sbb
in
pop
mov
mov
movs
popf
aad
jecxz
mov
inc
xor
xchg
add
lds
jmp
push
loope
cmp
lds
(bad)
imul
fwait
outs
sbb
pop
fistp
js
ret
push
push
in
adc
push
(bad)
call
cmc
jmp
out
mov
retf
pop
lods
inc
pop
popa
add
push
lock
sbb
dec
jb
out
sbb
mov
test
adc
ins
xlat
and
and
adc
mov
jb
into
jmp
and
mov
mul
ja
data16
jne
lahf
fsubr
call
cmc
out
cmc
js
inc
(bad)
dec
adc
mov
mov
ret
ins
in
lock
sbb
les
int3
jbe
add
jmp
sbb
pop
jne
iret
lods
mov
adc
pushf
jno
jp
bound
xor
xchg
mov
cwde
push
inc
imul
and
(bad)
add
xchg
mov
xor
sub
jle
jnp
xchg
sti
pop
xor
ret
jg
xor
imul
mov
push
sub
cli
fs
push
cmp
xor
movs
inc
jo
pop
cmc
(bad)
cld
sub
mov
scas
or
inc
(bad)
ror
pop
nop
fidivr
push
lds
mov
xor
frstor
dec
repz
and
leave
stos
dec
inc
mov
jno
ret
call
call
cmps
mov
and
sub
mov
mov
lock
ja
popa
aaa
push
in
mov
in
popa
jne
mov
(bad)
out
jg
sub
in
dec
mov
cld
adc
(bad)
ds
jbe
enter
je
cmc
inc
and
xchg
rcr
and
push
mov
cmp
mov
ds
data16
test
pop
xchg
jne
and
mov
pop
xchg
mov
xor
add
movs
jns
fsubr
jmp
mov
adc
inc
fcomp
xchg
ss
sahf
out
cmp
jbe
xchg
jns
inc
add
aas
xor
ret
or
popa
repnz
out
xchg
dec
mov
in
int
hlt
mov
cmp
inc
retf
inc
cmp
dec
sbb
in
add
add
adc
add
dec
je
ds
cmp
rcl
mov
(bad)
mov
aaa
and
pop
push
stc
sbb
call
icebp
mov
test
hlt
sub
sbb
pop
add
hlt
into
sub
inc
pop
scas
add
ror
mov
in
jno
lock
sub
and
sbb
dec
ret
push
pusha
and
jno
ret
pop
arpl
or
push
pusha
mov
and
mov
call
ja
ficomp
mov
mov
pop
cmps
or
movs
add
mov
mov
gs
mov
test
retf
dec
xchg
outs
repnz
popa
dec
cmp
mov
int
sub
sub
mov
sar
and
inc
xlat
or
gs
loope
(bad)
dec
xlat
cli
and
sti
sbb
lods
cmc
call
les
xchg
dec
mov
jne
out
test
dec
not
sub
cs
or
adc
stos
(bad)
mov
std
cmps
push
xchg
lds
dec
fcmovnu
xor
test
shr
out
dec
popa
cmp
int
fnstenv
or
outs
cli
test
add
fadd
jmp
cmc
ja
fwait
pop
and
popf
sub
fstp
les
test
xor
xchg
mov
fdivr
adc
and
fwait
sub
(bad)
sbb
push
daa
pop
test
xchg
mov
sbb
jmp
push
test
ret
call
int
sub
mov
push
out
cwde
aaa
outs
dec
mov
mov
(bad)
pop
xchg
mov
sbb
inc
(bad)
je
xor
push
push
nop
sbb
test
pushf
xchg
inc
pop
push
std
sbb
mov
mov
add
(bad)
push
shr
or
sub
setp
mov
repnz
ins
test
mov
fidivr
sbb
lahf
aas
or
or
xlat
cmp
leave
dec
xchg
mov
cmp
arpl
ds
mov
test
in
lods
jb
cmp
jmp
xchg
es
fwait
add
dec
rcl
and
cmps
pop
inc
es
ja
dec
add
jns
cmc
daa
repz
push
jle
adc
jge
adc
add
or
fisubr
ss
cli
xor
(bad)
shl
inc
ins
pop
jne
jno
dec
cld
clc
imul
mov
scas
imul
dec
and
xlat
jle
push
lock
lods
int
or
and
repz
pusha
jecxz
in
(bad)
in
pop
or
js
shl
popf
pop
xor
movs
icebp
push
inc
mov
push
xor
scas
add
adc
cs
in
sbb
shl
ret
jnp
sub
xor
push
cmp
fiadd
ins
popa
lods
pop
push
mov
aas
stos
test
mov
js
js
push
cmp
sub
cwde
scas
in
xor
xchg
fstp
(bad)
popa
jne
pop
sub
mov
push
jbe
or
sub
add
pop
pop
adc
daa
lock
pop
xchg
fisubr
push
pop
mov
mov
mov
out
add
lods
outs
mov
add
and
ds
ss
leave
cmp
mov
je
xchg
pop
in
inc
xor
out
and
cmp
or
mov
push
or
lods
pminsw
outs
or
ds
pushf
lods
movs
lea
xlat
cmp
inc
idiv
xor
jmp
add
cld
(bad)
popaw
add
shr
imul
xchg
retf
mov
neg
cmps
gs
mov
cmps
lahf
jp
in
cmp
pop
pop
pushf
dec
pushf
jl
bound
jecxz
mov
adc
mov
shl
dec
lea
jmp
xchg
adc
push
scas
inc
mov
repz
int3
addr16
adc
cli
push
inc
mov
add
es
sbb
cmp
(bad)
mov
mov
cmp
hlt
pop
inc
outs
dec
repnz
or
ins
and
std
inc
mov
cmc
addr16
sbb
xor
cmp
call
js
jle
sub
int3
fwait
push
out
mov
adc
bound
iret
mov
sub
jmp
pusha
sub
inc
pop
sbb
adc
xchg
inc
inc
sbb
aad
push
jb
es
push
pop
out
pop
data16
mov
push
mov
push
retf
cmp
xchg
mov
leave
pop
sub
loop
cmp
adc
xor
aad
sbb
sbb
jecxz
fidiv
movs
mov
retf
cld
(bad)
(bad)
outs
fwait
cdq
mov
dec
aad
and
aas
xchg
hlt
shr
jmp
and
(bad)
loopne
clc
stos
dec
sbb
adc
jae
scas
adc
dec
inc
push
call
mov
and
jmp
(bad)
(bad)
adc
jl
cmc
ja
lds
js
sub
icebp
xlat
jne
fcmovne
mov
bound
stc
ins
cld
lahf
push
movs
xchg
(bad)
mov
out
jae
movs
mov
and
cmp
cdq
sub
mov
pop
xor
call
js
retf
lea
or
ror
adc
adc
sahf
adc
xor
jns
sub
xchg
jecxz
jbe
cmps
cmp
(bad)
mov
push
in
xchg
dec
push
cli
int
jmp
pop
push
xor
mov
jecxz
mov
or
shr
xor
mov
fistp
pushf
fld
sub
out
jne
repz
pop
xor
pop
(bad)
xchg
std
or
push
fild
jns
dec
cmps
sbb
push
cmp
add
dec
call
push
push
cmp
jge
loopne
mov
(bad)
retf
xor
jg
dec
cmps
test
data16
lods
add
xor
(bad)
dec
push
mov
mov
inc
pop
push
adc
or
push
mov
call
loope
test
scas
adc
adc
pushf
lea
in
pcmpgtw
jo
jns
mov
out
mov
rcr
mov
mov
xchg
retf
out
jnp
imul
sub
mov
pushf
and
inc
mov
sub
fldenv
mov
jnp
cmp
data16
jmp
cmps
fs
aad
(bad)
(bad)
js
add
pop
leave
aas
repz
enter
cmp
aas
mov
je
mov
ins
std
jmp
pusha
clc
xor
cmp
popa
fsub
inc
hlt
pop
dec
hlt
adc
inc
in
cdq
pop
dec
jecxz
pop
inc
sbb
sbb
fisub
sub
fnstcw
dec
lea
xchg
jge
std
xchg
cmps
mov
(bad)
xchg
icebp
fld
stos
add
lea
mov
xor
jbe
int
add
inc
push
mov
arpl
push
mov
push
imul
clc
nop
call
push
(bad)
into
fadd
std
pop
adc
add
loopne
cmp
push
push
es
sub
loop
jns
dec
jae
les
jl
mov
sub
pop
jb
dec
inc
idiv
adc
adc
sub
jb
pop
aam
sbb
push
push
jne
mov
cmp
daa
or
mov
mov
stos
stc
jmp
mov
adc
(bad)
rcl
inc
sahf
inc
jp
jp
adc
xor
mov
shr
sbb
rcl
repnz
mov
push
sub
int
ja
movs
daa
jmp
push
mov
xor
test
or
push
and
fs
pop
test
adc
inc
ins
repz
xor
aam
mov
movs
stos
jb
scas
mov
movs
ret
fcom
fstp
push
add
adc
into
mov
mov
and
push
nop
mov
jno
mov
fdiv
lods
xchg
mov
sbb
sub
adc
fmul
pushf
xchg
sub
je
shl
jg
(bad)
jns
ret
cmps
lahf
mov
push
dec
int
js
mov
xchg
mov
pop
sbb
aam
mov
sub
cmp
cwde
out
cmp
ficom
jo
push
xchg
sbb
jno
add
imul
jge
test
int
in
addr16
xor
loop
adc
adc
stc
stos
xchg
test
jl
mov
pop
mul
mov
add
bound
pop
sub
sbb
test
aaa
xor
and
cdq
add
push
inc
push
loope
mov
popa
add
call
cli
aad
mov
xor
cli
add
clc
jne
mov
mov
dec
inc
mov
(bad)
out
xor
loopne
lds
retf
call
add
ret
cld
and
out
rcl
add
pushf
inc
fnclex
cdq
pop
push
std
xlat
das
xchg
sbb
shl
mov
dec
and
mov
or
(bad)
fidivr
xor
out
call
xor
std
xchg
sbb
ret
fistp
rcr
ins
bound
push
mov
mov
cmp
push
xchg
dec
fadd
stos
sub
add
lahf
mov
aas
aaa
and
in
add
mov
pop
test
push
hlt
rol
cmp
xchg
inc
ror
mov
xcrypt-ecb
cmps
or
jle
inc
fdiv
lds
call
mov
fisub
int3
mov
mov
jne
sti
dec
movs
fdiv
rcl
mov
jns
mov
add
aaa
jno
repnz
int
popa
mov
push
icebp
fld
bound
xchg
sub
and
jp
fs
lods
mov
sti
icebp
shr
or
mov
enter
and
je
outs
inc
call
popa
sub
pop
pop
dec
dec
lods
cmp
lea
(bad)
enter
or
mov
faddp
in
js
sahf
in
shl
(bad)
cmp
pop
sub
adc
push
dec
cmp
pop
sub
loope
mov
inc
jmp
sub
add
xchg
add
sar
mov
xlat
push
mov
cwde
hlt
scas
inc
or
push
ins
js
jmp
ja
mov
fs
pop
jp
or
xchg
jae
xor
xchg
and
pop
mov
dec
cdq
fadd
test
fld
mov
add
or
das
adc
mov
fist
xor
xor
lds
add
add
adc
inc
pushf
add
jp
fsub
xchg
popf
xchg
in
test
jp
outs
xchg
dec
mov
mov
scas
adc
repnz
imul
int
jne
mov
jmp
cmp
test
test
popf
call
add
ss
or
gs
mov
or
bnd
aam
add
call
xor
push
nop
xor
popf
adc
std
add
push
clc
adc
pop
je
xchg
and
jg
dec
fsubr
cmc
xor
out
xchg
scas
jae
out
jno
dec
and
and
add
sub
mov
jg
mov
aad
mov
fmul
lahf
ins
xor
repnz
sub
aas
jmp
mov
gs
and
ficom
stos
sar
int
and
fstp
and
ffree
sar
mov
mov
cmp
jmp
(bad)
mov
push
jp
adc
push
pop
mov
add
pop
push
mov
lock
in
pusha
mov
xchg
retf
add
fstp
adc
test
sbb
retf
xor
push
and
jns
dec
test
out
call
in
popf
fidivr
and
mov
inc
mov
in
test
sbb
xchg
mov
ja
xchg
sub
and
aas
mov
pop
inc
ins
cwde
sbb
loope
gs
jbe
retf
scas
into
mov
outs
jg
pop
push
mov
mov
pushw
and
rcl
outs
stc
call
int
loopne
(bad)
std
ins
push
out
es
mov
in
push
xor
pop
imul
sub
jo
idiv
or
cmp
or
push
pop
dec
shl
inc
inc
(bad)
and
adc
mov
sbb
cmps
call
les
sub
pusha
sub
prefetchnta
(bad)
adc
push
mov
xor
das
mov
cmp
loopne
out
mov
and
sbb
imul
fld
loop
out
mov
mov
mov
push
dec
int3
inc
call
push
mov
sbb
addps
mov
scas
neg
aaa
jg
cmp
repnz
jg
sbb
jmp
mov
idiv
xor
jnp
loopne
aad
lahf
in
sbb
dec
push
sbb
ins
xchg
xchg
push
(bad)
test
cmp
imul
dec
sbb
loope
add
sar
fild
fild
je
mov
sub
imul
add
or
pop
mov
pop
stos
cli
aam
sbb
xlat
xchg
push
movs
inc
dec
mov
je
xor
jle
xchg
mov
push
and
inc
adc
ja
leave
mov
jae
xchg
ret
mov
(bad)
aaa
or
sahf
mov
mov
out
push
push
repz
xor
cmps
jns
mov
pop
mov
loope
xchg
mov
xchg
and
ss
and
popf
or
pop
jnp
mov
lock
mov
cmp
or
arpl
push
inc
pop
cmp
xor
pop
out
lods
dec
ins
cwde
jmp
jmp
cld
in
dec
mov
or
push
repz
in
inc
(bad)
and
outs
dec
fcomi
push
js
and
ds
bound
scas
imul
sub
jns
fadd
jb
mov
popa
pop
dec
sub
loope
in
enter
or
std
jo
lock
sbb
add
jl
loop
cmp
xor
test
jnp
not
cmp
jge
pop
add
sti
lods
js
jmp
mov
pop
push
fcom
daa
retf
stc
xor
sbb
sub
mov
push
inc
push
push
imul
push
outs
sub
xchg
pop
out
ds
jmp
mov
lods
xor
imul
mov
push
sahf
shl
(bad)
jno
cs
addr16
mov
xlat
ins
xor
into
mov
xchg
inc
imul
std
out
rol
fst
retf
sbb
sbb
mov
lods
inc
(bad)
rcr
fwait
pop
sub
cwde
stos
mov
adc
add
ds
repnz
push
hlt
or
or
jne
pop
(bad)
(bad)
sub
dec
push
pop
data16
jecxz
push
out
fcom
sub
cmp
mov
add
or
and
add
mov
cli
xchg
xchg
int3
cs
xor
push
and
(bad)
(bad)
mov
int3
loope
(bad)
dec
add
pop
ins
mov
jecxz
or
out
mov
xchg
into
aam
jmp
retf
push
in
leave
mov
add
fs
int3
sar
sbb
mov
ret
jl
push
or
stc
test
retf
test
mov
lods
pop
cmp
pop
(bad)
xchg
into
jmp
jae
and
adc
loope
xor
mov
call
repnz
imul
ret
jno
mov
jo
call
adc
out
pop
call
addr16
loop
mov
mov
sub
mov
mov
dec
sar
outs
xor
jns
pushf
loopne
push
jge
dec
xchg
inc
fisub
push
jmp
dec
fisub
das
jnp
cmps
mov
int
push
pop
(bad)
cmps
repz
(bad)
movs
pop
mov
push
sub
rol
movs
or
jo
(bad)
rol
loop
pop
sti
adc
das
add
into
dec
xor
pop
lods
neg
mov
push
fiadd
push
inc
xor
int3
mov
add
sub
sub
xor
arpl
test
mov
inc
mov
hlt
fst
sar
int
xor
push
jmp
push
mov
out
sub
mov
pop
jae
pop
enter
cmp
loopne
cld
mov
dec
mov
int
out
sub
retf
in
sti
mov
pop
mov
cmp
xor
aad
sub
dec
jnp
fnstenv
retf
div
int
loop
push
test
jg
push
es
cli
imul
add
fnsave
inc
sub
mov
shr
repnz
push
pop
cld
aas
xor
cmp
push
sbb
ror
xchg
or
arpl
xchg
add
lahf
ror
ret
cmp
mov
or
jo
sti
pop
(bad)
es
arpl
add
lods
xor
sbb
mov
scas
rol
sbb
ret
xchg
or
sbb
in
std
enter
mov
add
jmp
lahf
ret
xchg
fadd
add
shr
shl
inc
push
cdq
push
(bad)
jg
aas
sbb
cwde
movs
in
mov
aaa
sbb
jnp
mov
or
dec
push
movs
cmp
and
sbb
call
or
or
fisub
sbb
xchg
push
push
fisttp
mov
mov
fcmovne
std
clc
jmp
mov
mov
pop
int3
sbb
jbe
std
je
sub
arpl
aam
push
xor
clc
ja
(bad)
xor
dec
icebp
out
mov
sbb
fst
or
or
cwde
popa
mov
mov
fst
pop
add
into
(bad)
cmp
jle
ds
pop
mov
mov
imul
dec
mov
aad
pop
aam
xor
cmp
mov
imul
imul
sbb
push
sub
sbb
retf
outs
fwait
pop
rol
and
xlat
int3
pop
dec
add
mov
xor
imul
mov
mov
repnz
out
aam
ins
scas
mov
and
repz
enter
dec
ins
int3
loop
cld
ret
outs
mov
pop
dec
mov
(bad)
cwde
xor
addr16
add
sub
popa
mov
mov
aad
or
pop
stos
push
loopne
jle
aad
scas
pop
ret
push
dec
std
xchg
pop
dec
push
(bad)
fmul
and
test
imul
mov
scas
scas
adc
scas
fbld
or
fdivr
dec
shl
jecxz
ins
div
mov
pop
jnp
or
bound
push
out
imul
inc
xor
push
and
mov
pop
(bad)
sbb
jns
mov
inc
dec
cmovs
cmp
fs
je
scas
fcomp
sub
inc
into
push
call
adc
xchg
shl
repnz
cmp
sub
bound
fstp
sub
mov
aas
je
pop
pop
cmp
xor
push
hlt
outs
xor
sub
fldlg2
movs
mov
mul
or
and
popa
call
or
(bad)
bound
adc
mov
aaa
inc
mov
xchg
stos
fld
retf
out
aam
mov
fimul
push
sub
cmp
retf
mov
popa
mov
xor
xor
lahf
mov
dec
jns
test
xchg
mov
pop
fcmovb
push
loop
stc
repz
xor
ins
lods
xchg
or
or
cmp
fwait
adc
mov
jnp
in
dec
out
mov
je
add
sti
sbb
xor
sar
test
xor
pop
mov
and
setno
mov
push
xor
pop
mov
(bad)
push
aaa
outs
mov
loopne
es
test
movs
shl
mov
cs
add
jns
clc
adc
movs
movs
(bad)
pop
mov
xchg
mov
(bad)
out
(bad)
add
adc
je
xlat
push
sbb
iret
push
mov
mov
(bad)
mov
cmps
call
js
(bad)
jp
cmp
iret
mov
or
pushf
mul
test
pop
add
inc
test
or
dec
(bad)
repz
push
rol
ret
cli
out
pop
cmp
pop
idiv
lods
aas
dec
rcr
leave
dec
adc
imul
mov
cmp
sbb
push
jmp
mov
adc
fisttp
xchg
out
push
inc
rcl
dec
aas
mov
shr
and
mov
es
add
inc
inc
mov
mov
or
loop
cwde
xor
(bad)
xor
dec
shl
cmp
pusha
xchg
pop
arpl
sub
out
dec
xchg
std
fstp
imul
ins
shl
mov
pop
inc
dec
iret
ins
imul
inc
mov
jmp
arpl
adc
mov
stos
scas
pop
in
fninit
aam
ret
sub
or
jae
jmp
or
fnstsw
xlat
lods
cmps
xor
adc
and
xchg
mov
outs
fild
aas
popf
stc
mov
xor
cmps
pop
xor
test
sub
ins
mov
jecxz
inc
add
scas
div
shr
cmps
and
xchg
repnz
fcmovb
movs
inc
mov
es
mov
repnz
(bad)
imul
std
into
inc
inc
jp
mov
repz
fisub
mov
xor
fstp
jecxz
cmp
pushf
add
inc
int
cli
shl
(bad)
cmp
test
ja
jns
jnp
xchg
pop
mov
mov
test
test
push
or
fsub
rol
jns
xor
xchg
xchg
xchg
jo
movs
cmp
jmp
adc
inc
xor
out
lahf
aaa
int
mov
push
or
jl
(bad)
outs
and
cli
inc
bound
fs
cmps
push
cmps
or
dec
fild
out
cmps
inc
je
loopne
mov
lds
mov
(bad)
in
loope
out
xor
movs
loopne
jae
pop
lds
jge
jae
and
cmp
stos
jnp
out
ret
sbb
xchg
popf
sbb
pop
xchg
das
into
mov
pop
ins
lds
arpl
mov
adc
jl
jnp
(bad)
cmp
addr16
mov
clc
add
cmp
inc
cdq
sbb
dec
scas
in
cs
push
mov
sbb
and
iret
in
loope
and
inc
rcr
add
and
push
div
sti
imul
jbe
cwde
cmc
mov
outs
xchg
cmps
or
adc
hlt
mov
jno
stos
sbb
cmc
pop
popa
mov
mov
fdiv
mov
js
push
inc
(bad)
and
mov
adc
cmp
or
or
xchg
nop
xchg
inc
shr
or
jmp
call
das
ja
push
or
pop
inc
inc
sub
sub
test
movs
mov
jo
mov
scas
jecxz
scas
arpl
iret
sbb
dec
(bad)
mov
ror
pop
add
mov
inc
sub
fidivr
stos
add
adc
push
push
fsub
cli
xor
mov
cs
pop
test
mov
cld
or
mov
test
push
fdivr
iret
jb
adc
push
je
and
mov
cmp
xchg
call
(bad)
repz
shr
pop
(bad)
int3
arpl
es
pusha
cli
mov
cmps
dec
pop
cdq
pop
dec
add
les
lock
outs
popf
(bad)
jo
cld
jno
or
jnp
inc
jg
mov
jb
not
mov
loop
or
cmp
cmp
test
sar
jbe
repnz
mov
inc
mov
xchg
jns
in
mov
push
scas
cmp
fcom
push
inc
adc
dec
add
xor
sbb
sub
inc
call
(bad)
mov
sbb
sub
pop
xor
add
mov
clc
pop
xchg
xchg
in
fs
dec
mov
and
jo
shl
mov
cs
add
enter
in
xchg
and
add
push
js
cmp
xchg
enter
outs
neg
rol
lea
and
ja
xchg
push
mov
lods
loop
sbb
cmc
(bad)
mov
rcr
mov
sbb
arpl
test
les
(bad)
adc
push
mov
pop
out
push
popf
idiv
adc
retf
pop
mov
pop
sub
xchg
sbb
dec
cwde
(bad)
pop
movs
sbb
imul
or
int
and
cmp
push
mov
mov
cmps
dec
fidiv
adc
retf
cli
ret
cmp
cld
sbb
and
test
mov
aam
cmp
and
push
jle
je
in
jne
mov
ret
push
mov
sub
aad
stc
sub
mov
push
mov
jb
pop
push
test
mov
mov
cmp
les
rcr
add
add
and
push
mov
test
xor
stos
ret
xchg
xchg
sbb
retf
mov
daa
bound
push
(bad)
test
sti
ret
cli
or
jmp
shl
add
and
cmps
mov
fnstsw
popf
jmp
add
mov
push
xchg
std
leave
mov
shl
mov
fcom
pop
inc
addr16
test
or
sbb
sti
add
dec
add
sbb
out
lds
sub
call
sub
cwde
ror
push
xchg
je
xor
dec
rol
xor
jne
mov
sbb
inc
js
inc
stos
push
fmul
inc
fs
and
xor
int
jge
ins
push
mov
cmp
xor
pop
fucomip
loop
mov
and
cmp
lea
jp
mov
div
in
ror
sbb
pop
mov
out
repnz
fist
pop
fisttp
into
hlt
push
aad
mov
pop
or
daa
sbb
mov
sbb
retf
jmp
jg
mov
dec
mov
sub
ds
xor
call
add
clc
shl
jo
and
out
mov
das
loope
push
xor
pop
or
sub
cmp
jle
es
scas
(bad)
popf
sti
jnp
mov
pop
mov
es
sub
pop
push
shl
rol
xchg
xor
stc
jg
dec
cmp
or
jo
jle
inc
outs
(bad)
imul
movs
(bad)
fwait
icebp
mov
arpl
sar
pop
arpl
repz
mov
xchg
dec
push
in
and
adc
mov
jbe
js
inc
sar
sub
mov
sti
sub
pop
sbb
(bad)
sti
bound
sub
pusha
jmp
push
and
jmp
xchg
movs
stc
xchg
xor
adc
leave
inc
inc
mov
jl
xor
fwait
popa
int
adc
lods
or
push
push
adc
mov
shl
out
dec
das
gs
ins
imul
pop
cs
push
ins
imul
xchg
sub
call
mov
sub
xchg
sub
inc
jmp
jo
jp
in
inc
scas
push
es
inc
inc
stos
imul
add
vandps
(bad)
cmp
and
xchg
int3
sbb
cwde
cmps
ror
pop
cld
(bad)
movs
(bad)
cmp
mov
jo
push
aas
test
cmp
dec
cmp
mov
or
jg
inc
(bad)
inc
jns
cmp
test
dec
jmp
movs
sahf
xchg
and
dec
loope
fnstenv
loope
jmp
es
shl
aas
inc
xchg
sub
push
mov
mov
pop
mov
or
xor
mov
xor
lock
push
loope
xchg
cmps
iret
stos
xchg
call
retf
jnp
sbb
cmp
call
ins
aad
xchg
cmp
pop
repnz
icebp
sbb
je
scas
push
mov
icebp
jp
xchg
adc
jmp
mov
mov
iret
out
or
mov
inc
and
xor
cwde
sub
push
xor
scas
sbb
add
or
nop
pop
call
fstp
mov
push
xor
jmp
(bad)
push
shr
(bad)
cli
jge
lahf
mov
(bad)
push
call
xor
out
(bad)
or
call
inc
or
mov
shl
sub
bound
ret
inc
rcr
or
mov
mov
mov
call
loop
test
pop
in
mov
add
mov
sub
push
mov
xchg
xchg
xchg
fbld
dec
sub
(bad)
stos
and
or
fs
mov
loope
xor
sub
imul
call
push
dec
push
pusha
mov
outs
ja
and
jle
stos
nop
lods
push
mov
or
loop
inc
mov
aam
movs
dec
pop
lea
fs
dec
jecxz
loop
inc
jne
sahf
out
pop
pop
add
ds
push
imul
ja
cli
inc
cmps
or
push
pop
icebp
aad
and
ss
popa
ret
ret
or
xchg
fnstcw
inc
pop
xor
test
loope
dec
mov
xor
movs
into
call
mov
outs
and
dec
sub
jmp
sahf
rcl
std
or
or
mul
fnsave
mov
adc
test
mov
nop
mov
lahf
fimul
and
fwait
mov
xchg
aad
jle
push
test
loopne
xchg
pusha
bound
mov
xchg
(bad)
mov
ins
add
xor
in
pop
or
sub
ror
int3
jecxz
inc
jnp
ss
leave
not
fcmovu
out
lods
mov
mov
aad
enter
jmp
inc
(bad)
mov
mov
out
jmp
mov
inc
stos
add
mov
jl
xchg
pop
xor
sbb
mov
lods
adc
mov
pop
jmp
mov
sbb
jecxz
(bad)
xlat
jns
fild
les
mov
ss
sbb
cmp
pop
imul
dec
inc
mov
retf
(bad)
sbb
std
push
mov
rcr
add
push
inc
adc
xor
sar
pop
dec
sahf
fisttp
cs
push
ror
iret
mov
and
je
ins
icebp
inc
push
outs
cli
mov
mov
mov
test
jecxz
fwait
mov
pop
das
jae
rcr
lock
sub
popf
adc
mov
(bad)
loope
in
jmp
scas
sbb
fild
mov
stos
and
rcl
rcl
push
pop
cs
pop
pop
pop
mov
movs
(bad)
jl
cli
push
(bad)
cs
add
lock
adc
fbstp
retf
(bad)
stc
xchg
mov
cmp
sbb
aaa
pop
mov
loop
stos
retf
lea
inc
inc
add
mov
test
fdivr
repz
xchg
jo
das
pop
frndint
popa
fst
pop
cs
pop
(bad)
test
inc
fldenv
inc
or
and
int3
daa
dec
(bad)
(bad)
mov
cli
je
ja
push
pop
test
pushf
mov
in
fist
stos
call
or
push
(bad)
sub
int3
inc
push
daa
ficomp
mov
jns
mov
mov
mov
iret
sahf
push
sahf
out
je
xlat
out
imul
stos
or
scas
hlt
repz
adc
fsubr
bound
sbb
mov
mov
lock
mov
fadd
mov
mov
call
dec
dec
pop
dec
cmp
call
mov
inc
rol
or
xchg
xor
ret
pop
(bad)
xchg
xlat
dec
outs
cli
push
push
inc
fcomp
jb
ds
out
cmp
aam
iret
push
fisttp
jne
cld
je
mov
cmp
popf
push
movs
mov
(bad)
and
(bad)
adc
and
sub
mov
or
sbb
enter
pushf
pop
mov
test
and
frstor
inc
movs
nop
cld
out
test
pop
jbe
mov
and
fstp
pop
or
imul
mov
es
push
and
test
ja
xchg
xor
and
out
sbb
in
(bad)
cmp
stos
xchg
ds
out
sbb
ds
sub
jns
daa
jmp
cmp
ret
xchg
mov
leave
cmp
dec
mov
sbb
in
xor
out
dec
sub
popa
mov
sub
aam
in
iret
outs
xor
pushf
mov
xor
adc
imul
and
cmp
in
ror
sbb
xchg
cmps
shr
cwde
and
js
dec
mov
add
addr16
loopne
(bad)
nop
add
mov
cmps
push
push
popa
push
xor
sbb
dec
push
mov
xchg
add
push
mov
push
mov
cmp
bound
mov
or
mov
out
cmp
cwde
xor
xchg
adc
das
daa
pop
pusha
test
(bad)
adc
push
scas
bound
mov
pop
add
lea
xchg
sbb
and
dec
cmp
inc
inc
mov
fld
xchg
in
xor
jl
int3
iret
sbb
and
xor
mov
adc
dec
mov
inc
gs
push
push
and
xchg
movs
ins
push
retf
cmp
lock
ins
push
ret
or
(bad)
xor
xchg
and
adc
test
mov
jmp
adc
adc
cdq
cwde
xchg
xchg
dec
push
mov
sub
lods
clc
cwde
mov
scas
or
xchg
ss
loope
mov
clc
inc
enter
jl
add
mov
mov
jne
pop
xor
xor
cmc
dec
jne
xchg
aam
test
ds
call
mov
mov
arpl
push
push
call
ds
jmp
adc
imul
sbb
cmp
aas
js
nop
and
or
jne
cmp
sbb
retf
mov
adc
fstp
xor
rcr
jmp
mov
cmp
les
(bad)
mov
adc
xlat
or
les
outs
pop
outs
out
pop
(bad)
test
push
mov
or
cmc
int3
fsubp
dec
stos
xor
jns
jle
sub
cmp
fucomp
sub
out
dec
icebp
sub
ds
popf
call
stc
rcl
sar
and
das
out
sbb
push
adc
sahf
movs
or
mov
lods
lds
dec
scas
fsubr
mov
fmul
jns
stos
ret
lahf
add
retf
mov
mov
bound
mov
out
call
imul
or
sub
push
dec
shr
xchg
fimul
(bad)
js
jmp
or
pop
popa
call
inc
sbb
pop
pop
test
pop
stos
lock
mov
xor
stos
fisttp
lea
js
retf
hlt
aad
lock
out
ret
pop
in
xor
mov
jb
adc
mov
out
inc
jle
push
ins
mov
imul
fs
in
or
sub
sbb
add
pushf
jl
cs
shl
(bad)
jl
lods
cmps
push
fwait
sahf
fnsave
cdq
sbb
(bad)
and
cmp
and
inc
popf
pop
inc
adc
xchg
leave
rcr
shl
dec
sub
int
pop
loop
sbb
ins
call
adc
inc
push
inc
(bad)
dec
xchg
ret
sbb
leave
dec
outs
and
adc
inc
or
sti
xchg
and
mov
sub
fs
daa
outs
(bad)
out
sub
or
jecxz
dec
fidivr
std
sub
xchg
in
xor
in
jl
(bad)
cmp
nop
enter
fwait
jmp
lock
or
push
dec
add
add
in
mov
push
nop
test
xchg
loope
inc
sti
in
fisub
popa
loop
pop
mov
fs
stc
jae
inc
jo
ja
jl
add
sbb
mov
rcr
sbb
fadd
inc
or
repnz
in
(bad)
ss
sbb
movs
aaa
xchg
stos
lods
mov
jecxz
mov
xchg
ins
push
adc
cmp
aam
sbb
jp
test
loop
ss
sbb
pop
pusha
lea
leave
mov
sbb
jae
dec
rcl
enter
push
sbb
xchg
xchg
pop
aam
retf
(bad)
jnp
inc
sub
lock
or
clc
or
loop
fsubr
in
jecxz
aam
and
rcl
sub
sahf
or
lods
push
dec
test
mov
ret
loope
(bad)
cmp
adc
or
pop
ret
xlat
inc
shl
push
clc
jp
adc
shl
jecxz
xchg
pop
and
push
push
inc
cwde
jns
hlt
push
in
mov
ror
cmps
test
adc
or
cmp
fbstp
mov
retf
mov
cmp
rcl
or
ret
jl
jae
shr
pop
lods
adc
or
cli
and
jnp
aas
ins
popf
mov
and
fdiv
push
movs
scas
in
dec
adc
xchg
in
add
ds
fst
xchg
js
es
(bad)
adc
lods
mov
aam
or
fistp
ror
jge
mov
mov
shl
or
pop
clc
inc
test
inc
out
xchg
ja
mov
(bad)
pop
imul
icebp
pop
bound
fdiv
adc
xchg
dec
push
or
or
pop
mov
dec
sub
pushf
lock
sub
cmp
fldenv
cmp
xor
xchg
push
lahf
movs
adc
in
push
jae
or
outs
int
mov
das
popf
mov
sbb
add
call
fcmovnb
cmp
mov
dec
xchg
cmp
jns
sub
fs
push
test
mov
cwde
nop
fidiv
stos
xor
int
shr
mov
ficomp
js
into
jbe
and
mov
or
or
es
(bad)
stos
pop
bound
cmp
xchg
hlt
jo
idiv
pop
out
(bad)
push
loope
or
inc
clc
cmp
in
dec
add
icebp
lock
adc
test
dec
cmp
cmp
mov
movs
data16
add
adc
mov
loope
sub
lods
fadd
rcl
imul
fsub
ret
adc
ja
sub
jg
cmp
mov
loop
mov
ins
cmp
lods
(bad)
xchg
lahf
mov
mov
aam
add
cmc
(bad)
aaa
pop
out
jp
xor
retf
scas
aaa
js
test
data16
and
add
(bad)
pop
int3
and
(bad)
loope
inc
arpl
sbb
mov
fwait
sub
cmps
xor
fnstenv
sub
and
lods
shr
xor
cmp
rol
mov
cli
rcl
cmc
mov
push
(bad)
xchg
add
mov
add
out
cmps
sahf
pop
push
jp
fs
add
dec
(bad)
jmp
mov
adc
or
add
in
inc
adc
js
push
sub
out
ss
dec
inc
movs
pop
and
fld
push
lahf
xchg
imul
xor
add
dec
sub
mov
pop
out
pushf
retf
xor
adc
test
jb
pop
and
scas
dec
and
jmp
(bad)
ins
add
out
loope
adc
push
push
mov
stc
adc
test
les
xor
and
stos
mov
cmp
jno
mov
push
push
jle
sub
movs
cwde
jbe
inc
sbb
cmc
int3
mov
push
das
mov
icebp
(bad)
fstp
xchg
mov
mov
adc
jbe
adc
out
enter
stos
xchg
cs
xor
imul
call
into
push
jp
retf
dec
xor
adc
stos
fisttp
mov
repnz
hlt
or
jle
cli
xchg
popa
nop
xor
mov
and
out
xchg
cmp
cli
or
lahf
sub
sbb
push
pop
push
popf
jecxz
les
nop
in
add
jecxz
mov
cmp
(bad)
push
push
aas
test
cmp
dec
push
mov
je
sbb
rcr
in
ss
sbb
fisttp
cmp
add
sbb
idiv
push
cmp
jle
jp
popf
mov
ss
dec
pop
push
into
stos
xor
call
or
cs
mov
aam
add
push
xor
add
cmp
jno
mov
lds
ret
push
in
mov
bound
jno
ficom
mov
js
or
rcl
xchg
cli
and
add
pushf
push
xor
aam
xor
(bad)
xor
cmp
cmp
ja
xlat
mov
mov
std
jnp
mov
pushf
inc
ret
loop
sub
jecxz
push
adc
pop
fidivr
nop
sar
sub
arpl
push
shl
xchg
ins
xchg
fisubr
cli
and
dec
sar
sub
mov
dec
mul
retf
sbb
inc
adc
addr16
ins
mov
call
lds
pop
dec
ffreep
mov
cmps
pop
stos
dec
scas
fidiv
xchg
xor
or
xor
push
icebp
cwde
push
sbb
mov
sbb
outs
xchg
dec
daa
adc
mov
out
jp
rol
stos
adc
or
ret
ja
aad
pop
in
leave
mov
imul
xor
cwde
sub
aam
js
or
dec
inc
lds
sub
in
mov
jg
lods
es
je
inc
je
fild
aaa
and
vpsubw
cmp
ins
mov
leave
mov
ja
xor
xor
pop
hlt
pop
mov
outs
jb
sti
sbb
xchg
sub
fnstcw
add
push
sub
push
push
movs
inc
sub
adc
retf
sar
fwait
jns
int
xor
xor
pusha
mov
out
inc
pop
fdivr
xor
test
aam
push
imul
popf
or
test
xor
and
push
stos
jle
jb
das
mov
int
xchg
mov
loopne
dec
inc
push
inc
inc
xor
js
ins
mov
mov
(bad)
clc
mov
scas
push
shl
(bad)
pusha
cmp
call
icebp
pop
or
int
scas
pop
cwde
cli
or
stc
paddusb
ins
xor
cmp
xchg
in
xchg
dec
test
cmp
int
ja
lea
cmps
leave
outs
mov
js
xchg
in
add
ss
mov
sub
jecxz
sti
pop
popw
mov
mov
sub
nop
push
mov
inc
sbb
jb
scas
mov
fnstsw
mov
add
jno
add
sbb
or
mov
mov
inc
jecxz
fscale
mov
fs
jb
and
cmp
in
mov
mov
adc
aam
fs
cmps
push
aad
popf
push
mov
ds
imul
icebp
add
jmp
inc
hlt
dec
sub
or
and
mov
(bad)
es
push
inc
xchg
cmp
ds
popa
add
sti
and
xor
adc
mov
inc
push
adc
jle
push
mov
sbb
adc
sbb
(bad)
fs
inc
fcmovnb
fild
fmul
mov
or
mov
mov
xchg
js
or
xchg
addr16
mov
add
mov
arpl
jns
or
add
(bad)
addr16
sbb
stc
xor
scas
mov
or
mov
sbb
push
jns
jo
jns
movs
sub
push
dec
ret
inc
mov
cdq
loopne
mov
xor
sub
or
lahf
pop
mov
sbb
das
stos
mov
xor
sbb
mov
sub
(bad)
(bad)
sub
adc
mov
stc
cmp
into
ins
cmp
mov
mov
mov
ror
push
push
shl
int
adc
and
mov
gs
iret
sub
repnz
sahf
inc
push
inc
std
cmp
call
dec
add
xchg
and
jmp
not
stos
pushf
xchg
fstp
lods
call
adc
int
and
outs
sti
sbb
push
clc
lahf
push
cli
div
stos
fs
ss
std
cmp
mov
std
mov
out
mov
push
call
stos
fs
mov
in
push
aad
int
pop
test
loopne
loope
cmc
adc
das
inc
in
retf
mov
fcmovb
lods
dec
add
cmp
inc
mov
cmp
std
xchg
jae
movs
fwait
outs
fs
fnstenv
sbb
(bad)
sub
ins
mov
(bad)
test
imul
pop
cmp
xor
call
fwait
sbb
repnz
ret
mov
cmp
outs
xor
xor
dec
mov
inc
popf
xchg
jb
daa
mov
call
call
jge
les
call
jmp
xor
cmp
sar
adc
mov
push
add
jno
push
add
js
jno
retf
call
pushf
outs
fimul
fdivr
(bad)
retf
mov
mov
pop
sbb
mov
lods
ficom
or
push
call
add
push
jmp
sbb
mov
lods
sub
xchg
call
push
idiv
inc
dec
and
adc
retf
outs
sub
xchg
leave
shl
hlt
push
retf
xchg
stc
mov
test
xchg
je
inc
mov
dec
cli
mov
sbb
pop
je
jns
shl
xor
rol
xchg
imul
cmp
inc
aaa
mov
dec
mov
addr16
out
std
pop
push
test
push
pop
cmp
cmps
mov
mov
cmp
adc
jmp
push
aam
jbe
and
jae
and
adc
mov
sbb
inc
cmp
test
imul
test
das
gs
adc
enter
imul
mov
mov
mov
xchg
popa
cmp
in
mov
leave
jp
test
test
sbb
mov
xchg
jb
or
jnp
aam
popf
cli
mov
pop
shl
je
or
mov
lea
shl
inc
jmp
rcl
mov
sbb
xor
in
xlat
icebp
mov
or
test
outs
mov
popf
rol
or
add
retf
inc
imul
jno
jge
aaa
ja
inc
cmp
cdq
add
sti
push
loop
call
mov
ds
daa
cmp
push
arpl
sub
rol
dec
xor
mov
je
cmp
sbb
es
repz
or
adc
idiv
add
daa
dec
int3
jl
cli
ss
popf
pushf
sbb
or
scas
(bad)
fist
push
das
pushf
sbb
jmp
stos
jb
mov
std
mov
pushf
pop
out
pop
xchg
fidiv
je
push
out
push
loopne
(bad)
sbb
mov
push
xchg
jmp
daa
test
in
jle
push
inc
test
sub
fld
shl
int3
cli
leave
mov
mov
bound
add
or
movs
stc
mov
xchg
pop
ficomp
out
jmp
imul
jns
mov
xor
mov
bound
enter
cmps
lock
arpl
cmp
jne
stc
xchg
push
fisub
dec
adc
cmp
mov
pushf
(bad)
sbb
ja
pushf
jb
fnsave
(bad)
retf
and
push
aam
ins
inc
mov
fidiv
pop
std
test
fist
cmp
dec
pop
mov
sbb
test
call
xlat
(bad)
jg
cmp
xchg
stos
pop
xchg
arpl
push
neg
aam
pop
(bad)
lds
sub
call
cs
retf
sub
(bad)
gs
out
ins
cmp
fprem
push
shl
push
dec
mov
inc
arpl
mov
add
ret
addr16
shr
pop
add
and
enter
or
aas
enter
out
cwde
push
ror
in
sbb
cmps
movs
sbb
shl
xchg
sar
adc
jmp
in
inc
lds
inc
enter
mov
and
in
mov
imul
mov
or
cwde
leave
pop
mov
sbb
cld
sbb
inc
push
cmp
xchg
ret
aam
push
loope
cmc
leave
jge
cmp
xchg
and
fisttp
shl
mov
jmp
(bad)
dec
push
mov
xor
jl
jge
add
xchg
jg
aaa
loopne
fisubr
mov
or
fst
mul
jne
push
test
xchg
and
cdq
adc
(bad)
jge
fisubr
jae
rcl
add
pop
in
lea
add
xlat
push
fs
xor
xchg
and
ror
mov
or
call
dec
mov
cdq
dec
std
mov
or
mul
out
xor
cmp
scas
jle
nop
mov
cmp
xchg
test
or
push
mov
or
mov
shr
fidivr
mov
xchg
movs
mov
addr16
jmp
repz
mov
xchg
mov
xor
les
popf
cmp
lock
cmp
or
mov
dec
mov
adc
jmp
jl
mov
(bad)
mov
aad
mov
fidivr
fadd
pop
jl
jg
or
mov
xchg
movs
mov
out
pushf
outs
cmp
mov
pop
xor
jae
fldenv
imul
fwait
test
jns
imul
push
ret
retf
mov
mov
push
mov
cs
fisttp
sbb
call
xchg
mov
int
mov
bound
mov
add
sbb
sbb
loop
clc
into
jae
(bad)
fild
out
call
xchg
push
test
adc
or
arpl
push
das
test
mov
dec
and
push
fsub
lds
dec
repz
or
pusha
test
idiv
repnz
outs
mov
ss
jmp
cmp
push
in
adc
cmps
add
hlt
mov
sub
adc
(bad)
cmc
dec
xlat
sub
push
and
inc
mov
cmps
lock
(bad)
pop
mov
scas
xchg
ss
data16
stos
out
test
into
mov
mov
arpl
or
add
mov
add
call
in
aad
movs
adc
sub
jno
and
mov
fldenv
mov
push
push
pop
stc
loop
jnp
bound
cld
mov
sbb
mov
adc
xchg
pop
stc
pop
cmp
mov
daa
aaa
pusha
adc
mov
or
aam
sar
dec
adc
into
cwde
shl
lods
ret
ins
mov
dec
(bad)
jo
js
mov
aam
jge
mov
jge
sub
xchg
xchg
push
pop
sub
stc
out
mov
jmp
or
ja
mov
sub
bound
cld
inc
cmp
(bad)
ins
enter
cmp
xlat
mov
dec
push
mov
into
mov
rcl
clc
sub
ins
cmc
xor
jg
push
inc
jne
loope
out
inc
or
add
or
shr
pop
cmp
js
jbe
mov
sahf
repz
xor
loop
pop
lods
aam
daa
or
sbb
loope
in
jo
dec
call
ret
into
mov
mov
shl
dec
cmp
sub
retf
inc
sahf
movs
pop
adc
pop
pop
mov
add
ret
xchg
dec
cmc
jecxz
and
sbb
sbb
(bad)
sbb
sbb
dec
mov
cmp
xchg
lea
mov
cmp
and
sbb
int3
inc
test
or
cmp
fisttp
jne
cmc
cmps
ret
inc
sub
test
mov
add
adc
mov
jle
add
mov
add
hlt
xor
out
fld
rol
sub
cmps
push
and
add
nop
hlt
add
stos
or
add
dec
shl
pop
jns
movs
mov
sub
or
mov
add
push
mov
(bad)
gs
idiv
dec
in
aam
and
outs
mov
les
in
inc
fs
fstp
ins
cmp
dec
sbb
popa
ja
adc
rol
dec
push
les
sbb
mov
in
inc
push
mov
pop
push
dec
std
xchg
dec
mov
out
shr
loopne
mov
adc
lods
es
xor
and
fisttp
fidiv
cmp
imul
pop
jnp
push
cli
xor
in
xor
cmp
rcr
loopne
inc
pop
test
scas
(bad)
and
pop
call
les
lock
and
inc
fistp
fs
xor
inc
adc
jns
sub
fstp
pop
dec
mul
fdiv
fimul
push
pop
aas
stc
cld
mov
shr
jge
jg
movs
jae
fld
jno
nop
out
sbb
aas
ins
imul
mov
sbb
and
jecxz
in
dec
dec
ss
xor
hlt
adc
pop
push
shr
mov
dec
pop
sbb
mov
scas
stos
movs
pop
inc
adc
pop
inc
or
stc
shl
(bad)
(bad)
jp
out
jg
xchg
in
mov
cmp
adc
test
lea
push
sbb
pop
fnstsw
add
sub
xchg
and
stos
or
add
imul
es
mov
enter
rol
xor
(bad)
pop
int3
cdq
ja
push
clc
mov
and
cmps
leave
or
or
mov
mov
adc
xchg
cmp
call
popf
adc
outs
push
mov
ret
call
jp
nop
push
je
dec
(bad)
call
stc
jo
add
add
pop
movaps
mov
f2xm1
cmp
adc
test
mov
inc
sub
mov
stc
test
mov
mov
loopne
inc
or
add
mov
lods
movs
arpl
add
dec
inc
jg
ficomp
movs
or
mov
or
dec
call
test
dec
mov
cmp
dec
cmc
dec
pop
xchg
mov
dec
or
leave
mov
xor
jl
repz
xchg
add
dec
or
pop
scas
xchg
mov
fwait
shr
fmul
mov
outs
cld
jmp
cwde
sbb
fnstcw
lea
mov
mov
call
lods
sti
add
mov
add
pop
scas
add
data16
mov
mov
lahf
and
jmp
ja
pop
mov
adc
shl
test
add
adc
nop
movs
(bad)
div
test
pop
xchg
jae
imul
or
(bad)
popf
movhps
jae
sub
mov
icebp
add
pop
test
lahf
jnp
sub
jne
(bad)
xchg
push
std
repz
rol
cs
and
push
xor
lea
cwde
shr
test
call
xor
(bad)
shl
popa
int3
int
inc
aaa
adc
jmp
int3
cdq
aaa
or
ficom
jb
mov
fsub
je
ins
mov
pop
xchg
jae
push
add
adc
pop
mov
bnd
pop
xor
dec
cmp
and
fsubr
xchg
pop
fisttp
dec
mov
inc
rcl
cmps
pop
stos
bound
cmp
push
jmp
jge
(bad)
push
xor
inc
ror
xchg
pop
inc
xor
mov
push
cmp
dec
xor
add
out
mov
jb
fst
(bad)
shr
push
cmp
add
cli
push
arpl
bound
lea
(bad)
mov
scas
iret
shr
popf
sub
out
(bad)
jmp
xor
push
daa
sbb
mov
adc
lahf
inc
test
cmp
mov
adc
pop
mov
lahf
sbb
push
sub
movs
ret
(bad)
pop
dec
test
xchg
ret
adc
or
inc
ds
inc
sbb
movs
std
push
ss
arpl
sbb
add
inc
mov
dec
xor
retf
sbb
inc
(bad)
push
(bad)
sti
ret
aad
sub
cmps
cmp
inc
pushf
mov
in
retf
mov
popa
adc
mov
push
mov
int3
cmp
fld
test
dec
dec
icebp
inc
fcomp
out
cmp
int3
jnp
repz
push
loop
aad
jae
idiv
dec
cmp
repz
ss
mov
add
imul
cmps
dec
add
(bad)
or
xor
dec
add
mov
(bad)
(bad)
inc
add
sub
xor
loope
daa
sub
mov
leave
add
(bad)
cwde
loop
cmps
sahf
push
mov
fisubr
or
sub
cmps
aad
(bad)
rol
push
mov
test
fsub
cmp
pushf
cmp
imul
mov
stc
push
je
outs
dec
jae
pop
imul
lock
jne
and
xor
ins
aad
fldenv
and
and
sub
out
inc
cs
ss
pop
mov
pusha
gs
mov
xor
jmp
jno
lods
jbe
lods
xchg
icebp
in
mov
mov
push
or
js
push
test
pop
jp
inc
data16
cmc
imul
popa
call
(bad)
sbb
or
aam
ins
div
mov
mov
xchg
es
cmp
sub
scas
pop
outs
mov
cmc
lods
adc
jmp
in
ret
fist
xchg
adc
and
cmc
sub
iret
jle
jnp
cs
xlat
mov
bound
loope
mov
aas
mov
out
add
cmps
cld
fdiv
fs
(bad)
leave
adc
shl
add
xchg
adc
aad
not
movs
inc
in
(bad)
out
sbb
fdivp
or
mov
mov
dec
popf
jle
push
fsub
stos
(bad)
lea
sti
or
push
mov
stos
fisttp
ret
into
pop
adc
sbb
lea
outs
inc
xchg
cs
sti
add
push
pop
aaa
lods
sbb
sub
sub
pop
out
pushf
addr16
jmp
cmp
shl
ret
shl
int3
rcr
jae
lahf
fdivr
mov
imul
adc
inc
fidiv
jmp
push
mov
jl
ret
(bad)
jecxz
push
ds
adc
ins
(bad)
fisttp
test
xor
jb
jns
hlt
jle
pop
xchg
mov
adc
and
and
jne
pop
lahf
mov
jb
jmp
pop
jnp
(bad)
push
daa
adc
dec
adc
repnz
sub
jae
cmps
and
mov
lods
mov
adc
sub
push
dec
mov
xchg
pop
test
test
inc
js
popa
pop
retf
adc
test
pop
mov
(bad)
cmp
mov
aas
jb
hlt
cmp
and
sub
frstor
mov
ret
pop
push
sbb
adc
js
scas
shl
mov
mov
out
mov
ins
pop
dec
ins
enter
repz
cmps
mul
lahf
call
mov
jne
lea
and
mov
adc
aam
cs
aaa
sbb
int
int
out
retf
nop
pushf
repz
push
mov
stos
test
pop
sbb
movs
xchg
pop
mov
(bad)
ins
call
dec
cmp
out
or
pop
jmp
scas
fadd
or
push
dec
out
call
dec
inc
vorps
xchg
popf
push
xlat
dec
loop
jg
lock
jae
xchg
sbb
nop
in
xor
enter
popf
push
and
mov
movs
repz
xor
xchg
cmp
pop
sbb
pop
out
xchg
sbb
pop
lock
lods
sar
bound
enter
inc
dec
sub
je
inc
sbb
adc
pop
mov
icebp
int3
arpl
rdtsc
lods
fiadd
pusha
(bad)
mov
iret
cmp
xor
jg
jo
popa
fcom
scas
sti
nop
add
cmps
fidivr
inc
out
rol
(bad)
adc
jg
xor
or
cmp
ds
xlat
sbb
pusha
cmps
ins
out
sbb
pop
jbe
adc
fiadd
out
sbb
cmp
or
ds
sbb
sar
and
daa
int
cmp
sub
jnp
xchg
adc
test
cmps
xor
js
lahf
xor
adc
ss
scas
pop
repz
(bad)
pop
in
sub
mov
mov
xchg
mov
dec
xchg
jp
hlt
adc
lods
dec
das
sbb
cmp
mov
jae
dec
not
stos
scas
and
rol
imul
sub
adc
aam
loope
pusha
mov
and
jge
sbb
outs
sub
pop
aam
adc
ret
jp
js
lock
pop
js
test
enter
(bad)
mov
or
sub
lock
mov
ss
mov
cmp
dec
aad
cmp
xor
pop
mov
mov
and
fdivr
xor
scas
out
ins
shr
xor
into
stos
mov
shl
(bad)
cdq
or
sbb
mov
jge
jbe
mov
arpl
fwait
pushf
(bad)
jle
shl
loope
gs
cs
add
adc
xor
jmp
pop
inc
xchg
jmp
mov
or
out
and
ja
mov
sbb
inc
(bad)
cmp
(bad)
sbb
mov
sbb
mov
dec
or
out
iret
stc
inc
in
out
mov
js
sbb
fld
scas
sub
arpl
jecxz
or
sub
call
xchg
fdivr
imul
loopne
push
mov
or
xor
lods
fwait
out
sahf
add
mov
arpl
inc
jo
jae
popf
ins
iret
imul
test
idiv
xchg
fsubr
popa
pusha
ja
mov
enter
ret
mov
mov
dec
add
jno
ds
dec
mov
in
in
(bad)
es
push
mov
lds
call
gs
push
pop
and
in
or
dec
inc
ffree
cmp
das
leave
jmp
sub
pop
iret
int
push
jle
dec
xchg
ins
jb
mov
cmp
push
cmps
push
sar
mov
aaa
bound
dec
or
dec
in
cmp
inc
cs
loopne
ret
mov
or
xlat
arpl
int3
cmp
sar
or
sbb
inc
pop
leave
mov
mov
clc
or
mov
pop
dec
(bad)
push
popa
aas
addr16
mov
lea
mov
add
inc
lea
jnp
lea
sbb
xor
pop
push
mov
bound
popf
xchg
mov
int3
sub
daa
fld
fcom
imul
push
mov
lock
push
setb
mov
inc
jae
ret
fwait
call
push
scas
ins
adc
push
mov
aam
les
enter
icebp
push
nop
ret
mov
(bad)
push
nop
mov
lods
push
outs
(bad)
cli
sub
mov
inc
add
in
sbb
mov
lock
mov
jg
push
(bad)
ins
enter
and
mov
mov
leave
inc
leave
je
lea
push
sbb
cdq
outs
iret
or
stos
(bad)
not
or
imul
aaa
rcl
call
mov
call
inc
enter
xchg
mov
iret
and
inc
pop
sbb
inc
repz
or
mov
icebp
cdq
stos
inc
test
mov
mov
sbb
pop
mov
mov
gs
mov
sbb
dec
stos
sub
(bad)
bound
fisttp
dec
retf
aam
popaw
fisubr
scas
(bad)
dec
adc
hlt
mov
xchg
(bad)
repnz
cmps
mov
dec
dec
(bad)
sub
push
or
cld
pop
and
fcomp
aad
(bad)
int
or
pusha
and
cli
mov
pushf
loope
push
neg
popa
dec
xchg
cwde
mov
mov
pop
or
jo
call
lea
iret
sahf
adc
and
adc
adc
fdivr
fistp
mov
rol
sub
inc
sti
stc
adc
dec
in
into
pop
ret
sub
cmp
push
(bad)
dec
icebp
sbb
cmps
test
dec
dec
mov
mov
enter
add
sahf
mov
cld
sub
scas
fst
out
shl
xor
clc
rol
or
add
loope
(bad)
sbb
in
push
cmp
dec
push
cli
fst
jne
aaa
test
xchg
jb
and
in
rol
push
cld
mov
out
clc
aas
iret
jmp
ins
cmc
cmp
pop
sub
adc
xor
sbb
mov
add
inc
lods
mov
push
je
out
adc
and
adc
dec
pushf
dec
fdiv
inc
ja
sub
add
or
or
pop
push
popa
adc
jnp
xor
adc
jp
outs
mov
sbb
lea
sub
retf
jbe
scas
jmp
dec
loope
int
in
test
dec
lods
xor
push
test
sar
add
mov
lock
test
pop
or
popa
sub
movs
cmp
mov
pop
and
das
test
pop
dec
xor
xchg
cmp
mov
pop
dec
aad
jmp
div
sbb
mov
jmp
rcr
pop
lods
test
cmp
xlat
or
or
nop
adc
push
nop
aam
stos
push
(bad)
xlat
xchg
imul
and
mov
aad
hlt
call
rcl
nop
mov
loopne
movs
jns
jno
and
mov
in
lea
xlat
pushf
xchg
popa
push
sbb
and
outs
cmp
xchg
adc
cmp
jge
sbb
push
pop
add
xchg
and
mov
pop
mov
test
cmps
xor
pop
cld
pop
or
mov
jb
outs
jmp
les
cdq
imul
std
dec
nop
cdq
add
jo
ret
aam
retf
sbb
push
ret
repz
cdq
pusha
pop
lods
enter
stc
sahf
push
jnp
xchg
mov
xor
mov
pop
xor
leave
mov
bound
xor
cwde
dec
call
push
in
retf
cmp
int3
sbb
outs
jle
inc
clc
push
push
dec
xchg
push
(bad)
sbb
push
in
test
xor
(bad)
cs
xor
and
fidivr
cwde
xchg
std
add
pop
mov
ret
adc
sbb
push
add
adc
fbstp
sti
je
add
call
nop
out
aas
out
imul
mov
mov
ss
mov
data16
stos
(bad)
jmp
clc
outs
pop
lock
mov
std
push
mov
xlat
dec
repnz
mov
retf
or
fmul
jo
adc
xchg
adc
ret
daa
add
sub
pop
lods
(bad)
out
add
xchg
mov
xlat
adc
jo
and
cmp
jmp
lock
sub
adc
les
iret
jbe
mov
stos
sub
das
mov
ja
out
stc
dec
dec
add
loope
jnp
out
dec
dec
test
sar
inc
icebp
xchg
jbe
mul
mov
adc
popa
jno
sub
sbb
mov
in
cmp
mov
stos
test
mov
jecxz
or
and
ror
mov
lods
xchg
mov
icebp
sub
push
pop
loop
sbb
or
dec
pop
mov
xor
push
(bad)
jl
repnz
dec
in
loop
sbb
push
in
leave
mov
jmp
cmps
test
lods
adc
stos
mov
jge
(bad)
pop
dec
adc
cs
fs
mov
mov
jne
clc
data16
inc
add
and
xchg
pop
jmp
mov
popa
(bad)
dec
mov
lods
cwde
iret
cli
dec
icebp
pushf
clc
(bad)
aas
aam
je
xchg
or
ins
cs
pop
or
mov
xchg
xchg
adc
sub
push
jg
mov
mov
add
clc
mov
inc
scas
fst
or
ss
jne
push
cdq
mov
xor
pop
mov
pop
nop
mov
addr16
outs
mov
inc
or
lods
jb
pop
mov
sbb
shl
div
xlat
leave
xchg
add
jno
mov
cmc
outs
mov
ins
sbb
fnop
cmps
ja
cmp
xchg
adc
fnstenv
mov
or
test
sub
xchg
mov
or
jbe
or
arpl
inc
mov
and
or
sub
cmps
(bad)
xor
mov
(bad)
(bad)
test
mov
or
jg
out
jmp
cld
xor
dec
mov
imul
sub
push
je
cmps
dec
test
das
(bad)
inc
xchg
bound
inc
das
cmp
pop
and
int
(bad)
add
add
shr
fisttp
jns
stos
mov
ret
(bad)
shl
cmovl
aad
popf
mov
(bad)
iret
inc
or
loopne
xchg
icebp
push
cld
sbb
pop
fist
ins
and
push
rcr
adc
add
inc
ss
daa
nop
out
fwait
mov
out
and
sbb
in
stc
xchg
xor
mov
out
jmp
fild
xchg
inc
int3
xchg
call
popf
jecxz
mov
add
cld
mov
fidivr
mov
sbb
jae
ss
stos
pop
cs
cs
mov
inc
lea
test
rol
sub
and
sub
test
add
or
jl
int3
(bad)
mov
into
mov
jb
sbb
jne
or
adc
mov
iret
mov
retf
mov
sub
gs
cdq
pxor
cli
pop
sub
adc
inc
inc
and
loopne
xchg
xor
ins
leave
or
arpl
xor
dec
jmp
cmc
lods
imul
in
pop
bound
jp
jecxz
mov
pushf
lods
outs
out
pusha
into
mov
xchg
xor
ss
dec
jmp
push
dec
add
(bad)
push
stc
dec
es
push
sub
cmc
adc
mov
mov
cmp
mov
rcl
cld
mov
sub
(bad)
gs
imul
je
push
stos
sar
xchg
fcom
imul
xor
mov
jge
les
push
mov
mov
adc
mov
mov
retf
inc
call
pusha
mov
psllw
jge
sbb
test
(bad)
fsub
movs
add
popa
sbb
mov
cmp
push
mov
xor
das
adc
shl
shr
out
xor
fcom
xchg
mov
fs
popa
mov
aas
lods
movs
fcom
dec
fs
xchg
or
and
in
enter
enter
add
retf
and
loope
nop
push
dec
movs
int3
xorps
mov
or
mov
test
pop
sti
cld
xchg
das
lds
addr16
sbb
clc
ins
jnp
mov
pop
and
xor
out
rcl
fcmovnu
jae
cmp
imul
lock
and
inc
popf
cmps
add
inc
pop
cdq
push
mov
push
std
or
fld
fs
jno
push
mov
inc
int3
jg
sbb
outs
loope
ror
push
jmp
lahf
push
dec
mov
sub
lea
mov
pushf
push
gs
dec
popa
int
loope
xchg
out
pop
jne
(bad)
sub
or
jmp
xchg
mov
mov
mov
cmp
and
xor
fldcw
scas
stos
pop
aaa
repz
repnz
add
cmp
stc
ss
xor
inc
pop
(bad)
dec
aad
loope
mov
repz
xchg
(bad)
pop
sub
loopne
repnz
cli
dec
inc
mov
nop
push
(bad)
cld
loope
mov
stc
adc
inc
(bad)
sahf
rcr
lea
cmp
inc
jo
hlt
cmp
jg
cli
fsubr
inc
sbb
add
hlt
pop
mov
inc
ret
bound
fs
adc
pop
inc
repz
ret
pop
ss
push
cmp
sub
add
mov
xchg
dec
push
out
cld
add
jnp
sbb
in
mov
ret
push
push
jbe
cmp
mov
jmp
mov
cmp
inc
add
adc
pop
mov
sub
sbb
mov
js
pop
pop
inc
out
inc
inc
lods
mov
lods
(bad)
aam
sub
loop
cdq
daa
pop
das
ja
adc
add
icebp
scas
add
hlt
enter
add
adc
pushf
cmp
in
jmp
fs
cmp
jbe
push
sbb
or
cmps
and
sbb
mov
adc
dec
jge
lds
retf
fdivrp
mov
sbb
iret
fnstcw
xchg
fs
cli
ins
push
ins
add
cmp
xchg
out
sbb
xchg
xchg
in
cld
shl
xlat
push
imul
popf
dec
and
or
scas
or
daa
cld
jbe
fwait
cmps
lds
ror
xchg
xor
xchg
inc
or
ss
xor
cmps
jmp
mov
leave
fdivr
fild
test
test
pop
push
pop
cdq
push
sub
fmulp
lds
js
add
xlat
call
mov
(bad)
jmp
in
aaa
sub
mov
imul
jbe
dec
ret
ins
cmp
adc
cmp
mov
mov
sub
ss
sbb
out
jo
adc
adc
sub
push
sti
enter
inc
and
fisub
(bad)
lahf
movs
or
shr
cwde
cmp
jg
bound
jno
shl
out
sub
into
dec
or
pop
int3
sbb
adc
aaa
inc
xor
jae
leave
test
nop
mov
sub
adc
or
enter
mov
js
cmp
popf
inc
xor
or
cmp
dec
or
stos
mov
pop
inc
and
jbe
scas
(bad)
adc
ret
mov
popf
push
cmp
shr
fwait
movs
xor
lods
movs
call
rcr
mov
cmp
(bad)
jmp
leave
pop
hlt
adc
out
scas
sbb
or
dec
scas
aad
dec
mov
pop
jae
add
inc
push
cmp
fisttp
loopne
loop
in
push
push
les
xchg
inc
int3
int3
jae
xchg
pop
jbe
push
(bad)
data16
jo
stos
and
retf
mov
imul
dec
das
sub
fs
imul
aas
(bad)
retf
popf
popa
icebp
in
mov
adc
jne
xor
fdiv
ins
or
out
(bad)
cli
outs
out
jbe
in
loope
test
out
enter
cmp
retf
adc
cmp
pop
xchg
dec
jbe
push
or
test
and
icebp
pop
dec
lds
adc
cs
xchg
(bad)
loope
les
aas
mov
in
(bad)
lea
mul
push
imul
cmp
xchg
(bad)
jge
adc
in
bound
ret
sar
(bad)
mov
aas
sbb
xchg
loopne
xchg
mov
xchg
pop
or
out
cmp
sub
repnz
aaa
xchg
pop
test
repnz
das
and
sbb
lahf
push
les
addr16
into
cld
ss
(bad)
sub
loopne
xor
cmps
fdiv
mov
cmc
cmps
rol
adc
pushf
mov
jmp
xor
imul
out
fisttp
dec
mov
sub
lea
ja
int
pop
pop
hlt
or
out
shr
push
xor
xlat
mov
mov
movs
xor
mov
mov
aad
jp
push
inc
push
xchg
in
push
sbb
inc
into
dec
sub
mov
fst
add
imul
xor
dec
add
pop
adc
mov
daa
inc
pop
outs
cld
sar
adc
fcomp
call
add
cwde
sub
xor
mov
(bad)
lods
fidivr
xchg
xchg
mov
or
push
dec
cmp
and
or
jg
pop
popf
imul
cmps
popf
iret
xchg
jbe
(bad)
std
mov
push
jl
aaa
lahf
inc
push
lahf
dec
or
hlt
stc
pop
and
lea
mov
mov
mov
repnz
push
jecxz
or
cmps
cmp
xor
add
push
push
(bad)
push
add
fcomi
add
aam
cmp
out
(bad)
cld
sub
mov
pop
cld
out
repz
jnp
stos
dec
or
das
aas
xchg
pop
int
stos
push
shl
sbb
adc
call
xor
or
popf
xlat
ret
dec
ds
sbb
nop
je
aas
mov
jle
sbb
add
data16
out
idiv
pop
cmp
and
test
or
sbb
in
or
sub
cli
mov
xor
xchg
aaa
aas
dec
repnz
adc
pop
scas
repz
jns
sub
shl
or
out
gs
sub
das
lods
cmc
movs
cmp
dec
mov
test
mov
cmps
sub
add
ins
(bad)
sti
jo
xor
inc
int3
mul
imul
jbe
mov
(bad)
cmp
les
in
bound
add
or
jmp
pop
xlat
out
cmps
xlat
push
jae
ja
in
ret
stc
mov
cwde
pop
pop
in
mov
inc
jnp
sahf
jbe
pop
push
aaa
cmp
sbb
mov
icebp
mov
js
sub
imul
iret
cmp
das
aaa
dec
out
sub
mov
dec
into
(bad)
xor
js
ret
adc
push
push
dec
or
int
popf
jnp
cmp
enter
(bad)
sti
in
cmp
scas
out
xchg
jle
sahf
ins
sbb
sbb
fcomp
daa
cs
mov
test
cmp
jae
cmp
test
adc
sub
pop
call
call
cli
out
fidivr
fist
mul
int
sbb
stos
or
ss
xchg
mov
add
inc
fisubr
mov
inc
jb
mov
sub
int
ficom
inc
arpl
es
cmp
leave
in
xchg
push
cmp
sub
pop
test
mov
mov
cmpps
jno
mov
leave
jo
mov
std
pop
mov
push
pop
lea
dec
test
fstp
xchg
xchg
xor
fwait
lea
cmps
pop
call
xchg
jns
ret
and
xor
mov
mov
mov
or
mov
mov
pop
jns
sub
dec
scas
fistp
sub
sahf
xor
fisttp
xchg
xchg
jno
not
dec
jno
lods
fwait
pusha
mov
xor
cmp
mov
sub
xor
out
cmp
mov
(bad)
stos
sar
and
in
cs
sub
arpl
jmp
imul
xchg
add
jmp
int3
push
or
daa
lods
das
clc
jbe
pop
push
fisubr
js
jle
shr
dec
pop
mov
mov
aam
fs
ficom
push
inc
sar
push
(bad)
in
das
or
jne
in
cmp
sub
xor
dec
je
or
scas
(bad)
stos
ficomp
not
idiv
sbb
sbb
mov
cmp
dec
push
push
out
mov
std
push
and
shr
test
pop
dec
imul
adc
sub
shr
dec
cld
mov
cli
pop
es
mov
arpl
(bad)
jo
mov
arpl
test
fcom
push
jg
pop
and
out
sub
ffree
pusha
loopne
jns
xchg
test
es
or
scas
(bad)
fs
in
test
xor
xor
cmp
pop
xor
and
adc
fidivr
out
adc
cmc
sbb
sbb
daa
daa
jl
adc
push
xor
ret
mov
xor
mov
xchg
add
aaa
and
lods
sbb
rcl
adc
cld
fidivr
call
sub
sub
jg
mov
mov
clc
xlat
ret
out
sbb
(bad)
xor
jl
call
ins
cmp
in
ins
and
ret
adc
shl
xchg
les
push
inc
inc
dec
jo
mov
push
mov
lods
ds
mov
(bad)
xchg
dec
in
enter
scas
dec
add
mov
scas
xor
dec
lahf
inc
xor
sbb
jmp
mov
in
test
mov
xchg
mov
xor
jmp
lds
xchg
or
pushf
adc
mov
ja
push
imul
sbb
jae
out
mov
aas
push
bound
sbb
jb
stc
mov
or
sar
mov
cmp
int3
shl
cwde
(bad)
loop
cwde
cmp
test
adc
and
(bad)
xchg
mov
fidivr
pop
out
push
pop
sub
xchg
jle
xchg
adc
in
jnp
mov
jge
sbb
lahf
out
int3
xchg
(bad)
inc
xor
add
ss
and
sub
adc
ja
cmps
jmp
or
dec
mov
fadd
fdivr
push
enterw
enter
sub
adc
sbb
pop
jmp
in
retf
inc
jge
jmp
adc
addr16
jl
test
mov
xchg
out
pop
into
fisttp
out
out
and
pop
int
mul
or
pop
movs
clc
mov
add
push
push
cmp
jne
movs
mov
and
fwait
sahf
ds
stos
xor
inc
sub
(bad)
into
pop
and
or
pop
shr
ja
mov
pop
fiadd
scas
js
inc
cmp
sti
jno
dec
jle
adc
add
mov
or
int3
pop
div
test
es
inc
sbb
push
ins
bound
mov
lods
data16
js
jnp
pop
(bad)
add
rcl
(bad)
or
jp
imul
jge
xlat
imul
xlat
scas
js
stos
inc
int
cmps
sbb
clc
lds
out
and
int
adc
hlt
test
fldcw
inc
lods
xchg
xor
retf
mov
fcomi
cmp
mov
push
in
mov
fsubr
test
push
imul
cld
imul
adc
and
arpl
sub
pusha
and
js
sbb
ror
dec
sub
jnp
cwde
adc
push
ja
pop
ret
dec
or
push
cmp
adc
adc
sbb
and
dec
(bad)
sbb
xchg
mov
fcom
xor
dec
loopne
mov
leave
xor
and
arpl
xchg
xor
mov
test
jne
(bad)
sub
mov
fs
mov
pop
jge
dec
mov
or
inc
push
(bad)
scas
pushf
gs
push
or
repz
xor
pop
add
lea
stc
xchg
lods
adc
mov
das
mov
or
mov
sub
xchg
dec
adc
xor
les
cmp
jbe
jecxz
rcl
jne
mov
ja
jge
bound
sahf
xchg
push
aam
inc
int3
cmps
xchg
xchg
popf
sbb
rcl
retf
shl
inc
imul
sub
add
and
out
dec
sub
inc
sub
mov
push
add
mov
push
push
adc
sbb
push
jb
sub
(bad)
mov
cmp
adc
js
or
das
sub
dec
jge
cld
fs
cwde
sub
jnp
dec
add
cmp
adc
xchg
test
jle
out
fidivr
mov
jge
jae
cmps
jo
hlt
cli
sahf
dec
mov
cld
sti
xor
pop
js
add
cmp
mov
movs
in
repz
outs
imul
inc
sbb
cmp
or
pop
cmp
shl
out
mov
mov
add
mov
daa
xor
sub
sti
std
inc
inc
push
leave
imul
fnstenv
and
mov
repnz
(bad)
mov
mov
xchg
ss
lea
cmp
jmp
sar
mov
ret
pop
mov
shr
or
lock
add
or
mov
enter
and
jge
mov
outs
fdivr
outs
cmp
mov
xchg
or
sbb
xchg
aas
repnz
add
inc
lds
inc
mov
dec
rol
mov
xchg
push
push
cmps
inc
xor
jo
mov
inc
jbe
push
ja
push
outs
scas
push
inc
mov
or
fmul
xchg
daa
xor
and
sub
push
xchg
sub
outs
test
sub
jl
or
push
repnz
dec
shr
add
scas
aad
or
mov
or
int3
mov
mov
cmp
shl
and
cmc
or
bound
adc
xchg
aaa
mov
pop
ins
cld
mov
stos
dec
xchg
jmp
mov
enter
lahf
sub
xchg
in
push
shl
adc
mov
jle
sar
arpl
(bad)
sub
jns
cmc
push
mov
scas
ds
rol
loope
movs
dec
sub
mov
ret
jl
cmps
mov
sbb
repnz
in
mov
sti
lods
xor
imul
mov
repz
retf
inc
(bad)
push
push
xchg
adc
jmp
xchg
mov
retf
enter
pop
xchg
int
les
jle
cdq
push
jno
test
inc
dec
out
xchg
(bad)
inc
retf
sub
ja
or
imul
or
fidivr
fsubr
js
iret
xor
rcl
lahf
adc
pop
(bad)
or
jl
test
push
adc
mov
dec
jp
adc
fimul
cdq
jg
pminub
hlt
push
adc
cmp
retf
cmp
sbb
(bad)
mov
jne
ja
push
es
(bad)
hlt
and
xchg
xlat
xchg
scas
iret
ds
xchg
mov
and
in
adc
inc
nop
es
push
(bad)
adc
xor
dec
repnz
or
and
inc
sbb
ds
cmp
pop
jb
imul
sbb
push
not
jg
jno
outs
jge
xor
adc
xchg
xchg
push
mov
sub
cdq
jne
jbe
mov
call
mov
rol
mov
nop
or
jb
loopne
lahf
cmps
mov
fisub
jo
cld
int3
nop
cld
int3
mov
push
pop
sbb
clc
pop
or
lods
jmp
sbb
dec
rol
xchg
dec
shr
mov
mov
mov
xchg
dec
movs
arpl
retf
fdiv
ds
ror
call
out
popa
sti
and
in
sbb
call
cmps
cmp
adc
jae
popf
je
xchg
inc
jge
(bad)
jbe
add
adc
sbb
sub
push
jl
ins
dec
into
(bad)
mov
mov
and
das
repnz
popa
lods
dec
loope
and
mov
lods
ffree
stos
sbb
adc
ss
sub
fs
fwait
dec
xlat
sar
sbb
xchg
push
pop
cmc
jmp
in
dec
imul
js
sbb
test
mov
addr16
inc
mov
faddp
xchg
lods
dec
jmp
popf
outs
jg
xor
lods
retf
nop
pop
fwait
cwde
add
outs
mov
push
xchg
cwde
sbb
inc
(bad)
fbld
mov
and
or
test
clc
push
push
or
mov
or
(bad)
mov
mov
xor
sbb
xor
push
adc
push
movs
hlt
int3
cmps
dec
(bad)
or
and
cli
pop
cs
(bad)
sbb
imul
adc
pop
xchg
repnz
pop
aaa
movs
inc
sub
js
out
movs
out
jb
arpl
(bad)
inc
xchg
adc
push
mov
or
retf
gs
lods
dec
ins
gs
aad
adc
jb
movs
arpl
xchg
test
(bad)
out
add
lods
cmp
xor
xchg
jge
out
mov
xor
pop
or
mov
psraw
push
jae
aas
mov
fs
dec
xor
mov
mov
xchg
lea
pop
or
jnp
mov
add
test
ds
data16
cmp
push
ret
cmp
data16
pop
mov
ds
neg
cwde
lods
inc
xchg
test
shld
ins
mov
sub
inc
cmp
sub
or
sub
or
jp
outs
retf
jge
sbb
jmp
test
mov
loop
ins
mov
mov
test
jb
jge
ins
ds
xchg
mov
outs
or
pop
mov
mov
popf
test
adc
outs
arpl
fmul
pop
cmp
(bad)
pop
dec
aad
les
loop
dec
stc
out
and
xor
pusha
daa
out
and
hlt
cmps
jecxz
jmp
(bad)
scas
aad
pushf
(bad)
and
clc
adc
(bad)
xor
jge
pop
jge
mov
xor
xor
xchg
aaa
sbb
out
pusha
pop
ins
or
mov
(bad)
(bad)
xor
js
adc
dec
add
cs
xor
add
pusha
int3
inc
cdq
addr16
add
sbb
rcl
sub
cdq
inc
mov
inc
push
clc
(bad)
mov
nop
ss
mov
mov
mov
push
test
adc
les
cli
xchg
sub
pop
and
imul
add
pop
jp
fnstsw
add
lods
mov
mov
loope
loopne
pushf
dec
ss
mov
jmp
fnstsw
in
cmp
sahf
rcl
sar
imul
enter
dec
(bad)
sub
pop
gs
push
dec
imul
adc
and
pop
sub
mov
cmp
dec
xor
mov
cmp
xor
fimul
cmps
push
and
push
sbb
xchg
adc
sbb
dec
mov
hlt
lahf
xchg
pop
cmc
pop
rol
sbb
popf
popa
add
mov
lock
inc
out
sub
push
adc
jle
adc
jae
sub
sahf
loopne
xchg
mov
dec
test
aas
jp
xchg
int
imul
jecxz
scas
call
shr
cmp
sbb
pop
or
in
sar
xchg
dec
push
jns
pop
mov
aam
xchg
mov
pop
mov
mov
mov
inc
scas
test
ja
sub
dec
sub
nop
aas
mov
sbb
push
xor
fadd
(bad)
inc
shl
xor
mov
add
adc
jmp
daa
push
pop
sahf
iret
neg
int
in
rcl
mov
mov
sbb
es
mov
sub
adc
mul
enter
sbb
(bad)
packssdw
idiv
inc
add
sbb
cmp
inc
xchg
sub
add
das
pop
int3
dec
fwait
aaa
pop
sub
ins
xchg
dec
icebp
xor
aaa
push
aam
sbb
test
mov
(bad)
iret
push
cmp
mov
mov
cmps
pop
pop
test
call
pop
pop
outs
test
sub
cmp
adc
(bad)
outs
or
pop
mov
mov
addr16
aad
sub
mov
scas
psubb
push
xchg
ins
sbb
dec
adc
mov
add
sub
pop
push
xor
stos
stos
out
fsubr
(bad)
mov
outs
sahf
cli
inc
mov
jns
jp
stos
jae
ins
std
pop
cld
jbe
stos
xchg
movs
out
nop
lahf
sar
add
xor
lods
mov
pop
xchg
aaa
pop
add
js
mov
push
push
cmp
push
mov
data16
aad
adc
cdq
fistp
lahf
mov
popa
sar
stos
jo
sbb
mov
call
mov
pop
loope
int3
fdiv
dec
sub
aaa
stos
push
fcomip
cwde
in
repz
(bad)
mov
fbld
dec
sbb
pop
iret
cmp
arpl
xor
std
jl
stos
fnstsw
dec
arpl
mov
scas
jg
cmps
mov
cli
jle
adc
test
imul
cmp
js
aad
xchg
or
or
mov
adc
cs
ret
mov
push
lods
arpl
sbb
sti
add
mov
aas
and
or
mov
repz
jmp
xchg
push
sti
pusha
xchg
sub
xor
adc
pop
out
sub
sub
in
adc
push
std
adc
hlt
int
pop
test
inc
dec
sub
jns
adc
jl
dec
dec
stos
pop
shr
pop
daa
std
lock
pusha
and
jl
out
mov
inc
jge
je
scas
jmp
pop
js
jns
cmp
mov
jmp
js
jp
cmp
fld
mov
xchg
xor
cwde
and
imul
movs
daa
cmps
and
push
enter
inc
cmp
stc
outs
sar
ror
lock
push
cwde
sub
test
mov
or
das
add
(bad)
int
sbb
jne
and
or
imul
jno
jmp
call
out
in
mov
or
or
sub
sti
push
das
jmp
push
ins
push
mov
pop
jecxz
mov
pop
sbb
mov
(bad)
outs
pop
jmp
inc
test
push
cmp
jns
stos
sub
push
cmc
int
or
inc
fimul
push
call
nop
fwait
adc
iret
xor
add
jecxz
xor
rol
test
cmp
imul
lock
rcl
mov
xchg
pop
les
dec
mov
cmp
cmp
ds
sub
jbe
adc
or
js
xor
int3
sbb
sub
ins
fmul
loope
fstp
int3
fisttp
xor
sub
mov
test
push
or
sub
mov
bound
out
inc
push
pop
mov
adc
sub
andnps
movs
aam
sbb
fs
sub
shl
dec
cdq
xor
inc
loopne
push
stos
xchg
pusha
fidiv
sbb
pushf
cmps
mov
or
int3
test
and
rcl
push
test
xchg
out
fcmovb
cdq
les
inc
repz
sub
cmps
push
out
push
sub
fsubr
push
jle
movs
retf
ret
or
cld
xchg
pop
mov
int3
shl
sbb
adc
adc
sub
or
mov
pop
mov
xchg
jp
shr
fld1
movs
or
xchg
ins
aad
mov
xchg
sbb
xchg
mov
movs
cmps
gs
repz
cmp
rcl
cmp
fcomp
sub
add
cmp
mov
mov
or
fwait
mov
jno
push
push
xor
mov
ins
mov
cmp
nop
retf
or
mov
retf
mov
add
adc
or
loope
push
mov
adc
cs
jae
aaa
xchg
push
cwde
xor
dec
pop
pop
pop
mov
and
data16
mov
push
hlt
out
cmp
stos
imul
loop
mov
(bad)
in
jbe
jo
push
ins
pop
ins
sub
pop
and
imul
test
inc
(bad)
mov
call
ds
dec
retf
aam
dec
inc
xor
jp
inc
mov
xchg
cmp
movs
mov
movs
(bad)
ds
sahf
outs
push
retf
pop
leave
fstp
push
sbb
push
bound
fwait
jmp
push
cmps
add
dec
pop
push
in
sub
mov
xchg
dec
outs
mov
add
int3
scas
out
daa
sub
mov
xchg
push
or
adc
cmp
(bad)
scas
nop
cmp
inc
call
cmp
sbb
(bad)
xor
ret
dec
dec
mov
imul
clc
scas
fdivr
inc
adc
ss
push
cmps
lock
pop
adc
inc
pop
pop
cld
jbe
mov
lods
jb
sub
pop
ror
adc
push
in
mov
inc
jl
mov
(bad)
pop
push
int3
inc
xchg
jmp
mov
mov
adc
fidiv
addr16
dec
ins
cmp
dec
(bad)
mov
(bad)
or
ret
and
cmp
sbb
imul
lods
xchg
jmp
das
dec
cwde
jno
cmc
lods
jns
int
jbe
mov
xchg
fsub
pop
dec
xchg
lock
aam
jno
adc
mov
fidiv
movs
cdq
aaa
mov
rcl
loope
int3
jno
ret
stos
push
aas
imul
fdiv
sbb
in
sahf
out
pop
jg
fld
div
inc
daa
mov
push
sub
xchg
and
dec
mov
repz
addr16
(bad)
push
pop
stos
dec
fiadd
ins
adc
aam
push
inc
sub
test
push
mov
or
xor
pop
mov
fmul
adc
xchg
xchg
push
xchg
pop
dec
jne
inc
frstor
push
int3
sbb
retf
cmp
push
cli
mov
dec
rcl
xchg
adc
inc
dec
loop
inc
push
inc
jmp
xor
in
xchg
dec
outs
mov
jmp
cmp
daa
out
das
mov
jmp
jae
shl
lahf
cmp
mov
cli
ret
push
xchg
in
push
jl
xor
ror
push
jae
xor
mov
pop
aad
sbb
bound
je
test
jg
arpl
fisttp
jle
and
stos
rcl
in
or
add
dec
mov
xor
cmps
(bad)
shl
(bad)
pop
lods
dec
les
inc
and
fst
arpl
sahf
inc
faddp
fisttp
cmovbe
cli
cli
pop
cmps
jl
cmp
xchg
in
sbb
test
outs
pop
xchg
arpl
push
in
hlt
adc
jnp
xchg
fistp
xlat
jmp
mov
and
xchg
xchg
sub
jmp
jmp
in
mov
rcl
xor
rcl
adc
fldenv
lods
(bad)
mov
xor
xor
cli
jp
addr16
xor
fild
ds
inc
jmp
frndint
xlat
mov
out
imul
push
and
jb
pusha
jae
(bad)
push
or
jbe
add
and
sub
mov
ret
aas
dec
xor
push
lds
mov
sbb
stos
pop
pusha
ins
mov
cmps
ror
pop
mov
jne
shl
mov
jg
adc
push
push
mov
sbb
jo
dec
jbe
jmp
call
movs
or
and
jb
dec
inc
cmp
imul
xor
mov
xchg
pop
int
int3
and
outs
push
hlt
jb
or
(bad)
sbb
inc
fstp
in
sub
jae
cmp
ret
fcomp
fcomp
push
cmp
and
(bad)
and
pushf
pop
je
std
imul
std
push
inc
mov
cmc
inc
push
les
adc
and
sti
or
int
mov
pushf
mov
sub
xchg
jmp
enter
jmp
repnz
adc
cmp
adc
(bad)
push
bound
jle
inc
mov
retf
lods
cld
retf
icebp
inc
pop
popa
xchg
inc
jge
jp
mov
push
dec
push
pushf
(bad)
fist
push
pop
std
sbb
mov
pop
repnz
cwde
std
mov
jge
cmps
or
(bad)
test
mov
push
adc
push
mov
push
sar
or
xor
div
mov
fisttp
adc
loopne
leave
sub
(bad)
es
jge
push
sub
push
jmp
imul
repz
cwde
add
fwait
ret
call
loopne
jae
mov
pop
xor
mov
inc
and
outs
fdiv
mov
xadd
push
mov
sub
movs
rcl
ror
stos
dec
pushf
cmp
popa
jmp
aad
xor
fsub
mov
add
or
ins
daa
xchg
add
pop
loope
push
and
dec
std
out
xchg
xchg
inc
inc
dec
cmp
mov
cmp
xlat
and
pop
mov
xchg
leave
mov
sbb
dec
(bad)
adc
int
mov
mov
(bad)
xchg
cmp
call
addr16
xor
cdq
jae
push
leave
or
nop
scas
push
pop
std
xchg
(bad)
xchg
or
fwait
xor
in
fadd
fcom
push
shr
rcr
mov
scas
xchg
sti
aad
cmps
mov
cmp
mov
mov
mov
mov
pusha
mov
mov
cmp
cdq
cmp
enter
into
and
cs
movs
mov
mov
xor
mov
rcl
jl
sub
loopne
mov
mov
std
mov
inc
test
jecxz
int3
mov
xchg
mov
sbb
(bad)
ret
pcmpgtb
repnz
push
mov
imul
dec
mov
push
push
bswap
xor
jge
out
mov
xchg
jg
mov
ret
mov
push
sub
push
and
xor
jnp
jno
int
fistp
stc
out
sub
jnp
movs
sti
push
xor
and
cmp
leave
sub
cmp
mov
fbstp
and
fbld
in
mov
mov
push
sub
jns
sbb
mov
jge
cdq
call
shr
ins
inc
in
stos
xlat
push
pop
inc
popf
jmp
lahf
inc
xchg
inc
ss
xor
mov
mov
out
xchg
icebp
imul
or
xor
push
xchg
push
jae
and
jl
(bad)
ss
mov
xchg
or
sub
or
pop
bnd
and
sbb
aas
adc
cwde
jmp
xor
or
fwait
stc
and
imul
lea
popf
das
enter
push
adc
call
rcr
cmp
fst
mov
scas
push
jo
jge
cmp
mov
inc
movs
test
int3
sbb
lock
sti
dec
mov
sbb
scas
test
cmp
shr
jecxz
gs
dec
jmp
repz
jns
pop
adc
push
cwde
out
jmp
jo
cmp
push
div
jge
add
bound
jmp
and
dec
inc
cmps
mov
pop
leave
movs
pop
lods
inc
push
retf
push
pop
mov
pushf
jo
cmc
sub
ins
push
mov
jno
in
call
xchg
jg
xor
pop
jle
lods
and
pushf
cmp
iret
stos
into
mov
jnp
data16
fs
movs
fiadd
mov
inc
fcomp
call
movs
stos
(bad)
call
mov
dec
cli
xor
lea
xchg
add
cli
jne
clc
into
ins
dec
xor
pop
call
imul
mov
jmp
push
cmc
jns
pop
push
mov
jp
push
lahf
pop
bound
sub
xchg
xchg
mov
mov
aam
(bad)
sub
aas
test
aad
pop
(bad)
mov
push
cmp
push
inc
cmc
fidivr
jle
jmp
lods
push
xor
inc
gs
adc
icebp
test
push
mov
cmp
pop
pop
std
adc
fdiv
adc
stos
adc
inc
test
(bad)
std
in
pushf
outs
(bad)
cmp
xor
dec
sahf
adc
cmp
stos
and
adc
pop
mov
sbb
hlt
and
cmps
mov
repnz
data16
push
clc
retf
jne
in
shl
out
pop
lahf
adc
mov
sbb
or
adc
pop
xor
ins
or
aaa
mov
or
shr
in
inc
add
xchg
out
cmps
and
ds
adc
xchg
add
loopne
cmps
inc
test
push
stc
mov
pop
movs
sti
imul
jnp
add
push
push
cmc
xor
push
sbb
jle
jno
sbb
inc
xor
cmps
jb
or
aaa
jl
pop
pop
xchg
cmp
and
mov
pop
xor
data16
ins
inc
outs
lods
xchg
mov
pop
stos
push
push
mov
ficom
pop
gs
mov
ss
out
and
add
pop
repz
pop
pop
sahf
inc
pop
enter
cmp
mov
dec
(bad)
int
stos
jbe
mov
imul
lods
mov
clc
bound
jmp
test
ret
pop
xchg
fbstp
fcmovne
data16
fcom
pushf
js
sar
push
adc
and
jns
push
xor
clc
mov
cdq
xchg
add
sbb
shl
push
xchg
or
xor
scas
xchg
mov
std
ja
cmp
inc
pop
mov
inc
mov
pop
pop
inc
clc
sbb
or
(bad)
sti
push
fs
mov
mov
fcomp
(bad)
xor
mov
in
mov
fcomp
fxch
inc
out
mov
nop
in
stc
add
hlt
shl
mov
and
mov
jnp
mov
ret
nop
jmp
push
mov
cmp
cmp
or
and
rep
dec
lahf
pop
or
mov
rcl
dec
adc
sbb
test
push
test
pop
popa
neg
lods
mov
push
or
cmp
xchg
ret
add
jge
push
jae
out
fidiv
and
rol
enter
out
adc
jp
ss
scas
jl
sub
or
cmps
pop
mov
xchg
mov
vandnpd
inc
adc
xlat
cmp
enter
pextrw
call
jl
fs
mov
fwait
xchg
jno
(bad)
adc
repnz
pop
add
jae
sbb
xchg
mov
mov
loope
mov
loope
test
pop
(bad)
cmps
popa
sar
test
cbw
js
mov
ret
popf
mov
mov
mov
or
jecxz
pushf
aas
push
cli
pop
sbb
mov
push
clc
jo
jge
mov
fsub
cmps
out
ins
retf
out
outs
cld
je
fdivr
adc
push
sub
pop
adc
mov
outs
aaa
xchg
jge
iret
pop
ins
jbe
jecxz
xchg
loopne
adc
jmp
push
push
ds
sbb
mov
imul
outs
pushf
sub
popa
mov
adc
push
mov
outs
and
xchg
std
inc
add
fsubr
or
(bad)
jge
loopne
sub
ret
jmp
scas
aad
ds
inc
jmp
in
stc
fs
mov
js
cdq
(bad)
jo
push
xchg
cmp
sub
adc
and
daa
loopne
cld
pop
jge
adc
pop
jp
xchg
dec
pop
jb
and
push
or
loopne
cmp
mov
pop
in
dec
lods
pop
std
jno
inc
(bad)
shr
(bad)
and
fisttp
adc
pop
mov
or
fnstsw
lock
jp
mov
dec
mov
xchg
fld
xchg
dec
dec
call
or
push
sti
push
add
jne
retf
cmp
adc
jl
mov
(bad)
cdq
mov
repnz
pop
fidivr
sbb
jo
out
std
cmp
cmp
jo
mov
inc
mov
push
or
push
fwait
add
(bad)
ja
jns
bound
hlt
pop
scas
xchg
xchg
mov
mov
jno
xchg
out
or
or
enter
jge
mov
std
mov
mov
popf
lods
and
lods
repz
retf
xchg
cwde
sub
in
ffree
stos
jnp
jecxz
popa
cld
sbb
xchg
int
aaa
int3
mov
lea
repz
or
jle
lods
mov
movs
lahf
or
inc
ror
(bad)
add
sbb
mov
mov
sahf
cmps
retf
jbe
stos
and
sub
push
cmc
dec
mov
call
aaa
adc
mov
dec
out
or
call
mov
xchg
outs
scas
pop
sti
popa
mov
jnp
sbb
cmp
adc
fsub
jge
(bad)
and
xchg
mov
out
cmps
xchg
cmp
cmp
jl
mov
out
outs
aas
jmp
push
retf
xchg
daa
fldcw
icebp
jmp
and
pushf
fcmovnbe
dec
mov
(bad)
dec
pop
add
mov
push
stos
div
pop
fsubr
jns
sub
test
jns
dec
jbe
pop
cmc
inc
or
mov
pop
add
or
mov
out
out
fcmovnu
jno
mov
pusha
in
outs
imul
pop
xor
pusha
push
xchg
retf
adc
mov
and
cmc
cmp
sub
pop
dec
xchg
push
in
ss
xchg
js
outs
cmps
test
jecxz
sbb
sti
inc
mov
stos
xor
out
pusha
or
or
fwait
movs
jl
ret
xchg
es
jo
outs
and
stos
ds
jns
cmp
cmp
jmp
fild
xchg
jbe
or
inc
mov
in
cmp
mov
and
mov
push
stos
into
das
cmp
jmp
or
xchg
mov
in
push
idiv
sbb
sbb
mov
out
cmc
or
gs
stc
pop
xor
loop
dec
cmp
dec
imul
push
fmul
xor
xchg
sti
in
sub
imul
(bad)
aas
div
mov
movs
jmp
xor
xchg
xor
test
dec
fwait
scas
fild
jbe
cmp
or
iret
dec
(bad)
(bad)
ficomp
mov
mov
jle
pop
xchg
fld
push
ins
add
cmp
ret
inc
cmp
in
rcr
mov
ss
add
cmc
ja
cs
inc
(bad)
push
int
rol
pop
int
mov
inc
loop
comiss
aam
dec
push
pop
test
rcr
fwait
leave
inc
pop
rcr
adc
std
dec
test
pop
inc
(bad)
mov
mov
xor
mov
sbb
scas
sahf
cmc
xor
adc
test
ins
in
test
xor
loope
and
and
jmp
inc
ss
repnz
cmps
jae
push
aaa
inc
xchg
jns
fiadd
les
aam
xor
mov
adc
jns
cdq
popf
(bad)
jp
pop
jl
or
cli
xlat
mov
retf
out
mov
xchg
jecxz
jns
xchg
cs
out
iret
push
push
sbb
mov
scas
or
mov
mov
out
mov
adc
jb
ret
mov
xor
aas
cs
mov
lahf
dec
pop
test
loopne
mov
loope
fwait
test
loop
jns
stc
jno
movs
(bad)
xchg
add
ret
call
cli
push
mov
lods
jecxz
icebp
push
dec
and
movs
jbe
xchg
jmp
daa
pop
mov
rcr
clc
xor
mov
iret
sti
jne
adc
lahf
ds
int3
in
add
sub
push
sahf
push
jg
mov
mov
xor
neg
mov
inc
pop
ins
fwait
jno
les
push
ret
(bad)
push
cwde
outs
out
sbb
(bad)
pop
cmp
pop
fdivp
mov
cli
cwde
ret
gs
hlt
pop
pop
js
scas
sub
push
jle
cmc
sub
mov
or
mov
call
add
iret
popf
in
add
arpl
or
adc
imul
test
into
pop
inc
mov
rol
cmp
jo
inc
fadd
inc
pop
mov
mov
inc
aas
push
or
(bad)
cli
mov
out
add
jecxz
btr
inc
not
into
mov
cld
addr16
fcom
add
or
ds
xor
cmp
call
stos
jge
or
mov
xchg
ins
iret
cmp
sub
adc
mov
imul
fstp
out
in
jmp
clc
cmp
pop
mov
rol
push
mov
mov
aad
stc
add
ds
lods
adc
sub
fwait
pop
out
rcr
(bad)
mov
fidivr
and
pop
iret
mov
and
lea
mov
daa
das
in
fcmovbe
or
ret
mov
push
out
sub
jecxz
stc
imul
mul
mov
adc
sar
aam
mov
daa
mov
mov
sahf
inc
aaa
xchg
enter
in
stos
add
stc
icebp
mov
mov
popa
movs
ds
call
pop
pushf
or
aas
(bad)
dec
test
jmp
mov
inc
inc
mov
ja
add
adc
dec
sbb
outs
xor
and
jo
adc
push
sbb
jo
or
ficom
aad
and
dec
in
cmp
xchg
or
je
int3
mov
arpl
adc
xchg
(bad)
fwait
dec
adc
or
push
mov
cmp
movs
sub
icebp
idiv
jl
or
push
mov
out
and
mov
push
jp
pop
js
push
xchg
pop
jo
mov
dec
push
aaa
mov
es
push
push
cmps
out
fsubrp
inc
lods
xlat
(bad)
mov
mov
stc
or
retf
pop
arpl
fcomi
es
add
loop
xor
movs
inc
push
or
cld
data16
xchg
xchg
out
jp
push
push
call
xchg
nop
jo
sbb
mov
mov
jnp
add
(bad)
pop
mov
(bad)
mov
std
out
pop
lock
daa
aaa
xchg
in
xor
mov
leave
lds
inc
pop
icebp
adc
xor
jae
sbb
cld
in
push
ror
iret
mov
nop
mov
jmp
in
pop
xchg
loop
xchg
adc
in
add
push
outs
outs
jbe
psrlq
fild
push
ds
push
sbb
ja
aam
test
popf
jae
lea
add
mov
or
dec
adc
aam
mov
or
dec
test
les
add
lahf
push
fcomp
sbb
xor
or
imul
lds
and
outs
mov
aas
ret
mov
and
das
add
xchg
or
je
sub
jl
stos
or
xor
jnp
inc
mul
jb
(bad)
mov
jg
or
(bad)
iret
xor
aaa
cmp
rcl
es
add
or
popa
addr16
push
shl
cmp
adc
dec
adc
loopne
pushf
inc
pusha
mov
sbb
sbb
mov
and
add
imul
loope
mov
ja
push
add
mov
dec
sti
cmp
adc
push
ret
cmp
out
mov
mov
or
shl
push
leave
adc
xor
rcl
ins
mov
aaa
pushf
xor
inc
push
mov
mov
push
imul
dec
mov
mov
test
push
jp
jl
cld
shl
cmps
inc
pop
pop
retf
in
pop
les
ret
mov
test
cmp
ss
inc
sub
in
sub
into
jmp
jl
hlt
pop
popf
mov
jmp
rcl
lods
xchg
xchg
push
imul
ret
xchg
scas
jge
push
icebp
jg
je
jecxz
mov
loop
(bad)
mov
(bad)
jae
push
pop
ja
test
ret
and
mov
shl
or
lahf
mov
mov
add
pop
out
inc
mov
add
rol
jmp
cmp
cmp
cmps
cmp
inc
adc
cmp
fstp
adc
shr
imul
fdivp
add
or
jbe
lds
pusha
cmp
mov
xor
repz
ds
out
cs
ss
push
jmp
ror
inc
add
shl
outs
dec
mov
pop
stos
xor
add
outs
test
inc
jmp
std
xor
int
push
movs
mov
or
pop
shl
or
jns
repnz
xchg
movs
xchg
out
ja
mov
or
and
mov
cmps
mov
je
int
jno
aam
or
(bad)
int3
out
outs
jle
adc
ins
mov
jmp
jne
add
sub
cdq
mov
outs
xchg
push
xacquire
ror
jno
jns
xchg
jns
stc
sub
xchg
loop
inc
sbb
adc
hlt
dec
out
dec
pop
mov
mov
sub
std
mov
pop
in
cdq
pusha
mov
arpl
test
adc
push
inc
iret
nop
add
inc
add
mov
shr
ds
lds
aam
repnz
push
daa
mov
inc
aad
sbb
fwait
jno
cmc
(bad)
out
lods
in
sub
and
mov
aas
dec
sbb
inc
out
lea
cld
xchg
mov
call
stos
mov
jbe
xchg
scas
or
push
repz
ret
inc
mov
inc
(bad)
cdq
loop
cmp
test
cmp
xor
mov
dec
sub
jmp
sbb
jae
test
(bad)
xchg
cmp
dec
in
or
mov
movs
xchg
cmps
cmp
push
lods
fsubrp
pushf
mov
les
ds
jmp
pop
mov
sbb
cld
out
pop
pop
stos
xor
inc
lods
test
nop
repnz
(bad)
push
push
cdq
fisub
shr
inc
and
push
shl
loop
jmp
pop
xlat
add
loopne
movs
aaa
stos
adc
inc
push
push
mov
jle
adc
cmps
jns
xchg
jmp
sbb
mov
push
aad
ds
push
push
mov
and
data16
cmps
adc
jle
test
xor
adc
mov
iret
out
jmp
shl
pusha
pop
stos
mov
mov
mov
ds
sub
jle
fadd
mov
test
icebp
adc
push
inc
test
popa
xor
xchg
call
sbb
popf
bnd
js
in
imul
fadd
mov
(bad)
push
jle
into
jbe
dec
xchg
sar
mov
sub
jns
shl
aas
(bad)
dec
adc
sbb
scas
dec
mov
mov
rcl
pop
and
pop
push
push
rcr
into
dec
xor
(bad)
sub
adc
or
jns
xor
push
dec
pushf
aam
ins
jl
pop
mov
cmp
xchg
cmp
jl
lock
lds
repz
js
mov
neg
add
shl
out
enter
enter
ja
loop
sbb
mov
aad
std
adc
ja
aam
jg
out
in
inc
leave
dec
sbb
lea
or
xchg
mov
push
xchg
movs
dec
pop
cwde
jecxz
fmulp
jbe
jecxz
(bad)
vxorps
adc
and
out
fwait
mov
or
push
and
(bad)
ss
out
and
cld
shl
call
jnp
gs
sbb
pop
and
lock
dec
adc
out
mov
shr
jmp
mov
out
gs
push
loope
fwait
cli
fidiv
(bad)
jmp
hlt
sub
sbb
cmp
fdiv
xchg
xchg
mov
push
hlt
stos
jmp
mov
imul
fisub
mov
or
dec
jl
cli
mov
pop
scas
dec
add
sbb
xchg
jae
adc
push
pop
aad
xchg
ret
add
jns
adc
push
or
mov
push
push
pushf
add
mov
out
aaa
rcr
inc
xchg
mov
and
pop
retf
sbb
test
or
das
jmp
or
call
push
fcomp
les
xchg
aad
jb
(bad)
repnz
das
add
add
int
adc
adc
jp
xchg
jl
jae
inc
dec
cmps
(bad)
lea
shl
repz
mov
aas
cmps
stc
out
sub
nop
xchg
hlt
es
cld
sbb
push
enter
xchg
fidivr
je
retf
stc
xor
data16
sbb
xchg
jnp
fldcw
sub
les
jne
sub
xchg
ds
shl
jbe
hlt
cdq
popf
ret
stos
(bad)
pop
rcr
pop
repnz
iret
loope
xchg
cmp
in
mov
scas
dec
or
(bad)
pop
(bad)
inc
es
jge
inc
push
xlat
(bad)
fist
push
xor
dec
dec
xor
mov
jno
pop
pop
retf
lahf
pop
dec
dec
shr
iret
call
aaa
ror
mov
aam
jbe
cmp
movs
jl
jmp
das
sub
cs
movs
push
outs
adc
add
xchg
add
rol
jo
dec
sub
cmp
mov
rcl
imul
shl
fs
lds
fdivr
add
mov
loopne
jle
push
aas
dec
icebp
push
cmc
xchg
inc
sbb
mov
outs
das
ja
xor
aas
retf
mov
sbb
or
lds
mov
pop
push
shl
shl
xor
or
test
test
cmp
dec
mov
or
and
pop
pop
mov
and
pop
mov
dec
scas
xchg
and
shl
sbb
and
lock
adc
sub
adc
mov
imul
loope
mov
retf
ins
mov
adc
cwde
xor
repnz
idiv
mov
sti
inc
cmp
push
adc
add
jne
in
push
data16
ss
jecxz
cmp
sti
mov
or
movs
jo
pop
sub
test
pop
lock
cmp
shl
mov
js
mov
jp
xchg
mov
cld
into
jmp
mov
jae
xor
mov
in
or
add
sub
push
fisttp
sub
test
sub
ret
push
xor
ror
or
cs
inc
sar
outs
inc
idiv
jp
xor
xor
das
test
xor
test
mov
sub
pushf
push
or
and
jno
jb
push
push
sti
(bad)
jge
sub
loopne
push
adc
pop
rcr
es
jge
inc
sbb
mov
sbb
imul
xor
mov
je
loope
fcom
pop
push
mov
push
lahf
inc
jo
test
idiv
fistp
cmc
call
int
loopne
ror
sub
clc
clc
and
enter
sar
mul
int3
pop
jns
sub
(bad)
aas
lds
inc
mov
push
adc
sub
xor
imul
xlat
add
(bad)
repnz
lods
jns
je
retf
stc
pop
pop
mov
sub
pop
push
xchg
into
sbb
or
mov
fs
jmp
aam
cmp
out
(bad)
jnp
aas
in
repz
mov
popf
js
(bad)
adc
popa
pop
push
shl
mov
sbb
jno
xchg
jnp
xchg
dec
scas
dec
add
mov
pushf
mov
xor
xchg
pop
shl
push
inc
adc
push
iret
pop
es
mov
sub
es
mov
hlt
mov
mov
scas
repnz
mov
cmp
ret
(bad)
setns
cmp
and
mov
adc
or
fild
cmp
mov
push
(bad)
jbe
adc
inc
cmps
mov
popf
lods
shl
push
inc
shl
mov
lods
popa
push
ficomp
cmps
jnp
ins
adc
arpl
(bad)
das
sbb
fcmovnu
imul
hlt
sub
sbb
out
aad
into
ds
data16
and
pop
cmps
into
ror
jno
hlt
cmp
inc
jl
je
adc
ret
ret
popf
mov
mov
xchg
iret
push
outs
mov
push
jnp
stos
idiv
push
xchg
int
(bad)
jmp
xor
lock
add
inc
add
clc
scas
pop
sbb
mov
push
shl
out
frstor
push
outs
sbb
sub
std
clc
inc
hlt
add
cmp
movs
cmps
retf
std
outs
test
daa
pop
bound
mov
inc
dec
inc
jno
xchg
xchg
add
rcl
push
sbb
push
test
pop
std
cmp
mov
xchg
fwait
xchg
scas
in
inc
or
aad
pop
sub
loopne
outs
pop
arpl
add
push
xchg
scas
add
mov
inc
pop
ja
not
imul
pop
div
repz
iret
jp
sub
mov
sbb
in
ret
mov
(bad)
clc
and
mov
jo
outs
sbb
daa
stos
and
mov
jg
dec
js
int3
mov
xchg
ror
aam
inc
and
cld
data16
cmp
sbb
cdq
mov
and
ins
int
cli
fstp
mov
fisub
int3
hlt
gs
enter
nop
mov
and
icebp
jb
sub
add
test
push
cld
test
jecxz
fcmovb
add
adc
dec
adc
shl
xchg
sub
loop
mov
fadd
loope
push
and
fwait
xor
mov
mov
xlat
mov
sub
cdq
call
dec
lods
hlt
(bad)
(bad)
iret
push
pop
jns
ins
adc
in
aam
jmp
aad
mov
or
mov
dec
retf
or
repnz
pushf
push
add
je
mov
das
bnd
xor
retf
out
mov
mov
dec
adc
cmc
pop
inc
sub
mov
sub
jno
call
mov
dec
or
test
(bad)
retf
fxch
daa
jo
sub
daa
bound
xchg
test
push
leave
xor
mov
icebp
cmp
xchg
shr
and
fimul
cmc
in
mov
scas
fldenv
sub
jmp
jp
int
nop
mov
clc
mov
repz
in
fldenv
mov
pop
mov
lahf
or
or
cmps
dec
sbb
add
fnstcw
mov
(bad)
(bad)
in
dec
stc
(bad)
xchg
call
or
test
lds
xor
push
fnstsw
mov
or
fsubr
mov
repnz
nop
(bad)
jne
ins
into
mov
mov
sub
adc
xchg
(bad)
imul
add
jne
fstp
sahf
popa
pop
out
je
imul
and
and
data16
inc
adc
scas
pop
jecxz
pop
into
jae
xor
push
vmovdqa
push
dec
std
out
xor
mov
loope
add
scas
inc
mov
xchg
in
inc
jge
pop
rcl
cdq
es
jge
test
outs
xor
cmp
xor
test
inc
jle
fs
dec
lahf
mov
inc
ins
mov
push
shl
mov
cld
add
adc
(bad)
dec
rol
jns
call
dec
ror
fstp
ds
mov
push
mov
xchg
xchg
pop
cmc
mov
pop
mov
bound
and
in
cwde
pop
mov
repnz
xor
(bad)
mov
xor
hlt
dec
fbstp
xor
hlt
movs
repnz
movs
shl
xchg
test
(bad)
repz
pop
mov
aam
shl
test
push
inc
call
xor
out
and
rcr
dec
outs
push
add
fiadd
pop
outs
loop
fmul
add
lea
inc
sub
push
add
ret
pop
pop
sbb
mov
mov
(bad)
mov
adc
sbb
xchg
inc
inc
rcl
data16
adc
in
add
mov
out
stos
cmp
dec
aad
and
mov
(bad)
dec
scas
inc
repz
ds
jnp
push
out
sub
xlat
inc
inc
mov
push
cdq
jp
loop
pusha
pop
inc
xchg
leave
sub
push
imul
push
jl
add
xchg
xchg
push
cs
jns
jl
add
cli
nop
jg
bnd
jne
mov
mov
sub
mov
int3
daa
out
lahf
scas
jecxz
push
xchg
xor
sti
gs
sar
call
test
xchg
adc
shl
in
pop
inc
mov
and
mov
push
cld
mov
push
lods
xor
addr16
cdq
jnp
pop
pop
rcl
dec
mov
pop
das
pop
idiv
jnp
cwde
mov
(bad)
int
dec
std
lds
dec
xchg
jmp
test
lds
jl
pop
sbb
(bad)
and
mov
test
enter
jb
mov
call
adc
dec
jge
enter
jle
fnsave
add
cs
std
mov
sbb
xchg
mov
or
hlt
cmp
hlt
or
jno
nop
and
sub
rol
sbb
hlt
inc
dec
mov
scas
jge
into
(bad)
pop
out
sbb
popf
push
pushf
das
and
xchg
sub
jne
jae
ins
ss
daa
inc
mov
adc
and
inc
add
(bad)
shl
sub
ds
inc
lds
cmp
inc
xor
mov
push
mov
inc
aas
sub
xchg
das
xchg
pop
ret
out
test
ins
sub
dec
lds
into
add
pop
adc
rol
mov
call
add
cwde
mov
fwait
js
int3
xlat
pop
jmp
mov
lods
lea
or
mov
mov
aam
rcl
mov
jbe
sbb
in
mov
inc
add
add
mov
and
jmp
adc
lock
adc
test
pushfw
sti
enter
(bad)
pop
fs
add
jp
dec
fld
jmp
es
vhsubpd
add
mov
imul
push
retf
aas
push
call
or
xchg
sbb
mov
cwde
sti
mov
inc
call
mov
jo
sbb
jl
retf
je
fnstenv
fistp
inc
mov
rcr
lods
loope
arpl
mov
jbe
xchg
test
add
xchg
fnstcw
jne
inc
add
jbe
xor
adc
std
mov
test
push
jge
pop
sbb
repnz
imul
adc
push
addr16
mov
mov
shr
dec
fistp
cmps
(bad)
and
test
cmp
mov
adc
mov
stos
mov
bound
cs
lods
std
xor
mov
dec
cmps
movs
test
stos
cmp
pop
fsub
(bad)
call
xor
(bad)
pushw
push
xchg
cmp
enter
ds
sub
mov
push
mov
dec
xlat
retf
mov
xchg
mov
scas
cld
imul
into
in
sub
sub
das
aad
mov
nop
xor
jbe
in
push
inc
sub
scas
or
stos
lods
mov
data16
sahf
test
in
nop
bound
dec
mov
dec
in
shl
iret
fsubr
out
mov
or
add
clc
xchg
jb
sub
jb
add
imul
adc
adc
retf
push
js
fst
dec
or
mov
inc
inc
(bad)
dec
xor
idiv
mov
stc
sbb
push
das
add
xchg
repz
fistp
fstp
inc
mov
data16
or
push
inc
ret
stos
mov
hlt
mov
ret
push
push
xchg
mov
out
stc
jge
lea
hlt
jb
call
mov
iret
add
scas
pop
mov
cmp
(bad)
repz
sahf
dec
fmul
jbe
arpl
dec
dec
loop
shl
pop
mov
sti
pop
xor
push
nop
push
scas
jb
mov
adc
cli
jno
aam
pop
ret
js
mov
mov
frstor
imul
dec
push
ins
push
dec
out
xchg
out
xor
jecxz
xor
jecxz
bound
(bad)
outs
pop
cmps
xor
shr
icebp
hlt
sub
repnz
in
stc
(bad)
sbb
xchg
aad
ins
dec
nop
test
addr16
jno
mov
leave
xchg
(bad)
aam
int3
push
xchg
scas
sbb
ficomp
icebp
push
adc
ret
inc
scas
pop
movs
jp
into
call
aam
adc
test
mov
dec
(bad)
jl
fcomip
out
enter
cmps
push
pop
pop
test
cwde
inc
push
test
add
pop
mov
scas
xor
push
aaa
xor
leave
or
test
call
adc
cmp
cmc
call
lea
dec
add
xchg
adc
iret
cdq
mov
mov
(bad)
in
stos
cmc
leave
icebp
jb
loope
inc
add
push
sbb
dec
sbb
xchg
dec
test
je
fadd
xchg
push
shl
bts
mov
dec
(bad)
mov
and
jg
sahf
rol
ret
push
movlps
leave
test
push
dec
outs
cmp
mov
stos
xchg
jae
test
inc
cs
pop
xchg
fwait
or
xor
push
cmp
dec
scas
jge
scas
xor
jns
mov
jae
ret
add
in
fcmovb
xchg
dec
gs
adc
mov
retf
inc
sbb
add
push
fmul
out
cmp
add
and
mov
pop
dec
jnp
outs
(bad)
mov
add
inc
xor
pop
pop
lahf
or
cs
xor
inc
xchg
inc
cmp
and
cmp
inc
fmul
mov
or
xor
ins
xchg
jo
pop
out
cmp
mov
pop
push
push
adc
fstp
jle
movs
pop
add
arpl
mov
jne
inc
and
xor
mov
test
outs
xchg
adc
lods
jmp
push
push
int
cwde
dec
outs
(bad)
jns
mov
or
pop
jbe
mov
xor
addr16
pop
data16
je
or
mov
mov
loop
push
out
test
(bad)
push
clc
push
xor
jnp
rol
pushf
jge
adc
into
and
hlt
mov
aas
jae
push
sub
or
dec
lods
push
fistp
mov
sbb
jb
movs
xchg
les
and
ds
mov
not
rcr
sbb
pop
xor
cmp
pop
mov
pop
pop
dec
mov
dec
pop
sbb
adc
scas
inc
(bad)
lods
imul
std
bound
inc
pop
enter
adc
daa
popf
push
repnz
mov
lock
in
aad
mov
mov
popf
dec
xlat
jns
call
outs
cmp
aas
sbb
xlat
leave
jl
sbb
jge
daa
xchg
(bad)
jle
xlat
xor
jecxz
xor
cs
pop
pop
fnsave
loopne
inc
rcr
mov
cwde
mov
push
sbb
test
(bad)
mov
dec
jno
adc
or
jns
fisttp
leave
mov
mov
rol
sub
dec
lods
scas
ret
xlat
push
popa
jmp
push
pop
aad
mov
adc
cmp
add
push
loop
or
scas
add
lds
jo
xchg
sub
fisubr
inc
or
inc
jno
or
xchg
movs
call
mov
cmp
jmp
nop
dec
jmp
ror
shl
into
enter
pop
out
cld
retf
jmp
ret
pop
in
inc
test
push
lock
mov
loopne
adc
mov
xchg
xor
xlat
pushf
jmp
lahf
popa
push
int
fs
and
jmp
sub
cmp
push
cmp
mov
xchg
mov
push
int3
fstp
movsx
loopne
sbb
xchg
xchg
cmp
and
jo
jg
aaa
ja
fistp
fisub
mov
cmc
test
or
fwait
ins
or
xor
fld
(bad)
in
std
pushf
and
cmps
ret
shr
ss
scas
je
movs
ret
mov
cwde
push
fsubr
fidivr
inc
sbb
(bad)
jp
adc
cdq
pop
jmp
pushf
pmuludq
cmps
xor
dec
mov
(bad)
sub
cmc
and
(bad)
rcr
pop
pop
pop
mov
inc
getsec
nop
out
cmp
shl
add
inc
jge
and
hlt
popa
mov
jmp
out
inc
add
xor
pop
cmp
sbb
popf
out
lahf
ficomp
cmp
(bad)
push
ror
pop
sbb
xchg
stos
jmp
sbb
pop
cs
pop
adc
ds
pop
or
xchg
cmp
jno
fbstp
es
iret
fwait
ins
cli
pop
movs
cmp
(bad)
pop
nop
pushf
jb
lahf
sbb
in
lock
shl
xchg
cmp
mov
jle
push
lahf
xor
mov
rol
mov
xor
dec
fbstp
cmc
std
pop
fisttp
sbb
jns
or
dec
int
jnp
ret
mov
sbb
add
rcr
mov
mov
add
pop
or
movs
sub
adc
adc
mov
js
and
hlt
mov
pop
mov
mov
mov
add
out
mov
dec
iret
push
jae
loop
aas
bound
mov
mov
mov
cmp
mov
adc
add
mov
mov
lods
add
popf
mov
jbe
cmp
(bad)
mov
popa
add
aaa
repz
mov
adc
fs
jae
jmp
pop
jno
adc
(bad)
icebp
dec
push
inc
movs
xor
push
ins
or
jp
aam
or
mov
lahf
jbe
jae
mov
adc
xor
mov
hlt
addps
pop
jge
sub
mov
cmp
ins
nop
cmp
mov
jg
fcomp
out
mov
fs
inc
push
pusha
into
cmp
(bad)
ds
ins
imul
mov
jae
push
mov
(bad)
ds
pop
mov
mov
jp
sub
sbb
gs
rcl
shl
mov
jle
adc
xor
div
into
xor
mov
test
pminsw
xchg
push
push
pop
add
nop
xor
push
retf
popa
dec
nop
or
pop
jge
mov
pop
and
jno
mov
xchg
jne
pop
mov
cmp
and
inc
xchg
jmp
jmp
(bad)
cmp
xor
out
int3
mov
xor
and
mov
retf
hlt
fld
or
xchg
stc
int3
fcomp
movs
push
mov
dec
sti
push
mov
inc
out
pusha
call
cwde
xchg
jnp
jg
push
pop
sbb
pop
les
jo
or
leave
mov
pop
xchg
les
repnz
fs
push
push
pop
outs
(bad)
pop
(bad)
out
jp
add
int3
in
mov
or
mov
mov
mov
repz
xor
ror
rol
mov
test
jmp
cmp
test
call
pop
pushf
push
popf
mov
sbb
xor
dec
mov
add
push
inc
int3
xchg
loope
std
xchg
adc
out
cmp
repz
push
fcmovbe
test
push
inc
sahf
(bad)
push
and
mov
and
test
push
into
and
pop
mov
and
enter
enter
push
movntps
cmp
pop
mov
jl
sub
cs
shl
add
ins
fdiv
xor
test
stos
cmps
add
inc
mov
push
and
(bad)
or
ffree
(bad)
div
push
push
xchg
sub
into
mov
bound
ins
adc
push
xor
or
(bad)
int
jno
or
fdiv
call
(bad)
adc
dec
stc
inc
xchg
add
push
mov
mov
pop
cmp
xchg
add
adc
enter
cmc
mov
dec
add
lds
fwait
lods
aaa
aad
cmps
push
inc
cs
test
(bad)
sti
adc
jg
jns
repnz
movs
or
test
xchg
test
ror
call
mov
ret
jb
and
mov
add
sar
mov
repz
mov
fnstcw
std
out
jp
or
mov
call
cmps
lahf
xchg
add
test
dec
pop
xchg
aas
(bad)
cmp
mov
xchg
sub
int3
enter
div
pop
fisub
les
and
jo
dec
xor
mov
je
imul
movs
xchg
push
xchg
cmp
fwait
pop
inc
nop
adc
dec
adc
dec
jl
mov
(bad)
sahf
cmps
(bad)
test
fmul
loopne
test
pop
or
stos
adc
cmp
jmp
scas
lea
loopne
cmp
in
pop
test
xchg
mov
dec
jb
mov
adc
in
sbb
jle
xor
ins
repnz
aas
xchg
dec
loope
push
sahf
or
data16
dec
xor
jnp
mov
imul
sar
out
xchg
test
mov
std
mov
cmp
ret
cdq
cmp
push
ret
imul
iret
mov
add
test
cli
daa
mov
sub
or
stos
stos
inc
lock
(bad)
cli
sbb
adc
ret
push
test
pop
jns
ins
imul
pop
std
test
push
inc
push
push
mov
clc
retf
imul
es
std
inc
dec
inc
dec
std
mov
pop
xchg
clc
mov
inc
test
nop
push
lds
shl
shl
jae
dec
addr16
or
daa
cmp
adc
push
push
scas
add
into
dec
mov
aam
mov
arpl
ja
int
sub
mov
and
push
data16
sar
adc
add
das
add
loop
push
iret
jbe
dec
fwait
mov
ret
fs
fisttp
dec
addr16
adc
xlat
and
dec
inc
repnz
cdq
jne
repz
ror
fsubr
mov
jg
push
popa
xor
popa
xchg
cld
cmps
adc
clc
adc
es
(bad)
enter
add
mov
cld
pavgw
push
rol
add
mov
lds
add
add
mov
out
ja
cmps
xor
int3
cdq
pop
fdivr
push
imul
mov
std
test
adc
push
stc
inc
mov
mov
pop
xor
lods
ret
test
xor
xchg
mov
pop
popa
cmp
mov
push
outs
out
cmc
add
or
out
imul
leave
mov
cmp
loope
lahf
mov
or
std
(bad)
addr16
fwait
into
sbb
push
test
retf
lahf
add
xchg
pop
lods
lds
retf
add
lods
mov
mov
xchg
test
call
mov
std
jo
adc
outs
pop
int
rcr
sub
mov
push
imul
sbb
add
xchg
and
repnz
cmp
rcl
movs
sub
push
ret
adc
cli
mov
pop
adc
test
cdq
sbb
adc
push
xchg
nop
stos
jecxz
jnp
mov
or
add
push
iret
arpl
push
aas
push
mov
inc
inc
jns
or
clc
stos
test
xchg
int3
out
push
mov
mov
mov
rcl
xor
es
in
lds
das
out
(bad)
jle
mov
fimul
ficom
xor
ror
mov
dec
leave
jg
cld
jge
gs
stos
dec
mov
mov
ins
gs
push
imul
(bad)
out
jb
outs
ja
cli
push
cmp
push
pop
cmps
and
out
pop
outs
test
xchg
mov
cmp
pop
sbb
sbb
cmp
jo
mov
sar
aas
add
jb
xchg
xor
and
stc
mov
aam
cli
adc
or
inc
mov
retf
or
xor
nop
aam
pop
sbb
lods
cdq
xchg
(bad)
rol
add
out
xor
pop
or
dec
sbb
cmps
sub
or
lds
pushf
test
adc
stc
xchg
ds
bound
mov
in
sub
cmps
mov
rcr
or
inc
push
add
loope
adc
fxch
pop
retf
fimul
(bad)
fsubr
pop
cmps
in
mov
push
loopne
mov
jno
shr
push
push
repnz
pop
jmp
dec
jmp
jmp
inc
push
and
jg
or
pop
addr16
jmp
addr16
imul
xchg
and
mov
dec
ror
lods
and
movs
lahf
sbb
loopne
xchg
(bad)
movs
cdq
or
shr
popa
ins
ja
ja
das
mov
or
addr16
sub
inc
sbb
fsqrt
mov
jle
xchg
rcl
(bad)
cmp
xchg
icebp
pop
mov
pop
push
das
jmp
push
bound
rcl
sti
cli
test
dec
mov
or
mov
(bad)
jle
aas
movs
mov
in
pop
add
(bad)
(bad)
out
mov
xor
ins
inc
cmp
mov
out
pushf
xor
inc
xchg
and
aas
bnd
std
loope
xor
js
call
rol
push
call
mov
push
push
mov
out
cmp
loope
add
jns
add
inc
cld
mov
imul
pop
push
dec
mov
stos
inc
inc
(bad)
nop
(bad)
(bad)
cmps
lea
cmps
shl
jg
jns
test
addr16
dec
shr
sbb
not
(bad)
arpl
or
addr16
aad
or
sti
pop
or
aad
js
es
mov
int3
mov
je
inc
stos
add
mov
pop
mov
xchg
rcl
outs
popf
mov
pushf
inc
pop
dec
inc
loope
pop
inc
mov
cmc
lea
pop
xchg
dec
popf
les
sub
cli
mov
mov
lock
sar
jmp
fist
pop
addr16
ret
std
xlat
fwait
mov
sti
je
pop
dec
cmp
inc
scas
lahf
lods
clc
mov
adc
dec
mov
or
js
stos
jle
stc
push
icebp
xchg
mov
cmp
add
imul
pushf
xchg
or
pushf
and
jno
xchg
aas
out
xor
aam
bound
xchg
retf
pop
sub
fmul
inc
mov
sbb
ins
add
inc
inc
jmp
push
hlt
stos
into
mov
sub
jb
pop
iret
xchg
pop
lea
test
stos
xchg
mov
shr
inc
(bad)
popa
stos
inc
aas
or
shl
mov
or
inc
sahf
mov
inc
in
stos
and
imul
fidivr
gs
add
jmp
jne
push
inc
and
cli
in
ins
pop
ror
test
add
mov
popa
ror
mov
(bad)
les
aas
add
test
add
xchg
sbb
jbe
pusha
push
push
mov
loope
mov
xchg
push
sub
sbb
cmp
xchg
outs
fisub
mov
int3
retf
mov
aad
pop
stc
fs
push
in
test
shl
cmp
sub
add
sbb
mov
cmp
mov
lds
mov
inc
cmps
div
sub
mov
call
aad
mov
es
daa
arpl
les
inc
push
js
ret
mov
rcl
jmp
shl
mov
mov
into
jo
rol
jae
out
jno
mov
imul
mov
or
(bad)
push
mov
sbb
xchg
sub
adc
fsub
test
movs
add
std
push
dec
lea
inc
push
scas
enter
psubq
add
xor
lods
es
(bad)
arpl
lods
ret
add
outs
cmps
mov
sub
hlt
adc
xchg
sbb
(bad)
iret
ins
sti
addr16
cs
xor
add
lods
mov
out
dec
jmp
adc
mov
scas
mov
sub
(bad)
(bad)
jbe
mov
dec
add
(bad)
mov
test
mov
pushf
jbe
(bad)
iret
or
mov
mov
cmps
lods
scas
push
push
daa
loop
inc
jnp
dec
mov
into
dec
dec
push
popa
add
lahf
int
fnstcw
outs
dec
cmp
cmp
jg
dec
mov
out
std
fstp
imul
aas
dec
cli
jo
fstp
iret
xor
fidiv
aad
jnp
mov
cmps
or
outs
or
std
cmps
inc
xchg
mov
push
push
or
cs
dec
fwait
pop
xor
outs
dec
or
or
lods
or
xchg
add
rcl
sbb
push
das
xlat
inc
iret
push
out
lahf
pushf
(bad)
mov
popf
and
cmp
adc
call
frstor
stos
mov
iret
dec
enter
xchg
scas
add
adc
sub
lock
mov
inc
icebp
(bad)
cmc
xor
add
and
es
icebp
adc
mov
sbb
retf
cs
add
adc
mov
mov
pop
ficomp
xchg
test
inc
movs
push
nop
lds
jne
cmp
fsub
stc
sbb
pushf
ror
retf
imul
adc
pop
outs
cld
lds
bswap
lods
fs
pop
push
or
adc
enter
sbb
and
int
mov
xor
ficom
test
xlat
ss
pop
es
mov
fidivr
setl
fisttp
call
add
jp
call
and
adc
imul
outs
pop
jmp
adc
inc
lahf
xchg
add
stos
inc
cdq
mov
cmp
sbb
sbb
test
or
jbe
movs
les
mov
push
and
mov
mov
pop
dec
jmp
push
adc
push
pop
add
jl
add
jbe
stc
inc
push
pushf
(bad)
pusha
push
dec
and
mov
xlat
add
outs
pop
inc
dec
dec
push
mov
xchg
mov
jbe
loop
daa
test
push
mov
arpl
(bad)
sar
push
fs
retf
outs
push
xchg
push
fstp
push
sbb
aam
cmp
lods
imul
cdq
dec
pushf
ins
pop
daa
add
cli
aam
pusha
mov
or
push
lods
stos
add
adc
pusha
cld
sbb
imul
fs
lds
cmps
xchg
jnp
sbb
sbb
push
fld
pop
(bad)
mov
sbb
dec
popf
in
jg
jns
and
sbb
outs
and
mov
out
fld
push
jle
jmp
movs
pop
(bad)
cmc
sbb
xlat
ror
scas
ins
add
sub
in
stc
adc
xor
iret
add
enter
jmp
sahf
sahf
pop
stc
push
and
xlat
jmp
xchg
pop
popa
or
and
mov
movs
cli
jb
cmp
test
inc
and
sbb
fidiv
xchg
xlat
mov
inc
cli
push
xor
mov
clc
test
cmp
dec
lock
push
in
xchg
repz
mov
add
dec
cmp
dec
rol
mov
ss
pop
jo
(bad)
out
pop
jmp
pop
arpl
mov
jmp
shr
xchg
int
fwait
mov
xchg
push
and
xor
jg
xor
cs
shr
push
dec
add
leave
add
es
jg
pop
or
ja
xor
aam
xor
xchg
add
push
xor
ror
repz
jecxz
ins
sbb
mov
pop
bound
call
pop
(bad)
fmul
push
dec
scas
or
push
sbb
ret
pusha
inc
jb
ret
add
inc
sub
mov
mov
pop
ja
xlat
mov
cmps
aaa
pushf
cli
repnz
adc
xor
scas
sti
mov
xchg
cs
pop
cmps
jb
jmp
lea
jp
xor
repnz
dec
xchg
div
mov
stc
push
inc
sub
je
cmps
sbb
and
repz
cmp
out
stos
push
int3
xor
ja
mov
test
jbe
lock
push
pusha
mov
loop
pushf
dec
jo
add
cmps
test
cmp
add
xlat
mov
fist
cli
out
inc
(bad)
add
and
adc
inc
cmp
iret
mov
ret
out
(bad)
std
jmp
dec
and
sbb
sub
outs
push
bound
(bad)
out
aaa
loop
in
mov
sbb
rcl
adc
jb
(bad)
repz
dec
adc
fild
ds
adc
mov
mov
icebp
jmp
cmps
push
jb
add
nop
loop
pop
pop
dec
fldenv
jl
jne
daa
(bad)
inc
scas
push
stc
retf
in
xlat
push
push
imul
fcmove
dec
jp
addr16
js
adc
popf
mov
popa
push
nop
xor
xchg
and
jmp
push
jns
jp
cs
add
sar
ja
or
iret
inc
scas
mov
cld
call
in
jmp
test
push
loope
sbb
mov
(bad)
ror
leave
jecxz
idiv
test
mov
push
pushf
jno
xor
js
inc
sbb
int
dec
outs
fisub
push
mov
jns
jae
sub
call
xlat
popf
pop
out
mov
push
and
xchg
push
outs
push
jnp
lock
add
jle
xlat
and
cmp
mov
mov
call
mov
sub
(bad)
outs
mov
stos
and
hlt
cli
cdq
pop
push
jmp
lock
mov
enter
lods
push
cld
lods
mov
and
call
add
daa
adc
lds
in
push
xor
adc
push
out
and
fbstp
(bad)
xchg
fsubr
stos
sbb
add
sbb
and
push
test
mov
jb
mov
in
int3
test
setbe
xchg
pop
jbe
cmps
das
dec
out
mov
int
xor
mov
ror
xchg
inc
cmps
mov
out
jl
xchg
out
and
jmp
ror
jbe
hlt
vpsubb
add
pop
lea
ins
(bad)
aas
imul
ja
dec
mov
fs
sub
pushf
xor
retf
cdq
jbe
(bad)
rep
in
adc
movs
shr
ja
enter
jl
repz
mov
ins
aad
test
lea
cs
shl
sub
lods
xchg
(bad)
in
cdq
shl
pop
mov
pop
or
dec
mov
adc
xchg
jns
daa
lds
sub
inc
std
or
xchg
aaa
jne
loope
fwait
dec
out
mov
push
and
jg
lods
not
jb
xor
jg
call
cmp
retf
push
inc
cld
pop
xor
cmp
push
popf
(bad)
mov
in
in
push
pop
pop
mov
imul
mov
inc
fimul
sbb
shl
xchg
jno
cld
test
xchg
stc
shl
arpl
retf
jne
jle
mov
into
inc
popf
add
inc
ret
sbb
loop
shl
dec
inc
jle
mov
mov
loope
popa
adc
and
mov
retf
ret
stos
retf
movs
sub
jmp
and
mov
call
addr16
pusha
test
test
cmps
cmp
mov
mov
popf
jnp
push
stc
pop
aam
cmp
xor
mov
add
in
ror
in
in
inc
test
dec
rcr
inc
xor
mov
ret
fiadd
and
push
repz
pushf
lahf
xor
pop
and
xor
lods
sub
mov
out
mov
out
dec
stos
inc
das
mov
add
(bad)
mov
xchg
xlat
inc
fs
test
ja
popf
cmps
aas
retf
js
mov
(bad)
xor
mov
idiv
mov
retf
scas
mov
mov
mov
lds
xchg
leave
jle
scas
in
(bad)
jg
aaa
mov
lods
mov
clc
xor
out
adc
sub
enter
mov
sbb
scas
cld
dec
out
inc
sub
(bad)
cmp
hlt
int3
call
sub
lea
gs
int3
or
dec
pop
pop
rcr
add
rcr
pop
and
pop
loopne
cli
xchg
pop
xchg
push
mov
push
cmp
ja
sub
dec
daa
push
es
outs
or
out
lods
pop
lahf
fnstsw
aad
pop
mov
mov
enter
dec
bound
mov
aas
inc
push
xor
add
cs
ss
fs
ret
scas
ja
pop
iret
cmps
in
cmp
lock
push
enter
mov
xchg
jmp
out
leave
adc
dec
lahf
add
je
in
or
cld
test
in
je
daa
in
mov
movs
jmp
xchg
xchg
test
dec
xchg
sub
cmp
push
sub
or
test
xchg
sub
push
sub
cld
sahf
in
push
out
faddp
fisub
sar
cld
stos
inc
mov
and
push
icebp
scas
das
mov
dec
xor
dec
ss
mov
(bad)
xchg
fnstsw
ins
push
mov
push
test
jnp
icebp
push
mov
add
push
dec
scas
dec
xchg
and
xor
jmp
test
xor
int
(bad)
jp
pop
mov
xchg
stos
jb
jbe
mov
repnz
sbb
add
jp
in
imul
jmp
mov
pop
lahf
je
in
jle
(bad)
aam
sbb
jge
mov
or
(bad)
mov
test
xchg
push
jle
pop
push
adc
sar
cmc
pusha
pushf
push
xchg
mov
stc
jge
push
dec
inc
lock
sahf
sub
test
int3
jo
inc
jl
fwait
sbb
jnp
nop
cli
push
dec
mov
jge
jo
or
mov
(bad)
adc
xchg
out
ins
retf
or
push
mov
std
add
pop
jae
sbb
in
cmp
popa
jle
aaa
lock
movs
push
stos
lahf
jbe
inc
loope
shl
add
repz
dec
bound
neg
scas
das
lds
push
retf
pop
push
arpl
ret
pop
xor
inc
(bad)
mul
cwde
es
int3
popa
sar
xchg
rcr
ins
mov
test
xchg
inc
xor
add
push
cmp
cmp
jg
(bad)
popa
shr
cmp
cmp
adc
add
pop
dec
pop
pop
icebp
lds
add
outs
inc
(bad)
jge
sbb
arpl
psrlq
mov
es
scas
pop
shl
cmp
int
xchg
xor
xchg
js
sbb
mov
out
pop
pusha
cdq
jmp
dec
pop
repnz
mov
pop
push
jae
or
jp
xchg
das
xlat
ds
pushf
xor
loop
push
sbb
xchg
icebp
xchg
sbb
out
adc
shl
inc
adc
and
scas
mov
stos
es
xlat
push
inc
dec
dec
mov
push
mov
mov
out
test
cmp
into
add
dec
push
or
stos
adc
mov
adc
mov
push
mov
xor
shr
cmc
test
jg
mov
in
cmp
scas
cdq
cmp
movs
into
push
mov
add
pop
fld
sbb
add
shl
jne
fs
mov
aad
aaa
jp
sti
cmp
mov
imul
lods
hlt
sar
(bad)
lahf
(bad)
cmc
fwait
stc
pop
mov
nop
mov
push
mov
in
cmp
inc
fs
push
dec
sbb
icebp
mov
dec
dec
dec
retf
mov
inc
xor
or
cs
push
clc
leave
push
cmp
out
popf
jno
jae
shl
ret
pop
xchg
jbe
pusha
add
outs
cmp
mov
movs
push
nop
mov
stos
inc
hlt
in
inc
adc
movs
jg
mov
(bad)
mov
stc
fld
mov
movs
outs
cmc
shr
retf
aad
retf
jp
cmp
mov
aad
ds
push
push
fiadd
jbe
stos
loope
pop
movs
inc
pop
out
dec
ror
xchg
xchg
out
in
or
pop
sbb
adc
inc
mov
xor
call
mov
in
leave
xchg
imul
jo
push
adc
(bad)
psllq
out
cmp
rcl
cmc
test
cmc
xchg
fsub
outs
and
jo
lahf
mov
cmp
dec
lods
adc
imul
ins
mov
jnp
mov
sub
or
mov
movs
aas
call
inc
loop
add
hlt
test
pop
or
xor
fimul
sbb
repnz
push
add
mov
jmp
in
xchg
loopne
popa
sbb
sub
mov
test
ror
rcr
outs
idiv
and
in
nop
dec
test
ror
or
sbb
jne
rol
mov
sub
outs
adc
cmp
(bad)
mov
jnp
ds
lods
adc
dec
mov
push
test
mov
push
pushf
movs
mov
pop
adc
add
cmp
cmp
sbb
addr16
mov
xlat
(bad)
sbb
pop
dec
jmp
cmp
xor
movs
dec
rcl
in
shl
jmp
std
mov
movs
aas
push
shr
mov
loope
call
scas
cmps
inc
add
stos
cmp
and
loop
cli
stos
dec
push
out
xchg
push
outs
adc
sti
rol
bound
data16
sbb
inc
lea
push
xchg
xor
iret
adc
pop
and
pop
neg
jmp
jmp
jmp
leave
sub
bound
ret
push
dec
cmc
stos
rcl
mov
inc
(bad)
adc
mov
pop
rcr
sbb
(bad)
loop
lahf
jl
push
(bad)
pop
outs
inc
cmp
lock
out
push
paddusb
add
xor
aad
adc
jnp
aas
mov
pusha
push
cmp
lahf
add
adc
mov
cmp
cmp
sub
or
cmp
rol
push
(bad)
addr16
int
add
mov
sub
test
repnz
test
pushf
sti
test
adc
call
leave
sbb
pop
mov
adc
inc
arpl
adc
popa
mov
add
push
xchg
fnstsw
xchg
push
loop
dec
fst
xor
stos
inc
add
inc
(bad)
add
mov
pop
sbb
aaa
fiadd
inc
hlt
mov
or
gs
sub
sbb
ja
cwde
cli
push
sub
test
sub
jecxz
jmp
pusha
std
psubusw
push
cmp
aas
lods
es
push
arpl
fdivp
ret
and
call
in
xchg
out
dec
and
xchg
push
push
xchg
ret
cld
sbb
mov
call
lahf
pop
jle
js
and
ret
sub
push
jne
sub
jl
fcomp
pushw
adc
(bad)
aad
cmps
jg
push
jae
dec
dec
xchg
mul
pop
das
jne
call
out
pop
cmp
mov
cld
pusha
or
mov
dec
or
lods
dec
cmp
sub
das
add
sbb
out
jmp
or
je
inc
cmp
or
and
xor
jg
lock
sbb
mov
setg
xor
fiadd
ja
pop
stos
cmps
adc
xchg
call
cli
in
pusha
adc
leave
and
outs
dec
xlat
cmp
jp
loopne
std
sub
int3
pusha
or
fwait
les
jae
cmp
and
pop
sub
mov
push
jbe
sub
mov
outs
push
add
add
or
and
cmc
scas
fdivr
jo
jg
in
mov
mov
xor
push
mov
in
push
vshufpd
(bad)
jb
sub
shl
cmp
xchg
xchg
int
or
loop
push
cmps
and
jge
xor
cs
cli
and
inc
aad
adc
adc
xor
cdq
cmps
fisub
and
out
shr
aas
dec
mov
push
clc
mov
pop
mov
nop
sbb
dec
mov
pop
int3
inc
and
or
or
outs
xchg
imul
mov
(bad)
sub
aaa
jmp
mov
addr16
sbb
stos
loopne
imul
test
sbb
leave
add
sub
fisttp
(bad)
(bad)
in
into
enter
sub
lds
sar
mov
aaa
lods
xor
and
mov
and
jo
cli
test
xor
xchg
inc
imul
icebp
inc
jb
or
shl
xchg
sbb
xor
xchg
fsubr
mov
lea
out
or
lahf
push
loopne
push
aad
in
mov
mov
setp
jo
jle
outs
mov
or
(bad)
(bad)
xchg
fidiv
push
and
out
push
pop
push
inc
jae
add
out
stc
or
cmp
les
inc
enter
leave
lods
xor
add
int3
pop
es
fcmovb
popa
add
pop
or
fwait
dec
pop
add
sub
and
mov
loop
xlat
push
(bad)
mov
ds
add
xor
das
adc
hlt
cli
cmps
mov
xor
and
leave
call
rcl
jnp
xor
cs
fst
and
mov
adc
add
mov
fild
aad
cmps
mov
inc
jge
sbb
jns
cdq
jg
inc
std
ins
pop
mov
std
sahf
add
push
fidivr
pop
xor
cs
or
ins
(bad)
xor
sbb
cs
pop
movs
(bad)
ds
jmp
gs
adc
or
outs
xor
iret
shl
(bad)
sbb
xchg
(bad)
push
mov
xlat
pop
imul
ror
scas
jbe
stos
jns
inc
push
pop
cdq
adc
loopne
sbb
add
out
lock
add
sbb
add
xor
out
mov
cmps
fiadd
js
dec
cwde
packuswb
mov
jg
mov
(bad)
jne
(bad)
aaa
pop
xchg
adc
mov
into
inc
jae
cmps
inc
sbb
dec
sub
inc
ds
sub
sbb
xchg
adc
and
(bad)
les
arpl
and
in
movs
jge
seta
frstor
mov
push
lds
cmp
jg
xchg
lock
jae
popf
es
xlat
pop
dec
loope
push
iret
addr16
outs
popa
stos
mov
sar
outs
call
fwait
xor
push
adc
retf
sbb
js
dec
std
test
mov
mov
cdq
cmps
fmul
jl
mov
xor
push
clc
dec
dec
cdq
xlat
mov
jmp
scas
xchg
and
push
cld
cs
sti
mov
xlat
loopne
arpl
inc
cmp
es
dec
inc
jg
jns
fdivr
push
test
pop
fdiv
out
cmps
jle
out
je
xor
xchg
aaa
mov
mov
xchg
inc
sbb
jl
out
(bad)
repz
sar
idiv
mov
push
xor
and
cwde
sub
lods
or
pop
adc
inc
cld
mov
and
cwde
fidiv
jb
sti
stos
cli
movs
dec
icebp
push
loope
cmp
dec
jp
cmp
push
push
cwde
pushf
cmc
jp
(bad)
out
test
int3
mov
ds
fisub
jecxz
in
push
lea
jne
(bad)
stc
fcomp
dec
cdq
cmp
mov
call
sbb
retf
push
aam
frstor
data16
inc
or
lock
mov
sti
aad
add
outs
cmp
lock
out
fdivr
dec
shl
ficomp
or
jno
mov
push
outs
repz
jno
xor
lods
add
push
or
hlt
adc
push
push
sub
mov
or
inc
sub
rol
push
and
add
cdq
lods
pop
xchg
inc
sbb
mov
ret
shl
and
add
sbb
or
xor
imul
pushf
movs
cmp
imul
cli
xchg
mov
lods
out
cmc
mov
fs
mov
xchg
or
xchg
retf
xchg
(bad)
pop
push
inc
push
int
loop
sub
pop
pop
mov
bound
fwait
xchg
out
ins
pushf
mov
cmp
aaa
dec
fbstp
pop
das
push
call
and
das
retf
not
and
mov
icebp
cmp
cmp
mov
add
imul
or
xchg
ins
adc
xor
add
add
push
adc
sbb
mov
movs
push
dec
dec
xchg
les
and
loopne
ins
arpl
push
mov
cwde
add
jge
sbb
push
push
mov
loopne
fidivr
pop
mov
mov
sbb
mov
sub
xchg
popa
xor
cmp
je
push
dec
pop
pushf
lods
mov
inc
movs
jb
xor
out
mov
xor
int3
adc
jle
jmp
inc
sar
cmps
movs
fs
cmps
mov
cmp
lea
retf
in
inc
dec
jle
nop
bound
push
mov
push
sub
std
js
std
xchg
sub
ins
fsub
fisub
and
fcmove
repz
pop
pop
add
movs
imul
mov
jnp
scas
sbb
fisub
jo
jb
popa
cmp
leave
add
fld
pop
mov
mov
leave
test
xor
jb
sbb
jmp
neg
push
inc
imul
adc
icebp
inc
stos
mov
leave
push
dec
movs
nop
mov
dec
jmp
test
dec
sbb
or
inc
(bad)
enter
jnp
or
retf
xchg
int
xor
mov
xchg
pop
and
test
dec
rcr
pop
dec
adc
dec
in
adc
mov
mov
mov
popf
cli
push
fcomp
or
xor
loopne
push
mov
xor
es
or
sbb
jg
add
pop
push
sub
mov
jp
xor
fldenv
jle
mov
sub
push
sbb
jnp
dec
movs
or
test
in
fs
jne
jmp
xchg
mov
xchg
div
push
or
adc
dec
mov
pop
cmps
lock
scas
fdiv
lahf
mov
sar
mov
adc
push
lods
pop
mov
icebp
movs
mov
movs
out
es
shr
dec
loope
mov
mov
neg
into
cmps
pop
test
cmp
lahf
and
and
add
dec
retf
mov
adc
not
retf
nop
dec
shl
add
cmp
fadd
sub
mov
repnz
sub
jmp
ret
xchg
xor
cmc
jb
call
mov
or
push
mov
loop
push
adc
mov
cli
inc
cdq
fistp
pop
mov
push
(bad)
popf
jmp
ss
mov
jle
rcr
ss
clc
jns
movs
mov
stc
adc
xchg
mov
(bad)
loop
loopne
jbe
not
stos
xchg
xchg
out
dec
mov
jg
jno
lods
retf
inc
sbb
into
out
mov
xor
and
xchg
xchg
push
idiv
repz
pop
inc
(bad)
sub
mov
pop
loop
sub
push
mov
jnp
xchg
es
je
mul
cmp
pop
sub
mov
sbb
pop
fwait
(bad)
lds
and
mov
jbe
jmp
mov
mov
mov
and
xor
in
(bad)
leave
cmc
jnp
sub
dec
or
add
cmp
mov
jmp
mov
pop
test
xor
(bad)
movs
(bad)
cmps
jmp
fadd
pop
jnp
das
or
fst
xchg
xor
dec
mov
pop
movntps
retf
cld
outs
mov
fisubr
add
fsubr
mov
xchg
add
adc
in
add
inc
mov
std
stos
aaa
mov
jecxz
mov
push
xchg
jo
dec
or
in
in
xchg
cmp
cwde
mov
cmps
adc
cmp
jne
xlat
test
cmp
aaa
shr
fisttp
fwait
daa
adc
inc
mov
mov
xor
pop
inc
loopne
bound
xchg
mov
repz
or
xlat
and
add
iret
popa
adc
mov
jae
push
sbb
sar
cmp
push
lea
ret
out
cmc
mov
dec
out
sbb
lock
std
retf
inc
mov
push
dec
loopne
push
retf
retf
test
sbb
adc
push
loope
xlat
int
jno
cmps
adc
add
xor
es
jle
std
jecxz
rcl
sub
jne
sbb
data16
and
imul
xor
jp
mov
push
ins
or
dec
inc
call
test
or
sbb
adc
cmp
nop
mov
push
popa
imul
or
in
pop
stos
jge
and
cmp
add
mov
cmp
iret
das
mov
jmp
and
jo
sbb
adc
test
addr16
push
xlat
sbb
and
ficomp
lock
xchg
je
mov
pop
int3
xor
cmp
xchg
dec
add
mov
xchg
mov
push
imul
and
adc
in
mov
std
cmp
dec
or
clc
fcomp
jns
call
push
dec
nop
inc
lahf
mov
fxch
sub
xchg
icebp
paddusb
inc
pusha
popa
ret
fadd
out
adc
pop
sti
xor
sub
in
jmp
lea
fistp
cmp
pop
adc
xchg
xlat
bound
jns
mov
aaa
rcl
fistp
fisub
sbb
repnz
rcr
retf
cs
xchg
repnz
popa
cmps
lods
mov
pop
mov
retf
call
push
xchg
push
call
push
xor
inc
stos
xor
fbld
inc
jecxz
jae
dec
fdivr
jg
loopne
dec
retf
jmp
pusha
and
mov
dec
in
test
jns
and
repz
mov
mov
add
movs
sti
and
and
loope
add
jbe
mov
and
mov
push
retf
jmp
test
cmp
jnp
popf
xor
pop
movs
lock
mov
outs
rol
jle
pop
sub
jmp
sub
add
out
fst
test
pop
and
mov
xchg
idiv
fidiv
sub
push
sbb
loopne
mov
ror
cmp
sub
fld
(bad)
and
out
int3
dec
fistp
mov
sbb
(bad)
sti
adc
xchg
sbb
cmp
pushf
bswap
dec
rcr
out
and
mov
leave
xchg
ror
mov
pop
mov
jns
loop
push
jmp
mov
out
lods
adc
inc
out
or
sbb
xor
imul
ja
mov
cpuid
retf
mov
fnstsw
test
test
in
cmps
inc
aaa
(bad)
and
ret
add
lods
ins
icebp
iret
xor
jmp
xchg
pop
ins
pushf
pop
add
cmp
pop
fs
cmc
jle
and
and
popf
mov
nop
neg
mov
rcl
add
mov
ret
out
popa
push
adc
xor
xor
dec
jb
test
mov
jecxz
jl
iret
imul
in
aaa
jecxz
cli
mov
mov
or
adc
or
mov
cmc
or
cmp
cmp
xchg
add
enter
rcl
aam
add
pop
retf
adc
(bad)
inc
mov
cld
push
jno
je
fsubr
dec
jecxz
jg
xor
xchg
mov
ja
cwde
and
sbb
imul
das
push
inc
ret
cmps
std
sbb
push
push
fs
gs
dec
call
scas
(bad)
mov
mov
push
pop
je
xor
loope
jns
aad
cmps
push
aad
xchg
push
pop
sub
dec
shl
pushf
pop
mov
scas
je
xchg
add
jl
scas
jg
lahf
adc
or
sbb
inc
jmp
push
fs
jmp
jp
dec
jns
out
ja
call
cmps
pusha
mov
sub
jmp
ss
shr
ror
cwde
rol
pop
pusha
xor
sbb
(bad)
pop
add
shr
pop
xchg
div
push
and
xor
imul
jmp
mov
inc
xchg
xor
ss
inc
push
adc
loopne
push
mov
jae
out
xor
movs
xor
sub
test
cld
push
adc
and
jae
and
and
std
lahf
push
fimul
fisttp
fnsave
(bad)
call
ja
ins
or
sbb
sub
mov
sub
pop
jno
mov
inc
(bad)
(bad)
fs
sbb
pop
mov
sbb
js
jnp
scas
and
push
cmps
dec
cmps
pop
sub
loopne
lds
(bad)
shl
scas
xor
in
mov
or
in
sahf
js
ds
arpl
stc
out
cmp
repz
jge
(bad)
ror
ror
cmp
pop
(bad)
fsubr
sub
jp
xchg
add
add
mov
mov
(bad)
cmps
push
pop
inc
mov
push
repz
clc
inc
and
cs
dec
push
inc
mov
rol
inc
sub
pop
test
clc
push
adc
fdiv
loopne
jge
rcl
add
sub
es
lea
adc
add
cs
mov
stos
int
add
nop
outs
gs
stos
jne
test
add
inc
push
out
xchg
jl
jne
mov
or
jp
mov
jbe
inc
xchg
inc
inc
aad
mov
fwait
adc
test
iret
or
shl
stos
push
mov
xor
test
mov
cmp
out
ret
rol
adc
sub
or
aas
cmp
shr
mov
lds
add
mov
adc
jbe
std
adc
pop
rol
pop
adc
and
lsl
or
jno
jmp
push
test
loop
cmp
mov
pop
out
adc
fdivr
inc
sub
sbb
aaa
data16
jecxz
and
test
add
sub
and
sbb
je
(bad)
mov
push
ss
lods
push
and
add
sub
cmp
pop
mov
addr16
jmp
push
or
push
sub
fnstenv
and
neg
mov
aam
jmp
cmps
mov
loope
cmp
rcl
cwde
inc
out
pop
lods
or
pushf
pop
push
jge
mov
adc
jo
call
ret
std
mov
cmp
fst
ss
and
xchg
je
(bad)
jp
je
sbb
cdq
jno
mov
test
or
jno
sti
jge
add
pop
stos
fbstp
mov
inc
push
mov
add
mov
adc
push
xchg
in
inc
inc
pop
add
or
sbb
sbb
je
or
push
mov
push
xchg
pop
cmps
mov
or
mov
outs
fs
or
xchg
adc
mov
imul
sbb
sbb
mov
je
out
push
pop
or
dec
push
adc
mov
test
sbb
push
mov
cmps
sbb
cmp
fnstenv
add
movs
cwde
jl
dec
lock
push
pop
inc
mov
or
adc
add
fist
sbb
mov
xor
pop
sbb
ror
out
ss
loopne
inc
pusha
cmp
clc
mov
mov
inc
or
push
ds
(bad)
jge
inc
push
shr
arpl
test
push
test
mov
inc
cs
dec
mov
test
pusha
cmp
push
dec
lods
outs
dec
aad
dec
dec
adc
adc
sub
(bad)
sti
pop
mov
repnz
and
dec
push
push
test
add
adc
add
fiadd
xchg
and
jae
mov
ins
jmp
call
lahf
push
push
jp
(bad)
jle
pop
icebp
loope
xchg
jno
addr16
mov
lds
sub
mov
fst
mov
ror
dec
enter
icebp
inc
xchg
or
xor
fimul
sbb
nop
popf
out
les
xor
jge
sar
mov
hlt
jne
pop
cs
lods
(bad)
ds
in
jb
and
pop
fwait
out
pop
sbb
cmps
loopne
stos
rcr
pop
cwde
retf
or
and
add
adc
je
nop
clc
(bad)
aaa
adc
xchg
ficomp
jnp
into
sar
or
hlt
cmc
xchg
sub
lods
jp
inc
daa
in
test
fs
out
cmp
push
popa
mov
fiadd
and
call
jle
shr
and
cmp
xchg
out
pop
mov
ret
daa
stc
aad
jl
inc
or
push
pop
aad
cmp
stc
imul
test
fsubrp
dec
jg
and
int3
pop
xor
mov
jmp
jbe
add
push
out
sbb
or
popf
enter
lea
push
inc
gs
adc
setns
xchg
and
sti
adc
inc
inc
fidivr
aaa
stos
pushf
fstp
mov
cmp
in
xor
out
cmp
dec
cmp
cmp
mov
shr
inc
xchg
aaa
adc
inc
push
and
pusha
pop
rol
sahf
test
sub
sbb
mov
push
inc
cmp
enter
pop
mov
mov
std
and
mov
iret
mov
lods
retf
clc
fdiv
fsub
and
fstp
in
cli
bound
and
xchg
cld
sbb
sub
dec
scas
nop
dec
mul
pop
les
cld
pcmpgtb
aas
div
lahf
clc
xchg
test
add
lock
cmps
addr16
jp
icebp
push
ds
sbb
dec
and
dec
fnstsw
(bad)
jmp
push
jne
pop
add
mov
ror
push
inc
jmp
ret
daa
xchg
dec
ficomp
out
dec
xchg
cdq
stc
add
(bad)
test
and
pop
out
inc
mov
jg
lahf
or
jmp
or
test
inc
rcr
ja
ror
lods
loopne
mov
stos
push
cmps
jnp
std
jle
pop
fcom
imul
add
push
(bad)
gs
call
stos
mov
mov
xchg
inc
or
repnz
pusha
inc
fadd
pop
stos
pop
lahf
xchg
fwait
add
jo
std
push
leave
adc
or
test
popf
enter
xor
dec
pop
je
test
ja
sbb
jns
aaa
sub
jecxz
adc
mov
mov
cmp
out
repnz
xchg
aas
xchg
fistp
stc
sbb
in
test
jbe
imul
retf
xchg
out
mov
arpl
fnstcw
and
push
gs
cmp
fldcw
sub
sub
mov
inc
retf
mov
mov
inc
out
test
emms
push
and
fmul
push
pop
repnz
mov
mov
lods
mov
adc
data16
mov
xchg
pop
mov
dec
rcl
scas
dec
mov
jo
mov
jne
inc
dec
mov
out
and
neg
xor
(bad)
adc
push
xchg
cmp
xor
sub
jmp
and
xchg
test
mov
jb
pop
cli
ss
dec
retf
jecxz
cmp
and
mov
das
jg
hlt
adc
jg
dec
aas
retf
mov
push
addr16
pop
and
or
rcr
and
jmp
data16
and
dec
dec
jae
xor
pop
rcl
xchg
ds
daa
lock
mov
xlat
dec
and
cmp
xchg
bound
retf
lock
std
enter
js
add
adc
mov
xchg
outs
inc
out
mov
enter
movs
jnp
not
push
mov
cmps
sbb
pop
cmps
fnop
test
jae
adc
pop
fstp
cmc
xchg
sub
xchg
adc
inc
lods
inc
fist
in
and
jmp
in
stos
fs
cmp
and
ja
call
dec
fistp
or
test
jle
mov
mov
fxrstor
rcr
fs
adc
jo
cdq
dec
mul
ds
aad
pop
shr
push
mov
pop
nop
sbb
outs
ds
mov
pop
push
dec
sub
call
mov
sub
les
in
cmp
mov
ss
sub
je
push
inc
clc
and
cmps
popa
mov
stos
push
pop
mov
mov
dec
jmp
lea
(bad)
out
mov
aam
mov
mov
xchg
and
xor
aas
ret
cmps
ret
mov
fisttp
and
lock
inc
add
mov
adc
mov
adc
sahf
add
jmp
mov
dec
into
xchg
xlat
retf
inc
popf
mov
ss
pop
gs
frstpm(287
and
jge
pop
mov
lods
aam
xor
dec
mov
lahf
jmp
(bad)
mov
inc
(bad)
jbe
mov
int3
retf
sahf
xor
loope
push
rcr
lock
xchg
fwait
cmp
cmp
mov
in
push
mov
out
les
cmp
push
sub
jbe
push
cmp
call
push
xor
mov
imul
sbb
push
lds
push
je
mov
dec
mov
or
sub
and
jmp
pop
add
mov
jns
dec
pop
or
mov
mov
jno
push
fwait
ss
test
dec
loopne
scas
loop
pop
jbe
mov
aad
mov
lods
xchg
add
jne
retf
or
ins
imul
es
pop
cdq
repz
cld
loopne
loopne
sub
mov
das
xchg
lods
xor
shr
outs
jnp
fcomp
mov
cmp
mov
leave
shl
out
repz
xor
(bad)
sbb
(bad)
in
neg
mov
ret
(bad)
test
retf
pop
sbb
and
or
sbb
dec
cmp
fbld
inc
clc
cwde
pusha
loopne
gs
dec
mov
and
idiv
hlt
adc
xchg
jne
fdiv
jne
loop
push
mov
lods
mov
dec
lods
cmp
xlat
add
sti
pop
enter
pop
je
(bad)
aam
aam
cmc
mov
aas
adc
outs
and
or
mov
jge
pop
ss
or
call
cmp
test
sub
inc
or
into
or
mov
(bad)
and
push
dec
out
dec
xchg
mov
push
mov
jno
push
arpl
int3
jmp
xor
mov
xchg
sbb
push
or
scas
fsub
pop
repz
xchg
and
int
es
test
add
xlat
inc
sub
xchg
dec
retf
pop
add
mov
in
mov
js
or
mov
addr16
je
das
push
mov
push
mov
mov
pop
and
cmp
int
lds
fs
xchg
loope
mov
repnz
xchg
lahf
xor
xor
nop
mov
and
pusha
cmp
inc
jno
cmps
pop
fsubr
in
ss
pop
leave
adc
inc
stos
and
xor
scas
push
div
addr16
repnz
cs
fisttp
fwait
mov
and
sbb
lahf
mov
mov
(bad)
sub
div
sub
sbb
test
test
or
and
jmp
dec
dec
mov
mov
inc
dec
rcl
xchg
dec
xor
pop
dec
xor
push
(bad)
test
xchg
inc
lock
rcl
in
and
dec
cmp
sahf
jp
movs
add
push
nop
sahf
xchg
push
xchg
fisttp
inc
lock
les
jbe
inc
add
movs
inc
dec
mov
push
lods
sbb
aaa
stos
push
cmc
or
idiv
shr
and
and
dec
clc
xchg
push
(bad)
lock
push
daa
sbb
pusha
mov
mov
ja
daa
inc
mov
cmp
xchg
dec
mov
add
mov
adc
pusha
adc
(bad)
shl
xchg
mov
outs
sub
movs
and
inc
mov
or
push
and
lea
jns
pop
adc
lds
sub
and
xchg
scas
aas
push
ficomp
and
mov
inc
lods
sub
jl
or
mov
(bad)
(bad)
push
mov
add
pop
mov
and
mov
sti
inc
int3
adc
and
xor
mov
ja
lea
ret
push
push
stos
in
into
aaa
ins
les
jne
inc
inc
fisttp
ds
or
cmp
(bad)
sub
cli
xchg
out
sbb
ins
aaa
test
mov
fwait
mov
icebp
or
das
cmps
stos
sbb
push
repz
mov
mul
sbb
inc
call
adc
push
pop
xor
and
add
mov
mov
popa
test
inc
out
rcr
pop
xchg
lds
ss
dec
hlt
(bad)
sub
lea
mov
dec
movs
push
call
mov
sbb
sbb
leave
gs
sahf
into
cdq
mov
mov
ret
jmp
out
repz
(bad)
lea
jge
inc
retf
cmc
inc
mov
dec
inc
dec
push
and
jmp
mov
inc
std
retf
push
push
leave
fisub
popf
xor
scas
daa
shl
loop
cmps
add
nop
jmp
popf
cmp
jo
adc
inc
mov
daa
cmp
popf
xor
jo
mov
movs
xchg
call
or
fidiv
push
xor
test
sub
pop
jecxz
gs
adc
mov
pop
mov
push
aas
adc
mov
and
add
call
mov
mov
cmp
push
(bad)
clc
(bad)
fimul
call
mov
jno
push
xchg
push
loop
pop
jae
jo
cmp
loop
lahf
shl
mov
add
mov
in
ins
dec
jmp
push
addr16
call
jmp
jmp
sbb
fldcw
gs
popf
popf
mov
jae
cmp
jae
add
or
inc
sahf
mov
adc
jge
stos
sbb
jmp
jmp
adc
fiadd
or
mov
cmp
test
adc
mov
add
adc
jns
hlt
jmp
outs
inc
push
sub
jecxz
das
mov
inc
sar
sbb
test
lods
daa
and
lods
and
test
push
fnsave
into
jecxz
jbe
sar
mov
xchg
(bad)
lahf
ja
hlt
inc
out
rcr
or
out
adc
xor
add
xor
std
shr
and
xor
ret
mov
wrmsr
pop
sub
ret
and
mov
call
mul
sahf
ja
stos
mov
les
fcomi
xchg
loope
dec
jno
sbb
mov
mov
pop
out
jg
jle
cmp
scas
leave
xchg
mov
fimul
popf
jno
xor
rcr
hlt
sub
and
test
xor
xor
stos
mov
cdq
push
das
hlt
aas
es
loopne
fist
ja
push
pushf
(bad)
in
aaa
retf
fadd
movs
push
add
inc
cmp
aas
jl
pop
push
cmc
in
inc
cmps
fwait
push
cs
jp
mov
daa
inc
stc
lock
repz
into
popa
dec
mov
sub
jnp
outs
pop
or
ss
fst
mul
ins
lock
fcomp
or
jle
push
inc
data16
leave
pop
sub
jne
movs
xchg
or
xchg
cld
aad
sub
sub
push
cmps
or
cmp
mov
mov
mov
(bad)
in
lds
inc
add
add
mov
dec
cmps
push
cmp
shr
sub
repnz
fisubr
cmovle
pusha
jg
cmp
adc
imul
in
add
(bad)
ficom
jmp
add
imul
je
pop
push
in
loop
mov
icebp
clc
jno
sub
shl
jbe
inc
fsubr
jb
push
xor
mov
jbe
test
adc
push
scas
adc
fwait
lahf
and
fist
jne
aaa
mov
sbb
pop
xor
jnp
inc
sub
fiadd
cmp
sbb
fistp
xor
retf
pop
mov
aaa
lods
push
sbb
adc
push
in
cmps
push
or
inc
jle
mov
leave
jp
jmp
(bad)
jmp
mov
fwait
jae
retf
xchg
or
lods
test
popa
aaa
and
inc
fimul
sub
xor
mov
inc
push
xchg
loopne
xor
xor
pop
in
sbb
test
pop
inc
movs
rep
inc
pop
xor
(bad)
bound
ret
jno
in
out
ins
xchg
mov
lock
loop
or
mov
sbb
cmp
xchg
mov
inc
or
in
adc
dec
or
ins
and
ins
xchg
xor
repnz
rcr
inc
(bad)
mov
adc
scas
add
pop
and
mov
mov
mov
repnz
mov
popa
mov
pop
sub
je
test
ss
frstor
dec
jnp
and
icebp
xchg
stos
push
push
mov
pop
daa
cmc
sbb
mov
inc
in
mov
leave
scas
popf
push
retf
pop
scas
xor
inc
mov
sub
mov
cld
inc
mov
xchg
loope
mov
inc
xchg
adc
mov
mov
add
mov
pop
dec
jnp
pop
mov
mov
cmps
xor
and
sbb
mov
fs
inc
cdq
fstp
mov
add
data16
inc
adc
aaa
std
test
aaa
mov
call
je
scas
jp
mov
sbb
stc
cmp
(bad)
out
ds
shr
jecxz
mov
dec
inc
xor
jp
in
push
or
ins
data16
xchg
cli
into
mov
je
mov
push
gs
sub
mov
into
retf
jne
cld
xor
jl
fidivr
retf
daa
(bad)
cmp
jge
push
xchg
retf
mov
enter
ficom
dec
cmp
mov
sbb
push
stos
sub
fwait
fwait
mov
and
adc
and
mov
pushf
pop
cld
push
movs
fnstenv
lods
pop
mov
fdiv
or
jg
into
inc
cmp
loope
adc
dec
cmc
mov
call
dec
test
dec
mov
xor
(bad)
push
stos
inc
sar
sahf
inc
pop
mov
inc
pusha
xchg
neg
xor
xor
and
or
mov
loop
inc
addr16
jmp
scas
scas
addr16
sub
pop
(bad)
les
adc
or
sti
popf
xchg
mov
out
mov
pop
shl
enter
pop
inc
xlat
in
je
(bad)
rol
out
sbb
push
movs
pop
mov
mul
test
fcomp
xor
leave
adc
push
in
std
(bad)
jbe
js
out
out
leave
sub
in
frstor
inc
sti
add
(bad)
pushf
in
test
mov
add
dec
adc
sbb
push
pop
or
mov
ffreep
imul
xchg
ror
pop
xchg
(bad)
push
(bad)
or
jo
pop
mov
push
enter
pop
cmp
in
xchg
adc
aam
jg
jmp
scas
add
xor
dec
mov
fst
sbb
xor
add
sbb
scas
bswap
mov
stos
push
retf
fiadd
test
lahf
mov
sub
aad
mov
dec
inc
cwde
je
pop
add
mov
pop
js
dec
xchg
mov
ins
jmp
dec
cdq
dec
jp
inc
jg
cld
push
mov
ret
imul
dec
test
push
sub
adc
fild
popf
pop
add
stc
fimul
jae
sub
out
ins
jmp
fdivr
dec
mov
xor
js
cwde
mov
adc
lahf
fnstsw
cli
bound
and
(bad)
dec
pop
loop
mov
jae
out
lods
jecxz
mov
retf
pop
hlt
fistp
jns
sahf
ins
dec
add
cmp
nop
ja
(bad)
arpl
ret
rcr
ins
push
std
jecxz
xchg
inc
aad
jg
xchg
push
sbb
mov
xor
fnstcw
repnz
movs
stos
jbe
push
test
push
popa
dec
js
es
mov
dec
add
sar
pop
in
cld
sbb
add
les
adc
arpl
xchg
(bad)
sub
int3
push
(bad)
dec
jnp
(bad)
dec
push
mov
xchg
xor
and
(bad)
xchg
and
test
inc
add
(bad)
dec
test
sar
cmps
rol
jb
add
adc
pop
pop
aad
cdq
mov
aad
mov
add
stos
(bad)
leave
lods
arpl
cld
mov
imul
lods
ret
in
mov
and
(bad)
aaa
cld
inc
xor
(bad)
fs
fdiv
cmc
or
test
mov
jle
sub
xor
stos
sub
call
pop
sub
lea
ret
inc
scas
out
mov
push
inc
cli
scas
hlt
js
dec
rol
in
sbb
lds
je
loop
lods
sbb
push
mov
ja
(bad)
fld
retf
cmp
aaa
imul
adc
test
(bad)
in
mov
jb
pop
push
adc
xor
jg
test
inc
ficomp
std
fstp
(bad)
stos
and
and
rcr
adc
cmc
fiadd
jmp
ja
push
out
inc
cs
sub
mov
jo
in
jne
sub
dec
sbb
mov
pop
popa
push
adc
xor
bound
aam
neg
push
leave
stos
xor
and
leave
les
sahf
bound
mov
sub
(bad)
ja
mov
push
repnz
dec
mov
mov
lahf
xor
mov
mov
inc
inc
fs
fisubr
and
mov
cmp
inc
dec
cmps
pop
mov
cmp
enter
or
cmp
mov
bound
pop
shl
mov
jmp
dec
(bad)
push
daa
mov
mov
mov
and
mov
pop
push
jne
pop
push
push
outs
or
mov
xchg
repnz
xchg
sub
add
call
retf
mov
(bad)
mov
stos
sar
stc
ss
les
adc
and
aad
push
or
sahf
dec
movd
lock
loop
mov
bnd
cmp
stos
in
pop
arpl
mov
in
out
adc
xor
inc
adc
std
daa
(bad)
fcom
sti
push
retf
das
pushf
mov
pop
hlt
outs
add
sbb
cmc
lods
or
lock
(bad)
and
ins
pop
cmp
mov
fisubr
or
cmp
leave
loop
inc
fiadd
or
dec
repnz
dec
xchg
stc
enter
pop
gs
pop
push
xor
xchg
cmp
mov
mov
sub
lods
loopne
sti
xor
lea
fucomip
loopne
dec
leave
add
add
jecxz
out
outs
or
iret
popa
pushf
retf
adc
inc
fadd
push
loope
jmp
in
daa
cdq
in
dec
add
mov
cmp
sbb
pop
(bad)
and
lock
dec
ins
jbe
enter
into
push
add
push
stc
out
mov
fwait
pop
inc
add
rcl
xchg
loop
(bad)
in
or
aad
cs
daa
add
push
es
sbb
inc
repnz
adc
lahf
loop
add
je
fnsave
xor
xor
fmul
adc
cmps
cmp
iret
nop
enter
pop
pop
popa
in
pop
sub
mov
dec
jne
imul
rcr
ret
dec
lock
(bad)
ja
dec
ss
cwde
sub
pop
push
stc
xchg
lods
jecxz
hlt
out
mov
mov
mov
fwait
and
jno
jp
dec
adc
nop
imul
pop
mov
cli
push
imul
inc
mov
das
scas
aad
xchg
or
or
mov
mov
imul
stc
inc
add
pop
and
push
bound
das
mov
xchg
(bad)
dec
je
sbb
adc
popa
and
mov
fiadd
xchg
jns
add
and
outs
iret
lds
xchg
test
xchg
call
sbb
popf
adc
inc
xor
shr
push
imul
loop
mov
rcl
push
mov
mov
pop
fmul
xchg
inc
push
pop
(bad)
loopne
mov
lahf
xchg
xor
jns
mov
aaa
ins
in
cmp
dec
out
das
sub
ja
out
xchg
ins
retf
aad
bound
bound
sub
adc
pop
(bad)
xor
sub
sub
dec
lods
int
xchg
cli
inc
and
sub
(bad)
jle
mov
fcmovbe
idiv
cmp
ret
in
js
lahf
stos
sbb
cmp
or
cmp
inc
cmp
dec
cs
fld1
and
ficomp
mov
or
scas
rcl
or
movs
call
call
mov
aas
rol
ins
out
push
xchg
jne
es
shl
mov
mov
xchg
mov
pop
xchg
cmp
sti
xchg
push
xchg
outs
ret
fdiv
sub
mov
movs
imul
aam
dec
(bad)
out
mov
not
mov
xchg
pusha
fiadd
xor
clc
(bad)
in
push
sbb
adc
repnz
(bad)
or
(bad)
sahf
adc
scas
pop
aad
iret
repz
mov
jecxz
call
jmp
push
push
mov
cmp
and
xor
es
mov
inc
sub
adc
clc
mov
push
repnz
mov
pop
loop
jle
fs
adc
mov
aas
(bad)
dec
xchg
ffree
int3
sub
jge
(bad)
adc
je
mov
test
sbb
ja
cmps
(bad)
cli
mov
jmp
inc
fwait
add
fwait
cmc
or
ds
mov
mov
and
popf
std
jno
or
(bad)
rol
ss
mov
int3
and
les
popf
out
test
lods
aam
pop
inc
out
call
inc
or
push
cmp
inc
dec
icebp
jge
hlt
pop
add
lock
imul
fmul
loop
enter
mov
dec
loope
adc
in
or
sar
mov
aad
and
(bad)
imul
fild
mov
stos
data16
daa
push
hlt
iret
xchg
loop
jmp
(bad)
adc
les
popf
mov
sbb
add
add
dec
or
add
ins
and
pop
(bad)
arpl
mov
jb
dec
pop
jg
pop
(bad)
mov
cmp
jmp
mov
xor
xchg
mov
stc
scas
imul
daa
and
stos
movs
push
sub
mov
lods
xchg
sti
sbb
cdq
pop
fistp
and
cli
in
es
sub
or
or
outs
test
loopne
cli
jne
sbb
add
xor
cmp
cmp
ins
dec
outs
sub
pushf
outs
cmp
push
push
aad
sbb
add
jns
push
sar
(bad)
and
dec
nop
fs
dec
mov
hlt
xchg
movs
stos
pop
cmp
cld
push
loopne
pop
jmp
xchg
test
out
stos
fistp
leave
xchg
mov
pop
je
scas
ret
jmp
js
je
pop
pop
dec
adc
addr16
jge
xor
daa
pop
addr16
dec
mov
sar
inc
addr16
xlat
mov
push
mov
and
and
aas
pop
jnp
mov
fiadd
stos
fstp
sahf
or
mov
dec
ins
es
nop
mov
loope
pop
sub
sub
push
dec
ins
imul
cmp
in
push
push
push
jmp
loope
add
push
jmp
sub
or
mov
xchg
out
cmps
jbe
cli
in
in
adc
xor
jne
push
mov
mov
popf
inc
sub
or
pushf
cmp
es
xchg
mov
hlt
das
call
cmp
clc
mov
xor
hlt
rol
inc
sbb
cmp
xchg
leave
jne
or
xor
adc
ins
mov
pop
pop
sbb
sahf
stos
jp
dec
lds
into
rcr
add
dec
shl
sbb
movs
jbe
xchg
out
mul
fdiv
sub
popf
inc
xor
in
pop
into
call
xchg
and
int
test
fisttp
aad
adc
sahf
iret
imul
mov
mov
xor
daa
aaa
mov
mov
lods
sbb
aam
scas
pop
(bad)
cli
in
sbb
(bad)
pop
fst
imul
sub
inc
aam
pop
sbb
mov
leave
push
pop
in
(bad)
jae
into
arpl
inc
neg
or
jmp
xchg
pop
or
push
sub
cs
mov
loope
cmp
sub
xchg
aad
dec
adc
mov
jns
mov
cmp
mov
jno
imul
xchg
scas
repnz
push
mov
and
mov
dec
(bad)
mov
pop
sahf
(bad)
idiv
jl
ja
sub
shr
jmp
or
sub
xor
dec
pop
cdq
test
lahf
dec
push
int
cwde
pop
fwait
pop
not
seto
mov
push
in
in
and
pop
and
daa
fabs
push
cmp
cwde
ror
or
inc
or
add
xchg
mov
mov
dec
es
call
push
daa
ret
xlat
inc
jae
stos
cmp
(bad)
adc
rol
dec
sub
aaa
inc
xchg
inc
addr16
cmp
and
sub
(bad)
push
(bad)
(bad)
ss
xchg
out
push
jmp
adc
push
add
mov
(bad)
pop
xchg
repnz
cwde
sbb
or
jmp
in
jnp
add
lahf
loop
aad
(bad)
cdq
push
xchg
and
rcr
ret
iret
adc
test
adc
mov
mov
scas
mov
out
inc
fs
sub
mov
inc
dec
ret
icebp
xchg
inc
in
mov
jecxz
inc
xchg
inc
mov
cmp
lds
movs
push
js
add
lahf
int3
add
sahf
mov
mov
stos
xchg
jmp
jle
aas
lock
dec
xor
jg
movs
sub
inc
nop
jmp
shr
mov
movs
or
inc
jmp
jp
jl
in
fisubr
repnz
ss
push
xchg
ja
sub
or
inc
pop
and
push
xor
inc
mov
mov
jge
fwait
mov
loop
rcr
sbb
add
sti
pop
pop
push
aam
xchg
jbe
(bad)
(bad)
cdq
ret
mov
mov
(bad)
mov
neg
popa
fcom
jae
out
int
add
mov
std
rcr
adc
lahf
or
iret
add
aaa
nop
mov
(bad)
pushf
pop
sar
jl
and
es
pop
jg
push
out
(bad)
je
jge
push
sbb
jns
push
jle
in
movs
dec
mov
push
inc
jnp
test
or
retf
and
or
inc
cmc
pop
loope
imul
arpl
arpl
es
sar
ja
aas
mov
arpl
(bad)
stos
fild
dec
jp
repnz
dec
sbb
sub
or
scas
add
push
lahf
sub
(bad)
push
call
mov
xor
(bad)
xor
pop
ins
imul
push
addr16
inc
pop
push
inc
mov
sub
pop
mov
dec
and
inc
jnp
mov
das
(bad)
call
adc
fnstenv
ss
inc
int3
xor
mov
push
cdq
popf
sbb
mov
sub
add
sub
and
inc
add
jns
add
and
int3
xchg
fiadd
fst
aam
neg
retf
test
jno
shr
pop
cmps
mov
in
sbb
mov
pusha
out
xchg
dec
mov
fninit
jl
sub
dec
test
data16
rcl
test
in
pmulhuw
mov
aam
hlt
mov
jp
sub
lds
call
mov
fisubr
fadd
push
outs
in
jne
ja
imul
push
fxch
xchg
jae
pusha
ins
jno
(bad)
xchg
jnp
mov
aad
mov
(bad)
into
pop
sub
pop
imul
adc
test
mov
push
jge
or
sahf
popf
fst
inc
push
adc
lahf
xor
adc
sub
retf
pop
jb
scas
dec
cdq
mov
xchg
add
aas
mov
sar
mov
push
mov
jg
sahf
sub
jne
pushf
fdiv
repz
ins
mov
xchg
xchg
mov
rcl
mov
icebp
aad
add
loope
dec
push
loope
mov
add
in
mov
rcl
mov
push
inc
ins
fisttp
adc
sub
add
mov
or
mov
inc
jns
dec
out
mov
cmps
add
jnp
jmp
int
mov
xor
ds
jge
mov
mov
sti
pop
mov
les
fld
cmp
enter
popa
(bad)
push
cmps
cmp
inc
pop
es
les
push
sub
outs
add
mov
(bad)
fbld
add
scas
daa
out
pop
pop
(bad)
sbb
dec
sti
xchg
add
das
inc
cmps
fisttp
fidiv
and
cmp
sar
scas
dec
jecxz
fidiv
push
and
test
or
mov
or
mov
xchg
cld
add
cmp
xchg
and
fcmove
pop
add
lds
pop
es
lock
out
dec
outs
sub
test
daa
js
loopne
push
inc
out
in
or
inc
repnz
sub
jge
pushf
ja
lods
jae
inc
jp
ss
sub
or
cs
or
pop
inc
gs
daa
stos
mov
in
rcr
(bad)
retf
stc
pushf
push
mov
jns
movs
popf
and
shr
mov
or
mov
out
xor
cs
mov
test
jge
in
int3
ins
cmps
into
imul
pop
and
data16
lock
int3
dec
push
and
mov
cdq
push
adc
(bad)
fidivr
adc
out
jl
pop
pusha
icebp
std
add
jnp
push
ds
ins
(bad)
cmp
sub
ficom
mov
je
push
dec
mov
(bad)
inc
pop
add
mov
mov
jge
push
sub
popf
or
jae
push
or
les
out
dec
jle
mov
aad
cs
cmp
dec
push
scas
sbb
inc
cmovne
sub
adc
sbb
dec
pop
or
fwait
lods
push
(bad)
fdivr
mov
jne
inc
jbe
test
fs
and
inc
inc
inc
pop
sbb
pmaxub
int
xlat
arpl
test
dec
cmp
jno
scas
bound
lock
push
mov
mov
sbb
add
repnz
lds
mov
adc
pushf
xchg
xchg
sbb
icebp
push
mov
push
paddb
mov
cmp
pop
iret
mov
rcr
ins
ds
popf
int3
sbb
or
ins
add
mov
cmp
fimul
ds
ret
push
out
mov
inc
in
cmp
scas
inc
popf
hlt
mov
mov
loopne
das
gs
xor
push
(bad)
cmp
jnp
lods
jl
push
aam
adc
xchg
int
jle
mov
mov
sbb
pusha
ret
add
jmp
push
add
xor
imul
inc
dec
dec
push
scas
mov
jno
mov
dec
test
aam
shl
mov
pop
ds
or
into
scas
cmp
add
adc
gs
jno
dec
fild
ret
jbe
mov
pop
jmp
jne
and
imul
aad
loopne
jl
lods
(bad)
cdq
test
dec
pop
jno
in
mov
push
pop
(bad)
fsubp
in
mov
ja
and
ja
imul
inc
push
sub
cli
cli
pop
(bad)
jmp
push
xor
xchg
xchg
fdivr
lds
push
cld
aaa
or
mov
scas
das
aad
movs
push
mov
adc
push
mov
es
call
fidiv
xchg
sub
dec
in
test
stos
mov
add
push
stos
sbb
pop
push
jae
push
mul
inc
cmc
outs
add
cmp
pop
fs
cmp
sbb
jb
fadd
adc
stos
in
cmp
out
nop
cmp
sbb
cs
(bad)
retf
or
aaa
cmp
ror
inc
in
enter
cld
mov
xor
fcomip
cmps
arpl
fild
jmp
data16
popa
pop
stos
mov
jge
fadd
push
hlt
pop
dec
sub
shl
xchg
test
adc
xchg
call
popf
stc
cmp
inc
xchg
pop
fwait
mov
pop
add
push
in
pop
jl
nop
xchg
and
enter
mov
sbb
pop
push
out
aas
xor
outs
add
out
xchg
inc
push
inc
mov
jmp
xor
mov
and
inc
xor
push
ins
or
xor
xchg
push
mov
movs
lock
sub
adc
pop
and
mov
movs
neg
repnz
adc
cmps
push
js
fcomp
stos
inc
xchg
leave
sahf
lds
daa
adc
movs
inc
sahf
jmp
jl
add
scas
add
and
mov
inc
data16
push
stos
stos
mov
xchg
cdq
jg
cmp
leave
cli
sub
pop
jb
push
es
jg
in
das
in
dec
sbb
in
aam
sbb
rcr
cs
in
test
and
and
push
stos
into
inc
stos
ud0
mov
inc
rcr
or
pop
(bad)
das
add
xchg
popa
jo
mov
sbb
sub
imul
enter
cmps
adc
pusha
inc
aad
retf
cmps
sti
shl
push
and
jl
adc
push
loopne
xchg
xor
mov
mov
xor
xor
pop
call
dec
pop
add
arpl
fxch
jmp
mov
xchg
loopne
jmp
lahf
mov
outs
cmps
mov
sahf
adc
or
sbb
popa
push
in
or
leave
pop
xor
cmp
out
stos
xchg
cmp
and
scas
pusha
cmp
ret
mov
frstor
adc
js
sbb
sbb
cwde
dec
and
scas
bswap
mov
mov
movs
clc
mov
adc
cld
mov
push
nop
adc
mov
out
mov
outs
js
and
sbb
sub
movs
mov
test
jge
adc
in
xor
dec
xchg
adc
jle
repz
iret
rcr
mov
push
jno
lea
aad
push
mov
mov
mov
pop
ins
cli
mov
cmps
test
out
pop
aas
xchg
or
nop
mov
inc
jbe
xor
adc
(bad)
test
lods
or
inc
xlat
fcomi
dec
mov
je
hlt
add
unpcklps
cmps
jne
les
shl
pop
jns
test
ins
pop
ror
jg
mov
xor
push
dec
(bad)
retf
sbb
adc
jb
pop
clc
push
push
lods
adc
mov
jb
out
adc
sub
cmp
cmovge
hlt
xchg
pusha
ja
sar
jmp
fdivr
xor
mov
xchg
jl
ins
sti
or
cwde
push
adc
xchg
cmp
mov
scas
sub
add
loopne
cmp
add
and
mov
in
loop
sti
aas
sub
aaa
cmc
mov
repnz
mov
pop
aam
or
test
outs
push
sbb
loope
cld
ds
js
jnp
mov
addr16
or
imul
lods
js
push
clc
pop
sbb
stos
lods
mov
xchg
ficom
inc
inc
js
push
jne
outs
add
sub
out
popf
jnp
xlat
push
in
int
pusha
data16
js
cs
cmc
pop
push
pop
nop
mov
movs
pop
fild
mov
dec
inc
std
push
push
xchg
or
(bad)
lock
scas
or
jnp
mov
xchg
jnp
test
add
js
das
loope
fstp
popa
pushf
sti
push
js
icebp
cmp
push
inc
inc
cwde
mov
inc
lds
jns
mov
sub
xor
jnp
jb
inc
xor
out
mov
xlat
lea
fst
jne
xchg
mov
test
or
xchg
mov
repz
stc
mov
js
scas
pushf
adc
xor
sub
retf
adc
inc
loop
out
test
or
mov
push
ins
jg
fxam
cdq
(bad)
rcr
fadd
(bad)
lahf
dec
test
ror
mov
test
mov
sbb
pop
xor
adc
push
jb
mov
loopne
dec
out
sbb
inc
fcmovnbe
inc
std
rcr
xchg
xor
das
inc
(bad)
les
je
mov
ss
stc
sub
xchg
mov
ror
add
retf
lds
ins
mov
ins
adc
bound
ret
out
pushf
xchg
push
into
stc
push
addr16
les
hlt
mov
xchg
push
add
ror
jno
loope
mov
bound
xchg
or
jo
pop
pop
push
(bad)
test
jnp
cld
xor
sti
hlt
pop
mov
sbb
lock
push
ficom
(bad)
adc
mov
inc
push
push
(bad)
loopne
int
int3
shr
and
xor
loope
int3
enter
lods
pop
out
pop
pop
cmp
repnz
imul
test
xchg
ja
sub
xor
mov
push
add
jns
mov
adc
pop
mov
or
sbb
movs
push
add
add
and
jge
push
cs
or
jmp
les
sub
scas
daa
cmc
test
inc
pop
sbb
pop
dec
fwait
push
mov
inc
jb
dec
sahf
mov
cmps
lds
pop
push
add
cmp
cmp
push
jmp
movs
aas
bound
ret
shl
mov
jb
scas
loope
das
mov
arpl
mov
lods
xor
ins
test
gs
mov
ins
test
std
cmc
fwait
pop
mov
and
(bad)
retf
pop
xchg
cmp
pop
jl
or
and
jecxz
pusha
xor
dec
cmps
gs
adc
imul
out
pop
push
pop
inc
loop
iret
test
(bad)
cmp
retf
cwde
mov
daa
ficomp
in
mov
iret
xor
sti
mov
mov
jb
sti
xchg
or
push
rcr
ret
lahf
lock
ins
(bad)
cmps
and
cmps
rcr
dec
xchg
aaa
repz
dec
inc
inc
dec
pop
jp
or
inc
add
hlt
fs
js
nop
ror
test
mov
(bad)
ret
xchg
lods
fdivr
adc
xor
cmps
lods
test
sub
adc
pop
out
movq
xchg
shl
fsubrp
cld
retf
imul
xchg
hlt
dec
mov
lock
nop
into
jnp
cmps
add
loope
or
cmp
xchg
rcr
and
pop
(bad)
imul
pop
pop
mov
test
sbb
mov
xchg
mov
mov
loopne
adc
shl
lock
ret
and
(bad)
(bad)
ins
mul
mov
in
adc
xchg
fstp
jae
fwait
jp
cwde
cmp
xchg
jae
cmp
hlt
fidiv
pusha
xlat
ss
inc
or
add
movs
ins
leave
mov
pop
inc
adc
push
mov
and
add
or
loop
fiadd
leave
scas
(bad)
xor
mov
pop
cmps
push
cdq
add
imul
cmps
cmovle
push
dec
mov
mov
pop
pop
adc
pop
mov
mov
cmp
adc
ss
or
and
bound
in
xor
shr
(bad)
jmp
dec
jl
push
call
pop
pop
outs
int
leave
and
and
add
es
fs
or
hlt
into
loopne
ret
dec
xor
push
jp
push
dec
sar
sti
jge
pushf
jl
cdq
cmp
es
mov
and
icebp
aad
or
scas
repnz
or
dec
pop
repz
adc
add
js
ss
dec
popa
shl
xchg
push
mov
ins
cmps
aas
mov
mov
outs
popa
push
out
xchg
pop
sbb
and
xchg
sub
fdivr
mov
movs
test
popa
ds
fs
or
addr16
scas
neg
jno
push
sbb
sub
mov
shr
mov
ret
out
jmp
add
mov
push
int
push
int3
int3
mov
xchg
mov
sub
xor
dec
jne
sub
aam
mov
adc
ret
out
lock
(bad)
popa
pop
sub
sub
sub
cmp
je
aaa
add
loop
or
fwait
jge
(bad)
aad
adc
das
test
(bad)
mov
fidiv
cmp
push
dec
imul
jne
jno
out
xchg
adc
pushf
or
jmp
cmp
lods
in
bound
mov
inc
push
out
mov
jl
mov
and
mov
loopne
xchg
pop
out
mov
or
jb
cmp
adc
je
fld
push
popf
inc
cdq
dec
jl
sub
cmp
out
pop
imul
jbe
hlt
cmp
out
xchg
cmp
inc
adc
xor
or
cmps
dec
retf
int
test
xchg
dec
daa
fild
inc
dec
test
js
stc
push
push
aam
push
mov
pusha
push
ins
pop
mul
movs
ins
sub
dec
mov
jmp
in
push
es
arpl
jns
ror
jns
jb
jns
xchg
int3
add
mov
adc
outs
add
add
imul
arpl
jbe
sbb
mov
mov
out
bound
aas
sti
xor
std
sti
pop
scas
dec
or
adc
pop
jmp
mov
push
aaa
stos
call
imul
test
int3
mov
adc
push
jmp
xchg
mov
pop
fwait
jle
cmp
les
popa
iret
cmps
jg
repz
inc
inc
pop
cmp
ja
outs
adc
jo
or
not
in
inc
push
ins
jnp
test
xchg
inc
addr16
aaa
or
sub
xor
movs
aam
add
je
push
xchg
jae
cmp
daa
aaa
xchg
leave
sub
outs
fild
mov
xor
test
(bad)
adc
std
mov
and
push
push
and
ss
sub
push
rcr
imul
mov
cmp
cdq
add
out
(bad)
jnp
dec
push
pop
leave
pop
sub
xor
das
xor
cmp
sbb
mov
xor
sub
cmp
nop
mov
or
push
push
(bad)
xchg
dec
jp
push
mov
push
sahf
add
cmps
mov
fcomp
jl
sbb
push
mov
fiadd
div
xor
std
(bad)
dec
outs
std
das
xor
pop
repnz
mov
in
mov
sbb
adc
cmp
aam
adc
loope
push
push
fsubr
xor
dec
and
push
addr16
test
push
add
mov
pop
(bad)
(bad)
clc
jp
in
dec
adc
sbb
push
mov
icebp
lahf
out
dec
retf
dec
xchg
jp
mov
repz
ret
in
xchg
jb
mov
cmp
mov
imul
push
lods
rol
add
cld
or
ror
sub
in
and
add
mov
cld
(bad)
jl
mov
outs
xchg
clc
mov
arpl
add
jle
nop
call
repnz
cld
lods
lds
cmp
test
or
add
fdivr
xchg
sub
mov
and
mov
mov
jmp
stc
retf
les
stos
cwde
mov
(bad)
idiv
stos
in
or
lods
mov
lock
sub
add
jnp
cs
sub
ret
jnp
repnz
xchg
aas
push
add
mov
pop
dec
push
test
jg
sbb
mov
lock
add
and
sub
rol
ret
in
inc
and
inc
jae
mov
in
inc
xchg
fild
icebp
imul
call
mov
sub
test
pop
fistp
test
mov
push
dec
dec
jle
lds
pop
shl
inc
lods
retf
(bad)
mov
mov
xchg
and
push
ja
(bad)
mov
addr16
neg
in
arpl
loope
(bad)
and
xchg
cld
mov
adc
sub
pop
dec
sbb
fcomp
mov
aaa
stos
push
xchg
sbb
inc
lock
mov
pop
popa
lock
les
dec
mov
into
mov
sbb
mov
push
push
xchg
jae
inc
or
(bad)
aam
sbb
pushf
mov
cdq
(bad)
xor
mov
retf
sub
push
or
mov
repz
shl
bound
add
fwait
jmp
or
mov
sbb
jo
xchg
and
mov
or
aas
(bad)
imul
dec
ror
or
or
jbe
or
or
inc
and
push
sbb
dec
or
out
(bad)
cld
bound
icebp
inc
push
xor
scas
call
mov
jmp
xor
adc
fwait
leave
mov
sub
mov
dec
mov
lock
shr
cmp
mov
fcomp
ja
(bad)
mov
and
mov
cmp
and
jb
jno
das
imul
cmp
jne
ret
or
enter
sbb
and
test
sbb
jp
aad
sahf
pop
movs
inc
cld
xor
je
fcomi
jne
pop
push
fdivr
fldenv
xor
(bad)
scas
je
add
out
xchg
sbb
sti
add
jno
sar
(bad)
shr
repz
pop
sbb
mov
sub
push
jbe
xchg
dec
mov
retf
mov
nop
pusha
jo
call
pusha
or
repz
jnp
out
mov
cmp
or
or
mov
mov
les
mov
int
or
(bad)
int
dec
repz
loope
mov
test
xchg
icebp
push
dec
xor
dec
dec
xchg
lods
or
sbb
push
pop
or
jne
jmp
int
popa
and
pop
data16
ja
adc
icebp
sbb
pushf
pop
cdq
sar
sahf
fsub
sub
outs
stc
xchg
adc
adc
mov
sbb
cmp
pushf
pop
xchg
out
pop
sub
test
cmps
jp
ja
mov
into
push
mov
xor
shl
inc
mov
or
jb
inc
and
sub
lock
jge
add
add
loope
or
cdq
or
mov
mov
sbb
jmp
push
arpl
shr
std
add
imul
stc
dec
add
cdq
inc
jp
bound
mov
xor
retf
ja
and
dec
das
lock
inc
cli
adc
mov
jb
movs
out
push
cmps
inc
fsubr
lods
pop
mov
and
mov
mov
or
and
leave
fdiv
sbb
inc
add
inc
or
outs
sub
mov
jcxz
xchg
shl
dec
retf
mov
push
or
or
out
div
sbb
jmp
push
test
(bad)
out
(bad)
push
sbb
jp
gs
mov
xor
or
and
or
dec
js
aas
adc
loop
mov
pop
xchg
sbb
call
sbb
loop
imul
inc
cs
jnp
inc
mov
std
out
xchg
add
xchg
jmp
mov
in
mov
ret
int3
adc
and
(bad)
fnstcw
and
pop
call
test
and
pop
push
inc
test
pop
push
rol
or
retf
cmp
movs
ds
mov
and
xor
xor
xor
rcl
test
and
dec
fsub
pop
daa
test
dec
adc
jmp
movs
and
cmp
out
adc
xchg
addr16
icebp
fnstcw
jno
sub
pop
sbb
add
test
mov
arpl
nop
push
mov
sub
jne
mov
mov
push
aaa
mov
stc
and
movs
cmp
cmp
push
mov
addr16
cwde
pushf
cmp
movs
fadd
jmp
ffree
or
dec
mov
ror
jecxz
mov
jb
call
pushf
push
mov
mov
and
sbb
dec
sub
popf
imul
mov
stos
fs
mov
pop
imul
cld
in
loopne
and
add
popa
ja
push
inc
dec
(bad)
sbb
data16
movs
mov
xchg
jo
mov
mov
stos
xchg
and
or
or
ret
mov
pop
pop
add
push
into
jmp
and
cwde
imul
test
xchg
(bad)
cmp
sbb
push
mov
je
xchg
xchg
adc
jle
push
loop
stos
jb
js
mov
ja
es
(bad)
xchg
aas
mov
and
mov
and
or
dec
jnp
ror
mov
push
push
sar
sub
addr16
stc
jle
jg
(bad)
mov
jp
gs
push
(bad)
mov
rcr
fucomip
xchg
add
enter
xor
dec
adc
lds
popa
les
mov
ror
mov
loope
test
jbe
and
inc
xchg
retf
cmp
push
push
mov
out
pop
ds
sbb
pop
pop
div
push
mov
push
mov
rol
xor
dec
repz
jne
sbb
sahf
xor
push
(bad)
(bad)
push
cmp
sub
pop
push
inc
jns
popa
add
mov
icebp
pop
cmc
in
or
test
jecxz
and
fwait
adc
jmp
hlt
ja
mov
lock
(bad)
movs
mov
mov
hlt
xor
or
fldcw
test
mov
scas
shl
mov
add
jo
mov
lods
and
pop
and
adc
(bad)
push
push
jb
mov
das
int3
jb
push
sti
lahf
dec
add
mov
aam
fs
fadd
pop
xchg
in
mov
sub
out
mov
cmc
lahf
js
les
inc
pop
push
jmp
std
addr16
xor
mov
push
inc
xchg
test
add
mov
fistp
sub
aam
pop
xor
loope
inc
dec
mov
push
adc
pop
mov
dec
cld
outs
xor
xor
cs
ret
pop
mov
loope
hlt
dec
inc
jecxz
mov
fmul
xchg
fdiv
enter
call
adc
sub
dec
sbb
pop
adc
xchg
adc
ret
xchg
jge
xchg
mov
and
(bad)
int3
out
in
retf
pop
jg
in
ds
inc
pop
fnstsw
push
fdivr
fild
je
lea
ret
push
movs
pop
add
cmps
xor
xchg
jmp
daa
mov
pop
jbe
sbb
mov
mov
jns
mov
pop
mov
sub
xchg
add
xchg
dec
adc
cwde
dec
outs
cmp
bound
ins
ret
hlt
xchg
outs
jge
jbe
leave
sub
cmp
ret
xchg
xchg
movs
adc
stos
clc
xor
and
or
xchg
cwde
mov
out
jne
mov
imul
pop
xchg
ins
push
mov
add
and
jmp
and
sbb
outs
nop
cmp
cld
or
fcom
sub
icebp
mov
out
cmps
retf
inc
daa
in
push
push
repz
dec
dec
or
jle
bound
and
imul
out
imul
push
pop
pop
xchg
sti
lds
cmps
(bad)
fnstenv
mov
ret
push
mov
sbb
jecxz
cs
push
fcom
sti
adc
pop
je
mov
dec
ret
loope
imul
dec
add
add
or
mov
in
mov
dec
sub
int
xor
cld
push
dec
ficom
leave
mov
clc
pop
dec
int
pop
adc
jbe
jne
adc
fdecstp
mov
xchg
lods
sti
jp
or
and
or
jge
cli
movs
je
imul
pop
pusha
call
out
pop
jne
push
or
mov
pop
sbb
call
(bad)
inc
fst
cmps
dec
xchg
movs
scas
das
mov
and
xchg
jae
sub
popf
add
loopne
leave
std
push
or
test
cli
xchg
jmp
adc
dec
std
in
cs
push
mov
nop
or
cli
and
adc
mov
jmp
int3
mov
sbb
pop
push
mov
mov
cmp
imul
fs
xlat
daa
jmp
in
arpl
fxam
xchg
cmps
test
push
bound
sahf
inc
xor
(bad)
cmp
jmp
aam
js
enter
loopne
lods
int3
and
(bad)
mov
pop
movs
adc
cdq
xchg
aad
bound
pop
bound
into
daa
(bad)
jmp
mov
cwde
bound
mov
(bad)
lods
push
add
int
cdq
xor
jbe
daa
jmp
inc
inc
adc
jle
dec
leave
inc
lea
mov
push
in
xchg
adc
pop
pop
(bad)
dec
jb
xlat
loop
stos
sbb
push
adc
jg
sub
cmps
inc
push
loope
inc
repnz
mov
stos
fcom
repz
call
lds
retf
jle
push
xchg
mov
out
fcomp
mov
sub
xchg
jbe
(bad)
push
lods
mov
inc
cmp
xor
fsubrp
rol
(bad)
aad
push
fsubr
cmp
jae
mov
imul
sbb
sbb
hlt
pop
inc
mov
cwde
gs
or
rcr
cmp
add
jns
stos
shr
jbe
cmp
fisub
fcom
icebp
mov
shl
xor
in
mov
scas
jmp
iret
pop
inc
hlt
jmp
and
push
push
xchg
inc
and
cdq
dec
mov
sbb
jl
leave
not
cmp
xor
cmp
cmp
push
out
(bad)
clc
mov
mov
jle
sbb
cld
addr16
dec
rcr
aaa
scas
hlt
aam
inc
sub
xor
imul
mov
stc
jg
bound
outs
loope
cld
xchg
int3
jns
jae
scas
aas
sbb
add
sbb
div
push
cli
mov
mov
rcr
(bad)
aad
addr16
xor
movs
adc
jo
or
rcl
pop
scas
cmp
(bad)
sahf
mov
es
mov
jmp
dec
sub
jbe
mov
push
xor
fstp
or
dec
ficom
ins
mov
jns
mov
cdq
leave
out
shl
ret
cmp
sar
dec
inc
dec
sahf
ja
mov
les
push
(bad)
in
outs
mov
scas
aam
mov
jb
mov
push
cmp
sbb
sub
push
xor
neg
popf
jno
test
fs
(bad)
fs
xchg
or
shl
add
jne
jle
xor
inc
test
ret
dec
mov
clc
mov
cmps
sub
mov
inc
ds
(bad)
sar
push
(bad)
shr
fiadd
inc
stos
sbb
xor
ds
mov
push
test
mov
jae
add
mov
in
test
push
jecxz
sbb
dec
je
rcr
mov
(bad)
mov
lea
xchg
jmp
mov
mov
lock
mov
sar
sbb
test
(bad)
enter
jle
xchg
cmp
test
sbb
fstp
sbb
add
cmps
retf
mov
or
cwde
lock
ror
push
lods
inc
sub
cmp
mov
js
push
ins
add
xor
or
mov
cmp
ins
(bad)
fcom
sub
mov
stc
cmc
jp
out
sub
pop
ja
dec
add
inc
xchg
push
and
repz
test
jae
lea
push
sub
mov
mov
(bad)
ror
push
sahf
out
stc
push
aam
push
lds
jmp
mov
cmc
and
jne
ret
pop
xchg
push
cmp
frstor
pop
dec
clc
inc
or
sbb
and
mov
cs
inc
stos
(bad)
pop
shl
cmp
test
out
retf
or
jmp
pop
ds
sub
mov
push
sti
push
push
lds
cmp
lea
mov
mov
adc
out
pop
leave
jns
push
sbb
aad
mov
mov
shufps
add
adc
cmpxchg
fnstsw
and
addr16
and
adc
inc
cmp
mov
dec
sbb
mov
push
jp
cmp
mov
lods
and
cli
les
xchg
loope
xor
imul
cmp
sahf
retf
mov
out
clc
imul
pop
repz
xchg
aad
push
ss
es
sub
sbb
dec
outs
pusha
adc
or
sbb
cmp
es
cwde
mov
(bad)
in
in
jns
push
jl
cmp
loop
adc
aas
jle
cmp
inc
pop
shr
xchg
pop
jne
sub
dec
fisttp
sbb
aam
inc
pop
inc
or
mov
jne
mov
jne
push
test
jle
(bad)
cmp
cmps
icebp
sub
retf
jp
outs
out
mov
pop
cmp
jne
mov
push
stos
mov
daa
in
ja
sahf
arpl
xchg
pop
push
ret
push
mov
loop
out
xor
pop
add
ror
into
mov
adc
push
jle
mov
fcmovne
mov
cmp
inc
ins
jno
stos
dec
fidiv
xchg
xchg
cmp
ret
retf
scas
xchg
push
int
mov
sub
js
fild
in
stc
dec
stos
mov
movs
push
pusha
sub
scas
std
xchg
jl
in
test
push
xor
push
sahf
je
sti
push
jecxz
ins
(bad)
add
fist
jae
xor
in
fidivr
iret
ja
addr16
je
dec
mov
movs
jb
push
pop
mov
pop
stos
popa
add
jns
outs
sub
sub
stos
xchg
fistp
inc
mov
jecxz
pop
out
fist
pop
mov
shl
clc
arpl
adc
or
push
jp
movs
xchg
leave
mov
cmp
sub
fstp
pop
aaa
movs
(bad)
mov
fldl2e
pusha
mov
push
sub
out
push
(bad)
push
xchg
daa
adc
jmp
push
arpl
shl
(bad)
imul
sub
cmp
xor
adc
sbb
push
push
xchg
in
in
fwait
rcr
test
mov
or
nop
cld
cmp
add
and
and
push
xchg
cmc
mov
add
xor
and
(bad)
js
add
and
cmc
pop
in
add
mov
jmp
add
dec
pop
hlt
push
dec
mov
or
lock
ror
inc
adc
ins
cs
cmp
xchg
jae
dec
in
out
(bad)
iret
das
lods
(bad)
shl
jne
outs
and
not
(bad)
and
das
in
iret
cmp
les
push
fnstcw
imul
dec
jg
adc
loop
jnp
cld
and
jmp
mov
stc
add
pop
in
jmp
mov
fwait
and
sbb
xchg
xchg
cmc
sbb
xor
aad
retf
ror
inc
xchg
jae
std
(bad)
xchg
mov
out
rcl
dec
push
(bad)
loope
mov
jne
mov
mov
mov
pushf
nop
adc
jae
adc
sbb
cld
xchg
dec
xor
popa
mov
jne
pop
cmps
out
xchg
and
xchg
shl
sbb
mov
add
hlt
xor
aam
mov
sbb
in
js
jb
test
pushf
cs
mov
sub
dec
(bad)
out
or
es
jmp
lods
imul
fsubr
add
ret
mov
adc
test
jo
lock
pop
lods
or
rcl
stos
lods
fisub
jle
adc
pop
aam
ficomp
or
out
jle
jbe
dec
pushf
adc
sub
cmp
repz
xchg
sub
pop
inc
cmp
cli
shl
aaa
lea
pop
(bad)
mov
adc
jle
out
push
pop
dec
xchg
fld
adc
(bad)
scas
imul
cmp
(bad)
adc
cdq
sub
add
(bad)
push
fld
pop
pop
retf
ss
jp
cmp
jo
and
pushf
xchg
ret
cmp
iret
call
mov
lods
inc
(bad)
mov
cmps
call
xlat
xchg
add
adc
adc
shl
js
sub
dec
and
mov
(bad)
xor
leave
nop
sbb
inc
shl
xchg
lods
in
push
mov
loopne
adc
frstor
jo
add
jl
sar
xchg
out
jno
mov
pop
sti
icebp
not
ret
cwde
push
test
inc
sahf
dec
aam
push
mov
mov
stos
sahf
dec
pop
out
call
loopne
int3
and
fistp
stc
hlt
xor
lods
push
cld
sbb
mov
adc
test
mov
jb
and
pop
scas
mov
daa
jnp
call
dec
xor
outs
push
sbb
sbb
scas
sbb
lahf
or
sub
jmp
ins
mov
dec
daa
rcl
xlat
xchg
lea
mov
icebp
pop
pop
addr16
inc
fcomp
into
or
push
imul
lock
xchg
push
in
pop
pop
xchg
push
sti
sahf
pushf
jecxz
push
stos
test
mov
inc
xchg
fist
inc
adc
jb
in
outs
adc
mov
paddd
and
or
jg
shl
cwde
and
data16
les
xchg
inc
loope
dec
call
mov
jnp
mov
and
dec
xchg
cmp
(bad)
jnp
cmp
(bad)
push
imul
fmul
inc
pop
jns
test
mov
int
cs
rcr
mov
fisttp
mov
cmp
sahf
lds
ror
push
arpl
dec
mov
mov
in
mov
je
inc
or
lods
mov
loope
(bad)
mov
dec
inc
dec
ins
mov
inc
ds
mov
fisttp
(bad)
in
fistp
fstp
xchg
je
call
and
inc
mov
xlat
push
jmp
inc
dec
cmp
mov
or
test
daa
and
pop
push
stc
mov
dec
sbb
stos
ja
retf
mov
jo
mov
pop
repz
dec
lea
ins
fsubr
pop
and
retf
adc
mov
adc
jmp
dec
retf
and
popf
enter
inc
mov
(bad)
enter
(bad)
out
lds
arpl
pop
cmp
sbb
mov
inc
jnp
xchg
inc
sahf
pop
pop
xchg
push
stc
shl
push
sbb
daa
test
xor
test
cdq
inc
fwait
jge
dec
aas
aaa
cli
xor
iret
add
adc
jmp
ret
xor
push
and
add
sbb
pop
loop
dec
retf
jle
mov
out
test
push
int3
mov
inc
(bad)
leave
push
push
ficom
call
mov
inc
inc
jmp
and
fldcw
lods
cli
cs
push
push
xor
stos
shl
std
test
cs
mov
mov
mov
push
stos
cmovne
std
sub
mov
mov
sub
dec
mov
adc
and
sbb
outs
in
xchg
mov
mov
clc
push
xchg
ss
cmps
rcr
mov
in
jnp
pop
test
adc
mov
popa
je
adc
out
and
in
xchg
outs
imul
and
shl
sbb
lea
inc
mov
retf
(bad)
fimul
lea
retf
cmp
xor
mov
push
dec
ret
inc
sbb
push
mov
add
mov
pop
sbb
stos
mov
and
pop
sar
adc
sbb
test
xchg
outs
not
pushw
jo
cli
xchg
sbb
dec
call
mov
popa
test
mov
cmp
or
imul
test
add
stos
and
mov
inc
sbb
outs
xchg
adc
cwde
add
push
jne
pusha
jbe
das
arpl
cli
sub
push
inc
xor
jge
add
test
jmp
ret
shl
or
mov
mov
pop
lahf
not
cmps
repnz
add
sub
int
inc
shl
movs
pop
sub
sahf
push
das
dec
out
fldcw
or
push
into
iret
dec
cmps
int
mov
cdq
cs
ror
jnp
in
jmp
pop
xchg
and
jae
xchg
xchg
js
mov
push
jecxz
(bad)
(bad)
sub
iret
stc
ret
cmp
retf
iret
push
sbb
xchg
adc
leave
xor
mov
mov
xchg
fs
out
(bad)
mov
jbe
mov
mov
jmp
popf
pop
xchg
ret
push
into
mov
lahf
xor
outs
adc
xlat
jp
xchg
ficom
sub
loopne
lods
xor
popf
div
lods
push
adc
aam
out
mov
cmps
imul
xor
in
out
push
js
inc
adc
je
std
imul
jae
xor
shl
cwde
mov
jmp
mov
lods
addr16
dec
mov
lds
xchg
sub
ret
fucom
pusha
xor
sar
adc
xor
nop
dec
std
jmp
inc
js
icebp
mov
loope
aam
or
sbb
mov
gs
cmps
pop
or
shl
jmp
jbe
jmp
pop
dec
call
mov
push
bound
(bad)
mov
and
sbb
outs
jecxz
icebp
inc
push
hlt
retf
mov
jge
mov
daa
out
mov
and
scas
cmps
js
jmp
add
cmp
gs
fiadd
out
imul
xor
mov
mov
mov
in
inc
push
movs
and
cmp
je
mov
aas
stos
pop
mov
stc
add
jno
or
test
cmp
push
or
repnz
out
adc
and
adc
inc
jb
jecxz
loopne
inc
push
inc
push
jbe
xchg
inc
push
test
iret
and
or
ret
ja
xchg
xchg
mov
sub
out
cmc
pop
inc
add
fs
pop
xor
ins
xlat
inc
push
js
out
jp
das
lods
sub
int3
push
mov
fild
sti
shl
mov
pop
cmp
(bad)
popf
sub
dec
sub
out
sbb
or
popf
test
mov
shr
xchg
lods
push
mov
add
add
imul
lods
loopne
xor
pop
or
pusha
in
ins
jp
jne
popa
sar
adc
mov
pop
(bad)
and
data16
mov
push
movs
inc
test
rol
jecxz
loopne
mov
addr16
xchg
cli
inc
pop
xchg
jmp
jo
fwait
push
jg
jmp
mov
stos
mov
cmp
ret
mov
fwait
movs
cmp
shl
mov
pop
es
pop
popa
fnstsw
mov
jp
repz
push
cwde
sub
jge
xchg
ins
xor
sbb
fdivr
test
movs
push
jo
stos
dec
(bad)
sti
inc
stc
push
scas
and
aad
ss
xor
mov
(bad)
in
call
push
aas
mov
xchg
add
cli
ss
je
pop
imul
hlt
mov
in
aas
ins
jle
sbb
pop
in
cwde
push
ja
adc
and
ja
stc
ret
scas
adc
push
jp
fxch
inc
leave
sti
lock
retf
outs
jl
cwde
sub
xor
xchg
xchg
adc
sbb
xchg
cmp
outs
mov
(bad)
inc
rol
out
hlt
push
jmp
pop
js
icebp
mov
mov
pop
lods
int3
retf
pop
repnz
sub
and
mov
(bad)
mov
dec
lock
out
mov
clc
mov
mov
jae
and
in
and
loopne
pushf
inc
std
mov
mov
stos
clc
xchg
iret
ja
aaa
push
mov
stc
jae
loopne
fld
lock
retf
(bad)
retf
mov
std
daa
cmps
sbb
test
pop
cmc
and
push
(bad)
sub
add
pop
(bad)
adc
lock
mov
jno
pushf
xchg
scas
test
push
lea
loop
dec
inc
out
pop
mov
arpl
pop
in
popa
and
sub
or
scas
and
jo
sub
dec
addr16
inc
mov
push
adc
adc
hlt
mov
int3
dec
int3
addr16
cli
aaa
xor
add
dec
call
vpshaq
push
loop
pop
push
jne
shl
cdq
(bad)
mov
ror
outs
retf
jg
inc
sbb
mov
add
imul
gs
xlat
mov
outs
pop
lds
(bad)
dec
stos
inc
xchg
cmp
lahf
add
fdiv
xchg
imul
adc
cmc
pop
mov
test
cmps
push
jg
cmps
push
pop
pop
outs
fadd
sbb
mov
inc
(bad)
sahf
in
lea
shl
inc
inc
stos
adc
repz
mov
in
mov
push
jns
clc
or
pop
pop
shl
enter
add
loopne
cdq
scas
mov
jmp
xchg
into
loopne
xchg
add
ss
xchg
jge
stos
dec
pop
das
sbb
mov
sub
test
pop
bound
mov
inc
not
mov
in
(bad)
cs
fld
sbb
adc
sbb
shr
cld
cmp
jo
pushf
xor
jnp
mov
out
es
mov
sbb
add
int3
jno
pop
jp
cs
mov
xor
aaa
je
sub
push
imul
rol
or
fldcw
mov
inc
dec
(bad)
lock
cmp
std
pop
nop
out
inc
jae
hlt
xchg
mov
and
sbb
or
and
push
jnp
fstp
adc
mov
sbb
dec
cld
or
pop
push
lods
aas
mov
icebp
(bad)
scas
sysexit
adc
(bad)
lods
pop
jbe
mov
sbb
add
sbb
outs
push
sub
push
mov
pop
sahf
mov
retf
add
movs
dec
stos
scas
push
cmp
(bad)
xchg
data16
or
mov
data16
fcomi
test
pop
addr16
mov
cmp
push
sahf
mov
shr
out
sub
or
cmc
(bad)
jo
push
xchg
xchg
mov
test
mov
out
mov
pop
sub
or
cs
(bad)
call
sar
pop
test
sahf
cvttps2pi
rol
int
into
lods
ins
fidivr
lock
idiv
test
aad
xchg
adc
sub
mov
int3
cmps
fwait
sub
push
mov
xor
mov
retf
push
pop
add
add
or
test
pop
adc
xor
pop
int
leave
fisttp
sti
dec
out
std
sbb
ret
mov
or
popa
das
inc
outs
out
push
sbb
loop
jb
ds
ins
ss
sbb
sub
seto
fadd
add
lahf
sbb
mov
in
lods
dec
xchg
aaa
xlat
jno
call
pop
push
into
xchg
jnp
retf
addr16
cmps
lock
push
and
pop
mov
into
sub
pushf
call
or
pop
pop
sbb
jns
mov
xor
(bad)
out
fisub
inc
test
jl
mov
test
leave
lods
das
aas
pop
inc
inc
push
(bad)
movs
push
pop
xchg
adc
pop
sysret
out
mov
aad
jecxz
push
enter
loop
sti
mov
clc
mov
jmp
cmp
outs
cmp
sub
adc
jl
cmp
and
inc
pop
or
test
ds
test
ss
jle
loope
leave
loop
jno
cli
push
xor
iret
daa
xchg
sbb
in
pushf
jp
add
imul
outs
and
cmp
(bad)
sbb
adc
mov
retf
push
xor
sbb
fld
js
add
dec
sub
mov
cdq
lock
mov
adc
xchg
pusha
ror
push
les
js
inc
retf
sub
jmp
test
mov
push
dec
aaa
xchg
mov
inc
dec
loope
adc
add
shl
jecxz
jle
adc
(bad)
ds
pop
aas
retf
stc
stc
pop
enter
xchg
push
je
push
jge
clc
xchg
cwde
or
mov
or
pop
xchg
xchg
pop
(bad)
mov
sbb
mov
xchg
aaa
push
or
and
pop
sbb
cli
pop
jle
addr16
mov
iret
add
nop
adc
inc
rcl
jo
mov
pop
mov
push
aas
push
fiadd
jl
movs
out
call
mov
push
xor
sahf
add
sub
call
mov
jmp
inc
test
fwait
sar
mov
mov
push
cmp
lock
es
aam
cmp
jo
jle
test
mov
xor
add
adc
add
xor
add
jge
xor
fmul
and
push
push
adc
or
or
cwde
or
das
inc
sub
or
push
ret
stc
jns
mov
sbb
popf
inc
hlt
stos
xchg
out
in
sbb
push
adc
mov
leave
pop
inc
retf
xor
pop
sar
pop
addr16
pop
jp
xchg
(bad)
movs
or
cwde
fsub
sbb
sbb
dec
sub
xchg
push
pop
add
(bad)
sub
add
lock
mov
add
(bad)
mov
sbb
sub
inc
test
das
iret
pop
fdiv
cli
push
(bad)
pop
dec
rol
push
sub
xlat
sub
sub
in
cmc
and
retf
out
or
push
cs
sub
jle
(bad)
jmp
mov
lods
push
xor
adc
add
jne
movs
xor
ror
ds
push
nop
xchg
pop
adc
cs
push
adc
ds
sbb
sbb
mov
sar
jl
sub
xor
in
bound
dec
jb
push
int
je
adc
rcr
jbe
jle
(bad)
pushf
fistp
mov
pcmpgtw
sbb
mov
jb
mov
ds
fs
mov
repnz
adc
test
leave
ficom
addr16
push
and
add
xor
inc
cmp
fnstenv
push
fisttp
inc
jg
pop
xor
or
or
inc
mov
pop
idiv
ins
sbb
enter
ror
sahf
mov
dec
cmp
stos
loopne
sbb
xchg
or
mov
and
aaa
jecxz
jge
sahf
mov
dec
dec
mov
and
adc
das
lds
xor
cmp
cmp
outs
stc
mov
in
mul
out
retf
pop
add
psubsb
shl
mov
pop
out
cdq
repnz
cli
jnp
mov
adc
dec
fcomip
int
add
push
jle
loope
clc
adc
cmp
retf
xor
push
cld
aad
xor
add
scas
call
hlt
jbe
mov
jae
(bad)
and
jg
jbe
pushf
or
inc
ret
imul
test
sbb
sub
mov
test
sub
test
xor
mov
jle
ret
(bad)
and
daa
lock
cmps
xchg
sub
out
mov
mov
sbb
cmp
push
jmp
in
call
scas
dec
jno
lods
out
mov
(bad)
push
mov
xchg
stos
add
and
mov
mov
loop
movs
(bad)
jmp
mov
jbe
pop
out
jp
shl
repnz
into
sbb
mov
mov
sbb
mov
pushf
sub
retf
mov
inc
(bad)
scas
push
jmp
cld
out
or
mov
fldcw
pop
mov
jge
mov
sbb
jle
in
inc
mov
sar
jmp
loop
(bad)
fucomp
push
ja
dec
mov
sub
sahf
test
iret
xchg
fst
scas
mov
loope
xchg
xor
lahf
fprem1
cmp
inc
lds
sub
fnstcw
xor
xor
cwde
sbb
sahf
inc
pop
cld
pop
test
add
test
jp
mov
(bad)
push
dec
rcr
stc
mov
inc
addr16
jl
mov
iret
sbb
push
call
icebp
addr16
or
push
aaa
icebp
push
jp
cli
int
adc
out
pop
enter
push
popf
shl
mov
loopne
mov
or
movs
xchg
(bad)
mov
xchg
retf
dec
out
pop
div
or
int3
fnsave
cmp
sbb
loop
(bad)
imul
fnstsw
pusha
out
(bad)
fdivr
mov
mov
loop
and
pop
mov
mov
xor
mov
jge
outs
mov
jne
pop
daa
or
and
fmul
(bad)
mov
(bad)
mov
aaa
pop
cmp
push
cld
sbb
js
cmp
aas
js
pusha
mov
sbb
cmp
scas
cmc
jmp
pop
sub
push
mov
icebp
jmp
adc
nop
jmp
mov
inc
push
das
xchg
mov
jo
mov
add
shl
(bad)
std
clc
mov
popa
sub
bound
cwde
fwait
ret
cwde
jg
jnp
and
xlat
popa
lock
sub
xchg
call
sbb
(bad)
aas
icebp
mov
cs
lea
adc
adc
mov
adc
and
mov
inc
and
inc
inc
sbb
int3
ss
shr
imul
or
rcl
bnd
or
outs
inc
test
xchg
or
mov
and
xchg
pop
mov
clc
(bad)
loope
mov
enter
mov
mov
jbe
arpl
into
das
in
mov
test
fsub
jb
and
sub
iret
les
sbb
icebp
pop
in
xor
fnsetpm(287
push
aad
mov
in
fcom
rol
mov
and
jg
mov
xchg
jg
test
inc
es
xor
out
sbb
sahf
ret
stos
sub
xor
cmp
pop
nop
mov
cld
adc
movs
shr
outs
lahf
jg
push
popf
and
xchg
dec
loope
popf
push
jl
rol
mov
sub
data16
das
lods
ds
jb
mov
in
stos
call
push
add
dec
aam
aaa
arpl
push
pop
or
push
aas
in
jb
mov
(bad)
aaa
icebp
push
sbb
fist
jno
sti
mov
sbb
xchg
push
rcl
mov
push
jle
stos
stc
in
lahf
(bad)
pop
std
data16
mov
jo
pushf
sub
push
xor
or
data16
ficom
xor
pop
jns
ret
(bad)
ins
test
or
leave
fadd
das
lds
mov
fs
dec
repz
and
out
pop
xor
ins
(bad)
sub
popa
ds
ja
sbb
jmp
push
test
jmp
or
add
mov
mov
aaa
movs
test
jge
mov
outs
adc
ret
or
jg
shl
pop
loopne
ja
jae
fs
cmp
int3
loope
and
xchg
stos
icebp
fidiv
lods
imul
fstp
lds
mov
stos
mov
frstor
mov
xor
test
push
cwde
cmp
mov
jns
into
sahf
or
xor
adc
jg
sbb
and
jg
xchg
leave
pushf
(bad)
lods
jbe
in
pushf
fcom
cmps
setle
mov
fsubr
push
ret
dec
test
xor
loopne
pop
into
jae
push
xor
or
mov
inc
call
(bad)
fisubr
aad
rol
jne
mov
es
cmp
mov
adc
cmc
mov
jbe
jbe
push
sbb
pop
pop
dec
push
test
imul
mov
or
or
dec
xlat
and
xor
dec
aam
mov
cwde
data16
push
add
and
stos
(bad)
and
and
ins
jle
xor
movs
xchg
xlat
ret
dec
inc
add
enter
xchg
adc
ss
sbb
dec
(bad)
mov
movs
mov
mov
outs
jle
xchg
lock
push
cmp
pop
ins
mov
repz
ja
test
cwde
das
add
movs
pop
loope
or
imul
ficomp
mov
jno
mov
xor
add
in
and
mov
(bad)
and
jmp
loopne
xor
or
cdq
fs
xor
lds
add
push
stos
addr16
ins
es
push
push
pop
loopne
loopne
push
int
jge
or
sub
arpl
cmp
inc
clc
dec
xor
nop
xchg
fucomip
xlat
cmc
add
sbb
xlat
mov
aad
mov
rcr
(bad)
bound
inc
dec
dec
loope
sbb
fst
stc
rol
stc
jns
scas
mov
inc
ins
mov
loope
or
jno
mov
jmp
cmp
ss
popa
cmp
(bad)
pop
jmp
push
pop
ins
jecxz
gs
jg
std
into
sbb
sbb
mov
sti
pop
and
cs
je
mov
shl
clc
ud1
cmps
(bad)
and
mov
scas
in
mov
gs
outs
and
je
inc
xchg
mov
int
jp
movs
cdq
push
pop
in
cld
mov
sub
mov
addr16
push
clc
push
std
mov
mov
ins
xor
rcl
retf
(bad)
ficom
jnp
iret
inc
scas
or
and
push
ins
sub
inc
icebp
adc
aaa
sbb
daa
aas
mov
jmp
inc
ds
inc
scas
outs
push
aas
repnz
xlat
aaa
out
lock
jmp
retf
inc
aam
pop
mov
stos
mov
mov
mov
mov
mov
pop
and
inc
sub
push
hlt
in
repnz
movs
pop
dec
jmp
push
fbld
xchg
pop
arpl
pop
mov
push
das
sbb
cmp
popa
stos
cmc
inc
aas
clc
dec
mov
pop
dec
mov
stc
(bad)
pcmpeqb
mov
cs
ss
add
sbb
out
mov
(bad)
dec
and
jmp
test
xchg
test
out
nop
or
daa
xchg
aam
jg
jb
xchg
dec
or
cdq
stos
mov
mov
imul
xor
xor
call
cmp
es
lahf
mov
push
push
ret
mov
xor
jns
ins
or
ds
push
fst
jne
push
cmps
fwait
push
mul
jb
dec
pop
into
add
dec
mov
adc
mov
jne
fcomp
xchg
dec
pop
dec
(bad)
addr16
push
sub
fsub
push
(bad)
ja
fst
repz
call
dec
out
jg
test
pusha
call
hlt
mov
and
fst
ja
retf
cld
sbb
aam
int
push
outs
loopne
mov
cmp
repnz
lock
ror
inc
stc
xor
movs
not
mov
sub
ss
(bad)
mov
shl
xchg
sbb
gs
cwde
or
fidiv
imul
lds
lock
inc
jbe
mov
push
xchg
xor
pop
movs
push
push
sbb
bound
movs
mov
xlat
mov
test
iret
adc
enter
daa
imul
cmc
ja
(bad)
or
lea
pop
loop
icebp
mov
ins
lahf
cmp
push
test
dec
inc
inc
jns
jmp
push
call
jae
rcr
add
sahf
lds
mov
movs
stc
rcl
lock
shr
and
add
cs
mul
aad
scas
pop
cmps
(bad)
and
sub
aaa
fs
xor
stos
push
js
cmp
xchg
ss
jbe
lods
in
and
cmp
jl
xchg
cmp
ss
(bad)
addr16
mov
cmps
push
cmc
out
loopne
add
mov
in
in
stos
and
mov
in
adc
aaa
or
ror
and
ret
pop
xor
push
mov
mov
addr16
add
pusha
cmp
pop
pop
mov
inc
and
gs
into
mov
(bad)
xchg
push
push
mov
and
stos
and
mov
pop
aas
push
mov
data16
xchg
ins
loop
mov
mov
hlt
ret
movs
neg
push
imul
test
nop
ret
js
test
test
out
shr
outs
inc
cwde
shl
cmp
jns
arpl
outs
js
and
push
push
or
jl
inc
pop
pop
pop
sub
hlt
retf
into
or
dec
retf
in
loopne
mov
retf
(bad)
push
xchg
js
dec
mov
mov
out
mov
inc
or
mov
and
jno
sub
mov
mov
aam
lods
hlt
jl
aad
push
iret
nop
xor
repz
push
into
sbb
jb
loop
mul
test
or
jecxz
aam
scas
int
xchg
and
xor
aam
adc
push
in
cmc
stos
enter
test
test
pusha
pop
iret
aas
test
(bad)
jb
add
hlt
sub
or
loope
pusha
mov
pusha
push
scas
rcr
adc
adc
xchg
(bad)
mov
push
data16
aaa
xlat
jne
inc
mov
jb
push
mov
in
leave
mov
fsubr
cmp
imul
int
and
pop
sbb
push
inc
mov
mov
sub
addr16
push
inc
data16
cmp
inc
retf
mov
fadd
sub
stc
lock
xor
jle
add
xchg
lods
sub
fucomi
or
adc
mov
ins
stos
jmp
movs
fdiv
mov
sub
into
mov
lods
movs
scas
sub
lock
dec
cld
dec
add
and
sub
(bad)
xor
or
lods
int3
xchg
cmp
call
mov
es
fs
fimul
jne
push
add
xor
mov
ins
jmp
ds
and
dec
jle
ss
leave
addr16
in
xor
icebp
sbb
loopne
(bad)
rol
repnz
mov
jge
fsubr
or
dec
adc
test
imul
xor
int
mov
push
cmp
cmp
adc
sub
jg
sub
(bad)
sbb
icebp
iret
rcr
add
mov
fadd
mov
inc
pop
scas
cmp
ret
jmp
hlt
xor
sahf
fwait
push
cmp
sbb
mov
paddq
mov
int3
adc
sbb
mov
xchg
adc
into
stos
scas
jmp
cmp
mov
adc
cmps
hlt
cmc
int3
cmp
ins
movs
(bad)
pop
std
(bad)
jecxz
ret
scas
dec
xor
vmread
add
cld
xchg
jp
in
(bad)
loop
hlt
movs
addr16
jne
dec
sub
sub
cdq
mov
ficomp
addr16
cmps
hlt
add
lock
cmc
shl
xor
aas
mov
(bad)
cmp
sub
popf
mov
or
mov
inc
xchg
mov
cld
out
iret
pop
movs
popa
cli
ror
mov
adc
mov
fidivr
loopne
mov
nop
test
mov
sub
sub
dec
sub
mov
ret
sti
bound
push
or
add
lock
shl
test
pop
adc
xchg
push
(bad)
lahf
call
mov
cmc
xor
retf
mov
adc
adc
adc
pop
in
fcomp
dec
rcr
fcomp
mov
and
fs
and
pusha
adc
jg
xchg
and
jne
ja
xor
dec
push
jne
push
sub
xchg
(bad)
sub
push
iret
aam
test
mov
push
mov
stos
mov
jmp
cmps
setbe
xchg
and
push
mov
adc
leave
ins
mov
jge
mov
pop
fs
push
mov
xor
sti
cmp
jecxz
retf
sti
aam
jecxz
adc
js
aad
test
jl
cmp
leave
cmp
in
arpl
(bad)
out
out
in
dec
scas
cli
adc
push
inc
xchg
xchg
inc
push
imul
xor
xchg
call
dec
jmp
test
xchg
sbb
push
sub
jecxz
adc
int3
arpl
inc
sahf
adc
mov
and
push
ficom
fisubr
xchg
lods
sbb
fs
mov
arpl
fcomp
add
dec
popa
xchg
loope
inc
repnz
aam
jno
jns
pop
cli
jl
test
dec
retf
inc
mov
jnp
sti
fwait
ja
out
mov
cdq
pop
xchg
int
bound
neg
dec
mov
jno
bound
js
push
les
push
xchg
mov
sub
loop
stos
lods
icebp
xor
out
jae
ffree
daa
fld
retf
sub
das
icebp
jo
dec
ret
rcl
adc
sbb
fcom
fs
add
add
dec
imul
pop
jns
and
pushf
div
mov
jp
dec
fs
fldenv
pop
xchg
pop
mov
out
ds
ror
stc
shl
push
shl
and
lahf
sbb
mov
mov
in
movs
repz
jne
or
add
aad
or
inc
loop
fsubrp
outs
inc
stc
pusha
ror
daa
sub
mov
cmps
les
push
inc
in
in
or
cmp
xchg
lods
mov
mov
data16
sub
and
mov
js
xchg
sbb
fistp
mov
cmps
inc
pop
dec
sahf
dec
xchg
mov
add
fcmovne
(bad)
outs
into
out
outs
add
aas
cld
push
add
pop
pop
pop
pop
xchg
out
aaa
or
(bad)
pop
cmp
jbe
xor
dec
dec
data16
test
dec
fsub
cmp
adc
icebp
(bad)
jns
test
scas
or
jnp
inc
and
loop
sub
sub
fistp
xor
movs
push
ja
ret
fwait
adc
int
inc
xor
sbb
frstor
xor
push
call
mov
dec
or
test
xor
sbb
adc
out
pop
pop
and
pushf
dec
dec
cmp
add
dec
rcr
sub
dec
dec
jle
cmc
call
cmc
fs
aad
xor
cmc
jge
or
test
and
fs
fstp
sbb
retf
pushw
mov
ss
(bad)
popf
pop
ficom
out
retf
repz
cld
lea
push
rcl
xchg
xor
jmp
xchg
jge
sbb
test
xchg
mov
add
pop
ror
cmp
(bad)
jp
scas
sub
nop
fidivr
mov
das
(bad)
lods
pushf
pop
add
cli
enter
push
dec
std
mov
loopne
inc
push
push
xlat
in
jmp
pop
push
mov
pop
cmp
inc
fimul
mov
mov
xchg
xor
push
push
add
pop
clc
das
sub
jns
sti
sbb
sub
aaa
cmp
arpl
push
mov
pop
ins
lods
mov
xchg
leave
xor
mov
hlt
sub
stos
pop
xchg
test
cmp
jmp
jl
mov
jmp
imul
cli
xor
adc
movs
inc
(bad)
movs
icebp
dec
jae
push
int3
gs
inc
sub
dec
add
push
pop
stc
inc
test
out
into
dec
movs
push
adc
jo
call
lea
scas
mov
push
xchg
jg
pop
repz
mov
or
dec
mov
xchg
sub
in
or
xchg
mov
fdivr
jge
je
cmp
lods
fisttp
sbb
cmp
lods
jl
mov
or
(bad)
movs
in
das
xor
and
cmp
xchg
mov
cmp
mov
fwait
shl
pop
fimul
mov
cmp
cmps
retf
fimul
push
outs
push
test
fadd
adc
iret
dec
cld
sbb
jle
sbb
(bad)
test
jmp
fwait
sub
push
out
mov
stc
pusha
xchg
and
enter
pop
mov
cmp
jmp
(bad)
push
pop
cmp
sub
adc
sub
mov
mov
loope
retf
mov
sbb
std
adc
outs
cmp
xor
out
inc
cld
mov
out
push
into
and
jge
lods
ja
out
mov
jo
leave
movs
into
or
inc
imul
xchg
dec
js
mov
mov
inc
retf
gs
(bad)
hlt
cmp
aas
sbb
push
sub
mov
jge
and
ret
cmps
jno
push
outs
loope
stos
into
(bad)
idiv
rcr
mov
dec
or
and
lods
clc
cmps
jne
test
pop
pop
push
dec
lods
sbb
mov
dec
stos
adc
or
cmps
mov
mov
jae
cmp
and
push
stos
xchg
cli
gs
add
jl
test
repnz
stos
nop
inc
pusha
mov
push
and
adc
js
lahf
sub
ds
xlat
bound
mov
ins
std
cwde
in
mov
pop
lods
add
int
xor
imul
cmp
in
iret
(bad)
mov
mov
add
xchg
shr
out
push
scas
sub
push
mov
mov
xchg
inc
into
daa
je
imul
mov
pop
inc
aam
inc
div
pop
std
add
pop
dec
cmp
and
rcl
mov
add
dec
pushf
push
jp
scas
or
push
cmc
test
jae
adc
jp
inc
dec
mov
ror
bsf
(bad)
jbe
ins
ret
daa
fld
xchg
mov
sbb
retf
outs
xchg
mov
imul
sbb
int
xchg
loopne
sbb
cmp
mov
push
add
clc
or
xchg
cmp
add
mov
mov
loop
gs
adc
or
fmul
push
dec
add
and
xchg
cmps
ror
push
stos
xor
xchg
lock
push
add
mov
jl
popf
push
dec
adc
xchg
js
fs
pop
or
pop
xchg
popa
mov
fmul
adc
sub
jns
xor
test
xchg
dec
fwait
jnp
rol
pop
nop
pop
jns
icebp
icebp
rcr
mov
xchg
pusha
out
scas
lea
test
pop
cmp
loope
test
movs
cli
aad
test
cld
mov
ficom
dec
add
add
cmp
mov
sbb
gs
cwde
jns
pushf
and
aas
addr16
bound
xchg
mov
pop
dec
mov
out
jg
sbb
fst
mov
arpl
lds
pop
es
icebp
or
dec
mov
or
adc
into
js
int3
xchg
mov
pop
sbb
jg
test
mov
inc
dec
pop
push
sbb
je
stc
dec
pop
and
bnd
repz
mov
pop
in
jnp
add
push
add
popa
aaa
xor
mov
test
fs
add
xor
ins
repz
aas
jbe
mov
xchg
mov
push
ja
cdq
push
mov
fadd
(bad)
xchg
jnp
pop
and
nop
fistp
cmp
frstor
ss
(bad)
lock
fsubr
(bad)
pop
loopne
lods
add
fwait
stos
xchg
daa
lock
adc
and
pop
pop
cmp
cmp
test
cwde
lods
(bad)
cli
jle
leave
aas
or
mov
mov
lahf
cmp
sbb
imul
cwde
cmp
push
mov
test
cmpxchg
push
outs
pop
add
and
inc
iret
xor
daa
(bad)
pop
or
ret
xor
js
ins
mov
and
push
out
inc
xchg
mov
cdq
sub
inc
bound
lea
add
ins
icebp
outs
jle
mov
mov
adc
arpl
shl
jnp
pop
scas
adc
cmp
push
ds
sub
jae
std
push
push
ds
out
cli
and
aad
xlat
jle
mov
stc
cmc
adc
cmps
sbb
ins
cmp
stc
push
stc
in
das
into
or
push
shl
sub
mov
push
scas
and
jge
dec
imul
pop
arpl
retf
sub
and
sub
mov
mov
outs
enter
add
pop
jl
pusha
loopne
pop
dec
jo
sub
pushf
fstp
js
mov
push
sub
mov
in
(bad)
data16
imul
les
xchg
iret
data16
add
mov
jecxz
sbb
aam
adc
mov
xor
mov
add
imul
bound
adc
xchg
stos
push
inc
sub
pushf
fwait
call
mov
sbb
and
imul
sbb
or
dec
or
call
pop
dec
cmp
fdiv
adc
fldenv
fcomi
pop
mov
std
fnstcw
push
push
add
push
icebp
mov
cld
shl
popa
add
test
add
cmp
loope
push
repz
(bad)
push
pop
pop
gs
retf
ds
ins
ja
lods
or
cmps
lea
clc
shr
loopne
hlt
outs
scas
inc
xlat
mov
mov
and
popf
pusha
pop
sbb
ret
rcr
sti
push
pop
cmp
popa
sti
(bad)
adc
movs
pop
scas
dec
stos
xor
cmp
inc
icebp
sbb
xor
or
aaa
test
mov
enter
inc
or
push
fiadd
mov
push
mov
adc
mov
jns
mov
fisttp
pop
in
hlt
jmp
pop
mul
fnstenv
outs
or
add
cld
out
jecxz
stos
cmps
test
fsubr
arpl
xchg
retf
or
and
call
or
inc
lock
mov
aaa
(bad)
cmp
jle
push
jnp
ins
pushf
call
inc
and
xor
ins
cld
fld
jmp
imul
mov
sbb
push
xor
loopne
sub
or
dec
lds
push
or
jp
or
cld
sub
sub
call
(bad)
pusha
fwait
xchg
dec
fcom
arpl
test
xchg
jg
sbb
out
dec
sub
mov
adc
mov
fisttp
bound
jbe
pop
dec
mov
outs
loope
cmp
loopne
cli
xchg
lahf
mov
xlat
pop
mov
inc
fadd
dec
inc
sub
shl
fucompp
sub
(bad)
jmp
ss
stos
cmp
push
fstp
adc
jmp
xor
rol
sub
xor
adc
stc
js
or
iret
mov
fst
jno
mov
dec
mov
push
mov
lds
mov
adc
jbe
xchg
rcr
sbb
jb
inc
jne
popf
mov
mov
jle
loopne
mov
adc
push
push
push
out
cmp
push
mov
mov
into
xchg
push
dec
jecxz
jo
out
aam
jbe
hlt
movs
and
add
jmp
bound
inc
sub
inc
data16
fidiv
shl
call
and
lods
(bad)
pop
and
movs
fimul
adc
iret
inc
outs
out
jecxz
mov
retf
test
push
cdq
and
in
ret
push
mov
leave
sub
test
mov
mov
popa
adc
sub
ss
or
inc
(bad)
mov
cmp
add
xor
or
mov
or
jmp
(bad)
sub
mov
sub
jge
inc
cs
mov
int3
push
pop
js
(bad)
outs
loopne
mov
mov
pusha
imul
xchg
mov
inc
jecxz
xor
jmp
sbb
gs
mov
mov
xor
sub
in
jmp
pushf
jo
loope
popa
push
mov
pop
cmp
and
xor
lds
out
call
in
or
ror
jge
movs
es
mov
dec
push
clc
jmp
imul
add
mov
mov
and
les
dec
into
outs
repz
pop
call
pop
jns
nop
adc
(bad)
pop
dec
pop
mov
fwait
inc
push
add
jmp
(bad)
cmp
shr
pop
push
jae
outs
popf
sub
pop
adc
push
ss
xor
hlt
push
cmps
ret
(bad)
push
ret
mov
sbb
or
hlt
mov
fwait
aas
ins
push
int3
popa
lock
push
jecxz
sub
cmc
outs
jl
aad
ficom
data16
fdivr
adc
pop
sahf
lods
clc
pop
sbb
jns
add
or
and
fs
and
jnp
jmp
sub
lock
ffreep
test
ret
dec
xchg
xchg
pop
and
sbb
test
mov
cmp
xchg
pop
inc
add
aam
adc
and
gs
std
push
pop
and
jo
xor
push
pushf
mov
dec
out
xor
add
ret
xchg
mov
add
movs
(bad)
jnp
sub
mov
fstp
ss
in
scas
xor
pop
lea
daa
jne
cmp
rcr
xlat
or
sbb
pop
xchg
and
push
shl
push
jns
adc
sub
jnp
pop
and
xlat
imul
xchg
sub
pop
enter
pcmpgtb
pop
push
add
lods
mov
ds
mov
fiadd
jecxz
and
adc
mov
xor
sbb
rcl
jl
call
loop
or
mov
add
out
lahf
sub
push
hlt
out
add
push
das
mov
or
push
(bad)
sbb
pop
add
and
pop
lock
sbb
cmp
sti
xchg
shl
push
mov
cdq
sub
stos
fidivr
xchg
inc
(bad)
xchg
aas
cmc
mov
xchg
xor
jmp
int
dec
(bad)
sahf
ret
xor
addr16
add
nop
add
mov
imul
fisubr
and
mov
popa
daa
sub
or
xor
dec
movs
loopne
jbe
jae
mov
pop
add
sbb
jmp
xchg
push
je
fistp
push
mov
stc
fwait
and
push
or
push
jl
mov
pop
dec
xor
inc
call
xor
leave
pop
add
push
inc
in
or
push
xor
out
stos
mov
movs
sbb
ss
clc
add
aas
jmp
cwde
xor
ins
nop
shl
mov
xor
out
js
outs
gs
pop
cmp
daa
mov
ret
bound
scas
aaa
in
sbb
js
ficom
add
and
in
mov
cmps
mov
cli
das
add
lods
dec
sub
jmp
fldenv
cdq
or
adc
inc
repz
lds
jg
cmp
or
xor
push
sar
fidiv
loope
push
leave
add
in
fcomp
pop
add
adc
xchg
mov
sub
mov
ins
sbb
push
cmp
xor
and
xor
cmc
push
test
mov
adc
fbstp
jmp
in
sbb
icebp
fsubr
adc
xor
retf
ffree
data16
sbb
ins
sahf
pop
mov
push
xchg
xchg
push
mov
(bad)
stc
pop
stc
in
imul
sub
out
mov
add
adc
into
sub
add
cli
je
jmp
idiv
lock
mov
stc
lahf
cmp
out
mov
clc
cmc
xchg
popa
jl
les
(bad)
sbb
iret
xchg
das
clc
out
mov
popf
inc
(bad)
sbb
inc
cli
mov
inc
sbb
sub
pop
(bad)
and
inc
out
pop
outs
inc
jle
test
mov
hlt
inc
dec
inc
or
pop
retf
adc
xchg
cli
cmp
dec
mov
fsub
sahf
mov
shl
stos
enter
sbb
jle
xchg
clc
fs
not
mov
inc
xor
xchg
dec
loop
cdq
cmps
lock
pop
dec
or
rcl
adc
out
sbb
cmovo
retf
xor
mov
xor
lea
arpl
or
retf
inc
jnp
popa
mov
sti
sub
cli
lods
in
adc
(bad)
out
rdpmc
fisubr
cwde
cmp
(bad)
and
daa
add
je
imul
inc
call
loop
xor
pop
adc
push
in
hlt
sahf
add
mov
dec
push
fistp
in
icebp
push
dec
inc
dec
mov
pop
ins
(bad)
scas
call
adc
repz
mov
test
jae
jb
push
pushf
inc
es
(bad)
jae
std
sub
pusha
and
mov
xor
loop
jmp
and
out
xchg
imul
fsubr
cmps
xor
clc
adc
jle
mov
lahf
or
retf
mov
jge
ja
mov
cmp
cmp
movs
imul
mov
sub
jecxz
test
js
mov
jp
ja
xor
cs
ret
add
sti
mov
data16
loopne
cmp
mov
mov
xor
aas
pop
mov
xor
mov
clc
or
jb
jmp
mov
sbb
cwde
out
ins
xchg
add
call
mov
push
sbb
stos
out
sub
stc
popa
adc
(bad)
sbb
inc
fucomip
sub
outs
cmp
stc
push
xlat
cmps
mov
xor
mov
cdq
sbb
fdivr
dec
and
data16
dec
(bad)
cmp
xor
scas
outs
popa
or
sbb
add
cwde
inc
dec
mul
jo
aas
mov
pop
repz
dec
(bad)
cmp
arpl
imul
push
stc
sbb
pop
adc
mov
or
das
fstp
mov
rcl
fistp
retf
mov
mov
out
mov
inc
dec
cmps
cli
aaa
mov
cwde
(bad)
movs
mov
shr
ja
mov
hlt
sbb
jmp
push
in
add
ret
xchg
cli
add
xchg
popa
sub
sub
add
pushfw
inc
mov
and
adc
pop
(bad)
fwait
jae
bound
daa
cmp
cmps
dec
push
mov
stc
jmp
jo
add
stc
ror
mov
loopne
pop
ret
icebp
sbb
je
aad
data16
jae
call
es
fimul
ja
pop
pop
ins
sub
jb
mov
rcr
cld
frstor
pop
and
mov
push
icebp
mov
sub
xor
pop
imul
fistp
mov
xchg
mov
repnz
sub
fld
(bad)
out
and
dec
loopne
xchg
add
pushf
jae
stc
mov
jmp
add
outs
push
arpl
lock
stos
push
adc
fld
cmp
sbb
scas
loop
int3
arpl
test
adc
loopne
sub
pop
inc
xchg
cs
scas
adc
adc
mov
out
and
or
mov
es
dec
mov
xor
into
test
call
loop
dec
scas
jns
adc
cli
mov
mov
sub
push
cmp
mov
stos
dec
cmp
(bad)
xchg
push
lods
lock
call
in
je
into
xchg
aam
jecxz
pop
hlt
cmp
in
in
(bad)
xor
call
scas
fwait
and
popa
xor
push
cwde
enter
push
mov
inc
bound
dec
push
das
jno
jle
or
shr
sbb
jmp
mov
jge
add
sbb
or
loope
xlat
mov
ret
pop
dec
or
jmp
and
pop
inc
sbb
push
leave
dec
pushf
xor
jnp
mov
push
adc
sub
xchg
add
mov
xor
stos
pop
xchg
out
or
mov
and
xor
outs
dec
stos
and
cmps
sub
mov
pop
pop
es
sbb
cmp
sbb
mov
ficom
push
jge
adc
mov
mov
ret
stos
bound
jl
mov
adc
push
push
cs
arpl
mov
push
imul
mov
cld
adc
loop
adc
sub
movs
clc
popa
mov
mov
mov
cmp
int
ror
int
cmps
shl
in
push
outs
icebp
xor
adc
daa
test
dec
fisttp
dec
pop
lea
jne
cmp
pusha
cmp
pop
fsub
mov
push
(bad)
sbb
imul
inc
xor
fwait
je
jle
mov
add
sahf
sbb
mov
adc
mov
sub
sbb
scas
stos
hlt
mov
aam
dec
in
popf
sub
or
sub
enter
(bad)
adc
outs
jmp
ja
push
sbb
jmp
js
int3
mov
inc
lock
xchg
jmp
dec
aas
data16
int3
out
ret
mov
mov
lods
jbe
xor
ja
scas
icebp
outs
cmp
mul
mov
pusha
call
or
cmps
sbb
jno
pushf
jmp
pop
mov
mov
aaa
scas
adc
jmp
ja
inc
dec
jmp
sahf
dec
fs
loope
pop
add
popf
cmp
or
dec
into
jae
mov
loop
cdq
test
sub
stc
fxch
mov
xor
sbb
out
cld
stos
pushf
mov
push
aaa
shl
and
mov
cmp
fbstp
int
loop
aam
fild
or
rcl
dec
lahf
push
jle
pop
cmp
cmp
stos
retf
and
jno
test
stos
repnz
fist
shr
push
lods
push
cmc
add
jae
jno
test
ror
mov
cmp
inc
(bad)
sbb
push
adc
retf
mov
popa
mov
adc
(bad)
jbe
aam
in
and
jl
iret
fst
loope
stos
cmp
(bad)
mov
pop
cmps
cmp
jo
inc
lahf
xor
lock
(bad)
popf
xor
push
xor
jns
inc
xor
fidivr
iret
inc
add
test
test
(bad)
cld
mov
div
iret
mov
test
jp
mov
or
jb
cmp
mov
sbb
pop
push
dec
loopne
leave
sbb
(bad)
addr16
or
(bad)
(bad)
push
lahf
or
arpl
clc
loop
push
dec
mov
pop
xor
scas
adc
into
daa
scas
test
dec
leave
xchg
rcl
add
lock
test
ja
idiv
adc
jae
push
adc
iret
loope
scas
push
dec
xor
call
cmps
push
add
shr
jecxz
push
ret
lds
call
clc
leave
sub
js
popf
pop
scas
aam
leave
jbe
mov
pusha
in
in
lock
outs
ins
movs
adc
daa
sbb
pop
and
imul
aad
jg
sbb
jl
pop
push
int
stc
call
add
fsub
jle
cs
mov
popa
push
push
retf
ror
cmp
push
jecxz
int
push
jle
into
fisttp
dec
lds
sub
call
adc
call
sbb
xor
adc
or
inc
lds
push
and
cmp
mov
mov
fdiv
lock
leave
lock
mov
jb
sbb
push
cmp
pop
push
ins
call
xchg
ss
jp
sub
sar
or
imul
mov
xor
(bad)
cmc
inc
add
pusha
ret
xor
aam
adc
test
clc
aas
sbb
shl
mov
xor
lea
nop
push
not
dec
psubq
fs
call
inc
out
cdq
mov
fwait
xor
mov
mov
mov
arpl
aad
mov
cmp
lea
std
sub
aas
movs
dec
sub
call
cmp
sbb
sub
in
ficomp
call
mov
adc
movs
in
fsubr
mov
jl
push
inc
add
pop
ftst
ins
sub
dec
mov
dec
dec
push
in
mov
mov
fwait
xchg
xor
in
lahf
fidiv
nop
xlat
xor
fisubr
fdivr
jnp
int
mov
arpl
mov
cld
inc
(bad)
aaa
mov
ins
cmp
loope
dec
jg
pushf
add
mov
mov
push
call
dec
(bad)
jmp
jp
and
add
mov
popf
cmp
scas
jl
inc
dec
adc
mov
stc
add
pop
mov
sub
fst
adc
push
retf
fmul
mov
repnz
sub
shl
test
push
pop
adc
mov
adc
js
iret
sti
ins
jmp
dec
pop
and
dec
jno
cmc
js
inc
mov
test
pop
sub
shr
push
xchg
push
fsub
and
fs
fmul
lods
mov
dec
scas
ret
in
sub
lea
mov
stos
je
cs
lock
and
jnp
push
pop
into
sbb
(bad)
mov
pop
inc
div
push
iret
dec
inc
dec
and
dec
mov
dec
add
je
je
mov
push
and
mov
adc
loope
mov
popf
nop
repnz
int
push
lss
dec
imul
sbb
sbb
cmc
fs
push
cdq
and
mov
rcl
and
scas
ds
pusha
inc
aas
out
out
scas
rcr
iret
adc
cwde
leave
shl
addr16
sub
sub
mov
cli
mov
xchg
icebp
add
pop
(bad)
std
sub
jge
sbb
data16
fcom
push
add
lock
clc
jmp
xor
shl
cwde
cmps
jecxz
add
out
add
fsub
dec
aas
xor
das
mov
je
sub
jecxz
mov
xchg
call
xchg
les
mov
pop
add
and
in
shr
jl
pop
mov
or
rcl
inc
cmp
xor
xchg
fdiv
sbb
mov
adc
out
sbb
out
pop
xor
mov
dec
in
mov
inc
in
sub
mov
retf
aam
out
fmul
add
mov
aam
cmc
int
jmp
cmps
test
cdq
xchg
push
es
jmp
sar
imul
xor
test
sahf
push
or
push
jae
lock
xor
xor
add
test
ficomp
add
lods
rcl
bound
pop
or
xchg
jb
cld
je
or
sub
aaa
test
xchg
dec
dec
dec
adc
movs
mov
add
mov
and
sbb
cmp
int3
sub
mov
xor
cli
aad
daa
pushf
sbb
and
and
xchg
fstp
test
and
mov
repnz
icebp
inc
lds
push
movs
or
ins
jbe
dec
sub
cmp
mov
in
std
cmp
call
mov
adc
adc
pop
sbb
addr16
fimul
jmp
(bad)
sub
popf
push
ret
fwait
and
mov
nop
ror
int3
rcr
jns
mov
arpl
adc
enter
cdq
xor
fisub
ret
shl
loope
adc
cli
mov
les
pop
int3
sti
push
stc
sub
arpl
jno
jp
out
int3
xor
rol
loopne
and
mov
pop
or
push
sub
or
dec
ins
movs
mov
sbb
loopne
aaa
pop
ret
out
mov
idiv
out
xchg
dec
outs
sbb
addr16
rcl
ins
mov
fdivr
retf
ss
inc
mov
lods
sbb
aad
fwait
shl
push
mov
pop
sub
stos
mov
push
pop
jns
(bad)
shl
in
push
dec
lds
ret
pop
add
or
std
inc
int3
push
ins
call
fst
xchg
xchg
imul
das
int
rcl
sbb
sbb
movs
xchg
pop
xchg
push
or
ret
mov
adc
or
(bad)
sub
adc
not
inc
out
jno
adc
xchg
add
mov
sbb
cmps
dec
gs
in
push
sub
xor
shl
and
mov
aam
retf
scas
cwde
or
xor
fistp
mov
cmp
sbb
sub
add
xor
mov
jbe
push
lods
mov
jns
mul
mov
cs
add
mov
jb
dec
adc
jecxz
inc
arpl
test
and
leave
sub
mov
call
pop
xor
cdq
pop
xchg
add
pop
adc
shr
sbb
push
mov
sub
mov
xchg
jg
mov
push
std
and
add
dec
fld
mov
fs
xchg
fneni(8087
test
into
mov
mov
mov
fdiv
jg
mov
bound
retf
(bad)
cmp
mov
xchg
or
push
or
into
jmp
mov
or
outs
(bad)
data16
push
mov
(bad)
sub
into
pushf
add
jns
repz
xor
or
in
fwait
cmp
jae
cli
call
std
mov
push
repz
mov
dec
and
push
aas
or
data16
rcl
(bad)
mov
fs
ss
test
nop
cmp
jno
sbb
push
test
in
aam
dec
cmp
mov
jno
jae
movntq
pusha
pushf
lea
(bad)
dec
push
movs
pop
inc
mov
daa
pop
cdq
xchg
or
dec
cmp
push
in
jg
(bad)
push
sub
cld
jmp
(bad)
retf
(bad)
aad
jge
dec
cmp
pop
loopne
outs
ins
iret
xor
push
pop
mov
gs
std
movs
sub
clc
scas
cs
out
movs
cmps
aam
popa
lods
push
dec
aas
sub
hlt
lods
dec
pop
les
adc
fnstcw
stc
loop
push
sub
sti
jp
jb
and
loop
leave
pop
test
inc
or
and
out
mov
loopne
imul
push
and
movs
enter
mov
push
cmp
ret
dec
cmp
ja
xlat
je
add
test
mov
ds
push
or
adc
sbb
daa
jnp
ss
push
push
push
mov
adc
(bad)
jno
gs
push
jae
ins
int
fs
dec
xchg
loopne
jns
dec
adc
xchg
adc
test
pextrw
dec
push
imul
inc
cmp
or
cmps
xlat
jp
xchg
aam
rcr
ret
sahf
popf
sub
les
sub
daa
ret
mov
mov
adc
sbb
dec
jge
mov
fadd
int
push
les
sub
pop
(bad)
xchg
xchg
inc
xchg
int3
cmp
pop
push
xchg
add
popa
rcl
and
inc
pop
nop
cmps
sti
pop
ret
mov
addr16
iret
jne
add
sub
push
and
xchg
lods
jmp
mov
adc
mov
aas
cdq
pop
inc
aas
cs
pushf
dec
or
fsubr
jmp
or
pop
mov
cwde
or
xor
out
xchg
test
sub
sub
cwde
dec
fs
cmp
add
test
mov
ror
add
jns
jg
jbe
movs
mov
jbe
icebp
popf
pop
adc
cmp
addr16
adc
cmp
cs
cmp
imul
hlt
ret
adc
int3
sbb
jb
pop
jnp
add
fwait
mov
cs
sbb
mov
repz
mov
retf
xchg
arpl
or
leave
xchg
addr16
out
retf
mov
js
pop
sub
mov
into
out
xor
sbb
mov
mov
fmul
ja
or
cli
in
pop
bound
pop
nop
mov
stos
push
push
cmp
mov
jo
and
pop
int
add
dec
imul
stos
adc
std
ja
in
or
pop
enter
pop
dec
in
ins
icebp
inc
sbb
aam
inc
mov
inc
stc
fcmovu
int3
mov
movs
hlt
add
out
jge
ffreep
dec
rcr
repz
aam
push
(bad)
or
push
mov
cmp
test
cld
sub
pop
jbe
es
mov
cmp
pop
popf
lahf
outs
lds
shr
sti
cmps
inc
inc
pop
sbb
dec
fdiv
(bad)
stos
iret
jle
(bad)
enter
cmc
lds
shl
mov
xor
pmaddwd
aas
jo
call
mov
aas
or
mov
mov
xchg
mov
xor
xchg
jmp
and
(bad)
inc
mov
test
aam
sti
push
daa
imul
ret
and
cmp
and
cmp
ret
mov
and
jl
xchg
mov
sub
fcmovbe
xchg
neg
sub
mov
xchg
inc
icebp
push
lock
fsubrp
sbb
out
mov
popa
cmp
inc
(bad)
xor
int3
sbb
mov
xchg
sub
push
add
in
xor
repz
xchg
retf
into
jle
jl
in
mov
mov
dec
push
jne
pop
xor
xchg
stos
ss
in
loop
adc
enter
mov
das
bound
daa
and
sti
fidiv
push
wrmsr
xor
lock
out
cmp
sub
and
pusha
(bad)
mov
or
popa
retf
adc
push
fmul
pop
test
or
mov
mov
jns
ds
add
push
rcl
xchg
mov
cmp
loop
mov
outs
inc
dec
ja
and
(bad)
(bad)
cmp
lea
in
adc
dec
ret
das
loop
das
push
adc
push
call
mov
clc
jb
out
cmp
dec
xor
cwde
sbb
lods
es
pop
cmps
or
push
sub
(bad)
cld
and
gs
xlat
and
xchg
xchg
nop
and
fcmovu
in
(bad)
push
retf
sar
test
jbe
mov
fbld
int
mov
fnstsw
(bad)
jecxz
cmp
cld
(bad)
sbb
fadd
cmp
cmp
adc
out
cmp
fcom
(bad)
and
sbb
mov
repz
xchg
add
push
sub
jmp
stc
jbe
mov
sub
sub
cwde
dec
ins
sbb
lock
pop
ret
dec
sbb
mov
xchg
pop
push
jge
fs
imul
add
inc
push
jno
xchg
dec
adc
cmp
das
mov
mov
inc
sbb
movs
ds
in
jno
test
xor
loopne
aaa
adc
rcl
cmp
cmp
ret
arpl
jbe
mov
xor
mov
repz
xchg
add
jne
outs
adc
lods
div
dec
bound
daa
fdiv
test
ficom
int
inc
adc
outs
arpl
mov
ficomp
mov
test
out
sbb
mov
aaa
bound
add
in
sub
mov
inc
inc
or
sahf
lods
cmp
mov
mov
jl
xchg
test
add
aam
movs
adc
jmp
inc
iret
ret
jmp
push
movs
mov
es
leave
xor
and
push
or
xchg
bound
les
aas
popa
inc
mov
pop
and
movs
movs
sbb
int3
dec
fsin
loopne
popa
and
repnz
cld
cmp
dec
xor
in
adc
pop
je
ins
xchg
xchg
push
(bad)
push
xor
dec
inc
mov
inc
movs
mov
ins
leave
leave
ret
cdq
add
and
rcl
push
gs
mov
adc
repnz
inc
and
clc
add
or
xor
fcom
fist
jne
icebp
and
mov
sub
je
pop
cld
inc
add
das
pushf
(bad)
xchg
sub
bextr
das
fcomp
fisub
jg
(bad)
inc
aaa
pop
inc
ret
nop
jb
cmc
cmovbe
jo
cmp
mov
mov
std
out
mov
imul
retf
mov
ret
sub
nop
sub
(bad)
nop
stc
mov
sbb
push
jns
loopne
pop
retf
test
ficomp
xchg
dec
jle
or
xchg
jo
sti
dec
add
pop
call
mov
sahf
scas
xor
or
or
xchg
xchg
ds
sahf
out
iret
imul
mov
adc
pop
dec
adc
push
not
leave
loop
rcl
add
fnstenv
clc
xor
dec
push
xlat
push
adc
arpl
push
cdq
jnp
or
(bad)
jne
add
ds
lahf
outs
xchg
xor
inc
jo
leave
enter
sbb
addr16
and
or
movs
mov
or
xchg
jg
ss
xchg
in
or
fwait
jl
mov
sbb
std
mov
fstp
and
mov
movs
add
repnz
into
xlat
inc
fwait
jno
xor
pop
scas
mov
jne
lods
cmp
pop
inc
xor
daa
mov
adc
mov
fist
pop
(bad)
(bad)
pop
mov
shl
adc
xlat
fadd
pushf
sbb
jge
outs
cli
or
in
(bad)
cdq
xchg
int
jle
fcom
and
dec
sbb
dec
nop
mov
bound
mov
mov
call
add
cwde
pop
xchg
mov
pop
mov
push
xor
in
rol
or
jne
rol
jmp
xor
hlt
(bad)
fmul
stos
addr16
fisttp
dec
push
bound
jmp
jecxz
dec
bound
js
push
and
or
pop
test
imul
dec
call
inc
test
cmp
lock
clc
inc
call
xor
movs
out
imul
cmc
jns
cmps
add
jg
jge
mov
in
cmps
add
or
inc
ja
mov
bound
add
scas
pop
iret
jno
xchg
push
arpl
inc
cmp
and
xor
cmp
add
mov
push
sbb
cmp
ret
xchg
jb
xchg
aas
pop
jb
scas
sub
add
lahf
add
out
lahf
cmp
retf
in
push
in
add
push
mov
mov
fcmovnu
sbb
ja
cs
push
dec
jae
jge
in
rcr
xchg
ss
mov
pop
mov
sar
aad
lds
xchg
adc
test
fmul
push
xchg
inc
add
repnz
push
ficom
jp
mov
jp
mov
int
fst
retf
or
arpl
xlat
or
fst
mov
inc
xchg
jmp
(bad)
or
aaa
xchg
adc
xchg
sbb
fidivr
nop
and
ss
dec
mov
inc
shl
int
jo
icebp
repz
ins
call
lods
repnz
lods
sub
mov
push
mov
adc
xchg
pop
cmp
out
or
lds
aaa
add
pop
pop
mov
mov
adc
pop
je
mov
in
in
scas
push
rcl
mov
fcmovne
js
lock
inc
icebp
aad
add
call
mov
rol
pop
nop
mov
cmps
dec
clc
gs
repnz
cli
rcl
cs
cmps
adc
jp
add
dec
cmps
ror
sti
or
and
rcl
adc
jg
out
(bad)
pushf
das
jno
daa
outs
and
outs
call
cld
add
cmp
cmc
or
or
cmp
push
mov
retf
xchg
pop
popf
scas
or
retf
mov
in
mov
jge
sbb
sub
js
mov
retf
inc
mov
inc
arpl
mov
fdivr
iret
out
fmul
test
inc
inc
adc
add
mov
out
dec
jb
jb
inc
ds
jnp
imul
repnz
adc
pop
push
pushf
xchg
push
mov
jbe
jp
fdiv
ja
push
mov
retf
daa
(bad)
ret
or
sub
mov
outs
stos
ss
jp
inc
mov
mov
out
push
out
push
fstp
xor
jae
mov
sbb
mov
ret
mov
inc
aas
push
pop
aaa
das
pop
dec
imul
mov
sub
add
push
pop
in
jp
cmp
or
jp
in
loopne
test
push
push
sub
(bad)
out
leave
dec
dec
adc
mov
ficomp
and
in
push
retf
call
arpl
stos
das
and
test
dec
(bad)
iret
and
ins
mov
cmp
sub
sti
xchg
std
mov
sbb
jg
shl
push
mov
fsubrp
lods
and
mov
mov
imul
mov
jns
jmp
dec
jne
dec
mov
div
push
int3
les
test
daa
cmp
jmp
stc
dec
xchg
inc
repz
es
dec
jl
in
scas
xor
cs
nop
loopne
dec
jg
cmp
ins
icebp
mov
xor
xor
sbb
push
ret
test
iret
outs
adc
ficom
ficomp
fcom
pop
push
std
add
rcr
adc
mov
test
xchg
iret
imul
mov
jb
cmp
imul
mov
sahf
jg
fsub
lds
js
sub
enter
dec
push
inc
fld
cmp
pop
stos
sbb
cld
stc
xor
xor
aaa
stos
ins
fisttp
ja
add
shl
xor
xchg
dec
xchg
mov
clc
repnz
fs
cmp
hlt
mov
lods
hlt
cmp
cmp
and
sub
and
push
jb
retf
aaa
add
push
dec
cs
cmp
inc
mov
add
test
jg
pop
push
loopne
cmp
jno
sub
xchg
(bad)
outs
(bad)
lea
shr
fxtract
jmp
sti
pop
je
adc
std
push
nop
dec
sti
div
and
rcl
out
out
dec
xor
jbe
out
aam
popf
out
push
je
sub
mov
neg
mov
repz
jae
out
cdq
adc
unpckhps
push
push
stos
out
fwait
dec
xchg
inc
outs
stos
lahf
dec
cld
(bad)
in
jge
loopne
push
jle
test
ds
push
sti
mov
nop
sbb
imul
pop
jmp
repnz
fcmovnbe
(bad)
out
iret
adc
xchg
xchg
jecxz
push
and
imul
and
dec
test
jle
mov
cwde
pop
sbb
sbb
and
adc
dec
lock
push
aas
cmp
add
jge
and
scas
jl
fxch
xor
and
mov
lods
mov
xchg
and
movs
fucom
loop
test
pop
cmp
cmc
cmp
push
jmp
shl
cmp
sbb
fsubrp
(bad)
jo
lahf
(bad)
imul
aas
xchg
jne
mov
fimul
je
xchg
inc
pop
dec
(bad)
retf
shl
(bad)
and
mov
pop
data16
in
xchg
repnz
imul
retf
or
pop
popa
mov
pusha
fcomp
daa
inc
or
aam
(bad)
aad
imul
ds
add
ins
sbb
(bad)
out
call
bnd
inc
jle
outs
cmc
mov
jge
push
mov
cmp
ret
inc
cdq
xor
xchg
xlat
xchg
xor
jno
dec
test
clc
popa
and
cmc
cmp
inc
push
dec
cmp
jmp
xchg
out
cld
dec
push
cwde
movs
sahf
or
and
ret
push
es
dec
pop
ja
cs
fdivr
jp
icebp
addr16
sahf
mov
and
dec
ret
add
lds
push
inc
push
jp
arpl
mov
bound
cmc
mov
fs
(bad)
test
lea
push
mov
fmul
(bad)
clc
int3
pop
inc
pop
stos
cwde
or
aas
ss
mov
out
inc
add
sar
clc
imul
dec
or
jno
loopne
popa
sbb
pop
push
xor
fnstsw
sbb
xor
jle
fstp
cld
dec
aam
mov
mov
jb
dec
mov
mov
cs
jl
cmp
neg
xchg
push
pop
xor
pop
mov
mov
aad
pop
(bad)
sub
out
jae
cld
mov
cdq
fbld
mov
cmp
cmp
sub
xor
cli
xchg
movs
pop
stos
push
dec
dec
std
sbb
jb
leave
pushf
cmps
retf
movs
fild
test
push
push
jmp
jg
pop
aam
movs
aas
cmp
cmp
jg
ret
test
xor
adc
xlat
mov
cli
test
push
pop
push
repnz
into
inc
nop
add
mul
lock
add
es
in
sti
inc
call
and
mov
and
jae
pushf
add
stos
cmc
mov
int
iret
sub
jb
mov
sub
fmul
add
imul
push
test
cld
repz
nop
or
sub
dec
mov
lods
mov
mov
xor
adc
mov
push
dec
jbe
jne
ror
push
push
or
mov
cmps
push
sbb
shl
sbb
xor
ds
lods
(bad)
sbb
mov
out
push
loopne
push
jo
dec
inc
or
aad
cwde
scas
lock
addr16
push
ret
and
retf
lea
pop
sti
in
pushf
dec
in
push
jg
test
sahf
push
and
push
nop
push
push
pop
push
out
and
sub
or
xchg
add
retf
test
xchg
inc
ds
call
push
fldcw
(bad)
outs
sub
add
jns
xchg
mov
sbb
xchg
sahf
push
mov
jno
sbb
shl
dec
shr
addr16
cdq
es
out
add
in
push
imul
mov
rcr
mov
js
xor
ror
retf
jmp
push
dec
push
pop
cwde
adc
add
xchg
clc
mov
mov
ficomp
xchg
add
je
cmp
ds
pop
in
popf
dec
jmp
jg
sub
adc
retf
fwait
aaa
aam
cdq
sub
or
mov
cmps
push
mov
pop
mov
push
and
int
inc
cdq
lds
mov
mov
sbb
imul
jp
mov
aam
xlat
dec
mov
jne
cmp
jmp
fnstsw
out
in
or
jle
jl
ins
clc
lods
shl
rcr
xchg
nop
into
dec
(bad)
dec
daa
jbe
cmps
jmp
or
repnz
fmul
pop
push
lea
test
cdq
in
pop
in
and
and
lock
ins
in
xlat
adc
sahf
lods
xor
sbb
dec
mov
cmps
cmp
mov
outs
imul
sti
xchg
mov
cld
sahf
push
stos
imul
stos
dec
inc
jno
(bad)
mov
fdiv
sbb
ret
or
push
dec
sub
popf
sbb
js
mov
dec
mov
daa
imul
lock
dec
lods
das
popa
test
adc
cmp
jmp
pushf
cmp
daa
data16
push
aam
mov
idiv
mov
sub
outs
push
jge
enter
jmp
rcr
sbb
js
push
xchg
inc
jecxz
movs
push
push
and
aam
ja
xor
test
push
call
adc
and
in
xor
call
inc
pushf
pop
jge
add
inc
pusha
cwde
fild
sub
(bad)
aad
call
sbb
sub
mov
xchg
movs
push
test
and
mov
ss
sbb
pusha
inc
xchg
mov
movs
or
jle
test
xchg
push
ins
sub
lds
imul
ins
cs
or
bound
cwde
ins
mov
mov
cmp
es
cmp
jle
out
and
jbe
cdq
add
and
mov
jae
loope
jg
pop
ret
fisubr
pushf
lea
jb
pop
pop
(bad)
cmp
in
or
rol
popa
and
in
sub
dec
es
and
adc
xor
arpl
pop
cmp
or
or
outs
int
and
xchg
jmp
jmp
movs
scas
mov
mov
retf
and
bswap
add
mov
pop
aad
sub
cmp
scas
std
sub
and
push
fucomp
sub
inc
cmp
cmps
xor
mov
in
jb
xchg
dec
mov
imul
leave
in
pop
push
aaa
mov
pop
sub
ja
retf
out
push
call
mov
cmp
dec
xchg
hlt
mov
cli
call
mov
aad
add
xchg
fisub
inc
or
pusha
mov
jno
jnp
sti
ficomp
adc
add
cld
xor
hlt
cmps
jmp
lock
inc
pop
popa
inc
vandnps
dec
add
out
pushf
and
jmp
das
clc
cmps
test
jno
jmp
mov
int3
or
dec
cs
ret
jmp
pop
lods
or
xor
mov
mov
int3
test
fst
daa
shl
fisttp
scas
cmps
mov
sti
mov
not
fsubr
repnz
cmp
dec
adc
xchg
mov
inc
std
hlt
push
out
lea
mov
add
dec
xchg
sub
out
popf
add
dec
or
cmp
cdq
cmps
dec
push
mov
or
and
dec
mov
cmps
sar
push
pop
lock
pop
mov
adc
test
cmp
pop
sahf
xchg
bound
sbb
test
ret
pop
jge
les
jl
ja
push
icebp
adc
test
pop
xor
iret
out
push
adc
outs
cmp
pop
push
mov
movs
adc
cs
pusha
rcr
push
inc
inc
test
mov
arpl
inc
daa
mov
jns
aas
xchg
mov
(bad)
or
pop
mov
lods
aaa
ins
sahf
loopne
ja
imul
jns
fs
fisttp
xor
adc
or
xchg
inc
add
cld
ret
retf
inc
pop
test
(bad)
data16
sub
sub
adc
mov
(bad)
cs
add
in
mov
lods
cld
(bad)
sbb
pop
mov
xchg
cmps
sub
mov
xchg
fsubr
cs
and
lods
std
mov
jle
mov
adc
movs
mov
xor
into
push
or
lods
aas
mov
call
pop
cmps
pop
std
sbb
pop
and
dec
fs
and
sti
mov
or
fild
movs
cld
mov
inc
rcl
imul
push
sub
gs
sbb
xor
and
outs
int
mov
and
in
icebp
stos
mov
jmp
loop
dec
pushf
or
lods
cmp
mov
retf
adc
out
xchg
icebp
sar
dec
cld
push
push
(bad)
repz
imul
(bad)
outs
in
sub
cmc
xor
fisub
mov
sub
scas
mov
addr16
or
jge
adc
(bad)
fild
enter
idiv
jae
xchg
and
ja
or
fld
rcr
daa
push
loop
imul
sub
sub
into
mov
sbb
outs
or
add
aas
(bad)
test
aas
mov
addr16
test
arpl
and
mov
cli
mov
rol
adc
and
jbe
aaa
int3
xor
ret
lahf
imul
jmp
and
or
cmc
(bad)
jb
out
test
and
cld
mov
aad
dec
retf
xor
or
push
push
jns
sub
clc
dec
xchg
adc
xlat
je
into
sbb
adc
fnstsw
sbb
lahf
jp
or
dec
push
adc
add
fld
int3
inc
cli
mov
inc
pop
in
int3
cli
sar
fdiv
mov
(bad)
mov
dec
pop
cmp
ja
dec
xlat
cmp
push
mov
imul
adc
(bad)
push
outs
fld
je
imul
enter
push
aaa
scas
js
add
cmp
retf
pop
into
test
mov
cli
(bad)
stos
out
jle
hlt
xor
mov
lahf
pop
and
mov
imul
out
xchg
loopne
mov
mov
or
push
sub
jmp
mov
mov
fwait
add
cmps
js
in
mov
lock
test
das
inc
push
pusha
inc
adc
push
in
jb
icebp
add
dec
cmp
inc
scas
xchg
inc
push
mov
and
icebp
cmps
aaa
dec
fdivr
pusha
arpl
cmp
movs
dec
and
adc
je
push
pop
or
popf
nop
aas
adc
inc
adc
and
data16
(bad)
jge
stos
(bad)
(bad)
ret
mov
bound
adc
jbe
xchg
xor
pop
add
ds
rcl
lahf
fdiv
fsub
fistp
sub
in
sub
cli
fwait
lahf
test
das
outs
inc
add
js
adc
or
or
mov
aas
mov
mov
add
pop
mov
jmp
mov
loopne
mov
push
jae
sti
out
xchg
sti
in
fmul
cmp
add
adc
gs
mov
push
adc
mov
fwait
dec
lds
lods
imul
int
cmc
push
inc
push
iret
sbb
and
int
cmp
out
out
jne
mov
push
out
rcl
in
ds
mov
jg
ja
lods
aas
cmp
clc
mov
adc
imul
sbb
dec
stos
stos
mov
jae
lock
xor
cs
repz
sub
mov
hlt
sub
push
pop
test
lods
jmp
xchg
shr
nop
lea
out
ret
aas
fiadd
adc
enter
ins
pop
mul
test
or
jno
push
pop
outs
retf
mul
(bad)
mov
xchg
das
push
xlat
push
aad
and
aaa
mov
fldenv
data16
loop
dec
aam
mov
in
fwait
sbb
ss
xchg
dec
sub
cmc
mov
dec
dec
out
dec
cwde
popa
mov
repnz
out
call
or
fistp
xchg
stos
sub
adc
jno
adc
hlt
cli
sbb
add
adc
sub
sti
push
cmp
mov
cmp
nop
push
sbb
(bad)
retf
mov
out
or
call
call
add
pop
mov
out
pushf
ret
leave
fnstsw
jae
js
mov
sbb
sub
jge
sub
call
call
(bad)
adc
in
pop
xlat
ror
push
dec
fs
(bad)
inc
jne
and
jns
scas
pop
movs
bound
iret
inc
mov
jnp
mov
xor
or
or
adc
adc
test
jae
rcr
push
jg
rcl
push
add
xchg
fiadd
scas
mov
sub
popa
shl
cmc
and
fild
sbb
ror
xchg
rcr
movs
sti
cmp
pop
test
inc
test
pop
xchg
or
(bad)
ficom
mov
pop
ds
cmp
xchg
dec
mov
ret
and
dec
fst
xor
in
fistp
push
lahf
inc
jge
pop
pop
push
mov
ss
mov
shl
psubsb
pop
repnz
sub
pop
pusha
mov
inc
aad
dec
inc
lds
pop
test
ret
inc
push
push
das
cwde
or
push
sub
(bad)
outs
push
lods
inc
inc
das
cli
arpl
push
inc
inc
leave
xlat
add
push
inc
adc
push
xor
retf
mov
push
clc
pop
mov
mov
arpl
imul
jno
adc
fiadd
ret
outs
cmp
pop
cmp
xlat
or
out
sub
mov
lods
dec
iretw
mov
xor
jbe
mov
and
pop
jne
pop
cmps
xchg
imul
mov
jge
mov
aas
sti
in
test
pop
mov
lock
sub
sub
pop
sti
jo
mov
pop
pop
and
test
call
test
(bad)
add
pop
mov
std
add
mov
add
pop
mov
daa
jns
test
pop
repz
dec
or
jne
fisttp
arpl
shr
sub
cmp
ret
rcl
test
adc
jo
jo
dec
lods
push
xchg
inc
cmc
xor
sbb
cwde
popf
push
popf
dec
jns
pop
repnz
mov
enter
cdq
cli
into
push
sub
clc
push
in
ds
js
push
jne
je
xor
pop
loopne
les
sbb
pop
xlat
inc
out
imul
dec
jmp
shl
cmps
popf
fcmovnu
cld
inc
or
or
lods
and
(bad)
sbb
enter
ror
and
jp
push
inc
mov
push
mov
add
add
into
(bad)
fistp
lahf
(bad)
push
loop
imul
adc
mov
pop
shl
aaa
scas
pop
jmp
sbb
jge
outs
sub
dec
out
movs
or
in
or
mov
xchg
jmp
pop
push
pop
xchg
cmps
xor
sti
cmp
mov
xor
cwde
adc
mov
and
adc
xor
jb
xor
cwde
mov
std
call
imul
out
adc
jmp
xor
or
and
leave
jo
(bad)
pop
in
ss
arpl
fidiv
scas
test
push
dec
inc
cld
mov
popf
cmp
ds
push
cmp
cdq
adc
pop
push
adc
loopne
dec
add
dec
cmp
dec
les
lds
sbb
jmp
xchg
idiv
retf
(bad)
adc
xchg
xor
mov
fcom
push
or
xlat
ficomp
jl
rol
inc
retf
retf
dec
(bad)
in
(bad)
int
mov
and
popa
jmp
popa
and
repz
fcmovne
jo
retf
js
push
pop
fnsave
xchg
pop
xchg
or
push
sbb
xchg
sar
push
cdq
add
or
jg
(bad)
pusha
popf
push
pmulhw
icebp
enter
push
push
das
aam
ret
lods
imul
xor
and
test
dec
or
pushaw
inc
xchg
add
pop
mov
sbb
cdq
sbb
fisttp
xor
mov
enter
(bad)
nop
sbb
out
test
shl
cmp
cmp
imul
pop
push
cmp
fucomip
jo
cmp
jns
scas
ja
les
xchg
and
mov
jbe
xchg
sti
xchg
mov
xchg
jle
mov
icebp
mov
sbb
push
inc
lahf
adc
in
mov
jmp
adc
lahf
jmp
pop
mov
pop
and
ja
xlat
loop
outs
ficomp
and
out
int3
into
mov
sbb
and
cmp
add
push
inc
pop
lock
jmp
xchg
pop
inc
lock
(bad)
xchg
or
fwait
leave
shl
cmps
sub
repz
mov
fnstsw
sbb
sbb
mov
les
dec
sub
ret
push
cmp
loop
push
jno
ds
popa
aas
add
pusha
into
test
and
add
leave
les
mov
scas
dec
aaa
leave
dec
cld
movs
fld
xchg
inc
in
xor
jne
xchg
stc
ss
int
repnz
loopne
les
aad
mov
xchg
push
inc
fs
mov
mov
ret
retf
xchg
xchg
push
loopne
jle
sub
outs
push
add
xchg
js
jecxz
mov
mov
jecxz
jecxz
shr
mov
add
ret
outs
dec
dec
push
into
pop
adc
cmc
js
rcl
pop
jg
out
(bad)
jmp
dec
sbb
nop
out
and
mov
jmp
and
push
inc
inc
fwait
bound
pushf
rcr
lds
scas
enter
inc
aas
mov
test
sbb
inc
inc
or
inc
clc
out
xchg
add
inc
je
mov
aam
jo
mov
jecxz
imul
sub
rcl
fwait
icebp
les
(bad)
icebp
pop
ja
std
mov
jmp
(bad)
adc
and
test
pusha
inc
je
jg
fwait
aam
pop
dec
mov
sti
ficom
loope
jno
(bad)
cmp
dec
push
lods
push
imul
cmps
jmp
inc
sbb
pusha
jp
call
push
ins
out
mov
loop
cmp
(bad)
cmp
pop
jge
popa
mov
pop
popf
jl
popa
data16
sbb
or
jmp
inc
adc
jmp
retf
inc
or
and
sub
inc
fwait
dec
ret
ret
adc
pop
jp
fwait
es
add
jle
ja
hlt
jge
add
es
mov
sbb
sbb
mov
lahf
dec
mov
sub
popa
cmp
push
fcomp
test
jmp
xor
fdiv
ds
dec
mov
mov
mov
ret
sub
(bad)
sub
xor
cmps
add
cmp
xlat
pop
mov
arpl
nop
shl
inc
imul
xchg
jae
stos
and
adc
inc
sbb
imul
pop
in
hlt
lahf
outs
ins
mov
es
xchg
stos
(bad)
in
fdivr
xchg
mov
pushf
mov
sub
leave
push
pop
jmp
fiadd
call
jnp
jmp
push
mov
in
fdiv
lea
aas
dec
xor
cmp
les
cmps
mov
push
retf
mov
and
mov
pop
sti
ss
pop
das
jecxz
inc
xchg
(bad)
nop
sub
mov
ret
cmp
add
inc
std
scas
leave
out
out
movs
(bad)
xchg
imul
jecxz
cmp
scas
and
mov
repnz
aam
jl
mov
(bad)
sar
shl
in
dec
setbe
stos
mov
mov
popa
jmp
jle
sub
jmp
jnp
xor
mov
cmp
aaa
jns
push
(bad)
cwde
mov
xchg
pushf
les
or
and
push
call
bound
jno
rcl
loop
push
les
iret
mov
jle
mov
xor
cmp
adc
int
or
stos
leave
and
pop
repnz
mov
pop
pop
cmp
pop
rol
mov
stos
in
push
stos
popa
pop
clc
cdq
inc
add
xchg
retf
ss
(bad)
push
outs
pop
loope
jmp
pop
adc
mov
inc
daa
fistp
push
xchg
pushf
inc
xor
das
out
data16
xchg
xchg
inc
inc
popa
repz
cmp
jmp
fwait
in
pop
push
jg
aaa
jg
xchg
fs
mov
fnstsw
mov
mov
pop
addr16
daa
sub
mov
out
sub
popf
lods
repz
je
xchg
mov
mov
(bad)
add
das
out
lods
or
ja
and
aad
pop
adc
xchg
adc
inc
and
in
gs
adc
mov
push
imul
mov
mov
call
and
in
inc
cdq
das
sbb
and
pop
push
pop
in
test
(bad)
and
sub
pop
ins
fsubr
outs
in
ds
adc
push
sbb
sub
(bad)
fucomip
jnp
xor
out
(bad)
ret
push
jge
ins
jg
in
pushf
jg
xor
fistp
fs
and
test
cdq
pop
leave
push
(bad)
repz
cmp
out
mov
test
inc
cmp
retf
jmp
dec
sar
lds
ins
dec
lock
sar
xlat
and
mov
out
jae
jb
jns
or
aam
pop
(bad)
icebp
mov
repnz
scas
call
fs
mov
imul
lock
jg
pop
enter
jle
arpl
adc
pop
mov
ds
mov
and
pop
into
call
lods
cs
pop
pop
or
call
test
loop
jo
in
sbb
and
(bad)
pop
mov
test
lods
adc
call
add
lods
test
iret
jge
sub
sbb
rcr
inc
das
jnp
out
cmp
jae
jo
mov
lea
cmp
inc
aas
out
outs
enter
cs
inc
inc
cmp
sbb
xor
enter
(bad)
sti
mov
outs
fwait
les
pop
hlt
mov
test
or
(bad)
fiadd
outs
push
sbb
ds
dec
push
adc
push
arpl
dec
jbe
bound
iret
mov
inc
mov
and
ret
adc
addr16
add
sbb
stos
stos
shl
cmp
xchg
(bad)
and
or
repnz
aas
push
fcmovu
mov
sub
and
out
(bad)
mov
xchg
add
adc
pop
enter
mov
imul
or
out
adc
rcr
lea
cdq
cmp
lods
cdq
mov
mov
xchg
mov
or
and
pop
sub
mov
(bad)
sub
add
dec
aas
sbb
hlt
jp
enter
sar
mov
jo
adc
out
push
pusha
inc
repnz
push
jae
hlt
fiadd
pop
int3
or
imul
stc
or
xchg
mov
push
xor
out
dec
pop
and
in
mov
das
sbb
mov
jne
mov
pop
test
push
jge
mov
jbe
std
cs
fst
xchg
push
lods
rol
js
lock
out
xchg
push
ins
sahf
test
enter
push
and
and
sbb
cmp
addr16
push
(bad)
mov
(bad)
fdivr
icebp
adc
pop
ins
in
cmp
daa
mov
or
jmp
push
popa
adc
mov
sbb
pop
not
jmp
cmps
sbb
add
sbb
or
int3
xor
cld
test
mov
cwde
dec
icebp
pop
ror
jnp
sub
stos
outs
mov
cmp
in
mov
fld
out
into
lock
jp
cmp
pop
xchg
adc
dec
sub
inc
adc
push
stc
scas
mov
or
fucom
in
push
cmp
and
fisubr
div
in
xchg
sbb
dec
sbb
push
fdivr
adc
jns
push
data16
sbb
iret
movs
popf
cmc
jmp
retf
xor
repz
fstp
or
mov
adc
jecxz
xchg
xlat
pop
adc
mov
or
inc
gs
mov
bts
xor
or
das
fs
mov
add
and
jmp
mov
repz
dec
outs
cmps
outs
mov
pop
test
pushf
mov
mov
je
popf
jmp
add
shl
xchg
sub
aad
fbstp
push
call
push
and
sbb
pop
outs
inc
push
add
ins
add
sti
cs
out
jns
or
out
push
test
push
push
sbb
fistp
push
pop
jl
daa
push
add
ins
push
mov
(bad)
sbb
inc
js
push
enter
sbb
ror
xchg
sbb
ins
xchg
jecxz
jo
ret
sbb
clc
pop
mov
xor
out
sbb
loop
test
icebp
fcmovnbe
cmp
mov
ret
add
mov
cmc
push
lds
sbb
fisubr
mov
movs
test
pop
and
mov
xchg
inc
mov
xchg
fwait
push
and
xchg
sbb
cwde
or
push
lds
pop
out
and
int
sub
repz
ins
lods
pop
pop
inc
push
retf
aad
pop
jp
sub
shl
inc
hlt
xchg
adc
cwde
fsubr
cwde
loopne
fcom
rcl
sbb
dec
xor
dec
mov
or
mov
xchg
sub
xor
push
push
int
fs
add
jmp
jmp
push
mov
retf
lea
popa
pop
fist
stos
loop
mov
jns
call
or
mov
loopne
mov
sub
mov
pop
sar
js
xor
and
push
jo
inc
in
sbb
jle
push
ror
nop
push
loope
mov
add
mov
js
cdq
and
dec
inc
cmp
loope
rol
arpl
inc
jmp
cld
rol
data16
adc
adc
(bad)
xor
dec
or
sub
out
mov
mov
lahf
push
cmp
or
xchg
stos
dec
(bad)
mov
sbb
ins
jl
retf
fsubr
or
lds
dec
ret
out
cli
fcomp
scas
fistp
std
scas
fs
xchg
mov
cmp
cmps
iret
push
gs
enter
scas
xchg
pop
(bad)
add
loopne
jecxz
stos
adc
rol
nop
in
es
loopne
out
lahf
jns
cmp
repz
jmp
test
jle
xor
and
or
jb
sti
push
jmp
lock
jae
setno
jbe
jmp
jle
or
lods
(bad)
shr
lods
inc
stc
ret
pop
mov
and
sub
jl
leave
frstor
pop
idiv
push
dec
inc
xlat
cld
cwde
out
enter
das
xchg
jae
mov
jbe
dec
xor
stc
mov
add
sbb
adc
adc
sbb
xchg
cdq
push
add
loop
imul
aas
enter
mov
inc
jp
fucomp
(bad)
rcr
jne
or
jmp
daa
shl
mov
repz
adc
aas
bound
jno
test
mov
hlt
retf
or
mov
xchg
adc
xchg
add
idiv
movs
sbb
les
sub
and
cmps
call
cmp
or
iret
xchg
enter
pop
and
aad
jb
stos
pop
out
not
loop
xchg
fs
fcom
ins
mov
xor
mov
(bad)
(bad)
mov
and
ret
sbb
or
movs
and
pushw
and
add
ror
mov
add
ffreep
jg
scas
sbb
retf
rol
mov
ins
cmp
push
not
cdq
jb
sti
adc
sub
in
jb
sbb
daa
(bad)
(bad)
xchg
pop
scas
repz
in
ins
sysret
in
int
fwait
and
push
mov
call
aas
shl
aam
ret
push
jecxz
gs
lock
jg
and
push
mov
jno
push
lods
add
repz
sar
scas
ins
sbb
xchg
and
in
xchg
inc
adc
lods
fstp
adc
dec
cmc
scas
fwait
outs
add
adc
js
push
inc
jmp
into
and
daa
mov
mov
in
cli
(bad)
push
test
fisubr
daa
int3
(bad)
fcom
dec
inc
test
je
loope
jae
mov
mov
cmps
daa
stc
or
dec
paddsb
popf
mov
bound
inc
outs
xor
scas
mov
out
adc
pushf
xor
xchg
jne
(bad)
or
aas
and
fs
test
pop
int3
cwde
jg
mov
push
xchg
sbb
and
cwde
adc
mov
fcom
mov
fdivrp
cmp
push
fwait
push
cmp
cmp
push
pop
leave
clc
add
enter
mov
js
ins
cmps
in
mov
sahf
inc
mov
into
pop
stos
mov
mov
(bad)
cmp
sub
xor
shr
ret
in
cmc
sub
call
pop
imul
mov
inc
push
repnz
bound
jge
shl
aad
inc
push
jns
(bad)
stos
xchg
ja
xor
cmps
xlat
retf
sub
adc
int
(bad)
inc
xchg
ds
sbb
fild
retf
lock
int
fisub
push
psubusw
retf
loope
mul
add
aam
(bad)
jmp
ins
cmp
out
cmp
jne
push
xchg
lods
push
mov
pop
in
loopne
inc
cmp
sbb
test
aaa
ret
loope
idiv
mov
mov
push
mov
sbb
jbe
jmp
push
stos
xlat
inc
jo
int3
mov
aad
test
aad
push
xor
push
scas
fild
inc
jle
push
pop
fidiv
xor
mov
(bad)
aam
mov
sti
nop
mov
mov
jns
push
and
mov
inc
or
enter
ins
inc
inc
xchg
shl
les
cmp
inc
mov
in
stos
dec
in
cmp
cmps
xor
pop
or
cmp
mov
frstor
sub
pop
mov
mov
test
ss
jb
fdivr
and
add
mov
add
dec
mov
mov
in
and
in
dec
mov
sbb
sti
rcr
xchg
add
aaa
dec
mov
pop
fidiv
push
ins
fsincos
xlat
in
fnstsw
adc
push
loope
push
rcl
cwde
xor
outs
icebp
or
fld
fisttp
mov
icebp
cs
es
out
(bad)
xchg
pushf
data16
pop
(bad)
ja
movs
sub
xor
ds
cdq
dec
jmp
jns
(bad)
inc
das
hlt
add
pop
or
fcomi
enter
out
sbb
xor
gs
sub
ins
shr
or
add
xchg
popa
cs
push
ins
loopne
add
adc
pop
arpl
pop
je
push
mov
icebp
aaa
sbb
out
shr
int3
dec
popa
add
sub
enter
int
or
inc
add
jp
sub
or
mov
scas
(bad)
and
stos
(bad)
pop
pop
cmp
mov
xchg
jp
movs
mov
dec
mov
popf
inc
test
jle
mov
arpl
fsub
les
cmp
dec
and
mov
movs
jb
dec
std
jle
mov
mov
pushf
fsubr
xchg
pop
out
and
enter
imul
lods
pop
mov
sbb
popa
pop
mov
sbb
arpl
movs
and
adc
call
cmc
sbb
cmps
adc
jno
lock
sbb
and
lahf
push
xchg
sbb
fidiv
mov
ins
pop
add
xor
stos
rcr
dec
mov
outs
(bad)
(bad)
sub
sbb
int3
je
add
ret
sub
outs
cmps
adc
pop
push
pop
xchg
pop
out
aaa
shl
cld
stos
mov
cmp
xor
lock
out
xchg
or
push
xor
mov
mov
mov
dec
call
(bad)
out
sbb
dec
add
xor
pop
jecxz
cmps
cwde
adc
movs
aad
pop
mov
movs
pop
jecxz
lods
(bad)
retf
sub
fsubrp
lods
loope
cdq
sar
fld
lods
aam
add
push
call
jne
jo
jbe
push
sbb
or
mov
jae
inc
inc
test
(bad)
rol
ss
mov
and
push
add
cld
xchg
mov
pop
dec
loop
shl
aam
adc
or
mov
pop
dec
repz
in
push
or
inc
loop
or
cmp
lods
inc
repnz
mov
dec
iret
add
or
xchg
jge
call
iret
and
mov
rcr
(bad)
retf
xor
stos
jp
lds
not
push
mov
jbe
loop
fmul
adc
popf
loope
add
pop
xor
aam
rol
xlat
test
imul
pop
mov
push
jbe
mov
out
push
outs
or
(bad)
lock
dec
iret
int
pop
retf
pop
pop
iret
adc
mov
mov
ss
jne
xchg
jb
int
mov
cmp
shl
hlt
leave
cmp
mov
iret
push
ss
ja
push
mov
jmp
(bad)
hlt
pop
mov
out
call
loope
xor
leave
fnstenv
jl
fist
gs
retf
nop
std
inc
sbb
mov
ror
sbb
repz
in
jmp
jo
sbb
mov
shr
or
and
jne
add
fdiv
stos
jbe
out
or
push
aaa
pop
hlt
sub
cs
pop
pop
ins
in
movs
rol
adc
inc
call
sbb
cmps
mov
push
test
shr
jg
aas
stos
inc
in
aas
or
xchg
add
add
imul
pop
lock
xchg
sub
sbb
mov
lea
and
lea
bound
adc
stos
not
mov
in
adc
dec
addr16
cs
xlat
out
or
ror
aas
xor
ss
sbb
adc
es
jbe
or
sti
push
scas
xchg
aaa
xor
xor
mov
cmc
cli
ret
jmp
jae
loop
xchg
call
out
cmp
popf
jle
mov
jge
mov
xchg
mov
aaa
scas
addr16
push
push
mov
mov
fbld
push
sbb
mov
in
cmp
mov
inc
jmp
push
dec
lds
dec
loop
xor
xor
lods
jmp
cmc
push
cwde
xchg
cmc
and
bnd
ja
popa
ret
add
out
pop
test
and
shl
das
les
cli
jo
xor
xchg
fdiv
push
inc
adc
test
push
test
pop
stc
cld
mov
pop
cmp
dec
push
aaa
push
inc
add
and
sahf
mov
inc
std
inc
mov
aas
or
push
aam
(bad)
jg
enter
pusha
fs
mov
xor
clc
push
mov
adc
cld
mov
repnz
xchg
fadd
addr16
sub
leave
sbb
stos
(bad)
repnz
ins
popf
aaa
fidivr
lods
cmps
arpl
pop
nop
cmp
mov
pop
mov
or
jnp
and
jge
mov
mov
dec
xchg
push
ds
sahf
dec
ja
adc
enter
xchg
jmp
adc
xchg
push
mov
jns
(bad)
adc
stos
(bad)
movs
cmp
add
sahf
mov
(bad)
int
push
mov
jmp
in
(bad)
push
xor
sahf
out
xchg
ss
mov
jp
je
adc
std
or
jmp
mov
dec
out
mov
movs
add
sub
daa
jl
aad
add
inc
or
int3
scas
or
in
iret
mov
or
xor
div
or
out
mov
shr
adc
ret
push
sbb
iret
lods
in
test
retf
mov
inc
stc
out
pop
pop
cmps
daa
or
cwde
mov
push
sbb
rcl
sub
loopne
push
out
stos
ficomp
cli
repz
clc
pop
fisub
add
inc
sbb
leave
mov
dec
shld
or
push
push
in
sbb
mov
fld
or
and
retf
stc
inc
fwait
sub
int
lea
mov
out
pusha
pop
or
cmps
pop
rcr
dec
in
test
cdq
adc
leave
ins
mov
test
push
neg
adc
push
ret
pushf
cld
add
popa
inc
adc
aas
and
push
xor
push
xor
leave
dec
sti
pop
xchg
inc
(bad)
fisub
xor
mov
int
aaa
ret
and
push
out
(bad)
mov
inc
sub
or
cmps
ror
loope
hlt
lock
pop
jne
arpl
test
jns
xchg
xor
jp
xchg
mov
(bad)
jmp
dec
mov
xor
add
movs
lods
xchg
adc
scas
shl
push
cmp
ds
xchg
lods
int3
cmp
add
mov
sbb
push
std
pop
fld
xchg
inc
or
or
stc
push
sbb
(bad)
mov
jecxz
add
and
out
std
out
je
inc
test
sbb
jns
push
outs
clc
dec
rol
mov
inc
xchg
outs
mov
push
xchg
sbb
mov
ret
(bad)
xlat
lock
nop
in
or
push
not
dec
dec
push
lods
dec
cmp
push
jmp
stos
inc
xchg
cmp
shl
add
movs
push
sbb
pop
test
idiv
popf
cwde
xor
enter
sbb
adc
mov
popf
sbb
and
aam
mov
shl
popa
popf
cmp
push
sbb
sub
xor
mov
das
fldlg2
mov
scas
test
push
jmp
aas
sbb
add
imul
movs
inc
push
mov
stos
xchg
jmp
or
cwde
xlat
mov
dec
je
aaa
dec
dec
push
popf
cdq
rcl
pop
adc
fisttp
setbe
into
jmp
or
jg
clc
daa
xor
(bad)
imul
fs
in
popa
jnp
(bad)
in
bnd
aas
pop
xchg
or
rol
lea
mov
shl
mov
push
test
rcl
(bad)
test
int
and
outs
(bad)
and
mov
cmp
std
sub
and
addr16
test
fild
add
lds
jbe
mov
icebp
pop
pop
and
cmp
nop
xor
or
or
xor
inc
mov
mov
fs
cmp
mov
jae
and
call
loope
stos
inc
outs
test
pop
or
xor
pop
mov
les
lods
mov
adc
add
cmp
adc
dec
xor
jmp
push
leave
jge
push
mov
jnp
sar
push
and
or
sbb
mov
adc
call
adc
loop
add
mov
jno
jp
sar
ja
jnp
lds
cmp
and
add
clc
sbb
and
aad
lods
out
cmp
les
mov
movs
add
out
movs
sub
mov
pop
and
in
push
push
movs
inc
scas
(bad)
cmp
lds
jmp
jb
jns
leave
daa
mov
into
fidiv
sbb
mov
stos
jbe
cmp
cmp
aaa
aam
and
jns
aad
mov
jmp
outs
movs
cmp
xor
inc
cmc
aas
int
cmp
std
jae
sub
or
mov
fdivr
fcmovu
int3
add
and
inc
and
ja
pop
mov
js
jg
xor
push
icebp
push
sbb
xchg
(bad)
repz
add
loope
push
add
add
adc
int3
jle
out
mov
or
outs
inc
sub
imul
pop
inc
mov
ins
call
sub
mov
and
jbe
sbb
push
or
cli
cmc
cmp
bound
pop
mov
pop
pop
xor
jecxz
push
and
or
scas
test
mov
xor
pause
(bad)
(bad)
push
jmp
push
cmc
ds
sbb
push
enter
inc
cmp
ror
mov
or
dec
xchg
aad
mov
mov
fsubr
imul
cmp
out
loope
mov
int3
mov
pop
inc
mov
ror
or
sbb
mov
xor
mov
dec
jg
daa
rcr
leave
int
push
add
fistp
add
mov
lods
(bad)
out
jne
test
and
sahf
test
and
pushf
hlt
and
in
iret
pop
daa
lock
push
push
fsub
cmp
fmul
jl
fwait
mov
inc
or
ins
(bad)
lock
loope
shl
movs
xchg
div
dec
jecxz
mov
sbb
out
retf
mov
xor
(bad)
out
(bad)
xor
test
pop
rcr
xor
lock
(bad)
push
inc
mov
shr
enter
dec
adc
(bad)
jnp
push
push
clc
repnz
add
cld
sub
in
or
push
xor
jmp
sub
push
ins
mov
div
out
dec
mov
ret
test
push
not
push
mov
adc
xchg
mov
push
mov
lds
(bad)
cld
xchg
and
dec
cmp
jge
mov
pusha
stos
inc
ins
xor
loope
sbb
ret
pop
adc
dec
xor
inc
(bad)
cli
loop
loopne
inc
int3
xchg
ss
and
xor
dec
ret
inc
mov
or
xor
push
stos
ins
inc
inc
cmp
icebp
mov
xor
push
sti
das
mov
mov
sahf
xor
pop
lea
aad
out
adc
push
jp
push
fs
(bad)
mov
loope
cli
dec
push
pop
call
shr
xor
or
sahf
pushf
or
mov
cmp
xor
sub
jg
pop
es
push
jno
js
sub
push
cmc
push
pop
cmp
jbe
loope
cmp
add
loope
jno
outs
cli
sbb
test
ret
push
sub
lds
popf
mov
sub
jnp
pop
jecxz
lea
mov
cld
inc
push
ds
outs
adc
repnz
or
ss
js
pop
imul
and
cmps
(bad)
cmp
inc
push
pop
scas
mov
pop
xlat
ret
fdivr
mov
dec
iret
xor
and
in
retf
xchg
(bad)
ins
mov
dec
rcl
xchg
cmps
cmp
pusha
push
daa
popa
adc
adc
cmp
rcr
lock
sbb
fstp
(bad)
mov
push
icebp
jl
lds
jp
pop
mov
pop
cdq
ss
int
sbb
or
pop
dec
lahf
xchg
cmps
cmp
addr16
sti
(bad)
into
lods
int3
mov
dec
adc
mov
pushf
mov
aas
loope
adc
aam
int
dec
loope
cdq
std
cmp
push
nop
sub
jg
dec
or
out
call
sbb
das
xchg
adc
or
inc
int
ins
add
mov
push
or
pop
mov
cmp
sbb
dec
inc
sub
les
xor
lds
cmp
jmp
gs
iret
int
and
ret
and
loope
mov
cli
iret
div
paddusw
sahf
leave
mov
aam
(bad)
dec
cmps
jmp
cmps
mov
in
xchg
adc
push
cmp
scas
shl
in
clc
fidivr
gs
test
jb
mov
in
xor
cmp
dec
out
inc
push
fwait
ins
test
add
xchg
loope
sub
mov
add
jle
xchg
movs
or
jp
retf
jbe
pop
into
cmp
fnsave
push
pop
pop
repnz
xor
lods
aaa
pop
dec
cmp
or
xor
jbe
add
test
bound
sbb
std
mov
xlat
mov
sub
int3
mov
xchg
scas
fnsave
push
call
jl
mov
lods
pop
into
push
jl
out
adc
jne
pop
lods
push
fcmovne
(bad)
cdq
aaa
cdq
adc
mov
dec
add
pop
add
(bad)
cmp
loopne
sub
xor
(bad)
mov
ret
mov
pop
lock
jle
(bad)
push
cmp
mov
or
and
in
mov
adc
std
(bad)
pop
mov
and
(bad)
xchg
xor
cmps
xor
add
fsub
aas
jne
imul
add
ftst
lods
das
sbb
out
cmps
adc
and
pop
mov
add
mov
jg
cmc
(bad)
imul
loop
enter
ja
add
fs
aaa
aaa
and
scas
add
inc
pushf
mov
scas
and
imul
and
int3
inc
leave
inc
scas
imul
test
leave
jb
in
mov
fimul
xor
or
ret
or
iret
mov
loop
loopne
into
dec
jbe
push
in
pop
add
add
mov
stos
bnd
jne
sub
push
xor
enter
shl
xchg
pushf
movs
shl
int3
cli
and
dec
sbb
mov
push
sar
retf
shl
and
icebp
rol
(bad)
frstor
(bad)
jle
movs
repz
push
icebp
test
loopne
jge
rcl
mov
int3
cmps
mov
stc
cmp
pop
int
and
(bad)
mov
shl
sbb
stos
(bad)
jmp
xchg
or
xor
cmp
mov
cmp
pop
rsqrtps
retf
in
mov
imul
adc
push
mov
(bad)
mov
pop
out
out
sub
jge
mov
xor
sub
test
js
add
pushf
or
ja
stos
dec
(bad)
fisubr
jecxz
retf
loop
pop
sub
push
mov
in
in
mov
retf
lock
(bad)
sbb
pop
rol
scas
add
cdq
cmc
outs
or
into
retf
xchg
retf
dec
ins
cld
jp
add
jo
sti
test
gs
call
sub
cmp
dec
pushf
adc
dec
add
repz
pop
sub
mov
xchg
xlat
cmp
sub
outs
fs
mov
lds
cmp
fiadd
ret
push
mov
test
push
mov
shl
jp
int
push
add
ds
sti
cmps
aad
pushf
sub
sub
in
push
(bad)
aaa
loope
or
jb
outs
mov
or
movs
mov
call
or
and
dec
ins
icebp
(bad)
mov
retf
adc
mov
dec
nop
clc
mov
inc
jmp
lods
add
jae
mov
jge
pop
sub
cmp
adc
cmp
jp
leave
test
and
pop
push
fcomp
call
mov
ret
(bad)
xchg
sahf
(bad)
xchg
or
dec
aam
inc
xor
push
cmp
xor
inc
lds
dec
or
fisttp
cld
in
mov
push
ficom
mov
retf
retf
cmp
fldcw
ja
mov
scas
or
shl
and
lods
adc
jnp
and
and
cmp
adc
ret
(bad)
sub
je
mov
sub
cmp
hlt
rcr
pushf
sbb
jno
sub
call
ins
test
out
mov
adc
popf
jo
jno
jb
xchg
gs
dec
sub
jmp
lods
jp
cmc
xor
sti
gs
rcl
pop
fs
daa
dec
out
and
inc
syscall
and
xchg
fcom
jo
push
mov
cmp
xchg
mov
nop
dec
nop
repnz
jb
push
adc
jecxz
sbb
scas
mov
je
cmp
ficom
mov
fcom
or
repz
mov
sbb
stos
rol
mov
test
out
push
mov
xchg
das
pop
sub
stos
xchg
inc
mov
jmp
mov
scas
dec
jne
jbe
int3
dec
and
dec
pop
push
imul
mov
or
test
and
mov
es
into
call
jne
push
fldcw
and
repz
aam
scas
dec
mov
call
mov
loop
xchg
call
pop
push
sahf
and
or
jns
mov
pusha
adc
pushf
inc
dec
add
mov
sbb
cmp
out
sbb
inc
pop
jge
push
test
xchg
jl
retf
push
les
ror
dec
xchg
call
mov
adc
ror
iret
lds
xor
or
adc
(bad)
inc
mov
gs
or
(bad)
and
sub
pushf
shr
jnp
xor
cbw
xchg
inc
mov
test
cmc
or
push
int3
cmp
pushf
lock
call
fld
out
inc
mov
das
xchg
movs
and
or
stos
sbb
in
mov
push
popf
aad
jns
clc
jnp
cmp
loop
mov
pop
jmp
test
test
jne
fdiv
push
fiadd
dec
cmp
jmp
pop
data16
fnstenv
add
push
sub
jno
cmp
inc
call
push
dec
imul
mov
clc
or
call
dec
pop
ins
xchg
adc
ins
frstor
test
int
jecxz
sahf
xchg
mov
repnz
adc
xor
repz
push
xor
es
mov
and
mov
adc
dec
xor
xchg
retf
mov
arpl
jp
jnp
lahf
(bad)
or
in
(bad)
call
add
pop
out
and
out
loope
sti
jb
(bad)
pop
pop
out
pop
daa
out
xchg
dec
sar
xor
jp
fnsave
adc
jae
mov
ss
add
push
mov
out
xchg
and
sbb
lea
sahf
sub
out
sbb
inc
dec
cmp
int
inc
retf
mov
cmp
xchg
ds
(bad)
and
push
mov
cmp
repz
mov
dec
out
outs
fild
sahf
ins
jo
test
and
add
lea
iret
push
cld
xchg
adc
jns
daa
fist
outs
std
mov
mov
mov
push
push
cmp
out
mov
inc
jl
jp
loopne
enter
cmp
push
xor
inc
enter
repnz
(bad)
mov
sub
xchg
xchg
sbb
dec
adc
mov
in
out
repnz
xchg
inc
xlat
fucomip
xor
xor
sub
les
test
cdq
xchg
je
data16
es
popf
int3
add
push
sbb
scas
int
mov
mov
mov
sti
and
adc
in
mov
xchg
pushf
jp
test
pop
jmp
rcr
mov
lods
ret
ret
adc
xlat
or
data16
dec
(bad)
ja
fs
dec
and
mov
(bad)
aas
inc
push
push
dec
mov
pop
pop
rol
or
inc
std
ror
jmp
inc
ja
outs
adc
paddsb
daa
lock
pop
pop
xchg
(bad)
sbb
in
imul
jo
push
adc
xor
add
xchg
pop
add
jmp
inc
mov
out
mov
js
imul
adc
pop
mov
sbb
push
ss
push
dec
jns
adc
add
imul
pop
pop
lahf
call
sbb
cld
inc
mov
and
push
outs
popf
(bad)
into
cmp
mov
sbb
call
(bad)
cmp
rcr
ins
popa
sub
(bad)
jl
or
mov
pop
push
sbb
sub
loop
mov
xchg
mov
mov
mov
mov
(bad)
pusha
or
mov
fisttp
fild
in
aaa
imul
mov
and
popa
xor
cmps
sub
cmp
adc
ret
push
ins
cmp
dec
dec
into
data16
xchg
fsubr
push
cli
mov
not
int3
pop
cmp
inc
xchg
fcomp
xor
sub
push
stc
cmps
arpl
rcl
pop
dec
mov
ret
cmp
mov
add
jp
xchg
and
ror
pop
imul
loop
cmp
ficom
ss
push
push
push
int
push
and
push
adc
repz
out
std
mov
mov
push
xchg
pop
out
mov
into
call
xor
add
push
pop
out
imul
jo
sub
pop
cdq
(bad)
mov
test
sub
mul
xlat
in
mov
cmp
xor
pop
mov
js
sar
xor
cmp
mov
aad
and
inc
(bad)
xor
fldenv
xchg
ds
jg
jecxz
or
aaa
jne
hlt
pop
sub
push
js
jns
int3
cdq
mov
(bad)
pop
lods
stc
xchg
mov
add
adc
sub
stos
xlat
and
sbb
loope
and
leave
inc
movs
fst
div
mov
push
jno
mov
pop
movs
jp
dec
lods
xchg
cmc
retf
dec
ror
icebp
imul
ins
mov
or
mov
or
es
ret
call
inc
ss
mov
jecxz
stos
pop
mov
cdq
inc
or
add
sbb
jmp
jo
into
jno
cs
je
nop
pop
push
xor
dec
xor
mov
int
gs
dec
mov
pop
jl
sbb
push
(bad)
xor
xlat
pop
xchg
popa
push
fist
aaa
mov
mov
mov
mov
aad
ror
pop
fdiv
fdivr
add
int3
loop
loop
adc
sbb
or
pop
pop
add
jo
gs
pop
mov
pop
cs
(bad)
stc
loop
hlt
call
call
xchg
inc
push
cmp
inc
movs
xor
push
push
or
sbb
sbb
mov
stc
jo
sahf
push
cmp
sbb
(bad)
dec
and
dec
mov
mov
sub
mov
imul
sar
daa
push
mov
out
lods
pop
add
mov
int
xchg
nop
xor
imul
mov
je
repz
imul
pop
stc
retf
test
dec
imul
sbb
mov
mov
jg
cmp
pushf
mov
mov
mov
mov
jo
popf
cmps
test
cmp
pop
in
adc
cmp
dec
nop
test
fstp
in
inc
jp
ss
test
nop
and
adc
std
inc
inc
loope
bt
mov
sub
movs
push
mov
or
add
jo
add
pop
xchg
sub
ror
pop
es
test
push
pop
push
or
or
adc
test
rcr
and
mov
pop
add
out
aaa
inc
xor
inc
dec
xor
mov
mov
or
xchg
mov
rol
sbb
xchg
pop
fcomip
mov
into
inc
fistp
xor
mov
sbb
stc
imul
ins
inc
mov
addr16
in
sbb
add
xor
clc
or
js
dec
add
retf
push
push
inc
cwde
pop
into
mov
xor
into
mov
push
cmp
test
cs
test
pop
cmp
xchg
fwait
dec
push
popa
cwde
sbb
xchg
xchg
cmp
jbe
sahf
lock
in
in
mov
ret
mov
dec
xchg
int3
mov
xor
adc
mov
pop
call
retf
jl
xchg
dec
mov
jbe
les
push
mov
mov
xchg
icebp
jecxz
scas
inc
shl
std
and
sbb
in
out
jmp
dec
bound
retf
leave
mov
mov
jae
jecxz
call
movs
sub
mov
out
retf
fxch
mov
cmp
mov
ss
div
pop
push
sub
mov
mov
addr16
dec
adc
xor
idiv
add
adc
mov
loopne
dec
es
mov
popa
test
pusha
aam
jns
mov
in
xor
rcr
(bad)
mov
test
(bad)
arpl
lds
add
mov
(bad)
cmp
mul
movs
sbb
cmp
push
mov
nop
mov
xor
cmp
dec
test
add
xchg
sub
mov
arpl
call
fwait
mov
jg
mov
and
es
test
add
mov
(bad)
or
mov
mov
stos
imul
jnp
outs
data16
jg
dec
sub
add
jge
add
jb
cmps
leave
pusha
ret
push
ror
jl
or
push
gs
movs
xlat
mov
fst
shl
cmps
and
pop
cmps
scas
xchg
mov
int
mov
mov
pusha
mov
js
mov
adc
inc
ror
pop
stos
inc
repnz
out
dec
(bad)
loopne
cli
mov
lock
and
or
add
stos
dec
add
xchg
dec
pushf
enter
and
add
xor
jecxz
nop
daa
dec
cmp
push
pushf
scas
mov
xor
fist
fldenv
jmp
das
into
xlat
aas
aam
pop
sbb
add
cmp
push
cs
imul
retf
in
fmul
gs
addr16
mov
mov
add
ja
cmp
mov
movs
cmp
stos
dec
in
pop
sub
jno
pusha
sbb
or
pop
adc
fld
mov
aas
sbb
test
pop
test
fs
xor
mov
push
js
xchg
dec
push
push
dec
adc
and
jge
adc
popf
inc
sbb
dec
in
(bad)
or
cmp
in
pop
jo
cmp
movs
push
hlt
nop
es
retf
sub
cmps
mov
movs
sbb
mov
push
fmul
mov
adc
fcmovbe
cmp
jo
adc
inc
aam
xor
xor
mov
adc
push
shl
(bad)
mov
and
push
mov
xchg
jmp
cmp
dec
int3
movs
ins
cmp
sbb
and
aad
arpl
xor
xor
mov
sub
jp
or
sahf
dec
les
push
addr16
add
pop
movs
dec
outs
fsubp
mov
push
mov
(bad)
mov
adc
pop
xor
in
in
inc
adc
xchg
das
lds
aad
repnz
neg
xor
pusha
sub
jb
mov
mov
mov
inc
mov
pop
jbe
inc
sub
sahf
pop
sbb
aaa
call
mov
xor
mov
loope
mov
mov
rcr
push
dec
pop
add
xor
pop
inc
dec
push
dec
inc
add
cmp
mov
inc
int
jmp
outs
push
dec
inc
xor
outs
dec
dec
out
addr16
jo
xchg
pop
cmovbe
movs
cmc
shr
mov
int3
pop
cmps
out
ds
(bad)
daa
mov
sbb
stos
or
and
fmul
je
dec
clc
mov
sbb
sub
cmp
sbb
mov
mov
fnsave
add
not
mov
inc
test
fmul
mov
lea
push
push
stos
aam
stc
popf
mov
into
icebp
outs
mov
sub
(bad)
xor
daa
inc
ror
out
jns
pop
sub
xor
fadd
popf
and
ret
jbe
(bad)
jbe
mov
sub
fild
clc
not
(bad)
sub
push
ins
(bad)
hlt
dec
enter
and
jns
dec
cmp
iret
arpl
rol
inc
push
jns
inc
push
dec
or
mov
hlt
mov
mov
sub
js
lock
xchg
and
pop
rol
push
daa
ins
ds
sbb
and
(bad)
fwait
add
mov
pushf
mov
jne
mov
in
push
and
clc
xchg
pop
xchg
or
pop
inc
mov
jmp
push
mov
jbe
add
adc
cmp
pop
popf
cmp
pop
cmp
mov
into
jnp
ss
jge
jmp
out
sahf
pop
mov
test
jno
outs
push
sti
add
mov
pusha
or
imul
fsub
sahf
or
add
dec
and
daa
repnz
sbb
inc
push
into
and
fld
fsub
arpl
push
xchg
test
xlat
mov
mov
cmc
add
dec
cmp
js
arpl
imul
movs
les
outs
xchg
test
mov
inc
xor
cld
jle
xchg
test
adc
mov
fwait
or
lods
cmp
sbb
dec
add
and
ins
aaa
daa
fstp
push
xchg
add
push
pop
fstp
cmp
enter
daa
jmp
test
(bad)
jge
fisttp
mov
in
cli
test
les
ss
dec
xchg
push
retf
stc
scas
ds
sahf
push
push
ret
icebp
mov
mov
ret
mov
mov
vpsraw
sbb
aam
cdq
jo
inc
or
adc
dec
and
lea
xlat
xor
add
adc
pop
add
aas
jl
mov
icebp
pop
ins
in
stc
xor
inc
or
xchg
jmp
jns
jp
(bad)
or
jb
cli
mov
nop
pop
jle
lods
imul
rep
ror
xor
jg
push
clc
arpl
adc
scas
pop
mov
cmp
sub
pushf
out
fist
jl
out
movs
(bad)
daa
out
cwde
sub
jg
call
or
das
ins
xchg
sub
(bad)
in
(bad)
iret
push
push
test
mov
xrelease
enter
add
pop
nop
adc
in
into
jp
adc
adc
xchg
dec
scas
cmp
cwde
lahf
lea
test
js
pop
fidiv
pop
jb
sbb
jl
test
(bad)
retf
sbb
int3
jbe
xchg
aas
rol
sar
loope
gs
sbb
push
mov
xchg
mov
stc
sub
sahf
cmp
mov
fs
repnz
xchg
mov
pop
push
movs
jns
and
mov
xor
int
cwde
cmp
or
call
test
popf
jo
call
sub
adc
movd
jne
or
dec
je
push
es
xchg
push
lock
add
jns
js
lea
(bad)
push
cmp
inc
out
pop
jmp
aas
retf
xchg
popf
jnp
movs
mov
pop
mov
ret
inc
js
inc
into
out
mov
xor
cmp
and
cdq
pop
mov
call
into
sahf
push
pop
call
push
push
(bad)
loopne
push
(bad)
jg
lock
ror
shr
jmp
jle
cmp
or
jno
(bad)
retf
iret
fs
adc
dec
push
xchg
test
cwde
inc
pusha
sub
loopne
in
arpl
mov
arpl
test
aas
jnp
xlat
(bad)
mov
xchg
test
loopne
xor
(bad)
jg
cmc
test
jp
into
adc
cmp
cwde
lahf
test
pop
mov
push
push
jb
pop
and
xlat
(bad)
sbb
sar
mov
aaa
inc
push
fld
std
cmp
(bad)
sahf
fsubr
pop
and
popf
daa
add
out
inc
pop
jbe
shl
bound
dec
pusha
retf
and
call
ret
mov
and
jo
and
aad
push
inc
into
and
xor
inc
mul
cmps
stos
fnsave
jle
pop
out
push
outs
into
sub
call
and
stos
add
dec
pop
xchg
dec
mov
mov
cmc
cmp
pop
leave
or
mov
mov
retf
enter
bound
call
push
mov
push
and
or
sub
movs
sbb
jge
ret
retf
mov
jle
adc
xor
pusha
add
adc
cdq
xor
fs
cs
ror
(bad)
scas
int
mov
mov
sbb
clc
cwde
rcr
xchg
xchg
push
outs
adc
mov
xor
or
std
out
enter
out
xor
dec
test
sub
addr16
ret
cmp
(bad)
arpl
push
mov
in
mov
lea
mov
fld
xor
sbb
xor
dec
push
pop
int3
jo
sub
sub
fbld
dec
pop
div
call
nop
(bad)
js
call
dec
sub
cmps
inc
jbe
xor
pop
cwde
sub
dec
js
(bad)
dec
xchg
jne
repnz
pop
sbb
and
rol
and
nop
test
or
push
cmp
hlt
sub
aam
sbb
sub
and
pop
adc
mov
fidivr
std
in
mov
dec
cmp
mov
lods
xchg
push
pop
sub
pop
shr
xchg
pop
das
out
mov
push
add
pop
and
cmc
push
movs
cs
popf
arpl
cmp
imul
jmp
ins
cmc
push
in
iret
fdiv
xchg
dec
lock
add
lock
mov
lods
sub
xchg
dec
adc
or
push
jne
sub
popf
fsubr
xor
inc
mov
or
int3
adc
outs
xchg
int3
pop
into
fs
(bad)
repz
mov
in
arpl
adc
add
das
dec
or
cmp
xchg
mov
jmp
adc
ins
or
jecxz
pop
movs
jl
or
fisubr
retf
push
and
adc
rol
repz
sub
sub
mov
call
test
pop
cmc
ret
popa
sub
shr
cmp
icebp
mov
ret
jge
dec
outs
std
fidivr
(bad)
mov
cmps
and
in
in
and
mov
mov
cmp
(bad)
jmp
push
ret
push
inc
sub
adc
retf
shl
fst
mov
jo
add
jno
dec
push
fist
cmp
sub
iret
pop
mov
or
xchg
jb
mov
shl
pop
mov
mov
adc
idiv
mov
jge
xchg
sbb
enter
aaa
sub
fs
test
js
adc
loop
or
rcl
lods
rol
push
icebp
or
lahf
pop
xchg
jg
outs
enter
aam
jl
in
sbb
loope
fwait
jle
mov
pop
sbb
xor
jns
mov
mov
mov
in
shr
cmp
movs
push
jl
push
jecxz
cmp
sub
inc
stos
sbb
(bad)
cs
mov
popa
jp
lods
movs
push
xchg
movs
pop
push
jno
xchg
dec
and
arpl
pop
xchg
pop
fisubr
cmp
jle
sub
mov
loope
mov
mov
daa
pop
xchg
pop
cdq
ins
xor
pop
(bad)
or
dec
adc
rcl
pop
push
rcr
test
mov
mov
outs
xchg
push
shr
mov
dec
das
retf
cld
dec
dec
sbb
repnz
sbb
and
dec
ins
outs
dec
into
out
sub
jnp
push
push
test
mov
push
dec
push
mov
jno
push
sub
ja
cmp
xchg
ret
pop
lock
add
cwde
lods
jge
add
(bad)
shl
inc
cld
pop
add
mov
lods
test
sub
push
adc
mov
mov
fisubr
mov
js
fwait
sub
sbb
repz
jae
mov
fcomp
out
cmp
mov
cmp
dec
mov
jecxz
adc
pop
popa
sub
pop
sbb
std
loope
mov
push
push
push
stos
fs
iret
xor
mov
and
cmc
jle
das
push
xchg
xor
push
xchg
mov
mov
mov
add
mov
add
shl
xor
dec
xchg
out
inc
stos
gs
cmp
cmovo
sbb
lods
cli
sbb
or
xor
sar
xor
add
lock
lods
in
call
(bad)
aam
jmp
mov
loopne
pop
int3
mov
outs
retf
xor
adc
push
mov
test
daa
sbb
hlt
gs
pop
repz
xchg
xchg
out
jmp
daa
fild
xchg
rcr
mov
pop
shr
xchg
fs
mov
lock
cmp
mov
test
pushf
into
clc
pop
mov
dec
jns
test
mov
mov
push
iret
dec
retf
or
loopne
imul
mov
call
sbb
mov
out
add
pop
repz
pop
jg
adc
sahf
cwde
stc
sbb
loope
sar
loope
mov
repz
mov
inc
inc
pop
mov
or
and
jnp
or
pop
hlt
and
js
push
bound
push
dec
shl
cmc
outs
mov
popa
fbld
push
(bad)
fld
call
clc
sbb
or
jno
sahf
fdivr
cmp
(bad)
push
sub
xchg
dec
jl
xor
icebp
hlt
out
dec
push
and
push
and
add
movs
xor
lea
add
cmp
mov
in
dec
out
mov
dec
dec
shl
hlt
mov
or
in
xor
mov
mov
and
test
mov
push
shl
cmc
outs
loopne
popf
int3
adc
push
mov
jae
pop
push
mov
sbb
(bad)
rcl
xlat
cmp
mov
(bad)
dec
mov
fild
loop
sbb
mov
inc
ja
push
adc
cmp
sbb
enter
jbe
std
retf
mov
icebp
aas
cwde
push
add
in
mov
mov
popf
cli
xor
jnp
push
and
dec
fwait
imul
imul
jge
jb
pusha
jbe
jbe
or
adc
jno
adc
and
shr
ret
pop
pop
sub
push
sbb
ret
push
ds
inc
adc
xchg
aaa
fisub
mov
mov
xchg
mov
adc
(bad)
mov
and
loope
sub
xchg
fs
jae
push
xor
in
adc
ror
out
add
jns
xchg
test
cmps
mov
fmul
enter
and
inc
fwait
movs
pop
jbe
add
jno
pop
int3
nop
mov
dec
inc
pushf
pop
push
xchg
jmp
or
push
mov
sti
ins
mov
add
xchg
je
sbb
jb
sbb
adc
aad
ss
hlt
jbe
dec
clc
popa
(bad)
xchg
dec
ds
jl
inc
xor
sub
bound
add
retf
mov
ds
hlt
leave
adc
cmp
out
xchg
es
dec
out
xlat
xchg
(bad)
outs
int
not
retf
mov
mov
jns
adc
mov
cdq
lahf
(bad)
out
jg
imul
pop
mov
push
push
sub
fs
mov
fstp
inc
or
jge
push
xor
add
outs
xchg
bound
imul
sti
aad
adc
push
dec
cmp
jb
shl
(bad)
jmp
adc
in
ret
fs
ins
sub
(bad)
push
lods
test
aad
call
(bad)
xchg
sub
in
daa
or
test
push
shr
out
shr
shl
mov
pop
inc
mov
out
je
xchg
mov
fwait
xor
and
jnp
bound
push
push
pop
mov
repnz
pop
sti
call
ret
inc
xchg
sbb
dec
xor
push
push
pop
xchg
scas
or
mov
mov
outs
scas
or
xor
(bad)
xor
push
adc
dec
sbb
and
add
adc
sub
xchg
dec
pop
sahf
mov
out
pop
xor
scas
imul
push
in
or
cmp
mov
cmp
cmps
leave
sub
fsub
add
dec
cmps
mul
(bad)
outs
push
inc
in
mov
ds
cmp
jecxz
mov
mov
xor
dec
jle
fisttp
jg
popf
xchg
inc
movs
jae
pop
cmc
add
(bad)
add
aaa
jb
jne
xchg
dec
or
jae
outs
in
int
hlt
loop
mov
mov
cdq
pop
(bad)
jns
sub
movs
(bad)
cwde
push
mov
aas
adc
fcomp
movs
fs
dec
(bad)
aaa
pop
inc
(bad)
arpl
test
cwde
div
or
push
jne
jb
mov
mov
mov
cmp
mov
or
jns
sub
pushf
xor
fs
xchg
dec
push
mov
push
mov
aad
xchg
mov
and
mov
dec
iret
jp
pop
pop
movs
mov
jo
scas
mov
dec
push
scas
in
out
out
stos
sbb
loope
rcl
xor
daa
jmp
mov
jecxz
jne
ret
cmps
sahf
icebp
adc
lods
mov
mov
push
cdq
ror
dec
stc
outs
mov
push
ins
aas
les
push
aam
(bad)
push
test
mov
das
inc
ss
lahf
mov
enter
and
push
movs
lahf
dec
(bad)
pop
inc
mov
cmps
imul
sub
lods
mov
add
cli
call
mov
repz
retf
mov
in
cli
xchg
jle
in
adc
add
or
and
mov
jle
mov
jge
cmp
rcr
push
and
and
clc
dec
xchg
push
xor
in
jge
jns
dec
mov
stos
popa
ss
inc
xchg
loope
sbb
adc
stos
xchg
jmp
push
mov
fisubr
mov
imul
je
pop
repz
sub
adc
pop
cmp
and
fisub
(bad)
and
je
stos
cmps
inc
mov
sub
sbb
popf
inc
rcl
jb
cli
outs
mov
mov
jmp
lds
lock
(bad)
out
ret
out
shr
out
or
fld
dec
sub
push
pop
cmp
aad
test
cdq
xlat
jbe
das
jns
loope
push
rol
leave
cli
xchg
adc
push
loope
movs
in
fiadd
inc
cwde
push
push
nop
lods
out
test
pop
mov
mov
out
dec
repnz
sub
mov
out
mov
imul
scas
rcr
cmp
int3
daa
in
int3
dec
cmc
xlat
mov
sbb
jle
sbb
mov
push
adc
xlat
xchg
fisubr
in
pushf
inc
pop
push
dec
ja
retf
dec
ret
ja
mov
ins
sahf
jle
push
sbb
mov
sbb
xor
xchg
clc
cmp
or
clc
ds
aas
push
icebp
test
inc
movs
mov
cmp
enter
cmp
stc
jmp
dec
daa
test
mov
sub
sub
push
ficom
mov
lds
pop
mov
adc
sar
stc
push
push
cmp
adc
mov
add
enter
fwait
test
icebp
add
and
push
or
push
push
test
mov
pushf
ret
add
and
dec
adc
(bad)
xchg
xor
arpl
cmp
mov
push
push
call
xchg
and
cdq
ja
mov
pop
retf
mov
out
loope
retf
mov
pop
popa
jp
push
repz
loope
adc
mov
nop
clc
(bad)
ja
add
xor
xchg
mov
mov
mov
loope
jg
jbe
fbld
pop
jne
pop
pop
mov
fcmovb
add
and
xor
cmp
mov
jp
jae
sbb
xor
(bad)
xchg
sbb
jmp
mov
ret
add
mov
mov
imul
call
pop
adc
int
xor
xchg
icebp
pop
mov
rcr
ret
retf
jae
or
xchg
test
pop
dec
xchg
xor
mov
inc
adc
hlt
dec
test
dec
mov
push
jecxz
pop
ret
rol
jbe
or
cs
xchg
mov
mov
call
out
jle
retf
xor
cmp
cwde
dec
jp
push
ins
cmp
mov
scas
shr
lods
pushf
aaa
dec
fisubr
mov
and
jl
in
sbb
xchg
popa
xor
(bad)
jno
jmp
fidivr
push
dec
fs
mov
add
mov
int3
push
jg
pop
dec
jecxz
push
icebp
ins
lahf
ja
lods
(bad)
lea
dec
push
sbb
inc
mov
and
xchg
aam
xchg
(bad)
dec
aas
loopne
pop
dec
arpl
jae
lock
call
or
xor
iret
and
fld
sar
mov
sub
add
xchg
dec
jmp
jmp
(bad)
jecxz
pop
fstp
scas
xor
in
xchg
rol
cwde
js
inc
jge
icebp
pop
jmp
cs
retf
repz
pop
ss
xchg
aas
xor
dec
ret
dec
rcr
xor
jge
fisubr
xchg
cmp
lods
cmp
adc
out
mov
mov
pop
sti
inc
(bad)
out
sbb
fild
lds
adc
sbb
jno
cld
lea
lods
and
push
psubusw
mov
shr
ds
and
mov
xor
jbe
cmp
shr
mov
es
sbb
movs
dec
fs
dec
into
sbb
ret
hlt
xor
push
cmps
ja
mov
push
hlt
dec
(bad)
sub
pop
test
pop
mwait
cmp
cmc
push
jecxz
add
inc
cmps
mov
adc
mov
in
ja
call
cmps
jbe
xchg
repz
pop
shl
bound
test
mov
sbb
shr
adc
stos
sub
and
xor
inc
icebp
ins
movs
loope
mov
stc
push
(bad)
sbb
sub
shr
addr16
adc
fs
pop
repz
sbb
cmp
jb
or
pop
call
mov
mov
iret
mov
inc
adc
cld
sbb
xor
outs
lock
push
shr
fdiv
mov
lock
mov
mov
lods
fmul
test
data16
gs
aaa
inc
not
imul
sahf
rcl
mov
aad
repz
sbb
sub
clc
scas
dec
bound
mov
test
fistp
(bad)
dec
je
fisttp
stc
add
sub
push
mov
push
arpl
push
adc
push
mov
jmp
(bad)
out
in
(bad)
rol
not
cmc
adc
mov
mov
jg
pop
jo
mov
and
and
jmp
ins
sbb
(bad)
push
jmp
(bad)
sub
mov
or
add
inc
scas
popa
out
xor
push
push
add
(bad)
lea
es
out
or
dec
lahf
mov
push
inc
neg
das
mov
sahf
out
mov
call
jecxz
pop
in
in
dec
mov
sahf
push
(bad)
xchg
inc
ss
mov
jle
xchg
loopne
add
ins
xchg
dec
jae
xor
xor
sahf
bound
(bad)
sub
push
in
je
mov
or
cmc
ja
pop
push
das
or
leave
jae
fiadd
ret
dec
mov
dec
sti
lods
pop
jae
test
mov
mov
jp
mov
iret
fld
xchg
ins
pop
xor
and
and
adc
movs
popf
xchg
fwait
push
(bad)
jg
push
pop
push
mov
stc
cdq
push
push
jl
or
jno
add
aad
cmps
xchg
xchg
rcl
pop
sub
xor
and
push
out
push
(bad)
(bad)
jne
jmp
or
shr
int
sbb
mov
fidiv
mov
fmul
nop
inc
inc
xchg
cwde
cmp
lods
xor
jne
rcl
and
cmps
jns
xlat
xor
(bad)
ror
daa
sub
sbb
mov
stos
xor
es
sub
xchg
not
sbb
or
data16
jge
jno
cs
(bad)
rcl
push
mov
pop
inc
sar
push
out
and
iret
jns
jo
int3
mov
test
inc
dec
push
setb
(bad)
dec
and
push
mov
xchg
scas
cwde
pop
mov
popf
retf
jmp
add
fdivrp
popf
fisub
pop
mov
mov
jl
daa
inc
cs
call
xor
imul
jmp
(bad)
neg
fcomip
dec
mov
xchg
rcl
fadd
fsub
rcl
xor
loop
cld
xlat
jae
daa
pop
leave
jp
xchg
les
pop
xor
stos
mov
retf
cli
sub
inc
mov
cmps
jp
inc
jne
movs
push
retf
enter
hlt
int3
(bad)
inc
call
sti
mov
leave
mov
retf
mov
jmp
mov
popa
fsub
add
lea
xlat
(bad)
(bad)
push
sar
fs
popf
icebp
outs
mov
rcl
sub
aaa
fcomp
or
loopne
adc
jns
rcr
repnz
dec
hlt
jge
push
mov
lds
arpl
sbb
jnp
add
jne
mov
scas
xchg
sbb
mov
adc
push
cmp
scas
arpl
popf
sbb
mov
call
cmp
je
pop
mov
ins
cmp
jmp
ds
xchg
sub
add
xlat
or
shr
loop
shl
or
aaa
push
in
retf
or
mov
xor
mov
mov
ins
(bad)
xchg
and
xchg
sbb
fcomp
xor
(bad)
fdivr
jae
push
out
leave
adc
fdivrp
sbb
inc
loopne
push
xchg
pop
inc
push
pop
or
cld
cdq
push
sbb
pusha
push
and
push
add
pop
cdq
dec
fild
clc
jno
pop
call
pop
pop
push
stos
push
jmp
hlt
add
add
clc
push
movs
mov
ja
cwde
iret
inc
sbb
cdq
loopne
dec
inc
mov
pop
stos
ret
sub
sbb
in
fsub
xchg
aad
stos
jp
mov
add
ja
sar
js
mov
(bad)
adc
jp
fcomp
and
push
loopne
jae
add
imul
int
or
in
xchg
test
cmp
in
add
xchg
(bad)
ret
daa
push
jnp
mov
mov
pushf
fldenv
cwde
mov
int3
out
movs
das
mov
lods
pusha
hlt
fmul
jmp
inc
inc
mov
daa
ret
mov
loopne
cmps
push
lods
and
mov
shl
jmp
inc
jae
fst
ss
imul
mov
std
xchg
int3
ins
leave
pop
scas
daa
push
mov
mov
cmc
adc
dec
es
cmp
jg
inc
pop
mov
retf
and
xor
cmp
js
in
stos
loop
out
xchg
xchg
jmp
aam
cmps
lock
shl
inc
mov
out
inc
sub
inc
fdiv
push
mov
or
outs
fst
or
lods
movs
mov
mov
repz
sbb
imul
push
gs
int
mov
xor
rcr
and
push
imul
adc
xor
add
fld
xor
lods
mov
repnz
add
pop
sub
push
imul
dec
mov
pushf
cwde
pop
mov
pop
repnz
jg
dec
nop
and
pop
sbb
(bad)
sub
retf
out
pop
pop
mov
sbb
pop
mov
jmp
xor
sub
js
out
xor
add
test
inc
test
mov
stos
and
pop
mov
ror
jo
inc
fisttp
add
ret
inc
push
add
mov
pop
les
inc
or
aad
icebp
adc
cmp
inc
je
sub
push
mov
sahf
cmp
outs
dec
mov
test
hlt
push
js
adc
mov
loop
add
cwde
test
mov
pop
and
push
add
adc
mov
cmps
dec
ins
popf
adc
mov
jno
sar
int3
or
(bad)
dec
shl
(bad)
mov
dec
daa
cmp
jge
push
or
jae
mov
pop
repnz
dec
stc
cld
outs
cmc
repnz
cmps
cmps
sbb
sub
ins
or
dec
jns
mov
cwde
inc
(bad)
sub
push
inc
lahf
sub
iret
arpl
xchg
mov
stos
add
inc
lea
sub
in
add
dec
cdq
loope
inc
icebp
push
sub
mov
and
cmp
adc
sub
adc
mov
ror
inc
sub
je
push
add
scas
xchg
dec
enter
aas
jle
push
mov
xor
mov
cmps
dec
pop
xor
clc
movs
(bad)
pop
fucomp
inc
ja
aam
lahf
les
xchg
sub
mov
push
mov
retf
lahf
push
stos
push
xor
fbstp
jecxz
das
pusha
stc
pop
jmp
pushf
dec
bound
mov
push
dec
xor
cmp
jo
(bad)
and
sbb
lahf
loopne
xor
mov
dec
mov
xor
out
fdiv
cmp
pushf
and
pop
mov
scas
push
fstp
adc
out
(bad)
shl
sub
xor
xchg
ret
xchg
adc
scas
lock
dec
cmp
mov
mov
lea
cmp
cs
mov
mov
call
adc
or
rol
fdiv
jmp
inc
lods
mov
sbb
pop
leave
arpl
dec
pop
mov
sbb
mov
dec
mov
mov
inc
inc
add
out
sbb
jg
addr16
jg
xchg
fld
fld
aad
ret
inc
test
sbb
and
and
sbb
mov
xlat
lds
test
mov
xor
xchg
test
aam
fnstcw
fldcw
mov
retf
push
lea
jp
mov
pop
jno
cmp
push
ss
int
in
jmp
dec
enter
jmp
mov
xor
or
cld
jge
cmp
jo
jae
xchg
ror
push
test
jl
push
ret
cdq
and
aas
stc
fldcw
fsub
xchg
jp
lods
sbb
sbb
out
push
push
or
jnp
add
sbb
movs
(bad)
adc
out
and
dec
icebp
leave
jge
sti
add
ror
cmp
jmp
nop
and
xchg
test
push
and
mov
les
ins
mov
(bad)
add
inc
jecxz
inc
push
out
jmp
idiv
ficom
xchg
mov
push
inc
jge
jecxz
jg
aad
je
popa
sub
sbb
js
inc
sbb
(bad)
ficom
sbb
jb
lock
dec
rcr
cs
adc
repnz
ds
fwait
xor
jle
outs
adc
mov
(bad)
mov
mov
cs
xlat
aaa
pop
sbb
dec
push
adc
ficom
repz
ficom
jnp
dec
mov
ror
mov
and
iret
sub
and
rol
ret
jg
jmp
in
mov
mov
inc
add
sbb
ror
imul
jl
jg
test
aam
inc
repnz
mov
xchg
sbb
cdq
test
xchg
retf
hlt
sub
cmp
pop
mov
stos
inc
cs
push
daa
dec
cli
jno
xor
(bad)
repnz
sti
sbb
sub
mov
sbb
mov
cmp
hlt
jp
imul
sar
adc
inc
std
adc
fisub
jge
dec
shl
mov
jae
and
push
xchg
leave
pop
fs
xchg
into
jge
cmp
inc
movs
and
xchg
push
mov
jne
pop
jp
iret
sbb
scas
cmp
push
xor
shl
pop
jg
aaa
loopne
sahf
cmps
and
and
pop
aas
mov
cmp
in
icebp
loope
shl
sbb
shl
mov
ror
mov
cmc
movs
sti
fnstenv
jo
inc
adc
jne
inc
imul
xchg
idiv
(bad)
popf
add
(bad)
in
mov
sbb
lods
mov
test
cmp
jg
repnz
mov
sbb
in
aas
icebp
inc
popf
fsub
jp
pusha
aaa
cmp
and
pop
mov
movs
lods
aad
adc
mov
stos
pop
cli
add
dec
mov
xchg
(bad)
mov
jb
loope
sbb
sub
push
retf
test
jp
cmc
dec
loop
out
push
lock
clc
cmp
pop
and
call
mov
leave
mov
mov
sbb
mov
(bad)
mov
fisttp
bound
sub
out
rcr
or
xchg
cmp
call
aaa
cwde
xchg
int
lods
cmp
sbb
pop
xchg
mov
repz
loopne
fimul
cmp
dec
mov
daa
cld
jno
sub
dec
pop
mov
sbb
cdq
jb
iret
ror
mov
in
add
jl
fbld
and
dec
cmps
mov
movs
mov
fcom
test
mov
push
shl
cwde
sbb
je
aam
and
sbb
cwde
inc
(bad)
jb
lock
pop
jle
lock
jnp
and
mov
sub
mov
int3
or
sbb
jecxz
call
fadd
and
mov
retf
fcmovbe
mov
pushf
(bad)
jo
shl
lock
cmp
jg
lods
jmp
arpl
or
sar
push
xor
stos
mov
notrack
add
sub
fstp
inc
pop
aad
leave
int
push
mov
addr16
ins
ins
ror
adc
xlat
or
adc
fwait
test
xchg
scas
sub
call
fsubr
ja
mov
lock
(bad)
mov
xlat
stos
daa
adc
(bad)
out
shr
xchg
iret
cmp
loopne
inc
and
xor
xor
push
xor
mov
leave
inc
sbb
mov
cmc
add
or
push
loope
sbb
inc
cmp
repz
adc
inc
adc
and
das
fs
adc
fwait
je
rep
xor
adc
add
adc
inc
stc
jge
mov
imul
mov
mov
xchg
xor
cmp
(bad)
mov
test
in
or
adc
inc
pop
pop
dec
test
iret
es
sub
or
ret
xor
pop
aaa
add
out
push
and
lahf
sub
in
dec
mov
push
lea
sbb
jne
adc
pop
pop
arpl
cmp
cs
xor
inc
sti
(bad)
sub
imul
jb
pop
lods
push
lahf
je
lahf
inc
call
lock
pop
mov
pop
jnp
adc
std
xchg
mov
repnz
retf
inc
pushw
ins
jae
jecxz
stc
add
mov
xor
and
adc
cwde
out
cmp
xlat
popa
cwde
push
js
mov
popa
test
leave
mov
dec
test
pop
add
retf
jnp
mov
add
cwde
xor
push
in
fdiv
mov
push
push
add
add
aad
cmp
into
dec
dec
jp
repnz
fisub
out
fcom
sahf
pop
ret
test
cmc
cmc
sar
fld
in
movs
xchg
dec
or
xchg
adc
mov
clc
push
(bad)
jecxz
or
(bad)
cmc
lock
in
xchg
jmp
mov
inc
xchg
sahf
xchg
repz
pop
add
inc
test
movs
xchg
jbe
push
jae
or
sbb
int
daa
pop
cmp
xchg
inc
mov
sbb
inc
addr16
dec
jns
faddp
pop
mov
sbb
add
out
ret
cmc
arpl
jmp
outs
inc
mov
xchg
aam
jmp
push
(bad)
sti
xor
cmp
test
leave
sub
nop
mov
cmp
hlt
imul
push
mov
add
push
rcl
sbb
mov
(bad)
xchg
jmp
dec
sub
fdiv
sub
loop
mov
mov
sar
push
add
adc
mov
loope
loop
push
sbb
or
add
adc
outs
push
ins
pop
movs
retf
or
cmp
int
mov
movs
mov
jge
or
xchg
sbb
test
lods
lods
fcomp
stos
xor
mov
mov
xor
mov
sub
js
jne
cmps
mov
cmp
sbb
loop
add
xor
add
inc
add
add
stos
mov
adc
mov
xchg
std
cmp
cmp
push
div
(bad)
mov
(bad)
popa
outs
clc
and
and
inc
mov
mov
jmp
clc
xor
shl
iret
and
xchg
add
cmp
(bad)
fidivr
jmp
iret
push
or
scas
adc
sti
pop
ja
dec
push
mov
or
pop
fisubr
jo
inc
inc
popa
(bad)
scas
out
cmp
(bad)
sub
dec
rol
mov
arpl
out
cld
inc
mov
stos
neg
mov
outs
out
mov
call
sbb
xor
pop
jg
dec
push
lods
fist
dec
cmps
add
and
lods
push
adc
dec
add
daa
cmp
and
fs
push
xchg
add
mov
cld
dec
jae
lea
mov
mov
cmp
scas
cwde
inc
add
inc
jne
out
call
mov
jl
jbe
movs
call
push
inc
mov
push
jp
mov
mov
sahf
push
and
inc
lods
dec
ret
shl
test
out
les
in
jae
js
inc
stos
jle
mov
and
mov
add
dec
test
sub
cmp
push
and
lods
in
cmp
jg
cmps
iret
add
dec
push
cmp
mov
cmps
push
jno
add
push
push
into
(bad)
push
int3
jge
push
stos
aas
cli
pop
push
sbb
int
jae
cmp
push
test
push
jno
push
les
stc
and
inc
and
mov
aam
fbld
clc
xchg
imul
mov
adc
or
jns
outs
xchg
xlat
(bad)
dec
pop
leave
in
sub
sti
lea
int
ds
mov
int3
lds
nop
mov
(bad)
mov
adc
out
test
(bad)
shl
cmp
and
ret
inc
fucom
sbb
lds
fisttp
inc
fmulp
add
(bad)
sub
pop
call
imul
mov
rcr
inc
test
repz
or
lock
cmps
mov
pop
cdq
add
add
movs
pop
hlt
xor
pop
xchg
movs
dec
gs
bound
retf
hlt
fimul
shl
jb
push
sbb
adc
sbb
push
dec
dec
idiv
push
sbb
popa
cmp
xchg
inc
jno
syscall
xor
mov
inc
xor
sub
cmp
cmc
dec
clc
(bad)
fild
shr
jne
in
sub
or
(bad)
xor
fadd
and
inc
push
sbb
ja
nop
mov
int3
xchg
pop
out
mov
loopne
neg
hlt
sbb
push
cwde
xor
push
iret
enter
stos
dec
addr16
div
dec
out
pop
outs
cmp
repz
xchg
lahf
cld
xor
in
hlt
mov
sub
inc
push
jmp
and
mov
or
sbb
fsub
xor
test
arpl
pusha
push
xor
test
mov
push
fucomip
jmp
icebp
fsub
xor
jmp
inc
enter
jp
add
stos
not
jns
sbb
mov
mov
out
adc
jg
fidiv
xchg
lds
push
pop
aad
jge
fimul
sbb
pop
xchg
adc
add
(bad)
mul
cmp
loop
call
popa
ds
int
push
repz
ret
add
adc
sbb
or
pop
test
adc
adc
dec
jle
lods
xchg
push
pop
mov
scas
cmp
shl
out
inc
or
mov
cld
jmp
out
bound
pop
(bad)
jns
mov
adc
xor
in
mov
pop
xchg
inc
sbb
imul
sbb
pushf
neg
mov
ds
xor
imul
clc
(bad)
xlat
fnsave
stos
inc
dec
ja
in
sub
out
fcomp
sbb
pusha
add
orps
daa
daa
jg
mov
mov
inc
jns
cwde
pusha
out
mov
je
paddq
cmp
mov
sbb
(bad)
int
loope
push
pop
jmp
inc
out
fsubr
mov
fild
pop
clc
ds
and
xlat
out
sbb
pop
fisubr
imul
adc
mov
out
shl
jno
sbb
adc
inc
xchg
jbe
into
popf
and
and
mov
xchg
adc
out
inc
lea
jnp
cli
xor
popf
cwde
loope
js
cmps
sahf
jl
clc
mov
loope
sub
inc
es
es
out
retf
ret
push
sbb
test
jnp
shl
push
jecxz
clc
(bad)
aas
mov
dec
cmp
and
repnz
or
pop
xchg
pop
pop
ins
dec
mov
add
or
loope
add
in
or
sahf
cdq
in
test
icebp
xorps
and
xor
std
ret
push
aam
mov
bound
push
sub
inc
outs
mov
mov
frstor
popa
int3
add
leave
sub
dec
std
sti
jp
dec
dec
pop
push
xchg
outs
imul
push
jle
aas
cmp
and
fbstp
adc
pop
sub
push
xchg
inc
popf
ja
dec
cmp
in
mov
loopne
add
movs
jmp
mov
dec
xor
shl
add
xchg
sbb
mov
jnp
sbb
sub
cmp
outs
dec
push
jmp
loopne
cli
sar
lods
ror
mov
call
adc
mov
xchg
jbe
push
sub
push
xchg
nop
mov
and
push
lds
cmp
dec
adc
stc
enter
ss
daa
out
mov
fbstp
out
inc
jl
cmp
scas
pop
or
pop
addr16
add
xchg
push
cmp
cmp
dec
sti
dec
push
or
dec
sbb
add
mov
test
aad
js
ficomp
fsub
cdq
adc
fstp
mov
fidiv
fisubr
mov
dec
push
jns
mov
mov
jbe
iret
es
cmovnp
sub
mov
movs
mov
jl
pop
add
pop
mov
sub
lea
lea
pop
adc
test
and
pop
das
xor
rcr
fbstp
repz
out
xchg
sbb
loopne
pop
retf
push
inc
adc
mov
les
and
cmp
jno
shl
inc
pop
mov
in
ret
inc
sti
or
repz
mov
shr
out
mov
and
(bad)
pop
mov
test
jo
mov
call
in
movs
stos
lds
jno
ins
cmp
lods
sbb
cwde
loop
mov
mov
sub
mov
jo
jmp
fsubr
mov
pop
cmc
jo
add
adc
loop
inc
mov
cmp
mov
mov
stos
mov
or
mov
jg
jle
and
outs
shl
clc
jg
pushf
test
push
int3
mov
xor
jmp
test
xor
jnp
out
mov
fwait
outs
dec
mov
stos
loope
inc
cmp
xchg
sbb
dec
aas
or
inc
mov
cwde
mov
movs
cmp
jmp
adc
and
jnp
push
fcomp
ins
sahf
ret
int3
dec
or
ins
iret
imul
mov
mov
and
mov
adc
cmps
add
mov
sti
cli
sbb
movs
(bad)
(bad)
std
and
sahf
dec
repz
out
sbb
and
aas
adc
pop
cmp
fcomp
retf
add
adc
pop
pop
ins
or
(bad)
(bad)
scas
pushf
or
adc
(bad)
fs
loope
js
jnp
xchg
sbb
mov
loope
cmp
je
pop
bound
loopne
loopne
sti
test
div
xchg
daa
outs
mov
adc
test
pop
sbb
out
sub
add
pop
iret
adc
nop
xor
dec
mov
sbb
mov
or
add
in
ja
sbb
retf
stos
jnp
or
rcr
mov
lods
push
jb
jns
dec
sbb
mov
xlat
and
mov
pop
lea
xchg
adc
sbb
push
sbb
out
fcmove
cld
dec
fcomi
cmp
jno
or
fadd
adc
repnz
mov
outs
jnp
add
lds
stc
outs
mov
int3
out
pop
lods
sub
or
fimul
stos
stc
dec
and
xor
pop
mov
add
mov
shl
sbb
into
xor
dec
repz
push
mov
mov
jne
pusha
les
inc
iret
push
push
arpl
pop
adc
cmp
add
in
icebp
mov
pop
les
aaa
push
(bad)
adc
or
or
stc
data16
dec
mov
xor
ds
inc
cmp
xchg
pusha
inc
add
sub
mov
aam
bound
mov
rcr
cmps
cmp
(bad)
push
(bad)
mov
lea
(bad)
je
lods
mov
add
stos
mov
adc
mov
iret
sub
jnp
sub
mov
push
jl
xchg
mov
jge
out
xlat
add
daa
sbb
xor
jae
xlat
cmp
pushf
sbb
pop
pop
adc
adc
lods
aaa
inc
mov
call
or
sti
repz
jge
loope
inc
push
rcl
fisttp
jno
jmp
add
lds
retf
pop
pop
xor
cld
addr16
outs
pusha
cmp
xor
push
or
xchg
push
push
scas
mov
idiv
imul
rcr
push
test
and
xchg
sbb
jo
pop
test
pop
stos
lahf
(bad)
ja
mov
(bad)
pand
and
arpl
nop
neg
add
xor
sbb
lar
adc
mov
adc
not
mov
and
popa
add
fdiv
out
push
dec
push
jmp
xor
dec
ds
xor
(bad)
leave
mov
mov
ins
pushf
pop
not
cmp
xor
jne
xchg
neg
cmps
(bad)
ret
rol
pop
mov
xchg
stos
xchg
js
xchg
mov
xchg
ds
xor
test
out
or
cli
std
dec
inc
add
mov
sbb
mov
idiv
(bad)
cmc
mov
mov
cmps
in
xchg
cdq
cmp
into
jns
shr
push
mov
mov
ror
sbb
outs
daa
and
loopne
xchg
lahf
shl
pop
cmp
cmp
daa
dec
jp
dec
mov
xchg
jg
call
hlt
mov
out
mov
adc
push
dec
std
jg
inc
add
lock
jge
fisttp
cdq
mov
cwde
shl
test
movs
aad
loope
mov
or
addr16
mov
lahf
fcom
int
sbb
out
dec
out
mov
xor
(bad)
xchg
or
mov
mov
mov
cwde
ror
enter
xchg
cmps
adc
movs
lods
push
aam
jne
add
cmp
push
lods
popa
jmp
ret
lods
pop
pop
(bad)
cmp
(bad)
je
and
mov
idiv
inc
pop
xor
inc
test
push
fwait
call
in
daa
cmp
push
and
pop
mov
add
nop
sbb
movs
push
or
outs
int3
push
das
push
dec
xor
mov
ss
adc
cmp
fst
inc
dec
mov
lds
mov
jle
cmp
dec
cld
(bad)
call
fist
inc
mov
xchg
xchg
sub
sub
adc
gs
pop
movs
cmp
mov
(bad)
ins
jae
cmp
imul
cmp
xchg
add
xor
adc
add
push
mov
outs
out
(bad)
push
xor
lea
lods
or
mov
inc
cs
ins
fisttp
add
std
je
mov
int3
stos
sbb
sub
jo
add
call
adc
out
pop
outs
popf
mov
lods
push
mov
std
daa
mov
stc
outs
retf
adc
iret
mov
out
out
push
lds
cmps
and
xchg
sbb
bound
mov
stos
inc
stos
mov
int
repnz
test
dec
mov
xchg
cmp
shl
pop
outs
fs
mov
ja
(bad)
fsub
jo
xchg
and
sub
jmp
add
push
and
mov
mov
ret
rcr
ret
adc
jno
xchg
nop
cmp
(bad)
cmc
add
pop
jp
inc
mov
cmp
test
adc
ror
les
not
pop
popa
fisub
sbb
cs
dec
stos
fbstp
dec
cli
add
test
push
add
xabort
and
in
aad
mov
and
in
adc
scas
sbb
push
pusha
jmp
xchg
scas
retf
hlt
stc
cmps
add
rcr
pop
adc
dec
mov
das
shl
dec
cs
cmp
dec
dec
out
cmp
retf
mov
stos
retf
mov
jno
mov
pop
adc
shl
imul
inc
pop
mov
jb
rcl
shl
sub
or
js
mov
push
sub
(bad)
(bad)
clc
nop
neg
push
dec
inc
adc
mov
outs
ds
cs
daa
loope
add
sub
mov
jns
mov
ror
pop
jecxz
out
inc
(bad)
clc
test
lods
into
dec
int3
jecxz
lahf
repnz
xlat
call
jnp
pop
(bad)
jge
loope
mov
mov
out
jbe
adc
repnz
jo
repnz
cdq
jb
mov
repz
fldenv
add
popf
scas
or
stc
sub
mov
fs
test
add
loop
dec
adc
mov
jo
push
lods
fwait
iretw
sbb
sub
mul
mov
cs
push
jbe
mov
cs
dec
mov
fst
xor
mov
leave
jo
dec
pop
addr16
pop
xor
xchg
mov
and
xor
shl
scas
fcomp
mov
popf
test
lock
sahf
rcl
into
lods
addr16
ret
pop
and
or
mov
ins
inc
ret
mov
jecxz
push
out
xchg
push
loopne
or
test
push
cmc
push
ins
retf
dec
retf
push
out
pop
(bad)
jnp
jl
cmp
retf
inc
test
pop
int
sbb
fcomp
arpl
sti
scas
and
in
and
push
aad
xchg
xchg
pop
add
cs
adc
dec
shl
sub
out
ins
ret
inc
mov
cmc
pop
jb
xchg
clc
nop
test
fstp
jg
jl
jecxz
xor
mov
sub
mov
push
iret
scas
fldcw
in
sbb
sbb
jecxz
scas
bnd
mov
mov
or
jno
jmp
nop
enter
jmp
scas
or
mov
out
inc
out
inc
les
mov
adc
gs
mov
or
mov
or
push
ins
out
enter
add
call
inc
jecxz
(bad)
es
rcr
je
push
pop
mov
fsubr
stc
xor
xor
popa
xchg
sub
inc
enter
aas
(bad)
adc
cld
or
fisub
inc
push
and
lea
cmps
call
pop
pop
xor
mov
cmps
jle
(bad)
in
lods
push
cmp
lahf
xchg
ja
jo
and
cmc
cld
inc
dec
cld
pop
fnstcw
sbb
mov
push
repz
(bad)
mov
stos
add
dec
add
xor
sbb
cmc
jae
aad
sbb
xor
dec
xor
or
jmp
lock
stos
xchg
in
das
fbstp
loope
xchg
mov
push
lahf
ficomp
inc
pop
rol
out
cwde
je
add
in
les
hlt
dec
mov
lahf
fbld
retf
xor
mov
jae
xchg
push
movs
sbb
mov
into
jno
xlat
(bad)
aas
inc
scas
scas
jecxz
jbe
in
mov
cdq
lds
shl
outs
outs
popf
and
jb
sbb
(bad)
ret
inc
ret
fisttp
es
pop
retf
mov
aas
scas
ror
push
fiadd
or
sub
sub
leave
fstp
cmp
cmps
dec
call
movs
mov
jae
ins
mov
dec
ror
lahf
sub
push
pop
sub
add
shr
daa
jb
(bad)
adc
add
cmp
neg
and
cmp
dec
fisttp
cli
mov
aaa
stc
xchg
pop
movzx
cmp
sti
sub
cli
mov
hlt
sbb
cmps
lods
out
jb
jnp
dec
ret
jp
pop
inc
mov
and
cmp
mov
xchg
jnp
pop
or
ror
loop
inc
int3
mov
xchg
out
sub
stos
ret
rcl
sub
sti
mov
inc
jge
test
push
mov
push
clc
cs
cmc
pop
adc
inc
push
or
push
out
iret
and
sbb
scas
add
add
mov
test
ins
inc
dec
xchg
sahf
aam
gs
jg
mov
dec
mov
push
(bad)
outs
mov
or
(bad)
jmp
dec
jnp
(bad)
in
cdq
out
mov
push
sar
fidivr
(bad)
cmps
ja
lea
cmp
jae
test
(bad)
(bad)
jg
retf
jae
sbb
stos
outs
popa
xchg
sub
ja
out
xchg
mov
shl
fadd
lds
stos
movs
ins
(bad)
add
test
xchg
cld
int
rol
je
adc
xchg
(bad)
out
inc
sbb
mov
push
adc
imul
test
sti
sbb
enter
sti
(bad)
xlat
jmp
mov
bound
cli
dec
pop
jmp
mov
fadd
cmps
or
ds
sub
hlt
adc
mov
das
inc
cs
jb
sub
call
mov
sub
fild
movs
int3
jmp
pop
add
rol
clc
out
stc
lahf
push
stos
fndisi(8087
jg
jno
ficom
inc
mov
and
int
push
in
enter
ret
int
stc
and
leave
(bad)
or
das
jno
jns
add
in
retf
jl
dec
push
or
test
aas
mov
adc
test
push
mov
call
ret
imul
scas
loope
xchg
inc
push
dec
rcr
sbb
mov
int3
scas
dec
in
ss
retf
cmps
push
push
inc
sbb
sbb
inc
icebp
sub
add
lock
ja
jge
shl
dec
inc
jnp
mov
mov
retf
scas
jmp
pop
scas
jnp
sbb
jg
retf
and
pop
fisub
int3
add
scas
mov
pop
test
or
or
lods
cmc
sub
cmp
mov
dec
cmp
mov
xor
xor
inc
pop
or
adc
not
dec
(bad)
es
xlat
and
add
hlt
adc
bound
push
arpl
jns
jnp
fild
add
or
sub
test
outs
(bad)
cmp
data16
(bad)
lahf
test
and
in
dec
add
cmp
sbb
xor
test
repnz
arpl
adc
in
ficom
outs
cs
out
cmps
mov
cmps
mov
retf
sub
sub
xor
sbb
popf
out
pop
cdq
repnz
xchg
scas
pop
scas
xchg
shl
pop
xchg
push
push
out
aaa
aas
push
movs
mov
cmps
cld
xchg
inc
xor
push
aaa
adc
repz
fwait
jo
ins
inc
jo
outs
inc
dec
(bad)
fwait
scas
loope
and
lods
sbb
test
call
loopne
ss
retfw
cwde
cmp
(bad)
sbb
mov
outs
sub
dec
push
ret
cmp
lods
popa
mov
pop
retf
lahf
pop
aad
lock
pop
sbb
mov
dec
dec
push
push
jp
inc
(bad)
ds
pop
jecxz
fld
fild
dec
repnz
jp
outs
pop
add
repnz
in
xchg
inc
jmp
adc
jno
and
fbld
(bad)
and
mov
nop
out
inc
clc
fsub
pop
test
test
fcom
dec
je
popf
stos
int
clc
xchg
sbb
aam
fsubr
dec
movs
cmp
stos
rol
adc
sbb
ret
inc
pusha
fwait
and
add
loop
stos
xor
dec
and
(bad)
ja
xchg
(bad)
pushf
pop
push
loope
jns
adc
mov
pop
repnz
add
out
cmp
or
and
adc
data16
mov
jb
jns
cmp
mov
pop
cwde
mov
test
lock
xchg
pop
stos
push
jmp
push
je
dec
jp
lods
sahf
mov
loope
lds
sbb
stc
(bad)
shr
and
clc
je
out
lds
ficom
lds
stos
and
jl
movs
adc
clc
imul
aad
popf
arpl
(bad)
int3
mov
xor
rcl
cmp
inc
add
and
out
ret
out
sbb
xor
aad
push
retf
push
add
(bad)
aam
imul
es
aam
scas
pop
(bad)
es
in
test
mov
mov
and
cmp
xlat
inc
mov
mov
shl
and
jnp
mov
mov
mov
mov
sbb
fsub
repnz
cmp
out
stos
or
lds
iret
cdq
gs
int3
and
pop
inc
stos
cmp
in
adc
cmp
fst
pop
das
mov
or
pop
xlat
pop
movs
outs
or
(bad)
pop
ds
cmp
pop
ins
enter
daa
repnz
xchg
loopne
mov
sub
xchg
push
lods
stc
jle
mov
xor
fisubr
dec
addr16
cmps
das
xor
sub
xchg
in
pop
jge
and
xchg
sub
push
adc
mov
cmps
imul
inc
jns
(bad)
push
data16
cwde
sub
dec
rcr
inc
inc
cwde
mov
pop
dec
aas
sbb
xor
movs
sbb
push
pop
add
or
jl
dec
les
jae
cmp
dec
add
mov
adc
arpl
jnp
sub
pop
dec
test
data16
ins
push
ret
add
ret
shl
xor
xchg
mov
jle
add
leave
hlt
fiadd
scas
repz
pop
fmul
xor
movs
fcmovnu
sub
ret
xchg
push
mov
add
inc
adc
adc
(bad)
pop
adc
aad
icebp
add
mov
xor
sub
mov
(bad)
cmp
popf
sbb
xchg
in
pop
pop
or
pop
dec
or
fld
cmp
mov
jnp
mov
aam
bound
cld
pop
nop
call
popf
imul
mov
dec
in
and
cmp
repz
push
gs
mov
stc
pop
adc
mov
adc
cmp
and
xor
add
and
xlat
jno
xor
xor
outs
jnp
pop
inc
pop
xchg
jle
push
push
cmps
xor
adc
test
arpl
outs
cli
cmp
sti
pop
out
dec
and
push
mov
mov
mov
aad
mov
fadd
stos
inc
scas
and
sub
mov
int3
ss
stos
popa
or
mov
dec
add
push
shl
mov
in
push
lea
(bad)
push
sar
dec
mov
cmp
ja
dec
imul
repz
mov
mov
(bad)
push
popf
imul
pop
iret
add
pop
test
pop
xchg
mov
lods
addr16
sub
push
mov
call
or
inc
or
or
(bad)
int
rol
or
mov
mov
push
cmps
mov
mov
sub
jge
ins
call
xchg
sbb
pop
or
(bad)
imul
add
inc
aad
ror
mov
jmp
mov
xor
push
pop
out
sahf
add
rcr
(bad)
pushf
sar
lahf
mov
jg
pop
(bad)
out
lahf
pop
pusha
adc
dec
ins
(bad)
std
(bad)
cwde
sub
and
fnstsw
and
bswap
xchg
xor
xchg
pusha
jmp
mov
push
mov
test
popf
addr16
lea
jl
lods
adc
movs
cmp
lods
mov
rcl
or
adc
jb
and
jp
push
and
jle
xor
fild
leave
inc
or
push
das
pop
jb
xchg
mov
push
repz
adc
in
sub
and
sub
and
mov
mov
call
sbb
cmp
enter
hlt
dec
je
loop
push
sahf
mov
and
(bad)
popf
in
lahf
jp
pop
loopne
dec
gs
jmp
adc
push
outs
jne
jg
sub
sbb
jne
inc
add
mov
or
loop
mov
mov
sub
sbb
sahf
xchg
xchg
mov
(bad)
xchg
(bad)
xor
sub
mov
or
mov
sbb
(bad)
jl
adc
mov
sub
jg
clc
lods
das
ins
pop
sub
inc
jbe
jae
outs
call
jns
fldcw
movs
pop
xchg
imul
cmp
retf
and
mov
outs
ins
sub
mov
scas
jae
(bad)
enter
inc
push
cli
int3
popf
jnp
stos
lea
push
pop
cmps
cmp
xchg
sub
mov
scas
sub
sahf
xor
xchg
daa
lahf
mov
xor
xchg
sahf
xchg
mov
ret
stc
add
mov
adc
and
mov
cli
jmp
adc
ss
add
lock
scas
sti
ret
jne
stc
dec
xchg
aas
outs
imul
xchg
in
cwde
sub
sbb
ror
shl
adc
cmp
lods
and
jbe
fistp
pop
mov
(bad)
int
mov
and
push
ds
mov
jae
in
(bad)
cmc
fiadd
mov
mov
lods
rol
mov
mov
aaa
rcl
sub
lods
sub
xchg
outs
pop
pop
cmp
stos
bound
movs
sbb
mov
push
jb
mov
mov
ror
arpl
push
add
jl
ficomp
add
(bad)
push
pushf
fstp
add
fs
or
stos
mov
lods
jg
and
lds
add
cmc
fistp
mov
loope
add
mul
mov
jle
ins
and
pusha
(bad)
cmc
test
and
sbb
call
sub
dec
ja
pop
jl
and
test
ds
stos
or
lea
xor
jg
xchg
inc
jns
add
test
and
arpl
out
pop
push
pop
xchg
enter
in
dec
and
push
push
rol
jmp
pop
push
loope
mov
sub
xchg
pop
ins
ss
sub
sub
cmp
jne
mov
xor
pop
(bad)
jmp
clc
or
adc
jns
dec
jmp
xchg
inc
imul
enter
xchg
cmps
cmps
xchg
(bad)
adc
jl
gs
sbb
push
push
idiv
mov
mov
out
dec
shr
xchg
(bad)
jmp
clc
and
or
jecxz
pop
cmp
dec
inc
scas
leave
lods
fdivr
repz
push
sub
mov
xchg
data16
(bad)
sar
jmp
scas
adc
cld
fdivr
ins
ds
cmc
xor
sub
(bad)
mov
fstp
inc
push
ret
out
imul
dec
sbb
daa
sub
mov
je
ja
leave
and
pop
repz
mov
fld
push
movs
lea
arpl
ds
fstp
or
push
xchg
mov
loope
xchg
adc
jg
jae
fidivr
dec
cs
sbb
mov
mov
scas
or
out
or
sti
or
lea
and
(bad)
jg
pop
retf
mov
ds
mov
dec
or
mul
push
sub
jmp
and
xchg
pop
call
jl
jg
scas
mov
sbb
dec
stos
repnz
mov
addr16
push
jp
into
push
cmps
cmp
rcr
test
sbb
or
bound
mov
ret
jae
in
fs
mov
xor
xchg
out
mov
mov
shl
mov
and
xchg
fcom
stc
out
sub
add
or
sub
outs
sbb
movs
(bad)
or
jmp
sub
sub
mov
lahf
inc
js
push
fcom
loopne
imul
das
push
sub
sbb
iret
push
in
enter
push
mov
inc
gs
std
aam
mov
(bad)
jg
ja
cdq
aad
repnz
hlt
sbb
retf
add
enter
xchg
pushf
sbb
dec
dec
xor
out
jno
jnp
mov
inc
ins
jo
popa
fsubr
aad
test
push
push
xchg
sub
xchg
(bad)
jmp
imul
sbb
adc
push
cmp
or
cmp
in
cmp
outs
lods
sahf
dec
or
neg
inc
out
jnp
pushw
pop
or
cmps
mov
pop
ret
enter
add
loopne
push
mov
xor
fucomp
sub
mov
jle
jo
or
jg
jg
pushf
xchg
int
mov
sub
push
pop
mov
es
je
je
push
lahf
aas
jns
add
mov
or
pop
jb
mov
mov
mov
adc
push
stc
push
shl
sub
xlat
ins
sub
rcr
pushf
xor
sub
retf
sbb
shr
bound
or
sub
clc
inc
and
push
int3
add
iret
mov
mov
jp
enter
xchg
out
(bad)
mov
cmp
outs
dec
or
(bad)
out
or
mov
sub
inc
xor
loopne
mov
add
xchg
jbe
fild
cmp
mov
pmaxsw
jns
xchg
dec
hlt
mov
test
loopne
cmp
push
xchg
jo
int
mov
jne
and
popa
sub
mov
push
imul
out
cmp
outs
or
aam
mov
pop
test
icebp
movs
adc
pop
inc
jl
call
adc
popa
fld
stos
das
int3
lahf
sbb
cmp
popf
sub
nop
xlat
ins
xchg
jg
shl
into
retf
mov
push
jo
pop
cmp
and
sub
outs
dec
sub
xchg
push
and
sti
or
out
rcl
add
sub
test
push
icebp
mov
or
lods
mov
lods
ret
popa
cwde
pop
sbb
shl
sub
fimul
mov
and
cmp
adc
add
or
pop
inc
fadd
hlt
lods
adc
dec
ret
fisttp
jp
hlt
imul
test
ss
cmps
ds
jmp
enter
cmp
dec
pop
jb
and
in
dec
push
mov
lea
add
cdq
jns
scas
pushf
mov
movs
hlt
movs
pop
fsubr
nop
sahf
push
add
cmp
dec
loopne
ja
mov
cmp
sbb
pop
pop
push
outs
in
or
pushf
bound
dec
push
cmps
enter
cmp
(bad)
or
loopne
int
neg
pushf
inc
xor
xchg
mov
mov
mov
mov
and
mov
call
(bad)
dec
and
leave
mov
mov
je
stos
(bad)
mov
ja
jne
push
ror
stc
push
mov
or
shr
xchg
fmulp
sahf
inc
cmp
int
cmps
or
in
in
jp
retf
and
xor
aad
je
test
es
mov
pop
xchg
iret
outs
dec
ss
jmp
push
mov
mov
cli
cli
leave
jne
add
pop
mov
nop
mov
out
adc
loopne
popf
jmp
xor
push
test
lock
adc
cmc
shl
mov
sbb
std
push
inc
mov
cmp
sbb
pusha
addr16
cdq
inc
bound
adc
lods
idiv
loope
or
lahf
mul
iret
test
cmps
icebp
std
call
mov
inc
test
test
movs
aad
(bad)
ret
xlat
sub
scas
imul
sub
out
pop
push
in
sub
or
fmul
inc
div
jbe
jne
and
and
adc
repnz
ret
cli
or
int3
mov
fcomp
pop
mov
test
inc
push
sub
in
pop
fwait
pusha
jp
out
fimul
mov
out
or
xchg
or
hlt
pop
mov
dec
scas
mov
es
ficom
and
pushf
(bad)
loopne
push
dec
mov
call
(bad)
xchg
hlt
fiadd
sti
pop
sbb
out
xchg
dec
push
jno
mov
sbb
neg
push
xchg
ret
sbb
ret
sbb
les
ins
mov
es
ror
mov
pop
in
jp
cmc
popa
mov
cwde
test
sahf
into
push
ret
je
xchg
cmp
(bad)
cmp
repnz
cld
and
push
(bad)
cld
jmp
sub
ret
sub
jo
paddd
push
fstp
or
and
in
fimul
inc
fcomp
dec
scas
clc
bound
(bad)
mov
lds
adc
pop
push
jp
adc
or
mov
jecxz
ja
push
shr
jne
push
mov
icebp
push
lods
pusha
dec
cmp
enter
fcomp
iret
dec
fcomip
out
scas
jne
(bad)
aas
push
jae
jno
hlt
call
lea
test
(bad)
cmps
mov
xchg
adc
inc
sbb
pop
inc
loopne
jb
adc
xor
fimul
repnz
fiadd
xor
lds
adc
jge
xor
int3
cmp
xchg
jmp
fdivrp
pop
(bad)
pusha
push
outs
dec
loop
push
ret
cwde
rcr
mov
dec
xchg
xchg
test
add
inc
std
(bad)
jae
cmp
sbb
jg
outs
mov
xchg
adc
pushf
xlat
cmc
in
inc
mov
and
rol
call
out
inc
add
ficomp
jmp
jae
test
sbb
sbb
or
es
mov
pusha
ja
inc
pop
jb
mov
jle
or
jle
out
mov
sbb
sub
lock
jmp
jge
sub
cld
cmp
sbb
jg
mov
sti
xor
sub
and
lods
(bad)
adc
loopne
enter
not
pop
out
mov
or
mov
movs
add
xor
push
xchg
out
or
pop
mov
rcl
pop
outs
outs
cmp
fild
xor
cmp
xchg
adc
daa
bound
ret
out
pop
adc
sbb
pop
xor
addr16
(bad)
lahf
loope
jo
lods
xchg
lea
mov
(bad)
pusha
cmp
aas
repz
xlat
mov
jo
push
dec
mov
in
fsubrp
mov
fisttp
popa
sbb
fimul
div
ins
or
mov
or
out
dec
ficom
and
(bad)
mov
aad
xchg
inc
or
pushf
push
cli
retf
cld
add
test
rcl
and
arpl
xor
ins
inc
add
sti
dec
lods
push
mov
or
hlt
xchg
dec
mov
xchg
(bad)
fidivr
and
into
pop
addr16
inc
aaa
je
out
fild
test
or
sbb
mov
pop
stos
fisttp
sbb
mov
jbe
(bad)
sbb
xchg
sbb
add
sub
cs
div
push
fwait
lods
dec
xchg
cmp
shl
mov
push
nop
jmp
aaa
adc
pop
lods
mov
push
xchg
xor
push
retf
adc
hlt
hlt
shrd
in
mov
pop
inc
cmp
or
nop
pop
mov
(bad)
mov
aad
xlat
pop
neg
mov
xchg
jge
sbb
punpckhbw
mov
adc
push
pop
sbb
jb
shr
add
movs
adc
add
pop
in
pcmpeqd
je
jae
add
sar
(bad)
adc
inc
jg
jns
loop
xchg
cmp
jne
out
fimul
or
cdq
and
inc
jmp
aad
cmp
or
movs
cmp
std
inc
sub
jl
popa
pop
jns
jl
xchg
mov
and
movs
stos
jmp
mov
movs
lods
inc
sbb
test
rol
popw
clc
mov
or
jae
jbe
xor
test
pop
call
cmp
adc
or
ss
cdq
addr16
jnp
outs
push
arpl
loopne
lock
jne
or
mov
push
call
mov
pushf
jge
loopne
(bad)
add
cmp
cmp
std
js
call
dec
movs
dec
xchg
gs
xlat
fcmovb
or
fisub
sub
jo
push
sahf
jnp
jno
retf
enter
cmp
pop
dec
cmp
or
lock
(bad)
sti
je
mov
add
or
lahf
fnstenv
jmp
mov
data16
adc
jnp
dec
jb
cmp
cmp
fdiv
and
add
aam
call
push
and
add
lea
out
or
daa
loop
cmp
adc
jmp
out
mov
test
inc
ins
dec
add
loop
add
xchg
cmps
enter
mov
repz
cmp
dec
loopne
adc
mov
cld
fs
and
dec
push
ins
fwait
mov
aas
arpl
stos
arpl
mov
mov
sbb
add
mov
leave
push
jmp
push
sub
leave
or
and
out
call
into
clc
movs
inc
cmp
adc
and
aas
cmps
push
and
hlt
ret
daa
sub
fwait
add
out
mov
push
jg
mov
clc
mov
pushf
mov
test
and
lock
mov
mov
cmp
xor
xor
fst
inc
(bad)
mov
pop
pusha
(bad)
and
mov
enter
cli
in
inc
mov
jns
mov
outs
lahf
dec
ret
mov
adc
inc
or
sti
ret
sbb
fwait
cli
xor
pop
pop
adc
fnstsw
outs
rol
cmps
fs
cmc
push
ja
inc
fsubr
xchg
dec
ja
and
stos
xor
aad
or
ins
sub
in
cmc
fcmovbe
ds
add
mov
jae
cmc
or
xor
cmps
loopne
fiadd
int3
fbld
xchg
stc
adc
add
or
mov
idiv
xor
repz
or
sub
js
or
daa
mov
mov
jp
xchg
std
out
push
aam
jecxz
aas
add
in
pusha
pushf
dec
inc
fwait
not
fcmove
stc
in
ret
xchg
cwde
dec
sbb
add
pop
aad
jne
push
ret
(bad)
into
xor
mov
popa
xchg
jmp
sar
jecxz
push
faddp
lods
cmc
int3
sbb
xchg
push
lahf
int
js
aad
and
dec
aad
xchg
dec
fcom
popa
jns
mov
arpl
rcr
mov
in
xor
jmp
or
mov
cmp
inc
and
leave
push
sbb
test
out
xlat
sub
jae
pop
pop
mov
push
or
push
fs
cmp
adc
sub
or
adc
dec
das
ins
mov
cmc
or
push
xor
fisub
loope
in
fistp
int
xor
sub
inc
hlt
push
add
pop
loop
cdq
out
mov
sbb
sahf
pusha
mov
fisub
(bad)
int
xchg
dec
loop
repnz
pop
and
ficom
(bad)
rcr
add
ins
arpl
sub
int3
sub
ror
mov
xchg
fwait
rcl
add
out
repz
fdiv
pop
jmp
jb
in
sti
push
or
sbb
jmp
inc
sbb
adc
and
mov
mov
cwde
stos
cmp
adc
shl
ss
imul
shl
mov
fist
or
pop
push
mov
xlat
mov
arpl
lahf
(bad)
sub
mov
rcl
dec
pop
mov
cmps
pop
mov
aam
pop
movs
inc
cmps
add
addr16
sub
xchg
inc
xchg
f2xm1
xor
cmp
dec
or
and
mov
xor
sub
aaa
inc
sahf
call
jo
ins
popf
mov
pusha
sbb
pop
shl
push
cdq
mov
inc
ror
in
jnp
or
jbe
out
add
mov
jg
push
push
fld1
inc
mov
es
jp
out
mov
push
and
ins
pop
pop
push
add
push
xor
adc
ds
cld
pop
mov
mov
add
loope
sub
or
push
push
(bad)
cmp
dec
fmul
or
into
jno
lds
ins
shl
imul
lock
adc
outs
icebp
mov
lahf
dec
(bad)
enter
data16
lea
jnp
fstp
(bad)
sbb
int3
and
or
imul
lds
call
call
test
push
jl
inc
pop
shl
push
nop
jle
repz
stc
mov
inc
mov
scas
inc
push
ins
pop
add
lods
or
loopne
and
pop
rcl
out
js
add
xchg
fisub
popa
dec
inc
or
popf
fwait
mov
push
jp
not
mov
(bad)
ffree
sub
fwait
add
(bad)
pop
pop
fs
add
jmp
and
rcl
push
outs
adc
pop
jmp
lods
inc
in
pop
mov
scas
ror
loopne
or
sbb
sbb
inc
and
int3
das
cmp
in
and
ins
cmp
jge
lea
fwait
inc
pop
add
adc
sbb
test
inc
push
dec
pop
(bad)
xchg
aam
add
gs
xor
sbb
je
jle
and
inc
(bad)
adc
cmp
inc
adc
sub
mov
out
xor
inc
cmp
sub
push
jp
xor
cmp
jo
dec
cld
leave
adc
xchg
bound
test
jmp
(bad)
push
xchg
in
pop
cli
adc
ret
test
and
pop
popa
ret
repz
jb
or
mov
lds
sbb
stc
jae
mov
movs
sbb
push
xchg
fcmovnbe
pop
inc
mov
in
xor
mov
ss
mov
pushf
retf
jnp
pop
stos
js
xchg
and
inc
rcr
adc
fiadd
aas
add
int
jl
mov
mov
sbb
not
test
sub
and
cmp
xchg
retf
xor
cmp
test
mov
(bad)
pop
cmps
outs
ss
jl
call
mov
iret
fisttp
rol
daa
cmc
push
mov
movs
xchg
push
pushf
mov
mov
pop
retf
dec
mov
mov
jno
test
xchg
xor
js
jae
aad
jns
stos
dec
cmp
fisubr
imul
outs
popa
sub
push
push
push
add
js
sub
sub
ins
stos
dec
push
ja
loopne
add
sbb
add
ss
xchg
mov
mov
pop
aam
pusha
aaa
push
(bad)
(bad)
retf
mov
ins
into
rol
sub
mov
jle
test
xor
dec
add
push
sbb
adc
sub
out
jns
lds
pop
jo
stos
sbb
fcomp
imul
adc
xchg
aad
adc
inc
lods
sbb
(bad)
fdiv
or
mov
cmps
jge
adc
mov
stos
mov
out
mov
mov
(bad)
mov
popa
loope
and
mov
or
xchg
cmps
mov
bnd
sbb
pop
xchg
mov
mov
das
lock
xor
push
inc
fisubr
out
inc
dec
pop
inc
lds
inc
mov
scas
push
or
stc
cmps
dec
inc
sti
or
rep
jle
jns
lods
addr16
and
outs
sub
mov
out
or
imul
or
mov
arpl
fld
scas
dec
lods
sub
add
or
outs
fnsave
out
lea
icebp
repz
hlt
gs
lea
mov
(bad)
int3
out
pop
pop
fcom
jnp
mov
ins
loopne
or
push
fidivr
rcr
iret
lahf
popa
shl
mov
dec
add
les
adc
sahf
jo
outs
xchg
mov
mov
shl
popf
pop
push
mov
mov
call
sub
in
in
push
adc
inc
ja
xchg
or
or
stos
push
push
jge
ss
xchg
es
(bad)
cli
mov
cwde
mov
mov
stos
or
jmp
sub
push
push
add
ret
jmp
jo
pop
mov
pop
or
jmp
ss
pusha
(bad)
cmp
ss
(bad)
(bad)
mov
int
jmp
xchg
ret
daa
push
(bad)
outs
scas
push
mov
pushf
ror
jns
cmp
pusha
test
inc
test
mov
out
xlat
dec
fcomp
es
cs
jnp
enter
out
mov
retf
sahf
mov
sub
xchg
and
xor
ss
adc
scas
push
loop
sbb
mov
adc
or
idiv
push
jo
fild
lahf
jle
mov
out
clc
sbb
jp
(bad)
cmps
mov
cmp
jae
adc
in
mov
xor
int
mov
dec
xchg
mov
dec
lock
or
cmp
jmp
cmc
mov
add
adc
push
rcr
cli
add
arpl
mov
lods
xor
add
loopne
scas
xchg
sti
ret
cmp
push
lds
jl
xor
ins
je
sbb
hlt
popf
sub
pop
cmp
adc
push
in
ret
ds
test
sar
ror
pop
ja
and
out
dec
inc
sahf
adc
sbb
jb
push
mov
je
das
or
ja
ins
jbe
addr16
lods
stos
fld
mov
rcr
loop
xor
dec
fist
sbb
leave
xor
cmc
and
rol
and
dec
mov
pop
js
aam
jg
std
dec
hlt
rcr
mov
mov
pop
mov
and
mov
push
dec
stos
mov
ja
aas
gs
pop
sub
hlt
add
stos
loop
repz
sub
xchg
dec
repz
xchg
adc
into
sub
push
or
cmc
or
das
sub
adc
arpl
jge
lds
sub
pop
imul
cwde
lahf
pop
or
adc
jg
clc
mov
jne
pop
popa
or
imul
cld
pop
in
mov
ins
mov
mov
dec
jge
push
cmp
test
ins
xchg
and
add
sub
xor
adc
rcr
fsub
fwait
xor
dec
ja
sub
out
adc
or
and
jmp
int3
or
pop
pop
nop
imul
xor
inc
ins
nop
sub
sbb
rcr
adc
int3
mov
rcl
cmp
int
pop
cs
jmp
xchg
jp
popa
mov
movs
dec
fisub
lods
jp
sbb
lods
sub
cmp
jmp
and
xchg
or
dec
arpl
mov
jle
inc
cmp
scas
imul
push
mov
das
adc
mov
jae
jnp
es
cmp
ror
push
stos
psrld
imul
and
cmp
aam
in
mov
shl
mov
movs
fsub
(bad)
stos
ins
imul
adc
inc
cmp
rol
addr16
fdivp
push
pusha
and
pop
mov
(bad)
out
push
arpl
push
mov
in
ds
jno
adc
add
cmp
pop
outs
adc
(bad)
xchg
mov
pop
cmp
sbb
imul
sub
add
adc
fdiv
stos
retf
push
in
add
mov
xchg
outs
mov
js
xchg
shl
shl
cmp
add
lods
hlt
dec
adc
add
jp
add
call
and
loope
lds
pop
int
jge
les
mov
push
inc
mov
push
jg
into
lds
mul
mov
mov
mov
sub
ficom
fnstsw
(bad)
mov
xchg
jmp
call
mov
(bad)
daa
int3
cmp
test
cmp
xchg
outs
test
rcr
sahf
adc
(bad)
ds
mov
loope
pusha
test
sbb
cmp
lahf
mov
mov
es
leave
repnz
sbb
dec
sbb
movs
lock
xor
stc
sbb
(bad)
dec
xchg
mov
mov
sub
fcmovu
sti
mov
jae
pop
mov
cmp
cmp
cmp
inc
cmp
pop
cdq
adc
mov
hlt
dec
js
cmp
std
lock
leave
lea
jecxz
dec
cmp
dec
pop
(bad)
out
push
in
inc
nop
pusha
pop
xchg
imul
add
add
std
mov
and
loope
fimul
xchg
jb
jbe
std
mov
call
push
push
retf
(bad)
not
fcom
mov
gs
sub
inc
sbb
dec
out
push
(bad)
in
mov
aam
hlt
int3
int
retf
lods
jbe
pop
cld
icebp
xchg
sbb
and
xchg
pop
adc
stos
xchg
cmc
repnz
mov
or
sbb
dec
addr16
call
xchg
or
pop
clc
punpckhbw
mov
mov
cmp
leave
in
add
es
inc
int3
rol
cs
mov
or
enter
cmp
lds
popa
(bad)
popf
imul
mov
push
aam
lods
adc
add
mov
test
dec
cmps
pusha
and
mov
mov
pop
sbb
iret
inc
jns
xchg
fxch
xchg
and
pop
loope
xor
popf
stos
fmul
jnp
mov
add
adc
mov
mov
hlt
cwde
(bad)
out
jp
bound
push
pop
das
pop
sub
arpl
adc
ror
push
fisttp
xor
dec
mov
enter
inc
pop
lods
fnstsw
mov
xor
lods
adc
aaa
mov
icebp
xchg
daa
iret
and
or
aaa
mov
xor
data16
cmp
inc
call
enter
scas
lods
and
mul
loop
das
inc
push
ja
sub
mov
jo
mov
popa
mov
adc
adc
adc
lds
mov
push
inc
add
cmp
xchg
mov
sub
movs
stos
xchg
pop
iret
add
loop
push
lock
loope
sub
mov
push
dec
gs
inc
sbb
cmp
push
pop
xor
out
add
inc
push
std
push
in
sub
addr16
jne
loopne
push
out
sub
call
sub
imul
mov
or
or
int3
jne
mov
ror
or
pop
sub
fst
inc
aam
ret
and
ss
push
pop
inc
sbb
in
call
sahf
pop
jle
jl
stos
jp
or
out
xchg
cmc
outs
popf
imul
jge
cmp
into
mov
or
jl
fwait
and
jp
sbb
push
retf
lea
pop
dec
jg
mov
inc
sbb
sub
inc
(bad)
mov
jecxz
pop
out
mov
jbe
xchg
mov
xor
loopne
test
adc
push
jmp
test
push
aad
and
xchg
pop
jg
sub
jo
adc
xchg
xor
mov
stos
pop
clc
sti
push
sbb
enter
rcl
ret
lds
inc
add
outs
adc
mov
adc
repnz
dec
(bad)
sub
fidivr
xchg
xchg
or
enter
mov
leave
pop
and
cwde
pop
mov
rcl
mov
aam
mov
and
fmul
cmp
mov
xor
jecxz
jmp
inc
pusha
push
inc
les
jmp
mov
cmps
xor
mov
lods
jno
cmp
jb
and
in
fisttp
push
popa
or
nop
(bad)
jns
xchg
into
mov
mov
jnp
jg
fwait
and
cwde
lds
stos
repnz
repnz
jmp
inc
inc
clc
test
outs
and
cmp
push
mov
mov
inc
loop
sbb
jle
aam
int3
sub
xchg
xor
mov
fcmovbe
loope
in
test
inc
adc
rol
sub
aaa
inc
mov
jnp
ins
stc
les
aas
popf
inc
mov
jns
test
sbb
jecxz
mov
mov
mov
pop
icebp
or
xor
or
out
(bad)
xchg
ret
cmp
popf
mov
scas
pop
int
or
sub
(bad)
mov
pusha
push
push
call
push
pop
xchg
cmp
adc
xchg
jl
clc
lahf
mov
xlat
pushw
(bad)
mov
inc
sub
sbb
lea
mov
test
repz
jae
xor
outs
mov
xchg
add
mov
imul
retf
push
add
ja
imul
xchg
fnstcw
dec
add
in
sti
test
sub
jl
jg
xlat
iret
out
test
cld
pop
push
mov
ret
leave
(bad)
fs
add
(bad)
pop
jle
jae
int3
dec
call
dec
fsub
mov
xlat
xor
xor
dec
adc
mov
pushf
fnstsw
in
cld
test
cmp
pop
adc
pop
call
adc
neg
pop
cmp
outs
push
test
jno
out
adc
jmp
dec
jg
je
clc
mov
cld
loop
and
mov
cmp
(bad)
jmp
in
out
int3
pop
rol
add
inc
mov
test
mov
mov
mov
xor
popa
and
in
jns
fisubr
repz
call
push
call
aam
scas
inc
arpl
push
push
jle
push
test
inc
add
cmc
sub
test
jns
pop
sti
(bad)
aaa
sub
or
ss
xor
in
lds
ret
(bad)
std
push
mov
sub
fwait
push
fmul
test
xchg
or
xor
cmp
and
pop
mov
stos
or
dec
mov
cdq
cdq
or
pop
xchg
scas
xchg
xchg
les
retf
popa
pop
call
cmp
cmp
lahf
jb
mov
jge
loope
(bad)
out
adc
movs
imul
clc
inc
icebp
daa
xor
(bad)
push
fdivr
les
jnp
pop
xchg
jl
arpl
lea
jg
test
es
(bad)
js
adc
test
or
add
pop
aaa
dec
cmp
jbe
xchg
pop
std
xchg
xlat
mov
bound
in
sub
mov
inc
lods
pop
or
mov
out
dec
mul
jl
jmp
pop
sbb
push
adc
in
dec
sahf
(bad)
sub
inc
clc
or
mov
(bad)
test
xlat
add
or
dec
push
fisubr
ret
mov
xchg
or
mov
push
dec
cdq
sub
nop
xor
hlt
outs
mov
call
cld
jbe
cwde
lods
xor
mov
inc
lea
inc
mov
mov
imul
mov
inc
pushf
sub
ror
lock
and
push
inc
fist
daa
mov
jp
xor
xor
clc
mov
sub
pop
sbb
stc
mov
sub
sub
push
jnp
or
pop
push
xchg
cmp
mov
jbe
cmps
fsubr
clc
imul
sub
pop
clc
test
outs
test
das
bound
jo
sbb
mov
pop
xchg
adc
(bad)
cli
scas
or
(bad)
out
or
int3
adc
cmc
or
popa
pop
sbb
sub
adc
ja
and
xor
jbe
inc
stos
dec
(bad)
add
call
ins
imul
mov
test
lods
adc
push
adc
das
in
cmp
hlt
pop
out
mov
cmp
fisttp
mov
and
sbb
add
xor
add
shr
ss
sbb
sbb
mov
test
or
in
cmp
out
sbb
shr
sbb
aas
xchg
push
vsqrtss
fidivr
xor
inc
shr
xor
cmc
xlat
sahf
jnp
faddp
or
je
mov
dec
inc
jnp
inc
push
repnz
addr16
jno
mov
hlt
aas
push
out
inc
aas
dec
out
xchg
and
clc
mov
loope
add
pop
push
ror
jne
aas
ss
and
cmp
mov
jnp
jmp
lods
adc
lods
pop
mov
add
fcomp
push
rol
jno
retf
stos
mov
inc
cmp
jne
jne
in
sbb
pop
gs
mov
xor
xor
into
jmp
cli
daa
pop
add
push
push
adc
jae
movs
mov
repz
add
das
stc
pop
xchg
pop
jle
lods
jbe
add
je
outs
scas
sub
push
lods
popf
pop
push
pop
or
imul
and
ja
mov
std
out
rcl
test
dec
lea
daa
sbb
in
inc
sbb
(bad)
shr
pop
pop
inc
fnsave
addr16
ins
mov
jecxz
retf
out
dec
in
(bad)
jp
(bad)
jnp
add
push
sub
xor
sub
cs
sbb
jge
sub
sbb
pop
mov
cmp
add
adc
paddb
dec
stc
call
jmp
mov
xlat
dec
(bad)
adc
sbb
mov
or
std
mov
or
push
mov
jmp
(bad)
jmp
shl
or
retf
xchg
punpckhdq
jnp
cs
pop
in
xor
(bad)
shl
sub
sti
cdq
jg
retf
ret
aam
or
sub
fstp
fld
push
cmc
jae
ss
jge
lods
scas
sub
inc
jne
sbb
enter
dec
pop
mov
enter
dec
int3
mov
push
add
lods
out
lahf
lahf
lods
mov
sahf
iret
xor
xlat
mov
lock
mov
(bad)
outs
fist
jnp
addr16
inc
lds
and
push
test
ret
into
fwait
mov
adc
sahf
pushf
ds
ret
sub
fsubp
jne
push
sub
inc
dec
ror
int3
xchg
leave
adc
pop
sar
xchg
mov
mov
dec
xchg
mov
in
imul
pop
dec
sbb
mov
cs
or
popa
iret
ror
aaa
ins
inc
into
xchg
sub
jg
sub
lock
outs
pop
push
fs
dec
add
fiadd
mov
pop
maskmovq
test
dec
push
push
call
mov
inc
in
cmps
push
pop
test
adc
arpl
mov
jp
add
dec
add
or
test
ret
(bad)
mov
mov
enter
shr
into
outs
(bad)
out
rol
adc
div
push
(bad)
iret
lods
sbb
jp
idiv
inc
mov
mov
lods
and
ins
lahf
jae
dec
and
mov
ffreep
rcl
push
mov
mov
ja
xchg
scas
sub
xchg
jno
std
and
dec
iret
ss
leave
or
push
ret
(bad)
(bad)
sar
lods
sar
out
adc
stc
cmp
leave
mov
push
aaa
ins
adc
xchg
data16
repnz
mov
adc
fs
ret
sbb
in
mov
add
rcr
retf
adc
out
jbe
or
adc
stc
das
or
cmp
pop
jge
fdivr
jo
inc
xor
adc
lods
push
add
movs
cmc
sub
push
dec
(bad)
clc
dec
ja
test
dec
arpl
enter
mov
lods
add
jge
mov
dec
push
out
cmp
lock
pusha
push
mov
jnp
popa
mov
cmp
or
out
out
rol
xchg
test
(bad)
in
push
(bad)
cwde
adc
cmp
ss
out
or
add
cmps
cmp
mov
sbb
sbb
mov
jle
cmp
cmps
in
cmp
mov
jns
les
js
test
icebp
fwait
imul
xchg
inc
mov
outs
xor
fidiv
or
push
sbb
pusha
cmp
dec
aas
mov
nop
rcl
xchg
mov
jmp
aam
movs
das
cmps
push
and
stos
bound
xor
into
xlat
push
lds
xchg
sub
pusha
pop
inc
out
sar
jmp
sar
mov
sub
arpl
into
pop
ds
jbe
xchg
sbb
ds
leave
add
int3
pop
cli
(bad)
mov
mov
es
outs
clc
sbb
xchg
pop
xor
jmp
mov
test
push
and
sbb
cmp
xchg
int
ss
pop
(bad)
fwait
es
jo
pop
in
sub
daa
push
stc
adc
inc
cs
std
aaa
xor
inc
loope
push
pop
js
jecxz
xchg
shl
xchg
cmp
push
aas
clc
jmp
pushf
xchg
push
ss
cdq
cwde
jp
cdq
shr
jnp
or
call
call
aaa
cmp
xchg
or
aam
add
shl
jl
arpl
push
ds
xchg
movs
cmps
sub
push
sub
dec
and
jo
outs
aam
sub
sbb
lods
in
mov
or
ret
mov
mov
pop
dec
call
or
lea
sbb
loop
cmps
add
dec
adc
adc
push
pop
repnz
fidivr
or
or
sbb
and
(bad)
jno
push
stos
jae
fs
cmp
jp
jbe
xor
mov
pop
test
mov
fcomp
je
cmp
and
hlt
push
loop
call
in
cmps
or
imul
movs
leave
les
xchg
inc
or
icebp
jne
cmp
cmp
rdpmc
call
idiv
leave
cdq
in
pusha
mov
add
add
mov
jl
dec
or
mov
or
int3
inc
gs
cs
push
test
and
or
inc
mov
cs
sbb
fsub
push
es
scas
push
sbb
loope
ret
ds
stc
xlat
sub
mov
sar
jae
(bad)
inc
mov
xor
adc
lea
adc
scas
iret
jae
aas
rcr
pop
retf
xchg
test
add
or
sub
lock
test
call
jb
push
sub
pusha
dec
lock
int3
push
push
mov
xchg
lahf
push
shr
retf
retf
loopne
dec
and
push
int
mov
adc
mov
gs
jmp
ss
mov
adc
jp
push
lods
jp
push
fistp
int3
inc
std
mov
ins
mov
and
and
hlt
dec
das
mov
push
scas
(bad)
jmp
movs
xchg
push
inc
out
cwde
test
bound
aas
and
shl
push
or
mov
add
cmps
xchg
add
push
ss
shl
sub
mov
add
lea
or
jo
out
(bad)
fadd
push
inc
(bad)
ds
cmp
jnp
xchg
ins
aam
in
and
cmps
pop
fs
jle
fist
push
fsubr
xchg
adc
and
cmp
(bad)
push
lock
pop
cmp
sbb
outs
pop
call
fstp
js
and
enter
push
cmps
mov
cmp
aam
ret
je
aas
xor
outs
cld
mov
sub
lea
and
rcr
outs
jo
jmp
les
mov
push
xor
adc
xchg
push
and
addr16
adc
cmc
cli
sahf
fmul
movs
fbld
(bad)
hlt
add
rcl
xchg
jb
mov
pop
test
and
ja
mov
and
jle
sub
cwde
sub
and
and
or
mov
push
lods
sbb
push
inc
cmp
xor
retf
push
xor
push
mov
lods
jae
imul
gs
cwde
aaa
mov
call
clc
add
xor
fimul
daa
jmp
push
movs
mov
lea
pop
add
jmp
test
inc
lods
xchg
mov
sub
dec
aas
xchg
bound
push
adc
(bad)
xchg
cmp
mov
bound
xor
push
imul
push
xchg
dec
repnz
addr16
test
mov
jmp
jmp
push
dec
xor
mov
ins
sbb
push
call
loopne
push
xchg
adc
pop
addr16
mov
out
sbb
jns
dec
call
mov
sub
(bad)
stc
fbld
sti
or
cld
ret
dec
push
in
mov
mov
inc
lock
(bad)
fsub
or
cmp
sbb
sub
retf
nop
sub
fstp
dec
sub
add
pop
xchg
xor
out
int
lahf
enter
add
xchg
into
jg
jno
jmp
nop
fstp
cmp
sbb
fmul
cwde
mov
dec
outs
xor
retf
loope
push
mov
ret
and
daa
pop
inc
xor
mov
bound
scas
ficom
and
ss
push
dec
jno
into
and
xor
sbb
or
push
push
retf
pop
cmps
ins
xor
sbb
pop
aad
pop
xchg
fucom
pop
movs
jmp
xor
mov
dec
mov
in
pop
lock
inc
cmp
mov
out
adc
outs
sub
test
cdq
mov
push
and
jecxz
rcr
inc
and
jge
test
pushf
or
add
or
inc
lods
push
inc
push
out
cs
imul
xor
mov
mov
jns
sbb
data16
shl
sbb
mov
(bad)
mov
push
loopne
jp
arpl
jge
inc
mov
and
leave
sbb
retf
out
pop
test
hlt
shl
icebp
bound
cmp
(bad)
add
and
(bad)
xchg
mov
gs
xor
xor
aaa
mov
xor
push
inc
jle
sbb
or
push
lock
mov
mov
sub
and
sbb
test
(bad)
sar
aaa
test
or
outs
push
and
xchg
bound
pop
pop
repz
mov
int3
(bad)
popf
std
xchg
icebp
mov
pop
test
pop
mov
jmp
(bad)
lahf
adc
shl
add
jmp
inc
fnstcw
cmp
ret
sbb
ss
jb
lahf
or
sbb
out
and
cmp
mov
jp
inc
into
or
fwait
add
add
retf
es
call
stos
scas
stc
dec
mov
bound
call
adc
loop
jg
pop
lahf
pop
xor
mov
xchg
jecxz
inc
sbb
(bad)
mov
xor
imul
pop
in
dec
aaa
scas
int3
push
xor
test
jge
pop
mov
cmps
daa
add
lods
repnz
pusha
aad
lods
lods
ror
mov
vpavgb
das
pop
adc
cli
dec
cmp
adc
inc
cwde
sar
(bad)
outs
cmp
sub
fldcw
xchg
sub
inc
and
xor
das
call
mov
pop
or
and
dec
popf
or
and
xor
mov
ret
xchg
daa
cmps
mov
retf
enter
retf
jne
inc
mov
sub
sbb
lock
jecxz
adc
dec
xchg
icebp
inc
out
fsubrp
movs
pop
in
pop
inc
stos
(bad)
ds
jmp
imul
push
mov
dec
aad
nop
cmp
xchg
fwait
inc
(bad)
adc
xchg
retf
js
out
test
xlat
jecxz
outs
cmp
btr
cmps
dec
jecxz
aad
in
scas
ss
fmul
mov
dec
test
lahf
sub
(bad)
cmp
push
pop
sub
sbb
setns
pop
outs
mov
sub
jmp
mov
(bad)
ja
sub
les
push
outs
loopne
stos
push
stc
mov
add
shl
jbe
mov
rcl
or
jne
js
test
mov
out
dec
pop
pop
jae
adc
xor
test
push
push
(bad)
sub
pusha
movaps
test
push
ret
int3
mov
mov
push
adc
mov
popa
mov
add
jmp
int3
mov
test
mov
call
or
mov
mov
cmps
pop
lahf
les
scas
pop
push
loopne
shl
fdiv
or
lea
mov
fs
mov
dec
mov
ret
pusha
aas
inc
ins
in
jle
and
xor
mov
xchg
into
scas
fild
jg
std
mov
data16
mov
jb
push
daa
lahf
test
push
bound
inc
pusha
(bad)
test
test
sub
xchg
add
aaa
arpl
sbb
in
bound
xchg
cmp
pop
jno
fsubp
pop
shl
popa
rcl
std
cmc
loop
inc
push
mov
xchg
mov
cs
lea
mov
sahf
push
push
jns
sub
pop
mov
mov
cmp
xor
mov
mov
in
mov
sbb
jle
test
push
pusha
xchg
pop
mov
pop
xor
cvtpi2ps
dec
(bad)
call
and
cmp
loope
cmps
adc
mov
loop
sub
dec
xchg
mov
into
cs
test
(bad)
scas
inc
fst
aam
cdq
mov
mov
push
ror
es
popa
sbb
(bad)
addr16
cdq
cmp
call
mov
push
cmp
out
dec
dec
cmp
xlat
loop
mov
imul
sub
stos
xor
push
std
mov
test
or
or
arpl
fld
push
dec
(bad)
sti
mov
jl
jae
and
adc
jg
out
push
jns
retf
inc
mov
push
ds
imul
jmp
out
push
inc
push
imul
cmps
dec
ror
(bad)
sti
push
or
xchg
adc
outs
push
jl
jne
loope
mov
inc
mov
jmp
loopne
mov
sub
iret
jle
bound
leave
icebp
retf
jns
ja
mov
ja
fs
jl
sahf
or
or
cmp
push
arpl
mov
std
cli
mov
xor
adc
mov
mov
outs
jo
adc
dec
scas
sub
and
mov
mov
or
add
adc
xchg
jae
scas
addr16
dec
in
fisubr
jbe
adc
fild
shl
adc
pushf
pop
and
iret
int3
add
rcl
jnp
test
fnstsw
aad
add
push
(bad)
jbe
adc
mov
mov
sbb
ret
dec
lea
mov
adc
inc
das
test
addr16
and
test
aaa
ins
adc
ja
icebp
(bad)
(bad)
adc
jg
pop
sbb
sub
pop
add
jmp
cmp
sbb
push
push
mov
call
and
sbb
shr
out
jo
repz
dec
push
xlat
mov
cmp
mov
scas
mov
out
mov
ficomp
leave
or
das
mov
loopne
and
sar
push
loopne
jbe
lahf
mov
push
push
dec
adc
sub
inc
stos
inc
rcr
xchg
or
xchg
cmp
cmp
neg
mov
xchg
sbb
test
mov
aas
inc
sbb
adc
jecxz
sahf
cmps
push
test
rcr
lods
pop
sub
cmp
popa
xchg
jnp
jns
dec
push
xchg
xor
sbb
xchg
or
inc
lods
sbb
mov
xlat
das
das
sti
push
sbb
ja
and
repz
pavgw
mov
inc
add
mov
(bad)
jnp
pop
(bad)
call
je
pop
fisubr
xor
(bad)
ins
shr
adc
movs
or
push
int3
cli
shl
adc
mov
or
cmp
xor
test
sar
push
movs
xchg
adc
adc
rcr
push
pop
das
jb
cmc
fld
iret
jno
adc
dec
sahf
xchg
pop
mov
fisub
xor
or
dec
out
int
or
push
sbb
icebp
mov
rcr
jle
fild
xchg
pop
xor
xor
fnsave
jmp
cmp
pop
iret
and
loope
cmp
jmp
inc
leave
adc
(bad)
call
rcl
test
xor
(bad)
dec
sar
cwde
imul
mov
sbb
repnz
sti
out
shr
jge
lds
fwait
sbb
mov
in
movs
push
inc
into
rcr
data16
call
daa
mov
ss
stos
call
or
into
loop
nop
pushf
jo
push
inc
retf
pop
cmps
inc
outs
push
int
jae
out
push
lahf
dec
xor
(bad)
dec
mov
mov
mov
pop
popf
mov
and
fwait
sub
push
pop
ss
outs
leave
imul
mov
stc
cld
loope
shr
xor
pop
sbb
pop
lods
int3
movs
dec
fwait
(bad)
mov
jmp
mov
xor
pop
mov
mov
loopne
aaa
icebp
arpl
mov
pushf
push
sub
jge
test
ret
jno
mov
lahf
outs
hlt
shl
retf
ss
add
out
(bad)
aas
mov
test
lds
and
test
mov
jmp
push
scas
clc
mov
add
neg
jae
mov
pop
mov
inc
mov
adc
push
cmp
mov
leave
arpl
dec
(bad)
ja
sub
ins
out
mov
push
jmp
bound
cmc
shl
sbb
int
call
xor
movs
mov
cmp
jo
sti
xor
push
in
mov
cmp
sub
jle
aas
ret
aas
cmc
and
sbb
test
test
or
in
xchg
inc
pop
mov
popf
cmp
cmp
(bad)
mov
je
inc
das
ret
daa
test
or
lods
jb
lds
das
(bad)
scas
push
std
in
sub
shr
mov
lahf
gs
pop
retf
cwde
or
in
mov
fmul
in
into
and
movs
dec
mov
lds
icebp
or
xor
cli
outs
std
int3
or
bound
xor
in
add
lds
push
jno
scas
jmp
or
addr16
inc
pop
daa
arpl
mov
or
cmp
retf
add
rcr
test
retf
daa
inc
mov
sbb
scas
stos
cmp
pop
movs
inc
aaa
ret
shl
mov
jo
add
loop
xchg
aaa
cld
and
es
mov
mov
inc
sbb
in
loop
ret
nop
cmp
sar
cmp
cdq
gs
mov
mov
mov
mov
nop
lds
mov
push
adc
cmps
mov
pop
push
stos
aad
jg
addr16
sbb
xor
or
dec
rcr
out
mov
inc
int3
jge
xor
cmp
into
xchg
mov
out
jp
(bad)
into
rol
pop
mov
or
adc
leave
jmp
push
add
or
rol
inc
push
or
cmp
push
sub
mov
push
shl
push
inc
sahf
lds
(bad)
dec
enter
aam
mov
mov
adc
ficomp
dec
jl
inc
in
dec
adc
in
test
jmp
dec
or
cld
push
jo
lods
and
adc
mov
push
lock
stc
xor
xor
push
(bad)
pop
or
jo
adc
jne
push
test
in
(bad)
mov
inc
lds
out
pushf
add
push
(bad)
addr16
jnp
mov
iret
jnp
adc
aam
ret
mov
ds
push
xchg
test
stos
data16
jo
xchg
test
clc
xor
lods
in
push
test
add
sub
cmp
out
rol
xor
cmp
pop
test
xor
add
push
cdq
cwde
pop
je
dec
mov
mov
pop
imul
(bad)
or
mov
add
(bad)
xor
push
or
jp
push
add
push
push
and
(bad)
mov
add
sub
xchg
xor
(bad)
xor
mov
movs
sbb
push
movs
shl
sub
mov
cmps
ror
(bad)
out
dec
cmps
mov
xchg
in
dec
sbb
int
pop
shr
pop
movs
test
ins
pop
ror
outs
retf
lds
scas
sbb
sub
clc
mov
fisub
aas
fbstp
movs
mov
fidiv
or
test
jnp
hlt
mov
rol
stos
jbe
adc
xchg
cmc
fnstcw
cmp
sti
sti
mov
out
push
or
into
hlt
mov
mov
push
ss
pop
loopne
jle
test
or
lahf
xchg
add
xor
xchg
push
inc
daa
push
and
adc
mov
sbb
mov
fisttp
lods
rol
and
fyl2xp1
xchg
sbb
sbb
add
scas
mul
add
in
push
fild
popf
jae
dec
rep
fistp
mov
ror
lock
imul
inc
(bad)
call
dec
push
in
and
cmp
and
pop
out
outs
mov
push
stos
jg
xchg
pushw
jnp
lds
jne
cmp
out
imul
cmp
stc
retf
inc
add
cmps
repz
movs
push
push
out
mov
js
jne
nop
ins
test
retf
nop
call
lds
push
mov
pop
mov
rcl
jge
sub
ja
loope
test
fidiv
add
leave
push
xchg
sub
adc
dec
inc
iret
sbb
sbb
fild
push
sti
ds
inc
ficomp
ret
or
adc
push
jecxz
pop
xchg
lods
retf
jle
and
and
nop
jae
xor
mov
adc
pop
jle
xor
int
rcr
scas
mov
outs
cmp
in
test
iret
repz
dec
ins
scas
aam
push
pop
adc
push
mov
arpl
sbb
xlat
mov
and
mov
and
xor
fnstsw
jns
(bad)
jno
dec
jmp
mov
ja
aaa
sbb
cs
call
enter
cmp
inc
mov
pop
(bad)
pop
xor
or
xchg
xor
inc
or
jmp
movs
sub
inc
mov
adc
mov
mov
mul
pop
lods
inc
mov
xor
outs
out
(bad)
(bad)
push
stos
adc
push
xchg
cmps
or
frstor
cmp
sub
or
addr16
xchg
mov
out
push
cmp
fnsave
in
in
lahf
addr16
enter
cmp
xchg
imul
push
adc
xchg
dec
ja
mov
imul
xor
push
sub
outs
push
sub
or
mov
pop
(bad)
mov
(bad)
sub
cmp
add
jmp
rcl
out
and
or
imul
dec
mov
fcmovbe
pop
add
out
xchg
sub
pop
mov
bound
aam
leave
and
inc
mov
mov
js
in
mov
xchg
jge
mov
cmp
xchg
lods
inc
jb
xor
outs
popfw
xor
pop
std
inc
cmps
lods
loope
xor
pop
mov
jmp
stos
iret
add
fist
fcom
xlat
inc
push
cld
shr
pop
lea
fwait
xchg
enter
xchg
clc
neg
push
lea
jns
retf
icebp
cmp
and
test
sbb
lds
jb
fst
mov
stc
das
mov
ffree
adc
dec
xor
inc
sub
add
lahf
mov
lea
imul
cmp
fwait
aad
out
xchg
mov
pushf
aaa
push
xchg
shl
cs
sub
pusha
xchg
and
iret
stos
ss
out
sub
mov
das
fmulp
add
mov
scas
xchg
pushf
inc
cmps
mov
int
or
fcmovu
mov
sbb
ss
cmp
mov
mov
sub
mov
clc
push
jb
mov
out
inc
scas
sub
loope
sbb
fnstenv
and
push
retf
mov
leave
iret
rol
or
sti
inc
daa
(bad)
in
cmps
clc
jle
xchg
cwde
pop
out
imul
push
jl
inc
rol
jns
inc
or
push
jl
push
paddw
lods
mov
outs
imul
push
test
add
inc
cld
cld
retf
dec
sbb
(bad)
arpl
cmc
repnz
or
mov
sar
bswap
mov
mov
out
out
sti
inc
leave
loopne
imul
xor
cmp
sbb
cmp
data16
sub
xor
and
mov
push
dec
dec
ret
in
jno
mov
int
xchg
sub
mov
sub
ja
mov
rcl
xor
loope
scas
jge
cmp
arpl
aam
sub
jbe
cwde
mov
and
sbb
dec
cdq
dec
sbb
pop
add
dec
lock
xor
call
pop
inc
nop
les
mov
mulps
aad
punpcklwd
xchg
xchg
xor
hlt
adc
(bad)
mov
dec
xchg
hlt
hlt
loope
sti
in
lds
ficom
call
jb
not
dec
cmp
push
mov
lsl
pop
push
pop
retf
sub
iret
repnz
jns
sbb
pop
mov
xchg
xor
xlat
stc
into
xchg
inc
push
dec
je
aad
push
push
mov
cli
ret
dec
dec
icebp
adc
cmp
push
(bad)
add
stos
jl
jl
and
sbb
jnp
and
add
movs
(bad)
mov
sbb
int3
fisttp
push
mov
ins
inc
mov
jp
clc
sar
jns
xor
es
(bad)
fcomp
aad
fs
movs
popa
adc
mov
mov
add
push
pop
cmp
fs
pop
push
das
inc
sub
inc
cvtdq2ps
mov
cmp
call
popa
fst
sahf
jmp
cmps
mov
inc
add
fiadd
add
aas
outs
inc
fiadd
jl
mov
xchg
xchg
adc
outs
arpl
daa
pop
adc
mov
mov
lods
dec
xor
rcl
and
cmps
pusha
push
loope
pop
loopne
pop
test
fnstenv
cwde
xchg
adc
push
mov
shl
or
popa
pop
in
popf
test
icebp
lock
ja
add
fiadd
xchg
dec
sub
sar
xchg
or
inc
push
dec
arpl
rcl
push
pusha
jbe
push
lods
imul
(bad)
rcr
jne
mov
out
iret
(bad)
and
in
cmp
(bad)
nop
movs
adc
add
xchg
and
not
loopne
adc
mov
mov
and
xchg
lods
daa
daa
(bad)
sbb
shl
(bad)
sti
rol
mov
gs
repz
mov
mov
push
add
jnp
push
js
push
ins
rol
pushf
fiadd
jns
(bad)
fidivr
aad
or
sbb
push
add
sub
fldenv
enter
out
outs
arpl
pop
mov
int3
dec
mov
push
dec
movs
leave
hlt
and
jb
pop
pop
sub
cmp
cmp
cwde
add
mov
in
mov
pop
sbb
jl
mov
loop
test
(bad)
idiv
lods
jge
mov
out
(bad)
cld
jmp
out
mov
mov
test
fisub
fsubr
ins
or
xor
iret
cmc
arpl
or
cmp
and
into
movs
jle
das
sbb
leave
sbb
mov
and
call
push
in
pop
xor
adc
mov
mov
pop
dec
mov
pop
sub
loope
cmp
mov
aaa
sub
(bad)
scas
out
mov
out
cmp
das
shl
pop
and
dec
ins
mov
jmp
aam
add
push
cmp
dec
xchg
dec
sub
jo
fsub
cmp
fs
call
or
sub
sbb
mov
mov
les
fcomp
inc
ret
sbb
sbb
into
pop
ins
add
lahf
mov
mov
add
leave
mov
in
fdivr
test
out
inc
xchg
and
loopne
repnz
mov
adc
ret
fdiv
out
add
inc
push
(bad)
addr16
push
mov
bound
push
cmp
dec
idiv
mov
stos
cld
pop
das
iret
dec
xchg
test
push
sahf
jae
stos
mov
and
xor
add
adc
inc
jl
adc
or
dec
fstp
xor
cwde
rcr
in
movs
leave
ret
xchg
cmp
sbb
xchg
cwde
sar
cmp
sar
jmp
push
out
push
mov
(bad)
cmp
xchg
cmp
sub
mov
pop
pushf
aad
jne
pop
cmp
inc
inc
jp
or
sub
pop
hlt
xor
adc
adc
dec
into
aas
shl
add
jo
icebp
cmp
dec
inc
jnp
sub
out
jmp
loope
add
push
ja
inc
retf
mov
loop
inc
gs
mov
jne
mov
push
daa
in
cld
cmps
ja
fidivr
mov
dec
push
jle
sbb
xlat
fs
xor
mov
dec
jne
stc
xchg
sub
(bad)
jmp
dec
shl
and
cmp
jnp
xchg
dec
inc
mov
sahf
out
jmp
js
adc
or
jne
sbb
inc
hlt
pop
sub
pop
mov
imul
je
push
fisttp
mov
push
and
cmc
fild
mov
outs
jp
mov
sbb
and
xchg
mov
mov
push
stos
fwait
lds
loope
xchg
dec
movs
sub
cmp
mov
(bad)
stc
push
jnp
push
js
ja
mov
(bad)
and
lods
add
outs
test
adc
cld
outs
dec
jb
pop
fcmovu
sti
jl
cdq
je
jno
mov
xchg
push
aas
pushf
lods
aam
mov
daa
into
lock
inc
xor
fsubr
(bad)
jl
jbe
int3
xor
push
mov
jae
cmps
mov
or
push
loop
cmp
mov
mov
retf
aas
dec
rcl
pop
out
jb
das
xchg
jp
call
in
sub
cmp
push
sbb
cmps
inc
xchg
mov
inc
idiv
stc
stc
and
hlt
mov
mov
shl
icebp
pop
(bad)
push
neg
retf
pop
and
xchg
jae
repnz
jecxz
stos
mov
aam
(bad)
out
sbb
or
aas
sbb
xchg
in
sbb
mov
or
ins
mov
or
cs
(bad)
pop
push
lods
cmc
mov
stos
push
xor
xchg
inc
lea
scas
sahf
aam
dec
inc
or
push
push
test
lods
aaa
cmp
int
aas
add
ss
fmulp
inc
lahf
and
jg
ins
sub
inc
repnz
ins
mov
add
out
adc
test
ins
in
out
(bad)
cmp
mov
push
mov
pop
xchg
xor
jns
mov
push
mov
jnp
sti
daa
in
icebp
xchg
hlt
int3
(bad)
out
fild
dec
pop
rcl
push
sbb
lods
sub
imul
jbe
loop
daa
push
enter
ins
add
sbb
icebp
dec
movs
jmp
pop
pop
repz
sub
into
test
sbb
bswap
or
xor
test
inc
adc
adc
and
dec
cmp
movs
(bad)
push
repnz
xchg
sbb
mov
test
(bad)
xor
pop
adc
pop
lods
jb
inc
jmp
xor
sti
jbe
push
cmp
xor
test
jbe
jnp
(bad)
xor
sub
inc
push
push
mov
rcr
out
and
adc
pushf
cwde
pop
sar
add
nop
jecxz
xor
jmp
idiv
hlt
imul
lods
jns
fdiv
mov
cmps
pop
mov
lock
sbb
(bad)
jmp
loope
test
rol
out
imul
sub
in
xchg
into
cmp
das
dec
bound
and
or
xor
push
jmp
inc
stos
mov
bound
aam
pop
mov
inc
sahf
dec
out
adc
aam
xchg
out
add
or
fs
retf
xchg
repz
stc
xchg
clc
iret
sub
enter
xor
in
jno
sbb
clc
lahf
inc
std
add
xchg
cdq
shl
or
(bad)
aad
mov
push
imul
add
ret
movs
mov
sub
jge
addr16
mov
pop
int
add
test
adc
aam
ds
push
cld
mov
cmp
fcmovb
pop
inc
addr16
cmps
loop
lods
loope
pop
imul
add
out
or
cmp
(bad)
in
or
and
jae
ss
cmps
gs
leave
in
push
or
adc
mov
add
adc
icebp
mov
aad
jbe
stos
mov
xor
out
pop
icebp
imul
xchg
cmps
ficomp
not
retf
mov
mov
xlat
iret
jmp
fbstp
(bad)
lahf
sub
and
xchg
pop
mov
sub
mov
popf
fstp
idiv
lea
das
mov
sar
les
lea
in
pop
stc
cmps
hlt
dec
rcl
and
(bad)
mov
(bad)
retf
and
iret
lock
sti
test
and
out
rol
scas
fucomi
sub
outs
retf
cmc
sub
adc
mov
scas
in
xchg
pop
or
cmp
push
xchg
arpl
iret
mov
xchg
dec
xchg
ret
nop
mov
or
jns
(bad)
fdiv
cmp
jns
push
loope
sub
pushf
ins
mov
cli
pop
sub
call
mov
ss
adc
fcomp
jae
dec
stc
pop
sbb
mov
in
adc
jae
test
adc
jnp
dec
pop
ins
fld
lods
cmp
pop
sbb
loop
dec
cmp
pop
imul
lea
fcom
jns
and
xchg
(bad)
sbb
(bad)
pop
xor
jg
(bad)
test
and
mov
das
dec
lahf
and
sub
lods
pop
(bad)
ss
retf
jnp
pop
lahf
and
ror
fcomp
sbb
(bad)
mov
dec
stos
dec
mov
push
pop
jp
pop
and
outs
loopne
dec
in
xchg
scas
sahf
enter
xchg
mov
dec
jl
xchg
cwde
shl
rcl
adc
scas
mov
js
mov
dec
inc
cdq
jg
mov
jmp
movs
enter
iret
xchg
xchg
push
fld
dec
fiadd
pop
sub
mov
mov
call
and
aam
sub
lea
in
dec
cmp
xchg
xor
or
paddq
jmp
int3
pop
leave
jnp
mov
add
cdq
jbe
mov
jp
mov
jns
push
jg
sub
arpl
jmp
inc
dec
daa
cmp
cmp
xchg
push
les
aaa
test
clc
push
std
dec
in
and
daa
mov
neg
pop
cmc
adc
adc
xchg
fnstenv
dec
(bad)
aam
sbb
adc
pop
inc
daa
dec
(bad)
je
add
add
pop
push
add
or
loop
jb
addr16
pop
aaa
mov
sbb
mov
out
shl
rol
stc
pop
mov
not
mov
pop
fisttp
movs
das
clc
dec
fst
scas
icebp
and
mov
adc
mov
(bad)
sti
sar
xchg
in
hlt
adc
cs
mov
popf
in
cwde
pop
push
mov
mov
jp
adc
inc
loop
push
popa
fistp
test
pushf
dec
mov
pop
or
jg
test
sahf
scas
cmps
repnz
ret
push
out
sub
idiv
mov
out
dec
jno
cmp
(bad)
out
xchg
ds
sub
jb
mov
cdq
enter
imul
jp
cmp
scas
mov
out
scas
cmp
xchg
rol
aas
test
cli
(bad)
out
ret
fbstp
(bad)
leave
xor
ins
cmp
sti
lds
cmp
pop
lds
sti
xchg
or
int3
inc
xor
jo
lea
bound
shl
and
adc
aaa
inc
mov
adc
in
sub
popa
or
imul
in
imul
xor
dec
add
in
std
rcr
mov
sub
fcmovne
dec
fidiv
xor
adc
jl
gs
into
gs
jne
inc
arpl
sbb
inc
dec
mov
cmp
sbb
mov
sub
jle
je
or
push
(bad)
jmp
adc
ror
xor
mov
addr16
dec
loop
sbb
in
xor
retf
fld
mov
sbb
dec
cs
pop
sub
leave
pop
int
adc
sahf
jg
call
and
add
cmps
sbb
xchg
dec
jmp
adc
sar
lds
sbb
jb
cmc
xor
(bad)
cmp
ja
jmp
dec
js
or
je
(bad)
into
aaa
dec
cdq
scas
cmp
repz
cld
push
push
scas
cli
inc
(bad)
aaa
fidiv
jle
dec
jp
sbb
xchg
jbe
dec
xchg
pusha
aad
xchg
jle
cs
fldl2t
add
jl
mov
xor
stc
fucomp
test
test
ror
jl
jbe
or
pop
adc
mov
add
mov
sbb
aas
dec
out
jge
sti
out
pop
and
sbb
push
xchg
pop
stc
pusha
push
loop
(bad)
dec
jle
outs
cmp
push
fsubr
bound
mov
lds
and
push
push
push
cmp
fisubr
xlat
icebp
in
stc
je
ins
ins
wbinvd
dec
lea
mov
xor
bound
mov
jg
test
lea
clc
in
push
and
sti
cli
fcom
xchg
mov
int3
pop
daa
rol
in
pop
and
sbb
mov
in
xor
mov
popa
push
stc
cli
mov
jecxz
cmp
dec
stos
mov
in
mov
adc
mov
ror
repnz
mov
scas
cmp
add
lock
jo
shl
(bad)
loop
lods
nop
mov
and
lea
jmp
inc
arpl
cmps
stos
mov
into
mov
fld1
mov
jle
std
or
cmp
and
dec
push
bound
fisttp
in
inc
les
aas
jb
xor
ret
int
pop
loope
and
add
and
xchg
mov
xor
int3
mov
test
add
cmps
mov
mov
jno
cmp
sub
outs
mov
rol
or
pop
adc
pop
out
gs
hlt
or
sbb
push
add
or
shr
dec
mov
fbld
ret
sub
cmp
and
mov
push
shr
dec
inc
jle
adc
enter
or
ss
or
xchg
dec
mov
call
push
enter
sub
out
sahf
sbb
movs
test
sub
pop
sbb
mov
sti
(bad)
mov
call
lods
push
adc
repnz
pop
sbb
or
add
fiadd
sti
sti
dec
gs
js
stc
cmp
popa
cdq
shr
inc
jnp
out
in
pop
dec
popa
or
test
add
and
and
push
pop
out
push
(bad)
mov
fldcw
dec
sub
cdq
shl
fwait
inc
mov
test
cmp
inc
mov
inc
scas
ds
sbb
aaa
sub
mov
ficom
stos
into
test
push
lea
fsub
aad
retf
sub
mov
mov
mov
xchg
test
loopne
jge
pop
retf
rcl
repz
jge
out
add
shr
aaa
inc
mov
add
sbb
fnstcw
dec
mov
jne
call
das
int
mov
mov
sub
mov
adc
push
out
sub
arpl
sbb
int
cmp
xchg
push
(bad)
(bad)
jecxz
ja
cmp
icebp
dec
loop
mov
mov
mov
nop
es
lahf
lea
push
test
clc
fisub
aas
ja
mov
pop
and
add
xor
or
sbb
popf
fisttp
(bad)
daa
dec
or
mov
inc
iretw
or
push
add
out
idiv
lea
push
sbb
add
test
repnz
dec
sbb
inc
push
push
mov
add
retf
xchg
and
push
lahf
mov
pop
and
sub
jo
inc
xor
in
add
mov
xchg
and
(bad)
add
loop
les
jecxz
rcl
lock
xchg
dec
xlat
dec
lock
push
inc
mov
lods
fdivr
xor
push
jge
ins
fs
jecxz
lods
jmp
js
je
(bad)
dec
mov
mov
cli
jb
push
(bad)
outs
jo
ins
mov
push
in
push
test
xchg
or
push
push
cmp
xchg
movs
fdivr
sbb
mov
pop
jnp
jecxz
popa
into
stc
push
jge
retf
sub
jecxz
sub
ins
cmp
inc
add
dec
mov
repz
pushf
popf
in
inc
movs
test
mov
test
cli
cmp
mov
xchg
inc
add
imul
xor
std
shl
and
je
in
and
cli
jge
mov
xor
push
mov
movs
stos
out
out
sbb
pop
xor
dec
mov
les
outs
rol
push
xchg
xor
mov
bound
pop
adc
out
retf
out
ins
pop
daa
je
jl
jg
mov
test
cwde
jne
or
xchg
ja
mov
jns
out
and
outs
or
movs
add
std
into
mov
int
xchg
out
gs
push
and
sti
out
shl
stos
pusha
and
and
imul
in
les
(bad)
in
push
jg
mov
mov
aaa
mov
cwde
fbstp
mov
mov
rcr
push
mov
and
test
xchg
repz
jp
imul
test
xor
(bad)
(bad)
(bad)
and
(bad)
ficom
ror
xchg
jae
test
cmps
js
fwait
or
mov
pop
aad
push
pop
xor
xchg
cmp
(bad)
jne
js
or
ret
ss
ins
in
cs
mov
(bad)
fadd
cld
sbb
push
shl
inc
ds
aas
(bad)
dec
sub
xor
pop
cmps
arpl
mul
pop
add
fnsave
jmp
dec
ret
inc
int
mov
out
fadd
int3
jns
pop
mov
ss
or
mov
cmp
sbb
js
popa
fisttp
fcom
cmp
sbb
cli
dec
xor
push
mul
xchg
sbb
aad
cmps
mov
mov
shl
jmp
mov
add
lock
pushf
dec
imul
retf
inc
das
xor
and
add
in
cmp
(bad)
in
pop
mov
jle
pusha
in
shl
mov
cld
dec
stos
mov
out
adc
add
loopne
into
cmp
leave
call
lea
jno
dec
into
(bad)
mov
pop
in
add
mov
sbb
jbe
js
call
jl
xor
fwait
sbb
das
cli
scas
cmp
push
pop
lahf
cmc
xchg
daa
cmp
sub
push
xchg
sti
pushf
dec
ret
mov
sbb
jno
mov
sub
and
mov
bts
sub
pop
push
adc
adc
scas
mov
cmp
xchg
arpl
ret
xor
cli
push
test
dec
dec
mov
ret
repnz
cld
mov
mov
js
clc
mov
das
inc
adc
loopne
mov
jnp
xor
and
add
or
in
test
movs
xchg
es
fwait
adc
stos
mov
call
(bad)
pop
push
dec
in
outs
mov
sbb
out
pop
sahf
jge
mov
pop
bound
(bad)
jmp
(bad)
(bad)
fistp
fnstenv
mov
cmps
or
imul
icebp
pop
jbe
xchg
xchg
or
sahf
jo
popf
cdq
inc
adc
sub
pop
or
ficomp
jg
mov
sub
ins
xchg
popa
fstp
cdq
pushf
cmp
mov
in
cld
add
sbb
loope
cmp
std
jns
popa
cmp
js
lahf
mov
in
std
xor
and
cmp
xor
enter
mov
les
xchg
add
cmp
(bad)
fs
pop
jle
lahf
mov
je
and
mov
jge
fnstcw
movs
inc
jg
lods
or
mov
mov
lahf
pop
mov
aad
retf
movs
les
lahf
enter
imul
cdq
lahf
xchg
fld
mov
xchg
es
(bad)
test
or
sti
or
fs
adc
pop
inc
ret
stc
int
mov
gs
mov
mov
leave
or
pop
xor
xor
shl
mov
mov
cmps
jmp
xor
mov
lahf
sub
retf
fcomp
fcomp
ins
sbb
popa
sbb
shl
xor
jno
icebp
popa
jl
rol
push
lods
fs
sbb
out
aaa
mov
loop
jb
mov
xor
sub
adc
push
inc
in
repnz
pop
js
int3
push
or
push
mov
pminub
out
mov
and
push
ins
xchg
dec
add
push
iret
ret
sub
sbb
sub
jo
fistp
arpl
movs
or
jbe
neg
mov
stos
mov
cmp
cmp
dec
ret
scas
inc
mov
mov
scas
jno
add
push
mov
in
sbb
outs
jnp
repz
push
dec
or
fcomp
out
and
dec
cmp
inc
ret
or
retf
cmp
(bad)
jecxz
push
pop
ja
mov
ror
cmp
int3
int
lods
fdivp
xchg
fyl2xp1
pop
add
repz
ins
pushf
dec
mov
add
pop
lock
lock
aam
jmp
jo
dec
movs
mov
jae
jecxz
out
xchg
lea
pop
gs
out
inc
xor
push
retf
iret
ins
inc
jle
xor
cmp
rol
mov
mov
loop
inc
into
and
inc
je
loope
out
adc
aad
and
imul
ror
loope
(bad)
cmc
push
adc
out
and
and
lea
xchg
jno
pop
mov
imul
clc
mov
mov
pop
les
shl
push
test
add
push
pop
jae
or
fldcw
jge
mov
outs
js
arpl
idiv
cmc
ret
and
cmp
pop
movs
dec
das
sbb
jo
push
jbe
and
jno
ja
into
xchg
mov
aam
ret
sub
mov
inc
jl
mov
aam
sbb
cdq
call
mov
cmp
test
push
dec
cmps
cdq
pushf
sbb
xchg
cmovb
hlt
mov
stos
lea
adc
mov
dec
dec
xor
shl
mov
mov
std
lea
sub
(bad)
stc
mov
sub
aaa
xchg
mov
jno
xor
push
mov
inc
cmp
adc
rol
jb
retf
add
mov
fldcw
out
enter
push
std
add
mov
mov
(bad)
int
and
loop
add
cwde
into
inc
jno
sbb
lds
or
js
jne
repz
rol
mov
addr16
cli
shr
retf
std
fcomp
adc
in
mov
retf
mov
dec
cld
jl
nop
lahf
sahf
push
cmc
jo
mov
lock
push
fidiv
ret
xchg
in
adc
retf
add
push
xor
lds
out
xchg
and
and
js
or
pop
cdq
cmp
test
sar
xchg
mov
call
dec
pushf
aam
mov
inc
push
mov
fwait
push
mul
jne
sbb
int3
js
sbb
dec
cmc
fidiv
or
fsubp
cwde
dec
je
pop
mov
(bad)
fcmovnbe
cmp
cmp
(bad)
sub
mov
call
repz
ret
push
mov
jp
mov
mov
push
xchg
ds
jg
call
pop
in
movs
cli
mov
or
add
movs
cdq
jp
inc
ficomp
sar
dec
xchg
mov
and
add
in
fimul
mov
add
push
ins
faddp
sbb
jo
retf
push
in
loope
xor
mov
jnp
pop
sti
es
popf
mov
mov
sub
ins
(bad)
out
pop
ins
adc
dec
mov
dec
jno
adc
dec
inc
idiv
iret
push
pop
cmp
mov
push
jmp
(bad)
retf
mov
cmp
retf
gs
loop
or
mov
add
sub
cmps
js
xor
mov
call
imul
pop
fisttp
js
popf
dec
sahf
clc
push
sahf
push
enter
sbb
cli
mov
test
cwde
ret
inc
push
daa
movd
lods
add
gs
stc
in
jo
mov
loope
ins
into
jo
mov
pop
mov
loope
outs
rol
or
mov
sbb
cmp
push
pusha
lods
xchg
lods
sbb
leave
jmp
sub
out
lods
dec
inc
jmp
sub
inc
pop
fldenv
sbb
mov
add
mov
pusha
in
xchg
ja
dec
and
cmp
fldenv
popa
loop
test
pushf
daa
lahf
(bad)
scas
fdiv
fwait
cmp
fisttp
inc
jl
xchg
fwait
mov
mul
push
jns
push
adc
xor
in
test
aaa
bound
adc
push
sbb
lahf
leave
ret
out
cmp
or
call
les
dec
inc
xor
pop
mov
push
inc
mov
in
xchg
jae
jae
popf
pusha
cld
cmp
out
push
jae
xchg
sub
sbb
int3
fcmovu
(bad)
pop
and
repz
ds
(bad)
pop
jno
cmc
push
and
pop
jno
inc
cmp
sbb
mov
jnp
fisttp
retf
inc
idiv
mov
and
mov
sbb
jl
jecxz
mov
int
sub
ins
arpl
lods
rcr
mov
(bad)
dec
out
mov
sbb
retf
xchg
sub
mov
xchg
aas
pop
sub
fild
dec
shl
cmc
push
gs
sub
inc
stos
mov
xor
test
adc
or
into
sbb
inc
jp
xchg
jl
xor
push
pop
mov
fwait
call
sub
or
pop
retf
fwait
bound
repnz
adc
ficomp
dec
dec
dec
popa
add
inc
sub
dec
inc
not
push
and
ret
into
cdq
jmp
rcl
mov
popf
add
push
outs
xchg
test
jbe
in
movs
out
gs
push
xor
aaa
mov
in
imul
xchg
inc
fdivr
pop
cmp
popf
xchg
cld
dec
shr
out
jl
ins
rol
push
or
mov
arpl
or
pop
icebp
(bad)
psllw
fs
mov
imul
fild
int
pop
mov
push
mov
sub
xor
xor
mov
mov
add
push
jbe
add
icebp
in
pop
adc
ins
jns
push
sar
call
mov
std
pop
es
mov
je
(bad)
fistp
mul
sbb
es
pop
mov
loopne
add
push
xor
inc
mov
pop
dec
lds
mov
stos
inc
sub
inc
mov
test
inc
mov
and
pushf
adc
and
(bad)
in
xchg
aas
adc
jl
jae
outs
ds
ret
dec
sub
jnp
xchg
popf
das
or
sub
in
iret
lds
addr16
lahf
scas
lock
lock
jae
out
imul
test
int
mov
retf
inc
aaa
hlt
cwde
xor
jno
mov
or
repz
xchg
lock
imul
dec
add
jmp
and
sbb
test
sbb
sub
sub
mov
movs
and
mov
push
mov
and
fild
inc
pop
adc
inc
push
daa
sti
test
retf
dec
jb
dec
icebp
push
sub
jno
pop
cmp
fcomp
and
mov
dec
aas
xchg
xor
les
xor
gs
or
dec
push
mov
or
pop
jnp
xchg
call
hlt
ins
add
pop
or
bnd
xchg
pop
inc
sub
push
fwait
lea
js
cdq
cmps
xchg
into
cmp
add
jns
dec
in
fldenv
pop
cmps
(bad)
outs
adc
push
scas
cmp
leave
hlt
ja
(bad)
push
sar
stos
cmp
mov
fst
data16
jns
cmp
cmp
(bad)
out
mov
dec
and
call
(bad)
cmps
vpsubd
icebp
or
mov
(bad)
es
cdq
sub
pop
imul
gs
xchg
push
and
je
stos
inc
icebp
les
sub
call
ins
xor
shl
inc
jmp
out
fcomp
fisttp
mov
cmp
jns
loop
shl
xchg
mov
icebp
je
sti
mov
int3
fmul
aam
pop
jle
pop
mov
mov
inc
sub
in
stos
cmp
dec
lds
stc
clc
retf
fwait
mov
cmp
push
aaa
or
dec
pusha
sub
push
sub
jae
push
popa
out
and
cmp
sub
stc
push
movs
imul
in
inc
sub
out
imul
push
retf
inc
pop
mov
cmps
retf
push
mov
loop
(bad)
cmc
mov
xchg
(bad)
mov
mov
ins
aas
push
push
inc
sbb
aam
sar
retf
jnp
inc
js
clc
pop
add
dec
mov
jl
mov
jae
stos
arpl
pop
dec
test
jmp
cmp
in
jns
movs
jae
sbb
add
pop
retf
mov
popf
add
mov
mov
dec
mov
fcom
add
dec
arpl
jmp
xchg
add
jb
add
test
cmp
idiv
push
(bad)
rcl
xor
stos
jns
cmp
push
in
mov
xchg
adc
loope
icebp
test
movs
lods
inc
icebp
fwait
cmp
clc
mov
cmp
adc
or
adc
push
mov
sbb
ins
or
push
cmp
jo
mov
outs
out
adc
mov
(bad)
lods
dec
(bad)
popa
pop
cli
jg
jae
xchg
(bad)
(bad)
sahf
pop
mov
cmp
outs
pop
xchg
xchg
bound
imul
sbb
das
push
loopne
mov
out
ret
push
or
aaa
mov
aad
jecxz
sub
cmp
dec
sub
outs
xchg
push
jecxz
push
jne
popf
not
dec
xchg
dec
test
push
lock
or
movs
(bad)
xchg
dec
pop
(bad)
aam
loop
xlat
mov
ja
test
adc
mov
div
xchg
jge
xchg
fild
push
cld
inc
dec
push
call
pop
jns
aaa
ds
leave
cmps
xor
pop
mov
add
cmp
push
sub
push
push
cmp
xchg
xchg
mov
xor
xor
dec
std
sub
sbb
jmp
rcl
movs
xchg
fwait
in
push
and
popf
sbb
sbb
and
mov
pop
stc
stos
or
pusha
jmp
std
sub
(bad)
xlat
loopne
(bad)
fisttp
and
loop
mov
dec
mov
jns
sub
adc
retf
loop
call
or
mov
pop
mov
imul
pop
int
xlat
ror
xor
jns
jb
mov
jp
ins
xlat
mov
fdiv
dec
lods
jmp
call
adc
adc
pop
test
sbb
mov
fisub
mov
gs
xor
int3
in
div
mov
mov
scas
test
sub
mov
add
sub
push
lea
gs
jmp
mov
fistp
pop
mov
push
add
cmp
fs
(bad)
adc
imul
pop
push
pop
add
test
xchg
xor
dec
dec
imul
leave
(bad)
movs
aam
sbb
into
push
repnz
inc
mov
inc
sbb
mov
jmp
xchg
retf
stos
adc
out
outs
ins
fsub
pop
jge
mov
or
das
test
pop
ret
push
imul
fisubr
popa
out
jae
test
push
in
shl
mov
arpl
xchg
mov
int
inc
lea
ins
rol
movs
adc
push
clc
fincstp
xor
adc
aaa
or
mov
in
mov
jnp
pop
and
call
xchg
pop
cli
jne
loope
jns
test
mov
or
and
inc
or
or
and
inc
cs
loopne
pushf
call
lods
rcr
xor
imul
jmp
ins
inc
dec
and
fwait
add
(bad)
sbb
jmp
push
cld
mov
hlt
loop
es
dec
cs
and
lods
mov
xchg
and
retf
das
test
jno
xor
lods
je
in
mov
dec
outs
popf
pop
push
push
(bad)
ins
test
mov
shl
cmp
(bad)
or
repnz
mov
clc
mov
cmps
ret
in
push
aad
adc
mov
jle
mov
mov
pop
(bad)
test
retf
aam
and
lahf
pushfw
pop
cld
sar
sub
and
idiv
mov
in
cmc
sbb
xor
std
jo
adc
or
(bad)
movs
imul
jle
inc
adc
out
inc
jmp
add
push
cmps
cwde
mov
cmp
movs
(bad)
sub
xchg
mov
inc
pop
xor
lea
(bad)
iret
loope
imul
lea
shl
lock
push
leave
in
out
in
jno
ret
bound
sub
in
and
add
scas
dec
xor
dec
clc
pop
jno
mov
and
out
cmps
inc
rcr
pop
sbb
and
loopne
or
xlat
test
inc
jmp
mov
jnp
fist
dec
pop
ins
stos
mov
sub
sub
enter
pusha
or
cld
shr
aas
fcomp
inc
ror
(bad)
repnz
test
movs
movs
shl
test
sub
xor
std
(bad)
xor
test
outs
test
and
int3
pop
mov
aaa
stos
ja
cmp
jg
test
add
hlt
cs
cwde
inc
xor
jmp
inc
add
lea
mov
(bad)
mov
ret
test
mov
jb
jnp
pop
pushf
cld
or
int3
sbb
mov
int3
or
cmp
push
push
ja
adc
push
mov
(bad)
test
pushf
and
push
call
aaa
pop
and
push
dec
shr
adc
aam
jno
les
fwait
mov
push
js
sub
mov
pop
dec
retf
xchg
inc
push
pop
fwait
aaa
test
loopne
mov
xor
bound
xor
xchg
into
sub
cwde
push
push
stos
jl
(bad)
outs
popf
pop
fldcw
adc
push
inc
ss
jnp
xor
xor
and
loope
test
shl
push
xor
push
adc
div
sbb
sbb
pop
push
lock
jecxz
stos
adc
mov
mov
out
test
cmps
jg
or
mov
add
js
lea
xchg
out
dec
je
xchg
test
shl
fwait
jnp
sub
xchg
and
xlat
hlt
dec
inc
or
out
or
xor
lahf
and
mov
mov
inc
cmps
pop
xor
mov
fist
jg
push
pop
inc
push
pop
jne
outs
xchg
mov
lds
shl
clc
cmp
sbb
aas
adc
inc
adc
or
loop
cmc
and
sbb
add
dec
lahf
mov
test
xor
test
jge
xor
xor
test
out
jg
enter
push
mov
mov
and
jecxz
jp
xor
or
lock
imul
xor
jmp
loope
and
adc
nop
jae
jmp
retf
fimul
fucom
and
leave
shr
ja
mov
imul
jo
cmp
mov
rol
mov
in
mov
out
sub
dec
pop
dec
test
and
fistp
shl
mov
mov
cmp
cmp
leave
and
jno
inc
mov
arpl
push
cmps
jmp
popf
mov
jmp
test
inc
dec
sbb
adc
pop
add
push
mov
jp
mul
xor
xchg
ss
push
push
pop
shl
xor
into
cwde
fprem
adc
(bad)
jno
mov
mov
aad
push
mov
jecxz
pop
ds
push
add
fist
jp
push
dec
out
es
call
push
(bad)
(bad)
out
or
aaa
fbld
add
test
scas
jne
jno
jb
push
cld
(bad)
mov
add
div
and
sub
mov
stos
mov
popf
or
movs
dec
cld
sub
js
sub
ins
mov
mov
xor
jne
or
inc
je
add
xor
mov
fmul
cdq
(bad)
fcomip
xor
lods
lahf
in
pop
in
addr16
add
cld
push
sar
ret
inc
push
pop
push
mov
adc
jmp
out
daa
iret
sub
fwait
inc
(bad)
fiadd
div
sbb
or
ins
cdq
jle
push
mov
leave
cmc
xor
dec
jg
xor
loop
(bad)
out
ja
fstp
dec
stos
xor
imul
jmp
ss
mov
cmp
mov
or
mov
sbb
ror
xchg
sar
sub
arpl
inc
ds
test
fild
(bad)
pop
inc
inc
movs
pop
dec
mov
imul
iret
add
aam
mov
test
jge
retf
scas
jns
add
and
mov
push
(bad)
dec
loopne
leave
test
pop
push
popf
dec
push
add
es
push
or
jnp
mov
sub
aaa
(bad)
fiadd
ror
outs
ret
inc
add
dec
(bad)
push
aaa
into
aas
je
mov
cs
sub
(bad)
jmp
xchg
stos
lahf
retf
lahf
icebp
mov
pushf
cdq
daa
js
xchg
out
xchg
pushf
and
adc
test
cmps
in
mov
cmp
sub
movs
jmp
pusha
lock
xchg
xor
test
mov
push
call
dec
xchg
cmp
push
idiv
xor
in
bnd
int
popf
mov
mov
or
mov
in
mov
stc
test
inc
pavgb
inc
imul
and
pushf
mov
pop
fmul
call
jae
out
and
jmp
jmp
inc
push
cmps
mov
jmp
xor
jb
mov
xchg
ret
stc
in
aad
into
pop
mov
dec
xchg
leave
xchg
or
and
mov
jecxz
inc
jle
and
adc
clc
call
ja
sub
push
div
loop
mov
inc
xor
pop
sbb
ficom
xchg
(bad)
out
jb
xor
idiv
mov
pop
mov
(bad)
inc
imul
ins
or
inc
mov
adc
lock
bnd
pop
pop
ja
outs
ss
xchg
stc
add
or
ds
aam
out
imul
pusha
mov
xchg
xchg
push
std
add
test
cdq
ins
mov
(bad)
xor
retf
push
and
inc
dec
(bad)
loope
sub
(bad)
fisub
xor
sti
rol
dec
bound
or
dec
mov
and
or
mov
sbb
xlat
inc
cmp
cmp
jbe
mov
push
cld
ins
cld
fsubr
xlat
stc
test
icebp
inc
leave
pop
mov
sub
pop
retf
fst
pop
jecxz
test
mov
or
sub
repz
idiv
outs
int3
fwait
jno
scas
lods
xor
mov
push
sbb
adc
mov
push
dec
loope
lock
es
mov
lock
daa
ins
jecxz
xchg
adc
data16
out
mov
push
pushf
jmp
jb
sahf
imul
rcl
jg
fisub
call
push
not
cmps
or
movs
or
inc
lods
pop
jg
add
push
sub
loop
add
inc
mov
jmp
shl
sbb
ds
pop
push
popf
cli
mov
or
ss
mov
add
mov
pop
push
(bad)
mov
rcl
or
pmaxub
scas
ret
(bad)
retf
aad
cmp
jle
fcom
adc
mov
idiv
aam
or
or
nop
and
add
aam
clc
push
push
cld
lods
aaa
inc
popf
repz
cmp
dec
aas
pushf
leave
push
ins
sbb
mov
mov
stos
addr16
push
fld
hlt
ds
iret
xor
cmp
scas
imul
dec
daa
aad
ja
or
out
inc
jge
xor
movs
ficomp
push
lods
dec
and
and
nop
(bad)
jle
push
outs
push
retf
pop
lock
(bad)
sub
add
bound
mov
test
(bad)
call
sbb
xchg
or
fld
mov
test
xchg
mov
stos
ins
lock
mov
adc
xor
mov
stos
(bad)
outs
jg
lock
pop
mov
inc
add
cmp
fbstp
jno
jg
test
fsubr
mov
adc
xor
pop
adc
mov
or
dec
xor
icebp
mov
inc
pop
icebp
sub
cmp
dec
sbb
sub
mov
mov
or
(bad)
xchg
outs
int3
lahf
ficom
leave
cwde
or
mov
push
sbb
icebp
repnz
outs
lock
jp
dec
xchg
daa
push
adc
adc
inc
and
push
ficomp
dec
xor
mov
inc
fsub
loopne
fadd
(bad)
aad
mov
fwait
adc
pop
rol
xor
sbb
jno
adc
pop
jmp
test
jne
enter
std
mov
xlat
add
(bad)
jae
pop
push
mov
xor
push
loopne
sbb
and
call
mov
push
xchg
ds
jbe
jp
cmp
lds
ret
xor
push
and
imul
mov
jg
xor
sub
shl
adc
jmp
push
not
out
push
mov
test
sbb
shl
adc
cmp
fst
jp
in
jae
ins
and
push
push
sbb
stos
test
int3
stc
outs
mov
inc
push
outs
sahf
adc
mov
dec
ins
jne
xchg
stos
cwde
ss
shl
shl
xor
out
into
sbb
cmp
dec
out
xchg
fs
mov
dec
mov
dec
retf
not
ss
jno
push
sahf
pop
jle
cmp
ins
cmps
xchg
jmp
je
inc
loopne
fdivr
pop
or
jmp
in
xor
pushf
sbb
mov
and
mov
pop
cdq
jne
mov
int
push
mov
sbb
adc
repz
jns
xor
xchg
dec
(bad)
xchg
sbb
in
pop
je
mov
mov
mov
or
xor
mov
imul
in
jmp
mov
xchg
sub
pusha
xchg
mov
jbe
mov
aaa
push
into
xlat
outs
shl
bound
xor
lds
imul
ret
adc
int3
lock
mov
and
stc
xchg
cmp
and
stos
cmc
mov
sbb
xor
cmp
(bad)
jl
sub
jp
xor
xchg
je
cmp
adc
add
jno
rol
mov
mov
stos
retf
mov
mov
add
ror
adc
ds
shr
aaa
mov
push
sbb
lahf
mov
and
out
xchg
xor
mov
aad
adc
mov
inc
push
ret
jo
into
pop
jl
xchg
pusha
or
imul
dec
std
lods
inc
adc
enter
in
je
jp
lea
out
mov
push
mov
loop
imul
or
adc
sub
pop
mov
mov
ficomp
xor
inc
out
into
cmp
gs
sbb
push
pop
es
add
sbb
mov
sub
adc
bound
rcl
xor
sub
sub
repz
dec
xchg
idiv
or
mov
imul
push
clc
jl
or
ds
ret
sti
pop
adc
and
rcl
lods
jb
test
dec
jns
inc
or
xlat
sub
adc
inc
fs
test
xor
les
lahf
mov
repz
nop
push
mov
push
lahf
dec
sti
loope
(bad)
jb
mov
or
mov
mov
test
mov
(bad)
(bad)
shr
popf
in
add
xor
adc
out
std
dec
(bad)
mov
jae
push
xchg
pop
or
dec
sub
into
fdivr
into
dec
or
in
mov
cdq
dec
in
(bad)
lods
v4fnmaddss
ret
stos
out
sub
add
pop
inc
sbb
inc
bound
imul
or
mov
iret
mov
add
mov
jne
and
test
ret
fwait
lahf
ja
les
pop
jg
aam
jp
mov
gs
cwde
sbb
fistp
ret
fild
scas
and
sub
sbb
inc
in
mov
jmp
jg
pop
out
or
sbb
(bad)
xor
fcmove
popa
(bad)
push
aaa
xchg
sbb
pop
and
lahf
stos
xchg
(bad)
es
enter
pop
loope
arpl
shl
shl
out
(bad)
jle
(bad)
fsub
adc
adc
stos
lods
cmp
cmp
add
(bad)
loope
mov
(bad)
sbb
mov
adc
xchg
fistp
pop
das
push
outs
push
and
xor
sbb
mov
and
imul
push
ret
sub
(bad)
test
pop
leave
neg
fsubr
lods
mov
cwde
jno
and
and
sti
(bad)
adc
outs
loop
xchg
ret
push
imul
mov
mov
or
or
push
repnz
lahf
pop
pusha
push
fs
out
xor
movs
addr16
lods
sub
call
xchg
sbb
mov
cdq
fcom
jle
ret
in
mov
inc
in
mov
nop
icebp
jl
xchg
cmp
cmpxchg
test
sbb
(bad)
mov
hlt
hlt
cmp
fwait
or
loop
sahf
push
aaa
mov
(bad)
call
js
fimul
xchg
jae
jne
shl
push
xchg
iret
xor
inc
movs
push
xchg
out
popa
(bad)
mov
xchg
mov
sbb
xchg
fmul
xchg
sbb
xchg
frstor
adc
sub
inc
xor
div
add
sub
addr16
cmps
fmul
add
push
push
and
ss
out
inc
or
es
out
jo
stos
loope
dec
or
pop
js
xchg
fild
int3
les
cmp
test
xor
js
lea
mov
lods
inc
fwait
and
retf
add
int
retf
loopne
rcl
pop
inc
inc
lds
xchg
xchg
mov
mov
and
inc
jae
mov
cs
xchg
adc
pop
outs
xor
inc
into
cmp
xchg
mov
mov
ss
cld
add
fld
dec
inc
retf
in
xchg
sbb
inc
pop
retf
retf
push
inc
repnz
movs
cmps
jmp
leave
loopne
sti
jle
mov
rcl
cdq
cs
gs
cdq
fnstsw
add
aam
sbb
sbb
or
pusha
ret
xor
sbb
arpl
out
in
xchg
in
stos
pop
pop
(bad)
(bad)
fdivr
sbb
dec
pop
jbe
addr16
jnp
adc
iret
pusha
frstor
push
imul
jb
js
test
xchg
call
sar
rcl
xor
fdivrp
inc
xor
iret
scas
aaa
lea
xor
fbld
movs
loopne
int
push
mov
lahf
or
imul
sub
and
sub
jmp
out
sbb
xchg
pop
movs
dec
(bad)
sahf
aad
int
fneni(8087
push
rcl
push
xlat
out
std
in
jge
jbe
cmp
jg
add
add
dec
and
mov
pop
xor
ja
neg
std
daa
mov
sbb
inc
popf
repz
add
stc
xchg
sti
mov
loopne
test
mov
lods
push
(bad)
outs
xchg
repnz
clc
xor
cmp
adc
add
sahf
jmp
rcl
or
mov
movs
mov
mov
jb
bt
xchg
call
mov
arpl
xor
(bad)
bound
and
pop
fdivr
popf
cmps
jecxz
sub
push
stos
inc
xchg
cwde
sbb
dec
pop
add
std
jmp
fmul
fucomip
arpl
jb
rol
shl
stos
cmp
call
mov
pop
xchg
shl
fist
pop
sbb
xchg
rcr
mov
ds
xor
out
ins
es
cdq
mov
outs
push
fsubp
das
lods
mov
jecxz
cmc
jnp
add
sbb
push
fmul
inc
mov
loopne
fidivr
adc
inc
movs
adc
popf
cmp
arpl
icebp
imul
sbb
and
movs
mov
lods
sbb
add
sbb
mov
push
mov
add
ficom
xor
sbb
push
push
xor
xchg
imul
test
repnz
add
pop
in
dec
mov
pusha
fs
sbb
stc
out
mov
ins
das
jbe
mov
mov
jl
xor
test
dec
cdq
jle
push
push
sahf
div
jo
das
cld
loopne
push
movs
in
push
pop
leave
xor
stc
enter
arpl
stc
mov
push
push
(bad)
mul
or
jne
retf
(bad)
push
outs
imul
mov
test
fcmovne
mov
jge
cmp
or
rcr
or
pop
push
cld
add
dec
jge
imul
(bad)
test
dec
mov
and
int
popa
cmp
div
lods
popf
sbb
jmp
pop
call
jl
xlat
xor
pop
dec
lods
rcl
in
fs
stc
cmps
cld
inc
das
sbb
xor
sub
sbb
cli
pop
imul
add
outs
ss
cmc
rcl
out
pop
cli
mov
lods
das
mov
adc
add
mov
sbb
xlat
mov
mov
into
stos
mov
mov
in
and
dec
mov
mov
dec
cmp
shr
lods
mov
lods
nop
xor
call
ret
push
cdq
gs
cmp
push
hlt
add
test
rcr
fcomp
mov
rol
ret
cmp
jnp
mov
in
or
mov
hlt
mov
mov
test
pop
push
jne
push
loopne
sub
add
mov
pop
adc
push
cmp
xchg
pop
pop
call
mov
push
cmp
imul
jmp
aaa
cmps
std
scas
jae
jno
pop
push
jb
test
xchg
js
shl
loope
sub
enter
fs
cmp
sub
mov
push
jle
ds
inc
sahf
movs
jo
aaa
add
pop
lock
pop
out
repz
out
sahf
movs
mov
fisttp
outs
sub
sub
jno
sub
outs
add
mov
mov
mov
jno
jmp
push
push
push
dec
or
in
xchg
add
out
cwde
shl
jns
and
inc
test
shl
daa
adc
cld
psrad
ret
jl
adc
or
aaa
addr16
(bad)
jle
ret
sbb
inc
add
cwde
add
dec
sbb
lds
leave
fdivrp
test
push
outs
add
cmp
sbb
jae
sub
lds
xor
or
cmp
retf
lahf
mov
cdq
and
pop
push
std
xchg
fwait
and
ja
pop
out
xchg
lahf
stc
sahf
fadd
es
pop
test
mov
mov
xchg
jnp
add
pop
mov
lods
pop
or
stos
out
xlat
lds
jnp
cdq
out
push
clc
push
in
scas
test
movs
out
sahf
dec
jae
jns
inc
mov
test
inc
nop
jb
clc
movs
in
or
add
pop
fcom
imul
jb
ret
push
sbb
fwait
shl
mov
mov
xchg
out
bound
cmps
mov
test
js
nop
sub
push
inc
jmp
sbb
mov
mov
addr16
jp
xchg
mov
retf
idiv
cli
and
sbb
adc
sbb
dec
or
and
inc
mul
pop
dec
imul
outs
(bad)
push
adc
add
dec
push
or
jg
call
add
and
adc
out
ins
push
mov
jmp
cmps
mov
sahf
retf
add
xlat
add
mov
cmp
mov
lahf
ds
test
pop
push
mov
and
cdq
cmc
sahf
push
lock
add
xchg
popf
sub
pmaxub
enter
adc
xor
cmc
pop
pop
inc
pusha
inc
stos
sbb
call
aam
dec
xchg
jae
fsubr
inc
add
and
pop
jno
mov
lea
test
(bad)
mov
ficomp
or
fs
push
dec
or
movs
int3
daa
test
jbe
idiv
(bad)
cld
je
add
and
fiadd
xor
push
mov
jae
push
xchg
adc
xchg
mov
popa
sbb
add
inc
jbe
and
in
leave
xor
leave
cmp
ret
dec
test
dec
ja
leave
or
(bad)
gs
mov
call
jle
pop
mov
dec
adc
jnp
mov
shr
ja
outs
mov
xchg
imul
out
cmc
fwait
xchg
jp
xchg
cmp
stos
push
popf
xchg
adc
das
out
cmovl
sub
test
test
add
pop
mov
rcr
rcl
rol
ret
and
clc
inc
mov
fcomp
jnp
cmc
cmp
dec
xor
sub
fld
fld
inc
repnz
mov
stos
ins
cs
sub
lods
mov
lock
sub
cld
jl
pop
ds
daa
mov
dec
(bad)
dec
into
or
add
cmp
xor
aad
test
scas
inc
sar
int
cmp
std
jg
push
mov
fcom
xlat
into
sub
cmps
mov
into
xchg
mov
daa
push
adc
push
mov
ret
push
fwait
cmps
jge
ja
lock
jbe
sahf
mov
dec
les
jle
retf
cmps
gs
aaa
or
call
imul
jae
test
jns
inc
int
je
and
xchg
aaa
outs
mov
cdq
or
jmp
mov
sahf
ja
sar
rol
jae
sbb
clc
hlt
push
std
sub
mov
pop
gs
cmp
movs
ss
call
sbb
jb
lods
mov
out
fild
test
add
call
push
cmp
clc
loopne
or
jmp
loope
(bad)
pop
out
and
fistp
dec
sti
test
push
pop
jae
test
inc
cli
sbb
mov
ss
jae
pop
xor
mov
cld
inc
cmp
inc
push
aas
ja
leave
xor
cmp
pusha
int3
mov
add
pusha
sub
fnsave
ror
arpl
je
cmps
(bad)
ins
add
dec
cmp
xor
adc
pop
mov
push
aaa
jne
adc
add
mov
call
add
into
cmp
xchg
cmp
stc
add
in
mov
xchg
pop
sbb
mov
rol
dec
sbb
aaa
jp
clc
push
out
rcl
int3
mov
icebp
ins
not
in
jmp
mov
ins
mov
fst
xchg
push
adc
mov
pushf
call
pop
cli
call
popf
loope
xchg
das
pop
nop
ins
sub
adc
ror
adc
push
mov
adc
cli
push
stos
sbb
mov
push
sbb
cmp
mov
pop
dec
mov
push
sbb
fistp
cmp
xor
sbb
dec
cmc
ret
adc
jl
imul
push
cdq
stc
dec
dec
xchg
stos
out
ficomp
sub
sub
jae
sub
xchg
xor
(bad)
mov
jl
jne
int
mov
cmp
sbb
add
cmp
xor
jnp
in
and
aam
test
pop
inc
jnp
psrlw
fisttp
das
int
out
sub
pop
add
daa
(bad)
aaa
iret
dec
cmp
sub
adc
mov
pop
jl
push
fsubr
gs
xchg
add
fwait
fwait
es
cli
sbb
jmp
and
das
sti
push
mov
icebp
push
loopne
fwait
mov
cmp
dec
rol
rcr
aad
in
sub
adc
add
inc
adc
div
or
cmp
pop
jmp
cmp
mov
sub
mov
in
xchg
cmp
daa
mov
sub
in
inc
inc
cmps
jmp
ret
jp
xchg
nop
fwait
or
add
xchg
lods
mov
gs
mov
cmp
xchg
jb
push
stc
pop
inc
mov
adc
and
or
xchg
sub
cmp
inc
dec
mov
mov
mov
leave
mov
add
inc
xchg
mov
mov
in
ins
nop
xchg
je
add
in
adc
sbb
lods
and
jl
sbb
add
jno
adc
mov
jno
les
dec
outs
mov
retf
sbb
outs
jmp
dec
and
int3
adc
or
inc
xchg
fsub
mov
mov
push
iret
outs
pusha
jmp
pop
add
sub
cld
in
sahf
(bad)
and
xchg
ins
test
mov
cmps
fidivr
jnp
mov
fidivr
or
sti
jp
scas
push
pop
jns
xor
mov
sbb
fwait
ins
push
push
addr16
and
in
fisubr
jecxz
lahf
jo
jge
inc
shl
and
jle
rol
scas
adc
or
xor
inc
clc
xor
adc
cli
mov
ret
out
ss
popa
movs
ins
loop
push
mov
sar
dec
pop
mov
js
xchg
xor
cdq
mov
iret
push
das
clc
loope
pop
cmc
xchg
retf
les
fst
aas
enter
mov
dec
or
mov
sbb
jg
stos
shr
std
aam
push
dec
mov
shr
out
dec
or
fst
and
test
push
(bad)
aas
mov
ins
aam
xchg
sti
jmp
mov
daa
aam
repnz
in
imul
jmp
retf
les
call
jle
and
fisttp
jns
pop
push
int3
push
xor
dec
jns
sub
fimul
sbb
xlat
push
jae
and
push
lock
int3
jecxz
mov
fwait
(bad)
sub
pop
jp
jl
aaa
lods
jno
mov
dec
sar
out
add
aaa
push
xchg
popa
sub
es
mov
popa
xlat
mov
add
add
fistp
jg
test
sbb
push
mov
mov
pop
dec
jecxz
jb
jecxz
(bad)
ret
mov
and
stos
add
test
cwde
add
add
push
je
gs
(bad)
shr
mov
and
retf
jns
inc
and
je
and
mov
mov
mov
clc
cmp
mov
les
aam
out
iret
jmp
add
(bad)
fucomp
cmp
fiadd
pop
adc
or
shl
movs
pusha
mov
out
(bad)
inc
push
dec
ja
nop
mov
shl
xor
jne
mov
dec
test
mov
adc
mov
fs
out
idiv
cs
inc
jmp
lahf
add
or
js
jns
std
sub
pop
stos
sbb
jno
unpckhps
repz
ja
dec
cld
aaa
cs
shl
hlt
xchg
dec
jno
cmps
ret
ins
add
(bad)
(bad)
iret
cmp
sbb
lods
sub
mov
repnz
xchg
loop
mov
mov
retf
mov
in
xor
xchg
rcl
mov
mov
cmp
shl
pop
jmp
in
outs
retf
inc
push
int3
jnp
inc
sbb
pop
add
xchg
popf
rcr
sbb
ficom
shr
push
fadd
mov
or
dec
sub
cmp
pusha
popa
sub
cs
retf
add
jl
dec
xchg
inc
std
aad
mov
call
inc
mov
(bad)
xchg
iret
mov
xor
in
aad
mov
data16
push
inc
jg
das
sub
push
mov
inc
ins
mov
and
add
das
ror
ret
sub
addr16
xor
adc
gs
ds
fmulp
jo
(bad)
mov
in
adc
pop
add
imul
and
mov
(bad)
adc
bound
adc
add
ret
inc
scas
es
repz
mov
bound
call
(bad)
pushf
dec
jns
push
and
cmp
test
push
xchg
jnp
xchg
sbb
retf
dec
mov
push
and
jns
cmp
cmp
mov
fwait
mov
adc
lock
push
cmp
and
sbb
push
push
push
mov
cwde
jmp
arpl
clc
mov
xchg
adc
sbb
jmp
jmp
lahf
add
dec
out
and
rol
sbb
push
sbb
in
repnz
xchg
out
cmp
repz
loop
and
shr
push
outs
sti
add
jno
mov
outs
adc
add
scas
gs
ja
and
or
mov
pusha
xor
sbb
add
push
ss
jno
ins
pop
adc
xor
stc
cmp
and
pop
popf
cmc
iret
sbb
cwde
in
rol
jb
mov
js
push
in
pop
push
sub
push
xchg
in
lods
stos
retf
test
mov
maxps
sbb
pop
push
inc
pop
pop
jmp
loopne
pop
pop
test
out
sub
jmp
jns
stos
push
and
xor
adc
inc
lock
pop
nop
xchg
cs
mov
(bad)
sub
push
stos
daa
inc
cmp
or
mov
(bad)
xchg
lock
ins
sub
lods
fld
test
add
jb
lea
or
scas
popa
or
in
call
adc
clc
mov
es
leave
pop
inc
inc
and
aam
imul
add
inc
jns
mov
push
xchg
jne
jb
stos
in
add
cwde
pop
mov
loopne
add
dec
cli
out
jno
jecxz
cli
test
movs
mov
inc
inc
clc
iret
jl
aas
mov
mov
add
retf
cld
aam
out
stos
in
pop
data16
pop
aad
out
push
jmp
adc
add
pop
(bad)
aaa
jge
cmp
adc
mov
les
enter
xchg
push
lds
adc
inc
and
cmps
cli
jg
sub
ja
jmp
xchg
jl
adc
push
cdq
lods
jp
sar
sub
addr16
fidivr
adc
arpl
imul
nop
add
pop
mov
fcomp
pop
jno
mov
inc
pusha
icebp
(bad)
rol
cs
xchg
test
jae
mov
loopne
inc
cs
dec
stos
sbb
cmp
sub
xlat
xor
sbb
cli
xchg
jne
cli
sub
add
pop
imul
or
sbb
push
cmp
jmp
dec
sahf
sbb
aad
dec
inc
mov
dec
jg
mov
es
push
pop
sar
jns
xchg
pop
hlt
mov
add
test
add
mov
sbb
call
and
mov
add
xchg
cdq
mov
or
pop
push
xor
jns
sbb
sti
xor
mov
adc
stc
call
popf
dec
loopne
fimul
enter
jmp
out
test
stc
mov
dec
xor
jmp
out
loope
and
shl
aaa
and
inc
adc
push
out
loop
out
or
add
sub
push
lods
mov
mov
test
out
sub
inc
fs
sbb
dec
dec
ins
dec
mov
lds
inc
sbb
and
pusha
rcr
mov
into
dec
popf
fs
inc
adc
mov
popa
mov
push
ror
pop
dec
push
cmp
push
mov
inc
adc
dec
and
dec
push
push
int
dec
add
stc
imul
or
mov
jnp
xchg
xor
add
jle
setne
cdq
sub
aaa
fcomp
fld
stos
cmc
sub
dec
mov
hlt
pop
mov
call
inc
or
adc
sub
or
xor
mov
jo
out
pop
mov
jp
pop
cmps
sub
in
ins
add
pop
repnz
jo
pop
mov
jmp
xor
mov
out
adc
out
inc
idiv
push
imul
pushf
inc
push
and
sahf
mov
dec
sub
cmps
lock
cmc
adc
mov
cld
xchg
jecxz
shl
push
push
mov
mov
xor
jg
mov
bound
xchg
add
std
popf
loopne
pop
adc
add
pop
fsub
out
cdq
cwde
retf
mov
push
not
pop
mov
int
mov
add
and
mov
aad
pop
mov
push
cdq
and
call
pop
outs
mov
lds
js
stos
and
out
pmulhw
in
fbstp
add
pop
outs
(bad)
(bad)
add
loope
add
jbe
loopne
movs
xchg
adc
cmp
jo
pusha
mov
mov
mov
lods
or
imul
ficomp
rcl
ins
adc
mov
add
(bad)
jb
loopne
movs
(bad)
pusha
pusha
dec
ins
and
jne
xchg
or
or
add
push
aam
sbb
xchg
and
gs
mov
pop
sub
fsubr
xor
cmp
add
jp
out
push
push
mov
rcl
sub
mov
jle
(bad)
mov
cmps
push
icebp
jmp
jmpw
lods
xchg
xchg
sub
jg
jae
pop
out
add
dec
mov
inc
int
(bad)
in
or
out
or
rcl
push
popa
and
or
ret
cmp
std
push
sub
adc
lock
(bad)
fldz
cdq
xchg
jmp
and
jle
and
xchg
adc
(bad)
mov
out
jno
xchg
push
sbb
mov
sbb
inc
and
sti
sub
sbb
shl
inc
test
mov
rcl
jae
stc
jecxz
lods
ins
ins
adc
dec
ins
jle
fiadd
sbb
jo
jmp
repz
addr16
in
call
dec
movs
stos
fstp
ret
sti
imul
xor
loopne
movs
je
or
cmp
(bad)
pop
cmp
mov
imul
lock
(bad)
ja
int
xchg
cmp
xor
lahf
sbb
xchg
cdq
push
(bad)
fiadd
pushf
mov
add
push
aam
push
pop
inc
xor
rol
ins
inc
test
movs
jmp
dec
cli
push
xor
add
fmul
fsub
mov
dec
sahf
sti
ins
mov
adc
and
loope
xor
cmp
inc
in
sbb
cwde
pop
ja
fst
jmp
les
(bad)
repz
cmp
sahf
test
stos
sub
fadd
sbb
xor
out
adc
cmps
arpl
das
(bad)
cmp
adc
loop
fnstcw
add
sub
push
cmp
and
mov
mul
mov
and
inc
pop
shl
outs
movs
push
sbb
adc
leave
push
(bad)
mov
in
fisubr
mov
ins
cdq
cmp
xchg
daa
inc
xor
adc
xchg
xor
stos
xor
aam
(bad)
mov
loop
sub
pop
clc
xor
add
xor
lahf
jecxz
xlat
cwde
rol
adc
sub
mov
(bad)
sbb
loop
loopne
clc
pop
ds
out
pop
hlt
add
mov
test
jnp
xchg
fcom
test
mov
addr16
fnstcw
test
int
inc
les
cmp
fwait
bound
shl
sbb
cmp
adc
mov
jmp
jmp
aam
add
add
xor
or
inc
das
dec
adc
pop
loopne
mov
jae
jmp
das
xchg
js
sahf
(bad)
fisub
jb
loope
loopne
dec
aaa
je
cmp
xchg
jmp
fsub
sub
xor
dec
cld
loope
xor
je
(bad)
add
xor
adc
inc
addr16
cmp
call
pop
bound
fst
push
xchg
adc
sbb
stos
lods
sbb
test
mov
mov
loopne
dec
into
fist
das
jnp
rcl
xchg
nop
cwde
mov
mov
into
xchg
call
xor
enter
cld
arpl
or
sbb
sti
ins
popf
jp
mov
scas
lea
ins
loope
push
xchg
gs
sbb
pop
mov
pop
xchg
mov
or
jns
sbb
pop
mov
inc
push
scas
loop
bnd
ror
test
out
mov
out
lahf
outs
jb
mov
or
dec
mov
dec
jb
dec
jge
sub
dec
or
jns
jae
mov
pop
int
cmp
nop
jge
ja
cmps
jp
mov
mov
push
add
out
lods
adc
lds
xchg
sahf
and
test
inc
add
pusha
jnp
aam
pop
adc
out
int3
pop
xor
dec
cmp
mov
(bad)
or
xor
mov
dec
pop
rcr
hlt
xchg
call
sahf
mov
jns
mov
sbb
lods
inc
ins
sahf
ds
push
sbb
push
adc
outs
ins
cli
push
dec
cmp
fld
mov
loop
mov
pop
cmps
(bad)
xor
dec
push
loope
push
jg
push
jne
push
bound
out
adc
cwde
into
scas
pop
inc
pusha
scas
retf
clc
out
movs
lods
bound
cmp
mov
cmp
enter
push
xchg
mov
pop
xor
pop
mov
push
mov
(bad)
push
pop
inc
and
movs
lods
xchg
pushf
pop
mov
ins
adc
ins
movs
outs
jnp
popw
jl
dec
sbb
fiadd
pop
jne
(bad)
shl
retf
mov
imul
fimul
lds
test
bound
shl
fstp
jne
cmp
rcr
jle
inc
leave
lea
or
mov
jmp
pop
mov
and
xor
add
fdiv
xor
xchg
sbb
xor
inc
jo
adc
and
cmps
xor
adc
hlt
cmps
mov
jp
mov
dec
push
aas
and
or
jl
repz
and
xchg
mov
adc
sub
jp
(bad)
cmps
daa
mov
sbb
lea
(bad)
imul
jne
ja
mov
outs
cwde
sub
mov
lahf
add
(bad)
pop
push
pop
mov
arpl
jo
(bad)
sub
int3
popf
fmul
cli
pop
int3
sbb
sub
(bad)
jecxz
ss
icebp
test
fld
shl
into
loopne
mov
aad
mov
xor
dec
sub
pop
dec
cld
test
mov
sbb
xlat
pop
repnz
dec
inc
dec
(bad)
xchg
mov
or
inc
lods
lahf
addr16
popf
jno
out
popf
cli
mov
test
mov
jbe
add
pop
inc
dec
mov
or
mov
cmp
bound
pop
or
jne
pusha
cmc
ja
jno
mov
sbb
pop
sub
xchg
mov
ja
jl
xchg
sbb
dec
cdq
outs
into
popf
shl
in
add
sub
sub
xor
repnz
xor
pop
stc
cmp
adc
(bad)
popa
and
pop
jbe
popa
arpl
push
mov
push
sbb
xor
fcom
add
mov
outs
add
das
scas
dec
sub
and
mov
imul
pop
adc
into
cmp
sti
es
loope
test
mov
enter
fiadd
sub
add
adc
sbb
mov
bswap
mov
jo
arpl
ror
mov
enter
arpl
popa
dec
ss
xor
and
cmp
retf
loope
jp
adc
(bad)
les
xchg
lea
ficomp
out
add
dec
shr
aaa
and
ja
jbe
mov
shl
or
arpl
shl
lea
inc
mov
repnz
adc
hlt
xchg
mov
repnz
sub
test
imul
sbb
mov
lods
repz
test
mov
xchg
pop
daa
sbb
mov
dec
rcr
pop
in
sar
int3
add
push
xor
enter
fs
cmp
push
sub
sub
scas
outs
sbb
and
adc
dec
pop
sar
call
fwait
add
aam
mov
xchg
push
mul
fdiv
clc
sbb
sub
(bad)
loop
daa
sar
pop
inc
call
ins
and
jecxz
imul
mov
(bad)
int
shl
ss
pop
in
xchg
lea
jae
mov
cmps
out
popa
ds
cmc
dec
imul
mov
or
fdivrp
cld
sub
icebp
out
repnz
adc
mov
out
and
mov
mov
mov
mov
lahf
cld
scas
adc
xor
mov
pop
sbb
stos
scas
mov
inc
ror
xlat
jmp
jnp
ins
sbb
push
and
mov
test
sar
test
lar
or
push
pop
enter
addr16
xor
jp
shr
lods
add
dec
jae
push
sar
fstp
or
pop
xchg
jmp
rol
stos
lea
lds
nop
cmps
fwait
lock
xlat
cmp
jne
out
adc
out
pavgb
in
out
call
fdivr
pop
bound
int3
push
cmp
push
idiv
clc
sub
inc
retf
xchg
fist
ror
add
ret
lahf
jns
inc
call
or
cmc
xchg
inc
adc
pop
dec
push
mov
mov
sti
cmp
add
xchg
push
add
sbb
std
and
std
push
fwait
dec
mov
stc
jns
in
scas
or
psubsb
and
fcom
aam
xchg
dec
dec
ds
pop
xchg
dec
gs
inc
push
cli
cmp
mov
lahf
clc
jp
sbb
mov
adc
pusha
lea
aas
bound
out
adc
mov
mov
jecxz
int
(bad)
mov
ds
mov
in
out
xchg
fwait
dec
lahf
add
rcl
mov
add
or
xchg
mov
sbb
jle
mov
shl
xor
rol
lds
xchg
dec
(bad)
lock
mov
mov
push
js
sbb
adc
or
cdq
inc
xlat
pop
mov
pop
push
sub
adc
ror
int3
and
adc
(bad)
cmp
lods
arpl
dec
repnz
stc
test
push
rol
sbb
scas
(bad)
rcl
dec
cmc
popf
call
and
mov
fsub
sub
ds
xor
scas
and
ficomp
aad
dec
inc
vcvtss2si
dec
cmp
dec
or
add
xchg
cmc
gs
adc
idiv
xchg
pop
(bad)
data16
icebp
adc
or
inc
sbb
pop
fdivr
ret
rcr
dec
push
movs
add
dec
pop
push
or
adc
loope
sbb
lahf
or
push
das
imul
adc
(bad)
bnd
mov
out
cmp
(bad)
sub
jmp
mov
mov
pop
xlat
xor
std
mov
jge
and
ror
lds
rol
in
lods
sbb
adc
pop
mov
add
and
sub
inc
sbb
loop
mov
cmp
rcr
jo
mov
(bad)
repnz
jbe
lods
cmp
fwait
(bad)
int
pop
lock
mov
and
sbb
cdq
xchg
imul
es
jbe
popf
stos
in
cmp
fs
fidiv
in
lock
aad
sti
mov
push
add
sbb
pop
push
daa
fxch
add
add
push
rcl
sub
out
(bad)
push
adc
pop
sub
or
or
call
jg
or
add
repz
xor
or
int
and
scas
aam
(bad)
jmp
jnp
imul
pop
aad
mov
adc
cmp
test
mov
bound
shr
jae
movs
pop
mov
or
icebp
div
loope
cmp
push
shr
ret
xchg
jl
cmps
jecxz
pop
add
or
push
fist
mov
pop
out
(bad)
loop
fs
out
sbb
daa
xor
addr16
retf
push
and
xor
add
clc
das
or
int
std
mov
aam
xor
and
call
arpl
pushf
add
mov
ret
dec
inc
test
sar
xor
sbb
arpl
in
rcl
and
data16
das
push
scas
xchg
(bad)
mov
add
and
jg
mov
out
stos
jo
mov
mov
sbb
sbb
cmp
sbb
movs
cwde
mov
mov
pop
loope
dec
movs
not
cmp
ror
jbe
ror
push
fsub
call
ret
add
xchg
adc
in
jo
mov
xchg
mov
(bad)
xchg
jns
mov
fucomi
retf
aam
xchg
out
mov
push
out
xor
stos
adc
xchg
sbb
into
(bad)
mov
scas
cs
lds
cmp
sti
jae
xor
cmps
mov
xor
jg
mov
cmc
add
(bad)
pop
sahf
pop
adc
add
imul
pop
out
pusha
pop
outs
push
sar
inc
(bad)
mov
push
mov
lds
dec
sti
pop
pop
in
in
out
movs
mov
pop
icebp
cmps
out
rcr
mov
lea
jno
ja
scas
movs
je
(bad)
fimul
aaa
sti
inc
in
mov
movs
test
imul
movs
dec
mov
int3
inc
ror
jmp
into
mov
nop
jle
pop
mov
das
lds
stos
mov
(bad)
cmps
xor
int
add
sub
ds
sbb
pop
push
pop
inc
add
sbb
sub
add
sahf
inc
mov
xor
sbb
jecxz
mov
stos
jecxz
inc
loop
mov
js
inc
mov
addr16
sbb
das
inc
cmp
pop
or
xchg
je
iret
iretw
mov
mov
bound
arpl
inc
cmp
ds
jmp
scas
neg
movs
fbld
push
rcl
retf
xlat
adc
jmp
cs
inc
sbb
out
stos
pop
sbb
lods
scas
std
out
mov
call
xchg
std
sar
enter
and
jo
leave
test
jnp
dec
push
and
test
xchg
arpl
test
jmp
nop
xor
pushf
lea
sbb
call
repz
daa
xor
stc
jno
fbld
mov
outs
mov
clc
xchg
stos
dec
or
add
jnp
pusha
xchg
add
dec
xchg
push
lea
mov
das
shl
nop
test
ins
mov
call
push
arpl
xor
cli
cld
test
add
fldenv
retf
aam
popa
push
(bad)
or
push
js
lods
icebp
stos
mov
ja
mov
dec
dec
mov
test
xchg
ret
sti
retf
imul
lods
nop
dec
inc
retf
xor
sub
aaa
das
sbb
sub
adc
push
daa
mov
push
add
ja
in
imul
test
les
and
adc
popa
sbb
retf
fs
sub
xchg
sbb
inc
xor
or
aas
cmp
nop
jnp
mov
push
cli
aas
pop
cld
cwde
xor
or
test
rcl
cmp
(bad)
aas
mov
pop
cmps
mov
cs
int
xchg
pop
loopne
push
sub
jb
or
sar
push
les
xlat
pop
jo
push
push
mov
mov
test
fisubr
retf
fwait
cmp
cmp
ret
add
adc
xor
repz
push
mov
jns
addr16
sti
cli
ror
adc
das
mov
repz
add
or
cmp
ret
dec
mov
hlt
mov
ja
mov
and
test
sub
cmp
or
retf
cmp
xor
mov
add
mov
das
and
mov
sub
xchg
aad
jmp
ss
leave
mov
fs
adc
and
(bad)
sub
xor
sbb
mov
cmp
jmp
out
pop
mov
fisub
dec
fcomp
sbb
push
cwde
mov
outs
push
ins
je
jge
push
cmp
popa
pandn
add
jecxz
xor
jle
sub
(bad)
outs
mov
(bad)
cmp
div
loope
adc
les
(bad)
(bad)
das
lea
imul
mov
shr
(bad)
jge
cli
mov
dec
ret
imul
push
in
retf
addr16
pushf
add
dec
mov
packuswb
cmp
cmp
std
in
pushf
lea
test
lock
pop
pop
add
lahf
push
inc
jecxz
mov
mov
pop
into
xchg
test
dec
fucom
loop
sbb
js
cmp
jmp
ret
popf
pop
jl
jne
push
nop
std
and
adc
sbb
cmp
in
add
shl
popf
adc
pop
cmp
jno
sub
rcl
test
push
adc
adc
(bad)
jle
cmp
mov
fld
mov
adc
cmp
mov
paddsw
int
ror
sbb
xchg
pusha
out
fsub
ret
jb
mov
mov
dec
std
loop
jl
add
or
mov
loope
fist
daa
aam
stos
xchg
mov
ins
and
fisubr
(bad)
sbb
or
cdq
rol
adc
stos
ror
jecxz
push
jp
sar
sbb
or
sbb
mov
adc
sub
jae
mov
mov
in
xchg
stc
stc
push
out
(bad)
mov
shr
cmc
add
std
in
push
lea
adc
xor
jmp
xchg
cmp
pusha
push
jl
add
pop
ins
add
sbb
jmp
fwait
fwait
sbb
je
movs
scas
fwait
mov
xor
ds
fwait
sbb
mov
lahf
pandn
sbb
in
dec
loope
inc
mov
cli
out
bnd
or
sub
and
push
mov
xchg
repnz
retf
xor
or
fimul
add
leave
cmp
mov
and
pop
dec
pop
jecxz
fiadd
(bad)
outs
pop
arpl
rol
jg
cwde
dec
or
stos
call
jbe
xlat
mov
rcr
js
stos
and
sbb
and
fwait
xor
das
sub
mov
sbb
jae
(bad)
idiv
adc
lods
jmp
add
push
dec
les
xor
push
ret
pop
dec
mov
je
outs
cmp
js
push
lods
shr
cwde
test
pop
and
in
pop
ret
inc
sbb
(bad)
add
in
mov
sar
retf
or
push
mov
test
sbb
mov
or
nop
call
mov
ins
sar
dec
gs
jns
cs
xor
and
ret
push
jo
shr
cs
push
cmps
jp
add
push
jns
sub
std
adc
push
pop
out
das
mov
mov
jmp
and
popa
mov
push
mov
or
push
gs
add
shr
mov
inc
jge
cwde
ins
popf
sub
lahf
xor
cli
xchg
call
scas
ss
xchg
in
xor
sub
push
pop
fwait
test
mov
xor
cmp
std
lea
sti
or
cmp
push
mov
call
int3
daa
enter
std
jo
test
fidiv
(bad)
jmp
xchg
inc
or
xchg
jp
imul
and
xlat
lock
pushf
add
rcl
ret
or
xor
lods
test
scas
jl
inc
lods
ror
sub
and
imul
sahf
push
pop
jb
or
test
cwde
es
sub
add
dec
into
test
pop
xchg
cmps
adc
daa
cmps
mov
xchg
ins
jae
ficomp
das
cmp
je
push
push
dec
inc
mov
jp
jmp
sahf
icebp
std
cdq
(bad)
mov
repz
mov
jns
sbb
fs
pop
pop
pop
js
imul
sbb
int
or
dec
arpl
cmps
sub
ret
or
push
push
mov
mov
jg
scas
sub
mov
push
fwait
test
ret
xor
je
fsubr
adc
bound
movs
in
push
movs
push
pop
lds
fwait
and
pop
ret
jp
mov
test
loopne
iret
push
retf
sahf
iret
push
test
retf
aad
adc
mov
dec
rol
shr
jbe
pop
sbb
fistp
mov
and
in
xchg
mov
mov
neg
and
cmps
mov
test
cmp
sub
retf
mov
test
inc
cmp
add
sahf
inc
or
jmp
add
test
xchg
mov
mov
mov
add
xchg
mov
sub
push
popa
inc
add
pusha
ins
sub
je
movs
cmp
xchg
mov
dec
adc
sbb
sub
cli
xchg
in
jne
pop
add
xor
pushf
sub
(bad)
mov
popa
fiadd
mov
into
pop
jmp
lea
sbb
(bad)
jb
fbld
repz
mov
dec
mov
inc
iret
cld
cmps
pop
mov
test
xchg
popf
aad
movs
mov
sub
pop
into
push
pop
mov
and
mov
test
pop
mov
jle
nop
(bad)
fcmove
or
in
xchg
fist
fdivr
mov
aas
fdiv
pushf
mov
add
dec
inc
pop
mov
adc
leave
js
mov
call
push
mov
dec
mov
or
mov
push
aam
retf
push
lock
mov
adc
xor
jle
rol
adc
adc
add
adc
adc
sub
jne
cmp
shl
pop
daa
(bad)
sub
in
xor
test
enter
lock
cli
push
push
loope
mov
inc
sub
pop
lea
cs
inc
push
cmp
mov
int
xchg
mov
push
adc
inc
jbe
inc
outs
ror
jl
sub
test
jnp
lock
pop
pop
retf
fst
and
push
out
sub
lds
dec
jmp
in
cmp
rol
cdq
fnstcw
repnz
sbb
mov
ins
mov
and
rol
push
shl
mov
jb
or
adc
mov
pop
mov
fisttp
push
pop
adc
mov
adc
mov
sbb
arpl
push
jo
cmp
sub
mov
cmp
pushf
(bad)
or
loopne
mov
repnz
xchg
jno
adc
dec
test
fiadd
add
adc
mov
iret
popf
xchg
pop
jmp
int
pop
sahf
movs
lods
mov
das
icebp
jmp
sub
stc
sub
fcomp
aam
arpl
adc
clc
sti
stos
xor
dec
scas
pop
cwde
imul
(bad)
adc
jmp
jmp
dec
sahf
(bad)
lea
sar
in
pop
xlat
push
cmp
repnz
mov
cmps
dec
push
fstp
(bad)
sti
cdq
inc
mov
jp
addr16
call
jbe
mov
(bad)
push
mov
push
mov
mov
ins
repnz
xor
push
fsubr
call
xchg
mov
cwde
sbb
xlat
mov
shl
pop
jae
loopne
and
sbb
in
gs
cmp
cmp
arpl
dec
not
ret
lods
sub
dec
in
dec
test
push
adc
xor
js
pop
sub
rcl
repz
push
jg
xchg
call
push
pop
inc
xchg
retf
rcl
pcmpeqd
lahf
(bad)
cmps
pop
sub
(bad)
cwde
repz
cmp
pop
dec
es
add
sub
pushf
and
test
fs
push
(bad)
push
xlat
dec
mov
pop
jle
pop
dec
cmp
cmp
ins
cwde
es
adc
jle
retf
fldenv
dec
jne
jle
test
push
mov
mov
mov
addr16
dec
push
dec
nop
sbb
adc
mov
out
push
push
and
mov
loopne
sti
ds
jl
xlat
jae
add
xchg
inc
sub
sub
enter
xchg
clc
xchg
pushf
push
frstor
ds
hlt
or
int3
mov
cmps
sbb
dec
cdq
lods
pop
mov
lods
movzx
sar
into
push
dec
inc
ror
retf
mov
push
mov
cmps
lea
or
sub
inc
cs
leave
test
jle
(bad)
repz
add
jl
adc
ins
jecxz
fldenv
push
in
adc
mul
jno
dec
dec
and
mov
ds
mov
xor
int
mov
mov
fs
mov
imul
xchg
pop
sbb
sub
add
or
xor
or
out
cmc
ja
adc
pop
lods
out
pop
gs
push
and
movs
mov
rcr
sub
rcr
bound
pop
scas
pop
ror
xchg
retf
xor
push
pop
dec
jg
mov
adc
test
and
ds
arpl
add
clc
std
dec
pop
xor
shl
les
popf
push
data16
cmp
out
dec
push
in
cmp
std
cmp
inc
push
lahf
mov
mov
push
scas
test
fisub
imul
xchg
pushf
sti
push
mov
pop
aas
mov
das
popf
rcl
or
pop
push
sbb
aaa
lea
push
xor
mov
repnz
inc
jecxz
in
into
loope
hlt
out
or
fcmovnu
jno
inc
pushf
dec
test
(bad)
jl
push
adc
jbe
ficom
fwait
pop
call
mov
cdq
xchg
int
in
in
dec
adc
mov
nop
sbb
jb
xor
mov
cmp
pop
xchg
clc
cmp
push
push
adc
loop
push
rcr
inc
xor
inc
loop
imul
inc
xor
inc
test
cmps
cmp
xchg
mov
jmp
sbb
ins
xlat
fldenv
inc
(bad)
push
shr
pop
jbe
push
std
xchg
xchg
sbb
ja
fdivrp
lock
fistp
xchg
mov
arpl
add
mov
cmp
popa
outs
cmp
xchg
mov
repnz
mov
cmp
in
lea
in
xchg
lds
ins
popf
les
call
mov
mov
sbb
push
mov
jecxz
sub
rcl
loop
jnp
(bad)
cwde
push
push
ror
gs
neg
pop
adc
mov
pop
push
and
dec
mov
dec
daa
loopne
fsubr
pop
xor
call
and
lods
xchg
lds
jle
push
pop
dec
call
jl
das
mov
in
pop
add
stc
xchg
je
mov
aas
jns
cmp
mov
les
lock
jns
sub
add
add
xchg
push
xchg
scas
test
dec
jmp
shl
xor
aaa
dec
add
mov
shl
pop
xchg
call
mov
clc
popf
lea
mov
add
xchg
inc
mov
cmp
test
pop
lods
mov
js
xchg
and
ret
mov
inc
pop
bound
shl
adc
and
aad
aas
adc
push
sub
fisub
xchg
outs
mov
xchg
inc
stc
pop
loope
pop
mov
sar
adc
add
xor
dec
mov
and
pop
cmps
push
cmp
cmp
jecxz
retf
sbb
sub
(bad)
dec
aas
mov
loopne
sti
int
das
(bad)
dec
aad
(bad)
std
scas
loop
inc
aaa
pop
(bad)
retf
cdq
int
(bad)
sti
jo
jge
xchg
rcl
and
push
push
(bad)
rcr
push
jmp
mov
sbb
les
sbb
xor
mov
fprem
loope
rcl
cmp
cmc
xor
jge
mov
jno
loop
pushf
call
pusha
mov
push
(bad)
sub
lds
sbb
out
hlt
xor
jp
(bad)
push
inc
xchg
sub
cmp
push
and
enter
mov
adc
imul
gs
in
cmp
mov
retf
lock
mov
outs
nop
push
add
ret
add
aam
push
xchg
sbb
add
stc
imul
and
cdq
mov
cmp
jo
mov
(bad)
bsf
ds
push
sub
enter
call
je
mov
repz
popa
aam
push
push
test
loope
iret
xchg
push
xchg
das
add
mov
or
sbb
pop
ds
or
into
xlat
mov
mov
pop
ret
loopne
outs
pop
fwait
sub
int3
mov
test
test
lahf
fisubr
mov
push
sbb
xchg
loopne
loope
sub
lods
adc
jp
mov
imul
leave
cs
imul
pop
scas
into
sar
ret
scas
lahf
push
movs
xchg
push
popa
jbe
mov
sbb
js
dec
out
jl
lods
adc
test
stos
xchg
scas
shl
loop
int3
and
jo
retf
enter
inc
sti
jl
and
enter
push
mov
imul
fild
out
fnstsw
stos
inc
push
mov
cmp
popa
int
or
push
jl
stc
es
jne
jo
dec
add
inc
hlt
pop
icebp
(bad)
or
mov
add
mov
sbb
(bad)
ds
cmp
aaa
ficomp
ret
sti
outs
xor
push
fs
and
std
xchg
imul
loop
bndstx
in
sub
(bad)
dec
inc
retf
cmp
mov
or
cdq
cmp
sbb
jo
outs
sbb
xchg
fist
inc
(bad)
xchg
cwde
xchg
es
add
std
lea
ins
xlat
inc
cld
mov
jmp
out
xlat
xchg
inc
lods
cmp
sahf
cwde
hlt
iret
scas
push
and
and
or
inc
xchg
or
cmp
aad
add
cmp
xchg
shl
pop
push
push
bswap
mov
sar
xchg
pop
xchg
pop
pop
dec
cs
sbb
nop
ret
dec
data16
xlat
jbe
test
test
push
imul
xchg
xchg
mov
pop
scas
and
(bad)
in
pop
mov
pushf
jecxz
pop
and
sbb
stos
scas
shl
inc
mov
sbb
shl
movs
push
sti
mov
push
and
xchg
jle
addr16
daa
(bad)
jno
shl
lds
and
cmc
gs
cwde
in
hlt
add
mov
or
fcomp
addr16
pop
xor
shr
in
xchg
dec
add
pop
jb
push
inc
mov
ret
out
aaa
push
xchg
cmps
add
sub
loop
sbb
ss
push
outs
daa
mov
sub
and
push
test
ins
xchg
adc
leave
and
pop
cmp
sbb
and
jle
lea
call
sbb
adc
sub
add
test
xor
retf
outs
pop
icebp
push
retf
ss
aas
xchg
imul
sub
rcr
imul
cwde
push
(bad)
clc
xor
cld
mov
inc
mov
iret
out
push
mov
int3
movs
pushf
les
stos
mov
fldcw
inc
dec
nop
hlt
pop
arpl
sbb
fldenv
stos
or
mov
jp
mov
lods
push
mov
pop
cli
push
adc
idiv
jmp
mov
pop
pop
cmp
jecxz
pop
mov
imul
repnz
bnd
cs
pusha
outs
es
lahf
cmp
pop
cmp
mov
pop
adc
xchg
out
jl
dec
cmps
or
mov
push
mov
cwde
adc
in
test
mov
pop
jbe
test
mov
loope
inc
cmp
mov
aaa
mov
or
rcl
push
jno
rol
dec
out
(bad)
push
lds
repz
or
ins
adc
jnp
sub
sti
cmc
jg
mov
outs
mov
pop
int
ror
push
test
jb
stc
sbb
pop
adc
dec
movs
pop
xchg
or
aas
mov
jle
add
iret
jecxz
hlt
idiv
mov
inc
dec
cdq
mov
adc
mov
ins
fld
fwait
push
xchg
jg
lods
sbb
scas
cld
push
jne
inc
mov
jo
jmp
in
add
push
jmp
movs
adc
push
cwde
push
sub
pop
out
mov
or
data16
add
jge
aaa
mov
ror
push
or
xchg
dec
test
mov
ins
inc
cld
ret
cmp
mov
mov
pop
cwde
mov
add
cmps
cli
cmp
out
sub
lea
cmp
xchg
add
xchg
in
sbb
retf
ins
cmps
mov
lds
or
inc
aaa
pop
mov
div
sub
add
daa
outs
sahf
push
shl
bound
mov
and
daa
sub
and
sbb
in
pop
dec
lahf
jge
adc
xor
mul
imul
data16
xchg
pop
push
sbb
stc
and
stos
sbb
xlat
out
push
dec
ins
jno
out
dec
scas
dec
and
dec
sar
jl
adc
adc
stos
adc
adc
fmul
xchg
aas
pop
(bad)
sub
popa
in
and
retf
jne
mov
outs
xchg
sbb
ret
test
jle
imul
dec
mov
call
sbb
adc
aam
mov
cdq
jns
sbb
ins
ficom
cmc
stc
cmp
push
mov
push
sbb
jns
inc
inc
push
loop
or
(bad)
cmp
adc
pop
sbb
sar
jbe
mov
cmp
mov
cld
cmp
lahf
mov
cmp
or
sbb
jmp
mov
or
jne
dec
pop
and
jno
cmps
jecxz
enter
inc
adc
and
xlat
retf
push
(bad)
in
and
dec
out
rcl
fdivrp
js
add
in
inc
or
stc
xor
pop
xor
mov
popf
pushf
(bad)
je
xor
in
and
sahf
test
in
mov
xor
inc
adc
and
sub
xor
jnp
idiv
ret
test
out
sub
icebp
cmp
sar
lods
pushf
imul
mov
or
sbb
mov
sub
mov
or
add
fsubr
test
sbb
(bad)
fistp
pop
push
sub
jo
add
loope
aam
push
ret
mov
retf
ror
imul
xor
jg
jmp
xchg
out
sub
push
retf
or
inc
in
push
push
add
outs
movs
popf
push
repnz
jb
cdq
sub
mov
daa
jns
in
fmul
test
inc
fstp
mov
imul
pop
mov
gs
push
adc
xor
dec
leave
adc
mov
(bad)
mov
call
adc
iret
pushf
js
lahf
les
mov
jb
push
add
mov
sbb
xlat
out
and
pop
das
jg
rcr
in
mov
outs
ss
mov
ss
sub
push
xchg
jecxz
push
aaa
cli
popa
lds
mov
xor
jmp
and
test
adc
repz
jae
scas
adc
push
push
xlat
cmps
inc
xchg
test
xchg
pushf
add
arpl
pop
mov
dec
mov
rol
call
xor
stc
jmp
add
xchg
cmps
mul
fist
mov
lods
aam
(bad)
cmps
cmp
rcr
outs
sahf
pop
sbb
push
dec
(bad)
dec
into
pushf
nop
lahf
fnstenv
dec
mov
gs
stc
inc
add
and
push
(bad)
popf
in
push
mov
in
icebp
stc
xchg
and
into
clc
in
aad
xor
(bad)
(bad)
jle
xchg
ss
jne
inc
pop
mov
mov
mov
cmp
addr16
add
pop
out
push
mov
cdq
ret
jmp
ret
or
loop
and
pop
push
jbe
and
sub
mov
mov
dec
dec
xor
mov
fdiv
pop
bound
fmul
aad
daa
imul
pop
or
mov
les
push
int
scas
retf
test
in
xchg
aad
push
cs
les
mov
pop
call
leave
pop
lds
fcmovbe
cli
cmp
daa
adc
push
mov
mov
mov
jmp
scas
add
mov
out
mov
cmp
imul
push
push
call
pop
aas
js
outs
cmp
mov
fisttp
shr
ds
shl
(bad)
and
or
ror
daa
lds
sahf
mov
cmc
shl
(bad)
xlat
sbb
jo
mov
jns
clc
cdq
stos
xor
add
test
inc
inc
mov
xlat
jnp
sub
mov
aad
mov
dec
(bad)
adc
fwait
jg
jmp
aaa
pop
in
xlat
loope
mov
sbb
cwde
icebp
sbb
xchg
(bad)
stos
and
mov
movs
loop
mov
jo
mov
nop
sbb
mov
lahf
mov
mov
or
retf
add
or
xlat
(bad)
loope
(bad)
jmp
hlt
mov
mov
enter
retf
icebp
gs
ficom
std
pop
mov
popa
das
sbb
leave
cmp
push
fcmovnbe
je
pop
push
cs
sbb
cmc
mov
cmp
push
shr
sbb
loope
push
and
push
sbb
pop
clc
ds
pop
cmc
out
cwde
(bad)
mov
sbb
cmc
sub
mov
push
sub
jnp
sbb
stc
imul
std
sbb
mov
xor
test
jne
inc
je
push
sbb
xchg
test
fcomip
stc
lock
inc
(bad)
pop
icebp
or
das
iret
dec
mov
cmps
mov
mov
xchg
js
push
xchg
xchg
sub
mov
mov
fnstenv
dec
sub
xor
mov
lea
and
test
sbb
pop
(bad)
mov
xchg
mov
nop
(bad)
fidivr
outs
adc
mul
in
addr16
sub
mov
xchg
adc
scas
int3
arpl
ds
xchg
xchg
jb
out
xchg
imul
dec
inc
pop
stos
and
push
jno
sub
sub
repz
call
(bad)
daa
push
(bad)
mov
xchg
jno
push
push
cmp
popf
pusha
inc
fisttp
cmp
fldcw
cwde
pop
fdiv
and
dec
sahf
cmps
sub
aad
popf
movs
sar
mov
test
jl
lahf
dec
jmp
push
and
xor
sub
mov
in
outs
xor
movs
xor
jae
inc
add
jno
sub
cmp
xchg
jmp
in
adc
imul
arpl
mov
ret
shr
jbe
fld
sahf
out
mov
fimul
mov
cli
hlt
add
inc
int3
sub
mov
popa
jp
cs
jmp
dec
cmp
fcmovbe
sub
mov
mov
rcl
adc
lods
les
ficom
out
fwait
mov
mov
cmps
sbb
iret
inc
xchg
pop
movs
(bad)
retf
stc
scas
mov
aam
mov
cmp
adc
sub
xchg
adc
sahf
mov
fcomip
dec
iret
push
jo
rcl
sub
add
scas
call
xchg
inc
sub
dec
or
pop
neg
fdiv
jb
stos
(bad)
jo
pop
mov
mov
mov
sub
mov
jl
push
call
scas
xor
sahf
mov
xchg
inc
int3
loop
scas
push
cmp
xor
push
lds
dec
cli
inc
lahf
pop
push
or
adc
sub
in
outs
lds
jo
test
int3
out
jnp
lods
leave
out
pushf
loopne
xchg
adc
(bad)
jns
sub
fcom
je
and
mov
adc
jns
adc
xchg
jecxz
inc
push
in
shl
xchg
popa
out
xchg
ins
sbb
cdq
dec
retf
xor
jle
and
mov
xchg
cmp
inc
jl
(bad)
retf
clc
cmp
daa
in
scas
xor
add
sbb
std
push
xor
sti
pop
data16
cmp
xchg
mov
inc
xlat
mov
ret
push
and
push
call
add
in
pop
inc
mov
add
dec
ret
bound
out
in
cld
iret
loop
aam
aas
add
jb
mov
pop
push
push
and
test
imul
fmul
dec
pushf
ds
mov
push
les
retf
push
sahf
pop
and
fdivp
or
cmp
lods
inc
sub
and
mov
movs
enter
adc
cmp
in
inc
cmp
lds
retf
test
sbb
sahf
lds
dec
into
cmp
int
loopne
dec
rdtsc
mov
cmp
push
inc
dec
lahf
pop
pop
ds
push
pusha
jmp
adc
scas
jbe
daa
xor
mov
add
into
int3
jmp
out
dec
and
xchg
add
out
sbb
mov
and
pop
xor
and
mov
gs
shr
hlt
xchg
pop
ret
mov
push
scas
and
sbb
sbb
fmul
mov
push
xchg
addr16
int
lock
mov
call
mov
lock
sub
mov
jmp
retf
cmc
pushf
(bad)
imul
rsm
loopne
cmps
xor
std
not
test
jg
inc
add
call
cmc
or
movs
(bad)
xor
scas
or
sbb
das
add
dec
scas
and
mov
push
sti
lock
xchg
cmps
xchg
cmc
sub
loopne
in
rcl
dec
mov
test
fistp
retf
cmps
mov
mov
out
add
push
dec
sub
add
and
jg
sbb
ficomp
adc
cld
push
and
ds
xchg
xchg
imul
push
leave
movs
rcr
mov
test
test
sub
fsubr
and
sub
in
stos
and
retf
dec
call
stos
xchg
adc
adc
pop
outs
ins
mov
lea
xchg
pop
out
fs
mov
out
add
aad
rcl
aad
pop
fidivr
push
adc
push
cmps
sbb
mov
enter
xchg
cdq
pop
test
scas
sbb
mov
inc
adc
ja
or
pop
repz
pop
lock
push
sbb
call
dec
shr
and
inc
lods
js
sub
sub
jb
inc
idiv
mov
sbb
pop
fs
sub
test
rcr
sbb
pop
and
ret
push
lods
add
mov
inc
sbb
mov
out
ins
ja
(bad)
jp
push
test
mov
outs
push
lds
fisttp
cdq
mov
push
cmps
jno
popf
test
sub
mov
cdq
dec
and
pop
jl
dec
pop
or
jmp
(bad)
and
push
xchg
add
aas
imul
pop
dec
xor
lods
arpl
add
es
mov
mov
enter
sbb
in
sbb
test
lahf
push
imul
push
xor
or
mov
inc
aam
test
ja
inc
xchg
sbb
sahf
arpl
adc
enter
and
sbb
stc
int
mov
scas
out
test
movs
sbb
popf
mov
push
push
inc
adc
jb
pop
cmps
fwait
sbb
ret
outs
adc
test
movs
xchg
and
cmp
sbb
jb
(bad)
sbb
fbstp
mov
aad
pop
jge
retf
into
jae
cs
or
or
out
fcomp
or
mov
in
adc
(bad)
sar
jno
lods
sbb
mov
xor
mov
xor
stos
sub
aad
in
sti
retf
popf
cmp
and
lea
call
push
sbb
ins
shl
gs
cwde
adc
mov
pop
out
xor
add
jecxz
test
sbb
sar
fwait
fwait
popf
dec
sbb
cmp
inc
test
or
xor
push
adc
xor
cmp
sub
in
push
int3
out
xchg
je
mov
movs
pop
mov
jmp
jo
outs
pusha
ret
call
mov
ins
shl
call
es
in
test
out
enter
(bad)
cmps
aaa
test
sbb
or
mov
and
imul
lds
(bad)
sbb
nop
pop
mov
and
in
pop
mov
pop
add
clc
pop
adc
push
outs
je
xchg
dec
mov
dec
call
xor
mov
fisttp
or
retf
(bad)
call
scas
mov
fsubr
mov
cmp
jno
push
xchg
nop
xor
add
and
push
into
mov
or
test
push
rcl
mov
aad
sar
retf
add
cld
pushfw
mov
int3
mov
sub
and
ror
idiv
loope
xchg
jp
sub
rcr
std
out
dec
mov
inc
fistp
mov
pop
js
scas
les
pop
gs
imul
sub
or
push
lea
adc
fmul
xchg
pop
das
retf
rcr
ret
xchg
(bad)
xor
xor
loop
inc
pop
in
cmp
xor
jmp
imul
ficomp
aaa
push
aaa
dec
gs
outs
jno
retf
iret
imul
push
xchg
call
in
sub
inc
cmp
into
add
in
je
push
jnp
arpl
sub
adc
adc
pcmpgtw
lds
dec
lds
clc
inc
ret
push
or
push
(bad)
ror
jle
mov
aaa
sti
xchg
fcom
das
jo
cli
xor
mov
lds
mov
cmp
les
or
ins
jmp
pop
xchg
mov
and
mov
outs
xor
inc
aas
mov
iret
jns
lods
fisttp
adc
or
xchg
dec
pop
pop
push
xor
and
jle
aaa
pop
sub
aaa
add
jbe
mov
sbb
popf
inc
(bad)
aam
lods
sub
shr
adc
ins
pop
loope
int
sahf
sbb
add
and
shl
or
mov
mov
sbb
dec
xchg
ja
aaa
jnp
in
les
int
cdq
lock
cmp
ret
mov
xor
cli
jecxz
mov
xchg
aad
adc
mov
push
xchg
pop
adc
sbb
daa
mov
clc
fwait
sbb
test
stc
add
lds
js
test
(bad)
sub
inc
dec
or
push
cmp
inc
mov
mov
addr16
fstp
les
dec
and
in
push
pop
scas
push
std
(bad)
cmp
xchg
mov
push
test
push
push
pop
cmps
sbb
mov
je
fstp
fsub
xor
mov
ins
cs
adc
sub
call
sub
(bad)
cdq
in
add
adc
ret
das
xchg
add
mov
and
mov
ret
push
dec
shl
push
and
scas
jmp
faddp
frstor
aad
retf
lds
adc
pushf
lahf
(bad)
arpl
xor
ret
out
iret
cmps
std
addr16
push
int
mov
out
cmp
(bad)
idiv
adc
push
retf
shl
mov
mov
mov
out
mov
lahf
loope
mov
imul
scas
and
out
xchg
cmps
mov
and
(bad)
xchg
sbb
popf
je
sub
mov
xchg
pushf
(bad)
hlt
jl
mov
inc
inc
fidiv
or
(bad)
jecxz
push
inc
aas
clc
nop
idiv
mov
lock
add
jg
push
push
jae
imul
jp
aas
fld
aad
lds
(bad)
repnz
lods
cs
xchg
inc
or
lea
repnz
and
sub
(bad)
cmps
add
cdq
loopne
psubd
mov
imul
jns
scas
inc
push
pop
and
jp
jb
scas
jle
and
add
das
cmp
push
sub
sti
ins
push
pop
cmc
inc
sbb
pop
xor
cdq
jecxz
hlt
mov
pop
or
retf
repz
cmp
pop
dec
(bad)
xchg
add
cmp
push
jle
xchg
and
or
ds
cmp
mov
lds
shr
push
inc
repz
add
inc
movs
add
ds
(bad)
sti
adc
push
pusha
sti
push
mov
out
ins
cmp
test
out
pop
mov
enter
mov
out
xchg
inc
mov
adc
lods
popf
fadd
stos
add
push
cmp
vandnps
jge
clc
mov
push
xor
mov
out
push
inc
fs
es
dec
lea
pop
mov
dec
pop
xchg
inc
push
(bad)
jle
cs
stc
loopne
or
push
and
push
dec
dec
jbe
adc
call
xor
lea
push
mov
jmp
push
lahf
out
lahf
and
(bad)
popf
call
jb
push
xchg
(bad)
and
cmp
sub
out
ret
sbb
cmc
(bad)
rcl
and
push
sub
imul
sub
loope
xchg
lahf
mov
out
(bad)
pop
das
mov
push
or
inc
(bad)
xchg
xchg
push
pop
or
push
jmp
ret
or
cmp
enter
push
lahf
scas
xchg
ins
cld
jbe
loopne
scas
call
push
pop
pop
inc
add
xor
fdivr
aaa
jno
xchg
int3
sub
jg
jmp
adc
cwde
pushf
mov
fidiv
bound
aas
cmp
add
xor
stos
ins
cmp
test
mov
pushf
adc
jle
imul
int
cwde
cld
lds
sbb
(bad)
and
sbb
inc
mov
lds
pop
jge
cli
sub
adc
xor
and
scas
shl
popa
fucomi
and
push
lds
sbb
(bad)
xchg
cli
unpcklps
xor
out
(bad)
mov
and
mov
imul
xchg
je
out
xor
mov
icebp
jne
xchg
mov
adc
fsub
add
fs
daa
inc
or
aas
xchg
xchg
jmp
sti
scas
aas
int3
and
add
das
and
fcmovnbe
inc
adc
cmp
pop
push
mov
clc
rol
fs
(bad)
mov
jl
sbb
fstp
repz
into
xchg
and
inc
clc
std
ficom
test
mov
int3
dec
sbb
leave
jns
inc
gs
cmp
dec
or
adc
in
sub
retf
fistp
dec
and
sbb
nop
inc
stos
mov
xchg
(bad)
imul
and
ficomp
cmp
rol
imul
dec
add
ret
push
cmp
push
fstp
pop
sub
ss
dec
gs
test
jno
repnz
imul
stc
into
xchg
push
inc
sbb
mov
aas
mov
dec
hlt
pop
fs
inc
push
call
jge
fisttp
ds
rol
xchg
fcmovnb
add
or
popf
xor
add
dec
add
or
add
jno
xor
jp
ret
jl
data16
shl
pop
in
call
icebp
xor
int3
sub
pop
in
adc
jmp
sub
nop
mov
in
nop
mov
mov
cmp
pop
les
daa
cmp
out
shl
sub
int3
and
in
cli
push
pushf
sbb
xchg
mov
pop
(bad)
push
or
dec
arpl
out
sahf
or
cmps
mov
push
lods
mov
daa
xor
aaa
aas
rcl
ins
rcr
mov
pushf
das
enter
stos
pop
xor
aaa
add
dec
pop
push
cld
das
ins
lock
push
out
xchg
pusha
int3
jnp
loopne
call
shl
jno
mov
pop
imul
inc
(bad)
add
int
hlt
aad
inc
and
cmp
or
test
sbb
mov
inc
pop
mov
xor
add
sbb
daa
fnsave
sbb
push
repz
jle
sbb
pop
mov
add
or
fs
pop
sbb
ins
retf
adc
mov
inc
lea
push
xchg
pop
pop
push
(bad)
xor
sbb
or
sbb
inc
mov
dec
add
mov
add
loopne
mov
pop
inc
call
push
or
dec
(bad)
imul
pop
fiadd
stos
or
jo
dec
int
test
lds
int3
xchg
pop
jns
inc
xchg
xor
pushf
push
and
adc
daa
inc
sbb
mov
jb
pop
push
(bad)
(bad)
cmp
sar
xor
xor
ins
or
addr16
or
mov
idiv
inc
push
stc
adc
inc
push
call
mov
dec
push
out
pop
ss
jmp
es
cs
lea
(bad)
jl
test
and
pop
mov
mov
gs
in
adc
imul
mov
rcl
inc
hlt
adc
jnp
sbb
mov
call
adc
inc
add
push
push
in
out
push
xchg
cmp
and
xchg
pop
mov
cmp
in
add
mov
in
hlt
out
popf
std
xchg
aad
scas
out
loope
lea
inc
cmps
inc
fsubr
movs
stos
cmp
iret
and
bound
sahf
in
xor
cli
loopne
jns
mov
add
and
aaa
not
cmps
ret
fist
movs
or
and
in
enter
inc
fisttp
inc
or
or
pop
cmp
sti
add
cmp
movs
mov
push
cmc
test
retf
jle
test
sbb
cmp
and
xchg
push
jbe
addr16
jae
or
push
cmc
pop
xor
push
stc
inc
jbe
mov
cmp
rcl
cli
xchg
mov
ret
aaa
sub
fs
daa
and
in
push
mov
arpl
call
ficomp
iret
sbb
fwait
nop
sti
leave
cmp
adc
fcmove
stc
movs
(bad)
add
jmp
popf
pusha
in
add
jo
xlat
call
mov
call
cmp
cdq
daa
jl
fwait
mov
dec
ds
push
lods
test
jbe
mov
dec
aad
adc
movs
push
mov
xchg
xor
adc
adc
push
inc
test
mov
fwait
retf
sbb
outs
addr16
jo
adc
call
leave
add
mov
ret
mov
push
xor
aam
cmp
mov
repz
dec
hlt
inc
mov
sbb
inc
popa
aad
sbb
jmp
int3
and
out
pusha
sbb
dec
push
repz
inc
ja
es
in
adc
cwde
(bad)
xchg
nop
icebp
xor
(bad)
push
mov
sub
call
rcl
push
mov
dec
jle
shr
jne
ret
pop
mov
xor
xor
ret
mov
xor
repnz
inc
pop
loope
jp
add
sahf
cmps
dec
scas
das
call
ficomp
add
dec
pop
jecxz
(bad)
rcl
test
mov
add
enter
mov
shl
xor
popf
cmp
dec
fdivr
sbb
movs
cmp
lahf
in
sbb
js
push
stc
into
mov
xor
push
int
pop
fidivr
fwait
in
fsubr
add
jmp
ss
xchg
lahf
es
push
mov
imul
add
cmc
leave
(bad)
and
jno
mov
jb
ret
jge
push
sahf
jl
jmp
fidivr
pusha
push
cmc
xchg
push
sahf
xchg
cmps
xchg
cld
jbe
call
retf
shl
cmp
lea
or
mov
leave
xchg
stos
inc
mov
mov
dec
xchg
sti
jns
jmp
nop
jne
lock
sub
(bad)
jmp
cmc
pop
cld
test
pop
clc
cmp
adc
add
or
ror
jno
jbe
adc
dec
data16
sbb
mov
gs
shr
loope
xor
arpl
dec
out
xchg
mov
sub
arpl
outs
pop
rol
mov
mov
je
push
fdiv
sub
loop
mov
fldcw
lods
inc
and
loope
lock
neg
call
sbb
shr
add
repz
clc
enter
aaa
leave
bound
sbb
mov
mov
sti
push
ror
sub
xor
mov
sti
std
pop
jle
push
sbb
cmps
loop
outs
imul
and
not
cmp
push
and
add
das
dec
mov
stc
test
or
shl
mov
repnz
es
jecxz
pop
jg
fild
fsubr
arpl
ret
mov
int3
lods
pop
dec
aas
scas
pop
push
js
stos
adc
fs
clc
les
push
xchg
mov
mov
mov
mov
in
xor
xor
loope
mov
and
cmp
add
adc
ins
adc
mov
jbe
adc
ret
pop
mov
push
cli
sbb
xchg
mov
ins
shl
adc
jmp
mov
std
xor
sbb
fdivr
fs
jns
dec
in
mov
xchg
mov
mov
hlt
mov
jl
inc
lods
push
jmp
icebp
ins
adc
adc
fmulp
lods
jne
push
cmp
xchg
sub
shl
mov
and
stc
(bad)
sti
mov
cmp
les
sub
or
jb
out
dec
jne
mov
adc
xor
mov
add
or
in
mov
addr16
sub
pop
sub
mov
stos
adc
jae
outs
mov
sub
dec
mov
adc
fistp
lds
fldcw
aaa
push
das
outs
or
sahf
adc
cmp
pop
mov
dec
test
mov
in
dec
mov
test
cwde
adc
push
push
pop
adc
out
aas
xchg
mov
movs
imul
ins
dec
push
ficomp
mov
div
in
jmp
pop
mov
xchg
dec
outs
jno
lods
dec
xchg
data16
mov
test
mov
lods
out
mov
adc
cmc
mov
jmp
cdq
pop
(bad)
call
bound
pop
jmp
shl
cmc
aaa
lods
sub
test
and
pop
cmps
pop
arpl
sub
mov
sbb
mov
sbb
pop
je
inc
inc
push
xor
out
movs
xor
jp
pop
pop
icebp
dec
call
pop
fst
std
push
mov
inc
push
add
jne
call
mov
ins
std
(bad)
call
stc
xor
gs
out
push
cmc
xchg
mov
mov
in
push
lds
push
in
stc
add
loopne
dec
mov
mov
and
xor
jne
add
(bad)
jns
add
fistp
xchg
jne
sub
mov
popf
mov
fwait
mov
pop
addr16
adc
push
xlat
(bad)
es
cmps
sub
and
fstp
(bad)
out
mov
ins
push
mov
mov
mov
mov
push
retf
jecxz
mov
mov
in
popf
mov
mov
push
loope
push
jno
(bad)
repnz
adc
push
pop
push
or
add
je
mov
jle
pop
icebp
adc
arpl
mov
and
pop
cmp
mov
and
mov
loop
dec
out
dec
cmc
cli
rcr
movs
call
retf
nop
sbb
lods
pop
std
int
pushf
pushf
xchg
and
popa
fwait
add
jmp
daa
ss
out
dec
cmp
leave
cdq
loopne
sti
fs
cmp
add
neg
adc
adc
lods
(bad)
ins
dec
or
fdivp
imul
jp
bnd
sbb
mov
push
dec
and
fs
fnsave
mov
adc
or
outs
pop
fwait
dec
push
je
(bad)
hlt
cmp
enter
jb
loope
xchg
retf
sub
jae
push
mov
imul
out
cmp
push
inc
push
xchg
fwait
inc
pop
fdiv
sbb
jae
xor
push
cmps
dec
xchg
mov
adc
les
vpcomd
mov
adc
int3
call
and
xlat
popf
inc
test
jle
mov
xchg
adc
loop
ret
push
fs
jle
fisttp
fisub
repnz
stos
call
jecxz
or
cmps
je
jge
sub
jae
adc
xchg
loopne
xchg
rcl
jmp
sub
int3
mov
enter
sub
out
dec
adc
out
call
push
dec
neg
shl
or
in
mov
inc
into
add
stc
pushf
adc
call
mov
or
repnz
add
dec
sub
aas
dec
mov
mov
jo
pop
add
sti
sub
sar
lods
mov
dec
cld
in
ret
pop
mov
push
mov
hlt
xchg
(bad)
mov
or
jno
loope
out
inc
movs
xlat
mov
adc
and
add
idiv
xor
popa
aad
jmp
jnp
fisub
arpl
push
jmp
xchg
or
push
fisubr
test
outs
mov
test
pop
out
inc
in
cmp
test
and
xchg
jmp
aad
cdq
adc
pop
mov
int3
bound
lea
nop
ret
lock
add
enter
jnp
call
dec
ret
leave
test
fld
pusha
pop
push
je
cli
mov
popf
jge
push
pop
icebp
scas
xor
push
fst
mov
jle
dec
js
test
ss
leave
imul
mov
mov
retf
jae
shr
loop
push
and
pushf
jo
cmp
ret
clc
pop
out
jle
or
add
sbb
inc
xor
(bad)
fldl2e
pop
pop
push
cmps
das
jg
push
mov
jg
add
mov
mov
pop
loopne
push
add
dec
in
add
seta
nop
das
mov
jg
jle
push
mov
mov
fnclex
je
dec
or
data16
bndldx
pop
jae
or
(bad)
cmp
cmc
mov
retfw
in
inc
in
lods
scas
push
jp
sti
dec
(bad)
sub
fs
sbb
xchg
into
cld
xor
int
mov
mov
push
xor
xlat
jae
ret
std
sti
in
mov
sahf
jo
add
adc
test
mov
mov
dec
call
mov
mov
pop
xchg
mov
mov
mov
and
adc
rol
aas
popa
out
es
frstor
not
jb
aaa
das
xchg
repz
sub
xchg
das
retf
mov
dec
inc
jmp
mov
inc
popf
pusha
ja
sub
dec
cmp
pop
push
dec
cmc
mov
inc
ror
(bad)
pop
mov
(bad)
mov
sub
mov
push
cmp
into
sub
enter
int
call
aaa
push
dec
test
fadd
aaa
push
movs
fcmovne
cld
mov
aaa
sub
xor
out
sbb
call
iret
mov
xchg
and
lods
inc
mov
or
pop
jmp
inc
sti
and
sub
adc
mov
mov
mov
scas
scas
mov
scas
fwait
push
(bad)
shl
jle
cmp
jge
loopne
(bad)
jo
fs
(bad)
push
rol
pop
jge
ror
pusha
inc
call
push
mov
mov
push
push
ins
pop
jmp
push
jnp
sub
jmp
xchg
jle
outs
(bad)
dec
arpl
mov
mov
test
mov
dec
dec
iret
js
aaa
gs
cmps
cld
aas
xchg
imul
mov
sbb
retf
jg
js
adc
xor
pop
fld
push
popa
aaa
jmp
dec
fiadd
int
mov
mov
fucom
out
les
mov
push
imul
pop
in
dec
cmc
inc
cdq
and
jo
mov
pop
mov
add
xchg
test
aad
mov
mov
jne
call
push
cmp
sub
push
cwde
outs
clc
sub
lods
outs
mov
jge
push
or
test
ds
in
pop
sbb
pop
mov
and
jmp
(bad)
mov
sahf
scas
mov
dec
jnp
inc
cmp
jmp
inc
sbb
test
test
enter
xor
(bad)
rcr
icebp
fdiv
jmp
sub
xchg
inc
ror
push
sbb
sahf
mov
cmps
inc
cmp
es
sbb
rcr
mov
cli
adc
and
inc
inc
int3
xchg
pop
jge
inc
js
push
xor
sbb
mov
shr
mov
jmp
enter
sets
retf
add
stc
inc
jno
lods
mov
call
out
jmp
mov
add
xlat
je
sub
push
aad
ret
test
sahf
pop
xor
js
cmps
pop
pop
pop
nop
out
sub
add
mov
pop
nop
cdq
xchg
mov
js
pop
jg
iret
dec
pop
pop
jnp
(bad)
arpl
jo
loopne
mov
mov
in
inc
(bad)
cmc
in
fldcw
mov
movs
scas
(bad)
mov
jbe
mov
cmp
aaa
add
pop
cmp
mov
jl
and
sbb
out
pop
push
mov
cmp
fcmovnbe
mov
adc
add
and
xor
and
movs
xor
inc
mov
cmc
jnp
out
or
hlt
ja
mov
and
jp
je
outs
stos
mov
inc
mov
push
sbb
in
pop
retf
adc
outs
sub
outs
push
out
adc
sub
jnp
leave
jmp
enter
mov
mov
mov
out
adc
push
dec
scas
sbb
bnd
into
data16
xchg
push
dec
or
dec
adc
fadd
ja
and
out
mov
lods
jle
pop
leave
jmp
inc
mov
xlat
js
cmp
or
sbb
xor
push
repz
fnstenv
cmp
inc
and
adc
rcl
push
add
(bad)
clc
pop
jle
push
fstp
add
pop
arpl
call
sub
sahf
(bad)
(bad)
adc
out
out
and
and
cmps
fnstsw
in
gs
outs
pop
or
lahf
pop
sbb
jge
out
outs
xchg
cwde
std
movs
sbb
in
dec
pusha
retf
inc
push
sub
adc
outs
jnp
and
pop
gs
cmp
cmp
icebp
sub
and
mov
fdivr
pminub
pop
ret
stos
inc
sub
push
jmp
data16
mov
sbb
sbb
rcr
in
dec
xor
(bad)
(bad)
xor
mov
stos
push
daa
imul
jne
das
nop
fmul
inc
imul
fbld
or
xor
mov
dec
jg
xlat
jae
addr16
test
push
fsub
repz
loop
pop
and
push
sar
inc
pop
mov
dec
nop
out
adc
xchg
add
pop
ror
adc
sub
ja
sub
mov
jge
das
sti
arpl
jg
push
ror
lods
mov
fstp
fcos
in
cmps
cmps
mov
xchg
or
ins
sti
adc
mov
lahf
sbb
or
loopne
xchg
push
rcl
sbb
fistp
enter
mov
mov
xor
add
jns
outs
in
inc
inc
cmps
jl
or
xchg
mov
cmp
push
int3
xchg
sbb
mov
inc
in
loope
push
adc
aas
pop
in
pop
movs
js
sub
or
iret
pshufw
std
mov
jl
pop
mov
jg
xchg
inc
adc
lock
or
shl
pop
aaa
inc
push
push
sbb
into
fucomp
sti
dec
fucomip
mov
inc
daa
jns
pop
sub
pop
(bad)
xchg
test
push
addr16
xor
mov
cmp
pop
mov
mov
and
in
es
cwde
icebp
sub
fst
jo
xchg
lods
loopne
inc
jmp
mov
aad
bound
out
sbb
dec
imul
fsub
mov
or
gs
dec
mov
loop
mov
mov
fst
test
mov
push
outs
and
sar
pop
fwait
shl
movs
push
lea
inc
fdiv
add
mov
inc
jmp
frstor
retf
or
sub
adc
fdivp
shl
push
xor
mov
jmp
mov
out
add
cmp
push
cmp
daa
sbb
sbb
ja
cwde
lahf
push
adc
mov
jmp
ins
inc
adc
push
and
inc
and
loop
mov
repz
ins
lahf
retf
mov
add
mov
inc
sub
imul
(bad)
(bad)
call
clc
test
retf
mov
push
sub
adc
aad
push
bound
and
add
ins
xlat
push
cli
jb
loop
dec
lea
test
sbb
sub
sub
cmps
sub
adc
and
fdiv
in
(bad)
cld
fcom
daa
cmp
shl
push
les
enter
pushf
call
pop
push
or
lahf
lock
pop
xchg
cld
mov
int
or
int3
inc
pop
je
mov
xchg
sub
daa
mul
jl
ret
callw
mov
inc
je
jle
push
imul
cmp
jb
retf
dec
or
stos
dec
dec
fs
mov
cmps
and
push
jae
jne
fisubr
add
pop
jmp
add
inc
gs
pop
jg
(bad)
clc
mov
ret
mov
test
ret
out
jecxz
fsub
or
mov
(bad)
mov
sbb
push
lds
test
sub
cmc
shl
gs
mov
dec
loop
adc
nop
ret
ja
test
pcmpeqd
out
or
dec
jo
lock
mov
xchg
shr
fiadd
stc
aam
shl
adc
or
movs
mov
sub
jge
arpl
cmovp
jmp
in
popf
rcl
push
push
out
jbe
pop
mov
inc
sub
retf
xchg
inc
cmps
call
sub
inc
stos
jns
mov
fstp
mov
xor
scas
sbb
sgdtd
sar
int3
mov
stos
xchg
div
nop
push
ret
std
ins
ins
mov
ds
icebp
(bad)
cwde
outs
in
fistp
jmp
iret
in
sbb
jbe
test
frstor
lds
or
mov
push
pop
fisttp
outs
or
movs
rcl
into
mov
mov
scas
add
mov
or
push
or
hlt
xor
vpsubusb
xchg
push
cmp
les
mov
iret
xchg
mov
nop
xchg
repnz
jle
mov
and
or
or
cmp
cmp
idiv
test
push
jge
mov
adc
push
push
daa
push
aam
add
lods
rcl
call
fild
cmp
and
repz
jnp
sahf
adc
das
or
pusha
pop
(bad)
push
cli
jae
pop
inc
rcr
sahf
test
fld
pushf
xchg
nop
mov
test
push
daa
adc
jb
ret
pusha
jns
jmp
iret
sub
neg
or
scas
aas
bound
out
int3
pop
pop
clc
ins
(bad)
bnd
cmp
cmps
mov
in
pop
cmp
xchg
ins
adc
xchg
mov
pop
sbb
int3
in
aad
pop
mov
outs
xchg
inc
fbld
aaa
xchg
add
imul
jb
push
dec
bound
sbb
mov
xlat
dec
retf
mov
mov
add
mov
sub
icebp
cmp
pop
(bad)
cmp
push
add
gs
or
pop
and
mov
sbb
clc
inc
call
sub
xchg
sbb
fldenv
mov
ins
xchg
jg
fcomp
enter
mov
addr16
pusha
fs
test
out
std
(bad)
jmp
shl
gs
pop
inc
sbb
cwde
fsubr
cmps
xchg
es
sbb
clc
mov
pushf
aaa
out
shl
mov
pop
push
pop
pop
test
push
jl
stc
sbb
shl
adc
pop
mov
adc
into
xchg
push
mov
mov
sub
dec
rcr
nop
out
outs
enter
jno
test
dec
fdivr
lods
jp
fistp
test
int3
cmp
pusha
js
sbb
retf
dec
jg
mov
and
mov
jle
icebp
push
mov
mul
cmp
push
cli
cmp
fnop
adc
loop
cld
mov
sbb
mov
pop
retf
cdq
jmp
jg
ret
jnp
sar
sbb
inc
adc
fucomp
(bad)
int3
in
jle
inc
xlat
xchg
mov
out
mov
aad
int3
fidivr
(bad)
mov
data16
sbb
movq
enter
adc
ret
pop
(bad)
and
cmps
mov
aad
(bad)
cmp
data16
cmps
clc
jl
add
int
push
sub
jmp
ret
mov
int3
shl
ret
jns
adc
ds
retf
mov
mov
or
sbb
inc
call
sahf
dec
xchg
xchg
sub
jo
mov
pop
loopne
push
test
sbb
jle
cmc
stc
hlt
out
arpl
push
mov
out
mov
aam
xchg
mov
test
pop
push
leave
daa
mov
hlt
cmp
and
jle
adc
xchg
aas
xor
jnp
imul
push
lods
cmp
(bad)
cld
push
mov
out
mov
dec
(bad)
in
adc
leave
mov
jae
xchg
xchg
(bad)
mov
and
mov
push
or
test
stos
add
rcr
sbb
sub
lods
cwde
in
xchg
add
mov
cdq
xchg
cmp
stc
adc
ja
rcr
stc
and
sub
ficomp
ins
jb
dec
sub
int
scas
cmp
stos
add
iret
in
aad
mov
fld
retf
ins
push
daa
loopne
pop
sti
mov
dec
push
cmc
les
sti
and
mov
out
je
push
bsf
add
push
add
fimul
mov
es
pop
adc
cli
cmp
jo
mov
gs
pop
cld
jge
push
adc
std
lods
sbb
cmp
loop
or
add
popa
stos
in
shl
jbe
mov
lahf
pop
sbb
and
dec
popa
sub
out
aad
fisttp
sbb
and
scas
or
cld
adc
loope
out
in
push
push
cmp
mov
imul
push
icebp
div
push
in
cmps
sahf
into
jne
psrlq
mov
inc
jl
leave
fwait
cmp
jo
imul
in
mov
rcl
add
mov
mov
int3
fbstp
out
and
std
mov
or
sbb
jnp
add
in
arpl
pop
or
sub
mov
and
adc
pop
into
stos
sbb
fimul
es
sub
push
je
dec
out
sbb
in
mov
imul
out
lahf
adc
test
lds
outs
mov
ret
inc
sub
fistp
scas
push
movs
ret
stos
pop
out
jnp
call
mov
mov
shl
test
inc
test
das
jo
out
push
jno
mov
add
inc
scas
cli
lea
or
xchg
xor
jmp
and
fisub
in
test
xchg
movs
scas
mov
test
fisub
bound
add
lods
or
push
inc
jle
dec
sbb
push
add
daa
and
or
loope
(bad)
in
out
enter
inc
rcr
rcl
mov
push
mov
loop
stos
pop
cmps
or
fwait
aaa
mov
nop
push
aad
retf
inc
(bad)
mov
stos
cli
xchg
sbb
dec
add
fadd
sbb
arpl
nop
jno
dec
mov
cld
out
dec
cmp
int
pusha
mov
xchg
les
aam
out
add
jno
loopne
test
test
dec
popa
mov
jmp
xchg
mov
imul
add
fwait
cwde
pop
gs
test
pop
adc
jns
sub
js
inc
aad
xchg
inc
cmp
cld
stos
push
mov
std
mov
sti
dec
aas
jecxz
out
adc
add
movs
arpl
cmp
movs
fimul
mov
cmp
mov
imul
fmul
loopne
adc
and
sub
or
dec
outs
push
jnp
push
ret
push
jmp
xchg
js
push
and
cld
sbb
mov
cmp
imul
sub
mov
dec
xchg
xor
icebp
adc
jbe
idiv
mov
sub
xor
enter
sbb
xlat
mov
popf
outs
and
mov
cmps
cmp
and
lahf
ja
out
push
fsub
or
cmps
cmps
dec
fsubr
lods
mov
mov
mov
jmp
push
push
hlt
dec
fistp
pop
jle
jle
push
mov
and
xchg
fdiv
mov
cmp
in
retf
popa
(bad)
shl
sti
and
cwde
mov
jbe
aas
cmp
leave
sbb
push
aaa
xor
rol
ja
cli
fistp
jecxz
jo
pop
pop
out
jne
push
mov
jecxz
pop
xor
stos
aad
jae
popf
pop
mov
div
mov
push
iret
movs
add
nop
rol
fwait
sahf
jmp
in
hlt
and
ret
addr16
mov
mov
aaa
and
mov
push
shl
xchg
bound
xor
int
pop
out
fst
mov
mov
push
mov
scas
sbb
xlat
test
mov
jo
call
pop
mov
add
and
test
pop
and
mov
test
and
sub
add
push
mov
aam
pop
ja
out
retf
push
inc
add
cmp
push
sahf
lock
add
add
sub
mov
xor
push
scas
ja
mov
aad
pop
loop
mov
ja
push
sar
xchg
stos
pop
aas
xor
fisubr
sbb
inc
popa
sahf
(bad)
out
sub
cdq
jmp
out
imul
pop
je
cmp
movs
sub
dec
shl
add
in
leave
pop
jae
popf
xor
xchg
test
push
or
pusha
cmp
in
popa
xor
ror
cmp
ret
std
addr16
lods
inc
dec
sub
xlat
or
loop
repnz
aad
ins
retf
cmps
dec
data16
inc
int3
or
cmp
std
ds
enter
pop
dec
cmc
in
out
in
sub
pop
jle
ja
jbe
icebp
push
inc
jo
lds
inc
jmp
ret
test
mov
das
or
ret
sbb
scas
pop
push
ins
pop
sub
scas
enter
xor
ret
in
push
icebp
xor
loopne
xchg
dec
in
test
cmp
adc
dec
push
fld
aas
mov
scas
xor
call
stos
cmp
shr
xsha256
cmps
xchg
and
lea
fidivr
cwde
gs
add
aas
add
fstp
cmp
jp
cmp
adc
cld
rol
sub
cmps
(bad)
mov
mov
jp
mov
push
jmp
pop
jno
cmp
cmc
inc
call
pop
lods
mov
xchg
call
push
movs
scas
(bad)
mov
xchg
clc
nop
xchg
fwait
add
mov
xchg
jno
mov
inc
enter
test
in
push
sbb
ror
jbe
imul
sub
in
pop
cmp
popa
scas
dec
out
adc
and
or
aas
shl
call
dec
retf
idiv
mov
xchg
lahf
adc
ror
sub
mov
jo
pop
cmp
dec
dec
xchg
cmp
(bad)
ret
in
pop
xchg
jge
mov
inc
cmp
in
add
sub
sub
call
int
fmul
xchg
aas
inc
dec
add
inc
out
out
scas
pushf
in
mov
ror
loope
sbb
cld
aad
push
shr
add
cwde
movs
mov
adc
shr
je
sar
aam
mov
mov
nop
mov
cmp
jnp
cmp
pop
mov
popf
pop
aas
movs
adc
adc
stos
retf
sahf
inc
xchg
adc
pusha
inc
or
xor
dec
aad
cmps
pop
(bad)
push
pop
jns
add
push
push
dec
movs
sub
mov
clc
jmp
inc
into
test
in
dec
clc
dec
lea
cdq
inc
sub
inc
(bad)
fsub
iret
mov
cmps
(bad)
std
mov
jno
gs
fs
mov
retf
push
cdq
xor
sti
jmp
pushf
repz
cld
mov
fadd
shl
mov
leave
enter
cmps
jmp
int3
in
mov
pop
mov
rol
out
sbb
mov
add
cmp
or
es
ss
dec
sbb
sbb
icebp
int3
push
dec
inc
sub
pop
(bad)
scas
lock
push
enter
xor
ins
dec
stos
pushf
(bad)
push
sub
inc
xor
or
dec
jl
loop
sbb
mov
cmp
add
imul
adc
and
out
cdq
(bad)
sbb
ins
add
dec
jae
dec
push
pushf
sti
adc
xchg
xchg
ret
mov
mov
sub
sbb
data16
xchg
cdq
fnstsw
aas
ds
xchg
xchg
dec
mov
adc
mov
shr
js
jmp
fmul
pusha
mov
mov
outs
out
cmp
adc
and
push
pop
mov
mov
fisub
fs
int
repnz
iret
push
dec
(bad)
es
xchg
shl
pop
dec
dec
mov
std
sahf
sub
mov
adc
mov
inc
or
add
dec
mov
dec
inc
sbb
repnz
fdivr
or
inc
pop
rcr
rol
push
test
int
and
cmp
sub
stos
cli
dec
sti
jp
popf
repz
stos
mov
(bad)
sbb
leave
xlat
(bad)
je
cmp
sbb
call
movs
outs
or
inc
inc
les
mov
push
outs
inc
jmp
xchg
inc
dec
ins
outs
out
push
test
pusha
fxch
sub
cs
cmc
fild
xchg
rol
cmc
pop
addr16
(bad)
ds
mov
call
and
and
push
and
retf
mov
or
into
mov
fistp
je
push
xchg
xor
pop
dec
cs
aaa
cdq
imul
adc
or
into
dec
stos
test
pop
and
sbb
(bad)
cdq
add
cli
xchg
outs
ja
lock
ja
lods
dec
aam
mov
stc
fcom
jg
mov
and
dec
mov
ret
dec
mov
das
leave
adc
setge
sub
sti
idiv
jmp
mov
sahf
sub
mov
cmp
es
jne
mov
das
movs
cdq
daa
dec
test
lahf
mov
call
out
push
inc
(bad)
mov
sbb
test
mov
add
jecxz
jmp
cld
xchg
retf
pushf
ret
add
xlat
push
retf
clc
ret
in
sbb
jg
cmp
inc
inc
fwait
movs
push
push
stos
repz
jg
lods
inc
mov
aad
ficom
les
out
dec
retf
mov
xor
mov
out
or
fs
jo
lds
lds
add
inc
aad
retf
xchg
mov
mov
cmps
push
adc
pop
add
cmp
(bad)
(bad)
in
movs
jno
mov
jge
fs
pop
push
rcl
sub
hlt
cs
fadd
rcr
add
sbb
stc
mov
push
and
add
inc
jp
push
cdq
in
(bad)
setae
sbb
push
nop
adc
sub
cli
(bad)
add
adc
mov
out
pusha
sub
pop
inc
jmp
outs
or
xchg
enter
mov
arpl
mov
jne
pop
imul
cmp
gs
dec
adc
xor
add
xor
sbb
and
cmp
jns
scas
popa
int3
fisub
push
cmp
fucompp
or
imul
gs
les
psubusb
sub
sbb
dec
jmp
es
adc
dec
movs
ja
(bad)
xchg
xchg
ffreep
retf
add
or
push
sub
das
jle
add
dec
mov
lahf
cmps
neg
shld
aad
cmps
test
ins
inc
sub
sub
or
and
enter
push
cmp
add
shr
(bad)
hlt
mov
or
pushw
cmp
and
pushf
jbe
and
popa
pop
mov
shr
jl
mov
mov
or
sahf
mov
inc
mov
sahf
mov
pop
xor
xchg
hlt
hlt
fistp
stos
sub
sahf
xor
mov
pop
cmp
sti
jbe
pusha
push
cmps
push
mov
dec
retf
adc
dec
retf
dec
jmp
xor
dec
push
out
pop
std
jl
add
dec
sub
fsubr
js
ss
lock
icebp
dec
mov
mov
popa
out
aas
test
mov
into
fs
rcl
jle
mov
(bad)
std
into
in
bound
jns
dec
pop
out
xor
das
retf
adc
mov
cmp
xchg
popa
mov
push
push
inc
cli
rol
outs
inc
aas
jno
fcomp
push
nop
jnp
dec
pusha
dec
cmp
push
adc
std
pop
js
jecxz
fstp
mov
and
adc
inc
adc
test
retf
imul
mov
pop
in
mov
rcr
les
or
sbb
frstor
push
dec
jns
fld
cmp
dec
push
pop
sub
arpl
test
mov
xlat
dec
cmc
jmp
jecxz
ds
push
jmp
lods
outs
xor
lahf
or
js
adc
int
cmps
add
lods
jge
ins
movs
push
xchg
mov
dec
imul
lods
addr16
push
or
xlat
das
jns
mov
or
pop
std
sbb
bnd
jecxz
sbb
in
push
sbb
(bad)
aas
das
retf
int
adc
test
mov
sti
pop
hlt
cmc
xchg
mov
cmp
(bad)
out
adc
out
ret
ja
jp
(bad)
inc
mov
dec
movs
adc
data16
icebp
mov
(bad)
rcl
into
cmp
push
or
and
mov
aaa
xchg
ret
inc
push
hlt
sbb
adc
mov
jge
xchg
xor
jecxz
pop
repnz
jnp
jns
cmp
dec
xor
mov
sti
ficomp
sub
lds
mov
aad
cmp
cmp
inc
fucomp
inc
cmps
or
int
mov
into
outs
imul
nop
and
push
mov
cmps
loope
fld
aas
mov
shr
addr16
add
lahf
pop
mov
and
mov
call
lods
cli
std
mov
jmp
outs
mov
sar
mov
cmp
out
cwde
pop
ins
and
(bad)
adc
std
inc
jmp
push
push
pop
call
cwde
retf
into
addr16
jge
pop
mov
mov
mov
pop
xor
jbe
mov
xor
pop
movs
fisttp
js
sub
mov
pop
add
sub
pop
adc
inc
pop
retf
sub
mov
loopne
jne
cmc
jae
jbe
xor
mov
repz
ret
jae
add
rcr
adc
and
call
inc
repnz
ds
jae
mov
and
aaa
pop
shr
cdq
and
jecxz
mov
adc
std
inc
shr
mov
sub
sub
hlt
push
lahf
ins
jo
mov
dec
mov
and
jmp
int3
jg
in
stos
retf
ss
adc
test
retf
(bad)
fwait
ret
cmps
js
rol
ret
and
(bad)
sahf
int
in
jecxz
xchg
inc
dec
in
add
push
xlat
pop
es
adc
xchg
or
inc
imul
push
imul
enter
cmc
pop
popf
jae
and
push
cmp
leave
mov
xchg
in
inc
out
cs
retf
fdiv
(bad)
adc
mov
dec
cmp
inc
pop
pop
jge
jp
jg
and
cmps
and
pop
sbb
std
jae
enter
outs
scas
mov
movs
enter
out
inc
mov
sub
and
addr16
xor
inc
test
sub
push
pusha
or
test
and
sbb
jp
ds
push
inc
adc
pop
ins
push
xchg
jno
data16
sub
add
outs
out
pop
stc
xchg
jo
adc
shl
mov
cld
test
cwde
fistp
or
xor
add
aas
inc
test
mov
ficomp
xor
icebp
jle
sbb
cld
in
aas
add
cmp
in
nop
jge
push
gs
rcr
(bad)
ins
inc
or
dec
add
and
mul
pop
ds
mov
repnz
aad
cmp
sub
in
adc
add
sbb
xlat
inc
mov
mov
lea
sub
or
mov
dec
movs
(bad)
pusha
inc
rcl
push
test
mov
push
call
mov
push
out
(bad)
dec
sar
xor
lds
dec
and
cmps
mov
pop
mov
ja
scas
icebp
mov
cdq
scas
jl
fistp
and
mov
sub
in
add
fxtract
int3
pop
mov
sub
loope
lods
or
rcr
leave
xchg
sbb
adc
neg
inc
lahf
jno
in
mov
cld
xchg
out
iret
cmp
add
sbb
enter
hlt
out
xor
mov
jl
mov
and
pop
test
sti
into
out
mov
adc
scas
xor
sbb
pop
in
mov
jns
dec
xor
rcl
or
(bad)
sub
jb
xchg
or
xchg
leave
mov
outs
pop
sbb
sahf
clc
jo
adc
ja
test
mov
imul
mov
popa
or
int
icebp
cmp
mul
lea
sub
loope
or
dec
mov
cli
bound
repnz
dec
push
loopne
inc
sar
(bad)
jp
cmp
jle
mov
mov
out
in
xchg
fcom
dec
icebp
jmp
dec
fld
jmp
sbb
mov
xor
dec
mov
int3
sahf
sbb
xor
aas
xchg
xchg
ss
cvtpi2ps
test
jb
jle
and
hlt
fild
in
xlat
mov
sbb
jae
xchg
gs
shl
jns
or
mov
fcom
call
cmp
and
push
jb
mov
adc
dec
jae
ror
xchg
nop
jno
mov
jo
xor
fisub
jl
xor
aaa
pop
cmps
std
xor
fnstcw
in
jmp
fild
int
or
xlat
jecxz
cdq
add
mov
xor
push
or
inc
fwait
mov
cmp
jecxz
ins
sub
inc
inc
shr
mov
sar
out
mov
stos
mov
pusha
jnp
adc
xor
mov
adc
pop
mov
fstp
iret
cmp
push
mov
cdq
xchg
inc
cmp
dec
out
mov
lea
test
mov
sbb
dec
stos
xlat
jnp
into
nop
xor
adc
jne
or
push
je
bound
shr
mov
sub
jmp
adc
out
fs
xchg
and
mov
pop
cmp
cmp
cmp
push
and
mov
dec
inc
ins
fistp
mov
test
stos
sub
jecxz
in
fcos
aaa
adc
mov
push
test
inc
mov
cmp
call
xchg
dec
retf
out
push
jb
xor
or
fidiv
in
enter
aas
pop
pusha
push
xchg
cmps
pop
clc
push
mul
xor
repz
movs
inc
adc
out
sahf
iret
sbb
movs
scas
mov
leave
mov
jp
lods
clc
add
dec
cmp
call
rol
xchg
xchg
fwait
pop
call
pop
in
sub
test
dec
jb
sbb
ror
ins
push
out
dec
inc
retf
ss
mov
pop
out
lahf
adc
cmps
out
lds
sbb
stos
ins
xor
sbb
push
lods
cmp
adc
inc
mov
push
or
mov
mov
cmps
retf
(bad)
push
aam
mov
and
push
sub
aam
sahf
and
xchg
scas
fld
std
inc
inc
lahf
and
fldcw
jp
repz
ds
cmp
mov
inc
dec
mov
scas
test
movs
adc
jbe
js
aaa
cld
pop
sub
dec
div
outs
lahf
stos
jne
cdq
add
(bad)
jp
jb
jl
xchg
iret
jne
sub
adc
mov
mov
xchg
out
xor
mov
outs
sub
out
xchg
pop
mov
push
push
pop
push
leave
jp
cdq
loope
call
fst
xor
fild
imul
mov
(bad)
jle
dec
mov
stc
movd
sbb
push
inc
ins
mov
cli
sahf
or
test
and
nop
or
pop
aam
mov
movs
movs
xchg
movhps
mov
xchg
mov
outs
lahf
(bad)
shl
ins
mov
sbb
xor
test
out
fwait
dec
das
push
imul
je
mov
xor
mov
lds
add
les
movs
dec
jbe
xor
ret
mov
shl
stos
adc
xlat
push
push
push
ss
pop
pop
test
mov
sbb
mov
jnp
sbb
inc
sar
lods
out
ss
bnd
fcmovnbe
push
mov
xor
inc
fldenv
xchg
and
pop
xor
retf
push
jmp
cmp
js
jo
test
xchg
add
cmp
jnp
inc
es
mov
xchg
adc
pop
push
mov
push
dec
retf
std
and
int3
sar
cmp
in
movs
add
fist
mov
xor
ja
jmp
movs
push
out
and
inc
shl
stos
jmp
arpl
pushf
mov
mov
cmp
jg
loope
lods
or
add
push
es
fdivp
outs
pop
loop
push
int3
imul
cs
ins
nop
movs
jge
xor
das
ins
push
les
cdq
mov
and
fs
add
frstor
inc
ror
mov
outs
lods
(bad)
cmp
inc
ja
or
inc
inc
les
mov
arpl
sahf
addr16
and
mov
inc
sbb
jmp
js
gs
sub
xchg
in
or
aas
test
fwait
or
movs
cmps
xchg
mov
lds
inc
imul
push
hlt
out
and
in
lods
push
addr16
jo
hlt
mov
xchg
mov
cmps
or
(bad)
mov
pop
xchg
icebp
xchg
mov
lea
fild
movs
adc
ja
sahf
rcl
fbld
mov
xor
int3
ins
sbb
sbb
add
push
sti
push
inc
push
dec
ins
adc
and
push
push
cmp
xchg
cmp
dec
mov
loopne
inc
mov
jae
cmp
in
xchg
adc
add
(bad)
mov
ret
cmp
jne
lahf
out
jg
data16
jo
add
(bad)
xlat
repz
and
mov
mov
dec
loope
inc
xor
fucomip
xor
out
shl
aam
movs
stc
cmp
mov
pusha
adc
ds
dec
inc
movs
pop
nop
std
mov
push
jbe
xchg
hlt
jg
les
xchg
pop
push
inc
pandn
mov
cmc
and
mov
push
xchg
(bad)
lock
ins
fwait
adc
push
out
jl
call
out
mov
or
add
les
inc
mov
pop
hlt
lods
mov
jg
inc
mov
gs
out
imul
ret
sti
mov
ins
ja
sbb
pop
or
xchg
add
loopne
or
in
inc
dec
sub
jl
xchg
sub
adc
movs
inc
push
add
retf
cmps
and
(bad)
xor
xor
mov
int
jno
jmp
loop
jg
push
pop
xor
ror
test
mov
das
call
mov
fnstenv
test
cmp
ror
sti
mov
xor
push
cmps
icebp
xchg
icebp
inc
mov
adc
mov
in
cld
(bad)
jmp
retf
fiadd
call
stos
dec
pop
push
inc
clc
repnz
retf
xlat
jne
pop
hlt
ds
clc
or
test
mov
test
aam
ja
scas
pop
fcmovu
jp
xchg
mov
test
in
arpl
xor
enter
mov
aam
dec
sbb
mov
scas
xchg
push
mov
rcl
mov
leavew
sub
inc
lock
shl
pop
or
mov
mov
(bad)
leave
imul
jae
dec
sub
add
lock
dec
int3
in
outs
mov
push
ret
push
mov
cmc
cmp
pop
cld
mov
fsub
in
mov
cdq
in
arpl
aaa
xchg
ror
fwait
push
mov
fsub
or
xor
cmp
push
mov
xor
sbb
test
jo
mov
pop
sub
mov
cdq
cmp
js
retf
sub
stos
fistp
(bad)
xor
jne
test
aad
scas
jmp
or
loop
adc
out
jecxz
jns
aas
pop
mov
int3
lods
jp
or
push
inc
mul
jae
ins
movs
sbb
ret
add
lods
sbb
mov
push
test
inc
pop
in
sbb
adc
pop
mov
(bad)
mov
add
fwait
jmp
in
dec
pusha
aad
xchg
add
not
pushf
xor
cmp
stos
ret
jge
jno
pop
mov
adc
int3
idiv
lods
inc
scas
jns
sbb
imul
xlat
inc
jle
xor
dec
jmp
push
dec
dec
ficom
ret
inc
lahf
fnsave
sbb
xchg
sub
adc
jle
ins
mov
mov
jmp
add
inc
pop
sub
adc
stos
je
inc
aas
pop
mov
ins
int3
je
xor
fwait
movaps
dec
and
sub
and
(bad)
(bad)
mov
xchg
push
push
cmp
jne
lods
add
retf
lock
dec
repnz
xor
jmp
push
and
lock
clc
adc
add
mov
bound
repz
inc
repz
shl
sbb
in
mov
mov
in
pop
ds
xlat
lods
jecxz
pop
xor
sub
fs
inc
out
sbb
xor
(bad)
nop
lods
jmp
or
xor
adc
push
push
xchg
call
adc
sbb
(bad)
ss
xchg
dec
or
adc
cmp
push
scas
bound
xchg
fadd
fld
add
(bad)
xor
adc
fistp
sub
js
push
push
xchg
push
sub
in
mov
retf
fdivr
jo
sbb
cli
jmp
mov
jne
cmp
mov
inc
mov
scas
inc
mov
mov
inc
xor
add
rcr
dec
mov
xchg
gs
pop
enter
inc
(bad)
mov
loopne
fwait
mov
jns
call
je
(bad)
call
into
inc
mov
loop
dec
stos
fisubr
mov
push
fwait
pop
movs
cmp
xchg
mov
push
dec
xor
les
call
fdiv
or
jae
rcr
sar
inc
mov
add
xchg
cmps
fwait
adc
retf
ret
mov
out
adc
xor
xchg
mov
shl
aad
pop
movs
cmps
or
mov
mov
dec
cmp
outs
add
inc
cmp
scas
scas
pop
rcr
push
dec
ror
imul
shl
lahf
jne
(bad)
xchg
xor
jge
mov
add
stos
gs
push
or
cmp
push
jmp
sub
fdiv
xchg
out
jno
mov
jb
sbb
loope
lods
pop
pop
mov
xor
pusha
enter
iret
pop
in
cmp
xor
push
inc
mov
dec
jnp
aaa
and
pushf
pop
cmp
rcr
sbb
ss
adc
fisubr
dec
and
sub
jecxz
movs
mov
les
int
jecxz
jmp
add
jne
and
dec
adc
xchg
sbb
jo
es
xor
mov
ins
sbb
xor
in
stos
fwait
sub
dec
enter
and
cmp
popa
xchg
add
loope
mov
xor
jl
push
iret
dec
mov
enter
adc
mov
je
mov
or
daa
and
shl
je
sbb
ins
mov
das
out
sti
cdq
loope
xchg
and
test
mov
dec
lea
iret
sbb
add
enter
or
or
mov
adc
sub
adc
ins
pop
sub
push
and
imul
xor
or
cdq
test
js
cmp
gs
cmp
pop
arpl
in
pop
shl
dec
fs
jb
js
or
pop
mov
(bad)
es
push
mov
cmp
sub
mov
jo
mov
pop
mov
jns
xor
add
mov
mov
pop
imul
jmp
test
add
mov
xlat
adc
push
iret
dec
sub
add
xchg
jle
push
sub
push
lock
mov
out
outs
xchg
clc
sbb
adc
ja
xchg
and
out
mov
fistp
ret
int3
dec
cs
jge
repnz
adc
jb
stos
xchg
jl
ret
mov
clc
daa
lods
xchg
lock
(bad)
push
jl
push
mov
or
ror
pop
and
dec
shl
xchg
or
cdq
dec
pop
pop
inc
ror
lods
xor
fnsave
inc
lods
jg
pop
cwde
pop
xor
scas
mov
test
lea
xor
mov
sub
mov
jmp
xchg
and
aam
test
(bad)
pop
adc
mov
lods
add
iret
jmp
mov
scas
mov
fcmovnbe
popa
ds
and
ins
sub
sub
dec
cmp
sbb
and
or
test
pushf
hlt
xchg
fsubr
sub
xchg
(bad)
movq
(bad)
pop
mov
lea
mov
rcl
test
sbb
jmp
and
dec
pop
dec
push
out
in
xchg
mov
pop
cli
push
fidivr
ja
call
mov
pop
lock
xor
push
inc
xor
aam
dec
imul
and
jmp
add
dec
int
ss
mov
add
mov
xor
pop
cwde
and
xchg
loopne
pop
dec
lahf
mov
gs
push
inc
pop
(bad)
or
xor
rol
iret
enter
cdq
ins
dec
jl
fisttp
adc
int3
aas
psraw
inc
jb
out
es
xchg
test
dec
or
mov
cmp
dec
popf
jo
push
sub
xchg
fsubr
dec
xchg
retf
ficom
leave
and
int
jne
cmps
imul
push
mov
push
fs
or
(bad)
rol
adc
add
inc
dec
pop
jmp
repz
xchg
xchg
in
sub
(bad)
fnstcw
xchg
sbb
jae
add
dec
push
pop
adc
aaa
jmp
pop
lods
pop
sahf
cdq
and
loope
fdivr
adc
cli
sub
jbe
lds
xchg
push
adc
jmp
fdiv
pop
lds
and
je
mov
inc
or
lock
mov
fs
scas
(bad)
rcl
stos
imul
push
in
add
add
loope
adc
jmp
mov
mov
cmps
imul
shl
stos
scas
or
cmp
adc
jge
xchg
sub
mov
sbb
in
add
push
enter
scas
popa
jmp
mov
or
sar
mov
and
fdiv
push
jnp
xor
cdq
pop
mov
ins
mov
pop
or
les
sub
push
cmc
jmp
scas
jl
int
dec
push
leave
int3
std
inc
in
lock
mov
or
cmp
or
stc
aaa
mov
out
pop
pop
aaa
add
cmc
jae
int
push
lods
mov
jg
shr
and
cld
out
mov
adc
or
add
call
fs
std
push
inc
imul
push
pop
mov
adc
test
mov
and
(bad)
int
dec
dec
bound
push
sub
dec
mov
xor
push
test
(bad)
mov
cs
pushf
sahf
mov
xor
in
sub
push
dec
xor
mov
gs
xchg
or
test
jnp
loop
lahf
mov
dec
xchg
dec
in
sub
scas
fcmovnu
stos
ret
outs
sbb
int3
sbb
mov
add
inc
push
or
loop
jns
mul
push
jecxz
rol
fcmove
arpl
lock
repnz
jp
mov
lea
aaa
out
or
jge
mov
retf
(bad)
push
cmp
or
mov
cld
sub
sbb
cmp
jb
inc
ss
inc
xor
cmps
push
or
jecxz
scas
imul
jns
dec
ins
push
jle
cmps
cmp
push
mov
mov
addr16
popf
test
mov
imul
out
pop
sub
scas
cmc
in
push
fs
call
mov
daa
outs
dec
dec
inc
jmp
pop
test
xor
dec
sahf
in
fistp
ret
adc
hlt
scas
xlat
push
xor
dec
ds
pop
mov
ret
enter
std
outs
(bad)
popf
fs
or
pop
push
and
xchg
mov
shr
mov
cmps
jne
imul
or
test
mov
pop
ror
jnp
and
sub
rcr
pop
ret
jo
xchg
fstp
leave
scas
mov
popa
outs
enter
nop
jle
outs
mov
adc
stos
repnz
and
popa
mov
(bad)
cmp
inc
jnp
test
cs
test
out
or
push
sbb
bound
sbb
pop
xchg
inc
or
xchg
stc
inc
loopne
dec
cmp
das
pushf
add
es
enter
pop
and
mov
fild
inc
jmp
fist
fldcw
lods
jno
es
adc
inc
pop
retf
inc
mov
dec
imul
add
int
jae
mov
jbe
inc
lahf
loopne
push
cmp
nop
cmp
xchg
out
inc
or
xchg
sub
(bad)
xor
arpl
cmp
pop
sti
shr
mov
xchg
jno
ret
mov
jne
test
mov
jecxz
pop
dec
mov
int
clc
mov
pop
dec
dec
push
mov
push
enter
lea
cmp
pcmpgtw
mov
repnz
out
fisttp
ins
sti
xchg
push
nop
lods
xor
ds
dec
mov
fucom
out
lods
pop
jnp
jbe
mov
cs
cwde
cs
dec
dec
add
sbb
retf
dec
inc
test
das
popf
test
shl
fst
cmp
jne
loope
loope
sbb
ins
or
fadd
outs
xor
arpl
lahf
adc
sbb
cmc
ret
ins
xor
(bad)
xchg
ds
xlat
cmp
setno
inc
mov
bound
call
mov
or
and
jmp
movs
cmp
sub
pop
pop
cmp
retf
cmp
inc
or
bound
pop
pop
scas
outs
mov
inc
popa
(bad)
shl
adc
pop
sbb
ins
mov
ja
scas
cdq
mov
sub
outs
push
pop
mov
out
jno
jmp
sbb
out
ins
ds
in
pop
js
add
push
mov
leave
or
jle
mov
movs
in
add
repnz
cmp
mov
cmp
pop
jl
xchg
leave
(bad)
int3
mov
push
(bad)
mov
int
mov
ficom
cli
mov
std
cmp
xchg
ja
mov
inc
jbe
in
aaa
inc
fs
push
mov
push
pusha
pop
dec
call
push
mov
in
and
out
xor
lods
jecxz
outs
push
in
ins
ret
push
or
push
cmp
cmps
cdq
cmp
adc
jmp
into
jge
arpl
test
inc
or
cmp
mov
shr
dec
iret
xchg
mov
or
hlt
and
xor
mov
fld
mov
sub
sbb
scas
jecxz
xor
mov
mov
shl
iret
xor
push
sbb
adc
and
ficom
movs
rep
scas
test
test
(bad)
mov
inc
sahf
addr16
push
fnstsw
repz
push
pop
mov
movs
sub
push
popa
xor
or
pop
call
adc
dec
loop
shr
bt
xchg
sbb
data16
mov
cmps
out
in
pusha
add
mov
sub
sub
repz
(bad)
dec
push
pop
cmps
loopne
dec
clc
mov
jns
push
dec
cmp
test
into
mov
cmp
gs
nop
int
(bad)
adc
push
jg
add
fucomi
or
scas
cmc
pusha
cmp
mov
ds
pop
jl
cwde
or
fstp
mov
ficomp
shl
sub
xor
test
mov
cmc
mov
ins
push
ins
out
and
inc
dec
mov
jno
fstp
imul
sti
sbb
xor
pop
pop
sahf
mov
lahf
mov
push
sbb
mov
pop
xchg
dec
sbb
mov
jnp
lods
xchg
push
add
adc
cmp
inc
bound
mov
push
call
sbb
cmp
sbb
mov
jo
out
mov
retf
psrad
mov
fild
sti
int
and
sahf
push
pop
mov
jg
mov
push
(bad)
push
scas
ret
je
mov
clc
test
pop
xlat
sub
pop
lahf
cli
(bad)
aad
out
or
div
pop
dec
push
jmp
jne
sbb
fisttp
fwait
lea
xor
je
mov
sbb
jp
bound
xor
xlat
add
outs
adc
ins
jmp
aam
addr16
push
jge
jg
mov
and
and
push
mov
loopne
adc
pop
xor
mov
xor
push
fsubr
lods
xchg
adc
mov
loope
cmp
in
xchg
(bad)
and
add
bnd
int
mov
dec
js
mov
test
sahf
loopne
and
jp
mov
jo
cmp
inc
es
call
lods
test
and
xor
loope
daa
add
dec
cmp
and
in
jnp
inc
sbb
retf
iret
cmp
xchg
out
daa
push
xor
test
jmp
enter
pop
pop
mov
add
test
jmp
fiadd
sub
xchg
in
dec
push
dec
cs
mov
(bad)
std
dec
sahf
or
pop
inc
dec
or
or
fbstp
push
bound
sbb
inc
shr
cmps
pop
xor
arpl
out
push
pop
stc
pop
lods
mov
jbe
cmp
cs
lock
fst
push
lods
xchg
fadd
inc
test
inc
les
fcmovbe
or
leave
data16
hlt
arpl
aad
or
test
das
mov
fimul
ret
aaa
pushf
lock
daa
shl
adc
in
jb
and
movs
add
movs
imul
push
add
pop
jecxz
aad
mov
sub
pusha
aas
mov
xlat
xlat
aas
inc
cmp
jmp
ss
mov
cld
das
inc
mov
cmp
into
and
add
int3
addr16
jae
lahf
stos
sub
arpl
ja
ret
sbb
fisttp
jb
pop
sbb
cmp
call
mov
(bad)
fst
jp
hlt
in
aas
mov
inc
je
retf
jp
mov
rol
es
pop
aas
shr
sahf
scas
xlat
dec
cwde
stos
xlat
cmp
jb
lahf
adc
sar
sub
outs
js
stc
push
lods
xor
or
pop
mov
mov
mov
ss
(bad)
cwde
loope
mov
ins
shl
shl
mov
lahf
cdq
add
jl
push
iret
adc
push
lea
rcr
or
jbe
mov
mov
in
sbb
jbe
std
dec
icebp
cmp
into
inc
std
and
jne
loop
loopne
jbe
mov
call
movs
ror
ds
(bad)
rcl
sub
ret
mov
dec
daa
cmp
sbb
call
mov
push
push
pop
ror
jne
xchg
cmps
mov
mov
mov
sub
stos
push
mov
addr16
sub
adc
pop
fmulp
lds
inc
test
cld
daa
mov
sbb
push
mov
xchg
hlt
cmp
ins
packssdw
and
out
push
out
jg
test
js
inc
inc
stc
mov
sar
ss
and
xchg
call
lock
clc
stc
xchg
xchg
imul
push
gs
retf
rol
xchg
push
dec
jle
push
cmp
cmp
sbb
xor
jne
pop
inc
fadd
loopne
imul
mov
pop
lods
mov
mov
lods
and
aam
or
and
int
pop
dec
ins
sbb
pop
add
arpl
aas
test
inc
jae
mov
int
sbb
in
sbb
lahf
xchg
jns
jge
add
and
mov
cmp
xchg
add
mov
pop
jmp
mov
pusha
into
pop
ss
in
mov
pop
jle
ins
xlat
push
and
mov
fistp
dec
scas
lahf
cmp
in
cld
pushf
bound
shl
ss
(bad)
into
pop
jns
(bad)
pop
cmps
cmps
jae
mov
xchg
inc
dec
or
jo
jg
rcr
into
les
cmps
pop
cmps
outs
scas
sub
arpl
into
ins
pop
cmc
stos
enter
dec
lahf
mov
fiadd
add
out
sti
retf
push
pusha
push
cmps
out
je
sub
mov
mov
inc
sbb
mov
and
mov
mov
mov
cmps
adc
push
adc
inc
pop
inc
popa
stos
test
out
push
cmp
sti
cdq
iret
pop
cmp
mov
push
nop
xchg
or
cmp
cmc
and
stos
aad
aam
pop
daa
stos
push
push
jbe
ja
sub
and
and
fisub
loop
or
push
ret
cwde
xchg
(bad)
fwait
push
sar
cmp
icebp
jmp
setbe
mov
jmp
or
xor
call
leave
mov
jp
xchg
push
not
inc
push
xchg
inc
shl
pop
pop
(bad)
and
push
cld
ss
cld
test
fs
fwait
mov
pop
or
ss
xor
stc
aad
mov
sbb
test
push
xchg
add
pop
fsubr
push
adc
bound
xlat
mov
stos
mov
stos
push
adc
(bad)
xor
push
pop
sti
sub
mov
jmp
xchg
add
push
scas
fcmovb
mov
and
ret
jns
mov
add
cmp
jnp
xchg
sbb
js
xchg
xor
js
out
xchg
push
inc
sub
pop
cwde
xchg
retf
iret
sub
xor
in
aaa
or
mov
loop
sub
movs
xchg
das
jp
pushf
lea
fadd
push
pop
repz
jmp
pusha
push
das
cmps
cmp
fwait
lds
pusha
jmp
inc
retf
mov
xor
aaa
stos
cli
inc
dec
and
retf
sub
iret
xchg
dec
out
push
in
pop
dec
adc
mov
cli
sbb
push
adc
popf
sti
add
ldmxcsr
pop
push
(bad)
sbb
nop
les
mov
mov
push
bound
and
sbb
xor
jmp
cwde
enter
xchg
mov
pop
mov
push
ins
push
data16
fwait
pop
sbb
clc
ret
arpl
test
xchg
inc
ror
xor
movs
and
mov
or
xor
xchg
cs
dec
mov
and
add
adc
mov
xchg
into
int3
gs
fs
jne
or
dec
add
push
clc
aas
xchg
cmp
cmps
mov
inc
cmps
sbb
popa
add
adc
mov
mov
int3
nop
jge
dec
or
rol
cmp
arpl
push
xor
mov
mov
iret
pop
cmp
cmc
repnz
sub
lock
mov
loop
add
loopne
cmp
lods
xlat
push
das
add
imul
add
cmp
(bad)
in
mov
iret
push
arpl
xchg
and
ds
xchg
pop
sbb
jmp
pop
test
out
out
gs
cmp
mov
push
add
push
imul
addr16
dec
pop
sbb
xor
stos
xchg
mov
nop
mov
hlt
pop
fiadd
push
rol
sti
xchg
iret
popf
mov
inc
xor
push
or
in
inc
dec
xchg
gs
fcomp
push
ds
out
ret
shl
(bad)
pushf
xor
jmp
loop
mov
ss
add
cdq
scas
(bad)
jo
mov
leave
jno
inc
aas
js
lods
push
adc
fistp
dec
sbb
fsubr
xchg
das
arpl
out
mov
xchg
xor
ins
aam
cmc
mov
push
js
(bad)
pop
shr
xchg
imul
iret
jge
neg
out
loop
addr16
test
pop
stos
add
pushf
xor
mov
xor
and
jne
push
sbb
inc
(bad)
in
mov
gs
push
(bad)
retf
je
push
pusha
hlt
cdq
test
jns
cmps
dec
cld
jns
in
in
or
pop
xor
mov
pop
sbb
pop
out
inc
das
(bad)
sub
inc
hlt
outs
lds
mov
xchg
and
mov
jle
fisub
lea
rcr
or
push
cli
push
mov
inc
jno
cmps
pop
xchg
test
call
mov
adc
fild
mov
push
jmp
pop
fwait
outs
cwde
lods
and
aad
and
sbb
jle
inc
push
xchg
fidivr
push
out
add
xchg
adc
xor
inc
ins
nop
ins
xor
mul
gs
lock
sbb
or
mov
mov
mov
repnz
cld
sti
sub
imul
stc
mov
xor
mov
jecxz
arpl
test
pop
pop
dec
aas
ret
in
fiadd
in
mov
dec
fst
mov
in
aaa
(bad)
rcl
movsx
xchg
or
xor
outs
int3
mov
sub
or
dec
adc
shr
test
mov
mov
inc
or
mov
xor
xchg
mov
dec
fs
adc
leave
arpl
sub
imul
push
mov
lahf
or
data16
int
les
outs
sbb
lods
enter
psllw
enter
jle
mov
mov
push
mov
mov
clc
hlt
fsub
xor
xor
sbb
pop
pusha
iret
pop
cmp
(bad)
enter
sub
ins
jmp
push
out
or
int3
js
sub
out
pop
sar
popa
cmps
dec
call
adc
or
into
scas
fld
repnz
ror
movs
cmc
inc
cdq
fiadd
xchg
dec
clc
fdiv
sbb
test
mov
push
push
jl
clc
bound
fbld
bound
pop
xchg
xor
out
fist
pop
enter
sbb
dec
and
jge
pop
add
ja
cmps
inc
or
test
sbb
retf
push
push
mov
(bad)
or
movs
mov
ret
jg
push
sub
test
test
mov
je
scas
(bad)
rcr
leave
and
push
mov
iret
iret
cmp
pop
fidivr
ftst
push
push
mov
inc
pop
in
loopne
or
(bad)
lds
push
or
cli
pop
mov
cmp
and
mov
and
and
test
sub
push
shr
sbb
dec
adc
imul
dec
ds
shl
or
push
cmc
jp
fmul
lea
movs
dec
mov
sbb
mov
add
jmp
mov
adc
xchg
or
push
dec
repnz
mov
sub
xchg
(bad)
mov
repz
add
cld
cmp
adc
jl
(bad)
cmc
dec
mov
rcr
aas
mov
cs
repz
sub
pop
xor
imul
repz
xor
addr16
mov
add
xchg
in
mov
push
push
pop
pop
jmp
mov
rol
jno
arpl
sar
adc
fimul
cmps
arpl
fisubr
(bad)
out
mov
jbe
rol
movs
shl
dec
pop
mov
mov
mov
xlat
enter
mov
and
repnz
pop
inc
jmp
mov
outs
xlat
mov
loopne
xchg
mov
aad
data16
cmps
pop
sbb
ret
cmp
or
xchg
dec
stos
bound
lods
pop
cmp
sbb
ret
adc
add
stos
in
sar
jl
xlat
and
xchg
js
cdq
into
repz
stos
(bad)
pop
cmp
sbb
enter
outs
hlt
or
pusha
xor
adc
test
ja
leave
pop
xor
xchg
cmp
stc
stos
jecxz
cmp
push
retf
xchg
dec
jae
ins
pop
xlat
aam
les
pop
cmc
lods
in
imul
push
outs
outs
push
stos
sbb
int3
adc
xor
mov
fnstcw
mov
(bad)
call
add
into
div
inc
adc
pop
out
frstor
fs
push
cmp
sub
cmp
int
shl
sub
xor
pop
out
jle
arpl
lods
adc
cmps
in
lock
shl
outs
inc
test
adc
mov
xchg
shr
cmp
daa
aad
mov
je
(bad)
scas
xor
mov
shl
jb
(bad)
pop
(bad)
and
int3
outs
jns
add
xchg
jl
dec
or
js
test
add
stos
add
jnp
xor
xor
fild
jno
xor
inc
idiv
and
xchg
imul
jl
ins
repz
stos
mov
pop
bnd
push
adc
(bad)
or
mov
cmp
add
ins
sbb
sbb
out
jnp
mul
retf
jno
out
js
scas
shl
adc
mov
jl
jg
add
int
outs
cmps
lea
lds
cmc
in
scas
mov
or
adc
in
or
jb
mov
jne
mov
cld
lahf
das
inc
in
in
adc
cmps
aam
push
lea
sub
jnp
in
(bad)
fimul
jmp
cmp
push
xchg
cwde
add
xchg
movs
xchg
sbb
les
jae
mov
jl
lds
xor
lock
hlt
stos
add
jbe
push
cld
xor
pop
sbb
cmp
push
dec
(bad)
out
test
lahf
jbe
out
adc
mov
jno
sti
mov
mov
stos
aam
xor
cmp
mov
out
lds
cmp
imul
push
inc
mov
test
imul
inc
shl
fistp
or
test
mov
xor
pop
ins
or
mov
cmp
inc
into
stos
sub
enter
dec
popf
cdq
mov
(bad)
mov
(bad)
gs
sysenter
imul
dec
loopne
mov
xchg
or
push
retf
lods
mov
lahf
push
test
(bad)
and
cmp
and
ja
gs
jae
pop
adc
in
mov
mov
sub
cli
ret
xchg
rcl
das
repz
and
or
xor
in
bound
mov
push
in
push
repnz
jae
pop
or
(bad)
mov
jge
popf
movs
repz
add
repnz
mov
cld
dec
std
repnz
sub
mov
test
jge
jb
stc
in
mov
push
bound
mov
sub
pop
sti
mov
jp
out
mov
sbb
mov
shl
ret
aaa
arpl
adc
push
xlat
cld
stos
cwde
inc
sbb
pusha
int
xor
mov
push
inc
mov
stc
inc
das
push
xor
inc
mov
jns
shl
fbld
xor
shl
inc
sti
stos
in
jae
add
imul
fisub
(bad)
out
scas
es
xor
cmp
xchg
out
cmp
stc
retf
pushf
sub
dec
cmp
fidiv
push
jp
hlt
xlat
xchg
dec
jmp
adc
call
shl
mov
in
data16
cmp
and
xchg
jns
out
mov
pop
mov
cmp
test
retf
sbb
push
or
fisttp
mov
mov
aas
(bad)
fwait
aam
cli
mov
pop
sub
pusha
add
test
and
aaa
add
push
push
(bad)
pop
pop
mov
push
pop
aaa
xor
ret
sub
sar
inc
xor
cdq
push
xor
repnz
fwait
outs
pop
(bad)
cmps
pusha
xor
inc
into
fisttp
loope
xchg
pop
int3
xor
test
loope
aaa
mov
pop
jmp
loop
dec
callw
shl
push
call
pop
pop
aam
popf
rcr
mov
lahf
jge
pop
(bad)
stos
and
and
cmp
retf
or
ds
and
pop
mov
das
jp
mov
stos
clc
adc
stos
call
xor
(bad)
jmp
iret
inc
cmp
les
into
pop
mov
adc
cs
add
and
loopne
movs
int3
cmp
jae
mov
call
xchg
mov
jmp
sbb
(bad)
std
inc
dec
call
mov
jnp
or
push
fimul
sub
mov
push
js
ins
xlat
push
inc
cmp
fwait
stos
jne
and
and
jno
addr16
scas
cmp
jge
retf
aaa
jmp
sbb
rcr
mov
adc
scas
sar
adc
or
dec
xchg
mov
dec
pop
sbb
daa
and
cmp
mov
sub
add
dec
add
iret
mov
fsubr
push
(bad)
cwde
fild
dec
inc
mov
pop
sub
mov
cdq
movs
jp
push
idiv
lahf
inc
push
sub
imul
push
int3
aam
mov
int
ret
pop
es
call
adc
cmp
movs
lods
pusha
test
push
leave
add
xor
mov
xor
mov
add
cs
adc
jae
mov
int3
jno
stc
in
or
jecxz
push
xor
xchg
inc
pop
or
push
das
and
cwde
out
push
add
ret
daa
inc
imul
pop
retf
(bad)
or
mov
xor
leave
jecxz
add
sbb
cli
sti
push
dec
(bad)
pop
inc
sar
fucomi
call
pop
or
jl
jg
cs
loopne
je
out
cmp
int3
or
cld
add
in
sub
xchg
call
lahf
and
std
push
call
or
pop
and
pop
mov
dec
je
sti
icebp
retf
mov
sar
ret
jmp
sbb
xlat
gs
loope
jecxz
hlt
xchg
shl
sub
mov
sahf
mov
sbb
out
inc
push
cdq
(bad)
clc
test
fcmovnbe
mov
jge
(bad)
mov
sbb
adc
push
and
in
data16
dec
pop
(bad)
sub
xchg
lock
adc
inc
rcr
pop
jmp
push
arpl
and
fisubr
pxor
dec
scas
out
nop
idiv
mov
and
lahf
mov
scas
pop
mov
and
lods
mov
lods
pop
popf
mov
jle
push
sar
(bad)
pushf
bound
pop
daa
outs
fiadd
ins
dec
adc
sahf
imul
inc
mov
add
xor
inc
dec
mov
sar
sbb
mov
push
jo
mov
mov
sub
add
aaa
shr
aad
lahf
jns
dec
xchg
sub
rol
adc
mov
lods
mov
pop
pusha
xor
push
cmp
push
cmc
sbb
push
adc
fscale
xor
xor
push
mov
sub
pop
lods
jl
adc
in
sub
mov
jbe
rcr
cld
pusha
cmps
into
push
xor
fild
pop
enter
lods
ret
int3
retf
aaa
es
es
lods
push
xor
pop
retf
mov
add
mov
icebp
add
(bad)
jb
or
loop
xlat
aam
lods
outs
or
nop
mov
sar
icebp
cwde
lods
aas
std
xor
jge
test
imul
xchg
in
test
mov
fwait
xchg
inc
and
xor
cmc
dec
push
cmp
sub
bound
fs
aam
inc
sbb
ja
adc
xcrypt-ecb
cmps
int3
sub
mov
xor
cdq
dec
add
and
jns
mov
lds
(bad)
mov
mov
inc
jmp
or
shl
leave
int3
jne
in
push
xchg
test
pop
in
sysexit
pusha
rcr
pop
inc
(bad)
fst
mov
cs
movs
mov
inc
retf
call
pop
daa
lahf
cli
lods
lods
das
retf
pop
fs
pop
jecxz
not
sub
xchg
push
stc
xchg
adc
jmp
or
out
sbb
les
dec
shr
cmp
cli
or
mov
pop
inc
push
cdq
pop
iret
ins
xor
data16
out
retf
in
add
push
xor
inc
xlat
pop
sbb
pop
frstor
mov
imul
arpl
sbb
ror
clc
jns
bound
stc
out
mov
bound
lods
dec
inc
inc
sti
pop
inc
in
outs
call
fbstp
ds
ins
jle
lea
jo
or
cmps
and
cmp
int3
mov
aam
and
js
sub
inc
mov
sti
mov
add
mov
push
add
jl
out
pop
or
vpmacssdqh
push
xlat
pop
lahf
jne
enter
icebp
ins
mov
loope
jg
fisubr
(bad)
ja
pop
adc
or
and
mov
loope
jmp
(bad)
cdq
mov
ss
jmp
aaa
push
mov
push
outs
mov
in
jle
neg
fs
push
gs
inc
stc
cs
or
out
in
outs
adc
push
stos
int
dec
fadd
fstp
xor
inc
cmps
lods
clc
add
mov
lods
aas
pushf
add
inc
repnz
sub
mov
or
imul
xchg
(bad)
into
pop
jle
stos
(bad)
rcl
jne
loop
push
pop
inc
push
add
cmp
cli
push
(bad)
sti
dec
dec
add
jmp
xchg
mov
pop
fwait
jecxz
mov
xchg
cmps
in
test
lahf
and
mov
cdq
push
push
sub
int
jbe
out
sub
sub
dec
dec
dec
dec
cmc
inc
call
xchg
inc
push
lock
and
fstp
ret
sahf
adc
adc
in
push
jns
jp
add
jmp
inc
mov
jmp
fld
xor
jno
push
es
pop
(bad)
out
mov
push
fidiv
sub
test
das
sbb
lds
aas
mov
popa
retf
jo
ficom
or
add
enter
mov
mov
ins
(bad)
aas
fistp
fsubr
out
and
lods
and
fdivr
mov
mov
jb
push
jb
and
lds
mov
cmps
mov
xor
aad
shl
xchg
xor
scas
mov
mov
dec
ds
call
retf
add
mov
mov
cmps
int
cwde
out
out
sahf
add
das
(bad)
ss
rcl
dec
scas
fwait
in
aaa
repz
sbb
and
or
adc
dec
dec
ja
dec
sub
cmp
in
mov
bound
xchg
and
xchg
xor
ins
cmp
mov
into
call
cwde
mov
shr
dec
call
leave
jle
out
fistp
lahf
jno
mov
push
dec
aas
and
xchg
enter
and
repnz
scas
das
dec
dec
fst
add
out
and
jp
rol
loop
push
push
xchg
ins
pop
div
sub
push
sub
adc
jnp
cmp
imul
adc
(bad)
movs
cwde
add
cmp
cmp
adc
inc
mov
scas
push
loope
add
aaa
(bad)
psubw
mov
mov
stos
adc
inc
mov
jmp
xchg
sbb
mov
pop
inc
cmp
imul
ficomp
push
push
and
(bad)
ins
lock
fs
ja
fadd
(bad)
xor
jne
dec
push
into
jne
pusha
scas
mov
sbb
retf
(bad)
leave
pop
loopne
ror
mov
push
iret
aas
cmps
or
cmp
ss
das
dec
pushf
int3
or
pop
jb
xchg
xor
push
(bad)
retf
and
mov
addr16
pop
(bad)
lea
jmp
lock
adc
xchg
sbb
sub
and
add
hlt
in
dec
sbb
jmp
dec
pushf
movs
and
pop
fstp
inc
xor
clc
push
bound
pop
lods
rcl
mov
out
push
ret
ds
push
ficom
add
jno
nop
in
shl
dec
mov
sbb
cwde
sbb
push
jb
dec
sub
out
fild
and
and
mov
cmp
shr
or
xor
push
mov
(bad)
cs
sub
enter
in
push
push
jo
fsub
lock
gs
sbb
repnz
call
stc
xchg
mov
xchg
fwait
and
lods
mov
adc
sub
out
pop
jae
arpl
sub
stos
ret
frstor
adc
outs
(bad)
stos
shl
inc
and
nop
clc
(bad)
mov
adc
repz
ins
mov
lea
(bad)
mov
push
into
fimul
aaa
or
and
jb
in
hlt
sub
mov
je
mov
loop
nop
je
fdiv
shr
pop
xchg
icebp
leave
aad
push
stc
sub
outs
pushf
mov
push
xor
xor
aad
pop
mov
jecxz
jno
ror
add
fs
adc
push
scas
not
add
neg
retf
int
sbb
call
dec
mov
push
cli
cmp
sub
out
bound
dec
popa
mov
inc
and
inc
cmps
jl
push
inc
aas
adc
es
mov
jle
ficom
adc
stc
xchg
mov
mov
aad
movs
jp
out
fucomi
or
xlat
sub
imul
inc
jbe
mov
inc
repnz
hlt
cmp
add
sbb
or
rcl
xchg
loope
shl
enter
rol
loop
fucomip
ror
add
adc
iret
stc
cmp
sar
inc
xchg
pop
lock
bound
in
and
push
ret
add
xchg
outs
jl
push
bound
(bad)
push
fimul
pop
neg
inc
(bad)
mov
(bad)
stos
loopne
sbb
xor
int
psllq
out
push
adc
(bad)
(bad)
jg
jl
cdq
movs
clc
mov
or
pop
jne
push
ds
xchg
sbb
push
or
pop
les
imul
dec
fucom
pop
(bad)
xor
test
push
mov
add
mov
loopne
(bad)
cdq
mov
lds
ss
pop
inc
fcmovu
or
add
movs
mov
cmp
push
test
mov
sbb
inc
add
cmp
mov
jmp
out
jns
jno
in
out
inc
mov
lds
pop
(bad)
xor
sub
jg
int
push
jae
mov
std
std
adc
iret
fiadd
test
test
js
jge
mov
jg
fld
popa
out
in
loope
out
cdq
lock
jp
aaa
xor
xor
and
leave
xor
bound
or
inc
fldenv
xchg
inc
jbe
mov
adc
fdiv
sub
push
in
mov
call
sbb
out
aad
cmps
jl
mov
mov
pop
dec
sbb
ss
ja
inc
mov
push
fwait
and
pop
std
lods
ss
adc
cmp
xchg
imul
dec
jge
fidivr
leave
movs
(bad)
aaa
stos
dec
fadd
xor
mov
call
pop
lahf
pop
popa
push
cs
std
push
sti
xor
(bad)
shr
test
pop
stc
out
inc
inc
or
int
pop
or
xor
push
mov
test
pusha
ret
mov
int
nop
idiv
xor
or
aas
xchg
push
sub
fisub
cmps
loop
xor
rol
scas
mov
test
fwait
scas
mov
imul
push
cmp
nop
(bad)
out
mov
mov
loope
inc
fist
jb
(bad)
xor
sub
ins
fidivr
shl
push
movs
mov
mov
mov
push
fcomp
or
xchg
sbb
ds
rcl
(bad)
(bad)
stos
ds
ds
add
in
cmp
jmp
jp
sahf
dec
dec
test
xchg
(bad)
cmp
shr
into
adc
mov
inc
mov
dec
and
or
sub
cli
out
or
pop
pop
mov
jb
ret
mov
jo
cmp
dec
mov
push
xchg
add
sub
ins
out
adc
ds
leave
lahf
sub
xchg
scas
retf
sahf
mov
and
shl
arpl
shl
xor
ret
and
ins
pop
es
hlt
sub
dec
xchg
in
cmp
cmp
enter
test
xchg
(bad)
(bad)
cmp
shl
mov
aad
pop
(bad)
inc
dec
and
pop
sub
pushf
or
out
jg
out
(bad)
and
xchg
or
push
stos
jae
cmp
rol
dec
aam
out
call
ror
ds
inc
pop
adc
repnz
in
mov
fdiv
test
xchg
dec
ret
add
arpl
xor
sub
ds
adc
add
fstp
iret
popa
stos
sub
std
dec
sbb
aas
loopne
in
js
sub
sub
test
rcl
push
daa
in
fstp
sbb
sub
jnp
cmp
push
sahf
sbb
mov
movs
dec
mov
dec
and
pop
sbb
fiadd
cmp
push
jmp
sub
pop
add
lahf
and
inc
ins
jg
aas
or
ins
jle
aad
loope
pop
sub
repz
mov
retf
cmp
loop
mov
cli
cmp
out
or
cs
cdq
inc
aas
stos
ret
mov
fsubr
mov
push
mov
xor
sar
xor
mov
aaa
xchg
xor
mov
shr
mov
xlat
ret
mov
cmps
mov
mov
ror
imul
mov
stos
rol
fidiv
aaa
cmp
or
mov
ror
push
neg
test
daa
add
inc
enter
pop
push
out
or
aad
xchg
jb
adc
imul
xor
fdivr
xor
sbb
ja
fld
push
adc
cmp
and
pop
retf
or
xchg
rol
xor
(bad)
sar
std
ins
sub
cmp
and
sbb
mov
xor
test
ss
stc
aad
ror
xor
inc
mov
sub
test
shl
push
add
mov
aaa
and
sub
jb
icebp
add
mov
les
pop
adc
popf
sbb
(bad)
jg
push
pop
dec
in
sub
push
ret
dec
lea
inc
xor
push
push
mov
ds
aam
pop
xchg
jns
xchg
mov
and
or
test
daa
fcom
cwde
(bad)
pop
(bad)
and
jne
scas
fbstp
dec
out
iret
jmp
lea
addr16
fmul
test
cwde
and
push
add
add
into
fst
popa
mov
(bad)
outs
fild
push
sub
jns
pop
push
mov
pop
in
(bad)
xchg
lahf
sar
test
scas
cmp
inc
and
arpl
movs
sbb
and
cmp
jecxz
mov
dec
hlt
jne
outs
ins
clc
or
xchg
ds
xor
test
pushf
enter
dec
and
mov
shr
adc
xor
pop
rcr
jecxz
push
retf
sbb
pop
xchg
(bad)
iret
pop
push
(bad)
mov
bound
scas
cli
fadd
lods
ss
cmp
sub
push
adc
lods
sbb
jb
inc
push
xchg
adc
inc
daa
xchg
int
pop
imul
mov
xor
cld
jmp
jne
mov
cli
mov
jo
sub
mov
sbb
cmp
mov
sbb
hlt
je
sub
xchg
dec
and
push
mov
movs
popa
push
and
aam
and
xchg
daa
sbb
fdivr
movs
das
push
jmp
inc
imul
(bad)
jnp
daa
jbe
xor
call
lods
daa
inc
push
out
test
ret
rcr
ss
nop
mov
cmp
or
fbld
rol
std
in
hlt
inc
and
adc
nop
xor
call
add
popf
add
push
lock
mov
mov
xor
das
cmp
leave
cs
sbb
or
ret
mov
test
inc
dec
pop
out
out
adc
aaa
xchg
mov
mov
adc
push
push
test
(bad)
or
add
mov
push
ds
lahf
dec
js
adc
mov
(bad)
es
pop
adc
aam
and
mov
mov
mov
add
add
mov
cmp
cmp
fpatan
sbb
jno
pop
xlat
addr16
cmp
mov
rol
mov
jns
not
add
or
fadd
sbb
test
push
push
pop
jle
cmc
or
das
jg
pop
mov
stos
jae
push
push
push
sub
scas
xor
std
mov
xchg
loopne
jecxz
and
jmp
mov
sub
sahf
cmp
inc
stos
jl
mov
sub
add
add
rcl
aaa
fsub
or
inc
mov
mov
dec
and
xchg
push
popf
push
inc
(bad)
pcmpeqw
ror
sbb
mov
pop
fst
pushf
dec
mov
sbb
lock
outs
xor
add
repnz
pop
test
adc
cld
mov
or
lock
xchg
movs
mov
loopne
dec
outs
jno
fwait
es
pop
test
pop
dec
sbb
dec
jge
ror
popf
and
ss
mov
xchg
xor
arpl
mov
push
icebp
cmp
mov
and
js
bound
sub
es
loope
inc
inc
aaa
aas
div
jp
xlat
cmp
push
in
mov
xor
jo
inc
(bad)
pusha
sub
sbb
and
shr
fild
pop
mov
pusha
into
pop
or
dec
xchg
gs
pop
stc
mov
dec
inc
and
pushf
push
shr
fst
in
dec
repz
cmp
aad
stc
rcr
(bad)
cmp
outs
iret
pop
in
out
push
aas
outs
shl
ret
int3
push
(bad)
stc
adc
jmp
les
pusha
cmp
fild
adc
inc
not
pusha
sbb
cmp
jmp
mov
and
pop
lds
mov
lea
lock
stc
std
adc
rol
sbb
mov
loop
stos
adc
jp
gs
sub
dec
test
ror
mov
lahf
or
call
fs
das
ror
out
pop
mov
(bad)
cmc
repnz
inc
(bad)
scas
dec
aam
popa
push
cmps
enter
xor
xor
inc
jl
mov
sub
dec
mov
add
ficom
int
adc
xchg
rol
xor
pop
pushf
out
inc
nop
fwait
mov
add
or
xchg
dec
or
fsqrt
jmp
xchg
xchg
add
(bad)
fbld
shl
pop
out
in
mov
int
data16
popa
pop
and
daa
xor
in
mov
out
scas
add
push
dec
je
imul
mov
frndint
or
scas
jecxz
pushf
leave
mov
cmp
or
cli
aam
inc
fcmovnb
mov
sbb
mov
jecxz
mov
jmp
pop
push
xchg
jmp
sbb
jbe
xchg
dec
xchg
shr
retf
and
je
enter
arpl
jmp
(bad)
push
sub
sub
cmp
cs
imul
add
xor
clc
mov
jge
aad
xor
into
cmp
mov
pop
aad
sub
je
leave
jl
scas
and
xchg
ja
mov
(bad)
xlat
mov
fdiv
test
xchg
push
or
mov
mov
lock
dec
mov
lea
out
add
(bad)
mov
ds
test
xchg
sub
scas
outs
rol
in
movs
addr16
sub
call
or
daa
stc
push
dec
out
mov
nop
popa
cmp
and
in
shl
and
pop
imul
(bad)
(bad)
jo
cmp
cwde
out
hlt
xor
rcl
test
dec
stos
addr16
retf
fs
(bad)
cmps
dec
(bad)
movs
int
cmp
push
adc
push
mov
ficomp
leave
rcr
addr16
mov
inc
(bad)
in
mov
in
in
and
and
cmc
mov
jl
pop
sahf
xchg
(bad)
loope
mov
call
call
adc
out
mov
pusha
push
je
push
imul
cdq
sbb
inc
pop
dec
cs
xor
(bad)
adc
loopne
inc
and
fpatan
lods
mov
aaa
and
shr
adc
dec
lods
push
popa
popa
pop
bound
sbb
ins
pop
aaa
xchg
fidivr
mov
xorps
aam
imul
pop
add
mov
enter
push
loop
sbb
in
lods
mov
jmp
stc
or
xchg
push
hlt
sub
and
out
jmp
in
cs
imul
mov
sub
inc
cmp
imul
xchg
pop
xor
lods
sub
leave
es
push
int3
outs
pusha
sub
mov
test
jg
add
xchg
mov
mov
push
call
pop
mov
cmp
hlt
cdq
imul
es
cmp
(bad)
pop
xchg
add
xor
sub
push
xchg
lds
cmc
retf
mov
xlat
aam
sbb
dec
(bad)
aas
dec
pop
fwait
adc
mov
fwait
(bad)
std
in
inc
mov
fwait
cwde
(bad)
and
movs
mov
or
add
mov
test
cmps
xchg
inc
mov
dec
cmc
xchg
out
and
sbb
push
lahf
in
push
cdq
push
mov
or
pop
push
dec
fwait
mov
push
ss
hlt
adc
sub
adc
repnz
mov
xchg
add
or
inc
mov
fucomi
jg
jae
sahf
push
adc
mov
fild
clc
mov
call
dec
mov
and
adc
dec
or
(bad)
gs
pop
das
das
dec
cmp
pushf
lods
pop
dec
add
mov
add
and
cs
cmp
dec
pop
push
xor
xchg
jl
fadd
cld
pop
aam
loopne
stc
dec
or
jmp
cli
mov
mov
stos
fsubr
mov
pop
rcr
lahf
xchg
cmps
pop
cmp
sar
(bad)
daa
int3
mov
sub
mov
cli
fnstsw
jne
aam
mov
mov
mov
fst
sbb
pushf
push
jns
stos
fstp
enter
xchg
cmp
popf
cld
test
or
data16
rcr
sbb
inc
cmp
loopne
outs
(bad)
fidiv
stos
cmp
jp
mov
loopne
push
lea
mov
pop
or
movs
out
inc
dec
mov
enter
outs
int
scas
mov
jb
jne
repnz
scas
or
daa
aaa
xor
and
and
xchg
cmp
inc
sub
mov
inc
inc
fucomip
popf
mov
mov
pop
mov
out
xor
inc
push
scas
mov
call
(bad)
cmp
jg
psubsb
loope
mov
and
lahf
mov
add
dec
mov
adc
hlt
jmp
jnp
xor
ret
xchg
mov
jo
jns
and
test
and
jmp
xor
inc
sbb
mov
(bad)
data16
dec
and
jl
bound
outs
cli
fldenv
add
xor
cmps
pop
call
dec
mov
dec
bound
xchg
adc
adc
(bad)
mov
or
ficom
mov
jbe
inc
inc
(bad)
(bad)
push
ins
xor
mov
xor
or
sbb
fsub
movs
jl
fwait
mov
icebp
(bad)
push
lds
jno
or
hlt
out
es
jmp
pop
mov
mov
sub
pop
inc
aaa
fld
mov
mov
jo
div
sti
cmps
dec
lods
and
cdq
in
aam
out
sbb
or
call
dec
ret
in
retf
inc
or
push
inc
or
mov
stos
mov
gs
or
jno
and
and
push
imul
in
push
adc
inc
pop
int3
dec
cmp
scas
scas
mov
push
add
cwde
pop
xchg
scas
adc
cs
cs
cmp
mov
cmp
and
das
ins
ret
das
out
push
outs
xchg
mov
xor
scas
mov
icebp
push
repz
in
arpl
loopne
mov
lods
js
mov
ins
mov
cwde
sbb
xor
lds
lahf
pop
mov
push
cdq
or
in
push
data16
popa
pusha
loopne
rcl
mov
push
adc
jae
pop
inc
mov
pop
shl
inc
mov
(bad)
mov
push
popa
nop
jle
adc
outs
mul
adc
arpl
fiadd
push
mov
inc
mov
adc
xchg
in
sub
sub
bound
das
or
push
mov
mov
icebp
mov
aad
add
jmp
sub
cld
in
mov
(bad)
out
adc
dec
jg
jecxz
shl
lds
push
sahf
dec
mov
(bad)
push
xchg
stos
push
inc
mov
in
in
inc
scas
dec
jge
jl
pusha
(bad)
mov
jmp
xchg
idiv
xor
pop
loopne
stc
arpl
adc
int3
out
jmp
out
lods
jae
in
pop
push
mov
mov
int3
jns
dec
and
(bad)
sbb
cwde
cli
xor
mov
(bad)
ins
dec
aas
xchg
mov
or
cli
pop
outs
inc
js
hlt
push
mov
popa
je
add
xor
std
or
fs
icebp
sub
push
inc
ret
repnz
inc
addr16
xor
dec
jne
pusha
stos
sub
push
cmc
jno
call
cmp
cmp
int
inc
inc
iret
sar
xchg
dec
inc
scas
cmp
jg
pop
xor
aam
pop
cwde
or
repnz
cmp
mov
jmp
jae
lods
jbe
addr16
rol
call
jae
fldln2
pushf
inc
add
pop
popf
mov
pop
push
push
repnz
push
or
ret
cdq
or
xchg
push
stc
xor
and
jb
pop
xchg
add
add
in
sahf
and
xor
xor
adc
jne
neg
dec
popa
jo
sub
cli
sub
psrlw
jbe
or
(bad)
mov
scas
sub
test
stc
mov
inc
and
call
mov
les
inc
xchg
ficomp
popf
in
push
and
and
dec
jmp
xchg
inc
sub
push
sahf
adc
push
dec
push
sbb
mov
iret
es
(bad)
sbb
xor
mov
xor
sbb
mov
loopne
ja
jp
fcom
mov
mov
in
push
(bad)
repnz
xchg
dec
push
shl
je
and
sbb
pop
in
adc
out
imul
iret
out
sub
(bad)
cmp
popa
retf
fld
pop
in
add
pop
fisubr
dec
cmc
jge
sti
or
cld
es
push
pop
iret
push
lock
call
pop
adc
or
sbb
mov
fs
dec
cwde
test
stos
inc
hlt
int3
fcmovu
imul
enter
cmps
sbb
scas
mov
xchg
adc
stos
(bad)
rol
add
into
pop
sbb
ret
cmp
outs
add
jp
sub
iret
imul
mov
inc
sbb
mov
cmp
mov
push
mov
mov
sub
or
or
mov
aam
inc
inc
ja
xor
iret
cmps
je
mov
and
nop
inc
aad
pop
loopne
nop
xor
outs
ins
lock
movs
pop
ja
out
int3
in
xchg
and
int3
inc
pusha
mov
cld
cs
arpl
mov
pop
xor
cdq
repnz
mov
jne
clc
pusha
int
fnstenv
es
fsub
in
mov
mov
imul
pop
cmps
and
inc
xor
adc
mov
test
adc
jmp
mov
add
and
sub
out
sbb
sub
mov
xor
mov
jp
hlt
ss
adc
add
(bad)
es
xlat
adc
retf
add
fist
repz
add
jo
xchg
pop
or
fld
js
pop
lods
sahf
lahf
inc
add
push
and
fsubr
call
or
iret
int
cmp
dec
retf
jecxz
xor
cmc
and
push
inc
lods
and
lds
sbb
jmp
sahf
imul
and
loope
xchg
mov
xchg
sub
mov
not
imul
enter
add
cmp
mov
ja
inc
imul
dec
push
or
(bad)
test
mov
shr
mov
sub
mov
sub
pushf
xchg
inc
mov
xor
aam
int
inc
push
enter
mov
dec
jbe
sub
cmp
jmp
mov
sub
popf
adc
ja
iret
sub
xchg
add
cli
xchg
repnz
xchg
retf
xchg
repnz
loop
(bad)
sti
fistp
jl
push
push
mov
jbe
aam
mov
imul
mov
inc
(bad)
lock
int3
or
sbb
push
lahf
xor
cmc
cmp
test
mov
xor
retf
lahf
jl
mov
fisttp
mov
loopne
or
jne
hlt
popf
add
mov
movs
aas
out
(bad)
adc
push
sub
add
jmp
push
xchg
jns
stc
clc
mov
inc
je
inc
sbb
cmp
mov
push
das
fadd
dec
(bad)
jb
xor
pop
pop
cmp
cs
ds
push
inc
ja
dec
or
push
out
adc
inc
pop
pop
pop
and
int3
mov
lahf
sbb
ret
inc
push
jae
mov
das
arpl
mov
jns
jae
(bad)
fsubr
push
ret
mov
pop
inc
in
mov
hlt
repnz
xchg
adc
ds
pop
add
jae
cmp
add
mov
push
(bad)
mov
imul
push
inc
jae
iret
push
repnz
and
(bad)
sbb
or
repz
mov
movs
sbb
pusha
mov
imul
aam
stos
sahf
lds
je
mov
mov
cmp
lds
gs
jle
call
and
adc
pop
icebp
push
mov
outs
mov
(bad)
adc
arpl
mov
mov
scas
ins
push
sub
jp
(bad)
stos
fiadd
lods
sub
xchg
jl
mov
loop
ins
push
loop
jg
fimul
adc
mov
xor
(bad)
sbb
add
or
arpl
ins
pop
movs
mov
pop
sub
xchg
clc
xchg
push
mov
cmp
add
add
adc
stos
ja
push
xor
adc
sbb
push
dec
icebp
lock
in
mov
inc
pop
or
sub
inc
xchg
enter
mov
ret
xchg
sub
mov
(bad)
leave
mov
and
jge
cmp
aaa
ret
sbb
mov
sar
sahf
cmps
rol
inc
call
popa
pop
call
lock
jbe
out
jmp
aas
push
leave
dec
out
push
pop
cs
dec
lods
call
call
push
js
and
jmp
push
or
stos
mov
pop
mov
aaa
in
mov
shl
push
ror
dec
imul
sbb
data16
or
retf
dec
sbb
push
scas
pop
pop
lahf
hlt
sbb
repz
inc
sub
sbb
and
enter
je
ror
mov
in
adc
xlat
fcmovb
cld
rcr
jge
push
data16
push
xor
sti
sbb
arpl
ins
int3
push
adc
adc
rcr
jge
dec
pop
mov
sub
pop
sti
adc
int
(bad)
movs
fsubr
movq
sbb
hlt
sub
push
or
iret
mov
das
xlat
fwait
repz
jb
adc
pop
dec
ror
pop
cwde
xor
mov
push
gs
adc
and
or
push
mov
je
mov
jp
cdq
xchg
xchg
loope
xor
mov
and
xor
cmp
or
int3
fwait
xchg
pop
sbb
scas
xor
mov
dec
push
(bad)
sti
fidivr
nop
mov
fsubr
call
xchg
jecxz
iret
je
hlt
add
xlat
mov
or
adc
mov
and
pop
sbb
loop
fdivr
popa
je
lea
gs
sbb
test
loop
std
inc
mov
push
mov
mov
cmc
cmps
sub
push
or
call
push
xchg
data16
adc
mov
in
cmp
push
mov
ins
fcomp
test
add
push
into
pop
mov
fst
xchg
and
sub
cmp
shl
pop
mov
push
or
jno
stos
jmp
mov
test
lock
or
dec
xor
imul
and
xchg
cmp
jnp
ins
pop
lahf
outs
nop
(bad)
fucomp
add
or
push
lods
cmp
dec
push
mov
push
rcr
in
not
mov
push
jg
stos
das
mov
dec
mov
inc
call
adc
outs
jnp
je
sub
mov
pop
xchg
mov
jge
mov
ret
dec
jp
enter
dec
pop
mov
and
fnstenv
lods
mov
or
jbe
sub
sub
jg
or
xor
jecxz
fisttp
xchg
jecxz
fs
xchg
add
or
inc
loop
dec
out
push
push
les
and
pop
aas
dec
std
push
xchg
mov
call
mov
imul
adc
out
add
mov
add
mov
mov
test
nop
push
xor
in
cmp
daa
jle
nop
xchg
fsub
ins
in
movs
imul
mov
jge
aad
push
rol
inc
or
mov
stc
jg
daa
ror
jns
jno
inc
lock
stos
mov
add
test
sbb
mov
rcr
inc
push
push
es
popf
pop
loope
repnz
repz
push
cmp
inc
fnsave
xor
scas
outs
dec
rcr
iret
leave
aad
cmp
mov
xor
sbb
jecxz
pop
loope
push
shr
mov
pusha
fsubr
xchg
daa
popf
nop
push
fist
cdq
imul
imul
xor
not
mov
data16
dec
pushf
mov
repz
rcl
sub
push
fldcw
mov
sahf
out
loope
add
dec
mov
push
cmp
pop
fwait
push
mov
mov
pop
push
mov
ins
pusha
inc
or
cmp
or
clc
xor
lahf
push
push
xchg
inc
mov
retf
adc
add
push
dec
xchg
jp
iret
mov
push
add
shr
mov
pop
bound
xor
ss
or
dec
jbe
cmp
test
mov
mov
mov
(bad)
mov
scas
stc
popa
(bad)
(bad)
and
imul
mov
sub
jbe
push
xchg
f2xm1
jmp
cmp
pop
mov
mov
add
and
popa
pop
rcl
xchg
aas
pushf
push
repz
inc
cmp
xor
call
(bad)
add
cmps
pop
sub
mov
xchg
repz
xchg
and
scas
jl
loope
inc
xchg
cmc
dec
inc
push
into
dec
fld
xchg
pop
sbb
cmp
mov
int3
iret
aas
icebp
std
sti
xor
icebp
fnclex
inc
rcl
mov
fisubr
aaa
sub
mov
jnp
fstp
nop
jnp
sbb
mov
daa
adc
add
cmp
xchg
int3
pop
jmp
dec
jp
dec
push
sbb
scas
push
or
cmc
mov
inc
add
xlat
mov
pop
(bad)
imul
loop
inc
jo
push
jmp
cmps
cmps
xchg
adc
cmp
sbb
(bad)
jb
jle
sub
bound
cmps
jb
sub
push
hlt
js
call
sti
mov
(bad)
cld
pop
sti
mov
bound
dec
fidivr
out
sub
sbb
fidiv
dec
aad
inc
(bad)
popa
loop
xchg
jae
(bad)
popa
push
out
and
shl
add
mov
outs
fs
in
inc
pop
sbb
aam
xor
sbb
in
push
jb
stos
ss
sub
call
pop
daa
ret
cmc
sbb
aaa
shl
leave
and
lds
jge
jns
out
enter
ror
scas
loope
mov
mov
jg
mov
add
and
dec
ds
xchg
or
lock
mov
(bad)
sahf
ror
bound
ficomp
iret
repnz
add
xchg
mov
jl
xchg
das
or
fisubr
loop
sub
jecxz
jae
xor
mov
cli
addr16
repnz
xlat
xor
cli
shr
rcl
xor
rol
rcr
aaa
inc
pop
leave
jp
pop
das
(bad)
or
ficom
sbb
jmp
je
lock
jmp
dec
outs
xchg
jp
mov
aad
cmp
lea
jno
mov
movs
cwde
icebp
jg
shl
arpl
data16
enter
clc
cmc
cmp
in
ja
lods
stos
mov
mov
push
pop
jo
clc
inc
test
outs
xchg
and
push
dec
mov
dec
jo
dec
jge
push
pushf
jmp
mov
pop
xor
fs
movs
stos
push
ss
call
cmp
mov
jmp
in
stc
loop
adc
mov
test
xor
and
das
or
and
imul
call
lods
dec
and
aad
ins
stos
add
aam
mov
loopne
repz
leave
repnz
xor
pop
bound
out
inc
stos
xor
repnz
xor
(bad)
ja
pop
pop
push
sahf
jl
xchg
sbb
fstp
shl
push
inc
fimul
add
or
mov
es
in
and
shl
sub
xor
stos
adc
imul
(bad)
lahf
fdivp
stc
or
rol
xchg
fld
add
sbb
bound
add
mov
mov
mov
pop
pop
out
fcmovne
jae
lock
pop
pop
mov
loope
or
mov
nop
fisubr
xor
pusha
push
sub
fs
add
or
cmp
dec
(bad)
sub
push
scas
pop
movs
ss
sti
pushf
dec
cwde
sbb
and
adc
ja
sub
mov
mov
jmp
dec
inc
int3
enter
psrlq
in
cmp
mov
fcom
mov
adc
aaa
enter
jg
clc
in
push
shr
mov
rol
push
arpl
mov
push
arpl
shl
sub
(bad)
(bad)
repnz
into
mov
ins
pop
ins
lock
sahf
cli
js
sbb
fisub
rol
dec
mov
mov
xchg
rcl
mov
lods
movs
mov
mov
ret
jg
cmp
adc
nop
movs
jecxz
pop
mov
jbe
jge
mov
outs
enter
cmps
jecxz
jge
mov
xor
scas
inc
pop
and
xchg
fnstsw
(bad)
(bad)
push
int
inc
cmp
jmp
push
and
inc
push
xchg
lods
in
mov
neg
scas
jle
out
jns
cld
ret
out
in
adc
test
sub
inc
jecxz
mov
adc
fcomp
les
mov
adc
mov
into
jmp
fdiv
int
dec
mov
mov
(bad)
pop
aas
leave
add
rcr
sub
sub
js
sub
lods
adc
lea
je
in
in
pop
pop
xchg
pop
jmp
ins
mov
repz
mov
jp
lods
sti
std
dec
pop
cwde
fwait
cmp
sub
movs
mov
pop
cwde
mov
fild
fwait
push
xor
cmp
rol
dec
cmp
aas
xor
add
sub
leave
test
test
sbb
or
test
sub
arpl
push
mov
retf
jmp
pop
cmp
das
pushf
hlt
test
jns
fidivr
outs
cmp
ja
scas
pop
(bad)
into
loop
and
neg
cdq
jae
ror
hlt
or
cmp
or
dec
sbb
add
xchg
adc
xchg
hlt
adc
inc
arpl
sti
mov
add
outs
sub
sbb
inc
(bad)
and
sub
clc
adc
cmp
mov
outs
mov
test
imul
stos
jo
sti
xchg
mov
dec
inc
jbe
clc
xor
loope
pop
xchg
scas
mov
inc
lea
pop
dec
call
pop
fdiv
aam
mov
dec
mov
cmp
ror
rcl
cld
cli
mov
outs
mov
sbb
lods
dec
xor
add
aaa
pop
gs
xor
ins
or
fs
push
in
out
scas
push
cmp
retf
xchg
lods
sbb
fld
retf
xchg
xchg
repz
pop
leave
inc
and
xchg
lods
pop
(bad)
or
dec
nop
mov
pop
push
sub
sbb
pusha
push
std
ds
jnp
push
daa
sbb
jmp
jb
mov
or
out
ror
ins
pop
xchg
push
ins
mov
ds
imul
mov
push
or
jl
mov
dec
das
push
in
ins
sar
pop
dec
jae
cmps
aad
or
mov
cmp
xor
mov
shr
movs
cli
dec
pop
sub
jp
sub
sti
dec
imul
jmp
cld
in
dec
iret
(bad)
das
cmp
or
mov
sahf
xor
lahf
popa
lldt
into
inc
es
(bad)
jecxz
icebp
cmc
ins
(bad)
sbb
out
jle
sbb
mov
jecxz
xchg
sbb
cmc
jno
ds
fsub
cld
cmp
dec
sub
push
out
adc
aaa
addr16
mov
add
shr
call
push
mov
mov
mov
add
stos
jmp
outs
retf
jnp
cmps
in
aam
lock
dec
sub
lods
jb
fcom
jnp
sbb
test
fs
(bad)
test
lahf
sub
mov
pop
dec
adc
les
adc
jne
aas
and
lahf
mov
cmps
jmp
mov
push
scas
aaa
inc
hlt
js
cli
ds
jp
js
ror
data16
out
add
mov
mov
ret
pop
dec
cmp
retf
mov
sub
mov
ins
into
and
jg
xor
fwait
cmp
adc
aad
sub
xchg
pop
fdivr
mov
call
imul
mov
jecxz
mov
(bad)
scas
std
test
std
push
mov
retf
and
push
cmp
push
xlat
xor
lea
mov
push
dec
stos
movs
dec
(bad)
pop
push
mov
xchg
out
mov
xor
inc
pop
dec
leave
push
push
aaa
dec
(bad)
repz
loop
sahf
add
test
fcmovu
dec
shl
or
mov
(bad)
sbb
out
inc
ins
aam
inc
enter
add
retf
pop
test
mov
loopne
xor
xchg
stos
mov
push
cmc
or
out
mov
cmp
bound
cmp
push
(bad)
in
stos
push
inc
int3
fisub
(bad)
leave
pushf
jg
lds
jge
jmp
pop
dec
and
inc
mov
lea
icebp
mov
cmp
or
xchg
jp
push
ins
xchg
mov
(bad)
jbe
pop
(bad)
call
addr16
adc
push
or
daa
mov
sub
or
dec
repz
aaa
xor
dec
aas
stos
mov
dec
icebp
aaa
mov
leave
lea
enter
data16
shl
fmul
arpl
or
add
and
(bad)
pop
inc
leave
jbe
jecxz
dec
mov
jmp
hlt
pop
(bad)
mov
sub
or
pusha
sub
inc
or
mov
cdq
pop
jnp
sbb
mov
arpl
or
mov
ins
cli
dec
scas
xchg
jp
xchg
jnp
cwde
cmp
repnz
outs
sub
das
mov
fld
fidivr
sbb
push
inc
add
push
in
enter
mov
cmps
add
mov
shl
jb
pop
cld
jle
add
sub
and
dec
pop
lock
enter
inc
xchg
mov
push
dec
push
xchg
mov
or
test
repz
sbb
scas
shr
and
lock
or
xchg
push
shr
push
movs
call
pop
mov
xor
mov
pop
sub
or
cdq
mov
mov
(bad)
rol
mov
and
lock
pop
jnp
loope
xor
lods
sar
addr16
cwde
sbb
fucomip
pop
aam
push
sbb
pop
jnp
(bad)
sub
push
sahf
outs
jo
inc
dec
cmp
inc
mov
enter
imul
aaa
ret
sub
jo
lock
fisubr
int
jb
or
movd
ror
aad
dec
or
loope
fisttp
movd
mov
enter
pop
cmps
mov
sbb
adc
pop
push
adc
inc
sar
(bad)
sbb
sbb
ja
adc
shl
loope
jle
mov
pop
or
ds
in
push
ret
mov
push
addr16
sub
fistp
dec
call
xchg
int3
loop
cli
jb
mov
(bad)
jbe
hlt
iret
cmp
stos
retf
cmp
ins
cdq
lds
push
clc
iret
and
inc
cmps
aas
rol
xchg
aas
daa
fdivr
add
test
pop
shl
add
ja
pop
xor
inc
shr
cmc
ret
loop
mov
movs
out
jbe
jg
sbb
xchg
xchg
and
push
push
xchg
and
and
jno
xor
(bad)
xchg
jbe
fst
dec
push
dec
jae
test
dec
add
ins
ror
add
loop
ins
lds
mov
jnp
hlt
cmps
adc
gs
(bad)
es
dec
xor
dec
icebp
push
pop
in
cs
in
call
jge
shl
fwait
sbb
xchg
pop
xchg
push
sbb
adc
add
jnp
iret
fld
test
arpl
in
outs
adc
dec
xchg
fs
hlt
jmp
and
outs
lds
adc
mov
dec
cmps
ror
dec
sub
addr16
aad
call
or
test
inc
inc
outs
gs
and
fidivr
arpl
mov
or
push
mov
sbb
push
jg
jl
mov
jl
xchg
lods
ins
data16
scas
xchg
jge
cmp
fdivr
je
es
xor
out
inc
test
movs
push
add
xchg
inc
pop
icebp
push
and
stc
aad
pop
fisttp
sbb
pop
push
pop
cmp
call
mov
mov
pusha
or
lods
lahf
dec
lods
sbb
inc
sub
inc
mov
repz
loope
add
mov
and
inc
inc
push
test
jbe
pop
mov
or
ficomp
xor
push
lds
cld
test
xor
xchg
sub
lahf
lds
jmp
xor
ret
(bad)
add
cmp
push
push
rcl
adc
jecxz
js
in
pop
mov
psrlw
addr16
mov
mov
ret
inc
outs
out
push
dec
pusha
inc
sbb
dec
mov
inc
retf
mov
mov
enter
mov
fcomp
sbb
xor
outs
popa
arpl
not
in
aad
mov
dec
adc
mov
xor
in
add
push
imul
lds
into
ss
xor
out
mov
push
jg
jo
cmp
pusha
xor
sub
push
nop
sahf
std
pop
mov
lock
cmp
mov
jp
lods
push
scas
xchg
pushf
(bad)
dec
clc
fwait
mov
int3
femms
pandn
inc
iret
mov
mov
icebp
daa
mov
(bad)
mov
inc
or
push
inc
push
jne
lahf
rcr
xchg
cs
ds
iret
out
aas
out
test
push
or
or
adc
xor
push
xchg
adc
cdq
outs
call
jp
call
mov
sbb
lds
leave
nop
or
sub
nop
jp
jecxz
cmp
(bad)
xchg
adc
retf
bound
dec
je
ins
int3
mov
pop
sub
sahf
test
pop
mov
mov
or
inc
cmp
mov
or
out
mov
dec
shr
mov
movs
add
and
mov
add
jno
ret
pop
call
dec
retf
push
jne
add
pushf
xor
push
add
popf
xchg
in
ins
pop
pop
sub
sbb
lods
dec
test
pusha
jl
inc
and
enter
cmc
fmul
adc
in
fiadd
mov
aaa
rol
push
(bad)
out
ja
mov
ds
xor
xchg
and
add
xor
pop
into
int
cmp
cmps
xchg
aad
mov
add
xor
ror
ds
and
sahf
retf
out
jbe
leave
out
aam
and
push
sub
jns
mov
add
std
sub
call
fs
sbb
sub
sbb
sub
jmp
gs
fistp
or
mov
push
repnz
icebp
xor
mov
fldcw
add
test
arpl
inc
jb
pop
adc
sbb
push
mov
not
push
xchg
xchg
sub
adc
fcmovnbe
jl
(bad)
shr
ins
jl
aas
(bad)
movs
push
xchg
loope
adc
add
lds
sub
nop
inc
outs
xchg
ror
mov
mov
cwde
clc
push
inc
ret
repnz
shl
sub
and
popa
lds
push
pop
push
sbb
imul
mov
dec
lds
jecxz
pop
jle
aad
(bad)
pop
jmp
jnp
retf
or
xchg
mov
sub
mov
sbb
sbb
mov
mov
cmp
cmp
and
xchg
sub
inc
cwde
or
(bad)
in
(bad)
cmps
and
daa
jnp
in
sbb
cmp
push
in
in
scas
sub
inc
jb
jge
and
adc
mov
cwde
sti
and
mov
lods
add
lahf
fs
cmc
xor
mov
ret
(bad)
pop
jbe
pop
mov
mov
pop
sub
out
(bad)
cmp
pop
call
xchg
(bad)
ja
mov
pop
sub
cmc
icebp
push
sub
sbb
sub
and
aad
dec
push
cmp
pop
or
movs
dec
es
mov
popf
add
xchg
outs
jo
sahf
or
fbstp
mov
rcl
mov
adc
add
sahf
or
sub
popa
(bad)
mov
pop
cmp
cwde
mov
sub
sbb
ror
pop
jle
or
in
mul
mov
dec
fld
sbb
xchg
std
mov
add
dec
popf
retf
in
and
(bad)
aaa
xor
add
sbb
adc
std
jns
ror
cs
push
jb
movs
cmp
test
shr
mov
rcr
sti
or
inc
fs
jp
lods
nop
push
add
jns
mov
icebp
bound
scas
xchg
dec
out
scas
ficom
xchg
bound
(bad)
mov
inc
inc
std
ret
std
sti
pusha
jns
sub
or
cwde
or
cmp
and
mov
jmp
imul
push
stc
adc
in
sti
mov
int3
adc
sub
(bad)
popa
mov
adc
(bad)
fist
push
(bad)
push
(bad)
leave
(bad)
mov
pop
cmps
in
push
movs
add
adc
cmp
push
mov
jb
retf
push
jnp
data16
stos
lock
xchg
xor
adc
in
jge
add
(bad)
sub
push
mov
mov
xor
out
xchg
adc
push
std
jecxz
dec
fld
add
or
jae
repz
pop
jmp
stc
adc
adc
dec
scas
add
std
sets
add
xchg
jmp
push
pop
xchg
push
imul
leave
mov
(bad)
xor
and
hlt
aad
mov
jg
rcr
jbe
inc
dec
xlat
mov
das
inc
sbb
arpl
mov
pop
xchg
push
dec
push
mov
xchg
(bad)
outs
and
sbb
xor
adc
cmp
lods
(bad)
dec
sbb
adc
push
adc
sub
xchg
pop
imul
mov
mov
in
add
push
into
dec
jbe
and
lods
popa
sub
push
jle
pop
and
cli
daa
push
lods
adc
pop
popf
xchg
add
adc
popa
pusha
inc
push
in
jo
xor
or
into
pop
jge
not
fsub
mov
push
pop
mov
fcmovu
or
sti
cmp
push
sub
repnz
call
stos
imul
cmp
or
push
retf
ret
add
cmp
iret
in
fs
jnp
push
adc
ins
test
jb
cmp
adc
mov
cmps
mov
adc
fdivr
lods
call
(bad)
shl
xchg
adc
test
jp
push
sbb
mov
(bad)
jae
fs
(bad)
ret
push
mov
cmp
push
mov
aam
hlt
in
popf
enter
ja
test
sbb
pop
cmp
scas
cmp
pop
scas
adc
icebp
ret
pop
ja
fldenv
(bad)
sub
xchg
inc
inc
cmp
mov
lahf
(bad)
xchg
adc
es
sub
push
inc
fwait
clc
pop
push
mov
jo
ror
imul
out
addr16
jp
lds
jp
jmp
imul
mov
(bad)
sahf
mov
mov
adc
and
xor
repz
jl
scas
imul
jge
mov
daa
aad
inc
sub
gs
xor
xchg
add
aaa
inc
cmp
jl
add
test
push
lds
out
cld
xor
mov
cmps
jns
imul
mov
sub
cmp
(bad)
cmps
hlt
xor
dec
add
hlt
inc
pop
adc
sub
test
in
ins
push
fsubr
jge
xor
jb
movs
push
rcr
cmp
adc
adc
les
cmc
pop
sbb
dec
sbb
or
xchg
pusha
adc
ficom
sahf
fnstsw
retf
adc
inc
cmc
into
movs
pop
lds
mov
sbb
(bad)
mov
cmp
stos
mov
or
outs
jne
pop
loope
icebp
gs
xor
push
leave
das
xor
in
dec
sbb
rol
repnz
xchg
pop
mov
push
rol
fild
and
add
out
(bad)
dec
jmp
mov
jge
jno
xlat
dec
ins
icebp
shr
test
ins
push
(bad)
inc
xchg
push
rol
ret
shl
call
cdq
rcr
xor
aaa
scas
leave
clc
xchg
mov
inc
mov
pushf
and
sub
or
fdiv
fwait
aad
cmp
rcl
movs
push
sbb
xorps
int3
ror
or
out
cmc
sbb
push
mov
inc
adc
push
mov
stc
movs
mov
add
jbe
push
add
dec
fiadd
rol
not
lock
mov
into
popa
and
es
sar
jae
jmp
push
dec
test
mov
stc
dec
stc
jbe
mov
inc
jg
xor
mov
mov
xchg
imul
std
fist
cmp
xlat
mov
push
add
inc
icebp
mov
sar
fld
sub
inc
mov
mov
cmp
test
sbb
test
fimul
xlat
push
add
pop
cmp
clc
dec
scas
pushf
in
mov
add
xchg
lds
mov
test
cmp
sbb
(bad)
out
test
or
mov
loopne
inc
div
cs
movs
xor
inc
adc
int
jge
push
or
push
out
mov
std
sbb
ds
jecxz
shl
push
dec
mul
cs
aam
push
sub
dec
dec
into
sti
mov
into
lea
add
jmp
dec
jecxz
xchg
outs
popa
inc
mov
sbb
jns
stc
out
int
inc
clc
and
popa
outs
mov
or
pop
mov
les
jg
and
rcl
dec
test
push
loop
mov
retf
pop
scas
mov
sbb
xchg
mov
push
and
jbe
jl
retf
dec
ss
sti
inc
xchg
ret
or
imul
pusha
or
mov
and
hlt
cwde
in
xchg
xor
pop
call
sbb
hlt
dec
int3
popf
(bad)
out
push
hlt
xchg
out
lods
adc
dec
mov
enter
leave
xchg
jns
pop
imul
jle
dec
xlat
dec
mov
cli
adc
add
rcl
icebp
test
or
shl
(bad)
aaa
mov
mov
inc
adc
mov
imul
mov
aam
inc
jne
pop
scas
jmp
aas
xchg
fsubrp
fcomp
jno
pushf
call
push
clc
xchg
add
into
adc
fwait
push
call
loop
pop
movs
pop
in
icebp
cmp
gs
mov
in
add
sub
add
jne
retf
cwde
stos
lahf
xor
jmp
ja
cwde
repnz
pushf
std
sbb
fsubr
ret
add
int
ror
add
xor
dec
loope
outs
jecxz
jo
(bad)
(bad)
mov
lahf
push
mov
add
xchg
or
mov
dec
imul
in
dec
pop
push
cld
arpl
add
fdiv
lods
push
std
hlt
loopne
out
mov
sbb
mov
out
mov
(bad)
inc
jne
mov
jo
pop
pop
pop
out
in
cmp
or
cmp
es
lods
(bad)
cdq
pop
aaa
in
stos
fdivr
xlat
sub
push
ds
or
bswap
push
test
sub
mov
sbb
adc
add
push
call
cwde
mov
xor
push
popa
push
call
out
shl
pop
mov
rcr
xchg
jbe
cmps
imul
pop
sbb
dec
xor
inc
loope
xlat
bound
and
dec
cmp
sub
(bad)
mov
mov
stos
sub
pop
fs
xor
fs
fstp
into
pop
mov
mov
push
adc
push
rol
inc
inc
push
cwde
push
push
ret
sbb
sbb
clc
dec
das
mov
adc
xchg
ins
cmp
inc
inc
pop
pop
pop
mov
push
popa
or
or
cmc
pop
movsx
fbld
out
jl
pushf
cmp
jb
cmp
aad
xchg
xor
cmp
scas
adc
repnz
and
and
adc
not
shr
gs
out
mul
stc
inc
aad
retf
cmp
out
xor
fdivr
and
out
add
repz
mov
xor
sub
(bad)
pop
daa
mov
inc
push
sbb
rol
adc
mov
or
scas
scas
pusha
iret
dec
add
leave
dec
cli
scas
push
xchg
and
and
jmp
jmp
in
scas
xor
dec
push
loope
outs
pushf
pop
das
stc
jae
mov
cmp
(bad)
jg
cli
icebp
jno
add
stc
pop
aam
cmps
xchg
iret
inc
arpl
bound
pop
jns
lods
(bad)
es
mov
sbb
pop
fsub
xor
add
movs
gs
aam
mov
enter
inc
dec
movs
push
sbb
mov
jmp
(bad)
mov
and
movs
std
scas
pop
mov
out
ret
pop
jmp
jmp
std
scas
xchg
icebp
icebp
cld
aaa
pusha
mov
push
or
mov
icebp
jnp
xchg
mov
je
lods
xchg
retf
je
aaa
inc
mov
mov
mov
addr16
push
sahf
inc
mov
fmul
cs
out
repz
or
add
and
inc
and
ja
lods
sub
pushf
cwde
mov
and
xchg
(bad)
mov
retf
fisttp
lahf
push
cmp
pop
cs
(bad)
outs
sbb
mov
leave
pushf
jmp
adc
int3
mov
inc
loop
jg
push
push
shr
jne
sub
push
das
jl
ins
pusha
push
or
dec
out
test
sub
and
xchg
cwde
in
sahf
or
jb
imul
lods
or
jnp
dec
(bad)
in
lds
inc
pop
ss
rol
loopne
daa
xor
icebp
push
pop
xchg
sub
push
icebp
imul
mov
stos
mov
adc
dec
and
int
ret
int3
inc
add
xor
fstp
inc
ret
push
movs
adc
cld
in
iret
cmps
(bad)
inc
loopne
pop
cmps
ss
mov
push
lahf
mov
mov
(bad)
out
mov
jl
adc
(bad)
addr16
push
call
pusha
rcr
inc
test
sub
inc
push
push
imul
and
out
cmp
dec
or
mov
and
clc
ins
mov
fistp
push
leave
sub
mov
lahf
xor
test
push
push
mov
test
cmp
cmps
retf
pop
movs
lds
iret
xchg
dec
xor
enter
mov
shl
mov
xchg
cmps
fisubr
int
sbb
int
mov
mov
aaa
sbb
adc
in
popa
xchg
adc
fdiv
and
das
dec
stos
int3
popa
sub
mov
mov
test
mov
ret
test
push
cmp
and
jb
dec
fisubr
aam
sub
out
cld
es
cmp
jae
fwait
and
inc
test
push
ds
in
add
lods
adc
std
stos
data16
enter
mov
pusha
ret
or
(bad)
ins
idiv
lods
push
mov
sub
movs
sub
cmps
(bad)
out
jecxz
movs
mov
movs
callw
call
(bad)
popa
inc
cwde
sub
add
xor
outs
fwait
adc
jbe
inc
pop
jb
mov
push
and
jl
xchg
cmps
dec
push
outs
pop
inc
mov
push
cwde
test
test
sbb
push
adc
sbb
inc
or
in
sub
push
xor
mov
popa
(bad)
sub
mov
push
dec
adc
xlat
xchg
pop
jl
inc
pop
adc
jmp
xor
je
mov
jecxz
mov
call
in
sub
out
pop
hlt
dec
call
mov
mov
aas
loope
icebp
sub
cwde
or
or
sbb
sbb
xor
pop
push
lods
pop
in
jl
dec
clc
jbe
mov
sbb
loopne
pushf
and
lds
imul
mov
push
dec
daa
outs
mov
add
fstp
stos
cld
dec
dec
push
pop
mov
test
test
imul
cld
push
in
jmp
ds
mov
into
dec
sysexit
(bad)
inc
mov
and
loope
call
sti
inc
jns
add
sahf
xchg
lds
nop
add
pop
mov
aas
sbb
push
cld
xchg
fstp
pop
repnz
inc
xchg
xor
cmp
stos
dec
jmp
or
add
or
jl
dec
je
inc
daa
es
(bad)
sbb
push
cwde
inc
mov
call
mov
cld
mov
idiv
and
mov
fld
xchg
scas
(bad)
lds
dec
mov
ret
fdiv
js
gs
jns
std
or
scas
sti
cmps
xor
repnz
jmp
sbb
pusha
arpl
fisub
inc
(bad)
mov
(bad)
lea
xchg
leave
in
repnz
rcl
stc
inc
jmp
xor
jl
jmp
xor
(bad)
test
xchg
das
and
cld
push
in
jns
mov
push
xlat
add
loop
std
cmp
bound
cmp
push
outs
and
adc
jo
mov
mov
movs
push
cmp
xor
dec
inc
lods
fdivr
(bad)
xchg
aad
pavgw
xchg
pop
jne
jbe
enter
pop
mov
mov
mov
jle
movs
aad
fst
ja
inc
fst
stc
in
data16
inc
fwait
sbb
sub
sti
sub
addr16
cwde
dec
repz
leave
mov
sbb
pop
call
add
jae
ins
ja
cmp
pop
pop
pop
js
jl
xchg
xor
out
pop
jnp
add
adc
lock
cmc
ss
dec
cmc
cmps
das
sub
adc
pushw
pusha
sub
lea
jnp
scas
imul
mov
std
shr
xor
iret
sub
and
mov
push
mov
add
retf
xchg
jbe
push
adc
pop
mov
push
shl
xchg
imul
push
into
mov
or
xchg
push
pop
mov
mov
cdq
mov
outs
mov
hlt
out
sub
ins
fnsave
mov
int
clc
out
or
scas
xor
popf
sbb
test
sbb
aaa
test
mov
pop
daa
loope
into
in
mov
ds
jg
cld
inc
xlat
std
mov
sub
xor
cli
mov
sub
mov
les
imul
push
outs
addr16
mov
test
call
xchg
jnp
xchg
pusha
(bad)
inc
mov
or
or
movs
push
xchg
mov
imul
cmp
mov
inc
stos
push
xchg
mov
dec
inc
push
xchg
dec
jne
sub
jnp
fisub
xchg
mov
mov
iret
mov
in
call
jb
and
les
retf
sub
or
int3
jne
rcr
dec
cmp
pop
out
data16
test
sub
add
mov
nop
and
(bad)
or
and
mov
push
ret
and
xchg
mov
sub
jae
lods
xchg
mov
shl
inc
dec
pop
mov
add
cmps
pop
pop
xor
inc
and
pop
js
cmp
fidiv
outs
cwde
fcmovne
arpl
push
or
cmp
xchg
and
or
push
sbb
ja
test
xor
xchg
aad
push
cmp
adc
daa
mov
jns
adc
adc
dec
lds
je
xchg
inc
imul
dec
aas
mov
cdq
cmp
outs
ja
fisub
fidivr
adc
test
jns
jns
sbb
or
loopne
cmp
mov
aas
ret
pushf
loop
mov
aas
mov
fldcw
mov
ss
pop
xor
adc
push
add
push
int3
inc
inc
in
sahf
or
imul
and
or
inc
and
int
cmps
jp
out
xchg
in
les
mov
mov
movs
inc
push
cmp
inc
sahf
adc
iret
(bad)
popa
adc
dec
pop
jb
sti
jae
bound
adc
iret
sbb
retf
dec
lods
or
jecxz
and
push
pop
lock
out
pop
imul
ret
xchg
scas
pop
mov
lds
imul
fcom
lea
call
xor
mov
ds
jp
or
sub
pop
aas
and
dec
fimul
loop
pop
jae
cmp
mov
and
call
push
or
cmp
inc
mov
fmul
mov
inc
dec
add
jne
and
ficom
pop
retf
and
retf
imul
out
cmp
jle
push
sub
xchg
lods
cmp
jno
pop
lods
and
push
dec
cld
adc
pop
or
jl
sub
rcr
(bad)
sbb
add
dec
cld
sub
dec
mov
inc
out
jl
rcr
xchg
jmp
daa
ret
mov
loop
push
pop
jmp
pop
cmps
push
fild
cld
xchg
retf
popf
dec
mov
dec
repz
scas
pop
fwait
cmp
jp
lahf
lea
mov
push
jns
jle
sub
cmp
jbe
and
bound
pop
sbb
push
iret
adc
pushf
leave
mov
jno
lods
call
xor
jp
movs
mov
lds
mov
jnp
push
inc
retf
fisttp
icebp
add
call
push
cmp
mov
and
rcr
sbb
push
cmp
movs
sar
popa
jbe
test
aaa
add
cmp
lahf
push
mov
xchg
sub
retf
push
mov
pushf
sbb
pop
dec
jne
xlat
sub
jecxz
and
sub
jns
ret
push
int3
loope
dec
call
outs
sbb
sub
lds
in
iret
and
xchg
and
fisttp
scas
dec
fisubr
(bad)
std
mov
imul
outs
(bad)
ss
fcomp
inc
mov
movs
ja
push
das
pop
test
mov
in
test
xor
xor
aad
aaa
sbb
std
cmp
sbb
fwait
rcl
lods
inc
mov
mov
push
daa
cmc
sub
sub
(bad)
mov
je
shl
out
mov
mov
into
cwde
xchg
pop
jg
sub
cmps
push
xor
test
sub
dec
rcl
scas
call
dec
pop
repnz
popf
test
les
mov
in
cld
mov
pop
or
es
test
loop
add
push
jecxz
jge
add
cmps
push
inc
and
jbe
icebp
imul
push
int
scas
fidivr
outs
xchg
sbb
adc
rol
add
and
lea
pop
sbb
lock
stc
or
(bad)
loope
inc
loopne
jmp
push
or
in
sar
addr16
mov
test
push
in
add
fbstp
shr
call
mov
dec
lods
xchg
xor
jg
push
cmps
xchg
mov
ja
push
in
xchg
push
outs
pop
xchg
aas
xor
or
inc
fisub
ss
pushf
mov
lods
add
ficomp
in
(bad)
cwde
push
jp
jb
cmp
std
sahf
mov
xor
and
mov
ins
sbb
and
sti
jmp
div
leave
mov
inc
dec
aas
inc
inc
push
test
fistp
sub
mov
jbe
out
add
cdq
fwait
or
in
or
xlat
dec
in
push
cmp
add
out
push
cmp
movs
imul
add
mov
fnstenv
add
push
jp
mov
mov
pop
pop
dec
lods
adc
(bad)
in
fs
out
pop
push
pop
(bad)
aas
in
adc
mov
sub
ins
data16
in
lods
jo
xor
and
test
jge
into
mov
jbe
cs
stos
jno
xchg
sbb
mov
scas
and
sar
scas
int3
movs
scas
(bad)
repnz
dec
xor
pop
or
mov
push
add
ja
adc
pop
nop
ds
push
(bad)
jmp
push
and
jns
cs
mov
add
inc
xchg
mov
out
inc
sbb
push
cmps
call
pop
das
test
push
push
(bad)
jbe
popf
aaa
pop
std
push
and
jne
(bad)
fcom
and
xchg
ret
ret
sbb
mov
in
inc
fcom
push
mov
popa
(bad)
aad
imul
lods
enter
mov
fimul
jmp
pushf
out
sub
jmp
scas
outs
cmp
ret
or
sbb
clc
pushf
and
push
xchg
and
test
push
adc
sbb
imul
lods
fsub
mov
lds
fsub
idiv
das
inc
jge
out
xchg
mov
jbe
fmul
das
mov
mov
add
add
aaa
pop
sbb
scas
test
xchg
cmps
cmp
xchg
pop
sbb
mov
cmp
mov
add
jecxz
dec
adc
imul
sub
adc
push
shl
inc
mov
lea
xchg
sub
cld
lock
imul
out
in
mov
mov
inc
lods
add
pop
loop
or
std
jl
cmps
test
in
pop
add
mov
and
xchg
sbb
jg
movs
in
icebp
ja
push
out
adc
cmc
push
push
movs
and
js
sti
jle
fisubr
mov
mov
and
pop
jmp
retf
(bad)
dec
sub
icebp
push
(bad)
cmp
stc
xchg
or
mov
or
ds
sbb
mov
inc
ins
test
mov
mov
lds
inc
hlt
test
outs
xchg
in
inc
out
imul
iret
pushf
sbb
lods
in
shl
leave
jmp
xor
lods
jle
(bad)
sti
into
dec
imul
arpl
out
adc
xchg
fsub
(bad)
dec
shl
xchg
pop
or
pushf
pop
jae
aas
inc
jmp
cmp
rol
into
fidiv
fcomi
popf
test
into
or
or
dec
int
jp
xor
dec
inc
adc
inc
idiv
lods
sar
inc
adc
cmp
ins
and
cs
mov
test
or
aaa
movs
jo
jb
out
(bad)
fstp
mov
stc
xchg
cmp
les
push
into
mov
and
arpl
push
jns
ds
cli
and
or
inc
pop
rcl
stos
(bad)
aaa
dec
push
call
pop
mov
and
mov
(bad)
loop
add
ret
fidivr
add
push
xchg
sar
call
fisubr
into
pusha
push
stos
inc
push
pusha
mov
push
imul
xchg
add
(bad)
sbb
out
imul
sahf
les
call
xchg
dec
cmp
push
sub
inc
ss
sahf
push
mov
in
jmp
popa
mul
sbb
cld
mov
jne
dec
inc
mov
ja
mov
inc
fcomp
sbb
fimul
pop
dec
jp
push
adc
rol
mov
sbb
lea
repnz
aaa
mov
ds
push
mov
(bad)
mov
ror
rcr
stos
ffreep
pop
lahf
stos
aas
pop
enter
test
adc
test
test
sub
mov
imul
test
and
ror
sbb
push
popa
pop
inc
sbb
out
test
mov
cdq
cmp
xor
sbb
ds
mul
out
xchg
inc
push
jbe
xchg
push
xchg
popa
test
cmc
push
rcl
in
(bad)
repz
cli
jb
sti
jmp
jle
xchg
jnp
pop
jecxz
inc
push
outs
adc
jbe
test
jo
mov
and
je
(bad)
scas
(bad)
inc
in
je
rcl
inc
js
or
xchg
pop
xchg
jle
or
test
xor
cmp
jbe
push
ret
lahf
xor
daa
add
xchg
mov
pop
push
popf
mov
push
or
(bad)
jnp
js
jmp
out
jp
sub
add
mov
or
xor
pop
jecxz
fbld
std
add
test
cmp
mov
mov
pop
ficomp
or
ret
push
pop
dec
out
cdq
ins
neg
xchg
mov
movs
nop
inc
cmps
sub
call
push
nop
xchg
mov
sub
ds
dec
pusha
mov
pop
ret
sub
dec
lahf
and
neg
push
rol
out
xchg
vxorpd
iret
scas
push
mov
push
inc
ret
aam
xchg
movs
mov
sub
mov
push
inc
mov
js
push
addr16
shl
pop
or
out
fisubr
jge
imul
jns
push
jae
dec
out
inc
mov
lods
pop
pop
mov
xor
sub
fsubr
add
sbb
ins
mov
push
mov
inc
or
rcl
and
test
pop
(bad)
mov
not
add
xchg
and
clc
pop
jmp
daa
add
mov
adc
inc
lds
sahf
shl
and
push
xchg
inc
sti
jae
and
jle
cmp
cmp
or
mul
sub
mov
out
icebp
test
bound
jb
mov
push
stos
int3
sub
enter
jg
aas
dec
aaa
mov
rcl
sub
pop
adc
fwait
scas
jle
sbb
cwde
sub
pushf
and
enter
aam
inc
pop
mov
in
jmp
jnp
(bad)
mov
les
jb
or
push
sbb
sub
test
jmp
sti
push
rol
imul
mov
pop
cs
adc
xlat
add
mov
pop
jmp
push
(bad)
leave
cld
mov
and
cmp
and
xor
test
iret
jno
push
inc
gs
jne
out
mov
mov
in
mov
icebp
mov
test
jns
pop
jbe
xchg
test
jae
jg
inc
clc
(bad)
leave
call
mov
push
imul
rol
or
jmp
std
inc
aas
jmp
mov
imul
pop
jo
call
pop
mov
lds
cmp
fsubrp
inc
jno
test
jo
or
dec
arpl
jp
loopne
mov
jecxz
cmp
(bad)
adc
sbb
sbb
jo
pop
gs
sub
loopne
les
(bad)
in
sub
dec
pop
in
mov
mov
pop
adc
sub
xchg
test
mov
(bad)
jmp
xchg
xchg
(bad)
ror
sbb
adc
retf
std
loopne
test
test
fld
sub
mov
int3
dec
pop
call
sti
adc
add
pop
add
and
sbb
dec
nop
dec
pop
repnz
iret
mov
(bad)
push
retf
fidiv
cmp
pop
leave
hlt
mov
ins
xchg
dec
xor
mov
test
sub
loope
fwait
mov
xchg
push
repnz
imul
retf
rcr
add
or
repnz
xor
xor
xor
sub
cmp
adc
stc
loop
ds
or
inc
int
xor
jmp
fwait
and
mov
sbb
push
sbb
adc
test
cmp
or
sahf
in
adc
lods
mov
ins
enter
mov
lock
pop
pushf
xlat
(bad)
les
out
cmp
mov
fwait
pop
kmovb
inc
inc
inc
les
std
fstp
sti
inc
xor
lock
pop
fidiv
inc
jp
ret
jge
lahf
(bad)
in
outs
popf
mov
popf
fild
push
out
fstp
mov
xchg
and
xor
movs
shl
repnz
mov
aam
ret
inc
hlt
aas
lds
xor
cwde
je
dec
sti
xchg
mov
clc
imul
arpl
mov
shl
or
push
sbb
outs
enter
add
add
rcr
push
push
adc
push
push
fisub
or
mov
test
adc
jbe
xor
push
fmul
in
loope
push
xchg
cmps
std
jns
dec
mov
push
adc
call
cmp
push
lock
lods
pusha
in
test
push
nop
jg
sbb
jmp
dec
into
pop
sub
aaa
or
bound
cli
jp
js
jecxz
sub
mov
cld
inc
scas
xor
sub
cmps
lahf
and
cmp
fisttp
pop
or
cmp
fisub
lods
clc
push
lods
dec
int3
push
jo
pop
jl
mov
in
push
and
enter
stc
sub
inc
sbb
xor
movs
add
mov
aam
adc
pushf
or
cli
inc
xchg
and
fcmovb
cmp
popf
xchg
stos
scas
adc
in
inc
stc
repz
mov
(bad)
(bad)
lea
or
or
out
inc
or
aam
and
sbb
pop
cmps
daa
icebp
lea
or
idiv
jecxz
ss
imul
inc
and
cmp
popa
or
lahf
push
sahf
cmp
ins
sbb
mov
fdiv
mov
js
mov
or
push
and
adc
lahf
sub
stos
jle
adc
push
fdiv
hlt
adc
pop
inc
pop
cld
mov
out
movs
dec
popf
int
ret
pop
jne
sbb
gs
pmaxub
xor
test
push
fistp
cmps
or
pushf
pop
push
jo
test
lds
fst
into
stos
and
das
xlat
jle
cwde
out
test
shr
ds
adc
in
ror
mov
xchg
push
dec
pop
repz
fnsave
daa
aas
(bad)
fwait
xor
mov
cvttps2pi
pop
mov
jb
in
ins
je
push
lea
icebp
nop
pop
leave
rcl
(bad)
jns
sub
add
mov
mov
repz
scas
and
and
inc
cdq
std
movs
adc
mov
xor
jmp
in
imul
mov
sar
cmc
stos
pop
sub
(bad)
int3
call
test
push
repz
pop
and
clc
adc
cli
mov
adc
shl
outs
inc
push
cmp
jmp
push
push
lds
aaa
cmc
or
stos
jmp
mov
loop
ins
xchg
cdq
leave
test
pop
cmp
push
scas
mov
add
jp
jne
int
(bad)
aaa
jp
cmp
mov
les
jno
test
scas
ret
ret
aaa
jae
jo
loopne
jo
lods
mov
(bad)
or
sbb
pop
retfw
or
shl
xor
xor
int
mov
test
std
ins
add
and
push
imul
js
(bad)
push
add
push
pop
data16
xor
and
stc
ror
mov
repz
test
mov
inc
pop
or
ds
sub
fisub
inc
cmp
jo
in
or
call
stos
jecxz
jg
aad
les
push
pop
or
jns
or
fild
add
jp
add
cwde
xor
fcomp
push
mov
fadd
out
shl
push
adc
cmp
push
clc
pushf
stos
cli
push
aad
sub
cmc
ins
and
and
sub
das
inc
and
enter
pop
mov
cld
cwde
inc
retf
(bad)
pushf
cmp
gs
je
(bad)
retf
fdiv
icebp
mov
sahf
dec
mov
mov
int3
push
mov
sar
cmp
xlat
push
pop
jecxz
xchg
sbb
imul
fucom
push
and
(bad)
adc
cmp
test
add
cld
jno
jmp
std
xor
mov
add
mov
and
add
mov
test
es
jbe
push
stc
jecxz
pop
and
iret
addr16
les
hlt
popf
(bad)
cmc
cwde
sub
pushf
popf
and
mov
jecxz
pop
sahf
(bad)
test
push
cmp
mov
fs
push
xchg
out
repz
sbb
pop
in
mov
mov
mov
out
js
cmp
hlt
xor
sbb
aas
pop
pop
pop
and
mov
test
or
cli
rcr
in
push
adc
pop
or
or
loope
imul
inc
pop
outs
loop
(bad)
in
mov
lea
xchg
mov
or
inc
mov
and
loop
ficomp
jb
stos
loope
jb
add
or
cmc
mov
std
rcl
adc
xchg
dec
sub
add
outs
div
test
pop
sbb
mov
pop
xlat
shl
sbb
test
adc
movs
cmp
pusha
dec
mov
rcl
mov
ficomp
stos
out
int3
daa
xchg
sbb
int3
or
or
rcr
popa
pop
mov
in
ins
inc
rcr
jb
add
(bad)
mov
mov
inc
sub
add
retf
das
pusha
and
popf
mov
rol
pop
aaa
ja
das
push
push
cdq
and
push
xor
xchg
pushw
mov
adc
xchg
mov
xor
and
push
jbe
dec
out
(bad)
push
cwde
xlat
inc
jnp
test
mov
inc
add
push
jae
cs
ret
and
pop
adc
mov
push
adc
in
cmps
dec
imul
xlat
lock
cmps
add
fs
mov
sbb
pushf
mov
push
pop
dec
cmp
push
and
into
cdq
inc
dec
sbb
fild
out
enter
cmps
mov
or
shl
push
push
mov
neg
xor
jb
xchg
movs
popf
mov
or
mov
dec
jbe
scas
sbb
ins
outs
cmc
lods
and
daa
or
push
jb
push
mov
mov
ins
mov
push
xor
sbb
mov
cmp
mov
call
sub
xor
or
mov
daa
nop
jp
cmp
mov
cmp
push
mov
adc
lea
jmp
xor
dec
cmp
pop
int
addr16
pop
push
pushf
mov
movs
jb
push
(bad)
cmp
lods
outs
sar
jno
addr16
dec
mov
out
nop
xor
scas
imul
lods
fadd
(bad)
loop
sbb
pushf
cmp
fwait
pushf
cmps
jmp
je
sub
retf
jno
lea
push
aam
push
pop
stos
push
lods
(bad)
mov
in
sti
outs
xor
lock
addr16
movs
scas
fstp
sub
into
(bad)
leave
lock
inc
jmp
mov
or
cwde
add
jnp
mov
xchg
shl
cmps
(bad)
pop
retf
ins
lods
pop
pop
adc
(bad)
jno
cli
fild
xlat
fstp
push
(bad)
pop
pop
addr16
jae
mov
ins
ror
fwait
movs
xor
inc
test
and
sbb
div
popf
sbb
mul
and
mov
inc
lea
(bad)
pop
jle
or
pop
jo
jo
add
(bad)
loope
cld
add
inc
out
dec
mov
mov
out
cwde
aam
loopne
movs
fisttp
add
mov
cs
fimul
or
pop
inc
xchg
mov
iret
icebp
cld
sbb
dec
sbb
adc
jb
dec
jg
sub
ins
push
push
xor
xor
adc
fld
cmp
fistp
sub
fsub
sub
sahf
cmova
push
imul
xchg
aaa
jge
sub
mov
lds
inc
cld
int3
ret
jecxz
std
and
mov
xchg
add
mov
imul
call
ficomp
add
scas
dec
inc
in
shl
pop
jle
out
rcr
test
xor
aaa
ins
aaa
sbb
dec
jno
cmp
imul
jo
mov
ror
iret
adc
aam
jmp
test
add
xor
xchg
test
shl
xchg
and
enter
or
lock
pushf
sbb
div
add
or
mov
sub
sbb
xlat
add
aaa
imul
(bad)
pop
mov
retf
add
int
push
into
mov
add
stc
popf
es
xor
sub
int3
lods
dec
movs
imul
cmp
out
pcmpeqw
xlat
js
fdivr
int3
mov
(bad)
sbb
add
test
mov
out
xor
xor
outs
pop
fiadd
clc
pop
inc
dec
sub
retf
or
sub
sbb
psrlq
test
iret
mov
pop
or
xor
shr
adc
push
add
adc
push
sbb
push
xor
jl
lahf
sbb
and
pop
jno
push
ja
fnstenv
div
fwait
scas
inc
sub
daa
push
iret
cmp
pop
jmp
dec
mov
fisubr
dec
test
outs
in
xor
fs
bound
ret
lock
add
sub
bound
sbb
mov
stc
xchg
mov
daa
daa
jo
cmp
xor
mov
push
jmp
xor
(bad)
xlat
and
mov
fstp
(bad)
push
jp
cwde
sbb
mov
out
imul
mov
dec
push
(bad)
mov
rcr
pop
jno
iret
sbb
pop
adc
fbstp
jp
inc
xchg
sub
and
sub
cdq
and
xor
mov
dec
xor
sbb
sub
or
xchg
push
repnz
outs
add
push
mov
js
jecxz
sbb
aad
cmps
jp
sti
xchg
js
inc
movs
pusha
inc
bound
fidiv
ja
test
inc
or
arpl
pop
fstp
sub
loopne
in
pusha
fiadd
(bad)
and
mov
dec
push
inc
sbb
add
cwde
jo
daa
xor
push
icebp
fldenv
scas
ja
dec
adc
pop
cs
(bad)
mov
inc
(bad)
xchg
popa
dec
je
xor
cmp
es
(bad)
out
sbb
push
adc
mov
(bad)
(bad)
jns
scas
jmp
xchg
ins
int3
or
je
cwde
dec
sar
mov
sub
test
or
and
mov
mov
(bad)
jl
pop
ror
call
lahf
ins
mov
test
js
out
ins
pusha
pop
pop
xor
addr16
jp
sahf
mov
fnstcw
pop
cwde
stos
in
jnp
cli
mov
or
lds
push
sub
pop
in
sub
test
nop
dec
mov
sbb
fwait
or
pushf
pop
and
mov
push
adc
mov
into
xchg
dec
mov
push
lock
into
(bad)
jmp
fnsave
push
jns
int
dec
and
xor
mov
pop
(bad)
jp
aam
mov
popa
jo
mov
into
(bad)
(bad)
shr
loop
and
sar
rcl
jmp
sar
idiv
add
or
fist
test
inc
(bad)
mov
ins
es
je
(bad)
leave
jbe
stc
arpl
adc
das
mov
inc
aam
jmp
push
out
mov
test
call
mov
mov
add
mov
jmp
sbb
sub
adc
mov
mov
(bad)
push
mov
inc
fistp
retf
call
ins
xor
sbb
ins
mov
out
push
cmp
xchg
sbb
int3
inc
push
pop
mov
sbb
mov
ja
imul
cmc
out
cmps
jmp
fmul
sub
inc
add
mov
sub
movs
ret
dec
dec
cmp
xor
inc
lock
add
std
sti
cmps
fwait
or
sbb
test
or
push
push
dec
fsubr
xchg
fbld
inc
xor
sub
fldcw
sbb
mov
add
cmp
jo
xchg
xor
(bad)
dec
out
ins
movs
or
das
arpl
mov
(bad)
mov
cmp
hlt
test
cmp
dec
pop
mov
iret
push
test
pop
cwde
and
jmp
arpl
xchg
fsubr
cs
(bad)
mov
jecxz
lods
dec
out
cmp
pop
lea
jnp
ror
adc
fs
inc
call
ss
call
mov
fsubrp
jl
dec
js
and
mov
or
or
cmp
mov
sbb
test
repz
cli
in
mov
call
in
outs
dec
sub
push
js
mov
and
mov
and
lahf
sub
retf
cmps
jo
in
nop
mov
mov
lock
lahf
fistp
lsl
(bad)
cs
in
inc
jp
or
and
pop
pop
(bad)
in
sbb
fisttp
push
repz
inc
aad
js
and
scas
and
(bad)
pushf
mov
in
push
xchg
shl
mov
retf
or
movs
mov
cmc
scas
ficom
sar
jo
mov
push
jae
inc
mov
or
scas
jno
leave
outs
push
pop
bound
jae
sbb
jmp
enter
hlt
add
sub
ja
sub
rcr
jp
(bad)
pop
idiv
daa
int3
sahf
ins
mov
(bad)
jns
jecxz
scas
sbb
pop
mov
out
dec
jae
jle
xor
ja
aam
inc
xchg
adc
pop
fimul
or
sahf
or
cmp
add
arpl
int3
fbstp
sub
jl
add
leave
xchg
push
jge
out
xlat
retf
push
push
sub
cmps
jp
outs
sbb
mov
lods
aaa
retf
sar
mov
mov
mov
repnz
imul
(bad)
aas
pushw
sbb
xor
rol
jmp
mov
add
(bad)
pop
dec
cs
inc
cmp
mov
pop
xchg
arpl
mov
scas
inc
and
fwait
jp
lea
popf
and
xor
xor
ret
inc
hlt
jnp
xchg
cli
push
cli
jns
cmps
xchg
(bad)
mov
mov
and
ret
hlt
enter
mov
test
mov
or
ret
shl
rcl
cmp
sbb
push
idiv
push
push
xchg
xchg
xchg
or
adc
adc
das
xchg
test
mov
gs
fwait
lods
jno
push
cmps
mov
rcr
cmps
fcmovne
test
jns
cld
add
rcr
push
lods
fcom
jbe
pusha
fadd
neg
mov
mov
adc
out
or
or
xor
gs
pop
and
push
pop
loop
sbb
ja
test
outs
fdiv
lods
inc
dec
js
repz
add
jge
xor
dec
cmp
mov
push
mov
popa
mov
mov
movs
or
xchg
pop
xchg
cmps
mov
mov
adc
rcl
cmp
cmp
mov
push
rcr
and
jmp
mov
scas
neg
loope
rcr
in
pop
mov
rcr
mov
mov
sub
jb
mov
mov
mov
dec
test
xor
test
loopne
push
sbb
jecxz
add
mov
jo
push
or
sbb
pop
das
xor
jne
jle
retf
cwde
xchg
xchg
inc
dec
sbb
and
pop
xor
das
and
inc
inc
cli
loope
repz
or
mov
pop
(bad)
int
iret
cmp
cmps
xchg
dec
push
jl
push
or
adc
repnz
adc
jo
pop
ds
xchg
retf
repnz
and
dec
fs
ja
jbe
les
neg
mov
aad
cmp
shr
clc
aam
std
push
inc
mov
mov
call
push
xchg
cmp
lds
sar
pusha
mov
pop
je
addr16
popa
mov
pop
icebp
and
aaa
mov
iret
push
(bad)
cmp
rcr
or
cmps
dec
adc
fmul
push
shr
mov
jmp
cmp
andnps
(bad)
cmp
xor
and
stos
outs
movs
xchg
mov
mov
stos
dec
mov
xchg
test
out
sbb
inc
xchg
test
hlt
xchg
nop
test
fwait
repnz
lods
dec
mov
jae
xchg
sbb
sub
rcr
jne
loop
rcl
in
mov
cmps
scas
sbb
xor
adc
mov
into
call
mov
pop
clc
jle
shr
sbb
add
aas
daa
push
sbb
enter
clc
cmc
cld
retf
fild
les
mov
dec
dec
jge
mov
xor
mov
pushf
mov
add
adc
add
dec
jecxz
xchg
push
inc
pop
cmp
ss
jmp
xchg
and
mov
and
test
cli
xlat
(bad)
add
sahf
iret
jl
movs
inc
sbb
lods
cmp
or
push
xor
fst
cwde
stc
and
mov
push
and
popf
dec
stc
jbe
dec
inc
jl
inc
scas
cmp
test
inc
push
cmps
fnstsw
test
sub
(bad)
repz
jmp
and
pop
push
(bad)
sub
loop
mov
mov
dec
adc
mov
cmc
jecxz
push
call
add
jno
enter
mov
xchg
in
mov
pop
(bad)
ss
enter
es
mov
sub
lods
out
push
sahf
in
inc
fcmovu
enter
(bad)
sti
mov
nop
scas
adc
xor
fcomi
pop
pop
movs
cs
push
aaa
inc
cmp
(bad)
sti
pop
repz
iret
xlat
test
jno
ficom
push
shl
sbb
in
aas
jle
sahf
pushf
adc
inc
cdq
mov
addr16
xchg
add
and
and
push
sbb
push
mov
add
mov
ficom
xchg
sub
stos
mov
fdiv
lahf
and
imul
mov
adc
test
out
dec
fdivrp
or
mov
addr16
std
test
push
mov
push
push
sahf
inc
das
push
fs
sbb
and
mov
mov
jae
idiv
int3
mov
into
in
ror
xchg
ret
ret
sbb
jns
nop
sub
stos
test
retf
adc
test
or
inc
fs
inc
cmps
into
xchg
push
das
icebp
cmp
lds
rol
lods
sub
pushf
ret
addr16
and
sbb
dec
xor
jns
rcr
or
or
mov
cmp
xor
int3
call
xchg
(bad)
sub
call
jmp
pop
in
lods
call
nop
out
sub
jbe
in
pop
lods
mov
or
xor
push
dec
mov
popf
int
cmp
push
cdq
mov
or
std
adc
in
sti
call
fsub
pop
xchg
jne
ins
iret
repz
int3
jg
mov
sbb
test
inc
fimul
test
cmc
sbb
or
jle
sub
stc
push
xchg
adc
aaa
add
xor
stc
ror
test
into
in
arpl
or
call
cwde
xchg
cmc
jmp
or
push
sar
or
out
inc
sahf
adc
cmp
fsubr
unpckhps
dec
cmp
cs
cmc
es
call
xchg
test
cmp
mov
dec
jle
jbe
lods
pop
mov
(bad)
xchg
call
add
add
or
adc
pop
(bad)
fcomp
or
int
loop
pop
sub
and
mov
sti
imul
sahf
arpl
mov
sub
gs
inc
aad
xor
cli
jp
out
xor
jb
nop
aam
mov
xchg
lds
outs
sti
cmp
cmp
and
pop
cmp
mov
loopne
jecxz
add
push
sbb
xchg
and
(bad)
sub
imul
xchg
inc
stc
lock
mov
dec
jg
pop
aam
daa
rcr
lahf
or
cmps
or
pop
mov
cdq
push
outs
clc
mov
push
or
out
mov
cmc
inc
clc
push
sahf
mov
push
sbb
jnp
sub
pushf
pop
or
cmp
add
ins
add
and
clc
stos
jns
lods
mov
enter
pop
(bad)
fdiv
lods
test
dec
div
cmp
xor
stos
mov
lock
or
sub
xor
or
sub
(bad)
fst
push
sbb
retf
dec
or
cmps
xchg
(bad)
mov
cld
lea
mov
pop
cmps
pop
mov
mov
sbb
imul
xchg
popa
mov
and
jno
dec
data16
jb
and
dec
mov
xchg
ins
ror
mov
cmp
movs
popf
mov
(bad)
and
mov
pop
fdiv
stos
cmp
inc
inc
mov
and
mov
mov
inc
adc
mov
mov
xchg
fld
dec
in
push
xchg
test
add
enter
xor
aam
and
std
pop
pop
(bad)
fcomi
addr16
and
arpl
sbb
outs
ins
push
ja
cli
fsubrp
mov
jl
inc
and
xchg
dec
adc
dec
push
cld
inc
or
mov
add
lock
mov
jo
js
repnz
enter
test
pusha
outs
mul
stos
dec
cmps
add
fild
mov
pop
dec
mov
adc
gs
imul
and
sbb
xlat
cdq
push
add
repz
cld
mov
mov
lds
cli
add
mov
jo
sahf
out
cmps
pop
mov
and
pusha
loopne
xlat
push
ins
or
aad
jmp
fstp
sar
ret
xchg
fisttp
adc
pop
add
mov
inc
xchg
cmp
stos
sub
test
popa
jb
pop
js
xchg
push
ins
and
adc
dec
mov
xor
sub
outs
int
sbb
dec
hlt
add
jg
js
fistp
aam
sub
sahf
test
into
mov
xor
and
(bad)
int
aas
fnstsw
fisubr
test
pop
fild
xchg
clc
mov
cmp
push
push
adc
cmp
out
mov
pop
pop
xor
ret
mov
dec
test
or
lods
adc
mov
and
movs
jne
mov
out
xchg
ja
pop
cmp
mov
inc
or
mov
cmp
xor
sub
and
loope
bound
sub
popf
jae
mov
(bad)
xor
int3
push
mov
out
and
das
pop
dec
popf
(bad)
cli
jl
jae
pop
push
adc
outs
std
gs
add
dec
push
xchg
inc
pop
out
cmp
int
add
jmp
pop
cwde
iret
inc
sub
xchg
jnp
aas
ja
stos
cmc
adc
pop
mov
int
js
adc
sbb
mov
adc
std
lahf
retf
pop
xchg
adc
adc
mov
xor
pop
push
sar
hlt
mov
mov
(bad)
pop
mov
adc
mov
out
jnp
adc
sub
mov
inc
cmps
idiv
xor
jl
fld
mov
rcl
add
call
add
call
das
jle
pop
and
cld
or
dec
cld
outs
mov
dec
adc
cmp
jecxz
std
inc
add
xor
jae
(bad)
jb
sbb
cmp
fbld
fsubr
xchg
add
lds
jle
call
cli
mov
mov
movq
cmc
cmps
jg
repz
push
mov
scas
add
mov
or
fld
imul
popf
dec
inc
push
sub
ficom
loop
jecxz
lea
outs
xchg
cmc
imul
iret
or
(bad)
out
cmp
lods
lods
sub
inc
mov
and
inc
xchg
cli
lahf
jge
int
into
(bad)
jno
and
enter
aas
push
es
idiv
mov
add
jmp
dec
or
cld
sar
push
push
ds
lods
popf
jbe
imul
jle
mov
xor
(bad)
xor
addr16
jne
ja
test
lahf
shr
data16
and
outs
stos
packuswb
lock
into
dec
dec
push
sbb
jp
test
push
into
sahf
push
add
aaa
or
and
stos
and
jle
xchg
mov
repz
sub
pusha
arpl
invd
xor
dec
movs
fs
xchg
and
push
sahf
pop
dec
scas
ins
lea
pop
shr
mov
int3
jl
sbb
push
test
xchg
add
(bad)
sub
jb
xlat
pusha
xchg
mov
cmp
xor
add
xor
adc
je
inc
add
sar
in
mov
xor
les
pusha
pop
mov
imul
outs
es
fdivr
sub
loop
sbb
(bad)
jmp
mov
jo
test
or
xor
dec
out
lods
inc
fsub
lds
jmp
mov
mov
clc
and
iret
out
mov
mov
popa
scas
mov
xor
push
jne
repnz
dec
loop
mov
pop
xchg
lods
and
adc
push
cmp
jmp
adc
xor
xchg
out
inc
ins
mov
xlat
ret
icebp
stc
jg
jnp
mov
mov
loop
mov
xchg
push
jmp
rcl
dec
shl
sbb
lods
xchg
cmps
pop
inc
xor
mov
xchg
sub
(bad)
in
(bad)
daa
call
imul
lods
cmps
and
jns
in
mov
xchg
xchg
mov
retf
loop
xor
out
fild
ror
and
mov
sbb
mov
mov
fst
cdq
clc
sbb
jne
rcl
aad
(bad)
jne
in
mov
jmp
rol
mov
pushf
call
inc
popa
sbb
lock
adc
std
mov
mov
(bad)
neg
lahf
xchg
mov
lahf
test
in
dec
inc
fcom
xchg
or
mov
pop
lods
dec
js
xchg
fucomi
mov
lods
in
(bad)
fisub
push
push
loop
ret
jno
in
in
(bad)
std
(bad)
mov
mov
sahf
sub
cmp
or
sbb
repz
cs
inc
ficomp
and
(bad)
jmp
jns
dec
loop
and
lods
and
dec
jnp
inc
sub
retf
lds
cli
test
hlt
je
in
pop
jo
push
dec
loop
cmp
jno
repz
popa
neg
sub
cmps
xor
inc
(bad)
pop
pop
jno
push
mov
mov
mov
out
std
sub
pop
test
das
fimul
or
adc
sub
call
js
fdiv
add
movs
call
hlt
(bad)
cmp
mov
mov
int3
mov
xor
or
sub
dec
hlt
dec
iret
push
enter
add
fmul
hlt
xor
xor
adc
sbb
sbb
loope
mov
push
mov
xchg
(bad)
shl
xor
pusha
push
das
movs
push
or
repz
and
mov
dec
call
jae
inc
(bad)
push
stc
repz
loop
out
nop
xor
xchg
or
into
cwde
arpl
mov
in
test
sbb
outs
and
sub
pop
pop
in
xchg
js
ret
cld
or
mov
imul
test
(bad)
mov
mov
sar
sub
adc
sbb
shr
loop
pop
add
jg
jbe
loop
fcmovu
out
cmp
lods
les
adc
pop
jmp
and
xchg
jecxz
not
ds
mov
sub
daa
dec
dec
daa
mov
movs
arpl
jge
push
std
test
dec
add
das
int3
mov
(bad)
sbb
add
jmp
test
dec
cwde
ficom
movs
pop
mov
in
cdq
fidiv
not
mov
fldenv
push
(bad)
adc
xchg
pop
xor
jb
aam
cwde
fidiv
stc
xchg
repnz
and
add
xchg
out
cmps
mov
push
jmp
mov
sub
mov
aaa
mov
aaa
pop
dec
(bad)
mov
adc
call
ret
xor
dec
in
mov
push
sbb
scas
push
dec
sub
clts
jp
fsub
jmp
enter
(bad)
jns
sbb
cmp
fsubr
repz
mov
mov
jne
ins
xchg
test
ja
mov
xor
dec
xchg
dec
retf
inc
push
lods
dec
test
adc
xchg
mov
lods
lea
mov
cmp
dec
add
inc
pop
inc
in
jo
int
mov
xor
add
push
mov
pop
shr
repnz
pop
call
mov
(bad)
pop
loope
inc
adc
test
add
mov
inc
push
fist
dec
in
mov
cmp
push
pop
neg
mov
cmps
popf
or
jns
or
loope
mov
push
es
int3
xchg
jns
sub
in
mov
call
push
mov
add
and
add
xor
cs
es
push
sub
mov
jo
rol
pop
add
xchg
ins
mov
stos
dec
neg
gs
pop
add
fisttp
repnz
mov
add
inc
es
mov
cmps
jecxz
sub
stos
popw
mov
ins
dec
retf
icebp
xchg
inc
mov
xchg
dec
jmp
adc
cmp
into
popf
addr16
push
mov
movs
ja
pop
and
inc
sub
fmul
and
or
notrack
inc
add
jno
sbb
mov
mov
not
fstp
js
cmp
scas
shl
adc
mov
jmp
outs
mov
int3
out
xor
jecxz
sub
cs
(bad)
sbb
out
in
xchg
bound
mov
aad
inc
int3
mov
mov
jecxz
cdq
mov
sub
dec
adc
popa
cmp
test
adc
jmp
or
ret
fld
sub
push
push
add
retf
mov
ret
sub
push
rcl
push
shr
jle
dec
lahf
add
out
mov
sbb
mov
cmp
mov
in
push
imul
xchg
mov
push
leave
js
add
cmp
lock
out
push
jo
inc
test
arpl
add
in
call
inc
pop
sbb
inc
or
inc
cli
xchg
adc
cwde
mov
test
out
imul
ja
and
mov
ds
jbe
in
xchg
ss
mov
inc
mov
call
and
es
push
add
mov
mov
cmps
div
xor
push
test
int
ret
cdq
inc
cmps
cdq
dec
xchg
push
dec
popf
ficomp
dec
lea
or
pop
movs
xor
dec
retf
rep
ds
fdiv
retf
(bad)
imul
xchg
mov
jbe
lock
rcr
daa
cwde
(bad)
xlat
loope
pop
data16
cwde
adc
std
arpl
test
shl
pop
or
bound
mov
mov
popf
sbb
mov
adc
icebp
enter
lea
mov
repz
(bad)
std
add
inc
jge
push
out
inc
ror
stos
int
adc
call
out
jl
or
jnp
push
stos
jb
pop
inc
ins
jne
push
cdq
mov
pop
fcom
mov
adc
mov
les
test
mov
test
push
int
xchg
in
les
dec
and
or
sbb
jb
inc
leave
jmp
imul
xlat
cli
cmp
lods
jmp
jp
pop
shr
loope
pop
enter
aad
popf
movs
cld
and
lods
mov
bound
cmp
dec
retf
mov
sub
cmps
sahf
jns
int
jbe
xchg
jbe
pusha
xchg
xchg
xor
mov
rcr
xor
adc
push
pop
stos
fimul
adc
or
mov
lea
sbb
mov
xchg
mov
add
push
mov
mov
jmp
xor
icebp
out
lds
cmp
inc
mov
dec
aad
dec
pop
arpl
stos
pop
xlat
pop
inc
pop
mov
mov
push
aad
and
fild
dec
sbb
icebp
adc
and
jg
push
add
popf
fst
fnstsw
mov
or
stos
sub
adc
sahf
rol
and
push
cs
scas
cmp
popf
adc
lock
cs
cmc
fcmovb
inc
out
sub
inc
les
cmp
jp
in
shr
xor
imul
shl
jge
add
xor
push
into
mov
push
inc
pop
and
(bad)
enter
push
bound
inc
aas
pop
xchg
and
dec
ror
cmp
inc
je
scas
or
add
clc
mov
jmp
xchg
inc
push
sub
inc
add
sub
cld
mov
and
jb
mov
cmp
sub
bound
cmp
sbb
stc
std
loopne
cld
push
jae
push
or
imul
and
call
push
ret
addr16
inc
cs
rcr
lock
clc
aas
retf
mov
imul
cmps
imul
js
or
mov
inc
mov
fsub
xchg
cmp
imul
and
stos
ja
fst
fs
mov
sti
rcr
mov
fst
leave
je
and
push
retf
push
scas
and
xchg
and
sub
les
and
xchg
cmps
mov
xor
sub
(bad)
dec
lods
xor
stos
not
leave
enter
clc
loope
mov
mov
cmps
ficom
adc
mov
pmaddwd
pop
rcl
inc
das
mov
gs
xchg
lods
pushf
(bad)
fdivr
(bad)
and
push
ret
jl
rol
fimul
imul
xchg
loopne
push
or
repz
stc
xchg
push
sub
sub
mov
out
outs
test
cmc
bnd
add
jle
aaa
cmps
aaa
std
cmc
dec
jne
pop
in
fcmovne
into
(bad)
pop
scas
pop
rcr
(bad)
dec
and
xor
and
cs
cmps
xchg
pop
stos
rcl
sub
rcl
enter
imul
adc
cmps
mov
out
imul
mov
or
cmc
pop
std
jmp
repz
adc
cmps
test
pop
in
imul
pop
sub
es
movs
dec
div
push
and
gs
sbb
xlat
je
jns
xchg
cwde
iret
jmp
hlt
jmp
bound
(bad)
loope
push
ss
lock
(bad)
std
pop
or
add
(bad)
jle
(bad)
xor
xchg
sbb
dec
call
xchg
add
dec
loope
das
adc
pusha
nop
xor
dec
sti
push
jge
push
popa
dec
mov
mov
mov
cmp
je
xor
(bad)
push
mov
push
(bad)
cs
(bad)
sbb
in
xchg
cmps
es
jmp
into
(bad)
cmp
mov
and
xchg
jb
sub
ficom
cmp
fwait
mov
aam
mov
imul
mov
repnz
push
cmps
jnp
test
ins
add
in
(bad)
jno
pop
dec
aas
push
sub
repnz
adc
xchg
inc
push
push
movs
jns
and
test
mov
mov
scas
xchg
cmp
cmp
inc
fisttp
popa
aaa
mov
jmp
mov
icebp
pop
mov
sub
imul
ins
jae
cld
mov
das
aam
scas
mov
xor
out
sub
sbb
add
sub
retf
data16
dec
std
xor
push
xchg
je
sbb
test
aaa
cli
add
popf
jbe
xchg
jg
or
enter
ss
ja
push
cmp
rol
outs
loop
mov
ja
mov
xchg
mov
sub
push
cmps
pand
inc
repz
mov
dec
sbb
dec
fisub
repz
jmp
sahf
sub
adc
test
loopne
shr
in
ret
cdq
cmp
stos
loopne
adc
xchg
imul
rol
loop
(bad)
mov
nop
inc
xchg
ss
lds
mov
cmp
pop
rcl
in
lock
cmp
xchg
cld
push
icebp
mov
xor
fidiv
xor
cmp
dec
push
pop
jae
dec
jns
jbe
rcr
(bad)
outs
mov
xchg
sub
inc
sub
fild
repnz
imul
sbb
dec
cmp
mov
pop
sbb
outs
mov
ret
lock
ins
cmp
popa
mov
adc
clc
dec
stc
pop
cmc
test
jmp
outs
xchg
shr
or
rcl
scas
mov
cwde
cmp
lock
jg
mov
mov
fdivr
dec
mov
sbb
xchg
loope
push
ja
jle
inc
xlat
(bad)
ficom
jle
(bad)
inc
outs
cmp
cld
(bad)
and
mov
jmp
sub
fwait
loope
inc
push
popa
dec
ss
leave
xchg
test
in
pop
sbb
pushf
push
daa
xchg
adc
and
ficomp
xchg
pop
lahf
std
jb
cmc
push
push
loop
cmp
add
gs
fwait
jae
mul
xor
pop
fisub
stos
ins
(bad)
jnp
dec
lahf
inc
(bad)
mov
ja
scas
sub
mov
or
mov
mov
cmp
inc
push
sub
loopne
(bad)
pop
xchg
cmp
pusha
fs
or
and
cmps
cmp
dec
mov
sbb
mov
and
xchg
ins
ret
sub
dec
cld
push
lea
shr
mov
mov
cdq
fadd
cld
repnz
fsubrp
jl
jmp
pop
sub
pop
dec
ins
mov
sub
mov
lock
js
jbe
fidiv
push
mov
in
(bad)
mov
arpl
fisttp
xchg
(bad)
cmp
mov
retf
fwait
dec
mov
mov
xor
es
lahf
pusha
je
scas
mov
ret
inc
adc
sbb
(bad)
dec
xchg
movnti
jo
hlt
mov
iret
addr16
sub
mov
and
jns
mov
rcr
neg
popf
mov
stos
loope
int3
push
arpl
mov
out
mov
loop
xor
and
xchg
int3
aas
dec
(bad)
mov
mov
adc
sar
popa
mov
loop
bound
pop
js
cmps
jl
pop
sbb
rcl
dec
test
sbb
mov
or
mov
xchg
push
xor
movs
mov
adc
shr
mov
jge
fcom
adc
cmps
adc
mov
sbb
(bad)
je
repz
mov
mov
rcr
push
jbe
xor
adc
pop
ds
jno
mov
mov
mov
scas
stos
mov
add
add
adc
add
jmp
push
and
lods
test
jno
sahf
inc
add
loope
jo
stos
mov
or
mov
adc
push
cmps
jmp
retf
loope
sbb
sbb
add
mov
mov
sbb
cdq
add
xor
aam
ins
(bad)
les
cmps
aas
sub
push
jg
stc
fbstp
sbb
rcr
nop
pop
jb
cs
jle
stos
push
out
push
xchg
shl
test
sub
xchg
adc
mov
movs
inc
lahf
cli
cs
xchg
sti
or
imul
imul
shr
jmp
jae
icebp
jbe
aam
inc
jle
mov
pop
das
cmps
ror
mov
push
retf
fwait
int
xchg
sahf
movs
fnsave
out
popf
gs
push
pop
daa
pop
push
jecxz
ret
xchg
and
jp
cld
adc
call
pop
(bad)
dec
pop
sahf
hlt
jge
dec
xchg
xor
and
fsubr
sbb
xchg
stos
cmc
fdivp
test
inc
pop
or
add
push
xor
mov
push
dec
adc
sbb
cli
neg
stc
test
std
adc
add
sbb
nop
inc
cld
sub
pop
lds
and
adc
dec
pop
inc
loope
inc
fistp
jb
push
or
outs
dec
int
jns
xchg
cmp
data16
ds
lods
pop
ins
sub
(bad)
arpl
and
jb
push
cwde
add
cmp
sub
pop
jecxz
cmp
cli
div
xlat
mov
push
rcl
add
sar
adc
mov
mov
pop
sub
jecxz
jmp
fsubr
add
in
push
adc
xchg
aaa
inc
fst
outs
je
in
xchg
push
stos
hlt
sbb
adc
loop
push
mov
push
add
push
lea
into
movs
out
out
xchg
stos
std
pop
cmp
rcr
in
cmp
or
jge
ds
or
jmp
std
dec
inc
push
push
mov
sar
(bad)
jns
sub
xlat
dec
mov
sub
bound
scas
retf
inc
or
and
jno
jp
aam
mov
test
push
jmp
jnp
fsubp
test
pop
sub
mov
pushf
inc
jmp
jge
adc
ja
xchg
xor
pop
scas
sbb
mov
fs
adc
fiadd
sbb
sub
mov
sbb
mov
xchg
scas
leave
int
shr
jb
pop
xchg
popa
add
cmps
shr
pop
(bad)
movs
push
xchg
clc
dec
mov
cli
dec
daa
call
mov
rcr
ftst
movs
aam
clc
xchg
aam
cdq
popf
addr16
lods
jecxz
cwde
xchg
(bad)
dec
xlat
mov
add
jmp
xchg
mov
and
jp
push
arpl
mov
push
lahf
call
mov
mov
stc
stos
out
jnp
loop
shl
mov
jg
daa
dec
push
test
mov
enter
add
mov
call
mov
outs
sub
les
xchg
inc
rol
pop
test
in
xchg
adc
and
cmp
out
and
scas
loope
cld
out
lods
aad
jl
enter
loop
pop
(bad)
fyl2x
cmp
mov
push
ret
push
mov
push
mov
(bad)
sub
pop
adc
imul
std
das
push
ins
jmp
rcl
mov
into
inc
ret
jae
xchg
mov
dec
arpl
dec
cwde
cli
or
icebp
xchg
xchg
sbb
dec
cdq
sti
(bad)
jg
push
loop
and
and
sbb
push
and
add
lods
xchg
and
das
push
add
call
ins
das
cmp
and
enter
lahf
dec
xlat
add
ds
jecxz
ret
jb
add
retf
jmp
add
aad
sbb
sub
fdiv
inc
loope
adc
xor
cli
in
xchg
pop
sbb
cwde
xchg
aas
test
(bad)
xchg
and
fs
push
push
add
push
loop
pushf
sbb
pop
into
repz
mov
push
mov
pop
xchg
shl
(bad)
mov
jo
mov
xor
push
out
cdq
mov
push
inc
ret
sbb
sbb
lock
or
sti
jl
push
push
loop
adc
mov
pop
cmp
jecxz
jl
add
stos
fcom
push
jl
aas
(bad)
xor
rcl
adc
jbe
or
pop
aas
pusha
lods
fwait
in
adc
das
mov
inc
loop
fstp
int3
and
test
fs
lds
mov
js
push
clc
addr16
adc
adc
jle
test
xor
jne
sub
mov
in
imul
or
push
stos
dec
pop
test
and
in
in
call
retf
pop
or
adc
sbb
ret
mov
sti
mov
lods
or
push
ins
push
int
imul
js
int3
das
in
jne
pop
sub
dec
call
xor
jno
ret
in
or
cmp
mov
ret
mov
or
outs
or
pop
pop
in
sbb
aam
std
popa
std
lock
pop
int
sbb
mov
cmp
push
je
cmp
cwde
arpl
call
movups
rol
cmp
comiss
stos
xchg
jae
lods
or
aas
shl
and
xchg
out
scas
mov
cmp
mov
mov
dec
stos
sbb
inc
push
jmp
dec
out
(bad)
pop
adc
dec
mov
shr
sbb
enter
out
push
cmp
imul
fdivp
push
(bad)
repz
push
mov
fldln2
push
inc
inc
retf
iret
ss
fist
(bad)
add
pop
outs
outs
xor
cwde
ficomp
scas
ja
fdivr
xor
fistp
cmp
or
sahf
pop
je
mov
data16
add
add
xchg
inc
push
daa
test
mov
mov
dec
clc
ins
inc
pop
sti
jg
and
std
xor
sbb
jb
rol
jecxz
imul
les
outs
loop
jno
mov
(bad)
dec
enter
dec
jmp
aad
jmp
cs
ja
mov
dec
ja
leave
dec
mov
xor
cmp
(bad)
sti
repz
mov
arpl
dec
mov
add
test
xchg
mov
in
pushf
mov
(bad)
dec
repz
icebp
rol
div
push
test
cwde
retf
sbb
test
dec
arpl
mov
mov
mov
ins
push
push
sti
xchg
pop
jecxz
xor
enter
imul
or
out
repnz
pop
(bad)
mov
mul
pushf
out
xor
mov
or
aam
retf
adc
cmp
push
sar
lods
mov
cdq
cmp
inc
iret
(bad)
sbb
xchg
inc
or
mov
pop
nop
push
fild
loop
cli
xlat
sub
arpl
inc
add
xchg
xor
pop
sub
sbb
mov
cmp
sti
jmp
xchg
ds
ret
(bad)
mov
mov
sbb
daa
mov
ja
and
or
iret
stos
xchg
loope
in
ret
and
mov
pop
mov
aas
into
jo
cmp
adc
inc
inc
jnp
xchg
sub
dec
and
jmp
pop
jo
imul
retf
jnp
or
jne
std
jae
cmps
pushf
sbb
push
and
imul
cmp
movs
sub
rcr
add
push
dec
jmp
mov
pop
sub
sub
mov
jg
(bad)
fs
mov
enter
sbb
or
sub
sahf
pop
jp
les
jns
adc
call
add
lds
mov
mov
vpmacsdqh
xchg
out
xchg
addr16
repz
or
mov
fbstp
sbb
mov
fwait
cmps
xchg
fs
or
dec
mov
mov
jo
mov
lods
in
aam
das
or
int
test
gs
mov
adc
into
add
xchg
mov
js
fnsave
lods
cmp
mov
mov
sub
cmc
xchg
mov
pop
push
adc
dec
mov
sahf
pop
(bad)
mov
rol
pop
mov
(bad)
and
push
mov
adc
xor
pushf
xchg
mov
dec
test
jl
xchg
(bad)
mov
test
stos
xchg
adc
inc
clc
jae
test
cmp
sub
das
int
int
stc
dec
or
sbb
repnz
lods
pop
sbb
addr16
stc
paddq
fs
fwait
mov
push
and
je
ins
mov
mov
loop
sahf
adc
test
ret
xor
cli
(bad)
mov
jecxz
jne
mov
push
and
sub
stos
das
cmps
mov
call
mov
add
add
cmp
sahf
imul
pop
push
or
cmp
lea
xchg
or
rcl
outs
jmp
mul
push
push
sbb
jb
mov
pop
dec
cmc
jp
ret
push
xlat
mov
call
push
mul
pop
or
mov
push
dec
xchg
sub
sbb
jmp
mov
js
mov
fwait
add
sbb
push
fistp
(bad)
and
dec
movs
imul
or
add
rcr
dec
sub
fs
mov
call
add
push
icebp
ficomp
push
inc
xor
stc
pushf
adc
mov
test
in
sti
or
add
imul
and
(bad)
fmul
jp
bound
in
xor
jmp
addr16
int3
mov
dec
sub
xchg
leave
push
ret
push
enter
ds
pop
push
retf
dec
cdq
or
inc
aaa
xchg
jp
rol
repnz
cs
jne
test
xchg
mov
mov
fistp
or
mov
test
mov
jo
int3
test
adc
dec
and
mov
cmp
jne
push
dec
imul
pop
mov
xor
inc
jno
xchg
jns
jmp
in
aam
push
xor
jp
inc
inc
sub
adc
in
xchg
and
cmp
push
cmp
(bad)
out
sbb
(bad)
push
bound
(bad)
and
push
cmp
lds
push
(bad)
aam
(bad)
je
push
stc
in
pop
mov
xchg
call
aad
cwde
jno
loopne
pop
adc
(bad)
rcl
sahf
push
pop
rcl
sahf
out
jns
sub
inc
retf
lahf
add
or
dec
not
call
std
inc
ror
je
adc
mov
and
pushf
ds
lahf
shl
retf
inc
xor
cvttps2pi
xchg
in
lahf
sbb
jg
out
or
push
dec
or
adc
sbb
and
in
push
data16
or
or
dec
add
cmp
mov
xchg
sbb
jle
test
retf
fdivr
sbb
das
fild
push
imul
sub
ror
call
into
inc
lods
(bad)
mul
xor
push
inc
hlt
pop
rcl
out
retf
jge
ret
jg
hlt
shl
push
inc
push
adc
xchg
push
push
jle
mov
push
fs
das
aad
in
inc
imul
xchg
jmp
add
add
jmp
in
lea
repnz
int3
xchg
sti
add
mov
mov
or
mov
scas
mov
jns
aad
sbb
push
jg
xchg
cmc
cmp
cld
push
cld
nop
fwait
or
scas
ja
xchg
adc
mov
mov
inc
test
cmp
jp
mov
(bad)
mov
inc
daa
cmp
adc
and
sbb
jne
shl
scas
(bad)
into
sbb
and
jge
ds
in
das
call
mov
inc
out
jecxz
or
je
dec
mov
xor
adc
aas
add
pushf
adc
dec
adc
in
mov
push
shl
xor
cdq
repz
fcomp
cdq
or
push
pushf
popf
jg
inc
into
stos
dec
inc
inc
loope
dec
xchg
call
mov
sahf
imul
xchg
pop
cmc
cmova
cwde
pop
dec
dec
sbb
bound
xchg
sbb
push
mov
dec
jle
cli
mov
shr
ret
adc
jmp
ja
je
test
pop
push
sbb
and
cmp
sub
sub
jb
mov
imul
mov
mov
std
loopne
sub
rcr
lahf
push
sub
pop
xchg
add
dec
mov
cmp
dec
js
cs
lods
pop
dec
pushf
(bad)
and
jle
adc
push
fild
dec
in
imul
dec
inc
push
pop
dec
or
ss
add
sub
and
mul
pop
inc
ror
mov
mov
icebp
retf
or
jns
xor
xchg
inc
ins
ret
jae
and
add
pop
test
pop
push
sbb
xchg
xor
imul
out
xchg
aad
inc
int3
or
xor
jne
or
mov
push
pop
int3
inc
outs
mov
jg
sbb
loop
push
out
scas
dec
pushf
xchg
popf
dec
outs
ret
(bad)
(bad)
add
in
mov
scas
add
cld
and
fisttp
xchg
inc
pop
mov
sti
push
mov
and
push
aaa
mov
or
hlt
and
pop
dec
xchg
inc
mov
int
int3
pop
mov
jp
mov
stos
cs
hlt
cdq
sahf
call
jae
push
push
adc
push
fisub
out
and
bound
imul
(bad)
dec
pop
enter
jmp
pusha
iret
test
icebp
cli
or
mov
ins
imul
xchg
inc
jb
mov
test
ret
loopne
push
adc
sub
sbb
dec
push
or
ss
jo
xor
push
in
enter
stos
push
out
mov
mov
fsub
pop
enter
mov
ja
(bad)
shl
push
jns
repnz
adc
push
imul
xor
ins
jge
mov
dec
repnz
and
inc
pushf
xor
cwde
inc
sbb
sub
push
sub
inc
inc
xchg
sbb
enter
pop
cmc
(bad)
bnd
loope
mov
pop
stos
enter
pop
bound
rep
pusha
inc
push
pop
dec
xor
xchg
sbb
nop
sub
dec
sub
fstp
imul
mov
stc
xchg
or
inc
sub
aas
adc
mov
pop
pushf
pop
dec
(bad)
mov
in
das
xor
dec
movs
or
jg
pop
cmp
jo
add
mov
rol
xchg
mov
sub
mov
clc
arpl
jbe
and
jae
pop
mov
(bad)
sub
jno
mov
cmp
pop
sub
(bad)
sub
xor
xchg
add
mov
repz
jae
cmp
inc
lock
cmp
mov
imul
cli
loopne
shl
sbb
or
jle
push
addr16
inc
call
data16
lea
cmp
sbb
(bad)
in
retf
sar
adc
mov
nop
xor
stos
push
mov
imul
pusha
mov
push
jmp
push
je
(bad)
mov
cld
xchg
or
out
and
mov
or
push
xchg
mov
out
mov
lock
jge
mov
aam
std
mov
push
mov
xchg
mov
pop
bound
pop
out
jle
push
loope
push
and
clc
bnd
mov
div
xchg
dec
xor
xor
cmp
add
movs
jge
ss
jp
sbb
cdq
movs
and
sahf
lods
mov
adc
xor
cmp
sahf
and
add
dec
dec
cmp
mov
pop
pusha
pop
ins
cwde
(bad)
mov
sbb
int
adc
mov
mov
and
mov
iret
fdivr
stos
rol
add
inc
pop
sbb
(bad)
test
(bad)
jle
lea
cmp
dec
out
daa
pop
sbb
movs
shr
nop
(bad)
sub
jne
jle
xchg
ret
mov
fcomp
lahf
and
or
cdq
jnp
mov
push
daa
inc
cmp
sub
and
xor
fcomp
push
int3
gs
add
rcr
lea
add
cmp
sub
test
sub
and
add
add
mov
icebp
arpl
aad
repz
jecxz
lods
dec
in
xchg
or
aaa
xor
mov
pop
mov
call
daa
pop
xchg
loope
add
cmc
push
adc
test
nop
sub
inc
xor
mov
fisttp
mov
sti
xor
cmp
jbe
les
ds
shl
cdq
aam
xchg
mov
imul
jae
rol
ins
lea
addr16
or
lods
xchg
mov
aam
arpl
clc
jmp
dec
sub
rcl
xchg
(bad)
loope
xor
pop
adc
(bad)
in
ss
xchg
dec
push
lds
inc
in
dec
outs
(bad)
out
(bad)
and
sti
pusha
inc
sbb
(bad)
and
jl
cmp
stos
or
dec
add
or
add
and
fnstcw
push
movs
and
repz
fcmovb
cdq
xor
jae
in
hlt
fdiv
psraw
test
push
sub
jo
jno
dec
shl
push
mov
xor
mov
enter
ret
repz
loope
shr
nop
ins
jnp
fiadd
cmp
adc
(bad)
loop
icebp
aad
jge
lods
xor
or
dec
leave
xchg
mov
xchg
ret
sbb
dec
fs
dec
mov
(bad)
in
jb
js
dec
xor
or
loopne
sub
aam
pop
inc
mov
push
jno
mov
sub
add
inc
ficomp
call
test
xchg
mov
add
lds
jle
in
icebp
imul
(bad)
loopne
(bad)
inc
inc
ds
neg
and
or
jb
es
jmp
inc
xor
jmp
fs
mov
fsub
dec
mov
rcr
push
ffreep
rcr
jbe
cmps
test
mov
mov
push
inc
push
inc
scas
push
dec
shl
or
outs
outs
inc
xchg
test
pop
jnp
adc
sbb
jbe
dec
dec
sbb
mov
mov
inc
daa
ja
xchg
xchg
cs
push
ficom
inc
xchg
jmp
(bad)
pusha
or
repnz
aas
(bad)
icebp
out
dec
rcl
jae
push
pop
jl
pop
fidivr
cdq
call
and
movs
sar
add
nop
test
mov
enter
cwde
mov
xlat
rcl
mov
inc
adc
mov
pop
test
xchg
imul
stc
jb
nop
cmp
call
mov
sti
test
sbb
jmp
jb
les
sub
not
dec
xchg
jns
push
or
ret
or
imul
sahf
xchg
sbb
mov
add
cmp
pop
push
dec
mov
mov
pop
and
jo
enter
out
jb
mov
mov
push
or
movs
sbb
(bad)
fisubr
jo
movs
fdiv
adc
jle
clc
mov
mov
out
dec
test
popa
popf
jg
cmp
dec
pop
data16
js
lods
mov
pop
pop
mov
in
mov
mov
sar
std
pop
push
fdiv
in
clc
cmp
cdq
sbb
fisttp
cdq
ins
outs
mov
adc
ret
aaa
adc
cmps
xor
xlat
inc
mov
movs
daa
jae
pusha
mov
and
inc
sub
and
rcr
cs
mov
cmc
fsubr
fst
test
(bad)
mov
push
clc
mov
pop
pop
mov
loope
std
lods
call
and
ja
pop
sub
jnp
outs
push
mov
retf
xchg
clc
pop
fst
push
enter
rol
push
iret
mov
xchg
fs
pushf
call
and
lahf
jns
lea
mov
jno
mov
xor
inc
cdq
repz
imul
or
je
fadd
data16
mov
dec
inc
adc
sub
daa
sbb
popf
jmp
stos
cmp
mov
js
or
je
das
xlat
xchg
test
add
adc
mov
jb
sbb
fiadd
lds
dec
in
addr16
aas
push
ins
jae
ins
sub
loope
(bad)
sbb
pusha
dec
or
(bad)
shl
add
xor
(bad)
out
push
aaa
lds
inc
dec
xchg
fcom
es
cmp
lea
xor
test
fs
stos
movs
mov
mov
jnp
loope
(bad)
cdq
out
pop
repnz
(bad)
loopne
loop
std
or
cmc
bound
(bad)
out
inc
test
mov
or
mov
sbb
push
fsubr
push
(bad)
hlt
pop
add
rol
push
mov
mov
cwde
jmp
(bad)
mov
lods
cmp
mov
enter
stc
jmp
add
pop
mov
mov
in
test
cmp
mov
sbb
pop
push
dec
rcl
pop
cs
loope
imul
movlps
dec
inc
mov
sub
inc
mov
pop
mov
adc
sar
arpl
mov
hlt
cmc
cwde
jp
popa
(bad)
out
aam
xor
jbe
gs
test
sbb
ins
mov
and
cmc
xchg
(bad)
jl
or
ror
pusha
movs
mov
mov
xchg
push
push
rep
adc
leave
jl
retf
push
pop
sbb
xlat
js
mov
je
or
imul
outs
add
adc
dec
xchg
adc
sub
jl
dec
sub
ret
fiadd
pusha
add
xchg
xor
sti
into
pop
mov
enter
ret
xchg
xor
inc
(bad)
and
jne
mov
mov
stos
mov
mov
cwde
mov
rcl
lods
lods
mov
xor
lock
adc
rcr
mov
jl
mov
xchg
push
in
lods
sub
clc
in
iret
out
mov
scas
aad
adc
movs
outs
add
mov
icebp
aas
push
mov
enter
add
xchg
sub
aad
mov
push
xchg
jnp
push
loope
inc
arpl
int3
imul
cmp
loopne
xor
js
push
xchg
int3
js
repz
sar
ins
idiv
lea
cmps
or
mov
mov
fs
dec
mov
fnstcw
dec
inc
out
pop
shr
shl
xlat
add
stos
xchg
(bad)
retf
cmp
xchg
mov
in
test
adc
addr16
call
daa
fwait
loope
dec
js
mov
jmp
mov
mov
test
or
add
cli
stc
call
xor
sub
test
pcmpgtb
in
pop
add
add
mov
sar
aad
and
inc
movs
mov
stos
dec
enter
sbb
(bad)
jae
cmp
stos
ret
xor
imul
dec
jb
cmp
enter
outs
addr16
sub
and
push
and
fisttp
mov
arpl
sbb
or
lahf
mov
mov
je
hlt
call
out
js
xor
inc
pop
dec
ins
cmps
sub
mov
cmp
and
jne
gs
test
sbb
loop
jns
sbb
adc
fld
icebp
test
mov
mov
mov
or
repz
test
push
jns
mov
cli
xchg
(bad)
jmp
xchg
xchg
cmp
adc
div
aaa
or
xor
cli
bound
rol
rcr
jge
push
jo
push
xchg
(bad)
lds
add
inc
aaa
push
jns
xor
fst
sub
fdivr
nop
stc
in
mov
xlat
data16
cmc
loop
sahf
sar
and
aad
fsub
mov
(bad)
retf
jl
fsubr
cs
aam
das
mov
sub
fwait
and
pop
cwde
adc
jge
push
dec
cmp
aad
ficomp
mov
xchg
mov
and
(bad)
in
test
inc
add
outs
test
dec
adc
pop
pop
es
aaa
lds
mov
xchg
push
aaa
mov
jmp
outs
push
mov
cmp
push
mov
mov
jo
(bad)
mov
mov
ins
ret
xor
enter
or
or
xor
pop
inc
lahf
inc
outs
inc
mov
sbb
jmp
shl
pop
cmps
sub
int3
pushf
stos
ins
cmp
mov
and
xor
push
push
and
cwde
add
mov
dec
popf
jns
push
mov
add
jb
mov
icebp
xchg
fdivrp
push
mov
adc
jmp
inc
inc
imul
movs
outs
pop
jmp
xor
repnz
mov
cld
and
push
cwde
cwde
outs
and
outs
xor
mov
jo
bound
(bad)
loopne
add
pop
mov
icebp
jecxz
cmp
inc
cdq
loope
jecxz
iret
and
(bad)
adc
jb
push
jo
or
gs
jae
iret
int
push
push
mov
mov
xchg
cmp
loope
jg
lahf
les
out
(bad)
rcl
sti
pop
bound
xrelease
rcl
in
adc
ja
jmp
pop
cmps
mov
pop
jp
lds
add
rcr
mov
mov
ror
mov
push
jg
ret
mov
fbld
pmulhw
inc
jecxz
sbb
cmp
out
mov
inc
test
daa
jns
js
mov
push
jns
mov
mov
(bad)
sub
add
jb
push
loope
or
jo
cmp
xor
in
pushf
test
mov
push
push
addr16
add
dec
xor
xchg
loop
nop
xor
call
cmps
push
push
adc
retf
scas
or
sbb
push
xchg
lahf
adc
out
sub
cli
aas
loope
das
adc
test
add
jno
pop
jae
fbstp
push
out
out
jb
out
sbb
mov
adc
daa
test
mov
inc
ret
push
out
dec
mov
ss
fcomp
inc
jo
(bad)
ins
xor
test
movs
push
push
mov
inc
fsub
cld
js
jge
dec
cld
fdiv
cmp
and
mov
enter
mov
mov
xchg
cmp
and
or
imul
out
add
jmp
(bad)
das
es
cmp
in
movs
es
out
mul
lock
inc
(bad)
dec
mov
jmp
xor
inc
xor
ss
push
test
jb
test
pop
and
gs
xchg
inc
repnz
dec
pop
mov
xchg
xchg
sbb
adc
add
bound
in
out
push
dec
js
or
inc
ret
shr
lods
dec
push
in
mov
fdivr
sar
mov
call
lods
cmp
sti
std
sti
mov
out
push
jbe
push
pop
hlt
add
sahf
loop
and
aam
lea
jecxz
pushf
xor
call
lea
out
mov
inc
push
mov
add
dec
mov
mov
out
lea
and
push
fcomp
and
and
test
mov
lahf
pop
xchg
imul
dec
popa
mov
js
(bad)
out
(bad)
into
cmp
dec
aad
sbb
xchg
cmp
xor
lds
(bad)
mov
adc
or
push
movs
call
push
mov
and
(bad)
cld
arpl
sub
rcl
fldcw
rcl
shl
pop
mov
pop
or
push
add
add
out
add
add
fisubr
jl
rcr
pushf
or
and
mov
mov
xchg
or
mov
repz
(bad)
dec
push
icebp
pop
xor
push
inc
rcl
or
pushf
mov
mov
cmp
nop
mov
ins
fwait
test
mov
xchg
push
into
hlt
aad
ins
jg
in
pop
mov
mov
fbstp
sbb
mov
ins
rcl
inc
dec
ror
(bad)
xor
mov
jno
(bad)
js
jmp
dec
adc
jns
dec
cwde
and
push
add
dec
fld
loopne
jmp
leave
cwde
cdq
push
mov
inc
inc
test
call
jge
mov
push
push
or
loope
movs
test
sub
retf
mov
jno
ror
and
or
jg
sbb
ret
adc
call
icebp
outs
jge
and
fdivrp
(bad)
mov
jecxz
mov
push
lahf
sbb
into
es
jg
xchg
jecxz
mov
gs
adc
cmps
inc
xabort
dec
pop
stos
add
sub
fadd
in
shr
jne
sub
ss
pop
mov
stc
outs
or
adc
adc
push
(bad)
aad
pmulhw
lock
ror
sbb
push
pusha
pop
xchg
pop
xor
pop
mov
xor
shl
retf
mov
lahf
out
outs
add
cmp
adc
in
ja
mov
jmp
popa
inc
sub
out
iret
dec
jge
sbb
and
pop
dec
adc
out
repz
arpl
mov
jnp
popf
lahf
inc
loope
push
sub
sbb
pop
loop
add
mov
out
aad
fbstp
ss
mul
or
push
push
cmp
in
sbb
fimul
mov
cmp
cmc
arpl
leave
cli
shl
pop
sbb
sub
xchg
popa
sub
inc
adc
xor
scas
dec
pop
cmp
test
idiv
or
mov
stos
cli
sbb
imul
cmc
add
lock
jp
aam
mov
mov
jmp
pop
xor
jno
(bad)
dec
push
mov
sbb
hlt
cbw
jle
jmp
push
data16
cmp
cmps
mov
fimul
sbb
pop
cmp
cmp
ins
jmp
jmp
ss
jp
bound
arpl
test
inc
fnstcw
cmp
jle
jmp
enter
movs
sub
cmp
test
adc
ins
sub
xchg
sahf
ror
push
xchg
ja
data16
jno
sti
repnz
daa
pop
sub
sbb
xchg
add
jmp
in
mov
cs
lock
not
dec
pop
bnd
push
jmp
(bad)
in
jbe
sub
or
dec
inc
pusha
xor
out
ds
and
neg
jmp
mov
test
out
xchg
dec
in
out
sbb
xchg
xlat
mov
setle
xchg
(bad)
fstp
jmp
scas
mov
repz
push
test
push
jb
mov
fnstenv
dec
pop
call
and
jl
int3
ins
stc
(bad)
std
outs
push
scas
sub
mov
jle
lods
fisttp
xchg
push
lea
js
xchg
xor
js
repz
out
or
pop
stos
int3
adc
push
inc
outs
scas
call
into
mov
cli
js
jae
and
dec
mov
clc
cmps
in
retf
loop
sahf
xor
and
out
pusha
ins
in
xchg
ins
scas
in
cmp
xor
std
cld
ins
iret
loop
inc
dec
loope
add
jmp
jp
add
xor
mov
imul
sar
mov
clc
pop
cld
pop
ins
xchg
les
icebp
inc
(bad)
push
or
cmp
lahf
jp
jo
pop
fs
test
mov
sub
stc
sub
test
mul
xor
dec
(bad)
fisttp
inc
bound
pushf
push
out
push
xor
or
call
jp
cmp
mov
pop
mov
jb
pop
(bad)
sub
mov
push
cwde
stc
pusha
inc
push
idiv
fs
movs
adc
icebp
mov
pop
adc
pop
sbb
fsubr
dec
mov
jmp
popa
pusha
cs
cmp
sar
retf
xor
mov
call
movs
and
inc
test
imul
cwde
(bad)
or
xor
or
test
mov
jmp
dec
cld
xchg
aas
sub
mov
xor
std
add
imul
xchg
jae
daa
jmp
push
mov
push
xchg
mov
cmp
add
into
mov
mov
push
push
xor
fistp
xchg
sbb
push
ss
dec
mov
inc
out
mov
call
xor
es
popf
imul
cpuid
adc
(bad)
call
jb
mov
stc
xchg
call
xchg
(bad)
jno
mov
push
mov
cmp
lods
mov
jae
scas
scas
test
aam
(bad)
les
xor
ja
xor
nop
sbb
dec
adc
jmp
fnsave
push
sub
and
iret
push
mov
cmp
sbb
jp
and
xor
xchg
pop
add
test
sbb
dec
cs
mov
adc
cmps
in
mov
cmp
push
mov
mov
(bad)
jne
inc
cmps
xor
jg
mov
int3
loop
inc
je
out
test
ds
inc
out
xor
sti
test
int3
fnstcw
ss
outs
repz
add
jno
add
cmps
iret
les
mov
mov
adc
enter
add
mov
iret
and
fisttp
je
cmp
cmp
je
mov
int3
mov
test
mov
and
(bad)
cmps
mov
adc
gs
add
jmp
xor
sub
and
pop
or
imul
retf
inc
sub
push
outs
push
xchg
scas
adc
dec
adc
mov
cmps
xchg
fmulp
jbe
xlat
outs
or
icebp
sar
gs
and
das
lock
loope
adc
rcr
imul
pop
bound
dec
push
gs
mov
xlat
std
popa
pop
mov
jp
mov
jns
sahf
pop
mov
push
xor
imul
pop
dec
dec
push
sbb
cmp
mov
mov
imul
test
push
retf
cmp
scas
fabs
fmulp
out
pushf
nop
pusha
add
pushf
sbb
ss
out
jnp
add
pop
or
out
add
push
jo
jnp
cli
xor
je
inc
in
sbb
pop
add
xor
push
bound
push
mov
std
fmul
and
sar
fwait
jne
shl
sub
and
mov
or
push
xchg
lock
sbb
jle
fs
mov
in
or
cmp
mov
cmps
jecxz
dec
cmp
adc
sbb
pop
adc
or
push
out
mov
icebp
cli
jmp
arpl
mov
les
sar
or
or
fsubp
sub
and
test
xor
fidiv
jb
(bad)
shufps
ss
mul
inc
cli
sub
mov
mov
add
push
es
mov
add
ret
shl
test
dec
fadd
cmp
ret
repz
xlat
pop
outs
(bad)
pop
sbb
repz
punpckldq
mov
dec
add
retf
adc
push
fdivr
jne
add
fdiv
not
pop
loop
sahf
sahf
je
xchg
movs
xchg
mov
fnstenv
push
fwait
sbb
inc
clc
inc
es
jno
jo
xchg
addr16
xchg
jmp
ret
pop
ins
mov
jbe
mov
jecxz
idiv
bnd
pop
rol
jg
sti
cmp
(bad)
fld
push
pop
dec
inc
sub
or
xchg
sbb
inc
outs
aad
imul
lods
add
jb
es
mov
push
icebp
out
clc
enter
in
xchg
sbb
aaa
jg
out
pop
adc
fisttp
js
js
xchg
shl
into
dec
dec
xor
imul
sti
add
sahf
jmp
or
dec
sbb
push
fld
mov
cwde
int
pop
pop
sbb
hlt
mov
(bad)
es
inc
xchg
stos
inc
jmp
xor
mov
push
adc
arpl
fucom
dec
and
or
jmp
jnp
jmp
mov
popf
push
scas
cwde
(bad)
pop
imul
jne
xor
sub
mov
mov
in
pop
(bad)
cmp
inc
loopne
xor
sbb
push
push
dec
sub
push
jne
in
(bad)
sbb
push
lahf
clc
addr16
scas
jl
cmps
and
mov
jmp
xchg
add
sub
adc
adc
stc
push
pusha
mov
ss
xchg
sahf
mov
mov
ins
push
cmps
into
sbb
xor
add
xchg
movs
sbb
into
retf
jae
xor
nop
stc
leave
fisttp
pusha
mov
jecxz
sub
jae
mov
loopne
pop
jae
adc
cmovno
fwait
shr
imul
xor
adc
inc
(bad)
dec
test
xor
mov
call
cmps
sub
and
aam
enter
mov
xor
dec
lahf
mov
and
aaa
push
xchg
jle
inc
xchg
mov
(bad)
in
xor
inc
scas
jno
mov
or
stc
xchg
add
jle
jge
sub
sub
je
adc
sbb
in
repz
pop
pop
cmps
push
xchg
addr16
les
addr16
jmp
cmp
mov
lahf
popa
js
dec
xor
repz
inc
mov
mov
imul
ret
mov
push
jmp
or
jecxz
aad
xchg
out
lea
in
sub
ins
push
iret
dec
ss
lods
stc
mov
or
mov
sub
sub
aad
or
jb
mov
stos
stos
aaa
bnd
pop
jecxz
test
push
push
out
adc
test
cmp
push
clc
jbe
mov
jnp
and
in
and
pushf
addr16
xor
push
lsl
sbb
inc
jle
sub
loopne
mov
mov
xchg
mov
popf
int3
in
xchg
repnz
mov
(bad)
xor
aas
sub
add
or
push
adc
and
stos
pop
ds
popw
jmp
xor
sbb
push
xor
fdiv
retf
push
movs
xchg
retf
loopne
lahf
pop
(bad)
and
(bad)
popa
inc
aam
test
adc
pop
jmp
xor
int
into
std
test
xor
rcl
cmc
push
jecxz
and
add
xchg
arpl
jl
add
inc
or
ret
mov
in
lds
push
xchg
inc
mov
sbb
mov
xlat
hlt
frstor
into
or
(bad)
sbb
jno
jb
jmp
or
xor
add
retf
inc
aaa
(bad)
sbb
outs
test
xor
inc
jge
ja
and
mov
mov
popf
movs
dec
shr
(bad)
jmp
imul
das
pop
cmc
retf
adc
push
inc
mov
and
xchg
dec
mov
in
loope
sub
lahf
scas
fst
stc
pusha
inc
mov
test
mov
sbb
or
sbb
push
pop
jmp
sbb
pop
jg
pusha
inc
xor
imul
dec
sbb
mov
retf
gs
nop
or
inc
jmp
mov
mov
lods
xor
lds
pop
outs
dec
add
nop
scas
(bad)
daa
nop
imul
dec
jmp
pop
push
push
adc
cmp
cmp
(bad)
gs
xchg
mov
std
das
mov
(bad)
mov
je
lock
lds
or
pop
pushf
add
xchg
jb
out
int3
ss
lea
aam
shl
(bad)
jne
lds
inc
pop
pop
fdivr
out
sbb
sub
inc
cmp
les
in
fisubr
sub
xor
ds
inc
mov
push
xchg
mov
aas
inc
loop
in
dec
out
mov
arpl
std
or
xchg
jecxz
mov
sbb
and
les
loop
(bad)
repnz
push
mov
loopne
out
mov
inc
mov
lahf
add
adc
leave
inc
(bad)
mov
int3
inc
mov
mov
mov
cmp
sub
inc
mov
test
fisttp
(bad)
outs
sub
mov
sub
and
movs
nop
mov
in
jb
int
leave
jge
xchg
or
stos
int
(bad)
and
into
out
xchg
mov
test
push
pushf
push
adc
into
push
clc
jle
mov
mov
mov
jno
mov
mov
push
into
lea
xor
fldcw
and
jo
fmul
or
ds
or
mov
aaa
sub
pop
xor
aaa
pop
sbb
les
nop
rcl
popa
xor
mov
fisttp
fwait
in
pop
and
test
mov
mov
call
mov
adc
jbe
and
cmps
test
cmp
and
fs
pop
dec
(bad)
mov
iret
pop
mov
shr
mov
jb
mov
ret
sbb
retf
inc
sbb
dec
mov
jl
cli
mov
js
fld
fnstsw
mov
cmp
sub
mov
mov
dec
out
mov
jle
imul
adc
aad
mov
xor
add
or
jo
sub
hlt
xchg
adc
mov
fild
mov
cmp
xchg
push
dec
inc
shr
inc
(bad)
jnp
lock
dec
or
outs
adc
pop
jnp
sub
inc
ror
movs
cmps
mov
call
push
daa
cdq
idiv
add
ds
cs
stos
inc
movs
scas
inc
pop
or
inc
inc
push
jo
mov
jl
loop
adc
js
jb
ss
ins
cmp
lods
mov
pop
cmp
imul
ins
push
mov
adc
mov
dec
ins
lods
jb
inc
pop
lea
cli
xor
fistp
imul
aaa
les
test
cmps
aaa
mov
jmp
jns
rol
lods
mov
out
(bad)
cmp
cdq
mov
adc
pop
pop
(bad)
mov
movlhps
cmp
dec
cdq
shl
loope
cmp
push
pop
sbb
and
(bad)
shl
stos
loopne
add
xor
xlat
pop
mov
fcomp
daa
mov
inc
test
in
or
jnp
and
xchg
cmp
xor
ss
lahf
les
aam
cli
fcom
mov
inc
stos
mov
hlt
call
xchg
in
cmc
or
(bad)
dec
shr
imul
cwde
repz
out
xor
inc
add
test
ret
sub
mov
jno
les
or
aad
inc
lea
cwde
mov
ja
ret
push
fldln2
add
xchg
mov
mov
retf
imul
sbb
inc
ja
mov
retf
scas
push
call
cdq
xor
jle
lods
ins
mov
test
enter
aaa
cld
cld
mov
pop
leave
sub
lahf
(bad)
xchg
outs
int
sbb
inc
in
cmps
mov
xchg
enter
mov
xchg
push
icebp
inc
jl
les
rol
xchg
push
std
repz
xchg
pop
jp
not
add
popf
pop
xchg
mov
mov
xchg
cmp
add
adc
and
dec
pop
mov
mov
and
xchg
inc
xlat
jbe
mov
loope
dec
add
push
sahf
inc
add
leave
jp
mov
mov
mov
and
mov
adc
not
or
lods
xor
cmp
stos
int
push
fstp
out
xchg
pushf
rcr
fimul
jmp
pop
cli
cmp
push
nop
in
push
shl
adc
loopne
les
pop
add
mov
leave
rcr
cmc
pop
imul
fcomp
mov
sbb
pop
data16
retf
sahf
mov
test
sub
aas
ror
jae
mov
inc
in
shl
adc
popa
mov
mov
add
lahf
mov
mov
xchg
or
xor
into
and
(bad)
stos
leave
loope
ror
popa
scas
push
cmp
xchg
call
mov
test
xor
sbb
jle
cs
and
jnp
adc
aaa
loop
call
outs
fstp
push
mov
push
cmp
xchg
pop
ins
sar
jo
in
mov
mov
or
bnd
out
cmps
in
mov
dec
pop
jb
out
arpl
cwde
xor
sahf
lods
add
push
xchg
shl
test
pop
fwait
xor
and
retf
or
int3
jmp
addr16
neg
mov
mov
(bad)
sub
xor
cmc
mov
pop
fs
stc
aas
int
or
cld
ss
pop
pop
mov
mul
or
cmp
xor
stos
lods
mov
in
pop
mov
ja
fsubrp
enter
xor
call
adc
cmp
stc
cmc
mov
push
aam
mov
movs
lds
lods
enter
mov
stos
(bad)
sbb
in
test
dec
jno
inc
adc
mov
imul
repz
arpl
(bad)
and
repz
pushf
jmp
sbb
mov
aaa
arpl
movs
leave
pop
icebp
sbb
ss
pusha
pop
lahf
mov
lods
mov
fild
and
aad
inc
xor
cmps
inc
jmp
scas
dec
aad
ss
and
sub
rcl
jmp
xor
push
sbb
jbe
dec
sbb
jbe
jg
clc
pop
pop
sbb
ins
mov
push
pop
inc
stc
jno
jns
pop
outs
pop
mov
stc
int3
sti
fwait
jmp
push
retf
xchg
push
cld
sub
leave
ins
ins
in
pop
mov
loopne
add
xchg
jecxz
scas
adc
fsub
ror
push
xor
pop
mov
mov
cmp
push
aam
lahf
sub
into
fcomip
test
lods
loope
stos
sub
jge
ds
fnstenv
ds
mov
cmps
inc
or
and
and
mov
push
in
mov
daa
sub
push
mov
leave
test
adc
push
int3
push
repz
and
js
out
add
pop
mov
sub
pop
adc
(bad)
lods
adc
shr
xchg
call
sbb
pop
inc
cmps
lock
push
nop
or
cmps
mov
icebp
push
add
cdq
push
imul
stos
(bad)
popf
sti
inc
adc
or
mov
mov
mov
push
push
mov
xor
add
push
cmp
test
fstp
inc
mov
lods
push
loopne
inc
test
xor
lahf
or
mov
push
outs
loope
(bad)
outs
push
cmp
ret
out
mov
push
je
mov
jmp
xor
mov
rcl
xor
pop
int
jl
lds
mov
inc
push
stos
(bad)
test
leave
add
ror
mov
sub
bound
test
sub
or
(bad)
jb
mov
repnz
and
scas
xor
sti
ja
jge
nop
cwde
xor
aaa
scas
mov
loope
test
test
jne
ret
pop
jns
aas
stc
daa
retf
xor
repnz
pop
fistp
daa
and
ret
pop
rcr
gs
push
inc
cwde
inc
push
aam
jecxz
xor
stos
or
mul
push
jge
aam
dec
out
and
bound
leave
dec
fdivr
pop
sahf
push
retf
dec
xor
out
ins
jmp
iret
cmp
iret
test
mov
lods
adc
dec
or
sub
mov
dec
outs
lea
inc
cld
mov
mov
aaa
adc
dec
push
outs
ins
cmp
scas
fwait
jle
or
sub
cli
data16
outs
adc
mov
mov
call
push
jb
call
ret
pop
hlt
outs
and
sbb
sbb
and
js
nop
add
jmp
repnz
xchg
xor
sub
and
cmp
cmp
push
sub
imul
sub
das
or
imul
cmp
mov
fcom
movs
int
sbb
retf
mov
jo
jnp
xor
and
ins
fmul
mov
lods
mov
arpl
out
add
imul
push
jno
jle
out
test
fild
jb
rcl
jg
or
mov
in
fst
cs
repz
(bad)
mov
pop
pop
cmp
mov
leave
mov
cs
fst
cli
movs
mul
(bad)
imul
inc
mov
hlt
pop
fisubr
mov
mov
inc
cmc
jbe
movs
movs
retf
ss
mov
xchg
mov
ficomp
jmp
ss
push
mov
sub
in
sbb
adc
xlat
pop
dec
mov
pusha
aad
aad
jns
stc
push
sub
repnz
jae
(bad)
sub
and
sub
cs
and
mov
ret
aaa
push
pop
jle
xlat
pop
jge
cmp
sub
lods
mov
jns
mov
dec
pop
rol
mov
sbb
sti
mov
pop
test
and
dec
jns
cmps
mov
push
(bad)
mov
movs
lahf
jbe
(bad)
xbegin
movs
fld
int
lods
hlt
mov
hlt
dec
fs
xchg
and
or
dec
add
jge
test
ret
sbb
sbb
push
dec
int
cmp
cdq
xor
leave
loop
sub
fs
pop
cmp
int
out
add
lahf
clc
aas
or
add
nop
dec
out
cld
inc
and
push
sub
or
int
jge
into
stc
pop
jp
test
scas
dec
je
(bad)
pop
adc
push
xchg
out
inc
push
inc
push
les
push
shl
inc
push
lahf
(bad)
(bad)
pushf
js
pushf
mov
dec
adc
and
inc
sub
adc
adc
sbb
enter
ins
in
imul
xor
popf
mov
ror
fnsave
lfs
aam
test
shl
xchg
sahf
cmp
push
xchg
xchg
ror
push
sub
movs
into
mov
dec
mov
jbe
das
call
data16
mov
mov
xor
sbb
pop
jmp
in
fldenv
mov
inc
and
mov
sub
gs
in
dec
es
jne
ret
loope
mov
xor
sbb
loope
jmp
(bad)
in
mov
fs
int
pop
dec
mov
outs
sti
jmp
dec
(bad)
fwait
movs
jg
out
mov
fisubr
stos
sbb
call
lods
test
push
cmp
retf
inc
(bad)
movs
inc
push
jmp
arpl
jae
ss
les
push
xchg
(bad)
and
pop
loope
jp
in
add
out
jp
into
pop
outs
push
out
mov
mov
push
cmc
mov
dec
adc
and
retf
cli
clc
aam
je
mov
out
rcl
jmp
fadd
dec
shl
in
push
sbb
or
ins
push
jle
sub
sbb
sbb
sbb
icebp
or
std
std
mov
push
aas
push
pop
call
or
push
shl
out
jecxz
xchg
fstp
cmp
loopne
lahf
mov
out
and
and
xchg
xor
(bad)
mov
inc
icebp
loop
adc
jno
xor
lahf
cmp
jmp
jmp
jnp
adc
add
(bad)
frstor
mov
push
jno
xlat
iret
or
nop
nop
add
push
cmp
sbb
sbb
push
fdivr
iret
(bad)
js
mov
int
repz
retf
cld
stos
xchg
stc
and
pop
mov
inc
xlat
daa
das
xchg
sti
dec
(bad)
xor
push
cmp
pop
movs
sub
mov
test
pop
mov
dec
ja
mov
and
and
mov
push
pop
stos
cli
sub
mov
mov
or
(bad)
xchg
push
mov
push
cmp
data16
test
push
mov
aad
and
aad
pop
mov
fs
ret
jmp
inc
lods
cmp
add
lahf
cld
mov
add
test
xor
pusha
in
jg
int3
gs
daa
adc
xchg
stos
das
bound
lea
in
and
bound
mov
pop
and
xchg
dec
cmp
stos
popa
ja
and
lock
stos
(bad)
mov
mov
stc
mov
rcl
pop
inc
jge
fucom
cmp
inc
or
push
and
popa
xchg
cdq
cmp
sahf
inc
rcr
fisttp
dec
pop
(bad)
sub
push
mov
or
mov
pop
cdq
jmp
push
cmps
jge
cwde
mov
movs
retf
xor
mov
pop
adc
pop
jbe
dec
sar
dec
or
sti
sti
pop
addr16
loope
push
int3
and
(bad)
mov
mov
icebp
push
xchg
mov
adc
push
mov
and
in
mov
sub
mov
adc
dec
jo
(bad)
ss
(bad)
stc
imul
movs
and
and
push
rol
ret
jo
ja
cli
scas
adc
cmp
push
lahf
iret
not
inc
repnz
inc
xlat
test
fstp
inc
sbb
ss
xchg
sub
jle
leave
outs
jae
or
rol
fstp
mov
call
mov
in
jecxz
leave
in
and
xchg
popf
xor
adc
fxch
jne
sub
nop
icebp
outs
xchg
cmp
pop
xlat
imul
call
adc
out
daa
push
in
mov
mov
pushf
jmp
cmc
xor
pop
sbb
int
jg
loope
cmc
test
jg
repnz
xor
pop
xchg
sbb
jmp
jl
mov
xor
mov
sub
test
mov
inc
call
and
paddd
cmp
in
inc
cmp
fsub
aad
sub
ret
sbb
enter
nop
aam
xchg
dec
ins
gs
and
in
sbb
push
nop
test
aad
add
xor
inc
push
fild
mov
int3
mov
test
sbb
jge
scas
xchg
sub
cmc
pop
imul
ret
(bad)
sub
push
(bad)
jle
out
and
sahf
lods
xchg
fnstsw
push
jg
mov
push
mov
inc
stc
xor
lds
jmp
lds
xchg
loop
push
mov
(bad)
xchg
xchg
push
jl
add
xchg
hlt
addr16
cdq
mov
cli
xchg
(bad)
cmp
enter
mov
neg
int3
fcomp
rcl
lods
stos
pop
repnz
les
faddp
add
or
sbb
jae
sub
sbb
(bad)
fisttp
mov
inc
push
pop
mov
ss
aaa
sahf
mov
mov
out
jmp
(bad)
push
or
in
sti
add
and
or
test
mov
ficom
xchg
(bad)
(bad)
ror
(bad)
fld
cli
and
nop
xor
push
aad
fs
dec
mov
scas
outs
push
push
dec
repz
pop
push
scas
push
mov
sub
inc
rcr
add
aaa
sub
ror
mov
xlat
sub
fcom
mov
call
adc
sbb
daa
mov
jp
mov
pusha
cmp
jmp
std
or
push
fild
add
cmps
arpl
dec
sbb
ins
mov
jns
imul
dec
fs
pop
icebp
mov
enter
std
jmp
jl
daa
shl
pop
retf
inc
cmp
jp
jne
add
and
pop
cld
rcr
lea
add
xchg
push
sbb
and
push
jae
pop
scas
aas
movs
test
mov
pop
pop
clc
jnp
(bad)
jg
jno
pop
lahf
jp
adc
mov
sbb
cmp
push
jmp
mov
clc
rcr
iret
scas
cmp
pop
sbb
inc
add
mov
cmp
lock
mov
adc
jge
jmp
das
ret
out
ins
sub
out
inc
xor
fdivr
push
dec
test
js
retf
retf
push
lods
dec
rcl
or
pop
sbb
lock
pop
in
ins
cdq
fwait
dec
dec
jg
jmp
popf
mov
mov
push
push
push
jbe
xchg
adc
lock
jne
adc
inc
int
mov
int3
js
sub
jl
lds
xchg
ja
into
add
and
jno
xor
add
test
ja
xchg
mov
das
lock
cs
xor
(bad)
in
inc
lods
lock
(bad)
sbb
movs
jmp
repnz
cmp
mov
cwde
mov
inc
mov
sub
cmp
cmp
les
call
mov
out
popa
add
arpl
inc
jmp
cmp
test
fs
fld
jge
sub
sahf
mov
clc
sti
adc
jno
sub
inc
cmc
cmp
ret
inc
xor
out
out
sub
movs
or
test
stos
fs
or
outs
lods
fld
sti
or
push
sbb
stos
sbb
inc
cs
movs
aas
imul
mov
and
scas
(bad)
in
cmp
sub
push
inc
cmc
cmp
xor
mov
ror
and
fwait
shl
xchg
add
das
inc
add
retf
pop
icebp
push
jns
xlat
cdq
add
xchg
mov
jbe
and
rol
(bad)
jmp
cdq
mov
inc
add
pop
mov
mov
aaa
jp
pop
xlat
loop
mov
and
inc
out
dec
dec
cmp
jge
xchg
fidivr
out
push
fyl2x
ret
stos
xor
mov
adc
cmp
xchg
(bad)
rcr
xor
out
enter
jg
out
shl
add
inc
push
jmp
and
in
and
mov
mov
adc
loopne
divps
scas
pop
add
xchg
loope
repz
dec
adc
mov
test
mov
js
aam
xor
je
test
fcmovne
lods
xchg
mov
out
xchg
mov
pop
dec
int3
es
jno
sub
ja
jg
push
dec
pushf
ror
pop
test
pop
shr
out
sub
push
jns
pop
xchg
jmp
mul
cmp
sbb
adc
jns
psubq
push
inc
data16
push
add
es
xchg
stos
xor
adc
add
xchg
xor
xor
fnstsw
and
fucomip
sub
mov
or
adc
push
mov
shl
pop
les
mov
call
loopne
shl
push
jmp
aad
bound
mov
push
cmp
int3
push
loop
push
mov
lea
repnz
lahf
scas
pop
push
fisub
outs
stc
and
jne
adc
mov
retf
popa
pop
fisub
xor
and
dec
movs
mov
loopne
into
adc
lods
stos
or
pop
repz
retf
fisub
mov
xor
ficomp
dec
test
js
or
ins
inc
push
mov
fist
pop
dec
or
stos
cdq
out
mov
xchg
and
stos
idiv
repnz
imul
ret
push
in
sbb
push
pop
jb
jmp
cld
pop
dec
retf
stos
mov
jle
xchg
shl
jecxz
jle
mov
push
je
sar
ret
cmp
ds
xchg
pop
mov
add
xor
pshufw
add
xchg
mov
xor
jne
xlat
dec
and
std
xor
in
cmp
or
inc
rcl
daa
jae
in
popa
cmp
cmp
lock
add
mov
mov
dec
dec
fild
test
fsub
push
loopne
add
les
sub
cmp
inc
mov
stc
sub
loopne
pop
mov
push
inc
imul
call
push
repnz
mov
lds
stc
cmc
pop
leave
add
and
daa
mov
out
push
sti
in
cmps
jnp
and
movs
out
js
(bad)
jle
imul
lea
stos
inc
std
ficom
pop
imul
sub
sub
(bad)
aam
(bad)
adc
(bad)
int3
lods
rcr
js
jae
inc
pop
pop
mov
retf
movs
ret
ds
ins
pop
pop
lock
dec
pop
pop
movs
or
pop
mov
sub
xor
jns
cmp
dec
push
cwde
push
push
mov
adc
push
ins
arpl
retf
in
iret
mov
dec
rcr
push
loop
cmp
ret
test
mul
test
xchg
shl
or
fs
cli
xlat
pop
std
pop
(bad)
iret
loope
adc
fdiv
or
nop
and
dec
mov
fimul
mov
fnstcw
sahf
pop
stos
inc
mov
dec
jmp
punpckhwd
loop
mov
fistp
loop
push
mov
je
push
ds
push
pop
mov
daa
sbb
rol
jge
shl
jmp
pop
pop
jle
inc
push
imul
jno
add
scas
(bad)
xor
iret
in
aas
inc
aam
cmps
clc
in
addr16
sbb
in
cmc
daa
iret
gs
dec
mov
cmp
adc
dec
fisttp
(bad)
inc
daa
in
add
addr16
lea
ins
jno
scas
add
test
push
retf
sar
jge
mov
inc
pop
call
pop
enter
jmp
jbe
frstor
mov
push
stc
(bad)
dec
clc
xchg
stos
sub
cmp
add
aad
mov
push
push
popa
and
push
in
add
retf
out
cmp
xor
stos
in
es
sub
fcmovnu
inc
shl
mov
rcl
adc
arpl
popa
es
jne
sbb
repz
fisubr
gs
dec
mov
fist
jl
cmc
scas
fnstcw
pushf
leave
hlt
pop
xchg
pop
daa
jo
inc
out
mov
ins
mov
call
aam
cmps
in
adc
or
cmp
dec
adc
lahf
nop
jmp
inc
test
fadd
fbstp
rol
pop
clc
arpl
clc
pop
or
mov
call
(bad)
(bad)
stos
dec
and
mov
lock
push
add
out
mov
imul
stos
pop
les
jecxz
or
cmp
(bad)
gs
sub
or
cwde
out
lea
fnsave
es
mov
aas
dec
sbb
xlat
inc
jno
sub
stos
pop
lods
sbb
cmp
push
jmp
xor
sbb
mov
jb
cmp
iret
out
sbb
test
push
mov
sub
xchg
cmp
push
add
sub
mov
dec
jae
or
test
xchg
xor
rcr
and
dec
stc
in
cmps
adc
mov
xor
add
imul
pop
(bad)
(bad)
fwait
cmp
xchg
push
je
sub
dec
cmp
xchg
cwde
push
pop
cmps
bound
jno
or
scas
dec
sahf
scas
icebp
cmp
lds
fnsave
sub
adc
xor
es
fucom
xchg
fmul
adc
shl
mov
je
inc
mov
fdiv
push
xor
xor
xor
mov
xchg
mov
retf
mov
fisub
cmp
call
js
out
nop
jp
inc
mov
aad
nop
pop
xchg
push
loop
movs
fwait
xchg
mov
mov
mov
mul
jmp
inc
int3
inc
cmp
xor
in
and
inc
test
(bad)
int3
mov
div
popf
addr16
les
lods
or
inc
addr16
inc
jmp
cmps
xchg
xchg
je
iret
sub
xor
inc
cmp
mov
ja
outs
outs
mov
(bad)
aas
and
add
pop
sub
gs
push
mul
sub
sbb
addr16
sbb
xchg
aaa
loope
movs
mov
repz
jne
sub
mov
mov
xchg
xchg
js
lds
movs
popa
xor
push
ds
add
jle
lock
fld
clc
mov
retf
shr
in
add
mov
sub
stos
addr16
fstp
clc
fs
jmp
std
icebp
fcmove
mov
sub
sub
mov
mov
inc
sbb
movnti
add
aam
ja
int
lods
inc
test
add
adc
out
mov
mov
jae
add
inc
dec
mov
jp
dec
aas
mov
sub
loop
and
lahf
cmp
cdq
aas
test
lock
in
dec
int
push
adc
fnstenv
aas
xlat
adc
or
test
mov
push
mov
rcr
or
or
jle
inc
sahf
ret
(bad)
push
pop
add
sahf
mov
les
push
sub
mov
jb
add
ds
jno
add
aaa
popa
les
pop
cmps
popa
push
out
push
sbb
neg
xchg
adc
popf
adc
scas
stos
xchg
pop
pop
sti
mov
rcr
mov
movs
or
push
mov
loop
leave
call
je
ret
outs
inc
mov
pop
inc
xlat
stos
jmp
add
loope
mov
sbb
sbb
dec
inc
jnp
mov
out
jbe
call
mov
adc
dec
sbb
nop
ficom
call
inc
sbb
mov
nop
fild
movs
in
cmp
iret
mov
xchg
pop
cmp
neg
mov
push
fdivr
or
xchg
in
in
out
in
std
jecxz
sbb
(bad)
sbb
push
std
jle
ds
xlat
and
ss
dec
iret
outs
and
push
icebp
or
ret
pop
sar
xor
push
pop
std
jae
fcmovnbe
ret
aas
cmp
rol
or
mov
adc
hlt
(bad)
jo
cli
xor
popa
push
das
xchg
jns
xchg
clc
pop
cmp
pop
sti
sar
dec
jge
jmp
cmps
movs
sahf
or
ror
outs
dec
mov
adc
jo
pushf
xlat
fld
inc
pop
xor
retf
repnz
fdivr
cld
aam
pop
inc
sub
sub
mov
push
(bad)
xlat
sub
mov
ret
sub
aas
cdq
adc
(bad)
push
hlt
in
jnp
cmp
cmps
outs
pop
adc
fadd
dec
leave
aam
in
mov
test
add
sub
enter
or
mov
mov
jl
sub
movs
and
add
pop
out
fild
imul
js
out
fld
enter
mov
xor
jle
mov
mov
or
cmp
add
inc
movs
in
mov
mov
and
popf
das
inc
push
(bad)
ins
jne
mov
add
(bad)
idiv
adc
(bad)
out
mov
(bad)
dec
jb
fisttp
mov
aad
js
cmp
rol
idiv
xor
jmp
mov
sub
sar
sbb
xchg
jae
mov
test
pop
sbb
js
mov
push
les
sbb
inc
sub
jl
loopne
imul
xor
(bad)
fwait
push
xor
sbb
jmp
bound
stos
push
xor
xchg
ret
(bad)
into
sub
sti
test
pop
out
jbe
mov
shr
mov
mov
fisttp
xlat
adc
in
xor
jmp
sub
jmp
xchg
pop
adc
(bad)
test
mov
retf
ror
xor
fdiv
shr
into
jmp
xchg
xor
pop
call
inc
cmp
mov
mov
punpckhwd
push
pop
xchg
enter
sti
and
add
loopne
mov
cld
jns
nop
cmp
call
cmp
in
lods
xchg
jo
sub
lahf
and
push
cwde
xlat
push
outs
inc
shl
adc
sub
xor
repnz
ins
nop
sub
shl
loop
jmp
leave
loope
mov
sahf
and
stos
mov
aad
jne
xlat
cmps
out
movs
fisttp
(bad)
xchg
arpl
pop
adc
cmp
fsubr
aam
lods
push
and
jnp
(bad)
pop
xor
sbb
or
inc
stc
movs
js
jmp
lea
jne
arpl
lea
mov
push
hlt
ss
add
pop
out
popa
cs
int
loop
push
call
or
mov
inc
mov
cmps
xchg
loop
sub
sbb
and
lock
mov
nop
adc
sbb
sbb
test
int3
ja
leave
mov
adc
stos
fs
test
std
fxch
adc
mov
xor
mov
js
test
pop
jbe
sbb
sbb
sub
adc
add
sub
ds
xor
mov
xchg
mov
addr16
push
loopne
jmp
aad
pop
jno
lock
jg
mov
jb
repnz
pusha
ins
(bad)
jmp
loope
pop
inc
(bad)
ret
jno
loopne
lahf
outs
stos
sahf
cs
jno
fs
pop
fisubr
cmps
dec
push
adc
into
outs
mov
scas
mov
lock
ficom
aad
test
adc
daa
mov
in
mov
inc
inc
mov
sahf
mov
push
sbb
push
ja
jle
xor
xlat
mov
jb
mov
pushaw
adc
in
mov
sub
shl
in
push
lods
aam
mov
lea
hlt
jae
xor
enter
add
mov
pushf
xchg
xor
push
in
add
out
das
and
cs
(bad)
jg
sbb
loopne
push
out
xor
fcom
pop
push
not
or
movs
stos
jp
fnsave
stos
aas
out
jmp
leave
sar
outs
sub
inc
sub
bound
enter
fwait
cli
out
mov
into
mov
mov
test
hlt
fstp
out
into
shr
fadd
mov
cmp
xchg
outs
mov
loop
cs
sub
push
mov
lods
jnp
popf
mov
or
test
mov
mov
repnz
push
imul
jo
lods
mov
pop
xor
je
arpl
pusha
dec
leave
adc
repz
add
mov
push
test
dec
mov
and
in
pop
les
and
fisttp
mov
jmp
(bad)
not
pop
dec
xlat
ret
cli
or
rol
icebp
jmp
mov
retf
test
add
out
inc
(bad)
loope
retf
hlt
fld
jp
pop
(bad)
retf
or
xchg
shl
ret
add
jmp
sbb
sbb
ds
add
cmc
cmp
mov
xchg
xor
fwait
leave
movs
loop
or
out
push
test
push
push
sahf
in
pop
in
(bad)
or
mov
outs
mov
add
cmp
dec
ret
pmuludq
ss
mov
mov
xchg
arpl
sub
mov
push
jl
cmp
xchg
push
add
test
push
cmp
iret
and
adc
xchg
xor
inc
ret
inc
pop
(bad)
imul
rcr
sub
rcl
or
xchg
jo
mov
dec
scas
mov
mov
rol
add
aas
call
sub
mov
add
or
jmp
test
mov
adc
mov
jns
xlat
scas
icebp
cmp
jb
push
jmp
sahf
xor
mov
jecxz
shr
leave
or
mov
lds
jo
in
fsubr
dec
xchg
add
rcl
jle
fs
scas
mov
push
cmp
into
push
stos
test
es
push
(bad)
out
add
mov
push
iret
out
mov
and
xchg
and
pop
mov
mov
sbb
jle
adc
sbb
sahf
cwde
cmp
out
stos
jle
inc
and
xor
sbb
push
sub
jnp
cs
cdq
push
popf
mov
dec
sbb
fs
aam
inc
gs
rol
jp
repnz
dec
pop
xchg
mov
loopne
int
loope
sub
test
pop
inc
sahf
(bad)
cmp
shr
or
xlat
ja
push
pop
mov
push
retf
sub
repnz
adc
pop
dec
jl
pop
xchg
sub
loope
xor
fwait
inc
xor
add
sahf
rcr
sti
sbb
push
xor
add
jno
or
jl
xchg
cwde
cmp
sbb
pop
iret
fwait
jp
nop
push
push
xchg
inc
inc
sbb
jmp
mov
ds
push
aam
sub
pop
pop
call
leave
inc
dec
fsubr
dec
mov
movs
(bad)
pop
or
jecxz
jmp
mov
jo
idiv
cmp
mov
(bad)
jne
or
in
in
fsubr
push
stos
inc
bound
adc
cmp
retf
jno
fiadd
cld
inc
ds
mov
ds
lods
inc
add
mov
stos
fcomp
cmp
rcr
mov
pop
sbb
out
inc
xchg
out
shr
adc
mov
xchg
sub
xchg
stc
pop
mov
adc
mov
movs
popa
aaa
(bad)
repnz
outs
jmp
stc
stos
(bad)
fcmovnb
loope
jb
inc
pop
out
in
aad
in
jo
mov
push
movs
shl
ja
pop
dec
and
pop
push
in
push
mov
or
leave
and
push
in
cmp
sub
xchg
pop
pextrw
data16
dec
cmp
shl
aas
or
cdq
add
jns
jmp
dec
test
lea
sti
iret
jo
sbb
out
dec
lods
xor
push
in
popf
pop
cmp
xchg
lea
add
fcmovne
arpl
push
sbb
ret
pop
add
push
stos
rcl
mov
js
sub
sbb
lahf
pop
test
xchg
or
mov
shr
adc
cdq
jmp
mov
dec
cmp
adc
mov
and
test
sbb
xchg
daa
dec
(bad)
enter
mov
ds
outs
js
sti
sbb
mov
loopne
mov
scas
aaa
mov
pusha
cwde
xchg
inc
mov
mov
pop
push
fadd
or
shr
in
sbb
or
mov
loope
mov
sbb
jle
jns
ins
mov
stos
enter
jno
adc
jmp
push
cmc
sbb
xlat
or
in
in
push
es
jno
test
push
jbe
push
dec
push
mov
xchg
lock
push
push
cmp
sub
push
pop
mov
pushf
lahf
push
retf
dec
lea
and
aam
jo
inc
call
sar
sub
std
jbe
dec
retf
aad
ror
mov
xchg
or
add
mov
fldenv
cs
in
and
sub
dec
popf
div
lea
ror
stos
int
pop
rcr
or
sbb
popa
sub
shl
(bad)
cmps
je
xor
xchg
cmc
stos
xchg
dec
jmp
fcom
das
xor
mov
neg
dec
xor
pushf
scas
sar
scas
hlt
clc
inc
(bad)
aas
es
mov
mov
adc
loope
sbb
sub
and
popf
jb
jo
pop
dec
sbb
(bad)
adc
lods
sub
scas
fs
aaa
pop
sub
sar
shl
das
sub
loope
jmp
stc
pop
int
nop
fisub
out
or
rcr
jle
or
cmp
pop
jge
sahf
scas
pop
imul
fst
dec
loope
clc
xlat
sbb
sub
sbb
push
or
xor
(bad)
out
ret
iret
sub
in
mov
mov
paddusw
retf
movs
jle
pop
call
cmp
xchg
pop
fst
mov
cmp
mov
mov
lahf
ds
ret
dec
mov
in
inc
push
cmp
cli
mov
fwait
add
push
jnp
leave
xchg
sbb
ja
jae
mov
and
add
aas
lds
hlt
dec
cmp
pop
mov
shr
jns
adc
or
mov
sbb
cmp
std
xor
popf
jnp
xchg
aaa
fcom
nop
neg
adc
xor
and
push
jb
sahf
and
or
pop
and
popa
lods
out
das
out
repnz
inc
push
(bad)
cmp
and
mov
fmul
aam
xchg
mov
lea
les
dec
inc
mov
pusha
out
cmp
jl
cmp
sbb
and
sbb
push
sub
sub
loope
cmc
dec
mov
shl
cli
jge
(bad)
and
fsubr
pop
popf
add
lods
dec
mov
stos
(bad)
adc
sbb
push
retf
js
jle
push
retf
lds
push
ret
sub
cmp
int3
mov
sub
adc
mov
repz
inc
cmc
retf
sub
pop
push
jae
mov
es
retf
push
add
mov
add
test
mov
add
pop
pop
cmp
push
push
jmp
daa
arpl
scas
mov
call
in
std
lods
lea
mov
xor
nop
xchg
inc
cwde
add
push
xchg
out
dec
les
cmp
scas
adc
out
sbb
xchg
mov
je
ds
dec
imul
loop
shl
daa
push
popa
lahf
out
inc
int3
push
sbb
pushf
jb
sbb
int
inc
in
sub
push
xor
pop
mov
jb
push
inc
push
enter
mov
out
sbb
cmp
mov
out
lock
adc
or
and
into
test
sahf
sbb
push
push
cmps
or
bound
pop
xchg
pop
pop
pop
aad
cwde
rol
jo
inc
dec
sub
xchg
and
push
xor
add
jmp
(bad)
push
and
sbb
dec
stos
push
jmp
jg
nop
cwde
ret
pop
inc
in
mov
xor
adc
(bad)
(bad)
inc
inc
stos
xor
leave
inc
adc
push
adc
dec
or
test
add
cmps
mov
inc
mul
cmp
dec
mov
ret
or
pusha
jns
(bad)
fidiv
out
mov
jne
jmp
int
and
js
out
cs
jne
imul
or
or
lds
rep
dec
shr
(bad)
cmp
cmp
(bad)
adc
lea
test
cmp
sub
scas
cld
aad
inc
sub
cmp
stos
push
gs
je
stos
aas
add
in
mov
sbb
xor
call
or
popf
push
push
outs
mov
push
mov
rcr
cmp
mov
dec
xor
iret
add
pop
adc
ret
out
ds
cmp
jne
push
push
int3
fstp
xor
mov
cli
inc
icebp
and
mov
jle
or
mov
push
push
mov
add
test
fisub
jl
aaa
cmp
cmps
add
inc
or
mov
xor
ds
jle
call
ins
mov
mov
ja
jb
mov
push
xor
xor
ins
push
loopne
loop
fcomip
mov
sub
sete
sahf
mov
mov
repnz
xor
push
or
push
retf
dec
out
mov
repnz
jl
sub
into
adc
jecxz
into
mov
fbstp
enterw
sbb
dec
loop
pop
jg
pop
xchg
mov
test
(bad)
neg
mov
fld
ins
js
ret
cmp
adc
fisttp
shl
imul
(bad)
push
(bad)
(bad)
add
jne
loopne
pop
jo
bound
dec
clc
or
jle
aaa
lock
pop
out
fisttp
jno
jo
imul
push
sub
add
dec
xor
test
call
mov
stos
or
fs
xlat
push
adc
cmp
mov
(bad)
stos
push
out
cmp
cmp
(bad)
and
cwde
and
mov
pop
inc
(bad)
int3
test
xchg
sub
add
fwait
in
jge
add
or
jge
mov
scas
fidiv
jbe
test
popa
ds
retf
pushf
out
cld
aad
ins
gs
pop
push
xchg
adc
mov
clc
inc
(bad)
nop
aas
js
fwait
sbb
xchg
cld
into
pop
fistp
dec
pop
neg
cmc
pop
das
test
es
and
popa
mov
xchg
or
and
dec
stc
icebp
pop
addr16
push
or
aas
test
(bad)
sbb
ret
js
mov
sub
jmp
cmp
or
cmp
jge
xchg
push
sbb
xor
pop
sbb
imul
mov
push
or
fst
xor
mov
call
pop
jb
fsubr
jno
mov
pop
outs
jmp
movs
add
(bad)
or
pushf
loopne
mov
xchg
mov
xchg
clc
and
add
(bad)
push
xchg
test
arpl
cmp
out
out
daa
jnp
mov
and
mov
pop
jno
sbb
add
inc
or
xor
and
(bad)
sub
xchg
cs
xchg
in
(bad)
je
lds
js
mov
add
test
mov
fisub
in
and
inc
mov
lods
jg
inc
add
jne
xchg
shr
repz
mov
rol
add
push
xchg
enter
and
aas
mov
sbb
push
xchg
xor
jecxz
mov
and
iret
xor
mov
mov
shl
fcomp
out
je
pop
sub
adc
add
sub
pop
sub
xor
ja
std
aad
fimul
xchg
sub
mov
test
fld
push
jmp
add
pop
pop
ror
jl
movs
jo
jle
out
mov
leave
sub
into
sub
inc
cmps
add
cmps
add
pop
test
leave
mov
inc
fimul
cs
mov
jns
jnp
inc
cs
xor
test
mov
shl
(bad)
into
lock
imul
xor
pop
out
mov
(bad)
push
xor
xchg
outs
xchg
add
push
fmul
out
in
scas
loope
mov
mov
mov
push
repnz
cmp
aad
cmps
(bad)
std
daa
or
sub
xor
fdiv
iret
add
out
adc
adc
lea
call
push
sub
pop
xchg
ins
in
sti
not
call
inc
ins
pop
test
mov
stos
sahf
push
jne
and
xor
xor
loop
sbb
loop
ds
test
inc
sbb
jmp
push
sar
add
sbb
scas
scas
(bad)
pop
fiadd
out
xchg
cmp
xor
out
xor
mov
das
jg
xchg
push
push
cmp
repnz
xchg
es
adc
cdq
jp
xchg
sti
cmp
aam
ret
mov
xlat
stos
aaa
ss
in
adc
inc
loope
int
pop
add
xchg
push
add
aaa
enter
rcr
(bad)
mov
xchg
push
lahf
hlt
lods
dec
mov
sub
pop
mov
jecxz
aam
dec
push
(bad)
dec
retf
vrcpps
repz
sub
push
jns
popa
pop
mov
popf
mov
adc
scas
cwde
add
movs
pushf
mov
mov
je
ds
inc
das
aaa
iret
dec
mov
mov
fs
fist
xchg
push
lea
and
jmp
clc
loopne
hlt
pop
nop
xchg
leave
pop
(bad)
aas
pop
fwait
sbb
mov
xchg
sub
test
enter
cwde
rcr
mov
std
and
jle
adc
mov
out
iret
xchg
cmp
cdq
pop
jge
clc
icebp
clc
xchg
jmp
push
jne
hlt
mov
inc
js
cs
sbb
or
inc
mov
mov
dec
cmp
jl
loop
mov
pop
das
in
mov
outs
(bad)
shl
adc
adc
mov
and
fdiv
ret
data16
sbb
cmp
pusha
into
sub
mov
add
and
dec
ret
mov
fcomp
scas
ss
rcr
into
and
xchg
imul
push
mov
pop
fwait
imul
adc
and
lea
xchg
out
and
adc
int3
dec
not
and
ror
pop
jnp
(bad)
(bad)
leave
mov
(bad)
xchg
jb
push
push
mov
mov
xor
jb
retf
push
in
jge
jl
mov
rol
jb
mov
das
mov
cmps
xchg
xchg
call
inc
jecxz
mov
loop
mov
shl
jnp
mov
in
scas
cmp
xor
ins
push
mov
retf
or
xor
js
enter
call
xor
xchg
push
pop
test
mov
lock
f2xm1
jl
jl
xchg
mov
bound
lds
iret
lea
add
ins
ss
ror
fadd
jp
dec
rcl
xchg
nop
mov
adc
xor
in
pop
pop
pop
lock
jnp
mov
sub
push
rol
loopne
in
mov
ss
adc
fwait
xchg
mov
adc
inc
cmc
leave
cmp
mov
fcomp
or
fst
lock
adc
add
dec
js
pop
mov
push
ja
fmul
shl
jo
pop
fbld
arpl
icebp
push
jo
or
(bad)
std
push
fsub
push
mov
imul
jae
aam
xor
fwait
xor
push
sub
push
inc
in
mov
adc
pop
mov
sbb
push
xchg
cld
push
(bad)
js
mov
(bad)
daa
adc
pop
inc
sub
and
cmp
fidivr
movs
mov
push
rol
sbb
mov
je
dec
or
push
adc
pop
pusha
ret
arpl
or
arpl
sbb
pop
ficom
push
or
fmulp
mov
xchg
bound
or
adc
push
out
or
ins
inc
popf
mov
inc
sbb
push
and
inc
jae
pop
jo
jmp
mov
mov
pop
pop
add
pop
in
das
aad
pop
mov
inc
shl
shl
pop
mov
retf
push
iret
test
ss
sub
enter
cdq
xor
adc
or
push
or
or
leave
cmc
xchg
into
ja
mov
(bad)
or
xchg
pop
(bad)
repnz
and
rcl
sub
pop
leave
and
mov
mov
xor
add
inc
add
jno
das
adc
push
mov
mov
inc
mov
xchg
mov
clc
lods
int
sbb
rol
icebp
sbb
shr
push
jg
sub
fcom
cli
sbb
adc
imul
stos
pop
lock
and
in
mov
enter
popa
mov
shl
aam
mov
pop
test
lahf
cmp
out
pop
xchg
mov
cmp
call
inc
add
inc
test
test
das
inc
loope
out
mov
adc
xor
push
and
jp
(bad)
mov
add
dec
ins
in
xchg
out
jno
add
cdq
test
lds
inc
cmp
sub
repz
pop
or
inc
mov
mov
rol
scas
add
aam
jne
inc
jmp
ja
xor
bound
inc
dec
push
sub
scas
push
jmp
jecxz
mov
das
cwde
retf
inc
aaa
mov
push
pop
ins
repnz
push
test
cmp
and
out
mov
pop
das
enter
and
xor
pop
dec
mov
ficom
push
in
pop
mov
push
mov
cli
push
pop
test
adc
cmp
clc
(bad)
add
mov
push
sub
popf
arpl
cmp
adc
ja
std
xchg
jo
cmp
ror
ror
aam
lahf
push
js
loopne
sub
mov
pop
ds
mov
sbb
out
fld
mov
and
or
sub
inc
pop
les
mov
mov
cmps
ss
ins
sti
pop
mov
arpl
sbb
pop
jge
pushf
jmp
aad
ins
gs
mov
das
mov
dec
ds
dec
jmp
adc
mov
repz
add
jb
scas
stos
push
push
fcomp
mov
scas
cld
xchg
dec
imul
repnz
pop
and
mov
add
xchg
xchg
sbb
imul
in
sahf
jle
sbb
ficomp
push
pop
jo
nop
dec
jg
dec
stos
mov
adc
fadd
data16
mov
mov
int3
cmps
hlt
mov
dec
jne
(bad)
and
sbb
inc
mov
xchg
pop
aam
(bad)
repz
(bad)
xor
iret
add
enter
imul
ds
dec
xor
jae
fcom
into
and
sar
pop
cwde
sub
push
jecxz
rol
(bad)
mov
xchg
pop
push
cmp
mov
xchg
and
dec
adc
retf
sbb
sub
sub
push
push
dec
push
sbb
stos
cmp
pop
inc
push
cwde
shl
rcr
jle
or
jmp
pop
inc
push
mov
fxch
mov
cdq
sub
inc
mov
leave
mov
(bad)
das
pop
pusha
xlat
push
cs
inc
mov
sub
mov
sub
pushf
push
retf
or
test
rcr
inc
fistp
jo
lds
pushf
test
dec
push
xchg
pop
and
adc
adc
pop
jg
call
pop
sbb
inc
sar
jp
imul
scas
std
ficomp
mov
mov
shr
push
pop
ja
jp
iret
aas
xchg
test
or
outs
dec
aaa
sbb
mov
cmp
in
cmp
lods
xchg
dec
jle
xchg
jo
xchg
(bad)
icebp
sub
mov
int3
fnstsw
mov
addr16
aam
jae
inc
pop
test
mov
scas
scas
jp
in
inc
sub
repnz
push
popa
xor
mov
scas
xchg
jae
data16
mov
pop
je
ret
cmp
(bad)
in
sbb
ds
or
push
fs
jl
sub
ins
jmp
test
addr16
mov
pusha
movs
ror
mov
inc
adc
jne
sti
inc
xor
pop
hlt
pop
(bad)
pop
pushaw
push
iret
mov
push
and
jl
cmp
shl
mov
repz
scas
add
mov
sbb
jp
(bad)
outs
mov
sahf
sbb
push
jb
ja
ins
push
or
bts
lods
or
in
cwde
mov
mov
arpl
mov
mov
gs
xchg
lds
loope
mov
pop
cld
sahf
xchg
xor
mov
mov
ret
daa
dec
and
pop
popf
leave
xor
sahf
ja
ret
sbb
pop
in
pop
mov
aad
mov
movs
mov
dec
xor
ja
lods
dec
lahf
mov
fwait
jne
pop
push
fcmovu
in
or
jno
int3
inc
xchg
xor
pop
sbb
ins
fs
ret
xor
push
popa
inc
pushf
and
lea
dec
rol
xor
ret
ret
jl
movs
jl
(bad)
fdiv
push
retf
fldenv
xor
dec
in
push
fist
fimul
push
mov
sub
pop
cmp
dec
movs
or
pop
xchg
jp
push
cld
dec
inc
mov
mov
and
hlt
fist
(bad)
lock
iret
cmp
daa
dec
add
add
adc
mov
pop
cli
push
mov
loopne
popa
mov
test
retf
int
sub
jmp
xor
je
mov
sbb
enter
cmp
jl
loopne
mov
jmp
mov
(bad)
sub
jne
add
sbb
enter
mov
and
sub
cmp
cmp
pop
sbb
movs
push
cli
xchg
xchg
push
dec
mov
je
std
cmp
dec
jecxz
mov
ja
mov
push
inc
sbb
xor
lds
inc
pop
test
stos
ins
add
push
loopne
stos
fisttp
scas
clc
or
in
stos
out
imul
add
ret
cdq
mov
cld
xchg
bound
push
jg
adc
xor
out
(bad)
cmc
jmp
(bad)
xor
push
fsubr
test
data16
or
xchg
outs
push
xor
xor
test
dec
lock
out
adc
gs
dec
push
sbb
xchg
pop
shl
gs
call
sbb
jns
sub
pop
mov
or
sbb
or
pusha
jae
loop
sbb
fiadd
(bad)
cmp
mov
imul
jmp
xor
push
imul
mov
push
push
lods
and
mov
mov
std
mov
sub
pop
inc
mov
lods
or
jo
fdiv
cli
add
bsr
mov
dec
in
add
sbb
in
pop
lds
pop
mov
aas
xchg
daa
push
xchg
add
enter
mov
into
lods
imul
xor
ficom
xchg
shl
pop
sbb
int
mov
cmp
push
js
mov
sub
lahf
push
cwde
cmp
(bad)
ret
imul
imul
jmp
pop
xor
and
adc
adc
dec
je
inc
xor
popa
bound
ins
xchg
xchg
mov
shl
call
cmps
mov
setnp
lods
sahf
pop
mov
pusha
and
addr16
cli
mov
into
or
clc
sbb
data16
mov
call
inc
jg
cwde
test
jecxz
sub
ins
dec
and
cld
(bad)
mov
sbb
push
jno
xchg
dec
xor
sbb
mov
mov
pop
mov
mov
je
pop
xor
pop
mov
iret
test
or
int
cld
je
call
sti
out
packsswb
aad
sbb
mov
pop
push
popa
popa
lods
ss
or
addr16
rcr
xchg
sbb
dec
je
into
mov
jmp
loope
das
mov
jle
out
xor
mov
je
add
dec
jmp
and
fmul
popa
movs
in
ret
in
push
test
cmp
or
or
adc
adc
nop
push
cmp
out
fsubr
in
arpl
scas
es
rcl
mov
cmp
dec
mov
fs
add
dec
lahf
mov
jg
in
adc
int3
mov
cli
push
mov
push
popf
and
pusha
xchg
lods
repnz
add
shr
neg
iret
push
pop
call
sub
fdivr
dec
enter
lods
mov
cwde
lock
dec
sub
jge
sub
fcomi
jae
sbb
retf
push
mov
je
jbe
mov
call
or
les
not
mov
bound
inc
mov
hlt
dec
repz
out
mov
pop
mov
xchg
mov
pop
and
icebp
dec
inc
xchg
ds
jp
inc
pop
jae
sar
add
mov
mov
mov
retf
mov
or
and
cmp
fld
push
fs
div
or
mov
daa
hlt
pop
repnz
jecxz
hlt
push
pop
sbb
inc
mul
fimul
adc
inc
inc
ret
sar
mov
adc
mov
retf
mov
retf
loope
loopne
jns
or
pop
add
in
(bad)
xchg
mov
neg
test
xor
inc
cs
sar
xchg
add
push
sub
lods
test
leave
popf
dec
(bad)
mov
rcl
xchg
inc
xchg
push
in
mov
ucomiss
jmp
stos
cmp
test
(bad)
and
ret
xchg
jecxz
mov
cmp
iret
cmp
lea
jns
jne
scas
fwait
out
retf
loope
pop
aad
mov
test
mov
jno
retf
mov
in
lds
inc
mov
and
pop
xlat
cmp
fmul
icebp
xor
add
dec
loopne
xchg
sub
push
adc
fndisi(8087
pop
stos
xchg
sbb
mov
outs
test
jmp
xor
test
retf
sti
pop
shl
jbe
frstor
pop
(bad)
add
mov
adc
lock
in
xchg
and
push
and
ds
ja
clc
jmp
jmp
(bad)
push
xchg
cmp
and
int3
mov
fimul
pop
add
or
push
xchg
adc
je
cmp
add
ret
lahf
pop
aas
aad
movs
fistp
mov
mov
sub
ins
dec
out
test
in
mov
rcl
jmp
fld
mov
inc
leavew
mov
jae
pop
inc
aam
sti
xor
sub
pop
cdq
dec
adc
rcr
movs
arpl
push
adc
(bad)
into
xor
and
or
dec
jno
das
jmp
adc
jno
int
imul
pop
cmps
mov
rcl
aas
mov
jo
sar
and
test
in
adc
mov
xor
jnp
xor
jnp
ja
ja
cmp
xchg
loope
cmp
mov
xor
jmp
out
in
add
xlat
call
and
shr
in
xor
nop
pop
jns
ins
nop
fisttp
mov
cmp
cmps
and
loop
push
dec
pop
mul
push
das
sbb
mov
push
(bad)
push
dec
push
iret
and
cli
inc
fdivr
retf
test
dec
xor
jnp
add
adc
sbb
(bad)
jl
aam
aas
fistp
pop
fbstp
icebp
daa
sub
rol
cmp
mov
out
dec
nop
sbb
mov
jl
repnz
daa
mov
xor
and
add
dec
jne
and
mov
(bad)
push
pop
ins
sub
pop
(bad)
lods
adc
ja
test
pop
bound
out
ror
cdq
mov
mov
cmp
xor
icebp
xchg
fimul
push
push
addr16
inc
fdiv
cs
cwde
mov
pusha
add
jae
ins
push
mov
jae
pop
sbb
push
jecxz
adc
sbb
cmpps
stc
in
mov
test
pop
add
arpl
adc
mov
data16
xchg
mov
sub
jo
retf
xchg
cdq
mov
jmp
jl
mov
and
(bad)
lahf
and
mov
dec
xchg
test
cmp
push
mov
adc
and
push
rol
(bad)
scas
aaa
(bad)
xor
push
pop
inc
ret
xor
inc
sub
ds
(bad)
retf
dec
sbb
(bad)
xor
in
movs
xor
or
cmps
xor
mov
in
jp
and
sub
(bad)
imul
sub
add
call
std
add
xlat
push
loopne
push
aad
push
push
and
fdiv
inc
dec
adc
add
pop
jl
arpl
adc
push
lds
hlt
aad
sub
lods
sub
pop
sub
(bad)
test
fsubp
cmps
(bad)
js
sbb
icebp
push
xchg
aam
aam
and
or
xor
int
push
xor
xchg
mov
rcl
fimul
sub
aaa
sub
push
movs
pushf
hlt
pop
add
pop
ror
js
cmp
scas
(bad)
test
jle
out
cmps
es
(bad)
mov
mov
fwait
inc
cmps
mov
mov
mov
jg
add
push
push
pop
in
cmp
addr16
in
ja
and
hlt
in
mov
push
out
test
das
repz
mov
lahf
sbb
and
add
cmp
dec
pop
and
pop
or
or
jbe
jo
cmp
out
das
or
inc
cmp
ins
or
pop
sub
test
popa
cdq
mov
mov
sbb
pop
call
add
inc
gs
data16
and
js
pop
cdq
sub
dec
test
sbb
inc
mov
mov
jecxz
dec
inc
imul
dec
int3
inc
ja
or
in
push
in
cwde
inc
test
test
adc
not
and
push
out
adc
out
mov
out
ret
adc
scas
scas
jns
icebp
or
out
mov
mov
lea
add
sbb
das
xchg
jbe
enter
sbb
fidivr
jns
test
out
xchg
mov
add
adc
ror
sbb
or
pop
mov
push
inc
pop
pop
mov
mov
scas
(bad)
rcr
rcl
icebp
sti
inc
pop
jb
daa
cmps
add
push
jae
pop
or
mov
mov
movs
mov
xlat
mov
dec
lds
cmp
pop
mov
jmp
mov
loop
test
push
(bad)
ds
daa
loop
shr
lahf
push
enter
cmp
pop
movs
jae
and
or
dec
shr
and
movs
scas
jmp
popa
xchg
lds
cmc
adc
(bad)
fld
xor
mov
iret
add
or
jo
push
ret
xchg
inc
fidiv
push
xchg
inc
rcl
in
rcr
xlat
jmp
dec
adc
adc
loop
in
xor
adc
fwait
jl
inc
shr
out
nop
mov
fwait
push
fwait
push
or
stc
imul
adc
pop
jecxz
fwait
and
cmp
add
aaa
or
fnsave
cwde
push
adc
inc
repz
out
ja
push
movs
arpl
xor
push
mov
sbb
call
stos
xor
xchg
jle
fwait
xchg
pop
(bad)
or
cmp
dec
(bad)
enter
dec
and
mov
fsubr
and
pop
jge
je
mov
inc
in
fsin
add
fcom
inc
in
cmp
pop
push
cmp
add
ins
(bad)
jnp
ins
dec
and
std
std
inc
sar
(bad)
lock
cmps
int3
sbb
and
sbb
push
int3
int3
imul
mov
jg
or
jb
outs
mov
xchg
adc
push
pop
outs
push
scas
mov
add
loopne
cld
ror
pushf
scas
jno
sar
dec
push
addr16
bound
mov
mov
imul
ins
mov
cli
ins
out
pop
leave
mov
push
inc
imul
cmp
xchg
mov
std
and
aas
jl
cmps
pop
jle
ja
push
mov
sub
into
int
or
hlt
jmp
sbb
psrad
xchg
loope
std
mov
(bad)
iret
jb
jno
add
ret
int
mov
sbb
mov
xor
jnp
popf
jae
loope
shr
pop
cwde
hlt
outs
test
xchg
cmp
jno
add
sbb
repz
fsubr
stc
sub
sbb
fist
retf
jecxz
rcr
jb
rcl
jae
xchg
push
sahf
push
ss
xchg
mov
push
add
mov
in
inc
(bad)
sub
ja
ss
enter
repnz
add
cmp
shl
std
jnp
push
aaa
xchg
push
cs
sub
xchg
mov
cld
imul
scas
sbb
ins
sub
retf
xchg
imul
je
xchg
push
and
int
clc
sbb
jmp
xlat
movs
mov
push
push
cmp
xchg
bound
clc
push
inc
ret
xchg
test
inc
jns
jle
pop
dec
loope
inc
mov
xlat
rcr
test
popf
dec
inc
dec
fmul
and
jnp
dec
push
fwait
(bad)
data16
mov
cmp
jl
fnstenv
je
sti
sbb
push
jg
and
sub
or
pushf
and
mov
in
sti
ja
test
sahf
sbb
and
gs
icebp
cdq
inc
adc
aad
pop
lds
fstp
jp
adc
sub
add
mov
imul
cmp
adc
lahf
ins
jmp
jne
test
push
jle
sbb
dec
lahf
in
hlt
mov
fidivr
ffree
xor
cld
push
shl
mul
mov
mov
ins
adc
mov
mov
and
mov
cmps
and
nop
hlt
xor
mov
xor
mov
jmp
pop
and
push
mov
js
xor
jno
pushf
sti
jecxz
(bad)
fld
daa
push
adc
adc
jbe
ja
iret
stos
push
lods
inc
inc
jp
das
cmp
sub
inc
pop
stos
xor
add
mov
movntq
or
and
mov
mov
mov
iret
in
aad
push
inc
repnz
(bad)
mov
ret
movs
jno
mov
mov
mov
ss
sub
div
gs
xchg
into
je
push
in
sub
push
mov
dec
mov
pop
jl
xchg
inc
xchg
imul
jmp
and
out
repnz
movs
lods
pop
pop
movs
pushw
xchg
rcr
push
push
shl
scas
xor
adc
in
sbb
fmul
ss
xor
fwait
jb
sub
mov
xor
or
fs
dec
or
pop
add
movs
mul
lock
mov
(bad)
adc
ins
jge
ja
mov
mov
in
mov
ds
cli
sbb
enter
in
test
and
adc
mov
cmp
into
pop
stc
inc
arpl
pushf
cs
push
xor
outs
leave
je
jb
(bad)
imul
iret
mov
push
mov
rcl
scas
test
loop
dec
mov
addr16
ins
mov
ret
push
xchg
dec
sbb
or
xchg
lods
stos
call
ins
mov
mov
xchg
add
adc
push
sti
pop
mov
xchg
or
xchg
cdq
push
mov
pop
xchg
xchg
repz
imul
fild
ret
mov
test
rcl
push
jmp
sbb
jo
cdq
mov
into
add
mov
pop
jge
xchg
dec
sub
popf
sub
jnp
shr
je
cmp
outs
into
and
ins
in
je
and
shl
(bad)
push
adc
cli
adc
ficomp
mov
popa
add
dec
and
mov
and
ja
test
and
sub
and
and
mov
mov
jns
inc
aam
cmp
mov
add
add
cmc
or
fidiv
add
div
or
cmp
ja
outs
out
ror
sahf
mov
xor
dec
stos
ret
add
mov
shl
mov
sub
mov
mov
mov
jbe
xlat
lea
call
jno
cmp
sbb
in
add
sahf
sti
add
pop
shr
aas
out
add
dec
mov
gs
or
jnp
in
scas
(bad)
gs
dec
mov
push
aas
adc
das
ja
nop
xchg
or
mov
vpavgb
sbb
sub
mov
test
movs
outs
mov
sub
sahf
rol
push
pop
(bad)
scas
cdq
pop
sbb
inc
add
les
sbb
adc
mov
mov
sub
cmp
ss
call
mov
std
sar
nop
sti
popf
pop
in
xor
aaa
adc
mov
imul
fs
xlat
pop
cmps
adc
retf
inc
adc
idiv
aad
in
jno
fdivr
push
lahf
ja
into
addr16
das
xor
inc
push
sub
loop
sbb
xor
xchg
fcmovu
jg
(bad)
fcomp
inc
sub
mov
ror
xchg
retf
pusha
xchg
loope
je
cmps
iret
xchg
sar
push
sti
adc
lock
inc
pop
inc
lock
or
sbb
mov
lahf
loopne
aam
or
add
lods
jl
mov
bnd
stos
pusha
shl
sbb
push
js
mov
dec
pushf
imul
add
ins
jmp
das
xlat
gs
and
outs
jmp
add
jns
dec
sbb
push
inc
rol
cmp
(bad)
mov
pop
cmovg
retf
xchg
fs
cwde
push
push
jge
in
push
daa
mov
or
mul
mov
fwait
int3
jl
mov
jae
inc
pusha
or
(bad)
les
and
lahf
inc
jle
mov
xchg
xchg
js
pop
popf
aas
push
sbb
loop
sub
dec
or
mov
pop
leave
xchg
ins
sbb
stos
in
mov
push
xor
int3
xchg
adc
pop
cld
cmp
nop
sub
add
dec
mov
cmc
call
mov
std
dec
pop
mov
pop
mov
inc
les
mov
cmc
push
test
popa
mov
or
or
imul
or
jmp
mov
sbb
sub
pop
int
inc
push
mov
lds
popa
fmul
shr
inc
test
mov
les
mov
iret
xchg
sar
lea
mov
jg
xchg
mov
(bad)
cli
inc
fiadd
pop
or
adc
xlat
fiadd
xchg
(bad)
push
pusha
call
into
inc
sbb
pop
add
mov
adc
pop
imul
mov
stc
push
bound
mov
cmp
pushf
mov
aam
cmp
cwde
cmp
bound
jno
push
jmp
fwait
call
mov
cmp
mov
mov
mov
dec
(bad)
adc
test
pop
pusha
cmps
mov
retf
outs
jmp
out
sahf
call
retf
and
shl
dec
jbe
adc
push
cdq
ja
std
jno
cmps
push
(bad)
jg
sub
xchg
push
xchg
idiv
xor
xchg
mov
sar
cmp
pop
jmp
(bad)
stos
add
scas
sbb
retf
cld
div
mov
ss
(bad)
mov
std
movs
inc
fld
int3
pop
fmul
mov
pop
and
mov
fild
pop
js
call
sahf
ret
ins
sub
pop
xor
imul
push
dec
sbb
aaa
sub
cmps
mov
out
sti
mov
cmp
inc
and
and
sbb
(bad)
int3
adc
push
mov
jo
int3
stos
sbb
pop
es
sub
xchg
fnstenv
jmp
fwait
inc
mov
mov
stc
adc
retf
mov
jp
xor
mov
sar
pusha
out
jns
mov
ss
es
jmp
hlt
ja
ret
or
arpl
es
mov
inc
mov
cmpxchg
xchg
das
sub
mov
mov
and
inc
repnz
xchg
push
sub
adc
sbb
pop
dec
test
xor
stos
jge
out
out
mov
xchg
jb
pop
mov
daa
jle
push
jne
loope
lods
mov
movs
fild
cmp
jmp
or
add
test
add
in
inc
call
popf
jo
adc
and
int
and
or
sbb
and
(bad)
std
mov
dec
jb
or
mov
xor
mov
push
sbb
inc
jo
and
lea
cwde
and
mov
jb
lock
jno
mov
mov
imul
jg
mov
dec
push
into
push
sbb
movs
adc
int3
add
mov
jnp
data16
imul
cmp
bound
sbb
adc
pop
addr16
loope
inc
sbb
xchg
xchg
jb
sbb
ja
sbb
cli
jmp
pop
sub
pop
mov
pop
push
mov
mov
mov
bound
scas
jne
mov
cld
mov
mov
cmc
cmp
leave
(bad)
cmp
ins
dec
fs
mov
pop
xor
sub
jo
xor
xor
add
mov
mov
push
or
sub
loope
sbb
pop
inc
or
jno
sub
ins
sub
imul
push
loop
dec
xchg
xchg
fptan
cmp
push
je
jns
icebp
pushf
je
pop
adc
mov
(bad)
and
mov
retf
xlat
pop
sub
jno
push
and
jne
repz
cmps
mov
call
cmp
or
out
(bad)
cmp
call
adc
mov
pop
pop
sbb
dec
into
idiv
xchg
test
pop
cmp
gs
div
cmp
loop
and
add
jmp
mov
cmps
cli
not
add
push
fwait
outs
sbb
cmps
in
popf
mov
repnz
sbb
out
push
retf
out
mov
dec
pop
mov
or
pop
ins
sub
rcr
xor
jb
repz
sub
out
cmp
cmc
mov
or
adc
jno
jp
xchg
mov
in
mov
lods
jmp
sbb
pushf
push
xor
popf
jle
cmp
inc
enter
popf
fldcw
int3
fisub
into
jg
cld
fadd
pushf
pop
ss
jecxz
in
aas
cdq
sub
push
jns
xor
dec
repz
(bad)
mov
js
ins
cwde
sbb
pop
mov
inc
cmovs
pop
aam
loopne
cmp
add
fincstp
dec
pusha
in
std
sar
mov
add
scas
or
dec
js
sub
inc
pop
push
js
or
xor
ins
add
push
push
push
jns
cmc
mov
jp
rcr
sbb
psrad
pop
xor
loope
xchg
sub
inc
or
mov
out
mov
mov
fiadd
pusha
sti
jle
test
nop
mov
int3
leave
gs
sub
scas
xchg
dec
fidiv
mov
aaa
inc
ret
jmp
and
pop
inc
dec
inc
mov
lds
inc
cmp
fcomp
stos
add
(bad)
data16
scas
outs
push
dec
jmp
retf
dec
fld
dec
mov
arpl
fadd
push
js
lahf
push
stc
push
(bad)
fmulp
mov
pop
into
pop
jecxz
inc
imul
sahf
sub
popf
and
pop
out
dec
(bad)
cld
dec
out
repz
push
aam
or
ds
inc
popa
scas
test
sub
repz
gs
jo
dec
xor
jl
inc
imul
das
(bad)
jg
sub
test
repnz
pushf
sub
dec
jae
mov
gs
mov
ret
int3
mov
ds
jge
cmp
fimul
aaa
test
bound
mov
cwde
sahf
inc
aaa
fld
dec
xor
fwait
out
test
imul
xchg
dec
outs
cld
(bad)
push
pop
arpl
jnp
xor
(bad)
jmp
movs
int3
xchg
xchg
xor
mov
fbld
push
addr16
imul
or
lock
test
iret
aad
fdiv
and
push
nop
inc
scas
inc
fwait
sub
out
imul
(bad)
or
sub
cld
je
(bad)
xor
jle
push
push
push
and
imul
mov
sahf
pop
xlat
es
dec
(bad)
cli
ss
stos
and
sbb
out
rcl
sbb
jo
jecxz
pop
adc
xchg
out
retf
das
out
imul
inc
jb
add
adc
call
enter
push
sub
dec
jecxz
push
sbb
adc
(bad)
push
enter
push
fisttp
jbe
sbb
dec
sub
mov
push
dec
es
test
or
pop
int3
int
fisub
xchg
xor
stos
inc
mov
and
pop
xor
push
shl
(bad)
call
lds
aad
out
mov
xlat
add
and
inc
das
dec
lds
xor
push
loope
or
sub
and
jb
push
stos
cmp
adc
lea
pop
pop
xchg
jg
mov
xchg
sub
imul
xchg
adc
xchg
sbb
jg
fucomp
xchg
fdivr
(bad)
cmp
in
leave
jnp
mov
jp
out
xchg
pop
dec
cmp
repnz
(bad)
pop
outs
cmc
sahf
movs
pushf
mov
arpl
jg
cli
inc
push
cmp
lock
and
pop
arpl
or
retf
or
mov
ins
pop
mov
and
js
ins
mov
movs
push
imul
sub
repz
cmp
stos
fmul
mov
stos
sbb
sbb
xor
xor
hlt
loop
aam
xchg
stc
jmp
mov
fnsave
loope
aam
pusha
cmc
and
out
mov
mov
mov
and
dec
imul
outs
cmp
rcr
push
mov
int
sub
mov
js
sar
leave
dec
pop
call
cmc
test
into
pop
xor
ja
aaa
movzx
sub
and
int
ins
(bad)
mov
add
ror
dec
pop
enter
xchg
xchg
shl
or
retf
push
js
adc
jb
addr16
and
dec
or
mov
repnz
nop
push
push
aaa
call
es
aam
fist
jmp
pop
neg
jne
mov
jbe
(bad)
lods
xlat
mov
(bad)
xchg
int3
sbb
mov
js
lods
or
fisttp
xor
repz
sbb
clc
shl
jmp
outs
xchg
mov
in
add
jne
into
sub
inc
(bad)
into
repz
and
test
mov
or
mov
test
push
pop
mov
or
mov
mov
mov
mov
xchg
sub
jg
inc
sbb
data16
in
dec
or
jecxz
(bad)
imul
cmp
add
call
outs
mov
jb
and
outs
mov
add
push
loop
xchg
jns
(bad)
popa
cmp
inc
pop
icebp
mov
pusha
in
mov
mov
lock
in
dec
mov
repz
shl
stc
add
sbb
idiv
(bad)
aam
cli
jnp
lods
ds
xchg
add
hlt
push
imul
mov
xchg
xchg
mov
cmp
test
lods
popa
dec
jmp
(bad)
sbb
ret
xor
pop
sub
add
cmps
data16
add
aad
jge
movs
test
cwde
pop
out
pop
aam
fcom
test
pop
les
bound
xchg
es
arpl
nop
push
cmp
pop
sar
adc
sti
aam
popf
jns
cld
lods
dec
sub
or
shr
mov
adc
xchg
fadd
inc
aaa
imul
(bad)
int3
or
out
inc
(bad)
xchg
or
stc
fs
test
mov
inc
mov
ins
push
fcmovb
mov
repnz
ror
ins
std
mov
add
leave
dec
(bad)
fidivr
int
push
push
xchg
jecxz
add
push
sar
add
push
pop
ins
sub
jno
cwde
pop
call
retf
add
bound
loop
pop
jne
data16
scas
in
add
out
stos
lds
pop
pop
cmp
inc
jge
push
lds
test
sbb
pop
sbb
pop
retf
arpl
call
or
in
in
in
jp
loope
dec
popf
(bad)
mov
mov
stos
jb
scas
dec
je
cmp
daa
iret
into
and
iret
mov
test
lods
lahf
push
pop
shl
in
push
push
sbb
call
(bad)
ficomp
adc
lea
int3
dec
mov
add
adc
xchg
in
sub
ficom
push
je
stos
add
sbb
mov
adc
sbb
pop
ret
xor
hlt
adc
daa
in
jb
in
out
dec
popf
int
push
mov
mov
bnd
jae
fisttp
(bad)
adc
lods
adc
repnz
rol
pop
sub
push
sti
xchg
(bad)
mov
jbe
shl
leave
cmps
frstor
or
jmp
xor
jb
sbb
inc
xchg
cmp
jne
mov
fistp
cmc
scas
ins
les
xor
in
add
imul
or
push
stc
into
in
aad
shl
pop
retf
mov
mov
cmp
stos
and
mov
xor
icebp
ficomp
out
into
inc
(bad)
int
or
loopne
mov
movs
dec
std
sbb
(bad)
sti
fistp
bound
pop
add
mov
ja
add
aas
mov
popf
mov
ror
(bad)
std
jae
cmp
ret
jns
sbb
cmc
xor
scas
sti
jl
test
and
inc
pop
dec
cmp
push
jecxz
scas
fwait
jmp
lods
push
out
pop
fsubrp
jmp
jne
jb
sbb
sbb
xor
xor
or
dec
pop
sbb
push
popf
push
fdiv
mov
ret
adc
jno
movs
bound
fstp
fcom
xlat
sbb
je
push
xchg
push
mov
and
pop
fistp
cmc
shl
(bad)
popf
stos
pop
jg
lahf
scas
iret
mov
mov
std
mov
stos
jne
in
or
js
xor
test
xor
mov
dec
dec
in
dec
jecxz
das
push
pop
test
xor
shl
mov
mov
inc
jp
pop
in
sbb
lods
imul
jne
jo
adc
loope
add
xor
xchg
leave
jle
fbstp
pop
data16
push
dec
scas
adc
mov
test
mov
into
pop
xchg
add
cmp
inc
jle
xlat
mov
fsub
xchg
cmp
cmp
aam
xchg
js
push
push
cmp
pop
cmp
pop
outs
xchg
and
cmps
adc
fs
mov
cmp
dec
sbb
push
int3
jge
ret
xchg
mov
xor
sti
xchg
inc
test
pop
pop
jp
das
mov
mov
nop
mov
cmps
jecxz
or
push
in
or
inc
es
sahf
in
jg
ret
lahf
cmps
add
inc
xor
lea
(bad)
push
call
cld
fs
add
cld
push
sbb
or
cmp
mov
mov
sub
mov
jne
mov
push
fdiv
(bad)
stos
icebp
sub
mov
(bad)
adc
xchg
arpl
sub
(bad)
dec
ja
inc
iret
addr16
int3
xor
frstor
(bad)
dec
repnz
fdiv
fwait
ret
or
sar
inc
cmp
xchg
(bad)
mov
or
in
push
xor
test
push
and
pop
repnz
fs
lock
sbb
add
and
jp
adc
push
gs
(bad)
mov
xor
inc
jne
mov
mov
fadd
add
xchg
(bad)
scas
in
mov
ror
das
les
mov
je
push
clc
sub
adc
ins
stc
dec
or
(bad)
(bad)
pop
std
ja
ins
adc
pop
sub
mov
scas
and
jmp
cmp
stos
enter
xchg
inc
jmp
test
mov
call
cmp
xchg
mov
mov
dec
sbb
pop
cmp
sbb
jae
je
xor
sbb
push
lahf
in
mov
stos
sbb
enter
je
sbb
cs
inc
dec
or
mov
adc
scas
ins
cmp
mov
nop
jp
push
sbb
mov
adc
pop
and
les
jmp
les
iret
adc
jno
adc
pop
dec
mov
mov
into
sbb
push
movs
bound
mov
sub
inc
ins
mov
ss
ret
cmp
push
popf
xor
cmp
movs
nop
jle
out
rcl
dec
mov
cmp
sub
mov
mov
xor
js
int
pop
cmp
test
in
xor
hlt
pmulhuw
jmp
lock
fild
mul
aam
addr16
jle
shr
in
or
sbb
push
test
sbb
sbb
dec
inc
or
push
or
imul
sbb
fiadd
std
mov
adc
div
cmp
stc
in
and
sub
mov
test
scas
jne
jmp
(bad)
jmp
leave
mov
lahf
xchg
xchg
jnp
stos
div
sar
rol
mov
jl
popw
or
cmp
sub
sub
ins
and
mov
in
sub
sub
lahf
sbb
arpl
ja
aad
or
push
daa
sti
push
pop
or
mov
xor
jnp
cmp
jg
and
je
inc
jae
movs
test
push
xchg
jmp
out
push
mov
and
push
js
daa
xchg
mov
mov
mov
mov
mov
int
inc
or
mov
mov
rcl
xchg
out
out
add
push
fild
enter
imul
push
ss
test
leave
inc
cmps
cmc
jmp
mov
movs
shl
jge
add
(bad)
sub
outs
ins
sbb
es
inc
push
loopne
hlt
pop
cmc
in
fwait
mov
xchg
mov
fmul
push
push
(bad)
enter
mov
dec
pop
jge
cld
scas
retf
out
xchg
(bad)
pop
jbe
ss
push
rcl
mov
xchg
xor
pop
push
xchg
jno
int
rol
shr
fdiv
sub
inc
shr
cmc
jmp
retf
in
es
loop
and
dec
pushf
lds
mov
sub
pop
cld
ficomp
mov
jno
push
bound
dec
sub
mov
mov
imul
outs
test
aaa
xchg
add
inc
xor
fstp
imul
sahf
cmc
add
xlat
lahf
ds
pop
dec
push
and
aam
mul
xchg
jno
icebp
xchg
jo
mov
push
mov
retfw
aad
mov
pop
jbe
add
or
cmc
loop
cmc
dec
dec
(bad)
pop
push
xchg
int3
mov
js
cwde
push
fucomip
outs
sti
mov
fldcw
jmp
and
into
and
xor
repz
dec
mov
(bad)
cmp
in
lea
stc
xchg
adc
popa
lahf
lods
jo
push
add
jmp
push
mov
xchg
cmp
push
je
(bad)
pop
retf
sub
or
aam
cmp
rcr
cmp
aam
mov
jno
mov
push
lods
test
pop
popf
inc
xchg
je
cdq
loopne
sbb
pop
xor
movs
cmps
push
ror
jmp
push
jmp
cmp
movs
cmp
add
xchg
outs
cld
ja
imul
push
xchg
fs
aad
gs
dec
shl
scas
or
test
imul
push
sub
and
or
retf
popf
fadd
retf
out
sub
int3
push
ins
pop
fadd
imul
sub
ins
cmp
out
neg
in
mov
cmp
cli
fdivr
scas
bound
dec
mov
call
or
es
je
xor
pop
in
inc
loopne
repz
jae
push
jae
add
sub
cli
sbb
lea
xor
pop
xor
adc
fdivr
movs
imul
mov
imul
or
mov
(bad)
push
retf
retf
outs
mov
jmp
mov
cdq
mov
in
or
mov
addr16
pop
pop
xchg
ss
(bad)
sar
(bad)
jmp
push
lods
ret
test
jnp
push
loopne
push
mov
in
add
loopne
xor
dec
pop
mov
ret
lea
mov
lea
pop
clc
shl
arpl
jp
mov
mov
mov
pop
les
sbb
add
mov
mov
add
sub
adc
sahf
cmp
jb
and
repz
sar
in
pushf
cli
dec
sub
xchg
xor
cmps
dec
mov
jmp
sub
stc
push
call
jne
sub
jl
sub
jns
sub
mov
mov
data16
jmp
and
test
push
jno
and
push
cmp
cmp
mov
out
and
cld
fucomip
sbb
push
ret
enter
loope
movs
test
int
(bad)
adc
sti
imul
imul
mov
arpl
mov
sub
int3
xchg
push
jmp
mov
emms
sbb
xchg
ret
jl
lods
pushf
pop
into
lahf
push
jnp
jae
xchg
xchg
xor
sub
pop
mov
mov
push
jl
mov
in
out
out
test
xor
(bad)
out
inc
cmp
mov
(bad)
xor
fcmove
mov
mov
repnz
popa
lock
mov
hlt
push
cmp
xor
or
mov
mov
hlt
cmps
je
adc
sti
and
out
sub
jg
scas
lock
sbb
adc
sti
cmp
mov
pop
cmps
aad
repz
cmc
mov
cmp
sub
cmp
dec
mov
fisttp
outs
retf
fist
pushf
adc
and
mov
popf
pop
dec
mov
jl
sti
out
dec
xchg
and
and
cmp
call
push
mov
dec
and
ja
add
jle
aad
and
mov
stos
mov
ds
int
out
pop
cmp
push
inc
mov
push
pextrw
mov
sbb
out
mov
lock
test
add
mov
call
ret
fwait
xor
xor
sbb
cmp
data16
mov
mov
cmp
push
in
push
push
add
mov
in
mov
add
movs
adc
push
movs
or
add
clc
mov
push
mov
sbb
jnp
sar
out
iret
retf
out
xchg
or
arpl
stos
and
mov
xchg
dec
ds
je
test
cdq
inc
xor
test
call
sahf
pop
jae
mov
sbb
js
and
test
mov
adc
mov
sub
sbb
sbb
je
or
pop
ja
fild
and
jg
not
test
movs
add
jnp
lods
mov
std
cwde
cmp
sbb
movs
push
call
add
ror
inc
or
mov
jae
and
jmp
pop
push
test
sar
jecxz
clc
outs
pop
stc
xor
imul
les
adc
aad
fucomi
push
mov
mov
imul
jp
sbb
leave
icebp
xor
mov
push
push
inc
inc
mov
sub
icebp
adc
pusha
mov
and
jle
repz
add
test
or
pop
les
js
inc
mov
repz
ret
mov
(bad)
mov
adc
push
jg
push
cld
lahf
sbb
scas
mov
inc
xchg
retf
je
xor
or
dec
and
sub
pop
xchg
imul
ins
cld
mov
fcmove
mov
add
loop
pop
test
arpl
int
sub
div
sbb
es
call
jnp
imul
in
mov
pop
and
xchg
(bad)
adc
xchg
xchg
enter
xchg
out
push
sar
fldenv
(bad)
fld
sahf
icebp
xchg
pusha
mov
push
cmp
dec
mov
push
popf
cmp
adc
daa
and
lods
sahf
retf
pop
nop
mov
movs
ror
add
repnz
xchg
add
adc
stc
in
daa
adc
(bad)
int3
int
dec
adc
xchg
stc
cwde
xor
or
dec
jb
retf
push
inc
inc
push
out
dec
cmp
lods
ja
lods
(bad)
sbb
std
add
sbb
gs
inc
push
sti
inc
cmps
mov
xchg
jae
mov
push
add
invd
jae
shl
punpckhdq
int3
pop
cwde
adc
cdq
test
mov
mov
ins
jb
cdq
mov
and
push
retf
mov
dec
data16
adc
int
push
mov
scas
in
clc
and
and
xor
lods
mov
fnstsw
and
xor
push
test
push
mov
mov
xor
scas
cmp
push
jo
mov
es
pop
test
adc
fisttp
sub
outs
fidivr
addr16
pop
cmp
xchg
bnd
lea
fld
leave
inc
ret
div
mov
cs
pop
ins
leave
xor
stos
jbe
clc
test
nop
dec
inc
aad
mov
xor
push
repnz
ret
push
cmc
mov
leave
push
aam
fs
daa
sub
and
sti
xor
cmp
cwde
sbb
(bad)
fcomp
mov
shl
push
mov
adc
pop
jmp
lahf
out
push
retf
(bad)
aaa
psubsb
pop
jge
adc
xchg
dec
clc
adc
in
sti
fisub
int3
mov
pop
out
jns
mov
and
add
push
mov
inc
mov
inc
shr
inc
cmc
jns
push
(bad)
lods
xchg
adc
add
push
xor
mov
adc
xor
imul
push
mov
icebp
sub
(bad)
dec
aas
lods
test
dec
in
arpl
pop
add
sub
mov
stos
shl
ror
jae
and
stos
scas
adc
jmp
sahf
cmp
mov
ret
jl
ja
loopne
in
nop
sub
adc
aas
gs
and
ds
mov
popf
push
dec
xchg
lock
test
jo
pusha
pop
pusha
mov
sub
out
inc
(bad)
pop
pusha
dec
cmp
icebp
adc
adc
jb
ja
push
mov
aas
mov
add
mov
jbe
push
sti
xchg
sbb
shl
ss
das
xchg
ja
pop
nop
xor
adc
jmp
data16
or
mov
push
rcl
cmp
sub
fdivp
mov
mov
aam
daa
dec
in
jmp
out
ja
sub
cld
fcom
fld
pop
jmp
and
inc
xor
adc
xchg
ret
mov
test
xchg
leave
loop
mov
push
pop
pusha
and
pop
gs
sar
addr16
mov
or
data16
ins
pusha
out
sbb
cmp
movs
movs
icebp
ret
push
repz
aam
inc
jp
xchg
movs
bnd
sti
mov
inc
jmp
mov
(bad)
push
and
movs
cmc
mov
das
xor
jne
std
mov
pop
fwait
mov
sbb
jns
(bad)
mov
xor
cmp
cmp
lahf
cmp
loopne
shr
popa
jge
test
inc
push
por
es
and
and
jle
gs
fucomi
adc
shl
push
inc
xor
ud0
inc
rcl
sub
cld
fisub
jae
cmp
cmp
out
adc
(bad)
or
sbb
adc
cli
jle
or
mov
bndldx
and
inc
cld
test
lods
jae
push
repnz
pop
sbb
cmp
cli
fadd
sahf
shl
imul
or
rcr
shl
jo
outs
pop
add
(bad)
(bad)
leave
cmp
or
fcmovnbe
cmp
xor
jno
icebp
ja
jmp
jmp
out
out
fs
fist
push
inc
aaa
dec
scas
call
loop
add
ja
and
repz
mov
fild
outs
fidivr
scas
mov
jnp
lock
aad
(bad)
call
pop
sub
in
mov
cmps
jg
dec
mov
jg
inc
lds
pop
fucomp
jle
iret
jo
inc
daa
mov
cmp
dec
inc
(bad)
lock
js
sbb
push
or
push
pop
xchg
(bad)
push
shl
push
xor
and
xchg
xor
hlt
jnp
pusha
popf
imul
mov
cli
inc
dec
xchg
fs
retf
and
out
sbb
rcl
push
test
fcmovnb
rol
dec
mov
ins
inc
xor
ins
pop
push
mov
jae
cwde
sahf
cmp
imul
and
scas
jnp
mov
or
hlt
(bad)
aam
and
cwde
jo
ins
es
fisttp
dec
pop
sbb
jg
cmp
jb
mov
cmp
lods
je
std
jmp
or
test
mov
popf
imul
das
retf
dec
cmc
sub
pop
pushf
ret
mov
and
outs
data16
clc
xor
jmp
ror
adc
push
and
repz
clc
dec
shr
stos
pushf
mov
jne
sbb
stos
pop
mov
pop
enter
rol
mov
jo
inc
adc
lds
(bad)
out
sub
push
lahf
sub
into
xor
xor
out
inc
adc
sub
xor
(bad)
loopne
xchg
int3
inc
jbe
(bad)
div
fmul
sub
nop
mov
xchg
xchg
jle
mov
stos
or
xchg
arpl
lods
cmps
push
aad
mov
jns
ins
(bad)
sbb
add
(bad)
adc
rol
or
inc
inc
mov
or
ret
jnp
fs
ret
adc
jg
out
enter
arpl
bound
lahf
rol
sbb
pop
pop
leave
mov
aam
pop
fdiv
std
inc
jecxz
adc
repnz
ja
sub
push
push
pusha
std
sub
and
lods
and
push
mov
cld
das
push
retf
xchg
addr16
nop
fcmovu
pop
scas
sbb
pop
adc
loop
rcr
test
push
xchg
push
pushf
jns
inc
inc
cld
jp
arpl
adc
iret
in
test
mov
or
pop
add
sub
ror
out
mov
or
cmp
fsubr
add
jge
rol
sbb
enter
shr
pop
ret
mov
mov
pop
pusha
loop
popf
add
call
add
jne
mov
je
out
int
mov
daa
adc
or
popa
mov
mov
repz
push
push
nop
leave
idiv
pop
xchg
sub
daa
xchg
inc
daa
jg
mov
(bad)
jb
or
imul
xabort
aam
fcomi
(bad)
data16
rol
add
jp
sbb
jg
inc
pop
mov
fadd
add
inc
sub
in
sub
sub
lods
ss
aaa
aad
(bad)
xchg
xor
ins
fwait
push
or
add
pop
xchg
pop
addr16
inc
push
pop
inc
xchg
(bad)
xchg
loopne
pop
les
ds
out
cmp
fwait
sub
mov
cmc
int3
xchg
or
aam
ins
sbb
addr16
jg
loop
sub
cmp
icebp
xor
sahf
test
xchg
iret
sahf
rcl
imul
repz
inc
popf
data16
fcmove
mov
adc
push
pop
(bad)
xor
es
dec
shl
mov
add
hlt
les
pop
jle
add
cmp
mov
mov
ins
call
imul
cld
push
xchg
into
lahf
mov
mov
mov
mov
sar
lods
pminsw
fwait
mov
pop
jecxz
cmp
xchg
xor
cmps
fstp
xchg
fnsetpm(287
arpl
mov
add
sbb
shl
or
aad
dec
imul
mov
cmp
cs
stos
push
jbe
iret
fsubr
jmp
adc
in
and
add
mov
mov
lahf
pushf
cmp
xchg
adc
push
cmp
jmp
outs
push
cdq
out
je
jae
call
cs
das
inc
cmp
add
out
in
call
pop
jo
gs
and
test
mov
icebp
mov
or
push
add
add
xchg
add
adc
iret
and
sub
xchg
pusha
jmp
and
not
jle
leave
jmp
xchg
push
pop
das
and
fcmovnu
xor
dec
adc
xchg
sub
xchg
ror
lea
adc
clc
jmp
push
aam
pop
jmp
pop
(bad)
push
cmps
ja
sahf
in
pop
ds
push
and
or
push
push
sbb
push
cmp
inc
sbb
in
rcl
and
ja
mov
fbld
clc
ret
cmps
jmp
nop
sar
add
xor
cmp
push
cmp
aad
ds
mov
sbb
ret
ficomp
push
lds
sbb
sbb
xor
rol
shl
aas
and
into
jp
loop
push
cmp
pusha
scas
(bad)
loop
out
jmp
xlat
rol
mov
jecxz
(bad)
imul
sbb
sahf
add
mov
repnz
in
cmc
push
fsubr
fistp
push
jge
mov
sub
fwait
pop
stc
lock
add
aam
inc
adc
scas
pop
test
jnp
xor
ins
rcl
inc
icebp
pop
mov
mov
inc
bswap
mov
test
xor
jge
sub
and
xchg
xchg
clc
js
popf
pushf
push
test
icebp
sub
dec
bound
mov
sub
lahf
and
rcl
inc
sbb
xor
in
push
xchg
or
mov
cmc
aad
jge
push
fnsetpm(287
into
mov
lahf
(bad)
jnp
mov
jnp
ret
mov
pop
stc
push
xor
adc
pop
ror
pop
xor
pop
inc
lea
fwait
push
xor
or
int
adc
xchg
cmp
jg
(bad)
push
mov
shl
and
sbb
cmp
jl
adc
pop
or
outs
xor
sub
fisttp
cli
mov
jmp
and
pop
dec
pop
cli
sub
mov
push
xor
addr16
jae
mov
push
pop
cmp
jle
xchg
out
js
(bad)
adc
neg
cmp
js
jecxz
in
cmp
cmp
inc
push
in
imul
mov
adc
outs
je
call
iret
js
adc
mov
or
lock
sub
xchg
mov
mov
mov
inc
ror
fwait
mov
or
sub
aaa
sub
ja
test
xchg
add
stc
loope
lods
cmc
fcomp
mov
or
adc
inc
or
scas
sub
mov
push
imul
rol
std
cwde
mov
mov
stos
popa
inc
mov
sbb
push
stos
ins
xor
dec
inc
enter
les
pusha
std
fucomp
ja
imul
rcr
test
repnz
aaa
rcr
jge
mov
(bad)
pop
xor
scas
push
mov
jecxz
or
retf
cmp
test
imul
push
mov
cwde
sahf
or
ret
push
or
test
sub
jno
cmp
call
sub
adc
add
mov
stos
inc
sub
in
and
cmp
outs
int
ret
test
sub
ja
test
pop
popf
stc
inc
lea
mov
test
fnsetpm(287
(bad)
or
inc
outs
pop
lods
je
fcom
xor
mov
das
push
ins
dec
sar
cmp
pop
and
push
ficom
mov
in
mov
push
iret
ret
cmp
pop
js
sbb
pop
xor
call
dec
inc
adc
loopne
mov
pop
pop
ret
pop
daa
pop
push
fnsave
xor
mov
(bad)
scas
and
mov
jns
lea
mov
scas
adc
adc
je
ins
aam
icebp
mov
lods
and
or
xchg
and
cs
xor
inc
mov
mov
mov
inc
lds
or
fcomp
or
cdq
jecxz
lods
add
xchg
adc
sbb
mov
bound
jne
inc
retf
jo
jb
push
pop
fisttp
int
bound
xchg
sbb
ins
mov
push
adc
lahf
ret
stos
test
cmp
sbb
push
or
loope
add
outs
mov
jne
push
mov
dec
movs
push
popa
fdivr
or
fist
cmc
jmp
jg
outs
pop
push
iret
sbb
ror
dec
xlat
mov
or
pop
aam
xor
jbe
fmul
fs
inc
mov
inc
test
pop
in
in
pop
stos
sub
shr
pop
mov
pop
pop
inc
rcl
les
and
jne
jae
jmp
sub
sahf
mov
or
and
mov
mov
mov
fistp
add
xchg
jg
fnsave
scas
int
fs
loope
cli
lahf
sbb
add
outs
es
add
lahf
iret
add
cld
(bad)
sbb
adc
sahf
leave
inc
sub
ret
sbb
push
pop
fisttp
sbb
fnstenv
xchg
mov
or
add
xor
dec
push
push
scas
sar
xchg
imul
jnp
xor
sar
sbb
es
out
inc
xchg
movs
(bad)
std
sti
arpl
dec
add
das
mov
loope
or
out
and
(bad)
or
into
aas
push
popa
jl
mov
mov
sub
pop
or
pop
add
dec
push
pop
mov
mov
cmp
dec
int3
adc
pushf
repz
dec
add
pop
cdq
pop
and
push
loope
ret
shl
xor
and
(bad)
repz
icebp
add
daa
mov
dec
or
xchg
add
add
cwde
sub
push
mov
jmp
(bad)
mov
fdivr
xchg
(bad)
daa
in
retf
jp
call
popf
rcr
mov
add
cld
jne
xlat
pusha
dec
sysexit
sbb
das
popa
jge
mov
and
fistp
sti
fist
rcl
into
scas
shl
inc
pop
mov
test
popf
fisub
push
pop
dec
rep
cmp
cmps
aaa
and
lahf
test
inc
out
loopne
xor
(bad)
fs
cmp
inc
aas
aaa
into
push
je
sbb
in
jmp
or
fdivr
jmp
lds
test
inc
aad
test
mov
xchg
pushf
scas
push
adc
call
sub
mov
test
mov
ins
repnz
iret
js
add
ds
mov
pop
and
jns
push
test
mov
test
inc
clc
sub
adc
stos
inc
call
jbe
mov
les
push
not
rcr
out
adc
mul
ret
and
in
mov
pop
pop
popa
out
dec
ds
xor
cdq
retf
in
cmp
push
pop
jmp
fiadd
lea
aaa
dec
and
xchg
pop
lds
sbb
lea
fist
idiv
popf
push
cmc
sbb
(bad)
cmp
popf
sbb
xor
cwde
idiv
loope
or
cmps
xor
jae
pusha
xor
data16
mov
dec
(bad)
(bad)
jp
sub
gs
in
(bad)
xchg
aam
aaa
push
cmp
xchg
sbb
jo
pop
jae
inc
rcl
xchg
stos
repz
lods
enter
or
aaa
add
addr16
mov
loopne
dec
jp
mov
push
or
jae
push
pop
(bad)
stc
and
sbb
sar
mov
arpl
in
lods
arpl
mov
lods
xchg
clc
retf
xchg
ins
or
pop
(bad)
repnz
fmul
out
jbe
xor
sbb
mov
aas
push
sub
jae
pushf
jecxz
xchg
push
push
pusha
neg
test
adc
int
mov
jge
xchg
retf
in
clc
loopne
push
push
inc
aas
jnp
xchg
jne
retf
(bad)
lock
jle
and
ss
pop
shl
push
fcomp
mov
addr16
rcr
mov
add
movs
adc
repnz
cmc
repz
cmps
idiv
xor
loopne
inc
dec
sahf
ret
dec
addr16
jl
aaa
es
cmps
jnp
std
mov
out
jmp
pop
nop
mov
jae
sbb
jmp
out
(bad)
dec
xchg
sub
imul
add
scas
(bad)
sub
inc
jle
or
cmp
mov
in
push
stos
mov
mov
ror
lods
fbstp
and
and
and
in
and
jp
sub
ss
cwde
pop
gs
repz
in
fs
lahf
mov
les
mov
scas
loope
jmp
lock
ror
jecxz
xlat
cmp
lea
out
(bad)
(bad)
xor
jp
aas
retf
jns
sub
or
call
(bad)
xor
dec
sbb
out
(bad)
rcl
dec
in
cmps
mov
mov
jns
xor
(bad)
(bad)
inc
push
mov
sti
shr
mov
adc
add
ret
xor
imul
dec
imul
adc
ret
call
cmc
test
mul
cs
shr
xchg
call
mov
jbe
xor
adc
retf
out
cmps
and
sub
scas
or
fs
je
adc
cmp
mov
and
push
lds
jl
xchg
xchg
sbb
push
ja
sbb
fild
xchg
jb
cmp
punpckhdq
adc
xor
pop
jg
adc
fist
mov
fs
xchg
int3
push
sahf
lods
mov
scas
push
aas
jne
jae
xlat
movs
jo
dec
and
sbb
test
push
and
(bad)
cmp
add
mov
sar
sar
mov
retf
sub
ja
not
gs
xchg
not
data16
push
xor
int3
pop
ja
sub
mov
sub
cmps
ds
stos
fistp
xor
sbb
stos
enter
ja
jg
ja
ins
sbb
cmps
shl
inc
inc
stos
test
xchg
sub
dec
jg
mov
(bad)
fdivrp
cmp
outs
inc
hlt
adc
nop
mov
mov
jb
pop
nop
dec
jbe
lahf
adc
fs
add
fidiv
pop
adc
jg
adc
aas
pop
dec
ficom
cmps
fistp
dec
xchg
inc
push
pop
retf
xchg
xor
pop
lds
int3
std
adc
loope
jb
and
sub
sub
into
out
cli
push
cmp
mov
outs
sbb
mov
push
dec
push
cmp
cmps
inc
int3
cmp
mov
loopne
jbe
xchg
jmp
pop
xchg
and
jge
(bad)
lods
aad
or
and
add
ror
jae
mov
leave
(bad)
mov
test
sub
cdq
mov
imul
mov
(bad)
aad
aad
outs
retf
dec
mov
addr16
xor
shr
inc
mov
jl
jmp
inc
sti
shl
arpl
and
mov
out
xor
xchg
jbe
lahf
into
jmp
dec
lds
adc
cli
in
data16
cdq
inc
je
ror
cmp
push
ins
adc
test
inc
ja
jae
or
rcl
cmp
js
out
pshufw
cmp
xor
clc
and
loop
pop
pop
jno
loop
pop
call
mov
xchg
xchg
jnp
pop
mov
add
jmp
sbb
shr
dec
adc
xchg
push
mov
stos
icebp
sbb
xor
sbb
mov
add
push
and
xor
int3
enter
cmp
movs
push
stos
lds
mov
and
mov
ret
push
(bad)
jp
pop
push
fbstp
iret
test
ror
lahf
mov
outs
sbb
div
ins
cli
dec
jp
rcr
mov
dec
or
rol
clc
mov
cmc
add
popa
add
cmp
scas
rcr
loop
inc
dec
mov
movs
popa
fldenv
dec
push
test
add
mov
retf
xchg
ficomp
mov
repz
retf
pop
movs
inc
lds
and
fcompp
or
lea
sbb
push
add
outs
xchg
loopne
stos
sbb
and
push
sub
mov
mov
and
mov
icebp
call
test
test
or
cmc
xchg
and
shr
push
fidiv
push
pop
dec
test
aad
cs
test
jo
aad
fdiv
ret
js
and
inc
jp
dec
(bad)
in
push
adc
call
xchg
and
(bad)
push
mov
cmp
nop
imul
in
dec
cbw
(bad)
fdivr
fucomp
cmps
ins
into
ficom
lds
jecxz
loope
xchg
pushf
mov
xor
xchg
aad
add
pop
mov
sub
jl
push
xchg
inc
jnp
cmp
and
mov
sbb
js
xchg
mov
leave
sub
aad
frndint
pop
push
cmp
push
loope
push
dec
adc
sar
loopne
sbb
xchg
mov
mov
das
jg
popf
mov
xchg
mov
push
cmp
sub
popa
daa
mov
int3
push
adc
shl
daa
xchg
inc
sahf
mov
adc
adc
repz
inc
push
idiv
icebp
(bad)
mov
mov
xlat
stc
push
push
and
pop
mov
mov
ins
adc
les
push
movs
das
pop
jb
inc
lahf
mov
iret
leave
idiv
mov
scas
cmp
sbb
xchg
outs
fs
cmps
dec
pop
repz
sar
mov
popf
lds
mov
sub
jle
daa
and
ins
mov
into
jmp
data16
mov
(bad)
arpl
test
adc
ss
pushf
jo
mov
xor
cmp
scas
sub
xor
rcr
cmp
jnp
cmps
xor
imul
stos
adc
xchg
lods
dec
xchg
xor
push
mov
mov
mov
sub
inc
mov
sub
xor
out
movs
xchg
xchg
xor
daa
or
push
push
adc
sbb
ins
addr16
aad
lods
dec
rcl
call
push
mov
shl
repnz
nop
in
stos
hlt
cmp
das
jns
mov
popf
mov
mov
retf
sar
in
dec
popa
rol
or
add
xor
inc
xchg
xor
sahf
lea
sub
js
inc
mov
xor
dec
imul
idiv
shr
jnp
in
xlat
xchg
aam
jg
sbb
push
lahf
setge
ja
jle
cmp
fbld
jle
mov
test
sbb
cli
data16
movs
push
xchg
stos
lea
pop
or
sahf
ror
and
jecxz
retf
add
cmp
fiadd
pop
test
xor
pop
icebp
cmp
pop
movs
or
leave
adc
lock
popa
pop
dec
fild
inc
in
aaa
lods
clc
sbb
jnp
mov
jno
mov
jge
(bad)
fidiv
xchg
adc
mov
push
xchg
sahf
pushf
mov
stos
fcomp
adc
pop
loope
ins
outs
sub
mov
mov
shl
icebp
js
ds
and
adc
nop
add
loope
mov
jb
dec
xchg
xchg
xor
dec
lock
and
jbe
mov
rcr
lods
cli
enter
iret
in
inc
fisttp
std
dec
call
ss
outs
xchg
dec
pop
jmp
dec
mov
adc
mov
jmp
push
xlat
pop
jb
push
sub
in
(bad)
je
jns
mov
sub
mov
jge
stc
xor
movs
or
add
jle
push
push
pop
xor
xchg
mov
sub
xchg
xchg
pop
in
iret
xor
mov
icebp
rol
cmp
pop
aas
push
rcl
fcom
sub
xchg
sbb
add
push
mov
push
mov
push
movs
call
sbb
pop
fs
pop
enter
jmp
out
inc
push
test
out
and
mov
mov
hlt
jo
adc
pop
mov
jnp
test
aas
lds
adc
xchg
adc
pusha
stc
out
nop
call
jne
(bad)
mov
or
pop
sahf
sar
stos
mov
(bad)
xchg
aas
movups
lods
mov
rcl
or
push
dec
jmp
adc
jbe
cmps
cmp
aas
pop
xlat
mov
push
pop
jmp
out
xchg
aad
movs
jmp
ffree
sti
test
mov
xchg
mov
adc
sub
sbb
or
or
mov
cmc
mov
and
adc
cmc
movs
sub
mov
scas
sbb
aaa
jp
out
push
lahf
(bad)
retf
lods
mov
(bad)
ret
adc
push
ret
sub
pop
fcmovne
mov
test
jo
add
xchg
cmc
add
pop
(bad)
enter
sahf
add
mov
mov
hlt
loop
add
fwait
les
test
imul
iret
out
out
inc
sbb
dec
jne
rcl
in
lods
jne
sbb
push
inc
ja
(bad)
aaa
push
push
lock
sbb
xor
js
or
es
cmps
xor
in
imul
mov
movs
jbe
lock
mov
test
sub
lock
pop
mov
xchg
ficomp
icebp
(bad)
das
stc
push
xlat
cld
aas
dec
and
or
mov
ror
inc
mov
ror
cld
pusha
sub
mov
jmp
mov
cdq
in
mov
mov
inc
test
sbb
retf
sub
xchg
jne
push
or
dec
popa
or
sub
mov
xchg
jmp
jge
(bad)
xchg
push
dec
clc
push
mov
scas
lds
mov
movs
lahf
stos
pop
dec
mov
popa
fwait
xchg
adc
jmp
cmp
push
xor
pop
(bad)
aad
stos
xchg
and
push
or
sbb
push
shl
xor
shl
je
out
jmp
fisttp
xor
mov
in
sbb
mov
(bad)
cs
sahf
jecxz
mov
mov
lods
(bad)
enter
mov
mov
xor
fbld
imul
pop
inc
pushf
xchg
push
loopne
ss
inc
iret
(bad)
push
ret
xor
sbb
adc
xchg
add
leave
sbb
fisttp
loope
mov
sub
jg
cmp
call
mov
xor
outs
mov
push
xchg
and
popa
mov
push
mov
scas
add
xchg
pop
movs
sub
cmps
xor
test
dec
test
mov
adc
daa
cmp
loope
push
cmp
imul
test
std
pop
loop
inc
mov
and
test
xor
in
mov
jg
pop
add
or
xchg
in
mov
loopne
inc
jmp
fst
jns
push
mov
xchg
fsub
ret
push
out
arpl
xchg
cmp
mov
dec
fidiv
dec
cmp
stos
dec
mov
adc
cmp
xor
lods
push
mov
mov
les
xor
in
sbb
lods
fcmovbe
adc
push
jns
mov
aam
aas
and
in
fwait
push
cmps
das
mov
je
les
jge
out
or
ffreep
mov
mov
and
repnz
jp
or
clc
add
xor
stos
mov
xchg
(bad)
cdq
pop
adc
pop
cmp
adc
inc
jmp
xchg
jg
adc
fsubr
add
or
mov
stc
nop
push
fdiv
inc
call
in
mov
mov
sbb
or
pop
test
sbb
test
push
fstp
sub
jne
neg
cmp
je
xor
jg
cmp
xchg
xchg
pop
clc
pop
rol
cmp
cs
mov
retf
mov
outs
out
out
int
scas
xchg
cmp
(bad)
icebp
fs
cmp
test
push
lahf
and
or
iret
dec
mov
fld
add
xor
out
shl
xor
ret
jmp
leave
cli
shl
adc
push
clc
add
jb
outs
or
push
and
sub
dec
stos
and
in
mov
(bad)
and
push
popf
es
and
cli
jae
mov
jl
adc
fsub
dec
cwde
shr
mov
sar
dec
lock
xlat
bound
xchg
cmps
(bad)
js
and
cli
mov
pop
or
mov
push
sbb
push
inc
popa
rcl
and
push
in
imul
addr16
pop
cs
retf
jbe
pop
inc
movs
je
mov
jo
or
cmp
fstp
inc
mov
sub
ss
inc
aam
test
mov
jo
hlt
inc
aad
out
cmp
xor
cmp
fmul
(bad)
imul
out
(bad)
stos
mov
xor
mov
bound
push
xchg
and
data16
stc
ret
xchg
outs
mov
outs
adc
cld
sub
sub
sub
loopne
push
jmp
dec
pop
loope
retf
mov
cld
inc
pop
popa
enter
and
pop
jg
pop
bound
and
add
push
pop
fisub
mov
jmp
test
inc
sbb
data16
ror
jmp
cbw
adc
fwait
ss
jge
outs
shl
mov
and
sub
pop
cmp
push
add
xor
sbb
add
call
cmp
fdivr
lods
(bad)
mov
inc
in
or
loop
rcl
xor
popa
and
int3
push
retf
scas
adc
xchg
jmp
mov
call
cmp
jno
push
call
dec
test
retf
sub
sbb
or
mov
add
fs
mov
cmps
add
pusha
mov
pushf
pop
jle
sub
into
and
push
xor
stc
and
sbb
enter
cmp
jl
mov
cld
inc
mov
push
push
mov
xor
cmovp
cmp
nop
pop
jb
sbb
sbb
lea
and
fstp
test
pop
jo
xchg
or
in
jb
jecxz
out
imul
push
mov
sbb
or
mov
int
in
pop
add
jp
mov
dec
mov
or
and
rol
in
ret
ret
out
fst
cmp
scas
push
test
sbb
int
add
shl
pop
xchg
mov
fnsave
jle
cs
call
jb
cmc
mov
xchg
cmp
mov
hlt
mov
and
add
jb
fistp
(bad)
enter
pop
push
pop
or
ja
adc
mov
enter
mov
lea
sub
dec
(bad)
mov
add
pop
mul
add
into
cmp
xchg
dec
jns
js
push
mov
or
repz
cmp
sti
test
sbb
popf
repz
hlt
sbb
ficom
(bad)
dec
sbb
jbe
sti
add
pavgb
test
lock
adc
in
mov
ds
icebp
pop
stos
scas
pop
rol
test
push
jg
sub
loopne
push
xor
test
xor
cmp
ja
push
adc
ret
mov
pushf
stc
dec
das
jns
test
adc
aam
(bad)
test
fimul
scas
movs
cmc
sub
in
jbe
xchg
lahf
mov
add
out
or
sbb
inc
je
cwde
fdivr
cs
ins
dec
lods
(bad)
(bad)
test
sbb
dec
jae
and
in
ins
and
dec
pop
mov
or
xchg
test
add
jle
jecxz
cmps
sbb
bnd
sub
mov
repz
pusha
xor
fwait
xor
push
(bad)
or
inc
(bad)
xchg
out
xchg
add
sub
fldl2t
pushf
aaa
dec
or
jns
xlat
int3
adc
adc
xor
sub
mov
cmp
retf
dec
pop
cs
test
repnz
imul
pusha
or
aas
and
call
add
mov
mov
pop
into
pop
jl
adc
cmc
cmp
(bad)
sub
in
xchg
shr
sub
loop
jg
test
mov
cmps
jns
mov
imul
loopne
sub
push
leave
setle
or
call
nop
pushf
dec
cwde
cs
jnp
xor
pop
pop
cs
test
cmp
cmp
pushf
mov
and
sbb
and
retf
lahf
pop
sbb
lea
mov
std
sbb
ret
or
jecxz
jp
mov
mov
and
cs
ds
inc
jns
adc
adc
cmp
or
retf
loope
out
cmp
jmp
loopne
pop
nop
cmps
cmp
dec
add
jb
enter
pop
fidiv
and
pop
sbb
push
retf
data16
lods
mov
inc
mov
out
les
dec
fdiv
nop
jns
adc
xlat
pop
into
sub
mov
dec
sub
fwait
sbb
adc
fisttp
pop
pop
inc
mov
cs
imul
gs
test
cmp
add
or
mov
add
sbb
inc
dec
popa
cmp
inc
in
das
pop
lods
pop
jmp
jge
jp
cmp
push
and
(bad)
fcmovu
pusha
mul
adc
daa
xor
popa
gs
inc
rol
add
push
fcom
and
and
scas
push
ret
lods
mov
push
int3
pop
inc
fimul
and
gs
push
aad
dec
je
fidivr
jg
shr
imul
adc
cmps
pop
jbe
ins
pop
mov
pop
std
mov
stos
dec
scas
cmps
test
sbb
fldcw
lods
add
xchg
xor
popf
in
cmps
sbb
fucom
lahf
mov
jl
fisubr
push
xchg
jmp
push
dec
in
push
sbb
(bad)
(bad)
fld
mov
stos
mov
popf
out
cwde
jecxz
mov
or
xchg
push
dec
(bad)
pop
in
adc
js
rol
stos
pop
out
pop
mov
mov
or
mov
in
(bad)
fld
sbb
mov
imul
cmp
sti
and
mov
nop
ds
pusha
sub
mov
cmps
xor
push
cmp
jnp
xchg
mov
adc
jl
bound
cld
pop
addr16
xor
outs
lods
xchg
lods
cmp
icebp
pop
push
jmp
jae
popa
not
ins
sti
out
add
sbb
and
and
mov
dec
test
xor
jl
out
mov
loopne
mov
adc
pop
fisub
pusha
dec
nop
add
and
out
daa
push
clc
leave
js
sti
pop
fistp
mov
mov
ins
lods
aad
add
popf
stos
sar
test
inc
dec
repnz
aaa
push
fisubr
icebp
mov
loopne
mov
imul
sbb
data16
ret
cwde
cmp
xchg
es
cmp
jge
sbb
inc
dec
xor
add
fistp
lods
add
push
cmp
sub
push
sbb
sahf
sti
pop
stos
sbb
out
std
mov
inc
neg
addr16
cmp
test
pop
imul
ins
mov
pushf
dec
xchg
fs
pop
nop
loop
adc
out
sub
push
sub
sahf
push
push
bound
cmp
inc
or
xchg
leave
pop
sbb
mov
mov
aad
inc
outs
jnp
ret
pop
jnp
inc
mov
out
dec
inc
add
lods
or
mov
add
fsub
loope
jecxz
leave
(bad)
into
daa
jmp
and
or
repz
push
push
sti
push
pop
inc
scas
pushf
dec
outs
cs
xor
enter
pop
xor
and
fs
rol
cmp
sbb
sbb
jb
mov
rcr
(bad)
pop
cmc
add
fstp
addr16
add
and
ss
dec
or
clc
jp
mov
shl
lods
lds
dec
lea
push
int3
push
adc
in
push
fs
aad
xor
adc
jno
mov
mov
pop
fldcw
jb
jg
cld
movs
mov
xchg
imul
and
and
cmp
aaa
or
sub
ins
sahf
test
shr
ficom
push
mov
pusha
ss
cmp
je
fild
adc
fwait
xor
sbb
neg
push
sub
xchg
inc
out
cmp
jp
ss
sbb
call
inc
dec
dec
sbb
loopne
ret
je
mov
gs
adc
xchg
mov
scas
test
push
ror
loop
iret
pushf
in
cmps
cmp
adc
leave
mov
mov
std
add
push
jg
sbb
mov
int
adc
lahf
xchg
push
xchg
loopne
add
repnz
out
xchg
lods
not
lods
ds
retf
add
imul
cmps
xchg
js
cmp
dec
imul
xchg
loop
call
(bad)
out
mov
and
test
adc
pop
jnp
xchg
cmp
mov
scas
lock
sub
loope
inc
les
test
sub
leave
inc
cmc
cwde
pop
mov
imul
fistp
sub
dec
jmp
aaa
jnp
cwde
(bad)
les
ja
sbb
jno
leave
jp
mov
inc
ds
cmp
test
jbe
or
sbb
lds
push
nop
or
mov
das
adc
ins
mov
jnp
fcmovb
jno
and
rcr
cdq
cmp
xchg
pusha
retf
arpl
scas
ror
push
in
(bad)
jl
lock
jbe
bound
xor
sbb
pop
dec
out
ins
jbe
xor
cld
int
jns
es
bound
sub
mov
and
cmp
adc
adc
sbb
inc
je
xchg
jnp
add
dec
inc
mov
(bad)
leave
or
jg
aam
mov
arpl
and
xor
cmp
or
push
imul
rcl
js
adc
fst
mov
retf
xor
js
push
stc
cmp
or
(bad)
in
jle
les
inc
icebp
cli
xchg
sub
sub
mov
movs
dec
add
add
sub
leave
xchg
lock
cmc
push
jae
fdiv
mov
repz
sub
sub
imul
inc
shl
push
jecxz
aam
call
bound
sbb
pop
inc
adc
cwde
dec
les
imul
std
xchg
sahf
nop
jbe
inc
imul
cmp
inc
shl
bound
repz
test
mov
retf
inc
sbb
adc
aas
and
(bad)
sbb
add
pop
mov
gs
ret
imul
jmp
retf
daa
and
pop
cmps
ds
dec
test
push
daa
lahf
mov
cmp
adc
out
pop
add
fdivr
data16
cdq
icebp
je
jmp
cmp
jne
stos
test
inc
mov
mov
ins
inc
js
cmps
inc
lea
mov
in
retf
in
movs
enter
(bad)
das
loop
ins
mov
dec
fwait
and
pop
sub
std
cmp
stos
dec
mov
out
xchg
cmp
ins
loopne
pusha
retf
ret
mov
int
inc
ret
mov
mov
push
fs
lods
(bad)
dec
pop
sbb
and
xchg
rol
or
push
xor
pop
cmp
(bad)
(bad)
ins
sub
vshufps
mov
push
pop
mov
and
test
clc
xchg
shl
fisub
push
pop
jl
fbld
inc
pop
cmc
xor
fistp
adc
outs
cmp
push
addr16
inc
or
xor
aas
cmps
dec
out
cwde
enter
movs
cmps
(bad)
mov
and
daa
les
add
mov
jg
leave
mov
jg
xor
popf
mov
es
shl
call
dec
and
ins
data16
adc
fs
imul
and
xchg
inc
inc
outs
pop
inc
sub
dec
pop
mov
adc
dec
add
or
bnd
add
sbb
or
aad
or
dec
fadd
mov
jno
test
nop
jmp
mov
neg
xlat
xor
inc
mov
icebp
xlat
jae
mov
xchg
cmps
(bad)
(bad)
cmp
and
test
pop
mov
sub
mov
popa
dec
in
sub
add
movs
adc
add
add
jns
addr16
sbb
mov
cwde
cmp
(bad)
(bad)
mov
mov
jns
push
pop
es
sahf
or
cmp
outs
bound
leave
pop
mov
and
add
push
and
(bad)
inc
fbld
out
sub
jl
xchg
sub
inc
inc
mov
in
pusha
ds
js
stos
loope
pop
(bad)
test
ins
xchg
push
mov
mov
push
daa
cmp
push
mov
cmp
add
cdq
fcom
in
inc
cmps
mov
addr16
xor
cwde
in
sbb
les
mov
into
pushf
cmc
mov
sti
mov
or
popf
xchg
cwde
lods
hlt
mov
not
jmp
retf
les
mov
xchg
jo
fldenv
xlat
xor
ins
add
aas
add
jbe
fwait
out
jp
lock
sub
daa
lds
dec
inc
xor
leave
rcr
cmps
je
or
arpl
lods
dec
push
ja
jno
adc
cli
cmp
xchg
pop
jp
scas
fwait
adc
in
clc
xchg
xchg
fcmove
popa
sub
bound
call
cmp
out
sar
aas
fsub
daa
xor
fiadd
dec
add
arpl
inc
inc
ffree
mov
sub
jo
and
aaa
pop
cwde
or
or
inc
mov
mov
add
mov
hlt
sar
sar
mov
sub
and
jnp
sbb
inc
xor
and
adc
mov
leave
add
je
push
pop
jbe
sub
fdiv
das
jo
es
cdq
test
or
adc
cmp
cli
call
mov
dec
pushf
adc
loope
mov
push
xchg
mov
(bad)
popf
adc
sub
mov
xchg
cmp
xchg
sub
push
mov
faddp
lods
cld
cmp
mov
xchg
sbb
dec
dec
sar
clc
adc
xchg
rol
mov
movs
jae
test
pop
imul
or
push
xchg
leave
fcmovbe
xor
push
and
out
addr16
and
or
je
pop
and
push
xchg
and
popa
mov
push
frstor
mov
mov
add
cmp
std
fnstenv
xlat
dec
call
cmp
loop
add
scas
ss
dec
test
test
xchg
mov
and
aas
loop
rol
or
mov
mov
xchg
lea
add
cmp
inc
xchg
lods
imul
cmp
adc
or
add
int3
cwde
dec
and
pop
sbb
jno
add
push
repz
std
mov
jne
(bad)
jle
inc
lock
fist
call
in
adc
mov
pop
jns
xor
add
xor
pop
rcr
ds
pop
cld
add
ins
popa
push
inc
bound
int
pop
mov
jns
mov
retf
call
push
rol
dec
fadd
cmps
adc
rcr
mov
xor
rcr
add
inc
dec
sub
nop
movs
push
imul
add
xchg
jb
pusha
xor
xchg
sub
add
pusha
(bad)
fcomi
lahf
dec
cmp
(bad)
cli
mov
push
push
std
test
dec
gs
sbb
icebp
add
push
jmp
lods
add
and
sbb
popa
add
fwait
dec
jo
adc
jae
imul
out
iret
cmc
repz
pusha
dec
xor
pop
mov
gs
movs
test
rcr
scas
push
mov
add
jmp
pop
je
fwait
xchg
mov
jl
cmc
cmps
jmp
push
mov
inc
(bad)
push
(bad)
sub
(bad)
mov
push
sbb
scas
out
leave
mov
iret
cwde
push
fistp
pusha
add
pop
in
mov
test
hlt
push
cmp
mov
add
(bad)
or
aad
ret
fcmovb
xor
mov
and
outs
jnp
pushf
outs
mov
cld
xchg
sub
sub
test
pop
fisubr
test
jne
push
cld
in
retf
or
enter
sbb
mov
pop
shl
push
std
sbb
sbb
mov
sti
push
inc
pop
fucompp
shr
jno
sub
(bad)
out
gs
pop
push
(bad)
cmp
popf
sub
mov
add
push
mov
cmp
(bad)
push
cmc
pop
mov
push
dec
xlat
clc
ja
js
loope
outs
pop
(bad)
repz
and
loop
jb
sbb
mov
pop
popf
rol
(bad)
in
les
dec
jmp
cmp
mov
sub
into
pop
inc
loopne
mov
jge
test
rcl
mov
retf
xor
rcr
push
adc
jle
pop
xor
out
jmp
fcom
(bad)
stc
les
inc
lods
cmps
or
mov
mov
es
into
(bad)
faddp
shl
ins
sbb
dec
je
push
mov
cmps
xchg
aas
aad
pop
jmp
jns
dec
mov
and
sub
gs
add
add
push
ja
jmp
in
cmp
sar
sbb
mov
call
jg
jmp
aas
push
mov
push
sbb
push
scas
ss
rcr
jmp
outs
popf
jo
outs
jns
and
lods
adc
push
jno
push
jp
jnp
cmp
and
lods
in
pop
scas
js
push
pop
fdivr
pop
mov
mov
fs
fistp
xlat
mov
hlt
in
rcr
adc
jbe
xlat
fwait
inc
push
test
xchg
(bad)
cwde
addr16
out
out
aam
or
mov
jbe
mov
je
dec
mov
repnz
leave
das
and
jae
retf
or
adc
or
add
pop
sub
cmps
arpl
mov
mov
cmps
lods
sbb
mov
and
aas
or
rcl
les
div
repnz
mov
mov
sub
pop
test
push
pop
(bad)
jb
sti
inc
call
mov
lock
dec
mul
adc
repz
push
test
movs
neg
sbb
sbb
ins
data16
push
mov
push
pusha
or
xor
(bad)
mov
out
push
adc
jmp
jne
popa
jae
lods
add
and
jne
(bad)
bound
jbe
jge
and
test
enter
or
mov
mov
idiv
(bad)
(bad)
cli
in
cli
cmp
cwde
jae
pop
push
cmp
lock
aas
mov
or
and
loope
js
arpl
mov
std
add
mov
add
jnp
push
pop
mul
add
adc
stos
in
inc
dec
mov
gs
addr16
inc
imul
mov
sbb
xchg
inc
push
(bad)
aad
xchg
movs
inc
ror
popf
bswap
and
dec
repz
jne
fs
cli
repz
hlt
mov
push
scas
sbb
mov
popa
aad
push
cld
jae
retf
sahf
jae
pop
or
jge
dec
mov
and
jbe
sahf
pop
inc
inc
call
mov
jle
dec
adc
loope
(bad)
cmp
push
jo
and
ds
stos
stc
push
daa
popa
adc
clc
cmp
dec
in
out
stc
mov
push
test
loopne
and
cmp
pop
xchg
fistp
mov
xchg
fwait
mov
dec
inc
pusha
fwait
mov
fld
cmp
pop
out
cmps
mov
repz
sahf
xchg
push
add
mov
xchg
xor
jle
jnp
aaa
aas
pop
sbb
sub
cmp
mov
pop
out
test
xor
std
or
pop
movs
or
repz
retf
sbb
mov
outs
fist
jle
ficomp
loop
cwde
xor
add
jae
aas
aam
jl
(bad)
pop
ret
iret
cmc
jp
xchg
fwait
in
daa
repnz
(bad)
dec
mov
loop
adc
xchg
fst
dec
pop
movs
xchg
push
push
jb
xchg
pusha
repnz
inc
iret
arpl
dec
mov
push
data16
imul
xchg
mov
bound
popf
stos
and
iret
cld
jmp
push
fwait
inc
cmp
push
inc
mov
xchg
fadd
jbe
inc
out
and
cmps
ins
or
adc
xchg
aad
addr16
call
adc
cmp
ds
sar
push
dec
xchg
add
lea
js
cmp
and
mov
push
pop
(bad)
dec
xchg
repnz
jnp
imul
and
xchg
or
push
adc
pushf
add
sbb
stos
loope
fstp
loopne
ror
inc
je
rcl
les
add
cdq
pusha
lock
inc
fdivr
stos
xchg
mov
xchg
cmp
mov
sub
jge
ins
fnstcw
outs
aaa
hlt
xor
iret
test
add
dec
(bad)
sub
xor
outs
les
lods
fadd
pop
mov
mov
cmp
mov
shl
shr
repnz
cmp
push
dec
or
push
outs
sar
pop
sub
jle
jb
in
icebp
push
ja
fwait
add
sbb
add
inc
fcmovne
repz
and
fsubr
mov
dec
int
add
jp
fwait
stos
jl
mov
cmp
out
mov
sub
pop
mov
push
jb
sbb
or
inc
fwait
mov
jnp
test
adc
dec
bswap
pop
out
mov
xor
lahf
repz
xor
outs
inc
pusha
xchg
or
pop
mov
sub
push
scas
repnz
add
inc
test
test
test
stc
sub
bound
mov
xchg
push
imul
rcr
jg
cmp
xchg
hlt
(bad)
push
adc
cli
and
add
mov
ins
pop
or
ret
pop
sbb
daa
std
movs
hlt
imul
int
les
xchg
jae
aad
push
mov
mov
xchg
push
push
cmps
adc
xchg
arpl
sub
test
and
cmc
pop
jnp
mov
mov
in
(bad)
in
pop
dec
mov
inc
add
sub
and
xor
fimul
retf
dec
sbb
leave
adc
div
xchg
aas
dec
idiv
sub
mov
mov
rol
xchg
gs
ret
xchg
inc
or
jo
je
inc
scas
mov
push
cs
pusha
leave
inc
jg
nop
xor
or
and
cmp
xor
arpl
jp
nop
dec
cld
int
jno
and
loope
pop
enter
xlat
mov
pop
push
movs
push
xor
mov
lods
mov
mov
dec
inc
mov
push
je
mov
adc
jb
std
bound
shr
lods
outs
xor
imul
pop
jno
dec
xchg
jecxz
and
dec
mov
adc
push
popa
add
fiadd
xchg
mov
jge
imul
popa
das
test
sbb
pop
sub
leave
fidiv
jb
(bad)
push
mov
cmp
scas
sub
popf
lahf
arpl
adc
inc
js
ds
xor
cmp
js
stc
ja
loope
mov
out
les
jp
or
sub
or
ds
imul
sbb
jmp
lahf
sbb
mov
pop
mov
mov
ja
hlt
sub
adc
dec
dec
dec
add
add
into
fild
xor
mov
lea
and
cmp
add
jmp
ror
scas
out
stos
rcl
jo
jg
ja
(bad)
out
jbe
cmps
add
xchg
mov
imul
xor
add
inc
xlat
das
mov
push
ror
xchg
pushf
mov
add
xchg
stos
pop
inc
dec
jbe
xor
mov
(bad)
mov
popa
imul
pop
and
add
dec
xor
mov
or
imul
cmp
cdq
cmp
aad
nop
dec
fisub
adc
sub
cmp
inc
fsubr
retf
mov
inc
out
adc
mov
bound
adc
scas
push
fisubr
xchg
ja
pop
ins
fistp
(bad)
cs
or
dec
movs
fild
repz
xchg
xchg
test
xchg
sub
imul
(bad)
dec
loop
in
ja
push
les
lods
push
inc
mov
jmp
retf
mul
dec
loop
jno
ins
push
outs
(bad)
mul
cmps
adc
std
push
add
push
and
mov
data16
xor
aas
fdivr
inc
mov
mov
cld
push
sub
aad
or
dec
jne
sub
stc
inc
cmps
retf
dec
scas
xor
inc
icebp
ret
push
cmc
dec
mov
mov
jno
mov
jb
mov
push
and
push
push
dec
cmps
iret
or
xor
(bad)
xor
in
(bad)
xchg
aas
loopne
push
jecxz
mov
xor
in
xchg
adc
(bad)
xchg
std
sub
or
add
adc
jno
push
xchg
(bad)
dec
scas
loop
inc
add
fdivr
in
push
aas
ins
xor
mov
sbb
ins
pop
lahf
and
xor
mov
pop
repnz
push
loop
popf
jmp
out
aam
xchg
scas
mov
push
cmps
pop
inc
repnz
stos
mov
or
pusha
mov
fistp
mov
inc
xor
inc
cmc
and
mov
js
inc
pusha
daa
outs
cwde
pop
dec
mov
mov
out
int
add
icebp
es
shl
jecxz
dec
mov
not
js
sub
and
sbb
jp
cmc
shr
cmp
stos
shl
pop
ja
div
in
inc
pop
and
push
mov
(bad)
in
lods
pop
fwait
pop
(bad)
xor
add
ss
push
xchg
jae
repz
jecxz
aas
xchg
retf
mov
add
aas
sub
sub
fadd
repz
(bad)
or
inc
stc
icebp
push
add
adc
iret
fisttp
stc
stc
daa
jge
jo
sub
and
push
mov
xchg
aaa
cmp
or
mov
loop
mov
push
and
pop
sbb
or
xchg
lds
jns
mov
inc
and
inc
popf
xchg
mov
popa
sbb
cmp
jns
stc
xchg
and
and
data16
hlt
sahf
dec
jg
xor
sbb
push
imul
into
cmp
stos
mov
sbb
jle
xchg
pop
jp
mov
hlt
imul
leave
jbe
mov
dec
cwde
jne
cld
mov
iret
dec
mov
in
mov
mov
stc
mov
cmp
xlat
xchg
(bad)
in
out
push
les
mov
inc
mov
inc
out
pop
add
popf
xchg
int
ins
(bad)
dec
push
inc
mov
loop
and
lock
push
or
xor
sub
in
or
data16
rcl
add
fsub
aaa
in
rcr
mov
test
adc
les
cld
add
div
add
cs
cmp
and
repnz
push
mov
pop
push
arpl
and
add
mov
in
fidivr
inc
cmp
and
or
in
sub
and
or
or
pop
scas
sub
jmp
loop
cs
or
cmc
and
test
mov
push
repnz
sub
jmp
mov
ficom
push
js
pop
inc
sbb
les
mov
ss
sbb
mov
xor
aam
test
pop
mov
aaa
add
sbb
mov
ret
mov
xchg
mov
inc
(bad)
sahf
out
fld
pop
jb
(bad)
lahf
xchg
outs
arpl
ror
xchg
leave
in
loop
jbe
std
add
cmp
push
push
call
int
loop
add
loope
jmp
push
test
test
sbb
jno
cmp
jp
shl
xor
ret
test
sbb
hlt
test
mov
cmp
sbb
push
dec
mov
sub
ja
jnp
fmul
jno
adc
into
cld
sbb
adc
cmp
ror
bound
hlt
mov
mov
retf
and
mov
xchg
sbb
shl
call
adc
sub
inc
inc
fisubr
mov
jmp
dec
pop
and
mov
add
jbe
add
bound
aaa
jne
mov
xchg
dec
mov
test
dec
repz
vpsrad
jbe
sbb
retf
fs
clc
sbb
jns
inc
sub
inc
retf
mov
std
push
add
icebp
call
jle
sub
jns
pop
jns
mov
mov
xchg
dec
inc
xor
adc
add
mov
dec
jmp
out
ins
les
or
sub
jo
outs
mov
and
xor
retf
adc
inc
imul
std
imul
loope
mov
sbb
repz
out
jno
sub
xchg
mov
mov
scas
mov
xchg
push
mov
jns
cmp
xor
cs
pop
jmp
lahf
ficom
rol
cmps
adc
outs
leave
dec
sub
xor
and
xor
or
mov
retf
xchg
je
mov
xlat
mov
mov
pusha
repz
sti
sbb
movs
cmp
dec
and
push
bound
fbstp
mov
loop
scas
mov
or
xor
dec
pop
sbb
mov
fstp
mov
and
test
inc
js
out
add
push
dec
les
sbb
xor
dec
mov
adc
das
out
jno
dec
repnz
mov
xchg
add
push
cmp
into
push
rol
add
sub
(bad)
out
movs
xor
into
adc
enter
aam
dec
xor
mov
xor
ss
jmp
xchg
pop
cmp
adc
outs
lods
pop
(bad)
adc
mov
cmp
ds
mov
jb
xchg
fwait
les
aad
ins
mov
sbb
loope
loop
push
xor
jmp
imul
sub
push
stos
addr16
and
aam
jg
retf
aam
or
xchg
or
mov
aad
push
mov
mov
or
xchg
ja
or
in
and
(bad)
jns
adc
movs
xchg
enter
and
in
ds
outs
jbe
(bad)
enter
cmc
or
adc
xchg
lods
adc
(bad)
pop
(bad)
push
test
in
out
push
lock
fldenv
sbb
xchg
jle
repz
xchg
inc
stc
jmp
jns
xchg
arpl
ror
cli
mov
adc
xlat
fs
jnp
push
xor
sahf
(bad)
sahf
xchg
dec
test
sbb
xlat
cs
xlat
data16
std
in
pushf
scas
mov
fisubr
sub
mov
sbb
jnp
pop
test
xchg
cmps
sti
cwde
adc
pop
pusha
pop
jnp
pop
push
ins
mov
and
icebp
ds
add
xlat
icebp
in
test
test
cmp
sub
cmp
fidiv
call
add
pop
mov
enter
in
in
nop
lds
imul
ficom
setne
jnp
xor
dec
jmp
xchg
outs
pusha
jl
lods
jmp
sub
adc
test
arpl
in
(bad)
lods
jns
push
movs
addr16
xchg
into
adc
push
mov
jns
in
push
jae
and
jae
test
jp
int
or
test
scas
gs
ret
sbb
adc
test
les
sub
leave
lds
dec
ins
sbb
inc
jg
push
in
mov
and
jnp
pop
jo
paddsw
adc
mov
adc
lahf
inc
jp
fild
aad
dec
lock
xchg
cmp
hlt
in
in
push
xchg
jecxz
or
iret
inc
arpl
loop
jge
clc
ss
xor
mov
dec
mov
loopne
and
sbb
or
xor
fcomp
call
fisttp
mov
fild
sbb
mov
popa
es
mov
jmp
into
pop
mov
sub
sti
fld
and
sbb
jns
imul
mov
mov
jmp
mov
or
rol
loope
cs
sahf
ja
(bad)
lea
out
mov
pop
loope
fbld
cmp
stos
push
or
(bad)
stc
sbb
rcr
sub
mov
js
pop
pushf
icebp
push
jg
or
jns
jle
shl
pop
into
xchg
lods
push
sbb
add
pop
pop
out
mov
int3
(bad)
ja
mov
cli
mov
xor
inc
jmp
inc
mov
aaa
sbb
fimul
cmp
sbb
pop
xor
pop
shl
add
inc
xlat
push
jb
hlt
sub
dec
jbe
(bad)
mov
sub
dec
stos
add
int
jp
outs
pop
mov
mov
in
mov
or
adc
adc
jno
enter
fadd
adc
lahf
stos
xchg
(bad)
mov
aaa
xchg
cmps
div
data16
push
push
mov
movs
jecxz
and
out
xchg
fwait
sub
loope
pop
cli
cmp
mov
aad
xchg
pop
in
rcl
pop
push
push
pushf
sub
xlat
inc
pop
add
adc
add
ins
xchg
cmp
mov
test
cli
call
fistp
sub
push
push
mov
push
(bad)
inc
nop
movs
mov
int3
imul
int
sub
cmc
out
cmp
test
stc
and
mov
adc
(bad)
es
ins
xchg
or
lea
adc
bound
call
ja
lock
mov
bound
cwde
dec
mov
pop
loopne
xchg
push
stos
jno
and
test
sub
inc
fwait
orps
fwait
jb
pop
sub
(bad)
and
xor
mov
inc
outs
(bad)
xchg
or
jb
cmps
jg
aas
xor
mov
loop
mov
rcr
call
sbb
pmaxsw
mov
and
add
mov
test
(bad)
xchg
sub
sub
add
xor
dec
inc
std
mov
call
add
mov
dec
sbb
shl
mov
cwde
loope
addr16
out
rcr
adc
jp
sti
add
sbb
lahf
inc
test
ins
sub
add
cmc
pop
lods
sbb
sbb
pop
aad
stos
ins
dec
pop
xlat
lods
mov
inc
jmp
sub
(bad)
fs
push
add
cld
repnz
mov
pop
cmp
push
cmp
jne
mov
rcr
mov
mov
scas
call
or
mov
js
leave
and
sar
(bad)
das
lds
sub
daa
adc
rcr
adc
sbb
sbb
dec
int
sub
popf
stos
ret
imul
xor
mov
imul
retf
ins
xchg
lods
xor
xchg
pop
mov
add
aam
mov
test
adc
stc
mov
test
sbb
popf
push
xchg
data16
adc
mov
and
sbb
xchg
(bad)
push
cmp
pop
add
lods
clc
mov
pop
sbb
add
xor
mov
ds
cmp
stos
sbb
cdq
jl
cmp
add
xchg
sbb
sbb
mov
and
scas
(bad)
xor
push
jns
cmp
dec
mov
sbb
sti
push
daa
dec
dec
ss
inc
add
add
inc
jns
pusha
pop
test
in
pop
sbb
test
and
aam
push
pop
(bad)
lds
std
je
add
shr
pop
ror
pop
cld
mov
pop
ins
stc
mov
inc
cmc
jmp
sub
push
outs
out
mov
and
lods
jp
and
pop
in
stc
cmc
leave
call
in
and
movs
aas
mov
and
mov
push
arpl
xor
jae
or
push
(bad)
repnz
ret
xchg
shl
sbb
mov
in
neg
or
ins
sti
and
retf
mov
xor
iret
xchg
aaa
xchg
add
mov
sbb
cmc
add
pop
xor
or
in
sbb
jmp
hlt
jne
adc
out
inc
leave
adc
into
mov
js
xchg
cmp
jmp
ja
icebp
sbb
je
(bad)
bound
daa
mov
fadd
int3
sub
adc
cmp
mov
adc
xchg
push
jae
inc
div
mov
int
repz
sub
sbb
test
mov
inc
add
fwait
js
pop
hlt
sub
cmp
sbb
leave
outs
and
hlt
mov
dec
test
idiv
mov
add
test
xor
and
inc
and
sub
push
rcr
jl
adc
sbb
mov
gs
dec
mov
dec
pop
cdq
movs
xchg
pop
mov
add
cdq
mov
dec
jae
ret
std
sub
scas
int3
in
mov
push
stos
leave
mov
stc
xchg
dec
fisttp
lods
ret
out
imul
dec
cmp
adc
cmp
scas
push
ror
jmp
and
aam
sub
add
xlat
loope
xchg
xor
pop
push
repnz
das
xor
cmc
shl
sub
pop
(bad)
(bad)
and
or
lods
shl
xchg
pop
in
pop
jbe
or
out
sub
scas
xchg
sbb
push
jnp
(bad)
push
cdq
jmp
stos
cmps
jns
mov
xor
xchg
jge
xchg
popf
mov
scas
or
aaa
cmp
fst
clc
dec
mov
outs
cli
inc
add
cmp
jp
out
call
push
repnz
iret
iret
in
hlt
mov
cdq
adc
mov
in
xchg
adc
fstp
xchg
adc
sbb
push
cmp
add
xchg
(bad)
mov
mov
and
xchg
xlat
sub
push
push
adc
and
jbe
sbb
pop
jmp
jne
popf
cmp
mov
push
xchg
js
pop
std
sbb
inc
add
clc
add
ds
mov
sbb
ins
mov
pop
xor
(bad)
sar
stos
arpl
mov
fistp
jge
xor
cmp
addr16
or
or
(bad)
sub
sbb
pop
pop
push
mov
pop
xor
sub
inc
test
mov
popf
into
jmp
jle
in
addr16
mov
loope
sub
(bad)
xor
rcr
int3
lea
jl
repz
(bad)
add
imul
ss
in
repnz
xor
adc
int
adc
jnp
mov
fnstsw
lea
push
xlat
cli
pop
xlat
push
ja
fcomp
aas
leave
(bad)
xchg
jp
movs
shl
mov
ss
adc
addr16
test
bound
pop
and
fwait
loope
daa
icebp
jbe
cmp
and
mov
sub
xchg
sub
mov
push
jp
xor
jae
mov
and
or
(bad)
sub
cmp
cmps
add
push
pop
fwait
mov
adc
imul
shl
out
jl
addr16
cmps
pop
les
cmps
jb
or
push
mov
push
out
popa
xchg
in
pop
in
mov
pusha
shl
sbb
dec
pop
push
jecxz
xor
inc
or
pop
push
stos
loope
outs
jmp
jnp
sub
push
fistp
mov
not
mov
imul
in
test
xchg
fcomp
mov
push
in
mov
dec
add
arpl
out
add
(bad)
lods
retf
fistp
or
push
adc
adc
pop
mov
sub
fld
das
cmc
push
mov
shl
inc
jnp
xchg
and
ins
sbb
ret
outs
movs
push
enter
fiadd
fst
popf
mov
adc
and
mov
int
inc
ffree
(bad)
int3
push
sbb
jb
xchg
into
and
imul
aaa
ret
pushf
sbb
mov
push
or
ja
jecxz
mov
pop
loope
sbb
sub
bound
clc
ret
rol
sub
bound
jge
mov
xor
push
xor
add
daa
(bad)
mov
pop
cli
inc
pop
mov
add
or
pop
adc
sbb
cmc
or
xor
or
dec
and
mov
xchg
cwde
pop
xlat
sub
loopne
and
bound
sub
pop
sbb
ja
jo
test
xchg
lds
(bad)
ret
int
mov
idiv
or
or
inc
jmp
push
mov
arpl
je
mov
sahf
into
add
(bad)
adc
cmp
sar
popa
(bad)
xchg
mov
in
fstp
pop
xor
aaa
mov
sbb
sbb
call
cmp
xchg
push
pop
in
lea
fs
aaa
and
sub
jno
bound
fwait
pop
sbb
or
pop
sub
xor
jnp
fwait
and
xchg
into
lds
push
scas
push
xchg
das
add
pop
int3
loope
leave
ss
std
jmp
ss
mov
pop
lea
test
fldenv
jbe
xor
stos
or
jg
mov
pop
cmp
push
cmp
or
mov
dec
sub
cdq
sbb
and
icebp
inc
cld
mov
inc
mov
retf
data16
loop
jg
mov
aaa
push
push
or
sub
test
test
push
or
ins
clc
sub
mov
and
movs
sub
mov
sbb
in
cmp
test
mov
scas
add
int
mov
mov
or
fsubrp
jmp
inc
test
mov
lea
xor
pop
hlt
mov
cmp
xchg
sub
inc
in
dec
sbb
adc
jno
in
xor
add
into
aaa
ins
(bad)
cmc
pop
or
and
push
sub
adc
div
sub
mov
dec
movs
sub
das
inc
lahf
div
not
arpl
retf
mov
xlat
out
cmp
jns
fild
xchg
xchg
jae
(bad)
pop
icebp
fcmovbe
cwde
push
mov
(bad)
std
clc
xor
cld
and
or
dec
dec
cs
pop
jo
leave
pop
(bad)
fadd
scas
pop
(bad)
popf
cmp
mov
xor
lods
dec
retf
add
js
(bad)
(bad)
lahf
inc
lods
inc
ds
jge
je
and
sub
mov
mov
mov
adc
aam
add
fstp
mov
stc
sbb
fcom
test
inc
push
repz
(bad)
rcr
jnp
lods
add
pop
push
sub
sub
mul
jnp
out
cdq
xchg
jne
icebp
lahf
xor
pop
sbb
mov
js
or
mov
pop
imul
dec
xor
jmp
inc
call
push
scas
mov
(bad)
inc
mov
lahf
fwait
stos
ss
fst
mov
pop
push
cmp
(bad)
repnz
add
mov
push
push
mov
(bad)
pop
push
jbe
sbb
mov
sbb
push
mov
pop
adc
imul
cmps
stc
jg
jp
pushfw
inc
jo
mov
xchg
jae
dec
sbb
movs
retf
jge
mov
int3
out
jb
jae
(bad)
data16
push
or
jge
jl
add
push
lds
out
inc
mov
push
jne
xor
js
ror
and
mov
stc
in
jno
jnp
fidivr
scas
mov
retf
push
data16
mov
cmp
push
test
dec
cmp
xchg
inc
pop
loope
(bad)
icebp
mov
(bad)
push
out
out
fdivr
imul
cmc
pop
cli
mov
or
pop
fist
rol
in
mul
push
xor
fld
ja
xlat
mov
pop
bound
push
aaa
loopne
or
lds
add
jbe
inc
loope
sub
mov
aas
mov
mov
push
enter
xlat
lods
fidiv
xor
sub
(bad)
xchg
cs
and
jp
(bad)
or
test
jmp
int3
push
and
add
je
mov
aad
not
and
scas
mov
sti
or
xchg
sbb
pop
(bad)
in
xchg
jne
out
inc
out
fisub
jmp
lods
int
outs
imul
mov
and
fsub
adc
fsub
jae
in
add
xchg
cwde
in
test
push
je
sar
push
cmovl
test
ret
(bad)
lock
push
fsubr
sub
and
add
adc
pop
stos
test
jnp
add
pop
fst
sbb
aas
aam
cmp
loope
fsubp
xor
add
ret
jle
mov
lahf
jle
pop
add
dec
push
addr16
jmp
cmps
or
dec
cs
out
sar
imul
inc
jp
nop
arpl
sbb
sbb
mov
cmps
push
lahf
cs
icebp
jle
sub
stos
rol
mov
add
add
shl
xor
mov
jmp
xor
popf
cmovg
mov
push
sub
sub
fld
jae
push
aam
add
jmp
pop
in
outs
cmp
pop
ja
ins
dec
dec
mov
and
jae
xchg
sar
cdq
fwait
dec
mov
(bad)
adc
repnz
or
inc
pop
pop
sbb
cmp
repnz
in
dec
sti
mov
(bad)
int
xchg
clc
jbe
xchg
xor
sub
popf
aaa
mov
loope
push
stos
or
sbb
mov
jbe
pop
out
imul
pop
in
arpl
stc
inc
jge
or
lds
sbb
add
loope
aad
inc
fsubr
les
aas
jbe
cld
adc
xchg
sub
mul
(bad)
into
xor
rol
sti
ficomp
mov
sub
and
cmp
mov
shl
cmps
scas
cmps
sbb
or
sub
loope
popa
cmps
gs
jae
dec
or
cmps
mov
test
sbb
stc
fist
sub
(bad)
clc
pop
ret
cmps
mov
xchg
dec
xchg
and
mov
test
lea
iret
pop
cwde
sbb
and
cmc
pusha
ds
dec
arpl
dec
popf
mov
in
lahf
imul
repz
fidivr
fstp
and
stos
push
in
xchg
and
adc
rcl
or
pop
push
sub
add
jg
sbb
inc
movs
stc
or
xor
daa
jecxz
mov
mov
sbb
retf
test
std
aad
dec
shl
sbb
or
out
inc
int
and
or
fbstp
mov
mov
int
and
popa
je
mov
aas
xor
xor
fcmovnu
push
stos
aas
(bad)
bswap
xchg
mov
dec
cdq
movs
xchg
sub
popa
add
dec
daa
iret
scas
(bad)
pop
or
std
pop
loopne
call
and
sub
adc
pop
push
push
movs
cs
bndstx
loop
lea
pop
repnz
daa
adc
inc
mov
jne
inc
mov
(bad)
fnsave
cmp
add
inc
push
cmp
pop
add
fdivp
in
dec
inc
fldcw
push
and
mov
cmp
inc
hlt
popa
pusha
fbld
loopne
in
stos
arpl
xor
cdq
rcr
xor
and
in
mov
pop
(bad)
ss
dec
ficom
jmp
push
inc
scas
add
push
test
data16
pop
dec
cmp
pushf
cmp
cmps
or
dec
addr16
jecxz
test
out
adc
movs
clc
cmovge
mov
imul
retf
pop
je
jmp
adc
jne
and
mov
sbb
xchg
movs
xor
jp
loopne
push
jle
cld
repnz
fstp
call
adc
ins
clc
fucomip
aad
adc
imul
es
retf
mov
fnsave
cs
cmps
add
test
mov
in
add
dec
xor
nop
pop
es
out
jge
mov
(bad)
jno
loopne
cmps
dec
pop
sti
adc
xchg
out
jmp
xor
sbb
and
call
jmp
loope
nop
xchg
jge
stos
in
cmps
and
mov
mov
stos
sbb
mov
out
mov
ret
imul
inc
lea
mov
xor
mov
mov
pop
inc
retf
popf
aam
lock
pop
lahf
bound
jmp
loope
jge
mov
pop
jae
add
push
jne
mov
jg
add
movs
pop
out
mov
arpl
shl
mov
push
push
mov
or
stos
pop
stc
jb
sub
sbb
test
cmc
mov
jmp
ret
fcom
imul
mov
test
adc
cmp
aaa
in
or
(bad)
xchg
lods
add
pop
les
pop
les
jp
arpl
inc
je
ins
ja
mov
mov
in
xchg
popa
dec
jnp
and
imul
inc
xor
xchg
xchg
dec
aaa
test
mov
xor
test
ins
stos
jl
inc
ret
repnz
shr
int3
mov
retf
repz
sub
add
mov
addr16
xchg
push
fild
adc
jne
(bad)
imul
cmp
cli
outs
sbb
cmp
add
cmp
jbe
or
push
clc
not
ror
scas
(bad)
push
xchg
mov
mov
out
inc
cmps
or
dec
cmps
dec
loope
(bad)
fcmovne
(bad)
sbb
push
ja
push
(bad)
push
cwde
push
loope
or
push
stos
cmc
mov
in
adc
xor
div
fbstp
je
movs
add
mov
shr
jp
add
stos
push
(bad)
loop
(bad)
cmp
jl
xor
ja
stos
add
xchg
pop
imul
icebp
out
out
imul
jno
cmp
and
mov
adc
adc
jg
lea
push
in
gs
mov
shl
add
div
mov
and
retf
jmp
mov
dec
and
call
sub
dec
mov
xor
mov
outs
fxtract
push
cmp
imul
rcr
sti
inc
ret
fcmovnu
lods
and
xchg
enter
arpl
int
adc
or
push
into
out
mov
ins
popa
or
xor
xor
ss
cmc
cmp
push
jae
out
dec
or
mov
test
cmps
sbb
call
mov
jmp
repz
pop
mov
or
cli
scas
pop
leave
pusha
jb
sub
push
(bad)
jle
mov
rcl
fadd
ds
cdq
scas
sti
or
sub
dec
dec
stos
jb
jo
repz
std
shl
xor
bound
adc
jne
in
ds
int3
pop
loop
xor
sub
mov
dec
or
jge
mov
ds
out
jp
iret
dec
repz
test
and
fwait
(bad)
nop
jecxz
jmp
lahf
pop
shl
xor
xchg
pop
outs
push
sbb
xchg
aas
ins
pop
js
sub
daa
cwde
mov
push
cmp
pop
lea
div
ja
outs
mov
movs
pop
fadd
in
mov
ins
pop
stos
jns
mov
cmp
jbe
test
and
movs
into
dec
mov
gs
not
xor
sbb
add
outs
jle
adc
mov
into
pop
push
pushf
xor
out
or
cmp
retf
mov
inc
ret
cmps
mov
fnstcw
test
ss
icebp
or
pop
pop
daa
mov
popa
lock
(bad)
fcom
mov
test
out
movs
stos
jle
leave
push
out
out
clc
and
inc
pushf
push
inc
movs
test
jmp
fs
sub
idiv
ja
add
jmp
dec
add
fisttp
mov
adc
push
not
xor
into
sub
mov
rcr
add
cmp
mov
test
shl
out
shl
cs
retf
ret
mov
ror
mov
sar
out
xor
inc
inc
ins
pop
pop
lock
dec
xchg
cwde
adc
cmp
mov
mov
cmp
imul
fs
sbb
test
and
movs
je
sbb
and
jbe
xchg
xchg
mov
xlat
push
sub
sub
test
outs
sub
mov
lods
inc
push
cdq
loopne
(bad)
retf
mov
lea
xor
mov
mov
imul
hlt
jl
test
jae
mov
ror
clc
cmp
in
mov
outs
pop
push
cmc
out
xchg
jne
inc
push
xchg
stc
jne
(bad)
cmp
popf
pop
sbb
in
dec
cmp
sub
mov
xchg
jbe
sar
or
(bad)
cmc
sub
lock
gs
cmc
cs
into
fstp
rcl
push
hlt
push
into
in
push
fnstcw
or
ds
push
mov
scas
or
dec
iret
scas
push
cmp
ss
cmps
clc
push
xchg
mov
xchg
sub
ins
xor
out
dec
inc
dec
cdq
lods
or
and
outs
sti
shl
jmp
lods
shl
test
xlat
push
in
pop
dec
enter
xchg
cmp
stos
pop
pop
inc
cdq
mov
loop
mov
lds
inc
scas
cmps
pop
push
arpl
sub
inc
stc
add
xor
call
ins
push
sbb
mov
xchg
scas
packsswb
mov
sbb
sbb
inc
imul
out
and
lds
ins
ins
je
je
cdq
in
daa
add
jg
cwde
cmp
mov
loopne
push
imul
cmp
aaa
jnp
sti
or
and
mov
ins
and
icebp
imul
cmps
(bad)
out
or
out
arpl
ins
inc
adc
(bad)
jmp
clc
popa
int
add
add
dec
dec
or
aad
mov
or
ins
iret
scas
in
jb
mov
int3
sahf
adc
outs
clc
test
call
sub
push
in
ud1
jmp
fwait
je
(bad)
and
call
jecxz
es
call
xlat
shl
(bad)
cmp
dec
add
cmp
out
mov
icebp
(bad)
xlat
xchg
mov
and
mov
jp
mul
call
int
(bad)
sbb
leave
push
in
inc
jp
int3
xlat
sub
mov
and
sbb
(bad)
aam
lahf
cmp
je
fmul
mov
xchg
iret
test
sbb
(bad)
mov
das
cdq
fs
rcl
icebp
outs
jae
xor
cs
in
cmp
hlt
inc
stos
pop
mov
ds
xchg
dec
pop
mov
jmp
and
fcmovnb
test
arpl
mul
sbb
xor
dec
rcl
jbe
cld
popa
mov
mov
data16
inc
jecxz
addr16
xor
mov
push
mov
sti
test
sub
xchg
push
mov
mov
lahf
(bad)
jecxz
(bad)
(bad)
jl
cs
jle
out
sub
push
push
xchg
test
fnstcw
cmp
imul
das
addr16
movs
mov
aam
test
jle
addr16
scas
mov
test
fistp
mov
mov
xchg
aaa
sbb
lds
shr
jno
mov
inc
shl
sbb
test
addr16
(bad)
leave
jne
stc
rcr
mov
jl
adc
(bad)
xchg
xor
cdq
inc
std
imul
shl
scas
adc
call
fcmovnbe
pop
jo
jbe
xor
xor
inc
test
popf
fld
mov
in
stc
icebp
lock
bound
jl
and
outs
jmp
dec
sbb
es
xchg
sub
pop
lahf
(bad)
aam
pop
stos
test
dec
adc
icebp
jne
dec
imul
repz
cwde
nop
dec
push
cmp
int3
jnp
pop
add
clc
mov
outs
sti
inc
xlat
adc
add
test
xchg
mov
pop
imul
getsec
les
cli
in
aad
pop
cmp
mov
test
sub
add
add
xor
mov
mov
jne
inc
out
push
add
inc
loop
pop
hlt
xchg
imul
and
imul
adc
pop
inc
or
mov
int3
mov
mov
iret
push
jmp
in
cmps
imul
mov
add
imul
push
loop
mov
push
mov
jno
sub
mov
ja
jns
mov
test
cwde
and
stc
daa
jnp
scas
pop
adc
push
(bad)
loopne
jns
mov
mov
rcl
xchg
out
icebp
dec
(bad)
pop
fstp
dec
ss
lods
fs
dec
sub
mov
call
adc
pop
mov
pop
(bad)
das
cmp
xor
inc
and
cmp
leave
and
inc
pusha
mov
pop
dec
int
neg
dec
das
ret
mov
push
ins
sar
push
sbb
pop
xchg
jb
mov
and
pushf
movs
add
(bad)
adc
mov
jae
in
int3
xor
mov
neg
outs
pop
popa
addr16
mov
cld
jle
popf
cli
push
inc
rcr
ds
sbb
icebp
mov
and
popa
mov
in
(bad)
(bad)
fcom
mov
das
jp
pop
daa
push
rcr
cs
(bad)
sbb
xor
jmp
jp
jne
daa
mov
cmp
pop
les
jne
call
enter
push
pop
dec
sub
mov
outs
dec
inc
fiadd
xlat
push
mov
jg
mov
jno
les
mov
mov
int3
fidiv
push
iret
gs
fadd
sub
and
cwde
cmp
or
sar
imul
sub
inc
mov
pop
sbb
sub
aad
pop
mov
out
ret
lea
and
outs
jae
mov
inc
ja
imul
push
jns
add
lahf
arpl
add
push
push
setl
xchg
mov
push
add
retf
sbb
mov
ss
fcmovnu
jb
lahf
cmp
leave
loope
push
adc
or
(bad)
pop
ficomp
hlt
sbb
dec
pushf
icebp
retf
out
mov
outs
scas
mov
dec
call
out
xchg
sub
lahf
fbstp
inc
out
mov
mov
es
cmp
add
jbe
inc
dec
shl
pop
xor
arpl
pop
jle
cmps
rdtsc
adc
push
in
in
inc
fwait
cmc
pop
jno
xchg
repnz
push
and
pop
(bad)
std
jecxz
fsub
mov
cs
sti
dec
push
jne
or
dec
xchg
sub
jns
or
ret
fs
cdq
cmps
fsubr
push
jp
movs
mov
adc
add
adc
jg
fisttp
cmp
fst
ja
cmps
xchg
repnz
jl
daa
je
xor
sbb
or
lahf
les
jb
inc
mov
cmp
push
mov
mov
jmp
pushf
adc
jg
pop
cmc
std
and
std
xlat
daa
dec
mov
xor
ss
out
mov
dec
push
test
std
xchg
sub
ret
cwde
and
in
sbb
rcl
xor
pop
mov
ror
mov
fst
pop
icebp
nop
inc
data16
mov
sbb
(bad)
fdiv
out
test
ins
sbb
daa
movs
int3
xchg
aas
sub
(bad)
out
fistp
int
bound
lock
stos
sub
mov
cmps
dec
out
sbb
int
movs
jecxz
mov
add
cmp
mov
cmp
test
push
icebp
adc
cmp
cld
dec
cmps
push
xchg
sbb
add
pop
adc
sub
inc
mov
pop
mov
pop
or
pusha
mov
xor
inc
jg
xchg
out
push
pop
inc
pop
rcl
ins
dec
les
cli
xor
call
test
lahf
jb
dec
adc
jb
outs
clc
mov
push
push
adc
cld
mov
(bad)
push
das
or
pop
imul
cmp
dec
(bad)
jno
adc
cmp
(bad)
(bad)
fs
lahf
mov
lods
add
and
ss
sbb
push
icebp
cdq
iret
jmp
cld
fistp
sbb
scas
repnz
jle
sub
into
and
loope
sahf
stos
(bad)
or
popf
lahf
(bad)
bndldx
inc
xchg
or
popf
mov
xchg
mov
jnp
loope
mov
xor
sbb
and
arpl
jno
imul
ds
aam
movs
ds
mov
iret
mov
cmp
sub
sub
push
movs
idiv
cmp
inc
scas
retf
ror
sti
ret
mov
pop
retf
movs
jb
adc
jge
cmp
call
fldcw
std
cmp
mov
inc
push
sub
cs
push
adc
enter
add
push
or
cmps
xchg
or
repz
(bad)
stos
pop
xchg
shl
enter
sub
leave
xchg
xchg
pusha
imul
jns
outs
and
jl
cli
cmps
ins
sbb
sbb
and
loop
mov
fsubr
scas
dec
aad
es
ret
add
mov
adc
push
stc
into
mov
ins
and
dec
sbb
test
jle
stc
in
test
daa
(bad)
(bad)
jg
(bad)
jne
out
pop
and
test
and
imul
mov
imul
cli
mov
into
lock
test
xchg
pop
lds
movs
mov
cmp
push
enter
mov
sti
cwde
shr
mov
mov
xor
jno
mov
pop
or
mov
fsub
xchg
shr
mov
outs
and
mov
jl
lods
sub
aam
aaa
jecxz
mov
out
(bad)
xor
pop
dec
xor
jl
push
mov
dec
pop
(bad)
sub
(bad)
fs
faddp
xchg
add
std
pop
push
int
add
mov
(bad)
in
dec
push
add
push
(bad)
arpl
jns
sub
jl
jmp
dec
call
xchg
or
dec
cmp
gs
mov
adc
in
retf
pop
xor
dec
fucomi
(bad)
in
ror
xor
dec
(bad)
sbb
cmp
int3
mov
push
xchg
mov
jecxz
jae
xadd
dec
in
arpl
pop
and
inc
stc
pop
adc
(bad)
out
inc
sti
ds
rcl
cwde
movs
idiv
add
(bad)
repnz
push
push
jnp
sbb
(bad)
mov
jns
enter
mov
or
sub
aaa
xlat
das
mov
call
vmread
jle
shr
and
leave
(bad)
stc
mov
scas
mov
out
in
sub
stos
pusha
pop
xor
repnz
mov
add
movd
mov
(bad)
sbb
mov
dec
push
cwde
jns
dec
scas
sbb
xor
push
and
mov
pop
daa
mov
(bad)
repz
sbb
xor
push
sbb
aad
or
inc
ret
in
xchg
dec
les
cmp
das
(bad)
fimul
cmc
cmp
push
add
shr
loope
(bad)
adc
das
sub
adc
stos
cmc
jmp
fadd
cmps
loope
ds
rol
mov
mov
add
les
xchg
retf
adc
inc
icebp
outs
xor
(bad)
movs
inc
sub
sbb
je
mov
ret
(bad)
xlat
sbb
ret
xlat
sub
mov
movs
call
push
push
jo
push
mov
push
ds
popa
mov
cli
pop
lahf
loope
xlat
push
test
repz
call
popf
test
je
sbb
test
loope
ja
aam
cmp
sub
xchg
xchg
xor
mov
outs
xchg
lahf
or
and
push
ftst
mov
rcr
mov
xchg
or
xchg
lds
pop
jmp
int
(bad)
sbb
lock
pop
xor
bound
mov
popa
add
aad
jnp
mov
ret
es
and
jbe
pop
test
xchg
mov
sbb
push
xchg
push
pop
push
enter
pop
ret
sti
mov
jge
fs
mov
xlat
push
ins
xchg
xchg
pop
jne
nop
into
mov
das
sub
jl
cmp
jne
out
int3
mov
jae
adc
aad
pop
mov
test
iret
mov
aam
add
clc
not
js
int3
pop
ror
sahf
mov
leave
sti
aaa
jbe
pop
ror
xor
(bad)
push
cmp
cwde
or
and
sub
mov
push
das
fcmovne
sbb
xor
fsubr
sbb
nop
or
adc
pop
movs
xor
add
sahf
test
jge
dec
into
push
pop
lods
adc
popf
jecxz
cmp
dec
fld
mov
not
mov
dec
(bad)
int3
push
(bad)
imul
or
in
mov
add
fild
retf
jecxz
sub
mov
push
call
xchg
(bad)
iret
(bad)
xor
mov
sbb
push
or
cmc
(bad)
cs
jecxz
dec
in
(bad)
inc
test
dec
aad
push
xchg
cmps
cs
push
jp
push
jnp
scas
ds
and
xor
xchg
push
bnd
fmul
fild
stos
xchg
cmp
xor
jp
pushf
shr
push
dec
cmp
fnstsw
(bad)
push
lahf
test
inc
in
nop
jl
test
ins
call
gs
or
push
in
cmp
jl
dec
ds
mov
cmp
add
dec
pushf
mov
mov
in
daa
icebp
repz
dec
add
ja
sub
call
daa
inc
ffree
(bad)
dec
inc
addr16
stos
xor
sbb
adc
push
push
outs
sahf
inc
jmp
pop
aad
sti
mov
dec
adc
mov
mov
adc
fcom
outs
and
pop
fwait
sbb
cmp
push
les
mov
mov
pop
int
xchg
inc
mov
add
cmps
iret
scas
xchg
sbb
xor
pop
sub
call
es
mov
sub
stc
retf
or
scas
pushf
into
cmp
(bad)
mov
dec
pusha
arpl
xchg
add
test
fcom
xchg
pop
sbb
scas
add
adc
mov
cmps
sbb
retf
in
in
aas
daa
xor
pop
or
es
inc
sub
mov
xor
mov
inc
cmp
sahf
push
jae
addr16
stos
mov
or
test
ret
pop
test
fdivp
jecxz
xor
mov
scas
pop
mov
dec
push
(bad)
jle
cli
push
cmp
ret
sbb
dec
fwait
(bad)
icebp
nop
or
xlat
mov
pop
pop
and
jecxz
aas
push
and
sub
push
cmp
sbb
xchg
jns
xchg
in
(bad)
mov
out
xor
dec
mov
adc
lea
xor
lfs
sahf
retf
push
mov
pop
aas
mov
push
out
loop
stos
cmp
mov
and
sbb
xor
aaa
test
push
fild
stc
rol
push
out
les
jmp
sub
or
jecxz
add
dec
movs
inc
xor
xor
add
fnstenv
sahf
test
fs
inc
jl
in
stos
add
inc
push
mov
ins
dec
pushf
hlt
dec
dec
arpl
pop
std
jmp
xchg
int3
adc
rol
arpl
into
push
mov
sub
add
shl
xor
cmp
cmp
test
xchg
imul
sbb
sub
bnd
jae
adc
or
repz
add
(bad)
(bad)
outs
xchg
push
dec
jbe
sbb
mov
mul
push
in
repz
dec
jl
mov
lahf
mov
loopne
xor
scas
aam
sar
cdq
and
cmp
int
movs
dec
out
push
cdq
test
test
int
push
je
and
mov
out
xor
mov
stos
fs
test
je
sub
pop
add
jl
hlt
push
sbb
cmc
push
push
scas
push
push
adc
retf
and
xor
sbb
jmp
iret
or
cs
int3
outs
pop
fld
mov
daa
push
lods
push
jne
fnstenv
icebp
dec
jmp
xchg
scas
in
mov
mov
push
test
adc
adc
mov
sbb
icebp
dec
into
dec
mov
jg
adc
das
cdq
fs
leave
cmp
push
mov
adc
cmps
sub
fsubr
ret
cmp
neg
xchg
or
(bad)
sahf
out
scas
sub
(bad)
sub
ins
cmp
bound
mov
leave
adc
cmp
jp
in
sbb
repz
jbe
push
lods
pop
mov
push
pop
std
in
aas
hlt
jmp
test
call
into
xchg
fst
(bad)
sub
add
dec
(bad)
in
sbb
pop
mov
icebp
daa
xor
xchg
mov
cmp
ss
lods
mov
mov
in
adc
pop
iret
ror
retf
jl
rol
jbe
add
add
mov
xchg
add
sbb
cld
sar
(bad)
std
jge
mov
ins
cwde
dec
stos
xor
mov
mov
cmp
std
adc
xor
xchg
mov
or
out
test
clc
adc
dec
push
inc
imul
out
push
aad
xor
mov
test
aaa
scas
mov
scas
ds
adc
and
cdq
xchg
js
pusha
pushw
sub
mov
push
out
cwde
es
and
jl
lods
adc
dec
add
imul
xchg
dec
mov
push
sbb
ret
loope
or
cld
jg
fistp
xlat
in
iret
xchg
xchg
shl
shr
mov
js
daa
in
lahf
dec
pop
xchg
ss
xor
fldz
push
pop
(bad)
jg
sqrtps
div
test
sub
dec
inc
movs
sti
mov
jmp
xchg
or
in
add
daa
xchg
sbb
lods
add
fcomp
in
push
pop
mov
xor
ficom
test
mov
cmp
pop
xor
ds
add
(bad)
sub
std
mov
stos
jb
int3
push
push
movs
cmps
cmps
into
es
jne
fwait
push
in
cmp
jns
inc
jnp
ds
sub
mov
not
xchg
sbb
cld
hlt
mov
int3
mov
stc
cli
retf
dec
push
fs
xlat
sbb
jl
jae
ret
sti
or
xlat
sub
push
cmp
pop
xchg
retf
cmps
cld
(bad)
in
push
xor
aaa
fdivrp
sub
daa
retf
test
adc
xor
mov
mov
pushf
mov
inc
sub
movsx
push
lea
or
pop
mov
cld
ficom
stc
jmp
stos
das
sbb
push
mov
test
or
ret
push
fiadd
xor
loopne
pop
jp
in
adc
jge
jns
mov
or
mov
pop
aaa
jno
pop
sti
aad
stc
(bad)
rcr
sbb
rcr
xor
pop
mov
xchg
cmp
aas
ss
(bad)
mov
cmp
xchg
pop
call
jle
jnp
int
sub
push
(bad)
dec
icebp
pop
adc
cdq
ins
mov
stos
sti
pop
cwde
mov
sar
xchg
(bad)
pusha
inc
lods
mov
cs
out
lock
aas
pop
mov
ins
out
imul
and
adc
add
fisttp
ret
sub
imul
jmp
test
jbe
pushf
xor
add
cwde
(bad)
aad
mov
repnz
gs
pusha
push
retf
ret
jnp
pop
pop
(bad)
repz
lods
inc
and
xchg
das
pop
mov
xor
retf
pop
sub
pusha
pop
test
loope
inc
mov
cld
sub
cmc
push
jecxz
pop
dec
aad
sub
cwde
fnstenv
push
or
mov
mov
sbb
xor
loopne
aam
or
or
jecxz
xor
adc
ja
inc
dec
and
leave
inc
pop
sbb
ja
stos
daa
loopne
mov
mov
movs
mov
inc
push
scas
movs
(bad)
jne
cmp
sub
mov
cmp
rcr
ret
mov
das
push
mov
popa
push
mov
xchg
frstor
(bad)
and
stos
add
shr
xchg
(bad)
cmp
jl
addr16
clc
jbe
ficomp
es
ret
or
xor
push
jmp
movs
in
or
inc
mov
lods
cmc
xchg
fdiv
sbb
sar
das
sub
push
cwde
jp
and
mov
pop
movs
jl
mov
neg
and
cli
jnp
sbb
jae
retf
aaa
call
inc
dec
or
sbb
ror
and
cmc
mov
cli
push
xor
arpl
push
lahf
test
and
adc
or
dec
test
aaa
out
or
pop
jo
push
jb
mov
add
fsubr
cmps
push
pop
jmp
push
push
cld
cwde
sub
sbb
sub
fldenv
stos
sti
icebp
xchg
aam
mov
jbe
rol
inc
and
pop
dec
sub
iret
jl
repz
push
xchg
cmp
jbe
push
push
dec
cmp
mov
movs
pop
sub
leave
or
pop
mov
fcom
add
jl
cmp
dec
mov
sub
and
clc
std
leave
xchg
shr
jl
xor
cld
std
daa
add
pushf
or
add
neg
jns
mov
in
add
mov
addr16
dec
or
ror
ins
pop
push
xchg
daa
add
dec
test
sub
icebp
lds
push
ins
xchg
cmp
in
push
sub
adc
in
jl
push
enter
daa
inc
jnp
clc
or
dec
test
mov
jle
div
sub
xchg
push
mov
out
xchg
jecxz
(bad)
ds
inc
fwait
arpl
xor
addr16
inc
rcl
pop
cmp
lahf
cmp
call
pushf
scas
mov
mov
cmps
cmp
and
icebp
xchg
and
call
xchg
jle
iret
(bad)
xchg
inc
mov
inc
pop
jnp
js
mov
(bad)
iret
add
xor
adc
std
cmp
sbb
add
ret
lahf
mov
xor
sbb
cdq
inc
mov
jae
mov
push
or
xchg
mov
mov
neg
movs
repnz
mov
sub
xchg
push
mov
add
push
in
dec
mov
cmps
repz
fsub
mov
fwait
push
cmp
bound
mov
popf
push
mov
rcl
ins
fisub
sub
loopne
(bad)
pusha
dec
cmc
daa
ret
pop
jmp
out
lods
adc
cld
push
shl
mov
and
pop
into
push
ret
lock
mov
cmp
mov
xor
cwde
outs
test
rcl
(bad)
clc
mov
xchg
ins
and
mov
in
sbb
adc
jmp
inc
loope
stos
pop
or
std
sbb
rol
outs
push
repz
and
push
fpatan
dec
add
nop
and
xchg
in
pop
cs
mov
out
icebp
das
cmps
mov
xor
mov
mov
das
cmp
cmc
shr
mov
popf
push
mov
jle
jmp
repz
repz
push
cmp
mov
push
sbb
and
popa
clc
retf
loop
rol
xchg
add
pushf
mov
add
ss
inc
dec
xchg
shl
(bad)
in
cmp
push
inc
call
mov
adc
retf
or
aam
cmp
(bad)
or
adc
xor
mov
jmp
std
ds
push
jmp
xlat
fs
inc
outs
enter
xchg
test
out
aad
ror
dec
je
and
dec
mov
jns
aaa
call
xor
adc
push
in
cmp
and
or
add
mov
jmp
test
xor
jo
add
lahf
and
mov
add
outs
imul
adc
fild
das
fwait
(bad)
inc
push
loope
std
push
push
sbb
jo
fldl2e
sbb
sahf
es
call
je
retf
cmps
movs
adc
ja
popf
cdq
sbb
sbb
inc
and
clc
clc
jns
push
xor
lea
inc
sub
ins
or
int
pop
shr
xor
fldcw
adc
leave
jmp
fild
push
movs
cmp
inc
out
mov
call
rol
push
fs
mov
scas
rcl
mov
(bad)
jmp
mov
xlat
jae
dec
pop
retf
shl
cmps
sbb
fisttp
sub
stos
mov
cmp
cs
inc
pusha
inc
iret
gs
sub
sub
js
out
cdq
dec
push
inc
sbb
pusha
aam
jp
fisub
xor
ja
adc
and
mov
and
inc
and
in
mov
addr16
ss
rol
inc
hlt
pop
nop
jge
sbb
jnp
sub
and
push
repnz
xchg
mov
aas
xchg
imul
fist
push
mov
add
iret
push
sub
movs
dec
sar
sbb
mov
fucomi
xchg
xchg
or
jnp
dec
xchg
lds
cwde
xor
push
loopne
(bad)
daa
sahf
cmp
rcr
add
jge
and
jecxz
lahf
sbb
add
cdq
or
mov
xchg
int
cld
inc
xchg
scas
jg
scas
test
out
bound
or
cmc
shl
or
iret
popa
xor
adc
not
cli
stc
or
inc
mov
dec
pop
dec
dec
arpl
div
loop
pop
sbb
rcl
fisttp
retf
adc
pop
test
add
aaa
adc
push
(bad)
dec
xor
mov
ret
outs
loop
mov
push
push
gs
test
lods
ret
jno
pop
fadd
push
xchg
jp
jmp
(bad)
(bad)
and
stos
test
daa
repz
mov
mov
mov
mov
fidiv
cmp
and
(bad)
jne
mov
jmp
sbb
jecxz
cld
sub
(bad)
(bad)
mov
jmp
jnp
and
or
push
clc
jbe
pop
cmp
inc
sbb
pop
xchg
pop
ds
idiv
test
pop
xchg
sub
xor
icebp
push
jns
(bad)
(bad)
cmp
sbb
and
test
cmp
mov
sahf
mov
or
ud0
inc
daa
push
mov
xchg
(bad)
int
cmps
xchg
jne
std
sub
sub
or
mov
jecxz
jo
push
retf
(bad)
jp
call
scas
rol
pop
fnsave
and
pop
idiv
daa
pop
jb
sbb
jo
popa
fwait
jecxz
in
sahf
lea
fsub
loope
and
fmul
mov
(bad)
and
data16
daa
(bad)
cmp
icebp
jl
jp
scas
gs
mov
cmp
xor
adc
pop
cmp
std
xchg
mov
mov
retf
test
sub
mov
mov
xchg
mov
and
scas
mov
and
aas
sbb
inc
gs
pop
(bad)
pushf
cli
mov
mov
cmps
mov
cmc
ins
test
bound
call
mov
cmp
lds
js
xchg
xor
add
lds
mov
je
mov
dec
push
hlt
and
pop
or
and
dec
add
inc
movs
outs
mov
les
add
pusha
retf
or
mov
(bad)
dec
pop
mov
sti
sbb
jl
frstor
jae
(bad)
mov
mov
pop
jmp
popf
add
jecxz
repnz
cdq
push
mov
inc
inc
lds
in
jnp
push
nop
adc
(bad)
sti
addr16
adc
dec
ja
cli
addr16
js
xor
(bad)
cdq
(bad)
xchg
jno
dec
xlat
out
adc
inc
rcr
(bad)
call
mov
enter
stos
cmc
pop
movs
ins
sbb
adc
xor
jns
imul
add
aaa
mov
or
ficom
popf
imul
fst
in
mov
xlat
fsub
sahf
and
mov
int
add
sub
and
dec
int
push
pop
movs
or
jns
inc
cmps
ss
in
cmc
ret
in
and
sbb
in
xchg
push
jmp
xor
dec
sbb
cmp
and
es
ret
in
xchg
jge
loopne
jecxz
sbb
dec
sahf
mov
addr16
push
sub
cmp
das
pop
ja
add
and
sbb
and
shl
imul
sbb
xchg
mov
xor
pusha
dec
mov
cld
mov
shr
push
xchg
out
ret
dec
cmc
rcl
adc
jmp
bound
jle
mov
or
lahf
mov
fbstp
fcomi
push
jle
pop
addr16
test
into
ins
xchg
add
inc
aam
push
or
inc
stc
sub
test
mov
pop
push
mov
(bad)
ret
sti
fdiv
and
cmp
dec
xchg
test
or
xor
cmp
fucomp
mov
add
fisttp
jmp
lea
push
cmp
or
aam
repnz
jmp
popa
xor
xor
or
xor
dec
movs
fmul
adc
mov
sub
mov
add
pop
inc
jo
leave
mov
cmp
dec
ins
(bad)
hlt
adc
xchg
push
pop
or
push
retf
outs
jle
ret
mov
jmpw
call
(bad)
mov
lahf
mov
cmps
stos
mov
adc
or
dec
in
sub
ret
xchg
xlat
adc
push
jle
pop
mov
push
cli
pop
and
pop
mov
jmp
popf
xchg
iret
lds
(bad)
fcomp
sub
or
mov
sbb
fmul
xchg
jnp
push
stos
in
sbb
sbb
or
add
inc
xchg
scas
sbb
xchg
int3
std
mov
scas
inc
shr
pop
and
shr
adc
pusha
out
popa
cwde
mov
pop
push
out
stc
pop
cld
xchg
jge
add
jl
loopne
xchg
cmp
leave
or
ret
cli
pop
mov
mov
sub
and
out
inc
dec
sub
pop
lock
sub
sub
pop
ret
leave
pop
push
sbb
cli
mov
jne
jb
pop
and
jne
pop
(bad)
jmp
clc
add
pop
dec
add
or
push
pop
inc
cmp
or
not
lea
jmp
inc
sbb
cwde
in
aas
mov
iret
mov
imul
iret
jae
gs
mov
ins
mov
jb
dec
cdq
mov
iret
movs
push
push
shl
push
aad
fmul
movs
dec
jp
jb
mov
imul
push
jp
mov
in
sbb
loope
ja
jne
dec
jae
pop
frstor
pop
mov
jae
mov
test
push
jle
jae
stc
and
push
fbld
jno
das
mov
mov
xchg
(bad)
jl
div
shr
adc
frstor
hlt
pop
cmp
dec
xchg
dec
rcl
inc
xchg
inc
jne
pop
mov
mov
test
mov
cwde
pop
dec
mov
ds
loopne
mov
pop
repz
lods
mov
enter
xchg
(bad)
pop
test
mov
hlt
popf
mov
pop
sub
sub
cmp
add
sbb
jle
or
jmp
inc
or
mov
lds
enter
ret
push
loope
scas
and
fucomp
ins
das
int3
sbb
dec
mov
shl
loop
loop
fsubr
push
scas
into
mov
fsubr
jne
xor
mov
std
mov
je
and
ror
jmp
xchg
in
(bad)
and
jp
imul
mov
scas
mov
shl
pushf
pop
sub
cld
push
or
(bad)
xchg
xor
cli
ss
aam
sub
pop
mov
std
xor
inc
mov
dec
data16
in
outs
dec
jnp
mov
mov
and
gs
mov
dec
mov
push
mov
xchg
jg
(bad)
out
push
pop
push
sub
in
movs
xor
ja
std
mov
sbb
push
xchg
sub
dec
jno
xlat
pop
jno
ror
cwde
int
ds
adc
adc
ins
sub
lds
jg
cmp
pop
sbb
mov
mov
js
dec
fstp
add
jmp
sub
out
loope
inc
cs
mul
sbb
add
mov
int
daa
pop
mov
int3
shr
lods
xchg
adc
das
aaa
retf
sub
mov
xchg
(bad)
mov
and
and
mov
lds
test
scas
inc
mov
cwde
mov
jno
mov
test
lods
into
xor
inc
pop
pop
jo
scas
adc
mov
lea
fs
es
in
sar
adc
cmp
int
out
cmps
add
push
push
dec
cmp
call
loop
test
arpl
arpl
cmc
movs
inc
arpl
inc
pushf
out
mov
mov
jge
jns
neg
stos
xor
aas
imul
cs
add
shl
or
mul
xchg
inc
ins
and
out
popa
add
cmp
add
adc
std
inc
jle
add
inc
inc
aad
pop
cmp
repnz
jge
pop
mov
in
dec
maskmovq
idiv
jmp
mov
jno
outs
jl
mov
(bad)
mov
cdq
bound
and
in
lahf
mov
mov
(bad)
jnp
jbe
mov
fist
scas
mov
popf
xchg
adc
jbe
sub
mov
fcmovu
mov
mov
out
rcl
cmp
clc
xchg
xchg
popa
shl
jae
rcr
ins
and
adc
mov
jle
call
dec
icebp
add
iret
push
(bad)
xchg
inc
mov
(bad)
xchg
adc
cld
mov
mov
pop
cmps
push
push
jecxz
aad
adc
push
adc
std
cmp
(bad)
lods
and
sub
add
ds
aad
shr
loopne
xchg
loope
mov
mov
mov
pop
mov
pop
dec
xchg
popf
add
jg
sub
std
cli
dec
aad
stos
sbb
pop
loop
xchg
ror
add
(bad)
xchg
jg
mov
lea
cmp
(bad)
cld
dec
sbb
or
gs
mov
inc
add
sahf
add
aas
pusha
inc
and
scas
push
ins
xor
ja
mov
push
aaa
inc
rcl
in
in
not
repz
dec
jg
int
cmps
pop
sub
aaa
cwde
pop
and
lods
lock
adc
les
jo
pop
push
ins
add
mov
stos
pushf
loopne
pop
test
fwait
pop
fsubr
xor
cli
shr
push
push
and
retf
mov
call
cmp
fwait
sub
xchg
cs
stos
add
jb
test
nop
enter
xor
pushf
sub
fsub
push
rol
and
test
rcl
sti
jl
mov
mov
call
xchg
fadd
fs
aad
inc
pop
fldcw
lock
mov
pop
jp
sub
mov
lea
not
xor
jl
jmp
sbb
add
fmul
mov
push
jl
inc
scas
iret
aaa
xchg
rol
stos
clc
push
je
sbb
jne
xchg
push
xor
mov
pop
pusha
xchg
(bad)
aas
mov
pusha
scas
pop
ficom
cld
jmp
cmp
leave
movs
xlat
outs
popf
fisttp
jle
shl
out
push
mov
leave
(bad)
pop
out
mov
ror
jle
into
pop
mov
mov
jmp
(bad)
repz
cwde
mov
pop
loope
jg
fdiv
pop
mov
xchg
jg
adc
aam
(bad)
sub
movs
xchg
(bad)
mov
push
stc
ins
cdq
mov
jns
pop
pop
push
mov
push
inc
dec
stos
pause
aaa
and
push
adc
sub
popa
jp
ds
jne
mov
jbe
inc
push
fmul
fwait
out
loope
loopne
imul
fwait
pop
pop
cmp
xor
in
int3
ret
add
bound
popa
pop
xchg
js
mov
xchg
sub
mov
adc
xchg
movs
adc
in
loope
(bad)
inc
retf
pop
dec
push
mov
sahf
push
mov
push
adc
aad
scas
and
stos
or
into
enter
and
(bad)
xor
hlt
fs
hlt
push
fwait
push
cmps
(bad)
ffree
mov
lods
sahf
imul
sar
add
icebp
or
aam
adc
ins
add
test
ins
and
dec
pop
loop
imul
mov
in
adc
fisub
sub
rcr
fdivr
pushf
inc
stos
hlt
xchg
cld
jo
dec
pop
test
in
mov
in
popa
cmps
pop
cli
int
mov
and
push
test
inc
mov
ret
dec
adc
movs
cs
mov
sub
setbe
aad
or
gs
cwde
xchg
push
pop
aam
jp
lods
pop
loopne
cdq
(bad)
movs
fbld
sub
add
and
sub
ds
frstor
dec
repz
loop
gs
cmp
sub
and
arpl
sub
xchg
test
(bad)
(bad)
cmp
ficom
or
(bad)
and
push
jp
cmp
mov
sti
or
mov
mov
(bad)
aaa
add
fmul
sahf
jbe
clc
add
inc
add
sbb
fsubr
sbb
pop
push
inc
cmp
retf
and
jbe
dec
ret
adc
in
lock
cmp
ror
fsubr
js
pop
jne
sub
xor
jle
sbb
lahf
adc
cmc
sbb
movaps
loopne
lea
fimul
out
loopne
cmp
cli
popa
cli
ins
xor
fdivr
mov
clc
int
xor
push
gs
rcl
push
dec
ja
mov
jbe
inc
test
shr
ja
sub
dec
push
(bad)
or
mov
push
xor
or
mov
cmc
nop
xchg
xor
pop
add
push
jg
push
push
jbe
jbe
mov
jle
into
jnp
adc
cdq
mov
xchg
fwait
push
pmulhuw
inc
jmp
mov
ins
clc
jbe
mov
pop
das
and
repnz
push
std
xchg
scas
mov
dec
lahf
push
daa
ja
jae
loop
cmp
test
leave
mov
(bad)
retf
mov
idiv
or
adc
jge
pop
pusha
(bad)
inc
push
mov
and
das
mov
adc
pop
pop
sbb
ret
add
inc
xor
retf
jle
dec
mov
sub
gs
jmp
jecxz
out
ror
sbb
xchg
cmps
and
xchg
(bad)
test
push
dec
pop
ret
out
xchg
cmp
ret
push
sbb
add
inc
mov
lock
xchg
cmp
adc
add
loope
sub
push
mov
sbb
xor
imul
fsubr
sbb
cmp
test
bound
inc
adc
pop
mov
push
in
int3
jo
pop
mov
or
ja
cmc
cmps
sub
test
dec
push
mov
mov
outs
(bad)
xchg
mov
pop
les
fiadd
xor
mov
test
movs
mov
inc
(bad)
fidiv
and
(bad)
dec
or
pop
or
xchg
jne
shl
mov
or
icebp
xchg
aaa
jge
(bad)
enter
in
sti
scas
xor
je
push
adc
and
xor
push
dec
mov
dec
ins
mov
test
test
movs
pop
mov
test
add
aaa
add
int
xchg
cdq
into
pop
dec
sti
cwde
push
xbegin
loopne
(bad)
out
lds
stc
call
dec
das
sub
add
rcr
(bad)
dec
xchg
sbb
sbb
xor
jg
mov
mov
mov
out
cmps
pop
cmp
icebp
and
bound
inc
(bad)
cmc
cmp
inc
adc
or
sbb
bound
int
xchg
repnz
call
pop
(bad)
mov
pop
scas
in
and
cmc
mov
xchg
nop
retf
imul
aad
fild
repnz
dec
jb
mov
mov
adc
fidiv
cmp
int3
jp
xchg
in
mov
repnz
jno
jns
mov
sbb
scas
inc
jnp
imul
ret
mov
std
add
popf
push
mov
aam
fst
xor
sbb
clc
jae
adc
cmp
dec
and
in
fdiv
mov
and
stos
xchg
mov
add
inc
mov
outs
shl
retf
sub
and
lds
fwait
xchg
jmp
adc
sub
xlat
mov
pushf
xor
jmp
ja
aad
fmulp
xlat
test
dec
sub
push
mov
add
in
and
cmp
sub
sub
push
sub
test
fwait
inc
mov
shl
mov
mov
pop
mov
cmp
cmp
rcr
mov
pop
rol
mov
sbb
dec
out
jo
in
test
cdq
out
idiv
jmp
(bad)
jmp
push
out
adc
inc
leave
in
cmp
jecxz
and
movs
push
push
mov
retf
mov
mov
xor
mov
movs
xchg
int
sub
popf
push
mov
sar
aad
ins
jnp
jnp
stc
call
aaa
in
in
pop
call
in
inc
pop
pop
(bad)
add
jnp
cmp
mov
pop
aas
movs
stos
push
lea
fild
outs
test
mov
ret
in
pop
stos
adc
sbb
pop
mov
dec
mov
cli
add
push
sub
dec
and
std
mov
sub
dec
adc
in
cmps
out
outs
cld
nop
or
push
pop
lods
repz
addr16
mov
jmp
ins
std
push
jmp
mov
jg
pusha
ds
stos
fs
push
xchg
or
adc
push
mov
rcl
(bad)
fist
lods
adc
sbb
adc
mov
inc
cmps
(bad)
call
sub
ss
retf
sbb
mov
adc
push
adc
outs
leave
mov
enter
addr16
inc
mov
push
(bad)
mov
push
icebp
cmps
lods
test
xchg
sub
fisttp
int
sub
or
nop
outs
imul
mov
pop
icebp
cmp
sbb
cmp
and
mov
xor
pop
dec
jns
jmp
fld
push
out
cmp
add
and
cdq
sti
daa
rol
mov
sbb
ret
iret
push
dec
bound
arpl
and
fiadd
jne
adc
jns
pop
sbb
push
ret
outs
loopne
add
rol
push
pop
sbb
outs
sbb
sub
js
cmovb
addr16
mov
in
enter
retf
cs
push
mov
mov
pop
jl
mov
ja
fwait
cmc
(bad)
lods
mov
stc
xor
fisttp
adc
fcomp
outs
sub
push
sub
pop
dec
(bad)
dec
jmp
dec
ret
fs
dec
mov
pushf
fcom
pop
aas
push
xchg
leave
ror
xchg
push
retf
in
xchg
sbb
xor
add
mov
xchg
fdiv
sbb
sub
and
hlt
mov
pusha
jmp
movs
or
cmp
sbb
pop
into
enter
cmp
inc
test
push
int
jne
mov
into
pusha
js
mov
push
inc
or
add
mov
test
inc
and
cmp
loop
leave
stos
or
add
dec
aaa
popf
mov
adc
inc
xchg
pushf
ins
mov
cmc
xchg
mov
pop
test
daa
cli
int
and
test
inc
xchg
jne
or
(bad)
enter
xor
mov
push
out
push
clc
jns
call
mov
dec
mov
mov
(bad)
lods
(bad)
or
repnz
jle
iret
push
fcom
sub
inc
and
inc
jno
je
adc
inc
or
aam
mov
dec
js
jmp
les
(bad)
adc
gs
daa
je
cmp
or
jne
int
add
mov
aas
sbb
xor
sub
icebp
add
(bad)
movs
addr16
push
jl
xor
shl
pinsrw
sub
mov
inc
xchg
es
leave
fcomp
pop
into
xor
sbb
sub
movs
push
icebp
and
fsubr
adc
retf
ret
sub
and
clc
push
mov
sub
adc
js
inc
pop
mov
jp
jle
hlt
and
ret
xchg
(bad)
shl
gs
nop
aaa
xchg
mov
push
mov
dec
add
xor
aad
enter
icebp
cmp
or
jg
mov
xor
push
push
das
mov
repnz
mov
dec
loop
add
mul
sub
or
hlt
and
aaa
shl
mov
(bad)
and
aas
push
ret
and
int3
mov
ret
aas
dec
mov
fiadd
outs
sbb
nop
std
fst
cmp
push
call
outs
outs
push
cli
cmp
xchg
movs
or
aas
adc
xchg
add
dec
adc
adc
and
scas
adc
(bad)
out
jo
xchg
jle
scas
mov
lahf
dec
in
mov
jno
shl
sar
cmps
aas
loop
cmp
jle
adc
enter
shl
mov
and
sti
jno
ja
xlat
iret
or
sbb
loope
pop
jae
mov
(bad)
jo
ds
sub
mov
es
mov
inc
outs
lds
push
in
cmp
jb
out
push
mov
mov
sbb
pushf
push
xchg
out
test
shl
adc
sub
daa
clc
inc
pop
or
enter
inc
es
lock
js
pop
xchg
push
pop
cmp
ja
xchg
ins
adc
(bad)
cmp
add
cmp
jae
pop
int3
out
jne
test
dec
scas
adc
lock
pop
ror
xchg
std
int
xchg
dec
ficom
sub
push
lods
push
sub
xchg
jge
pushf
add
mov
sbb
out
pop
arpl
xor
or
push
or
and
ret
enter
sbb
xor
xchg
neg
repnz
mov
nop
mov
adc
out
sbb
popa
adc
ds
cmp
and
inc
les
mov
mov
add
lahf
push
add
mov
dec
or
push
or
or
mov
mul
popa
xchg
fidiv
sahf
popa
ss
sbb
das
and
add
pusha
xlat
mov
bound
gs
loopne
mov
or
fs
jg
mov
mov
inc
jo
(bad)
pop
bound
pop
adc
mov
out
or
ret
jp
stc
mov
fisttp
sbb
ja
mov
mov
dec
aaa
push
fisttp
or
ins
loopne
sub
call
scas
je
sbb
out
add
adc
aas
scas
xchg
jo
fucomi
dec
mov
inc
ret
jne
imul
sbb
mov
jmp
js
sbb
adc
mov
push
ins
sti
clc
inc
xchg
xor
pusha
dec
outs
xor
sub
fild
stos
cmps
mov
imul
pop
dec
adc
out
in
adc
cmps
(bad)
lahf
jb
stos
jo
in
jmp
ins
add
test
pusha
shl
in
or
jne
and
icebp
and
adc
(bad)
retf
fidiv
imul
xchg
aam
push
xor
dec
jb
mov
push
jb
and
repnz
sahf
jo
stos
inc
add
push
xor
imul
jo
ret
dec
push
adc
std
(bad)
xchg
push
cld
mov
pusha
rol
repz
fwait
ret
aas
ss
into
and
mov
fcomi
cmp
fild
cld
pop
pop
adc
imul
test
xor
jl
pop
cmp
out
loop
mov
loopne
jno
(bad)
add
fbstp
dec
iret
xor
push
pop
or
loope
clc
mov
ds
test
data16
ret
dec
mov
jmp
fild
mov
(bad)
mov
xchg
mov
inc
cmp
sbb
push
mov
sbb
mov
jo
sbb
ins
nop
inc
adc
movs
push
repz
xchg
in
ficom
add
in
mov
cmp
jmp
xor
adc
xchg
lock
push
xchg
retf
xchg
cmovo
pop
popa
inc
mov
(bad)
push
in
adc
rol
inc
mov
sub
lods
shl
mov
fdivrp
mov
pop
(bad)
loop
(bad)
inc
fld
pop
pop
push
int3
dec
sub
in
jmp
scas
icebp
jae
ins
mov
sbb
mov
repz
shl
(bad)
mov
push
push
ss
lods
ins
retf
jge
shl
cmps
xor
mov
hlt
add
stc
aaa
scas
xchg
je
rep
dec
pushf
jbe
popa
fdiv
cmp
add
aas
push
xchg
add
mov
pop
out
cmp
sbb
push
leave
inc
nop
repz
xchg
sbb
div
enter
lods
mov
push
rcl
ja
lods
push
outs
out
cmp
pop
clc
jmp
mov
add
cdq
or
in
fcom
xchg
pusha
(bad)
out
cs
data16
repz
sbb
mov
xchg
sub
fwait
mov
es
or
pop
cmp
inc
icebp
out
mov
push
jns
cmc
fistp
mov
mov
ss
test
push
clc
stc
aam
or
pop
dec
scas
mov
ja
or
mov
enter
fmul
inc
jg
lock
shl
jne
enter
aad
sub
xor
xchg
sub
add
sub
lods
adc
fstp
clc
sar
cmps
push
repz
stos
adc
jmp
pushf
push
ret
and
sbb
cmp
dec
cmc
js
xchg
mov
cmp
int3
loop
xchg
pop
push
aas
in
in
cli
mov
cmp
jecxz
ins
mov
sub
xor
js
adc
pop
xchg
push
faddp
sbb
mov
lea
test
ja
jbe
cmp
add
sti
dec
jp
sub
mov
pop
les
push
adc
fsin
sub
dec
loopne
push
mov
pop
dec
adc
mov
mov
dec
cmp
ret
or
jl
in
les
scas
cmp
test
push
retf
(bad)
stc
jle
retf
lea
or
adc
lods
pushf
aas
mov
jmp
lods
in
adc
sbb
pop
dec
das
push
sbb
stos
cmc
test
loop
ret
test
std
xor
xchg
fs
jge
mov
xchg
test
sbb
das
fidivr
push
inc
lahf
jbe
mov
popf
test
inc
mov
lds
jp
add
dec
je
push
push
cwde
fcmovnu
imul
daa
add
ins
scas
iret
cli
fsub
jb
sub
sbb
test
ja
pop
cli
call
inc
add
xor
popa
xchg
sbb
fistp
xor
fwait
push
or
cdq
ja
or
rol
sahf
jbe
jmp
leave
neg
stos
mov
lahf
fidivr
rcr
popa
push
outs
mov
je
sbb
cdq
inc
jmp
les
add
sub
(bad)
inc
int3
pushf
retf
(bad)
mov
adc
sbb
mov
stc
outs
sar
outs
sbb
jg
dec
mov
out
fidivr
jne
in
or
aas
shl
mov
push
imul
aas
inc
loopne
and
stc
add
movs
or
loop
lock
movs
cmp
push
popf
leave
into
or
cmp
fs
add
and
lods
repz
loopne
aaa
mov
dec
in
dec
je
loope
add
dec
popf
fwait
xlat
cmp
push
jns
push
mov
adc
cmp
icebp
inc
lock
int
jb
movs
jp
mov
ins
leave
xlat
jns
ss
lea
sbb
scas
lock
sub
lds
in
fsub
lods
(bad)
imul
rol
inc
data16
arpl
pop
cmps
jmp
mov
call
jmp
sahf
aas
nop
ret
lahf
sbb
sub
cwde
jno
retf
adc
and
cli
les
jecxz
scas
sub
jmp
pop
leave
cli
stos
add
aad
jns
sub
out
in
ja
add
jle
adc
sbb
dec
bound
jno
mov
add
test
aad
dec
iret
add
test
cli
mov
call
(bad)
xlat
or
aad
add
out
in
shl
push
gs
icebp
push
sub
dec
fisub
push
hlt
and
in
mov
inc
fwait
and
mov
fs
push
sbb
cli
loopne
inc
imul
mov
xor
mov
lds
pop
push
aaa
cli
shl
jl
push
adc
int3
dec
pop
pusha
dec
pop
(bad)
fs
xor
lods
sbb
mov
jmp
(bad)
fmul
ret
mov
push
ror
pop
iret
pop
cli
adc
je
sub
(bad)
mov
adc
xchg
test
enter
jmp
sub
aam
les
dec
das
xchg
ja
mov
xchg
fsub
std
xchg
int
stos
mov
adc
loope
jo
(bad)
mov
mov
add
aad
sti
(bad)
iret
jp
lahf
and
mov
cmp
mov
sti
pop
or
sbb
cmc
aad
ficom
push
sbb
shl
mov
(bad)
dec
mov
xchg
mov
dec
adc
inc
sub
or
push
mov
cmp
jecxz
fs
shr
shl
inc
scas
call
mov
fcom
imul
fucom
xchg
xchg
es
cli
dec
adc
cmp
and
cmc
push
sub
dec
ror
jge
sahf
push
ret
clc
out
xlat
(bad)
movs
dec
inc
inc
neg
mov
add
jp
inc
lahf
sbb
(bad)
xor
mov
pop
mov
enter
out
mov
xor
xlat
cmps
mov
std
pop
push
test
sti
retf
fsubr
inc
int3
and
ror
push
ret
or
rcl
lock
xchg
dec
into
pop
stos
outs
fadd
lahf
in
dec
sub
mov
scas
scas
add
leave
dec
adc
and
xor
ror
sub
cwde
pop
(bad)
jnp
popf
and
mov
movs
and
push
mov
sar
gs
inc
mov
(bad)
xchg
jbe
bnd
cmp
outs
mul
nop
mov
inc
jnp
ja
pop
leave
lods
push
pop
xchg
sbb
pop
xor
adc
std
pop
jmp
adc
push
mov
xor
sub
out
adc
mov
ror
or
je
cli
test
sti
daa
das
int
or
in
push
aas
add
lods
fld
in
std
add
cmp
gs
adc
sar
adc
mov
scas
pop
dec
call
mov
cld
ret
and
dec
outs
fisttp
out
mov
pop
xchg
icebp
sub
push
clc
fstp
xchg
cmp
jmp
ins
fld
leave
sub
xor
inc
sub
xor
push
clc
int
mov
retf
adc
mov
pop
lods
xchg
cli
cwde
cmp
scas
jecxz
mov
cli
shl
jo
or
retf
pcmpeqb
push
jne
mov
cmp
add
mov
cmps
out
adc
iret
sub
cwde
loopne
fld
pop
adc
call
shl
call
cwde
inc
xchg
(bad)
call
pop
das
retf
mov
mov
das
loope
mov
nop
jae
cwde
sub
jl
cs
push
xchg
mov
pop
cmp
xor
dec
out
push
outs
jecxz
xor
mov
pop
call
cmps
push
(bad)
and
sbb
iret
sbb
jmp
popa
or
fs
xor
lods
mov
xor
pop
loopne
(bad)
mov
dec
cmp
or
dec
adc
sbb
pop
mov
and
pop
lods
and
inc
jno
hlt
aam
bound
lods
clc
loopne
add
xor
nop
or
retf
xor
std
(bad)
mov
mov
inc
push
jae
mov
sub
cmps
pop
sub
or
pop
or
inc
fadd
outs
dec
scas
and
xchg
jg
fcomp
shl
lods
jno
xor
and
int
cmc
aad
fs
fbld
sub
pushf
addr16
or
sub
push
push
push
in
cmc
xor
xor
dec
and
neg
jnp
mov
imul
sub
mov
enter
das
pop
bound
mov
ja
sbb
shr
test
into
sub
mov
into
punpcklbw
sub
mov
dec
cmp
imul
mov
jg
mov
idiv
and
xchg
leave
cmps
xor
sti
jno
and
daa
shr
mov
(bad)
outs
lahf
ffreep
xor
push
adc
or
xlat
jb
pop
test
cli
div
mov
movs
add
jge
and
inc
inc
jne
jp
stos
jbe
push
fild
mov
retf
stc
test
push
xchg
jge
jnp
and
mov
loope
scas
jg
lea
(bad)
jb
out
shl
enter
daa
sub
clc
js
mov
jbe
pop
test
in
add
sub
iret
cli
or
add
xor
(bad)
rol
arpl
pop
les
clc
ja
jmp
mov
dec
adc
ret
mov
xchg
inc
and
inc
lock
clc
stos
fwait
push
inc
push
int
mov
push
sub
add
or
jmp
ficomp
pop
add
ins
into
dec
retf
sub
xchg
xchg
push
push
push
cli
xchg
call
stc
ret
(bad)
push
sbb
call
call
mov
loopne
scas
mov
push
repnz
cs
inc
lds
clc
inc
push
and
call
cmp
add
(bad)
pushf
mov
jle
xchg
rcl
lea
sbb
hlt
sahf
sbb
call
xchg
xlat
add
iret
inc
data16
ins
hlt
aaa
dec
enter
jo
xchg
or
jae
jmp
xor
xor
xchg
mov
or
xchg
and
adc
repz
jns
lods
pop
jl
retf
push
inc
lods
dec
test
pop
xchg
adc
enter
fidiv
xchg
push
mov
cmp
sub
gs
mov
mov
inc
mov
xchg
xor
add
mov
jmp
pop
cld
(bad)
out
mov
push
clc
adc
int3
cmps
push
or
pop
std
adc
dec
pop
and
mov
mov
pushf
sbb
xor
dec
xchg
ret
mov
dec
sbb
frstor
jmp
sbb
and
fmul
rep
dec
(bad)
jp
lock
pop
dec
cmp
inc
push
fnstenv
jecxz
and
mov
mov
dec
dec
dec
ror
xor
mov
push
test
xor
sbb
aaa
xor
imul
xor
aas
gs
cld
imul
dec
dec
repz
mov
call
mov
push
xchg
sbb
dec
inc
fstp
out
push
std
shl
test
push
div
xchg
loop
mov
loopne
sbb
or
retf
mov
icebp
pop
sub
cwde
pop
xor
movs
in
adc
add
nop
test
sbb
(bad)
int
push
sub
movs
ja
ret
aas
out
inc
pop
xchg
mov
pop
jae
mov
cmp
enter
ror
jmp
in
push
int
or
xchg
out
add
retf
shl
imul
clc
adc
and
pop
push
mov
xor
push
mov
jg
and
ins
xchg
jns
inc
leave
in
xchg
out
call
mov
mov
int3
das
sar
cmp
lahf
js
mov
adc
sub
push
or
pop
ret
mov
xor
cmp
mov
inc
dec
cli
gs
mov
mov
add
cmp
ins
fwait
(bad)
shl
out
fdiv
jne
push
jae
cld
outs
jecxz
sub
dec
mov
jmp
dec
imul
sub
mov
js
push
pop
(bad)
mov
or
fnstenv
ja
pop
shl
(bad)
cmp
mov
sahf
add
push
sbb
(bad)
jle
stos
ffree
lock
fidiv
jg
or
mov
xchg
test
or
adc
outs
pusha
xchg
add
dec
mov
push
arpl
pop
pusha
push
aam
add
sbb
jge
es
lods
sbb
mov
or
mov
push
stos
into
jecxz
sbb
adc
outs
icebp
shl
ins
dec
mov
das
outs
je
cmp
std
dec
jne
cmp
jmp
adc
div
push
jb
stos
or
pop
mov
cmps
jae
or
add
mov
je
fs
mov
jp
repnz
mov
cmp
cmc
repnz
retf
mov
loop
mov
jbe
dec
jb
cmp
inc
fimul
inc
movs
out
push
jnp
std
mov
repnz
gs
xchg
jmp
xchg
ror
dec
sub
inc
gs
jns
push
xchg
mov
xor
neg
in
vmwrite
rcr
xchg
shl
pop
jno
hlt
ds
jl
stos
fcomp
adc
cmp
mov
call
(bad)
popa
cld
inc
push
arpl
int3
cwde
maxps
xchg
aad
cmp
loop
je
adc
imul
xchg
addr16
call
dec
inc
mul
jecxz
add
mov
mov
test
ja
mov
xchg
or
out
mov
call
lea
xchg
mov
push
add
jae
dec
mov
ss
int
jo
lock
dec
sub
out
aaa
dec
mov
test
jno
sub
pop
dec
ret
xor
sub
mov
(bad)
jecxz
or
fst
mov
out
push
push
in
mov
lock
ja
xchg
cmps
rcl
xchg
gs
sub
or
adc
ret
(bad)
push
push
into
jmp
rcl
pop
retf
cmps
mov
mov
aam
xchg
xor
test
call
aaa
(bad)
push
xchg
xchg
fwait
push
icebp
and
push
sbb
test
test
add
clc
inc
or
call
mov
out
push
call
add
int
pop
cdq
push
xlat
push
jp
lds
es
jno
or
adc
shl
js
lods
popa
(bad)
retf
fcom
mov
sahf
rcl
adc
lods
loope
shr
(bad)
movs
xor
test
mov
std
cld
jnp
mov
in
movs
mov
push
sub
jne
sbb
hlt
mov
xchg
std
sbb
dec
adc
add
mov
or
fcom
sti
mov
pop
stc
cmc
dec
sub
jmp
sub
sub
pop
andps
clc
mov
cld
xchg
(bad)
enter
or
add
fprem
and
int
aaa
sub
loop
das
or
imul
stos
mov
adc
loop
and
cmp
inc
mov
xor
or
mov
inc
call
mov
bound
adc
dec
mov
adc
push
mov
mov
imul
ror
or
movs
jmp
movs
or
es
jl
inc
fidiv
mov
pop
push
or
inc
push
popf
bound
dec
jl
mov
xchg
cmps
mov
sub
and
jne
or
adc
sub
enter
jae
loopne
push
fstp
and
mov
push
in
test
jnp
cli
rcr
sub
cld
push
pop
mov
(bad)
jmp
arpl
add
mov
xor
adc
loope
inc
pop
inc
out
jnp
inc
jae
mov
fdiv
sbb
cmc
repnz
pop
xor
mov
retf
xor
cmp
icebp
dec
inc
mov
daa
mov
repnz
mov
mov
outs
add
xchg
cwde
push
pushf
xor
pop
or
pop
sub
and
cdq
mov
jno
shr
out
fucom
adc
mov
add
cmp
and
adc
sahf
jmp
test
jae
ror
mov
cmp
lods
push
out
cmp
xor
(bad)
adc
sahf
stc
pop
test
push
imul
cmp
and
(bad)
xor
pop
stos
lds
stos
xchg
iret
stc
push
jp
push
pop
fnsave
push
ds
(bad)
in
ss
inc
es
cmp
xlat
std
sbb
jp
in
add
inc
cmp
cmps
ret
imul
inc
ins
(bad)
xchg
into
xchg
cmc
sbb
fcomp
mov
mov
(bad)
mov
in
ret
mov
lods
call
sub
test
mov
xor
aam
pop
scas
xor
push
sbb
xchg
sbb
ss
outs
and
std
stc
adc
xlat
das
ins
daa
mov
cli
iret
(bad)
mov
ret
pushf
js
mov
icebp
imul
dec
and
cli
pop
aas
sub
fucomp
sbb
dec
(bad)
mov
(bad)
movs
test
scas
(bad)
ins
cmp
sbb
loope
mov
test
xchg
je
lahf
push
or
pop
inc
dec
mov
sub
aaa
int3
es
cwde
arpl
pop
xchg
call
adc
cmp
mov
push
dec
xor
mov
test
(bad)
pop
adc
adc
aaa
movs
shl
leave
pop
aaa
cmp
mov
jo
sub
sbb
dec
mov
mov
mov
push
xchg
push
pop
shl
jne
sbb
mov
push
dec
jne
ret
fucomip
push
mov
and
or
cld
mov
push
jmp
lods
stos
fs
rcl
mov
call
call
or
xchg
icebp
or
je
stos
mov
out
gs
pop
fcom
mov
(bad)
lahf
gs
imul
(bad)
or
sbb
in
jmp
ret
mov
pop
xor
jns
mov
sbb
adc
inc
test
(bad)
aaa
stc
mov
mov
push
push
bound
clc
cli
cdq
sbb
jmp
inc
sbb
fiadd
out
icebp
mov
enter
jp
out
xor
sub
push
sub
sahf
(bad)
adc
xchg
dec
mov
sub
xor
push
push
js
pop
or
xor
pop
fiadd
jmp
jg
sar
(bad)
call
mov
or
loop
mov
jp
jno
cmp
stos
stos
aad
jg
repz
push
jno
sub
imul
pop
into
pop
cmp
cli
imul
ins
jno
or
add
add
xor
mov
sub
(bad)
jo
or
sbb
or
xor
add
dec
push
hlt
or
aam
icebp
sbb
popf
pop
pop
jl
and
mov
dec
out
mov
dec
std
pop
jmp
nop
xchg
bound
xchg
repnz
push
adc
sub
dec
sbb
ret
scas
mov
inc
stos
shl
repz
jns
pop
inc
mov
int
cmps
(bad)
ds
shl
jno
xor
(bad)
or
mov
adc
xchg
push
pop
mov
ja
repnz
cmp
in
arpl
addr16
into
or
outs
and
call
and
mov
dec
into
xchg
add
out
les
jge
dec
jl
and
test
add
and
inc
iretw
movs
test
push
int3
arpl
fisttp
pop
xor
cmp
ret
push
ret
dec
add
fsubr
or
or
hlt
adc
pushf
xlat
xchg
lea
jbe
mov
addr16
xor
leave
jmp
mov
sub
imul
ror
pop
mov
jnp
xchg
not
(bad)
out
jbe
and
inc
mov
jae
out
nop
push
in
jbe
xchg
pop
sub
scas
push
test
(bad)
adc
sbb
push
loopne
mov
movs
das
xchg
push
inc
xlat
or
add
mov
inc
mov
(bad)
aam
mov
pushf
push
jae
(bad)
push
adc
aaa
std
mov
ja
push
push
(bad)
xchg
mov
add
call
cdq
inc
and
push
out
add
arpl
pop
dec
cmps
call
sar
adc
cmp
fsubr
(bad)
enter
sbb
xchg
addr16
fisubr
adc
cmp
xchg
xor
das
data16
dec
inc
aaa
push
push
mov
push
(bad)
add
pop
dec
(bad)
mov
xchg
fdivr
bound
xchg
pop
ins
dec
dec
in
iret
add
push
imul
push
bnd
stos
rol
and
mov
pop
cmp
(bad)
xor
leave
jo
push
and
jle
cdq
mov
add
nop
addr16
jb
sub
push
inc
and
ror
pushw
mov
cmp
jg
int
imul
das
mov
in
inc
or
mov
jae
in
in
fdivr
in
inc
dec
pop
sub
mov
(bad)
sub
sbb
jmp
nop
or
xchg
call
inc
jmp
push
xchg
mov
mov
pop
in
xchg
xor
jne
lahf
imul
xor
push
sar
out
push
repz
pop
cs
mov
cs
push
or
lahf
mov
fwait
push
hlt
jp
jmp
pop
pop
fiadd
pop
fisub
out
mov
out
fbstp
push
ja
aas
mov
xchg
imul
test
hlt
mov
cmp
dec
outs
mov
jmp
sbb
add
mov
mov
or
mov
call
aaa
repnz
jbe
sahf
cmp
pop
mov
sbb
and
dec
push
dec
mov
gs
int
sbb
and
ja
cmp
popf
in
ror
(bad)
(bad)
xchg
retf
call
cdq
retf
popf
sub
mov
in
in
dec
mov
aas
push
ins
stos
xchg
mov
js
(bad)
movs
(bad)
dec
and
or
in
jno
mov
out
pop
out
imul
sub
out
repz
mov
inc
or
movs
sbb
pop
xor
jo
pop
fnstcw
std
out
jg
mov
cs
jecxz
cmp
inc
push
pop
add
daa
nop
sub
sbb
test
or
add
push
shr
loope
xchg
div
and
sub
je
push
and
mov
stc
pop
test
jmp
sub
pop
das
shr
or
lea
add
push
mov
scas
test
out
mov
jbe
and
xchg
movs
add
mov
xchg
jb
mov
std
push
xchg
popf
adc
pop
pop
mov
dec
in
int
xlat
ficomp
mov
rcr
mov
imul
lods
retf
icebp
int3
add
cmp
xor
test
xchg
xor
test
cs
xor
xor
test
add
(bad)
xor
(bad)
fdivr
mov
aas
sar
in
lods
addr16
mov
cwde
pop
mov
test
fcomp
test
cwde
sbb
and
jmp
setb
outs
mov
mov
adc
mov
dec
retf
fnstenv
ins
ss
(bad)
pop
inc
int
icebp
xor
dec
cs
nop
jmp
adc
int
mov
pop
push
mov
stos
push
pop
pushf
xchg
sbb
loopne
and
inc
and
sbb
data16
js
push
repz
and
jbe
mov
data16
mov
arpl
in
inc
retf
xchg
fiadd
retf
aaa
mov
sub
pop
clc
cmp
(bad)
mov
push
fst
or
sbb
ins
adc
cs
dec
movs
sub
jno
sbb
pop
mov
(bad)
or
(bad)
enter
or
jl
(bad)
in
cmps
sbb
push
push
sti
adc
adc
mov
jmp
repz
jne
sti
push
arpl
mov
mov
sub
jb
mov
lds
xchg
fnstcw
and
shr
(bad)
sahf
pop
fistp
dec
push
sbb
adc
lds
sub
mov
jl
test
aas
xchg
das
dec
jo
sub
mov
pusha
add
test
xor
jns
push
arpl
lods
xor
lds
call
jae
xchg
gs
lahf
mov
test
cmp
ins
add
add
daa
imul
fwait
outs
and
mov
inc
in
data16
mov
and
jmp
call
pusha
dec
cs
xor
or
xor
enter
scas
out
mov
push
add
lds
inc
jno
lock
xchg
mov
pop
push
cmp
mov
in
pop
push
cli
mov
add
fst
(bad)
stos
xlat
and
loopne
dec
mov
dec
sbb
mov
fisttp
xor
mov
cdq
lds
cld
retf
in
loopne
dec
test
add
xchg
dec
mov
jl
inc
mov
sub
aam
fnsave
push
aaa
loopne
dec
mov
sub
pop
pop
loope
jge
pushf
das
lds
pop
imul
fidiv
push
(bad)
lock
jp
xchg
fist
popa
scas
sti
nop
fwait
mov
lock
pop
mov
xchg
mov
ins
sahf
js
xchg
aas
sub
adc
mov
jge
inc
jmp
aam
sub
enter
sub
enter
or
mov
rcr
mov
repnz
jb
sub
cmc
pop
pop
(bad)
jmp
sub
and
jbe
(bad)
jb
or
inc
xchg
popf
adc
push
sub
adc
(bad)
icebp
mov
gs
(bad)
add
fld
je
inc
push
add
push
xchg
push
cmps
push
xor
mov
fs
outs
xor
pop
pop
xor
rcl
jmp
mov
and
gs
fiadd
or
cmp
ins
aaa
movs
sar
push
popa
push
das
scas
fistp
rcl
test
mov
neg
xchg
jmp
mov
add
fisttp
cld
or
pop
pop
xor
imul
(bad)
push
cmps
call
clc
sbb
stos
aas
or
jp
in
fdivrp
mov
cmp
adc
mov
(bad)
stos
dec
jns
mul
imul
adc
aaa
lahf
xchg
and
mov
adc
sub
mov
mov
or
lahf
fucomip
adc
aad
(bad)
loopne
pop
repz
sbb
sti
jbe
popa
dec
icebp
sbb
out
adc
jns
jle
pop
dec
clc
mov
pusha
outs
cdq
jge
call
das
repnz
sar
outs
aam
pop
(bad)
call
lea
out
dec
gs
(bad)
cmc
adc
sub
cmp
sub
adc
shl
jno
pop
(bad)
cmp
retf
mov
(bad)
cmc
and
fst
out
mov
cs
sbb
(bad)
in
int
xor
xor
push
aas
adc
jno
or
sbb
mov
ret
test
xlat
cmp
test
push
rcr
test
add
xor
push
dec
jnp
lahf
or
jmp
xchg
jg
xlat
inc
inc
push
adc
add
lock
shl
(bad)
fist
pop
sbb
cmp
jp
pop
fnstcw
in
mov
jmp
push
mov
cmp
cmp
lods
jo
mov
dec
scas
mov
and
mov
dec
and
hlt
jb
and
mov
pop
(bad)
jno
or
add
mov
xchg
cmps
movs
lods
pop
movs
jecxz
imul
cmp
jp
dec
hlt
fbld
movs
push
xor
or
es
in
jl
dec
lahf
jnp
fxch
clc
(bad)
in
pop
mov
shl
xor
imul
cmc
jae
retf
fcom
pop
lea
ins
fdivp
jmp
push
or
pop
push
scas
pop
mov
xor
in
jns
test
sub
shr
stos
pushf
leave
adc
out
jne
or
adc
jmp
(bad)
jecxz
pop
mov
push
dec
and
jge
and
loop
cmp
lods
call
mov
jo
xchg
aad
ret
rol
mov
(bad)
and
jnp
dec
sub
push
and
add
mov
sbb
inc
push
xor
jnp
jmp
sbb
mov
fidiv
xor
jae
pop
and
jmp
adc
inc
add
fiadd
fwait
xchg
adc
mov
inc
cmp
lods
lahf
mov
cdq
adc
(bad)
popf
outs
xor
nop
adc
push
fwait
mov
inc
mov
call
push
cwde
test
add
and
in
xchg
arpl
loopne
ret
cmps
mov
sub
scas
or
int
out
mov
retf
jnp
test
and
dec
loop
cmp
push
loopne
cli
nop
inc
stc
(bad)
in
in
lds
push
in
mov
das
daa
fwait
leave
xchg
add
jo
aam
or
mov
lea
int
ret
cs
mov
push
push
xor
idiv
shl
sub
xchg
push
mov
stc
hlt
clc
lock
mov
cdq
movmskps
mov
lea
retf
retf
adc
push
xchg
push
repz
leave
data16
pop
sub
mov
call
dec
test
lock
shl
rol
dec
std
(bad)
xor
and
mov
in
retf
ror
cdq
and
into
mov
test
dec
add
add
lock
out
repz
inc
rol
cmp
(bad)
sbb
in
fisttp
adc
loopne
pop
pop
std
push
jmp
jge
cmp
mov
push
xor
call
out
sub
push
(bad)
sub
shl
mov
mov
jae
les
add
test
or
adc
bound
pop
xor
push
xor
popf
repnz
push
mov
outs
cmp
and
pop
mov
jbe
cli
(bad)
xlat
aas
pusha
call
ja
sub
loop
js
dec
or
cmp
in
add
bound
icebp
ret
movs
mov
daa
cli
repz
nop
cld
cmp
dec
clc
call
inc
fs
add
mov
sbb
sub
push
das
xchg
mov
fist
push
(bad)
dec
jno
scas
addr16
push
or
ret
gs
addr16
mov
(bad)
push
in
mov
jns
shl
or
enter
pop
dec
push
pop
and
add
add
mov
cmp
cs
js
push
xchg
lock
in
inc
stos
xchg
mov
fld
mov
mov
rcl
clc
es
cmp
(bad)
leave
and
data16
sbb
cmp
or
jns
inc
jns
pop
xor
jae
inc
fdivr
xor
les
mov
xor
lods
outs
in
sbb
mov
mov
push
cmp
test
imul
mov
inc
pop
and
imul
(bad)
addr16
sbb
out
aaa
adc
movs
push
xchg
xor
jae
test
out
or
jae
xlat
sbb
xchg
or
and
jmp
pop
out
inc
sar
sbb
pop
cmp
push
lock
push
mov
jnp
jmp
and
adc
idiv
int
jg
dec
stc
pop
les
add
in
aad
ror
jbe
lods
xor
inc
cmps
sahf
push
shr
or
gs
lock
push
adc
mov
cmc
jo
test
pop
dec
push
pop
jmp
je
aam
std
push
shl
push
fistp
loope
pusha
xchg
mov
arpl
mov
call
fadd
bound
ret
in
add
les
cmc
add
ss
(bad)
(bad)
lods
in
mov
pushf
dec
outs
test
jmp
sub
jns
sbb
cmp
out
outs
call
sbb
pop
loope
scas
cmp
pop
pop
setbe
ficom
fst
xor
pop
inc
jmp
mov
out
mov
pushf
fmul
pusha
xchg
xor
mov
mov
xchg
xor
ficomp
mov
(bad)
repz
push
xor
push
jmp
in
inc
sbb
inc
sbb
shl
test
ror
stos
sti
push
jns
ds
cdq
xchg
and
mov
push
cmp
mov
enter
xchg
cdq
shl
sbb
cmp
cmp
dec
pop
ror
vxorps
sub
imul
lods
es
mov
inc
xor
daa
or
icebp
data16
and
add
ss
nop
fisttp
xor
dec
jl
sub
das
xor
ja
push
mov
shl
or
jmp
hlt
dec
es
mov
das
mov
adc
inc
pusha
mov
int3
ret
jb
retf
es
rcr
test
push
loop
cld
lods
and
je
cwde
sbb
adc
in
cmp
int
hlt
push
popf
or
jno
mov
bound
bound
cld
scas
sbb
test
rcl
ret
sub
fnstcw
mov
push
in
push
leave
dec
cmc
je
sti
dec
jmp
test
rol
dec
add
push
push
pop
pushw
inc
stos
lods
mov
stos
xchg
lsl
(bad)
adc
jae
popa
stos
pop
loope
in
loopne
jp
mov
sub
(bad)
fnstenv
sbb
pop
aam
mov
test
pop
inc
or
adc
cmp
mov
adc
leave
repz
clc
(bad)
or
sub
bound
(bad)
mov
das
call
and
pop
nop
gs
or
mov
xchg
jg
pop
mov
(bad)
xor
cmps
rcl
nop
cmps
(bad)
sub
out
add
mov
retf
cmp
mov
rol
iret
and
retf
loopne
pop
lods
test
bound
aad
popa
(bad)
out
jmp
pop
mov
loop
cmp
cmp
mov
mov
sub
adc
mov
push
xchg
jle
sbb
into
and
xor
jle
sub
scas
test
sbb
clc
push
push
repnz
mov
sbb
add
xor
mov
jmp
dec
pusha
cmp
adc
fwait
not
arpl
inc
mov
pop
adc
aas
jmp
push
ror
mov
sbb
sub
dec
test
and
je
loope
cmp
pop
jp
iret
daa
cmp
sub
test
out
(bad)
in
lahf
add
push
clc
lahf
fld
dec
int
ins
jo
sub
sbb
add
fmul
mov
jno
(bad)
jo
loopne
pop
and
push
in
aad
xchg
pop
push
icebp
rcl
inc
mov
out
fsubr
(bad)
out
test
mov
ss
sar
add
jbe
scas
sbb
int
es
and
adc
popf
mov
icebp
(bad)
call
jle
leave
add
(bad)
iret
pop
ja
jle
(bad)
pop
icebp
daa
xchg
xor
or
mov
push
in
fsubrp
iret
inc
pop
iret
inc
repz
inc
add
push
cmp
mov
mov
inc
pop
out
lods
jmp
add
retf
rcl
and
dec
mov
es
sub
adc
fsub
int
mov
dec
outs
cmp
ficom
(bad)
sub
ins
aaa
mov
lea
cwde
cli
stos
test
mov
or
into
movs
enter
les
jb
mov
out
and
das
pop
ja
shr
aam
dec
xor
push
ret
mov
pop
cmps
nop
pop
sub
cmps
jnp
movs
adc
or
std
(bad)
xor
std
push
nop
mov
mov
out
pop
mov
ret
cmp
jno
add
outs
test
xchg
cmps
(bad)
adc
add
add
fs
jmp
mov
xchg
sub
jmp
dec
pop
or
jl
and
stos
inc
push
out
fld
push
scas
and
in
mov
inc
dec
ds
jmp
sahf
int3
sbb
cwde
lds
aaa
stc
dec
inc
jl
fdiv
test
and
dec
outs
adc
pusha
jns
and
add
(bad)
xor
adc
sar
jle
cli
test
mov
aad
mov
cmp
cmps
test
stos
cmps
les
mov
lock
out
shl
jbe
ss
int
jmp
fs
loope
cmps
mov
or
in
mov
sbb
pop
popa
pop
pop
push
or
gs
bound
push
rcl
cmc
xchg
retf
sbb
mov
xchg
es
mov
jmp
dec
mov
cmp
sbb
and
xor
push
popf
dec
retf
dec
adc
jmp
scas
mov
mov
dec
cdq
cmp
jno
lds
mov
rcl
mov
test
jb
mov
or
xchg
cmp
mov
scas
add
mov
jmp
(bad)
aaa
xchg
push
cmps
jnp
test
sahf
jnp
push
adc
loop
xor
xchg
(bad)
mov
enter
scas
das
lods
xchg
loope
fiadd
jb
xchg
jl
push
ss
jg
xchg
outs
je
fadd
sbb
(bad)
mov
adc
jae
sub
inc
mov
push
inc
sti
xchg
sbb
ret
repz
push
stos
lock
mov
fcom
cmp
int3
mov
nop
fld
in
stc
jge
xchg
aam
or
in
call
adc
mov
je
js
out
and
call
jmp
mov
dec
lds
shl
shl
and
imul
pop
cmp
inc
xchg
or
loope
add
mov
lods
test
mov
stos
add
pusha
retf
inc
xchg
repz
cmp
stos
(bad)
push
leave
mov
xchg
fnsave
cmps
rol
add
push
inc
mov
nop
cmps
add
jb
and
sbb
xchg
in
int3
xchg
dec
adc
lock
add
daa
and
fisttp
inc
dec
in
ds
jns
cld
push
popa
and
repz
int
or
sub
outs
xor
sub
jmp
(bad)
cwde
int3
daa
jns
movs
in
ds
sbb
inc
popf
inc
cmps
lock
popa
outs
lods
and
mov
outs
je
sub
mov
(bad)
in
shl
aam
inc
popa
adc
daa
jne
adc
mov
push
bound
push
pop
sub
cmp
jnp
push
imul
push
das
vaddpd
jge
into
mov
call
push
jmp
int
clc
and
aaa
mov
test
jge
mov
jl
lock
jo
aas
mov
rcr
lods
aam
xchg
dec
loop
hlt
dec
cmps
push
or
mov
fistp
gs
and
mov
push
adc
sar
sub
stos
test
das
xchg
mov
and
dec
mov
push
cmps
or
gs
adc
and
sub
leave
call
jo
fs
nop
(bad)
loope
push
lods
mov
inc
sub
lods
adc
cmp
in
cmp
xchg
mov
xor
push
jp
leave
test
pop
ins
sahf
out
scas
inc
test
xlat
test
or
les
pop
pop
jge
xlat
div
movs
xor
push
and
popf
sbb
(bad)
cli
pop
gs
addr16
int
in
and
dec
pop
mov
cwde
mov
test
ret
and
je
fimul
sbb
mov
pushf
cs
ror
mov
xchg
push
nop
xchg
ins
sbb
sbb
add
sbb
fsubr
adc
pop
jle
cmp
test
das
adc
pop
xor
das
push
popf
jmp
jno
push
push
jb
pusha
aas
and
cmps
xor
ds
xlat
fucomi
push
fadd
shl
fwait
lahf
dec
lahf
int
xchg
dec
mov
xor
and
sub
push
pusha
fcomp
cmp
dec
and
ss
add
scas
cmps
xchg
popf
mov
mov
jae
xchg
dec
nop
cld
stc
jmp
cld
(bad)
pop
pop
cld
rcr
repnz
jbe
adc
cmc
cdq
mov
fst
data16
xor
jne
push
icebp
mov
shl
sub
jae
jbe
push
out
(bad)
xor
outs
rcr
push
or
push
jmp
xor
fxch
adc
jno
femms
sbb
push
adc
setg
int3
int
ss
xchg
sbb
jge
push
retf
or
jmp
xchg
mov
stos
mov
mov
sub
mov
cwde
inc
add
movs
pushf
mov
pop
je
xchg
pop
pop
mov
setbe
pop
sbb
mov
out
mov
inc
push
push
push
fcom
imul
ds
pop
(bad)
push
rol
cmp
int
daa
test
jg
es
mov
or
push
mov
xchg
movs
push
xchg
jb
fucomi
leave
retf
dec
fisub
dec
out
fs
add
sub
mov
push
push
xchg
imul
inc
mov
sar
dec
push
xor
out
scas
ret
and
in
ret
popa
enter
mov
cmp
fistp
in
inc
pop
imul
adc
or
ret
xor
loop
pop
xchg
scas
mov
ret
int
jp
loop
and
cmps
and
jmp
aas
pop
inc
xchg
movs
mov
adc
std
cmp
shl
dec
js
adc
xor
add
out
(bad)
add
dec
test
aas
nop
cmc
cs
inc
or
push
das
rcr
aaa
leave
lock
not
in
fistp
push
mov
mov
or
push
cmp
cmp
mov
mov
jno
mov
pop
loopne
add
out
add
aas
and
jns
(bad)
int
lahf
add
add
rcr
mov
pop
stos
repz
pop
mov
dec
pop
dec
jbe
ret
inc
mov
(bad)
cdq
xor
sahf
mov
cmp
mov
call
ficom
push
mov
dec
adc
arpl
xchg
push
or
push
test
and
in
dec
xchg
in
push
maxps
into
add
mov
jb
push
mov
and
leave
mov
retf
jecxz
arpl
ins
sbb
rol
je
jno
push
arpl
sub
nop
je
das
push
jp
and
dec
or
retf
cmp
jbe
into
mov
ins
test
or
pop
js
out
ja
xor
repnz
pop
movs
not
adc
icebp
or
enter
mov
mov
ror
mov
fs
jb
xor
pop
pop
movs
sahf
or
inc
es
push
and
sub
dec
sub
inc
aaa
out
fisub
jecxz
push
pop
adc
jl
pop
cmps
icebp
mov
jae
pushf
fwait
ret
xchg
fimul
and
sbb
lock
or
in
std
adc
pop
test
retf
je
in
xchg
imul
into
mov
mov
retf
lahf
das
cmp
sbb
int3
jbe
ins
jle
mov
add
test
adc
or
in
popf
push
sub
retf
or
cmp
loopne
push
ins
and
pop
push
repz
or
inc
imul
or
clc
out
sbb
jo
dec
cmp
pop
mov
pop
xor
inc
daa
pop
mov
and
in
mov
in
fadd
repnz
sub
ja
mov
bound
in
dec
cmpxchg
mov
repnz
xor
arpl
fnstcw
mov
bound
push
lea
aas
div
mov
shl
xchg
ins
(bad)
stc
push
outs
cli
sbb
lods
adc
push
int
jp
or
pop
sbb
xchg
clc
hlt
mov
mov
dec
mov
sbb
retf
pop
mov
jmp
(bad)
stos
and
mov
sti
mov
dec
sub
bnd
jno
mov
or
pop
sbb
movs
div
dec
out
hlt
pusha
jo
push
mov
jmp
popa
rcl
popa
mov
inc
call
sbb
das
push
fiadd
sar
sbb
rcr
dec
add
cdq
mov
pop
cmc
xchg
pop
in
add
adc
xor
adc
fwait
sub
imul
out
scas
pop
xchg
push
nop
scas
(bad)
mov
sar
and
xchg
xchg
add
cmps
(bad)
inc
fidivr
add
adc
dec
xchg
sub
ror
pop
pop
or
pop
popf
call
leave
test
cmps
or
leave
fidiv
mov
leave
aam
cld
lea
jg
and
push
fisubr
arpl
push
pusha
inc
ins
jl
fist
sub
push
pop
mov
mov
fild
sti
jmp
pop
and
cmp
lahf
and
out
cwde
mov
in
data16
mov
sub
push
mov
sub
push
jg
loopne
cmp
inc
popa
pop
test
jno
sub
xchg
pushf
dec
sbb
rcl
retf
jp
stc
jb
aaa
loope
psrld
xchg
and
(bad)
sub
xlat
test
push
add
inc
push
or
(bad)
mov
fs
loop
adc
pusha
sub
jg
jmp
pop
retf
mov
mov
push
mov
jmp
cmc
sub
inc
inc
adc
cwde
adc
sar
dec
pop
outs
jecxz
add
sti
mov
adc
stos
cmc
rol
js
pop
in
test
xor
nop
push
cmps
lahf
xor
out
adc
out
das
mov
dec
jne
sbb
pop
and
adc
arpl
cmc
inc
int3
in
mov
pushf
adc
inc
pop
jb
sub
cdq
push
xor
ds
fldln2
pop
lock
sbb
xor
je
pushf
daa
int3
imul
cwde
fistp
jg
out
ror
iret
div
jl
aaa
fsubr
icebp
cmp
mov
cmps
div
rcr
imul
and
xchg
retf
sbb
stos
lahf
xor
mov
in
jae
mov
mov
nop
je
call
add
(bad)
outs
pop
mov
hlt
jmp
ins
or
dec
dec
dec
jo
outs
or
test
jmp
sbb
dec
ds
and
aas
jecxz
xchg
ret
adc
push
fidiv
sti
mov
jmp
lods
sti
bound
pop
sub
adc
jne
fistp
jmp
dec
sbb
popa
xchg
cmp
sbb
mov
dec
aam
out
in
mov
inc
in
inc
(bad)
sbb
xor
xchg
aaa
ret
pushf
enter
xrelease
hlt
xchg
or
push
or
push
sbb
les
inc
stos
(bad)
std
sub
fbld
mov
movs
inc
std
xchg
rcl
sub
adc
adc
mov
std
iret
ss
mov
dec
mov
push
imul
push
fiadd
or
mov
out
movs
mov
push
push
or
test
bound
jle
std
push
xchg
xchg
inc
jg
jo
ins
ret
(bad)
imul
add
stos
xor
mov
(bad)
in
fdiv
scas
stos
or
adc
inc
(bad)
fiadd
add
in
xchg
movs
loopne
cmp
xlat
nop
inc
jmp
je
adc
sbb
stos
lods
push
clc
sbb
int3
loope
pop
movs
pop
ret
or
add
xor
jecxz
xor
mov
adc
(bad)
adc
push
mov
or
and
dec
popf
cmp
sbb
out
(bad)
or
retf
sbb
icebp
pop
iret
xlat
scas
push
pop
xchg
(bad)
or
inc
sub
jnp
ins
call
mov
sbb
add
das
arpl
test
xlat
aam
shl
pop
test
les
pop
jecxz
test
inc
outs
cmp
daa
pop
ins
dec
push
scas
add
jns
fist
out
xchg
cmp
scas
xchg
icebp
(bad)
rol
jg
dec
cli
(bad)
sub
push
cs
loop
ins
jge
ret
fisub
daa
mov
jmp
out
imul
pop
loope
mov
push
and
test
call
sub
and
popf
pusha
dec
lea
cs
xor
cmp
mov
(bad)
(bad)
rol
xor
and
test
jbe
scas
sbb
mov
shl
in
add
clc
jge
pop
sbb
mov
adc
jmp
jno
aad
fsub
imul
or
inc
dec
or
fcomp
repnz
push
xlat
xchg
(bad)
sub
repnz
push
arpl
xchg
xor
push
mov
js
fstp
sub
sbb
(bad)
hlt
add
pop
jmp
jo
icebp
test
call
add
bound
ins
stos
jbe
int3
inc
xor
call
mov
inc
or
in
fwait
movs
push
jle
and
imul
pop
xchg
pop
retf
iret
bound
add
cmp
xchg
dec
mov
or
sar
adc
sbb
leave
add
arpl
push
mov
fnstsw
and
jbe
pop
xor
jmp
inc
es
add
out
mov
js
sub
jmp
cmp
popa
in
loop
adc
cs
jae
out
mov
into
sahf
inc
icebp
push
or
pop
push
hlt
mov
sub
and
aaa
adc
add
stos
jl
arpl
xchg
xchg
push
lds
adc
xchg
mov
mov
mov
mul
jmp
jg
nop
out
push
scas
(bad)
jo
jne
cmps
leave
out
out
ds
mov
mov
mov
(bad)
sbb
dec
nop
jbe
std
xchg
xor
test
dec
pop
and
mov
jnp
nop
bts
shl
add
retf
pop
popf
out
hlt
xor
sub
sahf
inc
lahf
aad
(bad)
int3
int3
fiadd
enter
mov
inc
and
sbb
xchg
mov
pusha
xor
test
or
sbb
jbe
inc
mov
call
xchg
add
cmp
cmp
jnp
loope
xor
mov
stos
dec
stos
int3
sub
int
adc
addr16
mov
loope
popa
add
pop
fnstcw
cmp
sub
cmp
(bad)
cld
lds
ins
lods
lock
or
push
sub
mov
lods
stos
and
sub
mov
movs
data16
lods
cmp
jb
mov
in
jmp
das
mov
sub
shl
adc
sub
loope
mov
scas
xor
jb
inc
xor
ins
rcr
sar
daa
xor
jmp
fnsave
pop
pop
enter
mov
jl
jo
inc
jecxz
out
jmp
and
fs
and
xchg
outs
xor
sti
xchg
cmps
in
lods
pop
jle
push
jg
xchg
adc
(bad)
or
loop
test
mov
fcomp
push
clc
fmulp
push
sub
jge
ss
xor
cmp
out
xchg
inc
and
shl
push
xor
push
cmp
clc
call
outs
adc
adc
push
adc
into
pop
test
cmp
pop
xor
test
scas
lock
ror
mov
aam
mov
xor
xlat
xchg
movs
cmp
inc
mov
jmp
popf
mov
jmp
pop
jno
js
arpl
movntps
inc
(bad)
pop
inc
mov
cmp
pop
lds
inc
xlat
jmp
sbb
inc
jno
or
lds
scas
xchg
add
jl
sbb
ret
lock
fdiv
inc
push
jp
xor
enter
es
adc
jnp
mov
xchg
or
adc
inc
mov
push
(bad)
int
xor
addr16
enter
adc
pop
pop
sbb
js
cmp
test
inc
cmp
clc
pop
push
enter
aaa
pop
fsubr
xor
es
mov
and
jnp
inc
adc
push
int3
cmp
push
(bad)
in
rcl
fadd
mov
adc
dec
sahf
xchg
or
scas
dec
jp
dec
mov
loope
mov
push
hlt
pop
xor
adc
jbe
jae
lahf
lock
ins
dec
and
xor
and
cmc
push
and
cmc
mov
pop
or
test
out
mov
jl
mov
inc
or
cmp
pop
inc
pop
call
xor
loopne
retf
xor
jbe
imul
mov
lods
mov
jo
lods
test
ds
xor
xor
out
bound
(bad)
loopne
xchg
jecxz
add
movs
stc
inc
(bad)
pusha
shl
mov
arpl
sub
xchg
dec
fwait
rcl
jge
xor
push
adc
test
sub
jb
fcomp
xlat
icebp
sub
out
jge
pop
(bad)
sbb
rol
in
ins
jo
test
xor
xor
adc
in
mov
dec
xor
ins
lock
push
adc
jmp
iret
aaa
sbb
pop
xchg
aam
test
imul
adc
test
cmps
nop
fdiv
fwait
in
dec
and
fst
jb
mov
in
aam
dec
jecxz
mov
pop
pusha
scas
stc
ins
xchg
add
dec
push
clc
fist
or
inc
dec
repnz
int3
or
es
push
sub
ret
jp
dec
xor
inc
out
mov
cld
cmps
scas
push
mov
clc
imul
hlt
rol
imul
pushf
stos
xchg
pop
pop
repnz
sub
call
pop
fsub
(bad)
int3
mov
mov
cmps
daa
jecxz
repz
cmp
sbb
cmp
sbb
dec
mov
inc
pop
jne
and
adc
dec
sar
in
push
jg
lds
clc
shr
in
clc
xchg
imul
aam
into
lods
pop
push
icebp
movs
jnp
mov
(bad)
mov
sub
into
push
call
sbb
push
sub
aad
fwait
ja
pop
nop
cmp
sbb
xor
and
inc
jb
test
sbb
retf
imul
mov
pop
dec
xchg
fistp
loope
std
ins
push
in
mov
fdivr
adc
sub
loope
ins
sub
push
or
mov
in
mov
mov
xchg
and
fisttp
retf
and
test
cmc
(bad)
imul
xlat
call
sbb
leave
stos
stc
das
ret
pop
clc
(bad)
adc
sbb
in
in
frstor
and
movs
mov
xor
add
push
outs
cld
(bad)
cmps
call
ret
mov
mov
aas
out
cmps
daa
mov
dec
and
or
inc
test
xchg
push
cmp
jmp
jle
movs
fadd
mov
out
test
ja
xchg
push
lock
mov
enter
dec
jnp
in
icebp
jmp
xor
dec
mov
or
push
push
std
lea
fisubr
and
mov
(bad)
das
push
lea
sub
imul
dec
imul
cmp
jle
movs
lea
test
and
mov
in
mov
sbb
adc
ds
jecxz
fs
sbb
xor
sbb
aad
imul
sub
mov
add
sub
push
sub
and
mov
fisubr
(bad)
dec
inc
out
mov
and
sbb
add
bound
jnp
test
mov
sahf
xchg
xor
mov
or
adc
and
test
sub
jle
test
jmp
inc
imul
or
cmp
out
gs
xchg
into
adc
iret
adc
add
cli
xchg
rol
mov
ins
ror
adc
(bad)
jnp
add
and
fs
sub
ins
(bad)
jp
or
jo
test
out
add
cmp
ins
imul
push
dec
clc
dec
lods
es
popf
dec
add
test
aam
out
(bad)
xor
or
mov
out
pop
jp
test
adc
addr16
hlt
mov
inc
cmc
xlat
pop
mov
pop
test
and
mov
pushf
push
mov
loopne
adc
mov
js
dec
xchg
mov
jne
scas
movs
xchg
or
mov
out
rcr
mov
lods
and
sub
pop
(bad)
fadd
or
loop
cmp
out
mov
stos
sbb
imul
mov
cdq
call
jp
cmp
mov
in
hlt
jno
mov
ret
movs
sar
pusha
and
shl
cdq
add
in
mov
pop
fnsave
push
aad
stos
push
inc
je
sub
fadd
push
mov
xchg
xchg
sbb
pushf
mov
xchg
jns
or
adc
sub
cwde
fwait
jl
inc
gs
pop
push
inc
(bad)
cmp
mov
mov
sub
inc
fst
sbb
dec
xchg
out
and
pop
mov
(bad)
leave
cmp
dec
cmc
sahf
mov
cmps
mov
rol
enter
cmps
push
sbb
jmp
ins
mov
adc
push
inc
jl
xchg
sbb
js
retf
mov
sub
or
cmp
dec
int3
inc
mov
outs
push
mov
pop
push
cmp
cli
or
mov
movs
sbb
adc
pop
pop
fsubr
mov
ins
pop
jmp
mov
shl
sbb
ins
sbb
or
add
pop
cmps
inc
mov
fstp
mov
test
xor
into
das
(bad)
jge
aam
adc
out
xchg
fild
clc
cmp
dec
retf
fiadd
push
ins
xor
repz
push
inc
adc
(bad)
enter
mov
xchg
ret
push
mov
sub
jb
xor
es
lods
repz
adc
imul
mov
dec
inc
loopne
gs
(bad)
fwait
push
mov
sub
jbe
mov
and
repnz
xchg
xchg
fwait
rcr
xchg
pushf
gs
stos
jmp
pop
in
loope
mov
rcr
sbb
fdiv
mov
jae
inc
shl
push
push
adc
mov
mov
xchg
mov
outs
es
out
push
mov
lahf
movs
pop
retf
cld
jns
mov
sahf
ds
add
repz
out
cdq
inc
pop
sar
clc
adc
mov
popa
and
push
cmp
out
xor
jg
mov
and
test
push
and
sbb
ins
imul
rcr
movs
ret
add
in
retf
ja
add
ins
xchg
(bad)
fisttp
or
out
push
(bad)
out
outs
add
cs
fstp
push
cmps
xchg
daa
push
test
jl
add
pop
adc
pop
jl
iret
into
inc
dec
ss
sti
lods
push
popa
adc
add
pop
inc
or
and
out
icebp
das
(bad)
aaa
dec
jb
add
inc
jmp
or
arpl
dec
in
sahf
and
mov
or
jno
(bad)
imul
sahf
xor
mov
push
lock
stos
lods
je
and
xor
sbb
xchg
pop
out
shl
add
movs
cmps
test
lahf
loop
movs
add
(bad)
pushf
xchg
or
adc
or
jbe
push
js
sub
movs
loope
push
stos
int3
jne
mov
fcomp
in
loopne
outs
mov
arpl
mov
es
push
movs
fidiv
mov
popa
jae
leave
in
repnz
pop
out
arpl
mov
inc
in
(bad)
mov
icebp
lock
jmp
mov
push
jnp
test
(bad)
adc
cmp
arpl
dec
cmps
jo
pop
inc
dec
xlat
cmp
lock
lods
hlt
(bad)
dec
dec
and
std
cmp
jo
or
jmp
jle
inc
ficom
add
push
ror
loopne
in
cld
ins
inc
and
div
cmp
vmovd
mov
xchg
or
js
inc
inc
inc
outs
sub
repnz
push
aam
aas
cs
inc
in
int3
push
gs
and
cmp
sub
xlat
dec
nop
sbb
vpsraw
jb
xchg
into
fistp
xor
mov
and
jmp
js
les
lock
jnp
fcom
mov
sub
jb
mov
daa
mul
test
out
loop
sbb
add
dec
inc
nop
sub
inc
push
pop
fs
adc
push
aam
movs
mov
mov
and
pop
mov
jle
pop
sub
push
mov
adc
test
out
push
mov
pop
adc
enter
sub
popa
mov
stc
push
mov
sbb
(bad)
cmp
or
imul
je
cs
jne
xor
dec
push
scas
or
and
cwde
push
push
add
mov
sub
xor
daa
and
mov
adc
mov
stos
sahf
dec
scas
es
jmp
ret
cmc
jnp
ficomp
adc
push
mov
ja
cli
cmp
sub
xor
mov
clc
stc
cmp
addr16
mov
jp
bound
repnz
or
inc
xor
les
rol
fmul
aas
out
xchg
sub
shl
mov
fbstp
pop
mov
xor
mov
mov
scas
jp
push
ds
adc
jmp
icebp
mov
ss
in
xchg
repnz
inc
or
and
cmps
jne
push
aam
sub
inc
lock
call
cli
loope
add
push
jne
jl
dec
lods
repnz
add
jo
arpl
mov
push
fst
push
arpl
inc
mov
test
mov
int3
pop
or
mov
push
add
loope
ja
xchg
cwde
shrd
dec
xchg
sbb
mov
shl
jno
mov
arpl
sub
dec
stos
les
push
jo
out
dec
js
jle
adc
sub
cmp
popf
cmp
xor
push
xor
inc
call
ds
xor
push
mov
and
(bad)
fidiv
out
jnp
mov
cmps
(bad)
cmp
push
imul
push
loope
mov
push
and
adc
mov
jge
mov
rol
add
push
inc
or
cmps
inc
popa
mov
inc
pop
repz
push
cmc
and
xchg
sbb
xchg
xchg
push
push
aaa
push
jmp
xor
sub
mov
sbb
imul
push
adc
aad
push
xor
push
mov
call
adc
loope
dec
movs
arpl
mov
and
sbb
jmp
inc
shr
adc
push
gs
push
je
sbb
push
stos
pop
gs
enter
lds
int3
repnz
mov
adc
test
mov
test
pop
ss
and
or
xor
clc
xlat
fldenv
imul
es
loop
jb
nop
movs
lock
int3
in
dec
(bad)
and
or
mov
stos
les
jae
pop
pop
xor
add
mov
mov
cmps
lea
cdq
adc
xchg
es
ja
in
mov
lods
mov
sub
push
test
inc
sbb
jle
mov
pop
and
shl
mov
dec
add
xlat
inc
ins
pushf
cmp
pushf
popa
idiv
pop
fmul
xchg
push
xchg
mov
inc
mov
out
add
faddp
mov
outs
retf
and
push
adc
retf
call
sahf
clc
out
addr16
mov
std
(bad)
push
xor
imul
lds
in
lods
jg
mov
adc
dec
push
cwde
arpl
cmp
mov
jno
add
call
leave
push
push
mov
daa
add
stos
addr16
mov
in
and
mov
add
std
xor
call
push
dec
mov
loopne
cwde
xchg
or
neg
ror
aas
fsubp
out
lods
les
lods
push
out
pop
arpl
push
pushf
dec
stos
push
mov
inc
in
push
inc
inc
shl
pop
dec
ja
push
or
mov
and
ins
movs
aad
xchg
test
adc
cmp
fidivr
push
rcl
inc
ins
xchg
daa
fs
(bad)
mov
pop
xor
jno
cmc
xchg
loop
fldenv
mov
je
cmp
mov
jno
shl
mov
leave
cmps
adc
je
loopne
sbb
fs
push
repz
ret
iret
push
fsubr
pusha
adc
jp
mov
jnp
mov
adc
xchg
call
jne
ja
aas
lods
add
mov
xchg
jae
test
(bad)
ss
add
cmp
fwait
stos
addr16
push
and
adc
dec
sbb
jmp
fdivr
bound
cmps
rep
int3
cdq
mov
push
cmp
mov
mov
jl
sti
sub
mov
fsubr
les
mov
inc
repnz
dec
add
cs
xchg
outs
jmp
adc
out
inc
(bad)
rcl
cwde
or
or
or
test
xor
cmps
xor
mov
ss
adc
inc
dec
and
xchg
xchg
and
and
push
cdq
adc
mov
sbb
stos
mov
fwait
mov
lock
and
movs
jnp
cmp
jmp
ficom
mov
call
fcomp
xor
sbb
add
inc
movs
movs
sar
retf
push
loopne
arpl
ins
ror
xor
xchg
dec
retw
out
or
dec
out
cmp
push
mov
pop
(bad)
jp
ret
repnz
hlt
jl
stos
or
ds
mov
push
jnp
pop
aad
xchg
push
out
xor
pop
pop
test
adc
inc
xchg
mov
arpl
loope
js
mov
(bad)
cs
lahf
leave
inc
dec
inc
pushf
sbb
retf
outs
out
jl
in
adc
xchg
retf
test
inc
sub
fsub
test
xchg
je
dec
push
sub
mov
jbe
fcmovne
sbb
lods
cwde
ds
aaa
push
js
mov
lods
sub
mov
xchg
adc
mov
mov
cwde
jbe
lods
aam
mov
movs
dec
jae
retf
hlt
cmp
add
mov
xor
cmp
pushf
mov
xor
xchg
mov
add
mov
xor
adc
adc
(bad)
leave
idiv
jne
add
mov
mov
inc
push
sahf
(bad)
mov
mov
jecxz
sub
icebp
jo
xchg
add
aaa
jbe
add
xchg
sbb
xchg
or
popf
inc
repz
outs
dec
test
iret
mov
ja
mov
aad
test
jp
add
or
into
jmp
sub
xchg
sbb
cmp
and
jno
aaa
jns
add
icebp
(bad)
neg
iret
cmp
push
adc
mov
mov
mov
push
and
and
pop
or
mov
cmp
sbb
sub
dec
popf
xor
mov
and
ror
fistp
dec
lods
test
pop
in
sbb
sub
fs
repz
xchg
push
sbb
cmc
add
mov
and
ror
push
xchg
pop
jmp
add
fcom
add
xchg
add
add
adc
mov
fs
imul
mov
je
xchg
ss
push
and
or
add
nop
call
add
inc
jmp
adc
loopne
sbb
pushf
add
ret
mov
pop
retf
rol
lea
mov
push
pop
adc
ret
sub
inc
pop
lahf
xlat
cmp
test
add
lods
xor
pop
pop
jp
sub
add
dec
fnstsw
jo
xlat
xor
push
jo
dec
xor
push
add
pusha
mov
fstp
loop
xor
(bad)
cs
jae
in
inc
add
jb
fwait
mov
mov
pop
mov
js
push
(bad)
imul
mov
scas
int3
popa
mov
lahf
pop
xor
lods
aam
add
lods
pop
out
mov
or
sbb
test
push
popa
xchg
push
adc
aad
ja
dec
shl
jle
int
adc
ret
aaa
add
(bad)
mov
les
rcl
aaa
push
xor
xor
and
push
cdq
mov
xlat
jo
sbb
push
in
cmp
test
sar
ficomp
jne
js
mov
cmps
mov
push
aas
sar
lds
or
imul
jbe
dec
push
jmp
clc
mov
xchg
xchg
and
pop
xchg
stos
mov
scas
js
push
or
(bad)
pusha
lds
mov
and
jnp
arpl
mov
adc
xor
sar
sub
add
stos
sbb
mov
mov
lea
cmps
ins
dec
xor
dec
jno
jns
and
mov
test
jmp
(bad)
xchg
xchg
out
mov
mov
ret
mov
pop
add
mov
sub
rol
pusha
xor
dec
mov
clc
dec
outs
xor
fcmovnb
loope
dec
and
adc
or
sbb
jae
fadd
cmc
fs
rcl
xchg
or
jmp
and
mov
jno
scas
repz
sub
loopne
arpl
(bad)
dec
pop
add
adc
mov
push
mov
mov
shr
mov
ret
punpckhdq
(bad)
ror
cmc
push
clc
out
jl
out
ins
mov
mov
mov
paddd
daa
cs
inc
imul
out
imul
jnp
jns
dec
mov
sbb
lods
push
ds
jae
xchg
or
cmps
xor
dec
jmp
cmp
mov
or
into
xor
stc
(bad)
push
lods
aas
aas
jp
push
cmp
fwait
mov
lds
scas
shr
xchg
dec
aaa
cmp
icebp
pop
hlt
mov
cmps
imul
imul
test
xchg
(bad)
nop
out
pop
mov
iret
mov
mov
mov
scas
in
sub
jge
icebp
jb
sub
mov
in
cld
outs
clc
push
xchg
jl
push
xor
pop
dec
inc
test
inc
imul
jb
or
jno
sbb
lock
stc
jg
jg
bound
fstp
ss
pop
dec
jae
mov
xchg
push
sub
nop
scas
and
sub
pusha
popf
xchg
sbb
jg
pop
lds
fcomp
or
mov
mov
adc
fild
es
neg
ins
je
pusha
mov
push
cdq
cli
sbb
dec
xor
pop
ss
mov
xor
sub
xchg
mov
cmp
cmp
adc
cmc
daa
or
shr
inc
xor
push
push
call
push
mov
movs
repz
sar
out
push
ins
in
sub
and
stos
arpl
test
cli
xchg
dec
cmp
push
and
or
clc
fidivr
pop
fucomp
pop
bound
rol
xor
(bad)
xchg
and
dec
inc
int
jne
and
mov
jge
aad
and
mov
and
dec
or
lahf
dec
lods
cmp
inc
retf
or
add
lock
xor
push
in
mov
xchg
fistp
mov
retf
cmp
repnz
push
jecxz
clc
ret
les
pop
mov
arpl
inc
add
gs
cmp
sbb
dec
xchg
mov
jbe
mov
fisttp
jo
lock
out
mov
addr16
fisttp
xchg
adc
icebp
add
sbb
out
cld
enter
aaa
push
xor
sti
fistp
inc
sbb
sahf
sahf
test
ret
push
rcl
sahf
jne
hlt
in
cmc
out
adc
jl
xchg
cmp
pop
push
popa
dec
(bad)
shr
(bad)
data16
mov
jg
fs
pop
mov
inc
outs
adc
xor
out
mov
gs
(bad)
or
inc
pop
push
mov
fidivr
xlat
ds
pop
test
mov
imul
jb
pusha
cli
jb
repnz
inc
mov
pop
mov
adc
adc
jne
jp
and
stos
xchg
(bad)
jge
dec
or
cwde
(bad)
and
xchg
mov
stos
mov
jmp
jne
xchg
fcmovu
shl
jl
pop
xchg
iret
inc
add
sbb
(bad)
jle
push
mov
pushf
mov
in
and
or
adc
cli
inc
dec
and
fimul
es
fldcw
inc
cmp
push
add
ins
add
ficom
fisttp
push
xchg
inc
test
ins
dec
(bad)
test
inc
popa
jl
out
sbb
jo
xchg
jno
int3
and
sub
xchg
cwde
sbb
loop
mov
push
je
std
xor
adc
push
xor
fwait
push
jmp
sub
mov
mov
aaa
shrd
outs
sub
mov
adc
add
mov
xor
jns
test
outs
ds
mov
cmp
and
(bad)
or
out
push
fnstenv
jmp
clc
cld
sbb
js
sub
push
pop
loope
sbb
jbe
xchg
mov
cmp
out
(bad)
xchg
out
cld
cld
mov
sub
add
and
rcr
jb
and
aam
and
push
mov
push
int3
jbe
(bad)
xor
inc
push
ret
ins
and
sub
mov
stos
xchg
xor
push
cmp
rcr
call
adc
neg
(bad)
push
ins
push
adc
popa
mov
loope
cmc
jno
mov
fldenv
sar
mov
xor
adc
jbe
js
sbb
(bad)
mov
gs
cwde
jg
ins
jmp
pusha
(bad)
retf
adc
or
jg
sbb
adc
cmp
mov
out
out
test
in
inc
shr
lock
js
iret
dec
jmp
jp
movs
rcr
mov
jns
and
es
outs
adc
mov
ret
sub
mov
loope
ret
out
xor
fs
rcr
(bad)
cmp
mov
push
out
cmp
lahf
mov
xchg
imul
mov
inc
in
xchg
xlat
loope
into
jmp
and
pusha
mov
cmps
mov
mov
setb
jmp
js
or
imul
jbe
clc
sub
jns
push
fisub
out
(bad)
enter
pop
push
sub
test
mov
sbb
sub
outs
push
xor
mov
ss
mov
popa
imul
add
and
out
xchg
std
outs
xor
jno
mov
mov
xchg
lds
aam
shr
push
cmp
repz
and
lds
cmp
adc
out
mov
in
int
and
jmp
cdq
adc
push
movs
and
inc
xchg
mov
hlt
lahf
int3
push
add
inc
pop
adc
out
stc
dec
mov
in
shl
mov
xor
sub
cmp
xchg
ja
movs
movs
ins
ss
push
fcomp
shr
test
cmc
ss
out
jl
and
or
jmp
mov
mov
jecxz
fwait
xchg
dec
das
les
imul
inc
das
mov
or
adc
push
jmp
pop
sub
imul
(bad)
loop
mov
add
xchg
cmp
aas
jb
in
mov
(bad)
jnp
shr
pop
in
pop
mov
into
sub
lea
loop
enter
pop
adc
popa
popf
mov
push
jae
test
das
mov
mov
add
or
xchg
xor
or
and
dec
(bad)
loop
add
jge
retf
pop
mov
push
mov
mov
jb
jecxz
mov
push
pop
cmc
into
or
call
add
pop
fldenv
mov
or
repz
add
adc
jns
cli
imul
stc
pop
cmc
pop
sbb
sbb
jl
mov
xchg
loope
out
push
mov
outs
mov
sub
adc
add
call
ins
into
mov
push
or
fs
pop
jg
inc
call
leave
jb
clc
jae
jb
icebp
push
out
mov
sbb
sub
pop
dec
jns
test
imul
mov
xchg
jno
pop
jmp
lods
mov
pop
xchg
add
xchg
or
into
out
mov
neg
push
sbb
rep
lods
cmps
mov
scas
pandn
mov
mov
mov
(bad)
aad
jne
nop
ss
imul
retf
cmp
push
xor
popa
cmp
dec
mov
mov
xchg
popa
pop
test
pop
ja
imul
int3
push
inc
es
jbe
sub
hlt
ror
jmp
test
jle
inc
push
(bad)
movs
retf
scas
dec
xor
add
loope
cmp
dec
repnz
mov
ret
fadd
mov
lods
and
jmp
or
pop
or
xor
loope
retf
mov
pop
pop
in
mov
test
xchg
pop
jge
mov
add
aad
mov
mov
push
cld
repz
stos
dec
clc
sbb
bound
pop
xor
mov
inc
jmp
pop
adc
or
jl
or
mov
mov
pop
jo
xchg
sbb
mov
sbb
jo
pop
std
pushf
fdivr
mov
sbb
pop
(bad)
push
add
(bad)
aas
std
jge
push
js
fistp
addr16
aam
jg
push
in
fst
jecxz
push
mov
fbstp
mul
push
imul
ror
add
xchg
pop
iret
fbstp
arpl
ins
push
ss
mov
pop
imul
fcomp
mov
das
mov
and
stos
cld
sar
mov
aaa
outs
push
mov
js
mov
lds
iret
inc
cmp
push
ret
ja
inc
add
int3
push
mov
jmp
xor
cmp
(bad)
or
test
jns
xchg
inc
mov
mov
js
push
loopne
mov
inc
cld
fwait
sbb
cmp
test
retf
and
cvtdq2ps
ret
dec
jmp
mov
mov
sti
inc
and
jne
icebp
and
add
xchg
xchg
rol
xor
and
jne
mov
and
stc
sub
mov
push
mov
fcom
cwde
in
xlat
cli
test
inc
movs
cmp
pop
or
in
pop
imul
shl
pop
inc
mov
adc
fwait
push
ins
cmp
fs
adc
es
out
in
xlat
aas
aad
aaa
mov
in
or
out
xchg
les
mov
xchg
repnz
mov
dec
cli
cwde
ins
scas
xor
mov
std
adc
ss
loope
packsswb
lods
ss
or
dec
cmps
push
dec
sub
and
lahf
fs
mov
fiadd
scas
mov
add
movs
movs
imul
xlat
mov
jmp
pushf
aam
adc
test
push
jne
lods
xchg
sub
xchg
add
ror
stos
mov
xchg
mov
adc
xchg
(bad)
push
xchg
pop
icebp
xchg
cld
and
sbb
test
add
push
xor
out
sbb
pop
fstp
imul
push
pop
or
adc
sti
sub
cmp
out
pop
mov
cmp
pop
jmp
rcr
xchg
sbb
in
adc
pop
sub
push
ret
sbb
stos
gs
push
xchg
pop
mov
shl
(bad)
pop
xchg
cwde
jp
bound
das
sti
mov
inc
ret
ror
and
dec
scas
cmc
iret
mov
ins
xchg
int
shl
inc
adc
retf
les
rcr
xor
cmp
mov
inc
and
inc
fist
push
push
pop
sahf
lds
cmp
in
mov
add
xor
add
xchg
fs
jmp
add
push
call
jge
fimul
mov
xor
mov
xlat
enter
sbb
or
ins
sbb
mov
arpl
sti
fdivr
push
les
inc
out
ud0
dec
sub
call
shl
into
in
pop
mov
sbb
movs
lods
fs
js
neg
rol
(bad)
(bad)
pop
ret
out
fwait
mov
mov
push
jns
sahf
cli
xor
cmp
imul
mov
add
lea
mov
or
xchg
xor
lock
mov
cmp
ror
scas
pop
dec
dec
lods
or
inc
scas
xor
fistp
daa
icebp
sub
xchg
push
retf
mov
xor
out
int3
pop
repz
retf
call
pop
xor
and
adc
cmp
mov
ins
xchg
sahf
and
test
iret
mov
add
jecxz
in
loop
les
(bad)
mov
pop
jns
push
pop
ror
je
test
cwde
ret
outs
jno
leave
or
or
loop
imul
mov
inc
imul
pop
xlat
test
push
test
ret
xchg
bound
and
out
pop
jne
scas
fist
push
repnz
movs
mov
push
mov
xor
sbb
mov
outs
xor
mov
xor
test
xchg
jno
jno
sbb
and
repnz
mov
jge
mov
push
inc
jno
xchg
ret
shl
imul
nop
data16
xlat
lahf
mov
lds
in
test
ja
or
(bad)
out
gs
or
pop
pop
jmp
sub
into
jne
ficomp
mov
add
or
push
push
push
add
mov
xchg
call
push
jecxz
frstor
xor
movs
push
cli
sahf
ror
sub
sub
mov
or
pop
int3
dec
into
pop
nop
(bad)
ror
fadd
outs
or
cmp
fcomp
mov
xchg
ja
xchg
out
call
mov
xchg
push
sbb
sbb
es
pop
cmp
sub
xor
mov
cli
iret
sahf
shl
retf
inc
sub
clc
xor
xchg
call
and
fstp
jp
or
jle
(bad)
in
cmp
mov
daa
in
push
inc
or
push
(bad)
fnstsw
shl
sbb
mov
fbld
cmp
ficomp
mul
(bad)
(bad)
aam
sbb
pop
cli
hlt
vunpckhps
jae
jl
lahf
jns
pop
cs
or
adc
xchg
js
push
mov
push
dec
inc
sub
pop
ds
aas
in
aam
ret
popa
xchg
dec
loop
ret
cdq
xchg
retf
push
test
outs
fisubr
cli
sbb
lods
sahf
fisubr
scas
sbb
adc
test
aam
xor
inc
inc
bound
push
mov
jp
and
scas
fcomp
push
ja
adc
jp
rol
mov
xor
out
inc
nop
xchg
inc
loope
mov
retf
inc
cmps
and
or
push
mov
dec
mov
xlat
dec
xchg
icebp
popf
mov
imul
sbb
sub
pop
scas
xchg
retf
mov
cmp
cmp
mov
loope
ins
pop
inc
stos
scas
adc
popa
add
lods
adc
scas
movs
sahf
enter
mov
out
xchg
dec
cli
mov
nop
xor
idiv
out
lock
in
xor
fcomp
cli
cmp
popf
lock
shl
out
out
mov
push
mov
aaa
jbe
add
sub
inc
pop
dec
loopne
cld
js
clc
dec
in
lock
stos
and
pop
xchg
cmp
cmp
js
push
sbb
xchg
cdq
mov
test
in
jb
ja
inc
(bad)
xchg
ret
xor
mov
mov
mov
nop
popa
mov
cmp
mov
jns
fcomp
cmp
sar
test
retf
jo
xchg
jns
bound
ret
rcl
fcomp
imul
rol
data16
add
adc
push
jo
dec
pop
ficomp
mov
fxch
outs
fwait
ins
rcl
jns
lea
fcmovne
push
ins
dec
xlat
loopne
inc
xchg
mov
loopne
jnp
and
std
pop
fmulp
xchg
test
push
pop
(bad)
push
dec
push
clc
test
xchg
dec
cli
imul
fsubr
inc
sub
cmp
sahf
pop
pop
push
icebp
ja
cmps
add
(bad)
cli
(bad)
push
cs
dec
jp
cdq
push
es
sbb
mov
pop
daa
cmp
stc
daa
(bad)
stc
and
or
mov
addr16
pusha
dec
or
aam
fsub
in
aam
ins
ficom
mov
sub
sbb
sar
pop
retf
push
idiv
xor
cmp
sahf
add
pop
mov
(bad)
mov
add
cmp
jns
inc
mov
adc
popf
repnz
dec
sub
loop
cmps
jle
push
xchg
xchg
pop
add
retf
push
adc
add
adc
xor
lods
lods
mov
idiv
cmp
cmp
sub
lds
out
jmp
add
cmc
xor
add
es
or
lock
loopne
dec
inc
ret
mov
arpl
cmc
inc
add
mov
dec
pop
loop
adc
in
xor
jg
and
ret
push
movs
imul
mov
ja
jmp
xchg
ins
jg
or
jb
mov
fsubr
mov
add
push
inc
nop
stc
sahf
pop
in
mov
push
ins
mov
rol
cmp
inc
inc
mov
out
js
ds
dec
xor
out
mov
and
mov
push
xchg
cmp
scas
sbb
fcomp
sub
jmp
xchg
dec
xchg
jnp
dec
and
loop
jge
dec
and
pop
dec
xchg
movs
push
loop
push
ret
stc
test
out
sar
enter
jmp
cmp
pop
sbb
xor
or
push
cli
fisttp
hlt
sub
mov
(bad)
add
inc
ds
dec
push
jbe
hlt
push
or
les
rcl
mov
xchg
jmp
jb
xor
mov
mov
fst
stos
fwait
cmp
push
or
jge
dec
inc
inc
dec
pushf
mov
es
xabort
pushf
mov
mov
mov
enter
pop
add
add
cmp
or
pop
adc
mov
jnp
mov
es
mov
jecxz
xchg
dec
mov
outs
les
scas
(bad)
addr16
cdq
loope
mov
jmp
push
cmp
mov
xor
nop
push
xchg
ins
mov
mov
mov
sub
push
ss
into
pushf
inc
mov
mov
nop
pop
loope
int
dec
(bad)
div
int3
aaa
cdq
cmps
inc
push
mov
cdq
lods
ret
sub
pushf
mov
sub
in
leave
popf
push
mov
div
movs
sbb
dec
cdq
fsub
xlat
stos
pop
outs
popf
push
ficom
xlat
dec
mov
(bad)
pusha
outs
outs
jno
dec
mov
push
adc
sbb
enter
(bad)
jbe
sbb
sti
gs
mov
cmp
dec
movs
xor
lea
xlat
int3
cmps
adc
and
adc
cli
hlt
push
sub
retf
jmp
cwde
shr
push
add
(bad)
jo
lods
inc
add
mov
jl
xchg
ret
retf
mov
je
daa
dec
jg
aaa
(bad)
stc
stos
es
inc
movs
scas
das
test
jecxz
or
ds
imul
jnp
(bad)
fcom
pop
clc
stos
xchg
test
adc
mov
sahf
shl
inc
cmp
div
pop
ins
xlat
sub
pop
data16
and
ror
ss
repnz
out
and
fisubr
arpl
jae
movs
inc
xchg
sub
sub
push
fbstp
push
pop
pop
push
lahf
les
loopne
pop
mov
dec
and
not
jl
test
sbb
ret
mov
(bad)
sub
mov
inc
jge
repz
mov
sub
xor
inc
cmp
adc
push
sub
jns
fidiv
push
and
iret
mov
es
test
mov
and
inc
nop
lds
mov
fisttp
scas
xrelease
adc
push
mov
daa
cmp
add
push
xchg
dec
in
arpl
push
ficom
add
push
adc
movs
data16
lds
mov
fidiv
lahf
(bad)
out
push
fmul
sbb
dec
stos
aas
sbb
ins
pop
xor
add
add
and
mov
adc
adc
dec
(bad)
fmul
int
fisttp
les
popf
ret
mov
std
sar
stos
cld
movs
sub
pop
rcl
lods
inc
popa
shl
arpl
fnsave
fisub
pop
jp
imul
ret
call
shr
fst
test
jnp
mul
mov
je
scas
enter
fadd
frstor
lods
xor
jbe
es
adc
aam
add
jl
pusha
(bad)
xor
(bad)
test
push
adc
inc
mov
push
in
fild
(bad)
adc
jg
mov
fild
out
arpl
xchg
inc
sub
and
push
into
dec
xchg
jmp
inc
(bad)
pusha
or
mov
sbb
cmp
sti
add
dec
xchg
mov
jb
ret
sub
fwait
mov
loopne
in
jo
xlat
fs
(bad)
mov
mov
inc
add
push
mov
mov
jmp
sub
pop
cdq
in
mov
adc
or
xchg
out
push
jmp
xchg
arpl
out
ror
xchg
out
or
mov
fdivr
xchg
add
dec
mov
add
scas
test
rcl
xchg
nop
pop
fdivr
stos
mov
mov
sahf
les
mov
jo
retf
pop
lds
mov
lahf
pop
aaa
mov
jae
cmp
pcmpgtb
mov
cmp
stos
scas
fld
mov
and
inc
or
idiv
retf
inc
in
(bad)
add
xor
call
aad
in
aam
lock
push
xchg
(bad)
cs
hlt
imul
adc
xlat
sbb
push
sahf
fisubr
and
out
jl
pop
mov
cld
mov
add
les
adc
pop
inc
mov
dec
or
jmp
out
jge
test
loopne
sbb
xchg
jne
mov
mov
mov
scas
sbb
sub
pop
arpl
and
jbe
std
sbb
lea
sbb
repnz
loope
mov
jae
inc
dec
xchg
mov
loopne
sar
int
jmp
or
pop
xchg
test
repnz
and
jo
push
mov
(bad)
scas
push
mov
mov
(bad)
xchg
mov
(bad)
push
mov
jg
aad
pusha
adc
loope
call
imul
outs
arpl
out
sub
ins
in
repz
xor
sar
inc
dec
jbe
pop
cmps
mov
fnsave
jae
jno
test
mov
inc
xchg
scas
inc
je
or
call
dec
pop
leave
add
mov
imul
jb
call
push
popa
dec
into
jb
retf
test
into
movs
xchg
lock
pminsw
movs
rcr
jmp
ja
retf
jnp
and
push
test
xchg
lods
cli
fmul
inc
(bad)
hlt
xchg
fwait
call
pop
jge
sbb
mov
pop
test
push
push
xchg
xor
inc
push
ja
int3
xor
out
mov
scas
add
and
hlt
add
jo
mov
imul
inc
retf
pop
dec
call
sahf
call
adc
add
bound
and
iret
cld
int
jecxz
xchg
mov
cwde
call
rcr
loope
xchg
mov
mov
sbb
pop
ret
rol
mov
js
inc
jns
sub
(bad)
cmp
repnz
into
inc
or
mov
div
loop
bound
xor
scas
out
pop
mov
iret
sub
rol
adc
(bad)
pop
dec
cwde
mov
repz
mov
mov
adc
pop
push
fldcw
jmp
xchg
aas
in
cmps
dec
fistp
or
(bad)
rcr
rcr
shl
ror
xchg
mov
iret
xor
and
xlat
xlat
call
pusha
ss
jp
sti
loopne
(bad)
push
into
mov
or
jmp
jmp
jae
sahf
adc
sbb
jmp
push
fldl2t
es
imul
jge
lahf
jno
pop
cmp
push
fisubr
dec
mov
fisub
add
rcr
in
mov
ror
ret
(bad)
mov
adc
sub
push
sbb
jne
lahf
push
push
jle
ja
inc
aad
loope
sbb
ja
cwde
mov
mov
xor
shr
push
movs
jno
bound
ja
push
movups
scas
jle
movs
ror
iret
fbld
loop
sub
(bad)
mov
ss
fisttp
(bad)
mov
fwait
int
mov
cdq
ins
inc
push
and
or
or
das
test
and
int3
sub
ja
xor
inc
mov
fadd
and
cwde
les
and
add
addr16
mov
push
add
fstp
aas
jl
js
mov
add
jge
daa
pop
cmp
in
aad
cli
adc
add
xchg
ss
js
xchg
in
aas
in
imul
(bad)
in
xor
mov
xchg
call
and
xor
mov
pushf
pop
repnz
mov
pop
inc
lods
ror
popa
cmp
inc
dec
jle
scas
(bad)
lock
xor
inc
inc
scas
add
mov
rcr
cwde
sbb
push
mov
sbb
push
sahf
pop
or
out
stos
enter
lods
outs
aad
pop
ja
std
pop
xchg
or
or
scas
dec
inc
int
push
push
push
pop
push
sbb
sub
arpl
adc
push
fnstcw
loopne
fdivr
inc
ins
xchg
mov
retf
cwde
ss
pop
fbld
pop
addr16
call
xor
lods
pop
mov
and
add
pusha
mov
mov
sahf
pop
or
aam
inc
fcomp
out
lods
stc
dec
sahf
shr
daa
bound
stos
in
adc
inc
and
iret
dec
mov
pop
jmp
dec
push
iret
adc
inc
push
shr
push
pop
dec
dec
in
mov
push
movs
jge
push
fcmovnb
test
jbe
(bad)
ins
js
jnp
lods
jmp
cmp
mov
push
sbb
jge
mov
jnp
jne
inc
pop
add
xchg
jp
inc
clc
mov
jmp
(bad)
xchg
mov
outs
and
add
add
push
(bad)
push
int3
jp
int
sub
movs
push
xor
lods
sub
mov
test
mov
push
sub
cmp
clc
and
shr
es
int3
call
dec
and
mov
pop
sub
imul
inc
jne
fisub
jmp
dec
cdq
inc
repz
mul
cmp
sub
arpl
sti
call
mov
dec
pop
pop
cmp
or
and
cli
xchg
mov
jg
iret
sbb
mov
call
repnz
jmp
xor
test
ret
jne
mov
mov
mov
fisub
call
adc
nop
adc
adc
jo
sbb
ret
scas
test
jne
cmp
cmp
mov
ficomp
add
push
inc
jmp
mov
pop
cmps
imul
pop
sbb
ja
(bad)
sub
mov
dec
out
rcl
or
push
fcomp
jno
xchg
shr
or
cmp
or
(bad)
xor
ret
adc
jl
mov
aad
(bad)
jp
pop
push
add
pop
xor
ins
xor
mov
test
(bad)
loopne
imul
call
xor
gs
sbb
jo
dec
inc
pop
mov
jns
dec
lds
jnp
out
push
data16
mov
inc
dec
pop
jmp
mov
sbb
std
mov
xchg
ret
imul
loope
jge
pop
dec
mov
dec
into
das
mov
jecxz
mov
lds
fcmovu
push
ss
adc
icebp
mov
ja
mov
les
pop
sbb
pop
aam
add
outs
(bad)
dec
mov
jne
xlat
mov
stos
and
mov
mov
rcl
popa
inc
dec
fisttp
adc
xor
cmp
or
sbb
dec
adc
scas
nop
sub
push
xor
push
add
sub
je
cmp
xor
std
lds
vunpckhpd
xor
inc
fimul
out
sbb
maxps
in
lea
out
jge
into
and
sbb
push
push
mov
int3
xlat
jecxz
je
push
dec
dec
mov
ds
sar
sub
add
in
pop
int3
nop
pop
jns
in
mov
loopne
or
push
push
test
sbb
daa
xchg
inc
and
call
enter
jmp
push
lock
int
or
fnstsw
jnp
repnz
lahf
mov
pop
aaa
addr16
cli
arpl
xor
xchg
shr
and
fiadd
and
cs
push
or
(bad)
cdq
mov
xchg
hlt
xchg
cwde
stos
adc
aaa
movs
neg
fucomi
jne
fild
test
xchg
lods
addr16
es
sbb
fdiv
mov
jmp
mov
(bad)
sub
out
inc
adc
call
mov
stos
rol
push
xchg
adc
add
sub
fldenv
call
cmps
push
fild
test
mov
dec
fwait
mov
arpl
push
mov
mov
icebp
dec
lock
push
xor
pop
dec
mov
sbb
mov
adc
add
sahf
int
hlt
cmp
add
mov
mov
jmp
out
pusha
test
pop
pop
jae
push
cli
stos
ins
mov
outs
pop
jbe
pusha
mov
repnz
icebp
jmp
inc
add
pop
and
add
stos
jmp
xor
add
mov
mov
dec
stc
rsqrtps
daa
mov
imul
jge
in
(bad)
ds
call
dec
and
pop
(bad)
retf
add
fcomp
or
in
cli
push
scas
cmps
movs
adc
loope
cmps
ret
test
mov
dec
fisubr
cmp
aas
mov
rcl
data16
inc
fs
mul
in
inc
pusha
fidiv
rol
sub
and
or
sbb
es
mov
mov
mov
rcr
and
mov
jg
fwait
add
xchg
ds
ror
cmps
inc
scas
or
push
sub
adc
aas
push
push
push
sub
fdivr
mov
or
mov
leave
add
xchg
jp
jo
xchg
inc
xor
pop
cmp
es
pop
mov
iret
push
imul
adc
or
stos
push
rol
stos
pop
out
inc
pop
cmp
mov
fmul
push
push
outs
popa
sbb
cmp
int3
mov
add
add
imul
sbb
aam
add
nop
(bad)
(bad)
(bad)
sub
ins
js
adc
je
les
fdiv
and
je
pop
fs
sub
mov
dec
(bad)
adc
out
in
jnp
sub
dec
sbb
js
test
and
jecxz
jmp
adc
retf
loopne
retf
or
add
mov
or
mov
push
mov
jno
fbld
(bad)
js
pusha
push
cmps
imul
mov
and
imul
adc
xchg
data16
inc
mov
stos
push
scas
xchg
inc
mov
and
shr
jae
in
cmp
jg
test
lods
mov
and
jmp
and
or
cwde
ins
in
or
pop
sub
jmp
cmp
retf
mov
mov
dec
jmp
and
(bad)
push
push
and
(bad)
loope
clc
movs
push
adc
xchg
div
dec
ins
add
adc
into
(bad)
in
sub
sub
fs
sub
retf
fmul
(bad)
int3
fidiv
std
data16
xor
push
jb
inc
inc
div
pusha
mov
cvtps2pi
lods
pop
fisttp
cmp
cmp
adc
mov
fninit
mov
cmps
out
and
mov
add
inc
mov
fld
fmul
dec
daa
add
int3
daa
out
sbb
sbb
sbb
pop
add
cmp
mov
sbb
add
dec
adc
add
cli
enter
cld
xor
xchg
xor
shr
test
xlat
mov
out
rcl
and
and
jge
neg
and
mov
jmp
js
sub
imul
cmps
fs
into
push
out
or
pop
loopne
push
out
dec
sar
push
addr16
sbb
loope
retf
ds
aas
scas
or
mov
sub
mov
push
mov
pop
pop
ins
pushf
adc
push
gs
(bad)
ret
mov
fimul
cli
dec
pop
jle
mov
or
jb
jbe
call
mov
pop
popf
(bad)
(bad)
cmps
call
jmp
popa
inc
xchg
add
jge
imul
pop
outs
add
jnp
mov
jp
popa
ds
out
aad
push
inc
imul
lods
rol
jge
out
movs
jge
pop
pop
push
pop
pop
adc
and
mov
sbb
push
cwde
scas
jecxz
leave
cmp
shl
pop
cs
jl
xchg
xchg
push
imul
(bad)
fld
int
fucomp
pusha
sub
bnd
lds
push
push
xchg
into
push
fimul
sbb
enter
pop
leave
sbb
je
je
aad
jecxz
nop
mov
inc
cmp
(bad)
daa
jno
mov
jo
jmp
jp
push
push
into
sahf
inc
cwde
inc
jns
xchg
ret
pop
call
movs
cmc
fisub
stos
adc
dec
add
icebp
sub
fwait
ins
xor
pop
outs
add
xor
popf
mov
mov
sbb
in
mov
imul
jg
sar
inc
fcmovnu
popf
fidivr
loope
push
pop
inc
adc
stc
mov
pop
es
mov
mov
inc
fisubr
into
add
mov
lock
push
hlt
in
lods
jnp
adc
call
rcl
xor
iret
mov
mov
jge
arpl
add
cs
nop
(bad)
push
dec
or
inc
loopne
out
cmp
pop
aas
ror
mov
push
sbb
ins
xor
add
clc
in
mov
sbb
movs
jmp
cmp
cwde
std
pop
pop
dec
lock
repz
dec
mov
and
add
adc
lods
fild
dec
push
inc
aad
xchg
jg
dec
mov
imul
(bad)
das
ror
(bad)
cld
cmps
pop
test
data16
push
arpl
jnp
jle
ss
in
sub
icebp
scas
aad
push
mov
and
stc
push
cmc
aaa
adc
lock
mov
pop
push
addr16
push
xor
test
xchg
push
pop
test
sti
push
add
cmc
pop
out
jns
jb
jmp
nop
mov
ins
int
rcl
jns
cmps
xlat
into
inc
push
jmp
lahf
sub
jge
mov
sbb
push
cmp
clc
fdivrp
std
clc
sbb
cmc
cli
push
and
cs
cmp
xlat
xor
or
test
pop
push
pop
(bad)
push
fs
pop
add
jne
sahf
adc
div
and
imul
dec
aad
(bad)
jg
adc
mov
dec
mov
and
dec
mov
test
ror
add
mov
sbb
loope
push
in
sbb
sbb
mov
inc
stc
mov
mov
mov
or
jl
dec
loope
mov
popf
xor
retf
mov
mov
int3
push
scas
idiv
sahf
icebp
pop
jmp
jbe
in
push
push
jmp
jl
pop
dec
call
(bad)
add
std
cmp
and
adc
cmp
sbb
xchg
cmc
push
repnz
idiv
pop
ja
stos
inc
cmp
outs
and
lahf
adc
mov
daa
cmp
push
dec
cs
in
repnz
hlt
pop
std
movs
fwait
nop
cmp
(bad)
push
mov
out
or
leave
xor
jmp
packssdw
fsqrt
jb
test
lods
cmps
push
clc
scas
fsubr
loope
jns
je
ror
pusha
push
jo
xchg
fsubr
push
loope
es
fnsave
pusha
jo
or
mov
push
pop
pushf
pop
inc
inc
mov
cmp
loop
xor
jns
mov
cmp
lea
aas
push
push
push
clc
sbb
sub
lea
arpl
jl
pop
leave
adc
lea
dec
lock
xchg
pop
push
push
cmp
adc
(bad)
loop
xchg
push
sbb
mov
xchg
or
fcom
push
loopne
lds
xor
push
push
ror
test
int3
(bad)
dec
loop
cmp
mov
pop
xchg
pop
xchg
scas
fnsave
or
adc
lods
add
pop
push
cs
daa
or
fs
or
ret
fcmovne
sbb
mov
add
jmp
xor
xchg
test
mov
adc
movs
jb
sbb
repz
nop
add
inc
cmc
cmps
test
rcr
inc
jns
pop
xchg
jno
cmp
jbe
push
xchg
(bad)
fdivr
mov
ss
loope
adc
and
div
pop
sub
add
pop
lea
fwait
scas
lods
repz
arpl
rcr
cli
lods
hlt
add
sbb
or
inc
inc
pop
sahf
fwait
loop
cmp
adc
enter
dec
push
mov
dec
(bad)
fdivr
sbb
fldcw
outs
jmp
nop
cmp
xchg
in
xchg
aas
mov
mov
(bad)
mov
arpl
mov
push
mov
mov
cmps
mov
cs
push
ins
adc
leave
dec
outs
push
push
sbb
xor
iret
mov
jnp
mov
push
jo
mov
add
lea
js
jo
les
stos
mov
xor
or
mov
idiv
adc
imul
lahf
push
dec
sar
in
jmp
mov
xor
fimul
sbb
aam
pop
push
push
add
xchg
mov
pop
sbb
in
adc
out
dec
fstp
lods
jne
pop
mov
dec
ret
lock
mov
mov
sahf
inc
xchg
(bad)
sub
jbe
mov
jo
or
push
or
cwde
int3
mov
dec
fwait
add
adc
clc
(bad)
cmp
xor
or
imul
repnz
sub
mov
test
lock
xchg
mov
test
cmp
movs
mov
dec
loope
jns
mov
and
int
sub
pop
je
shl
fmul
mov
fldcw
xor
repnz
enter
pop
or
push
jae
xlat
adc
pop
fstp
lods
inc
lods
or
and
mov
mov
cs
ror
aas
loop
popa
pop
pusha
pop
sbb
pop
jo
stc
jmp
js
or
loope
push
scas
pop
loop
add
mov
mov
push
pop
cmp
mov
and
loopne
aas
mov
jg
int3
gs
cli
sbb
cmc
mov
gs
mov
js
dec
enter
push
jae
gs
lds
or
enter
push
jle
ins
mov
jne
fcom
jge
inc
ret
push
mov
mov
retf
jae
neg
mov
clc
stos
not
xor
sbb
adc
push
adc
cmps
inc
fwait
inc
mov
movd
not
push
test
dec
(bad)
pushf
mov
imul
inc
adc
neg
push
sbb
popf
cwde
(bad)
enter
scas
adc
mov
cmp
test
dec
je
cdq
dec
add
fld
stos
xor
pushf
sub
daa
repz
shl
mov
fwait
xchg
(bad)
inc
push
xor
js
push
add
shl
push
mov
dec
dec
add
xor
mov
xchg
fwait
add
sbb
or
sbb
pop
dec
stos
in
stos
push
cmp
jmp
push
mov
ret
aam
push
out
out
mov
stc
add
std
imul
add
adc
fisubr
arpl
mul
xchg
jl
call
add
pop
ficom
adc
mov
xchg
test
jns
jl
cmp
imul
dec
nop
pushf
test
inc
arpl
sbb
jno
jo
fidivr
add
aad
inc
ja
add
xor
push
leave
imul
adc
inc
mov
shl
xor
and
ins
add
add
xor
pop
xchg
or
xchg
inc
popa
iret
lahf
cmp
push
sahf
loopne
(bad)
add
add
mov
inc
pop
in
je
push
mov
retf
mov
xchg
xor
loop
dec
rcr
out
xor
xchg
add
pop
sub
dec
stos
xor
pop
scas
fisubr
xchg
mov
bound
cld
and
inc
and
sbb
adc
shl
jmp
push
pop
call
test
inc
xchg
dec
(bad)
es
cmp
pop
sub
jnp
mov
push
lds
xchg
repnz
and
xchg
stos
xchg
call
push
sbb
daa
sub
call
loope
cmp
dec
or
sub
mov
pop
push
and
pop
jmp
sbb
in
sbb
mov
je
sub
inc
sbb
bound
rcr
js
and
(bad)
(bad)
repz
sbb
and
add
fneni(8087
scas
lds
arpl
push
mov
and
mov
pop
push
cli
adc
mov
pop
int
cmp
mov
hlt
lods
xor
mov
call
push
pop
call
add
push
xor
les
rcl
push
scas
sub
out
cmc
ret
mov
cmp
hlt
mov
xor
clc
cmovp
jb
jle
mov
jb
push
dec
nop
retf
inc
inc
ins
popf
xor
xchg
push
in
xor
sbb
adc
xor
in
mov
fs
scas
mov
mov
mov
rcr
dec
jl
scas
sub
jns
cmps
adc
jmp
mov
push
adc
xchg
cmp
hlt
js
mov
mov
test
pop
adc
shl
adc
cmp
rcl
mov
test
cmp
retf
fwait
movs
int
cwde
(bad)
nop
les
jl
jg
mov
es
adc
dec
shl
outs
fild
jp
lock
sar
popf
jge
scas
push
xchg
pop
lock
int3
jnp
inc
xchg
adc
mov
popf
jle
push
into
jo
and
mov
push
daa
inc
add
sub
xchg
pop
dec
pop
pop
sbb
adc
jecxz
and
loopne
pop
(bad)
into
cli
mov
mov
in
adc
xor
sbb
int3
push
inc
dec
aaa
xchg
pop
fs
mov
xlat
mov
pop
out
test
xor
cmp
jno
loope
push
fnstenv
scas
cmp
ins
ret
push
and
push
or
dec
test
loopne
sti
xchg
jns
test
test
cs
dec
fcomi
test
pusha
mov
xor
fbld
test
data16
aam
add
inc
sbb
in
cmp
mov
push
sti
lahf
xchg
inc
push
retf
push
cmp
jle
dec
cld
paddw
dec
cld
mov
push
jne
jg
pop
dec
push
test
or
xor
stos
ss
jp
push
stos
add
lds
ficomp
cmp
rcr
cmp
sbb
jne
xchg
(bad)
lea
dec
xor
pop
adc
sub
popf
or
mov
test
jo
and
push
mov
inc
cmps
xchg
(bad)
cli
push
mov
aam
inc
xchg
movs
push
popa
jge
pop
test
pop
iret
dec
test
sti
or
adc
mov
push
jecxz
xor
jns
enter
pushf
dec
test
or
sar
jge
std
out
or
cwde
sbb
dec
ret
pop
xchg
cmps
gs
sbb
lods
pop
cmp
pop
pop
inc
movs
push
ins
mov
retf
mov
dec
test
enter
ins
gs
xchg
ret
push
and
pop
and
sbb
into
push
dec
jle
jbe
and
mov
ds
pusha
cmp
mov
std
mov
in
cmp
and
jecxz
mov
rol
out
test
or
jmp
out
sub
mov
repz
enter
jmp
in
les
jns
cmc
jb
ins
aam
mov
or
add
sub
jecxz
sbb
mov
xchg
pop
out
mov
push
add
fistp
cmp
mov
and
dec
or
xchg
(bad)
call
cmp
repz
mov
xchg
sbb
pusha
cmps
add
pop
jns
pop
arpl
cmp
mov
xchg
dec
test
mov
pop
lods
mov
jb
sbb
xor
jae
add
jg
jmp
mov
rcl
and
xchg
stos
fnstsw
sbb
jle
rol
test
inc
pop
cmp
mov
xor
cmp
push
lods
ror
mov
mov
jb
mov
cmp
icebp
or
dec
std
inc
jge
inc
xor
adc
loopne
jecxz
shl
inc
mov
xchg
xchg
jle
push
xor
fwait
add
sar
inc
aas
adc
jmp
cdq
inc
scas
data16
into
hlt
and
dec
lahf
jae
jmp
mov
push
push
mov
adc
add
xor
push
mov
out
jns
inc
push
pop
clc
test
mov
fprem1
mov
(bad)
js
dec
ss
push
mov
jne
into
popf
pusha
repz
cmp
and
mov
int3
mov
pop
xchg
push
cli
dec
add
add
cmp
push
fadd
repz
les
push
ret
jns
jb
loop
aad
add
push
or
fwait
add
(bad)
xchg
js
mov
test
push
or
push
lea
ins
hlt
ds
pop
iret
dec
mov
out
inc
add
add
aad
imul
test
jge
jge
push
jg
aas
ins
inc
in
mov
in
cmp
div
aam
fstp
mov
xchg
mov
inc
dec
ins
pop
aaa
mov
xchg
fmul
sahf
cli
sub
jge
mov
pop
clc
idiv
outs
out
push
cld
retf
mov
cmp
stos
pop
mov
and
pop
mov
test
add
cmps
add
or
push
push
mov
add
loop
repz
lods
xchg
mov
cmp
stos
jno
daa
add
mov
test
mov
es
and
(bad)
jl
xor
call
movs
mov
aam
inc
xchg
mov
xchg
fisubr
fld
mov
int
jae
sub
push
iret
je
(bad)
xor
adc
mov
mov
xor
and
pop
push
jmp
shl
push
or
retf
(bad)
das
movs
mov
mov
sbb
lea
stc
fistp
clc
xchg
or
in
retf
inc
push
and
dec
xchg
or
adc
push
inc
dec
push
sti
cmc
dec
push
jnp
pop
in
jmp
mov
adc
ja
jne
xor
add
mov
sub
retf
(bad)
out
inc
xchg
or
frstor
enter
xlat
push
mov
inc
add
mov
xchg
ja
mov
jmp
pop
cmps
mov
push
xchg
pusha
push
sub
mov
daa
add
mov
jbe
stc
imul
mov
ror
or
push
push
ret
xor
cld
in
xlat
into
push
pop
cmps
movs
push
or
jl
mov
mov
mov
sar
addr16
cmp
outs
retf
jne
aad
loopne
stos
xor
xor
add
jmp
scas
stos
aam
call
push
xchg
sbb
in
dec
repnz
xchg
dec
sub
inc
ja
hlt
ss
inc
lea
mov
lock
aaa
mov
ret
push
lods
jnp
mov
popf
(bad)
int3
push
mov
pop
aaa
sub
jns
mov
push
xor
cmps
jns
(bad)
jecxz
cs
xor
repnz
mov
outs
mov
ins
sbb
jo
jbe
(bad)
das
neg
jmp
push
and
fmul
out
push
enter
jnp
jns
(bad)
mov
or
mov
push
adc
mov
push
xor
jo
fs
jge
in
hlt
call
scas
ds
in
shl
inc
mov
jbe
push
ins
mov
mov
imul
pusha
in
xor
int
fmul
and
inc
fldcw
jbe
mov
fisub
lods
outs
clc
cdq
sahf
jno
inc
jmp
cs
or
das
int
sub
push
into
icebp
sub
sbb
retf
push
imul
test
sbb
and
dec
bound
xchg
or
icebp
and
xchg
fs
rol
nop
sub
ret
or
sbb
mov
cmp
cmc
stos
lds
adc
xor
add
sub
xor
imul
adc
and
js
adc
lods
into
repz
into
and
jmp
or
cmp
dec
sub
jmp
repnz
sub
pop
popa
rcl
or
inc
adc
xchg
pop
add
pop
fsub
lods
sbb
call
jne
popa
sub
or
pop
cmp
jle
jmp
mov
js
inc
ja
dec
adc
or
mov
jmp
jecxz
jg
(bad)
scas
add
icebp
lahf
lods
xchg
in
sub
jmp
jle
and
(bad)
jnp
es
xchg
push
stc
dec
repnz
std
sar
out
loope
cmp
stos
cmp
or
lock
out
in
call
xchg
mov
aam
cmp
inc
sbb
inc
cmp
out
into
cmps
outs
cli
icebp
jns
pop
lods
mov
push
repnz
push
dec
mov
sbb
or
gs
imul
mov
cmp
dec
std
push
jmp
xor
in
scas
xor
xchg
jae
fidiv
sar
push
cli
popa
int3
pop
sbb
rep
xchg
frstor
fidiv
jge
xchg
add
cmp
xchg
adc
pop
lods
jns
mov
or
loope
add
fcmovb
popf
dec
fdivp
imul
xor
rcl
cmp
lods
sbb
and
mov
pop
xchg
add
ins
in
sub
test
scas
icebp
xchg
and
inc
in
adc
cmc
imul
(bad)
xchg
mov
dec
loopne
repnz
mov
jp
mov
fist
cmps
test
in
fld
push
js
or
inc
jmp
sar
pop
fisub
sub
fwait
idiv
test
jmp
enter
inc
loope
lea
push
add
jl
js
jmp
inc
mov
arpl
and
ret
push
jge
mov
lods
int
mov
sub
push
xchg
inc
int
in
cmp
xchg
mov
lahf
jbe
mov
pop
cmc
shl
in
cmp
stos
mov
jo
jl
jne
sbb
sub
xor
adc
fs
mov
movntps
pop
dec
in
clc
(bad)
retf
addr16
dec
repz
stc
sbb
push
pop
call
sahf
mov
jne
dec
adc
cld
jns
and
neg
es
imul
idiv
loop
das
jmp
sub
std
mov
ret
icebp
sbb
dec
mov
test
mov
movs
jecxz
cmp
jns
jne
mov
lds
ret
fsub
sti
(bad)
mov
outs
cdq
fsubp
(bad)
clc
stc
and
daa
mov
ret
out
sbb
fisttp
das
rol
fldcw
and
xchg
or
or
dec
cwde
cmp
inc
test
rcr
xor
ds
int3
js
sahf
sahf
iret
shl
loope
leave
ss
std
mov
add
push
mov
int
mov
push
push
xor
cwde
jl
mov
jmp
mov
movs
fs
mov
xchg
imul
retf
jo
(bad)
dec
repz
and
aas
sti
addr16
and
sub
clc
sahf
sub
test
cs
(bad)
mov
std
lock
inc
push
cmps
jno
push
and
add
lods
stos
push
mov
jmp
pop
outs
push
dec
stc
and
inc
lea
sbb
push
(bad)
jg
fucom
neg
push
(bad)
pop
dec
cwde
jb
cmp
sbb
bswap
sbb
scas
pushf
test
xor
adc
mov
icebp
shr
je
sbb
sub
push
test
jns
shr
fcom
pop
pop
cs
pop
mov
(bad)
mov
inc
jg
pop
iret
lea
jmp
cmps
lods
ficom
xchg
fld
sti
mov
jmp
pop
push
outs
sbb
mov
(bad)
pop
sbb
inc
sub
xlat
(bad)
out
mov
scas
push
outs
pop
inc
lods
rcl
sti
cmp
in
pop
ficomp
je
mov
mov
retf
(bad)
push
push
push
vcvtpd2ps
adc
sub
push
xor
sahf
dec
mov
cs
cmps
mov
mov
add
(bad)
adc
inc
or
sbb
mov
mov
hlt
cdq
inc
pop
xchg
xor
and
pop
adc
pusha
rcl
mov
adc
aam
xor
or
and
jb
jmp
jo
and
and
xchg
clc
dec
imul
mov
pop
add
movs
(bad)
add
or
cmp
mov
aaa
jbe
stc
cmp
retf
fstp
dec
inc
sub
pop
ja
adc
sub
pop
and
xchg
in
mov
cmp
or
mov
and
inc
in
call
sbb
std
in
and
jmp
or
arpl
fmul
and
mov
lods
pop
aaa
mov
fsub
ror
mov
sar
xlat
push
jo
stc
imul
xor
or
jmp
aad
iret
xlat
mov
jg
mov
xchg
bnd
adc
adc
icebp
call
shr
push
inc
adc
pushf
popa
or
jo
push
cmp
dec
mov
mov
mov
add
enter
sub
mov
imul
jne
dec
sbb
(bad)
jb
enter
add
rcr
xchg
mov
shl
rcr
(bad)
or
mov
in
shl
jl
mov
dec
pop
lods
movs
mov
add
push
scas
dec
dec
les
lods
add
sbb
and
sbb
xchg
xchg
repnz
cmp
mov
(bad)
jp
cmp
mov
fldenv
add
and
sub
ror
fidivr
rcr
mov
daa
add
jg
sub
xor
inc
inc
dec
aaa
mov
pop
in
xchg
shl
fisttp
ss
push
cld
push
nop
mov
adc
enter
inc
es
mov
xchg
pop
cmp
jge
pop
pop
cmp
ret
loop
aaa
pop
call
jbe
daa
sbb
dec
(bad)
imul
in
bswap
mov
pop
and
mov
push
pop
ret
aas
cmps
inc
mov
ss
mov
jmp
mov
inc
xlat
gs
test
cwde
fld
fsubr
mov
into
imul
fisttp
out
call
dec
imul
inc
add
pop
(bad)
add
outs
dec
inc
cmps
dec
mov
push
and
dec
(bad)
hlt
pop
hlt
sbb
ins
or
add
imul
jo
pop
pop
into
mov
ret
push
ret
pop
fdivr
arpl
xchg
mov
xchg
mov
jecxz
ret
out
in
jl
mov
cs
mov
mov
add
add
and
pop
rcl
mov
adc
idiv
ja
cs
fist
test
pop
xor
imul
(bad)
jp
rcr
push
or
cdq
mov
idiv
fldcw
mov
push
imul
sub
xchg
lea
xchg
push
push
out
test
mov
jecxz
jne
fwait
dec
add
pop
(bad)
and
mov
inc
inc
dec
xchg
xor
ins
dec
outs
adc
repnz
jnp
cdq
into
ins
jae
(bad)
jmp
fcomp
push
mov
arpl
mov
nop
and
sbb
aam
dec
cmp
inc
jle
cmp
test
add
(bad)
dec
mov
push
jnp
cmp
mov
in
push
jo
cwde
cli
call
cmp
aas
pop
je
mov
ins
xchg
xchg
pop
sub
mov
dec
clc
cld
inc
nop
popa
pop
movs
mov
and
leave
mov
add
dec
xor
int
or
adc
nop
xor
pop
jno
and
cmp
retf
pop
xor
sbb
int
dec
jmp
les
mov
or
fwait
pop
sub
xchg
or
ret
stos
cmps
mov
pop
pop
retf
jnp
add
addr16
fidiv
inc
mov
pusha
popa
(bad)
stos
push
outs
mov
inc
push
lock
sbb
sub
shl
(bad)
lods
iret
ds
test
xor
(bad)
aas
pop
iret
or
inc
xor
mov
ret
or
jbe
sub
sub
mov
mov
sti
je
mov
movs
add
test
popa
lods
dec
push
add
xchg
rcl
push
lock
call
cmp
pop
pop
pop
ret
dec
les
scas
pop
mov
jl
pop
enter
jge
addr16
cmp
xchg
xor
scas
pop
sub
lea
repz
jp
ja
arpl
sub
je
cmp
cmp
xor
or
rcl
std
inc
inc
aad
pop
xchg
daa
mov
daa
xor
out
(bad)
mov
inc
jmp
js
dec
loope
rol
ss
ret
sbb
xor
(bad)
xchg
pop
fisubr
jbe
(bad)
imul
mov
cmp
mov
push
out
into
test
loopne
pop
cmp
dec
mov
push
iret
or
cmp
cmp
stc
push
cmp
jne
jecxz
push
adc
inc
cmp
ja
inc
loope
push
aas
scas
or
mov
(bad)
mov
jmp
jo
inc
add
scas
push
mov
mov
in
aas
dec
jbe
out
sub
lods
push
test
mov
lock
lahf
and
dec
imul
hlt
aam
test
loop
mov
lds
inc
lods
mov
jl
adc
inc
int
lock
mov
scas
mov
mov
mov
cmp
jg
jmp
ret
imul
sar
test
fild
aam
xchg
stos
sbb
shl
fcmovnu
push
mov
jp
lgs
sub
adc
xlat
and
cmp
mov
(bad)
test
into
mov
adc
nop
popf
ret
aaa
xchg
mov
xchg
xor
mov
or
movs
jns
pop
xchg
cs
ficomp
int3
ins
movs
cmps
stc
movs
jmp
int3
int
cmp
cwde
inc
cli
stc
push
jmp
mov
mov
shr
add
es
lods
repz
lods
mov
lock
pop
xor
xor
(bad)
xchg
adc
rcr
mov
and
arpl
cmp
jge
mov
ins
lock
std
adc
(bad)
js
fidiv
pop
stos
addr16
pop
push
ss
push
and
ins
movs
push
jle
cli
mov
add
int3
sbb
sub
out
mov
shl
xchg
aam
sbb
mov
outs
jl
enter
push
das
cmps
mov
rcl
inc
hlt
lods
or
and
adc
push
push
aad
jmp
and
mov
fdivr
fisub
dec
push
(bad)
cmc
not
inc
jl
rcl
sub
test
mov
pop
jmp
jmp
mov
fdivr
pop
xor
mov
gs
leave
cld
xchg
sti
pop
mul
loop
dec
loopne
push
imul
(bad)
(bad)
jnp
sti
push
pop
nop
stos
test
jns
(bad)
xadd
or
mov
sbb
les
movs
scas
lods
aas
out
jge
sbb
cmp
add
mov
test
lahf
mov
mov
daa
fcom
fsub
xor
mov
or
or
test
pop
cmp
and
mov
mov
and
outs
imul
aad
(bad)
pop
loope
add
push
ins
add
jmp
mul
mov
cs
adc
in
sub
lock
pop
bound
jmp
push
mov
scas
(bad)
int3
and
loope
sbb
mov
sbb
mov
test
out
hlt
mov
fmul
push
out
push
mov
bound
mov
mov
xchg
or
add
cwde
mov
add
test
in
mov
xor
cwde
bnd
or
push
gs
nop
inc
xchg
xchg
mov
fst
inc
push
test
(bad)
mov
movs
or
jno
aas
sub
sbb
xlat
push
std
inc
lahf
inc
push
mov
ins
jae
sti
cmp
jg
inc
inc
in
scas
bound
cmp
or
lea
xchg
add
mov
push
out
imul
and
add
inc
imul
pushf
rcl
dec
fs
sbb
mov
adc
jo
int3
jbe
lock
scas
inc
mov
xor
jmp
mov
adc
xor
push
xor
mov
pop
mov
enter
ror
loope
test
repz
xor
pop
push
mov
int
imul
outs
add
xor
dec
(bad)
cmp
(bad)
and
ss
ror
cwde
movs
sahf
adc
(bad)
icebp
mov
(bad)
cli
xchg
add
fsub
jae
xchg
mov
jo
cmp
ins
mov
mov
sbb
push
test
xchg
pop
jae
or
jmp
jae
in
aam
cmp
or
inc
das
frstor
lea
push
cmp
cmp
dec
jbe
adc
lock
mov
fldcw
dec
xchg
sbb
mov
xchg
or
mov
sbb
inc
aaa
mov
loop
lock
frstor
test
jb
sub
jo
pop
sar
movs
in
mov
cwde
pop
xlat
jbe
xchg
mov
xchg
cmp
or
loope
cli
mov
jmp
xchg
xlat
cmc
popf
aaa
sub
out
cmp
push
adc
lods
add
test
cdq
icebp
scas
push
jo
cmp
repz
pop
mov
inc
es
cmp
(bad)
jne
daa
and
jb
adc
out
cli
xor
xor
dec
cli
enter
xor
lods
sbb
icebp
dec
lods
adc
jb
(bad)
cmp
leave
cs
mov
mov
ja
xchg
ret
std
inc
add
(bad)
sbb
cmc
sbb
in
fistp
fidiv
and
add
cmp
adc
ja
int3
sbb
sub
fcom
cmp
and
pop
push
mov
pop
sti
ins
add
std
mov
add
or
jl
mov
push
xlat
push
sbb
(bad)
push
out
call
sub
mov
bound
xchg
sub
or
mov
push
call
mov
cmps
lock
push
stos
shr
inc
call
dec
push
jnp
in
fld
dec
gs
add
ins
xchg
or
cmp
mov
dec
rcr
out
outs
mov
addr16
jg
cli
stos
fidivr
dec
cs
jle
inc
xlat
fnclex
mov
dec
ds
cdq
retf
into
add
(bad)
std
loope
ja
in
out
push
pop
sub
sbb
xor
pop
push
(bad)
imul
push
ret
movs
aad
mov
(bad)
cwde
mov
adc
or
xchg
movs
repnz
mov
cmp
lea
fdiv
inc
or
scas
inc
test
xor
pop
add
outs
cmps
retf
enter
aad
in
push
rcl
outs
cmps
adc
mov
jb
xchg
nop
dec
pushf
clc
xor
cmp
adc
xchg
addr16
loop
retf
jecxz
add
gs
mov
mov
pop
scas
movs
xor
xchg
pop
push
int
(bad)
call
push
(bad)
test
inc
fisub
(bad)
rcl
out
mov
ins
cmp
sbb
dec
cli
jbe
pop
cmp
jno
push
pop
dec
imul
add
dec
je
fdivrp
xchg
xchg
addr16
xchg
inc
cwde
outs
xchg
ja
shl
sbb
pop
cmc
mov
jnp
dec
mov
sub
add
dec
inc
xor
loope
movs
or
nop
jg
add
in
std
sub
jno
push
push
outs
mov
xchg
mov
jge
xor
scas
(bad)
test
in
inc
or
jbe
in
movs
add
jl
icebp
push
ds
fwait
enter
jae
fmul
jns
daa
mov
inc
icebp
cmp
rcl
aad
repz
add
cmps
rcr
jmp
mov
cli
mov
and
sbb
(bad)
mov
push
inc
ret
test
je
rcl
les
jb
lahf
pop
cmps
outs
imul
cwde
cmp
dec
movs
sar
push
add
scas
jb
mov
repnz
fwait
mov
gs
jecxz
arpl
(bad)
and
pop
mov
dec
ret
retf
jecxz
ret
(bad)
dec
adc
sbb
mov
loopne
push
sbb
imul
repnz
out
shl
fxch
ins
sahf
jle
cli
cwde
(bad)
sbb
adc
xor
or
in
sbb
ror
fadd
mov
(bad)
cld
iret
or
sub
lods
lods
and
ret
push
ins
ret
les
cmc
or
push
xchg
js
push
pop
aam
inc
shr
dec
cmp
cmp
fst
jmp
pop
adc
in
inc
(bad)
lea
mov
cmp
push
pop
lods
lahf
enter
mov
cdq
xchg
into
int
inc
out
pop
cld
sbb
fst
xchg
jge
jmp
into
pop
cmp
mov
sub
pop
sub
ret
cmp
ret
sbb
popf
xor
in
mov
add
mov
dec
jmp
jmp
xchg
repz
jae
mov
xor
in
pop
inc
adc
lea
mov
or
movs
and
dec
jb
fisubr
mov
cmp
std
pop
sub
into
push
addr16
sub
cmp
rol
jbe
jmp
xchg
fwait
repnz
xlat
gs
pop
mov
in
or
cmp
std
fdivr
mov
add
test
push
jp
adc
xor
or
push
rcl
movs
mov
and
cdq
leave
inc
les
je
mov
scas
and
cs
fnsave
test
fcomp
ss
pop
ds
jb
mov
xchg
ja
adc
push
sti
jne
les
mov
out
mov
scas
add
in
add
xor
ds
push
jmp
sbb
das
or
or
add
and
sbb
nop
sbb
or
add
movs
addr16
push
jmp
jp
inc
sbb
mov
dec
data16
out
sub
sbb
pop
pushf
mov
daa
inc
push
mov
test
mov
call
scas
sub
xor
inc
mov
stos
jae
retf
adc
sahf
mov
iret
lds
sbb
push
lods
jns
pop
int
mov
gs
mov
and
in
or
int
(bad)
rcl
jb
or
inc
mov
stos
es
xchg
mov
(bad)
dec
xor
sub
mov
xchg
sub
mov
sbb
dec
loop
mov
mov
outs
pop
outs
stos
fisttp
sbb
push
and
fs
ret
push
pop
aam
movs
loope
je
or
mov
cmp
lahf
aas
xor
cmps
dec
rol
hlt
(bad)
jno
ret
jp
lods
adc
and
add
ins
scas
cmp
cmp
mov
mov
cli
popf
push
push
mov
jp
inc
mov
jns
clc
enter
sub
sub
fld
dec
cdq
in
inc
aam
mov
xchg
call
pop
mul
pop
jno
mov
fwait
sbb
mov
mov
xor
dec
sub
not
push
js
test
jg
loopne
cmp
inc
mov
retf
aaa
lds
cmp
sar
out
sbb
fcomp
repz
xchg
inc
imul
or
dec
(bad)
jg
mov
js
inc
sub
(bad)
idiv
pop
jl
int
in
pop
mov
and
jae
sub
aaa
imul
fwait
dec
sbb
push
push
js
sbb
jl
icebp
mov
dec
jmp
test
loope
(bad)
mov
jbe
les
in
(bad)
mov
push
ror
fyl2xp1
and
mov
outs
ss
(bad)
daa
push
sahf
sub
std
scas
mov
cli
push
push
push
cs
mov
(bad)
push
push
jmp
ret
lods
cmps
ja
xchg
adc
fwait
mov
dec
idiv
pop
inc
mov
xchg
mov
pop
cdq
jae
(bad)
loopne
jmp
mov
sbb
rcl
mov
xchg
mov
xor
xor
xchg
cdq
ss
lahf
push
cs
pop
in
xchg
or
push
jmp
setbe
jmp
ret
bnd
cdq
neg
out
jle
movs
cmp
inc
add
in
xor
lods
dec
cmp
jp
xor
test
adc
mov
aad
lock
pop
add
enter
push
rcl
bound
pop
push
push
stos
dec
fcmovnb
lahf
xchg
sub
mov
je
sbb
(bad)
in
pop
mov
(bad)
addr16
sbb
xchg
pushf
jmp
and
or
out
imul
pop
jmp
sub
mov
or
mov
adc
mov
and
add
push
inc
iret
js
nop
test
xor
mov
cmp
int
inc
push
cwde
mov
out
repz
sbb
xchg
data16
(bad)
push
push
xchg
add
dec
push
popf
push
cmp
push
lock
sbb
cdq
jns
cs
cmp
fild
shr
in
(bad)
icebp
das
mov
pop
repnz
mov
inc
clc
add
repz
add
and
push
imul
mov
jmp
mov
fisttp
lock
ja
dec
(bad)
fist
jmp
and
and
inc
fistp
stos
jp
addr16
(bad)
(bad)
cmp
and
movs
push
lea
or
pop
push
lods
xor
pop
mov
mov
and
pcmpeqb
xchg
dec
fwait
push
jp
clc
jo
std
sub
push
je
push
inc
arpl
in
jo
in
mov
call
ja
push
loope
cmp
pop
nop
jle
stc
or
sub
mov
dec
jge
loop
cmp
push
(bad)
cld
inc
(bad)
mov
test
push
sbb
push
test
dec
xchg
mov
ss
cmp
aad
mov
shr
pop
push
sar
push
jle
inc
ins
jecxz
mov
inc
jne
sbb
(bad)
or
jae
xor
mov
xor
pop
cmp
cli
(bad)
push
call
mov
pop
xor
pop
jecxz
and
dec
sub
adc
and
xchg
mov
or
or
xchg
fisubr
sub
push
cmp
mov
push
in
adc
or
pop
adc
push
aaa
ret
aas
sub
test
and
jle
pop
add
je
out
adc
out
ja
xlat
sbb
and
pop
cmp
scas
push
jb
cld
cmp
pop
aam
jne
in
jbe
sub
mov
xor
mov
xchg
adc
adc
in
adc
retf
out
stc
aam
pop
push
in
test
mov
aam
inc
pop
loope
mov
jp
iret
test
stos
movs
xchg
inc
icebp
jge
clc
lahf
ins
(bad)
lods
mov
jl
out
push
xor
into
mov
repz
xor
jns
out
push
mov
aas
js
jge
aas
mov
sar
inc
or
mov
es
adc
mov
xor
icebp
mov
push
pop
jae
retf
adc
(bad)
cmp
xchg
sbb
pop
(bad)
aas
xchg
adc
sub
mov
test
sti
aam
std
in
cmp
fwait
cmc
rol
pop
sub
xor
sub
dec
mov
pop
add
cli
xchg
sbb
jb
lods
jnp
pop
outs
inc
jg
push
pop
mov
ins
ins
xchg
hlt
inc
fwait
outs
or
outs
loope
jo
pop
xchg
mov
int3
ror
jo
leave
inc
pop
pop
add
dec
les
jno
ret
adc
(bad)
movs
push
jmp
xor
push
push
mov
stc
daa
jne
scas
test
xor
xor
popa
aaa
fldenv
adc
dec
add
or
dec
mov
mov
adc
lock
int3
stos
xchg
in
mov
int3
test
test
push
adc
inc
repz
push
inc
shl
shl
rol
lahf
stc
aad
fdivr
and
dec
ret
adc
or
push
std
shl
fbstp
mov
lods
mov
lock
xchg
test
jmp
and
sbb
xchg
inc
fcom
pop
push
xchg
test
enter
arpl
test
test
xchg
fs
push
push
int3
add
repnz
jbe
iret
jae
pop
into
cli
or
sar
cmp
into
xor
sbb
dec
adc
mov
retf
ret
cmp
xchg
hlt
cwde
inc
push
stos
inc
pushf
cdq
mov
add
stos
and
setg
mov
jb
fs
mov
mov
sbb
call
sbb
aas
mov
mov
jno
add
mov
mov
xchg
movs
adc
dec
push
mov
or
mov
mov
shl
xchg
inc
fisubr
xor
xchg
inc
cmps
dec
test
push
or
push
cmp
loope
pusha
and
fwait
mov
imul
in
pushf
loop
adc
adc
mov
aas
ins
and
imul
cld
or
(bad)
test
js
add
push
scas
cmp
mov
push
sbb
(bad)
iret
test
out
js
adc
cmp
cli
xchg
cmp
add
inc
cmc
dec
ret
mov
jmp
loope
or
cmp
sbb
scas
les
loop
cwde
(bad)
test
or
sbb
outs
div
mov
rcl
(bad)
dec
push
std
popa
add
push
adc
push
sub
jno
std
mov
jp
push
stos
xchg
jbe
addr16
and
sbb
inc
in
pop
jmp
fstp
mov
jne
cmp
fsubr
push
fdiv
loop
enter
or
iret
shl
aas
cdq
nop
fucomip
pop
lahf
pusha
or
in
mov
mov
shl
mov
sub
stos
jmp
scas
jbe
pop
pop
aad
call
addr16
xor
mov
xchg
jne
(bad)
jmp
scas
or
add
xchg
dec
pop
or
idiv
mov
cmc
jmp
mov
mov
mov
mov
arpl
fisttp
sbb
dec
sub
cmp
xor
loopne
fidivr
jnp
sahf
xor
sub
and
xlat
cs
adc
fsubr
pushf
dec
fisubr
test
test
cmps
mov
inc
pop
ds
inc
(bad)
xchg
xchg
adc
or
dec
and
repz
mov
sub
imul
pop
sti
mov
sub
add
and
ins
lods
cwde
retf
xchg
sbb
jb
ret
movs
inc
sahf
stos
call
int3
je
and
jl
ret
pop
(bad)
arpl
dec
or
jge
idiv
in
push
adc
or
push
dec
mov
lods
cdq
arpl
inc
push
cwde
fadd
cmp
push
scas
jge
mov
repz
sub
cmp
and
fdivr
jl
xchg
sbb
add
shl
cmp
jno
inc
cwde
push
or
scas
(bad)
lds
fisub
mov
retf
xor
ret
jle
test
daa
test
adc
and
xchg
sub
xor
ror
sbb
leave
(bad)
fisttp
or
jo
icebp
pop
inc
test
jno
fdivr
retf
arpl
and
jge
jmp
fdivr
adc
dec
sysexit
in
xor
scas
push
adc
inc
into
scas
dec
out
pop
ins
call
jge
push
aad
ror
push
mov
(bad)
je
stos
xchg
mov
mov
pop
mov
scas
lods
retf
leave
fild
jae
movs
xor
int3
push
push
cmp
or
add
cld
mov
imul
add
push
xchg
mov
dec
mov
inc
xor
test
jnp
loop
mov
lahf
and
in
jl
sub
cld
adc
mov
cmp
mov
cmp
addr16
jmp
es
ins
inc
ret
inc
push
jns
std
sub
push
add
sbb
aam
or
dec
dec
fst
stc
jae
ins
jno
pop
xor
jns
push
mov
lods
out
pop
cmp
sbb
dec
or
pop
inc
mov
and
clc
inc
pop
fnstsw
movs
fcom
and
pop
mov
mov
imul
lods
adc
mov
nop
retf
pushf
movs
dec
in
nop
or
mov
fld
lods
(bad)
clc
jmp
cmp
inc
aam
mov
pop
jnp
mov
dec
mov
mov
sti
cmp
ret
fwait
cmps
cmp
pop
and
fcomp
and
and
js
mov
je
inc
sbb
xor
je
retf
scas
aaa
sbb
je
xchg
cwde
mov
pop
aad
icebp
test
loop
inc
stos
ret
jge
or
push
test
in
mov
mov
es
mov
ret
sbb
mov
(bad)
xchg
and
in
ss
mov
lods
test
add
popa
call
mov
adc
test
movs
cmp
xchg
dec
sbb
mov
xlat
ret
std
loop
retf
xchg
pop
std
dec
jle
imul
fcmove
and
cmp
push
dec
xor
jge
out
pop
pop
push
sub
push
and
fbld
or
ins
das
fadd
jb
popf
mov
in
adc
xor
adc
jmp
call
stc
add
cmp
shl
aad
jmp
pcmpeqb
jae
movs
xchg
sar
cld
js
into
pusha
jno
sbb
mov
pop
cmp
fld
inc
in
push
test
add
mov
and
mov
pop
addps
repz
jmp
pop
xchg
fistp
add
add
cmp
cmp
nop
mov
in
xor
pop
mov
mov
or
retf
je
test
xor
sub
stc
push
or
sub
push
das
test
fistp
jle
out
mov
dec
int3
adc
(bad)
pop
inc
xlat
in
cld
out
je
push
in
xor
ss
jae
cmp
jmp
in
and
inc
jo
mov
les
xor
ror
jbe
add
ror
aam
and
push
cmps
jae
adc
stos
mov
jo
jno
pop
mov
out
bound
aad
popf
pop
mov
jnp
push
mov
in
inc
lds
test
shl
stc
rol
xor
test
das
inc
xchg
inc
ins
mov
push
sub
fcom
scas
(bad)
(bad)
ret
inc
cmp
fld
jnp
cmps
sub
rol
in
ret
jbe
adc
mov
cmp
test
mov
xchg
retf
push
cwde
sbb
inc
xchg
cmps
jne
sbb
jmp
mov
mov
enter
enter
mov
mov
sbb
ror
jae
xlat
ds
add
repz
jecxz
rol
or
or
loope
hlt
or
retf
movs
out
cmp
aaa
add
sub
push
pop
ffree
mov
loop
cmp
sub
cdq
sbb
repnz
stos
sub
aaa
cmp
xor
lock
sahf
lods
push
xchg
xchg
es
dec
adc
push
lods
pop
ins
xchg
sub
in
mov
repz
rol
outs
iret
xchg
push
cmps
jne
jo
js
push
cwde
sub
lods
mov
jmp
push
mov
or
push
push
out
jp
add
imul
loop
aad
imul
cmps
out
xchg
add
push
jno
pop
cmp
and
jl
cdq
add
repz
push
xor
(bad)
xchg
or
inc
adc
pop
loopne
pop
pop
test
scas
dec
cld
mov
mov
and
popf
pusha
jle
stos
add
sub
pusha
mov
dec
push
dec
test
gs
add
and
in
or
inc
push
or
pop
out
sbb
dec
repnz
xlat
add
pushf
das
inc
push
sub
dec
ror
sbb
lds
sahf
bound
ret
les
inc
je
mov
jecxz
test
fisttp
and
dec
jo
enter
adc
and
setle
int
or
sahf
mov
sub
xor
fst
stos
ret
inc
mov
inc
(bad)
cmp
jne
leave
add
sub
push
cmp
add
aad
jmp
mov
xlat
xchg
retf
inc
or
out
sub
test
(bad)
add
adc
mov
mov
adc
ret
mov
in
cmps
(bad)
sbb
out
mov
and
xor
lock
mov
or
jno
push
js
popf
shl
dec
jmp
xchg
ins
or
cwde
push
clc
push
nop
and
daa
retf
vmptrld
fiadd
(bad)
mov
mov
push
fcmovne
xchg
jo
pop
lds
xor
or
arpl
adc
je
outs
addr16
lea
frstor
xchg
inc
(bad)
fwait
sbb
mov
push
fnstcw
sub
(bad)
sbb
cwde
fmul
push
push
push
in
mov
rcr
lods
retf
push
(bad)
outs
mov
sub
xor
(bad)
fcomp
outs
push
shl
jae
jmp
jecxz
adc
ret
cmp
or
jb
or
or
jbe
iret
lahf
cmp
inc
out
push
mov
xor
push
repnz
push
sub
in
call
sbb
dec
push
(bad)
xor
mov
scas
mov
push
fdivr
popf
fistp
mov
sbb
cmc
or
fnstcw
mov
ret
dec
mov
push
cli
or
pop
jge
outs
sub
mov
ss
cmp
adc
jo
bound
ss
cmps
frstor
sub
xchg
xchg
xchg
enter
bound
or
xchg
jmp
add
in
mov
mov
enter
jo
push
add
fucom
cli
push
lock
dec
inc
pop
lods
stos
sub
and
mov
hlt
or
pop
cmp
test
xor
iret
retf
pop
fimul
test
aas
lahf
jl
cdq
bnd
fld
popa
fmul
stc
mov
inc
and
sbb
icebp
adc
movs
data16
(bad)
shl
pop
jg
loopne
lods
out
xor
sub
int3
mov
mov
in
mov
push
out
mov
inc
iret
imul
in
inc
or
aaa
loop
pop
lods
sbb
pushf
jb
neg
xlat
jnp
cwde
adc
les
movs
std
jno
fistp
add
cmp
jbe
and
push
push
sub
shl
fadd
cmp
xlat
in
jge
shl
ins
fild
ds
dec
lea
and
cmps
shr
in
aam
bound
mov
xor
and
sub
xchg
test
cmp
pushf
loope
push
mov
adc
das
sub
jns
fimul
mov
mov
add
lods
mov
unpcklps
or
push
ins
dec
push
imul
jnp
fild
fcom
cmp
bound
outs
rol
hlt
inc
shr
adc
mov
mov
and
aaa
jns
pop
(bad)
dec
pusha
pop
aam
adc
jecxz
inc
mov
movs
in
enter
int3
dec
nop
sbb
fcom
fsub
or
(bad)
inc
adc
and
or
cmp
add
fwait
sbb
ror
sub
adc
lds
lock
in
fs
ss
es
repz
outs
in
jecxz
mov
(bad)
fbstp
cmp
(bad)
adc
sbb
gs
fcom
mov
shr
jae
dec
call
int3
mov
push
lods
jp
ss
jge
in
repnz
lea
mov
mov
mov
imul
or
push
xchg
ret
pop
jae
clc
mov
push
mov
out
pop
mov
sub
retf
fdiv
sbb
std
mov
int3
cmp
(bad)
push
push
dec
xor
mov
pop
sub
(bad)
cwde
in
and
push
and
dec
add
imul
mov
dec
test
dec
fwait
les
inc
cli
mov
pop
push
out
xor
call
xchg
loopne
std
ror
pusha
mov
push
iret
ret
imul
(bad)
mov
mov
clc
push
clc
fbstp
lea
mov
jmp
cmps
xlat
cmps
mov
jle
cdq
mov
push
test
xchg
fdivr
push
sbb
idiv
dec
pushf
pop
bound
pop
mov
call
mov
cmp
cmp
shl
stos
jmp
jb
jmp
add
fwait
rcr
ret
cld
imul
loop
xchg
ja
mov
pop
inc
aad
jnp
in
jno
or
inc
push
xchg
sbb
xor
ss
xor
data16
ret
jne
inc
or
cmp
or
je
lods
adc
inc
push
repz
mov
adc
call
push
mov
pop
cmc
mov
and
adc
and
mov
add
je
lock
sbb
imul
mov
xlat
iret
push
and
pusha
xor
fld
or
(bad)
push
cmc
movs
es
pop
pop
sbb
aad
aad
xor
xor
xor
jmp
sahf
cmc
pop
xchg
xchg
dec
sbb
jl
mov
pop
mov
xor
inc
call
cwde
mov
push
pop
dec
or
arpl
lea
or
add
cmp
daa
popa
dec
cs
fmul
loopne
xor
cs
or
rol
pop
xchg
pop
shl
sub
pop
or
mov
mov
in
push
cmp
std
inc
and
jno
push
call
mov
add
movs
xor
push
and
mov
cmp
mov
jecxz
cmp
sbb
jno
pusha
add
pop
imul
js
cmps
call
push
pop
pop
push
mov
cli
inc
or
sbb
test
inc
rcr
mov
call
aam
cmps
jne
(bad)
lea
fistp
mov
sahf
lods
retf
pop
sbb
lods
mov
outs
cld
ss
repnz
dec
jnp
or
add
ds
jge
add
push
ret
mov
jmp
xchg
je
sbb
shl
add
out
jg
xchg
sub
cmp
cdq
(bad)
fnstsw
jae
adc
popf
mov
scas
sahf
fs
enter
jle
push
js
jns
mov
shl
popf
mov
push
repnz
cmp
push
add
cmp
or
(bad)
outs
les
pop
mov
dec
pop
aaa
ja
push
dec
mov
fdiv
inc
adc
pop
and
bound
push
mov
push
clts
adc
dec
push
clc
pop
inc
cmp
pop
push
std
iret
(bad)
stos
xor
loope
cmp
and
in
ins
push
mov
dec
cmp
inc
test
push
rcl
icebp
push
les
sar
cwde
das
fist
or
daa
(bad)
mov
pop
add
es
xchg
inc
scas
lods
mov
jnp
sub
push
je
shl
add
pop
addr16
std
cmp
xchg
cli
ret
cmp
popf
fs
inc
xchg
sub
out
pop
gs
out
(bad)
xchg
push
adc
jbe
sbb
fdiv
sub
adc
mov
dec
mov
xchg
jl
inc
xor
mov
xchg
jo
or
rol
add
loop
pop
icebp
call
ins
das
aad
sbb
leave
xchg
cmp
std
inc
fs
cmp
pop
hlt
data16
in
nop
xchg
pop
ror
lds
aas
movs
xchg
fnstcw
imul
push
js
xchg
pop
dec
or
ds
jno
jge
pop
ss
imul
cmp
mov
jbe
sbb
or
pop
(bad)
inc
sahf
fcmovu
dec
add
sbb
scas
push
add
push
pusha
mov
cmp
sahf
imul
jne
push
(bad)
cwde
push
dec
pop
sbb
inc
retf
les
add
jmp
mov
popa
jns
pushf
adc
mov
mov
mov
xor
sbb
idiv
aas
fiadd
retf
cmp
inc
or
or
fiadd
imul
and
xchg
shr
push
and
push
cmp
jno
mov
fs
cmc
cmp
(bad)
retf
cmps
xor
loop
sub
scas
(bad)
int3
mov
ds
ret
adc
(bad)
mov
loopne
and
addr16
cmp
in
rcl
(bad)
fsubr
(bad)
pop
ss
sbb
mov
movs
(bad)
jnp
inc
push
xchg
fld
push
aaa
out
or
adc
icebp
call
sti
mov
sbb
dec
pop
lods
push
mov
cmp
mov
pop
mov
and
pop
push
push
mov
mov
add
pop
retf
mov
xchg
aas
out
adc
xchg
(bad)
loop
imul
dec
gs
test
xchg
mov
mov
mov
test
icebp
cmp
push
xchg
or
shr
scas
xor
adc
call
jp
loope
dec
pop
mov
ror
std
mov
jno
cmp
loop
sti
push
xor
sub
fild
adc
inc
and
rol
mov
aam
and
es
push
call
or
out
ins
ins
mov
cli
ins
pushf
jae
ror
mov
addr16
push
test
das
inc
jp
aaa
cdq
(bad)
push
jmp
xchg
adc
and
popa
cld
push
inc
into
adc
sbb
ins
out
push
or
sbb
adc
push
out
push
jne
and
call
leave
mov
or
ja
mov
pop
iret
and
test
rcl
dec
retf
pop
in
or
mov
xor
and
cld
dec
(bad)
in
sbb
movs
inc
out
mov
cmps
mov
mov
push
das
(bad)
fld
mov
xchg
and
push
std
in
inc
inc
repz
pop
or
jno
add
pusha
add
fist
push
fisttp
sar
cmp
xor
mov
push
add
xchg
xor
xchg
and
cmp
xor
cmps
mov
fisttp
mov
es
fbld
call
dec
ss
jns
hlt
and
stos
push
mov
dec
pop
xor
dec
mov
and
pop
js
mov
xchg
push
pop
into
in
fld
hlt
or
in
push
cmp
pop
sti
addr16
bound
adc
cld
out
xor
aam
cli
dec
add
push
test
mov
jnp
xor
movs
jecxz
jecxz
ret
out
fcmovnbe
or
mov
in
push
mov
xchg
clc
push
pop
sahf
and
xchg
call
or
mov
pop
push
add
pushf
inc
xchg
pop
dec
call
pop
scas
cwde
inc
dec
fimul
clc
or
sahf
mov
push
adc
cdq
fisttp
xor
ret
push
cdq
adc
sub
mov
sbb
pop
and
(bad)
fs
xchg
dec
mov
adc
pop
iret
and
dec
in
xlat
into
shl
mov
fst
jae
ja
icebp
push
retf
shl
xchg
jle
leave
data16
lock
leave
push
rol
mov
or
das
mov
pop
sahf
cs
(bad)
xor
push
sar
mov
data16
cmp
cmps
ins
adc
call
mov
lds
mov
leave
inc
fistp
lock
jno
ret
sub
add
inc
int3
fwait
scas
sbb
dec
push
outs
mov
add
es
(bad)
pop
mul
out
repz
xor
push
shr
pop
inc
mov
and
in
ficom
in
psllq
sar
mov
mov
jge
sbb
test
cmp
mov
sbb
mov
pop
hlt
shl
out
inc
outs
aam
hlt
in
pop
adc
or
pop
and
push
jle
std
jno
popf
cwde
fsubr
addr16
cmps
imul
int
scas
in
add
shl
and
push
jmp
push
out
inc
call
(bad)
push
cld
aad
sbb
xlat
std
or
add
imul
sbb
xchg
cs
xchg
jmp
movs
adc
mov
fwait
les
std
iret
adc
fmul
mov
pusha
in
shr
imul
call
stos
cmp
mov
or
cmc
lds
psubw
int
and
push
mov
dec
sub
jle
(bad)
and
xor
cmps
pop
adc
lods
xor
xlat
and
mov
sub
ins
and
popa
fmulp
daa
xchg
repnz
add
mov
fs
(bad)
jo
lods
scas
add
cmps
hlt
add
data16
mov
test
mov
sti
cli
in
int3
xchg
aad
repnz
or
fdivr
call
test
scas
pushf
mov
push
jae
xchg
fistp
call
outs
fs
mov
or
mov
seta
pop
and
dec
or
arpl
xchg
ret
xchg
ja
int
movs
les
sub
sbb
inc
ror
popf
adc
cmc
xor
bound
fcom
arpl
mov
jp
mov
fidivr
std
mov
xchg
in
pop
mov
test
test
int
pop
sub
jp
mov
mov
(bad)
out
push
inc
int3
or
cmp
pop
mov
jle
cmp
or
push
mov
(bad)
add
pop
add
add
pop
jae
and
shl
xor
or
mov
arpl
shl
jle
mov
or
push
jmp
pusha
jb
stos
sbb
loop
iret
test
jl
jmp
sti
jae
pop
sub
jl
jge
sub
sub
pop
in
shl
xchg
jb
or
adc
or
call
push
mov
pop
(bad)
pop
inc
das
jle
adc
repnz
xlat
jns
or
mov
sbb
pop
ror
dec
xor
and
mov
mov
cmp
and
jle
dec
sbb
adc
dec
or
xchg
dec
popa
xor
cmp
jno
pop
in
cs
fstp
pop
inc
mov
les
out
imul
cmc
jnp
sub
(bad)
retf
cld
xchg
into
call
sbb
cmc
xchg
mov
mov
ins
mov
popf
por
sbb
test
sub
xchg
mov
adc
movs
mov
hlt
or
retf
outs
jle
mov
retf
xchg
add
jmp
push
inc
fwait
mov
or
fisttp
movs
mov
hlt
jnp
scas
ins
push
and
fnstenv
enter
(bad)
xchg
icebp
lea
pop
gs
mov
add
push
pop
test
(bad)
mov
in
dec
in
les
daa
mov
cmps
adc
in
imul
push
xor
nop
aaa
push
ret
and
daa
arpl
test
popa
pop
call
pop
sti
mov
inc
aaa
pop
and
sbb
pop
popa
fsubr
inc
jnp
xchg
mov
mov
nop
shl
or
sub
out
cmc
mov
cmp
xor
mov
push
popa
push
ins
dec
sbb
stc
das
sub
push
js
fidivr
ins
cmp
pop
mov
cmp
ror
mov
add
xchg
or
dec
test
mov
mov
xchg
repnz
mov
pop
xchg
in
push
mov
cs
sub
pop
fldenv
pusha
push
je
and
aam
fiadd
cmc
lock
mov
or
in
repz
push
inc
loop
stos
mov
icebp
mov
pop
mov
pop
or
repz
mov
xchg
movs
in
and
mov
cmp
sub
jo
mov
sbb
hlt
mov
pop
scas
add
or
push
inc
addr16
jmp
cs
aaa
sub
addr16
shl
ins
call
ret
out
add
out
xchg
pop
and
pushf
aam
sub
xor
fld
mov
cmp
popa
add
sub
mov
imul
pop
mov
jne
mov
mov
das
pop
fdiv
jge
adc
gs
mov
fistp
ja
or
bnd
inc
push
popf
sub
sbb
jo
xor
into
mov
dec
shr
das
sbb
mov
aaa
inc
inc
lock
retf
mov
stos
ja
adc
mov
add
ja
mov
push
mov
clc
cmp
mov
stos
in
arpl
test
test
outs
cmps
push
fwait
inc
(bad)
out
jb
sti
aad
sbb
add
pop
mov
cmp
lods
ds
mov
mov
jo
sbb
jnp
cld
mov
jecxz
push
push
xchg
loopne
inc
xchg
cmp
and
mov
mov
push
mov
push
dec
pop
mov
stos
movs
aaa
sbb
cmps
jno
int
dec
or
fcomip
int3
mov
mov
pop
dec
jne
mov
ds
in
sub
adc
(bad)
bound
lods
test
(bad)
sub
arpl
jge
call
push
dec
fidiv
push
fsub
adc
mov
sbb
mov
loopne
fdivr
xor
push
xor
lock
ds
int3
retf
in
mov
and
scas
inc
hlt
dec
sub
cmp
sub
out
jno
xchg
retf
mov
fsub
(bad)
loop
cmp
stos
repnz
fwait
mov
call
in
lock
pop
mov
fs
push
mov
mov
xor
ror
lahf
inc
retf
lds
in
or
pop
movs
xchg
pop
jg
and
retf
das
movs
push
cld
inc
lds
mov
add
adc
cmp
js
add
sub
add
cmc
xor
push
dec
push
cmp
pop
and
mov
xchg
and
adc
inc
mul
sar
mov
dec
push
and
sub
stc
jmp
sub
fisttp
data16
push
pop
xchg
fwait
pop
arpl
jno
sti
jo
pop
(bad)
mov
out
popa
popf
add
ins
lods
cli
neg
dec
add
sub
loop
mov
cmp
adc
test
cmp
and
jns
sub
mov
icebp
les
stc
mov
shr
pop
push
pop
mov
ret
in
mov
dec
mov
arpl
popf
jmp
gs
mov
and
jmp
sbb
cmp
push
pop
inc
add
sbb
and
cld
xor
or
iret
mov
pop
sar
and
mov
retf
or
cmp
je
jbe
divps
mov
mov
retf
mov
add
sti
adc
lods
sbb
stos
xor
in
test
mov
jbe
gs
stc
test
pop
leave
scas
cmp
jmp
sub
in
xchg
dec
jb
pop
jo
jns
mov
dec
dec
xchg
and
push
loope
out
sbb
sti
dec
xor
sub
add
xlat
repz
xchg
add
sbb
lahf
push
data16
cwde
mov
xchg
popa
sar
aas
popf
fnsave
sbb
or
das
inc
and
fimul
push
inc
push
leave
in
push
lea
mov
jmp
outs
and
aam
shld
jno
cmps
add
mov
call
mov
add
jo
mov
push
xchg
jge
push
cmp
neg
sar
pusha
cld
push
pop
inc
shl
out
xchg
jae
adc
xor
push
jmp
push
adc
call
push
add
fdiv
cmps
shr
repnz
mov
mov
lock
xchg
add
ret
lahf
ret
jmp
push
add
cmps
call
repnz
dec
imul
dec
dec
lahf
xchg
adc
sbb
call
call
fisub
aas
jnp
push
xchg
add
push
xchg
sub
fadd
push
jp
mov
adc
cmp
inc
sub
sub
sub
mov
or
out
icebp
mov
xor
push
xor
rol
in
stos
jbe
push
rcl
pushf
and
push
retf
mov
sbb
mov
inc
sar
add
jne
jns
scas
retf
add
ja
stos
mov
jmp
nop
mov
xor
pop
sbb
cs
and
xlat
sbb
push
cmp
adc
inc
dec
retf
(bad)
sub
or
adc
mov
imul
cmp
dec
sar
push
shl
shr
push
push
inc
mov
mov
int
vmread
push
fisub
mov
mov
add
fxch
mov
and
xchg
dec
mov
sahf
and
shl
aam
aad
sbb
clc
and
sbb
ficomp
dec
aam
inc
aam
in
ss
(bad)
lds
dec
sub
xlat
push
xchg
pop
cmps
dec
pop
xchg
je
loop
popf
std
jns
scas
cs
xor
sub
push
push
cmp
mov
movs
xchg
sbb
mov
fistp
stos
outs
push
jmp
(bad)
out
sbb
inc
mov
rol
in
inc
adc
icebp
xchg
xor
sbb
les
dec
xor
push
cmc
movs
popa
arpl
imul
out
shl
or
test
mov
add
xchg
jae
cmps
loope
shl
xchg
stos
scas
aad
dec
jmp
sub
push
aad
xor
mov
push
or
mov
daa
mov
and
push
xor
fld
mov
jmp
xchg
sti
mov
and
shr
xchg
adc
aad
pushf
xchg
(bad)
aaa
add
bnd
ins
pop
popa
xor
stc
mov
xor
std
push
shl
pop
pop
sub
push
sub
mov
mov
mov
inc
push
js
and
or
imul
ins
mov
pop
(bad)
enter
rol
scas
pop
or
xor
pop
sub
push
das
push
dec
sub
mov
push
cmp
movs
aaa
nop
test
adc
pop
inc
lock
gs
retf
dec
iret
test
aad
sbb
adc
and
inc
dec
frstor
repz
rcr
dec
lods
xor
jge
lds
xor
mov
test
cmp
and
sub
pop
add
test
clc
cld
add
cmp
pop
fnstcw
xor
mov
scas
(bad)
jg
cdq
push
mov
pushf
cwde
lods
adc
pop
sbb
int
and
out
into
fidiv
cmp
mov
rol
pop
test
xor
dec
bound
sbb
outs
add
xchg
add
sbb
test
add
mov
inc
pop
mov
push
cmp
fidivr
imul
mov
push
adc
mov
and
imul
sub
lahf
outs
push
mov
pop
icebp
mov
dec
lahf
push
mov
pop
xor
gs
enter
test
jmp
jecxz
ins
fwait
adc
outs
js
ror
fsubr
mov
(bad)
fild
imul
push
sub
mov
call
aaa
shl
mov
rcr
adc
stos
mov
call
mov
mov
jbe
mov
(bad)
pop
mov
pop
mov
dec
fidiv
mov
cmp
xor
loop
mov
adc
push
pop
daa
pop
(bad)
sbb
add
cmp
rcr
add
retf
aas
ret
mov
enter
dec
lds
inc
pop
shl
aaa
std
repnz
xchg
inc
retf
(bad)
push
and
gs
gs
mov
rcr
mov
popf
cs
pop
jno
cs
std
mov
pusha
and
shl
push
out
outs
xchg
mov
mov
sti
xchg
pop
lea
push
sar
clc
inc
adc
mov
xchg
scas
sub
jmp
rcr
xchg
mov
inc
jmp
shl
sub
ret
or
mov
sub
xchg
nop
jp
jmp
xchg
test
rcl
aam
push
pop
mov
call
ins
je
fwait
ret
push
mov
shl
ins
and
sub
push
fucom
stc
add
rol
pop
aam
sbb
fistp
pop
pop
xor
jns
das
movs
sub
imul
(bad)
inc
sbb
aad
retf
(bad)
shl
movs
push
dec
xchg
mov
(bad)
sbb
lock
and
iret
std
dec
popf
mov
rcl
inc
dec
out
retf
fistp
push
sub
jno
ins
retf
xor
test
fsubr
dec
movs
aas
jbe
pop
inc
ins
bnd
cli
cmc
xchg
xchg
or
push
sub
mov
cmp
add
push
adc
mov
mov
mov
jge
fwait
mov
aad
or
test
push
cmps
lods
ret
nop
cli
or
mov
push
ret
clc
push
icebp
(bad)
push
push
jle
jno
jle
pop
movsx
jno
sahf
jmp
ffreep
out
cld
cmps
pop
sbb
inc
fwait
aam
add
xor
adc
mov
fist
std
jns
mov
sbb
cmp
out
jnp
push
out
mov
adc
adc
(bad)
push
daa
sub
cmps
jg
arpl
mov
jmp
imul
and
aad
adc
lock
jp
push
xor
push
adc
call
lock
in
int3
lds
rcl
lods
in
push
xor
ins
and
sahf
and
mov
lahf
and
mov
sbb
imul
pop
jbe
jb
sbb
mov
(bad)
shl
xchg
and
out
test
pop
mov
repnz
(bad)
push
sahf
xor
mov
cmps
cmps
ja
jns
les
sub
nop
repz
shl
xor
pop
(bad)
cmp
pop
inc
(bad)
inc
das
shl
fs
cdq
mov
xchg
mov
lods
test
repnz
jbe
xchg
fstp
jecxz
jle
mov
push
xchg
adc
add
adc
sbb
stc
and
xchg
mov
mov
push
push
div
xchg
into
mov
push
rol
in
sbb
and
cli
(bad)
dec
cmc
xchg
cmp
lea
xchg
lods
sub
cmp
sbb
sbb
out
pop
sbb
mov
jl
jo
push
inc
mov
enter
mov
mov
lods
movs
mov
mov
sti
pop
sbb
and
arpl
pop
jmp
scas
icebp
mov
jnp
mov
mov
test
adc
add
data16
call
leave
iret
mov
xchg
clc
sub
pusha
daa
leave
dec
pop
enter
inc
mov
neg
mov
mov
cmp
ret
jno
movs
or
pop
into
adc
mov
cmps
dec
jp
sahf
ret
adc
sbb
adc
push
xor
pop
mov
jmp
(bad)
xchg
mov
enter
in
jb
je
add
inc
jmp
push
idiv
je
mov
jae
adc
hlt
mov
enter
(bad)
sbb
movs
fist
ss
retf
mov
outs
ja
pusha
jnp
inc
dec
mov
inc
cmp
jnp
cmp
inc
adc
fcomp
into
xor
mov
add
(bad)
or
fcom
mov
rcl
cmps
dec
mov
xlat
sbb
inc
jg
mov
fsubrp
movs
mov
sbb
mov
pushf
bound
ror
shl
je
sbb
jae
call
mov
sbb
xor
mov
out
dec
out
mov
(bad)
lock
lock
hlt
xchg
repz
ja
pushf
cmc
xor
add
ss
test
cmp
add
mov
pop
lock
xchg
fs
inc
dec
call
gs
cmps
push
mov
pop
in
adc
ins
xor
pop
fld
cmps
fisubr
scas
imul
add
adc
es
arpl
xor
pop
and
and
add
sub
sub
xor
pop
(bad)
cmps
and
(bad)
fsubr
mov
outs
inc
jb
repnz
das
clc
imul
das
pusha
sbb
mov
jg
sbb
fwait
cs
xor
ins
(bad)
and
inc
mov
pop
xchg
out
and
in
nop
fidiv
repnz
out
jp
out
add
mov
pop
sbb
mov
hlt
or
adc
push
imul
mov
mov
jns
sbb
cmps
xchg
add
push
sbb
(bad)
cmp
loopne
pop
xchg
mov
lods
cmps
xlat
stos
stc
pop
(bad)
hlt
push
cmp
(bad)
mov
add
cli
add
pop
daa
fucomi
xchg
sbb
iret
mov
mov
sbb
scas
lods
sbb
xor
inc
pop
pop
add
xor
mov
fcmovne
sub
popf
mov
or
sbb
mov
xchg
sub
scas
mov
test
dec
or
mov
adc
iret
cwde
ret
fidiv
mov
mov
stos
and
enter
mov
retf
call
adc
jns
fdiv
or
inc
pop
jnp
pushf
sbb
push
lods
es
les
popa
leave
lods
sub
and
fisttp
stos
add
inc
loopne
dec
jmp
xor
test
icebp
imul
fild
(bad)
adc
leave
cmove
xchg
and
jae
(bad)
mov
push
fidivr
scas
loopne
mov
pop
fwait
inc
pop
sub
jmp
pop
addr16
jo
mov
popa
push
push
call
ret
(bad)
inc
sub
fld
or
sbb
sar
sub
test
add
adc
sar
int
mov
fbld
xor
loopne
jp
mov
and
stc
std
sub
xor
jmp
out
dec
ror
jno
retf
fcmovnb
sahf
jns
sub
aam
int3
push
out
or
jns
stos
adc
dec
inc
mov
push
or
sub
je
xor
dec
aas
push
int
or
cs
jle
shl
mov
shl
jg
(bad)
cli
or
std
fprem
xchg
outs
pop
jge
dec
fcmove
leave
and
pop
fst
mov
xchg
loopne
retf
pusha
sti
mov
sbb
mov
jge
ss
or
mov
jg
ja
imul
repnz
sub
dec
into
shl
cmp
cld
call
add
push
xor
fisttp
jae
inc
or
nop
push
(bad)
std
sub
fcom
lea
icebp
cmps
popa
les
into
loopne
dec
repz
std
sti
out
pop
clc
lahf
cmp
jns
(bad)
push
adc
test
add
ja
sbb
popa
xlat
jl
adc
popf
inc
mov
jae
ds
push
call
rcl
pushf
je
push
imul
retf
repnz
pusha
mov
ins
(bad)
popa
repnz
or
xchg
js
js
sub
add
loope
arpl
neg
inc
dec
dec
sbb
sbb
(bad)
into
add
out
mov
ret
adc
sub
lahf
mov
(bad)
pop
xchg
pop
xchg
out
mov
test
push
jmp
fdiv
popf
or
loopne
xor
xlat
js
scas
imul
movs
sbb
cs
push
sub
sbb
dec
imul
ret
sub
int
push
in
es
sub
or
es
arpl
sbb
and
mov
lods
in
pop
das
(bad)
cli
push
jp
stc
pop
outs
ror
iret
xchg
test
outs
popf
fidiv
enter
mov
retf
jge
push
fisttp
xchg
ins
gs
xchg
ja
mov
rol
xchg
jmp
sahf
movs
jl
mov
sub
sub
ds
inc
jmp
lds
or
xchg
icebp
xchg
(bad)
and
xchg
inc
jnp
fimul
dec
ss
push
mov
(bad)
cmp
add
(bad)
aam
mov
mov
cmps
rol
add
add
jae
mov
shr
mov
inc
cmp
push
lds
cmps
ror
fimul
ins
xor
pop
into
jns
and
mov
call
pushf
sbb
scas
loope
and
aad
arpl
pop
inc
sti
dec
adc
mov
stos
or
or
sbb
test
sahf
pushf
rol
sub
push
outs
int3
ja
mov
and
pop
div
and
popa
(bad)
(bad)
nop
inc
lea
shl
jl
inc
xchg
jecxz
sti
mov
scas
data16
push
inc
pop
fadd
hlt
cli
dec
shr
mov
sar
inc
popf
add
add
jle
call
jp
sub
push
fild
iret
cmp
add
fst
cmp
cmp
push
jo
and
test
dec
loop
inc
inc
movs
inc
fild
cmps
mov
sub
and
retf
mov
mov
call
push
xchg
xor
cld
sub
cmp
call
sbb
imul
cmp
(bad)
fisttp
loope
jecxz
stos
mov
cmp
rol
fwait
mov
das
stc
mov
jbe
test
cmp
std
loop
fdiv
icebp
jnp
mov
jmp
bnd
mov
push
sub
add
cmp
adc
stos
push
pop
add
movs
cmps
push
in
xor
jg
sbb
(bad)
repnz
push
sbb
or
mov
pusha
or
out
cmp
rcl
jns
mov
jecxz
(bad)
(bad)
mov
and
ds
mov
std
sub
movs
or
cmp
cmp
icebp
ins
imul
xchg
loop
hlt
scas
push
mov
mov
add
push
sti
es
add
rcr
(bad)
dec
and
sbb
push
push
jg
jne
add
in
mov
push
push
ja
fst
mov
ficomp
jp
shr
loope
mov
mov
lods
push
mov
mov
jg
mov
mov
push
jl
(bad)
mov
fldenv
retf
dec
imul
jge
or
xor
mov
sbb
out
inc
xor
xor
inc
les
push
jg
pop
ins
push
aad
xor
dec
jl
jae
cs
in
pop
and
int3
jp
sti
jo
jno
sbb
xchg
repnz
xchg
xchg
pop
js
inc
mov
mov
pop
test
ret
or
and
mov
xor
push
or
lahf
call
rcl
call
repnz
mov
adc
aam
test
(bad)
add
xlat
inc
mov
jg
mov
clc
arpl
loopne
loopne
pop
aam
sub
sahf
(bad)
(bad)
inc
enter
fsubr
popf
sub
rcl
addr16
or
jp
cli
add
sub
mov
jmp
adc
lds
pminub
repnz
pop
clc
jmp
mov
addr16
inc
sbb
sub
pop
inc
out
pop
imul
dec
icebp
js
jp
jae
hlt
cmc
and
inc
mov
sub
and
mov
out
and
loope
jbe
push
pop
cmp
fstp
rcr
xchg
mov
mov
jmp
mov
inc
cmp
jne
sbb
cmps
punpckhbw
sbb
add
out
addr16
fbstp
jae
adc
shl
movs
les
in
inc
ins
xor
push
add
cdq
iret
daa
mov
mul
pop
movs
sub
ficom
clc
dec
adc
loope
movs
xor
cmps
mov
push
mov
fisttp
jle
daa
jge
adc
pop
cmps
mov
mov
sub
mov
jl
in
inc
stc
daa
fsub
pushf
and
jge
xor
dec
ret
aaa
adc
inc
dec
jecxz
jg
inc
div
pop
outs
dec
mov
inc
mov
ret
ss
add
push
jnp
mov
add
xor
xchg
call
cmp
data16
xchg
mov
mov
sub
xchg
inc
mov
push
cmc
loopne
adc
repnz
jge
imul
push
and
push
stc
lock
lahf
test
and
test
hlt
xchg
out
sbb
mov
fldenv
pop
ins
jb
add
loopne
sbb
jae
adc
shl
dec
xchg
adc
jbe
imul
movs
mov
cmp
push
cmp
aas
cli
les
movs
sbb
rol
in
xor
(bad)
dec
cwde
xor
(bad)
and
adc
cmp
dec
cmc
xchg
mov
fcmovnu
push
push
jecxz
fnstsw
cmp
out
mov
inc
or
inc
ja
add
dec
pop
outs
pop
mov
popa
fisttp
xchg
and
sbb
sbb
ja
lahf
mov
sub
mov
movs
jno
cli
jne
jge
jle
inc
xchg
cmp
add
clc
ins
push
push
in
out
add
dec
and
dec
dec
inc
daa
inc
mov
mov
jl
push
inc
js
das
mov
xchg
mov
out
rcl
sub
adc
lahf
pushf
clc
xlat
das
inc
test
push
loop
enter
fidiv
shr
movs
jnp
cmc
jge
dec
iret
add
les
les
cmps
jmp
cmp
(bad)
and
cmp
(bad)
lea
es
dec
ins
fdivr
or
xor
std
ja
or
les
sbb
inc
and
sbb
(bad)
mov
int
add
mov
push
lahf
je
and
test
ret
hlt
add
test
retf
mov
pushf
lods
mov
stc
lods
test
pop
fistp
arpl
push
mov
mov
pop
ret
mov
or
pop
(bad)
test
inc
mov
enter
pop
cwde
ja
adc
lahf
jb
mov
inc
call
mov
mov
bound
and
int
daa
mov
inc
and
into
sbb
push
push
dec
fwait
cmp
jmp
xchg
jmp
leave
bound
sbb
push
push
fdivr
cli
movs
sar
mov
das
in
dec
xchg
aaa
pop
(bad)
call
(bad)
push
and
sbb
pushf
adc
mov
fwait
aaa
loop
icebp
pop
in
xchg
cmp
xchg
movhlps
or
xlat
popf
mov
mov
dec
mov
pop
outs
and
mov
call
cmp
ins
stos
sahf
fwait
cli
loope
xlat
mul
cld
inc
in
scas
sub
retf
sub
lea
push
cmps
test
or
fwait
adc
jl
mov
pop
daa
xchg
in
dec
bound
retf
push
mov
and
jns
jmp
adc
push
rol
(bad)
cmp
mov
mov
mov
movs
cld
sub
cmp
aaa
rcl
ret
xor
fisubr
or
mov
stos
das
pop
mov
cmc
cmp
scas
push
pop
dec
setge
mov
add
cmc
ffreep
add
adc
sub
and
loopne
pop
pop
sub
retf
aas
pusha
outs
pop
jae
fsub
push
jbe
in
test
clc
nop
xor
dec
lods
repz
inc
sbb
dec
(bad)
daa
loope
mul
sbb
das
outs
push
test
dec
cmp
inc
test
jo
daa
pop
xchg
loope
add
mov
das
inc
jg
push
sar
jno
iret
dec
sub
xchg
int
push
cdq
pop
jbe
test
pop
sub
adc
sub
or
xor
pop
cmp
leave
shl
jge
test
jns
dec
out
shl
inc
inc
mov
ins
das
or
(bad)
(bad)
pop
cld
std
sub
dec
push
cwde
cmp
sub
(bad)
or
sahf
test
jno
(bad)
and
push
outs
fld
mov
shr
inc
adc
repz
sub
out
push
add
aaa
(bad)
shr
jae
out
mov
gs
xlat
sub
addr16
es
add
movs
frstor
popa
enter
hlt
fild
dec
dec
sub
jge
cmps
dec
mov
fild
outs
pop
nop
sahf
mov
cmp
imul
jnp
cs
mov
mov
jl
out
push
xchg
aam
mov
cmp
lods
mov
das
inc
call
out
test
add
xlat
movs
stos
xor
push
mov
cmp
(bad)
mov
cmp
jg
jnp
test
fcomip
xor
mov
loop
imul
mov
mov
push
outs
cwde
pop
in
in
ret
sbb
mov
adc
aam
out
cmp
mov
sub
(bad)
out
out
add
loop
aaa
popf
in
xor
sbb
and
bts
nop
push
sbb
retf
add
movs
test
test
leave
out
loopne
sbb
jo
xor
jne
mov
lods
jle
push
push
inc
mov
fwait
sbb
mov
adc
push
jg
imul
in
sbb
mov
and
mov
adc
in
bound
sub
jae
repz
and
mov
fistp
fisub
aas
mov
dec
clc
xor
sbb
ins
push
arpl
or
repnz
or
ins
mov
xchg
cmps
or
nop
iret
and
fwait
icebp
sbb
or
in
pop
jl
lods
nop
pop
sbb
and
jmp
stc
mov
int
or
mov
xor
into
dec
(bad)
pop
push
rcr
gs
or
stos
retf
ret
mov
xor
adc
repz
test
add
(bad)
xor
ret
or
shl
loope
stc
js
shl
imul
shl
stc
bound
dec
or
ficomp
out
add
shr
jno
or
mov
jle
add
inc
mov
enter
js
xor
repz
loope
push
jecxz
extrq
jns
out
lods
push
pop
mov
inc
or
int
call
mov
push
dec
sub
aas
lock
mov
dec
outs
cmp
fxch
push
xor
dec
mov
mov
mov
lea
shl
mov
inc
ins
imul
add
pop
jge
shl
sbb
aad
mov
mov
adc
and
sub
movs
imul
pop
lahf
mov
sub
sub
jp
mov
icebp
dec
das
loop
fcomp
cwde
adc
pop
ja
mov
popa
sbb
stos
push
not
adc
inc
stc
push
(bad)
jne
popa
retf
cmp
mov
mov
pushf
add
pop
sub
cli
(bad)
mov
fcomp
popf
jo
loope
jno
fcomp
(bad)
aad
pop
mov
shr
xlat
(bad)
stc
jae
adc
idiv
cmp
repnz
xchg
and
iret
dec
jl
in
and
xor
out
xor
popa
pop
mov
dec
cwde
jb
xor
mov
jge
in
sub
addr16
xor
pop
sbb
jae
jle
mov
and
aam
rol
sub
outs
cmp
and
mov
cdq
(bad)
enter
xchg
movs
shl
lods
icebp
mov
into
punpckhdq
xor
jo
mov
rcr
in
test
xor
mov
fldlg2
lods
in
mov
push
ret
fdivr
and
push
jb
mov
pop
inc
iret
or
dec
push
push
ss
mov
jg
cmp
mov
cmp
dec
iret
mov
adc
sub
and
cmp
push
adc
cmp
mov
mov
and
xchg
not
inc
inc
xor
dec
aad
mov
mov
in
or
leave
mov
je
xchg
stos
cmps
stc
cmp
push
cmp
cmp
sbb
cli
cwd
aas
push
adc
daa
jge
popf
xor
repz
xor
loop
test
dec
icebp
stos
jbe
das
or
adc
inc
out
xor
push
ror
sti
pusha
ror
xor
cmps
setg
mov
jbe
jecxz
jmp
sbb
ret
mov
out
jg
sbb
xchg
das
(bad)
ja
hlt
ficomp
movs
fldenv
fimul
mov
xor
xchg
mov
fisubr
add
or
cmp
jb
stos
pop
out
mov
shr
cld
xchg
mov
add
cmc
jb
cmp
mov
mov
ficom
inc
loop
arpl
jne
xor
or
or
lock
jnp
jl
pop
in
imul
and
or
fiadd
cmps
sahf
and
push
pop
ss
mov
and
jl
jecxz
test
add
mov
push
pop
pop
mov
xchg
ror
xchg
lods
mov
dec
sub
hlt
movs
mov
stc
jle
inc
and
fs
in
push
mov
dec
jnp
int
fadd
push
out
or
pushf
mov
push
cld
imul
xchg
fstp
aas
out
lods
cmps
ret
test
sub
or
leave
int
enter
lods
sub
lods
jae
stc
or
sbb
sbb
retf
dec
sub
call
mov
mov
jb
mov
sbb
cmc
adc
lods
xor
mov
scas
inc
aad
in
mov
stos
cmp
ins
mov
xchg
js
cmp
ficomp
sbb
mov
mov
pop
lahf
movq
inc
xlat
jle
dec
push
mov
clc
mov
scas
mov
cmps
cld
mov
sub
mov
nop
mov
or
inc
in
(bad)
pop
and
ds
pusha
dec
or
mov
popa
sar
lock
fs
jmp
repz
add
test
push
iret
mov
shr
and
ret
loope
jle
xchg
(bad)
in
pop
clc
adc
jmp
das
pusha
mov
mov
je
mov
mov
pushf
jns
jae
cwde
xor
sahf
cs
xor
icebp
xlat
dec
and
mov
jbe
adc
push
sbb
dec
call
pop
inc
xor
lds
xor
outs
fdivr
scas
pop
hlt
pop
xor
add
rol
xor
rcr
or
pop
sub
and
je
pop
push
pop
push
in
nop
out
test
ss
stos
mov
fistp
es
inc
fnstcw
lods
lods
adc
dec
test
bound
mov
test
dec
adc
push
cmp
popf
out
out
in
mov
fisubr
mov
or
arpl
or
iret
btr
push
cmp
mov
fnsave
jne
xchg
push
fs
add
dec
adc
movs
std
mov
outs
int3
cmp
inc
push
stc
adc
add
out
mov
scas
xchg
pop
in
popa
adc
dec
retf
aas
xchg
sub
stos
xchg
mov
xor
(bad)
jno
adc
cdq
shl
sbb
mov
cmc
fdivr
pusha
or
and
aad
push
out
xchg
mov
ret
push
(bad)
(bad)
and
in
scas
ins
xchg
ret
mov
xor
nop
cmp
mov
xchg
xor
mov
push
div
and
push
xchg
stc
add
outs
dec
pop
and
mov
mov
lods
addr16
inc
pop
or
xlat
pop
(bad)
retf
aad
js
push
sbb
fistp
or
and
xor
not
dec
and
mov
xor
loope
mov
sbb
adc
shr
jl
call
out
inc
push
xor
bound
out
test
push
js
push
xchg
or
fild
loopne
ds
movs
inc
and
and
bound
xor
sub
xchg
jecxz
fiadd
sub
inc
and
in
sti
lea
jae
add
cmp
mov
cmp
pop
repz
adc
adc
(bad)
mov
cld
test
dec
and
or
out
adc
and
sar
pop
jecxz
xchg
or
dec
arpl
or
and
cmp
or
js
or
mov
xchg
cld
stos
add
xlat
xor
das
pop
inc
dec
and
icebp
movs
mov
stc
dec
pop
jb
cld
and
jle
cmp
jg
aaa
fucomi
retf
mov
mov
jnp
inc
lock
push
push
mov
into
add
ins
xlat
ror
(bad)
hlt
imul
ds
sub
pushf
mov
sbb
push
bound
xchg
(bad)
loope
fnstenv
push
ds
add
xlat
xlat
jmp
enter
mov
cmp
cli
fdiv
add
adc
fcomp
pop
mov
outs
(bad)
xchg
push
sub
push
cmp
lock
out
scas
xchg
jno
xchg
rcr
push
out
call
xor
sub
arpl
hlt
jg
jns
mov
fwait
cmps
cmp
mov
in
mov
fsub
pop
mov
dec
adc
push
outs
test
cmps
adc
push
(bad)
shl
and
mov
into
les
loope
jle
(bad)
iret
jge
sahf
push
jnp
jmp
ss
sub
sbb
retf
addr16
fisttp
dec
jg
cmps
cmp
rcr
push
inc
mov
retf
(bad)
dec
mov
xchg
jmp
sub
frstor
pop
sbb
push
sbb
mov
or
sub
xlat
adc
aad
outs
es
add
mov
and
out
jb
fwait
pop
dec
bnd
xor
call
in
sbb
jg
sub
dec
fwait
cwde
loope
mov
pop
arpl
push
(bad)
inc
sub
sub
addr16
mov
(bad)
clc
dec
xchg
xlat
mov
sbb
mov
sbb
jns
push
xor
push
adc
out
shr
inc
push
jne
sar
xor
and
sahf
lea
call
fbld
mov
mov
call
mov
pop
(bad)
out
sub
sub
in
rep
repz
sbb
or
add
mov
adc
xor
lds
lods
sub
cld
push
sub
cld
pushf
call
enter
cmps
and
(bad)
mov
mov
loopne
push
out
jmp
data16
pop
retf
mov
inc
push
outs
cmp
add
gs
xor
add
mov
dec
cwde
adc
rcr
out
jae
mov
mov
sub
push
or
bound
scas
jae
imul
xchg
fcmovb
or
dec
pop
add
js
mov
mov
cld
aaa
mov
push
cmp
ins
clc
repnz
adc
adc
jne
pop
inc
adc
inc
out
dec
add
jp
out
mov
shr
das
retf
es
mov
aad
mov
jo
pop
xchg
adc
ins
mov
ret
jg
sub
out
mov
push
xor
jns
icebp
dec
xor
push
mov
movs
js
dec
inc
add
jnp
push
sub
ss
imul
in
outs
stos
xchg
movs
jecxz
ficomp
fwait
movs
push
sbb
adc
pushf
pop
xchg
mov
ins
leave
jle
xor
aas
data16
xchg
pop
xchg
cmp
ficomp
inc
fsubr
stos
mov
ret
nop
push
mov
pop
xchg
jmp
mov
xor
enter
into
mov
pop
std
xchg
mov
outs
mov
fistp
movs
adc
mov
stc
hlt
xchg
mov
movs
popf
test
add
gs
movs
pop
fiadd
sar
shl
popf
outs
cmp
addr16
lock
push
xchg
and
pop
loope
loopne
mov
mov
sti
cli
addr16
push
xor
mov
inc
fcom
adc
sub
xchg
lods
inc
mov
dec
push
pop
mov
mov
pop
gs
cmc
mov
push
mov
scas
fld
cmps
and
scas
rcr
aam
dec
xor
jl
xchg
mov
call
inc
adc
ds
fbld
ins
push
sbb
push
test
sbb
jmp
push
or
xor
jbe
repnz
or
scas
into
mov
hlt
pop
adc
cwde
das
mov
js
(bad)
mov
mov
xor
call
sub
das
inc
ins
call
out
imul
inc
xchg
dec
mov
jmp
enter
and
xchg
xchg
nop
mov
add
mov
xchg
lock
cmp
xchg
pop
pop
icebp
addr16
rcl
nop
das
jo
xchg
repnz
and
cmp
nop
test
mov
les
imul
cmove
push
js
cwde
fiadd
add
xchg
outs
xchg
in
outs
jae
push
and
sbb
in
xlat
stos
adc
lea
xchg
pop
in
push
stos
aad
popa
pop
dec
ror
sbb
sahf
sbb
mov
cli
jl
jmp
aad
and
inc
or
fcom
sub
(bad)
pop
cld
mov
fdivr
nop
push
dec
cld
fcomp
push
xor
mov
adc
pop
fld
add
cmps
es
imul
retf
mov
pusha
jbe
mov
xor
fsubr
out
and
sub
addr16
and
jae
popf
or
pop
and
inc
xor
mov
pop
imul
adc
repz
mov
int3
xor
mov
fwait
ucomiss
(bad)
push
gs
cli
pop
sahf
jbe
stc
xor
fs
(bad)
dec
ins
pop
jl
sbb
adc
push
fs
push
icebp
mov
adc
mov
mov
adc
jae
(bad)
mov
jmp
xchg
sbb
leave
pop
and
jp
and
int
(bad)
mov
sub
xchg
aad
mov
sub
outs
daa
ret
jns
or
fild
or
fistp
sahf
mov
or
stos
xchg
adc
cld
sti
call
mov
cdq
pop
cli
nop
pop
cmp
lea
into
movs
ret
pusha
sahf
pop
ds
sub
ret
lods
add
jp
cmc
ret
aaa
sar
clc
dec
mov
test
mov
xchg
xchg
xchg
adc
inc
dec
xor
xlat
daa
sub
(bad)
cmp
jno
xchg
xor
loopne
std
push
cwde
cs
cmps
gs
out
sbb
or
push
popf
ss
es
cwde
jae
sub
xchg
hlt
cmps
pop
dec
ret
mov
xchg
dec
sub
pop
and
sbb
outs
sub
push
in
and
fstp
fsubr
(bad)
sub
fs
jb
and
xor
pop
mov
and
pop
rcr
push
dec
mov
mov
sbb
mov
leave
aam
xor
out
or
bound
jae
mov
rol
movs
mov
in
cmc
(bad)
fadd
imul
into
aas
lock
dec
retf
push
mov
mov
add
aad
adc
idiv
mov
inc
inc
adc
in
jbe
push
sbb
popf
pop
pop
(bad)
cdq
jg
pop
out
push
popf
mov
jecxz
lods
adc
xchg
xchg
lahf
adc
cmps
xlat
adc
mov
xor
mov
xchg
mov
xchg
sbb
jnp
dec
in
mov
dec
or
mov
pushf
xchg
(bad)
loop
je
shl
sub
jmp
add
mov
call
sub
xor
dec
ror
or
jnp
push
jecxz
xchg
xor
jo
retf
sub
mov
bound
daa
fbstp
adc
xchg
ds
xchg
mov
sbb
fnstcw
into
dec
xor
adc
bound
xchg
fsub
cmps
sub
pop
ret
mov
lock
or
fimul
pop
pop
idiv
iret
outs
adc
adc
push
mov
xchg
jge
hlt
repnz
and
pop
or
xor
fdiv
inc
inc
adc
or
dec
jns
daa
mov
or
jmp
repnz
cmps
mov
lods
mov
and
sbb
mov
xor
inc
mov
pop
xor
sti
pop
push
out
adc
neg
push
hlt
add
nop
push
ret
std
or
pop
jno
mov
test
xchg
dec
nop
pushf
pop
mov
xchg
dec
cdq
pop
jne
pop
pop
repz
je
adc
les
jp
into
test
sar
push
enter
and
cmc
shl
xor
ds
aad
out
xchg
iret
xor
ss
cs
(bad)
mov
inc
dec
pop
push
sar
push
pushf
push
mov
repz
(bad)
call
and
push
std
jp
out
mov
stos
outs
or
rol
xchg
pop
test
js
mov
push
or
or
jl
test
hlt
push
sbb
jno
call
sbb
jmp
adc
cmp
test
in
out
ret
inc
or
adc
jl
mov
add
push
mov
ds
fsub
sti
inc
ret
(bad)
fist
dec
and
popf
fist
sbb
fsubr
adc
ins
jo
mov
pop
sahf
push
push
je
push
ins
nop
daa
repnz
or
add
mov
fwait
sbb
test
aad
sbb
dec
rsqrtps
mov
xor
daa
stc
and
or
inc
push
fucomip
add
mov
jl
hlt
pusha
sbb
int3
mov
loope
xchg
sub
int3
bound
scas
pop
mov
call
pop
jle
outs
in
pop
cmc
push
(bad)
or
mov
add
push
test
jmp
cld
pop
jecxz
movs
test
mov
loopne
or
xor
jl
cli
ins
or
cs
in
shr
pusha
aaa
addr16
call
outs
movs
hlt
cmp
clc
shl
sub
cmp
dec
repnz
xchg
add
iret
push
cmp
xlat
sub
lock
mov
push
call
(bad)
in
fbstp
jno
xchg
iret
(bad)
mov
push
out
add
sbb
add
mov
sub
fimul
stc
ficom
popf
mov
mov
add
ret
jo
arpl
jp
mov
push
pop
or
imul
mov
clc
xor
mov
sub
rcl
sbb
retf
inc
mov
push
adc
les
mov
shr
aas
mov
mov
es
jg
mov
sahf
jp
cld
das
aad
jmp
ins
jae
or
test
jo
add
rol
sti
std
pop
xchg
int3
ja
shl
ud2
push
in
movs
push
or
mov
shl
cmp
loop
mov
xor
bound
scas
sti
data16
ret
aaa
mov
add
inc
mov
xchg
loopne
xor
je
cmp
cmp
bound
bound
mov
push
sbb
xchg
cwde
mov
jle
mov
jbe
xchg
sub
mov
bound
cli
push
test
mov
cmp
pushf
jecxz
or
repz
test
adc
mov
test
pop
nop
fiadd
js
dec
sbb
cs
repnz
sahf
dec
daa
cmps
movs
mov
(bad)
ficom
jle
adc
in
jp
call
sbb
rcr
jmp
cmp
or
push
dec
xchg
mov
inc
adc
dec
or
dec
pop
jmp
jmp
lods
(bad)
jno
pop
clc
enter
arpl
inc
xchg
fst
pushf
xor
mov
cmp
int3
pop
int
jl
(bad)
iret
pcmpeqd
mov
jecxz
stc
out
mov
addr16
or
outs
fsubr
xchg
sub
mov
cdq
nop
cmp
sbb
or
outs
js
sub
add
pop
jp
push
or
scas
and
jb
outs
xlat
shl
mov
mov
cmp
or
mov
xchg
rcl
scas
pop
jb
pop
(bad)
frstor
scas
or
xor
push
nop
dec
jne
lahf
jne
pop
std
outs
xchg
add
test
xor
inc
retf
dec
sub
cmp
inc
sub
out
dec
mov
fmulp
xor
push
mov
ror
inc
scas
cld
push
mov
cmp
out
stc
(bad)
cmp
aam
arpl
aad
jp
cs
into
adc
pop
xchg
inc
test
dec
retf
mov
cwde
push
or
adc
fcmovnu
sysret
mov
sar
xchg
lock
xchg
mov
mov
adc
mov
repnz
push
sbb
cmovbe
sti
daa
in
xor
ss
in
pop
(bad)
cmp
(bad)
repz
inc
push
lahf
xchg
repnz
sub
retf
sbb
mov
shl
xor
add
push
repz
pop
push
add
mov
in
data16
and
sub
sbb
pop
jo
pop
rol
inc
inc
mov
stos
or
adc
ins
mov
in
sub
and
mov
add
sti
mov
mov
dec
jmp
test
repnz
(bad)
ss
daa
jl
inc
es
and
cmp
jmp
int3
shl
xor
cmc
mov
mov
push
add
dec
mov
and
(bad)
mov
aas
mov
xchg
jo
gs
retf
push
cmp
add
ds
fstp
cli
sbb
idiv
mov
(bad)
dec
push
jb
pop
pop
add
mov
in
inc
sub
xchg
and
xchg
mov
pop
pop
pushf
aad
cdq
dec
pop
push
add
inc
ins
mov
ret
adc
xchg
(bad)
jmp
xchg
test
jo
fs
imul
ins
jl
daa
sbb
retf
add
pop
add
cmp
xchg
js
neg
mov
movs
test
les
and
or
mov
outs
addr16
ret
shl
aas
cmp
mov
push
pushf
pop
sbb
in
xchg
pushf
jle
popa
sub
pushf
out
dec
sub
adc
movs
and
cdq
cmps
push
sbb
test
ss
mov
lahf
lahf
test
pop
sub
idiv
sbb
mov
add
loopne
inc
add
std
dec
xchg
lock
jle
push
outs
inc
pop
sub
mov
(bad)
inc
xchg
xor
inc
gs
add
popf
cli
mov
pmaxsw
dec
mov
enter
mov
int3
hlt
sti
xor
xor
jnp
jg
popa
jne
test
test
dec
jns
retf
arpl
or
xchg
(bad)
and
scas
lods
cmp
in
or
mov
js
mov
pop
fimul
mov
sub
aas
and
sub
mov
jmp
mov
in
mov
push
sti
test
sbb
mov
sub
les
mov
mov
inc
lods
fist
dec
enter
push
lea
add
xchg
nop
enter
in
iret
push
outs
pusha
lods
mov
jl
and
loopne
cdq
lods
pop
mov
mov
aaa
xor
jne
mov
mov
sub
shrd
(bad)
aam
xchg
push
jp
mov
rcl
enter
and
retf
jno
data16
mov
cwde
cmps
xchg
icebp
mov
inc
xchg
ja
pop
jecxz
cmp
inc
sub
lsl
data16
mov
(bad)
or
imul
clc
jb
add
or
pop
imul
pop
shl
fisub
cmp
dec
int3
call
inc
mov
sbb
aaa
sub
stos
jnp
jo
jecxz
xchg
or
jb
sbb
lock
fstp
add
mov
sub
and
in
xchg
push
enter
loop
push
mov
pop
sbb
cmc
add
dec
or
cmp
cdq
cld
fsub
push
jbe
stos
push
in
cmp
ror
mov
in
movs
jno
out
das
(bad)
fistp
sar
mov
pop
sub
push
adc
mov
add
xchg
outs
add
sbb
pop
sbb
xchg
mov
stos
mov
and
xchg
hlt
dec
imul
fcom
jnp
into
je
jne
mov
fcom
and
xchg
ja
das
xchg
add
sbb
cmps
neg
mov
jg
dec
xchg
sti
inc
and
xchg
in
in
or
sti
dec
jne
adc
dec
mov
mov
inc
in
fiadd
ficomp
add
arpl
pushf
pop
stos
lods
loopne
ins
cmc
mov
mov
daa
pop
xor
push
adc
lock
xchg
mov
cmps
dec
jbe
jae
sbb
sbb
aad
jae
jle
mov
mov
or
add
push
mov
int
ds
ja
pop
push
test
and
(bad)
cmp
mov
sbb
stc
inc
rcl
mov
and
jmp
or
inc
sbb
mov
test
pop
imul
pop
and
sub
cmp
sub
cwde
es
int3
lods
dec
ja
inc
fistp
mov
adc
gs
mov
jp
lahf
sub
dec
mov
in
xor
iret
shl
ins
imul
aam
ror
pop
test
xor
repnz
aas
jl
cmc
push
add
inc
mov
adc
add
jg
add
xor
stc
cli
and
push
or
dec
pop
dec
add
pop
in
ja
inc
cdq
mov
daa
xor
adc
fs
(bad)
pop
cmp
scas
aam
pop
add
call
xchg
cmp
ins
mov
fiadd
xor
mov
jg
sub
xchg
test
push
inc
stos
pushf
int3
daa
mov
pop
popf
jo
or
xchg
xchg
jl
sub
and
adc
push
push
ret
xor
cmps
add
sbb
push
mov
and
neg
mov
into
jbe
out
jo
and
add
cli
dec
or
(bad)
aad
test
push
inc
packssdw
js
mov
sub
lods
cmps
xchg
adc
add
adc
add
loope
mov
mov
add
sub
cdq
and
fs
jmp
out
test
or
je
gs
pop
aas
and
push
cmc
fs
xchg
push
cmc
icebp
js
xchg
fsubr
add
test
fsubr
mov
or
(bad)
push
mov
out
sub
jmp
jbe
in
sbb
(bad)
push
jns
sub
push
vpand
cli
sbb
mov
cmp
jb
(bad)
xor
jp
push
sbb
xchg
mov
and
mov
mov
(bad)
(bad)
xchg
dec
pop
addr16
ins
fistp
fistp
mov
pop
pop
pop
pop
je
xor
add
cmp
imul
jb
jle
xor
lahf
or
lahf
es
xor
mov
mov
xchg
je
xchg
push
ror
mov
sub
adc
sbb
xlat
dec
dec
jmp
into
jl
mov
lods
call
xor
jns
cwde
inc
ins
mov
lods
push
adc
inc
mov
hlt
(bad)
je
add
fs
adc
sbb
adc
sub
das
sbb
sub
mov
inc
and
popf
cmp
in
icebp
jmp
jg
aad
int
mov
movs
sbb
fs
mov
adc
scas
stc
jbe
xlat
scas
mov
mov
mov
cmp
adc
call
lods
or
add
aas
pop
cmp
xor
mov
mov
fisub
xchg
xchg
leave
add
stos
and
inc
int3
xchg
fdiv
shr
nop
mov
jg
nop
jl
enter
pop
sti
and
push
mov
imul
mov
pop
std
gs
ds
adc
hlt
and
xchg
scas
mov
xlat
stc
jle
fdiv
cmps
add
add
adc
adc
or
rol
aam
imul
dec
pusha
aad
mov
xchg
dec
(bad)
cmp
mov
ss
jns
iret
jp
and
pushf
(bad)
xlat
loope
mov
kaddw
add
mov
xchg
jb
xchg
push
xor
jbe
pop
lock
aaa
cdq
test
sbb
in
inc
push
adc
xchg
mov
repnz
mov
jns
jb
hlt
jnp
sar
iret
ficom
adc
(bad)
jecxz
fnstcw
xor
push
pop
cmp
mov
jmp
fiadd
mov
sahf
vpsubd
daa
adc
pop
shl
movs
fcom
jbe
cmps
mov
test
cmp
and
jge
arpl
sub
rcr
out
mov
push
jae
mov
mov
ds
xchg
xchg
leave
mov
in
loopne
sub
lods
dec
in
mov
sbb
cmp
adc
and
mov
jmp
popa
cmc
out
cmc
imul
mov
mov
fld
push
xchg
cs
in
loop
cld
hlt
or
adc
pop
repnz
jp
xchg
and
or
in
sahf
je
daa
imul
popf
fwait
xlat
gs
test
shr
xchg
pop
sar
ret
jl
call
scas
xor
cmps
pop
xor
or
iret
dec
add
(bad)
pop
stc
fidiv
lea
jne
mov
or
movs
call
push
jp
sahf
mov
sub
adc
xchg
push
rcl
shl
in
mov
mov
inc
psubusw
xchg
cmc
cmp
mov
sub
test
mov
retf
in
fst
jo
xor
add
inc
add
mov
lds
in
rol
mov
xchg
sub
push
out
add
add
push
ret
lea
jmp
pop
inc
inc
test
adc
test
push
add
mov
(bad)
xchg
repnz
mov
dec
aad
neg
(bad)
fisttp
scas
(bad)
mov
call
imul
lock
sub
and
les
push
jae
inc
adc
test
xor
mov
iret
sub
and
inc
push
mov
cmps
inc
iret
xlat
xor
xchg
rcl
xor
aam
scas
in
lods
mov
sub
mov
pop
or
fist
cmp
lock
sub
imul
adc
(bad)
cmps
mov
jae
xor
add
add
dec
or
lds
xchg
rcl
and
push
push
add
sahf
loope
jp
xchg
sahf
imul
xor
lods
jmp
das
sbb
retf
in
out
and
jo
fs
(bad)
pop
adc
rcr
das
in
mov
adc
jno
xchg
data16
imul
call
dec
stos
fnstsw
add
adc
push
(bad)
retf
in
pop
fld
(bad)
cmp
adc
(bad)
cmp
mov
mov
lds
adc
sub
scas
sbb
push
das
jne
fidiv
mov
add
inc
adc
adc
and
arpl
or
gs
ficom
mov
xchg
test
inc
sbb
xor
lock
ins
push
mov
(bad)
int
dec
jnp
xchg
test
push
pop
cli
shr
daa
push
in
ror
add
sub
clc
or
adc
cmp
sbb
jle
js
lahf
in
jo
imul
sub
sub
sahf
jecxz
pop
leave
jmp
mov
mov
scas
and
in
out
fsubr
(bad)
mov
adc
out
add
cmp
xor
(bad)
push
mov
dec
cdq
push
xchg
adc
xor
pop
jbe
jmp
bound
stos
and
ret
cmc
dec
icebp
jle
dec
(bad)
xchg
push
fwait
mov
adc
xlat
shl
mov
cmp
shl
mov
xchg
fidivr
jg
xchg
leave
push
mov
or
push
sbb
inc
das
fcom
push
jle
pop
push
call
mov
ret
xchg
inc
sbb
fild
fnsave
sahf
adc
jns
inc
ss
in
cs
aaa
aam
iret
fimul
dec
dec
pop
dec
push
inc
add
mov
es
in
pop
sar
in
add
stos
jmp
dec
(bad)
imul
cmp
cmps
ror
cdq
pusha
das
loop
mov
aad
add
pop
add
xor
loop
add
inc
js
pop
repnz
add
sub
inc
bound
ds
xor
jle
cmps
and
xchg
mov
test
sbb
xchg
pop
stos
fmulp
inc
add
cmp
pushf
jmp
push
icebp
adc
pop
scas
iret
sbb
je
test
fld
call
xor
ret
add
adc
push
ds
adc
cmp
(bad)
pop
push
sub
bound
in
(bad)
xchg
mov
push
xor
in
pop
in
mul
mov
mov
jle
jmp
push
jl
cmp
fwait
cmp
jno
adc
dec
pop
mov
mov
jmp
in
mov
jmp
pop
xor
pop
adc
es
pop
push
sbb
sbb
test
sub
retf
sbb
xchg
mov
cld
sbb
sub
popf
loop
cmp
hlt
out
mov
aad
and
push
gs
inc
loop
loopne
jl
aad
lods
daa
je
leave
mov
ror
xor
pop
xchg
rol
cdq
mov
sbb
sub
adc
(bad)
or
mov
fs
ja
ss
test
mov
sbb
inc
adc
ins
sbb
test
jl
inc
dec
jl
jge
jle
mov
or
xchg
mov
lods
inc
lods
add
or
test
add
jp
push
cmp
cs
adc
jp
inc
data16
call
repnz
(bad)
fld
jge
(bad)
jg
test
call
inc
mov
inc
sub
hlt
fld
imul
std
out
jge
sbb
inc
cmp
out
aad
sub
mov
push
xor
popf
fwait
jno
xchg
imul
inc
push
cmp
pop
imul
int3
jne
out
xchg
sbb
mov
in
les
dec
repz
adc
sar
(bad)
and
xor
sub
pop
aad
mov
dec
cmp
pop
xchg
dec
mov
imul
xlat
sbb
(bad)
cmps
rcr
pop
sbb
push
mov
adc
inc
(bad)
xchg
cdq
pop
fwait
xchg
in
cwde
repz
scas
ins
cdq
fadd
in
push
shl
dec
add
pop
sbb
cs
lds
arpl
dec
bound
cmp
jno
sbb
int
shl
lock
mov
hlt
pop
(bad)
jnp
jae
xchg
xchg
fldenv
neg
mov
mov
xor
push
adc
into
adc
inc
(bad)
aam
xchg
mov
inc
mov
(bad)
inc
rcr
mov
jle
(bad)
pushf
sti
int
adc
stos
(bad)
jmp
push
or
cmps
jnp
ret
dec
dec
loopne
push
dec
(bad)
jl
fstp
out
sbb
mov
push
movs
mov
mov
sub
inc
sbb
and
or
stos
loope
xor
xor
jae
into
test
mov
into
xchg
bound
iret
or
icebp
jb
test
push
xor
imul
mov
in
sbb
les
jae
add
mov
adc
pop
inc
test
or
xor
call
fld
dec
adc
(bad)
add
out
out
xchg
mov
stos
int
inc
imul
xchg
out
mov
stc
mov
push
leave
fnstcw
shr
out
out
ror
pop
mov
neg
jae
adc
ret
adc
pop
imul
jmp
add
or
sub
adc
sbb
and
jae
inc
leave
sbb
xchg
retf
cmp
mov
cld
push
repz
mov
jle
push
stos
jno
jecxz
test
fiadd
sbb
(bad)
gs
stos
jp
(bad)
test
cmc
jmp
adc
sub
psubw
jmp
xor
mov
btr
inc
out
(bad)
adc
cli
outs
inc
ja
cmc
dec
add
sub
lods
jmp
xor
ss
xor
fbld
(bad)
jp
add
pop
xor
jp
sub
ins
pusha
push
cmp
lea
or
cmp
nop
pop
dec
jmp
add
in
add
adc
pop
daa
cmp
mov
or
leave
imul
test
jmp
test
lea
pop
in
sub
mov
sub
enter
ret
scas
jge
sub
dec
and
inc
cmp
out
add
and
push
or
sub
or
xor
cld
inc
lahf
bound
pop
movs
inc
xchg
fist
retf
fld
push
loop
dec
iret
cmp
dec
cmps
aaa
retf
pop
enter
pop
jg
inc
retf
add
fisubr
loopne
sbb
icebp
mov
cwde
cmp
not
scas
adc
pop
int
retf
mov
ins
aas
pop
dec
js
inc
test
fnstsw
fwait
mov
push
cmp
pop
stc
daa
test
mov
out
ds
pop
xor
movs
aam
enter
sbb
sbb
stos
scas
jge
sbb
out
ret
cmp
jne
pop
jae
lock
(bad)
(bad)
mov
cmc
sbb
clc
sub
push
clc
xor
adc
(bad)
fstp
mov
fwait
int3
mov
xchg
fwait
sar
pop
mov
xchg
dec
inc
shl
sub
loop
cmc
lds
out
inc
in
scas
mov
addr16
lods
sub
cmp
sub
push
lock
cmp
mov
lock
lds
lods
inc
loope
mov
in
pop
inc
pop
inc
push
aas
sbb
mov
stos
imul
xchg
sub
sbb
fisubr
cld
pop
enter
sbb
out
add
data16
add
shl
xchg
xchg
out
sub
not
and
inc
les
sbb
imul
repnz
xor
jb
pop
adc
mov
repz
fldenv
lahf
cdq
shr
aas
jb
je
xchg
in
es
sbb
jle
push
ins
out
adc
adc
xor
add
sbb
movs
test
vpackuswb
mov
push
push
jmp
iret
mov
retf
push
pop
mov
retf
mov
out
mov
or
ret
(bad)
sbb
adc
jns
dec
in
and
cld
push
cdq
sub
mov
add
sbb
adc
or
lds
sbb
call
jb
popa
std
rcl
shr
mov
inc
or
pop
push
into
in
retf
clc
xor
repz
push
ins
pop
out
gs
or
jnp
or
fiadd
or
ret
ret
adc
cmp
daa
stc
sub
lods
lods
cmp
xor
push
push
sub
fucom
ss
(bad)
ins
inc
fwait
pop
and
int
fisub
repnz
mov
sahf
in
lahf
sahf
inc
repnz
push
(bad)
mov
add
mov
jae
mov
retf
xchg
or
sbb
ret
xor
and
ja
ja
jbe
or
js
stos
daa
fwait
xor
adc
loopne
into
adc
(bad)
mov
aas
adc
mov
ret
rcr
mov
stos
xchg
sar
dec
inc
xchg
or
push
lods
lods
bound
xchg
ins
mov
xor
jge
mov
fidiv
rol
pusha
pop
aaa
sub
mov
into
int
jo
and
fmul
sbb
inc
mov
clc
inc
imul
jne
or
sbb
mov
stos
or
lods
test
push
mov
loopne
sub
inc
sbb
adc
addr16
in
sar
shr
lock
sub
fcmovnb
inc
dec
iret
jmp
(bad)
daa
cwde
imul
cmp
and
sbb
fsubp
cli
imul
mov
into
adc
mov
xor
pusha
aaa
or
je
dec
rcl
add
rcr
test
ins
(bad)
call
push
push
jmp
mov
das
xor
in
rcr
out
jecxz
nop
or
push
inc
mov
imul
push
mov
adc
pusha
daa
loop
stc
ret
inc
jns
jae
add
push
dec
scas
jmp
lods
or
cmps
or
cmc
out
cmc
jge
(bad)
std
inc
sub
push
xchg
fstp
jo
lds
std
je
xor
mov
jp
mov
in
ss
pop
mov
cs
cs
push
jge
mov
test
mov
mov
enter
arpl
jo
imul
rol
xlat
imul
jmp
mov
mov
aad
xchg
cmp
inc
jne
sub
loop
sub
cdq
jge
mov
arpl
mov
jae
lock
fist
mov
mov
stc
pushf
enter
cmp
xor
rcr
lods
push
shr
ret
call
and
fadd
pop
xor
pop
loop
lods
inc
out
call
and
into
mov
ja
jns
jmp
mov
sub
cmp
cdq
xchg
mov
inc
and
sub
dec
test
and
neg
xor
cmps
aaa
mov
arpl
xchg
xor
and
test
mov
dec
cmp
shl
jle
cmps
inc
fsubr
pop
mov
out
cmc
mov
inc
out
leave
xchg
test
pop
scas
hlt
push
push
lods
dec
outs
ins
mov
push
sub
rcl
dec
xor
mov
mov
stos
xchg
xchg
cdq
inc
retf
jb
shl
sub
pop
std
mov
mov
push
jge
jp
(bad)
scas
imul
adc
lahf
ret
push
push
mov
and
mov
push
or
pop
arpl
dec
or
sub
lock
fisttp
aaa
aaa
retf
xchg
in
lock
pusha
mov
mov
dec
mov
ins
and
push
inc
movs
cmp
stc
sar
hlt
cmp
setp
push
and
aas
sub
ror
gs
push
push
sub
pop
(bad)
mov
jmp
or
ret
jmp
cmps
mov
out
fsubr
mov
je
out
outs
out
das
dec
clc
aad
dec
jp
shr
add
xor
push
sbb
inc
inc
cmp
mov
dec
mov
pop
push
leave
adc
fimul
stos
mov
nop
cmp
aam
xchg
retf
sbb
mov
adc
ss
or
or
adc
mov
fild
xchg
add
adc
leave
(bad)
sub
jmp
mov
or
dec
mov
dec
jnp
psubb
call
or
xlat
addr16
int3
jbe
adc
dec
jne
cld
xor
sbb
call
ds
cli
sub
int3
out
jmp
mov
test
rol
retf
pop
jns
arpl
sub
add
ficomp
pushf
dec
ret
or
sub
or
push
mov
dec
mov
mov
push
sahf
ja
mov
mov
mul
push
xchg
cmp
mov
cmps
icebp
sbb
adc
int3
mov
cmp
fwait
push
aam
cmp
pusha
shl
retfw
xchg
or
pop
cmps
in
pushf
(bad)
in
mov
jmp
xchg
xor
jbe
fadd
test
adc
adc
mov
jg
mov
ss
mov
or
mov
jg
les
test
(bad)
push
mov
enter
in
push
sahf
push
nop
push
and
imul
aam
or
add
jo
repnz
stos
inc
mov
inc
pop
(bad)
dec
int
jnp
fsubr
pop
adc
mov
repnz
jp
xchg
mov
mov
aas
iret
jmp
push
inc
xor
stc
sub
sub
cwde
mov
jg
pop
mov
jne
or
lods
mov
pusha
push
imul
push
leave
mov
mov
adc
pop
add
sbb
sub
sbb
sub
inc
jnp
sub
fstp
in
sahf
in
cmp
in
dec
imul
add
dec
iret
test
add
jae
or
jb
ins
movs
pop
mov
or
imul
std
dec
div
add
xchg
push
mov
outs
mov
cdq
cmp
and
push
push
cmps
cmp
xchg
adc
xor
in
popa
outs
test
stc
add
sar
mov
pop
and
jp
in
mov
pop
push
jne
and
push
xchg
test
into
add
pop
inc
jb
xchg
data16
sub
push
rcl
push
nop
push
dec
movs
dec
es
dec
lods
inc
(bad)
call
jnp
outs
fwait
idiv
push
in
cdq
and
scas
clc
xchg
cmc
mov
mov
lods
das
adc
aam
inc
scas
mov
(bad)
xchg
cld
sub
sbb
sbb
(bad)
fstp
cmp
and
mov
dec
jae
ins
dec
mov
mov
je
sbb
cwde
jb
xchg
gs
mov
call
push
jns
rcl
push
imul
lds
push
dec
pop
or
lock
push
push
sbb
pop
dec
inc
lahf
or
ror
(bad)
push
ret
ror
push
and
mov
sbb
dec
repz
frstor
shr
rcr
pop
rcr
xchg
lock
jbe
icebp
fimul
enter
xchg
loope
jo
push
jmp
sar
les
cwde
pop
out
retf
es
aaa
xor
ss
xchg
sahf
inc
xlat
jmp
test
outs
les
lods
imul
cmc
cmps
add
adc
add
aas
pop
(bad)
daa
ja
lods
sub
ror
mov
mov
dec
or
sub
jecxz
aas
and
mov
ret
dec
pushf
daa
neg
xor
adc
jge
sub
or
xchg
mov
dec
mov
xchg
fadd
mov
sub
or
das
inc
cmp
cs
push
sbb
into
and
pop
imul
adc
cmc
fidivr
inc
stos
pop
dec
sub
repz
cmps
cwde
mov
scas
jecxz
pop
add
ins
add
ret
sub
sar
push
sub
jp
push
push
pop
xlat
ds
ror
jno
inc
add
data16
sbb
push
rcl
jge
push
sbb
inc
inc
jle
retf
(bad)
popa
iret
pop
add
call
or
fist
(bad)
inc
cld
push
xor
or
cdq
xchg
sub
pop
dec
dec
ret
imul
in
shl
sbb
jg
push
add
in
in
(bad)
sbb
or
cmp
cmp
sub
stos
shr
fs
out
add
aam
rol
leave
cmp
cwde
xor
dec
cli
fwait
inc
js
mov
loopne
out
test
pop
int3
test
pop
jmp
and
xchg
test
out
out
sub
sbb
push
imul
call
add
out
add
lahf
lds
cmp
pop
push
add
mov
push
inc
jno
int3
cmp
inc
and
fnstenv
xor
(bad)
bound
bound
inc
sub
aas
pandn
ins
cmp
mov
outs
mov
ins
sahf
mov
imul
mov
fimul
cmp
in
jmp
outs
imul
ret
sbb
js
or
add
test
push
loop
sub
push
arpl
stc
pop
mov
pop
jo
add
icebp
mov
sbb
add
jno
(bad)
mov
out
push
bnd
or
mov
xchg
in
inc
jmp
ret
fcomp
(bad)
mov
test
xor
stc
jecxz
mov
out
sbb
add
movs
inc
or
jmp
neg
test
sub
add
pop
xchg
out
mov
es
add
das
xchg
es
jmp
sub
push
js
push
jecxz
xor
pop
inc
pop
fcomp
mul
mov
lea
inc
fst
add
lds
xchg
movs
scas
inc
pop
inc
sti
sbb
pushf
pushf
cwde
adc
outs
push
mov
(bad)
sbb
inc
cmp
mov
or
out
clc
dec
mov
scas
shl
cwde
ins
adc
fidiv
mov
inc
pushf
cmp
lahf
ds
jnp
repnz
pop
fistp
cmp
fcmovbe
mov
push
imul
call
mov
push
cmp
xor
adc
pop
cmps
mov
push
(bad)
jo
pop
xchg
(bad)
sti
rol
out
jmp
ret
pushf
jb
xor
push
aad
stos
and
fcom
leave
xor
loop
mov
outs
xor
mov
int3
push
icebp
jg
sahf
push
clc
shl
sub
(bad)
pop
push
fxch
sbb
inc
and
jbe
adc
dec
inc
clc
in
into
jge
out
shl
movs
fwait
es
gs
icebp
lahf
or
stc
push
xor
sub
aad
loopne
lock
test
pop
js
and
inc
icebp
in
data16
xchg
cmp
adc
xor
pop
push
js
stos
stc
or
or
lds
out
or
dec
add
push
rcl
or
cli
jl
neg
frstor
pop
xchg
adc
inc
mov
std
cmp
jg
push
daa
push
jmp
sbb
aam
in
mov
pop
xor
sub
fcom
mov
inc
fisttp
not
push
icebp
imul
jae
mul
mov
xchg
sub
pusha
ja
and
fucomp
movs
lock
sbb
cmpxchg
pusha
in
sub
outs
test
sbb
hlt
add
in
les
jle
int
sbb
rcl
test
arpl
xchg
iret
or
fnstsw
or
mov
pop
xchg
mov
lahf
cwde
mov
dec
dec
push
cmp
cmp
cmp
pop
pusha
fmul
leave
pop
push
inc
add
out
std
and
mov
fild
inc
in
or
cmp
sbb
push
fnstenv
jb
xchg
push
leave
aad
lods
pop
cwde
and
(bad)
clc
dec
xor
fstp
fwait
jg
sub
pop
dec
jmp
xor
pop
and
inc
mov
jmp
xlat
iret
and
ins
pop
dec
mov
xor
(bad)
out
call
push
pusha
pushf
movs
stos
js
out
add
mov
mov
(bad)
push
retf
add
loop
stos
mov
aad
loop
mov
leave
mov
stos
mov
jns
and
dec
(bad)
js
mov
pusha
jg
push
retf
fst
push
pop
cmp
push
xor
les
call
adc
mov
add
pushf
pop
mov
loope
mov
or
and
sub
dec
and
jmp
pusha
nop
xlat
dec
jns
jae
adc
mov
movs
call
cmovp
sub
inc
dec
cdq
mov
daa
(bad)
cmp
jo
push
push
scas
mul
(bad)
shl
out
jo
mov
enter
in
icebp
repnz
inc
inc
dec
jmpw
enter
test
ja
cmp
aam
loopne
add
mov
mov
xor
cmp
dec
sbb
nop
enter
pop
jecxz
or
js
inc
fucom
push
xchg
xchg
test
call
dec
jg
nop/reserved
fcom
jnp
cli
xchg
repnz
adc
cmp
addr16
sbb
enterw
mov
stos
inc
movs
cmp
mov
sbb
pop
dec
mov
adc
arpl
sar
mov
sbb
inc
push
repnz
adc
(bad)
aaa
mov
cmp
pusha
pop
mov
mov
jns
mov
ret
adc
jmp
(bad)
jp
out
fs
sub
cld
xchg
test
dec
inc
mov
lock
out
icebp
ret
fnstenv
inc
xor
aam
sbb
hlt
shr
(bad)
das
sub
pop
pop
xor
mov
jo
std
pop
lahf
mov
push
jg
and
xchg
movs
jmp
push
idiv
std
loop
sub
adc
mov
in
sar
arpl
ret
mov
cmp
push
mov
sbb
fisttp
jge
push
mov
cmc
add
fwait
jmp
rol
push
inc
and
xor
xor
pop
stc
pop
inc
je
mov
mov
pop
clc
sub
hlt
mov
adc
or
push
mov
cmp
aad
ds
(bad)
dec
lahf
xor
retf
icebp
shl
arpl
pop
cs
inc
dec
out
mov
adc
test
rcl
jae
lds
jl
cmp
iret
cmp
adc
push
hlt
cmp
mov
xchg
not
inc
adc
sub
inc
loope
jo
dec
fisttp
imul
fdivr
lods
hlt
lods
fcmovnbe
lods
and
jp
ret
test
test
retf
hlt
cmps
pop
mov
push
cmps
xor
repz
mov
mov
sub
sub
repnz
scas
dec
inc
and
cmc
test
pushf
or
mov
jg
dec
mov
leave
add
or
gs
test
lahf
out
cmp
das
adc
pop
mov
pop
adc
cmp
in
jno
cs
mov
into
into
mov
dec
fcom
shr
gs
adc
cs
mov
mov
mov
mov
cmps
in
lods
int
mov
mov
call
aam
out
pusha
iret
pop
mov
jg
or
rcr
out
imul
stos
out
adc
mov
mov
repz
aaa
fisubr
nop
inc
(bad)
sbb
stos
xor
pop
hlt
les
fdiv
xchg
hlt
jmp
mov
xchg
mov
xor
rcr
xor
push
xor
sbb
jmp
aad
sub
ins
dec
push
fistp
push
(bad)
inc
in
jmp
cmp
inc
fiadd
sbb
jp
repnz
repnz
mov
push
dec
jp
add
pop
push
sbb
pusha
cmp
pop
(bad)
and
shld
sbb
(bad)
jmp
repz
ins
xchg
inc
mov
and
je
xchg
fild
ja
aam
jl
and
add
retf
or
and
retf
test
sub
ins
xor
jl
sbb
sub
call
inc
out
lods
push
loopne
lods
out
call
ss
movs
in
clc
mov
sub
mov
das
setp
add
js
rcr
push
pop
and
stos
shl
mov
popf
pop
ins
dec
mov
sub
test
add
push
dec
sub
push
push
cmp
sbb
bnd
push
fist
test
sbb
mov
ret
xchg
push
iret
cmps
pop
iret
test
mov
push
push
retf
test
pop
(bad)
xor
lds
nop
mov
test
dec
dec
xchg
mov
pop
mov
shl
pushf
lds
stc
jl
cld
jne
inc
mov
dec
or
test
mov
jnp
gs
push
lea
push
ja
in
fs
dec
(bad)
arpl
(bad)
or
xor
sbb
xrelease
(bad)
(bad)
push
mov
xor
data16
mov
lock
enter
cmp
push
mov
jnp
sbb
repz
mov
cmp
push
lds
ficomp
jg
sub
mov
aam
repz
retf
push
hlt
adc
test
jns
pop
jg
pusha
lahf
jp
daa
jge
test
std
pop
in
adc
jbe
sbb
mov
cmp
test
push
cmp
cmc
jns
or
mov
iret
mov
int3
mov
imul
jp
push
ss
les
add
rcr
mov
jmp
and
pop
pop
sub
sub
dec
push
inc
and
pop
out
push
cs
sub
lods
add
pop
iret
(bad)
lds
adc
mov
ficom
inc
cld
dec
repz
call
adc
pop
push
inc
inc
adc
xchg
movs
sub
mov
aaa
sbb
inc
aad
cmp
sub
or
jge
fwait
adc
mov
adc
xor
inc
(bad)
add
dec
sub
jae
es
daa
inc
xor
movs
mov
(bad)
adc
ins
call
js
sahf
retf
jbe
mov
push
push
inc
mov
inc
fidivr
mov
dec
jb
xchg
and
test
iret
(bad)
sub
repz
sub
test
dec
and
push
jnp
es
test
push
mov
push
pop
(bad)
js
adc
dec
dec
or
ja
(bad)
xlat
cld
sbb
ins
aad
ins
inc
nop
scas
lds
dec
and
cld
add
pop
mov
fstp
pop
sub
icebp
xlat
imul
in
xchg
retf
sbb
dec
pop
not
pop
inc
mov
imul
stos
push
and
dec
cmp
pop
icebp
stos
add
sbb
fistp
sahf
ja
out
mov
cmp
sbb
(bad)
jbe
xchg
add
add
bound
xchg
add
popa
jns
mov
mov
jnp
inc
and
mov
out
es
cmps
mov
push
sub
ss
and
adc
(bad)
jne
xchg
dec
inc
and
mov
adc
jne
mov
popa
pop
or
imul
into
scas
(bad)
mov
push
fsubr
add
sbb
stos
jno
add
fs
push
push
fild
mov
arpl
mov
adc
or
dec
xor
scas
or
cmc
imul
pop
sub
mov
addr16
nop
cwde
sbb
(bad)
fild
inc
xlat
stc
sbb
xchg
sub
pop
(bad)
call
xor
rol
xchg
aaa
or
add
dec
cmc
imul
xor
shl
retf
push
shr
sub
inc
aad
ds
mov
loopne
jbe
inc
(bad)
in
ja
adc
ss
stos
cmp
mov
imul
dec
cld
pop
fidivr
sub
xor
xchg
fs
mov
repnz
cmp
aaa
les
jnp
or
fimul
xchg
icebp
cmc
fld
dec
jp
movs
lods
add
pop
xor
sar
stos
pop
test
imul
xor
lods
nop
mov
(bad)
js
xor
cmp
and
pop
xchg
call
pop
pop
rcl
fld
mov
mov
inc
lods
int3
xor
jmp
call
ja
mov
test
mov
inc
mov
cli
jmp
fistp
shr
jns
push
add
stos
shl
inc
lods
ror
pusha
and
mov
movs
out
and
jecxz
je
and
adc
shl
stc
icebp
js
inc
add
push
jecxz
lock
mov
sbb
fidiv
aad
test
div
xchg
leave
popa
fiadd
call
lea
in
call
dec
jg
repz
or
jnp
adc
or
rcr
mov
or
jecxz
jmp
sbb
jge
push
jecxz
sbb
or
arpl
shl
mov
aas
cli
push
mov
loopne
jb
iret
xchg
gs
xchg
xchg
and
call
aam
mov
xchg
push
dec
pop
push
pop
mov
inc
jno
push
add
dec
repnz
jmp
mov
retf
push
mov
repz
xor
cdq
or
not
retf
hlt
sbb
gs
cmp
outs
repz
xor
lods
sbb
pop
int3
mov
rcr
push
xchg
in
mov
(bad)
popa
jno
clc
inc
sbb
loop
shl
sbb
nop
xor
mov
cwde
data16
dec
(bad)
mov
shl
inc
fst
inc
movs
pop
adc
add
js
and
cmps
sub
add
(bad)
fstp
stos
or
mov
je
ja
movs
mov
cmps
rcr
or
out
mov
out
popa
mov
fidivr
fs
pop
push
ficomp
inc
sub
aaa
cmp
mov
push
test
mov
inc
cmp
and
cmps
push
call
fist
out
daa
mul
iret
leave
fdivr
mov
inc
xchg
xlat
mov
sti
mov
ins
jo
sub
mov
dec
push
out
jno
aad
dec
xor
cs
mov
mov
xlat
mov
popa
popf
out
pusha
sbb
stc
inc
mov
dec
es
mov
dec
dec
clc
test
ror
dec
inc
ins
push
in
shl
dec
and
out
or
out
call
ss
mov
mov
xlat
bound
call
xchg
dec
dec
popf
inc
sub
cmp
add
jmp
push
xchg
ror
jb
stos
sbb
jecxz
iret
loopne
mov
retf
pop
xor
repz
push
push
mov
dec
sub
int3
xor
sahf
loopne
add
and
jae
mov
mov
jmp
jp
inc
das
aad
pop
mov
push
push
pop
sub
add
(bad)
bnd
add
out
or
cs
sbb
jno
pop
pop
push
mov
cmp
cmps
jo
push
jecxz
outs
push
cmp
ss
push
sti
cwde
stc
mov
dec
call
jnp
inc
jl
aam
(bad)
cmp
add
push
sbb
(bad)
jmp
stos
sbb
adc
sub
mov
rcr
cli
jle
push
jecxz
add
jbe
iret
pop
fwait
push
jns
loope
jne
iret
mov
ins
mov
sti
test
es
outs
xor
mov
lock
adc
add
hlt
lahf
int3
ror
aad
ret
test
sub
mov
addr16
cwde
fnstenv
inc
mov
cmp
mov
stc
xchg
mov
in
xchg
cs
mov
or
cmp
test
dec
loopne
sub
mov
push
call
pop
and
gs
push
test
in
mov
clc
xor
(bad)
push
sub
jnp
outs
fcmovnbe
sub
cwde
jmp
push
sbb
inc
mov
mov
dec
mov
ret
fisttp
stos
and
xor
sbb
out
dec
pop
dec
jns
test
dec
leave
mov
aas
add
out
jle
in
ins
jg
xchg
sub
dec
mov
push
jo
(bad)
out
push
out
addr16
inc
test
ja
dec
push
xchg
fstp
dec
push
mov
sub
push
retf
xchg
and
sub
js
mov
enter
mov
dec
enter
lods
cmp
scas
pusha
les
push
imul
rcr
mov
nop
outs
rcr
push
repnz
gs
mov
cmp
pushf
mov
xchg
cdq
mov
cmps
jae
clc
dec
jo
popf
in
ins
cld
pop
pop
mov
or
imul
loop
ret
adc
and
adc
pop
adc
mov
mov
mov
push
loop
int3
pop
push
adc
es
pop
(bad)
cld
sub
pop
mov
fmul
es
mov
js
lea
gs
lock
push
aad
or
cmp
lahf
xchg
call
adc
cmp
push
jae
test
inc
fcom
xor
in
dec
mov
or
and
fidiv
mov
xchg
out
xor
(bad)
or
es
jle
dec
and
add
leave
movs
fild
jmp
retf
add
mov
movs
or
call
loope
xchg
pushf
cli
cmps
daa
sub
shl
sub
dec
scas
nop
add
jne
rcr
inc
adc
sbb
pop
pop
fcom
icebp
dec
dec
mov
push
test
sub
mov
cwde
std
lock
daa
ret
mov
jl
push
daa
jno
add
cdq
push
lea
inc
xchg
push
sub
loope
fisubr
jns
js
cs
push
mov
ret
aad
das
ss
xor
jnp
mov
adc
jnp
lods
jae
je
ficom
js
out
sub
cmps
adc
inc
in
mov
pop
push
into
inc
sbb
jns
retf
add
mov
fdivr
ds
xchg
inc
push
add
and
outs
push
(bad)
stos
popf
xor
stos
out
xchg
mov
hlt
daa
mov
cmp
jb
dec
lahf
pop
mov
mov
push
or
arpl
imul
scas
cmp
stos
add
fwait
jecxz
sbb
test
sbb
push
inc
loope
sub
icebp
xor
(bad)
mov
popf
push
fs
jp
frstor
dec
ror
jge
mov
lea
xchg
pop
mov
je
loope
lds
pop
not
pop
scas
fisub
inc
popf
nop
std
jb
and
and
and
xchg
data16
out
shl
out
xor
fs
mov
pushf
jns
adc
fdivr
add
js
ins
jne
pop
test
test
js
rol
das
neg
sub
ror
or
jg
or
pop
dec
scas
cmp
gs
inc
xchg
dec
fmul
ins
ins
xor
pop
(bad)
pop
inc
inc
or
xchg
mov
jmp
(bad)
push
outs
jne
inc
mov
in
xchg
xchg
mov
imul
das
outs
fisubr
push
add
bound
stos
xor
lahf
lahf
fwait
dec
pop
leave
jecxz
cmc
pop
adc
fdivr
xchg
(bad)
xor
ins
push
xor
pusha
and
and
das
sbb
nop
daa
lock
jmp
inc
xor
fcomp
jns
mov
scas
and
lds
loop
cld
adc
fisubr
int3
out
jp
lea
mov
push
imul
mov
out
fnsave
fwait
jbe
xchg
fmul
xchg
inc
movs
xor
aam
sub
cmp
mov
(bad)
cli
inc
dec
dec
inc
imul
inc
or
out
into
aaa
ins
push
icebp
fstp
lods
retf
and
je
loopne
and
xor
js
jns
pop
mov
mov
lock
push
pop
test
enter
lods
xchg
lods
xor
jmp
push
inc
xchg
fidiv
jnp
nop
test
or
cmp
and
imul
sbb
mov
xlat
mov
lea
dec
add
scas
dec
add
fwait
and
inc
adc
test
addr16
stc
push
adc
imul
fwait
mul
pop
jnp
pop
mov
ins
dec
and
jo
xlat
push
xchg
push
xchg
xchg
push
mov
mov
mov
lahf
pop
out
fstp
out
call
sti
push
push
mov
fnstenv
(bad)
sub
shl
mov
jl
sbb
pop
pop
sahf
dec
inc
mov
cld
cmp
into
inc
test
imul
in
addr16
cmp
inc
ret
ja
ja
mov
clc
inc
xor
mov
xor
cwde
lea
sbb
mov
pushf
jne
adc
and
adc
xor
gs
je
(bad)
movs
aam
clc
mov
push
fiadd
adc
add
push
addr16
dec
mov
js
jmp
movs
cmp
rcr
add
adc
arpl
jne
hlt
mov
hlt
das
mov
xor
out
mov
scas
and
pop
add
cmp
outs
cmp
adc
dec
mov
cmp
push
(bad)
scas
sub
call
or
push
fsub
inc
mov
in
push
cs
and
pop
push
mov
stos
cli
sub
das
aaa
cmp
test
push
imul
mov
imul
lods
out
mov
pop
iret
or
xor
adc
mov
mov
adc
loop
dec
mov
aaa
adc
pop
or
xchg
xchg
mov
dec
sbb
push
test
jae
into
inc
pop
rep
fisub
(bad)
xor
add
or
adc
mov
bound
iret
and
sti
inc
adc
push
(bad)
cmc
add
cmp
adc
ret
jmp
das
into
sti
aam
xor
aas
scas
jl
out
ret
wrmsr
jmp
mov
inc
out
xchg
mov
ins
cmp
jnp
xor
(bad)
shl
loopne
add
jmp
or
xchg
mov
push
shr
lods
hlt
dec
pop
lods
xchg
outs
in
loop
dec
test
mov
inc
mov
into
xchg
adc
nop
je
xor
jae
jecxz
je
sub
adc
pop
cwde
not
hlt
imul
and
cwde
in
and
mov
pushf
push
movs
in
test
jns
mov
ins
cmps
sbb
stc
dec
popf
sub
clc
pop
fnstsw
inc
sbb
dec
test
xchg
add
pop
inc
jecxz
mov
lods
shl
mov
repz
xchg
movs
mov
scas
cmp
fistp
repnz
and
mov
cmps
and
add
das
jmp
mov
add
mov
jecxz
xor
test
outs
jns
push
xchg
add
mov
pop
fimul
ror
jge
test
inc
add
cmp
xor
pop
aam
cwde
xor
(bad)
xor
mov
jl
jmp
mov
(bad)
dec
lods
dec
xor
(bad)
pop
mov
inc
in
(bad)
push
outs
(bad)
std
into
imul
jae
mov
(bad)
inc
xchg
lahf
fwait
lds
pop
pop
(bad)
cmp
mov
jnp
outs
xor
jp
fadd
sub
in
rep
push
mov
test
fsubrp
add
inc
add
sub
stos
lods
jmp
xchg
adc
cld
repz
xchg
ficomp
dec
mov
pop
and
add
cmp
mov
adc
mov
ror
ss
push
and
icebp
fwait
pop
inc
fiadd
in
cvtpi2ps
int
hlt
aam
fcom
lds
cwde
xlat
shl
add
push
mov
dec
xacquire
adc
das
and
and
stos
cmps
(bad)
cmp
sub
ror
inc
dec
jmp
xchg
aam
or
test
retf
es
repnz
in
add
xor
and
sbb
test
sbb
push
sbb
out
add
(bad)
sub
jmp
(bad)
pop
test
iret
in
mov
dec
cli
(bad)
and
mov
adc
fidivr
jbe
add
or
cmp
jle
adc
loopne
jg
ins
inc
xor
and
xchg
rcl
dec
(bad)
jl
stos
jmp
add
jmp
jmp
loopne
xchg
pop
mov
push
cmp
neg
test
jmp
(bad)
mov
xlat
out
nop
and
popf
popf
or
adc
or
or
ss
xor
pop
jecxz
or
push
fidiv
aam
int
sti
pushf
mov
add
fldenv
lock
rol
jmp
inc
mov
sbb
sub
jne
jle
imul
mov
ins
adc
js
adc
out
add
pop
pop
adc
jne
ror
dec
fwait
push
pop
(bad)
mov
mov
xor
rcr
jns
push
mov
sub
add
out
fs
fisubr
cdq
pop
fld
ins
mov
jne
add
stc
pop
jge
mov
mov
loopne
(bad)
fisub
dec
call
pop
or
outs
mov
xor
shl
outs
push
mov
(bad)
leave
xchg
jge
in
hlt
dec
arpl
inc
sbb
mov
pop
pop
xchg
out
(bad)
push
in
popf
or
or
int
mov
movs
push
jecxz
push
lock
(bad)
(bad)
loop
or
jne
(bad)
mov
ret
pop
sbb
cld
outs
imul
add
les
lea
mov
jg
rcr
call
test
mov
pop
call
arpl
ret
ds
push
addr16
xchg
daa
lock
rep
lods
fldcw
test
imul
jmp
fbld
clc
data16
push
mov
adc
sahf
test
std
jp
test
ins
xor
mov
inc
jo
jns
xchg
push
arpl
jmp
and
sar
scas
sbb
ret
jp
fldcw
lods
lods
push
mov
jbe
sti
jmp
and
xchg
(bad)
shl
aad
jno
sahf
xor
aad
repnz
call
adc
(bad)
out
mov
and
fbld
cmc
sbb
cmp
mov
pushf
adc
push
or
aad
adc
pop
int
pop
ss
inc
sbb
sub
cmp
cmp
cmp
add
xchg
sub
sub
or
cs
pop
xor
fild
test
out
sub
movs
push
jo
je
test
les
mov
cmp
out
imul
mov
imul
jp
and
inc
lods
sti
movs
inc
(bad)
ror
(bad)
mov
js
lods
sbb
jg
jae
aad
loope
mov
hlt
sub
push
stos
popf
pop
movs
repnz
cs
ins
xchg
add
mov
rcr
cmp
enter
imul
dec
xchg
mov
retf
or
add
inc
scas
je
out
jns
ficomp
pop
push
mov
add
add
ret
(bad)
mov
retf
mov
push
loop
jg
stos
push
repnz
xchg
add
mov
mov
stos
fwait
fs
xchg
daa
dec
push
dec
stos
and
cmp
out
nop
mov
fimul
push
inc
push
fwait
mov
ja
(bad)
and
cmp
pop
cmp
and
das
mov
cmps
add
lahf
loope
xchg
cld
jmp
ficomp
xor
cmp
jne
lea
nop
(bad)
or
in
test
xor
call
and
mov
xchg
repnz
xchg
pop
mov
cmp
cmp
imul
jno
jmp
aas
pop
je
ret
pop
add
inc
or
int3
ss
fistp
gs
cmp
cmc
nop
(bad)
mov
or
sub
fisubr
imul
sbb
mov
mov
jp
imul
push
jecxz
sar
(bad)
aam
iret
jmp
push
jge
hlt
mov
fdivrp
inc
or
mov
inc
xchg
mov
fisttp
nop
ins
leave
push
xor
dec
dec
or
(bad)
cs
icebp
push
adc
inc
ja
out
icebp
(bad)
stos
cmp
(bad)
sti
and
repz
out
int
scas
(bad)
dec
pop
lahf
mov
ret
mov
imul
or
aas
retf
arpl
fdivp
dec
or
mov
fs
sub
sbb
das
aam
movs
sub
movs
xchg
add
scas
(bad)
xchg
inc
jecxz
jge
dec
or
xchg
push
jmp
loopne
shl
dec
push
sub
push
test
addr16
je
dec
or
aam
movs
sbb
pop
inc
or
mov
push
repnz
test
enter
inc
inc
and
lea
es
sub
sub
xchg
cmp
in
add
lds
mov
pop
jb
mov
dec
mov
ds
xor
loope
mov
in
adc
inc
cmps
cli
scas
addr16
and
fmul
cmps
lahf
sti
aas
and
cmps
cdq
pushf
pushf
dec
xchg
mov
shl
xchg
movs
mov
out
ins
mov
arpl
sub
pop
ror
sahf
mov
lods
adc
mov
cmp
jle
popa
test
pushf
int
push
icebp
mul
and
inc
call
outs
xchg
enter
pop
push
pop
out
addr16
adc
pushf
inc
std
xor
outs
fnstcw
stc
cmps
cmp
repnz
adc
pop
cmp
add
xor
mov
inc
test
add
mov
add
retf
bswap
jns
fsub
sub
aad
jae
pusha
out
lock
daa
call
xor
jae
cmc
xchg
pop
adc
inc
cdq
add
popa
out
shl
movs
cwde
inc
arpl
inc
cmp
mov
push
add
xchg
aam
retf
lods
std
ja
push
mov
push
jp
push
mov
shr
adc
leave
push
jbe
pop
jb
pop
inc
inc
cmps
inc
mov
out
hlt
lahf
push
imul
repnz
iret
push
and
xor
scas
and
push
cwde
cmps
push
jnp
or
and
add
xchg
push
sbb
sbb
pushf
call
dec
imul
test
dec
cli
lods
ins
nop
daa
iret
adc
gs
mov
inc
jae
mov
clc
or
out
int
(bad)
test
xchg
xor
movs
xor
and
pushf
nop
pop
sbb
add
(bad)
pop
and
mov
shr
push
and
lock
das
enter
(bad)
mov
pop
mov
dec
lahf
jl
ins
ds
dec
and
sbb
retf
mov
adc
fs
imul
aaa
sub
outs
xchg
aaa
nop
mov
push
mov
sbb
stc
xchg
mov
ret
aam
(bad)
jp
enter
jnp
xchg
sti
and
lock
cmp
add
js
pop
mov
pop
jb
mov
addr16
icebp
call
fist
idiv
pusha
iret
inc
fstp
inc
gs
pop
ds
jl
jl
sub
fwait
push
add
(bad)
shr
repnz
and
dec
mov
fiadd
jmp
out
ds
xchg
popf
jecxz
outs
stos
outs
fisttp
xchg
mov
cmps
fld
mov
loop
int3
push
pop
leave
xor
ret
into
sbb
adc
ja
imul
jmp
(bad)
mov
jmp
ret
dec
sub
dec
push
repz
out
das
sti
jns
lock
mov
pop
sbb
inc
enter
xor
sub
add
pop
jmp
adc
adc
ins
adc
jmp
and
push
outs
loopne
xchg
ds
dec
jmp
sub
mov
sub
cmps
ror
inc
push
sub
loop
ins
daa
arpl
cmc
mov
mov
cmps
call
adc
jnp
or
jo
push
addr16
stc
nop
jge
or
repnz
pop
jno
xor
mov
sbb
jl
pusha
aad
sbb
dec
push
jle
mov
dec
mov
ins
jge
jnp
sti
and
(bad)
adc
cmp
or
jle
push
dec
add
and
lods
jge
out
adc
sbb
movs
test
(bad)
repz
cmp
shr
cmp
and
jmp
mov
sbb
icebp
inc
data16
dec
xor
call
mov
mov
mov
xlat
fwait
xlat
mov
aaa
repnz
or
mov
sbb
push
call
pop
mov
pusha
inc
adc
call
adc
jo
mov
add
adc
mov
inc
jl
outs
das
pushfw
test
ror
push
fdivr
xchg
add
out
cld
fwait
or
inc
pop
stos
unpckhps
mov
cli
jo
(bad)
adc
int3
adc
call
icebp
dec
test
push
mov
xchg
mov
push
rcl
and
fimul
(bad)
aam
mov
es
ss
or
inc
in
mov
jecxz
adc
inc
cmp
jecxz
stos
cmp
cli
and
rcr
pop
enter
add
arpl
mov
and
mov
fsub
xlat
dec
test
std
wrmsr
jl
add
pop
popf
jb
out
push
push
sub
(bad)
push
xor
scas
mov
arpl
cmp
push
dec
dec
inc
jge
mov
repz
int3
cld
add
cmp
nop
xchg
movs
inc
add
loopne
(bad)
jnp
adc
push
out
retf
ss
jl
add
xchg
jg
repz
(bad)
push
pushf
dec
lds
aaa
xchg
out
cld
mov
daa
clc
pusha
add
push
outs
icebp
push
pop
inc
dec
je
jl
cs
jmp
xor
pop
outs
lahf
ret
cmp
push
mov
fistp
icebp
in
dec
push
(bad)
pop
mov
mov
aad
retf
cmp
mov
xor
xor
sbb
sbb
nop
lock
lock
fist
inc
pop
rcl
cdq
pop
push
push
inc
out
cmc
cmp
push
mov
dec
inc
xor
jl
stos
inc
mov
cmp
(bad)
arpl
cmp
pop
mov
clc
dec
sar
ja
nop
and
cmp
test
lods
out
aas
mov
mov
test
xchg
mov
xchg
fisub
aas
out
daa
jo
mov
sub
mov
into
movs
aad
fistp
sub
mov
sbb
daa
mov
je
and
xor
push
and
cmp
xor
(bad)
jae
xor
mov
aas
mov
iret
mov
pop
push
sbb
(bad)
push
cmp
mov
arpl
aam
mov
mov
mov
outs
and
test
pop
push
outs
adc
cdq
inc
sahf
dec
scas
in
dec
ret
jne
pop
mov
xchg
mov
dec
enter
xor
push
or
push
adc
hlt
sub
and
push
addr16
ins
dec
data16
(bad)
pop
pop
push
aaa
and
(bad)
(bad)
sbb
mov
outs
or
cs
popf
adc
jnp
(bad)
fisub
xor
xor
gs
mov
jg
jnp
aam
cmp
inc
test
mov
in
adc
push
sbb
ins
jnp
fild
std
je
test
xchg
sub
mov
mov
mov
jnp
cli
test
scas
fsubr
test
inc
or
xchg
push
sbb
rcr
fmulp
jle
sub
pop
jp
out
push
scas
jp
xchg
lea
je
xchg
pop
sub
add
mov
adc
sti
push
popa
loop
mov
dec
mov
xchg
jl
adc
and
in
inc
pusha
add
outs
mov
fld
adc
adc
jecxz
inc
jg
repz
neg
sub
pop
xchg
mov
inc
jp
js
cmps
or
mov
mov
ins
int
lea
pop
cmps
int
cmps
cli
jae
cmps
push
cmp
cs
dec
nop
pusha
pop
push
adc
xchg
mov
and
pop
push
sub
mov
and
sub
add
push
adc
inc
ins
ret
pop
(bad)
pushf
push
cmp
mov
push
pop
xchg
add
mov
call
jmp
ins
cmp
pop
sbb
jecxz
in
stos
add
shr
cwde
mov
outs
mov
sar
jb
inc
fwait
or
jg
jl
push
sahf
(bad)
mov
fist
into
adc
shl
iret
call
push
mov
mov
xchg
ja
xchg
sub
and
test
push
sbb
cmp
mov
stos
cmps
push
fneni(8087
pop
lahf
jae
in
loope
and
clc
jg
clc
pushf
mov
mov
xchg
pop
sbb
jnp
ins
adc
nop
pop
sti
test
out
out
or
mov
loop
cwde
(bad)
pop
mov
pusha
add
adc
call
or
lods
sub
and
inc
ss
stos
fcmovne
or
fidiv
push
pop
fwait
int3
jb
sub
cld
mov
ins
inc
cmp
mov
pop
cmp
in
ret
inc
cwde
out
sub
inc
movs
cmp
jp
mul
stos
mov
out
leave
jne
and
int
ins
leave
gs
shl
cli
(bad)
out
pushf
outs
aad
jl
(bad)
xor
mov
int3
inc
cwde
cmp
fmul
mov
or
mov
rol
or
pushf
push
in
(bad)
fisubr
scas
xor
pop
out
xor
mov
je
data16
mov
sub
loop
jl
data16
mov
xchg
std
cmps
mov
js
pushf
aam
jno
aas
push
add
sbb
pusha
jo
jle
xchg
movs
test
sbb
repz
mov
aad
jecxz
pop
inc
fwait
push
adc
retf
jbe
cld
pop
in
adc
data16
loopne
call
(bad)
or
and
mov
push
dec
sbb
in
(bad)
call
push
mov
or
or
dec
add
and
sub
lea
fs
sub
push
mov
test
jnp
mov
inc
mov
out
jmp
sar
and
cmps
xor
pop
adc
push
push
inc
data16
mov
mov
or
jbe
add
jb
pop
mov
cmp
inc
jno
sti
jne
std
add
cmp
adc
loopne
test
xchg
mov
int3
jle
sub
dec
(bad)
and
(bad)
clc
out
cmps
push
pop
outs
mov
lods
retf
mov
fsubr
mov
jge
inc
cmp
jmp
push
dec
pop
or
add
push
(bad)
call
into
cdq
mov
jo
not
pop
int
into
popa
arpl
xor
into
jg
dec
sahf
xchg
dec
out
mov
fidiv
jmp
jl
outs
push
pop
dec
out
outs
add
jae
ins
fild
stc
jl
sbb
(bad)
ds
sbb
xor
hlt
in
push
mov
icebp
ins
pop
or
movs
push
xchg
mov
pusha
inc
(bad)
sub
(bad)
mov
cmc
sub
jle
cmp
mov
pop
icebp
push
pop
(bad)
cdq
jne
jno
jno
inc
jl
dec
and
ret
cmp
bound
xor
jmp
mov
stc
dec
mul
and
pop
out
or
addr16
dec
dec
push
add
outs
cwde
out
jp
call
daa
mov
fbstp
les
int
adc
xor
jg
push
out
sub
cld
rcl
dec
sbb
clc
dec
and
xchg
dec
pop
movs
lods
mov
in
nop
inc
ss
mov
loope
cli
mov
jl
test
cs
and
pop
pop
in
pop
dec
addr16
push
scas
inc
mov
push
inc
mov
ins
or
rol
jmp
(bad)
lds
jmp
mov
(bad)
jle
push
je
popf
sub
mov
(bad)
xchg
inc
pop
sub
ja
mov
adc
mov
mov
jns
fmul
rcr
(bad)
(bad)
hlt
inc
int3
call
sbb
push
mov
cdq
dec
rol
scas
shl
sbb
pop
icebp
stos
xchg
push
aas
pop
out
jmp
loope
out
cmp
jns
adc
scas
pop
push
jns
xchg
(bad)
pop
aad
sbb
jb
sti
ins
pusha
cli
inc
int3
stc
or
cmps
xchg
(bad)
push
and
cmp
ret
mov
ds
sub
mov
jp
mov
mov
mov
sbb
test
sub
mov
push
scas
pop
das
adc
and
gs
inc
call
adc
dec
sub
add
fcmovbe
cmp
push
jmp
jmp
sbb
ss
aad
sahf
xchg
push
cdq
repz
stos
mov
sbb
sbb
or
push
(bad)
aad
je
add
xchg
mul
loopne
shl
and
dec
ds
movs
mov
ror
mov
jbe
lock
(bad)
bound
xchg
add
add
imul
mov
adc
das
imul
dec
inc
mov
jecxz
xchg
xor
movs
dec
mov
inc
mov
(bad)
scas
xor
call
test
popf
out
xchg
push
test
cmps
and
arpl
xchg
pop
movs
xchg
xchg
sbb
mov
sti
pop
mov
pop
push
fwait
aaa
add
xchg
nop
cmp
es
outs
mov
cld
and
and
inc
mov
cld
xchg
lock
and
jb
rcl
jg
int3
mov
leave
or
dec
mov
adc
cdq
pop
mov
push
pusha
push
inc
fst
cmp
adc
adc
fdiv
jmp
pop
inc
jnp
pop
mov
cmp
fdiv
stc
out
dec
call
jecxz
outs
bnd
dec
sbb
mov
test
or
jg
aas
xchg
sub
ins
test
xchg
shr
(bad)
out
into
mov
dec
pop
retf
jmp
gs
popa
xor
xor
hlt
pop
xor
pop
mov
add
cmp
adc
popa
enter
in
stc
mov
sahf
dec
rcr
mov
fdiv
stos
shl
arpl
mov
imul
mov
mov
sbb
xchg
pop
sub
popa
jg
xchg
xchg
imul
in
or
pushf
(bad)
mov
pop
push
retf
dec
test
cmps
jle
pushf
mov
out
push
push
push
push
fmulp
xchg
jge
pop
pop
pusha
imul
pop
dec
push
push
sub
out
jmp
and
and
cmc
jbe
cld
outs
cli
push
and
outs
mov
test
mov
jno
inc
fwait
mov
imul
shl
mov
dec
sub
pop
repz
inc
fnstsw
xchg
dec
sbb
or
sbb
loope
and
dec
pop
fild
psubsw
ret
mov
inc
lock
mov
nop
push
mov
scas
shl
jnp
outs
data16
iret
inc
sub
dec
and
cmc
mov
mov
push
stos
nop
inc
and
mov
repz
xchg
mov
xor
scas
test
hlt
inc
pop
lods
pushf
out
hlt
mov
pop
imul
sbb
stc
mov
fisub
bound
adc
retf
rcl
pop
mov
push
sub
add
pop
adc
mov
addr16
pop
cmc
(bad)
mov
add
push
loopne
pop
push
dec
fmul
fisubr
jns
adc
or
enter
jno
sahf
and
jnp
add
mov
mov
pop
and
or
adc
into
mov
or
fcmovnbe
loop
mov
mov
ja
retf
dec
jle
pushf
push
jo
push
imul
jae
adc
inc
arpl
in
jg
aas
add
inc
adc
sbb
shl
test
sbb
movs
jmp
sbb
sub
sbb
jge
mov
lar
push
(bad)
push
stc
out
sti
jmp
sbb
push
and
dec
adc
push
outs
out
xchg
cmp
push
add
mov
ins
dec
jmp
or
bound
retf
jl
adc
pushf
pop
rcl
int3
aas
xchg
mov
in
sbb
je
fist
repz
xor
cmps
les
pop
jnp
add
sub
lock
cmc
mov
mov
cld
jne
sti
aam
pop
loopne
jno
popf
call
ret
jb
das
out
(bad)
scas
mov
jmp
inc
cmp
push
clc
xor
jbe
mov
cld
pop
push
scas
sub
mov
xor
(bad)
dec
rcr
fdivr
jae
test
and
in
sub
jo
xor
hlt
stos
or
arpl
add
and
inc
push
out
add
jl
add
sti
mov
movs
mov
mov
lods
(bad)
jmp
pop
shl
repnz
nop
adc
icebp
call
std
cmps
loope
pop
dec
pop
mov
adc
add
jno
outs
test
in
out
out
xchg
sub
and
pop
cmp
cmps
loopne
add
mov
movntq
in
movd
fcomip
div
cmp
fist
xor
xor
shr
xchg
dec
and
enter
push
cmp
rcr
enter
stos
mov
inc
inc
fisttp
int
hlt
mov
pop
cmp
pushf
loopne
dec
mov
(bad)
cld
add
idiv
xchg
dec
inc
and
xor
sub
outs
or
mov
test
xor
outs
dec
dec
xchg
add
loope
push
hlt
and
fdivr
sti
inc
inc
cmp
(bad)
out
ret
jns
pushf
inc
in
xor
popf
jb
retf
cmps
ffreep
lds
push
daa
xor
fsubr
popa
test
adc
xlat
scas
leave
stos
push
cmp
mov
jnp
fisub
(bad)
pop
jecxz
xchg
inc
jne
and
sbb
add
out
shl
mov
pop
lds
push
pop
jns
sub
cmp
retf
lods
mov
mov
sub
cld
xchg
mov
push
cwde
pop
dec
mov
adc
pop
not
maskmovq
inc
aaa
(bad)
in
push
dec
(bad)
and
mov
add
daa
ja
fwait
jno
lea
mov
int3
pop
cwde
sub
imul
daa
or
stc
xchg
daa
dec
mov
jmp
(bad)
xor
ret
es
push
or
test
in
mov
jle
mov
push
addr16
xor
or
and
dec
sbb
out
sub
jb
loop
outs
(bad)
xchg
pop
movs
pop
push
and
jmp
popa
jns
push
je
cli
mov
enter
xchg
jb
jbe
popf
jae
mov
push
popf
add
jp
loope
lahf
push
mov
rcr
xchg
hlt
lods
add
cli
out
test
ror
popa
mov
mov
sub
mov
fnstcw
mov
loop
pop
test
inc
sub
or
sbb
adc
mov
jp
(bad)
popa
jmp
push
loope
xor
sbb
or
xchg
inc
xor
sub
cmovo
inc
in
aas
jo
mov
rcr
imul
add
shr
add
cmp
mov
movs
shl
mov
inc
cmps
fild
push
inc
mov
pop
mov
and
or
repz
mov
push
pop
mov
push
xlat
aaa
jl
call
cs
and
sbb
dec
lds
out
inc
lods
adc
mov
sub
xchg
dec
stos
(bad)
jmp
or
mov
(bad)
inc
push
test
dec
jmp
movs
xchg
jo
mov
fldenv
cli
cmp
jle
xchg
es
mov
lods
xor
mov
jb
and
mov
cmp
dec
inc
inc
movs
fsub
pusha
lea
in
inc
cmp
mov
lahf
xchg
(bad)
mul
mov
sahf
adc
jle
int
aad
mov
loopne
mov
fidivr
data16
sbb
inc
daa
in
dec
pop
ret
cwde
cmps
popa
outs
jmp
neg
inc
cmp
xlat
cmp
pop
fsub
ins
repnz
fist
dec
mov
xchg
adc
sub
mov
loope
out
or
mov
xchg
lahf
adc
movs
push
xor
ret
enter
jmp
es
bound
pusha
ltr
mov
je
call
fcmovu
fsub
add
jmp
aas
fwait
adc
and
push
sbb
sbb
pop
push
adc
xchg
xlat
mov
dec
xchg
mov
icebp
aas
lock
fistp
or
push
jns
mov
xlat
cli
enter
xchg
push
xchg
leave
push
std
nop
pushf
(bad)
cs
mov
and
adc
int
inc
inc
fcmovnbe
or
mov
mov
pop
inc
js
into
mov
call
sti
(bad)
fild
ins
(bad)
pop
and
inc
dec
test
cs
or
xchg
or
dec
in
push
out
je
mov
inc
mov
outs
dec
repnz
int3
jmp
jae
or
test
mov
mov
mov
mov
jno
or
(bad)
cmp
loop
bound
or
cwde
push
sbb
test
add
adc
fwait
push
cmp
daa
idiv
pop
inc
cmc
pop
mov
(bad)
fdiv
xchg
data16
jge
dec
into
jns
or
aaa
or
push
mov
pop
or
out
iret
mov
(bad)
mov
fcmovne
loopne
ja
pop
mov
or
popa
aad
clc
sbb
pop
sub
pop
xor
sbb
cli
push
rcl
mov
aad
mov
add
cwde
lds
mov
aad
lods
stos
shl
imul
sbb
add
mov
push
mov
xor
neg
lock
mov
mov
mov
out
mov
dec
push
and
pop
repz
dec
inc
push
lea
mov
in
aam
rcl
scas
jns
or
ds
add
sbb
jb
push
fcmovb
mov
mov
fsubr
jmp
mov
stos
push
idiv
dec
xor
dec
gs
mov
adc
xor
pop
inc
cmps
(bad)
ficomp
leave
dec
mov
fsubr
push
sahf
out
mov
stos
shl
out
cs
push
nop
and
mov
and
jmp
stos
inc
clc
nop
icebp
xchg
(bad)
jl
loopne
stc
ins
mov
popa
or
pop
mov
mov
out
icebp
test
fcomp
(bad)
ror
fmul
inc
or
popf
test
les
jecxz
jmp
ins
mov
sahf
add
addr16
out
test
lods
add
jb
ins
add
sub
mov
xor
(bad)
mul
push
jns
mov
mov
int
(bad)
icebp
(bad)
jo
mov
xor
push
or
inc
rcl
and
jg
addr16
int3
sbb
inc
cmps
or
and
aas
mov
pop
xchg
into
fcomp
popf
sbb
cli
outs
stos
jl
call
les
add
clc
inc
mov
adc
xlat
lods
das
dec
pop
mov
(bad)
push
stos
call
test
fidiv
(bad)
pusha
sub
gs
lods
loop
movs
pop
adc
xlat
lds
jle
sbb
jno
imul
shl
loopne
add
sbb
sub
cdq
sahf
sub
add
popa
test
cmp
mov
retf
or
pushf
jle
jle
pop
fwait
mov
sbb
outs
in
hlt
daa
xchg
dec
enter
lods
mov
inc
cmc
sub
sbb
ja
test
test
ds
jae
cmp
loopne
xor
in
imul
icebp
icebp
int
jae
jbe
adc
ds
add
sbb
iret
pop
movs
shl
call
lock
rcr
mov
xchg
cmps
and
bound
sub
(bad)
(bad)
cld
cmc
and
retf
bswap
imul
jae
punpcklwd
das
mov
cmp
popa
cmc
das
cmp
pop
or
pushf
cmps
out
dec
dec
mul
push
outs
mov
iret
sbb
call
and
nop
popf
cmc
dec
mov
push
(bad)
bound
push
push
xchg
and
mov
test
popf
loope
mov
or
outs
in
pop
test
xor
imul
sub
and
ror
sub
aaa
push
inc
lods
lods
mov
clc
ror
adc
sbb
lea
lea
mov
push
loope
inc
fdiv
sub
cmp
xchg
sti
cwde
mov
sub
sti
add
ror
lock
daa
cld
or
adc
push
sbb
and
inc
lahf
mov
jo
add
xor
add
adc
scas
lock
dec
or
stc
mov
sbb
addr16
ficom
test
ds
jle
sub
jl
and
mov
mov
lea
pusha
ret
arpl
aad
mov
mov
cli
pop
loope
cmc
add
lahf
retf
dec
movs
je
fcmove
cdq
in
xor
mov
and
leave
and
jns
pop
cwde
push
aas
sub
and
adc
outs
jg
xor
fucom
add
dec
js
fnsave
data16
mov
les
fadd
movs
xor
xchg
retf
xchg
dec
and
adc
jg
mov
jmp
pop
aas
or
and
nop
bound
dec
sub
(bad)
call
loop
dec
and
mov
ss
or
inc
into
lods
mov
xchg
rcl
cmp
add
pop
dec
sub
lods
xor
xchg
int3
or
sbb
mov
mov
or
pop
gs
xchg
cmp
cmps
imul
retf
push
mov
mov
xchg
adc
hlt
add
or
nop
aad
int3
hlt
xor
repnz
sbb
pop
or
or
leave
sbb
or
cmp
dec
lods
mov
cs
xchg
pop
mov
xor
and
jnp
xchg
add
daa
js
icebp
and
and
fs
imul
scas
dec
mov
add
dec
loope
sub
pop
fbstp
xlat
push
xor
gs
mov
jne
cmps
daa
movs
sti
pop
dec
and
(bad)
sub
sub
xchg
jge
pushf
push
sub
jno
mov
fist
aaa
cmps
mov
mov
sbb
in
push
cmc
div
add
movs
imul
bound
xor
cmp
popf
push
sti
lods
lods
sub
pop
lahf
xor
rcr
stc
je
lods
sub
or
jmp
push
mul
cmps
adc
iret
fsubp
out
stos
and
arpl
fld1
repnz
iret
cmp
push
leave
(bad)
fidivr
dec
ds
pop
rol
adc
jecxz
out
pop
jl
mov
std
jbe
(bad)
ins
repz
imul
test
pop
(bad)
mov
xchg
or
movs
or
ficomp
jmp
push
push
icebp
pop
int3
cmp
jae
dec
daa
pop
sub
push
or
xor
push
cmps
cmc
(bad)
mov
and
dec
adc
cmp
xlat
sub
adc
scas
or
sbb
mov
pop
mov
imul
jbe
aaa
xlat
scas
fisttp
les
sub
push
mov
cmps
addr16
pop
adc
fmul
jl
mov
and
cmp
push
add
inc
lds
xchg
and
call
cwde
or
in
stc
push
mov
pop
cmp
or
mov
jmp
cmps
inc
popa
(bad)
scas
or
cmp
or
rol
jl
arpl
popf
mov
push
and
pop
inc
xchg
popf
retf
xchg
in
xchg
cmp
dec
leave
fld
xor
rol
ins
pop
jns
nop
jne
stc
xchg
xchg
in
fnstenv
inc
rol
std
jge
or
sahf
lods
aad
or
mov
or
addr16
ffree
daa
stos
dec
add
and
mov
fsub
(bad)
std
adc
dec
mov
adc
aad
scas
mov
in
jmp
retf
sahf
pushf
pop
cdq
xchg
add
popa
pop
fld
pop
movs
test
rcl
push
pop
pop
mov
je
pop
(bad)
ins
sbb
iret
or
mov
add
sbb
xor
fistp
fistp
pop
xchg
shr
sub
iret
mov
mov
jne
in
(bad)
adc
push
js
dec
cmp
xchg
cwde
jle
shl
cmp
icebp
iret
fs
xchg
jle
jns
add
leave
cwde
xor
ret
mov
sub
ds
or
pusha
fdiv
mov
outs
js
iret
movs
cmp
dec
cld
push
mov
lds
clc
jle
adc
dec
xchg
jmp
xchg
xor
xchg
dec
jns
movs
push
or
clc
add
es
aad
pop
fidivr
das
push
aad
loop
xor
mov
sub
xchg
xchg
xor
xor
retf
xchg
inc
add
mov
repz
sbb
enter
dec
in
jmp
cmp
xor
js
mov
dec
mov
into
push
dec
xchg
repz
sub
sbb
in
jns
push
sbb
outs
xor
fs
adc
std
xchg
int3
inc
add
out
dec
mov
les
sbb
pop
fisttp
push
test
leave
and
xchg
inc
int3
or
lahf
rcr
inc
scas
ja
aam
mov
in
js
fstp
mov
icebp
fstp
push
gs
adc
call
mov
sbb
(bad)
sbb
call
xchg
int
into
int3
push
pop
in
xor
imul
movs
movs
mov
lea
sub
aaa
pop
hlt
lds
out
test
push
sti
loop
dec
mov
mov
xor
push
cs
adc
mov
adc
mov
sub
in
leave
xor
xchg
loop
push
clc
jo
and
lods
cmp
stc
sar
mov
sbb
sbb
or
sbb
cdq
sbb
jbe
data16
mov
scas
cli
jl
retf
sbb
cdq
mov
sar
push
lock
lods
sar
(bad)
iret
mov
aaa
adc
fwait
lods
retf
ret
or
jo
push
imul
push
dec
mov
hlt
pop
shl
adc
cmps
mov
cmc
cmp
rol
jb
sub
cmps
retf
pop
and
push
xor
xor
(bad)
test
sub
stos
outs
inc
pusha
sub
data16
stos
mov
cmp
popf
mov
push
jbe
xor
push
nop
xor
push
out
jnp
mov
movs
mov
out
shl
repz
icebp
jae
dec
clc
adc
ins
ins
cs
or
mov
push
xchg
and
shl
push
lds
sbb
imul
mov
and
fiadd
sbb
xchg
push
jp
pop
in
loope
sub
pushf
sti
mov
(bad)
ds
stos
lahf
(bad)
adc
cmp
mov
jge
dec
lahf
rol
(bad)
in
cs
inc
fprem
xor
scas
or
jl
cmp
stc
pop
jl
stc
pushf
push
inc
sar
push
movs
dec
scas
mov
call
aaa
adc
std
push
retf
fbstp
and
cmps
add
pop
adc
pop
sbb
jo
fndisi(8087
data16
fisttp
push
and
gs
adc
sub
add
pop
cdq
adc
jl
leave
or
out
retf
or
sbb
stc
mov
mov
jl
cwde
mov
and
jge
push
xor
or
add
inc
enter
jp
mov
inc
mov
sub
aam
(bad)
mul
add
pop
xchg
lahf
ret
out
aas
push
mov
sbb
push
dec
daa
imul
mov
movs
nop
jne
mov
(bad)
cmp
in
loope
and
fstp
mov
adc
test
sar
stc
fsub
pusha
add
out
dec
jbe
push
retf
xor
ja
lds
mov
add
cdq
cwde
mov
pop
xchg
xor
imul
and
in
sub
rol
push
loopne
cdq
jbe
in
mov
xor
(bad)
aas
ror
daa
and
cmp
jo
pop
or
fadd
call
(bad)
push
cmp
imul
movs
das
push
pop
fisttp
lock
push
retf
add
retf
out
jecxz
les
xchg
rol
(bad)
aaa
push
shr
cmp
adc
push
aaa
dec
lea
mov
dec
dec
call
test
xor
dec
mov
lods
xchg
fstp
mov
mov
in
neg
xor
jge
test
inc
scas
ret
fld
inc
push
aad
fmulp
xchg
and
or
test
push
xorps
mov
push
xor
jo
iret
icebp
jb
lds
xor
fild
sub
inc
mov
dec
dec
xchg
add
jb
sub
mov
mov
test
js
sub
into
inc
inc
(bad)
std
inc
pop
mov
adc
and
iret
aad
and
pop
popf
xchg
cmp
fmul
shl
popa
jmp
in
add
mov
aad
xor
push
mov
movs
mov
out
cmp
test
jne
popf
xlat
les
js
add
imul
cmp
push
add
pop
jae
movs
rcl
nop
dec
sar
jl
sbb
dec
and
mov
sbb
aaa
jl
xor
push
sbb
mov
or
and
fidivr
repz
test
hlt
cmp
sar
pop
mov
dec
es
mov
jmp
sbb
push
inc
sbb
cld
inc
pop
mov
jge
leave
cwde
cmp
call
lea
call
adc
pop
pop
(bad)
enter
(bad)
jnp
jp
cmp
mov
mov
xor
clc
mov
aam
sub
fwait
test
out
dec
std
mov
pushf
mov
test
mov
dec
pop
mov
outs
aad
mov
out
add
sub
outs
shl
adc
mov
movs
call
aaa
xchg
and
xor
pop
sub
add
fwait
dec
popf
mov
push
(bad)
cwde
cmc
adc
cmp
sbb
fidivr
jl
push
jecxz
int
jns
mov
add
rol
stos
cmp
jo
shl
das
mov
or
mov
xchg
mov
mov
repnz
mov
dec
jmp
pop
mov
jmp
movs
lds
fstp
loopne
pop
add
xor
push
sub
add
(bad)
in
lods
mov
sar
xchg
fnstcw
dec
xchg
stos
cmp
or
mov
xchg
adc
cmp
mul
inc
jmp
(bad)
push
test
and
push
dec
fimul
fidivr
mov
cs
and
and
test
sbb
pop
imul
and
lods
clc
sub
mov
pop
repz
nop
ins
jae
js
push
cld
enter
dec
and
jmp
addr16
je
enter
inc
enter
mov
fcom
push
add
dec
mov
push
jne
mov
fdivr
or
dec
xor
xor
aad
fnsave
out
adc
dec
fdiv
imul
jmp
push
call
mov
pop
bound
lahf
in
mov
cmc
mul
int3
xor
mov
out
rcr
mov
mov
xchg
out
neg
repz
xchg
and
(bad)
xchg
inc
xor
fcomi
movs
inc
popa
mov
pop
fldenv
(bad)
jle
inc
imul
loope
add
xor
xor
mov
bound
scas
sbb
mov
popf
pop
xlat
jnp
and
mov
mov
fldln2
sub
push
sbb
push
mov
xor
in
jge
call
pop
jg
bound
lahf
fdivr
rol
int
test
xchg
jbe
inc
adc
dec
shl
test
push
push
dec
stos
push
call
mov
aas
mov
retf
inc
imul
or
das
imul
pusha
cmps
ds
popf
iret
outs
aam
push
push
dec
inc
jae
dec
inc
inc
arpl
adc
fucomi
xor
mov
jle
lods
es
sub
pop
mov
pusha
lea
shl
(bad)
fld1
dec
call
gs
ss
(bad)
cmp
repnz
out
mov
ss
xchg
xor
and
dec
inc
call
cmp
imul
add
push
shl
push
test
ss
inc
aad
div
out
jmp
loop
cmps
add
mov
das
push
mov
mov
jbe
sub
xchg
pop
outs
les
and
lods
mov
pop
push
jge
mov
mov
add
(bad)
fild
pop
aad
add
jo
inc
test
sbb
add
int
jl
inc
movs
mov
and
add
cmp
sub
xor
cwde
push
stos
lods
add
jno
cs
and
inc
push
lea
movs
imul
sub
dec
loopne
pop
fwait
ret
fcom
xor
clc
add
mov
inc
iret
js
call
dec
cdq
sbb
mov
pop
mov
arpl
sub
add
pop
push
je
stos
daa
call
dec
pop
int
cdq
popf
(bad)
cs
in
and
push
cmc
jp
sar
sub
in
shl
das
enter
xor
ins
out
out
cmc
sub
inc
sub
aam
fidiv
jmp
in
stos
inc
ins
std
dec
popa
push
jmp
jae
pop
jmp
icebp
sub
mov
std
jo
jne
arpl
mov
fs
xchg
(bad)
repnz
je
mov
pop
mov
dec
div
out
xchg
iret
mov
jno
repnz
and
adc
add
movs
not
dec
mov
push
cwde
xchg
xchg
sub
sahf
xor
mov
sub
dec
cli
pusha
pop
(bad)
mov
push
pop
fdiv
cmp
add
out
mov
ret
sahf
in
mov
out
loop
popf
jp
aam
xchg
dec
mov
sub
retf
fist
ror
retf
and
es
adc
jnp
repz
in
fidiv
lods
xor
add
retf
adc
pop
(bad)
and
and
daa
xchg
jmp
adc
repz
inc
cdq
(bad)
jge
and
mov
adc
jg
jmp
mov
mov
inc
sub
and
lea
sub
sbb
pop
test
pushf
popf
sub
(bad)
cmc
pop
popf
mov
adc
mov
jmp
adc
pusha
and
out
mov
stos
rcr
lods
fmul
dec
jecxz
dec
(bad)
sbb
dec
es
daa
pop
xchg
daa
mov
xchg
aam
je
pop
icebp
dec
sbb
push
das
xchg
arpl
popa
sahf
and
jnp
sub
cmp
fcmovnu
gs
adc
mov
(bad)
or
pop
(bad)
sub
ins
adc
iret
push
outs
outs
sahf
das
jmp
push
inc
fwait
repz
xor
push
jge
mov
mov
or
cmp
or
int3
gs
jnp
jno
repz
frstor
imul
movs
int
cmp
movs
dec
imul
jl
mov
xchg
out
sub
cmp
aas
retf
sbb
and
mov
mov
cmp
adc
mov
pop
xor
loopne
cmp
mov
in
dec
adc
dec
fisttp
jno
sbb
xor
mov
push
sahf
cs
inc
inc
rcr
push
or
retf
dec
push
mov
repz
dec
lea
idiv
adc
(bad)
lods
loop
loopne
push
aas
sub
sbb
daa
push
push
rcr
cdq
arpl
mov
sahf
ror
mov
adc
xchg
retf
int3
nop
int3
fcmovnbe
stos
mov
dec
jmp
mov
fsubr
rcr
jno
cmp
pop
lds
jmp
ja
pushf
fidiv
push
and
inc
loopne
and
shl
xor
sub
inc
out
push
mov
adc
cmp
and
cmp
fwait
popa
das
push
mov
nop
rcl
(bad)
in
xchg
popa
std
and
pop
lea
test
(bad)
imul
cmp
mov
sub
add
and
xchg
push
cmc
push
daa
xor
mov
aas
xchg
shl
adc
retf
daa
das
inc
je
cdq
xor
mov
inc
push
not
ds
sbb
mov
push
sub
test
inc
lods
outs
movs
cdq
xor
jo
dec
(bad)
das
mov
stc
jnp
(bad)
scas
or
jne
stos
lea
sub
lds
clc
xchg
(bad)
retf
fidiv
push
inc
adc
loope
jle
inc
sub
in
sbb
jl
aad
sub
ins
dec
(bad)
fnsave
test
pop
fist
mov
scas
in
ret
(bad)
repnz
addr16
mov
cmp
xchg
xchg
mov
mov
mov
sub
fnstenv
xor
jl
xor
cwde
je
inc
mov
pop
jmp
mov
xchg
in
push
dec
fld
push
or
icebp
and
jmp
push
in
inc
push
push
repnz
mov
cmps
jno
cmp
retf
or
ins
sbb
jecxz
cmps
jg
inc
or
outs
sub
sahf
pop
mov
arpl
push
pop
xor
mov
(bad)
movs
or
pop
and
sub
dec
and
test
add
fmul
ret
sbb
int3
adc
test
ror
adc
(bad)
mov
movs
loope
cmps
add
mov
xlat
mov
xlat
sub
mov
enter
shl
in
outs
loopne
(bad)
jbe
mov
test
sub
jmp
push
mov
mov
lock
push
movs
sbb
retf
xchg
mov
xor
sbb
call
aad
inc
pop
cmp
cmc
and
out
add
adc
bound
imul
xchg
pusha
test
mov
push
leave
rol
jle
sub
xchg
sar
lock
aaa
dec
cmps
sbb
gs
dec
loop
sti
inc
xchg
jnp
test
ds
mov
mov
mov
in
push
or
pushf
ffreep
jge
(bad)
rcr
in
push
ins
and
jl
(bad)
add
rcl
xchg
emms
movs
imul
enter
inc
jns
imul
jne
pop
std
clc
xchg
push
push
in
add
mov
fmul
js
sar
xchg
and
ja
or
push
test
and
popf
jno
dec
jb
sub
mov
pop
sar
inc
in
adc
dec
xchg
mov
out
inc
sbb
shl
fbstp
jl
add
xchg
ffree
retf
pop
scas
mov
sub
sbb
hlt
push
enter
dec
pop
inc
and
dec
test
imul
sub
inc
mov
cmp
jg
aas
jbe
les
mov
push
inc
ror
add
cdq
cmp
xlat
sahf
movs
ins
movs
jae
pop
xchg
xchg
sbb
jmp
mov
iret
lds
fsubr
cmp
das
inc
aas
mov
ja
std
inc
lds
addr16
in
dec
cli
and
mov
cmp
jno
aas
loop
mov
push
jmp
pop
fs
sub
out
adc
pusha
pushf
jbe
xor
out
pop
sbb
sub
adc
push
stos
sub
out
mov
and
sub
aaa
lahf
mov
sbb
lods
xchg
fsub
sbb
dec
adc
pop
outs
adc
jae
(bad)
mov
push
mov
cli
out
jo
int
mov
mov
jnp
addr16
(bad)
aaa
gs
cmp
mov
mov
popa
fdivr
stc
loope
inc
mov
jge
push
mov
jg
cli
gs
ror
sbb
movs
cmps
pop
cmp
cs
arpl
or
sbb
dec
inc
stos
cmps
jge
mov
out
sub
shr
jle
jnp
lds
adc
pop
stos
fst
ror
sti
pop
pusha
mov
sbb
push
mov
cmps
test
test
cdq
mov
sbb
push
jb
and
add
cmps
sub
(bad)
dec
ja
add
jnp
call
or
inc
pop
push
gs
xor
dec
gs
mov
jg
sub
rol
mov
mov
adc
stc
in
sub
jmp
xchg
push
movs
xchg
mov
push
push
movs
and
cli
adc
xchg
les
mov
mov
pop
jl
stos
mov
push
jmp
inc
mov
int
push
clc
movs
icebp
add
out
and
xor
jns
xor
jp
xor
je
adc
in
jge
mov
mov
mov
sub
xchg
punpckhdq
cld
sub
cwde
in
int
shl
lods
or
(bad)
int3
pop
mov
cmp
xchg
dec
adc
mov
jle
jecxz
mov
lods
mov
ins
ins
fwait
sub
inc
inc
leave
cwde
adc
mov
adc
xchg
pop
and
pop
xchg
jmp
mov
test
xchg
or
mov
addr16
dec
das
push
and
mov
xchg
retf
ins
out
call
jns
mov
and
jbe
dec
sub
repnz
xchg
call
out
in
popf
es
out
jmp
pushf
ja
cmp
(bad)
xor
cmps
popf
pusha
inc
daa
dec
stos
mov
scas
in
ds
jle
inc
push
sbb
fmul
out
and
(bad)
lods
mov
add
pop
inc
xor
inc
int
xlat
test
cmc
pop
inc
inc
sub
jmp
ret
mov
sub
ror
les
sbb
popf
imul
pop
adc
fpatan
aaa
stos
mov
add
leave
std
sbb
leave
shl
add
fadd
not
in
call
je
in
rcl
add
mov
and
int
int3
dec
leave
or
cmp
ror
test
scas
sbb
jp
or
xor
mov
fsubr
pusha
jle
idiv
in
dec
in
add
sub
cbw
ficom
stos
aad
xor
mov
hlt
mov
jl
and
jnp
sub
push
dec
xlat
add
scas
outs
cs
and
lods
adc
fisub
mov
sahf
xchg
fwait
call
cmps
dec
xchg
ror
pop
jno
adc
mov
mov
ins
repnz
loopne
cmps
or
daa
xchg
mov
gs
add
jae
out
xchg
outs
jb
add
xchg
cwde
ins
call
lds
xchg
(bad)
shl
fdivr
add
lods
dec
jge
mov
loopne
xchg
cwde
(bad)
repz
ins
inc
add
(bad)
lods
add
add
cmp
std
inc
mov
cmp
sub
or
je
cmp
ja
popa
cmp
xchg
aad
jge
xchg
jne
and
fisubr
faddp
adc
push
loop
ror
hlt
aaa
add
and
or
mov
pop
icebp
std
(bad)
mov
sub
outs
cmp
or
dec
adc
mov
inc
mov
dec
push
or
pop
enter
repnz
pop
ds
in
sbb
pop
add
jmp
fst
cmp
sahf
jo
xchg
pop
popf
cwde
bound
js
scas
(bad)
fsub
xor
sahf
jp
xchg
xchg
push
xchg
mov
or
sub
scas
je
push
scas
mov
jmp
scas
add
jae
sub
daa
and
jg
push
add
pop
inc
in
pop
pop
es
call
push
push
cmps
adc
inc
dec
push
mov
fstp
cli
mov
push
int3
push
cmps
jb
mov
sub
pop
xchg
xchg
mov
test
jle
push
inc
xchg
dec
pushf
add
mov
inc
mov
pop
stc
and
icebp
xchg
inc
jno
das
in
cwde
scas
mov
je
jge
xchg
mov
lea
xor
clc
rdtsc
ins
gs
push
push
mov
cld
lods
push
mov
cmc
rcr
cmc
jae
adc
ins
dec
test
(bad)
ins
leave
test
mov
push
jg
gs
mov
pop
scas
adc
or
dec
sub
sub
xchg
gs
sbb
mov
adc
fnsave
push
hlt
mov
ja
dec
aaa
and
xchg
popa
xor
cdq
push
push
cmp
push
inc
je
and
jmp
cld
jne
in
ins
xor
(bad)
xchg
fs
outs
jecxz
daa
push
adc
mov
ficom
jecxz
sbb
mov
fwait
add
and
xor
and
gs
mov
sub
push
jbe
pop
and
xchg
das
sar
fadd
xor
gs
pop
jb
jmp
mov
sahf
jno
std
ror
jno
mov
push
ret
dec
jle
int
call
jle
mov
idiv
repnz
xor
btr
pop
xchg
sahf
push
leave
stos
das
scas
or
cmp
pop
jbe
adc
mov
mov
loop
movs
and
dec
pop
sub
(bad)
adc
fistp
cmps
inc
mov
fs
jp
adc
and
ret
push
lock
pop
(bad)
iret
adc
sbb
add
enter
lds
lods
ins
mov
js
or
es
cdq
inc
inc
das
sbb
sub
mov
movs
mov
mov
xor
sub
xor
jge
cmp
in
icebp
push
mov
sub
adc
pop
test
repz
iret
loop
call
mov
and
cdq
aaa
jbe
js
fstp
int
and
arpl
outs
mov
ja
or
dec
outs
push
in
je
jmp
inc
out
call
xchg
sbb
and
fist
imul
imul
scas
pop
or
adc
or
int
into
loope
lds
sbb
in
cmps
jmp
jnp
mov
mov
sub
jb
nop
jg
add
jmp
into
mov
stos
adc
xlat
cwde
cmps
dec
in
std
inc
mov
shr
mov
sub
outs
push
aam
scas
data16
and
sbb
jge
adc
mov
repz
in
ss
and
aas
data16
jmp
mov
hlt
daa
adc
out
sub
adc
mov
movs
push
sbb
in
cmp
mov
jle
dec
pop
inc
push
inc
mov
adc
rol
push
push
lock
jns
leave
mov
sahf
adc
or
jnp
xchg
stc
jl
ss
or
mov
push
cmp
stc
xchg
and
and
scas
cs
xchg
mov
and
jbe
fucom
int
or
adc
mov
sahf
test
ss
lods
rol
pop
mov
mov
xchg
dec
xchg
ja
enter
nop
shl
sbb
js
pop
adc
pop
test
adc
pop
mov
and
adc
daa
mov
loope
cmc
push
icebp
sar
sbb
ds
cmp
int3
aaa
xor
nop
fdivr
lock
pop
mov
sbb
add
arpl
lds
pop
push
add
push
mov
retf
sbb
xor
jnp
sbb
or
mov
iret
call
lock
sbb
inc
loope
js
push
or
fadd
xchg
inc
jmp
sub
int
dec
fsubr
repnz
jb
aad
pop
stos
jne
pop
or
jae
mov
mov
fs
into
mov
out
mov
mov
xchg
push
call
(bad)
xor
addr16
lods
mov
add
mov
cmps
out
sub
aam
ficomp
pop
out
popa
shr
cmp
sar
fistp
cmp
shr
leave
fwait
dec
fnstsw
xchg
aaa
xchg
xor
and
cmp
je
add
sbb
and
repnz
dec
lahf
lds
adc
pop
mov
fidiv
or
push
int
cdq
imul
imul
mov
xor
hlt
inc
push
(bad)
arpl
mov
mov
mov
cdq
add
call
mov
inc
cmp
mov
inc
shr
call
vunpcklps
mov
lock
pop
xchg
shr
mov
(bad)
xor
(bad)
cmps
mov
mov
hlt
add
mov
lds
pop
jnp
xor
mov
(bad)
lods
addr16
daa
imul
mov
or
push
pop
je
iret
out
mov
push
pusha
xchg
ins
adc
loopne
mov
pop
add
mov
dec
pushf
or
retf
nop
inc
and
mov
repnz
es
xchg
push
cwde
outs
add
jnp
dec
stos
cmps
gs
or
dec
push
cmc
sub
sub
mov
popf
sub
xor
jb
pop
inc
xchg
fld
pop
or
daa
bound
test
cdq
cmp
mov
mov
or
mov
dec
lahf
jmp
ret
jg
xchg
rcl
aam
mov
push
jl
call
sti
add
das
mov
paddd
push
mov
repnz
retf
cmp
adc
pop
jne
cmps
xor
xchg
jl
es
movs
fadd
ins
es
and
je
xchg
ret
cdq
inc
gs
sub
push
ja
dec
aam
push
movs
mov
mov
(bad)
fnstenv
push
fadd
adc
jg
mov
add
aaa
scas
jns
push
mov
sar
jae
icebp
ins
gs
div
shr
inc
inc
(bad)
fidiv
loopne
outs
dec
repnz
jne
hlt
rcr
add
jnp
mov
enter
sub
ins
jl
imul
pop
cmp
sbb
iret
add
je
loopne
mov
jle
stos
out
test
push
sub
out
sub
loop
pop
inc
sub
sbb
leave
push
dec
mov
or
cmp
outs
pop
adc
mov
pop
adc
mov
sub
cmp
mov
aas
sar
stc
mov
mov
nop
addr16
jno
shr
cdq
pop
ficom
mov
int3
shr
cld
mov
bound
mov
mov
jmp
mov
enter
popa
jmp
xor
dec
mov
fs
mov
xor
jp
out
aas
(bad)
inc
jns
or
inc
and
pop
test
shl
je
mov
clc
mov
dec
xchg
(bad)
iret
push
inc
sub
stos
mov
std
pop
bound
mov
pop
lahf
enter
xchg
cmp
cmps
fisttp
mov
clc
(bad)
fisttp
add
mov
inc
call
push
mov
xchg
adc
pop
in
adc
rcr
imul
and
cmps
cmps
xchg
and
jmp
in
out
(bad)
neg
mov
fsub
je
mov
in
cmc
jmp
or
xchg
mov
push
xor
shl
jle
cmps
test
xor
dec
cmps
(bad)
push
mov
aad
icebp
xchg
mov
nop
clc
or
out
pop
and
int3
fwait
jns
sub
gs
pop
ficom
call
sbb
xor
sti
mov
daa
scas
daa
repz
push
rcr
aaa
push
lea
neg
in
aas
ins
mov
xchg
nop
dec
mov
cmc
mov
int
mov
push
mov
and
stc
cld
out
sbb
in
xchg
repz
in
leave
neg
iret
mov
lahf
in
push
sub
and
fistp
cmp
icebp
push
mov
jecxz
xor
ss
dec
or
pop
mov
in
push
cmp
adc
push
jl
sbb
dec
add
cli
and
cmp
fnstcw
mov
outs
mov
(bad)
out
xlat
mov
sub
inc
pusha
loopne
rol
xchg
pop
cmp
std
nop
out
gs
xor
lds
or
lods
(bad)
fdiv
xchg
(bad)
jp
loop
addr16
pop
scas
test
adc
pop
sbb
cdq
jae
mov
out
ins
xchg
sub
dec
(bad)
mov
jnp
xchg
xchg
mov
mov
in
pop
push
fcom
and
and
sub
mov
fcom
jno
push
in
cmp
daa
pop
mov
shr
sbb
sbb
in
(bad)
fadd
ss
pop
retf
outs
and
jge
outs
(bad)
xor
cmps
pextrw
dec
fs
test
mov
mov
adc
pop
ins
aad
push
rol
sbb
xchg
daa
mov
wbinvd
pop
push
rcl
add
mov
pop
mov
xor
fist
aam
jp
add
pop
mov
sub
(bad)
mov
lea
cmps
push
das
xlat
xor
cmp
daa
cmc
adc
xchg
mov
call
push
retf
shl
or
mov
fistp
pop
jl
stc
xor
push
div
in
dec
and
les
cdq
std
sbb
jo
cmp
call
fild
pop
sub
call
sahf
popa
or
mov
in
push
add
mov
push
cmp
adc
dec
loopne
out
jmp
clc
sub
lea
jmp
push
ret
mov
sub
mul
int3
dec
cdq
push
xchg
lods
test
dec
enter
scas
aas
fnstsw
scas
mov
cmp
sub
lahf
shr
loop
outs
or
dec
sbb
pop
and
loope
cmp
or
xchg
test
lea
add
xchg
ins
xlat
mov
imul
movs
or
je
scas
repz
push
bound
sbb
lock
xchg
lods
or
shl
or
pop
jmp
xor
scas
rcr
push
enter
xor
(bad)
scas
daa
add
mov
jno
mov
stc
(bad)
add
jmp
cmps
mov
pop
adc
stos
cld
outs
pop
jle
movs
or
mov
and
xlat
cdq
movs
inc
fisubr
cmps
and
and
pop
and
mov
out
ins
test
mov
jg
fadd
sbb
sbb
or
inc
lahf
push
and
rol
mov
dec
mov
fadd
scas
inc
xchg
rcr
popa
mov
jecxz
and
or
mov
sub
push
add
loop
push
addr16
mov
mov
retf
mov
mov
jne
pop
sbb
pop
pop
xchg
out
in
and
(bad)
cmps
xchg
lock
inc
aas
mov
dec
inc
leave
jmp
jnp
retf
in
jo
ja
(bad)
rol
jb
cmps
mov
cmp
fcomp
xchg
sub
sbb
lds
adc
les
out
shl
ds
jno
cli
pop
xor
es
sbb
dec
pushf
add
mov
jecxz
xor
add
add
(bad)
daa
or
and
mov
cmps
mov
sub
sub
ds
jb
or
daa
xor
mov
add
fs
addr16
sbb
adc
(bad)
add
jbe
and
xor
dec
xchg
jno
adc
push
dec
popa
or
mov
xchg
mov
and
mov
sbb
(bad)
je
pusha
mov
out
stc
scas
sub
imul
cwde
mov
pop
fcomp
xlat
test
inc
loopne
inc
les
jmp
ss
mov
pushf
jmp
jb
inc
pop
data16
vcvtps2pd
push
rcl
shl
mov
mov
imul
test
aaa
push
or
fist
loopne
pop
mov
pop
mov
sub
dec
rcr
and
cmp
lahf
bound
mov
and
adc
cmp
cmps
mov
jo
stos
sub
shl
sub
out
inc
xor
pop
aas
adc
mov
fs
pusha
fistp
adc
push
icebp
mov
pop
push
cld
mov
mov
add
sar
sar
push
jo
gs
movs
xchg
pop
sti
dec
clc
jo
mov
inc
pop
xlat
mov
push
add
lahf
icebp
pop
call
das
xchg
cmps
add
imul
cld
jle
(bad)
das
sub
inc
fucomp
sub
sbb
fs
mov
test
(bad)
xchg
je
iret
pop
cmp
fcomp
dec
mov
add
aam
jle
mov
js
mov
rol
fimul
jmp
fwait
jg
aaa
jne
(bad)
stos
loopne
(bad)
jno
sub
je
lds
repnz
shl
mov
cmp
sti
mov
xor
xchg
xchg
outs
adc
pop
lods
sub
cmp
imul
adc
cmps
ret
js
(bad)
pusha
pop
jne
fnstsw
dec
lods
test
mov
into
clc
enter
mov
add
xor
aad
out
fst
int
lods
jge
push
push
in
call
shl
dec
nop
ficom
or
push
bound
pop
enter
push
dec
add
mov
dec
xchg
mov
pop
(bad)
fiadd
ret
cdq
mov
mov
pminsw
lock
inc
mov
dec
and
and
aas
aad
sbb
aad
dec
shl
mov
xor
xor
(bad)
and
ins
stc
setae
add
mov
push
fidiv
mov
add
or
mov
sbb
sbb
jbe
cwde
xchg
shl
movs
cmp
jns
dec
dec
sahf
pushf
push
scas
stos
clc
or
arpl
mov
call
std
sar
push
inc
loope
pop
push
in
xor
neg
into
fnsave
je
mov
icebp
aas
sbb
call
fstp
cmp
in
sub
jge
into
jp
bswap
pop
pop
pop
mov
or
push
xchg
arpl
stos
movs
jns
fwait
jmp
out
scas
(bad)
xor
mov
jecxz
inc
jb
push
xchg
push
xor
ss
jmp
adc
mov
mov
xchg
stos
in
and
push
sub
adc
fistp
je
xchg
fdivr
mov
outs
pop
push
pop
mov
mov
jp
pop
ins
popf
popa
out
dec
cmp
repnz
fcomp
pop
add
dec
in
pop
lea
cvtdq2ps
lods
mov
adc
stos
std
jg
shl
mov
add
into
imul
mov
and
dec
sar
mov
add
fsubr
jp
cmp
mov
ficom
push
sahf
push
jmp
daa
outs
push
xlat
pop
call
mov
gs
adc
jmp
sub
xchg
pop
dec
push
mov
mov
fs
mov
xchg
enter
cmps
push
lods
stos
lods
fsub
or
imul
jno
or
imul
or
dec
adc
dec
leave
dec
jle
and
popa
fs
sbb
test
fnstcw
or
push
jmp
add
add
inc
xor
push
add
push
sub
cmp
out
sub
mov
adc
movs
out
mov
push
leave
stos
arpl
outs
mov
xor
lods
mov
cwde
xchg
rcl
mov
mov
retf
repnz
or
mov
(bad)
push
mov
sub
push
out
loop
ficom
xor
xor
cmp
xchg
shld
add
loope
(bad)
mov
js
dec
pop
jle
push
out
jl
(bad)
(bad)
add
ret
retf
outs
(bad)
and
add
and
das
pop
arpl
in
push
(bad)
xchg
jmp
or
out
ret
(bad)
bound
leave
lods
setp
and
jge
iret
dec
data16
ins
cmp
cdq
ds
push
repnz
test
repnz
xor
push
imul
xor
jo
and
xor
pop
fnstenv
pop
inc
jo
mov
hlt
push
cs
pop
mov
mov
fstp
enter
xchg
mov
shr
add
shr
test
jb
xchg
sbb
pop
adc
xchg
loopne
xor
dec
out
ins
aad
out
mov
mov
retf
std
inc
mov
adc
adc
inc
push
and
in
aas
movs
xor
cmp
scas
ror
and
push
cmp
call
adc
pop
mov
sub
(bad)
xchg
ret
push
fisttp
mov
test
cmc
stos
xchg
xor
mov
icebp
js
ss
imul
pop
adc
ret
mov
shl
cmps
das
mov
jle
jns
mov
lds
xchg
cmp
test
or
int
or
mov
test
fld
pushf
or
sbb
jmp
movs
cmps
cmps
jp
outs
jle
inc
cdq
test
jge
out
xchg
dec
sbb
neg
adc
cld
das
lods
xchg
fsub
lahf
ds
leave
sub
lods
je
pop
add
add
mov
pop
jns
jl
enter
lea
mov
movs
xor
movs
pop
dec
pushf
xchg
loope
movs
mov
in
repnz
xchg
or
(bad)
jns
or
dec
(bad)
mov
popa
push
inc
jp
adc
sahf
bound
ret
test
lods
mov
push
mov
push
xor
mov
inc
jne
xchg
cmp
pop
inc
loop
cmp
cmc
cmp
cli
movntq
add
sahf
loope
xchg
imul
fadd
mov
int3
sub
add
cmp
je
nop
lds
inc
pop
stc
add
sbb
test
leave
sub
arpl
aas
pop
fsubr
inc
fcmovnbe
aad
inc
shl
jae
mov
into
call
leave
inc
mov
neg
sub
mov
in
cmp
and
dec
les
les
mov
xor
push
adc
jl
mov
clc
inc
repnz
popa
pop
(bad)
jmp
push
stos
leave
cmp
sti
jbe
stos
add
ss
mov
in
or
enter
test
jmp
nop
jge
push
(bad)
sbb
or
pop
inc
adc
cdq
dec
and
or
pop
inc
loopne
xor
lea
mov
adc
xor
scas
dec
daa
mov
mov
daa
inc
pop
xchg
cmc
jnp
inc
and
push
cmp
in
cs
xor
ds
adc
cli
pop
cmc
xchg
jne
jnp
stos
cdq
lods
add
dec
mov
xchg
lock
std
xchg
or
pop
mov
cmc
ret
dec
mov
mov
dec
dec
je
add
out
mov
inc
mov
ins
inc
scas
fldcw
lock
or
jb
jl
xor
arpl
loopne
cmp
iret
imul
push
xchg
push
jl
dec
mov
cld
or
imul
push
outs
out
je
and
sbb
shl
fwait
clc
addr16
sub
ds
add
xchg
push
jae
ret
in
xlat
push
retf
leave
push
clc
push
(bad)
pop
stc
mov
add
inc
std
mov
rcr
cmps
jno
lods
addr16
push
mov
sti
stos
sahf
int
ret
and
cli
xor
xor
enter
cmps
test
shr
mov
stos
lock
loopne
mov
push
std
cmp
jmp
inc
scas
mov
sub
push
dec
mov
(bad)
push
dec
dec
cmps
push
int3
mov
and
mov
fld
int3
mov
and
arpl
pop
call
add
lods
mov
jne
dec
arpl
and
mov
mov
clc
pop
pop
test
(bad)
nop
js
push
add
inc
sub
loope
mov
test
sub
frstor
xchg
cld
test
xchg
and
ss
adc
bound
mov
xchg
clc
stos
lock
in
cli
imul
and
test
js
retf
loope
mov
lds
imul
push
ret
cmp
jge
dec
xlat
push
movs
push
loope
std
test
jp
jb
mov
js
mov
fsubr
xchg
popf
adc
daa
sub
mov
shl
cmc
in
enter
jno
movs
fldenv
mov
jno
out
or
mov
push
jge
inc
push
pop
ret
push
cmps
push
sbb
shl
gs
cmp
popa
mov
sub
cmp
jns
pop
xor
sbb
jle
push
scas
xchg
ror
or
add
cmp
pop
pop
push
pause
or
xor
pop
push
cmp
aad
inc
xchg
outs
shl
aaa
ins
mov
xlat
mov
pop
lock
sbb
loop
outs
and
int3
jno
nop
dec
mov
fimul
push
pushf
sahf
imul
popa
(bad)
push
aam
js
push
pop
jp
mov
mov
mov
into
vpsubusb
jmp
xor
jnp
push
dec
sbb
sbb
pop
jmp
ror
cmps
mov
cmp
repz
ret
mov
pop
mov
rcl
jge
inc
dec
fsub
loopne
mov
inc
pusha
lock
mov
mov
dec
stos
fisubr
push
xor
adc
call
sub
jg
cmp
xor
aad
push
mov
loope
loopne
mov
ins
iret
push
jns
ja
jne
xchg
jae
xchg
or
mov
adc
mov
dec
jno
lahf
test
adc
sti
xchg
pop
ins
and
fs
xchg
inc
push
mov
pop
aaa
inc
or
outs
inc
cdq
pop
xchg
ds
add
jo
test
cmp
call
jmp
sbb
sti
mov
and
push
mov
and
sti
pop
fstp
sti
mov
lahf
sbb
daa
mov
out
rol
leave
outs
bound
adc
mov
jmp
sbb
out
jmp
mov
cld
sub
neg
sub
repnz
repnz
aad
jae
in
mov
sbb
push
and
sahf
pushf
retf
jo
pop
xor
repz
fcmovu
push
jns
mov
int
push
cmp
fiadd
jecxz
icebp
in
outs
pop
inc
mul
pushf
fist
in
add
idiv
xchg
out
mov
or
ficomp
mov
lea
push
cwde
mov
xor
xor
scas
fwait
xor
add
rol
shl
adc
sub
xor
adc
out
xchg
xor
mov
loop
and
stos
repz
mov
lahf
jge
mov
stos
jne
or
jnp
pop
pop
push
push
out
add
ret
cs
mov
popa
dec
xchg
out
mov
(bad)
sub
retf
mov
and
pusha
in
adc
cdq
mov
jb
mov
mov
push
sbb
xchg
or
test
loope
mov
pmullw
pop
dec
cmc
cmp
mov
jbe
fnstcw
inc
cmp
jbe
push
call
fisub
out
popa
mov
xchg
arpl
mov
adc
fwait
mov
in
jp
mov
fst
or
jg
pop
in
jne
xchg
jnp
das
xor
(bad)
xchg
imul
cmp
jns
cmp
stc
sbb
cmps
ret
lahf
das
dec
pop
pop
in
popf
push
js
outs
movs
pop
cmp
fwait
ss
call
push
adc
imul
(bad)
sar
enter
mov
dec
into
daa
or
push
mov
and
shl
cmp
xor
shl
in
mov
(bad)
outs
cmps
adc
pop
rcl
outs
ja
movs
out
or
adc
js
push
add
mov
mov
ins
inc
mov
not
add
repz
ds
adc
iret
mov
jle
aas
jo
aaa
xchg
sub
ins
hlt
mov
rcr
pop
add
xor
sub
outs
loope
leave
int3
jae
dec
sbb
in
mov
repz
test
ficom
or
stc
ret
and
popf
push
fisub
test
ins
ds
xchg
retw
idiv
jb
mov
jbe
sbb
lods
(bad)
cwde
jne
retf
mov
outs
and
mov
jae
ins
mov
sbb
and
jmp
test
mov
jnp
out
mov
add
xor
(bad)
and
imul
pop
mov
pop
or
add
xor
lea
push
inc
loop
sbb
sub
dec
mov
xor
jl
pop
jl
fist
into
daa
call
dec
adc
popf
jae
(bad)
in
imul
jge
jmp
int3
pop
sub
mov
mov
or
push
mov
pop
loop
jmp
popf
scas
stos
aaa
mov
(bad)
mov
ss
aam
or
dec
ficomp
shl
add
xchg
popf
movs
push
les
xor
pop
fwait
push
ss
ret
jmp
outs
rcl
out
aam
xchg
retf
(bad)
leave
pop
test
add
and
imul
aaa
(bad)
(bad)
xor
push
data16
mov
gs
add
mov
clc
cwde
rol
imul
cmp
xor
sbb
xor
(bad)
fiadd
scas
(bad)
stc
fisttp
ret
or
test
(bad)
stos
std
aad
les
inc
test
push
mov
fstp
adc
retf
inc
int
test
in
out
imul
xadd
scas
into
nop
cmp
dec
add
sbb
push
cmp
sub
push
bound
mov
cld
dec
(bad)
outs
or
div
popa
and
pop
xor
bound
in
add
outs
and
shr
mov
xor
sub
outs
cmc
sahf
cmp
mov
mov
xchg
add
adc
repnz
movs
div
pop
add
mov
mov
push
mov
adc
push
ret
xchg
xlat
add
and
push
fs
and
pop
lock
movs
jecxz
xor
push
jmp
sub
sbb
xchg
mov
icebp
fst
cdq
movs
mov
mov
pusha
pop
jno
adc
mov
push
and
and
mov
mov
push
mov
mov
shl
retf
pop
or
in
fsub
inc
jmp
test
mov
in
xchg
pop
jbe
jecxz
sub
inc
pop
push
mov
dec
and
test
cmp
jmp
cmp
dec
adc
sahf
xlat
in
mov
cmps
mov
outs
in
push
add
dec
mov
or
inc
pop
push
inc
mov
(bad)
aad
movs
dec
je
iret
pop
daa
adc
cwde
jne
rcr
cld
xchg
inc
je
icebp
xchg
mov
push
cs
movs
dec
lock
into
adc
xchg
scas
cmp
loop
dec
imul
lods
loopne
and
xor
shl
sbb
lods
mov
inc
mov
dec
les
repz
(bad)
ds
mov
ret
arpl
shl
mov
or
mul
dec
(bad)
enter
jnp
jg
add
fbstp
cmp
or
mov
push
lock
and
xlat
fisttp
je
shl
or
jno
test
aaa
sbb
jl
in
test
and
and
jl
jnp
fisub
cmps
dec
mov
mov
shl
outs
or
in
adc
ins
(bad)
aad
inc
inc
clc
dec
cmp
and
nop
inc
xor
call
or
retf
sub
ins
adc
imul
fist
sbb
stc
mov
push
mov
das
dec
loopne
cmc
inc
mov
ret
mov
pop
xor
mov
movs
dec
fsubr
das
xchg
push
jne
std
sbb
push
pop
jb
sbb
(bad)
dec
pop
mov
clc
mov
jne
movs
mov
cmc
arpl
mov
shr
sub
xchg
or
(bad)
dec
aad
cmps
retf
mov
movs
xchg
xor
mov
pop
push
bswap
xor
mov
inc
jmp
xchg
addr16
mov
aam
jg
cmp
dec
cmp
mov
retf
lock
inc
fstp
sbb
jb
sub
xchg
push
scas
pop
(bad)
xchg
stos
pop
call
dec
test
movs
xor
cmp
or
sar
inc
loope
mov
fwait
ret
mov
pushf
mov
pop
and
mov
cmc
adc
xchg
dec
mov
ins
pop
mov
xor
and
punpckhbw
dec
mov
(bad)
mov
cmc
test
fnstsw
xchg
imul
mov
clc
fsubp
enter
or
jge
jp
cmp
ror
repnz
pop
iret
call
outs
ds
mov
mov
dec
out
mov
imul
ror
sahf
sub
inc
call
xchg
stos
addr16
aad
adc
bswap
or
mov
push
clc
movs
inc
pushf
hlt
lahf
sub
lods
dec
jb
or
xchg
(bad)
scas
pop
shl
jne
push
pop
leave
sub
in
xchg
lock
iret
(bad)
cmps
push
inc
(bad)
das
(bad)
pop
xchg
fisub
mov
fwait
sub
test
(bad)
retf
sbb
xchg
dec
test
push
and
pop
xchg
repnz
jl
xor
ror
jl
aad
retf
test
and
imul
lahf
jns
mov
mov
stos
xchg
into
hlt
xchg
loope
in
lea
scas
icebp
pop
pop
mov
int
dec
push
ror
dec
ins
fstp
mov
mov
ror
int
cmp
jmp
(bad)
and
(bad)
jno
push
icebp
jle
stos
into
add
bound
xor
add
xchg
rol
adc
call
inc
imul
add
pop
fxch
xor
pop
das
sub
ds
call
xchg
and
dec
(bad)
out
cdq
mov
not
mov
dec
mov
lock
not
mov
jnp
dec
test
test
sbb
in
cs
fstp
outs
and
pmaxsw
test
movs
sub
sbb
pop
or
stos
lock
jo
inc
lea
retf
pop
test
dec
hlt
or
ja
into
cmp
and
jno
ja
scas
repnz
stos
(bad)
in
xchg
dec
inc
aam
fwait
push
(bad)
adc
jno
mov
sbb
mov
test
ss
pop
or
mov
iret
test
fwait
lock
jne
xchg
xor
loop
stos
mov
outs
cmp
mov
push
imul
or
jbe
and
cmp
push
je
xor
mov
inc
mov
cmc
data16
hlt
mul
mov
xchg
xchg
aas
out
xchg
inc
(bad)
ss
pop
dec
sbb
shr
jbe
fwait
jl
stos
mov
mov
loop
dec
retf
xor
aad
pop
je
fwait
xchg
dec
pop
mov
leave
or
cmc
out
mov
retf
ja
xchg
lock
fld
enter
inc
xchg
les
xor
mov
add
push
in
int
test
(bad)
loopne
int3
inc
jp
push
mov
cmp
movs
mov
shr
ss
push
imul
enter
popf
in
int3
cdq
jmp
jns
pusha
and
das
call
inc
jb
pusha
or
and
mov
movs
xor
jecxz
int
mov
cmp
in
inc
ret
imul
ins
xchg
fadd
fwait
adc
repnz
dec
dec
xchg
dec
and
nop
cmp
push
jg
into
ror
test
adc
mov
lds
popa
out
mov
dec
add
jmp
mov
stc
ret
mov
adc
(bad)
mov
and
adc
cmp
mov
jae
jo
les
jns
dec
nop
jns
movs
xor
fs
mov
mov
imul
adc
and
ret
and
pop
sub
out
inc
push
out
test
sbb
fwait
pop
movs
fcomip
cmp
mov
sbb
out
and
mov
retf
mov
push
jge
xchg
add
pop
das
stc
adc
mov
repnz
sti
lahf
pop
mov
or
jbe
or
push
ins
jnp
mov
and
cmp
mov
ds
xor
lock
sub
pop
in
test
inc
jmp
jge
call
das
jmp
push
mov
cmps
inc
mov
jo
in
xchg
mov
sub
and
dec
aaa
sbb
mov
in
xchg
mov
cli
(bad)
inc
mov
sub
cmc
rcl
lods
(bad)
loope
xor
sbb
arpl
popa
test
cmc
push
mov
js
sub
mov
icebp
dec
test
fwait
jl
sbb
add
jmp
or
pop
inc
test
dec
jle
(bad)
outs
adc
or
ficom
loopne
dec
aas
aam
sahf
cmp
popa
inc
dec
movs
or
push
into
xchg
jbe
dec
mov
loop
ja
mov
inc
sub
jg
push
cmps
(bad)
stc
fld
aas
sbb
mov
xor
repnz
fsubr
retf
mov
mov
in
mov
add
lahf
(bad)
mov
jp
aas
in
and
leave
mov
inc
or
hlt
sar
les
fsub
test
inc
inc
push
dec
(bad)
jp
push
iret
ins
test
mov
push
leave
outs
cmp
jb
imul
(bad)
sub
dec
(bad)
ja
test
das
jge
mov
or
mov
jmp
test
shl
xchg
push
sahf
popa
cmp
mov
push
dec
sar
xor
mov
jnp
cli
call
xor
push
clc
adc
adc
ss
sahf
fs
aaa
push
std
jno
fimul
retf
out
pop
ret
sub
mov
aaa
mov
test
cmp
fiadd
lods
inc
adc
aaa
bound
pop
jecxz
add
repz
add
and
ficomp
add
mov
sbb
jge
in
xlat
and
cld
fsubr
retf
call
dec
in
cwde
movs
add
retf
xchg
sbb
lds
mov
cmp
into
xlat
sub
lahf
or
scas
out
imul
imul
or
jae
pop
inc
mov
sub
(bad)
or
add
xor
and
jle
xchg
outs
aaa
adc
push
ret
stos
into
mov
mov
sub
in
dec
mov
sbb
mov
pop
jecxz
pop
icebp
push
jl
call
mov
ficom
pop
inc
inc
adc
out
sub
adc
bound
dec
int3
adc
add
scas
mov
mov
adc
dec
call
loope
or
jnp
cmps
xor
ret
ret
(bad)
sub
jo
out
pop
xchg
jne
out
das
inc
icebp
cmp
call
repnz
cdq
dec
(bad)
call
(bad)
dec
iret
cld
jmp
and
or
cmp
dec
inc
xor
shl
xchg
mov
stos
rol
xor
sahf
cmp
call
push
cwde
push
into
xchg
out
lock
cdq
dec
push
mov
std
int
xor
push
cmp
lock
fadd
ror
or
inc
dec
mov
cmp
fs
gs
pop
jle
xchg
in
xchg
shl
loopne
ret
leave
lahf
iret
int3
push
push
pop
test
out
stos
xor
pop
mov
jne
or
sbb
gs
mov
xor
(bad)
repz
and
jmp
arpl
imul
sub
(bad)
inc
sub
loope
fnstenv
cmp
sub
pop
movs
mov
jl
mov
mov
add
dec
push
dec
xchg
cmps
(bad)
xor
add
push
push
jg
fild
ret
clc
jbe
ret
sub
retf
movs
adc
push
cmovg
not
movs
xchg
nop
push
not
mov
movs
adc
mov
push
and
and
add
lods
out
frstor
nop
jp
mov
dec
test
xor
cmp
inc
fst
jne
test
xchg
push
mov
push
pusha
dec
in
push
popa
adc
data16
outs
jmp
push
(bad)
movs
std
lods
(bad)
jnp
pop
mov
add
sbb
mov
jnp
mov
pop
and
xchg
mov
cmp
int
add
sbb
jp
lods
add
push
sbb
jp
sar
int3
aas
loope
scas
adc
fdiv
leave
or
inc
es
cmp
rcl
mov
adc
inc
sbb
repz
mov
adc
inc
test
popa
sbb
pop
inc
inc
aas
mov
jp
loopne
movs
jo
pop
sbb
ja
inc
mov
test
xor
loop
cs
cli
cmp
out
aam
cli
ss
pop
iret
add
enter
or
clc
int
inc
jmp
jle
ja
pop
test
fs
jle
sbb
fmul
mov
shr
movs
sub
pop
sti
mov
bts
jg
mov
mov
jl
inc
adc
xchg
fbld
pop
ins
sub
pop
inc
retf
outs
ins
ss
fst
lods
sub
push
cmp
xchg
and
jp
and
ds
shl
cmp
loope
cmp
fimul
xlat
jecxz
push
and
pop
adc
aas
adc
xchg
aam
(bad)
jmp
imul
mov
pusha
mov
dec
fcomp
cmp
push
sahf
dec
fild
or
rol
lock
in
ins
xchg
cmove
imul
pop
add
ja
xchg
cs
in
ret
ret
push
dec
xchg
xchg
js
repnz
aas
fdiv
stos
rol
ja
xchg
movs
shr
push
pop
mov
cld
jmp
(bad)
gs
jp
sbb
ds
(bad)
popf
mov
outs
mov
test
call
inc
mov
push
bound
lods
(bad)
mov
ins
(bad)
push
adc
je
xchg
movs
push
div
daa
adc
outs
dec
jl
push
ror
push
pop
test
mov
push
xchg
mov
in
sub
inc
add
xchg
dec
push
stc
lahf
in
adc
subps
int3
xchg
stos
(bad)
mov
shr
test
movs
add
push
add
(bad)
in
ss
(bad)
(bad)
popf
xor
cwde
fwait
dec
(bad)
adc
movs
or
dec
in
shl
push
(bad)
iret
iret
jno
lea
and
xchg
into
mov
popf
pop
mov
lods
leave
out
push
mov
gs
addr16
inc
xchg
out
jno
dec
lods
jmp
push
inc
mov
push
rcr
inc
jnp
push
mov
push
cs
je
or
movs
jb
(bad)
cmp
adc
inc
bound
cli
out
call
mov
add
xor
xchg
jns
sbb
jno
div
pop
loope
pusha
ins
push
in
(bad)
push
jae
push
gs
mov
lods
mov
jmp
das
xor
xlat
idiv
ds
out
pop
popa
data16
mov
out
frstor
sub
mov
enter
cmc
pop
movs
in
jl
pop
fsubr
adc
cmps
push
out
cmp
pop
popa
mov
ret
jae
push
aad
pushf
mov
xchg
ficomp
std
mov
inc
loopne
mov
inc
sbb
push
in
fwait
test
fcom
popf
mov
sbb
sub
mov
and
cmc
out
cmps
jecxz
int
add
pop
cli
cmps
pop
sbb
vshufps
les
adc
mov
sub
pop
mov
cs
out
imul
mov
mov
pop
mov
aas
push
stos
test
adc
leave
jp
cmp
dec
cmp
fistp
mov
lods
icebp
test
ror
rcl
es
cs
ins
mov
inc
bound
and
mov
pop
add
jne
mov
(bad)
mul
int3
jmp
movs
jnp
sub
pop
das
mov
push
aaa
aad
xchg
or
mov
psubsw
imul
aaa
in
lods
hlt
push
pop
aad
or
mov
mov
xchg
movs
rol
fst
les
test
add
adc
cmp
repz
shl
mov
ins
fdivr
mov
xor
jo
xchg
pop
pop
fwait
in
int
rol
sbb
and
dec
mov
pop
sub
(bad)
mov
inc
mov
(bad)
cmp
mov
pushf
gs
sub
call
cmps
jge
(bad)
mov
pop
rol
neg
cmp
test
jne
jmp
fisttp
xchg
stos
cmp
loop
stc
push
mov
xchg
loope
aad
xchg
fwait
xchg
jge
xor
mov
jns
ds
ins
mov
test
sub
or
hlt
jl
psllw
mov
dec
add
std
xchg
lock
fsubr
mov
test
inc
and
mov
add
cmps
enter
in
lock
cmp
(bad)
adc
mov
mov
inc
jmp
push
mov
fidivr
push
ss
pop
sub
cwde
cmps
inc
pop
jo
sbb
mov
in
cld
out
sti
ja
mov
adc
adc
lods
push
xchg
pop
ficom
jmp
xor
lods
xor
jle
stos
sar
sub
add
mov
mov
movs
lds
call
mov
out
add
cs
inc
ins
jg
icebp
cwde
and
mov
push
pop
jmp
inc
cmps
pusha
outs
jmp
sub
dec
and
cmp
jb
and
pop
sub
imul
xchg
arpl
js
jecxz
test
fsubp
test
dec
cmc
and
sub
icebp
xchg
xchg
sbb
xor
shr
leave
fsubr
mov
push
sub
or
adc
retf
cdq
sbb
jl
movs
mov
(bad)
ja
add
test
ror
xlat
and
cmp
cmp
or
push
or
fisttp
dec
pop
ret
ss
xor
fwait
adc
inc
addr16
cwde
pusha
aaa
ins
ss
cs
and
mov
mov
add
jnp
mov
pusha
sti
aad
fmul
fiadd
ret
lds
and
(bad)
pop
js
xchg
cdq
dec
fldenv
dec
mov
pop
push
dec
ror
add
fdiv
(bad)
sub
scas
rcl
scas
cdq
mov
jae
inc
pushf
cmp
mov
out
clc
sub
test
shr
or
daa
mov
jb
leave
into
pop
cmc
cmc
sbb
pop
aad
cmc
addr16
idiv
test
out
jl
inc
(bad)
xchg
cwde
jns
fwait
mov
adc
js
imul
test
jmp
sub
lahf
test
aam
call
push
repnz
movs
jns
in
fnstcw
mov
mov
fisttp
nop
xor
outs
mov
out
imul
and
pop
(bad)
ins
fwait
push
scas
pop
inc
cmp
outs
out
hlt
jns
and
das
out
pop
imul
(bad)
adc
xor
and
dec
lock
lods
(bad)
mov
xchg
push
in
sbb
inc
movq
dec
cdq
mov
pop
in
iret
mov
cmp
jecxz
sti
pop
xchg
sub
xchg
xor
test
fcomip
mov
rol
mul
xchg
retf
jp
add
xor
xchg
stos
scas
pop
jb
sahf
pop
sub
fcmovu
aam
add
pop
gs
hlt
icebp
inc
xor
iret
or
std
movs
jge
loope
ret
in
xchg
bound
pop
push
lods
sti
xor
mov
or
call
scas
cwde
addr16
dec
add
mov
shl
pop
cmps
and
dec
(bad)
fdivrp
inc
hlt
ja
ret
or
popf
xchg
inc
mov
stos
jb
enter
jmp
ins
mov
mov
sar
dec
aam
pop
in
popa
out
add
stos
fwait
cmp
ins
js
xor
mov
push
fisubr
push
fnstcw
mov
(bad)
cmps
dec
clc
pop
mov
fwait
push
mov
add
ins
fcom
repnz
pop
adc
cld
pop
pop
mov
sbb
adc
fstp
inc
repnz
shr
out
fs
outs
cld
dec
or
int
dec
das
imul
mov
out
cmc
xchg
dec
jl
das
mov
pop
ja
jb
loop
jae
repnz
mov
leave
call
push
jae
jmp
mov
mov
add
pop
mov
(bad)
mov
adc
sbb
pop
jno
sub
gs
adc
ds
xchg
scas
jl
jnp
and
jmp
pop
jne
pop
and
js
fdivr
mov
sbb
xor
call
sbb
dec
push
pop
retf
daa
and
fstp
in
(bad)
scas
mov
dec
cli
jb
dec
out
mov
jle
cdq
sbb
dec
pop
fadd
fisttp
je
xor
adc
push
xor
add
js
mov
adc
pop
pop
and
xchg
outs
add
xchg
repz
in
leave
out
xchg
push
into
es
sbb
shr
push
jecxz
push
outs
jge
mov
jnp
mov
push
es
pushf
mov
jmp
arpl
mov
leave
rol
out
into
ds
add
imul
fmul
lds
mov
cmps
mov
mov
out
xor
js
pop
or
sub
dec
cmp
ret
lea
inc
sub
mov
in
mov
pop
loope
sbb
mov
xchg
mov
jp
sbb
arpl
mov
jecxz
js
or
mov
loope
cmps
inc
sub
sbb
test
cmp
jmp
or
jns
rol
dec
retf
adc
add
rol
xor
ror
and
mov
imul
adc
aam
xor
stos
sbb
ret
bound
frstor
sub
sar
mov
push
pop
inc
mov
(bad)
cmp
push
or
add
leave
popfw
lds
retf
bound
cmp
jb
adc
dec
retf
ja
adc
or
pop
jmp
in
hlt
add
mov
push
push
and
test
jmp
cdq
sahf
or
imul
pop
and
dec
aas
ds
call
jbe
mov
dec
mov
imul
add
dec
inc
jmp
stos
in
mov
imul
imul
mov
hlt
mov
or
ror
dec
push
push
mov
nop
push
loopne
xor
jg
mov
(bad)
in
movs
and
sub
data16
out
(bad)
lods
cli
xor
pop
jmp
mov
mov
das
dec
pop
imul
adc
mov
push
sbb
xchg
fist
aam
lock
inc
add
imul
adc
xchg
cs
fild
pop
cwde
push
dec
and
inc
dec
add
dec
cmp
mov
into
movs
lods
pop
jne
fdiv
add
push
nop
pop
(bad)
push
dec
iret
xchg
call
pop
mov
imul
stc
push
test
sub
shl
aad
stos
ins
sahf
mov
(bad)
vpsllq
cmp
jno
inc
jb
iret
mov
fwait
(bad)
cmp
(bad)
clc
push
mov
push
daa
pop
adc
dec
aas
mov
cwde
retf
pop
cmp
aas
or
fstp
jle
pop
stos
jg
lock
jo
fidivr
sbb
and
push
jge
push
sbb
lds
jae
sub
and
ficomp
dec
jae
push
dec
pushf
fldcw
pusha
mov
push
jg
call
push
pop
xchg
mov
inc
mov
pop
pushf
sub
enter
mov
sub
pop
iret
dec
xchg
mov
(bad)
ds
popf
leave
xlat
jl
push
dec
pop
sar
aas
pop
pop
ins
cwde
mov
pop
xchg
or
push
cwde
jno
fst
enter
mov
retf
push
loope
xor
mov
sbb
sbb
dec
lods
push
xor
ret
push
jae
in
sbb
push
mov
daa
imul
pop
push
les
dec
adc
jmp
push
cmp
jecxz
std
add
sahf
dec
repnz
xchg
cmp
dec
xchg
and
pop
mov
pop
or
add
loopne
mov
push
in
sub
and
cmp
scas
add
loop
jbe
(bad)
fadd
cmps
mov
add
mov
sub
adc
inc
adc
sahf
xchg
dec
push
fs
jne
xchg
xchg
xchg
dec
mov
mov
push
xchg
pop
push
xchg
cli
push
lds
cdq
outs
add
add
fsubp
pop
mov
and
call
push
test
pushf
ret
pop
pop
aam
mov
ret
mul
(bad)
pushf
dec
sbb
hlt
xchg
mov
inc
call
test
aaa
sub
int3
mov
out
into
fwait
shr
mov
inc
not
pop
jg
leave
add
cmc
pop
fs
inc
xor
or
ja
test
repz
inc
clc
and
add
retf
dec
mov
or
nop
sub
cdq
fadd
inc
retf
cdq
aaa
mov
xchg
adc
and
inc
lock
movs
xor
or
inc
in
jmp
or
cmc
or
in
fs
ret
sbb
cwde
cli
out
pop
jl
inc
scas
ds
push
mov
mov
inc
call
aaa
call
add
outs
and
xchg
dec
popf
mov
dec
pop
inc
test
popf
fisubr
bound
push
jg
fild
popf
pusha
hlt
imul
js
test
xchg
add
sub
mov
xchg
aaa
mov
fs
xor
push
inc
bound
jmp
jae
lods
pop
dec
(bad)
stos
add
inc
bound
mov
ss
xor
cmps
or
mov
(bad)
stc
repnz
lahf
popf
arpl
push
iret
outs
mov
pop
in
not
mov
aaa
gs
fwait
sbb
push
push
xchg
cmps
add
and
adc
sub
in
pop
enter
xchg
push
sbb
ret
jno
rcr
std
push
adc
xchg
jl
and
hlt
(bad)
xchg
mov
ins
jge
or
ja
mov
bound
mov
push
ins
jge
push
int
loopne
mov
into
pop
push
push
mov
lds
sar
ret
loopne
mov
mov
imul
ins
das
sti
add
inc
repz
in
adc
hlt
pop
call
test
sbb
das
(bad)
jae
push
or
mov
inc
adc
and
fcmovnbe
retf
mov
xchg
xor
dec
sub
xor
int
outs
in
(bad)
jnp
adc
movs
pop
and
out
mov
pop
and
xlat
pop
les
sbb
bound
fld
jmp
jae
ja
xchg
stc
sbb
sbb
adc
fcom
pop
into
jno
xchg
inc
and
pop
into
movs
js
aam
sbb
std
aaa
mov
jg
xchg
xchg
rol
loopne
pop
call
adc
xchg
cmp
(bad)
cwde
inc
jno
aam
ret
mov
push
adc
add
and
out
inc
inc
mov
sub
clc
and
jb
rcr
stc
dec
stos
shl
sub
ins
into
lds
sbb
(bad)
sti
fidivr
push
popa
push
dec
xor
dec
pop
dec
push
movzx
movs
hlt
sbb
mov
jae
outs
les
xchg
pop
sbb
adc
out
std
jne
push
clc
jnp
je
xchg
imul
or
loop
dec
inc
mov
dec
push
xchg
mov
in
jne
pushf
mov
mov
iret
sub
jmp
jmp
or
mov
pop
mov
push
call
(bad)
mov
out
inc
sub
pop
and
pop
scas
sbb
push
fs
arpl
fisubr
inc
sbb
adc
lock
pop
mov
out
movs
xchg
xlat
clc
xor
sbb
jmp
mov
mov
inc
mov
scas
xor
out
and
mov
sub
popf
mov
imul
shl
cmp
fwait
cmp
fisubr
jle
shr
shr
sub
pmullw
sbb
pop
push
out
xor
ret
cmp
sub
mov
aas
pop
inc
out
xor
aas
pop
sub
pop
pop
mov
test
pusha
jecxz
mov
mov
pop
int
jg
adc
fisttp
mov
std
push
pop
int3
fwait
push
cmp
pop
sbb
std
cli
stc
jbe
inc
fbld
fadd
sub
pop
mov
mov
in
sbb
ror
in
sti
mov
aad
adc
sub
push
(bad)
sahf
add
mov
push
mov
and
add
xor
lahf
into
in
or
test
arpl
out
mov
jno
mov
jecxz
test
sbb
daa
pusha
in
pop
cmc
in
adc
mov
movs
enter
push
fptan
xor
lds
fwait
jo
shr
cmp
xchg
xchg
mov
loop
mov
(bad)
push
rcl
cmp
shl
ins
mov
mov
rcr
aam
popa
inc
rcl
pop
cmp
sub
in
pusha
pmullw
push
xor
inc
test
pop
loope
mov
clc
sbb
xor
in
in
cdq
sti
or
sahf
pop
gs
scas
mov
mov
aaa
jnp
sub
in
nop
test
cli
popa
je
clc
stos
mov
int
out
cmp
mov
push
or
or
push
mov
(bad)
repz
pmulhuw
popa
pop
imul
retf
adc
les
and
mov
lds
or
push
add
out
cmp
pop
pop
ss
push
inc
fisttp
jbe
and
sbb
adc
cwde
aad
push
add
icebp
mov
out
sub
pop
push
rcl
jl
and
out
rcl
dec
scas
aaa
push
js
mov
mov
dec
arpl
pop
fs
sbb
test
mov
mov
in
lea
jg
hlt
mov
mov
fadd
(bad)
out
loop
(bad)
stos
cmp
mov
test
or
xchg
or
daa
dec
daa
loope
sbb
and
pop
fwait
ret
pop
sbb
adc
imul
add
aam
xor
(bad)
icebp
mov
mov
cs
mov
ins
int
into
adc
pop
fwait
iret
pop
int3
in
sbb
xor
xor
arpl
pop
mov
cmp
mov
bnd
inc
fiadd
std
loopne
jecxz
jbe
(bad)
sbb
dec
mov
ds
call
sbb
xlat
scas
and
fs
mov
jge
dec
jae
xor
rcr
cmp
ror
mov
gs
test
das
jb
dec
stos
pop
in
xor
push
mov
outs
sbb
sahf
scas
pop
cmps
in
fwait
mov
jge
push
adc
push
sti
adc
fist
cli
addr16
add
dec
sar
mov
lods
in
sahf
dec
aam
mov
sub
inc
imul
mov
sahf
loopne
pop
or
icebp
jmp
(bad)
fbld
ret
fdivr
test
push
ret
int3
mov
stc
pop
xchg
sub
enter
lock
fldlg2
push
jmp
fistp
inc
jne
mov
cli
test
cwde
ins
push
mov
gs
or
pop
(bad)
(bad)
dec
ret
imul
cmp
and
retf
mov
mov
cmc
jecxz
jge
push
inc
and
mov
idiv
mov
lds
test
shl
es
lods
sub
lods
ins
out
cmp
xor
inc
inc
jp
iret
mov
ins
es
jge
scas
mov
mov
sub
out
imul
jnp
xchg
ret
imul
fs
std
cmp
sub
(bad)
loop
inc
jae
jecxz
call
push
or
mov
psraw
mov
sbb
mov
or
in
out
mov
(bad)
mov
hlt
xchg
push
mov
jo
mov
mov
mov
xor
mov
jb
rcl
fcom
ret
in
ficomp
adc
lock
inc
daa
add
pop
cmp
jo
pop
or
push
jmp
sub
pop
not
ins
pop
push
mov
xor
scas
sbb
and
mov
outs
cmp
aam
mov
inc
(bad)
pop
sub
(bad)
dec
(bad)
mov
cmp
push
sub
sub
movs
out
xlat
cwde
mov
loope
mov
add
add
ret
push
inc
ins
std
add
xor
daa
cdq
jg
test
cld
add
push
xor
jge
mov
adc
jbe
pop
jmp
mov
fst
sahf
pop
pop
int
xchg
mov
xor
mov
cmp
sub
dec
dec
jle
adc
sbb
pop
adc
pop
cmp
jne
inc
iret
mov
aad
xchg
aaa
jo
sbb
pop
jb
sub
or
mov
jbe
mov
mov
jae
clc
mov
xor
push
popf
pop
mov
cmp
cmc
add
mov
js
cmp
mov
sbb
js
inc
pop
icebp
dec
pushf
test
movs
cmp
push
push
mov
out
add
dec
xchg
(bad)
mul
push
xchg
pop
xchg
add
push
xchg
sbb
mov
and
into
jecxz
dec
or
test
loopne
cmp
push
out
pop
cmp
mov
pop
push
das
in
dec
dec
in
mov
fcomp
daa
sub
sahf
fsubr
(bad)
pop
mov
lods
outs
sti
aad
outs
xchg
mov
adc
mov
xchg
into
(bad)
pop
repnz
add
push
iret
add
std
push
das
arpl
jae
jnp
pop
xor
lahf
ins
mov
xchg
mov
push
inc
les
jno
and
out
fsub
retf
icebp
rcr
arpl
mov
add
fcmovu
iret
mov
mov
enter
pop
or
add
push
dec
mov
outs
mov
and
cmps
neg
xor
sbb
sub
pop
repnz
sbb
out
adc
push
test
sbb
xchg
xchg
jg
daa
mov
adc
adc
in
movs
cmps
mov
fsubrp
ins
in
inc
(bad)
cmp
jb
movs
stos
xchg
ss
push
mov
(bad)
enter
jle
jecxz
sbb
mov
cld
(bad)
adc
(bad)
lock
(bad)
(bad)
popa
loopne
call
xor
aad
inc
inc
fwait
jmp
call
iret
xor
cmps
add
fidivr
jge
push
lahf
xlat
sub
cmp
inc
js
pop
clc
(bad)
dec
neg
inc
ja
in
(bad)
leave
shl
xchg
movs
and
nop
bound
fst
ja
and
and
lahf
aaa
fimul
fst
jle
stc
cmp
xor
(bad)
stc
add
cdq
cdq
loope
pop
xor
out
jl
aad
pushf
and
out
inc
push
(bad)
adc
icebp
jmp
or
sub
cdq
push
mov
cmp
jg
push
jmp
cmovp
stos
xor
adc
(bad)
jmp
cmp
stc
scas
inc
push
test
inc
xchg
lods
shr
hlt
hlt
fsubr
sbb
dec
xchg
imul
shl
mov
aas
(bad)
popa
leave
push
mov
pop
int3
mov
and
loope
fs
ret
inc
cmp
lds
pop
xchg
shl
pushf
ins
movs
inc
sub
mov
mov
lods
add
iret
int
lods
aas
out
in
xor
outs
push
mov
jns
mov
mov
and
push
outs
int3
xchg
lds
pop
add
pop
lahf
inc
inc
lods
adc
and
cmp
jge
push
in
xchg
les
ror
push
jp
xor
mov
mov
add
outs
lea
pushf
(bad)
(bad)
lea
fldenv
push
dec
mov
cmps
mov
xchg
push
fsubr
cld
push
add
mov
jp
mov
pop
and
and
jne
cmps
push
das
repz
icebp
mov
inc
lock
fcmovnbe
nop
pop
xchg
jl
fistp
imul
loop
aam
or
shl
cmps
push
ins
loopne
dec
sar
outs
mov
fldenv
je
adc
mov
mov
jmp
into
outs
mov
repz
xchg
pop
xor
repz
adc
xchg
cmp
sub
and
pop
dec
xor
iret
inc
cwde
push
or
sar
scas
stc
adc
and
and
xchg
xchg
cdq
(bad)
dec
mov
and
retf
out
push
loope
mov
xor
popf
xchg
push
stos
xchg
ficomp
ins
stc
dec
retf
scas
aad
xchg
push
sub
adc
btr
cld
sbb
cs
jo
loope
xor
pushf
retf
adc
in
mov
add
inc
daa
fnsave
cmp
and
pop
xor
ins
cwde
or
mov
sub
(bad)
mov
int3
pop
out
div
mov
pop
ds
cmp
hlt
ins
outs
lock
xchg
rcl
movs
data16
push
repz
xor
push
push
push
cmp
sbb
push
out
and
je
ss
in
push
push
test
fnstsw
xor
mov
push
sub
(bad)
retf
daa
iret
ds
jb
inc
pop
mov
push
push
xchg
inc
and
lods
leave
arpl
ins
sbb
xchg
add
sub
lahf
and
mov
push
jae
jae
xchg
or
stos
push
into
test
mov
js
or
xchg
add
shl
jb
jl
jne
push
into
mov
dec
and
test
cmc
push
stos
mov
rcr
fild
iret
arpl
es
sahf
cdq
bound
sbb
fwait
popa
lods
aas
clc
jo
cmp
jns
mov
pushf
inc
ret
dec
ss
test
(bad)
adc
ins
dec
jb
cli
pop
push
push
and
add
sub
xchg
scas
aaa
aam
xor
push
movs
cmps
pop
jmp
sbb
cmp
pop
ficomp
cmp
mov
jp
adc
cmp
lock
fcomp
add
jno
fwait
les
cmp
or
xchg
sbb
std
xchg
push
and
and
(bad)
xchg
cmp
pop
adc
dec
out
jl
xor
cmc
outs
movs
and
mov
arpl
cmps
out
outs
pop
iret
es
loope
push
loopne
push
in
jp
jecxz
cmp
or
add
loop
xor
push
bound
jnp
leave
sbb
or
push
outs
mov
mov
add
adc
jge
pop
pop
(bad)
xor
or
and
nop
jl
inc
sbb
sar
and
je
add
in
xchg
push
nop
dec
mov
iret
outs
sbb
ror
call
ds
inc
ffree
and
jb
fs
xlat
push
(bad)
and
xchg
fimul
mov
sub
cdq
cmp
clc
fucomi
ficom
xchg
clc
cmp
cmp
fwait
add
or
cmps
jb
adc
loop
aam
push
sub
jge
mov
(bad)
enter
(bad)
aad
push
jo
and
retf
inc
cmp
ucomiss
retf
pop
mov
sbb
mov
into
adc
xor
jl
mov
shl
add
(bad)
into
rol
dec
repz
int3
mov
mov
(bad)
iret
jb
mov
add
bound
out
jle
mov
or
dec
or
xchg
sbb
jecxz
sbb
lods
test
arpl
mov
in
pop
dec
adc
inc
cmps
mov
jge
mov
mov
arpl
cmp
sahf
add
or
jb
fisubr
and
scas
popf
or
mov
mov
cmps
xor
pop
jae
jo
push
movs
sub
idiv
pop
xor
mov
push
pop
jns
sbb
ds
xchg
jo
or
iret
push
cmc
mov
in
test
push
stos
sbb
jl
je
ror
xor
je
and
aam
cmp
(bad)
or
pop
xor
(bad)
push
in
iret
dec
inc
or
jle
add
pop
je
cmps
(bad)
int3
test
add
xchg
out
jg
mov
pusha
push
dec
repnz
std
cmp
xor
das
(bad)
pop
cld
dec
mov
imul
add
pop
imul
jl
loop
cmp
fwait
or
sbb
test
stos
into
movs
lods
jnp
mov
in
xor
pop
ins
sub
sbb
outs
sbb
xchg
jb
fstp
iret
mov
test
mov
sar
rcr
dec
and
(bad)
bound
fs
jno
lahf
pop
sub
xor
and
clc
data16
mov
push
dec
push
call
sub
xor
jmp
ret
les
das
jl
je
loopne
cmps
sub
xchg
adc
int3
jb
mov
rcr
sbb
dec
push
gs
inc
int
push
in
mov
dec
xchg
xlat
dec
xor
adc
(bad)
xlat
aaa
adc
dec
pusha
and
fst
sbb
push
mov
pop
xor
outs
jne
sti
sbb
add
jmp
retf
xor
xchg
(bad)
xor
arpl
rcr
add
xor
xchg
mov
jmp
inc
cmp
imul
lods
or
jb
dec
inc
sbb
cmps
ins
daa
jns
sub
cmp
or
ja
sti
jecxz
xor
clc
cs
mov
sub
inc
mov
int3
cmp
mov
scas
push
push
fild
dec
lods
adc
xchg
popa
mov
adc
inc
repz
or
pushf
enter
mov
out
sub
out
push
adc
call
rol
ss
ret
daa
leave
xor
lods
add
add
repz
mov
adc
outs
push
js
mov
and
dec
enter
sub
stos
mov
(bad)
xchg
aad
push
pop
xor
popa
inc
inc
fldcw
jge
aas
sbb
test
jno
shr
popa
xchg
cli
les
ins
retf
pop
or
inc
and
sbb
and
movs
bound
sbb
xchg
lods
aas
daa
ficom
out
pop
sbb
(bad)
xor
and
out
dec
dec
and
cmp
scas
inc
lods
sub
iret
enter
lock
xor
stos
lock
or
mov
nop
jbe
ins
dec
mov
push
sbb
sbb
cmp
cmps
mov
xor
fstp
sbb
push
mov
aam
cmc
clc
call
xor
not
test
lods
out
bound
int
mov
sbb
xchg
dec
push
cmp
ja
test
jecxz
ss
ins
and
and
out
fwait
adc
test
mov
dec
inc
out
pop
add
in
out
rcl
pop
(bad)
shl
adc
mul
sbb
add
jae
fisttp
bound
add
jns
jge
mov
sbb
sub
aam
stos
sti
xchg
xor
sbb
jno
aaa
div
jo
cld
sti
dec
push
(bad)
sbb
or
and
add
rcr
dec
xlat
push
ltr
fnstenv
mov
mov
jle
inc
adc
ins
pushf
cli
test
ficomp
jmp
loop
push
and
mov
xor
gs
xor
sub
aaa
sub
mov
lock
scas
loope
leave
mov
fstp
jge
sbb
sbb
sbb
fs
(bad)
cli
ret
mov
fs
and
adc
(bad)
sti
fs
push
mov
dec
add
adc
dec
adc
jnp
jl
fstp
call
pusha
or
fs
xchg
retf
ror
inc
js
clc
dec
add
cdq
dec
push
adc
int3
std
cmp
ins
mov
push
xor
jecxz
cld
std
adc
push
sub
data16
pusha
aaa
and
jg
mov
aas
sbb
repnz
js
or
pop
mov
lahf
sti
dec
out
outs
cmp
in
pop
dec
outs
pop
pop
es
xchg
cli
xor
and
push
sub
add
mov
or
addr16
jg
jmp
ins
stc
sbb
mov
outs
loopne
(bad)
push
inc
nop
aas
aad
and
mov
arpl
mov
lods
sub
repnz
sub
dec
ret
mov
out
in
push
adc
add
add
cmps
movs
adc
pop
aad
bnd
pop
sbb
loop
in
ja
cmp
iret
push
cs
scas
jmp
xchg
and
jo
mov
push
add
clc
rcr
sbb
mov
ret
xor
xchg
xbegin
and
add
jmp
stos
sub
inc
fldenv
and
mov
ror
jbe
mov
fwait
cmc
out
mov
inc
mov
test
ret
cmp
pop
repnz
push
(bad)
sub
leave
fbstp
xchg
pushf
mov
and
pop
outs
in
cli
push
mov
mov
pop
sbb
leave
in
scas
rol
je
add
pop
jno
adc
out
push
imul
and
aaa
push
jle
mov
in
jb
test
sbb
inc
add
popa
jae
fwait
jmp
retf
or
adc
arpl
out
push
retf
arpl
adc
cli
and
out
loop
neg
lods
push
cli
pop
xchg
inc
fidivr
mov
pop
and
retf
loopne
out
pop
mov
fdivr
jl
xor
add
dec
bound
gs
dec
call
xor
(bad)
xor
adc
mov
cmp
inc
gs
(bad)
push
xchg
ins
jb
or
mov
cld
pop
pushf
push
mov
jecxz
daa
(bad)
(bad)
adc
(bad)
rcl
int
pop
pop
out
cmps
jmp
ins
push
cmp
cmp
sar
shr
push
mov
shl
and
add
fistp
xchg
jge
mov
sub
and
stos
cmp
dec
jbe
sti
xchg
sbb
pop
dec
int
xchg
lock
adc
sti
pop
aas
jno
sub
sti
push
gs
mov
adc
mov
jbe
mov
push
mov
sbb
add
pop
das
sub
pop
test
outs
push
adc
test
or
addr16
xchg
mov
xchg
ds
repnz
lds
sbb
cmc
jae
arpl
inc
stc
or
into
jmp
repnz
es
movs
clc
sbb
inc
adc
cmp
(bad)
and
push
ins
pusha
mov
mov
sub
mov
and
sub
mov
jl
mov
sbb
or
shl
dec
hlt
inc
je
fs
sub
lds
cmps
out
ficom
dec
mov
cli
test
aaa
bswap
daa
mov
sbb
out
mov
add
mov
xor
adc
gs
popa
and
int3
jno
(bad)
push
(bad)
loopne
dec
push
xlat
loope
sbb
xchg
popf
shr
test
into
iret
push
cs
mov
cmps
mov
stos
cdq
add
mov
das
out
aaa
gs
ss
jno
adc
xchg
xchg
retf
pop
mov
test
xor
cdq
pop
jmp
ins
or
fdivr
add
push
cmp
adc
scas
cdq
add
fs
sbb
jmp
sub
mov
mov
xor
pop
add
pusha
adc
cli
(bad)
cmp
inc
add
call
lea
scas
ins
fild
sub
sub
loope
push
das
dec
fld
addr16
aam
jge
mov
xchg
lea
mov
add
jg
in
stos
add
mov
jmp
cwde
mov
add
dec
mov
sub
sub
icebp
mov
mov
or
pop
push
pusha
jne
mov
sub
mov
mov
xor
icebp
jnp
pusha
or
mov
int3
(bad)
mov
lds
outs
jne
ja
push
data16
ror
(bad)
mov
int
shl
inc
push
xor
push
fwait
mov
push
stos
pop
jmp
out
mov
imul
cmp
mov
test
dec
and
in
jnp
fsin
(bad)
cmp
adc
imul
cdq
push
cs
add
movs
jbe
mov
js
test
or
fmul
cmp
ror
xor
cdq
repnz
movs
jecxz
xchg
or
test
sbb
and
cmps
stos
dec
xor
adc
or
aam
mov
push
aas
loopne
sbb
mov
push
mov
pop
xchg
pop
jmp
scas
les
mov
jbe
imul
imul
sub
leave
outs
sbb
inc
xchg
jmp
mov
or
or
jo
mov
jmp
movs
cmps
sbb
outs
push
xor
jne
pop
xor
icebp
mov
inc
shl
mov
inc
dec
inc
das
cmp
test
pop
cmp
mov
dec
int
push
cmps
lods
inc
scas
test
fwait
add
push
cmp
cmp
jns
or
dec
pusha
rcl
pop
adc
jno
in
mov
jne
add
pop
mov
fld
adc
jp
sar
add
push
mov
addr16
(bad)
daa
(bad)
pushf
xor
pop
std
push
jb
xchg
inc
xchg
fiadd
ret
jnp
mov
push
jnp
cdq
int3
pushf
or
aad
out
xchg
cmp
sbb
inc
jle
mov
pop
push
mov
jecxz
push
push
push
lods
dec
stos
inc
pop
mov
cmp
cdq
inc
ins
or
push
xor
loop
cs
mov
xor
scas
ret
cmp
xor
xor
inc
cmp
popa
shl
cmc
jnp
std
mov
adc
mov
sbb
repnz
aas
add
arpl
jns
hlt
xchg
lahf
sub
mov
int
cmp
mov
cmc
ret
mov
rcr
mov
test
aam
sbb
out
int
pop
xchg
sub
js
jecxz
adc
adc
sti
fisub
xor
mov
adc
fadd
mov
ds
sub
sub
mov
enter
pop
pop
out
jmp
outs
cmp
pop
dec
ja
fcmovu
fs
test
mov
in
or
inc
mov
xor
mov
lock
dec
sahf
and
cmp
push
sub
xor
mov
or
jle
jne
cwde
lods
adc
adc
scas
int
repz
sub
cs
mov
dec
mov
retf
or
mov
or
or
lods
out
retf
popa
rcr
xchg
out
ret
jo
rcr
dec
jbe
sub
or
pop
cmps
inc
and
mov
cmc
pop
ja
dec
mov
mov
inc
add
push
push
jmp
lahf
movs
jecxz
and
sbb
sub
mov
repz
xlat
xor
push
icebp
aad
call
addr16
add
xor
test
or
sti
ds
loope
lea
xchg
push
push
jge
stos
xor
jns
sbb
ins
pop
mov
push
cmps
fiadd
mov
nop
xchg
arpl
jge
cwde
mov
xchg
ret
push
repnz
jge
xor
pop
jg
fs
cmp
mov
xchg
cmp
scas
or
pop
mov
sub
ds
mov
push
sahf
std
fld
aad
xor
xchg
mov
push
cld
dec
ins
cwde
(bad)
imul
sbb
mov
xchg
mov
cmp
pop
dec
push
dec
pop
push
mov
jmp
mov
mov
push
cmp
mov
sti
scas
xchg
lods
out
mov
test
pop
sar
lea
call
sbb
push
(bad)
aad
test
mov
cmp
pop
je
in
es
adc
lahf
pop
xor
cwde
call
mov
jecxz
icebp
jmp
(bad)
repz
jl
inc
xchg
cmp
imul
in
(bad)
mov
jns
inc
test
gs
repnz
dec
mov
test
shl
imul
scas
arpl
das
sbb
ror
sbb
aas
stos
jmp
cwde
pop
sbb
out
mov
dec
dec
inc
add
jmp
cmc
cwde
in
jge
out
or
pop
fwait
dec
loop
cmps
dec
scas
loop
and
cmps
mov
sbb
popf
jb
pop
nop
push
and
inc
movs
xchg
pop
es
cmc
je
add
ins
retf
mov
pusha
adc
cmps
push
test
push
outs
xor
pop
xor
push
pop
jne
mov
xor
cmp
sub
mov
(bad)
outs
and
and
push
sbb
jmp
cdq
and
pop
push
add
std
xchg
shl
mov
(bad)
jl
cld
sub
pop
and
cld
rcr
adc
repnz
dec
fwait
loope
mov
ins
mov
mov
fidiv
jge
or
adc
in
mov
movs
lock
fimul
or
pop
dec
daa
ins
dec
inc
cmp
jne
aad
outs
stc
call
in
pop
or
out
cmp
xor
xchg
bnd
pop
cmp
fst
dec
push
adc
add
inc
inc
xor
inc
jl
push
ins
jecxz
rcl
dec
adc
push
or
je
xchg
pop
ror
pop
fcomp
ja
ret
or
cwde
dec
or
scas
adc
pop
call
push
push
lahf
jmp
cmp
jle
jo
cwde
push
pop
cmp
test
(bad)
loope
xchg
aam
mov
push
xor
aaa
sbb
pop
ins
aad
int
popf
sahf
fisub
inc
jle
stos
and
jo
jmp
je
sbb
push
call
jge
sti
xor
xchg
sub
inc
mov
jp
mov
adc
lds
call
xchg
mov
in
daa
add
scas
cld
ret
cwde
punpcklbw
mov
movs
cmc
mov
bnd
inc
or
cmp
adc
(bad)
fstp
loopne
fwait
push
mov
sbb
add
out
mov
inc
or
jl
push
mov
push
cdq
(bad)
jmp
and
movs
and
aaa
push
pop
push
xchg
push
stc
or
shl
xor
sub
mov
jb
add
add
pusha
dec
cmp
test
das
idiv
and
xchg
arpl
(bad)
arpl
je
push
ficomp
or
movs
(bad)
pop
add
and
stos
mov
pop
arpl
pop
call
pop
xor
stos
hlt
add
fcmovnu
or
dec
jmp
sbb
sub
jle
lock
xor
enter
jp
dec
aaa
dec
pop
add
mov
hlt
jmp
sub
dec
push
cmp
fstp
je
add
mov
leavew
add
pop
cs
fst
push
loope
jmp
fiadd
out
popa
push
shl
(bad)
push
sub
xor
cs
jg
mov
lahf
bound
lahf
sti
cmp
enter
pop
cmps
es
or
fiadd
pop
pop
mov
cld
xor
pop
call
scas
inc
xchg
xchg
int3
dec
cmps
into
nop
pop
btc
jp
cmps
pusha
push
pop
mov
push
adc
rcr
xor
shl
mov
xor
sub
mov
into
pop
(bad)
cld
outs
in
xchg
adc
xchg
lock
dec
adc
int
sbb
inc
xor
loopne
add
out
and
pusha
(bad)
test
pop
rep
xor
cwde
adc
test
lods
inc
dec
mov
adc
sub
fs
mov
fld
pusha
mov
rcr
idiv
lock
jbe
mov
fld
rol
imul
add
or
sub
iret
lods
xor
dec
xchg
push
adc
(bad)
jge
cmp
data16
cld
inc
popf
add
icebp
adc
shl
pop
xor
cmp
cwde
scas
xchg
retf
mov
dec
pop
dec
(bad)
mov
int3
(bad)
adc
int3
inc
mov
rcr
in
xlat
mov
pop
icebp
data16
aad
aam
mov
cwde
sub
jnp
fldcw
adc
fs
dec
cwde
cmp
jnp
xchg
ret
das
adc
xor
sub
cmp
jnp
enter
fld
lds
gs
add
int
pop
out
inc
gs
in
push
outs
dec
and
jecxz
xchg
(bad)
and
adc
inc
push
xchg
mov
pop
call
in
in
mov
mov
or
(bad)
ss
inc
repnz
adc
pop
std
stc
mov
fnsave
add
jns
test
xchg
repz
les
jp
mov
cmp
sbb
pusha
lock
cwde
mov
mov
push
pop
iret
jmp
mov
mov
cmp
xor
stc
or
fwait
mov
add
(bad)
rcl
cmp
xchg
jecxz
push
add
pusha
ficomp
inc
dec
pop
mov
xchg
adc
sub
call
dec
hlt
mov
es
cmp
adc
arpl
and
stos
mov
sbb
jo
mov
adc
pop
out
mov
outs
adc
cmp
lods
cmp
ja
ds
aas
xor
ins
sahf
imul
test
pop
lods
push
add
jle
or
dec
sub
sbb
pop
and
push
daa
or
fiadd
add
cdq
fs
adc
ja
(bad)
fisttp
aam
scas
mov
add
jp
fcmovnb
mov
xchg
inc
nop
add
sahf
mov
inc
sahf
test
dec
lea
mov
and
nop
aad
sbb
adc
sbb
xor
into
xor
stos
loop
lds
cmps
lock
cmps
int
cdq
js
stos
scas
sub
mov
icebp
jmp
fdivr
cli
fwait
cli
aad
in
cmp
mov
xor
loope
test
sbb
adc
cmp
mov
xchg
mov
or
inc
dec
pusha
adc
pusha
xchg
mov
mov
dec
sbb
add
gs
lock
cmp
cmp
dec
leave
pushf
and
adc
inc
jo
sbb
or
lds
and
nop
cmps
mov
outs
push
imul
jmp
add
(bad)
loope
mov
cmps
(bad)
adc
cli
ins
xchg
int
push
inc
jmp
jmp
mov
push
(bad)
cmps
xor
loope
das
sbb
jo
out
loopne
push
and
into
cmp
dec
inc
std
pop
addr16
jl
mov
and
adc
mov
clc
push
cmc
push
div
mul
mov
hlt
mov
cld
xchg
add
cmps
call
pusha
xor
dec
in
push
pop
mov
sahf
add
mov
push
xchg
das
push
test
push
inc
aaa
fcmovbe
jge
mov
cmp
rcl
xor
and
cmp
pop
ins
in
xor
add
and
(bad)
cwde
xor
cdq
clc
imul
test
mov
jns
dec
mov
cld
paddsb
jmp
(bad)
sub
sbb
push
repz
jns
fdivr
xor
iret
cld
sbb
adc
fistp
xor
test
jge
call
into
clc
sub
dec
ja
mov
mov
(bad)
mov
adc
jmp
pop
sar
test
fwait
pushf
mov
add
retf
stos
mov
shl
js
stos
jg
cmp
and
(bad)
ins
xor
sub
data16
sahf
jp
xchg
rcr
mov
lock
lahf
ret
stos
xor
xchg
push
dec
cmps
xlat
je
mov
push
in
js
inc
mov
cmps
mov
jp
les
int
and
sub
out
and
mov
and
mov
pop
adc
xchg
push
push
iret
push
imul
es
shl
xchg
inc
hlt
sahf
loopne
aam
fdiv
push
sub
xchg
push
mov
sub
pop
pop
mov
push
cmps
ret
scas
fdiv
enter
or
cli
sbb
call
nop
pop
lahf
xor
loopne
fnstcw
pushf
cmp
ja
add
add
fstp
enter
mov
sbb
adc
xchg
mov
cmp
scas
jl
daa
cmc
push
dec
hlt
test
add
rcl
or
and
into
pop
push
pusha
aam
add
ret
ins
in
pop
push
sbb
jl
lods
xchg
dec
dec
adc
ror
cwde
pop
pop
lods
mov
dec
loop
push
adc
xchg
int
rol
add
call
das
out
xchg
inc
shr
daa
popa
ror
push
shl
fs
arpl
mov
xor
loop
ins
ins
ret
cmp
iret
xlat
cmp
mov
jne
mov
push
leave
inc
jbe
lods
aas
(bad)
gs
cmp
adc
int
push
sbb
mov
std
jb
mov
leave
aas
movs
jno
sub
stc
push
fstp
push
dec
int3
ja
hlt
push
enter
rcl
rcr
adc
mov
cmp
pop
mov
(bad)
cdq
sub
pmuludq
or
pop
dec
fwait
out
fs
sub
and
inc
mov
mov
dec
pop
ds
(bad)
xlat
dec
les
add
in
inc
xchg
movs
and
fsubr
pop
int
mov
push
das
jmp
mov
xchg
adc
in
push
or
enter
test
lods
ins
pop
ret
dec
push
test
shr
fwait
sub
add
not
js
pop
cmp
jl
loop
jbe
dec
loop
jae
cdq
ss
(bad)
pop
cmp
pop
fistp
retfw
aas
movs
cmp
add
test
sub
out
pop
xor
repnz
dec
int
mov
adc
inc
sub
lahf
lods
fistp
fadd
mov
sub
jns
aam
push
cdq
rcr
or
ins
pop
fild
pushf
jecxz
call
jae
std
xchg
nop
sbb
jnp
dec
cmp
pushf
out
stos
test
pop
inc
je
stos
es
into
mov
cmp
add
lahf
jo
mov
xchg
js
inc
and
retf
hlt
cmp
xor
inc
out
jae
mov
ror
js
enter
mov
pop
aad
std
mov
push
sub
pop
jg
sar
lock
and
call
cmp
add
int3
mov
cwde
and
mov
push
mov
push
add
loop
clc
sub
jb
mov
daa
mov
(bad)
call
ds
jecxz
(bad)
xorps
cmp
nop
std
mov
inc
movs
dec
int
cmps
or
in
add
into
push
inc
xchg
cmp
mov
cli
mov
(bad)
mov
xchg
push
inc
call
mov
outs
lea
das
fiadd
mov
fs
outs
mov
mov
fild
shl
bound
leave
xchg
add
clc
test
cdq
pop
clc
and
pop
xor
fcomp
mov
inc
cs
cmp
adc
xor
sbb
xchg
arpl
inc
add
dec
shl
inc
mov
idiv
test
lods
(bad)
shr
sahf
fisubr
ins
stos
pusha
leave
xchg
out
idiv
and
retf
mov
pop
ds
mov
cli
shl
call
add
push
jle
jns
xchg
imul
xlat
pop
loopne
pop
fisubr
test
mov
mov
rcr
fstp
or
iret
add
or
pop
sub
mov
stos
pusha
neg
xlat
dec
or
mov
jo
cmc
push
fwait
mov
dec
mov
cmps
sbb
lock
jmp
into
push
xor
cld
(bad)
aas
mov
into
pop
adc
xchg
pusha
cdq
sub
push
out
cmc
arpl
fst
xchg
stc
adc
lods
mov
repnz
out
sub
dec
ss
lea
mov
cmps
gs
sbb
lods
xor
jno
xor
lods
lahf
dec
push
in
lods
mov
retf
jl
stos
and
repnz
in
ins
mov
jle
add
stos
cmp
mov
in
lock
and
xchg
test
or
xlat
adc
loop
bound
lods
mov
sar
mov
and
cmp
or
bound
sahf
loope
push
lds
mov
aaa
or
mov
jns
ror
xor
mov
adc
sub
sbb
xor
push
imul
jne
xor
cmp
lea
push
cmp
pop
add
pusha
sar
hlt
mov
sub
bnd
lods
int3
mov
jne
call
arpl
ret
or
push
pop
pop
aam
pop
push
ret
mov
fcmovne
mov
sbb
mov
ror
sub
and
shl
dec
jo
gs
xor
in
sub
pop
aaa
test
scas
(bad)
sbb
add
pop
jo
in
cwde
push
lahf
test
fs
inc
ss
xchg
dec
out
push
sahf
adc
sub
in
std
mov
enter
lods
adc
std
add
xchg
popf
jae
test
(bad)
imul
xchg
je
rol
pop
outs
in
frstor
movs
mov
jge
mov
bound
push
mov
ds
add
fsubr
cmp
inc
lods
inc
outs
xchg
popa
mov
sub
xchg
inc
dec
sti
int3
lods
xchg
push
adc
mov
fwait
rol
cmp
es
cmc
jl
or
mov
cdq
pop
mov
adc
inc
ror
mov
int3
(bad)
call
shl
fcmovu
jmp
dec
cmps
mov
pushf
add
fmul
(bad)
pop
lods
ins
out
enter
in
js
cmp
rol
mov
fldcw
mov
sar
sub
outs
jecxz
xchg
jns
daa
rcr
pop
push
inc
sahf
xchg
icebp
pop
retf
rcl
jp
add
mov
gs
pop
in
jle
movs
jmp
fistp
je
xchg
and
call
movs
jl
inc
test
enter
mov
sub
mov
ror
push
test
mov
sub
xchg
xor
mov
ins
lods
aad
jne
push
repnz
sbb
and
fs
sbb
cwde
xlat
jl
nop
mov
xor
cmp
stc
test
cld
cmp
cmp
and
outs
outs
fs
das
cmp
das
inc
scas
sar
push
addr16
cmps
jle
fcom
dec
out
jecxz
jo
xor
loopne
pop
and
jmp
add
push
or
shr
cli
test
pop
cmps
xchg
jb
das
pop
sbb
gs
push
dec
cmp
jo
es
xchg
shl
push
and
lea
push
in
imul
mov
jbe
cmps
enter
repnz
sahf
xchg
sbb
inc
fsubrp
xlat
leave
out
(bad)
or
xor
push
(bad)
cmp
stc
mov
sub
mov
lahf
ret
rcr
cmps
jecxz
cmp
xchg
mov
icebp
fwait
ret
iret
xlat
(bad)
leave
or
push
sub
adc
add
leave
scas
sbb
sbb
inc
scas
push
pop
icebp
mov
push
ret
mov
xor
xchg
fisttp
int
fwait
aad
adc
cmp
xchg
mov
dec
push
xor
add
outs
addr16
fldln2
jecxz
inc
fwait
dec
lea
mov
dec
sub
inc
cmp
pop
sbb
fs
and
clc
pop
ds
int3
mov
mov
fldcw
iret
and
lea
and
push
mov
push
cs
jmp
cmc
xlat
push
sti
retf
dec
cs
fisttp
movs
vpshufhw
imul
jbe
xor
rol
mov
stos
mov
mov
dec
data16
fld
fidivr
or
icebp
sub
fwait
push
cmp
mov
rol
and
or
stc
scas
dec
rcl
or
int
sbb
pop
(bad)
lods
jg
sub
cmc
mov
ror
clc
stc
test
inc
xor
popa
cmps
arpl
out
aas
shl
ret
mov
jg
stc
neg
rcr
mov
add
and
mov
hlt
jle
in
aam
iret
fbstp
mov
fs
out
xchg
or
or
push
fist
enter
xlat
mov
ins
dec
ret
mov
and
sar
or
mov
mov
jne
mov
mov
popa
in
icebp
out
sub
inc
mov
adc
loop
cmps
inc
rol
jbe
bound
sar
pop
mov
push
mov
and
retf
inc
stos
popf
mov
pop
or
inc
mov
scas
int3
dec
sub
scas
push
cmp
and
(bad)
sar
es
std
add
xchg
popf
and
scas
repnz
jmp
out
xchg
jnp
imul
stc
add
mov
lahf
mov
mov
and
fnstenv
cmp
inc
and
(bad)
retf
sbb
out
add
movs
mov
add
pop
(bad)
je
icebp
cmps
cwde
retf
jp
jnp
repz
pop
iret
sbb
loope
and
lods
mov
jnp
in
xor
add
aaa
dec
or
add
sbb
dec
pushf
in
int3
inc
adc
dec
sbb
sbb
sar
outs
stos
mov
push
cs
mov
jne
stos
out
jecxz
sub
sub
ins
out
aam
mov
mov
nop
jno
and
mov
mov
sbb
lods
push
jbe
dec
mov
loop
in
xchg
push
and
cmp
(bad)
(bad)
js
ret
loop
les
aas
mov
inc
nop
adc
add
fdivr
(bad)
movzx
dec
ins
push
push
xchg
push
outs
movs
or
sahf
adc
loopne
cmps
cvtpi2ps
push
aaa
xchg
or
movs
retf
lods
xor
adc
arpl
jecxz
ss
ss
mov
fld
jno
cmp
fs
bound
cmp
sbb
rcr
mov
mov
aaa
sub
or
enter
xor
(bad)
sbb
jg
in
push
jno
test
pop
js
xor
repz
push
rcl
push
xchg
in
call
jo
jp
leave
popa
jae
mov
stos
cs
(bad)
jbe
cmp
add
pop
cmp
or
push
mov
js
shl
or
pop
retf
dec
mov
mov
popa
pushf
loop
dec
push
xor
or
inc
ret
jmp
retf
xor
int3
sub
add
popf
ja
ins
nop
and
daa
(bad)
mov
dec
dec
pop
and
mov
stos
dec
xor
xchg
pusha
mov
pop
loopne
jnp
mov
mov
mov
outs
pop
xchg
stos
pop
into
mov
mov
and
popa
or
sar
enter
clc
pop
adc
test
and
cmp
out
xor
jmp
jno
dec
test
imul
cmp
jl
div
out
mov
and
cmp
sahf
push
fidiv
mov
push
mov
and
das
pusha
sti
clc
lock
test
pop
retf
or
repz
cmp
add
jno
(bad)
jle
data16
push
cmps
dec
aas
call
inc
les
and
js
fiadd
push
(bad)
cld
jmp
cmp
call
jl
inc
inc
pop
xchg
out
es
mov
sub
in
cmp
mov
and
mov
fidiv
loopne
jbe
dec
pop
jb
add
xchg
mov
ret
mov
adc
sbb
lds
mov
(bad)
retf
sar
scas
outs
jecxz
sahf
(bad)
push
(bad)
int3
out
movs
into
pop
ss
rcr
out
add
out
icebp
out
stos
inc
arpl
sbb
jb
and
in
clc
fs
sub
pop
ins
add
ins
ret
dec
mov
aad
xchg
pop
pop
and
push
ins
loopne
iret
adc
sub
ja
inc
cmp
sbb
mov
sbb
test
jne
sbb
inc
stc
ret
cmp
scas
(bad)
in
pop
out
cdq
leave
movs
enter
mul
paddsw
out
in
call
cdq
or
mov
jl
dec
jne
data16
push
mov
sbb
in
std
add
sbb
in
sub
in
push
out
dec
pop
xor
push
sbb
retf
add
mov
and
xchg
test
into
adc
cmc
aas
lods
ret
push
ret
cmp
sbb
ret
sub
xchg
adc
rcr
or
movs
mov
lds
pop
jmp
lods
inc
loopne
into
cdq
and
pop
fnstenv
jae
ret
aaa
retf
mov
scas
mov
sbb
mov
pop
inc
fidiv
das
inc
pop
sbb
jp
and
push
hlt
jo
jns
(bad)
pop
push
call
inc
int3
cmps
mov
mov
pop
int
inc
(bad)
jmp
push
out
push
push
sub
ss
popa
pop
dec
push
add
into
mov
push
push
imul
xor
icebp
and
les
or
add
ja
dec
lods
sub
mov
ins
and
lahf
mov
in
sti
jae
mov
push
mov
movs
jp
pop
xchg
inc
xchg
push
cmps
cdq
xlat
loopne
mov
or
pop
xchg
push
mov
dec
jg
mov
xchg
mov
sub
fwait
repz
mov
adc
or
adc
rcr
call
cmp
inc
cld
xchg
mov
xor
inc
scas
fxch
push
pop
and
jne
and
aad
push
out
inc
dec
mov
iret
jno
sub
cdq
test
gs
adc
dec
fiadd
sbb
push
cmp
mov
add
std
xchg
pop
(bad)
out
mov
popa
and
fidivr
pushf
xor
or
inc
fdiv
int3
repnz
cmp
pop
pop
lahf
pop
sbb
sar
jmp
and
retf
adc
pop
and
into
xchg
fisub
pusha
mov
add
cld
call
push
pop
or
sub
pop
(bad)
cmc
mov
ins
and
sahf
inc
icebp
xlat
inc
fst
aad
shl
es
xchg
sbb
dec
addr16
sub
mov
inc
lahf
fwait
adc
mov
or
cwde
mov
jnp
(bad)
mov
lock
lods
adc
adc
push
jo
out
bound
(bad)
popf
and
vmread
mov
xchg
ins
dec
cdq
fdivp
data16
sub
hlt
inc
or
rcr
jl
push
jg
cmc
add
cwde
sbb
add
dec
icebp
mov
movs
dec
xchg
test
cmp
mov
push
jp
xor
jno
fmul
test
div
xor
loop
mov
add
sbb
cmp
fnsave
push
adc
out
les
fist
shr
jne
mov
dec
or
ret
inc
in
je
sbb
jge
inc
fldcw
push
jo
cmp
mov
out
call
mov
and
push
ret
cwde
popf
outs
and
sub
in
pop
adc
ja
inc
mov
xchg
cmp
mov
jae
push
adc
pop
or
call
ror
xchg
inc
test
push
jb
mov
outs
add
dec
call
adc
sub
mov
and
pop
repz
je
clc
stos
(bad)
pop
pop
popf
lea
mov
gs
jne
fs
push
fist
iret
add
loopne
ret
test
scas
sahf
cmp
mov
cs
and
bound
in
popa
adc
sbb
cdq
fistp
iret
out
lock
aad
rol
loope
fwait
mov
mov
sub
xchg
mov
fsubp
loope
push
repnz
xchg
push
xor
and
lds
add
xor
xchg
out
cld
mov
ins
push
int
stos
or
sbb
xor
xchg
mov
pop
stc
mov
loope
clc
int
jo
popf
sub
mov
push
call
inc
fisub
into
call
push
sbb
push
je
adc
cmp
in
aas
add
mov
jne
out
clc
jge
out
fsubr
hlt
cmp
sti
adc
in
dec
and
mov
mov
jne
or
sahf
pop
pop
aam
fld
cs
imul
adc
mov
cmps
jno
sbb
sar
add
in
mov
(bad)
out
xor
(bad)
jle
xchg
adc
jecxz
pusha
push
mov
(bad)
popf
lahf
dec
loope
sbb
inc
xchg
mov
mov
push
push
call
cmc
inc
mov
adc
pop
sti
xchg
mov
xlat
dec
fld
adc
loopne
mov
dec
xor
xor
xchg
fsubp
inc
fsub
adc
fild
ror
cmc
inc
sbb
cli
test
js
pop
in
inc
xacquire
loopne
sbb
xchg
ffree
loopne
adc
fs
push
out
push
inc
out
add
xor
adc
xor
out
dec
(bad)
dec
mov
dec
inc
rol
lea
xor
je
or
data16
sub
pop
fs
xlat
ins
sbb
into
sti
dec
sub
rol
xor
rol
fnstcw
cmc
xchg
push
(bad)
add
fsubr
or
call
stos
movs
test
shr
out
and
and
push
pusha
and
lock
cli
adc
(bad)
jl
inc
push
sub
jle
lods
test
out
shrd
pushf
nop
pop
pop
ficom
push
pusha
fidivr
xchg
cdq
aad
fwait
xor
ss
loop
fcomp
jge
adc
retf
cmp
pop
or
xor
pop
imul
pop
cli
cmp
mov
or
inc
jl
sbb
std
das
jbe
loopne
in
xor
test
pop
mov
into
nop
push
sbb
test
and
jae
icebp
pop
inc
mov
ret
fisttp
ds
stos
sbb
inc
mov
mov
sub
les
mov
bound
lods
mov
ins
push
movs
mov
pop
inc
ss
push
clc
sub
ss
sub
or
shl
mov
jmp
out
repnz
stos
mov
cmp
jge
and
add
mov
xor
ss
sar
sbb
dec
sbb
(bad)
ds
and
cmps
mov
movs
nop
xor
arpl
push
dec
mov
ins
bound
daa
mov
(bad)
xchg
adc
jge
dec
adc
(bad)
fcom
push
not
out
int3
adc
cwde
scas
aam
movs
mov
push
shl
dec
sbb
xchg
leave
xor
push
loop
jmp
fs
leave
push
pop
sbb
sbb
cld
xchg
mov
test
cmps
jl
xlat
je
jl
dec
add
xor
mov
sbb
sahf
ja
dec
xchg
scas
loop
test
xchg
aaa
pop
mov
inc
jns
cs
loope
mov
ins
movs
neg
stos
and
jp
into
cwde
cmp
mov
push
push
loopne
mov
(bad)
aaa
mov
mov
ret
mov
xor
in
cdq
pusha
fild
add
or
push
dec
xchg
out
imul
dec
fwait
dec
call
mov
mov
ror
inc
and
cmps
in
cmp
jmp
or
sbb
lahf
or
push
out
mov
in
add
shl
rcl
je
outs
test
ds
pushf
outs
push
out
imul
(bad)
and
push
xchg
call
inc
or
out
(bad)
sub
inc
hlt
out
or
or
or
xor
shr
inc
and
ins
aas
jae
sub
push
xchg
jmp
inc
mov
repnz
add
outs
ret
sbb
(bad)
repz
mov
jo
xchg
test
pop
in
(bad)
leave
bound
(bad)
mov
mov
jae
xor
invd
ret
or
std
(bad)
xchg
push
sub
pop
mov
sub
dec
clc
aam
pop
iret
cmp
xchg
inc
jo
or
enter
push
sbb
xor
shr
movs
sub
pop
xchg
cwde
sahf
jno
pop
movs
(bad)
mov
mov
add
mov
push
ds
out
(bad)
fidiv
mov
sbb
mov
jb
cmp
pop
push
cwde
int
mov
jns
cmps
fstp
jnp
mov
ja
(bad)
(bad)
jnp
mov
iret
and
retf
ds
into
push
repnz
cld
mov
ja
es
or
sbb
repnz
xchg
jp
or
mov
ret
retf
add
addr16
aam
fs
mov
jge
retf
sub
dec
data16
jb
sbb
and
mov
shr
inc
out
and
out
std
adc
adc
fcomp
jp
into
popf
jg
test
sub
mov
mov
fidivr
xchg
cmc
stos
cmp
test
lods
movs
call
inc
jno
in
loope
pop
pop
xor
in
in
mul
or
push
fldcw
push
cmp
ins
sub
sahf
aam
neg
pushf
shl
jno
adc
mov
fcom
dec
mov
movs
cmc
std
pop
cdq
js
pop
push
cmp
mov
add
clc
mov
out
push
jns
inc
into
jl
icebp
out
add
cmp
jne
mov
jno
push
adc
retf
js
push
pop
and
mov
push
pop
ficomp
ds
inc
in
add
sbb
inc
test
sbb
xor
pop
call
cli
cmp
jmp
pusha
lea
lods
shl
arpl
dec
ret
inc
jae
into
out
mov
xor
cs
loope
int3
push
(bad)
scas
or
and
in
addr16
xchg
mov
pop
and
inc
adc
ficomp
push
ins
aaa
xchg
rcl
push
pusha
xchg
add
jecxz
and
loope
aam
into
mov
js
push
jl
dec
out
add
cmp
xlat
push
or
ss
out
and
push
sub
add
dec
in
ret
dec
pop
inc
ins
arpl
out
inc
outs
js
ror
jl
lahf
mov
je
sub
sti
mov
cwde
aam
sbb
xchg
pop
pop
jge
fist
imul
adc
sub
aas
sub
ja
leave
vandnps
pop
push
repz
cld
or
mov
lahf
dec
icebp
sbb
mov
les
in
adc
js
xlat
loop
push
or
movs
xor
clc
(bad)
jl
out
mov
sub
add
pop
in
pop
retf
gs
inc
stos
xchg
icebp
test
in
and
xor
pop
pop
mov
jae
hlt
ja
inc
aad
mov
xchg
fldcw
cmps
pop
push
push
cmp
push
and
js
mov
rcl
bound
je
mov
sahf
cli
lea
push
(bad)
jge
and
push
mov
or
xor
fisub
cs
pop
out
dec
push
xchg
xchg
add
mov
sub
inc
out
mov
lds
adc
fsub
rcl
mov
rcr
fimul
fld
and
inc
fimul
push
xchg
mov
and
cli
jge
cmp
jmp
jg
pop
in
or
ss
jmp
ins
pop
rcr
pop
sub
imul
xchg
movs
mov
mov
je
push
inc
ret
sbb
scas
adc
outs
scas
mul
jb
mov
jns
mov
cmps
shl
fdecstp
dec
(bad)
movs
daa
pop
xchg
cmp
retf
cmp
fs
fisttp
pop
push
or
pop
je
sub
sbb
cmp
sti
push
push
cmp
mov
inc
ret
push
retf
adc
cmp
inc
sbb
sbb
imul
fnsave
(bad)
fld
inc
pop
mov
adc
inc
iret
pop
xchg
out
mov
stos
aam
int3
sbb
aaa
repnz
out
sub
pop
dec
mov
adc
js
add
and
push
push
(bad)
rcl
jns
xchg
aaa
mov
lds
loope
mov
pop
xor
lods
or
arpl
dec
popa
lahf
lea
ret
gs
dec
jmp
jae
aaa
jmp
fbld
xor
icebp
inc
cmps
rcl
mov
imul
mov
and
ret
loope
xchg
pop
or
add
(bad)
mov
add
or
ret
pop
or
(bad)
mov
xchg
int
inc
ins
sbb
xchg
sub
adc
fimul
mov
(bad)
pusha
(bad)
mov
xor
(bad)
je
add
push
push
jae
sub
jle
retf
push
fist
loop
pop
jg
and
cwde
pop
fs
jno
dec
jecxz
push
mov
add
xor
mov
(bad)
dec
and
jp
mov
mov
mov
adc
int3
mov
mov
lea
jns
mov
retf
or
(bad)
outs
repz
repz
jge
jne
aad
sbb
jnp
js
(bad)
in
xor
mov
shr
mov
cmp
ins
mov
lds
fldenv
aam
fild
xor
out
in
scas
fdiv
mov
cmp
sar
inc
jg
outs
and
sub
cmp
pop
and
ret
lahf
dec
pop
dec
imul
mov
ret
ss
adc
mov
inc
xchg
mov
and
dec
cmp
ror
xchg
cs
jp
cmovns
ins
and
push
and
or
(bad)
jb
das
ja
xchg
dec
lahf
push
mov
sub
sbb
and
das
and
inc
test
callw
pop
mov
jge
aad
or
dec
(bad)
in
fdiv
push
jl
fdivr
(bad)
and
out
add
xor
xchg
mov
push
mov
or
out
sbb
dec
pop
and
mov
push
adc
sbb
fsubr
pop
jecxz
loopne
mul
xor
fidiv
cmp
shl
mov
enter
jge
or
dec
cli
shl
scas
sbb
and
arpl
in
xor
adc
mov
(bad)
fst
test
cld
xchg
xor
mov
cmp
test
out
mov
cmp
pop
hlt
dec
sbb
ins
aaa
add
and
adc
(bad)
fidivr
mov
call
mov
es
adc
arpl
dec
arpl
dec
jne
mov
dec
in
ins
mov
into
shl
pop
lahf
pop
push
and
stos
adc
push
jge
add
xor
sbb
jg
mov
(bad)
sbb
loopne
out
das
pop
push
data16
test
adc
ja
push
and
pop
adc
inc
arpl
enter
xchg
scas
sbb
push
sub
mov
sub
into
int
jg
inc
int3
cmps
sbb
clc
xchg
jo
adc
jmp
sub
mov
xor
mov
icebp
mov
and
stos
xor
ror
xchg
add
mov
aad
shl
dec
cs
test
fadd
mov
and
fist
shl
cdq
sub
ret
mov
out
repz
cmp
mov
in
cmp
in
pop
pop
rcl
xchg
jp
cmc
popf
mov
mov
cmp
aaa
fcmovnb
push
(bad)
push
movs
push
addr16
div
xor
repz
jl
inc
mov
nop
in
fnstenv
inc
inc
or
cmc
das
inc
and
mov
loope
mov
cmc
add
cmp
fisub
in
adc
pop
adc
in
popa
mov
sub
rcr
push
and
xor
sbb
xchg
ret
push
retf
jae
(bad)
(bad)
mov
mov
mov
fiadd
test
aad
dec
xchg
xor
enter
daa
cdq
xchg
mov
pop
(bad)
sbb
cmp
jle
dec
dec
icebp
cwde
das
mov
nop
fcmovne
out
inc
pop
out
push
jb
mov
test
out
test
sbb
and
and
or
lds
fidiv
pop
sub
loope
push
aam
sbb
mov
inc
mov
add
mov
adc
xchg
inc
sbb
dec
mov
retf
pushf
lods
mov
jmp
mov
rep
jge
and
xor
cli
repnz
or
add
mov
fbstp
int3
in
hlt
cmp
and
or
out
in
enter
std
(bad)
jmp
fimul
xor
push
push
mov
fmulp
xlat
mov
hlt
add
int3
stc
add
pop
add
xchg
mov
(bad)
xchg
jl
mov
in
or
xchg
out
(bad)
stc
mov
loop
std
mov
cmp
fisub
cmp
jp
push
into
xchg
add
push
mov
or
inc
retf
call
movs
push
sar
fwait
adc
mov
pop
mov
mov
mov
ds
ss
sbb
mov
jno
sub
aam
pop
sahf
fimul
xor
aaa
int
and
push
mov
dec
repz
maxps
fcomp
push
stos
jecxz
mov
mov
adc
fisubr
out
mov
ja
fwait
sub
sub
les
arpl
popf
popf
add
jmp
adc
mov
ja
repnz
rol
ret
loop
in
xor
jle
pop
rcr
sub
pop
sub
pushf
in
mov
cmp
jno
jno
mov
mov
dec
ins
sub
xor
(bad)
xor
mov
mov
aad
or
stos
in
push
cmp
xor
retf
retf
fidivr
(bad)
cmp
push
sub
outs
dec
cmp
aam
data16
repz
pushf
popa
adc
fmul
in
pop
pop
ret
push
dec
push
push
pushf
inc
ret
push
dec
cwde
fsub
inc
(bad)
mov
cwde
cs
movs
addr16
repnz
dec
repz
aas
movs
mov
push
cmps
push
pushf
test
ficom
sar
test
les
and
retf
jo
adc
push
repz
mov
jg
imul
aaa
or
int3
pop
lahf
fwait
add
cs
cmp
sahf
scas
xlat
pop
hlt
cdq
dec
mov
push
in
stos
push
push
ror
jecxz
out
fist
popa
cmp
clc
cmp
xor
imul
and
fiadd
rcl
movs
(bad)
cmp
pop
pushf
int3
xchg
gs
and
or
es
dec
inc
adc
pop
pushf
ret
pop
in
out
movs
inc
adc
cmp
jnp
mov
iret
dec
stos
mov
mov
xchg
stos
jmp
add
xchg
inc
in
mov
jnp
adc
push
jl
mov
jecxz
pop
stos
test
jg
bound
xchg
or
xchg
push
popf
ret
pop
jne
xchg
rol
(bad)
jno
jmp
inc
hlt
pop
cmp
pop
in
push
inc
iret
dec
push
in
xor
pop
xor
imul
(bad)
mov
jne
into
or
ja
lahf
loope
pop
and
ret
(bad)
mov
mov
cmp
ret
(bad)
push
or
add
pop
mul
(bad)
loop
jnp
pop
ret
add
jo
push
sub
lahf
(bad)
jnp
cmp
fld
inc
push
cmp
inc
lock
fbld
and
loope
popa
cmp
outs
push
jp
loop
mov
push
leave
cmp
imul
xchg
jmp
sub
mov
ret
xor
jle
pop
fist
jno
xchg
mov
sub
aad
ds
bound
sbb
cld
scas
das
(bad)
sbb
mov
lods
(bad)
push
sub
xor
not
les
cmp
sub
mov
cmp
paddusb
neg
fcomp
push
cmp
mov
xor
push
add
aad
adc
push
repnz
push
out
adc
loopne
lods
fld
pop
pop
fadd
dec
mov
xor
dec
leave
adc
cmp
daa
pop
push
add
popf
jnp
sbb
jns
jns
cmp
(bad)
xor
pop
sbb
sbb
outs
adc
jge
add
(bad)
(bad)
dec
push
or
adc
arpl
adc
icebp
jle
mov
xor
cmps
xor
push
pop
mov
imul
cmp
lods
inc
adc
cmp
dec
imul
sahf
xchg
es
push
push
pop
mov
sub
and
lods
cmp
(bad)
out
test
dec
ins
xor
imul
mov
or
mov
call
mov
mov
dec
and
push
iret
cpuid
pop
xor
call
lods
mov
jmp
test
jo
std
mov
cmps
test
loop
js
cmp
mov
pushf
dec
cmc
shl
loop
jae
xchg
ss
stos
les
dec
fnstenv
or
and
lods
lods
or
outs
push
sbb
icebp
pop
xor
pop
cmp
jns
or
mov
push
ins
jmp
mov
jo
addr16
add
mov
xor
and
and
mov
push
and
out
inc
(bad)
xchg
das
pop
sbb
movs
(bad)
icebp
dec
xor
ret
dec
fistp
mov
pop
rcl
jecxz
mov
aam
fmul
lock
(bad)
imul
popa
adc
arpl
inc
loope
mov
mov
je
(bad)
and
lods
(bad)
or
ss
(bad)
clc
cmps
push
jmp
out
and
mov
fidivr
es
adc
cmp
dec
mov
xchg
xchg
xor
ja
cmps
xchg
and
test
and
imul
cmp
mov
idiv
and
xchg
call
add
push
mov
std
pop
jo
bound
cmps
adc
inc
mov
movs
clc
sub
stos
rcl
and
lods
push
dec
daa
xchg
sti
in
ins
fs
mov
mov
push
push
and
cld
das
pop
test
js
or
push
mov
out
jae
cmc
add
xchg
stc
jnp
push
mov
aam
outs
into
test
jbe
mov
and
adc
add
cmp
fisub
movd
xchg
and
out
mov
sahf
pop
add
ds
dec
aam
mov
loop
pop
push
xor
cli
js
jecxz
dec
shl
mov
sub
(bad)
sub
cdq
xor
xchg
or
adc
sahf
test
or
stos
add
out
repnz
lea
adc
mov
push
neg
test
or
shl
cmp
(bad)
push
and
test
pop
cmovne
pop
inc
out
in
xor
pop
nop
dec
test
loopne
cmp
repz
xor
fadd
sub
int
push
jno
jmp
or
leave
imul
(bad)
jne
cld
movs
clc
mov
xchg
pushf
stos
adc
pop
jl
sbb
or
nop
outs
retf
lods
aaa
cmp
mov
and
adc
add
pop
dec
lahf
imul
pop
jl
dec
in
(bad)
lods
mov
ins
xchg
frstor
adc
pslld
in
or
cli
dec
xchg
or
jmp
mov
and
pushf
fs
fistp
pushf
or
loopne
fwait
jmp
push
pop
mov
sbb
jb
adc
and
test
sub
jle
aaa
sub
neg
(bad)
daa
pop
shl
loope
add
adc
and
popa
sbb
into
mov
push
scas
add
xchg
dec
adc
xchg
aaa
mov
cwde
movs
dec
mov
rol
jp
stos
push
mov
inc
adc
xor
and
ins
add
mov
mov
mov
or
lds
push
(bad)
fmul
pusha
jae
push
push
lea
cs
call
mov
(bad)
mov
clc
xor
push
scas
jno
imul
addr16
cmp
(bad)
push
or
mov
mov
cmp
mov
adc
add
(bad)
repz
pop
scas
cmps
fcom
fwait
repnz
(bad)
mov
cdq
(bad)
jnp
mov
xchg
sbb
retf
add
xor
sbb
cmp
cs
dec
and
sub
cmp
ds
shr
(bad)
sbb
cmps
data16
pop
xchg
loop
les
lahf
dec
and
push
mov
jae
jmp
xchg
std
aas
pop
mov
push
push
fiadd
or
(bad)
and
pop
rep
jnp
das
cld
xor
adc
and
ds
add
jo
mov
dec
sbb
loope
mov
sbb
xor
push
adc
sbb
jge
adc
popa
xor
aas
xchg
xchg
pop
mov
sbb
mov
in
loope
mov
fisub
js
xchg
mov
pop
imul
dec
cmp
cdq
adc
lea
cmp
jge
mov
mov
ins
sti
sub
mov
pop
cmp
add
mov
not
dec
xor
sub
nop
(bad)
loopne
pop
daa
mov
das
daa
shl
fsubr
xor
call
leave
xchg
in
fucomip
rol
in
mov
inc
out
fistp
ret
add
jne
sub
inc
push
push
push
or
in
test
xor
lock
test
fmul
mov
pop
mov
push
fnstsw
inc
rol
or
pop
sub
jo
outs
aas
int
fcompp
imul
xor
sub
fdivr
gs
inc
push
sbb
mov
shl
test
aas
mov
mov
sti
out
not
pusha
scas
out
pop
pop
dec
imul
popf
stc
inc
jbe
mov
push
inc
xchg
int3
sbb
into
icebp
out
pop
push
push
add
pop
lods
pop
daa
push
das
call
test
push
sub
es
pop
xor
imul
xchg
adc
movs
sbb
jle
and
inc
pop
cmps
lods
cwde
aam
xchg
adc
push
das
jp
out
rcl
out
cs
(bad)
lea
(bad)
sar
mov
(bad)
inc
jmp
(bad)
aaa
retf
add
jecxz
fisubr
pop
fistp
cmp
inc
xor
pop
iret
fldenv
and
cmp
jle
mov
test
and
lods
xor
jb
or
push
stc
or
out
leave
jnp
push
ds
ds
push
add
add
js
sbb
cmp
sbb
add
xor
pop
inc
mov
dec
sub
out
mov
jns
rol
into
sub
cwde
je
sti
inc
clc
and
push
pop
sub
outs
ror
mov
sbb
fcmovbe
push
add
mov
sti
xor
outs
push
(bad)
push
int
and
adc
mov
cmc
mov
stos
sub
xchg
dec
sahf
dec
imul
jmp
aaa
push
dec
fadd
and
icebp
sar
and
jp
dec
je
jno
loop
arpl
(bad)
cs
(bad)
out
aam
mov
pop
jo
jbe
jmp
repz
and
and
daa
push
aaa
ds
cmp
mov
int
adc
xchg
inc
add
cwde
fsin
pusha
mov
cmp
pop
out
or
test
jnp
push
fdiv
mov
es
mov
(bad)
cld
div
test
mov
xchg
in
push
pop
mov
jle
sub
inc
pushf
xchg
mov
cmc
push
jecxz
sbb
jecxz
je
jnp
add
ins
sbb
inc
mov
test
mov
sub
xchg
imul
hlt
push
fcomp
ds
ror
int3
clc
jns
mov
ja
loopne
loopne
xor
pop
or
rcr
jp
bound
mov
(bad)
xchg
dec
repz
je
scas
jmp
aas
cdq
mov
mov
or
mov
or
jae
sbb
jecxz
xor
iret
das
cmp
pop
xchg
mov
rcl
(bad)
(bad)
mov
ret
sub
xor
sbb
cmp
outs
mov
loop
mov
jbe
es
fdivr
dec
int3
clc
pop
scas
aaa
sbb
adc
adc
xor
mov
cwde
fwait
lds
cli
test
aas
xchg
cs
lods
mov
jp
js
out
pop
mov
lods
lods
lahf
cli
pop
xor
scas
or
inc
xchg
and
or
add
cs
inc
push
jb
into
ja
cmp
and
sub
sbb
test
xor
inc
xor
mov
sub
sub
sub
pop
or
and
gs
cmp
repnz
push
sub
xor
daa
pop
and
sub
hlt
lds
popa
std
ds
xor
or
sahf
data16
hlt
arpl
xchg
dec
arpl
imul
or
pop
sbb
jae
ror
sbb
xchg
xchg
(bad)
push
mov
jmp
mov
cmp
lea
xchg
ret
pop
sbb
xor
es
ror
out
fistp
inc
adc
cmps
lods
into
(bad)
out
retf
ins
xor
out
xchg
sbb
sbb
sub
xor
pop
xchg
add
mov
jae
mov
movs
arpl
add
(bad)
pop
data16
imul
stc
not
fwait
inc
sbb
popf
xlat
jnp
and
and
jecxz
repz
test
inc
push
cmps
xchg
or
xor
adc
mov
push
std
mov
xchg
test
and
test
nop
hlt
cmp
mov
mov
aaa
cmps
mov
jae
mov
xchg
stos
cld
je
sbb
pushf
pop
mov
enter
popa
in
cmps
or
lock
int
pop
out
fcmovnbe
dec
add
addr16
test
xor
jne
sub
out
xchg
dec
ret
(bad)
jecxz
and
mov
push
pop
stos
ret
mov
bound
clc
scas
jno
arpl
pop
data16
test
mov
and
mov
mov
and
(bad)
pop
ins
xchg
aas
test
test
push
mov
fs
inc
test
jp
sbb
lahf
jbe
cli
scas
sub
shr
pushaw
sbb
ss
aas
add
retf
enter
ret
sahf
popf
dec
push
sbb
pop
lods
jno
leave
mov
jge
out
imul
fst
out
int
mov
fdivr
cs
out
pushf
in
add
lahf
jmp
fwait
and
sbb
stc
in
test
pop
popf
repnz
out
dec
push
adc
jno
mov
loop
into
fidiv
data16
cmps
aam
jne
xchg
out
pop
jnp
ins
std
sar
inc
sbb
push
cmps
(bad)
(bad)
es
aad
ins
adc
movs
sbb
push
shl
enter
leave
or
mov
jne
sub
push
jge
dec
xchg
mov
repnz
in
imul
imul
sahf
sbb
pop
pop
cmps
push
jg
jg
mov
sbb
daa
inc
imul
ja
jmp
outs
(bad)
sub
adc
adc
xlat
in
imul
mov
ret
add
mov
jp
xor
icebp
dec
pop
cmp
les
fnsave
or
iret
jo
cmp
loop
sbb
movs
retf
xor
hlt
imul
aaa
scas
sbb
into
leave
push
test
push
in
dec
not
fdivr
jb
das
jl
cmp
xchg
add
adc
sahf
inc
leave
push
or
mul
aas
pop
fcmovnu
cli
(bad)
cmp
fst
sbb
mov
stos
jns
push
ds
push
js
sar
lds
rcl
outs
sahf
and
cmp
jae
gs
(bad)
mov
rcl
popa
xor
stc
sbb
iret
adc
mov
cwde
xor
ret
pop
call
ss
aas
nop
jmp
dec
add
jb
cmp
or
rol
int
cld
pop
out
fsub
and
jo
pushf
(bad)
(bad)
in
nop
orps
inc
mov
inc
inc
test
lea
mov
and
and
(bad)
jmp
xchg
sbb
neg
imul
push
aas
pop
cmp
pop
xchg
adc
dec
adc
or
popf
inc
or
cmp
add
rol
popf
add
push
ror
data16
xor
adc
call
jle
(bad)
or
and
std
cmp
nop
mov
and
inc
jp
mov
stos
jbe
pop
fsub
jnp
mov
mov
mov
rcl
jno
retf
adc
cmp
mov
(bad)
and
xchg
ins
arpl
and
xor
repnz
add
jb
ss
cmps
push
arpl
(bad)
pop
les
adc
jmp
pop
and
inc
(bad)
adc
(bad)
ins
xlat
cmps
adc
inc
jmp
pmaddwd
cwde
dec
cmp
pop
xchg
cmp
adc
xor
jnp
mov
inc
sar
xchg
sbb
pop
jmp
adc
inc
ds
adc
dec
outs
test
repnz
out
jb
dec
jmp
inc
inc
jmp
ins
xchg
js
into
aad
xchg
xchg
cmp
cwde
popa
inc
xchg
jle
mov
cld
push
sub
div
sbb
fist
movs
inc
cmp
mov
xchg
jno
xor
js
mov
daa
pop
ins
pusha
xchg
ret
daa
outs
add
xchg
cmps
aaa
sar
aaa
push
sub
jg
sub
fldln2
jge
add
cmps
cld
fsubr
jno
enter
cmp
jmp
fmulp
aad
inc
add
mov
sahf
cmp
inc
mov
lods
pop
inc
push
sub
data16
push
mov
in
xor
mov
or
pop
pop
inc
outs
(bad)
outs
add
pop
add
add
xchg
stc
aad
ins
cmp
pop
loope
jb
pop
adc
test
bound
sub
add
(bad)
push
dec
dec
push
fisub
mov
pop
dec
retf
int
pop
jmp
push
mov
jb
in
jno
movs
(bad)
mov
(bad)
and
ficom
jecxz
cmp
sbb
retf
mov
test
jmp
push
sub
jns
mov
fwait
outs
pop
or
push
aad
int
mov
pop
sbb
shr
std
sub
xchg
push
int
push
or
dec
jb
rcr
das
mov
sub
test
pushf
jmp
in
xor
iret
out
fwait
push
xor
xor
arpl
sbb
push
mov
cdq
adc
xchg
sub
pop
mov
mov
icebp
fisub
stos
push
jmp
ficom
pop
xor
and
push
and
or
cs
sub
jmp
sub
cmp
push
stos
push
sub
and
sbb
dec
ret
or
fist
(bad)
xchg
cdq
inc
retf
ds
push
mov
ret
and
pop
dec
inc
xchg
inc
cmc
ins
push
inc
xchg
retf
mov
outs
call
jmp
sbb
je
(bad)
shr
ficomp
test
shl
adc
push
in
mov
mov
sub
neg
in
repnz
leave
inc
mov
les
mov
je
sub
push
adc
xor
lock
or
ror
push
mov
push
xor
push
push
lahf
jns
xor
jb
xchg
xchg
imul
inc
das
push
aad
out
push
movs
adc
mov
cmp
sahf
call
fld
sub
push
aaa
jno
addr16
fs
and
test
and
imul
push
sub
xchg
mov
dec
sub
fwait
les
or
lock
fidiv
and
jns
fimul
data16
push
push
ss
inc
lods
cmp
jbe
test
ds
jno
cmp
(bad)
rcr
xchg
addr16
cli
rcl
stos
mov
hlt
lock
ret
cmp
(bad)
retf
sub
or
(bad)
call
inc
mov
leave
loop
jnp
dec
cwde
jge
mov
dec
(bad)
popf
push
mov
mov
arpl
mov
es
mov
rcr
push
sub
or
push
test
fcom
mov
push
cmp
(bad)
sahf
sbb
popa
adc
mov
add
push
shl
cmp
mov
fld
inc
rol
mov
cmp
(bad)
xchg
push
push
fadd
sbb
scas
cmp
and
pop
icebp
mov
pop
jle
test
or
imul
movsx
adc
stc
(bad)
clc
shl
icebp
or
xchg
sbb
cmps
jge
jo
or
sbb
inc
enter
pop
or
out
aaa
jp
icebp
retf
mov
or
or
fld
cmp
add
les
call
jmp
cdq
jecxz
into
mov
mov
sti
jmp
cmp
mov
mov
jp
iret
aas
jmp
stc
jo
enter
jl
stos
(bad)
push
dec
cmp
or
jae
xchg
or
cmp
movs
add
pop
adc
sub
xor
or
pop
mov
es
test
mov
sahf
rol
dec
jnp
pop
xor
ret
adc
popf
(bad)
adc
movs
int
inc
dec
mov
adc
and
cli
add
std
push
xor
dec
movs
fnstenv
xor
xchg
add
repz
mov
jbe
ret
ss
(bad)
cmps
xor
fucomp
test
mov
xchg
cli
jns
nop
daa
movs
ja
or
xor
mov
mov
add
neg
inc
dec
adc
mov
int
xor
mov
push
outs
jg
rcl
cmps
or
dec
jle
lds
pop
aas
cmp
mov
imul
adc
pop
call
ins
movs
cmp
push
jne
add
das
jge
or
pusha
icebp
dec
xchg
and
push
mov
push
sub
rcl
pop
lea
inc
ror
aam
mov
out
xchg
stc
dec
sbb
cld
cmps
or
push
stos
pop
or
mov
pop
adc
mov
test
test
das
ret
push
mov
mov
sbb
addr16
cmc
jl
stos
(bad)
std
(bad)
mov
into
repz
mov
bnd
fbld
add
scas
cmp
adc
add
mov
nop
lods
test
scas
(bad)
hlt
js
push
and
in
mov
lock
adc
test
fdiv
cli
std
aam
xchg
fidiv
fs
mov
jle
adc
inc
jg
ret
sbb
dec
mov
lods
push
mov
xchg
cwde
push
das
ins
jl
pushf
push
ficomp
xor
out
pop
loope
push
jecxz
pop
cmp
int
cli
xor
mov
cmp
sub
cmp
mov
fwait
mov
aas
sub
repz
xor
mov
sub
mov
sub
add
sbb
and
inc
push
push
pop
cmp
test
std
jp
inc
adc
and
mov
jo
pop
pop
rcr
add
stos
mov
mov
(bad)
jno
jbe
xchg
shl
je
xor
aas
fnstsw
jno
dec
or
mov
jecxz
int3
adc
dec
pop
in
les
mov
movs
xor
inc
push
jae
pop
mov
sbb
aad
enter
jle
push
jae
arpl
idiv
arpl
jno
pusha
jb
pop
mov
aas
xor
mov
inc
lock
retf
mov
sub
xchg
adc
push
fcomp
je
mov
xchg
jne
xchg
(bad)
rcr
adc
or
fld
jmp
add
mov
xchg
jbe
adc
cld
fwait
stos
jle
push
pop
jbe
dec
mov
inc
jo
jecxz
or
nop
inc
jp
retf
add
xchg
adc
inc
test
inc
jl
mov
retf
sbb
pop
or
stos
xor
das
test
inc
and
stos
sbb
jmp
jae
retf
sub
mov
sub
jo
cmp
push
and
arpl
in
sub
adc
and
and
adc
dec
xor
out
push
or
aas
mov
sub
not
push
int
(bad)
leave
mov
jge
mov
ins
adc
call
mov
adc
xchg
sbb
jecxz
shl
xchg
lods
dec
push
pop
je
loop
js
adc
lods
sub
cmp
cs
in
arpl
fwait
imul
add
and
pop
dec
int
sbb
sbb
mov
sub
out
mov
cdq
cmp
les
sbb
dec
bound
into
mov
movs
xor
sti
mov
cmc
sbb
inc
mov
pop
(bad)
mov
cmp
cmp
or
out
adc
cdq
pop
pop
mov
sbb
xor
in
repnz
and
xor
jg
cwde
jnp
add
cmp
scas
push
adc
mov
cmp
hlt
lock
or
or
mov
cmc
jmp
mov
xchg
mov
movs
or
retf
mov
arpl
and
sbb
pop
mov
xchg
xchg
icebp
bound
dec
imul
ds
mov
jmp
call
jl
out
pop
lds
ins
stos
cmc
xor
add
mov
loopne
adc
jns
pop
(bad)
pushw
loope
sti
test
sbb
xor
adc
pop
out
push
fsubr
push
pop
cld
aaa
test
in
xchg
sbb
mov
in
jbe
push
ins
adc
adc
push
pusha
(bad)
or
je
out
jo
jecxz
xor
out
test
xchg
retf
fwait
das
in
fdiv
shl
jbe
jno
jnp
mov
in
iret
mov
push
(bad)
leave
adc
movs
inc
mov
xchg
dec
clc
mov
out
pop
mov
sbb
dec
sti
cmp
pop
add
dec
imul
mov
sub
mov
rol
pop
jmp
xor
pop
mov
bound
and
xor
les
out
jnp
sub
fst
aad
mov
popa
mov
(bad)
push
hlt
dec
test
es
xchg
in
pop
dec
cmp
sbb
dec
inc
movs
adc
ds
scas
jmp
dec
xor
mov
jnp
adc
call
repnz
in
cmp
call
pop
fstp
sub
loop
and
call
and
jb
cmp
jle
xchg
ins
push
icebp
add
hlt
rcl
and
sub
into
loope
add
xchg
push
pop
enter
(bad)
push
pop
mov
movs
push
jne
sbb
jmp
fld
cmp
or
add
bound
aas
lds
dec
and
xlat
jbe
movs
ss
dec
cmp
cld
sbb
sbb
mov
je
mov
(bad)
test
push
inc
rcl
pop
outs
xchg
mov
stos
test
mov
add
mov
daa
(bad)
stc
dec
addr16
sub
jl
js
rol
mov
cmovo
loopne
adc
push
lea
inc
add
fdiv
adc
jo
jb
inc
pop
shr
or
pop
popf
mov
jg
lods
or
jmp
loop
mov
idiv
test
xchg
in
cmp
jmp
(bad)
push
or
jne
cmp
add
xor
mov
clc
ins
out
std
add
or
lods
les
jb
xchg
pop
adc
dec
rol
inc
jns
test
dec
dec
(bad)
cmps
ins
aaa
aam
mov
push
lods
in
pop
push
scas
lea
pop
retf
jae
xchg
ins
jge
and
jb
sub
jbe
sti
sahf
cmps
and
shr
sbb
ret
xor
pop
fs
mov
add
mov
daa
out
sub
push
aaa
retf
mov
and
pop
sbb
les
push
pop
pop
call
mov
test
dec
in
mov
jne
pop
sahf
loopne
jno
push
call
ror
jb
mov
sbb
rcr
adc
xor
loopne
mov
mul
adc
adc
inc
mov
mov
dec
adc
jb
das
aaa
jmp
mov
cld
sub
pop
jnp
sbb
xchg
not
jae
lahf
mov
pop
jmp
int
add
outs
out
sti
cmp
mov
cmp
dec
test
mov
repz
sbb
inc
jmp
iret
cmp
mov
imul
cmp
addr16
ja
ror
mov
int3
push
inc
ins
out
mov
rcr
aaa
(bad)
mov
or
xchg
ret
xlat
daa
pop
cmp
(bad)
cmp
push
call
loope
movs
sbb
outs
and
movs
sbb
imul
push
shl
in
sub
aad
adc
sub
mov
movs
xchg
pop
imul
stos
retf
push
pop
bnd
jg
rcl
mov
cmp
sub
ds
iret
xor
movs
pop
gs
cmp
sahf
ins
fsubr
pop
or
(bad)
outs
inc
in
lds
popa
out
fcmove
cdq
push
fmul
push
push
lea
cmp
cdq
shl
add
mov
cmp
xor
add
fwait
xor
stc
lea
xor
es
fstp
les
sub
sbb
repnz
inc
add
jae
jno
push
xor
(bad)
subps
cdq
add
sbb
outs
adc
das
stos
leave
jle
add
dec
cli
lods
mov
adc
mov
fmul
dec
adc
mov
or
loopne
jmp
adc
sbb
ja
sbb
shr
retf
lods
xchg
mov
fdivr
cs
movs
dec
mov
dec
les
or
add
jno
sbb
cmp
push
cmc
int
jg
push
stc
sti
jnp
movs
mov
dec
pop
lea
mov
(bad)
adc
sbb
or
sbb
sub
call
sub
inc
mov
sahf
lock
outs
in
fstp
stos
mov
sub
and
mov
xor
cs
aad
hlt
mov
js
xlat
lea
int3
je
mov
or
adc
dec
adc
cdq
mov
out
mov
mov
(bad)
(bad)
dec
push
push
jb
nop
sti
dec
rol
retf
sub
ins
cmp
outs
seto
add
ds
mov
push
mov
add
aas
dec
mov
gs
loopne
and
lea
out
movs
or
aas
fidivr
out
cmp
mov
or
(bad)
mov
cmp
adc
cld
in
dec
sub
(bad)
repz
cmp
jnp
pusha
pushf
mov
cmp
inc
cmp
fnstsw
dec
inc
ja
lods
(bad)
jl
loop
inc
mov
sbb
jno
jmp
and
fiadd
fadd
jae
jge
(bad)
jge
cdq
and
into
dec
stc
fdivr
inc
pop
fld
add
iret
addr16
int
neg
jo
mov
sub
adc
lock
sar
mov
xor
pop
xchg
adc
or
out
or
sub
scas
jb
xchg
cmp
les
dec
mov
stc
enter
loope
scas
jge
cmps
cli
in
test
icebp
pushf
jbe
jnp
mov
or
dec
dec
sub
cdq
push
cmps
(bad)
mov
jb
xor
xchg
pop
adc
bound
pop
cmps
fyl2x
imul
mov
fld
jmp
mov
mov
xchg
jecxz
iret
int3
pop
je
in
je
jmp
push
aaa
pop
xor
mov
push
cwde
std
es
jge
pop
sbb
jmp
pop
xor
repnz
mov
paddusw
clc
mov
std
or
dec
rol
and
cmp
mov
sbb
pushf
das
and
mov
(bad)
xlat
std
ret
gs
mov
mov
mov
call
xchg
mov
xchg
xor
call
or
jmp
xor
ds
ds
sub
bound
adc
pusha
inc
retf
das
icebp
arpl
push
ret
mov
mov
sub
pusha
dec
outs
stc
stos
aaa
jmp
sti
ja
cmps
mov
pop
mov
jmp
mov
cdq
mov
adc
fdiv
(bad)
xchg
pop
aas
cmp
xchg
jae
adc
dec
mov
cmp
test
mov
xchg
ss
in
cmp
imul
aad
sahf
pusha
push
inc
int3
loope
sahf
lea
push
scas
mov
in
jb
icebp
dec
lahf
outs
dec
adc
shl
jle
dec
pop
fwait
push
cmc
(bad)
mov
inc
push
out
imul
and
mov
fidiv
hlt
(bad)
mov
sbb
inc
sub
aad
pop
adc
jb
out
sub
mov
adc
mov
fist
xlat
(bad)
sbb
shl
dec
mov
sbb
dec
cmp
jne
mov
sub
mov
repnz
daa
fmul
test
std
loop
test
jno
shl
inc
sbb
jmp
dec
add
xor
xchg
shr
and
jmp
icebp
das
inc
popa
fwait
scas
push
and
cmp
xor
hlt
rcl
mov
lds
push
inc
cdq
loopne
xlat
js
imul
int
xchg
or
jns
adc
xchg
dec
out
movlhps
pop
fistp
popa
pop
(bad)
ficom
xor
inc
and
mov
sub
dec
add
rcl
sub
jmp
ret
fild
in
(bad)
mov
movs
pop
retf
int
jle
out
push
out
or
mov
cwde
call
int3
pop
xchg
call
sbb
inc
cmp
pop
adc
inc
test
das
add
inc
loope
cmps
push
pop
inc
sub
and
sbb
push
fcmovb
cdq
(bad)
add
jne
outs
arpl
shl
cmps
in
ficomp
rcr
out
xlat
mov
xor
stos
cs
popa
add
loope
aas
aas
shl
mov
rcr
jno
lods
sub
pushf
push
test
fs
scas
cmps
fidivr
xchg
out
mov
xchg
cmps
cmps
push
sbb
inc
add
loopne
and
and
fld
ss
icebp
test
sbb
stos
pop
and
or
fstp
xor
push
sub
daa
dec
sbb
dec
sbb
fmul
ds
xor
call
std
lahf
shl
pop
pusha
mov
int3
inc
jp
loope
add
js
adc
fdiv
aas
push
adc
fist
fadd
mov
cmps
int3
ins
mov
call
loope
fstp
in
stos
cmp
cmp
pop
mov
call
(bad)
popa
lock
xor
xchg
push
xlat
sti
pop
int
cmp
dec
adc
int
loope
push
lock
mov
das
fstp
mov
inc
inc
(bad)
jmp
mov
add
and
inc
pop
push
(bad)
jns
xchg
xchg
sahf
dec
mov
xchg
dec
lock
push
xchg
fdiv
pop
dec
aaa
adc
std
pop
mov
lds
add
test
mov
and
imul
call
dec
popa
loope
sub
inc
adc
xchg
jmp
mov
mov
addr16
mov
les
and
std
gs
mov
call
and
loop
xor
add
pop
sbb
mov
adc
loopne
cmp
mov
movs
leave
jno
test
shl
mov
xchg
enter
(bad)
lods
cmp
das
adc
dec
scas
pop
test
jnp
add
sbb
sub
jge
and
cmp
push
dec
loopne
popa
mov
xchg
mov
adc
mov
add
das
xchg
mov
pop
push
sbb
cwde
and
push
sub
pop
ror
(bad)
dec
(bad)
cdq
mov
jl
ret
das
dec
mov
xchg
xor
dec
jecxz
jbe
or
lods
iret
hlt
jg
in
jecxz
ficom
xor
mov
lds
pop
loope
repnz
or
inc
nop
mov
xchg
push
sbb
imul
inc
push
(bad)
push
repnz
fcomp
cmc
(bad)
cdq
xor
mov
call
cdq
xor
xlat
lea
(bad)
push
cmp
mov
sbb
mov
inc
mov
pop
dec
pushf
mov
jl
fisub
sub
cs
test
(bad)
pop
iret
(bad)
jmp
stos
test
inc
in
kmovw
jmp
cmp
jge
and
or
mov
je
add
addr16
(bad)
jne
les
nop
mov
jg
in
shl
xchg
sub
and
js
cmps
inc
adc
inc
sar
cmp
rcr
mov
test
sub
jns
lea
das
aaa
add
jg
popf
adc
push
lea
mov
gs
cmp
dec
ins
inc
les
cs
popf
(bad)
mov
ss
mov
sub
mov
or
push
into
pop
and
add
xchg
dec
mov
jge
sub
sar
mov
push
mov
xchg
test
mov
sbb
jl
ret
in
jmp
cmp
dec
out
jmp
std
int
and
mov
movs
mov
xor
(bad)
xchg
push
retf
pop
cmp
stos
out
fmul
and
movs
push
and
push
mov
je
push
out
mov
pop
enter
retf
and
cdq
fwait
push
cmp
or
xor
scas
xor
sti
mov
iret
jns
sub
and
or
jno
and
stos
imul
mov
aad
jnp
sahf
pop
lea
adc
pop
pop
lock
dec
out
pushf
cld
stos
add
mov
imul
arpl
(bad)
ficom
scas
adc
outs
ret
in
imul
out
and
mov
mov
mov
xchg
int
and
mov
mov
mov
cmp
xor
cmp
and
shr
xor
aam
mov
aas
push
jmp
or
push
pushf
(bad)
aam
mov
fdiv
xchg
sbb
mov
jmp
jmp
mov
xor
aam
mov
sbb
cmp
jae
cmp
push
adc
ret
retf
add
outs
std
xchg
repnz
sbb
hlt
mov
repz
rcr
mov
shl
push
xchg
scas
mov
out
jge
mov
mov
in
outs
jmp
sub
in
repnz
jns
xlat
or
leave
and
jns
sub
push
lds
icebp
cmp
xchg
por
and
jecxz
sub
push
in
sti
pop
int3
scas
aad
and
xor
sub
mov
bound
hlt
jbe
scas
and
pop
jno
inc
jae
xchg
mov
das
inc
cli
and
(bad)
pop
fldcw
fsubr
(bad)
loopne
mov
fdivp
xchg
xchg
or
xor
(bad)
dec
into
or
in
out
jmp
push
add
pop
call
xchg
repz
dec
test
ins
mov
pop
cmps
sub
retf
and
inc
xor
or
or
mov
stos
fs
pop
fist
push
cmp
cmp
mov
jg
nop
push
sbb
xchg
sub
pop
cmp
out
and
daa
aas
push
cmp
std
ret
push
test
loope
sar
sbb
or
pop
inc
aad
xchg
aaa
xchg
dec
cmps
bound
arpl
pop
jmp
add
test
repz
iret
cmps
or
pop
fnstenv
sar
loopne
add
ds
sbb
pop
fidiv
add
mov
cmps
ret
loop
rcl
jp
hlt
adc
adc
mov
jmp
cli
mov
pop
mov
retf
fild
sbb
repz
or
mov
fwait
cld
and
pop
dec
mov
xchg
fstp
jbe
pop
lock
cmp
inc
inc
pop
ret
mov
inc
mov
stos
pop
lea
sub
rcl
retf
dec
je
aas
icebp
xchg
mov
in
int3
inc
scas
lock
push
mov
push
ins
add
imul
xchg
mov
fcomp
popf
push
daa
idiv
mov
leave
lods
pop
int
call
or
push
mov
mov
bound
xchg
iret
mov
dec
push
cmps
xchg
mov
retf
sbb
sub
dec
rcr
(bad)
sbb
(bad)
repnz
jl
addr16
sub
adc
push
and
fs
aaa
add
(bad)
jno
inc
div
lea
xlat
int3
and
(bad)
xor
mov
cmc
les
dec
ds
aaa
xor
xor
retf
(bad)
push
sbb
imul
test
pop
shr
fwait
mov
mov
sbb
aas
lods
xchg
xchg
or
xchg
jp
(bad)
cmp
dec
and
inc
ret
retf
adc
pop
in
adc
cmp
cmp
add
xor
xor
xor
xchg
jno
(bad)
cmps
inc
jge
mov
or
push
push
into
cmps
pusha
and
jecxz
repz
cwde
repz
xchg
pushf
out
jmp
xchg
push
cmp
es
dec
or
jnp
sar
add
dec
fmulp
(bad)
or
pop
xchg
cdq
rol
jmp
iret
call
(bad)
nop
sub
jae
in
push
dec
div
add
out
sub
mov
xor
xchg
push
cmps
fistp
mov
daa
dec
cmp
sub
push
mov
cmp
aad
in
sbb
(bad)
jp
clc
fcomp
retf
jne
inc
mov
fistp
dec
cmp
popf
in
mov
adc
out
loope
jl
add
jmp
mov
aad
fmul
inc
ins
(bad)
jle
add
push
pop
push
inc
lods
(bad)
dec
cmp
pushf
jns
sub
dec
jns
sub
push
mov
aas
dec
mov
sbb
add
data16
mov
xchg
in
loop
test
(bad)
mov
scas
dec
test
hlt
aas
xor
mov
push
jle
imul
adc
imul
mov
or
or
rol
and
mov
jmp
mov
or
out
cmps
lods
cdq
ins
icebp
and
loopne
jb
test
and
cmps
loopne
dec
rol
xchg
inc
es
test
pop
gs
test
call
jp
mov
adc
daa
sahf
adc
cld
(bad)
sbb
mov
stos
push
mov
adc
jae
add
jmp
popa
rcr
gs
iret
mov
xor
add
fld
pop
test
pop
popf
mov
sub
pop
and
dec
xchg
inc
mov
ja
enter
outs
add
jmp
pop
cs
jb
mov
mov
mov
(bad)
aam
add
ds
popa
pushf
mov
fidiv
cmp
daa
xchg
dec
pusha
out
fsubr
(bad)
mov
(bad)
inc
and
stc
xchg
jo
daa
(bad)
sub
xor
or
xchg
es
xchg
pusha
pop
add
shr
out
xor
push
jne
xchg
into
in
pop
jmp
xor
out
mov
sti
pop
inc
not
add
inc
ds
sbb
ret
push
adc
xor
pop
daa
dec
xchg
adc
push
ins
xchg
sbb
cmp
cld
dec
sub
inc
inc
test
cld
cld
sbb
lock
pop
cmp
mov
loope
loop
ss
addr16
sbb
(bad)
fmul
or
adc
mov
aam
jo
cmps
and
cmp
div
pop
cli
retf
aad
mov
mov
sub
rcr
enter
push
test
ja
mov
sbb
sub
clc
retf
cmps
xchg
sbb
cmp
mov
movs
ret
(bad)
std
cmp
and
mov
stos
add
sar
cmps
jae
je
sbb
push
fist
mov
jno
lahf
fild
cmp
div
pop
sub
inc
ret
iret
cmps
inc
mov
iret
sub
jmp
xchg
and
jp
iret
mov
pop
jmp
(bad)
cmc
dec
(bad)
aad
jbe
out
in
xor
push
out
adc
js
out
out
xor
add
sub
push
push
adc
cs
test
(bad)
in
fisubr
sub
push
xchg
sub
sbb
sub
and
or
push
mov
loope
loopne
adc
xchg
scas
clc
std
dec
int3
mov
xor
cld
push
leave
push
add
scas
mov
leave
fld
outs
repz
mov
fidiv
outs
(bad)
popa
shl
popf
lock
cmp
pop
cdq
clc
fisubr
aas
mov
mov
xchg
cwde
movs
scas
push
xchg
pop
xor
data16
ja
test
sbb
int3
jmp
mov
and
mov
popf
cmps
test
mov
adc
movs
cmp
shr
(bad)
fiadd
adc
ss
jmp
mov
push
out
test
into
dec
pusha
(bad)
dec
(bad)
popf
in
dec
sahf
sbb
mov
jl
dec
std
addr16
nop
xor
shl
xor
pop
iret
inc
push
retf
pop
pop
imul
fisttp
mov
and
cwde
sti
out
push
dec
cld
into
pop
nop
or
mov
add
pushf
sahf
aam
push
dec
inc
push
(bad)
jnp
jmp
sub
aam
xchg
test
fs
sbb
pop
into
add
pop
pop
div
cli
stos
out
push
aad
out
xchg
pop
lahf
lods
icebp
loop
cli
mov
mov
aad
and
in
mov
mov
fstp
adc
dec
into
xchg
test
aad
xor
int3
pop
xchg
lods
xchg
add
jb
je
fidivr
inc
pop
sbb
popa
push
lock
les
popa
adc
cdq
inc
adc
mov
xchg
xchg
mov
ror
xchg
imul
mov
sub
retf
inc
in
mov
scas
inc
cmp
push
test
xchg
test
add
ja
sub
sub
cmps
out
fsubr
mov
push
test
stos
dec
jno
push
dec
pop
adc
fnsave
test
aam
mov
inc
in
dec
fs
jmp
jb
icebp
call
push
adc
das
sub
fdivr
pusha
sbb
loop
push
or
hlt
je
pop
dec
icebp
pop
outs
retf
(bad)
hlt
stos
pushf
(bad)
jle
fs
mov
mov
sbb
sub
sbb
jne
ret
ds
push
dec
std
and
pop
cmp
and
jmp
popa
push
sbb
mov
out
call
dec
mov
jg
push
cli
repz
sub
popa
pop
cmps
pushf
scas
xor
xlat
pop
adc
sahf
jg
imul
in
mov
mov
stos
jecxz
mov
(bad)
fs
push
outs
mov
inc
es
xor
into
mov
inc
and
mov
push
cmp
and
cwde
xor
and
fs
pop
push
stos
pushf
push
nop
mov
mov
jl
jne
fldenv
sar
test
cmp
mov
daa
inc
int3
ret
adc
mov
aaa
or
push
push
mov
js
rcr
push
daa
pop
scas
cmp
aam
movs
or
mov
jb
mov
xor
adc
pop
fild
bnd
enter
fwait
jnp
test
xchg
dec
js
sub
cmp
shl
inc
cmp
call
stos
aam
add
bound
in
gs
xchg
js
jo
mov
jle
popf
scas
jae
push
rcl
test
jnp
repnz
(bad)
rcl
jb
add
(bad)
push
cli
jmp
mov
mov
push
pop
ss
jae
or
and
imul
xor
mov
addr16
cmp
lds
inc
mov
lods
add
pop
mov
push
mov
fisttp
fxch
int
sub
mov
inc
xchg
mov
fild
inc
out
retf
fdivr
mov
test
xchg
cmp
loop
mov
add
lea
sbb
int3
mov
mov
add
pop
sub
cld
mov
shl
sbb
adc
dec
loop
in
sbb
cli
imul
jne
es
out
call
cmp
jge
xchg
push
mov
int3
dec
mov
mov
int3
dec
inc
sbb
push
pop
shl
enter
dec
lahf
aad
idiv
fadd
adc
gs
imul
aad
stos
mov
into
xchg
mov
sub
das
call
and
or
pop
push
(bad)
xchg
mov
in
jno
cld
outs
lods
or
add
adc
fwait
out
mov
mov
inc
loope
mov
mov
inc
out
inc
in
test
mov
jo
sbb
push
or
inc
aas
push
hlt
out
inc
(bad)
stos
xchg
movs
ret
(bad)
ret
mov
mov
dec
mov
and
arpl
mov
mov
fs
shl
pop
fild
jmp
cmp
pop
enter
fidivr
dec
mov
mov
and
in
xor
aam
test
retf
or
xor
cwde
cmp
jge
jbe
inc
sbb
sbb
mov
pushf
mov
int3
jmp
stos
cmp
adc
mov
dec
aam
adc
int3
or
push
mov
cmc
call
pop
lea
mov
sub
repz
daa
leave
xchg
ins
mov
adc
outs
or
cmp
pop
mov
ror
pop
dec
mov
in
lods
or
fnstsw
mov
out
dec
in
in
int
fmul
cmp
call
call
lods
in
and
push
hlt
mov
xor
xor
test
repz
jbe
ret
repz
jge
pushf
mov
push
adc
dec
fadd
fnclex
cmps
mov
not
push
nop
ss
xchg
imul
or
paddb
xchg
pop
(bad)
or
(bad)
sbb
in
push
push
cmps
dec
std
ret
(bad)
sbb
push
xchg
fld
imul
xor
lods
in
xor
and
push
sub
hlt
fs
popf
call
fsub
nop
imul
leave
int3
imul
jg
mov
ins
jp
scas
mov
retf
out
test
(bad)
movs
neg
retf
xchg
inc
lods
clc
mov
fldenvw
mov
sahf
or
ficomp
maskmovq
dec
mov
inc
pop
cdq
jae
retf
push
cmp
push
cmp
retf
xchg
push
adc
inc
mov
popa
and
dec
push
(bad)
(bad)
pop
lea
mov
lods
stos
cs
ja
popa
adc
aaa
add
stos
rcl
pop
and
(bad)
mov
mov
sar
ror
push
xchg
sbb
mov
rol
aas
aam
mov
ja
inc
xor
jecxz
hlt
(bad)
loopne
(bad)
cmp
retf
push
mov
out
pop
stos
inc
cmp
dec
test
mov
or
lods
pop
call
mov
je
cmp
mov
xor
(bad)
int3
fsub
popf
mov
daa
add
add
sub
fwait
sbb
enter
dec
xor
dec
retf
mov
sbb
adc
xor
add
into
stc
fdivr
sbb
lods
stc
inc
je
(bad)
push
jge
push
maskmovq
mov
call
jge
and
jle
sub
xchg
ret
ror
out
test
cli
movs
call
jecxz
retf
dec
scas
repnz
fidiv
imul
retf
test
addr16
xor
inc
and
jmp
int3
iret
lock
inc
or
dec
mov
ret
out
push
jo
clc
or
mov
push
inc
sti
add
pop
pop
or
sar
add
pushf
fsubr
push
psubsw
jmp
or
out
mov
arpl
enter
ins
nop
call
mov
sub
and
inc
push
in
or
inc
sub
sti
mov
jnp
adc
aam
mov
xchg
cmc
out
jmp
bound
jp
stos
in
popf
sbb
in
lods
adc
xchg
loop
cli
sub
fsubp
scas
les
and
adc
adc
into
dec
retf
neg
xor
mov
mov
or
and
mov
xor
pop
js
or
and
retf
pusha
lds
inc
sub
cmps
cli
rcl
push
outs
dec
jge
(bad)
movs
and
aas
cmp
imul
cmp
into
fprem1
add
test
call
mov
and
cmp
and
fsubp
push
sub
out
test
fisttp
sub
es
jge
or
pop
popa
jnp
sahf
rcr
icebp
push
push
cmc
in
push
mov
lahf
jb
adc
dec
sahf
and
cli
pop
js
icebp
cdq
add
xchg
shl
in
fcom
push
aad
pop
mov
mov
sbb
push
add
cmp
and
jl
(bad)
dec
leave
hlt
fs
mov
stos
xlat
jne
or
inc
add
loop
sub
mov
push
out
mov
imul
push
mov
sub
jbe
int
jne
jno
xlat
retf
imul
jno
je
xchg
test
mov
(bad)
into
inc
push
jg
sub
and
aas
pop
mov
ret
repnz
jb
mov
into
or
(bad)
idiv
bound
lea
jmp
not
addr16
pop
xor
cmps
xor
mov
add
int
aam
(bad)
and
(bad)
out
pop
xor
ss
adc
rcl
push
mov
inc
imul
mov
mov
push
cmp
imul
jns
and
sub
push
xchg
jo
add
pop
in
sahf
(bad)
retf
lahf
fidiv
adc
ficomp
mov
mov
into
jne
pop
jl
and
gs
div
push
out
loop
fcomp
inc
or
int
lock
or
pusha
mov
adc
mov
mov
jo
mov
xchg
jmp
retf
cmp
inc
movs
clc
ret
(bad)
(bad)
popf
inc
jp
and
rcr
jae
inc
clc
ret
aam
adc
cld
adc
(bad)
outs
push
jmp
repz
mov
pushw
and
jmp
(bad)
(bad)
mov
xor
gs
add
sub
(bad)
sbb
in
rcl
jo
retf
push
out
mov
jp
or
imul
xlat
sbb
xchg
retf
sar
lods
fbld
out
test
xor
retf
jmp
xor
sbb
mov
mov
das
mov
call
add
sbb
es
and
pop
sbb
mov
rcl
leave
popf
or
cmp
jmp
jp
out
xchg
pop
std
fisubr
mov
outs
imul
xchg
std
add
pop
push
push
sahf
stos
not
mov
sub
push
xchg
je
in
icebp
pushf
mov
aam
sbb
addr16
fs
mov
dec
mov
xchg
mov
iret
scas
lods
std
mov
sub
repnz
aas
aaa
test
add
sbb
arpl
add
jns
sub
sbb
das
arpl
pushf
clc
fnstenv
cs
push
fcomip
jmp
xchg
(bad)
jae
jmp
fwait
cmp
(bad)
cmp
xor
cmp
add
dec
mov
pop
sub
mov
add
jbe
pop
inc
push
pop
inc
adc
cs
xor
loop
jo
and
retf
aaa
aam
imul
fwait
retf
(bad)
cmps
sbb
(bad)
out
add
pop
dec
push
outs
push
es
push
jl
mov
add
dec
sbb
or
xchg
inc
and
das
imul
xor
test
movs
jp
xlat
jmp
mov
jmp
add
pop
jae
dec
ds
ss
ror
push
jge
or
int3
push
pop
jbe
push
(bad)
adc
push
xchg
pusha
or
lea
pushf
stos
out
(bad)
(bad)
hlt
mov
fisttp
adc
mov
fs
mov
cmp
mov
cmp
bound
xor
inc
adc
adc
mov
fidivr
push
pop
jne
loopne
mov
xchg
ins
xchg
jmp
and
jge
mov
sbb
cmp
test
mul
out
sub
imul
icebp
hlt
cmp
sbb
cdq
push
adc
in
inc
add
add
add
sbb
jmp
(bad)
jne
jge
mov
(bad)
xchg
and
mov
retf
mov
push
lds
dec
aad
dec
mov
scas
aaa
adc
in
sbb
inc
mov
sbb
outs
test
add
clc
dec
aaa
(bad)
mov
xchg
sub
push
xchg
jnp
mov
rcl
mov
jne
or
(bad)
int
bound
dec
in
(bad)
jne
retf
sahf
add
das
dec
(bad)
push
inc
mov
mov
adc
les
or
test
dec
stc
in
or
mov
imul
jnp
dec
fcomip
daa
ret
paddq
and
inc
sub
mov
fdiv
ja
mov
(bad)
and
nop
dec
pop
dec
nop
jne
sti
and
adc
arpl
fnop
push
mov
xor
fdiv
ins
and
dec
mov
push
aam
adc
dec
add
sti
add
mov
jmp
and
fadd
xchg
jmp
pop
sub
xor
inc
xchg
or
inc
cwde
nop
aad
mov
push
push
inc
cmps
(bad)
fld
xchg
fimul
push
xchg
neg
cmp
add
xchg
bswap
lods
retf
and
arpl
xchg
sahf
mov
sti
ror
stos
stc
iret
icebp
mov
and
test
jmp
neg
aas
xchg
stc
jo
repnz
mov
rcr
fwait
in
mov
sbb
mov
sbb
(bad)
cmp
pop
(bad)
dec
lds
sbb
dec
xchg
leave
clc
and
and
rcr
popa
jb
add
out
outs
aam
mov
push
and
out
xchg
cmp
fimul
mov
int
das
mov
addr16
add
das
xchg
shl
js
adc
aaa
and
or
ds
or
pop
or
das
mov
leave
mov
sbb
call
jg
jg
inc
and
call
out
das
dec
std
(bad)
mov
jecxz
and
enter
mov
sbb
and
mov
sub
int3
ins
xchg
xchg
cmp
mov
int
(bad)
sub
mov
push
jl
push
ret
sbb
jmp
lock
xlat
imul
in
aas
cmp
repz
aas
rcl
enter
js
cmps
icebp
jo
xchg
sub
or
retf
push
(bad)
pop
outs
mov
test
gs
mov
outs
xchg
dec
push
mov
push
je
rol
jmp
cmp
out
push
jbe
in
mov
push
xlat
and
add
cmp
xor
jne
out
out
cmp
in
ins
mov
inc
mov
mov
pop
jmp
mov
sub
mov
add
sub
cli
and
mov
adc
popf
jmp
into
xor
sbb
cmp
or
aaa
stos
xor
jp
popf
sub
stc
sar
push
jno
mov
in
fyl2x
jbe
clc
pusha
out
mov
les
addr16
dec
mov
mov
call
mov
retf
retf
scas
les
dec
xchg
ret
or
ror
mov
dec
and
mov
aad
movs
jl
mov
adc
pop
sub
pop
pop
fcomp
or
xchg
xchg
push
frstor
add
cmp
test
dec
cmp
pop
lds
adc
sub
dec
cld
jmp
adc
call
xchg
mov
call
mov
call
lods
cmp
jmp
test
loopne
pop
out
xor
mov
test
push
cld
lea
inc
xchg
loop
gs
pushf
test
sub
sub
fstp
cmp
mov
gs
push
add
es
xchg
jl
xchg
test
push
outs
cmp
push
mov
sub
sub
jecxz
sti
add
adc
or
mov
pop
sub
jae
icebp
dec
gs
adc
pop
js
jge
retf
stos
push
mov
xchg
loop
lods
leave
sahf
dec
adc
and
mov
call
scas
mov
shr
repnz
call
xor
jg
and
mov
ss
out
aam
js
ret
retf
scas
daa
mov
mov
add
sbb
inc
mov
xchg
test
or
or
or
xchg
and
and
add
inc
sbb
adc
dec
(bad)
fsubr
xchg
mov
add
idiv
lahf
ds
adc
push
cs
dec
add
push
jae
iret
fwait
xchg
cmps
pop
push
cmc
fs
push
lods
mov
cmps
(bad)
scas
or
das
(bad)
js
sbb
fadd
push
or
dec
jb
inc
mov
pop
cmp
out
inc
sbb
out
pop
mov
cmp
mov
into
mov
imul
(bad)
mov
mov
hlt
mov
adc
in
retf
dec
fimul
xchg
xor
push
or
mov
aaa
popf
test
push
in
pop
cmp
jmp
cmp
rcl
inc
test
int3
cmp
stc
mov
adc
nop
xchg
(bad)
and
adc
sahf
xor
or
and
sub
sub
or
imul
mov
in
mov
retf
dec
push
mov
mov
scas
out
xor
into
xor
lods
mov
sbb
adc
out
adc
call
pop
test
cwde
cld
sahf
cli
aam
inc
pop
xchg
sub
and
cwde
lock
adc
push
mov
inc
aad
das
mov
icebp
shr
call
push
mov
enter
stc
mov
sbb
xchg
jp
ins
cmp
add
push
push
sahf
or
jmp
mov
frstor
and
jns
iret
or
call
mov
jb
(bad)
movs
sbb
fdiv
bnd
int
sub
lea
or
or
lahf
test
inc
and
call
dec
call
mov
fwait
and
sub
lods
hlt
sub
mov
pop
test
ds
push
jle
clc
pop
inc
ins
mov
cmps
xor
mov
sti
test
and
inc
fstp
add
cmps
jle
dec
jb
popf
push
icebp
sub
sbb
fisub
call
retf
stc
xchg
push
cli
lds
adc
jns
and
inc
nop
jne
pop
or
xchg
pop
xor
push
lahf
test
add
hlt
les
jns
outs
pop
add
push
fdivr
dec
and
es
clc
cmp
shl
ds
aaa
das
push
mov
inc
sub
std
add
mov
lds
imul
fisub
pop
push
cmp
pop
pop
movs
dec
dec
dec
xor
sub
mov
push
push
lock
add
or
rcl
fnstsw
mov
in
outs
call
add
xor
xor
aam
mov
daa
mov
push
hlt
(bad)
mov
les
cmp
addr16
xchg
outs
test
arpl
movs
in
dec
and
ffree
sbb
xchg
sub
das
movs
add
mov
sub
mov
jl
aad
call
dec
xlat
leave
lods
pop
cmp
jae
cmps
pop
cmps
lods
cmp
mov
cmp
add
into
cmp
push
and
jnp
call
push
out
leave
data16
jne
retf
clc
fs
aad
shl
daa
addr16
jae
add
(bad)
xor
sbb
cmp
stos
push
iret
scas
pop
mov
lahf
out
mov
shr
fst
push
jo
xor
xchg
pop
lock
fsub
mov
int3
add
pop
jmp
sub
sar
scas
and
sbb
inc
and
jbe
and
scas
pop
or
outs
sub
(bad)
das
sbb
sub
adc
mov
cld
and
mov
popa
or
mov
vunpckhps
repz
loopne
or
mov
sti
inc
adc
bswap
mov
pop
adc
dec
leave
sub
and
dec
in
test
push
inc
pop
push
aaa
dec
fs
adc
jmp
xchg
xchg
(bad)
repnz
sbb
addr16
cli
mov
loopne
xchg
cdq
mov
pop
into
in
call
imul
sub
ret
mul
shl
mov
adc
ficomp
dec
in
jmp
repnz
cdq
outs
fcomp
das
out
sub
mov
sbb
xlat
push
xor
cmc
jns
imul
cwde
pop
add
sbb
(bad)
imul
mov
sbb
push
mov
jmp
das
and
pop
into
mov
call
xlat
in
fstp
or
add
jg
mov
jmp
ja
cdq
fild
xlat
or
and
cmps
mov
xor
loopne
mov
xlat
fcmovnb
sar
aad
cmp
arpl
adc
adc
push
dec
pop
retf
pusha
fsub
push
out
leave
pop
loopne
xlat
aaa
push
sub
adc
or
push
inc
cmp
aam
out
pop
jns
push
out
mov
add
xchg
sbb
mov
mov
sub
call
xchg
sbb
push
sahf
lea
mov
(bad)
sti
bound
out
mov
out
xor
loop
push
jno
dec
sbb
lahf
dec
inc
add
fmulp
rcr
mov
xchg
cmp
xor
mov
outs
cmp
and
imul
xchg
lahf
retf
push
xor
mov
nop
scas
dec
and
add
lods
fs
stc
lea
mov
mov
aas
fs
jne
cmp
cdq
mov
inc
mov
je
sub
call
into
sbb
cmps
rcl
sub
xchg
out
pop
xchg
sub
(bad)
mov
sbb
call
pop
stc
mov
mov
pop
xchg
mov
dec
add
gs
icebp
out
ret
sahf
clc
mov
das
into
shl
dec
in
(bad)
jmp
add
mov
mov
test
outs
mul
enter
mov
sub
cmp
mov
xchg
and
mov
mov
jbe
fbstp
cmp
retfw
cmp
mov
in
in
fild
fiadd
add
loope
dec
sub
inc
xchg
push
ret
dec
ja
push
adc
or
mov
mov
(bad)
mov
dec
je
popf
ss
test
call
xor
popf
xlat
scas
push
or
scas
cs
xchg
aad
pushf
test
test
movs
or
or
cwde
push
mov
jnp
jo
push
enter
aam
xor
popf
add
cmps
sbb
popf
out
push
and
jg
inc
outs
pop
test
in
pop
add
iret
stos
jecxz
adc
pandn
xchg
cdq
cli
inc
xchg
daa
pop
iret
imul
sub
or
dec
ficom
call
out
fs
xchg
xchg
pushf
xchg
mov
xchg
rcr
xchg
mov
dec
mov
xor
outs
bound
xor
(bad)
iret
add
out
repz
popa
jle
in
not
test
pop
cwde
shl
inc
div
sub
jb
push
mov
or
pop
out
inc
test
aas
imul
inc
cdq
aad
sar
sbb
in
(bad)
js
lods
repz
(bad)
call
sub
retf
push
cmp
xor
shl
pop
inc
mov
test
rol
pop
sub
mov
pop
cs
dec
mov
add
sbb
mov
lds
icebp
pop
jb
pop
add
lods
cmps
cmp
nop
and
push
cmovbe
push
sbb
stos
pushf
add
fadd
rcl
pushf
and
mov
call
jns
data16
xchg
lea
dec
add
std
add
inc
pop
int3
nop
dec
jecxz
jecxz
ror
mov
inc
(bad)
(bad)
dec
add
loope
shr
or
pop
mov
jb
push
add
iret
daa
cmp
and
arpl
in
xor
pushf
or
push
and
adc
fcomp
mov
push
je
int3
mov
adc
shr
out
xchg
add
(bad)
retf
aas
aad
jbe
sub
enter
sbb
pop
in
data16
mov
fcomp
retf
(bad)
loop
xor
pop
dec
out
adc
out
scas
pop
cwde
loop
div
cmp
ret
xor
stos
fdivr
or
mov
adc
imul
aad
cdq
adc
jb
inc
addr16
push
xchg
imul
cmp
inc
(bad)
cli
sbb
cdq
cwde
adc
sub
test
mov
inc
sahf
retf
hlt
in
pop
popa
arpl
pop
sub
mov
out
jne
mov
popf
shl
add
mov
pop
adc
fstp
dec
inc
cs
add
nop
(bad)
xchg
fiadd
pusha
dec
bound
aad
cmp
out
int
sub
movs
xor
sub
fdivp
out
mov
sbb
mov
jbe
sar
xchg
int
in
mov
pop
loope
out
xchg
add
sbb
das
idiv
cmps
stos
jbe
or
mov
pop
in
add
mov
xchg
popf
popa
mov
cli
iret
lock
pop
outs
call
add
jae
std
and
mov
mov
inc
mov
fdivr
and
sub
jo
loope
or
ins
out
inc
movs
ror
(bad)
ret
push
das
add
push
jmp
jmp
and
retf
sub
add
mov
jnp
xor
sbb
xchg
lea
xor
dec
dec
jl
lahf
dec
(bad)
popf
dec
mov
add
rcl
leave
add
sahf
ret
rcr
jns
dec
inc
cs
push
mov
arpl
jns
pop
int
ins
fnstsw
jl
stos
icebp
inc
sbb
add
jbe
leave
mov
push
(bad)
call
dec
pop
inc
in
xchg
imul
dec
cmps
fld
ret
mov
sub
lldt
sub
into
jbe
outs
or
push
fwait
adc
push
into
mov
pmulhuw
dec
adc
enter
jmp
xchg
or
jmp
nop
mov
jb
xor
popf
sbb
retf
xchg
dec
cs
jnp
(bad)
aas
xchg
xchg
dec
sti
pop
xchg
jnp
data16
rcr
pop
stos
mov
mov
fs
xchg
in
push
mov
leave
ins
outs
repnz
mov
repnz
dec
jge
mov
jmp
ud1
mov
push
jecxz
mov
push
fcomp
fdiv
popf
jbe
sub
adc
test
cmp
fwait
test
xor
aaa
sbb
call
sub
outs
hlt
xor
cmps
dec
xor
lods
(bad)
ins
sbb
aam
jbe
cmps
inc
(bad)
(bad)
retf
sahf
dec
into
jge
pop
mov
mov
std
and
rcr
or
add
(bad)
fisub
jecxz
add
mov
std
xor
and
push
shl
sbb
mov
push
sub
test
arpl
jae
pop
push
sub
stos
mov
mov
stos
jbe
inc
dec
jle
sbb
dec
xor
add
mov
fmul
cdq
jge
std
sar
mov
jg
loop
in
daa
pusha
sbb
js
out
jmp
fwait
sbb
lods
jb
cmp
pop
pushf
fiadd
cmp
mov
cmps
mov
movs
cmp
js
cmps
push
repnz
or
lods
movs
icebp
pop
ja
ror
cld
hlt
cwde
fwait
in
hlt
hlt
pop
gs
jo
scas
add
daa
aam
stos
jmp
mov
adc
pop
lds
ficomp
inc
std
mov
icebp
repz
repz
(bad)
dec
arpl
into
jp
aas
das
xchg
or
ret
or
loopne
jb
mov
cs
adc
adc
and
push
jbe
and
ret
hlt
jle
in
jnp
inc
mov
call
cwde
ret
add
outs
sbb
add
outs
xchg
jl
adc
clc
mov
mov
fwait
push
and
mov
xchg
add
pop
pop
dec
movs
call
sbb
mov
shl
mov
sbb
movs
dec
fstp
cld
sbb
jmp
mov
and
xor
scas
push
lds
mov
mov
and
into
add
xor
and
push
cld
inc
ins
retf
sbb
or
ret
dec
daa
xlat
stos
pop
pop
aaa
std
dec
cli
adc
cmp
xchg
push
(bad)
in
mov
mov
inc
in
in
dec
adc
fs
jnp
xchg
retf
pop
jecxz
imul
dec
ror
cs
cmps
sbb
sbb
xchg
popa
cmp
sub
addr16
dec
icebp
cmc
lock
clc
cdq
pop
adc
dec
dec
sar
add
das
inc
add
inc
or
and
mov
xor
test
xlat
shl
push
sbb
loope
cld
xor
add
test
shl
jle
call
cmp
xor
(bad)
jb
inc
mov
iret
fsub
enter
scas
mov
std
pop
mov
dec
in
mov
adc
stos
ins
sbb
dec
add
aaa
loope
xchg
add
in
xchg
mov
gs
movs
test
push
add
cwde
xlat
jno
hlt
ins
(bad)
pop
loopne
xor
adc
pop
jmp
rcr
jle
jb
repz
sub
pop
stos
fucomip
xchg
(bad)
cld
push
xor
push
lods
fwait
jle
sbb
dec
xlat
(bad)
sub
movs
outs
out
or
cmp
pop
popa
push
xor
pop
or
xor
push
adc
lahf
fucom
xor
mov
jl
jle
pop
mov
cli
pop
icebp
fisttp
mov
(bad)
inc
bound
add
cmp
or
jne
popa
push
out
sub
(bad)
fst
adc
mov
xor
ss
pushf
stos
lea
retf
cmps
scas
add
xchg
mov
mov
out
add
pop
fdiv
inc
mov
lea
pop
pop
cs
test
imul
xchg
scas
sub
cmp
jb
add
pop
(bad)
xchg
cmp
out
mov
mov
push
in
clc
jnp
sub
aam
inc
mov
aaa
mov
mov
scas
cmp
(bad)
outs
retf
or
les
jl
mov
stos
mov
mov
jmp
inc
std
or
vpmadcswd
mov
mov
mov
or
scas
mov
in
mov
popa
retf
mov
(bad)
mov
rol
jmp
mov
ror
dec
xchg
cmp
dec
jae
dec
mov
push
mov
inc
int3
or
pusha
push
cmp
icebp
mov
add
(bad)
push
sub
clc
lods
and
aaa
call
in
cmp
pop
sti
sar
aam
jmp
push
pop
add
xlat
dec
std
mov
fcomi
mov
lds
lea
push
not
es
nop
xor
imul
lods
adc
imul
pop
mov
and
push
and
scas
call
push
dec
inc
push
aam
mov
dec
mov
or
dec
xor
push
inc
(bad)
out
mov
ret
js
xchg
aaa
ja
push
push
adc
imul
mov
ds
jbe
mov
add
xlat
daa
sbb
sti
je
aad
lahf
and
inc
int
iret
in
add
ficomp
lahf
xchg
cld
loopne
daa
adc
cmp
in
jno
dec
push
jl
jg
inc
rcr
mov
push
daa
xor
inc
sti
jbe
fstp
xchg
mov
pop
out
xchg
enter
xchg
or
movs
sub
aam
(bad)
int3
cld
mov
in
cs
pop
sbb
jb
adc
shr
mov
sub
xor
fstp
xchg
mov
jbe
daa
lahf
pop
outs
adc
pop
inc
jo
push
sbb
test
fstp
fcmovnb
out
mov
push
(bad)
fisttp
nop
ds
inc
hlt
bound
dec
xchg
fs
inc
ins
dec
jle
push
push
hlt
aad
jg
mov
jp
shl
sub
test
adc
dec
bound
sbb
mov
jg
(bad)
f2xm1
fidivr
jge
xor
dec
jge
lea
pop
xchg
out
inc
js
lods
retf
in
jbe
pop
or
imul
test
mov
rol
xchg
xchg
add
stos
mov
sbb
mov
inc
xchg
fdiv
dec
mov
pushf
mov
stos
mov
mov
scas
popf
jp
jmp
push
cmp
push
jmp
push
add
in
push
cmc
dec
add
pusha
add
jne
test
loop
pop
(bad)
mov
arpl
push
push
cli
cmp
popa
mov
mov
cli
sub
retf
jno
scas
pop
fwait
jb
daa
inc
mov
mov
ins
mov
(bad)
inc
dec
push
jo
in
xchg
jne
adc
nop
push
shr
and
aaa
cdq
js
out
sub
out
enter
mov
loopne
pop
test
call
adc
jmp
cmps
jecxz
add
pushf
add
mov
push
(bad)
adc
inc
adc
hlt
pusha
add
dec
push
ins
jno
(bad)
xor
mov
fisttp
dec
bnd
sbb
push
sub
jns
jne
popf
pusha
xor
push
push
pop
fcmovb
(bad)
fisubr
cmp
stos
in
dec
sar
cs
adc
dec
jmp
jge
inc
rcl
enter
dec
and
adc
fs
adc
cwde
int3
jnp
fstp
inc
xchg
dec
ror
add
mov
ror
(bad)
mov
std
mov
rol
add
push
add
push
in
test
mov
mov
outs
jle
(bad)
jns
xchg
rcl
nop
add
push
and
leave
sbb
cmp
mov
fisubr
mov
pop
dec
scas
scas
or
test
pop
out
mov
mov
inc
xchg
loope
xor
cmps
cmp
mov
jb
mov
fs
push
mov
mov
dec
cld
push
jmp
xchg
cmp
jmp
mov
retf
jnp
(bad)
fidiv
fdivp
imul
push
cmps
jl
push
dec
jl
repz
pop
div
shl
xor
jmp
out
out
mov
xchg
mov
and
or
push
jg
mov
mov
pop
in
or
dec
inc
push
mov
fisub
push
iret
popf
nop
dec
enter
test
bound
callw
cmp
inc
int3
jl
hlt
loopne
sbb
int
pop
dec
scas
es
(bad)
mov
xchg
sub
ds
nop
xor
ja
lds
and
rcl
xchg
cmps
push
cwde
push
(bad)
aas
push
jbe
call
ficom
adc
push
adc
sbb
outs
int3
xchg
icebp
sbb
jle
aad
fs
les
aad
mov
add
push
jb
fisttp
and
mov
adc
xor
mov
pop
add
inc
loopne
pop
mov
dec
ret
dec
in
cld
sbb
test
push
dec
mov
push
dec
inc
mov
fild
add
call
xor
jns
sub
cld
or
cmp
test
mul
imul
test
jmp
imul
and
dec
call
pop
test
in
and
jb
xchg
lds
fisub
inc
xchg
cli
xchg
jecxz
jmp
and
stos
xlat
mov
add
movs
jb
cli
pusha
or
push
jle
in
loope
dec
test
jne
aaa
sti
xchg
jb
mov
test
and
dec
cmp
mov
fs
xlat
movs
in
lahf
and
ret
hlt
push
xchg
add
rol
pop
mov
loope
adc
mov
mov
add
pop
shl
cmp
ror
sbb
mov
xchg
mov
jmp
push
add
mov
repnz
aam
out
jo
leave
scas
rcr
inc
mov
lahf
(bad)
or
les
mov
mov
and
cmp
jns
add
jbe
aad
mov
in
into
ror
test
cmp
nop
scas
leave
push
or
test
or
cdq
movs
inc
lds
shr
cmp
jo
jg
aad
inc
test
fdivr
dec
sub
inc
adc
clc
inc
popf
pop
gs
add
sub
fst
fbstp
repnz
xlat
or
stos
ss
out
call
mov
inc
rcr
and
jmp
addr16
sbb
mov
fcomp
ja
xor
aas
jle
or
inc
test
fadd
push
fidivr
dec
ror
(bad)
(bad)
or
mov
jns
movs
pop
jmp
adc
loop
xchg
mov
jg
inc
inc
repnz
adc
mov
sbb
jb
mov
ins
ins
cmp
js
int3
jmp
push
xchg
mov
adc
pop
shl
and
jge
mov
inc
ret
pop
add
mov
inc
push
jl
dec
ret
adc
inc
lds
sar
sbb
lds
jno
cmc
fistp
push
pusha
inc
in
dec
mov
jo
lods
rol
dec
daa
jno
sub
fbld
cmp
mov
xchg
lods
or
mov
lods
inc
jge
inc
jmp
xchg
xor
mov
lahf
mov
pop
push
or
leave
xchg
xor
dec
loop
ffreep
add
inc
jl
inc
sub
sahf
mov
inc
into
sub
mov
fwait
sbb
add
pop
data16
hlt
addr16
and
add
push
sub
mov
out
adc
push
rol
daa
mov
dec
int3
fs
js
xor
mov
test
outs
out
jb
pop
cmp
(bad)
inc
(bad)
cmp
pop
call
mov
out
xchg
dec
in
push
xor
jge
loop
and
mov
inc
xchg
cmp
mov
and
cdq
fimul
(bad)
sub
imul
pop
loop
pop
xchg
add
cmc
test
scas
jbe
or
ins
imul
ficomp
ja
scas
pop
dec
cli
mov
sub
fbld
jnp
stos
into
mov
mov
jnp
popf
pop
jb
mov
push
or
pop
idiv
sub
xchg
mov
outs
pop
popa
daa
add
retf
push
cli
repz
adc
cmps
dec
xchg
shl
mov
div
mov
xor
(bad)
cmp
push
push
cmp
sbb
xor
adc
pop
les
or
icebp
or
push
mov
stc
sub
fldcw
pop
mov
add
xor
mov
sub
hlt
sub
add
scas
and
(bad)
dec
pop
push
xor
push
or
das
or
and
ja
mov
clc
retf
mov
mov
pop
dec
and
es
inc
jnp
fnsave
leave
or
repz
mov
jae
icebp
mov
add
xchg
add
xchg
ins
xlat
mov
cmp
cmc
mov
es
jmp
inc
rol
fwait
in
test
test
jge
xchg
js
call
ret
mov
cmp
jne
out
outs
sbb
jmp
mov
cmp
and
sbb
das
es
or
fcom
fild
jl
aam
out
les
dec
jns
or
xchg
mov
lahf
pop
lods
es
(bad)
ja
adc
xchg
mov
xor
test
mov
push
stos
mov
out
outs
sub
or
mov
daa
jmp
inc
cdq
and
pop
pusha
test
or
xchg
pusha
xchg
add
jb
push
ja
aad
or
in
leave
sbb
scas
lea
jno
push
loope
or
dec
cs
nop
sub
push
push
pop
jl
push
xor
sbb
pop
sbb
xchg
stc
fsubr
push
sbb
lock
js
xor
inc
test
(bad)
pop
cmp
(bad)
call
retf
shl
xor
and
ins
inc
xchg
inc
sbb
test
movs
sti
push
jg
imul
cmp
or
jp
push
mov
cmp
or
pop
mov
icebp
mov
jbe
scas
cmc
call
and
jge
shr
js
call
xor
add
adc
dec
push
or
cmp
mov
cmc
out
xchg
fcom
fimul
dec
sti
xor
packuswb
cli
xor
mov
push
in
xor
inc
xlat
mov
adc
test
ja
sbb
xchg
xacquire
inc
pop
sub
fcomip
xchg
test
fwait
cld
cmps
je
sbb
call
pop
pop
outs
shr
mov
fadd
fldenv
xlat
ror
pop
mov
add
or
add
aas
inc
outs
cdq
or
test
push
pop
retf
sbb
loope
xor
mov
mov
ret
xor
mov
jb
mov
add
cmps
or
and
add
les
daa
leave
cmp
inc
push
fwait
xchg
stos
adc
xor
out
ins
sbb
(bad)
mov
out
pop
fisubr
nop
xor
lods
cdq
out
ins
add
out
sar
push
cmp
mov
and
sbb
into
ficomp
sub
mov
add
loop
xchg
mov
popa
xchg
cs
push
rcr
les
pop
dec
pusha
jl
mov
xor
mov
js
in
ins
rol
pop
repnz
mov
pop
(bad)
adc
rcr
iret
rcl
push
movs
mov
shl
cmp
sub
popa
ss
mov
mov
mov
fild
ss
retfw
cwde
leave
ds
cmp
pop
ss
adc
sub
mov
out
sbb
adc
mov
shl
fisubr
push
pop
bswap
mov
push
xchg
stos
xor
mul
(bad)
and
in
aas
fnstsw
fdiv
pop
(bad)
sub
cdq
cli
lds
or
xchg
sub
neg
mov
lock
ja
jg
mov
and
push
jb
mov
test
ss
les
dec
pop
sub
rol
cmp
adc
out
gs
jnp
or
(bad)
mov
push
push
inc
stos
repz
fld
bound
dec
jecxz
arpl
xor
repnz
or
xor
les
sbb
cmp
sbb
hlt
repnz
lock
stos
adc
mov
dec
mov
js
jno
test
and
sub
or
not
aad
mov
mov
mov
xor
adc
push
push
popf
movs
xchg
repnz
out
out
inc
mov
mov
jmp
and
pusha
mov
iret
out
inc
clc
mov
jl
std
jmp
jnp
xchg
pop
and
ins
and
in
test
sbb
fwait
xchg
pop
dec
mov
mov
dec
stos
stc
fs
lea
popa
in
sbb
mov
popf
mov
mov
push
and
cmp
adc
clc
mov
push
add
add
inc
call
daa
push
jbe
sbb
enter
jno
test
inc
jnp
dec
aam
or
jmp
lds
pop
call
inc
add
movs
mov
push
add
inc
cdq
mov
pop
shr
or
jg
push
repz
mov
jo
aas
(bad)
xchg
das
and
aam
xchg
sub
and
shl
cdq
stos
xchg
adc
sbb
es
stos
retf
pusha
sbb
dec
mov
in
mov
add
dec
mov
in
mov
js
jae
xor
xchg
and
das
popf
mov
pop
push
mov
mov
mov
es
push
fmul
add
xchg
stos
lock
adc
in
aad
daa
lods
sub
mov
cdq
jle
mov
retf
cmps
dec
push
fwait
xlat
sbb
mov
in
push
int3
mov
movs
loop
add
lock
push
bound
gs
dec
push
scas
mov
xchg
sub
add
jecxz
cwde
pop
or
push
fidiv
fdecstp
stos
jg
rcr
int
test
(bad)
and
jg
adc
pop
and
ret
or
xor
(bad)
sbb
adc
sub
xor
pop
sub
push
cmp
pop
fidiv
je
add
loopne
pop
pusha
xchg
ins
pusha
addr16
add
inc
xchg
pop
and
bound
movs
aas
repnz
fwait
ret
push
outs
add
push
and
push
inc
fadd
xchg
mov
inc
fisttp
inc
and
sub
aad
cmp
ins
and
and
jmp
test
pop
pop
sbb
mov
mov
sar
push
add
jg
imul
lea
call
pop
aas
repz
imul
dec
ds
xor
retf
scas
shl
fsubr
ficom
cmps
jne
fmul
fst
and
sub
inc
jnp
enter
xlat
clc
lea
popa
jo
sbb
fcomp
pop
enter
cmp
aas
inc
push
dec
adc
movs
pop
or
sub
jo
psrlq
in
(bad)
jne
outs
retf
popf
dec
pop
movs
rcl
inc
imul
scas
push
jmp
pop
gs
test
aas
jp
xchg
and
add
gs
rol
adc
mov
iret
push
sub
into
mov
xor
jno
movs
push
jecxz
sahf
ret
jns
cmp
pushf
xchg
test
int3
imul
xchg
test
pop
(bad)
pop
add
push
call
lahf
sahf
inc
les
and
cmp
sahf
mov
sahf
mov
int3
and
in
outs
push
mov
push
not
dec
imul
cmp
mov
xor
or
ror
pop
cwde
mov
and
push
hlt
cmp
and
lods
lea
add
push
popa
enter
pop
inc
rol
(bad)
jmp
popf
cmp
mov
push
pop
in
xchg
repz
sbb
dec
(bad)
dec
push
jb
and
ja
imul
fstp
or
xor
and
sbb
jne
es
enter
dec
fcomp
or
mov
dec
or
pop
add
aaa
lock
mov
das
in
clc
shl
xlat
jp
sti
pop
test
and
mov
sub
add
movs
cmps
jl
pop
mov
mov
cwde
dec
add
icebp
xchg
imul
push
add
ins
pop
sar
pop
add
add
mov
mov
mov
stos
adc
push
enter
push
dec
mov
cmp
int3
xchg
sbb
mov
outs
(bad)
in
jnp
fisub
scas
add
(bad)
gs
aad
in
retf
cmp
xchg
inc
sub
out
sbb
cmp
cmps
movs
jmp
push
stc
adc
mov
ss
fs
das
leave
xor
jne
mov
jl
sbb
xor
into
sbb
hlt
adc
or
jmp
call
jecxz
dec
out
sbb
mov
imul
inc
dec
imul
mov
xor
idiv
mov
pusha
inc
cld
xor
(bad)
aam
retf
mov
outs
imul
test
push
push
adc
dec
xchg
test
ret
js
outs
pop
ret
cmp
jp
aad
nop
adc
cli
leave
enter
icebp
or
daa
dec
imul
pop
loop
or
mov
xchg
push
popf
test
retf
shl
adc
push
rcr
sahf
push
das
in
mov
dec
fxam
out
fst
ficom
scas
xchg
mov
cmps
movs
xchg
aad
mov
rcr
push
sbb
mov
xor
nop
dec
adc
les
adc
adc
fwait
mov
push
jae
pop
xchg
pop
shl
pop
or
inc
bnd
cmp
ficomp
jb
fstp
call
call
pop
popf
xor
mov
idiv
or
cmp
pop
xor
jle
cs
cmp
jmp
in
mov
gs
fistp
lea
xor
mov
adc
push
jae
add
outs
mov
sbb
pop
adc
mov
pusha
push
jbe
pop
xor
or
lea
inc
ret
mov
or
mov
imul
sub
cmp
fsub
pop
fidiv
push
mov
adc
int
vpavgw
or
push
sub
mov
stc
mov
(bad)
call
cld
test
add
jb
test
shl
(bad)
leave
inc
fcmovnbe
sub
sbb
push
aaa
adc
movs
xor
or
test
bnd
sbb
jo
or
movs
enter
xor
fistp
xor
mov
loopne
cmp
add
fwait
cmp
jns
cmp
jg
cmp
int3
out
and
and
fcomp
rcr
aaa
shl
sub
mov
add
test
and
jmp
inc
mov
and
lock
pop
xor
mov
xchg
lods
pop
push
mov
mov
nop
lods
ret
data16
sahf
ret
arpl
and
fs
xchg
into
dec
xor
aas
jmp
je
(bad)
push
push
xchg
xor
and
and
cmp
es
or
aas
mov
jl
icebp
cld
pop
push
sbb
movs
jg
test
cli
int
jae
inc
or
sbb
pushf
je
stos
shl
pop
(bad)
out
sbb
sbb
push
pusha
mov
(bad)
cli
popa
cmp
(bad)
sub
test
lahf
cmp
dec
mov
movs
int3
inc
push
pop
xor
jno
push
es
sbb
retfw
icebp
jne
or
push
fisubr
sbb
sub
ss
xchg
retf
iret
sbb
inc
sbb
jg
mov
scas
pop
xor
jp
mov
inc
cmp
adc
es
lahf
dec
ret
adc
gs
retf
mov
retf
in
aas
shl
or
sbb
ins
adc
xor
push
call
rcr
or
and
mov
pop
xor
shl
in
data16
mov
fisub
pop
fwait
add
jle
out
shl
push
pop
cmp
scas
imul
push
push
fs
or
leave
repnz
mov
fisubr
inc
sub
pop
xor
push
in
pop
or
mov
sbb
sti
int3
sbb
sub
sbb
cmp
imul
xchg
cmc
cmp
pop
pushf
xlat
jns
xchg
mov
dec
cmps
cmp
or
xor
push
mov
push
push
(bad)
fmul
xchg
(bad)
shl
retf
sahf
jnp
(bad)
jb
mov
(bad)
aaa
into
cmp
ret
sar
cdq
retf
mov
jle
xchg
lods
aas
loop
aaa
xchg
les
in
std
push
inc
mov
xchg
out
mov
retf
cli
gs
jnp
sub
in
(bad)
mov
lea
jo
out
push
push
mov
mov
adc
inc
call
push
sbb
cmp
sbb
jmp
pop
stc
mov
inc
push
pop
mov
movs
add
in
sbb
lds
adc
pop
js
lods
mov
or
shl
and
push
vmovlpd
les
and
mov
sti
inc
mov
cmps
(bad)
fild
scas
retf
adc
jno
inc
aam
push
stos
cmp
int
stos
push
mov
dec
xchg
xchg
sbb
in
inc
sub
dec
mov
mov
sti
in
push
push
lods
inc
out
or
mov
mov
or
add
(bad)
cs
jl
popf
aad
sbb
mov
push
xchg
in
in
cwde
cmp
dec
movs
enter
call
pop
in
fiadd
xchg
mov
jne
mov
in
jp
push
repz
in
shl
mov
rcr
pop
and
xor
cwde
mov
mov
mov
push
in
push
std
pop
ret
dec
daa
rol
fwait
cmps
imul
cmp
cmps
pop
rol
stos
call
fiadd
jae
inc
and
mov
ror
leave
add
add
fs
out
dec
iret
inc
mov
xor
sbb
loopne
or
mov
cmp
fnstenv
adc
fwait
xor
xor
cwde
cmp
add
in
dec
mov
iret
fadd
cmps
mov
pop
jg
rcr
pushf
mov
(bad)
repz
rol
rol
arpl
enter
inc
add
mov
scas
inc
jp
jns
cwde
and
xchg
outs
dec
(bad)
xor
xchg
es
clc
or
xchg
jmp
cmps
mov
cmp
cdq
jnp
mov
adc
push
call
adc
adc
call
cmp
push
nop
jnp
(bad)
int
fs
dec
(bad)
aad
push
xor
mov
jns
das
sub
and
or
mov
bound
ss
jge
push
add
sub
add
mov
(bad)
inc
inc
fs
xor
pop
arpl
push
xor
lods
fs
xchg
cmc
mov
sbb
fist
js
sbb
pop
push
push
div
and
add
movs
jecxz
popw
loope
dec
test
cmp
shl
xchg
sbb
je
stos
xor
(bad)
js
loop
pop
and
ret
pop
out
loopne
dec
sbb
inc
or
stc
push
xchg
ret
mov
cli
fdivrp
cmps
push
repz
ins
call
pop
xchg
shl
iret
fbstp
mov
adc
mov
je
cld
pop
inc
sbb
sbb
in
dec
movs
bnd
arpl
leave
aas
lahf
inc
pop
ds
jne
push
cdq
clc
fbld
test
sbb
in
rcr
bound
in
cdq
mov
add
(bad)
jnp
(bad)
dec
and
sbb
inc
scas
in
mov
adc
sub
(bad)
(bad)
adc
imul
push
movs
cmc
push
or
sahf
leave
iret
mov
adc
xchg
xchg
rol
out
xchg
xchg
push
push
push
mov
xchg
jmp
lods
push
push
sub
xor
int
test
popa
sub
fist
int
cs
jl
xor
inc
mov
fidivr
dec
mov
aad
and
mov
mov
iret
icebp
and
das
ja
push
mov
jp
(bad)
jno
nop
loopne
scas
xor
shl
mov
outs
push
cs
push
cmc
mov
adc
and
es
push
jno
sub
cmp
out
mov
dec
js
mov
sbb
loope
pop
dec
js
sub
cmp
shl
ss
sar
ss
cs
inc
jne
mov
hlt
inc
sbb
ins
aaa
ss
mov
sbb
pop
pop
xchg
and
(bad)
movs
lock
out
ds
sub
in
and
cmps
sub
inc
push
push
rol
shl
ss
ror
das
pop
or
push
test
and
cmp
push
fmul
pop
dec
cli
fwait
xor
test
xchg
mov
jg
out
addr16
fdiv
sbb
int3
repz
mov
xchg
mov
inc
push
add
fadd
sbb
mov
xor
add
mov
or
inc
out
pop
cmp
inc
add
xchg
mov
xor
loopne
inc
adc
mov
outs
push
lods
ss
repz
push
sub
jp
aaa
mov
push
pushf
dec
and
rcr
sub
adc
lock
js
xchg
push
(bad)
and
repnz
loope
or
mov
jmp
inc
sub
sub
sbb
nop
cmp
js
dec
repz
and
lock
and
cwde
jae
sub
cmp
daa
pmulhuw
push
and
(bad)
loop
mov
jmp
sbb
pop
lahf
mov
push
repnz
aam
xchg
int
pop
imul
xor
lock
mov
and
xchg
inc
pop
jb
cli
frstor
jbe
lds
call
shr
inc
retf
outs
jae
leave
test
pop
sub
add
lock
xlat
ret
xor
mov
inc
jns
arpl
not
dec
or
(bad)
cs
test
jmp
sub
mov
retf
and
shl
fst
cmc
adc
into
imul
retf
inc
retf
cmp
sub
(bad)
sbb
fst
mov
imul
push
fdiv
lea
push
(bad)
in
test
nop
in
fild
cdq
mov
push
movs
sbb
mov
repz
test
push
mov
aad
iret
cmps
call
mov
shr
ins
out
adc
in
fadd
jmp
adc
and
or
sub
stc
push
inc
push
arpl
jmp
pop
inc
repz
popf
push
xor
sub
mov
fisubr
loope
and
or
in
pushf
outs
and
or
ins
retf
lea
adc
aad
daa
ficomp
pop
movlps
(bad)
fisttp
xchg
pop
xor
pop
cmp
icebp
test
imul
inc
addr16
adc
aas
xor
shl
xor
rcr
(bad)
lods
lds
(bad)
les
add
mov
xchg
cli
data16
inc
inc
cmps
repz
mov
movs
rol
and
cmp
mov
jg
mov
sub
aam
sbb
sub
push
inc
add
xchg
inc
pop
(bad)
mov
push
(bad)
dec
inc
add
inc
or
push
test
hlt
(bad)
push
das
push
dec
or
jl
mov
mul
mov
in
pusha
mov
push
mov
into
mov
scas
ror
add
mov
jbe
push
pop
shl
ret
xchg
and
shl
scas
push
xlat
and
adc
outs
or
je
fisubr
or
jmp
or
rol
pop
xchg
outs
mov
mov
sub
push
movs
cmp
or
div
aad
xor
out
xlat
jmp
imul
stos
pop
jp
xchg
iret
jmp
pushf
arpl
or
mov
jae
push
sbb
mov
mov
add
fwait
aad
jecxz
and
pop
add
inc
mov
or
cwde
mov
neg
ds
mov
pop
clc
jbe
out
das
push
(bad)
ins
adc
dec
enter
cmp
dec
xchg
inc
loope
dec
call
inc
jecxz
int
xlat
outs
push
mov
retf
mov
aas
retf
loope
mov
sub
mov
js
jg
xchg
mov
cmp
cli
xor
push
or
xor
rcl
jle
xchg
pop
cmp
pop
dec
or
xchg
mov
sub
add
jle
xchg
or
js
or
jp
loope
cmps
ds
mov
rcr
scas
add
xor
xchg
push
pop
scas
adc
add
mov
clc
(bad)
mov
les
fdivr
and
retf
push
add
push
or
lods
in
icebp
push
mov
and
jnp
push
adc
lods
shl
and
or
loopne
inc
add
push
sub
jge
(bad)
push
or
mov
xor
es
xor
push
cmp
jmp
outs
pop
jns
mov
mov
ficomp
xchg
call
mov
push
add
fstp
enter
(bad)
pusha
(bad)
mov
dec
push
mov
daa
aas
xchg
imul
loope
sub
test
lods
dec
repz
push
inc
push
fcom
adc
repnz
cmp
loopne
(bad)
dec
push
inc
mov
addr16
popa
repz
add
test
or
xchg
cld
scas
dec
out
add
adc
int3
inc
in
sbb
jge
arpl
xchg
movs
dec
mov
push
mov
jp
lods
xchg
fsubr
add
push
sahf
dec
je
int
mov
retf
das
sbb
adc
jmp
ss
and
retf
outs
lds
das
ins
int
sbb
xchg
daa
mov
in
sub
and
dec
lds
push
cs
aaa
imul
mov
pop
xchg
cmc
or
cmps
retf
or
lds
js
aam
xor
test
frstor
test
cdq
js
push
dec
mov
xchg
data16
sub
xor
pop
or
pop
jne
mov
xor
push
ds
jno
je
sub
jmp
xchg
out
add
mov
inc
jo
inc
jae
mov
repz
or
ret
out
iret
fnsave
dec
inc
ss
xor
fidiv
idiv
pop
jle
sbb
lock
call
xchg
jmp
add
repnz
xchg
ins
pop
lods
retf
stos
(bad)
outs
and
cmps
add
out
js
sub
call
sbb
in
cmp
loopne
lods
test
test
hlt
sub
gs
and
js
pop
test
jp
into
push
xchg
ins
les
in
imul
add
(bad)
jle
jmp
imul
in
push
daa
std
in
call
xchg
and
jne
xchg
scas
(bad)
inc
sti
add
in
scas
ds
test
dec
add
stos
and
xlat
(bad)
nop
and
mov
adc
cmp
adc
mov
add
sar
test
jle
lods
mov
fisub
scas
fistp
adc
mov
lock
cmp
icebp
mov
mov
(bad)
call
cmps
lods
stos
aam
cmp
dec
and
out
cmp
pop
jg
cmc
push
pop
fnstenv
add
inc
cdq
mov
loop
xor
inc
in
in
and
outs
in
js
xlat
jns
test
push
adc
(bad)
aaa
inc
dec
pop
imul
push
mov
push
add
nop
or
adc
fldcw
mov
fcom
push
mov
mov
jns
sbb
jp
sub
cmp
mov
jecxz
cmp
repnz
imul
mov
(bad)
push
icebp
jne
and
push
jecxz
jp
or
outs
mov
test
dec
cmp
popa
inc
retf
call
sahf
sub
lods
retf
in
and
adc
icebp
jno
jno
ins
jmp
scas
clts
rol
js
jmp
ins
fcomi
push
xor
out
sbb
shl
clc
xchg
mov
pusha
shl
pusha
pusha
push
or
repnz
test
cmp
adc
call
pop
adc
and
inc
dec
sbb
lea
xor
lea
inc
inc
clc
push
pushf
cs
iret
aas
lods
push
cmps
push
sub
add
jnp
jbe
push
cld
out
xlat
aad
retf
jmp
mul
jb
sub
cli
mov
add
mov
xor
and
out
int
mov
fadd
(bad)
and
test
sbb
jae
add
fwait
adc
and
inc
mov
or
mov
gs
cmp
in
inc
sahf
(bad)
and
repz
fadd
fs
cs
mov
cmps
cmp
not
inc
ds
push
lods
mov
inc
loope
je
dec
sub
mov
cdq
retf
or
cld
in
pop
mov
(bad)
jle
fucomp
cld
cmp
pusha
add
addr16
add
or
push
push
ins
lock
adc
movs
repnz
outs
(bad)
retf
in
cmc
outs
jge
mov
mov
mov
aas
adc
mov
and
mov
frstor
pop
jmp
jmp
jno
int3
cmp
clc
mov
loop
pop
mov
adc
push
shl
adc
pop
xchg
push
and
call
or
xor
pop
push
cmps
pop
mov
xchg
xchg
cdq
jp
xchg
jnp
mov
jb
mov
mov
xor
mov
out
mov
xor
jne
repnz
jle
xchg
jg
dec
adc
push
les
add
mov
aad
sbb
mov
out
xlat
sbb
dec
push
dec
xchg
cdq
xchg
mov
sub
movs
dec
jmp
outs
inc
popf
dec
jmp
push
int3
cmp
push
and
xchg
or
scas
mov
xchg
adc
aad
mov
fdiv
cmp
xor
in
retf
(bad)
xor
pop
lock
jnp
sbb
stos
xchg
mov
dec
sbb
dec
and
idiv
push
cmp
sub
xor
cmp
and
fst
ret
xchg
dec
mov
cmp
inc
jnp
call
jmp
repz
out
mov
push
out
push
add
popa
fsub
(bad)
jmp
mov
pop
sti
cmps
or
popa
push
das
scas
popf
pop
mov
popa
cmp
loopne
inc
inc
sbb
jb
movs
arpl
dec
push
pop
jae
retf
out
add
pop
loop
aas
outs
imul
dec
cli
aad
jg
in
push
ret
mov
pop
sbb
fs
sbb
mov
idiv
jge
dec
fs
jo
push
pusha
cmp
mov
ds
mov
mov
lods
or
dec
in
fisttp
push
mov
mov
div
inc
adc
mov
mov
and
cld
pushf
xchg
repnz
jle
cmps
aam
inc
pop
push
mov
adc
in
cld
inc
and
clc
cs
pop
or
ja
sub
lahf
lods
dec
xchg
call
add
retf
popa
fdivp
popa
(bad)
cmp
fs
sub
test
into
ja
movs
jl
mov
add
movs
ror
dec
xchg
cmp
imul
dec
adc
adc
(bad)
jmp
or
or
mov
packssdw
out
adc
jbe
inc
and
retf
inc
jns
movs
mov
addr16
(bad)
movs
(bad)
in
xor
in
push
inc
lods
stc
dec
(bad)
xor
adc
xchg
aas
aas
iret
movs
daa
push
div
loop
les
dec
dec
dec
outs
aam
pop
jae
lahf
xor
icebp
and
mov
pusha
push
repnz
stc
pop
popa
cs
shr
xchg
pop
cmp
xor
mov
out
sub
cmp
arpl
cdq
sub
fidivr
push
cwde
ins
leavew
dec
dec
pop
scas
sbb
jmp
(bad)
ds
movs
mov
add
cmp
loopne
sbb
cmp
aam
mov
imul
retf
inc
xchg
lods
in
pop
pop
and
jle
fwait
sbb
fnstenv
push
push
iret
retf
mov
push
xchg
pop
retf
add
mov
pop
pop
aam
adc
xchg
dec
out
xor
push
push
cli
out
test
or
push
les
cdq
or
push
repz
xor
xchg
fiadd
aaa
jl
test
sbb
(bad)
(bad)
mov
aaa
fdivp
test
mov
into
inc
cmc
adc
lahf
push
ss
and
sti
inc
mov
int3
pop
sub
iret
cmp
retf
mov
sbb
or
call
(bad)
cs
sar
mov
stc
mov
add
lds
stos
data16
aaa
in
sub
jp
add
push
mov
fs
test
dec
ins
in
pop
cmp
mov
scas
and
mov
loopne
mov
inc
inc
(bad)
pop
movs
sub
icebp
xchg
push
jecxz
mov
sub
xchg
cs
stos
idiv
ret
ficom
dec
xor
push
ficomp
jl
enter
xor
aas
mov
xor
or
sub
push
push
in
jmp
jnp
push
test
jns
dec
repnz
out
mov
repz
xor
repz
lods
push
test
mov
retf
popf
jl
pop
xchg
jnp
pop
fldenv
fs
or
mov
(bad)
cmp
gs
mov
cld
ss
add
push
ret
(bad)
jge
and
xchg
(bad)
nop
ret
pop
out
jp
add
pop
xchg
pop
xor
lock
frstor
pop
cmp
push
daa
inc
xchg
lock
lahf
clc
pusha
mov
pushf
mov
cmp
dec
retf
pop
jmp
jmp
test
sysexit
stc
enter
lock
jmp
cmp
fstp
popf
mov
inc
iret
dec
mov
jge
mov
arpl
ror
inc
sub
jl
mov
in
rol
sub
xlat
into
lock
xchg
adc
dec
pusha
push
fcomp
dec
and
cmp
pop
sti
jmp
and
fdiv
das
cwde
in
mov
aam
cmp
iret
mov
rcl
push
movs
ret
cld
je
call
mov
outs
mov
jno
adc
xchg
add
xchg
and
arpl
adc
dec
(bad)
enter
cmps
fnsave
adc
inc
out
imul
mov
mov
sub
xchg
shr
sub
ins
mov
xor
jle
mov
lahf
int
dec
inc
into
or
and
cwde
into
(bad)
pop
data16
jg
add
xor
daa
iret
jb
mov
ss
add
stc
pop
aad
imul
fst
and
popf
xlat
inc
ror
stos
sbb
sbb
arpl
push
dec
push
fsub
xor
ret
scas
add
xchg
pop
les
inc
pop
fwait
add
sub
sbb
retf
jmp
dec
in
loop
lock
push
pop
xor
mov
scas
push
or
std
outs
pop
add
cmp
xchg
jb
les
mov
sub
xchg
mov
pusha
es
cmp
outs
mov
lods
sbb
inc
add
or
lods
fs
fnstcw
mov
mov
ins
loop
mov
mov
and
clc
fist
and
leave
movs
sbb
fwait
jg
test
inc
mov
pop
fadd
mov
ins
push
in
fwait
push
xchg
cmps
and
mul
and
jmp
mov
push
cmp
and
sub
aam
add
mov
push
xor
push
ja
mov
mov
std
dec
inc
jmp
dec
jg
lds
xchg
adc
in
adc
ja
sti
je
fld
shl
hlt
push
or
sbb
inc
rcl
pusha
retf
add
push
push
std
ja
mov
cmp
pop
inc
inc
xor
iret
xor
shl
mov
arpl
out
cmc
lock
cmp
repz
ins
mov
xor
js
and
cli
leave
repz
jae
retf
inc
imul
sbb
int
and
jp
fst
ja
pop
mov
jmp
movs
sbb
sar
jbe
xchg
add
or
jmp
and
xor
std
loope
std
push
hlt
repz
mov
fcom
mov
fisub
cmp
scas
loope
sbb
out
add
push
sar
int
movs
xor
outs
repnz
faddp
aam
iret
fimul
jno
in
jecxz
ins
shr
add
loopne
int3
fucomip
mov
pushf
jno
sub
xchg
mulps
dec
inc
call
mov
cmp
dec
stos
push
mov
aas
arpl
repnz
das
pushf
jb
mov
cmp
fneni(8087
in
xchg
mov
loop
cmp
leave
int
jmp
icebp
jo
xor
jecxz
dec
fwait
or
pushf
lods
scas
cld
leave
cmc
sub
test
test
jge
or
add
and
stos
adc
popa
jae
push
in
cs
jae
lds
add
fld
pop
shl
mov
cmps
mov
mov
mov
adc
mov
(bad)
mov
in
and
xchg
add
iret
add
int
pop
and
enter
out
xchg
cwde
or
jmp
fisubr
outs
sbb
cmps
pop
add
enter
movs
pusha
jmp
std
or
aaa
xchg
pop
adc
test
fnstenv
dec
dec
cmp
mov
pop
popf
mov
push
enter
cwde
sub
int
xor
dec
outs
dec
bnd
int3
mov
test
jmp
rol
ficomp
xchg
or
fldenv
push
movs
dec
jo
sub
sbb
add
push
pushf
and
mov
cmp
adc
xlat
clc
sbb
or
or
sbb
xor
sbb
jne
(bad)
push
hlt
mov
das
repnz
xor
(bad)
and
mov
fiadd
out
pusha
fs
aam
sub
dec
mov
push
cmp
ficom
add
or
mov
mov
clc
call
push
xor
push
outs
xchg
lock
sbb
cmp
mov
sar
in
lahf
xor
ja
jp
hlt
push
pop
iret
mov
fsub
adc
cdq
or
ror
int3
dec
movs
outs
mov
add
pop
inc
inc
push
std
mov
ins
mov
or
imul
iret
addr16
push
jb
addr16
mov
call
push
test
(bad)
arpl
daa
shr
dec
pop
or
jp
sti
fwait
mov
adc
fdiv
repnz
sbb
jno
les
mov
mov
and
or
mov
jno
pop
arpl
fsub
push
push
je
push
iret
movs
cmp
push
pop
test
mov
stos
movs
add
pop
push
xchg
push
ret
dec
or
in
test
sbb
ror
adc
mov
xor
cli
in
xor
dec
mov
fwait
add
in
call
in
or
fdivr
inc
cli
test
and
arpl
jecxz
hlt
xor
xchg
retf
xor
sbb
pushf
add
pop
ret
jp
in
aas
push
mov
mov
cmp
and
fsub
lahf
jnp
movs
fimul
jmp
jl
loop
jo
dec
ret
cmp
sti
stc
scas
push
cmp
std
movs
pop
cmp
sub
pop
mov
popf
scas
sar
hlt
outs
inc
mov
or
xor
outs
not
jne
push
and
sub
sub
pop
out
push
lods
push
(bad)
outs
inc
scas
out
mov
jb
pop
xor
jmp
and
popf
dec
jp
push
stos
test
push
inc
pusha
in
inc
lods
jne
es
hlt
push
cmp
jge
and
jecxz
push
mov
cmp
jnp
jmp
mov
aas
aad
inc
mov
cmp
lea
xchg
mov
out
je
sbb
mov
cmp
jbe
jg
xchg
test
mov
inc
aas
ret
into
or
mov
sub
out
sub
pop
sub
mov
and
xor
or
mov
xchg
les
or
pop
stos
test
daa
mov
loope
add
cli
repnz
jl
mov
mov
fs
mov
test
stc
inc
lock
gs
cmps
push
mov
lahf
sar
outs
push
out
mov
in
cmps
fistp
scas
mov
cmps
(bad)
repnz
add
mov
push
mov
scas
fidivr
xchg
test
inc
sbb
pop
xchg
or
jns
mov
push
idiv
mov
sub
pop
sbb
fcomp
sbb
in
outs
jmp
adc
retf
xchg
mov
jp
push
jne
jae
fmul
jge
or
xlat
sti
jae
add
jle
inc
jge
test
aaa
adc
es
and
mov
enter
xor
ror
xchg
sahf
(bad)
imul
adc
adc
dec
and
xchg
adc
push
jne
das
in
es
and
xchg
addr16
mov
inc
movs
sub
clc
retf
push
xor
(bad)
cli
popa
jne
in
sbb
mov
xchg
outs
(bad)
shr
mov
mov
xchg
cmp
fiadd
ret
jmp
daa
repnz
push
scas
sub
shl
(bad)
dec
mov
push
dec
cmp
loope
push
push
aas
repnz
lock
pushf
or
test
sub
shl
js
aaa
or
loop
mov
ds
(bad)
jg
xlat
pop
inc
shl
nop
or
stos
pop
in
mov
jne
fist
mov
xchg
and
popf
sbb
pop
push
scas
push
fstp
dec
shr
xor
sbb
jp
adc
and
(bad)
inc
js
push
cld
adc
sub
int3
add
inc
shl
mov
jmp
repnz
mov
sub
inc
or
loop
iret
loopne
ja
xor
jae
das
xor
push
stos
lds
ret
repnz
clc
test
jg
call
fist
inc
shl
lea
pop
xchg
add
mov
jno
mov
sbb
stos
and
sti
gs
pop
push
push
sbb
js
mov
fs
xchg
push
push
inc
outs
sahf
int
dec
mov
jmp
xlat
pushf
mov
push
pop
pop
imul
jo
add
stc
adc
push
jbe
fwait
shl
mov
sbb
xchg
mov
mov
mov
in
repz
mov
lock
mov
or
adc
out
ins
out
jmp
inc
shl
cdq
mov
ret
sti
daa
jno
cmp
jo
fstp
or
cmc
inc
push
sar
es
popf
std
sub
pop
adc
or
sub
fdivr
ret
nop
lahf
mov
(bad)
rol
sub
xor
aad
call
dec
loopne
dec
idiv
cmp
mov
jecxz
inc
mov
sar
ja
in
pusha
and
sub
mov
xchg
and
rcr
test
xor
xchg
loopne
movs
jae
push
mov
mov
stc
or
mov
imul
fadd
dec
test
aas
dec
sbb
mov
xchg
push
xchg
mov
shl
test
ss
sti
aaa
ja
xor
dec
xlat
pop
dec
pushf
lock
call
and
jp
dec
dec
sub
int
xchg
cmp
ds
pushf
pop
cmp
xor
or
les
inc
mov
pop
lock
inc
fbld
push
mov
dec
xchg
mov
les
jb
add
xchg
mov
lar
bound
xchg
rcr
sbb
jmp
stos
shl
or
cli
fistp
sub
dec
int
dec
mov
or
push
add
mov
pop
inc
sub
dec
mov
push
cli
ret
js
retf
pop
inc
sub
jnp
idiv
loop
test
sti
and
sahf
push
pushf
sbb
push
mov
loope
fidivr
pop
pop
loop
sti
lods
fdiv
rcr
mov
xor
lods
inc
test
cwde
daa
xor
fistp
xor
fwait
mov
xchg
cmp
in
icebp
loopne
stos
dec
dec
pop
cmps
mov
xchg
dec
scas
and
out
call
adc
pop
clc
(bad)
shl
lods
sbb
xchg
(bad)
fucomp
cmp
div
and
ss
in
push
sub
rcr
mov
sub
dec
in
stos
cmps
fidiv
cdq
pusha
lahf
adc
push
ja
xor
stos
xchg
repnz
xor
rol
pop
inc
dec
sbb
lods
ror
push
in
fcmovnu
jmp
cmp
in
mov
outs
jle
test
add
dec
xchg
lods
clc
xor
stc
sbb
outs
into
mov
and
jns
xchg
retf
adc
call
arpl
mov
fisttp
jp
adc
popa
cmp
cmps
in
jge
mov
pop
jmp
push
xor
inc
push
sub
pop
ss
outs
mul
xchg
stos
cwde
inc
push
pop
adc
add
cmp
cmps
pop
inc
cmps
xor
shr
dec
mov
das
aad
xor
jbe
xor
popf
push
out
sub
jno
in
xchg
adc
jmp
fld
aas
ffreep
inc
jge
jmp
mov
mov
iret
and
xor
push
out
stos
inc
inc
jle
stos
adc
pop
lea
sbb
jmp
pushf
fisttp
push
xlat
jnp
leave
push
cmps
cmp
jg
js
cs
test
mov
adc
adc
add
enter
mov
push
pop
(bad)
lahf
mov
xor
fisttp
cmp
pop
lock
aam
sbb
das
sub
or
pop
mov
inc
mov
(bad)
in
hlt
xchg
xchg
fcom
std
enter
es
or
cmc
mov
mul
loope
and
lea
in
in
enter
pusha
outs
mov
ins
push
xchg
cmp
jecxz
sti
xchg
aaa
fidivr
pop
adc
retf
fmulp
js
cmp
inc
lock
and
call
fsub
lock
inc
inc
inc
stc
lea
mov
cmc
mov
aad
inc
and
icebp
ret
mov
cmp
imul
or
add
cmp
xchg
cmp
shr
jmp
mov
mov
mov
or
test
jg
in
shr
mov
dec
aad
inc
outs
(bad)
mov
fnstsw
clc
mov
jl
xchg
jns
inc
je
mov
xor
call
dec
push
inc
test
lods
add
mov
dec
lods
push
push
lock
lahf
ja
test
(bad)
or
xchg
repnz
enter
rcl
mov
outs
movs
jno
rcr
or
out
add
xchg
push
mov
in
push
mov
jmp
jmp
jl
pushf
xor
push
mov
add
iret
jecxz
and
mov
jno
or
std
or
xor
inc
xor
mov
nop
add
(bad)
fsubr
dec
jmp
ja
mov
push
add
dec
push
test
ss
or
loop
push
frstor
stos
xor
cmp
push
sbb
pop
movs
and
rcl
ja
shl
cmps
push
inc
out
ror
imul
push
adc
inc
ja
inc
sbb
inc
pop
jmp
gs
push
push
sbb
int
(bad)
dec
lahf
sub
pop
jns
out
in
ficom
out
test
(bad)
fdiv
and
cmp
jmp
adc
sub
retf
xchg
mov
jecxz
ret
add
mov
dec
inc
es
pop
sbb
push
push
lock
jp
push
add
retf
add
das
push
cmps
mov
sub
push
add
jne
jle
repz
test
test
mov
or
pop
ds
xchg
mov
mov
mov
xchg
sub
sub
and
and
lea
fisub
rol
test
mov
or
pop
jo
dec
bnd
and
shr
sbb
xchg
push
stos
mov
pushf
pop
dec
xchg
mov
nop
sbb
mov
xchg
adc
call
pop
icebp
addr16
les
mov
sub
mov
mov
add
xor
jae
into
sbb
and
pop
rol
jle
inc
inc
dec
jno
xchg
mov
icebp
sar
movs
mov
lods
jmp
in
stc
mov
fist
in
or
mov
test
aam
in
cmp
outs
xchg
fcomp
mov
rcr
bound
ins
call
mov
add
adc
test
xchg
lahf
sub
fisttp
inc
inc
fnstsw
add
clc
dec
aas
mov
std
fnstsw
xor
test
dec
dec
adc
jbe
jno
inc
dec
and
inc
in
loopne
icebp
icebp
(bad)
dec
fiadd
mov
fcmovne
ss
dec
bound
jl
loope
dec
mov
jno
mov
jae
mov
movs
stos
push
jecxz
xchg
sub
inc
test
xor
push
or
call
lahf
stos
dec
pusha
or
shr
hlt
mov
sbb
pop
cmp
push
adc
inc
inc
push
movs
sbb
(bad)
sbb
jns
jge
adc
pop
stc
mov
push
mov
ret
and
mov
fcmovne
sbb
lea
pop
fiadd
mov
nop
fild
(bad)
fstp
lea
jg
or
(bad)
fild
or
data16
xchg
mov
pop
or
xchg
add
stc
mov
inc
jne
mov
lods
xchg
add
ds
jne
or
push
inc
mov
push
or
(bad)
pop
sbb
inc
jbe
xchg
adc
and
dec
les
stc
xchg
loope
mov
pop
and
nop
xchg
inc
mov
les
pop
jecxz
xchg
xor
jle
pop
popa
arpl
loope
fwait
cmps
loope
loopne
cdq
bound
inc
mov
adc
fdiv
jno
xchg
add
pop
cmp
mov
dec
mov
loope
daa
call
xor
js
call
cmp
mov
sar
jg
fsub
lock
lods
xchg
add
mov
or
adc
iret
(bad)
cwde
imul
adc
shr
sbb
aas
fs
fimul
ja
iret
test
or
cld
mov
or
ss
xor
mov
jb
and
out
push
xchg
inc
push
mov
push
movs
cmp
in
mov
call
dec
scas
push
cmps
cmps
daa
fwait
xchg
call
and
mov
inc
sbb
sbb
add
cmp
mov
loope
loopne
cld
mov
xor
ins
imul
aaa
scas
(bad)
or
mov
jl
shr
xrelease
retf
les
jp
movs
xor
add
cmp
jmp
cmp
xchg
inc
les
add
xor
sbb
lock
xchg
sub
pop
rol
sub
cwde
xchg
mov
lahf
mov
sbb
push
ror
jno
shr
shl
nop
aaa
or
jb
fwait
sbb
(bad)
in
(bad)
loop
jp
inc
mov
mov
pop
pop
cld
(bad)
int3
lds
xchg
ficom
add
ds
or
cmp
add
outs
iret
shr
xchg
retf
mov
jne
cmp
sahf
shl
dec
add
sbb
ss
sar
movs
nop
jg
sar
push
ins
lods
retf
stc
xchg
rol
scas
lock
outs
in
scas
sti
mov
out
pusha
push
push
imul
inc
out
sbb
ja
adc
jbe
push
jno
ret
push
jb
push
imul
popf
test
inc
xchg
repz
fbld
scas
les
repnz
cmp
data16
push
dec
call
inc
les
push
data16
(bad)
hlt
scas
cld
jmp
inc
adc
(bad)
dec
xor
xchg
test
iret
and
mov
mov
sbb
jnp
arpl
push
inc
cs
nop
pop
push
jne
ins
xchg
jbe
dec
and
adc
push
cmp
xor
and
jmp
mov
push
cmps
inc
mov
xor
push
icebp
cmp
adc
leave
pushf
test
xchg
les
rcr
mov
or
aad
fs
pop
int
shl
push
test
mov
lods
repnz
add
(bad)
dec
sub
push
push
sbb
sub
xor
and
push
or
test
out
xor
fistp
cmp
aas
xor
ret
ret
jp
add
mov
mov
ja
mov
mov
xchg
loope
inc
ret
clc
movs
mov
add
ror
sti
mov
xor
add
stc
and
add
pop
inc
mov
(bad)
jmp
test
add
push
movs
sbb
ins
adc
adc
add
mov
mov
inc
jp
inc
xor
and
icebp
in
cmps
cmp
dec
push
dec
(bad)
fstp
js
push
ins
push
outs
sub
addr16
call
jbe
ret
fwait
mov
rcl
(bad)
mov
call
push
cmps
xchg
mov
sar
stos
jb
pushf
and
jl
mov
ins
fs
push
pushf
sahf
lahf
sahf
repz
pop
(bad)
jecxz
sub
mov
loope
or
adc
mov
fcom
add
xor
test
sbb
mov
add
fdivr
inc
outs
(bad)
sti
pop
call
jbe
jno
dec
push
jo
test
xor
inc
inc
xor
aam
loope
jmp
xor
shl
fldcw
xchg
daa
fcmovu
sbb
mov
jo
add
sbb
mov
mov
lahf
and
mov
xlat
in
sar
cwde
xor
scas
(bad)
mov
mov
fisttp
lods
ds
xor
fidivr
cmp
mul
movs
push
aam
xchg
mov
das
fwait
pop
cmp
stos
gs
loope
dec
xor
dec
ja
dec
sahf
mov
xchg
dec
call
repnz
cmp
cli
mov
(bad)
dec
mov
fdivp
out
jb
mov
jl
jmp
mov
xchg
popf
das
cmc
ja
sbb
adc
ds
sbb
push
cmp
mov
mov
ffree
inc
es
jmp
mov
pop
in
es
xlat
scas
jmp
sahf
mul
mov
scas
and
jnp
sub
sub
pop
push
sub
(bad)
ins
add
js
outs
daa
cmps
or
call
pusha
(bad)
xchg
add
mov
jae
(bad)
push
ja
aam
mov
test
pop
mov
add
add
dec
aam
mov
cld
mov
les
jge
movs
scas
repnz
pop
sahf
cmp
push
nop
xlat
mov
mov
retf
scas
mov
lods
loop
shl
push
cmp
or
cmps
dec
and
test
fdiv
std
mov
js
lods
fild
enter
clc
sub
inc
mov
pushf
sub
xlat
imul
mov
jae
sub
xor
mov
mov
pop
xchg
popa
pop
clc
push
xor
adc
pusha
in
popf
inc
ds
or
fsubr
push
stos
sbb
dec
pop
xchg
xchg
test
or
hlt
out
and
fnstenv
test
retf
ret
fnstcw
popf
add
and
mov
pop
icebp
sar
push
inc
and
inc
std
loopne
pop
and
add
fimul
inc
xchg
mov
sub
pop
mov
sub
mov
pushf
xchg
jge
sub
cmp
mov
dec
loope
dec
pop
jp
mov
mov
jp
sbb
aad
sbb
and
dec
lods
mov
pop
cwde
mov
popaw
repz
call
stos
rcr
loope
out
iret
jg
mov
sub
shl
pop
and
adc
cmp
ds
and
mov
adc
mov
dec
and
mov
lods
into
mov
push
mov
pusha
add
(bad)
ss
mov
fcmovbe
mov
out
rcl
mov
int
gs
inc
jae
fisttp
pop
sar
call
cmps
(bad)
push
test
div
xchg
lahf
mov
add
adc
std
idiv
(bad)
(bad)
mov
ins
test
mov
adc
and
ds
add
inc
and
mov
out
test
xchg
push
test
push
psraw
gs
mov
cmps
xchg
push
outs
jb
mov
cmp
jnp
repnz
fbstp
lods
sub
xchg
retf
cmp
add
in
sub
bound
xchg
call
adc
outs
in
xchg
sbb
push
add
mov
div
in
add
jle
mov
jo
adc
cmp
pop
sub
call
pop
outs
retf
scas
mov
fisubr
cmc
push
inc
leave
sbb
mov
mov
movs
aas
aad
repnz
jl
out
stos
adc
push
mov
lahf
shl
inc
cmps
jle
pop
mov
cli
jne
imul
lea
(bad)
lahf
xchg
aad
call
mov
daa
pop
push
pop
ins
and
mov
inc
in
inc
add
and
mov
cmp
sbb
dec
call
loope
mov
ins
retf
inc
sub
dec
and
imul
jae
jb
ins
out
and
push
pop
jecxz
cmp
sbb
xor
shr
mov
adc
pop
jnp
xor
fwait
or
dec
test
sbb
mov
aas
cmp
imul
scas
cmp
(bad)
imul
jg
add
and
mov
sbb
add
mov
pop
inc
inc
inc
pop
dec
pop
pop
popa
xchg
into
mov
aas
daa
std
into
stc
clc
jno
and
movs
adc
ja
mov
imul
aad
mov
pop
pop
mov
cmps
cwde
out
mov
clc
pcmpeqb
cmp
mov
cmp
push
mov
mov
xor
and
jl
fs
repz
test
and
jge
jle
imul
arpl
mov
xchg
out
idiv
mov
jp
xor
test
fsubr
sub
cmp
xlat
mov
pop
imul
pusha
mov
ins
in
retf
mov
jg
fimul
mov
and
shl
stos
and
and
push
and
mov
lds
push
add
idiv
outs
imul
int
test
ret
add
into
clc
xor
popf
sbb
repnz
lock
pop
inc
mov
shl
sub
rol
scas
dec
(bad)
adc
mov
and
(bad)
fld
das
aad
retf
fidivr
mov
push
mov
jmp
imul
cs
adc
push
outs
rcr
std
retf
ja
jle
loopne
nop
into
nop
loop
call
jno
retf
movs
dec
iret
xchg
fist
jb
xor
pop
jb
lods
fisubr
adc
push
add
shl
lahf
not
out
std
out
repz
pop
jge
cld
or
cs
sbb
es
mov
sysexit
push
loope
mov
imul
das
js
jno
mov
dec
lock
mov
xor
sqrtps
inc
jp
dec
cmc
dec
mov
cmps
inc
xor
in
pop
dec
inc
and
mov
fnstcw
mov
mov
inc
mov
out
inc
push
sub
data16
push
push
loope
add
inc
ins
div
dec
sub
out
repz
cld
push
sub
lahf
sub
sub
sbb
jle
stos
pop
ja
pop
jno
enter
lods
int
test
popa
inc
mov
sub
adc
adc
mov
into
dec
into
mov
xchg
pushf
pop
pop
mov
and
imul
outs
aad
out
sar
mov
in
add
(bad)
dec
inc
in
enter
int3
push
sbb
push
inc
jne
cdq
inc
push
and
sub
sub
pop
mov
mov
out
clc
addr16
and
push
add
or
loop
and
mov
pop
inc
call
mov
cdq
outs
jmp
aas
mov
shl
jg
push
sbb
sar
call
sar
aas
push
pop
jmp
arpl
aaa
add
lods
xchg
mov
jae
fcom
cwde
enter
jle
or
mov
xchg
xchg
std
lds
push
cdq
push
sti
(bad)
push
mov
fistp
gs
lods
lods
pop
xor
leave
outs
lock
inc
mov
push
mov
add
scas
popf
push
mov
hlt
jge
pop
je
mov
stc
pop
jo
retf
jo
ss
cmps
gs
in
push
sbb
cmp
sub
popf
sub
push
dec
icebp
xor
cmc
or
mov
loopne
xchg
jmp
mov
xchg
add
out
or
retf
bound
push
cmc
push
sub
push
dec
add
popa
cmc
or
dec
mov
fcom
test
xor
aam
mov
adc
retf
dec
test
xchg
mov
push
adc
adc
xor
sbb
mov
imul
test
fucomp
push
mov
adc
inc
shl
jmp
repz
inc
jns
mov
sub
mov
stc
or
lods
dec
adc
inc
and
and
dec
mov
pop
repz
retf
mov
and
sub
ret
mov
pop
(bad)
rol
loopne
sub
das
adc
clc
or
jnp
xchg
add
cli
xor
or
adc
popf
add
push
or
je
loopne
adc
aad
cmp
addr16
std
sbb
repnz
popf
dec
fs
jmp
xchg
bnd
retf
fld
and
lea
push
outs
push
and
fidivr
jnp
(bad)
push
xor
jbe
es
jne
js
(bad)
lock
mov
add
das
add
fisubr
mov
in
call
inc
(bad)
cmp
xrelease
sbb
fiadd
cmp
push
or
shr
jbe
xor
or
sahf
sar
jmp
loop
adc
mov
jb
fistp
daa
inc
inc
xor
sbb
enter
jg
ror
cmp
push
in
ficom
jno
bound
outs
xor
cmp
scas
int
nop
out
ins
add
mov
adc
sbb
cwde
iret
sbb
pop
mov
mov
add
jmp
in
xchg
movs
push
cli
fbld
inc
psubusb
ss
out
xor
imul
dec
mov
lahf
lds
out
loopne
mov
xor
test
dec
ss
outs
into
call
fwait
repz
jns
or
pop
ds
cdq
sbb
sub
mov
fmul
jge
clc
dec
mov
jae
fnstsw
fld
sub
jp
stos
sub
shr
test
out
or
mov
xchg
and
xor
jge
or
push
push
ss
pop
ror
in
sbb
aaa
shl
in
xchg
(bad)
fwait
and
out
in
(bad)
gs
inc
sub
stos
and
mov
sbb
dec
into
mov
std
test
dec
ret
sub
(bad)
pop
cld
ja
pop
(bad)
push
(bad)
xchg
dec
adc
sub
push
out
(bad)
mov
push
push
cmc
icebp
addr16
xchg
jp
test
pop
or
dec
sub
mov
movs
(bad)
in
fwait
push
test
mul
(bad)
hlt
cld
sbb
sbb
adc
xor
pop
into
jmp
xor
sub
add
lock
(bad)
fisttp
xchg
sbb
jmp
sub
lds
push
push
adc
jmp
push
shl
lea
mov
add
jl
mov
dec
imul
inc
push
cwde
jle
add
pop
mov
jp
jnp
in
mov
das
or
in
cmp
mov
ss
mov
arpl
jbe
dec
loopne
adc
dec
pop
std
std
or
and
mov
mov
shl
retf
or
test
fs
or
push
jne
outs
mov
push
dec
dec
push
add
push
ds
(bad)
cmps
push
push
dec
mov
add
in
and
cmp
dec
cmp
inc
retf
fsub
mov
pop
push
mov
mov
jb
xor
mov
xchg
stc
mov
push
mov
adc
pop
push
push
and
test
mov
and
and
pusha
ror
inc
cmps
test
push
sbb
add
push
mov
jg
pop
int
cmp
not
popf
test
push
cmp
fimul
sti
push
fidiv
and
mov
lds
mov
xchg
cdq
lods
int3
rcl
mov
mov
cmp
cmp
xor
inc
add
push
ficom
je
jmp
repnz
mov
cwde
inc
dec
jge
loope
je
ins
ins
aad
mov
pusha
jmp
add
nop
shr
mov
in
data16
sub
stc
push
mov
jbe
hlt
sub
sbb
dec
pop
pop
hlt
add
cs
xchg
fisubr
shr
push
adc
imul
xchg
inc
mov
cmp
out
arpl
call
test
nop
mov
rcr
fs
cmp
mov
dec
pop
add
lock
sub
or
(bad)
test
pusha
xor
sbb
xor
in
xchg
pop
jo
fldcw
movs
pop
dec
jne
cmp
lds
dec
repz
stos
sbb
call
cmp
inc
cmp
mov
pop
cmp
pop
or
sbb
test
fidivr
jle
in
rol
xor
iret
sbb
add
jp
(bad)
ja
adc
aam
cs
movs
popf
mov
test
lods
mov
inc
pop
cmp
inc
stc
sub
test
ds
push
idiv
ds
call
lock
(bad)
outs
mov
test
mul
jno
push
movs
pop
stos
inc
xor
sub
xchg
icebp
add
adc
hlt
(bad)
in
mov
jmp
clc
imul
rol
cmp
sbb
ror
or
jle
sbb
in
and
outs
mov
mov
loopne
stos
jne
push
or
test
call
sbb
sbb
stos
cmps
ret
jmp
push
daa
imul
pusha
cdq
pusha
mov
xor
les
mov
(bad)
int3
adc
in
jp
mov
movs
jge
mov
sub
mov
dec
fmul
mov
lea
or
lea
stc
imul
xor
sbb
xor
or
pop
test
lea
out
dec
pop
jb
cdq
pop
push
lahf
mov
stc
mov
sub
sub
xchg
mov
nop
sub
call
pusha
ficom
lahf
nop
fs
into
out
inc
scas
mov
xchg
jecxz
and
movs
sub
jge
mov
sahf
and
add
sub
and
add
mov
je
inc
outs
es
pop
lock
push
dec
mov
or
dec
jl
icebp
adc
xchg
jle
ret
jno
mov
xchg
sub
mov
cmp
int
add
paddb
in
xchg
mov
cli
xchg
push
cmps
ss
jo
or
cmp
lods
test
in
jbe
gs
add
stos
mov
aaa
push
xchg
jge
xchg
movs
push
loopne
cmp
push
xlat
inc
or
pop
hlt
mov
sub
call
pop
(bad)
repz
int
mov
xor
jecxz
sbb
out
iret
outs
cmp
inc
xchg
icebp
jb
jno
and
mov
retf
adc
xchg
mov
test
push
ret
mov
mov
test
cmc
inc
test
std
ret
and
mov
dec
xchg
cmps
inc
aam
in
cmc
loop
inc
sub
inc
and
test
and
jecxz
jge
(bad)
push
mov
(bad)
fist
pop
inc
(bad)
jle
mov
iret
clc
or
lock
clc
mov
jmp
cmp
push
repnz
adc
mov
sti
sub
adc
push
adc
hlt
jecxz
or
sahf
popa
mov
or
iret
fcmove
(bad)
call
and
leave
leave
dec
or
repnz
mov
inc
inc
(bad)
push
dec
mov
push
cmp
and
ds
sbb
cmp
repnz
loope
(bad)
(bad)
shrd
ins
fisub
push
mov
mov
xor
scas
lahf
mov
cmp
or
dec
les
mov
fstp
cwde
push
sbb
mov
add
fstp
call
add
gs
pop
outs
lods
xor
jecxz
mov
shl
push
xchg
mov
jl
retf
mov
iret
icebp
xlat
add
movs
or
xor
iret
adc
mov
retf
and
jnp
fist
into
cmps
mov
pop
jno
sub
xchg
sub
add
mov
sub
js
aam
pop
or
inc
pop
xchg
mov
cwde
aam
mov
jle
int3
iret
mov
movs
pop
test
arpl
icebp
cmc
shr
xchg
and
sub
nop
jmp
jae
cmp
xchg
xor
dec
push
inc
stos
sahf
ret
mov
cmp
cmp
cmp
in
in
mov
lahf
fst
in
sar
mov
or
dec
lds
sub
fwait
ins
pop
cld
cli
and
add
fwait
cli
fs
daa
mov
dec
pop
xor
fadd
test
jnp
outs
adc
push
inc
ins
jnp
xchg
(bad)
(bad)
xchg
mov
clc
sbb
mov
stos
push
jmp
popf
sub
and
fdiv
jno
push
and
push
pop
int3
sahf
sub
dec
dec
(bad)
lods
movs
jl
jle
cmp
push
or
shl
jle
out
and
cwde
cmps
jmp
fs
dec
xor
test
or
sub
sub
repnz
jmp
inc
dec
mov
pop
sbb
cmp
pfrsqrt
ds
fild
jl
xor
inc
dec
cli
and
inc
test
jne
arpl
or
sahf
sub
pop
sbb
pop
loopne
xor
inc
or
hlt
cwde
mov
sub
inc
imul
(bad)
xchg
dec
imul
and
and
xchg
cmp
jo
cmp
or
mov
or
loop
sub
mov
pop
mov
test
dec
jbe
xchg
cmp
das
daa
lods
or
les
inc
inc
rol
or
sti
movs
mov
jne
(bad)
(bad)
mov
scas
adc
shl
push
(bad)
mov
je
add
push
add
mov
lea
xchg
mul
(bad)
pop
adc
pushf
pop
or
popf
cdq
sbb
in
jp
repnz
aad
or
xchg
pop
cld
mov
in
or
in
sub
inc
lock
jae
jge
test
jg
ss
cmp
jmp
shl
inc
xchg
nop
cmp
xchg
mov
sub
fsubr
or
jmp
pop
call
movs
xadd
pop
out
inc
push
sbb
ror
and
add
fs
add
push
cdq
pop
mov
cmp
pop
jbe
(bad)
iret
in
aad
mov
adc
push
out
push
sbb
nop
daa
push
fs
aad
pop
pop
into
jmp
and
lods
cmp
ss
cmp
xor
mov
xlat
push
ss
sub
imul
ficomp
push
mov
fxch
(bad)
cwde
push
pop
into
stos
aad
arpl
scas
inc
je
or
mov
ret
test
ds
cmp
sub
lods
dec
mov
mov
cmc
pop
push
mov
ins
stos
xchg
xor
inc
pop
cmp
cmps
and
xor
clc
div
test
jb
imul
lods
add
(bad)
shl
fstp
aam
in
jne
xchg
retf
xchg
and
push
out
xor
movs
test
cmp
lock
shr
or
cld
or
scas
jge
sub
jg
push
retf
pop
xor
inc
fs
rol
(bad)
fs
pop
mov
rcl
add
cs
mov
sar
fs
mov
xor
xchg
sbb
aaa
xchg
xor
loopne
mov
rcr
push
push
and
loope
mov
adc
mov
mov
adc
add
les
retf
and
ret
sbb
data16
push
pop
aam
pop
adc
push
in
das
fmul
arpl
and
arpl
xchg
sub
xor
mov
pop
xchg
std
movs
sti
call
test
into
movs
dec
xlat
mov
movs
movs
and
inc
(bad)
push
dec
xchg
jns
test
mov
not
cmps
ins
push
adc
or
mov
sbb
or
jno
fdivr
faddp
inc
ja
xbegin
ja
jnp
dec
push
xchg
push
xchg
push
inc
js
sti
and
popa
mov
cmp
mov
std
js
outs
movs
cmc
imul
jmp
xchg
jns
mov
mov
xchg
ret
cmp
mov
dec
xor
addr16
test
pop
ret
pop
outs
xchg
adc
lods
pop
dec
push
stos
cmp
and
rol
inc
loopne
push
fcomp
cvttps2pi
lea
clc
ja
xor
fidiv
stos
sub
loope
or
pop
inc
repnz
loopne
ss
push
inc
xlat
jp
aam
jecxz
stos
rol
scas
sub
xor
jbe
mov
add
dec
xor
cmc
pop
mov
inc
in
inc
inc
push
or
stos
(bad)
loop
mov
mov
cs
(bad)
ss
nop
or
(bad)
dec
scas
jmp
sahf
rcr
or
lea
fisub
jmp
mov
mov
in
cmc
gs
push
cs
fiadd
int3
lea
mov
(bad)
sbb
ins
jecxz
and
data16
jp
inc
jno
bound
push
stos
aam
(bad)
test
and
movs
add
(bad)
push
cmp
xchg
cld
sbb
xchg
pop
in
out
jb
pop
adc
pop
add
cli
popf
mov
test
data16
aad
leave
push
bound
lods
adc
test
(bad)
(bad)
jmp
xor
sbb
rcr
xor
cmps
mov
ds
cmp
ror
outs
das
mov
retf
jl
lds
(bad)
pop
comiss
pop
add
xor
movs
sub
pop
inc
or
jg
or
push
popf
and
popa
(bad)
fstp
xor
cmp
fxch
es
jb
pop
xchg
pop
js
call
ret
xchg
pop
outs
and
xor
push
xchg
cmp
cmp
ins
mov
mov
xor
xchg
fild
adc
fwait
xchg
mov
add
cwde
clc
sti
dec
call
push
fdivr
fdivr
sub
pop
inc
loope
xchg
sahf
ficomp
and
repz
and
dec
ins
fwait
inc
pushf
add
dec
push
loopne
ja
aad
(bad)
movs
dec
pusha
jmp
dec
and
xchg
out
jno
xchg
out
or
or
cmp
das
sbb
inc
dec
movs
loop
lock
jmp
mov
je
into
mov
add
cdq
mov
jae
iret
adc
jo
js
sbb
mov
test
jp
or
pop
push
cmp
dec
jecxz
mov
ror
gs
add
pop
movs
jl
clc
cmc
fxch
push
pxor
mov
ror
ja
retf
dec
inc
xor
in
or
mov
mov
rep
leave
push
push
aaa
mov
or
dec
lods
rcl
mov
sbb
mov
stos
sub
and
dec
ss
in
pop
xchg
push
test
loope
mov
pop
bound
lods
ins
out
sahf
sub
shr
addr16
movs
add
lahf
mov
adc
test
xor
test
ins
cmp
lock
sub
inc
rcl
and
popa
mov
enter
sub
cmps
adc
retf
pop
and
mov
pop
fldcw
test
push
push
outs
inc
push
das
mov
ret
cmps
inc
test
lea
pop
mov
ret
push
jnp
into
fist
pop
dec
jg
dec
xlat
mov
mov
out
(bad)
pusha
dec
sbb
jl
mov
test
pop
xchg
cmc
sub
pop
push
xchg
ret
scas
add
or
sub
daa
mov
mov
sub
lods
out
popf
mov
xchg
fcomip
mov
pop
shr
mov
mov
cmp
cmps
pop
dec
add
les
(bad)
mov
cmp
adc
repnz
repnz
addr16
push
clc
mov
shl
cmc
add
mov
cdq
test
movs
jge
mov
inc
jae
cld
scas
and
push
fimul
(bad)
push
in
inc
test
push
dec
or
or
and
adc
inc
adc
xchg
and
sub
or
pop
loop
les
pushf
retf
jne
jge
out
aad
aad
inc
cmp
jp
xchg
retf
lahf
and
sbb
adc
addr16
into
jge
imul
iret
push
inc
or
pop
clc
mov
adc
movzx
or
arpl
popa
pushf
jno
aas
sbb
mov
fwait
xor
test
aas
xor
mov
and
xor
sbb
mov
mov
push
pusha
out
xlat
leave
xor
jge
jo
mov
adc
and
xchg
inc
mov
cmps
dec
mov
or
loop
call
push
iret
dec
outs
jmp
xchg
mov
or
mov
xchg
xchg
std
pop
pop
bnd
movs
lods
mov
aaa
pop
dec
scas
pop
imul
int3
xor
mov
rcl
ja
xchg
inc
aam
mov
in
clc
dec
iret
repz
jle
sahf
lods
or
popf
fsubr
jns
mov
sbb
(bad)
cmp
arpl
jae
mov
xchg
ret
pop
mov
pop
xchg
pop
add
std
xchg
cmc
dec
mov
cli
pop
ret
inc
xchg
push
repz
mov
jb
mov
xchg
loopne
ret
adc
sub
or
sbb
std
test
adc
pop
and
jbe
xchg
mov
mov
inc
jbe
cmps
push
sbb
adc
xor
dec
movs
cld
lods
xor
fnstsw
aad
push
nop
jno
js
or
sub
lea
add
mov
fisubr
jmp
jp
add
fwait
jns
and
xlat
aad
sbb
xchg
pop
dec
out
add
shr
ret
aas
mov
out
aas
div
dec
mov
xchg
lea
pushf
movs
and
xchg
mov
adc
mov
mov
ss
push
sbb
push
inc
inc
pop
pop
jmp
outs
movs
rol
mov
and
pop
ds
sti
pop
xor
mov
clc
fistp
fcom
jecxz
jbe
adc
mov
popa
(bad)
xor
sub
jge
popf
push
cmps
sbb
mov
rcl
sbb
daa
stos
shl
push
sbb
icebp
mov
mov
stc
mov
xor
dec
popf
cmp
js
popa
out
(bad)
push
lea
popf
std
mov
cli
aam
rcl
mov
dec
inc
cmc
call
ret
sbb
sti
aam
sub
stc
lds
aam
cdq
jp
pusha
mov
mov
aas
and
lahf
fnstsw
fadd
inc
cmp
(bad)
in
test
xchg
ins
xor
aas
push
jmp
mov
inc
inc
jae
out
jecxz
outs
test
stos
adc
std
mov
jmp
dec
dec
push
jg
(bad)
sub
icebp
test
mov
arpl
not
push
pushf
xlat
rcl
sbb
imul
dec
or
mov
pop
aas
sbb
mov
push
push
bound
leave
push
je
jne
mov
mov
ret
adc
arpl
jmp
add
mov
sbb
loop
and
mov
jg
getsec
or
fst
sbb
(bad)
jmp
or
pop
ret
cld
outs
in
inc
dec
cdq
xor
fidivr
ss
xor
ds
adc
pop
add
popa
mov
test
outs
pop
sub
push
push
xor
cmc
(bad)
push
xchg
fs
sbb
(bad)
and
push
xchg
scas
inc
and
xchg
or
or
(bad)
adc
or
or
or
adc
outs
cs
lahf
daa
push
aam
int3
mov
sti
xchg
add
push
call
(bad)
mov
loopne
lods
pop
adc
mov
mov
jae
pop
jae
push
js
push
cmp
dec
sub
mov
mov
popa
shl
in
and
popf
jmp
sahf
fs
fdivr
cmp
mov
(bad)
ret
mov
mov
sub
pop
mov
push
push
in
pop
sub
pop
xor
add
dec
aad
inc
sbb
push
mov
imul
scas
fdivp
iret
sub
pop
sbb
mov
psrad
lea
xor
stos
mov
gs
mov
mov
sbb
fsubr
jae
push
fadd
in
jae
jbe
inc
jmp
ss
scas
push
aad
sub
sub
xchg
enter
mov
aas
pop
ja
sbb
sti
cmps
add
dec
ret
and
jle
fadd
pop
in
imul
test
icebp
push
(bad)
loopne
jle
or
es
lods
in
or
sahf
cmc
mov
dec
sbb
loope
pop
movs
adc
test
and
ja
sti
aad
pop
mov
cmps
fstp
dec
mov
xchg
jg
dec
movs
aam
sbb
(bad)
cmp
xchg
mov
push
jno
adc
scas
fs
mov
cmp
or
loopne
fcom
movs
push
inc
ror
push
pop
out
repnz
rcr
cmps
sbb
(bad)
outs
retf
test
mov
je
mov
sbb
in
dec
(bad)
loope
shr
mov
dec
mov
movs
inc
fstp
daa
retf
mov
add
sbb
pop
mov
aam
std
outs
pop
dec
loop
jne
pop
inc
pop
push
(bad)
mov
push
jbe
sub
ds
xchg
add
jle
dec
jo
aad
mov
mov
sub
mov
stc
popf
pop
lahf
fwait
mov
and
das
cld
push
xchg
inc
in
mov
mov
mov
stos
shl
xchg
shr
mov
mov
sbb
dec
push
daa
sar
stos
ret
xor
mov
xchg
dec
push
ins
jmp
jle
jmp
rcl
adc
mov
pusha
jg
je
into
add
ds
pop
mov
into
cmp
jg
xchg
mov
aam
aam
sub
int
lods
cs
and
movs
jl
dec
jbe
mov
loop
pop
xor
rol
push
lds
gs
mov
jecxz
pop
mov
stos
xchg
(bad)
popa
push
mov
xor
pop
loop
(bad)
rcr
mov
dec
ror
inc
dec
inc
fwait
aaa
pushf
int
mov
vpsadbw
push
mov
adc
mov
stos
call
push
inc
aam
mov
jns
les
sub
js
fcomip
dec
xchg
mov
ret
cmc
dec
pushf
dec
cmp
sbb
or
mov
test
or
adc
push
js
cmp
out
rol
mov
pop
rol
pinsrw
aaa
jecxz
nop
lds
sub
inc
mov
mov
repnz
cmp
jle
push
popa
and
mov
jne
rol
movs
loope
adc
les
jle
pop
mov
sub
inc
call
or
push
rcr
ins
loope
popa
mov
and
scas
adc
daa
mov
mov
cmp
setb
dec
shl
imul
dec
sahf
das
cmp
or
fwait
cwde
imul
movs
mov
mov
mov
lock
syscall
inc
sub
mov
pop
out
test
fs
sti
fwait
repnz
mov
sti
push
ins
les
mov
xor
sub
push
jae
out
mov
lods
addr16
fist
test
(bad)
out
xor
dec
arpl
ret
int
ror
xchg
fnstsw
ja
fcomp
cmps
cmp
loope
lea
or
jmp
sub
sahf
es
sbb
cdq
push
jns
hlt
int3
ret
out
ret
test
dec
rcl
add
push
jle
aam
push
ins
imul
in
mov
hlt
hlt
mov
mov
and
mov
cs
daa
xchg
mov
popa
fsub
out
stos
fst
ror
push
adc
xor
inc
movs
(bad)
ds
jmp
js
sbb
sar
mov
lock
sbb
data16
fld
jno
cmp
pushf
nop
xchg
lods
mov
add
sbb
xor
push
cmp
retf
(bad)
add
out
pushf
das
mov
adc
inc
sti
or
scas
fs
or
push
daa
stos
aas
sbb
xchg
imul
mov
es
popa
jecxz
push
pop
cmp
push
jecxz
nop
cmp
pop
loopne
push
leave
(bad)
adc
outs
jnp
sbb
dec
xor
mov
pop
dec
mov
xchg
push
mov
and
das
mov
sbb
neg
inc
pop
dec
add
xchg
shl
sbb
push
and
xchg
ret
sub
ror
shr
cmp
movs
mov
add
cld
mov
aaa
pop
push
gs
mov
test
out
in
inc
cmps
mov
push
call
(bad)
dec
addr16
jp
inc
sub
test
jae
xor
shl
repz
mov
enter
or
xor
or
inc
sub
or
jae
jmp
out
(bad)
fmul
and
popf
sub
dec
fiadd
mov
or
xor
scas
push
push
sub
add
fld
adc
mov
and
and
push
jne
ds
mov
cmp
pop
jge
(bad)
test
jo
aam
sub
mov
push
outs
je
test
jg
push
pusha
out
adc
dec
xor
les
pop
mov
mov
rcl
adc
mov
pop
adc
imul
dec
xor
dec
mov
lods
fsubr
sti
es
call
cli
inc
mov
xchg
mov
xchg
mov
mov
ja
push
dec
stc
push
rol
(bad)
mov
lods
repz
add
push
mov
dec
jp
jnp
or
stc
cmp
adc
test
div
cmp
arpl
mov
cmps
ins
push
jbe
pop
xchg
retf
mov
(bad)
inc
push
sahf
test
arpl
pop
das
add
pushf
mov
aam
adc
pop
pop
lods
test
mov
jmp
int
leave
jae
add
and
jbe
dec
add
retf
jo
mov
cld
adc
rcl
jno
lods
add
pop
lods
es
mov
xchg
sub
and
adc
adc
into
pushw
mov
(bad)
mov
mov
cmps
and
jb
pop
cmps
movsx
add
pop
fdivr
outs
rcr
scas
inc
mov
rol
pop
adc
xor
imul
fld
imul
dec
lock
push
jb
mov
adc
cmps
lea
clc
sar
daa
mov
adc
(bad)
mov
push
pop
das
xor
dec
adc
loope
pop
sub
rcl
fld
mov
push
ficomp
repz
pop
jge
mov
inc
aas
mov
call
cs
cmc
pusha
jnp
fcmovne
dec
outs
bound
cmps
int
lods
xchg
xchg
imul
rcr
inc
ds
push
jo
push
scas
sahf
mov
sub
sub
imul
loope
clc
in
inc
mov
(bad)
das
adc
ss
adc
loopne
dec
test
add
repnz
jb
int
fs
imul
sbb
xchg
mov
mov
fisubr
mov
inc
lds
and
or
cmp
shl
jne
into
imul
pop
test
(bad)
cmp
add
pop
mov
sbb
repnz
mov
loop
and
xor
jp
push
mov
sub
jecxz
xor
mov
sub
xchg
mov
daa
mov
aas
sbb
cmp
jbe
retf
in
and
fucom
pop
mov
or
xlat
or
les
test
(bad)
or
aam
inc
push
out
inc
xor
push
js
jbe
dec
adc
adc
and
repz
out
jb
mov
js
das
mov
outs
push
jns
mov
push
and
pop
pop
push
ret
jnp
gs
and
(bad)
jl
popf
jmp
dec
test
aam
sub
int
mov
sub
sahf
outs
push
jae
fst
push
mov
imul
loope
dec
xor
push
xchg
add
pop
cli
mov
outs
not
aas
popa
mov
je
mov
mov
repnz
nop
(bad)
cli
ret
ficom
cmp
sub
inc
popa
(bad)
jbe
sub
dec
push
int3
inc
int
pop
repnz
in
push
movs
out
ror
cmp
push
ret
cmp
addr16
inc
mov
jb
(bad)
cmps
pusha
push
push
mov
and
(bad)
xchg
gs
xor
sbb
jl
inc
adc
popf
les
ins
jp
ss
add
fs
pop
aam
xchg
add
leave
(bad)
mov
xchg
mov
leave
movs
cwde
mov
ret
push
xchg
cmp
or
loope
cmp
aad
jbe
push
(bad)
and
mov
out
inc
jecxz
add
stos
into
dec
xor
add
sbb
push
or
fld
push
in
add
push
mov
xlat
imul
and
cmp
shr
mov
fwait
das
sub
push
shr
pusha
mov
aas
add
lods
mov
mov
or
push
outs
bound
fidivr
jecxz
dec
retf
dec
test
test
xor
lods
out
ins
xor
out
cmp
sub
dec
jmp
sub
dec
call
pop
sbb
sub
push
push
inc
lahf
mov
jmp
jecxz
pusha
movs
xchg
ds
dec
mov
int3
retf
es
ror
std
int3
movs
sbb
outs
int3
js
loop
mov
pop
test
ret
pop
daa
lods
dec
pop
fdiv
push
test
jns
xchg
push
test
fidiv
cmp
or
aad
inc
pop
leave
pop
add
fdiv
stos
(bad)
stc
mov
mov
mov
inc
outs
xchg
mov
mov
cmp
jnp
test
inc
jl
inc
xor
add
icebp
fcom
sub
xchg
icebp
cmps
int3
in
jb
jle
test
sbb
or
sbb
xchg
je
shl
add
stos
(bad)
and
ds
mov
inc
lods
fdiv
aam
pop
pop
inc
mov
or
cmp
cmps
out
lahf
cmps
lods
inc
xchg
pop
ror
bound
std
pop
cmps
imul
(bad)
fbld
xchg
add
push
imul
sti
sub
push
push
push
into
test
push
xor
jns
inc
data16
mov
jmp
or
(bad)
mov
mov
aas
pop
imul
(bad)
cmp
adc
test
mov
int3
sbb
pop
pusha
ficomp
shl
mov
fidivr
add
(bad)
jp
mov
xor
movs
push
inc
lea
mov
outs
cmp
inc
mov
(bad)
jbe
fistp
nop
in
pop
mov
and
inc
(bad)
pusha
les
push
loop
mov
test
iret
cmp
or
push
fdivr
cli
js
jmp
push
jns
(bad)
xor
adc
push
lods
fsubr
adc
rcr
call
sub
pop
or
and
retf
mov
rol
mov
jge
and
ds
call
ficom
sub
(bad)
jge
mov
mov
fldenv
call
pop
test
ud2
inc
sbb
stos
movs
test
xor
into
imul
sub
sub
xor
je
fstp
mov
enter
jg
pop
and
mov
aad
jle
mov
(bad)
jo
gs
ficom
loope
push
xor
leave
in
repz
mov
mov
int
mov
push
sbb
pop
jge
inc
fsubr
xchg
jns
mov
pop
xor
pop
shl
(bad)
div
or
adc
xor
out
xchg
ficom
call
mov
js
jns
clc
sub
or
leave
fimul
pop
and
gs
repz
in
mov
xlat
sbb
and
lds
pop
popf
loopne
lods
and
or
test
dec
jl
cmps
dec
sbb
mov
jmp
pop
nop
or
add
(bad)
mov
outs
je
jo
test
sub
aam
rcr
pop
cmp
sbb
jno
push
ja
popf
xor
sub
lock
mov
fistp
retf
adc
rcl
mov
outs
jo
adc
dec
inc
xchg
out
push
ficomp
test
mov
(bad)
sub
pop
or
cmp
add
xchg
scas
(bad)
cmp
add
pusha
out
or
add
cmp
or
xchg
sub
mov
ja
mov
imul
xchg
lods
cmp
dec
outs
add
jmp
sbb
pop
dec
adc
data16
loope
cmp
add
inc
fwait
mov
push
jbe
adc
xchg
fbld
outs
popf
or
in
sub
xchg
daa
outs
ja
lods
jno
(bad)
enter
mov
(bad)
push
dec
es
mov
jne
out
mov
jl
iret
xor
add
pop
aaa
xchg
jns
pop
mov
xchg
inc
jmp
push
xchg
js
out
js
popf
mov
jmp
xor
pop
xchg
lock
mov
jp
aam
call
adc
mov
cmp
xor
mov
xchg
test
add
adc
or
or
cmp
in
xor
dec
mov
pop
xchg
inc
dec
jecxz
push
jb
add
arpl
pop
call
pop
mov
adc
mov
popa
push
stc
clc
(bad)
leave
pop
xlat
jae
mul
daa
sub
adc
xor
adc
xlat
ficomp
movs
mov
inc
pushf
sbb
xchg
sahf
retf
cmp
sub
stos
test
popa
ror
pop
inc
mov
inc
xor
adc
xchg
or
or
xchg
push
das
in
add
mov
add
jp
dec
or
dec
daa
(bad)
aas
xor
mov
xchg
xchg
push
pop
cmps
push
sub
cmps
dec
cmp
adc
mov
jnp
or
jge
mov
mov
mov
push
lds
fadd
adc
sbb
(bad)
lods
xchg
jno
ins
pop
lock
call
xor
cwde
stos
shr
xor
(bad)
shl
xchg
mov
sub
cmp
sub
mov
or
mov
loope
add
dec
xchg
jae
ror
or
mov
mov
(bad)
out
mov
xchg
je
call
inc
dec
mov
shl
or
and
mov
int3
js
in
push
fimul
add
fcomp
jge
dec
xchg
fcomp
and
cmp
in
repnz
adc
scas
rcl
dec
mov
sub
jns
cmp
adc
enter
mov
lds
pusha
add
jno
xor
cmp
jno
sub
sub
pop
jmp
pop
and
mov
dec
xchg
fidivr
loop
repz
ficom
mov
or
mov
lahf
or
jb
rol
sbb
sbb
leave
sbb
and
ins
lahf
pop
fidivr
retf
add
xor
mov
push
mov
scas
dec
sub
loope
xchg
or
mov
nop
push
int
call
pushf
pop
hlt
mov
pop
pop
hlt
add
push
jmp
icebp
mov
shr
sub
jg
fcmovu
and
out
js
int3
push
stos
sub
scas
in
and
xchg
add
pop
pop
cmps
jbe
repz
mov
mov
and
int
movs
mov
stos
xchg
js
(bad)
nop
ret
and
or
repz
or
xchg
adc
ins
and
mov
je
fucomip
mov
les
inc
pop
push
(bad)
sub
rol
leave
fiadd
test
(bad)
dec
loop
ret
mov
in
hlt
fbld
push
jecxz
mov
and
add
(bad)
jmp
mov
retfw
rcl
push
dec
xor
arpl
sbb
cmovs
sbb
adc
pop
(bad)
cwde
in
jbe
push
push
dec
mov
fisub
fs
aas
cmp
retf
cmc
cmp
push
shl
aas
(bad)
cmps
clc
pop
and
lahf
adc
sub
(bad)
xchg
sub
jl
or
xchg
add
aam
rcl
sahf
push
jge
add
je
stos
dec
ins
je
sbb
arpl
xchg
in
dec
pop
cmp
or
(bad)
sti
mov
xchg
std
inc
out
add
jmp
rol
mov
jecxz
xchg
push
daa
(bad)
jne
stos
mov
inc
sub
out
jmp
and
(bad)
in
jbe
mov
mov
pop
sub
xchg
xor
sbb
or
(bad)
pop
popf
mov
daa
aas
and
pushf
fs
pop
or
inc
ja
and
xchg
mov
cmp
pop
(bad)
cmp
nop
cmp
fmul
inc
sub
inc
inc
jmp
dec
sub
fnstcw
dec
cli
jp
fild
out
loop
pop
sub
aas
and
push
cmp
xchg
or
jmp
cmp
ds
(bad)
clc
inc
jmp
scas
push
inc
imul
fs
mov
fwait
in
pushf
dec
mov
nop
add
pop
fnstcw
fiadd
jmp
sti
jg
mov
mov
adc
fs
imul
push
and
sti
dec
enter
es
aam
out
cmp
rcr
repnz
push
das
add
push
mov
pop
cmp
sbb
mov
cmp
repnz
mov
int
mov
adc
movs
mov
out
leave
cmp
fdivr
xor
fldcw
push
mov
movs
add
jno
xor
mov
test
jb
sub
in
call
and
call
pusha
stos
shl
inc
mov
and
mov
and
jae
adc
(bad)
push
sbb
aaa
cs
int
jmp
pop
mov
sahf
loopne
dec
ret
movs
cmp
push
fisub
(bad)
scas
xchg
das
sub
dec
or
xor
mov
xchg
pop
sub
inc
pop
daa
bound
sti
mov
js
(bad)
jbe
dec
fild
cdq
stos
call
imul
jecxz
sub
jo
push
jecxz
outs
stos
mov
call
sbb
jl
dec
mov
push
popf
call
sub
pop
imul
hlt
in
xchg
xchg
div
popf
xchg
inc
push
add
pop
mov
clc
jg
stos
dec
stc
xor
adc
repnz
dec
push
(bad)
cli
push
jmp
fwait
adc
inc
aas
pop
push
dec
dec
sbb
jbe
mov
(bad)
into
cmp
or
sbb
daa
(bad)
lods
imul
adc
push
adc
jp
or
and
push
fdiv
jb
push
mov
cld
and
fld
mov
(bad)
cmp
inc
repz
inc
cmps
dec
cmp
pop
push
movs
lahf
das
(bad)
xchg
ja
xor
mov
mov
or
(bad)
jo
or
mov
imul
xchg
xchg
addr16
cs
ret
jle
stos
test
nop
jge
pop
mov
out
clc
in
shr
pop
lods
(bad)
repz
xchg
push
out
test
not
enter
push
retf
adc
and
and
lods
xor
inc
lock
xlat
or
fs
jno
in
mov
mov
hlt
xor
in
xor
push
call
cmps
outs
mov
xchg
and
mov
inc
jnp
mov
iret
sub
pop
adc
push
xchg
cli
push
sti
std
lods
je
mov
ret
inc
or
stc
jmp
sub
mov
fdivr
or
test
mov
test
mov
mov
cld
xchg
sbb
or
fisttp
jg
add
mov
cmps
(bad)
dec
sub
ss
sbb
(bad)
or
mov
call
sbb
arpl
jnp
fs
js
pop
add
test
aam
repnz
inc
push
sbb
or
out
push
fld
arpl
enter
jae
fdiv
push
pop
mov
ss
push
jg
cmp
push
xlat
pop
mov
rcr
and
dec
nop
popa
aaa
dec
mov
jns
aam
addr16
jp
(bad)
loope
imul
call
xchg
sti
and
call
mov
je
dec
cmp
xor
or
inc
jmp
bound
inc
mov
add
add
pop
popa
(bad)
popa
pop
or
std
adc
repnz
inc
stos
gs
ja
xor
ins
xchg
mov
lea
fdiv
in
and
scas
std
and
sub
jecxz
stos
cs
(bad)
cli
mov
jmp
imul
mov
xchg
dec
in
mov
push
loope
sbb
data16
fimul
aaa
popa
xchg
movs
xchg
mov
mov
pop
pop
test
xor
aas
or
xchg
sbb
dec
push
shl
cwde
mov
xchg
mov
jmp
mov
dec
cmc
popf
jg
aad
hlt
pop
call
bound
(bad)
and
clc
hlt
inc
es
pop
int3
xchg
mov
cmc
dec
fsubr
push
push
pop
mov
data16
jecxz
sub
iret
fldenv
mov
dec
out
sub
ss
arpl
pop
add
sub
adc
mov
push
mov
pop
mov
and
movs
inc
out
jns
inc
cmps
dec
inc
addr16
add
ss
xor
mov
popf
jne
push
and
in
and
sub
aas
in
imul
retf
mov
fcom
aad
test
or
iret
or
jbe
shl
xor
mov
cmps
in
mov
into
xor
icebp
lock
cmp
mov
scas
cmc
mov
push
movs
out
adc
shl
xchg
sti
sbb
retf
cmps
mov
jp
jecxz
jp
push
jns
push
push
add
in
cwde
add
push
(bad)
adc
cmp
add
jg
inc
ss
loopne
mov
mov
std
lods
shl
mov
xor
ficomp
dec
outs
adc
ja
push
test
and
inc
std
mov
sub
ret
les
push
stc
repnz
adc
imul
stos
sub
fsubr
cmp
inc
add
pop
xchg
xchg
retf
pop
aaa
xchg
enter
pop
add
xor
or
xor
push
add
pop
adc
and
push
(bad)
push
inc
xor
mov
test
imul
cmc
test
in
push
pop
adc
ins
inc
or
push
loope
or
pop
or
(bad)
loope
mov
addr16
stos
inc
test
aas
loopne
pop
mov
adc
mov
push
int
mov
shr
jmp
sub
push
adc
shl
adc
(bad)
sub
out
inc
into
jne
pop
pop
sub
pop
mov
fxch
daa
lods
test
jns
push
movs
jge
es
xor
dec
mov
cwde
inc
out
push
pushf
mov
cmp
in
jns
push
ss
jno
ins
jnp
js
rcr
stos
les
mov
test
dec
pop
js
fucomip
inc
push
dec
and
cdq
inc
pop
aas
bound
cmp
push
into
dec
push
imul
mov
repz
and
js
xchg
in
stos
fwait
and
aaa
cmp
lods
repnz
or
jle
sahf
ret
loop
fistp
inc
fild
test
mov
stos
push
push
jmp
fadd
xchg
push
movs
cli
cmp
push
sbb
cmp
lea
xor
sub
ja
sbb
push
test
mov
or
int
mov
and
je
shl
mov
mov
test
(bad)
pop
sub
mov
sub
inc
dec
cmc
mov
mov
lahf
jo
outs
inc
lock
out
jb
sbb
adc
inc
mov
outs
jmp
ret
jg
stos
cmp
and
pop
shr
jae
test
mov
gs
pop
out
mov
popf
scas
lods
lods
(bad)
push
aad
add
pop
sbb
aas
call
mov
sub
sbb
arpl
add
fxch
stc
mov
daa
(bad)
lods
xchg
stos
pusha
daa
fstp
pop
inc
push
iret
arpl
aas
dec
jg
mov
push
imul
gs
mov
xchg
and
dec
and
pop
inc
mov
in
pop
sar
mov
mov
iret
xor
pshufw
les
(bad)
mov
sub
stos
xor
xchg
loop
in
xor
stc
enter
add
cwde
stos
test
push
xchg
rol
data16
pop
mov
xchg
adc
dec
call
test
jne
dec
loopne
movs
xor
mov
loope
mov
test
xlat
xchg
out
or
xor
push
scas
jbe
pop
fadd
(bad)
cld
sub
fsubp
mov
fwait
aas
mov
retf
scas
sub
or
lahf
push
mov
int
push
shl
pop
popf
in
fdivr
movs
pop
push
push
mov
lods
int3
mov
ja
sub
ds
mov
ror
mov
and
dec
xor
jo
call
(bad)
sti
or
je
push
xor
scas
and
push
jmp
test
iret
sub
add
mov
aam
cmp
sub
repnz
iret
push
cmp
adc
cmp
cmp
add
push
lods
mov
xor
jno
gs
les
xor
neg
imul
cmp
sub
jmp
push
test
retf
fldenv
pop
mov
inc
aam
rcl
dec
mov
shl
mov
xchg
fiadd
cli
adc
add
cwde
test
ja
inc
mov
push
out
sbb
rcl
mov
cmc
loopne
mov
adc
mov
outs
aad
icebp
fstp
mov
cmps
mov
(bad)
cmp
aam
sub
pusha
fstp
mov
cmp
mov
adc
sub
push
add
push
xlat
push
enter
ficomp
stos
fild
inc
retf
test
imul
inc
fcmovbe
or
loope
ins
mov
mov
or
sbb
imul
pop
outs
dec
repnz
dec
cmc
ja
outs
test
ins
cmp
jle
mov
jb
pop
adc
stos
inc
push
push
enter
ror
scas
fistp
or
test
mov
es
js
push
iret
jo
jg
jae
pop
jmp
std
push
loope
in
or
aaa
aam
es
sub
lea
mov
push
fbstp
sub
gs
xchg
push
(bad)
mov
mov
out
fistp
jge
add
dec
xor
push
and
sbb
xchg
enter
jp
mov
xchg
lahf
push
dec
add
test
in
push
and
mov
loope
cmps
outs
push
pop
test
cmp
jmp
fdiv
push
mov
xchg
cmps
xor
mov
pop
push
test
imul
jb
test
fidiv
or
mov
mov
or
imul
mov
jnp
test
in
jae
lahf
mov
je
sub
jae
push
mov
cdq
cmps
dec
mov
dec
mov
es
pop
leave
out
je
adc
push
pushf
inc
imul
les
jmp
outs
fnstenv
loope
or
or
adc
xchg
jge
jmp
retf
call
mov
and
retf
and
aam
push
add
fidiv
retf
imul
lds
add
dec
(bad)
cmp
ins
push
xlat
fnstenv
jmp
pop
mov
test
mov
in
in
sbb
mov
popf
adc
das
cmc
adc
jecxz
push
mov
loopne
aam
sahf
sti
imul
sub
imul
jmp
add
and
xor
jp
(bad)
mov
test
xchg
outs
inc
mov
mov
inc
in
icebp
jb
dec
je
sbb
(bad)
sbb
sbb
rcl
pop
pop
adc
(bad)
push
rcl
sbb
test
sbb
jae
mov
pop
lock
xor
sbb
pop
jecxz
(bad)
iret
xchg
retf
adc
push
inc
imul
ficom
or
lods
(bad)
dec
out
(bad)
shl
div
jb
mov
dec
test
lahf
inc
inc
cs
std
loop
fwait
sub
add
cmp
int
push
int
(bad)
sahf
arpl
(bad)
pop
and
loopne
(bad)
shr
xor
call
jae
xchg
in
sar
or
mov
xor
xlat
loop
jae
fcomp
mov
scas
js
xor
(bad)
icebp
adc
add
jmp
mov
inc
imul
shr
and
inc
xor
xchg
pop
sub
push
popf
inc
or
mov
xchg
mov
pushf
pop
(bad)
test
jmp
jbe
xor
cmp
repz
xchg
jp
mov
mov
xor
mov
das
aaa
ja
pusha
mov
jnp
popf
xchg
mov
bndldx
sub
mov
mov
and
mov
ror
xor
jecxz
ret
mov
sbb
mov
icebp
aaa
imul
inc
popf
call
or
mov
push
call
pusha
mov
jmp
xchg
sti
(bad)
loope
sti
daa
test
push
xchg
in
icebp
jne
or
test
aam
in
ds
dec
dec
cmp
(bad)
mov
cmc
sub
(bad)
aam
(bad)
ins
push
mov
push
xlat
ja
ss
lods
ret
dec
mov
or
mov
iret
pop
pop
into
rcl
mov
icebp
xchg
sbb
retf
push
test
test
std
jo
jle
das
add
in
pusha
adc
nop
or
push
popa
mov
jmp
iret
pop
push
retf
xchg
push
bnd
movs
loopne
ret
(bad)
ds
stc
loopne
cmp
adc
sbb
jno
mov
xlat
dec
sub
sbb
mov
out
and
mov
ins
sbb
sub
fiadd
repnz
in
adc
stos
sbb
xchg
inc
add
iret
adc
cli
cld
dec
cmps
mov
push
in
retf
xor
mov
mov
in
xchg
arpl
sub
cmp
inc
movs
xlat
(bad)
push
pop
pop
icebp
mov
dec
add
jmp
push
lahf
mov
out
cdq
ss
pusha
in
mov
gs
pushf
imul
fincstp
sbb
mov
mov
xchg
arpl
pop
fld
jne
dec
enter
icebp
fdivp
inc
sub
imul
push
fs
loop
sub
xor
outs
in
mov
stc
push
scas
out
iret
sti
cdq
mov
test
shl
pop
pop
mov
(bad)
xchg
cmps
popa
adc
mov
xchg
int
push
xor
cmp
imul
add
cld
fld
jecxz
outs
in
das
test
xor
call
xchg
adc
test
ins
mov
or
or
or
xchg
xchg
popf
(bad)
push
or
adc
mov
std
or
call
cmp
call
pop
push
pop
and
mov
cmp
mov
mov
repz
xchg
aam
add
cmp
(bad)
ss
fidivr
test
push
ss
pop
xor
xor
xchg
and
scas
push
aaa
in
mov
shl
push
pop
enter
add
out
enter
or
pop
xchg
xchg
je
jae
dec
jmp
sar
dec
add
push
sub
pop
(bad)
ja
div
ret
das
and
push
in
in
lahf
pop
hlt
xor
imul
repz
ins
or
jmp
test
mov
shl
lods
jbe
push
xchg
dec
push
mov
adc
out
xchg
int
fisubr
add
pop
cwde
inc
sub
sub
mov
jo
dec
lds
jg
shl
gs
(bad)
js
sub
shl
hlt
js
sbb
xlat
jmp
jge
xchg
stos
addr16
xor
jno
ds
jae
add
jle
fnsave
dec
cmp
call
mov
iret
add
mov
sbb
mov
push
outs
hlt
cld
push
jl
inc
and
(bad)
add
sar
fidivr
dec
gs
jg
mov
(bad)
pop
dec
push
fdiv
and
fild
(bad)
loopne
out
out
mov
sbb
push
cli
fnstsw
mov
push
push
or
cli
pop
jmp
mov
sbb
inc
adc
sub
cli
ins
sbb
add
jmp
or
je
pop
test
pmulhuw
xchg
xchg
xchg
outs
mov
pop
jbe
inc
pop
or
out
dec
xchg
(bad)
xchg
test
ror
cmp
fdivr
jbe
cmps
push
xchg
imul
int
add
jle
sub
cmp
push
nop
sbb
and
sbb
movs
xor
outs
cmp
cmp
fcomp
rcr
xor
sbb
and
pop
(bad)
retw
mov
xor
jge
lods
jne
ds
pop
xchg
movs
add
ror
js
shr
pop
dec
and
ret
or
push
fmul
movs
adc
sbb
or
add
popf
leave
lds
adc
lahf
mov
icebp
adc
lahf
mov
mov
clc
lds
mov
sti
mov
xor
mov
xchg
pop
pop
sbb
(bad)
out
inc
adc
call
mov
test
or
mov
popa
add
mov
add
fbld
mov
sub
fisubr
lods
mov
jbe
je
jbe
ins
add
(bad)
in
pop
fcomp
fcom
pop
mov
pop
mov
rcl
stos
jns
sbb
lods
les
sub
retf
push
push
sub
cld
daa
jl
or
jle
pop
mov
les
or
ror
(bad)
pop
jge
out
loopne
mov
daa
je
into
in
add
rcr
and
aaa
dec
or
iret
leave
or
sub
push
loopne
loop
mov
iret
test
fcom
inc
and
inc
and
fdivr
cmp
or
pop
push
cmp
push
inc
mov
icebp
ror
test
inc
out
(bad)
cs
adc
mov
(bad)
lods
cmp
(bad)
das
sbb
cdq
pop
xor
or
je
sti
ret
pop
mov
call
inc
pop
sbb
pop
movs
arpl
cmp
sbb
push
jle
mov
mov
lods
outs
xchg
xchg
adc
retf
pop
neg
or
xchg
out
scas
fimul
sbb
retf
icebp
sbb
and
cdq
add
imul
sub
clc
fnstsw
daa
mov
jg
mov
arpl
sub
fndisi(8087
push
mov
dec
inc
aam
mov
fidiv
retf
dec
push
dec
jmp
imul
loop
in
mov
pushf
sub
aam
mov
movs
xor
xchg
xor
fwait
mov
xor
xchg
cmps
cmp
mov
jmp
sahf
ss
ret
inc
xor
cmc
ret
mov
adc
xor
sbb
mov
cmc
push
repz
fimul
jle
jnp
ret
dec
xchg
lss
xor
stc
stos
inc
dec
jo
cmps
test
jb
enter
int
scas
lods
cdq
fucomi
inc
add
fmul
iret
mov
mov
xchg
cs
mov
(bad)
lock
dec
mov
dec
movs
std
push
mov
cmp
sar
stos
out
push
imul
cwde
cld
cmc
mov
das
daa
mov
cmps
icebp
fs
movs
mov
jle
lds
popa
dec
pop
or
fistp
inc
iret
jnp
pop
cmp
fdiv
inc
fadd
and
xor
sbb
jbe
mov
dec
test
mov
das
not
popa
xlat
xor
cmps
dec
jecxz
pop
push
mov
stc
iret
in
mov
adc
pop
mov
inc
leave
aam
leave
rcr
leave
mov
jbe
push
sbb
sbb
out
clc
push
call
shl
cmp
mov
out
jge
(bad)
jle
cmp
add
dec
icebp
retf
cli
je
and
jae
cmps
push
jmp
js
gs
popf
xchg
xchg
or
adc
dec
movs
test
in
sub
hlt
pop
sub
imul
push
jge
xchg
mov
icebp
mov
arpl
inc
(bad)
jecxz
cmp
jmp
(bad)
xor
adc
mov
inc
das
fcom
(bad)
aad
pop
sar
dec
mov
call
and
or
sbb
sbb
cli
call
pop
in
lock
scas
pushf
xor
fsub
icebp
leave
cmc
pop
add
sub
jmp
sahf
add
sbb
aas
mov
mov
xchg
xor
dec
push
fistp
xchg
jo
out
pop
push
add
(bad)
pusha
and
mov
dec
adc
shl
jb
mov
(bad)
aam
jmp
mov
aaa
in
fisub
int3
or
lods
jno
ret
push
push
addr16
mov
jge
adc
mov
pusha
push
ror
(bad)
fisttp
xchg
int3
fs
inc
add
sub
ret
jb
sub
dec
scas
inc
mov
add
or
inc
lock
mov
lods
jl
lods
loop
stos
xchg
mov
cmp
imul
dec
and
xchg
lods
cmp
mov
out
outs
das
xor
and
out
mov
jg
mov
mov
lock
jns
mov
imul
lahf
aaa
test
jmp
not
aas
mov
jae
or
popf
retf
sbb
or
repz
pop
mov
jns
mov
sti
fst
imul
imul
cmp
mov
mov
out
xor
push
mov
test
mov
and
rcr
sti
loope
out
je
loopne
inc
icebp
cmp
jae
add
mov
lock
fcom
pusha
adc
and
push
jne
push
xchg
fwait
push
daa
xchg
inc
movs
dec
sti
xchg
mov
leave
fnstcw
shl
loopne
into
pop
(bad)
js
(bad)
push
and
inc
js
jmp
(bad)
sub
mov
adc
repnz
push
and
fdiv
xchg
dec
xchg
hlt
lahf
jae
cmp
popa
xchg
(bad)
pop
outs
xchg
pop
lods
sbb
shl
sbb
stos
into
aas
dec
mov
adc
add
dec
into
mov
sbb
aas
jle
and
push
xchg
jp
lods
or
(bad)
xor
mov
mov
test
mov
movs
mov
(bad)
inc
lahf
and
hlt
jmp
std
sub
aam
jmp
ret
(bad)
cmps
cmp
popf
lds
dec
mov
pop
mov
add
sti
or
(bad)
and
xor
add
lds
push
sub
les
jbe
or
sbb
das
dec
and
inc
fidivr
stos
sub
sbb
inc
je
out
sbb
das
cld
(bad)
cmp
movs
jmp
lds
ret
cmps
aad
xor
xchg
xor
outs
jmp
inc
fptan
adc
mov
push
pop
cmp
ja
leave
cmps
mov
idiv
pop
push
dec
add
rcr
pop
not
mov
push
lods
das
push
aas
lahf
pop
rcl
fldcw
in
xchg
push
adc
adc
cmps
retf
lods
mov
jp
out
xor
pop
rcr
test
mov
retf
in
add
sub
xor
in
mov
popf
out
jne
jns
pop
mov
rcr
push
shl
mov
lahf
mov
scas
stos
pusha
mov
lahf
cld
ret
push
das
out
dec
or
push
je
mov
fdiv
push
add
sub
jae
ret
lods
cmc
mov
sub
lds
sti
out
sbb
jmp
nop
push
(bad)
(bad)
out
mov
(bad)
cli
sub
fcmovnbe
xor
cdq
xor
sub
retf
dec
call
cmp
fcmovu
das
mov
sub
cmc
call
dec
jns
pop
sbb
jg
inc
push
scas
aad
pushf
inc
call
(bad)
push
stos
push
arpl
push
sub
inc
nop
inc
jmp
pushf
and
sbb
dec
and
add
mov
adc
fist
test
push
push
xchg
bound
sbb
outs
xlat
xor
std
or
xchg
mov
mov
add
ret
sub
enter
sub
mov
adc
stos
in
or
popa
pop
add
lea
jns
cmp
nop
inc
xchg
fs
out
popf
fcmovb
repnz
jne
push
or
sbb
adc
mov
adc
jmp
mov
sahf
add
mov
rol
push
(bad)
pop
and
clc
dec
pushf
sub
xchg
fldpi
stos
pop
cmps
fsub
xor
lods
xor
fs
push
mov
jmp
dec
push
arpl
jb
loope
dec
sbb
add
mov
aaa
addr16
(bad)
dec
sub
dec
sbb
out
out
(bad)
fsub
loopne
jge
adc
or
push
mov
sti
pop
fst
xchg
add
clc
xchg
sar
mov
lds
sti
clc
std
xlat
adc
push
mov
pushf
cmp
mov
cwde
retf
xchg
sti
pushf
call
daa
enter
cmc
or
aam
pop
push
cmc
add
add
std
xor
mov
repz
and
rcr
cmp
push
inc
lods
xor
ret
ja
hlt
(bad)
dec
bound
pop
mov
imul
inc
dec
dec
jl
push
add
jg
mov
sbb
add
dec
sub
jb
cmp
ins
mov
mov
data16
into
stos
es
and
add
scas
retf
xchg
stos
in
or
clc
push
cmp
test
xor
out
mov
repnz
adc
cmps
not
popa
out
cmps
mov
cs
mov
outs
pop
lea
jns
xor
fld
aas
dec
add
cmps
inc
xlat
inc
jbe
jg
out
addr16
xor
icebp
push
(bad)
adc
aas
inc
js
or
or
mov
icebp
jo
xchg
aad
pop
out
(bad)
cmp
mov
and
sbb
cmp
cmp
mov
mov
ja
push
adc
mov
ja
xchg
jmp
jmp
addps
sub
imul
jp
mov
mov
pop
xchg
mov
arpl
pop
lods
xchg
adc
pop
hlt
dec
push
sti
mov
cld
lahf
and
xor
xor
bound
movs
mov
inc
xor
std
cdq
xchg
mov
in
popa
bound
pop
shl
fdivr
sub
mul
jns
xor
mov
out
push
mov
bound
sbb
add
into
inc
ins
repnz
pop
(bad)
push
jecxz
pushf
les
mov
scas
mov
in
inc
or
cmp
sbb
(bad)
in
sub
pop
dec
icebp
inc
mov
neg
xor
movs
mov
sbb
ret
and
js
inc
retf
(bad)
fisub
retf
mov
lock
lock
pop
repnz
jmp
fnsave
ins
and
sbb
arpl
in
and
dec
mov
and
jno
dec
mov
rcr
pusha
fild
jno
in
xor
retf
dec
js
fimul
enter
lea
dec
adc
xor
addr16
mov
adc
jle
sbb
and
add
mov
xchg
imul
inc
or
jmp
cmps
daa
sbb
idiv
test
call
pop
test
fldenv
cmp
pop
adc
stc
sbb
into
jl
mov
or
sub
sbb
scas
mov
shl
or
fcmovu
ins
(bad)
push
mov
cmp
jno
mov
inc
xchg
mov
aaa
es
add
push
mov
mov
ds
adc
ret
sbb
div
stos
xor
sbb
aad
push
xchg
imul
mov
push
jbe
idiv
lods
adc
call
call
mov
into
add
mov
adc
leave
dec
xor
mov
popf
sub
xor
mov
js
imul
add
mov
sar
inc
hlt
scas
gs
jb
add
adc
xor
aam
data16
add
stos
inc
xor
(bad)
mov
(bad)
mov
adc
cs
sbb
add
fisubr
cmp
lods
pop
imul
fist
retf
retf
push
(bad)
dec
rcl
dec
pop
inc
scas
sar
nop
lds
jns
sub
loopne
movs
int3
xchg
rol
test
pushf
jns
(bad)
cmp
(bad)
cs
lock
xchg
les
fwait
dec
mov
cmp
call
into
mov
or
sub
out
cmps
or
xor
sbb
adc
inc
cmc
aad
test
iret
pop
mov
cmp
sar
sbb
or
pop
or
test
dec
vmulss
(bad)
mov
pop
les
shl
ret
pop
inc
xor
inc
cmps
data16
pop
lea
xchg
clc
aad
jmp
push
ins
into
iret
test
xchg
fst
xchg
push
mov
ja
jb
ins
adc
xchg
mov
cmps
push
loop
sbb
hlt
xor
dec
test
push
xchg
jp
push
mov
mov
xor
lahf
icebp
scas
mov
cmps
xor
pop
push
fcom
mov
mov
movs
rcr
mov
push
daa
xor
mov
mov
sub
cdq
xchg
call
jp
loop
xor
or
test
xor
shr
in
lods
rcr
sub
sub
jnp
loop
cmp
cmp
jbe
popf
loopne
xchg
adc
popa
and
popa
mov
scas
scas
(bad)
cmc
shr
sbb
mov
pop
nop
mov
cmp
or
mov
lea
mov
pop
adc
inc
or
add
inc
iret
sar
out
cmp
cmp
out
dec
cs
dec
cmp
push
enter
test
fsub
or
sub
in
sbb
cmc
shl
cli
lea
cmp
popa
lahf
gs
xchg
cli
xor
or
mov
adc
mov
daa
mov
pop
addr16
add
scas
fcom
push
pop
xchg
add
mov
cld
sub
scas
sub
jl
dec
(bad)
imul
in
int
sti
ror
add
push
data16
inc
jp
stos
mov
fs
jl
add
sahf
out
mov
jle
mov
or
jge
cmps
sbb
aam
adc
(bad)
iret
mov
xchg
mov
sar
int
outs
adc
pop
pop
push
daa
lods
jo
sbb
sahf
sar
push
sbb
mov
mov
jne
jg
call
hlt
sub
inc
and
out
loopne
hlt
mov
mov
mov
jg
cld
or
popa
pop
adc
inc
pop
shl
imul
or
dec
movs
mov
lea
(bad)
sbb
jmp
sahf
add
mov
or
stos
sti
cmc
inc
rcr
add
inc
mov
fmul
popf
daa
mov
xchg
pop
popf
out
add
cmp
dec
and
fidivr
dec
mov
lea
icebp
xchg
gs
push
cmp
sbb
add
arpl
pop
inc
pop
add
or
xor
mov
push
mov
daa
int3
push
outs
repnz
(bad)
xchg
adc
sub
retf
xor
jecxz
inc
leave
rcl
int3
jb
mov
push
sub
xchg
mov
cmp
arpl
cwde
or
inc
pusha
jmp
push
dec
xor
mov
mov
lock
(bad)
fmul
push
sbb
jmp
sub
pop
pushf
mov
fmul
adc
daa
mov
(bad)
jmp
sub
mov
jo
fdiv
and
mov
pop
inc
cmp
dec
lods
fdiv
dec
xor
dec
pop
xchg
cmps
xor
mov
add
inc
lahf
mov
xlat
lds
loopne
jnp
fdivr
stos
mov
push
jb
lds
bound
cmp
xor
jae
inc
jmp
mov
inc
xlat
xor
mov
cmps
push
call
cmp
fwait
cmp
inc
call
jg
pop
daa
xchg
mov
(bad)
mov
push
(bad)
mov
mov
adc
adc
retf
iret
in
and
add
push
push
ret
call
mov
(bad)
ins
addr16
mov
adc
ins
pop
jmp
jmp
mov
xor
sub
inc
xor
push
jnp
mov
fidivr
pop
inc
clc
test
jmp
jnp
(bad)
(bad)
cmp
dec
inc
jle
or
das
es
cmc
into
add
adc
shl
shr
retf
loop
shr
int
clc
sub
jbe
push
(bad)
in
sub
xchg
movs
pop
push
cdq
jo
jo
mov
cmp
push
mov
fs
jmp
iret
jmp
rcl
in
sar
mov
fs
sbb
fwait
mov
imul
push
in
sub
in
xlat
aam
dec
pop
dec
js
fld
xor
iret
dec
push
xchg
inc
std
fisub
(bad)
jmp
fstp
lods
out
imul
cli
test
and
cmp
jb
xchg
sub
mov
test
addr16
movs
daa
cmps
fiadd
aas
jmp
cmp
int
mov
jo
cmp
ss
nop
clc
aas
jmp
xchg
movs
fmul
sbb
jno
adc
push
xchg
jne
mov
stc
mov
std
fnclex
mov
adc
sbb
xor
mov
xor
mov
enter
sbb
in
jge
jno
xchg
sub
dec
cmp
mov
imul
and
pop
std
mov
fisttp
xchg
int
jb
jae
inc
pop
lock
jmp
mov
cmp
shl
add
fnstcw
cmp
test
pop
leave
mov
cmc
call
sar
push
and
je
fs
add
push
aam
in
ja
xlat
pop
push
and
sub
scas
test
inc
mov
adc
sbb
mov
and
adc
inc
(bad)
xor
fadd
dec
xchg
sbb
sbb
ret
shr
inc
int3
mov
mov
cwde
sbb
lahf
xchg
scas
add
pop
loop
mov
(bad)
imul
mov
jmp
inc
adc
and
shr
push
xor
add
fs
fdiv
addr16
adc
(bad)
xchg
adc
cmp
mov
jbe
cdq
add
and
ret
int
out
inc
out
inc
aad
stos
xor
and
adc
inc
int3
lahf
call
loope
inc
inc
push
sbb
cmc
js
mov
mov
icebp
ins
popa
mov
test
pop
ficom
setns
mov
or
adc
push
mov
fwait
sub
gs
fistp
push
sbb
add
cld
cmp
mov
push
out
scas
xchg
inc
pop
inc
(bad)
push
sbb
and
aam
add
xchg
pop
(bad)
loopne
mov
or
dec
cmp
jmp
inc
loope
js
pop
or
sbb
push
movq
adc
mov
and
push
out
js
and
shl
xchg
push
in
sub
retf
call
stos
sar
jo
add
test
aas
push
mov
mov
jecxz
jno
pop
ss
or
call
jecxz
jno
mov
adc
cli
jbe
mov
fwait
movs
aam
xchg
xchg
cs
fisub
aaa
push
std
or
add
pop
mov
ins
pop
leave
xlat
test
and
in
and
push
aaa
ds
in
pop
inc
les
(bad)
sbb
fwait
mov
ret
test
(bad)
dec
xor
cmps
js
add
out
js
jge
mov
in
shl
mov
add
cmp
scas
pop
and
shl
cmp
cmps
leave
dec
idiv
enter
add
xor
xor
retf
out
sub
mov
dec
dec
ficomp
sub
add
test
or
and
mov
cmps
mov
inc
fld
push
and
ret
ret
je
ret
addr16
mov
leave
dec
fcomi
(bad)
jl
xchg
sub
and
mov
jne
push
fisub
xchg
outs
push
dec
mov
shl
and
aas
iret
shr
rol
sbb
push
mov
xchg
or
jae
hlt
es
mov
bound
outs
bound
pop
(bad)
jno
out
mov
fwait
add
ins
xor
cdq
and
aad
js
loopne
sti
mov
fsubr
scas
scas
sbb
icebp
mov
inc
test
fwait
sar
bound
shr
aad
push
mov
out
inc
lods
sbb
dec
fistp
xchg
test
bound
jle
ins
mov
sbb
mov
into
fwait
mov
aam
stc
repz
fld
repz
fdivr
xchg
dec
pop
iret
xor
inc
dec
frstor
les
stos
movs
les
in
cli
loope
adc
sbb
loopne
dec
call
fsubr
ret
in
mov
mov
test
out
fdiv
sar
pop
xor
pop
mov
cmc
scas
dec
aam
and
aas
test
(bad)
fcomp
mov
jge
rol
(bad)
popf
mov
jp
mov
cmp
outs
retf
and
cmps
cs
test
std
mov
and
sbb
push
xchg
pusha
sub
mov
push
push
les
xchg
jle
fcomp
shl
fst
sbb
cmp
and
inc
sub
lods
or
mov
sahf
push
pop
fsubr
fldenv
jae
enter
nop
jnp
inc
sbb
pop
mov
out
sub
dec
push
ins
inc
jmp
adc
lahf
mov
add
pop
loop
sub
jmp
push
push
pushf
shl
popa
mov
sbb
addr16
je
jnp
call
add
jl
add
mov
out
fist
pop
std
ffree
fisttp
or
popa
mov
mov
sub
sbb
sbb
les
mov
and
and
add
call
in
rcr
jecxz
ins
fild
push
retf
mov
xor
out
test
jmp
mov
adc
jb
sub
in
comiss
mov
test
cwde
das
mov
dec
push
cmp
daa
or
(bad)
mov
cmp
and
pop
out
scas
and
adc
fbld
int
xchg
add
and
inc
pop
cmp
add
mov
and
js
add
pop
cmps
push
xor
mov
push
add
and
adc
lock
adc
scas
lods
cmp
sub
shr
dec
push
mov
mov
inc
xor
xchg
adc
scas
jecxz
sbb
aaa
imul
pop
adc
inc
jbe
inc
not
adc
jecxz
dec
mov
push
xor
xchg
js
jo
jae
fwait
mov
std
cli
adc
test
inc
enter
sar
cmps
fidiv
xchg
sbb
jnp
cmps
clc
lahf
ret
mov
inc
(bad)
(bad)
cmp
and
jnp
cmc
test
push
(bad)
call
or
jmp
adc
fmul
data16
sub
(bad)
iret
jmp
sbb
cmps
adc
mov
push
push
dec
leave
neg
mov
cmp
test
push
ss
enter
inc
pop
sub
stc
or
xor
add
inc
xchg
mov
rcr
pop
jns
or
fild
(bad)
daa
adc
mov
shl
mov
loopne
xchg
pop
xchg
clc
mov
retf
mov
call
dec
stos
rol
mov
aas
mov
mov
rcr
mov
mov
scas
cmp
cmps
jl
(bad)
fsub
cs
add
xor
adc
pop
cs
cmp
lea
pop
xor
repz
arpl
imul
int3
sub
lock
jns
pop
xchg
lock
(bad)
(bad)
enter
jecxz
push
sbb
mov
inc
xchg
push
(bad)
and
ficomp
test
rol
adc
and
mov
or
cmp
sub
inc
das
cmp
das
das
xchg
ret
ss
dec
mov
mov
pop
fistp
push
(bad)
sahf
jle
inc
(bad)
repnz
xor
and
fwait
xor
stos
mov
call
mov
dec
mov
pop
cmp
in
sub
mov
ja
hlt
cmp
pop
sti
adc
loop
adc
mov
out
cwde
aas
popa
jb
jmp
dec
xchg
jo
leave
fadd
in
push
push
or
and
adc
dec
jo
mov
shl
lods
not
retf
lds
xchg
pop
lock
jmp
pushf
adc
leave
and
imul
xchg
pushf
sub
cmps
or
fiadd
inc
fucom
cmp
inc
jmp
add
movs
sahf
sbb
popf
xchg
call
iret
pushf
mov
or
or
in
jnp
mov
fcmovnu
lock
call
jns
cmps
das
dec
ret
adc
(bad)
(bad)
cld
test
xchg
mov
dec
clc
mov
sbb
repnz
imul
aaa
push
scas
das
push
cmps
es
fs
sbb
mov
xchg
lods
fisubr
mov
shl
jnp
cmp
rol
hlt
in
pop
jbe
test
adc
dec
xor
dec
sub
je
cmp
scas
data16
daa
pop
adc
jae
or
mov
cmps
xor
sub
sbb
jp
cmp
loopne
push
push
lea
and
fnstsw
js
dec
jmp
and
js
dec
call
jae
sub
mov
call
xchg
sbb
and
xchg
adc
lea
test
int
xchg
int
or
adc
std
sub
push
add
cli
xchg
xchg
inc
cmp
cmp
pop
xor
inc
pop
adc
stc
outs
cli
xchg
lds
pop
xchg
or
cmp
adc
test
in
sbb
imul
inc
inc
jmp
mov
rcr
inc
imul
stos
(bad)
shl
les
aam
jo
repnz
sub
test
lods
stos
mul
cmp
jmp
add
pop
cli
sub
loopne
mov
cld
mov
test
cwde
xor
adc
cmp
jne
mov
adc
or
nop
pop
dec
and
(bad)
mov
test
jge
xor
add
loopne
jge
jns
ins
dec
sub
jge
and
xchg
sbb
je
jmp
dec
idiv
push
xor
imul
cmp
push
mov
daa
sub
mov
test
int
ret
repnz
jb
adc
sbb
test
inc
addr16
push
or
pcmpgtw
or
cmp
add
jo
loope
in
ret
stos
cmp
jae
and
lahf
out
mov
pop
inc
retf
mov
mov
jmp
and
jnp
cs
enter
xor
xchg
sub
dec
mov
pop
outs
(bad)
inc
mov
xor
sub
sub
cmc
pop
loopne
inc
adc
ret
jae
cwde
push
int3
mov
mov
and
test
int
jne
movs
imul
loope
fwait
add
lods
xchg
sub
(bad)
push
pop
sbb
fistp
loope
adc
leave
mov
das
dec
addr16
xchg
(bad)
ror
and
mov
pop
out
xchg
cwde
pop
add
mov
and
(bad)
cs
gs
or
scas
xor
std
sbb
inc
jmp
das
and
push
jmp
mov
rcl
mov
rep
sbb
push
jne
mov
adc
mov
aaa
retf
push
mov
popa
pop
adc
popa
leave
popf
ds
jmp
or
xchg
dec
sub
pop
rol
hlt
fist
dec
cmp
sub
pushf
mov
sbb
add
pusha
add
lods
mov
pop
mov
ins
dec
loope
jecxz
sahf
repnz
cmp
imul
jl
bound
test
gs
pop
fmul
xor
mov
out
in
(bad)
out
in
call
add
pop
(bad)
enter
jle
xor
mov
mov
and
loopne
cwde
mov
push
dec
int3
push
cdq
xlat
gs
(bad)
int3
mov
adc
call
mov
out
icebp
cdq
mov
(bad)
inc
jmp
(bad)
xor
int
scas
jmp
imul
dec
cmp
jne
in
repnz
ret
repz
and
out
xor
ret
repnz
movs
xlat
aad
mov
imul
in
les
cli
or
cmp
(bad)
cld
xchg
lock
lods
dec
popa
pop
inc
pop
fmulp
dec
fs
cmp
rcr
or
js
inc
pop
jae
hlt
push
je
in
cwde
and
mov
retf
loop
(bad)
sub
sub
popf
test
ficomp
dec
mov
addr16
xchg
iret
or
daa
repz
xchg
jmp
jns
jl
js
ins
jp
shl
imul
pop
pop
mov
adc
xor
mov
jle
inc
ss
xchg
js
adc
in
sub
add
mov
sbb
sub
sub
stc
cli
hlt
repnz
xchg
dec
neg
add
lds
adc
in
sbb
cli
pop
cmc
out
or
in
retf
mov
mov
iret
fisub
pusha
cmp
adc
cmp
js
mov
add
push
pand
add
arpl
inc
pop
sub
clc
mov
test
push
sbb
ja
push
pop
cmps
je
jbe
mov
clc
push
lods
fild
fsub
dec
dec
ds
xor
outs
retf
jmp
bound
xor
scas
dec
pop
sbb
loope
adc
jno
cmps
pop
and
fcom
lods
or
push
xchg
lods
rcr
aad
push
jno
das
dec
mov
ret
ror
nop
add
xchg
pop
inc
sub
pop
ret
fsub
dec
mov
cs
rcr
test
xchg
fwait
repz
mov
dec
pop
push
sbb
test
imul
jo
lock
cmp
cli
sahf
std
setge
ret
cmp
popf
xchg
cdq
repz
xchg
dec
mov
mov
out
cli
and
adc
mov
cdq
push
ret
cwde
cwde
lds
pop
div
jns
sub
mov
aas
sbb
test
fwait
pop
sbb
sbb
cmp
popf
in
scas
xlat
repnz
mov
psrld
xchg
inc
cmp
invd
add
out
daa
and
cmp
dec
dec
jl
mov
outs
xchg
cmps
inc
pop
pop
leave
mov
mov
adc
test
hlt
ror
xchg
push
fisttp
xor
outs
xchg
mov
mov
xchg
lock
dec
mov
leave
inc
sahf
stc
in
xchg
je
mov
lea
stos
scas
les
jle
fmul
or
mov
jmp
jne
xchg
pusha
dec
mov
push
ins
mov
jo
rol
cmp
sbb
(bad)
jae
sub
fnstsw
add
add
arpl
jae
addr16
aaa
sbb
pop
xchg
shl
jecxz
fist
mov
jg
(bad)
xor
fdivr
push
add
fsubr
scas
arpl
jmp
ss
or
and
push
cmc
sar
mov
jns
and
mov
popf
mov
push
inc
addr16
inc
ret
push
dec
test
out
push
xchg
nop
scas
jmp
sbb
mov
lods
sub
cmp
addr16
addr16
mov
dec
xor
mov
xor
mov
sbb
pop
outs
pop
fistp
xchg
or
jg
stos
lods
jbe
dec
bnd
sti
xor
icebp
repnz
dec
jle
inc
(bad)
mov
adc
jge
push
or
push
xchg
mov
cmp
call
int
pushf
pop
dec
test
inc
bound
xchg
inc
stc
mov
imul
movs
or
cmp
sbb
cmps
xchg
dec
jne
lods
int
xlat
gs
jae
pop
push
(bad)
adc
mov
out
(bad)
(bad)
mov
popa
movs
push
pop
inc
js
sbb
rol
test
push
pop
mov
cmp
xchg
add
cmc
push
xor
xor
cdq
or
mov
add
(bad)
dec
retf
pop
fild
lds
add
scas
out
test
xchg
lea
leave
push
dec
outs
in
movs
and
icebp
aam
(bad)
(bad)
xchg
add
and
aaa
fwait
xor
sahf
lods
ficomp
in
fld
mov
push
inc
sbb
sbb
add
test
jmp
repnz
sar
sbb
ret
pushf
mov
je
nop
(bad)
std
xor
pop
xchg
mov
pushf
ins
push
ins
push
xchg
cdq
cdq
arpl
cmps
test
push
mov
push
mov
push
loopne
enter
push
sub
cmp
inc
addr16
lea
pusha
loopne
add
cmp
dec
mov
pop
das
adc
call
adc
(bad)
int
or
test
or
mov
xchg
loop
das
or
pop
imul
aaa
fld
out
pop
out
iret
int
inc
or
dec
inc
(bad)
lea
loopne
gs
pop
aaa
cmc
dec
imul
jl
mov
xor
loope
rdmsr
jns
dec
rcr
(bad)
xchg
arpl
call
(bad)
lock
pop
inc
fnstsw
xchg
or
test
add
pop
ds
fidivr
push
mov
add
sub
in
sub
iret
loope
lods
cmp
es
sub
call
push
or
jmp
mov
in
cmp
jmp
add
outs
mov
and
cld
jo
nop
add
clc
in
jae
(bad)
sar
imul
sbb
mov
leave
call
xchg
sbb
xor
fistp
cmp
mov
and
call
in
in
push
or
jbe
mov
rep
mov
or
xchg
sub
inc
mov
mov
dec
fmul
add
(bad)
mov
cmp
fidiv
test
rcl
cmps
in
jmp
xor
lock
pusha
(bad)
mov
out
movs
adc
pop
bound
inc
sub
leave
into
push
or
je
pop
add
push
mov
mov
xor
add
dec
cmp
ins
jmp
daa
shl
push
pop
push
shrd
push
push
ret
xor
cmp
jno
pop
nop
int3
addr16
mul
or
pop
xchg
jmp
mov
retf
jno
mov
bound
test
pop
adc
mov
xor
mov
add
fcom
popf
push
into
jno
add
mov
lods
cmp
add
jno
outs
fisub
fs
in
mov
dec
int
les
sub
xchg
or
(bad)
push
scas
jb
dec
cdq
test
jg
call
inc
xchg
jb
pop
movs
add
test
mov
inc
(bad)
in
out
imul
(bad)
pop
dec
mov
es
mov
pop
xchg
paddq
test
cmp
cmps
inc
rcl
mov
push
fbstp
mov
fsubr
jo
std
mov
lock
outs
dec
outs
jo
iret
retf
inc
xor
jno
mov
mov
cli
or
pop
shr
hlt
and
in
das
jne
mov
xchg
push
inc
cmp
add
or
mov
lock
inc
leave
es
cmc
(bad)
push
cmc
loopne
push
mov
test
and
clc
or
cmp
icebp
mov
test
adc
sbb
in
xchg
mov
ror
call
pop
mov
jmp
xchg
fldenv
pop
mov
arpl
std
clc
xchg
test
inc
adc
add
jae
xor
fimul
dec
hlt
jb
dec
mov
jg
push
aad
je
or
in
stos
sub
(bad)
clc
cmp
jl
pop
std
inc
les
jno
cmc
movs
ss
xor
in
mov
xor
lods
inc
push
stc
mov
and
jb
pop
shl
icebp
ds
adc
test
or
xor
stc
test
dec
mov
mov
mov
aam
pusha
push
mov
cs
fbstp
jecxz
cli
cwde
dec
cmp
imul
hlt
and
cld
jle
das
pop
sbb
mov
into
or
cs
imul
or
or
inc
inc
mov
pop
(bad)
xor
retf
out
sbb
cli
repz
loopne
xchg
leave
sub
push
loope
xchg
add
popa
test
das
pop
fild
fsub
sbb
out
(bad)
mov
mov
out
or
xor
out
cmps
sub
dec
(bad)
in
push
shl
(bad)
lahf
ja
inc
fst
ja
test
jae
xchg
pop
push
pop
mov
pop
dec
mov
and
adc
(bad)
out
jno
inc
bound
sahf
call
cmp
mov
mov
std
int
pop
retf
lock
pop
out
pop
adc
ret
add
mov
je
mov
add
fnstenv
and
and
xor
loop
repnz
sbb
mov
dec
or
mov
mov
mov
jecxz
fadd
out
(bad)
xchg
jno
pop
jp
adc
mov
lods
sub
push
xor
pusha
adc
adc
mov
pop
xor
mov
aad
shl
pop
xchg
(bad)
addr16
sbb
nop
jb
and
dec
rcl
inc
lock
or
sub
fisttp
jl
xor
(bad)
dec
ficomp
and
rcr
inc
sti
arpl
iret
cmps
and
inc
or
jnp
or
mov
sahf
sbb
mov
lods
sbb
(bad)
stos
shl
jecxz
mov
cwde
inc
pop
fcmovb
loop
fwait
cli
fldcw
ins
pop
mov
add
and
cmps
and
movs
push
hlt
xor
std
(bad)
int3
add
push
lods
jle
cwde
jmp
jg
jno
(bad)
fs
adc
imul
and
pop
lods
test
inc
stos
jbe
scas
sub
push
mov
pop
jecxz
xor
retf
fdivr
or
mov
jl
and
or
lds
dec
fs
enter
addr16
into
cmp
pusha
test
cdq
xchg
stos
adc
sub
sbb
loop
fdiv
and
(bad)
out
xor
(bad)
retf
aas
in
shr
jmp
fild
cmp
loop
xchg
xchg
push
dec
sbb
lea
cdq
mov
xchg
jge
push
jno
mov
test
sub
and
into
arpl
pop
lds
rcl
jmp
iret
scas
dec
test
mov
cmc
xchg
stos
xchg
cmp
push
movs
mov
lods
sahf
dec
scas
lods
emms
xchg
in
js
fld
push
nop
dec
(bad)
mov
cmp
cmps
(bad)
sbb
xor
cmp
loop
rcl
ret
pop
cmps
pop
inc
int3
scas
cdq
in
test
loope
jl
jns
lds
mov
(bad)
dec
or
dec
dec
mov
cmp
mov
or
addr16
jecxz
or
(bad)
mov
dec
or
mov
and
hlt
add
xchg
sar
lock
mov
push
scas
mov
and
push
cdq
js
mov
sub
fsub
jae
mov
clc
cmp
(bad)
jecxz
pop
popa
mov
daa
sbb
les
and
sub
pop
inc
adc
sbb
call
mov
mov
xchg
in
push
mov
xchg
jge
int3
adc
inc
ret
(bad)
xor
int
shl
cmps
aaa
adc
mov
cs
(bad)
lock
inc
push
fyl2xp1
sub
cmp
push
mov
cmp
or
mov
cli
into
xor
shr
mov
mov
in
call
inc
sub
js
or
mov
ret
sahf
jnp
jg
mov
mov
in
push
lods
xchg
inc
jp
add
hlt
or
sahf
fwait
inc
pop
int3
or
ret
xor
int3
adc
xchg
(bad)
adc
inc
fnsave
push
(bad)
fnstcw
shl
call
mov
sbb
mov
cmp
dec
sub
mov
xlat
mov
(bad)
or
test
mov
rol
add
lea
in
xchg
pop
add
adc
push
mov
pop
dec
popa
inc
xor
ins
mov
add
and
rol
test
call
mov
sub
fadd
push
mov
test
jbe
daa
fnstenv
int
sub
inc
pop
dec
xchg
add
mov
xchg
lock
or
inc
aam
lea
mov
loope
movs
and
test
mov
cmps
pop
cmps
cmp
ins
xchg
sbb
inc
iret
jp
adc
cli
or
push
inc
lea
push
xchg
and
pushf
in
cmps
push
clc
lahf
in
sub
scas
pop
inc
mov
mov
sbb
call
cs
popf
rcr
push
jb
jno
es
fs
or
outs
icebp
popf
pop
shl
mov
sti
popf
xor
in
fld
lods
push
in
jb
popf
push
mov
sub
jg
push
mov
(bad)
jbe
call
mov
cwde
stos
cmps
shl
xchg
dec
(bad)
pop
xchg
ja
pusha
or
adc
(bad)
hlt
pop
ds
sub
add
jae
in
xor
lods
imul
(bad)
or
out
push
or
popa
rol
mov
mov
nop
mov
in
lock
mov
mov
mul
adc
in
fistp
shl
test
sub
movs
inc
ss
popa
jp
retf
or
xor
sub
shl
mov
jns
(bad)
adc
push
or
jge
sub
iret
cli
dec
bound
pop
cmps
dec
retf
sub
test
iret
nop
cmp
pop
inc
push
mov
adc
shl
mov
mov
sbb
sti
neg
(bad)
cld
enter
loop
and
mov
fdivp
adc
sub
or
outs
sbb
add
add
les
sbb
std
cmp
pop
cmc
push
movs
sbb
loop
and
ret
and
les
je
and
lods
xor
jbe
sbb
xchg
xchg
cmp
sub
pushf
(bad)
movs
cmp
nop
adc
add
jl
int
or
push
or
xchg
pop
gs
push
enter
add
adc
out
sbb
mov
jl
loop
push
cmp
mov
cmps
and
loopne
inc
dec
or
sbb
and
push
mov
jecxz
adc
cs
push
bound
mov
adc
inc
fs
sub
pop
mov
movs
and
xchg
xlat
je
push
or
in
xchg
dec
loop
xor
xor
cmp
mov
popf
shl
arpl
div
mov
and
fidiv
inc
mov
sbb
xchg
arpl
xchg
data16
cmp
cmp
push
pop
aad
inc
outs
div
sbb
pushf
inc
int
mov
icebp
mov
mov
(bad)
and
sbb
gs
nop
ins
(bad)
pop
out
cmp
ins
push
call
cmp
mov
(bad)
adc
fisub
out
push
in
adc
movups
stc
idiv
jmp
dec
(bad)
and
rcr
mov
fisub
cmps
scas
test
out
sub
rcr
pop
xor
xchg
ret
test
(bad)
fisubr
std
cmc
add
pop
push
add
push
test
jns
or
mov
sbb
imul
mov
cmp
mov
pop
dec
lds
(bad)
scas
leave
mov
dec
mov
sbb
cmp
sahf
in
cmp
cmp
xor
fdiv
iret
jmp
std
add
aas
dec
add
ss
sar
sbb
mov
add
adc
sbb
ja
sub
test
dec
in
mov
stos
test
dec
test
jge
dec
fwait
sub
sub
jno
repnz
jne
inc
pushf
ficom
sti
jne
je
cwde
call
and
pop
bound
xchg
stos
in
stos
mov
mov
mov
inc
adc
mov
fimul
mov
jle
mov
dec
gs
pushf
std
scas
lds
fs
jo
je
mov
xchg
scas
mov
add
adc
add
repnz
push
stos
cli
pop
and
aas
adc
dec
sar
(bad)
dec
aad
jge
(bad)
sbb
push
mov
jl
jno
loopne
aad
jmp
push
ds
xchg
test
in
sub
pop
out
test
int3
mov
cmp
ss
call
fisubr
and
dec
add
dec
lahf
gs
cmc
addr16
cmp
jns
jmp
fidivr
arpl
movs
sub
push
cs
sub
and
fiadd
rol
push
js
jbe
xor
std
mov
mov
jmp
into
mov
out
ret
pushf
cmc
inc
xor
fdivrp
add
jp
add
retf
mov
popf
hlt
enter
aam
popa
in
fnstcw
dec
sbb
sub
jg
or
xchg
jmp
mov
sub
sub
repz
cmp
pop
xchg
int3
xor
ret
fmul
push
pop
dec
push
out
mov
adc
lods
(bad)
cli
xchg
mov
shr
mov
pop
cs
mov
out
test
adc
mov
repnz
shr
or
daa
sub
xchg
cmc
push
fidivr
and
mov
cwde
cwde
imul
dec
inc
cmp
inc
xchg
cdq
dec
mov
movs
push
xor
pop
hlt
sub
add
and
xchg
pop
sbb
cmp
fld
add
test
dec
mov
push
mov
add
loope
inc
xor
pop
jb
push
xor
scas
fwait
clc
pop
outs
mov
fwait
jns
pop
ds
iret
(bad)
in
icebp
fyl2x
mov
cli
jne
movs
add
sahf
sahf
retf
ror
pop
cdq
addr16
out
jbe
mov
cs
nop
(bad)
test
pop
mov
mov
cmp
lods
sbb
aam
inc
aaa
xchg
lods
in
into
test
xchg
arpl
out
and
or
test
jl
jo
and
(bad)
fwait
mov
aad
leave
rol
sbb
inc
sub
and
pop
adc
je
mov
sbb
fld
aad
and
xlat
and
xor
stos
outs
fnstcw
push
xchg
adc
enter
xchg
ficom
retf
scas
jmp
arpl
inc
dec
fwait
xchg
mov
push
repnz
int3
into
jecxz
pop
mov
pushf
pop
pop
leave
mov
pop
jnp
packssdw
jmp
outs
mov
xlat
stos
out
push
pop
sbb
push
xor
call
lahf
scas
mov
fldenv
les
inc
aam
jle
mov
or
stos
inc
(bad)
lea
fwait
dec
inc
xor
sub
nop
inc
xchg
inc
cmp
test
dec
hlt
cmp
dec
aad
call
jnp
mov
cs
repnz
shr
cdq
dec
aaa
(bad)
int
mov
ds
cmp
in
aaa
aaa
fnstenv
rcr
fld
sbb
xchg
stos
in
out
mov
xor
repz
mov
cmp
add
iret
ret
xlat
lahf
pop
cmc
int3
sbb
jmp
xchg
stc
aaa
jg
or
ret
adc
aam
jmp
xor
xchg
js
dec
ja
adc
pusha
dec
lds
(bad)
cwde
sti
add
inc
mov
mov
mov
out
push
sbb
std
iret
and
jo
std
int
ficom
mov
add
test
dec
sbb
inc
nop
sub
call
inc
popa
in
(bad)
fdiv
rcl
xor
adc
loopne
out
stos
imul
sub
add
dec
rcl
dec
xor
jge
jae
aad
jg
fwait
lahf
test
xchg
sahf
add
push
sbb
nop
loop
scas
xchg
add
and
lods
mov
and
pushf
sub
out
retf
icebp
ror
cmp
jg
add
mov
mov
lahf
add
cmp
xchg
inc
sar
add
jle
aad
sub
mov
xor
pop
imul
inc
sti
lods
mov
aad
mov
mul
xor
jle
cmp
fs
(bad)
jmp
mov
or
test
cmp
cld
scas
fmul
(bad)
mov
mov
cli
int3
fwait
lea
jnp
lods
add
mov
call
data16
fs
mov
ds
nop
jmp
xor
inc
pusha
imul
mov
rcr
cmc
popf
je
push
xor
imul
cmc
push
cmps
retf
inc
sti
mov
arpl
add
bswap
inc
xor
inc
or
push
pop
enter
cmc
mov
retf
aaa
dec
aad
enter
jle
jno
in
mov
cwde
(bad)
mul
daa
js
shl
test
and
pop
mov
out
loope
aad
cs
sbb
bound
adc
adc
bound
cmp
fs
outs
ins
and
mov
sar
mov
push
ret
cdq
cmps
call
loope
push
and
jge
cmps
sahf
and
loope
mov
mov
mov
in
xchg
adc
pop
sbb
js
push
fsubp
push
push
push
xor
jle
xor
push
loope
or
mov
or
hlt
mov
movs
addr16
lea
jl
cmps
jmp
mov
shl
push
out
and
mov
aad
dec
pop
dec
pushf
mov
mov
xchg
adc
xchg
int
jno
outs
test
in
sub
jno
aad
ins
inc
rol
sbb
pop
out
test
pop
aad
xchg
lock
mov
xor
and
pop
movs
call
aaa
popf
add
mov
xor
cmps
fild
add
rcl
mov
lahf
or
sub
jge
push
nop
(bad)
mov
mov
dec
rcl
neg
xchg
xchg
outs
or
mov
adc
es
xor
in
sbb
clc
cmp
fdivp
imul
in
pop
ins
int3
lea
mov
xchg
movs
adc
pop
xchg
retf
bndstx
sub
int3
pop
out
or
or
fwait
lds
xor
push
std
push
or
adc
pop
popa
cmp
test
push
adc
cmp
out
inc
mov
popf
pop
retf
imul
scas
icebp
test
and
das
jo
out
stos
inc
cli
mov
or
jmp
aad
loope
sub
aas
pop
outs
mov
mov
mov
pusha
rcl
cmps
into
mov
push
pop
mov
ds
jo
lock
dec
mov
cmp
mov
sub
movs
ret
push
jmp
(bad)
adc
add
xchg
pop
test
popf
scas
std
sbb
add
data16
jmp
cmp
or
cmp
mov
cli
cmp
push
jno
xor
in
(bad)
cld
mov
icebp
pop
sub
stc
adc
mov
aaa
mov
addr16
ins
mov
mov
mov
aam
lods
jb
iret
ins
fld
aam
xor
jmp
call
jle
add
sub
cld
gs
jae
dec
clc
cmps
fdiv
cdq
add
jp
jg
jg
pop
and
mov
cmp
add
push
scas
rcl
test
dec
fisttp
jge
(bad)
dec
add
inc
xor
sti
repz
mov
stc
and
(bad)
mov
in
push
jle
jo
add
jo
int
repz
scas
pop
push
jae
jae
and
pop
sub
outs
daa
cdq
pop
cmp
dec
test
pop
xchg
adc
(bad)
mov
push
add
out
push
inc
mov
xor
pop
push
push
int
jne
jle
sbb
fstp
imul
icebp
pusha
mov
push
out
in
clc
and
iret
mov
xchg
and
fstp
fidiv
jne
xor
rcr
mov
xchg
push
in
in
sbb
pop
xor
push
in
add
imul
add
mov
pop
in
andnps
jnp
sub
sbb
dec
lea
sub
es
jne
add
push
xchg
jmp
mul
jae
mov
push
cmc
sar
popa
xor
fiadd
jmp
(bad)
jg
repz
cmp
sahf
ja
jg
xchg
xchg
je
repnz
ret
mov
add
leave
outs
fisttp
(bad)
pop
mov
movs
data16
test
jle
ret
or
sub
add
fstp
mov
dec
mov
(bad)
leave
stc
push
push
mov
or
inc
cwde
push
cwde
xchg
mov
dec
inc
ins
jmp
pop
pusha
icebp
dec
inc
scas
push
mov
retf
mov
xor
outs
sbb
jle
iret
rcr
add
sub
pop
dec
adc
fcomp
cmp
xchg
test
in
std
(bad)
ficomp
les
adc
pop
add
jmp
mov
adc
lea
not
cmp
call
xchg
cmp
inc
sbb
mov
ds
fwait
jmp
sbb
mov
mov
xor
dec
addr16
dec
adc
push
loope
stc
fadd
jae
(bad)
or
dec
fbstp
push
jb
(bad)
lods
mov
mov
out
add
out
inc
movs
adc
test
push
pop
daa
test
imul
sbb
or
mov
aas
in
jl
xchg
push
repz
jge
ds
sbb
dec
inc
push
push
jl
sub
adc
pop
mov
rcr
push
out
mov
mov
imul
lahf
lds
mov
cmc
lahf
jg
add
pop
(bad)
daa
in
retf
mov
int
pop
mov
into
shl
jp
xchg
test
adc
mov
xchg
inc
ins
and
leave
sub
in
scas
les
fs
(bad)
retf
and
loope
in
xor
rol
dec
xchg
fdivr
push
mov
in
and
in
das
fmul
add
cmp
xlat
push
cmp
shl
aas
mov
inc
scas
inc
inc
and
pop
sti
pop
int3
jno
or
lods
retf
push
test
inc
leave
adc
in
ror
ja
sahf
mov
ins
dec
xchg
loope
popf
fs
mov
jmp
adc
sbb
rcl
in
inc
pusha
cmp
push
jmp
rcl
push
cs
pusha
add
add
cs
mov
lahf
push
aas
pop
ss
cwde
das
test
jge
idiv
pop
iret
xchg
mov
je
jns
aad
cmps
outs
jnp
fisub
push
fldcw
(bad)
mov
inc
inc
and
or
inc
inc
dec
fild
lahf
or
push
into
push
jle
pop
mov
sbb
call
sahf
addr16
dec
(bad)
in
enter
enter
jmp
jmp
mov
inc
sub
mov
inc
mov
out
cmp
or
fs
(bad)
shr
cmps
sar
inc
mov
push
adc
xor
ror
and
push
dec
aas
adc
jmp
test
or
fld
push
stos
jl
movs
adc
cdq
lock
mov
cmp
or
out
mov
sub
addr16
xchg
sti
cmps
inc
adc
int3
fs
and
xchg
mov
sub
push
out
pop
aas
sbb
leave
adc
stos
mov
push
repnz
pop
loope
push
into
loope
adc
add
mov
cmp
add
psubb
movlhps
enter
sbb
xor
shl
stc
or
adc
out
ret
cmps
dec
xor
es
lods
lea
jl
repnz
pop
fistp
sub
popa
movs
adc
inc
dec
loopne
fwait
dec
mov
repnz
cld
rol
pop
cmp
and
add
pop
adc
dec
stc
aad
sub
xchg
shl
mov
sub
cmps
mov
pop
and
outs
mov
sbb
cwde
dec
imul
jmp
push
mov
dec
jmp
mov
ins
jnp
add
mov
sbb
cmps
xor
pop
mov
pop
aas
jmp
cmp
stos
jae
pop
out
fxam
mov
ja
in
mov
neg
xchg
add
cmp
cmp
(bad)
out
in
hlt
(bad)
jp
mov
and
(bad)
jg
aaa
gs
push
ror
and
popa
dec
int
not
adc
cmp
sti
add
mov
aas
iret
xchg
push
hlt
pop
add
arpl
xor
(bad)
stc
pop
in
pop
cmps
ret
jno
das
push
sbb
cmps
imul
imul
jb
sbb
add
nop
retf
out
sbb
adc
pop
mov
jnp
test
mov
sub
fs
or
sub
aam
add
push
push
xchg
or
(bad)
in
cmp
ret
xchg
xchg
shl
or
ins
add
arpl
push
adc
pop
iret
cmp
fnstsw
(bad)
add
sbb
movs
jne
cmps
je
inc
sub
sub
xchg
mov
mov
pushf
xlat
mov
jns
dec
rcl
xchg
call
in
sbb
mov
push
pop
jne
xlat
cmp
test
inc
and
out
popa
iret
xchg
div
popa
arpl
adc
cli
fld
jmp
jle
lds
jo
stc
cmp
mov
rcr
push
sub
jb
mov
loopne
sbb
add
mov
pop
adc
popf
sub
mov
cmovbe
sbb
push
xchg
(bad)
pop
inc
lahf
inc
mov
ja
mov
or
outs
shl
adc
add
adc
sbb
inc
inc
mov
mov
(bad)
ins
fisub
std
fld
inc
aad
int3
pop
adc
test
xor
mov
adc
jnp
jle
(bad)
bound
mov
sub
jno
fbld
in
pop
dec
mov
pusha
mov
xor
ja
daa
inc
call
fsub
repnz
or
sub
sub
mov
adc
mov
dec
sub
mov
jo
push
sub
and
add
pop
inc
xchg
sahf
or
sub
mov
js
jmp
adc
cs
mov
or
rol
adc
xor
leave
rcr
xor
dec
leave
jbe
pop
out
adc
mov
pop
ja
loope
outs
aas
shr
pop
bound
or
mov
lea
std
and
mov
icebp
shl
xchg
movs
retf
and
in
inc
loop
lahf
jb
inc
inc
push
cmps
pop
and
sub
lea
ror
mov
mov
sbb
xchg
retf
mov
mov
out
sahf
xchg
pop
mov
clc
fidivr
and
test
shl
fsub
sub
icebp
cmp
lahf
adc
retf
int
leave
loope
nop
jo
jmp
popf
mov
and
mov
popa
cmp
gs
mov
push
outs
retf
dec
xchg
jl
out
or
inc
mov
xor
rcl
pop
in
std
ja
ret
add
adc
lahf
jae
cmp
retf
jb
ja
xchg
pushf
push
loope
cli
jle
push
outs
fisub
xchg
in
lods
or
in
fisubr
jge
movs
in
xlat
dec
mov
mov
mov
ret
inc
xchg
jne
mov
push
aad
cmp
pop
push
push
rcr
sub
pop
cmc
jne
test
daa
cmp
ror
ins
ja
jmp
jp
pop
sti
mov
jo
(bad)
push
repnz
dec
fistp
mov
or
fwait
jno
mov
neg
push
in
push
mov
stc
fisubr
das
fiadd
dec
stc
data16
in
lea
push
xor
sbb
add
and
loope
test
push
movsx
cmp
xchg
call
sub
jecxz
outs
mov
push
std
push
retf
xor
push
and
inc
mov
movs
arpl
hlt
dec
pusha
hlt
test
adc
or
jne
dec
into
neg
in
sti
mov
add
pop
pop
pop
popf
and
popa
lods
add
cmc
xor
call
movs
les
repz
ds
sub
call
cmp
cdq
inc
pushf
xchg
cmc
sbb
retf
out
mov
js
or
pop
mov
lds
mov
outs
jmp
sbb
mov
in
ror
push
mov
xchg
dec
lods
mov
jge
test
fs
adc
adc
ins
xor
adc
xor
adc
fcomp
add
lock
ret
mov
xchg
in
or
sbb
mov
sub
fbstp
pop
je
sbb
cmp
(bad)
mov
fld
ficom
xchg
(bad)
push
push
leave
dec
enter
dec
push
and
movs
mov
mov
aas
call
mov
cmps
aaa
jl
scas
retf
inc
and
in
pop
andnps
lock
mov
(bad)
in
mov
xor
cwde
push
movs
add
xchg
dec
movs
cmc
js
cs
loope
and
and
sbb
mov
data16
pushf
jecxz
xchg
xchg
mov
push
into
dec
pop
mov
or
push
mov
add
aas
mov
inc
cmp
xchg
inc
jae
xchg
adc
fmul
mul
pop
ret
pop
fstp
lea
inc
xor
ins
pinsrw
sub
test
cmp
retf
hlt
aas
fwait
xor
les
addr16
pop
mov
jmp
sbb
inc
icebp
(bad)
mov
stos
pop
adc
leave
(bad)
or
and
sbb
imul
(bad)
jns
inc
mov
shl
std
pop
clc
outs
pop
sub
in
jb
in
xor
sub
repz
mov
jle
add
add
imul
fnstsw
xchg
xor
aam
clc
(bad)
shl
push
daa
hlt
shr
or
ret
repnz
popf
xor
cdq
push
mov
stos
xchg
jl
pop
aam
int3
push
out
jnp
cmp
cmp
adc
fistp
mov
cwde
mov
lahf
shr
movs
cwde
shl
xchg
push
xor
adc
push
sbb
jbe
push
push
mov
mov
test
lods
adc
cmps
sar
sahf
arpl
push
scas
push
retf
cld
sbb
jo
clc
mov
cmp
xor
outs
jge
jno
lahf
push
push
cld
(bad)
sahf
cld
pop
js
sub
dec
add
ja
mov
xchg
cmp
pop
jmp
sbb
in
out
rcl
lds
mov
jmp
mov
lock
(bad)
idiv
sub
ss
fstp
xor
pusha
inc
call
cmps
push
rol
imul
gs
xor
retf
aaa
push
add
(bad)
div
icebp
retf
xor
cmp
shl
mov
fdiv
or
pushf
mov
mov
jae
out
hlt
sub
daa
les
movs
lock
fsub
cdq
and
sub
jno
sbb
gs
nop
daa
jb
inc
dec
cld
dec
fstp
adc
lods
sub
movs
jg
fnstsw
jae
cli
jo
push
push
and
mov
aad
inc
pop
movd
int
shl
and
repz
call
inc
iret
xor
and
in
mov
or
std
fiadd
dec
mov
ins
mov
sbb
dec
hlt
sar
mov
scas
ret
lods
iret
and
lock
cmp
dec
test
push
inc
push
cmp
dec
push
js
in
cs
sub
fwait
mov
mov
xchg
xchg
mov
daa
jmp
stos
in
shr
(bad)
inc
mov
test
add
add
adc
scas
clc
add
loopne
call
push
mov
lahf
push
es
xchg
jns
popa
xchg
mov
in
mov
dec
and
(bad)
mov
push
xor
rsm
enter
cmp
add
mov
leave
jmp
aam
(bad)
aam
cmp
sub
cmp
mov
or
dec
sbb
mov
cmp
mov
mov
stc
ds
push
pop
pushf
out
xor
bsf
outs
loop
push
adc
mov
push
and
adc
mov
cdq
mov
out
cmp
sar
xchg
sti
cmp
add
sar
pushf
push
mov
sti
popa
dec
mov
xchg
xchg
ficomp
sbb
pop
das
in
ja
sbb
mov
ror
(bad)
fsub
pop
push
mov
and
pusha
outs
aad
hlt
or
dec
ins
xchg
imul
lahf
add
popa
pop
sub
retf
mov
loope
xchg
test
loope
cdq
cmp
pushf
xor
sahf
out
loop
mov
mov
push
daa
dec
or
les
stos
loope
lods
xor
xor
rcl
movs
(bad)
test
ins
outs
dec
adc
aaa
sahf
mov
jecxz
call
aas
aaa
mov
add
jno
push
mov
clc
dec
push
push
mov
repnz
jl
jnp
and
and
xchg
rcl
push
or
aas
pop
mov
push
sar
fs
ret
pop
inc
jb
jo
lods
lods
or
inc
jp
xor
mov
fs
ins
mov
out
lea
mov
sbb
aad
das
mov
adc
and
cmp
retf
adc
test
mov
outs
lods
scas
les
cmp
(bad)
fwait
loop
cld
int3
ror
sub
xor
dec
cmp
xchg
mov
mov
xchg
sar
pusha
adc
or
hlt
and
jle
packuswb
fst
mov
adc
jo
sub
stos
sub
imul
pusha
sahf
loop
or
pusha
push
int
enter
jae
adc
add
dec
dec
aam
fdivr
inc
mov
in
jae
add
jns
(bad)
aad
dec
daa
mov
jns
and
xor
test
dec
lods
xchg
lock
sbb
push
test
xor
push
sahf
inc
cmps
inc
xor
dec
cmps
cmps
enter
loope
jmp
lods
test
or
inc
push
inc
loop
(bad)
loopne
and
dec
jecxz
test
gs
scas
xchg
mov
jle
int3
push
inc
sbb
and
or
adc
(bad)
xor
dec
lods
mov
sbb
push
pop
mov
adc
pop
adc
push
push
xchg
jp
fstp
ret
push
into
sbb
xchg
jl
adc
sbb
sahf
sbb
aad
push
dec
test
xor
fmul
repz
dec
scas
addr16
mov
pop
idiv
js
rcr
mov
add
add
hlt
hlt
inc
fsubr
jle
hlt
into
dec
mov
outs
test
xchg
pop
aad
stos
sub
or
push
stos
dec
fwait
add
push
add
loopne
scas
push
pop
adc
lahf
sub
clc
add
int3
jl
fadd
mov
cwde
cmp
dec
sub
jmp
inc
mov
cmp
aas
fwait
clc
jmp
hlt
sar
sar
pop
out
mov
sbb
lods
xor
jae
mov
jmp
test
mov
addr16
sbb
sbb
or
out
pop
mov
cmps
add
mov
adc
pop
fidiv
push
add
lock
scas
js
icebp
retf
push
fwait
cmp
jl
mov
push
cmp
fadd
jl
adc
fnsave
std
or
mov
std
hlt
pusha
(bad)
adc
push
(bad)
aaa
out
add
cmps
cmp
imul
adc
push
sahf
mov
in
jno
fistp
test
push
(bad)
push
cdq
adc
loop
fild
pop
stc
and
push
add
push
cmp
push
out
dec
and
push
jne
mov
or
or
neg
mov
or
ror
test
xor
jbe
cwde
test
push
add
sbb
andnps
mov
pop
inc
jb
inc
cmc
pop
bound
imul
mov
jg
sub
and
rcl
inc
js
and
add
cmc
xor
jne
mov
rcl
sub
add
push
push
jo
in
mov
pop
push
call
and
pusha
ins
out
push
(bad)
(bad)
ja
mov
dec
and
mov
push
sar
push
imul
pushf
pop
pop
mov
mov
jnp
and
pusha
pusha
popa
or
ja
push
shl
mov
movs
mov
add
(bad)
outs
sub
mov
scas
push
clc
mov
or
stos
dec
push
aaa
mov
add
clc
mov
mov
push
push
pushf
jbe
loop
ret
les
push
in
rol
jmp
and
aas
rcl
hlt
pop
dec
jle
rol
or
mov
test
and
(bad)
lahf
ror
inc
test
sti
xchg
aas
je
fnstcw
xor
icebp
sahf
push
or
mov
dec
sbb
je
lods
pop
push
mov
iret
push
enter
lahf
in
shl
adc
cmp
or
and
call
lahf
ficom
cmps
jbe
mov
pop
xchg
mov
lar
xor
mov
or
ins
mov
mov
sbb
mov
retf
ins
push
outs
out
push
jo
jnp
jmp
clc
ss
or
retf
xor
loop
mov
or
mov
in
jno
mov
jns
data16
xor
cmp
jg
dec
dec
mov
dec
out
imul
mov
pop
add
jns
adc
gs
movs
aad
outs
(bad)
out
adc
stos
popf
mov
dec
push
aaa
gs
adc
mov
sub
int3
mov
aas
dec
push
jbe
sub
inc
or
dec
(bad)
cld
(bad)
test
xchg
adc
lods
mov
popf
cld
loop
(bad)
retf
cmps
aam
test
add
and
mov
adc
imul
or
jb
imul
mov
pop
mov
in
add
xchg
push
aad
inc
push
mov
loopne
ins
call
cmps
mov
out
rcr
(bad)
xor
movs
or
mov
imul
(bad)
je
retf
inc
inc
sbb
nop
cmp
sub
rcl
lods
sbb
pop
push
daa
mov
sub
rcr
mov
pop
test
xor
dec
xor
ficomp
adc
inc
neg
xchg
xchg
adc
push
js
pop
test
jb
clc
lds
push
xchg
xor
sbb
xchg
imul
enter
push
xor
and
pop
xchg
imul
test
and
aas
(bad)
xchg
sbb
pop
shr
mov
mov
lea
rcl
jge
gs
pop
add
shr
lods
sbb
mov
or
or
rcr
mov
add
sti
or
in
cmp
pop
imul
lods
mov
mov
push
push
stc
add
jae
idiv
mov
in
out
enter
je
xlat
mov
sub
cs
xor
out
mov
lds
mov
xor
in
sub
popf
or
jmp
pop
add
xor
aad
cmp
push
clc
(bad)
push
xchg
mov
rcr
std
jg
shl
and
call
or
js
cld
je
adc
lahf
xor
xor
and
daa
(bad)
scas
cmp
sbb
cs
jbe
outs
test
gs
inc
(bad)
test
add
outs
push
xchg
adc
add
cmps
push
lds
ret
push
int3
or
xor
lock
ret
push
xchg
inc
sub
pushf
lea
popf
mov
lock
outs
push
shr
(bad)
adc
jmp
xor
repz
and
arpl
xchg
dec
push
clc
popa
mov
test
mov
popf
iret
outs
data16
rol
out
xor
adc
popf
ret
push
sub
xlat
jb
mov
inc
dec
pop
adc
mov
dec
push
push
add
fsubr
(bad)
xchg
and
addr16
jp
sbb
xor
shl
jmp
std
icebp
imul
jo
aam
sbb
cmc
mov
sbb
adc
jne
mov
sub
jg
(bad)
ins
bound
add
aas
popa
cli
in
or
mov
mov
lock
and
daa
jb
enter
iret
scas
cdq
push
rcl
fs
aam
ins
adc
push
lds
inc
add
dec
mov
mov
or
popf
xchg
dec
xor
jle
test
mov
add
arpl
push
jge
rcr
jmp
not
sar
test
fimul
bswap
mov
stos
push
es
ficomp
cmps
sti
jne
sbb
inc
adc
mov
jns
xchg
bound
out
jecxz
or
push
mov
push
sar
mov
xchg
sub
data16
and
lds
imul
gs
mov
pop
add
sbb
repz
fsubp
cmps
inc
xchg
xchg
in
(bad)
enter
jb
nop
(bad)
(bad)
add
inc
sbb
mov
dec
mov
mov
jnp
pop
and
mul
ffree
cmp
pop
jae
sahf
outs
aam
mov
stos
and
sbb
xchg
jno
popf
ret
cwde
outs
mov
jno
in
jnp
jno
clc
cld
jle
sahf
daa
jg
adc
(bad)
mov
mov
and
outs
js
sbb
mov
(bad)
test
or
imul
stos
adc
cmps
mov
pop
adc
lahf
test
xchg
movs
push
sub
pop
push
dec
div
adc
aas
scas
mov
mov
mov
and
and
mov
mov
ins
pop
(bad)
imul
xchg
dec
sar
rcr
outs
mov
sub
dec
pop
das
daa
or
lahf
aas
hlt
je
xchg
mov
push
jle
(bad)
dec
fadd
pushf
call
and
sub
shl
jmp
sub
sbb
xchg
bnd
xchg
mov
std
fdiv
mov
mov
and
pop
push
add
xchg
pop
and
mov
lahf
rcl
mov
or
jmp
aaa
add
jb
(bad)
paddd
add
mov
xchg
rcr
js
jo
into
clc
xor
mov
push
xchg
lods
fdecstp
fdiv
rcl
xor
imul
cmp
push
rcl
mov
pop
sub
faddp
hlt
loop
push
frstor
mov
fild
jnp
and
cmp
inc
loopne
cmp
push
dec
sbb
and
jge
mov
aam
or
add
push
inc
dec
add
jbe
lods
pop
xor
dec
leave
or
gs
out
enter
mov
gs
xlat
add
cdq
pusha
xlat
add
jae
jnp
iret
add
cdq
rcl
and
out
out
in
loop
and
xchg
sub
dec
jmp
loop
cmp
cmp
mov
mov
xchg
mov
(bad)
mov
add
gs
push
mov
wbinvd
lahf
adc
and
xlat
push
pop
ds
mov
mov
jle
in
xchg
sub
jnp
pop
mov
mov
jl
mov
das
fcmovnu
aad
fistp
outs
fidivr
add
sti
push
mov
pop
outs
xlat
rcr
and
and
(bad)
push
pop
xlat
mov
ret
int
inc
outs
sbb
loop
mov
sub
and
xchg
into
lods
cs
out
jge
aam
mov
xchg
nop
test
fwait
arpl
sub
fwait
dec
mov
dec
jae
pop
inc
leave
sbb
inc
mov
js
in
test
push
sub
movs
xchg
das
and
(bad)
pop
pop
mov
pop
sbb
ins
js
std
daa
push
push
sub
mov
inc
sub
jmp
push
adc
or
sbb
outs
addr16
stc
sub
arpl
lods
mov
mov
nop
in
adc
clc
xchg
and
loop
mov
xchg
call
stc
std
mov
mov
bnd
push
sbb
adc
and
fiadd
jmp
xor
out
fs
xor
lds
sbb
test
or
enter
mov
retf
dec
add
scas
call
push
into
fild
ss
cld
cmps
add
popa
inc
(bad)
and
ins
out
mov
push
inc
jp
dec
sbb
test
sub
cmp
leave
and
mov
jmp
pushf
cmps
in
js
dec
sti
xchg
jmp
dec
xchg
pushf
push
sbb
add
mov
ins
xor
add
lea
inc
retf
mov
jp
xchg
sub
hlt
(bad)
out
xchg
pop
mov
pop
les
pop
pop
(bad)
out
add
cmp
xor
setns
inc
add
mov
sub
cmp
pop
nop
push
fbld
mov
mov
sar
outs
bound
shl
in
xor
test
and
popa
jle
jbe
call
adc
push
or
mov
push
pop
mov
iret
mov
scas
push
loope
rcl
push
dec
cmp
adc
(bad)
cmc
xchg
popa
dec
xor
pop
sbb
cmp
sbb
pusha
cmp
bound
jns
dec
ins
xor
push
out
mov
mov
mov
cmp
jnp
fidiv
push
mov
(bad)
xlat
mov
sbb
cs
(bad)
nop
in
(bad)
test
dec
jecxz
outs
fst
and
and
dec
clc
in
sub
inc
mov
or
cmps
bound
or
mov
das
(bad)
cld
and
cmp
sbb
mov
daa
xchg
test
jne
mov
or
adc
test
call
std
div
aad
dec
xchg
(bad)
stos
or
sbb
add
call
sbb
dec
mov
xor
or
arpl
mov
shl
call
xor
mov
or
shl
mov
xchg
mov
ins
ret
sub
clc
mov
xchg
and
push
or
and
jle
jle
scas
cmp
pop
test
(bad)
xor
pop
sub
or
jecxz
xor
nop
sub
aas
sbb
movs
stos
mov
mov
ror
rcl
mov
fdiv
fimul
aas
pop
not
ret
loopne
dec
(bad)
sub
push
push
scas
fbstp
out
xor
cmps
aaa
and
sbb
in
dec
jae
xor
cdq
ret
jae
adc
adc
out
push
mov
in
add
xchg
popf
in
inc
and
mov
mov
cs
sub
xchg
adc
cwde
and
push
xor
cli
cmp
mov
sub
cmp
fsubr
jge
or
nop
cli
jmp
ror
jbe
mov
retf
xchg
(bad)
xor
cmps
push
lea
stc
cmp
inc
stos
into
std
mov
fs
adc
xor
push
xchg
jns
adc
dec
cld
out
data16
mov
clc
cli
test
inc
xchg
jae
mov
and
sbb
add
adc
xor
mov
and
jg
cmp
(bad)
leave
mov
pop
stos
mov
jae
loopne
jecxz
mov
adc
or
int3
test
popa
daa
cs
retf
push
xchg
xor
sub
ins
pop
fisttp
(bad)
jp
jb
movs
or
neg
fsub
nop
xchg
and
movs
fcomp
cmp
xchg
neg
push
xchg
or
aad
push
inc
xchg
fsubr
mov
mov
mov
mov
pushf
cmc
fwait
pop
stc
push
and
push
cmp
test
jecxz
repz
push
and
jae
gs
push
mov
shl
and
jno
ror
loope
jb
sti
outs
push
fs
xchg
(bad)
ins
enter
mov
and
cld
mov
mov
(bad)
iret
call
xor
jl
cmc
(bad)
push
enter
sbb
cmp
retf
dec
push
rcr
test
jb
jo
daa
inc
or
xchg
adc
cmp
sbb
mov
mov
adc
dec
outs
jb
mov
push
xchg
mov
dec
cs
fwait
(bad)
jb
dec
retf
inc
sub
push
(bad)
imul
ret
clc
sub
dec
inc
inc
call
inc
sub
mov
call
or
and
jp
cwde
sahf
fimul
pop
pop
lods
pop
inc
push
test
dec
movs
rcl
sbb
rcr
(bad)
int3
imul
adc
mov
ss
push
iret
push
aad
mov
clc
mov
push
out
in
pusha
(bad)
cmp
mov
fcomp
in
fwait
lods
cmp
xor
jl
ins
mov
sub
jo
push
sti
jp
inc
mov
imul
mov
jmp
scas
add
loop
mov
xchg
arpl
pop
dec
fwait
bsf
inc
xchg
sbb
cmp
bound
out
push
mov
sbb
ins
mov
sbb
add
(bad)
imul
rcl
xor
mov
xchg
xor
jb
push
stc
fldenv
test
push
(bad)
aad
nop
in
icebp
sbb
mov
enter
stos
inc
mov
imul
sbb
ins
mov
fwait
lods
sbb
call
sbb
or
popa
push
jle
mov
adc
retf
sub
dec
dec
inc
shl
xchg
fist
test
mov
adc
cmp
mov
movs
push
mov
jns
or
(bad)
sub
adc
xor
sub
adc
pop
cmc
add
fucomp
jmp
lea
sbb
aam
pop
inc
jl
jmp
push
sub
fisttp
in
frstor
or
lahf
xchg
lock
es
aam
arpl
inc
jg
dec
inc
mov
xor
sub
stc
xchg
js
out
cmp
pushf
jo
xchg
out
test
aaa
stos
clc
shl
test
or
pusha
mov
ss
inc
movs
adc
xor
hlt
leave
pop
mov
out
ds
cli
mov
cld
loopne
into
inc
cmp
cmp
repz
rol
push
xlat
pushf
ja
call
xlat
shl
pop
fwait
sbb
or
lods
push
sub
mov
pop
aas
add
xor
jmp
adc
cmp
xchg
add
out
das
fcmovb
daa
cld
imul
in
xor
out
push
sbb
(bad)
cld
jle
pop
pshufw
je
icebp
add
add
ret
push
pusha
ret
mov
push
xchg
lods
movs
jle
add
dec
lods
jp
dec
clc
test
imul
ins
inc
fiadd
cmp
pop
call
(bad)
sub
cmc
xor
call
sahf
sub
call
pop
push
adc
jb
call
cld
xchg
mov
jae
dec
mov
pop
movs
jge
jle
jp
in
add
jnp
push
sahf
ret
out
jo
jmp
add
dec
(bad)
cmp
xor
mov
mov
cmps
ja
cli
aaa
xchg
sbb
sti
mov
iret
push
dec
or
sub
and
mov
adc
xchg
push
inc
push
push
in
cmps
test
pop
xchg
repz
cmp
mul
loopne
cmps
push
clc
or
icebp
shl
popf
or
rcl
jle
mov
fdivr
int3
inc
mov
xchg
dec
jae
jle
ja
inc
push
xchg
push
pop
sbb
sub
mov
sub
or
and
mov
push
or
test
data16
or
cmp
shl
test
fldenv
sub
or
inc
xchg
in
mov
mov
pop
(bad)
jnp
mov
arpl
jp
mov
ins
mov
mov
sysenter
dec
adc
sub
add
ins
mov
into
aad
(bad)
sbb
call
icebp
(bad)
cs
hlt
adc
cmp
out
ret
lock
(bad)
fnstcw
pop
add
scas
cmp
inc
es
add
mov
jp
imul
adc
mov
(bad)
dec
fistp
xor
mov
in
daa
lahf
sub
lahf
mov
lods
mov
ins
add
std
and
xor
or
jl
xchg
add
lods
jg
dec
add
in
mov
add
test
mov
je
lods
jae
inc
pusha
jecxz
pop
dec
out
nop
fnstcw
popf
jbe
test
fs
jb
in
push
loop
outs
lods
xlat
cmp
clc
mov
push
sti
pop
mov
out
movs
fs
pop
arpl
jmp
xchg
retf
retf
sub
es
or
or
in
std
jp
arpl
rcl
(bad)
push
sub
retf
dec
xchg
xchg
push
leave
xor
sub
aaa
es
mov
push
adc
stos
int3
sbb
pop
out
jne
dec
xchg
(bad)
lea
or
adc
retf
push
cmp
(bad)
xor
fdivr
or
jmp
jnp
cmp
icebp
repnz
xchg
jbe
inc
out
int3
ins
jbe
lea
sbb
daa
inc
and
and
dec
hlt
or
movs
mov
sti
inc
inc
xor
mov
out
lods
xor
mov
fwait
fwait
dec
call
jnp
repz
outs
stos
shr
adc
pop
sbb
bound
mov
pop
cmp
addr16
addr16
fcom
fwait
out
mov
stos
jne
inc
aas
inc
scas
imul
adc
cmp
les
xchg
popa
std
(bad)
jl
push
stc
arpl
push
lods
inc
cmc
push
(bad)
in
sbb
jns
fmul
xchg
sub
push
dec
pusha
mov
sbb
(bad)
outs
xchg
in
scas
addr16
mov
pop
push
iret
sub
cld
inc
lds
and
jl
outs
les
and
out
inc
imul
les
mov
mov
jae
gs
push
clc
into
retf
cmp
into
sbb
cmps
jo
or
cmp
push
jbe
es
scas
dec
sbb
push
xor
push
in
shl
push
ins
cmp
pop
mov
or
sar
xchg
or
or
adc
out
pop
rcl
mov
aam
cmps
stos
into
sbb
in
cld
push
xchg
inc
cmp
push
mov
or
mov
and
int
aaa
jge
ins
push
jo
leave
adc
call
push
inc
(bad)
enter
fcom
sub
mov
mov
dec
popf
mov
iret
fisub
sub
cli
adc
pop
cmp
xchg
and
inc
lock
inc
hlt
push
sub
jle
js
test
je
adc
in
add
popa
pop
pop
pop
jnp
sar
mov
cmp
test
jecxz
jne
xchg
adc
inc
push
add
mov
and
and
in
xlat
cmp
xchg
lods
push
ins
jecxz
retf
leave
xchg
inc
enter
das
stc
add
sub
fisubr
mov
inc
lods
out
retf
paddsb
icebp
xchg
stc
inc
push
sbb
dec
push
add
sbb
xchg
lock
popa
mov
in
inc
retf
mov
les
stos
sub
test
adc
jns
dec
mov
dec
adc
out
shl
xchg
frstor
cmp
test
cmp
push
scas
xchg
(bad)
xlat
fadd
adc
fadd
and
and
push
push
mov
mov
test
xchg
inc
dec
int
sti
mov
movs
in
not
pop
repnz
out
scas
add
or
adc
cmp
cmp
and
xchg
scas
mov
shl
add
or
(bad)
add
dec
rcl
push
addr16
lds
loopne
mov
mov
add
push
pop
rcl
push
mov
jae
mov
mov
fadd
js
sub
sbb
push
es
mov
push
lea
retf
or
cs
jp
sub
sub
mov
xchg
enter
sub
popf
sbb
push
cmps
jmp
dec
cs
adc
call
ffreep
and
cmc
jg
js
cmp
test
div
xor
aas
inc
xor
sbb
mov
dec
adc
cli
ret
cmp
dec
stc
push
arpl
lods
outs
push
jno
sbb
jbe
loop
mov
das
mov
data16
xlat
xchg
mov
xchg
ja
push
add
imul
aas
not
jmp
aas
xor
aad
sti
inc
int3
xchg
pop
jmp
cmp
xlat
imul
cmp
retf
repnz
mov
adc
and
arpl
xchg
icebp
cmp
mov
xchg
sub
jae
bound
pop
add
lock
pop
cmp
je
movs
fild
nop
fsubr
cdq
mov
test
pop
xlat
test
in
cmp
jno
add
cld
mov
call
outs
fild
into
jl
or
xchg
fidiv
add
mov
pop
into
jecxz
xor
cwde
inc
mov
lock
dec
loop
push
mov
rcr
xchg
push
(bad)
xchg
sbb
xor
sub
(bad)
xchg
push
push
cmp
lea
fild
mov
fidivr
movs
mov
mov
adc
scas
mov
jl
add
xor
imul
retf
cmps
pop
mov
dec
mov
not
mov
sub
jo
cmp
imul
jbe
pop
or
xor
in
inc
add
fwait
cs
inc
repz
ins
out
push
popf
mov
addr16
push
test
cmp
cdq
je
mov
aad
xchg
adc
fstp
mov
add
(bad)
fcomp
inc
or
jl
and
out
mov
aam
sti
jmp
mov
xchg
cmp
and
scas
(bad)
and
fldcw
xor
xor
jl
icebp
pop
and
int
sbb
std
and
imul
popf
shr
es
les
xchg
xchg
arpl
sbb
int
or
aaa
fistp
in
xor
int
cmc
iret
xor
fcom
cmc
in
inc
dec
arpl
xchg
pop
or
cmc
into
clc
push
clc
pop
and
daa
dec
les
repz
add
mov
cld
retf
inc
sub
pop
shl
test
mov
xor
pushf
outs
lods
dec
mov
stos
push
push
test
push
push
cwde
jnp
jo
add
call
and
js
fsub
and
aaa
jae
in
neg
inc
xor
push
add
add
lock
push
jae
inc
retf
fst
cmc
movs
dec
pop
(bad)
and
mov
pop
imul
popf
dec
ret
leave
mov
std
out
sbb
(bad)
mov
mov
sub
retf
xor
outs
popa
mov
jns
dec
pop
add
shr
retf
(bad)
cs
stc
jnp
jmp
xor
jmp
data16
(bad)
mov
js
jl
popf
mov
xchg
pop
cdq
int3
popf
repnz
mov
addr16
dec
push
jmp
fs
fnstsw
xchg
or
sbb
cmc
pop
jnp
sub
bound
popf
sbb
push
xchg
pcmpgtb
aaa
scas
dec
adc
outs
sbb
mov
or
into
and
out
inc
jb
xchg
sbb
ins
ins
or
or
loop
mov
aas
sub
sbb
hlt
pop
xor
inc
stos
pop
lock
jne
add
inc
repnz
ja
push
add
mov
sub
fadd
jle
out
dec
imul
push
dec
pop
cmp
sbb
sbb
cwde
ret
hlt
xor
pop
dec
std
mov
lods
push
adc
jle
not
fisub
mov
xchg
imul
xchg
sub
mov
jo
push
and
fwait
in
dec
sbb
test
mov
imul
sar
(bad)
shr
inc
popf
cmp
pusha
dec
pop
std
jb
inc
fincstp
int3
pop
push
dec
lea
xchg
or
clc
test
sub
cli
adc
lods
jae
push
jmp
add
fiadd
cli
rol
(bad)
adc
jo
pop
pop
mov
cmp
daa
fisubr
adc
neg
jmp
fnstcw
gs
sbb
shl
sub
in
or
push
fist
and
inc
retf
in
add
aas
add
ret
(bad)
mov
adc
mov
or
fwait
or
je
and
xor
pop
inc
mov
out
jle
in
pop
cmp
jnp
sahf
pop
sbb
mov
inc
lods
mov
push
pop
dec
dec
pop
cmp
adc
sub
lea
mov
mov
cmps
push
sbb
sub
jne
xor
aad
mov
frstor
btc
aas
fwait
push
mov
into
pop
addr16
adc
jno
repz
mov
scas
je
adc
sbb
cmps
dec
mov
arpl
jbe
movs
mov
out
cmp
xor
(bad)
out
push
aad
fldcw
call
mov
jno
and
and
enter
gs
arpl
test
stc
mov
inc
lods
or
xor
xor
(bad)
or
xor
mov
cmps
mov
lahf
or
aad
sub
retf
xor
xor
cmp
mov
inc
mov
jl
mov
pop
rcr
ja
clc
add
int
xor
mov
es
inc
inc
fisttp
(bad)
or
addr16
leave
clc
inc
fnstenv
aas
jmp
dec
and
(bad)
pop
(bad)
jmp
pop
repz
das
cld
cmps
mov
ins
mov
inc
sub
mov
aam
push
cwde
je
push
push
mov
adc
frstor
sahf
add
call
stos
icebp
or
adc
rcl
jg
mov
rcl
jmp
pushf
xchg
or
push
std
xchg
movs
inc
in
sub
(bad)
mov
stos
mov
jo
mov
push
das
mov
xor
cmp
rcr
ja
aas
call
fild
ret
mov
aaa
(bad)
xor
sub
outs
stos
lods
jnp
imul
test
pop
add
push
jecxz
inc
adc
cmps
outs
pop
push
scas
cmp
shl
sub
jmp
not
cmp
scas
aam
shl
(bad)
les
add
inc
jmp
cmp
and
cs
shl
jl
or
sti
inc
xor
jmp
(bad)
xchg
cdq
cmp
jmp
pop
add
pop
push
loopne
sar
icebp
movs
aam
std
xchg
ror
jmp
or
mov
mov
clc
test
sar
inc
sbb
cs
mov
dec
add
jge
ror
out
movs
sub
sahf
jb
mov
mov
cmp
push
(bad)
dec
or
(bad)
dec
retf
pop
cmps
icebp
adc
or
jbe
inc
and
(bad)
mov
in
or
push
cwde
outs
out
mov
jae
mul
test
test
test
call
add
jp
lahf
ins
and
test
inc
push
sbb
mov
das
push
fild
inc
div
iret
inc
mov
pusha
pop
call
movs
loope
inc
jmp
loope
imul
stc
loopne
add
push
jb
xchg
pop
adc
mov
jbe
retf
pop
in
push
mov
sub
cld
dec
adc
lahf
mov
lods
cli
aam
jecxz
or
mov
std
xor
sbb
div
push
lahf
xlat
cmc
cmp
push
test
movs
mov
(bad)
shl
mov
into
inc
xchg
in
push
imul
stos
mov
ret
scas
sbb
mov
push
push
sbb
sbb
sbb
retf
xchg
adc
shr
push
or
sub
cs
daa
fucomp
xor
push
cmp
xchg
loop
ret
jo
add
lods
mov
out
cmps
jae
push
out
cmps
push
pushf
sbb
cmp
add
outs
sub
mov
test
mov
and
mov
adc
pop
xchg
or
inc
add
jg
rcl
or
mov
adc
lea
fwait
out
xor
test
push
scas
push
dec
(bad)
scas
xchg
pushf
xor
call
stos
adc
xchg
sbb
adc
mov
pop
sub
js
arpl
pop
cs
rol
xchg
(bad)
outs
mov
cwde
xchg
add
retw
xor
inc
ret
cmp
cmps
loope
outs
dec
loopne
mov
xchg
mov
pop
ss
dec
fwait
jbe
popa
push
mov
cld
fdivp
rol
push
(bad)
imul
call
(bad)
(bad)
ret
movs
and
mov
dec
rol
mov
and
and
mov
cwde
inc
mov
jns
mov
rcr
dec
add
hlt
xchg
frstor
sar
(bad)
mov
add
push
aaa
leave
jnp
inc
dec
dec
js
fs
mov
(bad)
xchg
jmp
sub
adc
imul
lahf
mov
pusha
dec
or
sahf
inc
add
cdq
fmulp
mov
lock
pop
cmps
dec
gs
cs
xchg
leave
xchg
push
xor
mov
daa
inc
add
out
xchg
jns
sbb
and
das
loopne
shl
rcl
aas
orps
mov
sbb
push
sbb
repz
dec
cmp
and
pop
adc
mov
adc
mov
xor
sub
(bad)
mov
scas
push
mov
scas
adc
xchg
repz
push
pop
jmp
push
ret
sub
imul
push
ret
sbb
jne
lds
psrlq
stos
ror
mov
leave
jl
test
(bad)
pop
inc
fwait
jl
mov
mov
ret
mov
pop
cmp
mov
loope
pop
adc
(bad)
popa
mov
mov
lds
mov
in
push
sub
xchg
dec
mov
jmp
push
sub
ins
mov
xor
sbb
push
daa
(bad)
mov
data16
popa
mov
imul
cs
cwde
repnz
or
push
xor
xchg
pop
and
adc
sbb
(bad)
stc
xchg
aam
sub
add
ins
or
push
mov
adc
add
mov
out
mov
es
push
rcl
pop
push
aaa
sub
(bad)
test
fs
in
pop
push
xchg
adc
adc
xchg
ja
(bad)
daa
call
dec
outs
stos
mov
iret
lds
(bad)
xchg
pop
inc
(bad)
out
into
int
mov
mov
sbb
mov
push
leave
mov
jmp
cmc
(bad)
aaa
outs
push
inc
pushf
int3
xor
js
lods
ins
xor
lods
adc
(bad)
int
sbb
push
into
(bad)
lock
cmp
pop
xchg
movs
jmp
cmps
scas
or
cmp
adc
xor
addr16
jmp
das
daa
mov
sub
and
mov
out
add
sub
int
fcmovbe
pushf
mov
popa
pop
mov
cmps
in
daa
dec
call
mov
mov
pop
rcl
or
aam
mov
out
stos
jo
stc
push
in
and
(bad)
cld
push
sub
push
(bad)
adc
mov
outs
push
mov
sbb
(bad)
and
scas
sti
retf
mov
loope
cmp
sbb
push
(bad)
pop
and
dec
ret
sbb
fmul
push
iret
imul
sub
and
es
repnz
mov
sbb
sbb
jge
mul
js
dec
mov
leave
and
es
xchg
daa
mov
test
jbe
das
pop
xchg
imul
xor
sbb
or
es
cwde
mov
and
ja
jg
pop
cmps
dec
popa
out
mov
dec
in
mov
xchg
lahf
(bad)
aad
iret
mov
adc
outs
sub
int3
or
xor
push
adc
xchg
sub
mov
sub
or
cs
movs
shl
adc
adc
cmp
leave
(bad)
sub
fwait
arpl
sub
sub
jmp
fsubr
pop
adc
loopne
sbb
jmp
adc
scas
loop
call
push
int
dec
ins
ret
cmp
aad
or
mov
gs
outs
add
mov
inc
loope
inc
inc
imul
das
gs
cmp
(bad)
cli
mov
inc
sti
mov
fwait
out
dec
cmp
leave
ror
leave
mov
out
push
gs
and
dec
dec
mov
shr
loopne
add
mov
(bad)
stos
mov
push
dec
fwait
jmp
jne
rcr
cs
aam
inc
shl
xor
les
sbb
into
hlt
(bad)
dec
imul
shr
lahf
pop
dec
xchg
add
mov
push
mov
jns
dec
sbb
pusha
sbb
inc
cmps
mov
popa
push
sbb
jb
stc
in
adc
aaa
stc
call
adc
das
(bad)
stc
xor
sbb
push
mov
enter
mov
ins
movs
loop
retf
dec
(bad)
cmp
adc
and
dec
dec
sbb
dec
nop
or
lods
(bad)
adc
xlat
adc
push
cld
imul
mov
arpl
test
push
cmc
fst
xchg
cmp
mov
fld
sahf
fwait
push
cdq
sbb
push
popa
ds
pusha
enter
out
aam
mov
mov
cmps
test
out
add
mov
xlat
stos
or
pushf
fsub
xchg
inc
shl
adc
cmp
jbe
aas
or
fnstsw
mov
jno
out
fldenv
addr16
sbb
pop
retf
xor
and
dec
retf
adc
add
imul
std
inc
popa
pop
adc
fsubp
push
push
aas
adc
leave
jns
test
sbb
mov
icebp
fisub
inc
jmp
imul
sub
push
in
xor
mov
retf
addr16
sub
dec
mov
cli
retf
imul
push
test
(bad)
cli
pushf
xor
add
sbb
in
pop
or
sub
mov
outs
sbb
or
mov
into
stc
loopne
and
mov
sbb
fsub
pusha
loopne
inc
outs
(bad)
jmp
mov
cmp
gs
inc
arpl
inc
push
push
jno
mov
jp
popf
in
push
imul
xor
xor
sbb
(bad)
xchg
or
clc
imul
xor
movs
pop
pop
mov
xor
movs
push
xchg
fwait
das
or
mov
inc
add
add
add
jo
fcom
add
cmp
mov
dec
mov
es
aam
popa
sbb
mov
adc
std
shl
mov
push
mov
inc
test
and
push
test
and
js
mov
aam
xor
lahf
sbb
add
mov
sbb
and
ja
jl
mov
pop
sti
fidivr
(bad)
in
ficom
(bad)
cmp
mov
jle
push
push
jne
jmp
xchg
jo
loopne
mov
sub
shl
mov
ficomp
dec
jb
cmp
or
das
adc
(bad)
and
mov
aas
(bad)
xchg
xchg
cmp
or
pop
dec
pop
cs
mov
sub
stc
retf
fistp
loope
mov
xor
jo
leave
sub
ins
and
jnp
jne
lds
mov
(bad)
xor
ds
(bad)
inc
pushf
jne
dec
mov
ja
loope
das
popf
pusha
mov
ja
sub
xchg
and
mov
ins
test
jecxz
sub
cmp
sbb
out
adc
inc
xchg
fsub
dec
fidivr
mov
lods
shl
in
jb
ret
retf
mov
jmp
cmp
cmps
mov
bound
or
aas
mov
mov
inc
mov
mov
jns
push
cmps
pushw
out
push
mov
adc
std
jl
push
hlt
and
out
dec
adc
push
popf
pop
adc
push
push
fistp
lock
jns
push
sub
sub
fldcw
add
out
mov
jmp
mov
jmp
dec
inc
arpl
lds
hlt
test
je
stc
inc
cdq
jl
ret
rcr
or
sbb
outs
test
adc
jbe
xchg
jp
test
hlt
xlat
mov
pushf
mov
ret
sbb
adc
adc
pop
mov
movs
lock
sbb
retf
xchg
and
jmp
dec
xchg
xchg
mov
dec
jmp
movs
add
test
xchg
jmp
out
inc
fs
xchg
das
es
sub
jmp
test
bound
fnstcw
imul
pop
loope
or
out
cmc
pop
jne
cmp
cmps
popf
(bad)
cmp
sub
cdq
mov
in
or
jne
mov
hlt
inc
int3
outs
mov
test
jecxz
jbe
dec
sbb
pop
iret
mov
addr16
jo
dec
outs
pop
stos
xor
aaa
stos
adc
cwde
stc
xor
test
cmps
inc
inc
ins
pop
push
call
add
lock
pop
cmp
mov
dec
in
jo
scas
xchg
int3
jl
cdq
sub
retf
stos
popa
bnd
jp
push
inc
mov
fs
sbb
and
cmp
fistp
aad
int
neg
sbb
clc
mov
pushf
stc
mov
or
in
out
mov
clc
push
fucomi
fld
test
inc
mov
sbb
hlt
sub
xor
mov
in
into
outs
or
fistp
popf
jl
sbb
or
inc
sbb
neg
jns
hlt
mov
test
adc
adc
dec
scas
and
retf
pusha
repz
out
or
pop
mov
sahf
imul
nop
mov
scas
mov
xor
and
inc
fmul
rol
mov
pop
repnz
adc
clc
adc
and
jmp
and
aam
leave
imul
xor
adc
adc
jns
lock
retf
aaa
sar
stos
pop
std
pop
or
mov
push
push
enter
sub
clc
pop
cs
cmc
loopne
sub
mov
inc
out
pop
dec
(bad)
lods
pop
cmp
shr
lea
gs
jb
mov
and
ret
jae
push
aam
dec
push
jmp
xchg
popf
ret
mov
mov
and
in
push
jb
push
sar
mov
call
xlat
sbb
pop
stos
mov
outs
inc
aaa
lods
dec
jnp
repz
aam
rcr
pop
dec
div
dec
(bad)
ss
test
mov
or
fs
sbb
sbb
loop
retf
sbb
push
test
call
mov
pop
xor
sbb
inc
cmp
movs
mov
fdivrp
loopne
dec
addr16
inc
scas
jbe
sti
popf
stc
test
movs
cli
sub
in
pop
jmp
sti
je
jge
adc
int3
xor
sub
enter
mov
inc
leave
in
jl
repz
sbb
push
clc
push
sti
xchg
bound
or
ins
and
shl
pop
test
adc
in
and
dec
test
icebp
adc
sub
inc
mov
cmp
fs
mov
fdivp
or
out
inc
push
sub
daa
jns
mov
xor
addr16
std
ins
das
lock
test
sbb
inc
mov
fwait
mov
mov
dec
sbb
xor
call
scas
dec
pop
rcl
loope
sar
and
sub
pop
cwde
test
fisttp
inc
mov
push
jno
add
mov
int
xchg
or
mov
inc
push
fcom
ins
push
or
and
mov
cmps
and
stc
hlt
out
jnp
les
dec
stos
inc
push
loopne
inc
or
or
mov
in
sbb
adc
sub
and
clc
clc
inc
test
loope
push
iret
lahf
imul
test
daa
iret
xchg
sbb
or
xchg
imul
fs
lea
clc
mov
cmps
xor
sub
cmp
push
or
lods
cmp
sbb
xchg
cli
add
test
gs
xor
mov
cwde
cmps
xchg
pop
cmp
inc
(bad)
mov
imul
shl
adc
jecxz
rcl
sub
pop
hlt
in
adc
mov
(bad)
pop
mov
cdq
test
loop
cmc
jnp
add
ror
jmp
xchg
ror
adc
retf
adc
fimul
mov
aad
shl
ds
pop
sbb
lfs
fisub
mov
xchg
add
in
hlt
jne
stos
sub
xor
test
into
test
in
push
lods
add
fdiv
sub
stc
push
shl
das
(bad)
out
jmp
add
dec
int
pop
pop
jmp
add
inc
mov
inc
push
out
fst
arpl
and
mov
jo
fnstcw
xlat
movs
iret
mov
lock
fdecstp
addr16
jae
cmc
inc
pop
popa
scas
jl
cmps
push
cdq
dec
xchg
(bad)
(bad)
fptan
movs
dec
retf
pop
gs
out
push
dec
pop
push
int3
mov
xor
mov
xchg
cmp
cmp
or
xchg
mov
push
aaa
icebp
jne
add
lea
popf
push
out
iret
in
mov
xchg
(bad)
cmc
sbb
out
dec
std
enter
push
stc
aad
push
xor
(bad)
xor
ret
div
std
out
push
cmc
pop
pop
stos
gs
or
mov
xlat
rcr
push
pop
pop
sbb
cmps
and
mov
nop
daa
and
sbb
mov
xor
shrd
sbb
shl
jne
jbe
cmp
cmp
fiadd
int
dec
inc
in
cmp
mov
cmps
popf
mov
ins
push
or
jp
mov
out
cdq
add
mov
inc
fcomp
stos
call
call
test
push
pop
pop
xchg
add
or
outs
mov
sub
sub
and
std
pop
jbe
aam
dec
call
xor
add
fcomp
push
pop
bound
mov
shl
pop
add
call
lock
or
mov
add
cdq
mov
dec
loope
sbb
loopne
dec
pop
mov
adc
cld
and
sbb
jne
adc
pop
sbb
jmp
fsub
mov
pop
xchg
push
xchg
mov
mov
ins
in
inc
push
es
xor
add
adc
add
cli
test
or
jbe
test
loopne
call
mov
cs
lds
mov
mov
inc
mov
push
out
pop
inc
add
mov
stos
mov
cs
mov
cmps
enter
adc
loop
pop
xchg
hlt
arpl
push
popf
ror
push
and
mov
out
call
cmp
sbb
pop
push
loopne
retf
das
mov
scas
pushf
add
fld
fnsave
jns
test
push
bound
xor
mov
jbe
aam
adc
and
cwde
retf
sub
mov
mov
pushf
lock
jne
jb
clc
movs
les
mov
in
pop
jns
add
inc
retf
adc
or
jg
imul
cmp
inc
push
inc
shl
mov
sbb
retf
sbb
shl
mov
out
inc
mov
sub
ins
xchg
or
lock
loop
push
(bad)
test
and
pop
fucomp
jno
cmp
out
(bad)
mov
mov
scas
xchg
and
xchg
xor
js
mov
cld
jbe
jl
dec
cwde
adc
test
jmp
xchg
imul
fdivr
nop
imul
mov
mov
cmc
dec
mov
cmp
and
mov
jne
xor
(bad)
scas
aad
loop
outs
aam
and
shl
ins
rol
inc
cwde
lods
or
call
pop
cmp
cmovs
aaa
bound
cmp
call
and
fmulp
mov
sub
cmp
cli
push
dec
jbe
neg
jl
sub
lds
rol
cmp
fwait
push
xlat
test
fcmovb
sub
fdiv
mov
out
int3
call
outs
in
ds
jae
test
out
(bad)
cli
imul
int
add
cwde
and
inc
cld
and
ret
dec
mov
mov
sub
dec
in
ins
mov
sub
popa
fwait
push
jmp
mov
aad
pop
jnp
jg
xchg
repz
test
pop
mov
sbb
pop
fld
shr
cwde
add
add
xor
sar
ja
shl
xor
inc
push
mul
fst
jmp
repz
(bad)
mov
cmps
ret
ins
xor
sti
mov
or
or
popa
jno
mov
mov
jle
cmp
(bad)
fsubr
repz
adc
inc
cmp
add
cmps
hlt
dec
fs
or
cwde
cli
call
loopne
push
sub
push
repnz
data16
or
fucomp
pop
or
scas
cdq
sub
repz
(bad)
shl
or
movs
fdiv
inc
in
ret
ficomp
adc
aad
and
bound
enter
pop
jg
enter
inc
out
fisubr
pop
mov
addr16
movs
sbb
jl
in
adc
xor
jnp
dec
push
push
fs
ss
jmp
jne
imul
outs
outs
pop
push
outs
and
lods
add
adc
scas
inc
(bad)
lods
aaa
add
jb
inc
add
inc
pop
add
and
mov
xchg
js
(bad)
add
cmp
xchg
rol
xchg
mov
mov
sub
jns
les
mov
out
adc
scas
push
jb
vpaddq
cmp
mov
out
dec
(bad)
aam
xchg
adc
test
mov
xchg
fld
punpckhdq
fcomp
inc
jl
dec
cmps
cmp
xchg
dec
pop
out
mov
std
push
fbld
(bad)
lahf
add
jmp
lahf
lahf
imul
push
adc
push
pop
cmp
jmp
pop
mov
cmps
pop
das
mov
xchg
dec
jmp
arpl
xor
mov
test
adc
popf
or
ins
inc
ret
cmps
jmp
jae
dec
sahf
stc
ja
dec
imul
enter
loopne
and
loope
ror
(bad)
add
retf
jg
sbb
stc
lea
xor
push
inc
cmps
sbb
xor
cmp
loopne
jmp
int3
aas
loopne
movd
fistp
pop
or
jno
jns
ret
imul
adc
rol
shl
loop
jne
stos
mov
ficom
dec
cli
mov
push
fiadd
or
xchg
aas
and
pop
adc
push
cmps
xor
xor
leave
je
or
xor
sbb
ret
loope
call
fsubr
push
cmc
xor
push
mov
dec
mov
(bad)
jo
mov
xor
mov
xchg
movs
in
lods
jae
add
ror
stc
aaa
or
cmps
jo
mov
je
inc
mov
mov
pop
cdq
in
ss
call
addr16
mov
cli
loop
fsub
out
jno
push
add
xchg
test
jae
movs
xchg
cmp
mov
dec
jp
scas
pop
mov
push
adc
aad
push
adc
mov
repz
arpl
add
in
out
loope
sub
jg
inc
ret
das
push
or
sar
(bad)
pop
jb
dec
cmp
imul
dec
and
call
stc
sar
push
jbe
ret
pop
cmp
dec
jo
mov
lods
xor
outs
push
ja
inc
inc
scas
pop
add
fsub
lahf
lods
out
test
sbb
clc
dec
jne
lds
xchg
ss
xor
sub
push
addr16
pop
inc
cmp
repnz
cmc
ret
inc
xor
mov
cmp
add
aas
ret
sub
adc
push
repnz
aad
ror
test
push
ret
stc
lods
inc
cmp
in
aas
xor
nop
adc
sahf
xchg
mov
mov
and
test
sar
int3
(bad)
sbb
jg
push
inc
into
rol
sbb
jecxz
or
cmp
sbb
cmp
call
or
cmc
pop
inc
mov
std
inc
xor
int
ds
mov
push
gs
jmp
nop
(bad)
cmp
mov
jae
xor
adc
stos
cmp
adc
(bad)
test
aas
and
dec
call
dec
add
sbb
fbld
inc
loopne
sub
mov
jns
adc
mov
cmp
add
xchg
sub
xlat
mov
inc
xor
mov
cmps
or
fstp
inc
mov
push
cld
fnstcw
repnz
and
sahf
pop
inc
movs
aad
inc
xor
pop
dec
js
add
jecxz
jb
aad
or
jo
frstor
mov
loop
sub
js
sbb
ja
add
pop
retf
outs
lds
(bad)
or
push
mov
xor
cmp
bound
out
popf
fdivr
inc
sbb
ss
or
les
inc
hlt
xor
xor
(bad)
xchg
fimul
stos
jb
call
and
pop
call
inc
fld
retf
mov
push
enter
popa
sahf
mov
lock
sbb
dec
sub
dec
add
test
scas
xor
stc
scas
test
xor
pop
sahf
xlat
sti
or
sbb
dec
mov
dec
jge
xor
dec
mov
imul
cld
or
push
xor
rol
lea
ss
and
lods
dec
cs
sti
sbb
mov
add
imul
(bad)
ja
std
ret
and
dec
lock
popa
ins
push
pop
rol
xchg
(bad)
mov
out
aas
push
rcl
rcl
mov
hlt
and
iret
cmc
xchg
fisubr
add
jno
xor
sub
and
cli
inc
enter
add
jbe
fdivp
gs
in
imul
sahf
mov
jae
stos
xor
cdq
push
(bad)
stos
fs
rcr
(bad)
std
and
mov
push
retf
mov
or
dec
inc
push
inc
int
xor
adc
push
enter
push
mov
js
arpl
cmp
imul
adc
test
sub
loope
add
rcl
cli
cmp
aad
jle
ds
pop
jnp
dec
pop
outs
xor
adc
push
sbb
test
leave
cmp
jg
cmc
mov
jl
in
cmc
cli
addr16
and
scas
daa
push
add
add
cmp
mov
call
out
out
cmps
push
push
jl
or
xchg
ss
sbb
out
mov
(bad)
aam
cmp
bound
and
cld
add
daa
in
inc
scas
mov
ins
ja
jb
cdq
jp
leave
push
ds
lds
ja
inc
call
pop
test
stos
push
stc
mul
mov
sbb
cmp
sub
and
out
fmul
adc
int3
xchg
ss
dec
pop
xor
pop
push
nop
push
shr
nop
pop
adc
outs
xlat
cwde
add
not
mov
xchg
add
rol
push
mov
repz
movs
xchg
jl
int3
sbb
arpl
fwait
adc
inc
repnz
movs
xor
fldpi
stos
pop
lods
ret
lds
movs
xchg
arpl
mov
and
fwait
xchg
shl
pop
sbb
xor
inc
iret
inc
cdq
push
adc
repz
mov
std
mov
in
fs
adc
adc
sub
shl
nop
push
mov
push
in
les
aam
lds
outs
or
popa
inc
inc
out
repnz
test
push
sar
ficom
dec
mov
push
or
push
ds
jbe
inc
sbb
cmc
(bad)
pushf
mov
scas
add
or
xor
je
pop
repz
call
and
sbb
jne
sub
xor
ja
jns
(bad)
out
push
fldenv
fwait
movs
dec
jl
ret
add
or
mov
adc
rcr
push
dec
dec
in
jle
dec
in
pop
and
dec
shr
aaa
cmp
sbb
outs
in
test
sub
add
mov
cli
jno
push
enter
inc
xchg
fcomp
scas
pop
fsubr
outs
push
imul
mov
aas
cmps
in
adc
xor
sbb
(bad)
int
mov
dec
lock
mov
in
or
push
mov
in
jbe
adc
fwait
out
mov
mov
cmps
xlat
mov
ret
and
(bad)
in
adc
cmps
inc
sbb
cmp
imul
add
mov
enter
mov
out
sbb
cmp
push
mov
add
xor
or
sahf
mov
pop
adc
mov
shl
xchg
dec
cmp
popa
icebp
das
push
cmps
adc
mov
call
adc
or
into
jno
jnp
push
out
mov
stos
test
aaa
jmp
sahf
adc
xchg
icebp
jns
push
bound
push
repnz
fild
in
inc
mov
(bad)
dec
mov
xor
in
shl
loope
es
mov
dec
mov
imul
add
cmps
outs
mov
pop
adc
imul
xor
vpsubusw
enter
lods
mov
dec
jmp
and
adc
popf
test
dec
(bad)
cli
dec
lahf
and
loop
sub
push
and
out
xchg
push
lods
mov
dec
ds
pop
pop
repnz
xor
sbb
adc
aas
add
lea
xchg
lods
fucom
into
(bad)
mov
lds
repnz
iret
cmp
cmp
jmp
das
test
retf
lahf
and
or
dec
icebp
(bad)
jge
sbb
mov
in
push
jne
dec
fs
inc
int
repz
cs
aam
push
mov
xor
inc
mov
sub
out
fs
push
imul
push
add
sbb
les
aas
loopne
in
out
xor
aad
push
ret
outs
push
mov
and
fistp
cmp
das
push
nop
mov
cmp
fmulp
xchg
xor
add
adc
mov
addr16
jno
leave
mov
jo
mov
adc
ret
mov
jecxz
data16
cli
add
mov
bound
xor
xchg
mov
fcmovnbe
push
shr
xchg
xchg
mov
pushf
aad
push
mov
xor
sbb
sbb
mov
(bad)
lods
ja
cli
int3
jl
lea
inc
outs
jmp
pop
sbb
mov
pop
imul
cmps
pop
pop
mov
jl
pop
sub
cs
mov
in
adc
or
shr
aad
(bad)
fdivr
scas
jmp
mov
or
pop
or
inc
dec
mov
adc
add
push
inc
arpl
inc
lods
pop
cdq
add
(bad)
jg
mov
pop
imul
int3
pushf
sub
pop
cmp
inc
xor
cmp
xchg
retf
and
nop
inc
ja
lahf
sahf
rcr
lds
inc
pusha
scas
ins
add
ds
ins
test
mov
sub
call
xchg
test
dec
mov
jno
pop
cmc
mov
rcl
jmp
xchg
xlat
dec
aam
jmp
or
dec
or
dec
(bad)
jge
sub
xor
popf
mov
lds
jae
lahf
sbb
and
in
mov
jle
jnp
lods
sub
mov
jge
stc
mov
mov
(bad)
test
test
popa
in
sub
sbb
sahf
cs
mov
cdq
inc
inc
fnsave
sar
in
xor
xchg
dec
lea
xor
out
xchg
and
cmp
fsubr
add
(bad)
iret
push
imul
or
int
pop
dec
inc
clts
pop
adc
shl
popa
mul
mov
pushf
jb
icebp
bound
jl
add
pop
push
cmps
ret
adc
xor
fstp
fs
movs
sbb
adc
ins
dec
jno
cmp
jb
not
retf
nop
addr16
repnz
xor
jmp
inc
xor
jns
jmp
mov
inc
neg
sbb
adc
(bad)
repnz
dec
mov
hlt
mov
js
xlat
push
sub
xor
jno
shl
mov
jbe
xchg
push
jbe
add
daa
ins
mov
dec
or
and
mov
ror
loopne
cmp
out
push
push
shl
ds
or
xor
adc
das
xor
rcl
data16
in
pop
cmp
and
cs
push
fs
lds
bound
pop
ins
cs
test
mov
dec
push
jno
cmps
div
int3
fbld
loop
jmp
int
pop
repz
mov
out
cmp
xchg
mul
cwde
ss
lds
aaa
nop
sar
out
xor
in
fisttp
popa
jno
cwde
inc
in
fsubr
adc
fnstcw
adc
sbb
xor
add
jb
and
inc
shl
adc
dec
xor
sbb
push
mov
retf
adc
add
xchg
xlat
cmp
movs
xor
scas
mov
(bad)
xor
outs
aad
adc
bound
out
sar
sub
xchg
movs
jl
mov
aaa
gs
call
or
mov
push
popf
ret
ret
jae
add
jne
clc
test
aam
mov
cmp
ret
fst
stos
jge
pop
outs
xor
add
adc
pushf
addr16
(bad)
jg
or
cmp
add
mov
test
pop
adc
pop
sbb
push
mul
dec
fild
xor
aaa
outs
in
aam
adc
movs
or
xchg
or
jge
loope
or
or
je
push
(bad)
je
out
sub
imul
imul
inc
jmp
adc
cmps
cmps
cs
sbb
mov
test
jbe
mov
mov
cmps
mov
mov
pop
js
leave
je
sar
js
mov
xchg
fsubrp
mov
cmp
in
outs
xchg
popa
ret
push
retf
mov
test
adc
repz
push
and
jg
jle
mov
xchg
dec
mov
movs
cmp
pop
mov
push
stc
sbb
pusha
daa
das
ss
in
cmps
sub
cld
imul
(bad)
(bad)
scas
adc
pop
dec
push
(bad)
fnstsw
mov
fstp
hlt
push
mov
mov
xchg
jne
jno
popf
in
xor
je
xlat
mov
sub
mov
jne
push
mov
aad
push
stos
(bad)
or
test
scas
jecxz
cmc
aas
inc
push
retf
out
das
cli
dec
add
je
and
ss
xchg
xchg
mov
mov
cmps
std
and
adc
mov
cmc
aas
mov
(bad)
sbb
ror
fdivr
pop
mov
dec
dec
aad
mov
xor
inc
gs
enter
pop
out
ds
and
jo
mov
sub
dec
xor
cs
sub
xlat
xor
lods
lods
dec
jmp
mov
add
loope
sbb
sbb
cmc
ret
xor
mov
sbb
ret
iret
fdivr
icebp
out
sti
sub
mov
xchg
nop
(bad)
jno
fidivr
mov
xor
mov
outs
cmp
xor
cwde
jge
jae
jae
fs
addr16
add
xor
ret
mov
push
mov
push
mov
into
dec
fcomip
les
fnstsw
rol
clc
fiadd
jp
cld
xchg
or
push
fucomi
sub
sbb
dec
mov
pop
sahf
sti
fcomp
jle
(bad)
sub
push
ror
jno
int3
pushf
xchg
mov
mov
adc
addr16
mov
pop
dec
push
ret
push
js
fsub
stos
cmc
test
add
add
xchg
inc
in
movs
scas
mov
(bad)
pop
cmps
ins
jns
xor
cli
clc
cmps
mov
shr
add
out
push
jmp
cmc
mov
mov
or
in
in
dec
mov
std
or
adc
jmp
jmp
sbb
inc
jge
mov
rol
pop
cmps
dec
aam
dec
mov
cdq
in
sbb
wrmsr
push
mov
lea
dec
scas
push
or
adc
xchg
mov
push
mov
imul
xchg
cmp
xchg
or
rcl
cmp
pop
popf
xchg
jo
cmp
fnop
sub
jg
mov
lea
push
(bad)
in
sahf
das
les
outs
or
and
xor
jmp
inc
adc
dec
jmp
inc
or
push
mov
(bad)
in
cmps
scas
add
push
movs
mul
out
in
mov
push
or
sti
jae
(bad)
mov
aaa
mov
sahf
or
add
xor
mov
push
cmp
arpl
in
push
jmp
pop
(bad)
stos
dec
in
dec
je
push
mov
sub
mov
cmp
mov
movs
(bad)
aad
fs
rcr
mov
dec
adc
and
pop
xlat
and
xchg
mov
cs
jmp
fcomp
mov
pop
pusha
dec
push
xchg
xchg
es
sub
movs
adc
fwait
sub
loope
fisttp
dec
cmps
mov
sbb
jl
sbb
push
lods
pop
push
jae
cmp
adc
xor
add
adc
mov
(bad)
xchg
or
in
(bad)
pop
pop
(bad)
jne
jg
add
enter
and
retf
adc
push
cmp
pop
jo
mov
pop
leave
inc
dec
repz
pop
push
pop
test
mov
pop
dec
rol
ret
mov
mov
xchg
mov
cmp
fistp
xor
jb
daa
sub
sbb
cmp
jle
imul
push
inc
fwait
sbb
dec
mov
(bad)
jnp
retf
fldcw
mov
dec
movs
add
loope
xchg
inc
and
cmp
adc
mov
mov
fsubr
and
lods
das
sub
xor
arpl
push
push
sbb
popf
pop
pop
mov
add
mov
adc
mov
std
xchg
loop
(bad)
lods
cmp
into
push
nop
cmps
sbb
ds
push
cmps
pop
sub
xchg
cmc
and
add
pop
adc
mov
rol
test
fcom
xchg
pop
nop
mov
bound
fs
xor
out
push
add
fdivp
dec
icebp
pop
ja
jmp
push
jae
retf
adc
or
xchg
sub
loop
daa
aam
arpl
or
les
int
inc
or
aas
mov
shl
inc
add
mov
bound
jp
inc
pop
and
xchg
pop
bound
adc
repz
fisubr
dec
mov
jecxz
sub
push
jae
(bad)
test
loop
dec
pop
clc
mov
cmp
int3
pop
scas
cmp
dec
jns
sbb
out
add
loope
movs
jno
ffree
das
repz
repz
mov
rcr
mov
push
jle
aam
inc
cwde
fild
ins
fs
cmp
hlt
call
popa
sbb
sub
adc
rcr
call
pushf
xor
ret
lock
out
enter
add
push
lahf
xlat
jmp
(bad)
sbb
sub
mov
push
mov
push
cli
pop
sbb
hlt
(bad)
ss
loopne
(bad)
setno
sub
or
and
xchg
(bad)
mov
push
gs
retf
repnz
sub
js
mov
inc
or
es
jmp
outs
and
test
inc
aaa
mov
jb
stc
pop
daa
xlat
mov
mov
xor
hlt
maxps
aas
retf
ret
repnz
mov
sub
mov
clc
loope
(bad)
leave
inc
pushf
add
xchg
inc
jl
sbb
pushf
mov
pop
cld
xor
cli
jno
or
pop
test
and
add
leave
xchg
cmp
sub
cli
fdiv
jmp
neg
sti
lods
mov
mov
push
pop
adc
cmps
dec
dec
mov
sub
push
adc
test
jno
push
movs
xor
sub
lods
(bad)
mov
and
push
push
mov
xor
loop
add
adc
bound
pop
jl
enter
cmp
or
out
retf
mov
sbb
mov
inc
push
lods
(bad)
rcl
pushf
adc
inc
sub
fist
out
in
xchg
(bad)
push
mov
aad
cmp
mov
shl
sub
test
sar
push
push
pop
xor
inc
scas
lock
aaa
mov
icebp
sbb
movs
mov
add
sub
pusha
adc
pop
dec
xor
dec
pushf
repz
xchg
pop
nop
inc
mov
cmp
out
(bad)
sbb
adc
iret
sub
arpl
pop
push
push
mov
push
cwde
data16
and
das
sbb
sti
sbb
add
sbb
les
xchg
add
xor
jg
mov
jmp
das
aaa
sbb
jo
xor
fstp
sub
sahf
fist
and
fmul
fadd
loopne
cmp
pop
and
(bad)
ror
sub
inc
ins
jge
aaa
je
dec
in
nop
out
push
mov
jo
mov
(bad)
fst
or
in
sub
ret
sbb
aad
dec
jmp
gs
mov
fwait
or
(bad)
in
out
jmp
and
xor
sar
sbb
add
ficomp
dec
mov
push
pop
mov
xor
jg
mov
rcl
nop
push
xor
mov
imul
dec
mov
lahf
adc
sbb
add
(bad)
nop
push
rcl
icebp
mov
cwde
adc
rol
inc
mov
mov
idiv
aad
jg
or
pop
rol
adc
arpl
pop
lock
je
test
rcl
nop
mov
jmp
mov
nop
imul
mov
rol
ds
call
jnp
or
ja
push
ret
mov
arpl
dec
(bad)
sub
cmc
jae
jb
jb
xor
pop
mov
(bad)
sub
rcl
dec
pop
mov
out
cmp
das
inc
and
mov
jns
jl
scas
aam
mov
xchg
adc
xor
and
and
add
mov
mov
push
jl
clc
xor
ret
ins
xlat
mov
dec
sub
pop
inc
movs
push
imul
xchg
dec
pop
daa
sbb
mov
pop
inc
bound
or
inc
cmp
(bad)
rcl
lods
scas
pop
push
(bad)
pop
cmp
into
pop
mov
int
fadd
call
leave
push
hlt
iret
xchg
stos
retf
(bad)
iret
mov
nop
xor
rcr
std
jae
int3
cmp
sbb
jbe
add
fmul
popf
jb
ins
or
into
in
loopne
(bad)
ficom
xchg
sar
add
stos
into
push
and
mov
lds
pop
daa
jl
aam
into
scas
sub
jae
inc
ror
enter
and
push
scas
and
pop
ret
sbb
cmps
xor
sub
repnz
cmp
jo
iret
and
inc
stc
popf
sub
adc
pop
lea
dec
dec
ja
cmp
inc
pushf
push
add
mov
out
mov
addr16
mov
mov
scas
gs
add
and
(bad)
jle
test
loopne
pusha
stos
mov
lods
mov
clc
out
push
fwait
mov
dec
mov
ds
in
and
stos
or
out
fucomip
mov
mov
sub
out
mov
xchg
nop
aas
and
scas
mov
mov
inc
mov
fistp
cld
inc
out
mov
(bad)
int3
and
icebp
cmp
fcomi
sbb
inc
shr
stos
stos
fstp
jge
outs
dec
inc
jbe
xor
add
add
rcr
adc
dec
pusha
or
mov
rep
retf
(bad)
cld
sub
mov
sbb
mov
jae
pop
pop
(bad)
ds
jmp
(bad)
adc
rcr
out
xchg
inc
ja
mov
inc
mov
cs
mov
mov
xor
jle
cwde
jne
enter
mov
out
mov
ss
mov
mov
js
loope
enter
pop
cwde
adc
cmp
add
xchg
out
iret
mov
sbb
iret
scas
stos
jge
sbb
sti
loopne
sahf
out
or
hlt
out
jo
into
and
inc
inc
in
pop
cmps
push
mov
sbb
xchg
xor
cmp
lds
pop
jne
xchg
ds
imul
add
aas
call
jecxz
and
adc
push
mov
daa
in
push
jbe
mov
and
adc
cmp
popf
sbb
pop
dec
in
daa
adc
mov
mov
mov
sahf
inc
cmps
pop
or
stos
adc
popf
cwde
jnp
ror
fs
mov
lea
sbb
push
loop
dec
gs
scas
popf
jns
xor
jbe
push
cmps
adc
ins
leave
test
jnp
pushf
inc
mov
push
imul
in
adc
and
out
push
mov
in
hlt
pshufw
mov
(bad)
in
into
shl
push
jns
mov
(bad)
std
inc
pop
sti
mov
or
retf
xchg
movs
sbb
repnz
leave
inc
or
popa
comiss
fwait
arpl
sbb
dec
outs
cdq
push
mov
sub
ins
call
adc
lods
sbb
mov
movs
iret
mov
sbb
pushf
repnz
xchg
cmp
retf
nop
pop
mov
sub
repz
push
ret
(bad)
pop
xchg
aas
jmp
in
gs
es
dec
dec
test
xchg
add
jg
pop
shr
inc
test
push
(bad)
loopne
mov
pop
push
and
or
mov
retf
push
shl
lods
aas
adc
sub
and
mov
push
jb
fisttp
bound
add
retf
sbb
mov
adc
fdiv
push
and
xor
add
mov
(bad)
cmp
mov
and
pop
stc
push
jae
rol
or
pop
mov
mov
loopne
je
jns
imul
jle
jecxz
pop
jmp
jmp
mov
cmp
jo
iret
jae
xchg
push
dec
sub
(bad)
out
sub
or
fsubr
ins
mov
cld
mov
mov
adc
mov
jns
push
mov
mov
pushf
retf
sbb
push
bswap
pop
jb
push
sbb
add
xor
in
cmp
shl
and
repz
cmp
mov
lods
sbb
mov
dec
mov
cld
ss
pop
xchg
add
mov
push
imul
sbb
jnp
adc
ds
jg
data16
pushf
aad
dec
scas
in
shl
sub
sbb
mov
sar
fwait
(bad)
retf
(bad)
test
xor
inc
std
cmp
pop
inc
jge
popf
les
in
mov
add
add
in
pop
push
ret
and
push
mov
xor
adc
push
hlt
pop
fmul
sbb
mov
stos
jae
test
test
push
mov
hlt
sub
std
xchg
mov
cmp
mov
add
or
push
popf
jbe
sub
xor
jle
nop
xchg
add
rcr
sub
cmps
mov
add
maskmovq
imul
fdiv
pop
sub
dec
pop
jp
xchg
mov
popf
hlt
retf
and
int3
addr16
(bad)
movs
sub
jnp
mov
jae
pusha
cmc
add
push
add
cmc
jno
test
cld
xchg
(bad)
mov
xchg
adc
(bad)
xchg
pop
into
cwde
fdiv
cld
int
dec
pushf
mov
out
je
xchg
aam
cmc
ja
cld
bound
popf
jbe
jnp
ds
test
in
icebp
rol
jecxz
mov
xor
pop
cmp
cmps
lods
pop
mov
fstp
in
push
pop
iret
jne
es
hlt
or
push
lea
jmp
je
imul
lahf
add
mov
retf
call
mov
or
repz
fistp
leave
or
jl
sti
sbb
test
mov
das
int3
pushf
lods
pusha
inc
dec
and
sbb
ins
(bad)
jge
daa
xor
mov
pop
fsubr
or
imul
ins
cmp
cmp
sti
jge
mov
adc
rol
ins
mov
mov
mov
and
cmp
xchg
jns
ss
xor
adc
cmps
push
in
mov
sub
pop
(bad)
inc
push
shl
and
or
push
pop
dec
xor
rcr
es
imul
idiv
jo
sbb
ss
or
sbb
xor
sub
das
xchg
loop
test
rcl
pop
(bad)
out
mov
add
push
xor
(bad)
cld
stos
shr
mov
xchg
mov
ss
test
int3
mov
jecxz
movups
(bad)
push
dec
push
or
js
dec
sbb
inc
xchg
push
(bad)
push
sbb
mov
repz
out
push
mov
fcomp
test
xor
jp
mov
mov
jno
ficom
imul
add
mov
mov
jb
sub
cmp
push
cld
sbb
nop
adc
dec
push
(bad)
outs
pushf
test
or
pop
sahf
jmp
(bad)
arpl
gs
jge
cli
pop
and
pop
mov
mov
pop
mov
int3
xor
dec
in
pop
sbb
test
mov
and
inc
pop
fld
stos
popa
xchg
int
inc
lds
sbb
into
cmp
aam
push
enter
imul
clc
dec
test
daa
xchg
test
retf
mov
nop
mov
std
and
mov
jp
aas
or
aam
movs
test
imul
ins
xchg
adc
dec
push
icebp
add
push
hlt
sbb
movs
jns
scas
gs
jnp
aaa
mov
jb
or
push
stc
ja
dec
aam
xchg
adc
repnz
jbe
mov
and
xor
push
mov
call
imul
lds
mov
jg
sbb
fdivr
clc
icebp
lods
dec
arpl
mov
int
and
dec
pop
sar
push
pop
sub
gs
movs
imul
stos
add
jmp
fwait
mov
mov
les
jo
fsub
retf
call
jp
add
out
jo
xor
jl
mov
push
sbb
mov
mov
dec
and
aas
sub
mov
inc
loopne
popa
ins
mov
sub
fwait
jb
jl
pop
and
xchg
pop
daa
out
int
lods
aam
jmp
pop
mov
xor
push
dec
lea
cld
push
sti
xchg
rcr
dec
loope
pop
inc
mov
packuswb
adc
out
fxch
test
inc
arpl
cmp
(bad)
pop
add
(bad)
loope
cld
ds
push
or
mov
clc
xlat
xor
jmp
cmp
mov
lds
test
out
and
or
idiv
lods
sub
mov
push
mov
inc
stos
and
mov
xchg
sub
or
imul
lea
outs
int3
inc
or
leave
lea
sbb
fild
jecxz
sub
loope
fwait
dec
mov
lds
pushf
dec
aad
push
pop
ins
sub
mov
div
cwde
jmp
test
jae
mov
(bad)
or
push
push
sub
fisttp
mov
cdq
clc
jae
fidivr
xlat
aas
jns
stos
sub
mov
ins
shl
pop
mov
popf
mov
out
repz
mov
add
in
adc
stos
adc
and
ret
mov
jp
add
fsubr
dec
aas
cmps
sub
cmp
mov
fs
xor
jmp
push
retf
jbe
cmps
xchg
sbb
pusha
xchg
loope
rcr
push
and
pop
inc
idiv
les
aad
push
mov
mov
mov
in
hlt
or
and
jl
xlat
(bad)
ret
jmp
(bad)
push
inc
jns
test
xor
fnstcw
mov
outs
cmc
loope
adc
jle
jecxz
adc
jmp
mov
xchg
test
test
inc
sub
cmp
xor
push
add
arpl
in
popf
call
xchg
xchg
jecxz
jno
std
push
mov
leave
dec
ins
(bad)
sub
inc
ins
pop
loop
ds
sbb
pop
int
stos
mov
aam
add
xchg
add
mov
mov
fisub
and
sbb
in
add
inc
sti
fadd
inc
jecxz
add
sub
test
xor
call
rcl
out
sbb
adc
add
xchg
popa
dec
imul
pop
outs
dec
sbb
ins
in
dec
ins
in
or
sbb
jg
adc
inc
ins
cli
rol
daa
fstp
and
fisubr
mov
pop
xchg
popa
jmp
mov
adc
xchg
mov
cmp
addr16
mov
mov
adc
mov
aas
lods
popf
aas
in
aaa
shl
push
dec
inc
add
sub
sbb
dec
es
int3
inc
cmp
mov
jp
ins
push
arpl
fild
inc
push
mov
daa
sub
call
adc
dec
pop
pop
push
jne
jmp
and
xchg
retf
pop
mov
sub
mov
dec
and
repz
ins
jp
jnp
in
dec
mov
das
mov
fstp
or
aas
lods
mov
xlat
push
cmp
ins
fadd
(bad)
or
xor
scas
(bad)
cmp
xor
(bad)
aas
xchg
sub
mov
adc
ror
aad
xor
mov
mov
lds
pusha
loope
push
cmps
mov
jns
dec
iret
sbb
or
push
scas
test
imul
std
outs
mov
add
xchg
dec
ja
repnz
(bad)
xor
sbb
pop
or
dec
and
test
add
or
das
into
loopne
mov
pop
mov
in
xor
ins
sub
cwde
xor
and
add
jbe
shl
shl
jb
loop
cmc
cmp
fisub
dec
xlat
mov
stos
and
and
pop
in
fdiv
xor
ret
mov
fcmovb
sbb
mov
imul
adc
pop
jp
pop
je
lods
test
pop
aaa
xor
retf
or
or
jae
clc
and
sbb
dec
xchg
aaa
sbb
sub
fsub
jle
popa
push
out
ds
pop
popa
lods
mov
arpl
enter
ins
or
popf
lods
in
cld
int
jmp
test
dec
pop
pop
mov
(bad)
mov
in
push
(bad)
mov
btr
push
push
(bad)
jmp
aas
sbb
pop
loopne
iret
retf
(bad)
sub
dec
fld
data16
mov
dec
pop
pop
div
scas
call
jle
vmaxss
push
js
ins
cwde
or
mov
mov
popa
cmc
cli
outs
xchg
add
fcomip
pop
cmp
ss
push
pop
pop
and
outs
ds
pop
adc
inc
jnp
(bad)
cmps
dec
cs
mov
js
xchg
dec
pushf
rcl
push
mov
(bad)
xchg
xchg
jle
shl
(bad)
in
aaa
mov
sbb
jmp
mov
mov
jnp
test
add
movups
fisttp
mov
js
cmp
fiadd
and
or
mov
cmp
xchg
fs
push
ret
dec
imul
dec
push
data16
ret
ror
je
add
pop
xchg
and
mov
xor
jo
adc
data16
stos
xchg
stos
out
fild
inc
lea
out
fwait
cli
dec
(bad)
cmps
jno
imul
lods
sar
(bad)
sbb
mov
pushf
outs
pop
adc
fldcw
mov
mov
sbb
adc
fwait
cli
pusha
and
mov
dec
sub
(bad)
iret
int
mov
or
mov
ins
xchg
xchg
mov
push
jp
int
popw
dec
dec
mov
xchg
inc
push
fld
dec
lahf
rep
pushf
pop
out
pusha
ja
xchg
cwde
inc
push
shr
xchg
inc
in
mov
push
and
ja
xchg
ja
(bad)
mov
push
push
into
ss
enter
add
lods
ret
loopne
push
push
add
sbb
sub
jns
hlt
sub
xor
xor
loop
retf
mov
nop
mov
jmp
or
stos
adc
ins
xor
sub
out
and
push
pop
nop
inc
and
rcl
jno
cmp
sub
or
push
daa
push
mov
ja
cmps
das
add
out
fisub
dec
shl
lods
xchg
sbb
cmp
out
push
inc
cmp
lods
mov
mov
rol
xor
mov
push
dec
xchg
or
sub
cmp
out
cli
add
(bad)
mov
fadd
sbb
leave
fisttp
push
fcomp
pop
jmp
inc
inc
pop
sub
out
sub
mov
jnp
jmp
dec
push
xor
les
sti
in
ins
ins
lock
idiv
jae
stos
sti
loope
pop
not
enter
ins
inc
sbb
mov
adc
inc
push
fldenv
scas
cmc
jge
cmp
call
push
pushf
inc
mov
cwde
adc
(bad)
rcl
ficom
push
inc
int
daa
(bad)
outs
retf
push
add
push
stos
sbb
mov
fscale
fsubr
pushf
cmp
cmp
and
and
xchg
aam
test
fsub
xchg
mov
jnp
clc
in
inc
inc
jbe
shl
cmp
xchg
sub
daa
xchg
and
jne
sub
mov
mov
push
in
ret
out
jo
iret
mov
adc
icebp
orps
mov
js
fisub
in
or
mov
clc
outs
test
lods
lock
mov
jno
popw
xchg
pop
xchg
inc
lods
xlat
and
add
arpl
xor
sbb
push
inc
adc
cmc
(bad)
mov
pop
adc
ins
sahf
ds
jge
int
movs
mov
dec
xchg
and
arpl
out
xchg
repz
sbb
dec
shl
std
leave
pop
push
pop
icebp
inc
je
xor
xchg
aam
outs
mov
add
pop
and
lock
cmp
dec
cmp
mul
xor
sbb
push
(bad)
call
in
mov
dec
jmp
scas
repnz
or
imul
scas
rol
adc
imul
push
mov
(bad)
mov
xor
cdq
mov
cld
mov
mov
or
lods
push
or
sbb
pop
nop
ins
fadd
and
sbb
imul
xchg
add
not
push
mov
mov
mov
xchg
sub
dec
pop
in
dec
xor
mov
sub
inc
(bad)
shr
mov
sub
mov
in
fs
inc
rol
js
mov
hlt
retf
xlat
cmc
js
aas
stc
cmp
sahf
in
sbb
pop
imul
xchg
popfw
or
lea
mov
fbstp
pop
out
adc
add
xor
jmp
xor
addr16
popa
xor
pop
sub
fldcw
jl
sub
lds
mov
lock
mov
add
aaa
jb
push
popf
iret
or
in
adc
ja
jmp
rol
out
add
dec
xchg
leave
jnp
inc
cmps
inc
pusha
and
xor
bound
lods
push
mov
in
std
mov
fsubr
and
mov
sbb
mov
loop
inc
mov
dec
clc
retf
push
or
cmp
mov
mov
call
(bad)
cmps
(bad)
mov
lds
push
mov
jbe
mov
jnp
retf
jnp
xchg
cmp
add
repnz
shl
rcl
ret
inc
or
lds
rol
adc
lods
sub
test
jmp
xchg
pop
rcl
pusha
data16
sub
mov
std
jo
xchg
dec
push
lods
cmp
inc
cmc
xchg
adc
inc
movs
call
sub
(bad)
and
sbb
mov
int3
jmp
lock
movs
iret
(bad)
xor
xchg
pusha
adc
retf
adc
stc
hlt
cmp
ins
pop
mov
or
pop
fdivr
adc
stos
jp
push
xor
mov
xor
add
ret
clc
or
mov
cmc
xchg
jecxz
les
lock
fiadd
xchg
mov
movs
push
xchg
loopne
ja
call
ss
jmp
dec
sub
loopne
(bad)
and
daa
shr
idiv
adc
mov
arpl
lock
and
add
sub
pusha
sub
pushf
pop
or
ficom
ss
cmp
jle
or
push
and
jbe
imul
jb
(bad)
(bad)
pop
lock
scas
or
mov
fwait
aaa
mov
aaa
inc
sub
(bad)
jp
xchg
and
or
ds
sub
mov
push
enter
xor
aaa
sub
mov
push
test
mov
pop
or
lods
mov
push
seta
dec
test
ret
mov
add
call
cmp
in
push
xor
xor
pop
jns
xchg
rol
or
leave
dec
addr16
pop
test
cmp
jle
mov
sbb
lods
mov
ficom
in
fcmovnbe
jg
bound
or
dec
cmp
rcl
xchg
mov
xor
fucomi
call
pop
(bad)
outs
shr
and
cmp
pusha
and
test
sbb
inc
sub
loop
sahf
xchg
sub
int3
cmp
push
nop
sub
jl
inc
dec
mov
out
push
imul
mov
retf
pop
and
aad
push
call
inc
sub
and
or
cmp
fwait
clc
pop
inc
call
std
idiv
jno
movs
inc
(bad)
shl
std
mov
mov
mov
test
or
push
clc
cld
jno
pop
mov
pushw
sub
sub
pop
dec
jge
retf
sub
into
stos
jns
xor
mov
mov
ja
(bad)
stc
cmp
sub
jmp
repz
xchg
adc
pop
cmp
ins
mov
mov
dec
adc
or
popa
cmc
mov
jmp
rcl
out
pop
add
(bad)
mov
jns
mov
jmp
xchg
mov
les
ret
sbb
pop
cdq
mov
fdiv
mov
sub
fist
mov
cmps
in
inc
pop
mov
enter
mov
mov
jns
imul
imul
pushf
jns
xchg
xchg
ret
imul
xchg
pushf
call
and
sub
in
and
jg
sub
mov
push
outs
dec
adc
push
bnd
push
pop
test
daa
push
jnp
ins
and
dec
into
xchg
ffreep
fnstsw
mov
xchg
and
xor
xchg
push
jo
std
mov
push
js
cwde
push
xor
je
fistp
push
inc
mov
mov
jle
jle
pop
test
inc
sub
xchg
mov
cmp
fs
daa
fbld
addr16
fwait
or
inc
and
stos
movs
mov
mov
sbb
and
imul
loop
out
wrmsr
pop
gs
test
leave
jp
sub
jmp
cmp
out
mov
xor
leave
push
xchg
pop
hlt
stos
xor
and
test
ins
push
imul
pop
pop
es
cmp
xor
imul
ror
ins
adc
adc
test
xchg
jecxz
out
adc
in
dec
mov
or
jns
loopne
cli
jbe
shr
loopne
xor
imul
lea
aad
outs
in
push
add
out
sub
fwait
mov
adc
movs
test
(bad)
ficomp
jae
xchg
xor
push
scas
push
clc
(bad)
or
sub
int
in
xor
push
test
mov
rcr
aas
inc
lds
jnp
mov
div
stos
add
arpl
stos
(bad)
into
cmp
inc
sbb
add
xchg
fimul
icebp
inc
mov
mov
sub
mov
jecxz
push
dec
sar
xchg
mov
mov
xorps
mov
ins
push
addr16
imul
pusha
or
adc
test
gs
and
mov
aaa
xchg
adc
add
call
pop
dec
retf
loopne
mov
ss
icebp
pushf
scas
pop
aas
dec
dec
cwde
dec
mov
rep
jmp
jbe
mov
push
dec
cdq
lds
ror
inc
cmp
call
dec
jle
loopne
push
shr
xchg
ja
cs
ins
ret
cwde
out
xchg
loope
mov
jmp
imul
dec
sub
fcomp
clc
pop
sub
cdq
sar
ss
sub
call
and
in
jg
sahf
int3
push
imul
sub
aaa
cmp
mov
push
jae
jne
out
hlt
xchg
std
ret
jnp
pop
call
repnz
xor
push
stos
push
cmp
inc
stc
iret
outs
push
sbb
adc
push
dec
daa
inc
cdq
mov
lds
mov
leave
xchg
movs
mov
cmc
lods
(bad)
test
mov
or
xchg
movs
dec
jmp
popf
fs
test
mov
jmp
xor
xor
push
ja
inc
push
or
loope
(bad)
pop
cmps
and
jne
mov
loop
add
jmp
mov
mov
(bad)
jp
push
jg
(bad)
mov
mov
adc
stc
mov
and
sbb
cmp
mov
pop
jns
mov
(bad)
mov
mov
pop
not
adc
into
sub
sub
cld
rcr
cmp
cmc
push
aam
imul
icebp
adc
movs
div
push
js
jmp
pop
push
call
and
mov
dec
(bad)
xor
int
data16
enter
jmp
(bad)
sub
pusha
enter
cdq
xor
xchg
rcr
mov
inc
xchg
aaa
mul
jno
jmp
adc
xor
dec
ins
lods
lods
test
in
retf
inc
mov
inc
out
int
adc
nop
sub
scas
ins
stos
dec
ja
mov
add
ja
pop
enter
repnz
iret
loop
jbe
and
jns
shr
ret
fimul
xor
pop
sbb
sahf
retf
or
out
sbb
push
hlt
sbb
mov
xchg
loop
cmc
pop
push
fldenv
lahf
push
mov
adc
inc
xchg
inc
out
adc
mov
add
push
push
bound
call
add
fdiv
lahf
repnz
xchg
dec
popa
ins
push
or
inc
loopne
xor
sar
repnz
add
ja
push
jns
and
imul
or
xchg
xor
cwde
fs
sti
(bad)
and
mov
dec
xor
dec
pop
outs
jbe
mov
iret
sbb
ret
mov
adc
add
push
pop
mov
sti
sbb
jo
fxch
pop
and
shr
pop
sub
lods
gs
daa
mov
(bad)
mov
mov
cmp
aas
pop
nop
push
push
movs
mov
enter
cmp
jp
mov
or
xchg
aad
pop
in
dec
and
push
mov
sub
inc
cmp
mov
js
(bad)
push
out
retf
loop
pop
std
push
inc
xchg
jae
ss
lahf
mov
stos
xor
sbb
or
push
add
mov
jmp
(bad)
outs
jge
repnz
in
ret
cmp
das
fsubp
mov
and
cmps
xor
push
xchg
setbe
cld
ins
sub
fild
fcomp
jle
and
mov
call
daa
int3
iret
dec
mov
cmc
outs
add
in
jl
lock
ins
jg
ret
mov
in
shr
sbb
jns
add
cdq
mov
int3
(bad)
call
pop
(bad)
mov
stos
mov
in
mov
imul
popf
arpl
sbb
lods
cmp
das
push
icebp
leave
int3
mov
add
mov
mov
cli
or
hlt
cs
test
push
mov
inc
fsubr
loope
pop
jno
addr16
add
loope
je
dec
call
jmp
pop
mov
cmps
mov
lds
adc
inc
adc
push
xchg
cwde
out
fsubr
mov
jmp
cmp
enter
inc
add
jecxz
repnz
(bad)
cdq
dec
xchg
ficomp
mov
add
sub
call
sbb
gs
out
sub
jo
and
inc
test
aaa
mov
mov
add
retf
mov
xor
shl
adc
sbb
aaa
push
mov
iret
jbe
xor
sahf
packssdw
mov
lods
loopne
push
mov
and
dec
and
pop
std
shr
(bad)
sbb
movs
adc
lahf
ja
inc
or
fwait
sbb
jmp
mov
pop
stos
or
or
and
xchg
test
sbb
sti
ret
js
shl
mov
add
pop
cmc
jl
sbb
cmp
adc
shl
test
mov
xchg
pushf
pop
out
jbe
stos
cwde
jecxz
xchg
or
nop
inc
fidivr
jbe
jno
aad
mov
in
pop
lahf
xchg
mov
jmp
sbb
into
xchg
xchg
xchg
jbe
sub
adc
aaa
(bad)
nop
adc
push
dec
dec
dec
xor
dec
rcr
test
cli
(bad)
jnp
stos
adc
adc
lds
std
aam
adc
and
ins
inc
retf
sbb
scas
push
cs
and
sbb
mov
retf
pop
icebp
sbb
scas
sbb
sub
sbb
and
mov
jno
sub
mov
lea
jg
out
test
cmps
dec
mov
js
sub
cli
dec
dec
push
int3
mov
sbb
icebp
int
push
jb
jmp
push
or
cs
lea
mov
pop
cdq
out
mov
and
movs
or
dec
retf
xchg
js
stos
inc
inc
fidiv
sbb
sub
std
xor
sub
inc
mov
fs
retf
sbb
xchg
mov
mov
push
xor
fcmovnbe
push
pop
hlt
push
imul
(bad)
stc
pop
jmp
xor
imul
xchg
and
mov
adc
mov
aaa
jno
cwde
push
xlat
inc
repnz
inc
movs
mov
pop
aaa
mov
and
(bad)
test
sti
test
(bad)
out
jns
mov
xor
adc
push
lock
jns
sbb
pusha
xchg
test
jno
mov
xlat
mov
mov
and
pop
inc
cmp
imul
mov
bsf
and
or
jp
sbb
xchg
mov
jnp
jo
push
xor
or
shr
fcom
inc
std
xchg
jg
mov
cmp
or
xchg
add
cmc
add
dec
lea
pop
mov
mov
inc
mov
stc
cmc
mov
mov
daa
adc
lea
and
arpl
xor
push
mov
ret
jo
(bad)
das
test
sub
and
add
add
ret
in
sub
dec
adc
mov
jae
sbb
loope
cmp
xchg
ins
ins
xor
sub
or
cwde
xchg
nop
adc
cwde
sbb
mov
test
jns
cmp
add
stc
cmp
loop
cld
mov
jne
jl
dec
and
jo
jmpw
mov
lock
test
inc
ins
mov
aaa
cld
pushf
imul
jbe
mov
sahf
push
pop
lea
repz
pop
adc
rol
aad
nop
cmp
ins
aam
sbb
push
jl
call
aam
add
inc
sub
repz
cmp
lock
shl
fstp
mov
shl
ret
ret
adc
mov
cmp
cmp
add
dec
dec
lock
jne
mov
scas
mov
(bad)
aas
cmc
aam
mov
add
ins
in
xchg
push
mov
pop
adc
outs
jp
and
out
clc
in
arpl
rcl
xchg
lods
xchg
dec
movs
mov
jne
mov
pop
cmp
in
mov
call
mov
out
in
pop
jns
or
sbb
stos
and
out
xchg
nop
mov
add
mov
rol
push
mov
std
leave
and
jge
stos
aas
(bad)
push
mov
sbb
mov
inc
dec
add
test
out
(bad)
fdivr
mov
mov
out
jle
add
loop
xchg
test
cld
stos
sbb
xchg
cmps
mov
hlt
mov
repnz
jecxz
jb
sbb
aas
jge
fninit
mov
inc
(bad)
ret
repnz
lds
lods
cld
in
xchg
or
mov
xlat
mov
xlat
jmp
xchg
mov
pop
ins
in
mov
jmp
rol
xchg
add
popf
mov
pop
retf
fsubr
pop
mov
or
or
mov
stos
retf
mov
inc
out
fs
loopne
lock
pop
fisub
les
push
inc
lods
xor
inc
add
fwait
cmp
inc
jecxz
or
out
push
push
cmps
les
arpl
xor
aad
enter
jne
xchg
lds
pop
inc
jns
(bad)
(bad)
ins
outs
call
sub
call
call
frstor
xchg
cmc
push
or
push
sbb
xchg
das
mov
sub
arpl
rol
cmp
fisttp
ja
iret
pop
sti
les
imul
dec
push
fwait
dec
xor
ins
cmp
retf
pop
fild
cli
mov
stos
es
or
das
js
pushf
out
sahf
ss
jb
jnp
mov
rol
lock
lds
push
push
movs
jne
push
mov
and
mov
push
lods
je
jo
out
xchg
call
jge
sub
mov
pop
test
movs
jae
cmp
popa
and
xchg
les
or
cmc
push
xlat
ja
inc
sub
lods
sbb
stos
cmc
mov
fld
cs
add
sub
jne
pop
mov
scas
lea
int
inc
cmps
mov
push
or
outs
fld
adc
scas
in
mov
in
push
jno
pusha
mov
push
rcl
test
xchg
mov
(bad)
je
pop
add
jle
mov
retf
dec
stos
push
out
or
jle
ret
cmc
jmp
xor
xchg
fs
dec
out
sub
repnz
mov
sub
(bad)
cmc
hlt
jmp
pop
pop
sti
or
add
mov
pusha
ror
push
dec
or
jecxz
invd
jne
sbb
call
pop
mov
jg
add
clc
xchg
imul
inc
fs
iret
popa
loope
cmp
adc
cdq
jns
call
std
test
add
movs
and
pop
cmp
push
sar
sbb
jbe
popa
add
out
aam
jl
popf
lods
fimul
jno
cld
sahf
outs
ss
call
stos
xchg
scas
and
inc
div
rcl
mov
fild
mov
xor
xor
inc
test
pop
and
retf
(bad)
mov
pop
jg
jg
mov
lock
mov
xchg
inc
jne
xor
mov
lds
or
push
int
movs
enter
pop
enter
or
std
jb
int
fsubr
mov
imul
and
pusha
dec
scas
xor
sub
call
(bad)
aad
movs
lock
pop
xchg
cs
aaa
popa
fcom
push
bound
add
inc
mov
test
rol
mov
jle
pop
mov
and
inc
retf
sti
cmc
pop
adc
loopne
pushf
cmp
lds
or
mov
and
enter
mov
adc
pushf
fisttp
xchg
xlat
pusha
jl
std
add
inc
or
and
ret
dec
mov
mov
add
adc
dec
sbb
sbb
(bad)
mov
mov
scas
dec
mov
sub
cmc
shl
xchg
and
sub
mov
mov
inc
retf
dec
adc
rcl
sub
xor
or
adc
jae
jns
out
sti
sbb
mov
xchg
pop
imul
mov
or
jecxz
xor
xor
inc
mov
retf
jnp
lds
iret
rcl
test
jbe
xchg
shr
mov
rol
mov
mov
mov
in
mov
loop
loop
repz
aas
hlt
shl
movs
inc
xchg
test
pop
ret
hlt
pop
rol
ret
sub
inc
mov
jecxz
add
xchg
ss
adc
jae
into
rcr
scas
mov
adc
mov
pop
lock
sbb
stos
mov
jbe
(bad)
in
inc
xor
jae
shl
fwait
jl
xchg
aas
mov
inc
adc
dec
mov
adc
or
adc
repnz
cli
mov
xchg
jb
lds
pop
enter
xchg
jge
cmp
ja
sub
loop
fisubr
add
lock
test
jo
rcl
jge
jmp
hlt
sbb
sahf
xchg
js
pop
sbb
mov
out
ins
out
push
(bad)
nop
and
mov
mov
pop
xchg
sbb
mov
or
mov
cmp
xor
sub
aas
scas
leave
pop
mov
jp
mov
enter
jne
adc
in
sub
adc
repnz
mov
inc
shl
jbe
mov
scas
jecxz
out
sub
inc
lds
arpl
mov
stc
adc
push
int
dec
push
pop
ds
mov
cs
dec
xchg
fcom
mov
(bad)
jo
psrad
cmps
xlat
or
or
inc
adc
jnp
jnp
mov
sbb
xor
add
xor
into
js
sub
cld
pop
repz
clc
mov
fidivr
arpl
dec
ds
mov
push
(bad)
jnp
mov
fisubr
sbb
fsubr
ficomp
cwde
lock
icebp
ss
cmps
and
(bad)
aad
xchg
dec
push
inc
outs
jns
xor
sub
or
nop
xchg
jb
and
jo
fidiv
into
and
cmp
int
push
cwde
cmc
pop
xchg
(bad)
int
xor
or
sub
retf
mov
add
pop
cwde
or
dec
xchg
imul
scas
xor
and
cmp
xchg
sti
retf
pop
mov
into
sub
push
push
sub
fcom
stos
xor
jmp
imul
xchg
mov
retf
push
or
rcl
dec
mov
mov
in
sbb
jg
fs
and
or
pop
out
sbb
xor
sar
mov
adc
imul
push
fild
mov
cmpxchg
or
jns
xchg
fld
out
and
clc
out
jmp
icebp
cmp
call
outs
fsub
les
pusha
sub
xchg
pop
(bad)
sbb
jge
mov
out
and
add
mov
xor
xchg
pop
lods
(bad)
call
fdiv
daa
div
cld
pop
sbb
mov
and
jno
fsub
inc
jnp
out
cs
add
std
test
mov
push
mov
scas
and
imul
rcl
aam
nop
out
sbb
add
arpl
inc
add
mov
addr16
xor
jbe
mov
mov
and
in
iret
pushf
ret
repz
addr16
btr
mov
fs
shr
and
dec
aad
push
inc
pop
xchg
xchg
loopne
(bad)
mov
cwde
jmpw
fsubr
jp
rcr
xchg
addr16
movs
dec
shl
enter
aas
in
stos
jl
mov
dec
in
rol
iret
xchg
inc
into
ins
cs
jmp
fwait
test
enter
or
pop
xor
jl
lea
cmp
adc
or
cmps
stos
pop
jnp
jnp
test
jo
push
(bad)
xor
out
lock
dec
xor
mov
inc
mov
clc
mov
sbb
pop
scas
cli
stos
stc
test
mov
fsub
xchg
inc
lds
in
test
in
xor
fistp
data16
dec
movs
sbb
xchg
ds
call
js
adc
inc
mov
or
jmp
and
dec
mov
jl
(bad)
call
call
mov
outs
mov
lods
pop
pop
retf
sub
pop
sbb
mov
popa
dec
movs
cmp
push
xchg
jnp
out
sbb
leave
clc
sti
adc
js
movs
xchg
leave
xchg
mov
mov
cmc
cmp
mov
icebp
js
aam
icebp
add
cs
in
sub
push
fcmovnu
adc
cli
xor
js
mov
iret
inc
test
in
xlat
mov
mov
ficom
dec
leave
mov
cmp
ret
xchg
mov
jno
not
loope
xchg
dec
push
jg
test
shr
jge
call
cdq
lods
jmp
xor
fwait
dec
and
sbb
and
ror
iret
adc
in
jmp
inc
rcr
adc
mul
push
stc
adc
add
enter
es
add
aad
sub
xor
ins
fistp
maxps
rep
xlat
dec
xchg
jb
mov
pop
mov
inc
in
push
lea
(bad)
xchg
es
xor
sahf
not
call
add
or
scas
or
jo
or
aaa
push
lock
adc
rcl
inc
imul
data16
in
int
scas
mov
push
or
pop
mov
mov
lds
aad
pop
push
push
mov
xchg
pusha
addr16
push
pop
or
inc
dec
in
pop
jecxz
add
jle
in
inc
sbb
mov
mov
adc
or
fnstenv
add
adc
jl
mov
sub
mov
pop
scas
test
add
ficom
dec
(bad)
mov
aas
sbb
mov
stos
mov
arpl
mov
iret
dec
xor
bound
cmp
jno
xchg
mov
outs
fmulp
lds
arpl
and
(bad)
dec
fiadd
in
fild
add
bound
inc
(bad)
lock
int3
cmp
addr16
sub
movs
mov
mov
add
movs
gs
jmp
sbb
ret
sbb
fs
xor
or
mov
out
rol
add
int3
dec
aaa
mov
addr16
adc
loopne
mov
stc
std
ss
clc
cmp
adc
ja
mov
or
loopne
fldcw
jle
push
mov
mov
pop
jge
fimul
sbb
sti
ficom
(bad)
into
mov
dec
mov
dec
fdiv
ja
pop
sbb
dec
jp
sub
mov
loope
rcr
popa
push
mov
nop
fsub
sub
add
fidivr
or
sar
inc
aam
sub
inc
xor
pop
movs
push
mov
test
repz
in
out
xchg
xlat
out
xor
sub
imul
xor
cmp
imul
mov
and
cmp
cld
push
jns
cmp
shr
hlt
fwait
sub
and
sbb
cdq
sub
test
adc
pop
pusha
stos
stc
pusha
pop
shr
push
test
inc
sbb
adc
jno
push
lods
push
push
fnstenv
xor
pop
push
jno
jecxz
call
iret
xchg
inc
std
adc
aam
jmp
scas
(bad)
xchg
sub
push
or
stos
sub
and
not
pop
pop
mov
out
bound
inc
push
ret
sub
mov
addr16
shl
sbb
mov
and
loop
mul
sbb
mov
std
sub
das
cmp
lods
dec
in
mov
ror
imul
cwde
mov
outs
and
mov
and
call
dec
jb
imul
mov
retf
arpl
je
sbb
(bad)
les
int3
(bad)
push
adc
push
(bad)
cs
push
pop
std
nop
lods
es
dec
cli
sbb
ret
outs
adc
ret
fisubr
scas
popa
inc
lods
push
push
jne
(bad)
add
jmp
jae
mov
cmps
xor
loopne
test
pop
cmp
and
sub
inc
dec
mov
xor
pop
clc
cmp
test
pop
js
not
(bad)
retf
pop
mov
dec
lock
fidivr
xor
test
(bad)
mov
cmp
cmp
add
(bad)
iret
or
xchg
fdiv
test
mov
push
icebp
push
adc
inc
adc
(bad)
jmp
adc
and
push
out
sar
call
rol
(bad)
cmp
jmp
in
xor
pop
(bad)
int
lods
fadd
iret
or
(bad)
popa
shr
dec
sub
dec
leave
pop
add
ror
retf
pop
call
dec
xchg
dec
js
std
out
cmp
inc
push
push
cmp
cld
pop
mov
cmp
or
les
in
pop
sahf
(bad)
neg
mov
pop
or
fldenv
cli
inc
rcl
cmp
fs
fnsave
sbb
cmps
dec
mov
jno
daa
pop
scas
loope
fldcw
dec
add
cmp
xor
inc
sbb
mov
fcmove
mov
jmp
inc
dec
enter
stos
jo
xor
inc
movs
jmp
or
cld
dec
jno
cmps
push
xchg
sbb
or
or
cs
stos
xor
das
cmps
push
hlt
(bad)
and
pop
movs
sahf
sub
jp
jno
stos
xchg
inc
and
mov
pop
test
adc
sar
fcompp
jns
rcl
test
outs
dec
xor
cmp
pop
fld
test
or
add
adc
sbb
daa
retf
test
mov
push
loopne
ins
xlat
out
pop
push
or
mov
mov
sete
mov
div
addr16
fst
(bad)
sbb
mov
mov
adc
mov
xchg
inc
call
ds
jnp
retf
retf
shl
dec
loope
faddp
pop
shl
(bad)
pop
inc
faddp
xchg
test
je
mov
out
inc
aaa
xchg
or
and
in
out
aas
shl
js
je
or
cwde
xor
lds
mov
hlt
cmp
mov
push
xchg
scas
mov
addr16
in
cli
push
jo
xchg
(bad)
push
pop
add
cdq
retf
ja
pop
sbb
and
sbb
push
add
mov
inc
mov
jmp
in
mov
inc
test
arpl
lods
dec
cmc
xchg
adc
push
inc
sub
retf
and
adc
in
sti
(bad)
push
not
enter
inc
xchg
dec
xchg
xchg
sub
mov
mov
adc
out
mov
scas
movs
mov
sub
xchg
pop
cli
inc
mov
bound
mul
stos
sub
fwait
inc
mov
or
sahf
or
retf
jae
scas
test
in
adc
cmp
cli
ins
mov
dec
pop
pop
fst
cmp
inc
ins
dec
push
pop
inc
and
adc
sub
cld
dec
cld
popw
mov
enter
xor
mov
stc
pop
push
jecxz
push
sub
mov
neg
inc
xchg
test
in
xchg
xchg
sbb
sbb
mov
push
test
aad
imul
std
dec
mov
pop
sbb
icebp
pop
(bad)
int
mov
dec
into
push
hlt
fwait
jb
sahf
outs
xor
dec
imul
sbb
ss
jg
mov
mov
cmp
int
into
mov
xlat
data16
(bad)
fs
sub
stc
cmp
inc
push
mov
or
(bad)
loop
(bad)
rcl
and
adc
ret
mov
sub
sub
pop
xor
jns
call
pop
test
push
inc
inc
cmp
dec
mov
adc
mov
sbb
fs
outs
adc
xor
out
mov
lea
fistp
inc
aam
scas
sub
mov
lods
test
repnz
pop
sbb
xor
test
dec
cmp
push
cs
pop
dec
aas
sub
addr16
dec
inc
adc
xchg
repz
popa
pop
sub
dec
enter
outs
loop
sub
or
scas
mov
xor
inc
xchg
inc
mov
popa
test
cmp
mov
mov
enter
jb
(bad)
fnstcw
movs
pop
or
dec
lods
fmul
or
daa
mov
push
es
popa
jmp
mov
and
sub
inc
xchg
or
cmp
jp
inc
mov
loop
repz
mov
xor
jb
sub
and
pop
jmp
stos
sub
fldcw
mov
or
jnp
push
pop
sub
xchg
push
popf
mov
dec
imul
outs
mov
test
ins
mov
sub
sbb
push
push
pop
push
test
xchg
ror
jnp
gs
retf
shl
lods
jnp
sbb
stc
aad
jb
mov
xchg
dec
sti
in
mov
xor
outs
push
cmp
add
jne
xchg
ds
outs
ret
popa
xor
dec
imul
mov
loop
jmp
adc
in
sbb
and
lods
xchg
cmp
adc
cmp
in
call
inc
fimul
sahf
outs
mov
cmp
test
retf
lods
jle
dec
icebp
push
pop
sbb
push
mov
pusha
add
stos
xchg
add
lahf
and
fist
and
pushf
pop
out
shl
push
stc
cmp
or
inc
pop
jno
add
add
or
mov
bound
fild
jle
push
or
sub
popf
(bad)
jnp
mov
pop
jo
cld
mov
xor
sub
mov
push
dec
test
sbb
call
mov
fcmovb
mov
iret
call
dec
xor
mov
jno
(bad)
jae
imul
rcr
xor
dec
mov
cmp
push
sub
out
in
ja
movs
inc
out
mov
(bad)
and
mov
push
jl
ins
ss
push
mov
add
out
pushf
mov
pop
push
push
js
in
test
pop
fisubr
bound
fimul
(bad)
pop
push
push
rol
adc
cmp
sahf
cmp
adc
and
add
xchg
sub
ja
pop
pop
js
xchg
xchg
int3
mov
fst
dec
mov
add
xchg
jmp
imul
sbb
sub
xchg
je
fdivr
sub
stc
add
cmp
jae
ficomp
dec
mov
lea
xor
dec
int
retf
iret
jae
out
inc
aaa
adc
cmp
out
cli
rcr
mov
push
lahf
fisttp
jp
sbb
jmp
add
sbb
jmp
cmps
jmp
push
cmps
scas
pop
push
es
sti
outs
push
mov
dec
dec
int3
inc
push
lods
mov
fwait
(bad)
sub
pop
daa
jg
sub
lods
stc
pop
test
stos
shl
(bad)
sbb
mov
lahf
mov
movs
cmps
push
sub
cdq
sbb
push
dec
cmp
(bad)
sbb
or
mov
or
iret
jae
adc
pop
push
push
stos
mov
mov
shr
frstor
push
mov
mov
std
and
fwait
xor
pop
jno
inc
push
add
fbstp
(bad)
jne
lods
pop
xor
gs
dec
dec
pop
adc
jecxz
adc
sahf
mov
arpl
movs
lds
sti
cdq
add
arpl
int
outs
fidivr
repz
ja
xchg
sub
pop
ss
sti
rol
mov
scas
ins
imul
dec
inc
jg
inc
fiadd
push
sub
and
hlt
pop
jno
or
cmc
mov
xor
dec
jle
and
sub
and
pop
adc
mov
adc
xor
es
mov
inc
fstp
mov
xchg
inc
jge
or
xchg
repz
push
not
dec
pop
ret
push
xchg
adc
push
dec
adc
loopne
test
dec
rcl
push
push
fstp
fwait
mov
jbe
sbb
imul
fcom
fwait
add
mov
test
loop
fst
mov
(bad)
pop
add
rcr
mov
mov
xor
mov
xchg
clc
sbb
adc
inc
sbb
jge
sbb
mov
cmp
xchg
test
or
mov
lock
imul
sub
pop
and
adc
pop
dec
daa
bound
test
pushf
add
arpl
inc
fdivr
sbb
jp
into
or
stc
ficomp
mov
outs
sub
and
sub
cwde
js
loopne
sbb
dec
loop
xchg
fs
or
dec
arpl
and
popa
mov
daa
sar
std
not
push
shr
in
jns
idiv
ror
fld
js
xor
rcl
cmp
mov
lahf
dec
sub
push
les
inc
mov
xor
idiv
xchg
je
mov
lods
inc
aam
nop
rcr
ficom
test
mov
lock
sahf
call
fwait
push
cmp
pop
pusha
daa
retf
call
or
std
gs
ins
push
mov
pop
xor
jbe
xor
cmps
out
xchg
sbb
movs
mov
(bad)
xchg
mov
out
(bad)
in
mov
sahf
xchg
into
std
and
fadd
scas
fs
lods
scas
ret
ret
cli
pop
add
xchg
jno
ins
and
(bad)
iret
dec
cmc
xchg
jl
push
push
add
sti
sub
mov
mov
movs
repz
jmp
out
mov
pop
fcmovnb
sar
or
mov
push
mov
stos
inc
adc
inc
push
inc
pop
or
xchg
mul
xor
cmps
mov
or
cmp
leave
jmp
fst
pop
daa
push
sbb
or
jecxz
mov
xor
mov
bound
dec
mov
popf
push
push
dec
daa
xchg
lock
pop
push
mov
daa
mov
or
(bad)
jle
mov
mov
push
je
mov
pop
mov
rol
and
sbb
push
scas
aam
dec
shr
mov
ins
adc
or
fdivr
arpl
xchg
repnz
cdq
addr16
pop
mov
xchg
jmp
lock
pop
pop
hlt
(bad)
or
jmp
add
ret
dec
mov
xor
bound
(bad)
jnp
stos
sub
fist
jbe
cmp
jmp
out
sub
sub
and
js
into
and
scas
pop
imul
push
aad
add
shr
pop
idiv
cmp
call
cmc
or
and
adc
dec
repnz
outs
dec
mul
daa
and
repnz
jae
pop
(bad)
xchg
mov
mov
aas
jne
fimul
(bad)
jl
lds
lds
add
xlat
xor
jmp
pop
xchg
sbb
fcmovbe
xchg
cmp
movs
lds
lods
xchg
popf
or
mov
fmul
inc
push
or
and
adc
cli
cmp
cmc
add
out
das
dec
mov
push
mov
out
imul
mov
mov
sub
or
xchg
inc
sahf
aaa
push
or
adc
and
pop
sbb
and
lahf
and
dec
mul
push
cmp
xchg
enter
cmps
add
mov
movs
movs
mov
cld
sub
fiadd
sbb
dec
xor
cdq
and
cdq
in
sbb
sbb
pop
xlat
sbb
cmp
iret
cmp
mov
fild
cmp
mov
(bad)
fdivr
dec
jnp
clc
push
imul
div
xchg
inc
fwait
rol
ds
out
ds
shr
mov
ja
dec
add
movhps
mov
mov
hlt
out
xor
(bad)
sahf
mov
mov
lea
pop
ret
mov
mov
dec
and
gs
ins
fsub
and
adc
fcmovnu
call
popf
xchg
cld
std
addr16
or
inc
cmp
aas
pop
lock
inc
jnp
mov
imul
pop
mov
pop
ds
pop
sar
lds
jg
jg
in
xor
push
cmp
sub
stos
outs
mov
iret
inc
dec
icebp
sbb
fld
mov
ret
enter
call
inc
pop
mov
pusha
jp
sbb
hlt
out
push
pop
xchg
imul
dec
sahf
mul
mov
retf
scas
pop
sub
sub
xchg
jl
sahf
add
jb
aas
test
sbb
enter
jae
arpl
jo
clc
test
int3
inc
cdq
mov
pop
add
js
cmc
ins
ja
or
pushf
xchg
and
mov
or
pop
xchg
sub
retf
jmp
pop
push
pop
mov
jg
fs
cld
sub
call
or
jmp
mov
addr16
cmps
add
into
xor
sbb
js
(bad)
xor
ds
loope
add
inc
pop
es
cmp
xchg
pop
daa
adc
xchg
mov
fs
std
lea
loopne
xor
rcl
call
adc
mov
push
pop
stc
mov
rcr
test
adc
out
imul
push
xor
imul
shl
es
push
sbb
dec
(bad)
movs
dec
cmps
ja
sub
lock
lea
repz
pop
fild
mov
mov
push
mov
aas
mov
(bad)
jl
stc
enter
jnp
jne
(bad)
outs
aam
das
inc
push
adc
xchg
stc
retf
inc
(bad)
daa
movs
rol
pusha
sub
fst
xlat
xchg
out
add
pop
clc
pop
in
push
stc
jle
xor
ret
adc
into
lock
or
or
shl
fwait
sub
enter
pop
mov
xchg
or
in
pop
das
and
scas
in
scas
into
scas
xor
int3
in
test
fbld
fmul
cmp
pop
js
or
mov
mov
rcr
mov
(bad)
dec
and
and
dec
xor
fist
jg
add
sub
pop
add
into
iret
cmc
je
call
xor
ficom
mov
sbb
add
iret
jecxz
mov
test
icebp
push
sub
push
aam
xchg
iret
pop
or
jnp
in
(bad)
pusha
pop
jp
sbb
or
loopne
push
mov
mov
stos
push
sub
jnp
cwde
retf
std
jg
out
cwde
xchg
jmp
xchg
(bad)
xor
xchg
jo
mov
push
fcmovnbe
scas
inc
frstpm(287
je
jno
mov
lods
xchg
into
cmp
in
cld
adc
test
mov
jo
mov
cmp
pop
out
ror
xor
ret
cdq
mov
daa
out
pusha
daa
loope
in
pusha
xchg
cmp
stc
push
push
jle
cs
mov
xor
mov
or
dec
imul
cmp
mov
sub
jmp
ficomp
in
ins
jmp
retf
pop
mul
popa
ins
mov
fwait
sub
inc
sbb
sbb
gs
mov
mov
imul
cmps
jo
sub
test
ins
pop
mov
cdq
leave
jp
cmp
std
ror
pop
inc
and
cs
shr
ror
nop
fs
dec
mov
cmps
sub
das
cmp
stos
mov
shr
pop
sti
push
mov
test
sub
in
dec
push
xor
sub
pop
aad
mov
mov
movs
cwde
(bad)
popa
and
jmp
xchg
push
dec
jecxz
mov
adc
sti
xor
leave
push
fnstcw
sub
pop
dec
add
es
fidiv
lods
adc
mulps
jbe
ss
mov
add
dec
inc
repz
or
pusha
mov
jb
test
outs
pop
lods
mov
sub
mov
ror
jg
xchg
clc
xlat
xchg
sti
nop
xor
ret
mov
add
es
cmp
jne
out
mov
xchg
ja
mov
push
lods
push
cdq
and
jns
std
mov
test
mov
das
mov
adc
das
int3
mov
inc
aas
mov
cmc
lea
push
pop
out
mov
std
xchg
(bad)
jmp
not
loopne
pop
mov
xor
xchg
je
icebp
mov
xor
(bad)
mov
dec
ds
push
(bad)
and
in
and
les
and
ficomp
and
xlat
jle
mov
stos
mov
ret
adc
xor
pop
pop
scas
cvtpi2ps
inc
imul
je
push
pop
stos
inc
les
jo
mov
jl
scas
mov
fsub
lock
jne
mov
test
mov
sbb
mov
test
stos
mov
mov
outs
add
sub
movs
lea
outs
and
adc
pop
dec
xor
jo
fnsave
int3
mov
add
shl
jo
mov
pop
and
mov
xor
adc
jne
sar
int
(bad)
jp
fsubr
lods
cli
cwde
clc
fsubp
xchg
jnp
std
or
movs
xlat
jo
cmp
loop
add
enter
(bad)
popa
outs
cwde
xor
pushf
int
gs
mov
mov
pop
test
jge
push
(bad)
cld
push
fild
mov
or
lea
dec
aad
loop
push
xor
ss
add
pop
mov
sbb
ss
outs
and
push
mov
out
jle
shr
inc
arpl
mov
push
sti
pushf
xchg
scas
bnd
xchg
loop
ja
in
xchg
cli
scas
mov
ja
out
cli
gs
push
pop
jae
ss
mov
xchg
dec
or
mov
pop
idiv
fimul
ror
push
jle
leave
jmp
adc
test
add
mov
ficomp
(bad)
ja
out
and
pop
sbb
mov
xchg
add
popa
jge
gs
mov
test
test
into
stos
and
xchg
jne
dec
jns
fstp
or
icebp
iret
dec
jmp
xor
enter
in
inc
(bad)
in
sub
add
dec
add
movs
in
xor
sub
mov
nop
lods
jmp
out
dec
xchg
pop
mov
cmp
test
xchg
call
ret
movs
sub
mov
aas
pushf
movs
dec
aam
ins
cmps
dec
jno
mov
mov
xor
fidivr
lds
stos
js
es
push
es
xchg
(bad)
xor
int3
leave
lahf
jp
jb
xor
jmp
clc
jne
stos
xor
pop
mov
adc
sub
daa
(bad)
mov
popa
push
js
mov
adc
dec
mov
xchg
dec
cld
pop
shr
imul
inc
daa
inc
mov
mov
je
jns
pop
sbb
fwait
and
daa
sti
popf
out
dec
dec
push
push
icebp
jl
add
leave
jp
dec
adc
xor
adc
push
and
sbb
pop
cmps
aaa
aas
add
out
and
push
jae
xchg
call
adc
sub
ds
jne
xor
jmp
mov
dec
retf
daa
xor
add
test
sbb
scas
push
out
mov
add
and
sbb
mov
inc
inc
add
push
dec
sub
sub
int
shl
pop
call
repnz
out
pop
les
inc
or
adc
xchg
sub
mov
aam
sub
outs
or
mov
xor
mov
pop
adc
sub
ins
pop
xlat
enter
dec
or
ja
cmp
leave
jge
lock
sbb
or
push
pop
and
xchg
jbe
cmc
cmp
fs
pop
les
add
in
and
(bad)
les
jg
mov
add
xchg
push
retf
outs
cmp
pop
adc
adc
sbb
push
adc
xchg
xlat
clc
sbb
mov
mov
cmps
or
es
mov
mov
lock
int
mov
mov
ret
adc
inc
xchg
mov
inc
sub
sbb
mov
mov
or
jecxz
retf
pop
xchg
xchg
jge
outs
xadd
or
adc
(bad)
xchg
aaa
jl
mov
iret
ret
mov
shl
call
xchg
cmps
jecxz
pop
xchg
sub
or
ins
int3
xor
lds
fwait
mov
sub
mov
and
fcmovne
out
push
shr
push
test
pop
retf
gs
stos
xchg
call
mov
sub
push
arpl
adc
sub
ds
xchg
imul
test
in
imul
rol
fadd
xchg
or
xor
fidiv
cmp
pushf
or
dec
popf
test
push
add
fidivr
scas
lahf
in
jmp
mov
jp
mov
pop
mov
add
scas
push
sub
les
hlt
into
adc
sub
mov
rol
xchg
push
clc
pop
std
push
popa
add
jmp
aaa
call
nop
icebp
ja
adc
shl
gs
mov
add
pop
push
push
je
and
(bad)
dec
dec
adc
cdq
fs
push
or
inc
cmps
outs
in
inc
add
add
in
dec
or
xlat
imul
inc
rcr
dec
bound
pop
(bad)
xor
jg
adc
inc
jge
out
scas
sbb
stos
ja
pushf
pop
push
aas
fucompp
sub
fcmovu
mov
test
sbb
sbb
or
dec
outs
stos
mov
mov
(bad)
mov
shl
(bad)
and
pop
cmp
fnstsw
fldcw
fucom
jne
in
mov
mov
xchg
push
sbb
sub
(bad)
fisubr
mov
add
pusha
and
fwait
test
rcr
xor
test
in
imul
jno
sbb
sub
test
js
nop
cmp
xchg
(bad)
mul
jl
and
add
iret
sub
xchg
into
cmp
and
aam
lahf
pop
into
ficom
iret
mov
jge
icebp
jnp
in
out
xchg
jge
cmp
push
or
and
loopne
fild
xchg
daa
or
add
push
ficomp
cmp
es
fsubr
jge
ss
pop
in
mov
pop
and
lods
aaa
das
xor
push
push
ins
push
and
in
cli
jp
cmp
pop
je
or
inc
add
clc
ins
adc
fld
mov
fisub
aas
ficom
and
push
pusha
lods
cmp
aas
lock
mov
add
sub
pop
pop
mov
cdq
int3
pop
pushw
jg
and
dec
fucomp
adc
mov
ja
mov
loop
jge
or
out
push
push
or
jmp
jno
or
mov
in
inc
xchg
div
adc
and
add
sbb
ror
je
cmovg
add
adc
dec
xor
lods
into
das
in
add
fbstp
pushf
mov
in
add
(bad)
pop
jnp
shl
sub
outs
in
(bad)
pop
mov
jo
cmp
jne
sbb
bound
out
retf
scas
aaa
out
mov
mov
fistp
(bad)
inc
aaa
sub
xchg
shl
add
adc
jns
xor
mov
push
mov
mov
pop
loopne
xor
adc
inc
outs
jnp
inc
rol
push
retf
loop
jl
pop
pop
cli
and
cmp
mov
js
cmp
xchg
jns
cli
inc
arpl
mov
cmp
out
inc
out
in
adc
fist
sbb
int3
pushf
cmps
jno
mov
call
jle
sbb
not
mov
inc
dec
xor
fbld
mov
fcom
xor
pop
push
pushf
dec
xchg
aad
scas
ss
cmp
mov
push
push
jno
cmp
or
xor
xor
xchg
icebp
jno
mov
pop
or
outs
gs
mov
xor
iret
mov
adc
int3
dec
retf
jns
test
cld
inc
dec
push
jbe
out
rol
adc
aaa
xor
sbb
cmc
js
xor
jg
and
dec
iret
cwde
not
pop
pop
(bad)
(bad)
scas
rcl
in
gs
sbb
pushf
mov
lock
jae
pop
and
adc
jne
in
fimul
push
mov
pop
out
sub
sub
push
xchg
lds
jge
aam
ss
inc
xlat
mov
push
xor
ret
pop
jnp
mov
cmps
sub
sub
cmp
scas
xlat
mov
cmp
cmp
out
pop
jle
pop
sbb
ret
fstp
aaa
cmp
loopne
push
sbb
inc
pop
in
jl
nop
out
(bad)
retf
data16
push
pop
arpl
lods
sti
fstp
xor
dec
int3
(bad)
cmc
mul
(bad)
pop
or
(bad)
je
pop
enter
mov
stos
ins
sub
icebp
es
sub
push
adc
rol
hlt
sub
mov
jae
fs
adc
out
jnp
jno
pop
(bad)
cli
push
push
cwde
pop
mov
inc
and
jno
add
dec
mov
arpl
cmp
in
and
or
(bad)
jecxz
loop
jl
outs
lds
(bad)
jecxz
call
xchg
push
pop
jnp
sbb
xchg
mov
push
sti
fnstsw
test
and
gs
cli
adc
daa
scas
loope
inc
fsub
mov
and
aam
or
aaa
scas
mov
fs
cmc
lahf
pusha
jnp
shl
mov
mov
enter
lods
fdivr
clc
push
ins
push
(bad)
or
scas
adc
fimul
sub
inc
inc
mov
and
sub
push
fistp
adc
xchg
push
dec
les
or
push
lock
cmp
gs
(bad)
dec
inc
mov
cmp
int
inc
push
xchg
in
loop
sbb
adc
lods
(bad)
aad
or
daa
xor
xchg
test
jle
(bad)
adc
xchg
(bad)
add
dec
fnstcw
cmp
gs
nop
mov
jae
imul
mov
adc
fstp
pop
je
out
dec
push
xchg
cli
fld
lods
sbb
sub
inc
call
cmp
push
bound
push
xor
sub
jno
xlat
jp
push
pop
add
adc
(bad)
ins
dec
inc
mov
xchg
dec
add
retf
sub
imul
adc
xor
mov
and
mov
mov
mov
cmp
clc
inc
and
dec
and
lea
popa
push
das
push
jne
not
adc
sbb
mov
shl
push
push
jae
loope
cld
mov
and
push
lock
cdq
cmp
mov
in
addr16
into
je
mov
jmp
jmp
inc
mov
jbe
xlat
push
pop
mov
add
push
arpl
push
xor
loop
loopne
cwde
dec
(bad)
push
mov
cmp
dec
ret
iret
test
pusha
jo
rcr
xchg
(bad)
adc
cli
mov
imul
(bad)
jmp
js
or
jmp
mov
inc
test
dec
shl
mov
out
push
and
les
dec
pop
inc
jmp
stos
inc
mov
add
push
dec
daa
iret
cmp
sbb
test
iret
sbb
jl
adc
les
(bad)
jmp
shl
adc
mov
mov
sub
jecxz
cmp
mov
lods
jnp
push
dec
mov
rol
pop
cmc
pop
xchg
out
js
adc
in
das
test
scas
daa
es
adc
les
xchg
add
push
sub
push
ins
add
test
adc
sub
xchg
mov
loopne
cmp
(bad)
push
(bad)
sub
aas
mov
test
or
gs
inc
gs
cmp
dec
cs
out
aam
sbb
push
push
sbb
clc
adc
test
mov
add
xor
cmps
inc
cwde
fwait
mov
lea
leave
mov
dec
mov
icebp
test
movs
mov
popf
cld
xor
adc
inc
or
push
loopne
lea
out
pop
inc
call
out
dec
mov
or
inc
div
jl
fdivr
test
mov
mov
bound
test
jae
je
int3
retf
ds
sub
sub
das
jnp
pop
rcl
(bad)
sar
lods
mov
xchg
or
sub
xchg
jl
outs
mov
mov
mov
mov
xor
or
test
stos
sti
addr16
shr
dec
push
fstp
in
jbe
cmp
call
cmp
add
bnd
add
retf
add
in
pop
mov
test
imul
frstor
fcomp
sub
mov
adc
fwait
or
mov
jbe
jmp
push
sub
xor
hlt
jmpw
push
dec
cmp
add
int3
adc
jle
cmps
movs
mov
bound
test
ficomp
ins
push
sar
test
adc
test
add
add
xor
mov
add
mov
cmp
add
mov
mov
cmps
and
inc
add
xor
push
mov
imul
jno
test
movs
js
lds
mov
xchg
das
xchg
xlat
push
inc
pop
(bad)
gs
pop
ins
shl
jl
cld
cdq
jno
sbb
pop
lock
adc
test
inc
fcomp
sbb
xor
(bad)
outs
mov
xchg
adc
dec
push
push
cs
dec
fwait
sbb
ss
xchg
lahf
jns
mov
jmp
out
(bad)
mov
aaa
inc
fwait
jl
push
sbb
stos
mov
or
shr
sub
sbb
jae
push
(bad)
int3
call
outs
dec
repz
jbe
sbb
sub
scas
push
xor
lds
inc
push
cdq
mov
jl
call
mov
dec
add
push
dec
mov
mov
pop
pop
hlt
pop
sbb
into
mov
test
inc
loopne
or
mov
mov
pop
imul
sbb
mov
shl
xor
test
pop
pop
push
and
ins
ret
push
sub
ins
fiadd
and
adc
add
mov
fidivr
ss
and
xchg
imul
xchg
imul
mov
sbb
dec
inc
lock
mov
add
cmp
imul
mov
pop
aad
shl
cmp
into
hlt
retf
fsubr
adc
call
lea
out
push
dec
sti
or
sbb
sbb
cli
lock
inc
pop
push
and
pusha
jmp
add
sbb
(bad)
jge
dec
dec
cmp
cld
jnp
into
retf
loope
jmp
jnp
shl
movs
mov
aas
jmp
dec
fld
adc
add
jle
adc
test
pop
jmp
rcl
sbb
in
es
push
jne
add
mov
fisttp
es
inc
mov
xchg
xor
test
mov
into
sub
dec
ret
fucomip
add
or
es
sbb
dec
or
and
dec
dec
(bad)
push
popa
daa
jge
adc
hlt
sub
fsub
cmps
jecxz
aaa
xlat
mov
adc
pop
mov
or
loop
(bad)
cmp
add
add
jae
fwait
aas
and
retf
jecxz
jb
push
xchg
popa
outs
mov
mov
sub
cmps
arpl
xor
jmp
add
pop
lods
cmps
inc
push
stc
icebp
xchg
mov
stos
xlat
sti
jecxz
out
gs
xlat
lods
xchg
sub
add
sbb
adc
sub
pusha
mov
xchg
addr16
les
in
xchg
and
jo
mov
mov
pusha
retf
(bad)
cmp
nop
push
mov
nop
push
loope
sbb
add
test
(bad)
clc
sbb
mov
retf
jb
mov
mov
xor
xor
ds
ja
ss
jmp
lock
inc
mov
or
jo
(bad)
pop
and
mov
fs
dec
retf
clc
cdq
add
cmp
dec
mov
cdq
xchg
sub
jnp
add
and
popf
xchg
dec
fnstsw
cdq
add
cld
pop
dec
xchg
movs
movs
xor
movs
xor
sub
add
call
jo
call
or
xlat
repnz
out
push
(bad)
mov
jp
fwait
and
jmp
push
mov
or
cld
out
mov
cmp
xlat
xlat
test
test
gs
xor
adc
xlat
out
mov
pop
jne
leave
lods
pop
ret
jecxz
rcr
imul
(bad)
pop
shl
jle
jmp
data16
in
stos
scas
mov
stc
sbb
inc
xor
adc
fisubr
mov
rcr
sub
cmc
lds
xchg
pop
and
or
div
ja
sti
rol
or
dec
mov
or
js
lods
pop
loopne
sub
jo
push
xchg
mov
push
inc
jmp
mov
call
push
adc
push
xlat
mov
mov
adc
(bad)
mov
add
add
and
scas
inc
cmp
mov
pop
mov
push
lea
cmp
mov
push
jmp
das
sahf
or
push
adc
add
push
or
xor
fisttp
mov
test
clc
xor
je
call
mov
rol
inc
sbb
shl
neg
mov
outs
push
sub
(bad)
(bad)
dec
shl
inc
and
xchg
adc
and
mov
push
fnstsw
aam
mov
icebp
xchg
fidivr
xor
xchg
push
in
ds
jnp
adc
dec
or
and
mov
sbb
push
clc
inc
jl
retf
add
xchg
pop
ds
outs
xchg
loop
imul
jae
mov
div
pop
into
enter
cmp
sahf
push
jns
dec
call
xor
jno
bound
xchg
or
cdq
cmp
mov
xor
imul
adc
rcr
(bad)
and
jmp
hlt
add
fcom
push
jle
mov
stos
add
out
or
lds
mov
and
in
jmp
add
ret
call
jnp
nop
push
shl
add
jg
mov
ret
xlat
outs
and
jmp
jecxz
push
and
lock
xor
dec
repnz
cmp
sbb
inc
push
fild
pop
adc
cmp
or
or
ins
loope
retf
or
sub
pop
fld
push
test
mov
xlat
loop
dec
push
inc
mov
pop
add
shl
push
or
inc
sub
dec
jle
into
fsubr
pusha
sbb
dec
push
not
adc
dec
xor
inc
pop
adc
pushf
push
inc
pop
std
leave
pusha
adc
or
xchg
stc
test
pop
mov
mov
jmp
mov
sub
enter
fstp
ds
ja
je
and
pop
push
inc
repz
sbb
mov
repnz
loopne
clc
imul
in
popf
mov
jp
and
push
mov
jb
xchg
mov
das
dec
mov
repz
and
or
(bad)
movs
mov
imul
aas
rcl
(bad)
into
pushf
repnz
mov
fmul
adc
rcl
shr
push
jmp
jp
leave
sub
or
shr
cmc
mov
out
or
outs
les
mov
pop
cli
xor
fs
addr16
ins
mov
mov
out
pushf
pop
push
xchg
xchg
repnz
jg
push
pop
mov
(bad)
out
pop
ins
leave
add
jbe
and
jbe
cmp
retf
push
dec
inc
sbb
ss
dec
inc
enter
fcomp
lods
add
mov
mov
xor
mov
stos
adc
int3
sub
ror
pop
mov
push
push
sbb
xor
shl
dec
(bad)
scas
add
and
nop
call
test
cmp
xchg
xchg
stos
jno
nop
movs
inc
xor
sbb
test
leave
mov
or
enter
int
sub
xor
fimul
or
out
inc
and
mov
jmp
dec
pop
ss
frstor
and
idiv
or
pop
lds
fistp
and
inc
push
adc
xchg
sub
sar
scas
retf
in
jge
imul
stc
or
outs
pusha
out
and
les
fs
or
mov
outs
xor
mov
jns
das
push
cli
push
jecxz
sahf
mov
int
enter
or
mov
mov
imul
xchg
pop
mov
jg
mov
stc
imul
mov
push
dec
ins
cld
sbb
and
mov
leave
std
and
out
add
repz
into
aam
sbb
add
and
out
retf
dec
call
or
cmp
test
add
bound
mov
test
adc
add
fist
mov
imul
ins
add
daa
test
xchg
inc
jl
aad
leave
xchg
ja
xchg
icebp
mov
pop
mov
sub
fs
cld
ror
les
sahf
int
push
pushf
jns
pop
popf
fisttp
push
xor
std
lea
mov
sub
lock
jle
sub
retf
out
mov
cli
mov
and
cmps
xor
dec
stc
sti
push
adc
xchg
aaa
ja
inc
pop
cmc
inc
cmps
adc
fadd
outs
xchg
xor
xchg
shl
fsubr
hlt
retf
jno
lods
bound
sub
rcl
mov
mov
ret
outs
pop
jg
cli
ja
sets
mov
add
icebp
ror
rcl
inc
ror
mov
mov
xor
cld
lods
xor
jbe
lods
xlat
cmp
test
das
sbb
xchg
addr16
inc
loop
and
ret
xchg
(bad)
sbb
sub
dec
or
push
stos
popf
fs
mov
fisttp
cdq
(bad)
and
dec
loopne
cmp
jmp
push
mov
sub
or
mov
jmp
rcl
hlt
movs
loopne
xor
fucompp
loop
mov
sbb
mov
push
mov
xchg
lock
pop
pop
mov
cmp
xchg
loopne
jle
sub
js
mov
adc
in
xchg
or
sub
punpckhbw
mov
cdq
jp
mov
imul
std
or
xor
fisubr
mov
sbb
ds
popa
lods
ss
(bad)
fbstp
jns
and
inc
rol
xor
in
stc
cmps
in
mov
xchg
cmp
ins
push
sbb
xor
rol
fwait
addr16
inc
sbb
popa
push
inc
add
out
cmp
inc
inc
sub
sbb
out
add
jecxz
xor
dec
and
jmp
xor
cmps
pop
pop
std
mov
std
shl
in
add
out
jl
cmp
xchg
inc
and
inc
pop
hlt
and
mov
adc
js
aaa
call
jb
sbb
mov
and
cmp
push
or
jecxz
shl
push
xchg
add
rcl
out
add
push
fadd
push
gs
ds
data16
cwde
sub
retf
mov
aam
xchg
gs
frstor
in
cmp
or
xchg
cdq
pop
cmp
test
sbb
rcr
daa
imul
ins
mov
test
sbb
mov
xchg
shr
mov
add
in
mov
stos
shl
dec
imul
js
dec
and
loop
cwde
fld
(bad)
addr16
jmp
add
retf
fnstsw
cdq
xlat
inc
add
dec
pop
stos
loopne
cmc
test
xchg
(bad)
(bad)
jnp
sbb
in
jmp
pop
hlt
pop
jnp
mov
sub
dec
(bad)
mov
lock
mov
fdiv
mov
call
jp
cld
in
mov
gs
or
hlt
pop
xor
dec
fs
cmp
inc
aam
sbb
mov
push
sbb
xchg
jmp
sub
fild
sub
add
imul
mov
mov
and
aam
mov
imul
in
xchg
out
mov
xor
push
into
xchg
cmps
sbb
in
in
ja
cmp
cmp
cwde
pop
add
and
retf
fmul
mov
movs
push
xchg
es
movs
retf
jge
dec
cmp
int
jnp
mov
mov
rcpps
dec
inc
cmp
ret
sub
add
and
pop
inc
test
mov
stc
push
dec
pop
call
lods
push
popf
dec
push
jne
(bad)
fild
push
push
imul
mov
fst
jp
fwait
mov
pop
or
fcomp
sub
rcl
outs
jne
mov
add
lods
mov
loope
mov
add
leave
jno
rcr
sub
dec
sti
sti
sub
out
pop
adc
movs
in
imul
jecxz
jmp
jge
adc
aaa
iret
cmovnp
enter
int
mov
inc
cmp
mov
out
inc
pop
mov
inc
adc
repnz
mov
dec
cld
inc
(bad)
out
and
retf
sub
sbb
add
jne
xchg
pop
cmc
lahf
retf
push
ds
stos
jno
sub
in
jle
out
mov
or
pop
fisttp
int3
test
jnp
mov
mov
arpl
xor
dec
icebp
xchg
cli
adc
fmul
push
xchg
or
sub
retf
fstp
mov
retw
inc
movs
push
mov
xor
pop
inc
(bad)
std
sub
scas
mov
mov
or
dec
sbb
fs
push
jmp
adc
jo
retf
out
shr
ins
and
pop
stos
pop
cmps
cli
ret
jl
fnstenv
loop
int3
lahf
mov
fidivr
popf
adc
shl
mov
imul
fs
adc
adc
jne
xchg
and
jae
outs
add
add
inc
push
push
inc
ficom
imul
fisub
mov
cmp
push
mov
jb
add
mov
rcr
xchg
je
jmp
inc
mov
dec
gs
retf
sbb
repnz
test
in
scas
sub
adc
mov
fnstenvw
stos
adc
adc
rcl
scas
jo
sub
cmc
int
pop
jmp
dec
add
mov
push
gs
pop
lock
pop
push
sub
aaa
lods
rcr
int3
fbld
dec
jg
adc
loop
fiadd
lahf
pop
pop
jo
push
adc
sub
addr16
fs
sub
inc
xor
inc
into
xor
lds
lahf
leave
mov
sub
or
shr
lods
sbb
mov
mov
or
pop
out
lods
fucom
sub
fld
repz
iret
fxch
add
push
xor
cmps
movs
jae
add
inc
jmp
jmp
cmc
jmp
jecxz
iret
ss
scas
cmovae
jg
fadd
mov
ja
jo
aad
jg
xor
xor
(bad)
pop
inc
inc
xchg
das
mov
fdiv
hlt
and
faddp
not
xor
sbb
add
rcr
xchg
mov
(bad)
cmp
dec
add
fldenv
retf
adc
mov
mov
add
push
pop
xchg
push
push
pop
and
ret
xor
cmp
mov
add
out
and
lahf
jb
pop
pop
aad
xchg
dec
loope
mov
sub
inc
rcl
bound
fnstsw
inc
inc
inc
ret
gs
adc
pop
inc
lock
jp
sbb
es
ja
adc
dec
cmp
sti
sbb
push
dec
arpl
add
stc
lds
scas
or
es
jge
xor
test
gs
mov
xor
jnp
xchg
jnp
mov
sbb
lahf
sahf
push
das
ret
cli
xchg
add
fsubp
and
push
jnp
mul
lods
adc
pop
mul
add
jg
ret
les
mov
call
push
jae
das
push
dec
aaa
(bad)
mov
push
cld
cmp
inc
push
scas
std
add
cmp
pusha
cmps
inc
xchg
mov
test
xor
mov
jbe
jp
popf
stc
(bad)
retf
mov
push
jl
pop
mov
cmc
shl
cmp
movs
dec
xchg
dec
xor
sub
sbb
loope
ror
jb
aaa
test
jne
cmps
mov
fiadd
in
mov
pop
in
call
dec
cmp
or
clc
sahf
pop
jnp
add
inc
not
cmps
pop
lods
push
xor
mov
jns
sbb
in
mov
mov
test
mov
arpl
jmp
retf
xlat
push
add
cmps
in
data16
gs
inc
mov
jge
adc
jbe
movs
out
repnz
jmp
call
dec
sbb
mov
pop
addr16
sub
(bad)
fadd
popf
(bad)
pop
fstp
call
cmps
xor
data16
lahf
inc
js
adc
inc
in
aam
fidivr
cmp
(bad)
lock
mov
dec
adc
xchg
mov
cwde
jge
push
add
push
ins
fdiv
sub
xchg
dec
inc
cmp
lock
addr16
adc
dec
jmp
cs
mov
or
out
aas
jns
jp
add
xor
scas
sbb
or
aam
jae
push
movs
test
arpl
dec
fisubr
pop
add
mov
shr
and
pop
lea
mov
mov
lea
inc
in
mov
cmp
pop
cmp
(bad)
out
inc
adc
mov
cmp
cmp
push
push
leave
push
nop
leave
push
pop
repz
mov
push
push
repnz
inc
call
jg
repnz
rcr
mov
ficom
sti
(bad)
sbb
adc
es
xchg
cmc
cmps
or
sub
mov
fmul
add
or
push
jmp
and
pop
cmps
jmp
sbb
js
pusha
aad
lods
lods
es
inc
cli
or
pop
xor
mov
mov
push
dec
(bad)
xor
jno
mov
push
cmp
pop
push
sbb
inc
mov
xchg
push
fimul
test
mov
sub
mov
fst
cmp
inc
mov
inc
ficomp
xchg
sub
mov
rcl
mov
les
sbb
xchg
popa
dec
in
loop
ja
add
or
mov
repnz
pop
sbb
mov
fsubr
mov
or
and
push
hlt
jge
js
shr
add
jne
mov
imul
ja
ds
jns
fs
pop
mov
jne
pop
fsubrp
xchg
jb
sub
stc
dec
dec
arpl
mov
(bad)
or
mov
cwde
adc
sub
or
adc
fild
ror
mov
jmp
fidivr
xor
pop
mov
add
mov
inc
in
not
xchg
inc
pop
and
cmp
scas
or
test
xor
ins
adc
inc
pop
mov
dec
dec
je
js
in
add
aas
mov
cmp
jbe
fwait
add
pop
call
ret
out
std
fisttp
inc
sub
dec
int
push
mov
adc
mov
adc
rcl
dec
jns
ror
sub
push
popa
popa
jnp
cdq
fadd
scas
sub
and
bound
inc
lods
cld
xchg
add
icebp
push
clc
pop
sub
jb
pop
mov
cmp
enter
mov
sub
ror
add
movs
cmps
mov
jecxz
cwde
xor
hlt
iret
or
loop
mov
test
inc
mov
pop
stos
fcom
sar
push
js
mov
lods
jbe
aas
pop
sahf
add
ret
out
xchg
repz
popf
mov
data16
sub
sub
add
leave
iret
xchg
push
int
and
pop
test
int3
bound
ror
imul
in
mov
aad
out
mov
xor
shl
mov
or
pop
aas
mov
out
stos
sbb
push
mov
cmp
cmp
jns
xor
sub
inc
sbb
sbb
scas
in
retf
daa
jnp
stos
sub
xor
push
ins
jno
popf
mov
pop
sti
out
fldenv
xchg
cmps
jge
aam
mov
ja
ja
sbb
stos
add
add
xor
fs
mov
xor
rol
xchg
ins
push
push
mov
xchg
add
imul
cs
ja
adc
cmps
add
pop
mov
shl
pusha
and
add
mov
cmps
loopne
(bad)
sub
je
push
or
dec
aad
test
fild
loopne
cmp
add
fwait
retf
mov
inc
(bad)
cs
arpl
or
nop
stos
sub
pop
(bad)
jecxz
lock
leave
add
mov
aad
inc
sbb
jl
stc
neg
mov
adc
cmp
jns
call
adc
fist
adc
or
jo
outs
sti
cmps
(bad)
xchg
adc
ds
fisttp
gs
loopne
fld
cmp
call
mov
cmp
ret
add
jmp
xchg
out
jmp
sub
mov
aas
sub
fcomp
icebp
scas
outs
rol
fcom
mov
aaa
mov
dec
and
ret
jg
inc
ret
jmp
enter
push
out
sbb
outs
jmp
not
dec
fnsetpm(287
stos
lahf
dec
in
jl
pushf
scas
lds
cs
add
and
jno
add
push
mov
and
mov
jb
loope
jmp
adc
push
mov
or
inc
ins
jb
in
jo
int3
ss
xchg
and
dec
and
push
dec
cdq
into
or
cs
movs
dec
sub
sbb
cmp
jmp
mov
ds
xor
xchg
stos
outs
scas
xchg
lods
sbb
fbstp
dec
into
(bad)
lock
add
(bad)
cwde
pop
cmp
xor
stos
lods
push
dec
dec
rcr
jge
cs
inc
inc
mov
jp
rol
push
xlat
cmps
and
mov
mov
xchg
pop
out
sub
stc
in
mov
mov
jmp
outs
xor
push
mov
repz
or
(bad)
mov
pop
mov
fnsave
out
lods
xchg
mov
in
pop
xlat
or
fld
neg
cli
adc
jmp
push
imul
sub
je
imul
pop
les
pop
aaa
cmps
fwait
stos
icebp
arpl
aaa
push
arpl
ss
dec
jmp
(bad)
pop
xor
loope
dec
jns
out
ret
inc
cmp
mov
hlt
jmp
pop
sar
pusha
xchg
cmp
ror
cli
sbb
dec
cmp
and
sti
jecxz
in
test
and
lods
fnstenv
xor
sbb
and
in
xchg
add
mov
sub
mov
test
push
adc
pop
xor
add
dec
cmp
and
add
cli
loope
push
std
pusha
dec
xor
mov
mov
into
ret
je
cmp
inc
dec
or
or
adc
sahf
xchg
add
mov
mov
sbb
mov
push
push
inc
and
jnp
cdq
jae
lock
add
or
aad
leave
jecxz
dec
je
xchg
pop
pop
retf
inc
mov
dec
leave
adc
mov
ss
popf
mov
jb
inc
test
or
lea
cmp
jmp
adc
arpl
movd
dec
ins
lds
mov
pop
adc
rol
fs
inc
xchg
pop
push
inc
fst
xor
into
push
call
mov
out
push
imul
sub
rep
fnsave
imul
outs
mov
cdq
push
fadd
mov
mov
add
adc
push
mov
pop
mov
scas
inc
mov
dec
xor
mov
clc
add
bound
inc
and
jle
ret
dec
test
mov
push
mov
dec
lock
ror
xor
mov
add
cmp
rcl
jmp
leave
lea
push
ror
sub
dec
or
aam
pop
out
fimul
scas
push
ja
ficomp
daa
fxtract
pop
in
sbb
inc
add
(bad)
jb
xchg
clc
mov
lea
pop
das
push
test
jge
not
sahf
fcomp
stos
cwde
call
test
icebp
jo
jmp
push
dec
xor
cmp
mov
out
cmps
adc
jle
test
pop
pop
mov
cmps
jno
sbb
ret
cmc
cmp
jge
out
fs
cmps
mov
pop
cmps
sbb
jb
into
xchg
and
xor
xor
test
xchg
int3
(bad)
int3
sub
pop
leave
out
(bad)
leave
sti
mov
jae
ror
(bad)
xlat
mov
mov
jg
mov
jecxz
adc
jmp
pop
mov
mov
mov
lods
xchg
popa
sbb
enter
call
cmp
fdivr
loop
fs
cmps
mov
cmp
push
jmp
stos
out
sbb
fmul
in
sbb
(bad)
fdivr
movs
neg
jnp
arpl
jmp
jecxz
or
adc
adc
cwde
mov
dec
dec
(bad)
sub
dec
mov
das
es
sbb
outs
aas
and
popa
add
int3
outs
scas
jb
dec
imul
and
icebp
xchg
push
adc
dec
xor
imul
shl
stos
sahf
and
(bad)
mov
es
sbb
loopne
aaa
pop
cmp
(bad)
jmp
mov
adc
dec
inc
lds
into
and
add
jo
fsub
adc
cld
fwait
cmp
adc
mov
inc
ret
sub
retf
mov
xor
xor
sbb
nop
repz
test
bound
into
cs
(bad)
jmp
lock
sub
pop
fwait
jns
xor
fisubr
popf
push
fsubr
shr
dec
out
mov
jno
and
mov
xchg
jns
sar
fisttp
cmp
(bad)
dec
(bad)
jnp
in
and
mov
retf
sbb
xchg
(bad)
int3
lods
xchg
dec
jmp
add
clc
rcl
dec
ins
mov
mov
icebp
inc
jbe
data16
adc
xor
arpl
fucom
and
jbe
sbb
jno
cwde
lods
jmp
mov
mov
push
inc
shl
jo
out
icebp
add
mov
fwait
(bad)
cmp
out
mov
push
and
pop
loopne
cmp
jno
fldenv
inc
dec
jg
(bad)
cmp
push
loopne
push
or
mov
sub
fmul
pop
jl
xor
or
jle
or
ret
xchg
adc
or
dec
pop
mul
xchg
jmp
imul
mov
scas
fimul
scas
dec
and
in
scas
pop
stos
mov
mov
aas
inc
jne
adc
stos
dec
out
je
retf
frstor
das
mov
dec
or
pusha
outs
out
repz
jo
cli
test
nop
fprem1
mov
add
mov
mov
outs
xchg
hlt
mov
mov
mov
or
ret
outs
mov
(bad)
mov
fs
cdq
enter
(bad)
out
and
sti
jnp
adc
add
shr
mov
or
fldcw
cmp
jbe
jmp
sub
mov
repnz
mov
sub
fwait
cmc
push
sbb
mulps
sbb
sub
push
ret
mov
and
mov
jl
adc
leave
sub
ins
inc
and
inc
dec
and
les
iret
xchg
jge
xor
in
add
cs
sti
xchg
xor
sub
lds
jnp
cdq
(bad)
fcomp
or
inc
(bad)
repnz
lods
dec
xor
push
jmp
outs
wrmsr
mov
push
mov
mov
mov
fwait
jmp
outs
inc
mov
pop
sub
mov
dec
nop
sbb
lds
inc
mov
mov
mov
in
sbb
and
xchg
scas
test
mov
and
cmps
mov
cmp
sbb
hlt
scas
xchg
outs
adc
cmp
push
jle
mov
test
jnp
inc
lea
mov
inc
sub
icebp
xchg
int
in
sbb
out
sub
adc
scas
push
mov
les
dec
sbb
ins
inc
pop
or
push
push
cmp
daa
xchg
xor
cmp
xchg
imul
xchg
ficom
in
push
test
mov
xchg
ins
je
and
inc
fwait
jge
in
or
scas
xor
jmp
adc
in
jnp
fmul
xchg
ds
mov
push
or
(bad)
shr
(bad)
in
dec
out
cmps
in
rcl
lock
pop
mov
jge
arpl
add
add
mul
xchg
inc
adc
inc
push
(bad)
fdivr
add
cmp
xchg
mov
ror
pop
sbb
mov
push
outs
and
pop
ss
sbb
test
and
outs
mov
sbb
in
int3
add
int
rcr
or
cmp
sub
mov
sub
sub
les
inc
(bad)
movs
fnsave
dec
cmp
out
repz
psrlw
int3
and
test
inc
daa
fimul
scas
sub
push
xor
ss
xor
mov
xchg
repz
sbb
popa
test
or
frstor
lods
jns
ja
ror
dec
or
imul
lahf
push
(bad)
ficom
jl
mov
data16
aas
pop
jp
or
mov
sbb
add
lock
mov
repnz
ss
inc
adc
xchg
pop
mov
(bad)
movs
jmp
fdiv
jno
jmp
(bad)
(bad)
stc
mov
xchg
scas
repnz
and
jl
sub
cmp
scas
sub
xor
sti
sbb
test
jno
push
lods
xor
dec
rol
mov
imul
jbe
bound
xchg
int3
mov
add
dec
jo
push
push
aad
jle
jns
sbb
jle
arpl
xchg
push
add
cmc
cld
shl
add
movs
loop
jae
xor
loopne
xchg
mov
xchg
xchg
push
jo
adc
int3
das
push
xor
cmp
mov
call
mov
mov
mov
retf
cwde
jnp
call
lds
idiv
lock
stos
leave
xchg
cmp
add
sub
add
mov
repnz
push
out
mov
int
out
dec
and
test
add
lahf
popa
jnp
or
out
cmp
pop
and
xchg
and
loopne
mov
in
popa
retf
adc
popa
mov
(bad)
pop
jle
mov
test
cmps
pop
xchg
or
push
adc
jg
lahf
sbb
sahf
dec
jg
and
out
push
ds
in
outs
xchg
repz
xor
ins
out
pop
add
retf
ret
div
xor
aad
call
mov
inc
sub
xchg
mov
add
(bad)
aad
cmc
or
add
and
es
lds
jg
(bad)
and
pop
shr
sub
ret
ret
iret
in
jle
int3
ins
mov
pop
pushf
(bad)
mov
pusha
cmps
fimul
or
dec
(bad)
icebp
(bad)
gs
dec
xchg
jae
mov
or
arpl
dec
fcom
xor
mov
sub
mov
lahf
mov
outs
push
in
loopne
iret
push
shr
imul
inc
test
sar
push
stc
adc
sbb
mov
mov
repz
pop
fs
push
mov
cdq
pop
lds
adc
nop
dec
xchg
mov
jns
inc
(bad)
out
sbb
push
xor
hlt
inc
inc
add
sar
mov
repz
mov
stos
movsx
(bad)
cmp
div
loope
pop
neg
dec
int
jae
push
jmp
mov
cmp
idiv
push
fld
ret
aad
push
jge
iret
mov
lea
add
or
dec
push
fistp
lods
pop
inc
mov
mov
xor
inc
repz
xchg
daa
add
and
fs
sub
daa
(bad)
rol
aam
call
mov
clc
push
xchg
cmp
adc
mov
xor
cld
pop
and
sub
stos
stos
mov
xchg
fld
into
(bad)
cmps
fbld
jnp
dec
cmp
sbb
ds
and
ja
inc
pop
xchg
into
fwait
jecxz
enter
mov
(bad)
mov
arpl
fldenv
cmp
jecxz
scas
xchg
out
es
mov
cmp
push
test
imul
mov
jg
out
pop
inc
inc
cmc
cld
sbb
(bad)
xlat
fbstp
jmp
xor
mov
je
mov
push
pushf
push
outs
and
mov
inc
sbb
and
mov
inc
in
popa
mov
inc
stos
imul
jb
popa
pop
adc
push
retf
pcmpeqd
(bad)
icebp
fist
inc
aaa
xchg
push
push
and
cs
hlt
cmc
repnz
loope
shl
sar
aad
xchg
(bad)
cdq
lahf
fwait
jne
sub
sbb
push
sub
sbb
sub
bound
xchg
mov
mov
mov
test
sbb
lds
dec
and
pusha
inc
pusha
fimul
pop
dec
das
sbb
lea
push
movs
mov
push
xchg
nop
hlt
scas
loop
mov
or
outs
jmp
jb
pop
and
jg
lmsw
mov
in
jg
mov
bound
test
push
xor
(bad)
push
dec
js
sbb
mov
(bad)
or
push
dec
(bad)
pusha
es
outs
mov
inc
pop
xchg
loopne
jle
cmp
movs
xchg
xor
mov
mov
mov
ret
push
ins
(bad)
hlt
mov
xor
xchg
loopne
imul
add
ret
xchg
arpl
lods
xchg
inc
(bad)
xlat
mov
into
daa
push
or
add
and
dec
xor
adc
fsub
and
and
fsubrp
dec
call
xchg
ror
lods
cwde
mov
movs
pop
jge
xor
sub
or
loopne
push
pop
cmp
jle
adc
xchg
add
cmp
mov
cmps
test
mov
arpl
and
ss
enter
and
mov
mov
and
mov
fst
int3
inc
shr
sbb
leave
je
clc
xor
pop
mov
into
sub
xchg
or
les
sub
jne
ja
cmp
and
aad
or
out
and
out
aam
dec
test
imul
cmp
ja
pop
in
cmp
add
lahf
mov
lods
cmp
ret
fst
imul
repz
or
and
cmp
out
test
or
fcomp
sub
imul
es
test
and
inc
out
inc
dec
mov
add
sti
add
retf
or
fadd
stc
pop
push
sbb
lahf
and
call
sbb
pop
(bad)
sti
rol
rcl
cmps
jbe
lahf
cmp
cld
ins
jo
push
dec
mov
repnz
add
(bad)
dec
inc
sbb
leave
jg
retf
and
aas
add
enter
push
push
imul
outs
add
dec
cs
lock
in
jns
xor
dec
pop
xchg
out
sub
or
mul
xchg
out
repnz
ja
add
jmp
sbb
sahf
fmul
add
mov
in
mov
jl
or
xabort
or
jmp
hlt
mov
inc
mov
sbb
arpl
jno
sahf
in
xor
mov
daa
mov
sub
push
ins
or
in
scas
shr
cmp
loopne
add
pop
cmp
mov
int
xor
xchg
cld
icebp
pop
mov
mov
imul
jns
mov
sbb
imul
data16
push
in
or
jge
adc
sbb
(bad)
inc
pop
cmp
mov
les
enter
or
leave
mov
clc
and
cmps
xchg
icebp
out
(bad)
out
dec
pop
inc
xor
lea
xor
pop
jbe
fist
cli
sbb
cmp
xchg
xor
cmp
lods
ins
sbb
popf
push
(bad)
aas
sub
fmul
adc
scas
jmp
pop
in
sub
sahf
(bad)
loopne
xor
pop
(bad)
cmp
xchg
rcr
pop
xchg
outs
cmp
es
pop
retf
scas
test
movs
mov
sbb
loopne
fiadd
in
mov
sbb
inc
jmp
shl
nop
cmp
adc
fsubr
sub
in
ja
movs
lock
leave
sti
rcl
push
pop
add
mov
sbb
push
pop
vmovaps
cmp
xor
addr16
loopne
xchg
and
cli
jp
or
cld
push
and
or
test
jmp
mov
cmps
jle
push
jg
inc
sbb
leave
inc
lods
stos
sub
jmp
mov
(bad)
adc
out
aaa
adc
or
ja
fld
bound
popa
xor
mov
cwde
mov
pop
jmp
cmp
inc
ins
in
jae
xchg
xchg
or
jnp
push
repz
adc
ret
repz
retf
js
into
loopne
dec
std
jb
addr16
mov
add
and
pop
clc
pop
adc
xchg
sahf
out
sti
icebp
jo
cld
push
cmp
data16
faddp
sbb
mov
xor
push
sub
jns
pop
pop
mov
pop
rcl
pop
out
or
jo
sti
jae
dec
xor
scas
into
lock
nop
je
and
and
xchg
adc
repz
sti
dec
jae
xlat
out
pop
mov
jno
fsub
pop
fisub
fsub
push
mov
add
scas
(bad)
rol
xor
cmp
xor
cmp
push
in
ss
je
ins
stos
inc
add
leave
pop
cmp
pop
push
ficom
iret
aam
push
sbb
ror
jae
(bad)
in
(bad)
mov
push
and
cmp
inc
scas
jbe
neg
mov
sub
daa
in
mov
pop
dec
jnp
das
int
retf
pop
ss
fimul
iret
ficom
or
mov
loop
add
fild
movs
push
(bad)
jno
jmp
aam
jmp
jbe
sbb
add
mov
mul
jl
cmc
leave
xchg
aas
pop
test
(bad)
mov
ds
pushf
in
mov
or
jbe
scas
xchg
xor
jge
xor
and
push
adc
imul
fidivr
adc
int3
int3
push
movs
sbb
scas
add
mul
popf
cmp
mov
daa
and
out
scas
push
rol
cs
aas
xchg
xor
int
cmps
out
push
jmp
jmp
aas
adc
jns
or
je
push
fbld
aas
test
mov
push
sbb
inc
sub
popa
adc
push
dec
(bad)
jo
ror
adc
cmp
aas
in
and
aas
mov
fisubr
retf
mov
out
or
mov
pop
adc
mov
retf
dec
mov
fcmovu
es
adc
inc
test
xchg
adc
test
dec
or
nop
jne
pop
pop
or
call
mov
inc
jb
nop
out
push
out
push
hlt
inc
and
lods
(bad)
rsm
adc
into
(bad)
xor
add
pop
xor
imul
mov
pop
mov
mov
addr16
imul
fidivr
adc
mov
cmp
xor
xor
jg
rcl
outs
hlt
pop
cmp
mov
inc
repz
sbb
add
cmp
ret
mov
xor
inc
mov
xor
fisubr
jno
mul
mov
pop
stos
push
and
enter
mov
mov
sahf
push
hlt
in
inc
test
inc
aad
repz
ror
xchg
adc
and
push
test
jmp
xor
jle
popf
nop
das
xlat
inc
iret
in
jno
test
stc
mov
aad
inc
ficomp
aaa
or
jno
sbb
(bad)
push
idiv
lea
clc
das
call
cmp
ret
sti
ret
sbb
add
(bad)
hlt
dec
mov
mov
(bad)
and
stos
and
(bad)
out
sqrtps
mov
and
jbe
mov
ds
mov
mov
cmp
enter
jl
cmps
rcr
jle
js
mov
sbb
outs
cmp
(bad)
out
pop
push
sbb
jns
add
test
pop
sub
int3
lahf
jb
xor
repnz
xor
cmp
icebp
sub
or
jg
(bad)
xchg
fnstsw
mov
mov
push
mov
cmp
int
movs
out
imul
add
jg
in
addr16
mov
push
cmp
aam
dec
or
xor
sbb
enter
xor
xchg
sub
sbb
ret
cmp
mov
cwde
push
sub
in
enter
movs
(bad)
out
jnp
test
jp
jecxz
add
aaa
push
mov
jae
sub
jbe
retf
and
(bad)
or
or
ins
adc
sar
fsub
mov
jecxz
pop
div
test
in
push
movs
aas
pop
xchg
cmp
mov
daa
ja
fist
inc
push
jnp
popa
fild
xor
loope
pop
dec
in
mov
(bad)
mov
retf
rol
js
sbb
jecxz
lea
cmp
pushf
clc
jle
jne
jae
mov
and
es
sub
(bad)
movs
pop
les
mov
dec
lea
addr16
aas
test
push
ja
push
enter
(bad)
sbb
js
aaa
jmp
push
mov
int
stc
pop
rol
jns
push
inc
test
imul
loope
sub
lock
xor
movs
ins
jmp
pushf
aas
lods
push
push
nop
mov
adc
outs
inc
pop
shl
mov
jmp
sbb
scas
pop
or
mov
and
(bad)
addr16
fcom
dec
dec
push
adc
mov
test
(bad)
stc
pop
stos
cs
(bad)
scas
sub
iret
out
addr16
mov
and
cmp
xchg
jecxz
popa
test
inc
rol
or
test
out
jg
ja
mov
movs
ret
shr
out
xchg
sub
out
out
sbb
jae
stos
test
test
pushf
pop
mov
push
mov
push
lds
daa
cmps
fnstenv
repz
jnp
inc
cmps
enter
nop
popa
sub
cdq
xchg
dec
pop
and
lds
pop
push
pop
ds
iret
hlt
adc
pop
ins
jno
call
or
div
xchg
push
pushf
imul
mov
jle
ficomp
into
jne
adc
pop
sahf
ins
and
mov
stos
mov
pop
lock
(bad)
mul
push
cmc
adc
(bad)
cmps
or
mov
cld
pop
pop
jl
jno
xchg
adc
(bad)
fiadd
pop
mov
pop
ffreep
aad
cmps
pop
inc
aam
and
fnstcw
iret
xchg
movs
shl
sbb
cli
dec
push
and
dec
jno
jne
jb
or
xchg
es
ret
xchg
mov
out
sbb
lea
out
and
fadd
pop
jl
retf
loop
sahf
mov
pop
data16
push
fidivr
pop
mov
inc
xor
sub
cmp
sahf
pop
or
lea
shl
mov
imul
scas
es
cli
sbb
lahf
inc
push
fstp
cdq
pop
ror
jne
jp
adc
gs
les
add
outs
mov
outs
pop
enter
sbb
aaa
cdq
stos
enter
dec
jge
test
imul
push
out
mov
out
sbb
push
in
sub
mov
cwde
cmp
add
fwait
stos
dec
mov
push
jecxz
inc
mov
mov
loop
or
add
mov
pop
sbb
nop
cwde
dec
push
adc
add
and
push
cmp
add
xchg
data16
mul
ja
call
push
or
lods
in
cmp
sbb
inc
mov
cmp
in
ja
aaa
dec
inc
adc
ins
xor
leave
imul
jo
hlt
mov
ror
push
das
fidivr
push
in
sbb
add
(bad)
out
(bad)
pop
mov
jmp
idiv
cmps
jecxz
push
lahf
not
sbb
aaa
cmp
pop
jne
sub
mov
push
shl
ins
rcr
jmp
mov
inc
in
sbb
mov
aam
shl
test
test
std
push
test
repnz
cmp
aas
inc
into
mov
cmp
inc
xor
imul
stos
lods
arpl
call
inc
neg
add
jg
mov
std
mov
mov
add
popf
sub
cmp
xlat
adc
adc
(bad)
mov
mov
mov
and
(bad)
les
add
ds
push
ja
in
std
loop
aam
pop
in
push
xor
leave
dec
shl
in
bound
add
stos
inc
ret
mov
add
sub
add
mov
and
push
jle
and
cmps
add
mov
xchg
cmc
movs
push
jmp
xchg
shl
cs
adc
mov
inc
and
in
jp
sub
loop
lahf
sub
ds
bound
mov
cs
push
add
mov
call
jb
out
inc
mov
mov
push
pop
retf
inc
inc
gs
sub
mov
jo
(bad)
adc
jp
xor
popf
repnz
jp
sub
pop
and
push
loopne
and
ret
pop
add
fdivr
outs
aaa
cmps
shr
or
aam
xchg
loope
inc
mov
out
inc
mov
mov
mov
pushf
ss
push
leave
cmps
jmp
pop
and
sub
aam
test
into
mov
(bad)
and
mov
xor
ins
mov
adc
popf
fld
es
sbb
mov
nop
pop
dec
xchg
adc
mov
jmp
test
mov
or
sahf
sbb
xchg
cmps
jno
inc
gs
pop
test
push
imul
bound
out
neg
mov
mov
mov
(bad)
lock
ficomp
ins
fstp
pop
xor
mov
adc
lods
cld
xchg
inc
mov
push
idiv
lahf
fisubr
ret
push
xchg
rol
cmc
lds
sub
stos
arpl
pop
add
jne
mov
(bad)
out
xchg
stos
jg
arpl
call
out
dec
or
pop
pop
stos
sbb
mov
jmp
push
mov
sahf
jbe
dec
retf
(bad)
cdq
add
out
mov
addr16
je
scas
aaa
xchg
and
test
pop
xchg
arpl
inc
imul
mov
mov
sbb
inc
jmp
or
adc
xchg
xchg
out
xor
int
imul
leave
dec
sahf
inc
mov
mov
mov
inc
mov
push
mov
data16
adc
popa
call
jae
cmp
(bad)
mov
cld
cdq
push
or
iret
das
icebp
cmps
icebp
leave
retf
test
sub
or
xchg
int3
xchg
jnp
or
push
mov
sub
or
daa
jge
bound
aas
mov
bound
or
cmp
xchg
das
jno
xchg
aaa
mov
mov
push
push
ret
dec
jno
int3
imul
dec
lea
hlt
bound
sbb
dec
mov
fisub
mov
inc
xlat
popa
or
mov
sbb
pop
push
mov
pop
or
cmp
cmps
jge
dec
call
pop
test
sub
repnz
mov
xchg
std
dec
inc
sbb
adc
mov
pop
cs
and
jb
and
adc
cmp
pop
je
mov
(bad)
test
push
fldenv
push
movs
out
div
push
out
fstp
lods
int
sbb
push
xor
push
jmp
gs
pusha
movs
in
adc
push
inc
mov
mov
sub
shr
mov
xor
outs
inc
mov
dec
sub
sub
xor
sub
in
fisttp
or
jmp
sbb
(bad)
push
in
stos
dec
sbb
loop
push
imul
test
xor
fbstp
inc
cmp
cld
push
jbe
dec
sti
or
into
xchg
cmp
mov
sar
xor
sbb
test
mov
xor
mov
mov
cmp
fwait
je
popa
cmps
arpl
mov
xor
fisub
sbb
fstp
call
mov
imul
jge
gs
cdq
xchg
xchg
inc
test
mov
cmp
aaa
inc
cmp
ja
push
xor
in
jae
adc
call
push
test
repnz
pop
xor
adc
xor
sbb
movs
pop
mov
push
jecxz
push
mov
xchg
push
cmps
mov
jno
inc
jmp
cmps
(bad)
test
sti
mov
sti
ss
jo
add
dec
mov
push
and
out
rcr
jle
sub
adc
jl
or
lods
sahf
cmp
je
push
dec
xor
add
push
adc
test
and
or
xchg
mov
mov
jne
or
cmp
pop
mov
sbb
lea
cmp
hlt
je
out
jecxz
adc
mov
mov
scas
lods
fs
ret
inc
dec
push
jne
push
lods
inc
jno
jne
mov
test
push
push
mul
pusha
ins
ins
mov
test
mov
jne
push
fwait
mov
jne
cdq
aas
inc
or
push
aad
loope
cwde
mov
push
dec
mov
stos
and
dec
loopne
push
mov
mov
call
std
add
es
or
push
clc
cmp
sub
xchg
jge
push
xchg
mov
ror
imul
shr
retf
inc
mov
pop
(bad)
dec
push
xchg
popf
leave
outs
imul
stos
dec
xor
cli
neg
inc
nop
iret
outs
xchg
cmp
mov
repnz
imul
dec
push
iret
inc
ins
dec
pxor
popa
push
adc
inc
and
mov
xchg
loopne
popf
leave
mov
cmc
sti
mov
jge
push
jne
mov
(bad)
out
jnp
pop
push
test
dec
jl
jecxz
ror
out
dec
pusha
pop
mov
cmp
rcr
or
jle
mov
aaa
or
jl
js
mov
mov
jae
fimul
lock
or
(bad)
ins
dec
rcr
ins
xchg
pop
sbb
imul
jae
clc
adc
push
cmp
cs
xor
ret
dec
pushf
je
jns
push
dec
loope
ja
or
adc
or
push
in
xor
xor
test
add
xlat
shl
test
sbb
rol
mov
jb
enter
int
imul
mov
aad
clc
pop
inc
mov
(bad)
add
pop
ins
sbb
imul
in
movs
(bad)
sbb
pop
inc
add
adc
mov
or
repnz
xchg
jecxz
out
fidivr
cld
push
sub
lods
pop
or
out
push
xor
mov
or
(bad)
pop
inc
xlat
inc
sahf
push
popf
push
cld
dec
xor
test
sub
jmp
jns
mov
js
mov
jl
adc
mov
jno
lods
or
pop
or
push
sub
jl
or
cli
cmp
pusha
mov
mov
(bad)
out
adc
mov
jne
xor
std
cmc
push
push
daa
fs
push
push
dec
icebp
test
aad
repz
cmc
xchg
cmp
sbb
pop
popf
push
int
and
or
mov
jg
sub
(bad)
push
retf
in
pop
pop
(bad)
dec
jno
mov
push
jbe
cmp
jmp
mov
xor
sub
jnp
mov
sub
push
data16
pop
jns
sbb
movs
adc
ja
std
movs
fisttp
mov
cld
cdq
icebp
mov
movs
addr16
jne
fsubr
aaa
aam
pop
into
mov
and
push
sar
ds
sbb
imul
ror
adc
xchg
pop
enter
add
(bad)
in
mov
mov
mov
fxch
mov
jns
sbb
adc
cwde
push
push
daa
fild
dec
or
data16
sub
and
int
jbe
jbe
mov
fdivr
out
add
addr16
out
stos
mov
(bad)
cmp
das
add
dec
retf
or
add
mov
sti
pop
repz
cdq
es
push
jae
jae
mov
into
lds
call
cmp
mov
xlat
and
xor
retf
cmp
adc
dec
xor
fistp
add
repnz
std
and
mov
dec
repnz
fnstsw
pop
ss
inc
scas
or
mov
mov
xchg
xor
dec
(bad)
out
(bad)
jo
add
nop
call
cld
push
jns
or
sbb
mov
xor
inc
mov
sub
cmp
gs
lods
mov
add
mov
das
inc
jbe
pop
scas
and
test
ss
repz
mov
in
fsub
dec
dec
movs
jmp
cwde
jmp
test
mov
out
adc
ja
mov
test
ja
mov
nop
scas
test
fld
inc
in
nop
mov
push
(bad)
popf
sbb
pop
pop
adc
lods
int3
imul
shl
mov
mov
mov
dec
mov
shl
lods
add
mov
mov
cmp
mov
retf
pop
or
test
jecxz
cmps
das
stos
sub
lahf
jmp
or
adc
arpl
sti
pop
(bad)
jmp
adc
mov
cmp
scas
add
cmc
mov
cmps
jge
add
paddusw
or
and
jl
pop
push
or
addr16
in
cmps
xchg
(bad)
addr16
shl
add
xchg
imul
cmp
fcmovnb
sub
sbb
cmp
mov
cmps
xor
call
mov
pop
mov
enter
mov
and
add
adc
jle
(bad)
push
int
inc
inc
or
cdq
popa
adc
ficom
jmp
xchg
dec
(bad)
sub
jns
sub
push
xchg
mov
add
xor
inc
ror
push
add
stos
retf
int3
jle
ins
ret
pusha
mov
cld
pusha
jnp
sahf
cmps
inc
mov
mov
sub
cs
xchg
popa
daa
pop
sbb
cmp
es
lahf
in
push
add
mov
xchg
adc
cmps
lock
int
jmp
cli
inc
or
push
sub
mov
icebp
dec
sbb
nop
xor
xor
in
mov
fisub
aaa
jle
xlat
cdq
ficomp
aas
movs
sub
movs
outs
adc
pop
mov
sbb
call
mov
add
sub
lahf
and
(bad)
xchg
pushf
ins
xlat
stos
bound
lea
inc
pushf
into
push
inc
mov
cmps
scas
out
inc
push
stos
mov
jle
retf
inc
mov
mov
mov
in
pop
retf
cdq
xor
into
outs
(bad)
cmp
xor
outs
std
sbb
mov
outs
aam
sahf
xchg
mov
imul
adc
add
out
lock
inc
dec
fsubr
cmc
mov
push
inc
fs
out
sbb
sbb
mov
pop
aas
cli
sahf
jnp
lahf
pop
test
clc
std
dec
sti
dec
mov
cmp
rcr
ins
push
rol
sub
addr16
stos
cmp
lods
mov
xchg
out
shl
mov
popf
(bad)
arpl
mov
or
mov
aam
jp
adc
(bad)
mov
popa
pusha
(bad)
stos
push
inc
scas
mov
aad
outs
sub
push
xchg
in
sbb
sub
sub
push
scas
clc
imul
int3
pop
mov
push
pop
and
adc
loope
lea
clc
mov
les
jmp
movs
je
push
test
xchg
mov
sub
clc
shr
sub
inc
(bad)
ret
push
xor
mov
jns
enter
retf
ins
int
push
test
pop
mov
shr
cmp
popf
outs
ficom
in
jb
add
shr
pushf
(bad)
sbb
cmps
pop
jno
xchg
sub
test
and
ror
sahf
sub
pop
dec
jl
in
pusha
xchg
lahf
jp
call
mov
xchg
inc
test
ja
add
jp
out
push
sbb
inc
xor
into
or
sub
ja
sar
nop
das
into
mov
jno
or
mov
mov
push
hlt
cmc
sub
int3
inc
ffreep
jle
fidiv
cmc
outs
cmp
xor
adc
movs
push
daa
imul
push
inc
aas
adc
fcom
imul
mov
int
pop
inc
cmps
daa
loope
xchg
xchg
lahf
push
bound
ss
push
push
xor
cld
push
jecxz
or
jb
push
jmp
into
add
jb
lea
xor
cmps
inc
ja
fxch
call
call
dec
mov
mov
je
and
mov
ror
mov
jmp
jns
and
lods
out
dec
into
cmc
xchg
fild
jns
jbe
iret
xchg
enter
push
cmps
stc
(bad)
dec
adc
es
nop
sbb
mov
dec
out
dec
or
fild
loopne
sub
iret
and
jecxz
inc
xchg
lahf
sbb
stc
add
or
fnsave
(bad)
aad
xor
das
ss
clc
push
outs
pop
nop
popa
aaa
push
retf
test
cmp
in
daa
dec
jmp
push
mov
mov
dec
call
or
sub
sbb
jno
dec
push
xchg
scas
fadd
mov
add
pop
mov
inc
das
mov
cs
outs
in
push
xor
call
mov
adc
add
dec
cwde
enter
out
popf
jae
inc
(bad)
sti
mov
(bad)
lock
out
jmp
rcl
mov
loop
movs
sahf
xchg
call
rep
and
or
and
(bad)
in
or
pop
repnz
jecxz
cdq
or
adc
aaa
or
fisubr
imul
adc
popf
xchg
cmp
jp
mov
mov
sbb
std
movs
test
pop
or
and
mov
add
aaa
dec
add
push
pop
add
bound
mov
(bad)
cdq
mov
push
mov
rcl
xchg
inc
fdivr
into
inc
push
mov
cdq
inc
and
aaa
in
scas
(bad)
(bad)
in
or
mov
out
pop
in
es
arpl
adc
popa
add
push
in
in
sbb
mov
inc
daa
cmp
ret
stc
xor
je
into
jae
gs
test
push
outs
mov
(bad)
dec
dec
les
sbb
adc
iret
push
fistp
loopne
pop
sbb
or
adc
in
mov
arpl
bnd
mul
and
add
push
adc
les
outs
jle
mov
jmp
push
adc
mov
ret
clc
gs
scas
ror
mov
addr16
repnz
mov
mov
test
(bad)
dec
mov
js
mov
mov
jecxz
lahf
mov
cmp
aaa
cmps
cmps
mov
fldenv
adc
xchg
popf
repnz
cld
cmp
ins
addr16
sub
dec
aam
fwait
push
pop
popf
mov
ror
or
pop
jge
inc
test
and
fld
sbb
or
jb
or
xchg
mov
lock
ja
cmp
pop
add
or
js
cmp
lds
or
call
pop
push
in
and
aam
inc
repnz
add
in
(bad)
pop
aad
into
pop
call
mov
push
xchg
jp
mov
ds
clc
cmp
push
aas
movs
fwait
ret
pop
dec
fsubr
sbb
cmc
popa
(bad)
mov
and
lock
mov
mov
cmp
mov
(bad)
mov
loop
push
cmps
arpl
inc
inc
cmp
xor
mov
hlt
loop
loopne
mov
fwait
or
sub
jmp
mul
pop
lds
test
sbb
mov
inc
cmp
imul
or
mov
je
fidivr
or
nop
outs
int3
mov
and
in
sbb
js
out
std
push
sub
mov
les
es
push
fwait
lahf
push
scas
add
cmp
and
mov
and
mov
mov
lods
adc
cs
jl
xor
xor
fwait
pop
xchg
and
fld
mov
jno
lds
movs
call
bound
shr
sub
cmc
(bad)
pushf
mov
cdq
xchg
imul
add
mov
xor
into
scas
(bad)
cmps
nop
cmc
mov
push
fcomp
aas
nop
imul
mov
rsm
dec
jae
xchg
ds
mov
cmp
imul
mov
leave
pop
out
sub
setnp
push
iret
xchg
mov
aas
in
rcl
hlt
loop
jmp
mov
int
neg
mov
mov
icebp
jp
adc
pusha
sahf
not
scas
aam
es
add
test
or
shl
jge
jecxz
les
in
shr
pop
ret
retf
push
out
cmp
cmps
out
jns
int
iret
nop
cmp
cs
inc
jno
xchg
xchg
cmc
pop
clc
jb
lods
call
call
jg
xor
cmp
sub
inc
inc
add
outs
loopne
mov
xchg
data16
repnz
cs
imul
jns
inc
sti
sti
cmp
jmp
popa
lds
imul
cmps
cmp
std
and
push
rcr
das
(bad)
mov
push
dec
push
jle
(bad)
enter
xchg
jmp
std
fsub
mov
(bad)
mov
fsubr
push
mov
add
cmc
jmp
cmp
rcl
and
sbb
sub
int3
fidiv
loopne
sub
adc
or
push
mov
retf
outs
lods
dec
push
xchg
xorps
outs
(bad)
adc
push
or
bound
jne
xchg
add
cmc
jns
ja
push
dec
adc
neg
sub
cld
sub
mov
dec
sub
xchg
out
fwait
and
jmp
cmp
lds
push
shl
dec
mov
movs
add
sub
xor
jle
dec
jns
mov
call
mov
pop
lods
dec
mov
jo
data16
int
mov
(bad)
dec
in
hlt
mov
sbb
das
imul
cmp
fsubr
jbe
scas
add
in
add
popa
mov
nop
mov
out
fstp
adc
ret
inc
aad
mov
mov
cmps
mov
xchg
pop
push
xchg
mov
daa
jg
xchg
or
push
inc
xchg
pusha
add
and
pop
call
loope
mov
xchg
cli
xor
xchg
cs
push
xchg
gs
call
cwde
sar
mov
dec
js
bound
pop
cmp
sbb
or
arpl
mov
lods
repz
ret
jecxz
hlt
bound
xor
adc
cmp
hlt
add
sbb
loopne
push
add
jmp
jmp
add
cmp
jb
icebp
mov
shl
fild
inc
jp
inc
mov
iret
xchg
xor
(bad)
cwde
ss
or
dec
pop
adc
xor
lods
dec
mov
shl
xor
push
mov
cmps
ret
jo
lock
mov
lods
jmp
or
loop
icebp
add
les
(bad)
cwde
outs
mov
fwait
or
pop
mov
sub
mov
mov
loopne
mov
pushf
jb
addr16
lds
data16
adc
mov
js
xchg
jl
push
mov
xchg
test
data16
pop
sar
fimul
mov
or
dec
inc
mov
pop
dec
mov
adc
popf
adc
adc
std
sbb
push
push
shr
gs
cmp
jecxz
mov
sub
xor
test
mov
push
popf
xchg
popf
jnp
inc
addr16
jge
inc
xor
push
xor
sub
cdq
shl
pop
and
mov
xchg
shl
ins
mov
popf
je
aam
ins
loope
mov
and
adc
outs
cmc
hlt
mov
add
scas
xor
dec
push
imul
jmp
xor
out
test
into
add
inc
jl
and
not
inc
bound
add
push
and
jbe
jmp
repz
adc
ficomp
pushf
daa
mov
cmps
mov
dec
mov
ins
mov
adc
mov
mov
mov
mov
push
in
sub
ins
mov
sub
jg
push
pop
mov
sub
xor
or
fisttp
push
repnz
sahf
xchg
in
outs
stos
not
xchg
push
mov
dec
xchg
push
cmp
add
fst
icebp
stc
inc
sbb
adc
jp
jns
mov
xor
push
mov
cmp
push
test
adc
js
das
dec
lahf
push
jne
call
xor
retf
iret
cld
rol
sbb
adc
retf
mov
mov
mov
mov
mov
aas
cmp
outs
cwde
popa
push
popf
inc
jnp
stos
sub
inc
xor
sahf
pmulhw
fnsave
pop
outs
in
outs
or
xor
lods
test
je
pop
ins
je
adc
aam
xchg
bound
sbb
cdq
or
repz
lods
sbb
lods
pop
iret
scas
outs
leave
bound
mov
loope
mov
jge
push
adc
(bad)
sub
jnp
pop
jp
lods
rcl
xchg
(bad)
(bad)
enter
adc
les
sbb
scas
mov
ja
push
add
stc
es
mov
sub
in
cmp
iret
imul
pop
ss
popf
lds
mov
inc
repnz
mov
and
jmp
jg
adc
ja
sub
push
push
ret
cdq
rol
push
shl
or
pop
xor
je
mov
push
adc
fcmovb
mov
fdiv
inc
imul
add
mov
lds
fs
mov
les
dec
loop
icebp
xor
test
test
jmp
sbb
aam
cmp
mov
adc
outs
loope
nop
sbb
loopne
dec
ficomp
inc
jmp
loop
add
adc
call
sub
test
div
or
or
popa
das
jge
adc
stos
repnz
mov
retf
add
call
int3
pop
jmp
in
aam
and
adc
pop
mov
into
leave
repnz
enter
(bad)
out
test
jmp
pop
(bad)
shr
pop
push
aaa
out
jno
xor
fdivr
mov
sar
sbb
leave
fcom
sub
in
or
into
repnz
xor
sub
sub
ret
std
test
in
or
fild
popa
add
sub
iret
in
cmp
xor
rol
push
cmp
rcr
mov
(bad)
jne
or
pop
into
pop
inc
mov
dec
nop
jp
push
cli
lock
inc
pop
int
cmp
push
dec
xchg
xlat
int3
mov
push
xlat
sbb
nop
push
jnp
test
pop
sar
adc
jbe
pop
push
fsub
dec
sub
add
mov
xchg
xchg
pop
cmp
push
ret
fmul
cmp
icebp
pushf
and
mov
jecxz
pop
dec
repnz
jae
jl
out
loop
lahf
repz
xchg
loop
fimul
xor
push
cmp
retf
ja
fstp
std
and
retf
out
pop
(bad)
mov
mov
shr
shl
sbb
sub
call
mov
dec
mov
inc
adc
fadd
push
pop
sar
adc
je
in
les
out
inc
fwait
and
adc
ins
adc
rcr
jnp
inc
inc
jb
loopne
aam
push
adc
test
je
(bad)
and
mov
push
pop
xor
jns
jmp
inc
add
clc
movs
inc
sbb
mov
dec
jle
push
cwde
dec
and
call
inc
loop
ds
inc
aaa
mov
pushf
mov
fwait
inc
pop
xor
ins
mov
cmps
out
paddusb
in
push
jl
fiadd
mov
movs
sbb
fbld
jg
and
mov
push
mov
out
(bad)
add
mov
outs
and
xlat
sti
mov
fidiv
repnz
ja
and
pop
jmp
in
dec
cmp
lods
push
call
add
add
mov
push
add
pusha
cmp
push
fcomp
sub
push
or
cmp
mov
dec
or
pop
in
xchg
dec
mov
or
xchg
sbb
jne
xchg
jnp
cmp
lods
xchg
push
lods
push
into
scas
and
push
xor
jb
jmp
les
imul
add
iret
lock
xor
mov
adc
push
scas
mov
xchg
inc
add
mul
and
jecxz
sbb
pop
or
adc
(bad)
in
sbb
pop
pop
push
jl
or
out
cmps
iret
and
addr16
nop
pop
dec
jno
aaa
arpl
dec
in
pop
dec
dec
cli
mov
dec
(bad)
fimul
ja
adc
scas
mov
jl
in
add
lock
stos
sub
loop
cs
mov
cmp
test
and
mov
sbb
sub
js
sbb
data16
and
mov
std
test
ss
mov
sbb
mov
push
and
jmp
add
push
stc
inc
mov
stc
xor
ins
rol
xor
test
xor
movs
fiadd
nop
mov
imul
sub
lock
sub
cdq
jmp
dec
mul
or
fldl2t
add
std
jge
fisub
imul
ins
cmp
mov
fistp
jle
jmp
lods
in
pop
and
xor
out
xor
sbb
jecxz
(bad)
mov
fstp
ficom
mov
xchg
and
adc
pop
movs
adc
mov
lods
inc
mov
dec
das
jnp
and
repz
sbb
mov
das
push
cmps
sbb
mov
shl
test
clc
or
xor
mov
outs
(bad)
jmp
lahf
xlat
pop
call
fadd
or
and
mov
(bad)
xchg
bound
inc
or
dec
movs
bound
iret
add
mov
sbb
repnz
lea
jb
(bad)
mov
and
call
pushf
xchg
sub
pushf
stos
in
cli
addr16
loopne
cdq
mov
out
ins
scas
mov
out
mov
jmp
adc
enter
xor
cmp
test
mov
and
stos
sub
cmp
mov
loope
(bad)
hlt
push
jl
inc
push
sahf
xchg
mov
cmp
mov
dec
rcr
pop
mov
xor
adc
inc
cmp
sub
rcr
shl
mov
push
adc
cmp
lods
ret
stos
pop
mov
xchg
sub
or
jbe
fist
js
loopne
movs
jmp
stos
fwait
sub
in
pop
inc
inc
mov
int
mov
jg
(bad)
hlt
in
pop
lea
int3
jnp
cmps
jge
pop
push
cmc
mov
out
sbb
jmp
inc
retf
cdq
jae
mov
sahf
enter
scas
popa
xchg
repnz
push
cmp
sahf
ds
mov
shr
mov
cmp
ja
sub
xchg
lock
xor
aaa
inc
xor
(bad)
sbb
pop
jmp
mov
jp
xchg
pop
inc
loop
push
sti
inc
sub
adc
pop
test
icebp
jg
arpl
cmps
jno
dec
test
ja
cli
jne
sbb
stc
push
sbb
stc
mov
cmp
push
out
test
sub
xchg
mov
(bad)
rcl
xchg
cmc
mov
mov
dec
mov
sub
fdivr
sbb
mov
(bad)
and
fisub
push
repnz
cmp
enter
mov
sbb
inc
sbb
call
loop
lock
clc
adc
mov
mov
inc
scas
shr
bound
cmp
out
xor
add
popa
push
inc
fiadd
xchg
lds
sar
or
adc
push
mov
jb
fimul
mov
inc
cmc
cwde
dec
pop
dec
test
mov
retf
push
mov
sbb
test
push
mov
and
loope
in
rcl
rcl
mov
fistp
fist
mov
adc
aas
mov
xor
rcl
cmps
lea
pop
pop
pop
xor
stc
and
cli
test
mov
rcl
in
dec
inc
inc
fidivr
div
pop
sti
inc
sar
inc
out
dec
das
pop
call
dec
inc
std
adc
xchg
and
pop
iret
and
push
xchg
dec
mov
ss
jno
cmps
data16
lods
mov
push
pop
cmp
xchg
mov
xlat
test
sar
test
or
into
cs
xor
fisttp
or
popa
mov
not
out
sbb
cmps
int3
aaa
rcr
mov
out
push
(bad)
loopne
and
inc
push
(bad)
daa
popa
out
in
xlat
and
scas
cmp
adc
ficomp
fs
push
cdq
push
ss
retf
stos
ss
jne
dec
and
or
pop
sbb
sbb
inc
xchg
dec
inc
jmp
mov
or
xchg
jmp
jecxz
xchg
cmp
ret
dec
lea
jns
cli
movs
clc
int
icebp
push
fwait
and
popf
mov
add
outs
push
retf
call
xor
test
test
inc
fcmovu
xchg
arpl
and
adc
ret
iret
inc
arpl
into
daa
imul
clc
jo
sbb
loope
jbe
hlt
sti
xor
sub
aaa
cmp
rcl
mov
push
pusha
cdq
(bad)
mov
cli
das
sbb
outs
(bad)
leave
inc
not
or
push
mov
hlt
mov
inc
cld
mov
ret
jg
mov
jmp
sbb
das
inc
dec
jne
rcr
ret
mov
sub
stos
ins
mov
nop
pop
jge
fstp
(bad)
popf
sahf
xchg
sbb
inc
xor
retf
ins
nop
out
iret
fprem
and
in
and
js
inc
shr
ror
lea
imul
mov
push
jae
pushf
fsub
mov
add
push
repz
stos
adc
imul
cmc
push
xchg
mov
and
cmp
jne
adc
push
add
sar
ins
sub
out
jns
inc
xchg
jmp
push
mov
lds
adc
aaa
(bad)
retf
dec
and
xor
mov
add
aaa
mov
xchg
je
sahf
fdiv
push
mov
movsx
xchg
cdq
inc
xchg
cwde
das
(bad)
into
xor
and
ret
pop
jmp
js
push
push
cmc
or
ror
pop
sub
ja
out
xchg
pop
cmp
cmps
mov
push
adc
fs
(bad)
and
sub
dec
out
std
xchg
inc
js
outs
loope
pop
call
(bad)
sbb
jnp
jbe
dec
outs
adc
cmc
mov
cmp
jg
sbb
jnp
adc
push
out
mov
mov
pop
push
clc
jmp
pop
xor
sar
imul
pop
cld
arpl
or
mov
fsubr
mov
jecxz
mov
xchg
clc
hlt
and
mov
jns
add
xor
sbb
ret
jne
je
int
pusha
test
cwde
adc
lea
sub
out
pusha
mov
jbe
ret
adc
mov
repz
add
data16
or
movs
sub
sub
mov
(bad)
sbb
mov
xor
sbb
sub
sbb
fild
das
es
push
inc
adc
mov
fdiv
pop
add
add
fiadd
add
sub
fistp
mov
push
mov
iret
rcl
push
hlt
test
push
fcmovu
cmp
leave
sar
test
mov
mov
cmc
xchg
pushf
inc
pshufw
add
test
dec
inc
xor
pop
sbb
cmp
mov
jne
xor
aad
xor
xchg
push
cli
cmp
rcl
mov
popf
das
dec
mov
inc
inc
call
jae
ud0
jo
sbb
inc
inc
cdq
stos
sub
shld
add
repnz
std
pushf
inc
gs
add
clc
sbb
shl
mov
mov
pop
mov
(bad)
repnz
cmc
outs
mov
jmp
gs
(bad)
mov
mov
xlat
xlat
jo
inc
inc
cwde
and
xchg
push
lods
xchg
adc
enter
xor
and
retf
inc
sbb
leave
imul
and
mov
call
(bad)
rep
aas
add
xor
(bad)
aas
sbb
cdq
mov
fnstcw
call
xor
mov
jne
adc
cmc
pop
mov
lock
bnd
cmp
repz
dec
or
xor
mov
mov
and
pushf
sar
idiv
inc
mov
ja
sub
cmps
xor
pop
enter
xchg
pop
cmp
(bad)
daa
shl
cdq
out
pop
test
xchg
hlt
repz
push
jno
mov
int
cmp
(bad)
sub
push
aad
pop
mov
retf
inc
xchg
repz
in
ins
clc
xor
arpl
push
or
sub
popa
jo
mov
aas
pmaxub
xchg
mov
sbb
ret
call
jl
lds
ja
lods
test
inc
imul
and
mov
fcmove
pop
mov
pop
push
fbld
imul
cmp
sahf
sub
pop
dec
hlt
push
es
pop
mov
add
mov
jmp
or
pop
cmp
jnp
adc
and
fcmove
jae
arpl
mov
cmp
mov
push
pushf
push
mul
mov
out
push
dec
xor
pop
std
add
mov
enter
fdivr
rol
cmps
sub
lods
mov
jb
loop
fidiv
mov
aaa
jno
sbb
and
mov
pop
loope
sub
ds
mov
daa
mov
sbb
inc
test
jp
xor
pop
(bad)
lea
cld
jno
and
adc
enter
out
inc
push
out
stos
inc
stc
push
xchg
imul
bound
dec
mov
mov
xor
mov
aad
xor
mov
fst
stos
mov
push
push
push
mov
adc
jo
adc
mov
(bad)
or
cmps
xchg
pop
xchg
pop
loope
sub
leave
fldenv
jge
xchg
out
push
fimul
cmp
mov
or
pop
leave
add
pop
mov
rcl
scas
pusha
mov
lahf
ret
dec
fstp
cdq
js
ins
or
mov
push
and
mov
push
inc
xor
int
inc
daa
daa
push
in
or
(bad)
cld
mov
jecxz
dec
test
aam
daa
xchg
mov
mov
js
fild
stc
fld
test
lods
and
arpl
adc
jp
cmc
adc
mov
xchg
sub
and
mov
out
fsubr
out
cmp
icebp
jecxz
mov
cli
xchg
cmps
ins
retf
and
mov
fwait
xor
mov
sub
repz
xchg
adc
dec
dec
pop
stos
mov
ins
jmp
out
fld
inc
imul
cmp
mov
push
fdiv
rcr
scas
outs
mov
outs
pop
xchg
pusha
addr16
add
das
xor
je
ficomp
rcr
retf
je
xchg
mov
pop
cmp
cmp
mov
jb
pop
fs
mov
xchg
neg
bound
outs
xor
cmp
cwde
loope
mov
data16
scas
popa
cmp
(bad)
push
sbb
(bad)
stos
adc
push
out
outs
int3
xor
arpl
jp
loope
shl
xchg
push
and
push
xor
invd
aaa
sbb
push
pop
sub
arpl
lea
sbb
fdiv
jge
mov
push
mov
xchg
jecxz
cmp
popf
or
fiadd
jmp
out
adc
dec
jae
dec
adc
inc
push
mov
popf
sbb
xor
push
cmp
sub
retf
xor
add
out
jg
xchg
ss
push
test
jge
dec
ins
ins
sbb
xchg
dec
adc
in
shl
les
and
lds
and
xchg
mov
cmp
fidivr
inc
xor
or
and
dec
aam
add
cmp
pop
sbb
sbb
jno
imul
push
daa
adc
xchg
(bad)
jb
aas
inc
mov
(bad)
into
call
jnp
pop
xor
cmp
and
xchg
out
push
xor
or
sub
jmp
pop
ins
stos
rol
daa
(bad)
cwde
xor
icebp
sub
gs
int
jle
imul
sti
iret
pop
mov
jne
enter
stos
into
inc
pop
jb
xor
cs
add
mov
jne
add
test
aad
(bad)
push
popf
sbb
adc
xor
(bad)
daa
pop
xor
ins
out
push
adc
push
pop
leave
mov
push
jne
mov
adc
pusha
dec
push
adc
pusha
adc
(bad)
xchg
bound
or
and
xchg
push
adc
jmp
sbb
mov
adc
cmp
out
out
inc
pop
inc
mov
adc
sbb
mov
xchg
pop
jae
or
jge
pop
mov
sbb
cmps
stc
pop
lods
je
loope
inc
mov
cmp
push
xor
mov
cmc
in
lea
mul
daa
adc
cld
in
fs
aad
jle
test
in
lds
sti
push
aas
xchg
jmp
and
clc
fst
xor
stos
test
clc
mov
nop
mov
js
xchg
mov
retf
mov
iret
int
jbe
cdq
inc
sbb
or
stc
sub
add
dec
sahf
lahf
adc
lahf
xor
adc
int
adc
repnz
inc
mov
shl
mov
stc
mov
sub
int3
dec
mov
inc
das
push
xor
jle
test
sar
stos
adc
ins
out
mov
or
jae
call
lea
adc
mov
lock
push
je
iret
mov
ins
mov
retf
(bad)
es
ins
push
lods
push
jmp
xchg
cs
inc
outs
inc
bnd
jle
jns
xchg
cmps
jb
jecxz
cwde
pop
adc
sahf
call
pusha
call
(bad)
aas
lea
cmps
mov
mov
xor
and
dec
add
popa
(bad)
outs
test
mov
jle
je
push
adc
enter
aad
cmps
and
jl
(bad)
jae
into
pop
add
ja
repnz
mov
mov
sub
jnp
xlat
fisttp
and
jo
vrsqrtps
iret
ret
cmp
cmp
xchg
jns
test
add
push
push
mov
mov
jle
push
mov
jmp
cmp
das
mov
xor
add
mov
sahf
(bad)
aas
pop
pop
adc
mov
inc
icebp
es
mov
jno
and
lods
push
push
push
in
xor
shl
cwde
mov
mov
addr16
push
rol
sbb
mov
sbb
outs
aam
jp
mov
cld
movs
cmp
or
pop
in
mov
push
icebp
jp
call
imul
xor
aaa
mov
cmps
aaa
lock
cmp
jnp
adc
loop
(bad)
cs
int
jbe
mov
dec
dec
dec
adc
jl
loopne
jnp
lahf
cmps
lea
(bad)
dec
jp
cld
xchg
dec
xchg
bound
pop
shl
dec
dec
rol
in
cli
dec
inc
sbb
mov
stos
ret
add
jo
mov
xor
mov
ffreep
inc
pop
mov
and
add
adc
or
call
fiadd
out
(bad)
loop
pop
gs
ds
pop
sbb
inc
pop
mov
sbb
sbb
aas
adc
cmp
jge
xor
adc
fisttp
sbb
stos
dec
fcom
pop
sub
add
sbb
push
push
jmp
sbb
pusha
dec
mov
lock
jnp
and
jns
cmps
frndint
or
rol
das
loopne
mov
mov
pop
mov
or
sub
fdiv
hlt
mov
sbb
adc
loop
jge
retf
ds
sub
xlat
scas
and
out
sbb
movs
pop
pop
or
or
dec
sub
sub
mov
mov
xchg
adc
inc
out
xchg
jne
mov
sub
int3
cli
cdq
data16
dec
enter
movs
add
(bad)
repnz
test
fisttp
js
cwde
bndldx
stc
retf
xor
inc
js
shl
bound
mov
mov
dec
pop
cwde
inc
mov
ja
xchg
push
mov
(bad)
sar
jmp
push
mov
scas
push
int
and
lahf
les
aas
call
repz
dec
inc
scas
jmp
and
or
popf
loop
cmps
fcomp
pop
test
mov
mov
dec
movs
(bad)
mov
clc
pop
test
fistp
out
mov
(bad)
xor
add
nop
mov
sahf
ret
jb
mov
lods
mov
inc
push
inc
sub
sub
pop
jmp
test
lods
icebp
jmp
sahf
xor
dec
jl
inc
sub
add
sub
aam
and
cld
mov
loop
cli
(bad)
stos
xor
mov
icebp
mov
xor
fidiv
retf
psubq
int3
lods
mov
dec
and
lahf
loope
ror
sub
fdiv
mov
mov
xchg
adc
fdivr
arpl
cdq
int3
sub
pop
rcl
jmp
push
retf
add
je
sub
push
(bad)
push
lods
or
ret
sub
mov
jecxz
mov
scas
jnp
push
inc
add
mov
inc
sub
mov
mov
inc
and
fs
sbb
xchg
or
clc
sub
and
or
int3
loopne
adc
retf
bound
xor
pop
addr16
sub
sub
push
inc
jge
xor
mov
lds
pop
inc
xchg
fsub
js
in
adc
mov
mov
or
loopne
popa
shl
pop
inc
or
stos
and
inc
test
mov
adc
xchg
or
test
inc
jnp
add
mov
xchg
cmp
mov
idiv
stos
dec
ja
retf
inc
xchg
mov
xor
cmc
and
or
mov
pop
test
xlat
bound
mov
cmp
icebp
(bad)
add
xchg
aam
shr
scas
push
test
cmps
clc
mov
cs
test
(bad)
int
stos
cmp
cmps
adc
cli
ja
gs
out
stos
aad
xchg
sub
sub
xchg
int3
pop
mov
pop
xor
fmul
inc
stos
sar
pop
in
jle
mov
jmp
mov
add
push
jmp
idiv
adc
cmp
inc
call
and
pop
pop
fnstenv
mov
(bad)
arpl
int
shr
fstp
push
daa
in
and
mov
cmps
inc
jmp
ins
out
fstp
sub
and
mov
push
xchg
cs
(bad)
xor
xchg
jno
cmp
(bad)
js
pop
imul
jl
jbe
cmp
sub
jp
jmp
push
xchg
mov
shl
ins
pop
sub
inc
mov
adc
adc
inc
push
int3
cmp
or
sbb
dec
ffree
cs
loopne
in
leave
cmp
xchg
fsubr
call
xor
mov
push
test
cmp
jp
ret
out
call
ins
mov
pop
mov
daa
icebp
cmp
mov
sbb
push
movs
mov
jne
adc
dec
ret
mov
jle
cli
sub
sbb
out
aas
pop
sti
out
push
push
sbb
leave
mov
call
sub
mov
and
out
dec
mov
mov
cmp
or
sub
loope
js
mov
or
outs
(bad)
addr16
mov
loop
pop
push
xchg
(bad)
adc
(bad)
fistp
popf
dec
inc
push
or
icebp
scas
push
jg
mov
(bad)
jge
inc
mov
rcr
push
or
popf
bound
(bad)
add
pop
jmp
and
dec
mov
(bad)
mov
fcomip
pushf
jg
mov
inc
ret
mov
add
pusha
add
imul
xchg
in
xchg
in
imul
jmp
cmp
test
mov
pop
cmps
inc
das
jno
mov
adc
addr16
mov
xor
in
pop
mov
sbb
iret
mov
out
cmps
xlat
mov
push
or
push
test
popa
lods
add
fwait
push
movs
scas
lods
fwait
sbb
xchg
scas
mov
and
cmc
stc
mov
and
inc
add
(bad)
mov
inc
dec
hlt
inc
aas
jp
xchg
cdq
icebp
or
jns
adc
mov
(bad)
push
sub
mov
ins
cmp
mov
jbe
movs
push
add
mov
pop
inc
repnz
(bad)
sub
push
pop
dec
fdivr
mov
cwde
sahf
popf
jmp
mov
dec
add
test
push
rol
jl
sbb
mov
repz
cmp
dec
sub
sub
pop
or
push
xchg
adc
gs
ror
pop
dec
fdiv
sbb
pushf
cs
stos
push
jecxz
jge
sub
test
xchg
xor
add
jp
or
jb
aad
push
mov
ja
cld
fstp
xchg
std
mov
mov
sbb
mov
int3
ror
xor
out
mov
jnp
mov
or
pop
xchg
mov
inc
push
pop
ja
jg
ret
sub
gs
or
and
in
xor
lds
mov
iret
ss
hlt
jecxz
and
mov
inc
ret
mov
adc
push
xor
fsub
movs
mov
xchg
xor
cmp
dec
or
and
dec
jno
rol
adc
stos
adc
mov
pop
data16
test
out
add
inc
pop
hlt
add
rcr
mov
js
in
mov
fsubrp
add
xor
xchg
aas
mov
mov
inc
popa
pop
ins
jns
sub
std
dec
out
sub
stos
sub
lahf
shl
pusha
inc
rcr
inc
fsub
cwde
lock
cmp
mov
(bad)
repz
mov
mov
in
(bad)
imul
add
push
pop
aam
fcom
dec
fstp
sub
es
(bad)
push
push
cmc
iret
retf
adc
xor
or
mov
movs
shl
and
mov
mov
lods
movs
inc
sub
jb
jnp
int3
inc
jp
mov
fisubr
push
fdiv
ret
pop
fsub
inc
mov
push
inc
les
lds
and
adc
int3
xchg
retf
es
xor
xchg
xor
fucompp
sbb
sub
cwde
test
xor
sub
dec
sub
mov
div
loopne
adc
jns
sbb
add
jmp
dec
out
adc
or
mov
push
dec
addr16
(bad)
ror
pop
ror
jno
mov
cmp
popf
dec
rcl
inc
cld
pushf
xlat
xchg
retf
adc
popf
jge
pop
(bad)
icebp
aas
or
es
xor
icebp
push
cmp
sbb
int
xchg
xchg
cmc
sub
iret
mov
dec
xlat
mov
fimul
mov
test
mov
push
sbb
adc
jae
dec
cwde
mov
xor
into
sar
test
fnsave
cmps
cmp
bnd
cmc
jno
xchg
das
dec
bound
or
dec
iret
sbb
js
adc
or
push
fwait
outs
xchg
outs
jnp
push
fld
fnstsw
or
test
and
adc
pop
mov
out
cld
push
push
dec
out
push
push
push
xchg
in
xchg
add
add
mov
(bad)
push
jmp
add
(bad)
addr16
or
(bad)
adc
scas
fld
ffree
(bad)
sub
scas
jnp
jmp
fidivr
mov
mov
push
mov
cmp
in
imul
in
inc
mov
add
dec
(bad)
int3
jns
call
rcl
popf
jbe
mov
sbb
call
mov
addr16
dec
lsl
into
jecxz
dec
sbb
add
mov
pop
inc
mov
loopne
add
out
inc
(bad)
mov
mov
not
outs
xor
gs
fistp
leave
nop
inc
and
jns
sub
pop
nop
cmps
adc
sar
and
popa
xor
cdq
js
mov
mov
loopne
dec
jg
lea
mov
fcomi
cs
add
imul
mov
xor
mov
dec
into
pop
call
mov
mov
addr16
mul
pop
and
jno
xor
dec
sti
cmp
sub
jl
scas
outs
(bad)
cld
ins
pop
outs
movs
stc
pushf
jne
mov
rcr
daa
cmp
push
jg
pop
aad
xor
push
add
xor
xchg
data16
lock
frstor
loop
out
and
cwde
cmp
cmc
push
pop
pop
lods
sar
jae
cmp
or
xor
push
sbb
fstp
or
cmp
dec
xor
dec
cli
outs
lea
jmp
push
dec
sahf
xlat
push
or
fwait
shl
or
cli
rcr
inc
mov
and
mov
sub
mov
mov
inc
ins
mov
ins
mov
add
cmp
and
xchg
imul
call
xor
add
dec
imul
movs
iret
jecxz
mov
dec
out
pusha
adc
sub
push
push
mov
sub
or
gs
arpl
scas
dec
sahf
aas
sub
cli
mov
sbb
dec
into
dec
pop
fcmovb
add
cmp
jp
test
mov
add
add
add
inc
or
dec
je
out
or
(bad)
popf
(bad)
int3
pop
add
xchg
(bad)
fst
dec
inc
add
push
pop
(bad)
mov
inc
jnp
test
lods
sahf
cli
loop
fwait
push
(bad)
out
push
inc
pop
arpl
out
inc
add
xor
push
sub
fistp
jns
scas
cli
iret
cli
adc
call
mov
push
pop
mov
adc
rcl
dec
adc
inc
xchg
ds
sub
cmp
sbb
fiadd
pop
pusha
push
das
mov
imul
pop
out
jo
repz
cmp
jb
sahf
scas
adc
sub
fs
cmp
call
test
pop
test
outs
scas
xor
outs
inc
cli
mov
sub
int3
aad
aad
or
inc
sub
add
or
shr
cs
fcmovnb
iret
cmps
vpackuswb
jmp
pop
ss
retf
sub
push
fsubr
fiadd
fwait
lock
lea
jbe
xchg
inc
out
js
ds
xchg
or
inc
aaa
or
jmp
dec
mov
jp
lods
sti
bound
pop
int3
push
fnstsw
ror
data16
jnp
xor
mov
inc
pushf
ds
push
adc
dec
bound
adc
mov
loope
or
or
sub
mov
out
push
add
cmp
mov
xor
neg
and
xchg
and
in
retf
mov
push
cmps
arpl
das
xchg
and
je
sub
xor
xchg
in
arpl
fdiv
adc
jle
(bad)
mov
mov
and
jle
xor
scas
add
xor
jbe
enter
rol
test
and
sbb
jns
push
cmp
adc
mov
cmps
rol
pop
pop
dec
and
sub
cld
(bad)
xor
xor
sub
mov
jp
(bad)
jno
in
(bad)
mov
cmp
call
jmp
mov
(bad)
push
repz
cmp
lods
mov
fldenv
rol
xor
test
in
or
ret
ret
sar
sub
mov
imul
(bad)
cmps
push
aad
cmp
sbb
or
sbb
sub
inc
pop
test
mov
push
push
retf
inc
clc
test
xchg
cmp
mov
or
cmps
iret
clc
mov
xchg
iret
and
jne
call
inc
xchg
mov
push
retf
mov
fsub
jecxz
fld
mov
enter
jecxz
rcl
pop
sub
pop
jo
xchg
(bad)
jl
sahf
outs
or
mov
scas
iret
bound
lds
mov
ss
cmp
adc
shl
(bad)
ins
ret
fadd
jmp
jg
lds
adc
inc
xor
adc
iret
mov
xchg
pop
out
mov
icebp
mov
pushf
push
and
ret
sub
cld
ret
sub
adc
xor
ror
push
add
outs
adc
push
sub
mov
push
cdq
add
retf
enter
pop
movs
in
sbb
cs
cmp
xor
xchg
icebp
mov
or
loope
inc
shl
fcomp
retf
jo
shl
repz
mov
scas
popa
xchg
repz
test
adc
leave
dec
push
int
xor
jbe
mov
jg
pusha
stc
xor
div
sbb
inc
mov
or
mov
inc
jne
mov
(bad)
sub
rcr
pop
mov
repnz
icebp
jg
push
idiv
push
or
cmp
add
int3
cmp
cmp
sub
mov
dec
fs
dec
cmp
xchg
jecxz
hlt
and
(bad)
sahf
mov
add
std
stc
lea
cmps
mov
aas
mov
xor
sub
xor
sbb
push
mov
dec
loop
fcomp
adc
retf
test
push
sar
sub
pop
rcl
fs
xchg
fistp
es
pop
jle
xor
jo
retf
idiv
cmp
sub
push
inc
rol
jno
aad
xchg
je
sbb
adc
outs
sub
fld
icebp
jns
cmp
xchg
nop
aas
mov
ins
ja
add
test
pop
mov
cwde
add
xor
bound
sub
xchg
sbb
test
ss
sbb
(bad)
jmp
or
repz
mov
and
es
popa
fild
aad
fld
push
sub
clc
arpl
mov
ins
in
fild
push
cld
retf
inc
xor
push
outs
xchg
xchg
push
div
retf
cmp
xchg
out
mov
ret
mov
xchg
imul
mov
mov
cmps
loopne
jae
and
push
shr
sub
lds
jp
in
xchg
xchg
pop
and
arpl
mov
mov
adc
sbb
sub
pop
add
push
cli
or
aas
and
add
jbe
mov
stos
lods
mov
test
jmp
(bad)
dec
jb
inc
popf
push
mov
ins
mov
sti
cmp
cs
popf
cmp
lock
test
or
and
fisttp
outs
fcom
dec
ret
cmp
sub
rcr
in
or
rcr
xchg
mov
dec
mov
outs
push
stos
aam
and
leave
pop
pop
jns
xchg
retf
scas
shl
mov
ret
test
arpl
inc
pop
xor
bound
push
dec
inc
sub
inc
cli
test
test
ret
and
push
jecxz
dec
sbb
jp
loop
scas
mov
loope
aad
sub
xchg
rol
(bad)
jnp
imul
(bad)
push
ja
add
dec
inc
and
mov
jne
ror
and
xor
(bad)
hlt
add
xor
rol
test
mov
push
in
in
lods
or
scas
ror
js
sbb
pop
inc
inc
and
in
aas
into
sub
cmps
and
stc
ror
in
(bad)
retf
cmp
mov
cli
or
hlt
sbb
push
cmp
in
ja
mov
adc
out
sbb
(bad)
fidiv
rcr
dec
sahf
mov
movs
not
sbb
jb
shr
retf
and
sub
cmp
inc
int3
pusha
and
(bad)
sti
out
stos
and
xor
sti
dec
cmp
or
loopne
add
lods
dec
jns
movs
xor
pop
loope
sub
retf
push
aam
xchg
sbb
xchg
xchg
inc
mov
in
mov
test
and
pop
jns
mov
mov
or
(bad)
adc
mov
pop
xchg
or
pop
mov
cmc
lock
cdq
cmp
pop
or
ret
out
xchg
cmp
xchg
jecxz
pop
scas
out
mov
cmps
pusha
push
pop
bound
fwait
push
das
sub
retf
mov
pop
test
mov
push
cmp
mov
enter
mov
cmp
jbe
pushf
lock
sbb
sbb
xchg
cdq
mov
lock
xor
lock
bound
popa
mov
in
mov
jmp
fdivp
movs
cld
pusha
popa
inc
cwde
push
dec
(bad)
in
popf
add
push
test
imul
cmp
jge
imul
pop
add
jbe
inc
jns
fs
ficom
xchg
sbb
jnp
lea
adc
push
mov
xlat
jmp
push
sbb
and
mov
div
outs
push
(bad)
out
gs
hlt
jg
inc
push
pop
inc
or
icebp
cli
xor
(bad)
js
ror
nop
sti
push
cdq
sti
lods
out
jbe
jmp
call
aad
dec
cli
aaa
jnp
pop
js
jae
fiadd
xchg
push
mov
cmp
iret
retf
arpl
dec
jmp
push
(bad)
inc
movs
or
cvtps2pi
shl
mov
dec
mov
adc
pushf
leave
push
ja
jmp
daa
pop
inc
dec
cmp
xor
in
xchg
in
jmp
js
and
push
scas
dec
loope
inc
xchg
push
mov
push
stos
fld
int3
or
cs
mov
add
stos
nop
cmp
fimul
js
imul
fstp
out
rcr
lds
ds
mov
call
xor
jecxz
bound
jne
faddp
js
dec
xor
mov
arpl
cmp
pop
into
xchg
inc
pop
and
xor
or
arpl
das
(bad)
mov
adc
scas
sbb
push
rol
add
imul
sub
hlt
xlat
mov
dec
mov
mov
adc
(bad)
jne
cdq
popa
mov
or
and
hlt
aad
mov
mov
fcomp
sub
add
inc
pop
iret
test
sbb
dec
scas
jnp
jle
dec
mov
xor
xchg
adc
cmp
leave
push
mov
std
mov
push
sub
stos
or
mov
icebp
ret
mov
cmp
out
stos
and
mov
rcl
pop
and
int
push
mov
jne
jg
or
xchg
sub
fs
hlt
xor
into
xchg
sbb
call
sub
arpl
sub
mov
popa
and
xor
jp
test
mov
dec
dec
lods
sub
ror
push
jmp
adc
int3
jb
jmp
mov
mov
fstp
adc
dec
fucomip
mov
popf
fdiv
sbb
rcr
jp
inc
and
inc
popa
lahf
in
ret
add
push
mov
retf
inc
mov
in
out
sbb
add
in
stc
pop
iret
pop
mov
inc
pop
push
call
lds
inc
add
inc
in
sti
out
cmp
lods
fdivr
inc
sub
ss
shr
call
fsubr
xor
je
fld1
push
mov
clc
xor
mov
popf
(bad)
jmp
and
pop
loopne
push
mov
ret
adc
mov
fidiv
aam
jne
jg
pop
enter
xor
out
mov
outs
out
mov
and
add
retf
cmp
sub
sub
(bad)
int3
imul
mov
repnz
push
adc
sar
jnp
dec
popa
mov
mov
and
dec
cmps
sbb
call
mov
xchg
adc
arpl
jae
das
cmp
xchg
mov
inc
cmc
ret
addr16
sahf
adc
out
jnp
mov
pusha
pop
xchg
pushf
stc
test
out
sub
dec
arpl
jge
sbb
cli
pop
xor
sub
aaa
add
add
sbb
push
ja
xchg
cmps
sahf
mov
or
sub
xchg
xor
xchg
or
int
add
sbb
xchg
sbb
xchg
add
ret
mov
cdq
mov
mov
sti
and
sub
dec
adc
sbb
jae
out
pop
lods
mov
cli
push
inc
fs
xor
movlps
mov
mov
sbb
out
push
pop
dec
imul
mov
inc
pop
hlt
aas
mov
retf
dec
bound
mov
pop
or
cmp
xchg
mov
mov
push
fstp
push
or
sub
xchg
cmp
popa
lods
(bad)
out
loop
add
jmp
ror
int
mov
je
popf
mov
mov
fistp
js
add
sub
(bad)
repnz
mov
fisttp
and
dec
jae
or
push
xchg
jmp
jnp
std
cmp
fmul
xlat
sbb
xor
mov
mov
shl
add
ds
into
or
fwait
push
shl
jmp
push
cmps
fstp
xchg
loopne
pop
cmp
ret
mov
aaa
shr
loopne
add
jmp
inc
jmp
xor
xchg
pop
imul
add
test
pop
data16
xchg
shl
int3
or
cmp
ds
(bad)
mov
(bad)
ja
jge
pop
ins
arpl
popa
arpl
cs
in
pop
daa
cmp
add
dec
inc
mov
fs
mov
fsub
stos
push
and
or
sub
sbb
out
inc
or
jns
or
loop
mov
mov
inc
jg
or
push
xchg
les
frstor
sar
xchg
mov
push
aad
cwde
test
sahf
jmp
xor
call
mov
popa
data16
sbb
ret
icebp
pushf
jp
call
pop
retf
into
pop
pop
dec
push
xchg
jmp
sbb
cmp
call
inc
retf
mov
std
sti
push
adc
imul
call
fdivrp
in
fcom
xchg
aam
push
add
cmp
rol
fs
pop
adc
sub
sbb
push
jmp
add
jns
add
sbb
movs
dec
out
mov
int
retf
add
ror
adc
cs
imul
mov
xchg
test
into
ss
dec
test
adc
jp
jle
repnz
repnz
mov
in
scas
pop
mov
es
test
cmp
(bad)
and
loop
dec
imul
outs
pushf
ret
(bad)
sub
in
cmc
sub
mov
xor
mov
scas
sar
bound
push
adc
dec
cmp
jecxz
inc
(bad)
not
lods
mov
cmp
jle
shl
setb
cdq
out
and
scas
xor
add
add
(bad)
jge
and
pop
dec
call
arpl
jne
adc
int
or
add
(bad)
push
dec
and
add
sub
sub
dec
movs
mov
dec
lock
cmp
dec
test
xor
in
xchg
hlt
(bad)
(bad)
lock
dec
jl
ins
pop
fimul
mov
lods
xor
push
inc
hlt
bound
and
xchg
or
push
aad
pop
cmp
sbb
or
sub
pop
enter
or
sub
and
icebp
jge
test
mov
and
xor
loop
sbb
and
mov
push
ins
out
mov
push
fmulp
punpcklbw
les
(bad)
(bad)
stc
mov
shl
adc
sbb
mov
adc
inc
out
add
ret
push
into
dec
into
dec
push
popa
addr16
jne
jmpw
and
mov
movs
xchg
jns
xchg
jbe
jnp
push
adc
cmp
or
and
not
add
call
lock
mov
cmp
outs
jle
out
inc
call
sahf
outs
cmp
pusha
sub
xor
test
push
pop
lock
sbb
mov
sub
into
ret
mov
xchg
test
cmps
sbb
in
cwde
xchg
sub
sbb
and
les
jl
xor
or
lds
dec
sub
jmp
(bad)
pop
scas
fninit
bound
xchg
xchg
xor
imul
lds
mov
out
ss
lock
fdivr
cmp
ja
lods
(bad)
jns
fwait
enter
mov
fs
movs
jo
and
xor
mov
mov
jmp
shl
mov
adc
sahf
xchg
test
pop
cmp
shl
adc
sub
sub
sbb
push
std
add
xchg
mov
stos
or
fisub
push
inc
jg
xchg
jle
cmps
dec
(bad)
call
les
xlat
cld
adc
add
mov
mov
pop
sti
imul
mov
movs
sub
push
jmp
fcomip
cdq
ins
pop
(bad)
js
or
inc
xor
(bad)
mov
push
sbb
iret
xchg
or
fsub
dec
mov
mov
popa
retf
scas
std
inc
aaa
popf
inc
jp
and
ffree
add
xchg
in
ret
stc
dec
xchg
inc
(bad)
rol
test
sub
ins
sbb
into
mov
sbb
xchg
ds
icebp
dec
inc
push
popf
call
pop
push
shr
and
rcl
repz
cmp
push
sbb
clc
std
ins
retf
ja
add
dec
mov
or
add
mov
and
ret
and
test
movq
push
stc
div
(bad)
and
and
movs
xor
sub
push
push
dec
jno
xchg
(bad)
dec
push
loope
ins
ret
cmp
pop
int
pop
sub
fbld
jg
xchg
div
pop
mov
cld
stos
mov
mov
push
inc
adc
movs
mov
inc
dec
dec
mov
jmp
mov
and
retf
mov
push
sub
scas
xchg
add
or
mov
mov
lahf
cmp
das
pop
rcr
sbb
xor
pop
arpl
in
outs
cli
ds
mov
sbb
pop
xchg
test
sahf
aaa
mov
std
cmps
retf
lahf
add
jg
ret
pushf
pusha
ret
sub
xor
sub
gs
retf
xchg
aam
popa
xchg
inc
xchg
int
data16
out
ins
add
lahf
lods
shrd
jae
fwait
(bad)
xor
cli
iret
out
popa
or
sub
scas
mov
ja
sub
mov
jmp
cmp
fs
mov
mov
movs
or
lods
jo
jle
pop
jne
scas
(bad)
mov
fidiv
mov
int3
add
pop
pusha
mov
outs
push
lods
xor
pop
adc
lods
test
jmp
or
inc
lock
ds
inc
dec
sar
(bad)
cmc
xchg
jl
sbb
pop
call
inc
and
push
xchg
ins
or
push
lds
out
popf
int3
ins
nop
scas
or
or
sub
mov
fsub
popa
icebp
dec
mov
clc
loop
icebp
jno
outs
neg
mov
shl
adc
sub
sub
cmps
gs
jb
mov
push
add
repnz
dec
fnstcw
xchg
and
inc
xchg
les
push
jb
lock
mov
mov
jno
jmp
daa
cmp
sar
pop
sub
sub
and
gs
das
int
(bad)
call
sar
mov
add
(bad)
gs
xchg
cmps
jae
out
xchg
add
fucom
out
dec
into
cmp
mov
gs
push
scas
outs
mov
(bad)
cmc
int
mov
mov
hlt
dec
mov
test
adc
and
inc
push
adc
jg
test
adc
call
out
fimul
push
in
ss
cwde
push
sbb
xacquire
and
int
add
sub
rcr
mov
adc
push
push
rol
test
not
dec
jb
(bad)
mov
pop
test
mov
(bad)
jle
ja
jge
pop
sub
jne
das
adc
jg
pop
xchg
jmp
fist
mov
sbb
push
sahf
je
pop
push
lock
aad
sbb
pop
jle
mov
sbb
sbb
adc
fwait
pop
ds
cmp
pop
push
mov
xor
(bad)
aad
add
out
iret
lods
sub
xchg
xor
aad
lods
mov
xor
rcl
push
retf
xchg
test
jmp
retf
sahf
call
and
pop
sti
test
xchg
xor
xchg
mov
(bad)
mov
mov
sbb
mov
clc
or
xchg
cld
xchg
sub
(bad)
iret
pop
lods
mov
popa
sub
inc
or
gs
(bad)
mov
pop
int
movs
into
jae
or
add
mov
pop
test
xchg
test
cli
fs
cmp
push
mov
bound
xlat
movs
push
dec
stos
popf
fcom
mov
aas
dec
cwde
jae
out
and
sub
or
stos
inc
daa
pop
cs
inc
and
cmps
mov
test
adc
pop
dec
mov
and
mov
mov
enter
push
mov
xchg
shl
mov
jecxz
push
or
out
sub
lods
push
aaa
ins
out
mov
jmp
inc
pop
cld
mov
bound
sbb
cld
imul
pop
stos
cdq
stc
out
dec
mov
cmp
in
leave
dec
pop
out
iret
jno
in
xor
lods
sub
std
adc
rcr
sti
mov
int3
in
xor
rcr
out
aas
xlat
add
xchg
pop
mov
mov
adc
js
(bad)
push
jle
arpl
xchg
int
push
or
dec
xchg
push
jne
and
adc
or
or
out
jp
std
add
xchg
jne
gs
aaa
xlat
xor
jg
addr16
sbb
outs
shl
sub
mov
arpl
fstp
stc
xchg
sub
fsub
jbe
sbb
repz
shr
movs
outs
clc
add
xor
jge
jbe
adc
jb
popf
test
not
jmp
out
inc
push
cmc
aam
mov
sub
xchg
daa
and
(bad)
xor
bound
fs
test
xor
bound
jg
addr16
mov
push
jge
shl
(bad)
add
ret
jge
xchg
leave
add
cmp
in
inc
scas
lahf
out
push
neg
inc
test
int
mov
repz
retf
mov
push
and
aas
mov
xchg
int3
add
dec
cmp
lock
and
(bad)
push
rol
pop
mov
test
mov
ja
test
sub
sub
ror
sub
ror
es
xor
pop
sbb
mov
jmp
sub
xchg
mov
rol
imul
fld
imul
sbb
inc
xchg
ss
clc
lock
(bad)
lock
push
movs
add
movs
repz
xor
xor
movs
xor
icebp
cs
xchg
jp
cmc
and
push
inc
xor
mov
xor
movs
lock
pop
iret
xor
dec
loope
arpl
or
mul
out
stos
mov
xchg
aas
pop
test
pop
enter
fisub
xor
sar
jnp
adc
inc
pusha
add
mov
ds
inc
xor
test
mov
lock
xchg
hlt
retf
xor
stos
shl
inc
into
inc
cmp
xchg
movs
add
ds
outs
into
arpl
lock
into
xchg
ret
fisub
xor
rol
inc
clc
bound
dec
pusha
jmp
movs
(bad)
(bad)
aad
shl
std
scas
gs
clc
jle
mov
jbe
or
and
sbb
push
xchg
mov
(bad)
out
ins
and
or
neg
mov
loopne
push
mov
test
fisttp
add
mov
adc
das
pushf
mov
mov
fistp
xor
daa
popa
xlat
js
sub
fld
xchg
iret
mov
movs
retf
and
jmp
jno
test
fist
or
adc
fs
add
ins
(bad)
cmp
and
dec
jmp
cli
test
(bad)
inc
lock
pop
or
sub
popa
call
(bad)
mov
mov
outs
movs
clc
mov
jl
sub
inc
sbb
push
sbb
dec
mul
(bad)
fstp
cmp
mov
or
add
ins
sub
mov
dec
js
mov
adc
push
sbb
mov
test
aad
inc
dec
and
shl
dec
cmp
fild
dec
outs
and
add
fdiv
out
mov
call
dec
ret
lods
adc
lds
pop
jae
cld
xor
or
xchg
fsubr
mov
ss
inc
adc
pop
mov
mov
leave
out
loopne
sub
push
cmp
cmps
push
mov
fs
jmp
sub
inc
not
retf
sbb
iret
add
sbb
mov
and
or
addr16
movs
nop
and
clc
(bad)
int3
out
cmp
bound
mov
daa
cmp
out
div
loopne
ds
in
loop
mov
scas
jo
mov
out
jb
pusha
fst
cmps
sub
pusha
test
push
mov
movs
mov
cli
and
inc
mov
(bad)
xor
mov
inc
je
xor
in
and
sub
jl
lods
pushf
mov
cmp
or
lds
idiv
push
mov
pusha
rcl
(bad)
fistp
fwait
data16
sbb
dec
mov
cs
mov
stc
fdivr
mov
es
pop
fiadd
fwait
dec
cmp
(bad)
jmp
pop
push
mov
jg
xor
sar
call
aad
lea
ss
push
push
ins
cmc
mov
fstp
ret
mov
mov
push
lods
jb
push
sar
xchg
xchg
xchg
xchg
push
dec
sub
push
jns
pop
mov
sbb
(bad)
mov
pushf
hlt
adc
dec
je
inc
out
mov
inc
push
inc
push
jb
fdivr
push
lods
pushf
loop
and
xchg
adc
std
and
mov
push
les
std
(bad)
prefetch
xchg
in
inc
jle
shl
mov
scas
fidivr
mov
jne
dec
or
cmp
addr16
rol
scas
call
dec
cs
fs
jo
push
call
dec
sti
cmp
xor
or
and
mov
popf
push
js
(bad)
add
mov
mov
ins
or
int3
into
dec
cmp
inc
gs
xchg
test
popf
inc
xor
or
call
push
imul
xlat
sti
jae
lods
cmps
pop
into
jne
mov
cld
scas
mul
push
mov
(bad)
xchg
cmp
shr
fwait
stos
pop
aam
mov
lods
jmp
inc
mov
jae
and
xlat
sar
hlt
or
mov
or
cmc
in
jnp
sbb
fwait
pop
ins
(bad)
cmp
jle
jne
ror
jl
out
push
or
mov
inc
stc
pop
inc
xchg
pop
lods
jo
and
xchg
and
xor
lds
cmps
test
pop
(bad)
loop
pushf
cmp
fistp
cmps
(bad)
mov
sbb
out
loop
xchg
dec
cmps
cwde
mov
in
les
mov
ja
xchg
iret
and
rcl
push
ror
ret
call
ins
lods
cld
icebp
pop
outs
pop
xor
nop
cmp
pop
xor
push
js
add
pop
inc
pop
ret
ds
pop
rcr
pop
push
cmp
sbb
hlt
mov
cdq
jge
add
enter
iret
xor
out
loope
int
scas
adc
iret
ins
mov
sub
pop
cdq
cmp
dec
mov
je
icebp
(bad)
inc
pop
xchg
and
fldenv
mov
test
inc
pop
dec
pop
ud1
adc
ins
inc
xchg
scas
sub
fdivr
cmp
mov
ret
cmp
mov
cmp
div
jns
xchg
jg
mov
pushf
ins
test
je
dec
mov
or
loop
mov
(bad)
inc
sub
jbe
cmp
and
or
cmp
cli
mov
and
test
rcr
cmp
mov
push
scas
daa
mov
mov
or
sub
jbe
sbb
add
lock
call
fsubr
or
cmp
sar
lods
push
jle
jae
xchg
mov
fnstcw
cmp
xchg
div
pop
mov
movmskps
(bad)
xchg
inc
out
cld
xor
jmp
mov
retf
cmc
and
mov
lea
add
inc
jp
dec
cmp
inc
mov
test
por
mov
lahf
or
test
stos
sar
lods
xor
xchg
jnp
push
mov
push
jge
push
or
xchg
push
push
push
mov
and
jne
(bad)
push
inc
fistp
int3
inc
xchg
add
inc
pop
gs
les
fisubr
mov
ss
fwait
outs
fidivr
test
sbb
mov
xchg
call
loop
loop
mov
mov
jo
lods
lods
jmp
adc
cdq
ins
fiadd
clc
leave
jge
lock
cmc
int
les
sub
pop
(bad)
jmp
inc
fadd
es
push
and
pop
sar
movs
ror
retf
push
(bad)
sub
inc
ss
test
in
mov
sar
inc
push
das
mov
dec
or
(bad)
pusha
mov
jns
das
or
les
or
mov
or
jle
pop
and
dec
pop
lea
inc
cmp
adc
push
cwde
sbb
loopne
and
cld
sbb
clc
add
jecxz
ds
es
or
add
aaa
adc
sub
lahf
xchg
add
sub
cwde
mov
mov
mov
inc
or
int
xor
mov
and
inc
jmp
idiv
lahf
fstp
jmp
push
sub
or
fild
out
lods
stos
fistp
or
(bad)
adc
xor
lds
out
stos
out
aas
(bad)
inc
aaa
ret
mov
je
test
mov
sub
add
sub
xchg
das
push
cmp
ss
xor
xor
dec
fimul
pushf
xchg
add
bound
pop
adc
into
jno
test
sbb
lds
clc
fstp
sub
sbb
idiv
fist
sub
mov
push
ja
xlat
xchg
push
or
pop
clc
xor
cmp
sbb
adc
sub
pop
sub
ins
loopne
dec
mov
sbb
inc
xor
mov
mov
mov
in
pop
xor
shl
xchg
hlt
nop
(bad)
mov
std
fcmovb
aas
jp
not
scas
xor
div
shr
retf
cli
call
sbb
(bad)
sbb
jae
mov
lods
and
cmp
dec
add
(bad)
sar
jge
mov
push
dec
das
and
inc
push
pop
arpl
shr
ins
movs
(bad)
xchg
adc
mov
cmp
test
push
mov
aaa
pop
sbb
(bad)
mov
loope
or
or
movs
fisttp
cmp
daa
or
push
cdq
movs
cmp
add
test
(bad)
shl
hlt
push
jecxz
shl
cmp
xor
fmul
mov
(bad)
call
mov
push
fisub
dec
in
(bad)
js
cwde
inc
fild
into
mov
inc
fiadd
jbe
clc
push
mov
pop
inc
xor
xchg
fsubr
sub
dec
and
lds
in
in
rol
and
pop
push
cmp
add
cmp
retf
int
jae
test
sbb
mov
in
mov
(bad)
cmp
mov
xchg
stos
aam
dec
fimul
ror
xchg
nop
pop
and
vcmpss
inc
out
cmps
jnp
sbb
fist
loopne
imul
scas
jg
adc
pop
test
pop
and
and
jne
pop
in
movs
dec
inc
xor
mov
rcr
in
pop
and
fs
mov
adc
push
xlat
test
adc
dec
mov
(bad)
mov
mov
push
adc
xchg
int3
xchg
sbb
out
push
stos
pop
sub
inc
icebp
and
inc
and
frstor
sub
sbb
push
xchg
and
ins
out
daa
push
mov
push
mov
ja
sahf
sbb
push
add
aaa
ins
or
jnp
paddq
jns
xlat
push
push
dec
test
bound
mov
xor
ret
ss
enter
mov
or
movaps
add
inc
mov
mov
jl
fdivp
mov
mov
bnd
add
mov
test
jns
int3
add
fst
pushf
mov
mov
ja
stc
or
cs
dec
mov
cmp
sbb
imul
stos
or
lods
add
iret
popa
pop
daa
(bad)
sbb
jae
ins
shl
outs
pop
jle
inc
mov
test
mov
retf
adc
lods
fs
xor
or
psubq
xchg
sbb
adc
inc
push
(bad)
mov
xlat
sbb
jbe
nop
push
sbb
out
mov
into
xor
cmc
cmps
mov
push
aas
icebp
jne
mov
or
lea
fs
pop
push
les
(bad)
adc
fucomp
mov
xchg
push
imul
ret
push
jecxz
scas
ja
nop
push
dec
out
pusha
mov
cwde
or
pop
dec
arpl
fdiv
cmp
popf
dec
fist
and
and
call
call
jp
lods
and
adc
ins
lea
pop
mov
sub
lea
sti
pop
ja
js
fidiv
xchg
js
mov
cmp
addr16
lock
test
nop
sbb
mov
out
fsubr
nop
jb
jmp
dec
sbb
cwde
pop
mov
mov
pop
mov
pop
jo
jnp
jmp
jp
and
test
jmp
imul
push
data16
jg
inc
push
jns
mov
fsubr
int3
push
pop
sub
and
outs
outs
fdiv
fstp
xchg
pop
xor
push
jg
push
pop
out
xor
and
jl
arpl
pushf
push
xchg
scas
dec
icebp
(bad)
push
in
gs
call
inc
cmp
shl
and
xchg
jbe
xchg
xchg
inc
call
icebp
lods
sub
fnstcw
ss
scas
jl
inc
cmp
push
dec
cdq
stc
fldenv
or
stc
xor
push
xchg
inc
jbe
loope
mov
dec
jne
mov
out
or
mov
xchg
hlt
xor
mov
test
stos
inc
or
in
repz
inc
in
or
fsubr
xor
adc
cmp
retf
push
xor
dec
out
out
das
(bad)
out
dec
out
and
jno
loopne
push
in
shr
test
in
jbe
dec
xchg
xchg
sub
pop
adc
bound
cld
xchg
pop
jmp
dec
xlat
ret
xchg
gs
ds
(bad)
pop
not
mov
push
and
clc
fwait
xchg
pop
add
shl
jge
pop
dec
sbb
stos
stc
ja
mov
mov
add
mov
cmp
fwait
xor
xor
xchg
outs
stc
xchg
into
jecxz
and
mov
hlt
xchg
or
nop
push
popa
push
mov
sub
jno
pop
xor
cmps
repz
stos
cmp
maskmovq
imul
mov
les
cmps
adc
retf
xor
pop
lock
shl
push
inc
aas
mov
jb
dec
fild
push
in
dec
push
std
mov
push
jmp
mov
mov
adc
mov
pusha
push
pop
push
add
lods
cmp
mov
int
das
mov
push
and
add
or
repz
sub
mov
(bad)
push
pop
adc
mov
lahf
aaa
ret
jp
add
mov
push
adc
mov
inc
mov
cmp
dec
dec
outs
pop
cmps
or
sbb
add
psubb
ds
jmp
add
repz
xchg
call
sahf
jnp
inc
loopne
cdq
js
xor
bound
retf
outs
push
mov
jbe
cs
in
mov
adc
js
jbe
call
push
lock
sar
arpl
push
stc
lods
fldenv
cmc
cli
cmc
rol
cdq
mov
mov
pop
icebp
stc
stos
sub
mov
fdiv
aam
pop
dec
mov
mov
inc
push
fisubr
push
(bad)
sub
fs
mov
dec
cli
xor
test
cwde
movs
cmp
xchg
shl
and
sub
mov
nop
cli
js
sbb
xor
cmp
(bad)
xchg
in
outs
mov
mov
ret
loopne
adc
add
pop
inc
pop
pop
rcr
in
cmp
inc
pop
dec
jnp
data16
add
push
adc
sub
sbb
fdivr
ds
inc
repnz
mov
cdq
mov
xchg
into
repz
aad
push
call
mov
test
jne
mov
fdivp
xor
and
adc
adc
push
inc
out
mov
sbb
lock
stos
and
jo
(bad)
cmp
jns
mov
sbb
add
ss
jmp
jno
test
(bad)
and
enter
mov
sbb
mov
mov
cmp
mov
shl
ret
in
pop
test
pop
jmp
pop
pop
das
in
je
sbb
xor
mov
mov
(bad)
out
ret
dec
jb
out
push
nop
scas
adc
cwde
push
retf
enter
and
push
lds
dec
push
enter
pop
cmps
das
xchg
jnp
(bad)
(bad)
aam
in
adc
outs
push
xchg
or
dec
ret
xor
add
xor
dec
push
pop
sbb
(bad)
mov
mov
(bad)
cmc
mov
loop
pop
or
es
stos
data16
lock
(bad)
out
adc
rdtsc
cmp
popa
aam
jge
into
mov
in
sbb
stos
shr
push
inc
movs
xchg
(bad)
push
xchg
lock
(bad)
push
sar
out
enter
mov
pop
xchg
add
outs
outs
xchg
aaa
gs
xor
xchg
pop
(bad)
mov
outs
adc
hlt
push
inc
dec
daa
repz
(bad)
adc
xchg
push
fcmovb
inc
cmp
jne
rol
adc
push
nop
ds
aam
mov
mov
jle
pop
jmp
push
nop
and
sbb
into
dec
jg
mov
outs
arpl
hlt
mov
js
div
imul
pop
retf
xchg
add
jno
ja
ja
rol
sub
bound
sar
pop
retf
pop
pop
dec
add
sub
add
das
cmps
cmc
stc
les
in
popa
sub
sbb
mov
fstp
pop
nop
mov
jle
cmp
and
js
rcr
and
arpl
xchg
rcr
adc
mov
jle
mov
in
retf
pushf
mov
xchg
popf
add
dec
mov
adc
xor
mov
adc
xchg
push
ss
pcmpeqw
ror
sbb
pop
add
adc
outs
aam
mov
adc
jae
ret
mov
jno
test
ror
pop
jne
xor
cmp
and
xchg
push
mov
das
pop
jle
sbb
pop
xor
les
sahf
jmp
test
sub
push
push
gs
aaa
dec
stc
jge
clc
mov
xor
and
je
das
mov
xchg
xchg
das
retf
mov
pop
jge
pop
mov
sub
xchg
cmp
add
mov
ret
aam
jecxz
adc
jmp
stos
dec
test
push
mov
out
dec
ss
jl
repz
xor
stos
inc
addr16
mov
ret
jns
ss
mov
sahf
fld
sti
and
push
jmp
(bad)
sub
cli
jmp
movs
(bad)
les
jae
mov
mov
cmp
fdivp
pop
fwait
push
loopne
jp
ins
repz
xor
in
inc
outs
xchg
dec
imul
xchg
jo
out
mov
repnz
out
and
(bad)
lahf
les
dec
lock
sub
jnp
or
push
cmp
(bad)
mov
sbb
add
addr16
fwait
xchg
lods
xchg
lea
std
pop
scas
push
sar
add
je
cmp
and
clc
mov
sub
int
test
sbb
pop
mov
pop
pop
mov
call
cli
sbb
mov
inc
sbb
and
out
in
inc
and
dec
jl
(bad)
sbb
fisttp
repnz
inc
scas
jb
jb
(bad)
in
imul
sahf
fimul
pop
mov
lods
mov
fst
xchg
inc
mov
dec
pop
test
test
adc
scas
or
and
pushf
mov
cdq
xchg
icebp
sbb
cmc
enter
aam
jmp
xchg
xchg
mov
jp
pop
add
retf
dec
sbb
cmc
arpl
sub
and
aam
outs
sub
and
cwde
sbb
or
test
fmul
dec
test
int
cmp
jmp
sbb
mov
aas
scas
(bad)
and
mov
call
es
(bad)
pop
dec
push
jnp
int3
aas
ins
sbb
bound
dec
dec
inc
pop
xchg
jg
xchg
dec
sbb
jno
inc
arpl
jp
xor
(bad)
ins
nop
cmp
mov
out
leave
icebp
cli
jmp
int3
and
or
mov
gs
imul
je
std
push
cmp
dec
push
das
out
jg
jge
push
mov
or
sahf
call
push
fwait
xchg
jle
rcl
adc
push
push
int
movs
adc
retf
xchg
cmp
lea
imul
inc
mov
cmps
xor
push
repz
lds
push
and
mov
aad
inc
mov
xchg
or
sbb
rol
scas
retf
ins
add
outs
xchg
fisubr
jns
sar
dec
mov
sbb
nop
mov
outs
ret
pop
cld
arpl
repz
dec
cli
xchg
outs
test
not
mov
leave
fild
popa
into
pop
push
add
std
push
shr
in
xor
cdq
fiadd
int3
cwde
std
cmp
xor
pop
movs
loop
data16
pop
in
out
dec
push
cmp
xchg
fidivr
mov
stc
fmul
jp
cmp
retf
mov
sub
aaa
sbb
lods
and
or
and
nop
stos
or
push
adc
inc
ror
mov
std
pop
ins
leave
cmps
in
or
and
test
lods
sub
pop
dec
cmp
pop
jg
cmp
fldenv
or
jge
das
mov
into
hlt
pop
ins
call
jne
aas
and
or
pusha
inc
mov
in
cmp
pop
in
out
movs
sbb
loope
xor
xchg
push
lahf
adc
xlat
mov
or
fs
xor
mov
jg
gs
movs
add
mov
push
inc
std
imul
xchg
dec
bswap
add
cmp
retf
pop
fcom
or
cmp
pop
(bad)
inc
pop
aas
add
fbstp
xchg
fwait
mov
fwait
ja
sahf
cmp
adc
popa
adc
mov
fimul
inc
(bad)
popf
fadd
fild
(bad)
cmps
cmp
mov
xor
push
sar
add
add
cmp
inc
xchg
jg
loope
push
push
loopne
or
or
adc
cmp
jbe
sub
movs
cmp
jle
retf
enter
and
shl
dec
movs
aas
or
jmp
add
pop
stos
imul
mov
rcl
stc
add
xchg
mov
popf
stc
sbb
repz
ins
adc
mov
jle
sub
xor
cmp
ss
mov
xchg
adc
pop
jnp
inc
je
mov
int
enter
mov
sar
rcr
adc
out
aas
inc
das
mov
retf
es
lods
shr
int
(bad)
loopne
mov
scas
sub
loop
outs
sar
or
aad
dec
push
shl
push
gs
xor
cmp
mov
and
mov
jnp
ror
out
fist
pop
inc
test
xor
es
jmp
js
xor
pop
(bad)
int
(bad)
mov
in
sbb
mov
mov
sub
leave
sbb
inc
scas
imul
jno
in
aam
jle
jl
add
neg
in
mov
ror
nop
out
mov
xchg
jp
fwait
mov
and
xlat
(bad)
jmp
int3
pushf
xchg
push
push
inc
popf
add
pop
fimul
imul
dec
mov
mov
xchg
jnp
push
rep
sub
mov
out
inc
xor
inc
mov
shl
cmps
sbb
mov
or
xchg
daa
pop
xchg
(bad)
sti
cpuid
ss
and
call
push
jbe
call
rcl
retf
adc
adc
fnstsw
je
mov
lods
je
test
add
leave
add
pop
scas
xchg
fs
cmp
cmps
data16
lahf
lods
or
imul
adc
or
ret
enter
jne
jl
xchg
jg
ret
push
ror
shr
jno
outs
dec
cmp
sahf
mov
lds
jl
call
add
pop
cmc
idiv
(bad)
xchg
mov
add
add
test
sbb
mov
add
movs
mov
call
cmp
add
cmps
jl
fild
push
ret
out
fisub
ss
lock
cmp
popa
fld
sub
(bad)
mov
xchg
(bad)
cmp
pusha
das
aaa
loopne
dec
cdq
cmovne
pop
outs
cli
(bad)
(bad)
fild
adc
sub
mov
ins
cs
out
and
sti
jmp
or
push
xchg
arpl
out
retf
add
sbb
popa
sub
add
movs
cld
psllw
pop
push
mov
mov
out
xor
dec
pop
frstor
add
dec
cld
scas
hlt
mov
dec
add
jb
mov
adc
fmul
mov
jle
xchg
mov
jg
jecxz
xchg
mov
add
hlt
scas
push
cmps
xchg
push
pop
xor
cmp
aas
mov
mov
add
cmp
mov
aaa
mov
xchg
inc
dec
mov
xchg
and
push
add
loopne
jne
xchg
cmp
stc
arpl
bound
lea
outs
push
sbb
jae
mul
or
jb
lds
call
jbe
inc
test
sbb
retf
sbb
jg
(bad)
ins
fcomp
aam
int
push
cs
push
jecxz
in
outs
pop
push
retf
bswap
xor
daa
mov
gs
shl
push
and
xor
mov
cmp
lods
jmp
jno
stos
dec
loope
pop
push
mov
jle
mov
ss
cmp
xchg
mov
std
(bad)
pop
mov
mov
add
call
repz
repz
xor
push
mov
mov
xor
test
inc
call
ss
stos
ins
(bad)
std
dec
movs
inc
cmc
ins
adc
das
adc
adc
hlt
ficom
mov
loope
stos
pop
movs
mov
mov
(bad)
out
lods
shr
hlt
mov
(bad)
daa
mov
std
cwde
jns
mov
cmps
fisubr
pop
pop
mov
jp
ret
es
adc
hlt
cmp
ss
loopne
or
adc
pop
dec
inc
jne
sub
and
sub
in
mov
inc
(bad)
xor
mov
mov
xchg
outs
loop
hlt
pop
sub
lods
adc
(bad)
push
cwde
int
jns
jnp
imul
or
outs
(bad)
mov
sbb
aad
ins
js
jmp
xor
lods
cmps
pop
mov
xchg
(bad)
dec
rol
mov
ja
(bad)
cli
loopne
mov
pop
mov
test
stos
mov
adc
fcomp
lahf
xor
mov
sub
xor
dec
ds
ror
xor
xchg
inc
jle
(bad)
xor
daa
xchg
shl
inc
ja
pop
pusha
cmp
mov
xor
adc
frstor
fwait
push
movs
add
cld
adc
scas
push
add
jmp
aam
fs
popa
dec
mov
enter
cdq
fiadd
outs
js
cwde
ins
push
and
or
mov
cld
push
(bad)
mov
push
test
push
imul
xor
inc
fisttp
push
mov
push
lea
jle
sub
(bad)
and
sub
or
idiv
inc
fld
cs
or
dec
mov
cmp
xor
shl
mov
stos
gs
inc
sbb
das
imul
mov
or
movs
mov
cli
ins
inc
lods
jmp
adc
stos
add
xchg
jmp
xor
xchg
dec
aam
jmp
adc
ror
mov
xchg
stos
ins
(bad)
mov
mov
das
jmp
(bad)
push
mov
leave
jmp
daa
fwait
mov
call
cmp
loop
and
mov
repnz
mov
xchg
xchg
and
pop
jmp
xor
push
jmp
jge
clc
cmp
cmp
sbb
mov
jmp
xor
xchg
mov
push
iret
daa
dec
repz
cld
pusha
fadd
(bad)
adc
rol
(bad)
fsub
iret
rcr
icebp
jnp
inc
enter
sahf
pop
in
rcl
xchg
xchg
lods
test
cld
mov
jno
(bad)
or
sahf
ins
fadd
nop
call
js
int
inc
jo
add
popa
adc
inc
xchg
(bad)
sub
mov
shr
add
cmps
ret
inc
mov
push
loop
sub
dec
clc
jnp
inc
sbb
jne
inc
mov
mov
mov
or
lea
xchg
pop
fcomp
mov
aad
outs
data16
gs
jnp
loop
bound
xchg
xchg
call
push
cmp
loopne
xor
mov
ret
xchg
push
das
pop
pop
mov
mov
cld
mov
jmp
lds
cmp
ja
cmp
cmp
adc
pop
push
aaa
dec
sub
xchg
out
mov
jo
push
fnstenv
fwait
cmp
aaa
push
mov
test
idiv
mov
lock
mov
sbb
fmul
dec
xchg
mov
sub
push
push
pusha
(bad)
(bad)
cli
(bad)
cs
adc
mov
mov
mov
(bad)
fidivr
(bad)
out
daa
(bad)
lock
jbe
sub
dec
pop
pop
cmp
xchg
jmp
std
repnz
push
jne
outs
nop
cmc
push
repnz
out
dec
or
xchg
mov
fsub
aas
es
cdq
or
loope
popf
adc
push
xor
jmp
pop
xchg
cdq
pusha
dec
add
sbb
shl
popf
push
adc
iret
(bad)
out
push
xor
or
dec
and
add
jbe
jle
repz
or
call
mov
sbb
inc
sar
dec
pop
repnz
ds
sub
shr
mov
jmp
call
push
loope
scas
dec
xchg
pop
dec
mov
sub
adc
test
inc
ror
rcr
call
pop
aam
mov
call
mov
icebp
retf
mov
push
nop
sub
and
and
(bad)
in
mov
cmp
clc
mov
mov
mov
mov
jo
inc
lahf
ss
pop
cmp
push
imul
stc
mov
cmc
cmp
mov
add
pop
and
or
dec
push
mov
sahf
(bad)
and
movs
cs
test
arpl
dec
xchg
(bad)
mov
xchg
mov
sbb
aaa
movs
sti
(bad)
hlt
dec
(bad)
cmp
hlt
dec
(bad)
mov
mov
dec
adc
and
mov
add
push
mov
jg
out
repz
in
imul
sbb
mov
arpl
fnsave
mov
lahf
or
add
xchg
sbb
sub
aam
cmp
push
(bad)
sbb
mov
nop
retf
jg
scas
jmp
aas
dec
stos
sbb
stos
pop
jl
icebp
or
adc
or
mov
mov
push
pusha
js
loopne
jp
dec
das
or
jns
stos
int
adc
mov
inc
pop
stos
xchg
adc
lds
jge
lea
(bad)
jge
aam
das
out
mov
xchg
(bad)
rol
mov
and
je
mov
mov
jnp
ins
inc
data16
push
fsub
jl
jge
test
pop
test
inc
mov
fdiv
scas
out
jmp
cmp
(bad)
push
lahf
das
stos
jns
and
mov
in
in
sub
push
lods
fs
hlt
mov
pop
jmp
jae
xor
in
or
arpl
pop
xor
out
push
and
mov
inc
mov
cli
push
jno
mov
sbb
mov
(bad)
xor
out
iret
pop
pop
and
out
imul
cmp
adc
adc
cwde
cmp
xor
retf
add
and
scas
mov
jecxz
cmps
fnstcw
call
or
mov
push
addr16
clc
sub
jmp
not
sbb
je
mov
icebp
lea
cmp
cmps
xchg
push
xor
jle
xlat
xor
pop
ja
clc
repnz
inc
rcr
push
sub
and
mov
xchg
inc
das
cmp
sbb
leave
adc
test
dec
sti
rcl
adc
sbb
ss
dec
and
stc
jae
xor
retf
mov
fbld
jae
test
adc
push
adc
cmp
das
jg
add
pop
push
jle
adc
pop
stos
xchg
mov
mov
enter
add
mov
xor
neg
pop
pop
jo
cmp
sub
or
clc
jl
movs
jecxz
arpl
nop
jmp
cmc
aam
mov
inc
and
dec
jmp
jbe
pushf
jns
cmps
adc
jl
dec
cdq
and
mov
pop
div
and
adc
add
lods
xchg
xor
add
test
ss
xchg
adc
pop
(bad)
rcl
xlat
clc
jl
pop
or
jmp
cwde
cmp
jmp
cmovl
mov
bnd
fidivr
ins
add
mov
mov
jle
clc
dec
jne
mul
movs
stos
movs
cmps
jmp
rcl
lds
jae
inc
cmp
fsubr
cmp
fwait
clc
jle
sub
xadd
test
into
xchg
shr
movs
push
jg
(bad)
outs
cmp
pop
pop
mov
rcr
call
mov
mov
popf
mov
movs
rol
cs
jmp
xchg
xchg
cmp
fs
(bad)
lods
jns
in
pop
out
stc
stos
mov
sti
mov
mov
(bad)
sub
outs
jl
or
outs
nop
fidiv
jmp
or
sbb
imul
mov
pop
aas
or
sub
inc
xlat
movs
in
jb
ins
jnp
mov
lahf
jmp
out
cmp
shl
xor
(bad)
stc
neg
psubd
sbb
xor
xor
jp
pop
push
push
ds
jge
sbb
pop
ret
xor
inc
ror
add
inc
fist
push
sbb
push
xor
jnp
push
mov
cmp
rol
ja
shl
pop
push
outs
push
test
les
enter
int
nop
mov
stos
movs
out
jecxz
xor
xor
call
retf
repz
and
(bad)
and
es
leave
xlat
push
test
push
jl
xchg
test
stc
mov
loop
jno
inc
pop
das
pusha
test
cmp
pop
add
fnstcw
ret
jns
sub
pop
xchg
push
dec
sub
out
cmps
sbb
xlat
cmp
scas
(bad)
mov
adc
fs
pop
sbb
mov
mov
rep
xchg
test
dec
push
mov
push
jg
js
mov
xchg
and
cmp
and
imul
mov
jl
rcl
int
movs
cmp
xor
mov
aam
test
clc
xchg
mov
pop
cs
fucomp
pop
and
addr16
sbb
cwde
loopne
mov
cmp
ds
push
sub
int
pop
jmp
mov
cdq
pop
js
jmp
adc
mov
mov
sahf
mov
pop
sub
in
jo
cli
pop
fisttp
mov
sbb
icebp
push
cmp
adc
jmp
inc
pop
mov
mov
loop
dec
shl
jg
test
add
sub
fnstenv
je
div
lahf
push
or
imul
in
pop
int3
push
popf
in
jmp
pop
test
fsub
cmc
ret
mov
dec
mov
fwait
xchg
data16
xchg
arpl
ins
je
jae
or
data16
cld
mov
pop
push
xchg
loope
push
jge
lods
add
dec
and
sar
mov
lods
in
mov
add
cli
call
add
in
jns
cmp
pusha
stos
sbb
pop
gs
mov
and
int3
lods
into
push
std
sbb
xchg
fisub
adc
pop
xor
fsub
adc
stos
pop
sub
inc
xor
addr16
cmp
adc
dec
ins
jmp
lea
add
jg
adc
aaa
and
sbb
jae
dec
xor
ret
xor
push
cmp
and
sub
outs
bound
jb
xchg
sbb
test
mov
jnp
mov
cmp
retf
hlt
test
or
ja
nop
icebp
jp
cmc
jno
pop
pop
push
stc
aas
xchg
outs
xchg
hlt
jns
ins
aaa
jae
or
cdq
jp
rcr
es
sar
add
sub
jmp
xor
push
pop
add
sbb
cmp
or
or
sub
mov
add
ins
xchg
out
push
retf
mov
pop
fiadd
jne
and
imul
cmp
xchg
and
ror
mov
outs
pushf
outs
pop
mov
fdivr
mov
cmc
iret
cmp
into
push
ins
jl
gs
cmp
or
pop
mov
loop
lods
cmps
mov
test
push
cmp
xor
sub
fsubr
enter
fcomp
inc
into
pushf
loope
cwde
daa
add
mov
add
ds
mov
sbb
imul
xor
ds
fwait
mov
movs
mov
cdq
dec
mov
push
pop
adc
in
inc
sbb
xor
xor
xchg
pop
out
and
divps
add
cmp
loop
pop
xor
loop
dec
and
jmp
jno
aam
add
inc
(bad)
mov
into
mov
out
int
(bad)
pop
lods
xchg
mov
movs
stos
not
(bad)
popf
dec
aad
ins
rol
pop
inc
fisttp
and
xchg
mov
jns
mov
in
cmps
mov
dec
pop
mov
mov
sub
sbb
std
sbb
pushf
cmps
call
popa
fld
mov
std
aas
push
fdecstp
and
mov
pop
push
sbb
xor
adc
and
push
sar
retf
cmp
ret
add
jmp
xor
push
(bad)
mov
xor
ja
fcmovbe
das
into
pop
push
cmp
pop
mov
add
mov
mov
bound
leave
test
push
inc
xchg
cmp
loopne
jp
or
cmps
mov
test
sub
mov
mov
and
push
mov
ret
sub
mov
fnstenv
shl
es
mov
(bad)
jg
mov
push
pop
mov
cmc
mov
xchg
xor
ret
jmp
retf
stc
(bad)
jne
ftst
fstp
(bad)
sbb
cmp
es
inc
cmp
xor
adc
jmp
out
push
or
jmp
rcr
ror
ins
xor
retf
in
pop
inc
out
mov
out
or
jle
(bad)
sbb
mov
xor
mov
jno
(bad)
pop
adc
add
imul
test
jmp
cmc
cwde
adc
xchg
outs
int3
les
sub
sbb
data16
sbb
or
test
sahf
mov
cld
movs
push
jne
cdq
xchg
cwde
lahf
mov
lods
xchg
mov
sar
dec
fnstenv
in
xchg
pop
test
out
arpl
mov
add
pop
mov
xor
(bad)
pushf
push
cs
xor
and
pop
sti
ss
loope
icebp
dec
inc
sbb
cwde
(bad)
aad
sub
cmc
inc
pushf
or
push
dec
mov
dec
data16
xor
sub
popf
dec
mov
xlat
sub
jne
pushf
scas
inc
mov
dec
and
or
icebp
xor
xchg
inc
push
je
mov
adc
sbb
shr
out
int
mov
sbb
inc
scas
pop
xchg
(bad)
adc
pop
std
int
repnz
pop
cmp
clc
mov
mov
icebp
jp
push
mov
jmp
rep
sbb
in
ins
and
push
jmp
pusha
dec
push
push
or
lea
cli
add
and
inc
pop
data16
jg
mov
inc
stc
xor
ds
sub
mov
cmp
inc
sub
test
fisub
popf
outs
scas
sub
(bad)
sti
sbb
fimul
in
jmp
mov
adc
mov
shr
pusha
xchg
std
xor
test
inc
sti
push
adc
ret
jb
ret
(bad)
ret
scas
mov
ins
jns
loop
and
sbb
pop
ins
and
enter
pop
pushf
and
pop
hlt
xchg
sub
mov
bound
xor
test
icebp
int
and
or
das
add
xchg
call
xchg
push
fstp
cmp
retf
leave
mov
or
stos
stos
sub
out
push
cdq
pop
jns
add
or
mov
adc
test
xor
ins
inc
mov
adc
add
xlat
jne
ins
pop
scas
jmp
je
retf
or
mov
out
dec
pop
retf
loopne
out
mov
loop
retf
aad
sbb
fimul
xchg
call
cmp
mov
pop
add
test
repz
push
or
xlat
jbe
push
jbe
fnstsw
pop
jl
mov
es
pushf
(bad)
adc
push
loopne
jbe
hlt
mov
xchg
mov
jns
mov
pop
xchg
outs
(bad)
pop
mov
inc
in
ins
xchg
push
add
(bad)
pop
stc
push
xchg
cdq
mov
out
push
cmc
pushf
push
cld
scas
jge
leave
cmps
add
mov
xor
aad
ins
(bad)
cdq
mov
push
xor
retf
or
(bad)
in
adc
push
ret
(bad)
into
loope
sbb
jle
sbb
cmc
sbb
dec
retf
jb
pusha
in
in
in
xchg
cmp
movs
cmp
xor
or
enter
mov
push
fidiv
mov
xor
xchg
les
enter
(bad)
pop
adc
xchg
movs
or
fcom
or
pop
dec
test
gs
jge
push
in
push
cmc
ret
push
stos
daa
pop
xlat
nop
mov
dec
push
pop
cld
sti
js
sbb
adc
cld
cwde
and
inc
mul
ror
call
scas
or
push
ins
imul
inc
shl
or
jmp
cmp
mov
arpl
inc
enter
jmp
adc
cli
ds
(bad)
adc
and
ins
cld
movs
jne
sahf
ret
mov
mul
in
lods
cwde
inc
cdq
mov
scas
shl
adc
rcr
aam
cs
xchg
or
xchg
jns
push
adc
imul
aaa
cmp
mov
push
in
and
jae
popa
addr16
xor
pop
cmp
sar
test
ror
xchg
sar
mov
test
aaa
inc
leave
jle
cmps
leave
cmp
aad
ins
sub
outs
pusha
ins
aas
dec
rcr
xor
adc
adc
adc
mov
pop
popf
mov
(bad)
mov
movs
mov
push
xchg
dec
retf
xchg
sub
inc
push
test
mov
aam
out
jecxz
mov
es
mov
in
sbb
pop
or
nop
push
sbb
mov
push
dec
sub
lods
cmp
ret
sbb
loopne
mov
cmc
imul
stos
(bad)
imul
ins
sub
mov
cmp
push
cld
mov
and
pusha
push
test
jge
(bad)
test
sti
push
mov
mov
jle
jb
cwde
shl
dec
or
jle
enter
and
sbb
call
xchg
mov
or
loop
jns
dec
mov
sbb
in
mul
icebp
fidivr
leave
push
call
push
push
pop
mov
adc
jmp
adc
mov
push
test
jg
pushf
inc
pushf
nop
enter
pop
movs
sti
call
jbe
add
sub
fldenv
cmps
add
shl
mov
fld
cmp
int3
cli
lods
sar
mov
cmp
jo
jmp
adc
adc
(bad)
js
rcr
adc
push
sub
mov
add
fld
retf
mov
out
xor
xlat
adc
pushf
or
scas
dec
mov
adc
xchg
call
mov
movs
ins
jl
jne
popa
cmps
mov
mov
mov
enter
imul
dec
(bad)
call
rcl
hlt
(bad)
fisttp
mov
mov
dec
nop
and
jnp
xchg
dec
int
in
push
das
sbb
lock
popf
inc
mov
mov
paddusw
ret
out
ficom
push
loop
mov
mov
or
sbb
jae
and
fcmovb
(bad)
xor
pop
inc
ret
bound
inc
inc
sub
jb
aad
pusha
stc
or
pop
mov
or
mov
not
addr16
rcr
xor
out
or
ja
inc
clc
aam
push
xchg
ror
jp
into
push
shl
jae
cmps
cmps
mov
mov
mov
mov
jns
or
iret
idiv
inc
fs
pop
pop
mov
cmp
adc
jae
xchg
loop
jbe
mov
push
mov
jb
push
sbb
stc
fist
sbb
push
mov
out
fiadd
xrelease
(bad)
aaa
mov
pop
fldcw
neg
sbb
fisttp
sbb
fsubr
sti
sbb
popf
int3
nop
stos
pushf
aas
sbb
inc
add
mov
mov
retf
mov
mov
sub
leave
iret
out
es
nop
out
inc
loope
sub
shl
pop
jne
cld
or
jecxz
mul
mov
mov
fst
jno
mov
adc
(bad)
outs
out
test
and
xor
nop
test
inc
adc
fst
fisttp
jl
pop
xchg
mov
jo
and
inc
scas
mov
push
out
addr16
stos
mov
jecxz
push
mov
push
sub
jns
dec
xchg
inc
xor
cmp
xchg
sub
or
cmp
xlat
xchg
jmp
xchg
push
jnp
aas
sbb
loope
jge
movs
push
mov
xor
in
xlat
or
or
test
idiv
idiv
cmp
xchg
jmp
cmovae
xchg
adc
jbe
cmp
popf
pop
xlat
inc
in
dec
(bad)
fcomip
fidiv
test
cvtdq2ps
cdq
nop
or
xchg
mov
mov
daa
sar
add
sub
xor
mov
fdivr
js
int
sub
es
jne
imul
cmc
shl
mov
pop
adc
ins
xor
frstor
ins
jnp
sub
test
repnz
out
je
leave
pop
or
jg
aas
fdivr
in
and
es
js
ror
repz
shl
pushw
sbb
jne
repz
push
cmps
aas
cmp
mov
inc
mov
mov
xchg
jge
and
pop
clc
sub
pop
xchg
(bad)
jne
lea
push
or
vmovhps
sbb
je
icebp
call
inc
pop
cli
sbb
pop
cwde
and
scas
mov
pop
lock
or
aaa
js
fadd
in
jecxz
mov
shr
jo
and
(bad)
ficom
xor
pop
(bad)
or
sub
inc
cmp
jne
dec
mov
push
dec
inc
mov
lea
sub
cmp
and
fcmovnbe
jge
fwait
test
xchg
clc
hlt
nop
scas
xchg
sub
mov
push
xchg
mov
xor
cs
push
lods
test
sub
aaa
(bad)
cmp
mov
inc
popa
mul
add
mov
mov
jne
movs
pop
adc
dec
test
cmp
push
movs
add
adc
int3
inc
mov
pop
dec
cmps
(bad)
movs
ja
dec
inc
push
aam
and
mov
ss
ins
shr
je
jge
pop
lds
movs
or
dec
inc
xchg
or
xor
ins
retf
sbb
retf
ror
test
add
jbe
ror
(bad)
in
xchg
sub
jb
stos
inc
push
movs
sahf
mov
cmp
aaa
in
jge
pop
fwait
cwde
arpl
aas
sbb
shr
int3
movs
push
mov
inc
mov
pushf
mov
push
inc
push
mov
jnp
dec
adc
jns
aad
popa
or
ret
jmp
inc
mov
jbe
movs
inc
xor
loop
add
push
push
out
pop
add
scas
sub
(bad)
mov
xor
pop
fldcw
or
(bad)
mov
mov
mov
mov
dec
sahf
aam
stc
adc
pusha
data16
loop
sbb
das
(bad)
les
pop
adc
out
iret
repz
mov
add
cli
aam
add
bound
mov
jo
dec
cmp
shr
fcom
jmp
mov
mov
repnz
sbb
pop
adc
mov
dec
out
cs
or
outs
(bad)
shl
aam
mov
(bad)
out
pusha
xchg
call
xchg
fs
add
aas
lahf
fsub
dec
jge
dec
mov
dec
loopne
lods
sub
and
mov
mov
call
sub
nop
mov
movs
fimul
adc
rol
cwde
aam
pop
and
cs
dec
repnz
scas
stos
cmp
(bad)
addr16
or
aaa
dec
add
ja
xchg
loope
into
inc
rol
in
lods
movs
not
mov
(bad)
repz
sub
mov
push
cli
out
cmc
mov
in
and
sbb
pop
loopne
(bad)
mov
aam
cmp
adc
or
fsub
jg
(bad)
sub
pop
xor
push
aaa
arpl
dec
xchg
mov
int3
aaa
ja
int3
jecxz
loope
add
xchg
in
inc
adc
xchg
outs
movs
int3
aad
lods
sub
loope
xlat
sub
(bad)
mov
mov
sub
leave
in
mov
xor
pop
ja
test
pminsw
mov
daa
cld
sbb
js
xlat
inc
ins
imul
dec
jbe
fwait
push
popa
mov
pop
nop
pop
loope
imul
adc
cmp
and
ds
xor
push
mov
add
cld
mov
fst
jge
mov
mov
outs
clc
pop
push
inc
mov
cdq
and
sar
dec
test
mov
sub
xchg
pop
out
cld
dec
or
scas
fisttp
imul
mov
jle
sub
int3
pushf
inc
cwde
scas
pop
adc
cmc
push
add
int
inc
into
xlat
pusha
xor
nop
add
or
cmp
cmps
aas
fnstenv
imul
cld
push
cmps
gs
sbb
rcr
xchg
or
or
or
add
icebp
mov
sbb
arpl
mov
dec
dec
lock
pop
sub
fdiv
in
mov
shl
xor
aam
sti
mov
mov
jb
adc
mov
and
cli
add
sub
xchg
xchg
and
inc
jle
add
jp
xchg
mov
in
je
jo
and
sub
pop
fdivr
movs
and
mov
and
push
daa
shr
mov
mov
xor
neg
in
pop
jnp
cmc
jo
xor
push
mov
(bad)
sub
cmps
add
xor
cmps
shr
in
cmp
sbb
pop
mov
hlt
retf
jg
loope
mov
add
xchg
push
aam
xchg
xor
jne
xor
gs
jno
mov
mov
ss
push
out
and
mov
pop
or
jmp
sub
cmp
scas
imul
out
push
fsub
jge
xor
repz
mov
jmp
popf
mov
mov
mov
nop
mov
xchg
hlt
fwait
jecxz
push
push
xchg
aas
mov
loopne
pop
(bad)
aam
cmp
inc
adc
mov
jg
push
sbb
daa
out
fild
dec
pop
ror
mov
push
sub
test
push
jge
loop
push
movs
(bad)
jo
lahf
push
xor
sbb
jg
pop
sub
movs
stc
jg
jle
cmp
repnz
imul
mov
mov
call
js
aaa
sub
idiv
mov
xor
lods
mov
or
scas
dec
jg
inc
mov
(bad)
imul
pop
pop
jl
inc
jp
xchg
cmps
jbe
fwait
add
jo
cld
lods
popf
sbb
xchg
iret
mov
xor
mov
dec
loope
ficom
inc
push
sub
sub
adc
pop
sub
push
sbb
mov
test
mov
pushf
lods
das
daa
enter
mov
dec
mov
mov
fadd
push
push
cmp
pushf
ror
mov
jo
leave
in
(bad)
pop
sbb
sub
pop
js
and
ds
aaa
cmp
gs
pop
push
mov
push
push
push
cmp
xlat
push
adc
jbe
fstp
sahf
add
fwait
or
adc
or
mov
shl
push
out
cmp
fwait
mov
in
mov
inc
dec
inc
(bad)
xchg
jnp
push
pop
and
out
push
cs
pop
add
and
sar
jmp
cmps
jno
add
push
jle
mov
pop
mov
add
cmp
sbb
mov
movs
repnz
aaa
adc
inc
fcomp
push
es
(bad)
lock
mov
nop
sub
int3
out
data16
in
cmc
shl
lds
mov
push
adc
push
test
sub
cmp
add
(bad)
stos
jb
clc
mov
sub
addr16
jg
ds
jbe
mov
outs
cmp
add
sar
lahf
pop
xchg
fcomp
mov
(bad)
push
(bad)
push
ror
in
mov
cmps
cwde
outs
cdq
test
loopne
rol
sub
fst
int3
sub
mov
sub
mov
nop
xlat
(bad)
int3
nop
mov
xor
or
imul
inc
jne
sbb
adc
daa
jecxz
push
pop
cmp
ss
pop
xor
adc
jl
repnz
neg
cmp
dec
mov
sbb
cld
jmp
mov
(bad)
cmp
data16
push
adc
sub
mov
jg
shl
ins
loop
push
adc
ins
(bad)
and
add
inc
push
mov
cwde
lahf
shr
adc
cmp
pop
es
ins
and
inc
cmps
sar
pop
xchg
mov
outs
or
imul
mov
jge
(bad)
lods
push
push
inc
ds
mov
aad
sahf
mov
cmp
(bad)
shr
sar
lahf
xchg
xlat
(bad)
jne
xor
sub
ss
jno
mov
loope
fld1
das
aad
push
sub
dec
mov
fimul
mov
loop
leave
(bad)
gs
pop
jl
movs
ret
mov
push
jge
aad
test
enter
push
inc
pop
and
inc
cs
push
mov
adc
scas
retf
loope
jae
inc
inc
ins
rcr
movs
cmp
mov
mov
pop
retf
aad
push
or
sbb
add
xor
in
cs
push
push
mov
sbb
mov
jbe
in
out
add
cld
pop
mov
adc
in
mov
or
jno
mov
sbb
and
mov
outs
adc
call
das
add
mov
arpl
push
(bad)
jns
cmp
xchg
aad
je
and
loopne
dec
inc
cmp
int
sbb
or
stc
pop
mov
retf
and
call
and
enter
fiadd
rcr
retf
mov
dec
shr
xor
mov
and
pop
cmp
push
ret
sar
mov
outs
ror
lock
adc
loope
cs
pusha
pop
mov
mov
(bad)
xor
jmp
ret
xor
popf
cli
aam
mov
dec
sbb
inc
gs
fild
nop
xlat
xchg
pop
inc
push
pusha
push
dec
push
fnstcw
sbb
outs
mov
and
adc
je
call
fsubr
or
outs
xor
cmp
fwait
push
add
daa
repz
call
mov
and
jno
out
inc
push
cmps
pop
jmp
cld
inc
jg
dec
push
int3
pop
int
inc
sbb
addr16
xchg
ins
icebp
push
(bad)
loop
outs
xchg
retf
cmp
test
movs
sub
add
sbb
lahf
scas
push
or
out
aam
jns
fidivr
(bad)
das
mov
je
iret
cmp
iret
sbb
mov
jmp
pop
dec
shl
gs
ret
rcr
dec
sub
lds
sub
outs
xor
setb
in
mov
dec
lods
leave
fwait
std
imul
jmp
mov
es
movs
pop
sub
and
sar
cmp
outs
lods
into
cmp
mov
cmps
(bad)
or
pop
mov
adc
pusha
ja
and
xor
mov
add
sar
rcr
in
(bad)
(bad)
jmp
fxch
popa
mov
cwde
xchg
fld
scas
pop
loopne
or
rcr
sub
or
pop
shr
lods
fmul
xor
nop
loop
test
pop
addr16
dec
jge
and
jb
sub
scas
dec
je
div
cmp
mov
mov
xchg
hlt
test
inc
jg
or
xor
sbb
mov
into
mov
xor
sub
(bad)
fistp
pop
cmp
xor
clc
and
repnz
add
pop
push
mov
aaa
jno
sbb
mov
jp
rcl
popa
push
dec
cmp
add
inc
int3
or
aaa
into
jle
cmp
jecxz
cmp
sub
mov
test
inc
sbb
scas
pop
shl
pusha
std
nop
je
imul
lods
mov
cs
push
ss
outs
cmp
(bad)
test
jecxz
lds
shl
fcom
adc
sbb
push
or
in
sub
mov
dec
sub
or
mov
setae
inc
push
iret
mov
and
ficomp
xchg
xlat
data16
jp
cmps
ins
stos
inc
inc
daa
in
scas
pop
pushfw
call
push
jle
fstp
inc
repnz
fld
jp
adc
loopne
sahf
mov
rol
mov
stos
or
lods
adc
push
lock
pusha
hlt
xor
nop
mov
mov
stos
loopne
ins
test
and
jo
xlat
(bad)
test
pop
xor
cmp
mov
frstor
mov
imul
mov
fisttp
push
mov
xlat
inc
lods
mov
or
retf
push
repz
sbb
out
jb
ja
(bad)
shl
or
pop
out
ins
sub
dec
xchg
bound
push
jb
and
popf
jle
sti
cmp
pop
mov
shl
fidiv
xchg
jb
(bad)
jl
cmp
push
lea
cdq
movs
or
pop
adc
push
inc
inc
or
push
xor
es
(bad)
xor
and
add
inc
jmp
or
mov
cdq
inc
or
aad
outs
mov
sbb
hlt
and
stos
or
aaa
int3
lahf
dec
(bad)
mov
daa
add
mov
aad
cwde
popa
scas
jmp
arpl
imul
jne
mov
int
xor
call
cmp
mov
lods
push
jmp
and
fist
jg
push
xchg
or
test
sbb
and
jle
ds
scas
sbb
outs
not
aam
jecxz
sub
dec
push
lods
pushf
cld
sar
ret
push
imul
loopne
mov
xor
pusha
and
and
sub
adc
and
cdq
jae
sub
or
mov
add
adc
movs
mov
call
mov
pop
pushf
dec
push
push
mov
fst
rcl
xor
inc
xchg
fld
pop
adc
shl
hlt
inc
add
not
enter
cs
sub
(bad)
and
popf
call
stos
cmp
(bad)
mov
add
cmp
out
pop
popf
xlat
stos
sbb
sar
mov
mov
js
test
pop
xchg
mov
rcr
gs
jge
push
xchg
repnz
push
shl
pop
int
clc
int
out
mov
test
out
es
push
jns
add
aaa
jne
inc
loope
ja
movs
daa
push
sub
loope
dec
cwde
jl
das
mov
adc
mov
pop
sub
jp
in
and
arpl
mov
jns
inc
std
adc
push
xchg
idiv
jne
and
sbb
mov
jg
xchg
lods
cmp
shl
mov
fisub
and
cmp
mov
cmp
sbb
jmp
sbb
mov
fisub
jmp
ins
cmc
inc
add
jo
push
push
mov
add
out
cmps
jmp
lods
pop
push
jae
sub
enter
cld
inc
or
xchg
push
stos
ins
in
adc
xor
push
imul
push
jo
dec
or
xchg
dec
cs
(bad)
jns
fmul
mov
or
cwde
sbb
sbb
adc
add
mov
jne
fwait
add
and
and
shl
xchg
nop
or
fcom
aad
ins
in
dec
clc
add
pop
mov
loopne
push
stc
cdq
and
mov
push
mov
mov
cmp
cmp
add
sbb
mov
push
scas
inc
icebp
or
jmp
fwait
enter
loope
cmp
out
mov
sub
push
jl
jg
lock
add
xchg
pop
in
xchg
sub
retf
jmp
push
sub
inc
xor
add
inc
je
lock
fwait
or
shl
xchg
jnp
ins
mov
inc
add
call
xor
sti
cmp
dec
pop
stos
movnti
cld
bound
xlat
sahf
jns
add
imul
lods
jnp
sbb
and
jb
xor
stos
rol
fs
pop
pusha
imul
xor
lds
repnz
jmp
fcomp
pop
xor
ret
cmp
cmp
and
inc
push
mov
inc
stos
ficom
enter
aas
popa
retf
jmp
cmps
and
and
pop
loope
(bad)
mov
jle
cli
stos
in
or
dec
push
mov
push
or
and
(bad)
rcr
les
nop
sbb
(bad)
popa
scas
test
inc
loope
sub
sub
mov
sbb
mov
or
int3
jle
mov
das
outs
(bad)
dec
xchg
std
js
inc
pop
adc
sbb
adc
cs
lods
leave
sbb
cmp
les
fwait
mov
retf
shl
lahf
jmp
pop
push
push
xor
jb
add
mov
push
mov
stos
xor
gs
scas
add
cdq
push
inc
mov
fmulp
fst
fistp
xchg
pop
push
lea
call
jle
adc
push
xchg
out
xor
cmps
test
or
sub
inc
mov
stos
daa
sti
sahf
pop
leave
stos
out
fstp
mov
cdq
mov
retf
jns
mov
lods
ror
shl
sub
lds
fdiv
xchg
mov
(bad)
jns
cmp
mov
(bad)
xor
loopne
fwait
out
pop
ss
int
aad
sub
or
sahf
imul
xadd
mov
loope
sti
pop
add
mov
mov
outs
lods
cmp
in
in
pop
mov
xor
ret
xor
xchg
jnp
inc
xchg
test
push
lahf
out
daa
or
push
call
sbb
fadd
les
repz
mov
push
adc
push
inc
pop
test
or
ins
add
add
mov
ja
push
or
repnz
adc
shufps
sbb
mov
pusha
(bad)
repz
test
cwde
jecxz
or
xchg
jmp
into
add
dec
pop
add
inc
add
or
test
ret
loop
shl
dec
dec
mov
jno
cdq
fidivr
std
pop
retf
pop
jb
(bad)
or
fidivr
dec
mov
ja
bound
jae
pusha
inc
adc
xor
pop
sub
arpl
add
inc
sub
pop
push
aad
into
mov
out
pushf
xchg
or
pop
xchg
les
sbb
xchg
pop
sbb
add
fnsave
xchg
xor
mov
mov
retf
sub
jae
fs
lods
dec
jns
mul
pushf
jno
jmp
cmc
cmp
inc
lahf
mov
das
mov
mov
aaa
(bad)
clc
mov
hlt
dec
or
outs
adc
xchg
clc
dec
sti
stos
pushf
pop
xchg
push
bound
pop
sub
icebp
dec
adc
dec
pop
add
mov
mov
imul
xlat
fs
push
adc
sbb
jmp
lahf
and
and
call
mov
sbb
movs
pop
cmp
cmp
jno
fisttp
adc
hlt
adc
push
push
inc
dec
push
fsubr
shl
loope
mov
(bad)
(bad)
std
jbe
add
adc
mov
retf
aam
jbe
inc
call
jp
pop
dec
mov
loopne
sub
nop
xor
int3
aam
dec
in
outs
not
psubsb
add
cmps
jns
xchg
mov
data16
pop
adc
push
jo
int
xor
aaa
es
mov
push
call
loopne
xor
pop
cmp
int3
jmp
or
dec
rol
add
or
popf
les
mov
test
test
imul
mov
aas
sbb
movntps
and
push
dec
mov
fucom
cdq
ja
in
scas
in
stos
fnstcw
loop
repnz
leave
sub
xor
cmc
jge
shl
fs
sbb
add
pop
and
shl
cmps
mov
xchg
pop
jae
dec
jb
or
jae
into
retf
inc
and
xor
or
mov
mov
scas
mov
adc
add
lods
std
mov
js
enter
mov
xchg
in
movs
xchg
push
sbb
mov
(bad)
or
dec
mov
jnp
sbb
dec
outs
sub
xchg
mov
xor
lahf
dec
inc
lods
push
jns
jno
and
cdq
cwde
mov
sbb
jecxz
push
sub
mov
ret
adc
jno
test
cmps
pop
nop
jmp
aam
ret
ins
popa
add
call
aas
cmp
ds
adc
ja
out
jnp
loopne
iret
push
fbld
test
sub
div
pop
loope
sbb
imul
inc
mov
in
dec
stos
sub
mov
xor
je
in
or
(bad)
gs
fisttp
push
icebp
call
aaa
div
and
xchg
cmps
sub
test
imul
dec
arpl
pop
dec
outs
lock
les
push
mov
bound
ja
stc
push
and
rol
mul
mov
xor
adc
cli
push
(bad)
mov
mov
popa
aam
int
imul
push
ds
mov
inc
cs
sbb
fiadd
outs
jne
add
jae
inc
mov
(bad)
sbb
mov
push
call
and
inc
out
mov
data16
std
push
jmp
cmp
lea
shl
mov
sbb
push
std
hlt
sub
(bad)
jne
out
sbb
mov
mov
jmp
dec
xchg
and
push
add
popf
mov
sbb
pop
cli
loopne
rol
movs
outs
call
mov
aam
loopne
push
jle
mov
popa
sub
out
xchg
out
rcl
dec
call
mov
cmc
shl
call
mov
test
daa
xchg
scas
mov
ds
loope
fwait
push
test
cmps
jae
mov
in
push
adc
iret
stos
out
adc
sbb
and
sti
push
push
mov
aad
mov
mul
inc
popa
jp
mov
out
(bad)
in
stos
fcomp
xor
bound
add
or
in
jmp
fsubr
xchg
mov
stc
cmps
pop
daa
mov
add
sbb
lock
xchg
shl
mov
in
or
scas
mov
(bad)
pop
mov
repnz
in
lds
neg
mov
into
dec
test
jnp
je
(bad)
sub
test
inc
sub
shr
jp
inc
or
fdiv
sbb
pop
test
out
out
arpl
in
dec
dec
es
shl
add
add
scas
fs
lahf
cmp
mov
popf
add
outs
xchg
jecxz
and
cli
cmps
push
in
movs
adc
cmp
or
jb
mov
pop
loopne
mov
xor
and
jmp
jnp
in
pop
and
pop
jl
push
scas
cs
aad
repnz
retf
xchg
and
pop
cmp
cmps
pop
xlat
or
mov
inc
ja
pusha
test
sbb
jmp
jle
jae
mov
dec
popa
into
dec
cdq
mov
push
mov
pcmpgtd
outs
dec
push
lds
cld
xor
int3
stc
dec
imul
mov
jl
push
add
cs
push
sub
xchg
adc
push
hlt
sub
out
add
cmp
mov
xchg
out
or
fs
pop
and
(bad)
popf
(bad)
pop
in
xor
movs
xchg
sbb
aam
cmp
stc
idiv
out
or
fidivr
inc
mov
cdq
sbb
xchg
jecxz
pop
push
sbb
aam
mov
adc
xchg
mov
mov
cwde
iret
mov
add
inc
xor
pop
push
jecxz
ss
hlt
popa
mov
lods
jo
ret
int
sar
shr
push
mul
or
sub
shr
sbb
pop
popf
aam
xor
(bad)
push
in
movs
cdq
mov
cmp
adc
jecxz
inc
out
push
pop
mul
push
and
xchg
push
xor
retf
test
xchg
mov
xor
pop
push
jb
adc
sbb
sahf
call
loope
loope
jecxz
push
movs
lea
xchg
mov
xor
sbb
aas
mov
arpl
adc
gs
jno
pusha
xchg
cdq
mov
push
mov
cwde
sar
lods
push
fwait
xor
iret
dec
std
sub
movs
adc
push
pushf
or
ins
push
iret
jne
enter
cli
stos
js
lock
xchg
pop
test
dec
imul
inc
sub
xlat
xor
repz
retf
js
mov
mov
lods
pop
ins
adc
push
stos
and
ret
xor
mov
xchg
rcl
in
mov
hlt
test
xchg
sar
push
dec
add
stos
xchg
outs
stos
mov
jmp
push
movs
das
mov
push
mov
in
cwde
lods
add
or
sub
cmc
mov
fbstp
pop
sbb
jno
sub
sub
hlt
inc
mov
mov
sub
jmp
jmp
shr
xor
jb
cmp
xchg
jmp
xchg
sahf
iret
mov
push
or
mov
imul
pop
call
mov
daa
into
ja
cli
push
ror
xchg
add
into
push
jae
aam
ja
jg
aad
loope
adc
ret
jg
xor
sbb
or
pop
or
add
jnp
cli
nop
sbb
aas
ss
xchg
mov
clc
mov
stos
push
mov
pop
fld
sti
jae
outs
(bad)
fld
or
(bad)
xor
fsubr
pop
jno
or
fldcw
xchg
(bad)
jb
loope
ret
adc
pop
inc
idiv
and
cs
add
lock
cdq
add
push
push
pusha
arpl
outs
ins
mov
fldcw
ss
and
or
das
xlat
jae
push
pop
sub
test
rol
ret
sbb
push
repz
dec
and
dec
int3
pop
daa
dec
cmp
nop
js
inc
jmp
push
mov
out
rcl
sub
adc
sar
mov
adc
int
cmp
popa
fstp
scas
cld
mov
cs
and
xchg
cmc
mov
and
adc
or
push
icebp
outs
retf
popf
jg
jle
mov
test
addr16
push
in
(bad)
add
sbb
mov
push
mov
jbe
mov
sub
nop
je
lea
sahf
cmp
sub
cmp
mov
jecxz
fucom
pop
retf
dec
mov
xchg
mov
mov
or
add
push
mov
outs
xlat
xchg
cdq
ja
xor
pop
cmp
dec
and
xor
cs
pop
dec
je
out
mov
or
je
xchg
test
xchg
fisttp
imul
les
mov
fisttp
sbb
pop
cwde
stc
dec
iret
cdq
fild
jbe
dec
std
jne
adc
idiv
cmp
sbb
mov
cli
jno
fsubr
mov
test
sbb
pop
inc
sti
sbb
fisub
mov
shl
mul
call
enter
es
xor
xor
(bad)
jns
stos
jecxz
lods
lds
sub
scas
dec
out
mov
sub
lods
je
sahf
imul
and
arpl
push
(bad)
mov
cmps
dec
ror
push
dec
movs
call
loopne
ds
out
rcr
sub
push
add
mov
add
or
mov
lahf
clc
mov
mov
shl
push
sbb
xor
ins
jne
xchg
inc
dec
mov
je
mov
ins
add
jns
idiv
xor
(bad)
pop
or
pop
add
stos
jge
aaa
mov
xchg
cld
fidiv
iret
dec
hlt
cld
fistp
push
mov
call
jns
sub
or
jl
mov
les
sbb
pop
in
adc
or
pop
movs
test
in
imul
mov
inc
fsub
inc
inc
popf
lds
adc
fadd
fsubr
iret
xor
xor
mov
mov
dec
pop
sub
or
icebp
test
jp
xchg
pop
jle
jbe
mov
jo
les
jbe
mov
loope
adc
push
inc
cmp
jp
push
and
iret
sub
mov
out
loope
fadd
into
jne
push
jp
xor
add
cdq
add
adc
sub
jge
xor
xchg
sti
fnstsw
lock
cwde
jno
dec
out
cmp
and
jmp
icebp
pop
lds
fs
movs
neg
daa
adc
jno
retf
sbb
cmp
sub
sbb
lods
xchg
loopne
push
in
dec
mov
pop
pop
adc
in
mov
lods
inc
fld
mov
lea
cmp
mov
mov
sbb
(bad)
mov
jmp
dec
dec
xlat
cmps
lea
mov
or
mov
sbb
ror
dec
sub
mov
iret
adc
cmps
in
inc
imul
cwde
push
sub
out
mov
inc
jg
sbb
int
xor
addr16
jnp
sbb
and
add
or
(bad)
cmp
in
icebp
or
adc
hlt
and
jne
or
jecxz
push
(bad)
out
nop
adc
cmp
leave
rcr
xchg
mov
sbb
enter
test
push
jb
jge
ret
pop
aas
mov
jmp
imul
rcl
in
xchg
pop
sar
mov
pop
and
or
mov
sti
mov
clc
(bad)
sbb
jmp
out
add
pop
(bad)
pushf
dec
dec
ins
movs
mov
loop
mov
cmc
fmul
or
push
sbb
mov
mov
add
addr16
jbe
fisubr
mov
(bad)
sub
lods
lock
ret
xchg
adc
mov
imul
pop
loopne
add
stc
jne
adc
fdivp
lods
mov
cmps
xchg
dec
pop
iret
gs
cli
ins
enter
(bad)
cli
mov
adc
mov
xchg
nop
not
je
push
adc
aaa
sub
xor
fld
mov
sub
or
ins
mov
loop
mov
cdq
rol
les
ins
fisub
push
pop
rol
rcl
das
call
retf
xchg
jg
loope
dec
ss
fst
inc
xchg
scas
and
test
cmp
fdiv
dec
dec
inc
sub
sbb
cmp
loope
fadd
dec
sbb
jo
mov
push
xor
mov
add
mov
pushf
sti
scas
sbb
xchg
out
loop
hlt
je
sbb
jo
dec
les
sub
mov
dec
and
scas
scas
sbb
xchg
mov
mov
aad
xor
mov
out
scas
retf
and
mov
and
mov
loop
pushf
mov
bound
mov
nop
js
outs
out
xchg
movs
(bad)
sbb
jecxz
push
(bad)
and
sbb
sub
pop
cli
ja
add
xchg
adc
(bad)
rcr
ins
cmp
pop
shr
sbb
mov
add
cmps
int
(bad)
out
xchg
cs
iret
test
jmp
or
popf
jae
mov
add
xchg
dec
adc
shl
pcmpgtb
adc
add
push
aad
inc
jo
cmp
jbe
lahf
fbstp
ss
sub
push
jnp
jns
inc
push
sar
mov
jmp
pop
xchg
call
cmps
or
ret
repz
jle
leave
sahf
mov
rcr
dec
gs
sub
test
shl
repz
int3
lods
mov
in
sahf
adc
jp
mov
cmp
sbb
xchg
and
pop
mov
or
mov
hlt
push
nop
js
mov
cmp
dec
jbe
mov
cwde
call
mov
jl
test
ja
(bad)
scas
mov
push
mov
int
fild
mov
rol
test
retf
sbb
pop
cmp
pop
push
dec
cmp
mov
hlt
inc
lock
or
inc
mov
or
jg
xchg
out
cmps
mov
jmp
push
ficomp
(bad)
stos
call
ret
out
scas
sbb
rcr
clc
and
mov
lock
add
das
movs
push
xchg
jp
or
fidiv
es
jge
mov
jbe
stos
or
retf
in
cmp
ja
sbb
enter
leave
jle
sub
inc
sub
xlat
fisubr
aas
push
dec
js
rol
push
mov
ins
mov
xor
xor
and
lock
out
sbb
nop
loopne
mov
jge
retf
cmp
jmp
jo
arpl
les
(bad)
(bad)
xlat
adc
fcom
add
inc
inc
mov
ins
sbb
xor
push
xchg
push
or
sbb
out
mov
inc
cli
xchg
pop
and
mov
dec
mov
test
sub
sar
jo
mov
out
into
jae
and
mov
imul
xor
cmps
xor
and
sub
(bad)
jno
xor
xchg
inc
scas
and
adc
cmp
mov
cli
dec
mov
(bad)
or
xor
sbb
or
push
lods
aam
jae
lds
lea
jp
rcr
int3
push
jg
sbb
push
enter
dec
sub
ja
mov
fs
and
adc
cmp
mov
clc
ficom
push
retf
dec
dec
mov
inc
fistp
jnp
popa
mov
pop
test
dec
jp
not
pop
cdq
ror
and
test
jmp
hlt
fwait
xchg
mov
jne
cmp
add
dec
enter
in
pop
jno
retf
xchg
cmc
jecxz
cs
gs
sbb
mov
adc
ror
dec
ss
ficom
int3
jo
movs
xchg
mov
sahf
cli
push
add
imul
mul
push
mov
shl
scas
jge
stc
in
xor
xchg
mov
pusha
dec
sbb
xor
loope
mov
add
sub
xor
dec
mov
push
cmp
lds
and
cmp
mov
retf
add
ret
mov
mov
fdiv
outs
mov
xlat
push
inc
jge
pushf
cli
lahf
cwde
jne
xchg
sahf
je
cmp
dec
adc
aaa
mov
dec
xor
lea
test
outs
mov
adc
inc
mov
pop
add
dec
cmp
mov
mul
sbb
add
xor
mov
xor
dec
in
cwde
sub
jns
test
in
cmps
mov
mov
pushf
mov
in
scas
in
stc
pop
add
mov
call
cmp
adc
add
(bad)
jge
xor
inc
(bad)
mov
pop
sbb
pop
fwait
dec
out
mov
mov
push
adc
jge
pop
or
fs
shl
fwait
pop
mov
jmp
dec
in
mov
imul
loopne
dec
mov
mov
adc
pop
jmp
test
dec
in
dec
int
push
addr16
cmp
add
xchg
mov
lds
jb
cwde
add
sbb
jle
jae
ins
loopne
loop
xchg
lea
xchg
movs
xchg
dec
lahf
nop
js
xor
mov
jmp
call
pop
rcr
(bad)
loop
mov
inc
jno
adc
push
add
movs
jne
push
sbb
jg
or
push
mov
out
jne
aas
shr
mov
cmc
js
xchg
jmp
aas
dec
adc
fist
jmp
sahf
mov
nop
ret
ret
pop
ror
or
fld
inc
inc
adc
or
jge
xchg
xor
rol
add
inc
dec
ret
mov
push
xchg
loope
jns
test
sub
pop
(bad)
cmc
mov
icebp
push
jge
and
test
push
daa
ror
popf
add
cmp
and
cli
lahf
in
daa
sub
mov
dec
iret
add
cmp
xor
and
rol
push
es
xchg
jp
add
push
daa
add
in
lods
ret
dec
(bad)
mov
clc
out
pop
mov
imul
jmp
aaa
fild
cmc
lds
cld
pop
mov
mov
or
dec
sti
push
mov
xchg
ja
inc
stos
dec
push
sub
mov
data16
(bad)
(bad)
scas
inc
mov
loop
sahf
inc
xor
outs
stc
jge
adc
movs
dec
and
scas
mov
or
bound
fstp
std
std
push
xchg
mov
adc
mov
fdivr
or
test
jmp
ret
cmps
jno
mov
icebp
es
push
fcmovnb
test
lods
jge
je
pop
jle
es
cmp
sar
sahf
mov
test
xchg
pop
jae
inc
jne
ins
jge
retf
mov
push
sbb
mov
push
fsubr
icebp
cmp
push
fnsave
pxor
imul
popf
mov
xchg
push
inc
mov
in
jle
lock
mov
mov
jmp
out
xor
daa
pop
in
ret
adc
jb
mov
aam
aam
mov
in
stos
pop
clc
xor
mov
ins
sub
fwait
jp
cld
enter
popf
movs
xchg
pushf
inc
popf
push
aas
jbe
std
add
and
jge
dec
push
mov
bnd
es
mov
popf
ds
mov
aad
jmp
pop
and
dec
(bad)
shl
xor
cmp
lahf
dec
es
test
mov
imul
xchg
or
gs
lahf
sbb
xchg
fisttp
icebp
lahf
imul
aam
mov
push
sub
bound
ins
(bad)
mov
sbb
add
(bad)
xlat
cli
inc
cmp
mov
cdq
and
ss
idiv
js
test
lods
aas
inc
int
movs
mov
call
push
lahf
in
inc
add
jp
inc
int3
int3
fucomp
adc
outs
ror
test
repnz
mov
jbe
bound
push
loopne
hlt
mov
sbb
push
add
mov
and
fcomp
rol
or
inc
popa
lock
loope
mov
mov
pop
fnstcw
in
jno
push
pop
adc
cmc
stos
ret
in
lods
sbb
cld
cs
adc
adc
dec
(bad)
dec
lods
pop
add
neg
jno
lods
mov
shl
cmps
call
jg
add
rcl
dec
in
mov
popf
xchg
ror
add
(bad)
mov
aaa
push
fbstp
leave
or
aam
add
push
or
mov
mov
(bad)
bound
ss
out
fbstp
pop
dec
xor
retf
repz
jle
movs
lods
dec
mov
arpl
repz
int
loop
int3
dec
cmovns
leave
xchg
push
scas
fsub
push
movs
xlat
mov
inc
ja
loop
push
out
movs
jge
pop
mov
addr16
into
or
push
cmps
sahf
mov
sub
std
call
xor
mov
inc
dec
sub
test
fiadd
scas
lea
add
cmps
and
jno
imul
dec
add
lods
mov
xor
lock
push
push
cmp
mov
(bad)
or
shl
adc
retf
pusha
mov
cld
aad
adc
push
cmc
pop
sbb
xchg
jnp
icebp
push
cli
enter
idiv
ret
inc
cwde
mov
lahf
mov
mov
mov
xchg
fwait
gs
mov
mov
std
dec
fidivr
cmp
jae
lea
sub
xor
xor
xchg
jecxz
cmp
out
mov
pop
mov
idiv
out
sbb
out
shl
call
jns
adc
and
fiadd
(bad)
(bad)
sub
mov
pop
pushf
push
fmul
sbb
imul
dec
std
adc
fdiv
adc
sub
arpl
add
add
test
(bad)
or
or
pop
sub
mov
addr16
xchg
and
push
mov
sti
jmp
arpl
inc
out
add
stos
or
fwait
lahf
fst
mov
add
or
mov
es
mov
and
push
inc
dec
sbb
popa
cmp
in
jb
mov
sub
fnstcw
and
jmp
cld
repz
xchg
repnz
jmp
or
mov
jno
adc
jbe
mov
adc
je
pop
ja
jne
xor
add
xor
pusha
pop
test
es
or
shl
bswap
pop
test
in
mov
out
bsr
sbb
idiv
push
(bad)
jmp
pop
icebp
cmp
inc
cmp
adc
jge
add
ror
pop
mov
push
fisub
sbb
cmp
xor
cmp
pushf
lahf
je
out
jl
loopne
imul
adc
jmp
cdq
pcmpgtb
shl
iret
xor
test
int
icebp
inc
aas
inc
push
nop
ja
test
test
sbb
dec
push
pop
mov
movs
fcmovnb
push
or
adc
imul
daa
adc
(bad)
ret
cli
sbb
mov
stos
daa
inc
inc
adc
leave
aaa
push
add
cmp
add
cdq
outs
bswap
mov
cmps
cmps
jl
xor
push
call
adc
mov
jmp
loop
jle
jae
push
sub
arpl
je
inc
or
cmp
add
aas
icebp
ja
out
push
sbb
or
adc
pop
cmp
xor
mov
mov
push
or
sbb
xchg
inc
das
xchg
sbb
cmp
(bad)
int
and
(bad)
xor
mov
lahf
push
mov
add
adc
mov
sbb
fcom
iret
fwait
cmp
(bad)
jmp
xchg
sub
std
dec
in
xor
jmp
mov
aaa
in
call
(bad)
stos
call
push
pop
icebp
cmp
out
inc
jg
and
push
sbb
rcl
xchg
out
ss
js
or
lahf
fld
push
sbb
dec
cmp
cmp
xchg
out
ins
retf
int
js
ds
or
ins
adc
cmps
push
imul
sub
or
mov
mov
and
(bad)
push
push
bound
imul
sbb
adc
cli
hlt
ss
jbe
aad
sbb
pop
xchg
pop
cwde
sub
sub
and
mov
mov
test
pop
lea
mov
push
or
jns
xchg
cld
retf
lock
imul
add
out
push
inc
pushf
and
inc
ins
cmp
test
retf
stos
sub
cmp
xchg
pop
and
xchg
mov
aam
push
mov
out
mov
test
movs
nop
fild
js
fs
popa
imul
inc
jp
mov
mov
cmp
repnz
dec
push
dec
out
mov
xchg
and
dec
push
cmps
mov
or
scas
or
inc
push
call
mov
jo
jb
jae
shl
mov
cli
(bad)
lock
mov
mov
cmp
imul
jg
sar
push
xor
mov
gs
ds
add
push
js
jge
jae
xlat
pop
loope
mov
pop
sti
mov
fcom
aad
fild
sti
ror
fist
and
xlat
jno
jmp
out
call
or
sbb
xchg
pop
(bad)
lahf
fsubr
lods
lods
stos
dec
sub
mov
ins
pop
enter
push
cmp
test
add
cmp
(bad)
push
loop
(bad)
in
repnz
adc
pop
sti
sub
jbe
pop
add
scas
retf
das
sub
(bad)
push
push
and
mov
ins
(bad)
jge
jno
jl
cli
sbb
cmp
sbb
call
xchg
dec
push
movs
mov
sub
dec
push
imul
out
mov
je
and
iret
divps
mov
cmps
push
cld
mov
dec
in
fsub
lods
sbb
retf
pusha
xchg
mov
stc
cmp
jo
mov
lea
pop
add
mov
lods
cli
mov
fisttp
lock
mov
sbb
imul
or
push
mov
pop
or
xor
sbb
outs
mov
cmps
jmp
test
mov
aam
and
test
push
jge
or
cli
aaa
jne
cwde
cmp
pop
das
dec
mov
scas
xchg
cdq
ret
mov
pop
sub
scas
lock
pop
add
sub
movs
test
repnz
jnp
daa
mov
pop
cli
lods
scas
imul
test
pushf
fisttp
push
loop
outs
sbb
dec
or
scas
push
push
xor
retf
out
(bad)
in
pop
inc
fldenv
mov
sbb
call
dec
in
jns
jg
and
dec
leave
pop
scas
iret
mov
pop
xor
je
fs
(bad)
pop
add
add
js
xor
dec
add
inc
mov
push
xchg
inc
out
xor
inc
xchg
in
icebp
sbb
or
pushf
pop
sti
pop
xor
aas
inc
(bad)
(bad)
push
jmp
dec
imul
ret
scas
fisubr
(bad)
fdivr
icebp
pop
xlat
pusha
fidiv
retf
xor
push
js
cmp
adc
bound
mov
or
outs
push
jge
or
mov
mov
into
sbb
or
inc
xor
jecxz
inc
mov
pop
pop
and
add
fisttp
fcmove
fsubr
add
adc
rcr
push
cmp
cmp
inc
jecxz
loop
mov
xor
cmp
and
outs
xrstor
inc
pop
mov
enter
ret
pusha
sub
sar
ret
and
pop
mov
xlat
ja
sar
aaa
add
inc
sti
push
mov
dec
add
xchg
xchg
jge
jae
pop
sbb
into
ins
fdivr
lods
(bad)
jle
nop
test
ret
call
clc
fucomp
std
pusha
or
test
jb
es
cwde
cmc
neg
add
and
pop
or
jp
mov
ins
cmps
int3
int3
test
sub
enter
ja
sub
shl
outs
mov
ss
(bad)
cdq
add
fwait
lds
dec
in
dec
mov
pop
dec
std
dec
dec
cmp
sub
std
jl
shl
dec
cmp
and
ins
ds
or
xchg
inc
adc
pop
test
pop
mov
call
push
jl
jnp
call
pop
cmp
mov
scas
pop
mov
sbb
movs
(bad)
mov
pop
out
pop
popa
dec
ja
jl
jb
int
jo
call
fist
pop
lock
(bad)
in
or
dec
iret
mov
dec
inc
mov
clc
and
movs
and
add
mov
loopne
fisub
inc
cmc
push
cld
jecxz
pop
jle
out
ins
mov
gs
cmp
mov
push
jno
aam
inc
fwait
pop
gs
mov
mov
mov
call
mov
iretw
adc
retf
out
arpl
std
test
mov
cdq
shr
push
shl
push
xchg
lods
and
push
mov
pop
aam
fistp
adc
test
call
retf
retf
sbb
(bad)
retf
retf
jge
test
dec
imul
jno
sbb
jo
int3
pusha
add
mov
xchg
sub
pop
adc
and
sbb
cmp
or
icebp
pop
xchg
loope
dec
mov
lods
jmp
and
test
adc
jecxz
adc
xchg
cmp
test
jmp
xor
sbb
fimul
repnz
test
test
and
xchg
jl
aaa
gs
jp
jge
ins
ja
scas
dec
ins
xchg
add
jno
shl
outs
ror
ror
pushf
jg
pop
dec
dec
js
aad
xchg
jp
xchg
int3
lods
popa
dec
mov
or
adc
es
bound
out
out
test
dec
jl
mov
imul
lods
(bad)
xor
es
push
lods
(bad)
stos
pushf
pop
inc
push
cmps
movs
js
cmp
inc
icebp
mov
into
call
test
enter
fmulp
(bad)
popf
loopne
pop
in
mov
scas
cmps
dec
rcl
jo
or
push
mov
cs
push
sub
push
outs
sub
jp
push
(bad)
cmps
or
sbb
mov
mov
mov
(bad)
call
mov
or
jno
test
push
ss
mov
retf
sbb
mov
add
fisttp
jl
push
pop
xor
loopne
jne
sub
adc
retf
adc
scas
loopne
sub
pop
pop
test
lock
(bad)
imul
shr
lock
cmps
adc
mov
mov
clc
in
adc
adc
xor
in
mov
test
test
mov
clc
dec
cmp
sti
call
jmp
push
pop
(bad)
mov
xchg
jnp
add
rol
sub
aam
sbb
retf
add
mov
fs
and
fsub
mov
mov
pop
xchg
dec
pop
dec
mov
mov
lods
add
mov
sub
and
mov
dec
push
mov
mov
xor
push
mov
fdivr
cmc
push
pop
scas
movs
cmc
cmc
push
sbb
jmp
inc
pop
or
clc
out
and
inc
xor
aam
test
std
int3
pushf
mov
ss
fld
add
mov
push
add
push
in
fwait
idiv
cmc
adc
call
cmp
in
mov
not
sbb
mov
movs
add
xchg
sbb
cmp
mov
adc
int3
loop
pushf
sbb
dec
lds
mov
jbe
nop
leave
outs
dec
sbb
rcr
mov
add
jmp
into
das
ins
lahf
sar
sbb
into
push
icebp
mov
pop
(bad)
cmc
cmp
cmp
push
adc
push
and
retf
dec
sbb
jecxz
xchg
mov
adc
push
sahf
fsub
mov
push
sub
or
push
mov
mov
sub
call
add
push
imul
test
arpl
mov
rcr
lock
mov
jmp
sub
add
lds
clc
outs
in
neg
push
xchg
lods
mov
pop
mov
add
and
cmp
out
xchg
jge
xcrypt-ecb
cmps
int
inc
jo
in
pop
add
dec
mov
int3
inc
cmp
retf
dec
mov
or
out
add
xor
sub
push
idiv
clc
(bad)
mov
inc
mov
out
outs
push
xor
mov
(bad)
sub
ins
sub
or
int
inc
scas
and
mov
clc
test
test
mov
sub
sbb
mov
cld
push
outs
jns
adc
scas
pop
mov
mov
dec
les
jb
(bad)
jmp
jae
pop
leave
cs
mov
or
jp
rcr
push
cmp
aaa
or
fld
scas
das
ror
xchg
imul
pop
jns
lds
sub
daa
ins
and
out
sbb
sub
pop
out
mov
es
xchg
(bad)
adc
fld
push
mov
mov
xchg
push
adc
jno
mov
mov
nop
ret
or
movs
adc
je
xchg
sub
stc
xchg
dec
sub
jo
test
xor
sahf
push
stos
loop
(bad)
call
and
outs
gs
and
jno
dec
adc
lods
mov
jmp
and
sbb
xlat
and
pop
loope
dec
adc
lods
inc
mov
jecxz
and
lahf
dec
and
stos
mov
(bad)
jmp
xlat
xor
(bad)
in
ins
pop
out
mov
daa
sbb
(bad)
cdq
xchg
or
xchg
cmp
inc
aad
pusha
fdivr
jecxz
push
push
and
inc
mov
jo
jne
xchg
adc
sahf
rol
in
fimul
cmps
sbb
loopne
push
inc
push
es
(bad)
addr16
jmp
sar
or
pusha
mov
aam
xchg
shl
or
loope
sub
imul
and
ror
mov
in
mov
ror
fcmovu
push
stc
push
dec
mov
sub
stos
arpl
out
xor
pop
lea
pop
mov
jl
jbe
mov
ins
jns
inc
add
pop
mov
(bad)
jmp
ins
or
xor
sub
sar
mov
lods
mov
cmps
fimul
(bad)
jp
(bad)
xor
add
jns
icebp
pop
or
cmp
cmp
pop
inc
ds
cli
mov
movs
(bad)
into
sbb
movs
retf
dec
das
cmp
imul
rcl
push
(bad)
outs
int3
dec
into
scas
not
shr
adc
(bad)
cmp
scas
mov
or
jb
sub
clc
jne
and
push
movs
or
add
add
adc
out
dec
loope
fisub
retf
pusha
dec
repnz
jb
in
ins
xchg
mov
sbb
mov
lahf
jmp
jnp
xor
rcr
test
in
retf
adc
std
pushf
out
jmp
xchg
pop
push
fisttp
retf
jo
push
sub
jl
mov
adc
cmps
push
dec
xchg
or
bound
or
int
inc
mov
push
push
enter
inc
out
push
xor
add
clc
sbb
sbb
inc
call
and
pop
mov
mov
arpl
scas
addr16
jge
leave
mov
mov
(bad)
cmp
aaa
pop
inc
pop
rcl
mov
scas
mov
fdiv
mov
and
in
outs
cmp
mov
mov
retf
test
xchg
ror
sub
test
iret
repnz
setae
push
cli
or
sahf
xor
cmp
stc
add
es
pusha
xor
sub
add
cmc
bound
xchg
in
dec
test
imul
lahf
mov
je
adc
movs
cld
push
aaa
cs
add
mov
xlat
pop
push
jg
sbb
(bad)
cmp
jmp
mov
es
out
scas
or
out
(bad)
loopne
jp
or
ss
out
fist
add
mov
mov
lds
sti
adc
ja
mov
les
cmps
jne
xchg
jo
and
in
adc
inc
cmp
or
ja
or
sbb
adc
xchg
mov
push
dec
mov
pop
and
jnp
or
xlat
push
inc
xchg
rol
dec
not
mov
inc
or
dec
es
jnp
pop
push
mov
cdq
(bad)
mov
dec
gs
adc
bound
cmp
pop
fdivrp
xchg
and
mov
adc
mov
ret
xor
test
cli
xor
enter
aas
cmp
jns
mov
xor
out
cmp
and
or
add
and
lea
out
fmul
daa
test
bound
aaa
or
jno
push
and
fwait
sub
and
push
push
fwait
cmp
rcl
fldl2t
ret
and
pop
mov
add
es
clc
mov
add
(bad)
sbb
aas
xor
out
sub
loope
in
dec
mov
mov
jp
fs
test
push
imul
test
fisubr
xchg
pop
xchg
jecxz
mov
dec
push
cmp
mov
add
dec
add
hlt
jmp
adc
shr
inc
mov
icebp
pusha
mov
pop
jne
dec
pop
dec
pop
pop
cmp
push
sbb
gs
shr
sbb
ret
fsub
leave
jmp
xchg
retf
out
sub
push
pushf
mov
mov
out
sti
dec
jb
mov
(bad)
pop
scas
(bad)
inc
mov
push
inc
or
xchg
xchg
fisttp
fwait
test
xor
dec
push
scas
jb
add
loop
movs
std
pop
inc
sub
test
sbb
cmps
aaa
in
mov
dec
cs
add
pop
push
mov
push
xor
dec
inc
xor
fbld
xchg
cs
jno
and
(bad)
mov
and
lock
stc
lahf
repz
push
sub
push
push
fistp
xchg
jae
jno
inc
inc
scas
nop
sbb
cmps
or
movs
mov
out
push
and
cdq
test
pop
stc
mov
neg
iret
mov
in
ret
ds
stos
mov
cmp
jns
pop
ins
test
(bad)
je
or
xor
shl
imul
icebp
jmp
mov
or
pusha
fidiv
mul
xor
fisub
inc
jge
mov
ret
cs
test
push
rcr
add
mov
adc
je
xchg
imul
mov
mov
xchg
(bad)
sti
sbb
pop
cld
dec
add
repz
pop
ret
and
sbb
push
out
add
imul
je
popf
mov
cmc
shl
add
(bad)
fldcw
nop
imul
and
cmc
add
adc
dec
jecxz
std
sbb
mov
sahf
(bad)
mov
inc
push
adc
imul
jne
fisub
jae
jae
aad
pop
cmp
inc
popa
mov
jmp
nop
inc
pop
jbe
add
jne
push
enter
pushf
sti
inc
sub
icebp
imul
ins
push
jecxz
or
fwait
enter
mov
pop
add
ins
mov
ss
pop
cdq
jne
pushf
push
sub
mov
dec
and
data16
shl
(bad)
out
adc
pop
xor
nop
hlt
dec
mov
js
js
mov
adc
stc
sbb
clc
(bad)
push
(bad)
jnp
into
les
out
dec
lods
sbb
fwait
aad
inc
and
inc
sbb
pop
int
pop
mov
in
rep
sbb
xchg
stc
xchg
sub
push
adc
les
sbb
cmp
dec
inc
(bad)
xchg
stos
les
jle
mov
scas
inc
(bad)
xchg
dec
test
in
shl
pop
add
mov
enter
mov
inc
bound
pop
jge
lods
hlt
adc
xor
dec
mov
mov
push
pop
push
inc
les
inc
xchg
hlt
jge
test
lea
cld
push
pop
sub
cmp
pop
clc
mov
pop
xor
in
mov
sahf
lds
popf
iret
jno
int3
(bad)
sti
fldenv
xchg
sbb
or
inc
js
push
shr
call
mov
push
mov
pop
fdivr
push
daa
mov
sahf
in
call
dec
pop
test
jnp
mov
repz
cld
jmp
lock
(bad)
sbb
inc
mov
fiadd
fist
movs
popf
dec
les
lds
iret
jnp
jl
xchg
(bad)
shr
inc
push
aaa
inc
or
shl
rcr
repz
mov
cmp
add
rol
jl
jae
stos
loopne
jno
outs
or
jecxz
xchg
(bad)
hlt
imul
sbb
sti
dec
sahf
cwde
adc
sbb
in
pop
jl
mov
xor
pusha
arpl
fnsave
and
ret
repnz
out
mov
jno
lahf
in
or
cmps
in
mov
or
pop
enter
xchg
jge
bound
sbb
sbb
stos
jns
aas
popf
leave
jno
pop
mov
clc
jo
stos
lods
mov
cmps
and
in
not
jae
(bad)
scas
pop
xor
pop
sub
jns
cli
stos
sbb
bound
fistp
test
cmps
jg
add
and
sbb
inc
jp
mov
xchg
test
xchg
sub
or
pop
sbb
jnp
push
(bad)
(bad)
xchg
jno
test
push
pushf
repz
jo
stos
cdq
pusha
xchg
add
(bad)
inc
hlt
adc
add
cli
mov
mov
inc
pop
iret
mov
or
adc
inc
ret
push
lahf
push
hlt
dec
fst
in
mov
lods
and
xor
out
enter
fsub
divps
or
xchg
jp
add
inc
mov
iret
push
sbb
ds
jl
adc
pop
xchg
cmp
pop
lods
xor
xchg
mov
fwait
cmp
fisubr
xchg
fadd
jl
cmc
inc
mov
sub
sbb
or
mov
loop
and
add
sub
or
sbb
and
rcr
adc
mov
inc
cli
add
xchg
adc
push
sub
popf
sti
jecxz
mov
dec
mov
adc
aad
loope
sub
add
das
pop
icebp
fbstp
xor
ds
ss
scas
ins
iret
fiadd
pop
sub
push
and
xchg
neg
mov
xchg
jnp
rcr
inc
shl
lods
test
rol
clc
loope
mov
mov
jne
add
aam
dec
retf
fldenv
jge
push
fnstsw
lea
cmps
call
sahf
int3
pop
dec
and
and
pusha
outs
pop
inc
or
cdq
push
dec
(bad)
cmp
(bad)
push
mov
or
jle
out
adc
pop
movs
sbb
(bad)
test
movs
lahf
loope
and
push
rcr
xchg
sub
sub
or
adc
sub
mov
push
test
or
pop
add
cdq
adc
sbb
inc
pop
stos
push
lods
into
imul
in
mov
and
cmps
adc
loope
dec
xchg
inc
or
and
inc
pop
sub
cmp
clc
scas
pop
je
and
test
cs
inc
jo
js
bound
addr16
mov
adc
sbb
push
add
leave
add
mov
sbb
lahf
dec
xchg
leave
sti
lea
mov
imul
mov
bnd
xchg
in
test
adc
xor
test
fidivr
fcomp
neg
loope
mov
or
xor
xchg
dec
cli
pop
test
mov
retf
sub
inc
xchg
adc
cmp
mov
mov
inc
inc
addr16
lock
push
adc
cld
add
cmp
mov
lea
ficomp
mov
lods
sub
push
sbb
mov
popf
dec
push
xchg
popf
gs
sub
or
cdq
std
jno
push
or
ins
push
mov
sti
xchg
repnz
jnp
jmp
add
inc
test
(bad)
int
ins
push
xor
in
stos
or
pusha
retf
call
repz
cmps
inc
xor
bound
mov
loope
mov
push
rol
cmp
aam
adc
pusha
sti
and
mov
pop
movs
rol
sub
aaa
loope
pop
mov
daa
mov
(bad)
jbe
add
mov
sub
adc
aas
xchg
jmp
jecxz
add
xor
mov
ja
imul
call
test
dec
add
adc
sub
inc
push
into
dec
sti
pop
out
xor
cmc
and
movs
cld
dec
jg
push
sub
pop
sbb
aam
fild
arpl
and
inc
jbe
or
xor
mov
xor
adc
xchg
xchg
ret
xor
retf
(bad)
xor
sub
xchg
add
shl
aam
push
ss
sub
repnz
sub
rol
es
xrelease
pushf
push
arpl
cs
sysenter
movs
mov
adc
sbb
shl
cmc
pushf
retf
mov
fs
sbb
stc
outs
push
rcr
ss
jbe
xor
cmps
mov
dec
adc
fdivr
cmp
mov
inc
xchg
xor
imul
push
sub
call
(bad)
cmps
mov
pop
mov
or
dec
mov
fmul
or
xchg
rcr
add
inc
pop
push
mov
fist
shl
xchg
xchg
cmps
sbb
stos
pushf
sar
in
sbb
and
or
movs
jecxz
mov
add
xor
enter
dec
js
stc
lods
aas
or
adc
push
fbld
out
fst
xor
lds
pop
ins
xor
cs
popf
sbb
in
fldcw
mov
ds
or
push
push
sar
dec
and
dec
and
and
(bad)
hlt
cmp
js
mov
cmp
test
iret
ret
(bad)
(bad)
mov
ja
inc
addr16
fadd
loope
push
ret
in
and
idiv
xchg
jb
jg
sbb
dec
into
mov
test
cld
lea
imul
(bad)
cli
dec
cmp
sahf
fwait
idiv
icebp
or
jmp
mov
adc
sahf
and
jmp
push
sub
ret
(bad)
shl
test
(bad)
mov
xor
lods
mov
sub
push
mov
imul
mov
dec
mov
div
scas
and
sub
cmps
xlat
sahf
ins
retf
jp
test
shl
gs
retf
and
sbb
jg
pop
out
and
test
out
pop
add
inc
push
int
adc
ror
fcmovnb
aaa
neg
enter
imul
nop
in
scas
mov
popa
ins
imul
leave
mov
jae
pop
dec
add
pop
mov
imul
add
cdq
sbb
sti
dec
xchg
add
pop
call
es
in
mov
adc
fidiv
pop
xor
xor
mov
xor
mov
and
inc
dec
and
sub
or
mov
psrld
jecxz
inc
mov
popf
mov
sahf
fadd
xor
inc
das
mov
pushf
cmp
pop
iret
add
push
dec
out
mov
fwait
movhps
add
lea
pop
fisubr
pop
ins
xor
adc
cdq
adc
out
cwde
or
cld
dec
dec
movs
out
div
push
lea
lds
vpsrlq
cdq
scas
inc
and
shr
pusha
cli
mov
lods
retf
and
adc
and
pop
jns
jne
push
sub
jmp
add
xchg
shr
jmp
sub
outs
jl
bound
mov
xor
ds
loopne
popf
test
or
inc
(bad)
pushf
jecxz
pop
jmp
ret
jmp
rol
ret
aaa
lds
in
movs
and
stos
rcr
mov
cmp
ds
(bad)
mov
dec
sub
(bad)
pop
aaa
xor
push
xor
das
rcr
arpl
pop
mov
xor
xchg
xlat
das
js
in
lds
fidiv
(bad)
cmp
loope
add
lods
sub
push
push
aad
xchg
mov
fwait
shl
nop
mov
test
jns
cmps
xor
push
sahf
push
enter
ds
pop
add
mov
out
xchg
leave
repz
clc
cmp
rcr
adc
outs
imul
fucomip
mov
int
or
pop
aam
adc
xor
inc
push
aam
mov
movs
sub
add
push
iret
cdq
loop
or
leave
inc
sbb
into
test
xor
jae
pop
movs
stos
in
sbb
test
push
mov
(bad)
lea
arpl
or
test
mov
xchg
push
jge
repnz
cdq
rol
jo
push
jge
cli
mov
pop
hlt
mov
adc
push
rcr
fdivr
rol
inc
nop
cmp
dec
hlt
cs
cmp
mov
mov
ds
popa
push
pop
jecxz
gs
jp
enter
and
jmp
test
and
jno
dec
dec
imul
mov
jle
or
ret
test
mov
ins
sub
cdq
popf
mov
dec
test
jns
sbb
test
loope
sbb
(bad)
hlt
cld
imul
(bad)
and
cmps
adc
mov
pop
cmp
xor
mov
jle
mov
aam
mov
retf
in
mov
jge
repz
fmul
inc
jnp
dec
shl
lods
push
(bad)
mov
sbb
mov
fscale
jne
push
iret
sub
pop
mov
popa
aad
adc
mov
psubusw
in
or
jns
int
sbb
sti
inc
sub
(bad)
mov
dec
sub
(bad)
sar
jns
mov
push
xchg
or
adc
push
in
pusha
add
movs
cmc
iret
sbb
or
inc
xor
sub
mov
pop
stc
cs
stos
leave
xchg
xchg
xchg
mov
sbb
adc
shl
mov
test
jne
cdq
mov
sub
not
dec
sahf
xchg
gs
mov
or
imul
scas
call
push
pop
mov
mov
aad
lock
cmp
xor
xor
cmp
jmp
pop
xor
xchg
jmp
push
add
push
jecxz
xchg
sbb
iret
push
call
add
xor
fs
aaa
gs
dec
cmp
pop
mov
int3
rep
mov
fsub
test
lods
jns
div
sub
xchg
inc
or
mov
xchg
mov
out
push
push
push
xor
dec
jge
adc
xchg
js
fsubr
cwde
(bad)
loopne
push
retf
push
cwde
and
cld
out
pop
jo
test
data16
adc
(bad)
into
cmp
jns
or
dec
aam
sub
jmp
mov
mov
mov
mov
mov
pop
cli
and
fistp
xchg
push
pushf
xchg
push
jmp
pop
xor
pop
push
out
imul
sbb
jae
test
repz
fs
adc
call
sub
fistp
mov
add
gs
fnstsw
popf
dec
push
std
cmp
jle
xchg
dec
ins
lods
sahf
popf
out
pop
or
sbb
sub
jp
das
pop
dec
ret
ret
sub
test
push
sbb
pop
daa
outs
cmp
ret
jb
aas
test
test
stc
in
jne
adc
push
pop
scas
(bad)
and
(bad)
xor
enter
(bad)
cmp
data16
sahf
in
and
lahf
push
sbb
call
dec
mov
mov
push
ror
push
out
pop
repz
cld
mov
ret
movzx
jb
arpl
mov
sbb
in
lahf
scas
ins
test
(bad)
pop
fcom
xlat
bound
les
mov
add
movs
nop
hlt
lds
push
icebp
(bad)
and
push
mov
test
jle
repz
in
pop
in
jnp
mov
std
addr16
cmp
inc
hlt
sub
sub
shl
pop
(bad)
lds
xchg
outs
fsubr
push
ror
push
aas
jo
ss
mov
pop
cdq
dec
jl
stc
(bad)
xor
push
ret
adc
jmp
jo
out
xor
loop
out
add
lds
mov
pop
mov
sub
jge
xor
rcr
out
and
rcr
int
inc
stos
sbb
cdq
in
arpl
push
std
jmp
loope
aaa
push
push
push
div
inc
sar
dec
push
fstp
jnp
(bad)
retf
mov
movs
js
aam
sub
ret
mov
test
js
aam
arpl
je
inc
sub
ficom
lods
push
sbb
pop
and
mov
xchg
adc
ficomp
mov
neg
jns
push
loop
movs
test
shl
xor
aas
out
movs
and
or
sbb
pop
inc
imul
ror
fiadd
mov
pushf
push
push
adc
adc
stos
shl
mov
in
mov
adc
mov
or
push
sub
bound
jb
and
pop
adc
cmps
push
push
sub
cmps
loope
pop
sub
das
sub
dec
(bad)
and
(bad)
cmp
dec
sub
std
or
ss
mov
pop
add
cmp
or
leave
paddsb
pop
call
xchg
xor
mov
lock
in
adc
push
or
add
fnsave
stos
mov
test
jne
out
(bad)
hlt
call
add
fld
adc
fisubr
adc
imul
fimul
mov
pop
ds
sahf
ins
test
xchg
xor
pop
inc
test
xchg
enter
sub
jo
gs
(bad)
dec
fidiv
in
ret
(bad)
xchg
popa
ret
sub
cwde
add
jge
sbb
sbb
sub
aaa
xchg
cmps
push
mov
jge
imul
lock
loope
push
mov
xlat
imul
loopne
mov
mov
loope
mov
fwait
sbb
in
inc
out
push
xchg
xor
mov
sar
imul
pop
jl
(bad)
call
dec
xor
dec
imul
mov
pop
mov
inc
(bad)
cmps
out
mov
enter
xchg
loope
mov
add
dec
mov
xchg
or
retfw
mov
xor
inc
fldenv
js
sahf
not
int3
push
xchg
call
xchg
and
or
sub
dec
movs
and
clc
dec
push
mov
dec
adc
add
stos
pop
inc
imul
retf
add
mov
cmp
test
pop
xchg
dec
ins
int3
out
fnstcw
jecxz
movups
push
push
cmp
cmp
in
stc
jl
xchg
push
mov
inc
pop
and
addr16
icebp
mov
jecxz
aam
mov
mov
dec
jp
add
fwait
push
scas
pusha
imul
cmp
pop
jno
aam
lods
push
stos
push
bound
inc
cmps
pop
inc
xchg
push
sbb
rcr
(bad)
in
mov
and
fwait
and
or
gs
jp
or
int3
cmps
arpl
es
call
lods
push
lea
add
fwait
jmp
loop
xor
std
mov
cmp
inc
addr16
test
inc
fsubr
scas
test
sti
mov
or
shl
push
jmp
out
out
shl
push
sti
fwait
ret
push
lods
inc
mov
fcom
ss
jns
mov
div
rcr
inc
scas
push
cmp
push
aad
push
fs
gs
scas
ucomiss
push
fucom
and
and
sbb
mov
call
in
(bad)
fsubr
dec
leave
xor
xor
test
push
les
je
cs
lds
push
mov
or
test
xchg
xor
test
xor
inc
scas
jo
mov
aad
sub
cmp
push
xor
push
push
repnz
xchg
stos
clc
arpl
(bad)
xor
inc
mov
mov
call
mov
test
lods
dec
jecxz
stos
bound
mov
loopne
(bad)
xor
sbb
xor
and
mov
aaa
test
and
inc
lock
pop
mov
mov
pop
imul
xchg
jg
ja
repz
(bad)
rol
mov
daa
push
jmp
inc
test
mov
cwde
scas
push
sub
call
lea
clc
ret
lods
data16
jo
jb
jmp
cmp
pop
call
outs
addr16
(bad)
push
pop
out
inc
daa
jb
(bad)
pop
xchg
xchg
cmp
popf
gs
cs
xchg
jle
sbb
sub
add
popa
or
jg
test
pop
and
arpl
retf
fst
fld
and
mov
sbb
outs
jb
(bad)
aas
inc
and
mov
inc
sub
dec
sub
xchg
mov
push
or
daa
stos
enterw
(bad)
dec
popf
(bad)
fild
fwait
sar
test
imul
repz
(bad)
adc
push
out
out
jecxz
mov
mov
jg
sbb
pushf
shl
out
mov
cs
inc
sbb
add
sti
daa
pop
and
mov
xchg
lods
pop
rcl
retf
ja
vmptrld
out
mov
mov
inc
inc
inc
lahf
sub
mov
adc
mov
ins
push
mov
stos
sbb
add
and
cs
pop
addr16
lods
cwde
mov
lods
and
sbb
sub
cmp
mov
cmp
xchg
(bad)
sahf
sahf
xchg
and
jae
adc
xlat
sbb
mov
(bad)
push
sub
push
xchg
aas
sti
xor
jne
jbe
cli
and
out
dec
cmp
inc
cmp
xchg
push
fistp
sub
mov
xor
dec
jge
xchg
and
add
dec
dec
call
repnz
(bad)
daa
fadd
dec
fld
les
mov
jg
scas
aaa
push
mov
mov
or
jbe
push
pop
fcom
add
repz
lods
jmp
push
jl
xor
inc
dec
dec
xor
call
ja
(bad)
in
mov
sbb
push
lea
push
loope
sub
movs
or
mov
dec
jg
stc
push
inc
mov
adc
jecxz
mov
xchg
div
xchg
cwde
outs
jbe
out
imul
push
mov
shr
xchg
fs
inc
ror
mov
adc
pop
and
dec
lods
sub
xor
leave
push
cmp
mov
pop
dec
gs
pop
inc
test
out
inc
mov
test
xchg
jle
push
add
inc
push
out
xor
sub
inc
loop
sub
cmp
fdivr
int3
mov
stc
mov
push
sbb
xchg
stos
popa
rol
jne
xchg
sbb
dec
sub
movs
lahf
sbb
and
adc
xchg
pop
xor
ja
test
and
add
lods
fstp
sub
push
outs
(bad)
and
sbb
mov
push
cmps
popa
mov
ret
ds
push
out
cmps
cli
pop
bound
cli
cld
or
fistp
adc
fmul
stos
mov
push
or
in
cld
cmp
lds
pop
retf
mov
adc
stos
cdq
and
add
outs
sbb
cld
pop
adc
sbb
or
push
xchg
xor
mov
sbb
xchg
shl
es
or
aas
fadd
shl
cmp
sbb
adc
mov
adc
mov
stos
dec
push
sub
mov
cmp
shl
inc
push
cmp
push
js
sub
ret
stos
jns
pop
lods
mov
imul
lods
xchg
fiadd
in
ficom
mov
fist
inc
retf
scas
das
xchg
js
fbstp
in
test
(bad)
jo
dec
popa
inc
pop
xor
rcl
leave
out
movs
mov
and
nop
jge
mov
out
fdivrp
rcl
das
imul
mov
(bad)
adc
out
cld
(bad)
cmc
mov
mov
(bad)
dec
jle
sbb
js
push
lds
xchg
mov
cmp
ficomp
stos
iret
rep
adc
cmps
cmp
(bad)
xchg
mov
xchg
jl
cmp
out
mov
lods
push
sahf
mov
adc
inc
test
xor
or
add
pop
pop
rcl
cmp
jnp
cwde
cli
popa
outs
inc
pop
dec
(bad)
outs
and
js
mov
jg
pop
in
test
stos
cli
fdiv
movs
xlat
idiv
xor
xor
inc
in
pushf
xchg
xchg
ror
and
push
ja
dec
stc
pop
jl
xor
mov
lahf
in
cmp
pop
addr16
pop
or
je
xchg
push
add
dec
dec
test
dec
jb
sbb
add
mov
enter
mov
cmovb
mov
mov
pop
mov
xchg
call
ins
clc
push
sbb
iret
push
lds
mov
(bad)
sbb
lock
xchg
imul
or
sbb
daa
mov
stos
and
std
arpl
mov
aad
adc
(bad)
idiv
idiv
cmp
push
push
push
mov
mov
mov
fstp
icebp
test
jp
mov
inc
jge
mov
jle
adc
in
lods
lock
test
retf
fstp
pop
(bad)
dec
adc
popf
ffreep
repz
adc
mov
mov
inc
push
or
or
jge
stos
loop
(bad)
xchg
jne
xor
xchg
lock
pop
sbb
out
fmul
push
popa
sbb
push
jo
adc
mov
xchg
sub
je
js
mov
mov
ins
mov
push
mov
pop
jmp
and
lock
(bad)
xor
loope
or
adc
sub
mov
dec
imul
fild
cwde
mov
push
mov
call
enter
sub
sub
bound
lods
movs
fcom
jecxz
(bad)
std
sbb
jno
ffree
push
jne
cld
mov
out
xor
inc
(bad)
sub
fstp
jae
std
(bad)
jnp
and
sbb
(bad)
fwait
jnp
lds
cmp
mov
sbb
(bad)
les
fimul
jbe
dec
stc
fsubr
aad
mov
push
xchg
fdiv
popa
mov
ins
cmps
xchg
sar
dec
xrelease
movs
ret
pushf
pop
ficom
ins
in
int3
cmp
arpl
fwait
lods
adc
int3
cld
inc
leave
sub
scas
(bad)
mov
stos
and
mov
mov
jo
inc
popf
fcmove
push
dec
pusha
icebp
mov
jg
pop
jmp
push
test
loope
push
pop
retf
or
xor
and
cmc
lods
push
xor
(bad)
fidiv
scas
mov
jg
cmp
sub
cwde
and
out
lods
jge
lods
adc
pop
retf
or
cmps
jno
inc
dec
mov
inc
mov
dec
pop
iret
dec
loopne
hlt
dec
add
pop
xor
pop
adc
or
repz
jb
add
sub
cld
ret
xchg
bound
outs
icebp
and
mov
jg
xor
add
int
cs
dec
int3
ret
xor
push
ficomp
cmp
add
(bad)
fnclex
mov
(bad)
leave
sahf
lea
mov
xor
dec
ret
jo
in
mov
retf
push
inc
cdq
and
push
fwait
cld
add
xor
clc
mov
push
jno
mov
(bad)
mov
mov
mov
lahf
test
inc
scas
ret
repz
dec
icebp
in
call
loope
std
inc
inc
rcl
sub
pop
int3
mov
test
jmp
jecxz
jle
sti
(bad)
mov
or
xor
xchg
adc
pushf
popa
jle
dec
cmp
fsubr
repz
cmp
out
mov
std
jmp
xor
stos
mov
pop
ss
and
pop
ss
imul
jno
sbb
(bad)
nop
je
cld
inc
call
xlat
scas
push
jmp
jecxz
adc
in
cld
push
std
mov
sbb
mov
mov
(bad)
xor
movs
retf
jmp
or
sar
mov
cmp
jno
xchg
inc
jle
jp
adc
leave
call
inc
mov
(bad)
mov
or
push
mov
push
and
xor
xor
push
or
xlat
in
aad
push
out
dec
aas
push
jg
fistp
aaa
fld
jge
cs
or
jo
ret
fimul
mov
retf
cmp
shr
xchg
jno
inc
test
xchg
clc
fidiv
push
ret
mov
jl
aad
cmp
jmp
cmc
or
pop
inc
adc
(bad)
int3
add
pop
out
sbb
add
fisttp
sbb
jbe
sbb
cdq
lds
cmp
imul
jge
jge
and
(bad)
and
rcr
and
pop
movs
inc
xor
and
sub
iret
xchg
dec
imul
mov
fdiv
shl
and
cmp
xor
mov
sub
xor
es
jb
not
sahf
push
ds
mov
data16
mov
cmps
out
pop
test
dec
cmps
jns
jb
add
ds
cli
std
outs
ret
xchg
jb
dec
cmps
mov
hlt
repz
xchg
mov
xor
pop
jae
xchg
loopne
lods
jmp
fld
pushf
jge
add
pop
pop
add
nop
movs
push
push
pop
es
or
pop
adc
jo
dec
inc
imul
lahf
lahf
inc
mov
add
rol
mov
(bad)
mov
mov
movs
mov
inc
add
xor
cmp
scas
sar
gs
addr16
xor
xchg
jp
inc
mov
sbb
jns
fbstp
mov
lock
rcl
fwait
xor
int3
scas
test
loop
and
sbb
mov
jb
cwde
mov
inc
or
fmul
sub
push
or
jmp
inc
pusha
cmc
push
add
xor
dec
xchg
push
xchg
sub
in
sub
fwait
or
sbb
pop
ja
sti
mov
pusha
sub
cmp
mov
pop
and
xchg
jbe
cli
pop
ss
mov
aad
jbe
mov
iret
loope
push
sar
sub
in
es
xor
ror
pop
jp
cmp
jns
(bad)
pushf
inc
and
sub
test
jmp
mov
pop
xor
dec
cmp
mov
mov
(bad)
(bad)
cld
mov
xchg
les
icebp
cdq
pop
in
mov
sbb
mov
inc
cdq
cld
push
shl
sub
dec
fs
push
iret
xor
enter
or
cmp
lahf
fsubr
cwde
and
iret
cmp
sbb
mov
ds
mov
inc
mov
pop
mov
jl
mov
mov
pop
dec
ja
lods
std
inc
or
dec
ja
enter
sub
jmp
fsub
pop
enter
mov
xchg
loope
jbe
cs
(bad)
xchg
or
cmp
mov
lock
mov
cmp
ins
jmp
add
fldcw
add
or
addr16
aad
fcomip
jbe
mov
aad
pop
imul
or
cmps
pushf
(bad)
cli
neg
cmp
pop
ins
xchg
sub
adc
pusha
aas
leave
push
mov
retf
enter
mov
iret
repnz
xor
inc
dec
or
ins
mov
mov
sub
scas
(bad)
pushf
call
jns
mov
sbb
shl
pop
leave
pop
aad
mov
adc
adc
ja
sar
movs
fidivr
shl
ins
mov
leave
test
jecxz
gs
fstp
in
pop
mov
aam
adc
sub
jne
xchg
xchg
pop
imul
sbb
pushf
and
add
pop
cld
adc
pop
or
cld
add
(bad)
outs
cmp
aad
sbb
lods
mov
aam
lea
pushw
add
cmp
or
push
shr
push
xlat
mov
fidiv
test
dec
xor
ret
lods
arpl
mov
pop
fcom
paddsb
ds
(bad)
jl
or
jns
or
clc
test
mov
mov
cmps
add
test
adc
pop
inc
jl
mov
pop
push
cmc
jp
loope
xlat
loop
scas
inc
pop
in
push
push
mov
and
cmps
inc
(bad)
idiv
cmp
cmps
mov
inc
adc
mov
pop
sbb
push
push
xor
(bad)
xor
xor
shl
movs
jl
out
ficom
mov
fidiv
xlat
pop
mov
inc
loop
and
cmp
in
or
sti
pushf
lods
int3
jl
nop
test
push
cdq
ds
aas
jl
pop
push
(bad)
sbb
(bad)
loopne
jno
jl
fimul
sub
sub
pop
adc
sar
(bad)
push
jnp
mov
mov
int3
sbb
stc
mov
hlt
mov
xchg
push
dec
out
inc
scas
push
push
jno
js
pop
clc
shl
and
pop
jae
sbb
mov
add
into
and
xor
inc
sti
hlt
jns
imul
xor
loopne
mov
aad
add
retf
pusha
sub
in
push
xchg
lods
loop
cmp
ds
test
pop
ret
inc
push
jb
push
in
mov
(bad)
pop
(bad)
imul
fstp
por
push
mov
addr16
jge
addr16
pop
and
pop
mov
or
mov
and
shr
retf
test
gs
sahf
xchg
inc
cmp
pushf
ja
xchg
sub
jb
mov
lods
add
add
test
fisubr
or
jno
rcr
xchg
cmp
not
mov
dec
call
sub
inc
das
sub
or
ins
mov
pop
xor
hlt
push
mov
xchg
scas
and
scas
inc
sar
or
clc
xor
movs
jle
daa
dec
sub
scas
add
test
(bad)
loop
xchg
jg
mov
inc
mov
enter
int
sbb
mov
jbe
lsl
and
pop
pushf
loopne
mov
test
aam
imul
jg
aas
into
sbb
js
cmp
mov
loope
in
lods
or
sbb
push
dec
jecxz
mov
mov
xor
add
int
push
cmp
xchg
gs
shl
jecxz
fild
test
dec
les
out
js
js
dec
inc
and
fs
xor
jne
sti
outs
cmp
push
out
sbb
jae
ror
inc
mov
xlat
dec
enter
lahf
aas
and
pop
or
movs
fild
sub
out
bound
and
call
pop
add
ja
pusha
xchg
push
ret
inc
fisubr
sub
inc
pop
mov
mov
xor
iret
mov
es
and
ret
mov
icebp
jns
push
dec
sbb
imul
outs
mov
aaa
adc
retf
sbb
int
push
scas
sub
fidivr
adc
pop
retf
cli
push
in
cmp
inc
cmp
aaa
mov
fsub
jno
gs
bound
xchg
int
push
sbb
aaa
and
mov
mov
fwait
jbe
jmp
mov
mov
push
into
pop
jb
jae
xor
fild
cmps
adc
int3
and
mov
stos
out
cmp
mov
push
or
push
popa
ins
or
(bad)
aas
out
rcl
push
and
pop
clc
sbb
(bad)
mov
mov
out
cmp
in
arpl
fs
dec
jbe
pop
sbb
jp
add
lock
mov
mov
test
ins
and
pop
cmp
popa
mov
cmp
fnstenv
mov
ins
and
jae
jmp
call
jl
pop
mov
dec
sbb
sti
retf
cmps
(bad)
mov
sar
mov
scas
mov
mov
sub
pusha
pop
test
sbb
xor
dec
cmp
loope
(bad)
mov
dec
out
(bad)
push
out
xchg
ins
mov
pop
mov
sbb
xor
sub
loopne
lds
mov
adc
add
int
in
push
test
call
sbb
out
repnz
retf
out
inc
xchg
add
mov
daa
outs
jb
jb
push
add
outs
jle
xchg
push
mov
out
jge
mov
pop
inc
xchg
lahf
daa
fcmovne
(bad)
jl
shr
inc
mov
or
xor
sub
sub
ins
inc
dec
popf
pop
inc
mov
movs
xchg
imul
push
jno
mov
jp
pop
mul
mov
mov
in
inc
int3
in
call
mul
mov
std
push
mov
push
ror
out
mov
fucomi
sbb
shr
inc
scas
(bad)
aaa
xchg
inc
push
or
jo
cli
loope
xlat
(bad)
call
out
fisubr
ins
cmp
por
dec
xor
add
aad
test
cld
jmp
mov
fucomp
jg
(bad)
mov
sti
mov
or
mov
inc
repnz
pushf
pop
mov
sub
cmp
les
pop
adc
fisubr
fstp
das
dec
test
iret
sbb
aam
mov
sub
jno
mov
dec
repz
inc
jecxz
xchg
loop
or
cmp
push
lahf
jbe
jno
or
and
push
pop
int
mov
jae
inc
inc
jnp
hlt
push
push
inc
cmp
mov
lds
mov
mov
pop
daa
sub
xor
mov
push
mov
mov
xor
jbe
lahf
xchg
rcl
clc
xor
xor
sub
pop
outs
dec
inc
data16
jmp
cmp
push
(bad)
or
fiadd
je
pop
and
(bad)
and
rcl
fs
test
and
sahf
mov
in
push
mov
xor
jl
fstp
pushf
cmp
fisub
push
cmp
nop
sbb
cmps
or
addr16
xchg
fwait
mov
cmc
fst
aaa
sbb
std
out
mov
dec
(bad)
jnp
and
sbb
stos
push
jl
int3
aad
loopne
ret
dec
sub
mov
cwde
adc
mov
mov
dec
cmp
sub
rol
ret
pusha
xor
inc
or
sub
adc
or
test
gs
ss
ret
mov
jge
and
out
(bad)
jecxz
add
jb
in
adc
pop
add
sbb
push
(bad)
mov
hlt
cmp
sbb
out
pop
(bad)
pop
lock
and
xchg
adc
jne
outs
(bad)
arpl
mov
(bad)
push
add
xor
mov
or
adc
mov
push
clc
int
jl
dec
dec
call
mov
adc
iret
cmp
outs
xor
push
add
enter
mov
add
jp
push
mov
push
mov
inc
shl
arpl
mov
out
in
mov
in
jp
push
adc
xchg
dec
test
js
int
pop
adc
sub
fs
adc
mov
lds
xor
fmulp
xor
call
in
pop
xor
xor
or
cmp
add
inc
inc
sbb
mov
lods
ja
pop
sbb
dec
jb
ficom
adc
mov
or
(bad)
in
jae
leave
lods
sbb
mov
addr16
inc
push
cdq
mov
and
cdq
pop
adc
dec
aaa
push
jp
sar
xor
lock
or
inc
(bad)
jne
xchg
inc
pusha
aad
fs
sbb
fsub
cwde
repnz
mov
cmp
pop
mov
jne
ror
dec
jle
xlat
mov
mov
dec
fld
jmp
pop
pop
jge
popf
cmp
lock
xchg
(bad)
aam
icebp
inc
push
xor
pop
xor
push
fisubr
lock
or
repnz
repz
movs
pushf
dec
pop
or
jmp
(bad)
sti
push
loopne
jecxz
sahf
imul
cmp
movs
push
cld
mov
ds
icebp
sub
jnp
sub
mov
dec
push
lds
test
push
int
dec
into
lock
xchg
push
pop
mov
les
ficomp
repz
add
inc
mov
addr16
je
dec
sub
push
pop
imul
sbb
pushw
out
cmp
test
and
mov
jne
scas
add
outs
sub
jge
sub
sub
pop
or
iretw
cmc
mov
sbb
jmp
aas
jmp
or
jmp
xor
in
jbe
mov
and
test
mov
popa
outs
cmp
adc
addr16
shl
pop
push
mov
push
or
push
je
add
loop
mov
sahf
stos
dec
iret
pusha
and
cmps
test
cmp
sbb
jle
into
pop
cmps
xor
scas
aaa
cmps
test
cs
retf
popf
int
popa
push
jmp
pusha
or
xor
sbb
das
push
ret
loope
pop
sbb
scas
in
xor
dec
call
inc
pop
mov
inc
test
das
into
leave
mov
push
jae
call
repnz
jg
aam
adc
retf
dec
scas
jg
cmc
lods
push
add
lods
rcl
cmps
sti
cmp
lahf
dec
inc
cmp
int
add
or
test
jnp
sahf
in
or
xlat
les
add
fld
or
xchg
cld
gs
jg
imul
aas
push
(bad)
push
ficom
jle
loopne
jns
cli
or
call
dec
dec
les
inc
mov
xchg
ins
sub
push
sub
cmp
cmp
fwait
jb
not
lock
xchg
add
bound
mov
jge
sbb
ins
imul
and
ins
and
pop
lods
cmp
and
fdivr
cmp
sahf
int3
ins
sar
aaa
mov
push
mov
jne
pop
out
add
stos
ret
or
icebp
inc
jg
mov
sub
stos
sbb
clc
fcom
push
ds
loope
dec
sbb
mov
push
inc
loope
call
and
jmp
push
hlt
outs
cdq
xor
adc
scas
or
mov
push
cmc
loope
mov
call
ins
xor
fwait
xor
pop
leave
mov
inc
mov
add
fcom
push
int3
mov
jb
or
cmps
(bad)
cmp
out
mov
rol
and
cmp
das
push
pop
test
sub
xchg
mov
retf
loope
fdivr
cmp
fs
mov
(bad)
pop
into
xor
add
aam
push
les
and
or
stc
mov
lea
pop
sub
js
cmp
lea
leave
jb
mov
pop
push
ror
in
stos
inc
stos
shl
inc
loop
into
dec
xor
out
jns
inc
mov
pusha
dec
cmps
mov
inc
mov
lods
addr16
jmp
into
loop
mov
add
sub
loop
xchg
mov
push
mov
push
repz
fst
mov
mov
gs
sub
sub
outs
inc
mov
lods
cwde
popf
sbb
add
sub
mov
rcr
popf
lea
inc
adc
fdiv
out
cmp
aam
mov
fmul
not
add
adc
push
jmp
inc
xchg
mov
jnp
add
inc
mov
sbb
data16
scas
or
jae
sub
in
and
das
sub
mov
loop
mov
jae
ins
jae
mov
and
inc
fwait
fs
fdiv
jecxz
xchg
(bad)
and
fisubr
mov
mov
push
and
ss
out
inc
sub
xchg
cmc
cdq
ds
sub
aam
add
xchg
cmp
ja
(bad)
xchg
pop
clc
mov
ja
and
xor
push
stc
les
mov
hlt
imul
mov
cdq
jmp
(bad)
cs
dec
mov
(bad)
std
pop
add
loopne
lods
jmp
xchg
jne
jp
pop
adc
push
jno
ja
xchg
int
adc
xchg
pop
(bad)
and
inc
push
ret
push
and
xchg
jle
in
bound
inc
loope
jb
or
pop
and
sti
jle
fcom
jge
test
dec
gs
pop
fstp
mov
aad
test
dec
pop
dec
push
in
test
mov
cmp
mov
pop
or
mov
daa
adc
in
xchg
xlat
ins
mov
fs
push
mov
stc
stos
mov
pushf
mov
in
pop
mov
test
mov
pop
cmp
mov
sub
out
int
mov
pop
jg
fstp
jno
xchg
jb
lahf
fisub
test
cmp
inc
xor
xchg
or
int
in
stos
pop
mov
add
xchg
inc
cmp
add
and
push
in
out
fcmovbe
mov
call
(bad)
mov
add
sbb
jecxz
fwait
inc
sub
push
das
inc
xchg
and
or
ret
xor
or
sbb
jae
xor
cmps
cli
out
jecxz
and
sub
sbb
pushf
pop
push
adc
add
dec
retf
lahf
push
and
test
nop
xchg
cwde
mov
mov
mov
(bad)
cmp
iret
mov
shl
in
int
pop
lahf
xor
mov
sub
xlat
xchg
add
int3
scas
add
mov
mov
sub
ins
je
test
xchg
lahf
sti
push
jne
push
add
je
jne
adc
pop
cdq
push
dec
xor
push
shl
xchg
adc
fs
xor
call
xchg
stc
xor
ficomp
inc
mov
inc
ds
into
std
and
iret
add
out
addr16
xchg
xchg
and
inc
mov
ss
push
push
mov
xchg
xchg
fs
sub
test
xchg
adc
mov
mov
repnz
bound
push
scas
pusha
dec
fs
ja
retf
add
test
loope
inc
add
cwde
scas
in
fnsave
xchg
movs
aas
adc
mov
int
stos
add
outs
sti
jg
fcomp
test
jne
leave
in
leave
add
cwde
push
push
dec
mov
inc
pop
push
adc
xor
popa
sbb
ja
pop
xchg
mov
mov
cld
mov
jbe
push
adc
out
sbb
dec
aas
inc
arpl
mov
cmp
mov
xor
jnp
push
retf
inc
xor
add
cmp
gs
inc
pop
cmp
jnp
xchg
cmp
jno
push
sbb
inc
jno
adc
popf
sbb
push
jecxz
and
(bad)
stos
mov
dec
mov
call
push
xor
add
inc
and
aam
sbb
movs
jge
out
cmp
inc
call
xchg
add
lods
loop
ret
inc
daa
(bad)
mov
cmp
and
jo
movs
idiv
out
and
aad
loop
xchg
ins
pop
das
push
nop
push
int3
scas
or
pop
in
cdq
jl
pop
arpl
hlt
pop
or
retf
mov
pop
jb
push
and
mov
out
dec
and
dec
xchg
cmps
inc
mov
scas
dec
rol
mov
mov
sub
nop
out
push
pop
(bad)
cld
mov
sbb
sbb
in
cmps
movs
xchg
shr
inc
lods
add
mov
cmp
cmp
call
xchg
xchg
inc
addr16
(bad)
fnsave
mov
vdivpd
js
cmp
xor
mov
mov
jmp
call
repnz
popf
push
pop
jne
push
loope
dec
xor
das
jnp
sar
out
das
mov
out
jle
je
xchg
fld
jb
mov
mov
addr16
pop
pop
neg
xor
dec
mov
icebp
push
inc
ins
ror
rol
mov
mov
stc
pop
out
gs
dec
repz
mov
jmp
imul
stos
xchg
lea
adc
mov
jecxz
arpl
dec
xchg
push
hlt
mov
mov
inc
sub
cmp
dec
fld
add
mov
icebp
aaa
and
and
xor
pop
sub
adc
nop
sub
mov
jne
dec
and
in
adc
jae
cmp
and
loopne
ja
push
faddp
adc
retf
out
xchg
ins
fs
push
sar
jle
in
aas
mov
sbb
sub
cs
lods
fsub
into
mov
add
dec
in
test
jmp
cmps
mov
push
arpl
(bad)
(bad)
(bad)
js
hlt
loop
dec
or
es
jl
or
inc
xor
lods
fstp
ja
sub
cmp
cli
(bad)
mov
mov
popf
mul
nop
pop
and
and
jl
mov
call
call
push
es
out
push
shr
call
jnp
add
mul
cdq
mov
les
pop
jle
or
hlt
xor
sub
sub
sti
cmp
rol
sbb
iret
jmp
adc
push
addr16
fs
xlat
jle
pop
hlt
sub
cmps
mov
imul
inc
or
pop
xor
xchg
xchg
push
int
popa
(bad)
rcl
jp
and
cmp
and
loop
clc
scas
push
into
push
xchg
call
lods
xor
xor
and
ds
pop
ror
cmp
jecxz
pop
mov
rcl
push
shr
ret
inc
sbb
mov
inc
adc
xchg
inc
ja
loope
js
cdq
cwde
movs
data16
(bad)
std
pop
jl
mov
imul
inc
int
lahf
jns
js
push
jb
xchg
push
mov
add
dec
mov
xlat
dec
movs
into
lea
aam
mov
or
or
inc
(bad)
out
dec
shr
fwait
sub
push
jmp
ret
or
(bad)
add
push
push
lea
pop
mov
mov
cli
ins
ja
mov
sbb
mov
add
cli
in
adc
sub
int
imul
lock
xchg
jmp
and
cmp
pop
(bad)
push
mov
call
leave
loope
push
dec
mov
jecxz
add
ret
jp
(bad)
cld
stos
loop
js
jo
jmp
pop
shl
paddb
jl
push
sbb
fnstsw
mov
scas
aaa
call
pop
aad
shr
ret
jo
shl
sbb
repz
add
es
lahf
(bad)
ja
fdiv
inc
inc
mov
and
pop
mov
mov
or
push
icebp
cmp
inc
jl
xchg
sbb
xchg
out
jbe
sti
(bad)
cmc
sub
push
mov
cdq
mov
call
fs
mov
enter
mov
dec
leave
arpl
push
or
not
add
xlat
jmp
scas
and
cmps
adc
pop
lahf
sub
adc
test
adc
inc
add
repz
daa
sub
xchg
xchg
sub
mov
ret
es
sar
call
add
mov
dec
std
cmc
pop
fnstenv
repnz
popf
aaa
adc
pop
(bad)
imul
mov
pushf
push
js
in
in
lahf
clc
ss
les
cmp
inc
jg
retf
mov
in
popa
pop
push
retf
or
pusha
pop
int3
ss
adc
adc
inc
mov
adc
mov
mov
xor
test
push
je
lock
push
sbb
or
dec
sbb
(bad)
push
and
repnz
sub
push
mov
xchg
mov
ret
dec
aad
cmp
xor
rsm
les
dec
adc
stos
dec
xlat
dec
push
mov
push
leave
dec
jle
jnp
and
fdiv
ins
(bad)
neg
fimul
test
adc
lock
xor
int3
lahf
jne
xchg
loope
lods
xchg
pop
or
inc
mov
sub
pop
icebp
push
cmp
addr16
ret
in
aaa
mov
add
inc
fwait
icebp
bound
or
push
rcr
add
add
cs
in
test
(bad)
fadd
fimul
loop
inc
jge
ins
xor
sar
dec
cli
vmread
fld
outs
rcl
lods
cmps
inc
xchg
jo
daa
lock
mov
popa
pop
inc
jns
stc
outs
pop
fs
hlt
repz
ret
sub
ret
or
retf
je
cmps
xor
inc
fld
mov
inc
add
add
mov
xchg
mov
jns
add
jl
rol
shl
lock
jbe
or
cmps
push
jo
or
add
and
jno
imul
aam
inc
push
mov
(bad)
(bad)
hlt
cpuid
(bad)
xchg
popf
bound
sahf
dec
xchg
arpl
xchg
push
(bad)
je
adc
in
xor
stos
cmps
pusha
dec
loopne
imul
rcr
and
adc
push
pop
adc
pop
cmp
inc
push
loopne
xchg
cmps
push
xchg
ins
or
sbb
ss
popa
ins
ja
aaa
popf
push
and
and
enter
pop
ins
adc
mov
jge
cmps
rcl
push
cmp
int
or
aas
inc
test
jns
enter
pop
fsub
ss
pop
sti
xor
scas
xor
xchg
leave
mov
dec
iret
jecxz
adc
loop
mov
jl
xor
test
ror
xchg
or
sub
inc
push
in
loopne
popa
pop
jmp
ds
xchg
lock
xor
aaa
push
and
bound
(bad)
in
mov
clc
imul
xchg
ret
xor
cmps
cwde
adc
jg
and
xchg
es
sbb
or
mov
rcl
ficom
gs
push
arpl
mov
ffree
movs
repz
imul
cmps
adc
leave
mov
lock
fdivrp
scas
mov
repnz
cmp
aad
add
sti
jae
sbb
ins
mov
dec
ja
pop
jmp
aad
aam
jp
call
jno
xor
xor
ret
out
dec
mov
pop
xor
mov
xor
test
retf
in
inc
ja
dec
aad
out
pop
or
inc
cmps
sub
and
movs
dec
mov
mov
mov
shl
xchg
or
pop
sbb
nop
adc
mov
test
jmp
cld
fdiv
das
shl
sbb
adc
repz
imul
fisttp
jmp
cmp
ret
mov
test
arpl
icebp
cmp
test
add
mul
and
jnp
lea
jge
mov
call
in
add
jle
xor
pop
pop
push
sub
jmp
sti
pop
sbb
sub
or
les
call
fs
hlt
or
xchg
cmp
test
mov
(bad)
push
mov
mov
push
in
loope
pop
repz
jae
jmp
neg
rol
popa
js
adc
rol
jl
lods
adc
jae
pop
std
fwait
nop
rcl
int
in
repnz
scas
test
dec
push
cmp
int3
lods
call
push
cs
std
test
pusha
mov
inc
and
dec
xchg
push
gs
cmp
mov
jnp
outs
je
lock
and
inc
mov
and
in
pop
sbb
jmp
inc
and
add
fwait
and
add
sbb
(bad)
or
ret
arpl
lods
loopne
xchg
fimul
icebp
pop
inc
xor
jge
rcl
mov
xor
lods
in
or
mov
stos
pusha
pop
add
cld
addr16
cld
test
adc
mov
jnp
ret
outs
dec
pop
stos
xor
sar
lods
jmp
jns
popa
jo
inc
nop
retf
dec
adc
cmp
aaa
aad
clc
mov
out
mov
push
jle
mov
mov
mov
hlt
mov
shr
mov
mov
loopne
repnz
sbb
cmp
cmc
jnp
fnstenv
mov
mov
xchg
adc
in
mov
cmps
inc
sub
sti
pop
arpl
out
sbb
addr16
rcl
add
in
rol
icebp
cmp
lods
cmp
jns
scas
(bad)
mov
mov
jns
ds
and
aad
xor
retf
out
sbb
repz
icebp
jns
dec
sbb
dec
or
push
loopne
push
mov
in
jno
push
movs
fs
cwde
xchg
retf
cli
push
jge
rol
mov
mov
pushf
dec
fldenv
pop
inc
push
in
test
stos
dec
mov
mul
call
sbb
mov
sub
push
ja
cmps
fnstsw
shr
push
fxch
dec
jge
mov
sar
push
push
dec
mov
fmul
lock
out
add
std
shr
push
mov
cmp
jmp
mov
scas
sbb
xor
xor
lods
arpl
(bad)
mov
mov
fisubr
loopne
ss
out
add
xchg
lahf
in
fldcw
jl
js
adc
les
push
inc
mov
cmp
jmp
fwait
aam
ret
xlat
bound
cmps
cli
out
das
pop
dec
fsub
sub
or
in
push
mov
movs
ret
push
inc
inc
mov
aaa
inc
push
imul
cmp
cdq
jmp
stc
jg
ds
jg
push
xchg
mov
aas
inc
inc
pop
scas
mov
and
das
jmp
pop
sti
push
rcr
mov
xlat
add
mov
int
out
mov
add
mov
lods
arpl
out
mov
vpsllw
xor
pop
enter
dec
aaa
mov
jg
rol
pop
retf
xor
cmp
repnz
icebp
push
(bad)
scas
call
fcom
loopne
or
and
in
daa
nop
mov
aam
or
and
cmp
bound
popa
xchg
dec
(bad)
mov
jg
pop
retf
shl
shl
jp
jge
xlat
dec
inc
jb
fwait
jg
loop
shl
repnz
bound
mov
xchg
mov
push
inc
and
cmp
sub
xchg
mov
mov
push
(bad)
jge
mov
xor
sar
call
les
inc
inc
movs
mov
adc
pop
pushf
cs
cmp
mov
pop
in
add
cmp
shl
mov
push
xchg
mov
and
fs
fbld
lds
and
lock
push
jecxz
movs
loop
into
out
sub
addr16
push
mov
rol
pop
fnstenv
jbe
in
test
in
xor
adc
test
mov
iret
add
mov
or
jge
xor
mov
retf
cli
mov
sub
push
push
in
neg
cmps
sub
cli
mov
pop
mov
stc
jns
push
popa
dec
mov
adc
cwde
jo
fisttp
stos
or
test
cdq
fcomp
fsubr
in
mov
cwde
and
mov
sti
out
jecxz
test
cmp
jmp
and
pop
sub
jecxz
sbb
in
push
daa
push
push
popa
push
xchg
addr16
mov
fwait
push
adc
mov
int3
jmp
ins
xchg
add
jl
in
cmp
es
ja
mov
push
dec
into
jb
pop
data16
sbb
xlat
mov
ins
cwde
ins
ror
imul
pop
clc
xor
mov
pop
fidiv
cwde
adc
in
or
into
test
(bad)
cli
repz
dec
and
(bad)
call
or
add
add
dec
scas
xchg
loop
out
loopne
lods
sub
pop
stc
xlat
add
cmp
jmp
dec
data16
mov
arpl
jg
xor
movs
movs
gs
fbld
mov
and
popa
les
aad
cmc
fadd
popa
xchg
daa
outs
adc
or
jge
mov
mov
fcomp
jge
adc
jle
push
xlat
mov
xchg
pop
cmp
lock
cmps
out
icebp
mov
jo
mov
ror
mov
repz
pop
imul
pusha
sbb
jmp
dec
and
mov
cwde
push
push
test
lds
cld
(bad)
cmps
and
mov
in
jne
retf
enter
jp
fmulp
jl
sbb
dec
fwait
sub
dec
mov
dec
aam
das
addr16
repz
pop
push
push
jo
pop
in
adc
add
and
(bad)
aam
scas
nop
test
inc
shl
xchg
sti
mov
pcmpeqd
jp
repz
add
mov
cmp
push
mov
dec
push
jnp
test
hlt
psrad
lahf
ins
ins
leave
mov
push
je
push
xlat
gs
repz
sub
out
and
or
pop
jae
repz
mov
call
mov
cmp
pop
in
call
(bad)
cmps
pop
inc
in
cmps
repnz
cmp
in
in
fwait
push
repz
and
mov
or
inc
outs
jg
les
rcl
retf
dec
cmp
(bad)
cmps
xchg
mov
in
rol
dec
mov
fstp
sbb
or
mov
mov
fidiv
movs
adc
fmul
jl
sbb
(bad)
xchg
pop
dec
in
dec
mov
out
sti
jle
add
mov
(bad)
inc
(bad)
shl
mov
xchg
leave
call
jmp
fcom
outs
push
out
sahf
pop
fwait
push
mov
nop
or
mov
lock
das
test
cmps
pusha
daa
shr
xchg
inc
js
push
test
dec
leave
add
ret
sbb
add
rcr
push
jle
dec
ret
pusha
(bad)
(bad)
adc
mov
rol
push
xor
mov
pushf
xchg
lods
aaa
dec
jns
fidivr
mov
add
xchg
xor
inc
ins
add
xchg
mov
or
cmp
jle
sub
(bad)
movs
xor
inc
(bad)
xchg
retf
push
sbb
fwait
mov
or
adc
lods
mul
int
inc
repz
daa
test
cdq
adc
nop
es
mov
outs
cmp
ror
or
mov
add
or
dec
std
mov
xchg
daa
pop
add
scas
pop
inc
xchg
imul
test
enter
push
pop
pop
fadd
push
cmp
xor
sti
or
das
inc
fs
sahf
inc
(bad)
push
push
add
int
add
push
fisub
pop
lahf
and
or
lds
lods
xor
inc
xor
push
aaa
mov
cld
inc
ret
pop
retf
mov
cwde
ret
jae
sbb
mov
imul
mov
out
ficomp
ja
js
and
retf
add
inc
test
add
ins
xchg
adc
xchg
stos
hlt
dec
inc
call
or
mov
sar
(bad)
pop
or
mov
and
stos
add
sub
pop
mov
in
dec
out
sahf
repnz
loop
cmp
retf
cmp
push
pop
call
jnp
mov
ins
add
imul
stos
dec
cmc
mov
pop
dec
or
nop
out
pop
ja
and
aam
and
gs
imul
(bad)
loopne
mov
add
es
push
mov
jmp
jecxz
jle
pop
in
dec
inc
cmp
pushf
mov
outs
mov
xor
(bad)
loope
mov
inc
mov
mov
mov
(bad)
loopne
pop
inc
or
and
fisub
pop
lock
add
in
add
xor
hlt
repnz
xchg
outs
fxch
test
inc
std
pop
add
mov
(bad)
(bad)
push
pop
mov
sbb
(bad)
or
mov
jno
cmp
xor
adc
in
cdq
xchg
pop
popf
dec
xchg
adc
std
jle
lods
cs
cmp
mov
popf
jmp
data16
rcr
jno
jl
or
or
push
xchg
mov
retf
ror
shr
mov
mov
lds
push
(bad)
pop
jmp
and
movs
mov
je
shl
mov
daa
or
jge
mov
fcomp
push
pop
mov
or
outs
ficom
add
jmp
imul
and
push
and
mov
ja
js
test
stos
pop
adc
sahf
cmp
in
aaa
lods
(bad)
fstp
cmc
movs
test
dec
pop
jae
popa
mov
retf
cs
mov
int
dec
pop
sub
jp
sbb
and
cmp
into
push
and
mov
adc
adc
mov
push
xchg
mov
sbb
scas
aam
sub
jl
pop
fidiv
pop
sbb
pop
int
movs
cmp
pop
imul
jle
push
jle
aam
daa
addr16
ret
lds
xor
test
fwait
xchg
cmp
repz
pop
leave
mov
ss
cli
jnp
ss
fisubr
add
sub
outs
loopne
shr
mov
xchg
ret
mov
xchg
mov
and
outs
xchg
push
mov
adc
jl
popa
int3
jno
add
popf
je
inc
xchg
ins
iret
jae
popf
xchg
pop
sub
std
fst
fs
ins
add
(bad)
xchg
(bad)
std
out
jae
xor
mov
mov
xor
mov
adc
adc
dec
add
in
cmp
jg
push
push
jno
adc
imul
addr16
das
mov
adc
push
adc
or
dec
cmp
xor
leave
or
push
repz
xor
push
xchg
bound
dec
or
jecxz
or
sub
lds
mov
mov
imul
jns
pop
xchg
mov
dec
xchg
adc
mov
xchg
outs
(bad)
outs
ficom
aam
add
mov
add
add
or
ins
sbb
xchg
(bad)
push
jno
test
push
rol
cmc
xchg
cmp
cmps
iret
in
lds
cwde
push
jnp
retf
retf
rcl
xchg
sbb
repz
jge
loopne
inc
iret
push
sub
icebp
daa
xor
pop
sti
push
cmps
mov
call
ins
mov
sbb
pop
sbb
xchg
pop
not
popa
hlt
dec
cwde
inc
fld
shl
xchg
ds
ror
addr16
jl
mov
sahf
mov
xor
loopne
xchg
sub
and
test
mov
add
nop
int3
sub
sar
mov
jns
ja
pusha
fs
inc
cmps
in
mov
or
enter
adc
nop
scas
mov
(bad)
mov
shl
or
mov
ror
xchg
or
push
aad
xor
jg
mov
and
mov
or
mov
push
push
jmp
or
mov
mov
add
fnsave
mov
cli
and
dec
das
loope
adc
jecxz
xor
jb
add
sbb
in
xchg
dec
jb
rcr
xor
loop
(bad)
ffreep
fadd
and
aaa
sub
ss
push
test
fsub
xor
(bad)
pop
jnp
out
(bad)
jns
and
push
iret
jecxz
dec
les
mov
dec
dec
aas
lods
mov
scas
pop
fwait
in
aas
pop
pushf
adc
mov
push
pop
lock
adc
mov
es
cmp
push
je
jp
cmp
std
or
inc
test
cmps
push
stc
and
xchg
sbb
aas
outs
ss
dec
nop
or
int3
(bad)
shl
mov
add
out
lea
scas
rcl
sub
push
loop
in
aam
add
sbb
pop
hlt
sbb
add
mov
mov
adc
inc
scas
push
arpl
ror
xor
pop
movs
(bad)
sub
cmp
or
inc
icebp
retf
retf
(bad)
jmp
loop
pop
pusha
aad
loope
arpl
jle
mov
scas
scas
dec
xchg
add
popf
icebp
(bad)
das
in
pop
dec
xchg
dec
popa
fild
ja
xchg
rep
call
loopne
inc
xchg
mov
jecxz
(bad)
mov
xor
sbb
adc
loop
add
adc
sub
xchg
pop
mov
mov
mov
and
scas
mov
retf
jge
xchg
pop
fadd
xchg
sub
mov
nop
aam
jmp
push
loop
xchg
mov
mul
sar
xchg
cld
mov
in
or
sbb
sti
push
loop
je
cmp
scas
jge
call
inc
ret
add
daa
bound
adc
cli
jno
xchg
mov
std
pusha
out
fild
push
in
mov
repz
xchg
xchg
and
into
or
jae
dec
sar
in
sar
sti
inc
add
mov
bound
and
jecxz
xor
push
push
or
test
add
xor
jmp
jnp
daa
sti
ins
pusha
inc
push
xchg
fisttp
sar
push
pop
mov
ret
and
xchg
jb
test
or
retf
mov
ss
sub
cs
jge
pop
in
cmp
shl
aad
les
lods
sub
movs
fcom
daa
repz
push
xlat
mov
and
or
inc
xlat
sbb
stc
sbb
cmp
imul
popf
jecxz
std
xchg
cmp
xchg
stos
shr
fucomip
xchg
aas
adc
cld
out
out
push
sub
dec
shl
out
push
mov
popa
addr16
lea
loop
retf
push
sbb
mov
xchg
(bad)
mov
dec
fldenv
jl
push
and
aas
dec
fcmovnu
mov
xor
jb
in
add
ja
pop
std
inc
adc
rcl
xor
mov
add
das
add
inc
add
les
popa
adc
inc
sbb
loope
ret
xor
cmp
push
cmps
jmp
push
mov
xchg
dec
mov
dec
sbb
frstor
arpl
cmp
outs
mov
(bad)
ja
adc
xor
mov
fnstsw
bound
cmps
and
imul
movs
dec
rcl
idiv
mov
xchg
mov
lods
dec
jns
pop
out
dec
inc
mov
scas
jns
jecxz
jno
xor
maskmovq
mul
fwait
data16
mov
mov
lods
inc
out
jne
stos
lea
mov
jmp
sti
out
sbb
push
mov
ins
daa
pop
fst
mov
xchg
xlat
sbb
test
mov
mov
ret
ss
mov
aas
rcr
ja
inc
ins
cmp
pop
fnsave
jmp
ret
test
aam
js
ret
mov
jno
ss
cmp
(bad)
mov
add
xlat
test
mov
in
mov
cmp
out
adc
pusha
aad
js
sbb
test
and
(bad)
jle
mov
adc
cdq
cmp
push
fcom
pushf
lea
test
in
out
lds
adc
xor
call
jp
(bad)
ss
mov
push
ret
cmps
xor
mov
mov
xor
pop
mov
movs
jns
cmp
inc
lea
pop
cdq
and
jle
dec
mov
push
test
test
jno
out
mov
or
mov
aaa
jp
and
into
and
(bad)
out
cmc
je
and
cmp
outs
in
dec
pop
retf
aaa
fsubr
outs
inc
sti
rol
mov
mov
fcos
in
nop
add
je
int3
aam
outs
xchg
cmp
inc
daa
add
test
and
dec
inc
(bad)
sar
sub
push
es
lea
cmp
add
(bad)
jns
scas
dec
push
add
sbb
jo
sub
(bad)
push
int
sub
mov
push
add
ftst
call
xor
or
push
mov
lods
movlhps
xchg
xor
cld
pop
and
and
or
in
xor
adc
sbb
stos
pop
xor
aad
rcr
mov
lock
gs
stos
mov
mov
xchg
push
(bad)
xor
push
ds
sbb
aad
push
and
sub
mov
and
add
sar
imul
bound
out
ds
cmp
sbb
sub
xor
cmps
int
ror
jmp
pop
dec
adc
ds
out
icebp
pushf
jg
cmps
ja
mov
xchg
sbb
(bad)
mov
mov
push
stos
mov
mov
mov
mov
mov
mov
lahf
inc
jmp
sbb
sub
sbb
mov
xor
pop
cdq
(bad)
cmps
push
icebp
dec
xchg
sub
shr
pushf
aad
push
jb
loope
mov
ret
and
jmp
xchg
jb
mov
dec
cmp
dec
fs
mov
adc
loope
call
stc
xor
stc
les
lods
mov
dec
add
sub
and
movs
push
mov
pusha
outs
inc
call
sbb
mov
inc
(bad)
push
cmp
aaa
cmp
dec
add
mov
xchg
fidiv
lock
pop
inc
and
and
fwait
pusha
sub
xchg
xor
jg
fst
outs
xchg
pop
fwait
leave
or
push
or
in
cmp
add
in
outs
or
in
int3
retf
scas
cmps
jmp
push
or
lods
inc
add
xor
sbb
pop
mov
or
imul
fs
xchg
jmp
dec
and
add
in
mov
addr16
add
cmp
jmp
cmps
cmp
fdiv
addr16
out
ffree
push
ret
mov
jmp
sbb
cmc
cmps
push
lds
mov
js
and
xchg
mov
push
sbb
mov
inc
lahf
push
int3
mov
addr16
mov
gs
sub
adc
add
imul
jnp
adc
add
aam
and
xor
iret
jbe
arpl
dec
push
sbb
test
(bad)
push
dec
lahf
call
xchg
pop
cmp
jmp
popa
mov
dec
xor
fldenv
or
push
push
arpl
pop
mov
add
adc
pusha
cmp
pop
sbb
call
or
and
dec
and
mov
aaa
mov
repz
push
dec
adc
retf
xor
dec
test
cmp
pushf
ret
scas
(bad)
hlt
repnz
add
inc
lds
test
enter
sub
(bad)
sub
(bad)
add
aas
push
add
push
or
out
(bad)
sbb
shr
and
and
inc
hlt
loop
adc
out
xchg
fs
ss
adc
outs
adc
stc
nop
mov
imul
and
fisttp
sti
ss
movs
jle
push
loop
(bad)
leave
cdq
aam
and
mov
hlt
lea
addr16
jno
mov
pusha
sbb
daa
mov
cmps
(bad)
out
add
push
icebp
inc
dec
ds
out
lods
(bad)
mov
sub
or
lods
adc
xchg
dec
bound
jno
or
pop
mov
push
cmp
cmp
mov
cmc
pop
cmp
shr
or
mov
xlat
les
fwait
inc
push
(bad)
cmp
repnz
icebp
call
call
and
mov
aad
and
(bad)
shr
xor
push
sar
jae
hlt
iret
mov
enter
xchg
xor
inc
sub
movs
cmps
adc
stos
pop
cmp
jmp
mov
lock
xchg
adc
ror
retf
xor
ror
inc
push
leave
jecxz
or
sub
mov
push
jmp
or
mov
fwait
out
dec
in
popf
retf
sub
adc
pop
adc
call
pop
or
shl
cmp
retf
jne
sar
adc
repz
outs
fiadd
mov
push
int3
adc
popa
ror
fld
leave
xchg
ds
lock
mov
xchg
sub
aaa
fst
inc
push
lock
jo
mov
mov
mov
(bad)
mov
popa
lods
nop
ficom
aaa
mov
lods
(bad)
(bad)
push
es
addr16
cmps
out
inc
or
inc
xor
add
pop
cmp
outs
gs
int
clc
rcl
cli
jbe
adc
mov
repnz
adc
add
icebp
or
dec
pop
mov
sbb
jl
mov
push
mov
pop
cmp
inc
or
mov
dec
in
aas
retf
mov
cmp
dec
or
fdivr
or
adc
and
push
(bad)
int3
mov
and
mov
rol
cmp
adc
xchg
push
jne
test
shr
imul
mov
fistp
leave
and
sbb
scas
mov
out
test
(bad)
js
cmps
shl
nop
out
loop
popf
or
idiv
lods
xor
cld
sbb
ins
or
js
sub
mov
clc
jmp
inc
lods
sbb
or
xchg
dec
ret
pushf
add
in
mov
push
jl
pop
dec
gs
stos
jae
adc
jae
pop
push
stc
fdivr
adc
pop
dec
cmp
xor
push
movs
xchg
dec
popa
inc
lds
call
push
in
jge
adc
or
and
bsf
pop
rcr
inc
fild
add
out
(bad)
dec
scas
bound
mov
add
jg
and
ja
pop
jmp
dec
dec
sub
dec
adc
xchg
(bad)
lods
mov
ret
and
retf
fnstcw
pop
leave
jle
imul
mov
adc
cmp
mov
das
push
mov
adc
(bad)
cmp
(bad)
lock
push
cmp
fnstcw
aam
mov
jg
(bad)
(bad)
out
int3
nop
mov
push
retf
mov
test
and
adc
cmp
(bad)
iret
lds
das
data16
adc
inc
mov
(bad)
retf
dec
cmps
cmp
shl
fimul
jmp
mov
jne
ds
xor
movs
xchg
inc
test
repz
adc
dec
aad
ins
or
(bad)
sub
test
push
add
mov
and
push
push
cmp
jg
mov
mov
mov
out
dec
and
movs
(bad)
cld
jp
or
aam
stc
pop
inc
in
pusha
pop
sbb
mov
xor
ss
or
in
sub
loope
in
ins
mov
sub
and
cmp
ja
inc
outs
movs
out
inc
ja
es
(bad)
(bad)
icebp
jmp
out
stos
cmp
or
stc
xchg
rdtsc
je
inc
jo
mov
iret
enter
mov
imul
sub
mov
inc
popf
sbb
lods
or
test
jmp
cdq
jb
push
jp
dec
jns
loop
adc
push
mov
adc
inc
inc
fiadd
xchg
in
ds
pop
sub
cmc
xchg
dec
sbb
in
pop
push
mov
lods
aam
and
mov
rsqrtps
dec
pusha
call
sti
push
push
std
mov
loop
dec
xor
xor
cmp
jnp
dec
or
rep
outs
jmp
fild
dec
rol
cmp
pop
sub
jg
jmp
sub
push
inc
push
mov
ins
xchg
jns
jbe
shr
mov
dec
iret
iret
lea
push
sub
sbb
std
das
and
js
jl
sti
aad
dec
loopne
jge
inc
dec
xchg
test
add
jne
nop
cmc
cdq
cli
jmp
cmp
pop
jmp
mov
sbb
and
popf
push
xor
bound
ret
xlat
inc
cmp
lahf
cmp
gs
adc
imul
mov
sar
scas
movs
push
cld
cmp
jg
ss
jmp
dec
out
frstor
mov
inc
cmp
retf
shl
xchg
sbb
ret
pop
aam
jne
jne
aaa
xchg
shr
push
push
pop
and
xor
iret
fldenv
shl
into
mov
je
dec
out
rcr
and
cmp
lahf
pop
cmp
jb
jle
jmp
xor
aam
mov
jecxz
pushf
dec
inc
jmp
sahf
aaa
inc
jmp
adc
or
push
sub
and
xchg
mov
outs
ret
mov
sbb
xlat
repnz
inc
mov
icebp
pop
sbb
lahf
test
pshufw
sbb
stos
mov
popa
push
jmp
loopne
add
pop
fdiv
lods
add
aas
sbb
dec
inc
call
jecxz
je
in
mov
jecxz
inc
cmp
pop
jno
cmps
in
ins
xchg
or
mov
dec
out
push
and
pop
xor
jmp
mov
sbb
retf
daa
adc
adc
cld
xchg
cmp
mov
jmp
pop
jl
push
call
sbb
(bad)
in
cmc
xchg
pop
cmp
add
push
pop
fwait
repnz
enter
jmp
jge
ins
adc
mov
sub
and
dec
jmp
mov
test
and
movs
mov
or
repnz
repz
out
fcomp
ds
xlat
push
jne
loope
pusha
(bad)
push
jp
je
cmp
push
sub
adc
in
clc
push
call
scas
mov
xor
stos
jmp
jno
je
jnp
and
or
push
dec
sub
pop
sbb
add
add
ror
xor
push
stc
stc
ret
(bad)
jg
mov
jbe
inc
enter
mov
push
pop
push
call
lahf
addr16
daa
test
mov
gs
lock
mov
mov
dec
int3
inc
xchg
fsub
fsubr
jo
arpl
pop
push
into
pop
push
adc
(bad)
xor
(bad)
adc
and
leave
ret
pop
in
mov
sub
imul
mov
lods
adc
aaa
dec
xchg
add
aam
xor
imul
pop
push
(bad)
outs
sub
jbe
or
rol
jbe
in
adc
sti
mov
xor
sbb
aas
push
inc
sub
and
in
test
sbb
mov
and
add
push
imul
add
adc
and
or
(bad)
mov
mov
cmp
pop
xor
cmc
push
cmp
mov
(bad)
mov
cmp
mov
add
mov
pop
stos
pop
jae
fld
(bad)
stc
push
xchg
xor
inc
push
data16
test
stos
sbb
xor
bound
mov
cmp
jp
pop
pop
outs
xlat
mov
je
movs
mov
es
jmp
pop
mov
pop
jb
movs
cs
or
aam
cmps
xchg
cmp
stc
idiv
sbb
or
loopne
aad
mov
not
inc
jnp
xchg
dec
xor
inc
inc
imul
xchg
bound
inc
bound
in
imul
clc
js
sub
or
mov
jnp
or
adc
div
sbb
mov
sub
bound
push
pop
mov
push
jae
ret
in
adc
call
data16
sbb
icebp
pop
lods
test
sub
enter
lods
xor
bound
sbb
ror
push
adc
jp
jno
mov
mov
pop
fsubp
call
fnstsw
lods
add
imul
jns
arpl
fdiv
mov
sbb
inc
jbe
jecxz
cwde
and
xchg
icebp
cdq
lods
jmp
sub
popa
pop
ror
cmp
mov
push
cmp
mov
retf
in
mov
pop
and
or
adc
dec
daa
push
or
pop
mov
push
jmp
jbe
xchg
mov
stc
mov
test
cmp
and
ins
stc
aas
call
sbb
pop
sti
in
cmps
xlat
les
sub
mov
stos
xchg
test
add
mov
std
jmp
push
rcl
pop
in
mov
fistp
sub
ins
btc
out
push
jmp
mov
fcomp
popf
inc
in
mov
adc
add
test
xlat
jae
in
cmp
data16
and
data16
ins
jmp
push
push
add
xor
sub
dec
call
out
int3
into
sub
daa
lods
hlt
pop
xor
jl
aam
cmp
and
mov
adc
das
and
(bad)
outs
or
mov
inc
sbb
test
mov
jae
les
cld
xor
mov
cmp
pop
jmp
fldenv
mov
call
mov
cmp
test
and
push
jg
fild
data16
dec
xchg
mov
xor
cmp
fdivr
jecxz
ret
loope
in
daa
mov
loopne
and
fs
out
shl
cmp
jmp
(bad)
mov
mov
rcr
cmc
inc
pusha
fsubr
push
jno
and
es
ins
adc
or
arpl
clc
jge
push
or
cld
repnz
dec
dec
cld
sbb
rcpps
or
and
(bad)
inc
retf
mov
cmp
ficomp
or
sbb
and
and
call
xchg
ret
push
retw
and
mov
ret
push
push
and
test
sbb
dec
mov
rol
es
in
push
pop
ss
add
ins
outs
inc
push
mov
jmp
repnz
dec
ins
jo
ret
dec
dec
test
imul
stos
jo
pop
stc
in
rcl
stc
jns
add
rcr
popa
imul
gs
jmp
cwde
inc
push
jbe
out
sub
mov
imul
add
rcl
lea
xchg
bound
bound
cmp
sbb
call
mov
or
retf
pop
mov
scas
sbb
ja
sbb
scas
stc
adc
fwait
pop
out
ins
(bad)
adc
pop
pop
inc
jbe
jp
sub
stos
sub
xlat
sbb
das
cmp
and
jl
cld
pop
mov
inc
out
adc
sbb
mov
fdivr
ret
add
sbb
fisub
cmp
(bad)
data16
adc
dec
imul
sbb
or
fsubr
cmps
test
mov
xchg
neg
sbb
mov
das
sbb
pop
pop
ret
outs
jbe
mov
jmp
jmp
in
(bad)
hlt
and
aam
scas
sbb
mov
out
ror
inc
rcl
push
lahf
(bad)
and
sub
bound
push
inc
dec
jnp
mov
stc
movs
add
imul
adc
dec
or
push
loope
and
(bad)
shl
aas
add
mov
cs
xchg
push
mov
pop
inc
dec
jecxz
sbb
js
pop
xlat
test
jb
(bad)
push
adc
pop
push
movsx
rcr
outs
xchg
pop
clc
add
popf
cmc
sbb
pushf
cmp
sbb
cmps
mov
mov
pop
sub
mov
rol
loopne
sub
mov
push
cmp
out
adc
outs
(bad)
call
cli
in
sub
cmp
and
das
mov
shr
or
xlat
jg
fst
sub
mov
or
idiv
bound
or
jb
(bad)
mov
shr
addr16
fidivr
outs
loopne
test
mov
mov
xchg
dec
inc
xor
sbb
mov
dec
call
es
add
ret
xor
mov
push
pushf
pop
mov
rol
inc
stc
and
sbb
in
xchg
xchg
xchg
test
fcomp
add
(bad)
fstp
mov
ds
mov
imul
ffree
pop
jmp
loop
into
rcr
add
and
xlat
adc
lea
pusha
jns
sbb
call
lock
xchg
pop
push
mov
or
into
shr
add
jl
jo
fwait
add
adc
xchg
das
test
add
and
int3
icebp
mov
xchg
jg
dec
or
sub
std
in
(bad)
fild
ret
fimul
ror
cmp
jmp
in
call
in
mov
leave
mov
bound
loope
inc
xchg
and
dec
jmp
loopne
(bad)
jp
or
or
stos
add
and
mov
lahf
mov
sbb
or
inc
push
test
add
jmp
mov
repnz
dec
xor
arpl
push
add
pop
sbb
jnp
aad
addr16
stos
push
call
nop
mov
cmp
popf
fidivr
(bad)
fnop
lahf
inc
movs
rcr
jp
sub
ins
(bad)
data16
mov
xor
jmp
pop
test
push
jmp
sbb
es
ins
xchg
loope
fst
fdiv
push
test
imul
ss
xchg
push
test
and
mov
out
sbb
arpl
push
mov
imul
xchg
stc
cmc
xchg
inc
mov
je
jp
xchg
cmp
sub
pause
mov
dec
cli
lock
add
jle
cs
ds
and
data16
xchg
cmp
xchg
or
js
daa
push
scas
mov
push
pop
fwait
call
push
sti
push
add
push
and
jl
ins
inc
sub
cmps
mov
(bad)
loop
fmul
popa
(bad)
pop
push
and
cmc
idiv
mov
adc
mov
adc
in
push
xchg
cmp
push
bound
push
mov
std
or
std
inc
xor
fdiv
add
aaa
pop
mov
mov
fild
add
pop
add
mov
xchg
les
enter
retf
xchg
sbb
ret
je
cmp
mov
or
xchg
out
mov
push
xor
mov
mov
faddp
or
stc
inc
adc
or
sub
mov
xchg
cmp
dec
xor
je
fst
data16
xor
sahf
int3
daa
xchg
pop
jecxz
add
mov
test
jae
(bad)
jnp
dec
stc
mov
mov
mov
sbb
leave
call
sti
scas
test
pop
jge
cmp
cmp
cmp
(bad)
fst
pop
xchg
das
add
xchg
aaa
rol
add
add
das
sub
pop
jg
xlat
adc
mov
sbb
adc
int3
(bad)
cld
popa
push
out
dec
dec
inc
or
sub
mov
mov
sbb
sub
sbb
adc
mov
jl
mov
jne
fld
mov
imul
nop
xchg
pop
xchg
jecxz
xchg
mov
and
xlat
sub
scas
add
gs
loop
shl
leave
rcr
es
mov
mov
mov
aas
add
clc
gs
jp
cmc
(bad)
das
cld
ss
fadd
pop
jmp
clc
mov
in
add
dec
(bad)
jno
out
gs
xor
scas
cmp
jmp
mul
jp
pop
mov
movs
dec
(bad)
call
out
pop
repnz
das
xlat
repz
add
nop
pop
jle
sbb
xchg
inc
cmp
inc
ret
inc
cwde
fcom
rcl
sub
mov
cmp
add
addr16
sar
inc
pop
stos
test
sbb
cli
xor
mov
mov
cmps
or
imul
jb
mov
adc
out
mov
pop
dec
mov
mov
imul
adc
js
xor
jp
xlat
jmp
enter
pop
inc
or
outs
xchg
dec
and
(bad)
pop
fcomp
fs
imul
(bad)
push
adc
test
add
shl
lods
dec
popf
es
jecxz
sbb
rcl
leave
mov
(bad)
popa
dec
div
repnz
jle
fdivr
pop
not
out
mov
in
jno
sbb
mov
aas
pop
ret
and
ror
pop
jnp
je
call
repz
stos
pop
outs
pop
fist
imul
mov
(bad)
fistp
dec
xor
mov
rol
sub
bnd
cld
mov
cmps
and
popf
mov
stos
cmp
je
adc
sub
imul
in
into
mov
mov
ret
xchg
push
dec
(bad)
sar
push
les
jg
in
sub
les
std
sub
out
inc
fisttp
(bad)
add
aaa
xor
popf
jp
ffree
(bad)
jle
dec
ja
ja
clc
retf
mov
mov
scas
sub
push
pop
lea
sub
rcr
cmps
into
lock
gs
cmp
cmp
mov
xor
stos
sti
dec
mov
not
shr
jge
gs
sbb
dec
(bad)
xchg
dec
test
into
cld
dec
dec
mov
cmp
xor
jmp
dec
(bad)
iret
imul
sbb
(bad)
pop
popf
mov
and
fisubr
xor
call
(bad)
mov
xchg
pushf
inc
enter
rol
into
mov
stc
adc
aam
jmp
and
push
(bad)
push
mov
or
icebp
inc
xor
xchg
push
iret
cmps
rcr
test
mov
repz
(bad)
call
cwde
jo
icebp
mov
loope
jbe
rol
mov
adc
or
jne
dec
stos
dec
or
adc
jnp
repz
cmp
pop
outs
lea
lods
inc
fbstp
fnstenv
gs
lock
cmp
sbb
add
fs
push
and
lock
sub
stos
mov
ss
ds
xor
ret
in
jb
mov
dec
ja
add
adc
mov
jo
push
scas
lock
push
daa
xchg
pusha
lods
dec
leave
mov
push
cmp
fs
push
iret
div
loope
mov
or
or
xchg
cmps
sbb
mov
and
xchg
stc
das
add
fwait
mov
jnp
and
cli
pop
push
cvtdq2ps
call
lods
dec
shl
enter
dec
inc
pminsw
clc
or
cmp
cmp
in
and
cmps
or
adc
(bad)
push
mov
ror
dec
push
fs
or
add
or
push
cmpxchg
mov
les
lods
mov
inc
add
test
jmp
pop
icebp
pop
push
jp
(bad)
jl
sbb
mov
loopne
pusha
inc
xchg
mov
outs
test
dec
dec
push
jp
pushw
xor
pop
repnz
cdq
clc
ret
lahf
int3
cmp
(bad)
out
fidiv
or
jno
sub
jmp
bound
mov
int
fimul
shr
inc
mov
dec
mov
das
mov
in
xor
inc
add
loopne
rcr
pop
jle
mov
mov
lods
outs
cmp
test
popa
mov
pop
outs
stos
add
or
out
mov
mov
rcl
dec
outs
inc
xchg
xor
xor
lock
sbb
add
int
sub
dec
push
inc
adc
inc
or
fs
lods
fild
and
push
lahf
aaa
mov
loope
adc
imul
mov
xor
add
ds
clc
out
arpl
inc
std
mov
or
outs
add
cdq
push
es
imul
inc
dec
xchg
sbb
push
adc
out
sub
aam
pop
repnz
push
daa
sahf
int3
rol
xor
outs
pop
and
pop
push
out
adc
mov
sub
stc
pop
mov
jns
push
mov
or
or
jecxz
mov
shl
sub
xor
(bad)
in
and
repnz
cmp
sub
dec
ret
outs
int
xchg
gs
js
sti
in
ret
ja
pop
inc
cmp
jle
cmp
sbb
das
aas
imul
je
je
jnp
inc
xchg
cmc
jcxz
pop
pop
out
mov
loop
ds
mov
nop
push
push
sub
push
popf
sub
mov
lahf
imul
mov
jmp
loop
cmp
mov
push
push
mov
mov
je
pop
mov
outs
(bad)
aas
sbb
pop
test
js
rol
repnz
out
jecxz
fisub
inc
add
retf
mov
scas
push
xor
dec
mov
sub
fwait
xchg
add
icebp
jb
repz
cmps
cmp
xchg
push
pop
popf
sar
repnz
sub
push
ret
push
test
sbb
add
mov
ins
outs
or
mov
push
outs
cmp
adc
nop
add
fnstenv
sbb
mov
xor
in
aas
mov
jg
add
es
fld
and
out
mov
arpl
sbb
mov
mov
sbb
outs
mov
mov
test
outs
mov
adc
mov
shr
fcomp
mov
test
mov
ins
in
lds
setnp
dec
jmp
jl
out
in
bound
push
xchg
jmp
inc
pop
neg
mov
cmp
lock
movs
(bad)
call
xor
call
sbb
(bad)
adc
pop
xor
mov
mov
stos
inc
aad
pushf
jmp
arpl
lock
push
jo
test
jb
loope
xchg
enter
push
push
push
push
inc
mov
out
add
sub
mov
adc
push
test
mov
iret
adc
arpl
mov
pushf
es
or
mov
(bad)
jl
mov
imul
jle
pop
mov
mov
and
fisub
ins
sub
adc
xchg
fidiv
mov
pop
sub
xchg
or
xchg
(bad)
jnp
bound
cmps
mov
test
mov
fimul
fwait
jge
mov
xor
loope
fst
jmp
xchg
xor
inc
and
cmc
or
mov
aad
(bad)
stos
push
mov
dec
popa
retf
leave
xchg
aad
dec
(bad)
cmc
sbb
cmp
aad
jns
push
and
inc
cmp
dec
dec
add
mov
sahf
into
adc
pushf
push
mov
or
adc
icebp
or
mov
repnz
fiadd
sbb
inc
outs
xchg
in
pushf
sub
or
cld
sub
inc
mov
sbb
movd
or
xchg
or
xlat
add
mov
mov
ins
rol
sub
push
pop
mov
push
adc
add
adc
(bad)
(bad)
xchg
stos
sbb
out
pop
xchg
add
add
dec
add
mov
je
inc
out
xchg
outs
fwait
add
and
mov
retf
gs
out
fsub
fld
cld
jle
sbb
and
sbb
xchg
cmp
add
pop
mov
sbb
gs
xchg
sub
inc
icebp
aad
mov
xchg
cdq
cmc
repnz
sub
xchg
jae
fdivp
sbb
cmp
gs
mov
inc
ror
shr
xor
dec
inc
jb
mov
(bad)
xchg
ret
xor
shr
ffree
sub
cmps
sub
mov
lock
pop
mov
cmps
inc
sbb
sbb
adc
dec
mov
jmp
repz
push
es
sub
dec
xor
outs
aam
mov
fnstsw
and
xchg
xchg
adc
call
xchg
sbb
mov
mov
fistp
lahf
jle
repz
test
jmp
xor
dec
dec
fcmovbe
xchg
adc
int3
jge
jle
imul
call
stc
inc
ins
loopne
movs
push
lods
mov
lods
mov
movs
dec
retf
addr16
push
aaa
(bad)
loope
daa
sbb
mov
movs
jg
repz
ret
pop
bound
rcl
xor
fld
retf
adc
idiv
addr16
jl
dec
sbb
push
mov
fisttp
ror
sbb
xor
pop
dec
adc
jecxz
rcr
push
neg
or
pop
sub
int
(bad)
push
adc
ret
push
adc
jbe
pop
adc
stos
movs
jns
push
ins
scas
mov
ins
fldcw
pop
fisubr
pop
mov
hlt
push
xchg
pop
adc
call
stos
inc
dec
loope
push
sub
pusha
cmps
push
aad
(bad)
(bad)
pop
cmp
xchg
outs
sub
sti
mov
rol
or
mov
sub
or
xor
push
retf
lahf
sub
and
cld
xchg
cmp
(bad)
sub
fimul
retf
mov
aas
push
fimul
add
lods
cli
add
test
fadd
inc
shl
imul
push
(bad)
aaa
aad
scas
mov
sahf
mov
jge
mov
xchg
stos
xlat
out
sub
pop
jo
push
mov
and
pusha
popf
and
mov
add
outs
and
push
lds
outs
call
mov
js
movs
inc
and
shl
aam
mov
aaa
outs
pop
or
sbb
call
or
xor
cmps
les
add
aas
fist
lds
xor
mov
repz
mov
leave
mov
das
icebp
shl
inc
adc
sbb
add
into
xlat
xchg
sub
bound
je
jge
adc
adc
jne
mov
and
(bad)
out
inc
shr
sub
sahf
dec
ins
test
(bad)
loopne
push
neg
out
or
retf
rcl
ficom
loop
aam
xchg
xchg
jb
pop
jg
adc
adc
rol
aad
add
in
xchg
div
out
sub
push
inc
mov
aas
lods
cmps
and
test
xlat
loopne
test
je
push
addr16
mov
inc
in
(bad)
fsub
(bad)
ror
ss
push
or
or
sbb
adc
dec
mov
ins
adc
imul
xor
fidivr
mov
shl
mov
jg
add
mov
mov
pushf
in
mov
xchg
add
jmp
mov
xor
scas
xchg
(bad)
out
test
jb
sbb
(bad)
mov
xchg
mov
arpl
faddp
mov
int3
shl
mov
pop
hlt
ror
bound
test
enter
cdq
push
out
mov
and
in
adc
jns
pop
stc
adc
(bad)
sti
jae
int3
sbb
rcr
inc
es
sub
inc
pop
lods
cmp
sti
push
into
cs
pop
fist
or
mov
mov
or
xchg
test
jge
hlt
retf
dec
les
retf
rcl
cmp
and
imul
mov
sub
(bad)
cmp
div
stos
mov
add
(bad)
jne
repz
test
pushf
or
sbb
mov
adc
not
fld
cwde
or
iret
ja
dec
test
jmp
pusha
pushf
adc
jecxz
sbb
imul
ror
dec
das
outs
xor
cmc
adc
arpl
test
test
jbe
je
idiv
arpl
jbe
repnz
out
in
xchg
jl
into
ss
mov
repnz
retf
jns
add
in
xchg
lds
sbb
dec
sar
lahf
popf
stos
stos
jg
mov
add
mov
adc
pop
push
js
call
cmps
mov
inc
(bad)
mov
test
scas
mov
cwde
xor
dec
mov
sub
and
imul
pop
xor
in
mov
or
pop
cs
aad
inc
leave
xchg
jae
jle
fst
leave
cmps
pop
add
pop
pop
mov
mov
push
jmp
test
pop
test
inc
push
adc
sub
or
or
cmps
(bad)
jbe
lahf
or
jp
xor
out
popf
dec
push
push
sub
sbb
mov
xor
jmp
call
sub
out
mov
out
fwait
push
movs
jb
xor
mov
sub
push
xlat
sbb
es
in
dec
adc
fs
lahf
ror
test
or
sbb
add
mov
loope
mov
in
test
sub
add
in
mov
mov
(bad)
into
mov
sahf
hlt
inc
dec
ds
jp
jmp
add
xchg
or
ss
rcr
popf
add
enter
xchg
stos
jmp
fisttp
xchg
jae
scas
xchg
xchg
int
inc
repnz
dec
bound
sbb
popf
xor
lods
ret
xor
mov
mov
jnp
lock
imul
into
push
cdq
mov
and
sbb
push
cs
and
mov
call
daa
ror
imul
out
mov
pop
js
daa
and
fisubr
xlat
or
inc
dec
out
dec
sbb
fcom
shl
fild
and
sbb
mov
jbe
or
ins
in
cs
ins
pop
(bad)
daa
xor
mov
test
aaa
dec
inc
loopne
and
out
adc
mov
sahf
ret
inc
dec
lahf
or
push
mov
dec
retf
lds
jnp
sbb
out
int
jge
dec
sub
jb
push
xchg
clc
fs
mov
fnsave
fldcw
xor
(bad)
pop
pop
xchg
js
cmp
push
adc
adc
mov
sahf
sar
loop
shl
mov
sar
sahf
arpl
mov
cmp
mov
movs
movs
or
pop
pushf
out
sub
adc
push
cmps
rcl
sub
ret
out
rcr
mov
mov
mov
in
leave
ret
inc
out
sar
push
jno
dec
iret
call
xor
mov
call
mov
adc
mov
or
mov
dec
jecxz
lods
in
dec
add
cmps
loope
mov
fadd
sub
inc
mov
stos
int
outs
mov
in
add
ja
das
jmp
leave
sbb
lds
or
or
sub
idiv
cmps
clc
sbb
push
fld
fsub
shl
das
clc
sbb
pop
sub
ret
outs
adc
(bad)
icebp
jb
xlat
popa
(bad)
jb
repz
or
xlat
mov
(bad)
pusha
popf
lock
mov
dec
cmp
pop
mov
mov
fdiv
rcl
add
xchg
dec
adc
sti
or
sbb
add
std
xlat
fucomp
call
aaa
fst
out
inc
aad
adc
mov
pop
lods
les
movs
push
pop
and
xor
jb
push
aas
out
jmp
call
ins
xor
push
retf
cmp
cmp
je
pop
jne
xor
mov
push
loop
loope
pinsrw
std
imul
xchg
add
int
push
cmp
fs
pop
stos
adc
adc
sbb
fwait
add
sub
cs
sub
cmps
js
sbb
(bad)
test
fst
loop
mov
mov
jbe
sahf
mov
inc
test
out
jbe
cdq
xchg
ror
cwde
jbe
mov
pop
je
retf
imul
dec
mov
imul
repz
xor
lock
mov
mov
sub
jnp
adc
in
mov
std
jbe
pop
xchg
push
mov
lahf
jo
jmp
ret
xchg
or
fucom
add
repnz
and
adc
inc
ror
outs
and
test
in
dec
jecxz
push
mov
xchg
or
cmp
sbb
sbb
test
or
mov
dec
outs
push
cs
dec
das
inc
jno
mov
mov
fiadd
call
sbb
call
je
dec
test
jl
pop
std
xchg
sar
push
mov
xchg
adc
dec
xor
(bad)
cmp
popf
sub
int3
pop
popf
xchg
jns
mov
das
or
std
push
addr16
inc
ins
pop
outs
push
ret
push
cmp
mov
inc
cmp
xor
or
repnz
push
test
rcr
sub
jnp
dec
lods
sub
mov
pop
ds
fst
and
rcl
movs
retf
sbb
pop
stc
test
adc
and
cmp
rol
cdq
(bad)
pop
ja
mov
and
jge
outs
test
jg
ins
cmps
in
fistp
add
lods
xchg
clc
dec
rcr
das
imul
enter
das
dec
and
sbb
mov
test
in
mov
out
(bad)
imul
xor
mov
push
xchg
sahf
and
stos
mov
mov
mov
dec
and
cdq
outs
(bad)
stc
loopne
int
pop
ror
or
aam
das
shr
ret
cdq
pop
lods
sub
adc
ret
adc
dec
leave
popw
jae
push
popa
jp
out
imul
inc
addr16
pop
jmp
(bad)
jmp
dec
mov
movs
push
sub
jg
lods
repz
pmaxub
dec
ret
cmc
push
ins
retf
and
aad
push
push
retf
sbb
mov
sub
mov
data16
test
push
popa
push
or
mov
jmp
push
jb
jae
scas
bound
rol
in
std
lds
sub
sbb
sbb
mov
es
movs
push
outs
add
(bad)
call
pushf
sub
aas
inc
icebp
in
sub
stos
enter
jmp
adc
cmp
jle
outs
xchg
inc
jge
outs
gs
aad
inc
mov
fs
stos
scas
mov
adc
call
repnz
lds
push
outs
icebp
jle
cdq
das
mov
add
jo
and
jl
mov
sbb
jns
push
ja
xor
daa
test
imul
cmp
add
add
xor
sub
rol
ja
gs
add
or
retf
adc
addr16
adc
scas
inc
pop
outs
retf
inc
call
xchg
aad
dec
jmp
dec
adc
pop
data16
xchg
pop
test
inc
ret
cmp
pop
pop
cmp
outs
aad
mov
dec
mov
mov
bound
adc
cmps
bound
push
movups
mov
jb
cdq
jns
imul
arpl
dec
or
bound
sbb
js
lock
es
mov
push
mov
xchg
dec
movs
sbb
aad
ds
inc
fwait
das
cmps
xor
ret
mov
xchg
push
in
popf
dec
repz
jmp
pusha
sbb
fstp
jmp
pop
push
mov
loopne
leave
pusha
mov
dec
push
jl
pop
push
sbb
(bad)
fwait
jns
mov
sub
pushf
pushf
imul
mov
mov
add
idiv
shr
jmp
add
adc
hlt
push
das
cmp
or
or
and
adc
cmp
pop
pop
mov
xchg
dec
xchg
js
lds
pop
in
dec
lods
outs
test
mov
jl
stos
mov
in
xor
mov
mov
iret
(bad)
idiv
cwde
je
dec
ficomp
pushf
ret
aas
clc
pop
and
icebp
movq
leave
pop
pushf
ss
sub
inc
jge
or
add
stos
mov
mov
lock
xor
xchg
stos
jae
inc
loop
push
mov
mov
or
neg
int
leave
pop
in
cwde
push
mov
lahf
fisub
mov
or
test
test
inc
leave
loop
jb
sub
not
bound
mov
jle
inc
jbe
sub
lea
inc
ja
int
sahf
sub
pop
xor
cmp
mov
mov
fsubr
pop
push
and
sub
cmps
loop
dec
adc
xor
pop
jg
les
sub
ret
cmp
pop
mov
pop
lods
cdq
dec
mov
shl
mov
cmp
add
ret
sub
cmp
ficom
bound
sbb
xchg
popf
fs
ja
fisttp
cmps
xchg
adc
xor
ror
mov
mov
(bad)
sub
add
call
xor
or
add
test
fdiv
xchg
xor
shr
cs
inc
cmp
repnz
mov
fwait
pop
push
dec
popf
sub
push
mov
mov
mov
lahf
aaa
cmp
imul
ror
repz
int3
lods
test
and
data16
movsx
or
in
fiadd
xchg
daa
jbe
out
gs
xchg
pop
mov
popa
dec
sub
enter
or
xchg
neg
imul
js
sbb
pusha
fs
mov
inc
daa
cli
scas
add
xchg
dec
xchg
scas
std
mov
xchg
gs
jae
jp
pop
nop
sbb
mov
pop
mov
mov
ffreep
and
mov
int3
sbb
mov
and
fmul
add
push
(bad)
sub
inc
xchg
jle
fidiv
xor
call
stc
cmp
test
test
inc
sbb
xor
push
mov
imul
test
ret
or
ja
in
cld
xor
mov
cwde
rcl
pop
retf
pusha
repnz
pop
imul
scas
jno
and
sbb
gs
test
add
and
idiv
test
out
jns
inc
xor
out
mov
scas
ficomp
inc
pushw
rcr
retf
dec
test
jg
mov
loopne
pop
cmp
xchg
xchg
std
aas
fwait
pop
xchg
and
imul
xor
jmp
les
xor
ret
and
popa
repz
int
arpl
xchg
imul
push
mov
jne
(bad)
lods
jbe
out
dec
daa
cmp
fidiv
add
sti
jmp
fnstcw
icebp
into
mov
inc
inc
fidivr
add
pushf
cmp
fucomp
gs
mov
in
push
dec
sub
cmps
mov
lea
retf
xchg
ds
aad
mov
cmp
outs
mov
in
popa
fidiv
ss
arpl
sti
jmp
or
std
call
fisttp
mov
sbb
in
ja
aam
call
mov
test
cmps
mov
mov
push
cmp
push
out
dec
pop
in
loopne
xchg
nop
xchg
cmp
xchg
adc
jmp
jo
jns
test
xor
dec
fwait
pop
fwait
cmp
mov
pusha
ins
inc
daa
sahf
xor
test
push
jmp
stc
sub
sar
imul
fwait
inc
adc
push
push
sub
mov
aam
inc
or
in
jp
or
in
sub
bound
sar
fcmovu
test
fcmovu
mov
(bad)
xor
adc
lock
mov
aad
(bad)
or
jne
mov
ficom
enter
lock
mov
mov
repz
vphsubwd
popf
or
cmp
or
and
jge
aad
aam
xchg
out
in
popf
rol
retf
jb
rol
xchg
mov
loop
cld
jnp
in
inc
sbb
sbb
cmps
jmp
outs
xchg
mov
out
nop
jle
push
aas
pop
push
loopne
cmp
sbb
test
in
(bad)
or
enter
dec
mov
xchg
scas
mov
mov
pop
mov
dec
call
loope
cli
bound
hlt
outs
xor
scas
xchg
out
scas
outs
nop
sbb
movs
or
inc
neg
add
out
dec
add
mov
into
or
das
mov
outs
mov
loop
cmp
into
idiv
mov
mov
xor
adc
sbb
add
mov
mov
call
mov
add
inc
mov
adc
fwait
pop
(bad)
std
mov
jno
not
mov
jb
loop
xchg
xor
dec
lods
stc
dec
and
cmp
jmp
sub
jbe
lahf
not
xchg
fdiv
inc
cld
push
adc
mov
push
adc
ins
jmp
inc
leave
pop
pop
mov
pusha
mov
cmps
mov
mov
ret
mov
out
(bad)
mov
add
mov
pop
sti
neg
repnz
xor
fiadd
cmp
movs
out
(bad)
push
in
scas
mov
pop
mov
mov
mov
mov
mov
not
xchg
lea
mov
add
aaa
jmp
xchg
sub
jge
aas
lds
or
and
sub
push
sub
loopne
dec
jecxz
cld
test
aas
push
add
pop
shr
lds
int
inc
les
ficom
cmp
lds
push
jnp
imul
in
daa
lahf
fild
sub
pop
imul
jno
pop
cmp
sub
imul
mov
inc
cmp
jg
mov
cmp
jno
mov
mov
in
nop
or
xchg
adc
jp
inc
test
push
ins
cmp
xchg
pop
adc
inc
test
adc
popa
es
popf
(bad)
xlat
mov
fsub
mov
or
loopne
inc
mov
ja
cmp
je
je
cmps
popa
xor
int
leave
cmc
push
in
lods
fcmove
les
xchg
add
retf
test
retf
(bad)
hlt
arpl
push
ds
push
jle
out
aad
mov
mov
jg
stos
popf
sbb
fidivr
outs
data16
sub
and
and
retf
add
and
leave
push
adc
rol
jmp
out
jne
test
push
leave
stc
iret
adc
or
addr16
adc
push
pushf
and
call
xchg
loopne
std
scas
dec
xchg
jno
daa
mov
cld
repnz
aam
scas
mov
push
das
jecxz
outs
jo
cwde
js
jnp
jmp
mov
xor
mov
push
js
loop
sbb
cmps
cmp
or
inc
inc
jle
and
imul
jb
push
inc
xchg
cld
out
(bad)
(bad)
out
dec
mov
adc
sti
xor
sbb
out
or
fidivr
fdiv
aam
pop
xor
int3
xchg
xchg
lock
mov
pop
pop
mov
loop
mov
cld
je
or
outs
jle
mov
push
pop
jae
push
dec
sbb
loope
cmc
std
dec
sti
loope
fisttp
sbb
pushf
test
or
push
and
bound
pop
icebp
push
jecxz
addr16
adc
xor
mov
pop
mov
and
call
jg
daa
les
fimul
push
ins
add
adc
in
dec
fisubr
loope
mov
inc
addr16
scas
shl
inc
dec
inc
test
lods
adc
inc
dec
adc
mov
jne
sbb
rcl
enter
fnstcw
rcr
pop
ror
jne
inc
and
cli
pop
in
pushf
popa
pop
push
fadd
or
ficomp
ins
cmp
cmp
xchg
sub
out
xchg
idiv
popa
add
adc
andps
pop
mov
pusha
sahf
mov
jmp
push
xchg
cmp
mov
in
or
fidivr
sub
inc
add
jg
dec
jg
or
cmp
fcom
adc
test
fwait
mov
int3
xlat
stos
pop
sub
mov
adc
fisub
loop
arpl
and
push
pop
xor
shl
ds
inc
mov
cmc
rcr
add
push
or
ret
enter
fistp
cmp
or
test
pushf
popa
pop
scas
scas
imul
mov
es
pop
xchg
imul
icebp
dec
and
inc
dec
lar
repz
or
mov
push
loopne
lods
es
pop
ja
aaa
out
shr
mov
pusha
pop
pop
jl
nop
adc
dec
or
lahf
dec
cmc
jne
rcr
les
stos
and
shr
mov
jp
mov
aam
inc
push
retf
shl
in
pusha
fmul
mov
pop
adc
adc
repz
sahf
mov
push
cmp
xchg
mov
mov
mov
mov
dec
xchg
bound
rcl
xor
mov
pop
pop
pusha
(bad)
rcr
cmp
pop
out
imul
es
ret
lahf
rol
jle
movs
ret
into
stos
hlt
out
inc
inc
test
inc
or
cmp
xor
mov
and
mov
ds
sub
pavgb
mov
pop
xor
jns
mov
test
jns
sbb
lds
sbb
rcr
aad
xor
adc
jmp
pop
pop
dec
xchg
(bad)
stos
frstor
fimul
or
pop
scas
iret
test
fisttp
aas
mov
out
iret
mov
xor
add
xor
mov
(bad)
imul
aas
daa
cmps
aad
push
fistp
(bad)
fisttp
mov
adc
adc
nop
pusha
xchg
mov
push
shl
pop
sub
in
and
loop
or
mov
jp
in
lods
and
sbb
mov
xor
call
mov
xchg
setg
mov
lods
shr
push
and
icebp
loopne
sbb
mov
add
mov
jne
scas
stos
mov
and
cld
and
mov
mov
aad
push
bound
sub
and
movs
cmp
(bad)
cmp
cld
dec
mov
ins
fiadd
fist
sahf
jp
xchg
and
test
mov
inc
inc
adc
daa
rcr
xchg
or
sub
mov
popf
jecxz
mov
mov
jp
pop
mov
add
lods
stos
data16
push
pop
ds
and
and
outs
pop
pop
stos
call
cld
mov
or
push
int
mov
popa
cmp
cmp
out
pop
out
loope
jb
push
xor
sahf
out
mov
mov
loope
aad
lahf
je
std
in
fsubr
loopne
(bad)
rcr
into
jo
ins
int3
add
lahf
mov
je
call
xlat
dec
mov
popa
fimul
les
lods
jmp
es
push
jge
jge
shl
mov
or
popa
push
cmp
(bad)
repz
mov
jmp
movs
mov
sub
mov
mov
out
fidivr
and
jl
call
jle
enter
adc
ja
jl
sub
pop
mov
or
popa
call
dec
cmc
xor
fimul
xor
inc
sahf
adc
and
stos
pop
imul
inc
imul
idiv
les
xor
add
push
aaa
mov
cli
push
mov
push
cmp
mov
pusha
bound
aad
mov
je
adc
popa
loope
(bad)
push
repnz
sti
adc
aaa
mov
xchg
fisubr
in
push
dec
rol
jmp
out
retf
sbb
das
pop
cmps
pop
popa
enter
mov
ins
retf
xchg
sahf
mov
gs
lds
dec
add
test
lea
aas
scas
(bad)
mul
gs
cmp
or
sti
cmp
mov
daa
add
pop
(bad)
mov
mov
xor
pop
test
sti
loop
das
push
mov
add
mov
xor
jecxz
lds
ficom
inc
inc
test
inc
dec
scas
sub
adc
mov
xor
mov
jns
ret
mov
mov
adc
xchg
(bad)
call
ret
jne
(bad)
sbb
mov
and
loope
push
les
jmp
or
xchg
(bad)
cmp
outs
xchg
pop
lahf
mov
ret
dec
mov
inc
cmp
out
sbb
scas
push
xchg
pop
xchg
cmc
rcl
mov
retf
xor
pop
or
sbb
cmps
outs
pop
push
mov
retf
or
(bad)
xchg
add
nop
sub
pop
enter
mov
xor
xchg
repnz
and
dec
dec
pop
dec
in
ins
xlat
mov
and
call
push
fnstcw
loop
popf
popa
hlt
aad
dec
data16
ret
mov
repnz
xchg
mov
inc
inc
mov
nop
pop
jbe
ds
out
mov
add
xor
cmpxchg
mov
sbb
fcomp
ss
push
push
sub
popa
test
cmp
aas
pop
push
aaa
shr
pusha
aad
or
sti
inc
cld
rcl
mov
add
mov
dec
dec
mov
xchg
pop
aad
xchg
adc
lea
xchg
mov
mov
sub
in
mov
xchg
push
push
std
push
in
ins
sub
jb
sbb
xor
cmp
cmp
sub
sub
aam
adc
cmps
mov
add
cmp
push
cld
(bad)
push
aam
cld
repz
pop
cmp
movs
(bad)
and
sbb
in
jmp
(bad)
pop
mov
scas
mov
pop
retf
lock
repz
inc
push
imul
cmp
jb
xor
push
hlt
in
mov
fdiv
(bad)
or
loopne
jmp
stc
pop
pop
pusha
rcl
pop
mov
jge
sbb
clc
xor
cmovae
pop
jmp
xlat
mov
adc
int3
xor
stos
cmc
sbb
cmp
int
mov
shl
pop
neg
jle
cli
dec
inc
add
sub
fchs
inc
xor
int3
add
ins
push
cdq
dec
pusha
shl
and
dec
inc
cwde
ins
or
int3
add
xor
mov
adc
data16
loop
das
mov
cmp
(bad)
push
cmp
jae
xlat
addr16
push
inc
sbb
les
or
mov
sub
stos
mov
repnz
mov
dec
inc
bnd
retf
les
mov
add
jb
add
adc
out
fidiv
stc
fsub
(bad)
adc
push
pop
ret
test
lock
mov
repnz
je
push
lea
das
xor
call
lods
movs
sbb
popa
fimul
mov
lods
fnstcw
pop
jbe
imul
push
push
adc
pop
jle
pop
(bad)
pop
mov
retf
scas
mov
popf
test
push
adc
int3
jmp
mov
inc
and
or
bound
dec
mov
test
mov
sahf
mov
imul
mov
or
jmp
jmp
je
and
mov
dec
cmp
and
hlt
cmp
iret
add
outs
lock
repz
pop
popw
fstp
xchg
fistp
push
lods
pop
(bad)
fbstp
cmps
adc
test
repz
cmp
out
loopne
or
jmp
xchg
test
loope
or
out
pop
mov
xchg
xor
and
add
sbb
mov
jl
inc
test
fldcw
into
pop
call
cmp
cmp
xor
outs
in
je
popa
mov
fmul
les
inc
jl
aam
pop
test
jecxz
pop
sub
(bad)
gs
add
jne
add
sub
(bad)
lock
mov
je
cmp
mov
xor
jb
call
call
cmp
loope
repnz
(bad)
ffree
jns
lods
(bad)
lds
jle
mov
mov
xor
fbld
idiv
pop
xor
mov
test
push
mov
sbb
mov
or
lea
les
mov
cmp
add
cdq
movs
push
pop
mov
into
rcl
add
jns
scas
jmp
push
inc
or
jmp
out
xchg
pop
popf
adc
je
xchg
movs
call
inc
jb
mov
js
test
shl
adc
add
jb
fcmovne
cmp
or
rol
aaa
jecxz
and
ret
lds
push
ja
mov
inc
xchg
aam
fs
and
xchg
xor
sbb
leave
scas
pop
mov
cld
jecxz
add
mov
aas
sub
jae
push
push
ss
push
jnp
hlt
ret
ds
cmp
push
mov
or
out
xchg
and
or
xchg
inc
sub
cs
xor
ret
dec
and
fmul
ins
shr
mov
clc
scas
sti
not
adc
repnz
or
not
test
rcl
mov
push
int
and
mov
sub
out
or
and
pusha
fistp
cli
mov
xchg
or
add
loop
mov
adc
repz
std
mov
ds
sar
lds
ret
sub
iret
push
mov
(bad)
xchg
xor
pop
inc
not
jle
adc
sti
jo
in
sar
out
int
jmp
inc
sahf
test
jo
int3
add
enter
outs
inc
inc
mov
out
lea
cs
jns
daa
xor
mov
test
movs
add
pop
and
push
leave
call
jb
push
(bad)
push
pop
mov
mov
adc
mov
fs
mov
sub
cmp
call
jns
adc
cli
inc
add
dec
test
mov
and
out
pop
cmp
imul
(bad)
adc
ins
xchg
mov
cmps
fimul
add
sbb
cmp
test
mov
jecxz
inc
add
test
div
pusha
inc
ss
jns
cmp
ins
add
cmp
je
push
jns
mov
retf
jg
(bad)
cli
push
xor
adc
add
es
stc
cmp
aaa
std
and
adc
push
jbe
jnp
jo
aaa
xlat
push
inc
mov
mov
cmp
xor
rcr
xchg
cmp
sub
and
mov
cmp
or
movs
aam
bound
mov
mov
mov
and
cmc
xor
call
outs
xor
sbb
out
mov
push
push
rol
pop
mov
cdq
addr16
inc
xor
pop
pushf
dec
pop
mov
push
sbb
mov
fidiv
sub
(bad)
ficomp
jo
cmc
adc
mov
push
adc
scas
idiv
sub
mov
mov
nop
(bad)
pop
xchg
aas
hlt
sub
js
movs
pop
imul
push
shl
mov
loop
(bad)
push
inc
daa
xchg
dec
imul
ins
cmp
jb
sahf
stos
retf
or
popf
ds
popf
ins
and
in
js
stos
call
sbb
xchg
scas
neg
ins
xchg
das
push
stc
add
clc
jb
fsubr
adc
mov
add
sbb
data16
push
mov
xor
push
push
jns
pop
jecxz
clc
xchg
and
daa
cmp
cmps
mov
and
mov
les
mov
test
fmul
add
pop
dec
and
add
inc
push
mov
and
(bad)
fcmovb
das
adc
arpl
rcl
push
mov
cmp
test
push
mov
add
cld
in
setp
test
test
std
mov
and
and
pop
xor
push
pusha
or
clc
test
and
jae
les
xchg
push
dec
fs
stos
addr16
cmps
lods
or
ret
fbld
fisttp
jecxz
mov
sbb
add
mov
aaa
fs
xchg
mov
sbb
retf
aam
(bad)
lock
push
inc
or
inc
movs
loop
mov
(bad)
shl
data16
add
div
outs
cmp
cld
inc
inc
cli
jo
sbb
repnz
jg
push
ins
mov
push
sbb
xor
test
inc
es
add
xor
mov
dec
adc
mov
mov
pushf
rol
mov
xchg
std
jns
sub
mov
mov
or
mov
cli
sti
push
inc
pop
inc
mov
pop
adc
movs
jo
pop
mov
adc
adc
ss
jae
pop
paddw
in
ja
sub
rcl
fstp
push
jp
sar
inc
pop
and
jmp
xchg
pop
pop
push
push
shl
adc
test
add
ret
loope
push
test
stos
adc
paddsw
xor
daa
and
in
js
dec
xchg
add
fldln2
hlt
inc
or
inc
mov
sub
inc
sub
(bad)
inc
test
popa
cmp
xor
adc
(bad)
ret
mov
pop
mov
pop
inc
(bad)
psraw
or
pop
daa
sahf
push
hlt
xor
mov
mov
or
leave
pop
jb
dec
cmp
div
scas
je
dec
xchg
xchg
jno
sti
enter
in
adc
mov
ja
addr16
cdq
test
push
add
mov
jle
int
loopne
xchg
push
cdq
loopne
(bad)
fs
or
mov
dec
fwait
int
lods
scas
sbb
or
inc
mov
dec
div
or
mov
scas
inc
stc
xchg
inc
inc
sub
in
push
jo
(bad)
cwde
aaa
fisttp
mov
mov
push
mov
fs
movs
ret
inc
scas
jmp
xchg
mov
(bad)
dec
sub
movs
ins
jns
ret
(bad)
loope
aas
dec
jae
sahf
fwait
pushf
sbb
test
lods
or
outs
nop
aaa
lods
call
and
je
mov
push
loop
cmp
(bad)
(bad)
test
dec
dec
jl
mov
xor
cmp
dec
adc
test
jmp
xor
xor
mov
mov
lods
ins
sub
xor
xchg
adc
aam
imul
dec
mov
scas
cmp
outs
mov
jge
mov
stos
dec
sub
in
test
test
test
mov
xchg
push
dec
inc
mov
iret
mov
imul
jmp
ins
xor
sti
lods
mov
ret
mov
ins
adc
or
bound
add
xchg
xchg
nop
nop
push
sub
sub
jnp
jl
sub
pop
js
jne
gs
xchg
out
cmp
test
mov
jb
loope
sub
or
and
mov
fistp
adc
inc
push
mov
xchg
(bad)
cmp
push
gs
clc
jo
xchg
mov
int
arpl
xchg
pushf
add
clc
add
fidivr
mov
pop
mov
dec
test
pop
jl
dec
ret
nop
pop
out
cmc
xchg
call
in
push
test
mov
sub
and
push
fstp
pop
push
jns
add
dec
(bad)
mov
test
xor
add
pop
adc
sbb
inc
aas
pop
or
shr
lds
jecxz
popf
mov
push
loopne
xchg
clc
lahf
mov
xor
pop
test
pop
push
ja
jb
leave
bound
xchg
mov
sub
cmps
pop
pop
mov
add
add
jo
(bad)
shl
jns
add
test
inc
or
dec
repnz
nop
jb
cmp
push
int
ja
dec
push
jmp
or
xor
adc
mov
(bad)
clc
dec
mov
push
xchg
adc
cmp
xor
fldenv
pop
mov
jecxz
jnp
jo
in
retf
sub
jp
pop
lds
mov
aas
mov
movs
mov
(bad)
leave
sti
loope
xchg
xchg
cmp
push
mov
out
lods
jmp
retf
xor
cmp
adc
in
pop
xchg
shl
jbe
popa
es
aad
xor
sbb
mov
lods
push
xor
test
jp
and
das
sbb
stc
cmc
xor
xchg
mov
sbb
ss
in
inc
jmp
dec
inc
jl
push
dec
adc
js
(bad)
push
aam
fs
enter
ds
xchg
ds
std
cmp
mov
int
mov
dec
sub
inc
push
xor
mov
es
fsub
cld
test
loope
pop
push
sbb
in
stc
mov
mov
cwde
enter
pop
sbb
adc
sar
push
cs
pop
sub
cmp
ins
pop
push
and
inc
in
cli
icebp
test
gs
(bad)
cli
xor
int
jns
je
pushf
jb
push
add
jmp
inc
(bad)
mov
imul
jbe
lahf
out
mov
inc
ins
jl
outs
xchg
fistp
sbb
ror
inc
sub
adc
mov
and
xor
aas
adc
js
sbb
mov
or
scas
add
xor
adc
and
je
movs
pushf
bound
mov
loopne
popa
(bad)
(bad)
and
rcr
mov
or
sub
pop
add
sub
call
cdq
fs
adc
mov
or
js
pushf
in
inc
(bad)
xlat
in
inc
jae
adc
aad
adc
pop
stos
clc
ja
inc
std
jae
nop
and
aas
dec
pushf
call
inc
inc
pop
jne
and
cmp
arpl
adc
ss
lods
xchg
aaa
(bad)
(bad)
imul
pop
leave
push
repnz
retf
js
and
cmp
mov
push
push
test
out
js
sbb
sbb
outs
cs
xchg
jnp
and
sub
mov
out
bound
lods
mov
sbb
lahf
fs
mov
xor
cwde
ror
int3
adc
out
jle
xchg
sbb
sub
in
dec
mov
lock
test
sbb
sub
push
addr16
leave
mov
and
xchg
sbb
push
lods
aas
jl
cmps
clc
ret
fild
jmp
mov
je
pop
push
xchg
inc
movs
ficom
les
loope
enter
stos
cmc
repz
dec
scas
aad
mov
and
(bad)
repz
je
loopne
mov
aas
lods
pop
cli
inc
cmps
imul
pop
inc
xchg
jbe
aas
pop
fiadd
stc
mov
add
pushf
cmp
adc
outs
xor
xchg
mov
dec
xor
lock
or
cmp
mov
inc
test
add
cwde
cld
sub
retf
popf
in
sub
mov
fwait
pusha
movs
mov
in
fisub
imul
xchg
(bad)
push
stc
mov
sbb
sbb
stos
inc
enter
je
stos
xor
mov
movs
popa
push
leave
je
imul
out
inc
mov
mov
jae
daa
bnd
mov
sbb
(bad)
mul
ja
mov
cwde
hlt
xor
iret
mov
test
fidivr
push
retf
repnz
mov
fprem
mov
inc
neg
add
sbb
push
pop
and
mov
push
mov
mov
xor
pop
out
fdiv
mov
mov
retf
fisubr
mov
push
push
movs
and
mov
mov
push
cmp
ins
dec
pushf
ftst
mov
aad
stos
inc
retf
dec
js
xor
and
cmp
cld
movs
repz
and
mov
xchg
inc
adc
adc
movs
mov
fldenv
(bad)
fdiv
sub
and
test
pop
pop
rcl
mov
popf
lods
mov
mov
retf
in
(bad)
movs
scas
pop
and
imul
mov
iret
sub
pop
jmp
in
pop
inc
xor
mov
xor
popf
push
push
ret
repz
add
dec
dec
xchg
cmp
pushf
fadd
in
xchg
sahf
leave
call
jmp
call
mov
cmp
xchg
mov
sti
pop
sub
pop
iret
add
add
mov
sub
jb
push
xchg
loopne
inc
stos
push
outs
jmp
aas
mov
add
mov
lahf
(bad)
jg
pop
ins
push
leave
fadd
pop
and
xchg
stos
inc
sub
or
mov
(bad)
mov
pop
std
repnz
push
loope
shl
daa
sbb
jno
dec
test
loope
xor
pop
data16
sub
xchg
test
cmp
aas
xchg
pushf
cmp
dec
cmp
rol
je
cmp
cmp
jecxz
fdivr
repz
jp
in
popa
hlt
mov
mov
ins
push
lods
xor
dec
in
xchg
cwde
mov
lea
dec
mov
or
push
dec
repnz
mov
dec
mov
adc
inc
push
push
jno
mov
xchg
imul
sahf
cmp
jns
sti
jge
sbb
(bad)
jnp
(bad)
jno
cdq
xor
rcr
mov
pushf
cmp
ds
fst
jle
mov
test
shl
ret
inc
mov
push
call
and
and
push
aam
inc
adc
sub
mov
or
fldcw
movs
push
mov
xchg
hlt
and
adc
sbb
dec
adc
fsubp
hlt
scas
xchg
lods
test
inc
push
retf
fisubr
test
pop
in
pushf
jecxz
sbb
ds
(bad)
and
movs
int3
popa
ret
ins
(bad)
lock
ds
int
nop
jge
pop
fimul
mov
pop
mov
xchg
loopne
adc
add
mov
stos
sub
push
pop
inc
stc
inc
shl
movs
fdivrp
test
in
mov
hlt
sub
imul
mov
xlat
fnstenv
mov
pop
dec
ja
mov
pushf
mov
add
cs
xchg
sbb
pop
adc
add
aas
add
addr16
rol
arpl
push
cld
(bad)
and
cmps
mov
cmp
dec
jmp
les
pop
sub
ja
push
dec
and
dec
and
mov
stc
repnz
scas
xor
in
xchg
and
sbb
retf
mov
or
jmp
add
ins
loop
imul
into
push
push
xchg
push
add
(bad)
pop
fs
xor
xor
cwde
xchg
add
xlat
call
mov
xchg
cmp
outs
ret
mov
sub
push
xor
in
lods
(bad)
data16
adc
add
arpl
xchg
enter
and
mov
mov
fnstenv
cmp
bound
idiv
aam
mov
out
dec
into
fsubr
cmps
mov
fs
mov
mov
and
pop
and
js
out
stc
lds
loop
ja
aas
sbb
into
xchg
mov
data16
(bad)
aas
add
inc
dec
or
adc
pop
ret
dec
or
jge
sbb
sbb
pop
xchg
inc
ficomp
xor
sub
mov
out
cmp
aas
les
xchg
imul
xchg
push
inc
inc
mov
cld
push
and
inc
xor
mov
fcomp
jns
sub
push
and
aad
add
xchg
and
cmc
adc
adc
cmps
pop
or
int3
xor
inc
pop
retf
mov
adc
mov
jb
sbb
xchg
pop
cld
sbb
sbb
hlt
inc
sbb
fcmovnb
mov
dec
dec
or
xchg
push
push
call
daa
sbb
das
mov
loopne
lahf
jl
fcomp
cmp
sti
cmp
imul
or
pop
fistp
(bad)
in
inc
jns
xor
jo
lods
inc
and
jle
xchg
(bad)
fnstcw
(bad)
push
cwde
jae
scas
(bad)
fucomp
test
xchg
cs
xchg
std
std
mov
mov
mov
mov
push
xchg
xchg
mov
xchg
xchg
sbb
jl
dec
sar
js
inc
lahf
adc
loop
ret
add
mov
inc
cs
loopne
fistp
add
leave
mov
xchg
scas
(bad)
cmp
pop
jl
ins
test
ds
and
pop
sub
popf
xor
int
and
cmp
xchg
add
out
and
mov
or
fcomip
push
and
mov
outs
hlt
icebp
fadd
enter
mov
in
mov
mov
push
cli
aam
repz
or
leave
fimul
mov
inc
jb
movs
sub
mov
ror
or
or
in
jl
repz
jnp
pop
mov
or
inc
pop
sub
mov
(bad)
in
stos
mov
xchg
adc
lock
push
jmp
scas
test
call
or
imul
ret
and
popf
lock
adc
jae
and
in
popf
pushf
pushf
cwde
dec
add
cmps
dec
in
ins
xor
sahf
mov
push
mov
test
leave
or
iret
adc
pusha
(bad)
retf
das
push
retf
jne
mov
adc
inc
mov
cmp
das
fcom
arpl
inc
inc
loop
test
xor
je
jo
arpl
lods
xor
mov
inc
sbb
cwde
test
mov
cs
dec
pop
jg
sbb
pop
mov
imul
fimul
movs
xchg
ds
ja
xchg
xlat
add
(bad)
pushf
retf
sbb
scas
ss
loopne
push
enter
shl
(bad)
xor
push
sub
pop
enter
xchg
jg
cmp
xchg
js
dec
xchg
xor
push
jnp
adc
pop
xor
test
adc
cmp
lods
push
loope
jnp
cmp
or
push
fsubr
sbb
dec
mov
jle
dec
sbb
in
pop
test
fsubr
arpl
cmp
js
mov
adc
aad
lods
push
xchg
scas
punpckhbw
into
or
pusha
xor
xchg
pushf
in
outs
sbb
dec
mov
ret
jae
int
outs
add
(bad)
ja
ffreep
fild
lea
into
and
sbb
sub
gs
imul
fadd
enter
pop
test
pop
xor
push
addr16
into
rol
std
mov
mov
fst
fcmovb
ds
add
sub
and
jbe
mov
cmp
int
and
fist
mov
xchg
xchg
push
dec
cli
adc
les
shl
jne
mov
mov
jg
int
mov
imul
imul
or
adc
repz
mov
js
cli
dec
ret
sub
mov
xor
rep
dec
jp
cli
xchg
and
dec
xchg
arpl
scas
lods
stos
pop
imul
mov
les
lods
add
mov
sub
adc
(bad)
xor
aaa
inc
xor
lock
neg
enter
mov
add
sub
sub
pop
dec
xor
ja
pushf
cmp
retf
cli
clc
mov
in
sbb
push
rcl
shr
cmp
add
and
add
test
rcl
cmc
cdq
xchg
lock
bound
(bad)
sub
cdq
adc
xchg
or
inc
retf
push
dec
or
or
cmc
xchg
out
in
(bad)
mov
pop
xor
sbb
ss
movs
stos
fwait
icebp
out
je
in
push
xor
mov
cmp
cmp
cmp
fdivp
outs
jp
sbb
repnz
lods
js
jl
adc
push
shl
out
retf
add
xchg
add
mov
outs
fsub
or
in
fdivr
repnz
or
in
xor
pop
fstp
ja
and
(bad)
xchg
mov
xor
xchg
inc
jb
sbb
shl
inc
push
push
pop
ror
popf
push
mov
sub
inc
push
and
jb
ret
mov
ss
push
mov
cmp
cmps
loopne
xlat
das
enter
loope
rol
jmp
sbb
jae
or
add
mov
cmp
adc
movs
ds
pop
mov
adc
gs
cmp
jg
jp
(bad)
add
jmp
dec
mov
inc
inc
xchg
cs
adc
add
lods
stos
in
mov
cmp
lahf
or
ficomp
iret
adc
xor
rol
adc
push
xchg
dec
xchg
inc
push
xor
rcr
jnp
jne
push
jle
cmp
ss
xor
sub
push
(bad)
adc
inc
sti
retf
mov
push
or
jbe
jl
(bad)
mov
jb
inc
cmps
mov
pop
dec
mov
in
jb
lock
rol
mov
mov
(bad)
je
jb
jb
ins
inc
xor
and
pusha
fwait
pop
and
jo
lods
imul
pop
loopne
ja
ins
xor
arpl
das
mov
dec
loope
and
test
jne
(bad)
rol
ficom
mov
sub
fiadd
pop
ja
sbb
aam
adc
xchg
sub
push
xchg
or
js
sbb
and
jmp
fidivr
xor
ficomp
(bad)
aam
stc
ds
xor
xor
test
push
push
and
mov
or
adc
int3
mov
fild
call
(bad)
(bad)
pop
mov
test
ret
inc
dec
loopne
push
pop
hlt
add
or
rcl
mov
mov
cmp
fisub
scas
ins
add
leave
inc
mov
cwde
adc
xor
push
ja
test
jo
loopne
jo
adc
cmp
cmp
lea
and
sbb
shl
cmp
sbb
ds
ficomp
jno
fwait
outs
push
sbb
cmp
(bad)
movs
pop
(bad)
adc
pop
cmp
rol
cli
in
(bad)
ret
outs
mov
repz
mov
xor
cmp
jmp
cmps
xchg
jge
psubsb
and
adc
xor
sbb
inc
fist
lods
fld
pop
lods
push
loope
add
mov
das
in
mov
push
jge
add
dec
mov
jmp
aas
icebp
les
std
iret
retf
addr16
lds
mov
mov
imul
pop
in
dec
test
cmp
call
push
cmps
loope
data16
pop
push
fist
ds
cs
and
pop
push
fild
or
(bad)
aam
bound
outs
mov
mov
leave
je
(bad)
sbb
test
int
lahf
mov
sbb
retf
add
jnp
jns
sbb
or
xchg
mov
adc
or
push
test
imul
test
test
fadd
(bad)
rcr
dec
(bad)
bound
in
mov
cld
in
inc
sti
mov
shl
rcr
xlat
xchg
les
sub
jne
rcl
leave
cmps
loopne
mov
ss
loope
or
pop
xor
(bad)
jle
cmp
inc
push
add
add
mov
pushf
xchg
xchg
cwde
jl
push
jmp
xlat
adc
jmp
inc
ror
dec
pushf
or
rol
inc
cmps
cmp
(bad)
dec
out
jg
fwait
call
(bad)
and
test
fs
iret
xrelease
in
inc
jnp
out
xlat
jge
addr16
dec
inc
std
jae
jne
lods
dec
or
stos
not
pop
pop
(bad)
stos
in
call
(bad)
popf
push
imul
push
dec
add
ret
xor
and
shl
jbe
out
cmp
push
pop
cmp
test
cmp
test
xchg
fiadd
out
sbb
or
aam
outs
push
bound
(bad)
fbstp
add
sbb
jno
mov
loope
cdq
ins
retf
push
inc
jno
fiadd
mov
test
adc
xchg
stos
and
movs
dec
shr
fnstcw
pop
js
icebp
or
mov
or
pop
lock
in
jge
int
inc
enter
jmp
cmp
cdq
push
jno
fbstp
cmp
outs
stos
jb
push
jnp
je
dec
cld
add
fdivr
enter
jle
cli
xchg
cwde
loop
les
sbb
adc
in
sbb
mov
imul
stc
jge
ds
push
call
cmps
cli
(bad)
dec
jno
out
adc
dec
cmp
cmp
ret
xchg
pop
add
test
xchg
and
dec
dec
test
add
addr16
push
(bad)
out
repz
inc
pop
ds
and
mov
or
std
mov
and
aam
jmp
ins
jmp
call
out
mov
loope
(bad)
cmp
sbb
xchg
es
mov
sub
test
add
jbe
add
test
mov
imul
scas
adc
mov
sbb
into
repnz
(bad)
aam
mov
push
stos
fs
xchg
rol
add
xor
pop
mov
repz
add
ret
aam
xchg
jno
fnsave
or
mov
pop
repnz
lds
iret
jo
scas
ins
lods
pop
xchg
pop
scas
ret
mov
push
and
ins
repnz
xor
adc
xor
retf
lea
loopne
sub
dec
jmp
xchg
jne
test
pop
mov
retf
add
xchg
jns
and
jecxz
cmp
ret
aaa
mov
inc
add
outs
lods
add
push
or
dec
retf
mov
push
sub
sub
fdivrp
xchg
dec
xchg
test
mov
xchg
wrmsr
test
loope
mov
retf
xor
jns
mov
adc
bound
js
or
fwait
imul
iret
fiadd
and
mov
jmp
bound
out
mov
retf
or
and
stc
neg
jo
loop
or
jne
lods
pop
(bad)
add
int
fwait
retf
frstor
xchg
outs
add
or
push
lods
add
lahf
mov
adc
mov
retf
jae
mov
mov
add
or
fbstp
jae
lahf
jnp
(bad)
jge
xchg
ds
shl
jl
mov
imul
cdq
jns
sub
or
cmp
fcomp
xor
push
int
sbb
ins
aad
dec
sbb
loope
pop
cmp
jbe
push
aad
jecxz
jg
movs
inc
les
push
xchg
mul
(bad)
ins
jb
lods
mov
jo
scas
popf
lock
iret
pushf
jo
pop
fmul
mov
in
xor
push
xchg
dec
mov
push
pusha
(bad)
mov
and
pop
pop
cmp
mov
pop
je
add
sbb
adc
inc
dec
mov
pop
mov
lahf
out
retf
pop
xor
je
xor
test
mov
jle
xchg
mov
jbe
in
outs
mov
add
pop
push
addr16
out
mov
test
lods
inc
cmp
xchg
dec
pop
pop
stc
mov
adc
push
push
data16
lahf
div
jb
enter
pop
adc
scas
and
xchg
das
(bad)
adc
js
repz
jb
mov
popf
jle
xchg
dec
cmps
add
jmp
cmp
jecxz
les
aam
out
mov
movs
mov
loop
aam
call
pop
dec
inc
loopne
cmp
fild
clc
cmp
jg
pop
or
cmps
and
arpl
or
out
call
in
in
add
ret
pop
in
mov
xchg
add
ds
cmp
cmp
icebp
scas
xor
cmp
(bad)
cmp
sbb
aad
dec
xchg
retf
test
sub
ficomp
mov
cdq
scas
mov
gs
xchg
retf
jbe
clc
sahf
push
dec
inc
sbb
xchg
mov
ret
dec
pop
cld
rol
jnp
pop
jae
add
lods
das
sahf
fistp
scas
and
(bad)
mov
ds
xchg
add
push
push
xchg
call
adc
sar
adc
iret
addr16
stc
mov
mov
mov
sbb
retf
mov
cs
retf
add
sbb
push
imul
sbb
call
leave
lock
xchg
adc
mov
mov
pop
mov
call
dec
int3
loop
(bad)
push
xor
shr
adc
jbe
cmps
jge
in
mov
ins
jl
pop
fiadd
fwait
bound
sahf
add
adc
fnsave
mov
mov
test
rol
sub
or
inc
iret
add
xchg
push
js
inc
sub
test
fadd
mov
sti
outs
lods
xor
outs
pop
mov
cmp
int
(bad)
shl
cmp
or
rcr
xor
call
jecxz
push
icebp
mov
outs
(bad)
addr16
and
jp
mov
ss
pop
and
inc
icebp
ss
inc
and
out
ss
data16
in
add
cmp
cmp
mov
out
(bad)
call
mov
sub
movs
mov
mov
mov
xor
enter
pop
test
jne
scas
fbld
test
stc
(bad)
dec
xor
mov
(bad)
fdiv
dec
aaa
cmp
out
scas
cs
mov
ror
cli
mov
inc
fwait
ins
cli
adc
retf
dec
ja
arpl
pop
(bad)
enter
cmps
cwde
aam
jecxz
fld
sub
call
out
cwde
push
repz
pop
mov
jecxz
sub
cmp
sbb
xor
push
adc
push
pop
fcmovb
push
jle
loop
popf
popa
scas
and
mov
and
shl
fbld
inc
xchg
das
movs
push
fistp
sub
fmul
fnstsw
and
std
xor
xchg
pop
push
movs
jno
loop
(bad)
or
adc
call
sti
xor
mov
mov
cmp
loope
iret
call
int3
adc
xor
stos
mov
push
mov
popf
adc
inc
stc
int3
sbb
jns
xor
mov
ins
fcomp
mov
xchg
mov
adc
mov
mov
xor
dec
lods
div
sar
sahf
dec
arpl
shl
xchg
and
movs
in
mov
int
data16
call
test
jmp
scas
dec
aad
in
popf
jp
pop
jg
mov
adc
idiv
pusha
adc
sbb
push
cs
in
div
scas
into
icebp
inc
mov
cdq
icebp
dec
and
ss
or
jno
sub
mov
xor
icebp
out
inc
enter
cli
jae
adc
cmp
mov
xchg
sbb
jo
cmps
and
retf
push
pop
mov
popf
dec
repnz
aas
pushf
sbb
jg
pop
rol
pop
loop
dec
ins
int3
and
bound
pop
or
add
outs
xchg
sahf
mov
adc
xchg
das
ret
lock
(bad)
jo
or
ss
stc
sub
stos
outs
jmp
enter
setnp
sub
or
pop
into
out
jp
jbe
int
sahf
mov
sub
pushf
test
stos
mov
addr16
out
sti
dec
shr
inc
jae
sbb
dec
repnz
lds
fiadd
add
(bad)
mov
mov
dec
aad
xchg
xor
cmps
and
cmp
ss
stc
push
cmp
sbb
mov
and
mov
nop
mov
std
loop
xor
inc
dec
jecxz
and
add
fisubr
pop
arpl
sbb
lea
jl
mov
(bad)
pop
add
or
xchg
sub
jne
and
daa
push
adc
in
cmps
xor
pop
imul
loopne
pop
stc
aam
mov
xor
or
mov
cmp
stc
call
loopne
pop
push
test
lahf
je
int3
cmps
cmp
mov
mov
mov
sub
cmc
shr
lea
int
sub
jno
mov
dec
fwait
cwde
ds
and
ret
adc
cli
and
sub
ret
cmps
add
outs
dec
repnz
fbstp
cmp
adc
test
xchg
or
stos
sub
adc
or
jg
xor
xlat
xor
lods
xchg
es
xchg
addr16
std
jmp
push
outs
push
pop
or
and
mov
loope
or
scas
mov
cdq
mov
je
cmp
push
dec
cmps
cmp
mov
or
cmp
adc
outs
and
xor
int3
mov
retf
xchg
test
adc
sbb
leave
leave
push
(bad)
jle
ins
ja
jecxz
push
in
fs
sub
xchg
bnd
cmp
in
(bad)
push
push
sbb
repnz
shl
div
mov
out
xchg
xor
pop
pop
mov
jg
je
pushf
push
shr
jae
mov
adc
push
mov
out
inc
jbe
pushf
stos
in
jns
push
inc
inc
fwait
mov
sbb
cld
out
call
inc
ret
jbe
sahf
xchg
push
xlat
xor
push
adc
xchg
sub
jbe
stos
mov
loope
add
fild
inc
hlt
or
sti
js
pop
arpl
adc
fild
add
out
xchg
dec
idiv
xchg
scas
mov
stos
inc
push
(bad)
ret
stos
test
stos
adc
jno
(bad)
inc
sti
movs
gs
pop
ds
push
shl
lods
movs
ins
iret
clc
or
inc
rcl
dec
dec
xor
or
add
and
cmp
ret
adc
sub
stc
jl
adc
mov
mov
mov
retf
xlat
pop
mov
fst
cmps
mov
jl
outs
fiadd
rcr
shl
aam
js
and
cli
inc
jae
aam
inc
mov
movs
cmp
pusha
arpl
sub
ja
xchg
and
mov
xchg
les
lods
add
lahf
xchg
outs
cmp
dec
push
jbe
ds
jno
test
imul
je
leave
rcl
shr
jmp
xor
rol
cmp
in
xchg
(bad)
repz
mov
aam
out
mov
imul
aad
je
jle
fdivr
lahf
xor
mov
gs
cmp
ss
push
lds
push
pop
or
push
mov
cmp
xchg
iret
mov
fcomi
fsub
mov
inc
mov
pop
sub
mov
stc
data16
and
(bad)
clc
call
pop
and
sahf
and
das
outs
jne
and
mov
mov
ror
mov
icebp
xchg
mov
rol
ss
sbb
jne
pusha
cld
enter
gs
xor
pop
push
iret
inc
push
xchg
outs
out
idiv
cli
sahf
xor
push
cmp
push
jb
aad
inc
push
xchg
(bad)
jae
aam
bound
jmp
out
int
pop
dec
(bad)
sbb
fstp
js
adc
push
fidivr
inc
(bad)
test
ret
punpckhbw
xor
nop
cs
xchg
mov
int
dec
lods
pop
mov
mov
loop
sub
call
xchg
gs
xchg
sub
pop
xor
or
xchg
loope
xchg
aad
leave
ss
aas
addr16
mov
repz
push
mov
pop
jge
dec
mov
push
and
psubb
sub
pop
add
jg
pop
jbe
mov
or
pop
xchg
mov
in
pop
ja
stc
div
cmp
lock
jne
mov
push
pop
es
shr
mov
push
outs
sub
je
dec
xor
mov
leave
push
xchg
into
xchg
mov
pop
xchg
data16
stos
push
jb
int3
mov
stos
in
xor
pop
mov
je
sbb
mov
push
lea
push
inc
inc
sub
(bad)
scas
mov
call
sub
sbb
in
dec
push
jmp
sub
aas
rcr
aas
fs
cmps
cli
jle
in
std
jbe
(bad)
test
and
and
sub
scas
inc
ins
mov
imul
mov
and
leave
aam
sub
sbb
aas
stos
(bad)
call
push
mov
dec
stc
xor
sar
push
jp
lds
push
xchg
push
push
or
and
pop
int
xchg
sub
fbstp
xchg
cmp
mov
push
aam
cmp
in
push
in
and
add
adc
lock
imul
mov
(bad)
jns
mov
sbb
ret
push
pop
fidivr
xchg
mov
out
ret
in
or
(bad)
js
jge
call
mov
icebp
cmps
pop
cmp
les
cmps
cmp
ror
sbb
mov
ins
cmp
in
dec
xchg
in
and
fdiv
cmc
sbb
cwde
fsubr
xor
imul
mov
and
pop
mov
(bad)
mov
repz
test
cmc
bound
mov
fidivr
popa
ins
xchg
aas
retf
xchg
sub
mov
cmp
xchg
loope
pop
test
(bad)
sbb
jg
sbb
fdiv
(bad)
ds
loop
sub
push
mov
jmp
inc
stc
cmp
nop
jnp
test
and
xchg
(bad)
(bad)
push
xor
shl
jle
xchg
pop
cmp
mov
inc
sbb
mov
sar
call
xchg
jnp
push
adc
fisttp
repz
jns
jp
loop
mov
loope
bnd
stos
sub
addr16
ss
mov
xlat
or
mov
xor
ins
jbe
in
hlt
cmp
sub
add
in
xchg
in
mov
push
inc
dec
inc
and
loopne
mov
push
pop
fidiv
(bad)
jmp
cmp
mov
jp
or
cmps
dec
push
dec
in
aam
call
sub
cmp
push
mov
popa
inc
mov
cmp
mov
test
into
xchg
inc
jo
int
dec
aas
aaa
out
xor
push
push
jb
jbe
arpl
addr16
int3
push
je
into
xchg
ja
out
cld
inc
pop
push
call
mov
jmp
stos
push
jmp
pop
icebp
jge
std
iret
cli
xor
dec
xchg
fimul
mov
pusha
imul
rol
push
cs
mov
xor
fwait
imul
mov
sbb
(bad)
xor
outs
mov
fsubr
fmul
int
(bad)
ja
loop
xor
ins
cmp
push
sbb
and
sar
push
aaa
jns
movs
or
pop
cmp
shr
out
int3
pop
pop
push
xor
dec
xchg
aad
lea
cmps
ja
fwait
and
jge
rcr
and
ins
cmps
arpl
popa
iret
mov
cmc
in
inc
popa
pop
pop
and
lds
sub
xchg
test
mov
inc
stos
mov
and
mov
adc
add
ret
(bad)
lahf
sub
mov
scas
mov
scas
mov
xchg
and
xor
out
mov
jbe
mov
jmp
mov
cmp
les
mov
je
ss
(bad)
cdq
loope
cwde
sahf
inc
inc
jbe
cmps
lods
dec
fiadd
cmp
and
push
imul
loope
mov
add
jmp
xchg
and
lea
dec
mov
cs
mov
call
(bad)
(bad)
xor
push
jmp
sub
mov
scas
out
xchg
pushf
pop
cmp
shr
div
push
dec
xor
jecxz
retf
sub
int
sub
pop
mov
mov
cli
xchg
adc
int
pop
cmp
loopne
adc
or
movs
pop
loopne
ds
cmps
es
out
mov
sub
mov
mov
mov
fdivp
cmp
adc
and
push
dec
pop
dec
mov
mov
cli
retf
pop
pop
mov
sbb
xor
mov
leave
pop
ficomp
ror
push
dec
jl
push
sub
aam
mov
nop
xchg
ret
fsubr
(bad)
mov
lea
ins
add
outs
push
addr16
in
pop
mov
fimul
pop
inc
fistp
jae
lea
sahf
xor
hlt
and
push
and
xor
or
jecxz
inc
out
cmp
rcl
mov
lods
adc
clc
mov
ret
inc
sete
mov
js
inc
clc
repnz
xor
dec
dec
mov
iret
pop
hlt
push
bound
inc
inc
inc
shl
mov
jge
jg
jno
retf
and
jb
pusha
sahf
cld
outs
fnstcw
ficomp
not
mov
lods
mov
daa
rcr
leave
sub
test
inc
sbb
fcom
push
cli
cmp
cmps
mov
popf
or
push
jmp
std
mov
daa
hlt
lods
ins
jp
rcl
sbb
mov
push
dec
movs
adc
outs
(bad)
test
adc
xchg
xchg
and
mov
or
jbe
pop
out
xchg
test
mov
(bad)
jle
imul
cmps
jmp
mov
xchg
ins
loope
mov
les
(bad)
and
sbb
cs
pushf
fcom
pop
and
in
sub
pop
and
(bad)
jp
in
das
xchg
mov
mov
cmps
push
xchg
jb
scas
jmp
arpl
in
push
imul
and
loop
push
jns
sbb
pushf
mov
leave
cmp
sub
or
dec
sti
lods
rol
sbb
xlat
xchg
idiv
dec
imul
or
int3
inc
sbb
xchg
pop
aad
test
repz
mov
push
and
loopne
mov
push
shr
fwait
and
loop
ja
mov
xlat
jbe
ror
aam
sbb
repnz
jge
cmc
ret
ret
and
dec
mov
out
pop
inc
xchg
rcr
nop
push
shr
jno
sub
dec
cmp
daa
dec
pop
fcomp
mov
into
xchg
inc
and
scas
in
add
xor
add
cmp
inc
or
inc
xor
lahf
arpl
idiv
aaa
fbstp
gs
fcmovnu
mov
das
les
xor
push
dec
mov
or
hlt
sbb
sbb
add
jmp
repz
in
pop
push
sti
fisttp
or
sub
push
sub
lock
cmc
dec
xchg
sbb
loopne
sub
jns
push
(bad)
fstp
push
mov
jl
fmul
sti
shr
pop
pushf
xor
xchg
jl
ja
xor
inc
in
pop
inc
jns
movzx
push
fs
sar
dec
test
gs
cmps
fldenv
ficom
loop
retf
mov
mov
dec
mov
and
fdiv
loopne
pusha
mov
aam
out
cmp
xor
xchg
jns
dec
cld
das
cld
clc
jg
mov
pop
in
repnz
pop
mov
sbb
out
aad
frstor
dec
add
sbb
push
mov
and
jne
cmp
mov
out
adc
jns
pop
fwait
aaa
mov
stos
dec
loope
scas
xor
jge
fmul
or
test
std
test
outs
ret
call
jns
mov
scas
xchg
pop
bound
popa
daa
fdecstp
loope
xor
lods
rol
mov
push
cli
test
int
add
inc
pop
fstp
out
pop
mov
mov
ja
mov
push
ja
sub
push
mov
mov
ds
and
jg
and
jno
cmps
cmc
jno
xchg
pop
jno
stos
mov
inc
jne
scas
mov
cs
imul
push
mov
fild
cmp
cmp
(bad)
xor
sbb
fiadd
clc
jns
rcr
mov
sub
cmp
dec
mov
sbb
div
vfmaddsd
cli
test
and
mov
jle
adc
dec
cmp
dec
(bad)
and
sub
addr16
popf
pop
out
test
add
mov
jae
dec
adc
das
mov
retf
daa
icebp
fst
inc
pusha
ins
iret
std
xchg
gs
shl
int
sahf
jb
xchg
mov
pop
mov
into
jo
push
ret
inc
sub
imul
mov
jae
xor
pop
les
movs
fsubr
and
or
call
lds
mov
repnz
add
iret
add
shl
sti
and
retf
inc
add
into
xchg
sbb
dec
fwait
pop
iret
and
(bad)
push
js
xor
sub
pop
in
das
pop
pop
xchg
out
inc
into
test
sti
dec
dec
imul
mov
lea
int3
es
add
cmps
shr
add
pusha
mov
push
mov
test
jmp
inc
adc
and
aas
std
mov
or
sti
mov
sbb
data16
or
and
out
stc
push
pop
inc
gs
cwde
or
es
or
(bad)
mov
cdq
add
add
enterw
inc
stos
data16
jne
fcomp
xchg
inc
jg
xchg
imul
mov
push
fisttp
sub
into
adc
pushf
jnp
lahf
cmp
xchg
push
mov
mov
mov
div
jns
(bad)
fadd
addr16
mov
push
adc
xor
or
es
and
aad
ds
ins
test
movs
xchg
in
in
aad
inc
inc
and
shr
jno
fwait
ins
stc
mov
sbb
sbb
and
sbb
add
or
jecxz
inc
mov
dec
dec
pop
mov
add
xchg
lock
pop
sub
mov
cmp
shl
mov
inc
mov
mov
xchg
in
push
ss
jecxz
into
add
mov
ds
jno
ins
jp
data16
sbb
mov
jne
mov
cdq
outs
mov
aad
movs
int3
frstor
jmp
sbb
stos
add
jno
jae
test
icebp
dec
xchg
jbe
adc
mov
and
idiv
sahf
test
outs
mov
ins
jl
mov
add
out
mov
lahf
pop
loop
add
mov
arpl
adc
jbe
pop
dec
cmp
push
mov
outs
fnstsw
repz
sahf
or
imul
in
push
repnz
(bad)
test
pop
mov
clc
retf
mov
push
mov
cmps
mov
popf
pop
mov
scas
add
xlat
jl
pusha
inc
adc
push
adc
cmc
ins
mov
dec
imul
jmp
cli
and
out
rol
sar
aaa
(bad)
xchg
jnp
xor
movs
xor
cmps
leave
pushf
mov
and
js
adc
jecxz
ins
xchg
mov
or
jge
push
ds
inc
in
inc
jns
fst
cmc
fiadd
cmp
cmp
(bad)
retf
xor
std
dec
aas
repz
stos
data16
pop
(bad)
idiv
ss
cmp
mov
mov
dec
inc
and
pop
pushf
es
xchg
jno
adc
retf
or
daa
mov
mov
daa
pop
inc
mov
push
jmp
jle
ret
inc
cli
sub
fisubr
lods
enter
shl
cmc
cmp
stc
leave
inc
loop
ins
ficom
mov
adc
repz
enter
cmps
icebp
push
(bad)
sbb
in
xchg
mov
movs
push
pop
pop
mov
cli
pop
inc
out
pop
mov
jle
xchg
dec
dec
jl
sahf
cs
or
repnz
mov
sbb
retf
loopne
jl
out
and
ins
ret
pop
mov
xchg
ins
lock
enter
pop
add
mov
leave
pop
fwait
and
xor
add
and
hlt
imul
mov
push
sahf
sahf
jmp
stos
mov
movs
pop
(bad)
(bad)
call
jmp
enter
xor
out
xchg
inc
cmp
sub
ret
mov
cmp
push
fisub
int
pop
jno
jl
and
mov
and
sbb
popa
xchg
push
fimul
inc
mov
in
mov
jno
sbb
fdiv
clc
js
sti
and
adc
xchg
pop
jmp
xor
cmps
sub
adc
jne
mov
dec
stos
sbb
xchg
xchg
and
lods
xor
loopne
adc
lods
into
push
scas
loope
sbb
int
(bad)
arpl
xor
mov
call
inc
sbb
in
repz
stos
push
not
mov
push
ins
int3
(bad)
bound
push
aas
add
imul
enter
push
jmp
dec
sbb
scas
push
js
jmp
jecxz
sub
je
leave
xor
cwde
push
add
sbb
pop
out
cmps
je
dec
sub
loopne
adc
clc
imul
jecxz
push
mov
or
mov
ins
call
not
pusha
retf
xchg
pop
add
xor
shr
sbb
inc
js
adc
adc
mov
dec
repz
xchg
pusha
mov
jns
sahf
out
and
aad
cmp
je
xchg
in
mov
call
jno
xor
test
out
and
sar
out
jbe
stc
jmp
push
mov
sub
scas
pop
mov
add
pusha
test
mov
xchg
call
sti
into
daa
inc
es
pop
retf
into
mov
mov
push
jmp
cwde
inc
push
and
push
jl
cmp
fcomp
mov
in
je
fadd
pop
xchg
xor
mov
sub
xor
je
cmps
or
add
fisubr
jbe
sub
or
out
aad
js
int
fadd
push
xchg
pop
ss
pushf
fbstp
pop
inc
inc
or
or
mov
or
in
dec
fs
xchg
int3
add
cmp
xchg
fldenv
cmp
mov
mov
jae
and
cmp
mov
xor
call
jg
mov
jg
mov
aam
jo
or
xchg
dec
in
jae
retf
cs
mov
fs
fwait
arpl
(bad)
fist
inc
adc
cs
jl
shl
ins
outs
xchg
ja
cmp
jp
mov
or
fld
scas
jnp
imul
xor
push
repz
rcr
sbb
test
pop
cmps
cmp
adc
xor
sub
jge
lahf
js
out
stc
or
inc
fisub
retf
or
xchg
in
sub
mov
fdivr
jne
dec
data16
test
push
push
sbb
mov
cmps
dec
xchg
out
mov
jb
imul
mov
adc
retf
adc
addr16
xchg
adc
and
push
stc
in
inc
mov
punpcklbw
xor
mov
push
jmp
pop
mov
fwait
es
fwait
imul
add
aad
xlat
dec
outs
daa
out
mov
xchg
or
out
imul
mov
pop
sub
imul
push
retf
mov
mov
inc
inc
(bad)
mov
ja
or
mov
js
call
add
jg
into
bound
dec
in
xchg
popa
xchg
icebp
retf
dec
xor
lahf
es
out
aad
cmc
(bad)
mov
test
push
rcl
bound
fs
iret
xlat
lods
cmp
jae
pop
mov
retf
hlt
pop
fistp
dec
(bad)
jecxz
lods
sub
sub
das
(bad)
sbb
adc
xchg
mov
mov
dec
dec
out
xor
xchg
adc
dec
fbstp
push
outs
stos
mov
jl
sub
cmps
jno
lahf
cmp
xchg
inc
mov
fnstcw
and
dec
lahf
out
outs
adc
adc
test
or
inc
inc
jns
cmp
cmps
push
mov
or
out
mov
out
push
sub
jecxz
push
adc
inc
mov
cmps
adc
xor
clc
mov
leave
dec
adc
adc
mov
inc
push
imul
iret
lea
mov
mov
test
arpl
lods
mov
or
jge
mov
movs
xchg
(bad)
(bad)
retf
in
cdq
and
aad
xor
xchg
adc
cmp
inc
push
dec
add
pop
loop
fmul
mov
ror
sub
sub
cld
sbb
mov
mov
xchg
pop
jp
dec
shl
movs
in
fimul
add
sub
(bad)
xor
cwde
mov
dec
je
jb
inc
adc
mov
daa
mov
pop
repnz
cmps
sub
pop
and
pop
jns
hlt
mov
shr
popf
stos
mov
push
mov
push
pushf
xchg
dec
push
ret
enter
loop
das
addr16
add
and
fistp
dec
xchg
arpl
mov
shl
sub
xor
out
xor
mov
push
enter
mov
dec
daa
les
pop
dec
mov
fisttp
rcl
mov
mov
in
xor
pop
mov
js
mov
mov
mov
nop
mov
cmps
pop
mov
push
sbb
clc
call
aam
add
push
pop
push
test
loopne
stos
cmp
dec
inc
mul
jmp
xchg
cmp
dec
stos
aam
jmp
mov
mov
pop
jnp
jae
mov
or
adc
sub
add
mov
cli
cmps
jp
push
shr
push
jns
jbe
cmp
sub
mul
sti
fisubr
dec
retf
(bad)
retf
loopne
pop
(bad)
push
mov
dec
pop
retf
addr16
ss
add
shl
loop
add
mov
mov
pop
cmps
dec
rcr
in
mov
add
sahf
add
shr
adc
clc
sar
rcl
mov
movs
pop
aas
ins
xor
pop
jp
jle
cmp
jae
ret
push
cwde
sub
mov
int3
jb
lods
ja
gs
mov
and
aad
inc
push
pop
mov
int
inc
imul
sbb
push
xchg
push
jb
cmp
mov
mov
mov
mov
inc
popaw
push
mov
int
cwde
mov
lea
lock
loopne
mov
mov
mov
adc
mov
rcl
arpl
xchg
or
ror
int
lds
rcr
enter
xor
sbb
mov
xchg
sbb
or
std
xrelease
loopne
xchg
das
cld
not
ret
enter
xchg
add
jp
jle
cmp
and
mov
inc
nop
loope
call
cmp
cld
sub
(bad)
ror
enter
sub
imul
mov
loope
push
jno
add
scas
adc
fstp
sbb
out
sbb
and
cs
jno
in
ins
into
jne
out
in
call
pushf
retf
loop
add
ds
pusha
retf
xor
pop
(bad)
inc
mov
pop
cmp
inc
mov
adc
ror
leave
mov
inc
xchg
inc
imul
sbb
xchg
xor
sbb
lods
imul
push
add
push
pop
mov
scas
push
mov
sar
xchg
in
imul
fsub
xchg
nop
mov
add
in
adc
cmp
(bad)
and
(bad)
stc
(bad)
pop
ret
cdq
and
inc
ja
fs
out
outs
xor
dec
sub
jecxz
jl
cli
sub
xchg
and
lods
jns
or
pop
adc
and
mov
adc
scas
(bad)
pop
sbb
mov
jne
xchg
inc
xor
out
mov
and
cs
adc
dec
inc
adc
scas
sbb
cmp
mov
in
push
xor
ins
adc
dec
lahf
test
mov
in
inc
add
out
int3
sbb
and
jae
outs
ret
aas
jne
mov
pop
ror
fisub
push
popa
jecxz
xchg
sub
dec
xor
fisub
pop
shl
ins
mov
nop
push
rol
pop
ins
and
sub
xor
adc
and
fidiv
or
xchg
add
dec
dec
push
xor
repz
mov
out
mov
repz
test
xor
sar
fild
mov
jno
xor
fistp
jl
push
lahf
fist
rol
cmp
mov
cmp
imul
loop
mov
adc
mov
mov
aam
sub
cld
pop
stos
xchg
xchg
sub
mov
jmp
pop
pop
mov
stos
jmp
adc
ja
(bad)
repnz
in
jno
sub
jno
mov
(bad)
not
push
retf
arpl
mov
nop
mov
clc
adc
movs
retf
push
cdq
sub
(bad)
in
into
push
test
retf
sbb
icebp
or
and
push
jno
in
test
(bad)
ja
mov
add
push
inc
imul
popa
jl
(bad)
fidivr
sbb
ja
test
mov
mov
addr16
mov
cmp
test
test
mov
mov
loop
xor
or
jmp
sub
cmc
jg
adc
or
pop
jge
sti
push
push
or
mov
cmc
ds
xchg
sub
out
imul
arpl
das
fiadd
or
jl
pushf
pop
ret
pushf
mov
jl
adc
(bad)
lds
aaa
cs
popa
out
and
xor
mov
jecxz
rcl
js
add
mov
fnstenv
xor
movs
sub
cdq
sub
sub
adc
popf
lahf
fs
pop
or
je
fwait
adc
sub
sub
sahf
cmc
xor
(bad)
pop
mov
enter
inc
stos
mov
pop
xor
cmp
mov
xchg
fwait
in
mov
mov
test
je
sbb
movs
out
jp
fnstenv
pushf
out
inc
add
lods
or
out
jecxz
mov
dec
add
mov
jge
sub
dec
cmp
inc
fsub
out
inc
cmp
pop
cwde
stc
ja
fwait
pop
test
aam
pop
ret
in
dec
enter
pop
dec
inc
cmc
mov
push
jp
cs
bound
adc
xlat
jmp
or
and
adc
popf
std
inc
adc
adc
(bad)
int3
scas
inc
pop
dec
stos
mov
popf
jecxz
xlat
mov
ret
call
or
xlat
mov
fwait
enter
outs
pop
in
sbb
out
repz
dec
mov
sub
fs
adc
dec
in
retf
push
repz
vcvtsd2ss
and
or
icebp
shl
push
fstp
scas
ja
xor
jnp
mov
jmp
repnz
add
cmp
inc
mov
mov
pop
push
shl
ret
lea
mov
push
or
inc
cld
rcl
sub
movs
push
repnz
outs
mov
adc
movs
rcl
ins
lea
clc
ins
retf
xchg
jmp
test
in
outs
cmps
mov
test
(bad)
sub
in
cmps
mov
mov
pop
jmp
and
jne
inc
mul
inc
push
(bad)
ficomp
dec
ins
pop
adc
shl
pop
sbb
or
repnz
pop
push
inc
push
cld
pop
bound
call
test
fidiv
pop
pop
ins
bound
jg
cmp
stos
stos
sbb
(bad)
dec
test
xchg
pop
inc
inc
push
nop
and
shr
cld
stos
(bad)
xchg
pop
add
not
iret
cmps
mov
dec
xchg
movs
jge
imul
jbe
outs
sub
mov
jp
and
(bad)
cmp
call
lahf
pop
mov
sbb
mov
sbb
fidiv
xchg
pop
aaa
cmp
pushf
xlat
mov
daa
and
jb
push
push
cmp
push
gs
xchg
push
cmp
movs
clc
stc
xchg
bound
pushf
or
lock
mov
add
cmps
dec
and
pop
or
and
and
push
or
movs
sar
xor
fidiv
xor
and
xor
pop
jge
cmp
jg
dec
pop
adc
inc
dec
xchg
lods
cmp
lods
out
in
stc
cmp
cmp
call
cmps
leave
cmc
cld
inc
das
ficom
(bad)
mov
push
or
pushf
xlat
ds
lahf
pop
dec
cmp
fldenv
(bad)
and
std
sub
push
ds
(bad)
popf
arpl
gs
enter
enter
cmp
ins
(bad)
mov
ds
call
fistp
out
jb
nop
test
retf
test
icebp
sbb
icebp
xchg
mov
mov
inc
cli
push
or
adc
push
mov
data16
jmp
xor
pusha
and
adc
sbb
out
xor
fild
mov
pop
fcomp
sub
stc
sbb
pop
pop
mov
loop
cmp
out
(bad)
(bad)
push
jle
out
and
pushf
dec
pusha
adc
dec
mov
retf
inc
sub
mov
addr16
nop
push
adc
(bad)
sub
adc
add
jno
pop
or
fwait
xchg
iret
adc
or
sbb
cmp
fwait
mov
stc
mov
fsubr
cmp
mov
and
jno
inc
dec
mov
and
dec
aaa
pop
je
gs
ins
jbe
(bad)
ror
pusha
test
pop
mov
(bad)
clc
dec
adc
loop
cmp
and
in
cwde
les
repz
stos
mov
cld
sahf
inc
jg
push
retf
dec
in
sub
sbb
inc
push
xor
xor
sub
push
mov
add
mov
fucomp
xor
push
rcr
cwde
cli
shr
rol
leave
mov
scas
xchg
jmp
add
(bad)
sub
nop
push
jb
mov
push
mov
jno
retf
in
or
pop
mov
mov
les
jnp
mov
inc
push
aam
dec
test
and
dec
inc
fisub
adc
mov
mov
mov
xchg
in
xor
rol
push
cdq
jecxz
and
xchg
mov
fstp
inc
(bad)
rcr
repz
mov
ficomp
inc
sbb
or
pop
xlat
jo
mov
ins
jecxz
imul
jne
stos
test
jne
add
sub
pop
add
cmp
int
xor
int
sti
std
sbb
(bad)
popa
push
outs
jno
aam
xor
inc
mov
(bad)
jle
xchg
movsx
popf
push
mov
and
pop
mov
lock
cmp
push
in
lea
shl
in
retf
sbb
ins
mov
stos
in
pop
bound
push
mov
cld
cmps
mov
int
icebp
mov
pop
lods
bound
mov
mov
pop
ret
addr16
xchg
(bad)
cmps
int3
ins
int3
and
jns
xchg
push
sub
stos
in
cs
daa
mov
stc
inc
mov
nop
mul
and
out
inc
es
fidivr
inc
mov
shl
jo
(bad)
fcmovne
retf
jmp
sti
pusha
jp
push
loop
xor
fs
call
movs
or
inc
loope
mov
or
dec
ficom
inc
cmp
push
push
push
int3
mov
pop
sub
fist
xchg
arpl
in
cmps
add
inc
adc
ds
add
sbb
lea
dec
mov
aam
inc
mov
and
jmp
daa
scas
addr16
jmp
mov
jle
test
inc
bound
add
js
xchg
add
add
adc
out
pop
pop
sbb
dec
or
xchg
fist
fld
retf
cld
cmp
add
loope
mov
stos
mov
adc
push
das
xor
movs
iret
mov
in
outs
jnp
ret
mov
xchg
jp
inc
xchg
popf
test
pop
shl
sub
test
arpl
(bad)
push
rcr
pop
sbb
add
adc
ss
inc
ds
mov
stos
fwait
cmp
sub
rcpps
ds
sub
lods
outs
adc
and
cmc
pop
clc
int
aam
inc
(bad)
push
icebp
lahf
mov
push
sbb
lock
sbb
pop
gs
inc
xchg
mov
aad
shl
shr
or
sbb
sbb
retf
xor
add
or
cli
or
push
mov
not
push
mov
mov
inc
iret
inc
sub
sub
xchg
pop
add
std
dec
push
(bad)
inc
or
cwde
leave
mov
out
popa
xlat
xchg
icebp
mov
mov
jb
add
xchg
enter
loop
dec
ds
cs
xchg
sub
jmp
sub
or
push
cwde
fcomi
test
and
aas
cmp
push
das
sbb
jp
adc
or
ret
or
add
mov
sti
sbb
xchg
adc
ror
mov
jp
sahf
push
jp
aam
cmp
push
inc
xchg
hlt
mov
jno
xchg
out
mov
nop
and
loop
jo
push
or
mov
jp
inc
lahf
or
sbb
pop
xor
daa
js
jg
xor
add
icebp
stos
loop
adc
nop
push
adc
ds
mov
loopne
xchg
fnsave
pop
sub
lds
cwde
add
xchg
jbe
sbb
sbb
cli
les
out
and
out
cmps
stos
(bad)
(bad)
and
stos
and
fsubp
scas
in
popf
nop
sub
jo
ficom
retf
cs
imul
js
out
pop
pop
push
into
pop
pop
sub
jmp
(bad)
jl
xor
push
adc
or
adc
jmp
ss
adc
and
aad
in
xor
jae
push
(bad)
pop
xor
fyl2xp1
sti
scas
pop
loop
(bad)
in
jnp
sbb
mov
push
cmp
xor
std
pop
test
mov
ret
loopne
or
jno
cmp
pop
into
bound
popf
ror
pop
jle
fdiv
gs
stos
ins
scas
mov
je
loope
les
into
mov
adc
jbe
mov
aas
mov
fisub
xor
lods
out
rcl
ret
push
inc
repz
lea
jnp
mov
fs
cld
xor
add
loope
ss
xor
popa
push
or
xchg
das
ins
loop
adc
push
mov
cdq
mov
pop
add
mov
shl
sbb
cld
repnz
or
std
loopne
das
cwde
jl
pop
in
sub
call
add
sbb
out
pop
stc
adc
pusha
(bad)
(bad)
and
mov
cld
or
scas
mov
jb
jmp
rcl
nop
enter
push
sub
fcom
stos
sar
or
fstp
mov
fs
outs
add
mov
rcl
jmp
inc
(bad)
cmp
cmp
sti
cmp
sbb
stos
out
mov
xchg
mov
mov
cmps
mov
cmps
mov
xor
push
(bad)
jns
pop
dec
lahf
inc
push
rcl
sub
popf
aam
and
pop
xor
jbe
lods
or
sub
cmps
into
ret
js
push
jmp
stc
dec
and
lea
sbb
jbe
dec
xor
std
outs
shl
pop
into
inc
jmp
sar
fidivr
or
mov
jl
cmc
sbb
fcomi
adc
or
in
out
inc
ins
or
sub
xor
imul
xchg
int
add
fsincos
inc
test
jl
cmp
add
loopne
pop
sub
repz
popa
pop
shl
push
cmp
sub
or
add
mov
or
test
push
xchg
sub
(bad)
sub
lods
inc
lock
adc
add
xor
sub
mov
and
mov
ins
xor
ror
enter
cmps
je
xchg
push
jmp
nop
xor
pop
loop
mov
cmp
inc
mov
enter
test
je
cmc
cmp
je
jecxz
push
imul
pusha
es
or
adc
xor
scas
es
bound
ja
sti
sbb
into
jae
and
(bad)
call
cli
push
retf
pop
mov
jbe
pop
pop
test
jle
(bad)
push
or
leave
jae
aas
ret
shl
not
mov
cmp
cmp
inc
mov
mov
mov
pop
jp
adc
mov
xor
sbb
enter
gs
scas
ins
add
pusha
dec
pop
adc
inc
ins
push
sti
push
dec
(bad)
les
imul
out
into
js
cwde
sub
mov
mov
dec
fadd
pop
jo
mov
mov
std
or
pop
jo
fist
fisttp
ins
mov
aad
xor
add
inc
fs
or
mov
addr16
push
adc
fst
gs
jle
cmc
imul
hlt
gs
add
inc
movs
mov
fdivr
push
jmp
push
movs
inc
add
add
frstor
mov
pop
imul
pop
cmp
add
xor
mov
mov
popf
or
js
inc
out
xchg
scas
(bad)
xchg
enter
fstp
jb
dec
ss
adc
xor
in
pop
adc
pop
sbb
js
fcmovu
not
mov
sbb
sub
gs
xchg
jb
retf
test
push
movs
lds
fdiv
sbb
mov
pop
shl
fild
loop
sbb
dec
mov
cmp
pop
cmc
inc
retf
sub
cmps
(bad)
lahf
outs
pusha
hlt
(bad)
ins
loop
adc
(bad)
lods
push
xchg
push
cmp
neg
add
xchg
jp
addr16
bound
mov
fs
lods
add
aaa
pop
aad
stos
or
in
(bad)
(bad)
add
mov
ja
dec
stc
fsub
iret
icebp
jmp
mov
xchg
adc
pop
loopne
fadd
push
sar
sahf
lods
pop
mov
mov
xchg
adc
jne
lods
dec
imul
loopne
shr
or
imul
icebp
and
fdiv
or
scas
sbb
sbb
mov
jae
push
cld
mov
mov
dec
jns
movs
mov
bound
fcom
out
jge
sbb
xchg
xchg
or
aad
sub
(bad)
cmc
xchg
jne
mov
mov
imul
scas
sbb
mov
inc
xor
mov
mov
retf
cli
or
in
mov
mov
out
in
pushf
scas
mov
lea
inc
jne
mov
adc
jo
aam
add
(bad)
jae
sbb
inc
shr
adc
iret
jp
mov
mov
in
pop
jb
push
adc
add
jne
add
ret
jle
mov
lea
pop
pop
mov
xor
mov
lea
repnz
or
iret
pop
mov
mov
not
sbb
into
bound
add
arpl
cmp
bound
(bad)
jnp
adc
inc
mov
pop
inc
scas
push
loope
retf
add
and
jle
inc
loope
js
xor
adc
jmp
mov
add
push
shl
dec
mov
mov
mov
outs
inc
adc
lea
aam
jecxz
imul
xlat
pop
call
ret
cmc
jle
outs
repnz
xor
out
xchg
loopne
pop
add
push
xchg
scas
push
sbb
cs
stc
add
pop
inc
xor
fcomi
sbb
retf
in
sti
fs
inc
aas
add
dec
jg
sbb
pop
int
pop
mov
mov
call
lods
xor
out
xchg
jno
mov
frndint
mov
mov
jmp
mov
dec
pop
and
cmps
inc
push
leave
lods
jl
fimul
sub
outs
pop
ins
adc
out
repz
mov
cmp
popa
inc
mov
repz
in
xor
out
icebp
pop
nop
add
and
jns
cld
push
mov
mov
scas
test
cmp
xchg
cwde
inc
mov
jmp
adc
dec
cli
clc
pop
sbb
inc
pusha
sbb
inc
sub
pop
or
cdq
add
or
jbe
sub
shl
push
test
enter
sbb
push
aaa
and
pop
mov
mov
mov
cwde
jmp
ins
cmps
pop
mov
es
cli
or
test
mul
cmp
(bad)
adc
movs
cmp
mov
mov
or
pop
enter
imul
jno
mov
ja
xchg
call
pop
aam
outs
icebp
gs
retf
jno
fwait
or
arpl
xor
push
ins
cmp
stos
repnz
cmp
pcmpgtw
or
sbb
jmp
in
and
scas
mov
loopne
dec
test
inc
arpl
sub
sbb
mov
je
(bad)
push
shl
mov
in
adc
pop
jnp
lods
xor
mov
std
dec
and
mov
mov
loop
aaa
xchg
sub
inc
mov
repz
mov
(bad)
fld
and
or
push
mov
sbb
pop
mov
and
icebp
fistp
fmul
stos
ins
inc
and
(bad)
movs
xor
push
add
push
fisub
push
and
shl
sti
pop
cmp
sub
pop
and
icebp
dec
jbe
test
outs
les
pop
retf
clc
push
lahf
fsubr
push
or
ficomp
xor
xlat
sbb
fdivr
loope
out
aam
push
and
xor
mov
sbb
add
mov
outs
pcmpeqw
stc
scas
icebp
xchg
xchg
shl
mov
mov
push
in
adc
lds
cmp
xor
pop
inc
jle
sub
lock
rol
pop
xor
mov
cwde
add
add
int
hlt
les
fsub
cld
pop
inc
movs
lahf
or
push
nop
lock
rcr
adc
add
pop
pop
mov
push
daa
ds
je
mov
lock
jmp
stos
fbld
xchg
jnp
push
push
ficom
stos
clc
push
mov
push
pop
sub
call
cmp
(bad)
mov
mov
and
push
movsx
inc
xor
fimul
jmp
adc
cdq
or
enter
dec
jmp
lahf
sub
mov
call
loop
loop
jb
popf
sub
and
mov
mov
mov
sub
fidivr
adc
sbb
mov
pop
fwait
sub
push
push
push
mov
imul
nop
out
mov
sub
inc
out
jo
mov
jnp
xchg
mov
int
mov
push
(bad)
sub
push
ds
or
xor
cwde
sub
pop
and
scas
mov
push
shl
movs
rcl
or
sbb
jne
mov
ins
and
inc
ss
sub
jmp
rol
xchg
adc
ror
sub
sbb
jnp
inc
pusha
mov
cmp
and
add
(bad)
cmc
mov
jp
test
dec
add
hlt
cmp
pop
std
mov
(bad)
cs
cld
ret
cdq
movs
adc
adc
mov
jb
inc
je
push
mov
cmps
movs
jnp
inc
aam
mov
(bad)
xchg
mov
pop
stc
jmp
sbb
jno
xor
mov
mov
and
jl
shr
jno
stos
push
stos
in
adc
nop
inc
sub
neg
cmp
je
rol
adc
(bad)
(bad)
mov
adc
and
pop
and
leave
sbb
jae
mov
sub
push
pop
and
test
out
xchg
mov
loopne
lods
pushf
in
shr
mov
mov
sub
or
xor
cmp
xchg
mov
sti
add
inc
cmp
stos
out
mov
xor
imul
fcmovnu
cs
fld1
or
sbb
ror
cli
es
fstp
cmc
jae
pop
popa
cmp
push
iret
stos
inc
aad
inc
sbb
ins
push
pop
rcr
popa
cmp
call
jo
and
addr16
or
retf
and
cmc
push
ins
ret
pop
outs
jmp
int3
js
jecxz
ins
xrelease
jne
repnz
sbb
cmc
test
jp
push
add
xchg
(bad)
and
ss
fs
test
(bad)
loopne
sbb
xlat
(bad)
outs
inc
shl
jge
nop
into
mov
sahf
cmps
xchg
ds
xchg
fs
dec
sbb
or
jp
icebp
inc
inc
int3
imul
push
mov
lods
sub
mov
ss
sbb
mov
bound
(bad)
sub
fdiv
adc
push
shr
call
jae
xor
push
mov
cli
lea
out
loopne
fidiv
fld
lods
lods
gs
les
mov
sub
jnp
push
pop
push
add
idiv
pop
mov
add
cmp
jb
aas
iret
push
xchg
aad
push
les
inc
jae
mov
daa
push
(bad)
loop
mov
add
out
test
xchg
dec
imul
jo
jmp
inc
inc
push
into
(bad)
adc
inc
inc
cwde
xor
sbb
adc
pop
aas
inc
fdivr
(bad)
xchg
or
fxch
adc
xchg
sti
ins
lahf
sbb
mov
(bad)
xor
and
jmp
outs
pop
sbb
sub
mov
ins
or
mov
jo
gs
push
sbb
rcl
mov
call
iret
enter
mov
xchg
rol
stos
sahf
cdq
(bad)
xchg
sar
inc
pop
int3
loope
bound
sahf
call
mov
(bad)
mov
pop
int
sub
js
jle
xor
popf
arpl
cs
push
mov
fcomp
inc
adc
loopne
adc
aas
jecxz
xor
jge
inc
sub
mov
or
xchg
add
mov
pop
cli
adc
cmps
jne
sbb
daa
retf
scas
inc
mov
dec
add
jg
or
call
xchg
(bad)
adc
pop
enter
pop
xchg
pusha
add
pop
xor
mov
ds
in
jno
and
aas
pop
pop
das
je
push
jne
cmps
out
push
fnsetpm(287
mov
pop
fst
or
leave
dec
cs
aad
push
or
(bad)
mov
jecxz
stos
mov
out
ret
enter
pop
aam
xor
fadd
dec
push
out
dec
leave
das
fidiv
pop
add
cmp
add
jno
dec
ds
jnp
mov
pusha
aas
cmp
(bad)
enter
inc
pop
dec
and
mov
mov
ja
push
fimul
pop
sahf
and
dec
stos
push
jge
jecxz
fistp
cmp
scas
sti
sbb
cmps
stos
dec
ss
leave
(bad)
mov
pop
test
sar
dec
mov
cdq
jne
scas
ret
jnp
ins
mov
push
pop
das
or
mov
imul
mov
jecxz
pop
loopne
adc
xor
mov
adc
ret
push
les
sbb
into
(bad)
jb
movs
rcr
pushf
cmps
outs
mov
outs
(bad)
js
cmp
jmp
js
test
add
cmp
xchg
(bad)
outs
or
cdq
dec
mov
inc
aas
sbb
inc
push
xchg
dec
dec
jmp
in
push
std
lods
or
jns
xchg
fsub
pop
sub
mov
cmc
cmp
push
push
pushf
pop
push
or
sbb
and
hlt
mul
data16
dec
jno
push
out
sahf
push
(bad)
and
mov
fwait
jmp
pop
repnz
ret
sub
ror
out
pop
pop
pop
int3
ss
xchg
ret
xchg
inc
(bad)
mov
mov
mov
pushf
fadd
hlt
test
leave
aas
jno
bound
cmps
push
retf
xchg
scas
pop
into
cmp
inc
(bad)
and
push
ins
cmp
sbb
xor
test
std
repnz
cmp
jns
mul
cmp
mov
cmps
jmp
xchg
out
push
pop
jmp
push
shl
pop
and
das
xchg
inc
xor
rcr
sub
pop
inc
mov
js
loope
dec
mov
dec
add
cdq
lods
fs
repz
xor
iret
es
dec
push
mov
xor
inc
jg
stos
jl
mov
nop
gs
ficomp
xlat
out
mov
jae
push
ret
or
xor
aad
(bad)
mov
xlat
imul
mov
pop
push
stos
data16
jmp
sbb
mov
fmul
jb
cdq
mov
icebp
cs
dec
daa
int
jle
call
cs
xchg
loopne
das
dec
dec
inc
push
scas
pushf
cmp
shr
mov
pop
sub
stos
imul
pusha
jp
test
xor
xor
sub
in
ror
add
push
loope
aaa
jmp
add
aam
in
cs
mov
cmp
xchg
retf
add
daa
dec
rcr
scas
mov
cmp
(bad)
loopne
cmp
push
jl
pop
pop
mov
arpl
gs
out
pop
mov
xchg
xchg
stc
fsubp
into
enter
stc
mov
rcr
das
push
(bad)
and
add
ror
les
out
inc
add
jne
in
iret
push
jg
retf
push
mov
push
sar
bnd
add
add
sahf
mov
test
les
sub
xchg
(bad)
mov
test
js
fst
xlat
lods
jne
loop
jge
jns
aad
lds
inc
mul
dec
pushf
rol
dec
popf
mov
push
xcrypt-ofb
cmps
outs
(bad)
fstp
leave
add
pop
inc
jno
push
sub
jl
in
addr16
inc
cmp
push
test
sub
shr
xchg
pop
loop
jae
cmp
les
data16
push
cmps
sub
dec
sar
popf
daa
mov
sbb
xlat
sbb
lahf
ss
dec
adc
in
adc
xchg
movs
enter
dec
sbb
mov
rcl
mov
es
xor
rol
retf
fst
pop
sub
ds
mov
push
inc
mov
xor
pop
cs
xlat
iret
clc
lods
rol
fs
xor
xchg
dec
iret
test
movs
sbb
xchg
test
sahf
iret
ss
jmp
out
pop
bound
stos
js
dec
mov
push
mov
cmp
or
xor
or
test
repnz
inc
mov
push
adc
loopne
loopne
mov
pop
jno
aaa
cmp
cld
or
imul
pop
sub
mov
adc
cmps
mov
icebp
dec
cwde
ins
push
fmul
sub
lahf
pop
je
mov
push
pop
pop
(bad)
aaa
loopne
leave
jno
push
fild
out
scas
xor
jne
(bad)
aad
test
enter
or
sub
xor
mov
(bad)
outs
pop
cmp
test
sar
movs
add
push
and
je
add
sar
jle
add
(bad)
enter
jbe
ror
das
mov
out
push
jbe
or
daa
xor
imul
leave
push
jmp
out
pop
adc
(bad)
fisub
daa
push
sbb
cmp
jle
dec
bound
push
push
pop
jl
sub
gs
dec
fwait
cmp
jb
pop
clc
pop
adc
mov
push
sub
loop
inc
mov
sbb
jp
xchg
daa
std
jno
sub
push
test
not
cmc
xchg
in
dec
scas
and
hlt
dec
retf
inc
xchg
call
les
sbb
nop
cmp
mov
sbb
lock
mov
inc
mov
fistp
mov
aas
dec
jns
pop
push
mov
stc
dec
sub
mov
dec
fld
shr
mov
add
lods
lock
(bad)
retf
xlat
push
lea
mov
xchg
es
and
pop
rcr
mov
mov
or
cvtpi2ps
scas
pop
cld
xchg
sbb
pop
add
arpl
in
shl
das
mov
stc
cwde
pop
test
xor
mov
pop
out
add
mov
das
fneni(8087
loop
xor
adc
shl
xor
scas
gs
shr
retf
inc
(bad)
or
lea
(bad)
loope
pop
out
int3
sbb
retf
ds
sahf
in
sbb
jmp
sbb
xchg
movs
lds
inc
jp
inc
nop
mov
xchg
jl
dec
mov
add
pop
add
xchg
sahf
jle
jb
and
in
scas
pop
and
xor
add
or
stc
sbb
sub
sbb
mov
mov
fiadd
sbb
push
out
scas
sub
cld
xchg
and
add
aad
and
cmp
call
sahf
loopne
ds
pusha
stc
stos
cmp
xor
or
pop
mov
push
ror
jmp
mov
cmp
mov
sar
imul
in
pop
hlt
cli
fsub
scas
or
jo
pop
jmp
xor
sub
mov
cmp
(bad)
push
test
or
or
jg
xlat
shr
test
push
inc
scas
lods
std
cmp
push
cdq
ror
xchg
add
sub
fdivr
in
lahf
sub
cdq
mov
call
mov
in
push
icebp
push
ja
ret
mov
adc
or
or
ret
jle
leave
scas
mov
or
mov
cli
into
and
sub
jmp
ret
inc
sub
es
stc
add
sbb
stc
sti
repz
add
adc
rcr
sub
push
stos
mov
hlt
fwait
dec
xchg
mov
and
push
push
mov
fiadd
push
call
jae
xor
mov
sub
into
sbb
in
shl
js
jns
xchg
sub
pop
push
jl
lods
sbb
dec
inc
lods
cli
loope
inc
mov
lock
dec
mov
stos
out
dec
test
movs
inc
stos
inc
xlat
jl
(bad)
xor
pop
imul
cwde
mov
xchg
push
ins
xchg
mov
push
ds
ret
mov
sahf
int
fstp
movs
jl
ins
jge
sub
rcl
ins
cmp
hlt
pop
sahf
push
adc
inc
xor
mov
mov
retf
mov
sahf
and
mov
dec
cmp
jecxz
mov
ins
popf
jle
jmp
or
push
push
xchg
lods
adc
and
call
test
xchg
sub
call
dec
push
inc
fs
and
jmp
scas
es
jae
or
std
xchg
mov
lods
sbb
push
lods
jne
iret
cmp
lods
jne
cmp
pop
je
adc
mov
add
ins
jbe
call
cmps
mov
ja
rol
in
icebp
add
cmp
retf
cmp
jbe
add
ins
imul
rcl
sti
jp
daa
push
(bad)
in
add
xlat
push
push
or
call
jnp
dec
xchg
(bad)
sub
cmp
mov
inc
cwde
sub
movs
shr
jmp
outs
retf
or
movs
and
add
stos
loop
neg
fstp
dec
xor
popa
adc
push
mov
dec
mov
into
mov
jecxz
push
inc
aaa
ror
jne
or
loop
mov
(bad)
add
imul
push
(bad)
enter
mov
outs
rcr
push
scas
retf
inc
cmp
pmuludq
cld
or
hlt
sbb
xchg
jae
pop
mov
lds
js
(bad)
or
cmp
rcr
cmp
jecxz
int
dec
es
mov
xchg
xor
ins
call
outs
fstp
fwait
xchg
aad
mov
call
scas
push
test
mov
pop
ficom
(bad)
inc
cmp
push
inc
mov
pop
nop
call
mov
out
push
aam
sub
dec
adc
das
aad
test
out
popa
and
xchg
imul
lods
mov
mov
pop
mov
fstp
imul
rcl
jo
inc
sbb
pop
mov
xor
sub
(bad)
xchg
(bad)
push
(bad)
mov
loop
lods
enter
pushf
ror
push
lidtd
xchg
jmp
out
cmp
stos
adc
pusha
je
enter
test
fstp
sbb
lds
sbb
jmp
das
pop
enter
add
or
cld
xlat
pop
(bad)
aas
mov
sbb
lods
sub
mov
mov
in
das
sub
sbb
sbb
push
push
sahf
cmc
fdivr
adc
(bad)
cs
push
and
es
lods
jp
add
mov
pop
xchg
sub
add
xor
mov
shl
(bad)
jbe
into
xor
aam
pop
push
push
addr16
mov
(bad)
xor
rcl
add
add
sahf
mov
leave
pop
bnd
mov
adc
push
jne
jl
pop
fdivr
mov
inc
add
adc
pop
push
or
xor
sub
sbb
mov
stos
push
or
cwde
jmp
xchg
push
mov
movs
add
mov
clc
lods
popa
mov
punpckhbw
jle
mov
inc
push
sbb
jno
out
call
and
loope
in
mov
jmp
mov
sbb
popa
push
mov
adc
stc
fucomi
push
cmp
adc
iret
iret
clc
jp
mov
pusha
scas
jl
in
sub
push
retf
loopne
sbb
test
inc
fistp
cli
je
cmp
and
pop
push
jns
xchg
xchg
ja
jmp
pop
inc
mov
dec
sub
cmps
add
fist
pop
push
sub
aam
repnz
sub
pop
jcxz
push
stos
jmp
sahf
ds
fmul
std
test
in
mov
mov
hlt
lods
movs
sub
xchg
sar
mov
das
movs
pop
fldcw
xchg
mov
sbb
mov
or
mov
inc
pusha
lds
fst
jnp
mov
adc
mov
fdiv
jge
inc
sbb
push
jmp
cmp
add
push
cmp
loop
mov
lock
jle
xchg
fld
push
inc
mov
add
aam
xchg
inc
inc
xchg
mov
pop
loopne
push
(bad)
add
fsub
lods
fimul
dec
mov
call
ret
xchg
sub
mov
jecxz
xor
dec
lods
cmp
inc
add
sbb
fwait
push
mov
sub
ret
je
mov
aam
xchg
mov
popa
in
mov
lock
addr16
pop
jle
into
pop
ret
cmps
mov
js
xor
es
sub
cmp
sbb
pusha
or
xor
cdq
inc
ds
mov
ds
mov
rcl
lock
mov
fnstsw
inc
test
hlt
cld
mov
retf
add
push
or
shl
jno
add
icebp
test
sahf
ss
and
push
push
cmp
dec
inc
scas
sbb
out
shl
pop
add
and
mov
or
nop
dec
nop
mul
xlat
mov
ss
jp
ins
add
(bad)
out
in
sar
push
sbb
inc
or
(bad)
ror
jp
add
dec
nop
call
enter
mov
mov
std
int3
mov
imul
cmc
or
(bad)
out
mov
imul
adc
jl
(bad)
sbb
je
and
adc
das
pop
and
fstp
cmp
fsub
add
cmp
stos
pop
test
pop
scas
mov
out
(bad)
out
fimul
xchg
sbb
(bad)
lods
push
dec
(bad)
arpl
xor
mov
add
xchg
cwde
or
adc
mov
adc
dec
je
sub
leave
and
imul
push
hlt
aam
into
loope
mov
je
ja
pop
mov
or
repnz
inc
sar
ja
mov
dec
in
inc
(bad)
jae
jecxz
into
push
or
fstp
fbstp
jo
jmp
mov
fdiv
(bad)
sub
fimul
fs
or
dec
pop
daa
out
mov
add
mov
sbb
mov
cdq
sbb
xor
scas
pushf
cmc
lgdtd
inc
call
and
ds
sub
jbe
mov
shr
jns
dec
sub
mov
mov
xor
sub
dec
mov
in
ror
jmp
fs
ss
sahf
rol
je
and
mov
dec
out
push
rcl
ds
sub
jmp
cvttps2pi
movs
push
ja
add
call
aam
ror
push
cs
adc
fistp
push
fwait
leave
pop
xchg
es
repnz
cmp
xchg
sahf
sbb
out
ficomp
repnz
inc
repnz
and
cmps
cld
jae
jbe
jns
shl
(bad)
or
cmp
xchg
in
lods
sub
pop
inc
dec
enter
outs
cmp
xor
int3
inc
cs
stc
fisttp
in
mov
xor
mov
je
ret
inc
inc
pushf
mov
ds
and
stc
daa
popf
lods
jle
pop
(bad)
xor
lds
sbb
cmp
rol
push
push
loopne
cdq
and
cs
inc
xchg
int
addr16
rcr
int
neg
loop
jl
xor
adc
jne
popa
xor
ret
mov
arpl
add
or
stos
rcl
cmc
lahf
xchg
push
mov
cmp
mov
les
sbb
push
dec
(bad)
pop
mov
mov
loop
or
inc
test
inc
sti
xor
popf
pop
mov
cmps
sti
sub
fadd
dec
aad
loop
add
sub
xor
loope
dec
jno
pusha
and
pusha
sahf
cmp
jns
adc
retf
sbb
mov
int
mov
cmp
cmps
jmp
mov
ret
cld
jmp
or
xchg
add
retf
cld
mov
pop
popa
int
push
lds
xlat
mov
pop
lea
jns
push
aas
rol
mov
movs
inc
popa
adc
jbe
mov
(bad)
hlt
stos
or
xchg
pop
add
jp
(bad)
or
and
sub
fdiv
sahf
push
jge
or
data16
pop
imul
push
outs
dec
jnp
cdq
lahf
or
and
push
test
xor
std
push
js
pop
out
jae
pop
add
mov
sbb
pop
add
xlat
mov
movs
mov
mov
(bad)
mov
popa
mov
mov
fdivr
xor
ss
(bad)
sti
test
push
pop
ret
cld
iret
(bad)
enter
sbb
sub
inc
and
inc
and
inc
arpl
xchg
cmp
fcmovb
js
inc
call
rcl
sub
sub
scas
fadd
push
aaa
add
adc
jbe
cs
setbe
sahf
lds
mov
fisttp
jne
mov
sub
movs
je
imul
push
ja
aaa
retf
inc
or
shl
cdq
mov
shl
add
xchg
jmp
pop
adc
or
sub
pop
das
jb
sbb
push
jl
pop
jle
add
mov
in
inc
sbb
pop
mov
xchg
out
jmp
mov
scas
je
or
aaa
data16
xor
gs
les
arpl
xchg
or
inc
aam
mov
jge
mov
jns
jg
mov
aam
adc
jg
jl
inc
daa
lea
adc
inc
push
push
aad
mov
dec
js
cs
imul
cs
pop
loop
cdq
pop
pop
sbb
dec
add
lds
add
stos
jle
dec
sti
xchg
outs
inc
pushf
jmp
sbb
pop
call
stos
or
sbb
lahf
pop
pop
adc
dec
jle
cs
mov
ss
pop
jle
mov
leave
out
(bad)
loopne
xor
test
cmps
xchg
mov
xchg
sbb
(bad)
(bad)
jo
xor
mov
jge
lea
pop
cld
jg
sbb
push
neg
or
mov
aas
bound
mov
add
adc
lahf
mov
push
xor
lods
mov
adc
push
push
mov
or
outs
xor
inc
(bad)
xor
sbb
arpl
push
je
out
dec
cmps
cmc
mov
jbe
mov
ss
xchg
lods
xor
(bad)
icebp
repnz
inc
pop
daa
lods
mov
xchg
add
or
jmp
shr
(bad)
fcomp
shl
(bad)
and
pop
in
stos
dec
pusha
dec
rol
sahf
loop
mov
popa
and
neg
movs
rcr
jl
cmps
test
scas
add
iret
mov
mov
pop
xor
or
add
adc
mov
dec
lods
out
adc
sahf
pop
sub
leave
and
push
push
dec
jne
cwde
sub
sbb
dec
add
mov
aad
clc
sbb
es
cmp
idiv
das
call
push
test
test
cmp
jle
xchg
in
nop
cmps
xor
adc
xchg
nop
ret
pop
(bad)
pop
(bad)
push
aad
xor
in
push
cmps
add
(bad)
push
mov
inc
fcom
nop
jnp
clc
in
dec
in
mov
jle
mov
xor
mov
pushf
loopne
add
lds
std
mov
push
in
rcl
cwde
push
mov
and
clc
iret
and
pop
sub
mov
cmp
fadd
dec
stos
in
push
mov
(bad)
daa
loopne
sbb
cmp
fild
pushf
mov
lock
mov
inc
aaa
daa
clc
adc
jbe
ds
pop
jecxz
dec
sbb
es
hlt
cld
cwde
shr
push
int3
xor
or
xchg
pop
mov
imul
test
mov
leave
ds
imul
dec
mov
lock
icebp
add
repz
in
inc
ja
(bad)
and
lea
int3
sub
jno
inc
std
xor
outs
dec
jns
or
push
int3
jbe
jo
lock
into
test
mov
mov
inc
fxch
adc
sbb
xor
sub
mov
aad
inc
add
rcl
mov
inc
(bad)
sbb
push
mov
test
sub
cmp
push
mov
sahf
lahf
inc
retf
or
jg
scas
imul
loopne
mov
fidivr
bound
pop
xchg
rcr
xor
sbb
jne
call
sub
mov
xchg
xor
sub
or
lock
push
mov
dec
mov
out
xor
sub
imul
push
or
mov
and
lods
push
jl
test
loop
scas
fisubr
or
into
or
or
push
daa
out
inc
jmp
xchg
inc
movs
mov
pop
stc
dec
xchg
dec
cmp
clc
sbb
call
(bad)
lock
pop
mov
jne
test
xor
mov
pop
daa
push
loop
mov
dec
sbb
pop
sub
jmp
and
fsubrp
pop
push
je
add
fisubr
mov
and
pop
and
sub
or
test
or
mov
cmps
pop
fdiv
cmps
(bad)
cld
mov
sub
mov
and
test
mov
push
push
das
ins
xor
fdiv
jns
aad
cdq
push
xchg
pop
lods
(bad)
in
dec
jae
jecxz
push
adc
mov
call
(bad)
jbe
std
cmp
popa
(bad)
test
push
dec
cmp
jecxz
stos
jecxz
jne
pop
inc
out
mov
and
xchg
xchg
lock
push
fidivr
popa
cdq
cmp
aam
movs
inc
push
add
inc
adc
cmp
stos
pop
ss
arpl
or
icebp
rcl
xchg
push
and
jecxz
in
test
push
fcomp
push
test
ffree
sub
out
ins
mov
nop
pop
mov
mov
sbb
inc
sub
jo
scas
retf
enter
cmp
sub
and
push
fucomip
repz
cmp
xor
ror
push
lods
retf
pop
push
cmc
lahf
jmp
adc
icebp
inc
or
sbb
lods
xor
sub
in
inc
fadd
xchg
inc
(bad)
adc
popf
dec
mov
out
inc
fisttp
dec
pusha
test
stos
pop
(bad)
shr
inc
not
xchg
xchg
xchg
sub
movs
sbb
bound
adc
mov
mov
dec
lods
scas
dec
fisttp
cmps
ficomp
mov
pop
sbb
xchg
test
enter
dec
mov
test
cld
xchg
xor
sbb
adc
jge
mov
mov
pop
mov
imul
and
fist
jp
push
fsubr
jb
sub
dec
adc
or
les
jb
xchg
icebp
cmp
sub
push
cmps
push
test
mov
and
jle
xchg
pop
lea
rcr
dec
imul
xor
mov
adc
or
adc
xchg
add
rol
rol
je
mov
adc
ret
add
push
dec
or
jmp
aam
push
popf
test
cld
sbb
leave
sbb
outs
fisttp
fcomp
mov
hlt
fadd
push
ret
out
inc
lahf
cmc
pop
cmp
push
sub
shl
fisttp
retf
ret
xor
cld
test
jne
push
cmps
jecxz
(bad)
imul
arpl
cmp
int
into
cmp
retf
xlat
cdq
push
inc
scas
xchg
(bad)
cdq
mov
mov
pop
shl
outs
push
and
pop
mov
jmp
mov
cdq
popf
adc
inc
xchg
xor
sub
add
push
bound
cld
xchg
fisttp
fidivr
repz
repz
addr16
fisttp
retf
lock
lds
pop
dec
xlat
std
add
imul
inc
fs
cmp
div
push
mov
ror
xchg
sbb
cmp
sub
outs
mov
sub
cmp
pop
fwait
jb
retf
test
add
ins
test
mov
fisubr
and
cmps
dec
and
imul
add
shl
inc
xchg
inc
add
and
out
xor
out
add
xchg
cmc
sahf
dec
loope
and
adc
fcom
mov
dec
jl
test
or
loopne
jge
fidiv
inc
in
inc
int
out
inc
mov
mov
sbb
xchg
mov
js
xor
stos
test
jge
mov
xlat
test
call
ret
js
and
mov
rol
enter
xchg
mov
and
mov
push
mov
inc
fsubr
mov
pop
fstp
mov
xor
movq
hlt
sbb
shl
outs
and
test
mov
ficom
xchg
ja
mov
mov
adc
mov
inc
pushf
push
in
repz
dec
sbb
cmp
dec
vshufps
inc
dec
arpl
jl
add
xchg
shr
mov
fwait
int
loop
mov
adc
jg
movs
sahf
outs
enter
and
dec
inc
ins
mov
mov
data16
xor
push
and
aas
mov
sub
mov
cmp
(bad)
hlt
stos
not
xchg
lods
outs
jmp
mov
xor
mov
adc
div
stos
push
lods
call
jae
push
and
sahf
mov
call
mov
std
jp
leave
xor
add
mov
lock
repz
iret
cmc
stc
imul
sbb
enter
popa
xor
push
jg
cmp
addr16
int
adc
add
push
add
fisub
pop
lds
and
test
fs
xchg
mov
popf
pop
int3
xchg
push
les
adc
dec
mov
sar
mov
or
sbb
pop
cmp
fistp
adc
mov
adc
jle
cli
mov
xchg
nop
mov
mov
das
rcl
mov
push
push
pop
aas
mov
add
mov
test
push
xor
add
std
stos
push
stos
mov
out
sahf
(bad)
fwait
dec
push
inc
shl
enter
int
sub
retf
inc
mov
ret
mov
popf
adc
push
inc
cmp
test
repnz
adc
sar
cli
adc
inc
addr16
dec
cs
cld
(bad)
push
jae
pop
mov
jo
xlat
das
lea
pop
aad
aad
leave
stc
sub
jno
adc
cmp
clc
cld
retf
int
cmp
push
or
dec
xor
cmp
push
jmp
sahf
dec
popf
dec
movs
xchg
pop
jns
inc
xchg
add
cmp
imul
inc
aaa
inc
mov
or
dec
dec
cld
mov
lea
aam
idiv
stc
xchg
mov
dec
popf
test
dec
lock
or
sahf
adc
push
sub
jecxz
and
fnsave
mov
mov
jecxz
in
sbb
xlat
pop
stos
call
mov
stos
cmp
dec
pop
jb
mul
sub
and
xor
jl
imul
lods
(bad)
in
scas
adc
jnp
call
icebp
pop
shl
xor
dec
sbb
pop
and
out
xor
xchg
inc
inc
ja
addr16
xor
dec
jecxz
inc
mov
push
movs
cld
int
sbb
add
ret
cmps
test
pop
mov
xchg
stos
stc
xor
daa
ins
xchg
jae
mov
dec
mov
adc
leave
test
or
jne
fsub
cmc
movs
pop
aam
fdivr
fucom
out
dec
cmp
in
inc
mov
pop
sar
push
fnstsw
jnp
push
stos
(bad)
mov
xor
mov
test
mov
mov
and
mov
pop
sar
sub
cmp
mov
cwde
mov
cdq
lock
jmp
out
ret
inc
(bad)
sti
xor
sub
in
jp
inc
(bad)
sbb
stc
pop
in
je
pop
sbb
mov
lahf
mov
ss
scas
mov
pop
mov
cmovne
mov
ficomp
mov
and
fimul
out
jno
pop
lea
add
in
frstor
xchg
sahf
jp
mov
scas
imul
mov
jns
gs
rol
xor
jae
jne
sub
cmps
or
push
and
out
xlat
scas
out
pop
cmps
out
cs
fxch
inc
xchg
jmp
fild
je
jmp
dec
(bad)
rcr
pop
jle
or
ds
add
outs
xchg
jmp
fcmovu
push
js
sub
sub
ret
mov
jecxz
sahf
sar
dec
test
xlat
inc
into
test
cmp
sbb
imul
mov
and
lock
imul
fstp
xor
mov
inc
stos
jb
xchg
jns
(bad)
cld
sub
or
mov
iret
bound
sub
sbb
cmp
loopne
mov
and
fdivr
inc
push
loope
xchg
dec
bswap
(bad)
mov
dec
xchg
dec
add
cmp
jns
ret
mov
mov
push
xchg
(bad)
stos
inc
lock
imul
sub
dec
jbe
and
sbb
retf
xchg
adc
out
repz
clc
mov
ins
dec
imul
mov
inc
or
push
out
leave
test
xchg
popa
xchg
popf
(bad)
cli
adc
ins
repnz
pop
(bad)
out
shl
push
mov
pushf
xor
mov
sub
cmps
inc
mov
sub
mov
jp
aam
push
push
lock
int3
mov
jmp
xchg
pop
shr
movs
mov
jmp
int3
and
cmc
bound
fs
fs
pop
cdq
push
push
ss
mov
adc
mov
inc
mov
and
mov
or
retf
cmp
sti
and
shl
ret
pop
sub
xchg
mov
cmp
xor
into
in
or
pop
mov
stos
call
xchg
(bad)
jb
push
rol
outs
iret
xchg
ror
jmp
ja
fadd
mov
pop
ins
pop
dec
mov
aas
push
rcr
sub
xor
adc
pop
out
inc
in
fidivr
sbb
mov
sti
dec
ret
nop
popf
push
out
inc
push
clc
ja
sub
outs
or
inc
addr16
cld
frndint
mov
rcr
(bad)
jmp
test
sbb
adc
push
(bad)
xor
movs
ins
jo
adc
dec
aad
rol
xchg
test
mov
mov
loop
das
aaa
inc
adc
mov
out
or
mov
xor
test
dec
das
cmc
adc
and
pusha
mov
out
test
mov
push
sahf
mov
mov
test
cwde
pop
xchg
rcr
aam
data16
jl
jb
dec
lea
adc
mov
data16
mov
jmp
sub
dec
mov
call
repnz
xchg
add
cmp
jmp
pop
je
cld
push
add
(bad)
outs
in
or
mov
xor
jg
test
dec
shl
and
or
or
scas
mov
es
dec
xchg
scas
xchg
arpl
jp
mov
push
outs
pusha
and
mov
dec
dec
pop
adc
jnp
aaa
add
adc
outs
mov
lock
add
aad
in
xor
nop
ss
add
mov
xlat
or
jns
push
mov
adc
inc
mov
lock
cmc
mov
cmp
and
pop
(bad)
shr
inc
stc
dec
jbe
fcmovnu
out
dec
inc
shl
pop
xor
out
dec
mov
pop
mov
adc
mov
les
iret
pop
xor
xor
lock
popa
inc
mov
repnz
sub
xchg
jae
or
jmp
cmp
mov
test
hlt
dec
call
inc
stc
lds
or
int
aam
lea
and
out
jne
xchg
sub
test
(bad)
hlt
inc
xchg
scas
dec
adc
ins
push
pop
pop
mov
inc
in
and
int3
dec
xor
fstp
iret
adc
das
out
(bad)
scas
push
out
(bad)
(bad)
scas
cs
fsub
in
mov
lods
pop
or
mov
je
mov
fcom
add
mov
cld
jb
pop
cmc
and
pop
ins
mov
cmps
clc
xchg
pop
sub
xchg
mov
mov
(bad)
mov
xchg
fimul
xchg
aad
sbb
in
push
cli
mov
out
or
sahf
xchg
ror
jae
jne
inc
gs
sub
lods
(bad)
or
or
mov
mov
mov
in
and
mov
sub
icebp
adc
cmp
xchg
adc
inc
sysret
aad
jp
outs
rcl
add
loope
cmps
add
aad
inc
arpl
lods
(bad)
adc
leave
push
ins
(bad)
rol
mov
push
gs
arpl
test
sub
repnz
mov
cdq
ins
out
lds
push
clc
call
xchg
test
les
xchg
pusha
mov
shl
cmp
mov
and
xor
out
xor
stos
pop
js
mov
xor
pop
xchg
test
lods
retf
push
sbb
push
pop
dec
imul
mov
jle
jl
or
mov
mov
adc
gs
pop
cmps
mov
inc
mov
mov
xchg
inc
js
icebp
or
popa
and
shl
xchg
lds
dec
out
sbb
out
iret
mov
lods
mov
loop
jnp
jo
cmps
mov
in
add
sbb
stos
and
shl
in
les
pop
fdiv
mov
popa
mov
mov
cwde
pusha
xor
cmps
jp
sbb
inc
and
ds
arpl
mov
xchg
pushf
mov
or
add
mov
rcl
mov
push
xchg
test
push
clc
mov
pop
jb
int3
out
xchg
(bad)
outs
cmps
mov
mov
out
dec
and
cdq
jecxz
dec
dec
adc
cmp
cdq
fsub
mov
enter
adc
mov
sub
in
int3
pop
sub
sti
cld
das
(bad)
fiadd
jg
mov
js
adc
and
shl
pusha
mov
cli
outs
jb
sbb
mov
add
cmp
test
dec
cmp
retf
out
fmul
jge
movs
add
xchg
lods
retf
or
std
jp
inc
pop
or
into
xlat
test
shl
sbb
bnd
aad
fimul
ins
aad
test
cmps
xchg
cli
add
jmp
xchg
push
cld
inc
pop
loope
pop
outs
in
js
cmp
sub
cs
mov
dec
xor
and
push
(bad)
jo
sar
ins
lods
mov
aad
(bad)
repz
jno
dec
in
inc
jle
pop
inc
xchg
out
dec
lods
jb
pop
fstp
jp
mov
(bad)
push
xor
or
and
pushf
jmp
add
sar
call
pop
sbb
pop
push
inc
and
dec
dec
inc
enter
aaa
sbb
sub
pushf
jbe
or
into
(bad)
xchg
mov
call
mov
mov
add
les
add
inc
xor
jge
dec
inc
mov
jle
sbb
ja
out
jge
xor
mov
clc
adc
das
hlt
es
xor
(bad)
jae
inc
or
adc
pop
int3
cmp
stc
test
loopne
in
inc
xchg
dec
in
cmps
ret
inc
mov
cmp
sahf
popf
nop
cmps
leave
les
test
(bad)
loopne
das
cli
push
addr16
gs
cmc
dec
lea
(bad)
fnstcw
lss
jg
test
or
arpl
mov
mov
cmps
fs
mov
sub
sbb
hlt
stos
sti
add
jno
fstp
mov
cld
mov
fwait
adc
dec
jmp
cmp
inc
fxch
push
inc
test
pushf
repz
mov
dec
dec
adc
push
mov
adc
and
in
push
xor
mov
sqrtps
push
add
mov
cld
in
or
lea
push
aam
xor
movs
sahf
mov
inc
pop
retf
out
out
xor
int
movs
inc
add
inc
and
popa
sbb
imul
retf
sbb
in
or
leave
test
out
pop
mov
popf
add
xchg
pop
inc
sub
nop
adc
jne
and
enter
cld
xor
adc
jp
sar
stos
or
mov
iret
cmp
lods
inc
test
int
and
call
addr16
cs
aaa
mov
outs
test
test
lock
fcmovnb
(bad)
and
dec
sbb
sbb
leave
dec
jp
(bad)
scas
fisttp
enter
lods
mov
pusha
jns
and
sbb
add
jns
inc
loop
push
jp
mov
xor
and
ret
push
xor
ins
aam
mov
loope
mov
inc
jle
stc
outs
retfw
cli
mov
mov
push
js
(bad)
dec
cdq
sbb
cmp
scas
xchg
xor
in
adc
aaa
push
jmp
loopne
inc
test
sbb
fs
aam
test
in
inc
cmp
jmp
mov
push
into
loop
adc
imul
sahf
pushf
jns
bound
loope
call
push
sbb
cmps
cmps
mov
jns
out
cli
cld
pop
clc
sbb
lahf
mov
mov
mov
in
mov
push
cmp
inc
rcr
xor
cwde
mov
jmp
je
fdivr
push
jnp
movs
(bad)
cmp
sbb
mov
pop
xchg
adc
inc
idiv
pop
cmps
adc
popf
(bad)
aam
aas
gs
inc
ja
fild
retf
xchg
dec
std
aad
fisubr
hlt
and
pop
cdq
movs
xchg
sbb
in
sub
push
dec
xor
add
inc
loope
addr16
inc
hlt
(bad)
pop
mov
pusha
call
jmp
pop
aam
jne
mov
dec
sub
mov
inc
mov
xchg
cmc
push
pop
push
mov
test
pop
adc
lods
mov
push
lods
in
das
call
and
dec
pop
mov
cmp
mov
push
and
or
les
retf
cmp
cmps
inc
fimul
mov
fisttp
lds
push
aas
test
pop
or
daa
arpl
sub
cli
fs
or
aad
sbb
out
lods
lea
dec
dec
inc
pop
pop
adc
add
retf
and
repz
and
mov
adc
push
sbb
mov
popf
and
or
mov
or
mov
aas
adc
add
lea
cmp
fild
scas
mov
aad
pop
or
cmps
sbb
sub
mov
inc
popf
bound
or
mov
les
cmps
call
mov
dec
add
xlat
push
(bad)
push
test
loopne
inc
sbb
es
xchg
pop
pusha
loope
fsubr
push
jle
shr
fcomp
ret
outs
imul
mov
(bad)
jae
mov
mov
imul
mov
pop
dec
add
xacquire
stos
cmps
les
jb
lea
lock
mov
out
je
sbb
mov
(bad)
ficom
add
or
pop
xchg
hlt
stos
add
pop
int3
dec
or
inc
add
pop
test
mov
cmc
pop
mov
imul
or
cwde
scas
xchg
pop
lock
sar
mov
lods
out
inc
mov
sbb
mov
enter
pop
aas
mov
aaa
movs
into
and
call
or
sbb
pop
cmp
mov
fistp
pop
ret
adc
(bad)
jnp
jno
mov
adc
mov
loope
movs
lods
repnz
jl
sub
ins
xor
jae
mov
cmp
xor
in
xchg
sbb
xchg
mov
sbb
loope
ficom
or
shl
mov
sub
in
retf
xchg
leave
xor
or
fdiv
cmps
cmp
aaa
mov
leave
push
add
and
in
dec
imul
sub
add
push
sti
ins
js
mov
mov
mov
xchg
pop
pop
ret
mov
jp
push
push
xchg
std
push
scas
xchg
stos
push
nop
inc
ja
int3
stc
iret
mov
mov
lods
mov
push
mov
push
pop
(bad)
fcomp
fs
mov
lea
pop
jle
or
mov
mov
push
cmp
cs
(bad)
in
sub
sbb
fwait
loope
mov
mov
or
mov
fistp
int3
(bad)
dec
test
mov
test
jl
mov
sub
push
xor
pusha
adc
pop
daa
pusha
fsubr
sbb
and
inc
sti
jne
mov
lds
stos
jg
mov
lea
adc
ret
js
aas
inc
mov
cli
push
cmp
sub
push
cmp
inc
daa
add
lea
pusha
adc
xchg
sub
jno
or
std
pop
and
mov
mov
xchg
mov
add
jb
or
sub
test
movs
inc
push
and
loopne
in
xor
or
adc
fld
mov
cmp
inc
call
rcr
add
push
stos
lock
push
lahf
popa
add
mov
or
add
in
hlt
dec
nop
sub
add
mov
xchg
xchg
sbb
xor
mov
ror
push
mov
inc
movs
retf
pop
(bad)
cwde
out
dec
mov
dec
mov
rol
dec
leave
push
dec
pusha
in
popf
imul
outs
into
xchg
sbb
movs
fist
mov
repnz
mov
or
pop
out
int
dec
push
jg
xor
inc
dec
ds
imul
arpl
fs
loope
mov
rcl
mov
adc
mov
jo
push
dec
or
jmp
inc
iret
stc
ds
sub
in
add
pop
mov
add
mov
jmp
mov
in
xchg
add
scas
iret
fwait
daa
add
inc
mov
adc
add
xchg
inc
cli
ret
rol
mov
movs
das
inc
pop
push
mov
out
es
inc
cmp
pop
add
das
mov
pop
movs
mov
dec
popf
xor
test
or
lods
and
xor
adc
or
outs
and
sbb
cmp
mov
xchg
mov
inc
mov
dec
and
jmp
xor
outs
push
cdq
fild
fisubr
and
xor
mov
out
xrelease
jbe
pop
mov
div
sbb
outs
sbb
setb
pop
cmp
push
pop
sub
data16
mov
xchg
repz
or
jne
ret
outs
aaa
js
cmps
inc
inc
mov
imul
fistp
loope
ror
test
rcl
dec
inc
shl
movsx
mov
or
push
mov
xchg
fbld
loop
xchg
inc
movs
mov
cmps
jecxz
adc
xor
mov
aad
mov
mov
inc
sub
sbb
mov
push
xchg
(bad)
jmp
push
cli
or
popf
fwait
outs
dec
pop
mov
(bad)
mov
in
repz
(bad)
mov
add
lods
dec
inc
aad
out
sbb
ins
adc
sbb
mov
in
pop
xchg
add
sbb
nop
inc
xchg
ins
shl
mov
cmp
dec
rcr
loope
sbb
cwde
jge
sub
and
pop
jp
dec
subps
adc
mov
ficomp
ja
cmp
(bad)
inc
cld
mov
hlt
push
jnp
out
scas
fst
mov
xor
add
dec
sbb
stos
stos
pop
in
add
js
dec
cwde
inc
fidiv
fdiv
gs
loop
in
lea
and
dec
and
and
sti
mov
cmp
dec
sbb
xor
mov
retf
inc
mov
sub
imul
aam
sub
les
and
sti
sbb
imul
pop
or
mov
ss
or
mov
jbe
cmp
imul
ret
pop
pop
xchg
sbb
pmuludq
push
xchg
dec
dec
ror
jecxz
loop
stos
aam
int
fwait
enter
je
sub
pop
and
movs
inc
ret
sub
mov
jne
xchg
je
mov
inc
cmp
test
icebp
das
or
call
inc
cmp
test
int
add
shr
lods
loop
out
dec
loopne
data16
add
dec
xchg
shl
xor
cmps
jp
mov
jnp
pop
push
jnp
push
inc
sbb
call
popf
or
cld
repz
clc
in
mov
ja
je
into
mov
cdq
(bad)
ins
test
mov
cmp
cli
sahf
pop
and
shl
cmp
call
lea
dec
or
dec
mov
or
hlt
pusha
loopne
adc
dec
push
ins
mov
jne
mov
cli
stc
daa
xor
ins
and
push
pop
inc
inc
xor
sbb
lods
hlt
cmp
mov
push
adc
popa
jg
loopne
leave
mov
cdq
(bad)
dec
push
movs
(bad)
lods
ins
add
cmp
(bad)
scas
rcr
aam
das
jae
xor
fmul
cdq
push
pop
xor
retf
push
nop
jb
pop
or
sbb
test
retf
loop
cmc
push
jge
adc
sub
and
ror
jmp
mov
pop
add
jb
mov
rcr
(bad)
mov
into
pop
mov
xchg
jg
mov
cmp
adc
xchg
daa
int
movs
pop
mov
ss
or
imul
dec
or
inc
xor
out
mov
adc
cmp
add
pop
mov
sub
stos
ins
mov
mov
into
pop
xchg
test
(bad)
out
cmp
(bad)
dec
xchg
scas
jp
sbb
test
cmp
data16
dec
and
ffreep
jge
ss
in
ja
in
sbb
(bad)
sub
popf
(bad)
daa
test
enter
lods
fst
xor
dec
inc
push
lock
hlt
inc
mov
add
mov
mov
lock
mov
cmp
push
sub
test
jmp
xchg
shl
xchg
xchg
push
leave
cmp
jo
stc
aaa
jle
rcl
pop
push
push
aas
outs
xor
int3
das
ret
test
mov
mov
push
xchg
das
into
es
int3
sbb
mov
add
xchg
repz
push
mov
jecxz
jge
inc
push
test
fisubr
push
xchg
movs
in
iret
hlt
dec
and
dec
adc
xchg
dec
and
cmc
loop
add
add
push
repz
jge
mov
(bad)
pushf
out
push
xor
fcom
cmc
rcr
loope
xor
xchg
dec
repz
aaa
jbe
ret
leave
push
pop
dec
sub
add
aad
arpl
inc
stc
xor
loope
rol
out
jge
out
pop
and
jg
test
mov
xchg
cmp
push
push
gs
daa
popa
cmc
in
mov
cmps
dec
inc
push
xlat
stos
adc
adc
cwde
ror
adc
push
inc
mov
pop
fwait
and
test
loope
inc
jmp
imul
cmp
mov
dec
jmp
lods
(bad)
cld
fnstsw
or
add
mov
loop
push
jecxz
pop
jae
or
pop
fistp
fwait
or
popa
mov
or
leave
inc
lahf
jecxz
lods
scas
mov
xor
xchg
add
add
dec
adc
fcom
mov
pop
pusha
(bad)
pusha
mov
mov
xchg
or
dec
(bad)
xchg
push
or
push
mov
sahf
sbb
xor
push
fnsave
add
push
into
push
adc
push
pop
pop
jne
push
mov
mov
xchg
inc
je
cmp
int
inc
cmp
cmp
ins
jo
inc
jnp
xchg
out
push
je
cmp
pop
sti
popf
call
mov
pusha
mov
mov
scas
push
jb
sbb
enter
ret
test
sub
mov
sahf
mov
jae
stos
add
xor
jae
pop
je
repz
loope
mov
inc
adc
test
clc
pop
(bad)
retf
mov
add
shl
cmc
leave
pop
outs
fnsave
push
in
ror
sub
push
out
push
repnz
not
enter
shl
fstp
mov
cmps
outs
jne
jecxz
das
mov
rcl
inc
arpl
sbb
sbb
(bad)
mov
popa
or
and
(bad)
mov
movs
in
jb
push
nop
pusha
aam
daa
push
dec
push
mov
adc
inc
dec
pop
push
out
popf
jo
pop
sbb
dec
dec
ss
scas
mov
enter
dec
or
sbb
pop
fst
jp
stc
sbb
outs
sub
xor
add
adc
repz
xlat
sub
push
and
mov
add
dec
jmp
je
fs
fistp
movs
adc
(bad)
mov
dec
push
in
cmc
inc
outs
loopne
test
xor
hlt
retf
sahf
(bad)
push
and
cmp
push
in
pop
adc
cmc
xchg
mov
mov
test
imul
je
aam
sbb
movs
or
adc
aaa
retf
mov
jnp
cmp
lahf
cmp
xchg
sub
pop
and
addr16
and
add
dec
lods
xor
loope
mov
dec
mov
shr
pop
nop
sub
mov
push
das
push
inc
out
xchg
dec
out
push
pop
jbe
out
shr
push
dec
jbe
arpl
jmp
mov
(bad)
add
popf
add
or
inc
call
sahf
fwait
mov
jmp
mov
cmps
adc
jl
push
sbb
dec
shr
xlat
icebp
mov
sbb
cmp
inc
jp
and
and
ins
inc
add
gs
loope
(bad)
sub
scas
xchg
sbb
or
data16
movs
test
(bad)
lock
mov
push
adc
call
xchg
jbe
dec
jns
(bad)
pop
push
dec
mov
sub
fcom
(bad)
repz
add
shr
sub
add
sub
int
inc
cmp
aad
mov
adc
(bad)
(bad)
adc
stc
jl
movnti
rcl
push
sbb
mov
mov
pop
mov
mov
in
jl
mov
popa
imul
sub
scas
dec
xor
inc
sub
push
jae
cmp
and
cmp
repz
cmp
loope
push
fadd
xchg
mov
(bad)
ret
cmps
xchg
mov
outs
pop
inc
mov
adc
jle
and
arpl
and
push
mov
mov
jmp
mov
int
push
cli
in
fistp
add
xor
cld
sbb
xchg
clc
bound
lods
ins
aas
cmc
or
int3
ss
loop
mov
fidiv
push
div
lea
push
mov
stos
xor
frstor
inc
push
int
xchg
sub
retf
mov
movs
and
fadd
rol
sub
add
sub
or
sub
xchg
test
cmp
movs
or
int
jge
mov
inc
ins
outs
or
cld
and
inc
add
repz
pusha
mov
or
js
int
icebp
jb
or
enter
jno
cmp
test
mov
push
jae
jns
lods
iret
and
mov
pop
icebp
pause
fdiv
push
xchg
mov
mov
pushf
popa
adc
or
arpl
gs
repz
mov
(bad)
dec
jb
adc
out
jo
mov
inc
adc
pop
mov
cmp
xor
dec
xchg
clc
aas
pop
or
les
iret
pusha
push
nop
(bad)
sti
fild
jo
and
rcl
sub
mov
je
dec
xchg
rol
fbld
mov
pop
iret
clc
pop
pop
jge
xor
popf
mov
mov
mov
mov
push
test
inc
push
xor
sbb
aaa
mov
jb
pushf
or
mov
jns
(bad)
out
mov
cmp
pop
rol
sbb
xchg
push
or
imul
mov
aad
mov
mov
stos
das
xchg
cmp
bndldx
fcomp
idiv
sar
shl
sbb
sub
inc
jecxz
xchg
int
sar
lods
pop
repz
add
push
addr16
test
mov
jb
ins
inc
xchg
pusha
out
call
ror
scas
inc
inc
leave
test
inc
jmp
inc
fst
fs
mov
or
or
je
push
sbb
in
lock
stos
cmp
mov
mov
loope
xlat
cmc
pop
or
imul
xor
push
pop
cmp
pop
rcr
sub
push
mov
mov
test
iret
add
movs
dec
fs
pop
ror
pop
jbe
scas
mov
in
hlt
and
(bad)
mov
pop
mov
js
sub
(bad)
out
mov
stc
ss
aaa
fs
not
aas
rsqrtps
ja
and
aas
std
js
js
pushf
mov
xchg
sub
pop
mov
popa
movs
fnstenv
in
sbb
mov
mov
mov
mov
bound
pop
int3
mov
add
imul
add
sahf
fsub
cmp
ror
mov
add
cdq
ret
aas
push
and
test
jecxz
dec
jmp
scas
xchg
into
icebp
dec
push
inc
fadd
jne
je
daa
xchg
cmp
fst
push
test
retf
sub
adc
out
xchg
ds
inc
jmp
inc
int
cmp
pop
loopne
shr
gs
jmp
push
inc
adc
mov
sbb
dec
mov
xchg
sub
sbb
movs
adc
loop
sti
xor
imul
cli
bndldx
jno
call
xor
imul
fcomp
(bad)
aam
loopne
push
hlt
add
cmp
out
adc
pop
mov
xor
aad
inc
sbb
stos
aad
(bad)
mov
mov
xor
ret
inc
xchg
ins
out
push
mov
add
mov
mov
fcom
jb
iret
pop
xchg
rol
mov
dec
mov
mov
popf
fild
jl
sbb
in
repnz
mov
sti
repnz
je
(bad)
jp
and
ds
(bad)
mov
(bad)
and
dec
mov
mov
and
mov
retf
in
push
mov
cmc
int
pop
xchg
lds
call
scas
rcr
(bad)
movs
cli
push
test
xchg
lea
sub
sub
in
add
pushf
fstp
(bad)
jmp
mov
sub
call
inc
out
add
and
dec
push
and
xchg
lock
(bad)
xchg
adc
push
pop
cmp
cdq
test
rol
popf
vmaxps
pop
jno
add
test
push
sbb
sbb
inc
out
pop
outs
daa
icebp
push
xchg
pop
jle
popf
inc
xchg
jo
add
popa
jmp
sbb
rcr
test
mov
gs
sbb
es
nop
ja
mov
(bad)
fdivrp
fs
jnp
and
and
mov
movs
mov
xchg
repz
xchg
stos
cmc
jne
inc
cmps
push
mov
mov
jmp
sbb
popf
mov
nop
push
fild
movs
(bad)
div
dec
test
cmp
neg
xchg
sbb
jl
and
arpl
mov
mov
sti
rol
test
cdq
jmp
inc
sbb
nop
fidivr
add
clc
(bad)
in
or
mov
xchg
pop
xchg
in
in
mov
scas
stc
pop
adc
frstor
loope
ret
aad
cld
shl
sub
cmp
adc
mov
sbb
call
cmp
add
leave
mul
mov
xor
movs
(bad)
ss
fucomp
out
es
jae
sub
nop
mov
(bad)
ins
retf
mov
sbb
(bad)
div
mov
mov
add
jle
dec
jbe
lea
loop
and
fcom
(bad)
daa
pop
stc
push
jp
xchg
je
sub
push
out
cli
and
push
repnz
dec
sub
aaa
mov
std
sub
ror
xchg
add
xor
and
pop
fmul
push
sbb
mov
jmp
push
sub
push
loope
enter
daa
out
dec
outs
fidiv
inc
iret
mov
daa
dec
jne
out
jmp
ins
mov
and
ins
gs
mov
push
mov
mov
and
es
sub
in
fcmovnu
jle
mov
xor
add
push
dec
adc
repnz
push
push
shr
aam
mov
add
add
and
xor
pop
jle
lods
cli
adc
test
out
xchg
pop
push
sub
sahf
lahf
and
js
nop
cmp
cli
out
adc
add
xchg
mov
rcr
call
int
adc
scas
rol
fcomp
test
push
and
int
jecxz
mov
mov
sub
aam
outs
pop
or
push
out
test
cmp
adc
sub
lahf
dec
push
pop
out
das
daa
int
cwde
push
lods
ins
(bad)
jbe
rcr
dec
sbb
movs
xor
xchg
popf
or
shl
(bad)
add
add
and
xor
pop
dec
(bad)
add
add
and
out
xchg
sub
pop
add
mov
dec
jp
jns
jge
sbb
mov
xor
mov
(bad)
stos
cld
and
cmp
fs
adc
(bad)
lahf
test
or
sbb
ja
jb
loopne
mov
loopne
lods
push
aaa
mov
ds
dec
xor
cmc
dec
xlat
add
dec
push
loope
data16
dec
jbe
pop
mov
ret
fidivr
xchg
cs
push
mov
repz
add
mov
mov
adc
rol
retf
pushf
jle
jp
pusha
sbb
pop
jmp
add
(bad)
call
or
pop
addr16
mov
push
dec
adc
pop
xor
test
adc
mov
xchg
shr
std
test
cmp
or
lea
or
pop
loop
pop
xor
sbb
dec
jmp
push
cmc
popf
mov
ficom
ret
mov
jns
aam
push
pop
and
pop
cwde
das
push
ret
add
iret
popf
in
add
sbb
ret
mov
aad
jns
cdq
add
pop
(bad)
arpl
ret
adc
and
ins
sti
scas
ins
fiadd
dec
or
xchg
add
ret
cmp
adc
cmp
mov
cld
(bad)
js
mov
pop
cld
adc
cmp
test
add
ret
call
ja
mov
inc
xor
scas
(bad)
xchg
shl
call
jns
jnp
add
shl
pop
xchg
dec
add
add
or
or
pushf
push
outs
mov
mov
xor
add
repz
sti
sbb
add
repz
inc
adc
xchg
leave
push
push
sbb
xchg
aam
mov
fsubr
loopne
xchg
daa
sar
or
pop
rcr
mov
(bad)
mov
into
iret
stc
and
dec
repnz
cmp
jecxz
fistp
aam
icebp
xchg
out
jle
xor
mov
cld
cmp
outs
daa
xchg
pop
sbb
stc
enter
mov
jne
sti
aam
(bad)
jge
xchg
icebp
scas
mov
jg
es
inc
dec
cmp
sub
mov
shl
movs
dec
lds
xchg
(bad)
jns
aaa
and
repz
and
mov
or
mov
xlat
mov
rcr
mov
dec
push
push
sbb
ins
jge
mov
call
je
mov
jmp
lods
ins
inc
jne
add
dec
inc
push
loope
pop
ins
adc
jl
and
scas
jmp
sbb
push
sahf
jge
std
xor
popa
pop
jp
addr16
xor
xchg
cmps
dec
fcomp
test
cmp
mov
mov
jb
pusha
cmp
xor
jne
push
jl
(bad)
pop
sub
ins
dec
mov
sbb
cmp
jbe
(bad)
mov
daa
mov
push
cmp
ret
ret
mov
retf
fucomip
cmp
inc
aad
leave
jp
adc
in
pop
scas
xor
loop
jle
(bad)
mov
mov
jle
retf
jbe
lods
cmp
jae
add
dec
iret
inc
dec
lock
mov
or
push
sbb
test
retf
loope
in
push
jmp
aad
aam
push
sbb
mov
pop
xchg
fstp
nop
lahf
lods
sbb
loopne
leave
add
out
fnstsw
test
push
and
add
(bad)
addr16
ins
sahf
cld
jp
xchg
std
loopne
mov
sbb
add
je
pop
mov
cmc
hlt
or
cmp
and
add
dec
ss
dec
ins
or
sar
ja
mov
sti
push
mov
jp
push
mov
call
out
jp
jecxz
sti
mov
cmp
adc
popf
mov
xor
pop
adc
popa
rol
xor
ror
mov
push
add
in
(bad)
aam
(bad)
test
push
leave
retfw
and
aad
movs
add
pushf
js
sub
lods
fcmove
shld
and
jae
push
lock
mov
mov
int
push
and
fs
mov
xor
add
repz
dec
arpl
stos
fst
das
mov
adc
lods
xchg
mov
data16
pop
(bad)
(bad)
test
and
and
jecxz
mov
xchg
stc
pop
call
mov
adc
int
(bad)
aam
cmps
rol
test
in
daa
and
inc
iret
pop
mov
push
pop
xor
inc
call
mov
out
or
popa
jecxz
push
jg
adc
repz
cli
push
or
adc
or
push
iret
pop
gs
popf
clc
pop
test
test
mov
inc
aaa
xor
(bad)
pusha
sub
lea
pop
mov
sbb
inc
jmp
out
cmps
movs
xor
inc
scas
leave
jl
pop
stc
out
pop
stc
sbb
jmp
(bad)
mov
jbe
gs
hlt
mov
push
lds
sbb
imul
inc
xor
xchg
or
xchg
add
(bad)
adc
push
add
mov
sbb
and
stos
dec
jmp
or
jg
sahf
les
daa
sbb
scas
dec
loop
and
div
aad
mov
adc
loop
sbb
push
ins
sub
xchg
xor
xchg
jb
and
and
loope
push
sub
cmc
xor
push
fcmove
mov
shl
ret
(bad)
pop
adc
outs
sub
je
in
and
jns
ins
add
jnp
dec
das
test
xchg
jae
sar
and
xchg
dec
mov
and
adc
mov
ret
imul
pop
mov
mov
inc
das
ins
aad
sbb
cmp
movs
ja
hlt
stos
xor
mov
or
aas
stc
rcr
xor
push
pop
popa
fsubr
pusha
call
pop
adc
maskmovq
mul
dec
push
faddp
lock
je
out
add
xchg
scas
sub
adc
sbb
jle
jmp
and
call
hlt
xchg
test
mov
iret
sbb
rcl
inc
repnz
(bad)
ficom
je
push
(bad)
loope
mov
pop
and
pop
add
sub
dec
jmp
ret
lods
addr16
pusha
fptan
sbb
in
cmp
pop
(bad)
imul
inc
jae
mov
add
adc
pop
push
ss
nop
rol
(bad)
jg
mov
aad
mov
sub
call
imul
lods
out
clc
scas
add
shr
and
les
lods
cmps
xchg
repnz
gs
nop
sbb
pmullw
ja
push
iret
mov
pop
std
ins
or
retf
enter
mov
outs
push
jmp
push
fwait
mov
mov
clc
dec
mov
xchg
iret
jle
sbb
jns
sbb
inc
(bad)
shl
sbb
imul
jle
outs
loopne
call
jge
scas
push
mov
dec
adc
push
aas
adc
bound
hlt
aam
inc
test
sbb
fistp
pop
sbb
jbe
jnp
mov
add
mov
mov
popw
repz
int3
leave
jle
adc
mov
jbe
jns
outs
scas
mov
dec
test
ret
icebp
and
jb
retf
cmps
fist
or
fs
push
xchg
stc
sbb
or
push
xor
add
cmp
lock
fmul
sbb
mov
cwde
add
mov
pusha
cmp
fstp
stc
test
mov
je
in
sub
dec
ins
add
pop
pop
xor
sbb
inc
call
pop
lahf
cmp
in
retf
gs
sbb
mov
xlat
mov
dec
pop
fild
or
inc
cmps
adc
lock
or
pop
mov
pop
add
in
or
out
jmp
daa
adc
mov
jmp
dec
mov
out
outs
hlt
mov
sbb
or
mov
mov
in
mov
and
xchg
int3
clc
inc
cmp
data16
xlat
push
xchg
push
or
in
push
jns
mov
(bad)
jae
arpl
push
mov
(bad)
mov
inc
mov
push
je
fisub
dec
jae
dec
aad
in
xchg
mov
ja
out
xor
ss
xor
push
mov
dec
stos
(bad)
stc
jne
push
mov
stc
outs
div
xor
aam
pop
xor
mov
aas
push
mov
pop
(bad)
and
push
imul
ins
int3
mov
movs
pop
icebp
lsl
aaa
aad
mov
popa
es
sub
nop
shl
mov
cld
(bad)
test
retf
dec
jo
mov
cs
std
shl
jne
in
arpl
cmp
xor
lea
and
ins
ficom
outs
xchg
aas
jo
inc
or
jp
push
mov
in
push
pop
sbb
mov
or
iret
sbb
stos
cwde
jns
mov
inc
je
test
cmp
cmp
xor
(bad)
clc
mov
rol
adc
jp
data16
jecxz
ret
test
dec
mov
(bad)
mov
jmp
rcl
push
mov
call
repnz
sub
fiadd
pop
repz
cmc
lods
stc
cmps
lds
jnp
cmc
push
mov
cmp
adc
or
cmps
pop
retf
xor
sti
jge
mov
mov
mov
fstp
(bad)
test
scas
repnz
jge
loop
test
xchg
je
outs
sub
stc
cmp
scas
ja
xchg
inc
sti
retf
push
dec
in
adc
sbb
push
(bad)
and
ret
dec
retf
gs
clc
jb
pushf
mov
jnp
es
daa
push
push
(bad)
enter
addr16
jo
push
push
mov
jmp
jbe
lods
push
mov
and
pop
jge
xor
sub
adc
xor
and
jbe
jmp
push
in
fsub
or
inc
out
(bad)
outs
ret
ret
adc
adc
fwait
xchg
xchg
stos
sbb
lds
or
mov
aaa
(bad)
fwait
je
mov
pop
jge
jb
pop
cmps
or
add
aad
push
gs
idiv
frstor
sbb
lahf
jl
popf
mov
das
mov
or
shl
cli
inc
loope
jbe
adc
lods
stos
inc
sub
cmps
test
out
gs
inc
sbb
mov
(bad)
scas
cmp
fisubr
push
mov
cwde
mov
fsub
pop
lods
add
rcr
sti
add
xchg
cs
test
sub
mov
push
sbb
sar
arpl
fsubr
dec
mov
sbb
push
ret
stos
cmp
push
fs
xor
xchg
sub
jno
data16
aaa
int3
hlt
push
mov
pop
in
or
jno
sbb
mov
adc
imul
retf
mov
push
cmp
push
out
adc
mov
xor
add
and
mov
dec
arpl
and
call
and
aaa
cdq
push
arpl
sub
imul
aas
add
enter
cdq
enter
clc
mov
and
push
mov
fbld
rcr
in
or
sub
repnz
ror
nop
out
adc
jle
jbe
mov
sahf
fsub
stos
call
inc
mov
xchg
adc
fstp
jg
jb
ss
mov
(bad)
test
push
in
out
js
or
sub
scas
imul
jge
push
out
movs
inc
les
push
loopne
lods
mov
add
popf
mov
rol
movs
mov
add
push
pop
out
arpl
inc
cli
dec
(bad)
push
call
enter
xchg
fiadd
dec
and
or
and
jp
jle
jecxz
dec
sub
xchg
fisttp
xchg
mov
out
arpl
fwait
push
xor
imul
sub
mul
cmps
sbb
jmp
inc
mov
scas
fcmovb
aad
xchg
cld
repnz
push
jmp
ret
movs
pushf
mov
xchg
or
add
push
sbb
xchg
cld
fistp
outs
jb
cld
test
sbb
daa
xor
imul
mov
fs
push
inc
xor
xchg
mov
call
aad
adc
sub
pop
not
push
sub
inc
jg
hlt
in
mov
cli
cmp
adc
jle
outs
xchg
retf
es
sbb
pop
nop
dec
push
ss
xlat
out
jg
mov
mov
aam
xor
ins
gs
scas
jg
test
mov
push
push
and
test
and
push
sub
pop
jg
ret
mov
test
mov
xchg
loope
cmc
loopne
bound
inc
mov
jecxz
sub
jmp
jmp
sbb
mov
cli
or
jecxz
sahf
stos
or
cmp
loopne
push
(bad)
std
repnz
xor
add
pand
push
fiadd
xor
test
cmp
and
cld
push
sub
dec
push
shl
pushf
mov
fisub
test
and
xor
lock
loopne
(bad)
jle
or
mov
mov
mov
mov
mov
xchg
lods
xor
mov
jl
inc
aad
cmp
test
(bad)
(bad)
jmp
and
jmp
sbb
jle
sbb
jmp
xchg
cld
ja
ror
sub
gs
sbb
push
add
push
int3
and
adc
enter
and
sub
cs
fisub
aad
pop
in
iret
inc
sub
mov
out
mov
inc
aaa
popa
nop
adc
and
mov
sbb
(bad)
lock
and
ds
xchg
lds
dec
jp
xor
in
hlt
fucom
sub
pop
mov
aad
cmc
dec
daa
enter
dec
(bad)
pop
sbb
sbb
mov
into
outs
add
xchg
jae
cdq
mov
jg
je
adc
xchg
jnp
fsubr
jle
test
cld
xor
xor
clc
mov
push
pusha
mov
int
hlt
dec
sbb
mov
enter
test
sub
xor
cmp
push
or
cmp
dec
test
(bad)
iret
mov
sbb
hlt
fdivr
out
mov
addr16
jmp
je
ret
add
(bad)
outs
in
jge
dec
stos
setns
jbe
cmps
xchg
jne
dec
mov
leave
aad
adc
jmp
xchg
hlt
call
aaa
jb
scas
mov
lods
mov
add
pusha
push
mov
test
loopne
push
xor
jo
xchg
xor
stos
fiadd
mov
sbb
inc
cs
mov
leave
repz
test
and
daa
std
adc
in
jns
arpl
fild
(bad)
popa
adc
je
sub
pop
(bad)
pop
pop
mov
stos
and
cs
retf
or
inc
add
xchg
mov
rcr
push
cwde
jg
adc
pop
call
loopne
jns
sti
clc
adc
les
dec
dec
pop
xchg
push
jmp
dec
jne
(bad)
mov
adc
movs
cmp
mov
loopne
hlt
jbe
xor
test
cwde
mov
in
mov
mov
fbld
pop
add
jg
jb
daa
push
dec
and
xor
test
stos
pop
cmp
ret
shl
mov
xchg
fsub
(bad)
push
fimul
pushf
shl
fcomp
sub
mov
es
js
and
dec
cmp
popf
xchg
mov
and
pop
sbb
lea
or
and
mov
or
push
jl
xor
fdivr
loopne
repnz
cmp
imul
xor
das
mov
scas
test
lods
cmp
test
mov
xor
pushf
ret
xchg
std
sbb
or
jae
mov
lea
cmp
sbb
inc
loopne
xchg
ret
cwde
shl
sahf
push
mov
mov
xor
xchg
mov
sbb
ret
push
repnz
and
sub
jge
cmc
mov
add
mov
(bad)
push
scas
mov
push
pop
mov
adc
icebp
push
cmps
iret
sub
in
adc
xor
test
jbe
push
xor
mov
or
dec
pop
push
test
mov
jmp
inc
ret
pushf
mov
shl
xor
pop
sub
lods
mov
shl
xor
ss
(bad)
mul
in
je
fisttp
sbb
ret
mov
push
or
rol
and
lea
push
test
js
test
sar
lahf
inc
rcr
push
inc
(bad)
scas
ds
jle
inc
and
cmp
sub
cmp
xor
pushf
push
sti
cmc
or
jno
xchg
mov
mov
adc
xchg
and
dec
adc
cmp
cmp
add
adc
xor
and
dec
xchg
jmp
(bad)
cdq
ins
pop
test
mov
pmaxsw
aad
lahf
inc
(bad)
cs
jle
or
push
push
into
jne
lahf
ins
fisubr
push
(bad)
xsha256
cmps
xlat
(bad)
push
repnz
inc
sub
dec
clc
jg
adc
or
adc
outs
jecxz
test
out
imul
aaa
pop
es
lds
mov
and
xchg
xor
or
xor
sti
mov
adc
dec
cli
cmps
sub
neg
cmp
inc
pop
sbb
lds
fsub
or
mov
dec
jg
mov
outs
imul
mov
push
fwait
cmc
test
cs
add
and
pop
ret
jno
jmp
aam
test
inc
mov
pop
inc
jbe
cmp
xor
retf
ja
add
in
push
add
call
sar
scas
mov
jl
adc
jecxz
xchg
and
stos
vcvttsd2si
jne
movs
pop
and
xchg
test
aaa
xor
pop
jmp
mov
inc
xchg
mov
ss
mov
xor
sti
jbe
pop
jb
pop
push
in
fadd
jl
lea
outs
and
sar
inc
xchg
pop
rcl
or
(bad)
int
mov
pop
jns
dec
mov
and
inc
cli
data16
mov
pop
in
pop
in
cli
nop
add
mov
sub
out
mov
xor
pop
adc
(bad)
sti
mov
dec
outs
pop
pop
pop
in
cmp
js
dec
mov
mov
inc
mov
imul
cmps
mov
loope
movs
cmc
adc
sbb
push
pop
loopne
les
outs
fstp
test
mov
fbstp
mov
std
loope
call
xchg
out
add
and
sub
dec
mov
xchg
test
jno
adc
push
das
popa
dec
adc
ins
retf
mov
sbb
repnz
jae
loop
push
mov
bound
dec
xlat
cmp
sub
in
scas
in
into
xor
mov
add
sub
inc
je
xchg
mov
cdq
sbb
mov
cld
dec
jecxz
(bad)
rcr
mov
inc
jno
add
mov
test
out
int3
dec
das
xor
(bad)
movs
rol
lds
addr16
add
aam
or
nop
mov
imul
add
pop
cmps
push
popf
cmp
push
(bad)
mov
inc
mov
jb
outs
cmp
hlt
and
sbb
add
xor
or
adc
lods
inc
test
push
sbb
fisubr
add
jle
push
jae
mov
repz
inc
hlt
retf
jnp
add
adc
xor
ins
or
js
push
dec
ds
les
cmp
(bad)
jbe
ja
cdq
add
sbb
push
xor
xchg
cdq
aas
lock
adc
fsub
mov
out
adc
and
call
adc
mov
inc
lods
jg
xchg
test
add
scas
jo
jle
in
push
rcr
ins
sub
das
imul
jp
jbe
xor
es
cmp
and
dec
sbb
push
repz
or
xchg
lock
pop
movs
and
movs
das
xor
sbb
leave
popf
cmps
mov
fdivrp
retf
and
sub
xchg
in
(bad)
mov
cli
inc
fist
sbb
int
(bad)
fisub
test
lds
jae
cmp
jo
mov
inc
or
fwait
popf
cmp
mov
sti
pop
imul
mov
jno
retf
or
pop
ja
cmp
jg
inc
dec
les
and
fld
loope
xchg
jg
mov
or
shl
or
jmp
sbb
(bad)
dec
add
std
icebp
sbb
dec
inc
mov
cmp
pop
jnp
data16
ins
dec
sbb
sbb
xchg
mov
aam
stos
add
mov
pop
pusha
cmps
sbb
xchg
stc
fisub
xchg
pop
xor
lds
cmp
mov
push
stos
pop
mov
mov
or
push
fs
repz
jae
cmc
lahf
(bad)
inc
iret
cli
and
add
ss
test
movs
pop
dec
inc
mov
test
mov
dec
imul
xlat
les
test
xchg
jp
fcom
enter
mov
sbb
dec
int3
fisttp
jmp
pop
xchg
nop
sbb
cld
leave
push
and
sbb
popa
inc
mov
aas
cmp
sbb
shl
sbb
xchg
bound
mov
div
inc
and
sbb
mov
ds
mov
in
dec
and
add
leave
push
arpl
aas
add
or
fadd
mov
pop
sbb
dec
sbb
scas
jp
xchg
(bad)
sub
movs
fs
enter
and
push
and
sub
out
cmp
sub
xchg
pop
fisubr
xchg
pushf
std
in
or
ins
and
sar
mov
and
add
or
push
dec
xchg
fsub
stos
(bad)
xchg
test
test
lds
idiv
ret
xor
push
pop
mov
or
mov
jnp
inc
sahf
lock
aad
jae
mov
inc
stos
push
mov
xor
jno
sub
dec
rcl
mov
arpl
push
test
leave
jp
push
(bad)
jmp
lds
movs
xchg
and
mov
pop
sub
in
mov
icebp
(bad)
mov
cs
inc
add
rcl
call
push
cmps
in
push
jnp
jno
scas
std
in
ret
lahf
dec
mov
and
pop
aaa
das
loope
inc
ret
mov
sti
cmp
mov
lea
add
outs
pop
adc
retf
(bad)
mov
fucomi
mov
jb
jno
ds
jp
push
icebp
js
pushf
dec
add
cmps
inc
inc
fld
sub
mov
call
in
out
jnp
call
xchg
les
push
mov
in
loopne
xor
cld
pop
push
adc
cdq
iret
(bad)
jecxz
mov
add
push
call
clc
inc
and
je
push
pop
bound
inc
sbb
ja
mov
fyl2xp1
(bad)
std
and
arpl
retf
mov
imul
pop
jmp
enter
mov
rcr
imul
movs
add
(bad)
pop
jle
mov
in
jbe
ins
movs
push
cld
add
add
add
retf
aam
data16
cs
(bad)
cli
cmps
cmc
bound
dec
pop
movs
movs
into
add
pop
sub
enter
adc
daa
xchg
inc
and
sar
pop
ds
gs
addr16
loope
cmp
and
cmps
out
hlt
retf
(bad)
nop
dec
inc
push
jnp
sbb
push
mov
xchg
mov
sbb
mov
cmp
fisttp
dec
ja
lock
pushfw
pop
push
dec
inc
fsubrp
cdq
(bad)
and
sbb
dec
pop
cwde
or
push
scas
mov
adc
jno
inc
cmp
test
add
or
cmp
sbb
ret
add
jecxz
dec
or
cmp
fdiv
das
cwde
inc
ins
mov
aad
loope
mov
sub
cmp
mov
out
adc
test
int3
push
ins
dec
xchg
add
cmp
dec
ds
pop
dec
out
adc
sbb
jmp
or
shr
ds
pop
fs
pop
test
cs
dec
retf
push
xor
fist
dec
pop
or
push
jmp
push
(bad)
xor
add
adc
mov
loop
sbb
mov
sub
fild
mov
(bad)
add
xchg
mov
dec
pusha
xlat
xor
mov
jl
(bad)
lock
and
adc
adc
push
retf
mov
mov
aad
lods
xor
push
push
mov
in
inc
sub
in
pop
shr
les
fild
inc
jbe
inc
aas
mov
dec
sbb
stc
inc
add
jbe
mov
(bad)
jne
lea
jl
jmp
les
jmp
jo
cmps
jle
fs
mov
jl
pusha
sti
and
jmp
mov
mov
fisttp
jp
pop
pop
vpsllw
dec
ds
mov
repz
ins
lahf
popa
loope
in
xchg
mov
cmp
scas
jl
jnp
fbld
xchg
ror
and
xchg
cli
inc
dec
lods
or
mov
mov
mov
popa
leave
mov
push
cmp
inc
pusha
cdq
mov
push
sub
jmp
(bad)
stos
pop
push
das
pop
jne
rcr
lahf
inc
aaa
nop
mov
shl
jg
retf
in
cmp
aas
cmp
mov
push
fnstenv
inc
ror
icebp
dec
jl
adc
sub
retf
cmps
cmp
mov
and
mov
ficom
and
mov
call
out
cmps
aam
cs
dec
stc
loop
or
or
sbb
je
stc
int3
call
dec
aad
mov
and
push
retf
in
mov
test
jae
sbb
jmp
add
xchg
or
cmp
shl
adc
xchg
add
retf
daa
push
jmp
jno
cmp
inc
mov
arpl
(bad)
jo
imul
push
dec
ret
fs
fild
pop
ror
je
sub
aad
sub
add
call
and
inc
mov
ins
jecxz
ins
inc
push
pop
inc
xchg
fisubr
xchg
(bad)
mov
adc
loope
ret
retf
mov
mov
movs
repnz
callw
pusha
mov
aad
inc
mov
dec
push
gs
int3
in
xor
addr16
add
or
push
mov
and
call
sbb
call
fwait
mov
mov
sbb
icebp
enter
mov
je
sub
inc
(bad)
cwde
sub
pop
sbb
inc
dec
aad
mov
mov
xchg
mov
(bad)
xchg
addr16
mov
rcl
icebp
cmp
test
push
adc
int
or
rol
mov
sub
mov
mov
inc
fwait
mov
dec
push
shr
xor
add
lds
xchg
or
movs
lods
xchg
pop
stc
mov
sar
xchg
iret
cmp
ins
or
fild
push
sub
out
mov
xchg
mov
inc
scas
ins
fwait
sbb
js
fwait
aas
(bad)
fst
aas
adc
mov
xlat
mov
mov
and
cli
int
ss
es
movs
mov
ret
sbb
adc
xor
jg
sub
sub
pop
inc
sbb
stos
dec
frstor
pop
pop
arpl
mov
push
(bad)
leave
loopne
repnz
ficomp
pop
lods
lock
mov
jmp
mov
inc
ins
xchg
(bad)
pusha
in
into
cs
add
fild
mov
(bad)
out
repz
fisubr
cmp
cmp
cmp
add
(bad)
mov
cmps
mov
xor
add
jne
add
xor
sbb
movs
mov
dec
sub
sub
scas
ss
jge
mov
inc
movs
adc
adc
pop
mov
dec
mov
ins
inc
(bad)
fnstcw
scas
xchg
adc
mov
call
mov
push
popa
test
iret
mov
inc
popf
popf
push
pop
lods
xchg
mov
sar
mov
icebp
adc
lods
push
jge
daa
cmps
retf
xchg
add
sub
fimul
fisub
sbb
rcl
test
ror
pop
fsub
jo
mov
mov
xor
push
daa
dec
mov
push
pop
jge
cld
sub
inc
out
outs
cmps
or
xchg
in
(bad)
fwait
or
pop
add
push
or
gs
(bad)
jp
out
add
inc
shr
mov
sahf
xchg
mov
dec
sub
scas
and
mov
ds
arpl
lahf
mov
rcl
or
mov
fdivr
(bad)
push
(bad)
popa
push
cmp
inc
xchg
or
retf
cld
lods
out
fbld
mov
in
dec
test
mov
cli
add
push
test
or
and
cmp
popf
cmp
sbb
popa
jnp
shl
outs
retf
sub
sahf
cwde
scas
test
or
out
lods
add
loope
rcr
pop
imul
or
sahf
xchg
ss
cmps
shl
retf
ins
jmp
dec
fst
mov
xchg
addr16
or
mov
push
jbe
out
xor
jp
imul
mov
adc
mov
jae
xor
aad
cmps
cmp
push
std
out
inc
xor
movs
jnp
fisubr
mov
xor
mov
dec
dec
jp
and
sub
push
or
add
push
inc
imul
pop
ja
stos
mov
mov
inc
stc
dec
movs
out
cwde
cmp
jmp
sbb
sbb
test
pop
cmp
lds
sub
and
mov
sbb
fcomip
es
jnp
pop
xchg
in
or
ret
arpl
mov
or
pop
shr
mov
and
cld
jnp
fst
jbe
pop
mov
imul
stc
mul
cmp
das
jp
test
pop
int
or
ds
pop
sub
jle
test
mov
popa
std
mov
xor
out
sbb
jp
mov
push
add
movs
or
dec
jp
in
cdq
sbb
popa
cmp
push
pop
mov
push
inc
sub
push
add
adc
sub
xchg
ror
fdiv
cld
in
add
push
adc
retf
and
repz
lods
mov
pusha
int
movs
fstp
fld
adc
call
movs
sbb
or
xor
xor
sub
pushf
xchg
retf
test
jo
xlat
mov
(bad)
adc
jno
dec
sub
in
jge
and
imul
mov
dec
mov
sti
cmps
cli
pop
sbb
mov
mov
sbb
xchg
stos
test
imul
scas
pop
push
test
xor
cwde
mov
rcl
and
rcl
loopne
sar
pop
push
mov
jmp
xchg
je
hlt
push
pop
jb
scas
xor
in
das
rcl
sub
imul
scas
shl
in
dec
jbe
shl
int
jae
push
inc
and
pushf
cmps
push
cmps
cwde
sub
and
adc
aam
pop
cmp
dec
fsubrp
push
add
and
dec
enter
jl
and
mov
pop
fistp
and
cmp
inc
pop
out
adc
ret
jno
or
inc
sub
adc
leave
xchg
pop
shl
jae
and
mov
cmp
adc
jle
mov
movs
sti
add
sbb
ss
push
push
mov
lea
jg
aam
mov
dec
rcl
cmp
add
adc
add
repz
pop
dec
ins
fimul
xchg
(bad)
pushw
jl
pop
stos
push
adc
test
pusha
outs
aas
fimul
mov
and
imul
fs
mov
sbb
mov
add
lods
push
mov
lds
or
aas
inc
out
sub
es
cwde
mov
sbb
mov
cmc
ja
mov
fcomp
sub
lods
jmp
(bad)
(bad)
(bad)
fstp
movs
cmps
mov
gs
sub
xchg
jno
ror
push
xchg
xchg
sub
pop
push
add
ja
mov
push
std
je
bound
outs
rcl
add
clc
add
in
and
imul
ins
push
mov
pop
out
pop
xchg
jecxz
clc
xor
scas
repz
xor
lods
scas
and
lods
jge
jmp
push
cdq
rcr
ret
aam
mov
movs
pop
pusha
test
pop
add
scas
ffreep
cmp
dec
sbb
lods
pop
and
jmp
mov
fstp
dec
das
pop
xor
lahf
push
mov
cmp
jecxz
adc
loope
cdq
push
mov
cmp
jb
sub
mov
adc
repz
sbb
popf
adc
cmp
jno
jb
inc
or
gs
sub
mov
lahf
jno
movs
xor
outs
jp
iret
mov
pop
sub
int
xlat
cmp
xor
sub
push
push
mov
sbb
ja
adc
retf
or
sti
cmp
jno
push
xchg
out
sbb
add
fst
pop
mov
loope
cmp
call
jmp
adc
jae
int3
or
xor
dec
loope
push
pop
movs
pop
stos
dec
(bad)
stc
pop
cmp
std
add
clc
sub
cmp
inc
adc
stc
loope
push
call
data16
fcom
xor
jns
cdq
ss
(bad)
cwde
loop
cmps
mov
ret
scas
outs
dec
loop
and
jle
mov
stc
xchg
sbb
hlt
cmp
out
push
sub
adc
(bad)
fs
xor
mov
xchg
pop
jo
shl
dec
adc
int3
pop
mov
(bad)
loopne
loopne
in
icebp
jbe
lock
jbe
mov
pushf
aaa
and
jge
imul
pop
outs
add
pop
mov
das
arpl
xchg
ja
retf
stc
popa
add
mov
xchg
sbb
(bad)
aaa
fidiv
pop
loop
pop
sub
jmp
jge
push
sahf
hlt
ins
cs
push
push
jge
retf
mov
push
push
sahf
sbb
pop
int3
xchg
(bad)
jmp
out
stos
jmp
psllq
aas
shl
movs
mov
sbb
dec
das
movs
(bad)
iret
cmps
mov
jne
in
mov
lods
sub
(bad)
je
scas
popf
sahf
js
aas
push
or
aad
mov
add
add
mov
jmp
movs
xor
ins
jo
xor
mov
fnsave
in
fmulp
or
test
inc
mov
dec
push
mov
xchg
pop
adc
call
icebp
(bad)
and
push
lods
es
sub
out
mov
mov
sbb
mov
lds
inc
xor
mov
aam
std
mov
adc
iret
int
adc
scas
pop
jns
add
out
outs
jl
dec
icebp
pushf
jns
aam
test
mov
xor
sbb
inc
loope
mov
mov
(bad)
fld1
sub
jnp
sbb
loopne
pop
push
cmps
inc
ret
adc
in
cbw
adc
ja
or
jge
dec
dec
jp
aaa
je
shl
add
mov
jno
lahf
fistp
jno
outs
setge
scas
out
sub
imul
push
push
dec
mov
sbb
icebp
or
rol
data16
or
mov
cmp
enter
test
add
cdq
and
push
jmp
outs
pop
mov
ret
dec
cmp
cmc
sub
cli
fisubr
push
call
or
mov
out
add
pop
xlat
dec
push
mov
cmp
(bad)
test
adc
ret
sbb
icebp
mov
mov
mov
popa
outs
xchg
dec
pusha
shl
je
sbb
cmp
call
mov
push
push
jg
popa
out
pop
jmp
dec
test
mov
xchg
movs
out
js
inc
js
call
xchg
mov
cmps
dec
out
out
dec
jge
pop
ret
dec
add
cmps
cmp
adc
std
cmp
ins
call
sub
js
or
imul
mov
int
xor
mov
push
push
lds
stc
test
cmps
mov
and
and
push
dec
cmp
out
push
out
pop
sub
xor
or
mov
out
mov
arpl
test
movs
inc
push
call
scas
rcr
inc
rol
ins
retf
sub
mov
pop
sub
sub
sbb
jmp
ins
cdq
jns
fnstcw
(bad)
das
jo
push
dec
aad
adc
or
xchg
js
or
(bad)
ficom
stos
pop
mov
rcl
ss
sahf
or
outs
push
arpl
jo
inc
(bad)
cli
fld
jl
in
xrelease
mov
sar
dec
adc
rcl
(bad)
out
adc
mov
scas
bound
sti
inc
gs
inc
xor
sub
aaa
xchg
jecxz
jno
adc
retf
mov
mov
dec
ds
push
cmp
sbb
mov
mov
stc
or
xchg
(bad)
push
jae
fnstcw
jne
loope
ins
pop
cmp
cmc
cmp
ficomp
fistp
mov
jl
mov
and
cmp
adc
cmps
fdivr
jnp
and
jg
scas
lods
out
mov
fadd
ds
and
cmc
shl
pop
push
int
xchg
fbld
fst
movs
or
leave
ret
fild
push
pop
inc
mov
and
and
pop
hlt
repz
mov
(bad)
call
aad
pop
ins
repnz
scas
push
ret
in
inc
rep
aaa
jno
mov
jns
ins
mov
inc
ja
xor
fdivr
or
jns
retf
(bad)
(bad)
jp
retf
mov
push
not
pop
ror
sub
adc
mov
fisub
aas
jns
movs
pop
sub
mov
or
stos
repnz
xor
dec
lds
mov
call
push
std
aam
lea
jecxz
dec
mov
mov
mov
loopne
inc
xlat
ret
iret
push
and
in
shr
sbb
(bad)
mov
popa
fldenv
sub
sub
sbb
adc
ins
daa
cmps
lea
fdiv
femms
cli
cmp
cli
sub
xchg
std
cmp
cmp
push
das
mov
sbb
ror
fs
stos
inc
cmps
lods
icebp
ins
push
cmps
inc
cmps
xor
pop
dec
jb
stos
arpl
scas
cmps
gs
and
add
mov
inc
fld
jg
xchg
sub
adc
dec
scas
jbe
dec
adc
sbb
imul
mov
xor
mov
enter
sbb
add
jb
enter
cdq
or
(bad)
imul
xchg
inc
pushf
pushf
jb
nop
xor
cmp
dec
jp
add
sahf
shr
inc
into
arpl
and
clc
imul
imul
add
or
cmps
push
sbb
fs
or
fmul
es
mov
jno
mov
and
mov
sti
push
fs
mov
add
leave
fimul
xor
mov
adc
mov
inc
xor
rcl
imul
mov
jmp
inc
and
daa
int
jl
loope
dec
ins
ja
not
jge
dec
sahf
dec
in
and
inc
lea
lods
(bad)
lods
jp
add
cmc
in
jnp
xchg
xor
jns
mov
movs
cwde
or
pop
dec
fwait
jl
hlt
xchg
mov
loopne
(bad)
mov
jp
nop
jg
scas
lea
aam
daa
jge
mov
dec
scas
daa
rol
jmp
mov
add
and
add
lock
cs
out
enter
imul
enter
ror
gs
push
fcmovnbe
test
add
ds
sahf
lea
leave
xchg
test
mov
fbstp
add
or
in
rcr
xlat
xor
loopne
fst
xor
or
cmp
pop
inc
daa
dec
push
(bad)
std
pop
pop
sub
or
and
mov
add
outs
pop
jecxz
retf
push
lock
(bad)
xrelease
sub
cmps
and
fisttp
and
dec
or
jge
rol
ja
imul
test
(bad)
enter
pop
out
dec
sub
inc
mov
jmp
cs
les
jae
add
aaa
ficom
xor
cmc
sahf
outs
fidiv
push
jl
stos
cs
fistp
sub
and
sbb
call
(bad)
scas
jecxz
jmp
test
sbb
jmp
add
cmp
call
mov
push
fadd
ins
push
sub
popf
(bad)
push
sar
sbb
jnp
imul
mov
cmp
popf
sahf
je
shl
sti
neg
popf
shl
adc
pop
pop
add
in
call
mov
inc
xlat
mov
loope
popf
and
aas
sub
adc
mov
fistp
cli
(bad)
in
inc
das
jbe
ja
cmp
xor
dec
adc
xchg
fwait
push
cld
out
sub
jbe
lods
inc
fisub
ds
nop
js
in
inc
je
aam
arpl
xor
(bad)
loop
adc
push
sahf
mov
push
(bad)
cli
cmp
arpl
adc
imul
int
popa
pop
xchg
ds
dec
rcl
loop
adc
retf
xchg
push
(bad)
in
sbb
shr
push
cmp
es
xchg
jbe
inc
xchg
lea
pop
or
adc
aas
movs
mov
mov
mov
inc
push
mov
adc
pminsw
neg
xchg
sbb
inc
mov
dec
inc
inc
aam
in
push
ss
mov
xor
clc
mov
pop
in
fidiv
stc
pop
loop
dec
or
jp
or
(bad)
outs
mov
fsubr
and
xchg
inc
push
lods
pushf
adc
pop
imul
cld
ins
js
cmp
inc
in
movs
cmp
inc
stos
pop
mov
scas
or
push
stos
sub
ins
in
xor
or
rcr
jnp
or
popf
sub
pop
or
mov
hlt
cmp
dec
test
mov
fild
jmp
in
pusha
je
mov
bound
mov
call
les
aaa
out
pop
hlt
add
cmp
cwde
jae
aaa
cmps
(bad)
(bad)
imul
(bad)
lea
jb
scas
pusha
jnp
or
mov
mov
sbb
ins
cmps
ds
mov
push
or
push
xor
fwait
ja
xor
ror
xchg
sbb
sti
mov
and
sub
call
mov
xchg
xchg
sar
fnsave
or
fstp
jmp
and
pop
cld
dec
jbe
popa
call
pop
push
movs
js
fsubr
add
cs
or
pushf
imul
cmp
cmc
nop
int
fmul
sub
cld
outs
popf
adc
lods
add
mov
xchg
ror
cmps
mov
or
inc
dec
mov
or
cmp
or
sub
xchg
sub
mov
and
jno
mov
stos
retf
loopne
jmp
jne
sub
sahf
loope
push
mov
(bad)
mov
pop
pushf
mov
(bad)
cmp
mov
ins
imul
sbb
bnd
jle
add
loope
and
int3
ror
sar
test
scas
popf
jle
pusha
mov
dec
cmp
in
fwait
dec
inc
cmp
mov
imul
and
jno
xchg
sub
call
mov
mov
mov
movs
adc
cmp
das
stos
cmp
ja
(bad)
xchg
or
imul
stc
pop
mov
push
stos
cmp
dec
sbb
or
je
pop
mov
cmp
inc
lea
mov
pop
sub
das
fcmovu
(bad)
int
(bad)
jge
lock
js
retf
jle
loopne
jnp
push
pop
mov
(bad)
lods
sub
cli
adc
xlat
pop
leave
and
jecxz
sbb
sbb
out
adc
(bad)
inc
sub
fs
ss
or
dec
push
fwait
(bad)
mov
pop
ror
imul
dec
mov
jge
cmp
aas
cmp
das
cs
jnp
lds
adc
pop
add
xchg
dec
(bad)
test
mov
xchg
push
les
push
outs
nop
lds
pushf
push
fsub
stos
mov
adc
lock
outs
mov
jle
add
cmp
sti
xchg
outs
pop
call
ret
mov
mov
sub
inc
cmp
push
sbb
mov
inc
add
cmps
fucomp
or
sbb
in
jge
outs
xchg
mov
popa
xchg
dec
sbb
push
jb
and
test
data16
push
aam
sbb
in
aad
push
ins
jne
test
test
jo
mov
test
mov
xchg
or
imul
shl
rol
gs
inc
in
push
jae
or
push
in
sbb
inc
hlt
sbb
aad
xor
add
adc
fcom
sahf
push
add
inc
xchg
shl
adc
pop
fs
sbb
inc
jle
cmp
cwde
or
cmc
lea
lahf
inc
and
push
adc
mov
jmp
cld
push
dec
(bad)
std
and
lods
jae
mov
or
call
repz
fcomip
int3
rcl
or
pop
cmp
in
das
inc
leave
pushf
adc
jle
push
outs
(bad)
leave
movhps
xor
movs
fld
adc
push
xchg
aam
cdq
aas
ror
inc
lahf
arpl
cmps
push
jns
ins
aad
push
inc
mov
es
xor
add
or
test
xchg
out
pop
(bad)
xlat
(bad)
push
leave
(bad)
in
inc
mov
nop
test
and
(bad)
(bad)
fst
sti
cmp
dec
push
les
(bad)
int
xchg
lods
dec
jbe
mov
or
enter
xchg
pop
jecxz
retf
out
ror
inc
add
aas
(bad)
and
loop
jmp
stos
xchg
loop
repnz
aas
sbb
outs
or
push
xchg
and
aad
mov
out
mov
loope
and
add
dec
ficomp
pop
fild
lds
nop
adc
popa
ins
cmp
mov
mov
cli
add
imul
add
outs
imul
jb
mov
fisub
sbb
jmp
mov
pop
mov
inc
adc
lahf
ror
fistp
mov
(bad)
pop
jne
and
jne
mov
mov
push
inc
aas
mov
adc
(bad)
into
jmp
hlt
retf
leave
ret
fwait
mov
in
(bad)
cmps
cli
xor
mul
retf
sub
cmp
adc
add
sbb
push
lea
mov
dec
push
dec
push
inc
les
mov
out
sbb
repz
arpl
gs
jne
xor
imul
les
xchg
(bad)
adc
stos
push
or
aam
add
pop
mov
cmp
fidivr
mul
into
inc
arpl
cmps
cmps
(bad)
into
hlt
or
push
(bad)
xor
hlt
arpl
call
in
sti
iret
jmp
scas
dec
fbstp
shr
(bad)
(bad)
addr16
lds
push
fidiv
retf
mov
push
nop
cs
sbb
nop
pop
and
into
cmp
mov
out
out
add
imul
sar
xor
cdq
add
cld
mov
mov
and
pop
in
mov
push
cli
int3
pop
lea
mov
daa
shr
leave
ret
mov
mov
pushf
hlt
rcr
dec
jmp
clc
xor
jmp
cld
lds
lea
out
rol
mov
iret
adc
sub
stos
arpl
jns
aam
sub
test
ds
xor
(bad)
sub
test
jae
ret
mov
dec
cmpxchg8b
int
mov
leave
jge
add
test
loopne
add
jp
call
cld
mov
jge
arpl
mov
test
and
popf
inc
adc
daa
lahf
and
ins
pop
jmp
and
daa
into
fs
xor
jne
jmp
jmp
inc
aam
add
(bad)
arpl
and
or
popf
aad
loop
pop
or
mov
mov
jnp
or
cwde
sar
enter
adc
sub
out
retf
inc
pop
fldenv
nop
and
lods
addr16
daa
dec
xchg
mov
adc
sbb
or
inc
out
call
dec
andnps
pop
pop
scas
sub
arpl
jge
push
popa
iret
imul
scas
dec
pop
dec
and
imul
ss
or
int
mov
mov
movs
fcomp
and
inc
sbb
inc
retf
icebp
test
mov
loopne
and
aas
or
sub
mov
cmp
and
movs
and
ins
lock
dec
push
jnp
out
push
add
fs
gs
mov
shl
nop
movs
sub
dec
nop
(bad)
or
cli
scas
mov
mov
sbb
imul
sbb
mov
sbb
ror
xchg
test
dec
out
movs
movs
or
repnz
test
mov
xor
mov
retf
(bad)
out
pop
xor
add
adc
xor
test
int
add
xchg
fisttp
fsubr
fsub
sbb
arpl
inc
push
ins
jg
mov
jbe
jnp
or
pop
gs
pop
inc
call
loop
or
pop
xchg
into
mov
mov
add
adc
mov
ins
cdq
inc
std
loop
cmp
adc
xchg
test
jle
and
not
call
fstp
movs
sub
es
sub
subps
mov
scas
es
lahf
ror
cmp
jo
(bad)
cs
mov
mov
loop
es
repz
dec
or
jns
cmp
cmc
mov
loope
xchg
jmp
std
jge
hlt
add
out
jle
(bad)
or
push
push
jb
aam
jo
lods
popf
mov
mov
inc
jne
sub
mov
sbb
jle
in
fnstcw
(bad)
push
into
popf
jg
sti
in
pop
dec
gs
cmc
mov
xchg
lods
mov
aam
addr16
push
ins
push
fisub
pushf
call
std
cmp
ror
adc
in
enter
pop
jnp
movs
pop
mov
pop
jle
sub
mov
adc
(bad)
bound
pop
fsubr
aad
aas
dec
pop
(bad)
cmc
retf
jns
pushf
popf
aad
add
push
data16
pop
in
fistp
fcmovne
push
test
adc
enter
fsub
pop
addr16
cmp
xor
je
outs
(bad)
push
and
repz
jo
xchg
sub
mov
mov
aaa
sub
pop
mov
push
fwait
jmp
aam
rol
mov
adc
fwait
pusha
sub
adc
or
or
hlt
push
idiv
or
sar
inc
das
jo
cmp
mov
out
pusha
cmps
repz
addr16
ins
jb
cmp
shl
jge
pause
and
add
ds
xor
xchg
cdq
js
push
retf
retf
ins
add
push
dec
sbb
dec
out
repnz
lea
stc
shr
pop
(bad)
mov
aas
and
jge
and
lods
adc
xor
inc
cli
sbb
mov
cmp
xchg
in
cmp
cmp
push
sbb
sbb
inc
jecxz
add
es
xchg
xchg
dec
or
and
inc
mov
outs
or
fist
push
xor
aam
xchg
pop
and
popf
cmps
hlt
mov
stc
dec
mov
jnp
jle
mov
dec
aas
mov
push
inc
into
jb
pop
mov
imul
push
and
aam
inc
popf
xchg
ja
jp
or
inc
test
push
aaa
cmps
fxtract
jmp
test
into
rol
and
int
movs
shl
inc
repz
sub
lods
and
cli
inc
mov
retf
xor
xor
hlt
xchg
jns
sbb
fs
scas
mov
jbe
jb
pushf
mov
adc
dec
dec
or
stos
ds
mov
cmc
sub
push
into
mov
or
xor
mov
jb
add
xchg
mov
xchg
mov
and
not
data16
std
adc
shl
cmp
xor
push
ja
hlt
dec
pop
push
sahf
(bad)
and
inc
jmp
xor
sub
inc
cmp
xchg
fnsave
in
mov
cmc
outs
cdq
mov
xor
ret
add
cmp
test
daa
xlat
mov
mov
(bad)
pop
cmps
xchg
adc
enter
sub
add
rcr
xchg
das
cld
lods
pushf
(bad)
fcomp
or
push
in
mov
out
mov
retf
scas
cdq
xor
out
or
shr
retf
xchg
adc
cld
lds
je
popa
xchg
and
and
pop
gs
dec
push
out
jne
push
mov
xchg
cmp
pusha
outs
pop
push
mov
or
jnp
dec
xchg
and
pop
xor
fistp
dec
and
ror
(bad)
(bad)
xchg
lahf
adc
jge
xchg
ret
lea
xor
sbb
xchg
es
mov
repz
inc
movs
dec
jge
cmps
rcr
sbb
fisubr
fcomp
aas
mov
fidivr
mov
lds
pop
cmp
(bad)
test
dec
mov
adc
fimul
lds
xchg
inc
sub
rol
dec
adc
pushf
in
jg
shl
rol
mov
mov
popf
inc
sub
adc
out
loopne
pop
fnsave
cmp
xor
outs
repz
test
nop
dec
sub
inc
fcmovnb
adc
cmp
int3
mov
repnz
inc
jecxz
and
ret
jmp
add
in
(bad)
xchg
sub
sub
popf
mov
stos
sub
in
xlat
xor
sbb
mov
test
and
or
(bad)
aad
sbb
pop
std
fiadd
mov
loope
ret
fst
int3
fnstenv
add
aam
dec
shl
add
jecxz
fdiv
stc
test
dec
in
jg
jnp
iret
cmp
mov
sub
test
sbb
pop
or
imul
pop
out
frstor
pextrw
dec
ja
addr16
mov
xor
sbb
pop
cld
pop
mov
jne
in
ds
jle
cld
imul
outs
mov
dec
daa
cmps
adc
and
adc
xchg
movs
jo
xor
jl
aam
das
(bad)
shl
xchg
fistp
jns
xchg
popa
inc
popf
ds
sub
aas
dec
mov
push
cmp
ficomp
xchg
icebp
popf
mov
xchg
push
dec
dec
(bad)
bound
xchg
and
xchg
dec
sbb
inc
sbb
pop
pop
daa
inc
imul
pop
push
and
mov
outs
xchg
loopne
rcr
imul
adc
cmp
pop
mov
dec
out
pushf
mov
push
neg
shl
sbb
fidiv
push
cmp
sub
pop
adc
mov
mov
dec
or
xchg
mov
fwait
sbb
xchg
cmp
sub
lahf
popa
pop
pop
mov
bound
lahf
adc
mov
(bad)
sub
cmp
enter
xor
ficom
out
jne
fwait
daa
daa
mov
cmps
and
mov
sbb
(bad)
out
sbb
xor
into
push
sti
bound
not
loopne
jl
xchg
cmp
pop
(bad)
fld
or
xchg
jp
movs
jmp
in
mov
mov
mov
jbe
mov
cmc
in
and
dec
movs
ja
push
dec
outs
mov
xchg
xchg
or
cmp
daa
mov
push
xor
inc
iret
jle
jg
sbb
pop
or
jl
adc
pop
sbb
pop
imul
ret
mov
rcl
aaa
and
and
lahf
pop
xor
xor
clc
mov
mov
push
adc
xchg
mov
jp
push
adc
movs
mov
fcomp
xor
cmp
or
jmp
pop
rcl
add
(bad)
(bad)
bound
jns
in
neg
and
nop
(bad)
cmp
and
dec
inc
mov
inc
jge
shl
out
or
int3
aam
adc
cmp
push
xchg
stos
sub
mov
(bad)
and
jmp
push
stos
push
icebp
push
jnp
loope
popf
sub
adc
cmps
add
ret
mov
and
call
imul
(bad)
push
cmp
cmp
jno
mov
mov
es
add
(bad)
arpl
jle
xchg
lea
movs
enter
call
sahf
gs
push
fs
into
retf
sar
fcom
fnstsw
ins
mov
movs
dec
add
mov
inc
(bad)
pop
xor
shl
leave
movs
adc
dec
inc
xor
pushf
rol
cmc
xchg
mov
add
and
ds
xor
adc
mov
fiadd
repnz
mov
jae
xchg
jmp
dec
stos
jmp
jecxz
movs
fcmove
xlat
inc
lods
dec
in
push
mov
sub
neg
add
fcomip
les
mov
cmps
cmp
or
cmp
pop
mov
lock
mov
and
hlt
add
fucomip
or
pop
dec
and
packssdw
xor
mov
push
inc
ss
int
es
mov
xor
mov
icebp
jl
add
ret
addr16
fst
lods
mov
or
jmp
(bad)
outs
pushf
add
jmp
sbb
out
out
test
or
repnz
and
push
cmp
sbb
bound
sti
xchg
stos
xlat
xchg
adc
enter
rcr
xchg
xor
xlat
mov
aam
xchg
in
loope
out
lock
dec
(bad)
call
jae
sahf
leave
dec
je
mov
fdiv
stc
xchg
pusha
or
jno
repz
cs
xchg
sbb
fs
lods
push
push
mov
retf
pop
movs
adc
test
or
loop
mov
in
test
adc
or
outs
add
gs
lahf
fsubr
and
cmps
push
or
aas
lea
jmp
aam
push
pushf
fisubr
inc
outs
push
pusha
mov
int
fwait
aad
mov
fidiv
iret
xor
cld
push
pop
fdiv
adc
xchg
xchg
sbb
in
mov
inc
fbld
test
aad
pop
test
sub
mov
out
loop
xchg
pop
jbe
sar
cdq
lods
stc
(bad)
cmp
inc
jle
cs
fs
test
pop
je
inc
pop
xchg
pop
mov
sbb
sahf
repnz
pop
inc
or
and
repz
ret
jg
dec
push
ja
retf
sub
movs
lods
mov
aam
or
fucompp
push
sbb
sbb
xor
jle
xor
test
cwde
jae
pop
inc
mov
or
mov
cmp
ins
jge
mov
and
jmp
hlt
(bad)
inc
jmp
jmp
dec
add
pop
not
mov
scas
sti
and
cmp
out
cli
imul
adc
lds
stc
cmps
dec
mov
cmp
fistp
aaa
mov
sub
xchg
movs
scas
pop
or
cmps
clc
shl
mov
mov
or
mov
jne
push
xor
fidivr
sbb
mov
outs
jecxz
sbb
outs
imul
loop
pop
mov
jo
cmp
cmp
div
cmp
cmp
push
lods
xchg
movs
and
out
inc
mov
adc
popf
ins
das
mov
fiadd
dec
arpl
jg
stos
push
cmp
pop
xchg
or
jbe
clc
retf
mov
push
pop
inc
cmps
xchg
and
out
sub
jmp
push
mov
sub
and
cmps
mov
in
sub
push
push
test
inc
pushf
dec
lock
sar
aad
sub
out
jmp
adc
xor
sbb
cld
loopne
push
int
cli
push
pusha
fs
out
in
dec
imul
push
xor
mov
inc
sub
jb
mov
ins
mov
stos
in
dec
aad
and
les
bound
push
bound
dec
into
jns
push
arpl
jp
sahf
leave
or
inc
jecxz
pop
fcomp
jb
jae
dec
movs
sbb
inc
or
mov
imul
adc
sub
pop
pop
pushf
loope
cmps
es
in
aas
gs
sbb
push
or
dec
imul
ret
test
dec
pop
pop
(bad)
jle
ror
cmp
mov
and
mov
dec
xchg
pop
lea
and
fcom
pop
lahf
ins
push
xchg
push
fdivr
mov
rcl
dec
xchg
dec
pop
mov
jg
adc
lods
xchg
dec
pop
test
sbb
dec
adc
icebp
fbstp
push
mov
fldcw
cwde
inc
movs
and
repz
or
push
out
xor
jle
sbb
ja
jmp
or
aam
sbb
adc
xchg
ins
stc
loope
cmp
daa
sub
sub
das
dec
pop
imul
jo
lahf
lds
xor
pop
icebp
cld
fistp
hlt
cwde
inc
jae
add
adc
in
push
inc
xchg
adc
or
mov
xchg
jmp
inc
push
and
jg
xor
lock
xchg
jb
sar
sbb
mov
in
outs
jne
(bad)
int
xchg
rcr
mov
jns
cmc
push
aam
nop
xchg
adc
ror
mov
sub
mov
not
push
sbb
repz
add
mov
ss
cmp
xchg
or
fidiv
sbb
and
aas
ret
mov
mov
jns
(bad)
dec
movups
or
leave
jmp
jg
xchg
fistp
xchg
and
push
adc
cld
and
je
fisubr
fwait
call
ret
sub
jle
mov
test
sbb
mov
popa
xlat
pusha
pop
(bad)
out
std
pop
stos
push
xor
(bad)
mov
pop
mov
sbb
ins
mov
mov
movs
push
push
mov
mov
(bad)
cmp
repnz
ins
pop
add
jp
jnp
loope
outs
pusha
xor
gs
fcmovbe
xor
rcr
(bad)
jg
lods
push
jo
fld
in
sub
mov
xchg
ins
cmps
jne
aam
arpl
aas
sub
cwde
mov
inc
mov
dec
sbb
scas
and
xchg
ret
pusha
dec
out
push
xlat
or
aas
and
sub
outs
push
pop
dec
ss
(bad)
mov
xchg
xchg
retf
nop
out
inc
adc
sub
push
not
pop
mul
nop
out
mov
mov
ror
dec
lds
pop
(bad)
dec
dec
test
sub
inc
dec
imul
(bad)
pop
add
push
and
and
adc
arpl
push
ja
jg
or
jmp
aas
pusha
sbb
ret
repnz
int
into
xor
mov
ja
jno
loopne
and
test
fiadd
cmc
loope
repnz
pop
sar
cmp
inc
fstp
aam
xchg
dec
mov
clc
dec
movs
dec
ins
in
xchg
dec
inc
imul
jne
das
ror
and
cld
js
stos
jl
jecxz
in
aad
mov
rcl
cmc
sbb
jne
cmp
shl
jp
jb
dec
(bad)
cs
push
retf
xchg
in
pushf
gs
jg
dec
cmps
push
cmp
hlt
cli
xor
(bad)
iret
push
push
test
cmp
outs
jnp
dec
sbb
aam
sbb
adc
sbb
daa
adc
(bad)
addr16
adc
movs
pop
sub
aas
jae
clc
mov
adc
push
test
push
mov
(bad)
fimul
xchg
fild
call
sbb
iret
sub
push
mov
add
nop
inc
imul
out
push
sub
xor
mov
cmp
jne
sbb
in
mov
adc
push
movs
sahf
addr16
fcom
add
aas
loop
push
retf
cmp
jne
cmp
push
xor
or
cmps
push
pushf
pop
clc
movs
cmps
xor
repz
cmps
dec
mov
(bad)
out
in
nop
mov
fdiv
shr
jns
(bad)
std
retf
imul
aas
xchg
push
jne
call
lods
repnz
mov
cwde
out
nop
lock
lods
in
inc
or
das
int
arpl
adc
jecxz
nop
fist
cwde
adc
inc
sbb
jb
mov
ret
inc
hlt
jb
or
inc
xchg
imul
popa
xor
shl
mov
mov
xchg
jle
inc
daa
push
mov
es
or
xchg
add
xchg
dec
sub
retf
movs
or
daa
push
xchg
dec
stos
pop
outs
mov
call
hlt
outs
rcr
ins
or
mov
inc
das
ds
or
jno
scas
ret
mov
pushf
imul
es
(bad)
mov
add
push
lahf
out
mov
ret
pop
repz
xor
je
popf
daa
mov
mov
mov
cwde
lods
sbb
mov
push
ror
adc
fsubr
imul
sub
adc
mov
push
scas
mov
inc
pushf
int3
ins
fadd
sub
sbb
mov
imul
mov
mov
cmp
pushf
and
jb
mov
mov
xor
push
mov
mov
int
xchg
gs
push
ret
cmp
movs
bound
call
leave
mov
ret
mov
les
int
pop
inc
jg
dec
shr
mov
in
jg
out
adc
fwait
nop
mov
enter
stos
enter
jmp
in
mov
adc
jne
xor
das
inc
push
(bad)
pop
pop
(bad)
(bad)
xor
arpl
xchg
test
sub
cmp
pop
sub
rsm
(bad)
arpl
adc
mov
cmp
jg
vcvtss2sd
(bad)
loop
xor
ror
aam
jo
and
call
xor
dec
mov
lods
fadd
rol
dec
int3
ret
rol
xlat
cmp
dec
mov
aam
sub
stos
in
out
xchg
adc
adc
jmp
jno
and
jecxz
xor
cmp
mov
enter
pop
call
cmp
mov
loopne
sbb
(bad)
cld
adc
add
pop
lahf
dec
or
out
sub
push
xchg
xchg
mov
push
push
test
mov
mov
stos
in
pop
or
dec
inc
loop
adc
pop
data16
cmp
sbb
dec
dec
pushf
adc
mov
arpl
aad
jg
xor
inc
mov
enter
cmc
push
mov
mov
or
out
lahf
mov
ins
inc
cmp
pop
out
add
movs
sbb
fmul
icebp
or
ror
mov
aam
sub
push
lahf
cmp
retf
daa
xlat
in
adc
movs
xor
dec
out
pop
push
xor
call
jno
arpl
cld
call
pop
xchg
and
mov
sub
cdq
inc
int
iret
add
out
int3
ret
sub
push
mov
push
not
(bad)
std
sub
nop
or
mov
xchg
cmp
xchg
xchg
xchg
dec
call
mov
dec
call
jp
cld
ds
leave
rcl
repnz
sub
mov
inc
jmp
add
shl
fs
cmp
ret
mov
sub
fisubr
rol
imul
in
cwde
das
xor
add
fnstcw
pop
sbb
in
(bad)
sbb
shl
loop
imul
js
fldenv
mov
xchg
dec
aaa
lds
lods
ja
inc
sbb
jle
stos
pop
loop
enter
dec
fwait
movntps
into
jl
cld
adc
mov
inc
jne
pop
dec
daa
in
mov
sbb
add
aaa
xor
adc
inc
push
cmp
or
cmc
sahf
daa
scas
inc
es
xchg
test
popa
and
mov
mov
jg
adc
repz
or
ret
sbb
cmp
mov
stc
jmp
inc
cmp
imul
in
adc
in
push
rcl
hlt
sbb
push
(bad)
xchg
xchg
test
add
hlt
pop
jecxz
mov
add
imul
and
outs
xor
push
or
cs
xchg
lea
inc
icebp
cs
push
adc
sbb
movs
dec
icebp
inc
push
adc
loop
push
push
sbb
inc
daa
and
and
or
(bad)
retf
push
aas
sub
mov
in
stos
push
push
pop
mov
push
add
add
hlt
add
push
pop
or
int
mov
sub
jmp
outs
out
xlat
shl
movs
gs
out
retf
jb
push
(bad)
sbb
dec
mov
hlt
int3
jb
xor
push
push
mov
hlt
int3
arpl
lds
inc
retf
scas
pop
xor
sbb
push
jmp
pushf
xchg
fwait
inc
mov
sbb
(bad)
aam
pop
arpl
ret
fcmovb
jge
shl
lahf
dec
mov
adc
cld
jmp
jo
xor
cwde
dec
into
(bad)
inc
mul
jbe
(bad)
jmp
cmp
dec
leave
ins
aas
out
pop
int3
test
mov
sbb
mov
xchg
jl
push
mov
mov
fbld
scas
outs
sub
sub
jne
mov
jmp
pop
(bad)
ror
mov
add
mov
sbb
or
pop
nop
cmps
mov
iret
(bad)
in
add
repnz
icebp
into
sbb
enter
push
mov
mov
pop
out
pop
lods
dec
and
mov
les
lods
movs
repz
rol
in
hlt
imul
scas
and
ins
add
or
scas
js
shl
xchg
out
fwait
call
fcom
and
adc
scas
jp
cmp
scas
jg
jg
lock
xchg
mov
shl
sub
enter
dec
jge
jnp
test
mov
mov
jg
scas
stos
leave
mov
jne
daa
daa
mov
sbb
enter
jg
adc
retf
jbe
bound
add
mov
add
cmp
jnp
xchg
and
je
ret
and
mov
mov
or
imul
pop
bound
sub
in
sahf
mov
or
mov
repnz
cli
pop
or
mov
sbb
pop
aaa
mov
mov
dec
rcl
push
addr16
aad
loopne
add
dec
xchg
sub
fwait
test
cmp
add
sar
add
ins
mov
mul
stc
sbb
imul
bswap
or
push
jno
adc
sub
loope
sub
(bad)
loope
mov
adc
xchg
inc
ins
push
cmp
jge
ins
and
outs
xor
mov
mov
add
test
dec
mov
pop
cs
nop
cmp
mov
xchg
aad
or
dec
lods
arpl
jb
dec
sub
int
fwait
pop
adc
sub
adc
outs
and
sbb
push
(bad)
cmp
das
stos
jg
clc
or
and
lods
mov
pop
push
scas
daa
daa
shl
adc
xor
xchg
cmps
mov
mov
mov
sub
jne
pop
shl
push
stos
xchg
scas
ror
xor
iret
int3
test
xor
jl
push
pop
jp
shl
test
and
inc
lahf
dec
and
pop
mov
leave
mov
cmc
jp
in
or
hlt
sub
inc
inc
adc
jb
xchg
jne
in
mov
mov
shr
pop
or
out
jo
push
je
pop
pop
xchg
pop
xchg
add
(bad)
aas
add
mov
cmc
or
jns
xor
pop
jae
jne
lods
(bad)
je
cmp
fimul
retf
test
mov
cs
jg
sbb
aad
mov
sub
adc
pop
(bad)
fdiv
xor
pop
push
jge
push
dec
jp
call
dec
xchg
pop
and
in
out
mov
lds
sbb
out
mov
cli
ins
dec
and
mov
imul
jns
jl
xchg
shr
jl
(bad)
mov
mov
fadd
adc
add
push
jno
push
cmps
mov
je
push
cmp
call
js
adc
add
loope
add
popa
mov
push
add
sub
and
jmp
mov
imul
cs
adc
and
sahf
adc
mov
out
out
movs
aaa
ins
sbb
aas
or
xchg
xor
sub
push
call
sub
inc
fst
mov
or
shl
adc
xchg
enter
cmp
or
jg
repnz
xchg
or
int
outs
mov
cmps
xchg
in
dec
jae
xchg
push
and
es
into
sbb
ds
out
sbb
imul
pop
ins
xlat
lds
xchg
inc
sub
xor
xor
push
mov
(bad)
mov
fidiv
inc
mov
cmp
out
(bad)
or
pop
mov
(bad)
stos
sub
and
mov
sub
pushf
inc
mov
ins
mov
dec
sbb
icebp
push
dec
sar
scas
lods
cmps
pushf
dec
push
cld
pop
add
pop
mov
sub
xlat
and
test
mov
cmc
and
xor
inc
fwait
in
add
push
mov
sbb
call
adc
fstp
mov
rcr
std
mov
adc
pop
scas
cmp
sub
fs
(bad)
cmp
ja
movs
ret
movs
stos
xor
arpl
mov
ds
jmp
int3
popf
(bad)
jp
adc
mov
loope
(bad)
fs
lods
(bad)
aam
mov
or
jo
adc
fbstp
repz
addr16
fldcw
test
xchg
xchg
cmps
imul
repnz
cmp
inc
rol
push
enter
ss
mov
mov
pop
dec
and
leave
loop
xor
fldenv
jecxz
scas
push
jbe
fld
int
inc
stc
mov
mov
retf
call
and
mov
iret
pop
repnz
popf
jo
mov
outs
or
(bad)
mov
xor
xchg
mov
rcl
cmp
jle
jl
popa
not
es
xchg
rol
dec
and
push
pop
jmp
(bad)
call
xchg
cmp
mov
lods
jno
mov
mov
pop
cmc
mov
into
pop
push
sbb
sub
mov
or
mov
loopne
call
pop
cmps
dec
(bad)
outs
rol
test
iret
push
cmc
mov
shl
je
cwde
cli
jle
sbb
fldenv
test
jle
jnp
add
sub
mov
cmps
movs
(bad)
sub
or
sti
sbb
stos
ins
xlat
lods
mov
in
mov
mov
into
pop
xchg
dec
loop
rcr
lock
mov
xchg
sbb
and
addr16
pop
loope
bnd
pop
repz
in
jecxz
js
push
push
fs
xor
jmp
sbb
aaa
pusha
xchg
aas
mov
push
gs
adc
test
out
cmps
inc
jbe
dec
mov
push
pop
inc
mov
pusha
sub
and
xor
jmp
jmp
mov
retf
mov
cmp
mov
push
sub
lods
and
cli
inc
jns
pusha
arpl
adc
inc
in
sbb
push
cmps
pop
and
push
jne
dec
push
outs
movs
out
xchg
inc
inc
iret
shl
mov
rol
call
lock
lods
aaa
fld
mov
mov
mov
inc
dec
mov
push
loopne
cli
mov
pop
and
xchg
push
es
or
stos
daa
adc
test
imul
mov
out
ret
cli
jo
dec
pop
fcmove
enter
pop
jns
fmul
stos
fcom
gs
xchg
or
(bad)
adc
sbb
adc
arpl
mov
sub
rol
rcl
movs
mov
stos
inc
xor
loop
fisubr
push
inc
push
test
mov
jmp
cmps
inc
jo
dec
lea
mov
push
arpl
adc
sbb
aam
imul
addr16
mov
aad
xor
add
mov
(bad)
stos
iret
mov
sbb
arpl
in
cmp
sub
mov
sar
dec
sahf
(bad)
jecxz
(bad)
pop
bound
sbb
jb
add
sbb
add
ds
inc
fild
mov
push
mov
repz
pop
fdiv
or
mov
out
scas
xor
scas
add
nop
aam
pop
call
sub
mov
mov
adc
pop
or
rol
fcmovne
int
leave
push
loopne
ins
fstp
jno
adc
push
cld
sbb
psrlw
xchg
jmp
rcr
retf
push
inc
ins
push
in
push
data16
mov
pop
adc
push
push
mov
cmp
jno
push
jbe
shr
push
ret
xor
or
lock
jp
out
xchg
mov
or
and
js
rcr
sub
(bad)
stos
popf
sub
or
movs
fnstcw
stc
cli
nop
sub
or
ret
popa
add
sbb
push
imul
xor
in
ins
jns
data16
pusha
stos
(bad)
out
pop
xor
popa
xor
sub
mov
sub
ret
fiadd
pop
dec
inc
leave
or
push
jne
adc
in
movs
xor
mov
adc
(bad)
or
xchg
int3
xor
dec
sbb
cmp
(bad)
fstp
push
fwait
jae
ds
push
aas
add
xchg
sub
jbe
xor
mov
jl
add
pushf
fidiv
jo
sub
sub
jp
loop
popa
mov
(bad)
or
mov
imul
mov
imul
and
push
jns
loopne
pop
ror
mov
push
push
mov
xchg
popa
icebp
(bad)
sub
movs
popa
addr16
mov
mov
add
dec
xchg
jl
jno
xchg
popa
cwde
ror
lock
clc
cmp
add
mov
xchg
inc
push
mov
or
pop
adc
jbe
cld
sbb
add
imul
test
xchg
and
pop
mov
lock
pop
retf
dec
cli
fwait
adc
sar
dec
out
fmul
xchg
mov
out
test
mov
mov
pop
nop
fnstenv
idiv
and
push
out
fild
adc
jecxz
lods
lods
inc
lock
ins
sub
aad
jmp
push
imul
fdiv
lahf
neg
leave
adc
adc
ds
adc
adc
ss
dec
dec
xor
jle
test
repnz
cmps
arpl
mov
dec
into
dec
in
hlt
xor
add
sub
cmp
jno
pop
and
xor
and
icebp
dec
push
or
call
xchg
inc
or
push
scas
sub
loopne
jge
inc
inc
(bad)
cmp
imul
or
add
or
ret
sbb
repz
jge
push
test
dec
push
cmp
popa
jmp
jmp
addr16
cs
clc
retf
stc
add
inc
jnp
movs
xor
push
out
lds
xchg
dec
cld
dec
jmp
mov
mov
add
or
repnz
int
cmp
rcl
stos
out
cmp
jo
test
sbb
stos
jns
div
sbb
js
inc
sub
mov
pop
jo
add
jl
sub
cli
loope
pop
inc
js
or
xchg
sbb
jmp
pop
iret
imul
adc
sub
repz
(bad)
fs
sub
leave
or
out
dec
loopne
sar
stos
cmp
lods
jp
(bad)
mov
sub
sbb
xor
mov
cmp
mov
mov
mov
push
inc
gs
cmp
add
ret
cld
pop
inc
add
ret
or
test
mov
xchg
pop
dec
movs
mov
push
sub
das
test
jmp
test
jo
icebp
(bad)
adc
cmps
pop
das
cs
jecxz
pop
xor
stos
fldenv
push
xor
xlat
aas
ins
aad
or
lahf
jmp
arpl
neg
shr
int3
stc
pop
in
arpl
fstp
push
daa
mov
xchg
pmaddwd
rcr
fs
lods
cmp
and
jb
or
inc
add
outs
repnz
or
arpl
push
addr16
inc
cld
xor
sbb
jmp
xor
pop
icebp
sub
sub
enter
cmp
mov
lods
and
sbb
mov
sub
mov
xchg
cmp
and
adc
lods
ds
jns
push
scas
ins
lock
xchg
stos
(bad)
dec
jae
xchg
mov
lea
dec
in
mov
cmp
les
fisubr
sub
mov
es
adc
popa
jo
or
mov
cdq
mov
(bad)
cmp
cmp
dec
jl
repnz
pop
push
cmp
scas
or
adc
jge
sbb
or
rcr
pop
sub
ins
lods
pop
sbb
xchg
mov
add
pop
xchg
fst
ficomp
movs
popf
mov
xor
push
ja
(bad)
and
ret
stos
inc
push
jge
into
push
sbb
cmp
retf
mov
in
out
fiadd
pop
sub
and
jbe
pop
scas
ss
mov
sub
pop
jecxz
fwait
or
mov
retf
jne
fwait
sbb
iret
shl
jae
ror
xor
mov
fist
in
and
hlt
jne
pop
cmp
push
daa
mov
mov
loopne
jno
mov
enter
in
rol
iret
je
cmp
inc
js
ins
sahf
jge
mov
mov
stos
les
(bad)
cwde
inc
lods
jmp
scas
add
ret
or
pop
xchg
inc
in
sti
inc
jo
push
adc
ret
scas
pop
movs
mov
xor
push
dec
cdq
ds
sub
adc
fs
int
aas
std
cmps
push
add
sub
pop
rcl
jne
je
and
and
mov
jge
xchg
push
(bad)
sbb
into
adc
jno
test
sbb
pop
push
lds
mov
fcomp
arpl
add
sub
pop
fist
jae
lfs
sar
test
pop
bound
pop
repz
shl
clc
add
xor
sbb
ins
pop
inc
sub
push
dec
aam
sti
fdivr
push
pop
imul
pop
es
push
sbb
cld
xor
jmp
add
(bad)
and
xchg
add
dec
cli
xor
mov
test
sub
inc
stos
push
inc
sbb
(bad)
retf
jl
xor
cmp
cmp
imul
sub
dec
cmp
dec
xchg
or
ret
aaa
sub
into
iret
and
movs
lea
push
retf
imul
jmp
aaa
mov
and
mov
call
(bad)
cld
pop
push
jns
adc
in
xchg
sub
push
mov
push
cmp
mov
mov
sti
push
call
mov
and
mov
sub
push
ror
mov
jmp
pop
addr16
pop
mov
jg
mov
fmul
pop
adc
outs
fidiv
push
mov
in
nop
inc
mov
aas
imul
cs
js
sbb
mov
sti
pushf
mov
leave
loopne
aad
jae
jecxz
jle
xchg
push
jnp
jmp
pop
repnz
mov
mov
push
dec
retf
jne
loopne
xor
call
adc
push
sub
jmp
retf
jecxz
dec
loop
shr
push
ja
bswap
rcr
sahf
mov
sbb
repnz
jnp
pushf
and
leave
mov
sti
sub
dec
(bad)
cdq
xchg
mov
xor
lds
mov
mov
inc
js
or
out
dec
adc
not
sub
sti
mov
int
xchg
push
jmp
(bad)
mov
loop
movs
imul
loopne
xor
pop
jno
mov
xchg
add
addr16
cmp
jl
sbb
xlat
shr
rcr
lods
jp
daa
aad
pusha
lock
loope
neg
or
outs
mov
add
jo
cmp
rcr
aam
inc
icebp
(bad)
jb
xor
push
std
mov
mov
scas
shl
gs
pop
dec
lods
je
inc
push
adc
jbe
push
ds
push
sub
xchg
(bad)
hlt
pcmpgtb
push
mov
jl
repnz
jae
pop
or
mov
xchg
jp
loope
daa
push
dec
xchg
jnp
out
ds
push
imul
aam
cmp
pop
xchg
cld
ins
lods
push
sub
jo
mov
fisttp
jmp
adc
xchg
movs
inc
cmc
or
das
sbb
outs
pop
dec
pop
mov
in
enterw
addr16
std
aaa
fbld
cmc
js
push
adc
cmp
jp
int
and
gs
mov
push
inc
dec
jnp
imul
mul
lods
retf
sub
sahf
mov
sub
mov
test
or
clc
jae
cmps
int3
daa
icebp
pop
(bad)
out
or
mov
(bad)
sbb
outs
retf
pushfw
pop
mov
jle
nop
mov
mov
repz
outs
cld
mov
fs
pop
sub
stos
loope
jmp
scas
xor
mov
push
in
rol
dec
pusha
push
mov
(bad)
in
repnz
pop
fild
push
xor
xor
sub
mov
jns
inc
jl
in
adc
pop
je
or
or
adc
cdq
retf
jns
stos
pop
fs
sbb
dec
push
dec
or
sahf
jmp
iret
(bad)
mov
sub
sahf
daa
add
pop
into
fiadd
fld
fdiv
pop
pop
shl
and
mov
dec
sbb
dec
loope
dec
jno
and
or
call
push
cdq
and
clc
(bad)
dec
dec
imul
leave
test
fsubr
lock
xor
out
xchg
repnz
retf
xchg
loop
mov
xchg
ficom
mov
sbb
imul
or
addr16
test
jp
daa
adc
in
jge
lods
and
mov
into
sub
cmps
outs
dec
push
repnz
mov
mov
sub
sub
movs
push
loope
mov
icebp
xor
clc
aaa
lds
pop
das
and
jmp
out
fdiv
js
cmps
dec
mov
cmp
xchg
and
adc
cld
retf
fld
(bad)
pop
aas
in
push
cmc
test
xor
fstp
jle
xor
ret
mov
clc
sbb
shl
enter
jne
push
sahf
int3
push
enter
xor
fs
xor
shl
adc
push
xchg
push
ret
nop
in
xchg
fdiv
movhps
lds
or
mov
out
dec
add
push
dec
and
adc
xchg
stos
les
inc
imul
mov
fsub
ins
and
add
cmp
mov
push
shr
shl
cwde
mov
ss
sbb
cs
es
add
int3
bound
lahf
mov
dec
and
xchg
xchg
sar
xchg
mov
or
lods
(bad)
xor
fidiv
add
cmc
or
hlt
pop
mov
xor
xor
popf
adc
popa
add
leave
inc
imul
pop
ror
add
cld
scas
dec
and
jne
sbb
rcl
mov
sub
stc
cmp
push
jge
inc
data16
neg
push
popf
or
shl
adc
sub
(bad)
push
mov
mov
jno
xor
fcomp
sbb
jo
mov
inc
aas
scas
cmp
jb
push
enter
call
into
push
lods
aad
das
push
cmp
popf
scas
ret
(bad)
pop
fstp
out
sbb
out
test
ret
jnp
jmp
sub
or
jb
in
mov
adc
or
jns
sbb
lock
out
arpl
cmp
aas
jge
pop
int
adc
jne
mov
mov
sti
aas
jns
adc
cmps
mov
loope
mov
mov
jl
ret
mov
jo
adc
sub
(bad)
jno
pop
shl
sahf
push
pop
mov
sub
(bad)
mov
and
pop
and
scas
jae
pop
xor
add
cmp
sti
xchg
ds
in
jmp
pop
pop
cmp
retf
mov
shr
or
mov
jmp
jb
sub
cwde
out
mov
xor
and
mov
dec
add
pop
cmp
fidivr
sbb
pop
ret
scas
lods
xor
shl
loope
inc
dec
xchg
push
fwait
scas
int
std
loope
xchg
lock
rol
push
retf
je
hlt
sbb
test
iret
dec
mov
pop
dec
fs
data16
ret
shr
aam
cld
xor
xor
inc
add
push
leave
pop
pop
ret
mov
(bad)
jno
mov
cli
js
(bad)
cld
cmp
dec
sti
xchg
js
pop
jmp
ret
push
fs
xor
mul
mov
fidivr
fiadd
pusha
bound
ret
lock
ja
mov
jae
mov
popa
jbe
mov
and
jmp
pop
mov
mov
adc
mov
js
rcl
hlt
mov
(bad)
into
add
sub
xchg
sti
dec
cmps
rcr
and
sbb
jp
iret
xchg
iret
xchg
mov
pushf
or
cmp
repnz
rcl
ret
sar
jg
sbb
clc
cld
pop
cmps
sahf
sub
in
jnp
loope
xchg
mov
adc
ins
pop
xchg
stos
gs
ins
xchg
cdq
pop
ins
lock
add
jecxz
push
iret
pop
xchg
ror
add
movs
jl
ror
std
jl
fdivr
pop
jl
push
fdivr
stos
inc
jmp
inc
vmovups
lwpins
dec
jp
mov
test
fstp
inc
push
ss
dec
cmp
popf
das
outs
inc
imul
ja
das
pop
js
push
jae
xchg
(bad)
in
or
in
outs
(bad)
outs
in
and
sbb
jl
cmp
(bad)
retf
mov
(bad)
pop
aas
je
in
(bad)
(bad)
cmc
clc
ins
mov
and
ds
dec
aad
jnp
xor
pop
jmp
in
jl
jecxz
jmp
xor
cmp
dec
xchg
and
icebp
mov
pop
mov
in
pop
and
inc
push
push
push
pop
imul
push
inc
jne
std
call
mov
retf
inc
div
es
jb
jg
js
or
clc
push
cld
cdq
jle
xchg
ds
push
(bad)
cmp
add
mov
cmp
pop
pop
dec
int3
clc
mov
add
and
movs
loop
add
inc
pop
inc
test
imul
lds
lahf
aaa
ja
cwde
scas
push
cmps
popf
leave
add
inc
(bad)
movs
push
loop
ins
jle
into
hlt
daa
arpl
cmp
imul
mov
push
scas
xchg
rcr
in
pop
ja
scas
out
icebp
imul
jmp
xchg
jge
adc
popa
cli
dec
in
and
jle
rcl
xchg
in
mov
adc
(bad)
cmp
scas
sub
cmc
lds
stc
jnp
lea
shr
push
movs
dec
fcomp
fld
repnz
or
push
mov
lods
push
inc
outs
sti
adc
push
add
fild
arpl
dec
mov
xchg
mov
dec
dec
mov
je
enter
push
pop
test
les
mov
ja
pushf
mov
inc
xchg
fadd
out
sar
xor
in
popf
sbb
cli
mov
out
or
in
push
shr
(bad)
lea
lahf
mov
arpl
xchg
retf
cmp
sub
jne
xor
pop
(bad)
jmp
or
movs
test
adc
or
pop
push
add
jle
les
and
mov
imul
js
daa
cmp
pushf
pop
scas
hlt
mov
sub
xor
cmp
mov
ficomp
jb
call
je
pop
repz
lahf
cwde
fcmovnu
sub
shl
stos
shl
cmp
xlat
mov
pushf
mov
and
fsubp
mov
test
mov
push
mov
leave
and
test
rcr
fwait
arpl
sbb
dec
dec
dec
add
lods
aaa
jg
adc
xor
cmps
sub
ret
or
lods
into
mov
fcomp
fdivp
adc
mov
adc
jne
xor
repnz
xchg
cmc
dec
cld
rol
sahf
dec
sub
ror
sub
push
or
gs
push
xor
fcomp
imul
loope
sub
mov
dec
sbb
(bad)
sbb
sub
pop
daa
je
xchg
out
adc
outs
mov
rcl
mov
mov
and
jmp
in
mov
cmp
test
and
add
adc
mov
sti
sbb
push
cli
pop
(bad)
ds
mov
mov
mov
jo
popa
pop
hlt
stos
mov
fisub
int
inc
adc
das
push
push
call
cmps
sub
rol
adc
(bad)
in
jmp
adc
sub
ins
jo
shl
xor
inc
mov
mov
(bad)
xchg
add
push
xor
std
sbb
sbb
mov
into
xlat
in
adc
out
jp
call
and
inc
lea
int3
mov
add
jecxz
sar
repz
inc
push
lods
ins
jmp
pop
xchg
mov
out
gs
ret
call
mov
jo
hlt
fwait
push
inc
fisub
idiv
push
add
icebp
loopne
push
xor
push
call
or
in
or
and
mov
mov
dec
push
xor
test
nop
jmp
loop
lock
cmc
sbb
inc
add
lds
std
add
mov
mov
js
push
xchg
inc
cmp
push
adc
xor
test
push
cmp
sub
or
adc
inc
push
sar
adc
pop
or
nop
imul
test
call
mov
nop
dec
fstp
mov
cdq
out
cmp
xor
ret
or
imul
pop
int
mov
aaa
dec
pop
add
ret
jle
lea
jl
in
aas
fstp
fild
or
cmc
cs
outs
push
push
mov
iret
dec
jmp
sub
imul
call
xlat
rol
nop
jb
arpl
push
inc
mov
ins
cwde
push
sub
jnp
movs
test
loopne
inc
pop
fsub
mov
dec
les
push
es
call
push
test
loopne
xor
push
inc
aas
leave
or
es
inc
je
sbb
mov
(bad)
mov
dec
push
dec
inc
xchg
lock
ins
iret
xchg
pop
loop
movs
ror
jnp
inc
scas
jae
call
mov
mov
aas
jne
rcl
test
push
xor
mov
dec
(bad)
sahf
shl
(bad)
dec
or
add
jns
xor
fst
out
pop
xchg
cs
je
and
fs
mov
inc
call
push
cmp
sbb
and
push
push
mov
inc
inc
jle
daa
call
enter
adc
out
xchg
or
inc
inc
sbb
mov
fld
setg
test
dec
mov
aaa
(bad)
repz
mov
jo
retf
mov
xchg
jl
scas
mov
loope
fsub
out
ss
ds
es
mov
mov
scas
shr
sbb
pop
cmp
popa
xor
jmp
inc
xchg
mov
pavgb
xchg
imul
pop
xor
enter
jg
imul
call
imul
int
xor
jmp
jbe
in
xchg
gs
stos
test
mov
jae
sbb
adc
in
add
nop
adc
retf
pop
std
shl
lds
and
cmp
into
jg
or
pop
push
movs
sbb
mov
test
aad
mov
ds
mov
stos
(bad)
out
jmp
mov
cmps
push
xchg
pusha
(bad)
cmp
lea
adc
inc
sub
les
or
mov
fdiv
cwde
addr16
jbe
repz
pusha
scas
sub
mov
push
xor
lea
test
imul
out
xor
gs
xchg
jno
(bad)
gs
or
lock
cdq
inc
jge
aaa
push
out
push
xchg
out
push
shl
cmp
(bad)
cmc
das
in
mov
aam
test
mov
mov
and
xchg
retf
sbb
popf
imul
xor
fcom
sbb
aas
outs
add
jle
or
cmps
or
scas
sbb
call
mov
movs
ins
sbb
ret
fimul
ret
mov
pushf
cmp
mov
add
shr
ss
ret
lahf
jge
adc
mov
ds
or
fst
mov
mov
pop
fldcw
inc
scas
dec
outs
or
pop
dec
jp
pusha
mov
sbb
xchg
pop
inc
out
cs
xchg
jg
add
pop
cmp
stos
push
inc
cmp
in
mov
mov
jmp
cmps
inc
cmps
or
cmps
(bad)
icebp
imul
imul
mov
ja
into
inc
cmps
dec
or
out
dec
xchg
add
cmp
clc
bound
pop
inc
jge
idiv
pop
stc
repnz
int3
movs
push
(bad)
adc
imul
adc
popf
jmp
stos
adc
dec
clc
aam
jge
mov
stos
cs
and
push
pop
and
sbb
retf
out
jo
movs
shl
(bad)
retf
fdivr
lea
mov
arpl
mov
jl
jmp
fiadd
sub
imul
and
xor
inc
or
jae
jb
ret
adc
sbb
pop
jmp
push
cmc
cmp
push
jae
jp
push
call
imul
xor
sub
cs
lea
ds
in
jp
fimul
mov
or
rol
(bad)
and
jae
fmul
popa
sahf
cmp
data16
fmul
inc
clc
clc
mov
popf
push
mov
inc
xchg
fsub
daa
sub
cwde
mov
ja
mov
repnz
fist
and
or
jae
mov
sbb
loope
pop
minps
or
xor
cmps
out
jmp
push
(bad)
sar
jg
or
and
pop
icebp
shl
sbb
push
pushf
mov
mov
sbb
movs
sti
fdiv
xchg
outs
std
pop
add
sbb
jecxz
std
fsub
imul
jl
js
lahf
loope
mov
pop
mov
pop
push
cmp
fst
jecxz
out
mov
aam
add
out
addr16
pop
int3
fild
jae
movs
test
adc
xchg
stos
or
and
imul
lahf
xchg
add
push
imul
into
lock
pop
add
mov
xor
dec
jmp
int
(bad)
int3
sti
push
jmp
pop
aam
sbb
and
and
ja
mov
mov
or
xor
sub
test
int
fist
call
sbb
inc
stc
mov
jns
test
pop
and
adc
das
enter
xchg
lea
adc
repnz
jbe
rcl
in
xchg
arpl
repz
mov
mov
icebp
test
inc
pop
mov
mov
jnp
inc
adc
in
les
jae
out
jle
adc
test
mov
call
(bad)
mov
in
mov
bound
dec
in
mov
test
popa
jl
xchg
sub
push
jno
(bad)
xor
lds
mov
aaa
push
and
std
jnp
sbb
es
adc
sbb
sbb
ins
adc
sub
bound
pop
shl
mov
arpl
lock
add
xlat
mov
jns
test
push
shl
leave
fstp
jmp
and
pop
mov
adc
shl
mov
xor
pop
dec
test
adc
loope
push
cld
cs
and
sahf
scas
fwait
cmc
xchg
imul
sti
js
fcmovu
scas
xchg
push
pop
sbb
sub
cmps
mov
mov
mov
xchg
push
mov
xlat
add
mov
and
hlt
xchg
leave
dec
ds
sub
(bad)
xor
xchg
fisttp
out
fcomi
pop
cli
sbb
and
cmp
cmp
dec
jmp
push
xchg
movs
xchg
lahf
aad
mov
cwde
ins
xchg
jl
pop
jne
jmp
pop
push
icebp
push
stc
push
neg
out
inc
jmp
(bad)
enter
push
sbb
xchg
or
sar
inc
jae
inc
std
or
(bad)
retf
mov
pop
es
inc
in
inc
sub
in
shl
addr16
popa
daa
mov
ins
lea
test
and
out
push
stc
xchg
adc
xor
sbb
movs
in
mov
icebp
fnstenv
mov
call
xchg
push
add
xor
leave
ins
div
inc
pop
and
and
and
sub
adc
je
mov
adc
xchg
scas
adc
out
cs
ret
out
mov
sub
jle
enter
imul
paddusb
dec
shl
sub
test
daa
sub
and
and
retf
outs
push
outs
test
inc
jne
in
jno
xor
ret
cdq
out
fsubp
sub
out
sub
push
add
adc
in
iret
push
test
sbb
ret
push
and
cwde
mov
ds
ss
adc
and
popf
pop
enter
add
xchg
cwde
inc
cdq
icebp
(bad)
ror
dec
aaa
daa
jecxz
jnp
push
test
ret
cmp
jmp
push
lahf
lods
mov
xor
inc
sub
adc
stc
mov
mov
mov
cmp
dec
inc
or
and
mov
mov
loopne
or
imul
arpl
gs
pop
cmps
cmc
add
ret
or
jno
gs
mov
scas
std
adc
jne
mov
neg
dec
sbb
push
fnstcw
mov
jl
(bad)
mov
xchg
dec
sub
pop
and
shl
jnp
aad
xchg
into
out
or
xor
cs
cmp
xchg
scas
int3
push
movs
inc
sbb
into
mov
fdiv
jb
ins
in
(bad)
dec
mov
out
ret
rol
gs
(bad)
lds
jb
ret
rcl
imul
mov
fisubr
add
adc
or
add
and
sub
jmp
adc
fucomp
or
icebp
push
mov
push
adc
cmp
inc
nop
push
popf
and
scas
sahf
dec
cmp
sub
pop
fs
std
or
adc
xchg
mov
enter
or
cmc
fist
mov
nop
ins
ror
cmps
push
js
ins
call
xchg
jmp
cmc
movs
imul
outs
push
inc
pusha
nop
(bad)
or
push
dec
ins
(bad)
scas
sbb
or
mov
and
mov
mov
inc
cmp
jg
jp
outs
mov
pop
pop
add
mov
(bad)
and
(bad)
sti
mov
test
mov
jmp
retf
sub
sahf
popf
out
jp
cmp
inc
ins
cmp
ficom
push
or
mov
or
or
or
cs
inc
outs
mov
popf
stos
je
push
jl
add
(bad)
fdiv
loopne
cmps
mov
jb
and
fmul
retf
mov
fild
fwait
or
xchg
adc
fistp
outs
push
xchg
jmp
int
add
jl
loopne
dec
push
int
sahf
lock
xlat
pop
sbb
loope
adc
(bad)
adc
mov
sti
cmp
aaa
or
stc
ss
xor
(bad)
and
gs
shr
xlat
es
aaa
lahf
mov
imul
in
cmp
dec
pop
dec
(bad)
js
ds
xchg
mov
push
cmp
shl
inc
call
in
popf
out
inc
push
jmp
dec
daa
ss
(bad)
xchg
icebp
adc
xor
lds
add
icebp
(bad)
out
pop
jo
imul
pop
aaa
imul
mov
push
popf
and
mov
sub
iret
jmp
or
lock
mov
popa
in
jns
cmp
fdivrp
xchg
jl
cmp
fiadd
fnsave
jl
mov
jp
das
les
loop
lds
jmp
js
neg
scas
les
(bad)
cmp
sub
sbb
bound
pop
dec
iret
push
cmp
das
adc
cmps
mov
shr
jnp
icebp
aam
adc
lds
imul
lock
adc
jb
ror
ror
(bad)
test
daa
sbb
mov
cdq
pop
gs
ins
and
jno
je
lods
xor
adc
push
fs
movs
aam
jmp
xor
jno
out
jmp
(bad)
icebp
inc
shl
cmp
stos
push
mov
imul
popa
loopne
test
js
xor
push
sbb
mov
sub
pop
rol
imul
cli
fistp
(bad)
out
push
(bad)
pop
add
sahf
pop
push
clc
stos
pushf
pushf
jle
enter
mov
add
jns
push
test
pop
loope
fdivr
mov
dec
mov
les
adc
out
sub
pop
movs
(bad)
stc
stc
dec
mov
sbb
jne
lahf
pop
xchg
mov
icebp
out
xor
cmps
leave
push
sub
(bad)
out
aam
cmp
in
int3
pusha
retf
xor
mov
push
pop
jg
ret
jle
movs
sub
lods
fld
inc
in
inc
mov
sub
push
push
je
mov
(bad)
je
iret
mov
jecxz
cwde
xor
dec
dec
test
xchg
(bad)
(bad)
sbb
jg
adc
xchg
cmp
adc
fstp
lea
sbb
iret
fisttp
cmp
rol
sbb
enter
add
movs
hlt
(bad)
popa
ds
scas
in
test
das
push
ficom
dec
test
jo
std
jae
inc
inc
outs
dec
add
sti
hlt
movs
xor
imul
fcom
jge
out
stc
jo
mov
inc
cmp
mov
push
adc
(bad)
pop
adc
add
scas
pop
in
push
outs
std
add
popf
sbb
gs
les
mov
jle
jnp
psubusw
sbb
mov
ror
loopne
add
xchg
test
inc
pop
stos
(bad)
fdiv
mov
push
or
in
dec
inc
nop
sbb
cmp
xor
and
icebp
imul
pop
mov
aas
cmp
cs
or
push
lods
imul
and
sbb
xor
mov
in
xchg
ret
(bad)
jl
repnz
push
dec
dec
stos
addr16
retf
pusha
or
arpl
aam
popf
and
inc
xchg
add
out
jns
pop
fcomp
jnp
jo
xchg
es
xchg
pusha
sub
push
sbb
mov
sub
and
mov
cmps
mov
xlat
inc
cmps
inc
es
lods
sub
jne
pop
fisttp
cmps
vpackssdw
clc
jl
push
push
shl
push
dec
rcr
call
push
mov
fsubr
rcl
out
cld
add
pop
fst
fisub
repz
adc
mov
xchg
inc
xchg
cmp
cdq
cmp
pusha
enter
mov
add
cs
and
out
mov
xchg
in
lea
adc
and
xchg
cmc
test
adc
sub
add
cmp
ins
mov
sti
jmp
fnstsw
movs
xor
les
lock
shl
fs
ret
stos
add
jl
push
fcmovnu
ficomp
cmp
mov
jae
xor
push
lea
call
inc
nop
mov
retf
jnp
fsubrp
adc
sbb
push
dec
iret
cld
fs
dec
push
inc
xor
inc
rcr
adc
(bad)
mov
xchg
stos
sub
xchg
mov
mov
sti
fsubp
ret
imul
aam
pusha
dec
test
cmps
mov
push
xchg
sti
push
and
cwde
lock
jle
enter
sbb
ret
out
retf
(bad)
mov
and
shr
pop
imul
mov
shl
push
lock
into
or
fucomp
cs
pusha
(bad)
sbb
mov
inc
aad
rol
imul
xlat
call
push
push
sub
in
adc
inc
out
ss
fidivr
movs
push
xor
cli
std
loopne
add
nop
jne
pop
mov
jmp
imul
push
sti
clc
push
int3
(bad)
push
or
fimul
test
sbb
jmp
cmp
retf
ret
sbb
jecxz
jecxz
fiadd
push
xor
jmp
xchg
sbb
cmp
push
stos
out
inc
ret
imul
mov
ror
sbb
js
jnp
loop
xor
xchg
sbb
cmp
mov
bound
jae
xor
or
jb
imul
(bad)
retf
pusha
stc
das
call
scas
hlt
aad
pop
iret
mov
clc
jbe
ds
out
lds
add
call
mov
loopne
(bad)
imul
nop
mov
call
fwait
dec
pop
adc
xor
pushf
push
jp
cmp
aaa
xchg
xlat
cmp
popa
push
rol
dec
cmp
cmp
pop
repnz
pop
dec
jmp
jns
jnp
xor
stc
inc
inc
gs
jge
sbb
cmp
(bad)
aam
sub
add
xchg
push
mov
test
leave
dec
jae
lods
xchg
fadd
xchg
popa
or
sti
xor
popa
ror
jo
add
mov
pop
bound
shl
out
mov
add
rcr
push
sub
adc
push
push
cdq
xchg
mov
jp
cmp
pop
sbb
mov
stc
or
rcl
xchg
jge
inc
mov
je
shr
jo
push
in
fild
imul
jecxz
mov
mov
pop
jmp
inc
jmp
add
pop
pop
adc
ret
sub
bound
mov
dec
imul
mov
fwait
das
fs
add
pop
cmps
imul
lock
xor
pushf
movs
ret
data16
(bad)
movs
out
loopne
jo
sub
pop
inc
stos
rcr
lahf
dec
lahf
xor
inc
xchg
scas
add
daa
sbb
sbb
jg
test
xchg
sbb
(bad)
cmps
sub
inc
sub
(bad)
cwde
pop
movs
cmc
repnz
(bad)
daa
and
fsub
ja
push
push
loopne
lods
int3
add
dec
mov
inc
and
repz
(bad)
and
cmp
call
push
mov
or
pushf
lea
jl
jge
xor
jp
ret
mov
sub
out
loope
aas
in
clc
cdq
rep
shr
shl
ss
pop
cmps
dec
lods
retf
mov
xchg
mov
(bad)
in
mov
mov
add
xor
inc
mov
and
pop
out
loope
shl
xchg
or
pop
and
xchg
sub
xor
push
mov
mov
test
adc
test
shl
pop
aaa
mov
fild
or
les
lods
inc
or
mov
(bad)
dec
into
ret
call
xor
adc
mov
sbb
and
inc
mov
jecxz
inc
loopne
call
inc
in
ret
mov
test
rol
mov
and
mov
sbb
sbb
or
inc
push
repz
test
jne
(bad)
neg
fild
mov
mov
stc
xchg
cwde
xor
(bad)
bound
push
pop
add
cwde
add
in
ss
out
inc
jmp
icebp
mov
imul
ror
mov
pop
sbb
std
xor
dec
adc
mov
fidivr
enter
mov
test
xchg
adc
pop
in
neg
push
xor
cli
sbb
mov
dec
lahf
jne
xchg
outs
arpl
cmc
add
int
sub
into
fild
aaa
imul
pusha
adc
sbb
sti
dec
loopne
add
mov
ins
push
mov
mov
mov
jae
out
aad
in
and
sbb
xor
xor
stc
mov
inc
mov
popf
sub
movs
rol
popa
aaa
outs
push
(bad)
rcr
add
into
in
jb
enter
cmc
mov
or
xchg
fimul
mov
inc
jns
and
inc
pinsrw
ss
cmp
inc
mov
inc
idiv
sbb
and
push
bound
out
inc
add
rcr
xchg
pop
mov
out
dec
mov
mov
push
sbb
stc
loop
mov
inc
sahf
mov
add
pusha
push
jo
jp
or
xchg
mov
std
retf
xchg
push
or
ficom
xchg
mov
fdivr
(bad)
push
aas
enter
rcl
fwait
jmp
retf
mov
cmc
jo
in
shl
scas
scas
xchg
mov
(bad)
mov
sbb
mov
std
ins
ror
(bad)
out
dec
or
dec
mov
sbb
ins
add
das
sbb
repz
push
add
mov
dec
jns
mov
dec
jnp
mov
and
jne
sub
mov
push
in
lds
fimul
scas
mov
inc
sbb
neg
enter
jmp
jne
pop
lods
in
xchg
jge
mov
add
je
ret
dec
imul
adc
stos
int
pop
outs
xchg
test
mov
dec
ror
les
sub
jne
(bad)
enter
sub
dec
shl
aad
add
pop
enter
cmps
rcr
fiadd
rcr
repnz
dec
ins
in
scas
or
dec
xchg
mov
jge
retf
and
cli
test
push
sub
aaa
sbb
adc
leave
jmp
pop
loopne
ror
xor
leave
inc
lea
rol
dec
sub
cmps
test
pop
outs
and
or
loopne
jl
pop
mov
test
xchg
xchg
mov
loop
inc
fxch
xchg
or
xlat
pop
adc
adc
das
in
sti
xchg
mov
dec
pop
push
ja
aas
push
(bad)
ror
jle
sti
sub
jnp
jmp
push
pop
or
xor
in
sar
adc
jp
jbe
hlt
test
jb
or
test
dec
fcmovb
ror
dec
push
xor
mov
push
inc
stos
aad
jl
(bad)
cmp
leave
in
xchg
inc
and
mov
push
push
test
je
mov
jecxz
(bad)
into
outs
es
int
lock
outs
jb
loopne
outs
sahf
rol
ret
outs
xor
inc
mov
push
jns
mov
stos
ret
sahf
popf
into
aaa
push
pop
jle
sub
movs
clc
cmp
mov
inc
mov
or
cs
into
jmp
fwait
std
jb
inc
cwde
stos
cdq
mov
jg
xchg
and
cmp
scas
xor
mov
push
cli
in
sar
jge
repz
jg
sbb
jp
push
loope
inc
xchg
and
(bad)
sbb
pop
out
ja
aam
cs
or
cmc
xchg
hlt
enter
add
rol
push
mov
xchg
add
clc
into
aam
jnp
ret
push
rcr
addr16
fcom
out
adc
jo
mov
adc
mov
movs
inc
push
mov
fucomip
lods
xchg
icebp
pop
inc
add
out
jecxz
mov
stos
sbb
call
daa
xchg
pusha
cld
or
push
fwait
mov
xchg
sub
out
xlat
lock
mov
in
adc
cwde
mov
je
jb
inc
pop
ins
dec
dec
adc
mov
push
popf
(bad)
fld
fistp
and
ret
icebp
and
mov
stc
mov
je
inc
mov
push
in
ins
test
jne
test
cmps
scas
or
push
push
push
(bad)
rcr
(bad)
(bad)
movs
adc
stc
iret
inc
ficomp
out
in
xchg
mov
daa
movs
leave
inc
jle
adc
inc
add
dec
jnp
sub
pop
jp
outs
leave
fdivp
sbb
mov
in
mov
jbe
in
jno
aad
cmps
xor
sub
jmp
lods
outs
aad
add
lds
scas
(bad)
adc
or
lea
fadd
sub
jge
pusha
cmps
outs
inc
sub
(bad)
in
xchg
mov
xor
out
pop
div
jo
pushf
aam
dec
imul
std
test
jecxz
pop
inc
sub
inc
mov
clc
cld
movs
dec
popa
jmp
inc
xlat
mov
cmp
dec
mov
(bad)
(bad)
std
movs
pop
mov
movs
int
popf
or
call
mov
pop
and
in
in
jecxz
aas
int3
retf
rcr
std
mov
mov
cdq
lods
in
in
test
stos
std
pop
pop
or
lahf
setnp
push
push
loopne
or
enter
xchg
or
mov
mov
out
cmp
lods
jecxz
fwait
stos
jbe
pop
pop
(bad)
sahf
call
shl
lahf
call
and
lock
xchg
xor
aaa
sbb
imul
paddusw
fwait
aad
mov
push
shl
dec
mov
xor
popa
mov
gs
mov
ja
add
push
jb
sbb
cs
test
mov
cmp
dec
cli
fndisi(8087
aam
jo
mov
jne
daa
outs
and
cmp
(bad)
out
call
push
ret
jp
cmps
aam
jne
pop
dec
mov
int3
gs
pop
fstp
add
lods
test
add
bound
xor
or
sahf
mov
shr
push
jmp
adc
or
das
inc
jne
mov
pop
xchg
mov
mov
lods
outs
aam
mov
out
and
add
ror
xchg
push
or
xchg
jle
div
jge
sbb
lahf
xchg
stos
mov
stos
cmps
aam
add
scas
or
loopne
push
xor
ret
arpl
(bad)
adc
dec
mov
sub
dec
mov
jg
hlt
sbb
out
sbb
sub
in
mov
iret
cmp
cmc
xchg
push
into
xchg
scas
sbb
push
fisttp
sub
test
fs
jns
inc
xchg
or
adc
or
in
sahf
mov
and
mov
and
retf
dec
cld
cwde
push
mov
or
or
(bad)
loope
mov
pop
xor
dec
jnp
push
cwde
inc
popf
lahf
mov
(bad)
hlt
inc
int
daa
sbb
mov
popf
mov
rcl
inc
and
pushf
inc
out
xchg
jmp
xchg
dec
je
mov
jle
std
xor
pop
pushf
push
aaa
shl
dec
retf
lods
sbb
mov
stc
scas
push
lea
jecxz
push
dec
ds
scas
in
fmul
test
pop
daa
inc
add
sbb
mov
push
sahf
pop
jmp
sub
ror
not
sti
cmp
icebp
(bad)
mov
popf
(bad)
cmp
aas
mov
(bad)
aas
dec
sub
(bad)
imul
add
add
fisttp
xchg
lea
xchg
push
dec
adc
fistp
mov
jmp
scas
mov
xchg
or
jg
add
int
js
imul
jno
cmc
aas
pusha
aaa
push
out
retf
sbb
mov
dec
rol
jb
jnp
outs
or
jnp
mov
shr
pop
xlat
and
pop
mov
mov
adc
icebp
or
cs
sub
leave
lds
retf
rcl
mov
jmp
jmp
push
xor
fadd
jle
dec
cwde
jnp
in
xor
xor
mov
and
mov
fdiv
scas
fsub
xor
stos
jne
xchg
ret
shr
fwait
aas
push
push
pop
add
pop
(bad)
les
and
push
mov
scas
mov
int3
adc
int3
xor
and
xor
lds
stc
aaa
sbb
cmp
push
fsubr
mov
pop
aad
fcom
loop
inc
push
out
fdivr
dec
cdq
ins
mov
mov
sbb
pusha
and
mov
gs
icebp
mov
adc
pop
ins
test
mov
dec
std
iret
lods
jnp
int3
aas
or
or
push
aad
aad
call
or
inc
in
test
add
dec
loope
scas
js
fimul
xor
mul
outs
mov
nop
xchg
fadd
pop
mov
(bad)
jns
sub
hlt
dec
test
pushf
call
mov
(bad)
test
jno
loope
cmc
fstp
pop
cld
(bad)
cmp
mov
enter
daa
adc
pop
fist
shr
jbe
lds
sub
test
fcom
cs
iret
not
or
fmul
jne
add
mov
mov
cmp
mov
push
fmul
out
dec
cmp
add
or
(bad)
and
shl
sbb
popf
and
fsub
inc
retf
loope
mov
fmul
sub
cmp
loope
push
in
mov
es
add
mov
push
mov
jne
cs
push
sub
add
ins
loope
shl
lahf
lea
je
push
scas
inc
mov
mov
mov
es
adc
push
je
mov
mov
aad
jne
retf
ror
add
mov
iret
or
adc
pushf
push
aam
std
add
cli
dec
xor
and
int
mov
cwde
test
cmps
push
sub
je
pop
repnz
mov
retf
enter
sub
inc
and
mov
dec
test
(bad)
jmp
xor
clc
add
es
shr
push
or
dec
gs
jmp
inc
data16
fwait
mov
lea
xor
cdq
mov
jmpw
(bad)
sbb
ret
sub
cs
test
arpl
dec
ss
clc
jg
test
mov
lsl
mov
xor
mov
sub
mov
xor
and
jle
inc
pop
inc
sti
push
add
push
jp
push
xchg
push
cmps
call
out
mov
sub
mov
mov
sub
into
iret
test
ret
js
aad
mov
inc
mov
imul
clc
mov
cli
push
sub
jno
inc
(bad)
mov
fs
and
test
and
movs
xlat
vmovhpd
fldcw
xor
mov
pusha
dec
repz
inc
shr
adc
cmp
(bad)
jge
test
push
imul
mov
mov
cmp
cs
scas
and
jge
les
int
fnstcw
ja
sahf
mov
jp
pushf
cli
ins
jae
fisub
inc
loopne
pushf
jmp
dec
adc
out
xchg
mov
sbb
inc
mov
repnz
cmps
mov
sidtd
xchg
dec
and
int3
nop
out
push
pop
inc
rep
test
mov
imul
call
stc
mov
push
xchg
retf
retf
das
ds
and
push
retf
jmp
add
test
shr
pop
dec
ret
ret
stos
repz
imul
inc
sti
jae
mov
mov
(bad)
cld
mov
sysexit
cld
adc
into
or
je
bound
push
push
dec
dec
mov
dec
sahf
dec
mov
jmp
mov
cmc
cs
mul
js
aad
sbb
jecxz
xchg
jb
jl
cli
mov
daa
mov
or
cmp
pop
mov
push
dec
mov
retf
fwait
jge
pop
jb
adc
mov
fcomp
fidiv
sub
popf
push
iret
cmp
and
xchg
and
mov
in
xchg
fucomi
loop
dec
iret
mov
inc
or
cmps
push
push
int3
test
mov
mov
rcr
mov
lock
popf
(bad)
into
shl
adc
fist
jno
scas
sub
and
aam
add
scas
cld
outs
leave
ja
cmp
loop
lahf
sub
clc
imul
aad
pop
sahf
jl
arpl
jae
stos
pop
repnz
mov
xor
test
pop
mov
fcmovu
and
xchg
mov
xor
xchg
push
pop
cmc
sbb
aam
sub
loop
pop
push
jmp
push
out
push
rcl
inc
xor
dec
sbb
xor
or
shr
add
sahf
pop
ja
jno
sub
mov
movs
out
or
push
pop
pushf
or
retf
sbb
pop
xor
cmp
rol
dec
in
(bad)
das
and
cld
or
fild
jmp
inc
xchg
es
test
dec
mov
clc
into
shl
div
jecxz
ret
mov
aam
add
inc
pop
(bad)
sti
pop
push
mov
push
and
sbb
out
sbb
addr16
or
std
pop
add
mov
pop
dec
pop
icebp
and
scas
adc
and
outs
dec
sub
(bad)
add
pop
sbb
mov
mov
sbb
fldcw
std
push
mov
(bad)
pop
and
les
sub
add
sbb
and
aam
xlat
test
xlat
inc
jl
jl
mov
gs
inc
leave
dec
arpl
jno
xchg
pop
scas
loopne
je
jb
shr
xor
lods
mov
aas
shr
out
retf
lds
fidivr
jg
ret
and
and
data16
mov
lds
push
cmp
xor
push
gs
add
sahf
mov
fadd
out
push
iret
add
in
aad
push
xchg
hlt
xor
inc
shl
lods
nop
shl
ja
leave
pop
outs
dec
jg
int
call
inc
loop
pop
inc
rsm
mov
pop
xchg
call
outs
cs
and
loope
mov
pop
fld
inc
and
xchg
jne
repnz
push
pop
inc
or
adc
leave
sbb
cmp
pop
mov
test
iret
loopne
and
jno
or
jns
out
cs
shl
ins
movs
(bad)
aam
mov
sub
sub
jecxz
adc
push
sbb
fmul
sub
stos
cld
movs
add
inc
repz
aad
sbb
cmps
stos
mov
adc
cmp
dec
imul
mov
xchg
cmp
inc
add
cmp
jg
jl
mov
add
jbe
mov
sub
fisub
dec
fwait
popa
jmp
jg
aaa
iret
loopne
bound
sbb
jbe
lahf
loopne
fcomip
imul
mov
mov
pusha
in
les
xor
sahf
ret
xor
xchg
push
add
sbb
fs
out
push
in
lods
or
lea
adc
mov
into
or
mov
cld
stos
and
dec
dec
sbb
dec
mov
mov
cmp
les
scas
retf
jecxz
aad
sub
pop
pop
imul
lahf
adc
stc
ficom
and
punpckhwd
ja
push
mov
mov
push
sub
neg
xor
es
shl
xor
fldcw
je
push
rcl
mov
cmp
dec
cmps
jbe
mov
aad
cmp
push
jecxz
pop
push
add
jg
and
push
lea
push
or
xchg
imul
and
cmp
add
and
xlat
repz
cld
sbb
shl
push
add
sub
mov
das
pusha
jo
in
retf
(bad)
scas
mov
cmp
shr
sub
fadd
lds
inc
or
cmp
jne
add
mov
cmp
xor
mov
pop
shr
adc
(bad)
jp
mov
mov
jecxz
or
pop
(bad)
pop
movs
or
mov
adc
ja
mov
jbe
xchg
mov
(bad)
push
sti
xor
nop
fiadd
std
sbb
out
rcl
mov
cld
jg
mov
dec
adc
sub
jns
test
cdq
jbe
sbb
fld
push
mov
dec
inc
shl
and
out
(bad)
mov
sub
dec
xor
mov
inc
and
out
dec
inc
ficom
or
(bad)
outs
inc
add
int3
push
xchg
dec
outs
es
mov
sahf
dec
in
mov
pop
push
dec
inc
dec
xor
mov
jg
mov
dec
test
out
fcmovb
outs
cmps
mov
add
mov
dec
dec
xchg
ret
sbb
xor
fist
xchg
sbb
sbb
dec
mov
mov
imul
pop
sub
out
shr
ins
sbb
cmp
je
dec
movs
push
xor
xchg
inc
jb
jmp
test
and
adc
xor
or
mov
jb
or
inc
dec
add
sbb
test
and
out
stos
cmc
pop
pop
cmp
daa
jecxz
pop
test
fmul
xchg
adc
sbb
(bad)
pusha
cmps
stos
aaa
add
add
sbb
xchg
cmp
add
(bad)
pop
mov
xchg
add
cld
jmp
fnstsw
fmul
je
mov
call
shl
push
sti
pushf
adc
jne
push
test
sbb
pop
sbb
les
cld
and
dec
push
and
jno
nop
pusha
(bad)
add
movs
leave
out
das
pop
pop
or
dec
or
sahf
dec
sub
ret
ja
repnz
xor
outs
jge
stos
pop
icebp
dec
shl
and
mov
xor
imul
cmp
shr
sbb
stc
add
jecxz
pop
call
sbb
(bad)
iret
test
xchg
xor
dec
xlat
repnz
add
hlt
ins
in
les
or
pop
dec
(bad)
adc
or
ins
xor
stc
push
and
cs
stos
jnp
mov
pop
xchg
cmp
(bad)
mov
push
jge
jnp
loop
test
lahf
nop
stos
sub
cdq
lea
int
sahf
ret
mov
xor
and
push
stos
jbe
pop
and
cdq
pop
mov
lods
push
movs
mov
ret
xchg
int3
or
(bad)
stos
hlt
cdq
out
mov
(bad)
mov
je
add
rol
xor
ja
xor
inc
push
xor
xor
ss
stos
retf
mov
inc
add
into
jmp
(bad)
adc
or
es
ffree
mov
sub
loop
nop
lods
cmp
sbb
inc
jl
mov
dec
enter
lds
pop
fst
imul
mov
sub
xchg
sar
aaa
dec
xor
xlat
xchg
jmp
mov
test
repz
push
(bad)
int3
popf
sbb
retf
loope
hlt
pop
mov
rol
mov
in
jae
dec
fnstenv
mov
sub
push
xchg
add
mul
ficom
mov
pop
in
xlat
mov
push
mov
mov
sbb
adc
lahf
jno
xor
mov
(bad)
daa
inc
xor
push
bound
ret
push
cld
adc
std
mov
repnz
loopne
and
inc
fnsave
cmps
sar
fist
mov
mov
xchg
pusha
mov
retf
retf
xor
ret
jno
inc
mov
shr
lock
(bad)
ror
adc
lods
int
fisttp
adc
shl
fwait
int
and
retf
xchg
es
imul
xor
repz
mov
ds
mov
mov
mov
cmp
pop
fst
dec
inc
push
pop
aaa
out
ins
dec
xor
jmp
shl
mov
push
xlat
jne
cmps
xchg
gs
sub
ret
cmps
out
outs
imul
jae
cmp
jnp
xor
lods
ret
mov
into
cmps
loope
jg
cmp
outs
addr16
lock
mov
fstp
hlt
sbb
nop
dec
movs
mov
(bad)
out
enter
dec
(bad)
stc
inc
popf
adc
aam
mov
lods
ret
into
cs
enter
xchg
adc
jp
aaa
aam
xlat
scas
ds
jl
enter
mov
add
and
jmp
ins
or
call
push
loope
hlt
ja
das
push
xlat
push
inc
add
xchg
mul
ds
and
scas
(bad)
push
xchg
test
cmp
call
jbe
and
jno
and
push
test
lods
mov
pop
mov
es
inc
loop
add
pop
xchg
xchg
pop
add
sahf
cmp
test
retf
xor
push
inc
or
mov
test
icebp
push
sbb
or
in
xchg
js
ret
fidivr
lock
sub
push
lds
cmc
and
push
add
arpl
jne
dec
jo
addr16
xor
push
leave
xchg
lea
aad
repz
lock
xchg
fbld
arpl
sub
not
mov
in
ins
add
mov
pop
mov
push
mov
fidiv
leave
add
mov
rcr
popa
pop
cmp
js
int3
mov
push
xchg
mov
aam
push
shl
mov
es
cmps
retf
xchg
clc
mov
(bad)
retf
jne
mov
or
mov
add
ficomp
aaa
push
adc
sub
int
out
dec
sar
jae
in
movs
ds
mov
das
mov
movsx
call
test
sbb
out
inc
pop
cmp
stc
out
dec
cmps
shr
(bad)
in
dec
repz
test
push
out
sbb
mov
mov
nop
jl
test
in
mov
jg
inc
fcom
out
cmps
int
add
out
pop
adc
fs
fdiv
push
cmps
add
das
pushf
xchg
gs
leave
sbb
sbb
push
jmp
xchg
mov
cmps
or
mov
adc
jne
mov
fwait
or
inc
xor
pushf
std
mov
ss
mov
and
ret
xor
aaa
in
leave
mov
fs
dec
mov
jns
mov
mov
push
adc
pop
mov
mov
inc
xor
mov
lock
sti
or
push
pop
rcl
mov
adc
test
dec
jne
ds
jne
sar
int
xor
adc
out
movs
pop
mov
lods
xor
loopne
aam
mov
test
xchg
in
cmp
or
ficom
xlat
neg
mov
and
xlat
fwait
std
sbb
int3
mov
sti
add
rcr
(bad)
jno
push
mov
cwde
xor
not
mov
pop
out
mov
(bad)
sti
out
out
cmp
mov
dec
cmps
cs
xor
xor
out
mov
lods
je
and
jbe
mov
in
addr16
xchg
out
xor
ret
cwde
lods
ins
mov
push
(bad)
pushf
jbe
inc
xor
pop
mov
or
std
and
cmovo
loope
cwde
int
push
and
mov
push
push
aas
adc
out
bndldx
sbb
add
and
jbe
mov
cmp
add
ins
or
add
std
or
lods
in
retf
push
jnp
repnz
shr
xor
xchg
adc
inc
push
cmp
mov
mov
mov
ret
movs
xlat
(bad)
cli
xchg
cmp
fcmovnbe
addr16
cmp
lods
pop
nop
lods
jnp
ss
jmp
jno
into
call
cmc
jge
sbb
push
xor
adc
sub
sub
aam
ds
pop
popa
ja
outs
adc
(bad)
shr
nop
and
aaa
adc
jbe
lahf
and
and
ffree
jo
push
js
gs
test
out
pop
push
ins
aad
dec
adc
retf
or
retf
ds
or
outs
inc
and
loop
bnd
adc
cmps
fadd
mov
shl
ja
js
sbb
jmp
movs
dec
jb
test
shl
cmp
shr
lds
add
pop
in
js
xlat
ret
fiadd
(bad)
jmp
or
jns
cmp
jecxz
xor
popf
cmps
or
xchg
clc
push
inc
jmp
dec
mov
sub
jb
fidivr
dec
or
xchg
shl
xor
or
shl
xor
ds
ror
repz
(bad)
or
push
push
jns
mov
out
or
cmp
dec
sar
jmp
jle
aaa
aam
dec
jmp
daa
es
xchg
add
and
scas
sbb
xchg
and
dec
sub
dec
sub
mov
pop
pusha
cmp
mov
adc
stos
das
jno
cmp
ret
or
inc
popf
(bad)
push
fst
ins
and
mov
fsubr
in
push
jp
fcmovnb
pop
mov
mov
popa
test
cmp
aaa
cld
ins
or
in
repz
adc
aad
jecxz
stos
or
je
xchg
jbe
add
lahf
dec
shl
imul
jne
sahf
scas
add
jmp
xor
in
dec
imul
inc
lds
cmp
ret
mov
or
xor
mov
mov
repnz
(bad)
lock
je
mov
movs
inc
mov
(bad)
cmps
dec
movs
cld
enter
fbld
std
push
neg
push
mov
les
mov
pusha
and
ins
adc
aam
jns
adc
cmc
and
add
jge
mov
jge
out
dec
jg
fbld
pop
and
fcmovbe
push
loop
pop
stos
mov
sbb
fs
pop
adc
(bad)
mov
cwde
or
sahf
shl
clc
adc
mov
cli
push
xor
push
clc
sahf
leave
(bad)
aam
jg
push
out
and
jae
pusha
out
std
and
xor
aad
mov
stos
dec
xor
aad
adc
jle
pop
jge
push
imul
mov
mov
test
and
mov
int
dec
jge
daa
jle
sbb
cmp
xor
fcomip
inc
iret
or
jns
sub
mov
iret
jge
jno
sbb
bound
sbb
cmp
jmp
repnz
fs
aaa
in
add
push
mov
bound
inc
adc
pop
jnp
(bad)
cmc
jno
lahf
push
xor
mov
xchg
sub
pop
add
out
repnz
ss
add
imul
(bad)
call
out
mov
fcmovb
(bad)
sbb
add
cmc
sbb
dec
pop
sar
std
add
je
es
movs
iret
ja
cmp
pop
imul
retf
push
push
inc
mov
mov
pop
lea
fwait
adc
loopne
mov
imul
test
jne
mov
push
mul
adc
jp
loopne
mov
push
pop
inc
and
sub
out
daa
sub
retf
out
test
jns
div
jno
test
jle
arpl
data16
push
cmp
inc
out
pop
mov
sbb
fs
js
inc
inc
adc
inc
or
xor
cdq
sti
pusha
cwde
(bad)
js
or
clc
mov
lds
lahf
cmc
jecxz
and
xor
out
adc
sub
mov
jmp
jle
xor
outs
mov
aas
inc
push
out
mov
pop
cmp
push
outs
sub
sar
and
fmul
dec
jle
push
pop
mov
adc
xchg
cmc
pop
in
cmp
mov
cmps
ins
mov
test
scas
mov
jl
loopne
fnstenv
mov
in
adc
call
retf
sub
cmc
out
mov
jo
mov
cdq
shl
jns
sbb
and
push
add
adc
mov
pop
loope
mov
and
push
ret
shl
std
fistp
call
jno
std
sub
mov
mov
(bad)
xchg
jnp
or
popf
and
cmps
inc
enter
in
jmp
or
adc
pop
jecxz
popa
int
test
retf
adc
lods
push
imul
fild
in
nop
mov
fldcw
popf
retf
das
jo
loopne
xchg
call
fdivr
out
adc
xchg
popf
test
cmps
and
je
xor
mov
inc
push
mov
lods
out
inc
aas
cmp
jae
xchg
out
loop
aam
ss
mov
cmp
iret
fnstsw
repz
sbb
adc
push
xor
arpl
pop
cmp
mov
jl
dec
xor
mov
mov
popa
test
fnstenv
in
fisttp
sub
mov
test
push
js
mov
js
inc
xchg
mov
cmp
mov
dec
(bad)
xor
movs
push
cwde
jns
mov
push
std
retf
loopne
mov
dec
mov
lea
leave
or
pop
dec
shl
mov
(bad)
gs
xchg
jo
inc
adc
sbb
inc
jp
in
pop
mov
pop
sub
push
sub
fisub
aas
aaa
and
mov
push
cwde
xor
cli
stos
push
jne
xlat
leave
ss
les
mov
pop
mov
aad
xchg
and
pop
movs
clc
(bad)
and
loope
fld
mov
inc
leave
cdq
jl
mov
xor
shl
arpl
cmps
call
je
mov
js
xchg
jbe
loope
or
retf
xchg
cmp
retf
sbb
jno
lods
cs
mov
(bad)
inc
and
shr
in
data16
scas
inc
inc
mov
ss
jnp
rol
test
xor
(bad)
js
xchg
cmp
pop
jns
mov
cli
out
pusha
shl
add
mov
xor
ret
add
(bad)
in
or
xor
aad
push
loope
or
mov
rcl
sub
rol
pop
jp
out
nop
sub
sbb
dec
jp
inc
adc
xchg
dec
fsubr
(bad)
cmp
inc
cmp
(bad)
inc
sub
or
sub
sti
pop
(bad)
loop
mov
in
nop
data16
popa
jl
inc
and
ins
add
std
sub
(bad)
call
stos
shr
mov
sub
loopne
mov
sbb
aad
idiv
jmp
inc
(bad)
ins
into
mov
sbb
pusha
in
dec
push
lods
xor
push
pop
ucomiss
cli
mov
mov
(bad)
icebp
cmp
aaa
xor
call
cmp
out
xchg
pop
push
push
and
hlt
push
ja
pop
mov
jne
ins
adc
imul
js
repz
cmp
enter
fisttp
fs
jae
cli
sbb
mov
add
and
mov
sub
pop
and
je
push
loopne
hlt
repnz
jmp
out
lea
jecxz
xor
das
jp
or
pop
or
or
xchg
bound
arpl
mov
pop
inc
fbstp
fadd
fst
fs
jb
scas
test
iret
ds
sub
or
or
jmp
lea
sbb
jp
adc
mul
and
sti
mov
pop
adc
jecxz
dec
mul
pop
jae
shr
mov
xchg
pop
shr
pop
dec
fcomp
push
sbb
push
mov
mov
sub
push
jmp
push
icebp
out
sbb
rcr
push
adc
add
xor
jnp
xchg
lds
cmp
adc
ja
out
retf
inc
pop
mov
mov
or
jg
adc
lock
lods
mov
out
psubw
sahf
aad
jnp
and
jle
adc
jo
sub
jl
pop
jno
xor
mov
imul
ror
sub
adc
adc
mov
mov
shr
and
jle
jmp
jb
lahf
or
mov
adc
push
call
rol
mov
std
push
cmc
popa
push
sahf
mov
repnz
or
mov
ins
shl
cmp
sti
clc
(bad)
stos
adc
sbb
jmp
push
jo
xor
ret
sar
out
and
sbb
mov
dec
sar
aam
rol
pop
div
and
mov
pop
lea
cmp
movs
scas
mov
xor
mov
aaa
mov
movs
add
repnz
xchg
lds
xor
cmps
push
cmp
daa
mov
inc
adc
in
sahf
cmp
add
jb
mov
repz
jp
lods
mov
pop
fwait
adc
imul
or
fwait
int3
sti
dec
xchg
pop
movs
jbe
scas
push
pop
bound
loop
cmps
push
xchg
rcr
inc
cmc
std
add
(bad)
lahf
inc
inc
fwait
push
in
xchg
mov
dec
add
ja
loopne
push
test
iret
jne
lahf
div
fbld
add
jle
cmp
jae
sub
dec
mov
dec
loop
les
or
pop
movs
sub
or
or
mov
push
jae
out
or
and
dec
outs
pop
rcr
mov
arpl
jg
shl
push
adc
sbb
cmp
cmps
fucomp
sar
std
add
fs
push
ds
jmp
addr16
fs
js
retf
int3
mov
xchg
dec
xor
fidivr
repz
lock
cmc
mov
popf
jl
pop
push
fsubp
sar
fisub
nop
(bad)
in
or
push
adc
xor
cwde
dec
push
sbb
adc
inc
in
call
xor
fdivr
je
xchg
push
xchg
push
fsub
pusha
faddp
neg
inc
xchg
pop
cmp
mov
push
xor
fld
outs
(bad)
test
mov
std
sub
jnp
mov
dec
jmp
adc
jmp
aam
sbb
cmp
fnstsw
xchg
ss
int
jns
scas
lods
or
push
mov
rcl
cs
push
pop
fsubr
xlat
sbb
movs
adc
and
or
pushf
nop
fwait
mov
push
jae
imul
cmc
inc
dec
jl
loope
sub
in
stc
jb
mov
mov
jle
pop
loop
out
or
in
adc
or
cmp
dec
fisttp
test
jb
adc
inc
repz
pop
push
sbb
pop
dec
xor
sbb
push
fst
fdivr
cmps
xor
lods
dec
xlat
lahf
mov
cmps
outs
repz
mov
dec
daa
pop
cwde
mov
adc
jge
aam
or
out
adc
push
fs
inc
in
jnp
jg
ret
stos
addr16
xchg
pop
inc
pop
std
fmul
je
xor
mov
cld
mov
push
mov
enter
stos
repnz
adc
retf
test
scas
sub
retf
dec
rcr
imul
xor
fptan
push
test
sub
or
sub
data16
addr16
mov
int
xchg
push
pop
rcr
adc
data16
xlat
xor
push
pop
ins
jl
sub
repnz
xchg
xchg
and
div
daa
ret
add
or
dec
and
inc
mov
cmp
(bad)
mov
js
ins
fild
cmps
sti
in
pop
and
mov
popa
push
outs
pop
shr
scas
sbb
pop
dec
sbb
xor
int3
jg
das
call
pop
shl
fxch
(bad)
or
(bad)
jecxz
gs
inc
sbb
call
xchg
(bad)
sbb
(bad)
sub
push
test
ja
stos
xor
dec
jl
cli
and
aaa
inc
in
cmps
dec
lock
adc
sbb
aaa
or
mov
test
mov
pop
cmc
mov
leave
cmps
or
aad
xor
iret
or
and
test
cmp
mov
out
stos
sbb
std
mov
dec
pop
sub
stos
ins
cmps
shr
mov
lods
sbb
or
xor
pop
xor
cmc
xor
lahf
sbb
je
sbb
adc
mov
std
cs
test
sub
int3
xchg
lods
sub
xor
fwait
xor
enter
aad
popf
adc
or
mov
add
jmp
dec
add
fimul
ds
jmp
nop
inc
fxch
je
pop
out
pshufw
xchg
sbb
(bad)
repz
out
push
enter
add
fsub
inc
cmp
call
and
xchg
and
fcmove
push
and
and
add
mov
or
or
jb
adc
mov
xchg
sbb
xlat
adc
shl
arpl
and
outs
rol
into
outs
retf
arpl
sahf
fisubr
lds
(bad)
cmp
ds
mov
and
add
ficomp
or
out
call
in
mov
mov
mov
pop
add
repnz
mov
sbb
dec
or
xchg
push
mov
sub
or
fld
mov
xchg
(bad)
cmc
iret
xchg
push
cwde
stc
(bad)
jmp
inc
(bad)
dec
(bad)
outs
mov
cmp
std
dec
inc
retf
loop
push
fdivrp
mov
adc
daa
neg
sbb
mov
and
imul
pop
iret
pushf
pop
pushf
shl
inc
sub
xor
xlat
les
mov
mov
loop
ret
jge
push
or
movs
pop
dec
dec
retf
xchg
sub
mov
ss
(bad)
in
push
int
punpcklbw
int3
sti
pop
cmp
or
xchg
or
prefetch
not
iret
neg
sbb
inc
inc
mov
cdq
scas
xor
fucomp
push
push
sub
iret
ins
jecxz
test
inc
mov
dec
push
inc
dec
adc
push
(bad)
sub
inc
bound
or
dec
sahf
repz
and
sbb
clc
and
xor
loopne
fcomp
xchg
add
ret
and
inc
or
addr16
enter
mov
jp
jmp
ss
mov
repnz
sbb
jl
sub
sbb
add
rol
jge
ds
std
jge
mov
repnz
jecxz
js
inc
sbb
mov
aas
lahf
add
mov
and
fdivrp
push
(bad)
ret
jmp
ins
cmp
lods
shr
or
xor
cmp
jmp
fsubr
hlt
push
outs
sub
fidiv
jo
fiadd
or
repz
cdq
rol
in
mov
jmp
lods
loop
dec
or
fiadd
and
inc
and
(bad)
sbb
call
sub
and
inc
outs
cs
addr16
cdq
pop
cmp
scas
xor
loope
ds
mov
pop
mov
fldenv
or
in
jno
jg
jmp
pop
cmp
add
mov
call
xor
cdq
outs
pusha
js
or
sbb
push
leave
cmp
sub
cli
pop
pop
es
xlat
imul
inc
push
pusha
dec
jb
push
or
mov
movs
add
sbb
add
add
xor
push
jmp
pop
mov
popa
int
(bad)
xchg
popf
inc
jb
stos
jmp
mov
push
pop
movs
pop
inc
or
in
xor
mov
dec
dec
jnp
sbb
lea
sub
and
(bad)
adc
outs
fisubr
adc
stc
xchg
mov
outs
push
retf
adc
xchg
enter
cmc
or
mov
fisub
xor
or
mov
repz
sub
add
pop
cld
add
imul
test
dec
mov
jmp
adc
push
outs
inc
xchg
or
mov
or
xor
mov
ins
mov
cli
mov
push
jmp
jb
int3
stos
rcl
or
inc
shr
stc
jge
sbb
lock
adc
jns
daa
adc
aas
(bad)
(bad)
fisttp
(bad)
icebp
(bad)
pop
cdq
mov
pop
ins
repz
jg
out
jnp
in
retf
push
sub
(bad)
xor
xor
push
pop
std
jl
inc
(bad)
enter
test
adc
out
rcl
mov
sub
int3
fisttp
or
ins
xchg
add
in
stos
cmp
addr16
(bad)
xlat
jg
xchg
inc
and
inc
push
push
jmp
jmp
mov
fld
dec
xor
addr16
add
scas
add
shr
dec
shl
cmp
aas
or
fiadd
int
add
inc
xlat
mov
mov
or
mov
mov
bound
push
jno
sub
sti
jge
mov
jle
sub
imul
lods
mov
push
pop
mov
add
cmp
ds
test
lock
push
dec
test
sti
pop
mov
xchg
cmp
xchg
jl
pop
fdivr
jns
add
clc
jb
test
btc
fidiv
mov
inc
mov
mov
(bad)
int
jp
push
add
mov
imul
aam
jge
and
pop
sar
in
mov
(bad)
das
aas
adc
adc
std
push
test
mul
pop
mov
cs
outs
sahf
mov
pop
mov
mov
inc
in
jmp
fsubr
pop
movs
(bad)
mov
dec
fistp
jmp
jge
xchg
or
cmps
loope
pop
add
test
stc
out
ficom
hlt
div
sbb
pop
into
dec
test
arpl
inc
dec
xlat
inc
fidiv
sbb
test
mov
mov
mov
xchg
lea
jle
imul
fs
(bad)
stos
mov
fcomip
and
push
jge
test
mov
xor
inc
nop
pop
adc
(bad)
or
or
cmp
sar
cdq
mov
fwait
aas
mov
add
push
mov
or
out
bound
jl
dec
push
push
call
push
repnz
or
popa
enter
cmp
and
jge
shl
xor
fisttp
int3
fisub
adc
mov
dec
pop
and
push
jecxz
sahf
ret
mov
clc
arpl
dec
mov
xchg
pop
sub
push
jl
lahf
xlat
hlt
in
mov
pop
pop
push
inc
lahf
ja
mov
std
or
pop
push
push
sbb
scas
call
push
aas
xor
cmp
inc
push
jg
pop
ret
scas
inc
shr
mov
in
sub
sbb
or
movs
cmps
(bad)
es
hlt
fwait
or
bound
dec
sub
cwde
fisubr
xchg
retf
(bad)
cmp
les
jge
gs
sub
mov
sbb
fdiv
fcmove
push
jnp
mov
xchg
mov
inc
adc
pop
adc
xor
mov
adc
sub
ins
or
ins
sbb
pop
sbb
jecxz
inc
fisub
jns
mov
inc
or
sti
pop
rol
pop
test
dec
ins
jno
sub
jle
je
inc
out
cwde
jle
pusha
js
mov
cmp
or
(bad)
int
rcr
xchg
push
pusha
into
mov
and
(bad)
mov
(bad)
popf
push
push
xchg
mov
jl
mov
jecxz
jl
rcl
clc
sub
fs
or
lahf
mov
jmp
enter
out
movlps
cmc
adc
rcr
dec
into
rcr
xor
gs
nop
mov
jecxz
mov
scas
std
add
dec
hlt
ins
ret
mov
mov
shl
xor
inc
sub
adc
out
aam
adc
loopne
bound
xor
push
jb
lods
jbe
xor
jns
rcr
inc
mov
adc
fdivr
sbb
mov
xor
pop
push
out
out
mov
(bad)
shr
cmp
sbb
or
imul
xor
mov
push
aam
neg
rol
mov
or
sti
je
neg
xchg
fild
fst
push
pushf
push
sahf
dec
jecxz
xchg
cmp
outs
mov
dec
jno
add
stos
fwait
push
iret
lods
pop
cmp
pushf
push
push
ds
ret
jnp
and
add
or
adc
adc
xor
(bad)
lods
test
push
outs
cmp
fsubp
(bad)
out
cmp
aam
mov
inc
(bad)
push
add
data16
mov
rcr
mov
push
gs
dec
out
cmp
les
adc
xchg
cmp
cs
into
idiv
sub
retf
int3
mov
ficom
jns
enter
les
lahf
inc
mov
addr16
inc
arpl
sti
fmul
clc
push
test
lahf
mov
adc
pop
add
aam
or
xchg
and
test
adc
inc
jmp
cld
cmp
add
sub
cwde
imul
mov
rol
sub
stc
stos
mov
test
shr
xor
gs
pushw
fst
fistp
cmp
mov
add
mov
and
push
jg
rcr
push
das
mov
xchg
adc
pop
inc
faddp
mov
xchg
inc
jbe
call
push
or
push
inc
pop
jl
cmp
mov
xlat
dec
push
sti
add
sbb
jne
outs
cli
fsubr
xor
pop
arpl
fmul
mov
icebp
jnp
cmp
or
jmp
cdq
dec
jle
repz
or
cwde
jno
mov
ss
inc
retf
rcr
xor
pusha
shl
cmp
jmp
imul
jbe
pop
ret
cdq
dec
xchg
scas
std
pop
or
cmp
out
cmp
int
into
ret
sbb
outs
jg
cwde
fmulp
fstp
in
scas
inc
inc
pusha
enter
aas
in
mov
fdiv
pop
add
cmp
jae
lea
das
add
cmp
xchg
xchg
repz
mov
add
push
mov
bound
movs
pop
xor
mov
cmp
loopne
cwde
pcmpgtw
ret
or
ror
xchg
ja
and
iret
push
and
shl
addr16
(bad)
pop
jecxz
or
xchg
icebp
hlt
mov
test
pop
pop
into
xchg
jle
cmp
popf
xlat
mov
(bad)
mov
mov
daa
pop
pop
mov
mov
sbb
sti
es
jl
mov
ins
jae
cmps
movs
xchg
(bad)
mov
dec
mov
fistp
test
shl
mov
mov
arpl
sub
shl
xor
mov
inc
and
sti
icebp
retf
or
add
dec
mov
and
out
and
aam
xor
pop
dec
mov
jno
push
inc
mov
mov
test
inc
mov
mov
and
push
xor
mov
add
jl
imul
clc
das
adc
jle
mov
push
jp
lods
mov
sti
or
retf
xor
es
(bad)
cmps
imul
jno
or
in
inc
(bad)
out
inc
mov
sar
mov
sbb
icebp
add
push
clc
add
ret
cmp
shr
jmp
xchg
adc
(bad)
call
jp
mov
mov
push
jg
mov
pop
pop
in
out
mov
bound
movs
or
scas
repnz
add
and
add
and
add
jno
ja
lods
sti
iret
mov
xabort
push
xor
and
xchg
shr
int
stos
fadd
adc
(bad)
pop
pop
shr
ins
pusha
jmp
push
inc
fwait
mov
sbb
mov
sub
sbb
cmc
mov
ret
mov
pop
cld
cdq
sub
ret
or
jmp
fmul
add
or
test
push
xchg
push
je
and
mov
ficomp
dec
les
jne
loop
aam
xor
or
xchg
sub
or
and
jmp
add
ins
ret
fstp
(bad)
mov
jp
jecxz
push
jecxz
cmp
mov
xchg
jno
jns
pop
xor
pop
push
pop
aad
inc
pop
imul
in
jmp
aad
mov
in
inc
sub
cmp
push
retf
pop
scas
leave
lea
sbb
es
xchg
fdiv
mov
or
rcl
js
mov
dec
xchg
mov
nop
fs
or
push
cld
push
sar
or
(bad)
ror
das
sub
or
sub
jg
sub
int
out
clc
stos
inc
pop
sti
jecxz
jne
cmc
fisubr
mov
jge
gs
and
(bad)
mov
add
xchg
cmc
fist
js
sbb
sbb
(bad)
push
mov
jnp
test
mov
outs
in
or
rcr
fisttp
icebp
or
leave
fcomip
sti
(bad)
fimul
adc
movaps
cdq
sub
adc
xchg
mov
lahf
adc
sub
jecxz
mov
jbe
fld
mov
aaa
adc
(bad)
fld
out
imul
fstp
sbb
cmp
sbb
(bad)
in
retf
adc
push
pop
push
pop
imul
xor
push
daa
xchg
mov
mov
sbb
adc
push
fild
or
lahf
sti
cmps
hlt
sbb
mov
(bad)
dec
je
xor
xchg
sub
call
sbb
mov
add
movs
sbb
dec
sub
cmp
jp
add
add
mov
jmp
or
xchg
add
xlat
sbb
ror
sub
arpl
add
and
cs
push
je
sbb
push
pop
xchg
inc
fwait
imul
outs
jl
mov
out
and
mov
movs
cmp
iret
push
popf
rol
test
ret
repz
movs
call
add
or
or
adc
lods
mov
idiv
inc
sub
sbb
scas
sub
jae
repz
jne
ss
outs
cmp
jns
ror
shr
pusha
sub
test
addr16
pop
fcmovnbe
and
mov
les
sbb
jo
test
cmc
and
scas
test
neg
loop
ins
mov
jmp
xor
jns
push
add
fdivp
sahf
into
sbb
mov
add
out
sub
(bad)
bound
dec
es
mov
les
retf
cmc
mov
mov
mov
xchg
pop
loop
adc
cwde
cwde
ja
fiadd
adc
repz
push
xchg
out
mov
(bad)
sub
and
iret
jp
push
inc
popa
xchg
inc
lods
ja
in
popf
arpl
sbb
inc
stos
xor
adc
jno
icebp
sub
mov
mov
mov
(bad)
pop
pushf
fucomip
stos
add
jbe
jae
jne
add
popa
sub
sub
(bad)
cld
fidiv
mov
call
rcr
in
sbb
stc
push
push
std
cmp
cdq
adc
mov
out
push
pop
lods
ja
data16
jb
ins
inc
lds
cli
in
jo
push
inc
push
and
sar
cmp
call
lods
dec
xchg
(bad)
mov
mov
out
js
xor
(bad)
pop
sub
jl
idiv
push
mov
pop
adc
cwde
pop
pop
push
and
retf
xor
out
gs
sbb
mov
adc
repz
pop
adc
mov
add
iret
(bad)
out
dec
and
xchg
add
nop
or
or
add
clc
not
jmp
dec
data16
sbb
xor
xchg
out
cld
sbb
je
inc
dec
pop
xchg
jmp
mov
arpl
push
pusha
inc
sbb
nop
mov
inc
das
in
out
mov
or
lock
out
shr
mov
jo
and
div
xor
mov
repnz
fptan
mov
repnz
leave
fisubr
cs
rep
sub
sar
repz
cmc
pop
adc
cld
popf
push
icebp
rol
or
xchg
adc
neg
mov
mov
jl
mov
retf
call
data16
cmp
adc
jns
and
retf
sbb
or
push
adc
mov
push
xor
ror
xchg
adc
adc
xchg
pop
sub
dec
mov
inc
sbb
mov
call
mov
jne
push
popa
popf
pop
xor
sub
out
not
jb
inc
fsubrp
dec
xor
inc
loopne
sbb
mov
mov
mov
xchg
adc
mov
xchg
adc
push
jge
or
cs
jo
xor
jmp
jge
mov
cmps
dec
sub
push
(bad)
mov
pop
ins
push
mov
sti
addr16
les
sub
pop
xchg
cmp
rcr
add
sub
test
dec
pop
fs
sub
xor
fld
js
add
push
jg
(bad)
jmp
rcl
lods
iret
mov
cmp
out
jb
fcomp
aaa
add
sbb
fcmovbe
push
loop
sub
dec
pusha
cmp
or
push
push
xchg
mov
push
or
push
or
inc
jl
and
mov
ins
aam
scas
lahf
jns
gs
cmp
sub
jmp
aas
pusha
fnstenv
dec
pop
mov
repz
jns
and
inc
inc
in
into
pop
mov
stos
mov
inc
push
jne
sub
stos
or
cmc
dec
and
fisttp
pop
and
popf
cmps
movs
adc
push
add
push
jle
(bad)
das
retf
xor
call
xor
fistp
and
xor
and
pushf
test
ror
adc
scas
arpl
mov
movs
add
mov
test
mov
pop
test
test
or
mov
ret
push
test
(bad)
jns
mov
scas
ins
mov
lock
dec
(bad)
and
and
loop
loope
jne
stc
nop
cld
cdq
je
jb
out
cmp
pop
pop
or
push
mov
cmps
xchg
adc
or
push
ins
push
popf
sub
xor
enter
xchg
sbb
arpl
(bad)
push
or
rcr
adc
(bad)
rcr
jmp
mov
mov
dec
stos
or
sbb
push
mov
adc
mov
mov
cmp
cli
adc
xor
mov
addr16
ins
mov
cmp
out
inc
enter
jecxz
or
xchg
mov
call
test
mov
call
addr16
imul
pop
mov
xor
push
adc
pop
sahf
adc
cs
mov
jo
dec
fbstp
xlat
call
xchg
aam
shl
js
loopne
mov
lds
add
cs
or
int
(bad)
cmp
jbe
add
mul
adc
adc
xor
xchg
push
ja
pop
jbe
xchg
stos
sbb
cmps
xor
or
pop
dec
xchg
cmp
shr
xchg
out
mov
mov
mov
push
pop
nop
scas
sti
inc
push
jbe
inc
xchg
ret
push
(bad)
cs
mov
cmp
lods
ret
cmp
dec
inc
pop
add
sub
nop
call
das
js
jmp
xchg
imul
ret
loope
dec
stos
inc
or
pusha
clc
xor
test
mov
mov
icebp
inc
(bad)
mov
imul
mov
int
mov
mul
mov
add
or
scas
cmp
jns
push
push
cli
and
dec
jecxz
jecxz
xor
fcomip
ins
jno
jno
add
sub
inc
add
xchg
ret
leave
sti
push
ret
or
test
imul
push
or
jp
out
xchg
dec
sub
xor
in
inc
push
xchg
jge
test
jne
repz
mov
jno
mov
ins
jne
adc
cmp
fbstp
pop
xchg
clc
and
ds
mov
mov
adc
aaa
not
repz
in
add
call
pusha
jecxz
adc
inc
aaa
pop
std
mov
jg
xor
xor
mov
ds
retf
pop
mov
xchg
adc
rcl
shl
xor
fdivr
mov
cmc
add
dec
test
pop
retf
and
inc
mov
or
push
cdq
das
ret
ss
mov
push
ins
jno
and
jno
test
out
jo
call
(bad)
clc
leave
dec
fdiv
(bad)
bound
cmps
stc
bound
xor
adc
xor
popf
rol
pop
ret
or
add
fidiv
repz
movs
cs
cmps
cmp
hlt
in
imul
push
push
inc
jbe
(bad)
movs
jne
pop
lods
inc
mov
and
int
dec
sub
clc
mov
idiv
in
ds
mov
push
sahf
jge
arpl
rcr
pop
sub
dec
fnstsw
and
jge
pop
cld
mov
or
mov
pop
sbb
jmp
or
xchg
cmp
stos
dec
push
inc
jnp
(bad)
inc
push
call
mov
mov
cmp
fsub
add
push
push
inc
jae
sbb
cmp
or
outs
stos
frstor
sub
sbb
dec
cdq
push
popa
ret
repnz
jmp
(bad)
leave
jg
or
loopne
dec
jge
in
sbb
mov
adc
jmp
jb
xor
mov
sbb
icebp
fmul
fcmovnbe
(bad)
push
call
(bad)
dec
push
dec
test
mov
and
(bad)
mov
xchg
lods
call
and
out
stos
inc
fstp
outs
sbb
sub
inc
jl
aam
aad
popf
arpl
lock
sar
cld
adc
jne
jnp
loope
jmp
cmps
sar
and
add
imul
add
cs
dec
mov
scas
dec
jnp
inc
inc
xchg
ret
gs
xlat
or
jecxz
adc
fisttp
jae
jg
xchg
imul
cmp
mov
mov
mov
jmp
adc
lds
mov
sar
push
and
or
ins
dec
data16
shl
loop
std
adc
dec
jmp
mov
and
hlt
repz
or
add
push
stc
outs
mov
cmp
xchg
sahf
and
rcr
pusha
sti
sbb
pop
outs
mov
push
ret
in
lods
add
push
and
xchg
retf
jle
jecxz
rol
pop
or
fdiv
dec
mov
xor
call
jp
(bad)
inc
sbb
push
fdiv
pop
jnp
fbstp
test
push
mov
jge
sbb
dec
div
jle
mov
addr16
jl
xchg
bound
jp
pushf
mov
sqrtps
fisttp
cmps
shr
dec
inc
cmp
leave
ins
les
in
pop
sbb
jp
popf
shl
test
jb
and
ds
sbb
xchg
jmp
hlt
push
push
inc
je
ret
mov
sbb
pop
jns
pop
jmp
stos
lock
call
push
jae
or
mov
cdq
adc
out
icebp
inc
arpl
in
es
inc
or
dec
pop
cli
outs
pop
in
and
push
mov
pop
test
adc
jmp
push
mov
cmp
enter
fld
inc
out
sub
(bad)
pop
pusha
xor
test
and
mov
mov
lods
xor
xor
int3
xchg
and
pop
jmp
dec
cmp
mov
dec
jno
jo
sbb
shl
stos
repz
pop
popf
int
push
mov
pop
(bad)
loopne
repnz
cmp
adc
ss
test
sbb
hlt
sbb
cli
push
lods
pop
sub
shl
imul
bound
ins
jae
xchg
xchg
shr
ja
mov
scas
cmp
enter
jbe
push
test
ja
imul
xchg
(bad)
in
mov
pop
adc
hlt
aas
and
xor
mov
adc
inc
or
pop
mov
std
jl
cwde
les
mov
test
test
call
dec
movs
jmp
sub
std
pop
cmovge
sub
fst
in
dec
neg
inc
add
(bad)
inc
scas
cwde
mov
lea
call
mov
mov
xor
sub
rcr
jo
loope
push
mov
in
mov
cmp
push
xchg
xchg
adc
loope
mov
mov
enter
adc
shl
lea
mov
pop
loop
lds
ret
xchg
(bad)
or
scas
rcr
sbb
cld
mov
xchg
mov
mov
sar
or
sbb
pop
add
or
push
(bad)
dec
dec
mov
shl
vmread
icebp
mov
jb
in
outs
push
inc
inc
cmp
ret
adc
imul
out
in
mov
enter
in
aam
mov
mov
ja
test
daa
sbb
lock
pop
dec
adc
dec
aas
push
mov
cmps
jne
cmp
mov
scas
jge
js
repz
mov
ror
sti
retf
or
push
jle
jmp
sbb
cdq
idiv
sub
sbb
xchg
mov
push
jp
repz
push
cmp
shl
sub
scas
scas
jecxz
test
sbb
pusha
ds
arpl
pushf
(bad)
loope
pop
push
mov
call
jge
lods
or
pop
int3
push
fdivr
mov
dec
hlt
arpl
ret
enter
cmps
das
imul
sbb
fnsave
fcom
and
and
mov
loope
inc
nop
mov
sar
push
test
push
fdivr
cmp
mov
mov
dec
dec
mov
add
repz
stos
inc
add
test
fistp
out
repz
(bad)
inc
ins
in
cmp
or
dec
mov
out
sti
jo
mov
jmp
scas
add
xchg
adc
outs
mov
mov
fneni(8087
int3
dec
retf
jbe
call
xchg
push
loopne
scas
sub
inc
aam
pop
adc
les
imul
pop
mov
mov
retf
addr16
cmp
lods
sub
add
scas
and
mov
sbb
gs
add
mov
inc
add
or
push
sbb
sbb
aam
rol
cmp
(bad)
icebp
dec
cmp
jo
mov
mov
push
adc
or
test
mov
retf
push
pop
addr16
dec
dec
bound
dec
xor
fwait
push
and
add
xchg
ret
sti
rcr
aas
jne
fsub
lahf
imul
std
push
mov
cwde
lahf
mov
xor
sub
dec
xchg
movs
add
lods
mov
clc
push
mov
mov
jae
int3
retf
icebp
sahf
jno
jecxz
xchg
and
inc
inc
in
sbb
jmp
test
or
repnz
(bad)
ins
dec
loope
ss
xor
aam
push
aaa
bnd
or
dec
dec
pmaxsw
bound
cli
push
and
mov
sub
popf
stos
cli
cmps
mov
push
pushf
ficom
xchg
loopne
push
sti
cmp
mov
jp
mov
jmp
cwde
mov
push
push
inc
push
addr16
xchg
stos
mov
sub
inc
retf
movs
sar
pop
rcl
inc
in
ficom
gs
xor
xor
(bad)
loop
ret
add
mov
stc
adc
xor
xor
scas
inc
add
daa
bound
mov
pop
(bad)
mov
pop
adc
push
sub
icebp
lds
sub
jns
mul
cmp
cmc
(bad)
inc
sahf
ret
sbb
aam
pop
pushf
std
(bad)
mov
cmp
sbb
inc
popf
or
int3
stos
pop
push
cmp
movs
or
dec
shl
cld
retf
imul
cs
and
je
icebp
mov
out
sub
jl
enter
cmp
mov
stos
mov
imul
cmp
ds
ffree
jp
nop
mov
dec
push
mov
inc
xlat
adc
cmps
dec
sahf
mov
retf
fist
enter
or
push
xlat
jmp
push
out
xchg
sar
fisubr
sbb
shl
mov
or
shr
mov
add
ficom
push
mov
mov
pusha
out
mov
or
push
mov
xchg
cli
gs
pusha
sbb
inc
pushf
xor
pop
(bad)
push
mov
mov
push
and
add
sbb
sub
pop
ss
mov
push
and
retf
cmp
push
mov
mov
push
imul
sub
dec
mov
arpl
and
and
mov
add
and
sbb
outs
jge
xor
mov
popa
loop
adc
into
cli
ins
cld
dec
adc
pop
popa
sub
rcl
fbstp
xor
or
and
test
(bad)
dec
fild
into
mov
or
outs
and
push
pop
(bad)
and
mov
fdiv
lods
scas
sbb
cld
shl
or
out
xor
ret
inc
ss
ins
mov
sbb
cmc
gs
test
arpl
sub
xchg
cmp
xchg
movs
call
js
or
popa
push
fcmovnu
enter
repnz
sub
adc
add
push
jle
mov
movs
call
out
pop
ins
pop
cmps
add
out
cmp
xor
movs
xor
cmp
add
mov
sbb
mov
ror
call
xchg
push
sbb
xchg
(bad)
test
pop
push
or
xlat
jns
and
movs
dec
dec
or
retf
enter
cmp
in
push
cmp
pushf
shr
(bad)
test
scas
mov
cmp
sbb
loop
or
xor
outs
mov
mov
sub
lds
adc
pushf
test
inc
sbb
(bad)
push
sub
nop
sub
xchg
call
mov
ins
or
dec
jmp
sbb
push
add
sbb
fsub
cli
mov
cmps
ror
jnp
movs
jle
imul
(bad)
fild
add
push
ins
dec
adc
ja
adc
sub
repz
add
fbstp
jmp
lea
cmp
adc
sub
retf
push
les
mov
mov
dec
xchg
sahf
mov
adc
ficomp
cmp
shl
(bad)
ins
cmps
loope
jp
retf
shl
sub
xor
xchg
(bad)
sbb
add
xchg
cli
dec
mov
push
(bad)
pop
pushf
xchg
fisub
sbb
pop
mov
dec
pop
ja
stos
jge
xchg
jae
xchg
out
sbb
xor
sub
adc
gs
mov
scas
aad
inc
inc
or
push
pop
retf
(bad)
xchg
push
dec
das
scas
mov
(bad)
(bad)
mov
and
fs
sub
pop
sbb
pop
mov
mov
lahf
mov
cdq
adc
add
cmp
mov
out
test
mov
out
inc
adc
in
rcr
mov
sahf
pop
dec
jmp
nop
in
inc
mov
ror
test
or
inc
cdq
pop
pushf
int3
pusha
fsub
shl
jle
and
jbe
adc
push
pop
imul
sbb
adc
fs
mov
add
mov
scas
mov
sbb
imul
pop
xchg
rol
in
(bad)
push
xchg
into
aas
stc
adc
dec
add
push
ins
and
mov
push
jne
js
add
stos
xchg
movs
std
les
out
mov
std
xor
sbb
xor
js
push
dec
cmps
mov
pop
jecxz
fld
push
addr16
xchg
dec
jmp
movs
inc
mov
cmc
aaa
aad
pop
test
and
test
cmp
add
iret
outs
lods
inc
fst
or
rol
leave
xlat
push
jmp
retf
adc
xor
rcr
movs
xchg
pop
fistp
(bad)
cmp
je
xchg
cli
(bad)
push
fnstenv
movs
popa
push
dec
fcomp
arpl
add
dec
push
inc
shl
int3
daa
fstp
and
imul
sar
and
arpl
push
shr
add
xchg
daa
inc
push
mov
mov
push
jecxz
fisubr
add
mov
xchg
js
jo
jnp
adc
inc
rcr
inc
add
bnd
cmp
or
(bad)
xchg
std
adc
(bad)
lds
cld
jle
add
sub
mov
fidivr
add
cmp
push
jle
outs
pop
test
mov
fild
nop
in
lods
outs
add
adc
test
lds
cs
xchg
je
outs
cmp
(bad)
sub
pushf
mov
add
pop
ret
mov
stos
cs
inc
add
xchg
scas
jle
or
les
cmp
cmp
sbb
ret
jns
jmp
mov
imul
xor
and
sbb
push
jge
cmc
daa
cli
mov
mov
xchg
push
scas
add
jmp
sub
cmp
dec
sbb
lock
xchg
fnsave
or
xchg
add
(bad)
sti
mov
and
mov
sub
inc
retf
ins
xor
test
sbb
mov
mov
mov
mov
inc
(bad)
cmp
push
or
mov
dec
in
nop
int
dec
imul
adc
aam
or
lods
and
sbb
xor
daa
mov
or
cwde
shl
sbb
pop
xchg
(bad)
repnz
xlat
imul
imul
call
dec
mov
fist
xor
cmp
aad
loop
or
mov
retf
sbb
test
daa
les
out
xor
jecxz
rol
xor
mov
pop
outs
xchg
dec
shl
adc
addr16
xor
jl
ror
jg
outs
addr16
xchg
sub
mov
in
push
add
aam
dec
pop
ja
cmp
sub
fsubr
out
xchg
fist
pop
bound
mov
dec
scas
sub
jno
(bad)
add
cmp
lahf
mov
pusha
xlat
out
push
pop
sub
in
pop
aas
push
jno
mov
(bad)
std
sbb
add
mov
push
xor
jg
add
dec
inc
lea
xchg
in
sub
cmps
inc
mov
cwde
stos
push
fdiv
fstp
xchg
jbe
test
and
xchg
jne
sar
xor
mov
daa
outs
adc
push
dec
push
sub
jbe
nop
cmps
sbb
jnp
pushf
lods
jecxz
shr
aas
push
cmc
lods
sbb
ret
cmp
stos
add
add
fwait
add
push
sbb
jbe
adc
push
pop
ins
in
test
pop
or
and
out
inc
jecxz
fistp
sub
imul
ja
mov
(bad)
int3
arpl
loop
cmps
ret
mov
mov
xor
les
mov
test
jne
cmps
aaa
add
test
inc
(bad)
mov
xchg
repnz
pop
mov
xor
xor
aam
aaa
xchg
jmp
jmp
in
ds
cs
xchg
pop
cmc
dec
stc
xchg
test
pop
xchg
push
(bad)
adc
les
push
add
arpl
(bad)
and
push
pop
mov
cmp
sub
loop
aam
dec
dec
dec
dec
data16
(bad)
fwait
in
out
int3
and
ins
fiadd
out
mov
mov
cld
fild
push
mov
dec
wrmsr
jmp
nop
cs
aad
(bad)
add
cli
ror
ret
clc
jno
jmp
cmc
sbb
int
and
gs
jno
jno
cmp
sub
retf
dec
sbb
ret
push
fs
ja
out
out
sbb
cmp
or
push
mov
adc
adc
jmp
push
mov
loop
cwde
fs
sahf
xchg
(bad)
fisub
xchg
enter
cmp
mov
repz
sbb
es
or
inc
and
retf
out
adc
sbb
jno
loop
add
xchg
mov
fild
and
ins
ss
push
dec
push
mov
leave
add
pop
fcomp
sbb
and
mov
or
mov
xchg
pop
pop
iret
clc
mov
adc
fcomp
adc
cmp
xchg
icebp
adc
inc
sub
fsubr
xchg
sbb
xor
mov
mov
mov
mov
add
mov
test
loopne
adc
movs
push
jae
je
call
fist
or
icebp
pop
test
rol
shl
adc
aad
scas
stos
push
icebp
cmp
or
retf
cld
xchg
sub
out
dec
in
xchg
mov
icebp
mov
movs
js
jmp
jo
xor
mov
jne
(bad)
fld
outs
rol
outs
(bad)
fsubp
ds
out
xor
push
cwde
add
cli
sbb
cmc
sub
mov
aam
cmp
push
push
repz
xor
leave
es
xor
cli
leave
mov
mov
cmp
dec
or
jbe
loop
jae
sbb
cdq
in
fist
je
fadd
dec
mov
jae
lds
std
xor
cmp
mov
cmc
jne
add
inc
lds
mov
out
pop
or
adc
pusha
jae
cmp
test
lods
jmp
test
sub
sbb
das
cmp
hlt
daa
(bad)
mov
or
mov
sar
out
repz
aam
dec
mov
ja
pop
loopne
cmp
push
scas
sti
popf
scas
retf
jecxz
jl
inc
mov
outs
outs
test
cmps
movs
adc
fdivr
leave
xor
and
arpl
out
mov
pop
lahf
mov
add
loopne
(bad)
push
jnp
mov
push
clc
lods
sti
or
imul
fucomi
pop
jbe
push
gs
inc
and
gs
jno
in
mov
aas
push
sub
xchg
mov
test
pop
cdq
nop
daa
inc
pop
out
add
jmp
jl
jle
xchg
daa
jmp
or
xor
mov
call
pop
shr
mov
add
out
cmp
xor
jmp
sub
hlt
add
jge
out
mov
mov
pop
(bad)
les
cmps
out
loop
xor
aad
loopne
jns
dec
lods
fcom
hlt
addr16
xchg
js
mov
data16
jmp
enter
(bad)
clc
(bad)
mov
loope
or
cld
add
sub
into
or
mov
iret
shl
dec
test
inc
jo
test
mov
pop
jno
imul
pop
push
pop
dec
cmp
es
push
out
jns
into
arpl
adc
test
lahf
or
fs
ret
mov
test
nop
data16
add
dec
inc
pop
mov
jmp
imul
shr
and
cdq
mov
(bad)
rcr
out
fstp
(bad)
xlat
sbb
outs
jno
push
push
push
adc
int3
cli
iret
or
ret
jne
in
xor
arpl
push
in
retf
adc
and
sti
xlat
pmulhuw
sub
or
sbb
outs
jp
repnz
or
adc
adc
xchg
std
leave
push
mov
pop
mov
sbb
inc
in
stos
fst
jae
cdq
mov
jl
mov
sar
or
mov
outs
or
aaa
adc
aad
push
dec
call
in
mov
cmps
mov
into
mov
dec
sub
jns
mov
jns
jmp
je
nop
lahf
aad
idiv
adc
out
sti
push
dec
add
dec
scas
and
jmp
js
add
jmp
mov
or
js
hlt
in
dec
add
push
scas
nop
sub
dec
add
add
jae
div
xchg
sar
out
call
dec
sar
movs
dec
jbe
lods
movs
cs
gs
xchg
adc
add
or
xchg
pop
cwde
lods
push
and
popa
lods
xlat
inc
mov
pop
jecxz
adc
pop
(bad)
aad
xchg
inc
stc
jb
test
xor
retf
inc
ret
and
out
fadd
jge
sahf
inc
dec
inc
jo
or
mov
sub
data16
cwde
dec
sbb
pop
mov
sub
mov
popf
test
les
retf
nop
inc
retf
ss
(bad)
ret
addr16
sub
das
adc
lock
push
mov
mov
inc
test
inc
out
bound
and
call
xlat
xchg
xchg
or
rcl
mov
xor
outs
adc
and
in
dec
cmps
stos
jge
push
bound
out
and
add
int
inc
sbb
ret
and
mov
stc
jae
bound
mov
loopne
dec
cmps
aas
or
fs
push
rol
nop
pop
repnz
push
mov
and
or
(bad)
test
inc
cwde
jmp
push
(bad)
outs
in
sahf
lods
jbe
jge
shl
jbe
fst
popa
aam
test
pop
retf
pop
jle
pop
inc
ret
adc
stos
cmps
pop
shr
call
cwde
pusha
xchg
or
in
popf
fisttp
mov
in
mov
inc
jo
loopne
sti
stos
push
sahf
ds
fst
loope
mov
adc
inc
dec
out
mov
ffreep
jo
or
fisubr
and
sbb
xchg
sar
inc
mov
nop
push
pop
in
jp
out
icebp
sbb
ds
xor
add
fdiv
std
inc
and
cmp
je
(bad)
addr16
pusha
lahf
xchg
lds
data16
lods
adc
retf
je
mov
repnz
add
push
push
pop
push
fsub
arpl
pop
sbb
stos
pop
cmps
outs
aaa
mov
into
cmps
jl
mov
sbb
cmps
popf
jg
add
push
out
push
dec
repz
punpckhwd
cmps
add
aaa
(bad)
xor
sbb
fistp
xor
adc
add
xlat
mov
mov
mov
xor
push
iret
aaa
sub
(bad)
mov
outs
xchg
mov
pushf
mov
into
mov
push
inc
xlat
cmps
shl
push
xor
and
inc
jp
mov
jmp
cwde
loopne
ficom
mov
xchg
stc
idiv
test
cmp
add
ins
sub
jo
repnz
push
stos
outs
pushf
dec
jl
cld
cmps
inc
jl
test
dec
test
sti
test
add
jnp
mov
aaa
pop
data16
dec
test
out
aaa
jo
ret
std
sti
jo
test
popa
in
add
outs
mov
lahf
cmp
add
xor
(bad)
jmp
aam
in
out
and
cmc
or
lds
xchg
mov
xchg
inc
mov
cdq
xchg
std
xchg
cwde
fldcw
repnz
mov
adc
jp
iret
test
push
nop
add
sbb
inc
mov
jp
out
inc
mov
push
pushf
dec
ret
popa
inc
aaa
and
pop
mov
xor
xor
loop
pop
sbb
or
mov
mov
fcom
jmp
fidiv
mov
sbb
fwait
xchg
or
bound
ja
push
ins
sahf
jmp
(bad)
clc
call
inc
lods
xchg
adc
push
mov
jmp
pop
mov
xor
jno
addr16
xor
inc
shl
sub
cmp
or
(bad)
adc
dec
cmps
nop
mov
mov
cmp
test
mov
adc
xchg
lds
mov
inc
mov
mov
jl
pop
(bad)
ror
add
ja
test
je
(bad)
(bad)
pusha
lods
out
jmp
nop
int3
repnz
test
add
fcomp
outs
jg
xchg
jb
or
in
loope
test
mov
movs
mov
jmp
mov
dec
iret
dec
faddp
jne
test
enter
adc
xchg
jl
mov
(bad)
(bad)
icebp
(bad)
mov
dec
sbb
(bad)
(bad)
(bad)
mov
sub
cmp
cmp
retf
add
dec
jno
sub
mov
mov
ret
pop
int
dec
mov
ss
xlat
ret
adc
out
fcomp
mov
add
popf
nop
popf
ret
aad
sbb
aad
fbld
mov
adc
pop
out
cs
cli
inc
sbb
adc
repz
xor
nop
dec
sub
dec
cmps
setno
or
call
xor
pop
sub
push
or
mov
xchg
push
sbb
(bad)
jge
js
cmp
sbb
addr16
sbb
in
fs
xchg
mov
jecxz
cmp
cmp
or
push
dec
mov
retf
shl
fdiv
dec
rcl
loope
or
out
push
stos
or
sub
movs
xchg
add
shl
push
jo
jecxz
in
add
xor
jb
pop
mov
scas
(bad)
cmp
mov
xor
movs
nop
push
mov
stc
retf
push
out
sbb
mov
pop
cmps
retf
xchg
fist
pop
mov
jmp
xchg
push
pop
adc
loope
retf
outs
imul
hlt
(bad)
cld
mov
frstor
test
or
sti
mov
cwde
ret
xor
dec
xchg
inc
mov
push
adc
or
bound
ret
iret
shr
xchg
push
xor
pop
mov
add
jmp
jbe
hlt
mov
lods
inc
sahf
div
loop
cmp
nop
retf
inc
sbb
popf
(bad)
jb
dec
cmp
pusha
aam
jg
push
stos
cld
cmp
sar
mov
mov
push
xor
cmps
fmul
cs
dec
dec
daa
icebp
push
mov
xchg
pop
mov
fidivr
shl
inc
inc
push
jl
test
ja
cdq
sahf
jl
dec
mov
sti
mov
fwait
sidtd
xor
jg
push
pop
adc
and
xor
dec
sbb
cwde
and
jno
cmps
sbb
ins
dec
and
mov
xor
es
ins
xor
push
cmp
jnp
outs
div
lahf
mov
icebp
push
fdivrp
inc
push
imul
push
in
xor
pushw
retf
mov
call
xchg
cmp
test
xor
adc
fsubr
or
scas
xor
sbb
sub
cmp
cmp
bound
add
cdq
sbb
xchg
mov
jbe
(bad)
xor
das
xor
es
(bad)
neg
rcr
dec
stos
(bad)
cmp
call
mov
ficom
in
stos
addr16
stos
or
arpl
adc
and
jp
sti
and
or
inc
push
xchg
out
and
push
xchg
test
arpl
(bad)
int3
jl
das
(bad)
repz
cdq
sub
in
dec
(bad)
jp
push
jbe
jmp
cmp
sti
movs
pop
cs
movs
or
adc
and
(bad)
int3
fdiv
dec
fcmovnb
jmp
sbb
movs
mov
adc
jne
and
ret
sub
mov
addr16
xor
js
sbb
test
aas
jb
aam
lahf
data16
add
pop
sti
std
add
popa
lods
fnsave
jb
sbb
faddp
mov
sbb
jo
cmp
bound
push
fdivr
in
hlt
jge
adc
test
jno
push
mov
mov
sbb
sub
loop
jg
adc
inc
mov
add
fld
pop
jecxz
xchg
push
scas
shl
les
add
fimul
aad
fwait
or
cmps
cmp
xchg
xor
mov
out
ins
adc
fsub
arpl
or
sub
gs
sub
push
push
or
cmp
scas
push
imul
mov
out
cmp
inc
movs
sub
cmc
sub
aas
leave
mov
or
sbb
mov
cdq
and
mov
xchg
lock
cmps
pop
ja
or
jl
out
add
cmp
and
xor
fsub
in
push
adc
add
repz
bound
lds
clc
int
cli
aad
push
adc
jne
fwait
popa
pop
aad
mov
jge
in
int
stos
test
mov
mov
pop
fmul
mov
cdq
sbb
ja
shr
pop
ret
sbb
fadd
xor
adc
or
aad
mov
add
lds
jle
sar
dec
mov
aam
test
xchg
icebp
sahf
ret
xchg
cmps
and
mov
mov
xchg
in
dec
jbe
cmps
in
inc
(bad)
jmp
mov
shr
jns
stc
or
cmp
ror
and
hlt
cmp
add
sbb
mov
sub
scas
add
jo
jns
shr
cmp
dec
jne
inc
shr
adc
jp
mov
gs
ja
dec
xor
jmp
pushf
pop
mov
jae
repnz
outs
repnz
sbb
pop
inc
dec
fimul
jb
adc
pop
das
gs
push
pusha
nop
mov
sbb
out
ja
pop
mov
sbb
inc
fist
dec
or
(bad)
and
inc
loope
ds
mov
fwait
jp
gs
and
add
adc
imul
xor
fs
cs
aas
mov
dec
pusha
sub
adc
jl
popf
cmp
xchg
aam
dec
jmp
in
ds
xchg
imul
pop
test
call
imul
mov
in
lock
stc
adc
mov
and
mov
mov
mov
add
fcmovu
mov
mov
shl
pop
mov
cmp
pop
push
xor
and
loopne
push
add
or
xchg
push
xor
(bad)
fcomp
cwde
mov
out
scas
out
mov
dec
jbe
ficom
mov
adc
in
fmul
cmps
cmc
jne
adc
aad
nop
push
(bad)
ss
sub
mov
mov
and
cmp
(bad)
call
and
xor
jp
ds
pop
fcmovne
stos
xor
mov
dec
ja
mov
sub
fbstp
xchg
ds
out
aad
inc
push
mov
mov
test
xchg
jbe
mov
mov
dec
cmps
cdq
inc
and
and
aad
(bad)
pop
adc
mov
inc
arpl
in
mov
fwait
inc
ins
lds
and
fiadd
loope
cmp
and
xor
mov
mov
sbb
fwait
sti
outs
mov
mov
repnz
pop
fld
ret
dec
pop
cdq
ja
cmp
add
push
scas
in
push
lea
dec
and
iret
call
jbe
mov
lock
jmp
dec
add
fldcw
int
jne
sub
mov
dec
add
pop
cmp
je
(bad)
aas
mov
push
and
nop
fwait
dec
mov
aaa
stc
popf
outs
push
inc
jnp
out
cmp
push
xchg
in
sbb
xor
dec
jl
loop
shl
mov
out
sti
cmc
mov
mov
cwde
add
scas
mov
mov
sbb
imul
pop
push
dec
cmp
mov
mov
sahf
rcl
and
call
push
nop
jmp
lods
mov
cmp
pop
mov
fsubr
cdq
pop
fbld
(bad)
cli
cmps
jmp
lods
push
or
sbb
jmp
add
pop
rcr
dec
icebp
aas
and
mov
aaa
outs
lods
cmp
pop
rcl
jle
cmp
nop
inc
loopne
stos
xlat
pop
dec
es
mov
out
lods
push
jecxz
rol
jp
pop
(bad)
repnz
movs
scas
outs
sub
push
add
outs
xchg
adc
mov
adc
in
fmul
mov
inc
dec
pop
out
inc
movs
sar
(bad)
mov
dec
xchg
sti
cmc
or
xchg
and
inc
mov
mov
fnstenv
scas
out
pop
mov
loop
add
jbe
mov
push
add
dec
push
mov
lods
int3
mov
sub
aad
cmp
call
dec
out
adc
bound
stos
inc
pop
in
or
adc
sbb
aam
mov
and
sar
(bad)
xchg
push
test
cld
and
mov
adc
int
mov
mov
dec
xor
sti
imul
or
and
mov
dec
pop
adc
popf
jmp
mov
loop
xchg
inc
sub
cmp
sbb
loopne
lahf
jnp
(bad)
push
ret
pop
and
mov
jae
mov
pmulhuw
out
jge
ror
stos
jp
leave
movs
jb
sbb
aas
enter
pop
push
test
mov
out
push
retf
xor
or
and
cmp
shr
or
out
mov
enter
pushf
shl
xor
mov
int3
mov
lods
sub
aam
fucomp
push
in
and
add
clc
fmul
xchg
lods
sbb
and
xor
inc
(bad)
push
dec
adc
rcl
jmp
(bad)
icebp
call
and
stc
push
xor
gs
cmp
jg
mov
adc
dec
das
inc
sub
xchg
js
dec
sub
sbb
mov
cmp
jmp
imul
jmp
cmp
out
inc
fisub
adc
imul
adc
mul
movs
icebp
pop
xlat
fsub
sbb
jno
push
sub
push
icebp
sub
inc
jecxz
es
nop
bound
or
push
in
sti
and
cmp
jo
adc
or
mov
into
sti
jb
mov
xchg
gs
div
je
pop
adc
adc
mov
int
push
clc
push
xor
sub
jo
pop
xchg
dec
and
mov
cmp
scas
mov
mov
jmp
cs
push
mov
pop
mov
(bad)
stos
mov
rcl
cmp
dec
or
cmp
outs
shl
and
aas
call
enter
fwait
xchg
pop
bound
shr
scas
out
outs
retf
push
sbb
adc
adc
and
ins
lahf
std
inc
dec
into
into
add
scas
or
jl
lea
retf
pop
xchg
(bad)
adc
int
and
out
adc
inc
xor
(bad)
mov
sub
pop
pop
sbb
ja
cld
dec
or
or
sub
pop
jnp
and
mov
popa
xchg
imul
sbb
adc
(bad)
jp
lods
xchg
enter
jmp
jb
imul
in
sbb
int
test
cmps
in
push
mov
cmp
scas
inc
pushf
rcr
mov
in
push
adc
aad
adc
in
pop
test
jnp
scas
sbb
lods
lahf
fdivr
inc
pop
test
or
adc
mov
sbb
out
xor
lods
aad
push
mov
mov
inc
xchg
jmp
int3
jp
inc
dec
adc
add
lahf
pop
push
cmp
je
outs
dec
inc
and
mov
test
shr
pushf
add
ins
fist
mov
leave
sub
mov
aas
xchg
and
sbb
les
mov
popa
rcr
movups
adc
pop
ret
push
xor
add
or
div
dec
clc
lea
loop
dec
push
(bad)
jo
pop
std
xchg
(bad)
mov
retf
cmps
dec
jl
add
scas
xchg
loopne
ss
cli
dec
jle
xor
mov
adc
push
loope
test
pop
or
daa
pushf
xchg
loopne
sahf
sub
pop
jg
pop
sub
call
test
push
jmp
cvtps2pd
in
mov
sbb
enter
cdq
dec
shl
xor
aas
into
shr
inc
pop
adc
pop
mov
mov
inc
popa
iret
sbb
movs
aas
or
xor
movs
xchg
push
lods
and
add
sub
adc
or
add
repz
mov
in
sbb
push
out
daa
in
not
scas
jb
or
adc
fistp
cmps
mov
mov
sti
jb
call
mov
shl
lock
stos
add
cwde
daa
ds
mov
data16
fs
into
stc
sar
shl
mov
xchg
xor
add
jg
jo
adc
dec
dec
and
sahf
mov
ds
dec
jp
and
push
aaa
movs
retf
aas
das
cmps
cld
push
iret
pusha
push
lock
fsubr
add
jnp
push
repz
add
xor
out
cmp
lahf
out
or
rcl
out
sbb
hlt
mov
adc
dec
movups
fdivr
aaa
sbb
xchg
es
shl
outs
sbb
mov
stc
or
inc
mov
fs
push
fdivr
inc
daa
mov
mov
dec
mov
xchg
iret
call
cli
test
inc
fdivr
inc
sub
push
cmc
or
movs
cmp
pop
pop
(bad)
ins
push
pop
mov
pop
aas
dec
out
dec
push
retf
ss
mov
call
mov
jne
aam
xor
pop
xchg
inc
rcl
sub
dec
imul
adc
xor
out
or
inc
(bad)
ss
(bad)
cmps
daa
cmps
jmp
call
mov
das
call
inc
sbb
push
mov
imul
add
xor
push
nop
ret
(bad)
sti
pop
rol
add
jp
call
enter
cmps
xor
dec
cmp
xchg
repnz
bound
jmp
fwait
cmc
fsave
mov
jo
les
sbb
dec
push
and
mov
cs
xchg
loopne
jg
mov
xor
ins
mov
push
sub
gs
inc
add
cs
jns
(bad)
test
imul
dec
push
sbb
and
lods
or
mov
or
pop
js
fld
dec
mov
fcmovu
sub
or
dec
inc
add
adc
inc
mul
cld
inc
stos
gs
test
in
push
cmp
aam
xor
neg
cmp
cmc
push
sub
push
cwde
mov
push
cmp
or
mov
lea
iret
xor
add
cmps
mov
ret
call
push
add
test
pop
dec
xchg
dec
sub
(bad)
jecxz
push
leave
stos
fs
popf
(bad)
out
inc
inc
or
jo
sti
loop
sub
mov
gs
sbb
inc
in
retf
sub
mov
inc
std
lods
jae
mov
jp
inc
adc
and
sahf
dec
xlat
fdivr
pop
into
pop
mov
push
add
cld
jo
cmp
sbb
adc
shl
and
das
mov
push
adc
loope
jne
pop
das
adc
and
jge
gs
fbld
or
jno
dec
dec
and
pop
jns
test
push
and
adc
cld
pop
push
pop
aas
repnz
out
mov
pop
sti
push
mov
mov
je
(bad)
or
jmp
fistp
adc
or
aas
repnz
movs
mov
iret
mov
xchg
inc
mov
cmc
fimul
or
arpl
or
adc
push
inc
das
clc
call
mov
inc
adc
and
mov
imul
mov
xor
push
adc
and
jmp
popa
pop
mov
fld
jbe
push
in
or
das
push
jno
repz
lods
loop
lea
(bad)
mov
or
outs
aam
pop
scas
jl
sbb
dec
in
loop
mov
jl
inc
add
sbb
jne
add
pop
retf
sahf
xchg
push
aas
lds
adc
cwde
ins
ss
jo
sub
sbb
cmc
jae
ret
jp
(bad)
jmp
in
retf
loop
pop
stc
and
mov
scas
imul
jle
inc
and
xchg
mov
aaa
mov
cmp
cdq
jb
lods
push
sub
sub
cs
out
sbb
mov
add
sar
lahf
aaa
cdq
or
jbe
fisub
stc
shr
and
(bad)
push
test
in
mov
dec
pop
push
cwde
nop
jmp
pop
or
jmp
ds
xchg
or
aaa
repz
mov
mov
mov
fs
jp
push
ss
fldcw
jo
aad
call
out
jecxz
les
push
arpl
jmp
aam
xchg
mov
jl
xchg
sbb
outs
cld
xchg
inc
fcomp
mov
rol
(bad)
pop
xchg
and
rcl
sbb
mov
xchg
pop
clc
jne
out
cmp
out
xchg
(bad)
jnp
xor
rcl
mov
xchg
daa
rcr
stc
xor
xchg
adc
inc
mov
cmp
push
pop
leave
lahf
xor
pushf
jle
lods
(bad)
cwde
jae
repnz
je
pop
jo
or
mov
push
cmc
cmp
add
mov
dec
and
gs
stos
jl
mov
rcl
push
jp
hlt
(bad)
fisttp
or
sar
fsubr
xchg
pop
adc
ins
mov
or
pop
loopne
and
icebp
mov
add
jmp
scas
add
das
or
adc
daa
lea
pop
cmps
mov
mov
popf
dec
xor
jge
hlt
xlat
xchg
sbb
sub
in
pusha
jmp
add
jno
lds
cld
dec
js
movs
push
mov
enter
mov
not
aas
inc
or
push
scas
rcr
mov
(bad)
mov
jns
xor
ins
das
nop
and
pop
cmp
out
fcmovbe
inc
sahf
inc
ror
movs
pop
xchg
leave
push
add
and
gs
sbb
and
cmps
xchg
into
mov
mov
mov
retf
mov
in
push
rcr
mov
mov
cdq
jg
in
mov
aam
adc
mov
nop
jl
mov
push
sub
movs
test
daa
pop
loopne
outs
dec
jns
jle
mov
fist
dec
fisttp
adc
adc
inc
repz
out
and
outs
std
stos
ds
loope
sub
sbb
cmps
add
fcomip
iret
push
pop
jbe
push
xchg
icebp
inc
jmp
fsubr
inc
mov
jo
loopne
or
xor
push
add
mov
movs
push
test
cmc
test
fst
ja
jne
inc
jns
xor
inc
push
adc
(bad)
mov
jl
and
jo
mov
clc
shr
retf
out
ss
add
outs
xchg
(bad)
outs
sub
aad
push
mov
rcr
dec
xor
mov
push
mov
pop
scas
xchg
push
outs
xor
pop
js
pop
ret
add
test
push
repz
push
(bad)
fsubr
fisttp
lahf
in
ja
lods
push
into
cli
lods
call
xchg
sti
or
xchg
jle
pop
pop
sub
into
jg
adc
add
lods
ss
aad
or
movs
test
dec
pop
ja
dec
(bad)
sbb
cmp
movs
mov
or
ror
(bad)
fsubp
call
lods
sub
add
xchg
and
sub
aaa
sub
loope
out
jbe
xlat
mov
add
shl
add
fs
packuswb
jge
add
jg
push
and
cmps
adc
ret
cdq
aam
cmps
in
inc
mov
cmp
push
cmp
xor
jns
loop
xor
adc
sbb
sub
loop
push
add
(bad)
mov
sbb
mov
lods
or
stos
fstp
popf
push
mov
push
in
enter
mov
rcl
cmp
pop
pop
jl
adc
js
dec
stos
pop
cdq
ins
mov
add
or
mov
cmc
push
repz
cs
mov
inc
lock
into
retf
std
popf
mov
arpl
inc
(bad)
rcr
cdq
sbb
jb
sbb
movs
mov
popf
jle
jo
mov
or
fdivr
fsubr
dec
xchg
sub
push
jle
inc
add
aam
test
inc
xchg
ret
jne
ret
mov
and
dec
mov
jns
jmp
mov
in
lds
out
jg
les
cmp
es
jecxz
out
mov
xchg
dec
out
dec
push
lea
lods
sbb
jp
shr
out
adc
pop
cmp
inc
mov
es
icebp
js
or
or
icebp
push
and
mov
stos
imul
fmul
inc
fistp
dec
pop
les
inc
jbe
into
scas
xchg
jp
imul
jns
add
into
leave
inc
mov
js
psubw
or
jo
xor
jnp
sub
jno
repz
shl
mov
imul
xchg
dec
inc
fcomp
cdq
cmp
xlat
in
arpl
jns
mov
mov
ja
and
aaa
shr
sub
cmp
cdq
movs
or
lock
push
jmp
les
daa
mov
int3
adc
popa
adc
or
jnp
xor
cmps
(bad)
popf
rol
std
movs
push
jp
push
pop
sti
jnp
xlat
sbb
jne
dec
xchg
int3
call
push
repz
and
xchg
cmp
cmp
mov
xlat
stos
pop
push
or
pop
push
cwde
inc
jle
push
xor
cdq
mov
dec
movs
clc
or
or
mov
fiadd
dec
retf
jl
dec
mov
mov
lahf
dec
xchg
retf
fimul
icebp
mov
ins
push
mov
jle
adc
dec
cs
jp
pushf
test
aaa
mov
and
scas
mov
stc
adc
xlat
iret
shr
inc
repnz
paddusb
clc
leave
js
adc
xor
enter
lahf
scas
out
lods
adc
ret
or
ret
scas
pop
and
les
mov
aad
popf
sub
or
inc
and
xchg
adc
cmp
mov
xchg
in
or
ror
test
shl
jns
adc
lea
cwde
into
inc
pusha
stos
xor
outs
std
mov
repz
cmc
scas
cmc
and
pop
and
shl
adc
jo
mov
sbb
jo
mov
cwde
mov
jne
mov
add
mov
(bad)
jno
test
and
pop
test
loop
and
mov
into
or
(bad)
sar
adc
sbb
and
ficom
sub
or
leave
int3
mov
mov
mov
and
test
push
jl
bound
ret
sub
mov
data16
ret
and
lods
mov
ins
mov
and
call
repnz
push
sbb
push
mov
mov
pop
jmp
fidivr
sar
fidiv
shl
sbb
dec
popf
xchg
xchg
lahf
mov
gs
sbb
hlt
in
pushf
movs
xchg
in
mov
das
mov
stos
mov
mov
leave
mov
cmp
xchg
ror
adc
jnp
ins
or
dec
inc
jmp
adc
mov
and
push
cmp
in
retf
inc
fpatan
sar
jne
mov
dec
movs
enter
dec
adc
xlat
xor
mov
ror
in
(bad)
loopne
sub
stc
inc
mov
xchg
popa
lahf
mov
aaa
out
ret
add
push
push
cmp
sbb
cmp
jnp
push
test
cmps
rol
cdq
mov
pop
repz
lods
jns
leave
stos
movs
mov
xor
cmp
jmp
fstp
pushf
cmc
test
dec
xchg
add
mov
jge
jg
mov
add
aad
sbb
pop
(bad)
shl
rcr
nop
pop
aam
xchg
sbb
dec
jne
lock
dec
je
adc
dec
mov
lea
xchg
add
or
punpcklwd
pop
sbb
jbe
xor
add
mov
mov
out
jne
popf
mov
adc
ins
(bad)
mov
xchg
mov
push
sbb
pop
ins
jp
jne
out
ja
int
(bad)
mov
jmp
sub
adc
add
das
pop
movs
or
out
adc
retf
call
in
inc
or
xor
mov
repnz
ret
jno
fisubr
ror
les
add
lahf
sahf
mov
pop
mov
cmp
cli
or
in
cmps
sub
(bad)
cmps
push
pop
or
sbb
mov
push
ficomp
out
test
and
mov
inc
sbb
jne
int
enter
dec
std
mov
clc
mov
mov
ja
jb
pop
xchg
mov
movs
adc
mov
push
inc
jne
jp
adc
out
xchg
ds
or
retf
and
cld
retf
mov
lock
repnz
dec
mov
adc
push
call
imul
mov
dec
push
sbb
test
cmps
pop
jmp
cli
pushf
ja
(bad)
icebp
xchg
nop
push
adc
inc
inc
cmp
imul
mov
iret
cmp
cs
xchg
aam
inc
pop
retf
jmp
mov
sub
pop
pop
hlt
int3
xor
(bad)
jb
add
outs
rcl
xchg
data16
inc
ficom
ja
aam
sub
push
or
dec
movs
(bad)
push
push
nop
jmp
arpl
cmc
inc
add
out
into
dec
out
add
or
dec
add
data16
test
test
in
sbb
(bad)
cmp
and
arpl
pop
pusha
fnsetpm(287
sar
mov
mov
icebp
fwait
dec
test
add
xor
jnp
loopne
adc
and
mov
dec
mov
mov
fsub
mov
and
jg
xchg
call
pop
mov
mov
pop
scas
cmp
inc
(bad)
dec
push
mov
xchg
popa
mov
leave
(bad)
mov
dec
jbe
jbe
inc
sar
cmp
es
stos
pop
xlat
xchg
imul
xchg
(bad)
in
pop
sbb
xlat
and
push
mov
lods
mov
dec
mov
bound
pop
mov
inc
leave
jmp
adc
lods
mov
(bad)
adc
clc
xor
xchg
sar
mov
xchg
adc
push
or
and
test
retf
adc
adc
dec
jg
pop
cmp
arpl
aaa
add
xor
lahf
ins
jmp
retf
push
arpl
adc
xchg
cmp
aad
adc
mov
ja
(bad)
stos
adc
inc
iret
in
ror
test
popf
clc
fst
ss
lahf
xchg
sahf
mov
shl
dec
mov
cmc
pop
test
xor
es
aaa
mov
jle
fwait
mov
ins
cs
inc
mov
pop
idiv
xchg
xchg
push
pop
add
retf
adc
rcl
mov
aam
xor
stc
stc
mov
push
adc
xchg
dec
cmp
mov
stos
cli
pop
(bad)
push
sub
sbb
and
sti
fs
int3
mov
div
xlat
add
and
xchg
rcl
ds
ret
std
mov
jle
mov
adc
test
mov
es
pop
adc
inc
popf
pop
dec
pusha
push
stos
adc
sub
test
inc
gs
mov
jl
mov
and
loope
ins
mov
push
clc
scas
stos
push
retf
mov
ja
sbb
pop
or
push
xor
aad
xor
shl
cmp
fwait
adc
push
les
add
pop
sbb
pop
xor
test
sbb
dec
lods
retf
and
xchg
push
dec
cmp
adc
mov
shl
pop
inc
xor
add
arpl
ror
clc
cmovo
call
mov
jne
add
add
jno
push
in
rol
retf
ret
dec
sub
scas
mov
jg
cmp
cmp
pop
addr16
pusha
xchg
adc
adc
jnp
add
sbb
dec
mov
leave
pushf
xor
xor
arpl
mov
add
jno
mov
adc
dec
add
out
out
add
xchg
adc
in
test
push
clc
aas
adc
movs
not
push
fist
cdq
(bad)
jl
(bad)
mov
mov
jg
ja
aam
aaa
dec
std
jg
loopne
call
test
mul
addr16
out
scas
fidivr
mov
je
shr
mov
and
push
mov
inc
aam
add
and
cmps
or
push
sbb
pop
cwde
lods
jge
adc
pusha
adc
(bad)
repz
aad
jae
cmp
mov
in
sub
mov
mov
dec
push
aas
xchg
fwait
pop
out
mov
xlat
cmp
hlt
repnz
jne
inc
pop
cmp
xor
lds
int
jmp
jnp
movs
or
mov
loopne
pop
int
call
mov
scas
enter
stos
jl
cmc
sti
cmp
sbb
adc
es
(bad)
pop
addr16
pop
add
push
loope
rol
xor
sub
dec
pushf
gs
or
and
mov
push
push
movs
mov
pushf
call
test
add
fwait
mov
movs
retf
imul
out
mov
ret
xor
enter
mov
or
aaa
ror
mov
test
sbb
and
divps
stc
cs
sub
sbb
push
shr
ins
push
xchg
sub
inc
xlat
add
ror
mov
loope
ret
inc
bound
fmul
rcl
out
xchg
mov
xchg
les
jle
cmp
out
push
sub
test
mov
ins
adc
push
mov
dec
xchg
fcom
dec
fstp
test
jae
pop
and
xchg
scas
ins
mul
push
fwait
retf
cmp
mov
jb
inc
sub
xchg
jb
sub
adc
mov
jg
das
xchg
call
outs
stos
push
cwde
repnz
xor
and
mov
jg
push
mov
mov
xchg
sbb
arpl
dec
sbb
(bad)
jmp
xchg
cli
xor
ja
rcr
and
fdiv
pop
add
leave
pop
dec
and
or
ror
mov
fisttp
cmp
xor
xor
mov
and
call
dec
xchg
jnp
shl
cdq
add
inc
push
mov
sti
aaa
and
pop
aaa
pop
shl
pop
retf
adc
mov
xchg
repz
xchg
daa
sub
popf
adc
in
mov
sub
sub
pop
adc
ins
push
retf
aad
jb
jo
ss
sub
je
scas
xchg
pop
icebp
stos
pop
pop
or
adc
adc
mov
xchg
xchg
mov
jns
dec
xchg
inc
xchg
(bad)
popf
faddp
pcmpeqb
and
nop
(bad)
scas
popa
movs
mov
aas
add
inc
xor
sbb
les
mov
mov
stos
lock
or
xchg
jecxz
aaa
shl
test
sahf
xor
aam
push
dec
jb
xor
popa
icebp
outs
ins
xchg
add
pushf
mov
push
nop
mov
scas
dec
sub
mov
mov
js
lods
mov
pusha
mov
mov
push
jno
pop
pop
xor
mov
pop
add
mov
and
add
add
and
(bad)
hlt
push
xchg
push
lods
mov
(bad)
jge
push
sbb
(bad)
mov
in
dec
push
xor
push
and
test
cmps
pop
pop
xor
sub
or
dec
lock
jmp
icebp
jb
inc
dec
sbb
ins
cmps
nop
mov
int
es
cmp
dec
call
jo
and
mov
mov
icebp
outs
xor
add
in
sub
pop
mov
adc
fwait
or
inc
pop
sub
sbb
ss
cmps
pop
push
stos
test
mov
inc
mov
xchg
in
mov
sbb
ret
jb
dec
(bad)
imul
dec
cld
or
adc
xchg
add
jl
ret
mov
xchg
mov
push
(bad)
pushf
lea
sti
xchg
xchg
xor
test
or
adc
lds
mov
ins
push
popf
push
fcom
fist
out
adc
push
mov
repz
fistp
adc
loope
in
jbe
ror
jnp
loop
xchg
addr16
fwait
les
movs
mov
push
mov
push
inc
shr
mov
data16
xor
enter
or
sub
cmp
clc
call
mov
cmps
repz
call
add
into
js
xchg
and
xchg
mov
xchg
mov
fdivr
push
xchg
cwde
ficomp
mov
pop
loopne
and
fadd
sbb
jne
loop
call
lds
outs
loopne
mov
mov
mov
mov
std
sti
jle
add
movs
rcl
cmps
push
mov
clc
js
movs
mov
push
add
xor
push
and
add
push
xchg
xchg
xchg
rol
sub
in
jmp
stos
mov
jp
sbb
mov
push
sbb
adc
sbb
mov
je
jae
outs
mov
sub
stc
mov
ror
fadd
mov
jmp
call
test
leave
fstp
aaa
mov
xor
or
or
xchg
cli
dec
push
jge
sub
inc
aas
pop
cmp
fdivr
scas
jno
pushf
rol
in
div
mov
ja
xor
jmp
mov
mov
enter
int
(bad)
jne
imul
lock
pop
mov
push
mov
and
prefetcht1
fld
inc
fwait
add
gs
sbb
ins
ss
test
inc
or
adc
mov
and
ins
scas
mov
dec
repnz
jbe
lock
loopne
push
inc
mov
xor
out
into
push
push
mov
test
arpl
ins
inc
sub
jmp
jmp
hlt
cli
rol
shl
sbb
dec
aam
push
push
nop
adc
pusha
stc
popf
push
cmp
shl
test
xchg
xor
and
enter
mov
psadbw
and
mov
jecxz
shr
xchg
jmp
xor
les
mov
popa
add
mov
and
xchg
sbb
(bad)
xor
into
jge
nop
sbb
in
lods
xchg
inc
lods
cmps
outs
inc
call
dec
bound
int3
add
mov
ins
add
push
xor
rol
add
arpl
mov
mov
jbe
mov
je
xchg
inc
mov
outs
jns
add
pop
sub
prefetch
or
stos
call
ss
lods
clc
sahf
cmp
aam
mov
cwde
dec
inc
push
dec
mov
mov
jbe
fs
ror
mov
mov
dec
pushf
sbb
inc
js
inc
xor
daa
mov
(bad)
or
jp
(bad)
pop
sub
addr16
mov
bound
sub
cli
pop
jo
pop
(bad)
inc
aad
popa
inc
adc
mov
mov
jmp
mov
int3
leave
mov
shl
cmp
stc
(bad)
int
pop
loope
iret
push
retf
out
test
out
in
mov
pop
push
add
jno
outs
mov
(bad)
pop
inc
aad
imul
push
dec
xchg
mov
(bad)
mov
test
and
mov
fist
jecxz
sbb
lea
mov
scas
and
add
pop
mov
iret
cs
push
cdq
scas
mov
ret
and
mov
lods
aas
push
mov
add
add
dec
adc
retf
fsub
hlt
sub
std
aas
xlat
pop
arpl
push
js
loopne
out
ja
repz
add
lahf
gs
mov
int3
push
mov
mov
push
dec
mov
stos
repnz
pop
or
add
mov
pop
inc
pushf
sbb
pop
pusha
mov
out
mov
cld
icebp
popf
push
dec
outs
hlt
imul
pop
test
add
int
mov
mov
cmp
mov
test
addr16
in
xor
pop
or
xchg
pop
pushf
jnp
add
call
jae
push
mov
test
retf
sub
or
inc
and
hlt
shr
mov
fst
cmp
adc
ins
inc
rol
mov
jbe
(bad)
outs
xor
cmp
je
inc
vphaddubd
inc
iret
mov
jb
test
retf
scas
mov
int
data16
jb
(bad)
dec
cmp
jno
lds
retf
pop
mov
push
std
xor
out
jl
outs
ds
dec
sbb
lahf
sbb
xchg
and
and
or
out
ins
jbe
out
jecxz
adc
gs
jp
xor
addr16
dec
fbld
xchg
aas
fild
push
xchg
(bad)
pop
aad
jmp
out
hlt
fld
sbb
pushf
and
pop
mov
mov
test
repnz
shr
jmp
adc
pop
loop
sbb
dec
add
dec
sub
mov
mov
cmova
xor
test
popa
mov
icebp
in
sub
xor
out
inc
pop
out
fadd
xor
and
lea
adc
add
and
call
call
cmps
mov
inc
jns
fidiv
or
out
(bad)
popa
and
stos
aas
(bad)
and
rcl
mov
adc
pushf
stos
push
(bad)
xchg
idiv
jp
ds
pop
ja
sti
std
pop
fsubr
into
or
js
out
add
inc
xor
inc
ins
cmp
inc
inc
lods
mov
add
je
mov
xor
sub
add
or
jge
outs
mov
xchg
stos
jecxz
in
mov
std
or
cs
push
mov
inc
xor
fistp
and
push
or
inc
xor
mov
sahf
movs
cld
fwait
xchg
mov
stos
mov
xor
js
cmp
in
pop
add
lea
aam
add
mov
cli
xor
js
daa
into
clc
cmp
dec
icebp
and
enter
mov
sub
and
mov
or
pop
jnp
fsub
mov
dec
jecxz
es
sbb
mov
mov
enter
and
inc
mov
popf
pop
lahf
lds
push
enter
out
mov
inc
jmp
and
jnp
ss
dec
xor
fs
pop
addr16
(bad)
imul
lods
lock
retf
pop
sub
inc
jns
mov
dec
outs
hlt
ins
cmp
cmp
movs
sbb
lds
loope
imul
mov
jge
sbb
xchg
ins
and
jg
mov
inc
fisubr
adc
ret
pop
cdq
pop
push
fcmovu
imul
lock
rcr
add
xor
xchg
lods
push
inc
iret
(bad)
mov
jbe
mov
ret
adc
outs
adc
jmp
outs
mov
(bad)
cdq
xor
or
js
movs
mov
mov
mov
stos
jmp
test
fsubr
bnd
inc
jp
leave
out
ret
sbb
add
icebp
cmp
xchg
push
pop
shr
add
sub
and
btr
sbb
jmp
jno
cmc
or
mov
jge
sahf
inc
aaa
(bad)
std
call
inc
jo
sbb
cmc
stos
fisttp
or
sub
pop
nop
daa
add
sbb
out
dec
pop
aas
data16
ret
iret
xchg
xchg
je
adc
cmp
gs
jmpw
(bad)
aad
sub
cmp
jno
imul
enter
mov
mov
jge
or
mov
test
addr16
ja
imul
cli
stos
add
outs
pop
sub
pop
push
mov
mov
or
jl
mov
and
add
enter
shl
sub
pop
pop
imul
in
ret
dec
retf
into
mov
xchg
adc
push
int3
xor
pop
lods
je
ins
ffree
rol
test
mov
rol
mov
cs
xchg
push
jge
or
test
test
xchg
call
sbb
in
push
imul
test
and
xchg
mov
dec
sahf
mov
dec
lds
jmp
pop
out
xor
(bad)
sbb
outs
mov
or
aad
dec
mov
ja
jno
stos
add
sbb
inc
fistp
inc
cdq
xlat
dec
cmps
iret
cs
adc
(bad)
fwait
mov
stos
jae
and
clc
or
ret
data16
sbb
xor
lods
js
push
push
inc
sub
call
sbb
retf
mov
cmc
xor
sbb
pusha
xchg
inc
in
(bad)
push
and
iret
ds
retf
jo
ret
scas
dec
pop
imul
cmp
test
arpl
out
mov
lds
jmp
xor
test
jo
mov
ret
in
cmp
mov
dec
mov
(bad)
loop
add
pop
pushf
gs
mov
dec
and
cmp
jp
xchg
cmp
inc
movs
imul
pusha
jno
lahf
dec
stos
mov
xchg
sbb
bound
stc
and
aas
mov
sbb
pop
xchg
sub
(bad)
test
repz
scas
sbb
sbb
test
push
jmp
aam
push
push
call
and
sub
sbb
test
xor
ror
ret
ror
mov
sbb
and
sub
and
mov
test
test
xchg
mov
add
inc
jecxz
mov
lea
sub
pop
jno
xchg
inc
pop
(bad)
call
jo
sub
pop
xchg
mov
pusha
jns
int3
add
loop
mov
or
lds
xor
in
shl
std
pusha
or
jg
dec
lods
jae
xchg
or
repz
jl
fild
imul
pop
dec
sub
mov
adc
loop
bound
dec
mov
pop
add
pop
test
sti
xchg
mov
sahf
shl
and
and
cmp
pushf
cmp
push
sub
enter
mov
pop
pop
jmp
ret
mov
repz
jge
mov
and
bnd
push
sbb
lock
or
sar
pop
and
cld
pop
je
cld
test
push
aam
imul
stos
pop
xlat
fiadd
mov
xor
imul
enter
xor
(bad)
sub
icebp
cmps
jecxz
test
xchg
mov
mov
inc
cmps
jae
lock
and
mov
pop
hlt
movs
cmc
inc
xchg
icebp
xchg
ror
add
sbb
jnp
jb
jl
lods
ss
les
icebp
jno
int3
sub
sahf
mov
xor
sub
(bad)
cmp
inc
or
xchg
retf
movs
mov
cmp
cmps
or
mov
add
movs
adc
add
adc
gs
sub
imul
dec
pop
fisttp
jl
fld
push
inc
frstpm(287
int3
jo
cmps
pop
mov
stc
cmp
sub
jmp
push
mov
pop
inc
add
lods
or
shl
or
mov
fidiv
fild
jnp
test
data16
mov
(bad)
mov
out
jno
push
(bad)
or
pushf
movs
cmp
(bad)
push
int3
push
test
pushf
or
add
adc
aad
push
pop
mov
out
sbb
and
mov
movs
(bad)
addr16
inc
push
movs
jg
pop
and
and
dec
mov
dec
or
jae
sbb
pop
xor
sub
pop
mov
add
sar
sub
jb
mul
call
pop
jl
push
fisttp
and
cli
popf
mov
adc
mov
sub
sahf
ret
xor
ficomp
mov
and
xor
xor
sti
test
(bad)
adc
push
fs
xor
jl
aaa
push
aam
shl
stc
ret
push
xchg
(bad)
xchg
call
fcmovu
add
fisttp
mov
pop
call
aaa
lock
or
js
xor
mov
cmp
and
mov
inc
inc
mov
jg
movs
pop
outs
ins
pop
jmp
das
hlt
sbb
mov
adc
push
test
adc
lods
jae
cwde
loop
aam
push
pop
sti
xchg
jnp
inc
cmc
std
dec
or
cmp
xchg
fisubr
cmp
mov
mov
push
das
jl
dec
mov
lock
scas
shl
ret
or
les
in
push
cwde
dec
mov
mov
mov
std
aad
sub
ror
mul
xor
mov
scas
xor
add
jl
shr
push
(bad)
pop
push
stc
lods
repz
sahf
lods
push
std
dec
mov
arpl
push
cmp
jle
mov
add
ret
cld
pop
mov
mov
dec
xor
mov
cmp
gs
sar
pop
(bad)
xor
sub
cmp
stc
ss
dec
aaa
sub
xor
(bad)
adc
or
add
ds
or
adc
into
adc
mov
mov
jb
jle
pop
(bad)
movs
or
inc
cmp
imul
push
jmp
add
ret
gs
adc
pushf
inc
test
js
pusha
(bad)
dec
repz
push
mov
daa
jae
ins
push
call
loop
mov
daa
dec
mov
sub
fdivrp
enter
sbb
fsub
mov
fidivr
xchg
inc
cmps
push
nop
call
fadd
xor
bound
mov
sbb
neg
fwait
lods
cld
fs
retf
fst
mov
dec
mov
xchg
inc
add
iret
daa
pop
pop
and
out
push
push
mov
lea
mov
push
dec
inc
dec
jl
pop
xchg
mov
mov
fisub
mov
cdq
jecxz
inc
dec
add
push
mov
aaa
test
push
dec
int
pop
stos
in
jb
fist
mov
mov
fisub
cdq
ins
data16
cld
and
cmp
sub
push
mov
dec
mov
xchg
jge
bound
stc
cmp
cmc
cmp
out
arpl
pop
xchg
mov
push
and
and
xchg
cmp
call
or
xchg
ret
in
sbb
xchg
jecxz
cmp
stc
loope
cmps
dec
call
inc
test
dec
fcomp
(bad)
push
push
dec
dec
les
jbe
pop
jo
int3
mov
sub
add
out
jno
push
out
cmp
pusha
(bad)
das
loop
cld
and
mov
test
and
in
mov
fwait
(bad)
ja
inc
pusha
and
dec
and
pushf
imul
dec
xor
mov
(bad)
gs
jge
test
jge
pop
loop
pop
add
loope
pushf
xchg
(bad)
int3
mov
lea
jmp
xchg
inc
jb
and
pop
jl
mov
scas
int3
or
les
dec
xor
push
push
cli
xor
push
into
in
or
push
repnz
adc
push
cmp
mov
push
push
into
fnstcw
mov
xor
shl
or
lock
add
pop
pop
imul
and
push
xor
icebp
mov
retf
cmp
arpl
ins
mov
call
call
cwde
test
aaa
ret
push
pop
rcl
and
aam
xor
repz
jae
pop
dec
sbb
call
leave
xchg
mov
mov
popf
push
sti
lods
inc
retf
test
xchg
adc
popa
es
mov
cmp
xor
cwde
sbb
in
inc
mov
push
sbb
call
out
adc
test
outs
clc
fwait
jae
mov
rcl
cmp
fsubr
int3
retf
outs
pavgb
mov
dec
pop
in
ins
jo
lock
aam
outs
push
mov
xchg
lahf
addr16
pop
icebp
adc
or
leave
xor
xchg
sub
jo
jg
dec
leave
ret
(bad)
or
xchg
fs
in
sti
retf
in
aad
rol
mov
ret
in
jo
pop
retw
and
inc
or
sbb
xchg
xchg
push
dec
jl
rcl
int
enter
daa
stc
sub
xchg
adc
dec
aas
outs
xchg
addr16
(bad)
adc
jmp
fstp
in
jb
aam
aas
mov
(bad)
dec
jp
jo
lahf
sbb
mov
imul
daa
xor
xchg
jnp
mov
or
push
sbb
aaa
lods
jnp
inc
stos
xchg
cmp
push
push
adc
jnp
cmc
pop
mov
dec
mov
jo
std
lock
mov
adc
add
movs
mov
sub
pop
not
jnp
in
dec
xor
add
rol
sbb
mov
inc
aam
test
fnsave
jmp
add
sti
cli
ror
or
rol
lods
and
in
(bad)
hlt
dec
test
cdq
or
mov
pop
stc
sbb
cld
cmps
jns
jecxz
or
xchg
adc
sub
loop
mov
jp
in
pop
(bad)
das
jmp
or
inc
sahf
mov
popf
xchg
adc
add
sbb
and
dec
in
les
lods
jnp
fwait
mov
mov
push
loope
add
cli
addr16
dec
inc
out
call
dec
and
jp
mov
fstp
push
dec
in
push
lock
sub
fnstsw
adc
jle
popf
std
std
sub
shl
mov
stc
xor
jns
stc
dec
test
lods
sub
out
dec
xchg
sbb
and
add
pop
xor
jae
ins
xchg
ins
or
(bad)
xchg
pop
add
sub
loop
jge
lods
jle
xchg
dec
fwait
or
outs
in
int3
mov
test
std
xchg
mov
fs
loop
mov
(bad)
fcomp
add
pop
sub
mov
adc
cmc
mov
scas
and
jae
shl
mov
mov
pop
movs
mov
xchg
mov
scas
sbb
not
rol
push
imul
dec
cs
in
or
in
shl
out
data16
xor
leave
jl
test
mov
adc
pop
mov
adc
push
retf
pop
xchg
ins
mov
cmp
out
shr
fidivr
xlat
ds
jp
adc
shr
sahf
stc
cld
push
neg
iret
and
fisttp
mov
mov
mov
(bad)
cld
add
fdivr
dec
mov
arpl
fnstenv
mov
fcomp
and
adc
ds
push
add
xor
mov
stos
iret
dec
sub
test
popf
pop
or
aam
xchg
mov
mov
xchg
add
sbb
data16
adc
repz
jno
push
mov
mov
jle
popf
clc
or
fwait
cmp
lock
imul
dec
inc
jo
pop
lea
mov
dec
dec
lods
push
xchg
push
gs
sub
add
push
adc
fnstenv
ins
(bad)
cmp
jecxz
xchg
ins
or
cmps
push
retf
enter
lea
add
(bad)
std
cmp
cmp
int
sbb
jg
sti
test
dec
xor
push
adc
out
(bad)
arpl
dec
push
xchg
(bad)
sub
stc
ss
outs
jb
pop
iret
repnz
and
scas
imul
retf
cs
ret
cld
shl
stos
icebp
out
cmp
add
jo
nop
and
jns
scas
jno
mov
out
call
add
dec
cmps
dec
aaa
cwde
lods
add
pop
dec
stos
cmp
xchg
(bad)
es
push
lods
xor
jbe
mov
inc
push
call
iret
add
das
retf
sahf
daa
pop
hlt
jg
and
stos
in
sbb
xchg
rol
sbb
fistp
lahf
dec
jbe
pop
(bad)
out
xor
mov
cmp
adc
jmp
loopne
imul
fstp
push
mov
xchg
jecxz
jecxz
dec
sbb
pop
in
fild
retf
out
add
cmps
xchg
loop
iret
aaa
out
sub
loope
mov
and
dec
push
imul
dec
sbb
xchg
add
jno
mov
dec
add
mov
mov
jl
fcmovu
repz
and
mov
jno
sti
push
call
pusha
mov
mov
push
jmp
mov
jno
push
xor
dec
inc
adc
xchg
gs
cs
scas
iret
inc
aas
pop
daa
jecxz
jns
push
sbb
lahf
xchg
or
mov
out
retf
adc
mov
inc
adc
adc
ins
jg
inc
icebp
movs
jbe
retf
xchg
pushf
mov
or
(bad)
enter
test
mov
sbb
dec
jle
push
and
outs
(bad)
fisttp
xor
enter
repnz
ror
out
and
pop
jg
add
mov
enter
cmp
push
jle
imul
fwait
cmp
rcr
fistp
inc
cs
push
je
jp
mov
push
mov
and
xchg
adc
and
push
push
pusha
add
daa
ss
fndisi(8087
inc
pop
mov
repz
test
int
adc
xchg
scas
jnp
jecxz
sahf
ret
mov
xchg
jecxz
daa
aam
repnz
or
fs
mov
mov
add
ja
cmc
(bad)
mov
jae
in
ins
push
inc
rol
and
lds
mov
mov
push
dec
test
adc
jb
mov
stc
cmp
add
data16
std
adc
nop
nop
sub
clc
movs
or
pop
cmp
loopne
loop
adc
dec
jne
inc
cld
mov
addr16
and
lea
sahf
xchg
xchg
and
pop
and
mov
in
mov
inc
inc
xor
loope
mov
xor
add
xor
pop
aaa
add
call
(bad)
ror
push
call
pop
enter
inc
mov
sub
or
mov
sbb
fsub
sti
cmp
sub
cmp
dec
dec
repnz
popf
push
inc
xor
xor
inc
ja
bound
rol
jns
pusha
sub
pop
or
fstp
fldcw
ret
push
mov
mov
pop
jae
out
test
test
test
jecxz
leave
ret
mov
pop
and
cmc
and
int
xchg
or
repnz
mov
mov
mov
jno
stos
mov
jnp
shl
in
mov
es
lods
sti
pop
cmp
xchg
ret
add
jmp
or
add
jnp
(bad)
jge
mov
cmc
adc
loope
or
push
out
cld
push
cmp
jecxz
es
ds
aaa
stos
iret
movs
and
fist
add
lea
leave
xchg
cmp
mov
pop
cdq
test
sub
arpl
inc
push
loope
dec
mov
mov
ss
outs
shr
mov
sub
xchg
movs
fiadd
cmp
pop
imul
mov
jg
ret
loop
add
pop
call
mov
sub
inc
and
jl
add
push
mov
mov
xlat
pop
adc
and
paddq
cmp
inc
jl
xchg
dec
sub
adc
inc
retf
cld
mov
lods
popf
inc
pop
add
inc
adc
dec
mov
aad
hlt
push
mov
add
daa
addr16
loope
das
push
or
cmp
lods
ss
sbb
add
xchg
jmp
push
test
add
sbb
xchg
push
aam
fisttp
push
ja
push
imul
call
mov
push
sbb
sbb
lea
or
stos
retf
pop
sbb
fmulp
mov
test
cli
fcompp
adc
inc
ret
mov
mov
(bad)
sbb
mov
jno
mov
jecxz
test
fcomp
xor
shl
inc
xor
not
dec
mov
mov
pop
cmps
sbb
add
lock
xor
xchg
ins
gs
out
ins
je
push
iret
ds
int
jl
jmp
retf
dec
push
daa
out
xor
adc
arpl
rcl
xchg
scas
mov
add
fwait
cmps
test
imul
mov
enter
fiadd
nop
outs
call
add
jmp
ja
pop
not
test
mov
shr
xchg
sahf
aas
pmulhuw
pop
add
jbe
arpl
(bad)
and
mov
fimul
jmp
cmp
js
dec
leave
mov
or
loop
js
adc
dec
fadd
xchg
repnz
imul
dec
mov
jns
mov
addr16
jo
jmp
or
and
jo
adc
fmul
ja
cmp
push
mov
jnp
in
leave
add
cmp
and
mov
mov
mov
dec
xchg
lock
mov
push
xor
(bad)
mov
sbb
rcr
int
inc
ror
mov
rol
jbe
in
push
dec
mov
aas
xchg
adc
jecxz
mov
xchg
xor
push
xchg
mov
dec
mov
sub
push
dec
sbb
adc
inc
js
inc
push
mov
lea
or
push
ins
shl
adc
repz
mov
vpcmpgtb
in
cmps
mov
pop
arpl
cmp
push
mov
xor
js
push
xchg
in
adc
shl
adc
dec
push
or
push
xchg
hlt
or
xchg
add
jno
out
jmp
popf
inc
and
xor
inc
jb
enter
mov
dec
push
jmp
xchg
shl
jmp
pop
cmp
cs
hlt
fsub
inc
pop
cld
add
mov
(bad)
sub
cmc
xor
or
push
in
and
adc
cmps
(bad)
mov
loopne
mov
lods
sbb
aam
es
mov
cmp
jp
in
loopne
cmps
pop
int3
cmps
and
xchg
and
add
pcmpeqd
hlt
out
xor
push
mov
int3
mov
mov
jg
mov
daa
stos
cs
test
in
aad
scas
sbb
xor
test
or
lock
(bad)
int3
xor
fcom
mov
jg
aam
(bad)
xchg
xchg
and
mov
cmps
mov
xchg
loopne
mov
sub
rol
fdiv
(bad)
xor
push
push
sbb
iret
sub
inc
xchg
lds
mov
mov
xchg
pop
sbb
xor
pop
jmp
imul
sub
sti
(bad)
sbb
adc
cwde
mov
pop
push
mov
leave
(bad)
out
outs
mov
and
out
les
imul
push
(bad)
adc
pop
pusha
(bad)
cmp
nop
xchg
test
pop
out
ret
sbb
je
push
popf
dec
inc
cdq
popf
or
(bad)
pop
sub
mov
enter
cmp
jne
icebp
or
mov
mov
outs
xlat
out
mov
push
cmp
leave
inc
outs
cmp
inc
sub
xchg
(bad)
add
adc
mov
addr16
inc
fdivr
jnp
xchg
clc
sub
sbb
sub
lea
jns
ret
ins
add
xchg
imul
jb
or
bound
sub
fldcw
cmc
inc
loop
adc
pop
mov
sbb
inc
xor
inc
pop
repz
lods
lods
jg
clc
imul
xchg
dec
outs
sbb
ret
shl
rol
pop
adc
pop
outs
fcom
pop
xor
and
(bad)
fstp
mov
cwde
lods
pusha
das
inc
or
pushf
mov
shl
add
jg
sbb
mov
mov
add
gs
loope
pusha
lea
inc
stos
gs
adc
adc
js
mov
jnp
cmps
xchg
and
movs
in
dec
sub
rcr
xchg
mov
test
jge
push
push
inc
push
jmp
add
retf
inc
loopne
retf
mov
pop
in
xchg
call
dec
div
cmp
mov
jb
xor
or
leave
adc
mov
mov
or
enter
iret
fild
push
push
xchg
mov
push
push
pusha
inc
adc
cmp
stos
leave
jle
mov
cdq
mov
mov
sbb
push
loopne
dec
and
test
cmp
icebp
and
adc
js
push
xor
es
xor
xor
data16
std
sbb
retf
push
cmp
pop
mov
dec
mov
jp
sti
xor
push
mov
mov
mov
xor
inc
clc
test
xor
and
aaa
mov
push
mov
mov
iret
int
xchg
stos
cmp
pop
rcl
out
xor
or
dec
push
dec
xor
sub
pop
sar
cdq
shl
xchg
xchg
imul
loopne
stos
and
dec
arpl
enter
inc
jnp
iret
imul
mov
lds
inc
ins
sub
fdivr
not
ins
push
imul
xchg
pop
out
lock
jns
rcr
or
sub
ins
loop
adc
cld
in
rcr
lahf
add
pop
repz
jecxz
push
cmps
and
adc
cmp
mov
adc
fnsave
ret
mov
fcmovne
ja
jnp
jecxz
inc
xor
mov
lea
retf
cmp
xchg
fwait
inc
ret
hlt
cli
les
stos
push
test
xchg
sbb
(bad)
in
mov
cmp
jae
adc
mov
adc
movs
inc
add
push
ss
test
jae
sub
mov
xor
add
fs
jl
test
mov
in
fnstsw
cdq
mov
xchg
cmp
add
lock
and
mov
pop
mov
pushf
push
adc
fst
push
sub
xor
(bad)
stc
xchg
and
mov
push
dec
push
int
iret
mov
aad
cwde
aam
push
hlt
ds
push
lds
push
dec
dec
pop
lods
repz
call
cmp
cwde
inc
ficomp
push
xchg
mov
xchg
je
data16
aam
jo
or
cmp
in
and
fcmove
cmp
push
or
repz
and
div
enter
(bad)
push
mov
mov
clc
nop
and
in
aas
cmps
clc
sub
out
popa
data16
inc
in
mov
pop
(bad)
jmp
dec
xor
or
lods
pop
out
jge
mov
sar
mov
add
or
pop
fadd
jmp
xchg
jno
pop
push
inc
movs
add
fxam
mov
pop
repnz
and
push
ficom
loop
ret
fs
fild
outs
cmp
push
aas
push
mov
shl
mov
cmp
sbb
ins
cmp
icebp
enter
push
add
and
rcr
call
in
adc
(bad)
xor
mov
sbb
xchg
mov
fimul
mov
mov
ds
pop
je
push
pop
or
push
jno
inc
mov
push
addr16
dec
fiadd
add
test
std
jae
test
fs
rol
ret
je
xchg
outs
arpl
jb
aaa
xor
xchg
call
mov
jae
lea
je
mov
ds
mov
sbb
mov
mov
pop
push
sub
popa
ficomp
std
fild
sahf
sbb
add
adc
or
xor
inc
sub
xor
inc
mov
adc
sbb
mov
pop
pop
inc
fdiv
sbb
je
shl
sbb
push
adc
cli
mov
(bad)
add
test
sbb
lods
or
retf
add
out
pop
xchg
rcr
pop
inc
adc
(bad)
fisub
sub
sbb
aaa
into
xchg
ins
xor
ds
imul
scas
sub
out
pushf
nop
xchg
cmp
sbb
adc
aas
arpl
push
(bad)
adc
stos
fld
jmp
sahf
jg
add
stos
jbe
mov
das
dec
or
sbb
outs
mov
repz
ss
hlt
mov
lock
mov
imul
sbb
push
jecxz
test
mov
jae
cmps
or
data16
dec
pop
sub
pop
push
fisubr
sar
addr16
(bad)
xor
movs
loopne
shr
scas
adc
cwde
gs
cld
jl
add
push
in
or
ins
jb
xor
push
cld
rcl
sahf
jbe
lea
jne
jnp
stos
cmp
ins
push
data16
dec
psraw
iret
xchg
ja
cmp
sahf
test
xcrypt-cbc
cmps
push
lock
mov
repz
jp
lock
ret
add
jb
inc
mov
scas
pushf
dec
adc
clc
retf
cmp
dec
cs
push
cmp
mov
cmp
cmp
mov
add
in
xchg
and
div
mov
sub
loop
xor
sti
add
adc
or
cmp
lock
sahf
je
adc
leave
sbb
in
(bad)
std
add
jne
mov
xchg
test
mov
mov
in
mov
shl
ins
push
inc
fcom
std
rcr
bound
or
retf
cli
mov
mov
mov
or
call
jmp
out
cli
call
push
xchg
fxch
shr
push
xor
icebp
pop
adc
xchg
std
clc
les
test
out
or
das
lods
pop
jmp
push
xchg
push
jp
clc
dec
dec
stos
and
or
dec
and
sbb
out
mov
js
xchg
xchg
mov
jg
push
popf
mov
dec
inc
aaa
push
adc
jge
push
pushf
fimul
in
or
sub
jl
pop
or
mov
test
cwde
jo
lods
sbb
inc
jb
or
daa
mov
xchg
std
or
call
dec
imul
int3
test
add
mul
mov
add
es
jge
outs
idiv
or
cmp
call
mov
sti
lock
jns
aad
sub
mov
pop
ins
cmp
sub
cli
cmp
outs
rcr
ja
inc
outs
shl
jmp
sbb
test
sub
icebp
mov
(bad)
jmp
ins
mov
in
jnp
push
mov
or
movs
rol
cmp
mov
es
popa
dec
mov
ins
jb
or
das
out
scas
jecxz
test
out
xchg
inc
call
mov
mov
mov
xchg
jo
push
(bad)
stos
add
pop
test
pop
das
mov
int
jl
inc
bound
jno
or
push
ret
ins
and
jp
pop
push
fiadd
loopne
popa
xor
mov
ret
push
mov
stos
add
mov
xor
pop
and
pushf
bound
repnz
aam
jmp
and
push
or
repnz
xor
sar
nop
jae
xor
xchg
dec
scas
and
aaa
ss
int
retf
sti
jge
dec
mov
adc
adc
mov
xchg
into
jne
in
iret
mov
iret
dec
aaa
fidivr
cmps
mov
and
pop
out
arpl
rcl
sub
jge
mov
sahf
lods
jle
(bad)
jp
mov
mov
adc
lods
mov
xchg
in
or
outs
cwde
stos
pop
jbe
mov
aad
jno
push
movs
jns
mov
jne
sub
jbe
and
fdiv
aad
daa
xor
adc
push
nop
mov
or
add
in
cld
nop
push
ins
pop
cmp
ss
or
pop
in
out
loope
test
xlat
mov
cmp
mov
test
jl
xchg
ins
push
xor
and
jno
pop
gs
aas
(bad)
(bad)
les
loop
mov
ret
lock
(bad)
inc
mov
stos
call
inc
push
mov
pop
sbb
and
and
or
cld
int
call
cdq
es
push
aaa
adc
mov
fstp
test
mov
push
mov
lock
rol
cmp
lods
fidivr
or
adc
mov
add
push
inc
loope
scas
ss
(bad)
stc
or
movs
push
test
(bad)
xor
cwde
(bad)
cmp
fcomp
mov
push
(bad)
jp
push
pop
cmp
iret
add
jl
ficomp
ror
xchg
pushf
mov
imul
ret
add
shr
sub
add
int
pop
mov
pop
or
scas
xor
ror
push
push
jmp
into
mov
inc
les
dec
jnp
sti
stos
repz
imul
mov
sub
call
test
(bad)
jmp
(bad)
gs
test
lea
xchg
mov
out
dec
dec
fnstenv
push
(bad)
pop
test
adc
rcl
push
xor
fcomip
adc
test
lods
sbb
or
jmp
leave
push
push
(bad)
jmp
push
test
inc
mov
ffreep
mov
les
shl
and
lods
fcom
ficomp
sub
push
lods
aam
loope
cmp
stos
es
aas
in
pop
cli
fwait
mov
inc
loopne
out
push
dec
fwait
jmp
and
fcom
pusha
pusha
les
mov
push
pop
or
not
lahf
sub
mov
or
pop
test
bound
adc
xchg
retf
sub
mov
and
add
retf
cmp
bound
cld
popf
js
cmp
repz
adc
cmp
fs
test
cmp
jno
fbld
fild
add
jle
(bad)
retf
mov
inc
dec
mov
push
dec
jb
aad
(bad)
mov
leave
lahf
test
sbb
popf
xor
stc
and
dec
scas
mov
mov
xchg
cwde
je
xchg
in
shl
les
popf
(bad)
int
mov
inc
jg
lods
cmp
shl
pop
sti
rcr
xchg
or
cdq
sub
sub
ror
mov
(bad)
jp
cmps
mov
cmp
out
pop
cs
jl
jge
je
dec
and
dec
stc
dec
sub
test
and
cmp
adc
or
xchg
dec
aas
sti
fisttp
pop
and
cmps
cmps
ret
ins
fs
loop
pop
mov
mov
inc
mov
and
ja
aas
dec
(bad)
enter
movs
jnp
loop
test
inc
lock
sub
mov
dec
inc
cmp
test
jo
fsubr
push
scas
xchg
sub
pushf
loope
in
mov
sbb
and
out
sti
inc
pusha
sub
push
jo
pop
jne
pop
sbb
xchg
das
pavgw
xor
push
movs
out
dec
mov
pop
shl
sub
mov
in
xchg
mov
dec
sub
inc
addr16
stos
ja
cmp
hlt
or
pop
test
xchg
(bad)
fisttp
pushf
fsubr
push
nop
int
aaa
das
test
(bad)
fistp
popf
jle
mov
ja
dec
cmp
mov
stc
aad
or
inc
mul
in
cmp
cmp
xor
imul
pop
leave
add
xchg
pop
(bad)
int
dec
xor
sahf
fld
inc
mov
sbb
cld
rol
test
jns
jb
mov
int3
retf
cli
or
or
push
sub
iret
ins
or
cmp
sbb
add
push
enter
add
jns
shl
sbb
xchg
pop
inc
stos
lahf
jne
push
mov
jl
jnp
mov
inc
cmps
shl
sbb
mov
loope
sti
jge
dec
nop
push
and
and
or
sbb
push
das
cdq
xor
es
lock
add
jle
mov
mov
adc
fistp
out
int
mov
or
jmp
xor
mov
sub
jle
scas
inc
sbb
in
popf
sbb
xchg
lods
jg
aad
in
or
hlt
push
dec
inc
adc
gs
push
movs
inc
stc
sbb
push
cmp
pcmpeqb
and
inc
mov
aas
fcom
push
stos
push
sub
imul
lods
xchg
sub
pop
iret
cmp
adc
retf
jo
sbb
pop
neg
lahf
cmps
inc
lea
dec
push
fiadd
popa
je
ror
jle
(bad)
mov
and
xor
cmp
xor
out
mul
int3
ss
(bad)
shl
pusha
xor
pop
(bad)
push
and
loop
adc
inc
ret
inc
arpl
pop
mov
inc
in
jl
fmul
out
and
and
jle
push
mov
imul
in
fcmovnu
pop
jl
pop
push
scas
adc
je
std
and
mov
ret
or
cwde
pop
pop
fwait
lds
add
repz
adc
(bad)
shl
es
mov
adc
pop
popa
jge
(bad)
sub
xchg
mov
mov
push
movs
xor
repz
jmp
mov
jecxz
adc
mov
loop
pop
add
movs
xchg
xor
fstp
(bad)
out
repz
mov
dec
cmp
inc
adc
test
shl
xor
adc
sub
cld
push
push
adc
imul
sbb
mov
jmp
push
jne
jl
ss
xor
inc
pushf
jns
in
mov
ins
inc
imul
and
fbld
shl
jge
push
adc
ret
dec
out
pop
push
cmps
scas
fst
sbb
aas
mov
ror
jecxz
mov
sbb
push
inc
dec
dec
ins
repnz
mov
jecxz
push
(bad)
ret
imul
and
in
jne
in
dec
cmp
outs
cmp
sub
inc
mov
fadd
sub
push
arpl
push
xchg
pop
cvtps2pi
pop
mov
repnz
mov
inc
js
loope
cmps
addr16
js
mov
mov
test
dec
dec
test
adc
aas
add
ja
retf
les
enter
shr
and
scas
aas
stos
fwait
lahf
add
rcr
dec
or
mov
aas
inc
ins
mov
das
inc
scas
js
mov
rol
pusha
icebp
add
arpl
inc
mov
cmp
fcmovbe
inc
xlat
mov
xchg
mov
xchg
(bad)
out
lods
sbb
fnstsw
jo
inc
adc
sbb
jae
rcl
mov
or
xchg
fist
push
add
shl
es
les
out
xchg
outs
repnz
adc
and
das
lea
(bad)
fidivr
fmul
jle
xchg
sub
pop
sbb
cld
xor
xchg
(bad)
cmp
popf
sub
xor
or
mov
or
(bad)
and
dec
dec
loop
xor
jle
push
jmp
mov
push
retf
dec
iret
mov
cmp
loop
ins
jbe
pop
mov
cmp
movs
mov
jne
jl
jo
cli
mov
sbb
xor
ror
lods
add
out
jg
push
mov
leave
aam
into
shl
cmp
or
jns
loope
inc
push
adc
retf
xchg
or
fisttp
arpl
(bad)
stos
xchg
out
push
popa
mov
cmp
mov
retf
fmul
xchg
cmps
push
aad
jge
mov
sbb
rcl
cmp
mov
sub
mov
mov
inc
(bad)
cmc
cmp
or
jae
jne
fisttp
push
xchg
mov
mov
mov
mov
and
adc
scas
cmp
mov
cmp
into
mov
test
dec
into
(bad)
ficomp
lahf
lahf
stc
push
mov
jmp
shr
shr
cld
jns
add
out
sbb
cmp
int
call
xor
xlat
cwde
repnz
pop
cmp
inc
add
imul
jge
ins
in
add
(bad)
dec
iret
mov
xchg
or
pop
jne
cmp
mov
pminub
sbb
test
fcom
cs
mov
call
pop
and
sar
sar
mov
push
loope
and
sbb
cmp
ret
movs
mov
push
rol
push
icebp
pop
and
cmps
dec
ss
inc
dec
js
les
pop
sub
(bad)
dec
xor
pop
test
aam
leave
in
fst
cld
and
fxsave
or
icebp
sbb
out
or
dec
adc
enter
xchg
sbb
or
xchg
pop
inc
sbb
sbb
push
push
(bad)
and
fdivr
outs
lods
xchg
push
and
in
and
mov
cmp
jbe
inc
cmps
jmp
mov
or
out
loop
sbb
jne
ss
add
adc
inc
test
dec
push
mov
jae
int
mov
add
or
mov
inc
jmp
test
aas
lods
adc
jg
les
or
adc
xchg
out
adc
jmp
sahf
nop
push
es
mov
or
jbe
imul
mov
sub
fcom
outs
mov
adc
(bad)
(bad)
fsub
inc
push
not
fwait
dec
imul
sub
jmp
mov
ins
lea
cmc
les
and
ins
cld
push
xlat
adc
cld
xor
adc
(bad)
test
push
aam
aam
pop
ror
jl
mov
ret
xor
mov
std
nop
test
mov
xchg
mov
pop
clc
mov
pop
adc
pusha
bound
mul
mov
imul
idiv
loopne
aad
scas
add
push
dec
(bad)
jno
stos
and
dec
loopne
out
xor
dec
cmps
xchg
dec
sbb
mov
aas
ins
aad
jne
shl
mov
cmp
pushf
pop
xchg
jne
dec
adc
xchg
(bad)
push
sub
les
mov
dec
dec
mov
in
data16
jne
jecxz
stc
dec
ins
inc
ss
sub
mov
jle
cdq
jmp
cld
xor
xchg
jmp
add
rcr
inc
or
xchg
or
and
int
fcomp
mov
add
xchg
or
push
mov
ret
or
ficom
or
mov
sbb
sub
cld
aad
aas
xchg
pop
jecxz
jmp
stos
hlt
inc
cmp
loop
pop
ins
lea
or
push
out
push
ins
cs
mov
add
jbe
mov
vshufps
adc
enter
jno
out
stos
sahf
cli
aas
iret
fbstp
jecxz
out
or
lock
sbb
add
xchg
xor
scas
jecxz
loop
cmps
loopne
push
not
inc
adc
(bad)
cmp
xor
(bad)
sahf
outs
and
std
in
push
leave
add
jb
arpl
push
jg
rol
test
loopne
fmul
(bad)
cmc
fidivr
(bad)
in
push
or
in
push
mov
xchg
sahf
or
adc
out
mov
rol
pop
lock
mov
sub
inc
xor
push
jns
int
sub
dec
and
add
inc
popa
mov
inc
cs
in
mov
imul
fidivr
test
xor
addr16
push
sub
gs
dec
mov
frstor
sub
jbe
and
push
out
add
jge
cs
ret
mov
mov
inc
inc
into
fdivr
out
mov
mov
ret
push
pop
jae
and
mov
dec
mov
loop
stos
cli
repnz
dec
cmp
add
lods
sar
enter
mov
test
xchg
repz
sbb
adc
push
mov
shl
pop
jne
aaa
inc
out
and
(bad)
jo
inc
or
retf
xor
sbb
mov
mov
je
addr16
sahf
pop
sbb
mov
cmp
call
call
pop
jmp
push
ins
test
sub
out
mov
or
stos
jno
push
jmp
mov
dec
jne
mov
mov
inc
push
cwde
push
sub
(bad)
stc
(bad)
(bad)
aam
mov
mov
inc
imul
jo
pusha
cwde
ins
js
jp
popa
jp
mov
rcl
dec
ss
dec
das
(bad)
jno
addr16
stc
add
rol
js
xchg
mov
or
rol
cmp
cmp
jb
adc
hlt
sbb
popa
pop
cmp
xchg
mul
pusha
cdq
in
and
dec
fcom
jno
sahf
mov
and
dec
pusha
cmp
adc
shl
push
push
push
dec
(bad)
mov
enter
cwde
mov
sub
xor
sbb
std
into
adc
aad
push
es
pop
xor
ja
ins
jmp
movs
std
and
setbe
movs
ds
imul
les
push
add
dec
mov
sub
push
imul
push
or
test
cdq
(bad)
imul
mov
push
sbb
fwait
adc
(bad)
push
gs
inc
adc
jne
dec
sbb
pop
adc
in
fild
pop
and
lock
loope
clc
stc
scas
xchg
in
dec
push
lods
xor
or
jecxz
jp
add
test
add
push
scas
cs
data16
or
or
clc
mov
or
xchg
ds
cmp
jmp
xchg
js
inc
xlat
das
lahf
mov
ins
idiv
or
pushf
jae
sub
dec
enter
dec
gs
ss
pop
xor
mov
sar
std
inc
movs
cld
arpl
cmc
jnp
sbb
sbb
aaa
ja
sub
push
push
sub
mov
daa
pop
loop
or
bound
xor
xchg
jl
jns
shl
mov
sub
inc
inc
inc
ins
mov
inc
ins
aad
adc
retf
je
dec
vaddpd
ss
out
cmp
mov
mov
in
mov
stos
rcr
sbb
sahf
mov
push
test
stos
sahf
dec
push
retf
pusha
cmps
movs
mov
xor
sub
addr16
and
adc
add
pop
mov
and
push
xchg
test
jae
push
push
test
in
pop
repz
mov
mov
iret
fwait
out
test
xchg
stos
or
push
cmp
inc
xor
cwde
xchg
data16
icebp
mov
inc
jnp
fucomi
test
mov
fisttp
or
pushf
cmp
push
dec
sbb
div
rcr
test
dec
out
das
sub
xor
inc
std
sub
icebp
cmp
retf
pop
sbb
push
or
push
in
cmp
(bad)
sub
add
cmps
les
movs
pop
nop
lar
mov
ret
add
enter
xor
pop
xor
sahf
lahf
inc
out
jl
into
inc
push
or
(bad)
(bad)
ror
aas
sti
xor
mov
xor
or
retf
pop
fchs
push
sub
and
and
popf
adc
fidiv
ins
(bad)
push
out
dec
add
cmp
lahf
add
xor
inc
push
sbb
(bad)
lea
pushf
jmp
mov
or
inc
inc
je
sub
push
add
dec
xchg
aas
or
pop
push
popa
jns
retf
cmp
xchg
movs
pusha
cmps
push
or
jno
fcompp
dec
push
push
icebp
pop
or
mov
pop
call
mov
fcomp
lea
and
and
xor
cdq
xor
scas
mov
(bad)
fdivp
or
sbb
sub
xor
mov
test
test
push
test
inc
xchg
mov
mov
add
inc
push
es
inc
not
and
ja
pop
test
mov
pop
outs
(bad)
push
push
jle
pushf
and
xchg
xchg
pop
ror
adc
and
call
sub
and
out
mov
dec
test
into
jmp
popf
pop
or
and
lods
mov
out
in
inc
pop
movs
loope
pop
jns
jo
scas
mov
xor
retf
retf
and
fld
fisttp
pop
push
and
push
jo
xchg
js
pop
aas
mov
out
imul
xchg
and
cdq
cmps
dec
stc
adc
mov
dec
vmread
and
sub
push
fimul
pop
xchg
jmp
xor
pop
and
inc
out
or
push
pop
fst
push
mov
(bad)
mov
arpl
cwde
clc
jecxz
cmp
mov
xchg
lock
dec
push
xor
(bad)
into
push
inc
jb
outs
mov
jge
js
jl
sahf
jmp
mov
add
mov
fwait
pop
pop
inc
aad
iret
iret
push
fist
cwde
add
cmps
arpl
adc
out
xlat
mov
es
sub
xchg
push
loop
pop
(bad)
inc
cmp
pop
adc
mov
mov
cwde
cmps
sub
mov
sti
mov
aaa
mov
mov
scas
jl
addr16
and
repz
out
sub
mov
es
imul
jg
imul
jns
imul
xchg
adc
icebp
adc
xor
push
jmp
push
movs
push
jg
jmp
je
push
xchg
aaa
scas
dec
clc
lods
adc
in
pusha
outs
stos
push
fisttp
and
ds
data16
sub
pop
fmul
push
add
shl
cld
add
pop
and
xor
fbstp
pop
iret
idiv
popf
cmps
mov
cmc
jg
sahf
sub
add
je
push
push
push
mov
push
jns
xchg
add
in
adc
cdq
push
xor
arpl
mov
jnp
cmp
dec
scas
test
lds
pusha
mov
add
(bad)
and
mov
xor
mov
daa
xor
add
lea
sub
in
sbb
or
adc
fist
les
push
popa
in
cmp
test
popf
(bad)
xchg
aaa
dec
cmp
xchg
fldenv
jns
mov
mov
jnp
pushf
xchg
mov
div
clc
adc
push
xor
sahf
xchg
ds
sbb
je
mov
sub
mov
or
pushf
mov
or
popf
(bad)
popf
sbb
and
pop
pop
xor
fldenv
jp
push
xchg
push
bound
in
test
cmp
cmps
and
jge
jnp
xchg
push
xor
popf
mov
inc
cmp
(bad)
jne
outs
addr16
rcl
mov
mov
mov
mov
(bad)
iret
sbb
push
cmp
push
jg
mov
mov
cmp
pop
xchg
call
pusha
cli
aaa
shl
adc
inc
mov
fidiv
push
cmps
dec
ret
pop
int
fsub
je
mov
rol
(bad)
lods
mov
stc
loop
mov
jmp
fsub
lods
ret
shr
jmp
add
loopne
xchg
inc
call
sahf
enter
aaa
jmp
loope
add
dec
inc
xchg
xchg
pushf
ret
add
(bad)
mov
and
mov
and
jge
in
js
ja
stos
jp
add
mov
movs
and
(bad)
mov
push
int
xor
in
xchg
fs
pop
sar
(bad)
dec
xor
sahf
xor
or
mov
mov
clc
adc
xchg
sti
arpl
cs
and
in
xchg
pop
add
loope
dec
mov
xchg
jae
mov
xor
aad
test
xchg
xor
retf
fsubr
dec
(bad)
mov
push
in
inc
ins
adc
cmps
popf
out
lea
push
push
xor
fcmovu
in
mov
mov
jp
add
pop
sub
pop
mov
fsubr
call
pop
call
mov
call
dec
xor
xor
jo
dec
jle
pusha
xor
ret
add
std
mov
in
push
cld
mov
scas
sbb
lahf
mov
retf
mov
mov
cld
cmp
mov
cmp
ja
xchg
fwait
sub
outs
test
in
daa
push
adc
pop
or
mov
push
or
leave
shl
jecxz
dec
mov
cwde
nop
xlat
imul
adc
mov
push
xchg
push
mov
sbb
add
out
jle
(bad)
clc
out
stos
mov
das
cmps
pop
popf
sar
pop
scas
mov
int
bound
push
jae
rol
clc
push
add
cmp
(bad)
int3
push
pop
sbb
shl
pop
ficomp
inc
jb
cmp
std
ja
popf
dec
xchg
dec
push
cmps
mov
movs
xlat
add
sbb
outs
lods
inc
aaa
icebp
fwait
inc
fdiv
ficom
or
xchg
nop
enter
repz
ror
jmp
dec
ficom
xor
(bad)
pop
ja
fst
imul
jo
aas
retf
stc
add
push
sbb
xor
mov
jmp
daa
popf
loope
shl
into
retf
sbb
pushf
mov
cmp
bound
fimul
inc
inc
xchg
fnsave
add
mov
outs
pusha
pop
fiadd
dec
mov
pushf
cmp
xchg
mov
adc
push
call
jl
call
movs
clc
dec
or
jecxz
lea
outs
or
push
in
pusha
adc
rcl
vmovaps
or
(bad)
push
push
clc
lods
mov
inc
push
xchg
sub
push
ret
or
add
push
xor
xchg
movs
in
cmps
pop
sub
xchg
ficomp
dec
mov
pop
pop
sub
push
(bad)
stos
mov
into
loop
(bad)
lock
inc
xchg
mov
in
test
xchg
mov
hlt
dec
xchg
cmps
out
jno
mov
fiadd
mov
loope
test
stos
out
jne
mov
and
mov
fs
icebp
(bad)
bound
fiadd
out
test
pop
jae
jnp
scas
(bad)
or
out
fdivrp
loope
xlat
arpl
pushf
jmp
cld
pop
jge
xor
rol
dec
cmp
inc
dec
push
aaa
ins
sub
outs
xchg
mul
std
sti
xor
sub
fld
adc
adc
popa
bound
cld
jecxz
arpl
repz
push
sbb
jp
call
sbb
push
mov
adc
mov
gs
mov
test
xchg
sbb
jmp
mov
fisub
jns
ds
xor
lock
pop
sar
xor
push
sbb
mov
pop
jno
rcr
mov
jae
jmp
repz
jne
adc
pop
fwait
mov
add
xchg
mov
ins
cli
push
add
call
sub
add
fwait
div
pop
add
jno
push
enter
ss
repz
in
fmul
cwde
adc
mov
mov
ds
leave
or
and
aaa
pop
jnp
scas
pop
jmp
xchg
adc
std
mov
out
ja
mov
adc
add
mov
and
aas
in
into
das
jo
xchg
pusha
icebp
and
mov
xor
movs
cmp
out
pop
rcl
fwait
mov
nop
xchg
xchg
push
shl
out
aas
xor
mov
imul
sbb
sbb
hlt
mov
xchg
int
outs
cmp
repnz
jo
mov
fwait
repnz
call
mov
in
push
cmp
and
in
inc
pop
out
mov
jmp
sub
scas
lds
dec
out
xchg
mov
mov
jae
and
pop
sub
push
sbb
cmp
inc
sahf
test
or
jg
retf
leave
mov
xchg
or
(bad)
pop
sti
add
add
pop
sub
outs
pop
sub
cmps
sbb
push
je
mov
(bad)
ret
aaa
lods
cmp
pop
ret
es
fld
out
into
xor
pop
ins
pop
adc
or
out
mov
or
mov
cld
push
in
add
and
xchg
fsubr
xchg
jmp
xchg
fsub
mov
adc
inc
outs
jp
xchg
xchg
adc
(bad)
pushf
push
push
into
inc
inc
test
retf
(bad)
jns
cs
ret
xlat
nop
and
lahf
xchg
jmp
pop
lahf
jo
pop
xor
int
dec
jge
push
sbb
shl
lods
sub
jg
push
ret
cmp
std
mov
arpl
sub
jge
fcomp
fbld
hlt
sar
pop
and
mov
jns
sti
and
ficomp
mov
jb
push
mov
dec
std
xor
xor
test
xchg
pop
mov
repnz
jp
xchg
outs
sub
ror
jp
fsub
js
pop
add
xor
fisubr
fucom
cmc
popf
int
aaa
dec
out
jmp
pop
pusha
fdiv
xor
sub
sbb
in
cmp
inc
aaa
cmp
sbb
pop
in
dec
or
cmps
mov
mov
jmp
dec
mov
push
mov
mov
push
aam
test
loope
out
and
loopne
mov
xor
xor
inc
in
push
cmp
sti
push
ds
jb
dec
mov
mov
sbb
fistp
aad
repnz
retf
push
push
lock
jne
xchg
leave
rol
mov
jmp
ror
sub
jns
sbb
xor
aas
imul
lahf
pop
xchg
int3
cmp
ja
or
cmp
and
xchg
pop
jmp
inc
xchg
call
pop
mov
scas
xchg
inc
jmp
pop
(bad)
retf
sbb
ins
lds
repz
mov
xor
and
ror
fisub
dec
mov
stos
dec
pop
(bad)
data16
hlt
dec
cmp
xor
(bad)
in
cmps
mov
in
ja
cmp
sti
outs
les
jge
retf
movs
into
iretw
mov
mov
adc
out
dec
push
or
push
in
xchg
xor
cs
pop
mov
mov
mov
les
and
mov
lds
out
xor
pop
icebp
lods
jo
or
mov
mov
fimul
and
daa
jecxz
mov
out
(bad)
fild
test
xor
lock
ins
sbb
scas
xchg
call
retf
or
mov
in
sbb
scas
ds
add
jae
adc
aas
xchg
ja
fcom
loop
fimul
paddusb
mov
jns
fisttp
sahf
nop/reserved
jbe
xchg
push
push
sar
dec
sub
bnd
pushf
adc
into
jbe
xchg
pop
jbe
clc
pop
pop
adc
fwait
repz
xchg
mov
out
sub
sahf
imul
sar
shr
and
lock
stos
jae
pop
(bad)
ret
lods
popa
imul
xor
js
data16
mov
aas
cmps
xor
xchg
sub
adc
enter
std
in
xor
and
das
adc
scas
add
loop
lahf
mov
in
movs
mov
pop
in
sbb
push
mov
sbb
hlt
mov
xchg
mov
push
sbb
jmp
shr
and
sbb
dec
fsubrp
fimul
aad
das
or
add
inc
pop
push
repz
mov
int3
lods
jp
jne
push
adc
jl
or
loop
pop
push
cmp
lahf
sahf
dec
popa
pop
into
jmp
test
lods
sar
pop
pushf
(bad)
mov
icebp
push
or
lods
ins
mov
in
ja
mov
fnstsw
cmp
popa
or
xchg
or
shl
adc
jnp
inc
lahf
or
repz
add
pop
repz
test
adc
jbe
outs
xor
and
call
neg
mov
mov
cli
retf
fidivr
jo
les
dec
inc
mov
cmps
jno
xchg
jne
adc
mov
xchg
jp
push
push
es
rcr
popa
add
jbe
loope
push
sbb
cmp
test
sar
xchg
(bad)
add
pop
fcom
retf
sbb
ficomp
mov
rol
outs
fwait
aas
fistp
retf
stc
mov
ins
mov
rol
dec
js
dec
mov
pop
iret
test
loopne
sahf
imul
call
push
mov
ja
push
adc
xchg
call
hlt
rcl
jno
ss
pop
jmp
int
aad
push
aad
jb
fnstcw
mov
test
xchg
jns
push
scas
retf
(bad)
enter
dec
xchg
repz
hlt
and
cli
push
aam
cld
cld
into
sub
scas
ret
sbb
and
push
daa
je
fs
push
mul
mov
mov
push
mov
fs
js
sub
mov
loop
test
lahf
les
xchg
add
data16
cmp
push
inc
sbb
inc
push
lods
xchg
in
cmp
pop
mov
sub
push
cmp
jecxz
inc
les
fld
retf
adc
sahf
je
push
mov
das
cld
inc
ror
rcl
mov
int3
jge
pop
inc
inc
pop
jbe
xor
push
mov
push
pop
scas
jns
add
xlat
fcomp
push
or
movs
mov
mov
inc
out
les
xchg
std
mov
sub
in
jle
sbb
push
cmc
push
push
mov
pop
rcl
adc
cmp
push
shr
xchg
cmp
push
loope
sub
cmps
xor
jmp
pop
shl
aas
ds
sti
sbb
addr16
movs
stc
and
and
push
sbb
mov
hlt
or
push
int3
mov
mov
aaa
add
ret
adc
jns
jmp
inc
xor
sbb
pop
sti
adc
mov
fistp
fnsave
jmp
(bad)
or
fmul
pop
test
adc
dec
mov
cmp
pop
aaa
rep
(bad)
popa
loope
sub
cmps
adc
pop
dec
pop
mov
jmp
pop
lods
push
(bad)
jle
gs
lods
dec
mov
fwait
xor
and
xor
fstp
cmp
xchg
out
(bad)
adc
sar
and
lock
sub
das
loope
jae
mov
sahf
sbb
mov
ss
mov
adc
(bad)
pop
arpl
jae
mov
jge
xchg
or
pusha
inc
xor
or
mov
mov
rcr
stos
cmp
jp
loop
fs
dec
mov
imul
cmc
sub
(bad)
dec
cmp
mov
retf
and
jns
sub
pop
data16
pop
push
jnp
cmp
dec
sbb
in
cwde
pop
or
push
test
dec
xchg
and
xchg
(bad)
call
xor
sbb
out
pop
and
jnp
jnp
dec
out
mov
and
xchg
mov
pop
shr
mov
cmp
adc
sbb
dec
clc
mov
mov
into
aas
(bad)
mov
lods
jbe
mov
jno
xor
pop
jae
cmps
pop
hlt
pop
mov
push
scas
sub
xchg
add
stos
sbb
jg
pop
mov
ss
(bad)
retf
mov
add
add
xchg
movnti
fidivr
pop
gs
outs
sar
xchg
pop
dec
mov
cmps
pushf
inc
xchg
jbe
je
das
jmp
test
shl
xor
in
jecxz
cs
mov
test
ss
rol
jb
shl
mov
adc
fbstp
mov
inc
(bad)
sahf
mov
xchg
daa
loopne
or
pop
jae
xor
das
cdq
popa
cdq
ja
jne
mov
push
and
sub
xlat
aaa
rol
push
bound
call
push
pop
dec
cmp
hlt
push
inc
das
mov
out
stc
sub
jmp
std
mov
xchg
fwait
and
dec
mov
mov
xchg
(bad)
sub
in
xchg
mov
fldenv
inc
ss
push
das
out
in
pop
push
pop
add
inc
inc
or
fmul
xor
mov
jl
push
loop
dec
push
push
mov
movs
dec
test
(bad)
fucomi
lea
popa
imul
aam
push
cmps
mov
cmc
(bad)
jp
(bad)
fdiv
adc
sbb
jo
mov
jp
inc
repz
lock
inc
data16
mov
sahf
mov
bound
int
add
lods
pop
push
in
and
mov
push
push
adc
push
push
test
cs
pop
sbb
adc
in
inc
jne
or
cmps
add
test
stos
adc
and
or
or
rol
sbb
mov
leave
push
jne
aas
stc
jmp
jne
enter
imul
retf
and
out
(bad)
out
push
sbb
rcl
push
iret
fidiv
sbb
mov
xor
sub
loop
dec
xchg
cwde
push
sub
cmps
sbb
and
xchg
pop
sub
leave
fnstenv
fs
stos
std
mov
clc
jnp
xlat
pop
mov
mov
mov
test
inc
mov
add
pushf
(bad)
scas
dec
sub
xchg
jmp
xchg
push
das
sbb
push
adc
pop
inc
cmps
jmp
xchg
sub
add
mov
xchg
inc
std
adc
mov
sub
scas
pop
sbb
add
cli
inc
lahf
xor
leave
scas
fsubr
adc
cmp
retf
shl
sub
xor
movs
jge
mov
mov
das
pop
cld
mov
cmps
js
rol
mov
jmp
mov
outs
lods
ret
push
xor
jbe
mov
pop
fwait
in
push
or
push
aaa
test
xor
push
pop
dec
mov
cmp
out
dec
sti
lea
inc
adc
test
clc
xor
es
fimul
mov
int3
sub
mov
sbb
add
xor
pop
lock
mov
or
adc
add
in
push
stos
out
lods
in
jmp
mov
nop
nop
je
pop
and
imul
pop
clc
inc
ret
push
lock
push
xor
xchg
jae
stc
ins
jnp
add
add
pop
mov
outs
call
mov
lods
stos
xor
sbb
inc
rcl
call
mov
jo
jae
dec
icebp
mov
daa
das
lock
xor
sub
sbb
mov
rol
rol
mul
mov
popa
fdivp
je
add
xor
pop
mov
test
out
or
into
movs
aam
ja
push
or
push
arpl
push
fcmovnbe
pop
or
mov
adc
(bad)
xor
or
jb
mov
push
jg
sub
and
add
dec
inc
adc
and
mov
jns
div
rcr
iret
cmps
push
adc
or
or
jle
out
jmp
mov
jl
pop
mov
xor
xor
xor
pushf
and
push
xor
pop
push
xchg
int3
int
add
out
xor
push
sbb
inc
jge
mul
adc
repz
bnd
sub
push
xchg
adc
sub
sub
sub
iret
cmp
dec
jmp
fld
repz
pop
mov
push
adc
mov
adc
mov
push
adc
enter
xchg
test
rcl
repnz
addr16
int
addr16
enter
add
sub
outs
xchg
inc
nop
fistp
sbb
data16
shr
jb
repnz
or
ja
bound
das
ins
xchg
pop
pusha
pushf
bswap
xchg
fwait
mov
cmps
shl
pop
xchg
dec
mov
sbb
cmp
mov
shl
push
inc
div
nop
push
test
lds
xlat
enter
test
clc
and
dec
xchg
imul
pop
mov
cmc
stos
add
inc
adc
mov
mov
cmp
or
cmc
popf
scas
(bad)
in
addr16
stos
jno
pop
ja
sbb
sub
std
cs
push
and
sbb
jns
hlt
push
cmps
dec
and
push
cmc
or
cmps
jbe
add
sub
jmp
cmp
push
pop
das
jmp
dec
(bad)
in
fldenv
sahf
sub
mov
es
popa
stos
cli
xchg
fcom
popa
fwait
enter
ds
movs
jle
jecxz
pop
imul
dec
fldenv
retf
stc
inc
aam
sub
cmp
and
popf
and
loope
push
out
test
fisub
test
sbb
test
inc
cmp
and
fld
test
cmp
pop
push
xchg
or
cwde
ja
out
dec
dec
adc
daa
xchg
lock
cmp
jne
in
mov
jns
mov
ret
popa
add
repnz
rcl
ja
push
inc
jns
sub
cmps
cmp
sbb
xchg
mov
fdivr
ret
cwde
mov
mov
sub
hlt
aaa
sbb
add
pop
ficomp
mov
lahf
fistp
adc
into
jo
mov
sar
ficom
sub
jmp
mov
or
clc
(bad)
push
call
or
mov
sub
stos
iret
not
clc
adc
push
rol
loope
mov
cs
dec
inc
sbb
mov
push
sbb
mov
fld
outs
inc
rep
mov
les
arpl
xor
call
and
adc
jg
inc
sub
pop
cdq
or
pmaddwd
imul
loop
or
mov
and
fdivr
popa
xor
jg
xchg
dec
out
cmps
adc
das
clc
cmps
xor
sub
fdiv
scas
lock
mov
or
nop
pop
sbb
into
aad
lods
pop
mov
lea
es
xor
xor
loop
xchg
cld
and
sbb
leave
inc
cmps
movs
inc
adc
aaa
sbb
sub
inc
push
adc
jnp
fisttp
jae
fsubr
jp
mov
and
cmp
jg
adc
mov
es
pop
jg
push
rcl
mov
mov
pop
add
push
dec
into
xchg
int3
ret
mov
nop
cmp
fstp
cli
xchg
in
stos
add
fs
loop
fisttp
cld
sahf
push
(bad)
test
dec
(bad)
fs
push
mov
neg
jb
pop
pushf
mov
xor
ds
cmp
adc
into
test
scas
hlt
(bad)
sub
cmp
cs
lock
pop
call
add
pop
cmps
mov
bound
retf
pop
enter
and
mov
mov
cmps
fisub
pop
jecxz
ja
xchg
sbb
test
mov
xchg
mov
out
add
jb
add
cmps
jmp
cmp
mov
int
mov
stc
cs
xchg
loopne
stos
loope
sbb
push
gs
sub
loopne
mov
add
daa
repz
cdq
bound
mov
and
xchg
pop
mov
jbe
lahf
xor
add
sub
dec
push
lods
test
xchg
shl
int
mov
mov
int
loop
lods
cmps
xor
push
push
xchg
repz
xor
jnp
pop
xchg
shl
test
cli
fwait
ins
mov
mov
add
xchg
idiv
xor
mov
sti
rcr
or
pop
pop
sub
mov
adc
cs
inc
add
lods
into
or
pmullw
movs
fst
push
sbb
fidivr
cmc
(bad)
cmp
dec
out
retf
sub
push
add
xchg
nop
jecxz
mov
int3
and
out
popf
fbld
out
leave
pop
sub
ja
jecxz
cld
(bad)
mov
or
cmps
loope
cmp
mov
retf
mov
stos
jg
cwde
jnp
push
inc
jb
xor
imul
imul
xchg
or
sub
add
gs
push
fsubr
bnd
mov
(bad)
aad
pop
leave
add
mov
add
movsx
mov
in
lds
push
test
mov
shl
xor
mov
aaa
add
jcxz
lods
xchg
jnp
jecxz
inc
mov
add
cmp
dec
sub
or
xchg
lds
lock
cmp
aad
mov
inc
retf
push
sub
xlat
outs
xlat
cmp
sub
movs
add
lea
or
aad
and
fidivr
mov
in
adc
jne
cmp
jmp
mov
push
stos
cmps
out
cmp
lahf
xchg
mov
ror
jns
stc
out
jl
out
sbb
add
mov
xchg
ror
cli
push
xor
jecxz
ss
(bad)
and
stc
sahf
mov
or
daa
xor
pop
cmp
cmp
pop
jae
stc
mov
inc
mov
sub
sub
(bad)
fdiv
push
ja
lock
es
hlt
sub
pushf
scas
js
jmp
(bad)
enter
rol
xor
and
add
dec
in
mov
xor
mov
out
cmp
jmp
(bad)
(bad)
and
dec
int3
adc
mov
data16
push
sbb
mov
call
mov
sbb
sar
mov
cld
or
inc
jo
or
fidivr
mov
sub
or
jge
jmp
xor
mov
add
push
fistp
push
mov
add
dec
in
scas
xchg
sahf
or
mov
lock
adc
test
test
pop
outs
lahf
mov
sub
int3
clc
dec
xchg
daa
jno
mov
into
inc
enter
fcom
mov
or
push
or
push
in
ins
cmp
pop
adc
cmp
ja
cmp
daa
dec
sbb
lock
test
pop
loopne
(bad)
enter
jmp
pop
mov
mov
addr16
inc
fcom
sbb
movs
repz
int
pop
push
jno
nop
and
sbb
xchg
push
ror
test
in
push
push
lea
ins
mov
mov
cmc
fldenv
cmp
dec
xchg
lea
call
stos
sbb
xchg
dec
mov
in
leave
pushf
dec
scas
mul
add
stos
jecxz
mov
rcr
ret
in
imul
outs
xchg
jns
loop
dec
jns
fcom
add
imul
in
inc
pop
pop
sub
popa
cs
fld
int
sub
lods
neg
rol
das
fdiv
mov
mov
jmp
sar
ret
outs
sbb
inc
mov
inc
popa
jae
push
xchg
(bad)
repz
retf
xchg
sub
sub
sub
push
jge
cli
leave
push
and
adc
(bad)
jecxz
lahf
sbb
dec
test
mov
or
inc
or
dec
mov
rcr
adc
inc
frstor
sti
inc
adc
add
sub
imul
jo
dec
cmps
cs
iret
ret
xor
inc
movs
mov
aad
shl
sbb
test
pop
mov
dec
jne
add
sahf
push
cld
mov
pop
repnz
fistp
shl
clc
xlat
call
sbb
xchg
jecxz
es
xor
sahf
pop
mov
retf
dec
mov
test
push
nop
inc
cmps
retf
ins
bound
hlt
jp
push
jbe
push
sbb
repz
lods
adc
fldenv
popa
retf
ds
mov
mov
sbb
push
and
sti
dec
fdiv
or
fldenv
or
les
mov
jp
popf
mov
ret
fstp
pop
sub
mov
xor
xchg
inc
jmp
and
inc
cmps
cli
ret
pop
(bad)
ud1
jmp
movs
fmul
shl
sbb
or
or
test
cmp
daa
adc
(bad)
fucom
mov
jnp
rcr
sahf
repnz
and
hlt
adc
cmps
push
call
cmp
push
out
dec
arpl
int3
popa
rcr
add
sbb
and
mov
fs
shl
adc
aas
xchg
shr
inc
mov
shl
adc
mov
inc
or
inc
ja
jecxz
das
aaa
mov
test
out
test
pop
jnp
stc
or
aam
inc
call
enter
retf
aas
ds
push
jmp
mov
xlat
mov
and
cmp
xchg
fild
xlat
repnz
inc
sbb
rcr
push
xchg
mov
mov
jmp
pop
pop
push
jmp
mov
pop
out
sub
push
xchg
cdq
imul
push
pop
movs
ss
mov
addr16
pop
mov
push
(bad)
(bad)
mov
out
fmul
sbb
adc
aam
(bad)
fdiv
pop
(bad)
mov
cmp
(bad)
std
ins
je
dec
mov
fucompp
mov
imul
xchg
shl
add
xlat
mov
aam
and
out
mov
mov
sbb
jmp
out
jmp
and
push
xor
jmp
cmps
cmp
mov
adc
cmp
data16
(bad)
pushf
data16
sub
sar
push
ds
iret
dec
cmp
popf
loopne
push
cdq
inc
and
xchg
xchg
fld
add
sar
mov
ins
rol
inc
mov
or
mov
sahf
sbb
jle
repz
xor
fdiv
push
add
cmp
mov
sbb
inc
mov
(bad)
sub
xchg
repz
pop
cld
xchg
lods
int
call
and
and
test
fwait
js
outs
cmp
repz
bound
idiv
push
jbe
mov
popf
cmp
inc
add
xor
popa
xchg
repnz
test
shl
pushf
jno
adc
pop
push
mov
lock
pushf
or
xor
mov
call
pusha
dec
test
jo
aas
jge
cmps
add
cdq
imul
cli
lock
jnp
pop
int3
sbb
and
dec
into
add
repz
pop
sub
jmp
xor
pop
or
mov
push
mov
scas
mov
jno
jecxz
cmp
mov
sub
push
clc
add
jae
ins
call
add
ror
or
(bad)
sub
push
ret
push
or
dec
shl
nop
fdiv
retf
add
push
push
(bad)
xor
adc
jmp
ss
gs
lahf
fisub
leave
lods
and
pop
sub
les
stos
jge
cli
movs
fcmovb
sub
cwde
mov
mov
pop
push
enter
fnstsw
sub
mov
lea
inc
lds
in
data16
(bad)
test
mov
dec
jnp
xor
stc
inc
dec
retf
test
push
shl
out
popf
mov
mov
and
lods
pop
das
(bad)
mov
in
inc
mov
inc
push
pop
inc
cdq
ja
mov
shl
imul
mov
jge
outs
stc
das
pop
mov
sub
push
cmp
or
sbb
pop
mov
mov
push
lds
push
fadd
pusha
jmp
xor
int
mov
pop
or
mov
mov
inc
fucomi
xchg
frstor
inc
cmp
lods
inc
add
stos
pop
xor
loop
repz
push
aaa
(bad)
and
cmp
cmp
icebp
stc
clc
int3
xchg
ret
sbb
mov
fbstp
outs
ret
ins
xchg
clc
mov
xchg
add
mov
popa
inc
loope
cmp
add
or
mov
and
xor
adc
pushf
inc
or
(bad)
aad
repz
std
pop
retfw
test
shl
out
jae
popa
popa
imul
stos
(bad)
stc
rcr
ror
(bad)
int3
sub
xchg
cmp
str
clc
popa
jl
and
sbb
lea
scas
pop
sub
inc
pop
mov
fcmovne
push
inc
fs
arpl
push
nop
jp
sar
and
inc
sbb
fild
push
adc
pop
dec
fs
mov
sub
(bad)
daa
in
jmp
pop
sub
push
lds
xchg
ucomiss
repnz
loope
cmps
mov
pop
mul
jp
mov
sub
pop
dec
jae
adc
or
or
retf
add
out
ins
ja
sub
or
inc
mov
pop
xchg
xchg
or
iret
adc
inc
enter
or
sub
retf
cmps
adc
sbb
outs
fidivr
sti
push
jl
jle
add
xor
cmps
mov
lea
aad
push
shl
retf
fisub
sub
loope
cmps
vhsubps
and
sti
test
(bad)
jg
aam
(bad)
punpcklwd
out
(bad)
cmp
das
lods
jae
mov
xchg
add
imul
ret
xor
dec
fwait
ins
test
jg
xchg
push
aam
mov
push
cmp
add
sub
push
sar
call
pop
popa
lds
mov
xor
js
sbb
scas
xor
sbb
push
jge
loopne
mov
lods
fbstp
loop
ficom
jp
aaa
mov
mov
lea
sahf
sub
sub
test
adc
in
inc
bound
cmc
pop
or
sbb
into
push
sbb
movs
add
cmc
and
nop
sub
or
sub
inc
cmp
pop
mov
out
bnd
dec
mov
pop
mov
push
dec
lods
adc
into
mov
mov
cmp
clc
sti
xchg
xchg
xor
mov
lods
sub
jmp
adc
sub
(bad)
cli
shr
and
sbb
sub
push
imul
outs
cmp
pop
mov
repnz
xlat
and
cs
clc
bound
jo
sbb
sub
loopne
xchg
cli
xor
es
aam
jae
push
jp
xor
jnp
retf
cmp
dec
rcl
jecxz
in
int3
pop
sbb
(bad)
add
or
dec
xchg
mov
pop
pop
push
mov
xor
mov
xchg
dec
mov
jge
dec
fstp
sbb
hlt
cmp
dec
neg
pop
pop
jp
mov
pushf
mov
jns
xor
inc
movs
dec
and
test
retf
je
rcr
or
mov
mov
xor
shl
retf
js
push
mov
xchg
nop
(bad)
scas
scas
inc
out
sub
enter
out
or
test
into
mov
aas
xchg
xor
xchg
xlat
sub
call
(bad)
push
add
outs
fs
mov
xor
xchg
xchg
popf
das
mov
xor
add
aas
xor
imul
frstor
inc
lods
into
mov
jle
cmps
out
jb
adc
jmp
xchg
repz
mov
sbb
fsubr
and
cdq
wrmsr
xchg
scas
daa
pop
add
repz
stc
imul
pop
mov
jecxz
pop
in
push
fbld
push
mov
mov
jbe
cmp
mov
rcl
inc
add
clc
daa
cmps
or
xchg
test
mov
fcmovb
jb
les
popf
adc
push
data16
adc
int3
out
push
fldpi
mov
loopne
shr
ret
add
jmp
clc
mov
or
aaa
out
stos
jl
mov
in
sub
pop
jmp
pop
aam
sahf
jmp
and
adc
mov
and
and
jmp
jge
push
xlat
pop
and
add
push
push
jne
pop
sbb
xchg
cwde
(bad)
test
xlat
inc
out
push
inc
pop
mov
adc
test
sbb
cmp
jbe
mov
pop
fld
sbb
sbb
mov
mov
movs
dec
add
mov
inc
xor
sbb
adc
and
adc
dec
fistp
pop
mov
or
add
shl
lds
cmp
dec
and
mov
int3
xor
add
lea
test
call
mov
lds
push
outs
aam
or
mov
jae
aaa
jne
leave
mov
int
outs
dec
stc
or
jbe
cmps
adc
(bad)
jl
(bad)
fcom
sub
jbe
mov
pop
sub
call
push
inc
push
adc
je
es
xor
inc
out
inc
setle
iret
push
mov
icebp
mov
jno
out
pop
fcomi
retf
div
pop
imul
jno
in
int3
sbb
idiv
xor
xor
mov
xor
movs
push
(bad)
call
push
mov
mov
test
rol
pop
add
mov
movs
int
mov
push
test
scas
aad
mov
stos
dec
ds
sbb
mov
pop
inc
in
jmp
adc
rol
sbb
jmp
jne
lods
sub
fmul
sub
repnz
add
popa
aam
movlps
mov
mov
pop
push
jb
mov
(bad)
out
lea
das
dec
xchg
inc
mov
mov
lahf
pop
int3
cmp
ret
sbb
test
jmp
sub
iret
sub
fsubr
out
fisub
push
pop
fisubr
jo
test
cmps
xchg
ret
ret
pop
lods
ins
imul
and
push
inc
inc
jne
outs
(bad)
(bad)
ss
ret
mov
mov
push
or
and
sti
dec
cli
xchg
or
pop
jle
mov
out
and
sahf
push
push
retf
leave
and
frstor
push
jecxz
dec
sub
jg
inc
rcr
inc
lods
xchg
mov
pop
and
sti
dec
push
dec
push
sub
call
ins
int3
call
dec
jge
imul
mov
mov
pushf
push
scas
fbld
dec
adc
xor
lahf
enter
xchg
cli
std
jp
sub
pop
pop
aaa
or
adc
dec
push
fstp
cmps
lods
push
jmp
mov
lods
push
xor
es
cmp
repz
stos
in
pop
jns
and
sub
sbb
arpl
jl
jge
repz
je
loopne
test
cmp
leave
jmp
mov
mov
mov
clc
pusha
es
iret
pop
pushf
aad
das
out
push
mov
adc
in
ret
mov
rcl
mov
sbb
popa
fs
in
shl
imul
mov
hlt
mov
add
aaa
leave
ja
(bad)
sbb
lea
adc
bound
cmp
sbb
aad
fstp
sbb
xchg
mov
jp
nop
sub
(bad)
aad
mov
mov
pop
movs
enter
push
fidiv
ss
cmp
sub
pop
jae
iret
jae
pop
mov
cwde
ror
test
xchg
mov
arpl
mov
cmp
ins
adc
push
fisub
mov
mov
mov
inc
pushf
jle
mov
cmp
faddp
xchg
int3
push
lods
fsubrp
xor
in
loope
ror
jecxz
nop
cs
cmp
mov
adc
push
push
(bad)
xbegin
repnz
arpl
sbb
xchg
inc
ret
sbb
dec
and
cmp
jmp
cmp
adc
mov
shl
push
sahf
inc
int
mov
dec
jl
and
in
xchg
ficom
out
inc
cli
sub
mov
(bad)
jb
dec
push
dec
js
repnz
ds
sbb
jmp
aaa
cmp
mov
cmps
mov
push
push
jno
sub
mov
xchg
scas
xchg
sar
fcmovnb
inc
lods
push
imul
(bad)
imul
mov
add
aad
imul
xchg
pop
add
jge
cwde
and
adc
sbb
and
inc
in
pop
fadd
(bad)
push
sub
cmp
push
mov
cld
ins
jle
xor
mov
cmp
pop
(bad)
in
jne
pop
inc
cwde
inc
daa
push
mov
in
or
mul
sbb
mov
sbb
mov
ja
outs
popa
out
in
push
lss
in
in
inc
dec
sub
daa
cmp
jae
stos
push
fimul
sbb
dec
push
adc
iret
imul
dec
and
jno
cld
mov
pop
xor
dec
fiadd
and
push
cmp
into
adc
cmp
inc
cmp
jg
mov
fs
pop
loope
cdq
jp
jmp
push
mov
dec
xchg
jg
jnp
sbb
sub
(bad)
in
scas
cmp
call
jmp
xchg
clc
loopne
xchg
and
mov
pop
call
outs
cmps
out
adc
push
(bad)
icebp
add
ins
sar
sub
(bad)
jmp
sub
mov
push
sub
repnz
fwait
cmp
fild
int3
in
movs
pop
in
or
arpl
aad
out
movs
out
in
pop
push
jb
and
arpl
pop
sbb
outs
mov
js
mov
cdq
fwait
enter
dec
int3
call
push
fs
pop
test
jae
add
aad
inc
sub
outs
movs
inc
or
add
inc
movups
das
pop
pop
shl
inc
jbe
shl
aaa
xchg
fsubp
inc
mov
mov
icebp
or
sub
fst
call
test
cmp
mov
in
adc
cmc
xchg
gs
in
out
fisubr
pop
in
int3
cmp
xor
adc
sbb
mov
pop
fstp
push
enter
xchg
loope
add
jns
add
ret
xchg
shl
dec
jmp
dec
popa
mov
nop
pop
(bad)
popa
adc
pop
or
adc
sbb
push
sbb
iret
fist
dec
(bad)
in
movs
out
in
aad
test
sbb
inc
xor
ins
jmp
leave
out
aas
cmps
loop
sub
sti
cli
mov
mov
push
int3
int3
push
push
pop
fsubr
stos
mov
mov
mov
push
mov
neg
in
cmps
and
dec
(bad)
cmp
push
lahf
pop
js
(bad)
mov
sbb
and
mov
and
pop
inc
inc
add
outs
dec
xchg
dec
sahf
mov
add
int
stos
test
add
adc
sbb
or
aas
test
lods
(bad)
ror
jge
das
shl
dec
push
data16
outs
dec
fs
pop
jo
nop
pop
sar
xchg
push
loop
imul
dec
sbb
xor
mov
sbb
fistp
fs
and
and
xor
sub
push
or
outs
xor
ja
inc
adc
mov
rcl
retf
js
xchg
mov
or
mov
aam
je
sbb
sbb
cmc
pop
add
in
(bad)
mov
mov
(bad)
sbb
pop
jp
add
lods
mov
xchg
inc
cmps
push
fs
xchg
out
push
retf
jg
(bad)
mov
sbb
add
add
stc
es
add
imul
bound
mov
(bad)
int3
ins
jno
inc
mov
pop
and
pop
adc
cmp
cmp
leave
dec
xor
mov
leave
je
or
dec
cmps
adc
jge
push
inc
bound
mov
cdq
sbb
fisttp
pop
movs
and
fstp
cmp
scas
repnz
sbb
pop
mov
adc
iret
jo
jp
mov
test
mov
rol
cmps
inc
cmovns
fistp
ja
pop
jmp
cdq
cmp
xchg
dec
fcomip
ds
test
xchg
inc
daa
imul
jmp
and
into
stos
imul
inc
push
xor
repz
jne
div
outs
or
test
push
sub
jne
jno
adc
lods
out
xchg
mov
int
rcr
cdq
xchg
inc
gs
jmp
add
scas
push
jp
jns
xchg
xor
sbb
stos
movs
mov
int
shl
in
inc
test
inc
scas
cld
xor
inc
adc
aaa
mov
pop
xor
push
xor
stc
push
in
adc
es
outs
jb
cli
fnstenv
mov
cmps
in
jo
adc
inc
test
mov
mov
pop
stc
mov
push
das
stc
pop
xor
pop
adc
cld
cmp
dec
inc
push
cdq
movs
xchg
(bad)
(bad)
jmp
inc
xlat
int
ror
push
scas
jp
fwait
xchg
xlat
mov
scas
inc
inc
cmp
xor
test
cli
mov
les
loope
mov
push
cwde
add
mov
cmps
pusha
scas
adc
pop
hlt
int
ror
fisub
jecxz
mov
jno
jecxz
inc
mov
and
mov
fisttp
sbb
out
jbe
and
shl
and
add
repnz
call
cmp
push
lods
sub
jbe
and
fcomi
xchg
xchg
(bad)
loope
lods
or
mov
push
mov
in
cmp
xchg
or
sbb
pop
sub
aam
push
xchg
xchg
pop
aas
aam
jo
popa
cmp
cs
mov
in
pushf
xchg
and
ret
push
(bad)
push
call
icebp
push
gs
mov
jp
aam
cmp
push
scas
jns
ja
mov
and
push
mov
mul
ds
push
jecxz
je
xchg
inc
loope
mov
add
xor
adc
push
or
shl
lods
add
xchg
js
call
nop
scas
push
or
push
in
(bad)
into
loopne
fnstenv
in
mov
and
xor
and
outs
shl
leave
dec
cmc
leave
inc
aas
jb
mov
fld
cwde
push
das
bound
test
pop
out
mov
adc
inc
jg
iret
sbb
sub
stos
lahf
repnz
add
cmp
in
std
add
fiadd
scas
sahf
jmp
shl
mov
jp
popa
inc
(bad)
push
pop
xor
mov
pop
mov
xor
add
mov
stos
std
jmp
xchg
in
aaa
inc
xchg
add
inc
fcmovb
sub
mov
(bad)
cld
mov
hlt
pop
outs
sub
xchg
(bad)
xchg
and
push
lahf
pop
lock
in
dec
lods
lahf
mov
lds
loop
les
je
jg
aad
dec
or
add
ficom
inc
repz
inc
push
gs
jmp
mov
jnp
iret
inc
lds
push
adc
xchg
pop
sbb
fst
push
out
in
or
out
xchg
jmp
and
xor
test
dec
cmp
push
fmul
ror
cld
call
lgdtd
jmp
(bad)
xor
repz
fidivr
(bad)
pop
xor
in
sbb
mov
mov
dec
out
pop
pop
(bad)
dec
and
mov
sbb
cmp
fist
gs
movs
out
les
aas
loop
ja
dec
cmp
push
movs
fiadd
dec
jmp
sub
out
mov
mov
mov
push
int
iret
clc
inc
push
in
gs
cld
repnz
cmp
adc
and
mov
cmp
test
sar
or
popf
idiv
mov
push
mov
mov
mov
loop
cmps
outs
pop
jle
mov
(bad)
arpl
or
daa
push
xchg
pop
sahf
jne
test
(bad)
fsubr
fndisi(8087
jno
or
sub
(bad)
js
sub
adc
loope
fist
(bad)
cmp
jecxz
inc
(bad)
fmul
in
adc
xor
sub
jmp
jmp
or
cmp
sbb
das
icebp
retf
jns
push
jnp
inc
hlt
jecxz
pop
and
sbb
xchg
push
adc
out
mov
xor
loopne
test
add
mov
jg
pop
ds
fimul
dec
lock
sbb
outs
xor
(bad)
pusha
mov
je
cwde
loopne
gs
xchg
lahf
pop
sbb
or
sar
mov
pop
or
daa
pushf
pop
cmc
adc
add
ds
adc
(bad)
(bad)
aam
test
sbb
cmps
jno
popf
(bad)
pop
les
loopne
pop
and
jb
je
mov
mov
cmp
loope
scas
push
cmp
jmp
pop
in
or
mov
ror
out
out
cs
mov
dec
fcmovbe
xor
inc
in
std
mov
adc
out
shl
add
cmp
and
retf
cld
rol
add
inc
dec
ret
add
out
loopne
xchg
lahf
das
adc
inc
push
and
arpl
xchg
rcl
mov
jns
push
mov
xchg
pop
cdq
setno
sub
and
dec
sub
imul
in
aas
xchg
ins
mov
lea
jmp
in
(bad)
mov
mov
sbb
shl
inc
sbb
fwait
daa
int3
push
pushf
lds
sti
mov
shl
jle
hlt
in
mov
push
hlt
leave
movs
call
shr
cmp
mov
push
xchg
fmul
push
loop
cdq
pop
jne
nop
xor
test
retf
ss
(bad)
fbld
(bad)
(bad)
add
mov
or
lods
jmp
dec
mov
in
or
std
sar
cdq
hlt
and
popf
mov
rcr
add
pop
xor
push
test
cli
inc
adc
mov
jae
aad
adc
out
in
sub
stos
test
sbb
add
jmp
shr
or
mov
out
add
dec
out
mov
stos
cmp
inc
push
push
mov
pusha
shr
mov
cmp
mov
icebp
scas
movs
bound
or
inc
call
imul
inc
cwde
jno
pop
jmp
(bad)
ret
inc
inc
int3
enter
sar
inc
mov
mov
dec
retf
icebp
test
or
iret
cmp
jge
sbb
cmc
cmps
dec
add
pop
lods
or
cmc
stos
inc
mov
jnp
xor
push
xchg
stos
inc
cdq
(bad)
popf
fs
sub
stos
movs
sbb
mov
int3
mov
and
pusha
xor
and
popf
pop
iret
push
mov
push
loope
pop
cmp
les
popa
test
iret
xchg
sbb
in
sahf
ins
(bad)
sub
xor
mov
out
push
jne
inc
jns
aam
add
in
mov
inc
sbb
nop
repnz
fwait
and
push
or
pop
mov
mov
sub
movs
in
cmp
mov
and
repz
pop
adc
into
shl
orps
sbb
or
test
retf
or
pop
ins
inc
add
or
je
dec
jp
lods
mov
or
xchg
add
pop
ficom
test
inc
loope
adc
mov
jne
jno
pop
inc
mov
dec
(bad)
mov
push
outs
sbb
js
pop
ds
jl
push
mov
cs
jp
xchg
mov
jmp
push
lock
sub
ss
sub
into
int3
enter
mov
xchg
jnp
loope
in
leave
inc
xchg
sub
push
and
inc
fnstsw
cmps
aam
jg
adc
mov
(bad)
mov
ret
icebp
mov
mov
stos
retf
fisub
mov
call
dec
jne
sbb
and
adc
fild
cwde
sti
xchg
(bad)
dec
pushf
jmp
test
dec
test
call
dec
mov
lods
add
and
push
and
or
int
and
cdq
add
mov
ins
xchg
lahf
push
mov
cdq
aad
dec
hlt
mov
push
cwde
inc
dec
scas
jp
mov
and
inc
xor
ins
jnp
adc
jg
and
sub
mov
mov
jmp
(bad)
aad
lds
(bad)
mov
iret
pop
mov
sub
sub
xchg
push
sub
jae
dec
ja
ins
mov
int
xchg
push
mov
in
pop
sar
std
pop
bound
mov
es
sar
push
aas
cmp
mov
cmp
outs
icebp
dec
popa
int3
cli
loop
xor
add
mov
int
adc
mov
sub
and
cmc
jecxz
pop
pop
faddp
sbb
xor
xchg
loope
adc
jae
jae
mov
jg
clc
mov
lea
mov
xchg
ret
out
jecxz
push
ret
sub
pop
sbb
xchg
fs
outs
mov
iret
enter
addr16
xor
pushf
sub
je
fstp
cmp
aam
(bad)
pop
clc
popf
out
je
push
xchg
stos
mov
pop
loopne
push
and
sahf
and
mov
cwde
or
popa
inc
mov
cmc
jecxz
(bad)
sub
and
mov
sub
add
test
leave
shl
pop
mov
std
call
adc
mov
xchg
out
jecxz
ret
cmp
shl
movs
or
imul
sbb
add
xchg
movs
push
std
enter
(bad)
jbe
pop
inc
jbe
fwait
fs
retf
dec
es
rol
pop
test
arpl
xadd
(bad)
jge
push
mov
jmp
add
or
sub
add
ds
jb
inc
sti
ficom
mov
mov
push
enter
add
or
cmp
int
jbe
inc
mov
inc
fwait
cmp
mov
mov
test
retf
xchg
cmp
cli
jp
mov
ds
cli
cmp
call
arpl
fwait
retf
mov
stc
xor
cmp
div
sbb
xchg
mov
mov
inc
inc
les
scas
out
push
adc
ins
in
loopne
jne
xchg
int3
pop
cmps
gs
out
adc
adc
pop
ins
ss
sbb
and
sub
jl
xchg
pop
lods
es
aaa
sub
bound
loopne
cmp
leave
scas
mov
in
add
mov
imul
repz
xor
stos
adc
in
out
pop
sbb
add
dec
pop
xor
in
rcl
xchg
pushf
pusha
sub
and
dec
mov
and
dec
repz
cmc
fnstcw
in
push
jo
mov
or
add
lods
imul
scas
cdq
mov
pop
int
ins
int3
or
inc
dec
mov
jle
or
jp
sub
call
shl
iret
sub
add
mov
inc
mov
in
mov
je
add
sbb
push
sahf
adc
movs
push
xchg
jp
pop
aaa
and
cs
scas
popa
add
lock
int
push
pop
in
mov
inc
mov
push
jne
mov
cmc
call
xchg
sbb
mov
shl
ficomp
or
mov
clc
out
sar
shl
hlt
push
xchg
sahf
jecxz
hlt
mov
imul
sar
cld
push
add
or
mov
pop
lahf
mov
cmps
fldenv
nop
or
fs
add
fs
pop
xlat
out
jle
aad
aad
out
xor
arpl
mov
pushf
jg
pop
dec
sar
dec
jb
lahf
inc
pop
push
inc
imul
xor
retf
rcl
sub
lods
inc
int
add
mov
adc
dec
nop
xor
pop
sahf
xchg
inc
lods
sub
retf
push
gs
cmps
mov
mov
adc
repz
and
mov
mov
adc
into
in
mov
pop
jg
mov
or
sbb
inc
movs
scas
dec
loope
inc
outs
bound
movs
push
out
fisub
loop
adc
cdq
test
ror
dec
lock
mov
scas
push
loop
xchg
ins
dec
push
mov
int
dec
xor
jne
fidiv
es
cmp
lea
and
or
cwde
add
in
arpl
movs
sub
dec
out
outs
rcl
pop
shl
inc
jmp
xchg
cdq
jb
addr16
pop
jmp
push
retf
in
push
ficomp
movs
mov
pop
dec
movs
xchg
(bad)
ins
mov
mov
pop
dec
push
popf
cmps
mov
adc
rcr
pushf
jnp
pop
retf
mov
add
or
mov
cmps
das
icebp
stos
dec
xor
cli
(bad)
loope
pop
mov
fld
aas
push
xchg
out
pop
pusha
inc
and
mov
or
jle
in
jb
mov
shl
aas
push
stos
outs
clc
ret
shl
(bad)
pop
push
fwait
or
cmp
jo
push
ds
jmp
cmp
push
mov
mov
pop
xlat
mov
jge
ret
ins
rcl
into
(bad)
icebp
loop
ja
loopne
stos
test
mov
cmc
xor
test
rol
fst
loope
jecxz
int
push
sub
stos
push
jno
xchg
call
aaa
push
mov
mov
(bad)
lahf
push
sbb
dec
(bad)
aaa
aad
fnstcw
mov
pop
out
or
iret
adc
lods
shl
pop
jns
out
jne
xchg
sbb
push
jge
adc
imul
jbe
xor
jmp
scas
call
fdiv
jg
mov
push
push
(bad)
clc
inc
sbb
fistp
sub
mov
out
stos
pusha
xchg
add
mov
scas
addr16
jle
xchg
in
leave
or
xor
pop
sbb
mov
(bad)
gs
push
xor
sub
fimul
cmps
adc
mov
ror
les
mov
repnz
loop
mov
jno
add
sahf
in
push
out
daa
push
aam
lock
shl
movs
sbb
sub
and
(bad)
sti
in
popf
push
push
(bad)
push
outs
daa
fs
loope
nop
jbe
jbe
outs
inc
fcomip
pop
test
ja
cli
add
mov
jno
ror
jmp
xlat
aas
pop
pop
dec
cwde
fcomp
fnstsw
sub
adc
call
pop
loope
mov
cs
pusha
fwait
jno
sub
es
add
xchg
outs
cmp
xchg
(bad)
jp
(bad)
fcom
leave
mov
mov
stos
xchg
lods
add
xchg
push
jmp
dec
arpl
adc
mov
das
pop
cdq
or
cmp
dec
xlat
(bad)
jmp
pop
(bad)
stos
jmp
test
jno
adc
cwde
and
pop
mov
sbb
enter
data16
jmp
imul
cmp
(bad)
fldenv
dec
sub
dec
sbb
mov
inc
dec
xchg
mov
mov
(bad)
or
ins
(bad)
scas
adc
clc
ficom
js
cwde
mov
in
cmps
fcomip
adc
sbb
add
aam
retf
inc
(bad)
(bad)
bound
loop
jno
adc
test
add
adc
inc
add
jo
and
or
aaa
sbb
pop
mov
pop
dec
adc
push
adc
dec
psrad
dec
sar
push
mov
into
pop
mov
mov
add
xor
out
mov
adc
fild
les
mov
cmp
jmp
and
push
js
movs
dec
repnz
sbb
sar
xor
dec
push
int3
mov
imul
cmp
adc
cmp
(bad)
jo
rcr
inc
dec
arpl
push
xchg
cmc
sahf
fs
mov
xchg
cmp
js
cli
sub
(bad)
outs
out
or
aaa
lock
inc
popf
daa
imul
popf
pop
sbb
cdq
xchg
jmp
mov
hlt
xchg
pop
pop
mov
imul
cmp
add
fdiv
xchg
popf
cmp
push
push
sbb
push
lds
lea
cwde
jge
and
inc
call
cmp
and
retf
sbb
inc
add
push
xchg
sub
neg
mov
inc
scas
pop
repz
cmps
push
fmul
adc
jae
add
add
repnz
add
retf
shl
adc
xchg
fcmove
push
outs
popf
fnstenv
jae
cmps
scas
(bad)
cmp
jp
lea
arpl
mov
bound
jbe
inc
add
cdq
sahf
mov
sbb
into
in
jmp
aam
cmps
popf
push
or
sub
sbb
inc
popf
clc
sbb
push
bound
push
mov
jne
xor
cmp
std
aad
mov
adc
and
lahf
outs
ja
ds
dec
outs
mov
lods
lds
inc
not
leave
xor
scas
imul
(bad)
mov
call
loopne
inc
inc
imul
jbe
mov
pop
pop
les
jns
jge
or
mov
test
xor
test
rcr
cmp
out
add
dec
fbld
mov
movs
xchg
pushf
sbb
dec
xor
cmps
or
cmps
sbb
push
out
or
test
inc
xchg
mov
repnz
mov
pop
shr
xchg
pop
daa
pop
mov
out
and
dec
dec
sbb
fwait
pop
sti
(bad)
test
icebp
add
sbb
or
inc
shl
sbb
outs
hlt
popa
xor
push
fcmovbe
bound
adc
dec
cmps
retf
(bad)
cmps
fcmovbe
in
dec
arpl
popf
jno
pop
xchg
sub
stc
retf
(bad)
dec
pop
jb
test
stos
jmp
and
mov
out
out
icebp
les
call
int3
fdiv
push
inc
cmp
mov
test
fsqrt
sub
xchg
inc
inc
sub
hlt
push
mul
cmp
and
cmp
xchg
jp
push
pop
shl
mov
dec
gs
inc
add
push
mov
in
and
div
(bad)
pop
xchg
sbb
adc
jmp
fldcw
scas
fsub
mov
fwait
add
xchg
push
jb
dec
dec
stos
cmp
mov
mov
div
retf
not
sub
jns
and
mov
ret
mov
sub
mov
push
xchg
xlat
pop
xor
mov
xor
jbe
fnstsw
mov
adc
imul
and
(bad)
xchg
mov
test
test
mov
popa
movs
(bad)
pop
mul
mov
lock
or
pop
test
retf
es
push
sahf
(bad)
movs
js
shl
and
xor
pop
shl
int3
sub
mov
xchg
xchg
sub
and
data16
test
jmp
dec
js
enter
stc
fistp
mov
adc
push
cld
mov
(bad)
(bad)
push
pop
inc
dec
mov
ins
pop
xchg
xor
ss
fidiv
(bad)
mov
dec
or
test
dec
hlt
mov
and
cmp
stos
pop
adc
push
inc
lds
test
inc
aad
movs
cdq
scas
add
jbe
sub
push
stc
sbb
int3
pop
sub
sti
push
retf
push
lahf
loopne
cmp
inc
ret
jnp
scas
test
fcom
daa
ins
out
inc
or
imul
test
cdq
jbe
mov
ret
jbe
cmps
jne
stos
ins
mov
pop
lods
jmp
in
gs
mov
jo
cwde
inc
mov
into
cmps
push
xchg
inc
mov
xchg
shl
fidiv
jle
mov
(bad)
inc
jmp
sub
and
xor
(bad)
sub
add
(bad)
push
sbb
aas
pop
pop
and
rcl
inc
cmp
cmp
gs
pop
cdq
int3
inc
xor
cwde
mov
mov
mov
outs
popf
inc
movs
jecxz
push
in
popf
mov
mov
les
jl
jo
leave
mov
test
xchg
lds
dec
js
push
push
shr
pushfw
mov
cmp
jl
jle
jb
and
shl
inc
js
rep
mov
sbb
int3
pop
push
jb
jno
lods
cmp
and
in
add
sar
cmp
(bad)
adc
popa
jae
jns
jbe
sti
push
xchg
add
add
arpl
inc
nop
imul
outs
and
jb
xchg
mov
stos
(bad)
(bad)
fcom
(bad)
jmp
stos
push
jl
jg
test
movs
add
mov
sbb
xor
xor
xchg
jno
sar
sti
in
push
pop
jbe
iret
fbld
inc
test
leave
jle
pop
pop
sbb
clc
rcl
or
dec
aaa
jnp
sbb
aas
cs
cmp
mov
mov
repz
imul
or
xchg
jge
cmp
xor
jb
fs
inc
(bad)
fstp
sti
movs
packuswb
fcom
pushw
lods
repz
movs
imul
out
mov
rcl
imul
cdq
xlat
fisub
sar
adc
mov
sub
xchg
popf
jmp
mov
out
and
pop
add
and
scas
dec
or
mov
mov
add
mov
sbb
xor
fwait
stc
pop
aad
(bad)
int
lods
sbb
and
movs
jp
mov
mov
pop
push
and
sub
add
xchg
and
fdivp
and
stc
push
jp
or
(bad)
jecxz
jmp
je
jae
in
jbe
enter
imul
cmc
nop
in
jae
xchg
pop
outs
add
xchg
mov
ja
dec
shr
mov
ja
aam
loop
out
daa
sbb
mov
jo
(bad)
and
mov
div
cdq
sub
std
mov
fwait
jne
idiv
imul
outs
push
test
dec
arpl
add
push
push
cld
stos
and
icebp
mov
fsubr
jae
add
xor
mov
stos
clc
jb
and
and
push
and
add
jb
js
cmp
imul
jle
mov
sub
in
div
inc
push
xchg
or
xchg
mov
or
mov
repz
pop
dec
fbstp
jl
icebp
sar
lods
push
outs
imul
push
and
(bad)
push
test
dec
add
sbb
sbb
pop
gs
pop
lea
inc
pusha
icebp
jne
ja
sub
jno
imul
adc
mov
pusha
inc
xor
mov
fcomp
repnz
cmp
outs
sbb
ret
call
pop
jl
call
xlat
sbb
pop
mov
pop
fdiv
inc
cld
pop
cli
cs
rcl
mov
test
inc
xchg
sub
dec
push
mov
or
jg
xchg
je
cmp
push
jg
sbb
sub
mov
test
fcomp
in
dec
jmp
xor
adc
xor
pop
pop
scas
dec
inc
out
lods
xchg
in
mov
rcr
out
aas
pushf
mov
push
gs
out
and
dec
(bad)
es
sbb
xor
ffree
mov
or
push
mov
iret
mov
mov
mov
(bad)
cld
mov
aam
xchg
clc
push
mov
std
sbb
jae
sbb
lea
es
mov
cmp
jmp
inc
ret
repnz
scas
add
pop
cmp
rcr
cmp
ds
mov
sbb
lahf
cld
fs
mov
int
imul
xor
gs
adc
or
movs
cmps
mov
data16
jbe
int3
xchg
in
xchg
inc
mov
and
mov
repnz
push
or
scas
rcl
and
mov
fld
outs
or
adc
xor
cmc
fxam
(bad)
(bad)
outs
lahf
out
pop
push
cli
test
iret
lea
sub
add
mov
jg
pop
in
mov
out
jmp
mov
or
pop
adc
pushf
sub
push
sub
mov
outs
xor
mov
pop
inc
nop
push
ror
jae
jmp
or
cs
sbb
inc
pop
in
pop
xor
cmp
adc
mov
mov
xor
inc
xlat
out
hlt
mov
sti
test
call
add
xor
push
(bad)
adc
cmp
push
loop
mov
xchg
(bad)
jmp
pop
shl
sbb
repz
pop
fnstcw
sub
test
aas
cmp
aas
neg
mov
out
ffreep
mov
jnp
loop
mov
and
mov
sub
gs
sub
xchg
jb
xor
frstor
mov
mov
clc
fisub
mov
jmp
pop
dec
sub
int3
ror
cmp
or
xchg
test
add
xor
stos
jecxz
iret
into
mov
push
lea
and
mov
jle
fst
mov
rol
jmp
push
mov
mov
add
mov
aas
cmps
mov
mov
stos
retf
or
jns
aas
dec
call
mov
shr
sub
jecxz
lahf
es
pop
ds
retf
lahf
sbb
mov
mov
vfrczss
imul
fistp
clc
retf
(bad)
enter
or
pop
add
stc
pop
dec
dec
ret
pop
cmp
cmp
jge
stos
xchg
fild
cmp
xor
loop
ins
pop
sub
add
cdq
inc
pushf
fldenv
inc
cmp
fidivr
pop
call
xchg
pop
test
pop
mov
fwait
mov
test
leave
add
ins
(bad)
rol
add
mov
push
inc
daa
pop
inc
inc
pop
loope
and
mov
cmp
cmp
iret
icebp
dec
sub
push
cmp
stos
(bad)
clc
dec
add
enter
scas
cdq
xor
out
jbe
lock
add
cmp
out
mov
(bad)
xor
and
pop
pop
cmp
mov
out
sahf
popf
xchg
xchg
push
mov
dec
or
pop
jbe
out
cwde
movs
call
and
or
pop
mov
pop
das
or
mov
call
movd
gs
sub
cmp
cmp
sbb
mov
pusha
cdq
retf
call
xchg
mov
test
call
add
ins
(bad)
jp
(bad)
stc
mov
jmp
push
shr
(bad)
cmps
(bad)
adc
imul
push
out
push
imul
mov
jb
idiv
int3
adc
xor
inc
push
xor
mov
dec
test
outs
mov
add
cdq
mov
add
sbb
ror
mov
in
(bad)
dec
sahf
xor
cwde
lock
cmps
repnz
mov
sbb
xchg
push
popa
daa
(bad)
sub
jg
dec
test
pop
mov
pop
push
in
retf
xor
test
pop
nop
scas
leave
lahf
jo
jl
test
pop
or
inc
cmps
jle
arpl
inc
or
outs
mov
mov
es
xchg
cmp
cmp
xchg
cli
addr16
clc
cmc
sahf
cmp
mov
loopne
xor
retf
jg
ret
stos
call
(bad)
pop
jmp
fdivr
cwde
fcom
mov
or
out
mov
or
xchg
inc
sti
inc
repnz
repnz
loope
bound
mov
add
mov
ins
add
(bad)
mov
aam
mov
dec
jge
sbb
ins
int
mov
mov
aad
retf
les
inc
in
enter
pop
mov
fwait
sti
and
aam
es
(bad)
fsub
jnp
adc
cmps
out
into
lds
and
test
and
movq
jne
(bad)
cs
or
(bad)
mov
pop
adc
dec
pop
jno
scas
mov
popf
fcompp
mov
cld
inc
jmp
aad
sub
push
lock
test
mov
inc
sub
push
sahf
jle
ds
cmc
sahf
push
cwde
shr
lods
or
or
and
call
mov
pop
scas
retf
jl
loop
mov
das
test
push
repz
xor
adc
test
cmc
sahf
mov
dec
test
jbe
pop
push
test
jg
lods
pop
popf
or
loope
push
adc
push
je
sub
xor
inc
ficomp
inc
mov
sahf
loop
shl
neg
retf
ss
retf
iret
in
dec
in
push
xor
mov
xor
pusha
dec
(bad)
jge
sbb
sti
loopne
popf
xor
xchg
and
push
repnz
mov
or
daa
mov
mov
fistp
(bad)
scas
scas
int
inc
fidiv
jne
(bad)
jbe
mov
inc
cmp
and
loopne
cmp
(bad)
mov
pusha
xor
adc
xor
fwait
data16
jecxz
call
mov
inc
inc
and
xor
repnz
scas
pop
jo
into
push
mov
xor
out
scas
retf
xlat
stc
ss
lds
loop
xor
adc
sub
cmc
les
sbb
hlt
mov
xor
pop
mov
pop
imul
shr
sbb
xor
stos
dec
mov
mov
jle
add
jne
jmp
call
cli
mov
sbb
add
pop
or
inc
mov
add
lods
jbe
sub
pop
pushaw
clc
sub
cdq
jb
movs
xchg
out
mov
pop
ja
pop
ja
fsubr
sub
ror
pusha
push
dec
mov
into
mov
push
inc
xchg
push
pusha
iret
cli
jl
mov
add
pop
sar
add
scas
mov
js
rep
enter
enter
dec
cmc
pop
push
cwde
pop
jl
scas
int
pop
push
push
sti
adc
xor
adc
ret
(bad)
xor
out
jb
out
mov
sar
fisubr
or
sub
cmp
cmps
sbb
adc
jl
fcmovne
cmp
das
pop
mov
mov
aas
xchg
dec
or
jae
xchg
adc
outs
jbe
in
jb
jbe
pop
cmp
clc
dec
sub
push
outs
cld
rol
int
inc
pop
add
(bad)
jmp
and
mov
pop
aaa
and
inc
push
fwait
or
cld
shl
hlt
push
lahf
cld
pop
fbstp
adc
ret
dec
repnz
sti
adc
pusha
js
jge
ins
inc
xor
out
dec
div
and
jnp
xor
adc
(bad)
in
and
mov
shl
cmp
xor
or
cmp
sahf
mov
cs
xchg
jmp
and
add
mov
or
(bad)
(bad)
push
add
mov
add
dec
aas
sbb
xchg
outs
cmp
aaa
mov
push
cmp
call
xchg
sub
inc
jae
das
sbb
mov
nop
sub
push
sub
mov
mov
xor
xchg
dec
sbb
in
or
pushf
push
popf
data16
ins
clc
jns
test
psubw
clc
mov
jmp
or
retf
sbb
shl
aas
fs
xor
xor
inc
gs
scas
inc
std
ret
retf
cs
lods
rol
mov
stc
adc
mov
ins
cmc
push
mov
xor
enter
shl
idiv
out
push
aam
pop
nop
loop
call
(bad)
jnp
clc
(bad)
cli
adc
or
in
xchg
adc
fisttp
loope
cmp
mov
fnsave
xchg
mov
push
push
xchg
sub
icebp
sub
pop
fs
scas
cli
cld
aaa
jge
xchg
sbb
icebp
int
clc
sbb
cmp
repnz
pop
rcl
popa
in
cli
pop
xor
hlt
xchg
cmp
sbb
inc
imul
fld
aas
es
jns
push
sub
outs
outs
enter
iret
jmp
movs
sbb
sub
rcr
test
movs
cmps
mov
out
movs
inc
loope
xlat
jb
mov
adc
add
in
inc
jae
jg
jae
sbb
or
xchg
push
push
cmp
arpl
pop
out
adc
mov
mov
scas
mov
dec
push
add
inc
ins
push
cmp
mov
mov
inc
jle
mov
and
jae
pop
jg
or
in
shl
jmp
inc
out
jnp
or
loopne
cdq
scas
fld
and
cdq
adc
xchg
in
sahf
inc
or
shrd
adc
repnz
(bad)
pop
scas
es
cs
or
pop
push
and
sti
rcl
sub
loope
inc
inc
mov
imul
lods
inc
cmp
nop
in
inc
pop
sbb
nop
sbb
imul
sbb
push
and
jns
test
stos
clc
(bad)
loop
icebp
add
cmp
neg
cmp
sar
xchg
xor
stos
das
imul
sub
sbb
sub
pushf
ret
ret
mov
hlt
pop
frstor
adc
mov
je
lods
cmps
pop
out
bound
in
pop
pop
pcmpeqw
jge
push
adc
scas
leave
inc
adc
out
repnz
xchg
test
inc
adc
call
stc
mov
cmp
scas
cs
add
popa
or
call
stos
push
or
or
add
sar
iret
xchg
leave
sub
mov
int3
xchg
dec
xor
sar
mov
xor
cmp
leave
and
push
shr
xor
ret
pop
test
jo
mov
stos
pop
jns
cmp
jl
cld
mov
adc
xchg
xchg
lds
jo
adc
inc
in
mov
jo
lahf
shl
jno
inc
(bad)
pop
pop
pop
jg
neg
jmp
mov
sbb
out
mov
cdq
out
xor
es
mov
jae
push
jmp
jo
jecxz
dec
add
dec
add
adc
gs
mov
mov
jno
lds
inc
xor
int
mov
push
mov
mov
dec
add
jg
inc
das
xor
call
aad
mov
mov
xchg
loope
es
mov
dec
cmp
fsub
cmps
and
cdq
jmp
inc
sub
mov
clc
out
stos
fcmovbe
das
or
shl
mov
xor
dec
mov
aas
push
add
cli
mov
dec
fistp
in
scas
add
loopne
dec
scas
mov
(bad)
iret
jge
movs
push
jecxz
cs
adc
pop
pop
and
mov
push
xchg
loope
or
mov
ret
test
js
lock
or
movs
pop
sbb
sub
mov
mov
xor
test
mov
outs
ins
addr16
jg
(bad)
leave
(bad)
ja
retf
mov
and
rol
(bad)
aad
(bad)
mov
cli
and
jno
int3
inc
mov
into
stos
scas
in
sub
adc
loopne
add
or
retf
stos
pop
stos
and
xchg
mov
das
retf
xor
sub
rcl
mov
das
loope
sti
xor
jnp
out
not
mov
jns
jbe
mov
call
cdq
ret
jmp
jb
cmp
xor
int
cmp
jmp
dec
xchg
cdq
cdq
mov
push
add
mov
add
inc
pop
cli
outs
nop
jb
pop
dec
(bad)
dec
test
jno
xchg
pop
push
shl
imul
xchg
xor
dec
(bad)
cmp
test
sub
and
clc
push
and
cld
fs
pop
mov
sbb
(bad)
adc
cmp
lods
call
int
add
fiadd
inc
mov
inc
inc
and
inc
cmp
push
adc
inc
lahf
jl
and
int
jo
jne
xor
ins
mov
adc
(bad)
fstp
loopne
fs
push
cmps
imul
mov
or
dec
mov
cmp
(bad)
movs
out
or
int
out
into
push
ins
div
adc
dec
and
xchg
fimul
xchg
stos
xor
or
daa
mov
inc
into
das
sbb
outs
cld
cmps
arpl
or
sub
add
cwde
mov
loopne
test
add
dec
(bad)
in
inc
inc
push
xor
stos
jl
lods
jge
das
push
mov
shl
aaa
mov
out
pop
mov
out
fsubr
xor
jns
jae
adc
fnstenv
rol
inc
pop
out
repnz
jns
call
movs
push
mov
sub
jne
sub
add
xchg
lea
sbb
cmp
mov
pop
rsm
cmp
or
sahf
sub
mov
repnz
lahf
cmp
lods
dec
push
ins
lods
sub
pusha
fidivr
xchg
loop
stos
jge
lea
push
mov
out
(bad)
ds
loope
jbe
fnstenv
lds
call
jecxz
pop
and
loopne
loope
je
mov
dec
or
adc
(bad)
cmp
xchg
and
inc
sub
cmp
loope
jecxz
lahf
outs
sbb
pusha
push
push
pop
xor
cmp
mov
push
call
dec
iret
sti
push
push
add
pop
xor
mov
pop
cdq
retf
repz
mov
daa
mov
lahf
pop
dec
nop
addr16
jb
adc
adc
push
pusha
push
repz
or
cmps
cmps
popf
and
js
(bad)
cmps
stos
bound
and
call
push
cmps
push
aas
pop
push
cmp
scas
xchg
adc
fdiv
leave
sbb
sub
cmp
cmc
mov
pop
dec
in
xchg
lods
inc
mov
fsub
cmc
out
xor
mov
mov
dec
mov
sub
sub
inc
mov
adc
out
cdq
jmp
push
inc
daa
cdq
adc
cwde
jle
lahf
mov
sub
lfs
aas
jno
adc
pop
xchg
int3
lods
cwde
cmps
xor
or
fxch
rcl
imul
addr16
aaa
(bad)
popa
out
mov
sbb
push
mov
fbstp
outs
sbb
hlt
adc
jo
frstor
pop
mov
aas
adc
cld
xchg
dec
sbb
das
xorps
sbb
jp
pop
arpl
stc
repnz
loop
in
push
popf
(bad)
fild
ret
inc
push
jnp
lods
push
mov
mov
movs
popa
mov
stc
xchg
loopne
movs
sub
dec
sar
mov
cmps
ficomp
rcr
mov
int
lea
jmp
ret
pop
push
sbb
ret
out
jl
iret
or
in
xchg
inc
es
retf
inc
test
jbe
xchg
jae
pop
mov
test
in
std
enter
cmp
int3
popf
or
jo
sub
mov
loopne
leave
push
adc
fistp
aaa
ficom
push
xor
pop
lods
inc
ret
invd
sbb
addr16
ret
jle
mov
xchg
sbb
inc
cld
push
call
mov
outs
xchg
mov
sbb
(bad)
je
or
pop
xor
push
loopne
lock
pop
scas
push
fwait
dec
mov
mov
mov
or
movs
outs
dec
cmp
push
mov
mov
pop
jecxz
xchg
adc
test
mov
fcmovne
(bad)
cwde
adc
mov
pop
jb
xor
xchg
mov
mov
or
mov
add
sub
addr16
out
mov
mov
cs
aam
bound
hlt
and
lahf
inc
mov
ins
dec
inc
imul
iret
dec
scas
xlat
jbe
or
fst
scas
dec
lea
cmp
(bad)
xor
add
popf
hlt
mov
adc
in
pop
pop
push
jmp
mov
das
and
or
sbb
cmp
lea
int3
or
sbb
jne
mov
(bad)
out
cmp
bound
lods
es
das
cmps
div
test
outs
js
lea
je
and
sti
mov
imul
mov
mov
cmc
inc
jns
cdq
in
jle
and
imul
mov
fisubr
(bad)
and
push
adc
outs
push
sahf
sub
mov
mov
or
cmp
pop
inc
mov
inc
pop
cdq
cmps
addr16
mov
outs
test
and
nop
mov
push
xchg
(bad)
(bad)
fdivr
push
or
retf
mov
es
enter
sbb
pop
mov
pop
call
mov
imul
int
jns
cdq
shl
fidivr
mov
fwait
push
push
test
mov
push
fisttp
mov
sub
mov
dec
hlt
es
(bad)
int3
add
xchg
xlat
xor
(bad)
mov
stc
xchg
mov
lea
loopne
jge
lds
jo
xlat
mov
jp
jmp
inc
pop
mov
ss
sahf
sub
jae
dec
dec
jmp
jp
dec
cs
add
xor
dec
test
sbb
mov
add
clc
mov
mov
push
pop
mov
int3
mov
jecxz
jle
movs
sub
lea
and
mul
fld
stos
sbb
lods
bound
sbb
rcr
or
ret
dec
cld
lea
mov
js
das
mov
and
or
ror
or
rcl
mov
jno
popf
jg
pop
cmp
popf
or
mov
fsqrt
mov
cmp
sahf
pop
jne
mov
leave
xor
pusha
push
cli
fst
dec
inc
sub
push
cmp
adc
jl
push
call
lds
nop
shr
push
push
inc
push
pop
jnp
dec
jno
mov
les
cld
xor
mov
and
jmp
icebp
das
pop
lods
bound
xchg
test
cmp
outs
and
sahf
or
sub
cmp
jae
out
xor
mov
sbb
jbe
test
cmp
mov
mov
jge
rcl
dec
cmovo
enter
fstp
cmps
jmp
cmp
into
and
stos
jecxz
jbe
rcl
je
sbb
imul
jae
adc
mov
jmp
xchg
sbb
xor
fdivr
cmps
push
inc
out
or
aam
xchg
pop
dec
xchg
leave
fdivr
ret
xchg
xor
and
fs
xchg
xchg
call
sbb
shr
pop
mov
gs
mov
das
jns
pop
xbegin
dec
cs
xchg
out
pop
pop
sti
mov
cmc
outs
sub
out
and
mov
dec
fnsave
cmp
adc
adc
pop
sbb
mov
cs
ins
push
fmul
xor
mov
dec
inc
mov
pop
jbe
popw
xor
imul
lock
fsub
movs
sbb
hlt
iret
sub
and
repnz
push
imul
fwait
mov
or
cmps
repz
sbb
or
retf
outs
mov
ret
jmp
mov
(bad)
lea
cli
hlt
mov
and
xor
popa
aaa
hlt
(bad)
test
cmp
scas
into
sub
sub
and
(bad)
jne
mov
sbb
loopne
enter
push
mov
mov
imul
mov
inc
adc
cmp
aaa
push
ret
ror
add
push
dec
call
pushf
jge
xchg
lods
push
jb
xchg
jo
cdq
cmc
jmp
dec
push
cmp
pusha
xchg
movs
bound
fs
pop
push
cmp
mov
xchg
push
popa
and
mov
pop
cmp
sbb
and
dec
pop
adc
inc
loop
outs
mov
mov
fsub
xor
pop
aam
popf
test
and
pop
push
(bad)
call
mov
sar
add
pop
rcl
push
outs
push
les
jb
xchg
clc
pusha
rcr
cdq
mov
adc
sbb
(bad)
jmp
aaa
aaa
adc
lea
or
mov
dec
out
rol
fdiv
add
push
lods
mov
dec
mov
adc
(bad)
mov
and
popa
adc
mov
(bad)
pop
jmp
inc
xchg
sbb
and
jo
pushf
stos
icebp
arpl
mov
test
adc
call
xor
or
pop
call
jl
stos
push
xchg
aaa
cli
mov
mov
aaa
out
pop
pop
mov
daa
pop
out
enter
adc
cmp
popf
sahf
push
sub
push
loopne
shr
mov
popa
cmp
rcr
ret
dec
jbe
pop
shl
jne
pop
xor
cmp
or
pusha
xchg
rcl
popf
add
and
pop
stos
and
out
out
aas
xor
iret
mov
loop
mov
clc
xor
or
cdq
jmp
adc
adc
mov
inc
jmp
mov
and
out
ror
jns
sub
inc
sub
ficomp
mov
vmovhps
xchg
jae
std
inc
pop
pop
mov
push
scas
pop
das
jmp
and
scas
bound
sbb
cmp
test
jg
jno
mov
dec
popa
push
adc
cmp
inc
movs
xchg
mov
dec
cs
lods
xor
fwait
dec
xor
jnp
ret
rcr
add
and
adc
movs
push
mov
push
pop
ror
call
jp
pop
xchg
out
jmp
ins
dec
movs
jle
lea
pop
in
ins
fadd
aam
in
sbb
das
arpl
stc
and
mov
pop
push
mov
into
outs
loopne
je
dec
inc
(bad)
mov
fcmovne
iret
and
mov
(bad)
popa
mov
rol
(bad)
sbb
imul
fs
cdq
xor
fs
sti
jmp
enter
add
push
add
jecxz
mov
(bad)
jge
pop
fld
xchg
sub
or
inc
jbe
mov
push
je
or
sbb
xchg
inc
call
pop
sub
pop
pop
xchg
std
xchg
pop
cmp
bound
sqrtps
lods
aaa
xchg
std
or
cmp
mov
inc
imul
or
enter
popf
jno
test
dec
lock
add
inc
inc
inc
(bad)
adc
je
in
inc
nop
iret
jge
cld
dec
sub
jne
push
outs
pop
into
add
movs
inc
popf
test
mov
test
jns
push
push
outs
lahf
sbb
push
sub
sub
dec
adc
or
add
stos
lahf
stos
push
sti
adc
test
(bad)
jle
enter
imul
and
xchg
int3
pop
or
(bad)
sub
add
mov
ret
dec
add
data16
or
enter
ret
jae
jmp
je
push
call
xor
shr
fisubr
sub
mov
push
ja
cld
inc
pop
lds
icebp
stos
repz
dec
sbb
cld
in
cmp
fcomp
daa
adc
xor
mov
push
stos
das
dec
fnstenv
sbb
(bad)
arpl
call
cmp
sbb
aas
fld
and
test
jecxz
adc
add
mov
push
and
cmp
inc
sbb
inc
loope
inc
jbe
sti
cwde
test
lods
sbb
pop
adc
(bad)
out
imul
push
adc
add
enter
pop
inc
int3
out
add
gs
in
es
add
lock
out
repnz
pop
xchg
cmp
sbb
fstp
pop
int3
das
sbb
dec
xchg
jns
enter
aas
pusha
xor
fcmovbe
out
cwde
xchg
xchg
xchg
sub
in
popa
inc
mul
clc
sbb
iret
cwde
jne
sbb
xor
stos
jns
in
popa
int3
test
cmp
neg
pop
pop
jp
cmp
push
add
mov
sbb
sti
mov
outs
pusha
repnz
dec
inc
dec
and
imul
pop
rep
and
add
sbb
dec
push
scas
push
fdivr
jp
or
mov
jo
das
push
pop
sahf
jnp
mov
pop
loopne
xchg
adc
push
std
pop
call
push
(bad)
popa
cwde
lds
loop
adc
mov
imul
push
xchg
xor
dec
dec
add
xchg
sbb
sbb
loopne
aam
pop
pop
scas
adc
jns
mov
adc
aam
(bad)
rcl
clc
and
scas
pop
jnp
pop
fcom
or
imul
in
cmc
iret
dec
pusha
jns
jp
mov
xchg
out
fild
ret
push
int3
jns
lahf
push
mov
xor
pop
sub
adc
mov
(bad)
xor
inc
outs
dec
ins
pop
ficomp
pop
jbe
sbb
mov
cld
and
inc
pop
sbb
mov
jo
icebp
and
lods
imul
mov
out
push
pop
addr16
in
adc
xchg
in
jg
rol
cld
ss
mov
inc
aaa
pop
inc
mov
fwait
lods
inc
out
rcl
xchg
cmp
mov
sar
fwait
retf
ret
xor
cli
iret
adc
mov
jp
push
movs
push
test
outs
sbb
repnz
nop
bsr
cmp
addr16
aaa
sbb
jno
adc
jmp
sbb
movs
adc
push
mov
pop
cmp
fprem1
add
inc
jbe
or
test
test
frstor
(bad)
in
clc
cli
sbb
cmp
jns
pop
fmul
retf
mov
or
pop
jl
aad
inc
ss
jae
daa
xchg
pop
dec
outs
cmp
sbb
repnz
ret
fst
adc
je
push
addr16
sub
cmps
add
jp
push
push
(bad)
cmp
cmp
iret
call
pop
sub
ins
and
push
dec
lock
push
mov
pop
jb
stos
sub
lds
cdq
pop
mov
repnz
xchg
popf
int
or
shl
jnp
out
in
dec
lahf
dec
jno
sbb
mov
pop
aam
push
inc
loope
imul
loope
stos
out
(bad)
mov
shr
sbb
neg
mov
mov
mov
rcr
fst
ficom
fidivr
jb
push
sub
cmovae
(bad)
cmp
in
mov
lods
cmp
xchg
ret
cmp
jmp
inc
mov
push
add
jne
imul
and
push
inc
mov
movs
nop
into
jae
ficomp
inc
rol
or
and
push
inc
aam
inc
in
pop
inc
fild
maxps
jmp
jb
fistp
sub
inc
movs
leave
idiv
aam
lods
pop
inc
push
dec
lock
icebp
hlt
scas
into
mov
xor
enter
cwde
sbb
xchg
repz
test
jl
mov
retf
and
out
dec
std
jmp
rcl
inc
xchg
sbb
loope
iret
mov
das
dec
xchg
cmp
test
pop
pop
pop
das
sar
leave
cld
stc
pop
div
jmp
(bad)
pop
mov
les
adc
mov
sbb
shl
daa
mov
fiadd
sub
sti
mov
in
dec
les
jmp
mov
movs
xchg
div
xchg
mov
sub
popf
and
ds
addr16
jecxz
jmp
scas
mov
mov
push
adc
push
retf
mov
rcl
sub
sar
sub
push
scas
xchg
scas
mov
xor
in
in
stos
jb
fld
ficom
xor
cwde
mov
dec
cmp
ud2
and
imul
(bad)
fdiv
xchg
pusha
adc
mov
das
mov
sub
xchg
cwde
xor
sub
mov
inc
inc
or
mov
pop
cli
xchg
dec
add
mov
clc
jl
sbb
retf
push
(bad)
cmp
lods
shl
pop
icebp
outs
rol
shr
aad
repnz
pop
push
inc
iret
mov
ds
hlt
mov
cld
xchg
push
das
data16
pop
mov
and
fsubr
daa
ret
bound
shr
sbb
fwait
jecxz
int3
fs
(bad)
repz
jl
bound
das
add
popa
retf
sar
popf
dec
out
gs
adc
jl
pop
xor
xor
inc
dec
mov
pop
test
mov
pop
add
xchg
jae
frstor
fucom
mov
out
fwait
jmp
out
sbb
mov
imul
ds
cmp
imul
gs
xor
sbb
cmp
lahf
es
add
mov
int3
fsqrt
mov
mov
out
jg
and
pushf
dec
iret
jns
lods
out
mov
in
push
jne
sub
test
cdq
in
inc
push
xchg
or
out
mov
fwait
or
movs
sti
lea
push
push
cmp
push
add
fs
(bad)
repz
pop
rcr
int
xlat
lods
int3
fdiv
xchg
cmp
mov
xor
dec
(bad)
rol
xchg
inc
stc
test
ja
xor
sbb
je
icebp
mov
(bad)
out
sahf
sub
imul
rcr
adc
push
and
arpl
sbb
mov
ins
inc
lods
mov
and
loopne
ret
xor
lahf
pop
push
dec
sub
xor
pop
lock
in
or
xchg
jb
jmp
movlhps
mov
ud2
sbb
ror
jbe
jle
cdq
jecxz
push
prefetcht2
sahf
mov
dec
inc
cmp
fsubr
push
xchg
xchg
jne
mov
xor
xchg
pop
(bad)
ret
in
scas
xor
leave
pop
xchg
mov
shr
or
dec
and
mov
mov
cmc
(bad)
rcl
test
jae
xchg
sbb
inc
push
ret
and
add
sbb
movs
enter
push
les
fnsave
xor
out
add
in
or
jmp
sbb
icebp
dec
pop
leave
adc
add
jle
push
popf
enter
into
iret
mov
push
or
pop
nop
mov
sub
mov
imul
movs
fsubr
ins
add
clc
or
xchg
daa
bound
jecxz
sub
mov
clc
outs
stos
clc
dec
gs
lea
ins
push
dec
ds
jae
retf
ffreep
pinsrw
idiv
inc
call
inc
loopne
(bad)
jp
scas
bnd
mov
pushf
loope
or
(bad)
scas
icebp
stos
and
nop
mov
mov
sub
loopne
push
dec
enter
push
xchg
mov
scas
and
retf
outs
sub
int3
pop
cmp
adc
loope
(bad)
lods
cmp
std
sub
jns
popa
int3
jge
xchg
in
ret
jns
cdq
xor
adc
imul
sti
mov
xor
push
or
add
xchg
test
(bad)
fmul
std
cdq
lea
inc
aad
nop
arpl
jae
xchg
in
aad
(bad)
adc
or
rcl
cmp
inc
xchg
movs
dec
lahf
xchg
xchg
aas
adc
or
clc
dec
cmc
push
inc
inc
rol
xchg
jmp
lods
and
cmp
dec
mov
push
inc
sub
fwait
fwait
neg
lea
mov
xor
pusha
mov
mov
pop
leave
sbb
or
das
data16
and
jnp
inc
mov
out
or
mov
movs
pop
ret
lahf
mov
xlat
sbb
stos
cld
cmovo
dec
and
les
and
push
mov
mov
pop
pop
stos
xchg
cmp
cmp
mov
es
dec
mov
pop
dec
imul
mov
adc
push
aaa
fdivr
in
push
push
dec
cmp
shr
xchg
jb
nop
ret
push
xor
das
or
call
scas
sub
and
and
sbb
mov
inc
add
enter
mov
add
repz
cli
outs
pop
mov
arpl
fwait
jecxz
push
mov
cwde
jmp
pop
retf
push
jb
(bad)
push
lea
inc
cmp
cmovae
rcr
mov
xchg
pop
call
test
push
cmp
fistp
mov
pop
mov
loope
out
mov
jns
mov
mov
or
lods
fcom
popa
mov
jmp
icebp
ds
ficomp
jns
cmc
pop
stc
sbb
(bad)
push
mov
(bad)
daa
je
stc
test
je
fisubr
aam
xchg
jo
popf
push
cmc
out
mov
pusha
mov
gs
(bad)
sub
cmc
(bad)
out
or
adc
clc
push
in
xchg
jle
gs
stos
and
fcom
jecxz
pusha
push
push
outs
sbb
mov
loopne
(bad)
inc
mov
dec
adc
push
lods
push
jns
jns
mov
xchg
jno
aad
in
jne
popf
inc
sbb
lahf
lea
nop
mov
aaa
pop
icebp
sti
movs
je
test
fcomp
push
(bad)
loope
push
dec
adc
sahf
fidiv
cld
push
lahf
mov
cmp
cld
hlt
sbb
jne
xchg
scas
lds
dec
mov
shr
xchg
jg
cmp
xchg
ficom
mov
inc
aam
aam
add
and
jmp
or
pop
aas
inc
ror
sbb
in
xchg
mov
sahf
jl
mov
pushf
out
call
dec
dec
push
push
out
(bad)
(bad)
daa
cmp
or
in
inc
or
sar
mov
xor
adc
inc
xor
enter
loope
into
dec
jae
and
mov
pusha
or
jp
xchg
aaa
fs
xchg
mov
push
bound
lea
and
ins
(bad)
fsub
sub
test
push
pop
scas
cwde
add
ret
nop
pop
pop
jns
imul
xor
loope
sti
inc
jns
scas
mov
adc
(bad)
push
fdiv
popa
pop
arpl
mov
xchg
pop
push
inc
inc
xor
mov
jmp
push
lea
ja
lds
icebp
(bad)
and
xlat
pop
sbb
pop
fnstsw
jo
or
xor
mov
ret
out
cmp
and
ins
sub
pop
stos
retf
mov
or
cwde
and
shl
push
js
(bad)
adc
loopne
jg
pop
ss
ficom
mov
cmp
inc
fdiv
mov
cmp
mov
pop
sbb
fsub
call
cmc
(bad)
pop
sbb
popa
lock
movs
add
imul
clc
test
and
in
or
mov
out
or
ret
addr16
xor
xchg
mov
jecxz
ins
push
jae
pop
xor
xchg
push
gs
dec
push
push
and
scas
sar
xchg
xchg
adc
enter
sub
dec
xchg
and
pop
lods
out
imul
movs
ins
xor
outs
aam
pop
cmp
icebp
nop
sub
int3
je
(bad)
add
imul
pushf
cli
dec
icebp
cmps
outs
test
in
pushf
or
xchg
inc
mov
jae
pusha
add
imul
out
push
pop
mov
mov
or
pop
jns
mov
add
mov
jo
mov
popf
(bad)
pop
in
cli
or
ja
push
stos
mov
mov
dec
mov
retf
leave
in
push
add
test
in
call
xchg
dec
push
out
sub
rcr
add
xchg
int
mov
pop
and
sub
retf
add
xor
shl
mov
sbb
call
ret
push
pop
mov
sti
mov
call
xor
pop
sbb
jmp
lods
mov
inc
out
jmp
outs
daa
inc
mov
mov
int
xor
cmp
and
lahf
and
cmps
inc
test
outs
les
mov
mov
imul
lahf
ficomp
vpor
sbb
(bad)
lods
sbb
inc
sub
and
test
stos
bound
mov
and
mov
mov
daa
scas
add
sbb
xorps
pusha
or
popa
mov
int3
cmps
jnp
hlt
and
cmc
or
mov
jno
adc
xor
je
(bad)
(bad)
adc
mov
dec
pop
loop
adc
adc
mov
pop
push
cmp
jg
leave
out
and
jecxz
popa
xchg
mov
mov
sahf
cmps
add
outs
pop
sbb
mov
pop
mov
call
test
dec
fdiv
clc
aad
adc
icebp
lahf
fucomp
dec
jecxz
inc
push
push
add
rol
mov
(bad)
in
in
mov
pop
add
idiv
mov
adc
mov
mov
jns
outs
xchg
int3
and
sub
repz
cmc
cmps
xor
hlt
mov
sbb
aad
jmp
stos
in
repz
imul
or
mov
push
add
lods
ds
mov
(bad)
mov
push
mov
inc
jne
xchg
test
xchg
mov
push
dec
mov
cs
push
daa
cmc
xchg
adc
dec
jl
pop
mov
retf
gs
push
sub
mov
xchg
adc
xchg
jo
gs
add
scas
in
jle
jae
leave
adc
scas
xor
(bad)
fisubr
popa
fmul
vpunpckhwd
add
add
inc
adc
icebp
mov
sub
sub
ins
pop
xchg
mov
xchg
add
push
(bad)
dec
(bad)
shr
pushf
mov
pushf
push
cmps
add
jno
stos
inc
mov
mov
mov
sub
pop
int3
icebp
je
js
out
es
bound
dec
and
call
ss
xchg
les
add
fild
sub
and
inc
fild
fisub
retf
dec
in
fdivr
dec
(bad)
sub
push
mov
(bad)
stos
ss
test
pop
and
es
inc
scas
push
jl
cdq
(bad)
and
ja
ins
in
mov
and
or
adc
push
fidivr
fs
adc
call
lods
fnstsw
icebp
mov
ret
xchg
mov
pop
loop
daa
fadd
cmps
push
add
push
mov
ss
and
xchg
push
(bad)
cmp
jmp
fwait
dec
test
push
mov
popf
fs
adc
cmps
add
rol
call
inc
addr16
mov
adc
xchg
ss
cmp
imul
xchg
cmp
mov
sbb
sti
(bad)
cmc
cs
stos
addr16
cmovge
(bad)
sub
mov
movs
dec
out
test
adc
pop
dec
xchg
adc
lds
aam
cmp
add
cwde
clc
push
aas
cmp
pop
inc
icebp
inc
mov
addr16
sar
jp
mov
scas
cs
xchg
(bad)
jg
jecxz
sti
(bad)
push
jne
xchg
xor
imul
cmps
loope
iret
les
js
or
(bad)
gs
rol
inc
gs
lods
hlt
add
cmps
mov
sbb
pop
das
cmp
cmps
jno
fst
xor
mov
movs
push
movs
fcom
or
pusha
inc
cwde
imul
push
outs
lock
stc
adc
push
pop
mov
aaa
jmp
xor
and
inc
mov
call
cmc
lods
into
push
jae
lea
lock
or
mov
inc
mov
sbb
pop
adc
sbb
dec
clflush
sbb
js
mov
sub
sub
lods
nop
sub
and
cmp
stos
mov
pop
xlat
hlt
loop
push
clc
inc
inc
jbe
ja
scas
out
cmp
retf
push
loop
out
mov
sar
dec
ret
mov
xchg
fdiv
(bad)
pop
xchg
sbb
aad
push
arpl
mov
aaa
iret
(bad)
in
pop
or
leave
mov
scas
pop
arpl
scas
out
shl
les
jae
jle
idiv
jbe
gs
(bad)
dec
into
xchg
adc
push
loop
iret
sahf
rcl
cmp
mov
jnp
xchg
mov
sbb
cmp
inc
mov
pop
push
jl
test
push
iret
jmp
mov
stos
aad
sub
fadd
fwait
movs
mov
jo
dec
stos
int3
xchg
dec
jno
mov
test
movs
ret
pop
cmc
mov
xchg
ret
push
inc
mov
push
mov
lea
sar
push
push
stc
icebp
mov
in
dec
jae
mov
std
imul
clc
outs
outs
and
or
movs
icebp
adc
lock
xlat
bound
jmp
shl
sahf
or
jbe
xchg
sub
pop
jb
int
in
xchg
cmp
rcl
inc
mov
mov
add
add
imul
sbb
mov
out
adc
mov
push
cmc
pop
neg
lods
jle
pop
mov
push
aas
push
dec
add
(bad)
cwde
fmul
stos
or
lahf
retf
je
data16
fldcw
mov
movs
div
test
push
popa
inc
cmp
clc
push
in
cmp
add
inc
cli
jns
out
jb
adc
or
xor
retf
dec
cmps
(bad)
push
pop
xor
(bad)
lahf
hlt
mov
or
sbb
dec
ja
test
or
mov
mov
and
add
lods
jb
xlat
icebp
cmp
jnp
leave
call
add
mov
fdiv
push
test
push
cmp
stc
xor
mov
pop
cmps
int3
loope
icebp
dec
inc
addr16
or
dec
sbb
je
popa
pop
enter
xor
addr16
mov
mov
aad
mov
dec
push
nop
test
test
shl
and
in
mov
or
cli
stos
into
es
ins
sahf
xor
cmps
cmp
not
call
lds
push
xor
ja
or
js
or
jae
mov
movs
adc
fs
mov
stos
test
fs
cmp
xor
or
pop
jle
mov
jmp
fs
cmp
test
dec
mov
mov
sub
scas
mov
push
sub
sbb
mov
adc
outs
cmovns
jo
hlt
sub
rol
sti
scas
rol
dec
je
cmps
fisttp
mov
or
iret
rol
call
lods
jl
mov
adc
push
xchg
push
pop
data16
cmp
push
add
shl
jns
xlat
xchg
xor
xchg
rcr
mov
out
sbb
retf
push
outs
and
ja
mov
xlat
pop
mov
sbb
mov
test
or
or
bound
retf
mov
ret
mov
fild
mov
fdivp
jb
add
dec
sti
push
sbb
jle
sbb
ja
push
cmp
and
push
fld
and
stos
loop
ss
and
and
push
and
pop
lea
clc
inc
movs
pop
pusha
fadd
ret
pop
imul
xchg
lds
mov
push
dec
pushf
push
(bad)
out
lds
inc
dec
mov
nop
pusha
adc
xor
pop
aam
sub
add
push
xchg
outs
mov
xchg
push
dec
cmc
sbb
inc
rcl
(bad)
xchg
push
inc
lfs
aam
into
(bad)
mov
jmp
mov
daa
retf
jmp
icebp
in
inc
dec
and
or
jno
pop
test
add
cs
jecxz
call
dec
mov
imul
lea
push
js
pop
xchg
icebp
pop
inc
mov
stos
enter
or
cmps
mov
dec
popa
jae
dec
out
stos
jnp
in
jns
int
and
fbld
mov
push
cli
retf
neg
test
xor
call
sbb
retf
mov
cmp
xchg
inc
push
sub
jns
or
mov
sbb
cmp
mov
shl
cmp
jl
emms
imul
xchg
dec
xor
shl
and
jmp
lods
test
push
popf
mov
repnz
adc
mov
push
call
mov
inc
shl
js
or
stos
sahf
jmp
cwde
mov
adc
movs
icebp
test
cdq
push
adc
pop
xor
sar
or
in
push
inc
test
jne
jbe
jne
mov
scas
je
aas
fucompp
dec
loop
shl
imul
imul
jno
jge
xor
retf
sbb
pop
stc
mov
push
cmp
pop
xchg
dec
mov
sub
call
imul
cmp
bsf
imul
sbb
lea
push
(bad)
inc
outs
push
pop
ret
push
sub
sbb
cmps
lods
xor
mov
cmp
push
int
sar
arpl
adc
retf
adc
jp
ss
xchg
adc
mov
sti
adc
adc
xchg
clc
mov
push
mov
or
jle
das
sti
iret
xlat
mov
sbb
out
(bad)
int3
jo
cs
out
mov
mov
xor
jle
fld
jne
xor
mov
sbb
loop
and
fs
cli
sbb
push
mov
push
call
outs
cdq
jbe
mov
xchg
xchg
mov
fpatan
cli
fdiv
call
sub
pop
popf
sar
call
mov
xchg
mov
fadd
cdq
pushf
mov
or
in
sbb
jg
and
push
je
cmp
(bad)
fcomp
aad
fucomip
fild
sbb
cmp
repz
or
jmp
push
outs
cmp
push
lds
mov
add
cwde
jmp
ds
lahf
sub
shl
mov
adc
addr16
sub
jg
das
push
mov
jae
sub
test
ja
lods
daa
xor
dec
outs
inc
je
in
das
dec
addr16
clc
call
jbe
xchg
dec
xchg
mov
dec
jb
sti
xchg
and
push
aaa
xchg
imul
(bad)
jbe
(bad)
into
inc
push
pop
cmp
push
movs
vmread
jae
cmp
adc
inc
sbb
icebp
fist
inc
cdq
mov
mov
sbb
retf
cs
pop
int
mov
and
pop
mov
push
pushf
mov
rol
fwait
mov
retf
and
int3
out
dec
out
sar
and
mov
jbe
or
mov
mov
pop
imul
xchg
cld
ret
sub
int3
movs
ficom
fadd
xchg
test
sahf
push
dec
fbld
je
in
cmps
call
dec
inc
push
neg
hlt
outs
adc
dec
fs
pop
pop
push
adc
push
call
scas
adc
jbe
and
scas
inc
sub
addr16
data16
jbe
pushf
jno
rol
xor
xor
add
aas
shl
cmp
push
inc
ror
test
cmp
push
sbb
push
add
push
mov
rcr
cli
shl
stc
push
push
jae
xor
jno
dec
mov
pop
adc
pop
add
arpl
je
lods
and
jge
addr16
mov
pop
dec
fbstp
mov
adc
(bad)
jp
in
sub
cmp
and
lods
stos
xchg
xor
sbb
push
iret
fnstcw
pop
mov
dec
jl
adc
ret
test
fdivr
cmps
pop
jle
call
test
lock
push
inc
shl
mov
fcom
add
loop
mov
add
jmp
and
stos
dec
inc
mov
inc
jmp
mov
ja
cmp
dec
add
xor
or
xchg
mov
dec
pop
push
test
push
dec
push
(bad)
mul
in
add
ins
lods
pop
popa
call
fistp
in
xchg
jae
mov
push
or
pop
stos
jnp
jbe
in
or
rcr
cmp
mov
cld
inc
out
ja
pushf
shl
fs
scas
js
cdq
into
shl
sub
jp
and
pusha
mov
cmp
mov
fcomp
(bad)
repz
cld
and
into
jns
test
pushf
pop
xor
mov
adc
test
jno
adc
xchg
cli
ficom
xlat
push
add
iret
mov
dec
ja
and
fnstenv
or
inc
sub
sbb
mov
jb
adc
fidiv
data16
xchg
mov
cmps
push
pop
and
xor
adc
push
std
ja
(bad)
push
jbe
mov
xchg
outs
pop
pop
fistp
add
stos
inc
dec
int
shr
mov
mov
inc
cmp
jle
jp
mov
mul
je
je
jge
cmp
les
mov
mov
xchg
xchg
(bad)
out
pop
inc
call
lock
or
jmp
ret
adc
ss
pop
mov
sbb
and
pop
(bad)
bnd
pop
(bad)
call
xchg
out
js
fs
jb
mov
sbb
xor
ins
ror
push
lods
sbb
inc
mov
rcr
bound
sub
or
jae
sub
test
and
mul
shl
out
test
pop
jmp
jmp
repz
lock
lods
aaa
sub
enter
sub
adc
and
in
nop
push
psubusb
and
shr
xchg
loop
sub
pop
lahf
stc
mov
imul
loopne
and
cmc
outs
add
xchg
sbb
and
xchg
mov
add
inc
or
les
mov
das
dec
or
arpl
in
jbe
pushf
out
push
inc
fist
xchg
jmp
(bad)
mov
cwde
sbb
push
sbb
cmp
das
cli
pusha
jp
bound
xor
adc
imul
imul
cmp
fnstenv
lock
arpl
hlt
add
(bad)
cmc
sbb
xchg
bnd
inc
scas
jne
adc
lods
ss
int
pop
ds
sub
push
xchg
push
cmp
cmp
xchg
add
xchg
ins
or
iret
scas
push
cdq
aas
sbb
xchg
ret
loop
xor
arpl
arpl
mov
cmp
jmp
(bad)
cld
mov
xor
mov
push
cmps
cld
adc
add
iret
jo
nop
ret
lds
push
test
data16
mov
shl
mov
fimul
rcr
push
jns
mov
mov
aad
xor
addr16
call
adc
push
in
pushf
mov
push
jno
das
push
les
adc
bound
jecxz
lahf
inc
stos
cld
pop
scas
in
xchg
or
(bad)
push
int3
cmps
ret
adc
inc
fs
inc
popf
add
sahf
test
push
or
jecxz
lods
leave
xlat
mov
dec
or
gs
mov
adc
or
outs
das
retf
or
data16
das
mov
jecxz
push
push
jmp
enter
addr16
cmc
and
mov
dec
hlt
cs
ja
pop
addr16
push
pop
sub
cli
mov
pop
add
or
jbe
mov
or
sub
sub
cmp
ss
stc
pop
push
push
and
mov
int
push
gs
ds
xor
adc
sbb
dec
call
movs
call
jp
sub
ror
mov
outs
int
jp
stos
retf
mov
and
xor
pop
push
mov
lods
stc
hlt
sbb
mov
das
shr
call
xchg
fiadd
xchg
jle
aad
xlat
sub
jb
bound
pushf
mov
test
test
icebp
xlat
ret
sahf
(bad)
sbb
enter
sbb
scas
push
jb
call
push
loopne
imul
jge
(bad)
xchg
stos
sub
in
aas
aaa
ds
xchg
fwait
pop
nop
das
in
lods
lods
jp
jnp
iret
test
test
sub
sub
jge
sbb
xchg
(bad)
dec
loop
adc
hlt
rcl
mov
and
shr
jo
popa
ror
pop
outs
ds
cmps
xchg
mov
adc
inc
call
jns
ss
and
push
sbb
arpl
mov
scas
cmp
xchg
mov
fwait
dec
aad
aam
mul
mov
scas
xor
call
jmp
rcl
or
mov
sub
sub
inc
adc
fdivr
jecxz
ins
ret
hlt
cs
mov
and
addr16
pop
jnp
dec
iret
ins
stos
mov
pop
sub
pop
push
mov
scas
sbb
fsubr
(bad)
call
inc
nop
add
jl
fcmove
lea
adc
jo
out
mov
add
icebp
jecxz
gs
das
loopne
in
push
xchg
dec
movs
out
jmp
aam
push
push
callw
int3
ds
(bad)
xor
mov
clc
(bad)
jo
sbb
rcl
hlt
mov
leave
cmp
jb
mov
cmp
lods
sbb
int
jle
push
mov
xor
sahf
jo
stos
mov
std
ins
jge
sub
gs
pop
ret
lods
sbb
jb
sub
jbe
into
inc
call
push
ret
hlt
adc
jne
sbb
or
mov
dec
jb
jmp
xchg
mov
or
es
fsubr
xor
in
ins
and
loope
jae
mov
jp
mov
jnp
test
sbb
or
jecxz
pop
jmp
test
loop
sti
push
and
sub
adc
push
cmp
pop
pushf
(bad)
scas
in
lods
mov
mov
dec
scas
mov
adc
cmc
mov
mov
js
dec
xlat
and
lea
sub
add
or
mov
(bad)
or
stc
or
(bad)
aam
inc
lahf
call
jmp
mov
fcom
or
imul
dec
(bad)
in
jns
nop
adc
inc
xchg
jge
shr
shl
adc
(bad)
jecxz
aaa
(bad)
out
mov
cmp
ja
inc
neg
jp
push
or
outs
ins
push
sbb
(bad)
and
(bad)
aaa
cmps
je
loope
lds
retf
hlt
add
dec
mov
ins
jmp
imul
push
mov
add
dec
neg
cs
stc
push
dec
movs
ins
rcr
enter
enter
cmc
out
rcl
sub
jecxz
(bad)
mov
(bad)
movs
stos
xchg
mov
movs
jge
ret
pushf
addr16
cmp
outs
xchg
out
in
fstp
test
loopne
ja
pop
sub
cld
pusha
call
inc
jg
mov
push
(bad)
mov
lods
and
shl
shl
inc
mov
lea
xlat
daa
in
icebp
sbb
inc
sbb
mov
ret
stos
int3
icebp
(bad)
fcmove
les
and
popf
repz
mov
inc
(bad)
xor
pop
adc
arpl
repnz
das
call
in
push
cdq
inc
mov
inc
sub
popa
aam
jl
sbb
pusha
xchg
xor
push
mov
pop
popf
cmc
in
mov
inc
inc
and
jmp
pop
ins
shr
stos
xchg
push
int3
dec
jmp
jae
xchg
mov
adc
jp
(bad)
jbe
stc
clc
mov
mov
fadd
(bad)
jno
nop
repz
mov
or
pop
push
push
pop
in
xchg
dec
fadd
xlat
js
push
mov
fiadd
adc
cmp
jmp
push
(bad)
adc
mov
cwde
inc
imul
cli
mov
js
push
sbb
xchg
dec
xor
add
pop
in
rcl
mov
out
test
jmp
cmp
push
mov
cmp
js
or
dec
lahf
push
ja
mov
xchg
sub
adc
inc
out
pop
cld
test
mov
(bad)
hlt
fisub
adc
jbe
adc
fisubr
je
loop
jl
cmp
movs
push
mov
in
ror
int3
xchg
into
add
dec
ficom
loop
cwde
pop
imul
jge
loop
outs
mov
popa
nop
movs
adc
stos
inc
mov
int3
xor
retf
pop
hlt
mov
imul
leave
and
mov
or
or
mov
xor
fld
(bad)
pop
in
int
cs
cmps
cmp
cli
mov
mov
in
mov
or
retf
int3
push
xor
cmps
mov
shr
stc
dec
fdivr
cmp
fs
cmp
(bad)
inc
scas
sti
in
stos
mov
daa
mov
lods
lea
xchg
in
jmp
ja
add
cmp
aas
sahf
add
xchg
mov
xchg
jne
inc
cmps
sub
ins
pop
into
test
js
dec
out
xchg
hlt
xchg
adc
add
mov
inc
mov
pop
sbb
xor
add
inc
test
adc
add
pusha
xchg
mov
cmc
fisub
sub
call
(bad)
jmp
sub
sbb
xchg
(bad)
ror
cld
(bad)
mov
mov
movs
push
dec
sbb
test
or
xchg
mov
fwait
pop
in
iret
push
xor
fist
mov
clc
fsubr
pop
adc
fdivr
inc
scas
gs
xor
mov
pop
retf
stos
sbb
mov
jle
arpl
inc
mov
jo
popf
mov
adc
xor
call
dec
hlt
repnz
out
daa
sbb
jg
out
sar
(bad)
enter
and
dec
dec
(bad)
repz
cmps
mov
jg
xor
jmp
xchg
test
push
iret
add
xchg
inc
outs
lods
and
push
dec
jle
cmp
mov
(bad)
(bad)
sbb
cmps
sub
pop
call
repz
popf
xchg
add
lahf
int
dec
adc
xlat
js
add
cmp
addr16
inc
jle
mov
retf
test
inc
cmp
out
adc
ins
push
mov
pop
adc
ja
push
jnp
or
mov
inc
xchg
mov
jge
pop
lods
mov
fmul
dec
mov
add
inc
sub
and
mov
jl
sub
mov
mov
sbb
rol
shl
push
mov
dec
aad
ins
jp
rcl
mov
push
gs
jmp
mov
in
aas
repnz
rol
shl
push
aam
sub
and
mov
fcomp
pop
mov
fadd
(bad)
shl
mov
bnd
xor
cmp
adc
rcr
test
or
addr16
add
retf
(bad)
jae
push
or
ror
pop
lds
pushf
pop
jge
punpckhwd
loope
pop
fdivr
test
pop
leave
loop
mov
frstor
jl
test
fbld
jle
nop
lods
and
(bad)
hlt
out
sbb
sbb
sbb
inc
pop
jo
hlt
(bad)
outs
popf
push
shl
add
and
enter
mov
dec
pop
xchg
test
stos
retf
pushf
fidivr
cwde
pop
outs
push
inc
cdq
pop
dec
mov
(bad)
popf
scas
dec
fimul
hlt
mov
push
fsincos
push
je
sbb
sar
xchg
imul
xor
sub
mov
mov
sti
out
cdq
pop
cld
add
xchg
pop
repnz
mov
xor
dec
test
inc
ins
xor
mov
dec
push
mov
mov
loope
int
xlat
aad
fdivr
nop
ins
sbb
inc
cmp
sub
lock
leave
jb
or
in
inc
push
xlat
fdivr
cmp
xor
je
push
jge
loopne
dec
stos
out
cmc
data16
ja
dec
xchg
outs
aad
sbb
inc
add
fisubr
xchg
add
pushf
pop
inc
jmp
in
or
add
mov
scas
es
mov
mov
std
loope
sbb
mov
xchg
mov
fcom
xchg
nop
hlt
dec
jecxz
or
into
and
mov
inc
push
aaa
add
sar
xor
push
mov
popf
(bad)
int3
retf
test
add
je
add
dec
mov
shr
(bad)
in
shl
fdivp
dec
and
and
into
mov
loopne
sub
push
mov
inc
aad
aaa
or
sbb
dec
or
sub
rcr
in
jg
pop
add
xchg
shr
mov
mov
cwde
mov
clc
or
lock
xor
cmp
ret
inc
push
inc
pop
cli
add
adc
ret
or
add
ret
retf
stos
not
sub
int3
xor
jmp
jge
mov
pop
dec
std
daa
bound
ds
adc
pop
mov
adc
repz
repz
out
ret
mov
sub
cld
and
cmp
push
repnz
xchg
outs
test
jno
add
or
hlt
(bad)
cli
add
fwait
or
dec
or
inc
out
add
fs
jg
cmp
das
or
shl
std
sbb
rcl
mov
mov
inc
loopne
or
xchg
in
and
call
aas
rcl
pshufw
lods
inc
or
js
clc
xchg
or
mov
adc
imul
mov
add
jo
xor
movs
mov
outs
test
shl
cmc
xchg
lods
xchg
adc
pop
sbb
mov
push
aaa
sub
or
cmp
pop
or
enter
pop
inc
pop
je
fimul
rcl
in
mov
jmp
cmp
jns
and
(bad)
jmp
pop
sub
aam
rcl
cmp
sbb
fcom
mov
hlt
mov
sbb
or
xchg
inc
jg
sbb
mov
popf
fimul
and
aas
pop
sub
das
and
inc
rep
sbb
pavgw
ins
mov
pop
inc
jae
sub
fldenv
icebp
leave
add
and
push
dec
mov
cs
clc
sub
scas
xor
add
imul
mov
jg
xor
stos
xchg
sbb
adc
rcl
aam
add
sub
loop
(bad)
and
sti
arpl
inc
add
fld
adc
mov
aam
mov
jne
push
ss
daa
pop
dec
adc
scas
push
and
push
mov
jbe
push
xchg
out
xor
(bad)
out
leave
jp
stos
pusha
cmp
inc
sub
dec
mov
fs
pushf
or
not
sbb
pop
int
pop
dec
fsubr
push
inc
cdq
(bad)
adc
ja
xchg
test
inc
jmp
je
lods
in
jmp
mov
pop
sub
xchg
mov
and
je
sar
xchg
dec
rcl
dec
dec
adc
or
aaa
cdq
movs
or
sub
pop
addr16
or
dec
push
jnp
adc
in
call
ror
fadd
mov
jno
pop
out
add
movs
push
adc
cmp
stos
(bad)
mov
mov
push
mov
sbb
xchg
push
push
xchg
xchg
jne
sbb
clc
fs
jecxz
inc
jecxz
out
call
jmp
mov
hlt
cmp
jae
sbb
add
or
fimul
pushf
mov
mov
push
push
mov
xor
jp
mov
fsub
aad
mov
test
jge
xor
inc
xor
dec
or
imul
cmp
ss
popa
mov
sbb
int3
jge
inc
call
cmp
lea
mov
daa
xchg
mul
xor
aaa
inc
mov
jl
test
xor
arpl
test
mov
adc
leave
cmps
jns
(bad)
in
out
test
push
jg
dec
xchg
cmps
xor
movs
and
cmp
ja
ins
neg
pop
add
nop
pop
inc
fisttp
dec
fldlg2
imul
mov
in
leave
sub
mov
sbb
leave
inc
(bad)
lock
int
cmp
fmul
mov
adc
stos
fiadd
jge
pop
jmp
jno
adc
inc
jae
mov
cli
xchg
rol
in
mov
popa
mov
add
test
jbe
hlt
adc
or
out
fstp
retf
dec
add
jp
cld
push
pop
fstp
dec
or
or
call
push
stos
jge
arpl
sub
sub
add
aam
popa
mov
mov
icebp
es
sbb
xor
int3
adc
hlt
test
mov
push
inc
inc
push
out
out
mov
movs
das
dec
mov
jnp
jg
or
pop
in
daa
lea
push
sti
push
adc
repz
repz
mov
jo
pop
xor
cmc
adc
int
sbb
dec
sbb
push
ja
jecxz
es
mov
in
adc
stos
test
dec
sbb
je
push
ins
pusha
bound
daa
das
cwde
xchg
sub
cld
sub
or
in
mov
add
mov
les
call
je
inc
(bad)
in
jecxz
sbb
mov
and
mov
mov
mul
and
or
pop
aam
pop
xor
xor
loope
inc
add
pop
mov
and
call
popa
add
in
sub
mov
mov
js
test
jnp
imul
out
adc
inc
push
arpl
xchg
adc
jmp
push
cld
sbb
cs
(bad)
jmp
and
je
retf
jmp
shl
leave
rcr
push
cdq
and
out
pushf
mov
movs
fwait
iret
adc
mov
and
push
and
dec
test
test
sbb
push
push
cmps
dec
mov
adc
mov
not
cvtps2pd
lahf
imul
jno
add
push
in
mov
out
xchg
jns
jmp
push
int3
ins
repz
push
jo
cmp
popf
cmp
hlt
ss
lods
js
mov
faddp
(bad)
dec
stos
jo
fs
clc
leave
frstor
xchg
hlt
jmp
addr16
popa
sbb
xchg
not
xchg
fiadd
inc
icebp
aam
pop
movs
arpl
push
inc
or
test
cli
mov
sbb
xchg
cld
add
imul
aad
jnp
mov
jge
pop
or
in
xchg
mov
shl
mov
call
(bad)
test
pushf
adc
mov
aad
ja
rcr
je
ja
call
sbb
pusha
xchg
sbb
hlt
cmps
sub
jns
mov
mov
inc
ins
(bad)
sub
xchg
fdivr
add
out
xchg
(bad)
mov
ret
or
pop
fsub
jp
enter
jo
dec
int3
stos
in
dec
push
lahf
mov
(bad)
sahf
test
mov
loopne
fidiv
dec
and
inc
sbb
retf
add
adc
(bad)
and
push
sub
aam
lods
scas
jmp
jno
sbb
lds
pushf
sbb
or
or
add
xchg
punpcklbw
jp
aas
and
add
frstor
fisttp
mov
or
cmps
pop
xor
push
rol
jmp
fdivr
pop
fisub
lods
mov
popa
push
out
call
pop
adc
scas
addr16
sub
xlat
into
push
mov
into
and
push
ss
fsub
cdq
nop
sbb
gs
mov
mov
or
and
xlat
pop
add
sub
or
scas
retf
inc
iret
arpl
add
rcl
mov
popf
mov
inc
adc
add
push
pop
mov
mov
xor
push
mov
(bad)
mov
xchg
pop
mov
aam
loope
movs
xchg
xchg
mov
dec
xor
jne
fxch
or
pusha
in
and
fwait
(bad)
cld
dec
popa
int3
pop
lds
jp
xor
mov
lods
sbb
xor
xchg
ficom
pop
xor
les
adc
push
push
or
neg
dec
xchg
sbb
sbb
ror
xchg
xchg
shl
xchg
mov
adc
test
(bad)
xchg
cwde
pushf
and
imul
mov
std
xor
jns
ja
mov
fld
mov
inc
imul
fsubp
xchg
fisubr
ret
out
and
sbb
cwde
aad
out
mov
jns
addr16
sub
imul
icebp
pop
push
es
into
push
movs
jmp
test
dec
aaa
cmps
xchg
jo
mov
test
jne
pop
inc
push
sub
dec
mov
inc
clc
push
xor
aam
push
adc
test
jbe
clc
cmp
loope
push
int
repnz
stc
int
repz
adc
neg
stos
test
and
mov
mov
cmp
icebp
ins
cmp
ins
inc
add
sti
sbb
loopne
aas
sub
dec
daa
loope
ficom
stc
xor
jae
aas
pop
lods
pop
add
in
fld
adc
imul
inc
push
xchg
std
fs
mov
mov
fwait
ins
je
sub
int3
sti
cld
hlt
sub
cmp
jae
xchg
mov
lahf
adc
js
into
(bad)
xchg
mov
inc
jmp
inc
lahf
inc
jmp
xor
mov
cmps
or
mov
adc
jecxz
push
movs
mov
daa
mov
push
imul
hlt
mov
daa
jmp
and
mul
jns
jg
push
xchg
in
mov
(bad)
xchg
add
mov
ss
sub
dec
jo
enter
add
fidivr
mov
sub
mov
repnz
lods
stc
sbb
jns
je
inc
aaa
out
xor
xor
sbb
mov
or
push
aad
adc
add
mov
sub
xlat
(bad)
icebp
mov
icebp
movs
les
call
fisttp
mov
jle
iret
adc
loope
cld
and
xchg
fadd
enter
cdq
pusha
add
jmp
inc
pop
cmp
xlat
mov
push
fisubr
mov
(bad)
jge
cmp
push
sbb
cmps
test
into
pop
test
and
test
es
pop
dec
cmp
sbb
hlt
dec
and
popf
pop
pop
pop
sbb
jae
call
xor
sahf
retf
adc
fld
int
sub
mov
push
loopne
repz
iret
xor
jecxz
je
test
scas
xchg
jp
sbb
or
mov
cmc
ja
rcr
test
stos
xchg
test
addr16
cwde
rcl
mov
fwait
dec
adc
(bad)
jmp
jno
sub
and
pop
popa
js
adc
cwde
gs
fstp
sbb
imul
jmp
push
and
fsubr
outs
sub
and
(bad)
xor
jmp
or
gs
mov
jo
ret
add
dec
cli
fbstp
mov
aas
pop
repz
sbb
outs
sbb
inc
into
cmps
xchg
outs
js
inc
cmp
jmp
(bad)
xor
fdivr
xchg
inc
add
mov
lds
leave
inc
xchg
(bad)
aaa
js
adc
loop
sbb
jge
jecxz
fs
cwde
sahf
iret
mov
and
int3
cmp
add
mov
nop
xor
xchg
aam
lods
jmp
loope
mov
xor
add
std
mov
push
pcmpeqb
mov
cmp
inc
jmp
or
and
and
(bad)
xchg
jns
jno
mov
stos
jae
pop
ret
cmp
xor
cmps
test
pop
jle
scas
loop
in
or
ror
adc
add
push
xchg
fiadd
pop
xchg
(bad)
sub
aam
sti
mov
mov
or
sub
lahf
enter
shr
(bad)
mov
int3
das
mov
mov
popa
xlat
push
stos
push
retf
not
xor
sub
lods
call
jp
shr
xchg
jmp
iret
and
xchg
test
adc
jmp
sub
loope
add
sub
outs
imul
stc
pop
in
adc
add
xchg
repnz
adc
sbb
sub
mov
add
dec
xor
retf
sub
hlt
aaa
iret
jnp
call
adc
pop
in
icebp
push
inc
ins
pop
in
jecxz
test
cmps
adc
xchg
add
fadd
jmp
cs
or
mov
xchg
hlt
pop
aad
std
mov
xor
dec
and
sbb
test
push
and
cmp
pop
les
cmp
mov
stos
fiadd
mov
mov
add
or
add
loopne
(bad)
push
pop
sub
sti
loope
aad
outs
add
and
loop
mov
add
fs
sbb
adc
jmp
loopne
test
mov
jno
and
aaa
out
jecxz
jo
inc
mov
pop
push
xor
cli
or
push
es
ret
cmp
dec
sti
(bad)
mov
sub
fcom
enter
pop
push
adc
mov
mov
push
fild
inc
test
scas
lods
inc
loop
jle
xchg
dec
pop
adc
push
sti
addr16
sti
pop
in
in
sub
outs
xchg
scas
add
mov
jno
pop
push
aaa
popa
adc
add
sub
sub
int
push
mov
and
lods
adc
leave
jmp
push
(bad)
retf
stos
pop
dec
mov
add
xchg
rol
imul
jbe
hlt
cwde
adc
int3
fwait
ins
test
mov
retf
cdq
inc
mov
aas
popa
xor
repz
scas
push
push
jno
sub
jle
(bad)
xchg
std
or
xchg
or
shl
cmps
lods
scas
and
in
sbb
pop
lea
jbe
inc
movs
dec
aam
cwde
cwde
jbe
outs
inc
sbb
cli
sub
adc
rcr
clc
retf
ror
jo
leave
add
pusha
mov
(bad)
stc
xchg
sbb
ficom
cld
std
enter
jae
xchg
add
pop
pushf
lods
pop
mov
mov
aad
cwde
pop
mov
cmp
loop
hlt
in
adc
(bad)
and
dec
inc
inc
mov
call
movs
dec
mov
xor
mov
sbb
xor
imul
in
cmp
icebp
cmps
ds
or
xor
cmps
test
scas
imul
xchg
in
jg
and
sbb
mov
sahf
add
ja
aad
add
mov
(bad)
aas
inc
je
jge
push
test
cmp
dec
movs
push
sub
ins
das
loop
loopne
xchg
mov
lock
das
or
adc
push
mov
dec
data16
fnsave
mov
adc
retf
inc
mov
fnsave
popa
pop
adc
or
mov
out
fs
xchg
jne
(bad)
mov
test
mov
cmc
jnp
mov
lock
mov
in
xor
enter
scas
fwait
inc
push
sbb
add
mov
sar
scas
sbb
mov
sbb
(bad)
jmp
mov
push
enter
or
in
jl
stos
push
in
mov
(bad)
sbb
loop
repnz
cmp
mov
lock
inc
in
cmc
add
mov
xchg
jecxz
cli
jo
mov
sar
xchg
jns
nop
repnz
fild
aaa
cld
cli
adc
adc
mov
std
int3
imul
imul
sbb
jg
xchg
sar
pop
pop
cld
xchg
lods
pop
jne
pop
lds
sub
aam
mov
inc
fidivr
adc
inc
or
retf
nop
pop
sbb
hlt
mov
xor
fisubr
aam
sbb
or
jp
sub
sub
ja
push
xor
jo
xchg
bound
pop
and
sbb
call
nop
jnp
out
ret
les
xor
jmp
les
and
fwait
push
xor
stos
pop
lea
adc
push
dec
or
(bad)
ror
fadd
sub
sahf
rcr
xchg
loope
inc
sbb
jle
test
imul
adc
loop
stos
les
mov
xchg
adc
ret
sub
leave
and
push
out
stos
imul
jmp
jge
pop
repnz
pop
imul
inc
xlat
jb
sbb
out
aam
fcom
dec
lock
test
iret
sbb
dec
out
and
fisub
push
dec
(bad)
imul
mov
jle
jp
mov
jmp
jb
dec
pop
mov
ins
popf
jnp
mov
(bad)
loopne
push
cmp
xchg
sbb
ins
out
hlt
sub
ror
mov
adc
pop
scas
adc
gs
dec
enter
jmp
push
mov
pop
imul
cwde
xchg
(bad)
not
loopne
cmc
push
mov
addr16
xchg
mov
cmp
std
jmp
xchg
ja
fisub
jae
cmps
fcomi
or
jo
pop
sub
jne
mov
xor
xchg
pop
ja
mov
into
shl
hlt
mov
mov
or
cmc
sbb
mov
push
pop
aas
pop
dec
test
pop
or
add
jae
ror
pop
xchg
scas
(bad)
jmp
arpl
test
cs
xchg
(bad)
xchg
sub
xchg
movs
xor
and
mov
push
dec
call
pop
jmp
leave
mov
repz
push
adc
shr
mov
addr16
ins
dec
pop
loopne
imul
mov
dec
jno
scas
and
xchg
and
pop
add
sub
pop
loop
dec
test
stos
fstp
fbstp
fmul
xchg
stos
pop
add
mov
call
movs
push
xor
ins
les
out
sub
test
shl
les
leave
fsubr
sti
std
in
(bad)
and
add
sub
cmp
in
stos
je
outs
hlt
mov
clc
jb
pop
mov
pop
call
jecxz
adc
aas
and
scas
xor
fsubrp
pop
in
cmp
adc
add
dec
sbb
and
and
test
int
adc
loopne
mov
xlat
ins
je
pusha
jne
aaa
dec
out
ins
(bad)
nop
ret
inc
lea
xor
sahf
dec
inc
mov
addr16
popf
adc
loop
(bad)
ror
(bad)
dec
or
sbb
(bad)
enterw
jno
jmp
test
mov
push
popaw
adc
xchg
sub
cmp
inc
clc
outs
jle
cmp
dec
adc
stos
test
sub
mov
ret
dec
pop
retf
mov
test
das
imul
daa
into
dec
cmp
ror
add
mov
add
or
push
imul
in
test
cld
xchg
xor
sub
stos
arpl
lahf
cmps
cmp
mov
jg
xchg
dec
push
lods
inc
test
mov
sub
mov
or
inc
mov
inc
(bad)
push
outs
imul
mov
cwde
shl
jle
dec
fucomp
jae
das
sbb
mov
cmp
inc
pop
nop
les
push
rcl
sbb
fldenv
dec
inc
and
adc
push
into
gs
lods
xlat
ja
mov
ja
adc
sbb
xor
aaa
cwde
adc
inc
call
fstp
ds
data16
jle
loopne
dec
jo
jmp
test
sub
lods
mov
add
(bad)
pop
jmp
inc
mov
popa
repnz
out
shl
lods
pusha
mov
inc
xchg
mov
rol
call
sti
ds
mov
lods
ja
mov
push
icebp
(bad)
and
mov
add
cmp
loop
pushf
mov
adc
lea
push
fstp
imul
retf
pop
cmp
dec
nop
jb
popf
xor
push
(bad)
(bad)
outs
adc
cmp
pop
xchg
lods
xor
mov
jl
xchg
mov
fimul
cmc
jle
in
pop
inc
ja
call
jmp
in
cmp
add
jmp
dec
jnp
loop
ins
inc
add
and
push
pop
nop
sahf
push
dec
inc
and
sub
jmp
je
test
and
mov
into
mov
jl
pop
adc
retf
push
push
push
inc
jnp
jmp
in
pop
sub
enter
pop
or
js
dec
mov
lock
jge
and
enter
sbb
cmp
aaa
imul
lea
out
xor
cli
mov
mov
push
cmps
adc
or
cmp
inc
sbb
add
hlt
mov
xchg
sbb
into
mov
fs
(bad)
pop
sub
aas
cli
scas
mov
dec
or
sbb
pop
push
mov
pop
mov
or
(bad)
and
push
lahf
aad
shr
sbb
adc
xchg
cmps
dec
lods
mov
data16
outs
out
out
in
xor
scas
frstor
imul
movs
shl
mov
arpl
dec
adc
loopne
jle
mov
xchg
clc
movs
dec
mov
dec
adc
push
shl
movs
xor
stos
xchg
loop
(bad)
loopne
inc
inc
dec
sbb
xor
mov
mov
cmp
out
pop
(bad)
and
fiadd
cmps
js
in
mov
cmp
pop
push
mov
sahf
ss
in
aad
rol
dec
loopne
sub
xchg
mov
push
add
xor
push
pop
xchg
es
mov
es
pop
dec
mov
dec
xor
jmp
or
add
push
cmp
mov
(bad)
stc
inc
aam
jno
std
ret
ror
inc
test
push
int3
jnp
add
ficom
xor
xor
(bad)
mov
vpsrlw
cmc
rol
xor
push
loope
sub
sbb
or
in
adc
(bad)
cmp
fcom
push
in
imul
shl
mov
outs
ret
jle
inc
push
or
dec
sub
push
popf
gs
add
fsubr
mov
jge
int3
adc
push
scas
mov
lock
inc
scas
xlat
xchg
outs
int
xor
repnz
jb
and
repnz
mov
sub
add
movs
or
pusha
data16
test
adc
add
retf
adc
cmps
adc
(bad)
test
lea
pop
add
(bad)
inc
sbb
push
mov
ds
xchg
sub
rcr
xchg
ret
enter
ror
dec
push
clc
lock
lods
or
enter
test
test
sti
sbb
sti
xchg
les
test
add
popf
add
sahf
jns
mov
in
mov
mov
(bad)
leave
cmp
sbb
enter
std
out
mov
sub
in
xor
in
sub
mov
push
push
iret
xor
(bad)
in
inc
jo
jo
mov
cld
test
retf
(bad)
sub
sub
or
fadd
jmp
xchg
add
scas
jl
imul
loopne
outs
jnp
aam
outs
sbb
mov
mov
fwait
mul
xchg
fnsavew
ins
xor
xor
mov
jb
(bad)
call
movs
mov
ss
stc
add
cmc
daa
mov
inc
test
lea
cmp
add
cwde
cdq
push
sub
add
rcr
adc
push
in
adc
repz
shr
stos
rcl
mov
dec
rsqrtps
std
pushf
inc
sti
jg
and
adc
es
in
jge
rcl
stc
pop
add
call
out
sbb
cmc
loope
(bad)
mov
push
packuswb
sahf
cmps
mov
cmc
jne
mov
mov
in
lahf
sbb
ficomp
repnz
mov
xor
sub
xor
push
and
xchg
fiadd
xchg
jmp
out
ins
jne
(bad)
retf
mov
or
push
fcom
mov
test
scas
pop
(bad)
mov
test
dec
mov
mov
or
jbe
lods
mov
dec
shr
addr16
inc
int
test
jmp
add
and
shl
(bad)
adc
lock
dec
(bad)
outs
aam
in
or
add
lods
xor
cmp
mov
fs
adc
imul
fdivr
mov
or
stos
sub
(bad)
mov
in
fmul
add
xchg
sbb
data16
cld
mov
inc
outs
adc
adc
or
fisubr
das
jg
movs
addr16
push
cmps
rol
sub
inc
mov
stos
inc
jg
inc
fld
icebp
and
xor
aas
addr16
lahf
mov
ins
mov
fstp
shl
pop
lahf
fsubr
xchg
scas
fimul
push
jl
adc
mov
pop
jns
hlt
sbb
fwait
outs
loopne
push
jne
jl
int3
adc
aad
mov
xor
jo
loopne
add
(bad)
push
or
cs
arpl
js
mov
loopne
(bad)
aam
cli
or
cmp
push
dec
cdq
cdq
aam
xchg
ins
mov
(bad)
pop
mov
inc
jbe
adc
inc
fidiv
push
pop
sbb
cmps
out
mov
jp
frstor
scas
data16
mov
fild
iret
in
dec
jne
jmp
jmp
mov
aas
add
dec
sti
sub
ins
push
icebp
xchg
aam
movs
retf
xchg
je
jp
cmp
pop
outs
sahf
mov
lods
push
jecxz
xchg
jo
jmp
sbb
pop
repnz
xor
repz
mov
fnstsw
sub
psubw
enter
sti
push
pop
in
rol
mov
fwait
mov
lds
or
nop
dec
mov
cmp
scas
mov
sub
jge
ret
pop
and
lds
add
nop
in
inc
inc
test
aam
jge
jge
jecxz
pop
dec
sbb
xchg
mov
cdq
push
icebp
jno
imul
lods
lahf
push
aaa
shl
in
pop
inc
cmp
push
mov
cli
stos
cs
or
and
mov
push
xchg
sbb
inc
out
sahf
jg
pop
clc
or
sbb
cs
out
mov
es
repz
mov
push
scas
jecxz
cld
sbb
aas
push
jl
push
adc
pop
sub
into
cmp
mov
fild
dec
cmps
adc
vmovddup
or
div
(bad)
outs
or
ja
jns
leave
jnp
sub
jnp
adc
out
dec
mov
in
xor
pop
cmps
pop
push
xchg
lods
add
push
cmps
dec
push
inc
or
imul
jg
lea
mov
jns
test
movs
or
movs
jmp
xor
mov
scas
fcmove
(bad)
hlt
cmp
or
js
call
in
(bad)
xor
cs
lea
add
cmc
mov
loopne
dec
das
cmps
cmp
fcmovne
sar
cmp
push
inc
sub
std
int3
cmp
nop
dec
pop
scas
clc
es
xlat
sbb
ja
fld
mov
dec
ja
mov
jmp
fbld
shr
pop
and
jecxz
mov
lea
adc
loope
xchg
imul
lods
cmps
cmp
mov
outs
in
in
scas
(bad)
mov
ins
call
loopne
mov
xchg
arpl
fstp
leave
mov
movs
xor
sbb
jns
aad
sahf
adc
shr
enter
imul
cdq
inc
test
inc
fs
int3
pop
imul
cmp
mov
add
sub
enter
sbb
(bad)
inc
xchg
popf
(bad)
pop
cmp
dec
jns
mov
das
add
adc
inc
lahf
and
ins
sbb
pusha
adc
jge
add
mov
push
outs
enter
int
add
push
outs
push
cmp
jb
adc
aam
out
sbb
enter
add
imul
test
les
pop
call
and
cli
mov
cmp
pop
(bad)
retf
push
pop
cmp
(bad)
mov
jno
ja
push
mov
xchg
jo
jmp
xchg
mov
inc
jns
out
movs
dec
push
inc
xchg
pop
xor
ret
mov
icebp
out
pop
sti
pop
inc
ins
dec
retf
addr16
inc
loopne
push
cmps
pop
jo
xor
lock
pop
sub
and
(bad)
rcr
or
data16
xor
sub
xlat
(bad)
mov
lahf
and
cli
xchg
div
push
mov
jmp
or
push
icebp
xor
inc
jb
mov
jnp
popf
fwait
outs
push
xor
into
aaa
push
jb
test
daa
(bad)
out
mov
xchg
sub
aas
mov
mov
xchg
add
(bad)
inc
mov
mov
dec
sbb
movs
push
scas
mov
stc
test
cmp
pop
cmp
ja
mov
cs
push
mov
loop
out
cli
jp
rcr
dec
fwait
sahf
fsub
push
fsub
push
jb
and
jo
push
out
lahf
or
and
mov
in
adc
lds
daa
sub
imul
mov
retf
and
push
push
repz
xchg
add
lea
repnz
add
ret
repz
jmp
mov
adc
and
mov
pop
imul
iret
mov
pop
push
inc
out
fwait
mov
cs
jl
inc
out
cmp
sahf
iret
xor
mov
stos
sbb
adc
daa
mov
fisub
adc
lahf
mov
mov
jmp
inc
xchg
dec
pop
mov
addr16
jle
dec
addr16
mov
out
arpl
stos
fst
mov
adc
pop
ret
cld
sar
rcr
xor
mov
and
inc
cmps
sub
mov
mul
in
jne
aas
retf
jb
jno
hlt
and
fidiv
dec
jns
jo
loop
xor
sti
in
(bad)
mov
jne
pop
aas
cwde
ds
lahf
loope
lock
scas
inc
daa
dec
adc
pop
out
xor
dec
push
mov
test
sub
mul
dec
jae
test
add
adc
xlat
pop
sub
mov
int3
mov
xor
sbb
nop
xlat
test
jne
stc
xrelease
push
sub
adc
mov
cdq
mov
mov
and
dec
xor
sub
imul
int
adc
add
jo
and
je
arpl
and
add
outs
adc
push
xor
jns
and
sub
(bad)
cld
int3
stos
sbb
mov
sbb
sub
fnstcw
mov
ss
mov
repz
scas
push
rcl
dec
in
and
icebp
fld
in
adc
xor
std
mov
fst
and
push
ficomp
or
adc
js
je
xchg
jmp
mul
test
mov
jno
pusha
xlat
aaa
in
cmp
ret
inc
cmp
xchg
lds
das
(bad)
fidivr
lods
mov
fidivr
xchg
cli
out
or
retf
arpl
outs
cmp
and
loope
mov
(bad)
das
in
jecxz
pop
mov
add
push
lds
cmp
sub
ins
les
fisubr
movs
pop
mov
inc
fs
repz
movs
scas
mov
fsubr
fdivp
mov
sub
xchg
cmp
fisubr
inc
aad
sbb
sbb
adc
mov
pusha
and
dec
push
jbe
push
lahf
xlat
mov
push
(bad)
dec
(bad)
std
dec
or
bound
push
shl
and
(bad)
dec
fild
test
jae
cdq
pop
jmp
vmovd
mov
push
dec
lods
mov
rcl
mov
fld
inc
(bad)
int
arpl
cmps
loopne
stos
in
adc
cli
ror
mov
mov
add
retf
loope
xor
push
hlt
fs
sub
lods
dec
push
nop
fisttp
push
xchg
jmp
pop
in
jp
mov
jmp
scas
inc
inc
xchg
dec
pusha
retf
xchg
std
in
movs
ss
or
and
adc
mov
lea
xor
sub
sbb
out
(bad)
es
xchg
pop
cmp
xchg
lahf
jle
push
cmp
std
and
xchg
mov
mov
mov
adc
xchg
xchg
repnz
call
push
pop
push
cmp
cmp
xchg
sbb
add
cdq
mov
cmps
xor
jae
repz
(bad)
xchg
sbb
mov
imul
add
ret
add
enter
test
pop
pop
iret
xor
pop
mov
repnz
icebp
ins
lods
(bad)
pop
cli
imul
add
pushf
pop
mov
scas
add
or
adc
pop
add
mov
scas
sub
arpl
adc
adc
push
and
enter
int
add
xchg
sbb
and
sbb
xlat
mov
jp
push
add
or
dec
or
xchg
pop
fbld
mov
jle
add
rol
ins
or
push
pop
inc
add
dec
(bad)
xchg
mov
and
int
in
xchg
pop
out
or
dec
fmul
and
add
sbb
in
shr
mov
jns
inc
mov
enter
xchg
(bad)
in
mov
jp
xor
mov
cs
daa
stos
sbb
push
xchg
les
xchg
stos
pop
gs
mul
add
inc
push
fs
ret
fisttp
lds
lods
dec
sbb
fsub
lock
sub
pop
jb
push
or
add
ror
mov
mov
(bad)
cdq
adc
out
dec
cmc
jns
ret
test
fld
aas
lods
cmps
push
and
inc
sub
xchg
mov
fist
jge
push
(bad)
fst
stos
jmp
jno
mov
arpl
sub
pushf
test
jo
sub
loop
icebp
adc
repz
out
xchg
out
mov
push
mov
js
nop
push
or
(bad)
and
iret
std
ror
sub
in
push
imul
loopne
daa
xor
adc
shl
popa
mov
or
sbb
in
push
add
cmp
int3
and
mov
inc
iret
hlt
jp
stos
jns
mov
mov
pop
sub
mov
ret
sbb
movs
jae
ins
cs
mov
lea
(bad)
and
mov
aad
std
push
push
(bad)
imul
pop
adc
cs
ja
add
jp
mov
inc
imul
lds
sahf
push
rcr
pminub
fs
outs
iret
add
add
add
mov
shl
cmp
pop
adc
bound
rcr
dec
jl
jl
jb
and
push
adc
jbe
push
add
sbb
inc
xchg
loope
fstp
dec
shr
push
loopne
test
je
lods
adc
push
mov
cs
mov
int
add
stc
or
add
push
or
int
mov
sub
fcmovb
je
fidivr
out
data16
mov
(bad)
aad
pushf
repz
fcom
nop
inc
arpl
jge
aaa
push
in
push
jo
mov
fmul
jo
dec
das
sub
dec
lea
enter
inc
(bad)
test
push
xchg
std
cmp
dec
push
sub
jg
clc
cmc
pop
mov
adc
push
mov
add
cwde
cmp
pop
rol
or
mov
cmp
pop
or
les
fbstp
test
cdq
es
add
gs
sbb
retf
sahf
or
cmc
fadd
mov
inc
ins
mov
in
push
inc
outs
adc
jnp
shl
push
stos
sbb
and
push
cld
iret
dec
mov
mov
xor
inc
icebp
push
sbb
or
test
adc
fucomi
sbb
xchg
cmp
inc
pop
mov
push
cmp
scas
pusha
push
fdiv
pop
cmp
mov
fisttp
xor
jecxz
xchg
pop
data16
adc
scas
cmp
sub
jb
push
rol
or
in
jo
jno
mov
mov
stos
inc
(bad)
aam
ret
ret
push
add
int
stos
jns
jg
sbb
inc
mov
mov
mov
pop
lock
movs
mov
jbe
loope
mov
nop
test
or
xor
movs
push
dec
aad
ror
outs
in
mov
jns
stos
push
mov
jp
xor
xor
mov
nop
gs
xchg
in
xchg
xchg
mov
fwait
into
jb
(bad)
dec
mov
xor
mov
xchg
inc
or
je
movs
and
xchg
into
mov
push
test
fdiv
pushf
scas
adc
pop
jo
xor
cmp
(bad)
into
ret
cmp
fidiv
push
pop
(bad)
call
shl
xchg
pop
add
cmp
imul
iret
cmps
aad
inc
hlt
cmp
jecxz
cmp
sub
xor
in
rol
and
lahf
dec
fist
mov
sub
test
sub
adc
into
bound
mov
dec
ins
push
jmp
jo
fwait
add
or
cmps
mov
cmp
mov
retf
xor
cld
pop
add
mov
not
push
bound
loop
sbb
shl
xor
outs
bound
sbb
call
sar
mov
inc
movs
adc
inc
pop
jne
xor
mov
push
jg
call
pop
or
sbb
jno
rol
mov
test
call
frstor
mov
mov
cmc
xchg
gs
out
ret
fdivr
jecxz
add
(bad)
icebp
push
fild
dec
fwait
jmp
mov
rol
xor
loopne
ret
lods
imul
mov
pop
out
bound
ss
push
sbb
lds
adc
imul
fmul
mov
xchg
and
inc
cmps
mov
into
add
or
pop
inc
rcl
jns
ss
cmp
cmp
and
pop
pop
add
add
mov
retf
pusha
iret
mov
ret
les
lods
push
ins
xchg
adc
add
add
ficomp
push
scas
sub
sbb
sub
mov
adc
out
clc
fwait
pushf
scas
fstp
jg
fbstp
add
ret
mov
ret
adc
ficomp
lods
cwde
daa
int
push
jae
adc
and
jne
and
fdiv
mov
in
movs
data16
loope
daa
mov
mov
mov
fnstsw
out
add
jecxz
mov
cmc
xchg
fsub
push
add
imul
mov
xchg
or
leave
cmp
fdiv
push
test
cmc
pop
jb
in
jmp
dec
cmp
push
imul
(bad)
push
and
pop
add
cs
cdq
arpl
int3
pop
fild
cwde
mov
mov
int3
add
ins
jns
cli
or
sti
clc
sbb
push
inc
test
inc
addr16
mov
pusha
pop
push
sub
sbb
mov
mov
in
or
fmul
lahf
jmp
pop
dec
ficom
mov
pop
push
ret
ss
and
push
pop
mov
or
push
xchg
add
jge
outs
(bad)
or
sub
ficom
rol
mov
sub
mov
pushf
mov
sub
push
xchg
cmc
push
ja
push
jmp
and
ret
jmp
sbb
xor
stc
call
mov
out
jg
mov
pop
dec
xchg
movs
out
fisub
push
sub
inc
dec
cli
imul
jp
std
cmc
mov
mov
cdq
sub
jne
pop
cmp
(bad)
mov
ds
jp
push
ror
not
xchg
mov
push
aas
out
loop
dec
mov
pop
ffree
dec
jle
jb
push
fwait
mov
loop
out
xor
push
sub
data16
or
inc
jle
test
or
cmc
rcl
xchg
outs
and
cwde
pop
hlt
inc
mov
aam
pop
or
xchg
aaa
clc
sar
jb
cmps
test
je
sbb
ins
push
mov
mov
sbb
mov
dec
sub
cmp
sbb
ret
mov
leave
test
jecxz
dec
adc
(bad)
jno
stc
push
or
shl
clc
out
loopne
cmps
add
ds
xchg
or
cmps
shr
int
test
ret
jne
adc
mov
mov
mov
xchg
xchg
lahf
rcl
xlat
mov
xchg
adc
add
imul
dec
sub
popf
jg
jmp
stos
pop
and
shl
pop
mov
add
and
retf
and
pop
sub
mov
lea
ror
xor
out
enter
add
(bad)
call
mov
mov
(bad)
pusha
pop
imul
sub
push
mov
and
push
outs
jl
mov
mov
les
js
retf
shl
cmp
xor
fisttp
push
int
and
inc
push
nop
push
mov
(bad)
fisttp
stos
rol
shl
mov
movs
mov
stc
rcr
enter
jecxz
sahf
idiv
push
or
dec
push
fld
inc
push
iret
std
pop
mov
js
std
aam
sub
mov
xchg
adc
and
jge
iret
push
aam
mov
sub
or
test
lahf
sbb
sub
out
arpl
movs
mov
push
push
push
dec
lods
aam
ja
dec
xchg
inc
in
repnz
sub
xor
sub
int3
sbb
cs
ret
and
and
inc
push
mov
dec
add
adc
std
pop
sahf
loopne
push
mov
retf
iret
bound
xchg
stos
cmp
popf
cdq
sub
and
jmp
cmp
dec
jge
mov
leave
push
dec
cli
xchg
add
xor
mov
mov
enter
and
push
mov
jno
arpl
hlt
and
loopne
repz
push
push
adc
ret
adc
jne
(bad)
mov
test
adc
mov
call
jne
cmps
adc
call
mov
in
push
enter
inc
xchg
jle
mov
loop
test
push
dec
xor
mov
leave
push
jns
sub
sbb
and
(bad)
mov
adc
mov
adc
fimul
mov
bound
or
sbb
ins
sti
scas
cld
clc
sti
scas
fcom
inc
sahf
or
jnp
enter
dec
add
push
std
test
in
or
inc
adc
pop
stos
out
fadd
bound
arpl
das
retf
jb
fidivr
cmp
sub
mov
xchg
pop
and
test
das
test
push
cmc
(bad)
fild
or
in
int3
mov
into
std
xchg
inc
arpl
rol
int
cmp
lock
xor
push
sub
or
xor
pop
jle
xchg
hlt
das
dec
mov
sbb
push
(bad)
call
es
in
test
sbb
cmps
adc
retf
cmp
push
add
rcl
aas
pop
imul
dec
and
xor
lds
mov
bound
je
fistp
imul
fnstsw
pop
into
sub
xor
ret
retf
cmps
sub
and
cld
call
sbb
mov
inc
addr16
sub
fisub
repnz
inc
inc
fild
and
inc
dec
retf
dec
xchg
rcl
xlat
aad
cmps
mov
rol
xor
pop
dec
sbb
imul
and
lea
ficom
(bad)
or
hlt
test
lods
jne
clc
xor
pop
imul
scas
outs
push
lock
cwde
push
es
jae
loope
enter
jne
sbb
push
in
jle
lods
or
pusha
mov
pop
dec
xchg
inc
out
xchg
cdq
gs
jno
int
inc
sbb
call
dec
or
imul
jb
or
shl
adc
push
clc
loope
retf
sub
cmc
aad
ror
dec
dec
ja
cmp
(bad)
pop
adc
jne
adc
mov
mov
sub
cmp
fst
xor
(bad)
xor
int
jo
es
cmp
nop
pusha
call
into
mov
lahf
xchg
or
or
jns
cmp
aam
loop
mov
mov
inc
add
jnp
cmp
jg
jae
xor
adc
jnp
mov
mov
pushf
push
adc
and
scas
cmps
dec
adc
lods
test
push
ins
fcom
xchg
push
das
push
push
bts
xchg
cmps
out
xchg
test
and
mov
out
ins
repnz
ret
dec
jb
movs
mov
aas
pop
or
and
jae
and
iret
cmova
dec
fmul
scas
cmps
jle
mov
pop
xchg
jmp
add
pextrw
sbb
aas
xor
push
jge
fs
ret
les
ds
inc
inc
fisttp
clc
xchg
iret
mov
mov
sbb
es
mov
movs
push
imul
inc
shl
shl
std
add
xlat
ret
cmps
add
xor
adc
or
rcl
icebp
sbb
(bad)
jmp
cs
mov
int
hlt
pop
sbb
fstp
fadd
xchg
ins
in
jg
nop
pop
test
adc
sub
cmps
inc
mov
pusha
jae
into
cmps
out
and
push
jge
clc
xchg
dec
pop
pop
sbb
lds
(bad)
dec
mov
ret
xor
jae
fld
pop
mov
in
popf
jg
in
push
sub
aaa
into
test
xchg
aad
fistp
sar
stc
mov
repz
in
cwde
mov
cmp
sbb
inc
jns
xchg
stc
mov
aad
jae
icebp
imul
popf
xor
fdivr
bound
xchg
rcr
dec
mov
pop
mov
inc
sbb
vmread
pop
(bad)
daa
outs
sahf
mov
fld
sub
nop
repnz
fucomip
or
mov
push
inc
pop
dec
pop
pop
jmp
dec
pop
enter
stc
scas
push
inc
lock
call
aam
jb
mov
mov
cmps
sub
mov
pop
mov
mov
push
and
dec
repnz
test
cld
xor
popa
addr16
and
sti
cmps
outs
mov
mov
pop
push
in
jae
push
cmp
push
les
out
bound
sub
movs
mov
outs
push
adc
fwait
adc
cmp
mov
dec
push
ror
sub
xor
xor
hlt
retf
sub
jb
add
adc
push
and
mov
hlt
jp
fisttp
push
clc
push
and
lock
repz
fild
mov
sbb
hlt
icebp
ins
inc
mov
lahf
jmp
xchg
add
mov
mov
or
sbb
movs
jle
adc
sub
shl
mov
arpl
mov
cmps
adc
test
mov
adc
leave
push
sbb
fidivr
mov
push
add
call
pop
ins
mov
pop
push
outs
sbb
out
jecxz
mov
adc
loope
or
or
fstp
add
ja
hlt
xchg
inc
xor
sets
adc
xor
fisubr
add
mov
fs
add
xor
scas
jmp
into
data16
adc
sti
imul
mov
xor
jg
addr16
div
shr
ds
and
inc
jo
es
cmp
jae
sbb
mov
jp
jecxz
cdq
mov
jns
(bad)
mov
inc
mov
fdiv
in
pop
pop
add
mov
(bad)
(bad)
in
iret
and
pop
adc
jo
pop
cli
cmps
jo
mov
cmp
ret
mov
pcmpgtw
sahf
mov
out
pop
lds
retf
or
lds
shl
push
push
mov
sub
pop
push
call
mov
xor
movs
add
jmp
(bad)
pop
test
iret
add
pop
mov
mov
pop
jmp
imul
sub
pop
mov
test
xchg
stc
jne
in
push
inc
jl
and
out
jo
scas
mov
je
ret
cmps
test
mov
pop
aaa
shl
push
enter
es
xchg
outs
into
jnp
out
je
rol
jbe
sub
mov
aas
fisttp
fmul
call
ds
mov
ficomp
out
lods
xchg
lods
loop
call
dec
adc
repz
xchg
adc
push
add
add
fisttp
jnp
repz
and
pusha
jp
ins
mov
add
or
mov
mov
movs
cmp
jb
sub
cmps
js
cmp
or
and
shl
cmp
jne
nop
sub
(bad)
aam
imul
sbb
pop
sub
rol
sub
jmp
add
in
in
(bad)
out
ret
pop
push
repnz
add
mov
mov
shr
cmp
test
cwde
(bad)
fsubrp
and
out
xchg
rol
sbb
lods
aam
iret
leave
ret
jle
pushf
mov
xchg
xchg
nop
inc
lahf
mov
pushf
jnp
xchg
push
cmp
add
ja
mov
jno
bound
or
mov
inc
jnp
in
and
sbb
xchg
xlat
lock
mov
push
je
cmps
inc
mov
cli
push
xor
sub
std
popf
(bad)
jmp
inc
dec
pop
or
dec
das
clc
mov
mov
adc
cli
ror
paddsw
cmp
lds
clc
push
push
outs
scas
stos
fisttp
push
adc
sub
in
into
call
shr
xchg
inc
call
jl
jo
inc
mov
add
xchg
popa
inc
dec
jbe
scas
sub
fsubr
mov
mov
xor
mov
inc
cmp
jno
inc
arpl
add
mov
inc
aam
xchg
cmp
pop
sub
nop
(bad)
sbb
or
or
mov
adc
or
retf
xchg
mov
push
cmp
test
mov
dec
dec
dec
jae
mov
mov
sahf
mul
outs
or
xor
in
icebp
push
ror
loope
sub
scas
cmp
xchg
dec
jp
cmps
aad
ja
or
push
sub
lods
(bad)
fmul
clc
adc
aaa
adc
or
shl
jns
(bad)
xchg
push
cmps
fcmovbe
popf
sti
(bad)
dec
ss
retf
lahf
nop
dec
and
rcl
hlt
lea
inc
cs
fcomp
mov
cmp
mov
addr16
mov
or
pushf
pop
mov
inc
in
popa
mov
jmp
mov
aaa
scas
inc
add
mov
cmps
mov
dec
ficom
jae
pusha
adc
pop
sbb
cmp
mov
xlat
jnp
mov
ret
out
mov
and
ficom
cli
jo
repz
jl
xchg
adc
sub
sub
xchg
mov
xor
cmp
push
inc
pop
pop
scas
adc
addr16
movs
inc
cmp
inc
fincstp
lock
shl
dec
out
fistp
fimul
dec
cmp
jns
inc
lsl
mov
push
mov
sahf
mov
jnp
dec
enter
mov
sbb
call
dec
cwde
push
mov
sbb
dec
(bad)
cmp
push
pop
mov
mov
in
and
xor
jnp
adc
xchg
xchg
cmp
xchg
mov
icebp
jmp
dec
mul
push
add
mov
mov
call
inc
and
mov
cmp
cmps
mov
and
or
das
movs
xor
addr16
repz
and
and
and
mov
or
cs
movs
dec
dec
out
mov
mov
int
test
and
add
rol
jg
and
add
jmp
jp
mov
loope
pop
adc
push
jnp
dec
shl
mov
std
ins
fidiv
pop
sbb
repz
sbb
mov
iret
fistp
sub
dec
or
cli
mov
and
iret
mov
hlt
movs
scas
out
arpl
ret
and
pop
(bad)
fwait
jnp
xor
js
jns
icebp
xor
dec
push
das
xor
das
jns
ret
enter
jecxz
jmp
mov
add
and
xor
xchg
mov
xor
loopne
dec
xchg
fxtract
mul
mov
pop
mov
jmp
loop
test
add
fdiv
xchg
add
mov
jge
adc
pop
repnz
inc
xor
retf
test
(bad)
(bad)
jge
mov
loopne
fwait
mov
cmp
dec
ret
xor
jo
stos
mov
daa
popf
xor
leave
add
fcmovbe
fadd
pop
ja
mov
(bad)
addr16
(bad)
ds
jp
dec
ins
cmp
xlat
xchg
ret
cmc
adc
pop
std
rol
adc
sahf
push
aaa
mov
sbb
lahf
mov
push
dec
push
xchg
frstor
fist
mov
jae
sahf
in
test
int3
fs
pop
imul
clc
add
inc
and
fidivr
mov
loopne
mov
xchg
xchg
out
lods
mov
pop
pop
xchg
jmp
bound
mov
jnp
lea
imul
mov
inc
adc
push
and
cmps
cld
stos
sub
outs
cmp
vmovlpd
jnp
jbe
les
stos
inc
add
mov
in
mov
xchg
fldenv
popa
(bad)
ret
in
loopne
pop
jl
fidivr
pop
aam
adc
into
xor
or
sbb
(bad)
dec
xchg
sbb
mov
cmp
inc
dec
xchg
popf
mov
out
ds
scas
dec
ins
xor
mov
(bad)
adc
jno
fcomp
out
dec
adc
dec
loopne
lahf
cmc
and
aad
xchg
push
push
lods
pop
pop
jp
repz
mov
xor
outs
mov
dec
dec
fistp
lock
mov
or
jmp
ja
xchg
es
inc
mov
dec
cmps
add
aas
pop
loopne
sbb
adc
fwait
pop
daa
jg
js
cmp
mov
mov
in
movs
call
cmp
nop
hlt
not
mov
(bad)
(bad)
fcom
aad
sub
mov
jge
xor
mov
lock
push
fisub
pushf
inc
fcmovnu
sar
mov
xchg
jo
cli
rol
test
cli
sbb
popf
nop
push
mov
icebp
mov
loope
cmp
adc
cmp
retf
in
inc
cwde
xor
imul
test
ins
mov
sti
repnz
push
int3
(bad)
aad
xchg
mov
jl
cmp
pop
and
stos
jl
add
push
ins
test
out
add
or
les
fucomi
inc
fbld
daa
cmp
scas
jmp
cli
shr
neg
mov
into
jo
adc
aad
mov
cmps
xlat
clc
rol
and
test
push
and
adc
cmps
mov
or
int3
or
out
imul
xor
jo
mov
mov
inc
push
inc
push
sbb
inc
(bad)
sub
imul
jecxz
outs
mov
sbb
and
test
inc
lock
jne
xchg
sub
adc
lods
inc
add
push
ret
sbb
into
aaa
adc
jmp
xchg
mov
(bad)
ds
(bad)
pop
sbb
cli
cs
fdivr
dec
mov
mov
cmp
cwde
and
sub
jnp
(bad)
in
push
xor
jp
out
dec
(bad)
loop
into
jp
ins
cdq
(bad)
adc
ficomp
popa
mov
xor
(bad)
cdq
sub
push
xor
test
scas
test
mov
or
mov
push
inc
movs
add
jbe
in
fwait
cmps
inc
jb
dec
sub
push
icebp
sbb
pushf
lods
mov
inc
jle
loopne
or
rdpmc
(bad)
retf
push
mov
outs
pop
dec
adc
mov
ret
xchg
xchg
lods
cdq
repnz
inc
loopne
add
cmp
(bad)
fs
inc
pop
dec
push
xlat
inc
sahf
outs
push
cmp
lahf
cmp
hlt
mov
loopne
jne
mov
loopne
jmp
mov
repz
jge
scas
inc
sub
ins
push
mov
cmp
sbb
xchg
pop
cs
(bad)
xchg
popa
cmp
push
push
cmps
xchg
loopne
cdq
rcr
lahf
sbb
sbb
sbb
jp
imul
add
push
sbb
das
in
cmp
jbe
inc
adc
sti
jbe
push
fbstp
xor
sbb
or
mov
in
aam
cmps
or
add
pop
ret
mov
mov
das
shr
xor
adc
mov
mov
sbb
aaa
rcr
sar
mov
ret
push
add
in
adc
stos
stos
bnd
xchg
or
inc
cmps
movs
pushf
movs
add
mov
sub
je
mov
sub
sbb
imul
out
pusha
(bad)
mov
and
push
(bad)
into
pusha
cmp
sbb
mov
int
dec
(bad)
aas
sbb
fild
test
jae
mov
(bad)
outs
mov
pop
mov
pushf
pop
jbe
shl
jnp
ds
daa
dec
ret
fisttp
ins
inc
push
mov
les
scas
cmp
test
fwait
xchg
sar
popa
fidiv
sub
xor
inc
clc
mov
cld
dec
fsubr
cmc
or
out
cmp
adc
ja
inc
popf
sub
ret
ror
sbb
sbb
(bad)
jno
mov
fidivr
sub
(bad)
scas
jle
jg
cwde
sub
sub
sti
pop
xchg
xchg
bound
and
mov
ret
jo
into
cmp
inc
aas
imul
cmps
sub
and
push
fimul
pop
jmp
jecxz
scas
fimul
sub
imul
sub
xor
sbb
loopne
sub
jno
mov
pop
loope
sbb
loopne
jp
mov
cmp
mov
je
cs
xchg
mov
pop
mov
xchg
lds
xchg
sub
sti
ja
ins
je
cld
(bad)
call
push
cmc
imul
mov
repz
push
out
(bad)
push
clc
fldenv
mov
rcr
stos
sub
(bad)
hlt
mov
movs
inc
je
cli
cmp
lods
jg
js
stc
add
and
out
or
fwait
les
fimul
repnz
add
sbb
cmp
inc
or
dec
fcomp
add
xchg
lods
dec
mov
xchg
pop
daa
and
pop
mov
mov
mov
or
rcr
push
cld
cmps
fidivr
push
dec
scas
sahf
jmp
inc
sbb
mov
out
arpl
sbb
sub
cmp
setl
cmp
mov
mov
mov
dec
movs
and
sbb
mov
data16
jns
outs
pusha
(bad)
xchg
cli
daa
out
mov
inc
jbe
ret
add
or
cdq
ror
add
call
sbb
add
rol
out
stc
les
pop
and
pop
gs
xchg
repnz
data16
adc
mov
stc
xor
cmp
sub
call
adc
leave
std
sub
mov
pop
xchg
or
loopne
jmp
out
imul
test
inc
inc
and
movs
pusha
xchg
jne
cmps
sbb
mov
test
ret
add
bound
gs
mov
mov
das
loope
fxch
std
(bad)
test
push
aam
mov
push
pusha
je
pop
mov
mov
shl
xor
cmp
imul
lods
jo
(bad)
outs
(bad)
call
inc
lods
movs
jnp
xchg
xchg
push
mov
mov
iret
stc
cdq
xlat
adc
shr
xchg
adc
sub
adc
sti
es
loop
xchg
inc
aam
mov
fwait
sbb
enter
call
imul
jae
gs
or
jb
dec
inc
lds
rol
adc
iret
jae
loopne
xor
pop
fwait
and
sbb
test
inc
dec
sub
(bad)
ja
popa
jae
sbb
pop
adc
or
outs
xchg
ret
dec
cli
jmp
pusha
js
push
in
clc
cmp
fmul
mov
inc
pop
mov
fisttp
test
cmp
adc
sub
out
mov
pop
out
out
cdq
loopne
add
in
nop
mov
xor
popf
cmps
fadd
imul
lods
arpl
mov
wrmsr
xor
ss
inc
xchg
adc
iret
pop
in
xchg
movs
sbb
jmp
in
cmp
xor
mov
iret
or
xchg
push
jae
pop
jecxz
ret
xor
test
ins
test
sub
mov
out
jns
add
xchg
xor
adc
mov
xlat
test
fsubr
test
lods
mov
movs
pop
add
aam
out
mov
jne
xchg
test
add
jno
push
out
jno
rcr
pop
lock
test
xor
jns
mov
push
movs
call
jb
push
xchg
add
mov
ror
xchg
cli
into
fcom
pop
sbb
ja
ret
mov
push
sub
jl
aad
adc
mov
or
imul
xchg
aam
stos
in
mov
pcmpgtd
pop
movs
inc
mov
mov
cmp
push
sbb
pop
sub
fst
aad
xchg
inc
and
jle
add
xor
std
xchg
jge
jo
cmp
lods
fs
xchg
mov
mov
and
arpl
pushf
xor
adc
test
cli
push
or
push
jbe
adc
mov
cmc
dec
mov
push
int
test
push
pop
(bad)
and
pop
push
inc
test
pushf
lods
pusha
dec
sub
dec
lea
iret
into
adc
cli
adc
gs
sub
mov
in
cmc
jnp
ja
sub
ret
jb
out
sahf
fst
or
rcr
pop
pop
cmp
mov
mov
push
xor
bound
mov
ror
sbb
(bad)
test
push
lods
dec
mov
imul
mov
jns
or
mov
icebp
pusha
or
pop
mov
jae
push
push
xchg
in
rol
fidivr
xchg
into
inc
in
add
pushf
xchg
arpl
ret
sub
inc
jle
mov
gs
xlat
mov
add
xor
inc
das
mov
xchg
xchg
movs
not
imul
pop
xchg
push
shr
mov
mov
imul
das
fwait
es
mul
lea
call
push
mov
pop
(bad)
pop
dec
scas
jns
xchg
and
dec
lock
popa
ret
mov
sti
int
or
or
push
sbb
ret
into
jbe
mov
ret
je
pop
mov
jae
cmp
sub
mov
lea
jmp
in
push
and
mov
cmp
neg
addr16
jecxz
ins
sbb
stc
dec
jge
jns
not
pop
sub
mov
adc
iret
inc
jb
call
rcl
aad
mov
and
pop
fild
add
ret
mov
enter
adc
xor
jne
repz
xor
sbb
in
mov
xchg
cmc
sti
shr
push
add
cld
mov
ja
test
xor
add
push
jg
clc
mov
int3
hlt
rcr
outs
inc
push
popf
mov
rol
in
sahf
popf
les
repz
add
jecxz
movs
mov
out
daa
lods
cmp
mov
mov
jge
in
(bad)
out
pop
stc
fild
xchg
test
inc
push
out
pusha
jg
mov
inc
or
cmp
mov
sbb
nop
adc
jecxz
jl
lods
pop
pushf
cmp
mov
xchg
push
mov
push
test
and
pushf
arpl
or
sub
test
mov
or
sahf
mov
push
mov
sub
(bad)
push
dec
loopne
add
nop
fild
add
and
push
fcmovnb
mov
mov
mov
cmp
out
inc
cld
(bad)
jge
aas
das
lods
or
and
dec
shr
pop
les
int
in
xor
cmp
sbb
inc
pop
test
stos
mov
or
xlat
lahf
test
int3
shl
popa
jge
jle
cli
in
sqrtps
ror
jmp
mov
or
sbb
push
inc
sub
jp
and
mov
cmp
mov
(bad)
gs
jo
cmps
inc
mov
in
sub
mov
test
jle
call
sub
and
test
cld
popf
cmp
out
(bad)
and
sahf
and
imul
inc
dec
cmp
mov
in
(bad)
adc
mov
fsub
loopne
fdiv
rcr
int3
ss
in
sti
inc
cdq
fwait
xchg
rcr
mov
mov
into
mov
test
and
push
fisttp
xor
out
adc
lds
ror
xor
push
jmp
(bad)
test
add
icebp
sub
jne
imul
lds
cmp
es
and
clc
int3
hlt
cmp
inc
lea
mov
pop
cmp
dec
mov
fmul
xchg
and
shl
jae
iret
sahf
add
add
push
jmp
ins
pop
mov
and
rcr
push
jge
in
add
ss
jmp
sub
(bad)
mov
lds
push
enter
fs
cld
test
and
and
nop
jl
shr
add
leave
ss
leave
mov
retf
pop
retf
out
fcmove
clc
dec
jmp
out
jno
clc
push
mov
cmp
lods
cwde
fdivp
arpl
(bad)
jae
(bad)
cmp
in
dec
in
js
push
cs
lock
rcl
sbb
add
or
jae
push
inc
or
mov
(bad)
pop
sbb
or
or
cmp
sub
test
out
retf
cmp
cmp
mov
out
cmc
mov
xor
imul
int3
stc
mov
xor
or
int3
jnp
push
jmp
sbb
cmp
out
arpl
inc
fld
fwait
adc
mov
pusha
sbb
jae
jmp
test
adc
mov
pop
push
push
xchg
push
mov
mov
adc
jns
xchg
mov
xadd
aad
sub
leave
xor
cmp
dec
jmp
icebp
dec
mov
gs
xor
out
adc
shr
test
sti
scas
jb
aas
jbe
arpl
push
push
out
mov
push
clc
or
jno
(bad)
(bad)
cld
in
iret
inc
jecxz
and
ror
add
out
cld
add
shl
lahf
std
mov
movs
xacquire
push
jecxz
loope
add
jbe
test
and
or
xor
mov
fdiv
jo
call
(bad)
jbe
fild
int
jno
(bad)
fstp
test
mov
ja
mov
pop
loope
sti
hlt
(bad)
push
push
jmp
sbb
sti
ret
out
ffreep
push
stos
jbe
rcr
sar
int
(bad)
sahf
sub
lea
fdivr
add
pop
icebp
mov
mov
xlat
sbb
fwait
inc
into
jns
mov
and
je
leave
(bad)
jmp
popa
adc
dec
sar
pop
dec
push
aas
cmp
in
inc
(bad)
hlt
outs
xchg
mov
pop
jmp
(bad)
mov
ss
xor
mov
(bad)
mov
push
or
push
sub
jno
test
cs
jge
mov
sub
mov
out
jp
and
aaa
rol
call
push
jmp
inc
push
pushf
cmps
loopne
jbe
mov
xor
fdivr
pop
dec
jnp
aaa
cmp
enter
mov
or
jo
in
dec
jnp
fstp
ss
dec
cmps
out
jno
sub
adc
test
call
and
test
icebp
inc
xchg
(bad)
fsub
jo
mov
dec
xlat
shl
xlat
add
xchg
push
imul
aam
push
(bad)
cmps
scas
mov
inc
popf
test
jae
sahf
jl
mov
sbb
mov
xchg
dec
mov
outs
mov
push
outs
fidivr
out
fild
cmp
rcr
mov
out
mov
adc
sub
rol
iret
or
(bad)
jbe
inc
outs
cdq
cmp
popf
mov
dec
inc
mov
push
retf
push
mov
sub
call
mov
div
arpl
ins
xchg
in
loopne
(bad)
in
mov
inc
mov
xor
add
test
and
extrq
sub
push
std
mov
jle
xchg
ret
or
mov
add
mov
jnp
push
jmp
jge
push
pop
mov
jg
add
(bad)
pop
mov
xor
dec
loope
mov
movs
(bad)
rcl
gs
add
pop
(bad)
or
mov
out
cmp
inc
push
es
xlat
xchg
pop
inc
out
and
add
daa
and
and
mov
into
(bad)
jmp
(bad)
xor
out
dec
in
in
(bad)
jg
lods
dec
fs
pop
mov
inc
(bad)
hlt
sub
adc
pushf
fld
dec
jo
cld
lahf
and
(bad)
add
jns
dec
jb
mov
mov
(bad)
mov
arpl
pop
pop
clc
shl
cmp
mov
data16
out
lds
dec
outs
and
pop
stos
push
shl
xchg
enter
xor
jb
sti
dec
add
fst
and
movs
cli
xor
cli
cmp
or
inc
clc
or
jg
pop
(bad)
rcr
mov
(bad)
loope
sub
dec
and
icebp
fidiv
push
dec
je
xor
pop
xor
add
repnz
or
mov
cdq
pop
int3
loope
shl
sar
xor
aam
jp
and
push
xchg
test
movs
xlat
push
inc
popa
mov
xor
loopne
call
xchg
mov
enter
aas
xor
stos
cmp
xlat
dec
and
jge
stc
aad
xor
enter
cmp
(bad)
or
mov
imul
std
mov
dec
or
jle
out
xchg
pop
dec
fild
lds
sbb
es
das
xlat
adc
jae
dec
pop
or
pushf
cmp
add
test
cmp
and
shl
push
sbb
inc
adc
push
xchg
int
mov
adc
push
sahf
mov
inc
add
xchg
ds
not
xor
pop
mov
and
sub
stos
adc
xchg
test
mov
aad
xchg
dec
nop
pop
xor
int3
loop
adc
push
out
dec
xchg
add
xchg
outs
push
fcom
mul
fs
movs
mov
mov
push
fdiv
push
mul
fcmovnb
scas
inc
lahf
inc
loop
mov
sub
dec
adc
jne
ror
sub
mov
push
scas
push
ins
dec
(bad)
(bad)
pusha
push
js
adc
pusha
mov
ret
call
jo
dec
int3
xchg
std
sti
fldenv
inc
and
(bad)
stos
enter
ins
(bad)
mov
imul
inc
sbb
in
push
cwde
push
jne
outs
cmp
mov
jb
and
mov
out
xchg
lahf
stos
loope
stos
cmc
xor
xchg
xor
mov
jmp
fistp
xchg
fld
cmp
or
or
test
and
stos
sbb
daa
dec
sub
cmc
xchg
inc
add
push
sbb
sub
rcr
in
dec
aad
out
jmp
cwde
adc
sbb
mov
out
stc
jo
mov
fsubr
out
xchg
dec
mov
dec
xlat
(bad)
hlt
add
jmp
xor
sbb
movs
sub
pop
add
bound
loopne
and
ss
sub
sub
pusha
xor
jns
or
jb
icebp
(bad)
ret
pop
retf
pop
into
lock
sar
fcos
jmp
enter
fsubr
xchg
fcomp
repz
mov
into
(bad)
fiadd
mov
dec
popa
adc
inc
arpl
push
mov
adc
lahf
push
jmp
(bad)
mov
adc
dec
sbb
cli
sbb
(bad)
enter
xchg
lahf
add
or
push
pop
sub
xchg
mov
pop
push
and
jle
mov
ficomp
xchg
mov
mov
int3
xchg
or
leave
jne
imul
mov
into
pop
fldenv
lods
int
or
sahf
jmp
rcr
shr
push
mov
and
sbb
ss
add
adc
pop
dec
fs
dec
sti
mov
lock
pop
jbe
ret
xchg
outs
mov
repnz
xchg
pop
jg
pop
pop
imul
scas
test
mov
cdq
gs
mov
retf
xchg
pushf
inc
xchg
adc
leave
rol
popa
xchg
dec
fstp
cmp
stos
add
retf
inc
cmps
std
push
sub
imul
aaa
sar
sbb
gs
(bad)
repnz
fsub
clc
(bad)
lahf
pop
mov
cwde
loop
repz
sahf
(bad)
xchg
mov
loope
ss
test
mov
xor
mov
and
pop
mov
jge
or
or
ror
repz
inc
sbb
jmp
iret
out
scas
add
adc
inc
cmp
stos
ins
sbb
es
pop
dec
(bad)
bnd
xlat
in
jecxz
(bad)
xor
jnp
sar
jo
cmp
jl
scas
jmp
in
xchg
iret
loop
(bad)
xchg
sub
push
jne
repnz
jae
xor
imul
sbb
jne
out
inc
les
sub
adc
adc
movs
cli
cmps
lods
sub
call
inc
stc
out
mov
mov
outs
test
dec
push
es
test
data16
mov
push
mov
(bad)
adc
lds
into
js
arpl
jg
mov
gs
mov
inc
xchg
mov
push
jge
(bad)
push
mov
out
mov
ins
jbe
shl
mov
push
xor
and
js
cmp
loop
or
xor
sar
sub
push
and
mov
out
leave
loope
sbb
xor
cwde
iret
cs
mov
and
ss
cmp
out
(bad)
icebp
cmps
inc
mov
mov
cmc
lods
loopne
arpl
pop
push
add
loope
jl
(bad)
sbb
inc
adc
or
adc
dec
(bad)
pop
inc
add
mov
xor
pushf
outs
inc
push
out
int
sbb
mov
dec
dec
add
(bad)
loopne
fs
int
pop
shr
aaa
inc
aad
sub
xor
iret
cmp
push
retf
pop
xor
data16
jo
mov
push
xor
sbb
in
test
clc
jbe
ror
ja
jg
mov
and
mov
mov
mov
xchg
and
or
push
mov
mov
aas
mov
cmp
retf
(bad)
adc
daa
fsub
retf
xchg
jl
out
fwait
cmps
fcom
(bad)
xchg
movs
cwde
sbb
jecxz
push
pusha
push
dec
ins
inc
dec
push
out
mov
and
aad
lds
mov
jecxz
mov
(bad)
jge
or
(bad)
fldenv
jle
test
xor
sti
xchg
dec
int3
icebp
lods
xchg
pop
inc
dec
xchg
lea
sbb
jmp
repnz
icebp
push
test
faddp
jne
stos
cmp
or
aam
cmp
loope
dec
push
mov
cmp
mov
push
push
adc
push
jmp
(bad)
xor
jp
dec
adc
push
scas
mov
jae
fldenv
sahf
fisub
dec
sub
xchg
pop
cdq
cmps
dec
ficom
push
stc
xchg
jne
adc
jg
mov
cmp
cs
cmp
cdq
mov
cmc
hlt
adc
mov
fs
xchg
mov
stc
cmps
popa
enter
sbb
(bad)
ja
jmp
(bad)
call
cli
daa
xor
cmp
inc
pop
fwait
xchg
sti
les
inc
and
mov
jp
fst
test
cli
and
dec
retf
jnp
arpl
dec
dec
scas
cli
push
je
xor
addr16
cmp
iret
shl
sub
pop
pop
das
fidiv
jmp
cmp
inc
sbb
and
shl
outs
and
fucom
pop
repnz
arpl
push
leave
or
sbb
mov
ret
mov
dec
mov
movs
push
es
(bad)
iret
sub
cdq
sub
cmp
sbb
mov
pop
xchg
bound
add
je
js
xlat
cmp
test
enter
xchg
ret
imul
xchg
rol
inc
lea
out
jb
fcmovu
push
push
pop
pop
fwait
loopne
jb
dec
mov
sub
xor
lock
cmp
mov
pop
add
in
shr
fisub
xor
gs
pop
push
mov
adc
cli
in
jl
aas
popa
fdivr
mov
mov
(bad)
and
sti
xor
add
jmp
jnp
cmp
pop
call
(bad)
(bad)
and
outs
je
(bad)
out
(bad)
popf
imul
repz
mov
mov
popa
xor
shr
pushf
push
fisubr
(bad)
jl
xchg
push
mov
add
cmp
js
rol
mov
cmp
rcr
mov
or
jbe
packssdw
inc
call
xor
cmp
pop
mov
cmps
fldenv
dec
xchg
ss
js
sub
in
enter
fld
mov
mov
mov
mov
loop
push
mov
shl
ss
(bad)
xchg
jae
dec
dec
call
idiv
popf
sahf
das
dec
fs
cwde
mov
inc
xor
xor
mov
sbb
lods
pop
pop
rcl
mov
aad
lea
cmp
push
mov
nop
ror
(bad)
imul
pushf
scas
rol
lods
div
mov
adc
lahf
pop
leave
aam
(bad)
icebp
clc
or
xor
xor
and
(bad)
jb
sub
ret
or
push
mov
(bad)
ds
shl
xlat
sbb
lea
inc
push
pushf
dec
fucomi
das
fsub
mov
aaa
cmp
(bad)
call
jno
adc
mov
je
jbe
leave
add
call
cmp
cld
setl
mov
xchg
mov
fstp
hlt
pop
or
xor
push
sub
(bad)
stos
movs
pop
pushf
ins
push
lods
test
leave
cli
popf
lock
movs
push
cmps
jbe
rcl
stos
jecxz
cmp
fwait
lods
or
mov
aam
in
pushf
pop
fwait
int
and
nop
fcom
xor
in
pusha
(bad)
jp
add
cmp
xchg
sub
bnd
ret
outs
stos
add
xor
cmps
and
push
mov
cmp
pop
out
lods
pop
mov
mov
rcr
adc
outs
in
scas
movs
dec
jl
mov
movs
inc
(bad)
jo
push
fcomp
or
xchg
cmp
inc
fistp
xor
ja
sub
and
sbb
stos
call
lods
aad
sub
in
cmp
pop
repz
jle
outs
push
repz
stos
mov
pmulhuw
enter
push
ja
mov
jmp
repz
stos
mov
ins
or
test
fnstcw
cmps
aad
iret
cmp
sub
cmc
inc
xchg
int3
outs
addr16
inc
add
es
iret
cmps
lds
sar
jl
mov
ja
and
ins
or
push
fadd
inc
test
mov
outs
push
aad
test
sti
sbb
aam
pushw
hlt
mov
clc
push
mov
mov
xor
sbb
rol
xchg
add
(bad)
shr
aas
stc
cmp
add
fcom
retf
jg
bound
test
movs
js
test
cmp
aam
lds
cmp
sub
sbb
mov
jb
xor
retf
pop
ins
push
mov
adc
repz
xchg
ins
pusha
ins
movs
fnstcw
fadd
ret
mov
fistp
and
test
pop
repz
lahf
popa
sbb
adc
sbb
adc
mov
repnz
outs
adc
out
cmp
imul
dec
or
jo
cmp
mov
hlt
test
sbb
adc
push
pop
dec
inc
jo
inc
mul
inc
(bad)
pop
cld
lods
mov
(bad)
xchg
push
push
push
mov
cli
call
push
xor
xchg
jg
in
(bad)
mov
jbe
push
rcr
dec
fistp
dec
outs
adc
dec
repz
or
or
imul
ret
es
icebp
outs
sub
push
pop
mov
mov
lea
and
sbb
aam
jae
push
mov
pop
cmp
enter
push
shl
fnsave
push
js
mov
inc
out
dec
ror
mov
push
bound
cmp
mov
fistp
bound
dec
out
test
daa
mov
sbb
sub
mov
call
js
out
sub
xor
daa
clc
dec
pop
xchg
pcmpgtd
inc
inc
cli
ja
loopne
xor
jge
pop
mov
std
loope
push
inc
mov
xchg
lds
test
push
ja
mov
rcr
pop
cmp
xchg
cwde
sub
sub
xchg
fiadd
daa
add
fild
mov
push
inc
ss
mov
adc
out
inc
hlt
enter
sbb
stos
xlat
enter
popa
or
fidiv
push
int
dec
xor
mov
or
mov
fadd
push
or
retf
xlat
push
mov
dec
ffreep
pusha
xor
sbb
push
(bad)
faddp
ins
jl
lods
gs
rol
scas
pop
mov
mov
pop
ret
xor
fcom
sub
pop
sbb
xor
dec
or
das
test
xchg
pop
xor
dec
push
rcl
stos
sbb
cpuid
mov
cdq
sahf
mov
xchg
ins
push
jae
out
fcomp
xor
clc
push
mov
xor
pop
sbb
fcomp
dec
and
sbb
mov
cmp
pop
push
mov
pop
lds
rol
push
cmc
cmp
sbb
push
pushf
push
loop
push
adc
mov
es
icebp
pusha
je
and
sti
pop
out
js
popf
xchg
jno
leave
xchg
mov
ins
mov
xor
loope
cwde
pushf
mov
js
imul
push
pop
movs
mov
or
mov
clc
pop
xchg
lods
int3
jmp
sahf
or
xor
(bad)
iret
fistp
scas
out
cmp
mov
push
mov
ins
mov
push
in
and
mov
test
int3
pop
scas
stos
mov
sub
cld
aam
mov
test
mov
fadd
(bad)
mov
ja
js
rol
neg
push
int3
sbb
call
mov
(bad)
xor
test
(bad)
aam
sub
js
push
mov
dec
mov
fst
mov
jnp
xlat
(bad)
idiv
adc
xchg
xor
or
push
mov
scas
sub
shl
pop
or
dec
sub
loopne
xor
out
int
dec
(bad)
aaa
stos
add
aam
iret
adc
rcl
test
xor
jno
push
and
dec
push
pusha
mov
frstpm(287
mov
(bad)
xor
inc
shr
stc
pop
int
lods
mov
mov
mov
xchg
sti
jne
jno
lock
repz
dec
pop
jg
stos
dec
dec
rcl
and
loope
and
test
ret
pusha
push
xchg
dec
shl
sub
div
push
xor
rcl
addr16
or
and
push
(bad)
push
cmovno
mov
jmp
(bad)
into
imul
mov
sahf
js
inc
fstp
std
cmp
xor
and
cmp
jo
add
sbb
ins
lahf
cmp
stos
dec
mov
mov
sub
cmps
dec
outs
mov
nop
fcomi
jnp
sbb
js
jp
jg
mov
in
out
xchg
sbb
ins
loopne
scas
jb
in
mov
xchg
dec
ins
retf
lods
adc
jmp
mov
mov
xchg
mov
into
mov
mov
jmp
outs
fisub
xchg
loope
push
std
cmps
cli
pslld
test
mov
sub
(bad)
in
xchg
test
xchg
stos
xchg
cmp
xchg
daa
imul
popf
pop
hlt
leave
sub
jnp
dec
arpl
push
popf
fwait
jo
test
mov
cmps
mov
shl
inc
adc
inc
inc
(bad)
sti
mov
mov
mov
or
pop
jnp
dec
call
cmc
xlat
outs
sbb
in
sub
inc
es
fs
ss
cmp
inc
push
xchg
push
mov
je
push
das
int
dec
stc
push
vpshuflw
mov
xor
push
mov
sbb
dec
neg
cmc
cmp
jmp
and
cmp
movs
xor
mov
in
outs
xchg
lahf
iret
push
movs
mov
and
adc
pop
call
push
stos
push
jmp
adc
stos
daa
es
icebp
scas
push
pop
add
xchg
repz
push
dec
pop
cmps
cmps
mov
and
add
test
or
fcmovnbe
into
xor
dec
out
ret
loop
(bad)
add
cdq
push
push
mov
xchg
mov
pop
cld
jl
xchg
dec
mov
jge
stc
out
mov
arpl
arpl
xchg
mov
xor
xor
test
mov
imul
mov
arpl
pop
outs
sbb
movs
mov
adc
add
fbstp
dec
je
or
cmp
lahf
jge
pop
xchg
mov
(bad)
and
add
add
sub
mov
sub
sbb
ret
inc
mov
ins
jecxz
pop
push
call
sub
loope
std
add
mov
adc
sub
push
stc
cmp
mov
xor
xchg
pop
sbb
idiv
dec
sbb
mov
loop
dec
pop
icebp
push
popa
adc
xchg
(bad)
lods
xor
popa
add
out
lods
aam
sub
dec
xor
jle
clc
and
imul
pop
pop
dec
xor
mov
mov
cmps
js
push
inc
mov
cmp
push
mov
aam
ret
inc
adc
stos
xchg
pop
in
ins
jae
and
and
mov
pop
mov
fdivr
(bad)
rcr
cmp
sub
inc
stos
in
xchg
addr16
shl
aad
hlt
xor
imul
pushf
nop
add
bound
movs
mov
test
adc
shl
dec
sub
sub
imul
jle
cmps
hlt
in
retf
pop
inc
xor
out
jmp
lahf
je
jne
popf
stos
cld
sahf
cmps
sar
js
sub
xor
or
push
jle
mov
out
scas
(bad)
sub
das
pop
rdmsr
add
xor
mov
bound
cmps
ss
ins
sbb
adc
in
hlt
adc
pop
jmp
retf
fs
(bad)
mov
sub
int3
sub
mov
out
jg
or
ficomp
iret
in
in
cmp
pop
sub
(bad)
pop
sbb
xchg
cmp
jmp
mov
inc
cmp
adc
rcr
out
push
loopne
scas
push
pop
loope
xlat
sahf
dec
loopne
jnp
imul
and
setnp
shl
out
sbb
pushw
je
scas
mov
mov
push
jle
add
mov
js
clc
adc
lods
mov
in
loop
movs
sbb
js
loope
vpshaq
popa
mov
stc
mov
gs
aas
jns
adc
enter
mov
jno
lds
inc
retf
pusha
add
mov
iret
pushf
loope
sahf
rol
out
inc
mov
les
xor
mov
movs
mov
mov
(bad)
sar
sub
push
jae
mov
xchg
adc
adc
jne
sbb
pop
sub
jnp
(bad)
outs
sbb
ror
bound
movs
jo
adc
adc
inc
out
xchg
and
inc
pop
movs
sub
call
fst
rcl
pop
xchg
cmps
mov
cmp
mov
ins
retf
imul
cmc
test
sub
movs
gs
(bad)
aas
adc
bound
fs
test
sub
test
daa
fld
push
clc
jb
nop
or
xor
pushf
out
psrlw
sbb
jge
je
cld
cmps
sti
mov
xlat
nop
imul
adc
mov
pop
(bad)
(bad)
or
(bad)
dec
idiv
stc
jge
xor
int3
and
mov
std
sub
pop
fdiv
in
mov
fdivr
adc
cwde
mov
inc
mov
xchg
ret
repz
xlat
in
fistp
add
and
call
inc
add
(bad)
inc
(bad)
loop
mov
add
outs
daa
jno
int
pop
call
inc
repnz
or
pop
dec
cmc
sub
mov
push
mov
mov
adc
outs
std
cmp
mov
jne
retf
inc
lahf
rol
cmp
adc
bound
cli
je
adc
cwde
dec
xor
sub
push
stc
and
xor
mov
outs
mov
out
sahf
cmps
xor
jae
dec
lock
idiv
mov
sbb
cmp
mov
lods
xchg
and
das
mov
mov
mov
retf
xchg
jge
je
rcl
inc
xchg
inc
repnz
cs
inc
pop
outs
data16
repnz
mov
adc
mov
adc
xchg
sbb
jo
push
loope
fnstcw
popf
call
mov
sub
sub
dec
movs
dec
mov
and
test
cmp
pop
xchg
or
adc
ins
jge
in
jge
xor
sbb
dec
inc
fstp
sbb
mov
pop
mov
cs
push
fcmovne
mov
adc
pop
mov
and
pop
mov
pop
xchg
mov
push
pop
cs
mov
dec
jns
adc
inc
ror
xchg
xlat
prefetch
pop
xor
sub
enter
adc
ins
pop
scas
dec
mov
sbb
test
xchg
fcom
mov
sbb
les
inc
xchg
dec
or
aaa
inc
adc
call
into
mov
xor
cld
xchg
push
aas
jns
out
xor
retf
fisubr
call
dec
aas
popf
int
inc
scas
xchg
mov
lds
and
(bad)
xor
das
pushf
das
sbb
cwde
push
loop
dec
call
pop
mov
dec
in
inc
sub
imul
push
hlt
push
js
lea
and
cmps
add
pusha
sbb
push
sar
or
add
push
ins
das
add
cmps
and
adc
in
das
lahf
cwde
or
jg
imul
shl
inc
fisub
adc
fisttp
jae
inc
mov
shr
xchg
sar
cmp
and
xor
fldcw
xor
outs
mov
js
jge
inc
sub
jnp
(bad)
dec
into
dec
or
cmc
lods
push
sub
xor
ror
mov
pop
jmp
or
mov
leave
iret
outs
iret
push
fldenv
add
test
inc
mov
sti
push
xchg
aad
outs
xor
mov
cmps
test
movs
int3
dec
mov
adc
dec
mov
and
sbb
leave
movs
aaa
xor
pop
aad
mov
mov
mov
push
jno
sub
rol
fistp
push
into
dec
not
fld
sub
imul
dec
cmps
cmp
stc
mov
js
in
push
mov
dec
xor
jns
aaa
push
jns
clc
mov
pop
cmp
cmp
ror
mov
cmps
mov
jmp
and
adc
and
or
push
jne
cmps
cmp
dec
les
ror
loop
xchg
xor
push
hlt
(bad)
mov
jne
xor
cs
or
dec
aad
addr16
int
xchg
xor
xchg
iret
ins
and
aaa
imul
sbb
and
mov
mov
push
pop
cmc
fnstenv
xchg
pop
mov
or
in
hlt
sub
bnd
sub
jns
push
push
mov
cs
cmp
dec
out
popf
pop
aas
std
cmp
lods
jg
test
xchg
daa
push
aam
and
mov
or
xor
ret
adc
ins
mov
push
xchg
lods
cmp
leave
pop
jbe
and
xchg
and
lods
cwde
mov
in
xlat
cmps
mov
in
adc
push
mov
clc
int3
xlat
add
loopne
fsub
mov
aad
imul
icebp
outs
in
adc
sbb
ja
fst
iret
sub
push
nop
hlt
and
xlat
push
mov
jnp
fs
or
movs
stos
sub
pop
pop
clc
mov
outs
fidivr
push
add
xchg
pop
jb
xlat
mov
dec
mov
sub
push
test
imul
pop
push
and
lods
bound
das
(bad)
jp
stos
int3
stos
in
fistp
sbb
popa
cld
pop
sbb
push
push
pop
dec
ins
cs
leave
xor
jl
ins
(bad)
xor
pushf
shl
(bad)
call
cmc
xchg
and
test
mov
add
xchg
out
push
stc
jl
fcomp
xor
call
scas
xchg
sbb
mov
dec
shl
(bad)
ins
repnz
cmp
and
fucomi
test
pushf
scas
(bad)
(bad)
(bad)
xor
std
inc
jns
loop
lahf
lock
repnz
cmps
sar
in
push
mov
mov
inc
enter
or
and
lds
push
mov
mov
into
mov
sub
popa
mov
adc
test
bound
xlat
pop
fsub
es
push
fisttp
mov
fbld
sbb
sub
pop
test
mov
cmp
mov
es
daa
jo
clc
jp
sbb
daa
stos
cld
stc
cs
mov
mov
xchg
sbb
jns
sbb
sub
ret
dec
cmc
fst
ret
xchg
in
pop
imul
ret
mov
dec
pop
pop
bound
sub
outs
std
mov
scas
stc
sub
loopne
nop
cld
sub
inc
js
test
xchg
push
ss
jl
xchg
push
sbb
add
bound
stos
cmps
fild
loop
fldenv
movs
int3
inc
pop
cmp
jg
mov
dec
and
sub
or
push
sub
out
cwde
in
dec
aaa
jecxz
in
inc
sub
sbb
(bad)
jecxz
or
scas
dec
rcr
ins
push
fcmovbe
sti
lock
scas
(bad)
fdiv
xor
aaa
ins
fwait
cwde
cmovp
(bad)
fimul
aas
adc
xor
rcl
out
cmp
cmp
cwde
dec
jbe
lds
cmp
jp
pop
mov
sbb
sbb
sbb
(bad)
xchg
jle
pop
(bad)
xor
ins
out
jle
fimul
sbb
sub
gs
sub
and
leave
shl
mov
aad
push
jb
rcr
aad
pop
leave
fs
inc
adc
xor
adc
call
push
and
mov
fisttp
inc
and
dec
lahf
and
jbe
scas
ins
jle
mov
ja
and
push
stc
jmp
mov
xchg
jo
mov
push
mov
jecxz
int
add
dec
cmp
outs
int3
mov
js
add
adc
pop
or
stos
ret
add
xlat
jae
ret
(bad)
jne
pusha
out
std
mov
xchg
jae
cmp
ds
push
pushf
jmp
outs
push
test
xchg
sub
jae
sti
stos
shr
jae
xchg
clc
push
jno
arpl
and
dec
push
aad
pop
xor
es
repz
mov
mul
outs
lods
ja
cmp
gs
aaa
dec
dec
sbb
loop
es
cmp
clc
add
jl
mov
pop
inc
or
xchg
inc
test
(bad)
nop
mov
hlt
cs
push
xor
aam
jg
ds
(bad)
jb
dec
in
xor
fwait
sub
xchg
loope
scas
js
jmp
or
mov
cli
sahf
xchg
inc
sub
mov
pop
inc
stos
(bad)
repnz
out
fwait
add
cld
bound
mov
pop
(bad)
push
mov
dec
adc
mov
push
repz
test
mov
cmp
cs
sbb
add
jg
inc
jnp
jbe
push
mov
call
xor
popf
jl
daa
enter
xchg
mov
sub
cmc
not
outs
mov
or
jno
test
xor
xor
in
ror
jle
std
adc
add
jle
mov
jae
sbb
jns
int3
(bad)
popf
xchg
bound
ins
mov
jne
xor
sahf
or
inc
jnp
sbb
xor
leave
loop
fiadd
sbb
iret
push
(bad)
in
les
sub
fadd
(bad)
popa
xchg
loop
xchg
dec
mov
push
and
push
shl
adc
fidivr
jnp
dec
loop
cmp
dec
mov
mov
icebp
pop
loopne
retf
je
(bad)
sahf
loop
movs
xchg
cmp
cmp
lock
jmp
push
xchg
cmps
retf
adc
lods
fisttp
ret
shl
jge
xor
out
inc
retf
and
adc
push
add
fidiv
add
adc
sbb
frstor
dec
fwait
add
push
push
out
rol
mov
jecxz
(bad)
xor
clc
in
out
jnp
sbb
pop
int3
adc
lods
lds
jmp
xchg
mov
sub
sti
int
cmps
sbb
ins
sbb
imul
mov
gs
stos
jle
ja
ds
fwait
xor
jge
aas
jne
and
jecxz
jo
(bad)
iret
lea
pop
mov
push
cmps
leave
sbb
fild
retf
xor
inc
pushf
shl
mov
push
and
je
loope
sbb
sub
push
cmp
or
sub
stos
cmp
fild
lea
out
fs
cmp
mov
aam
loope
repnz
jge
fldenv
repnz
rcr
xchg
cld
mov
ds
xadd
add
push
jnp
xor
or
cmp
dec
repz
lahf
rcr
dec
inc
std
mov
push
adc
movs
movs
push
fdivr
push
jmp
outs
loope
int
pop
pop
and
stos
xor
add
sub
movs
out
adc
mov
lods
cmps
loop
xchg
or
repz
test
imul
mov
stos
mov
cmps
ret
jae
pop
jg
scas
aad
jp
movs
pop
mov
imul
inc
jbe
sub
sahf
adc
push
icebp
dec
outs
int3
mov
or
adc
fisttp
test
test
popa
pop
sar
pop
rcl
ins
stos
and
adc
sahf
mov
aam
int
ds
push
inc
int
fiadd
in
in
fwait
mov
ret
imul
in
sub
jge
(bad)
xchg
ret
cmp
les
push
loope
aaa
xchg
sbb
dec
cs
out
scas
mov
and
cmps
push
pushf
and
pop
outs
push
jmp
mov
in
mov
inc
jge
adc
out
repnz
dec
push
pop
xor
inc
cmps
das
outs
scas
dec
frstor
loope
and
stos
dec
push
iret
pop
cmp
sub
aaa
in
les
xchg
dec
retf
das
jl
in
outs
mov
imul
or
inc
sbb
mov
push
enter
aaa
push
loope
or
outs
bound
jne
in
push
sbb
loopne
inc
int3
xchg
jmp
adc
or
add
stos
inc
xchg
jle
ds
test
xchg
mov
jb
sub
and
(bad)
xchg
hlt
test
mov
jb
or
and
sbb
sbb
out
mov
lea
xor
xor
jno
addr16
fmul
mov
adc
fadd
mov
jecxz
push
and
fnsave
loop
add
push
fistp
vmread
loopne
jmp
fild
arpl
xchg
popa
ret
add
and
movs
inc
and
mov
je
push
(bad)
jmp
jge
enter
clc
jp
leave
scas
xor
call
or
paddusb
call
jns
hlt
pop
ficomp
jge
add
jg
add
xchg
int
stos
es
cmp
and
fcmove
sub
movs
mov
call
jp
les
cli
jp
pop
mov
fmul
fdiv
sbb
and
repz
dec
xor
push
ficomp
mov
enter
push
jp
repz
shl
addr16
cmp
fdiv
and
out
jnp
repnz
fs
retf
imul
fucomi
stos
adc
rcr
retf
mov
fstp
test
cmps
sbb
outs
pop
push
aam
mov
mov
add
retfw
fwait
outs
xchg
aad
jl
int3
lahf
lahf
push
ins
fld
and
xchg
idiv
arpl
inc
dec
repz
js
iret
lods
mov
mov
push
or
mov
xchg
loope
dec
dec
cmps
fwait
sub
adc
inc
pop
jns
jae
jl
jb
enter
cdq
pop
jp
jle
jmp
cmp
sbb
and
retf
sti
std
daa
mov
loopne
mov
xchg
leave
inc
shl
mov
outs
mov
lods
aam
shl
inc
call
loop
loopne
in
cmp
int
mov
loop
es
sub
gs
aad
push
xchg
cmc
pop
pop
ja
pop
pop
shr
into
mov
sbb
arpl
and
sahf
dec
popf
inc
fimul
adc
xchg
jg
mov
sbb
iret
cld
xchg
sub
pop
mov
rol
loope
inc
sar
sbb
pop
pop
mov
fist
cmps
add
lods
test
ret
add
ja
out
test
sbb
and
stos
mov
mov
mov
lea
xchg
adc
push
or
ins
scas
jae
cdq
popa
add
(bad)
push
inc
and
sbb
or
dec
loope
movs
mov
in
adc
cld
add
push
mov
inc
stos
outs
mov
push
jle
aad
xchg
gs
xchg
repnz
dec
and
or
fsubr
sub
sub
ret
int
sbb
hlt
movs
push
add
data16
pop
jge
(bad)
popf
ins
mov
pmaxub
mov
xor
inc
xchg
pop
jmp
(bad)
jl
jno
mov
sbb
loop
add
aaa
add
out
inc
jecxz
jae
(bad)
jno
jo
jmp
xchg
repnz
int
jecxz
push
fcomip
mov
inc
dec
xor
adc
or
jno
sub
mov
(bad)
popa
scas
adc
fwait
icebp
jg
or
dec
gs
push
stc
jb
aam
call
(bad)
pop
dec
sbb
outs
test
pop
cli
loope
mov
idiv
outs
fisttp
arpl
mov
ins
gs
call
shl
sub
xchg
dec
clc
(bad)
mov
jecxz
mov
and
jle
std
cmp
pop
jmp
lock
mov
das
jns
push
pop
icebp
les
push
cmc
xchg
push
xchg
iret
out
xor
leave
inc
cmp
jmp
xchg
jp
stos
adc
icebp
ja
stc
mov
daa
push
loop
arpl
retf
xor
imul
aas
repz
xor
mov
or
push
mov
mov
mov
adc
push
sbb
jge
mov
mov
btc
or
in
add
stc
sbb
ja
jmp
ret
icebp
dec
mov
mov
mov
mov
lods
ja
pop
mul
js
inc
lods
inc
mov
dec
fist
jb
aam
push
ud1
out
aas
jns
inc
imul
mov
fs
mov
iret
sub
loope
mov
pop
mov
mov
xchg
jmp
pop
ja
or
xlat
push
jbe
inc
sub
pop
arpl
js
sub
cpuid
dec
xor
ja
lods
int3
sti
or
lods
loop
dec
push
sub
cmp
and
push
push
jmp
lods
leave
(bad)
cmp
cmps
or
in
imul
bound
push
push
sub
jae
xor
cld
fmul
es
enter
stos
xchg
(bad)
int
xchg
bound
(bad)
imul
inc
inc
cmp
mov
int
je
jno
popa
(bad)
js
outs
out
mov
rol
lods
repnz
adc
mov
mov
jg
mov
out
cmp
inc
push
dec
(bad)
imul
sub
sub
sahf
sub
lods
ret
into
push
in
pop
jg
in
add
mov
scas
popf
inc
push
pop
js
or
popa
pusha
mov
xchg
arpl
cmp
jmp
sbb
in
int
ja
mov
pop
arpl
pop
xchg
retf
pop
inc
adc
mov
stos
pop
or
mov
cmp
or
add
pop
sbb
or
mov
mov
ss
sub
mov
push
or
adc
mov
sbb
fs
mov
adc
dec
or
adc
dec
adc
add
xchg
push
xlat
(bad)
sbb
xchg
into
out
ror
inc
xor
fld
cmp
jnp
shl
jnp
fisubr
les
sbb
jno
rol
int3
pop
xchg
xor
ficomp
pop
adc
int
jecxz
shl
dec
in
jl
lsl
out
cmp
sub
add
scas
add
imul
xchg
sub
loope
out
fcomp
xchg
sbb
(bad)
jg
nop
fdiv
imul
xchg
lea
(bad)
cdq
sbb
dec
push
hlt
push
cmpps
aas
push
adc
xor
xor
(bad)
pushf
shr
push
in
xchg
xor
data16
dec
stos
xchg
xchg
daa
dec
push
sti
mov
int
test
daa
xor
mov
and
shl
sub
add
scas
jbe
repnz
sbb
mov
imul
jge
cld
div
cmp
movs
cs
fiadd
adc
aam
and
fist
mov
mov
pop
fcmovnbe
xor
xor
nop
xlat
rcr
add
adc
ficom
xor
add
lods
adc
and
jecxz
pop
mov
call
and
fcom
inc
adc
push
push
or
and
mov
cmp
clc
data16
hlt
les
push
mov
xor
adc
push
mov
stc
lock
test
out
fnstsw
scas
ins
loopne
mov
mov
lods
aaa
arpl
out
push
pop
repnz
xchg
call
fidivr
pop
jb
cdq
mov
loopne
pop
adc
popa
clc
inc
adc
cli
iret
in
call
or
push
mov
inc
cmps
pop
imul
add
gs
sub
repnz
sub
adc
inc
sub
inc
pop
jae
out
xor
hlt
jecxz
lods
sbb
xor
xor
(bad)
sbb
or
(bad)
outs
inc
ficom
loopne
add
sbb
mov
sbb
jmp
cmps
fiadd
retf
xchg
fnsave
or
inc
dec
in
rcl
jle
mov
pop
cwde
addr16
add
lods
cli
mov
dec
push
pop
imul
ucomiss
pushf
mov
lock
aam
mov
hlt
in
aaa
jecxz
test
mov
push
adc
add
or
sub
pop
inc
push
jo
pop
or
sbb
add
jmp
int
and
sbb
cwde
sub
dec
or
fwait
btc
outs
data16
mov
and
mov
ins
aas
(bad)
sub
jae
sar
mov
pop
bound
jmp
xchg
or
mov
cmp
cwde
lods
xchg
adc
scas
lea
stos
mov
imul
mov
push
outs
mov
mov
dec
hlt
or
test
in
sub
cwde
mov
xor
mov
xor
lea
add
lods
jo
pop
out
outs
mov
inc
leave
pop
gs
shl
mov
adc
xchg
int
ins
outs
and
pusha
dec
ins
cmp
pop
std
push
je
pop
fcomp
cwde
adc
add
lock
std
and
push
pusha
pop
mov
and
xor
push
dec
sar
inc
cmp
inc
fnstenv
pop
xlat
rol
dec
jne
dec
mov
sub
popa
push
jl
xor
jns
cli
mov
into
push
pop
in
iret
call
jmp
mov
fcomip
adc
adc
and
sub
aam
rcl
or
lea
(bad)
je
inc
and
imul
(bad)
jne
leave
ins
int
add
test
in
jle
jbe
push
nop
sbb
fnstsw
jp
stos
mov
inc
dec
xchg
mov
cli
add
not
sbb
stos
lds
mov
aaa
adc
cmp
scas
(bad)
movs
jbe
and
cs
loopne
das
out
jb
jecxz
hlt
icebp
mov
loopne
bound
inc
sbb
aam
outs
adc
retf
jbe
mov
push
jg
pop
inc
sbb
outs
xchg
add
pushf
push
xchg
mov
test
fst
mov
(bad)
and
loop
sub
aam
push
xor
rep
iret
rcr
fstp
add
fsubr
sub
sbb
or
in
jnp
xor
adc
test
test
movs
fs
dec
or
lods
sysenter
fistp
in
stos
stos
mov
pop
xor
retf
sbb
mov
sbb
add
lds
mov
jle
ins
pushf
mov
(bad)
jmp
(bad)
shr
shr
pop
out
sub
fadd
arpl
cmp
shr
push
stc
sub
mov
xor
cmp
mov
and
inc
outs
daa
dec
add
xchg
mov
ins
cmp
xchg
test
add
add
or
loopne
out
xchg
lds
fcomp
(bad)
arpl
retf
pop
out
loop
sbb
jbe
mov
xor
pushf
movs
clc
push
in
pop
imul
pop
movs
xchg
mov
pop
pop
and
mov
dec
hlt
fidiv
cmp
dec
inc
sub
cmp
scas
sbb
dec
or
sub
inc
cmp
mov
sbb
test
loop
xchg
cmps
sub
popa
aad
icebp
adc
inc
adc
out
mov
push
and
add
leave
sbb
cmps
xor
push
rol
movs
fdivr
ins
cmc
pushf
dec
sbb
lahf
lods
adc
mov
movs
and
jo
mov
jo
xchg
mov
fidivr
test
dec
xchg
jb
in
jno
add
jmp
or
jne
(bad)
cmc
lods
mov
dec
(bad)
loop
bound
cmp
mov
pop
aas
adc
or
inc
or
jmp
push
add
pop
cmp
sbb
hlt
call
or
js
(bad)
shr
jmp
int
out
xor
add
mov
mov
addr16
stos
imul
aam
pop
test
pusha
jne
ret
es
dec
xchg
push
pop
jo
sbb
aas
xchg
iret
or
fs
fdiv
pop
push
dec
stos
pop
sub
sbb
movs
lahf
jl
pop
xor
imul
sub
or
addr16
jns
cmp
dec
dec
fs
dec
rcl
sub
stc
mov
lahf
es
rol
fild
cmp
cmp
enter
mov
(bad)
mov
sub
daa
push
push
jne
test
mov
cmp
mov
mov
rol
sbb
cmp
shl
mov
repnz
sbb
test
xchg
xor
jge
daa
stc
jns
and
pop
xchg
ja
dec
xchg
mov
sahf
outs
ret
repnz
loopne
pop
nop
aad
add
into
outs
repz
xchg
cs
out
shl
imul
xchg
jnp
sub
addr16
xor
mov
mov
test
jns
pop
cwde
test
mov
push
xor
retf
pop
adc
fbld
inc
sub
mov
out
scas
cmp
sbb
or
add
and
pop
nop
pop
push
es
xchg
cmp
sti
(bad)
mov
mov
(bad)
sbb
xchg
repz
cmp
push
push
dec
cmp
out
mov
pop
sbb
mov
adc
and
mov
int
into
scas
and
fld
add
shl
cmps
pop
inc
enter
pop
neg
out
push
(bad)
loopne
and
fdivr
push
push
sbb
fistp
ror
fmul
or
push
mov
retf
push
xchg
sub
retf
sub
xor
stos
jle
fcom
rdmsr
mov
mov
sbb
movs
inc
test
cwde
mov
hlt
(bad)
xchg
int
xchg
cdq
inc
mov
sbb
rcl
cwde
inc
ja
or
sub
add
shr
mov
out
sub
aas
cs
jge
push
xor
jbe
inc
mov
and
out
loopne
ret
adc
sub
es
cwde
jecxz
xor
daa
cmp
cmp
scas
icebp
int
les
lahf
mov
outs
in
cld
enter
(bad)
icebp
mov
mov
iret
(bad)
pop
dec
push
in
sar
(bad)
les
sbb
add
std
or
xchg
popa
in
fist
sahf
xor
adc
sub
into
push
push
mov
cmp
or
inc
es
mov
jae
add
xchg
mov
xor
pop
imul
icebp
push
pushf
adc
dec
pop
test
mov
xor
add
lahf
sub
lods
(bad)
pop
(bad)
mov
jae
int
icebp
aad
push
and
push
inc
jecxz
shl
in
dec
pop
or
push
push
movs
out
dec
dec
jmp
xlat
outs
xchg
dec
jmp
test
mov
es
dec
shl
int3
jne
(bad)
jmp
push
enter
add
and
or
jno
sub
push
in
adc
pop
add
inc
les
enter
sbb
sub
in
mov
cmp
xor
in
inc
jmp
sbb
int3
mov
xchg
ss
and
test
xchg
std
ins
jmp
adc
fst
pop
push
mov
js
fist
cmp
and
cmp
jmp
adc
call
imul
aad
adc
push
push
add
push
xor
xor
xor
cmp
stos
je
jb
in
fdivr
std
mov
fdiv
adc
dec
sbb
in
fist
push
(bad)
xchg
outs
inc
or
push
and
mov
(bad)
xor
out
jae
jmp
push
test
cdq
ins
mov
mov
imul
sbb
sbb
push
ret
(bad)
outs
xchg
adc
mov
inc
movs
mov
js
fsub
aaa
(bad)
cmp
outs
push
js
mov
ds
sbb
retf
adc
inc
pop
sbb
add
mov
loope
xchg
(bad)
push
cmp
jnp
retf
(bad)
outs
or
mov
jno
adc
add
mov
and
mov
cmc
xchg
shl
or
bound
sub
dec
cs
sbb
(bad)
push
nop
pop
mov
fsub
mov
(bad)
loopne
(bad)
cmp
and
push
sar
cwde
(bad)
jl
or
pop
mov
(bad)
pop
cmps
push
(bad)
jmp
push
xor
lods
xor
sbb
push
test
fild
adc
sbb
xchg
(bad)
data16
leave
rcr
mov
aas
stos
sub
dec
xchg
jb
inc
cmp
loopne
into
sub
es
or
sbb
lahf
fucomip
pop
sti
xor
clc
inc
ss
imul
out
ss
repnz
and
call
mov
sahf
ja
and
ror
jo
xor
dec
xchg
pop
push
dec
repnz
inc
push
cmps
cmc
sbb
loopne
jg
sahf
addr16
sbb
pop
ins
add
int3
xor
jnp
mov
dec
mov
push
mov
stos
fnstsw
popa
push
push
fwait
push
xor
cli
or
adc
push
scas
sub
xchg
sub
retf
cmp
into
arpl
int3
sub
icebp
lods
shl
xor
fs
gs
inc
sub
mov
mov
pop
imul
cmp
cld
xor
jmp
movs
fnstcw
pop
xor
scas
or
lock
call
pop
xlat
adc
mov
retf
sbb
add
and
scas
and
dec
push
push
xor
jne
in
test
(bad)
mov
(bad)
in
shr
jno
mov
dec
sub
ret
repnz
ds
push
or
out
cmp
shl
cmp
push
popa
or
test
sub
and
push
out
push
ins
jno
xchg
and
pop
sub
idiv
mov
shl
jbe
xchg
sub
cdq
lods
mov
dec
cmps
pushf
test
daa
mov
adc
adc
xchg
sbb
or
xlat
adc
mov
test
push
adc
xchg
stmxcsr
push
daa
xchg
inc
sub
(bad)
fisubr
(bad)
cmps
popf
cmp
sbb
call
jle
ja
gs
mov
and
inc
mov
push
ror
stos
adc
and
push
test
sbb
out
maxps
jns
leave
sti
imul
mov
inc
ret
stc
add
jne
pop
dec
mov
and
fisub
sahf
and
jno
cvtdq2ps
sbb
aaa
pop
das
in
fs
ret
enter
icebp
cmps
sti
(bad)
jmp
sub
pop
cs
sbb
sbb
pop
inc
mov
adc
push
mov
sub
gs
jmp
mov
test
push
int
das
in
add
je
neg
xor
jae
sahf
pop
popa
jecxz
jno
and
xor
jb
shl
shl
call
(bad)
cmp
mul
inc
movs
push
push
in
outs
xchg
dec
ds
xor
lds
and
fsub
mov
es
push
scas
ds
xor
adc
fidivr
loope
adc
sti
(bad)
out
cmp
or
test
xchg
(bad)
ds
fdiv
xchg
add
push
mov
mov
mov
xchg
movs
push
out
mov
arpl
pop
in
in
jmp
aad
push
and
shl
sbb
out
ja
adc
adc
jbe
mov
mov
js
push
int
cld
xor
xchg
pop
mov
into
sti
sub
cmps
cmp
or
bound
fimul
test
loopne
adc
ret
ja
and
mov
mov
dec
or
sar
in
push
lods
jecxz
mov
int
test
rcl
pop
xlat
xchg
mov
sub
hlt
(bad)
mov
sub
jbe
fxch
pop
adc
outs
push
mov
loope
mov
xor
call
cmp
pop
mov
scas
inc
ror
xor
and
fwait
lods
aam
jo
sahf
mov
std
shl
jle
push
mov
pop
icebp
stos
gs
cmp
call
xchg
push
push
and
inc
lea
mov
xor
mov
pop
imul
rol
pop
add
jp
dec
hlt
add
(bad)
xchg
cmp
pop
jns
xchg
push
sbb
fs
and
dec
inc
cmps
(bad)
cmp
push
ret
mov
mov
jbe
xor
sub
cmp
push
dec
pop
jmp
jl
sub
and
ss
cpuid
outs
shl
out
cmps
mov
mov
adc
add
movs
and
mov
repnz
test
push
and
icebp
cmp
sar
pop
cmps
pop
mov
push
xor
repnz
xor
xchg
pop
shr
cmp
mov
dec
pop
cmp
xchg
retf
stos
in
add
dec
dec
shr
into
or
jb
fisub
fnsave
mov
fld
dec
aam
outs
xor
inc
xor
push
cmp
cmps
shl
pop
je
repnz
xor
mov
into
aam
wrmsr
pusha
mov
xchg
mov
(bad)
hlt
adc
fwait
div
mov
pop
inc
cmps
dec
pop
jns
icebp
addr16
mov
pop
repnz
ret
in
aam
push
in
outs
fs
out
push
mov
(bad)
out
cwde
mov
sbb
cmps
into
cld
sti
xchg
fdiv
mov
cdq
push
pop
xor
inc
pop
inc
inc
dec
test
ds
test
test
jne
cli
mov
stos
aaa
fwait
sbb
mov
shl
lods
add
into
ret
pop
fistp
and
loopne
mov
xor
push
or
sbb
add
ret
pop
fadd
sahf
aam
jno
rol
jnp
sti
and
sub
ss
sub
jmp
outs
les
pop
xor
sbb
aad
mov
push
mov
sbb
add
add
aas
retf
sar
mov
outs
out
test
aas
out
mov
lock
hlt
inc
mov
test
xor
mov
ror
(bad)
jb
ret
sub
xor
inc
mov
stos
repnz
jno
mov
movs
push
jecxz
cmc
je
mov
gs
inc
jno
push
rcr
add
jb
repz
add
pop
adc
stc
xchg
mov
loop
aam
sub
es
test
mov
xchg
or
xchg
adc
stos
push
cmps
int
imul
ss
movs
ret
mov
dec
jae
adc
outs
push
xchg
or
xlat
pop
test
xchg
icebp
sbb
das
xor
xchg
xchg
xchg
stos
in
sub
int
mov
ror
pop
mov
sub
imul
mov
adc
push
mov
mov
or
outs
les
inc
pop
push
lods
test
loopne
mov
addr16
lods
xor
inc
or
sub
push
mov
add
leave
cld
cmp
pop
cmp
add
pop
frstor
idiv
xchg
push
nop
into
push
dec
ins
(bad)
xchg
sti
scas
scas
outs
sub
and
push
sub
call
jmp
repnz
mov
imul
pop
fbld
mov
sbb
xchg
cli
or
cwde
packsswb
jmp
push
sbb
fbld
in
leave
pop
das
cmp
sub
shr
push
pop
repnz
mov
icebp
pop
mov
push
scas
popf
sub
push
cmp
(bad)
repnz
mov
sub
enter
or
and
xchg
mov
jno
rcr
jle
sub
mov
mov
in
xchg
dec
push
xor
lods
cmps
push
loopne
aas
inc
ret
jmp
mov
add
sbb
jg
test
adc
xor
or
jmp
lea
and
setb
mov
fdivr
test
pop
push
mov
and
movs
stos
ror
dec
jmp
jae
stos
xchg
xchg
cmp
outs
out
(bad)
or
xchg
inc
and
cwde
jecxz
dec
dec
push
cmp
shl
push
inc
and
lods
inc
push
push
stos
aaa
or
fidivr
xchg
adc
cs
in
shl
jg
jle
and
aaa
test
mov
or
xchg
sub
push
outs
jb
lock
adc
lea
mov
cld
jle
add
nop
dec
adc
shl
jge
bound
mov
cmp
mov
and
icebp
test
and
adc
and
retf
shl
jns
mov
lods
fimul
cmp
inc
dec
or
push
or
or
js
ss
aad
mov
add
xchg
enter
scas
add
test
lods
mov
dec
push
push
push
int3
in
mov
pop
pusha
mov
out
xchg
out
pop
popf
xchg
clc
xor
mov
ret
adc
lods
test
into
mov
cmp
push
push
pop
sub
mov
and
mov
sbb
(bad)
out
inc
push
xchg
sbb
fimul
movs
add
rol
mov
stos
cmp
sub
pusha
mov
add
data16
push
push
rep
jmp
out
or
jg
jmp
add
fimul
in
icebp
mov
ret
push
xchg
cld
js
test
lea
and
lock
push
scas
jg
dec
push
enter
movs
push
js
lds
daa
fcmovnb
sub
mov
push
(bad)
test
cmp
add
stos
mov
cmp
sbb
xchg
jg
cmp
in
in
jg
push
pop
fwait
nop
imul
shl
mov
xor
pop
lahf
out
test
retf
jmp
stc
ror
ins
ror
push
push
into
jnp
mov
dec
cmp
hlt
repz
xchg
pop
ss
cmp
sub
outs
adc
inc
adc
cmp
(bad)
(bad)
sbb
or
push
adc
xchg
mov
sti
faddp
out
(bad)
loopne
xchg
dec
sbb
dec
mov
push
repz
mov
sub
adc
dec
xchg
out
sub
mov
fsubrp
retf
and
cmp
dec
pop
adc
rol
mov
je
mov
neg
fmul
test
add
shr
shl
mov
xor
jae
imul
pop
mov
add
cmc
cmp
lock
push
xchg
mov
pop
iret
(bad)
call
cmp
ret
mov
in
aad
jae
xor
test
mov
xchg
adc
adc
clc
test
aas
add
mov
xchg
dec
and
movs
push
ficom
std
xchg
xor
ss
and
inc
jp
inc
sub
or
mov
mov
push
or
cmp
jecxz
jne
lods
pop
jmp
pop
pop
push
push
rcl
jecxz
sahf
ror
je
in
adc
(bad)
in
ins
popf
dec
push
mov
test
xchg
mov
fdivr
mov
in
jnp
fsubr
xchg
int
aam
repz
sbb
inc
movs
pusha
into
repz
sbb
es
jge
xchg
retf
jmp
pop
dec
in
sbb
dec
data16
push
sub
movs
dec
sub
fcom
cmc
std
push
imul
mov
xchg
cmp
movs
sbb
stos
(bad)
fistp
or
xchg
stos
repz
imul
or
out
div
pop
and
jo
in
test
(bad)
xor
shr
inc
lea
add
sbb
into
aaa
jnp
mov
cmp
loop
pop
mov
or
je
js
retf
call
rol
lods
repnz
ins
inc
mov
and
std
inc
lock
dec
sbb
(bad)
fisttp
mov
js
lea
std
popf
call
pop
mov
xchg
call
push
outs
mov
push
pop
push
ret
jle
xor
mov
add
mov
add
imul
cmps
and
cmp
dec
dec
fisub
mov
push
sahf
pop
movs
test
jno
or
cdq
daa
push
je
jecxz
sub
aaa
mov
xchg
mov
jmp
inc
test
fdivr
imul
jmp
xor
std
leave
sbb
call
lock
outs
push
and
jg
fisubr
data16
jmp
and
xchg
aas
xchg
(bad)
sbb
pop
mov
ret
shr
cmps
jne
mov
xchg
lea
add
lahf
mov
imul
jmp
cmp
outs
ror
out
inc
mov
mov
std
gs
les
add
jge
or
adc
(bad)
xlat
jecxz
mov
(bad)
mov
out
cmp
loop
mov
jbe
ins
pop
mov
stos
loopne
stos
loope
test
sub
aad
sbb
rep
in
jp
jnp
jns
outs
mov
jmp
(bad)
pop
push
push
ja
adc
pop
mov
or
xchg
or
jmp
pop
mov
ret
xchg
lods
add
les
mov
push
retf
int
popa
xor
lods
mov
xlat
adc
xchg
mov
(bad)
(bad)
xor
push
mov
loopne
jns
inc
ins
inc
loop
cmp
dec
les
fisubr
mov
clc
or
mov
addr16
hlt
lea
or
xchg
push
fidiv
jnp
call
mov
xchg
jle
sbb
inc
es
retf
jne
push
jge
in
pop
int3
(bad)
fistp
sub
cli
add
addr16
lods
jo
mov
shr
gs
cs
cwde
mov
stos
leave
add
(bad)
aas
ror
sub
and
mov
ds
or
fdiv
popa
and
or
jns
loope
inc
push
add
das
push
stos
cs
xchg
push
iret
mov
cmp
pusha
sbb
mov
xchg
loopne
pop
push
mov
sbb
sub
jne
lods
mov
sbb
scas
jmp
out
out
xor
sbb
add
cli
outs
out
adc
sbb
xor
pop
stos
dec
xchg
(bad)
mov
add
push
and
inc
call
inc
aam
sbb
in
mov
test
xchg
in
in
mov
push
jb
and
adc
pop
mov
dec
pop
cld
mov
cmp
dec
loopne
enter
inc
inc
sub
and
into
aad
(bad)
lds
in
sub
in
mov
dec
inc
not
dec
cdq
cmps
or
arpl
jmp
pop
cld
mov
loop
jbe
dec
aad
dec
mov
ins
jo
mov
out
mov
lahf
movs
mov
pop
ret
or
mov
adc
push
xlat
out
sbb
gs
in
mov
cmps
loopne
stos
push
sub
outs
shl
stos
fwait
stos
repz
adc
ins
movs
js
fimul
std
jb
sahf
pushf
arpl
imul
popf
adc
lods
dec
mov
call
lods
mov
into
adc
push
scas
jecxz
inc
hlt
jecxz
popf
ficomp
(bad)
push
xchg
nop
xchg
fwait
xor
ins
or
sti
jp
movs
(bad)
or
adc
push
add
(bad)
(bad)
out
jno
pop
out
ins
xor
(bad)
or
push
loop
push
xchg
ret
or
popf
popf
daa
mov
pop
push
push
cmps
mov
ret
mov
addr16
cmp
push
loope
xlat
add
inc
ja
in
cmp
jmp
ja
xor
mov
test
xchg
outs
repnz
dec
mul
ficom
(bad)
fcomi
xchg
mov
shl
in
hlt
adc
or
shl
imul
test
scas
fwait
mov
arpl
js
out
stos
jb
ins
or
scas
or
outs
dec
or
mov
jle
inc
imul
pop
jbe
or
sub
cmp
mov
faddp
jns
js
test
dec
pop
mov
retf
pop
icebp
mov
and
loope
scas
pusha
sbb
scas
push
mov
pusha
aaa
loopne
mov
adc
jnp
ins
push
xchg
add
push
out
pop
add
fucomi
ficomp
addr16
mov
xor
hlt
test
inc
dec
icebp
mov
and
arpl
(bad)
push
mov
cld
sbb
sbb
push
dec
jbe
adc
and
jbe
mov
cmp
aas
imul
inc
inc
sbb
xor
mov
push
ds
xchg
inc
pop
adc
push
mov
ins
mov
mov
sbb
mov
in
mov
fmul
cmc
mov
mov
adc
mov
aaa
int
test
stc
cmp
or
gs
push
sub
or
out
imul
sub
xchg
(bad)
in
and
jno
mov
jmp
lods
mov
sub
imul
cmp
adc
mov
inc
repz
call
jecxz
into
fwait
mov
mov
test
dec
(bad)
mov
daa
outs
ins
sti
mov
cmps
dec
sub
lea
test
sub
xchg
out
xchg
pop
or
aad
cli
xor
frstor
push
xlat
shr
jo
int3
inc
lds
fisttp
scas
push
push
xor
jl
lahf
std
stos
mov
fidivr
sub
fild
mov
pop
jmp
mov
stos
mov
jmp
(bad)
sub
jne
add
dec
mov
movs
cmps
leave
mov
cmp
and
or
imul
lock
sahf
fild
sub
xor
jle
cli
pop
sbb
mov
jge
mov
shr
jp
mov
add
imul
jo
ret
dec
out
mov
jge
push
inc
inc
xlat
sub
xchg
mov
cmp
ds
iret
pop
xchg
inc
cld
iret
movs
(bad)
ins
in
cs
xchg
lock
rcr
inc
lea
mov
cmp
pushf
outs
leave
mov
push
adc
lock
pop
fisub
out
jge
xchg
mov
loop
(bad)
pusha
fbld
cli
inc
pop
push
and
dec
nop
push
ja
mov
int
push
cmp
stos
addr16
int3
cmp
lea
nop
sub
sahf
push
sub
inc
daa
xchg
dec
and
out
lahf
stc
clc
or
dec
xor
cmp
hlt
leave
popa
or
into
ret
jl
test
mov
xchg
or
inc
mov
fistp
popa
push
adc
and
in
jle
shl
dec
or
pop
movaps
mov
lods
xchg
cs
xchg
jmp
jge
or
xor
xchg
xlat
xor
(bad)
inc
jmp
ins
cwde
jb
dec
dec
imul
xchg
cs
push
adc
iret
push
push
mov
(bad)
push
fwait
jg
dec
retf
push
int3
rol
mov
arpl
or
repz
mov
jmp
and
xchg
sbb
xchg
shr
das
lds
mov
rcr
mov
or
scas
ror
pop
test
out
je
sub
iret
xlat
test
data16
sub
mov
xor
jns
push
jle
sahf
addr16
test
xchg
jle
(bad)
aad
jo
fwait
push
xchg
mov
pop
mov
ins
(bad)
adc
push
inc
xlat
xor
stos
dec
pop
lock
xor
call
cmc
cmp
or
out
push
bound
stc
mov
mov
(bad)
jns
pop
mov
leave
test
popa
shl
or
pop
inc
out
mov
popf
or
inc
jecxz
sbb
add
leave
push
call
push
mov
vmovhps
xchg
rcl
pop
cmc
ret
cdq
inc
cld
mov
cmp
movs
out
lock
sbb
jno
in
aaa
pop
icebp
add
or
in
or
rcr
mov
dec
repnz
scas
retf
jbe
adc
lods
mov
sub
fs
push
mov
fdiv
out
out
retf
(bad)
jecxz
sbb
sahf
xor
push
xchg
imul
ss
adc
leave
aaa
ds
inc
test
pop
push
cmp
inc
xchg
setg
dec
sti
cwde
add
pop
fucomi
sub
or
pop
test
inc
mov
xchg
jmp
(bad)
sub
mov
test
sub
sub
cmp
xor
cmp
cmp
shl
pop
loop
sbb
fdivr
jl
and
sahf
pop
scas
and
jnp
or
inc
sbb
xlat
cmp
aas
mov
xor
mov
cmp
jb
cmc
lods
sbb
jns
aam
add
(bad)
push
sub
mov
stos
popf
xorps
mov
mov
jmp
clc
mov
or
sub
cwde
popf
adc
xor
push
call
leave
mov
mov
mov
inc
xchg
clc
icebp
cmps
adc
jns
int3
clc
ds
stos
dec
fdiv
jge
cmp
and
xchg
mov
cmp
(bad)
fistp
push
(bad)
cmp
fdivr
cmc
sbb
sbb
mov
xchg
fisttp
into
add
inc
cmp
xor
fbstp
sub
sbb
jbe
xchg
jecxz
movs
jb
add
lods
int3
dec
ret
mov
ja
sahf
and
mov
ret
movs
mov
inc
mov
and
and
dec
push
cli
mov
mov
jns
inc
mov
fistp
ret
cmp
sbb
mov
test
out
mov
mov
xchg
xchg
push
imul
call
xor
lods
adc
inc
sbb
mov
lock
cmovs
add
mov
fld
lods
clc
mov
dec
jb
add
subps
mov
mov
cmp
mov
inc
das
inc
loopne
dec
dec
sub
xlat
xor
push
fiadd
xor
cld
js
dec
gs
mov
push
es
xor
adc
push
fwait
das
mov
ja
cmp
mul
fsubr
push
add
neg
adc
jb
and
es
inc
icebp
inc
push
push
scas
pop
inc
call
pop
inc
test
dec
inc
mov
ror
mov
sub
loop
or
repz
mov
add
arpl
add
stos
retf
pop
push
jbe
in
(bad)
daa
mov
hlt
pop
div
repnz
jae
dec
push
test
mov
xchg
xchg
stos
push
jle
in
aas
xor
hlt
stos
scas
dec
inc
js
loopne
dec
push
and
push
stc
jns
pop
cmp
inc
jb
imul
gs
ds
xor
mov
xchg
pop
inc
cmp
loope
ss
adc
cs
stos
and
mov
nop
cmp
js
je
mov
(bad)
mov
jnp
adc
rcl
inc
pop
pop
aam
or
mov
jo
sahf
or
push
sti
and
stos
mov
pop
and
cwde
rcl
(bad)
xor
sar
push
into
xchg
ja
mov
fisub
xor
lahf
cwde
jno
out
pop
mov
das
mov
jecxz
pushf
pop
cmp
(bad)
in
inc
cwde
mov
mov
or
ins
cmp
mov
sub
lds
fstp
dec
inc
shl
or
pop
pop
adc
mov
in
rcl
loopne
ja
cli
dec
icebp
adc
mov
xchg
data16
cwde
jl
jmp
jmp
sub
add
and
scas
pop
jecxz
fs
push
jp
ret
adc
aad
ret
mov
lods
mov
mov
pushf
es
adc
add
cmp
mov
mov
jns
mov
fwait
in
sbb
(bad)
loop
call
jg
ror
push
xchg
int3
call
lods
pusha
mov
inc
rol
std
rcr
iret
pop
mov
test
scas
mov
push
test
cwde
sbb
jp
jo
push
shl
mov
pop
leave
out
lods
mov
pusha
gs
pusha
mov
pushf
inc
push
int3
pushf
pop
scas
retf
in
iret
not
sbb
aad
lahf
aaa
loop
sbb
movs
adc
mov
sbb
and
mov
js
es
and
push
or
mov
arpl
das
out
jecxz
add
lods
inc
pusha
inc
jo
cwde
or
inc
fidiv
sbb
xchg
and
cmp
jle
and
repz
mov
adc
push
test
xor
xchg
loope
adc
lods
xor
shr
in
adc
shr
sub
sub
in
dec
imul
into
gs
loop
shl
loop
mov
add
cmp
push
jmp
sub
dec
dec
(bad)
mov
jp
clc
jb
mov
dec
jne
enter
push
mov
rcl
jae
jmp
pop
xlat
rcl
mov
dec
push
hlt
int3
pusha
jbe
mov
pop
test
jno
pop
or
ja
pop
xchg
sbb
push
fwait
add
cmps
loop
push
cmp
es
daa
add
jle
mov
dec
ss
sbb
cld
push
adc
add
sbb
mov
push
ror
cmps
inc
cmps
and
inc
mov
ds
xchg
add
popa
jno
mov
inc
mov
cmp
rcl
dec
fucomip
add
loop
inc
(bad)
jl
sbb
ret
cmp
sbb
or
jnp
add
mov
xor
icebp
enter
mov
sbb
je
add
mov
add
xor
popf
popa
inc
addr16
xchg
fnclex
loope
push
mov
outs
xor
arpl
sbb
cmp
das
xor
mov
mov
fcom
inc
pop
pop
xchg
retf
je
dec
(bad)
xchg
xchg
sti
icebp
jbe
adc
jne
scas
(bad)
fcmove
cmp
push
sbb
rcl
mov
(bad)
xchg
bound
sbb
(bad)
mov
adc
movs
mov
mov
jbe
scas
scas
int3
inc
jmp
jl
hlt
fstp
dec
sub
loop
jbe
dec
mov
jae
and
adc
aaa
out
cmps
pop
xchg
pop
sbb
aaa
fisubr
test
dec
xor
adc
xchg
jmp
sub
inc
lods
or
dec
sbb
bound
(bad)
sahf
outs
daa
jnp
xor
xchg
test
lods
mov
mov
add
lock
and
mov
ror
or
lea
pop
sbb
jnp
and
dec
stc
mov
cwde
jns
or
stos
or
or
mov
mov
jecxz
jl
jecxz
nop
clts
icebp
sub
mov
in
add
sti
std
pop
mov
(bad)
movs
lods
cvttps2pi
push
xor
add
fsub
mov
adc
mov
(bad)
jge
jmp
sub
adc
cdq
mov
and
mov
iret
ins
daa
mov
dec
jecxz
aaa
jmp
pop
pop
xchg
fucom
mov
mov
sbb
cmp
push
gs
lock
push
ror
dec
es
bound
outs
xor
mov
mov
push
imul
xor
push
push
inc
jle
sub
xor
push
into
es
pop
dec
ss
inc
arpl
dec
pop
lahf
fucomi
pop
cdq
push
or
ror
mov
lock
movs
or
or
mov
stc
shl
mov
inc
shl
inc
mov
push
lahf
imul
mov
test
mov
stos
mov
popf
xchg
adc
loopne
fidiv
and
scas
fldcw
jge
pop
outs
(bad)
pop
movsx
shl
push
adc
mov
sub
out
mov
fisttp
inc
push
xor
jbe
push
push
js
loopne
add
push
nop
push
imul
sbb
test
sti
outs
mov
xchg
imul
imul
sbb
xor
inc
gs
cmp
icebp
pop
in
es
inc
mov
mov
nop
rcl
mov
inc
test
inc
jmp
in
sbb
xchg
aam
fistp
mov
sbb
ret
push
test
push
xchg
sbb
and
adc
retf
mov
jae
shl
je
mov
jno
mov
sub
adc
test
mov
jmp
cli
test
pop
push
in
je
push
and
push
mov
sub
pusha
shr
out
outs
push
mov
js
repnz
nop
adc
aad
test
pop
pop
into
in
ins
mov
jge
xor
leave
popa
or
imul
mov
call
fldenv
add
or
sub
lds
cld
push
retf
sub
test
mov
mov
sbb
xlat
movs
adc
aam
in
inc
ret
adc
popf
cdq
outs
in
mov
sub
dec
lds
inc
add
dec
mov
movs
pop
sbb
mov
cs
clc
jbe
leave
stos
cs
cwde
mov
retf
loope
loop
icebp
sar
dec
rcr
jp
mov
pusha
shl
sub
and
jo
xchg
jecxz
pop
loope
xchg
fimul
lock
jmp
adc
out
sbb
rcl
shr
fsubr
icebp
cwde
adc
mov
daa
dec
pop
pop
jne
dec
fs
aad
jmp
xchg
push
dec
outs
mov
add
cwde
adc
out
cmp
aam
fs
movs
test
das
dec
(bad)
mov
fdiv
cmc
repz
loope
inc
pop
gs
cwde
sbb
mov
xchg
std
not
fsub
inc
bound
jecxz
pop
or
fwait
cdq
shl
mov
and
push
jmp
jmp
lock
mov
ins
or
jmp
jge
adc
push
jmp
push
out
jae
enter
imul
mov
xlat
jmp
mov
(bad)
push
sub
fwait
(bad)
pop
cli
shl
cmp
rcr
mov
jmp
ret
out
mov
(bad)
push
and
mov
fstp
mov
ds
jns
ins
fst
outs
lea
cwde
in
repz
dec
inc
das
lock
movs
add
movs
pop
fcomp
les
inc
out
add
rcl
jmp
std
xchg
sbb
sti
arpl
mov
mov
pop
dec
or
adc
popa
cmp
movs
inc
xlat
les
out
dec
add
(bad)
les
out
push
mov
movs
mov
daa
sub
not
fld
cmps
pop
mov
cld
in
es
pop
hlt
pop
adc
or
push
out
sbb
push
(bad)
outs
test
sbb
cmp
push
push
mov
cld
cmps
rol
xchg
jno
jg
mov
(bad)
call
pop
cmps
xor
mov
add
xlat
retf
enter
pop
inc
not
cs
js
leave
stc
mov
inc
lds
sub
imul
repz
cmps
out
xchg
into
std
jge
inc
(bad)
xor
cmps
cmp
mov
pop
jb
xchg
jmp
push
jmp
or
shl
mov
ins
dec
dec
or
xchg
retf
jnp
lods
jle
inc
sbb
cmps
(bad)
pop
fdivp
and
sbb
sub
xchg
add
es
cmp
jge
add
sahf
fwait
sti
adc
ret
(bad)
and
cdq
rcr
(bad)
cli
xchg
test
repnz
mov
mov
sub
jb
loope
push
mov
xor
shl
(bad)
pop
mov
stos
enter
jp
leave
fstp
and
dec
push
std
in
ds
in
push
add
mov
data16
pop
xchg
and
xchg
mov
mov
pop
clc
jo
pop
jne
dec
and
ja
(bad)
sub
xor
mov
ret
inc
and
mov
mov
ret
shl
lods
xchg
xchg
cwde
cmp
mov
xor
lahf
pop
jb
sub
jp
out
pop
(bad)
das
dec
repnz
xchg
mov
inc
loopne
and
adc
sahf
add
test
jmp
push
je
sub
fistp
push
sti
fimul
(bad)
and
jbe
mov
loopne
(bad)
inc
rcl
add
pop
retf
xchg
mov
gs
jne
mov
loop
push
jno
repnz
sub
dec
add
or
mov
iret
mov
sbb
add
das
imul
test
inc
push
stos
(bad)
xor
js
ficom
jge
popf
dec
out
lods
pop
and
iret
mov
sbb
ins
mov
cmps
popa
sub
jmp
add
movs
or
fimul
add
cmp
stos
xchg
mov
ins
sub
push
inc
or
aas
cmps
imul
clc
fnop
inc
fwait
cdq
leave
mov
sbb
sahf
mov
shr
sbb
and
out
inc
sbb
mov
jge
jg
arpl
mov
movsx
gs
ret
shr
mov
loop
repnz
scas
mov
push
add
repnz
aad
dec
xchg
loopne
int3
inc
lods
push
dec
stos
out
push
fwait
mov
sub
dec
fdiv
(bad)
std
pop
adc
(bad)
pop
mov
add
cmp
jnp
cdq
arpl
mov
xchg
(bad)
hlt
ins
pusha
ins
xor
mov
adc
mov
jbe
loopne
in
pop
fcomi
add
sub
pop
shl
inc
push
movs
loopne
rol
pop
jl
sar
and
inc
outs
mov
test
pusha
fwait
push
(bad)
test
arpl
xor
or
sub
vmread
jg
ins
mov
pusha
test
inc
cmp
hlt
jp
mov
nop
adc
inc
pop
out
xor
mov
mov
mov
and
inc
dec
push
int3
pushf
mov
mov
ret
push
sub
ret
xchg
jge
das
mov
mov
or
data16
les
rol
and
(bad)
mov
clc
inc
ret
scas
xchg
hlt
jle
mov
mov
std
rcr
and
mov
jmp
inc
xchg
addr16
sub
movs
or
aam
cli
(bad)
mov
enter
mov
jb
stos
(bad)
sub
push
scas
and
push
daa
int
push
int
lds
jl
adc
enter
dec
cmps
sbb
ret
xchg
mov
ret
loopne
out
mov
or
in
push
call
inc
lds
lock
adc
mov
mov
cs
cmp
movs
push
movs
push
xchg
dec
sbb
in
movs
pop
push
fcmove
call
xchg
mov
pop
test
lods
sub
out
inc
pop
or
in
cmp
enter
mov
cmp
xlat
add
enter
or
test
pop
or
mov
adc
sahf
push
jle
mul
ds
nop
repnz
jbe
jne
cld
repnz
dec
adc
test
loope
mov
clc
mov
xchg
xor
xchg
dec
jmp
jno
popf
test
jae
push
rol
test
mov
int3
add
adc
sbb
neg
ins
idiv
push
aas
jnp
adc
outs
hlt
shl
mov
sbb
pop
or
and
test
xor
xlat
hlt
sbb
jns
aam
mov
pop
mov
mov
test
mov
pop
call
scas
or
mov
(bad)
pushf
pop
inc
int
shl
(bad)
push
int
int3
xchg
sbb
(bad)
mov
inc
cmp
loopne
push
pop
cmp
out
pop
call
mov
scas
sub
cli
mov
das
xor
jmp
loope
and
xchg
cmps
xchg
(bad)
call
sbb
cmp
fsubr
test
add
sub
(bad)
fdivr
mov
xlat
rcl
les
xor
or
imul
jle
(bad)
adc
bound
out
pop
retf
inc
jle
repz
jns
sbb
mov
ins
sub
nop
std
adc
icebp
mov
pop
out
and
push
add
pop
dec
mov
(bad)
mov
mov
add
xor
in
xchg
mov
mov
sbb
(bad)
hlt
bound
shl
dec
mov
(bad)
cld
xor
mov
pop
adc
sbb
(bad)
sub
lods
xchg
inc
xchg
pop
ror
mov
mov
leave
dec
adc
jl
adc
jae
jb
mov
xchg
pop
int
and
daa
movs
daa
scas
dec
aam
inc
adc
mov
dec
xchg
mul
dec
jnp
dec
inc
imul
stos
dec
adc
xchg
test
arpl
inc
ds
gs
(bad)
(bad)
call
out
xlat
xchg
add
mov
rcl
sbb
sub
dec
out
dec
xchg
ja
jae
lock
dec
push
push
rcl
fstp
retf
arpl
and
and
outs
push
int
mov
mov
jb
dec
push
mov
in
and
stc
pop
(bad)
es
popa
mov
mov
fcomp
dec
dec
cmp
pop
pop
movs
xor
jb
sbb
xrelease
mov
mov
jecxz
push
jmp
setno
lahf
sub
jl
xchg
mov
retf
cld
cdq
stc
retf
test
loop
xor
call
out
repnz
pushf
repz
movs
ins
out
mov
out
jp
mov
mov
clc
popf
lods
xchg
xor
push
lds
js
sub
or
pop
pop
jns
sti
push
test
sbb
std
add
psrlw
ss
jb
inc
scas
ret
xchg
test
repnz
dec
fild
xchg
movs
ret
test
js
mov
(bad)
sub
xchg
shl
pop
jae
jl
pop
push
mov
shr
mov
cdq
jp
sbb
xchg
mov
dec
xor
cmp
aaa
mov
xchg
test
and
mov
jo
jo
jb
jne
dec
jns
mov
retf
fnstsw
sub
push
ss
push
iret
cmp
pop
and
push
mov
push
iret
fiadd
popf
sti
xlat
aad
loope
cmp
aad
repz
int
mov
lods
pop
in
repnz
add
sti
loope
(bad)
add
stos
mov
ror
outs
stos
or
jb
retf
(bad)
shl
bound
std
(bad)
retf
jae
xchg
test
inc
jbe
jnp
or
popf
out
add
add
jns
pop
jo
pop
jae
inc
mov
mov
jl
leave
xor
sub
out
inc
push
inc
pop
cdq
ins
jmp
pop
rcl
xor
and
fdiv
push
shr
xchg
or
push
add
pop
lahf
dec
jbe
loopne
fimul
pop
or
mov
popf
pop
imul
loope
popa
inc
cdq
cmc
fiadd
aaa
mov
pop
sub
cmp
mov
sub
movs
hlt
mov
cmp
mov
(bad)
aam
repnz
arpl
retf
lods
mov
aaa
movups
dec
fcom
cmp
push
std
inc
or
arpl
add
(bad)
clc
sub
adc
lock
iret
(bad)
out
or
iret
outs
ss
and
inc
and
and
push
push
test
test
inc
or
or
data16
iret
frstpm(287
and
call
push
rcl
sub
or
fnsave
in
push
imul
adc
mov
test
(bad)
or
mov
cwde
fist
cdq
mov
ret
hlt
xor
stc
sahf
mov
add
sub
dec
mov
nop
cmps
cmp
add
mov
fwait
daa
outs
cdq
or
stc
fs
(bad)
fsubr
lds
sub
(bad)
mov
test
pop
clc
xor
fistp
psubsb
cs
push
test
sub
pop
pop
mov
pop
pop
jge
xchg
push
loopne
loop
into
xor
xor
in
lea
xchg
pop
popa
outs
sbb
cmps
mov
mov
mov
mov
mov
or
mov
push
fcom
inc
sti
pop
cmp
out
std
call
push
xor
jmp
cmp
in
mov
bound
mov
or
sbb
jge
ins
leave
ss
les
and
daa
jmp
mov
les
ds
xchg
and
xchg
jle
clc
xchg
psubw
mov
fisttp
mov
hlt
inc
pop
sub
jne
mov
sbb
jmp
(bad)
stos
xor
pop
lods
jge
push
js
mov
icebp
test
sub
xchg
xlat
scas
outs
sub
std
jecxz
stc
cwde
stc
test
mov
outs
test
cmp
xor
inc
div
xchg
xchg
(bad)
sbb
aaa
(bad)
cmp
je
pop
popa
or
gs
push
and
mov
std
add
rcr
mov
outs
fisub
pop
pushf
hlt
pop
hlt
and
dec
xchg
imul
xchg
mov
xchg
fidiv
popa
cmp
xchg
xchg
(bad)
cmp
arpl
hlt
les
test
pushf
dec
jne
pop
lahf
mov
dec
adc
in
or
mov
add
call
jbe
jne
(bad)
cmp
mov
dec
pop
cmps
ret
jno
loopne
dec
cmp
dec
or
ins
test
fldcw
sti
and
sub
adc
(bad)
not
and
push
shl
loope
fimul
iret
icebp
xchg
jmp
ret
das
and
shl
cmps
in
imul
inc
int
add
and
push
mov
out
std
inc
icebp
icebp
(bad)
pop
cs
jecxz
stos
fist
(bad)
mov
pushf
or
ror
pusha
dec
test
out
data16
cmc
sub
jbe
pop
sbb
out
pushf
ins
jle
inc
jae
adc
aaa
cld
inc
inc
cmp
dec
sahf
fs
xchg
mov
sbb
cmp
stc
mov
(bad)
les
or
out
cmps
xchg
and
into
or
shl
out
stos
mov
out
div
dec
cmp
or
sub
iret
push
imul
add
aas
mov
xor
sbb
pop
cmp
(bad)
neg
pop
inc
or
jnp
mov
add
ficom
ror
test
and
or
loop
mov
push
xchg
adc
cmps
inc
push
popf
imul
push
push
fistp
pop
cwde
xlat
xchg
pop
xlat
sub
mov
addr16
sbb
push
lock
pop
clc
xor
repz
xchg
sbb
push
dec
imul
ffreep
mov
in
cmp
stos
stos
mov
dec
or
jmp
cwde
ret
mov
sub
fwait
mov
fimul
cwde
cli
add
or
icebp
(bad)
loop
sar
(bad)
in
fild
xchg
and
adc
lock
into
arpl
loopne
mov
imul
inc
aas
inc
ret
mov
fucomip
pop
fist
out
imul
fwait
dec
js
xabort
and
xor
or
cs
push
dec
or
pop
loop
jno
xchg
or
and
cdq
xchg
(bad)
ror
sub
jb
push
retf
adc
and
(bad)
aas
loop
gs
data16
jge
pop
or
dec
aam
and
in
xchg
cdq
ret
(bad)
jg
into
mov
and
clc
xchg
repnz
mov
out
aad
out
adc
sub
ds
hlt
jecxz
mov
xchg
inc
retfw
cs
mov
rcl
addr16
lds
mov
hlt
and
pop
fdivr
lock
xor
pop
fwait
cli
xchg
xor
add
fsubr
data16
adc
adc
imul
mov
rcr
inc
add
jp
popa
fdivrp
popf
cwde
rol
xor
jmp
rcr
loope
dec
idiv
rcr
pop
jnp
fsubr
push
pop
jno
sub
jmp
retf
jge
adc
fiadd
push
jbe
cli
repnz
cmc
shr
or
push
pushf
pop
repnz
pusha
xchg
enter
pop
xor
arpl
and
das
pop
pop
adc
or
hlt
push
cwde
clc
sub
loope
aad
ret
push
adc
push
add
add
loope
or
aam
pop
mov
(bad)
mov
lods
mov
adc
mov
loopne
mov
inc
imul
adc
shr
inc
(bad)
or
std
fld
cmp
inc
add
test
xchg
mov
mov
or
out
push
outs
pop
scas
xchg
sub
push
jbe
jmp
(bad)
movs
jmp
push
mov
outs
adc
icebp
into
in
lods
rol
cmps
inc
mov
outs
inc
mov
aas
jae
push
fistp
fldcw
aad
xor
dec
push
in
shr
dec
inc
xor
mov
mov
jno
xchg
mov
repz
pop
mov
iret
jle
or
retf
pop
inc
jae
push
inc
retf
lea
sbb
aas
(bad)
enter
hlt
inc
ins
mov
inc
mov
and
mov
je
cmp
out
jp
add
rol
inc
adc
test
xlat
popf
scas
adc
fs
mul
push
test
fldenv
add
adc
lahf
xchg
xchg
sub
jns
leave
out
sti
retf
sahf
mov
add
imul
and
(bad)
pop
or
mov
push
ret
pusha
mov
xchg
pop
inc
adc
jne
into
mov
lods
mov
ins
and
mov
addps
push
scas
mov
mul
push
pop
rcr
dec
in
mov
ror
adc
pop
(bad)
shl
mov
ins
mov
iret
add
repz
retf
mov
mov
and
push
ins
xchg
add
sbb
aam
dec
jmp
lahf
fabs
mov
xchg
jl
ror
xor
ja
push
popa
in
cli
sbb
dec
adc
pop
jle
adc
outs
xor
pop
shl
sbb
push
enter
inc
pop
js
cmp
and
arpl
outs
jg
gs
retf
cs
mov
lahf
js
les
jg
stos
imul
mov
xchg
js
jo
ja
sar
addr16
jmp
xor
daa
loopne
in
out
ret
js
jge
dec
(bad)
dec
shr
fs
scas
and
pop
mov
cli
rol
sbb
mov
sbb
aas
adc
je
xchg
call
sub
inc
xor
or
inc
mov
sub
push
sub
lods
mov
test
cmp
xor
xchg
es
fwait
jmp
mov
jae
scas
xchg
mov
push
xlat
pop
jnp
stos
mov
out
lds
not
stos
add
sub
adc
or
clc
test
call
mov
inc
cmps
mov
mov
mov
push
call
push
sbb
jmp
sbb
arpl
push
cmc
adc
push
into
cwde
mov
xor
bound
push
pop
loope
sub
mov
mov
mov
shl
outs
stos
sbb
pop
push
and
outs
lea
fild
jp
add
jmp
dec
fs
dec
outs
jmp
cmp
les
pop
mov
jae
ret
enter
xchg
retf
je
cmp
dec
dec
sub
stos
mov
mov
test
je
(bad)
sahf
and
stc
and
lock
dec
leave
adc
sbb
rcr
shl
pop
addr16
jnp
aas
loope
mov
les
xchg
or
clc
mov
and
loop
bound
or
add
enter
mov
push
bound
sahf
pop
imul
sub
les
call
aad
mov
mov
leave
or
lea
imul
cdq
inc
hlt
mov
mov
or
iret
or
hlt
inc
sahf
adc
xor
jmp
dec
lods
xchg
mov
aad
ror
inc
movs
dec
pop
xchg
inc
inc
leave
sbb
stc
jbe
loop
xchg
xchg
cwde
inc
pop
cmp
sbb
loop
mov
mov
jl
loope
mov
std
jae
test
mov
inc
or
add
test
jns
stc
jl
data16
enter
and
aad
loope
pop
pusha
addr16
retf
inc
push
cmp
mov
arpl
enter
pop
stc
and
rol
imul
cmp
push
push
xchg
sahf
pop
imul
nop
xchg
stc
jne
outs
or
aam
ins
lods
hlt
int3
test
adc
mov
adc
shl
enter
lock
call
ins
inc
ror
stos
std
inc
xchg
ret
ret
sti
add
jnp
push
(bad)
clc
mov
jmp
push
aad
and
add
fs
int
fiadd
pop
cs
jecxz
mov
enter
pop
inc
jmp
mov
jmp
mov
aam
jecxz
push
sub
mov
leave
add
and
repnz
mov
dec
sub
jge
fsub
icebp
jae
daa
mov
push
xor
mov
adc
scas
cmps
aas
clc
sti
adc
pop
add
xor
imul
jg
pop
call
rcr
mov
lods
outs
adc
retf
sub
arpl
cdq
cmp
push
jbe
mov
xchg
jecxz
std
or
cmovnp
and
adc
repz
mov
jecxz
pop
fxtract
xor
in
cli
out
and
mov
cmc
nop
neg
pushf
cmp
lods
pop
fist
mov
scas
inc
pop
sbb
shl
xchg
stos
xchg
xchg
pop
repz
pushf
iret
add
dec
sti
jg
ret
je
cmp
push
(bad)
sahf
dec
sub
push
fidivr
adc
pop
add
test
test
cmc
add
enter
xchg
mov
sbb
xor
imul
rol
mov
add
add
int
cmp
push
jb
adc
int3
push
mov
mov
sub
shr
jl
jg
imul
adc
pop
inc
or
mov
rcr
push
pop
int
xchg
push
sbb
inc
es
(bad)
dec
mov
cmps
push
jg
sbb
xchg
or
imul
jo
aaa
mul
push
jmp
inc
das
mov
add
(bad)
adc
shl
mov
pop
data16
jmp
inc
adc
out
fdiv
popf
(bad)
fadd
push
jb
pop
cmp
out
das
imul
sete
ror
scas
enter
sub
test
mov
jb
pop
repz
mov
jp
sub
add
loopne
fisubr
jnp
test
jg
mov
cmp
(bad)
fcom
cld
and
xchg
je
mov
scas
retf
dec
adc
xor
or
les
pop
add
sub
pusha
dec
int
jno
test
in
fld
sbb
(bad)
in
mov
sbb
xchg
mul
pop
pop
fbld
rcr
rcl
adc
add
add
add
lods
jle
mov
ds
movs
sahf
pop
mov
jo
cmp
mov
call
mov
out
jmp
cmps
lds
xchg
dec
dec
cmps
jo
sbb
pusha
popa
sub
mov
movs
jl
arpl
cmp
push
scas
stos
test
inc
or
sbb
adc
xchg
bound
adc
cmp
scas
sub
in
jae
sub
dec
adc
leave
fld
in
xchg
fld
shl
cdq
pop
(bad)
xor
xchg
jecxz
xchg
xlat
xor
out
sub
into
add
or
les
gs
adc
sub
shl
and
imul
fldenv
mov
stc
nop
ficom
pop
outs
jmp
enter
jmp
stos
xchg
pushf
ficom
push
dec
push
xor
mov
test
cmp
sbb
cli
mov
ds
xor
out
arpl
push
enter
jns
retf
cmps
popa
aam
inc
gs
es
(bad)
fdiv
pop
out
jno
leave
bound
and
enter
enter
loopne
add
mov
push
sub
fsubp
mov
add
sbb
pop
add
das
ins
and
and
mov
cmp
xchg
jmp
out
dec
and
xlat
sbb
enter
dec
repnz
push
jo
jge
or
test
add
dec
dec
rcl
into
lea
call
or
or
ret
loop
pop
shl
mov
or
out
fsubr
mov
xor
sub
cmp
out
loope
dec
fisttp
and
cld
dec
dec
inc
pop
aas
adc
sti
leave
sbb
inc
sub
fucomip
outs
dec
std
cmp
sbb
adc
in
or
shr
loop
sub
jge
mov
mov
or
into
test
ret
jbe
mov
mov
mov
cs
fs
jecxz
inc
jge
in
mov
jmp
in
add
adc
leave
cmc
hlt
xchg
(bad)
xchg
out
sub
jno
xor
sbb
push
arpl
frstor
aaa
mov
dec
mov
mov
jne
mov
mov
outs
data16
push
cmc
or
ja
dec
jmp
inc
adc
lock
mov
test
mov
and
push
push
mov
inc
mov
(bad)
or
cwde
jl
xor
movs
repnz
and
rcr
add
aad
shr
ror
inc
cmp
jo
add
mov
lea
aaa
sti
data16
inc
mov
mov
test
fistp
cmp
inc
sbb
addr16
add
into
mov
mov
int3
daa
jae
jle
in
(bad)
bound
fs
and
inc
stc
mov
pop
xor
pop
test
rcl
xor
cmp
scas
mov
es
or
pushf
scas
cmps
aas
repz
mov
pop
popf
pop
xchg
push
shld
lods
je
enter
stos
lods
(bad)
sub
xchg
dec
mov
lahf
mov
adc
jp
pushf
pushf
int3
ret
dec
test
mov
fs
(bad)
repz
ja
pop
movs
enter
aad
xchg
repz
pop
dec
pushf
add
cld
shl
mov
enter
cmp
(bad)
jo
push
mov
sub
adc
inc
sar
dec
aas
rcl
(bad)
dec
stos
movs
call
not
jmp
test
dec
pop
mov
cwde
arpl
idiv
fdiv
int
pop
cmps
das
aaa
fdivr
xchg
loop
dec
das
sbb
repz
jle
sahf
lea
mov
retf
pop
cmp
inc
jecxz
fsubr
pop
add
jno
adc
jb
call
dec
xchg
jg
dec
sbb
in
mov
repz
xor
aas
inc
xchg
adc
cmp
out
push
xor
push
push
daa
xchg
imul
or
popa
mov
call
push
js
push
std
std
push
pop
ja
sti
fsubrp
scas
gs
dec
loopne
dec
pushf
and
jo
push
add
test
ss
cmps
ins
out
lods
pop
mov
push
jo
aam
lds
int3
gs
jne
inc
scas
xchg
sbb
movs
push
mov
ficom
add
(bad)
sbb
add
mov
faddp
ss
mov
pop
aas
cmp
mov
jo
pusha
add
in
cld
mov
int3
mov
sti
inc
inc
movs
(bad)
cmp
mov
out
stc
mov
lea
cmc
cmp
cdq
icebp
pushf
cli
(bad)
mov
pop
add
cmc
mov
pop
dec
add
test
mov
push
repz
or
sbb
xor
fnstcw
mov
rcl
fwait
out
cs
bound
in
scas
xor
xor
(bad)
pop
xchg
xor
mov
sbb
dec
jno
cld
xchg
scas
cmps
push
mov
jne
xchg
or
mov
ins
imul
pushf
fisubr
jmp
iret
mov
push
xor
les
jge
push
mov
cmps
loopne
jmp
repz
sub
mov
scas
cdq
ins
and
ins
xchg
nop
loop
test
imul
jp
inc
jns
icebp
adc
dec
icebp
shl
pop
sahf
iret
mov
or
int
pop
pop
test
rcr
sti
mov
jmp
movs
jg
imul
pop
jmp
ins
out
nop
sub
push
jle
jb
cs
sub
popf
sbb
imul
sub
retf
stos
dec
rcl
sub
or
mov
mov
dec
imul
cmps
adc
sbb
aad
nop
xor
fwait
(bad)
and
jge
sbb
cmps
dec
aam
xor
xchg
(bad)
inc
push
test
dec
pop
push
jne
fistp
cmc
mov
mov
loope
repnz
out
jb
cmp
add
add
cmp
retf
ss
xor
push
jmp
aam
add
(bad)
popf
stos
cmp
lock
xchg
sub
xchg
mov
or
mov
cmps
push
sbb
cmps
dec
out
ret
pop
(bad)
pop
or
sti
sbb
sub
pop
jge
dec
mov
ret
lods
jl
inc
push
stos
mov
aam
cmc
(bad)
call
stc
gs
dec
push
ret
mov
in
addr16
inc
aam
mov
das
inc
xchg
dec
mov
sbb
ror
dec
shl
ret
arpl
sbb
jl
ffree
(bad)
push
push
xlat
loop
mov
aam
push
les
sub
cmps
or
sti
mov
jmp
loopne
xor
repz
inc
cmp
pop
xor
int3
xchg
test
mov
cli
ret
push
cmp
add
and
(bad)
adc
or
push
pusha
inc
pop
jbe
mov
enter
pop
ss
cmps
add
mov
adc
std
hlt
leave
cmc
les
les
sub
jge
xlat
mov
fwait
mov
push
xchg
jmp
loope
aad
jmp
ret
pushf
sbb
ins
xor
ins
or
cmp
inc
pop
test
mov
fs
xchg
mov
ret
shl
mov
cmp
push
(bad)
mov
enter
and
inc
pop
pop
add
leave
arpl
mul
sbb
adc
retf
enter
push
cwde
sub
mov
in
inc
cmp
aaa
cmp
aaa
push
mov
jp
inc
hlt
js
or
fstp
fsubr
sub
es
mov
push
pusha
or
neg
sub
push
or
inc
stc
push
sar
adc
call
dec
mov
ins
popf
mov
aas
sahf
in
mov
and
pushf
fadd
jg
stc
repz
pop
pop
sbb
jb
test
jb
adc
in
nop
lods
xor
jno
mov
jnp
jmp
ss
in
in
jmp
xchg
jp
fst
cld
cmp
mov
dec
xor
scas
sbb
mov
cld
xor
push
leave
dec
jmp
jle
mov
xchg
sub
add
loopne
sub
sub
xor
jp
dec
fidivr
cwde
loope
(bad)
mov
xchg
jae
sub
fs
mov
in
jnp
xor
inc
xchg
icebp
push
mov
out
add
cdq
call
imul
outs
xchg
movs
xchg
jbe
ins
stos
neg
scas
mov
ins
test
pop
fnstcw
out
sti
xchg
cmp
mov
adc
rcr
mov
mov
je
jae
mov
mov
jb
mov
aad
ret
inc
(bad)
shl
push
mov
scas
fstp
dec
jp
stc
mov
cmc
dec
stos
dec
xchg
or
xchg
add
movs
std
fs
jae
jp
fs
dec
clc
cmp
(bad)
imul
pop
mov
jle
mov
pop
scas
(bad)
fadd
xchg
dec
pop
cmp
fisubr
fnstsw
adc
and
in
pop
ret
mov
fadd
in
add
jp
mov
dec
pop
lock
mov
add
inc
in
nop
pop
fisubr
lds
adc
popa
adc
rep
imul
and
test
inc
lds
jbe
enter
cmps
dec
je
sub
fs
push
cs
addr16
daa
add
or
(bad)
pop
repnz
adc
adc
mov
adc
sar
loopne
push
pop
dec
fadd
cmp
adc
loop
add
test
jp
outs
or
outs
movs
sub
dec
xor
mov
add
out
mov
dec
fcmove
in
xchg
cmc
push
call
out
jle
cmp
(bad)
(bad)
cdq
xor
mov
shl
rcl
mov
cmp
aaa
sub
dec
jbe
addr16
and
dec
jp
mov
mov
dec
(bad)
xor
(bad)
fst
and
add
fsubr
push
push
jns
daa
or
jmp
mov
scas
jmp
push
outs
aad
adc
(bad)
push
sbb
xor
adc
iret
hlt
ret
outs
test
or
sub
ret
inc
es
inc
cmp
jmp
int
out
inc
xchg
adc
dec
and
scas
pop
fsub
aaa
mov
clc
ret
adc
(bad)
adc
rcr
jae
cld
out
xchg
scas
gs
fs
jl
sub
div
int3
mov
add
push
fwait
addr16
adc
sub
ins
icebp
sbb
ss
push
pusha
adc
test
cmp
mov
sbb
xchg
leave
stc
xor
adc
stos
sub
sar
mov
sbb
popa
stos
fldcw
push
clc
mov
or
loop
fimul
push
dec
rcl
xchg
push
or
push
shl
mov
mov
daa
adc
lds
ins
test
jae
mov
sbb
ret
add
lods
lds
xor
fdivrp
rcl
sub
and
and
push
es
mov
jne
stos
add
inc
dec
dec
adc
fst
(bad)
cdq
cmp
repnz
push
lahf
mov
into
stc
ror
jnp
xchg
or
jle
jmp
fdivr
push
sub
mov
fimul
das
inc
lods
or
(bad)
movs
inc
jecxz
lahf
aaa
push
pop
mov
add
mov
mov
xor
(bad)
mov
leave
or
pushf
dec
inc
mov
add
adc
or
dec
mov
inc
pop
fst
mov
loope
push
test
in
cs
xchg
jns
mov
jmp
imul
add
bnd
jmp
(bad)
pop
dec
jmp
lods
retf
add
xor
mov
fld
into
xor
cmp
push
(bad)
test
imul
popf
or
mov
mov
(bad)
push
lock
mov
xchg
inc
or
fsub
sub
pop
popf
fmul
or
nop
cli
std
push
xchg
int3
test
mov
repz
dec
data16
mov
sub
jbe
and
in
push
retf
jmp
lods
xor
aad
icebp
add
mov
mov
sar
scas
pushf
mov
xchg
icebp
mov
add
loop
jae
mov
dec
inc
into
idiv
sub
sahf
mov
enter
jmp
cmp
pop
jmp
jmp
cli
mov
adc
sbb
mov
sbb
sub
fild
pop
mov
push
cmp
inc
sbb
loope
mov
aaa
pop
test
inc
out
dec
fdivr
pop
add
mov
jl
arpl
sbb
fmul
or
mov
lods
add
jle
mov
and
cmp
in
jmp
jno
inc
sub
and
cld
fwait
inc
pop
jmp
(bad)
ds
(bad)
jg
rol
outs
inc
jo
and
das
aas
xor
cmp
inc
mov
test
sub
adc
add
rcl
aam
xchg
sub
pop
popf
sbb
lahf
jno
mov
out
push
pop
add
bound
pop
jns
inc
adc
mov
ins
sub
fsubr
outs
sbb
mov
xchg
xor
cwde
or
lock
cmp
add
es
mov
cmp
and
cmp
push
cdq
mov
jmp
jb
loop
push
aaa
in
adc
mov
cmp
cmp
pop
xchg
mov
jp
test
in
jle
enter
xor
in
pop
loop
or
cmps
ins
xchg
mov
or
fidiv
dec
adc
mov
mov
(bad)
shl
jmp
xlat
sbb
cmp
inc
and
leave
test
push
shl
xor
cwde
push
cmp
mov
sbb
outs
shr
shl
cmp
iret
adc
pop
mov
mov
add
shl
(bad)
push
movs
mov
jp
es
jo
push
dec
pop
(bad)
and
jge
sub
xlat
fdiv
inc
icebp
aas
mov
psubb
sbb
or
push
addr16
mov
jmp
and
pop
data16
push
jmp
or
jmp
mov
call
adc
in
scas
or
sbb
mov
jnp
dec
xor
sbb
pop
pop
(bad)
sbb
add
cmp
cmp
sbb
mov
les
xchg
mov
je
fisubr
jne
test
int3
out
push
push
add
add
fiadd
movs
dec
mov
dec
aam
adc
adc
pop
outs
pop
retf
mov
push
shl
pop
lods
inc
daa
or
loope
std
xchg
sar
mov
enter
cdq
xchg
push
mov
fimul
cmp
mov
fcom
pushf
enter
jae
leave
jae
cli
lahf
dec
sbb
mov
sub
adc
or
jge
inc
daa
xchg
jge
stos
sub
sub
aas
jae
push
shl
xchg
xchg
push
mov
test
dec
sub
sbb
fs
fcomp
lods
push
fiadd
call
call
inc
inc
adc
pop
jmp
fs
dec
xchg
cmc
ficom
sti
test
inc
dec
cmp
fidivr
and
mov
retf
addr16
mov
dec
dec
inc
enter
mov
cmp
xor
ror
push
imul
xor
inc
int3
mov
neg
dec
ja
sar
push
fmul
inc
out
stc
mov
sar
add
or
cmp
cmps
inc
inc
stos
rcr
and
aas
xchg
add
push
stos
mov
ins
out
push
xchg
popa
inc
dec
cli
add
mov
dec
cmps
inc
lar
dec
mov
mov
or
out
adc
adc
or
int
call
stos
bound
mov
das
sbb
gs
jp
pop
xchg
and
adc
icebp
out
push
aas
inc
pop
je
mov
push
pop
in
lods
mov
shl
test
cmps
mov
sahf
int
mov
dec
mov
out
leave
cmps
std
dec
test
pop
call
mov
jns
dec
outs
push
sbb
cdq
int3
sub
jbe
shl
inc
and
mov
xor
mov
pop
pop
pop
inc
pop
cmc
test
mov
inc
ror
add
retf
repnz
gs
sub
repz
inc
xchg
hlt
mov
xor
iret
dec
ins
stos
out
sub
jo
sar
lock
jmp
pop
(bad)
lock
jl
push
xor
aad
cmp
outs
mov
aam
arpl
jg
lahf
in
add
int
jmp
fwait
xor
pop
in
mov
lahf
sub
xchg
fild
push
sbb
xor
ficom
and
shr
ret
pop
test
push
jns
adc
ret
(bad)
cvtps2pi
mov
test
stos
fwait
loopne
mov
cmp
ret
mov
ss
popf
or
loope
and
sahf
xor
jecxz
(bad)
int3
lea
push
ja
sbb
sub
loop
xor
imul
xchg
push
xchg
loop
adc
mov
data16
sbb
stos
add
test
add
mov
stos
mov
pushf
sub
ret
pop
ror
repnz
mov
das
outs
push
shr
clc
mov
fcomip
js
enter
mov
add
push
out
inc
add
cmp
movs
push
xchg
inc
push
mov
daa
enter
icebp
push
or
(bad)
mov
stos
leave
xchg
fcomp
mov
shl
je
lods
xor
add
rcr
ja
and
ins
ret
xor
ret
xchg
adc
adc
push
fst
(bad)
or
pop
mov
sbb
popa
jno
(bad)
aam
mov
out
dec
push
jae
(bad)
fld
sbb
pop
in
ja
mov
and
xor
loope
not
mov
sub
push
pusha
jl
mov
jae
out
iret
repnz
xor
push
int3
nop
xchg
loope
popa
shr
mov
outs
jno
xchg
outs
cmp
aad
ja
aam
jge
push
pop
dec
pop
adc
xor
mov
mov
out
push
sahf
int3
in
out
jae
jge
xchg
les
clc
lods
into
out
sbb
jo
xor
add
push
aam
(bad)
jp
pop
push
lahf
shl
ror
mov
or
add
jmp
xchg
ret
and
(bad)
fcmovnbe
xor
jmp
es
jge
mov
or
pop
pusha
stos
into
add
xchg
inc
dec
and
inc
pop
sbb
add
push
data16
repz
push
call
movzx
push
mov
rcl
pop
sub
int3
aas
wbinvd
gs
cld
leave
not
cmp
push
sbb
push
xchg
add
xchg
push
dec
out
sbb
adc
pop
fwait
loope
pop
push
shl
inc
push
cmps
jno
fdiv
cmp
outs
xor
out
stos
call
or
mov
sub
cs
stc
cdq
push
sub
sub
xchg
sbb
sub
jbe
popf
outs
push
popa
sub
(bad)
fbstp
sahf
movs
xlat
in
and
inc
inc
bound
push
cmc
mov
fcom
aaa
addr16
and
fdivr
inc
xchg
mov
hlt
gs
aas
test
xchg
(bad)
adc
dec
in
aam
jge
icebp
push
sbb
fcom
dec
mov
add
mov
shl
std
js
xchg
push
jns
js
scas
pop
cmp
es
(bad)
xchg
push
mov
pop
jecxz
or
xchg
cmp
mov
movs
sbb
inc
jecxz
out
and
dec
fs
aas
jbe
je
adc
mov
adc
sub
mov
pop
xchg
pop
fwait
in
jb
mov
add
add
dec
sbb
mov
cmp
mov
dec
mov
cmps
shr
push
push
mov
loop
lock
inc
xor
adc
mov
mov
sub
sbb
pop
mov
mov
popf
cdq
je
ret
push
cmp
in
jl
mov
int3
xchg
inc
shr
dec
push
repz
lods
js
aad
xchg
sub
and
inc
loopne
jns
xchg
jle
inc
push
fwait
rcr
or
test
repnz
test
xchg
jns
cwde
inc
jns
gs
test
push
push
and
pusha
data16
mov
fmul
ss
jmp
push
out
arpl
add
test
mov
daa
retf
xlat
inc
adc
jecxz
sub
mov
lods
push
xor
rol
adc
jbe
and
loopne
popa
pop
jno
xor
xchg
cvtps2pd
ins
shr
sbb
push
xor
dec
in
inc
jl
cmp
sub
cld
push
pop
out
mov
lea
dec
cmc
mov
and
dec
jle
pop
mov
jmp
cli
call
push
or
mov
add
adc
(bad)
imul
loope
pop
jp
pop
mov
mov
adc
outs
int3
inc
mov
mov
jne
imul
iret
data16
jbe
mov
jmp
jo
mov
inc
ins
add
scas
mov
into
jmp
clc
js
jae
push
mov
mov
inc
and
xchg
popf
out
movs
pop
inc
pop
cld
pop
adc
jnp
xchg
dec
sub
mov
aaa
aam
or
xchg
data16
xor
fimul
jb
scas
jo
push
xchg
(bad)
popa
(bad)
int
sbb
into
cwde
aaa
(bad)
xchg
adc
les
fisubr
xor
fs
(bad)
jmp
pop
or
(bad)
(bad)
xlat
push
in
sti
icebp
jnp
(bad)
jl
cmp
and
xor
push
test
popa
hlt
int
in
sbb
retf
mov
lahf
test
gs
cld
mov
mov
pop
(bad)
sbb
mov
cmp
ret
xor
or
mov
cmp
lods
fnstcw
xor
int3
mov
mov
movs
lods
in
mov
sbb
imul
sahf
bound
icebp
push
daa
arpl
out
inc
es
xchg
mov
in
mov
xchg
nop
(bad)
(bad)
shl
inc
push
ficom
cmp
jge
fwait
xor
dec
sbb
sub
jo
int3
add
outs
and
fadd
mov
popf
sub
inc
mov
test
push
repnz
cmp
ficomp
fistp
cld
(bad)
mov
shr
int3
call
xor
mov
xor
iret
xor
repnz
lock
mov
fild
mov
in
aad
sub
xlat
imul
pop
jns
mov
sub
jecxz
je
jno
jae
pop
icebp
push
jo
out
mov
mov
ficomp
push
inc
xchg
mov
or
call
and
repz
sub
mov
into
push
retf
test
aad
int3
jo
clc
xchg
jmp
mov
lahf
xchg
movsx
aam
sub
jno
into
sub
test
push
sub
(bad)
cmc
add
push
mov
or
mov
jg
inc
popf
or
mov
push
inc
add
daa
leave
fidivr
outs
arpl
mov
add
in
and
dec
sahf
jmp
pop
jb
mov
mov
mov
fs
in
inc
les
xchg
ret
sub
pop
pop
es
iret
or
dec
push
sar
inc
shl
xor
loope
outs
mov
adc
xchg
stos
or
add
das
mov
push
leave
mov
xchg
push
mov
adc
sbb
clc
cwde
cmps
(bad)
add
retf
pop
pop
data16
sub
xchg
les
addr16
xchg
in
xor
push
bound
call
cmps
fimul
pop
xchg
lds
xchg
out
push
xchg
push
test
aaa
mov
pop
movs
push
bound
push
sub
test
ret
or
fmul
mov
xchg
mov
sbb
mov
and
add
je
xor
mov
retf
pop
xchg
fwait
or
mov
or
mov
xor
jecxz
dec
mul
and
test
xor
mov
mov
pop
sub
fadd
lahf
sbb
mov
and
(bad)
sub
leave
mov
in
sbb
(bad)
in
scas
dec
ret
xor
es
push
sub
push
mov
add
sahf
jae
out
or
stos
arpl
hlt
fmul
icebp
shl
sbb
sub
mov
mov
pusha
or
movs
mov
out
push
movs
xchg
xor
cmp
sub
or
adc
jns
shr
outs
fist
xor
mov
pop
aad
dec
in
add
lahf
jg
repz
into
push
test
loope
arpl
ja
cmps
rcr
pop
shr
push
into
nop
xchg
pop
and
dec
stos
add
leave
and
xchg
mov
scas
adc
push
addr16
es
push
cmp
push
sbb
pop
shr
add
xlat
arpl
imul
(bad)
into
push
mov
mov
ret
push
sub
or
lods
mov
loop
push
cmp
test
imul
mov
punpcklbw
retf
adc
and
sub
mov
je
inc
mov
rcr
int
lds
add
imul
dec
push
scas
xchg
cmp
aad
cdq
fidiv
jno
jge
dec
jb
and
xchg
icebp
dec
repz
xchg
aas
cmps
cld
sbb
fdivr
cdq
mov
fsubr
dec
cs
jnp
mov
cmps
fs
popf
sbb
cmp
push
punpckldq
addr16
gs
cmp
das
adc
xlat
xchg
shl
outs
out
and
dec
jp
inc
fstp
cmp
pop
sahf
(bad)
pop
mov
jo
mov
test
xor
cs
xchg
scas
pop
push
imul
in
int3
aad
mov
scas
out
push
fisub
adc
push
(bad)
loop
mov
cs
mov
dec
rcl
add
push
or
push
leave
mov
push
aas
push
daa
and
cmp
jo
outs
in
into
push
fsubrp
dec
xor
adc
mov
cmc
xor
and
push
fstp
push
jne
jno
mov
xor
push
into
pop
mov
xchg
(bad)
fld
dec
cdq
jns
mov
inc
xchg
and
rol
xchg
or
in
mov
test
lea
mov
cmp
jo
mov
repnz
retf
mov
mov
fdivr
or
push
jb
into
sbb
aad
and
jge
jle
cs
lock
and
adc
pop
jp
in
push
sar
mov
ds
ins
fsub
add
pop
or
leave
inc
in
fidiv
pop
jo
dec
mov
scas
dec
(bad)
loopne
(bad)
jmp
push
dec
icebp
fs
dec
adc
imul
mov
aad
inc
xor
pop
push
popf
shr
cmp
push
push
dec
not
repz
cmps
jp
jecxz
sahf
cwde
jg
rcr
jecxz
das
imul
fucomi
or
ins
mov
cmc
stos
xchg
mov
dec
mov
dec
jge
add
jecxz
sub
ror
test
cdq
jl
dec
sbb
cmc
loopne
cli
cmp
sub
pop
mov
sets
test
outs
inc
scas
ret
cs
pop
inc
push
movd
hlt
push
(bad)
jmp
icebp
xor
push
mov
dec
loopne
mov
jmp
aam
jne
push
inc
out
iret
mov
and
adc
dec
push
pop
mov
(bad)
out
sub
ret
ficom
add
aas
add
je
leave
mov
sub
jge
mov
mov
in
pusha
pop
push
retf
or
mov
adc
dec
ror
pop
hlt
or
adc
pusha
mov
jno
cmp
movs
stos
(bad)
test
jae
loope
jle
loop
pushf
lods
bound
xor
push
xchg
stc
lods
lock
pop
test
cmp
dec
adc
mov
fisubr
pop
pop
push
jnp
xor
lods
jmp
iret
mov
jg
in
popf
jns
movs
test
jns
mov
leave
cmp
mov
jne
jl
movs
mov
mov
ds
repz
aas
mov
(bad)
push
enter
mov
stos
es
and
ds
loope
sub
mov
inc
test
outs
outs
jnp
jecxz
xor
mov
pop
mov
add
aad
xor
test
mov
dec
popa
push
and
mov
lods
cmp
sbb
inc
cmp
std
mov
loope
mov
xlat
or
sbb
pop
inc
shl
or
pop
mov
cmp
mov
psubsb
pop
and
daa
or
rcr
mov
mov
inc
fdivr
jnp
pop
cmp
lods
loopne
dec
inc
fdivrp
mov
cmps
(bad)
popf
fisubr
adc
pop
scas
add
(bad)
sar
fcom
xchg
inc
int
mov
test
cmp
stos
mov
shl
jmp
cmp
pop
int
mov
into
jne
pop
jo
enter
mov
inc
stc
jecxz
jmp
or
pop
xor
bound
mov
mov
sti
imul
loope
movs
xor
dec
fisubr
pop
jno
adc
neg
jmp
imul
jne
mov
les
inc
cmps
jo
cmps
lea
in
outs
nop
pop
(bad)
fs
push
sbb
aas
daa
inc
adc
and
fs
adc
(bad)
push
aad
add
in
jmp
movs
push
imul
dec
inc
scas
pop
fst
pop
pusha
aas
sub
imul
sbb
inc
out
mov
pop
imul
sbb
ins
push
fs
sub
jmp
xor
je
hlt
aaa
jb
add
shl
ret
mov
test
or
jo
cwde
dec
lods
ficomp
adc
xchg
aam
jg
mov
lea
and
movs
scas
outs
mov
sbb
pop
mov
into
fstp
jo
out
repz
sub
mov
movs
shl
lock
out
sub
sub
stos
push
call
sub
dec
je
imul
mov
imul
or
fs
out
nop
retf
sbb
dec
dec
push
cmp
and
ficom
fisttp
test
mov
retf
fiadd
adc
pusha
pop
shl
xchg
cli
nop
imul
cmp
dec
test
(bad)
mov
imul
aam
icebp
cmp
fisub
popf
cli
repz
add
fs
les
jl
bound
sbb
mov
(bad)
or
xchg
cld
ins
xchg
addr16
leave
je
xor
pop
popa
ret
pop
cmp
mov
es
cmp
call
mov
fmul
dec
add
and
shr
dec
test
sbb
mov
jbe
repz
xchg
fcmovne
push
imul
mov
and
xchg
xchg
cld
(bad)
sbb
cmp
push
or
adc
loope
in
xor
sbb
mov
jae
mov
pop
sub
pop
cmc
jno
mov
xchg
icebp
arpl
pop
or
pop
adc
pop
push
loope
dec
cmp
gs
inc
es
sub
mov
cmp
adc
inc
mov
xchg
push
and
add
inc
imul
cmc
enter
outs
cwde
lods
inc
inc
jns
add
xor
stc
mov
outs
xchg
or
test
popa
(bad)
sbb
sub
mov
into
out
push
jb
in
int3
das
mov
cmc
popf
and
sbb
mul
retf
jmp
mov
xchg
add
aaa
in
mov
aam
(bad)
xchg
pop
retf
lahf
stos
fist
in
aam
mov
sub
scas
mov
sub
(bad)
push
adc
mov
imul
iret
outs
pop
xchg
push
imul
call
inc
adc
ret
xchg
mov
les
or
jmp
jae
hlt
std
push
dec
retf
inc
jge
mov
jmp
push
adc
pop
xor
and
mov
dec
add
add
cmp
fadd
icebp
push
mov
jge
inc
(bad)
(bad)
mov
cld
mov
jg
adc
jae
(bad)
lahf
shl
lods
arpl
cmps
scas
lods
xchg
or
pusha
neg
imul
xchg
std
sti
popa
popf
iret
scas
int
push
in
xor
xor
xchg
and
adc
sub
adc
ds
jp
test
inc
ins
adc
adc
jle
xor
mov
pop
cmp
pop
add
imul
jp
shl
adc
arpl
cmp
jl
add
adc
pop
stos
jnp
fisttp
ss
daa
xor
sub
sub
or
jmp
ins
xor
lahf
loope
dec
dec
pop
pop
add
inc
dec
jae
(bad)
mov
jmp
pop
out
(bad)
stos
retf
mov
into
das
push
jb
xor
inc
xchg
int
cmp
or
xchg
iret
pushw
jecxz
(bad)
sar
js
fstp
sub
sub
pop
inc
push
xchg
pop
cmp
mov
sbb
pop
jle
cli
jl
inc
loop
xchg
and
mov
(bad)
jecxz
into
xlat
cmps
mov
cmps
xor
rcl
jns
sbb
bound
dec
lock
xchg
shl
mov
sub
fbld
retf
mov
loope
dec
(bad)
mov
scas
call
mov
rcl
cmp
scas
aam
xor
vpsrlw
test
iret
pop
sub
pop
sahf
mov
jecxz
mov
and
int3
xchg
mov
ins
shl
lods
in
enter
pop
xchg
mov
ds
dec
retf
fld
mov
ss
xchg
jne
cdq
in
cmp
cdq
bound
mov
lock
icebp
add
jl
out
jg
retf
xchg
ret
sub
nop
sub
retf
cli
pusha
add
fsubrp
push
dec
push
stos
addr16
and
ss
cmps
out
pop
jns
inc
popf
jle
or
sbb
dec
sar
sbb
out
popa
sbb
call
ror
dec
push
or
inc
cmc
test
sti
ret
sub
dec
cs
bound
mov
xchg
dec
sbb
fnstsw
test
cmc
xchg
sbb
in
and
jecxz
aas
push
popa
add
test
popf
push
dec
outs
rcl
pop
aas
mov
jo
adc
ins
lods
test
rol
cwde
inc
(bad)
and
add
xchg
dec
mov
and
fidiv
pushf
jb
jp
stos
out
push
cwde
sub
fild
add
jl
push
sbb
cmp
fwait
js
sub
cmp
cwde
jle
nop
mul
xchg
repnz
cdq
jns
retf
(bad)
jmp
sar
mov
mov
cmp
sar
inc
cld
lahf
into
into
scas
mov
mov
jae
adc
add
push
in
jnp
pop
push
daa
fcmovbe
pop
sbb
sbb
call
std
das
ins
ins
cdq
ins
and
jl
mov
dec
repz
sub
and
mov
clts
push
xor
adc
xor
push
add
jb
inc
cmp
lea
add
sub
cmp
imul
scas
jle
(bad)
mov
(bad)
in
sar
add
mov
pop
mov
inc
sbb
push
fisubr
xchg
sbb
sti
data16
mov
mov
arpl
into
arpl
xchg
pop
push
add
cmp
jae
es
bound
dec
repnz
ss
ret
scas
and
mov
pop
xlat
xchg
mov
leave
lea
or
cmps
outs
push
je
fs
xor
and
push
aas
cmp
aas
xchg
vmaxpd
cmp
or
inc
mov
mov
adc
pop
mov
sbb
sbb
call
retf
dec
(bad)
jle
jae
pop
cmp
mov
inc
sub
or
push
rol
std
scas
sbb
cwde
cmps
daa
jl
mov
loopne
aam
inc
mov
cmp
mov
dec
sbb
mul
rol
arpl
(bad)
mov
stc
jne
shr
xor
push
loope
cmc
sbb
pop
pushf
and
adc
push
outs
sti
ret
test
imul
lods
push
(bad)
push
aam
sub
pop
mov
outs
xor
punpckldq
push
sbb
pop
ficom
cmps
imul
imul
or
adc
out
fs
enter
sub
cs
scas
in
sar
in
ins
fcom
dec
std
or
data16
cs
fidiv
cld
adc
fimul
in
fldcw
rol
and
ja
fldcw
mov
neg
test
pusha
data16
pop
mov
pop
repnz
push
cmps
mov
pop
int3
push
out
sub
mov
and
in
mov
pop
dec
sbb
movs
jne
fild
xor
std
(bad)
mov
sbb
movs
ds
mov
add
cwde
mov
adc
xchg
ret
push
les
stos
les
je
sub
pop
cmps
pushf
add
outs
jmp
jmp
cdq
mov
jae
aaa
hlt
dec
fwait
call
cld
xchg
adc
inc
outs
add
mov
mov
test
popa
jnp
arpl
adc
cli
mov
sti
dec
fld
aad
hlt
imul
fsubr
inc
inc
test
jb
adc
ror
gs
inc
mov
icebp
jmp
push
cs
icebp
adc
mov
xchg
add
mov
into
out
adc
jge
dec
inc
stos
sbb
lahf
jmp
cmp
mov
repnz
or
icebp
(bad)
sti
add
inc
jo
sar
mov
or
push
mov
outs
xor
call
xor
or
fucomip
mov
cmps
div
shufps
jns
lea
ja
fcom
scas
mov
into
push
xchg
mov
int
cmp
add
mov
adc
and
jp
push
inc
or
xor
pop
popa
inc
jge
sbb
jecxz
and
pushf
sub
jg
mov
jmp
jmp
adc
fisub
fisttp
add
sub
sub
aaa
mov
test
fsubr
stc
mov
leave
in
lds
adc
into
stos
stos
xchg
loope
and
lock
ins
push
push
clc
push
repz
pop
push
repnz
pop
pop
pop
jne
sbb
pop
call
add
and
cmp
movs
loop
adc
sub
xor
test
jle
and
test
pop
ins
cmps
popf
mov
adc
les
js
jmp
hlt
push
fs
and
inc
inc
cmp
std
ss
popf
in
in
mov
test
popf
jmp
pop
add
jno
mov
mov
fs
mov
xor
ins
cmc
cmp
push
stos
xchg
scas
push
cmps
mov
mov
ja
sti
inc
call
bound
cmp
fidiv
scas
mov
xchg
mov
sahf
jmp
jno
out
add
jg
sbb
adc
(bad)
xchg
in
or
je
repnz
inc
jmp
call
dec
cmp
jle
out
jbe
add
fistp
pop
inc
(bad)
sbb
nop
sub
aas
sub
loop
fild
push
movs
ret
out
(bad)
(bad)
lock
outs
inc
and
loopne
and
cmp
cmp
jne
pushf
loop
fmul
(bad)
ficom
scas
shl
idiv
fsub
(bad)
and
sbb
enter
jmp
in
mov
sbb
int3
(bad)
into
aaa
and
jecxz
or
mov
xchg
pop
cdq
xlat
mov
dec
scas
jno
stos
mov
(bad)
repnz
lahf
fadd
jnp
and
push
data16
lds
cwde
mov
push
rol
mov
ins
mov
ror
clc
imul
pop
div
adc
fmul
push
sub
jo
sub
stos
fadd
rcr
ret
sub
push
dec
adc
call
rcl
jmp
mov
lahf
add
outs
mov
inc
outs
sti
inc
jb
mov
(bad)
aaa
mov
inc
pop
iret
sub
das
push
push
pop
xor
mov
outs
adc
outs
mov
aas
ins
adc
cmp
or
fisub
clc
jg
and
imul
pop
(bad)
jl
in
nop
jno
dec
mov
scas
mov
xchg
and
rcl
pop
inc
cmp
stc
sub
fiadd
mov
addr16
dec
fcom
cmp
mov
pushf
dec
mov
bound
fist
xchg
mov
inc
outs
int
aad
jp
ret
clc
jmp
ror
aam
loope
cmp
pop
iret
mov
and
and
fwait
jb
push
outs
push
mov
aas
mov
pop
mov
(bad)
daa
sbb
add
imul
arpl
int3
repz
fyl2x
mov
push
jmp
adc
out
push
retf
scas
xlat
in
test
mov
mov
lahf
adc
inc
(bad)
adc
(bad)
fwait
das
sub
cmp
test
ds
pop
cmp
pop
and
shr
push
or
dec
dec
pop
cs
sbb
rcr
xlat
cli
pop
dec
ins
scas
call
push
sbb
dec
imul
mov
adc
cmp
in
jae
jl
jno
push
push
scas
shr
mov
push
xchg
mov
xchg
sub
mov
add
test
icebp
and
mov
adc
(bad)
jns
ins
clc
cmc
lods
stc
cmp
jmp
jge
ja
inc
pop
enter
xor
mov
lahf
call
mov
sub
stos
sub
mov
ffree
jg
mov
mov
stos
xchg
xchg
test
and
xchg
mov
push
cld
stos
cmp
jmp
sahf
sub
shl
ds
clc
repz
or
mov
fdiv
ret
rcr
sar
cmp
xlat
jmp
(bad)
aaa
mov
push
cmp
sbb
or
repz
adc
inc
push
repz
data16
loopne
in
scas
pop
and
cmps
mov
inc
mov
loope
in
(bad)
js
inc
push
cs
call
aas
cmps
adc
sbb
fisttp
call
or
icebp
loop
jae
into
lods
jo
icebp
sub
in
jae
(bad)
mov
push
push
push
dec
mov
pop
xchg
jle
mov
cmp
mov
mov
cli
retf
repnz
repnz
test
xor
cmps
push
fisubr
lods
mov
fild
test
dec
inc
sbb
loopne
rol
mov
mov
fsubr
mov
or
mov
add
fwait
out
push
das
add
sahf
aas
dec
aam
or
push
ins
mov
sub
leave
test
(bad)
daa
(bad)
pop
push
inc
dec
dec
adc
popf
in
jle
test
sahf
out
loope
cdq
sbb
cmc
push
idiv
inc
pop
and
cmc
push
aam
into
mov
add
test
jge
rcr
xchg
lock
dec
and
addr16
stos
jno
and
les
int3
mov
cmp
xlat
cs
inc
dec
mov
sub
hlt
lds
mov
pop
xchg
dec
jl
pop
sbb
xchg
pusha
push
pop
movaps
leave
sbb
xor
and
xor
dec
xchg
out
jmp
pop
adc
rdmsr
out
and
dec
lea
shl
test
pop
fs
sbb
aam
jge
mov
mov
enter
xchg
xor
inc
pop
dec
fwait
das
or
cdq
xchg
jns
js
adc
sbb
jge
(bad)
in
and
call
punpckhbw
push
sub
loope
lods
pop
sbb
mov
clc
loop
or
ja
leave
test
lahf
sub
cmp
xor
sbb
jecxz
mov
loop
js
inc
cmp
aam
aad
rol
dec
xor
scas
xor
mov
int
ja
mov
pop
and
or
pop
stos
or
inc
xor
loopne
call
sti
add
gs
cmps
test
sub
out
(bad)
lods
cwde
push
cmc
enter
cmp
ror
icebp
dec
jge
sub
dec
ss
inc
cmps
sbb
or
push
sub
add
jl
sub
push
imul
dec
stos
je
outs
pop
movs
in
loop
enter
enter
fbstp
inc
test
jns
add
loopne
ins
lock
cmp
dec
mov
pushf
ins
pusha
or
test
dec
ins
arpl
xchg
adc
in
test
imul
mov
lods
int3
test
inc
fadd
scas
cmp
xchg
pop
outs
cmp
hlt
xchg
(bad)
fld1
mov
mov
xchg
jl
mov
push
fs
les
nop
out
mov
rcl
sbb
push
int
fwait
add
jo
ja
mov
sub
sbb
jmp
iret
xchg
mov
sbb
nop
cld
mov
mov
cwde
out
mov
lahf
cmp
jo
pop
dec
aad
lds
rol
icebp
lods
leave
xchg
jg
fwait
js
es
and
add
and
push
outs
loopne
das
fmulp
addr16
lds
adc
fcomp
mov
add
lods
jb
(bad)
fmul
dec
push
push
ds
mov
push
add
das
jne
pop
mov
mov
sub
loop
xor
in
ja
cmp
adc
sbb
or
dec
xor
icebp
fs
stc
add
sub
dec
js
add
out
test
movs
xchg
imul
leave
push
mov
mov
fdiv
std
cli
ins
fs
sub
es
sbb
stmxcsr
xchg
cmc
or
mov
loop
or
in
fild
add
mov
pop
lods
sar
ins
js
cmps
in
push
test
jg
sub
pop
sub
arpl
inc
jle
and
cdq
les
and
mov
jp
cmp
jb
push
cli
jle
outs
add
sbb
stc
lods
mov
adc
cmp
cwde
je
cdq
sub
jnp
stos
arpl
imul
dec
shr
cmp
xchg
dec
and
jmp
addr16
xchg
fiadd
test
jecxz
scas
fwait
cmps
int
mov
mov
scas
ds
xchg
fs
repnz
inc
std
cmp
(bad)
fdiv
(bad)
mov
xchg
data16
mov
repnz
imul
or
and
sub
push
pop
repz
mov
(bad)
pop
ret
fnsave
xor
push
dec
test
call
movs
pop
int
das
(bad)
fldenv
mov
ror
add
sbb
sbb
mov
mov
sbb
retf
inc
or
push
sbb
les
jbe
enter
jb
cmp
mov
sbb
mov
mov
inc
retf
mov
jae
adc
jmp
push
ds
push
lods
cmp
jo
push
mov
(bad)
xor
adc
sbb
test
dec
clc
jne
dec
sub
ins
out
mov
sar
mov
(bad)
(bad)
out
pop
call
xor
arpl
add
iret
xor
mov
addr16
inc
add
mov
sahf
jg
jae
out
shr
mov
mov
sbb
lods
into
dec
ror
xor
popf
dec
aad
dec
add
aam
stos
lahf
(bad)
pusha
pushf
cwde
mov
cmp
jmp
je
cmp
adc
fsubr
or
mov
xchg
test
pusha
lods
retf
dec
call
xor
ins
mov
aaa
mov
ret
out
xchg
mov
leave
bound
jbe
cmp
shl
movs
scas
or
(bad)
repz
and
pushf
adc
add
movs
jne
mov
sar
gs
add
and
dec
mov
mov
xchg
test
jecxz
cmp
sub
and
mov
cmp
dec
mov
push
ja
addr16
bound
jge
and
jp
call
jg
retf
add
mov
xchg
clc
scas
mov
ret
daa
iret
lahf
xchg
ss
ret
movs
(bad)
mov
pushf
sar
loop
sub
and
push
ret
pop
(bad)
adc
in
and
cmps
mov
mov
adc
mul
mov
sbb
cmp
sub
pop
int
test
adc
sbb
test
xchg
sbb
loopne
sub
stos
lahf
sar
mov
iret
add
mov
jbe
cld
mov
push
(bad)
pop
sub
push
je
bound
jno
xchg
jmp
inc
das
(bad)
push
out
xor
sbb
push
pop
push
dec
test
cwde
cmp
cmps
sbb
push
add
mov
mov
js
cmp
rol
pusha
and
into
xchg
add
(bad)
cmc
inc
push
(bad)
adc
dec
pop
retf
jle
adc
and
mov
sahf
mov
sti
inc
add
in
cwde
xchg
mul
bound
jno
sub
xlat
jo
je
mov
xor
cdq
jne
mov
into
test
bound
mov
adc
jnp
arpl
pop
cmp
xchg
cmp
lahf
cmp
adc
sbb
add
addr16
les
int
mov
ins
sbb
xor
test
outs
leave
pop
jmp
sub
sar
mov
out
or
inc
jnp
call
push
in
out
push
cmp
out
mov
xor
jo
jbe
sahf
icebp
movs
aam
lahf
in
dec
inc
xchg
mov
ss
fchs
leave
pop
call
xor
fucom
and
fdivr
pop
sbb
pop
in
lock
or
mov
aas
sub
pop
in
retf
push
inc
add
or
mov
stc
retf
(bad)
jo
mov
daa
xchg
add
(bad)
mov
xchg
(bad)
jbe
fucomp
leave
es
ret
scas
adc
mov
fmul
repnz
sub
jp
jno
cmp
pushf
sbb
mov
retf
mov
std
ds
div
jecxz
inc
mov
data16
stos
add
jp
or
add
dec
and
int
push
mov
cwde
iret
sti
stc
mov
je
fstp
repz
loop
push
movs
outs
xchg
jno
fistp
xchg
xor
push
lods
loopne
ret
sbb
push
dec
sbb
and
sub
ins
in
div
(bad)
jo
inc
xchg
add
js
sub
aaa
test
xchg
lahf
mov
dec
or
mov
sub
test
or
sub
cs
push
or
pop
xchg
fwait
pop
sar
movs
cmp
push
cmc
push
pop
push
xor
mov
mov
adc
cli
mov
mov
or
aas
js
popa
mov
mov
add
gs
pop
mov
mov
cld
and
sub
push
dec
enter
mov
add
mov
not
popf
pop
jnp
std
pop
cmp
mov
cwde
leave
dec
sub
jmp
fidivr
fist
retf
jae
xor
pop
aaa
pop
mov
scas
aam
es
adc
adc
pop
retf
xchg
addr16
and
nop
jb
xchg
fwait
or
in
inc
jecxz
add
imul
shl
ja
ss
mov
mov
sub
sub
inc
jns
mov
jnp
mov
sbb
cmp
aam
repz
jmp
adc
mov
xor
xor
(bad)
sbb
imul
repnz
and
pusha
pop
icebp
pop
cmps
push
ret
mov
and
ret
ds
ret
add
std
movs
xor
sub
shr
push
retf
leave
les
push
sar
rol
pop
aam
ret
push
push
les
xor
std
lods
and
and
lock
jns
pushf
out
stos
xor
push
push
das
popf
hlt
or
add
or
or
mov
loope
xor
retf
iret
mov
inc
cmps
or
imul
sbb
retf
inc
xchg
cmp
mov
add
in
jae
xlat
mov
(bad)
(bad)
adc
cmp
jmp
or
retf
scas
(bad)
in
mov
inc
fcmovne
ss
test
sub
mov
pop
mov
xor
in
adc
mov
push
and
and
ficom
popa
sti
fucomp
std
call
xor
sub
adc
icebp
sub
loop
add
mov
fiadd
mov
call
es
mov
outs
mov
es
outs
lods
les
in
or
fiadd
fldenv
xchg
dec
sahf
mov
stos
mov
sbb
sbb
xor
lahf
imul
loop
xchg
test
push
xlat
push
sbb
sbb
call
mov
jo
fiadd
cmp
xor
in
cwde
mov
or
les
cdq
stos
sbb
aad
in
inc
sar
in
jno
push
lahf
test
jne
mov
dec
int3
adc
mov
bound
sub
mov
cmp
sbb
loope
push
pop
into
inc
leave
pop
mov
and
lods
mov
ret
outs
mov
push
push
pop
(bad)
sbb
jb
adc
repnz
out
mov
xor
(bad)
sbb
adc
out
xor
sub
push
jae
push
ds
jge
sub
dec
mov
imul
pop
or
test
and
push
pusha
gs
dec
gs
push
scas
cwde
mov
xchg
pop
inc
pop
sub
scas
ret
cli
and
mov
mov
in
and
jg
rcr
cwde
arpl
rcr
mov
mov
repz
add
and
jnp
mov
sbb
out
pusha
enter
pop
int3
ss
test
cmc
dec
aaa
sub
hlt
rcl
and
je
xor
retf
fdivr
and
lods
pop
inc
ret
adc
pop
nop
sbb
enter
xchg
cmp
push
iret
js
call
mov
or
mov
int
xchg
es
jg
jnp
and
aaa
fld
sbb
cmp
cmp
dec
or
out
jb
mov
pop
(bad)
loopne
and
adc
das
sub
dec
cld
pusha
dec
xor
test
aaa
adc
loope
mov
pop
push
pusha
out
movs
(bad)
dec
movs
mov
loope
arpl
mov
dec
or
jl
(bad)
jb
xchg
xchg
mov
rcl
mov
mov
fs
sub
outs
(bad)
mov
lahf
xor
scas
adc
cmp
jmp
pop
je
cmp
fld
mov
push
ds
xor
inc
push
aas
add
mov
mov
scas
jmp
inc
cwde
call
adc
fbstp
in
mov
push
outs
pop
mov
aad
jne
js
cs
adc
push
test
pop
pop
cmp
mov
push
out
cwde
test
pop
sbb
(bad)
jns
lods
mov
mov
add
push
shl
in
mov
cmp
dec
and
mov
cmc
dec
xchg
cld
sub
push
lods
ret
imul
xchg
das
stos
adc
idiv
fisubr
or
movs
rol
cmp
stos
push
xchg
ins
xchg
sahf
push
ins
dec
mov
cmp
test
and
push
pop
cmp
arpl
jle
or
push
mov
and
sbb
xor
lock
stos
inc
in
mov
pop
mov
ins
mov
outs
lods
jmp
xchg
into
(bad)
mov
mov
inc
push
mov
pop
jo
add
mov
(bad)
fsubr
cmp
fwait
int
mov
inc
push
jmp
cmp
addr16
cmp
inc
lahf
mov
shl
sahf
shr
ins
hlt
inc
push
daa
mov
inc
sub
cwde
adc
imul
sbb
cld
gs
adc
mov
adc
xchg
dec
in
sub
jmp
push
mov
icebp
jne
mov
cmp
hlt
lock
movs
aaa
cdq
mov
out
xor
not
jl
test
sti
imul
xor
add
ficom
sbb
div
nop
hlt
shl
xchg
cmc
fs
call
fsubrp
enter
call
fisubr
inc
es
jge
scas
fs
into
push
sub
mov
sub
sbb
dec
mov
jnp
xor
imul
cli
cs
fistp
pop
cdq
repz
adc
xor
adc
cmp
cmp
(bad)
xor
pop
pop
dec
jge
dec
arpl
jecxz
mov
jecxz
movs
popa
test
inc
shr
push
xor
pushf
bound
jmp
jecxz
popf
jmp
xchg
pusha
nop
push
sahf
push
cmp
mov
inc
mov
mov
sbb
inc
addr16
sahf
add
sti
sahf
inc
icebp
js
aas
mov
dec
cmp
xchg
call
and
sbb
fs
adc
(bad)
sbb
int3
fnstsw
mov
call
jmp
mov
jge
or
cld
pop
sub
inc
dec
or
dec
aaa
add
mov
add
sub
and
dec
or
sbb
pop
cdq
outs
cmc
jnp
push
and
cdq
xor
dec
sbb
sub
fs
call
adc
xor
retf
daa
inc
pop
inc
jle
aaa
fnstsw
add
js
inc
lahf
xor
mov
pop
push
push
jnp
push
adc
cmp
and
icebp
add
in
fwait
xchg
cmc
and
and
mov
add
cld
outs
cli
loope
test
not
and
mov
sub
mov
mov
pop
sbb
sti
sub
ins
xlat
loope
mov
jl
adc
clc
xor
das
mov
xlat
das
adc
cdq
in
ins
sahf
sub
jae
in
or
ret
mov
push
inc
push
add
arpl
xor
dec
std
dec
mov
leave
xlat
xchg
jns
les
ss
xchg
cmp
popf
mov
into
jmp
out
ror
ret
push
call
call
jmp
pop
inc
hlt
jbe
push
mov
and
ret
cmp
cld
cmps
retf
and
in
mov
jnp
int3
mov
cmp
cmp
xor
(bad)
sub
retf
adc
in
inc
inc
idiv
fisubr
cmps
pop
test
adc
xchg
mov
dec
stos
test
sahf
ficom
push
dec
js
cmp
pop
data16
sti
adc
mov
repz
cmp
mov
or
aad
mov
icebp
sbb
cwde
add
add
push
pop
sbb
stos
cmp
jne
cs
shl
push
cmp
add
sbb
dec
mov
jmp
pop
inc
cmc
pushf
pusha
pop
(bad)
inc
ret
jp
daa
loope
jno
fwait
sub
js
jge
into
mov
sub
jmp
inc
mov
or
pop
ins
ins
cdq
add
js
and
(bad)
loope
jmp
and
movs
imul
aam
sub
ja
jo
jmp
repnz
movs
nop
icebp
gs
adc
das
jg
adc
(bad)
idiv
and
movs
movs
pop
shr
out
(bad)
adc
aam
out
and
xor
sbb
lds
aaa
mov
cmp
xor
mov
popa
stc
mov
stos
jle
push
test
sbb
test
aad
push
fucomp
xor
fisttp
xchg
or
add
jp
or
in
out
xchg
dec
into
in
out
push
lods
push
pop
out
cmp
(bad)
mov
sub
dec
in
pop
cmps
pop
xchg
popa
mov
jmp
mov
inc
mov
xor
cmp
aam
in
add
sbb
and
jno
dec
xchg
cmp
into
sbb
stos
lods
jae
in
dec
cmp
jno
xor
push
jnp
out
loope
push
cmc
sub
movs
cmp
inc
mov
aaa
add
inc
fistp
out
and
ret
scas
xor
pop
mov
inc
xor
das
pop
or
stos
movaps
sbb
(bad)
pop
xor
fcmovnbe
in
call
pop
adc
push
mov
in
stc
movs
(bad)
int3
scas
add
pushf
loopne
push
sub
outs
loopne
cmp
xor
add
es
mov
aas
call
jmp
shl
jbe
or
mov
loop
mov
addr16
mov
mov
je
inc
mov
add
xor
cs
adc
inc
sub
or
push
dec
cmp
clc
adc
hlt
xchg
pop
sub
pop
fstp
adc
ret
iret
data16
stos
pop
sub
push
shl
and
dec
add
in
push
dec
loopne
cs
aad
or
cmpxchg
int
xor
inc
and
or
outs
xor
xor
jecxz
fdivr
sbb
fsubr
adc
gs
and
push
out
test
push
fdivr
sub
xor
and
loope
pop
outs
mov
jnp
mov
jmp
js
retf
sub
cmp
cwde
lahf
cmp
cmp
movs
and
mov
mov
movs
aam
pop
add
leave
(bad)
sub
dec
and
mov
xlat
idiv
sbb
daa
adc
daa
pop
lahf
adc
and
daa
mov
pusha
jmp
cmp
daa
dec
jmp
inc
jl
mov
out
rol
fs
xor
movs
movs
cwde
stos
inc
push
cmovbe
jecxz
sbb
mov
icebp
jge
jo
xchg
xchg
test
mov
inc
popf
jno
jbe
in
daa
xor
das
xor
jnp
adc
sub
mov
std
jg
cmc
mov
mov
pop
dec
test
rcl
ja
jp
jle
mov
jmp
mov
pop
cmp
jmp
xchg
iret
jecxz
xor
mov
cmp
mov
ins
sub
movs
ror
adc
mov
xchg
ins
lahf
cli
fisub
or
dec
in
sbb
jge
xchg
push
jnp
arpl
push
das
jnp
cmc
add
mov
jecxz
(bad)
fist
ins
adc
push
out
(bad)
mov
inc
rcl
ss
jbe
test
test
call
pop
mov
jae
sahf
arpl
sub
xor
pop
jmp
cmc
dec
lds
adc
mov
lods
fcom
repz
hlt
es
cld
cmp
sbb
pop
and
stos
add
sub
sbb
jae
or
xchg
mov
in
push
inc
xchg
add
outs
enter
jno
sahf
arpl
adc
inc
xlat
inc
rcl
xchg
imul
xor
mov
jecxz
jb
int3
fisub
sub
push
ss
mov
call
arpl
call
(bad)
dec
adc
sbb
and
aad
lods
mov
aad
fild
sub
test
out
inc
(bad)
mov
inc
ds
add
xor
mov
xor
pop
sub
push
sti
enter
sti
neg
mov
inc
std
dec
les
leave
push
cmp
loop
add
pop
dec
cmp
ja
and
mov
mov
mov
mov
and
mov
bswap
ja
imul
mov
push
cld
adc
xor
push
dec
ret
jno
popa
aaa
or
xchg
xchg
rol
add
retf
sbb
adc
mov
and
cmc
dec
push
clc
dec
jl
or
cld
inc
iret
sub
pop
aaa
cli
pop
and
hlt
nop
das
repnz
(bad)
nop
les
push
lahf
adc
mov
outs
mov
fsubr
sbb
add
retf
scas
jg
inc
jecxz
mov
std
out
xor
ins
sub
pusha
retf
mov
add
das
cdq
ja
mov
jnp
mov
(bad)
cmp
rcr
into
xchg
out
loopne
sbb
iret
xchg
pushf
mov
and
pop
fs
and
(bad)
push
dec
cs
pop
leave
dec
mov
std
cmc
dec
add
(bad)
mov
test
dec
xor
test
xchg
addr16
test
pop
sub
movs
sub
inc
jl
xor
push
rcr
imul
les
pop
lea
pop
(bad)
cdq
xor
push
scas
push
dec
xor
mov
xchg
cmps
pop
pop
inc
pop
xchg
add
jns
mov
inc
fldenv
scas
les
fsub
fidiv
sub
cmp
out
cld
xchg
mov
or
add
scas
rcl
iret
dec
inc
lock
(bad)
test
jmp
and
or
pop
sti
js
lods
out
ret
push
xchg
sub
xlat
mov
mov
fisubr
aas
or
gs
xchg
lds
jge
pop
jmp
pop
mov
leave
mov
or
or
(bad)
adc
in
cmp
call
jle
inc
adc
mov
sar
adc
adc
aad
jle
sbb
cdq
(bad)
loope
inc
inc
add
movs
repnz
outs
in
call
cmp
xchg
xchg
call
xchg
aaa
mov
pop
pusha
push
popa
fwait
sub
add
gs
inc
adc
cmp
push
pop
pusha
ja
mov
lahf
imul
jnp
movaps
rol
inc
adc
sahf
loop
push
mov
iret
xchg
popf
xchg
xchg
sar
jne
push
cmc
mov
into
inc
mov
in
pop
cmps
jp
pusha
retf
push
rcr
dec
lock
aam
std
xor
push
shr
ret
fist
inc
addr16
push
fistp
mov
xor
aas
jl
arpl
bound
(bad)
adc
mov
pop
mov
movs
and
fcomp
test
aam
in
dec
test
or
imul
mov
pop
xor
out
push
fcom
stos
xor
cdq
mov
fwait
les
jae
mov
out
shl
add
fcmovb
pop
ins
ror
jg
imul
xor
inc
inc
adc
and
adc
cwde
jmp
xchg
adc
xor
inc
sub
push
sbb
nop
cmp
adc
(bad)
cmps
jb
add
xor
fdivr
dec
outs
cwde
call
xchg
xchg
pop
test
daa
popa
sub
cmp
cmps
in
ret
retf
out
(bad)
and
(bad)
cli
call
cmc
push
int3
push
xchg
cmps
loopne
retf
jge
and
es
jbe
fchs
lahf
cs
sub
jae
fnsave
sbb
or
mov
popa
(bad)
or
adc
mov
and
leave
mov
mov
push
adc
lock
iret
dec
xchg
cmp
ds
mov
stos
test
cs
inc
sbb
data16
adc
js
stos
imul
repz
adc
fisub
(bad)
jmp
xchg
imul
mov
pushf
je
mov
fiadd
cmp
scas
or
pop
xor
xchg
stc
shrd
aad
cmp
out
mov
mov
and
dec
mov
push
xor
js
xchg
pushf
or
int
ss
and
xchg
(bad)
frstor
push
stos
xchg
aaa
(bad)
outs
jmp
jae
xchg
sti
in
inc
and
jl
call
popa
push
loope
loopne
mov
mov
xchg
aas
js
call
into
sbb
hlt
cmp
push
sbb
jl
sub
jo
xchg
in
mov
shr
sub
mov
mov
push
test
mov
aaa
cmp
add
xor
lods
add
test
je
mov
mov
push
stc
shr
nop
ror
nop
jmp
jmp
and
xor
lea
jecxz
mov
ds
test
xchg
or
cmp
aas
mov
ror
(bad)
data16
mov
ret
repnz
push
imul
fiadd
adc
mov
std
addr16
test
jmp
or
div
jno
or
jecxz
cdq
mov
mov
jne
scas
outs
ds
cmp
pop
cmp
mov
xlat
(bad)
sti
and
jle
jb
adc
(bad)
mov
jb
pop
dec
jmp
sahf
xchg
out
xchg
jl
(bad)
inc
dec
xchg
sbb
das
leave
je
sbb
shr
mov
fxch
sbb
sar
inc
(bad)
xchg
lock
test
adc
gs
les
sti
adc
daa
xchg
fs
fldz
shl
inc
arpl
ds
cdq
gs
push
fild
or
or
mov
push
sub
push
shr
aam
mul
jae
iret
in
ficomp
(bad)
xlat
cmp
enter
jae
ja
xor
stos
retf
mov
out
gs
cmp
jmp
sub
sbb
xor
xchg
shr
mov
dec
adc
(bad)
pushf
ja
imul
cmc
xor
and
(bad)
jg
mov
mov
push
dec
dec
in
js
jl
fsubr
push
pop
sub
mov
jne
push
ss
jo
mov
es
cdq
cmp
sahf
jne
ret
test
adc
fisub
jmp
mov
mov
push
mov
mov
cwde
fs
jae
mov
arpl
in
dec
xchg
int
neg
mov
std
or
lahf
mov
dec
xchg
pop
adc
jae
add
jb
jne
sbb
inc
out
xchg
or
mov
in
dec
mov
pusha
js
add
mov
inc
xor
lods
sti
inc
xor
into
mov
or
sti
and
nop
js
das
dec
adc
stos
jnp
call
stc
inc
out
pop
pop
out
push
pusha
cmps
jge
jp
or
or
push
inc
(bad)
dec
pop
sub
lods
pop
jg
les
or
mov
pop
lahf
cmp
pop
out
dec
(bad)
in
pop
and
cs
pop
pusha
adc
loop
xchg
(bad)
jnp
dec
jo
add
sbb
ret
inc
out
scas
sbb
sbb
add
push
icebp
sbb
pop
in
ds
(bad)
cli
adc
out
outs
jle
push
pop
cmp
jmp
jmp
arpl
mov
xchg
push
jb
inc
dec
mov
icebp
mov
in
repnz
xor
and
fwait
dec
aaa
es
retf
jnp
add
scas
je
or
aas
or
cld
xor
jae
ins
in
ja
lahf
outs
mov
dec
jo
nop
inc
jne
rcl
icebp
pop
outs
mov
add
mov
adc
and
aas
pop
daa
fwait
jp
data16
cld
lea
pop
jo
jb
stc
retf
mov
add
inc
ret
jmp
adc
rol
adc
dec
cmp
leave
xchg
out
or
and
xchg
cwde
sbb
push
xor
add
sbb
jne
or
cmps
xor
in
inc
test
pop
ret
cvtdq2ps
(bad)
in
ja
enter
leave
jg
jb
pop
aam
aas
add
dec
scas
dec
and
mov
(bad)
cmc
jge
fcomp
adc
ret
pop
fs
pop
xchg
mov
sbb
jo
xchg
loop
sahf
inc
fld
pop
js
adc
shr
retf
nop
fsubr
mov
add
jmp
into
inc
or
xchg
pusha
fidivr
fwait
mov
pushf
(bad)
mov
xchg
nop
xchg
or
push
jl
dec
je
js
pop
jl
jecxz
jbe
jae
imul
dec
pop
xchg
jnp
into
xchg
add
adc
mov
stos
cmp
int
ds
jo
sar
aad
inc
jl
das
imul
mov
out
sub
cmps
and
xor
pop
mov
xchg
inc
(bad)
fistp
enter
mov
int3
and
into
std
jle
dec
pushf
inc
and
add
pusha
rcl
mov
mov
retf
mov
(bad)
inc
lds
jl
jnp
js
inc
or
stc
pop
mov
scas
mov
sub
lods
cmps
popa
add
(bad)
mov
shl
mov
outs
adc
sub
xchg
pop
out
cmp
xor
ret
lock
retf
ss
add
outs
outs
ja
cs
xchg
enter
xchg
imul
sub
jmp
nop
loop
pop
xchg
retf
sahf
and
test
add
or
icebp
add
fidiv
xchg
sub
sbb
jnp
mov
inc
lea
cs
pop
test
mov
sti
repz
enter
xor
imul
psraw
push
mov
(bad)
ss
(bad)
adc
mov
mov
push
mov
jp
lahf
popf
dec
mov
stos
movs
push
pop
sbb
lahf
mov
nop
xor
jne
xor
dec
loop
stos
and
(bad)
sbb
push
jp
mov
out
lock
sbb
inc
mov
fwait
lods
inc
sub
in
and
cmp
lods
cmps
outs
pop
inc
sub
dec
popf
xchg
jb
cmps
push
mov
repnz
mov
mov
cmp
ror
loope
and
jle
cmp
mov
dec
adc
jl
outs
push
idiv
xchg
jmp
scas
xor
cs
mov
pop
add
fidiv
out
jmp
test
lahf
call
out
or
sub
and
pop
mov
push
mov
arpl
cvtps2pi
mov
ret
int3
mov
pop
mov
pop
popa
adc
mov
stos
and
sub
sar
sbb
(bad)
pop
dec
jne
call
nop
or
xchg
cmp
fnsave
sub
idiv
xor
ins
aas
ins
mov
out
gs
cmc
jnp
adc
fs
dec
ffreep
in
mov
cmp
cmps
scas
or
pop
popf
jbe
test
cdq
mov
cmp
cmp
idiv
int
mov
shl
loop
rcr
lock
das
gs
mov
pop
jmp
sahf
mov
adc
daa
out
jae
pop
pop
test
cmps
inc
xor
or
fnstenv
into
and
outs
push
(bad)
pop
pop
rcr
scas
int
mov
dec
dec
or
and
(bad)
sub
mov
dec
xchg
jp
idiv
xor
cmp
sbb
xor
jmp
add
not
out
into
imul
aas
cmps
cmp
jp
cmps
daa
cmp
inc
ret
jge
rcr
mov
pop
loope
(bad)
fdivr
int
jecxz
push
mov
(bad)
push
or
push
adc
daa
or
sbb
ds
jmp
or
je
rcr
mov
jg
jne
mov
stos
test
xchg
xor
jb
push
daa
neg
out
out
xchg
inc
cmc
mov
in
pop
fsub
mov
fbstp
sbb
cmp
fbstp
pop
test
iret
arpl
out
mov
sub
sbb
xor
test
mov
cmp
xchg
fcomp
stos
mov
sub
call
popa
cli
adc
test
pop
dec
in
retf
adc
or
dec
mov
mov
push
dec
xor
jg
in
ja
lea
lods
xchg
jae
push
pop
mov
inc
mov
dec
repnz
out
lds
repz
cdq
shl
mov
push
stc
repz
jbe
fdivr
in
outs
ins
pop
mov
mov
and
sti
push
or
add
or
xchg
adc
retf
push
jae
inc
pusha
(bad)
push
in
(bad)
aad
mov
add
dec
(bad)
add
lock
mov
test
ret
dec
cmps
cld
ins
movs
ror
dec
clc
add
in
(bad)
into
push
aad
iret
std
sbb
pop
(bad)
popf
call
loop
xchg
inc
bound
jnp
int3
popf
fwait
pop
pop
std
push
xchg
cmps
sub
movs
ds
test
stos
iret
add
loopne
stc
push
(bad)
out
xlat
adc
mov
push
push
aas
mov
nop
push
sub
or
mov
pop
xor
adc
fstp
and
ins
scas
push
sub
adc
movs
(bad)
xor
ret
jno
lods
loopne
std
aas
xor
sbb
or
push
mov
jmp
jge
daa
shl
cmp
scas
xchg
in
retf
cmp
mul
in
test
outs
mov
sub
or
mov
cwde
xor
pop
ror
call
mov
inc
sub
daa
mov
loope
dec
(bad)
add
or
fild
push
add
enter
or
nop
push
ds
stos
rcr
xchg
jbe
cmp
lea
les
inc
jmp
push
out
test
int
mov
lea
out
jo
fst
std
in
psubb
adc
jnp
mov
xor
xchg
movs
mov
and
ins
cmp
add
push
popa
cmp
mov
add
lock
pop
adc
and
xchg
inc
mov
int
dec
mov
cmp
scas
pop
lahf
lock
mov
and
add
movs
cmp
(bad)
cmp
mov
out
in
pusha
push
push
imul
pushf
mov
mov
stc
mov
outs
fdiv
test
push
nop
or
mov
ins
leave
adc
shr
xor
(bad)
cld
xchg
stos
and
enter
push
call
or
inc
cwde
push
or
(bad)
mov
icebp
xchg
xor
int3
out
push
popf
or
shl
ins
pop
ja
cli
add
push
add
sub
arpl
sub
inc
sar
in
inc
mov
or
ja
ret
shl
xchg
ror
lods
js
or
sub
add
hlt
xor
les
sub
pushf
fstp
fcmovbe
aaa
adc
nop
pop
jmp
xchg
xlat
fwait
mov
fwait
push
pop
popa
cmp
outs
sbb
repz
pop
sbb
gs
aas
xor
inc
sub
mov
mov
out
mov
mov
sbb
fdivr
sub
xchg
sbb
test
add
int3
mov
xchg
push
dec
mov
icebp
xchg
imul
leave
dec
(bad)
mov
mov
sub
ror
pop
out
push
sbb
add
xchg
stc
enter
cmp
dec
ja
shl
cmp
jl
in
mov
push
mov
retf
imul
sub
pop
sbb
jae
rcr
adc
pop
jb
out
cs
in
add
xchg
jns
sub
ret
std
xchg
ror
inc
ds
stos
sub
aas
loopne
jg
out
add
pusha
mov
ret
push
sbb
loop
ja
xor
in
adc
rcr
add
sub
dec
or
cmps
push
cmp
mov
fnstsw
jmp
ret
xchg
pop
xor
add
sub
cmp
jp
xor
and
sbb
add
push
ss
movs
scas
cld
scas
out
in
mov
xchg
sbb
pop
sbb
mov
clts
pop
into
adc
lock
lock
xchg
test
sahf
mov
mov
hlt
xchg
movs
scas
add
and
xor
push
clc
(bad)
mov
xchg
inc
cmp
mov
pop
mov
sub
cmp
(bad)
xchg
je
clc
push
(bad)
test
into
xor
cmp
dec
xor
push
pop
push
ret
ret
sahf
pop
icebp
mov
out
jmp
jbe
pop
sbb
jno
xor
jnp
aas
jne
je
add
outs
je
inc
mov
pop
std
pop
mov
int3
cld
mov
pop
shr
dec
add
inc
cli
mov
dec
imul
ss
add
mov
add
or
in
jbe
and
push
ret
mov
push
(bad)
adc
dec
sbb
cmps
ror
loopne
pop
mov
test
retf
inc
aad
test
xlat
scas
push
imul
xchg
push
mov
fdivr
xchg
cdq
pop
sub
in
out
fisub
scas
pop
or
cmp
dec
pop
cld
in
(bad)
jmp
adc
imul
fst
mov
stc
sahf
lahf
xchg
xor
push
jo
pop
xor
and
cmp
out
fs
jge
gs
rcl
dec
popa
dec
aas
(bad)
outs
call
push
sahf
dec
pop
jo
in
add
cmp
dec
mov
pop
xchg
mov
scas
loopne
cmp
mov
sbb
in
popf
movs
outs
bswap
inc
(bad)
mov
ins
sbb
nop
adc
popa
or
repnz
mov
fidivr
push
sahf
into
adc
mov
es
add
sbb
xchg
lods
mov
movs
pop
pop
or
(bad)
fcomp
arpl
call
or
fild
sbb
mov
ins
adc
and
mov
icebp
bnd
imul
in
(bad)
fistp
push
xchg
push
in
inc
jp
sbb
add
popa
and
stos
lods
in
pop
sub
add
sahf
ja
addr16
inc
and
(bad)
cmp
mov
adc
or
push
add
inc
mov
test
enter
in
mov
lock
add
cs
(bad)
lods
sbb
push
jecxz
mov
jns
retf
call
dec
mov
or
add
xor
(bad)
jnp
and
add
lods
rcl
aam
xor
and
test
data16
add
and
cmp
outs
cwde
sar
pop
cmp
cmp
push
add
adc
xor
mov
push
push
inc
pop
or
loop
xchg
dec
jne
mul
pop
out
daa
or
inc
mov
(bad)
out
sub
sbb
cli
fiadd
fwait
xlat
pop
mov
lock
into
jo
(bad)
sbb
inc
data16
loopne
mov
xchg
aam
sbb
sub
pop
jg
jmp
and
cs
jns
mov
mov
add
cwde
mov
xchg
pop
mov
outs
dec
cmc
push
pop
mov
lods
or
jecxz
adc
inc
addr16
repnz
mov
xchg
sbb
loop
push
inc
sbb
jmp
add
sti
xor
inc
sub
mov
push
pop
faddp
jbe
xor
rcr
test
movs
sub
ret
repnz
mov
nop
sub
push
scas
lahf
sbb
jb
xchg
adc
inc
movs
or
pop
mov
cwde
dec
push
adc
(bad)
mov
sbb
dec
mov
out
(bad)
loopne
pop
sbb
cmp
inc
ss
or
in
mov
and
(bad)
and
scas
inc
stos
pop
push
test
adc
cmps
imul
jb
or
into
int3
or
sub
push
call
imul
jmp
jns
pop
xor
outs
push
test
jns
cmp
mov
outs
jbe
rcl
pop
rcl
push
push
loop
sub
mov
nop
lods
jns
bnd
pop
add
add
xchg
mov
inc
pop
sub
pop
xchg
out
jge
inc
gs
cs
inc
std
ss
lods
mov
jb
inc
lea
lahf
adc
dec
into
add
lods
out
jo
xchg
adc
adc
dec
sbb
mov
sub
xor
mov
scas
mov
daa
inc
dec
cmp
retf
mov
(bad)
sub
cmp
and
addr16
(bad)
xchg
lods
popf
or
mov
test
cmp
xchg
push
and
push
cmp
(bad)
xlat
push
jge
mov
ins
xor
jle
dec
mov
inc
push
call
mov
and
sbb
or
daa
loope
xchg
mov
xchg
in
sbb
sbb
daa
cmp
mov
loopne
mov
stos
mov
(bad)
mov
xchg
xor
dec
mov
mov
stos
(bad)
jnp
xchg
or
fwait
retf
cmp
sar
rsqrtps
dec
mov
stos
ins
mov
dec
mov
test
xchg
push
jmp
shr
mov
or
test
in
das
jge
les
(bad)
call
fisttp
dec
test
push
jns
xchg
push
cmps
je
imul
xchg
cdq
inc
movs
jmp
push
cmps
jl
mov
fs
hlt
push
add
sbb
mov
mov
test
inc
or
gs
jbe
fscale
inc
imul
jno
rep
xchg
jb
stos
imul
and
push
aam
sub
xchg
cmps
ins
shl
packssdw
ror
mov
pop
xchg
loop
jo
cmp
inc
mov
pop
sbb
mov
cmp
cmp
mov
pop
push
xchg
jg
loopne
sbb
ror
shr
sub
sti
out
mov
cmc
and
xlat
aad
mov
mov
adc
repz
cmp
je
jns
scas
mov
jge
jg
jnp
(bad)
retf
mov
mov
dec
xchg
push
dec
jmp
iret
inc
outs
scas
xchg
jecxz
sar
or
xchg
ficom
fnsave
(bad)
sar
scas
fwait
mov
neg
(bad)
jns
(bad)
mov
add
arpl
and
mov
clc
leave
jo
repz
jo
call
push
push
mov
push
inc
mov
mov
pop
jecxz
lods
mov
icebp
shl
int
ret
inc
popa
mov
dec
shr
mov
jl
add
addr16
nop
mov
push
into
adc
(bad)
in
cli
outs
pusha
hlt
pop
mov
mov
mov
pop
enter
push
cmp
lahf
cmp
cli
fwait
sub
add
stos
mov
mov
dec
jbe
xor
and
out
nop
cwde
or
or
cli
push
pop
or
sar
sub
aas
cmp
mov
sub
sub
push
movs
sbb
aad
dec
arpl
cmps
xor
mov
out
call
sub
push
jne
call
es
add
aas
mov
adc
fbld
add
icebp
mov
add
xchg
mul
test
mov
lds
pop
jp
imul
jle
xor
lock
stos
jb
test
adc
and
shl
repz
imul
jle
lds
xor
jns
push
mov
les
and
mov
mov
mov
sbb
retf
pop
cli
jmp
mov
xchg
mov
pop
test
inc
retf
and
test
and
mov
inc
pop
sub
and
int
shl
mov
mov
mov
inc
(bad)
pop
jb
mov
xor
xor
ficom
jecxz
jnp
pop
pushf
xor
cld
or
test
cmp
inc
inc
cmp
sbb
aad
xchg
adc
repz
ficom
cmc
jmp
add
ror
lods
sbb
mov
rol
xchg
mov
stos
rep
xor
inc
sbb
xor
dec
sub
iret
or
ds
in
inc
test
fwait
mov
shl
lods
pop
cmp
popf
(bad)
sti
fdiv
cmps
fwait
cmp
ret
pop
repnz
sahf
inc
xchg
dec
dec
data16
or
js
mov
shr
jecxz
or
pop
xchg
sub
int
sub
inc
pop
xlat
jg
imul
mov
mov
jmp
sub
in
std
ret
cwde
neg
pop
xchg
fmul
sahf
jne
mov
push
and
sub
mov
sub
or
(bad)
dec
mov
stc
inc
jns
push
cli
test
inc
jmp
out
inc
(bad)
sbb
cmp
cmps
ja
ss
leave
jns
xchg
lods
xchg
push
or
(bad)
jp
aaa
retf
ret
imul
mov
sub
lods
stc
cld
cmps
mov
(bad)
inc
inc
mov
sbb
jl
pop
push
xchg
push
pusha
daa
pop
leave
cld
sub
push
dec
dec
dec
(bad)
cmp
inc
cmp
jo
scas
inc
repz
mov
cmp
xor
loope
in
(bad)
inc
dec
add
stc
int
xchg
inc
leave
das
(bad)
sbb
cmp
inc
aas
das
adc
xchg
aam
rol
imul
xchg
(bad)
push
jo
or
or
dec
data16
pop
adc
cmps
cmp
mov
jno
les
clc
dec
add
add
sbb
mov
mov
scas
sub
pop
pop
or
mov
adc
movs
adc
in
ins
stos
cmps
sub
stos
in
inc
add
lds
retf
mov
xor
int
sbb
xlat
mov
and
xlat
fsub
lds
mov
push
movs
cmp
jno
inc
jae
imul
jb
std
shl
pop
pusha
dec
cli
dec
dec
movs
add
jmp
in
and
stos
dec
dec
or
hlt
inc
xchg
pop
inc
add
dec
neg
xor
push
mov
lock
out
sbb
and
cmp
dec
lods
je
call
push
jg
fdiv
lock
aad
pop
push
nop
into
jae
and
mov
adc
mul
(bad)
into
mov
xor
bnd
xor
sbb
stos
pop
sub
adc
loopne
data16
jl
xlat
sbb
lods
in
outs
or
cld
mov
cmp
imul
xor
jle
call
addr16
mov
add
push
int3
js
fld
dec
mov
mov
add
add
popa
pop
(bad)
out
sub
fidiv
sbb
in
neg
push
mov
lahf
sbb
nop
jp
in
jne
dec
xor
sub
int3
pop
out
fldcw
adc
and
inc
loopne
or
popa
jge
idiv
adc
jnp
xchg
cmps
mov
dec
dec
cld
cmps
(bad)
jbe
call
in
mov
sbb
cdq
mov
mov
data16
push
mov
or
xchg
mov
push
xchg
ins
pop
(bad)
int3
ins
sbb
push
mov
out
outs
push
mov
add
bound
arpl
cwde
sub
mov
cli
and
scas
or
fild
in
mov
push
sub
xor
xlat
ins
inc
rcr
jmp
mov
jg
imul
push
(bad)
into
mov
jbe
or
sub
add
(bad)
or
fxch
cmp
stos
fdivr
jne
imul
je
popa
and
dec
repz
stos
dec
mov
pusha
sub
add
xchg
les
mov
fsubr
rcl
nop
pop
dec
loopne
cli
adc
mov
shr
mov
pop
dec
in
lods
shr
std
bound
shl
add
dec
inc
inc
dec
xchg
(bad)
push
inc
(bad)
(bad)
jecxz
and
arpl
mov
(bad)
(bad)
mov
mov
adc
cs
push
popf
fldenv
cmp
fwait
push
pop
mov
mov
dec
sahf
pop
mov
inc
out
push
pop
pop
sti
aas
or
test
pop
xchg
inc
ficom
stos
jmp
and
fild
and
adc
jnp
xor
mov
fs
jns
ror
or
not
adc
mov
pop
fstp
xchg
inc
fxtract
ja
lods
and
aaa
push
fdiv
outs
pop
jns
out
lds
test
test
(bad)
aaa
aad
fmul
test
or
xchg
and
push
stos
xchg
sub
jle
xor
jecxz
arpl
sub
nop
sbb
aaa
fwait
xor
ins
push
inc
aam
in
test
mov
or
jns
std
push
fs
mov
ror
jmp
imul
cmp
enter
not
dec
dec
sub
mov
xor
mov
push
(bad)
in
jns
jle
sub
repz
fisubr
cmp
pop
gs
jle
lea
stos
in
add
jmp
adc
dec
dec
push
sysenter
cmp
idiv
xchg
test
div
enter
movs
mov
xor
test
mov
out
test
jmp
xchg
fld
enter
cmp
fbstp
mov
cmps
inc
neg
hlt
xor
(bad)
lea
jnp
clc
and
push
ins
sub
xchg
dec
mov
shr
aaa
inc
ret
pop
or
cmps
aam
xchg
mul
adc
pop
add
(bad)
call
mov
xchg
ret
into
cmp
add
cmp
add
xchg
push
xchg
cwde
sahf
adc
sbb
dec
(bad)
ret
jge
enter
ret
sbb
das
jb
mov
cmp
add
pop
xchg
mov
mov
call
jbe
and
cld
jecxz
scas
dec
sbb
(bad)
movs
cmp
add
mov
inc
cmp
mov
push
popa
push
cdq
xor
adc
cmps
in
sbb
mov
inc
and
repnz
mov
and
sbb
dec
jle
aaa
mov
jle
cmps
out
inc
movs
dec
or
mov
mov
movs
sub
push
jmp
or
gs
stc
dec
retf
rcl
out
mov
sub
sbb
adc
adc
mov
out
test
mov
loope
movs
push
mov
test
scas
or
loope
inc
lahf
sahf
dec
neg
das
pop
mov
sub
jmp
sbb
and
mov
fdiv
add
and
das
arpl
test
rcr
adc
mov
lods
push
xchg
add
out
push
je
scas
or
scas
xor
(bad)
fs
sbb
retf
(bad)
mov
xor
clc
sbb
popa
xchg
pop
sub
mov
push
jb
(bad)
out
sbb
loope
je
shl
imul
sub
js
pop
sbb
in
or
cs
int3
sub
(bad)
outs
mov
push
and
int
sub
push
out
pop
out
jecxz
shl
push
pop
sbb
mov
test
daa
inc
mov
or
call
push
pop
mov
xchg
pop
adc
out
test
or
xchg
icebp
add
shl
sbb
sub
imul
mov
inc
fld
mov
sbb
shl
fs
push
adc
cld
es
mov
js
inc
cmp
in
dec
push
lds
sbb
fild
or
fdivr
int
jns
add
jae
data16
pop
popa
int3
fs
in
mov
test
fisttp
adc
push
dec
into
clc
push
and
cli
mov
ret
je
push
stos
out
and
cmp
pop
dec
or
cmp
xchg
das
dec
mov
adc
xchg
push
aas
test
repz
or
dec
sub
cli
jp
rcr
xor
arpl
push
push
stc
rol
mov
xchg
pop
or
lahf
sbb
mov
fcom
push
jae
and
in
xchg
scas
mov
pop
retf
fcomp
pop
sbb
fcom
or
stos
mov
call
shl
loopne
stc
xor
push
cmp
and
push
retf
adc
xchg
mov
in
pop
scas
xchg
sahf
jp
rol
lock
test
repnz
inc
mov
push
xchg
test
adc
inc
mov
push
add
arpl
gs
inc
rcr
imul
mov
shr
push
sti
or
call
je
in
in
push
push
push
fdiv
ds
jle
mov
dec
pop
loope
push
sti
rol
adc
and
or
fidivr
dec
bswap
rol
iret
mov
push
test
add
call
cdq
pusha
into
jp
in
cmps
jmp
adc
mov
dec
and
dec
xlat
push
and
mov
out
add
mov
mov
rcl
ins
vcvttsd2si
adc
fcom
and
adc
pop
imul
dec
mov
cmp
push
cs
cdq
mov
test
cmp
fistp
loopne
or
mov
pusha
sbb
add
fwait
pop
or
rcl
popf
scas
mov
in
cmps
repz
rol
mov
imul
idiv
mov
cmp
jmp
xor
imul
push
aad
movs
in
mov
inc
ror
lods
aas
mov
jecxz
cmp
idiv
pop
xor
retf
sbb
loopne
ja
inc
ins
das
add
and
iret
(bad)
pop
(bad)
out
add
and
or
gs
ret
mov
inc
mov
or
outs
mov
cli
in
ins
fisubr
xor
add
cmp
out
imul
ja
dec
xchg
xchg
cld
fbstp
and
stc
fucomp
pop
jp
popa
ins
mov
sahf
shl
cmp
cli
cs
xchg
mov
(bad)
xchg
shl
pop
push
rcl
push
jne
cmp
pop
addr16
repnz
test
add
sub
pcmpgtb
cdq
cmps
jnp
jne
stc
int
xchg
popf
sbb
sbb
push
cmp
aad
cmc
push
cmp
jmp
mov
sbb
daa
out
add
sub
test
dec
dec
int3
sbb
jecxz
ins
call
clc
xchg
jl
dec
dec
inc
dec
inc
rcr
movs
sbb
fld
iret
pop
inc
lds
lds
ds
outs
stos
daa
int
std
outs
jb
or
data16
mov
aad
in
addr16
cmp
xchg
in
lock
ins
lods
add
xor
sbb
shl
jno
cs
shr
shl
mov
add
into
out
inc
aas
jne
rcl
imul
mov
hlt
xor
fs
add
add
aas
imul
push
inc
pushf
adc
mov
add
outs
mov
loope
es
dec
xor
arpl
test
mov
fsub
cmps
push
in
aam
adc
adc
(bad)
rcl
xchg
mov
dec
iret
popw
mov
lock
jp
lods
int
add
gs
popf
loope
mov
in
add
daa
lods
in
cmp
out
data16
mov
arpl
adc
push
push
sub
call
jns
jp
das
aas
pop
jb
mov
jnp
sub
xchg
imul
pusha
xor
ror
mov
std
mov
dec
mov
and
imul
mov
xor
gs
add
xchg
xor
sub
cdq
mov
adc
xor
sub
(bad)
ja
push
jle
lods
pop
cmp
mov
lea
iret
pusha
int
shl
fadd
lahf
lahf
(bad)
pop
sub
stos
dec
movs
jbe
shl
in
push
sub
or
cmps
dec
jae
aaa
aam
dec
mov
(bad)
mov
outs
test
cmps
add
pop
inc
out
add
cmp
and
fist
sub
dec
xchg
fld
shl
in
jmp
push
jmp
cmps
add
or
dec
sar
inc
sub
or
pop
push
cdq
(bad)
push
(bad)
nop
jb
shr
mov
mov
xchg
aaa
popf
ins
rcr
mov
pusha
lock
add
lock
cmp
or
push
out
pusha
cmp
push
lods
cmp
fwait
sub
(bad)
fwait
push
push
push
add
sbb
arpl
aaa
push
(bad)
rcl
sar
ins
in
pop
movs
dec
lds
cmps
ins
adc
xlat
push
adc
mov
stc
cmps
inc
or
cmp
int3
pop
sub
in
int
inc
push
jbe
int3
add
jp
mov
sar
fidiv
je
mov
jmp
or
add
mov
cmp
dec
inc
and
add
sahf
sbb
inc
ss
mov
gs
out
inc
ret
inc
jne
arpl
sti
push
mov
adc
je
movs
jbe
sub
bound
(bad)
not
es
or
jg
xchg
ss
mov
(bad)
bound
xlat
xchg
mov
out
fnstsw
test
out
rol
ficom
popf
xchg
std
dec
jns
clc
add
push
mov
pop
addr16
into
daa
lods
sbb
pop
jno
xor
cld
push
daa
sub
inc
pop
stos
imul
or
test
xlat
call
jbe
xchg
xor
or
xor
ror
mov
mov
sub
or
push
jnp
xor
mov
out
dec
cmp
call
jns
sbb
enter
jb
mov
push
out
push
mov
(bad)
int
cmp
into
inc
mov
(bad)
out
iret
push
lods
xor
push
ret
dec
and
jecxz
sar
add
push
pop
adc
jmp
push
lods
(bad)
xor
sbb
out
mov
pop
cld
mov
rcl
in
dec
cwde
cmps
and
push
sbb
adc
push
sbb
pop
cld
xchg
jo
xor
sbb
adc
sub
nop
leave
mov
mov
cmc
or
jae
inc
push
or
push
mov
xchg
cmp
and
shl
pusha
cmp
mov
dec
inc
pop
add
gs
cdq
and
jmp
cmps
movs
inc
and
push
int3
std
cmp
xor
mov
test
les
push
sub
fnstsw
stc
ins
or
add
aam
jns
or
xchg
nop
xlat
mov
mov
pop
mov
fcomp
xchg
inc
lods
mov
ins
cmp
cmps
scas
push
dec
iret
sbb
mov
add
nop
dec
mov
and
mov
sub
retf
call
add
and
rol
pop
fwait
shr
adc
mov
push
add
pop
cmp
xor
pushf
sti
cmp
jb
fstp
mov
dec
popf
in
sub
fstp
aas
imul
dec
mov
mov
nop
shr
sub
imul
or
repnz
hlt
mov
dec
call
pop
mov
mov
inc
pop
sub
mov
stos
cmps
and
shl
dec
mov
fs
adc
or
cmp
dec
mov
or
cmp
int3
xchg
std
cld
mov
(bad)
sbb
mov
push
test
popa
loopne
sub
xchg
and
pop
stc
(bad)
push
jmp
cmp
scas
in
rol
xchg
pop
pop
jge
sub
test
cdq
int
mov
call
fistp
imul
xlat
stc
ja
lahf
or
xor
data16
daa
hlt
and
repnz
pop
xchg
dec
shr
fwait
sbb
fwait
movs
int
pop
ror
jnp
jmp
bound
cmps
sub
jecxz
and
enter
sub
push
scas
xchg
fcom
xor
pop
inc
mov
mov
pop
dec
cmp
mov
inc
bound
mov
or
repnz
sar
adc
stos
enter
stc
pop
sbb
mov
fdiv
bound
test
mov
cmp
rcr
in
imul
inc
mov
mov
cmp
adc
jnp
repnz
push
inc
lea
sub
inc
ret
movzx
add
cpuid
adc
push
xor
mov
hlt
pop
lea
inc
add
data16
cmp
xor
mov
sub
sub
(bad)
out
xlat
inc
add
ds
int
cmps
adc
mov
dec
js
jb
outs
inc
sub
sar
add
ror
icebp
mov
fmul
pop
jle
cmp
shl
lods
and
cmp
add
adc
pop
shl
(bad)
sub
adc
stc
inc
mov
inc
mov
fadd
inc
mov
pop
xchg
movs
popa
add
into
leave
dec
sub
add
push
push
mov
ins
lea
ret
outs
push
jmp
adc
adc
sahf
dec
aas
out
or
mov
cmps
dec
or
sbb
icebp
and
dec
inc
jecxz
jecxz
shl
aaa
xchg
(bad)
retf
stc
test
push
and
mov
lea
or
xor
(bad)
lock
add
arpl
fsubr
test
pop
dec
sub
(bad)
cdq
movs
(bad)
hlt
outs
push
add
sbb
inc
icebp
or
add
outs
push
xchg
dec
cmp
inc
aad
clc
lahf
dec
mov
cli
les
sbb
add
cld
jle
adc
or
inc
sub
in
fdiv
ret
xor
icebp
rcr
hlt
test
mov
ret
pop
mov
ja
hlt
mov
dec
pop
push
(bad)
cwde
mov
mov
or
sub
jle
xor
mov
cmps
xchg
sub
fld
jmp
jnp
add
cli
sub
xor
jnp
test
addr16
add
nop
cmps
cmps
sbb
shr
shl
test
test
push
hlt
xor
shl
imul
das
sub
shr
dec
stc
loope
sti
test
je
jecxz
jo
mov
push
rcr
mov
push
nop
cmps
and
mov
popf
sub
xchg
pop
jmp
fucomi
add
pop
jmp
cmove
dec
outs
push
hlt
mov
ins
adc
fiadd
and
ins
or
pop
push
push
lds
pop
xlat
jo
movs
or
push
fcom
or
icebp
pushf
cmp
aam
adc
pop
jne
test
pushf
imul
push
cmp
fwait
jge
jl
sbb
out
mov
shr
mov
xor
rol
arpl
pop
(bad)
popf
adc
and
pop
fidiv
push
mov
aam
xchg
mov
pop
rol
jmp
std
inc
(bad)
cli
ficomp
push
adc
aad
cmp
(bad)
outs
adc
jecxz
jmp
ds
pop
jb
int3
dec
dec
fs
adc
or
cmp
(bad)
pop
(bad)
cs
sbb
out
and
jmp
jno
outs
jo
jmp
xchg
pop
adc
test
shr
inc
das
sbb
aam
or
adc
adc
mov
int3
cmp
xchg
pop
pop
push
cmp
xchg
mov
sub
jbe
nop
shl
adc
sub
xchg
lods
out
push
mov
arpl
dec
xchg
sbb
mov
fld
cmp
inc
(bad)
mov
adc
xchg
add
or
test
pop
xor
mov
and
movs
retf
bnd
dec
push
and
leave
call
leave
cs
(bad)
and
out
cmps
daa
inc
and
mov
push
lahf
pop
mov
dec
xor
cmp
out
std
mov
in
int
or
ret
int
(bad)
scas
enter
arpl
or
inc
push
dec
dec
iret
pop
jno
dec
into
sbb
test
cmp
int
loopne
dec
mov
add
std
hlt
pop
cwde
push
add
aaa
mov
into
sbb
and
xchg
outs
jmp
out
xchg
imul
imul
(bad)
mov
or
jmp
aam
sbb
adc
bnd
ins
adc
cmp
or
das
ds
fsubp
(bad)
jmp
stc
fs
idiv
icebp
inc
call
call
popa
cmp
retf
in
hlt
mov
into
lds
mov
shl
fstp
fs
ret
pop
aad
or
mov
dec
dec
das
and
push
sub
cmp
sbb
test
ret
cmp
pop
xchg
xchg
(bad)
add
fcom
sbb
sub
inc
mov
cwde
mov
sub
jmp
fwait
stos
jnp
add
xor
pop
push
pusha
mov
aad
das
inc
out
std
and
sar
pop
mov
sbb
inc
call
xchg
out
sub
fwait
ror
(bad)
test
hlt
cs
cdq
jns
aam
push
mov
or
push
jb
push
inc
push
and
stc
aam
jno
mov
mov
js
repnz
and
jno
xor
call
daa
fwait
sub
scas
test
sar
push
arpl
jns
dec
loopne
jecxz
dec
mov
fisub
retf
mov
retf
push
cmc
(bad)
mov
aaa
sbb
les
cmp
arpl
fimul
pop
xchg
cmps
ffree
and
mov
cmc
mov
mov
xchg
xchg
xor
jg
mov
sti
imul
cmp
aam
aad
into
mov
mov
aas
jns
sub
add
cmp
in
xchg
pop
and
hlt
cmp
jmp
(bad)
retf
test
ss
jle
ds
push
lods
xchg
test
sbb
mov
cmp
jno
popa
inc
outs
ins
push
cs
js
aam
popf
xor
lea
adc
minps
addr16
cmp
ror
cmp
pop
sub
lods
dec
cmp
xchg
push
sbb
xchg
lahf
xor
(bad)
and
pop
retf
mov
and
out
jne
adc
add
sub
(bad)
ror
push
xchg
inc
mov
jg
(bad)
scas
adc
retf
nop
push
xor
or
call
inc
out
or
pop
repnz
inc
loope
mov
add
enter
out
sbb
movs
fistp
(bad)
sbb
mov
add
icebp
ror
add
fadd
pop
aad
rcr
lock
ret
bound
in
test
pop
fcomip
mov
sbb
jmp
jb
sub
data16
sbb
dec
(bad)
fs
dec
in
cmp
xchg
rcl
pusha
icebp
mov
jmp
sub
xchg
loop
pushf
movzx
push
loopne
das
adc
mov
pushf
inc
shl
cmp
push
dec
and
sbb
mov
inc
adc
cmp
mov
or
xor
mov
or
mov
xor
dec
mov
repnz
and
iret
cmp
out
adc
jb
je
(bad)
aam
push
lock
retf
callw
jle
sub
aas
hlt
test
mov
or
je
call
xchg
mov
mov
leave
aad
mov
sbb
nop
(bad)
test
jle
mov
ins
add
ss
dec
sbb
dec
xor
xor
sub
not
stc
and
test
xor
xchg
push
in
adc
xchg
add
jne
dec
out
lds
and
jnp
ds
bound
mov
mov
pop
pop
xchg
jno
xchg
stc
mov
xor
push
aaa
dec
cmp
ja
mov
and
add
loopne
fcmovnu
bound
test
cwde
jae
ret
lods
ins
cmp
xchg
gs
loop
xchg
or
inc
mov
sahf
and
ror
cmp
mov
rcr
jbe
mov
cld
cli
xor
mov
dec
enter
mov
sahf
pop
fisub
mov
or
movs
mov
in
pop
mov
aad
(bad)
movs
idiv
imul
mov
jp
pop
sub
mov
mov
inc
retf
mov
mov
test
xor
arpl
jae
jne
cdq
dec
cmc
enter
mov
in
pop
xor
mov
push
cld
sbb
dec
rol
sbb
js
nop
sti
icebp
jmp
ins
xor
jmp
out
or
test
cmp
shl
xor
sbb
daa
call
jae
int
(bad)
cmp
lock
aam
xchg
and
inc
cmp
pop
in
jmp
sub
mov
push
outs
add
sub
std
pop
mov
(bad)
fbld
pushf
lahf
cmps
push
mov
rcr
mov
int3
test
adc
jecxz
sub
xchg
jmp
shr
or
mov
in
cmp
mov
stos
inc
pop
stos
fiadd
cmps
(bad)
mov
xchg
cmc
and
inc
xor
inc
mov
mov
push
movs
dec
sbb
push
out
out
lea
xchg
popa
cmp
ror
ins
cli
push
and
bound
jmp
pop
loope
push
pop
pop
lods
repnz
dec
cwde
fisubr
mov
jns
inc
mov
jbe
ins
repnz
gs
add
movs
jo
xor
xchg
retf
mov
inc
adc
cmp
hlt
cmc
test
pop
lods
aad
jmp
xchg
cmc
fsubp
push
and
pop
lock
or
push
mov
jbe
adc
and
or
mov
(bad)
std
scas
mov
mov
scas
mov
add
in
(bad)
adc
or
movs
mov
gs
jle
dec
push
pop
hlt
out
scas
out
popa
adc
cmp
pusha
pop
call
mov
xchg
test
mov
jge
mov
cmc
cmps
mov
aaa
repnz
mov
fs
pop
sti
cmp
mov
jge
icebp
pop
test
stc
xlat
dec
pop
je
mov
sub
dec
test
xor
xor
xor
add
adc
mov
mov
or
mov
jle
cmp
sbb
inc
inc
cmp
(bad)
mov
ins
mov
add
aaa
mov
xor
stc
sub
es
or
or
(bad)
ret
lods
xor
inc
xchg
push
fcmovne
mov
les
xchg
iret
inc
popf
sahf
retf
int3
ss
(bad)
adc
data16
mov
ficom
cmp
sahf
daa
frstor
dec
dec
sti
mov
(bad)
dec
xchg
sub
loope
stos
lea
pop
inc
add
add
outs
push
(bad)
cmp
mov
cmp
pop
jb
cmp
fwait
pop
hlt
jne
xchg
ret
push
ret
cmp
adc
(bad)
xchg
adc
mov
cmp
inc
jae
enter
xchg
lods
or
arpl
icebp
adc
ror
int
sbb
ret
add
or
and
je
cmp
es
ds
repnz
mov
pop
mov
pop
daa
lods
mov
jmp
fld
fld
cmps
test
xchg
xchg
dec
fbstp
add
addr16
(bad)
in
push
and
std
mov
in
jae
pop
push
je
int
aad
inc
in
call
xchg
mov
xchg
push
(bad)
not
mov
jbe
aaa
iret
xchg
sub
or
and
in
lea
shl
ret
and
fwait
ins
ins
ss
or
adc
and
and
popf
repnz
test
out
cmps
enter
xadd
adc
adc
xor
jo
icebp
aad
clc
imul
mov
arpl
xor
or
fmul
sbb
ret
cmp
dec
xor
jae
es
mov
cmp
daa
int
jmp
mov
mov
mov
pop
jae
or
xlat
imul
test
(bad)
int3
mov
mov
cdq
int3
aas
call
icebp
arpl
jg
test
push
call
fsub
out
sbb
bound
mov
stos
add
sbb
daa
imul
pop
cmp
add
adc
and
imul
test
jns
mov
test
adc
ds
aam
xchg
lds
hlt
lock
adc
mov
cmp
sub
sahf
scas
mov
ss
mov
sub
addr16
xor
adc
cmp
imul
popf
mov
or
retf
push
pop
sub
mov
xchg
xor
call
sbb
inc
mov
mov
mov
loope
mov
xlat
jnp
test
retf
push
loopne
jno
jmp
test
mov
aas
xlat
dec
push
push
xor
mov
movs
mov
push
iret
in
cmp
jle
call
lock
xor
dec
and
call
xor
xchg
idiv
pop
push
adc
or
pop
daa
test
hlt
jp
leave
mov
lahf
or
mov
fnstsw
not
rcr
pop
push
fst
adc
adc
cmp
dec
dec
mov
pop
sti
imul
pop
dec
fsubr
ins
imul
mov
pop
(bad)
cmp
mov
mov
out
test
add
outs
call
je
add
mov
shl
mov
arpl
add
xor
test
inc
std
loopne
dec
and
xor
cmps
(bad)
ror
dec
inc
into
dec
aaa
in
jmp
jno
xor
call
arpl
mov
ret
push
mov
xor
xchg
inc
push
inc
adc
clc
jg
movs
cmc
mov
cdq
mov
xor
loope
fcmovne
add
jae
push
ret
dec
stos
push
jne
jmp
retf
and
fdiv
test
(bad)
es
mov
aam
xchg
inc
pop
lahf
out
inc
in
outs
fwait
sti
dec
test
dec
loope
icebp
dec
test
pop
push
out
mov
aad
movs
lods
sub
lods
pop
scas
pop
mov
adc
add
mov
pop
cdq
push
arpl
push
es
xor
cmc
mov
mov
mov
ret
out
inc
ja
cmp
xor
into
adc
mov
cmp
out
mov
xchg
test
outs
mov
mov
cmp
repz
mov
xlat
mov
out
cmps
fld
aaa
xlat
out
rcl
cmc
ds
movs
cmp
out
cmc
lods
ja
clc
xchg
lds
fist
cmps
jl
cmp
pop
call
imul
dec
push
cmp
(bad)
mov
inc
and
pop
gs
int
adc
(bad)
shl
out
(bad)
aaa
bound
cmps
xor
add
pop
div
fs
out
push
int3
pop
daa
fmul
mov
imul
fadd
das
aas
mov
mov
push
xchg
mov
cmp
outs
or
jnp
mov
into
sahf
loopne
fcom
inc
inc
jo
adc
push
jno
inc
push
mov
pushf
push
aaa
mov
push
jmp
adc
dec
xchg
sbb
sbb
cld
ds
inc
fs
push
mov
jb
add
out
sub
jg
pusha
push
pop
int3
sub
pushf
adc
cmp
sbb
cmp
loop
add
xchg
loop
imul
sbb
dec
sub
mov
cmp
mov
adc
lods
adc
std
test
clc
push
xchg
sbb
xor
gs
dec
ss
aas
mov
pop
(bad)
cld
rcl
add
pop
add
imul
xchg
cld
lods
adc
js
fistp
mov
and
cmp
scas
mov
add
mov
push
out
stos
icebp
and
xor
(bad)
aaa
pop
in
mov
xchg
xchg
hlt
rcl
sbb
add
and
jg
aad
in
aad
movs
loope
push
sar
sub
cwde
mov
jle
push
sbb
add
js
or
push
jbe
xor
pop
add
loopne
out
lahf
and
pop
pushw
imul
ror
sbb
mov
adc
fld
xlat
cmps
dec
xchg
in
js
mov
pop
xor
jo
inc
jae
push
mov
ja
ret
cmps
addr16
pop
gs
pusha
rcl
aad
shl
dec
(bad)
shl
jne
mov
std
mov
lods
cmps
xchg
in
cmp
aam
lea
xchg
jg
jp
or
add
repz
dec
loopne
jnp
lea
xor
adc
stos
ret
dec
aad
or
movs
add
in
ins
or
fldcw
pop
mov
mov
inc
loop
xor
fcomp
mov
pop
mov
aad
push
xchg
cmp
not
jae
push
movs
adc
arpl
fs
sub
adc
je
mov
inc
push
out
pushf
sub
aam
adc
cwde
push
inc
sbb
jbe
jo
mov
and
test
jae
mov
and
mov
adc
sbb
cmp
xchg
pop
mov
test
xchg
mov
lds
cmp
jmp
mov
xchg
cmp
xchg
mov
test
jne
aad
mov
fsub
dec
lea
(bad)
cwde
mov
sub
lahf
add
aas
(bad)
(bad)
cmp
stos
movups
int3
lock
enter
xchg
loope
nop
cmps
inc
out
pop
mov
and
push
fstp
movs
or
or
inc
sbb
in
fmul
es
push
hlt
(bad)
jbe
jmp
in
aas
add
mov
push
jg
lds
aas
mov
lock
cmp
and
out
xchg
sub
test
in
jmp
add
add
call
cld
neg
pop
movs
sub
fidiv
mov
inc
add
xchg
scas
xchg
mov
es
jge
aas
adc
pop
ja
idiv
mov
loope
jo
jno
mov
mov
mov
jl
inc
mov
test
dec
jmp
daa
jno
or
and
mov
jno
in
or
imul
daa
jg
inc
in
aas
lods
pop
xchg
sub
xor
int
das
mov
and
mov
mov
dec
add
aad
or
jp
mov
xchg
ret
in
jg
xchg
mov
jnp
sbb
dec
aad
cmp
icebp
(bad)
je
scas
rcr
repz
(bad)
(bad)
and
jno
popa
or
setle
js
jnp
jbe
test
mov
mov
add
cli
dec
jnp
push
mov
and
pop
adc
jle
or
jp
sbb
jmp
repz
xchg
dec
ins
xlat
push
pusha
sbb
jge
gs
leave
jmp
pusha
dec
xor
or
div
or
mov
dec
add
icebp
repnz
movs
(bad)
hlt
sub
push
push
cli
lock
xchg
leave
fisttp
adc
jmp
mov
aad
xor
adc
lahf
jne
mov
mov
mov
shl
pop
lahf
push
ins
test
arpl
jge
outs
xchg
out
and
jmp
jmp
inc
mov
xchg
stos
adc
inc
cli
mov
inc
out
movs
out
inc
mov
fst
div
pushf
mov
addr16
push
icebp
jmp
arpl
push
mov
cmp
dec
xlat
pop
out
add
fisubr
sbb
jno
lock
mov
push
xor
lds
aas
sub
cld
retf
enter
call
and
sbb
mov
sbb
fdivp
adc
or
movs
push
xchg
inc
pop
enter
lahf
mov
cmc
cmp
mov
xor
jns
ret
cmp
dec
pop
mov
and
loop
stos
sbb
nop
(bad)
(bad)
sbb
sbb
jmp
loop
retf
adc
or
cs
pop
loopne
cmp
stc
add
leave
push
shl
retf
or
pusha
xor
inc
fwait
jl
loopne
inc
push
clc
shl
xchg
mov
adc
rol
popa
cmc
outs
pop
out
and
clc
icebp
and
or
inc
cmp
xchg
mov
push
repnz
push
test
push
xchg
push
(bad)
pop
ins
mov
jmp
pop
stos
cmps
jb
xor
xor
and
add
or
mov
(bad)
pop
push
sub
sahf
jae
or
repnz
jg
call
jp
(bad)
cmp
dec
mov
aaa
or
push
fstp
push
je
add
dec
test
mov
xor
pop
and
call
mov
cmp
cmp
ins
or
cmp
adc
jl
inc
fidiv
push
(bad)
lods
mov
aas
or
cmp
push
fs
mov
cmp
pop
cs
fbstp
pushf
ss
push
xor
cmp
jb
outs
jp
add
out
sub
ins
stc
push
fsub
jecxz
dec
js
dec
popa
aad
test
cmp
repz
jg
out
and
sub
jl
mov
lods
fwait
cwde
scas
in
rol
pop
jo
adc
das
jbe
dec
adc
jnp
dec
fiadd
in
pop
pop
call
and
ja
cwde
mov
leave
movs
mov
cs
int3
jmp
jmp
cmp
xor
mov
xor
ins
fs
dec
xchg
ja
lods
push
mov
je
ret
push
addr16
adc
call
mov
push
(bad)
shl
arpl
and
repz
jle
xchg
int
jmp
sar
mov
neg
mov
ins
dec
sti
stos
mov
outs
ret
loopne
shl
fistp
pusha
iret
xchg
xlat
inc
adc
stos
xchg
jns
lock
pop
test
psubw
aam
jno
repnz
scas
sahf
push
push
fs
pop
inc
add
repnz
popa
sti
aam
cli
aaa
les
sbb
ret
mov
adc
inc
xchg
loope
mov
add
(bad)
(bad)
sub
movs
dec
cwde
jne
out
daa
mov
xor
fucomip
sbb
push
(bad)
aas
into
pop
cmp
shl
test
sahf
push
loop
jae
mov
jecxz
mov
test
push
mov
out
ret
out
inc
fsubr
fwait
mov
jo
xor
xchg
fld
das
push
xchg
cmp
js
pop
sub
leave
dec
inc
loopne
and
das
enter
leave
(bad)
or
or
jmp
bound
rol
push
cmp
pusha
and
adc
mov
add
daa
xor
cmp
std
jecxz
jmp
adc
xor
cmc
inc
cmp
sahf
mov
xlat
dec
aas
pop
add
and
jle
fstp
in
sbb
mov
inc
cmp
cmp
(bad)
jmp
pusha
and
mov
and
inc
outs
leave
cmps
fldcw
imul
lods
inc
jbe
and
addr16
call
adc
aad
inc
or
js
adc
hlt
jnp
pop
mov
out
idiv
stos
int3
pop
sbb
retf
out
xor
scas
lahf
push
xor
int
add
sub
lods
dec
xchg
mov
popf
sbb
push
adc
xchg
popf
jns
push
retf
addr16
cld
pop
sub
test
sbb
or
pusha
adc
sbb
out
add
popf
or
or
sub
movs
cs
xor
test
xchg
inc
jb
lods
rol
xor
clc
mov
adc
nop
(bad)
scas
cli
inc
pop
mov
jmp
cmps
push
stc
jo
xchg
mov
or
call
sub
xchg
or
fld
inc
loopne
mov
pop
xor
xor
rcr
cmp
aad
cmp
mov
cmovae
js
pop
fnstcw
adc
dec
mov
jecxz
and
mov
repz
or
mov
sbb
mov
add
out
dec
mov
xor
mov
cld
pop
mov
arpl
(bad)
or
cmp
pop
neg
push
jecxz
ins
jno
jae
xor
int
pop
jmp
xor
adc
mov
push
leave
(bad)
lods
neg
sar
dec
movs
jl
or
outs
pop
xor
mov
fs
mov
imul
and
dec
or
(bad)
sbb
push
jmp
jge
retf
jle
mov
bound
repz
outs
aad
call
dec
xchg
push
push
repnz
call
outs
inc
pop
and
inc
int
pop
not
xor
xor
pop
inc
scas
dec
push
xchg
out
lock
mov
scas
cmp
sub
add
in
lock
push
into
aaa
or
pop
mov
sbb
xor
js
hlt
ror
adc
mov
repnz
mov
arpl
aaa
and
iret
cmp
push
(bad)
sub
adc
cmps
mov
push
je
inc
mov
sbb
inc
(bad)
in
lods
ror
cli
mov
clc
call
xchg
dec
push
dec
or
out
cmp
lods
mov
xchg
imul
(bad)
imul
fcom
ins
sub
cmp
jle
jne
in
pop
or
sub
and
int
std
pop
loop
mov
cmp
data16
cmp
push
xchg
popf
and
je
and
or
sub
aam
idiv
js
mov
lds
dec
inc
cmp
and
mov
mov
ins
jae
rol
inc
push
xchg
cmps
(bad)
repz
mov
mov
scas
(bad)
sti
ins
push
hlt
mov
jl
pop
and
or
sar
inc
in
sub
es
jmp
(bad)
shl
push
cmp
jno
xlat
jle
or
lods
sub
enter
dec
jbe
test
lea
or
or
xor
lods
push
nop
jns
jmp
xchg
cmp
cmp
in
repz
cmp
adc
adc
dec
and
adc
pop
push
fisubr
aaa
out
popa
cmp
dec
cmp
div
pop
in
or
sub
sahf
pop
cmp
movs
loopne
push
push
cmp
mov
lea
jmp
fnstsw
fstp
push
pop
pop
lods
iret
jae
aad
ror
cmc
ss
mov
cmps
sub
pop
pusha
jg
jb
push
mov
shr
stc
hlt
loop
pusha
fidivr
je
jo
and
imul
imul
xlat
fisttp
xor
sub
adc
push
adc
mov
lahf
outs
mov
(bad)
stos
adc
or
xor
mov
not
into
hlt
fld
bound
lea
adc
test
and
or
daa
jg
mov
adc
jnp
retf
mov
xchg
push
dec
pop
mov
enter
clc
enter
addr16
(bad)
ja
je
test
xchg
add
sbb
xchg
push
call
loope
and
mov
and
xchg
and
scas
jnp
adc
inc
call
lahf
in
jnp
cmp
inc
dec
lods
std
icebp
or
and
hlt
aam
mov
and
(bad)
test
cmps
fs
dec
jno
jmp
jne
jbe
mov
jmp
fs
xor
adc
inc
push
cmp
loop
xchg
test
dec
out
push
mov
or
dec
xchg
ds
ins
(bad)
mov
adc
adc
shl
sbb
scas
push
movs
mov
gs
rcr
sbb
jne
pusha
test
(bad)
push
rcl
sub
adc
(bad)
fcmovne
jae
cmp
adc
adc
jo
jmp
cmp
js
xor
movs
mov
cmps
push
stos
jmp
adc
add
mov
cmp
cdq
popa
xlat
jmp
xor
sub
imul
and
cmp
push
call
jge
div
out
mov
jle
jle
lds
cs
jge
jl
adc
(bad)
mov
and
std
sbb
lods
cmp
leave
test
retf
jo
mov
add
jge
ror
mov
jmp
mov
xor
sbb
pop
or
in
dec
cmp
jo
cmp
test
sbb
mov
fnstsw
test
call
scas
sar
and
in
cmp
into
(bad)
call
jmp
mov
xchg
and
pop
sbb
inc
mov
cmps
xchg
stos
lea
push
inc
push
in
dec
mov
push
addr16
in
test
mov
fcomp
inc
inc
cmc
jne
rcl
movs
add
test
sub
sar
or
cmp
stos
xor
add
jmp
loopne
sar
xchg
inc
fcmovu
jno
add
jg
mov
push
fist
xchg
mov
mov
sub
jno
dec
xchg
enter
dec
push
push
mov
dec
cmps
aaa
inc
outs
test
dec
aam
pop
stc
or
fs
outs
cmp
movs
sub
mov
mov
mov
jo
mov
call
es
cmp
out
sub
push
(bad)
outs
xor
dec
jg
fcomp
xchg
xchg
fiadd
cmp
mov
retf
lods
jo
fnstsw
ja
lahf
std
jg
cmc
jle
push
adc
nop
fwait
jnp
dec
lods
pop
jae
loope
pop
mov
jbe
mov
int
jnp
or
(bad)
pop
clc
pop
xor
jno
shl
or
inc
fimul
dec
cmp
(bad)
cmp
add
or
jp
push
cmp
xchg
add
adc
pop
dec
(bad)
std
retf
daa
xor
imul
and
push
mov
cmp
stos
fcom
inc
adc
push
inc
aam
sti
arpl
ss
loop
cmp
xor
pop
ins
push
add
clc
aad
xor
dec
sbb
loopne
add
nop
stc
pop
sbb
sub
stos
out
das
dec
js
xor
pop
(bad)
jp
inc
dec
call
mov
mov
(bad)
cli
jno
mov
pop
mov
or
pop
mov
cmp
div
cmp
cmp
mov
ficom
adc
sub
pop
test
cwde
test
pop
(bad)
icebp
cmp
adc
lea
add
dec
add
cli
cmc
jo
je
popa
aaa
dec
adc
fwait
push
rcl
mov
dec
push
mov
in
jecxz
lods
add
xchg
cdq
mov
loop
in
dec
cmp
adc
in
iret
(bad)
adc
mov
(bad)
pusha
xor
push
push
add
jge
iret
jne
pop
cmc
scas
sbb
add
sub
mov
xchg
add
movs
pop
jns
out
fwait
and
scas
pop
adc
mov
test
dec
cdq
push
out
mov
ja
cmps
sub
and
call
mov
test
jno
repz
loop
pop
shl
out
pop
lods
clc
das
mov
adc
mov
ins
jo
scas
fsubr
xor
pop
dec
xchg
xor
mov
sbb
rcr
dec
add
jne
aas
inc
repnz
test
popf
ret
mov
pop
ds
ret
(bad)
imul
out
sub
fbld
pop
cmp
inc
push
dec
in
xchg
sub
push
ret
rol
mov
cmp
and
mov
add
je
push
mov
and
repz
sub
call
sbb
int
pop
mov
xor
cmp
add
push
mov
push
fwait
xlat
js
jmp
push
jb
fmul
cs
adc
xchg
mul
or
sahf
imul
and
xor
or
xchg
mov
in
pop
adc
mov
push
mov
add
mov
mov
or
xchg
int3
es
(bad)
lods
sti
test
(bad)
mov
mov
pop
les
sahf
lea
mov
dec
xor
dec
arpl
add
pushf
mov
or
(bad)
fdivp
out
pop
ins
cmp
(bad)
sbb
pop
xchg
loope
aaa
scas
push
adc
mov
adc
or
push
(bad)
enter
cmc
daa
stos
ret
loope
mov
pop
in
sub
push
dec
lods
cmp
mov
jl
repnz
xchg
aam
pop
cmp
cmc
aas
xlat
jnp
mov
jae
daa
mov
mov
dec
repz
mov
inc
push
mov
sub
push
ror
jg
add
mov
cmc
push
or
jae
push
test
lahf
popa
iret
sub
repz
sub
icebp
int
dec
inc
out
jb
cmc
stos
arpl
jne
and
imul
add
ret
out
xor
mov
mov
add
ss
adc
int
jle
pop
out
(bad)
push
jno
push
hlt
sbb
popf
xor
neg
or
and
pop
out
xchg
arpl
scas
out
cmc
push
icebp
inc
jo
push
and
mov
pop
add
adc
jb
nop
adc
lods
sub
test
mov
les
sub
cwde
or
xor
icebp
and
add
ss
enter
bnd
imul
mov
inc
jg
fdivr
enter
loop
mov
pop
test
fistp
aad
mov
add
mov
cdq
outs
and
shl
icebp
mov
adc
imul
stos
ja
shl
pop
mov
lds
test
popf
shl
mov
(bad)
mov
xchg
lahf
popa
push
cmc
sbb
ins
mov
dec
pop
mov
iret
and
movs
cmp
mov
out
mov
mov
xor
xchg
add
adc
in
pop
std
jb
cmp
lock
push
pop
xor
test
mov
out
mov
adc
out
cwde
clc
cwde
(bad)
cmc
and
call
out
(bad)
pop
xchg
stc
ja
dec
rcl
repnz
movs
retf
lods
cmp
sbb
push
in
mov
int3
push
and
sbb
jl
add
mov
retf
mov
ja
and
mov
(bad)
test
or
and
or
in
and
push
mov
mov
fbstp
xchg
mov
outs
mov
fidiv
int
jmp
add
pop
push
cmp
mov
lds
cmps
push
push
adc
jge
idiv
ficom
sub
jno
and
inc
sbb
cmp
mov
repz
arpl
dec
pop
mov
nop
xchg
pop
jge
shl
jo
mov
dec
mov
test
(bad)
stos
jns
enter
cmps
jmp
mov
pop
pop
adc
mov
xchg
push
lods
mov
pop
or
repnz
daa
sbb
rcr
repnz
jle
scas
inc
xlat
out
mov
int
xchg
mov
mov
ror
fsub
fadd
repnz
fstp
xchg
dec
push
mov
push
mov
xchg
out
jecxz
rcr
ins
sbb
rol
jp
(bad)
into
icebp
xor
dec
loop
(bad)
pusha
and
loop
mov
rol
lahf
ins
mov
add
or
addr16
adc
jae
fimul
sbb
out
fisttp
gs
inc
xchg
iret
jmp
add
sub
clc
xchg
xchg
sub
xlat
push
adc
pop
stos
js
std
fdivr
cmp
jb
cld
mov
movs
jb
rol
sbb
js
pop
pop
fadd
push
cmp
add
scas
mov
adc
dec
pusha
(bad)
mov
push
cwde
mov
pop
retf
lods
mov
mov
lock
push
adc
fbld
mov
ja
cs
jmp
leave
inc
push
jbe
iret
push
pop
(bad)
pop
and
daa
ins
push
ins
ds
fwait
ret
frstor
imul
dec
ds
xchg
test
cs
add
xor
popf
mov
popa
das
fs
sbb
ror
scas
scas
add
loopne
lods
popf
inc
ja
and
fidivr
mov
cmps
mov
sbb
stos
clc
(bad)
int
jl
retf
rol
fdivr
push
mov
pop
popf
shr
cmp
sar
mov
pop
sti
aaa
jne
cli
es
daa
xchg
and
mov
or
dec
test
lods
mov
mov
xchg
out
add
jo
jecxz
mov
or
jle
adc
mov
ret
aaa
jmp
test
push
or
or
dec
push
es
xor
mov
shr
jns
scas
mov
aad
(bad)
mov
pusha
mov
test
and
stos
xor
xlat
imul
push
push
jbe
nop
sub
out
retf
lahf
popa
sbb
dec
xchg
cli
sub
test
xor
xchg
mov
std
inc
add
and
loopne
xor
sub
or
test
out
out
sub
inc
inc
mov
retf
inc
les
je
sub
jns
add
xor
cmps
imul
jle
mov
mov
cwde
clc
xor
mov
mov
mov
ins
pop
aam
aaa
sar
xchg
test
outs
add
das
call
int3
jp
jmp
push
jmp
loopne
lods
clc
rcr
pop
cmps
std
pop
jl
pop
dec
mov
lds
dec
iret
mov
xchg
mov
mov
xor
out
mov
outs
cmp
lods
mov
out
mov
inc
mov
jae
sub
jp
dec
icebp
and
fisubr
call
xchg
or
call
inc
in
sub
cmps
enter
push
add
mov
and
mov
push
jae
pop
jbe
daa
loope
cmp
mov
rcr
dec
xor
lods
call
dec
fist
dec
js
in
mov
imul
mov
dec
cmp
test
je
mov
(bad)
aad
out
ins
sub
xchg
rcr
dec
repz
or
pop
fst
add
and
mov
xchg
fwait
mov
inc
jnp
mov
ins
and
sahf
aas
add
daa
jle
sti
fadd
push
movs
jno
pop
hlt
sub
push
dec
cli
ret
lock
scas
push
(bad)
jnp
pop
aam
xor
or
fldenv
mov
push
hlt
add
cmc
iret
sbb
pop
adc
mov
jp
inc
imul
jnp
sbb
cli
lods
sbb
hlt
mul
(bad)
not
mov
enter
push
ror
mov
mov
test
outs
nop
(bad)
pop
pop
push
retf
dec
lods
adc
cmp
test
icebp
popa
sbb
cmps
sub
bound
fbld
aad
clc
popa
clc
adc
int3
ins
into
jmp
in
dec
sti
dec
lea
ss
pop
(bad)
jne
or
mov
jl
jge
push
movs
jmp
push
adc
stc
cs
sbb
jbe
ins
outs
sbb
std
xchg
sub
outs
aas
int3
sti
clc
cli
imul
adc
push
cmp
inc
loope
aas
aas
shl
mov
fldlg2
adc
or
push
push
xor
mov
psrld
mov
push
lea
push
sbb
mov
pop
push
xchg
in
mov
test
sub
xlat
sbb
stc
mov
clc
aaa
dec
movups
sbb
mov
sub
inc
push
mov
fwait
bound
pop
es
shl
jg
jne
test
add
sahf
sbb
adc
and
pop
imul
adc
outs
pop
adc
out
sbb
lods
lock
js
push
pop
adc
ror
and
sbb
aam
popa
push
dec
pop
dec
pop
inc
xlat
clc
and
mov
sti
jns
arpl
jl
xchg
jno
add
aas
test
push
outs
cdq
or
push
cmp
xor
xchg
fsubr
inc
jle
jmp
xchg
or
jno
mov
ja
(bad)
xchg
sub
or
and
sbb
mov
mov
setnp
lods
stos
movs
lods
dec
and
inc
mov
enter
pop
cwde
out
adc
mov
(bad)
push
mov
pop
mov
in
mov
les
and
mov
int
fdivr
sbb
ret
daa
(bad)
mov
cli
retf
aam
pop
hlt
pop
stos
or
shl
out
pop
push
ja
or
repz
xor
jge
jo
mov
stos
mov
dec
sub
scas
add
cmp
dec
inc
push
neg
xchg
adc
cwd
push
fcomp
cmp
or
in
popa
xchg
stos
xor
inc
repz
pop
mov
mov
adc
adc
fistp
or
aaa
jno
xchg
sbb
(bad)
and
loope
mov
aaa
in
jle
pushf
xchg
xchg
loopne
pop
add
add
dec
sbb
or
adc
sub
ror
(bad)
mov
mov
out
ins
jmp
lods
daa
push
sbb
rol
loop
sbb
inc
or
pop
ja
daa
and
sbb
out
adc
cmp
jmp
fimul
lods
not
dec
sbb
xlat
add
clc
and
xchg
push
and
xchg
jmp
(bad)
sub
xchg
pop
jnp
in
adc
and
or
or
daa
outs
test
mov
movlhps
xor
repnz
jnp
sub
into
cmp
inc
or
test
test
sti
mov
or
cs
mov
xchg
inc
or
daa
mov
sbb
fist
add
sbb
sub
dec
in
sbb
adc
arpl
data16
push
mov
inc
xchg
xchg
jne
pusha
jg
les
into
mov
sub
xchg
xor
ret
xchg
(bad)
jbe
mov
fisubr
push
xor
mov
jg
stos
not
inc
js
add
movs
test
dec
test
cwde
pop
mov
and
test
ret
test
push
cmp
mov
mov
pop
rcr
push
cmp
fistp
pop
add
mov
push
das
fcmovnbe
test
add
and
push
add
mov
stc
inc
in
push
into
call
push
popa
mov
fwait
pop
fnsave
out
loopne
sbb
test
xchg
iret
dec
dec
push
push
pushf
fcomp
call
lods
or
inc
sbb
dec
mov
aad
repnz
leave
inc
cmp
(bad)
shl
xchg
push
and
outs
xor
xchg
aam
sar
xor
sbb
cmp
or
mov
iret
aas
mov
push
xchg
or
in
pop
enter
or
dec
or
pusha
gs
(bad)
aam
mov
mov
fdivr
movs
mov
sti
push
nop
pop
push
sub
ret
cmps
je
std
ins
xlat
(bad)
fsubp
mov
add
in
or
shl
mov
dec
fsub
mov
dec
cwde
neg
xor
popa
and
xchg
lea
(bad)
dec
(bad)
repz
retf
mov
int3
mov
mov
in
pop
adc
push
je
test
xchg
cli
adc
fisttp
sahf
(bad)
pop
push
dec
mov
pop
xlat
in
mov
cmp
dec
adc
push
jnp
sar
mov
loopne
xchg
dec
sbb
das
(bad)
pop
gs
int
sub
sub
iret
mov
in
sbb
dec
and
mov
dec
imul
jl
aam
mov
xchg
scas
ins
jmp
sub
mov
fsub
cs
sbb
push
xor
popf
ins
div
fisub
ret
je
daa
xor
popa
pop
mov
stos
push
hlt
pop
jb
push
(bad)
imul
dec
xor
push
repz
std
pop
shl
je
push
sbb
mov
cmp
fcomp
shl
and
es
fwait
inc
dec
fidivr
shr
xchg
cmp
loope
test
out
test
adc
lods
repz
or
cs
jb
or
or
in
femms
cli
ja
cmp
lods
push
es
or
std
jno
xchg
rol
mov
dec
jecxz
sbb
cmp
neg
xchg
mov
mov
jmp
adc
xchg
lods
jp
jmp
stc
in
cmp
stos
fisttp
test
or
int3
push
sub
(bad)
ficom
cdq
icebp
push
sub
shl
rcr
sbb
mov
mov
jmp
and
push
xchg
js
add
(bad)
test
and
xor
push
pop
jmp
inc
(bad)
imul
fstp
call
xchg
push
push
and
jmp
adc
jl
or
fimul
xor
jbe
mov
stc
ds
in
add
cmps
aad
jbe
inc
test
mov
aas
pop
jmp
inc
inc
call
je
jne
stos
ret
test
cmp
ins
mov
add
in
ja
jecxz
dec
movs
push
cmp
add
cmp
pop
sti
test
xor
lods
lea
xor
mov
cmc
ins
xchg
dec
push
rcl
inc
outs
je
pop
pop
jg
and
mov
mov
cmp
js
xchg
pop
js
repz
mov
dec
push
mov
shl
sbb
xchg
cmp
jl
jnp
retf
pop
cmp
jno
inc
cli
icebp
xchg
mov
into
mov
test
xor
out
lods
cmp
dec
lahf
sahf
into
and
mov
adc
jb
lods
sbb
push
xlat
and
rcl
scas
sub
sbb
adc
ret
mov
les
aam
scas
pop
jno
adc
mov
xor
jns
imul
mov
mov
sub
push
shl
add
test
lock
push
xor
ins
inc
sti
or
adc
sbb
repz
xor
dec
dec
dec
out
ds
call
scas
ret
js
pusha
pop
movs
jmp
mov
xchg
sbb
sti
lods
pop
mov
sti
or
inc
mov
pop
aad
jecxz
pop
xor
fisub
mov
mov
(bad)
dec
pushf
xor
les
xchg
ja
(bad)
pushf
mov
xor
sub
lea
es
jl
mov
mov
mov
inc
pop
inc
loopne
call
push
call
jmp
das
xchg
pop
jnp
or
xor
inc
leave
mov
xlat
(bad)
ret
jns
dec
bound
inc
xchg
mov
arpl
mov
mov
mov
in
aas
inc
retf
or
loopne
sub
xchg
in
ds
lahf
adc
inc
pop
lock
mov
xchg
stos
scas
xchg
test
mov
ja
in
into
lock
bound
push
mov
xor
shl
in
stos
scas
outs
pusha
and
jbe
or
(bad)
pusha
inc
cmp
ficomp
imul
shr
aaa
dec
repz
add
aam
mov
sbb
cli
pusha
repz
icebp
cmps
inc
scas
repnz
inc
cmp
push
sub
js
mov
sbb
loop
into
add
mov
dec
out
shl
inc
daa
dec
add
cmp
fcom
(bad)
lock
(bad)
xor
dec
dec
adc
popf
jo
add
es
sbb
sub
jo
in
outs
xor
stos
test
retf
push
inc
lea
push
mov
mov
popf
fld
and
pop
jmp
fidiv
add
inc
mov
std
je
data16
ficom
fcomp
(bad)
adc
shr
pushf
sub
repnz
ss
pop
loop
stc
pop
xchg
repz
cs
bound
push
shl
mov
imul
push
jmp
adc
adc
xchg
xlat
xchg
fs
stc
pop
aaa
mov
and
movs
fadd
movs
mov
xor
pop
mov
xchg
clc
mov
fs
pop
adc
test
les
push
frstor
sbb
xor
dec
mov
(bad)
mov
jb
xchg
sbb
xchg
mov
dec
xchg
fs
ds
jge
sbb
xor
or
push
cdq
mov
pop
in
test
mov
pop
(bad)
adc
add
jb
es
lahf
out
rol
jns
and
add
mov
repnz
iret
movs
jle
push
sbb
into
ret
int3
jnp
cmp
jge
cmps
in
dec
cmps
add
push
push
mov
std
xchg
fld
and
xor
repnz
pop
lahf
nop
mov
pop
or
js
mov
jne
xor
sbb
push
arpl
scas
inc
test
sub
loope
fimul
xor
sbb
jecxz
scas
dec
ja
call
lods
xor
and
sbb
fwait
xchg
mov
(bad)
call
adc
ret
ins
or
sar
or
jg
popf
push
xchg
cmps
fisub
sbb
je
xor
jg
push
xchg
lds
loopne
push
xchg
cmp
repz
pop
or
xchg
daa
mov
add
xor
out
push
shl
mov
and
sbb
(bad)
shl
icebp
push
imul
test
lods
or
psubw
test
inc
test
fstp
sbb
jmp
in
(bad)
pop
stc
mov
adc
lahf
loopne
inc
fsubr
loop
arpl
fdiv
jns
in
sti
mov
jbe
ss
cmps
sbb
sti
jle
pop
je
fdiv
mov
(bad)
xor
sub
ret
xor
retf
loop
add
xchg
std
xor
lea
(bad)
add
sti
pop
adc
mov
cs
sbb
mov
push
jg
out
lahf
in
call
call
and
rdpmc
mov
and
repnz
(bad)
jbe
fwait
add
cmp
inc
xchg
mov
xchg
cld
sti
aaa
mov
add
pop
push
dec
fnstsw
das
mov
lea
ss
or
add
mov
nop
sbb
mov
ret
sub
dec
dec
mov
loopne
pop
and
or
stc
das
retf
mov
and
mov
add
sahf
xchg
stos
xchg
inc
mov
stos
cdq
vmread
adc
xchg
jmp
icebp
or
mov
std
pop
jae
push
mov
jae
push
test
ror
fiadd
mov
push
and
push
outs
cld
jp
imul
rcr
mov
mov
mov
and
and
push
inc
inc
mov
or
(bad)
frstor
sub
push
fstp
push
test
data16
ret
adc
jae
sti
hlt
adc
stos
(bad)
push
movs
in
movs
aad
fldcw
loope
xor
mov
xchg
std
jl
in
xor
bound
repz
push
sbb
out
sub
sti
add
test
push
les
mov
and
or
test
and
scas
lds
daa
xchg
in
adc
clc
jae
jmp
(bad)
mov
pop
or
xchg
inc
xchg
cmps
std
test
pop
or
ins
xor
adc
loopne
js
xchg
or
xor
sbb
sub
sbb
ss
rcr
push
jae
jecxz
dec
push
adc
sbb
pusha
jno
aam
shr
mov
inc
pop
rcl
xor
sbb
mov
push
xchg
push
dec
das
imul
cmp
lahf
stc
mov
call
push
lods
hlt
in
jecxz
jae
into
gs
out
sbb
movs
iret
popa
sbb
inc
data16
enter
and
es
pop
pop
jp
aad
add
pop
outs
mov
jmp
cld
nop
std
xchg
das
shl
mov
adc
aam
add
fs
movs
bnd
jno
pushf
and
test
aas
loopne
xchg
loope
jmp
outs
test
xor
call
ret
sar
add
push
sahf
jge
jg
pushf
scas
ss
out
outs
xchg
(bad)
push
and
jns
sub
and
in
adc
add
in
adc
xor
mov
xchg
or
or
adc
jbe
add
push
fisttp
add
mov
out
dec
jbe
and
ja
mov
ja
jge
mov
shl
dec
daa
sar
dec
sub
fwait
inc
mov
mov
inc
sbb
or
jl
daa
pop
loope
cli
cs
inc
in
icebp
cmp
cdq
mov
scas
mov
sti
pop
mov
inc
mov
fmulp
popa
mov
cmp
fcmovne
and
lea
(bad)
cmps
aas
sub
in
test
inc
add
jmp
jmp
arpl
inc
and
or
add
adc
lods
push
es
mov
pop
pop
mov
arpl
mov
out
fistp
jl
clc
in
test
xor
dec
and
pushf
dec
idiv
js
pusha
retf
adc
retf
cli
ret
jmp
cwde
retf
in
outs
push
loop
dec
shr
sbb
stos
pop
adc
adc
fisubr
inc
das
jae
and
fwait
div
and
jle
iret
or
clc
addr16
aam
push
push
icebp
test
int3
jb
dec
pop
stos
sbb
or
xor
and
sub
xor
outs
jle
xor
pop
in
add
cli
mov
inc
mov
ss
popf
add
cmp
cmc
sub
adc
jle
fmul
mov
mov
out
and
adc
add
aad
lds
sub
retf
mov
shl
test
cmp
lea
add
mul
sbb
mov
pop
addr16
add
out
mov
inc
xor
inc
out
xlat
cmc
cs
dec
xor
cdq
mov
ins
push
push
fcomp
fistp
push
pop
aam
sti
mov
inc
or
out
push
sub
mov
dec
call
inc
cmp
cmp
bound
mul
mov
pop
push
rcr
lods
jmp
and
fsubr
outs
xchg
xor
cld
outs
pushf
test
(bad)
int
loop
push
jns
or
or
icebp
out
xchg
mov
retf
inc
retf
mov
int
xchg
rol
pop
lods
ins
push
jnp
push
dec
pop
sar
pop
not
and
add
leave
jecxz
aaa
or
cmp
sub
leave
adc
stos
inc
sub
jns
adc
or
dec
pop
cmp
aad
aam
iret
sub
inc
sbb
xchg
jb
retf
or
ret
or
jecxz
push
bound
lea
arpl
mov
cmp
sub
sub
dec
out
dec
cmp
scas
call
inc
inc
jb
mov
cmps
dec
cmps
or
cmp
cmc
loopne
push
dec
ret
mov
pushf
imul
push
call
lods
push
push
jbe
mov
pop
cli
sbb
call
stc
aad
and
test
cwde
xor
inc
and
dec
imul
cli
jge
jne
push
sub
jl
mov
jmp
mov
cmc
rdtsc
(bad)
repz
cmp
bound
mov
and
dec
cdq
(bad)
(bad)
test
(bad)
test
add
call
add
cmps
cld
cdq
lahf
sbb
pop
pusha
add
cld
and
xchg
xchg
dec
mov
cmc
inc
shl
jg
scas
ins
jp
hlt
inc
mov
(bad)
stc
jae
dec
mov
(bad)
fdiv
pushf
mov
xor
int3
out
cs
test
nop
jle
jg
and
mov
cmps
out
ffreep
lahf
out
div
jg
in
jnp
ds
or
add
xor
or
out
fldcw
jge
mov
dec
jae
adc
aam
lahf
stc
jmp
pop
mov
les
jbe
pop
and
pop
stos
push
mov
sub
jmp
je
(bad)
data16
aad
cmp
outs
ins
cmp
cwde
shl
pop
jo
xor
aad
neg
jmp
jp
dec
jle
pop
add
das
lds
xor
or
mov
iret
push
test
(bad)
icebp
xchg
fwait
ret
xchg
or
mov
les
mov
movs
aam
pop
(bad)
cmp
into
lds
push
clc
lock
xlat
rol
lods
jmp
rsqrtps
in
sbb
movs
adc
xchg
fisubr
lock
mov
or
in
loope
int3
js
or
push
ror
pop
aas
idiv
outs
or
jne
mov
add
retf
cmc
pop
sahf
xchg
imul
xchg
and
(bad)
fnsave
inc
(bad)
out
or
(bad)
stc
mov
jo
and
cmp
push
stos
cdq
lahf
ds
outs
scas
(bad)
or
xor
push
retf
mov
pusha
aad
lods
push
stos
push
adc
int3
pop
outs
jnp
ds
xor
mov
sub
jmp
test
adc
jbe
es
call
out
sbb
pop
ins
jl
push
dec
push
scas
xor
adc
mov
or
gs
pop
push
add
or
inc
jo
add
jmp
or
cmp
jl
test
(bad)
push
sar
cs
dec
add
sqrtps
loop
dec
or
(bad)
das
cmp
sbb
jno
xchg
stos
jge
pop
jns
hlt
pop
cwde
rol
xchg
pusha
inc
mov
in
mov
mov
ror
mov
add
push
or
fmul
jnp
push
outs
sub
or
xchg
lods
push
aaa
sbb
sub
cmp
push
xchg
push
test
clc
cmp
inc
adc
dec
add
pop
cmp
lds
fdiv
sub
sub
rcl
adc
shl
ds
idiv
mov
(bad)
mov
pusha
or
adc
sub
iret
push
xchg
aaa
and
inc
movs
pop
shr
xor
pop
aas
sbb
jl
shr
push
mov
fs
jo
mov
es
and
in
out
ret
ins
adc
mov
test
out
mov
ins
adc
jmp
cmp
shr
repz
pop
fst
pop
dec
rol
ret
jns
int3
jp
inc
daa
and
test
ret
repz
movs
sbb
mov
mov
retf
inc
sub
in
movs
mov
push
(bad)
jns
jmp
jle
pop
shr
mov
sub
xor
and
push
fisubr
pop
jne
lock
in
cmps
xlat
sub
cli
and
repz
xchg
push
pop
std
xor
inc
dec
xor
and
mov
loopne
sub
cdq
aam
in
in
es
(bad)
mov
in
out
out
ret
icebp
js
adc
lahf
add
(bad)
jmp
mov
jns
test
mov
and
pop
cwde
jnp
lods
adc
clc
sub
pushf
or
jb
jnp
sar
cs
push
shl
fdivr
cmp
add
mov
push
xchg
add
je
push
test
repz
rcr
pop
ja
loop
call
jae
cmps
cmp
sub
jp
fstp
mov
mov
jae
mov
jg
push
add
test
repnz
in
fld
jg
sbb
rcr
sbb
xchg
mov
or
and
mov
jno
aam
mul
or
and
out
or
sub
jne
jno
mov
cdq
xchg
push
xchg
shr
aas
fbstp
icebp
cmp
scas
psadbw
stc
into
or
btc
push
dec
test
fistp
repnz
mov
ja
in
test
test
dec
arpl
xor
movs
(bad)
(bad)
add
movs
jns
adc
pusha
test
ss
lock
dec
jl
sub
mov
cmp
ins
push
inc
dec
jb
fs
mov
pop
mov
retf
mov
xchg
movs
pop
pop
pop
fs
(bad)
pop
sbb
ins
sub
mov
dec
jnp
pop
pop
stos
sub
test
or
out
(bad)
and
jo
mov
mov
dec
aas
or
push
std
fdiv
popf
shl
outs
inc
out
xor
inc
and
imul
aam
call
or
in
push
mov
pop
inc
test
(bad)
sbb
push
out
xchg
xor
xchg
and
scas
div
adc
outs
js
ins
lea
cdq
(bad)
mov
or
fxch
jno
pop
sbb
test
(bad)
int3
pop
mov
(bad)
rol
mov
dec
fisttp
xchg
push
shl
pusha
dec
movs
outs
iret
outs
retf
add
inc
adc
dec
enter
shl
push
dec
push
in
jmp
fbld
imul
aas
test
ss
enter
xchg
stc
(bad)
out
faddp
jge
jmp
ins
mov
fwait
enter
inc
mov
imul
cdq
les
(bad)
jae
out
(bad)
xchg
jge
out
arpl
cmps
daa
loop
stos
sbb
cdq
xor
push
jae
mov
aaa
pop
sar
mov
and
xchg
xchg
add
sti
pop
xchg
les
xchg
ffreep
stos
ss
sub
ja
shl
ror
out
cmp
or
xchg
inc
mov
cmps
inc
inc
sbb
jne
mov
shl
jg
lds
imul
adc
sbb
inc
in
or
les
loop
loope
push
and
dec
sbb
rcr
pop
push
sub
out
rol
sub
repnz
xchg
or
jmp
sub
mov
rcl
movs
add
test
xchg
add
pushw
neg
iret
arpl
std
xor
jmp
pop
add
int3
pushf
jmp
add
xchg
lock
aas
cmps
adc
push
sub
lds
lea
inc
call
pusha
rcr
pop
lea
push
ret
icebp
push
mov
ret
push
push
stos
loop
shl
mov
cmc
cmc
adc
inc
push
jns
lahf
popa
test
mov
xchg
je
jne
dec
mov
pop
mov
inc
push
jae
dec
fs
cdq
inc
lea
bswap
xor
sbb
xchg
dec
or
mov
not
std
repnz
(bad)
rcl
mov
inc
imul
cwde
nop
pop
retf
(bad)
lock
pop
ret
sbb
in
repnz
mov
mov
dec
int
jne
shl
mov
dec
daa
mov
test
pop
aad
sbb
rcr
ins
cmc
xor
xchg
mov
test
push
xor
das
int3
mov
and
hlt
pusha
ror
sbb
and
sahf
xchg
lds
into
jnp
mov
mov
and
out
mov
or
fld
dec
or
out
out
cwde
or
xchg
out
add
add
or
add
jbe
dec
xchg
je
(bad)
mov
xchg
ds
and
jmp
leave
adc
fldz
dec
mov
test
arpl
adc
lods
shl
push
cmps
sub
sub
mov
mov
add
pop
cmc
dec
div
out
pop
dec
sub
sub
test
pop
outs
cld
inc
lods
xor
inc
inc
rol
cmp
pusha
mov
mov
jb
mov
and
lea
add
jmp
pop
(bad)
or
stos
fisttp
jne
add
in
scas
pop
sbb
jbe
ins
cwde
outs
pop
fwait
mov
(bad)
pop
test
iret
out
sub
adc
neg
cld
inc
in
jbe
mov
push
outs
sbb
adc
mov
dec
loopne
leave
and
sub
cdq
lahf
ret
inc
fdivr
aas
das
add
xchg
pop
stos
push
(bad)
mov
jmp
sbb
ins
jl
inc
cli
cdq
mov
stos
xlat
dec
xchg
shl
out
jmp
xor
mov
lea
push
out
or
popa
mov
repnz
shl
push
and
dec
jb
mul
xchg
sub
movs
pusha
test
cwde
mov
retf
and
fistp
jle
movs
out
add
jne
mov
icebp
hlt
loopne
mul
or
scas
(bad)
sbb
je
inc
mov
add
or
adc
test
mov
js
adc
loop
in
cmp
pop
pop
and
adc
dec
ret
sbb
xor
sbb
dec
loopne
cld
mov
fmul
sbb
loope
push
test
jl
mov
mov
jge
pop
retf
js
fadd
jl
(bad)
out
jns
ret
daa
sbb
sbb
push
mov
inc
pop
int
mov
aam
cld
lock
pop
mov
inc
mov
sbb
je
enter
fwait
xor
pusha
mov
(bad)
test
(bad)
dec
loope
sub
push
fnstcw
test
rol
pop
(bad)
cdq
mov
pop
bnd
nop
pop
fs
stos
data16
sti
cmp
adc
hlt
dec
lds
adc
shl
in
in
mov
call
test
xchg
push
imul
jle
dec
xchg
scas
(bad)
mov
xchg
stos
mov
sti
mov
lds
int
cmp
stos
outs
nop
mov
das
ret
aaa
jp
pop
pop
fs
mov
pop
fstp
mov
daa
into
cld
inc
adc
(bad)
xchg
arpl
jne
retf
mov
xchg
mov
jl
addr16
sbb
arpl
loop
leave
mov
sub
push
idiv
mov
dec
mov
test
and
adc
ret
(bad)
or
pop
ret
and
sub
hlt
je
inc
cmp
scas
lahf
sub
outs
push
retf
iret
repz
lods
push
sar
lea
jmp
js
sub
imul
push
stos
out
loop
repnz
int
jp
sbb
mov
add
mov
mov
(bad)
or
or
push
xchg
test
mov
jge
xor
fs
jmp
and
inc
mov
outs
stos
pop
out
push
mov
jecxz
div
pusha
cmp
movs
das
or
loopne
in
jge
fadd
(bad)
push
or
and
adc
in
lea
jo
mov
cmp
dec
adc
sub
cmp
repnz
lods
mov
inc
imul
fwait
xor
or
imul
imul
or
jle
jns
stos
mov
pop
cmp
jns
mov
stos
add
jno
xchg
lods
arpl
jne
adc
inc
sbb
ret
je
add
pop
jl
scas
push
dec
outs
jmp
fwait
sub
ficom
jle
and
adc
leave
daa
push
pop
adc
into
dec
xchg
retf
push
jb
inc
jno
in
shl
ja
addr16
add
xor
mov
or
iret
sub
lea
aam
and
mov
gs
inc
sbb
jb
or
cdq
(bad)
arpl
out
call
pop
es
pusha
adc
test
mov
jns
clc
retf
push
sub
jmp
cmp
cmc
inc
add
or
inc
arpl
push
fdiv
pusha
add
mov
popa
xor
aam
dec
add
mov
fist
lods
push
movs
dec
xchg
pop
push
(bad)
outs
cmps
fistp
adc
pop
and
in
jo
retf
in
sar
add
xchg
mov
jmp
ds
and
outs
inc
jp
jb
xchg
mov
mov
mov
pop
push
adc
sar
pop
jmp
shr
icebp
outs
dec
and
dec
aas
(bad)
rcr
push
jmp
cdq
sub
pop
adc
icebp
xor
idiv
(bad)
jp
sub
sahf
push
jns
retf
push
call
xor
push
or
(bad)
call
outs
daa
mov
je
add
rcl
pop
iret
push
loope
loope
sbb
jp
ret
xchg
cmp
in
and
and
xchg
iret
scas
lea
xor
je
sub
xor
shl
jp
retf
push
cmp
mov
add
sti
ds
ja
xor
add
ror
stos
and
int
xor
test
ins
xor
mov
retf
and
adc
cmp
fwait
(bad)
ins
addr16
inc
fistp
inc
mov
dec
add
pop
cmp
cmc
repnz
lods
les
mov
test
dec
sbb
inc
in
and
jne
test
out
mov
cs
and
mov
cli
jmp
jg
add
xor
arpl
cmps
jnp
lock
xor
push
cld
ins
loope
call
push
in
cmp
lods
sbb
adc
mov
push
xchg
sbb
dec
dec
out
pop
jmp
mov
pop
ds
pop
test
pop
or
pop
cli
add
xchg
sbb
pusha
mov
add
fiadd
inc
and
cmp
test
ret
jno
xchg
mov
in
loop
mov
mov
push
pop
xchg
in
push
aam
sub
je
sub
fs
addr16
push
mov
cli
dec
and
out
push
push
jno
jno
xor
sub
dec
inc
retf
push
ffreep
jl
imul
ret
push
sub
xchg
adc
or
aad
je
jno
mov
(bad)
in
jno
pusha
or
pop
add
sbb
retf
add
jmp
add
pop
dec
retf
data16
xor
shr
cmp
in
jns
out
test
sti
mov
out
inc
sbb
xlat
jl
or
lahf
ret
ret
xor
shl
sbb
add
pop
test
movs
(bad)
push
xor
cld
cmp
movs
jp
(bad)
scas
cld
mov
fxch
add
sbb
jle
push
fstp
or
mov
imul
mov
arpl
and
xchg
bnd
mov
inc
mov
call
fisttp
jl
movs
and
(bad)
clc
lock
fisubr
cli
cmp
pop
test
jbe
(bad)
xchg
pop
pop
pop
push
aad
pusha
dec
gs
jo
dec
cmps
stc
mov
adc
and
cmp
fistp
add
in
and
jo
add
mov
or
mov
xor
call
mov
push
sbb
push
ins
pop
call
test
xor
xchg
loope
stos
and
dec
sub
sub
and
mov
and
aaa
leave
repnz
rcl
xchg
lock
xchg
pop
cwde
mov
xchg
push
daa
lods
int
in
fild
inc
xchg
cs
fnsave
popa
mov
push
push
loope
fwait
jge
fs
fcomp
cmps
mov
repz
pop
lock
(bad)
hlt
add
int
cmp
mov
call
inc
stos
mov
dec
mov
test
lods
ficomp
jmp
pop
dec
pop
jg
mov
dec
imul
(bad)
fmul
fsubr
ret
test
push
imul
pop
retf
int3
push
push
add
inc
push
scas
pop
fnsave
xchg
jnp
pop
into
add
stos
ds
mov
xor
stos
pop
dec
or
sub
pop
imul
aam
mov
xor
repz
xchg
lds
scas
mov
add
(bad)
pop
loop
push
adc
fmul
mov
inc
sub
add
pop
das
inc
xchg
lds
aas
adc
fld
xor
rol
xchg
imul
push
xor
jnp
mov
imul
pushf
cmp
cdq
rcr
push
adc
lea
mov
cmp
int
adc
xchg
mov
push
jb
fstp
mov
les
(bad)
rcr
dec
lock
shr
(bad)
sbb
out
jno
add
and
dec
cmc
pop
sbb
push
(bad)
adc
sub
js
xor
inc
mov
and
arpl
std
loope
jne
test
mov
push
jbe
or
or
inc
mov
leave
sahf
fs
rol
es
xchg
test
adc
sbb
sti
lds
or
push
dec
xlat
dec
jbe
imul
addr16
adc
std
push
popf
mov
stos
les
pop
cmps
inc
adc
dec
jne
and
std
dec
pushf
mov
push
repnz
ins
rcr
rol
mov
pop
push
popf
inc
jg
jne
adc
out
iret
and
mov
shr
jg
adc
mov
mov
jle
in
xchg
into
sbb
(bad)
cs
jmp
daa
pop
movs
xor
ror
cdq
movs
loopne
sti
push
ins
aam
nop
jno
daa
ins
mov
rol
adc
and
push
pusha
in
and
int
int
sbb
dec
or
hlt
pop
xor
in
rol
push
xor
add
adc
aam
daa
(bad)
dec
into
jle
xor
adc
mov
call
push
adc
test
sub
out
fsubr
out
jge
jle
les
loope
std
mov
fstp
xor
sbb
inc
sbb
and
jo
test
sbb
clc
(bad)
mov
xchg
sub
cmc
loop
inc
test
push
xor
out
sbb
enter
push
xor
xor
adc
ret
push
and
hlt
mov
mov
xor
arpl
mov
repnz
hlt
cli
jecxz
ret
sar
cmp
(bad)
mov
jae
test
mov
(bad)
std
or
outs
(bad)
outs
xor
mov
pop
sbb
std
(bad)
cmp
inc
push
xor
sub
xchg
je
std
sub
push
pusha
icebp
pop
pop
es
push
jp
mov
mov
mov
fwait
mov
scas
push
inc
(bad)
fs
call
mov
cld
rcr
ret
fwait
ja
cmp
jecxz
test
test
xchg
(bad)
in
shr
arpl
mov
or
or
dec
(bad)
in
mov
dec
je
xchg
mov
lea
push
ins
push
imul
repz
loopne
xchg
out
out
daa
adc
adc
or
(bad)
aaa
test
xor
ja
cmp
lods
xlat
iret
xchg
in
sub
push
xor
push
adc
test
sub
mov
addr16
jo
enter
mov
push
xchg
gs
dec
or
jnp
pop
inc
ficom
xchg
fdiv
cwde
push
and
adc
in
(bad)
loopne
xchg
cs
pop
aam
ja
out
or
or
test
dec
aas
jae
fwait
dec
dec
test
pop
mov
out
cdq
stos
and
gs
into
xchg
adc
jmp
add
hlt
add
mov
and
out
(bad)
in
sub
repnz
aaa
jle
ds
rcr
sub
icebp
repnz
sub
loope
or
add
fmul
or
mov
push
mov
add
and
push
jne
lahf
por
(bad)
push
push
cmp
scas
mov
les
ror
add
pop
mov
mov
leave
out
mov
push
nop
mov
ret
mov
cwde
jmp
sub
xchg
enter
addr16
test
shl
xchg
rol
shld
pop
es
cdq
and
mov
push
add
jp
gs
clc
ss
and
or
test
test
jp
arpl
stc
jl
pop
call
test
push
retf
add
sub
loop
jo
int
cld
xchg
mov
fld
cmps
(bad)
shr
bound
loopne
shl
lods
mov
cmp
mov
sbb
cmp
mov
les
jmp
cwde
pop
das
jle
jmp
ret
mov
popf
cmp
jnp
mov
aas
hlt
(bad)
xor
mov
in
pop
sbb
mov
gs
aas
jmp
cmc
push
pusha
jne
lds
inc
std
or
arpl
dec
xor
inc
and
pop
daa
xlat
jnp
mov
push
sti
inc
push
pusha
push
mov
sub
out
adc
enter
inc
lds
int
into
pop
cmp
pop
popa
ror
call
jl
sub
sbb
inc
ret
cmp
dec
pop
and
cld
mov
push
repz
popf
or
pop
into
sbb
(bad)
fadd
mov
shr
imul
ins
jmp
xor
mov
mov
push
cmp
loope
bound
clc
mov
mov
sub
or
sub
push
inc
hlt
lock
or
loop
push
fmul
imul
cdq
(bad)
and
xchg
leave
pop
retf
push
and
mov
sub
and
sbb
arpl
ds
out
mov
iret
into
xchg
dec
xchg
nop
mov
push
pop
adc
cmc
int3
xchg
aam
jp
xor
int
or
xchg
dec
xchg
and
xchg
fdivr
add
sub
scas
mov
in
hlt
int
and
in
push
pop
pusha
cmp
fwait
nop
mov
adc
jno
repnz
aam
test
repz
push
gs
xchg
das
lods
shl
or
into
pop
xor
sub
xchg
sub
push
mov
mov
push
fdiv
adc
xor
outs
cmps
push
out
and
cmps
mov
inc
mov
dec
movs
icebp
sbb
(bad)
out
xor
push
shl
jmp
cwde
add
push
stc
push
in
mov
(bad)
imul
xchg
push
movs
stos
jbe
jmp
inc
out
jo
xchg
push
ja
sbb
add
push
(bad)
sbb
inc
jp
and
arpl
aaa
rcl
enter
xor
stc
shr
jmp
mov
ja
mov
call
fwait
mov
fidivr
jbe
movs
out
jmp
repnz
mov
mov
cmp
and
adc
sar
in
mov
push
imul
mov
and
xchg
cdq
mov
push
ds
repz
loop
int
adc
int
xchg
add
bound
das
xor
aad
rcl
ficomp
or
ja
xor
mov
shl
jle
leave
mov
fwait
js
inc
loopne
push
cmp
sub
sbb
gs
fistp
scas
mov
mov
stos
cmc
mov
out
ja
in
lock
dec
mov
lods
outs
and
mov
mov
mov
mov
shl
lock
push
fidiv
pop
rcr
add
or
stos
ficom
xchg
dec
and
aas
add
sub
dec
push
mov
js
jno
cmp
sbb
mov
fldcw
mov
cmp
fsub
adc
xchg
addr16
ficomp
jnp
mov
jp
adc
mov
mov
mov
outs
inc
rcl
idiv
adc
push
jg
cmp
fdiv
outs
sub
sub
inc
call
sub
adc
pop
jecxz
dec
mov
daa
mov
add
nop
pop
dec
lock
xchg
call
paddd
cli
cmps
aad
fwait
lods
aaa
xchg
sub
mov
pop
(bad)
dec
out
fsubp
imul
setne
pop
pop
(bad)
stos
jb
retf
repnz
dec
inc
mul
cmp
pop
add
mov
xchg
pop
shr
inc
jbe
fadd
add
mov
pop
icebp
adc
dec
(bad)
xchg
add
mov
cmp
inc
in
loop
mov
xor
pop
push
inc
pushf
cmps
push
pop
ja
mov
pmulhuw
aam
sbb
imul
(bad)
lods
aad
jge
retf
daa
xchg
movs
pusha
push
inc
outs
hlt
ror
inc
hlt
xchg
dec
jne
fstp
push
repz
ja
outs
inc
daa
pushf
pop
aaa
scas
push
call
scas
fsub
sbb
mov
cmps
jp
push
adc
ins
dec
and
push
test
dec
mov
inc
call
lahf
push
cmp
cmp
daa
inc
lahf
sub
cs
retf
int
stos
shr
nop
pop
cmp
fnstsw
dec
pop
call
cmp
shl
leave
pop
cmp
out
(bad)
jmp
(bad)
sbb
out
cmc
ins
inc
cmc
and
sub
add
mov
inc
xchg
add
sub
inc
inc
fstp
inc
fwait
sub
lock
pop
lods
mov
mov
dec
mov
add
sbb
sbb
xchg
and
neg
mov
adc
push
mov
loope
pushf
push
cs
sub
sub
dec
adc
jne
inc
loopne
inc
jle
in
inc
jmp
cmc
popf
stos
jnp
aaa
jmp
pop
and
push
enter
scas
rcr
mov
jecxz
je
mov
xor
xor
xor
xor
dec
fild
nop
jae
or
mov
cmp
jle
push
add
xor
dec
cmp
mov
mov
jle
and
xor
mov
in
mov
inc
xor
sub
dec
pop
aam
(bad)
outs
and
xchg
lods
stc
(bad)
out
or
iret
stos
push
mov
leave
add
jl
and
stos
add
fsubr
daa
cmp
add
daa
xor
or
xchg
mov
std
push
in
jmp
inc
push
imul
jo
jmp
cmps
xchg
dec
add
xchg
mov
pop
std
es
jmp
fadd
jp
mov
in
shr
mov
mov
jae
rcr
pop
and
fmul
dec
push
test
jecxz
mov
add
daa
jnp
adc
shr
cli
les
adc
pusha
push
ror
in
test
enter
loopne
adc
icebp
sub
mov
dec
aam
(bad)
mov
popf
mov
push
sbb
jge
mov
jle
stos
loope
sbb
pop
fldenv
js
jnp
push
adc
cmp
jl
(bad)
cmp
and
xor
and
iret
sbb
jmp
jmp
call
imul
(bad)
fsub
mov
lahf
rcr
sbb
or
out
sti
dec
cwde
in
(bad)
mov
jb
enter
push
ror
std
retf
mov
fimul
ds
adc
sub
mov
ret
mov
(bad)
jmp
sbb
das
xchg
aas
lods
rcl
mov
mov
int
cs
xor
or
imul
dec
dec
arpl
xchg
push
or
fld
sub
daa
(bad)
jg
addr16
push
xchg
sbb
clc
sub
jo
inc
jno
cmp
push
loope
dec
inc
fwait
inc
mov
adc
jge
inc
sahf
(bad)
push
gs
jmp
inc
icebp
pop
pmulhw
and
shr
push
popa
js
sub
push
push
dec
mov
push
leave
push
es
shl
ss
jge
jne
mov
add
rol
adc
fsub
xchg
js
add
sub
das
hlt
adc
adc
test
mov
cmps
rol
pop
rcr
pop
cld
add
xchg
dec
out
add
xchg
aas
xchg
add
in
repz
nop
pusha
adc
push
push
or
or
mov
stos
cwde
mov
rol
mov
mov
sub
xchg
cmps
cld
inc
adc
in
jp
push
mov
dec
(bad)
adc
and
jge
das
and
mov
add
scas
sbb
mov
inc
inc
mov
add
xchg
iret
in
in
(bad)
pop
pop
movs
jns
add
and
mov
les
jbe
sub
(bad)
repnz
sub
in
ret
test
fdiv
sub
(bad)
xlat
in
mov
mov
test
fmul
(bad)
pop
adc
add
dec
shl
outs
or
data16
or
adc
scas
shr
ret
mov
sub
adc
mov
sub
or
push
iret
cmp
out
in
pop
je
outs
mov
jmp
call
push
mov
cs
nop
sub
sub
fldenv
pop
pop
mov
and
add
push
push
adc
(bad)
mov
loop
pusha
test
out
pop
adc
add
sub
mov
mov
mov
push
icebp
movs
movs
xchg
stc
aam
fsub
mov
add
movs
mov
jmp
daa
fbstp
arpl
cld
pop
pop
pushf
ror
mov
lea
mov
inc
sbb
push
jle
ror
loopne
mov
popf
in
and
xchg
mov
lods
icebp
cdq
sbb
pmaddwd
retf
or
xor
not
xchg
add
icebp
inc
push
push
call
add
adc
sub
dec
lahf
inc
(bad)
int3
(bad)
xor
movs
ja
hlt
push
jmp
(bad)
xchg
xor
pushf
loopne
sub
add
add
mov
loopne
(bad)
jmp
push
add
xchg
cli
les
sbb
add
jno
cmp
sti
(bad)
shr
xchg
les
push
add
outs
xchg
jmp
(bad)
xor
inc
sub
pop
loopne
imul
mov
in
ss
fld
jge
mov
xchg
cs
(bad)
das
lds
push
xor
jmp
cmp
pop
sub
jl
and
adc
fabs
xor
aas
xchg
jl
inc
cmp
lock
pop
(bad)
lahf
sbb
mov
xchg
movs
dec
mov
or
mov
pop
inc
mov
pop
pop
arpl
fisubr
sahf
mov
inc
and
push
mov
push
xlat
out
mov
add
pop
fs
xor
jb
xchg
in
jnp
(bad)
add
pushf
xchg
call
push
mov
jbe
lock
in
sbb
mov
ficom
sbb
fnstenv
js
ror
lods
mov
ror
lock
lahf
xchg
inc
mov
mov
shl
pop
imul
dec
sahf
mov
xchg
rcl
jp
addr16
add
outs
add
pop
or
movs
push
sar
push
sub
dec
mov
test
adc
test
mov
int
push
loope
mov
or
cmp
inc
scas
cmp
and
add
xchg
push
or
sub
xchg
jne
lods
std
pop
sbb
ret
inc
jmp
clc
add
movs
push
lods
fwait
mul
fnsave
in
mov
popf
lea
and
sub
jb
leave
cli
hlt
pop
mov
hlt
fldenv
out
out
jp
mov
jns
ins
jns
jo
fst
ss
fst
add
and
pop
enter
sahf
jp
cmp
stc
sub
jae
(bad)
fwait
stos
arpl
sub
ins
or
(bad)
jno
ss
push
cmps
push
add
mov
shr
jl
and
out
sti
(bad)
daa
aas
ins
mov
(bad)
or
push
pop
je
sub
dec
inc
shr
test
mov
jo
es
cmp
jecxz
or
test
sub
data16
pusha
nop
add
push
dec
sub
dec
inc
mov
icebp
jnp
inc
inc
adc
loopne
ss
shl
(bad)
imul
push
pop
fwait
mov
mov
loop
cmp
xor
fwait
loopne
and
sbb
int
sar
(bad)
fcomp
movs
std
rol
inc
fsubr
adc
lahf
mov
arpl
mov
ret
stos
retf
mov
cmp
pushf
repnz
xchg
movs
das
mov
sub
shl
cdq
xchg
xchg
and
(bad)
push
pop
push
mov
fisub
sbb
cs
mov
fs
and
xchg
xchg
xor
push
mov
scas
dec
xor
xchg
adc
cwde
(bad)
pop
and
jmp
aaa
sub
mov
xchg
and
int3
sub
daa
ins
fidivr
sub
movs
scas
fld
xor
sub
lds
jae
bound
jns
cli
sbb
popa
pop
sbb
popa
cld
dec
mov
pop
push
iret
fist
lods
pop
xor
or
ret
xor
pop
cmp
ret
mov
aaa
add
inc
imul
xchg
sub
leave
shl
push
das
and
aam
and
icebp
inc
pop
(bad)
adc
shr
push
push
pop
scas
cmps
jbe
add
(bad)
icebp
push
push
repnz
xchg
cwde
push
jo
sub
xor
pushf
sbb
or
shl
in
cdq
sbb
adc
mov
sbb
jg
dec
or
and
push
xchg
arpl
sahf
ja
mov
jg
in
icebp
xor
loop
pop
movs
xchg
call
or
neg
fcomi
pop
out
mov
bound
enter
(bad)
loope
out
loopne
jmp
mov
pop
inc
adc
movs
cmp
or
fnsave
mov
xchg
mov
cmp
push
xchg
sub
lahf
pop
repz
lods
dec
test
or
mov
inc
movs
xchg
sbb
bound
and
cmovl
dec
sbb
adc
dec
nop
out
repz
mov
rol
xor
xor
pop
mov
jecxz
aas
xor
repnz
iret
test
cdq
pop
leave
jnp
or
and
push
sub
push
mov
pop
cld
fidiv
push
or
lock
fucomp
cmp
movs
jg
mov
ins
mov
add
dec
sbb
rcr
cmps
test
push
jne
adc
jnp
fmul
pop
aad
jbe
push
mul
arpl
enter
sbb
jb
out
je
stos
xor
sti
outs
mov
xchg
inc
addr16
and
test
dec
sti
fldcw
rol
lea
scas
cmp
sub
xchg
leave
and
(bad)
mov
or
inc
jne
jg
ja
xor
mov
ret
xor
adc
pop
out
imul
inc
add
repz
add
push
pop
push
cmp
fld
icebp
iret
loop
xlat
cmp
sub
dec
imul
fisttp
pushf
test
cmps
xchg
jl
and
out
dec
rcr
mov
test
or
test
ret
sbb
clc
clc
jl
stos
int
dec
pop
jmp
arpl
loop
add
sbb
and
adc
inc
mov
sbb
fistp
or
cmps
sar
dec
push
dec
or
push
cmps
mov
loop
inc
or
(bad)
xor
mov
push
call
das
pop
daa
in
jb
xchg
push
jne
jnp
cmc
ret
lock
sbb
pop
shr
cmp
push
cmp
(bad)
dec
jg
(bad)
cwde
retf
jb
mov
cmp
rol
aam
stc
jo
std
icebp
pop
loope
mov
jl
daa
idiv
xchg
aas
push
xchg
ins
jne
push
xor
iret
and
xchg
push
dec
nop
and
test
std
popa
dec
mov
mov
dec
dec
and
jmp
jo
jnp
dec
retf
loop
iret
dec
fcmovnu
ret
int
(bad)
xchg
adc
loopne
xor
repnz
inc
(bad)
xchg
ficom
and
pop
popf
fisttp
or
xor
xchg
jg
cli
jns
or
pop
and
fwait
int3
js
add
xor
daa
xor
xchg
push
cmps
cmp
adc
mov
ret
cdq
adc
push
jbe
mov
loope
dec
out
(bad)
sub
in
in
outs
sub
out
sbb
es
iret
inc
sub
popf
xor
add
stos
test
mov
scas
je
pop
inc
nop
pop
gs
cmp
ss
and
fsub
sub
dec
jmp
jns
loop
jns
push
mov
movs
push
cmp
enter
(bad)
add
fsub
dec
or
jbe
mov
gs
int3
pop
dec
sbb
aam
sbb
popf
pusha
or
stos
xchg
nop
or
daa
cmps
push
mov
jmp
mov
movs
jno
or
sbb
xor
das
mov
dec
mov
mov
push
push
jle
fs
mov
(bad)
mov
inc
and
movs
call
or
xor
loopne
lahf
imul
jg
div
jecxz
jo
repnz
enter
jns
mov
int
aaa
rcl
dec
mov
sbb
push
jp
sbb
sub
mov
adc
mov
cmps
loop
mov
fcmovb
mov
lahf
div
shr
mov
adc
jo
movq
push
pop
mov
cmovno
jp
dec
xchg
cmp
xlat
pop
or
cld
not
sub
jl
into
cld
(bad)
gs
dec
imul
xor
adc
pushf
push
or
xchg
jno
sbb
push
cmps
out
sti
in
xchg
retf
scas
hlt
and
fisub
sub
mov
or
inc
sbb
push
scas
lds
test
dec
mov
je
mov
pop
dec
sbb
imul
and
cmp
(bad)
(bad)
(bad)
out
mov
adc
adc
stos
cmps
shl
cmp
out
lds
jp
sahf
fnstsw
daa
push
cmp
xchg
xchg
mov
leave
push
not
sbb
add
(bad)
xchg
dec
movs
mov
pop
jb
aam
fwait
sub
push
push
and
in
pop
pop
mov
int3
fimul
mov
aam
jecxz
iret
mov
call
xchg
fdivr
push
ret
mov
mov
(bad)
test
bound
test
sub
ins
pop
sbb
mov
dec
mov
ja
jecxz
pop
shr
sbb
ds
je
lds
xor
mov
xchg
test
retf
mov
cwde
rcr
scas
arpl
popf
movs
cld
sub
xor
jae
adc
popf
pop
dec
xchg
add
lock
test
movs
cli
call
mov
daa
clc
mov
pop
push
jmp
dec
push
pop
mov
pop
jg
lock
inc
pop
into
pop
(bad)
jge
dec
push
ret
jae
xchg
or
cdq
pop
jb
push
cmps
ds
jo
cmp
sbb
add
pop
dec
fsub
jb
mov
scas
mov
xchg
push
and
sbb
mov
sbb
dec
ins
sbb
gs
cmps
imul
lock
out
add
cmp
xchg
or
mov
je
test
bound
inc
ret
jo
fidivr
push
retfw
or
dec
pop
inc
pop
cmp
nop
data16
cdq
xchg
mov
das
movs
repnz
or
add
out
sbb
add
sbb
in
movntps
repnz
xlat
push
(bad)
mov
jmp
and
and
add
mov
pop
inc
fimul
mov
mov
sbb
das
cmps
push
xor
bound
pop
add
or
imul
or
jp
xchg
dec
stos
add
ins
nop
pop
jg
xchg
xchg
inc
push
sbb
sub
sbb
sar
add
aas
es
mov
aam
enter
movs
bound
in
outs
dec
scas
clc
sbb
jne
push
sahf
pop
les
mov
adc
add
inc
(bad)
jp
and
add
mov
dec
retf
inc
add
clc
push
outs
dec
pop
stc
push
dec
enter
movs
xor
xlat
push
push
jmp
dec
xor
lahf
or
inc
mov
test
dec
inc
dec
mul
adc
or
fcomp
data16
sti
or
xor
mov
cli
xchg
or
mov
jae
ffreep
add
outs
xchg
in
ret
aas
push
mov
div
push
arpl
cmc
adc
cwde
mov
shl
push
out
and
fs
arpl
retf
adc
add
div
(bad)
xor
fidiv
clc
lea
test
fs
outs
dec
leave
xchg
outs
sbb
int
popa
cmps
scas
test
fucomip
mov
sub
aas
and
mov
dec
push
stos
push
cmps
add
sar
imul
arpl
adc
aam
or
mov
push
adc
jmp
sub
mov
in
lds
jb
test
nop
lds
dec
add
repnz
jb
js
in
fstp
or
mov
inc
dec
retf
and
icebp
and
std
mov
add
mov
mov
mov
cwde
jb
(bad)
enter
xor
sbb
pop
add
fwait
aas
xchg
xchg
pop
or
daa
es
jge
(bad)
shl
test
mov
dec
push
cmp
mov
jge
sahf
push
add
or
imul
gs
inc
ja
adc
pop
leave
dec
push
psubsb
push
cld
lods
add
jo
mov
call
sub
cmp
push
sub
fcmovb
lds
xor
pop
bound
lea
loop
jge
loop
in
es
arpl
sbb
mov
inc
dec
jns
cmps
jmp
xchg
or
pushf
xor
pop
bound
add
hlt
dec
dec
ret
(bad)
int3
xor
cdq
inc
in
xchg
add
aad
sub
int3
jge
ficomp
call
mov
or
cmp
inc
in
js
aam
xor
cli
xacquire
add
mov
cmps
cli
xor
push
mov
jle
(bad)
dec
in
push
dec
les
adc
daa
or
dec
das
and
inc
je
mov
lods
mov
mov
rcl
adc
call
fld
adc
push
out
aas
or
add
or
fstp
dec
pushf
dec
lods
popa
or
jg
jno
retf
xor
(bad)
cmp
(bad)
loope
in
lahf
fdivr
aam
adc
push
les
cmps
or
mov
aaa
fidiv
not
fstsw
lods
sub
sbb
cwde
or
sbb
jp
adc
xchg
hlt
clc
inc
loopne
xchg
cwde
xchg
movs
dec
add
mov
push
lods
ins
(bad)
in
loope
lahf
lds
and
call
jmp
pusha
xchg
cwde
nop
adc
adc
aam
xchg
into
lock
mov
mov
push
push
jnp
sbb
mov
pop
xor
nop
or
outs
jle
mov
daa
dec
and
xchg
sti
dec
sar
push
int3
xchg
xchg
test
sbb
and
mov
add
mov
push
aas
push
inc
sub
mov
fcom
fnstcw
out
xchg
inc
jno
call
cmp
and
pop
adc
addr16
inc
push
bound
cmc
push
jb
jo
cmp
cmp
mov
adc
leave
sar
lahf
fmul
das
fnstsw
xchg
mov
js
repnz
add
retf
push
mov
ds
mov
cli
bound
movs
enter
cwde
inc
mov
add
popa
cmp
sbb
jno
sbb
shl
pop
inc
jl
jae
or
adc
jo
mov
movs
and
and
or
dec
jno
(bad)
sbb
ss
sbb
shl
inc
cwde
stos
cdq
pop
mov
bound
push
lahf
adc
adc
and
bound
cmp
mov
mov
test
enter
inc
lea
push
xor
mov
ins
and
push
(bad)
dec
push
push
jmp
into
pop
aam
or
push
sti
sbb
in
arpl
out
sar
or
xchg
daa
xchg
jns
jg
mov
popa
clc
int3
outs
leave
fld
mov
or
sbb
add
shl
stc
sbb
hlt
shl
mov
jnp
into
pop
push
pop
packsswb
dec
or
pop
lahf
pop
out
cmp
fbstp
jecxz
pop
mov
(bad)
addr16
jge
cmp
stos
lds
jmp
gs
cmp
xlat
fnstsw
test
lods
call
xor
mov
xchg
xchg
adc
daa
mul
sub
jmp
retf
jg
mov
fcmovnb
add
ins
and
adc
adc
jnp
and
jae
mov
sbb
xor
retf
jb
fmul
inc
inc
sbb
dec
mov
xor
adc
call
outs
scas
mov
jno
retf
jecxz
pop
cmovb
xlat
out
cdq
fstsw
cmp
stc
jmp
icebp
clc
cmc
in
imul
or
and
or
addr16
ja
aaa
dec
jnp
mov
hlt
cmp
add
rol
mov
test
sub
xchg
or
sbb
mov
sti
call
adc
sub
ficomp
int
jmp
pop
jmp
xor
fsubr
test
test
cmp
into
mov
sahf
in
cmps
ficomp
enter
xchg
sbb
fnsave
popa
dec
(bad)
stc
mov
pop
out
add
loopne
cmc
fisubr
hlt
xchg
mov
and
test
cli
xor
mov
push
cmp
retf
dec
(bad)
adc
jbe
xchg
mov
mov
retf
dec
cmps
in
inc
pop
and
mov
test
cli
cdq
pop
fld
out
sar
inc
push
movs
cmps
les
retf
mov
jle
mov
loopne
sub
out
mov
push
mov
inc
pushf
stos
cld
out
add
cmp
pop
test
aas
outs
sar
aad
dec
aad
push
sub
mov
pop
nop
mov
jns
jge
imul
jge
sbb
xor
retf
lods
pop
push
mov
test
mov
int
in
and
out
or
aaa
retf
loopne
mov
or
dec
iret
xchg
fcomp
mov
inc
cmc
(bad)
ret
imul
ss
push
adc
stos
adc
div
dec
mov
mov
inc
xchg
icebp
jne
mov
jae
sub
push
cmp
jbe
div
ret
push
shl
(bad)
jl
and
push
in
retf
pop
out
xchg
(bad)
push
ss
imul
fimul
push
jmp
outs
jnp
dec
out
pop
cld
pusha
mov
fs
pop
pop
in
cli
das
xor
inc
aaa
xor
mov
push
test
cmp
gs
psllq
cmps
dec
cmp
cmc
xchg
fldpi
(bad)
lds
cmp
push
pop
imul
adc
mov
stos
cli
loope
fidivr
add
lock
daa
into
mov
mov
xlat
lods
dec
sbb
cdq
inc
add
in
and
std
mul
add
out
scas
and
xlat
shl
inc
dec
push
ds
dec
sahf
inc
add
pop
add
xchg
add
xor
out
clc
sbb
ret
xchg
or
enter
call
iret
mov
push
dec
add
shl
jnp
test
pop
jmp
inc
jb
add
scas
icebp
out
leave
adc
hlt
push
adc
cmc
je
rcl
retf
push
rol
dec
push
hlt
stc
ror
jb
(bad)
sub
loopne
mov
xor
sbb
adc
arpl
daa
lea
sbb
or
sbb
pusha
cmp
call
cmp
retf
xor
push
inc
sub
out
ret
hlt
mov
jge
xchg
pop
xchg
daa
mov
sbb
fsubr
sbb
(bad)
xchg
lds
call
dec
mov
stc
call
mov
push
sbb
sub
cmp
cs
ret
mov
dec
push
arpl
ret
jae
(bad)
fdiv
outs
mul
stos
(bad)
out
mov
(bad)
cmp
or
shl
sub
cmp
pop
cwde
cwde
lds
(bad)
aaa
pop
out
lods
shr
cmp
test
aam
push
pop
test
push
int3
das
iret
jb
xor
push
inc
mov
lods
cmp
adc
pop
pusha
mov
pop
retf
push
fcomp
mov
pop
pop
mov
ds
outs
cs
ret
lahf
enter
loopne
rcr
je
push
sub
adc
aas
fs
mov
mov
push
jmp
in
icebp
pop
adc
inc
inc
dec
jmp
loop
push
popa
imul
rcl
push
fcmovnbe
mov
mov
xchg
scas
aas
outs
test
ficomp
stos
outs
add
adc
add
std
test
cmp
(bad)
mov
and
sbb
pop
pop
test
loopne
push
push
mov
stos
bound
imul
dec
mov
cmp
jle
jno
jae
sbb
sub
cmp
jle
sbb
repnz
mov
mov
jns
add
ret
clc
rcr
idiv
jmp
adc
call
and
inc
cmps
jbe
shr
mov
stos
mov
xor
pop
fiadd
push
dec
int3
data16
sub
jmp
mov
les
mov
inc
lods
hlt
mov
nop
aad
inc
cmps
sub
xor
fiadd
sbb
test
(bad)
sti
cmp
ficom
loope
lds
sub
addr16
pop
lea
mov
mov
push
adc
leave
sub
test
mov
in
cmps
adc
mov
add
je
add
pop
cmp
dec
bound
icebp
fwait
xchg
data16
out
add
cld
gs
cmp
xchg
movs
movd
pusha
xchg
mov
pop
cmp
push
inc
mov
pop
(bad)
dec
sub
jae
fistp
in
xchg
rcr
inc
not
sbb
mov
sub
jp
popf
movs
cwde
push
xchg
test
fadd
mov
sub
(bad)
std
jae
mov
scas
enter
adc
ret
xor
inc
push
stc
icebp
and
ja
mov
mov
mul
and
js
cmp
mov
fcom
mov
sbb
popf
scas
mov
cmc
ja
mov
test
es
fucomp
test
out
xchg
gs
es
cli
fdiv
dec
push
add
ret
mov
xor
(bad)
mov
cwde
xchg
sub
icebp
das
aad
les
cmp
mov
push
sub
or
add
dec
cld
ss
adc
add
pop
mov
out
xor
iret
mov
movs
xor
adc
inc
repz
xchg
pop
or
mov
and
js
aaa
fsubr
push
xor
push
inc
pushf
stc
fdiv
popf
cmp
and
jns
sub
xchg
retf
loopne
fcom
dec
out
popa
data16
inc
dec
lods
out
sub
fdivr
adc
cmp
setno
jns
push
out
test
jno
test
bound
dec
sub
sahf
jmp
xor
ja
inc
and
jnp
xchg
mov
jo
(bad)
in
jbe
sbb
clc
mov
fild
mul
(bad)
icebp
je
sbb
outs
mov
pusha
in
sahf
cmp
xor
(bad)
aaa
lds
clc
pop
inc
add
int
pushf
out
sbb
and
adc
clc
addr16
dec
xchg
dec
mov
aad
jle
mov
push
dec
stos
inc
jns
enter
push
xchg
movs
imul
arpl
xchg
cmp
shld
xor
enter
(bad)
popa
inc
sub
mov
xchg
mov
jne
mov
(bad)
mov
jg
cmps
add
inc
and
mov
ror
xor
(bad)
outs
mov
gs
fbstp
out
lea
ds
push
(bad)
sbb
clc
xchg
xor
(bad)
arpl
mov
mov
fnstcw
xor
jb
sahf
mov
lds
jns
dec
or
xor
dec
lock
push
clc
push
mov
sub
imul
hlt
imul
sub
fadd
xor
loopne
stos
push
dec
and
std
inc
fsubr
xchg
(bad)
pop
pop
mov
test
jbe
cld
dec
clc
repnz
popa
sahf
push
push
sbb
xchg
cld
arpl
xchg
lods
pop
sahf
(bad)
sub
cmps
fistp
pop
fld
sti
mov
jge
jge
dec
dec
je
nop
icebp
jg
pushf
inc
adc
mov
test
and
aas
xchg
dec
xchg
adc
dec
shl
inc
add
jnp
pop
jmp
adc
dec
outs
sbb
aaa
out
rcr
mov
cmp
fistp
pop
pop
test
iret
lock
aas
shr
fldz
jmp
sub
pop
xor
mov
(bad)
inc
cli
adc
mov
(bad)
dec
outs
movs
xor
out
cmps
jmp
xor
xchg
adc
push
clc
adc
mov
dec
call
push
imul
hlt
mov
mov
out
push
push
jb
loope
int
sar
xchg
cld
mov
shl
cld
pop
fcmovnbe
ins
add
retf
fistp
jns
out
setl
cmp
jne
mov
cmp
(bad)
int
sub
jmp
pusha
or
add
adc
add
inc
xchg
add
in
ret
retf
addr16
fcmovnb
pop
jecxz
cmp
pop
aad
(bad)
xor
jg
pop
xor
les
pusha
in
push
call
push
outs
push
(bad)
scas
enter
popa
ss
push
add
cmp
dec
lods
mov
xchg
hlt
or
data16
adc
out
or
cmp
fstp
rol
mov
dec
in
rol
ret
(bad)
add
aaa
pop
mov
cmp
cmps
jecxz
dec
jno
xor
mov
mov
mov
inc
es
jae
jb
imul
dec
rol
xchg
cmp
push
fistp
ins
enter
aad
in
lea
add
xor
mov
mov
pop
arpl
mov
clc
fsub
xor
jae
and
sbb
outs
arpl
xchg
inc
jbe
div
dec
cmp
out
pop
(bad)
add
fs
xchg
es
cmp
cdq
dec
or
lock
cmp
jo
lods
ficomp
push
bound
jge
repnz
ds
pushf
cmps
lock
(bad)
jl
mov
fprem
push
stc
xchg
mov
popf
data16
xchg
pushf
xor
dec
aad
pop
movs
sbb
daa
jle
jl
mov
(bad)
clc
in
aas
mov
aas
dec
sub
pop
out
movs
lock
mov
sub
packssdw
in
adc
mov
sub
jo
push
push
iret
dec
dec
xchg
and
pop
cmp
retf
dec
loopne
shl
inc
mov
aam
push
jmp
faddp
cmp
jns
mov
sub
xchg
mov
mov
fwait
mov
cmp
out
push
gs
mov
mov
ja
jle
lock
push
sub
cmp
fnstcw
sysret
sti
jmp
ror
pop
(bad)
ins
mov
xor
jns
je
cli
ror
jae
sub
arpl
sbb
jp
mov
jns
iret
mov
ss
pop
sub
dec
dec
adc
mov
mov
aaa
lods
sbb
ja
add
icebp
pop
fcom
cmc
mov
imul
push
xchg
sub
push
lds
pop
int
jae
sar
jle
and
fdiv
xlat
add
int
sub
cmp
pop
jle
and
shr
loope
mov
xchg
fld
and
popf
push
shr
pop
jmp
and
fsubr
jae
jb
jge
stos
fsub
cmps
inc
out
adc
jmp
into
push
adc
add
cmc
xor
sbb
shl
ltr
out
call
push
adc
retf
jne
add
inc
data16
icebp
das
push
cwde
dec
bound
mov
adc
xor
loopne
out
ror
adc
or
fcmovb
xchg
cs
inc
stos
sbb
pop
adc
and
loope
add
sub
popa
aaa
call
test
sar
call
cmp
int3
pop
ins
xchg
sub
rcl
sub
jle
dec
out
dec
mov
push
jo
addr16
push
nop
fild
push
mov
xchg
cmp
aam
or
sar
ins
adc
out
bound
addr16
outs
sub
pop
fidivr
mov
or
dec
daa
push
popa
cmp
adc
sub
adc
pop
cli
fist
dec
sbb
fidiv
cs
and
adc
fist
jge
cli
scas
leave
or
mov
inc
adc
jno
jle
daa
adc
leave
inc
fistp
arpl
sub
sbb
sub
out
jmp
gs
mov
aad
mov
mov
cmp
repz
std
das
cmp
xchg
add
xor
sub
ins
scas
out
cdq
mov
mov
pop
jl
pop
cmps
pop
mov
(bad)
mov
xor
lahf
pop
add
cmp
retw
cmp
mov
jo
pusha
std
aam
fsubr
pop
dec
mov
std
dec
fwait
jnp
iret
or
sbb
pop
int3
nop
and
pop
sbb
xor
retf
pop
aaa
das
or
into
sub
popa
(bad)
cmps
outs
bound
fiadd
sub
fcomi
popa
fld
(bad)
loop
cwde
inc
stos
lahf
rcl
and
add
lea
mov
pop
inc
cmp
push
cmp
and
imul
(bad)
outs
movs
dec
jp
sub
xchg
test
jecxz
loop
mov
je
mov
add
xchg
adc
out
and
push
scas
jne
lock
jl
mov
outs
loop
stos
scas
mov
js
call
pop
push
xchg
cmps
gs
lds
adc
addr16
and
pop
jns
pop
ror
test
gs
cli
xchg
sub
xor
out
add
xchg
cwde
cmps
push
dec
jge
ins
test
pop
xor
rcl
and
jne
mov
cmp
pop
xchg
int
xor
mov
cs
clc
pop
daa
xchg
lods
jmp
test
dec
cld
les
pop
inc
dec
in
and
jbe
imul
push
(bad)
stos
dec
je
dec
dec
sub
out
jb
cmps
or
push
js
xchg
test
cmps
sbb
push
mov
enter
sahf
and
or
cmp
push
sahf
cmp
xor
or
out
(bad)
cmp
inc
(bad)
cmp
jnp
pop
lods
push
test
jp
ss
xchg
int3
fdiv
ds
rcl
mov
adc
cmp
and
add
icebp
(bad)
(bad)
xor
or
cmp
daa
out
mov
and
sub
cmp
push
push
mov
inc
fbld
xor
mov
scas
jnp
or
pop
mov
leave
jne
push
adc
jg
retf
pcmpeqw
sbb
sub
retf
pop
nop
es
fwait
xlat
mov
int
inc
push
fisubr
pop
ret
mov
test
xchg
icebp
adc
addr16
adc
push
mov
in
jmp
or
pop
jb
jmp
(bad)
aam
cli
adc
aas
and
arpl
ror
add
stmxcsr
stos
ins
xor
ins
and
in
fidiv
in
add
push
adc
inc
cld
iret
scas
mov
pop
xor
test
mov
retf
rol
push
cmpxchg
jge
push
fmul
inc
or
outs
jno
pop
ins
add
movs
aaa
test
dec
cmp
adc
push
cld
xor
(bad)
cmp
or
sbb
push
shl
jbe
imul
push
or
push
mov
dec
(bad)
aad
cmp
ds
clc
out
xchg
or
mov
pop
pop
call
fidiv
dec
arpl
test
ss
cdq
ret
pop
jb
data16
fst
push
adc
add
fisub
icebp
pop
lods
add
retf
cmps
dec
adc
(bad)
jbe
cmp
test
xchg
dec
daa
push
cmc
je
dec
scas
inc
dec
cmp
iret
dec
jne
imul
and
pop
xchg
add
push
mov
gs
xchg
out
xchg
mov
inc
dec
in
add
or
cmp
inc
repz
sub
mov
dec
jmp
call
mov
mov
fistp
mov
adc
outs
and
fwait
jns
cmp
mov
rcl
lea
xchg
scas
call
push
in
stos
addr16
in
scas
jae
and
loope
aad
out
push
dec
loop
ret
lods
cwde
xor
fisubr
mov
cmp
ins
mov
inc
lods
dec
mov
lds
or
ja
inc
ds
push
or
sbb
in
arpl
adc
jle
lods
clc
cdq
out
mov
push
sbb
mov
fs
leave
(bad)
mov
ror
mov
(bad)
dec
idiv
jge
popa
fwait
dec
adc
ja
adc
pop
inc
daa
push
out
add
cmp
out
or
jmp
dec
pushf
outs
xor
in
pop
inc
sub
shl
mov
sub
ins
mov
test
xor
push
enter
mov
mov
aaa
pusha
jo
rcr
jp
xor
lahf
sbb
int3
sub
or
sbb
aaa
cmps
(bad)
push
pop
pop
lahf
(bad)
jmp
mov
aaa
jns
push
ficom
shl
xchg
xchg
mov
xchg
xchg
pop
outs
mov
test
adc
or
mov
and
pop
dec
inc
pop
clc
jae
xchg
xchg
(bad)
imul
(bad)
sub
out
jge
dec
es
or
cmp
mov
xchg
leave
stc
add
jno
(bad)
jnp
xchg
test
shl
adc
add
sti
stos
sub
lea
pop
xchg
pop
lods
fxch
jecxz
pop
cwde
sub
fiadd
ret
or
movs
inc
int3
push
mov
jno
adc
es
neg
fmul
inc
pop
pop
push
out
shr
jno
cdq
xchg
inc
mov
dec
mov
leave
xor
daa
nop
imul
push
add
loopne
mov
xchg
repz
mov
inc
fiadd
xor
movs
or
in
(bad)
cmc
loopne
scas
add
imul
sahf
add
pop
push
sar
out
pop
push
pusha
int
lods
cs
arpl
fnstsw
jl
rcr
jnp
adc
inc
xor
sti
mov
jge
mov
out
jl
ficomp
mov
(bad)
lock
xlat
(bad)
xor
leave
add
in
sbb
or
push
pop
test
dec
call
push
mov
pushf
sub
std
pop
int3
call
inc
aaa
mov
fld
aas
xor
mov
adc
test
das
fs
imul
mov
fild
xor
jmp
jg
mov
or
push
jno
mov
repz
arpl
push
inc
cld
push
pop
sub
xchg
ret
push
ss
jl
fdivp
and
and
or
daa
(bad)
jecxz
sar
test
aad
cld
jne
fcmovne
stos
movs
call
(bad)
out
push
popa
sahf
inc
dec
dec
mov
icebp
test
xor
bound
or
or
popa
nop
(bad)
and
cdq
dec
sub
dec
adc
fadd
fdivr
into
adc
mov
das
aad
push
xchg
vpxor
jge
mov
mov
pop
mov
add
mov
scas
and
jmp
std
setae
mov
or
fcomip
retf
ret
pop
js
enter
cmps
fcmovnu
mov
icebp
test
push
sub
dec
retf
mov
and
int3
std
int
inc
adc
imul
lea
and
mov
jle
mov
pop
daa
retf
dec
imul
xchg
ds
clc
push
mov
cs
enter
scas
movs
sbb
es
or
inc
jne
xchg
adc
test
xchg
push
add
add
mov
(bad)
fadd
test
das
and
xchg
loopne
cdq
in
cld
out
pop
inc
rdmsr
mov
cmp
jl
mov
adc
(bad)
(bad)
out
pop
push
js
xor
adc
pop
cmp
mov
and
ret
(bad)
xor
in
sbb
sbb
mov
out
mov
int
in
fld
mov
mov
imul
push
or
jmp
xlat
popf
mov
push
aam
cmps
mov
cli
mov
repnz
mov
mov
pop
pushf
jns
mov
mov
jno
sbb
repz
ja
leave
sbb
push
scas
into
ins
add
mov
out
push
lds
aam
adc
mov
dec
sbb
fcomp
std
cmps
jnp
add
pop
es
int3
push
pop
xchg
test
fild
cmc
adc
jnp
loop
and
sub
pop
cmp
fdiv
call
retf
jmp
adc
jle
movd
cld
inc
push
shr
xchg
cmp
sbb
xor
icebp
mov
(bad)
in
cdq
add
sub
mov
add
mov
idiv
adc
cs
mov
xchg
(bad)
xor
test
xchg
cmp
jbe
jl
sbb
cwde
addr16
jmp
jmp
jecxz
push
imul
outs
dec
jne
add
arpl
or
mov
(bad)
repz
add
cdq
mov
jl
es
or
lods
out
add
sub
(bad)
cli
mov
nop
fcomp
sub
cmps
jmp
(bad)
and
push
scas
(bad)
out
(bad)
ins
nop
mov
(bad)
xor
icebp
popa
xchg
retf
in
maxps
shl
stos
mov
mov
call
pop
out
xchg
aam
jo
and
sti
add
mov
(bad)
jne
popf
mov
pop
xchg
jecxz
icebp
push
xchg
repnz
jno
push
or
je
rol
(bad)
or
lock
jge
or
mov
test
mov
iret
out
pop
xor
add
nop
shl
out
or
frstor
xor
or
stos
out
das
sbb
cld
xchg
pop
test
mov
cmps
in
jb
je
xchg
pop
test
xor
adc
mov
fidiv
mov
pop
xor
mov
out
(bad)
push
sub
xlat
xor
xchg
cs
inc
ja
pop
ins
std
out
out
jge
mov
stos
bound
add
popa
or
mov
dec
out
jno
and
bound
sbb
in
push
repnz
push
retf
mov
and
lock
das
loop
rcr
cdq
enter
jmp
mov
shr
pop
xchg
mov
clc
into
lahf
mul
mov
jg
push
xlat
rcr
stos
jmp
pop
xchg
cmp
cmps
dec
push
xchg
div
ss
cli
test
xor
and
mov
sbb
icebp
and
in
fild
(bad)
neg
mov
pop
out
xchg
push
mov
push
shl
sub
popa
mov
mov
les
call
xchg
jo
inc
inc
mov
mov
jno
cld
pop
shl
arpl
aam
push
jno
(bad)
push
or
bound
dec
retf
popa
mov
pop
jnp
dec
ins
in
fldcw
repz
adc
ss
xchg
sbb
movntq
out
mov
adc
sbb
pop
xchg
pusha
sbb
mov
addr16
mov
popf
sub
mov
mov
stos
(bad)
test
xchg
fdiv
mov
jg
(bad)
xor
clc
icebp
jg
xlat
loop
mov
push
es
lea
jle
test
hlt
in
push
pop
dec
daa
adc
adc
aas
not
call
cmp
popf
mov
sti
retf
(bad)
fstp
addr16
repz
je
mov
(bad)
mov
mov
ins
imul
es
pop
ins
cmp
cmp
sti
iret
in
popw
rcl
fcomi
popf
or
sub
sub
xor
mov
pop
xchg
pushf
pop
jns
or
outs
push
imul
push
in
cwde
cmp
cmp
dec
(bad)
jg
push
xchg
jp
aad
push
lock
sbb
pop
xor
outs
pop
push
sbb
jmp
fistp
mov
js
nop
movs
pop
rol
daa
test
scas
sbb
adc
mov
and
cld
fcom
mov
mov
mov
inc
push
aad
(bad)
mov
cli
fsubr
out
mov
dec
mov
cmp
dec
push
(bad)
xchg
mov
daa
mov
rol
pusha
fidivr
in
fiadd
inc
enter
mov
mov
wbinvd
arpl
dec
pop
fisub
add
fscale
adc
sub
daa
mov
popf
mov
iret
(bad)
das
sub
or
mov
jns
mov
and
shl
loop
jge
cmp
popf
dec
test
or
jge
out
inc
fistp
test
mov
dec
pop
stc
(bad)
jno
call
inc
xchg
iret
and
out
add
dec
dec
dec
push
jnp
das
iret
in
nop
adc
cmc
mov
ror
js
stc
push
inc
mov
inc
in
arpl
add
movs
pop
aad
lahf
push
dec
aas
mov
lods
mov
mov
mov
aam
hlt
aaa
cmp
scas
or
cld
sti
fidivr
cmps
push
leave
mov
and
fcmovnu
ins
jns
js
pop
adc
cmp
outs
out
push
jmp
cmp
mov
inc
gs
xor
(bad)
retf
sub
sbb
call
jmp
xchg
pushw
push
sub
mov
mov
outs
mov
or
mov
or
push
xor
jne
dec
lods
clc
cs
mov
sbb
xchg
adc
cmpxchg
(bad)
cs
cmps
adc
jle
sbb
int
push
movs
mov
push
cmp
sub
add
sbb
cs
mov
jecxz
dec
shr
or
sub
push
add
pop
in
out
inc
inc
es
lahf
lods
scas
test
mov
mov
adc
sbb
xchg
sbb
mov
push
push
movs
and
jl
mov
adc
fstp
cld
jno
inc
scas
cmp
retf
push
add
sub
jne
jp
test
lahf
add
ds
inc
add
adc
imul
pop
outs
(bad)
mov
hlt
sub
jmp
jae
outs
out
dec
stos
stos
clc
mov
aam
outs
fs
ret
mov
pop
jmp
icebp
adc
div
cmp
fist
push
sbb
outs
dec
inc
push
sahf
fdivr
pop
add
mov
cmp
inc
or
imul
xlat
xor
pushf
leave
sbb
sub
popf
dec
(bad)
repz
push
lods
sbb
retf
(bad)
shr
or
cs
nop
(bad)
outs
mov
mov
jnp
icebp
imul
push
sahf
jnp
retf
jno
cmp
fsub
aaa
outs
ficomp
push
leave
icebp
mul
aam
sub
leave
cmp
ret
int3
in
inc
cmc
push
cmovb
(bad)
sub
sahf
orps
dec
scas
push
stos
enter
dec
sbb
xor
cld
mov
ret
(bad)
mov
ss
dec
inc
cmc
adc
mov
retf
arpl
inc
and
or
dec
xchg
jge
sbb
into
bound
jle
jp
jne
das
and
sbb
in
fiadd
clc
xor
sub
sti
repz
sub
sbb
cdq
cmp
outs
shl
pop
std
xchg
or
gs
dec
mov
pop
adc
jmp
mul
jnp
dec
mov
cs
fs
aaa
mov
mov
adc
(bad)
fwait
mov
add
mov
adc
inc
shl
arpl
and
test
inc
(bad)
fs
fs
test
mov
cmp
mov
test
rcr
enter
jle
push
mov
stos
xor
(bad)
push
rcl
adc
pop
cmp
sub
xchg
push
cmp
and
xchg
jae
and
mov
cwde
xchg
sbb
pop
daa
popf
repz
inc
add
js
lods
xchg
dec
jecxz
js
push
jae
daa
mov
adc
iret
adc
outs
sbb
sbb
mov
cmps
(bad)
jns
movs
jg
(bad)
movs
push
mov
leave
push
or
rcl
gs
gs
fs
pop
xchg
jle
jmp
sti
mov
add
scas
dec
pop
pushf
fisttp
pop
ja
mov
inc
cld
mov
add
popf
xor
neg
mov
xchg
xor
test
adc
test
sub
int3
jge
and
inc
sbb
mov
pop
sub
sub
inc
mov
scas
nop
sbb
mov
loope
ror
call
hlt
clc
in
fdiv
cmp
adc
dec
cmps
retf
jmp
push
push
js
fdivr
jae
xor
in
push
mov
cmovb
retf
pushf
or
adc
test
fwait
add
mov
pop
mov
aaa
(bad)
and
movs
adc
mov
and
jle
add
ss
jb
sub
xor
rcl
test
ret
les
test
xor
xor
fld
xchg
mov
xor
xor
inc
(bad)
mov
push
loopne
nop
sub
out
mov
fnsave
pop
adc
clc
jae
adc
jo
xchg
sbb
jmp
mov
ins
push
dec
xor
cmp
and
daa
iret
xor
ror
jle
jmp
test
dec
mov
sub
aad
jle
mov
dec
(bad)
cmps
cmp
mov
add
bound
cwde
dec
dec
lds
ret
adc
lock
into
cmp
pop
or
in
hlt
mov
aad
inc
es
adc
mov
int3
and
inc
cs
nop
mov
mov
and
sbb
cli
cmp
ins
arpl
rcl
(bad)
mov
int
xchg
inc
leave
ja
(bad)
aaa
dec
test
es
xchg
sub
jae
sbb
shl
cli
and
dec
pop
retf
fbstp
pop
fwait
(bad)
jecxz
pop
sub
and
aam
movs
cmp
popf
inc
add
sub
sub
pop
sbb
add
cmp
inc
mov
retf
push
sub
(bad)
imul
bound
inc
(bad)
rcr
and
push
out
std
scas
cmp
scas
std
xchg
bound
add
xchg
jb
out
call
(bad)
pop
shr
jnp
mov
adc
int
or
lods
sbb
cs
into
repnz
scas
add
ins
(bad)
jmp
fcmove
or
fidivr
cli
dec
sub
xbegin
push
clc
addr16
sub
sbb
sub
jle
cs
lds
imul
sbb
stc
pslld
add
cmp
xor
fwait
and
int
fistp
xchg
(bad)
xor
jne
push
cmp
aas
jmp
adc
xor
adc
jmp
aad
(bad)
push
fcom
xchg
stos
push
out
movs
mov
mov
push
xor
imul
addr16
mov
adc
inc
add
ja
push
and
inc
or
dec
cmp
test
xchg
jp
push
mov
push
lds
jp
xor
sbb
cmp
push
xor
add
lods
xchg
inc
and
mov
das
lods
pop
jecxz
das
xor
add
xor
push
sbb
daa
mov
mov
cwde
or
cmp
stos
sub
inc
push
or
add
(bad)
jl
and
and
mov
sub
loope
add
call
xor
test
dec
push
pop
sub
movs
adc
push
jns
aad
mov
jl
out
jmp
jle
push
cmp
hlt
add
in
lds
rcr
scas
jmp
add
outs
aas
call
lahf
cwde
(bad)
sbb
jge
aas
and
xchg
sub
outs
lods
cmp
adc
mov
inc
or
jl
out
iret
adc
pusha
retf
sar
ds
and
or
shl
sub
mov
xchg
stc
mov
xchg
jp
test
cmps
add
mov
in
mov
out
test
pop
cmp
cmp
cdq
stc
pushf
mov
adc
mov
sub
clc
sar
add
push
pop
pop
or
fbstp
hlt
jo
inc
cmp
mov
shl
retf
test
cmps
call
rcr
bnd
sbb
sub
and
sti
sub
jnp
jl
inc
cmp
retf
lahf
inc
retf
out
dec
inc
shl
in
jmp
mov
rol
retf
mov
aad
or
cli
gs
xor
push
pop
jns
pop
push
sbb
or
mov
mov
mov
mov
mov
imul
aas
push
jno
div
mov
sbb
out
or
ja
gs
mov
imul
mov
shr
jg
daa
sbb
int3
in
bnd
or
out
add
push
pushf
push
pop
mov
or
mov
mov
ja
sbb
dec
or
push
sbb
mov
fistp
cmp
pop
bsr
ret
or
adc
je
sub
out
rol
pusha
jnp
inc
or
push
and
(bad)
imul
xlat
ja
inc
push
inc
mov
not
jg
sub
repnz
stc
and
daa
rol
sub
scas
pop
sbb
push
test
cmp
or
cmp
les
mov
(bad)
je
mov
push
ja
jle
rcr
mov
mov
arpl
call
dec
call
in
fwait
shl
xchg
shr
call
std
pop
mov
sbb
cdq
mov
and
adc
(bad)
icebp
imul
push
das
pop
dec
fsubr
cdq
or
push
test
loopne
jmp
jg
mov
ffree
int3
xchg
mov
pop
fs
in
jmp
dec
mov
ret
arpl
pop
in
aad
loop
pop
cmp
(bad)
out
dec
jg
mov
ins
out
xlat
movs
adc
nop
cmp
push
rcl
test
pop
(bad)
int3
hlt
or
dec
xor
push
sub
in
aam
add
lock
ins
int3
or
pop
xor
push
pop
mov
jmp
inc
dec
iret
dec
sbb
int3
movd
call
daa
pop
inc
sub
add
xchg
rol
pop
data16
sub
push
jno
int
stos
xchg
loope
cwde
ficom
std
pop
cmps
xchg
ds
mov
pop
push
lahf
(bad)
call
adc
push
xchg
test
mov
dec
xor
mov
pop
ins
mov
xchg
push
dec
add
mov
or
push
push
mov
mov
popf
cmp
dec
fist
popf
dec
mul
mov
bound
sub
clc
fst
pusha
aaa
mov
add
mul
mov
je
das
mov
xchg
sbb
xor
fwait
std
neg
sbb
fwait
xor
adc
dec
jae
imul
push
mov
mov
adc
jge
jno
cmp
xor
and
add
mov
cmp
mov
push
lock
scas
cmp
test
iret
int3
jne
and
pop
leave
iret
call
out
scas
jmp
xor
sbb
push
cmp
out
xor
inc
jmp
pop
neg
push
fld
cld
repnz
shl
pop
out
xchg
cdq
pop
dec
mov
adc
inc
sbb
into
push
jns
js
push
ins
mov
sbb
imul
add
(bad)
sbb
add
add
xchg
movs
pop
and
push
jno
stos
lds
xor
add
retf
int
push
pop
call
test
mov
jo
add
sar
call
inc
pop
out
xchg
fimul
ja
xor
je
xor
mov
arpl
push
mov
in
sbb
mov
pop
pop
add
adc
xlat
imul
lock
fld
pop
mov
dec
or
xchg
mov
jp
xor
pop
jge
or
lods
push
mov
sub
movq
gs
adc
jmp
add
adc
and
sbb
sar
adc
push
mov
pop
add
add
jl
push
xchg
mov
and
dec
mov
cmp
aas
inc
add
arpl
xor
(bad)
lock
lds
adc
lock
dec
mov
adc
lods
cwde
jle
stc
lods
jne
jne
jecxz
mov
lock
dec
inc
pop
mov
pusha
and
mov
push
call
repnz
cmps
jne
test
push
adc
ja
aam
cmp
and
loop
xchg
in
push
das
push
(bad)
xlat
(bad)
stc
nop
mov
mov
(bad)
std
in
dec
jg
pop
repnz
inc
and
cmp
cmc
pop
(bad)
lods
cdq
sub
iret
jbe
xchg
popf
sbb
xchg
icebp
or
and
sub
hlt
test
loopne
mov
bound
popa
jbe
pop
test
sub
sub
jae
push
sub
mov
das
outs
scas
mov
jmp
rol
add
cli
xchg
cmp
fcomp
adc
and
adc
jg
mov
mov
or
sbb
int3
mov
lods
pop
cmp
jb
mov
cwde
mov
mov
jno
leave
pop
jmp
rol
(bad)
sub
jecxz
xor
call
xchg
xlat
imul
mov
rcr
or
jmp
loopne
cmps
dec
scas
cmps
push
daa
push
jmp
lds
(bad)
xlat
pushf
cmp
adc
dec
add
scas
rol
mov
cmp
arpl
mov
xlat
xchg
mov
adc
xchg
pop
test
pop
clc
in
mov
push
push
out
mov
xor
adc
or
dec
test
stos
iret
dec
mov
ffree
pop
jb
jmp
fild
icebp
sub
push
xchg
fwait
or
add
mov
sbb
xor
pusha
pop
pop
push
add
add
and
adc
pop
xchg
jecxz
adc
loope
ins
lock
push
cli
or
loop
es
push
xor
js
idiv
pop
lock
icebp
fwait
into
test
jp
rcr
call
lods
movs
loop
neg
mov
shl
add
cmp
std
jno
scas
stos
mov
sub
adc
xchg
xor
hlt
sub
jge
cmovle
mov
or
add
push
inc
or
pop
mov
rcl
aas
fst
test
xchg
pcmpeqd
jecxz
push
pop
or
inc
lock
div
pop
pop
sub
mov
xor
push
jl
mov
push
sbb
mov
inc
outs
outs
inc
mov
xchg
fwait
cmp
add
lock
dec
mov
imul
sbb
push
jp
mov
mov
inc
int3
add
bound
imul
fnsave
jno
out
sbb
or
enter
pop
adc
cmp
inc
in
pop
mov
outs
pop
mov
retf
in
out
push
xchg
pop
jbe
adc
lods
jmp
mov
jmp
cli
iret
jle
test
cmpxchg
pushf
cmp
int
dec
xor
daa
cmps
push
sbb
xchg
hlt
scas
call
imul
pop
cmp
xchg
cmp
cwde
imul
imul
jge
pop
adc
mul
jmp
(bad)
ret
sbb
cmp
xchg
out
adc
jg
jno
(bad)
sbb
inc
jae
sahf
mov
das
(bad)
mov
push
clc
fldcw
std
rcl
mov
std
lock
test
xchg
(bad)
mov
sbb
dec
es
xchg
cdq
jle
fwait
mov
in
xchg
stos
mov
cmp
mov
mov
aam
mov
jo
fstp
and
aam
out
in
call
xor
xlat
inc
int3
jnp
dec
sub
fsubr
xor
push
jo
add
in
ins
mov
(bad)
dec
xor
test
(bad)
mov
and
adc
pop
daa
dec
xchg
sbb
jne
fisttp
cmps
test
pop
xor
inc
xchg
dec
dec
retf
cmps
clc
rol
mov
push
aad
dec
rol
js
test
pop
push
popf
loopne
sub
cmp
xchg
loope
retf
test
cmc
sub
outs
iret
out
ins
loop
shl
sbb
push
es
adc
pushf
sub
mov
dec
mov
xchg
inc
into
cmp
neg
pop
push
imul
out
ror
out
and
stos
sbb
mov
inc
jmp
lds
dec
icebp
and
dec
ss
xor
mov
repz
neg
add
aad
pop
in
pop
and
sub
and
jno
cmps
vpaddq
ins
fnstenv
mov
push
cmp
mov
adc
add
int
cmp
(bad)
popfw
ss
cmp
ret
ss
mov
popa
hlt
out
xchg
sbb
mov
push
mov
push
jg
mov
imul
cmp
mov
imul
push
adc
(bad)
enter
push
mov
mov
cmps
mov
push
cdq
or
dec
dec
adc
sub
movs
lds
cmp
test
mov
adc
mov
or
pop
pop
xchg
loope
mov
cmps
push
retf
ret
pop
sbb
mov
jnp
adc
call
shl
push
icebp
inc
shr
cdq
dec
cmp
mov
ret
dec
enter
aam
mov
sbb
mov
ja
fstp
mov
sub
mov
pop
cmp
(bad)
gs
mov
fst
rcl
push
mov
dec
mov
jecxz
and
pop
mov
out
ss
outs
aas
mov
neg
and
stos
ss
push
pop
mov
test
popf
jne
push
or
xchg
push
shl
xlat
sti
dec
stc
inc
mov
div
les
dec
mov
bound
inc
push
cwd
rcl
ds
jb
lock
rol
stos
(bad)
pop
xlat
jmp
cmp
sti
sub
stos
cmp
dec
add
lahf
pop
push
loopne
cmp
mov
add
xor
fisub
mov
out
sub
lds
mov
in
(bad)
dec
cmp
jmp
fwait
jge
sub
clc
inc
aam
loopne
jecxz
bound
add
ja
cld
pop
aaa
jo
and
mov
sub
ffreep
clc
sar
cmp
mov
cli
mov
(bad)
addr16
lods
out
(bad)
sbb
push
scas
push
ud0
rcr
repnz
mov
fmul
add
and
mov
or
mov
pop
or
es
xor
jle
push
push
jmp
xor
xchg
pop
in
idiv
push
jbe
in
sbb
jg
lahf
push
mov
or
icebp
leave
mov
icebp
or
mov
ror
xchg
push
out
sub
(bad)
adc
mov
(bad)
jae
(bad)
xchg
mov
(bad)
shr
popf
jo
xchg
int3
adc
mov
xor
add
sub
push
mov
outs
daa
lds
jp
mov
arpl
loope
sbb
stos
iret
cli
add
stos
sub
jle
in
ja
mov
retf
ins
popa
outs
sbb
into
in
push
(bad)
mov
shr
lahf
outs
add
repnz
mov
fs
jl
inc
(bad)
xlat
pop
jg
or
mov
xchg
lea
jns
cmp
sbb
jae
jo
test
out
mov
mov
ret
call
push
jo
in
mov
int
adc
mov
or
xlat
lock
lock
je
sbb
ins
sbb
repz
inc
adc
sub
pop
loop
les
cmp
clc
push
cli
fnop
and
aas
mov
sbb
hlt
push
xchg
(bad)
mov
mov
out
cmp
iret
les
mov
pop
jno
int3
adc
hlt
int
add
aam
cmp
aaa
sub
mov
xchg
xchg
mov
dec
jecxz
pusha
lods
xor
mov
mov
(bad)
shl
jmp
dec
pop
ficom
adc
add
mov
or
jo
xchg
fdivr
(bad)
scas
inc
jecxz
push
movs
push
mov
js
mov
cmp
push
(bad)
cmp
mov
jle
sbb
adc
dec
inc
mov
or
add
inc
cmps
mov
mov
std
jb
cli
je
(bad)
std
(bad)
(bad)
test
adc
jns
xlat
cmc
inc
jecxz
xor
fadd
repz
add
mov
outs
jge
or
nop
stos
and
in
lock
aas
jp
pop
mov
mov
push
and
dec
add
test
mov
inc
jnp
mov
data16
clc
mov
stos
add
mov
push
mov
cmp
popf
das
mov
(bad)
in
jo
std
addr16
xchg
sahf
outs
mov
dec
(bad)
test
xchg
movs
stc
lods
in
push
sub
push
int
or
jo
mov
fs
dec
jnp
mov
or
ins
and
push
xlat
mov
(bad)
and
push
sub
add
cmps
(bad)
push
jae
pop
gs
neg
inc
out
jbe
xchg
sub
mov
push
shl
mov
fimul
push
add
dec
sub
push
add
inc
out
sar
aas
mov
push
cli
mov
mov
icebp
pop
fcomp
cmp
ds
cmp
jge
or
lock
ror
ds
icebp
(bad)
mov
sub
outs
rcl
or
data16
setnp
pop
icebp
mov
(bad)
xlat
xchg
fldenv
leave
push
cs
pop
mov
sub
pop
imul
ret
fmulp
cmp
shr
mov
fdivr
loopne
xchg
mov
test
ins
mov
test
xor
mov
(bad)
loop
not
aad
mov
pop
in
shl
mov
and
jnp
push
mov
in
popf
pop
inc
and
cmp
inc
dec
push
inc
(bad)
setp
xlat
jmp
sbb
retf
out
in
mov
fwait
jno
mov
inc
cmp
adc
(bad)
jl
fisubr
adc
test
and
adc
jb
dec
popf
rcr
pop
gs
fcmovnb
or
movs
sub
inc
inc
jg
pushf
stos
sti
das
js
pop
mov
test
push
jns
push
data16
icebp
mov
mov
or
sbb
lds
pop
or
ja
xchg
pop
sub
mov
cmp
cmps
stos
in
cmp
sar
xchg
ret
imul
sti
adc
vmptrld
inc
and
inc
mov
cdq
mov
sub
int3
test
xor
push
aaa
cwde
rol
loopne
pop
stc
xor
mov
aad
sub
adc
arpl
mov
pop
(bad)
outs
ss
ins
mov
mov
jns
sbb
cmps
fiadd
adc
hlt
or
sub
call
cs
and
pop
sub
(bad)
(bad)
cmps
sbb
movs
fsubr
mov
and
lods
mov
xchg
xchg
lods
scas
call
jle
or
aam
fisub
loopne
xchg
fiadd
mov
xchg
xor
pop
retf
mov
dec
test
pop
dec
pop
ds
xor
cmp
loop
cli
dec
sub
mov
xchg
push
je
and
repnz
adc
scas
or
enter
clc
push
test
push
cmp
fimul
sbb
dec
repz
imul
cmp
pop
push
fdiv
sub
push
int3
(bad)
test
jmp
mov
push
jmp
out
xchg
xchg
push
(bad)
cmp
bound
mov
jg
and
fimul
push
retf
inc
jge
xchg
es
jae
xlat
mov
sub
dec
test
loop
out
adc
mov
cdq
fisttp
push
lahf
lahf
pop
dec
pop
(bad)
fld1
fwait
jns
fistp
sub
cli
add
movs
jmp
mov
mov
aas
and
pusha
call
fs
mov
dec
mov
mov
mov
pop
mov
fdiv
mov
mov
fs
iret
jp
test
imul
mov
jge
shr
pop
push
mov
push
mov
or
sub
sbb
ds
mov
push
retf
sbb
sub
sub
loop
shl
cmp
std
or
sar
dec
cmp
bound
out
mov
inc
jecxz
inc
push
daa
cld
(bad)
je
fst
mov
shr
and
jl
in
sahf
outs
das
stos
gs
mov
pop
xor
repz
dec
retf
sub
inc
aad
xchg
sub
and
mov
xchg
or
rcr
jecxz
(bad)
xlat
sbb
in
mul
call
call
aaa
jns
aad
retf
sbb
sbb
stos
retf
sbb
pop
in
fnstsw
std
inc
cld
inc
pop
loopne
enter
xlat
mov
lds
stc
sub
call
pop
enter
call
dec
das
test
in
aam
(bad)
push
arpl
inc
adc
mov
pop
mov
mov
push
dec
jmp
mov
rcr
sub
test
jnp
icebp
cmps
jp
mov
pop
lods
pop
bound
jp
jae
call
(bad)
lock
sti
add
jnp
adc
ds
pop
test
and
data16
jle
xor
(bad)
(bad)
push
cs
in
jl
mov
fwait
jns
inc
pop
or
pop
mov
stos
or
mov
xor
aad
popa
xchg
mov
mov
add
lods
jmp
sub
rcl
cmp
bnd
pop
shl
jl
jmp
pcmpeqb
adc
mov
cmp
sub
fs
and
cld
dec
sub
test
in
cmps
push
pop
dec
cmp
pop
pop
rcr
sub
sbb
mov
out
rol
push
or
sub
push
int
scas
and
push
and
mov
sar
mov
shl
stos
jmp
enter
jno
in
xor
xor
data16
jmp
call
cwde
jns
movs
jmp
ret
in
int3
icebp
jbe
sbb
std
adc
clc
mov
inc
adc
fmul
mov
mov
xor
mov
nop
jg
daa
fwait
imul
popa
mov
push
mov
inc
je
scas
pusha
xor
(bad)
sbb
inc
addr16
add
or
lds
mov
add
in
ret
sub
shl
(bad)
out
mov
pushf
pop
das
inc
xor
or
leave
daa
push
cmc
mov
popa
aas
repnz
ret
test
cmp
dec
pop
jge
sub
pop
stos
mov
jnp
or
rcr
and
leave
xchg
xchg
mov
dec
adc
cmp
jo
movs
es
or
sub
out
cmps
push
jecxz
and
fnstsw
jl
mov
movs
call
ins
int
bound
push
popf
or
sub
push
xor
test
aad
rol
xor
iret
daa
xchg
gs
repnz
call
pop
xchg
xor
mov
rcr
xor
cli
(bad)
sub
inc
xchg
inc
(bad)
mov
jae
sub
and
push
inc
and
or
cld
push
mov
jmp
(bad)
data16
fnstcw
jno
lea
scas
cmp
test
rol
mov
xchg
dec
(bad)
ins
push
or
mov
mov
cmc
in
xchg
push
imul
shl
ret
and
aam
lahf
adc
xchg
cli
mov
jmp
or
dec
dec
dec
stc
lds
sbb
ds
push
mov
pop
jl
mov
inc
leave
jno
int
rcl
mov
bound
xchg
xchg
pop
cmp
dec
cmp
fwait
dec
cwde
and
lods
mov
pop
bnd
xor
retf
fisttp
add
sar
push
xchg
cdq
stos
fadd
lds
jmp
stos
inc
sub
mov
loop
inc
cmp
add
in
in
inc
bound
mov
neg
dec
lock
pop
ins
fwait
xor
push
pop
mov
push
cmp
xor
retf
cmp
xchg
xor
repnz
call
arpl
mov
dec
jo
shr
rcl
xchg
(bad)
aad
jp
movs
ss
scas
cmp
repz
lahf
ja
pop
sbb
fisubr
ret
out
(bad)
fcomip
jecxz
mov
sar
pop
inc
scas
mov
adc
cmc
ds
daa
mov
sbb
cli
outs
stos
xlat
mov
or
add
daa
ds
sub
das
sub
mov
mov
push
icebp
mov
or
add
inc
sub
jge
je
mov
pop
in
shl
in
sub
jge
cmp
rol
inc
js
test
and
sbb
push
cmp
out
getsec
lock
fadd
jae
jmp
xchg
movs
sub
fmul
pop
aas
fcomp
pop
into
iret
push
xor
adc
test
adc
sbb
out
push
dec
and
add
into
add
sub
or
arpl
jecxz
mov
and
jns
sbb
movs
adc
shl
cmp
jo
add
jnp
cmp
push
xchg
pop
mov
adc
mov
jmp
mov
daa
clc
cmps
push
(bad)
push
jg
mov
push
jns
push
sub
imul
call
std
adc
mov
xchg
movs
xchg
push
shr
jno
xchg
cmps
ds
xchg
mov
loop
push
iret
(bad)
out
xor
xchg
jg
push
add
pop
push
add
loop
stos
imul
inc
and
add
jnp
sti
mov
mov
xchg
pop
loopne
cli
in
add
and
cmps
pop
jo
rcr
add
data16
or
aaa
fdivr
loopne
xchg
push
ror
mov
xchg
mov
test
cmps
(bad)
ja
or
aam
shl
popf
push
lods
xchg
mov
dec
or
push
fild
inc
jb
js
xor
out
test
add
mov
sar
(bad)
mov
mov
(bad)
pop
mov
addr16
adc
and
mov
jmp
ds
xchg
mov
cs
mov
mov
sub
sub
ror
mov
retf
shl
push
mov
je
jb
les
popf
repnz
leave
fistp
arpl
aad
cmps
push
push
packsswb
mov
adc
mov
push
inc
mov
xor
dec
pop
cwde
mov
and
mov
sar
mov
and
shl
pop
dec
xor
lds
inc
fdiv
jecxz
dec
rcl
test
sbb
aas
push
push
cmp
sub
iret
push
aaa
les
lds
xor
pop
sahf
lock
loopne
popf
lea
in
std
jmp
ds
fwait
repnz
xchg
lds
rcr
xchg
les
cli
bnd
push
xlat
pop
pop
mov
push
movs
jmp
daa
enter
lock
jge
and
xor
dec
cmp
inc
xor
mov
hlt
(bad)
sti
shl
shl
sahf
or
not
push
movs
not
xor
in
xor
pop
in
jg
loop
push
adc
xor
mov
leave
mov
jl
aaa
les
imul
loope
in
idiv
rcr
lods
pushf
test
out
pop
mov
jg
push
inc
mov
shr
je
(bad)
and
pop
inc
aas
jg
jp
mov
lds
mov
xor
sti
test
push
mov
pop
mov
mov
gs
or
scas
dec
cmp
dec
push
mov
cmp
add
test
shl
and
mov
pusha
lahf
test
scas
ret
ins
or
and
cwde
cli
cmp
cmp
jp
and
(bad)
jl
(bad)
test
hlt
mov
sub
repz
adc
icebp
pop
hlt
sub
fdivrp
jp
push
and
clc
cmps
mov
in
call
pop
repz
repnz
fstp
mov
cli
jne
lock
loop
pop
or
sub
xchg
pop
sbb
dec
inc
fidivr
jo
arpl
out
fst
mov
xor
enter
sub
mov
xor
stos
mov
fmul
inc
das
and
cmc
scas
inc
xlat
and
int
data16
imul
dec
fsubr
mov
mov
repz
or
pop
mov
mov
stos
push
xor
or
out
fld
jmp
mov
(bad)
pusha
pop
iret
cld
inc
aam
and
adc
mov
jmp
bound
sbb
inc
mov
pushf
enter
push
xchg
(bad)
jmp
aad
outs
cmps
cmp
dec
mov
mov
lahf
xor
mov
mov
aad
cmp
ja
data16
ins
sub
pop
pusha
sbb
xchg
xor
pop
ds
adc
mov
jmp
or
fild
xor
sbb
out
mov
xor
mov
jl
es
fs
call
jb
sub
sbb
push
lods
icebp
out
std
(bad)
bound
add
stc
xlat
dec
ss
call
ret
(bad)
shl
mov
inc
es
dec
fild
add
sub
sub
adc
jge
pushf
xor
imul
add
fstp
cmc
push
lock
int
out
or
psllw
mov
jle
inc
(bad)
lods
xchg
mov
dec
push
sub
aas
dec
xchg
loop
scas
dec
jmp
in
jne
popf
xor
xchg
in
dec
xor
ins
sub
(bad)
pop
inc
js
(bad)
jnp
or
(bad)
sub
in
retf
pop
popaw
rcr
int
cmp
xor
shl
sbb
int
mov
repnz
mov
loope
stos
jno
icebp
leave
adc
push
out
pop
(bad)
fidivr
cmp
adc
pop
mov
ror
enter
dec
jns
push
imul
jns
imul
(bad)
(bad)
pop
mov
std
pop
popa
cdq
adc
xor
mov
popa
stc
and
jge
xchg
and
cwde
jle
and
mov
sub
icebp
push
xor
sbb
call
in
inc
jl
fmul
outs
icebp
jb
daa
enter
out
stos
cmp
cmps
mov
xor
(bad)
dec
jp
fdivp
shl
out
test
inc
cs
sbb
mov
or
cld
inc
mov
inc
cmp
xor
es
cld
sub
nop
mov
aas
es
push
mov
cmp
jno
mov
pusha
mov
dec
fimul
xchg
call
sbb
retf
iret
and
outs
lea
sbb
xlat
cmp
xchg
xor
imul
and
repz
(bad)
imul
mov
sbb
test
and
in
int3
mov
(bad)
xchg
sbb
lods
dec
push
lock
xor
push
push
xchg
sbb
cwde
stos
call
dec
loop
aaa
pop
test
pop
dec
nop
adc
call
jp
inc
add
xor
jbe
inc
xor
push
ja
out
loope
repz
pop
jp
retf
xchg
retf
cs
sbb
mov
mov
daa
daa
mov
sub
leave
pop
loopne
push
int
hlt
ja
ret
cwde
xchg
test
leave
inc
sti
mov
in
mov
rcl
int
jl
movs
cwde
ficomp
repz
cmp
in
inc
imul
mov
jne
or
lahf
in
inc
xor
or
loope
inc
test
faddp
leave
sub
jne
sbb
cdq
cmp
shl
adc
jecxz
jecxz
mul
cmp
test
aam
nop
lods
repz
scas
push
xchg
mov
push
in
ds
lods
mov
imul
hlt
sub
push
mov
in
das
pop
or
stos
xchg
sar
push
push
and
xchg
das
cmp
cmp
sbb
xor
test
scas
repz
fild
enter
push
dec
sub
adc
enter
and
and
xor
cmps
jo
ret
jl
mov
lods
repz
add
sti
mov
mov
mov
fs
mov
sub
xor
mov
xchg
daa
xchg
mov
je
hlt
sbb
cli
or
sbb
xchg
ret
dec
adc
pop
add
add
xor
inc
out
(bad)
enter
push
jmp
ficomp
sysret
or
cmp
into
(bad)
daa
adc
(bad)
mov
and
into
or
dec
cmp
jl
cmps
out
or
nop
fldcw
movs
addr16
mov
pop
pop
sub
jno
inc
addr16
lods
push
inc
out
push
push
cmc
nop
pop
icebp
cmp
push
fs
fcomp
movs
bound
fld
push
pop
js
mov
dec
xor
hlt
mov
mov
ret
syscall
dec
adc
adc
mov
sub
xchg
lds
fdiv
pop
sbb
(bad)
pop
dec
scas
sub
jo
shl
jmp
(bad)
scas
inc
test
in
mov
mov
sbb
push
frstor
jo
xchg
add
prefetch
cld
cmp
dec
sti
or
(bad)
push
push
arpl
mov
fs
cmp
loope
pop
jecxz
and
add
pushf
pop
and
adc
mov
mov
cdq
daa
enter
mov
push
fidivr
mov
(bad)
out
jmp
pop
ret
ss
adc
enter
push
pop
mul
adc
les
add
sub
stos
mov
ins
mov
adc
dec
and
aad
call
xor
mov
pop
mov
imul
jmp
jg
lahf
adc
in
inc
scas
(bad)
fs
mov
mov
inc
inc
or
jle
out
pop
push
mov
addr16
mov
(bad)
test
push
adc
es
ret
lock
mov
cmps
add
loopne
jae
arpl
mov
out
mov
pusha
nop
movs
test
push
push
push
test
mov
xchg
in
loopne
xchg
mov
jo
pop
fwait
and
iret
mov
sbb
jbe
adc
xor
aaa
ror
mov
xor
sbb
repz
loope
js
or
lds
dec
outs
test
push
fs
and
and
fmulp
lock
add
call
retf
cld
pop
das
add
mov
fcmove
pop
add
dec
or
pop
sbb
xor
pop
xchg
and
jecxz
pop
stos
mov
xor
and
jp
sub
sbb
mov
hlt
shr
sub
xor
(bad)
jecxz
sbb
popa
pop
movs
adc
loope
iret
dec
in
cmp
adc
jno
add
outs
fninit
mov
dec
xchg
scas
add
sub
push
loope
enter
xor
sar
fcmove
jle
retf
(bad)
in
ds
test
mov
sbb
iret
mul
ins
not
ja
inc
push
jbe
mov
sbb
out
adc
rcl
mov
into
jge
xchg
mov
fdiv
mov
fldenv
imul
and
int
cmps
cmc
lods
mov
xchg
cld
sbb
pop
jns
dec
(bad)
gs
push
loop
test
jb
in
add
cli
cmp
repz
pop
pop
mov
fsub
inc
movs
(bad)
repnz
or
jle
xor
sub
pop
push
xlat
clc
std
mov
pop
dec
inc
pop
mov
push
adc
stos
cli
mov
movs
(bad)
aad
push
xchg
mov
dec
or
xor
cwde
jnp
mov
es
or
push
popf
je
sbb
and
pop
lods
pusha
pop
clc
lds
or
xchg
mov
xchg
cs
add
jns
int
es
in
jecxz
xchg
and
sbb
sbb
movs
jecxz
loope
cmp
adc
aam
imul
push
xchg
and
call
pop
dec
pop
pushf
out
fsub
retf
inc
push
pop
push
mov
(bad)
mov
inc
cdq
inc
ret
lods
jb
push
scas
sbb
in
or
cmp
dec
popf
dec
cmc
in
jmp
es
push
inc
and
arpl
push
push
mov
aas
mov
(bad)
xlat
enter
or
mov
das
nop
(bad)
jl
pusha
outs
xor
clc
pop
cwde
cmp
jae
fcmovnb
xor
(bad)
push
jmp
hlt
test
or
shl
xchg
mov
sar
sub
pop
shr
inc
add
mov
adc
mov
pusha
inc
mov
fmul
arpl
ins
cmp
test
scas
sub
scas
jg
fcom
test
outs
lds
orps
mov
push
push
add
add
mov
pop
dec
and
push
syscall
xor
mov
sbb
or
movs
hlt
xchg
ss
icebp
scas
fmul
call
jb
cld
(bad)
int3
loop
dec
aas
out
ds
loope
ins
push
inc
mov
add
das
lock
scas
je
(bad)
xor
inc
(bad)
mov
inc
push
inc
test
jg
xor
pop
mov
imul
push
adc
mov
ret
scas
mov
sub
jecxz
mov
cdq
clc
movs
xchg
in
push
jae
stc
xor
ins
cdq
(bad)
retf
fsubr
ins
or
push
out
mov
sbb
inc
clc
add
lds
pop
in
shl
mov
jne
cmp
(bad)
cli
mov
pop
push
aad
xor
xchg
popa
lods
es
scas
int3
or
lahf
gs
les
sbb
cs
adc
adc
jno
dec
sbb
rcr
mov
scas
and
addr16
jo
mov
inc
test
call
cmps
loope
cmps
fist
and
pop
lds
(bad)
leave
(bad)
not
in
cmp
cdq
(bad)
jge
lea
dec
or
pop
jo
push
loopne
inc
mov
call
fs
(bad)
ret
fs
je
lds
stc
xor
pop
cmp
test
mov
fbld
dec
rol
shl
ins
dec
jo
jge
dec
push
cmp
lea
pop
das
jae
add
(bad)
push
xchg
lahf
and
ror
(bad)
call
fstp
pop
cli
jnp
dec
sub
je
das
mov
fst
lds
outs
mov
sti
push
das
(bad)
mov
push
push
fs
arpl
sub
mov
dec
dec
and
test
bound
cmp
xor
call
cld
lock
push
mov
cld
dec
push
inc
ja
cmp
idiv
call
mov
aam
jbe
aad
test
xlat
aad
std
loope
into
jno
call
mov
je
jge
cmps
adc
push
dec
xor
mov
lods
push
mov
adc
xchg
sbb
xlat
pop
repz
jmp
or
cmps
mov
mov
jg
in
outs
cmp
(bad)
into
dec
fsub
sbb
call
ins
call
loopne
sbb
cmp
sub
out
sbb
add
inc
int
adc
or
shl
mov
jo
push
pushf
push
jl
dec
pop
inc
js
mov
push
ds
xchg
(bad)
adc
hlt
and
push
inc
or
pop
cmps
call
xchg
imul
pop
cmp
pop
mov
jns
popa
xor
push
jp
call
gs
out
sbb
mov
push
mov
cdq
push
test
cwde
cmp
mov
mov
enter
mov
pop
add
push
ror
add
pop
leave
ficomp
(bad)
cld
cmp
cdq
pop
clc
mov
dec
rol
push
rol
lds
sbb
xchg
push
clc
adc
sbb
jl
ss
outs
outs
xor
ja
or
icebp
rcr
adc
xchg
xchg
ja
int3
in
xor
sbb
(bad)
add
push
cmp
lods
fst
cmps
mov
sbb
jle
pop
movs
lahf
sub
jmp
cmc
dec
lahf
aaa
in
out
into
mov
cmps
pop
es
scas
sbb
dec
pop
or
hlt
lods
push
aaa
dec
shr
loop
fnstcw
idiv
aas
popa
fwait
mov
bound
das
(bad)
dec
mov
cmp
pushf
inc
mov
mul
(bad)
(bad)
xor
cs
mov
fidiv
aad
mov
call
fbstp
loope
xchg
in
push
adc
fbld
cmps
inc
adc
add
pop
fwait
loopne
jmp
adc
jae
shl
dec
sti
add
or
mov
mov
out
loop
jg
mov
push
repz
ja
xchg
out
mov
outs
stos
rcl
ret
repz
cmps
push
sbb
(bad)
es
push
aam
scas
jmp
mov
adc
push
mov
pop
repnz
std
cmp
cmc
test
sbb
out
pop
push
mov
pop
stos
retf
rol
rol
mov
(bad)
mov
push
cmp
in
inc
sbb
test
in
or
cmp
mov
jge
sub
xchg
inc
imul
push
mov
pop
mov
repz
jmp
in
icebp
jmp
(bad)
pop
xor
sbb
add
in
fwait
(bad)
call
call
inc
loopne
popa
or
out
mov
pop
pop
inc
std
ffreep
sub
dec
stc
xor
data16
fld
xchg
adc
retf
retf
mov
mov
add
les
jnp
mov
sub
adc
stos
mov
sub
or
fisub
sbb
mov
and
mov
mov
ja
xor
or
aad
mov
cmp
(bad)
mov
mov
and
mov
test
dec
adc
jb
mov
adc
scas
or
push
test
cmp
je
xchg
rcr
outs
add
jmp
js
scas
xor
push
mov
jg
push
loopne
je
sub
cmc
adc
mov
ss
aam
cmps
repnz
imul
mov
fist
inc
sbb
std
int3
or
loope
add
mov
cmps
shl
pop
lods
jmp
add
sbb
fwait
jmp
cli
pop
fcomp
dec
jmp
and
pop
adc
push
push
test
test
jge
add
fld
fsubp
add
(bad)
and
or
imul
bound
test
sub
adc
pop
loope
into
adc
cdq
cdq
mov
ja
fmulp
ds
add
xchg
push
(bad)
adc
pop
fsubr
xor
lods
jl
dec
push
dec
adc
xlat
mov
sbb
stos
dec
sbb
cmp
sbb
ret
xor
(bad)
pushf
mul
mov
jmp
js
push
repnz
inc
(bad)
pop
xor
cmps
jmp
mov
fstp
dec
or
retf
dec
sub
movs
mov
ins
add
mov
ins
sahf
mov
ins
push
mov
rol
fimul
aaa
pop
nop
mov
ficomp
xchg
retf
xor
sbb
add
int
and
or
les
sbb
mov
fsub
cmp
daa
xor
dec
scas
mov
xchg
aam
cs
aaa
adc
cmc
je
div
or
pop
into
leave
test
shl
cs
(bad)
mov
pop
dec
scas
shl
cmp
mov
dec
popf
in
add
xchg
lock
repz
stc
sbb
inc
and
lods
stc
stos
rcl
js
test
sub
and
gs
xchg
inc
je
into
xchg
fisub
call
mov
jl
mov
outs
mov
mov
sbb
jmp
neg
in
jmp
push
hlt
push
adc
sub
add
push
or
cmps
fbstp
push
retf
enter
sbb
mov
mov
(bad)
daa
inc
and
sbb
push
sbb
ins
loopne
sub
sbb
jb
sar
add
xor
pop
mov
mov
pop
or
xor
(bad)
adc
lods
push
cmps
or
test
sbb
fisttp
cwde
jmp
ss
das
or
mov
dec
inc
push
leave
and
xchg
xlat
dec
call
push
stos
jno
sub
cs
push
and
fcom
stos
add
imul
aad
cmps
fs
sti
cmp
or
mov
sbb
and
push
cs
jne
out
mov
jl
mov
iret
adc
pusha
rcl
pop
arpl
xor
xor
mov
xor
rcr
ror
fbstp
bnd
sub
sti
(bad)
mov
daa
loop
mov
leave
jo
cld
mov
aad
or
adc
cmps
sub
popa
rcr
cmc
add
popf
ins
inc
lock
stc
in
imul
add
imul
addr16
arpl
mov
lods
js
sbb
je
mov
stos
push
jno
gs
mov
ror
mov
push
outs
xchg
xchg
xor
test
jl
ds
push
xchg
jnp
pop
xor
lahf
sub
test
and
dec
add
(bad)
shr
jmp
or
cli
cmp
cmps
dec
pushf
pop
shl
sbb
or
scas
dec
nop
outs
gs
xchg
cmp
or
rcl
shl
scas
call
std
rcl
in
sub
aas
pusha
jno
pop
pushf
cmp
outs
fnstenv
cmp
fadd
xchg
aaa
lahf
jmp
cmp
push
add
cmp
sahf
fsub
in
xchg
mov
and
fs
mov
lods
ss
(bad)
loope
add
xchg
mov
mov
cwde
xchg
pop
sbb
lods
aas
mov
inc
xchg
std
mov
es
pusha
sub
inc
inc
or
sahf
cs
cmp
cmp
push
mov
out
neg
add
loope
sbb
pop
sbb
(bad)
pop
icebp
pop
gs
jecxz
xor
jno
cmp
mov
clc
dec
jno
add
in
mov
(bad)
inc
sub
hlt
es
push
inc
xchg
adc
fdivr
call
or
outs
cmps
out
das
adc
add
pop
jnp
out
inc
fldcw
shl
dec
dec
mov
add
mov
xchg
jne
dec
call
cli
or
dec
sbb
add
sar
aas
pop
mov
inc
ret
dec
das
aas
and
push
into
cld
mov
in
or
jge
(bad)
push
mov
inc
mov
and
add
sti
add
sbb
xchg
cmc
adc
ss
push
pop
inc
lahf
movs
and
fwait
into
sahf
dec
pop
push
movs
cmp
jne
cmps
xor
and
les
enter
jo
shl
fnstcw
aaa
cmps
pop
or
imul
iret
jge
ds
sub
(bad)
xor
movs
cwde
push
cwde
xlat
(bad)
cmp
stc
fadd
ret
in
ins
add
push
xor
ss
cld
jbe
cs
mov
popf
les
movs
mul
inc
mov
jl
push
adc
push
retf
push
push
adc
and
push
aas
in
jecxz
out
push
mov
pop
and
cmc
(bad)
(bad)
(bad)
into
or
add
int
sbb
or
pavgw
add
arpl
movs
repnz
xchg
js
outs
nop
pop
dec
cdq
in
and
bound
jmp
cmp
and
sbb
cmps
aas
push
cmps
jae
jns
and
loop
int
mov
cmp
cmps
inc
jecxz
pop
jnp
cmp
adc
jmp
mov
nop
sahf
frstor
ret
fdiv
xor
sahf
sahf
test
and
jnp
sti
or
jl
imul
push
mov
inc
stos
xor
dec
or
es
cmps
jo
in
leave
dec
jne
mov
sbb
icebp
(bad)
mov
sbb
and
jbe
cmp
sub
test
jne
ret
and
(bad)
and
jmp
dec
das
std
bound
and
jmp
mov
retf
inc
enter
scas
lock
xchg
into
sub
into
push
sbb
push
pop
movs
mov
or
add
mov
lea
punpckhwd
pop
pop
jmp
sbb
repnz
mov
mov
jne
iret
pop
fs
popa
jp
pop
pop
pop
mov
lea
adc
mov
jmp
pusha
or
movs
rcr
ja
pop
cmc
mov
fist
or
adc
inc
cmp
xchg
inc
fisttp
mov
add
jmp
aad
retf
or
push
mov
jge
sti
jp
aaa
mov
out
cmp
and
das
out
dec
mov
std
outs
jbe
mov
mov
movs
pop
outs
out
mov
push
inc
shl
jno
inc
mov
js
or
mov
cmp
fwait
xchg
add
jns
popa
cmps
push
jo
push
inc
pushf
retf
fist
adc
sub
push
dec
sbb
pop
dec
add
xor
inc
or
pop
loop
aas
jmp
pop
jmp
mov
jmp
sbb
jmp
call
cmp
test
imul
(bad)
cs
scas
dec
rcr
cmp
inc
pop
push
scas
fisttp
adc
cmc
in
jb
inc
shl
and
xor
(bad)
out
mov
jns
frstor
ins
push
xor
pusha
cmp
sub
add
adc
sub
mov
push
mov
repnz
arpl
dec
add
xor
sbb
bound
cmp
push
iret
inc
out
pop
jmp
adc
mov
int3
loope
stos
sub
jb
mov
push
pop
jge
lods
cmp
mov
xchg
retf
in
shl
dec
pop
pop
cmc
xor
sbb
cwde
in
mov
jle
test
hlt
nop
call
add
lock
xchg
pop
gs
cmp
xchg
leave
mov
sub
and
aad
sub
out
xchg
and
add
call
out
sbb
push
mov
add
ret
sub
mov
test
ret
fimul
lods
sbb
cmp
mov
adc
bound
mov
pop
outs
retf
lds
out
sbb
lock
add
test
in
mov
xchg
sub
xor
sbb
fcomp
sub
xchg
out
jecxz
sub
stos
mov
fadd
sub
out
movs
clc
jmp
sbb
adc
jecxz
cmp
mov
jb
cmp
pop
xchg
pop
ror
fcom
adc
test
and
inc
dec
push
mov
addr16
ret
and
fwait
sub
adc
dec
aas
mov
cwde
cmc
lods
ss
cmp
cmp
pop
dec
in
mov
xchg
mov
mov
div
out
xlat
adc
mov
sub
out
mov
cmp
movs
mov
out
sbb
fist
push
mov
mov
and
fisub
sub
pextrw
outs
jmp
mov
sub
(bad)
stos
jge
movs
mov
xchg
dec
xchg
das
jne
push
xchg
sbb
in
pop
push
inc
jbe
ja
pop
pop
jbe
xchg
loop
jmp
loopne
push
stc
loop
xor
mov
jno
sbb
and
add
fdiv
cli
les
cmp
or
pop
add
push
mov
or
retf
leave
scas
cmp
pop
pop
pop
adc
push
ficomp
inc
rol
and
mov
xchg
shl
test
imul
push
and
mov
ins
inc
and
(bad)
stos
scas
not
xor
loop
int3
cmps
xor
push
inc
clc
pop
in
push
cmp
xor
fst
cmp
ds
test
mov
mov
out
dec
enter
mov
mov
sub
lods
dec
lea
lahf
cmc
data16
xchg
dec
sub
cmps
dec
cmp
push
cmps
mov
jne
enter
adc
mov
test
into
or
jg
cmp
out
into
dec
mov
(bad)
int
xchg
inc
(bad)
sbb
popf
inc
fstp
ficom
cli
mov
sbb
repnz
sbb
scas
push
and
cmp
mov
(bad)
nop
je
hlt
js
inc
rol
mov
mov
jmp
outs
mov
pop
inc
push
and
inc
cld
jp
dec
outs
imul
test
retf
sub
jg
push
inc
or
call
and
and
ja
xlat
enter
dec
xchg
into
stc
(bad)
into
xor
cmps
pop
mov
cli
loop
movs
pusha
push
arpl
call
sbb
cmp
sbb
sub
ds
mov
pop
mov
mov
cmps
pop
mov
add
sbb
inc
mov
push
push
mov
xchg
repnz
inc
test
shl
pop
fdivp
inc
cmp
lods
lock
mov
(bad)
jecxz
lds
out
bound
inc
fst
jle
push
dec
sbb
xchg
sti
test
hlt
add
cmp
and
sbb
(bad)
xor
jp
sub
in
aad
ret
push
add
pop
jns
(bad)
mov
in
pop
cmp
(bad)
inc
mov
shl
xor
lods
cs
ss
out
or
imul
les
inc
push
xor
mov
mov
sbb
loope
scas
sub
xor
cmps
mov
adc
xor
sub
sti
mov
and
or
mov
jmp
iret
lods
dec
push
aas
adc
inc
mov
jmp
outs
pop
addr16
push
push
rcr
pop
or
loop
xor
std
sub
or
std
fsub
xchg
inc
xor
push
loop
or
clc
inc
loope
mov
aas
mov
sub
lods
xlat
mov
and
mov
bound
ret
dec
getsec
stc
repnz
mov
rcl
mov
jecxz
pop
push
in
arpl
xchg
(bad)
xchg
into
xchg
in
jns
mov
arpl
nop
aas
sub
sub
call
std
out
and
sub
test
jl
call
mov
push
loopne
repnz
lods
scas
leave
xor
mov
fist
cmps
ror
sbb
push
push
out
sbb
hlt
call
cmp
aam
and
add
cdq
clc
xor
movs
mov
sbb
inc
mul
mov
data16
dec
popf
mov
mov
pusha
add
or
mov
add
cwde
out
(bad)
popf
add
test
aaa
xchg
in
lds
cwde
mov
ret
or
pusha
and
and
mov
mov
pop
mov
idiv
aas
xchg
mov
nop
(bad)
bnd
mov
in
mov
push
or
dec
dec
fstp
push
mov
sahf
pusha
pop
aaa
js
xlat
mov
mov
and
jle
mov
cmp
outs
test
add
pop
adc
test
inc
rcr
mov
xchg
pop
cmp
arpl
jae
push
mov
outs
pushf
or
jl
stos
lahf
xor
inc
adc
retf
movs
loop
nop
rcr
pop
xchg
ins
sti
mov
mov
movs
mov
stos
inc
dec
sub
pop
aas
inc
(bad)
out
adc
pop
fimul
jb
sub
push
neg
jle
mov
stc
leave
sub
sahf
mov
cmps
push
inc
push
cmps
je
popa
fwait
das
fwait
or
add
rcr
stos
out
or
loope
jecxz
jmp
or
lods
enter
and
gs
(bad)
stc
loopne
(bad)
xor
ret
sub
fmul
sahf
push
call
xchg
repnz
jae
mov
inc
mov
pop
push
and
(bad)
retf
cmp
out
imul
mov
ins
fnstcw
adc
sub
imul
mov
call
pop
jnp
xor
ins
nop
jp
mov
popa
int
push
xchg
jnp
lds
or
pushf
cmp
xor
and
data16
xor
jecxz
jno
push
adc
and
mov
xchg
outs
(bad)
movs
mul
repnz
out
lods
xor
fisubr
or
test
pop
or
mov
shl
es
pop
xchg
jne
mov
add
aaa
retf
ret
or
sbb
sub
adc
popa
xchg
aam
(bad)
jo
pop
xchg
mov
(bad)
sub
(bad)
and
add
cli
mov
dec
dec
mov
(bad)
jae
rol
add
sub
(bad)
lods
sbb
push
xlat
icebp
movs
sub
mov
inc
cld
in
inc
and
mov
xor
sub
daa
mov
bound
xchg
xor
fsub
sub
out
mov
fdivr
call
jbe
add
cmp
xor
jo
(bad)
cmp
xchg
lahf
add
jmp
cmps
arpl
mov
shr
xor
push
add
in
(bad)
imul
mov
mov
(bad)
fmul
sub
std
rol
imul
test
imul
push
dec
mov
scas
loop
test
nop
mov
push
pop
mov
xchg
iret
(bad)
and
cdq
or
scas
cli
inc
ds
es
mov
rol
dec
ins
cmc
dec
push
and
(bad)
and
or
add
loopne
bound
rcr
stc
dec
lahf
xor
mov
(bad)
loop
cld
mov
cdq
push
test
or
mov
or
cmp
pop
lock
mov
mov
adc
pop
dec
xchg
addr16
(bad)
mov
xchg
pusha
jb
rcr
xor
(bad)
cmp
fnstenv
inc
int
(bad)
sti
es
out
les
xchg
jo
inc
movs
in
xor
or
std
ja
imul
inc
iret
aam
jg
repnz
mov
cmps
push
rcr
loop
mov
adc
clc
outs
xchg
sub
fld
shl
inc
ss
mov
cdq
xor
jns
xlat
push
mov
jge
mov
cs
pop
push
sahf
pop
jo
rcr
jmp
add
jno
dec
(bad)
lock
aaa
adc
jbe
lea
add
jnp
loopne
sub
pushf
mov
xor
jecxz
jl
mov
xchg
call
sub
shl
xchg
and
jne
test
pop
repnz
cmp
fld
sbb
das
mov
sbb
mov
fisubr
pop
mov
inc
imul
cmps
retf
or
cmp
pop
ret
lahf
adc
inc
loope
test
mov
xor
add
xor
and
inc
inc
call
cmp
cmp
push
inc
add
pop
push
fist
xchg
pop
(bad)
sub
add
pop
out
mov
int
cmps
hlt
jmp
outs
mov
fild
mov
inc
pusha
sbb
mov
mov
fistp
jo
inc
inc
out
ret
outs
(bad)
jp
pop
and
lea
xchg
movs
retf
jmp
jl
add
loopne
cmps
pop
div
xor
popf
gs
add
cmps
(bad)
dec
hlt
mov
cmps
movs
push
aaa
cmp
jne
ds
ds
inc
pushf
push
pop
stos
in
pop
inc
les
or
js
imul
rol
outs
inc
pop
test
and
aad
and
scas
mov
xchg
jo
add
invd
push
cmp
inc
dec
xor
sub
gs
fldenv
loope
sbb
aas
dec
fisub
sar
inc
adc
dec
pop
movs
lea
ror
fist
clc
retf
(bad)
xor
shl
loope
pop
xchg
push
ret
fbstp
mov
sbb
jp
loopne
in
movs
js
fisttp
imul
ins
mov
mov
sub
mov
sub
fs
sahf
aas
jbe
iret
mov
mov
loopne
sbb
push
int
loope
pop
in
and
inc
dec
jecxz
sbb
mov
mov
aad
and
or
shr
fwait
xchg
in
jp
pop
inc
test
jge
xor
dec
(bad)
ror
jbe
out
and
jns
out
xchg
inc
dec
popa
cmp
mov
dec
setbe
in
or
fsub
add
pop
adc
js
mov
test
xchg
push
das
and
cdq
out
or
test
shl
movs
mov
out
(bad)
popa
gs
inc
outs
push
sti
mov
jle
dec
sub
and
shld
jl
in
mov
xchg
mov
fcom
xor
mov
push
neg
push
movs
mov
dec
loope
shl
lahf
add
jl
inc
inc
inc
xchg
repnz
repz
xor
sub
ret
xchg
sbb
sub
jg
push
push
mov
cmp
sub
cmp
dec
cmp
push
repnz
imul
inc
out
pop
fadd
iret
adc
dec
cmp
call
popf
dec
add
movs
enter
pop
aaa
adc
icebp
pop
mov
adc
out
ins
stos
inc
(bad)
xor
loope
dec
(bad)
imul
sbb
add
mov
and
inc
scas
inc
aas
cmc
mov
popf
int3
xchg
daa
and
sbb
into
std
je
jmp
test
xlat
jo
dec
int
or
pop
xchg
xchg
add
mov
mov
hlt
imul
push
ss
and
inc
retf
and
mov
out
dec
mov
mov
pushf
stos
jmp
shl
pop
push
sub
and
xchg
xchg
cld
fs
mov
adc
rcl
push
ds
imul
out
imul
popf
dec
mov
dec
cmps
dec
pop
movs
in
bnd
jne
(bad)
js
shl
dec
std
movs
(bad)
pop
fiadd
inc
sub
ss
stc
mov
clc
mov
cdq
mov
pop
push
loop
lea
rcr
sti
cmp
popa
pop
xchg
fs
sbb
in
ret
xor
cmc
jb
cmp
mov
mov
mov
add
xchg
or
xlat
mov
jle
cmp
push
daa
bound
jno
pop
lds
jge
sbb
cmp
movs
leave
mov
jnp
repz
loop
jge
lods
out
(bad)
cmp
sbb
xor
jge
dec
or
sub
sbb
aas
daa
sub
rcr
je
bound
jb
test
and
adc
jl
xlat
fistp
repz
cmp
xchg
out
pop
in
sahf
dec
retf
sbb
shl
arpl
fbstp
jo
and
jp
fwait
pop
or
test
(bad)
repz
and
into
pop
outs
into
hlt
xchg
sub
push
(bad)
aam
retf
imul
sub
sub
pop
adc
jae
adc
cmps
pusha
aam
repz
cmc
lods
ret
adc
cs
out
hlt
xchg
test
push
adc
call
fidivr
fistp
into
xlat
clc
jb
ins
lahf
gs
out
mov
or
repz
dec
mov
push
jl
ds
mul
mov
(bad)
mov
nop
jb
xchg
pop
cmp
cmp
sub
mov
pop
jnp
and
push
add
nop
push
lods
pop
rcl
call
into
push
les
mov
push
jge
ret
iret
inc
out
icebp
stc
push
les
fadd
jecxz
imul
(bad)
sbb
(bad)
mov
jge
das
jg
cmps
push
jl
lock
push
imul
pusha
push
sub
or
call
popf
fld
or
xchg
es
outs
lods
inc
mov
fidivr
in
pop
fadd
mov
cli
in
xor
pop
loopne
int3
xchg
mov
shl
out
dec
and
mov
jae
push
xchg
jl
mov
ret
clc
mov
mov
cmps
movs
mov
push
stos
sub
ja
outs
and
pushf
mov
cmc
cmp
outs
stos
dec
fs
loope
jo
dec
or
pop
std
ins
pop
sub
enter
outs
jo
mov
cmps
xchg
pushf
jp
les
jbe
sbb
xchg
sbb
pop
jmp
hlt
adc
ficom
inc
push
cmps
sub
movs
push
add
mul
jmp
stos
sub
loopne
sahf
into
jecxz
inc
(bad)
xor
fs
mov
push
ins
fldenv
shr
fst
fcmovbe
push
mov
and
xor
adc
aas
push
clc
or
cmc
xor
movs
mov
xor
in
lock
ret
dec
push
lods
jge
jbe
sar
pop
aam
in
pop
sti
pop
frstor
xor
xor
jmp
mov
cmp
add
and
bnd
jle
mov
xchg
mov
out
cmps
mov
jle
jo
retf
mov
pop
test
mov
rol
mov
pop
int3
pop
inc
pop
xchg
in
inc
pushf
test
leave
or
repz
sbb
cmps
cwde
and
and
fdivr
inc
push
pop
gs
inc
mov
jl
or
mov
xchg
cld
push
or
lock
(bad)
call
movs
in
inc
sub
jmp
jmp
inc
sub
cmp
scas
es
(bad)
and
ret
inc
add
add
fist
and
xor
sti
fld
xchg
jmp
inc
mov
pop
cmp
sbb
cmp
jl
push
movs
inc
hlt
mov
xor
add
leave
enter
fcmovu
or
shr
hlt
loop
aaa
xlat
jl
jbe
sub
dec
cmps
mov
outs
or
jecxz
pop
xchg
movs
(bad)
stos
movs
inc
and
xor
lahf
xor
jp
and
xor
pop
ja
mov
ins
inc
movs
cmp
popf
add
(bad)
scas
cli
xlat
push
sti
inc
jmp
jae
jge
pop
imul
stc
aam
dec
fdivr
and
sub
lds
sub
mov
enter
retf
faddp
mov
mov
stos
dec
div
enter
icebp
mov
ja
enter
enter
popf
gs
loop
sbb
cmc
mov
sti
add
(bad)
pop
lods
push
test
hlt
inc
cmc
push
mov
repz
jp
popf
bound
dec
pushf
or
cmp
outs
inc
push
jnp
mov
(bad)
fwait
jns
mov
les
cmp
and
stos
outs
adc
sar
movs
mov
repz
stos
xlat
cmc
jmp
xor
frstor
mov
and
call
inc
pop
cmp
(bad)
sbb
fcom
cmp
les
or
add
sti
add
push
in
dec
mov
xlat
clc
xchg
and
outs
lea
lods
in
or
mov
xchg
xor
cli
sbb
jbe
dec
outs
imul
adc
jne
xor
adc
cmp
sub
xor
inc
sbb
and
movs
shr
lea
retf
sbb
in
fwait
pop
mov
or
loopne
xchg
fadd
(bad)
cmp
scas
mov
xchg
adc
add
scas
das
sub
sub
jo
(bad)
data16
ret
pop
pop
fs
sbb
retf
repz
or
sbb
or
mov
(bad)
repnz
lahf
cmp
or
mov
das
mov
jae
mov
adc
sti
or
mov
push
stos
xchg
sbb
and
hlt
mov
xlat
ror
out
and
cmps
arpl
shr
in
test
pop
icebp
leave
clc
push
xchg
mov
sahf
daa
mov
push
(bad)
sub
cmc
in
cmps
mov
in
ja
sbb
pop
dec
jmp
jae
mov
sbb
mov
ror
(bad)
popf
mov
and
or
in
arpl
and
sub
add
jo
(bad)
pop
(bad)
push
and
je
and
push
mov
and
fdiv
jnp
addr16
in
imul
lods
call
(bad)
xchg
movs
rcr
add
cmps
sar
outs
inc
repz
lods
dec
adc
adc
pop
jnp
mov
cmp
mov
and
inc
push
dec
pop
movs
div
push
lods
das
xor
lods
push
inc
push
sbb
sbb
push
mov
cld
ror
aaa
mov
lea
jmp
lods
aas
repz
cmc
in
or
cld
mov
jle
xchg
jge
jge
push
loop
cmp
in
popf
sub
int
xchg
sar
aas
fisubr
cmp
sahf
jmp
jl
shl
gs
int
mov
inc
cmps
pop
call
gs
(bad)
and
and
pop
sub
and
in
mov
pop
stos
sbb
ja
mov
loopne
and
scas
sbb
mov
call
xchg
xchg
jmp
(bad)
cld
int3
push
fild
cmp
adc
enter
(bad)
stc
mov
pop
sub
into
cli
and
dec
and
sbb
mov
cmp
in
and
hlt
int
dec
in
sbb
fldcw
and
and
push
jp
in
(bad)
out
stos
xchg
push
push
jb
repz
mov
test
in
inc
(bad)
(bad)
test
push
(bad)
je
mov
ins
test
lahf
push
mov
xchg
cmp
mov
out
cwde
and
ficom
clc
ror
sbb
in
btc
sbb
pop
pusha
sub
dec
loopne
push
add
xchg
fbstp
(bad)
cli
sbb
clc
loope
jae
inc
lahf
mov
and
inc
cmp
jmp
adc
and
subps
inc
push
popf
xor
(bad)
enter
add
nop
add
js
lahf
ins
addr16
adc
jg
fcmovnu
xchg
outs
add
pop
hlt
push
sti
inc
jns
inc
and
and
sar
cmp
dec
xchg
jmp
test
jle
sub
cld
adc
icebp
cld
stc
dec
inc
cmp
fsubr
call
mov
ja
xor
adc
add
lods
cmps
stos
lea
arpl
xor
imul
and
mov
stos
scas
sub
call
ins
movs
ss
pop
mov
in
call
cmp
int3
movs
loop
movs
daa
rol
jnp
pop
inc
fcomip
push
ror
pop
pushf
iret
ss
inc
mov
sub
stos
mov
fild
pop
into
cmp
pop
adc
stos
or
loope
(bad)
ins
data16
sbb
enter
sbb
in
(bad)
iret
out
dec
mov
xor
ret
pop
js
scas
mov
xchg
dec
and
pop
(bad)
push
scas
jno
aaa
pop
pop
outs
mov
cmp
mov
jb
test
stos
inc
in
xchg
mov
xor
mov
xor
dec
or
jne
dec
jecxz
std
enter
mov
fprem
sar
imul
(bad)
repnz
pop
mov
and
push
xchg
mov
mov
fmul
hlt
data16
xlat
xchg
push
nop
push
fild
test
fisubr
mul
jno
sub
mov
sub
(bad)
repz
ficomp
and
and
mov
fsubr
and
aas
bound
xor
cmp
aas
add
adc
and
into
pop
push
jae
cdq
push
or
sbb
inc
jl
dec
lahf
push
bound
aad
dec
push
sbb
jmp
mov
scas
pop
(bad)
mov
lods
and
push
or
jns
fmul
xor
je
fst
push
in
pop
add
inc
lea
bound
mov
pop
test
dec
mov
popa
push
stos
push
neg
push
sbb
push
add
cmp
push
pop
cmp
push
ins
ret
adc
loop
xor
push
icebp
jecxz
add
mov
xlat
cmp
xchg
jae
pushf
dec
jb
sbb
test
pop
popa
fadd
pop
rcl
jb
xor
rcr
mov
jne
jl
mov
mov
outs
mov
or
add
fidiv
or
test
jnp
mov
popa
ret
call
mov
inc
popf
test
push
jp
cmp
push
ret
aad
mov
mov
std
and
dec
in
or
cmps
mov
sti
pushf
pop
in
imul
iret
loope
cs
fwait
jno
fst
sbb
add
or
or
loope
bound
adc
push
(bad)
push
rep
pop
loope
pop
cmp
adc
fstp
fcmovne
ins
xchg
fnstcw
push
jae
cmp
cli
out
outs
mov
dec
push
ins
aas
pop
or
mov
jb
cmp
inc
inc
outs
sbb
push
jecxz
pop
push
setae
pop
out
das
cmp
xchg
mov
cmp
jge
dec
push
jbe
jge
ins
fwait
push
or
fdivr
cmp
imul
jne
add
es
xchg
xor
neg
sar
mov
popa
call
fadd
lods
js
pop
mov
cmp
xchg
cdq
retf
inc
shl
arpl
add
jle
es
enter
and
xlat
in
xor
mov
mov
rcr
rcr
cmp
stos
enter
dec
push
push
gs
dec
out
inc
push
add
inc
test
adc
test
xor
jb
retf
sub
sbb
mov
pop
push
cmp
jge
push
push
cmp
(bad)
dec
in
pop
add
mov
mov
mov
jne
test
retf
inc
dec
jo
test
enter
push
in
pop
mov
(bad)
adc
movs
adc
js
mov
jne
movs
cmp
inc
adc
shl
sub
jno
jae
iret
dec
cmp
hlt
xor
test
push
fcom
xchg
cmps
jns
jg
add
imul
or
sahf
adc
cdq
sub
leave
loop
outs
cdq
or
mov
rcr
mov
int
mul
(bad)
sub
sub
repnz
mov
cmp
lods
cwde
lods
sbb
adc
das
in
mov
ins
pop
sahf
outs
pop
retf
add
xlat
les
pop
and
inc
mov
mov
ficom
(bad)
push
and
lahf
inc
pop
rol
pop
and
adc
mov
out
xor
rdseed
jge
sbb
add
popf
hlt
repnz
push
fwait
mov
xlat
stc
stc
fidivr
movs
push
ret
fbstp
call
pop
es
mov
fcmovu
ja
cdq
mov
add
(bad)
adc
movs
stc
jns
adc
dec
mov
loop
test
mov
sbb
dec
inc
ja
sub
popf
scas
push
push
loop
ja
add
cmp
jl
in
cmp
push
push
dec
mov
ret
out
rol
fcomp
dec
test
inc
pop
adc
cmps
sub
dec
mov
mov
push
inc
fwait
and
fnsave
or
xor
out
nop
cmp
loope
sub
pop
(bad)
jg
(bad)
mov
hlt
push
outs
ins
ror
jge
sti
sub
mov
out
loop
xchg
pusha
in
xchg
pop
call
das
jbe
shl
jge
jmp
and
xchg
movups
(bad)
iret
cwde
sub
movs
mov
jae
add
pop
bnd
push
adc
out
push
lahf
fld
mov
imul
mov
mov
add
xchg
pop
and
dec
jmp
inc
jo
sbb
rol
pop
sti
stos
jnp
inc
mov
dec
cwde
stos
stos
rcr
jbe
and
outs
int
inc
fwait
cmp
or
lea
retf
scas
ins
mov
popf
jo
mov
pushf
sbb
out
mov
or
in
and
dec
movs
adc
jg
fisub
mov
fild
cld
ret
pushf
fnsave
xchg
dec
aas
mov
and
les
jo
add
cmp
or
in
push
movs
icebp
lfs
ret
repnz
or
(bad)
enter
mov
scas
jl
cmp
add
add
cli
mov
jmp
lods
xor
cmp
add
std
mov
sub
and
cmps
addr16
inc
inc
mov
mov
js
mov
hlt
xor
lea
add
loopne
xor
test
jle
inc
pop
inc
xor
ret
inc
repz
cmp
in
ret
mov
push
xchg
push
sub
fwait
push
mov
mov
je
jbe
adc
sti
call
push
mov
pop
sbb
cmp
xor
mov
and
push
outs
jno
sub
inc
pusha
test
in
outs
mov
int3
scas
or
repz
mov
mov
(bad)
mov
mov
fcmovb
popf
mov
loop
sub
cmp
xchg
rcr
xchg
ficom
aad
mov
rcl
ins
(bad)
or
pop
mov
leave
mov
popf
in
in
jmp
(bad)
push
hlt
dec
imul
push
cmp
xchg
xchg
push
sbb
inc
cwde
mov
mov
ins
fdivr
jp
stc
and
popf
cmps
fcmovne
fld
adc
leave
retf
or
jno
movs
cli
sub
sub
ror
add
jge
mov
test
sub
inc
dec
and
hlt
sub
jecxz
mul
int3
je
fstp
or
retf
push
outs
movs
pop
into
lock
(bad)
xor
dec
inc
xchg
or
jle
push
(bad)
push
and
test
and
xor
ins
sub
into
jmp
outs
(bad)
jge
cmp
inc
hlt
adc
call
dec
js
dec
mov
fnstenv
inc
addr16
pop
jno
sbb
icebp
xchg
je
xchg
arpl
dec
cmp
jno
jno
mov
mov
adc
pop
ss
and
jmp
push
and
adc
dec
mov
leave
sbb
and
out
mov
(bad)
cld
dec
cmps
shl
sub
xchg
add
jmp
adc
cmp
ss
inc
and
xchg
cmps
aas
sar
cmc
pop
and
pop
or
mov
mov
pop
jo
fidiv
xor
fnstsw
icebp
jno
mov
mov
mov
out
jecxz
arpl
pop
xlat
dec
hlt
pop
jnp
sbb
or
lods
aam
int
mov
jae
in
rcl
dec
imul
mov
cmp
or
stos
(bad)
or
cmp
sar
call
call
adc
adc
int
or
cmp
sar
adc
movs
cdq
pop
xchg
cwde
mov
inc
fnstenv
jle
cmp
mov
clc
mov
inc
movs
gs
jo
in
dec
test
mov
jb
push
push
sbb
ss
inc
and
jecxz
jbe
jnp
mov
int3
scas
jae
adc
mov
(bad)
daa
pop
clc
xor
pop
popa
sub
add
je
in
mov
sbb
imul
push
pop
arpl
push
add
mov
sub
adc
sbb
push
adc
cmp
ficomp
fwait
das
jge
xchg
dec
jmp
mov
sbb
sbb
lods
ja
mov
pop
mov
adc
mov
xor
fucomip
push
jmp
(bad)
and
ror
data16
sti
addr16
shl
inc
cmp
(bad)
sub
call
repz
add
xchg
xchg
dec
neg
sub
arpl
(bad)
push
dec
sbb
(bad)
jae
xchg
pop
(bad)
pop
dec
add
sar
call
jb
hlt
jo
xor
pop
dec
jg
sub
in
and
or
fdecstp
jecxz
(bad)
jl
or
sbb
out
jnp
jb
movs
sti
icebp
fisttp
xor
inc
mov
inc
arpl
pop
sbb
mov
std
fcom
adc
sbb
xchg
out
xchg
in
ficom
pop
cmps
dec
add
shld
push
mov
(bad)
shr
cmps
add
jle
pop
dec
fcom
lea
xchg
cmp
mov
xchg
movs
pop
scas
int
ds
xchg
loopne
fstp
outs
or
xchg
sar
xor
xor
xchg
sbb
ja
fistp
leave
les
dec
es
pop
test
add
cmps
rcl
mov
out
adc
jns
ret
mov
mov
dec
push
aas
daa
jp
retf
jge
push
ja
cmp
sub
enter
sbb
inc
cli
or
rcl
je
pop
outs
fld
inc
sub
mov
retf
cwde
ror
pop
repnz
repnz
nop
int3
mov
jae
lods
xor
cmp
(bad)
in
sti
shl
adc
in
mov
xor
jmp
pop
sahf
les
pop
cmps
cmp
fwait
mov
adc
movs
arpl
das
sub
out
jge
outs
mov
and
test
lods
into
mov
or
xchg
cmp
pop
mov
mov
leave
jmp
popf
inc
dec
or
fsubr
repnz
jp
rcl
fnstsw
lods
jmp
jb
xchg
jno
adc
sub
aam
movs
fidiv
jb
imul
repnz
pop
push
(bad)
adc
js
dec
std
dec
std
add
xchg
iret
xchg
in
jp
das
mov
arpl
ja
lods
fdiv
and
adc
mov
mul
xor
fldenv
sub
shl
aam
push
mov
mov
mov
addr16
jne
pop
pop
(bad)
cli
dec
xchg
add
inc
pop
loope
push
push
jl
sbb
push
jg
test
sub
out
jle
js
fs
adc
sub
bound
jle
sbb
dec
addr16
movs
hlt
pop
mov
or
mov
adc
int
and
aam
pop
cmp
sub
xchg
or
xchg
lds
adc
xlat
sbb
push
pop
sub
out
or
cwde
dec
xor
and
pop
push
enter
inc
addr16
pop
adc
loope
mov
jnp
inc
dec
jbe
and
pop
test
(bad)
or
jmp
fcomp
test
xchg
(bad)
das
mov
dec
stos
inc
mov
test
sub
mov
jne
push
adc
dec
pop
mov
fadd
mov
fs
inc
mov
push
xchg
les
add
sbb
movs
jmp
xchg
icebp
xor
jl
sbb
xchg
sbb
cwde
add
mov
add
sub
ret
push
mov
in
std
aad
les
xor
js
pop
rol
xor
xlat
mov
sub
retf
retf
xchg
fs
jb
add
inc
shl
dec
inc
(bad)
mov
ds
xor
pop
cmp
out
pop
(bad)
xchg
jne
in
fnstenv
add
fxam
add
dec
inc
cwde
xor
fimul
and
mov
clc
lock
(bad)
cmp
ffree
ffreep
data16
inc
and
jmp
das
jns
outs
sbb
jle
pop
ja
cmps
mov
xor
cmp
movs
push
cmps
and
adc
test
cmps
call
(bad)
das
mov
xor
sub
or
push
pop
in
mov
jge
push
je
xor
ret
or
push
cwde
add
push
sbb
enter
(bad)
mov
arpl
or
in
mov
jmp
mov
mov
outs
or
out
mov
lock
aaa
dec
fcmovbe
inc
cmps
xlat
mov
out
divps
fwait
adc
mov
and
and
popf
mov
hlt
mov
push
jle
leave
cmp
in
and
test
shl
cmp
inc
dec
dec
icebp
mov
loopne
mov
or
and
fs
(bad)
cs
movs
int
cld
in
(bad)
adc
mov
arpl
aaa
test
cmps
mov
adc
dec
inc
and
popa
sub
aam
xchg
inc
dec
call
es
pop
je
cmp
inc
mov
sub
ficomp
lea
and
fstp
rcr
sbb
pusha
dec
pop
in
in
sbb
push
dec
cmp
fnstcw
je
inc
mov
jno
ds
pushf
sub
cmp
call
fld
push
mov
xor
jb
fisub
jne
ss
dec
in
adc
into
pusha
push
add
jnp
xchg
mov
sub
into
add
sbb
mov
movs
push
pop
or
sub
iret
inc
out
call
jle
in
scas
rcl
or
push
in
jns
xchg
adc
jne
sbb
push
cdq
add
add
cdq
dec
sub
and
pop
pop
push
push
jmp
mov
inc
loopne
jbe
cmp
mov
out
mov
push
popf
pusha
fwait
sti
sbb
pop
shl
repnz
popa
sub
add
add
pop
push
jb
test
iret
dec
or
add
adc
gs
call
aas
sahf
int
(bad)
mov
add
or
cdq
hlt
test
arpl
adc
jnp
daa
sbb
cmc
inc
mov
adc
loop
push
imul
(bad)
jns
std
in
cs
inc
and
push
arpl
jmp
mov
xchg
push
inc
test
sub
int
dec
sub
ja
push
xor
aaa
push
into
cmp
cwde
mov
push
out
std
les
jp
mov
outs
or
and
(bad)
add
mov
pop
arpl
pop
push
pusha
loop
or
xchg
mov
lock
imul
fimul
sub
inc
imul
cmps
jmp
test
stc
(bad)
cmp
out
xor
fwait
ins
sahf
jecxz
push
dec
mov
mov
movs
xchg
(bad)
fwait
and
scas
lods
jecxz
int
xchg
test
mov
cld
cmp
or
dec
dec
fild
ins
mov
and
sbb
jg
out
(bad)
cld
(bad)
in
std
clc
scas
pop
sbb
imul
dec
jae
lock
shl
sbb
xchg
push
retf
out
jo
bound
xchg
mov
dec
jns
daa
ret
outs
pop
sbb
dec
fisub
mov
out
shl
and
lea
add
mov
(bad)
ss
sar
jmp
mov
(bad)
rcr
push
jl
or
push
out
in
(bad)
cmp
sbb
sub
mov
call
push
and
pop
daa
xor
dec
jp
movs
xor
or
xor
jl
es
push
inc
jp
pop
idiv
jne
je
xchg
scas
aad
push
jle
pop
sub
push
(bad)
sbb
mov
xchg
mov
iret
jbe
je
call
add
loopne
or
fstp
add
adc
and
(bad)
scas
push
mov
cmp
cmp
xchg
in
in
push
(bad)
jge
dec
out
sub
les
sbb
ds
cld
ret
or
pop
ins
or
push
nop
fcomp
ret
push
mov
xchg
cmc
mov
push
iret
jl
jge
cmp
cmp
out
(bad)
and
jbe
cmp
adc
test
pop
in
adc
sar
fimul
mov
test
(bad)
xchg
mov
or
sub
leave
mov
xchg
pop
pusha
sub
ja
push
shl
mul
div
cmp
movs
and
mov
popf
pushf
mov
shl
aaa
js
aam
aas
mov
and
ret
inc
mov
ret
cmp
sub
cli
pop
cwde
ror
mov
or
es
add
push
inc
add
jae
pop
mov
pop
dec
popf
xlat
(bad)
or
es
int
into
or
hlt
fdiv
sub
and
cmp
out
(bad)
cwde
sub
fst
mov
leave
mov
sbb
cmc
push
fisub
rcr
imul
xchg
clc
into
mov
push
aaa
mov
dec
cmp
xchg
rcl
push
and
arpl
sbb
aaa
add
jno
loope
scas
add
test
xchg
shl
sahf
and
add
xchg
jl
cdq
shr
rcr
imul
dec
sti
xchg
(bad)
hlt
cld
fwait
pushf
xor
and
sbb
ror
ins
xor
arpl
js
and
popf
sar
sbb
pop
movs
jnp
pop
ret
or
(bad)
sbb
mov
std
inc
imul
ret
mov
or
jbe
pusha
add
pop
mov
cwde
arpl
fisubr
cs
sbb
iret
test
add
(bad)
sti
mov
fcmovnu
jecxz
pop
out
jmp
stos
aaa
pop
push
mov
adc
les
(bad)
pop
ins
in
fisttp
ins
sub
push
test
or
daa
jle
jns
cdq
(bad)
aad
outs
pop
cmp
bound
push
and
(bad)
xchg
icebp
nop
push
arpl
pop
enter
in
mov
stos
lods
dec
mov
mov
ficom
and
add
push
jns
aaa
and
pop
xor
hlt
cmp
test
cmp
xchg
mov
dec
push
mov
in
jp
inc
push
add
(bad)
mov
inc
or
ror
test
and
imul
sub
sar
cmp
mov
inc
gs
cdq
call
dec
mov
mov
push
mov
and
jecxz
cwde
lods
jb
mov
jg
jo
fwait
mov
movs
mov
loopne
rep
ror
std
rol
fst
das
cmps
mov
ins
(bad)
jno
push
js
mov
dec
daa
aad
call
lds
push
in
fisub
stos
lds
xchg
or
popa
inc
in
aad
add
jbe
(bad)
inc
push
lods
dec
pop
adc
mov
scas
into
jns
lods
arpl
int3
add
mov
xchg
push
cwde
pop
das
jo
inc
mov
(bad)
outs
loope
inc
sahf
je
xchg
(bad)
lahf
mov
repz
rcr
mov
cmc
cwde
cmp
retf
xchg
vpaddsb
jp
fistp
cmp
push
jno
xchg
cmp
cmps
xor
hlt
sbb
neg
imul
or
dec
int
mov
lahf
test
icebp
and
arpl
add
iret
add
leave
jo
sub
aam
pop
cmp
xor
sbb
fild
stos
call
mov
lahf
inc
fdivr
mov
mov
dec
inc
fldenv
fdivr
or
inc
ds
inc
sahf
jae
ret
push
test
push
scas
push
mov
fisub
cmp
aam
jp
mov
push
rol
adc
gs
stos
ret
fisttp
push
xchg
or
imul
cdq
(bad)
into
scas
sub
shl
jnp
push
mov
ret
xlat
mov
push
sub
dec
and
movs
add
lea
push
adc
and
mov
mov
jg
jb
fwait
sahf
xor
push
shl
lods
cmp
push
les
mov
sbb
fcmovb
lea
pop
lds
repz
or
mov
fwait
and
pop
jp
lea
xchg
nop
(bad)
ja
push
mov
add
mov
add
jle
inc
jecxz
lahf
xchg
or
adc
stc
pop
and
pop
sbb
imul
sub
mov
or
pusha
jge
jmp
mov
test
ja
aad
out
adc
xchg
xchg
push
add
lods
lock
or
inc
call
push
jge
stc
dec
mov
pop
stos
std
mov
repnz
cld
fs
adc
pop
and
or
jns
jmp
sub
repnz
xor
add
inc
out
or
(bad)
sub
and
inc
add
add
mul
test
push
cmps
push
test
sahf
aas
sbb
mov
push
inc
out
xor
mov
pop
sbb
cli
jecxz
cmp
xor
outs
in
push
mov
add
imul
mov
int
fisub
jns
rcl
mov
inc
pushf
xor
xchg
daa
xor
cmps
or
mov
mov
out
sub
repnz
jae
inc
pop
arpl
sbb
in
cmp
out
int3
adc
aam
ins
mov
add
lock
cmps
and
scas
(bad)
pop
fadd
ret
dec
(bad)
mov
sbb
(bad)
pop
mov
popa
mov
ret
clc
outs
fs
enter
or
(bad)
in
adc
inc
jecxz
adc
inc
xchg
std
in
inc
mov
mov
mov
xlat
push
sbb
movs
jbe
pop
mov
repnz
add
bound
xchg
jne
out
shl
dec
out
push
pop
dec
das
nop
arpl
stc
dec
push
pop
(bad)
scas
jns
shl
jecxz
xchg
xor
xchg
add
sub
arpl
pop
lods
push
inc
int3
cld
cwde
outs
or
iret
and
xchg
clc
ds
jb
sbb
movs
loope
xchg
or
add
add
mov
pushf
sbb
dec
dec
aas
data16
xchg
mov
aam
xlat
xor
xchg
sub
dec
or
ss
mov
mov
inc
cmps
stc
add
cwde
aaa
cmp
lods
idiv
mov
xchg
xlat
xchg
mov
inc
jne
sub
movs
sub
cld
mov
pop
mov
ins
jl
stos
in
std
movs
or
and
bound
xor
jmp
jl
rcl
in
pop
inc
mov
pop
in
cmps
js
push
push
lahf
add
sbb
retf
fsubr
aad
cwde
pop
mov
cmp
push
stos
xchg
imul
gs
es
jns
out
inc
jno
ja
xor
and
and
(bad)
mov
jle
add
das
ds
and
out
mov
and
mov
nop
lods
aad
sbb
lock
jo
pop
out
sub
sbb
push
mov
pop
aad
pop
in
jo
loop
push
jae
cmps
fs
inc
movnti
sub
imul
xchg
mov
inc
pop
sub
ins
mov
fild
fld
ss
fxtract
add
test
push
cmp
int
mov
in
ret
call
xor
cmp
xor
push
test
sub
inc
jnp
fldenv
sbb
das
daa
out
push
inc
xchg
cmc
sbb
jbe
fbstp
dec
mov
into
sahf
shl
mov
clc
cmp
push
shl
pop
mov
xchg
mov
add
inc
shl
loop
cmp
add
pushf
ins
not
pop
push
nop
stos
test
mov
aaa
(bad)
aad
xlat
mov
mov
pop
stos
imul
loopne
jp
jecxz
fld
dec
jno
ss
mov
bound
scas
ret
pop
out
sub
imul
stos
inc
shl
ja
scas
arpl
stc
clc
addr16
aas
pop
pop
or
xor
jp
movs
les
js
jg
xor
shr
xlat
pop
lods
es
cld
sub
pop
pop
jmp
push
lea
sbb
and
or
pop
mov
pop
cmp
gs
pop
(bad)
(bad)
fldenv
and
dec
push
push
test
ds
mov
adc
adc
and
inc
jl
fld
pop
jnp
dec
pop
pop
in
data16
stos
inc
dec
je
xor
sbb
mov
pop
adc
push
imul
mov
mov
sahf
nop
adc
ds
mov
xor
pop
sub
(bad)
call
sub
retf
scas
push
mov
and
push
and
mov
dec
imul
ret
cs
push
mov
mov
mov
repnz
iret
xlat
mov
jb
jge
das
ja
out
cmps
test
call
xor
mov
ss
and
bound
dec
push
adc
movs
int
jbe
cli
cmc
call
loopne
adc
ins
daa
xchg
rcl
je
(bad)
cmp
hlt
fld
mov
dec
jb
or
mov
nop
xor
popa
jne
cs
dec
es
or
mov
xchg
xor
je
(bad)
push
add
add
jae
adc
pop
xchg
xor
inc
mov
iret
jno
movs
nop
push
iret
jle
out
ins
(bad)
es
dec
mov
adc
movs
shl
push
mov
mov
test
int3
mov
ficom
pop
pushf
and
mov
cmp
xor
arpl
repz
sahf
outs
test
push
inc
sbb
out
pop
in
retf
test
retf
shl
ja
loopne
and
push
mov
loopne
lods
xor
sbb
daa
aaa
xchg
sub
dec
pop
pop
push
cs
mul
or
(bad)
cs
dec
push
pop
in
push
cmc
xor
jl
call
jmp
add
mov
dec
cmps
out
popf
fld
cli
outs
adc
xchg
mov
adc
or
idiv
dec
ficomp
push
sub
imul
mov
sbb
sbb
jmp
dec
inc
or
mov
ror
mov
dec
add
test
call
mov
in
test
sahf
jp
pop
popf
push
sbb
and
xchg
push
loop
rol
xchg
arpl
scas
rcl
js
jb
push
jecxz
cmp
bound
mov
(bad)
dec
fld
(bad)
fmul
scas
shl
mov
nop
out
fbld
push
jge
loope
loop
les
push
add
add
out
push
stos
mov
jae
dec
test
test
loope
cwde
ds
cmp
xchg
loopne
cmp
xchg
cmp
mov
pop
loop
ins
in
sub
mov
shr
cmp
imul
jmp
lahf
and
jmp
pop
sub
lds
sbb
call
push
test
les
std
pusha
aad
cmp
retf
mov
ins
xor
jno
and
das
push
cmps
jne
iret
push
lock
xchg
jbe
inc
or
cdq
mov
sub
mov
inc
inc
test
pop
rcl
je
retf
(bad)
mov
xchg
push
and
pushf
call
push
dec
mov
and
fst
movs
or
(bad)
jne
adc
cmps
mov
inc
inc
dec
mov
sar
dec
ins
jo
mov
add
cmps
int3
mov
dec
dec
dec
sbb
sub
cmps
jmp
inc
jge
int
jge
push
mov
or
aaa
jb
mov
arpl
push
stos
aas
stos
adc
push
add
(bad)
cmp
pop
jbe
adc
out
mov
dec
shl
xchg
jo
jmp
xor
and
jg
adc
mov
pop
mov
neg
or
icebp
xor
jno
bound
mov
lods
jmp
cmp
sar
addr16
sti
out
pop
cmp
adc
xchg
dec
not
pop
xor
int
outs
ss
test
pop
and
js
call
xor
hlt
xor
mov
mov
shl
dec
jnp
call
push
jmp
js
iret
xor
dec
mov
hlt
sbb
ret
xchg
(bad)
xor
mov
lock
sahf
push
mov
pusha
pop
add
clc
push
xchg
adc
mov
inc
add
sub
jecxz
repnz
shl
(bad)
js
or
pop
sahf
stc
addr16
pushw
xor
mov
xchg
fcomp
xor
out
retf
aad
test
iret
and
sbb
push
mov
xor
cdq
sbb
test
rcr
call
fidivr
xor
mov
adc
push
ja
in
push
cmp
and
dec
inc
ss
test
xor
push
outs
out
push
jge
xor
xchg
xor
loop
push
mov
mov
mov
jb
push
cmps
sti
add
ret
shl
cmps
push
imul
pop
and
daa
cmp
jnp
je
mov
(bad)
dec
pusha
popa
movs
les
int
ret
fiadd
js
cmps
add
or
push
jmp
bound
outs
xchg
les
xchg
repnz
popa
pop
push
or
adc
push
mov
cmp
movs
cmp
xchg
fidiv
and
fstp
lea
and
dec
cmps
and
mov
or
popf
push
jecxz
sub
sub
test
pop
cmp
daa
fnstsw
fwait
sbb
mov
js
sbb
pop
mov
aaa
stc
inc
or
aad
mov
or
sbb
ss
jmp
jg
sbb
fwait
lahf
xchg
mov
out
mov
and
arpl
in
movs
outs
jae
imul
sub
std
xchg
shl
scas
cmp
ins
inc
push
pusha
push
(bad)
(bad)
loope
jle
xchg
rcr
das
mov
push
sub
shr
das
or
xor
add
loopne
and
hlt
mov
dec
and
clc
pop
mov
cs
fwait
add
ror
(bad)
adc
das
test
or
ds
outs
xor
mov
adc
or
adc
ja
test
enter
inc
xchg
or
dec
add
sbb
fdiv
ins
fsubr
mov
(bad)
adc
push
cmp
push
bound
imul
sbb
jno
enter
mov
es
and
inc
retf
jmp
aaa
(bad)
repnz
repz
rcl
test
inc
mov
inc
jnp
mov
push
inc
jno
cmp
cld
ins
dec
loop
pop
ret
dec
push
dec
nop
cmps
cmc
and
adc
movs
and
ss
pop
xor
dec
pop
stos
dec
lods
push
and
mov
in
data16
xor
cmp
popf
and
sti
mov
jp
mov
jns
(bad)
jne
stos
add
pushf
ins
sti
adc
test
cmps
pop
sbb
dec
(bad)
js
or
cmc
adc
pushf
mov
add
pop
stc
sub
lds
jne
cs
mov
aam
stos
add
mov
xor
loop
add
retf
inc
cmp
dec
mov
(bad)
ins
stc
inc
mov
iret
sbb
mov
or
aam
clc
push
cdq
test
ror
pop
(bad)
push
xor
int3
into
idiv
or
add
mov
pop
pop
jns
xor
aas
movs
mov
ss
mov
push
aaa
push
push
jp
add
mov
or
out
mov
test
mov
mov
cmp
ss
outs
inc
inc
mov
(bad)
and
pusha
pop
aas
es
ror
rcl
add
mov
inc
add
je
sub
mov
dec
jge
push
cmps
outs
xor
jle
packsswb
sub
mov
cmp
jge
fnstenv
and
ret
xchg
xchg
xchg
clc
ins
clc
test
outs
push
ret
sbb
jg
xchg
mov
mov
jno
adc
sbb
xor
push
into
cld
mov
push
pop
add
sti
xchg
hlt
(bad)
fimul
and
or
aad
mov
jg
hlt
(bad)
jb
and
push
jns
sti
inc
push
jge
adc
aas
loope
imul
or
or
ins
lds
and
stos
adc
mov
cmps
dec
loopne
push
sar
cli
das
cmps
addr16
jno
outs
movs
ror
jmp
adc
add
adc
gs
cmps
jns
push
(bad)
aad
push
out
mov
mov
adc
(bad)
ds
or
fdivr
cld
inc
xchg
ss
out
gs
str
aad
cmp
mov
clc
adc
add
dec
scas
(bad)
nop
mov
out
out
jae
mov
jbe
jecxz
inc
dec
mov
jbe
inc
or
test
mov
in
lods
inc
les
ja
mov
out
pusha
stos
mov
stos
movs
outs
js
clc
int3
xchg
adc
in
push
cmp
adc
mov
rcr
xchg
add
push
mov
mov
mov
fnsetpm(287
lods
out
sbb
daa
xchg
add
shl
hlt
cmp
jle
call
js
pop
outs
movs
sub
mov
push
xchg
dec
push
out
ds
test
dec
xchg
sbb
jbe
ret
mov
lods
dec
out
xchg
(bad)
inc
nop
dec
add
sub
and
xor
and
add
mov
lods
push
test
mov
mov
in
inc
adc
shl
sbb
into
mov
ds
mov
mov
mul
sub
ret
jb
mov
mov
movs
dec
push
addr16
sub
cdq
mov
xor
mov
push
dec
sub
jae
fiadd
loope
jecxz
stos
dec
(bad)
fsubr
sbb
mov
cwde
mov
sbb
(bad)
sbb
les
adc
lods
mov
adc
dec
mov
mov
std
dec
and
(bad)
jp
dec
int
dec
enter
xor
cmps
or
dec
sub
sbb
stc
and
dec
push
movs
xchg
pop
data16
mov
xchg
dec
pop
mov
mov
xchg
stos
xor
lahf
call
mov
adc
mov
aam
into
jns
push
in
popa
gs
sub
or
xchg
jne
(bad)
das
xchg
fwait
mov
xchg
jne
xchg
sub
(bad)
shl
jmp
and
outs
add
(bad)
in
and
(bad)
push
(bad)
mov
stc
mov
sub
(bad)
pop
mov
out
dec
sbb
push
sahf
leave
aad
cmps
fistp
ffreep
sbb
jmp
das
cmp
add
pop
xchg
lds
push
mov
jg
xor
pop
cmp
cmps
sub
popa
add
ds
cmp
pop
sbb
repz
inc
pushf
fmul
cmc
sub
out
ret
outs
push
push
fld
lods
popf
sbb
xchg
push
sbb
cld
stos
fs
imul
pusha
jl
movs
mov
call
cli
adc
dec
inc
push
push
rol
call
imul
pusha
xchg
rcr
push
jge
js
mov
arpl
ss
push
fstp
push
repz
fstp
add
and
cwde
mov
cmc
nop
mov
or
cmp
xor
ret
and
adc
test
cmp
in
hlt
inc
pop
sti
test
jbe
dec
in
mov
mov
gs
fmul
ins
shl
ja
lds
sbb
gs
mov
pusha
xor
sbb
mov
pusha
mov
pop
stc
movs
cwde
dec
jnp
mov
jo
pop
xchg
(bad)
retf
inc
or
sub
dec
add
mov
and
je
pop
adc
arpl
cmps
mov
mov
jbe
and
movs
sbb
aas
fsubp
std
daa
xor
add
clc
(bad)
cld
(bad)
in
inc
and
dec
mov
fcom
fs
adc
jl
leave
and
xchg
xor
pop
cmp
fsubrp
rol
test
test
add
lock
adc
or
mov
sbb
cmp
pop
repz
aaa
pop
lea
pop
cdq
arpl
dec
call
fsubr
cwde
movs
pop
loopne
xchg
dec
sbb
sti
dec
in
inc
push
repz
outs
int
sbb
bound
cmp
popa
pushf
retf
ds
sub
stos
add
scas
xor
pop
call
movs
pop
jnp
add
lods
add
fdivr
lock
adc
sahf
pop
mov
cmp
dec
iret
in
jecxz
cs
(bad)
jmp
loope
or
xor
add
jecxz
jl
xchg
add
cmp
fdivr
clc
imul
or
sub
jmp
sbb
ins
loope
pop
daa
add
(bad)
cld
jmp
test
lods
mov
xor
imul
sti
call
(bad)
(bad)
sub
es
repnz
mov
xchg
dec
std
bound
xchg
out
xor
retf
inc
inc
int3
mov
xor
inc
add
jecxz
(bad)
xor
jnp
mov
ror
inc
call
rcr
fild
pop
fistp
call
pop
pop
iret
aaa
ror
gs
dec
push
test
sub
or
sub
into
add
das
push
add
leave
xchg
mov
arpl
nop
push
rcl
cwde
inc
pop
mov
pusha
mov
xchg
xchg
ins
mov
test
(bad)
jl
mul
not
jno
push
jne
push
dec
or
pop
lock
call
add
js
int
or
pop
in
cmp
adc
sti
or
int3
test
xchg
dec
push
xchg
push
fs
sub
mov
imul
pushf
sub
pop
push
jns
xor
xchg
loope
mov
cmps
stos
pushf
sub
and
in
psrad
les
xor
inc
movs
xchg
ins
cmp
ja
mov
jb
fld
sahf
and
mov
cmp
jle
int3
into
rol
sub
cmp
mov
hlt
and
lea
fdivr
fbstp
cmc
pop
or
mov
sbb
dec
aad
add
dec
mov
push
mov
scas
daa
push
cmp
test
xchg
ret
les
ins
cmp
cwde
dec
sbb
fwait
pop
jp
cmp
dec
shr
xor
and
mov
out
mov
xchg
mov
dec
iret
dec
das
and
mov
push
loop
or
dec
cs
push
nop
xchg
sar
ficom
xor
(bad)
jb
mov
pushf
jo
stos
jecxz
inc
xor
and
or
and
lea
push
inc
and
sbb
out
loopne
repz
xor
adc
cs
daa
aad
std
aad
mov
pop
icebp
icebp
mov
aam
clc
lods
call
std
scas
mov
ds
xor
idiv
jno
pop
(bad)
sti
test
fnstenv
(bad)
movs
scas
mov
add
dec
and
outs
push
outs
bound
adc
scas
outs
aam
add
movs
inc
mov
(bad)
sbb
mov
les
adc
cmp
jbe
ins
xchg
lahf
stc
jmp
xor
cmp
jb
cmp
adc
popa
enter
dec
inc
(bad)
movs
sti
cld
cwde
xchg
mov
push
sar
push
sbb
mov
fld
aam
mov
push
inc
call
ins
ins
add
mov
and
inc
cmc
pusha
stos
fsubrp
jb
dec
js
mov
xchg
pop
je
fwait
sub
jl
ins
fisttp
mov
imul
sub
dec
jmp
or
push
sbb
je
sub
retf
dec
jo
and
fsubr
pop
cmp
adc
mov
into
push
mov
out
fistp
sbb
cmp
out
and
and
jb
stos
xchg
retf
cmp
or
sbb
dec
repnz
push
xchg
fucomi
jp
movs
cmp
addr16
fiadd
jle
dec
mov
mov
ss
pop
int
bound
or
std
test
sbb
push
scas
idiv
cmps
sbb
or
mov
add
cmp
sbb
adc
jbe
shl
or
pop
sub
enter
mov
test
sbb
adc
and
pop
icebp
mov
sub
cmp
pop
and
dec
xchg
mov
xor
sbb
sar
push
in
jmp
popa
scas
mov
adc
hlt
daa
(bad)
pop
sbb
popa
mov
push
dec
repz
jo
fxtract
mov
retf
inc
ret
inc
cmp
lea
xchg
mov
push
sbb
sbb
out
imul
movs
mov
or
pusha
gs
dec
loopne
xchg
pop
add
mov
sbb
imul
rol
add
test
out
ret
loopne
shr
xor
or
cmp
jne
idiv
xchg
stos
jg
stos
icebp
jmp
pushf
enter
jmp
pop
adc
adc
inc
mov
mov
push
aam
mov
fld
pushf
icebp
mov
cmps
cmps
jmp
lea
ret
dec
push
mov
cmps
jbe
les
inc
cmc
adc
bound
mov
clc
hlt
inc
fs
stos
gs
pop
and
xor
jge
jo
shl
shr
in
fild
fwait
add
test
fmul
and
jno
mov
xchg
sbb
scas
std
jle
dec
and
or
push
xchg
xor
je
cmp
mov
popf
lds
pop
out
fisttp
xor
push
ins
mov
inc
int3
aas
mov
rol
imul
push
out
leave
xchg
js
push
push
xor
movs
xor
jecxz
pop
cld
sub
scas
shl
lea
iret
sub
mov
add
and
xor
leave
das
cld
pop
mov
loope
inc
jb
inc
sahf
not
fwait
mov
sbb
xor
lods
pop
add
cld
adc
sub
js
in
mov
mov
push
mov
pop
lods
dec
sahf
lods
xor
iret
jo
xor
popf
fcom
imul
cmps
test
mov
loope
int3
mov
sub
pop
pop
jnp
xor
pop
adc
add
fisub
das
xor
add
nop
xor
out
add
popa
and
cs
mov
adc
push
(bad)
imul
in
jno
sbb
or
scas
push
or
ror
dec
out
inc
mov
ret
jnp
(bad)
dec
jle
inc
call
xchg
sbb
mov
or
mov
push
cmp
push
push
(bad)
adc
or
cli
(bad)
ds
repz
gs
add
push
dec
aam
mov
mov
push
xor
push
mov
cli
imul
js
xchg
retf
out
xor
stos
jne
dec
jnp
mov
sub
inc
movs
sbb
test
shr
stos
jmp
psubd
lahf
ja
cwde
rcr
push
sbb
ins
dec
push
lea
sti
ds
lods
pop
test
repz
mov
mov
cmp
mov
mov
jmp
rcl
sub
pop
inc
mov
push
lods
ss
mov
sbb
cmp
dec
sub
sahf
mov
fs
inc
pop
jo
jp
mov
jne
fwait
gs
fld
popf
mov
or
repz
mov
mov
rol
xchg
jmp
inc
inc
mov
or
mov
mov
pop
mov
jmp
cli
adc
scas
ins
sbb
fcomp
mov
jae
fs
retf
push
sbb
inc
dec
int3
sti
jbe
add
cmp
pop
hlt
mov
fs
mov
dec
sbb
call
fstp
sub
es
push
xchg
dec
adc
fisttp
xchg
xor
je
pop
aas
in
sbb
push
jno
mov
cmps
pop
fwait
lahf
jae
xchg
pop
adc
adc
mov
retf
in
cmp
scas
push
outs
xchg
leave
adc
cmp
enter
fiadd
xchg
pop
les
fidivr
mov
sbb
call
outs
in
ficom
sub
mov
xchg
aad
cmp
in
ds
mov
xor
mov
sti
mov
mov
(bad)
adc
(bad)
dec
test
icebp
adc
mov
jmp
iret
ins
in
cmp
test
jecxz
mov
adc
mov
jge
cdq
lods
pop
pop
rol
ss
and
lock
in
stos
jge
adc
in
movs
and
and
mov
sbb
and
dec
jp
call
xchg
mov
inc
ror
je
dec
mov
or
and
sub
stos
in
sbb
push
fidivr
cmp
sub
fdivr
push
cmp
push
aas
outs
icebp
(bad)
sub
sbb
sbb
inc
push
dec
mov
adc
das
push
int
inc
add
adc
mul
and
rep
dec
xor
xchg
cmp
push
jae
sbb
out
cmp
adc
push
push
or
cmp
dec
cdq
lea
add
and
loope
(bad)
or
mov
xchg
xor
dec
ror
mov
retf
sar
in
cwde
and
(bad)
clc
jne
jp
ds
fwait
ins
or
ds
lock
popa
pop
mov
push
push
adc
sbb
jle
jnp
aad
push
sahf
push
cli
and
xchg
scas
ds
adc
inc
ror
out
(bad)
fwait
popf
(bad)
push
icebp
idiv
lds
in
stos
call
pusha
das
pop
jb
adc
dec
rcl
xchg
cmc
mov
(bad)
das
add
add
pop
leave
add
push
or
mov
xchg
xor
xchg
aam
inc
cwde
scas
fld
pushf
into
and
inc
push
mov
inc
ret
adc
nop
dec
adc
hlt
inc
adc
repz
sub
push
lods
xchg
or
xchg
(bad)
push
dec
sub
mov
add
shl
test
cmps
retf
cmp
jl
push
xor
(bad)
sbb
sahf
adc
sbb
push
cmp
test
xor
xchg
cdq
inc
rol
jnp
jg
out
mov
test
call
mov
adc
mov
into
pop
mov
outs
enter
jmp
xor
icebp
dec
je
push
mov
jmp
in
dec
test
cmp
call
call
push
and
dec
lods
lds
int3
test
mov
cmps
pop
imul
and
mov
leave
jge
adc
mov
push
fadd
mov
add
ret
sbb
sbb
iret
aam
xchg
mov
mov
or
das
xor
pop
push
daa
xor
outs
fld
jg
dec
or
pop
mov
stc
js
sbb
out
jo
pop
or
pushf
xor
xor
pushf
cs
lods
cmc
dec
test
mov
add
or
jne
or
dec
cmc
push
js
fadd
push
pusha
xor
aad
mov
and
(bad)
sub
xchg
imul
psraw
sub
jns
jg
cdq
jg
mov
movs
add
adc
mov
ret
inc
dec
sub
cmp
xchg
int3
stos
sbb
nop
and
jge
out
fsubrp
stc
fwait
cmps
fwait
sub
rcl
imul
dec
jmp
xrelease
push
inc
in
xlat
mov
or
mov
out
imul
or
mov
scas
inc
or
(bad)
out
scas
adc
pop
bound
push
fist
lds
mov
inc
adc
add
stos
je
out
pusha
sbb
loop
cs
jecxz
push
pop
inc
clc
in
add
pop
(bad)
int3
iret
xlat
inc
push
xor
das
fidiv
lahf
(bad)
jno
and
mov
rcr
scas
fst
es
sbb
adc
aam
dec
push
sar
addps
or
sar
xchg
popf
and
test
cmp
into
sub
xchg
or
jb
inc
mov
enter
jg
mov
in
fwait
clc
pop
(bad)
xchg
xchg
dec
or
dec
jle
mov
jg
out
(bad)
in
mov
mov
movs
mov
jl
les
inc
mov
xchg
push
and
or
xchg
or
scas
push
add
xchg
icebp
mov
jmp
jne
jge
call
inc
ds
pop
push
mov
push
xor
enter
lock
imul
add
call
or
sub
fs
add
xor
sub
std
bound
xor
aas
add
cmp
ret
push
pop
jle
popa
popf
xor
repnz
push
cli
clc
or
shl
xor
add
shl
inc
xor
push
cmp
jle
mov
inc
cmp
retf
and
in
sub
stos
sar
lock
fst
test
or
aad
sahf
rcl
jp
push
mov
adc
ret
sub
stos
pop
sub
daa
mov
sub
cmp
mov
pop
sub
pop
les
mov
xchg
pop
sub
and
ret
je
xor
add
inc
adc
xchg
test
lds
and
mov
in
and
jo
enter
xchg
shl
sub
popf
push
movs
fwait
pop
sub
inc
pop
push
cmp
jmp
add
inc
rcr
icebp
das
rol
xor
push
mov
(bad)
adc
loope
or
push
neg
icebp
shl
mov
or
aam
cmc
es
sbb
pop
sub
iret
out
je
mov
ret
sti
es
or
cmp
lds
add
test
jl
test
hlt
mov
popf
js
jecxz
jecxz
jmp
je
xor
jle
test
push
movs
or
out
pop
push
mov
sub
jbe
push
pop
in
or
loop
mov
jo
out
lahf
adc
icebp
sbb
cli
(bad)
ins
aam
add
loopne
sbb
and
std
and
dec
test
ds
xor
add
or
push
pop
xor
sbb
xchg
jno
popf
jmp
xchg
fadd
dec
mov
jnp
loopne
lds
or
xchg
or
clc
xlat
sar
cld
mov
xlat
fimul
jle
cmp
dec
daa
repz
push
and
(bad)
mov
pop
enter
mov
ror
add
fld
shr
push
and
je
bound
xor
mov
rdtsc
add
jecxz
les
shl
and
iret
(bad)
lea
fisttp
mov
test
pop
mov
shr
mov
dec
movs
movs
mov
push
es
cli
dec
and
jnp
inc
or
es
retf
popa
outs
mov
adc
call
mul
idiv
sub
cmp
jl
push
dec
mov
inc
mov
cmp
jmp
test
pop
loope
movs
ss
or
imul
fsubr
jb
adc
mov
or
jg
jae
and
push
rol
xchg
(bad)
sub
mov
dec
inc
fist
lods
loop
loop
in
pop
call
sbb
jb
into
cmc
push
js
iret
cmp
adc
cmp
aad
adc
in
mov
sub
les
cmp
jbe
icebp
mov
push
xchg
mov
(bad)
mov
scas
arpl
inc
popw
test
jl
lock
and
sbb
stos
cmps
or
test
cwde
ss
pop
push
mov
in
stos
mov
int
mov
dec
jns
movs
repnz
call
addr16
aam
dec
loopne
int
or
in
adc
call
ss
lahf
sbb
hlt
inc
mov
ret
cmp
sti
or
mov
jecxz
inc
sbb
push
sahf
cmp
outs
push
inc
jnp
adc
iret
movs
outs
mov
shl
nop
jne
popa
iret
outs
out
add
xchg
xor
scas
(bad)
fdiv
push
push
mov
cld
mov
push
hlt
jge
call
lahf
push
sti
xchg
xor
jns
popf
call
jbe
movs
prefetch
dec
sbb
pop
vxorpd
xchg
bound
pop
adc
int3
jb
movs
scas
rcl
out
lods
fwait
pop
and
sbb
xchg
std
(bad)
fdivr
scas
add
or
arpl
out
mov
xchg
std
cmp
xchg
in
push
mov
movs
jae
hlt
or
sub
popf
sub
dec
movs
or
adc
jp
not
mov
cmp
jns
scas
xor
inc
clc
call
cmp
jmp
jge
push
xchg
pushf
or
mov
jne
call
xchg
retf
repnz
push
pop
cmp
xchg
popa
dec
inc
(bad)
in
push
sub
push
xor
jae
jmp
sbb
mov
cdq
jmp
mov
sar
and
popf
push
loopne
jo
arpl
adc
iret
mov
sbb
push
in
push
ds
cmps
rcl
xor
cmp
outs
movs
inc
inc
movs
dec
inc
xchg
jmp
(bad)
xor
addr16
or
adc
daa
push
push
out
fwait
inc
and
adc
outs
xor
sbb
hlt
cdq
sbb
pop
arpl
and
jecxz
mov
fadd
adc
(bad)
das
cmps
or
dec
test
addr16
xor
fadd
mov
xor
lds
ins
imul
pusha
retf
(bad)
dec
test
jo
dec
push
(bad)
addr16
aam
inc
cmps
jp
out
mov
cwde
inc
int3
popf
in
jbe
push
mov
out
das
aas
jns
test
sub
mov
cmp
xchg
sar
ins
push
mov
fs
sbb
xor
loope
sub
loope
pop
aaa
xchg
mov
ret
mov
out
pop
out
pop
jmp
(bad)
dec
in
pushf
sub
test
mov
xchg
cmp
ins
mov
mov
loop
cli
je
cmp
das
cld
mov
mov
popf
adc
push
inc
dec
pop
imul
aas
(bad)
lds
nop
cli
pop
ss
mov
jp
ss
enter
mov
popa
sahf
nop
sub
pop
xchg
ins
sub
fucomi
and
dec
jae
pushf
sub
gs
std
dec
frstor
in
ret
in
fdiv
(bad)
sub
jl
push
jg
and
mov
push
xor
mov
outs
push
lods
mov
(bad)
cmp
xchg
and
dec
fidiv
mov
aam
mov
mov
push
(bad)
jmp
mov
or
push
loope
div
bsr
dec
dec
dec
mov
pop
stos
out
mov
movs
or
movs
cld
mov
inc
rep
sbb
or
mov
sbb
mov
add
stc
push
sbb
rcl
addr16
rol
ins
ret
fisubr
sbb
fmul
mov
mov
aaa
push
mov
or
gs
sar
jnp
daa
pusha
pop
push
cmps
or
movs
out
xchg
popf
outs
mov
xor
dec
loop
xor
sbb
fdiv
jb
cmp
dec
ret
and
adc
fist
xchg
or
out
leave
cmp
fmul
stos
add
xor
xchg
and
stos
mov
movs
movs
test
mov
cs
adc
add
and
jg
(bad)
aad
sahf
pop
ins
jb
fsub
(bad)
sub
ret
loop
xor
xor
dec
loope
dec
xchg
mov
scas
dec
in
popa
cmp
retf
movs
ret
inc
and
(bad)
sbb
and
push
xor
pop
and
retf
retf
cmc
jmp
adc
xor
inc
adc
jg
add
mov
cmp
dec
sbb
cmp
cmc
test
jg
xchg
lea
inc
add
and
stos
das
jl
test
sub
rcr
fist
das
cmps
es
in
xor
outs
mov
sar
in
jmp
stos
mov
les
xor
dec
daa
pop
mov
fldcw
loopne
in
or
outs
cwde
sahf
cmps
fisttp
sbb
dec
rcl
bound
and
push
mov
mov
shl
xchg
gs
jb
(bad)
fadd
leave
jbe
(bad)
sar
adc
(bad)
fisttp
cmp
jo
sar
or
push
push
les
aad
fldz
(bad)
mov
mov
inc
inc
mov
mov
xchg
(bad)
out
lahf
sbb
mov
ja
pop
push
cmps
add
(bad)
sub
dec
ds
cmp
fadd
or
jecxz
inc
inc
enter
stos
inc
pop
jmp
jne
mov
fwait
xchg
sti
das
push
sub
fdiv
mov
jae
aas
ret
sahf
xchg
icebp
and
dec
dec
adc
out
sbb
cmp
(bad)
mov
aas
mov
cs
mov
retf
fsubr
jbe
loope
mov
addr16
mov
jno
mov
sub
test
sub
pop
xchg
mov
mov
sar
and
add
dec
in
(bad)
lods
(bad)
into
repz
add
je
xor
in
test
cmp
das
or
imul
push
cmps
fidiv
and
hlt
jo
into
jno
push
mov
je
test
aas
stos
mov
in
jge
cmp
cmps
push
pop
rol
sbb
xchg
fstp
int3
add
add
ror
sahf
cmp
cmp
mov
lods
mov
lahf
loope
out
dec
xchg
and
add
(bad)
mov
push
cmp
scas
dec
loop
inc
and
add
xchg
aaa
out
cmp
push
xor
stos
out
popa
or
xor
retf
ins
ds
jmp
inc
loopne
in
sbb
sbb
jae
retf
lds
into
inc
and
popa
sti
mov
and
rcr
addr16
test
mov
dec
(bad)
push
loopne
test
sub
mov
lock
jo
mov
jne
pop
xchg
fcomp
cmp
inc
lods
std
iret
jns
mov
mov
xor
or
and
pop
add
je
subps
call
(bad)
mov
call
mov
lock
icebp
aam
int3
sbb
and
jmp
dec
ss
fcmovb
in
aas
sub
sub
repnz
jbe
xchg
xor
pop
and
sub
movs
int3
fld
dec
in
push
sbb
shl
dec
test
and
out
sbb
or
cmp
and
mov
pop
ret
sbb
daa
jmp
lods
mov
cmps
dec
(bad)
jmp
cwde
pop
add
(bad)
fimul
mov
sahf
int3
and
xchg
ins
sub
push
push
mov
mov
cmp
aad
cmps
adc
mov
mov
inc
jge
push
push
sar
je
clc
pop
scas
in
jmp
mov
arpl
mov
test
loopne
test
inc
adc
sub
or
int
add
icebp
add
lahf
sar
lahf
mov
loope
cs
mov
dec
mov
shl
adc
cmps
test
cmp
aaa
inc
rcr
sub
enter
mov
in
add
mov
cmp
xchg
fidivr
push
fnstenv
add
jnp
repz
push
cmp
shl
push
dec
daa
in
jns
mov
test
or
test
or
inc
mov
add
mov
adc
ins
jo
das
out
push
mov
pop
jno
enter
dec
mov
pop
addr16
xor
(bad)
xchg
test
xor
xor
sub
mov
or
adc
mov
scas
mov
rcl
shr
in
sti
mov
mov
pop
icebp
lea
dec
jo
xchg
xchg
ffreep
mov
sub
ja
test
push
lods
leave
mov
aam
call
scas
dec
jns
inc
xchg
fisub
jnp
out
mov
ror
mov
call
adc
pusha
movs
mov
or
gs
inc
dec
or
cmps
mov
arpl
dec
jmp
mov
rcl
mov
stos
mov
jmp
mov
test
fbstp
stc
xlat
outs
lea
lahf
add
dec
dec
fs
pop
jp
fistp
adc
(bad)
xchg
in
lods
push
add
ret
pop
aam
jnp
(bad)
and
lahf
lods
adc
adc
out
outs
adc
(bad)
pop
sbb
popf
jecxz
sbb
int3
mov
imul
jg
ds
lods
and
mov
xor
push
imul
in
lock
or
stos
pop
sub
lock
mov
mov
fwait
jbe
mov
stos
test
and
push
mov
out
lods
mov
add
and
and
lds
cmp
pop
mov
pop
adc
push
or
rol
jo
jmp
pop
scas
(bad)
mov
out
jnp
int
test
sbb
jnp
inc
dec
loopne
push
or
sub
and
add
pop
das
clc
rcl
cli
pop
xchg
sub
xchg
js
pop
imul
popf
das
fcmovne
mov
mov
mov
ja
mov
mov
adc
pop
cmp
push
mov
pop
scas
jecxz
mov
pop
mov
(bad)
pop
aam
dec
test
aam
adc
sub
lock
dec
dec
xchg
xlat
mov
push
cmovae
pop
mov
dec
pusha
cwde
jg
inc
mov
and
or
xor
xor
mov
fcom
cmp
cwde
mov
retf
cdq
mov
lahf
inc
leave
push
(bad)
fldenv
sbb
adc
mov
pop
mov
cld
adc
dec
in
fs
mov
fcmove
adc
popf
mov
jns
shr
cmp
sub
dec
js
cwde
sbb
outs
mov
fidiv
cli
arpl
and
mov
dec
pop
cld
xchg
jne
test
ficom
aaa
ja
sbb
xchg
sub
and
cmps
leave
fs
arpl
rcl
and
sub
xor
jno
mov
pushf
jge
add
sbb
cwde
pop
xor
loopne
mov
fsub
xchg
pushf
ins
leave
in
xchg
xor
out
xchg
cmp
je
adc
rcl
loopne
mov
repnz
cdq
hlt
idiv
add
sbb
xchg
push
shl
jo
xor
shl
loopne
daa
in
popf
mov
sub
add
test
fs
mov
sbb
sbb
ret
in
mov
and
into
sbb
enter
in
hlt
and
cs
stos
div
daa
sub
scas
shr
xchg
dec
sub
mov
lods
test
ja
fwait
sub
mov
jmp
jp
mov
retf
enter
mov
lods
rol
out
ins
or
jmp
push
out
sub
xchg
call
push
arpl
xor
fsub
mov
xchg
sar
cmp
into
nop
push
mov
test
mov
enter
sub
pusha
jbe
pop
pxor
push
(bad)
or
(bad)
and
(bad)
push
mov
xor
add
call
mov
jmp
sub
or
jno
mov
sub
aas
fcmovnbe
dec
dec
and
or
push
sbb
jae
mov
repnz
inc
push
aas
les
xchg
inc
cmp
jbe
mov
lods
mov
pop
xchg
fcom
out
sub
mov
lods
mov
cwde
push
push
cmp
cmc
shl
push
sahf
jle
inc
shl
out
fnstsw
push
ret
jns
adc
dec
and
aaa
fcom
sub
mov
fdivr
cmc
push
into
adc
mov
outs
or
dec
xchg
(bad)
pop
stos
jge
pop
jmp
cmc
sbb
out
call
lods
pop
sbb
sub
jno
imul
mov
or
pop
icebp
pop
adc
js
ss
nop
adc
push
and
sbb
in
add
popa
fsin
push
push
xor
sbb
fs
aaa
sub
mov
xchg
fisub
fldcw
ins
cmps
adc
push
call
jmp
sbb
dec
ret
in
push
idiv
ja
add
clc
mov
in
icebp
pop
ficomp
nop
xchg
enter
fld
add
imul
add
scas
cmp
rol
xchg
stos
div
dec
cmp
dec
push
pop
aam
xor
cmps
loope
clc
push
dec
pop
in
es
div
and
mov
hlt
or
aaa
call
ins
dec
push
rol
stos
sbb
gs
sar
lea
sub
inc
xchg
mov
dec
popa
sub
inc
sbb
push
hlt
fistp
inc
jb
dec
mov
loope
lods
into
jb
les
and
cmp
movs
lock
in
int3
add
icebp
mov
cld
pop
out
pop
mov
pop
and
mov
fsubrp
bound
js
inc
in
sub
in
jne
sar
ins
dec
inc
mov
xchg
sbb
test
and
pop
pop
mov
pop
out
pop
outs
jb
xor
cld
movs
fiadd
jne
int3
in
(bad)
inc
pusha
pusha
sub
adc
pop
fadd
dec
(bad)
dec
hlt
mov
adc
push
cli
cwde
pop
ins
fild
(bad)
(bad)
jle
sub
aam
push
mov
dec
fs
inc
leave
in
mov
adc
sahf
in
sub
xor
clc
dec
inc
ins
xor
(bad)
sbb
bound
adc
add
mov
int
sbb
addr16
or
fnsave
out
int3
cmp
cmps
jnp
inc
lods
gs
dec
sub
or
sub
enter
push
enter
mov
std
(bad)
push
lahf
adc
xor
jge
dec
inc
aad
sbb
push
xor
adc
mov
rcl
fnstsw
(bad)
call
fst
popa
je
mov
sahf
(bad)
mov
js
xchg
ror
addr16
(bad)
movzx
or
out
or
or
in
bnd
out
repz
cli
xchg
mov
inc
into
push
sbb
sbb
pop
ins
mov
repz
or
sbb
jo
test
stos
cli
ja
xor
imul
sbb
cli
cs
add
arpl
ins
jb
stos
(bad)
sar
or
enter
xor
add
push
pop
and
bound
int
in
pop
clc
mov
jmp
mov
dec
mov
add
in
in
dec
sbb
mov
dec
or
(bad)
sti
cmp
jl
adc
mov
and
cmp
mov
gs
jb
push
cwde
mov
push
retf
push
jecxz
test
psllq
movs
sub
pushf
adc
scas
std
pop
push
sbb
mov
addr16
and
das
jle
adc
dec
lods
xlat
sbb
ins
ss
add
fwait
xlat
mov
pop
jmp
sub
xor
pop
stc
sbb
aam
sbb
add
and
popa
xor
push
push
jle
cmp
push
aad
push
retf
jge
(bad)
inc
pop
rcr
popf
mov
push
loop
neg
shr
add
jne
jge
dec
outs
push
aad
mov
mov
mov
sub
imul
retf
and
mov
inc
jnp
mov
push
jae
adc
sar
jp
jge
int3
dec
fadd
mov
and
xchg
out
xor
and
cmc
stos
mov
jle
out
add
mov
dec
shl
cld
mov
nop
dec
xchg
(bad)
jg
mov
xchg
add
imul
cmp
push
mov
or
sub
out
jp
mov
pop
adc
jg
mov
sub
push
jg
xor
xchg
out
lock
push
xchg
inc
fcmovnb
add
movs
adc
adc
push
pop
cdq
(bad)
ja
jb
scas
jb
add
push
inc
test
dec
xchg
out
push
imul
and
out
mov
std
push
ficom
lahf
lock
dec
mov
lea
mov
adc
ins
pop
mov
cmp
cdq
gs
xlat
(bad)
sub
cmps
pop
pop
xchg
xor
les
cwde
enter
dec
mov
(bad)
ja
mov
xchg
add
inc
dec
pushf
stos
pop
js
jmp
(bad)
mov
sub
mov
mov
jbe
arpl
push
aaa
or
aad
gs
aad
mov
sub
call
fidivr
mov
es
lods
inc
cmps
test
leave
cmp
fisubr
dec
and
mov
pop
call
es
add
mov
or
iret
shr
lods
jns
fadd
pop
dec
mov
mov
mov
iret
pop
cs
or
adc
xor
popa
stos
add
jbe
test
scas
call
cmps
push
loope
and
loop
and
retf
sahf
inc
pusha
xchg
aas
mov
cdq
mov
loope
aas
cmp
daa
xor
cs
repnz
and
cs
bound
sub
add
jo
and
jno
pop
fwait
sti
pop
fist
mov
lds
loop
out
mov
pop
loope
imul
sbb
push
jnp
pop
jl
sub
sbb
mov
and
out
mov
jno
stc
ror
or
mov
xlat
pop
into
or
dec
jl
fwait
aam
jnp
mov
and
rol
bnd
movs
mov
ds
jns
lods
ret
jmp
lock
hlt
(bad)
fcomp
stos
and
(bad)
sar
cmp
xchg
mov
jae
jge
mov
or
dec
and
aad
jge
cmp
adc
add
outs
push
dec
imul
and
jge
and
jae
pop
sbb
adc
mov
in
popa
int3
addr16
std
lds
leave
fs
mov
adc
push
or
pop
pop
mov
into
inc
fdiv
aam
(bad)
adc
loop
inc
out
jne
int
cmp
cmp
mov
imul
scas
ret
cdq
push
in
fwait
mov
add
dec
push
js
push
cmc
pop
sti
(bad)
xchg
or
pop
gs
clc
out
arpl
fmul
imul
in
add
ret
push
push
je
dec
ror
adc
and
xor
or
xor
mov
xchg
retf
mov
jae
adc
stc
les
dec
jmp
ja
sbb
lea
repz
in
sbb
jl
push
mov
push
outs
loop
pop
xor
fisttp
rcr
(bad)
fild
xchg
pop
stos
stos
mov
ret
ss
and
aas
pop
test
or
push
jbe
ds
mov
jecxz
lods
lahf
dec
adc
shl
stc
out
test
mov
jmp
sar
(bad)
in
cmp
sar
inc
push
push
sub
out
pusha
inc
cmp
push
dec
push
into
rcr
xchg
fistp
shl
es
or
mov
xchg
stos
xor
or
cmp
dec
test
xchg
movs
xor
stc
fwait
jl
test
jp
add
loope
mov
adc
test
shr
pop
(bad)
xchg
pop
and
xor
adc
sbb
jb
and
loopne
fs
add
(bad)
mov
jmp
clc
fild
vucomiss
repz
ins
or
xchg
xchg
lds
push
inc
cmp
xchg
lea
ret
and
mul
sub
repz
jmp
xor
(bad)
and
(bad)
jmp
xlat
mov
push
mov
fcomp
sub
int3
mov
jmp
pop
jnp
mov
pusha
push
fstp
retf
fst
gs
mov
mov
adc
jns
and
imul
xchg
xor
xchg
jecxz
or
push
cmp
cmp
in
mov
push
jecxz
sbb
pop
sahf
jns
ffree
imul
cmp
add
out
stc
ret
int3
push
mov
adc
mov
repnz
xor
inc
xchg
cmp
(bad)
or
mov
shl
add
jmp
stos
sbb
bound
jge
inc
pop
xlat
lahf
ins
jl
adc
sbb
xchg
push
mov
xor
popa
sbb
cli
inc
fnstcw
rcr
aaa
add
ss
int
cmp
sbb
scas
rol
int
xchg
pop
ins
pop
aas
(bad)
jne
xchg
retf
jno
fld
test
into
cdq
int3
ret
xchg
jmp
jge
sub
pop
sub
jb
add
rcl
fistp
mov
(bad)
imul
repnz
xchg
pop
add
mov
hlt
push
ja
mov
add
and
iret
outs
sub
and
imul
and
and
jl
ss
jmp
push
into
xchg
sbb
jno
cmp
std
dec
jp
xchg
hlt
stc
xchg
cmps
dec
das
or
adc
scas
jnp
jecxz
aad
jmp
mov
punpckhbw
icebp
xor
or
lahf
ret
or
mov
mov
call
sahf
out
pushf
mov
sbb
mov
loop
or
fild
ret
(bad)
or
cld
test
sub
pop
ja
add
jbe
adc
int
and
ds
cwde
mov
inc
push
mov
inc
jae
test
into
push
(bad)
lods
push
mov
jns
xchg
mov
std
xchg
push
fidivr
outs
mov
pushf
scas
inc
enter
ret
jae
inc
rol
scas
cmp
adc
arpl
in
xor
jo
sub
xchg
idiv
movs
sbb
loop
and
rol
cmp
push
aas
xchg
dec
das
iret
les
sbb
pop
out
(bad)
pop
cmps
mov
(bad)
and
and
mov
push
jmp
xor
xchg
rcl
rol
push
push
sub
xlat
jb
jp
jg
jge
mov
push
xlat
mov
test
pop
fiadd
push
jmp
int
leave
ja
repnz
jnp
fs
pop
stos
outs
stc
mov
and
sbb
pop
sbb
adc
iret
fild
mov
jp
test
mov
sub
adc
sbb
cmps
ret
icebp
hlt
inc
pop
cmc
loope
popf
imul
mov
(bad)
cmps
ret
mov
xchg
ror
fisubr
sub
(bad)
jns
push
aad
imul
and
sub
add
call
or
mov
mov
xchg
std
jae
inc
call
add
mov
movs
mov
mov
stos
(bad)
xchg
adc
cli
inc
mov
test
popf
loopne
jmp
mov
add
push
fsubr
aas
stc
pop
jo
mov
add
outs
lods
ins
ja
add
in
pop
xchg
pop
push
cmp
dec
or
adc
pop
jns
pop
mov
(bad)
mov
push
cmps
adc
cmp
xchg
dec
(bad)
cs
rol
cmp
push
mov
pop
and
and
data16
sub
inc
jo
adc
inc
or
jbe
or
jns
cdq
and
xor
call
mov
call
mov
mov
and
iret
in
pop
(bad)
dec
clc
xlat
movs
shr
hlt
xor
stos
repz
scas
int
hlt
lea
mov
test
xchg
sbb
pop
inc
mov
daa
adc
shl
sti
scas
or
test
(bad)
sti
daa
xchg
fnsave
hlt
fisub
call
xlat
mov
js
jo
sub
push
lock
sbb
test
sbb
lahf
arpl
push
das
int3
pop
adc
sbb
pop
xchg
xchg
test
pop
cmps
arpl
or
out
sub
jnp
pop
test
sub
push
mov
scas
xchg
adc
(bad)
cs
xchg
dec
and
stos
jne
jp
ss
repz
enter
sbb
inc
sub
jb
mov
inc
scas
pop
leavew
sub
inc
and
sti
sti
inc
ja
sub
rol
les
mov
mov
sar
add
push
frstor
mov
dec
es
cmp
adc
cmps
push
pop
in
xor
mov
push
adc
cdq
mov
sub
bswap
sbb
xor
xor
icebp
loope
inc
icebp
xchg
jo
inc
fild
pop
lahf
adc
or
cmc
mov
repz
retf
jle
ret
cmc
cmc
xchg
clc
cmps
pop
in
sahf
mov
or
into
pusha
mov
push
(bad)
or
xchg
ins
cmp
lea
or
mov
rcr
lds
push
cmp
sub
loope
or
ins
pop
neg
jnp
sub
dec
mov
sti
cli
mov
mov
js
mov
mov
fisttp
out
xchg
stc
inc
xor
retf
push
imul
push
add
mov
sub
pop
stc
or
(bad)
mov
mov
pop
inc
mov
pop
icebp
out
out
jmp
enter
ret
in
xchg
push
xchg
je
movs
pushf
pop
cs
xor
sbb
repz
es
mov
xchg
cld
jge
jb
ja
xor
cmp
add
call
frstor
cmp
addr16
mov
(bad)
xchg
popa
std
push
cmp
dec
cli
pop
inc
scas
add
jl
repz
add
cli
lods
retf
(bad)
and
enter
test
in
dec
pop
jmp
or
test
push
dec
cmps
test
bt
xchg
test
pop
je
add
loopne
push
pop
fsubr
test
push
mov
test
mov
mul
je
dec
cmps
mov
dec
pop
inc
mov
dec
imul
cmps
xchg
(bad)
or
int
add
frndint
mov
cmp
lock
lahf
xor
jp
xchg
pop
and
fdiv
fcompp
pop
adc
cmp
or
test
inc
jmp
sahf
jl
fnsave
pop
leave
sbb
fwait
jno
and
jmp
or
ret
test
jbe
sub
jge
sub
neg
sbb
xor
cmc
gs
mov
test
adc
mov
adc
fild
movs
push
xor
shr
mov
mov
mov
ja
jmp
or
stc
push
(bad)
ret
addr16
outs
ins
push
mov
ins
mov
(bad)
fidivr
pushf
imul
push
add
mov
je
sub
sub
jno
dec
and
stos
lods
push
dec
jg
call
xor
jmp
pop
xchg
push
leave
loope
sti
push
mov
mov
outs
or
xor
ds
or
add
(bad)
mov
stc
mov
fs
repnz
jo
retf
mov
xchg
lods
jp
std
mov
cli
icebp
mov
ss
cli
bound
mov
xchg
push
sub
jecxz
mov
loop
je
gs
int3
pop
in
test
inc
ss
pop
inc
lahf
dec
lahf
loope
ins
(bad)
in
pop
fcomp
rcr
push
xor
pop
jle
mov
out
pop
stos
call
mov
aam
add
mov
jne
or
xor
cmp
lds
arpl
mov
inc
stos
mov
bndldx
xor
mov
mov
call
in
out
mov
xchg
and
(bad)
sbb
test
rcl
std
mov
sti
sbb
mov
scas
adc
popf
mov
and
adc
sub
stc
push
out
or
push
das
mov
push
jbe
in
sub
sbb
into
movs
push
mov
xchg
push
(bad)
mov
dec
sbb
sahf
es
cmc
cmp
adc
loop
js
pop
mov
jne
push
jmp
pop
loope
jns
repz
ins
xchg
cmp
mov
or
lahf
adc
mov
test
inc
rol
mov
xchg
or
jae
lahf
fnstcw
(bad)
cmp
in
pop
pop
pop
or
adc
(bad)
fs
lahf
iret
ror
mov
frstor
push
or
inc
out
xchg
push
inc
adc
cld
pop
and
mov
add
test
fisub
mov
dec
mov
repnz
mov
ins
loopne
in
mov
jae
xor
fnstcw
div
or
icebp
sbb
ret
loop
aad
daa
adc
xor
push
popf
sbb
mov
mov
mov
mov
xor
imul
rol
out
sar
jae
ins
xchg
scas
and
jecxz
dec
rol
dec
rol
or
push
mov
add
iret
rcr
daa
ds
int3
or
dec
outs
xor
jp
or
fstp
(bad)
mov
jg
enter
mov
cmp
add
in
mov
cmp
(bad)
mov
pop
dec
inc
adc
call
and
adc
in
fnstcw
dec
pop
jnp
sbb
or
data16
sub
xor
enter
push
in
mov
and
xchg
push
inc
mov
xchg
push
ss
stos
call
mov
adc
mov
aad
cwde
push
inc
sbb
pop
and
aad
popa
in
mov
addr16
div
in
mov
in
mov
push
sbb
js
ds
pop
fdiv
gs
and
popf
dec
mov
xor
fisubr
add
push
push
inc
add
ins
pop
cwde
or
mov
mul
bound
cmp
jb
xchg
test
lahf
xor
ret
or
cmp
or
pop
sti
pushf
(bad)
pop
inc
lods
add
mov
aam
mov
stos
ret
cmps
push
xor
(bad)
mov
(bad)
out
fld
fucom
xchg
add
adc
enter
leave
adc
dec
jne
sub
aaa
pmaxub
xchg
ret
pop
jbe
repnz
popf
fnsave
lahf
into
movs
xor
pop
imul
jg
iret
push
mov
jo
xchg
lods
add
fst
sbb
pop
fild
lock
push
mov
retf
pop
je
pop
shr
sbb
fadd
call
xor
outs
push
psubb
push
outs
sbb
or
pushf
stos
ins
fisttp
fsubr
repnz
ss
mov
test
enter
adc
xchg
sub
outs
fist
cmps
out
loop
xor
lds
and
mov
arpl
push
scas
imul
inc
mov
popa
scas
adc
xchg
pop
or
add
and
mov
(bad)
out
aaa
pop
(bad)
cli
in
in
fst
int
dec
sahf
je
xchg
mov
jbe
pop
mov
xchg
(bad)
xchg
mov
jmp
js
mov
jp
movs
xor
(bad)
jmp
in
xchg
adc
arpl
sub
(bad)
outs
xor
or
pop
pop
daa
jecxz
jecxz
xchg
nop
jle
scas
popa
mov
ja
jge
ja
cmp
scas
aas
fimul
jg
push
int
cmp
ret
in
fisttp
pop
popa
sub
repz
mov
inc
shl
push
push
aaa
mov
or
add
test
mov
add
lods
lods
inc
xor
daa
add
sub
cli
sbb
sub
jnp
adc
fcom
xor
arpl
mov
cmp
aam
mov
scas
retf
jge
lea
hlt
dec
cs
cmp
call
adc
icebp
imul
cli
ins
pop
jnp
out
nop
inc
cmc
push
mov
adc
ret
lock
push
mov
jnp
fs
in
mov
cmp
lahf
adc
xchg
in
inc
adc
test
and
jns
sti
jl
popf
stc
push
inc
dec
push
and
out
xchg
call
(bad)
out
mov
add
or
push
pusha
add
dec
into
fcomp
test
sti
pop
lock
ret
pop
mov
and
and
arpl
data16
sahf
and
mov
add
pop
jl
in
cli
mov
in
add
stc
jmp
mov
dec
push
push
push
sbb
aam
mov
add
rol
xchg
mov
jne
aaa
ja
ret
add
fcomi
jmp
clc
sti
ins
adc
mov
push
pop
inc
cmps
mov
inc
hlt
js
xchg
mov
mov
(bad)
jae
mov
icebp
pop
inc
mov
dec
call
ds
out
add
xchg
sahf
sahf
sbb
jle
nop
dec
int3
movups
aam
and
xchg
mov
mov
rcr
mov
mov
lods
lods
mov
sbb
(bad)
in
cmp
jne
lods
push
pusha
xchg
dec
mov
enter
add
je
(bad)
xor
arpl
mov
cmp
and
and
lods
push
or
pop
dec
repnz
mov
push
mov
pop
pusha
adc
repnz
clc
and
scas
cld
adc
add
add
or
fwait
das
mov
or
xchg
lods
jmp
cmp
mov
cmp
add
xchg
and
xor
xchg
out
xor
push
inc
fisubr
mov
daa
mov
sub
pusha
sbb
dec
ds
push
inc
sub
inc
xor
mov
(bad)
loopne
ja
repz
sbb
cs
push
and
adc
push
lahf
dec
ins
jge
mov
stos
xchg
push
int
push
fadd
clc
fwait
iret
cld
xor
jb
pop
test
popf
add
data16
fidivr
mov
iret
adc
mov
loope
add
ret
mov
and
cwde
mov
add
movs
jmp
jp
cdq
pop
mov
fucomp
repz
jne
movs
dec
je
adc
ss
xchg
das
jbe
pop
popf
cli
mov
and
sub
mov
sbb
jp
inc
jne
imul
ss
fstp
and
jnp
cli
les
repz
std
mov
inc
(bad)
sbb
mov
pop
fst
sub
ror
fxch
sub
sar
sbb
daa
push
clc
retf
cmp
or
shl
fs
adc
mov
dec
enter
mov
ins
adc
mov
adc
dec
cs
mov
sahf
pop
or
(bad)
addr16
or
dec
ss
cmc
cmp
fdivr
jmp
pop
cmp
mov
sub
push
popa
lods
adc
jno
inc
jg
in
cmps
mov
lods
test
jb
add
out
xchg
mov
inc
movs
(bad)
mul
cld
jl
mov
pop
fstp
lea
xor
aam
or
lea
daa
(bad)
cmp
jnp
mov
out
inc
jbe
xchg
iret
sbb
inc
inc
sub
and
push
mov
fwait
sub
push
lock
inc
jbe
jb
push
mov
mov
pop
shr
in
stos
jg
xor
das
(bad)
lahf
pop
inc
sub
inc
cmps
fwait
movs
add
ins
int
test
xor
pop
mov
not
mul
imul
(bad)
mov
int3
xchg
mov
popa
dec
xchg
retf
xor
lea
dec
loop
adc
push
mov
add
aaa
cmps
lea
mov
mov
cli
retf
pop
int3
push
inc
inc
mov
cmp
aad
outs
mov
test
inc
ficom
scas
cdq
fcmovne
(bad)
cmp
pop
hlt
cld
adc
add
push
(bad)
adc
jl
mov
ret
pop
and
jbe
fsubr
daa
push
and
dec
iret
adc
xchg
fstp
in
push
adc
cli
pop
test
(bad)
into
mov
dec
push
mov
push
retf
int3
inc
mov
jmp
mov
addr16
fmul
adc
add
cdq
ss
mov
add
add
clc
aaa
jno
cmp
dec
cmp
mov
pushf
cwde
outs
ror
mov
retf
mov
xchg
jecxz
sub
dec
add
outs
movs
sbb
ins
cmp
outs
fsubr
lds
addr16
test
xchg
pop
cld
jo
jle
dec
lahf
mov
xlat
cli
xor
pop
ss
add
addr16
adc
adc
dec
(bad)
loope
daa
mov
shr
fcmovbe
xchg
mov
lea
mov
push
push
mov
xlat
mov
pop
pop
cmp
es
pop
ins
(bad)
pop
stos
add
inc
enter
add
jb
jmp
pop
or
cmc
sbb
mov
in
sbb
mov
sbb
xor
hlt
sbb
add
mov
test
add
dec
imul
xchg
cmp
call
pop
xchg
adc
into
cmp
fld
repnz
inc
adc
pop
mov
ret
pop
dec
sbb
sub
mov
lods
fdivr
adc
pop
aad
into
ss
push
lock
inc
sub
fs
jns
jae
adc
add
in
loopne
out
fist
and
xchg
jl
mov
sbb
mov
or
out
push
sti
ins
int3
push
sub
xor
and
(bad)
in
mov
aam
test
repnz
(bad)
loopne
xchg
sahf
and
cli
pop
sbb
jmp
cmc
sbb
clc
in
xor
loope
jle
push
lods
(bad)
sbb
add
daa
popf
loope
inc
cmp
xor
stc
push
nop
dec
push
jb
mov
popf
push
out
push
dec
ja
cwde
stos
pop
sub
add
mov
push
ss
pop
xor
inc
lods
ins
popa
movs
mov
adc
mov
fs
jne
and
sub
ins
cmp
mov
push
cmps
test
popf
cld
jecxz
xchg
sub
outs
test
sbb
mov
sbb
or
mov
sub
jge
ja
aad
out
sub
adc
ret
mov
aad
mov
add
add
cmp
aam
into
iret
lea
cmps
dec
adc
mov
mov
mov
mov
bound
pop
and
ins
sti
cli
repnz
xchg
push
sbb
cmp
scas
add
scas
icebp
mov
sub
pop
mov
pop
xor
cmp
and
push
adc
(bad)
clc
or
ret
(bad)
repz
imul
mov
div
bound
push
les
addr16
fwait
nop
and
adc
xlat
retf
jns
ins
dec
icebp
mov
xchg
jne
inc
outs
std
sbb
lods
adc
push
sbb
loope
pop
in
imul
mov
xor
dec
mov
(bad)
out
repnz
mov
test
fsubr
dec
cs
test
or
test
dec
add
sub
and
(bad)
jmp
sbb
pop
mov
mov
push
jb
das
inc
mov
loope
push
fadd
shl
mov
cmp
xor
or
cld
push
xor
mov
sti
push
xchg
or
fs
gs
ja
inc
fwait
mov
outs
inc
sub
repz
popa
les
(bad)
fisubr
sub
shr
mov
push
adc
sbb
dec
push
pop
inc
cwde
sbb
push
cwde
jae
xchg
loopne
movs
fwait
cdq
xor
dec
pop
jne
aaa
pop
sub
cwde
mov
jge
pop
mov
pop
aam
mov
mov
xor
sbb
(bad)
or
(bad)
mov
pushf
cmp
es
mov
js
lods
sub
lds
repnz
mov
mov
std
(bad)
push
cmp
push
or
mov
(bad)
ins
mov
adc
shr
sub
psubd
leave
pop
comiss
sbb
xchg
cmp
jmp
imul
das
mov
mov
cmp
xchg
mov
push
push
retf
add
sahf
ret
call
data16
cmps
pop
je
dec
inc
in
ficomp
mov
outs
shr
stos
push
(bad)
pop
pop
pop
cwde
push
mov
or
je
fld
clc
scas
aam
dec
sbb
adc
mov
add
jb
and
aad
mov
push
imul
adc
ins
mov
dec
jmp
mov
cmp
icebp
jne
pushf
out
and
loopne
push
jmp
dec
stc
jne
push
inc
in
sbb
ins
inc
retf
dec
in
jmp
sbb
pop
xlat
add
jne
lea
ins
jmp
xor
cld
fld
cmp
sar
mov
jle
aam
sti
mov
cs
jo
cdq
ror
mov
mov
aas
xchg
cmc
mov
jns
aad
and
mov
lahf
icebp
xor
ror
retf
sbb
jns
cli
popa
call
icebp
fldcw
(bad)
out
mov
or
jmp
add
into
movs
mov
xor
test
mov
push
xor
nop
and
add
scas
jnp
mov
pop
adc
sahf
in
lea
cwde
or
into
and
sbb
push
stos
inc
mov
mov
les
jl
cmps
lods
push
inc
push
fwait
push
push
mov
fbstp
icebp
xchg
mov
retf
arpl
cmp
loope
dec
sbb
push
mov
cli
xlat
stos
sub
sti
iret
data16
sub
ins
sar
xchg
retf
shl
rol
jl
popa
aas
mov
push
in
pop
cmp
jle
call
mov
ret
dec
imul
(bad)
jg
in
fisub
jecxz
adc
pop
or
and
xor
fidivr
adc
mov
retf
sub
add
adc
pop
adc
sub
jno
or
inc
mov
movs
scas
shl
jmp
out
mov
mov
push
sti
mov
mov
out
ins
dec
xor
xchg
mov
push
(bad)
dec
mov
mov
xor
jmp
mov
jno
popa
int
mov
inc
pushf
jb
movs
mov
je
cmp
jns
or
xor
mov
mov
dec
xchg
ret
jmp
std
test
call
pusha
jmp
sub
xor
test
aas
pop
xchg
sub
push
inc
jbe
dec
je
call
(bad)
and
or
inc
(bad)
(bad)
cwde
enter
jae
retf
add
pop
mov
sti
in
adc
adc
pop
repnz
push
ret
sbb
adc
push
mov
mov
xor
(bad)
ins
shl
call
addr16
jle
mov
or
repz
cld
test
cdq
mov
mov
icebp
sub
shl
push
shl
out
test
and
pop
mov
(bad)
(bad)
int
call
scas
ins
xchg
mov
push
xlat
jns
fcom
enter
test
ret
sub
jne
repnz
test
mov
inc
pop
dec
mov
shl
mov
nop
xor
js
sub
pusha
jbe
pop
jle
fcom
ror
inc
int
jecxz
aam
sar
push
mov
into
test
inc
inc
imul
or
out
movs
rcl
push
and
aam
jno
jo
enter
and
pushf
sbb
sub
dec
mov
outs
xor
pop
add
ror
shl
stc
vminps
pop
add
das
cdq
xlat
add
lods
cmp
add
mov
(bad)
jns
push
pop
cld
add
mov
push
pop
iret
sbb
or
test
mov
xor
jb
sub
jne
and
push
add
pop
dec
jp
repnz
shl
xor
adc
mov
sub
les
adc
mov
retf
cmp
mov
dec
daa
mov
xor
push
or
pop
mov
xor
mov
or
xor
pusha
cs
pop
inc
sub
out
hlt
arpl
push
inc
int3
xor
inc
mov
aam
shl
fild
popf
(bad)
jmp
dec
xchg
push
repnz
sub
fisttp
mov
xchg
xor
mov
ins
dec
mov
pop
das
push
xor
inc
aaa
sub
addr16
adc
enter
xchg
cmp
jmp
scas
cmovno
mov
push
push
pop
adc
jne
or
xor
popa
add
push
pusha
(bad)
jmp
pusha
popa
out
ins
enter
jl
push
mov
sbb
dec
(bad)
adc
(bad)
aaa
test
or
and
inc
cmp
mov
jnp
xchg
in
push
push
daa
jae
mov
dec
inc
sar
cmp
test
pop
xchg
hlt
dec
popf
cli
outs
push
pop
addr16
shl
push
cld
ss
enter
repz
pop
sbb
stos
sub
sub
push
pop
jl
jmp
out
mov
and
jmp
dec
pop
leave
addr16
mov
xor
call
inc
js
mov
cmps
push
and
or
fisubr
ret
xchg
jl
ja
int3
add
inc
jae
adc
xchg
xor
pop
daa
or
icebp
inc
fild
jp
test
sub
push
add
into
cwde
xchg
adc
ret
sub
sub
add
xchg
mov
adc
sub
push
shr
mov
(bad)
dec
adc
inc
stos
aam
(bad)
fadd
imul
pop
xchg
sbb
stc
xchg
cmps
and
and
jl
retf
jne
push
and
imul
jae
jg
push
gs
xor
outs
jb
mov
mov
out
std
test
adc
rol
jmp
push
test
leave
test
mov
iret
adc
cmp
xchg
push
pop
push
movs
ss
pop
ret
adc
lahf
jg
sub
call
iret
xchg
dec
cmps
sub
jge
or
dec
rcr
push
mov
test
call
aad
int3
add
imul
mov
add
fist
dec
repnz
fs
push
adc
add
test
sbb
fcmovne
push
out
inc
mov
jmp
loope
retf
push
xchg
sbb
sub
mov
pop
jbe
sbb
pop
jnp
retf
and
mov
stos
mov
lahf
bound
mov
fist
lods
cvtpi2ps
mov
push
int
cmps
clc
mov
or
cmps
add
xchg
push
(bad)
sbb
(bad)
retf
dec
(bad)
mov
pop
mov
jbe
mov
jge
lods
loop
cmp
dec
push
test
adc
fisubr
cmps
cld
mov
mov
rcl
repz
and
adc
out
pop
fild
outs
mov
push
test
push
sahf
mov
lea
sub
adc
mov
inc
jecxz
xchg
test
fwait
jmp
jge
stos
xor
push
cli
pop
jno
xor
adc
in
and
mov
xchg
call
mov
in
xchg
stos
jbe
xor
movs
adc
mov
cmp
pushf
mov
call
into
push
movs
in
test
scas
xchg
pop
sub
add
push
cmc
mov
mov
retf
mov
call
icebp
dec
push
push
dec
in
(bad)
je
mov
jns
jp
sbb
sub
stc
push
fidiv
jge
cli
or
push
fmul
mov
cmp
add
mov
mov
(bad)
jns
sbb
push
inc
sbb
and
scas
mov
jl
ror
xchg
mov
xchg
xor
(bad)
xlat
(bad)
xchg
aam
repnz
or
pusha
pop
adc
mov
xlat
(bad)
sbb
cli
fsin
lods
nop
push
lock
cmps
popf
mov
dec
aaa
call
fsubr
loop
int3
ret
shl
fist
xchg
sub
jl
nop
out
xchg
sbb
add
sbb
xor
add
in
stos
push
(bad)
aam
fidivr
mov
rol
es
mov
mov
push
ja
xchg
inc
push
sbb
mov
add
push
(bad)
mov
(bad)
(bad)
(bad)
popa
cmp
cmp
mov
xchg
popf
pushf
xor
sbb
mov
add
pop
mov
shr
push
adc
das
push
leave
adc
ficom
loopne
ret
jmp
pushf
loopne
mov
outs
cmp
mov
pop
(bad)
inc
out
inc
(bad)
shr
mov
lods
add
and
retf
not
fst
jb
and
xor
aaa
adc
stos
mov
cli
adc
sti
mov
fdiv
pusha
push
out
jo
xchg
jne
fidivr
mov
jmp
xor
dec
pop
das
mov
aam
mov
(bad)
cli
popf
out
cmp
mov
mov
(bad)
jmp
push
xor
xchg
ja
inc
dec
mov
or
popf
adc
dec
icebp
mov
or
push
xchg
(bad)
pop
add
lods
lea
or
fsubr
dec
mov
lea
add
mov
and
mov
int3
ja
jle
push
dec
jae
jmp
push
mov
inc
mov
cmp
loop
jo
movs
das
enter
imul
std
push
sub
xchg
jne
jo
sub
ja
mov
jg
out
jae
and
sub
push
sbb
cli
mov
sub
rcr
sub
sub
mov
nop
sbb
jns
sub
dec
pop
xor
inc
pop
jnp
jb
(bad)
loope
fisubr
xchg
push
mov
push
mov
pop
adc
shl
js
sar
push
inc
inc
loop
aad
addr16
movs
cmp
xlat
or
jae
cld
xor
movs
inc
out
fucomp
icebp
js
jecxz
inc
inc
inc
out
mov
xchg
loop
movs
add
repnz
out
sub
ds
(bad)
rcl
test
push
cmp
jl
mov
xchg
xchg
ins
jmp
lock
into
and
mov
cmp
adc
int
push
ds
mov
xchg
dec
xor
nop
sub
lock
into
or
xchg
das
push
mov
ss
sbb
push
and
into
lods
xchg
fbstp
mov
and
rcr
loope
adc
jno
mov
jbe
or
cwde
cmp
xchg
jmp
and
jno
jge
in
or
pop
jg
dec
scas
jno
cmp
cli
test
pop
xchg
movs
xchg
loopne
add
inc
inc
retf
and
fdiv
and
in
or
in
add
cmp
jno
xchg
add
xchg
and
test
mov
cmp
mov
ror
sub
fst
cmp
jb
push
cmp
mov
jae
sbb
in
ss
dec
jle
fcmovu
inc
cmps
stos
daa
push
sbb
xchg
jbe
out
jo
push
outs
pop
xchg
js
sbb
sbb
xchg
and
inc
dec
cmovle
or
not
sub
mov
inc
fidiv
sub
outs
add
pusha
cmp
scas
mov
lds
(bad)
mov
mov
in
sahf
frstor
dec
(bad)
stos
jnp
or
push
and
xchg
inc
in
xchg
xor
push
inc
jmp
add
add
ins
popf
mov
mov
fucom
imul
add
jne
mov
cli
mov
cli
and
ds
jecxz
fmul
cmps
ins
dec
pusha
fstp
imul
es
mov
imul
jg
push
adc
mov
stc
fwait
js
shr
nop
xchg
jle
test
and
push
xlat
cwde
in
inc
push
imul
cs
sbb
pop
sub
jae
aaa
lock
ja
sub
jns
outs
(bad)
jno
inc
cli
ss
rcl
xor
and
loope
mov
icebp
dec
inc
icebp
lea
jg
push
push
push
retf
inc
xchg
or
lea
loop
inc
mov
sub
and
stos
sbb
mov
sbb
dec
pop
mov
cmps
shl
(bad)
mov
in
out
div
cmp
xchg
fwait
ss
enter
inc
dec
icebp
jmp
cmc
mov
in
cs
push
mov
addr16
mov
ret
mov
mov
xlat
add
jb
cmp
aam
push
xor
xchg
mov
lahf
mov
mov
cmps
sbb
push
mov
repz
js
mov
rcl
mov
pop
aam
push
dec
into
fmul
(bad)
push
cmp
daa
mov
jne
mov
(bad)
xor
int3
cs
cmp
xchg
dec
inc
push
push
and
adc
push
jecxz
or
mov
add
or
mov
outs
mov
ja
push
test
scas
dec
out
fsub
mov
jo
mov
adc
adc
call
push
gs
sub
fadd
push
(bad)
je
mov
lods
dec
sbb
or
mov
mov
or
mov
inc
push
loope
push
fbld
sahf
adc
mov
pusha
dec
ins
cdq
inc
test
mov
inc
push
sub
popf
jmp
mov
or
push
cmc
cdq
or
jns
inc
nop
fwait
xchg
in
xor
add
add
xchg
and
inc
ins
and
das
popf
movs
sub
jmp
out
dec
jnp
mov
mov
xchg
push
scas
outs
or
xchg
inc
mov
pop
or
inc
test
retf
fidivr
pop
dec
pop
dec
ret
popa
cmp
mov
and
mov
add
xor
out
mov
mov
mov
xor
stos
xor
gs
rcr
or
ror
inc
stos
jno
xchg
xor
ffree
pop
pop
shl
or
das
inc
xor
(bad)
pop
lea
jmp
sbb
loope
mov
or
cdq
and
mov
and
aad
mov
std
ja
sub
arpl
push
push
(bad)
jbe
and
setg
push
and
and
or
fsub
mov
fistp
cmp
nop
cmp
push
sub
mov
sub
push
jl
loop
or
into
rcl
jmp
xchg
leave
dec
ret
ins
sar
cmps
sbb
pmaxub
jge
je
mov
jl
add
dec
inc
aas
pop
pop
ror
mov
aaa
adc
dec
mov
call
stos
call
push
xor
jmp
mov
stos
ss
cmp
adc
out
stc
jmp
outs
mov
or
xchg
out
and
enter
xchg
xchg
stc
into
aaa
imul
in
jbe
pop
pop
gs
push
and
ret
loop
iret
stc
mov
clc
inc
lds
adc
in
fidiv
mov
xchg
sub
je
xor
adc
xchg
jge
imul
imul
dec
xor
xor
aad
cdq
pop
icebp
out
pop
fchs
sub
aaa
mov
or
stos
out
int3
das
(bad)
cld
add
fsubr
jecxz
test
inc
sbb
mov
sub
shr
mov
leave
inc
cdq
cmp
mov
inc
mov
pop
xchg
data16
sbb
add
mov
mov
inc
fiadd
sub
jns
jmp
lods
push
xchg
mov
cmp
imul
pop
(bad)
mov
mov
les
ret
fs
cmps
test
(bad)
out
fisub
mov
mov
jbe
xchg
xchg
(bad)
fst
xchg
mov
(bad)
iret
sub
inc
push
add
ins
sahf
idiv
ins
ret
pop
xchg
jo
stos
movs
lahf
mov
leave
cmp
(bad)
or
jmp
dec
inc
jge
mov
or
fistp
shl
test
xchg
arpl
push
push
and
jnp
jg
repnz
push
sub
mov
aas
add
stos
inc
ja
or
retf
add
or
mov
xlat
and
ins
into
dec
sar
mov
repz
xor
dec
aaa
fstp
xchg
test
cli
sub
out
fstp
add
or
daa
ins
inc
popf
std
push
int
push
hlt
out
call
in
(bad)
in
xor
pop
and
push
clc
adc
cmp
jl
ss
sbb
cmp
adc
mov
inc
push
(bad)
and
cdq
stos
sub
mov
fs
imul
loopne
push
test
ins
sub
aad
mov
jp
adc
push
inc
shl
adc
outs
push
je
mov
cld
cdq
sbb
inc
add
lea
xchg
pop
mov
or
jmp
mov
shl
punpckldq
retf
inc
xlat
jb
and
adc
icebp
mov
mov
sub
mov
retf
or
aad
cli
scas
sub
pushf
fld
loopne
cmp
jg
dec
jecxz
movs
xchg
xchg
jae
mov
std
(bad)
out
jmp
fs
jl
mov
std
fs
scas
dec
adc
mov
or
arpl
jge
mov
inc
inc
in
or
add
mov
(bad)
jae
loop
scas
xor
data16
xchg
gs
jae
lds
cmps
aas
pop
adc
cmps
and
icebp
test
add
cmps
pop
pop
adc
sub
pop
movs
das
mov
cmp
rol
adc
cwde
xchg
shl
(bad)
les
ins
test
add
mov
push
mov
gs
pusha
or
cdq
mov
dec
jmp
pop
sti
into
in
dec
and
jg
movs
rcl
and
mov
jb
inc
hlt
mov
jo
jp
stos
fidiv
push
test
ins
in
adc
aad
fwait
mov
loop
ss
push
addr16
mov
xchg
cmp
sub
add
jmp
xor
and
jnp
cmp
dec
mov
or
stc
es
(bad)
lahf
and
mov
mov
dec
mov
or
cmp
push
xchg
xchg
mov
in
outs
mov
push
sbb
pop
inc
mov
cmc
into
mov
and
pop
adc
sar
inc
icebp
leave
push
fsubr
adc
lds
cmp
adc
jmp
fs
sbb
in
js
xlat
mov
fimul
fs
loopne
push
mov
fmul
mov
xor
xor
cwde
test
add
xlat
imul
push
pop
lock
xchg
xor
pop
xlat
pop
mov
rol
add
nop
test
aaa
data16
int
xor
xor
sub
pushf
sbb
and
arpl
jmp
xor
les
es
sbb
icebp
and
or
sbb
ret
adc
mov
add
adc
outs
push
mov
outs
mov
mov
pop
ret
mov
ins
fcomi
addr16
sbb
outs
and
jbe
data16
mov
mov
rcr
mov
adc
sub
adc
aaa
or
pop
rol
iret
sbb
icebp
jp
mov
pop
cmc
(bad)
sti
int3
loopne
xor
popf
shl
push
jp
mov
lahf
(bad)
int3
movs
adc
mov
das
sub
cmc
jle
loopne
in
sub
mov
add
out
push
xor
test
mov
jl
fwait
rol
sub
mov
imul
sub
popa
and
mov
rcl
mov
or
fstp
dec
popf
inc
ret
fist
aad
aaa
jne
add
mov
mov
(bad)
fs
sub
push
sub
enter
in
mov
add
imul
das
cmps
mov
pop
inc
rol
cmp
xchg
push
push
ja
add
jnp
jo
popa
iret
and
mov
xlat
jne
stos
loopne
mov
xor
jb
scas
retf
jno
mov
dec
movs
jne
push
fwait
sub
rol
mov
pop
sub
and
xchg
aaa
pop
cmps
and
(bad)
loop
rol
and
or
fistp
mov
xor
addr16
(bad)
sbb
jae
add
xor
pop
or
shl
sub
xor
out
fidivr
dec
dec
push
ins
jnp
or
mul
pop
bound
jae
pop
retf
(bad)
cmp
(bad)
out
or
mov
dec
xchg
sbb
lahf
out
rcr
mov
sahf
jge
je
into
jns
cmp
mov
sub
mov
pop
cmp
nop
sahf
out
add
cdq
and
mov
mov
xor
inc
in
mov
outs
sub
jle
or
and
leave
bound
xor
xchg
(bad)
mov
lock
adc
addr16
call
and
add
cmovnp
in
mov
(bad)
sub
arpl
push
push
(bad)
shl
hlt
or
int3
stos
in
push
retf
das
push
lods
cmp
add
push
stos
aaa
mov
and
ja
(bad)
scas
(bad)
pushf
out
in
mov
popf
ret
inc
push
test
mov
test
add
shl
mov
push
pushf
mov
gs
sbb
and
push
das
mov
inc
(bad)
sbb
dec
cmp
imul
out
stos
(bad)
dec
call
fistp
cmp
dec
xor
push
jmp
sbb
sbb
xor
mov
cwde
in
add
cmp
ret
fdiv
stos
dec
mov
repnz
call
out
jg
pushf
sti
pusha
std
push
mov
scas
xor
pop
inc
or
push
retf
fidiv
mov
sbb
pop
xchg
and
loopne
test
mov
inc
jmp
adc
xchg
in
loop
not
pop
lds
outs
out
in
jmp
cwde
jo
sbb
out
jmp
test
lods
in
arpl
jecxz
mov
mov
jae
sub
lea
mov
push
arpl
dec
mov
sbb
push
and
mov
mov
test
dec
sub
in
jg
dec
scas
xchg
push
sti
mov
sub
retf
mov
pop
std
xchg
adc
dec
shl
xor
outs
ss
repz
aas
mov
hlt
sahf
(bad)
push
rcr
xchg
leave
sbb
cmp
in
and
xlat
in
mov
icebp
push
or
xchg
add
outs
test
pop
mov
stc
or
and
jmp
inc
sbb
ret
cmc
pop
jmp
(bad)
loop
mov
jno
(bad)
cmp
inc
xor
push
dec
lods
sub
out
add
outs
es
loopne
cld
aam
mov
xor
data16
out
inc
xchg
cmp
cmps
dec
iret
xchg
xchg
jns
jmp
sbb
sub
test
pushf
mov
cmp
(bad)
adc
repnz
cmps
loopne
pop
ja
retf
cwde
sub
ret
mov
push
mul
jle
adc
loopne
sub
dec
or
je
scas
fsubr
and
rol
or
fs
in
xchg
xor
jmp
pop
jmp
mov
jge
movs
pop
aad
push
jmp
fnstenv
jo
and
or
rcr
lods
std
inc
out
push
push
push
mov
adc
loope
daa
push
mov
arpl
iret
jae
lahf
imul
pop
inc
dec
xchg
ins
fisubr
repnz
pop
shr
jmp
dec
sar
popf
mov
stos
fild
mov
scas
(bad)
xchg
sub
xchg
test
xor
addr16
push
shl
add
push
pop
or
cmp
xchg
xchg
adc
cmp
cdq
popa
int
nop
sbb
stos
into
outs
rcr
jnp
pop
test
fcomp
gs
test
dec
bound
sub
into
xchg
xlat
pop
std
adc
xchg
sar
scas
scas
mov
(bad)
or
cmp
mov
push
and
aaa
fadd
cmc
sbb
push
mov
mov
sub
not
push
shl
mov
jno
gs
and
enter
int
loope
and
ret
push
in
jle
push
add
dec
aam
scas
ficomp
pop
jnp
popf
leave
dec
pop
sub
sbb
repz
mov
shr
clc
jl
jmp
xor
add
enter
push
mov
nop
push
repz
imul
pushf
imul
fld
and
outs
ds
and
adc
push
je
cli
and
ss
pushf
and
mov
mov
addr16
inc
cdq
adc
or
ja
mov
imul
xor
jge
arpl
hlt
es
test
sar
cwde
mov
mov
sbb
rep
jle
addr16
add
sub
mov
lods
retf
aad
mov
pusha
mov
daa
int3
mov
shl
push
sbb
sub
mov
test
and
dec
sub
xchg
nop
pushf
je
cmps
dec
test
push
sub
push
jmp
jmp
inc
adc
jb
or
rol
jmp
imul
(bad)
or
cdq
and
inc
add
(bad)
mov
or
sub
outs
sbb
gs
xchg
jp
int3
mov
test
jo
fstp
xchg
gs
pop
rcr
push
fild
xchg
jbe
std
cmp
icebp
sbb
out
dec
fsub
imul
xor
jno
inc
into
daa
pop
and
adc
xchg
push
pop
int3
retf
aas
push
push
pushf
cdq
outs
jmp
out
dec
push
movs
ret
sbb
mov
add
add
ror
cmp
adc
mov
mov
in
gs
mov
sub
push
and
jle
push
mov
rcr
mov
push
mov
adc
into
in
cld
and
dec
mov
pop
movs
and
sbb
mov
and
or
mov
in
cmps
aam
dec
push
jne
repnz
popa
pop
scas
mov
sbb
cmp
in
push
push
aam
sub
add
cmp
popf
out
mov
xor
adc
mov
mov
mov
xchg
leave
add
shl
cmps
cmp
leave
and
jmp
xor
stos
neg
dec
gs
cmc
call
inc
test
xchg
xchg
mov
mov
add
jecxz
test
std
cmp
(bad)
out
pushf
fild
xor
(bad)
out
sbb
push
adc
aas
cdq
mov
pop
inc
and
adc
mov
ss
fbld
inc
xchg
adc
sar
aad
jge
shl
pushf
dec
mov
cmp
loope
dec
adc
dec
cmps
mov
xor
cmp
jg
popf
shl
xchg
pop
pop
push
ret
pop
jmp
fs
mov
mov
hlt
clc
(bad)
test
mov
mov
out
call
and
push
adc
pop
add
jecxz
or
add
mul
icebp
icebp
jmp
arpl
push
sub
ins
jmp
(bad)
ficom
mov
ins
push
or
clc
sahf
dec
xchg
leave
test
in
xor
rcr
ins
and
or
adc
les
cmp
inc
cmps
push
cmp
fidiv
(bad)
jns
adc
aad
xor
shl
shl
clc
fs
shl
out
jae
jmp
sbb
and
ins
out
pop
push
inc
push
mov
jb
xor
lds
aas
jbe
into
cmp
(bad)
push
mov
add
pop
pushf
gs
jmp
mov
adc
mov
test
mov
ss
daa
movups
cdq
das
dec
xor
cmc
sar
test
shl
and
dec
mov
movs
xor
(bad)
out
ret
sbb
ins
jbe
sahf
cld
cdq
sbb
or
je
ja
jb
ja
rcl
adc
sub
mov
shl
mov
mov
in
cmp
aam
aam
ret
inc
mov
ds
or
stos
adc
shl
movs
dec
add
cmp
xor
add
sar
cld
fimul
cs
ins
sar
jecxz
jmp
test
in
jecxz
inc
mov
pop
add
imul
loope
jp
jnp
iret
mov
mov
add
mov
and
jmp
ja
imul
xchg
push
jecxz
mov
push
mov
(bad)
xchg
hlt
cli
mov
or
jle
clc
xor
addr16
sub
xor
fsub
dec
aad
xor
fwait
test
pop
cmp
and
lods
inc
std
inc
ds
ds
lahf
cmp
add
or
aas
sub
jmp
movs
ins
addr16
stos
sub
sar
lods
xor
sbb
mov
or
and
xchg
jl
jnp
(bad)
gs
pop
pop
cmp
cli
mov
pop
(bad)
call
mov
pop
xchg
rol
xor
stc
pop
and
std
cmps
sub
imul
into
stos
(bad)
icebp
call
adc
jne
dec
or
movs
or
sbb
xchg
out
imul
cmps
ins
in
pop
jmp
and
retf
dec
mov
sub
shr
mov
arpl
push
sbb
gs
imul
add
adc
sti
loope
mov
stos
sar
sbb
les
dec
mov
cmps
lods
mov
push
sbb
out
or
lock
pop
imul
popa
and
xlat
dec
push
cmp
push
popf
add
into
ins
inc
cmp
pop
imul
nop
lods
push
xchg
mov
xor
repnz
mov
mov
jns
sub
pop
cmp
dec
(bad)
(bad)
push
cmp
ret
sbb
pop
mov
and
and
jl
xor
mul
imul
dec
into
icebp
mov
dec
jle
jno
dec
mov
mov
cli
push
mov
loope
mov
xor
sbb
sbb
test
sbb
(bad)
xor
rcr
pusha
jg
daa
mov
xchg
fcmovbe
(bad)
jb
inc
aam
ds
fiadd
sub
fucomi
cld
arpl
xor
ds
(bad)
jecxz
lds
icebp
in
jle
xchg
and
xchg
jmp
mov
sub
mov
btr
imul
int3
(bad)
call
lock
sar
push
out
and
bound
outs
add
or
daa
mov
push
jp
jge
adc
and
sub
movs
jle
jecxz
ds
addr16
mov
sbb
xchg
push
(bad)
ins
mov
shl
outs
push
or
int
sub
pop
jnp
push
in
push
lock
or
mov
arpl
jo
js
fdivr
sbb
sub
test
mov
push
sti
jmp
xor
cmp
xchg
adc
fistp
jo
mov
xor
aaa
jo
xchg
cmp
test
lock
fcmovne
call
push
pushf
imul
push
mov
xor
loopne
mov
mov
mov
arpl
test
jno
fistp
adc
inc
and
rcl
adc
repnz
rol
and
jno
arpl
jo
imul
pusha
(bad)
push
inc
gs
call
inc
adc
push
jmp
fimul
shr
movs
not
(bad)
mov
test
xchg
xchg
push
add
sar
ss
jns
mov
push
cdq
frstor
je
cmc
mov
xchg
mov
call
test
dec
not
jb
gs
(bad)
ins
dec
xchg
mov
loop
cmp
popf
xchg
add
lds
out
mov
mul
pop
retf
push
mov
imul
das
adc
fwait
xor
mov
jnp
sbb
xor
daa
xor
cmp
frstor
xor
aaa
jp
mov
or
jmp
movs
shr
std
nop
and
rcl
shl
dec
mov
(bad)
and
enter
mov
pushf
jecxz
call
adc
or
outs
arpl
xor
sar
or
pop
inc
pop
cli
pop
loope
addr16
(bad)
mov
mov
mov
dec
jl
repnz
cmp
nop
push
jmp
jbe
adc
xchg
stos
inc
shr
mov
and
mov
mov
dec
inc
cld
gs
mov
pushw
(bad)
fucomip
repz
lea
mov
and
pusha
sbb
maskmovq
div
lock
or
inc
xchg
or
sub
jo
push
adc
cmp
into
icebp
push
lahf
aad
jmp
test
pop
int
jg
sbb
xchg
pop
inc
push
pop
mov
jbe
xor
out
idiv
in
jb
sbb
mov
jnp
stos
mov
repnz
out
cmps
mov
dec
jne
rcl
fst
adc
out
mov
push
movs
lock
xchg
enter
push
xor
pop
es
cmp
fstp
stos
cmp
bound
mov
jns
or
cmps
mov
or
sbb
push
jl
add
xor
sbb
mov
mov
push
(bad)
and
in
mov
sbb
xchg
and
push
jge
data16
imul
and
ins
and
loopne
jns
outs
(bad)
mov
fdivr
aam
mov
ins
mov
xchg
test
pop
aam
mov
loopne
sub
rep
rcr
xlat
cld
fstp
cs
jnp
inc
sub
mov
pop
add
movs
cs
push
xor
retf
sub
popa
inc
pop
add
(bad)
xlat
inc
inc
scas
lahf
mov
cwde
mov
data16
shl
repnz
push
fcmovne
sub
or
and
and
mov
add
js
jo
scas
inc
jnp
mov
mov
push
sub
mov
ins
int3
ja
jbe
shl
sub
push
fidiv
push
ss
jge
in
pop
jns
fwait
out
pop
int
dec
addr16
das
cmp
inc
xchg
addr16
push
in
out
repnz
movs
mov
int
add
jo
pop
xor
(bad)
arpl
sub
ss
js
(bad)
in
not
int3
mov
arpl
pop
pop
out
mov
adc
xchg
adc
mov
outs
inc
das
sub
sub
pusha
lea
mov
dec
aad
cdq
int3
mov
and
movs
adc
mov
sub
pop
ss
xchg
iret
push
ins
xor
popa
jp
dec
cmp
mov
int
outs
arpl
ficomp
sub
iret
xor
add
xchg
or
es
dec
cmp
loope
fisttp
or
bound
icebp
das
adc
cld
jbe
xor
addr16
push
ja
or
hlt
clc
mov
cld
xor
pop
mov
call
rcr
adc
dec
out
pop
in
inc
add
xchg
int
pop
arpl
xchg
cs
mov
push
jne
retf
mov
arpl
mov
or
test
(bad)
xor
gs
cmc
out
push
mov
leave
out
xlat
dec
cmp
cdq
xchg
out
xchg
jbe
outs
sub
pop
sub
imul
retf
sbb
lods
xchg
sub
fbld
push
in
rol
xor
or
callw
das
cmp
adc
jecxz
push
mov
pop
xor
(bad)
xor
jno
jmp
test
xchg
mov
xchg
xor
call
lea
cmps
pop
ins
lods
add
sbb
(bad)
sub
scas
das
cmp
dec
pop
dec
fisttp
enter
push
(bad)
push
retf
push
movs
fnstsw
mov
ficomp
pop
dec
ins
jg
xchg
daa
mov
cmps
add
xchg
mov
icebp
push
xor
imul
mov
in
test
and
inc
push
fcmovnbe
add
dec
jge
clc
cmc
mov
push
fbld
xchg
adc
pushf
mov
loop
ds
lahf
mov
fwait
cdq
stc
or
add
add
test
mov
cmc
add
dec
dec
pop
mov
test
movs
xchg
xchg
(bad)
fs
cdq
pusha
mov
mov
jmp
vandnpd
ja
inc
add
es
add
dec
or
iret
es
jge
mov
pop
adc
movs
xor
iret
pushf
aaa
adc
mov
add
nop
sub
xchg
cld
pop
icebp
xchg
int
cmc
sub
fdivr
rcr
sub
push
mov
inc
mov
mov
iret
jle
add
pop
pop
dec
ror
xchg
mov
xlat
fldcw
mov
add
jae
sbb
sbb
out
xchg
jbe
inc
xor
inc
call
fist
jmp
pusha
(bad)
or
shr
jg
(bad)
stc
ret
mov
repz
fcomp
fst
sbb
mov
adc
aam
(bad)
xchg
pop
xchg
sbb
mov
or
fcomp
dec
ja
int
leave
daa
sub
jmp
inc
test
sub
mov
cmp
or
ss
push
jbe
bound
cdq
sub
pushf
push
xor
xor
fs
imul
mov
sbb
push
add
stos
cmp
mov
pop
aas
sub
mov
jbe
push
and
sar
imul
cmp
repz
lock
cmp
movs
xchg
div
jp
outs
shl
add
jg
or
int3
stos
pop
movs
retf
mov
int3
stc
lahf
adc
and
mov
fsub
or
movs
fdivr
scas
xor
mov
lods
jp
dec
out
jge
int3
mov
shl
stos
xor
mov
pop
dec
jge
mov
icebp
iret
imul
retf
into
push
mov
cmp
lock
fscale
add
push
add
shl
push
neg
hlt
cmps
jge
and
scas
call
mov
sbb
or
(bad)
and
inc
sbb
add
inc
shl
jecxz
pop
loop
jb
dec
imul
cdq
sbb
mov
inc
inc
dec
mov
out
and
add
movs
jb
cdq
mov
inc
inc
hlt
jmp
fst
sbb
outs
adc
popf
dec
arpl
xor
rol
movs
movs
test
mov
(bad)
mov
pop
push
lock
pop
enter
sbb
fwait
dec
mov
std
jl
out
mov
into
jbe
lahf
pop
xlat
or
xchg
sbb
jge
or
lods
mov
xor
sbb
fistp
hlt
push
sub
cli
(bad)
mov
retf
out
jno
ror
pop
(bad)
mov
cmp
aas
cmp
adc
dec
in
cmps
cmps
jmp
mov
arpl
inc
iret
lahf
inc
cld
sar
icebp
es
clc
enter
dec
xchg
retf
xor
pop
retf
inc
or
adc
push
dec
mov
pop
outs
fidiv
out
pop
dec
cld
sti
(bad)
xor
fs
hlt
jp
popf
lock
(bad)
mov
ret
push
call
movs
push
jmp
arpl
dec
test
sub
add
aad
adc
clc
(bad)
jne
ds
stos
inc
mov
mov
mov
pop
dec
xchg
shr
cwde
add
xor
mov
popf
push
iret
retf
out
inc
adc
outs
popa
repnz
dec
dec
lea
fbstp
sub
jb
in
jne
xlat
push
dec
jle
fiadd
test
sub
cli
pop
xor
imul
jl
fst
rcl
lods
mov
lods
adc
mov
je
push
mov
mov
dec
xchg
outs
sbb
scas
dec
pop
mov
daa
emms
in
je
add
or
retf
push
push
cmp
cmp
push
or
xchg
mov
sbb
and
pop
gs
push
ret
rcr
push
cli
rcl
jmp
js
ss
lahf
movs
in
dec
push
int
inc
repz
push
mov
aad
popf
fcom
pop
in
pop
or
mov
pop
in
cwde
push
outs
imul
pop
repz
cmp
mov
jg
cdq
inc
cs
sahf
arpl
and
mov
jmp
jl
and
outs
or
mov
or
enterw
adc
cmp
jg
xor
clc
stos
and
je
or
rcl
rcl
mov
xchg
pop
and
sub
xor
jmp
rol
sbb
retf
adc
loope
(bad)
dec
mov
xchg
jnp
mov
xor
sub
ror
cdq
std
jns
or
fisttp
push
jg
aad
push
movs
and
addr16
fwait
packuswb
pop
pop
and
stos
push
push
adc
cs
mov
push
add
das
pop
xchg
pop
or
lea
mov
xor
mov
test
sbb
push
stc
cmp
je
jge
jae
iret
push
push
stc
enter
xchg
sti
stos
jae
xchg
fist
sub
inc
ds
mov
not
hlt
aas
mov
push
xchg
popf
jl
imul
inc
pop
shr
jmp
inc
mov
nop
sbb
xchg
cmc
fldcw
sub
inc
out
dec
cmp
test
mov
pop
inc
mov
and
inc
push
sub
retf
loop
xor
icebp
(bad)
not
mov
inc
cs
fwait
or
scas
jp
mov
(bad)
test
sub
dec
loop
pop
mov
xor
and
adc
(bad)
and
xchg
xchg
push
lds
cmp
jp
mov
loop
jne
fyl2x
movs
movsx
sbb
jae
repz
div
pop
daa
sar
pop
pushf
sbb
or
jbe
in
test
ror
adc
fcom
scas
addr16
mov
es
std
adc
popf
inc
xchg
mov
inc
imul
mov
add
in
icebp
movs
lock
add
jg
retf
imul
cmp
scas
pop
inc
mov
ins
(bad)
dec
aaa
pop
adc
call
shl
neg
into
adc
int3
es
les
sbb
out
mov
addr16
shl
pushf
cli
or
(bad)
mov
xchg
xchg
and
pusha
jmp
push
or
std
xchg
mov
xor
mov
shl
xchg
out
pop
push
sub
xchg
push
leave
jb
jb
jo
xor
xor
nop
int
xchg
and
adc
inc
fs
(bad)
mov
lds
jle
inc
cli
xor
iret
fistp
or
vsubpd
mov
or
fstp
xchg
pushf
retf
imul
repnz
push
sub
fmul
sbb
rol
add
inc
ja
das
lahf
fcomp
mov
test
into
or
data16
sub
movs
mov
daa
dec
shr
dec
cmp
das
aas
mov
hlt
ret
add
cmps
(bad)
ins
out
fsub
scas
js
sub
div
out
jle
ret
inc
cmp
cmp
pop
mov
cmc
lods
fdivr
sub
mov
test
push
fisubr
mov
fcmovbe
adc
bswap
sub
mov
icebp
cli
sub
sahf
test
inc
jle
nop
adc
mov
mov
add
imul
mov
mov
scas
pushf
stos
mov
(bad)
pop
pop
mov
push
xchg
pop
push
push
lfs
adc
push
jle
dec
jecxz
mov
bound
sahf
in
leave
xchg
jnp
adc
retf
push
jno
or
fild
xor
test
dec
nop
mov
jecxz
jne
xlat
sbb
fadd
xor
jle
dec
shl
xchg
xchg
jp
add
mov
and
sbb
ret
nop
mov
jge
je
mov
mov
add
adc
xor
sbb
out
and
dec
jmp
jl
jecxz
cdq
in
or
icebp
pop
push
and
push
aas
daa
outs
cmp
mov
jae
sub
sbb
dec
(bad)
and
dec
es
lods
outs
mov
lea
and
inc
ins
cmp
cmp
cdq
mov
(bad)
je
jmp
dec
fadd
sti
out
icebp
and
sub
sbb
sub
cmp
or
adc
jmp
loopne
sbb
ins
rol
xchg
mov
(bad)
push
or
xchg
dec
loopne
push
jp
mov
xor
imul
popf
xchg
add
xchg
xor
pop
or
inc
mov
jbe
test
stos
ja
mov
es
jae
mov
vaddss
adc
or
pop
fistp
out
sahf
add
xchg
rcl
sub
or
(bad)
xor
lods
out
ja
cmc
movs
xchg
cmps
dec
jmp
lods
idiv
or
inc
mov
mov
fsubr
pop
es
loope
jbe
jecxz
std
ret
sar
sti
call
or
push
and
cli
dec
fxch
mov
cmps
out
mov
add
icebp
pop
jmp
jp
ins
push
dec
xor
out
xchg
mov
cmp
xor
mov
sahf
(bad)
xchg
fist
mov
clc
dec
jmp
dec
mov
je
mov
pop
xchg
ret
pop
or
mov
add
sbb
shl
icebp
cwde
fwait
stos
pop
mov
outs
push
cli
test
mov
int
les
out
lea
jbe
das
sub
mov
xchg
mov
out
xchg
pop
push
lahf
inc
pusha
and
dec
and
rol
dec
inc
imul
test
cmps
mov
pop
adc
fbstp
dec
jne
or
pusha
or
fs
pop
(bad)
sti
retf
xchg
in
sub
lahf
lahf
fstp
push
popa
dec
xchg
icebp
jno
cmps
xor
(bad)
test
int
outs
sti
or
ret
hlt
add
call
fadd
pop
inc
cmp
in
push
push
jb
mov
rcr
jg
cli
stos
mov
inc
shl
mov
ss
frstor
jl
xchg
out
dec
xor
dec
add
sub
or
lds
push
imul
jmp
fadd
cmp
pop
add
pop
xor
sbb
mov
or
mulps
mov
call
jle
ins
and
cmps
xchg
or
adc
loopne
pusha
and
ror
xlat
addr16
xor
mov
rcl
push
mov
mov
pop
push
sbb
sbb
cmp
xor
fnstcw
lods
jmp
mov
dec
xchg
ror
xchg
loop
lahf
add
add
fs
cwde
in
dec
out
inc
popa
or
push
ror
pop
sub
sub
inc
into
ja
test
fild
ret
inc
mov
inc
movntps
mov
inc
add
push
pop
shl
fdivr
fs
movntps
jbe
popf
loopne
js
out
js
lds
mov
fadd
push
mov
xchg
in
out
call
push
aas
(bad)
clc
mov
push
in
pcmpeqw
neg
ret
jae
jbe
rcr
fwait
push
dec
fwait
push
push
ds
sbb
xchg
xor
scas
outs
mov
leave
aad
cmp
and
shl
push
pusha
xchg
jb
jbe
jg
push
cs
dec
icebp
sub
iret
cmc
stc
icebp
retf
push
lods
jmp
sbb
mov
push
sbb
fwait
inc
jmp
fcom
pop
cli
mov
add
hlt
or
push
in
leave
mov
jecxz
inc
jle
or
or
push
inc
mov
(bad)
xor
into
jmp
rcl
lock
jp
mov
je
in
test
aaa
adc
jb
xor
push
jns
sbb
stos
xchg
dec
pop
and
stc
mov
mov
mov
mov
mov
test
add
adc
in
add
inc
stos
addr16
(bad)
pusha
iret
cmp
test
out
int
inc
jle
mov
xlat
(bad)
bound
dec
out
sub
out
retf
sbb
mov
or
int3
test
mov
pusha
and
push
adc
test
mov
push
xor
jns
push
inc
mov
jo
ins
add
mov
(bad)
stc
call
shld
push
and
in
stc
inc
imul
xchg
inc
leave
sub
ror
jns
gs
imul
pop
mov
jecxz
popa
sti
pop
mov
pop
mov
pop
jo
pop
stc
repnz
and
cli
push
xchg
out
ins
mov
jne
mov
leave
test
fnsave
jno
and
loop
cmp
mov
xchg
cmc
sub
jae
inc
pop
add
call
jno
mov
push
jne
shl
jnp
repnz
fnstenv
mov
shl
fs
jmp
scas
scas
push
pusha
lods
les
push
cmp
test
sub
mov
aad
lds
add
neg
shr
popf
xor
jmp
inc
repnz
lock
mov
test
jne
add
pop
add
push
push
int
in
loopne
inc
test
sahf
inc
sar
das
pop
xchg
int
mov
cmp
dec
mov
cmc
cs
pop
comiss
or
data16
pop
push
aam
pop
call
cmp
or
add
jle
adc
js
out
push
mov
sar
stos
inc
jle
test
gs
clc
push
test
nop
sub
or
sbb
cmp
(bad)
psubusb
add
test
cmp
outs
outs
mov
push
and
ret
push
ret
rol
cmps
adc
push
lahf
pop
bound
mov
pushf
les
(bad)
scas
xor
out
pop
dec
imul
inc
(bad)
dec
dec
mov
dec
fimul
pop
fistp
adc
rcr
mov
not
pop
out
add
js
pop
push
fbstp
(bad)
cmp
fnstsw
rcr
rcr
adc
sbb
int
(bad)
int3
repnz
pop
inc
push
sbb
mov
test
jbe
push
js
jae
jne
dec
(bad)
add
xchg
popa
(bad)
cld
scas
push
jmp
adc
pop
add
pandn
or
cs
pop
add
mov
data16
cmps
retf
outs
and
adc
xchg
test
retf
movs
into
ss
(bad)
enter
xchg
push
sbb
ret
and
cdq
mov
adc
(bad)
push
sub
test
jns
sub
xrelease
xchg
rcr
and
add
sub
fwait
pushf
mov
mov
cmp
push
pop
xbegin
add
stos
pop
pusha
stos
in
faddp
popa
sbb
mov
shl
inc
or
pop
sti
pop
xchg
ss
clc
data16
movs
jno
xchg
leave
xchg
lods
pop
push
pushf
or
lods
hlt
clc
lods
dec
mov
mov
jno
ror
mov
sar
mov
inc
(bad)
cmps
push
mov
push
retf
clc
loopne
add
js
xchg
sti
fstp
jo
mov
xchg
mov
cmp
gs
lea
inc
pop
xor
inc
mov
dec
jbe
repnz
scas
mov
sbb
adc
scas
ja
outs
and
test
mov
mov
loopne
and
xor
dec
(bad)
cmps
xor
adc
jle
ins
xor
sti
inc
lods
mov
aam
ins
cmps
daa
out
cmps
push
sub
into
shl
inc
aas
call
nop
call
outs
or
mov
call
xor
mov
mov
cmp
push
(bad)
or
test
push
repz
fnstcw
push
test
movs
fs
add
dec
ds
pop
jmp
jecxz
inc
int3
aad
inc
mov
jnp
mov
jmp
pop
cmc
les
adc
sub
dec
aad
stos
mov
pop
adc
pop
aas
iret
xchg
mov
pop
in
mov
pop
add
jmp
jp
push
stos
sbb
cmps
jo
fcomi
push
add
push
lahf
into
jns
ja
jbe
mov
aas
mov
cli
pop
fs
pop
sti
dec
fdiv
loopne
mov
in
mov
adc
jle
es
sub
jne
stos
and
xchg
jne
add
test
pushaw
cmps
cs
adc
inc
jae
xlat
nop
xchg
jecxz
and
pop
mov
rol
retf
or
xchg
mov
sub
fcomp
pop
jmp
xchg
inc
pop
add
idiv
mov
int
and
push
jecxz
or
cmp
jbe
imul
inc
or
fist
inc
push
inc
add
int3
push
pop
push
out
sar
jb
retf
retf
jmp
push
inc
in
retf
aaa
call
pop
inc
ror
fidiv
pop
(bad)
(bad)
(bad)
sub
movs
ret
xlat
enter
and
xor
jecxz
loopne
fwait
and
imul
pop
sbb
jae
leave
jecxz
push
or
jmp
aas
sti
lea
adc
mov
rcl
sub
cld
inc
cmp
mov
(bad)
jl
and
test
shl
std
punpcklwd
push
loope
xor
(bad)
or
xchg
scas
cmc
js
daa
sbb
mov
loop
xor
fs
gs
lea
mov
pop
or
movs
and
mov
fnstenv
pop
repnz
cdq
or
nop
jnp
repz
or
sub
in
add
push
jmp
push
mov
rol
(bad)
cmc
popf
jo
ficomp
sahf
dec
cli
and
push
es
(bad)
fst
movs
and
add
sahf
dec
jmp
xchg
idiv
ret
ja
xor
push
pop
xchg
or
movs
stos
push
push
scas
jle
xchg
icebp
(bad)
cmps
enter
outs
leave
pop
fwait
adc
mov
sbb
int3
mov
pop
xor
cmp
jae
jl
or
mov
push
(bad)
mov
mov
in
call
retf
add
cmp
or
xchg
pop
pop
mov
add
dec
sbb
jecxz
jge
inc
in
mov
int3
pop
pusha
push
(bad)
retf
fdivp
ret
xor
add
mov
test
retf
scas
test
mov
(bad)
jge
jmp
mov
jo
cmp
sbb
push
lock
add
data16
inc
push
ja
popf
js
out
in
imul
in
add
xlat
mov
mov
sub
hlt
dec
add
push
scas
sub
sbb
cmps
and
push
mov
imul
mov
sub
in
sub
mov
xor
inc
dec
ret
xchg
add
fist
gs
pop
and
sub
sub
lock
loope
arpl
cmp
sbb
inc
into
xor
ficomp
sahf
sub
test
addr16
fwait
mov
neg
lods
or
stc
nop
adc
arpl
addr16
push
gs
pop
test
sbb
add
clc
imul
iret
mov
sub
jae
xchg
adc
push
inc
retf
inc
scas
add
jge
int3
imul
(bad)
(bad)
jo
ds
xchg
clc
sahf
pop
bound
mov
fisubr
ja
lods
dec
push
adc
or
shl
js
add
mov
xchg
and
xchg
ds
iret
mov
add
jns
in
sbb
aaa
shl
in
cmp
jg
adc
sbb
aam
outs
bound
clc
imul
mov
xlat
fisubr
push
ret
enter
bound
push
sbb
lock
call
sbb
mov
pusha
icebp
cmc
jg
adc
adc
scas
add
retf
pop
pop
jb
cwde
fdiv
inc
gs
mov
cmp
jle
add
test
jmp
jmp
cmp
xor
stos
jg
mov
and
fsub
loopne
sub
ret
mov
push
pop
pop
scas
test
sub
inc
xchg
inc
push
sahf
xor
sub
iret
adc
das
or
add
repz
cdq
or
scas
pop
mov
xchg
jmp
gs
pop
dec
xor
dec
ds
retf
mov
test
jne
jae
mov
call
sub
xchg
pop
jnp
push
mul
into
mov
cmps
push
ins
inc
push
add
jmp
push
ds
out
fdivr
add
mov
add
adc
jno
jae
push
mov
cld
movs
push
cmp
aas
cli
inc
jne
mov
dec
xor
mov
cmp
aaa
and
sbb
xchg
ins
adc
and
pop
xchg
push
ficomp
mov
fisubr
out
ja
xor
dec
aam
outs
mov
inc
xor
xor
mul
mov
mov
stos
fdivp
adc
std
pop
push
(bad)
jmp
cdq
push
clc
mov
call
callw
mov
cmp
adc
(bad)
ds
or
dec
out
sub
loope
fnstsw
jbe
pop
push
dec
pushf
inc
jnp
xchg
aad
aad
std
mov
jp
xor
shl
push
ficomp
xor
mov
push
dec
(bad)
stos
scas
and
mov
aad
pop
sub
mov
fs
mov
inc
mov
mov
in
pop
scas
mov
ins
inc
dec
adc
into
dec
stos
lds
lods
adc
mov
sbb
rcl
push
xor
pop
test
add
lds
or
sub
ins
repz
pop
ret
scas
push
mov
ins
popf
jp
lods
sti
add
daa
sub
pop
jae
mov
jns
pop
aam
jmp
lsl
push
dec
mul
rcr
xchg
sbb
xchg
(bad)
(bad)
(bad)
gs
adc
imul
pop
xchg
or
out
test
sbb
and
mov
out
and
pop
mov
outs
mov
sbb
sub
ss
push
hlt
xor
dec
pushf
jmp
aad
inc
in
jb
xor
mov
lea
mov
cmps
xlat
in
sahf
lods
das
ret
mov
xchg
std
jns
add
gs
pop
jbe
jo
cmp
xor
fxtract
std
ja
jo
(bad)
dec
sbb
jle
push
cmp
(bad)
pop
int
lock
sti
push
into
mov
mov
mov
shr
aad
push
mov
ror
and
fisubr
jl
int
bound
cwde
into
mov
inc
mov
adc
mov
jb
mov
or
adc
xchg
and
xlat
sbb
(bad)
stos
jp
mov
or
cmp
jmp
das
inc
cmp
das
cmc
xchg
fcom
leave
ss
aas
push
daa
xchg
aas
xor
lock
cmp
jae
push
popf
xchg
xchg
pop
dec
loopne
ja
adc
iret
inc
push
push
aas
push
jp
sahf
ds
je
call
stos
(bad)
in
dec
call
mov
cld
jne
popa
stos
imul
pop
pop
fs
pop
inc
(bad)
jp
ins
shl
sbb
sbb
adc
call
mov
aaa
sub
pop
jmp
fidivr
xchg
scas
clc
sar
pushf
dec
and
xlat
jmp
mov
mov
jbe
jo
sysenter
popa
retf
mov
adc
inc
rcl
ss
cmp
sahf
push
adc
repnz
lds
push
jecxz
leave
mov
or
shr
enter
(bad)
mov
sub
and
into
std
dec
popf
mov
or
lock
inc
(bad)
mov
sbb
sbb
adc
movs
jmp
cmp
push
mov
dec
mov
pop
aaa
idiv
rcr
ins
inc
leave
int
or
arpl
pop
pusha
inc
mov
inc
enter
or
mov
lahf
into
xchg
add
or
jb
imul
mov
shr
pop
jmp
xor
scas
(bad)
int
repnz
jmp
shl
loop
mov
lock
fsub
mov
gs
cmp
scas
dec
jo
xor
mov
enter
test
mov
jae
clc
mov
jno
and
test
das
pop
or
jmp
(bad)
js
popf
cmp
test
ds
xor
repnz
sahf
lods
mov
jge
mov
xor
pop
imul
xor
rol
cmps
and
mov
pop
xor
mov
push
mov
lahf
call
mov
outs
(bad)
jne
jmp
sub
adc
xchg
xchg
mov
pop
call
ja
in
mov
daa
scas
int
out
call
mov
add
sbb
mov
adc
push
mov
sub
icebp
cmps
adc
xchg
(bad)
or
ds
pop
push
cmp
sub
lods
je
dec
and
xor
repz
mov
xlat
jmp
push
cld
lock
pop
(bad)
cmp
arpl
push
shr
adc
cli
jg
arpl
icebp
gs
push
dec
imul
push
pushf
dec
into
mov
mov
lahf
iret
(bad)
mov
(bad)
xor
adc
call
mov
neg
or
sbb
jmp
dec
mov
shl
pop
fwait
ds
in
test
xchg
in
fsubr
jbe
push
mov
fs
mov
cmp
bswap
and
dec
loop
xor
leave
ret
stos
ins
xchg
outs
ja
les
call
clc
je
mov
push
adc
(bad)
not
pusha
add
mov
test
inc
dec
cmp
xor
test
ror
fdivp
push
rcr
rcl
dec
shr
ds
aam
push
or
retf
aaa
ds
mov
aad
mov
or
and
and
bound
push
ret
sbb
add
xchg
sti
gs
cwde
cmps
(bad)
xchg
sub
cmps
(bad)
and
cmp
sub
call
sahf
push
inc
sbb
dec
mov
pop
fist
xchg
add
add
into
inc
loopne
xor
and
not
mov
sar
int3
sahf
add
rcr
loop
and
mov
outs
pop
sbb
outs
mov
lock
addr16
or
mov
adc
in
pop
and
inc
add
lods
ins
movs
and
add
stos
sbb
gs
push
movs
sahf
lock
xchg
mov
scas
iret
add
and
inc
sti
outs
and
inc
jo
cmp
pop
hlt
push
push
in
or
(bad)
xchg
mov
sub
jmp
aas
shl
pop
adc
rcr
iret
stos
cmp
mov
popa
pop
xchg
adc
push
das
aas
pop
push
push
std
sbb
cmp
mov
div
sahf
inc
test
pushf
aam
cmc
xor
(bad)
sti
cs
push
popf
jg
mov
data16
sbb
outs
iret
cmp
idiv
jns
xlat
push
xor
push
lds
mov
fistp
in
scas
sub
ins
sub
or
jmp
inc
pop
mov
cmp
mov
or
fcmovnb
xchg
lahf
(bad)
shl
fisttp
rol
arpl
mov
pop
movs
mov
dec
xchg
or
pop
adc
test
out
mov
mov
addr16
pushf
jecxz
cli
pop
ret
push
mov
sub
sbb
pop
fmul
add
jmp
add
or
mov
shr
dec
cmps
mov
inc
mov
in
loop
js
les
push
xchg
inc
int3
pop
sub
and
es
hlt
jae
inc
mov
test
(bad)
imul
push
mov
pusha
mov
push
dec
jmp
gs
js
or
addr16
push
add
push
fdivr
jp
jmp
call
(bad)
fwait
repz
xchg
or
jno
xlat
pop
xchg
inc
add
inc
rcl
cmp
int
xchg
push
or
aas
mov
jl
xchg
out
add
cmps
icebp
arpl
and
pushf
push
aam
xchg
popf
mov
pop
pop
stos
call
mov
lea
sahf
stos
mov
pop
test
test
xchg
cmp
dec
xchg
xor
dec
outs
sub
clc
ins
and
sbb
fcomp
sub
push
jnp
not
jle
call
pop
fwait
jb
pop
add
mov
retf
xchg
out
es
int
push
push
mov
lods
jnp
add
pop
sub
test
lods
and
inc
retf
and
dec
dec
lock
popa
sub
in
iret
or
jae
outs
adc
mov
dec
mov
dec
cld
fisubr
mov
sbb
sub
sbb
push
dec
(bad)
pop
stos
jo
mov
rcr
loope
dec
push
xchg
inc
pop
push
ins
push
cmps
std
fistp
out
adc
inc
repnz
pop
push
jmp
inc
mov
mov
(bad)
and
imul
loop
inc
jo
ret
sub
mov
mov
inc
mov
sahf
mov
mov
jp
in
in
das
in
pop
jmp
jg
(bad)
pop
movs
out
lods
sub
ficomp
repz
push
cld
dec
adc
inc
mov
imul
push
dec
(bad)
int3
and
sbb
sub
jne
adc
arpl
fnstcw
and
test
jbe
das
(bad)
mov
push
stc
outs
jecxz
repz
bsf
dec
arpl
inc
js
pop
fnstcw
loopne
mov
cli
xor
sub
jecxz
push
add
loopne
cmp
mov
jl
int
dec
jg
mov
loopne
push
(bad)
sub
inc
mov
jae
and
cmc
or
out
repz
bound
push
fld
in
std
or
push
push
mov
push
data16
(bad)
imul
cwde
push
outs
push
sub
add
xchg
jle
sbb
dec
in
stos
dec
fadd
push
push
shl
mov
dec
mov
(bad)
mov
je
(bad)
sti
lea
mov
mov
mov
sub
outs
gs
push
mov
shr
push
jge
ret
imul
lahf
sub
lods
test
lock
cmp
mov
out
out
xchg
shr
cmp
inc
or
mov
push
pop
sub
sub
sbb
leave
mov
jmp
and
jns
xor
lea
fbld
jbe
xlat
dec
mov
xchg
xlat
pop
es
shl
jmp
push
or
adc
cmp
mov
cmp
scas
xchg
les
enter
lahf
jmp
pop
iret
(bad)
out
lock
sbb
les
xor
fldcw
and
popf
outs
stc
mov
mov
neg
mov
adc
push
into
cmp
rol
inc
das
test
xor
out
ja
add
lods
sti
mov
or
aaa
add
fs
mov
aam
es
jne
je
shl
xchg
in
test
jl
dec
and
cdq
jbe
aas
stos
xchg
sbb
add
cmp
imul
test
mov
cmp
xor
adc
dec
and
jecxz
sbb
pop
addr16
outs
fisubr
aam
mov
mov
push
sub
bound
cmp
sub
(bad)
(bad)
xor
mov
sub
int3
mov
mov
push
mov
test
push
test
mov
cwde
call
xchg
mov
mov
fdivr
sub
mov
shr
xor
mov
mov
mov
sahf
movs
pop
in
(bad)
xor
loop
push
cmp
and
adc
les
es
mov
xchg
jecxz
dec
sbb
push
push
or
aaa
dec
sub
or
imul
xchg
bound
or
push
iret
mov
sub
fs
loopne
fs
add
jb
movs
cmps
mov
jl
into
hlt
sub
or
or
sbb
sbb
(bad)
outs
cmp
add
clc
cmps
mov
and
dec
les
and
sti
mov
jo
xchg
jbe
xchg
pushf
mov
outs
out
sahf
xchg
fisttp
in
inc
stos
dec
sub
data16
add
mov
inc
mov
shr
daa
dec
int3
jno
ja
pusha
out
fdivp
dec
adc
and
aas
xchg
push
xchg
test
mov
mov
add
jmp
es
inc
and
inc
jmp
push
nop
enter
xchg
mov
push
add
movs
pop
iret
les
sbb
int
xchg
adc
ins
lods
mov
mov
mov
inc
cmps
clc
into
rcr
xchg
scas
mov
out
sub
adc
pop
mov
xchg
sub
xchg
xchg
jp
push
shl
(bad)
iret
adc
les
mov
lods
test
lea
ds
xchg
into
cmp
pushf
adc
(bad)
lods
shl
clc
push
dec
xchg
pop
jp
ds
add
pop
pop
aad
ds
pop
ins
mov
(bad)
popa
pusha
cmp
fldcw
mov
shr
mov
lea
mov
mov
cmova
inc
jge
bound
sti
fwait
int
push
mov
hlt
push
clc
hlt
rol
mov
mov
lods
pop
cmps
lahf
shl
mov
ins
jl
jae
adc
sub
add
test
cmp
dec
div
xchg
xchg
cmp
push
mov
sbb
adc
mov
mov
and
or
add
fsubr
mov
cli
pushf
call
xchg
lds
mov
cmc
or
rcr
dec
fnsave
or
sti
aas
test
xlat
or
out
fs
mov
fcomp
ror
int3
mov
sbb
shl
sbb
mov
(bad)
xor
(bad)
push
adc
mov
pop
jbe
ins
mov
cwde
adc
xor
mov
and
cmps
lds
fistp
push
add
jp
rol
ret
mov
or
sbb
mov
xchg
gs
fnstcw
mov
sbb
aam
sahf
jecxz
pop
mov
movs
sbb
push
stc
test
push
and
mov
(bad)
daa
jnp
xchg
adc
retf
push
sar
xor
out
inc
jle
outs
pop
arpl
and
pop
mov
(bad)
cli
leave
sbb
mov
jmp
in
xor
dec
cmp
mov
xchg
mov
pushf
mov
mov
cli
push
pop
movs
cmp
stos
dec
fstp
jnp
push
ficom
mov
repz
nop
add
mov
mov
and
cmps
cmps
hlt
js
mov
arpl
hlt
es
add
sub
inc
pop
out
div
fdivr
aaa
push
dec
mov
popa
ret
sahf
xor
xchg
push
xchg
jb
pop
mov
sub
mov
aaa
inc
pop
push
xchg
jno
jno
lds
out
cmovno
xchg
xlat
loop
popa
imul
pop
hlt
xchg
and
or
pop
addr16
dec
pop
adc
sub
call
sub
inc
mul
mov
fbstp
fisubr
adc
and
and
fwait
xchg
cwde
jmp
mov
and
mov
mov
xor
sbb
idiv
xor
retf
bound
xlat
dec
sub
sbb
fcom
repz
adc
xchg
inc
and
or
ret
pop
cmc
jg
push
push
ret
cdq
enter
jo
data16
add
mov
sub
dec
adc
cdq
out
sub
jbe
fbstp
inc
inc
enter
stos
test
pop
rcr
repz
cld
push
sbb
fsubr
cwde
xchg
push
in
xchg
inc
into
mov
pop
sar
mov
imul
fwait
cmps
call
xor
sbb
jbe
out
dec
jmp
adc
pop
inc
in
push
(bad)
lock
sbb
loope
leave
(bad)
push
pop
pop
lods
ins
stos
in
sub
mov
adc
out
in
inc
icebp
shl
jnp
ss
cld
add
sub
xchg
fstp
add
mov
stos
jb
cmp
cmps
int
shl
and
addr16
mov
mov
and
and
call
lea
int3
shl
cmp
ror
retf
lea
xor
sub
jnp
or
stos
or
cld
in
mov
lds
(bad)
(bad)
pop
jnp
push
pop
std
inc
or
fisttp
fst
and
inc
ds
mov
stos
pop
dec
xchg
outs
pop
and
sbb
imul
test
(bad)
loopne
(bad)
mov
and
or
inc
retf
add
dec
add
add
outs
push
pop
jne
pushf
test
cs
(bad)
cmp
mov
jb
and
add
(bad)
push
push
xchg
sub
and
or
fild
adc
pop
add
mov
jne
or
xchg
fistp
pushf
or
sub
data16
std
jae
and
enter
sahf
retf
dec
call
lods
addr16
xchg
nop
cmps
fidivr
inc
and
mov
leave
mov
cs
jb
dec
jno
mov
ret
mov
lea
pop
cmp
fcom
adc
movs
mov
les
inc
jg
and
xor
fsubrp
xor
mov
mov
sub
inc
xor
adc
dec
fcomp
mov
adc
std
jg
xchg
or
repz
test
ret
adc
push
sbb
and
mov
stc
daa
sub
lods
fst
cmc
das
int3
push
xor
popa
cmp
sub
sti
dec
pop
mov
dec
sar
sbb
adc
pop
pop
out
dec
js
cs
and
ins
test
sar
(bad)
(bad)
iret
mov
pop
pop
dec
mov
sahf
retf
leave
pop
ins
in
lds
ret
and
js
jbe
(bad)
push
stos
jmp
jle
mov
inc
lds
and
adc
ret
mov
int
pop
adc
test
pop
cmp
inc
popf
mov
retf
inc
ss
xchg
stos
les
outs
mov
sub
mov
mov
mov
jl
pop
adc
(bad)
mov
sbb
fiadd
cmc
jle
pusha
fs
adc
adc
pop
mov
push
add
aad
sub
mov
mov
jbe
(bad)
dec
scas
and
mov
push
enter
sti
mov
int
inc
fsubr
jo
xchg
sub
or
dec
pop
mov
pop
(bad)
xor
xor
icebp
pop
arpl
xor
or
fimul
push
inc
mov
mov
and
mov
mov
call
imul
and
jmp
inc
mov
std
fdiv
enter
loope
cs
in
xor
aas
mov
fstp
jns
mov
shl
dec
cwde
mov
adc
js
jg
addr16
mov
xchg
ds
jge
inc
mov
cmp
loope
ja
pop
sti
stos
jb
jb
(bad)
mov
add
inc
in
movs
sbb
popf
or
(bad)
call
jns
pop
fwait
aaa
xchg
(bad)
pushf
xchg
xor
ret
sbb
xchg
mov
xor
cmp
into
aam
push
dec
or
cmp
cwde
call
test
rol
rcr
sar
inc
jns
fisub
in
adc
add
repnz
mov
xor
fs
pop
movs
cs
jnp
sub
inc
adc
cs
mov
hlt
test
inc
ja
adc
mov
imul
lock
mov
sbb
mov
push
xor
mov
mov
dec
jnp
sbb
call
jns
dec
or
mov
fiadd
retf
imul
cli
xchg
sbb
jl
pop
clc
pusha
fldenv
pop
shl
sbb
enter
inc
out
add
dec
sar
call
test
mov
out
loope
mov
rol
jnp
mov
loop
pop
popf
retf
xchg
or
sub
dec
or
jns
scas
or
sub
mov
jne
sbb
jno
out
sbb
in
std
mov
xchg
call
cmp
inc
and
sub
lds
sub
scas
cmp
cwde
lea
test
lods
sbb
shr
xor
adc
mov
sub
sbb
int3
lea
pop
xchg
in
push
ret
imul
js
and
push
mov
mov
cld
outs
es
sbb
push
jo
ss
and
pop
neg
cs
(bad)
xor
xchg
les
xor
fnsave
jb
jl
xchg
xchg
cmp
loop
(bad)
mov
jnp
add
sub
xor
sub
mov
push
add
xor
ja
leave
retf
fs
ficom
sti
out
cs
jnp
out
cmps
and
pop
mov
ret
xchg
push
dec
add
inc
pop
push
xchg
and
xchg
mov
in
mov
mov
loope
dec
adc
pop
ds
dec
movs
pop
jmp
inc
mov
adc
add
dec
mov
mov
pop
shl
mov
xchg
in
bound
cmps
scas
inc
pop
cmp
cmp
js
outs
adc
xchg
mov
push
out
pop
inc
or
or
test
outs
fiadd
xor
ss
dec
(bad)
out
retf
ds
sbb
adc
aam
sbb
ret
in
push
stc
inc
inc
stos
jmp
jo
ins
icebp
push
mov
xchg
pop
dec
xor
cmp
and
daa
fld
push
pop
test
scas
(bad)
mov
xlat
rol
pop
mov
sbb
sbb
neg
(bad)
in
mov
stos
bound
add
jmp
lods
push
sahf
adc
daa
out
sub
call
xchg
bound
lea
mov
jg
jmp
clc
push
jmp
pop
aaa
mov
xchg
mov
arpl
mov
daa
lock
movs
sbb
fmul
inc
loope
adc
sub
mov
sub
push
and
(bad)
das
popf
les
fistp
sbb
inc
cmp
or
jo
out
leave
sub
call
mov
cmps
retf
aas
pop
mov
les
xchg
scas
add
xor
sbb
jl
ret
imul
mov
cmp
fwait
push
jle
xor
retf
mov
dec
inc
xchg
add
mov
outs
mov
jno
int3
dec
dec
mov
sub
xchg
dec
push
adc
mov
adc
xor
push
xchg
cs
xchg
mov
mov
stos
shr
cmp
sub
xchg
mov
add
dec
jne
cdq
cmp
mov
cs
movs
sub
loopne
mov
mov
or
call
cdq
jp
push
movs
test
adc
int3
(bad)
out
movs
test
push
mov
in
daa
inc
xchg
out
popf
pop
cmps
(bad)
jecxz
mov
popa
cld
(bad)
or
push
mov
jp
cli
and
ja
ins
cmc
and
add
aad
pop
cmc
rol
or
pop
bound
mov
in
jl
imul
cmp
scas
mov
sbb
ror
dec
call
xlat
mov
jno
test
mov
and
sbb
xchg
popf
pop
jne
mov
in
scas
scas
pop
mov
sbb
int
mov
fsubr
das
push
retf
and
sbb
jns
inc
fdivr
ret
stos
aad
or
shl
sub
pop
push
xchg
mov
jg
jo
test
dec
mov
adc
out
sbb
iret
jne
ficomp
out
mov
loopne
xchg
call
pop
jb
ins
inc
(bad)
add
xchg
xor
(bad)
imul
rcr
into
jmp
mov
sub
iret
xchg
stc
pop
bound
mov
cmp
inc
inc
sti
jnp
push
lds
movs
cmp
mov
mov
fchs
adc
dec
and
fld
jp
aad
xchg
adc
cmp
fwait
sub
in
je
ss
repz
xchg
pushf
push
cmp
push
adc
inc
out
fs
pop
pop
js
sbb
stos
sti
inc
push
bound
int
mov
add
and
and
jmp
pop
icebp
repnz
test
cmp
cmp
mov
sahf
pop
out
leave
mov
inc
ja
dec
test
aaa
movs
inc
add
ins
fdivr
hlt
jmp
adc
(bad)
neg
je
pop
xchg
loope
js
add
sub
adc
jecxz
jecxz
jecxz
push
shr
xchg
pop
cld
shl
test
inc
pop
pop
xchg
jge
out
cmp
push
jl
lods
cmps
ja
dec
inc
and
mov
mov
aad
out
inc
sbb
inc
repz
pop
retf
dec
lock
out
mov
xor
add
add
cmc
das
pop
mov
cmp
or
adc
cmp
and
js
lea
xchg
mov
push
stc
mov
imul
aam
in
add
push
fisubr
loop
not
pop
cmp
push
iret
loope
call
mov
test
mov
lods
sub
adc
(bad)
jne
adc
ins
adc
and
xchg
jnp
vmwrite
stos
(bad)
pop
retf
pop
lods
in
sbb
inc
je
std
in
mov
dec
push
sar
push
mov
(bad)
(bad)
aas
jg
sti
mov
ins
popf
pop
adc
dec
or
das
mov
cmps
stos
loope
ret
push
or
adc
fwait
out
sub
cwde
mov
jae
add
xchg
sbb
adc
sar
aad
mov
cmp
in
outs
pusha
mov
mov
adc
mov
jbe
neg
daa
fsub
nop
add
sti
jge
add
and
and
xor
popa
imul
cdq
pop
lods
imul
loopne
mov
enter
dec
sbb
cmc
and
std
push
mov
lea
jns
call
inc
loope
and
add
pop
test
and
popf
pop
dec
pop
test
jmp
jg
or
pushfw
fisubr
cmp
push
rol
and
mov
adc
cmc
(bad)
jmp
scas
sbb
or
imul
jmp
pop
adc
mov
xlat
das
iret
jo
adc
inc
inc
sbb
clc
rol
or
ins
jg
sbb
xchg
(bad)
hlt
ret
in
loope
hlt
add
pop
pop
je
push
sub
or
inc
imul
jp
inc
nop
mov
jnp
and
push
mov
jno
repnz
lea
and
es
sbb
push
xor
repnz
jnp
cmp
(bad)
sahf
lods
dec
cmp
movs
mov
mov
xchg
ret
adc
cmp
bound
sbb
add
in
cmp
jp
ficomp
in
push
xor
ja
push
xor
inc
xor
pushf
inc
pop
popa
jnp
push
pop
inc
enter
out
adc
adc
inc
call
into
(bad)
ficomp
cdq
xor
add
add
(bad)
lds
mov
ins
push
and
jg
jmp
adc
iret
push
and
mov
(bad)
jp
mov
or
mov
jnp
out
into
sbb
mov
lods
enter
pop
pop
inc
(bad)
push
sub
lahf
repz
fiadd
pop
add
hlt
int3
retf
xor
mov
out
inc
xor
popf
inc
int
into
movs
addr16
imul
jge
cdq
mov
dec
push
enter
adc
enter
xlat
in
mov
outs
ss
xor
xchg
pop
mov
jmp
adc
cmp
or
retf
mov
test
imul
outs
sub
ja
out
aaa
add
mov
inc
sbb
xor
jbe
test
or
inc
out
enter
(bad)
and
pop
arpl
mov
nop
pop
(bad)
xchg
sbb
mov
adc
mov
je
sub
mov
cmp
xor
shr
cs
out
mov
jnp
xchg
retf
dec
fimul
out
and
arpl
rcl
adc
push
fisttp
xor
cmp
cmp
mov
xor
aaa
out
aam
mov
enter
inc
dec
pop
lock
sub
dec
das
(bad)
scas
xor
jno
pop
mov
xor
pop
or
rol
out
jecxz
fiadd
xchg
jbe
jb
daa
mov
dec
stos
xor
xchg
mov
push
std
push
mov
call
cmc
lds
add
jmp
push
and
push
das
jl
or
mov
mov
or
pop
clc
fimul
jo
inc
xor
dec
imul
mov
push
test
jp
lods
js
add
xor
pop
(bad)
addr16
or
shr
inc
int
adc
pop
sub
lea
add
inc
ss
scas
call
scas
mov
fisttp
push
push
inc
cmp
fwait
dec
fld
cmp
jl
mov
fimul
or
add
ret
stc
pop
push
adc
inc
mov
adc
pop
mov
enter
fwait
clc
not
aas
hlt
pop
jns
(bad)
enter
add
xchg
pcmpeqw
cmp
fisttp
es
sub
push
push
mov
adc
mov
test
into
and
inc
das
popa
pop
lea
ds
(bad)
cmp
mov
xchg
jmp
rcl
mov
call
fwait
push
cwde
out
clc
dec
push
test
das
cwde
cmp
inc
fdiv
mov
inc
cwde
out
adc
(bad)
or
sub
ret
and
cmc
add
pop
jb
sbb
mov
fdiv
pop
jp
fsubrp
ins
mov
ja
mov
add
sub
sbb
std
xchg
outs
nop
into
fst
int
das
mov
mov
in
repz
bound
cmp
mov
mov
sti
jno
add
lock
or
cmps
ins
lahf
dec
sti
mov
cli
sar
mov
mov
cs
adc
in
sub
dec
out
dec
inc
cmp
js
clc
or
adc
xor
xor
and
mov
push
loope
xor
xlat
stc
aad
mov
out
popf
fs
arpl
(bad)
inc
adc
ins
xchg
or
out
sbb
xor
and
into
popa
fdiv
sahf
std
pop
in
mov
shr
fs
stos
sahf
lea
and
mov
loopne
and
cmc
(bad)
sbb
cmp
cmp
loopne
mov
ins
mov
cmp
fcomp
movs
cmps
int3
cmp
loope
mov
mov
ret
xchg
(bad)
cli
retf
(bad)
sti
ja
rol
(bad)
std
jno
or
mov
cmp
daa
sub
shl
and
dec
pop
dec
(bad)
mov
lods
clc
retf
cmp
mov
xor
dec
dec
imul
adc
xor
repz
pop
in
push
dec
push
xor
call
pop
retf
mov
loope
mov
add
sbb
popf
sti
xor
mov
call
out
or
push
adc
retf
aam
and
imul
xchg
iret
xchg
fcom
nop
jg
ss
mov
scas
popf
sub
mov
ja
or
lods
xchg
or
(bad)
call
mov
shld
pusha
xchg
cs
(bad)
leave
xor
stos
mov
rcl
ror
cld
xor
cmps
std
dec
xchg
pop
ret
sahf
stos
sbb
inc
mov
sahf
cs
inc
sbb
push
add
and
jmp
dec
inc
mul
enter
cmp
cwde
mov
ja
adc
data16
ret
out
inc
mov
popf
dec
jbe
in
outs
pushf
lods
add
jns
push
add
outs
(bad)
sahf
sub
ds
repnz
icebp
add
pusha
fwait
jbe
cmp
mov
scas
pop
repz
pop
pop
inc
cmps
out
sub
test
add
jb
in
lods
pop
jb
cmp
js
add
inc
push
stos
dec
ins
sub
sub
(bad)
xlat
fcmovbe
daa
inc
push
movs
mov
shl
leave
and
xor
add
sub
xor
add
fidiv
retf
imul
mov
iret
retf
or
imul
or
mov
xchg
mov
loopne
out
out
jg
mov
pop
mov
mov
push
xchg
div
lods
jecxz
add
pop
mov
(bad)
pop
repz
aam
das
lods
sbb
pop
jbe
out
mov
pop
push
arpl
pop
add
aas
nop
cmp
jo
push
mov
mov
jl
and
push
mov
shr
mov
sub
(bad)
icebp
mov
addr16
cwde
sbb
and
out
outs
dec
mov
popa
in
out
sti
mov
cmp
push
add
pop
sti
inc
push
rcl
inc
mov
push
out
in
pop
sti
ds
cmp
xor
add
jmp
jl
mov
imul
addr16
repnz
hlt
cwde
add
fnsave
mov
sub
and
fdiv
scas
and
das
call
movs
or
dec
inc
fwait
in
inc
cmp
jns
pop
xchg
(bad)
and
repz
scas
aad
pop
imul
lea
out
mov
mov
mov
out
add
rcr
in
repz
xlat
adc
pop
mov
mov
stc
sbb
cdq
jl
sbb
pop
test
mov
pop
xchg
xchg
xchg
jbe
fcomp
scas
imul
pop
loopne
sbb
pop
mov
dec
gs
xchg
lods
in
mov
mov
cmp
int
push
call
xor
retf
jge
imul
cs
loope
in
ror
out
sbb
pop
xchg
add
test
cmp
jns
xchg
mov
pop
movs
xor
xchg
mov
mov
add
and
dec
sbb
aad
sub
xor
jecxz
dec
jg
cld
les
push
js
ins
xchg
add
bound
sub
out
es
mov
(bad)
xchg
jmp
into
mov
outs
(bad)
iret
aam
sub
inc
sbb
outs
jge
mov
das
(bad)
hlt
mov
cwde
xchg
mov
dec
mov
jns
sbb
lods
ins
rcr
jno
dec
clc
pop
jg
pusha
mov
enter
cdq
cmp
sahf
sbb
jmp
jns
outs
push
out
mov
std
je
dec
dec
mov
pop
daa
mov
sti
rcl
sub
(bad)
mov
(bad)
cmp
fstp
jnp
lock
cld
mov
sub
mov
fcomp
aas
inc
aas
or
or
lea
and
fidiv
cmp
ss
and
(bad)
test
add
adc
les
dec
stc
sub
mov
push
jg
push
and
aas
xor
cmp
pop
jp
pushf
lsl
stos
and
mov
cmp
sar
gs
stc
out
cld
mov
lock
loope
clc
rcr
or
into
movs
push
xchg
jmp
xchg
cmps
pop
shl
fdivr
test
lea
aaa
imul
nop
rcr
test
mov
mov
pusha
sbb
sbb
(bad)
mov
pop
mov
and
sbb
lods
test
jno
loop
push
pop
arpl
ds
pop
add
xor
cwde
cmp
mov
mov
call
pop
mov
pusha
call
imul
jo
das
fsub
call
dec
sbb
fstp
movs
jno
xchg
sbb
dec
jmp
inc
mov
pop
es
dec
sar
stos
mov
clc
not
enter
or
adc
mov
inc
mov
loope
mov
ja
ins
jg
adc
gs
inc
arpl
sti
into
repnz
push
pop
and
nop
adc
mov
sub
ds
cwde
popa
fild
mov
ins
aad
adc
mov
and
inc
jmp
(bad)
sub
hlt
jnp
add
mov
sahf
in
mov
cmps
lock
mov
fild
xchg
sub
adc
test
jg
jmp
sbb
and
or
aaa
test
dec
pop
push
clc
inc
or
es
xchg
pop
outs
push
outs
test
out
pop
call
clc
inc
cdq
out
xchg
cmc
cli
mov
icebp
push
fidiv
mov
stos
cld
sbb
stos
or
push
xor
xchg
nop
fwait
out
aaa
pop
das
(bad)
in
mov
ins
pop
jg
icebp
push
jecxz
and
shl
outs
jmp
ret
div
jmp
mov
mov
lds
ret
or
add
mov
pop
sbb
or
ins
or
ja
mov
test
movs
inc
pop
(bad)
and
pusha
mov
push
jns
fiadd
mov
(bad)
fild
outs
(bad)
push
movs
out
mov
or
sub
pop
mov
mov
repnz
pop
jae
imul
jne
mov
xchg
test
mov
cmc
scas
sbb
or
push
dec
xor
(bad)
in
jmp
jecxz
pushf
mov
lods
jle
iret
jg
ficomp
lea
push
or
scas
sub
out
pop
inc
inc
scas
in
in
fisttp
cmps
adc
inc
mov
xchg
imul
arpl
jns
loopne
jno
lock
js
mov
jle
mov
sbb
test
or
fstp
clc
adc
mov
ficom
or
mov
repnz
xchg
aas
bnd
inc
xor
ret
mov
inc
xchg
lea
lods
xchg
int3
mov
mov
outs
loop
xor
jo
outs
into
fst
aam
mov
ins
mov
test
movs
pop
inc
stc
pop
pop
ja
adc
mov
rep
sub
stos
popf
fwait
pop
int3
ds
fwait
mov
call
mov
jb
sti
fidiv
adc
sub
and
cmp
jle
jle
shl
in
std
lods
sar
inc
int3
inc
xor
sbb
sub
in
call
in
out
sub
(bad)
mov
mov
xor
outs
cli
ror
ja
sbb
aaa
pushf
dec
xchg
pop
jnp
inc
jno
adc
test
nop
movs
out
push
es
cwde
adc
mov
dec
mov
cs
pop
rcr
mov
add
jb
retf
mov
rcl
mov
pop
mov
popa
out
mov
xchg
pop
jl
iret
xor
nop
xor
out
aaa
xchg
jmp
sbb
imul
jo
je
inc
repz
cli
lods
fisub
push
les
push
sar
in
pusha
adc
xor
into
fisub
iret
mov
sub
sbb
rep
cs
psrad
push
mov
out
pop
mov
loope
add
mov
pop
shr
dec
or
retf
(bad)
call
xor
pop
adc
jmp
sbb
rcr
sub
dec
fisubr
pop
pop
sahf
pushf
sbb
fidivr
push
fwait
out
dec
mov
lahf
into
pop
push
jecxz
loopne
pop
outs
add
push
pop
mov
cld
jmp
mov
xor
loopne
ret
xchg
daa
fisubr
out
out
mov
and
push
fist
or
fidiv
retf
or
loope
int3
jl
xor
jg
mov
mov
int
or
mov
xlat
mov
leave
js
lods
popf
inc
push
popf
into
(bad)
out
scas
or
aam
ret
sub
in
jmp
je
mov
adc
mov
lar
mov
pushf
in
push
xchg
mov
sbb
loop
or
sub
push
or
repnz
jne
inc
push
and
iret
fdivr
and
mov
pop
push
xchg
push
sub
add
inc
retf
cmps
enter
popf
test
cs
inc
inc
in
and
ror
aas
cmp
fistp
pop
fs
scas
mov
ret
repnz
gs
(bad)
mov
sbb
sub
fisub
inc
or
popa
push
jmp
loope
in
ja
sar
rol
jge
bnd
mov
mov
call
aad
pop
jne
sbb
lea
jl
sub
cmp
cmp
test
shl
call
xor
jno
mov
mov
sbb
and
into
adc
or
bound
cmp
jecxz
popf
enter
es
lods
pushf
add
inc
or
inc
ins
outs
jg
pop
inc
push
xchg
in
out
push
aam
sbb
rcl
mov
clc
stos
and
jmp
pop
pop
mov
inc
addr16
sti
jmp
push
imul
sbb
retf
scas
mov
dec
jmp
inc
and
outs
xor
fisttp
sahf
add
jns
rcr
push
int
add
sub
push
cmps
cld
cmp
mov
mov
mov
repnz
mov
pop
adc
cld
imul
adc
in
push
cmp
sbb
repz
out
mov
rcr
dec
es
ins
sub
push
sub
movs
push
and
adc
mov
push
dec
cli
pop
(bad)
test
jae
sbb
nop
aam
and
rcr
push
and
test
repnz
jns
enter
rcr
pop
cmp
push
cmps
or
mov
mov
(bad)
rcr
rcr
pop
sub
mov
popa
mov
push
sbb
xchg
(bad)
adc
bound
and
jo
cmp
icebp
jae
push
fst
hlt
push
cdq
inc
lods
shr
shl
sbb
je
fdivr
dec
push
out
mov
jno
dec
sbb
fidiv
jp
mov
into
or
xor
outs
(bad)
xchg
iretw
das
aad
sbb
mov
push
rol
aad
push
jmp
push
or
cmp
loope
es
sahf
dec
jae
jmp
mov
add
lods
xchg
cmp
xchg
out
mov
mov
loope
ss
in
inc
sbb
mov
pop
push
xchg
test
jl
fld
ins
and
xchg
jp
(bad)
jmp
fs
xchg
pop
ins
mov
adc
imul
and
out
idiv
rcr
fstp
fsub
cli
fidivr
push
imul
imul
addr16
push
stos
mov
inc
and
and
xor
sbb
cmp
(bad)
(bad)
mov
test
dec
popf
cmp
int
push
dec
dec
fbld
add
imul
iret
cmp
(bad)
fadd
add
jbe
ror
sbb
ins
mov
je
sbb
xchg
fld
stc
(bad)
int
pop
xor
retf
sub
clc
int
test
lock
dec
ds
fnstsw
cmps
pop
pushf
and
out
cmp
stos
cmps
cs
loope
and
pop
mov
sub
test
adc
mov
jp
mov
(bad)
ficom
inc
dec
es
pop
(bad)
sbb
out
mov
sbb
pslld
cld
push
fucompp
nop
ins
jl
(bad)
fdivr
inc
pop
fimul
sub
dec
fincstp
ins
xchg
and
mov
into
sbb
mov
call
jo
jb
mov
and
dec
xor
inc
inc
sub
cmp
into
mov
sub
rcr
xchg
dec
aas
aam
ja
sbb
and
loopne
lahf
dec
stc
and
fadd
mov
mov
out
mov
dec
add
jg
jmp
std
jbe
enter
add
int3
push
adc
repnz
stos
fnstsw
(bad)
mov
loope
cld
pop
std
lds
test
pushf
push
xor
cwde
dec
popa
pop
popa
lods
mov
pop
jo
mov
inc
lods
xchg
aad
test
(bad)
cmc
pop
dec
mov
mov
mov
adc
or
pop
dec
pop
or
inc
pop
rcl
dec
rdmsr
mov
pusha
and
aaa
inc
inc
clc
push
sbb
into
movs
lods
fisubr
cld
xor
das
xchg
inc
div
sub
test
(bad)
cmp
test
jecxz
add
pop
push
outs
(bad)
mov
push
push
xor
rol
shl
daa
xor
dec
xchg
mov
imul
mov
pop
(bad)
rcr
sub
inc
jmp
push
nop
aam
in
fistp
movs
jns
cwde
neg
pop
rcr
fldcw
test
pop
lods
pop
push
bnd
xlat
mov
cmp
call
loope
pop
fadd
shr
loope
jne
fcom
les
rcl
sbb
lods
add
xchg
js
xchg
ja
or
push
aaa
scas
push
mov
cwde
loopne
mov
test
repz
xchg
adc
push
push
scas
dec
push
lea
lods
fs
aas
pop
ins
out
push
pop
iret
das
push
pop
aam
sbb
ret
jbe
xor
retf
add
enter
push
aam
call
repz
xchg
dec
push
das
les
pop
(bad)
imul
pop
jl
cmp
test
pop
cmp
add
jmp
aad
test
lock
xchg
sbb
sub
cmp
outs
cmps
inc
dec
pushf
pop
sbb
call
arpl
rcl
in
data16
sbb
xlat
cmc
popf
fisub
fnstcw
jp
popa
fdivr
out
ds
test
mov
movzx
clc
xchg
adc
xchg
xor
loope
xor
gs
adc
jae
mov
iret
push
or
js
hlt
loop
into
fldenv
fnstenv
cmp
mov
(bad)
sahf
addr16
sbb
xlat
fld
fxch
(bad)
pop
mov
cwde
jnp
cs
or
mov
gs
loope
sub
pop
shl
jg
in
mov
adc
mov
aad
loopne
pop
pop
adc
mov
adc
pushf
jmp
movs
sub
call
js
mov
pop
dec
inc
ret
jb
out
fisttp
and
push
pop
jae
into
ss
out
mov
mov
ins
xor
shr
mov
loopne
xchg
xchg
mov
pop
pop
clc
fist
test
data16
pop
xchg
cmp
xor
mov
mov
outs
xor
fadd
test
and
xor
jne
pusha
jno
sub
and
imul
jl
call
pop
push
adc
rol
xchg
ror
xchg
dec
and
fld
leave
retf
jno
inc
cmp
pop
cwde
inc
inc
retf
inc
aam
and
and
int3
aam
push
(bad)
out
or
ret
lods
push
lea
in
in
xor
sbb
retf
jge
fiadd
xchg
std
sub
dec
fmul
stc
lea
sub
sub
xchg
test
loop
shl
inc
and
xchg
jmp
cmp
loopne
mov
jne
adc
int3
arpl
hlt
mov
mov
mov
xor
jecxz
jae
movs
repnz
jbe
js
es
popa
loopne
mov
aam
imul
addr16
push
test
inc
jecxz
mov
scas
stc
cdq
mov
mov
xchg
mov
not
jp
div
aam
adc
adc
icebp
jmp
xchg
push
hlt
or
mov
sbb
cmps
pop
mov
inc
mov
(bad)
setne
pop
pop
lock
dec
or
mov
jb
inc
add
ficom
sub
add
jb
cmc
pop
loop
push
retf
shr
in
xor
int3
jmp
or
mov
sub
mov
mov
xor
or
adc
das
pop
jp
jno
dec
push
stc
add
xchg
dec
cmps
fnstsw
aas
push
(bad)
sbb
cmps
(bad)
mov
add
push
aam
pop
mov
mov
mov
mov
mov
or
mov
fs
fist
xlat
jno
xchg
bound
pop
push
int
dec
jp
xor
mov
imul
mov
and
ins
adc
shl
pop
adc
sahf
xor
pop
fcom
pop
ins
push
sbb
jbe
cwde
scas
mov
ret
sub
or
inc
inc
cmp
xor
enter
push
fiadd
push
and
inc
and
test
pop
xor
xlat
loopne
leave
push
repz
and
cmp
ds
rcl
and
xchg
mov
sub
int3
ss
sbb
dec
lock
jns
rol
jl
shl
fcmovu
enter
gs
test
out
fld
test
inc
xchg
in
xchg
jmp
jns
mov
arpl
add
in
jmp
jnp
js
fwait
inc
test
repz
push
jmp
lahf
mov
in
stc
enter
cmp
lock
ja
leave
jge
jg
mov
mov
scas
sub
sub
pusha
sahf
mov
loop
pop
sbb
aam
mov
cmp
xchg
pop
cmp
lods
sub
cwde
call
adc
mov
jo
fild
arpl
fild
cwde
or
push
mov
xor
push
inc
imul
mov
data16
adc
enter
adc
or
mov
mov
repnz
pop
and
(bad)
cmp
inc
or
(bad)
fnstcw
pushf
cdq
test
jo
or
scas
or
dec
fisttp
rcl
fimul
lods
loopne
retf
ret
das
xor
and
add
and
push
xor
hlt
lods
dec
dec
and
pop
xchg
js
add
fcom
mov
fdiv
adc
lahf
inc
outs
mov
into
ret
loopne
cmp
pop
mov
out
fcom
(bad)
neg
(bad)
shl
adc
fimul
sub
adc
dec
sub
xchg
add
sbb
jnp
cmp
adc
daa
imul
mov
mov
xchg
mov
cmp
lock
mov
xchg
ins
enter
in
pop
push
dec
pop
cld
and
int
xchg
in
pusha
sub
inc
test
add
sbb
xchg
imul
add
push
pop
dec
clc
sbb
shl
fucomi
loop
cs
sbb
and
mov
retf
test
push
add
sbb
loop
pop
ss
and
mov
fimul
add
xchg
mov
enter
retf
xchg
or
sbb
aas
inc
rol
sub
jmp
xor
sbb
and
push
sbb
dec
or
sbb
hlt
fidiv
sar
in
push
xchg
mov
das
je
lods
fimul
jns
out
aas
imul
addr16
pop
out
xlat
mov
jo
xlat
jmp
aaa
mov
jmp
mov
mov
(bad)
leave
int3
adc
and
xor
retf
ret
in
fidiv
les
data16
ins
sbb
cmp
sbb
rcl
mov
mov
inc
ficomp
(bad)
(bad)
imul
push
mov
repz
jne
or
imul
test
push
mov
cdq
xchg
mov
jmp
daa
pop
pop
pop
aad
adc
into
mov
call
dec
push
mov
mov
adc
xchg
mov
pop
cmp
push
xor
cli
fdivr
ret
push
sbb
inc
push
mov
jp
not
sbb
cmps
cld
xchg
pop
int
leave
int
xor
inc
mov
inc
fmul
jo
lods
cmp
fs
test
cld
jns
call
mov
cs
sbb
mov
pop
int3
cmp
push
or
imul
dec
xchg
iret
jae
aad
xchg
xchg
loop
cmp
jle
dec
and
jno
jae
lea
test
mov
add
iret
repz
bound
mov
jae
dec
pop
pop
or
xchg
fdiv
lahf
mov
dec
fwait
push
xchg
enter
lea
add
pop
rol
sbb
and
in
test
fldenv
out
xor
sti
mov
or
test
jne
ss
push
sbb
add
pop
xchg
pop
frstor
(bad)
cs
fidivr
mov
and
sub
dec
ret
imul
(bad)
pop
xchg
pusha
sbb
sbb
stos
mov
retf
mov
ja
jno
xchg
(bad)
lods
ss
xchg
test
sbb
mov
iret
imul
hlt
and
cmps
pop
stc
pop
and
call
push
outs
inc
mov
stc
xchg
data16
jbe
jge
dec
imul
push
push
int3
sub
push
xor
adc
loop
in
pop
xchg
(bad)
shl
xchg
jo
mov
add
fs
push
add
push
addr16
je
aas
jb
xchg
mov
adc
aad
jne
xchg
xchg
jae
pop
adc
movs
imul
jmp
inc
xchg
adc
xor
mov
inc
pushf
aas
loopne
sbb
inc
push
rcl
mov
(bad)
cmp
fucompp
in
dec
daa
aaa
xor
pop
pop
popfw
mov
inc
sbb
gs
mov
push
jnp
xchg
inc
mul
jmp
popf
cmp
push
rcr
lea
test
aam
push
sar
test
mov
ins
jb
xor
pmaxsw
sbb
jbe
mov
pushfw
cmps
call
mov
jbe
pushf
sub
mov
add
mov
ret
push
inc
mov
in
popf
fdivr
das
push
mov
mov
push
scas
test
jg
sub
xchg
aam
fld
push
adc
jb
mov
cmp
cmc
dec
mov
test
push
mov
dec
cli
xor
repz
inc
(bad)
stc
pop
fbld
(bad)
aaa
das
popf
enter
jmp
push
fwait
sti
xlat
fild
mov
pop
mov
inc
dec
sbb
mov
xlat
stos
inc
xchg
or
sub
push
cmp
sbb
jmp
mov
push
cmps
dec
leave
cmc
leave
jo
idiv
syscall
sahf
cwde
push
stos
mov
test
cld
scas
sbb
pusha
outs
mov
add
out
push
shl
pop
mov
mul
mov
dec
dec
sbb
sahf
cdq
push
dec
sub
movs
repz
cmp
xor
(bad)
mov
or
pop
sub
icebp
push
aam
xchg
retf
test
add
stos
jne
adc
ja
jg
add
outs
jp
sbb
mov
mov
sub
aaa
fldpi
loopne
je
push
cmp
pop
js
cmp
xor
cmp
push
mov
aas
ins
enter
mov
retf
cwde
dec
sub
stos
(bad)
fcom
sub
std
cmp
pop
cmps
adc
sub
or
movs
(bad)
cmp
(bad)
mov
pmaddwd
pop
dec
gs
mov
push
iret
adc
pop
jo
in
sbb
arpl
sbb
xor
and
rcl
push
push
or
int3
jmp
sbb
js
jbe
jo
ret
(bad)
call
leave
(bad)
cs
adc
adc
popa
dec
cmp
xor
mov
mov
inc
mov
adc
and
out
mov
adc
mov
xchg
lods
xlat
mov
push
adc
push
jns
lods
mov
inc
call
xor
adc
aas
xchg
dec
test
in
cmp
jle
xchg
cmp
fild
xchg
ins
push
arpl
mov
call
mov
pusha
mov
adc
xchg
lea
cmp
enter
mov
cs
sub
and
aad
mov
outs
cwde
or
jnp
fisub
mul
cmp
mov
mov
push
(bad)
test
mov
(bad)
mov
addr16
or
fsub
pop
out
jmp
pop
sahf
push
sbb
push
add
sub
(bad)
hlt
sar
loope
and
pop
ins
xchg
aam
enter
pop
or
push
stos
scas
aas
in
adc
mov
sahf
lahf
sub
test
jo
xlat
test
add
xor
gs
xchg
aam
mov
jbe
push
fist
bound
pop
test
mov
push
js
sbb
xor
adc
vaddpd
fwait
das
xor
pop
imul
add
cmp
icebp
lds
push
rcl
xchg
dec
mov
(bad)
cmp
xor
push
call
sub
xor
inc
mov
imul
mov
lock
fidiv
out
fsubr
xchg
arpl
out
sbb
cli
lods
and
fimul
mov
imul
mov
pusha
mov
mov
fild
retf
mov
lahf
push
outs
pop
jge
mov
repz
push
mov
pop
fnstsw
lds
dec
push
test
sbb
fsubr
and
mov
or
push
dec
push
dec
inc
mov
mov
hlt
dec
xor
jnp
mov
lods
loope
ds
push
pop
inc
mov
and
jno
or
inc
push
je
mov
or
mov
sub
lea
ret
jo
jbe
add
lahf
adc
lea
je
mov
mov
mov
test
mov
pop
mov
or
dec
mov
lods
test
cwde
fdivr
cmovno
cmp
add
fldenv
lea
xchg
adc
mov
cdq
cli
(bad)
popa
push
call
add
push
xor
cld
mov
mov
adc
xor
imul
fisub
jns
inc
(bad)
int3
adc
add
pop
inc
scas
dec
ror
mov
rol
in
(bad)
test
jp
mov
(bad)
mov
pushf
movs
mov
dec
or
inc
gs
push
inc
mov
fsubr
inc
jg
imul
fcomi
mov
mov
fs
sub
sub
jmp
in
pushf
repnz
push
fs
push
nop
das
lods
pop
lods
sub
das
jmp
push
sbb
imul
retf
cmp
cmps
aad
cmps
push
addr16
pop
or
xor
xor
push
dec
and
adc
es
pop
inc
data16
in
fwait
inc
bound
adc
jmp
vpunpckhbw
repz
in
retf
pushf
daa
mov
and
mov
int
shr
add
pop
jmp
mov
mov
in
int
shr
mov
shl
(bad)
sub
ret
sub
fdiv
ret
sub
icebp
jl
hlt
ret
shl
test
xlat
mov
mov
repz
les
and
sbb
test
adc
dec
test
bound
hlt
mov
mov
inc
(bad)
(bad)
cmps
mov
dec
cmp
mov
mov
mov
xor
nop
adc
daa
jecxz
(bad)
add
push
fs
xor
cmp
mov
inc
fs
scas
sbb
aam
mov
jle
mov
and
push
mov
xor
add
adc
inc
cmp
xchg
add
cmp
sub
rep
cwde
jb
push
sahf
shl
stos
cld
dec
es
data16
dec
(bad)
jmp
vsubps
rol
retf
int3
iret
add
test
lods
push
mov
dec
push
loope
ja
xor
mov
jns
mov
jle
test
mov
mov
push
sbb
mov
leave
jns
mov
and
sub
mov
repz
dec
sub
xchg
pop
jge
ja
push
in
jne
jp
xor
in
dec
cmps
jp
jmp
rol
(bad)
push
into
pop
and
movs
dec
icebp
mov
cmp
sbb
push
mov
gs
inc
addr16
test
je
cdq
movs
adc
mov
cmp
dec
push
mov
mov
or
cs
push
inc
mov
ret
mov
std
mov
sub
or
iret
fs
xchg
add
cmps
loopne
cmp
push
cmp
mov
and
jp
pop
bound
retf
push
add
das
inc
mov
out
jae
nop
fs
mov
mov
cmp
sahf
mov
lods
sbb
(bad)
mov
push
cmp
push
inc
bound
rcr
xchg
ss
xor
xchg
jo
sar
jb
out
inc
mov
inc
mov
lods
sbb
push
push
jae
pop
and
pop
cmp
leave
cmp
es
(bad)
adc
(bad)
add
mov
xchg
xchg
inc
test
outs
cld
out
pushf
cmp
fdivr
imul
pop
pop
add
movs
cmc
adc
fadd
imul
int
stos
daa
ja
dec
dec
sar
inc
xlat
push
shl
(bad)
dec
movs
dec
mov
fidivr
adc
loopne
shl
xchg
out
(bad)
jno
jo
lods
retf
xchg
mov
repnz
(bad)
push
sub
cmc
fidiv
dec
ins
dec
scas
gs
into
gs
hlt
mul
popa
or
pusha
not
outs
mov
or
out
jle
dec
pop
pop
addr16
xor
sbb
inc
retf
xchg
retf
xchg
xor
jmp
ins
add
add
imul
test
or
xor
and
jno
and
stos
dec
adc
adc
outs
(bad)
mov
sub
call
es
jae
lock
leave
cmp
data16
dec
inc
pop
cmps
or
jns
xor
cmc
inc
dec
fcmovnu
out
fisttp
jle
ja
aam
jo
sbb
popa
mov
push
cmp
pushf
loop
in
in
movs
enter
fs
mov
ret
lahf
cmp
out
lea
icebp
jmp
je
mov
xchg
xchg
loope
loope
xchg
arpl
sub
mov
mov
out
or
xchg
cmp
aam
mov
(bad)
ror
in
add
sub
cmp
add
inc
mov
mov
dec
cld
jns
cwde
mov
pop
in
lods
and
jp
inc
pop
lock
leave
xchg
(bad)
je
fidiv
repnz
push
(bad)
repnz
dec
stos
and
sub
cmp
lahf
(bad)
ja
sbb
jp
ror
enter
sbb
fdivr
mul
xor
jge
dec
loopne
test
jo
loope
mov
pop
push
int3
leave
dec
je
or
sub
mov
(bad)
hlt
mov
pop
daa
fwait
sti
movs
out
in
scas
sbb
push
jle
jl
xor
dec
mov
sub
rcl
jl
mov
dec
mov
cmp
or
xchg
mov
pop
sub
out
and
and
nop
pop
outs
mov
ror
push
hlt
mov
xchg
inc
xor
ficom
leave
inc
ins
les
sub
mov
outs
sbb
dec
movs
adc
add
shr
cmp
jnp
push
cmp
push
lds
sbb
mov
cmc
jp
xchg
dec
rol
jno
adc
test
ret
(bad)
and
xor
scas
test
push
call
lods
adc
data16
es
push
ins
sti
stos
ja
or
out
test
cli
push
inc
fidiv
push
push
sbb
cli
sub
jecxz
cmp
fimul
sbb
dec
mov
sub
sub
push
pop
mov
rcl
inc
and
or
int3
loope
popa
hlt
mov
cwde
mov
cmp
icebp
jns
or
aam
fld
push
push
lods
cld
or
or
push
dec
cmp
xchg
es
lods
xchg
add
jg
xchg
mov
and
pop
mov
out
(bad)
jecxz
mov
outs
cld
jg
push
push
inc
out
lock
xchg
jae
and
imul
cmp
mov
mov
repnz
imul
rol
jmp
fucomp
lods
in
cmp
in
std
and
fld
sbb
in
fwait
les
fwait
lods
cmps
in
push
data16
ja
mov
mov
data16
adc
int3
outs
loopne
ss
push
pusha
jae
aad
ins
(bad)
mov
movs
arpl
jg
mov
stc
in
cdq
sbb
add
mov
cli
xchg
mov
xchg
dec
adc
ins
xor
push
lds
mov
cmp
jne
fistp
imul
bound
mov
pop
inc
xchg
add
test
repnz
es
pop
into
sahf
sub
add
cmp
repnz
and
shl
dec
mov
push
addr16
adc
sbb
pop
enter
dec
je
test
xor
inc
jb
sub
mov
or
cmp
mov
cmp
jb
int3
call
pop
fiadd
cmp
rcl
sub
imul
shr
xchg
shl
test
adc
cmp
sub
rcr
mov
xchg
sub
js
push
lahf
add
xchg
sub
jle
inc
stos
jbe
je
xchg
cli
retf
and
pop
cmp
test
mov
jae
jae
push
xor
inc
xor
test
outs
test
mov
(bad)
retf
or
dec
pop
ins
addr16
dec
pusha
jb
retf
sub
pop
mov
add
out
xchg
and
mov
sub
jne
div
(bad)
jmp
call
pop
fadd
adc
sub
adc
xchg
pop
push
data16
repnz
pop
inc
into
mov
cmc
add
xor
cmps
fld
faddp
ss
movs
pop
mov
and
pop
or
pop
xchg
mov
into
xor
mov
unpckhps
ins
xchg
sub
test
mov
adc
dec
mov
push
pop
ss
adc
fsubr
sbb
inc
push
icebp
pop
shr
popf
inc
movs
dec
jno
add
xor
and
mov
or
js
jmp
cmp
outs
add
stc
stos
lods
pop
in
mov
pop
cli
pop
cs
cmp
mov
dec
(bad)
loopne
popf
add
push
daa
jle
dec
sbb
fnstsw
and
nop
adc
mov
mov
test
adc
fcom
add
call
xchg
xchg
call
mov
cmp
fisub
or
jle
iret
pop
(bad)
and
mov
jmp
das
mov
and
repnz
leave
sbb
ret
xor
lods
call
sub
add
cdq
sub
mov
sbb
movs
scas
jg
sbb
pop
in
std
test
stos
xor
js
pop
in
test
push
adc
(bad)
fld
les
jle
jnp
or
call
fldcw
inc
pop
pop
lahf
test
add
cdq
into
lds
rcr
add
mov
dec
adc
mov
inc
pop
cmp
dec
push
(bad)
icebp
dec
xchg
pop
ud0
fsub
lock
xor
out
inc
dec
mov
inc
mov
xor
xlat
into
push
imul
cmp
xor
inc
int
adc
in
stos
(bad)
jae
(bad)
push
int3
sti
(bad)
pop
push
mov
addr16
push
dec
add
mov
mov
in
adc
xor
rsqrtps
(bad)
(bad)
lahf
ja
add
std
out
leave
dec
jle
and
dec
fdivr
lods
dec
ins
mov
movs
(bad)
xchg
retf
ss
xchg
test
lds
jae
mov
inc
out
outs
repnz
pop
fisub
xor
sbb
fmul
mov
cwde
or
adc
outs
das
mov
cmps
hlt
int
fst
mov
(bad)
fdiv
popf
iret
test
xchg
scas
add
(bad)
jl
xchg
pop
and
dec
test
ins
cmp
loop
xor
mov
pop
cmp
push
sbb
mov
int
pop
popf
cmp
addr16
lods
leave
cmp
jl
jno
pop
cmps
loope
xchg
test
or
push
push
sti
shr
(bad)
stos
push
cmp
out
ins
pop
ret
fld
ds
ret
movs
sub
stos
push
iret
(bad)
dec
sar
sahf
pop
add
dec
std
jnp
in
or
add
mov
sbb
shl
scas
mov
pushf
ja
stc
jecxz
lods
sbb
retf
(bad)
fs
(bad)
xchg
cdq
sub
push
push
test
dec
sub
mov
aaa
in
cmps
retf
dec
mov
ja
imul
pop
icebp
inc
adc
adc
adc
or
ret
sub
and
in
push
cmc
sahf
jg
jbe
mov
and
(bad)
cmc
movs
int
leave
xor
xchg
mov
sbb
cld
out
inc
mov
imul
hlt
cmp
dec
shr
xchg
mov
call
dec
xchg
adc
dec
lods
enter
pop
call
sbb
test
mov
jge
das
(bad)
sbb
mov
pop
aam
outs
jns
xchg
dec
(bad)
imul
call
fcomi
xchg
cmp
jne
popa
add
add
cmp
push
ins
dec
mov
stos
jle
int3
les
lea
jns
pop
popf
and
das
cmps
dec
(bad)
cmp
pmulhw
xor
(bad)
bound
sti
dec
shl
call
mov
ins
lahf
jle
ficom
popf
sar
mov
getsec
test
lea
daa
and
push
inc
add
and
add
sub
xor
and
or
dec
cli
add
jnp
test
adc
sbb
int3
hlt
in
cmp
fwait
sub
retf
push
push
xor
xchg
and
adc
lock
les
push
push
pop
ins
mov
or
jge
mov
dec
sub
lock
jmp
rcl
pop
mov
jae
inc
fs
jmp
popf
dec
cmp
pop
mov
jecxz
shl
push
jmp
sbb
cmps
dec
push
popf
or
sbb
mov
loope
dec
imul
or
ret
repz
and
lahf
daa
(bad)
jl
lods
push
icebp
pop
(bad)
push
(bad)
cmc
mov
xor
jmp
fimul
test
lar
sub
jmp
mov
ret
cdq
sti
scas
lods
pop
ins
xchg
jns
cli
pop
fidiv
adc
add
pusha
ret
icebp
xor
add
dec
jo
push
test
in
and
xchg
mov
sbb
pop
push
cmp
das
pop
iret
fst
lds
add
gs
in
cmp
jge
movs
or
pop
fisttp
aad
pop
pop
adc
xchg
rol
adc
mov
call
test
sbb
inc
sub
fs
(bad)
and
push
push
add
add
ror
rcl
movs
movs
mov
push
xchg
test
mov
xchg
push
(bad)
xor
xor
fdivp
push
int3
pop
(bad)
dec
push
cdq
(bad)
sbb
aad
dec
cmc
inc
out
ret
scas
imul
retf
sub
mov
out
cmp
mov
xlat
rol
fwait
lea
imul
fistp
or
cmp
call
aas
jle
xor
pop
or
ror
repnz
xchg
adc
dec
rcl
scas
jo
cwde
repnz
sub
push
adc
pop
mov
mov
mov
push
mov
inc
xor
addr16
movs
pop
push
jbe
sub
pop
cmp
aad
(bad)
dec
sub
mov
sbb
out
or
lds
retf
or
movs
mov
or
add
jae
stc
xlat
xlat
bswap
jo
mov
add
add
sbb
jne
(bad)
cmp
(bad)
mov
mov
push
ror
and
xor
les
inc
pop
pop
push
scas
sub
mov
xchg
cs
or
lods
mov
xor
xor
dec
fwait
push
or
cs
push
jmp
mov
and
rcr
inc
in
add
ret
mulps
(bad)
adc
xchg
mov
mov
dec
sbb
jge
cmp
mov
and
inc
cmp
fsubr
or
cmp
xchg
loopne
or
pop
or
inc
jno
sbb
div
sti
adc
dec
in
mov
xor
(bad)
sub
ins
dec
test
(bad)
pop
(bad)
mov
cmps
mov
add
add
jp
jbe
mov
xor
movs
call
mov
aas
add
mov
dec
add
add
inc
sbb
dec
stc
(bad)
mov
outs
mov
ss
sub
xor
loope
jl
jmp
pop
inc
jae
jle
dec
popf
xchg
in
cmp
push
test
mov
or
fwait
adc
out
push
popf
jmp
cmp
dec
ins
mov
adc
test
jmp
dec
pop
dec
adc
(bad)
xor
dec
out
inc
sub
pop
in
inc
lods
sahf
stc
xchg
je
dec
ud1
test
push
mov
cmc
jmp
call
pop
pop
imul
add
ror
xor
scas
jns
mov
pop
add
push
push
xchg
inc
inc
mov
add
cld
icebp
inc
pop
sbb
pinsrw
lea
add
pushf
inc
les
cwde
int3
call
stos
jmp
dec
inc
shl
sahf
pop
mov
xchg
xor
sbb
jge
cmp
pop
push
je
pop
nop
mov
inc
dec
stos
mov
dec
test
mov
stos
fstp
or
sti
lea
outs
xor
aad
pop
add
inc
sub
cdq
loope
(bad)
imul
(bad)
lods
adc
sub
push
xchg
les
push
fsub
jge
mov
xor
mov
adc
mul
das
outs
add
xchg
es
xchg
pop
or
sbb
cmp
iret
cmps
movs
scas
cwde
cmp
ror
movs
xchg
dec
mov
test
inc
pop
ins
xchg
std
fidivr
mov
mov
sub
sbb
mov
repz
jno
push
pop
mov
mov
les
jl
inc
jo
jmp
aas
sub
jge
sahf
push
es
push
int
ror
adc
jmp
bswap
jl
fimul
or
ficomp
pop
call
(bad)
fadd
xor
loopne
in
push
jns
pop
pop
xlat
push
jns
sbb
inc
xchg
out
add
neg
sub
pop
dec
push
push
pop
xlat
mov
test
mov
jge
pop
retf
or
push
or
dec
adc
xchg
sub
cmp
fwait
inc
pop
dec
cmp
and
or
(bad)
in
cli
mov
xlat
sub
xchg
test
cmp
cmp
clc
mov
push
pushf
rcl
sti
push
jmp
sbb
cmp
jae
dec
push
dec
clc
or
mov
push
jnp
stos
mov
pop
add
ret
xchg
mov
ins
iret
mov
stos
jae
fsub
adc
pop
cmp
xchg
jecxz
push
or
icebp
in
call
imul
mov
loop
outs
fidiv
xor
lds
cmp
mov
sbb
sbb
fimul
xchg
(bad)
clc
jle
ret
shl
add
adc
pop
jns
jo
icebp
mov
sahf
xlat
stc
aam
aas
mov
ret
std
and
fs
or
xchg
retf
push
fidiv
fwait
cmp
xchg
(bad)
out
movs
ret
das
mov
mov
inc
adc
push
cli
cs
fnstenv
mov
dec
jl
pushf
add
lds
or
scas
cmp
sbb
in
out
outs
fld
stos
aad
mov
lods
add
lds
leave
lods
ret
sub
ret
or
out
xchg
ins
pop
das
aas
(bad)
jp
add
jbe
adc
mov
pop
cmp
adc
cli
ret
sbb
cmc
sub
(bad)
jmp
mov
rcr
jb
mov
icebp
sbb
dec
test
es
xor
add
inc
or
popf
add
cmp
push
mov
and
cmp
cmc
add
jg
xor
pop
inc
push
sti
push
cmp
(bad)
dec
mov
push
dec
jg
cmp
lahf
sbb
sbb
aaa
fidiv
inc
ffree
pop
adc
cmp
ins
sbb
das
int
ins
aad
or
test
fld
mov
inc
stc
pop
repz
add
mov
les
sub
sub
fs
push
sbb
sar
jmp
sti
dec
clc
cmps
mov
dec
mov
mov
inc
(bad)
cmc
cmp
mov
inc
and
clc
je
mov
rcr
sbb
sub
xchg
sub
stos
retf
xchg
inc
pop
stos
imul
sub
add
shl
add
sbb
add
sar
xchg
or
hlt
xchg
fwait
and
jb
cmp
jp
mov
hlt
xchg
jl
jno
jmp
xor
lea
test
add
stos
repnz
sbb
stc
mov
xchg
or
mov
sar
jb
and
jo
cmc
cmp
shl
aad
bound
xlat
push
mov
cmps
jp
add
mov
ret
(bad)
xchg
loope
cmc
repnz
loopne
or
(bad)
cmp
jecxz
jne
adc
add
fsubr
stc
mov
lds
add
bound
xchg
out
daa
adc
mov
sub
cmp
es
loope
sub
mov
jg
leave
add
and
dec
jp
sbb
test
inc
push
add
jbe
push
adc
lods
test
ss
xchg
movs
into
cmc
inc
sbb
mov
es
jmp
std
xor
mov
and
xchg
sbb
mov
cmp
xchg
mov
je
imul
add
outs
fndisi(8087
mov
adc
push
mov
dec
sbb
mov
scas
sti
retf
(bad)
(bad)
push
mov
inc
(bad)
loop
xchg
mov
cmp
and
in
add
mov
add
and
mov
pop
cli
jmp
mov
outs
cmp
xlat
(bad)
cmp
retf
je
ret
add
fwait
les
out
jecxz
jmp
mov
jb
jne
cmp
xor
push
and
icebp
xor
ret
ror
aas
mov
push
cwde
mov
test
push
inc
pop
jmp
sahf
mov
xchg
pop
add
fldenv
jo
dec
jb
adc
mov
cmp
add
xor
mov
ss
xor
into
xor
push
adc
(bad)
cwde
les
sbb
xchg
mov
(bad)
mov
mov
ror
sbb
cmp
adc
scas
inc
and
adc
frstor
es
ret
fs
pushf
outs
clc
pop
int
ficom
in
add
push
ds
repnz
out
mov
and
dec
loop
nop
nop
mov
jle
call
mov
cmc
fstp
in
sub
sbb
rcr
dec
sbb
(bad)
out
mov
arpl
or
out
aaa
adc
leave
adc
sbb
xchg
ja
push
pop
add
adc
xchg
test
jmp
push
fidiv
jo
sbb
xor
or
lock
and
pop
xchg
iret
mov
and
xor
(bad)
stos
pop
sbb
pushf
cmp
ss
in
movs
cmps
(bad)
and
dec
xor
and
fnstsw
js
inc
fwait
mov
or
(bad)
mov
push
(bad)
sub
adc
adc
xchg
mov
stos
test
ss
das
cdq
xchg
pop
out
xchg
enter
add
push
or
imul
retf
mov
lock
mov
gs
xlat
test
adc
xchg
addr16
aad
arpl
pop
hlt
xchg
xor
or
cs
mov
das
and
jg
(bad)
push
push
pushf
mov
imul
mov
out
outs
push
retf
adc
(bad)
cmp
pop
cmp
(bad)
pop
dec
push
mov
call
xchg
add
leave
std
out
clc
stc
or
icebp
mov
push
cli
fcom
clc
in
fsubr
movs
add
shl
cwde
iret
mov
idiv
sar
popa
test
sub
cwde
inc
or
cli
int
inc
mov
push
mov
add
popf
pop
retf
in
and
aas
dec
ins
ret
jno
adc
(bad)
out
fidiv
ins
lea
xchg
pop
xchg
or
and
push
cmp
daa
sub
test
daa
repnz
xor
pop
inc
adc
sub
jge
movs
pop
imul
rol
fimul
or
fld
mov
sti
fst
dec
mov
sbb
dec
jmp
loopne
mov
and
xor
lods
cli
(bad)
adc
daa
es
push
mov
clts
lods
or
mov
push
call
out
test
cmp
in
xchg
push
mov
pop
pop
pop
or
mov
sbb
loope
add
lods
inc
or
jl
cwde
dec
mov
cmp
movs
pop
fwait
int3
jne
(bad)
aas
leave
lds
jbe
push
ret
pop
jae
inc
dec
sub
jno
xchg
test
daa
shr
and
ret
in
repnz
inc
fild
or
fist
inc
or
ficomp
nop
(bad)
cmc
push
in
jb
sbb
outs
sub
in
and
jle
rol
out
call
mov
jno
pop
cli
icebp
into
ja
das
cwde
shl
pushf
dec
or
pop
nop
test
mov
dec
(bad)
scas
jnp
loop
ror
mov
retf
adc
push
loope
and
add
data16
push
(bad)
dec
inc
mov
dec
xlat
add
jno
xor
inc
fnstenv
cmp
jmp
inc
mov
sahf
xchg
pop
sub
mov
adc
mov
jp
xchg
je
fst
pop
jmp
push
dec
call
jo
jae
sti
jmp
xor
ror
leave
sbb
pop
and
lock
or
nop
or
addr16
leave
fild
adc
sbb
push
arpl
cmp
cmc
data16
imul
pop
retf
jne
inc
imul
xlat
jnp
xor
sbb
jg
xchg
or
idiv
cwde
or
xchg
xor
dec
aaa
push
xlat
fstp
sub
xor
and
sbb
inc
fiadd
xor
add
cmps
cmp
inc
test
(bad)
ss
(bad)
mov
push
push
jo
xor
jbe
retf
bound
(bad)
(bad)
dec
fld
mov
sbb
cs
aas
mov
pop
shr
jl
push
dec
sti
retf
add
mov
icebp
rcl
pop
mov
retf
ror
or
jl
bound
ror
aam
lahf
stc
pop
stos
jmp
fidiv
mov
xchg
add
push
or
cmc
call
in
sar
xor
das
xor
inc
mov
dec
or
fnstcw
test
movs
fimul
neg
sub
cmps
xor
push
add
test
lods
popf
in
out
repz
es
mov
sub
mov
les
xchg
bound
fldlg2
(bad)
dec
add
mov
mov
inc
repnz
ss
das
jmp
mov
xchg
mov
call
xchg
add
out
sti
dec
daa
lods
adc
xchg
gs
cwde
out
fmul
xor
ficom
or
push
dec
jb
cmps
dec
mov
je
std
pop
js
mov
pop
fsubr
pop
out
rcl
out
das
add
dec
or
adc
pop
jge
jbe
push
sbb
and
add
sub
out
dec
and
ffree
fwait
arpl
cmp
sub
inc
call
inc
cmp
fisttp
sti
fidivr
sbb
vpmacssdql
prefetcht2
jne
xor
stos
jns
cmp
mov
mov
call
out
out
add
pop
fwait
jbe
cwde
jbe
sub
dec
sub
adc
xor
sbb
sbb
repz
loopne
push
lahf
fimul
fs
push
sbb
out
cdq
pop
xor
test
jle
xchg
(bad)
pushf
shr
outs
out
cdq
mov
dec
fld
mov
iret
mov
test
cmp
sub
jmp
test
lods
mov
mov
inc
add
aad
xchg
add
jecxz
jne
lods
sub
cmps
jl
and
std
jb
and
and
stos
lods
in
mul
ret
clc
cli
cmp
pop
retf
jbe
pusha
cmp
and
into
jns
leave
and
xor
adc
or
mov
outs
add
mov
add
stos
repnz
repnz
mov
ds
xchg
test
dec
pop
push
nop
adc
push
cmc
xchg
push
or
pop
shr
add
int
loop
sahf
xchg
sbb
stos
add
popf
or
add
aam
(bad)
ret
push
sub
push
or
fadd
jmp
or
mov
inc
ins
cli
fisub
xor
pop
and
xchg
hlt
in
add
dec
and
or
and
test
std
or
sbb
sbb
add
add
repz
fbstp
jne
cmps
push
add
hlt
cmp
das
jbe
dec
sbb
and
push
popa
cmc
sar
dec
js
push
xor
jmp
je
xchg
adc
iret
cld
into
or
shl
and
xor
daa
jo
mov
jle
fmul
and
mov
dec
in
pop
jmp
cdq
iret
dec
fnstenv
add
push
imul
jg
ficomp
(bad)
xchg
(bad)
fdivr
adc
retf
in
es
ret
test
xor
lods
ret
jmp
fst
inc
mov
sub
or
(bad)
mov
nop
mov
test
cld
adc
jecxz
addr16
jge
mov
dec
int3
fcomp
test
out
icebp
or
inc
test
dec
(bad)
popf
mov
sbb
xor
mov
fiadd
in
in
xor
mov
add
push
and
add
sbb
ss
mov
cmc
dec
cs
xchg
mov
sbb
fwait
jne
pushf
popa
jg
xchg
gs
inc
and
mov
cli
mov
sbb
test
or
push
push
rol
retf
fadd
(bad)
mov
call
xor
sahf
sub
push
push
(bad)
fild
fcmovbe
inc
xchg
loop
or
jmp
test
fxch
jo
mov
push
in
sub
inc
push
adc
pop
ss
in
inc
xor
push
mov
out
pop
popa
mov
call
mov
ret
shr
arpl
sbb
pusha
mov
retf
push
push
adc
clc
(bad)
in
scas
cmps
not
loopne
mov
pop
int
and
data16
stos
aad
outs
repnz
add
fcmovnbe
loopne
mov
ss
stos
cmps
jo
es
js
ror
inc
add
iret
adc
cs
cli
xor
mov
sbb
lock
sub
mov
pushf
adc
lods
ss
cmps
addr16
dec
xlat
inc
jp
push
and
xor
pop
inc
sub
loope
jns
jmpw
mov
xor
idiv
(bad)
loope
stos
mov
xchg
(bad)
push
jmp
xor
add
out
dec
inc
int3
or
in
and
out
into
(bad)
cmp
adc
inc
push
retf
ja
les
lock
push
outs
mov
(bad)
mov
mov
push
xchg
call
dec
cs
outs
lods
lahf
into
or
pushf
sbb
loope
sar
mov
gs
sbb
and
jp
(bad)
(bad)
push
dec
or
xchg
add
sbb
icebp
bound
pushf
scas
mov
gs
inc
int
(bad)
outs
cmc
push
adc
and
mov
push
scas
and
sar
outs
in
sbb
addr16
or
imul
and
nop
and
xchg
xor
ficomp
scas
in
jmp
xchg
je
das
loop
test
add
(bad)
(bad)
mov
jmp
mov
pop
xor
loop
inc
xlat
pop
test
call
loopne
out
xor
mov
(bad)
mov
pop
jg
push
sti
sub
xchg
inc
enter
(bad)
es
shl
inc
or
ss
and
add
push
and
add
fwait
and
xchg
mov
push
push
cdq
mov
cmp
xchg
cmp
adc
enter
fstp
dec
add
popa
cwde
inc
movs
mov
neg
sti
push
cmp
push
into
push
out
call
pop
test
and
and
je
adc
ss
push
cli
test
fimul
mov
xchg
(bad)
xor
(bad)
sub
clc
push
lods
lock
call
ror
into
jo
popa
mov
pop
(bad)
fwait
jmp
mov
mov
mov
pop
sbb
sbb
sub
push
inc
out
add
xchg
shl
pop
fstp
clc
add
sub
cld
push
retf
aad
out
mov
or
cmp
dec
hlt
inc
sbb
imul
push
daa
jne
ins
(bad)
std
push
lods
jmp
arpl
and
jb
mov
in
pop
cld
scas
jmp
push
stos
rol
retf
push
push
fisubr
push
sbb
ins
(bad)
sub
or
out
pop
push
sar
sahf
xchg
add
push
sub
fwait
mov
cmp
imul
fisub
mov
cmps
jge
daa
iret
test
push
ret
cmp
popa
sbb
sahf
fdiv
mov
je
xor
xor
pop
cmp
mov
xchg
add
test
xchg
scas
lea
pop
lea
jo
cli
lock
imul
ret
mov
mov
pop
mov
fistp
outs
mov
into
aas
les
mov
sub
and
fbstp
dec
push
rcr
out
scas
cmp
cmc
(bad)
je
mov
xor
sbb
jnp
nop
add
add
mov
popa
in
xchg
movs
(bad)
pop
(bad)
and
add
imul
push
dec
push
bound
lods
inc
ror
sub
movs
lods
push
sub
xlat
push
aas
lea
inc
test
mov
xor
arpl
retf
mov
push
or
mov
loope
sahf
shl
out
mov
fst
xchg
out
mov
sahf
(bad)
fcomp
sbb
gs
inc
call
fisubr
jge
lock
push
xchg
(bad)
loopne
and
xchg
adc
push
xor
js
xchg
xchg
mov
retf
jno
popa
dec
add
call
push
test
and
push
outs
xor
jns
sub
xchg
cmps
dec
mov
in
mov
daa
retf
fs
push
lea
cmp
inc
mov
ja
iret
ret
xchg
or
mov
mov
push
jbe
sbb
jle
or
push
out
in
ret
or
and
hlt
jl
jg
std
scas
scas
rol
add
(bad)
and
fucomip
ins
push
inc
es
sub
fcomp
cmp
xor
lods
(bad)
jle
ins
jns
or
push
je
iret
lahf
mov
push
push
inc
ret
xchg
mov
push
enter
push
xchg
addr16
das
das
es
jmp
inc
dec
cmp
pop
repz
scas
shr
xchg
xchg
dec
and
(bad)
scas
(bad)
fnsave
sbb
mov
adc
into
call
(bad)
sbb
stc
adc
mov
mov
jmp
data16
mov
outs
(bad)
sti
dec
dec
retf
out
imul
ret
mov
lahf
sub
mov
inc
dec
popf
std
out
mov
je
xor
xor
jmp
jmp
inc
pop
sbb
inc
(bad)
hlt
fsubp
sar
inc
in
loop
out
sub
jl
loope
cmp
xchg
std
test
loopne
daa
shl
mov
movs
aaa
add
push
call
inc
test
je
cmps
xor
inc
clc
into
movs
jge
ins
cmps
jns
sbb
ret
cdq
xor
mov
stos
cmc
push
rcl
repz
pusha
(bad)
adc
sub
push
push
popf
cmp
in
mov
dec
xor
cmps
xchg
push
jmp
pop
das
hlt
xchg
imul
ss
ror
add
out
sub
xchg
enter
ins
ins
jae
adc
mov
js
ss
retf
xchg
adc
lock
mov
and
ret
daa
(bad)
mov
mov
pop
loopne
add
movs
mov
jno
loope
test
mov
xchg
std
xchg
inc
add
add
iret
fist
push
imul
cwde
pop
popf
inc
mov
inc
pushf
mov
xor
jmp
pop
in
out
cmps
sub
(bad)
jno
xor
cmc
fst
je
pushf
dec
add
lods
into
dec
adc
sub
outs
mov
jae
pop
adc
sub
loope
jnp
jmp
mov
loope
xor
push
test
repz
sbb
ins
in
add
shl
inc
sub
sub
cmp
mov
(bad)
mov
loopne
sbb
push
xchg
icebp
push
inc
mul
loope
repnz
je
cli
mov
jmp
jno
std
lds
sbb
scas
inc
fsubr
arpl
pop
outs
xchg
out
push
xchg
clc
xchg
jl
xchg
icebp
mov
les
stc
dec
rdtsc
cs
cmps
lahf
cmps
mov
(bad)
mov
mov
add
cmps
jecxz
scas
adc
add
or
(bad)
jbe
stc
push
xor
cmps
or
in
jmp
or
xor
xchg
(bad)
gs
and
mov
int
in
jmp
and
bound
inc
dec
std
dec
sbb
out
push
dec
push
pushf
aam
mov
out
pop
fisub
add
leave
add
ds
dec
stos
fwait
icebp
(bad)
(bad)
fst
ss
cmp
mov
mov
sbb
out
rcl
inc
popa
fwait
dec
popf
mov
es
cmp
jle
push
popa
pop
iret
bound
in
aad
test
lds
movs
inc
push
inc
sbb
add
or
pop
stos
call
mov
push
fwait
adc
out
push
dec
out
sbb
arpl
sar
outs
or
stos
jge
push
dec
and
cmp
ror
push
iret
das
lahf
xchg
call
pop
and
cmp
lock
mov
aad
dec
or
sub
ss
push
mov
leave
push
outs
pop
sbb
jmp
dec
jnp
imul
adc
pop
xor
mov
push
jnp
pop
out
mov
mov
outs
jne
into
call
cmps
or
inc
pop
adc
adc
cdq
lods
fs
mov
out
ret
div
inc
aam
fwait
mov
mov
(bad)
sbb
sti
fs
int3
lea
or
dec
cmp
in
cli
loopne
icebp
mov
out
cmp
or
mov
shr
jne
rcr
cmp
sub
test
in
sub
inc
out
jmp
imul
mov
and
push
sbb
mov
cmp
add
add
adc
ss
stos
mov
cwde
jbe
adc
lods
adc
gs
mov
or
leave
add
xor
xor
xchg
push
lock
retf
je
or
sub
push
xor
pop
xchg
retf
cs
sub
mov
pop
dec
int3
jo
aaa
dec
outs
cmp
or
mov
jb
jg
std
out
call
ins
pop
jl
mov
stc
jg
add
mov
add
popa
push
cdq
xor
add
mov
dec
xchg
dec
sbb
and
and
(bad)
pop
mov
stos
sub
mov
fwait
repnz
sbb
call
adc
push
jmp
adc
mov
adc
sub
outs
mov
dec
mov
rcl
add
out
shl
push
push
mov
fistp
xchg
ja
push
jecxz
push
sub
pop
imul
hlt
mov
fistp
ss
inc
mov
push
scas
push
mov
rcl
(bad)
mov
jl
mov
neg
inc
js
(bad)
pop
fstp
adc
into
out
cs
mov
cmp
mov
call
cmps
mov
push
mov
ret
es
xchg
lea
mov
daa
push
xchg
mov
mov
cmp
in
std
jge
shl
nop
stos
iret
fld
lods
int3
mov
push
jp
push
and
test
adc
movs
pop
mov
adc
pop
je
mov
shr
dec
fwait
mov
push
adc
loop
jb
mov
cli
pop
push
jb
cmps
or
cmp
gs
loope
push
push
adc
aam
jae
mov
mov
(bad)
jnp
daa
push
cwde
xlat
sbb
outs
push
cmc
fstp
add
arpl
cdq
cmps
mov
shl
cmp
pop
mov
jl
sub
cli
inc
int3
push
dec
mov
sub
jmp
loope
pop
aas
mov
push
imul
xlat
adc
fist
imul
movs
push
je
jge
mov
inc
stc
fcmovbe
aaa
mov
out
mov
mov
mov
mov
add
cmp
cmp
clc
sbb
xchg
dec
sahf
not
call
sub
stos
xor
add
add
(bad)
hlt
push
pop
mov
mov
aas
loopne
not
inc
mov
mov
call
pop
xchg
xor
adc
or
pop
xchg
out
mov
stos
daa
mov
mov
call
aad
std
mov
lods
mov
cmps
push
scas
jns
lds
pop
retf
outs
mov
add
je
sub
ja
pusha
mov
sbb
mov
or
cmp
pop
test
jne
mov
jb
shl
push
es
sub
xor
mov
push
add
aas
(bad)
gs
in
xchg
hlt
js
cmp
(bad)
dec
and
shl
add
adc
stos
out
and
pop
sbb
jno
add
inc
(bad)
xor
scas
adc
xchg
jp
dec
aam
xor
push
js
adc
in
mov
sar
inc
jae
ret
ins
jae
mov
packsswb
or
mov
fwait
inc
cli
push
mov
ins
pop
jmp
push
int3
lahf
in
jo
xlat
sub
inc
jmp
add
ret
mov
sub
cmp
add
daa
jp
cmps
mov
jbe
inc
inc
fistp
add
xchg
xor
push
xor
in
cmove
stos
mov
scas
imul
adc
sahf
jbe
sub
sar
xchg
mov
mov
lods
(bad)
cdq
push
mov
lods
sbb
in
shl
cmp
sbb
test
(bad)
sti
call
lods
js
lock
sahf
mov
fmul
lock
js
mov
shr
xor
xchg
sahf
or
push
imul
imul
out
cs
ret
jl
rcl
xlat
aam
cmp
dec
(bad)
cmp
xchg
fdiv
or
(bad)
mov
(bad)
push
outs
push
cmc
fisubr
lock
add
mov
or
dec
test
xchg
mov
cmps
and
jge
jmp
aad
in
mov
dec
jmp
mov
dec
cdq
aad
pop
mov
xchg
pop
retf
xor
movs
repz
rcl
or
xchg
out
in
mov
fnstenv
and
mul
out
and
es
sbb
sub
(bad)
cmps
and
inc
out
add
call
cwde
and
mov
js
adc
test
stos
and
mov
mov
dec
pop
pop
mov
icebp
rcl
dec
dec
adc
es
mov
das
es
jns
jbe
js
or
push
cmp
or
jno
pop
dec
out
mov
iret
inc
int3
sti
or
leave
mov
daa
clc
mov
jbe
fwait
int3
xlat
in
(bad)
mov
dec
in
lods
or
mov
xlat
push
xor
xchg
and
dec
neg
adc
pop
sub
push
loopne
push
adc
inc
pushf
in
ins
fst
xor
jmp
out
push
call
dec
(bad)
cmp
cmp
mov
mov
aad
fisttp
cmp
xor
push
add
in
adc
fs
or
in
jno
mov
mov
pusha
daa
mov
scas
outs
add
xchg
inc
test
inc
nop
sub
packssdw
add
xchg
xor
cmp
in
jbe
and
fst
or
sbb
push
pop
sub
data16
out
mov
pop
sar
and
(bad)
stc
add
out
pop
push
mov
sub
fisttp
or
jge
fwait
or
dec
and
lea
or
mov
dec
shl
jl
jl
mov
mov
add
in
mov
sbb
and
add
nop
pop
push
mov
and
test
add
stc
lock
sbb
push
test
mov
sub
loope
gs
mov
(bad)
fs
xchg
sbb
fnstsw
push
inc
adc
pop
stos
pop
pusha
xchg
jle
or
dec
les
and
or
add
ins
mov
adc
xor
jp
pushf
cmp
push
data16
add
imul
popa
xchg
add
int3
cmc
loope
or
xchg
sbb
sub
in
sub
stos
push
stc
inc
jg
add
cmp
mov
xor
lods
in
jno
xor
inc
(bad)
pop
rcl
popf
push
sahf
mov
(bad)
cmps
es
pop
pop
mov
(bad)
jp
jae
out
scas
pop
mov
jne
cmp
xchg
cmp
sub
sub
aaa
and
push
jp
in
jmp
repnz
mov
movs
push
pop
pop
jle
sub
inc
add
movs
sar
ret
pusha
ret
cmc
or
dec
sti
repz
mov
jne
icebp
dec
lock
sbb
sbb
xlat
jmp
pop
lea
test
dec
sahf
in
fst
fwait
xor
dec
jbe
and
jp
fwait
mov
mov
arpl
ror
dec
push
gs
mov
add
sub
ret
ja
adc
ins
cwde
fst
add
add
and
repz
jnp
fldcw
push
icebp
sub
fnstsw
sub
sbb
inc
hlt
xchg
mov
data16
xor
dec
inc
cmp
pop
jg
ss
or
(bad)
sub
mov
mov
fbld
minps
movs
ret
test
cmp
ror
fidiv
mov
push
xchg
fwait
and
mov
sub
scas
repnz
inc
sbb
pop
jl
loop
pop
(bad)
xchg
dec
into
adc
cmps
pushf
les
inc
xchg
add
xchg
and
mov
dec
push
pop
cdq
ret
ret
mul
xchg
push
call
adc
cmps
mov
cmp
xchg
aad
vcvtsd2ss
in
and
inc
sub
daa
dec
add
cs
jno
loop
scas
icebp
pop
jnp
fadd
sub
xlat
movs
adc
adc
or
out
xor
lods
xchg
imul
jp
mov
mov
pop
out
arpl
(bad)
js
fidiv
inc
test
popa
push
retf
repnz
into
mov
sti
xor
int3
in
cmp
pop
rcl
lea
xor
data16
xor
mov
inc
sbb
push
mov
fcmove
mov
or
add
(bad)
sbb
jmp
mov
adc
leave
lds
lock
(bad)
mov
push
popa
adc
xor
ror
push
add
jo
pop
xchg
sub
lock
int
les
xchg
sbb
std
mov
push
jmp
clc
jp
adc
rcl
sahf
or
std
mov
mov
jo
inc
ins
jl
mov
retf
inc
fist
addr16
sti
(bad)
jg
shrd
movs
(bad)
fsub
shl
ret
inc
push
sbb
pop
lea
(bad)
xor
movs
sbb
mov
loope
lods
inc
and
ror
test
mov
cmps
adc
jb
push
into
xchg
add
repnz
out
stos
and
jmp
arpl
daa
sahf
imul
(bad)
dec
hlt
mov
pop
add
mov
scas
loop
push
rcl
sbb
cmps
aaa
push
add
push
call
fild
push
mov
inc
or
mov
cs
pop
mov
sti
or
cli
cli
daa
jns
add
jg
sbb
mov
jg
outs
add
sub
pop
ins
retf
out
enter
mov
jns
dec
jae
xor
fs
push
inc
dec
fstp
(bad)
stc
cmp
cmp
xchg
in
movs
call
ja
repnz
nop
daa
sbb
jnp
movs
(bad)
rcr
xchg
cdq
or
inc
loope
dec
outs
retf
dec
mov
xchg
pop
mov
mov
xchg
adc
jle
add
jns
xchg
call
mov
int
mov
fldcw
mov
inc
add
inc
jo
dec
in
xchg
adc
out
pop
xor
in
bound
int
push
jbe
dec
add
movs
sbb
lahf
jmp
(bad)
xchg
mov
lock
mov
jp
pop
xor
xchg
popa
movs
add
xor
loope
dec
mov
movs
(bad)
fsub
in
adc
push
xor
and
inc
add
inc
mov
ret
popa
aaa
mov
pop
xchg
leave
push
in
inc
xchg
fild
xor
mov
daa
arpl
movs
adc
mov
jbe
inc
hlt
pop
xor
popf
in
add
dec
xchg
in
add
(bad)
xchg
retf
push
or
sub
jne
adc
pop
sub
jae
inc
call
sahf
adc
fwait
jmp
push
cmc
xor
jo
jns
dec
cs
daa
mov
scas
iret
push
sub
sbb
lds
(bad)
xchg
xor
ins
sahf
mov
add
(bad)
enter
xchg
or
sub
xlat
lods
xor
fmul
push
mov
js
popa
jecxz
or
add
push
movs
retf
enter
dec
nop
dec
adc
imul
retf
ds
cdq
inc
mov
std
fidiv
adc
(bad)
arpl
call
xor
adc
mov
push
(bad)
ins
inc
jg
cmp
(bad)
dec
adc
popa
xor
cld
and
aas
cdq
outs
js
shl
mov
lahf
cmp
test
bound
aas
and
rol
sbb
loop
adc
pop
mov
pop
imul
int
or
pop
cmp
mov
test
push
js
sbb
xor
scas
sub
pop
movs
cmp
sub
push
pop
xlat
jne
cmps
xlat
and
les
jne
adc
out
xchg
fisubr
mov
pop
pop
sbb
out
(bad)
or
out
in
push
enter
jp
enter
xchg
push
mov
test
sbb
pushf
scas
test
pop
enter
sub
add
sar
fcmovu
push
dec
pusha
push
out
popw
xor
xor
cmp
jge
sbb
in
inc
jg
dec
sub
jmp
ins
(bad)
test
enter
cmp
out
cwde
push
mov
int
push
mov
(bad)
xchg
adc
jmp
mov
and
inc
clc
stc
fnsave
loopne
inc
data16
or
es
mov
(bad)
fcom
mov
fcom
icebp
fadd
cmp
or
stos
pushf
xor
call
mov
or
stos
(bad)
mov
test
pop
call
push
dec
add
mov
mov
imul
(bad)
repz
mov
mov
mov
ds
bound
xchg
fs
inc
pusha
adc
dec
cmp
xchg
cmp
push
test
pushf
pusha
stos
ss
(bad)
fisubr
sub
test
jl
and
mov
and
fadd
mov
mov
out
xor
mov
inc
jmp
test
in
pop
cmp
and
mov
leave
jno
call
inc
mov
hlt
les
pop
neg
(bad)
imul
arpl
(bad)
fisub
sub
xor
es
jl
je
sahf
(bad)
push
mov
and
push
add
jecxz
and
pop
mov
mov
rol
mov
mov
sub
dec
sti
dec
inc
sahf
lds
cmps
xchg
xchg
push
scas
xor
xlat
cmps
(bad)
pop
dec
int
ficomp
xor
ins
(bad)
cmp
fnstsw
test
mov
shl
or
sub
mov
mov
inc
xor
jge
push
sbb
sub
arpl
sub
pop
push
sbb
push
(bad)
lods
mov
dec
movs
aaa
hlt
cmps
mov
jo
sbb
fisttp
int
mov
loope
into
push
cwde
imul
cmp
xchg
dec
mov
repz
mov
pop
popa
fwait
je
xor
lods
add
mov
xchg
xchg
adc
or
je
imul
add
xchg
inc
lds
push
aad
ds
and
repz
jo
lea
and
or
es
dec
pop
sbb
jb
sub
cmps
dec
sub
push
call
ret
mov
mov
adc
mov
pushf
adc
or
adc
inc
jae
sar
and
pop
jle
fsub
in
xchg
pop
iret
xor
ror
mov
sbb
xchg
and
in
sub
mov
pop
jne
cli
shr
loop
pop
cli
mov
mov
shl
mov
jmp
jmp
pop
loope
and
inc
jno
les
in
xchg
(bad)
sub
jmp
ins
enter
cmp
ins
adc
jae
clc
(bad)
sbb
dec
jg
or
mov
push
mov
mov
mov
rcr
addr16
loopne
rcl
mov
sub
cwde
jmp
mov
adc
xor
push
mov
cmc
sub
test
imul
mov
mov
cs
out
pop
and
fcmovbe
inc
jo
call
ror
xchg
std
jb
ins
mov
mov
xchg
sub
outs
jmp
inc
push
sbb
outs
pop
add
(bad)
test
ror
es
outs
mov
cmp
jne
ins
pop
retf
and
test
stc
add
pop
ror
jae
xchg
mov
xor
jecxz
ret
fnsave
mov
aam
scas
inc
call
mov
cli
sub
mov
pop
stos
ja
neg
iret
mov
imul
fwait
clc
adc
inc
mov
je
xchg
enterw
out
sbb
sub
aad
test
jb
js
stc
cmc
pushf
in
iret
fsubr
lahf
fwait
test
jl
mov
ja
fld
(bad)
or
ins
mov
(bad)
sub
ins
sar
xor
jbe
adc
xchg
fdivrp
mov
ret
rcr
sub
out
cmp
stos
xor
jnp
ins
lds
jne
imul
jo
iret
ds
cli
jno
xchg
cmp
mov
push
mov
fbld
fwait
mov
ror
mov
mov
shl
repnz
mov
call
push
clc
js
pop
jle
aaa
mov
(bad)
and
repnz
mov
or
mov
cmp
push
cmc
pop
sbb
dec
lds
mov
lahf
out
adc
cmps
mov
(bad)
popa
repz
mov
(bad)
iret
push
call
push
shr
push
mov
pop
cmp
or
pop
frstor
das
and
lahf
jg
or
xor
fcmovnbe
mov
jecxz
bound
(bad)
jg
inc
cmps
fidiv
test
sbb
call
(bad)
loopne
xchg
inc
inc
fucomip
aas
inc
jno
ds
xor
cli
mov
rcl
idiv
xor
adc
xor
pop
enter
arpl
xor
retf
dec
and
xchg
xchg
cs
or
out
adc
pop
pop
xor
(bad)
xor
fild
or
inc
shr
mov
fwait
mov
xchg
cmp
mov
dec
push
lods
push
stos
jp
sti
mov
pop
test
scas
out
add
add
loope
jb
pop
ins
xchg
adc
ds
add
int
lods
mov
jae
popf
loope
call
dec
enter
xor
pushf
(bad)
std
xchg
push
rcr
mov
test
push
cdq
iret
and
repz
es
jo
sbb
mov
jb
loop
stos
mov
out
call
pusha
cmp
js
arpl
jmp
xchg
pop
cmp
ror
mov
inc
cdq
es
xchg
mov
enter
push
mov
das
repz
cwde
sbb
sbb
aam
mov
data16
pop
enter
cwde
repz
xor
(bad)
jmp
out
popa
and
cli
xchg
out
les
mov
pop
dec
add
inc
mov
stos
push
or
xchg
ds
test
add
retf
xchg
push
cmps
xor
sbb
pop
or
pop
popa
xor
cmp
out
cmp
fild
jge
ss
sub
push
or
(bad)
outs
das
inc
fldenv
ja
add
movs
inc
scas
xchg
stos
mov
(bad)
sub
lds
mov
xchg
retf
(bad)
int
fdivrp
(bad)
shr
pop
das
movs
retf
rol
add
mov
inc
rcr
xor
cli
outs
sbb
mov
push
aas
shl
stos
mov
push
aam
inc
cmc
mov
cwde
add
in
mov
(bad)
out
pop
jp
xor
stc
xchg
fcomip
(bad)
inc
add
inc
shl
push
call
xchg
fprem
jle
ret
in
sbb
sub
adc
xor
pop
clc
test
mov
inc
cmp
into
or
add
push
mov
and
lea
mov
inc
xchg
test
xchg
add
mov
mov
or
mov
pop
jae
fistp
xor
loopne
test
pop
outs
add
int3
push
pushf
sbb
mov
out
add
clc
add
add
and
sahf
lock
jno
call
jp
inc
xor
jmp
ds
inc
pop
xchg
dec
out
jnp
cmps
jo
mul
movs
mov
push
xlat
xchg
add
imul
add
ds
iret
dec
rcr
jae
add
jg
push
xor
aam
push
push
rcr
mov
ret
ror
loop
pop
pop
hlt
mov
push
xor
cmp
pop
xchg
cmc
add
add
pop
jmp
mov
and
cmp
ins
iret
sbb
outs
jb
fisttp
adc
hlt
adc
icebp
adc
int3
sbb
mov
(bad)
push
scas
lock
sti
mov
je
and
popa
sub
dec
mov
push
clc
xchg
dec
lods
mov
jg
xor
cli
xor
es
xor
jl
adc
cmp
pop
out
mov
jmp
imul
(bad)
sub
das
push
in
bound
gs
dec
xor
loope
xchg
and
cs
add
push
rcr
scas
call
call
xchg
mov
sub
div
mov
js
cmp
imul
inc
fadd
call
push
mov
arpl
xor
ds
or
retf
xor
dec
or
cmp
(bad)
jnp
addr16
outs
(bad)
cmp
and
cmc
pop
xor
test
(bad)
loop
jp
cmp
pop
aad
mov
fisttp
push
(bad)
jno
loopne
hlt
mov
pop
(bad)
lock
int3
cmp
sub
cmc
fldenv
mov
push
outs
jle
imul
dec
repnz
lock
sub
inc
popa
adc
pop
or
sub
out
sbb
cmp
adc
retf
dec
mov
xchg
xchg
jmp
push
or
cli
push
ins
jne
in
arpl
mov
ret
lock
or
xchg
push
pop
jecxz
mov
xchg
mov
dec
jmp
xchg
cld
mov
xchg
pop
movs
fmul
test
movlps
outs
jge
ins
jne
loop
popf
xor
cmovnp
mov
dec
pop
loope
aas
fwait
adc
fs
mov
mov
ret
cmp
sbb
sub
mov
pop
sub
pop
push
lock
xchg
(bad)
(bad)
std
mov
inc
dec
sbb
aaa
xchg
fwait
or
(bad)
nop
cld
je
sbb
inc
shl
jbe
loope
sbb
cmp
pop
mov
std
inc
lea
push
sub
inc
xor
ds
sbb
rol
jmp
retf
mov
je
mov
jo
rol
aaa
idiv
jmp
mov
jp
push
ins
jl
push
cld
movs
call
cmp
push
cld
popf
adc
movs
stos
or
mov
ds
mov
xchg
or
in
scas
push
jmp
or
fstp
xchg
test
je
jle
mov
mov
test
ins
les
iret
push
in
(bad)
(bad)
dec
sbb
les
inc
add
push
clc
dec
sbb
fs
fwait
mov
fnstenv
(bad)
pop
mov
cs
sub
and
xchg
lods
push
(bad)
adc
(bad)
fwait
jp
mov
shr
and
cmps
adc
and
xchg
mov
cmp
mov
mov
push
xchg
mov
lods
sub
xor
mov
out
pop
rol
aas
(bad)
sub
popf
cs
jg
(bad)
das
cmps
lea
scas
daa
lds
sub
(bad)
test
push
jae
add
sti
jae
cli
lds
push
mov
jno
into
jmp
(bad)
mov
inc
sub
icebp
dec
or
or
aad
in
add
call
xchg
push
sub
xor
mov
mov
icebp
cwde
cs
imul
jbe
fadd
pushf
and
int
mov
retf
mov
rcr
mov
jmp
jmp
jnp
not
adc
lea
loope
stos
ror
adc
retf
lds
shl
add
nop
sub
popf
xchg
dec
iret
jp
sbb
adc
movs
stos
pop
bound
push
test
mov
test
push
lods
pop
xor
imul
pop
in
cmp
sti
xchg
sbb
dec
sbb
fbstp
or
lds
mov
dec
cmp
mov
mov
std
push
xchg
(bad)
out
mov
or
xchg
sahf
pop
push
iret
daa
jmp
xor
and
test
xor
in
jmp
faddp
test
or
cmp
scas
push
inc
lods
lea
and
xor
ret
adc
xorps
dec
xor
inc
and
mov
jne
gs
mov
sub
dec
pop
or
xor
mov
push
stos
bound
loope
jl
inc
test
sub
retf
push
ja
(bad)
test
call
push
xchg
in
xchg
shl
and
mov
jns
xor
or
pop
xchg
xor
(bad)
mov
std
cmp
inc
lods
or
aas
mov
push
test
and
and
call
(bad)
(bad)
pop
dec
enter
mov
loop
repz
push
sub
std
xor
out
inc
xchg
hlt
and
pushf
mov
movs
fdivr
aaa
mov
jl
and
sbb
xor
sub
repz
add
mov
pop
mov
adc
bound
add
xor
push
aaa
mov
mov
les
sub
je
sbb
xor
aaa
mov
int
or
mov
ret
(bad)
cmp
push
mov
jmp
fcmovnbe
mov
pushf
xchg
xlat
mov
shr
jbe
mov
mov
cli
and
inc
enter
or
dec
in
icebp
mov
stos
xor
outs
mov
mov
adc
or
jmp
arpl
xchg
pop
inc
retf
enter
dec
cmp
add
inc
mov
inc
jecxz
jno
jmp
stos
xchg
sub
push
xchg
mov
adc
xchg
mov
retf
sub
sub
shl
(bad)
sub
adc
dec
mov
push
mov
inc
pop
fxch
shl
or
mov
mov
dec
sub
not
je
mov
jp
mov
movs
add
adc
popf
jle
jmp
add
xchg
call
push
hlt
(bad)
cmp
lahf
sbb
and
inc
pop
xor
xchg
and
add
lahf
stc
cmc
or
lods
call
sub
sbb
mov
cld
adc
ins
or
mov
inc
nop
xor
jle
add
push
icebp
dec
retf
xchg
jmp
and
mov
(bad)
push
inc
rcr
sahf
xchg
xor
neg
pop
movs
sub
lock
dec
sahf
xchg
cmp
sub
bound
loope
xchg
push
lods
clc
mov
ret
push
daa
out
mov
jo
jp
inc
xor
neg
sbb
xchg
mov
mov
outs
inc
ret
jae
adc
sub
pusha
fisttp
adc
mov
xor
(bad)
neg
push
test
lea
rol
call
mov
or
cmp
cmp
enter
rcl
mov
fld
je
adc
ja
retf
(bad)
mov
or
ins
xchg
push
or
clc
or
(bad)
xchg
test
stc
mov
xchg
xchg
jne
mov
cmp
pop
test
inc
push
pop
and
mov
daa
arpl
in
xchg
jb
into
mov
push
call
cmp
outs
push
sbb
or
cs
push
shl
inc
mov
popa
in
fs
push
stos
fidiv
mov
inc
push
mov
jl
scas
inc
xchg
cmps
xchg
sub
jle
scas
xchg
push
cmp
xchg
rcr
aas
outs
(bad)
or
lds
into
pop
cmp
or
test
fs
nop
mov
(bad)
out
cmc
sub
adc
sbb
inc
pop
sub
pusha
cld
(bad)
in
stos
sub
fdivr
inc
loop
shr
sahf
jo
mov
ret
int3
movs
mov
cld
jmp
pop
fsubr
ds
mov
les
jno
ja
sub
push
push
sbb
lea
ret
cmp
jmp
pop
mov
cmps
jno
lds
and
cli
add
fs
mov
xor
cmp
cld
cld
movs
addr16
fidiv
cmp
(bad)
ret
mov
push
hlt
ret
sbb
mov
cld
(bad)
cwde
movs
idiv
add
cmp
scas
xor
aas
add
jl
jge
stc
lods
push
pop
cmp
or
push
les
mov
jne
pop
movs
inc
inc
ins
sub
and
jmp
pop
jns
jecxz
mov
fwait
icebp
stc
mov
xchg
aam
jns
mov
out
jnp
loopne
ja
inc
inc
jne
or
or
(bad)
sbb
sahf
sub
and
adc
jbe
pop
fisttp
or
daa
mov
bound
sahf
add
dec
fnsave
mov
movs
mov
outs
enter
popa
dec
sahf
mov
in
fistp
ins
adc
cmp
xlat
jne
jno
inc
push
push
dec
pop
dec
loop
push
xlat
sar
xchg
into
ins
stos
mov
enter
push
or
mov
sahf
xor
leave
cmp
iret
mov
pop
pop
mov
add
es
pop
pop
mov
cmps
adc
xchg
xchg
pop
mov
pop
jo
sub
rcr
int
inc
call
dec
jns
and
addr16
test
aaa
mov
sbb
shr
jmp
sbb
sar
in
inc
mov
pop
cmps
sbb
sub
cmp
push
sbb
xchg
and
popf
mov
shl
sbb
stos
lods
mov
setp
add
fist
out
out
sbb
sub
imul
stc
push
jp
dec
loopne
adc
repz
ret
sbb
test
enter
imul
dec
pop
mov
scas
jno
pop
dec
mov
jmp
xor
cwde
je
inc
jns
xchg
dec
jo
fst
or
aam
xchg
iret
(bad)
pop
fcomp
(bad)
push
imul
scas
mov
jbe
rcl
xchg
shl
push
test
pop
add
stos
test
ja
das
add
repnz
dec
(bad)
mov
and
not
xchg
mov
repnz
scas
push
dec
stos
movs
dec
mov
mov
inc
mov
xchg
pushf
repz
pop
xchg
pop
and
mov
xchg
add
push
push
jl
in
rcl
lds
aad
or
lods
loope
push
dec
jae
push
sbb
(bad)
mov
add
mov
mov
sbb
fld
in
pop
sub
nop
call
loop
push
loopne
dec
sub
sbb
in
shr
mov
lea
or
aaa
in
and
in
or
jle
cdq
push
loopne
xor
jne
xor
jmp
daa
pop
and
das
sbb
push
jae
xchg
xor
sub
xchg
cmps
pop
lea
nop
dec
fistp
popf
inc
dec
inc
out
pop
sar
das
neg
ds
cs
mov
(bad)
adc
and
inc
cli
rcr
add
mov
movs
pop
test
xchg
(bad)
sar
int3
cdq
(bad)
jg
into
sbb
cmp
popa
push
movs
(bad)
repz
mov
add
and
fdiv
or
stos
xor
mov
lods
and
cmp
test
ins
xchg
rcr
stos
dec
inc
icebp
xchg
psubusb
(bad)
push
lea
ss
aam
jl
push
or
jbe
pop
inc
js
sbb
mov
jle
dec
rcl
sub
sub
push
mov
cmp
cmp
or
(bad)
ficom
retf
lea
lods
xchg
adc
cwde
jno
out
inc
adc
dec
call
push
cld
mov
imul
cmps
inc
pop
xor
and
fwait
mov
jg
adc
xlat
mov
xor
enter
xchg
je
jno
ins
retf
(bad)
into
inc
mov
cmp
cmps
ins
fld
outs
rol
adc
std
cwde
pop
inc
call
movs
sub
js
sub
push
addr16
jns
adc
push
fisub
popa
shl
xor
in
jmp
pop
test
or
popf
jp
dec
and
push
ins
or
js
mov
and
jns
out
rol
mov
mov
daa
dec
enter
xor
test
push
fmul
jmp
pop
push
xlat
cwde
and
in
pop
ror
mov
lahf
cmp
pop
je
pop
stos
pop
hlt
movs
(bad)
and
pop
sbb
jnp
mov
xor
pop
and
adc
add
int3
or
and
pop
fidiv
xchg
mov
test
or
xchg
int3
test
push
dec
fsub
es
mov
ficom
in
and
and
mov
push
std
xor
sub
inc
mov
pop
inc
jle
mov
stos
hlt
mov
xchg
pop
cdq
and
mov
iret
and
into
aam
(bad)
shl
cld
sub
xchg
or
mov
pop
xchg
stos
(bad)
jl
push
cmp
xor
inc
mov
inc
lock
loop
loopne
je
pop
add
jns
xchg
mov
jmp
cmps
fcom
bound
mov
rcr
dec
or
and
jae
mov
xor
dec
fisttp
pop
push
repnz
cdq
xlat
dec
bnd
ret
add
mov
(bad)
(bad)
arpl
xchg
lods
and
cmp
mov
retf
ss
into
adc
sbb
inc
retf
cmp
hlt
and
pushf
test
sub
adc
sub
in
sbb
cmp
mov
ds
pusha
push
test
sbb
cmps
jmp
push
stc
pop
add
nop
jae
cmp
lods
cmps
pop
movhlps
mov
in
pushf
call
stc
(bad)
in
mov
(bad)
jmp
loope
add
and
mov
mov
and
mov
xchg
mov
inc
(bad)
int
ins
add
pop
dec
arpl
cmp
xchg
xchg
mov
or
shr
dec
cli
adc
cli
scas
movs
les
aam
jmp
popa
movs
ret
jmp
cmps
stc
sub
das
sbb
repnz
pop
xchg
add
mov
add
sub
adc
jmp
add
pushf
sahf
add
add
stos
aad
fadd
and
fisub
addr16
xor
cmp
pop
push
mov
data16
jmp
pop
test
sbb
adc
sub
inc
or
fist
stos
sbb
test
cs
jecxz
mov
cmc
test
xchg
or
ins
xchg
fcomp
(bad)
ret
adc
ins
xlat
mov
in
xchg
(bad)
cwde
movsx
ds
mov
daa
test
jo
xchg
daa
jb
add
int3
bound
out
add
sbb
inc
fist
or
repnz
dec
sbb
hlt
sbb
cmc
mov
xchg
into
jno
xchg
pop
push
test
icebp
mov
pusha
iret
test
xor
inc
cmp
or
imul
shl
mov
mov
cmp
stos
test
int
in
ds
mov
sbb
pop
repnz
pop
arpl
jnp
pop
stc
mov
or
jnp
adc
lods
inc
lods
(bad)
fs
pop
jmp
jecxz
lods
push
movs
(bad)
jns
push
jg
jmp
dec
int
popa
xor
cli
fmul
xchg
jmp
xchg
cmp
xor
add
in
xchg
sub
mov
cmp
jb
mov
std
lods
push
xchg
repnz
push
xchg
out
in
pop
dec
push
jl
push
jg
xor
pop
pop
jecxz
in
fxam
sbb
cld
fdiv
push
mov
iret
mov
cdq
icebp
and
push
fwait
push
in
inc
push
xchg
inc
push
cmp
pop
je
or
inc
(bad)
sub
aas
mov
shr
jnp
xor
cld
pop
shl
cmps
dec
or
js
stos
add
cmp
(bad)
jnp
loop
ror
and
xor
test
push
add
int
fdiv
jle
mov
ja
jecxz
or
out
xlat
dec
mov
fwait
push
dec
inc
pop
mov
and
jnp
retf
sub
bnd
xor
jl
movs
out
cld
jne
(bad)
jbe
dec
lea
popa
std
cmp
adc
std
sub
out
mov
inc
das
dec
jle
lock
xlat
das
sti
add
test
cmp
jno
mov
mov
mov
es
(bad)
and
push
sbb
retf
mov
pop
add
sahf
and
xchg
inc
ret
setp
popf
adc
aas
sbb
mov
fwait
jge
in
es
and
ret
jmp
adc
or
mov
xor
jmp
inc
mov
jp
and
(bad)
js
push
dec
shl
leave
sbb
cmp
or
fwait
in
cmp
sti
mov
xchg
into
pusha
fprem1
inc
or
mov
sub
je
cld
out
ins
xor
mov
aas
into
clc
loope
add
sub
ins
js
mov
push
cmp
dec
push
push
clc
call
fmul
shl
and
and
ja
xchg
inc
fist
dec
sub
adc
mov
inc
and
pop
xlat
rcl
push
cs
xor
jnp
jmp
pop
cli
addr16
inc
cmp
mov
adc
and
mov
and
ss
(bad)
stc
dec
ss
push
dec
push
je
cmps
mov
add
neg
mov
imul
clc
popa
mov
(bad)
and
inc
sbb
mov
in
movs
jne
xchg
push
mov
push
inc
pop
(bad)
xor
inc
cmc
lods
pop
int3
dec
ins
add
retf
mov
sub
push
adc
xor
jns
add
xchg
pop
dec
mov
js
xor
into
hlt
jecxz
imul
aaa
inc
add
add
in
jmp
fsubr
js
cmp
pop
out
jl
push
clc
push
rcl
lods
out
sbb
add
inc
hlt
int
xor
pushw
xacquire
and
pop
neg
test
je
aam
push
add
int
sbb
mov
xor
cmp
sahf
nop
jns
pop
in
pop
popa
pop
shr
call
pop
inc
xchg
and
test
std
inc
jo
stos
sbb
cmp
mov
pop
and
mov
push
mov
dec
xchg
inc
cmps
jl
sbb
mov
push
inc
or
mov
int
jb
(bad)
sahf
pusha
stc
jb
cs
into
nop
idiv
xlat
jae
aas
push
pop
jge
jmp
pop
push
ja
(bad)
ficom
or
and
stos
jmp
dec
test
fldcw
scas
sub
xchg
add
mov
stc
aas
pop
adc
addr16
xchg
or
iret
test
or
mov
stos
cs
mov
in
dec
outs
iret
scas
pop
or
push
ins
dec
cmps
pop
sbb
jns
add
dec
jle
movs
xor
or
fidivr
fsub
sbb
data16
xchg
mov
sub
and
imul
pop
sti
cmp
push
sbb
sbb
and
mov
out
movs
and
push
cmp
inc
xchg
push
mov
jb
inc
add
jecxz
sub
mov
test
xor
mov
div
scas
jne
shr
test
pop
mov
pop
(bad)
test
fadd
and
outs
mov
cmp
push
jl
push
mov
fmul
icebp
ds
jo
mul
and
les
in
fcom
jp
push
ja
mov
push
mov
pushf
and
out
scas
icebp
clc
mov
push
add
jecxz
push
cdq
fwait
inc
xor
or
push
retf
push
out
or
ret
fidiv
aas
ret
ret
dec
fisub
mov
mov
int3
shl
fimul
dec
movs
mov
pop
push
dec
clc
jmp
xchg
mov
out
dec
add
or
popf
retf
cmps
xor
push
mov
je
out
out
fwait
shl
or
pushf
or
xchg
adc
cmp
stos
fwait
pop
xchg
in
cmp
push
sbb
in
cmp
jmp
and
mov
adc
pop
jle
retf
jne
popf
push
sbb
push
loopne
in
fcomp
mov
mov
fimul
push
mov
enter
lods
mov
push
jae
xor
push
inc
dec
cli
outs
xchg
jo
mov
in
dec
movs
mov
push
add
fwait
cld
dec
pop
or
mov
xlat
jno
addr16
test
daa
bound
dec
ss
or
add
sub
mov
adc
and
rcr
adc
ret
adc
mov
inc
fcmovne
cmp
pop
call
(bad)
not
push
out
aas
and
ror
das
cdq
rcr
jno
cmp
dec
out
test
add
xor
and
inc
jb
dec
arpl
mov
mov
inc
outs
jge
bound
mov
push
stos
or
sub
and
add
cmps
lods
xchg
xchg
mov
or
(bad)
in
test
add
test
xchg
xchg
xchg
push
(bad)
jg
stc
leave
in
rol
lods
fs
mov
add
cmp
sbb
lods
jmp
jge
jge
sub
xor
stos
push
retf
popa
cmps
add
push
sub
jb
gs
jae
test
scas
fmul
(bad)
mov
jb
pop
mov
jl
and
dec
cmp
sahf
cmps
mov
sbb
push
push
sbb
ret
ret
outs
(bad)
mov
adc
cmps
inc
cmps
movs
ins
inc
jae
adc
ss
xlat
mov
imul
jmp
jmp
enter
jmp
xchg
ja
adc
faddp
repnz
or
popa
sbb
(bad)
or
sbb
in
pushf
or
(bad)
test
jecxz
fst
add
fisub
dec
repz
cmp
cli
stc
loope
into
adc
dec
in
in
pop
fs
rcl
xlat
adc
mov
enter
lods
jecxz
jmp
test
clc
xor
adc
int3
push
mov
add
mov
mov
fisttp
adc
and
push
cmp
lds
jns
out
push
add
xchg
sbb
pop
jne
(bad)
fprem
movs
xor
in
mov
push
inc
rcl
bound
test
and
and
popf
sti
mov
cmp
jb
sbb
cmc
int
sti
add
dec
cmc
mov
mov
aaa
mov
repz
out
sar
and
std
and
jmp
fisub
jns
in
test
adc
cmc
test
add
icebp
lahf
pop
xchg
add
inc
push
push
mov
les
xor
cmp
fcomip
push
push
mov
pop
mov
sub
fld
and
push
cdq
pop
(bad)
or
inc
vpsubd
pop
push
xchg
jmp
inc
cmp
imul
div
nop
cmp
pop
add
ins
pop
scas
and
mov
lock
dec
fild
mov
push
jae
sub
mul
xchg
push
xchg
xor
cwde
jp
xchg
popa
lds
int3
cmps
inc
jl
xor
inc
(bad)
sbb
and
adc
stos
mov
outs
push
add
das
xchg
or
stos
jmp
dec
ret
xor
sbb
enter
retf
xor
rcl
xor
push
sahf
add
jno
adc
and
mov
jl
arpl
retf
out
(bad)
adc
imul
out
test
or
nop
fist
jbe
cmc
pop
and
fsubr
ret
outs
lods
push
adc
in
sahf
jl
jns
mov
fldenv
mov
and
mov
jae
pop
sbb
lods
(bad)
pop
sbb
adc
jge
add
xchg
mov
push
cmp
add
loopne
or
std
sbb
push
lods
in
rcl
int
call
cs
loopne
aaa
enter
fild
mov
sbb
xchg
jge
retf
jmp
sbb
fucomip
and
xchg
add
in
dec
adc
and
push
cmp
into
cmp
lods
jl
jecxz
int3
stc
push
enter
gs
arpl
clc
test
xchg
ss
stc
jl
in
test
pop
or
adc
out
add
xor
arpl
jp
fsubr
ret
cs
push
aas
mov
fisttp
stos
push
ja
enter
dec
mov
xchg
mov
inc
sbb
mov
cli
fstp
leave
pop
pop
mov
dec
xchg
push
and
sbb
sahf
or
or
std
mov
mov
test
iret
hlt
stos
in
cmps
fstp
add
push
add
pop
leave
arpl
inc
pop
jns
lods
sahf
shl
into
cdq
dec
push
jno
mov
mov
xchg
stc
mov
nop
fs
call
adc
(bad)
xlat
mov
fdiv
mov
fs
lahf
cs
dec
xor
inc
cmp
repz
sbb
push
pusha
xchg
ficom
inc
ins
mov
jecxz
push
dec
je
add
inc
sbb
sbb
test
es
hlt
imul
mov
inc
aad
sbb
sub
jmp
sti
xor
sub
sub
iret
in
mov
cmp
mov
movs
mov
or
test
enter
test
iret
jle
or
rol
or
loope
sub
jns
and
aas
movs
ja
sahf
ins
aad
in
pop
add
jbe
or
or
push
jmp
cwde
nop
mov
shl
adc
mov
sbb
movs
mov
shl
and
sbb
movs
sahf
iret
mov
neg
jmp
jle
and
test
aam
cmps
inc
or
clc
mov
mov
cmp
push
add
sbb
push
ins
dec
dec
mov
xchg
xchg
cmp
push
rol
xchg
push
loopne
in
ds
xchg
iret
out
sub
mov
pop
inc
ss
jne
mov
sbb
adc
mov
and
leave
enter
dec
fldcw
fistp
data16
jmp
imul
cmp
lahf
imul
stc
or
(bad)
xor
jge
inc
pop
or
jnp
jecxz
pop
sbb
test
ret
call
jge
aaa
inc
mov
js
or
std
push
xchg
add
out
js
rcr
jp
mov
imul
push
mov
les
cmp
pop
xor
sbb
int3
pop
mov
adc
movs
jbe
mov
dec
ret
inc
xor
mov
ret
dec
mov
xchg
outs
xor
mov
test
mov
(bad)
clc
adc
aaa
pop
inc
mov
bound
xchg
outs
pop
imul
shl
cmp
rol
and
pop
mov
int
xchg
sub
or
stos
jb
cli
js
shrd
mov
fsqrt
push
or
jl
push
ins
pop
cs
and
inc
or
mov
dec
dec
and
sbb
xchg
jl
sti
nop
inc
das
jl
or
add
movzx
jns
push
cmp
fwait
mov
xor
xor
xor
(bad)
inc
(bad)
mov
cmp
push
jo
or
(bad)
ins
fisubr
fidiv
aaa
mov
push
ret
ret
test
xor
jl
call
push
jmp
xchg
gs
pop
jle
mov
cdq
in
xchg
xor
fwait
dec
outs
jb
pushf
cmp
sub
das
cmp
test
fcom
xor
mov
movs
push
cmc
gs
rol
int3
xchg
mov
iret
push
and
push
test
out
iret
mov
push
popa
arpl
fs
mov
adc
rcl
lea
sbb
mov
dec
mov
or
es
xchg
inc
mov
ret
movs
fwait
push
into
mov
loop
xchg
outs
jle
and
mov
xchg
or
cmp
ret
xor
jne
xor
repz
mov
inc
loope
add
and
and
lods
or
jg
pop
inc
push
mov
data16
add
adc
cdq
lods
in
bound
jp
cwde
mov
jne
int3
jp
jmp
test
loop
pop
sti
shl
sar
gs
sub
dec
dec
scas
or
fmul
dec
mov
sbb
xchg
push
xlat
dec
push
pop
movs
add
dec
add
push
lea
mov
cmps
jmp
cmp
mov
sbb
mov
add
(bad)
and
mov
jnp
sbb
or
daa
out
stos
dec
push
xchg
neg
and
ret
(bad)
and
out
cmp
call
je
aas
xchg
push
leave
retf
pop
push
cmps
jecxz
iret
push
cmp
sub
mov
inc
inc
jno
add
jmp
pop
jl
pop
in
retf
(bad)
(bad)
bound
push
push
in
inc
shl
cmc
mov
cmps
frstor
cmp
stos
repz
(bad)
push
ins
jmp
nop
fisttp
xchg
push
push
stc
arpl
jmp
cld
mov
inc
sti
(bad)
push
sbb
iret
pop
sahf
push
add
jmp
daa
mov
or
lods
scas
loopne
sbb
jno
xchg
repz
dec
sub
mov
in
and
les
or
cmp
clc
je
retf
cmp
fcomp
xchg
or
adc
movs
xchg
cli
mov
pop
jbe
push
gs
and
rcr
sub
inc
inc
cs
inc
fisub
out
inc
ret
jb
jmp
ins
dec
outs
cli
fsub
jp
and
mov
dec
push
mov
pop
repnz
shl
mov
mov
fst
pop
ja
mov
loope
ret
and
pop
jmp
mov
mov
loope
es
test
rcr
cmp
and
fstp
jo
inc
inc
pop
or
adc
packuswb
stos
test
ret
dec
(bad)
pop
aad
inc
test
repnz
cmp
mov
xchg
inc
ins
test
jns
mov
jbe
lahf
scas
fld
lds
mov
fwait
out
or
push
xor
mov
jecxz
sub
lock
out
out
imul
cwde
jl
int
mov
sub
sub
xor
lods
push
cmp
stos
and
sub
mov
mov
pop
mov
lds
pop
cmp
in
stc
and
rcl
cwde
imul
sets
(bad)
fwait
add
mov
add
in
icebp
dec
loope
and
test
mov
inc
push
pop
(bad)
(bad)
movs
pushf
add
mov
xchg
push
and
push
lahf
mov
sub
mov
push
add
push
add
xchg
xor
adc
xchg
(bad)
adc
(bad)
idiv
pop
retf
jge
addr16
push
or
ret
sub
ins
mov
mov
dec
pop
pop
dec
push
fld
add
cmps
lods
push
mov
and
ret
fldenv
jb
xor
mov
adc
ss
enter
fisttp
(bad)
fmul
(bad)
xor
jns
icebp
pop
outs
push
add
jns
and
dec
sbb
fs
push
jl
pop
push
pop
xchg
mov
jp
pusha
fst
test
pop
jge
fild
dec
fucomi
or
push
stos
ss
pop
push
mov
sahf
into
mov
cmp
frstor
push
cwde
mov
pop
dec
add
push
mov
data16
mov
fwait
movs
push
jo
out
retf
lds
aaa
add
add
mov
sahf
dec
(bad)
jg
cs
sub
mov
and
xor
mov
and
arpl
add
mov
mov
popa
inc
mov
adc
mov
mov
sar
lahf
call
jle
dec
mov
sbb
mov
cmc
lods
dec
mov
pop
mov
jecxz
retf
or
pop
lea
adc
call
hlt
loop
mov
cmp
cmp
ss
(bad)
ror
pop
test
hlt
popf
xchg
pop
dec
xchg
(bad)
pop
not
push
or
ds
stos
add
vmovups
or
push
out
xor
lea
jns
jbe
xor
jmp
xchg
or
inc
repz
xchg
pop
mov
lods
leave
sbb
xor
inc
jecxz
retf
xchg
mov
aas
xor
mov
in
and
cmp
test
sar
xor
jp
lock
pop
outs
leave
mov
ret
jbe
dec
adc
mov
mov
mov
push
push
out
fsub
aaa
retf
nop
xor
fldcw
jmp
pop
and
sbb
loop
in
xchg
cmps
(bad)
popf
dec
inc
push
ja
sub
movs
and
test
lock
arpl
repz
lock
(bad)
imul
mov
out
aaa
xchg
dec
mov
je
mov
sub
lods
sub
sahf
sbb
gs
pop
retf
sbb
mov
(bad)
out
ficomp
mov
mov
mov
inc
fidiv
push
bound
push
push
xchg
mov
pop
add
sbb
aam
dec
or
mov
mov
mov
xchg
push
or
jne
sub
stc
and
test
js
mov
mov
dec
inc
push
jge
call
or
adc
pop
mov
mov
mov
cmp
xchg
ins
out
xchg
sub
xor
or
outs
jecxz
mov
inc
jg
imul
data16
int
imul
sub
fcomi
movs
fild
movs
dec
fs
jae
(bad)
pop
fldenv
enter
inc
fwait
imul
push
mov
aaa
jmp
in
and
popf
pop
cmps
imul
loop
sbb
es
mov
retf
pop
dec
inc
push
call
es
out
xchg
add
jo
cmps
dec
push
data16
repnz
jns
mov
inc
jle
mov
adc
fadd
lods
sbb
or
xchg
cmps
jae
cld
sbb
(bad)
pop
or
push
xchg
out
mov
xchg
xchg
sti
mov
add
jge
or
(bad)
adc
call
inc
js
cmc
sbb
jmp
jb
test
mov
xchg
sbb
jecxz
imul
mov
sbb
fld
xchg
arpl
pusha
pushf
mov
js
add
dec
sti
inc
je
pop
xchg
mov
inc
je
(bad)
xchg
push
adc
xlat
sbb
add
out
(bad)
jo
and
inc
cmp
xchg
push
dec
sbb
test
xchg
mov
push
getsec
fild
jle
sub
mov
rcr
push
or
or
xor
jmp
lods
loopne
mov
arpl
xlat
lods
mov
fnsave
inc
sbb
cmp
out
in
mov
std
bnd
push
call
bound
push
jbe
rcr
xchg
inc
sbb
aas
leave
mul
rol
adc
pop
stos
or
adc
fs
bound
xchg
xchg
cmp
jp
addr16
shl
enter
pop
imul
jns
mul
push
xchg
in
dec
adc
jle
test
dec
sub
daa
push
test
cdq
sti
xlat
(bad)
cmps
mov
std
fsub
jg
inc
dec
cmp
cmp
pop
sub
test
dec
mov
mov
imul
pushf
jl
dec
imul
rcl
adc
pop
push
jnp
neg
aas
sbb
cmp
sar
js
and
xchg
pop
push
pop
bound
add
inc
lods
push
pop
movs
adc
sbb
int
imul
imul
loope
and
les
(bad)
push
gs
sbb
pop
(bad)
adc
add
pusha
pop
lods
jnp
pop
scas
in
push
rcl
dec
ret
mov
adc
fadd
mov
imul
sbb
push
call
mov
mov
mov
cmps
mov
jmp
add
inc
out
jge
call
lods
xchg
fimul
inc
adc
stos
pop
push
mov
test
and
xchg
sbb
jl
or
xchg
fidiv
sub
ror
in
mov
jg
call
adc
cdq
pop
add
daa
xor
pop
fs
bnd
xchg
daa
enter
fiadd
sbb
mov
adc
xlat
jmp
mov
ret
fmul
lds
cmp
stc
dec
push
mov
add
cld
cmc
clc
dec
cdq
int
jp
(bad)
lahf
push
dec
out
in
shr
jbe
out
imul
repnz
sbb
jge
mov
pop
jmp
mov
dec
sub
pusha
fneni(8087
pop
addr16
mov
fstp
stos
enter
test
xchg
xor
fcomp
clc
mov
retf
push
ins
ss
xchg
leave
js
cmp
sar
es
xor
inc
cdq
dec
pusha
jp
mov
push
outs
out
pop
rcpps
pop
fstp
jne
inc
fisttp
cwde
nop
fsubr
ret
imul
dec
pop
xor
lods
lds
dec
cmps
push
ins
inc
repnz
(bad)
pop
mov
test
(bad)
push
mov
iret
push
dec
xchg
imul
test
push
sub
scas
xchg
cmp
cmp
cmp
cwde
cld
out
inc
cdq
sbb
in
cwde
ret
out
hlt
pop
call
and
and
stos
pop
loopne
cmp
mov
xor
das
cmps
and
dec
fs
jl
push
pop
fldcw
cmp
cmp
sub
mov
mov
pusha
add
les
movs
cwde
retf
add
xchg
movs
mov
jl
xchg
xor
jle
fst
test
jbe
mov
push
mov
xchg
pop
cli
sub
cmp
or
into
or
test
neg
xor
jbe
dec
ins
retf
das
dec
jnp
test
xor
retf
pop
mov
xor
clc
aad
xchg
push
xor
pop
push
sub
sti
adc
aaa
inc
(bad)
mov
bound
adc
outs
int3
imul
stc
dec
jl
jae
pop
add
pop
dec
pop
jle
add
mov
jo
inc
sbb
jmp
sbb
jbe
rcl
dec
es
push
mov
ins
cmps
ins
les
xchg
or
jp
add
push
push
mov
out
fldcw
jecxz
mov
daa
inc
or
sar
fiadd
mov
fidivr
xor
sub
(bad)
jnp
test
mov
hlt
push
aam
iret
pop
lds
mov
sbb
mov
mov
and
lods
call
outs
xchg
mov
in
not
adc
clc
aam
data16
mov
stos
jmp
xor
outs
mov
adc
mov
add
adc
dec
test
stc
rcl
adc
or
pop
adc
mov
mov
adc
aam
xchg
jnp
xor
jne
cmp
or
sub
pop
mov
ss
scas
imul
cli
loope
dec
pop
(bad)
mov
not
(bad)
pcmpgtb
cld
pop
pop
dec
cmp
sbb
leave
sti
call
dec
mov
mov
sub
dec
cmps
jnp
adc
mov
cmp
popf
out
in
sahf
ror
test
loop
cld
sbb
jmp
mov
lahf
mov
jns
sahf
mov
pop
test
xchg
hlt
mov
xor
and
or
mul
ja
lods
cli
or
add
cwde
imul
stos
in
lea
add
ds
jo
sub
xchg
fcom
js
inc
pusha
mov
pusha
or
push
dec
pop
aas
cmc
jle
mov
mov
add
xchg
xor
adc
mov
test
into
jl
aam
nop
daa
push
add
mov
fstp
mov
mov
xchg
or
inc
xor
scas
stc
mov
mov
pop
fsin
mov
mov
arpl
hlt
popf
xor
call
jmp
movs
add
mov
mov
push
out
aam
cdq
dec
pop
mov
scas
cmp
cld
dec
sbb
data16
jne
cmp
jae
jg
sahf
mov
pop
mov
(bad)
ja
mov
mov
jmp
sbb
mov
jmp
xor
imul
sbb
jmp
push
jno
mov
imul
dec
fdivrp
shl
push
sub
xchg
jnp
ja
inc
push
inc
shr
sub
js
pop
clc
outs
mov
in
and
(bad)
aad
xor
mov
pop
mov
fcomi
pop
mov
sar
fist
fadd
mov
std
in
sub
push
adc
out
xchg
popf
sbb
cmp
stc
and
mov
push
dec
mov
fst
mov
inc
arpl
je
push
jns
mov
push
imul
addr16
add
loope
das
loopne
xor
xor
leave
or
xchg
test
push
push
xlat
push
mov
leave
shr
mov
into
call
ss
hlt
adc
aad
lods
nop
aaa
mov
dec
or
fdivr
pop
(bad)
sti
xor
xchg
test
das
sbb
lock
mov
adc
loop
popf
cli
lods
adc
pop
xor
ja
iret
sub
scas
aam
cmc
das
adc
rcl
call
cmps
push
addr16
cdq
aas
jb
rcr
mov
mov
pusha
sbb
in
jns
dec
dec
mov
inc
fild
push
test
dec
inc
mov
out
sbb
sbb
adc
inc
jle
push
lods
in
pop
adc
or
or
adc
pop
push
(bad)
cld
xor
ret
xchg
xor
pop
mov
loopne
fs
xor
sbb
inc
retf
daa
dec
fcmovnu
mov
std
jl
je
sub
aas
mov
mov
pop
adc
xchg
jecxz
pop
push
out
inc
dec
adc
ins
xlat
adc
cmps
pop
lds
sbb
inc
push
jae
lock
mov
xchg
shl
aad
ds
iret
lds
mov
pop
mov
fadd
fstp
adc
loope
dec
add
sub
xor
pop
dec
add
mov
ds
lock
not
push
mov
cmp
dec
retf
aam
sar
jl
dec
cdq
jle
ins
push
mov
xor
push
inc
das
sti
imul
mov
sub
loope
mov
lea
data16
jne
inc
push
mov
lock
popf
jmp
(bad)
pop
mov
jge
not
jmp
dec
mov
fild
retf
loope
and
adc
mov
pop
int3
xchg
add
in
enter
retf
mov
xor
push
bound
and
adc
push
jns
ins
imul
mov
mov
inc
scas
outs
pop
repz
xor
mov
scas
or
mov
test
jecxz
nop
inc
iret
mov
(bad)
sti
cmp
fcomp
idiv
mov
add
pop
call
gs
(bad)
repnz
or
pop
xor
lock
jbe
or
scas
fs
mov
lods
inc
rcr
push
loope
out
sub
mov
add
hlt
mov
sbb
fwait
and
clc
lock
xchg
cs
pop
fnstenv
in
push
jno
fiadd
jne
add
jns
jl
lock
rcr
and
mov
out
fst
mov
pushf
jb
call
(bad)
movs
push
mov
ins
call
or
pop
push
rcr
inc
jmp
in
mov
jmp
inc
sbb
fdiv
mov
cmps
inc
into
push
cdq
call
and
push
shl
mov
xor
inc
sbb
andps
sbb
mov
lahf
or
xchg
push
sub
add
icebp
(bad)
jg
cli
add
xor
les
out
ins
lds
pusha
and
inc
stos
sub
mov
enter
dec
mul
xor
push
ja
fistp
pop
mov
test
add
adc
repz
mov
pusha
ret
jmp
call
jl
into
ja
xchg
push
xchg
(bad)
mov
cs
not
sbb
fdiv
mov
lds
sub
add
pop
hlt
leave
mov
test
and
repnz
mov
jmp
jp
mov
rcr
loope
cmp
aaa
push
push
push
popa
leave
retf
test
dec
jae
pop
inc
icebp
cmps
enter
lods
cmp
ss
retf
pop
xor
pop
hlt
xchg
std
and
cdq
cli
and
int3
in
push
call
cmp
xlat
xor
pop
and
das
xchg
pusha
fdiv
clc
stos
or
retf
xchg
in
(bad)
idiv
sbb
(bad)
push
jmp
mov
clc
loop
(bad)
fstp
jne
fs
bound
mov
add
cld
call
adc
adc
scas
mov
inc
pop
add
cld
xchg
dec
popf
pop
pop
shl
add
dec
enter
pop
sub
cld
jb
mov
fcomp
aaa
dec
pop
sbb
xchg
clc
in
xchg
inc
xor
fmul
bnd
or
fdivr
push
ds
jae
cmp
pop
mov
or
iret
push
mov
jnp
popf
les
dec
movs
mov
cmps
cmp
jg
and
xchg
xor
test
mov
out
cmp
int3
mov
mov
jmp
call
shr
out
jge
movs
mov
ja
rcl
fwait
sub
jmp
imul
push
jp
xor
in
les
rcl
mov
sbb
sbb
mov
push
mov
jmp
sub
jmp
scas
mov
popa
sti
mov
(bad)
fld
jb
jbe
jmp
sub
jl
sbb
call
test
inc
(bad)
xchg
mov
adc
mov
in
stos
(bad)
mov
cmp
daa
adc
jae
out
ss
inc
jns
test
(bad)
aas
jb
imul
add
int3
push
mov
in
push
retf
mul
push
push
cmp
xchg
mov
or
adc
dec
mov
fwait
jne
mov
mov
sub
pop
inc
pop
adc
or
jbe
(bad)
in
mov
inc
ins
aaa
mov
ss
enter
pop
mov
rol
cmps
fwait
mov
or
jae
cld
fnsave
inc
into
stc
jb
sahf
leave
std
pop
sbb
sbb
cdq
iret
jbe
jne
push
add
sub
clc
(bad)
das
retf
inc
outs
movs
mov
push
pusha
pop
xchg
jge
shl
pop
mov
add
lds
cmc
scas
inc
mov
(bad)
in
or
ret
mov
mov
push
dec
fst
test
data16
daa
repnz
shl
mov
xchg
outs
rol
aad
push
xor
push
sub
pusha
jo
jne
xor
pop
mov
jle
xor
cdq
and
stc
xor
mov
mov
and
arpl
and
add
imul
mov
cdq
rol
dec
es
and
adc
dec
xor
pop
dec
das
cmp
pop
jns
aas
mov
cmp
arpl
pop
cmps
pop
xor
adc
jp
pop
outs
inc
call
out
add
pop
pop
push
xchg
movs
push
fwait
bound
and
sbb
ss
test
ins
pop
push
xor
cmp
cmp
inc
pop
clc
cmp
sub
sub
xchg
mov
jae
mov
mov
bound
test
adc
jo
popf
mov
lock
inc
ins
add
leave
sti
inc
jmp
xchg
cmp
lods
push
xor
xchg
jle
sahf
pushf
imul
mov
sbb
sub
movs
sahf
dec
xor
xchg
sbb
jbe
cld
mov
add
lea
add
(bad)
cmc
jecxz
repnz
loope
xchg
or
clc
dec
add
out
stos
or
sub
mov
in
push
jo
aas
dec
pop
repz
push
test
and
pop
cmp
xor
xchg
test
pop
lea
jmp
aam
test
jmp
out
jg
mov
xchg
push
call
lds
fimul
fimul
sub
mov
inc
aas
retf
cmp
imul
dec
ins
mov
pop
mov
clc
add
data16
cmps
int3
cmps
adc
dec
mov
int3
sub
dec
xor
int3
(bad)
jl
sub
retf
loopne
ins
sbb
mov
xchg
inc
jae
xlat
neg
sub
adc
pusha
dec
add
push
scas
mov
pop
in
outs
inc
pop
je
addr16
cs
addr16
int
sti
add
lods
pop
movs
loop
into
aas
hlt
mov
push
xor
or
test
in
or
sbb
fldcw
js
movs
push
rol
push
inc
mov
add
(bad)
test
xor
and
sbb
or
or
int3
pop
pop
imul
cwde
pop
add
test
shr
cmp
sti
sub
call
mov
aaa
xor
sbb
mov
scas
xchg
adc
in
les
mov
or
lods
cmp
leave
pop
and
aas
ror
mov
jl
jmp
pop
sbb
cli
xchg
add
aas
clc
xchg
cmc
cmps
fs
push
lds
add
call
sbb
push
adc
aaa
adc
aaa
sbb
mov
adc
faddp
loope
sub
pop
pop
ror
jecxz
in
fldenv
(bad)
movs
call
mov
dec
adc
sti
sub
pushf
aam
je
mov
cld
inc
add
mov
test
add
je
fld
jnp
inc
sub
mov
sbb
dec
adc
sahf
outs
jp
pop
pop
pop
sub
inc
jp
mov
ds
adc
push
out
or
fild
xor
push
fdivp
fsub
sub
add
in
retf
sbb
repnz
dec
mov
cwde
xor
inc
(bad)
push
mov
div
xchg
dec
mov
cmp
in
ja
jnp
cdq
cli
iret
cmp
sub
and
add
xchg
(bad)
push
mov
ins
xor
movs
test
sub
ror
xor
cmps
adc
enter
xor
adc
in
rol
or
mov
sbb
jns
clc
aad
scas
xchg
push
ds
jno
or
push
(bad)
mov
je
push
dec
dec
repz
cli
pushf
xor
dec
repz
jp
xor
std
dec
mov
push
pop
fwait
adc
ret
push
fldenv
or
or
retf
jp
pop
pushaw
mov
arpl
push
je
lds
retf
movs
xchg
lock
retf
imul
mov
fs
enter
pmulhuw
not
ds
pop
mov
lods
test
pushf
push
daa
outs
test
adc
jnp
lods
ins
add
cmp
push
leave
fnstenv
jle
clc
jecxz
stos
in
or
cmp
mov
fnstsw
sbb
movs
movs
and
adc
popa
ret
xchg
push
loopne
add
pusha
movs
fdivr
pop
add
mov
sbb
ins
push
add
repnz
mov
xchg
pop
dec
mov
pop
push
pop
imul
and
add
cwde
ret
stos
dec
cmp
ror
pushw
enter
jg
mov
push
xor
shl
mov
push
xchg
xchg
pushf
cmps
mov
push
jge
fwait
rcr
lods
pop
shr
sar
inc
cmps
cmp
inc
fsubr
ret
je
cmp
aad
lock
push
pop
mov
push
inc
pop
outs
mov
stos
loopne
call
xchg
sbb
in
sbb
jno
dec
div
jmp
sbb
aaa
adc
push
dec
out
adc
or
cmp
adc
pop
aam
mov
pusha
mov
ins
or
sub
in
mov
repnz
pop
pop
mul
cmc
push
jecxz
mov
and
mov
not
(bad)
js
and
xor
mov
imul
mov
data16
cld
push
push
cli
je
xchg
jnp
mov
cvtps2pd
sub
dec
inc
xchg
cmp
sbb
mov
jmp
mov
mov
js
xchg
bound
jb
jmp
push
loope
sub
mov
cli
lods
sub
ss
xchg
arpl
cmp
inc
imul
in
sti
imul
pusha
add
ja
jae
loope
xchg
addr16
adc
retf
cmps
jg
pop
jl
retf
pusha
sbb
xor
into
fisub
push
mov
push
data16
imul
sub
mov
add
mov
or
inc
fcom
sar
rcl
xchg
add
sub
loopne
mov
sub
and
dec
and
push
loop
jo
inc
clc
ror
imul
test
std
pop
add
cmp
dec
or
clc
sub
cmps
pop
cmps
add
or
pop
js
out
sbb
push
lock
jecxz
loope
cmc
mov
dec
fadd
jno
xlat
sbb
in
add
aaa
dec
int
push
xor
popf
jle
js
ret
cmps
out
mov
fisub
sub
sub
dec
mov
imul
mov
mov
jne
shr
movs
mov
cmp
mov
push
(bad)
loope
mul
pop
fnstenv
stc
jl
lea
out
pop
(bad)
mov
xor
in
retf
xor
mov
mov
pop
test
jle
sar
std
dec
sbb
aad
test
pop
xchg
inc
ja
outs
enter
sar
mov
(bad)
push
xchg
dec
enter
sub
xor
je
push
sti
add
mov
and
outs
mov
(bad)
scas
ins
js
cmps
jecxz
add
fwait
rcr
sar
cwde
pop
loop
fcompp
sbb
sbb
jp
mov
popa
ins
fisttp
jle
outs
pop
push
jns
jmp
test
and
femms
ror
jg
mov
cwde
dec
or
push
pusha
cmp
cmp
test
movs
xchg
in
mov
mov
out
inc
gs
cld
adc
xchg
out
push
and
jp
test
cmp
cwde
pop
or
adc
sbb
mov
or
sbb
add
push
(bad)
loop
cdq
rcr
pop
dec
inc
jns
into
out
iret
or
and
and
cld
push
adc
aaa
fld
pusha
sub
push
dec
xor
ret
je
mov
pop
inc
rol
and
cs
(bad)
sahf
sahf
dec
cli
sub
or
(bad)
(bad)
sar
mov
outs
sbb
ret
fld
ret
mov
cmp
jge
mov
out
dec
mov
mov
sahf
sub
xor
pop
data16
mov
daa
hlt
lock
add
lahf
and
jns
jbe
fld
fbstp
jae
mov
mov
ss
cmp
push
fwait
dec
push
es
and
push
iret
adc
mov
int3
cmps
pop
add
iret
mov
rcr
xchg
cdq
fldenv
rol
shl
pop
jg
mov
push
loopne
ins
fnstcw
dec
sub
mov
inc
ins
clc
add
push
and
in
mov
ret
mov
fdivr
mov
push
bound
fs
jl
push
jne
sti
out
dec
jo
xor
dec
jmp
adc
push
leave
int3
add
jmp
loop
mov
mov
cld
loopne
mov
mov
fs
push
int
mov
mov
jne
mov
mov
cmp
movnti
lds
mov
and
push
push
aam
int3
mov
cli
inc
inc
xor
stos
push
outs
cs
dec
and
inc
dec
or
leave
les
mov
aas
cmc
mov
sbb
xchg
jae
jo
int3
jmp
xchg
sub
xor
mov
push
jns
(bad)
call
fiadd
and
ins
lds
pop
xlat
call
mov
or
pop
mov
shr
bound
(bad)
sahf
or
test
mov
sbb
outs
adc
fsubr
fistp
outs
jmp
test
cmps
not
push
lods
dec
in
sub
dec
data16
pop
adc
shl
ss
sub
push
aas
popa
pop
sbb
out
push
push
jne
(bad)
jmp
jae
mov
pop
mov
pop
jne
adc
ins
ins
pop
sbb
xchg
(bad)
das
iret
pop
or
mov
fwait
pop
add
dec
cmp
popa
das
mov
aas
inc
js
test
sbb
inc
movhlps
sti
in
mov
push
push
popf
cmp
cmp
loope
push
mov
push
fldenv
ja
mov
fstp
pop
imul
mov
or
out
mov
out
cwde
pop
adc
sub
std
xor
dec
fmul
rol
adc
rcl
fist
push
cmp
idiv
ds
aam
ret
push
mov
out
push
scas
dec
call
adc
ins
sub
mov
and
and
xchg
jbe
mov
fwait
pop
mov
sahf
rcl
xor
xchg
mov
mov
(bad)
cli
sub
sbb
mov
lods
jle
push
movs
dec
fimul
xor
je
mov
aas
jecxz
mov
(bad)
or
inc
jnp
sub
aam
adc
imul
inc
jmp
(bad)
sti
push
sar
movs
sbb
out
(bad)
fnsave
les
pop
retf
mov
fisttp
adc
movs
imul
data16
jns
stos
cmc
icebp
(bad)
mov
and
mov
mov
in
mov
pop
in
push
es
add
pop
into
int3
ins
add
pop
and
mov
add
lahf
nop
not
push
inc
imul
pop
leave
cmp
or
mov
cmp
xor
outs
daa
inc
inc
or
stc
mov
jae
adc
inc
lods
mov
iret
adc
les
data16
sub
mov
je
mov
mov
pop
adc
mov
mov
retf
add
bound
data16
pop
cmp
sub
sbb
fldenv
sub
cmp
adc
shr
push
ret
adc
xchg
ret
mov
test
jg
sbb
push
ret
ins
aaa
xor
not
dec
mov
jl
jae
cdq
sbb
sub
xchg
fsub
jmp
lock
test
push
stc
out
dec
lock
inc
sbb
inc
movs
or
(bad)
mov
adc
cmp
add
adc
dec
push
dec
adc
dec
cmps
dec
dec
inc
cmp
add
pop
fcom
sub
dec
xchg
pop
pop
(bad)
pop
cwde
jmp
pop
clc
aaa
push
and
xor
dec
push
push
cli
push
scas
sti
(bad)
dec
and
inc
lock
jl
add
sti
stc
pushf
sbb
pop
mov
fmul
cmp
push
jle
sbb
hlt
mov
inc
mov
lea
add
push
or
shr
pop
jns
mov
or
in
adc
jmp
dec
movs
pop
ficomp
loope
ficom
push
(bad)
loope
mov
and
jo
lds
cmp
loop
add
out
sub
ret
cmps
jp
fiadd
outs
cmp
add
std
ss
paddb
jo
data16
mov
rcl
sbb
adc
stc
mov
mov
dec
std
push
test
push
add
popa
movs
std
or
xchg
xchg
dec
xlat
rcr
aam
aad
push
cdq
cmps
sbb
out
jl
idiv
in
or
fidivr
mov
or
aad
sbb
in
cmp
and
leave
sbb
shl
and
in
mov
cmp
icebp
push
cmc
retf
sbb
mov
adc
clc
mov
jb
xor
es
or
rcl
sbb
xchg
popa
mov
pop
call
cmp
adc
xor
lods
cli
pop
push
fimul
mov
ds
ror
aam
cmp
outs
test
push
cmc
mov
sbb
mov
mov
das
add
sti
pop
ds
lods
mov
mov
dec
loop
jl
cmpxchg
jmp
jns
sahf
and
cwde
dec
adc
jne
popa
lds
or
(bad)
adc
in
jle
jle
retf
pop
push
repz
mov
cmp
aaa
(bad)
(bad)
xchg
push
loop
sbb
adc
jae
mov
xor
mov
mov
jae
int
push
sub
out
test
dec
imul
cmp
scas
xchg
inc
jae
lock
in
pop
scas
adc
sar
mov
outs
xor
ins
and
iret
mov
mov
cmp
pop
pop
mov
bound
hlt
outs
xchg
std
jb
pusha
mov
movs
mov
(bad)
mov
xlat
jmp
sbb
imul
sti
aad
shl
repnz
scas
or
mov
ins
jno
push
ins
mov
jne
cwde
jno
pop
data16
stos
sub
cmp
stc
pop
mov
mov
mov
imul
mov
lock
mov
push
retfw
cld
out
xchg
push
mov
xchg
fadd
aam
out
enter
movs
pop
sbb
ins
inc
cmp
out
int3
or
dec
xchg
sub
sbb
xchg
add
int
int
loope
enter
popa
adc
fimul
lea
rol
shr
push
call
fcomp
and
imul
pop
add
xchg
leave
dec
cdq
pop
push
xchg
mov
dec
cmp
cmp
enter
loope
xchg
test
xchg
xor
mov
cmp
sub
nop
int
or
stc
add
inc
mov
pop
add
in
and
or
ret
lods
pop
call
mov
xchg
movs
fdivr
es
stos
cs
lahf
stc
inc
dec
rcr
sbb
and
mov
sbb
sbb
pop
in
or
jo
(bad)
retf
xchg
push
shr
inc
(bad)
push
popa
push
ins
(bad)
lock
xchg
sub
cmp
shl
xchg
sub
adc
pop
push
or
push
cld
push
repz
mov
cmp
clc
inc
je
fadd
xlat
aaa
xchg
push
aas
rol
xchg
jg
call
sub
imul
loopne
dec
lods
and
loop
xlat
test
jne
movs
ret
xchg
mov
add
push
sbb
inc
sbb
das
in
mov
xor
aad
movs
inc
mov
add
test
in
out
cs
push
repnz
and
mov
mov
and
mov
loope
iret
dec
adc
pop
jne
pop
or
mov
add
xor
aad
pop
movs
outs
leave
(bad)
jae
scas
mov
test
push
pop
(bad)
dec
stc
mov
loop
loopne
xor
xor
fnsave
stc
hlt
mov
sbb
call
sub
arpl
push
adc
or
aaa
ficom
inc
xchg
jmp
dec
jmp
adc
jl
outs
inc
pop
dec
sbb
pushf
ja
xor
xchg
ror
push
push
and
sar
ss
or
leave
or
std
fisubr
or
mov
rcl
mov
test
outs
mov
shl
in
mov
jecxz
and
add
out
jecxz
sub
or
jl
xacquire
cdq
test
sbb
jecxz
jle
sbb
jo
shl
fnstenv
neg
cdq
repnz
gs
jmp
sahf
jge
mov
or
(bad)
jbe
(bad)
mov
xchg
jle
xor
data16
xchg
inc
call
retf
(bad)
data16
sbb
fwait
xor
das
push
pusha
je
push
jecxz
mov
push
int3
(bad)
outs
cli
adc
imul
call
fyl2x
(bad)
repnz
arpl
jne
neg
(bad)
adc
pop
adc
mov
lock
test
es
int
dec
into
gs
add
xor
sub
xor
push
enter
jno
dec
fisubr
aam
adc
movs
ret
jns
and
sub
call
pop
push
in
adc
adc
cmp
lods
out
dec
or
(bad)
ins
mov
test
mov
pop
retf
xchg
pop
xchg
add
add
cmp
cmp
aam
or
push
pushf
mov
mov
std
xor
(bad)
and
scas
mov
gs
push
sbb
popa
into
call
dec
out
int
lods
sub
(bad)
enter
xor
sbb
scas
out
mov
push
add
jg
lahf
rcr
(bad)
or
es
add
adc
cmp
ror
imul
add
mov
mov
or
push
imul
int3
outs
rcl
lods
sub
sub
jle
jle
dec
aam
mov
stc
call
hlt
fstp
push
mov
pop
sub
repnz
pop
fild
in
cmp
push
repz
shl
push
test
imul
or
lock
cmc
pop
inc
or
loopne
pop
addr16
inc
or
(bad)
shl
mov
bound
pop
lods
jae
fisub
sub
dec
mov
(bad)
les
mov
stos
pop
xchg
push
dec
sub
ds
dec
pusha
rcl
push
rcr
jb
gs
int3
movs
ret
into
sub
pushf
or
xor
aam
sahf
(bad)
jmp
pop
neg
imul
sbb
lds
add
sbb
mov
inc
outs
adc
ror
scas
lods
jmp
mov
lods
push
arpl
and
(bad)
shr
cmp
mov
stos
adc
inc
push
cmp
xchg
fnstcw
cmp
xchg
add
fisub
mul
or
dec
out
pop
movs
jmp
lds
mov
popa
cmp
mov
popa
xchg
fistp
popf
daa
xchg
and
outs
dec
pop
dec
(bad)
retf
sbb
je
adc
hlt
mov
sbb
das
sub
in
pop
adc
ret
add
or
sar
push
loopne
sbb
inc
add
dec
add
xchg
mov
shl
jmp
(bad)
cli
aad
sbb
popf
inc
pop
call
shr
jecxz
pop
cli
xchg
pop
imul
mov
ss
fld
jge
rcr
jmp
inc
or
(bad)
mov
or
ret
into
mov
sbb
ror
lahf
push
jne
jno
pop
(bad)
cli
fs
push
mov
sbb
fs
fwait
cmp
fs
add
in
ror
xchg
and
mov
mov
jb
jbe
retf
lods
stos
ss
ret
daa
stos
loop
or
mov
test
pop
ror
xchg
pop
(bad)
push
or
and
cmp
mov
ret
xchg
shr
mov
and
cs
push
mov
adc
in
mov
out
lock
jge
out
test
ficom
movs
jecxz
lds
pop
hlt
mov
out
push
xchg
test
push
popf
inc
bound
adc
mov
in
pop
test
xor
push
test
mov
mov
inc
js
add
pop
sbb
cld
dec
push
and
pop
inc
in
adc
and
ret
mov
out
sbb
sub
fcom
push
mov
mov
aam
inc
fisttp
sub
cmp
stc
cmp
scas
mov
jns
push
das
fst
mov
loope
xchg
pop
in
test
jecxz
test
jl
add
push
mov
mov
xchg
push
daa
loop
xor
sbb
add
mov
ja
bound
sbb
leave
inc
rcl
sti
lea
sub
outs
aas
cld
jge
pop
mov
jb
fadd
ds
clc
test
mov
add
mov
lods
jl
cmp
push
jg
sub
mov
into
fild
sub
inc
retf
ss
cwde
sub
add
repz
lahf
clc
and
test
dec
dec
int3
add
dec
sub
push
pmaxub
(bad)
inc
jmp
push
leave
and
add
outs
cmp
and
xor
jmp
ror
dec
stos
add
xor
repnz
or
mov
xor
mov
xchg
add
lea
mov
and
push
sbb
mov
es
addr16
les
(bad)
(bad)
inc
or
inc
fimul
mov
mov
loope
lock
iret
pop
jb
mov
loope
pop
mov
dec
inc
push
addr16
mov
add
test
sub
mov
pop
sbb
stos
fsubrp
jne
sub
push
call
sbb
inc
xchg
xor
aam
add
leave
pusha
mov
xchg
mov
sahf
mov
inc
pop
aas
stc
rcl
sbb
jle
gs
(bad)
jmp
aaa
fbstp
stos
pop
add
push
sbb
shl
lahf
cmp
xchg
dec
xchg
pop
xlat
les
and
xchg
fild
sub
cmps
scas
pop
add
jmp
mov
loope
xchg
adc
and
movs
and
xchg
dec
sti
popa
mov
retf
jecxz
je
les
outs
pop
div
ror
stos
inc
or
xchg
xchg
fxch
out
jne
ss
pop
xchg
sbb
xor
adc
repz
or
lods
and
icebp
cmp
rcl
push
fisttp
clc
ds
inc
in
push
mov
movs
xchg
xor
outs
jl
repz
xchg
cmp
pop
sbb
cld
test
cmps
inc
aas
and
je
test
mov
fbstp
inc
and
mov
fild
add
push
lahf
loopne
jmp
cmp
stos
lods
fld
pop
and
(bad)
(bad)
cmp
ret
push
lods
xchg
push
push
sbb
push
sub
(bad)
dec
cmp
xor
pop
push
push
leave
outs
mov
jle
out
dec
retf
pop
jae
in
ss
data16
pop
stos
mov
and
call
xchg
push
clc
fldenv
and
mov
jns
jae
fcomp
mov
inc
add
sub
dec
fs
es
pop
movs
(bad)
rol
jbe
popa
or
mov
std
shl
je
shl
xchg
push
stos
sub
cmps
scas
jle
mov
mov
addr16
lock
add
xor
ret
pusha
ja
or
ds
add
inc
push
sub
sub
xchg
xor
pusha
pop
cwde
fidiv
mov
cmps
ins
ja
std
sbb
push
fdiv
movs
enter
mov
jecxz
add
or
mov
or
inc
das
mov
gs
pushf
pop
jns
retf
test
and
and
fwait
test
mov
(bad)
es
xchg
iret
jmp
xchg
xchg
push
push
xor
push
pop
clc
sub
in
dec
mov
sub
xlat
push
movs
or
ret
dec
jne
mov
inc
scas
mov
jmp
fstp
mov
popa
jbe
cs
add
aas
jbe
jmp
jne
xor
fwait
jno
jmp
and
mov
repz
lds
loop
ret
sti
pop
sbb
bound
test
rcr
jmp
or
fmul
sbb
(bad)
test
fs
add
sub
pop
mov
or
add
stc
ss
bsf
mov
retf
fdiv
in
das
push
dec
adc
pop
add
jge
test
xor
pop
cmp
pop
cdq
push
push
sbb
daa
ja
movs
inc
cs
or
(bad)
mov
das
dec
and
or
dec
(bad)
xor
mov
scas
mov
inc
push
inc
xor
scas
inc
xchg
sbb
clc
sbb
jle
push
adc
repnz
enter
mov
pop
rcl
pop
outs
sbb
stc
aas
xchg
cmp
lar
popf
dec
dec
sub
xor
mov
test
inc
fsub
and
sti
icebp
and
jae
mov
push
push
in
and
(bad)
mov
outs
mov
add
arpl
je
mov
pop
pop
fmul
inc
jno
xor
adc
jle
jne
push
mov
adc
(bad)
mov
lods
cmps
psllq
cli
dec
repnz
cmp
sar
in
(bad)
mov
fidivr
jecxz
or
cmp
ins
(bad)
and
cdq
jmp
push
mov
retf
sub
rol
jge
dec
adc
xchg
mov
dec
mov
out
xchg
fisub
or
test
jge
shr
out
das
add
lea
cdq
nop
mov
mov
push
jp
dec
(bad)
sti
xchg
shr
cmp
pushf
jg
cmp
xchg
push
cld
add
sub
pusha
push
loope
sbb
xchg
in
inc
arpl
dec
and
jl
pop
mov
xchg
mov
call
mov
cld
out
sub
mov
jne
dec
mov
sbb
icebp
jge
dec
push
(bad)
aaa
addr16
nop
(bad)
hlt
inc
cli
pop
scas
mov
es
pushf
xchg
add
pop
loope
sbb
ins
cmc
adc
test
push
sub
fpatan
sbb
mov
data16
call
rcl
xchg
pop
cmp
or
mov
pop
xchg
imul
or
js
push
test
ficom
(bad)
dec
mov
cmp
daa
xor
pop
and
out
fcom
and
or
jecxz
add
xor
or
lds
adc
sub
ret
dec
cmp
enter
and
cmp
jmp
inc
std
cwde
stc
stos
fisub
pop
mov
movs
enter
fsubrp
jns
push
pop
sub
cmps
das
icebp
pusha
add
jge
mov
loopne
or
xchg
sar
je
inc
push
xor
and
sbb
adc
cmp
stos
mov
mov
push
inc
ret
xchg
xchg
jo
and
clc
ficomp
xchg
pusha
inc
mov
and
out
pop
mov
mov
xchg
push
xchg
clc
mov
jge
or
or
lea
mov
scas
stos
jmp
ins
xor
sbb
jmp
lds
je
in
retf
sbb
js
je
mov
push
data16
or
fstp
xchg
dec
dec
mov
imul
jo
push
jo
imul
pop
loopne
jo
mov
js
loopne
cmc
and
dec
xor
mov
pop
stos
and
pop
dec
ins
sub
enter
sub
mov
inc
loope
fisttp
aam
mov
push
test
jecxz
pop
mov
fdivr
fs
mov
push
mov
mov
mov
jmp
jp
and
popa
sub
inc
mov
xchg
dec
add
xchg
inc
hlt
xlat
repz
outs
or
imul
pop
xchg
xchg
sbb
pop
dec
leave
mov
repnz
jp
mov
bound
je
mov
lock
aam
(bad)
lods
sti
mov
sbb
push
and
mov
loope
dec
shl
xor
mov
mov
adc
int3
pop
xchg
sbb
xor
push
jb
cdq
xchg
scas
les
adc
cmp
aam
inc
call
or
outs
jcxz
loopne
aad
xchg
and
fistp
ins
jmp
mov
pop
iret
add
jmp
push
jge
xor
(bad)
cwde
inc
jge
out
or
sbb
(bad)
dec
mov
cmp
aas
mov
xor
cmp
dec
scas
mov
out
jnp
ds
daa
clc
rcr
jo
hlt
cwde
lock
xchg
gs
and
mov
ret
out
adc
(bad)
scas
jmp
(bad)
pop
cmp
xchg
mov
dec
lods
lods
push
jge
test
inc
adc
std
add
inc
cmp
mov
lds
mov
mov
cmc
and
(bad)
mov
sbb
ds
mov
mov
jle
and
dec
imul
es
and
push
adc
(bad)
pop
ds
push
jns
lahf
mov
mov
inc
push
or
fwait
inc
sbb
je
retf
fninit
jl
movs
inc
repnz
cmp
cmp
ins
xchg
push
std
mov
xor
mov
mov
imul
push
push
(bad)
mov
repz
in
or
lds
outs
jmp
jb
cvttps2pi
data16
xchg
xor
int
pop
dec
and
or
sti
or
pushf
cmp
push
xor
jo
rcl
and
inc
dec
lods
cli
aam
(bad)
cmp
mov
fld
scas
stc
inc
or
int3
cdq
jmp
cld
and
mov
push
(bad)
rol
js
out
xchg
dec
je
xchg
aad
(bad)
das
dec
jmp
test
cld
mov
jecxz
add
and
and
(bad)
addr16
cmp
fcomp
dec
es
retf
cmc
jg
(bad)
sbb
jge
xor
adc
mov
test
pop
fwait
add
cmpxchg
nop
sbb
nop
adc
movs
xchg
fisttp
out
test
push
sbb
sar
popa
sub
arpl
test
and
pop
xchg
mov
aam
add
lock
sub
and
fs
scas
sbb
jno
xchg
xor
pop
jo
outs
push
fldcw
in
push
test
push
and
dec
out
push
mov
push
lods
movs
into
xor
dec
sbb
daa
aaa
mov
xchg
jne
mov
outs
cmps
sti
mov
push
les
adc
pop
adc
dec
cmp
ret
popf
call
jle
sub
das
pop
adc
(bad)
fnsave
dec
inc
hlt
sbb
cmp
inc
dec
mov
mov
jg
jno
xchg
pop
jns
loope
movs
loope
pop
clc
cmp
jnp
inc
dec
pop
pop
das
les
mov
int
imul
in
mov
les
sub
cld
adc
stc
pop
cwde
fs
loopne
mov
and
jl
sbb
outs
push
sti
ret
push
sub
outs
mov
loope
ins
outs
fs
sti
push
push
xlat
mov
cmp
dec
xor
std
ret
mov
cmp
mov
and
repnz
ret
jb
ins
dec
inc
jbe
cmps
ja
xchg
adc
lock
lods
gs
aas
push
cmp
mov
push
(bad)
sbb
xor
cmp
in
outs
push
sti
jbe
out
loope
mov
pop
cmp
sbb
fs
retf
sar
iret
(bad)
aas
jge
sub
jo
mov
aam
lahf
or
cli
aaa
xchg
clc
sbb
sub
mov
adc
push
inc
add
je
pop
sbb
add
cmp
or
retf
mov
shl
xor
xor
daa
sbb
pop
pop
adc
movs
retf
inc
jmp
popa
or
pop
fild
jle
push
ds
clc
add
(bad)
rol
test
mov
inc
stc
sbb
or
hlt
mov
add
addr16
scas
lods
scas
ss
sub
jle
cs
inc
jo
sar
(bad)
shl
outs
(bad)
popa
sub
(bad)
push
ret
iret
mov
jnp
mov
lods
xchg
sbb
je
sub
push
sub
sbb
cmp
jg
mov
mov
test
xchg
test
stc
mov
inc
jb
xchg
sbb
jns
mov
push
ins
mov
ja
les
sub
jg
not
aas
jl
fiadd
imul
add
out
aad
push
repz
pop
sbb
xchg
repnz
add
xchg
push
or
loope
lock
adc
daa
fistp
scas
cdq
es
push
mov
and
loopne
sub
mov
mov
jbe
cld
sub
sbb
and
pop
push
mov
mov
sbb
nop
aam
fcomp
dec
cwde
add
je
xchg
push
iret
lahf
mov
(bad)
jge
cmp
xchg
dec
xor
call
fisubr
jns
fldcw
push
imul
dec
cmps
jg
arpl
out
test
and
mov
leave
mov
xor
adc
xor
push
mul
push
push
dec
push
push
call
in
jne
add
cmp
(bad)
or
and
jmp
shr
pandn
je
xor
and
jge
jmp
fisub
leave
mov
scas
adc
sub
(bad)
mov
sahf
mov
movs
fidiv
outs
jbe
or
cmp
jne
add
xchg
test
and
mov
jmp
mov
and
sbb
push
jp
popf
inc
fcom
mov
int
dec
xor
icebp
xchg
jmp
pop
les
into
(bad)
div
sti
xchg
in
pop
jne
cmc
bound
fdivr
jecxz
xor
and
push
shr
dec
jo
push
and
popf
add
ins
mov
or
call
push
(bad)
mov
dec
or
sbb
inc
pop
data16
je
pop
mov
sbb
add
es
xchg
lock
(bad)
cld
sbb
pushf
sub
shr
adc
dec
mov
adc
xor
mov
xchg
dec
or
lea
xor
lds
sti
jno
jo
sbb
and
xor
icebp
hlt
jmp
xchg
scas
out
popf
ret
iret
jns
ror
xor
pop
popf
pop
cmp
out
mov
retf
popf
sub
(bad)
repnz
inc
mov
dec
mov
leave
inc
and
fsub
sub
push
mov
cmp
jb
sbb
scas
pusha
pop
jp
xor
jge
lahf
inc
xlat
mov
or
cmp
das
xor
and
cmc
cdq
mov
add
add
or
pop
gs
mov
das
jb
pushf
pop
mov
dec
ret
in
jne
lods
sar
sbb
(bad)
loope
mov
ins
ss
movs
aas
test
and
inc
ror
movs
pop
sub
gs
in
imul
inc
push
popf
jno
iret
lahf
xor
inc
push
jl
mov
pop
test
repz
xor
pusha
stc
jmp
sub
or
popf
push
sub
jp
cwde
and
loop
jbe
push
or
(bad)
jmp
cmp
sti
jmp
mov
inc
xlat
ds
fist
or
bswap
out
fstp
pop
nop
or
xor
mov
fdiv
aaa
repnz
(bad)
inc
cmp
dec
out
and
fcomp
enter
jo
jmp
jo
or
push
cwde
push
jae
imul
ins
in
sub
fisttp
repz
fs
inc
ret
xchg
es
inc
loopne
cs
xor
loopne
xchg
mov
out
cwde
sbb
xchg
je
sbb
popa
sti
dec
clc
and
pop
xor
aaa
jp
cmp
cmp
stc
int
dec
dec
fxch
inc
enter
dec
xor
mov
mov
pop
dec
mov
and
out
xchg
hlt
xlat
or
shl
cmps
mov
stc
pop
jnp
add
xchg
cdq
aaa
sbb
or
cmc
mov
push
(bad)
psraw
jae
iret
test
mov
shl
cmp
into
pop
loopne
push
mov
fcom
int
mov
pop
add
loope
or
xchg
sub
jmp
loopne
sub
jecxz
and
std
mov
mov
ds
retf
arpl
mov
in
jmp
xor
lea
pop
xor
fidiv
cmc
add
xlat
mov
out
sub
jp
cs
jge
and
pop
mov
in
cmp
pop
out
or
jge
mov
and
mov
div
test
xchg
test
lahf
pop
or
cmc
sub
adc
xchg
sbb
es
jno
cld
cs
pop
retf
je
jno
ror
test
pusha
sbb
arpl
cmps
lock
test
mov
out
sub
test
ss
add
or
or
jge
and
shl
call
je
pop
pushf
sbb
out
fild
shr
cmp
jns
xor
push
test
hlt
mov
push
ins
mov
repz
jb
repnz
(bad)
shr
leave
sbb
rcl
ins
push
inc
test
adc
ror
xchg
ret
pushw
imul
pop
sar
mov
inc
sahf
int3
cmovge
movs
lea
adc
mov
jmp
fbstp
addr16
fwait
xor
add
imul
and
dec
fimul
jae
dec
and
inc
aaa
je
adc
loope
mov
adc
xchg
and
mov
jbe
jg
push
push
sbb
or
or
aam
jo
jne
xor
jl
shr
rol
cld
push
xchg
inc
out
dec
cwde
mov
ror
sbb
fmul
sbb
add
mov
xchg
xor
pop
mov
(bad)
pop
inc
dec
adc
int3
push
add
test
clc
or
mov
mov
test
inc
test
ins
xor
int
adc
les
cli
inc
dec
dec
mov
pop
ins
sub
jnp
js
js
adc
pop
jno
rcr
adc
neg
jmp
sub
xor
xchg
ret
repz
lods
dec
ins
inc
fild
(bad)
(bad)
mov
xor
jbe
(bad)
jecxz
mov
push
jle
icebp
sub
sbb
(bad)
nop
push
or
mov
inc
outs
aam
aas
shl
(bad)
das
add
sub
je
pop
mov
imul
push
ror
push
jp
hlt
and
cmp
mov
mov
xchg
retf
sbb
xchg
out
stos
mov
mov
cmps
loope
add
(bad)
lea
add
mov
sub
in
iret
call
test
pop
push
in
pop
add
inc
mov
in
xlat
adc
add
mov
sar
xchg
idiv
pop
aas
cmps
xchg
and
or
xor
hlt
gs
stos
sbb
pushf
mov
repnz
ret
adc
sub
jecxz
xchg
stc
in
push
into
adc
inc
pop
in
add
push
or
and
xchg
sahf
je
cli
sbb
push
xlat
sbb
or
or
fsubr
sub
sbb
or
mov
dec
(bad)
jb
jge
ins
sbb
lods
inc
cld
fs
shl
rcr
mov
pop
cmp
leave
mov
sub
scas
dec
mov
outs
es
ret
jmp
dec
aaa
xchg
call
outs
push
(bad)
and
and
jbe
inc
aas
xchg
je
add
cli
sti
movs
sahf
loopne
scas
jmp
aam
adc
adc
add
cmp
scas
xor
ins
fwait
enter
fxch
ds
fcom
dec
push
test
cld
bound
ja
and
mov
and
push
xchg
sahf
sub
test
pop
repnz
inc
xchg
loope
jp
jmp
popa
mov
fwait
rcr
fild
int
aam
adc
int3
push
push
or
call
cmp
push
push
(bad)
sbb
ret
icebp
test
enter
add
fwait
sahf
mov
cmps
mov
bound
mov
and
mov
mov
adc
and
xchg
xor
cmp
mov
dec
and
xchg
popa
inc
mov
repz
mov
push
sar
sbb
push
or
push
loopne
dec
sbb
jle
push
rcl
push
cli
push
shl
jae
mov
das
inc
dec
xchg
dec
sar
xor
mov
inc
cmps
jns
xor
les
jns
jle
push
mov
and
jne
call
or
cmp
and
not
xchg
xor
sub
cmp
ja
in
aam
push
pop
iret
call
cmp
pop
test
or
jns
jb
into
sub
dec
(bad)
mov
cmp
daa
mov
nop
pop
dec
out
push
sbb
leave
pop
xor
cmps
call
es
xlat
ja
shl
adc
cs
jmp
push
xchg
xor
pop
aad
lods
stos
inc
sbb
add
fs
rol
movs
add
ret
loop
xchg
jmp
outs
cmp
xchg
mov
test
xchg
xor
scas
scas
or
in
add
pop
fucomi
adc
int3
pop
sub
(bad)
aaa
arpl
adc
das
inc
mov
out
or
(bad)
in
or
rcl
cmp
enter
jmp
cmp
dec
(bad)
sub
sbb
sub
shr
sub
das
into
das
jae
hlt
mov
cmp
hlt
push
jmp
mov
int3
jne
push
inc
adc
sub
cmc
aad
loop
push
int3
xchg
js
mov
lahf
arpl
mov
movs
(bad)
cld
xchg
sbb
mov
mov
jmp
xor
jg
lds
add
ja
sbb
or
cmp
test
data16
or
cmp
add
xlat
mov
imul
and
xchg
mov
push
jns
pop
dec
or
sahf
mov
out
lahf
sbb
cmp
mov
bound
nop
pop
mov
fs
sub
pushf
int3
jp
mov
lods
out
das
inc
sub
cmc
(bad)
sub
cmp
or
jecxz
xor
mov
push
fst
add
fmul
(bad)
xchg
rcl
nop
sub
pop
mov
mov
mov
cwde
or
push
std
hlt
(bad)
in
jle
mov
test
ja
push
sub
sbb
mov
out
mov
mov
lock
pop
fadd
inc
jp
pushf
sti
cdq
mov
bndstx
std
cmp
int
ja
retw
pop
pop
push
clc
test
sahf
leave
push
or
out
pop
scas
mov
sahf
xor
mov
dec
rcl
or
jnp
mov
mov
jae
fs
call
xor
popa
mov
jmp
aam
jo
aad
sbb
div
outs
sub
out
sbb
xchg
jmp
call
in
loope
int3
clc
pop
jmp
cmps
dec
dec
or
call
jg
in
push
jbe
mov
(bad)
cmc
sbb
or
jne
jmp
cdq
in
outs
xchg
mov
out
inc
pop
inc
shl
or
fisub
pop
movs
rol
jae
out
jge
and
imul
mov
dec
sbb
mov
out
mov
inc
(bad)
jecxz
icebp
stos
test
ror
xor
mov
retf
std
mov
mov
(bad)
fdivr
aaa
push
cmps
jmp
fcomp
aad
xchg
test
push
nop
fsubr
sub
and
xlat
fidiv
test
mov
xchg
mov
jns
inc
sub
mov
cmp
loope
gs
sub
sahf
mov
and
(bad)
jge
hlt
jno
mov
(bad)
(bad)
sub
mov
or
jle
sbb
out
jb
add
int
(bad)
stos
pop
or
and
sbb
or
in
mov
xchg
cs
dec
ret
sbb
leave
dec
push
sub
fld
cmp
sub
jo
xor
lods
ins
jl
clc
test
xchg
pop
dec
xchg
dec
out
push
cmp
scas
loopne
lock
push
fist
mov
or
adc
out
xchg
push
(bad)
test
xchg
cmc
and
sahf
(bad)
cmc
inc
xor
xchg
fst
dec
in
dec
retf
jnp
mov
call
cmp
push
cdq
dec
add
jb
jl
sbb
push
call
pop
nop
sti
mov
jno
jne
xchg
(bad)
movs
sti
add
sub
int
xor
pop
xor
jmp
test
xchg
fldenv
sub
sar
cmp
sbb
aad
xor
add
call
add
iret
mov
(bad)
mov
mov
xchg
mov
out
dec
scas
sbb
cli
pop
repz
dec
jae
lahf
sbb
push
push
jbe
fild
scas
jns
adc
cwde
jp
push
movs
adc
leave
inc
dec
movs
adc
xchg
or
out
neg
or
push
lods
call
pop
inc
mov
push
data16
push
mov
xchg
test
pop
inc
(bad)
(bad)
pop
and
or
cld
mov
add
rcl
fs
mov
out
cmp
pop
ret
sbb
popf
jae
clc
or
fdivr
in
loop
sbb
and
repz
enter
jmp
or
mov
lods
add
jb
in
int3
xchg
sub
mov
sub
or
outs
xchg
lock
jbe
mov
ins
mov
test
add
push
inc
cli
pop
inc
sti
(bad)
fwait
and
dec
ffreep
fiadd
fimul
pop
gs
and
jecxz
dec
or
retf
(bad)
pusha
cmp
xchg
dec
push
mul
mov
loopne
int
pushf
sub
std
add
fldenv
xchg
lea
mov
jl
adc
test
and
imul
lods
push
cmp
xor
and
jne
repnz
ret
int
xchg
idiv
ror
xor
fdiv
jp
aas
pop
xchg
ss
sub
mov
test
inc
sbb
les
repnz
mov
ss
xchg
adc
mov
mov
sub
cdq
(bad)
scas
inc
push
mov
(bad)
call
pusha
adc
in
shl
pop
jmp
pop
adc
in
cmc
or
mov
adc
mul
cmp
jmp
pop
les
pop
aas
sub
(bad)
and
inc
aas
push
mov
push
sbb
mov
push
mov
int3
gs
add
out
sub
jge
loopne
mov
bound
push
or
test
cmp
data16
test
mov
in
jecxz
adc
cmps
mov
mov
xchg
sbb
or
pop
fldenv
test
arpl
pop
push
lods
sub
clc
dec
mov
out
repz
jg
out
movs
push
pop
pushf
out
lods
inc
jns
in
jae
int3
cmc
ret
cmps
aas
jmp
sbb
jle
push
cld
clc
out
jnp
inc
out
and
mov
jle
inc
std
and
jle
sti
push
jae
in
mov
jp
sbb
(bad)
sbb
jns
int3
inc
ss
xchg
lea
mov
sub
and
in
push
jg
inc
push
loop
fldenv
xchg
bound
stos
or
mov
mov
cmp
mov
test
test
jns
cmp
fcom
sub
cli
jl
adc
ret
cs
mov
cs
cli
std
(bad)
ret
or
mov
jle
clc
adc
nop
sbb
in
iret
inc
arpl
nop
ja
xchg
or
cld
xchg
pop
ror
dec
int
inc
push
dec
ror
retf
adc
lahf
mov
add
jne
mov
mov
ret
jns
jle
lds
mov
repnz
sub
jecxz
ret
movs
dec
inc
std
cmps
sub
add
xchg
inc
pop
xchg
cs
xor
xchg
rol
jmp
and
clc
adc
into
jne
or
add
popa
outs
outs
imul
mov
test
inc
or
add
jmp
jnp
fld
and
stos
aaa
icebp
fdiv
sbb
mov
sbb
jle
gs
scas
arpl
dec
mov
jmp
lods
push
shr
cmp
movs
jo
std
mul
xchg
fadd
xor
or
rcr
mov
jnp
into
aad
sbb
ins
sbb
xchg
add
jb
das
int3
xchg
push
sub
or
arpl
lods
jae
pop
mov
xchg
and
outs
jbe
xor
push
test
pop
stos
cdq
(bad)
push
cmp
adc
pop
mov
push
xchg
les
pop
inc
out
jne
ss
das
aaa
fcmovb
mov
mov
inc
aad
mov
mov
test
fistp
outs
jge
push
pop
(bad)
std
stc
(bad)
sbb
fs
and
cmp
bound
gs
jge
fs
mov
jg
add
sub
pop
fdivr
test
cmps
inc
mov
popa
ss
push
pop
xchg
int3
inc
or
push
pop
repz
mov
mov
fisubr
adc
dec
cmp
test
sbb
aad
pop
sar
cmp
retf
xchg
out
add
leave
and
pop
scas
shl
mov
cwde
add
or
mov
test
push
fsub
pop
jmp
sbb
sbb
inc
push
sbb
push
pusha
mov
jae
mov
into
and
mov
cs
cwde
ds
or
fs
(bad)
mov
in
push
jnp
mov
and
enter
call
jmp
cli
dec
jns
mov
lock
and
mov
out
lods
loopne
jne
aas
sbb
xor
test
cmovs
in
out
ret
adc
xor
mov
mov
fnstsw
sbb
mov
(bad)
fisttp
adc
mov
inc
dec
call
sbb
push
xor
dec
adc
adc
dec
sahf
xor
(bad)
(bad)
cmp
ficom
xchg
inc
ror
dec
lahf
test
push
stc
fwait
js
pushf
jmp
out
fbstp
push
xor
lahf
adc
mov
movs
jl
jg
jle
mov
icebp
cmp
push
mov
xor
jae
imul
add
ror
push
pop
xchg
and
cmp
inc
retf
bound
adc
push
mov
dec
mov
cmp
jno
fstp
pop
push
gs
adc
mov
jb
push
fidivr
hlt
add
dec
popf
sub
push
xor
jl
aam
jg
jmp
std
ficomp
inc
push
scas
sub
pop
loopne
lock
(bad)
cmc
inc
jns
jle
jne
push
mov
jg
and
mov
daa
es
(bad)
out
cwde
addr16
sub
aad
loope
add
add
stos
dec
and
mov
les
sub
xor
mov
mov
out
inc
sbb
cmp
or
pop
je
adc
leave
adc
sub
jo
cmc
fstp
int
ins
(bad)
loopne
int3
xor
mov
je
sbb
push
ret
pop
or
retf
(bad)
(bad)
imul
and
sub
test
sub
sub
rcl
cs
and
sbb
add
in
jb
jl
ror
sbb
daa
or
adc
push
scas
mov
jmp
pop
mov
loop
cs
sbb
push
test
pop
pop
cmp
and
adc
mov
pushf
in
dec
(bad)
inc
jno
ficom
mov
test
sub
test
pusha
mov
sbb
test
pushf
dec
lahf
icebp
and
jo
jo
ss
mov
xor
or
or
jge
pop
sbb
dec
adc
ret
imul
mov
retf
mov
fs
popf
adc
and
xchg
mov
xchg
or
dec
jb
pop
lods
in
jle
and
cmps
scas
mov
jg
push
jo
push
test
lea
sbb
pop
lds
outs
jo
fistp
jg
sahf
outs
stos
stos
addr16
jbe
push
fidiv
int
sub
add
in
sub
xor
xor
cmp
add
cmp
sar
xor
add
movs
mov
stos
ficom
sbb
(bad)
dec
cli
test
adc
sbb
mov
int3
in
add
or
xor
sbb
mov
test
and
nop
fwait
add
push
shl
add
in
mov
mov
jbe
add
xor
inc
sbb
jmp
test
add
imul
call
add
aad
sbb
cwde
sbb
clc
pop
mov
or
in
xchg
pop
stos
jno
adc
enter
mov
les
retf
push
mov
cwde
(bad)
and
(bad)
scas
mov
mov
ror
dec
movs
test
dec
pushf
dec
xchg
jle
sbb
jmp
icebp
in
imul
fdivr
cmp
sub
mov
ins
ror
lods
les
leave
mov
enter
dec
pop
pop
imul
mov
mov
adc
clc
call
or
xchg
jle
jge
outs
jns
mov
loopne
or
int3
jns
sbb
xor
out
out
xchg
or
sti
out
in
int3
sbb
add
add
call
cmp
shl
sub
fwait
dec
pushf
mov
dec
mov
dec
int
pop
inc
jl
jecxz
iret
inc
mov
dec
mov
test
push
ins
mov
movs
aam
lock
into
adc
pop
adc
xchg
ins
repnz
int
or
pop
mov
les
popa
test
sub
dec
(bad)
daa
cmp
clc
push
ror
in
mov
retf
arpl
in
fstenv
fwait
ja
mov
ror
sub
mov
pop
mov
pop
cli
adc
ds
pop
sbb
mov
aam
ret
pop
in
dec
pop
imul
nop
and
(bad)
(bad)
mov
sub
and
ds
retf
lods
enter
xor
dec
add
into
or
cmp
fcmovu
ds
lds
psrlw
inc
imul
int
addr16
sub
(bad)
adc
(bad)
(bad)
and
or
pop
or
pop
outs
cmp
rol
lods
rcr
sti
cdq
test
cmc
test
mov
xchg
(bad)
cmp
dec
cmp
repnz
shr
and
aad
cmp
pop
sbb
cli
pop
push
pop
mov
cmps
mov
fucomp
jne
call
cmp
inc
mov
cmp
jle
push
add
adc
sbb
mov
sti
hlt
mov
inc
call
ja
and
mov
push
aas
stos
(bad)
cli
fldcw
lock
adc
mov
movzx
daa
mov
inc
scas
push
stos
cmp
xchg
mov
cld
pusha
jmp
outs
sub
cli
inc
das
sbb
mov
fld
mov
mov
rcr
pop
lods
dec
cmp
push
mov
pop
inc
xor
mov
pop
lock
fcomp
push
fnstcw
retf
mov
mov
aad
adc
movs
sahf
movs
and
(bad)
inc
mov
pop
jmp
inc
loope
int
scas
mov
into
loope
pusha
mov
movs
xor
mov
sbb
pop
push
in
hlt
cli
xor
sti
fcmove
mov
dec
push
sub
xor
nop
adc
pop
dec
icebp
clc
add
or
imul
add
shl
test
add
jbe
push
dec
ss
sti
sub
push
pop
mov
mov
xchg
sbb
jge
mov
sub
cmp
ror
mov
dec
push
lds
mov
mov
mov
pop
inc
mov
inc
xchg
sub
mov
sar
cs
loopne
or
xchg
popa
mov
adc
mov
test
sbb
mov
pop
lods
inc
mov
fidiv
xor
mov
or
in
or
stos
in
outs
loope
in
xor
mov
mov
nop
sub
enter
mov
les
arpl
out
cld
(bad)
adc
daa
cli
push
or
jle
clc
add
out
cli
push
sbb
loope
mov
in
inc
mov
xor
arpl
aaa
xor
shr
into
jl
lods
push
in
dec
cmp
jno
push
test
adc
mov
div
add
mov
jg
call
movs
mov
xor
sbb
pop
pop
or
hlt
sbb
jmp
cld
add
adc
or
xchg
fld
(bad)
test
mov
mov
xchg
aam
addr16
call
xor
mov
cdq
clc
les
add
mov
jl
mov
sbb
test
dec
add
push
int3
sbb
outs
adc
test
rol
mov
fs
cmp
ret
aam
mov
repz
fimul
jecxz
jo
xor
xchg
mov
or
not
mov
mov
and
iret
stc
and
xchg
jg
lods
adc
sti
sub
pop
add
imul
ror
adc
fistp
xchg
jne
inc
mov
cwde
mov
add
cli
loope
(bad)
cmp
cmp
pop
push
cmp
fld
add
sub
ds
jns
dec
sub
cdq
stos
jecxz
test
sub
or
out
push
test
in
mov
es
cmps
mov
fadd
add
xchg
sub
aaa
mov
mov
jnp
pusha
cmp
xchg
xchg
(bad)
in
out
push
dec
mov
mov
add
cmc
retf
pop
xchg
xchg
out
mov
cmps
pop
vmread
lds
xlat
cs
cmp
mov
sti
out
lea
lods
adc
loop
xchg
pop
rcr
in
xor
in
sub
nop
test
out
inc
jns
mov
rcl
mov
and
mov
ss
scas
rcl
and
adc
inc
sub
mov
mov
xlat
sub
cmp
fwait
pop
xchg
mov
cmps
dec
loopne
add
in
in
stos
sti
sar
test
in
dec
movs
fadd
shr
daa
neg
imul
jnp
mov
inc
pop
mov
out
cmps
imul
inc
inc
rcr
gs
jo
ja
loopne
mov
jne
(bad)
loopne
mov
into
jns
test
sar
hlt
cmc
mov
pusha
sahf
sub
rol
lods
call
scas
mov
sbb
cs
mov
push
mov
pop
cmp
mov
iret
pushf
ror
out
xchg
jns
rol
aad
shr
ds
dec
jb
sub
movs
jnp
sbb
mov
jnp
sub
cmp
dec
rcl
adc
fiadd
js
dec
aad
dec
in
ins
cs
(bad)
push
lock
stos
mov
add
(bad)
fstp
jecxz
mov
scas
jb
jp
and
xchg
(bad)
lods
cs
test
and
popa
movs
(bad)
loop
arpl
inc
sbb
sbb
iret
cdq
jns
and
sub
scas
and
jl
and
cmp
cmp
sub
dec
call
jmp
adc
jne
jno
push
into
cli
mov
test
dec
test
cmp
xcrypt-cbc
cmps
xchg
pop
push
fiadd
in
sub
xchg
xor
jle
xor
popf
add
and
sbb
movmskps
jl
dec
outs
mov
pop
pusha
xchg
xor
push
gs
adc
dec
lock
add
pushf
loopne
loop
movs
dec
inc
sbb
inc
add
sub
xor
clc
jg
mov
jmp
fiadd
mov
lods
repnz
fiadd
nop
pop
mov
ins
stos
std
mov
mov
pop
es
fisub
stos
rcl
movs
imul
mov
jmp
(bad)
push
pop
mov
dec
sub
dec
and
stc
repnz
mov
dec
inc
mov
out
xchg
xor
xor
xchg
int3
sub
sub
push
add
mov
and
dec
mov
cli
daa
xor
push
jle
test
pop
or
ret
loope
nop
xchg
fnstsw
dec
lea
mov
outs
fdiv
sub
aaa
and
pop
inc
mov
lods
sub
xor
mov
outs
cs
and
cmp
test
sti
xchg
mov
ja
fsub
jmp
mov
sub
bound
iret
dec
inc
addr16
clc
lods
sbb
or
jbe
fwait
daa
sub
xchg
aas
popa
xor
jbe
mov
ins
push
in
rcl
push
cmps
lods
pushf
lods
ins
dec
mov
sub
fistp
jb
sub
mov
mov
dec
push
(bad)
out
ror
or
stos
dec
retf
or
cld
mov
xchg
xchg
gs
or
test
sar
mov
sbb
mov
not
pop
inc
aaa
pop
movs
jae
rol
or
jp
inc
push
cmc
ja
or
pop
in
bound
(bad)
dec
adc
xor
adc
jo
retf
test
cmp
fst
or
xchg
add
add
jne
xchg
rcl
inc
scas
cmp
test
jne
xchg
addr16
(bad)
jno
sub
lock
adc
(bad)
stos
cmp
in
pop
xchg
cmc
cld
mov
mov
push
in
lods
cld
(bad)
lock
(bad)
or
test
inc
cmpxchg
cmp
aaa
inc
lods
int3
js
sar
std
pop
ret
sub
jecxz
data16
push
cmc
inc
pop
and
mov
adc
fild
cld
mov
dec
jo
sub
jmp
xchg
je
inc
add
mov
xchg
mov
sbb
push
push
fistp
xchg
lods
test
jbe
inc
mov
fdiv
jg
cmp
fcomip
movups
fstp
jbe
sbb
ja
aas
mov
mov
add
mov
dec
ja
pop
dec
pop
xchg
retf
(bad)
scas
sub
lock
repnz
sub
(bad)
push
sbb
sbb
ds
push
ret
mov
arpl
sbb
jmp
or
adc
or
fstp
jbe
in
cmp
xchg
mov
mov
xchg
scas
mov
xor
(bad)
add
pop
or
inc
test
ins
adc
(bad)
ret
jo
sar
imul
adc
js
cmp
outs
cmps
outs
cmp
rcl
mov
retf
mov
rol
or
xchg
mov
jmp
enter
adc
inc
iret
xchg
adc
outs
jmp
push
and
in
pop
out
and
call
out
sub
cli
xor
mov
les
sub
scas
cwde
jmp
mov
inc
jmp
xor
inc
and
sbb
inc
dec
imul
sub
cmps
and
sub
sbb
loope
jne
popa
lods
mov
fidivr
ret
popa
jno
cld
mov
push
ja
sbb
add
ret
rol
popf
hlt
push
iret
dec
sub
rcr
(bad)
push
push
fcomp
cwde
mov
pusha
inc
dec
push
push
jns
dec
test
sbb
pushf
fistp
xchg
neg
ds
cs
push
jne
mov
pop
cmp
push
pop
inc
imul
push
fs
mov
ins
neg
repz
dec
fld
xor
mov
dec
mul
test
bound
ror
fmul
pusha
es
dec
cs
sub
(bad)
xor
ins
test
add
mov
mov
pushf
inc
arpl
push
pop
js
icebp
call
cmp
push
sbb
out
stc
and
out
test
lahf
jnp
adc
popf
push
jg
dec
shl
jmp
aad
jae
test
dec
jle
pop
or
pop
mov
cwde
in
in
in
lds
fsub
mov
nop
mov
popa
ret
adc
jb
es
shr
adc
(bad)
jecxz
dec
je
nop
es
sub
fs
pop
push
xor
ds
neg
cld
outs
lds
stos
jg
pop
push
xor
dec
dec
pushf
stos
pop
push
ins
xor
movs
ror
mov
jecxz
or
bound
popf
add
and
mov
movs
les
ret
push
ins
jmp
cmp
aas
jbe
pusha
xor
loopne
sbb
jne
mov
(bad)
xchg
xchg
jb
mov
mov
pushf
das
and
jbe
lock
aas
out
es
int3
loop
lods
(bad)
mov
xor
out
ja
pop
and
scas
pop
xor
or
int3
lock
jnp
ficomp
push
adc
dec
or
xor
mov
js
mov
jmp
jnp
cmps
loopne
loop
(bad)
push
stos
or
addr16
xchg
inc
push
inc
lock
inc
sub
int3
ja
push
sub
fwait
push
or
xchg
aaa
or
pop
push
add
div
int
sbb
sbb
pop
inc
loop
sbb
int3
cmc
mov
mov
dec
ins
jbe
adc
add
ret
xchg
in
mov
aas
sub
popf
std
jg
imul
retf
or
(bad)
pop
jno
dec
test
inc
neg
jmp
push
add
sar
je
outs
repz
xlat
jmp
clc
adc
or
mov
dec
jmp
ja
ds
hlt
mov
xor
pop
scas
xor
adc
ds
jecxz
bound
iret
mov
cld
aam
outs
push
add
sub
outs
pop
mov
aas
ss
lock
movs
or
pop
xor
pushf
loope
cmp
lock
pop
in
mov
xchg
ret
xchg
pushf
les
push
pop
cmc
inc
mov
cmp
sbb
mov
add
jno
cmc
mov
xchg
retf
stos
sar
pop
push
fnsave
imul
sbb
rcr
cmp
sbb
pop
out
rcr
mov
or
or
xchg
call
jecxz
add
inc
cs
jg
addr16
adc
add
adc
retf
xchg
push
mov
inc
add
cmp
sbb
pop
lock
pusha
test
mov
cmc
arpl
xchg
int
in
cmp
push
lahf
outs
lds
dec
cmp
cmp
cmp
scas
mov
add
xor
jg
push
test
mov
sbb
mov
sub
icebp
shr
cld
out
shl
and
icebp
aad
mov
cmp
adc
loop
popf
ins
repnz
or
int3
loopne
movs
pop
mov
add
popa
dec
xlat
mov
cmp
rcr
shl
pop
pop
xor
xchg
cs
push
shr
jb
dec
mov
inc
push
mov
cwde
adc
cmp
fwait
test
mov
mov
jl
jmp
inc
sbb
mov
pop
test
mov
or
and
add
or
aam
mov
(bad)
cld
pop
jmp
ins
rcr
cdq
jp
out
xchg
shl
jb
sbb
sub
xchg
jge
out
hlt
loop
pop
mov
push
xor
pop
outs
push
adc
clc
clc
jle
cmp
int3
dec
loop
mov
or
xor
fnstenv
scas
inc
shl
cmps
xchg
mov
or
fnsave
jbe
jnp
fs
sbb
out
clc
ret
xchg
push
mov
mov
sub
mov
lahf
xor
jo
mov
lea
js
xor
xchg
ss
cmps
add
call
cdq
mov
aam
adc
cmp
mov
mov
mov
sbb
fsubr
adc
push
mov
or
std
or
pop
std
sub
addps
inc
pop
fiadd
and
jecxz
mov
out
and
hlt
popf
test
pop
lds
dec
jg
sbb
and
stos
mov
mov
add
enter
lods
sbb
movs
push
enter
shl
mov
xor
lods
leave
lds
(bad)
mov
and
cmp
push
(bad)
scas
push
mov
adc
xchg
movs
sub
inc
rcl
add
cmp
push
es
lar
ins
pop
pop
inc
outs
xor
xchg
jb
mov
pop
pushf
pop
mov
out
in
stos
mov
xchg
jg
repz
repnz
rcl
xchg
enter
repz
adc
cld
inc
in
mov
pop
mov
icebp
mov
pop
push
cli
mov
pop
and
out
setno
out
not
push
push
cmps
jno
or
inc
and
jg
addr16
fld
xlat
mov
xor
push
retf
out
push
mov
adc
pop
fidivr
push
push
dec
sub
and
test
adc
xchg
jno
push
aad
scas
pop
sbb
jae
inc
dec
and
jmp
dec
dec
sub
or
sbb
js
imul
sahf
sub
loop
jbe
push
aad
and
mov
pusha
sbb
add
jae
loope
or
outs
out
shr
retf
xchg
sbb
mov
(bad)
neg
sahf
pop
jae
daa
shr
xor
sub
cmp
xchg
push
inc
cmp
and
and
push
aaa
js
push
xchg
cdq
mov
sbb
push
cmp
aad
sub
adc
sahf
pusha
mov
call
test
sub
sar
xchg
stos
inc
inc
inc
cwde
push
pop
mov
sbb
sub
inc
push
jb
scas
outs
shl
pop
repnz
xor
jmp
rcr
mov
mov
dec
fwait
push
jmp
fs
xlat
sbb
sbb
inc
ss
pushf
mov
jb
cmc
fcmove
inc
mov
out
mov
shr
cmp
lock
test
mov
ficom
jg
mov
scas
dec
jmp
test
pop
lea
mov
dec
cmc
and
and
and
les
mov
loop
push
gs
mov
dec
push
jp
call
popf
xchg
sub
xchg
cmp
fwait
popf
inc
daa
je
bound
pop
clc
mov
push
rcr
jae
ss
cmp
and
stos
adc
sbb
or
pop
mov
inc
call
sbb
adc
xchg
cmp
sub
push
mov
add
outs
adc
sub
imul
mov
inc
mov
push
fdivr
aas
int3
and
je
adc
jnp
lds
icebp
mov
in
mov
cmp
push
inc
adc
std
xchg
cdq
sbb
rcl
imul
cmc
push
fnstenv
(bad)
in
pop
cmp
and
mov
inc
jbe
add
jp
hlt
pop
test
test
out
push
mov
cmp
sbb
stos
sub
cli
(bad)
cmc
sahf
inc
je
dec
retf
pop
jp
sbb
inc
sub
push
mov
in
pop
or
(bad)
rcl
mov
rcl
in
(bad)
stc
aad
out
sbb
sub
enter
aam
pop
not
(bad)
jnp
or
or
into
sub
fiadd
cmp
jae
std
mov
test
sub
jl
or
cmp
xor
mov
(bad)
stos
push
(bad)
cmps
pop
cmp
dec
or
cdq
int
pop
push
pop
and
add
inc
xchg
cli
mov
cdq
jns
adc
xor
sbb
scas
repnz
stos
jnp
test
pushf
mov
jl
mov
loop
retf
stc
and
inc
test
and
jecxz
retf
cwde
adc
es
pusha
and
mov
push
scas
add
cdq
fwait
adc
in
add
mov
pop
test
jle
mov
fsubr
mov
push
add
leave
xor
add
add
inc
add
adc
mov
lahf
iret
leave
sub
jecxz
xor
lea
aaa
in
outs
sub
mov
std
inc
jno
sahf
or
pop
dec
inc
sti
hlt
retf
(bad)
jg
or
jno
test
cli
(bad)
jmp
mov
pop
gs
outs
js
(bad)
jmp
pushf
test
sub
and
clc
mov
test
ret
pop
inc
les
popf
or
mov
jp
sub
rcr
mov
pusha
add
outs
or
cmp
out
push
aam
dec
xchg
mov
(bad)
adc
bound
dec
mov
xchg
lea
xchg
jecxz
mov
push
mov
dec
push
aam
js
cs
ret
stc
enter
clc
(bad)
push
mov
xor
ret
dec
cwde
mov
xchg
pop
inc
pop
mov
hlt
mov
jnp
push
inc
xor
xor
retf
loop
adc
mov
mov
and
pop
add
push
mov
mov
inc
sbb
adc
adc
inc
pop
mov
add
push
inc
or
mov
in
mov
cmp
repz
popa
mov
and
inc
mov
movs
popa
scas
in
mov
std
(bad)
jmp
out
add
xor
pusha
jb
sub
test
lods
retf
add
ja
cmp
adc
xchg
cmp
adc
jecxz
push
pop
mov
and
in
cld
jg
mov
sar
ret
ficom
loop
lods
gs
adc
jge
imul
mul
xchg
mov
mov
in
bound
aam
pop
out
mov
dec
push
mov
cld
shl
jne
out
and
push
scas
fnsave
mov
and
sbb
cdq
push
fmul
call
pusha
push
jns
cld
and
test
sub
xor
or
leave
adc
mov
aas
xor
nop
(bad)
pusha
idiv
and
iret
in
hlt
mov
repz
gs
test
push
xchg
inc
or
pop
pushf
fcomp
movs
sub
(bad)
dec
aad
jns
dec
xor
and
int3
test
mov
ror
inc
test
js
push
jecxz
cs
or
xchg
or
xchg
add
xlat
jecxz
push
loope
sbb
inc
int3
fidiv
xchg
push
pop
mov
and
jp
mov
push
cmp
cmp
scas
rcr
inc
add
mov
mov
test
cmp
(bad)
aas
adc
mov
out
sub
fmul
pop
fs
sar
cmps
test
test
pop
lods
sbb
sub
aas
cmps
or
stos
fstp
mov
sbb
paddusb
stos
std
gs
mov
in
imul
fs
retf
test
inc
xor
jecxz
cmp
mov
adc
loope
mov
xchg
fnstsw
stos
cmp
adc
dec
xchg
push
push
or
xchg
aam
(bad)
movs
retf
mov
sahf
cld
push
(bad)
push
and
fdiv
repz
pop
cmp
xor
push
pop
jo
cdq
lea
and
cli
dec
call
pop
ss
adc
out
and
push
pop
and
call
repnz
lods
movs
push
xchg
cwde
imul
mov
shl
sub
inc
stos
ins
repz
jae
daa
xchg
pop
or
inc
xor
fst
fcomi
add
mov
ret
xlat
scas
aad
push
lea
outs
xor
and
adc
ins
enter
mov
aad
scas
mov
sub
popf
sbb
cmp
mov
cmp
iret
cld
aad
aaa
icebp
pop
stos
xchg
mov
leavew
cdq
xchg
into
nop
test
fsubrp
sbb
cmp
into
bt
das
fadd
sub
mov
add
stos
mov
jl
retf
and
cmp
repz
push
sbb
jmp
xor
ror
dec
mov
jo
test
fwait
dec
mov
call
mov
fadd
in
sub
mov
sbb
je
jmp
rol
xchg
aas
xor
scas
fldenv
sub
jno
mov
push
mov
xchg
sbb
pop
stos
ins
xor
addr16
fbld
pop
sbb
cmp
and
ja
xlat
fwait
sbb
cmp
add
jo
or
mov
inc
mov
enter
push
inc
add
and
push
jmp
xlat
popa
jmp
add
xor
xchg
pop
pop
jecxz
inc
cli
mov
idiv
jo
in
mov
scas
cmp
arpl
cdq
mov
xlat
rcl
ret
mov
movs
mov
mov
shl
(bad)
fst
aad
dec
scas
fwait
dec
fsubr
(bad)
cwde
ins
data16
xchg
sub
mov
sub
aas
int3
popf
neg
and
imul
fisubr
aaa
pop
xchg
(bad)
dec
lahf
ss
mov
js
cli
cmc
inc
pop
je
or
mov
jne
das
pop
iret
push
bound
icebp
lea
jne
mov
xchg
rcl
mov
out
add
jg
push
sub
jno
sub
inc
inc
fld
lahf
call
es
cdq
fmul
push
gs
push
test
je
mov
out
popf
and
sbb
scas
or
mov
inc
hlt
ins
mov
and
xchg
mov
dec
xor
cli
mov
xlat
inc
push
push
cmp
jg
and
dec
fnsave
jg
ja
pop
adc
push
xor
arpl
or
push
and
int
mov
sbb
push
mov
adc
stc
out
pushf
daa
adc
inc
adc
mov
ss
cmp
loopne
int3
xor
iret
out
call
popa
enter
jno
sbb
jno
or
cmp
test
(bad)
daa
and
les
adc
fsubr
cmp
out
cmp
fcomp
out
fsubr
push
dec
adc
xor
xlat
das
add
nop
idiv
adc
pop
leave
xor
mov
aad
imul
(bad)
sbb
stos
xchg
lahf
stos
sar
loope
fneni(8087
pop
popf
(bad)
or
or
ret
out
xchg
test
inc
int
jl
pop
out
adc
adc
xor
sub
(bad)
repnz
pushf
adc
lock
mov
and
cmp
jo
inc
scas
retf
xchg
jp
(bad)
pop
test
movs
push
in
add
leave
jmp
sbb
pop
and
popf
scas
aam
and
mov
pop
stos
fmul
push
das
(bad)
aas
loopne
mov
mov
jae
repnz
ror
mov
mov
mov
mov
jbe
repz
outs
sbb
imul
jno
inc
jecxz
sub
pusha
jecxz
mov
inc
lods
xchg
mov
add
pop
sbb
aas
push
mov
dec
mov
call
scas
jno
in
cmps
test
adc
jecxz
or
and
imul
mov
test
ins
adc
fsubp
rcl
(bad)
loop
clc
push
aaa
iret
into
ja
loope
std
mov
push
sub
cmp
xchg
test
cli
ret
xchg
pop
xchg
push
add
popa
(bad)
out
xchg
call
pop
pop
mov
test
shr
aad
xor
in
mov
mov
dec
inc
hlt
bound
mov
sub
(bad)
in
xor
cli
jnp
cmp
sub
je
ins
sub
js
inc
inc
inc
icebp
and
or
xchg
shl
mov
push
and
popf
pop
loop
out
sbb
lds
stos
in
mov
leave
or
xchg
iret
fwait
jg
sbb
pop
into
out
fdiv
jg
pop
pop
xchg
xor
cmp
add
aas
push
pop
pusha
pop
(bad)
cmps
aaa
call
int3
retf
je
data16
or
fcomp
popa
mov
mov
in
cld
cld
pusha
xchg
mov
sub
pop
push
xchg
and
mov
mov
cmp
mov
mov
aaa
jecxz
and
mul
(bad)
icebp
stos
(bad)
mov
shr
add
cmc
mov
ret
retf
or
aas
ds
(bad)
inc
jae
jnp
mov
aaa
xor
jle
(bad)
sbb
mov
retf
sub
out
popf
lock
fiadd
jnp
pop
mov
gs
faddp
pusha
ror
mov
js
cmps
in
add
mov
repz
out
pop
sub
fsubr
gs
sbb
xor
pop
adc
jbe
fsubr
or
test
aaa
lock
or
adc
mov
aas
lods
retf
push
adc
pop
dec
push
adc
cmp
sbb
ins
aam
mov
mul
and
mov
mov
loop
rcl
jg
test
popf
xchg
repz
ins
je
inc
rol
(bad)
les
in
jmp
push
fistp
adc
test
bound
inc
pop
int3
cmp
cld
and
in
push
mov
lock
in
movs
or
dec
xor
jmp
push
jbe
test
mov
cmp
push
or
ins
fild
test
fcmovnbe
mov
fwait
je
dec
pop
push
ins
push
mov
xchg
mov
bnd
icebp
jmp
test
push
sub
mov
and
jl
xchg
mov
stos
enter
jbe
xchg
mov
mov
mov
or
xchg
call
sub
sbb
push
jecxz
or
mov
push
lea
mov
fs
aas
stos
xor
scas
or
movs
data16
aas
jp
mov
aam
cmc
retf
lods
adc
or
sar
rol
dec
mov
fucomp
lods
div
cmp
aaa
adc
repnz
mov
ds
adc
inc
pop
(bad)
push
das
xchg
jle
xlat
sub
sub
push
test
scas
ins
(bad)
ss
test
into
add
cs
repz
sub
pop
dec
mov
mov
aad
and
mov
jae
jecxz
jo
xchg
dec
js
mov
lahf
push
mov
xchg
popa
mov
leave
mov
sar
adc
fisub
loopne
sbb
pop
mov
loop
pop
add
dec
mov
lds
in
cmp
ins
push
test
mov
out
xor
mov
mov
jle
(bad)
push
test
sti
xor
sar
out
mov
shr
jo
out
imul
mov
mov
cwde
lds
sahf
nop
sti
(bad)
push
pop
daa
pop
cs
cmps
push
pop
daa
push
xchg
and
retf
hlt
sbb
gs
pusha
and
inc
mov
or
or
cmps
sbb
test
pusha
mov
push
xor
sbb
(bad)
(bad)
hlt
adc
push
xchg
lds
ds
les
and
xchg
aam
dec
cld
push
fs
cmp
or
inc
dec
js
rcl
mov
inc
sub
push
popa
xor
xchg
(bad)
mov
xchg
movs
lds
inc
mov
adc
cmp
or
in
add
scas
mov
or
adc
stos
lods
fcomp
mov
xchg
outs
cmps
lock
daa
pop
sub
xor
icebp
xor
gs
adc
ins
sub
sub
lods
arpl
add
add
cmp
jae
xchg
mov
sar
repnz
or
adc
jne
push
into
js
std
mov
sub
cmp
cld
icebp
loop
(bad)
adc
mov
sub
(bad)
out
pop
or
cmp
cmc
mov
or
loopne
xor
(bad)
cwde
sub
aam
mov
mov
cmp
sub
pushf
push
pop
push
sbb
aas
push
mov
mov
mov
in
sub
sbb
sub
sub
retf
adc
into
ins
fsub
fisubr
mov
mov
add
call
push
push
xor
inc
add
push
pop
ins
push
arpl
jne
je
in
xchg
jnp
xchg
xchg
sub
sahf
jl
push
mov
or
sub
jmp
ds
push
mov
(bad)
dec
shl
cmps
mov
dec
sbb
repz
popa
inc
ret
pop
(bad)
add
sbb
inc
and
mov
dec
out
and
pop
jmp
jne
cmps
push
pop
dec
pop
and
rol
outs
adc
es
js
cmc
jle
iret
repnz
je
retf
ja
(bad)
mov
mov
jmp
jecxz
inc
xchg
je
aas
(bad)
pop
mov
jle
sbb
lods
int3
push
movs
dec
xchg
or
sbb
leave
call
add
frstor
test
cmps
popa
imul
cmp
mov
daa
sahf
sbb
gs
pop
push
out
lahf
add
pusha
test
mov
pusha
xchg
jmp
out
jne
nop
mov
sbb
fs
popf
pop
sbb
jmp
xchg
and
xchg
int
dec
aad
stc
sbb
movs
popf
cmp
ja
and
cmp
sbb
jne
push
cdq
(bad)
jmp
mov
jb
and
cmc
les
push
pusha
sub
fstp
jmp
jle
test
call
pop
cmp
rcr
scas
sub
enter
out
dec
int3
lods
out
imul
mov
dec
cmp
out
sub
imul
cmc
sahf
je
and
call
in
dec
cmp
mov
inc
(bad)
push
cli
rcr
(bad)
mov
clc
push
xchg
fbld
xchg
retf
jle
push
dec
push
jg
jno
push
pusha
cwde
add
into
jl
ret
ds
xor
add
test
ror
sbb
inc
imul
imul
adc
out
sub
sbb
xchg
dec
inc
jbe
sbb
jo
ror
jmp
mov
sub
pop
adc
cs
pop
mov
pop
pusha
xor
ror
or
xlat
sbb
jae
cmp
int
cmc
(bad)
cli
inc
int
std
push
into
call
pusha
dec
mov
or
cmps
dec
dec
dec
or
xchg
jl
cmp
sbb
mov
cmp
je
sbb
or
in
push
cmp
push
call
jmp
sub
jmp
jmp
or
add
mov
xchg
and
cmc
lods
jbe
jge
mov
mov
(bad)
mov
frndint
int3
jg
cmp
mov
stos
add
aam
mov
ror
ret
loope
mov
enter
adc
daa
mov
in
push
push
test
cdq
inc
sahf
daa
or
inc
sub
jmp
jnp
xchg
jnp
push
xchg
xor
jl
cmp
mov
pop
or
jbe
loopne
lds
(bad)
sti
jnp
dec
xchg
sbb
jb
retf
js
fucom
lods
add
jmp
ret
or
jmp
xchg
cmp
sub
dec
fwait
xor
add
nop
or
adc
(bad)
lock
xchg
jne
mov
(bad)
xor
and
adc
out
or
jecxz
aad
pushf
inc
jns
jmp
mov
cmps
mov
out
push
fsubr
repnz
mov
pop
and
rcl
out
sbb
jbe
adc
jg
lods
or
inc
es
mov
clc
xor
cs
jno
inc
push
jp
in
ins
hlt
xchg
stos
mov
frstor
out
aam
lds
mov
(bad)
das
in
or
movs
movs
xchg
std
cmps
pop
xor
iret
push
add
test
js
pop
leave
push
mov
int
ror
aas
xchg
std
and
mov
cmc
mov
dec
popa
or
cld
je
mov
fnclex
inc
mov
pop
sar
add
sbb
test
ucomiss
dec
scas
sbb
cmp
jg
and
cwde
out
jno
addr16
into
ins
cpuid
mov
pop
arpl
popa
sub
out
out
push
adc
imul
mov
(bad)
adc
cmp
shl
ins
pop
and
cwde
cdq
or
push
xchg
test
out
inc
jbe
pop
push
xchg
sbb
lods
dec
jg
popa
push
or
push
popf
popa
shl
test
call
(bad)
adc
(bad)
repnz
popa
and
imul
xchg
adc
scas
sub
or
lock
and
push
mov
sbb
(bad)
test
and
pop
add
(bad)
out
ss
fistp
sub
pop
scas
std
imul
clc
mov
adc
push
jg
aaa
fwait
mov
cmps
int
cdq
add
push
jl
lods
arpl
(bad)
lock
lods
pop
in
xor
and
cmp
adc
(bad)
dec
cmc
aad
jb
scas
xlat
add
(bad)
sbb
in
jne
cdq
dec
push
xor
ror
sbb
jl
mov
aas
pop
pusha
enter
mov
sbb
ds
xor
scas
loope
je
or
or
clc
je
mov
aam
sbb
and
jo
and
cmp
cmc
loop
pusha
outs
movs
push
or
xchg
popa
dec
mov
mov
adc
fist
fisubr
std
adc
push
cmp
leave
and
push
jl
mov
hlt
inc
add
dec
mov
pop
mov
push
mov
iret
stos
cmp
lock
mov
or
inc
dec
lds
popa
mov
and
jle
int3
xchg
fiadd
mov
fimul
test
sub
(bad)
fnclex
xor
xlat
jmp
jecxz
inc
call
adc
fnsave
test
sub
lods
lods
int
movs
adc
sub
or
or
fcomp
mov
sub
xor
sub
dec
lods
icebp
fld
jmp
shl
cmp
cmp
xor
shl
(bad)
repnz
lods
or
jne
inc
test
xor
in
clc
(bad)
call
loop
cli
cs
mov
(bad)
jle
push
leave
or
data16
jne
hlt
(bad)
jns
sub
ins
jns
push
inc
lods
jmp
jnp
mov
stos
xor
(bad)
loopne
jbe
jb
cmps
adc
push
adc
loop
icebp
jge
mov
sub
lahf
cmp
jmp
shl
xor
sar
fsubr
ror
ret
ds
scas
adc
repz
sub
pop
add
mov
jecxz
dec
hlt
bound
test
sub
out
sar
out
cli
scas
cmp
adc
push
(bad)
mov
arpl
cmp
xchg
pop
push
leave
pop
cdq
push
loopne
mov
push
jno
ja
cmp
(bad)
xchg
mov
lods
adc
sub
or
icebp
aaa
xor
dec
pop
jnp
loop
sub
sub
xor
push
mov
aaa
lods
mov
fbld
mov
sub
adc
add
pop
xchg
mov
cmp
repnz
stc
sbb
fisub
inc
lods
scas
push
mov
pop
mov
cmp
fwait
repnz
mov
push
mov
push
push
repz
sbb
mov
shl
sub
push
fist
or
jo
mov
aas
fsub
mov
cmp
fmul
iret
test
das
pop
mul
adc
jmp
fdivp
mov
cmps
sahf
mov
(bad)
dec
jg
jne
stos
pop
inc
add
xor
pop
cmc
mov
les
or
xchg
xchg
or
mov
pop
xor
and
imul
clc
cld
loope
pop
cmp
out
cdq
xchg
or
add
sub
cmp
xor
(bad)
sbb
xchg
inc
scas
pop
and
mov
cmp
or
mov
push
cmps
iret
fnsave
add
out
sub
lock
sar
xchg
mov
mov
movs
mov
pusha
movs
outs
repz
stos
pop
es
fisub
sbb
leave
stc
mov
je
cmps
pop
pop
shl
cmp
mov
repz
lock
fcom
(bad)
iret
or
call
sbb
add
mov
mov
test
mov
or
pop
sub
fstp
fmul
xchg
aas
jg
in
dec
(bad)
jnp
sbb
fimul
push
enter
aad
rcl
or
mov
call
jp
add
pop
popa
dec
stos
test
mov
(bad)
jl
add
sub
mov
js
mov
repz
push
imul
int
out
dec
popf
bound
loope
add
lods
inc
pop
cmp
mov
xchg
dec
gs
mov
ror
pop
jp
outs
adc
and
sub
lods
dec
ret
out
fidiv
out
xor
inc
cmp
faddp
mov
das
imul
inc
inc
or
jb
fnsave
(bad)
mov
in
jge
(bad)
cli
leave
jecxz
dec
mov
add
retf
pusha
mov
loop
xchg
gs
sahf
retf
jo
xor
dec
(bad)
pop
pop
mov
ret
push
adc
fld
data16
push
xor
loop
cs
dec
test
das
pop
mov
test
fld
mov
pop
adc
jge
(bad)
pop
iret
cmps
cmps
out
mov
add
fistp
lods
scas
sbb
(bad)
clc
sub
cmc
cld
sub
test
jge
retf
lahf
push
jbe
lods
and
mov
loopne
xchg
adc
sahf
je
sub
sti
fiadd
or
inc
gs
add
addr16
mov
(bad)
imul
shl
stos
aaa
jno
inc
xchg
dec
shl
fisubr
sbb
xchg
lods
or
push
addr16
popa
daa
jns
fbld
fsub
or
or
adc
push
fist
xor
add
mov
push
mov
dec
repnz
mov
fcmovne
sub
mov
icebp
retf
mov
popf
jnp
mov
mov
stos
xchg
inc
mov
push
pushf
shr
inc
or
sub
add
ror
cli
mov
cmp
addr16
in
aad
ja
push
dec
in
scas
lods
adc
cmp
das
push
hlt
inc
mov
sub
pop
cmps
dec
dec
inc
jl
leave
pop
cmps
das
pop
push
fsubr
fmul
adc
mov
add
repnz
cld
(bad)
lods
xchg
push
pop
push
xchg
(bad)
jbe
xlat
mov
shl
ffree
clc
xor
fcmovb
cmp
jmp
or
push
sbb
in
adc
sub
xchg
pusha
mov
enter
mov
sbb
sub
ja
pop
sub
jecxz
loopne
scas
add
iret
adc
cld
add
mov
push
xor
inc
sbb
imul
aas
mov
sub
or
dec
sub
retf
mov
or
push
imul
and
addr16
test
stc
and
cmc
test
jnp
jecxz
ja
outs
lods
jo
js
add
scas
repnz
jl
mov
jo
lds
sbb
je
outs
mov
fdiv
in
mov
rdmsr
aaa
jnp
test
add
leave
xor
and
add
jl
rol
dec
loope
adc
(bad)
xor
inc
js
ja
jo
lahf
add
sar
pop
sar
push
dec
xor
and
fistp
lahf
cli
nop
jns
das
xchg
dec
lock
sub
xchg
sbb
xlat
xchg
xlat
and
arpl
cmps
jae
xchg
in
stc
add
movs
sbb
jno
push
std
fst
retf
sub
fiadd
outs
lods
lods
push
add
push
aas
sub
lds
stc
xor
push
ins
mov
mov
add
add
(bad)
mov
jge
sbb
test
movs
push
das
jmp
or
and
add
cmp
ins
ins
nop
data16
out
(bad)
cmp
ja
aaa
dec
imul
cli
popa
sub
rcr
test
jb
pop
sub
ja
rcl
mov
leave
call
stos
arpl
jle
into
xchg
jle
push
fucomp
out
xor
mov
aad
js
or
pop
hlt
imul
or
in
or
arpl
jl
not
dec
out
repnz
fnstsw
jle
outs
retf
and
pusha
pop
psubusb
jo
cmp
fsubr
in
ret
sbb
shr
aas
cmp
lock
movs
add
leave
div
xlat
jp
leave
cs
cmp
mov
cli
mov
pcmpgtd
adc
jge
in
inc
xchg
outs
xchg
and
sbb
sbb
xchg
aas
(bad)
xor
les
loop
pop
xchg
scas
ins
jl
sbb
ins
jno
mov
sub
mov
(bad)
aad
mov
push
ss
sahf
and
in
push
push
pop
lahf
dec
dec
fisub
inc
xchg
sti
xor
in
mov
xchg
into
pop
adc
or
add
cmps
xor
(bad)
push
ss
pop
outs
shl
inc
inc
mov
inc
jnp
jns
ss
outs
xor
sub
test
jns
(bad)
into
xchg
in
shl
mov
int3
hlt
adc
push
aam
popf
inc
test
mov
jge
mov
dec
xchg
dec
mov
inc
and
sbb
clc
outs
scas
add
and
dec
out
scas
sti
cmp
sbb
repz
jae
out
add
add
les
and
aas
cmps
jnp
push
mov
cmp
adc
xor
jmp
(bad)
daa
pusha
mov
add
ret
cmc
(bad)
in
gs
(bad)
fild
xchg
call
or
xor
in
add
imul
pushf
or
add
push
xchg
shr
outs
and
jb
xchg
or
sar
add
addr16
inc
and
mov
aad
sbb
pop
mov
scas
icebp
aad
int
adc
dec
popf
clc
add
and
dec
pop
inc
pushf
sub
adc
mov
mov
das
repz
sbb
test
xchg
aad
push
sbb
inc
sub
pop
cmp
mov
xor
bound
inc
addr16
fbld
jl
xchg
jl
iret
in
inc
dec
or
inc
cmps
loop
or
mov
outs
scas
push
test
enter
aam
xchg
int3
jmp
enter
jge
(bad)
jne
xchg
stc
in
mov
cmc
shl
cs
rcl
pop
mov
(bad)
imul
mov
test
push
inc
pop
pusha
ficom
in
mov
ins
iret
out
or
dec
(bad)
jmp
test
dec
inc
mov
stos
test
ins
mov
push
retf
xchg
add
adc
les
movs
mov
es
stos
cmp
mov
add
xchg
jmp
jo
mov
mov
test
popa
pop
mov
add
and
push
je
add
jle
mov
outs
(bad)
shl
pop
push
cmp
sti
fwait
ret
and
or
mov
mov
mov
dec
sbb
sub
lea
fisttp
js
in
adc
dec
push
sub
mov
inc
aaa
outs
xor
add
out
div
xor
sbb
fdivr
lods
lods
fwait
jne
jmp
shr
dec
(bad)
and
push
push
jo
adc
cmp
aas
ins
and
mov
cmp
frstor
cmc
cmp
js
cmps
dec
loope
jns
into
sub
jecxz
popf
jne
and
aaa
aam
mov
mov
faddp
aas
xor
sbb
js
add
int
(bad)
clc
jecxz
push
xor
call
cs
xor
cli
xchg
les
cmp
out
mov
push
dec
in
sti
lahf
push
test
xchg
inc
xchg
pop
addr16
mov
jmp
dec
loope
cmp
imul
add
inc
push
pop
nop
pop
repz
gs
rol
cmp
push
lock
sub
js
fdiv
ins
inc
rcr
movs
jns
call
js
sub
inc
cmp
add
shr
lods
dec
mov
jp
xchg
loopne
lods
push
pop
or
add
je
test
jno
fsubr
mov
jmp
lock
add
cdq
(bad)
mov
sar
cdq
fidiv
call
dec
xor
xor
mov
mov
inc
push
jns
pop
mov
mov
lock
jno
jo
out
int3
xchg
pop
pop
push
or
jae
and
adc
nop
(bad)
ret
and
xor
inc
rcr
(bad)
add
mov
es
or
repz
ins
loop
daa
repz
aaa
push
retf
scas
movs
imul
addr16
mov
cs
jno
mov
jmp
test
(bad)
pusha
jnp
clc
sub
dec
aad
and
inc
shl
add
jnp
repnz
rcl
les
stc
sub
xlat
cmp
and
fcmovne
pop
pop
pusha
dec
sbb
push
lahf
sar
cmps
inc
and
inc
rol
pop
js
and
push
shl
out
xchg
shl
xor
pop
mov
xchg
fisub
pand
pop
mov
(bad)
jmp
stos
adc
dec
call
jno
jns
xchg
ror
push
in
out
and
sbb
ret
cwde
add
xor
test
xchg
mov
mov
mov
cs
and
rcr
push
clc
or
aas
xchg
bound
xchg
inc
iret
jmp
cmp
stos
das
fnstcw
sub
in
jb
in
jge
mov
dec
gs
outs
adc
jae
xor
lock
dec
arpl
push
in
test
sti
retf
aam
sub
out
mov
pop
push
inc
lock
movs
hlt
mov
out
fcmovnbe
jno
jecxz
retf
inc
jg
in
jbe
xchg
retf
cmc
call
xor
xchg
mov
out
imul
mov
cmp
push
mov
into
retf
sbb
fs
lock
push
cmp
xor
mov
cwde
test
push
rol
les
leave
in
xchg
cmp
sbb
sbb
loope
pop
and
xchg
xchg
in
push
emms
stc
popf
or
adc
sub
push
mov
and
imul
jmp
push
mov
add
mov
jmp
jbe
into
sub
add
push
je
test
jmp
pusha
mov
nop
mov
iret
push
cmp
out
das
mov
fsubr
sbb
(bad)
fidiv
or
and
jmp
cmp
rcr
hlt
dec
jbe
test
test
fisubr
arpl
push
popa
fdiv
dec
add
push
sbb
and
fstp
add
xor
inc
dec
mov
ins
cld
stos
xchg
mov
mov
pop
cmp
pop
inc
jno
sahf
pusha
stos
jae
(bad)
cmp
cmp
jno
xchg
mov
sub
cmc
push
jno
(bad)
and
ds
or
ja
fld
jae
out
cmc
adc
xor
and
mov
mov
jle
call
dec
repnz
stc
xchg
adc
sbb
push
popf
push
dec
dec
jne
or
leave
push
sub
jbe
shr
add
int3
inc
jae
(bad)
std
push
inc
bound
ss
cmp
mov
jmp
jnp
push
mov
jb
cmp
add
ss
mov
loopne
(bad)
test
jb
adc
inc
push
fwait
dec
or
xor
mov
jecxz
sahf
jmp
fs
dec
pop
dec
jmp
sbb
ds
(bad)
aas
mov
rcr
(bad)
ja
mov
in
ds
mov
cmp
stc
pop
shr
jns
data16
das
lock
xchg
adc
aad
dec
(bad)
push
stos
push
fldcw
imul
inc
dec
jno
arpl
add
sbb
inc
lock
fdivp
call
rol
inc
stos
fisttp
add
gs
aaa
xor
jnp
jmp
std
test
call
rep
pop
loopne
dec
lods
call
inc
test
mov
pop
push
inc
pusha
jae
fadd
pop
scas
lea
mov
inc
xchg
push
cmc
stos
inc
hlt
(bad)
cmova
mov
pop
add
jg
mov
mov
fs
ret
stos
popf
mov
add
mov
out
(bad)
mul
ror
lods
out
rcl
fdivr
fneni(8087
mov
inc
jno
pop
clc
or
cwde
hlt
out
inc
aas
aad
jl
into
or
add
and
pop
in
fadd
stos
jmp
fild
imul
scas
imul
xchg
iret
jno
retf
sbb
scas
(bad)
fstp
out
xchg
dec
mov
mov
mov
out
pop
push
jnp
push
or
int3
rcr
cmp
cli
sub
mov
call
mov
in
push
in
inc
cmc
sbb
(bad)
cs
sbb
inc
xchg
fs
add
retf
mov
and
cli
or
dec
cmps
retf
repz
cmp
cmp
and
test
adc
dec
mov
mov
cmc
dec
mov
jns
sar
(bad)
out
and
push
xor
popa
cmc
int
mov
or
adc
push
dec
mov
pop
mov
(bad)
jo
adc
xchg
mov
and
enter
dec
outs
and
(bad)
jge
daa
clc
dec
iret
inc
out
in
push
sbb
jbe
dec
jmp
xor
test
jmp
inc
das
shl
cwde
mov
(bad)
out
pop
fwait
iret
ret
push
xchg
sub
rol
cld
xor
xor
in
div
xor
add
cmp
pop
jb
mov
fcomp
out
mov
pmaxub
loop
push
sbb
sub
pop
ss
or
pop
mov
lea
inc
es
jns
emms
xchg
outs
and
fdiv
mov
test
cmp
scas
and
test
mov
mov
adc
or
lods
cli
mov
xchg
pop
push
pusha
xlat
and
xor
mov
sbb
or
inc
stos
je
or
gs
sbb
paddusb
jle
mov
mov
pusha
out
xchg
pop
fiadd
inc
ss
imul
xor
mov
inc
mov
sahf
ficom
xor
das
aad
fsubr
ja
(bad)
shl
loopne
pop
loop
dec
push
jo
scas
mov
xchg
or
js
ds
pop
fwait
ret
movs
(bad)
repnz
mov
call
pop
and
sub
xchg
jg
(bad)
or
loope
ss
inc
mov
enter
not
jno
not
mov
lods
cs
and
add
push
dec
push
das
not
call
enter
test
jl
stc
add
loope
(bad)
nop
rcr
or
cmp
inc
adc
icebp
outs
push
add
out
mov
daa
adc
or
out
inc
neg
jo
xor
sub
inc
fnstsw
lock
bound
data16
repnz
aas
push
mov
xchg
sahf
inc
cmp
ins
pop
sbb
sahf
int3
or
je
push
or
inc
fisub
adc
or
pop
int
out
dec
mov
mov
sbb
sub
pop
hlt
clc
xchg
outs
leave
ret
enter
jg
fld
call
out
femms
add
test
jecxz
cmp
stos
and
ret
call
data16
push
mov
inc
lds
adc
lahf
pop
cmp
leave
jnp
sbb
and
ror
hlt
mov
bound
sub
pop
retf
lods
pop
or
mov
xchg
push
xor
or
je
cwde
call
test
pop
or
pop
add
out
cmovl
stc
scas
inc
and
movs
popf
mov
es
adc
neg
pop
sbb
sti
push
adc
test
xchg
icebp
ds
dec
test
sbb
scas
(bad)
jns
xor
in
mov
cmp
imul
sbb
(bad)
mov
adc
test
dec
or
fucomip
scas
jle
mov
push
nop
cmp
(bad)
mov
js
dec
pop
xor
das
movs
jne
mov
call
adc
sbb
in
lea
mov
pushf
dec
je
push
and
xlat
(bad)
js
call
pop
in
mov
or
or
sar
mov
jmp
jb
and
iret
xchg
adc
add
stos
out
fld
mov
js
and
xchg
or
cmp
or
push
pop
inc
cli
and
pop
test
and
dec
mov
mov
lods
(bad)
rcl
dec
daa
cld
(bad)
or
or
mov
dec
and
jnp
je
push
mov
loopne
jae
es
test
dec
shr
call
push
dec
aas
adc
lahf
outs
jle
push
sub
imul
jbe
dec
sub
(bad)
fsubr
or
adc
add
or
sbb
cli
int
(bad)
xchg
stos
xchg
sti
sbb
ins
(bad)
div
imul
mov
jae
pop
fstp
push
fadd
leave
add
or
iret
int
pop
inc
sbb
fsubr
call
or
repnz
das
icebp
mov
in
pop
retf
ins
jmp
aad
mov
lods
les
pop
std
jmp
mov
cmp
shr
inc
in
sbb
aas
jns
pop
xchg
ret
lods
mov
dec
add
sub
xor
cmp
inc
sti
push
push
jp
repnz
daa
sbb
xor
add
lods
mov
xor
push
cmp
pop
mov
adc
ja
cli
xchg
(bad)
bound
add
pusha
and
mov
retf
and
mov
je
aas
push
lods
xchg
aaa
push
cdq
call
and
mov
xchg
div
enter
in
stos
inc
pop
mov
cmp
fwait
inc
xchg
jns
scas
cmp
test
in
jg
dec
add
(bad)
(bad)
iret
das
hlt
pop
cmp
les
mov
push
fmulp
inc
int3
imul
mov
mov
jle
jae
fist
ret
inc
not
aad
inc
lea
lahf
cld
xchg
sub
sbb
add
mov
nop
mov
fst
ja
in
sar
push
jg
and
scas
sub
loope
jo
int
movs
aam
adc
mov
cmps
je
inc
sbb
adc
inc
inc
mov
stc
in
shl
in
inc
adc
mov
pop
sbb
pop
push
test
xchg
adc
ins
and
(bad)
aad
loope
fstp
dec
nop
mov
js
fstp
cmp
das
mov
mov
adc
adc
in
gs
in
int3
mov
inc
test
aam
or
pop
push
add
and
dec
(bad)
cmps
retf
imul
loopne
pop
inc
push
ret
mov
in
and
mov
xchg
ror
mov
mov
sbb
xchg
inc
and
jae
or
out
jbe
dec
mov
and
sar
(bad)
sbb
xchg
inc
jno
push
pop
nop
lods
or
aam
fist
jae
pop
cmc
adc
retf
std
das
pusha
cmp
mov
data16
mov
and
pusha
das
or
or
or
arpl
or
mov
in
gs
test
enter
clc
jnp
test
or
mov
cmp
cdq
fnstcw
adc
(bad)
xchg
mov
xor
sbb
aam
sub
inc
out
outs
imul
cmp
cmp
repnz
in
stos
movs
jle
sub
(bad)
std
push
repz
aas
dec
pop
call
sbb
stos
jg
add
dec
cmp
repz
iret
imul
xchg
or
popa
adc
push
rcr
pop
pop
or
add
mov
aad
or
xor
cmp
xchg
aad
stos
or
les
mov
sti
pop
out
call
and
adc
pusha
sub
jl
jge
sbb
sbb
adc
dec
(bad)
cwde
add
jae
mov
push
jge
fndisi(8087
imul
fcomi
shl
cmp
xlat
pop
sub
hlt
pop
mov
call
in
call
pop
retf
iret
popa
dec
cmp
mov
icebp
push
test
sbb
push
mov
xchg
call
das
pop
test
popa
retf
inc
lds
clc
sbb
in
or
mov
imul
ret
push
mov
mov
xlat
xchg
jne
push
dec
xchg
or
iret
xchg
inc
inc
mov
test
cwde
jg
in
shl
mov
add
aas
retf
ins
pop
add
mov
add
jbe
cmps
inc
and
sti
movs
fiadd
add
inc
fstp
add
outs
int
dec
xchg
jmp
adc
pop
pop
pop
inc
dec
aam
jb
dec
sub
ss
mov
(bad)
icebp
jne
in
xchg
add
popa
ins
pop
cmp
iret
cmp
test
loope
stc
push
cdq
sub
addr16
add
adc
aas
rol
xchg
dec
sbb
push
adc
sbb
fcmovne
inc
mov
add
popa
jo
gs
pop
cmp
lock
push
cmp
sti
data16
inc
dec
adc
(bad)
sar
popa
stos
cmp
pop
call
loope
(bad)
call
ret
adc
leave
inc
repz
xor
jae
ret
add
fwait
call
cmp
or
cmp
int3
test
dec
sub
ins
fst
arpl
in
jmp
es
rcr
cli
xchg
inc
repz
loop
out
pop
test
or
ret
jno
movs
push
inc
adc
test
iret
inc
fwait
out
ds
imul
cwde
mov
jp
sub
enter
fimul
sbb
mov
sub
nop
int3
cmp
sub
cmps
fdivr
mov
(bad)
cmp
inc
ror
dec
ins
adc
call
ja
push
sbb
add
sbb
(bad)
or
jmp
push
daa
sahf
jle
cmp
jmp
pop
jno
jge
rcl
or
pop
clc
scas
dec
xchg
adc
out
dec
and
cmp
mov
xchg
aam
or
pop
cdq
shl
in
out
jmp
out
cmc
mov
xor
loope
fadd
adc
jmp
iret
aad
mov
mov
mov
inc
dec
push
cmps
shr
dec
fisub
ds
mov
jo
call
push
jmp
arpl
lods
aaa
xor
cmc
dec
scas
dec
cmp
adc
cmp
pop
pop
dec
adc
fcom
pushf
je
jno
std
cmp
push
or
pusha
outs
xor
es
xor
sub
cmp
pusha
popf
sahf
dec
mov
dec
out
inc
in
mov
test
dec
hlt
je
enter
inc
cwde
stos
cmp
jmp
jp
xor
ret
sbb
cwde
jae
movs
mov
mov
call
mov
es
adc
out
loope
cmp
cmc
shl
lock
out
xor
shl
out
out
sub
xor
test
xor
mov
push
ins
enter
mov
pop
mov
imul
dec
pop
add
les
sub
dec
cmps
loopne
aaa
jnp
push
popf
call
cmps
or
push
aas
into
jecxz
cdq
jns
jg
push
int3
jmp
sub
test
loope
add
fisub
aad
cmps
and
leave
jecxz
in
imul
in
hlt
add
adc
leave
imul
addr16
push
in
scas
xor
jo
lods
jb
inc
enter
into
lahf
movs
fwait
in
out
aaa
in
(bad)
dec
xchg
push
jae
mov
sbb
ins
cmp
jae
fwait
stos
into
add
dec
fs
push
cmp
cmps
jb
jmp
sub
push
push
pop
rcr
ret
cmp
adc
xor
jg
mov
push
scas
jo
jbe
jmp
jne
leavew
mov
data16
add
out
aaa
mov
ja
jmp
or
mov
mov
mov
jne
sbb
leave
add
(bad)
scas
sbb
mov
inc
and
and
icebp
push
jnp
push
xor
xchg
aaa
dec
stos
mov
push
fmul
push
ja
repz
loopne
and
stos
mov
inc
jne
jl
loopne
jmp
mov
in
and
das
jnp
sbb
mov
clc
repz
add
pop
retf
pop
or
not
mov
icebp
dec
shl
cmps
jne
stos
cld
dec
or
adc
call
jnp
test
push
ror
fwait
pop
mov
fisub
sub
jge
in
movs
mov
sbb
imul
push
repz
btr
int3
sahf
mov
in
jae
fist
push
sub
sub
pop
es
cmps
cli
sub
(bad)
pusha
push
fisub
mov
xchg
not
mov
in
test
loopne
add
dec
and
push
fisubr
add
mov
xor
sbb
es
aaa
push
sbb
jae
movs
mov
pop
adc
rol
(bad)
je
and
sub
je
aaa
cdq
(bad)
sti
lods
inc
lds
jp
cmp
movs
xor
sub
inc
push
test
fucomi
lods
fsub
(bad)
imul
push
mov
jbe
daa
push
call
jno
pop
pop
adc
ret
mov
rol
pop
inc
pop
dec
in
imul
fist
dec
cmp
lahf
ret
(bad)
cmp
ret
lods
mov
and
std
xor
iret
xchg
push
bound
inc
std
into
cli
jae
jmp
cmp
vmread
das
sbb
aam
cdq
mov
(bad)
jmp
pusha
shl
lahf
out
sbb
jb
int3
aad
jecxz
sti
mov
add
inc
out
test
cmp
cmp
dec
jo
push
push
fstp
sbb
sti
mov
push
xchg
mov
jo
(bad)
loopne
add
(bad)
sub
loop
das
aas
mov
(bad)
pushf
pusha
lods
nop
mov
push
push
sbb
lods
test
rcr
xchg
xchg
push
bound
ja
lods
push
call
iret
adc
cmps
ror
mov
aad
or
adc
shl
pop
test
les
inc
pusha
daa
xor
aam
out
cmps
ret
sbb
mov
mov
inc
mov
imul
jge
mov
and
sbb
fucom
adc
cmp
push
and
lods
in
addr16
inc
pop
cmp
stc
jno
gs
fiadd
mov
call
call
jo
cs
cmps
pop
fisttp
cwde
cmp
mov
inc
mov
outs
and
fdivr
mov
clc
jecxz
add
sbb
xor
jb
fdiv
lods
push
lds
mov
jl
jmp
scas
sbb
push
imul
mov
and
add
jae
js
loopne
pop
int
sbb
movs
mov
push
stos
mov
in
cwde
push
push
in
outs
and
fdivr
ret
push
out
stc
xor
xor
jb
xchg
xchg
out
loope
ds
jnp
and
js
push
repz
jmp
imul
pop
int
sti
int
xchg
sbb
data16
and
mov
loopne
fbld
push
mov
(bad)
pop
pop
ficom
mov
mov
jnp
dec
push
sbb
jmp
sbb
sbb
daa
jle
or
dec
sar
ss
sbb
jmp
or
or
sti
fidiv
gs
pop
jmp
cmp
jle
repz
call
xlat
cmps
dec
pop
shr
ins
scas
jne
call
jbe
ror
xor
add
cmps
inc
cmp
mov
pop
scas
out
es
pop
mov
push
cmp
fisubr
sub
daa
inc
leave
call
stos
(bad)
scas
jae
rcl
aas
cmp
xor
cmp
dec
cmps
popf
call
jle
in
cmp
push
fwait
inc
js
jmp
jmp
fisubr
pop
xor
aaa
xchg
popf
mov
pop
mov
jp
dec
mov
pop
cmp
inc
mov
(bad)
retf
in
dec
sub
cwde
mov
dec
inc
fdivr
mov
cld
out
mov
mov
test
mov
sahf
xor
push
xor
push
addr16
popf
push
xchg
mov
loopne
movs
inc
call
pop
xchg
dec
leave
sub
sbb
jl
mov
cli
mov
hlt
call
and
jne
adc
jl
sub
dec
retf
out
or
cmp
retf
in
mov
test
jb
movs
or
bound
pop
mov
(bad)
push
mov
popa
adc
mov
aas
adc
enter
cmc
mov
jg
cmc
stos
jmp
pop
neg
jg
cmp
out
sub
inc
add
mov
sbb
mov
mov
cs
into
es
and
scas
adc
ffreep
dec
xchg
test
jbe
sub
movs
leave
(bad)
stos
xor
adc
jae
ret
bound
sub
sub
sahf
push
ins
imul
mov
test
jge
sbb
mov
hlt
shl
test
loope
mov
ror
cdq
xor
stc
ds
push
cmp
sbb
mov
(bad)
and
mov
dec
push
adc
cwde
mov
mov
pop
test
jmp
mov
(bad)
cmc
inc
sbb
adc
gs
shl
ins
jmp
jmp
or
xlat
cdq
data16
jmp
mov
imul
lock
fist
das
xor
js
mov
ins
in
push
or
ficomp
jb
in
js
sbb
mul
pop
mov
cmp
imul
mov
and
(bad)
xor
out
mov
push
inc
pop
mov
or
ret
xor
daa
jp
mov
cs
bound
nop
xchg
push
push
xchg
pushf
jne
fcmove
fnsave
push
mov
jle
cld
or
pop
pop
not
stos
xchg
xchg
push
push
mov
sbb
adc
retf
hlt
fst
jne
test
rcr
bound
mov
inc
cwde
add
jns
icebp
mov
mov
jle
inc
jge
push
aad
xor
add
adc
outs
xchg
push
enter
aam
leave
cli
adc
xlat
mov
enter
xchg
mov
repz
fcom
xor
mov
(bad)
sbb
sub
push
nop
repz
imul
in
dec
sbb
in
imul
retf
les
xlat
push
test
nop
lahf
iret
pop
fistp
(bad)
out
mov
enter
int3
lods
adc
inc
jg
repz
or
popf
jg
push
pop
ret
adc
mov
cmp
ins
jle
mov
or
dec
sub
mov
inc
sub
stos
test
test
imul
inc
mov
movs
pop
jb
sbb
in
retf
adc
inc
div
xchg
xchg
sbb
or
mov
aad
pop
inc
ds
aam
and
sbb
pusha
inc
cmp
in
xchg
sahf
add
or
jns
and
inc
push
in
test
call
shr
jp
loope
sbb
repnz
in
sub
mov
and
and
jns
adc
les
mov
mov
jb
dec
sti
or
xchg
cmps
inc
pop
cmp
xchg
stos
clc
push
in
mov
sub
ror
test
fnstsw
adc
loop
in
push
sub
xchg
ficom
into
fisubr
push
shl
fld
jnp
ja
mov
bound
sbb
cmp
pop
stos
dec
aad
sub
xchg
mov
movs
dec
ja
dec
xor
xchg
es
or
xor
stos
leave
ins
les
mov
(bad)
fdivr
mov
mov
in
aaa
sbb
dec
xor
(bad)
jle
adc
das
dec
lock
push
(bad)
mov
dec
mov
inc
mov
aad
lods
pop
add
mov
les
ret
adc
(bad)
popa
rcr
push
push
dec
mov
popa
lahf
mov
test
and
outs
dec
sbb
jle
aaa
adc
xchg
outs
jmp
mov
and
sub
jle
test
pop
push
fstp
out
mov
lock
xchg
or
ds
(bad)
xchg
inc
ss
xor
sub
pop
xor
inc
pop
jbe
cmp
sub
mov
mov
(bad)
pusha
lock
loope
iret
push
jmp
cmp
and
sbb
jge
out
dec
dec
shr
lock
xchg
inc
aas
sub
and
mov
mov
ror
adc
cmp
cwde
mov
jmp
push
test
sbb
outs
adc
jmp
sub
mov
xor
mov
adc
(bad)
push
push
icebp
and
repnz
push
in
loopne
call
das
(bad)
(bad)
pminub
sub
push
or
(bad)
mov
fs
jnp
push
lds
dec
and
jp
mov
cmps
pop
cmp
mov
adc
xlat
xchg
inc
adc
or
jle
pop
popf
pop
mov
jne
outs
loope
out
call
jl
and
enter
ret
jb
pop
inc
add
xchg
nop
(bad)
movs
int
inc
jge
idiv
or
jmp
sub
jl
push
or
lock
sbb
mov
jl
dec
dec
xlat
inc
int
xchg
lods
popw
and
ins
add
les
jmp
pop
(bad)
in
mov
adc
mov
mov
dec
and
sar
test
icebp
retf
shr
mov
or
xchg
imul
aas
aam
(bad)
ja
jge
add
stc
xlat
jno
push
in
xor
inc
mov
mov
out
sub
stc
mov
neg
mov
pop
das
xor
pop
cmps
rcl
lds
mov
cmp
inc
call
add
jbe
jle
popf
jbe
pop
call
shr
(bad)
fmul
test
push
jecxz
in
xchg
dec
mov
push
popw
xchg
into
stos
je
fsubp
outs
mov
imul
push
call
or
and
hlt
jecxz
ds
dec
mov
dec
out
in
mov
js
xchg
mov
addr16
les
cwde
push
sbb
test
test
mov
in
add
(bad)
hlt
aas
(bad)
fist
mov
in
jecxz
call
or
push
sti
xor
aas
jno
xor
movs
and
push
xor
lds
mov
or
inc
(bad)
rol
push
ret
sub
adc
adc
push
mov
jns
mov
movs
dec
inc
retf
dec
cli
cdq
jmp
(bad)
dec
aam
add
jne
ret
mov
out
scas
shl
push
jg
jmp
sbb
jmp
inc
jge
iret
aad
mov
shl
cwde
sbb
push
out
add
in
imul
xchg
and
or
scas
les
push
shl
push
icebp
push
pop
dec
ins
mov
mov
push
ds
and
adc
pop
mov
or
push
add
push
das
ss
and
neg
test
jmp
push
ins
jecxz
bound
add
xchg
mov
xor
es
shl
imul
jle
mov
fidivr
jae
(bad)
int3
mov
das
cld
push
xor
not
in
and
stos
das
xchg
int
icebp
mov
inc
in
scas
push
arpl
mov
push
pop
or
fstp
sub
push
std
pop
mov
jae
or
adc
add
push
add
add
dec
loopne
(bad)
das
iret
ret
pop
mov
fsubr
adc
loop
cmp
aad
jmp
or
jmp
jle
stos
sub
lods
cmp
out
add
cmp
(bad)
movs
dec
out
mov
push
test
mov
push
jmp
dec
mov
add
ds
test
cmp
xchg
sub
or
idiv
or
scas
outs
or
test
pushf
ss
jae
pop
daa
int3
scas
push
sbb
cmp
shr
mov
push
or
or
fsub
mov
sbb
lods
ret
adc
mov
aas
cmp
push
jl
sbb
jle
push
xchg
cdq
mov
cmp
dec
mov
std
xor
or
cmps
jp
int3
fsub
xchg
push
adc
push
sub
push
adc
mov
or
mov
cmps
and
movs
mov
bound
jno
lds
jp
dec
adc
push
xchg
dec
stos
inc
push
pop
pop
dec
dec
shr
mov
mov
jge
pop
sub
rcr
sti
xor
add
scas
cmp
sbb
in
pop
xchg
dec
adc
jnp
iret
in
test
imul
jae
add
push
cdq
aaa
inc
mov
mul
rcl
cmp
and
jnp
inc
inc
add
and
jmp
mov
mov
movs
dec
imul
dec
dec
pushf
dec
repz
inc
adc
mov
xchg
cld
je
and
sub
and
je
ins
add
mov
pushf
mov
adc
sti
ror
push
retf
push
shr
jno
(bad)
std
inc
dec
or
xor
add
test
or
stos
push
(bad)
mov
inc
mov
adc
xlat
loope
fs
dec
mov
in
clc
pushf
movs
xor
xor
mov
push
call
cwde
mov
add
fucom
add
jns
push
cmp
sub
fadd
shl
cdq
leave
pop
mov
iret
rcr
xor
into
inc
out
or
cs
(bad)
push
push
(bad)
xchg
iret
xor
and
jae
or
cld
add
pop
call
mov
push
mov
mov
pop
test
dec
in
mov
arpl
mov
mov
ffreep
sbb
xor
icebp
inc
data16
icebp
sub
add
pushf
jp
cmp
xchg
mov
ficomp
push
mov
aad
jle
in
add
dec
nop
shl
jg
rcl
clc
mov
(bad)
(bad)
cmc
mov
pop
and
sbb
out
popa
xor
jp
retf
outs
inc
sbb
jb
jno
pop
fxam
sub
fisub
and
stos
repnz
pop
inc
pop
mov
fmul
jns
mov
sub
nop
cmc
repnz
jp
mov
cld
xchg
loope
jle
pop
lds
pop
es
enter
mov
jp
movs
loop
popa
sub
fmul
aad
push
push
sub
sar
sub
es
push
cmp
scas
in
call
cmp
clc
sar
pop
cmp
mov
jbe
jbe
mov
aam
push
aam
mov
daa
(bad)
xor
jo
add
aad
and
movs
dec
dec
jecxz
int3
nop
repnz
cmp
cmp
pop
in
cdq
test
push
icebp
dec
or
sbb
sub
in
mov
push
int3
scas
jne
(bad)
jmp
sbb
xchg
inc
dec
add
jecxz
inc
dec
xor
pop
pop
push
and
in
(bad)
repnz
sti
fmul
jle
xchg
and
aad
cbw
mov
fisubr
out
push
addr16
lods
jae
mov
mov
in
call
jnp
xchg
mov
fs
mov
mov
(bad)
adc
shl
lods
xchg
pop
movs
mov
xchg
jp
retf
pushf
es
enter
cli
ror
inc
add
fist
leave
pop
jmp
mov
sub
mov
int3
cmps
jg
out
leave
rol
clc
dec
int
mov
popa
retf
xlat
adc
rcr
pusha
mov
test
xlat
in
enter
or
out
xchg
mov
stos
or
call
or
fdiv
call
sbb
(bad)
icebp
xor
sub
repz
jmp
sbb
dec
adc
out
cld
sbb
lock
fidivr
mov
add
dec
test
call
and
jecxz
and
hlt
jecxz
sub
jo
rcr
sub
pop
stos
or
mov
cmp
jecxz
mov
lods
pop
outs
cmp
imul
cmp
fidivr
scas
sub
das
idiv
xchg
inc
xchg
sub
or
cwde
fiadd
xor
scas
rcr
mov
adc
in
xchg
xlat
bound
and
iret
fistp
mov
gs
lock
mov
aad
or
leave
pop
pop
add
sub
mov
out
(bad)
pop
sbb
cwde
movs
sti
jnp
imul
daa
pop
jmp
mov
inc
cmps
sub
clc
add
xor
and
idiv
out
stc
mov
ret
sbb
or
fnstcw
and
pusha
in
out
ins
scas
imul
inc
in
push
mov
lds
cwde
mov
out
fsubrp
mov
sbb
stos
imul
cld
sti
fimul
lods
jbe
adc
xchg
fnstsw
or
lds
imul
pop
jecxz
(bad)
jle
xor
test
mov
mov
retf
hlt
jnp
mov
mov
cmps
in
leave
jb
and
ret
pop
cmp
pop
adc
pop
je
push
or
ss
sub
cmc
add
fimul
inc
loopne
mul
retf
mov
fidivr
mov
mov
stos
sbb
push
cmps
and
dec
movs
ins
sahf
ror
test
out
popa
sub
inc
sub
jnp
cdq
inc
add
adc
xor
push
arpl
fs
stos
xchg
or
loop
mov
dec
adc
xor
adc
les
ss
and
push
sub
adc
add
mov
popf
cmps
pop
xor
in
dec
jbe
pop
mov
cmp
int3
sub
jg
(bad)
out
scas
ds
inc
std
mov
xchg
popa
jl
retf
xchg
dec
adc
(bad)
repnz
pop
add
ds
neg
dec
leave
mov
inc
out
mov
pop
mov
jle
xor
stos
or
sbb
int
movs
cmps
sub
cmc
test
sub
mov
push
add
inc
retf
or
fadd
stos
xor
cmp
rol
inc
clc
inc
or
cmps
test
adc
or
add
fidiv
add
stos
fld
punpckhbw
movs
test
or
cmp
dec
xor
sub
gs
cmps
shl
sbb
inc
add
adc
(bad)
fcmovnu
mov
push
dec
mov
lods
pusha
pushf
xchg
test
mov
sub
enter
(bad)
push
inc
mov
dec
and
sti
add
pop
rol
dec
pop
sbb
nop
popf
mov
dec
push
dec
call
das
out
sub
aas
inc
pop
xchg
(bad)
jmp
add
pusha
adc
dec
adc
pop
adc
sbb
push
data16
mov
jnp
movs
aaa
push
adc
dec
cwde
add
ins
jecxz
or
mov
push
mov
nop
jbe
push
call
addr16
hlt
outs
and
xor
dec
mov
sub
or
sub
pop
or
out
push
fisub
dec
loopne
and
lds
dec
(bad)
hlt
imul
cmovb
imul
adc
pop
mov
stc
jmp
rcr
jnp
sub
aam
fwait
jmp
dec
jno
sbb
add
inc
pop
or
or
sbb
cmp
mov
fs
add
nop
in
movs
scas
test
push
ss
push
scas
in
adc
addr16
dec
dec
cmp
push
dec
(bad)
mov
stos
test
add
jmp
iret
xchg
inc
push
adc
retf
aas
pop
inc
dec
inc
dec
imul
pop
aad
loopne
shl
or
xchg
push
js
mov
nop
lods
inc
ins
xchg
mov
sbb
sbb
push
adc
and
pop
or
loope
pop
cld
scas
sub
mov
sahf
aad
sub
cld
stos
adc
add
push
xchg
mov
int
mov
mov
rcl
sub
js
or
add
pop
rol
xlat
push
mov
ror
lods
(bad)
(bad)
pop
loope
push
dec
sti
adc
jb
push
out
or
xor
sub
xor
dec
in
popa
pop
push
sub
sbb
jg
fistp
pop
cmp
sahf
inc
mov
and
out
or
in
mov
mov
cmp
ds
mov
or
int
scas
or
cmps
mov
sahf
lock
jno
lods
ds
xchg
dec
sub
popf
retf
sub
push
mov
popf
add
add
enter
adc
fdiv
or
add
ja
adc
or
jb
loopne
ins
and
mov
shr
push
sbb
das
mov
inc
or
stos
pop
mov
xchg
mov
adc
test
rol
test
xor
repz
adc
mov
jb
adc
rcr
outs
or
and
jmp
(bad)
loopne
push
add
jp
inc
into
ret
lea
dec
xchg
cli
inc
loopne
fsubp
loop
sub
jno
movs
mov
ret
mov
(bad)
adc
jg
and
add
fist
add
dec
pop
dec
cmps
cmp
ins
mov
and
test
aas
fs
fwait
mov
push
adc
inc
xlat
shl
add
out
lds
mov
jg
scas
sub
movs
in
les
push
jmp
push
sbb
xchg
shl
push
mov
and
neg
leave
fidivr
xchg
mov
push
and
bound
arpl
push
retf
cmp
test
mov
arpl
dec
dec
adc
pop
xchg
test
push
aam
int3
jne
bound
rcr
into
and
dec
fs
sub
inc
jmp
push
dec
mov
mov
adc
xor
inc
adc
add
jle
cmp
pop
push
mov
cmp
popf
cwde
pop
jne
jnp
repnz
popf
clc
push
adc
mov
add
sbb
stc
inc
(bad)
push
push
pop
loop
daa
mov
and
push
sbb
js
call
jl
rol
add
ins
pushf
out
fisubr
test
mov
in
mov
aam
xchg
dec
lock
jo
stc
loope
sbb
imul
sub
push
or
adc
cmp
push
shl
into
or
aam
mov
in
scas
or
call
(bad)
cmp
and
or
mov
jle
sbb
mov
push
ins
sti
mov
pop
icebp
inc
jmp
aam
or
int
and
in
xchg
push
movs
inc
rcr
pop
cmp
cdq
(bad)
pop
inc
and
je
sub
movs
dec
lock
cmp
adc
in
adc
push
xchg
jbe
push
rcr
leave
popf
mov
jecxz
inc
pop
mov
aaa
je
sub
fisub
or
fiadd
xlat
jge
sbb
aad
mov
jecxz
sub
hlt
mul
rcl
push
lahf
out
dec
fadd
dec
aam
popa
(bad)
cli
das
not
cmp
cwde
xchg
jno
aaa
je
adc
push
inc
mov
and
and
and
in
add
ins
and
cmp
and
(bad)
fcmovbe
mov
jne
clc
js
outs
(bad)
push
xor
push
gs
pop
adc
mov
inc
sub
daa
jg
mov
inc
sbb
imul
inc
aam
push
push
imul
fiadd
or
(bad)
lock
inc
(bad)
cmp
jmp
ds
dec
xchg
inc
ins
jle
(bad)
sbb
fnstsw
xlat
movs
loope
or
repz
fcmovnbe
and
ins
shl
mov
sub
outs
mov
out
in
xor
xchg
mov
add
add
push
push
into
mov
jne
fs
popf
push
mov
loopne
pop
push
jbe
or
(bad)
xchg
sbb
and
xchg
arpl
sub
and
clc
add
push
xchg
mov
js
pop
ja
or
daa
push
enter
ror
jae
clc
or
sbb
push
xor
cld
xchg
imul
adc
int3
sbb
push
jmp
xchg
cwde
popa
pop
das
call
sub
adc
cmp
das
adc
ss
and
push
lods
addr16
ret
push
mov
inc
or
jbe
xor
xchg
mov
inc
sbb
sub
fnstcw
aad
into
or
mov
in
push
aaa
push
ficomp
add
mov
inc
imul
sub
mov
shl
ret
aam
ja
jne
repz
push
retf
lods
stc
leave
scas
out
aam
inc
mov
inc
and
(bad)
out
cmp
add
ss
inc
dec
rcr
mov
mul
add
or
cmp
pop
pusha
mov
gs
push
and
xchg
cmp
aas
cdq
cli
push
rcr
pop
fiadd
pop
pop
test
test
sbb
pop
jecxz
sbb
xor
cmp
pop
add
imul
mov
mov
bound
xor
jae
lods
sub
add
adc
aaa
cmp
aam
sub
outs
in
(bad)
adc
inc
sbb
xor
int
movs
mov
jecxz
dec
(bad)
cmp
jg
ficom
sbb
mov
inc
clc
and
and
retf
xor
scas
out
test
lods
mov
dec
ror
cmps
aas
rcr
adc
push
sbb
mov
or
push
fmul
pop
add
push
mov
add
push
ins
mov
add
xor
je
jmp
xchg
(bad)
fs
fadd
(bad)
cmc
add
push
imul
adc
mov
jmp
es
xchg
std
outs
mov
in
sbb
sub
inc
or
push
jl
push
inc
push
mov
loope
in
retf
cmc
or
xor
pop
sbb
mov
sub
out
adc
mov
mov
sbb
inc
mov
dec
shr
xor
cmp
push
(bad)
push
imul
and
jo
jg
jle
dec
xor
pop
jnp
stc
inc
sub
mov
push
hlt
lods
loope
fcomp
mov
cmp
sbb
sti
xor
jecxz
imul
fnstenv
mov
pop
es
push
(bad)
out
xchg
(bad)
in
or
iret
nop
mov
test
xor
xchg
lods
jmp
xor
mov
pop
in
add
f2xm1
pop
in
dec
push
xchg
cwde
push
imul
pusha
retf
push
bound
mov
mov
dec
adc
scas
inc
mov
push
fmul
scas
or
(bad)
add
or
rcr
push
call
outs
mov
dec
sub
hlt
daa
mov
jbe
lock
call
sbb
ror
and
cmps
xchg
jle
lahf
leave
retf
mov
jbe
jle
pushf
ficomp
mov
adc
pop
jecxz
dec
(bad)
fiadd
jo
aas
push
iret
es
repz
cdq
sbb
jns
pop
in
add
xchg
mov
mov
out
xchg
cmps
sub
hlt
mov
aaa
or
outs
fild
mov
jae
mov
lahf
push
mov
xor
and
fadd
sbb
add
scas
lock
jb
popa
inc
sbb
mov
(bad)
fnstsw
ins
and
xchg
xor
add
dec
dec
jecxz
adc
and
call
iret
or
test
popf
mov
pop
jl
ficomp
and
popf
push
adc
outs
push
pop
mov
cmp
leave
cmp
lea
xchg
and
loope
out
adc
pop
(bad)
pop
and
leave
sbb
add
mov
lods
xor
cmp
fsub
call
in
js
xchg
aad
xchg
inc
cmp
xchg
pop
and
retf
stc
aas
fsub
shl
dec
fisub
popa
or
je
leave
inc
repz
in
(bad)
pushf
push
push
lds
in
inc
inc
nop
jno
dec
mov
pushf
(bad)
sbb
adc
aaa
js
mov
adc
les
cmp
mov
hlt
dec
fisttp
(bad)
sub
out
mov
add
xor
mov
ins
es
bswap
int
cmp
popa
sbb
add
(bad)
mov
and
xchg
dec
adc
cmp
adc
rol
shl
(bad)
adc
jl
mov
call
dec
pushw
xor
pop
cmps
mov
inc
xchg
movs
jb
cmp
mov
dec
sub
test
jle
mov
aaa
sti
push
push
mov
aas
dec
dec
sti
mov
jno
ins
jle
adc
add
xchg
xchg
repz
mov
xchg
add
mov
outs
out
popa
int3
xchg
in
inc
(bad)
stos
xchg
(bad)
out
mov
mov
add
xor
imul
les
loope
jbe
sbb
enter
push
hlt
adc
sbb
dec
into
xchg
pushf
sub
aaa
and
xchg
push
jae
int3
mov
mov
push
inc
scas
pop
push
xchg
sub
sbb
jge
pop
mov
fidiv
ficom
(bad)
test
adc
push
and
mov
or
out
pop
cmp
into
lock
and
sbb
dec
xchg
inc
pop
repnz
push
in
cdq
dec
pusha
dec
xchg
or
inc
xchg
aas
dec
sub
add
adc
lock
pop
xlat
pop
in
in
xchg
int
imul
cmp
fimul
sti
cld
cmp
mov
cdq
xlat
stc
es
sub
jne
icebp
hlt
stc
idiv
test
js
pop
xchg
test
daa
gs
dec
push
inc
repz
cmc
dec
jb
mov
add
add
adc
add
pop
sbb
stos
shl
mov
pop
cmp
mov
jo
push
cld
xchg
sar
gs
(bad)
push
div
inc
mov
(bad)
cmp
inc
or
push
scas
loopne
mov
into
mov
xor
xor
popf
push
in
fisttp
(bad)
sti
jmp
mov
jl
test
and
int
push
ss
adc
(bad)
xchg
ins
mov
dec
(bad)
mov
setle
fist
mov
inc
daa
and
ja
pop
scas
int3
(bad)
and
imul
imul
or
fbld
push
jecxz
mov
stos
push
cdq
fbld
cld
jbe
dec
pop
and
scas
dec
rcl
add
std
lock
push
jb
pop
cmp
adc
outs
or
inc
movs
xchg
out
and
inc
(bad)
fdivrp
in
out
int3
test
fist
adc
cs
pop
push
sub
xor
cmp
ret
call
or
push
not
mov
sub
es
xor
push
or
add
sub
jp
dec
pop
(bad)
out
cmp
push
daa
iret
pop
clc
out
retf
rcl
or
jge
xchg
(bad)
fwait
mov
jne
dec
jmp
pusha
in
jg
movs
mov
lds
jbe
mov
mov
mov
mov
mov
in
push
ret
cmp
add
lods
orps
add
and
adc
jle
scas
jl
lds
shl
in
sti
jmp
and
cwde
add
adc
inc
and
and
imul
sti
ins
cmp
fisttp
xor
sar
movs
pop
mov
sub
fs
setne
ret
inc
jl
test
ins
and
imul
scas
call
enter
jmp
(bad)
xor
cmp
cmp
test
js
xor
dec
xchg
mov
jo
mov
sbb
sbb
fistp
imul
or
loopne
enter
add
lock
pop
enter
sbb
sahf
pop
ins
sbb
repz
mov
sbb
rcr
or
(bad)
jo
cdq
sub
cmp
shl
cmc
int
adc
jne
cmp
pusha
xchg
or
jno
(bad)
int3
out
pop
xchg
inc
movs
aam
fcomp
cmp
mov
mov
xor
fcomp
inc
sbb
aam
sub
add
push
jmp
cmp
sbb
jmp
jg
and
dec
cmps
ret
mov
xchg
pop
jge
gs
lea
sub
mov
out
stos
loopne
les
or
adc
mov
mov
cmps
push
inc
mov
push
sub
lahf
pusha
cmp
lods
retf
sub
sub
scas
ret
(bad)
dec
fdiv
push
hlt
(bad)
mov
imul
leave
(bad)
pop
pop
pop
iret
inc
xchg
jne
add
cwde
push
and
nop
pushf
xor
mov
ficom
stc
jmp
cmp
in
adc
fwait
pop
jno
stos
pop
pop
movs
sub
scas
pop
mov
(bad)
call
mov
or
adc
test
fild
mov
ficomp
add
mov
sub
inc
sub
dec
jne
sub
mov
dec
loope
pop
mov
ds
pusha
mov
push
stos
int
aas
xlat
xor
(bad)
fstp
mul
ins
sti
dec
pop
fsub
movs
dec
shl
xchg
enter
out
mov
sbb
push
jns
inc
mov
(bad)
sbb
pop
lock
mov
test
pushf
mov
int
in
jl
inc
push
mov
sub
push
inc
adc
leave
and
push
inc
mov
outs
dec
ins
dec
cmp
dec
test
sar
cmps
add
movs
int
dec
arpl
xor
into
loop
push
mov
clc
fwait
sub
ds
push
jmp
ss
cmp
rol
popf
jmp
mov
dec
sbb
adc
faddp
mov
xchg
adc
lods
mov
(bad)
pop
out
call
cmp
stos
hlt
ret
imul
cmp
imul
cmp
jmp
add
push
mov
push
jecxz
scas
rcr
xchg
das
jg
retf
pop
mov
dec
and
es
xor
cmps
rcr
push
jne
jp
rcr
imul
add
js
mov
jmp
add
outs
cmp
cmps
pusha
lods
cld
xlat
pop
lods
shl
imul
retf
mov
pop
loope
xor
aaa
push
jmp
stc
jecxz
lahf
xchg
out
scas
pop
ret
sub
sub
dec
loope
ss
cld
pop
pop
call
ja
rcl
dec
cdq
sbb
cmp
ret
je
sahf
js
repnz
xor
jg
push
les
mov
adc
stos
xor
adc
(bad)
xchg
inc
lods
push
in
sar
repnz
dec
inc
cmc
test
ficom
repz
inc
lea
sbb
movs
add
out
inc
imul
push
arpl
(bad)
xor
mov
imul
loope
(bad)
or
fwait
pop
xor
lahf
add
ins
dec
aaa
lds
fucomi
cmp
adc
cmp
data16
test
or
push
loope
popf
aas
or
in
or
dec
sbb
pop
cmp
mov
mov
int3
call
(bad)
adc
add
adc
and
(bad)
outs
icebp
loope
rol
fisttp
xor
pmaddwd
inc
test
addr16
bound
xor
call
ror
sub
pop
jo
mov
sbb
std
xchg
in
sub
aad
leave
xor
pop
dec
call
and
jne
enter
je
inc
pop
mov
fwait
hlt
scas
out
ins
stc
sbb
movs
(bad)
hlt
sbb
jae
cmc
inc
jmp
inc
pop
and
ins
or
adc
ins
cmp
je
mov
push
inc
ror
jp
shr
push
mov
xchg
(bad)
lods
sahf
xor
mov
setns
mov
push
outs
push
push
sub
ds
adc
add
inc
cmc
das
push
jnp
or
cwde
pushf
ror
cmove
ret
sbb
in
(bad)
repz
xchg
sbb
cmp
fcmovnbe
mov
mov
add
dec
ins
loop
and
push
out
retf
dec
(bad)
mov
shl
(bad)
jbe
dec
cmovp
inc
ins
push
dec
ds
imul
mov
inc
dec
mov
lods
shl
dec
add
push
out
hlt
cmp
stos
xor
sub
sar
xlat
retf
fwait
xor
and
and
mov
bound
xlat
pop
push
jg
ins
ret
addr16
inc
xor
je
push
fsub
std
mov
inc
push
mov
je
aaa
dec
mov
pusha
test
jnp
or
mov
push
jecxz
bound
mov
pop
mov
pop
push
push
stos
push
push
or
ja
fwait
and
outs
(bad)
popa
or
pusha
pop
retf
mov
daa
cdq
test
sub
sub
ins
push
pop
jne
(bad)
cmp
xlat
shl
or
in
pushw
lahf
push
ins
adc
dec
ror
push
out
in
retf
repnz
fs
idiv
dec
jmp
cmp
gs
jl
xchg
mov
lods
arpl
mov
lock
sub
mov
add
or
fdiv
pop
sti
mov
test
cli
test
gs
inc
dec
push
repnz
bound
ja
push
fcmovnbe
mov
jb
pop
dec
out
mov
fs
(bad)
jge
or
xchg
sub
mov
inc
inc
out
push
cdq
push
ficom
into
push
outs
ins
xor
fxch
in
mov
in
(bad)
lods
neg
fiadd
repz
and
bound
ss
ret
xor
stc
adc
lahf
pop
cmp
aas
pusha
gs
lods
or
mov
mov
adc
lods
dec
mov
adc
mov
sub
pop
daa
push
pop
test
xor
out
ret
rcl
sbb
sub
ret
jle
push
sbb
rcl
ret
add
adc
jle
and
(bad)
xchg
push
in
push
xchg
(bad)
gs
sbb
scas
loopne
ins
mov
jns
lods
cwde
outs
mov
pop
daa
xchg
shl
xchg
es
and
and
and
daa
sbb
and
jno
xchg
jg
push
or
in
(bad)
push
mov
cbw
add
cli
pushf
and
imul
nop
fmul
stos
xchg
bswap
sbb
xor
xor
cmp
into
movs
mov
pusha
add
enter
int
inc
outs
xchg
lods
sub
retf
push
mov
xchg
adc
fs
mov
pop
js
stos
cli
and
adc
fcomp
mov
shr
sub
js
inc
leave
fiadd
push
sub
pop
and
scas
mov
in
adc
mov
std
arpl
mov
lods
inc
mov
mov
pop
xor
inc
dec
xor
and
fidiv
mov
inc
mul
mov
inc
xchg
mov
push
jl
in
push
scas
fcom
aas
lock
dec
xchg
add
inc
pop
xor
aam
(bad)
add
pop
pop
cld
mov
test
outs
mov
sbb
push
test
xor
popa
pop
outs
outs
hlt
mov
mov
fwait
xchg
iret
dec
add
repnz
xor
call
push
sub
fcomi
mov
add
mov
daa
adc
jmp
or
xor
(bad)
shl
ror
jge
sbb
pop
arpl
test
outs
mov
push
repnz
push
jnp
fidiv
xchg
jp
les
xchg
int3
cmp
cmp
and
pop
sbb
lods
mov
movs
dec
push
mov
xor
xchg
outs
or
mov
je
mov
lahf
loope
das
mov
xchg
out
sub
cmp
mov
mov
repnz
add
ja
push
inc
jns
mov
ins
movs
leave
inc
mov
mov
shl
adc
gs
ins
mov
jle
add
add
or
inc
add
cwde
xchg
add
jecxz
mov
pop
inc
pushf
imul
bt
or
shr
aaa
iret
xchg
xor
sub
popf
test
sub
pop
jo
xchg
jb
ror
and
sub
sahf
push
and
cwde
jae
pop
inc
xchg
popa
repnz
sub
mov
mov
dec
pop
cmp
mov
(bad)
sar
mov
or
bound
adc
les
movs
std
sbb
loopne
sbb
push
je
sbb
mov
les
sbb
push
add
sbb
push
ja
lds
mov
mov
iret
cmp
mov
cmps
test
loop
aad
pop
not
pop
dec
push
fwait
rol
mov
jne
iret
push
mov
mov
sub
or
inc
pop
jns
add
pushf
mov
or
dec
stos
sub
test
into
xchg
int
add
lods
call
push
nop
cmp
cmp
rol
shl
les
sbb
sbb
push
mov
movs
cdq
gs
daa
shl
mov
sbb
dec
or
icebp
or
fisubr
add
cwde
ss
push
test
loope
push
inc
push
add
sar
xchg
mov
pusha
mov
ja
jmp
ret
sub
or
sahf
mov
xor
bound
shr
retf
push
out
lods
cli
jecxz
cmp
pop
mov
cmp
bound
push
and
aam
repz
aam
sbb
loope
push
test
jo
in
aam
mov
and
mov
xchg
rcl
xchg
pop
popf
in
inc
or
adc
outs
or
les
lahf
add
pop
fdivr
xor
call
add
sub
jnp
repnz
mov
movs
xchg
pop
pop
mov
adc
enter
dec
mov
adc
jg
dec
cmps
in
pusha
gs
pop
imul
push
(bad)
jmp
jmp
push
dec
jbe
out
jl
test
in
or
je
mov
xor
es
mov
xchg
sub
fcmovnb
jo
jo
stos
fstp
aaa
jecxz
sub
pop
call
mov
sbb
cmp
outs
sub
mov
jge
mov
cmp
mov
xchg
jae
popa
sahf
push
xchg
imul
pushf
and
call
(bad)
repz
rcl
jmp
cmc
and
aad
int
into
arpl
enter
dec
sahf
mov
mov
data16
jl
adc
retf
into
mov
mov
int
sbb
inc
(bad)
and
sbb
and
mov
std
(bad)
fldcw
mov
ret
out
adc
adc
les
add
movs
fs
inc
scas
inc
add
int3
mov
xchg
sub
repz
repz
setbe
xchg
mov
push
and
int3
out
jg
lock
jg
stc
test
aad
mov
cmp
repz
xor
mov
ffreep
out
xlat
mov
dec
jge
mov
cmp
pop
jbe
adc
pushf
mov
fst
clc
sub
or
ins
fbstp
cs
stos
(bad)
dec
inc
nop
adc
cld
outs
les
out
retf
cmc
sub
jmp
xlat
or
sub
das
mov
mov
inc
cmps
sbb
mov
jae
out
cmp
add
sbb
aas
adc
dec
push
ret
xlat
sahf
int
out
or
iret
jl
pop
xor
lahf
mov
sbb
stc
mov
sub
xlat
and
cmps
add
inc
retf
(bad)
sub
and
fld
dec
inc
scas
cmp
jae
movs
cdq
gs
sbb
pusha
mov
lock
int3
int3
ds
pop
test
aam
stos
sub
das
xchg
movs
test
pushf
(bad)
(bad)
jge
sbb
call
adc
jg
int3
add
in
cmps
std
(bad)
or
mov
cmp
loopne
stos
cmp
lods
loopne
out
push
mov
add
out
mov
add
outs
mov
jmp
ret
aaa
out
inc
push
shl
sbb
dec
jmp
pop
pop
repnz
xor
mov
add
xor
xchg
daa
loop
rcl
cmps
(bad)
(bad)
cli
aas
jge
in
push
xchg
sbb
pop
mov
cmp
ret
push
or
dec
bound
imul
clc
xchg
jo
inc
push
ffreep
sbb
test
(bad)
retf
cld
ss
mov
nop
inc
imul
inc
js
out
mov
les
adc
test
sub
pop
das
fsubr
loope
icebp
adc
icebp
leave
jo
mov
jo
dec
into
mov
fs
cmp
in
dec
sub
mov
cld
jne
xor
sbb
or
jb
imul
xor
addr16
pop
in
add
push
pop
movlps
aas
cmp
dec
ins
pop
push
cli
and
dec
push
ror
pop
cmp
nop
xchg
inc
test
fwait
dec
dec
aaa
jl
jns
test
(bad)
fsub
pop
mov
pop
test
jecxz
pop
js
push
sub
mov
xor
ret
dec
dec
pusha
rcl
jp
aad
sbb
ficomp
xor
movs
cmp
mov
outs
pop
mov
sub
retf
pop
test
es
out
pop
xchg
clc
popa
adc
xor
(bad)
leave
stos
push
into
add
fldcw
popa
xchg
movs
and
fsubrp
fld
jne
ds
call
fwait
cmp
push
cdq
jne
push
xchg
shr
or
jmp
xchg
test
fimul
add
inc
cdq
and
xchg
es
call
mov
ret
adc
add
and
test
out
test
cmc
not
xor
pop
ds
nop
push
mov
mov
jne
adc
and
sub
scas
fisubr
pop
or
add
arpl
mov
data16
cld
iret
jp
sub
stc
js
stos
test
inc
lock
and
(bad)
cmp
push
cmp
dec
dec
sbb
adc
mov
pop
fimul
fldcw
mov
inc
jae
jge
ds
mov
(bad)
out
jmp
popa
sub
xchg
dec
and
outs
stos
sub
fmul
pop
ins
adc
inc
sbb
into
dec
imul
push
pop
ret
or
sub
scas
xchg
mov
imul
mov
pop
xor
and
push
neg
(bad)
fcomp
pop
inc
add
fcom
fwait
pushf
xor
lock
dec
mov
inc
xchg
pop
call
cmp
fdiv
(bad)
lock
pop
mov
fisub
jo
push
lahf
stos
mov
fld
ret
popa
loop
cwde
mov
pop
inc
mov
out
lea
loopne
rcl
mov
jbe
cmp
dec
pop
lods
test
icebp
sahf
mov
lea
inc
dec
das
xchg
inc
aad
jae
dec
fiadd
aad
push
test
data16
xchg
adc
iret
out
sbb
add
lds
push
fwait
mov
push
adc
cmps
add
stos
lea
xchg
adc
shl
sbb
js
add
pop
sub
repz
sub
pop
sti
outs
dec
imul
sbb
dec
push
adc
lock
sub
daa
addr16
add
repnz
add
aam
pop
cwde
inc
pop
out
int
lds
push
stc
sbb
(bad)
add
inc
sbb
test
in
mov
jnp
jb
fild
leave
mov
retf
int3
adc
retf
jne
push
push
pop
pop
pop
(bad)
icebp
dec
hlt
jge
and
mov
xlat
(bad)
adc
push
xchg
sub
ja
push
bound
xchg
ja
inc
dec
mov
ins
(bad)
in
in
into
mov
adc
add
pop
add
or
cmps
inc
test
xchg
sbb
add
cli
inc
iret
inc
rol
aad
sub
fld
sbb
sbb
jg
or
shr
loop
es
imul
sbb
add
mov
and
mov
mov
fsubr
mov
repnz
shl
pop
test
xor
pop
add
jne
lahf
ret
test
xor
xor
mov
dec
inc
mov
mov
popf
mov
das
and
retf
sbb
cmp
rcr
inc
adc
jg
leave
xchg
retf
add
mov
push
fdiv
fdivp
mov
jo
cld
push
inc
je
inc
dec
std
mov
or
xor
sahf
jo
cmps
add
and
sbb
sbb
inc
icebp
jecxz
or
mov
jmp
cmp
cmp
and
dec
fild
cs
cmp
dec
add
mov
mov
jnp
dec
cmp
ja
pop
add
aaa
out
leave
jmp
cmps
sbb
pop
cmp
mov
inc
iret
out
jns
add
dec
loope
push
jl
inc
test
mov
(bad)
sub
sbb
out
sahf
pop
push
push
sub
add
mov
adc
fadd
inc
xchg
shl
repz
das
scas
jno
(bad)
xchg
stos
(bad)
je
clc
cwde
xchg
mov
aas
jno
pop
jl
lods
imul
or
jmp
jnp
mov
js
xchg
xor
scas
(bad)
cdq
pop
fld
out
rep
jnp
xor
mov
adc
push
stc
or
mov
fnstsw
dec
push
int
fild
pop
add
or
mov
or
aas
push
mov
jns
push
enter
cmp
add
mov
popa
xchg
pusha
mov
xor
jns
sub
ret
repnz
dec
push
shl
xchg
clc
movs
in
dec
or
loope
push
stos
(bad)
xor
sbb
inc
fcomp
push
jp
das
add
std
jo
sub
dec
mov
fld
and
cdq
mov
loopne
push
xchg
push
ja
or
or
call
jecxz
sbb
out
xchg
pop
jb
cmp
sbb
push
mov
les
sub
jo
jmp
sbb
xchg
jae
mov
jecxz
and
mov
sahf
jp
fcom
inc
int
retf
xchg
ins
outs
test
dec
mov
mov
push
les
addr16
xor
ds
xchg
aam
cmp
imul
enter
push
call
add
mov
popa
test
aas
xchg
sar
push
xchg
cmp
(bad)
push
push
or
adc
and
fwait
push
mov
adc
hlt
fild
ret
mov
mov
movs
mov
xchg
icebp
add
or
enter
add
adc
ja
pop
push
jne
jmp
ret
xchg
push
lock
hlt
mov
mov
not
cdq
cld
push
jb
mov
mov
pop
sbb
adc
sbb
or
jmp
into
inc
xor
xor
cmps
cmp
lea
pop
outs
gs
add
popf
push
mov
scas
jp
hlt
push
sahf
xchg
ins
pop
out
jmp
stc
(bad)
lods
outs
xchg
push
adc
fistp
and
inc
mov
jmp
loope
ja
je
push
ret
div
mov
pop
jnp
scas
sub
and
xor
jle
xlat
sub
popf
mov
neg
clc
pop
(bad)
adc
jns
sbb
out
ret
inc
pop
out
daa
out
jno
mov
sbb
mov
mov
xchg
pop
cmp
aas
loop
shl
mov
gs
jns
stc
add
xlat
jo
scas
inc
cmp
jp
addr16
in
add
repz
shl
sbb
aas
in
int
ss
pop
aas
imul
shr
repnz
sub
imul
mul
out
mov
sub
jb
dec
jl
add
xchg
add
ffree
xor
adc
ja
sbb
pop
push
pop
jg
jns
add
sti
(bad)
add
pop
xchg
lods
add
sub
in
pop
add
push
outs
adc
sbb
mov
xchg
les
sbb
inc
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
