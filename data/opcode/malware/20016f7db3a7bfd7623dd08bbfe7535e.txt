rcr
jp
mov
jecxz
sub
push
push
(bad)
enter
lock
popf
rcr
mov
mov
fild
mov
dec
shr
inc
scas
out
pop
mov
adc
push
jns
mov
in
js
mov
ret
add
mov
(bad)
and
and
enter
sbb
push
movs
les
xchg
dec
mov
or
ja
mov
and
mov
ja
mov
sbb
pop
xor
dec
xor
(bad)
adc
(bad)
sbb
enter
mov
fisttp
xchg
cmp
test
inc
repnz
rcr
pop
test
popf
jns
dec
xor
sbb
xor
mov
pushf
sbb
and
xchg
lea
sahf
cmps
or
adc
aam
lods
(bad)
(bad)
scas
and
stos
aam
loopne
pop
cdq
fdiv
shl
in
cmp
push
xchg
fsub
cdq
push
sbb
inc
sahf
stos
pop
test
retf
ss
xor
pop
push
shl
js
or
sbb
retf
call
pop
fisub
pop
movs
fidivr
sahf
dec
cmps
push
popf
mov
cmc
pop
loop
ror
xor
push
int
ret
dec
push
mov
jmp
imul
scas
lahf
sahf
pop
inc
(bad)
mov
int3
int
cmps
and
cdq
xchg
add
mov
sub
and
xchg
mov
mov
sub
cwde
xchg
call
mov
sub
js
(bad)
pop
lock
cdq
mul
add
int3
mov
into
sub
xor
xor
stc
xchg
test
aam
in
mov
das
daa
daa
repnz
lods
lds
(bad)
sti
xlat
(bad)
adc
add
push
in
aam
pop
mov
sbb
nop
pop
repnz
dec
push
adc
sbb
mov
cmps
dec
pop
into
enter
jp
repnz
jmp
mov
adc
dec
jmp
addr16
xchg
mov
mov
sbb
pusha
fs
or
inc
out
pop
jl
lods
sbb
and
int
sahf
sti
xchg
and
cmp
dec
xchg
sub
xchg
fdiv
retf
mov
in
shr
inc
test
adc
ret
jns
jmp
sub
mov
jmp
jp
sbb
xchg
sub
adc
clc
out
mov
mov
adc
push
jae
test
xchg
xchg
stos
stos
fnstcw
inc
test
dec
test
mov
inc
test
stc
push
inc
addr16
inc
jl
scas
scas
inc
adc
int3
(bad)
sti
inc
lds
jp
or
xchg
mov
sti
jle
mov
adc
rcl
push
add
scas
stc
addr16
mov
adc
pop
test
mov
scas
cmp
push
mov
jmp
xor
dec
test
sbb
push
xchg
out
xchg
in
rcl
adc
test
xchg
enter
inc
shr
dec
test
or
fistp
push
loope
test
xchg
je
sti
add
in
ret
repnz
adc
ins
in
sub
xchg
stc
inc
inc
xchg
sub
jne
inc
add
test
mov
mov
cld
jmp
pop
stc
imul
jle
jp
mov
jmp
mov
out
rol
iret
or
iret
push
out
repnz
test
not
retf
std
mov
xchg
cmc
(bad)
in
lock
adc
out
repnz
and
push
lock
xor
mov
(bad)
int
in
lock
adc
out
repnz
mov
adc
out
repnz
int
in
lock
inc
mov
push
push
out
repnz
(bad)
in
lock
pop
out
repnz
sbb
hlt
push
lock
inc
out
repnz
test
repnz
lods
in
lock
push
jnp
aad
mov
push
push
out
repnz
(bad)
in
lock
pop
out
repnz
aaa
(bad)
nop
inc
mov
es
aas
mov
ror
push
sub
pop
lea
jne
mul
mov
sbb
mov
push
rol
jp
test
pop
loop
and
fs
cmp
sbb
dec
lds
mov
retf
sti
xchg
cdq
push
cmp
dec
xchg
ss
inc
adc
scas
ret
lahf
iret
jmp
pop
stos
test
stc
or
mov
adc
sub
movs
sub
dec
sbb
xchg
aaa
clc
test
jle
add
jmp
std
adc
shr
mov
inc
stc
push
pop
mov
push
sar
xchg
rcl
stos
dec
lahf
repnz
inc
adc
adc
hlt
jbe
test
ret
fld
jp
sub
sti
jle
jbe
add
popf
jp
inc
pop
stc
push
inc
outs
xor
rcl
jp
stos
mov
jp
movlps
stc
pop
pusha
push
stc
pop
popf
inc
test
xchg
push
sar
inc
jmp
sub
lock
retf
push
mov
pop
cmp
mov
out
xchg
popa
clc
adc
addr16
ss
dec
test
in
or
mov
in
shl
dec
xchg
test
sar
enter
addr16
jne
cli
push
push
mov
sahf
mov
aas
in
test
ss
out
inc
test
or
xchg
fs
and
lods
jl
test
mov
pop
and
adc
pop
sbb
mov
in
jno
sahf
pushf
rcr
fcmovnb
xchg
mov
add
(bad)
aad
das
push
das
mov
add
adc
in
push
into
push
dec
fsub
sub
pop
pop
retf
mov
ret
lea
pop
rcl
nop
aad
pop
(bad)
xchg
loope
push
leave
nop
aad
fnstcw
shl
leave
nop
aad
xor
sub
fcmovnb
leave
fdivr
mov
rcl
stc
xchg
mov
addr16
sub
inc
adc
mov
daa
xor
push
jp
test
mov
scas
inc
cli
pop
out
adc
jo
dec
jl
adc
inc
in
in
ret
lods
inc
adc
dec
fucompp
mov
lea
inc
fs
stc
xchg
mov
addr16
mov
adc
scas
inc
dec
in
lods
inc
repz
out
inc
push
jns
popf
mov
inc
adc
inc
push
(bad)
lods
inc
push
jp
inc
sub
repz
add
add
std
mov
xor
pop
xor
fstp
adc
pop
rol
adc
add
ror
sub
in
xor
test
fdiv
pop
mov
add
jo
fidiv
mov
mov
xor
inc
jp
sti
pop
retf
pop
jl
push
fidivr
loop
push
or
stos
aam
shr
sub
bound
xor
and
xchg
outs
and
ret
(bad)
fcomp
pop
enter
add
rol
cmp
(bad)
imul
aad
cmp
cmp
xchg
inc
sar
and
ret
push
rcr
pop
pushf
out
rol
in
test
mov
arpl
sahf
add
rol
mov
jmp
sar
cmc
in
add
test
fmul
add
lods
fist
add
or
cld
jmp
(bad)
mov
sar
push
inc
or
xchg
call
inc
or
add
or
lahf
fdiv
int
cmp
mov
out
xor
push
rol
loopne
xor
jae
test
sbb
jae
cmp
or
pop
ret
cwde
mov
fisub
inc
sub
fldz
data16
cmp
xor
pop
adc
cmp
mov
popa
sub
test
cdq
cmps
and
mov
cmps
add
mov
cmps
loopne
mov
cmps
rcl
test
cdq
cmps
mov
xor
gs
add
dec
fwait
inc
cmp
pushf
ins
aam
and
(bad)
sbb
(bad)
pop
test
idiv
inc
cdq
xor
mov
cmps
loopne
cmp
sub
lea
sbb
les
mov
int
xor
lea
mov
pop
out
jns
(bad)
jns
xor
popa
mov
fmulp
test
dec
sar
addr16
cli
pop
mov
imul
(bad)
or
pop
movs
pusha
mov
cmps
int
xor
popa
inc
push
xchg
inc
adc
jns
cs
add
jp
sub
mov
cmps
mov
xor
push
jns
lds
(bad)
mov
adc
(bad)
in
mov
scas
fstp
or
cmps
add
jg
cmp
mov
sub
fadd
rcl
sbb
jb
and
retf
mov
test
cwde
call
(bad)
popf
test
ds
push
(bad)
jmp
cmp
lahf
popa
inc
jae
sub
fcom
cmc
fisttp
or
mov
jle
cmp
adc
inc
jae
popa
inc
jae
std
dec
test
dec
arpl
fcom
cmc
popf
inc
hlt
lahf
stos
dec
test
cwde
sbb
(bad)
lods
test
cmp
lods
and
cdq
jp
or
scas
add
fistp
ret
mov
or
jge
ror
pop
ins
cld
fst
arpl
adc
or
pop
fs
je
aam
pop
retf
xor
movs
xor
pop
jb
gs
cwde
hlt
xor
jmp
push
fs
xor
rcl
mov
enter
jae
leave
pop
je
sbb
jo
sbb
stos
cdq
add
pop
mov
retf
test
jmp
xor
ret
scas
out
xchg
ret
fistp
ror
loop
or
outs
xchg
(bad)
or
pop
cmp
out
jmp
and
lahf
test
jmp
pop
jmp
aam
not
mov
mov
daa
test
hlt
or
jmp
cmp
test
cmp
sub
mov
ret
adc
out
jmp
and
test
test
pop
test
arpl
xor
jnp
mov
rcl
jle
ss
pop
hlt
sub
shr
sbb
add
jmp
xchg
mov
mov
lds
mov
dec
sub
xor
xor
jno
or
xor
ror
mov
jmp
sub
daa
mov
push
lock
adc
inc
xor
retf
xchg
or
xor
add
xchg
mov
cwde
(bad)
push
(bad)
popa
imul
out
popa
retf
or
xor
mov
movs
xchg
dec
das
loopne
jb
ror
sub
icebp
jb
ror
xchg
mov
jbe
rcl
push
push
jge
jb
cwde
jne
sbb
ret
xchg
jno
ret
cdq
jno
xchg
call
fs
data16
cwde
aad
call
jns
jo
in
jp
lea
or
jbe
shr
(bad)
xchg
bound
pop
into
push
sub
jb
pusha
retf
scas
mov
ret
mov
dec
call
sub
cmp
ins
or
rcl
jns
jo
sub
retf
or
xor
icebp
jns
jo
test
xor
vsqrtss
shl
shr
or
leave
pop
inc
adc
into
je
dec
call
jo
jmp
sbb
inc
int
neg
cmp
or
loope
cmp
ret
mov
fnstenv
cmp
mov
adc
int
aam
movs
pop
(bad)
ffree
rcr
scas
xchg
sahf
scas
mov
aam
or
ret
sub
in
and
cmp
jnp
int
mov
mov
sbb
js
retf
add
adc
cmp
xor
lock
and
add
sahf
shl
ret
pop
dec
aaa
jmp
fcmovnbe
mov
(bad)
jl
add
jp
(bad)
cmp
xchg
cli
pop
cmp
aad
cmp
lock
dec
or
adc
xchg
pop
add
adc
int
xchg
pop
fsin
loop
inc
inc
hlt
fistp
add
lds
jp
mov
pop
inc
fistp
inc
sbb
jae
xor
pop
je
jecxz
test
cmp
ret
and
pusha
lds
add
add
sbb
shr
stc
jnp
xchg
jmp
add
pop
gs
xor
and
mov
cmpps
pop
ret
add
imul
add
cli
lea
add
or
add
fcmovne
add
xor
sbb
ror
adc
jmp
out
xor
xor
cmp
call
and
rol
sbb
push
xchg
retf
mov
jno
mov
in
mov
mov
pop
mov
in
mov
mov
pop
mov
in
adc
inc
data16
jne
aad
in
aaa
hlt
fld
or
movs
pop
xchg
pushf
int3
jne
and
push
in
lods
cld
in
push
mov
xlat
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
es
mov
or
out
cld
int
hlt
ins
add
dec
mov
and
dec
js
sub
das
outs
jbe
scas
mov
(bad)
mov
mov
into
outs
jbe
dec
js
sub
inc
xlat
je
mov
js
sub
das
outs
jbe
scas
bound
sub
outs
jbe
dec
js
sub
inc
xlat
je
or
jbe
dec
js
sub
das
outs
jbe
scas
and
sub
outs
jbe
dec
js
sub
dec
xlat
je
mov
jne
mov
es
out
es
not
jbe
mov
fisubr
pop
scas
into
xor
iret
inc
sub
sub
je
in
ss
dec
xlat
je
sbb
into
aam
mov
je
pop
scas
into
xor
iret
inc
sub
aad
xchg
dec
js
stos
mov
mov
dec
js
stos
mov
mov
mov
mov
inc
sub
lds
push
adc
hlt
cmovs
add
push
xor
dec
xlat
je
cmc
js
lods
mov
ins
sub
test
neg
sub
jbe
scas
push
inc
sub
out
push
cmps
in
es
test
mov
jbe
out
es
out
ss
mov
jbe
sbb
mov
mov
(bad)
and
scas
mov
sub
imul
gs
(bad)
xchg
inc
mov
fidivr
adc
jle
aad
xlat
pop
push
mov
pop
and
mov
and
cld
fild
pop
xor
das
mov
movs
jle
aad
xlat
neg
sub
and
mov
add
sub
das
fldcw
inc
sub
fldcw
xlat
je
dec
jo
and
mov
push
sub
in
or
xchg
lds
aad
xlat
out
es
out
es
out
ss
dec
xlat
je
inc
sub
data16
aad
sar
cmp
push
sub
pop
jmp
aas
inc
sub
aad
fnstsw
xor
shl
xor
mov
aad
pop
fs
fistp
sti
imul
mov
jg
and
leave
jecxz
mov
xchg
aaa
data16
mov
int
cmp
adc
xor
adc
mov
dec
pop
arpl
and
xchg
cmp
ins
mov
add
mov
in
sbb
inc
ret
pop
mov
push
adc
add
int
movs
ficomp
push
cmp
test
cmp
ret
test
xor
fcmovne
inc
cmp
and
shl
aas
xchg
cmp
mov
or
xchg
and
pop
pop
in
fcmovnbe
adc
add
sbb
sbb
inc
loopne
xchg
call
or
sub
jno
add
sbb
outs
fcmovne
test
aad
mov
popa
and
add
cmp
pop
add
xor
ret
and
sbb
and
inc
ret
outs
in
cli
cmps
repz
sub
push
aad
add
inc
push
and
jmp
inc
push
xor
leave
cmp
out
in
or
add
bound
xor
vpsrlq
jns
add
add
add
inc
mov
mov
arpl
inc
fwait
sub
mov
adc
adc
call
adc
adc
fld
leave
mov
push
add
retf
add
mov
or
jecxz
dec
jae
hlt
push
inc
inc
retf
mov
dec
jnp
mov
test
cmp
test
cmp
test
cmp
fild
add
test
xor
test
xor
fild
xchg
sub
test
sub
test
sub
fild
mov
test
and
test
and
fild
test
sbb
test
sbb
test
adc
test
adc
test
adc
test
adc
ret
pop
inc
xor
shl
shl
iret
stos
pop
pop
inc
and
sbb
adc
ret
cld
pop
nop
push
pop
jge
mov
mov
sar
dec
inc
fcomp
fadd
ds
jle
test
xor
ins
jo
test
jp
pop
xor
pop
xor
pop
xor
pop
xor
pop
cmp
mov
xor
ja
int
push
lods
dec
ret
lods
xor
ins
iret
inc
fistp
jl
xchg
push
inc
mov
fwait
jne
dec
rcr
mov
fistp
sbb
ror
int
int
sti
pop
sbb
ror
in
(bad)
stos
pop
pop
dec
adc
jmp
mov
pop
pop
inc
or
sahf
dec
dec
rcr
pushf
std
dec
int
retf
pop
inc
and
mov
pop
stos
pop
movs
in
test
jns
cli
dec
pop
adc
push
bound
test
hlt
adc
ja
mov
xor
out
and
div
pop
fidivr
jg
sbb
mov
inc
pop
rcr
push
push
or
imul
fmulp
test
sbb
and
sbb
push
xor
mov
mov
xchg
scas
adc
retf
pop
stos
jmp
ins
mov
call
jmp
(bad)
xor
cmc
dec
or
or
fmul
shl
int
mov
das
sbb
out
push
cmps
push
shl
inc
or
dec
mov
pop
shl
inc
outs
fimul
xchg
clc
(bad)
push
mov
push
cmp
cmps
add
shl
add
scas
inc
or
scas
call
ss
pop
inc
mov
xor
add
shl
cmps
adc
das
rcr
xchg
inc
in
sbb
jbe
call
xchg
ficom
dec
ss
push
adc
ficom
push
stc
and
adc
loop
add
cmc
mov
jbe
out
push
(bad)
lods
imul
adc
xchg
out
sub
adc
aas
(bad)
sbb
pop
clc
jg
pop
or
xchg
aam
fisub
aad
fild
jne
into
and
mov
aam
sub
push
test
daa
fbld
stc
lock
fucomip
(bad)
cmp
out
enter
sub
mov
adc
fisub
xchg
mov
aam
sub
push
in
add
scas
xor
xlat
and
lock
sti
push
xchg
and
in
sub
in
ins
sub
icebp
retf
icebp
fbld
aad
fdivr
ret
and
int
stc
(bad)
rcr
out
xor
retf
in
out
push
inc
and
push
adc
sub
push
icebp
inc
sti
fdivr
neg
fisub
(bad)
push
xor
push
stos
cmc
mov
xor
iret
mov
ss
cmps
push
lahf
xchg
mov
cmp
cmp
aas
(bad)
and
sub
(bad)
xor
and
aaa
cmc
mov
sti
out
pop
add
xor
paddb
jnp
push
pop
mov
outs
or
mov
loopne
mov
jmp
mov
xor
sbb
mov
or
out
inc
and
cmp
adc
nop
adc
mov
xchg
mov
jmp
xor
or
retf
sbb
xchg
sbb
adc
jmp
jg
jmp
sbb
fild
lods
movzx
or
sub
add
ficom
aaa
cmc
mov
xchg
add
pop
sub
sub
inc
push
in
pop
cmps
ins
fsub
mov
pop
or
adc
dec
or
fimul
rcl
add
fcomp
cmc
mov
into
jne
or
idiv
or
cdq
jb
cmc
retf
jmp
mov
sbb
cmp
push
dec
retf
adc
xor
mov
add
inc
push
xchg
jp
mov
bnd
int3
lods
pop
lds
pop
cmp
pop
cmps
pusha
jno
mov
popa
fld
pusha
iret
adc
lds
mov
ja
imul
pusha
lds
dec
cmp
add
jbe
mov
cmps
fs
pop
test
lds
pusha
lds
mov
pusha
lds
mov
mov
movs
mov
into
lds
mov
(bad)
loope
mov
ret
mov
popa
inc
push
mov
ret
cmp
icebp
(bad)
pusha
push
pop
xor
pop
mov
or
add
stos
pusha
lds
imul
xchg
or
lds
mov
icebp
lds
mov
in
adc
ret
cmps
pusha
push
push
push
dec
lds
mov
xlat
add
ins
lea
mov
ret
scas
xchg
shl
shl
pusha
(bad)
pusha
iret
cmps
cdq
and
(bad)
leave
stos
(bad)
pusha
ret
scas
lds
mov
popf
les
scas
xchg
int
mov
shl
pusha
lds
and
enter
(bad)
cmp
pop
cmps
mov
cmps
or
mov
sbb
popa
xor
(bad)
pusha
gs
push
(bad)
imul
add
out
cmp
pop
scas
mov
cmps
cmp
dec
les
mov
cmp
bt
ds
lds
or
sar
data16
les
pusha
gs
mov
rol
mov
pusha
cmp
call
or
jne
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
hlt
gs
hlt
jge
in
mov
movs
hlt
and
mov
hlt
xor
jmp
hlt
jne
mov
jne
xor
cmc
mov
fprem1
mov
xor
cmc
mov
xor
hlt
stc
jmp
hlt
std
jmp
hlt
std
jmp
hlt
lods
jmp
hlt
test
and
mov
xor
pop
mov
xor
mov
mov
test
adc
jmp
mov
out
xor
jbe
dec
call
sbb
clc
mov
out
and
dec
xchg
mov
leave
ss
and
pop
cmps
add
dec
mov
add
cmp
and
pop
mov
push
mov
stc
xor
mov
or
and
xchg
cmps
mov
xor
and
mov
cmps
push
arpl
push
pop
ins
jb
pop
sbb
push
add
movs
leave
or
push
cmp
mov
sub
dec
lods
sub
sub
in
adc
aaa
cmc
mov
icebp
xchg
outs
pop
sub
cmc
adc
hlt
adc
cmc
pop
dec
dec
ret
dec
jmp
fild
retf
pop
push
aaa
mov
das
jmp
xlat
fnstenv
sbb
int3
inc
pop
das
xor
jmp
xor
sbb
push
cmps
cmp
inc
jmp
out
pop
sahf
imul
popa
xchg
cmp
ja
(bad)
adc
adc
pop
xchg
jmp
inc
mov
call
adc
neg
push
fist
adc
aaa
xor
add
out
cmps
add
jbe
inc
retf
out
cmp
inc
xor
out
sbb
push
inc
ss
mov
sub
adc
enter
call
sbb
cdq
dec
call
ins
ret
sbb
aas
call
mov
clc
loop
sub
(bad)
fcmovne
nop
add
xchg
inc
pop
imul
jp
add
xchg
push
rcl
enter
outs
rcl
leave
add
pop
push
ret
cmc
outs
mov
adc
enter
cmp
mov
aaa
stc
inc
out
cdq
cmc
mov
loopne
mov
pusha
aaa
hlt
inc
cli
aas
cmc
mov
jno
mov
call
add
aas
xchg
xor
sub
pop
dec
call
push
xor
mov
mov
mov
jle
stc
xor
or
push
shl
jnp
in
push
shr
adc
or
add
leave
or
pop
sub
or
hlt
inc
mov
cmc
pop
dec
mov
cmc
mov
xchg
call
fwait
push
push
mov
jmp
call
xor
cmc
mov
cs
pop
or
jle
adc
xchg
loop
out
xor
repnz
jle
nop
out
push
cmp
mov
sbb
mov
mov
and
movs
or
inc
and
pop
add
movs
cmp
fwait
(bad)
lods
add
jno
js
inc
pop
sub
push
adc
sbb
sbb
cmp
mov
sbb
lods
adc
cmps
xchg
shl
inc
lahf
fadd
cmp
retf
or
or
sahf
mov
call
fwait
into
pop
and
das
pop
jmp
sub
int
mov
ficomp
ds
mov
sbb
sub
call
sbb
adc
aas
push
push
(bad)
push
pop
out
mov
loopne
rcl
add
lods
ficom
or
push
aas
imul
inc
mov
sbb
leave
jmp
push
sbb
call
sahf
mov
push
rol
sub
test
or
(bad)
mov
loop
xchg
inc
out
cdq
cmc
mov
loop
shr
cmc
mov
xor
cmc
mov
xor
and
std
xor
pop
mov
xor
inc
sar
xchg
jmp
dec
mov
sub
and
xor
cmc
xor
cmp
xor
shl
(bad)
aaa
cmc
mov
loopne
or
dec
mov
cmp
in
stc
xor
in
inc
aam
iret
stos
cmps
jmp
sbb
sbb
sbb
mov
fisubr
daa
aam
adc
sbb
pushf
(bad)
enter
adc
cmp
pop
out
cld
clc
push
cmp
cmps
jmp
xor
dec
mov
cmp
cmp
div
mov
pop
dec
cmps
adc
retf
pop
out
mov
daa
jmp
aaa
xchg
jmp
add
inc
pop
clc
in
pop
inc
push
pusha
push
jmp
adc
cmc
mov
jg
and
div
fxch
(bad)
out
pop
mov
sub
jg
ret
pop
enter
push
xor
mov
pop
in
push
cmp
sbb
inc
xchg
or
add
cmps
lods
lock
lea
in
or
shl
popa
or
mov
sbb
loope
ret
into
lods
push
(bad)
pop
sbb
xchg
out
inc
cmp
lods
cs
movnti
hlt
pop
inc
sbb
sbb
xor
scas
enter
add
rcr
sahf
adc
leave
xchg
pushf
(bad)
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
cld
xchg
loopne
enter
enter
rcr
xchg
inc
push
test
xor
pushf
xlat
sub
lahf
(bad)
enter
enter
shr
adc
imul
leave
sahf
dec
imul
ins
(bad)
enter
mov
pushf
xlat
xor
pop
(bad)
leave
mov
int3
push
xchg
adc
mov
les
xchg
fisubr
xchg
dec
jae
cmp
xlat
test
lahf
sub
imul
sahf
fwait
popa
lahf
retf
and
leave
test
pop
adc
push
pop
(bad)
leave
xchg
mov
rcr
leave
push
das
aaa
xchg
adc
mov
retf
or
div
popa
sbb
xor
fldenv
cld
adc
cmc
mov
cmp
cmps
push
sub
and
xor
cmc
sbb
movs
enter
cmc
mov
and
dec
mov
sbb
jecxz
hlt
rol
cmc
loope
xchg
inc
out
cdq
cmc
mov
loop
shr
cmc
mov
xor
cmc
mov
xor
and
jmp
pop
mov
xor
inc
push
jl
hlt
xchg
jmp
cmp
and
loop
jmp
xor
cmp
xor
shl
(bad)
aaa
cmc
mov
loopne
jg
xor
ds
lea
or
(bad)
xor
js
adc
pop
cmps
sbb
bnd
stos
ja
cmp
dec
jmp
push
push
and
cmc
mov
mul
dec
and
adc
add
fnsave
pop
enter
or
fincstp
mov
cmp
mov
mov
xchg
add
aaa
cmc
mov
loope
mov
fist
imul
sbb
lods
push
jbe
xor
ss
mov
add
movs
pop
inc
retf
jmp
ss
pop
or
mov
mov
fwait
inc
mov
jmp
push
pop
loope
pop
inc
cli
cmc
inc
stc
in
stc
push
add
pop
inc
ficomp
imul
(bad)
mov
fistp
jmp
cmp
stc
and
call
sub
imul
ret
mov
retf
pop
retf
or
adc
push
std
xchg
pop
adc
retf
jmp
add
ss
es
or
push
cmp
push
mov
xchg
dec
adc
leave
or
and
sbb
sbb
sar
mov
xor
jmp
loopne
adc
retf
or
mov
or
sub
mov
cmp
imul
inc
adc
sbb
rcl
je
cmp
push
mov
loop
test
cmp
adc
mov
mov
cdq
pop
sub
jg
jle
push
enter
cwde
popf
pop
shl
adc
push
repz
(bad)
hlt
mov
outs
or
dec
adc
sub
sbb
cmps
adc
add
mov
dec
fsub
fist
in
std
pop
push
fsub
push
dec
push
xor
or
xor
pop
push
mov
mov
std
cdq
bound
jmp
and
movs
enter
cmc
mov
es
jmp
mov
xor
sahf
jmp
mov
(bad)
push
mov
mov
cmp
loop
mov
jmp
mov
xor
shl
loop
mov
and
jmp
add
jecxz
mov
mov
jmp
mov
xor
mov
int3
jg
pop
lods
and
loope
mov
xor
cmc
mov
sbb
(bad)
out
aaa
hlt
xor
and
inc
shl
xor
mov
and
sbb
jo
add
or
dec
xor
fsub
adc
jmp
cmc
pop
push
dec
div
aas
mov
add
ret
sub
enter
or
cmp
mov
cmp
(bad)
loop
jmp
ret
add
pop
fidiv
int3
aaa
ins
(bad)
xor
jae
add
jmp
test
leave
mov
jmp
push
add
cmc
sbb
cmp
pop
outs
inc
aaa
(bad)
cmp
cmps
jmp
idiv
out
idiv
sbb
and
xchg
data16
ss
shl
inc
ss
mov
dec
pop
ja
loope
sbb
cmp
mov
outs
pop
jle
(bad)
mov
(bad)
inc
out
pop
mov
sbb
sbb
aad
mov
popa
or
push
inc
retf
dec
ss
pop
add
push
jmp
mov
xor
or
add
pop
mov
dec
fsub
aas
sub
sbb
jno
not
add
or
cmp
pop
icebp
int3
cmp
xchg
sbb
retf
push
repz
jp
fsubr
sub
(bad)
pop
(bad)
ret
(bad)
bound
mov
or
in
lahf
sahf
push
out
cli
out
or
out
inc
sbb
pop
or
sub
pop
jo
or
inc
sub
pop
call
sub
mov
call
jg
push
int3
pop
or
inc
mov
adc
xor
rcr
loopne
pop
push
inc
ror
push
adc
pop
sub
xchg
adc
icebp
mov
pop
xor
adc
fdiv
xchg
psubb
pop
fdiv
xchg
aas
clc
sub
cmp
pop
aaa
or
inc
sub
mov
and
push
dec
ss
sbb
clc
fadd
push
test
sahf
inc
adc
ficom
push
inc
call
(bad)
push
sub
in
ror
xchg
sub
mov
mov
call
xor
hlt
sbb
sahf
or
call
inc
xor
hlt
xor
jmp
mov
aaa
cmc
mov
movs
fs
jmp
mov
jmp
and
xlat
fisub
jns
stc
cmps
sbb
jl
hlt
cdq
jmp
and
jmp
mov
xor
cmc
mov
shl
popf
hlt
sbb
inc
xor
mov
aaa
or
mul
mov
and
mov
aaa
stc
loop
xchg
inc
out
jmp
clc
adc
adc
mov
and
cmp
push
or
outs
push
inc
or
call
pop
mov
pusha
int
jmp
out
mov
mov
jge
mov
retf
leave
or
or
cmp
jmp
sub
xor
xor
mov
pop
push
xchg
cmp
sub
mov
aas
hlt
xor
inc
cld
xchg
jmp
pop
jmp
mov
dec
ss
mov
ins
sar
push
ss
mov
not
cli
ins
jmp
mov
out
push
ss
popa
loop
push
xchg
xor
xor
sub
cld
retf
or
(bad)
xor
dec
mov
jmp
pop
mov
xchg
fdivp
pop
aaa
shl
int
or
add
leave
repnz
xchg
shl
mov
dec
shl
shl
bound
add
dec
push
add
mov
cmc
mov
fidivr
adc
sbb
jnp
pop
sbb
mov
loope
mov
or
jmp
dec
or
cmp
mov
inc
sbb
pushf
or
(bad)
cmp
cmps
jmp
xor
sub
xchg
push
inc
stc
xor
xor
retf
or
in
sti
jmp
and
or
shl
mov
ret
std
cdq
jbe
jmp
adc
jmp
rcl
fwait
retf
lods
add
das
pop
dec
pusha
xchg
out
adc
out
pop
jmp
sbb
lods
fistp
iret
rcr
xchg
sbb
retf
add
jmp
in
pop
out
shl
popa
mov
(bad)
cli
pop
inc
mov
push
pusha
or
pop
inc
fisubr
push
ror
mov
xchg
fld
cmp
bound
inc
mov
fimul
mov
pop
es
jmp
lods
or
sbb
pop
xor
test
retf
aas
lea
or
sti
mov
neg
push
aas
dec
push
sub
xor
mov
dec
add
int
gs
popa
in
gs
popa
in
gs
popa
in
inc
lea
gs
inc
push
icebp
lea
and
inc
lea
cmp
jne
inc
jp
fs
in
gs
jg
loope
cmp
pop
pushf
cmp
mov
gs
imul
mov
popa
shl
xchg
jbe
jns
popa
in
call
in
xchg
mov
cmps
int
cmp
js
adc
outs
in
bound
jne
mov
popa
fsub
jle
jns
popa
in
gs
jo
jle
popa
lock
popa
in
push
(bad)
jge
gs
popa
in
gs
jp
pop
(bad)
popa
in
je
cmp
into
rcr
xchg
jns
dec
mov
popa
in
popa
mov
pop
add
xchg
popa
lods
add
pop
add
xchg
jns
dec
aaa
jns
push
sub
pop
add
hlt
xor
(bad)
popa
in
es
ja
xchg
jo
cs
dec
imul
and
lds
arpl
fs
ins
inc
fs
fs
fwait
mov
call
mov
pop
ins
(bad)
shl
imul
fs
push
in
das
xor
xor
adc
out
add
adc
inc
cli
ins
cs
(bad)
shl
mov
cdq
mov
jmp
pop
cmp
mov
ins
pop
cmp
cli
dec
mov
add
mov
and
imul
(bad)
int
jb
loop
fbld
push
(bad)
leave
in
and
pushf
cmp
jno
fs
jmp
bound
ins
cs
sub
mov
cmp
(bad)
jne
(bad)
shl
addr16
ins
cs
and
rcr
inc
and
ins
push
ds
push
push
mov
and
gs
pop
call
out
xchg
into
aam
sub
push
int3
inc
fidivr
mov
gs
popa
in
je
jge
gs
popa
in
gs
jp
jns
popa
in
gs
push
in
jle
popa
lock
popa
in
cmp
and
lods
xor
dec
mov
jge
inc
lea
inc
out
gs
lods
add
pop
add
lahf
gs
lods
add
jge
inc
push
jl
dec
js
mov
les
push
in
das
xor
call
adc
es
jns
push
sbb
data16
test
rcr
xchg
jae
and
sbb
dec
lds
in
vprotq
sahf
scas
outs
ficomp
cmp
sahf
adc
jb
int3
inc
mov
ins
out
imul
popa
cmp
mov
in
xchg
test
push
outs
pusha
js
pop
sub
fs
popa
js
xchg
(bad)
std
std
mov
in
gs
(bad)
int
mov
in
retf
adc
push
ror
call
fnstenv
outs
and
fs
xor
test
fs
fs
popa
js
pop
inc
call
imul
popa
cmp
jo
scas
outs
fcmove
mov
push
mov
scas
outs
fcmove
mov
bound
adc
dec
fdiv
outs
and
fs
aaa
out
das
pusha
in
cdq
mov
in
call
mov
icebp
sbb
popa
and
dec
lea
cmc
push
lock
gs
in
ja
popa
loopne
lahf
in
fs
popa
in
pop
and
gs
popa
in
test
in
repz
pusha
shl
pop
pusha
call
pop
imul
arpl
out
(bad)
clc
mov
call
lds
in
call
or
retf
or
xor
xor
cmc
adc
jmp
pop
popf
enter
cmp
mov
sbb
sub
cmc
mov
in
jmp
jmp
cmps
add
addr16
xor
stos
and
push
mov
add
cmp
int3
pop
push
pop
dec
push
cmps
dec
jmp
jmp
addr16
shl
rol
test
fist
mov
call
lock
mov
imul
jmp
out
jmp
push
cmp
(bad)
call
jmp
cmps
sbb
jae
cmp
cmps
repz
pop
scas
pop
fld
adc
pop
xchg
sbb
pop
into
fcomp
push
cmp
mov
pop
sbb
or
and
push
add
xchg
xchg
mov
aaa
sbb
cmp
sbb
fisttp
retf
xor
adc
retf
add
cmc
mov
push
nop
push
cdq
jmp
rcl
cld
leave
or
retf
cmc
mov
and
dec
push
enter
inc
sbb
sbb
fnstcw
push
in
pop
bound
out
dec
push
dec
mov
pop
or
shl
mov
ss
sbb
cmp
adc
cmp
or
or
adc
cwde
jp
inc
inc
cli
pop
fnstsw
jg
jae
dec
add
xchg
xor
jb
push
div
mov
mov
ja
(bad)
les
(bad)
les
(bad)
les
aam
xor
add
add
les
add
(bad)
loopne
sbb
lds
add
les
xlat
inc
int
ffreep
xor
xchg
xlat
les
repnz
xor
(bad)
les
add
sub
adc
cmc
aad
and
lds
and
sub
sub
(bad)
xor
xlat
ins
xor
add
jle
xchg
cli
aad
xor
add
enter
ds
es
add
mov
in
loopne
sar
enter
arpl
test
xor
out
clc
or
rol
xor
xor
or
shl
xor
(bad)
les
xor
leave
(bad)
enter
xchg
sbb
les
ret
add
aad
xor
cwde
sub
clc
test
xor
vpsubb
sub
xchg
in
mov
cs
sbb
(bad)
xor
aam
aas
adc
inc
sub
(bad)
xor
aam
xor
in
cmp
push
sub
mov
mov
jo
cmp
xor
clc
in
aaa
mov
dec
(bad)
xor
shl
in
iret
les
leave
(bad)
enter
xchg
add
les
and
cld
adc
shl
add
int3
xor
jbe
and
xlat
test
fist
xchg
or
adc
loop
loopne
mov
retf
and
clc
mov
shl
(bad)
adc
scas
in
shl
pushf
add
sti
leave
(bad)
enter
fwait
xor
rcr
add
jne
and
and
dec
rcl
mov
lock
icebp
and
xchg
ins
xor
add
fidiv
inc
repnz
loopne
stc
rol
test
imul
jno
ret
adc
push
add
ds
fidiv
push
rol
loope
cld
mov
arpl
or
pop
ret
add
les
jp
cwde
sbb
rol
or
push
aaa
in
cmp
push
sub
enter
jecxz
sub
cwde
stos
retf
add
lds
xchg
xlat
les
cmp
add
les
(bad)
enter
fldenv
add
lds
adc
push
or
les
fcom
cmps
add
(bad)
call
xor
sub
jbe
loopne
(bad)
fs
(bad)
les
add
xchg
adc
add
add
adc
pusha
adc
(bad)
pop
cmp
jne
(bad)
jmp
dec
stos
fs
lds
test
and
sbb
push
fnstenv
jmp
cmps
mov
mov
or
pop
mov
push
stc
push
jmp
rcr
sahf
pusha
push
sbb
mov
jecxz
jnp
jne
mov
cmp
xor
popf
hlt
sbb
or
hlt
mov
iret
aad
popw
sahf
hlt
cmc
loopne
mov
(bad)
jmp
hlt
sbb
push
ss
mov
pusha
fucom
retf
xor
not
in
les
mov
fldenv
jecxz
cmc
rol
cmc
loope
test
mov
adc
push
neg
pop
mov
in
xchg
repnz
mov
stc
pop
push
mov
cwde
mov
lea
dec
retf
jne
bound
retf
cmp
push
push
cmp
or
cld
adc
cdq
jmp
mov
loopne
dec
fwait
mov
bound
retf
cmp
jne
cmps
jecxz
cmc
rol
cmc
loope
test
mov
sbb
xor
cdq
push
add
movs
gs
xchg
ret
xor
stc
pop
push
push
and
dec
jmp
cmps
mov
jmp
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
aaa
cmc
loope
test
fbstp
hlt
adc
jmp
in
jmp
call
dec
mov
hlt
adc
jmp
stc
movs
jmp
sub
xor
cmc
mov
cmc
pop
mov
xchg
fsub
xor
adc
adc
cmp
mov
cli
or
jns
hlt
adc
jmp
cmps
dec
pusha
fadd
jmp
in
jmp
pop
mov
ja
hlt
adc
jmp
in
adc
leave
jmp
xor
mov
test
xor
inc
xor
cmc
adc
jmp
in
jmp
js
adc
push
ss
or
dec
xor
mov
xchg
push
inc
jmp
ss
rol
cmc
loope
test
shl
hlt
adc
jmp
in
jmp
sub
stc
ss
adc
jmp
cmp
in
push
sub
xor
cmc
mov
cmc
pop
mov
xchg
sbb
daa
xor
hlt
mov
out
or
cli
cmp
jns
xor
mov
or
test
ret
jmp
cmps
dec
(bad)
fadd
jmp
mov
jmp
cmc
sbb
jecxz
hlt
rol
cmc
loope
test
cdq
cmp
adc
jmp
jns
jmp
mov
pusha
in
jecxz
xor
mov
mov
xor
hlt
mov
xor
mov
aaa
or
sahf
pusha
push
sub
lods
repnz
pusha
das
xor
hlt
mov
xchg
in
mov
xchg
push
inc
test
lock
xor
hlt
mov
push
jmp
test
imul
or
xor
cmc
mov
xor
cmc
mov
xor
fadd
cmp
mov
jle
jmp
aaa
cmc
mov
adc
out
mov
lock
dec
jnp
hlt
in
jmp
and
sbb
fldenv
sub
push
jmp
sbb
xchg
ret
xor
jae
xor
hlt
mov
test
mov
mov
ins
aaa
and
mov
popf
les
std
xor
test
jmp
test
jmp
and
movs
enter
cmc
mov
es
jmp
sbb
movs
enter
cmc
mov
and
cdq
cmp
fisub
in
cmp
je
loop
adc
loopne
dec
out
ss
inc
jl
or
jmp
mov
xor
cmc
mov
xor
fadd
cmp
mov
jle
jmp
aaa
cmc
mov
adc
out
mov
hlt
mov
cmp
hlt
in
jmp
and
sbb
fldenv
sub
shr
hlt
mov
xor
push
pop
div
jecxz
xor
hlt
mov
test
mov
retf
mov
mov
ins
aaa
and
mov
popf
les
std
xor
test
jmp
test
jmp
and
movs
enter
cmc
mov
es
jmp
sbb
movs
enter
cmc
mov
and
cdq
cmp
fisub
in
cmp
je
loop
adc
loopne
dec
out
ss
inc
jl
or
aad
fadd
(bad)
mov
loopne
cmp
jmp
pop
cs
mov
adc
inc
jmp
loope
aaa
ss
popa
jmp
jecxz
es
cmp
jmp
mov
sbb
fisub
shl
hlt
popa
out
arpl
retf
mov
mov
sbb
into
daa
leave
jno
and
jmp
xchg
loop
xor
stc
mov
mov
stc
cli
mov
(bad)
sbb
xchg
repnz
jl
mov
cmps
lds
pop
jmp
xor
cld
cmps
lds
pop
jmp
xor
cld
cmps
in
fadd
std
test
test
into
aaa
leave
jno
and
in
adc
xchg
cli
xor
mov
xor
(bad)
(bad)
std
shr
jmp
imul
ds
cdq
cld
mov
adc
jl
cmc
cdq
jmp
mov
push
push
xlat
shl
aad
mov
xor
and
cmp
cmc
mov
and
mov
sbb
std
xchg
jne
jmp
xchg
(bad)
xor
push
push
push
and
mov
push
push
idiv
xor
xchg
call
mov
cmp
mov
sbb
hlt
mov
es
mov
and
jno
and
(bad)
(bad)
or
into
arpl
mov
and
jmp
shl
and
cmp
cmp
std
and
xchg
cli
mov
fldenv
ss
mov
cli
repnz
xor
les
cmp
mov
sbb
mov
lea
(bad)
jmp
xor
and
ins
jmp
mov
mov
leave
mov
jl
cmc
cdq
jmp
adc
into
fisub
sub
cmc
popa
fcom
out
cdq
lds
inc
push
int3
jecxz
push
push
cdq
cmc
mov
and
gs
retf
and
xor
mov
sbb
int3
pop
cmc
push
push
cdq
cmc
mov
and
gs
retf
and
mov
fsub
cmp
mov
(bad)
scas
jmp
out
jns
fincstp
mov
aaa
sub
pop
pop
mov
call
xor
mov
sbb
xor
in
dec
mov
leave
mov
popf
xor
and
(bad)
mov
jge
mov
adc
xor
repnz
in
test
(bad)
xor
and
push
ss
push
push
jmp
je
or
sub
mov
sbb
cmp
cmc
cdq
jmp
sbb
jecxz
adc
aaa
xlat
mul
retf
dec
jecxz
adc
ja
mul
aad
mov
xor
and
sbb
inc
and
hlt
push
push
push
and
mov
(bad)
jmp
cdq
jmp
pop
cs
mov
adc
inc
cmp
adc
jmp
sbb
loopne
adc
jae
mul
retf
jmp
aaa
cmc
mov
(bad)
mul
retf
sub
aam
out
cmc
mov
(bad)
mul
retf
imul
cmc
mov
xlat
mul
retf
test
aaa
cmc
mov
xlat
mul
aad
mov
xor
and
sbb
iret
add
div
retf
xor
jecxz
add
cmp
mov
jmp
retf
int
arpl
sbb
test
das
and
mov
inc
cld
xchg
neg
and
xor
cmc
rol
cmc
loope
test
arpl
sub
mov
ss
rol
cmc
loope
test
pop
lds
add
xor
hlt
mov
xchg
icebp
mov
cdq
out
and
hlt
mov
push
sub
rdtsc
aas
jbe
cmp
pop
dec
ds
jmp
push
adc
adc
adc
mov
cld
into
mov
aaa
sbb
inc
aad
jb
adc
leave
push
cmps
in
cmc
dec
or
hlt
mov
retf
rcr
in
out
pop
ds
out
in
sti
push
mov
cwde
mov
inc
out
pop
sub
dec
inc
add
mov
mov
idiv
cmp
cmps
sbb
cwde
ret
aaa
cmc
mov
std
cmps
in
call
adc
cmc
pop
inc
cli
fwait
inc
xchg
push
sbb
cmp
mov
(bad)
sbb
retf
scas
fild
push
mov
loop
std
cdq
pop
stos
jmp
fidiv
fcomp
fsubrp
imul
daa
or
hlt
mov
inc
retf
jmp
sbb
rcr
mov
ss
adc
retf
out
pop
scas
mov
cmps
mov
int
adc
fsub
push
mov
retf
rcr
and
outs
jge
jno
ret
mov
xchg
jge
push
outs
xor
into
(bad)
push
dec
ins
imul
cdq
js
stos
mov
(bad)
ins
push
imul
gs
outs
xor
xor
push
lahf
sub
mov
outs
fnstcw
outs
pop
idiv
ins
mov
xor
ins
vmovd
xor
jbe
fwait
jmp
mov
xor
fadd
std
test
mov
ss
mov
cmp
xor
xor
mov
sub
mov
jg
mov
adc
xor
or
ss
mov
jmp
cmc
and
div
ins
xor
push
xor
sub
retf
jmp
push
add
pop
add
repnz
xor
movs
pop
sub
jmp
mov
retf
or
adc
or
out
cmc
mov
fcom
out
ss
pop
dec
dec
xor
xchg
div
dec
ss
mov
(bad)
loop
jmp
call
lods
ss
sbb
sar
mov
xor
sub
cmp
mov
cmp
pop
inc
inc
jmp
push
aam
dec
pop
inc
inc
imul
fst
test
icebp
inc
jmp
dec
push
or
mov
jmp
jmp
sbb
mov
std
cmp
sbb
cmc
in
sbb
cmp
mov
jmp
xor
scas
add
pop
xchg
(bad)
loop
add
hlt
mov
inc
xor
imul
adc
adc
retf
push
jmp
mov
retf
xchg
pop
sub
or
mov
fisttp
adc
mov
stos
add
repnz
mov
xor
or
inc
cs
adc
xor
cmps
in
in
pop
add
and
imul
enter
das
pop
repnz
scas
push
imul
lock
(bad)
pop
mov
sub
repz
xor
mov
ins
pop
repnz
sub
movs
xchg
jge
repz
sub
jns
stos
cli
jge
mov
sub
dec
(bad)
mov
ds
repnz
repz
pushf
out
pop
pop
repz
sub
pop
repz
lods
mov
retf
clc
(bad)
cmp
je
loop
cdq
jmp
jns
xor
test
jmp
sbb
sbb
pop
jl
ficomp
imul
or
add
cmc
mov
popa
aas
fs
ficomp
jg
add
mov
repz
jae
enter
cmp
(bad)
sub
push
mov
aaa
sbb
add
cmc
mov
or
inc
xor
loopne
pop
push
cmp
inc
sbb
sub
cs
sbb
lds
fdivr
xor
jmp
xchg
jb
mov
gs
scas
mov
push
mov
fistp
adc
stc
in
sbb
out
cmps
stc
and
adc
fidiv
push
or
and
inc
out
inc
div
cmp
jmp
adc
enter
(bad)
adc
pop
stos
jmp
mov
or
adc
adc
push
dec
call
jl
pop
pop
inc
push
in
inc
pop
xor
sbb
sub
shl
bound
mov
aas
stos
jl
hlt
pop
out
aaa
push
mov
cld
test
mov
dec
push
cld
xor
fldcw
daa
inc
lahf
add
lods
(bad)
cmps
push
pop
mov
or
mov
push
loope
test
push
xchg
cmp
mov
add
mov
movs
xchg
sti
push
cli
jle
call
or
jbe
mov
stc
mov
shl
hlt
mov
loope
mov
popa
mov
jmp
repnz
out
or
sub
xor
jecxz
mov
(bad)
sbb
push
jmp
push
mov
xor
push
push
fnstenv
aas
sbb
sub
jns
movs
adc
leave
push
fimul
cmc
mov
mov
sbb
cmp
call
aaa
cmc
pop
add
outs
xchg
repnz
not
aaa
cmc
pop
inc
mov
push
sbb
jb
cmp
cmps
push
mov
not
adc
icebp
mov
xor
pop
aad
hlt
sbb
cmp
mov
adc
pop
dec
aaa
pop
sahf
adc
fisubr
or
pop
out
jmp
cmps
stc
mov
ds
jne
push
adc
or
addr16
mov
xor
adc
xchg
or
sbb
aam
sbb
(bad)
cmp
cmps
adc
leave
sbb
add
sti
pop
add
retf
sub
aas
fisub
dec
mov
push
or
(bad)
mov
jp
out
push
sti
dec
retf
push
int3
retf
push
test
jge
test
jge
mov
mov
call
xchg
cld
(bad)
or
stc
xchg
xor
mov
ins
jl
test
and
in
or
stc
push
rol
mov
test
or
in
and
out
cmp
or
adc
enter
ss
adc
stc
mov
cmc
mov
xor
and
push
mov
xor
mov
dec
ds
mov
and
jne
jmp
mov
cmp
or
ret
stc
xor
add
mov
out
pop
sub
xor
fcomp
mov
je
push
out
aaa
cmc
mov
jmp
pop
jo
add
sbb
fdiv
enter
arpl
retf
or
out
cmc
mov
shl
mov
cmp
push
dec
dec
data16
mov
sub
mov
cmp
jmp
cmps
mov
cdq
sbb
cmp
pop
(bad)
fstp
call
aaa
cmc
pop
add
mov
push
out
xor
or
bndldx
push
sbb
adc
push
test
adc
inc
faddp
inc
inc
and
lods
stc
sbb
adc
loopne
out
inc
outs
push
inc
stc
test
scas
inc
cmp
aas
neg
push
add
cmc
mov
jmp
sub
sbb
scas
or
pop
or
ficomp
std
inc
ret
stc
adc
sub
xchg
mov
stos
js
adc
fisttp
retf
or
mov
retf
lods
lods
rcr
and
daa
test
popa
push
in
sub
bnd
ret
lock
push
in
xor
dec
jne
mov
cld
cs
repz
popa
push
ja
cmps
mov
in
lahf
je
xor
out
mov
xor
loope
cmp
mov
(bad)
icebp
mov
cdq
out
and
hlt
mov
and
jg
aas
pop
fsubr
pop
add
mov
pop
aaa
cs
jg
sbb
cli
mov
sbb
jmp
fisttp
test
cmp
adc
retf
pop
xchg
sbb
xchg
or
or
(bad)
or
leave
sbb
iret
or
dec
ss
mov
sub
jae
call
xor
pop
inc
sub
and
push
dec
ret
inc
(bad)
(bad)
pop
mov
push
mov
(bad)
fld
mov
jmp
and
mov
jbe
mov
xchg
(bad)
mov
aaa
pop
inc
sbb
in
sbb
cmp
xlat
inc
xor
pop
inc
cmps
push
ins
sub
dec
inc
(bad)
hlt
mov
or
pop
inc
jmp
pop
fwait
not
push
cmp
mov
neg
daa
cmc
test
sbb
cli
in
mov
or
fidivr
or
or
stc
mov
scas
dec
cmp
adc
cmp
mov
(bad)
sbb
pop
mov
sbb
aaa
icebp
jg
stos
xor
sbb
dec
push
add
jge
sbb
cmp
push
or
add
mov
cmc
push
adc
and
adc
jl
(bad)
adc
cld
lods
add
push
adc
je
mov
mov
jmp
xchg
add
jmp
lock
dec
add
adc
out
mov
in
arpl
pop
jmp
mov
shr
out
or
pop
stc
xor
cmps
cmp
xor
sbb
add
rol
bnd
cmp
dec
jmp
jg
push
sub
(bad)
adc
xchg
xor
cmp
pop
mov
ret
pop
xor
sub
sub
loope
not
mov
rcl
fsqrt
push
jmp
xor
dec
push
jmp
push
data16
loope
xor
jae
lea
sbb
dec
xchg
sub
fdivr
inc
add
xor
inc
cmp
cmps
in
pop
xor
mov
test
sbb
push
cmps
jmp
push
sub
cmc
pop
dec
xchg
cmp
std
div
out
pop
mov
out
xchg
call
outs
dec
sbb
adc
cmc
mov
push
bound
or
sub
adc
pop
not
leave
or
fucomp
mov
(bad)
pop
(bad)
or
out
add
add
add
inc
push
adc
leave
push
jae
pop
hlt
push
add
cmc
mov
xchg
in
pop
jp
fdivr
xor
cmp
aaa
sbb
jnp
addr16
lods
add
or
push
mov
dec
push
jp
(bad)
sub
mov
sar
rcr
sub
push
ret
(bad)
cmp
es
cmp
and
sar
xchg
pop
jmp
cmp
loopne
sub
mov
ret
in
int3
gs
cs
not
sub
lods
cmp
or
mov
popa
fisub
push
mov
cmp
jmp
or
rcl
retf
repz
inc
push
mov
shr
sbb
hlt
sar
jmp
pop
or
mov
xor
sbb
rcl
dec
dec
mov
int3
imul
fsub
push
xor
jae
jmp
jnp
xor
cmp
out
cmp
cli
in
sub
jae
cmp
jmp
popa
jecxz
sub
mov
cmp
jmp
fstp
retf
mov
test
jbe
cwde
jmp
outs
in
xchg
jg
fs
xor
jl
in
lods
retf
mov
mov
cmc
mov
xor
cmc
mov
add
mov
sbb
retf
imul
test
and
retf
cdq
jmp
push
cli
stos
(bad)
ret
xchg
fisubr
push
(bad)
in
repnz
mov
jge
std
sub
mov
jmp
jmp
pop
mov
mov
popf
hlt
sbb
outs
mov
xchg
xchg
in
fadd
sbb
mov
jmp
nop
mov
xor
outs
out
or
xchg
stc
xor
jg
int3
fincstp
jno
rcr
aas
fdiv
or
push
mov
rol
lds
mov
mov
imul
xor
cmps
xchg
adc
sbb
rcl
dec
inc
push
retf
pop
mov
dec
mov
xor
cmc
mov
lds
adc
aaa
cmc
mov
push
xchg
(bad)
jmp
pop
dec
ret
jmp
pop
push
ret
pop
(bad)
sbb
push
cmps
aas
(bad)
aas
dec
retf
jmp
sbb
fnstsw
dec
retf
jmp
cmp
jmp
(bad)
xchg
shl
popa
jmp
ficomp
outs
fdiv
(bad)
ror
mov
cmps
(bad)
pop
adc
call
ja
sbb
mov
push
inc
add
dec
sbb
jno
or
retf
es
or
jb
add
add
or
push
mov
aaa
dec
jecxz
mov
int
inc
or
pop
mov
add
push
cmps
stc
sbb
scas
inc
cmp
popa
add
sbb
int3
sub
pop
ss
and
or
clc
fstp
jae
push
xchg
mov
sbb
xor
or
cmps
xchg
stc
xor
(bad)
(bad)
cld
xor
ss
adc
xor
mov
cmp
xor
xchg
sub
fidivr
dec
test
and
stc
xlat
cmp
stc
(bad)
and
fmul
cmp
cmc
add
cmp
out
movs
hlt
mov
cli
xor
cli
(bad)
sub
sti
aaa
cmp
call
jecxz
mov
jmp
dec
(bad)
pop
mov
jp
push
pop
mov
int
jmp
(bad)
jp
inc
jge
mov
sub
mov
xchg
sbb
sbb
jo
adc
or
sbb
or
adc
or
sbb
or
retf
ret
mov
pop
adc
xchg
stc
lds
sahf
adc
out
push
cmp
inc
sub
stc
aaa
dec
mov
aad
fdiv
das
out
mov
pop
mov
mov
fcom
popf
inc
cmp
cmp
mov
xchg
retf
push
cli
sub
lods
in
fld
outs
push
(bad)
sub
leave
jae
cmp
sahf
cmps
cmp
add
(bad)
sub
xor
inc
(bad)
outs
jbe
pop
nop
clc
adc
jbe
fwait
jmp
mov
arpl
pop
jmp
push
jmp
test
leave
cli
push
ret
loopne
adc
adc
sbb
sbb
cmc
mov
adc
out
or
fwait
stc
xor
jg
int
aas
(bad)
mov
pop
pop
out
mov
mov
std
dec
std
das
xor
sub
xor
or
scas
mov
xchg
(bad)
mov
ss
jnp
outs
ja
and
loop
jno
bnd
stos
lods
mov
stc
(bad)
jmp
sbb
aam
aas
rcl
call
leave
push
mov
xor
pop
mov
fld
push
mov
mov
or
sbb
out
push
sbb
cmp
cmps
sub
inc
mov
sbb
adc
fwait
push
mov
push
cmp
mov
lods
fldcw
sbb
jmp
cmc
pop
inc
cmp
imul
cli
push
sbb
je
fst
popa
add
xor
mov
inc
hlt
mov
xchg
repnz
inc
(bad)
in
pop
xor
out
mov
int
pop
inc
sbb
push
adc
enter
push
adc
pop
shl
add
adc
cmp
cmps
add
cmp
int
ds
add
or
and
xor
dec
pop
inc
cmp
pop
into
je
mov
add
mov
xchg
sub
add
ret
je
cmp
push
sub
(bad)
mov
ret
xor
inc
mov
mov
stos
and
pop
stos
and
stos
and
stos
and
stos
mov
daa
pop
stos
and
add
pop
push
jnp
add
pop
stos
and
xlat
fisttp
and
stos
mov
test
pop
cmp
test
mov
iret
mov
push
pop
stos
push
jge
xor
push
pop
add
lock
imul
jmp
jae
or
ss
pop
(bad)
fild
push
daa
lock
and
push
ror
sbb
or
rol
jge
outs
ds
pop
cmps
mov
pushf
jnp
not
mov
and
mov
add
push
pop
(bad)
aaa
sbb
fild
mov
mov
and
mov
jae
push
and
stos
fisttp
jmp
aaa
push
pop
mov
xor
stos
fisttp
dec
pop
scas
mov
call
cmp
stos
fistp
dec
sub
ss
pop
lahf
(bad)
mov
test
and
pop
mov
fild
cmps
clc
mov
lods
mov
mov
xsave
idiv
push
jnp
fisttp
fldenv
lods
mov
lahf
fbld
mov
mov
fst
jmp
add
imul
adc
fcom
test
sahf
push
in
inc
fst
lods
js
and
push
call
xor
leave
and
pop
stos
out
pop
sbb
and
cmp
or
push
stos
sub
push
mov
jge
call
pop
jnp
mov
inc
inc
fst
lods
js
hlt
pop
mov
idiv
scas
test
xchg
dec
mov
fbld
push
mov
mov
stos
ds
xchg
cmp
inc
cmp
test
imul
lahf
fbstp
mov
std
or
(bad)
clc
(bad)
push
pop
cmps
fist
mov
mov
ss
pop
lahf
fbld
push
and
(bad)
cli
ss
pop
lahf
(bad)
mov
cwde
mov
sub
push
imul
lock
test
arpl
add
jbe
fistp
and
(bad)
cli
ss
pop
lahf
(bad)
mov
std
push
sbb
push
fist
mov
mov
jbe
bound
rcr
std
cmp
push
pop
xchg
jae
push
fstp
mov
lods
mov
cmp
push
pop
scas
fbstp
push
and
dec
unpcklps
stos
fild
sbb
add
scas
mov
fild
push
imul
and
jl
bound
pop
fild
dec
push
push
pop
stos
and
pop
add
cli
pop
lahf
fild
mov
jl
scas
mov
push
dec
scas
cld
or
push
pop
das
adc
mov
(bad)
mov
push
and
enter
push
pop
daa
lods
mov
or
push
stos
fild
push
xor
outs
ds
pop
cmps
adc
aad
mov
add
add
adc
scas
mov
push
xor
pop
mov
nop
pop
stos
(bad)
jl
xchg
xchg
dec
mov
and
int3
push
jae
sar
test
in
push
pop
stos
outs
sar
ss
pop
lahf
das
mov
or
inc
cwde
(bad)
push
ins
scas
and
dec
imul
push
pop
scas
mov
pop
xchg
inc
pop
stos
xor
mov
and
pop
stos
mov
stos
ss
xchg
and
stos
or
dec
cmp
in
(bad)
es
stos
and
pop
jg
lock
nop
push
jmp
(bad)
scas
mov
push
adc
and
test
fild
push
jae
or
aaa
pop
pop
mov
je
stos
and
outs
and
fbstp
pop
outs
and
sub
push
lods
rcr
test
je
nop
test
xchg
or
mov
icebp
inc
sbb
sub
xor
cmps
out
jg
mov
clc
xchg
dec
jmp
mov
dec
(bad)
cmc
mov
push
div
jmp
inc
and
add
pand
pop
int
bnd
add
sahf
cmp
loope
and
aaa
cmc
mov
jb
sbb
rol
jg
out
sbb
dec
jmp
ss
pop
dec
dec
icebp
pop
jmp
mov
xor
add
inc
ss
mov
sbb
pop
in
in
(bad)
repnz
mov
mov
fcom
mov
shl
inc
and
sti
lock
cli
sbb
cdq
xor
pop
hlt
push
das
sbb
lock
mov
test
inc
mov
movs
adc
dec
inc
mov
push
imul
hlt
pop
or
xchg
dec
adc
call
jmp
js
or
mov
mov
push
fstp
aas
stc
fsqrt
adc
jbe
cmc
(bad)
gs
jmp
adc
push
(bad)
aaa
sbb
adc
cs
sbb
int
add
xor
pop
inc
mov
pop
repnz
lods
adc
retf
cli
mov
adc
leave
sbb
and
adc
push
(bad)
mov
inc
jb
cmp
cmp
xchg
and
movs
xor
xchg
and
aas
in
cmp
xchg
and
xchg
loop
mov
arpl
xchg
and
xchg
adc
mov
sbb
jge
mov
mov
or
xchg
push
in
mov
in
xchg
loope
xchg
cli
out
mov
push
in
xchg
add
xchg
ins
inc
pop
in
mov
push
in
daa
xchg
imul
mov
sub
jnp
in
mov
shl
retf
mov
jge
or
mov
popf
shr
or
mov
popf
rcl
add
imul
in
ja
repnz
mov
(bad)
imul
popa
mov
(bad)
aaa
aam
in
sub
in
je
retf
adc
retf
jmp
pop
in
xor
cmc
popa
in
xor
cmc
jge
xor
fs
mov
in
stc
xor
clc
clc
xchg
fldenv
jge
icebp
jg
mov
pop
jo
aad
push
shl
dec
cmp
aad
ja
mov
sbb
retf
fs
sub
retf
or
adc
cmc
mov
or
adc
not
leave
or
sub
cmc
pop
or
sub
mov
cwde
jb
and
jnp
out
pop
retf
mov
jmp
adc
int3
aaa
cmc
pop
inc
call
mov
cmc
pop
inc
mov
push
jge
cld
sbb
repnz
mov
imul
popa
fimul
add
out
out
pop
repnz
out
inc
sub
pop
or
test
sbb
(bad)
in
retf
lods
pop
stos
fcom
add
add
push
fldcw
and
add
dec
ret
popf
std
cdq
loop
jmp
fs
mov
sub
retf
pop
scas
dec
cs
mov
pop
adc
jmp
scas
and
aaa
sbb
sbb
cmp
ja
jnp
sbb
mov
jg
fistp
push
fwait
out
fldenv
sar
dec
add
xor
push
and
jne
sub
pop
fistp
push
pop
or
call
and
retf
adc
and
sbb
and
scas
pop
iret
xor
shl
(bad)
xlat
jge
in
pop
stos
repz
or
pop
cmp
(bad)
jmp
xor
jecxz
jmp
mov
xor
not
xor
cmc
test
inc
enter
xor
loopne
int
adc
in
nop
retf
(bad)
adc
loope
dec
jmp
test
mov
stos
cmp
jecxz
adc
pusha
popf
jmp
cld
in
cdq
stos
(bad)
cld
adc
adc
scas
in
mov
dec
test
dec
out
pop
jmp
or
xchg
cmp
sub
dec
jl
or
in
arpl
pop
jmp
mov
xchg
leave
or
into
pop
repnz
and
dec
sbb
jmp
aaa
cmc
mov
and
cdq
fcomp
neg
into
xor
push
es
mov
retf
or
(bad)
push
dec
adc
loop
jmp
test
jmp
addr16
enter
aaa
pop
mov
and
dec
jmp
mov
mov
mov
mov
jmp
ja
enter
jbe
test
leave
div
test
xchg
or
xor
div
loopne
(bad)
jmp
jmp
loop
adc
loopne
dec
out
ss
inc
jmp
int3
xor
int
or
push
pop
xchg
jmp
retf
jecxz
arpl
mov
repnz
(bad)
xor
mov
and
test
in
xchg
add
sub
shl
adc
leave
div
call
sbb
inc
ins
retf
dec
cmp
or
retf
std
retf
or
jmp
push
jmp
adc
shl
popf
hlt
dec
jmp
test
dec
lea
cmc
sbb
fsub
hlt
pop
inc
call
dec
fidiv
cmc
mov
and
pop
enter
scas
in
call
jne
loop
imul
adc
leave
out
jmp
loop
push
inc
dec
fcmove
out
adc
popf
hlt
sbb
call
jne
loop
imul
jecxz
or
cwde
rcr
(bad)
dec
fldenv
mov
(bad)
std
aaa
cmc
test
jmp
rcr
shl
fadd
mov
adc
xchg
cs
ss
jbe
xor
sbb
or
push
std
aaa
cmc
test
jmp
xchg
lds
fnstenv
loope
repnz
adc
adc
and
dec
sub
jmp
ss
mov
and
dec
jmp
mov
jmp
hlt
sbb
inc
enter
xor
push
pop
div
jmp
adc
and
cwde
stos
adc
mov
retf
mov
pop
out
cmc
mov
ret
sti
enter
sbb
pop
dec
or
adc
adc
enter
ja
nop
sahf
inc
mov
adc
lahf
hlt
stc
(bad)
and
mov
retf
jne
mov
loopne
sub
push
(bad)
out
mov
xchg
dec
in
mov
fs
lea
add
mov
adc
sbb
aam
xor
pop
xchg
jmp
retf
jecxz
arpl
(bad)
addr16
loope
xchg
cmp
add
div
loopne
jge
adc
in
cdq
out
gs
mov
adc
mov
jecxz
or
(bad)
ja
loope
xchg
mov
popf
test
xchg
loopne
dec
jmp
pop
mov
out
and
pop
and
loope
dec
jmp
test
lds
jecxz
in
les
(bad)
pop
cmc
loope
test
pop
adc
enter
lahf
hlt
mov
push
std
mov
and
pop
cmps
out
push
push
mov
cli
into
or
sbb
sbb
cmp
and
add
call
xchg
data16
aaa
sbb
and
adc
das
loopne
push
rol
mov
icebp
(bad)
bnd
mov
push
pop
or
mov
push
aaa
cmc
mov
or
mov
ss
loope
sbb
cmps
(bad)
loop
jmp
jp
fcomp
(bad)
fcomp
fucomi
jmp
shl
loop
dec
jmp
adc
push
cmp
cmps
sbb
push
cmps
add
call
jne
hlt
sbb
das
pop
cmps
jecxz
out
jge
ja
movs
jmp
sbb
retf
pop
aam
sbb
sub
mov
inc
call
inc
loop
mov
ret
mov
push
std
mov
sbb
dec
repnz
or
fsub
bnd
sbb
repnz
jbe
(bad)
mov
(bad)
pop
ret
pop
inc
mov
in
pop
in
int3
push
sbb
retf
or
(bad)
xchg
cmc
xor
into
and
add
clc
cwde
enter
cli
(bad)
lock
mov
push
fstp
fist
dec
mov
ret
fcomip
push
icebp
lods
sub
scas
add
out
xor
sub
fild
aad
xor
xchg
enter
leave
dec
loopne
jbe
sub
jg
aad
xor
pop
retf
pop
fcom
and
mov
fsubp
aad
ja
aam
mov
aas
aad
jb
jns
retf
mov
aas
aad
jne
sub
push
fucom
mov
pop
test
jbe
jle
leave
or
cmp
xchg
or
into
imul
or
je
test
nop
jmp
sbb
popf
hlt
adc
hlt
cmc
mov
push
pop
mov
pusha
popf
out
shl
mov
int
mov
pushf
adc
xlat
mov
pushf
hlt
dec
mov
(bad)
jmp
hlt
sbb
sbb
hlt
mov
cmp
xchg
or
push
push
mov
loope
dec
jmp
test
ret
cmc
mov
aaa
cmc
loope
test
jmp
inc
mov
xchg
push
les
retf
repnz
rol
mov
and
pop
cmps
out
mov
pop
mov
(bad)
bnd
inc
cmc
inc
gs
out
jae
jmp
sbb
jb
jmp
shl
rcr
mov
xchg
pop
fstp
push
and
pop
mov
mov
leave
push
rcl
mov
xchg
or
outs
sbb
aam
adc
ss
mov
fyl2xp1
push
int
fcom
add
cmc
mov
loop
sub
loop
fbstp
hlt
lea
neg
stos
movs
push
stc
sub
ins
pop
dec
add
mov
cmp
mov
xor
int3
xchg
out
sbb
sbb
cmp
cmps
imul
shr
call
dec
mov
mov
jmp
test
fistp
sbb
ret
xchg
push
dec
stc
leave
cli
adc
ror
sbb
xor
in
sbb
repz
sbb
cmp
rcl
add
retf
fcomp
pop
dec
adc
fdiv
ret
repnz
in
pop
jb
shl
mov
sbb
cmp
xor
dec
and
adc
and
cmp
dec
mov
fs
mov
dec
retf
jge
fs
push
adc
pop
mov
cmps
jne
mov
enter
cld
pop
test
jl
test
lock
pop
enter
mov
shl
lods
jmp
jg
ror
push
and
mov
pop
cmp
push
in
dec
jl
ret
lock
jb
scas
pop
pusha
fist
sub
dec
dec
enter
jns
mov
xchg
push
les
mov
call
cmp
sub
cmc
hlt
cmc
sbb
rcl
lods
in
sub
fsubr
repnz
lds
mov
push
sub
loopne
cli
cdq
in
cmps
std
jmp
cmp
xchg
out
jmp
addr16
imul
cs
sbb
jmp
push
cmp
mov
call
cwde
rol
cmc
loope
test
arpl
sbb
and
icebp
sub
(bad)
sub
(bad)
xchg
lock
fdiv
xchg
clc
std
retf
cld
cmps
in
arpl
pop
jmp
pop
or
push
bound
movs
inc
xor
mov
and
sbb
pop
in
or
push
mov
ret
sbb
jmp
aaa
cmc
mov
cld
into
adc
shl
add
xchg
inc
add
stc
sub
add
inc
aad
sbb
call
xor
dec
inc
div
mov
add
adc
ficom
sub
adc
push
adc
push
inc
stc
std
cli
adc
idiv
jmp
fsub
in
out
pop
dec
fsub
sbb
dec
cmc
push
inc
ss
mov
loope
push
add
cmp
pusha
cwde
pop
pop
sub
cs
mov
popf
das
out
adc
leave
sbb
or
jb
inc
add
push
or
cwde
dec
pop
cmc
ss
push
jmp
pop
or
push
bound
pop
hlt
mov
ficomp
sub
pop
sbb
int3
sub
adc
leave
or
pop
cs
out
dec
retf
ret
aas
xor
leave
or
das
sbb
sbb
xor
xor
pop
add
jmp
rcl
out
ret
cld
ret
cmp
aam
push
fimul
ret
pop
inc
push
dec
push
(bad)
pop
ret
retf
mov
dec
bound
cmp
ret
push
inc
out
fnstsw
imul
inc
cld
xchg
sub
add
out
ss
cdq
cli
or
mov
adc
out
dec
pop
neg
mov
push
add
fist
pop
mov
push
sub
repnz
jmp
jnp
retf
lods
pop
push
adc
cmps
clc
jle
pop
add
add
es
into
pop
ret
dec
scas
enter
or
dec
sbb
lods
mov
hlt
mov
popf
div
push
fcomp
stc
fsqrt
adc
xchg
push
mov
xor
cmc
mov
stos
shl
popa
enter
in
cli
sbb
xchg
or
cwde
aas
sub
aaa
cmc
mov
stos
adc
pop
fwait
cmp
jmp
add
hlt
sbb
retf
jmp
xor
mov
mov
dec
add
pop
inc
or
adc
shl
pop
inc
call
rol
cmp
dec
es
mov
(bad)
or
cmp
cmps
sub
cmps
stc
xor
mov
push
cmp
cmp
adc
or
leave
or
cs
sbb
(bad)
aaa
dec
xor
fcomip
jge
jb
xchg
push
dec
std
leave
cli
push
xor
dec
pop
dec
sahf
xlat
push
adc
adc
ss
int3
xor
and
mov
and
add
sub
sub
int3
jns
dec
hlt
mov
fild
ja
mov
iret
mov
pop
lock
mov
in
mov
add
dec
(bad)
mov
pop
test
in
adc
jmp
lods
adc
in
or
lock
xchg
jge
pusha
cmp
dec
lock
adc
loopne
sub
pop
mov
clc
ja
xchg
xor
add
or
aam
fcomp
xchg
cmp
movs
loope
or
in
xchg
mov
loope
mov
in
adc
loopne
fadd
cld
cmc
sub
test
lods
lea
cmp
mov
pusha
jno
dec
lock
adc
loopne
sub
pop
mov
cwde
ja
adc
mov
xchg
pusha
mov
lods
xchg
cmp
movs
loope
or
in
xchg
mov
loope
mov
in
and
(bad)
lock
adc
clc
cmp
and
cmp
loope
sub
int
ins
xchg
dec
sub
rcl
lock
pop
fst
or
cli
jo
sti
or
test
jnp
push
push
shr
popw
daa
sar
(bad)
data16
sbb
outs
pop
jae
shr
imul
mov
mov
ret
imul
mov
and
ret
or
jne
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
stc
mov
hlt
jmp
jmp
sub
add
mov
ret
add
(bad)
push
pop
fcom
cmc
pop
dec
or
dec
jmp
push
mov
pop
in
cmps
mov
icebp
adc
dec
jmp
adc
xchg
cmp
popa
call
jmp
cmps
push
inc
stos
popf
add
push
cmps
sbb
daa
and
call
adc
jb
loopne
xchg
dec
push
jecxz
mov
pop
jecxz
movs
call
stc
xor
out
add
pop
cli
adc
hlt
sbb
in
sbb
adc
push
rcr
sub
push
std
loope
push
lods
shl
xchg
ret
retf
pop
jmp
add
adc
call
push
dec
call
in
pop
ss
call
jmp
mov
ds
push
xchg
push
xor
mov
dec
cmp
loop
mov
hlt
jmp
inc
pop
jb
sbb
sbb
cmp
mov
in
fwait
dec
mov
and
bnd
jecxz
pop
(bad)
and
fistp
sbb
mov
or
sub
dec
xchg
sub
dec
nop
xchg
or
xchg
sub
dec
xchg
sub
dec
xchg
sub
repnz
ret
or
xchg
jmp
dec
xchg
sub
dec
xchg
sub
dec
xchg
daa
or
sub
dec
add
in
mov
cli
in
mov
cmps
or
nop
fwait
or
xchg
sub
dec
xchg
sub
dec
xchg
sub
dec
xchg
sub
dec
xchg
sub
dec
add
jecxz
ficom
stos
popf
call
mov
adc
in
dec
xchg
sub
dec
xchg
sub
dec
xchg
sub
dec
sub
jmp
std
test
mov
iret
sub
dec
idiv
xor
cmp
div
popf
jl
dec
nop
or
xor
or
sub
dec
mov
inc
nop
cmps
daa
popf
xor
mov
dec
xchg
mov
inc
ins
sub
sbb
test
or
xchg
mov
mov
sub
loop
aad
and
and
(bad)
cmp
or
sub
jmp
cmc
sbb
nop
ja
dec
nop
or
xor
or
sub
dec
mov
inc
nop
cmps
pop
sub
into
sar
or
aad
mov
and
mov
lods
sub
dec
xor
xchg
pop
fimul
pop
aas
add
or
(bad)
xchg
sub
dec
xchg
iret
or
sub
mov
clc
adc
and
lods
movs
sub
dec
nop
pop
adc
pop
xchg
fucomi
add
or
add
sub
cld
or
ds
dec
popf
sub
dec
nop
push
std
lahf
scas
sub
jae
in
lds
(bad)
xor
jecxz
imul
popa
xor
dec
ins
pop
fistp
and
xchg
scas
(bad)
dec
xchg
iret
or
sub
fst
sub
dec
nop
aaa
push
cmp
fbstp
sub
inc
scas
and
outs
mov
adc
(bad)
xor
inc
ja
or
mov
mov
push
mov
sbb
mov
or
or
dec
xor
mov
dec
xchg
hlt
inc
xor
inc
xchg
sub
dec
pop
push
dec
ins
sub
push
fwait
jle
sbb
mov
nop
pop
(bad)
dec
fldcw
sbb
fwait
jle
sbb
out
dec
xchg
pop
sbb
mov
ret
pop
inc
inc
push
fbstp
sub
xchg
fimul
mov
push
call
test
std
test
inc
retf
jae
xchg
inc
clc
cmp
lahf
mov
fadd
xchg
aaa
or
sub
dec
xchg
aaa
adc
pushf
test
call
ja
call
inc
pushf
sub
shl
mov
push
call
test
call
dec
movs
sub
mov
sub
xchg
mov
dec
(bad)
es
ret
jb
and
(bad)
cmp
or
sub
mov
push
push
dec
pusha
sbb
or
pop
push
dec
popf
daa
adc
(bad)
gs
ins
sub
fwait
jle
sbb
cld
or
jle
sbb
sub
mov
lods
sub
dec
xchg
sub
dec
addr16
fs
pop
fimul
es
data16
or
popf
xor
add
pusha
sbb
or
pop
push
dec
mov
push
gs
out
sub
fnstenv
stos
mov
dec
xchg
hlt
inc
xor
inc
xchg
sub
dec
inc
push
push
sub
push
fwait
jle
sbb
test
nop
sub
loop
mov
movs
jne
dec
fwait
(bad)
sbb
sahf
popf
jne
dec
inc
xor
inc
nop
inc
push
dec
(bad)
jae
mov
arpl
inc
(bad)
fmulp
(bad)
sub
mov
jae
inc
std
scas
add
or
dec
xchg
aaa
push
retf
pop
inc
(bad)
aad
mov
sahf
jmp
or
(bad)
or
inc
imul
inc
popf
test
or
imul
inc
push
sub
cmp
imul
nop
repz
inc
nop
mov
iret
sub
into
sar
or
or
cmp
or
sub
dec
ins
pop
pop
out
adc
or
nop
pop
fimul
push
int3
ins
sub
or
sub
sbb
in
dec
fwait
jle
sbb
sub
dec
lods
pop
sbb
out
int
push
dec
dec
nop
ds
pop
xor
or
push
loop
nop
cmps
pop
fwait
cld
sub
test
inc
sbb
mov
or
scas
mov
ss
cmps
add
sbb
adc
les
out
jne
not
(bad)
(bad)
out
push
(bad)
push
cmps
cld
sbb
pop
add
imul
xchg
push
push
xor
into
es
sbb
xor
popf
adc
aas
(bad)
pop
push
jmp
pop
pop
add
pop
mov
call
stc
mov
scas
inc
cmp
in
(bad)
push
call
ss
pop
in
fld
fdivr
fwait
call
aaa
cmc
lods
adc
popf
jmp
or
cmc
mov
sbb
retf
cmp
jo
fmul
stc
(bad)
sub
xor
push
fistp
jmp
adc
mov
hlt
pop
inc
push
pop
add
or
shl
sbb
mov
lods
or
pop
mov
mov
dec
shl
inc
dec
call
mov
retf
or
jle
add
rcr
mov
inc
pop
sbb
mov
neg
mov
div
push
ficom
loopne
or
jmp
sbb
adc
retf
or
shl
inc
rcr
imul
push
cmp
or
inc
retf
adc
sbb
add
dec
sbb
lds
cwde
or
push
xor
sbb
xchg
out
xchg
cmp
adc
pushf
sti
in
cmp
and
popf
cdq
cmps
xchg
cmp
mov
shl
sti
mov
sub
cmps
fdivr
repnz
test
cmps
movs
add
or
aam
in
mov
fmul
dec
mov
test
adc
nop
push
xchg
sbb
test
test
or
aam
movs
mov
add
jbe
or
sbb
or
fldcw
and
sbb
and
sbb
and
repz
jae
sbb
pop
dec
xchg
and
xor
popf
and
sbb
cs
aam
xchg
retf
and
xchg
sbb
xor
xor
bound
sbb
sbb
sbb
out
push
add
jb
cmp
cmp
ins
sub
dec
pusha
mov
xor
pushf
and
adc
and
aas
in
mov
xor
add
and
xor
mov
das
sub
pop
ss
cmp
fadd
mov
das
push
xchg
cmp
add
add
xor
popf
and
xor
popf
cmp
mov
pushf
and
xor
popf
and
xor
and
mov
mov
and
cwde
fdivr
fstp
pushf
and
xor
retf
adc
xor
retf
adc
xor
xchg
cmp
add
mov
sbb
add
mov
aas
jecxz
cmp
sbb
cmp
inc
xor
int3
dec
adc
fdivr
sbb
jae
pop
pusha
and
mov
ins
xor
and
sbb
xor
xor
and
sbb
lock
popf
cmp
add
and
sbb
repnz
sub
adc
and
sbb
fisub
xor
addr16
out
xor
adc
shl
xor
and
xor
mov
mov
cs
adc
and
sbb
shl
cmp
and
sbb
add
sbb
and
jae
mov
pushf
and
xor
call
pushf
jno
dec
movs
and
int3
dec
lds
cmp
and
push
fstp
jbe
pushf
iret
test
pushf
fist
xchg
out
xor
cmp
sbb
sti
mov
push
(bad)
jmp
push
nop
out
or
mov
xor
sahf
fxch
fld
jne
rcr
sbb
ss
sbb
fidivr
sbb
rcl
loopne
cmc
pop
push
repz
jmp
or
jle
sbb
adc
adc
out
jmp
out
push
cmp
pop
inc
mov
dec
call
(bad)
repnz
cdq
div
add
hlt
mov
cli
sbb
dec
call
ss
mov
dec
ss
mov
dec
div
stc
xor
xor
add
mov
ror
hlt
adc
mov
in
nop
adc
test
jb
add
hlt
mov
out
pusha
pop
dec
call
sbb
scas
pop
jmp
ja
adc
sbb
fld1
leave
adc
sub
cmc
pop
dec
pop
xchg
push
adc
xchg
scas
dec
or
push
jecxz
mov
sbb
pop
add
rol
jecxz
or
in
adc
leave
or
sub
push
sbb
fcomp
lods
push
sub
or
shl
popa
jbe
add
out
pop
mov
xchg
retf
leave
bnd
lahf
xchg
pop
sbb
pop
pushf
mov
adc
js
int
xchg
aaa
mov
push
sub
mov
or
int
lea
jecxz
sub
mov
mov
and
sub
pop
test
int3
mov
fidiv
mov
jp
fstp
and
je
mov
jmp
dec
in
fadd
sbb
cmp
leave
ss
loop
retf
dec
xor
(bad)
jmp
sub
push
data16
cmc
cmp
cld
mov
aaa
or
out
arpl
mov
ror
lods
xor
movs
inc
xor
mov
daa
add
jnp
arpl
mov
(bad)
fucompp
fst
pusha
xor
pop
add
push
add
pushf
leave
fnstenv
(bad)
ss
dec
mov
mov
popa
add
sbb
sub
cmc
mov
sbb
(bad)
or
xchg
mov
xor
jbe
call
push
jle
pop
in
mov
out
inc
dec
pop
dec
out
ret
rdpmc
cwde
xor
pop
or
or
(bad)
sub
or
cmc
mov
add
in
mov
push
add
fstp
adc
mov
dec
pop
cli
mov
sub
mov
fst
fld
iret
pop
jb
sbb
sar
xor
mov
or
xchg
repz
sbb
adc
fst
pop
jl
cmc
pop
dec
mov
or
cdq
mov
dec
inc
cmc
mov
or
add
mov
(bad)
cmp
(bad)
pop
xchg
inc
sub
xchg
imul
sbb
adc
lods
adc
addr16
or
bound
adc
sub
mov
rcl
sbb
xor
(bad)
and
or
and
cmp
xor
loope
xchg
jae
push
mov
mov
aad
(bad)
int
mov
cwde
dec
ror
jmp
mov
je
pop
fnstenv
sar
cld
es
gs
mov
sar
pop
shl
sbb
push
icebp
je
arpl
jo
pop
dec
push
mov
sar
xor
je
pop
loope
xchg
jae
push
mov
out
and
out
leave
push
out
leave
push
out
leave
push
out
leave
push
inc
dec
leave
push
out
aaa
or
rcr
dec
aad
out
retf
psubd
push
in
leave
pop
out
leave
push
push
dec
aad
out
retf
psubd
push
out
sub
out
leave
push
out
leave
push
out
leave
push
out
leave
push
out
push
cli
icebp
dec
enter
addr16
out
leave
push
out
push
fidiv
enter
ror
fimul
out
enter
leave
mov
test
or
adc
repz
leave
push
out
in
cwde
retf
push
in
cmp
sbb
dec
retf
cmovbe
push
out
into
or
mov
inc
add
enter
sbb
push
out
leave
push
out
dec
ins
mov
dec
leave
and
jle
or
dec
aad
sbb
mov
cmova
dec
sbb
inc
icebp
sbb
push
cwde
hlt
adc
cwde
leave
or
dec
leave
push
out
cmp
xor
loop
retf
cmovle
push
inc
dec
popa
lahf
out
into
or
mov
(bad)
in
sbb
in
(bad)
jo
nop
stc
dec
leave
scas
push
iret
push
out
ror
leave
push
out
xor
out
loop
into
add
enter
cmc
cmp
dec
leave
push
in
sbb
sbb
scas
sbb
fmul
mov
cmp
out
xchg
add
inc
aas
fild
sbb
adc
test
pushf
mov
icebp
in
mov
pop
dec
xor
movups
add
pushf
ror
sbb
loope
leave
pop
cli
dec
adc
in
sbb
loope
leave
pop
inc
dec
popa
(bad)
dec
or
out
enter
popa
paddsb
mov
sbb
in
repnz
ror
push
out
mov
cmp
out
xchg
add
push
fimul
out
enter
leave
ret
pop
out
pop
mov
(bad)
int3
and
scas
dec
leave
push
loope
(bad)
in
cwde
cld
jmp
xor
jmp
(bad)
test
push
(bad)
dec
std
clc
dec
inc
retf
psubsw
(bad)
cwde
cld
jmp
xchg
push
jmp
(bad)
test
push
push
std
clc
ret
setg
sub
dec
ror
fdivrp
out
enter
leave
mov
jmp
test
in
cmp
stos
dec
int
mov
int3
and
pushf
ror
arpl
jmp
mov
int
out
push
fsubrp
out
enter
leave
mov
xor
push
push
jl
sbb
retf
cmovp
push
out
(bad)
inc
retf
psllw
ror
retf
loopne
add
dec
ror
sbb
push
out
adc
and
out
sbb
pop
dec
std
js
add
jno
mov
out
enter
leave
and
fsubrp
sahf
out
leave
push
cmc
dec
lds
retf
loop
retf
cmovp
push
lock
xor
dec
leave
push
retf
popf
in
sbb
cwde
jmp
add
dec
int
out
or
(bad)
dec
imul
in
enter
popa
cmpxchg
call
dec
enter
xor
(bad)
add
pop
out
fdivp
xchg
and
retf
xor
mov
xchg
dec
enter
int
jecxz
(bad)
icebp
dec
enter
ss
out
retf
or
out
mul
dec
enter
std
jecxz
adc
retf
loopne
in
jecxz
xor
icebp
mov
xor
icebp
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
retf
jmp
mov
xor
cmc
mov
xor
cmc
mov
retf
jmp
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
mov
xor
push
jne
jmp
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
fsubr
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
aaa
cmc
loope
xchg
inc
imul
div
and
pop
cmps
add
mov
dec
dec
sar
xchg
pop
dec
push
movs
pop
jmp
mov
lock
pop
ins
dec
push
xor
(bad)
push
fcomip
jnp
fnsave
dec
pop
inc
aas
jle
or
jecxz
retf
or
dec
ss
mov
in
mov
call
add
cmc
mov
call
stc
xor
hlt
pop
dec
cmps
mov
jmp
cmps
cmps
shl
inc
out
inc
nop
(bad)
repnz
add
repz
push
fistp
ss
hlt
aas
dec
repnz
pop
in
scas
inc
mov
(bad)
or
leave
push
mov
inc
add
adc
sbb
sbb
call
stc
or
mov
aas
jmp
fadd
lahf
test
jbe
and
stos
cmps
ss
sahf
imul
dec
jmp
adc
into
pop
pop
jmp
adc
gs
in
mov
sbb
xor
lods
jl
rcl
pop
rcl
add
es
pop
jp
dec
mov
mov
adc
(bad)
bnd
jnp
dec
add
sbb
sbb
je
ins
dec
pop
outs
dec
adc
or
add
jb
ja
fs
xchg
jg
inc
ja
mov
push
(bad)
and
inc
adc
xor
mov
into
push
outs
rcl
xchg
inc
push
dec
and
in
xor
push
push
jae
imul
push
push
push
and
inc
and
pop
cmp
jge
xchg
push
arpl
pop
rol
push
pusha
cmp
sbb
and
retf
or
jmp
pop
jmp
mov
adc
push
dec
jmp
loop
cdq
jmp
mov
cli
xchg
test
and
pop
add
into
cmp
fidiv
jmp
push
ret
cmc
mov
push
aad
stos
fstp
not
push
inc
call
lds
jg
dec
retf
jmp
stos
jmp
xor
push
add
sbb
sbb
and
call
cmp
push
jmp
pop
adc
sub
mov
cmc
xchg
neg
in
(bad)
fisttp
jmp
mov
lods
div
inc
fsubp
mov
inc
or
pop
dec
and
push
jmp
inc
pop
dec
sbb
mov
jno
or
(bad)
(bad)
or
adc
fnstenv
adc
test
cmp
adc
and
in
pop
sbb
mov
mov
cmp
cmps
sbb
in
cmp
push
scas
sbb
or
mov
add
add
cdq
neg
arpl
shl
mov
fdivr
jle
retf
inc
add
enter
daa
adc
or
jno
pushf
cli
in
pop
inc
repnz
mov
call
sbb
fsubr
add
sub
add
test
add
test
and
rol
nop
(bad)
inc
cdq
mov
shl
inc
test
push
lock
cli
xor
mov
rol
push
aad
add
test
fiadd
pop
in
rol
test
add
adc
rol
std
add
dec
jae
rol
loopne
cdq
mov
xchg
sbb
sar
push
ja
add
xchg
enter
jmp
dec
cdq
add
mov
push
call
push
inc
lds
pop
xchg
shl
inc
test
lods
push
test
push
dec
jae
repnz
pushf
(bad)
xchg
add
test
adc
int
mov
cs
test
pop
loope
mov
push
push
sbb
add
adc
fadd
xor
ffree
and
push
and
cli
inc
test
sbb
jns
jae
lods
lods
inc
test
movs
mov
rol
in
test
aam
addr16
js
mov
jp
mov
add
push
lock
push
popf
xabort
sub
test
inc
or
pop
push
daa
inc
inc
inc
test
mov
test
add
ficom
push
push
xor
add
adc
cwde
pop
xchg
repnz
xor
add
xchg
xchg
repnz
add
add
ja
mov
mov
retf
dec
rol
inc
push
loopne
mov
retf
pop
rcr
inc
push
clc
push
push
inc
retf
adc
inc
inc
test
pop
xchg
push
push
or
add
test
test
fiadd
mov
test
clc
jbe
aam
adc
(bad)
mov
xchg
loopne
in
rcl
add
pop
sub
rol
addr16
inc
test
sbb
or
repnz
test
add
(bad)
pop
clc
push
push
mov
shr
inc
and
jns
in
pop
clc
inc
sub
mov
cdq
mov
rol
push
ror
add
test
inc
inc
cdq
mov
sbb
test
cmp
mov
inc
test
add
xchg
test
mov
test
inc
test
xlat
xlat
dec
shl
lea
adc
(bad)
rcl
push
inc
into
add
xchg
in
cdq
mov
test
push
adc
mov
inc
test
add
jns
push
in
test
xor
pusha
stc
xor
sahf
push
adc
mov
inc
sub
jnp
in
test
add
in
sar
mov
inc
push
xchg
adc
mov
inc
jns
mov
(bad)
rol
dec
jae
cmp
dec
pop
push
xor
add
rol
in
retf
loop
and
jb
pop
xchg
add
in
clc
push
inc
and
jno
mov
lahf
rol
in
retf
inc
inc
and
jno
pop
xchg
sti
mov
mov
(bad)
jno
aam
rol
out
xor
mov
test
add
jne
add
test
add
test
add
test
add
test
add
test
add
test
add
jne
add
test
add
test
add
test
add
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
push
push
test
outs
(bad)
and
sub
stc
mov
imul
xor
stos
std
mov
(bad)
sub
or
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
push
mov
sar
idiv
or
push
or
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
inc
mov
rcl
cmp
movs
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
inc
dec
imul
stc
mov
mov
ja
js
stc
mov
imul
sub
dec
xchg
xchg
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
push
push
test
adc
mov
sub
loope
clc
loopne
lods
je
ins
and
or
sbb
int
dec
or
dec
cdq
(bad)
push
stos
jecxz
add
repnz
pop
push
push
int3
mov
test
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
adc
inc
iret
fs
lds
int
dec
or
dec
cdq
int3
(bad)
int
push
outs
mov
loope
or
sub
loope
clc
loopne
lods
je
ins
and
test
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
aad
mov
sbb
xor
sbb
int
dec
or
xor
pop
lods
pop
sbb
(bad)
push
and
xlat
vpsubq
sbb
int
jmp
test
call
lods
xor
and
add
dec
cdq
int3
(bad)
int
pop
jne
sub
test
cmc
aad
mov
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
aad
mov
sbb
mov
leave
icebp
xchg
retf
mov
int3
(bad)
int
or
dec
jmp
lea
adc
loope
mov
or
adc
dec
cdq
fs
int
inc
sbb
mov
test
std
leave
xchg
mov
hlt
lahf
pushf
popf
jb
ins
jo
add
dec
cdq
push
mov
sar
inc
lods
dec
jmp
dec
jmp
cmp
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
aad
mov
add
scas
and
add
dec
cdq
int3
(bad)
int
add
jle
sbb
aad
mov
sbb
test
std
clc
pop
dec
or
hlt
mov
ja
xor
jne
call
xchg
mov
jl
inc
adc
dec
cdq
mov
add
dec
cdq
je
int
icebp
mov
sbb
test
jmp
cmp
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
aad
mov
add
test
jmp
stc
icebp
push
int3
(bad)
int
jne
test
jb
int
dec
aaa
rcl
mov
add
test
jmp
imul
leave
gs
cmp
call
xchg
mov
pusha
out
cdq
jle
fucomp
sbb
xor
mov
dec
ins
add
test
in
aad
mov
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
aad
mov
add
test
in
sub
out
imul
or
mov
cmp
lea
add
test
in
sbb
push
mov
sbb
cmp
add
test
in
aad
mov
sbb
dec
or
push
test
lods
jge
aad
and
cmp
imul
xchg
mov
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
clc
call
xchg
mov
add
test
in
aad
mov
add
test
in
rcl
adc
mov
test
mov
mov
out
ins
pop
leave
xchg
int
cmp
add
test
in
sbb
dec
mov
sbb
cmp
add
test
in
lds
and
sub
or
adc
add
sub
in
aad
mov
add
test
in
aad
mov
sbb
cdq
(bad)
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
push
push
test
xchg
jne
shr
lods
push
jmp
cmp
add
test
in
aad
mov
add
test
in
aad
mov
add
movs
popf
push
dec
jmp
jge
jae
mov
cmp
call
mov
pushf
movs
movs
gs
cmp
add
test
in
and
cmp
int3
(bad)
int
add
mov
in
xchg
mov
sbb
test
in
aad
mov
add
test
in
leave
xchg
mov
sbb
popf
(bad)
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
push
test
jg
jae
add
lock
aad
test
cmp
imul
xchg
mov
add
test
in
aad
mov
sbb
mov
jae
add
dec
cdq
jno
inc
jo
shr
call
mov
pushf
movs
movs
gs
cmp
add
test
jmp
cmp
mov
dec
aaa
test
xchg
call
xchg
mov
add
test
in
aad
mov
add
test
in
mov
mov
mov
dec
add
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
xor
add
addr16
cmc
jne
call
xchg
mov
add
test
in
aad
mov
sbb
lods
dec
jmp
add
dec
cdq
clc
(bad)
int
adc
add
test
in
sbb
dec
mov
movs
pushf
push
ins
leave
jno
cmp
jge
add
lods
push
in
adc
jge
test
mov
shl
imul
test
jmp
cmp
add
test
in
leave
xchg
mov
add
and
dec
mov
loopne
lods
xor
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
add
int
jno
arpl
jmp
movs
push
popf
leave
mov
add
test
in
aad
mov
add
test
in
loope
mov
mov
retf
and
adc
test
in
sbb
out
hlt
cmps
cld
shl
jge
add
mov
les
sbb
sbb
cmc
xchg
(bad)
cmp
add
test
in
aad
mov
add
test
in
leave
xchg
mov
sbb
jne
add
push
out
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
pop
or
adc
sbb
dec
push
cmp
imul
xchg
mov
add
test
in
aad
mov
mov
test
adc
call
mov
in
ror
fmul
adc
add
mov
inc
int3
retf
(bad)
cmp
cmp
add
test
in
aad
mov
add
test
jmp
iret
loop
jmp
dec
rol
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
sub
add
mov
mov
dec
jmp
cmp
add
mov
mov
mov
dec
aas
rcl
pop
(bad)
lods
push
in
and
pop
mov
test
push
cmp
sbb
mov
push
sub
(bad)
mov
xchg
cmp
call
xchg
mov
add
mov
push
sbb
jp
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
movs
pusha
int3
(bad)
int
mov
sar
cmp
ins
and
loope
cmp
imul
lods
jmp
fsubr
aam
pop
stos
lea
std
fadd
sub
jp
jl
push
inc
add
jg
lock
std
popf
cmp
hlt
mov
pusha
icebp
test
fsubr
test
jmp
fst
fwait
loopne
mov
or
dec
cdq
or
or
dec
leave
rcr
inc
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
fmul
xchg
fstp
dec
bound
in
popa
int3
cwde
dec
sub
cdq
cs
btc
lods
jno
lock
std
xchg
test
adc
mov
cmp
sub
ror
sbb
dec
scas
and
hlt
push
add
sub
cwde
jmp
mov
cmp
mov
aam
cmp
ins
sbb
mov
push
and
int3
(bad)
int
push
or
jmp
lahf
movs
sub
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
clc
sbb
jg
test
sbb
div
cmp
dec
cdq
pusha
mov
shl
pop
scas
lock
mov
add
in
and
cmp
and
pop
scas
int3
jl
movs
sbb
adc
dec
sub
in
mov
sbb
add
lods
push
in
leave
stc
movs
cmp
jp
js
xchg
popa
fcmovb
add
dec
cdq
test
lods
call
sub
sub
bound
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
fnsave
in
pop
push
leave
ins
push
cmp
jne
add
mov
in
inc
add
int3
mov
test
sbb
jae
xchg
pop
test
int
test
jne
sbb
iret
xor
add
mov
imul
popf
repz
fcom
imul
mov
sar
or
ins
adc
test
in
and
xchg
pop
add
mov
ror
sbb
in
cmp
push
ret
add
push
jmp
mov
sbb
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
sub
and
cmp
aad
mov
cmp
imul
mov
cwde
xchg
and
push
aad
fild
pop
mov
movs
cmp
sar
stc
je
and
(bad)
and
lds
clc
(bad)
int
test
shr
mov
shr
(bad)
int
and
sub
in
icebp
pop
mov
in
jnp
xor
imul
cmp
mov
call
lea
sbb
test
in
int
mov
pusha
test
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
mov
adc
xchg
mov
add
test
in
aad
mov
sbb
lods
inc
stc
loopne
hlt
and
inc
cmp
test
arpl
daa
dec
or
dec
cdq
int3
(bad)
int
dec
or
stc
enter
xor
or
dec
cdq
int3
(bad)
int
dec
or
dec
mov
rcl
leave
cmp
in
mov
lds
test
jmp
cmp
add
test
in
rcl
push
out
xor
dec
and
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
ins
mov
aad
sar
jns
sbb
test
in
aad
mov
add
test
jmp
pop
dec
and
mov
dec
aad
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
stc
enter
xor
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
in
loopne
sbb
in
lea
repnz
enter
popf
cmp
jge
add
test
in
aad
mov
add
test
in
cmp
(bad)
cmp
lods
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
sbb
fadd
mov
gs
add
test
in
aad
mov
add
test
in
leave
xchg
mov
sbb
push
add
mov
in
lock
(bad)
int
dec
or
dec
cdq
and
cwde
clc
lods
mov
fistp
dec
outs
and
xor
or
(bad)
int
dec
or
pop
mov
icebp
rcr
out
pop
mov
lods
xor
dec
jmp
cmp
add
test
in
aad
mov
sbb
test
in
fadd
mov
ror
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
cwde
mov
rcl
dec
add
imul
dec
jmp
cmp
add
test
in
aad
mov
or
cld
sbb
sub
or
test
add
dec
cdq
jb
sbb
test
cdq
stos
sbb
lods
jg
add
stos
imul
ror
sbb
inc
and
leave
cdq
loope
jp
gs
mov
leave
aad
mov
add
test
in
aad
mov
add
inc
cmc
adc
push
jg
jne
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
leave
jno
mov
inc
aaa
fnstsw
pop
jne
lock
leave
mov
pop
jne
cld
mov
std
std
mov
jo
add
sbb
frstor
stos
and
(bad)
push
jg
add
stos
and
(bad)
push
into
in
hlt
enter
sbb
sub
dec
sbb
xor
imul
stc
cdq
and
cmp
mov
pop
jno
out
add
dec
cmc
push
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
mov
ds
in
xchg
add
add
pop
push
jb
add
jl
cmp
(bad)
xlat
xchg
fs
push
xor
mov
push
xrelease
cmps
das
inc
or
movs
and
add
stos
and
(bad)
push
jg
add
stos
and
(bad)
push
aaa
enter
dec
test
sub
repnz
in
mov
push
ret
(bad)
xchg
xchg
pusha
rcl
adc
mov
push
xchg
add
add
sbb
popa
clc
daa
dec
cmp
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
std
jne
cmps
add
pop
sar
test
mov
xchg
pop
loopne
int
je
fs
jg
add
stos
and
(bad)
push
jg
add
stos
and
(bad)
push
ja
add
dec
add
dec
cdq
std
add
cwde
sahf
rol
dec
inc
ret
push
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
inc
xor
xchg
jl
jmp
cwde
inc
cmp
test
pop
add
fstp
xchg
mov
pop
cmp
adc
(bad)
sbb
push
pop
(bad)
push
ja
add
stos
and
(bad)
push
jae
add
mov
ja
add
mov
cli
rol
jno
add
(bad)
int3
test
je
fstp
lds
adc
cwde
inc
cmp
loope
pop
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
leave
or
imul
mov
cdq
xor
inc
icebp
lds
ins
adc
inc
cmp
mov
ins
jno
xor
xor
pop
mov
push
mov
(bad)
enter
(bad)
push
jnp
add
cmps
sbb
jmp
cmp
push
and
mov
vpsubw
outs
loopne
cmp
mov
popa
gs
movs
inc
icebp
mov
pop
jno
scas
je
mov
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
xor
or
call
xchg
mov
add
test
in
aad
mov
xor
mov
aad
lds
cmps
daa
jns
fsub
inc
repz
mov
(bad)
(bad)
push
cmp
and
mov
pop
outs
jns
jle
jo
add
sub
call
xchg
mov
add
test
in
aad
mov
sbb
mov
mov
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
fsubr
mov
mov
sub
dec
jmp
cmp
add
test
in
aad
mov
sbb
xchg
jl
dec
push
dec
xor
sbb
dec
or
movs
pusha
fmul
movs
and
(bad)
push
jg
add
mov
int3
push
xor
jl
test
cmp
jge
loope
jo
sub
mov
dec
in
xchg
mov
add
test
in
aad
mov
sbb
test
in
xor
aad
mov
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
mov
cmp
imul
xchg
mov
add
test
in
lds
dec
sub
jl
sti
cdq
popa
mov
clc
int3
(bad)
int
dec
or
dec
cdq
dec
xchg
aad
ins
adc
(bad)
lods
addr16
icebp
cmc
and
cdq
int3
(bad)
int
dec
or
dec
cdq
call
fild
call
aad
mov
sbb
test
in
aad
mov
add
test
in
in
test
or
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
hlt
jmp
test
add
test
in
leave
xchg
mov
add
test
loope
pushf
shl
mov
mov
mov
in
aam
dec
or
dec
cdq
shr
xor
mov
push
daa
retf
adc
or
int3
(bad)
int
dec
or
aad
in
xchg
adc
add
popa
pop
pop
inc
dec
xlat
fstp
imul
xchg
mov
add
test
in
mov
mov
fs
add
test
add
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
fs
pop
sub
mov
mov
add
test
in
aad
mov
adc
dec
ret
jne
arpl
push
in
lods
and
int
xor
or
dec
cdq
int3
(bad)
int
dec
or
mov
xor
sbb
int
dec
or
xor
mov
imul
or
fidiv
aad
mov
add
test
in
aad
mov
cmp
mov
push
dec
test
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
rcr
sub
aad
cmc
cmp
jns
add
scas
push
in
ins
call
jl
into
inc
xlat
xchg
add
sbb
jne
sbb
in
fs
outs
adc
sbb
int
dec
or
stc
clc
int
mov
sbb
int
dec
or
sub
lds
cmp
inc
out
add
cmp
in
dec
sub
dec
mov
cmp
add
test
jmp
xchg
xchg
pop
int
and
or
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
sub
sbb
(bad)
push
add
mov
xor
clc
test
std
out
cmp
(bad)
int
int
test
pop
scas
pop
icebp
cld
fs
leave
stc
mov
sbb
scas
jl
and
scas
(bad)
in
imul
dec
cdq
js
int
int
(bad)
jle
pop
adc
arpl
cdq
or
inc
loope
mov
adc
inc
inc
and
sbb
dec
pop
mov
mov
(bad)
loopne
aaa
frndint
mov
mov
test
add
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
dec
mov
shr
ja
add
and
scas
adc
cmp
dec
cdq
int3
jl
dec
jne
iret
dec
ja
cld
lods
dec
jmp
xor
nop
js
(bad)
rcr
push
and
mov
jmp
jnp
sbb
cld
sbb
mov
push
fld
les
jo
cmp
imul
cmp
inc
(bad)
int
jne
test
mov
sti
mov
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
jmp
clc
test
int3
(bad)
int
or
fmul
mov
dec
and
in
mov
cmp
sbb
push
mov
scas
xchg
(bad)
inc
jne
in
mov
mov
sbb
lds
inc
lds
cli
add
retf
mov
pop
cdq
pop
in
mov
leave
fisttp
pop
cmp
lods
push
in
icebp
sub
cmps
dec
sub
cdq
sub
cmp
dec
inc
pop
sbb
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
mov
fist
pop
out
cs
in
mov
loope
xchg
mov
sbb
mov
xchg
lds
shr
xchg
pusha
mov
xchg
mov
sub
aaa
in
xchg
nop
lock
sub
cmc
jl
clc
mov
cmc
std
stc
add
fdivr
pop
les
jl
cmp
sbb
mov
add
test
in
aad
mov
adc
icebp
xchg
pop
or
loop
mov
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
jne
jae
add
and
imul
aad
mov
add
test
jmp
stos
pop
jl
mov
cdq
icebp
sbb
push
xchg
clc
movs
rcr
sub
xor
fld
imul
rol
add
test
jo
imul
lds
cmp
imul
xchg
mov
sbb
test
loope
stos
in
fiadd
int3
lds
sbb
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
sbb
int
or
shl
addr16
sub
aad
popf
cmp
jns
add
test
in
aad
mov
add
dec
jmp
jp
pop
lds
loope
or
cmp
ins
add
push
in
call
add
push
(bad)
pop
xor
sbb
push
in
enter
xchg
jnp
mov
test
arpl
cmp
add
test
in
aad
mov
add
test
jmp
sbb
pop
sbb
lods
mov
gs
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
gs
dec
mov
xchg
mov
imul
dec
in
mov
add
test
in
aad
mov
sbb
lods
push
in
rol
call
lds
imul
sub
sub
mov
push
cmp
dec
jmp
test
iret
mov
pop
xor
sbb
test
jmp
cmp
add
test
in
leave
xchg
mov
add
ds
int3
mov
test
add
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
mov
into
lods
jo
add
scas
leave
test
ins
add
test
in
aad
mov
add
test
in
aad
mov
sbb
movs
inc
loope
add
xor
clc
sub
movs
sar
cmp
add
test
in
sbb
gs
cdq
push
(bad)
int
icebp
ins
(bad)
or
lds
in
test
in
mov
jae
je
mov
rol
adc
aad
mov
add
test
in
aad
mov
add
test
jmp
jg
in
sub
dec
cdq
sub
add
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
push
push
test
sub
call
mov
add
test
in
aad
mov
add
test
in
leave
xchg
mov
sbb
cwde
inc
sti
dec
std
or
lea
jmp
cmp
shr
pop
dec
add
dec
cdq
inc
(bad)
int
sbb
loope
sbb
test
in
leave
xchg
mov
or
sbb
test
call
mov
add
test
in
aad
mov
add
test
in
leave
xchg
mov
sbb
xchg
mov
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
aad
mov
add
test
in
leave
xchg
mov
in
ins
scas
repnz
test
in
mov
icebp
aad
mov
add
test
jmp
add
dec
cdq
mov
mov
cmp
imul
xchg
mov
xor
cmp
sbb
stc
pushf
in
les
cmp
call
xchg
mov
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
aad
mov
add
test
in
leave
mov
mov
add
or
test
call
mov
add
xor
bound
ret
add
dec
cdq
mov
sar
les
in
and
push
in
aad
mov
adc
push
mov
dec
mov
sbb
mov
aad
mov
sbb
test
in
aad
mov
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
aad
mov
add
test
in
add
out
int3
(bad)
int
xchg
or
lea
clc
fs
je
cmp
and
aas
add
dec
cdq
xor
and
test
aad
mov
mov
sbb
pop
dec
cmp
sbb
pusha
pop
lds
sub
imul
aad
mov
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
aad
mov
sbb
lods
push
in
add
cdq
int3
(bad)
int
dec
or
rcl
test
test
int
fs
or
dec
cdq
int3
(bad)
int
dec
or
test
scas
fldcw
mov
and
or
adc
test
add
dec
cdq
hlt
xor
adc
cmp
imul
xchg
mov
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
aad
mov
add
inc
aas
leave
jns
retf
or
(bad)
int
dec
or
loope
repnz
push
nop
rcr
jmp
lock
std
cmc
push
movs
in
test
adc
xchg
clc
je
(bad)
test
or
jmp
ror
sbb
int
lock
outs
sbb
lods
push
in
aad
mov
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
adc
jno
loopne
test
jmp
cmp
add
test
in
leave
xchg
mov
sbb
mov
les
sbb
int
(bad)
jne
stos
add
mov
cld
mov
pop
jmp
mov
fcmovnbe
mov
xchg
inc
adc
rol
jnp
shl
fs
and
popf
pop
pop
dec
or
dec
cdq
or
imul
mov
add
test
in
aad
mov
sbb
cdq
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
push
push
test
cdq
imul
shr
inc
mov
dec
sub
scas
in
sbb
push
mov
xor
add
dec
cdq
push
mov
rcr
xor
out
dec
lahf
fistp
dec
xchg
dec
mov
push
mov
(bad)
push
xchg
xlat
scas
imul
jbe
into
adc
call
aam
push
mov
xor
cdq
int3
(bad)
int
adc
mov
xchg
pusha
mov
add
jg
dec
sub
stos
jmp
mov
xchg
cmp
ret
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
in
test
or
gs
fisttp
dec
(bad)
std
sbb
xor
out
add
push
iret
sti
dec
or
dec
cdq
pusha
mov
ror
jae
sub
mov
out
push
xlat
call
mov
out
repnz
outs
cmp
int3
das
adc
xchg
push
pop
xor
sub
cmps
and
push
loopne
nop
dec
in
sbb
int
dec
or
lea
fild
xchg
dec
ds
mov
fisttp
dec
mov
test
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
(bad)
or
sar
ja
dec
and
jge
mov
dec
and
jne
test
(bad)
int
dec
or
dec
cdq
enter
in
or
cmc
xor
shr
repnz
jmp
inc
iret
pop
(bad)
das
repnz
xor
push
jg
xchg
xlat
inc
mov
sbb
(bad)
sbb
jo
dec
imul
ror
sbb
aaa
push
mov
cmp
ja
dec
and
jge
mov
dec
das
lods
dec
pop
pusha
sbb
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
adc
int
jo
fild
out
aad
sub
inc
push
fisttp
jmp
scas
pop
stc
push
xor
rol
jg
out
(bad)
test
adc
pushf
jae
and
test
gs
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
mov
xlat
mov
sbb
add
out
div
out
pop
push
int3
dec
xchg
cmc
mov
ins
pop
aaa
push
mov
arpl
int
sub
aaa
out
pop
pop
xor
int
sbb
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
pop
lea
mov
push
cmc
mov
int
xchg
sub
cmp
push
loope
movs
dec
aam
mov
sbb
mov
ins
rol
and
fxch
dec
sbb
push
pop
loope
lea
out
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
jne
jp
aaa
inc
push
pushf
xchg
jmp
add
adc
les
ret
sbb
jl
xchg
cmps
fs
sbb
mov
add
ror
adc
dec
and
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
jge
scas
jge
retf
or
shr
enter
aas
int
pop
lods
nop
add
cmp
jno
or
fldcw
jmp
and
xlat
ret
jne
in
shr
pushf
dec
cwde
shl
js
pusha
and
iret
fistp
ins
mov
xor
out
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
stc
add
push
unpcklps
xlat
aam
add
lods
dec
sti
xchg
into
add
mov
sbb
jo
ds
inc
adc
mov
add
test
lea
cdq
cmp
repz
in
cmps
push
mov
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
gs
ins
sub
pop
in
fldcw
cmc
loope
mov
cmc
lds
not
shl
lods
icebp
sub
cmp
lahf
jb
mov
add
inc
iret
push
in
aad
leave
dec
mov
les
popf
xchg
xor
jl
sbb
sti
into
sar
mov
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
jmp
stos
push
cmp
sub
pop
gs
in
sub
das
xor
sub
sar
xchg
push
fst
test
mov
out
sub
add
jno
xor
sbb
outs
pop
cli
mov
xchg
pop
pop
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
js
int
add
(bad)
aad
cmp
pop
imul
jg
push
push
pop
imul
shl
xor
sbb
imul
add
push
retf
add
push
std
sub
dec
aaa
push
les
xor
dec
test
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
clc
(bad)
int
mov
rol
out
ret
sub
mov
movs
stc
add
int3
mov
aad
aas
enter
sub
pop
ins
or
nop
push
cmp
jno
inc
and
jg
jg
push
mov
push
sbb
inc
rcl
push
fsub
pusha
xchg
ror
sbb
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
mov
mov
sbb
push
into
adc
inc
dec
or
dec
cdq
fmul
or
adc
int
mov
fild
int
sub
or
dec
cdq
fdivr
xor
movs
push
mov
adc
pop
fwait
mov
xor
mov
in
in
sbb
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
xchg
or
xor
or
dec
jmp
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
add
xchg
inc
aam
xchg
sti
adc
pop
push
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
lock
int
mov
test
jg
cmp
cmps
dec
std
std
sbb
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
gs
ins
sbb
bnd
or
mov
dec
cdq
int3
(bad)
int
test
out
inc
mov
sbb
jg
shl
add
xor
mov
(bad)
pop
arpl
cs
(bad)
add
dec
cdq
rcl
sub
inc
sbb
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
and
stos
cmc
mov
dec
ja
add
xlat
add
adc
js
(bad)
mov
pop
ficom
mov
ins
jo
inc
mov
xchg
pop
(bad)
fwait
ins
adc
out
out
in
mov
mov
or
mov
pop
loope
jmp
xor
test
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
push
test
xor
jmp
add
mov
lock
inc
(bad)
mov
push
maskmovq
test
dec
jnp
or
jmp
cmps
mov
pop
js
sti
cmp
and
push
ja
fcom
sub
mov
xor
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
xor
dec
xor
(bad)
xchg
(bad)
jecxz
imul
pop
inc
mov
adc
mov
rol
ret
and
jbe
push
aas
pop
jmp
sub
xlat
or
lahf
jnp
popf
inc
xchg
dec
jns
sbb
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
ins
or
push
cmp
rol
add
dec
cdq
int3
(bad)
int
pop
or
adc
xor
cmp
lds
les
sbb
int
pop
in
or
popf
js
test
test
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
xchg
mov
shl
(bad)
clc
in
int
and
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
sub
int
inc
arpl
cld
iret
pop
enter
test
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
xor
int
mov
and
pusha
jge
add
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
js
int
imul
in
into
sub
test
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
js
test
cmp
jns
int3
mov
test
add
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
dec
cdq
int3
(bad)
int
dec
or
test
sbb
add
test
add
test
add
test
inc
test
inc
test
add
test
add
test
sbb
add
test
add
test
add
test
add
test
add
test
clc
inc
xchg
push
inc
test
clc
mov
test
lock
rol
dec
test
add
xchg
pop
inc
test
or
fiadd
inc
call
sahf
mov
rcr
push
add
xchg
push
sbb
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
add
xchg
push
add
xchg
push
push
xlat
xchg
push
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
dec
add
mov
xchg
pop
inc
test
add
jns
clc
inc
xchg
push
inc
test
call
inc
test
clc
mov
rol
inc
test
lock
rol
dec
test
add
xchg
add
xchg
push
inc
test
clc
mov
test
cld
mov
test
add
jno
add
rol
inc
test
or
(bad)
fimul
inc
sahf
fnsave
xchg
mov
shl
push
add
xchg
push
sbb
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
add
xchg
push
push
xlat
xchg
push
add
xchg
push
add
mov
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
mov
loopne
jb
or
xchg
pop
inc
test
add
test
clc
mov
adc
add
xchg
push
inc
test
add
ins
xlat
cld
mov
test
add
shl
mov
test
add
xchg
add
rol
inc
test
add
adc
push
inc
test
cld
mov
rol
inc
test
add
adc
pop
inc
test
add
xchg
ficom
pop
xchg
fnstenv
xchg
mov
xlat
call
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
push
fist
push
push
fisttp
jbe
retf
xchg
push
push
xlat
xchg
dec
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
mov
call
pop
xchg
pop
inc
test
add
test
add
xchg
push
inc
test
add
xchg
push
inc
test
clc
mov
test
clc
inc
xchg
pop
inc
test
add
test
add
xchg
add
rol
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
mov
or
rol
inc
test
add
xchg
ficomp
sahf
fnsave
xchg
mov
rcr
push
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
add
xchg
push
add
xchg
dec
adc
call
rcl
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
mov
call
pop
xchg
pop
inc
test
add
jns
clc
mov
test
add
jns
clc
mov
test
clc
mov
test
add
test
clc
inc
xchg
push
inc
test
add
xchg
add
xchg
pop
inc
test
add
adc
pop
inc
test
add
mov
or
xchg
pop
inc
test
add
xchg
(bad)
adc
adc
inc
test
add
popf
ficom
pop
sahf
(bad)
mov
push
xlat
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
xchg
xchg
push
inc
sub
pop
adc
out
dec
and
xlat
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
mov
xchg
pop
inc
test
add
rol
xchg
pop
inc
test
add
jns
clc
mov
test
add
xchg
pop
inc
test
add
adc
push
inc
test
add
jns
add
xchg
or
xchg
pop
inc
test
add
(bad)
(bad)
or
rol
inc
test
add
mov
or
xchg
pop
inc
test
add
(bad)
or
ror
inc
test
add
ficomp
call
mov
push
xlat
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
mov
ss
inc
test
out
dec
sub
retf
call
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
mov
xchg
push
inc
sub
push
inc
test
lock
test
clc
mov
test
add
(bad)
sar
inc
xchg
push
inc
test
add
xchg
sbb
xchg
add
fld
mov
or
rol
inc
test
add
mov
add
rol
inc
test
add
adc
add
fld
mov
adc
aad
pop
xchg
leave
sar
mov
shl
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
xchg
sahf
dec
inc
xor
xchg
shr
es
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
mov
stc
mov
xchg
push
inc
sub
pop
inc
adc
lock
rol
inc
test
add
adc
pop
inc
test
add
test
add
xchg
add
sub
add
xchg
sbb
rol
inc
test
add
mov
or
xchg
pop
inc
test
add
mov
add
xchg
pop
inc
test
add
adc
add
rol
ficom
xchg
aad
ins
movs
icebp
xlat
xchg
push
xlat
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
lahf
xchg
push
inc
xor
xor
pop
test
xlat
sahf
push
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
mov
add
xchg
push
inc
sub
pop
inc
test
add
adc
pop
inc
test
add
rol
inc
xchg
pop
inc
test
add
(bad)
rol
xchg
push
inc
test
add
rcr
xchg
cmovne
ror
xchg
pop
inc
test
add
(bad)
ror
adc
inc
sbb
or
rol
inc
test
add
xchg
fimul
dec
xchg
aad
ins
mov
jb
cmps
dec
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
add
xchg
xor
jle
leave
jecxz
ss
sahf
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
mov
or
bound
aad
inc
jge
clc
inc
xchg
pop
inc
test
add
adc
pop
inc
test
add
rol
xchg
pop
inc
test
add
(bad)
sar
inc
xchg
push
inc
test
add
xchg
adc
rol
inc
test
add
test
add
rol
inc
test
add
test
add
rol
inc
test
add
jge
add
rol
inc
test
add
mov
adc
aad
gs
(bad)
mov
shl
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
add
xchg
xor
jle
leave
jecxz
ss
sahf
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
mov
or
xchg
pop
inc
sbb
clc
mov
test
add
(bad)
(bad)
clc
inc
xchg
push
inc
test
add
xchg
pop
inc
test
add
(bad)
sar
inc
xchg
pop
inc
test
or
jns
add
xchg
adc
xchg
pop
inc
test
add
mov
or
rol
inc
sbb
or
xchg
pop
inc
test
add
test
add
rol
inc
test
add
mov
adc
xchg
aad
popa
cdq
int
cli
mov
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
rcl
push
add
xchg
push
add
xchg
push
push
rcl
push
push
xlat
xchg
push
add
xchg
push
add
xchg
inc
adc
jecxz
xor
xlat
call
rcl
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
mov
adc
outs
xchg
pop
inc
test
add
jno
add
xchg
pop
inc
test
add
adc
pop
inc
test
add
test
add
rol
inc
test
add
adc
push
inc
test
add
xchg
adc
xchg
pop
inc
test
add
mov
or
xchg
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
mov
adc
aad
gs
int
repnz
xlat
sahf
dec
add
xchg
push
push
xlat
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
push
xlat
xchg
dec
add
mov
rcl
push
push
rcl
push
push
retf
xchg
push
add
xchg
dec
add
xchg
push
aas
adc
(bad)
ds
push
add
xchg
push
add
xchg
push
push
rcl
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
mov
adc
outs
xchg
pop
inc
test
add
jge
add
rol
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
adc
push
inc
test
add
xchg
sbb
xchg
pop
inc
test
add
adc
pop
inc
test
add
(bad)
rol
dec
xchg
pop
inc
test
add
(bad)
ror
xchg
pop
inc
test
add
mov
sbb
sahf
fst
(bad)
mov
xlat
sahf
dec
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
mov
xlat
mov
(bad)
push
push
rcl
push
add
xchg
dec
add
xchg
push
add
xchg
push
add
mov
fucom
adc
rcl
dec
add
xchg
push
add
xchg
push
add
xchg
push
add
sahf
push
or
xchg
pop
push
rcr
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
add
mov
sbb
push
rol
inc
adc
add
xchg
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
rol
dec
xchg
push
inc
test
add
xchg
or
rol
inc
test
add
mov
or
xchg
pop
inc
test
add
(bad)
rol
xchg
pop
inc
test
add
(bad)
rol
inc
xchg
pop
inc
test
add
adc
lahf
pop
(bad)
leave
sar
mov
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
pop
pop
jle
imul
das
xchg
adc
mov
mov
sti
mov
outs
(bad)
data16
xchg
mov
aaa
sbb
shl
ds
xchg
dec
or
sahf
push
sti
mov
jp
fwait
cmps
push
push
sub
cmp
xchg
test
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
mov
sbb
xchg
pop
inc
test
add
jge
clc
inc
xchg
pop
inc
test
add
rol
xchg
pop
inc
test
add
(bad)
rol
inc
xchg
pop
inc
test
add
(bad)
add
aad
inc
test
add
jns
add
xchg
or
rol
inc
test
add
mov
or
xchg
pop
inc
test
add
(bad)
rol
xchg
pop
inc
adc
add
rol
inc
test
add
(bad)
fimul
mov
xchg
pop
(bad)
leave
shl
mov
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
pop
inc
adc
dec
or
cdq
fisttp
bound
nop
push
aam
stos
ds
into
sti
mov
push
cmp
(bad)
sti
ds
cs
mov
(bad)
outs
or
dec
lods
call
lods
inc
clc
pop
into
std
bound
or
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
add
mov
sbb
xchg
pop
inc
test
add
jge
clc
inc
xchg
pop
inc
test
add
(bad)
rol
xchg
pop
inc
test
add
adc
pop
inc
test
add
(bad)
rol
xchg
pop
inc
adc
add
xchg
add
rol
inc
test
add
(bad)
ror
inc
xchg
pop
inc
test
add
adc
push
inc
test
add
rol
inc
test
add
(bad)
(bad)
add
ror
jmp
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
push
sahf
add
inc
test
add
mov
ror
inc
test
adc
into
std
das
xor
fstp
mov
in
sbb
loope
lods
(bad)
adc
and
add
mov
rol
inc
test
add
ror
fidivr
fst
call
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
dec
add
push
rol
inc
test
add
jns
clc
mov
test
add
adc
pop
inc
test
add
adc
add
aad
inc
adc
push
inc
test
add
xchg
or
xchg
add
aad
inc
mov
or
xchg
add
fld
xchg
pop
inc
test
add
test
or
xchg
pop
inc
test
add
adc
xchg
popa
xchg
icebp
shr
mov
xlat
sahf
dec
push
rcl
push
add
xchg
push
push
rcl
push
add
xchg
push
push
rcl
push
push
rcl
push
push
fist
cmps
add
xchg
and
or
rol
inc
test
add
xchg
ror
xchg
pop
inc
test
add
test
or
xchg
pop
inc
test
add
(bad)
ror
dec
xchg
pop
inc
test
add
adc
pop
inc
test
add
xlat
fadd
rcr
outs
fist
cmps
pop
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
dec
add
bound
aad
inc
test
clc
mov
test
add
adc
pop
inc
test
add
(bad)
rol
dec
xchg
pop
inc
test
add
adc
push
inc
test
add
xchg
add
rol
inc
test
add
(bad)
(bad)
or
rol
inc
test
add
mov
or
xchg
pop
inc
test
add
test
add
rol
inc
test
add
ror
adc
push
add
retf
sahf
dec
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
push
rcl
push
sbb
mov
pop
test
mov
or
rol
inc
test
add
mov
or
rol
inc
test
add
(bad)
rol
dec
xchg
pop
inc
test
add
mov
adc
rol
inc
test
add
adc
push
inc
test
in
inc
xchg
(bad)
push
sahf
pop
push
rcl
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
dec
push
and
xchg
pop
inc
test
add
jns
clc
mov
and
push
inc
test
add
xchg
pop
inc
sbb
add
xchg
push
inc
test
add
jns
add
xchg
or
xchg
pop
inc
test
add
(bad)
(bad)
or
xchg
pop
inc
test
add
adc
pop
inc
test
add
test
or
xchg
pop
inc
test
add
adc
xchg
push
mov
shr
mov
push
retf
mov
rcl
push
add
xchg
push
add
xchg
push
add
xchg
push
push
retf
mov
xlat
xchg
push
push
retf
xchg
push
push
retf
xchg
dec
push
fist
add
add
(bad)
ror
xchg
pop
inc
test
add
(bad)
ror
xchg
add
aad
inc
mov
add
rol
inc
test
add
xchg
(bad)
or
rol
inc
test
add
adc
push
inc
test
add
xchg
out
pop
jnp
sahf
pop
add
xchg
dec
push
rcl
push
push
rcl
push
add
xchg
push
push
rcl
push
push
rcl
push
add
mov
sub
xchg
pop
inc
test
add
jge
clc
mov
test
add
shl
mov
test
add
jns
clc
mov
test
add
rol
xchg
pop
inc
test
add
jns
add
xchg
or
rol
inc
test
add
adc
pop
inc
adc
add
xchg
pop
inc
test
add
ror
xchg
pop
inc
test
add
(bad)
ror
dec
xchg
vphaddbw
out
mov
push
iret
mov
xlat
xchg
push
sbb
xchg
push
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
inc
push
fisttp
pop
ret
popaw
pop
inc
test
add
adc
add
fld
(bad)
rol
inc
xchg
pop
inc
test
add
(bad)
rol
inc
xchg
pop
inc
adc
add
rol
inc
test
add
test
cld
mov
test
cld
mov
shr
retf
call
xlat
xchg
push
push
xlat
xchg
push
push
xlat
xchg
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
add
mov
sub
xchg
push
inc
test
clc
mov
test
add
test
clc
inc
xchg
pop
inc
adc
add
rol
inc
test
add
adc
pop
inc
test
add
rol
xchg
pop
inc
test
add
adc
pop
inc
test
add
(bad)
rol
xchg
pop
inc
test
add
jno
or
xchg
pop
inc
test
add
(bad)
ror
inc
xchg
(bad)
iret
out
mov
push
iret
mov
retf
xchg
push
push
xlat
mov
xlat
xchg
push
push
rcl
push
add
mov
xlat
xchg
dec
sbb
xchg
push
xor
pop
add
jns
out
or
xchg
pop
push
sbb
add
aad
inc
test
add
adc
pop
inc
test
add
adc
add
fld
xchg
pop
inc
test
add
test
add
xchg
push
inc
test
add
xchg
and
and
iret
adc
jb
scas
jbe
xlat
xchg
dec
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
dec
add
ja
rol
inc
test
add
test
lock
xchg
push
inc
test
clc
mov
test
lock
rol
inc
test
add
(bad)
sar
inc
xchg
push
inc
test
add
xchg
or
xchg
add
fld
xchg
pop
inc
test
add
adc
pop
inc
adc
or
xchg
add
rol
adc
push
(bad)
vcvtpd2dq
push
iret
mov
xlat
xchg
push
sbb
xchg
dec
add
mov
xlat
xchg
push
add
xchg
push
add
mov
out
push
push
(bad)
xchg
es
pop
xchg
sbb
or
rol
inc
test
add
(bad)
rol
xchg
pop
inc
test
add
test
or
xchg
pop
inc
test
add
adc
push
inc
test
or
xchg
pop
inc
test
add
test
cld
mov
test
call
inc
test
add
(bad)
sar
add
add
mov
iret
mov
rcl
push
add
xchg
push
push
rcl
push
add
mov
xor
xchg
push
dec
test
lock
xchg
push
inc
test
add
jge
lock
rol
inc
test
add
jge
cld
mov
test
add
adc
pop
inc
test
add
jge
add
xchg
or
xchg
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
jno
or
xchg
add
aad
inc
mov
or
adc
pop
add
retf
call
rcl
dec
add
mov
xlat
xchg
push
push
xlat
xchg
dec
push
fisttp
pop
imul
out
scas
and
inc
test
add
(bad)
ror
inc
xchg
pop
inc
test
add
(bad)
rol
dec
xchg
pop
inc
test
add
adc
pop
inc
test
add
test
add
xchg
push
inc
test
add
adc
pop
inc
test
add
sar
mov
test
add
test
clc
mov
test
or
adc
cmps
jmp
(bad)
cmp
cmp
mov
dec
add
mov
rcl
push
push
xlat
xchg
push
add
xchg
push
add
mov
xor
push
rol
inc
test
add
test
cld
inc
xchg
pop
inc
test
add
test
lock
rol
inc
test
add
jns
clc
inc
xchg
pop
inc
test
add
adc
push
inc
test
add
xchg
or
xchg
pop
inc
test
add
(bad)
(bad)
add
rol
inc
test
add
(bad)
(bad)
add
xchg
pop
inc
test
add
jno
or
xchg
add
fld
xchg
xchg
ror
test
add
adc
mov
xlat
xchg
dec
add
mov
rcl
cmp
(bad)
cmps
push
push
or
push
or
xchg
add
rol
xchg
pop
inc
test
add
adc
pop
inc
test
add
test
add
rol
inc
test
add
adc
push
inc
test
add
(bad)
rcl
mov
pop
inc
test
add
sar
inc
xchg
push
inc
test
cld
inc
xchg
pop
inc
test
add
jns
lock
aad
inc
test
movs
ins
test
xlat
or
iret
xchg
pushw
xlat
xchg
push
push
ror
push
push
rcl
push
add
mov
cmp
push
rol
inc
test
add
jns
cld
mov
test
add
shl
mov
rol
inc
test
add
test
add
xchg
push
inc
test
clc
inc
xchg
push
inc
test
add
xchg
add
rol
inc
test
add
xchg
rcl
xchg
pop
inc
test
add
sar
inc
xchg
pop
inc
adc
or
rol
inc
test
add
adc
arpl
(bad)
mov
xlat
scas
xor
(bad)
(bad)
push
add
xchg
push
push
xlat
xchg
inc
push
mov
sub
aaa
or
(bad)
rol
pop
xchg
pop
inc
test
add
adc
pop
inc
test
add
test
add
rol
inc
test
add
(bad)
rol
mov
rol
inc
test
add
test
add
xchg
pop
inc
adc
add
aad
inc
test
add
test
clc
mov
test
clc
mov
test
add
xchg
push
inc
test
add
jns
sub
not
ror
inc
push
ror
push
add
xchg
push
push
sti
mov
xor
push
rol
inc
test
add
xchg
pop
inc
test
add
test
clc
inc
xchg
push
inc
test
clc
inc
xchg
pop
inc
adc
cld
inc
xchg
push
inc
test
add
xchg
add
rol
inc
test
add
mov
or
rol
inc
sbb
add
xchg
pop
inc
test
add
jge
add
rol
inc
test
add
adc
pop
inc
test
ret
(bad)
mov
xlat
scas
xor
(bad)
jmp
xlat
xchg
inc
push
retf
xchg
jae
bound
dec
xchg
push
inc
test
or
xchg
pop
inc
test
add
adc
pop
inc
test
add
test
add
rol
inc
test
add
adc
pop
inc
test
add
test
clc
inc
xchg
pop
inc
test
add
adc
pop
inc
test
add
adc
push
inc
test
clc
mov
test
clc
mov
test
cld
mov
sbb
jmp
pop
cmp
call
xlat
xchg
push
add
xchg
push
push
sti
mov
xor
xchg
push
inc
sub
pop
inc
adc
add
xchg
push
inc
test
clc
mov
test
add
jns
hlt
mov
and
add
rol
inc
test
add
(bad)
ror
dec
xchg
pop
inc
test
add
jns
add
rol
inc
test
add
jno
or
xchg
pop
inc
test
add
adc
pop
inc
test
mov
mov
push
push
xlat
xchg
dec
push
xlat
xchg
inc
push
push
mov
movs
jns
sbb
pop
mov
add
lds
xchg
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
test
clc
mov
sub
pop
inc
test
add
adc
push
inc
test
clc
mov
test
add
jns
clc
mov
test
hlt
mov
test
out
push
sbb
sbb
xchg
push
add
xchg
push
add
mov
xor
xchg
push
inc
lea
clc
mov
adc
clc
mov
test
clc
mov
test
add
jno
in
xchg
push
inc
cmp
or
xchg
pop
inc
test
add
adc
pop
inc
test
or
test
lock
rol
inc
test
add
(bad)
(bad)
or
xchg
pop
inc
test
add
(bad)
ror
adc
inc
test
mov
mov
iret
cmps
sbb
xchg
dec
push
xlat
xchg
pop
es
pop
jno
or
rol
dec
test
add
popf
ror
push
adc
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
(bad)
rol
xchg
pop
inc
adc
or
xchg
pop
inc
test
add
adc
pop
inc
test
add
jns
clc
mov
test
add
jno
clc
mov
rol
inc
test
add
jns
lock
aad
inc
test
cld
inc
xchg
push
inc
sub
dec
mov
pusha
iret
mov
push
push
rcl
push
add
outs
xchg
push
dec
sub
clc
mov
test
add
adc
add
sub
add
mov
push
inc
test
hlt
mov
test
add
xchg
or
xchg
pop
inc
test
add
adc
add
fisttp
test
clc
mov
test
add
adc
pop
inc
test
add
mov
or
xchg
push
inc
test
mov
scas
sub
mov
xchg
dec
sbb
xchg
sbb
int3
out
inc
xchg
pop
inc
test
add
popf
rol
dec
xchg
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
adc
push
inc
test
add
xchg
pop
inc
test
add
test
add
rol
inc
test
add
jns
clc
inc
xchg
push
inc
test
clc
mov
rol
inc
test
add
jns
lock
rol
inc
test
add
jns
clc
inc
xchg
pop
inc
test
or
pop
jbe
sahf
mov
xchg
xlat
xchg
push
sbb
xchg
dec
add
adc
mov
xchg
push
dec
test
add
jns
cld
mov
test
add
jge
clc
mov
test
clc
mov
test
lock
test
add
xchg
or
xchg
pop
inc
test
add
(bad)
ror
xchg
pop
inc
sbb
cld
mov
aad
inc
test
add
(bad)
rol
dec
xchg
pop
inc
test
add
mov
or
shl
add
shl
push
sbb
xchg
dec
sbb
xchg
inc
push
scas
sahf
pop
or
xchg
dec
dec
add
fisubr
add
xchg
rol
dec
xchg
pop
inc
test
add
adc
pop
inc
test
add
(bad)
ror
xchg
pop
inc
test
add
adc
push
inc
test
add
xchg
pop
inc
test
add
adc
pop
inc
test
add
sar
inc
xchg
push
inc
test
add
jge
clc
mov
test
lock
test
cld
mov
test
xlat
ss
fisttp
dec
push
rcl
dec
add
adc
mov
xchg
push
inc
test
lock
test
clc
mov
test
cld
inc
xchg
push
inc
test
cld
inc
xchg
push
inc
test
add
xchg
cmovne
rcl
xchg
pop
inc
test
add
shl
mov
rol
inc
test
add
adc
add
aad
inc
xchg
(bad)
adc
adc
inc
add
fistp
push
sbb
xchg
dec
sbb
xchg
inc
push
mov
retf
inc
test
add
(bad)
ror
xchg
pop
inc
test
add
(bad)
rol
xchg
pop
inc
test
add
ror
xchg
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
jns
clc
mov
test
lock
test
clc
inc
xchg
push
inc
test
add
jno
add
xchg
inc
inc
test
xlat
xchg
dec
add
xchg
push
add
xchg
push
push
rcl
push
add
mov
xchg
pop
inc
(bad)
rol
xchg
pop
inc
test
add
test
clc
mov
test
add
test
add
xchg
push
inc
test
lock
mov
add
and
add
xchg
cmovne
(bad)
adc
adc
inc
test
or
(bad)
sar
mov
test
add
adc
pop
inc
test
add
mov
or
shl
add
fist
push
sbb
xchg
dec
sbb
xchg
inc
push
mov
push
mov
add
(bad)
rol
inc
xchg
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
(bad)
rol
dec
adc
inc
test
add
jns
add
xchg
push
inc
test
lock
test
clc
mov
test
add
jno
clc
mov
rcl
inc
test
out
sti
sbb
xchg
dec
add
mov
rcl
dec
add
xchg
cmp
xchg
push
inc
sub
push
inc
test
add
xchg
push
inc
test
add
xchg
push
inc
test
hlt
mov
test
add
xchg
or
xchg
add
fld
xchg
pop
inc
test
add
test
clc
mov
test
add
jns
or
xchg
pop
inc
test
add
(bad)
(bad)
adc
shl
test
(bad)
lods
inc
xlat
call
rcl
inc
push
mov
fwait
push
(bad)
clc
out
sahf
lds
inc
test
add
mov
or
xchg
pop
inc
test
add
adc
pop
inc
test
add
mov
or
adc
inc
test
add
xchg
rol
inc
xchg
pop
inc
test
add
rol
xchg
push
inc
test
add
test
add
rol
inc
test
add
ret
xchg
or
rol
xchg
pop
inc
test
add
test
clc
mov
test
add
jge
lock
test
out
xchg
or
sahf
dec
add
xchg
push
push
rcl
dec
push
sti
mov
inc
mov
xchg
push
inc
test
clc
mov
test
clc
inc
xchg
pop
inc
test
add
test
add
xchg
push
inc
test
lock
test
add
jns
add
xchg
adc
xchg
pop
inc
add
or
xchg
pop
inc
test
add
jns
clc
mov
test
add
jge
or
xchg
add
lds
xchg
arpl
int
lods
inc
xlat
mov
push
push
xlat
xchg
dec
push
rcl
push
push
repnz
mov
pop
inc
add
or
xchg
pop
inc
test
add
adc
add
fld
mov
push
icebp
jge
add
test
add
xchg
pop
inc
test
add
(bad)
sar
inc
xchg
push
inc
and
add
rol
inc
test
add
jno
or
ins
pop
lea
sar
mov
rol
inc
adc
clc
inc
xchg
push
inc
test
add
jge
lock
test
xchg
stos
xlat
dec
rcl
push
push
rcl
dec
add
jbe
add
xchg
pop
inc
test
add
jge
clc
mov
test
clc
inc
xchg
pop
inc
test
add
test
clc
mov
test
add
xchg
push
inc
test
add
xchg
or
rol
inc
test
add
xchg
ror
xchg
pop
inc
test
add
jns
add
xchg
pop
inc
test
add
rol
inc
xchg
add
fld
xchg
pop
dec
test
ret
xor
sbb
jmp
xlat
xchg
dec
add
test
or
xchg
pop
inc
test
add
mov
rol
inc
test
add
xchg
ror
dec
xchg
pop
inc
test
pop
inc
adc
add
xchg
rol
inc
xchg
pop
inc
test
add
test
add
xchg
push
inc
and
pop
inc
test
add
test
push
(bad)
fsubr
shl
add
mov
rol
inc
test
clc
mov
test
clc
mov
test
bound
mov
sub
xlat
xchg
push
push
xlat
xchg
push
add
xchg
push
add
mov
inc
mov
xchg
pop
inc
test
add
test
clc
mov
test
clc
inc
xchg
push
inc
test
add
rol
inc
test
add
test
cld
inc
xchg
pop
inc
test
add
adc
or
aad
inc
test
add
adc
pop
inc
test
add
test
add
rol
inc
test
add
adc
add
aad
inc
xchg
ror
dec
xchg
addr16
test
(bad)
movs
inc
xlat
call
rcl
dec
push
outs
adc
xor
inc
or
sbb
push
or
add
xchg
pop
inc
test
add
xchg
rol
dec
adc
inc
test
scas
jnp
xchg
fimul
cmp
push
jns
ror
dec
sbb
inc
test
add
adc
pop
inc
test
add
mov
or
xchg
cmovne
xlat
dec
dec
cli
test
sahf
bound
xor
pop
cs
xchg
pop
inc
test
add
fdivp
dec
sbb
inc
test
add
test
pop
inc
or
xlat
xchg
push
add
xchg
push
add
mov
dec
mov
xchg
push
inc
test
cld
inc
xchg
pop
inc
test
add
jns
clc
mov
test
add
jns
add
xchg
pop
inc
test
add
test
clc
inc
xchg
pop
inc
adc
add
xchg
adc
adc
inc
test
add
test
add
rol
inc
test
add
adc
pop
inc
test
add
(bad)
rol
inc
xchg
pop
inc
test
add
mov
adc
xchg
addr16
(bad)
int
cmp
sbb
xchg
xlat
xchg
push
sbb
xchg
push
sbb
cmps
push
sbb
mov
push
pop
lods
fucomp
rcr
add
(bad)
ror
xchg
retf
dec
xchg
fpatan
pop
sti
push
fistp
sti
pop
add
mov
add
rol
inc
test
add
adc
pop
inc
test
add
mov
or
rol
inc
test
add
jno
and
and
(bad)
es
jae
dec
dec
or
inc
test
add
xchg
shl
inc
fidivr
int3
and
add
dec
jns
stos
pop
cli
inc
xlat
cli
push
or
xchg
push
push
rcl
dec
add
jbe
add
xchg
push
inc
lea
clc
mov
test
clc
mov
test
clc
mov
test
cld
mov
test
add
xchg
or
rol
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
sbb
add
rol
inc
test
add
(bad)
rcl
adc
push
or
xlat
mov
push
add
mov
out
push
sbb
test
outs
jle
aam
sub
inc
ret
push
sub
mov
sbb
scas
add
rcr
xchg
iret
ds
nop
fbstp
jb
psubw
add
rol
dec
xchg
pop
inc
test
add
test
add
rol
inc
test
add
mov
or
xchg
pop
inc
test
add
jge
or
fidivr
not
mov
add
xchg
rcr
jnp
jecxz
jp
fwait
mov
push
fstp
mul
mov
fidiv
xlat
xchg
push
push
rcl
dec
add
jbe
clc
arpl
sub
xchg
push
inc
test
clc
mov
test
cld
mov
test
lock
xchg
push
inc
test
add
xchg
adc
rol
inc
test
add
mov
or
rol
inc
test
add
rol
xchg
pop
inc
test
add
(bad)
ror
xchg
pop
inc
test
add
popf
rcl
mov
ja
(bad)
int
retf
fist
push
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
xlat
xchg
push
or
call
retf
xchg
pop
or
test
movs
fild
push
add
mov
pop
dec
js
add
test
or
xchg
pop
inc
test
add
test
add
rol
inc
test
add
mov
or
adc
inc
test
add
adc
fcomi
inc
inc
shl
data16
shl
int
into
out
sbb
shl
push
push
rcl
pop
push
iret
xchg
push
adc
xchg
dec
push
xlat
xchg
push
push
rcl
push
add
xchg
push
add
jbe
add
xchg
pop
inc
adc
cld
mov
rol
inc
test
add
adc
pop
inc
test
add
test
clc
inc
xchg
push
inc
test
cld
dec
xchg
push
inc
test
add
xchg
adc
xchg
pop
inc
test
add
ror
xchg
pop
inc
test
add
rol
mov
test
add
(bad)
ror
xchg
pop
inc
test
add
ficomp
xchg
fnstcw
xchg
cmc
xlat
(bad)
mov
push
ror
push
push
rcl
push
add
xchg
dec
add
mov
rcl
push
add
xchg
cmp
stos
mov
daa
outs
mov
cli
push
or
xchg
push
xor
xchg
adc
loope
int
inc
(bad)
rol
inc
xchg
pop
inc
test
add
(bad)
rol
dec
xchg
pop
inc
test
add
mov
add
xchg
pop
inc
test
add
adc
jecxz
je
xlat
mov
push
xlat
mov
(bad)
es
ret
xlat
mov
rcl
dec
push
xlat
xchg
push
push
xlat
mov
xlat
mov
rcl
push
add
xchg
push
push
sti
xchg
push
add
jbe
cld
arpl
sub
xchg
push
inc
test
clc
mov
test
add
test
clc
mov
test
add
adc
push
inc
test
add
xchg
or
rol
inc
test
add
mov
or
xchg
pop
inc
test
add
(bad)
rol
xchg
pop
inc
test
add
mov
or
rol
inc
test
add
popf
ficom
dec
xchg
aad
gs
icebp
xlat
(bad)
mov
push
ror
push
push
xlat
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
push
xlat
xchg
push
push
xlat
xchg
push
push
xlat
xchg
dec
push
ror
dec
pop
rol
dec
or
xchg
push
es
call
add
ror
xchg
pop
inc
test
add
(bad)
rol
dec
xchg
pop
inc
test
add
(bad)
rol
dec
xchg
pop
inc
test
add
adc
mul
in
mov
dec
push
rcl
pop
push
iret
mov
xlat
xchg
push
or
xchg
push
push
rcl
push
push
xlat
xchg
push
push
rcl
push
push
rcl
push
push
sti
mov
dec
mov
xchg
push
inc
test
add
jne
hlt
mov
rol
inc
test
cld
mov
test
add
jns
add
xchg
pop
inc
test
add
test
cld
dec
xchg
pop
inc
test
add
jns
add
rol
dec
xchg
add
aad
inc
mov
or
rol
inc
test
add
xchg
ror
xchg
pop
inc
sbb
or
rol
inc
test
add
xchg
(bad)
adc
xchg
shl
popf
int
shl
push
ror
push
push
xlat
xchg
push
push
rcl
push
push
rcl
push
push
retf
xchg
push
add
xchg
push
push
xlat
xchg
push
push
rcl
push
add
xchg
push
add
xchg
dec
cs
ret
inc
test
add
xchg
ror
xchg
pop
inc
test
add
adc
pop
inc
adc
adc
xchg
pop
inc
test
add
adc
xchg
out
sub
xor
xchg
push
add
mov
xlat
xchg
push
push
xlat
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
dec
push
sti
adc
mov
xchg
pop
inc
test
add
jno
cld
mov
test
add
xchg
pop
inc
adc
add
xchg
push
inc
test
clc
inc
xchg
pop
inc
test
add
test
add
xchg
or
rol
inc
test
add
mov
or
xchg
pop
inc
test
add
mov
add
rol
inc
test
add
xchg
ror
xchg
add
rol
xchg
shr
xchg
leave
xlat
retf
out
push
push
ror
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
push
rcl
push
push
rcl
push
add
xchg
push
add
xchg
push
add
call
add
rol
rol
inc
test
add
adc
add
sub
xchg
pop
inc
test
add
adc
repz
leave
repz
and
xlat
xchg
push
add
xchg
push
push
rcl
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
dec
push
sti
adc
mov
xchg
push
inc
sub
pop
inc
test
or
test
call
inc
test
add
xchg
push
inc
test
cld
inc
xchg
pop
inc
adc
add
xchg
adc
xchg
add
rol
rol
inc
test
add
rol
xchg
pop
inc
test
add
(bad)
(bad)
add
rol
inc
test
add
xchg
ficom
xchg
aad
pop
xchg
leave
xlat
(bad)
mov
fist
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
push
xlat
xchg
push
push
rcl
push
add
mov
sbb
adc
add
(bad)
adc
rol
inc
adc
add
xchg
pop
inc
test
add
mov
or
xchg
cmovne
(bad)
add
xchg
pop
inc
test
sti
ss
xlat
call
xlat
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
mov
dec
mov
xchg
add
and
cld
mov
test
in
mov
test
add
adc
inc
test
add
test
cld
inc
xchg
push
inc
test
add
xchg
or
rol
inc
test
add
mov
adc
adc
inc
test
or
jns
add
sbb
add
rol
inc
test
add
xchg
(bad)
adc
xchg
aad
popa
xchg
cmc
xlat
retf
fist
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
sbb
mov
lds
xchg
pop
inc
(bad)
fld
xchg
pop
inc
test
add
xchg
ror
pop
xchg
ror
push
xor
and
(bad)
fnstcw
mov
xlat
cmps
push
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
pop
push
sti
xchg
push
add
jb
add
xchg
push
inc
test
add
adc
inc
test
hlt
mov
ror
inc
test
add
jns
add
mov
pop
inc
test
add
adc
add
sub
xchg
or
adc
dec
sbb
add
rol
inc
test
add
jge
add
sbb
add
rol
inc
test
add
xchg
fimul
dec
xchg
shr
xchg
icebp
xlat
into
mov
fist
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
add
xlat
adc
inc
add
and
dec
sbb
add
rol
inc
test
add
mov
sbb
shl
mov
jecxz
add
fldcw
inc
test
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
add
xchg
pop
push
sti
xchg
push
add
jb
add
xchg
push
inc
test
add
mov
push
inc
test
add
jge
hlt
inc
adc
inc
test
add
mov
push
inc
test
add
test
lock
adc
inc
test
add
xchg
or
ror
inc
test
add
xchg
(bad)
or
xchg
pop
inc
test
add
adc
pop
inc
sbb
or
xchg
add
aad
inc
mov
adc
xchg
shl
xchg
int
(bad)
mov
push
xlat
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
push
xlat
xchg
push
push
xlat
xchg
dec
add
mov
adc
xchg
stc
mov
in
sti
mov
jmp
inc
xchg
sar
dec
xchg
push
inc
test
cld
push
xchg
sti
scas
xchg
jp
mov
push
enter
sub
pop
(bad)
shl
pop
xor
xchg
push
add
xchg
push
push
xlat
xchg
push
add
xchg
push
push
xlat
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
mov
push
mov
xchg
push
inc
test
add
jge
cld
mov
rol
inc
test
hlt
mov
test
add
jns
cld
mov
rol
inc
sub
push
inc
test
add
xchg
adc
xchg
add
fld
xchg
pop
inc
test
add
rol
mov
sbb
or
xchg
pop
inc
test
add
(bad)
adc
aad
gs
leave
xlat
ret
fistp
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
dec
push
xchg
fidivr
out
inc
or
call
pop
dec
mov
fimul
dec
xchg
add
rol
scas
test
xchg
push
retf
mov
ret
scas
push
ss
mov
mov
xor
xchg
dec
push
rcl
push
push
xlat
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
push
rcl
push
push
xlat
xchg
push
push
rcl
dec
push
sti
adc
mov
xchg
push
inc
test
add
jno
cld
mov
aad
inc
test
add
test
cld
mov
test
add
jno
lock
rol
inc
adc
clc
inc
xchg
pop
inc
test
add
jns
add
xchg
adc
adc
inc
test
add
mov
or
xchg
pop
inc
test
or
(bad)
rol
xchg
pop
inc
test
add
(bad)
rol
dec
xchg
pop
inc
test
add
adc
imul
retf
retf
fistp
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
add
xchg
push
push
fisttp
push
push
retf
mov
rcr
inc
push
add
jns
or
xchg
pop
inc
test
add
popf
sar
mov
push
xlat
xchg
push
push
rcl
pushw
xlat
scas
pop
sbb
xchg
push
push
rcl
push
push
rcl
push
add
xchg
push
add
xchg
push
add
xchg
push
push
rcl
push
push
xlat
xchg
push
push
rcl
dec
push
sti
adc
mov
xchg
push
inc
test
hlt
mov
rol
inc
test
add
jns
lock
test
lock
rol
inc
sub
push
inc
test
add
xchg
adc
xchg
cmovne
(bad)
or
rol
inc
test
add
sar
mov
test
add
(bad)
rol
inc
xchg
pop
inc
test
add
mov
adc
fldcw
cdq
icebp
xlat
retf
shl
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
push
xlat
xchg
push
push
xlat
xchg
push
add
xchg
push
push
rcl
push
push
xlat
xchg
push
add
xchg
push
add
cmc
pop
rcl
stos
adc
inc
(bad)
aad
inc
popf
xchg
ret
push
sub
xlat
xchg
push
push
xlat
xchg
push
push
xlat
xchg
push
add
xchg
push
add
xchg
push
push
xlat
xchg
push
add
xchg
push
push
rcl
push
push
xlat
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
add
xchg
push
push
sti
xchg
push
add
jb
add
rol
inc
sub
push
inc
test
lock
test
lock
rol
inc
and
push
inc
test
add
xchg
or
xchg
pop
inc
test
add
(bad)
ror
adc
inc
test
add
(bad)
sar
mov
rol
inc
test
add
test
add
rol
inc
test
add
(bad)
ficomp
sahf
fldcw
movs
cmc
retf
into
lods
rcr
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
add
xchg
push
add
xchg
push
push
retf
xchg
push
add
xchg
push
add
xchg
push
add
loopne
and
xchg
xor
(bad)
lea
retf
xlat
xchg
retf
xchg
push
add
xchg
push
add
mov
xlat
xchg
push
push
xlat
xchg
push
add
xchg
push
push
rcl
push
add
xchg
push
push
xlat
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
xchg
push
add
jb
add
xchg
push
inc
test
add
test
cld
mov
test
hlt
mov
rol
inc
test
lock
rol
inc
test
add
jns
lock
mov
add
sub
xchg
add
rol
inc
test
add
adc
pop
inc
test
add
(bad)
sar
mov
rol
inc
test
add
test
add
rol
inc
test
add
(bad)
(bad)
adc
aad
gs
leave
iret
into
test
add
mov
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
rcl
push
push
xlat
xchg
push
push
rcl
push
add
cmp
shr
push
push
(bad)
pop
sbb
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
sti
xchg
push
add
jb
add
xchg
push
inc
test
add
jns
cld
mov
test
hlt
mov
rol
inc
test
lock
rol
inc
test
cld
inc
mov
add
and
add
xchg
add
rol
inc
test
add
(bad)
rol
inc
xchg
pop
inc
test
add
adc
pop
inc
test
add
adc
pop
inc
test
add
(bad)
ficom
xchg
aad
popa
cdq
icebp
iret
into
test
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
push
xlat
xchg
push
add
xchg
push
push
xchg
xchg
dec
pop
xor
test
fstp
pop
or
xchg
push
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
pop
push
sti
xchg
push
add
jb
clc
addr16
push
inc
lea
add
jno
hlt
mov
rol
inc
test
cld
mov
aad
inc
sub
cld
mov
test
lock
adc
dec
test
add
xchg
or
xchg
pop
inc
test
add
test
or
xchg
pop
inc
test
add
(bad)
shl
mov
rol
inc
test
add
adc
pop
inc
test
add
(bad)
adc
xchg
aad
pop
xchg
leave
iret
ret
xlat
cmps
pop
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
iret
xchg
push
push
fistp
out
jae
push
leave
fcmovne
sub
xlat
sahf
push
push
xlat
xchg
push
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
pop
push
sti
xchg
push
add
jb
clc
addr16
push
inc
and
cld
mov
rol
inc
test
hlt
mov
aad
inc
test
add
jge
cld
mov
test
add
jns
lock
test
add
xchg
add
rol
inc
test
add
adc
pop
inc
test
add
sar
mov
rol
inc
test
add
adc
pop
inc
test
add
adc
ja
xchg
leave
iret
ret
xlat
cmps
push
add
mov
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
dec
push
fist
adc
data16
jb
call
xlat
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
sti
xchg
push
add
jbe
cld
addr16
push
inc
test
lock
test
add
jge
hlt
mov
rol
inc
and
pop
inc
test
add
jns
hlt
mov
and
add
xchg
add
rol
inc
test
add
adc
pop
inc
test
add
sar
mov
test
add
adc
pop
inc
test
add
(bad)
ficom
xchg
aad
pop
xchg
vcmplesd
ror
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
push
xlat
xchg
push
add
xchg
pop
or
scas
pushw
xlat
xchg
dec
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
xchg
push
add
jbe
hlt
arpl
sub
adc
inc
sub
lock
rol
inc
test
add
jno
cld
mov
rol
inc
test
hlt
mov
test
add
jne
add
xchg
or
xchg
pop
inc
test
add
(bad)
rol
xchg
pop
inc
test
add
sar
mov
test
add
adc
pop
inc
test
add
mov
adc
xchg
aad
popa
popf
int
(bad)
movs
jp
call
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
xchg
push
push
sti
xchg
push
add
jbe
lock
xchg
push
inc
test
add
jno
cld
mov
rol
inc
test
hlt
mov
rol
inc
test
cld
mov
rol
inc
test
lock
adc
dec
test
add
xchg
or
xchg
pop
inc
test
add
(bad)
rol
dec
xchg
pop
inc
test
add
test
add
rol
inc
test
add
(bad)
rol
inc
xchg
or
fld
mov
imul
retf
ret
xlat
cmps
push
add
xchg
push
add
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
xchg
push
add
jbe
lock
add
imul
add
and
cld
mov
rol
inc
test
clc
inc
adc
inc
test
add
jns
hlt
mov
sub
add
xchg
add
rol
inc
test
add
mov
or
xchg
pop
inc
test
add
test
or
xchg
pop
inc
test
add
adc
or
fld
lahf
fldcw
cdq
(bad)
(bad)
popf
data16
call
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
xlat
xchg
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
sti
xchg
push
add
jbe
call
inc
test
add
xlat
hlt
mov
aad
dec
test
add
jno
lock
ror
dec
test
clc
inc
adc
inc
test
hlt
mov
test
add
xchg
or
xchg
pop
inc
test
add
adc
pop
inc
test
add
jns
or
xchg
pop
inc
test
add
adc
or
fld
cmps
fldcw
cdq
rol
ds
(bad)
xlat
call
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
push
rcl
push
add
jb
in
xchg
add
and
inc
jne
hlt
mov
rol
inc
and
hlt
mov
ror
inc
sub
add
mov
or
rol
adc
inc
test
add
jno
xor
int3
rol
test
add
test
add
test
add
test
add
test
add
int3
rol
test
add
test
add
test
test
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
jne
fs
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
add
lods
shr
icebp
lods
jge
ins
sub
xor
mov
lods
jge
ins
gs
pushf
out
push
std
mov
inc
sbb
rol
icebp
test
inc
sub
rol
xchg
test
inc
sub
shl
inc
sbb
shr
loope
gs
sub
xor
mov
lods
jge
ins
sub
xor
add
lods
shr
icebp
lods
jge
ins
ins
mov
sahf
cmp
and
shl
inc
sbb
shl
inc
sbb
shl
inc
and
rcl
xchg
test
inc
sub
shl
inc
or
ror
cmp
sub
xor
add
lods
shr
icebp
lods
inc
add
adc
inc
or
mov
add
sub
sar
movs
and
lods
xchg
and
add
ror
fild
test
inc
sub
ror
test
and
lea
dec
ds
add
adc
rol
lods
ror
test
inc
adc
xchg
mov
loop
jmp
and
repz
mov
ja
push
inc
movs
xchg
popa
sti
push
jp
stos
xchg
push
mov
xchg
jp
jle
sub
xchg
xchg
test
ja
cmps
retf
js
data16
aas
ja
push
inc
(bad)
cli
out
jmp
mov
aas
test
and
add
lods
rcl
test
inc
adc
xchg
jp
add
clc
mov
pop
pop
mov
and
rcl
test
bound
xchg
arpl
add
test
ucomiss
out
inc
mov
push
inc
pop
inc
inc
(bad)
xchg
push
mov
ins
adc
(bad)
out
push
rcl
dec
xor
test
and
add
lods
rcl
test
inc
adc
xchg
jp
ins
mov
xlat
sti
call
add
adc
lods
out
inc
rol
test
push
jp
lea
mov
stos
inc
mov
jnp
jp
xchg
add
mov
jp
(bad)
adc
sbb
shl
inc
sub
rol
lods
rcl
test
inc
adc
xchg
jp
dec
push
inc
mov
sahf
outs
inc
add
and
rol
test
push
jp
movs
arpl
add
lds
out
das
and
cs
sub
inc
or
cs
int
inc
add
sub
rcl
xchg
test
inc
sub
rol
lods
rcl
test
inc
adc
xchg
jp
push
jg
mov
ja
adc
lods
out
rol
test
push
jp
stos
xchg
sahf
ret
jp
ss
jb
test
test
ds
mov
add
sub
rcl
xchg
test
inc
sub
rol
lods
rcl
test
inc
adc
xchg
jp
add
sti
mov
jmp
ins
mov
pop
rol
test
push
jp
rol
mov
mov
cmps
sub
xchg
inc
leave
xchg
jp
sahf
xchg
add
inc
sub
shl
inc
sub
rol
lods
rcl
test
inc
adc
xchg
jp
add
sti
mov
into
call
sti
xchg
add
repnz
pop
rcl
xchg
gs
bound
pop
push
dec
xor
test
mov
inc
bound
inc
push
out
stos
pop
add
xor
add
or
ror
mov
add
sub
rol
lods
rcr
test
inc
sub
test
(bad)
ficom
(bad)
jmp
push
lods
shl
rcl
pop
rol
jb
xor
dec
into
push
inc
adc
sti
push
jp
cmps
iret
push
ret
jns
inc
sbb
adc
out
lds
shl
daa
ss
lods
sub
test
and
add
lods
rcr
test
inc
inc
fisttp
mov
mov
pop
out
and
test
mov
and
shl
push
mov
pop
retf
xchg
test
iret
mov
cmp
repz
xchg
xchg
inc
add
sub
sar
addr16
scas
xchg
or
push
push
jp
shl
add
xor
test
xor
add
lods
rcr
test
inc
sub
rcr
inc
adc
shl
inc
sub
sar
test
inc
movs
repz
and
sahf
fld
ja
xchg
rcl
or
add
inc
movs
out
push
rcr
inc
adc
rcr
cmp
mov
aam
cmps
test
pop
rol
lods
rcr
test
inc
sub
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rol
lock
lods
xlat
ja
(bad)
add
shl
mov
push
enter
scas
in
test
mov
call
dec
test
pop
rol
lods
rcr
test
inc
sub
rcl
xchg
test
inc
sub
rol
test
pop
xchg
xchg
daa
ror
mov
cmp
lods
mov
rcl
xchg
test
inc
sub
rcr
sti
add
data16
xchg
dec
vmptrld
(bad)
and
ja
retf
jl
fsub
rol
lods
rcr
test
inc
sub
rcl
xchg
test
inc
sub
shl
pop
adc
add
pop
dec
mov
dec
rcr
adc
inc
rcl
xchg
test
inc
pop
dec
mov
es
sbb
jo
test
mov
lds
xor
jp
push
adc
xor
add
lods
rcr
test
inc
sub
rcl
xchg
test
inc
sub
ror
xchg
xchg
nop
dec
add
and
ja
add
inc
lods
out
push
shr
inc
loope
outs
cmp
push
add
dec
jnp
mov
shr
inc
xor
cmp
ja
ins
aas
add
test
xor
add
lods
rcr
test
inc
sub
rcl
xchg
test
inc
pop
dec
jne
push
inc
or
push
push
adc
pop
scas
add
mov
add
sub
rcr
test
(bad)
shl
gs
sub
shl
test
xchg
push
dec
add
je
sub
lock
test
pop
rol
lods
rcr
test
inc
sub
rcr
inc
sbb
into
jp
xchg
cld
dec
add
test
add
fwait
inc
cmp
jl
shl
test
in
jns
inc
xor
mov
push
rcr
test
add
mov
enter
xchg
inc
adc
test
imul
jmp
stc
shl
test
inc
sub
shl
adc
lea
or
mov
aad
jae
out
push
ror
test
pop
jge
push
sub
jb
shr
(bad)
lahf
nop
xchg
rol
lods
mov
cmp
mov
shr
inc
popf
dec
sbb
ja
cmps
adc
cmp
movs
add
lods
rcr
test
inc
xor
pushf
test
ror
or
lds
test
add
sub
rol
hlt
adc
or
pop
pop
jl
cs
cmp
hlt
add
add
in
pushf
inc
jmp
cwde
fld
loopne
clc
lock
jle
cld
push
push
imul
stos
sub
out
icebp
lods
rcr
test
inc
sub
ds
mov
xchg
jmp
pop
rcl
xchg
popf
jno
push
push
jae
and
jmp
pusha
pusha
(bad)
std
xchg
gs
dec
jnp
cld
pusha
pusha
jb
xor
stos
push
movs
inc
mov
mov
sub
push
mov
out
iret
jmp
add
lods
rcl
test
outs
inc
sar
mov
inc
addr16
mov
rcr
dec
addr16
aam
cmps
aas
in
pop
(bad)
fstp
mov
xchg
daa
rcl
add
and
leave
mov
outs
pop
sar
rol
sbb
test
imul
stos
shl
jmp
stc
mov
xor
movs
fnstenv
test
inc
dec
jnp
or
repnz
jmp
into
dec
addr16
pop
push
jae
out
push
rcr
inc
dec
add
lds
or
add
sbb
movs
xor
into
add
mov
out
push
jecxz
test
fld
add
lods
rcr
test
out
push
fsubr
test
push
inc
adc
neg
mov
retf
add
in
test
push
inc
adc
jmp
repz
movs
iret
and
cmp
adc
jle
or
in
cmps
xor
(bad)
mov
cwde
push
jmp
call
lods
shl
push
xor
and
test
jl
jge
cs
dec
sub
lods
mov
shl
inc
std
cld
popf
inc
or
cwde
dec
addr16
iret
xchg
imul
imul
pusha
dec
pop
test
cld
and
pop
mov
mov
rol
lods
shl
xor
test
mov
cmp
test
dec
pop
xchg
sbb
inc
xor
fsubr
push
rcr
test
mov
in
pop
and
dec
push
jae
and
mov
scas
fisub
cmp
mov
xchg
out
loope
jmp
jp
xchg
jmp
das
rol
lods
rcr
test
adc
std
cwde
jmp
enter
(bad)
in
test
inc
sub
shl
jl
sti
ror
pop
arpl
or
sbb
cmp
fwait
pop
ror
cmps
push
cmp
inc
or
pop
mov
shl
pop
retf
jl
call
lods
rcr
test
sub
pop
ds
sub
or
movs
inc
lods
xchg
shr
inc
sub
jno
jo
dec
adc
out
push
fmul
pop
repz
adc
ja
sub
inc
xor
pusha
cmp
inc
push
cmp
jo
imul
xchg
test
pop
test
fwait
inc
add
lods
rcr
test
inc
aad
fisttp
or
add
inc
ror
jbe
or
mov
jp
std
lods
mov
pusha
iret
jg
test
mov
sbb
mov
aad
and
aad
mov
lea
stos
mov
mov
shr
add
lods
sar
test
sti
push
enter
pusha
pusha
(bad)
fld
adc
push
std
je
add
xchg
jmp
adc
(bad)
xor
sbb
sub
dec
sub
jp
stos
xchg
push
xchg
(bad)
int
jle
push
sub
jmp
movs
mov
sub
test
inc
rol
lods
sar
test
div
das
rol
test
adc
pop
sbb
inc
retf
mov
and
mov
pusha
pusha
pop
mov
scas
pop
xor
add
or
movs
sbb
popf
fmul
out
sbb
lods
mov
test
inc
sub
rol
lods
ror
mov
jno
pop
ins
lods
mov
shl
inc
popf
cmps
jnp
mov
add
das
shr
mov
or
pop
data16
mov
les
test
enter
scas
in
test
lods
mov
rcl
add
rol
lods
shl
xor
add
rcl
xchg
or
iret
lods
repz
shr
inc
sub
ret
movs
fcmovnbe
fld
add
jmp
sbb
xchg
imul
push
mov
das
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rol
lods
ror
mov
mov
xchg
rol
xchg
test
inc
leave
out
mov
and
inc
xor
mov
ja
enter
push
inc
add
test
mov
jl
and
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rol
lods
sar
test
lods
mov
shl
inc
xor
lods
repz
rcl
xchg
test
inc
sub
rcr
add
xlat
lea
les
lahf
cmps
lods
xchg
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rol
lods
shl
test
lods
xchg
sar
nop
test
shrd
rcl
xchg
test
inc
inc
lods
out
push
std
mov
sub
push
mov
mov
push
std
(bad)
test
add
test
inc
sub
rcl
xchg
test
inc
sub
rol
lods
shr
test
inc
dec
jnp
and
add
and
xchg
ror
icebp
test
pop
add
xchg
mov
mov
dec
in
scas
add
mov
test
imul
jmp
add
sub
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rol
lods
shr
test
inc
dec
jnp
imul
add
sub
jmp
out
sbb
jle
jns
inc
fs
jg
mov
aad
(bad)
scas
daa
cmc
mov
outs
jmp
add
sub
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rol
lods
shr
test
inc
sub
xchg
inc
ins
push
mov
es
(bad)
out
cmc
jnp
icebp
es
or
pop
stos
jmp
mov
sub
mov
ja
(bad)
test
add
test
inc
sub
rcl
xchg
test
inc
sub
rol
lods
shr
test
inc
inc
addr16
ins
or
icebp
xor
aad
aam
mov
cmp
fild
push
(bad)
iret
pop
sti
mov
ins
or
(bad)
iret
and
inc
(bad)
cwde
mov
outs
jmp
add
sub
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rol
lods
shr
test
inc
inc
addr16
dec
rcr
pop
jl
cmps
icebp
outs
add
xor
mov
test
add
inc
les
mov
test
add
inc
lods
out
push
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rol
lods
shr
test
inc
sub
shl
mov
ins
add
mov
add
sub
rol
add
rol
add
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rcl
xchg
test
inc
sub
rol
lods
ror
lahf
dec
xchg
es
popa
and
in
cmps
mov
push
aam
cmp
imul
es
rcr
mov
sbb
enter
es
popa
and
enter
es
popa
and
enter
es
popa
and
enter
es
popa
and
test
cmps
mov
icebp
lods
ror
dec
mov
add
test
add
test
add
test
inc
test
add
test
add
test
or
add
test
add
test
add
test
add
test
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
and
lods
cdq
pop
sbb
xor
int3
pusha
icebp
jmp
jo
and
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
sbb
mov
ins
int
mov
sysenter
xchg
enter
test
xor
mov
lods
jge
ins
mov
cmp
enter
mov
or
call
dec
xor
and
mov
dec
xor
and
mov
dec
test
sbb
mov
lods
jge
ins
sub
daa
and
fdiv
mov
dec
xor
and
mov
dec
xor
and
mov
fs
xor
call
inc
sbb
sysenter
mov
pusha
int
mov
pop
cmp
in
jge
ins
sub
xor
xchg
in
std
loope
movs
pop
sbb
xor
int3
pusha
icebp
jmp
js
and
icebp
lods
jge
ins
sub
xor
xchg
fdiv
test
add
add
(bad)
popf
pop
sub
cmp
mov
dec
adc
sysenter
xchg
fs
xchg
push
and
sysenter
xchg
enter
lods
test
and
mov
inc
adc
xor
shl
cdq
pop
cmp
adc
fnstenv
ins
sub
xor
sahf
in
std
in
test
sysenter
mov
pusha
icebp
jmp
js
and
icebp
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
daa
and
fsubr
fldenv
call
or
call
and
xchg
jns
adc
or
shl
mov
test
xor
mov
lods
jge
ins
sub
xor
cmps
lock
jmp
fadd
push
sbb
sbb
call
and
xchg
lea
xchg
fdiv
test
in
dec
adc
adc
lock
fcomp
xchg
push
shl
xchg
push
lock
repz
push
and
lock
add
sub
fstp
or
mov
je
sub
sub
sbb
jp
pusha
(bad)
cdq
jge
lock
add
sub
rcl
hlt
add
cmp
icebp
cmc
lods
mov
and
ins
ror
popf
pop
mov
mov
adc
adc
or
or
pop
cmc
cmc
lods
mov
or
adc
mov
enter
pop
adc
or
cmp
or
in
jge
ins
mov
clc
pop
sysenter
pop
xor
mov
int3
mov
adc
inc
add
adc
jb
dec
rcl
popf
jge
test
enter
xor
icebp
xor
ins
ins
adc
cmp
sub
pop
cmp
aam
aad
cdq
gs
mov
adc
inc
add
and
mov
int
mov
pop
cmp
les
xchg
push
or
int3
adc
inc
add
xor
xor
fnstenv
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
cmps
lock
in
jmp
push
pop
xor
push
sbb
xchg
in
cmp
mov
xor
daa
xchg
or
fsubp
pop
push
mov
xlat
jae
fisubr
xor
fst
adc
in
jge
ins
sub
xor
mov
je
int
pop
mov
call
nop
and
retf
jnp
(bad)
aaa
sbb
push
std
dec
or
popa
xor
xor
cwde
call
xor
fwait
mov
push
adc
loop
imul
inc
(bad)
pop
cmp
jg
out
add
test
mov
cmp
push
repnz
hlt
fild
jno
jl
ins
sub
daa
and
neg
xor
push
out
add
test
mov
imul
pop
inc
mov
and
fcomp
cmp
lock
push
jbe
inc
pop
pop
adc
mov
adc
fld
mov
push
add
imul
and
(bad)
push
push
mov
sti
ja
(bad)
and
mov
stc
(bad)
aam
mov
pop
xor
sti
(bad)
out
outs
mov
shl
jbe
jle
and
(bad)
shl
sti
xchg
dec
cs
mov
push
push
pop
or
adc
dec
inc
mov
adc
popa
push
jbe
adc
fwait
mov
jmp
(bad)
mov
jecxz
shl
mov
sub
dec
out
hlt
std
out
jp
es
mov
aaa
and
xchg
xchg
movntq
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
je
aad
ins
mov
cld
les
sub
sti
mov
jp
imul
stos
xor
js
lock
inc
xchg
inc
mov
push
pop
xchg
fisttp
in
cmps
int3
pusha
jmp
and
xor
pop
enter
lea
pop
sti
mov
jp
(bad)
loop
jb
xchg
add
dec
mov
cs
or
mov
int
sti
sahf
push
push
sti
mov
jp
pop
xor
sar
jmp
cmps
mov
out
xchg
dec
cs
mov
jp
sti
mov
jp
jae
(bad)
fidiv
ins
sub
xor
rcr
je
aaa
add
xchg
mov
jp
sti
mov
jp
mov
fimul
pushf
cwde
fcomp
mov
into
jnp
sti
mov
jp
jb
xchg
sbb
inc
mov
pop
mov
dec
sbb
xlat
inc
aaa
or
mov
sti
mov
jp
xlat
fcmovnb
fisub
call
mov
sahf
clc
(bad)
sti
pop
jb
sti
mov
jp
iret
and
sbb
out
push
cs
mov
xchg
and
mov
jp
sti
mov
jp
jb
xchg
sbb
jae
mov
sti
mov
jp
inc
sub
sbb
xlat
xor
cmps
daa
movntps
add
cmps
loop
jl
sar
sti
mov
jp
cmps
mov
mov
sub
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
pop
cmp
cmp
sbb
shl
stos
aaa
sti
xchg
dec
cs
mov
jp
jmp
fs
xor
mov
lods
jge
ins
sub
xor
mov
pop
test
jmp
dec
mov
retf
cmc
mov
sbb
xor
jns
rep
outs
sti
mov
jp
fistp
xor
mov
lods
jge
ins
lods
inc
fnsave
mov
xchg
dec
or
mov
sti
mov
jp
cmp
xor
loop
je
movlhps
xchg
xor
sysenter
sti
mov
sub
mov
jp
sti
mov
push
test
xor
mov
lods
jge
ins
sub
xor
call
cmps
cli
data16
sti
mov
jp
ret
mov
sbb
shl
mov
sti
cli
comiss
mov
jp
mov
pop
jg
ins
sub
xor
or
ins
mov
fucomip
es
sti
xchg
dec
cs
mov
jp
mov
mov
dec
push
push
push
xchg
xor
jnp
lock
sti
sahf
push
push
sti
mov
data16
icebp
lods
jge
ins
sub
daa
and
iret
pusha
sbb
jbe
cs
mov
jp
sti
mov
jp
xchg
(bad)
scas
je
les
push
sub
mov
jp
mov
mov
fs
xor
ret
in
arpl
scas
fistp
dec
cs
mov
jp
into
hlt
sbb
push
add
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
test
add
add
imul
mov
jp
retf
mov
out
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
popf
add
add
out
out
mov
cmp
sbb
std
sti
(bad)
js
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
add
sti
mov
sub
mov
jp
sti
mov
push
(bad)
test
xor
mov
lods
jge
ins
sub
pop
cmp
pop
dec
(bad)
jnp
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
xchg
push
clc
cmps
hlt
and
mov
jp
(bad)
mov
ret
test
push
push
sti
mov
jp
stos
xor
mov
lods
jge
ins
sub
xor
xor
lds
mov
jp
sti
mov
jp
mov
add
mov
mov
repz
jnp
mov
sti
mov
jp
or
stc
mov
lods
jge
ins
sub
xor
jne
je
ret
es
mov
jp
sti
mov
jp
sahf
pop
pop
jecxz
test
fdiv
xchg
dec
cs
mov
jp
mov
sar
sub
xor
mov
lods
icebp
stc
lods
jge
sti
sahf
push
push
sti
mov
jp
out
jp
mov
xchg
jg
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
sahf
lock
loope
test
mov
add
mov
sti
mov
jp
or
stc
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
sbb
and
dec
cmps
das
call
or
into
jnp
sti
mov
jp
icebp
jno
jae
call
lods
jge
ins
sub
pop
cmp
push
dec
in
sti
mov
cs
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
cs
mov
xor
lds
cmp
mov
jp
cmp
(bad)
mov
jo
sub
sub
xor
xchg
lock
cmc
int
push
test
into
repnz
mov
jp
stos
mov
lods
jge
ins
movs
pop
fcom
or
mov
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
xor
lds
movs
or
mov
jp
stos
mov
xor
leave
test
mov
cs
mov
jp
mov
je
sub
sub
xor
sahf
lock
loope
test
inc
pop
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
xchg
je
mov
mov
dec
cs
mov
jp
mov
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
cmps
fsubr
outs
dec
sbb
cmp
jae
push
inc
mov
outs
jp
sti
mov
jp
in
frstor
stc
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
cs
mov
xor
shr
cli
sti
mov
jp
das
jmp
dec
mov
ins
jge
ins
sub
xor
xchg
lock
stc
int
pop
mov
adc
sti
mov
jp
stos
mov
lods
jmp
adc
mov
das
sti
mov
jp
mov
sbb
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
icebp
shr
mov
mov
jp
pop
mov
mov
mov
mov
mov
mov
jp
pop
mov
int3
in
sub
sub
xor
call
mov
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
pop
aam
or
sti
ret
sti
mov
jp
push
mov
pop
jg
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
icebp
imul
dec
xchg
sti
mov
jp
sti
mov
xor
mov
jo
sub
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
cs
mov
xor
aad
imul
sti
mov
jp
xchg
js
clc
sub
sub
xor
xchg
lock
stc
int
pop
mov
adc
sti
mov
jp
stos
mov
lods
std
leave
test
add
sti
mov
jp
aas
mov
das
jg
ins
sub
xor
mov
lods
jge
ins
sub
xor
xchg
lock
cmc
int
pop
mov
push
push
sti
mov
jp
stos
mov
lods
jmp
cli
repnz
sti
mov
jp
xor
dec
repz
mov
xor
call
mov
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
sbb
cmp
repz
pop
sti
mov
jp
sti
mov
pop
push
mov
mov
fs
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
call
push
mov
add
(bad)
jae
mov
jp
sti
mov
pop
push
sbb
addr16
sub
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
cs
mov
xor
in
xchg
push
stc
out
das
sti
mov
jp
fistp
dec
xchg
sub
xchg
lock
stc
int
pop
mov
adc
sti
mov
jp
stos
mov
lods
icebp
shr
iret
sti
mov
jp
stos
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
xchg
lock
stc
leave
test
adc
sti
mov
jp
mov
lods
jge
ins
mov
in
mov
jp
sti
mov
jp
in
xchg
push
test
sbb
call
mov
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
pop
cmp
dec
or
push
js
sti
mov
jp
sti
mov
jb
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
nop
xchg
mov
aaa
cmps
icebp
xchg
mov
jp
sti
mov
push
push
jb
dec
shr
popf
mov
xor
pop
dec
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
cs
mov
xor
mov
pushf
push
pop
xor
(bad)
out
cs
mov
jp
sar
fcmovbe
and
or
aam
icebp
int
pop
mov
adc
sti
mov
jp
stos
mov
lods
int
mov
push
sti
mov
jp
stos
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
sahf
lock
std
aad
imul
mov
jp
mov
lods
jge
ins
mov
xor
repnz
das
sti
mov
jp
sti
mov
inc
stos
sbb
pusha
cmc
shr
addr16
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
pop
xor
jnp
sar
jnp
sti
mov
jp
sti
mov
imul
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
push
js
sub
mov
dec
sti
mov
jp
sti
mov
jp
add
test
add
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
cs
mov
xor
sub
sbb
jecxz
pushf
lock
fidivr
sti
mov
jp
sti
mov
push
inc
ins
enter
xchg
inc
cwde
cli
adc
sti
mov
jp
stos
mov
lods
int
mov
ret
mov
jp
stos
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
call
mov
sti
mov
jp
stos
mov
lods
jge
ins
sub
daa
and
xlat
ins
xor
sti
mov
jp
sti
mov
shl
ins
cwde
loopne
rcl
push
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
mov
cwde
mov
add
push
add
sti
mov
jp
fwait
mov
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
daa
and
push
add
jg
and
push
out
out
fcmovnb
out
sti
xchg
dec
cs
mov
dec
inc
mov
nop
adc
push
jnp
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
cs
mov
xor
sub
xor
call
xor
es
fstp
dec
push
sbb
xchg
cmp
jp
sti
mov
jp
mov
lods
icebp
shl
cli
sti
mov
jp
stos
movs
pop
push
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
sahf
lock
std
aad
imul
mov
jp
mov
lods
jge
ins
sub
xor
cmps
lock
jmp
dec
xchg
inc
addr16
push
push
outs
jle
push
sti
mov
jp
add
jp
sti
mov
jp
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
lods
inc
sub
add
sti
mov
jp
sti
mov
mov
test
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
pop
dec
mov
xlat
mov
jp
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
cs
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
int3
jnp
mov
and
sti
jmp
sti
mov
jp
xchg
lock
stc
int
pop
mov
jp
es
mov
jp
cmp
jo
sub
sub
xor
mov
lods
jge
ins
sub
xor
xchg
lock
stc
leave
test
(bad)
addr16
mov
jp
stos
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
cmp
or
sti
mov
sti
sahf
push
push
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
cdq
pop
les
xlat
das
sti
mov
jp
sti
mov
push
test
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
or
mov
jp
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
shr
cs
mov
jp
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
jp
je
ret
sub
mov
jp
sti
mov
jp
sahf
lock
loope
test
adc
sti
mov
jp
mov
movs
jl
ins
sub
xor
mov
lods
jge
ins
sub
xor
xchg
lock
cmc
int
push
mov
adc
sti
mov
jp
stos
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
jo
(bad)
mov
jp
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
xchg
push
fs
ins
sti
add
cs
mov
jp
mov
sub
test
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
xor
cmp
fnstenv
ins
sub
xor
mov
lods
jge
ins
sub
pop
cmp
sar
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
xchg
push
idiv
cs
mov
jp
mov
xor
sub
xor
sahf
fdiv
test
xor
mov
lods
jge
ins
sub
xor
mov
lods
icebp
shr
inc
sti
mov
jp
stos
mov
lods
in
fnstenv
lahf
adc
mov
jp
lahf
mov
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
icebp
lds
or
sti
mov
jp
mov
lods
jge
ins
sub
xor
xchg
fdiv
test
daa
and
icebp
lods
jge
ins
sub
xor
sahf
lock
std
aad
ins
mov
push
push
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
xchg
push
sub
fs
fisubr
sti
mov
jp
sti
mov
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
xchg
in
cmc
(bad)
loopne
xchg
xor
lods
mov
stc
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
lea
sti
mov
jp
scas
mov
xor
mov
cmp
pop
cmp
xchg
jns
cmp
cmp
ins
sub
xor
xchg
lock
cmc
int
pop
mov
scas
cmp
mov
jp
stos
mov
lods
jge
ins
mov
sub
xchg
dec
cs
mov
jp
cmps
mov
sub
xor
mov
lods
jge
ins
sub
xor
xchg
lods
sar
xchg
and
mov
jp
stos
mov
lods
jge
ins
sub
adc
xor
mov
cmp
sysenter
mov
je
sub
sub
xor
call
mov
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
xchg
push
clc
out
mov
sti
mov
jp
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
jne
push
in
fnsave
push
push
fcmovnu
cmps
jmp
call
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
jmp
call
lods
jge
ins
sub
xor
call
movs
clc
out
pusha
sti
mov
jp
scas
mov
xor
mov
mov
hlt
add
js
loope
(bad)
pop
dec
sub
xchg
jae
(bad)
sub
sub
xor
xchg
lock
cmc
int
push
mov
adc
sti
mov
jp
stos
mov
lods
jge
ins
mov
or
mov
jp
fstp
dec
xchg
sub
sub
xor
mov
lods
jge
ins
sub
xor
imul
and
inc
sti
mov
jp
stos
mov
lods
jge
ins
mov
or
add
std
pop
(bad)
push
dec
and
(bad)
mov
ins
jge
ins
sub
xor
sahf
lock
loope
test
addr16
sti
mov
jp
scas
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
xchg
push
clc
jmp
sti
mov
jp
sti
mov
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
popa
fsubr
jmp
cs
mov
sub
mov
lods
jge
ins
sub
sysenter
mov
inc
adc
push
jnp
sti
mov
jp
sub
sub
xor
mov
lods
jge
ins
sub
pop
cmp
adc
sti
mov
jp
scas
mov
daa
and
ins
sub
xor
xchg
lock
cmc
int
pop
mov
cmps
add
sti
mov
jp
stos
mov
xor
test
add
jle
sub
mov
jp
mov
pop
jl
ins
sub
xor
mov
lods
leave
lds
or
sti
mov
jp
mov
lods
jge
ins
sub
adc
retf
sti
mov
sti
mov
jp
jmp
call
lods
jge
ins
sub
daa
and
sbb
jns
sti
mov
jp
sti
mov
jp
mov
lods
jge
ins
mov
or
(bad)
aam
sti
mov
jp
call
fs
xor
xchg
lock
cmc
int
pop
mov
push
push
sti
mov
jp
stos
mov
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
xchg
push
clc
idiv
cs
mov
jp
sti
mov
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
jp
je
pop
fwait
pop
jae
mov
jp
lahf
mov
pop
cmp
ins
test
add
jb
in
mov
cs
mov
jp
sub
sub
xor
cmps
lock
in
jmp
mov
cmp
sti
push
jnp
sti
mov
jp
aaa
mov
pop
xor
mov
jae
jg
and
ins
sub
(bad)
iret
sti
mov
jp
stos
movs
pop
push
mov
lods
jge
ins
mov
or
out
das
sti
mov
jp
xchg
shr
icebp
lods
mov
stc
imul
and
cli
jb
and
mov
jp
stos
xor
mov
lods
jge
ins
sub
daa
and
retf
ins
jge
inc
jnp
sti
mov
jp
imul
push
inc
ror
or
sbb
jno
idiv
cs
mov
jp
stos
mov
lods
jge
ins
sub
sysenter
sti
mov
jp
sti
mov
jp
cmc
pop
mov
stc
jb
push
in
cli
xchg
cmp
jp
sti
mov
jp
mov
mov
fs
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
cdq
pop
fadd
dec
cs
mov
jp
sti
mov
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
xchg
lock
std
cmp
push
push
sti
mov
jp
add
mov
jp
pop
(bad)
cdq
imul
sti
mov
jp
repz
sub
xor
call
pop
mov
in
cmps
jp
jge
sar
sti
mov
jp
retf
ficomp
add
push
xchg
shl
xchg
push
in
lock
dec
imul
xchg
push
sbb
mov
jp
stos
pop
push
stos
mov
lods
jge
ins
sub
adc
cmp
sti
mov
jp
(bad)
sub
sub
ins
adc
popa
push
sti
mov
jp
sti
mov
push
stos
mov
lods
jge
ins
sub
xor
xchg
in
cmc
add
jp
sti
mov
pop
push
loope
push
mov
dec
cmp
mov
enter
cmp
sti
sbb
sti
mov
jp
sti
mov
jp
mov
lods
jge
ins
sub
sbb
jnp
pop
inc
sti
and
sti
mov
jp
fstp
xchg
dec
sub
loope
inc
mov
mul
inc
sti
mov
jp
stos
enter
icebp
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
lods
inc
pusha
call
sti
mov
jp
sti
mov
mov
test
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
cdq
cs
sti
ret
sti
mov
push
push
pop
adc
ror
inc
sti
cmp
cs
mov
jp
mov
das
jg
ins
sub
xor
cmps
lock
in
jmp
xchg
repz
jmp
sti
mov
jp
dec
dec
fimul
jnp
out
cmp
mov
xor
sbb
fmul
mov
jp
sti
mov
ror
test
xor
mov
lods
jge
ins
sub
xor
(bad)
fsubr
lahf
xor
sti
mov
jp
cli
mov
xchg
pushf
fcomp
(bad)
adc
test
adc
sti
mov
mov
stc
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
test
jnp
neg
cs
mov
jp
push
mov
fcom
mov
out
push
cs
mov
idiv
sti
add
cs
mov
lods
jge
ins
sub
xor
mov
je
pop
pop
fsub
sti
mov
jp
bound
add
adc
aaa
sbb
xchg
mov
jp
cmp
dec
hlt
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
mov
aam
hlt
or
(bad)
das
sti
mov
jp
sti
mov
es
call
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
cmps
lock
in
cmc
mov
dec
test
sbb
mov
lods
jge
ins
sub
daa
and
fild
rcl
(bad)
sti
ret
sti
mov
jp
mov
into
out
mov
test
icebp
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
xor
je
mov
and
push
push
dec
cmps
ds
jg
icebp
sub
sbb
cmps
cmps
enter
add
sti
mov
inc
bound
into
loop
ds
jg
icebp
sub
xor
mov
lods
jge
ins
sub
xor
cmps
lock
in
jmp
xchg
inc
(bad)
jp
jb
cs
sti
mov
jp
fwait
mov
mov
cmps
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
daa
and
fild
shl
push
mov
sti
mov
pop
push
scas
jnp
rcr
xchg
adc
add
cs
mov
lods
in
mov
pop
sbb
sysenter
mov
pusha
int
mov
stos
jg
stos
and
jle
or
mov
jp
outs
mov
loop
fimul
pushf
pop
sbb
xor
int3
pusha
stc
cmc
test
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
add
sti
mov
sub
mov
jp
sti
mov
jbe
test
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
sahf
lock
std
in
xchg
push
cmp
sysenter
mov
je
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
cs
mov
je
int
pop
mov
or
push
or
add
add
jge
ins
mov
and
ins
sub
xor
gs
mov
enter
imul
inc
test
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
adc
and
es
sti
mov
jp
add
daa
and
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
leave
aad
imul
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
xor
je
push
pushf
xchg
imul
cli
dec
add
xchg
lock
in
in
mov
inc
sub
sysenter
cmps
aam
jmp
adc
xor
cmp
fs
(bad)
in
addr16
add
ds
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
daa
and
ret
fs
sti
mov
jp
sti
mov
jp
test
icebp
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
imul
push
sub
xor
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
xor
je
adc
jp
sti
mov
dec
cmps
xchg
in
cmc
shr
fcomp
lock
ret
jmp
jmp
stc
xor
fs
bnd
sti
mov
jp
aas
mov
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
jne
je
sub
jp
sti
mov
jp
ds
cmp
sub
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
push
int3
pusha
sbb
jae
jp
mov
sar
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
xor
je
adc
jp
sti
mov
dec
cmps
popa
enter
mov
leave
push
aas
and
in
sub
imul
xor
pop
jns
bnd
sti
mov
jp
aas
mov
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
xchg
lock
cmc
ins
lods
leave
xor
mov
jp
sti
mov
push
sbb
mov
fs
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
pop
cmp
sub
jno
test
cs
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
adc
add
xor
je
adc
jp
sti
mov
inc
mov
loop
jmp
cs
mov
ss
ja
shl
pop
jns
bnd
sti
mov
jp
aas
mov
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
cmps
lock
in
loope
popf
pop
stc
out
das
sti
mov
jp
pop
mov
pop
imul
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
or
add
cmc
sti
cmp
stos
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
popf
pop
fs
shr
cs
mov
jp
imul
mov
sti
mov
jp
sti
mov
cmp
sti
data16
sti
mov
jp
sti
mov
push
mov
mov
js
bnd
sti
mov
jp
aas
mov
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
mov
xor
inc
dec
das
sti
mov
jp
mov
in
inc
scas
inc
test
daa
and
icebp
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
cmps
lock
jmp
mov
adc
sar
stos
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
cmps
lock
in
fnstenv
mov
cs
mov
jp
imul
mov
sti
mov
jp
sti
mov
inc
mov
sti
and
sti
mov
jp
sti
mov
jp
xor
js
bnd
sti
mov
jp
aas
mov
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
daa
and
into
pusha
in
mov
sti
mov
jp
ins
mov
xor
sysenter
mov
je
sub
sub
xor
mov
lods
jge
ins
sub
xor
xchg
je
shl
jl
mov
jp
stos
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
xchg
lock
cmc
leave
lods
popa
mov
fisubr
cs
mov
jp
imul
mov
sti
mov
jp
sti
mov
dec
cmps
(bad)
fild
bound
imul
inc
pop
sti
mov
pop
scas
mov
jnp
pop
and
bnd
sti
mov
jp
aas
mov
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
xchg
in
stc
push
scas
inc
mov
sti
mov
pop
add
(bad)
stos
sbb
lods
mov
test
daa
and
lock
in
jmp
pop
sysenter
dec
xor
sbb
push
push
sti
mov
jp
stos
shl
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
cmp
cmp
push
xchg
mov
jp
xor
je
adc
jp
sti
mov
dec
cmps
call
push
sti
push
mov
sti
mov
push
(bad)
adc
xor
xor
fs
bnd
sti
mov
jp
aas
mov
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
jns
pop
cwde
sti
sbb
cs
mov
pop
das
sar
dec
cmp
rcr
fcomp
xchg
or
sub
data16
sahf
sti
mov
jp
sti
mov
loop
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
call
sub
sbb
sti
sahf
push
push
sti
mov
jp
aas
mov
je
xchg
cwde
shr
sti
mov
jp
sti
mov
dec
cmps
mov
lods
jge
ins
mov
cmp
pop
pop
cmps
sub
sub
xor
push
int3
pusha
add
cmp
mov
jp
aas
mov
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
fild
xor
add
sti
mov
jp
into
(bad)
sbb
or
sub
mov
sti
inc
dec
das
sti
mov
ss
iret
push
push
(bad)
fbstp
ror
stos
jl
jnp
icebp
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
cmp
cs
sti
mov
jp
sti
mov
pop
add
test
idiv
mov
jp
sti
mov
push
stos
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
je
sti
mov
jp
sti
mov
or
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
mov
int3
adc
xchg
fwait
aas
xchg
add
sti
mov
jp
imul
mov
add
(bad)
test
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
test
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
mov
lods
jge
ins
sub
xor
repnz
test
add
inc
push
push
push
push
int
add
mov
test
add
add
shr
jns
sbb
(bad)
rol
push
loope
add
test
push
inc
cdq
mov
shl
jns
clc
pop
xchg
push
adc
jo
jns
movs
pop
xchg
add
mov
movs
push
inc
test
adc
adc
add
inc
test
and
pop
inc
add
mov
rcr
push
xchg
push
push
push
aad
add
adc
add
xchg
rcl
inc
test
and
test
rol
shl
daa
add
shl
xchg
test
sti
out
sub
pop
xchg
frstor
test
and
test
and
test
ret
jns
add
out
inc
dec
enter
cdq
call
xor
enter
leave
or
loope
sbb
jl
hlt
cdq
jmp
mov
xor
cmc
mov
xor
cmc
xchg
jmp
push
mov
sub
and
xor
cmc
xchg
jmp
push
mov
adc
std
xor
test
jmp
add
hlt
in
jmp
and
xchg
xor
lock
xor
mov
xor
mov
mov
mov
xchg
adc
xor
push
push
leave
or
jmp
sub
jne
loop
outs
push
xor
lods
mov
inc
sub
and
xor
cmc
cdq
xlat
cmps
aad
jmp
cmps
data16
mov
inc
ss
mov
sbb
cmc
mov
cmp
es
sub
out
lock
sar
xor
shl
push
jle
iret
or
inc
sub
mov
aaa
or
(bad)
arpl
mov
mov
mov
imul
shr
xor
leave
movs
inc
xor
mov
and
icebp
jnp
pop
xchg
imul
push
cmps
xor
aas
ret
or
dec
jmp
mov
push
mov
add
data16
out
ror
and
cmovp
dec
div
mov
sbb
sbb
dec
call
or
pop
mov
or
int3
jecxz
cdq
xchg
rol
outs
adc
retf
or
or
add
add
sbb
jno
dec
call
sbb
repnz
mov
add
in
mov
jmp
mov
aaa
pop
repnz
or
jmp
cmp
dec
add
mov
pop
inc
mov
or
sbb
cmp
jmp
out
adc
sbb
and
adc
sbb
sbb
cmp
mov
and
sub
push
xchg
std
dec
push
adc
retf
or
retf
ja
add
in
pop
xchg
xchg
pop
aaa
out
jmp
cmc
pop
dec
out
inc
adc
fdiv
out
and
adc
mov
cmp
sbb
pop
pop
jg
xchg
pusha
pop
inc
enter
aam
ficom
in
xor
or
inc
outs
lock
fisub
dec
aam
outs
sbb
xor
sub
addr16
xor
in
pop
xchg
scas
sti
sbb
mov
(bad)
gs
test
mov
cli
dec
data16
(bad)
in
mov
pop
cwde
addr16
gs
stos
repz
mov
pop
jle
mov
xor
mov
jno
dec
test
push
and
fcmovu
jecxz
mov
mov
mov
mov
jno
dec
jno
fs
xchg
jb
cli
(bad)
fs
mov
(bad)
sbb
gs
(bad)
or
cli
mov
(bad)
and
cli
fwait
gs
(bad)
mov
mov
ror
fs
das
pop
gs
lds
in
ja
scas
sti
pop
int
cli
ret
fdivr
sti
scas
leave
mov
dec
jno
out
mov
xor
mov
sub
inc
push
jb
fcmovu
mov
iret
or
je
and
mov
jbe
sar
or
cmc
mov
and
ror
icebp
jnp
sub
add
(bad)
push
and
mov
cmps
and
aas
pop
cdq
rcl
push
out
aaa
cmc
mov
cli
cli
sbb
bnd
scas
xor
cld
outs
pusha
data16
ins
(bad)
mov
mov
xchg
ret
xor
int3
sbb
adc
push
xor
cmp
outs
and
or
mov
cmp
out
sahf
or
or
dec
sti
mov
call
fst
cs
xor
pop
sbb
push
daa
repnz
jbe
fwait
imul
pop
call
inc
sar
stc
push
stc
adc
jmp
xchg
mov
cmp
jmp
inc
mov
call
push
mov
jae
push
sbb
pop
or
adc
enter
jecxz
sbb
cmp
cmps
or
pop
sub
retf
or
push
pop
repnz
mov
cmps
adc
int3
imul
ss
push
add
popf
enter
jbe
cmc
inc
loope
out
and
add
pop
add
push
mov
int3
mov
std
push
and
add
xor
ret
sub
jns
stc
ja
jmp
js
xor
mov
xor
je
jl
xlat
xor
das
scas
jbe
xor
je
jbe
aaa
iret
and
and
mov
pop
adc
mov
cmps
and
sub
mov
push
sub
js
mov
cmps
jbe
cmp
in
and
pop
mov
or
lods
movs
cdq
xor
data16
je
xor
bound
fs
sub
das
(bad)
bound
mov
push
mov
jo
jo
aas
mov
loopne
push
mov
arpl
pop
mov
push
jp
popf
push
xor
jo
jecxz
jbe
out
je
mov
test
cmp
lods
push
jp
mov
fdivr
xor
mov
and
pop
jmp
jbe
lahf
mov
jns
add
sub
xor
cmp
das
cmps
arpl
mov
je
sub
jne
push
je
and
out
cmc
xor
xor
data16
daa
jp
sub
and
pop
sub
cmps
arpl
mov
je
xchg
call
mov
jle
xchg
cmp
pop
stc
mov
int3
dec
push
xor
mov
scas
out
mov
pop
jl
cmps
fadd
mov
cmp
pop
cmps
jbe
sub
imul
mov
push
push
cmp
mov
adc
retf
mov
push
mov
cmp
and
mov
sub
rcr
fcmovnbe
push
fs
daa
ins
das
(bad)
mov
(bad)
stos
mov
outs
outs
and
js
adc
cmps
jbe
xor
jnp
jnp
sti
test
cmp
fwait
(bad)
cld
mov
fld
ins
push
sahf
mov
jne
(bad)
adc
iret
cmps
jbe
cmp
mov
xor
push
xor
mov
(bad)
mov
(bad)
cdq
(bad)
cmp
aas
cmps
jbe
push
push
pop
scas
out
mov
jmp
aas
mov
jae
out
mov
inc
repz
ins
gs
xor
popf
in
test
xor
out
xor
push
xor
imul
imul
xlat
cmps
jbe
xor
out
xor
mov
jnp
mov
dec
jo
inc
mov
bound
sub
imul
inc
mov
push
sub
pop
push
jbe
xor
mov
fbld
scas
mov
xor
mov
jle
cmps
xor
aaa
adc
je
mov
test
and
lock
stc
jae
mov
test
and
pop
sar
loop
out
xor
pop
in
je
sub
(bad)
cdq
lods
cmp
in
in
idiv
aam
lahf
mov
jno
lods
cmp
fdivr
mov
xchg
or
adc
jbe
fwait
mov
pop
sbb
adc
cmp
mov
je
hlt
ins
xor
push
dec
stc
mov
icebp
inc
call
mov
and
pop
cmps
out
sub
mov
cld
and
and
pop
mov
fisub
xor
or
out
aaa
cmc
mov
stc
inc
js
xor
sbb
mov
stc
xchg
in
js
loope
dec
iret
or
push
aaa
cmc
mov
xchg
jecxz
add
in
lods
sbb
or
dec
out
dec
jmp
ret
or
or
and
sub
ds
xor
mov
push
xor
mov
jp
sub
loop
adc
ds
frstor
jbe
nop
out
inc
jmp
in
dec
push
mov
repnz
jmp
outs
jmp
repz
iret
pop
mov
jle
cmp
sar
in
pop
stos
cld
nop
out
inc
repnz
in
sti
push
cmp
inc
pop
inc
jbe
dec
mov
push
push
push
adc
sub
and
pushf
cli
neg
out
mov
dec
fnstsw
retf
pop
push
adc
in
mov
jmp
aas
mov
(bad)
or
retf
sbb
in
or
xchg
out
in
ss
(bad)
out
adc
xchg
ror
enter
addr16
mov
sti
(bad)
jl
int3
sbb
mov
(bad)
mov
jns
ins
adc
ins
adc
ins
adc
dec
lds
mov
mov
jns
dec
movs
mov
mov
add
mov
jns
outs
adc
mov
jl
xor
adc
std
ss
movs
outs
adc
mov
mov
jns
ins
adc
dec
cmp
imul
xchg
pushf
xor
and
cs
sbb
cmp
and
aas
outs
inc
ins
sahf
pop
pop
imul
jl
lds
test
sub
cs
jge
jl
call
pop
ins
jns
adc
inc
lds
cwde
add
mov
fidivr
inc
jno
adc
faddp
push
test
xchg
inc
mov
gs
daa
jno
in
mov
jge
ins
adc
push
jmp
call
outs
lea
adc
inc
add
jns
arpl
jmp
aas
out
test
out
mov
int
lods
out
outs
mov
sahf
xchg
in
data16
aad
mov
or
mov
inc
test
icebp
popf
imul
jl
into
cwde
or
adc
test
je
fcomp
outs
push
dec
stc
mov
cmc
mov
mov
ss
xor
adc
rcl
mul
xchg
mov
push
jl
or
jmp
daa
mov
aad
int3
out
or
pop
stc
xor
popf
popf
daa
xor
mov
add
dec
aaa
cmps
pop
lods
jmp
jg
add
mov
std
push
(bad)
xchg
(bad)
bnd
sub
mov
jmp
enter
inc
mov
dec
jmp
aaa
cmc
pop
or
cdq
div
cmc
ret
out
and
in
xor
cmc
dec
dec
loop
mov
mov
mov
cmp
push
add
mov
out
push
cmps
(bad)
loop
jmp
pop
sub
sbb
jmp
aaa
cmc
mov
mov
jnp
adc
adc
cmp
cmps
xor
call
or
inc
mov
inc
call
jmp
mov
imul
out
or
pop
(bad)
adc
fbstp
push
xlat
cmp
dec
call
adc
fcom
sub
ficom
jge
or
int
or
cmp
mov
add
dec
icebp
enter
fnstenv
push
add
in
pop
inc
push
jne
push
mov
xlat
mov
pop
pop
in
fbstp
nop
xchg
sar
dec
xchg
retf
adc
retf
adc
leave
adc
push
jo
pop
leave
or
xchg
adc
leave
adc
jle
cdq
ret
enter
sbb
dec
xchg
fisub
xchg
retf
adc
retf
retf
push
adc
cdq
add
adc
out
xchg
retf
adc
stos
(bad)
dec
push
retfw
neg
int
push
test
sbb
ret
xchg
bnd
cwde
ficomp
mov
(bad)
das
jg
iret
pop
(bad)
xchg
(bad)
pop
jbe
lahf
sub
iret
sub
retf
sbb
dec
retf
xor
mov
dec
xchg
arpl
out
arpl
dec
xchg
ficomp
xchg
jecxz
inc
cmp
push
scas
inc
enter
mov
dec
ins
xor
scas
cdq
sahf
pop
sbb
shl
jp
pop
push
jnp
dec
push
out
arpl
out
arpl
out
arpl
out
inc
ret
adc
cdq
sahf
cmp
(bad)
mov
(bad)
retf
adc
mov
pop
jp
retf
adc
retf
adc
xchg
imul
cmp
mov
dec
xchg
retf
dec
inc
ret
adc
cdq
sahf
cmp
test
jp
sbb
xchg
push
xchg
jb
in
cdq
shl
mov
sub
sbb
call
shl
jp
pop
push
jnp
dec
push
out
arpl
out
arpl
out
arpl
out
inc
ret
adc
cdq
sahf
cmp
(bad)
xchg
fiadd
add
cmp
test
xor
adc
mov
inc
(bad)
pop
ds
iret
adc
retf
adc
xchg
pop
sub
dec
and
mov
dec
inc
out
push
gs
adc
mov
les
xchg
dec
push
xor
adc
dec
add
pop
push
sbb
cwde
repz
sbb
mov
inc
or
test
or
out
xchg
test
cmps
ss
ret
or
jmp
loope
test
jmp
sub
jmp
loopne
adc
adc
inc
cld
cmps
or
add
push
xor
mov
jmp
cmp
add
ret
mov
jmp
and
pop
mov
jb
imul
xchg
cmp
sbb
pop
in
sbb
dec
jmp
aas
jmp
jnp
and
int3
out
pop
pop
(bad)
(bad)
call
ss
mov
(bad)
repnz
and
out
call
xor
dec
dec
shl
mov
mov
or
retf
jmp
cmps
call
xor
pop
inc
jp
dec
or
sbb
shr
cmp
dec
push
jmp
adc
das
gs
add
jmp
ret
repnz
enter
cmc
adc
push
out
and
dec
out
pop
dec
out
shl
inc
outs
fistp
add
pop
sbb
adc
repz
in
pop
inc
out
lea
(bad)
pop
scas
dec
ss
mov
ss
push
cmp
add
xchg
jb
add
cli
mov
mov
call
pop
xor
push
cmp
cmps
or
dec
dec
adc
leave
cli
scas
fimul
test
jmp
mul
push
rcl
and
or
(bad)
xor
into
test
or
pop
xor
repnz
pop
and
test
sti
test
stc
test
cs
hlt
stc
jmp
stc
test
dec
push
daa
sar
rcl
repz
gs
es
pusha
sti
test
clc
jbe
cmp
repz
pusha
imul
lock
test
fbld
mov
imul
popa
cmp
(bad)
mov
out
ds
fisttp
xchg
enter
inc
fisttp
adc
div
imul
out
push
pusha
sti
test
pop
imul
ret
cli
shl
pop
repz
int3
clc
test
shl
pusha
sti
test
cmc
in
gs
push
daa
sar
ficom
repz
gs
es
dec
sti
repnz
popa
pop
mov
stc
ja
or
popa
mov
(bad)
bound
xchg
push
popa
mov
loop
je
test
lahf
pop
jns
add
not
test
je
fmul
je
dec
mov
sbb
jmp
adc
adc
cmp
mov
or
in
pop
xor
push
dec
in
mov
lods
pop
icebp
ss
cmp
movs
inc
xor
mov
and
sbb
mov
ret
fidiv
jnp
inc
mov
xchg
icebp
mov
xor
bound
push
div
ret
fcomp
vpand
outs
mov
mov
adc
(bad)
(bad)
retf
pop
ds
repnz
pop
div
call
ss
mov
add
cmc
mov
inc
cmp
cmps
in
in
pop
int
fadd
fstp
xchg
fstp
mov
fmul
adc
retf
inc
xchg
dec
jmp
ss
pop
dec
repnz
mov
fst
inc
sar
lods
mov
call
mov
push
out
mov
cmp
mov
fmul
in
pop
(bad)
fwait
shl
inc
cmp
arpl
sar
(bad)
frstor
push
out
pop
mov
shl
popa
mov
enter
(bad)
and
ret
dec
retf
xchg
and
or
push
cmp
pop
sahf
call
sbb
push
(bad)
lock
adc
or
stos
or
cmp
cmps
sbb
xchg
xor
hlt
pop
inc
fisubr
int3
push
sbb
mov
sbb
xchg
sub
xchg
and
or
popa
std
mov
xchg
mov
push
jmp
fmul
(bad)
nop
xor
add
sbb
popa
sub
fucomip
dec
adc
dec
xor
pushf
push
add
pop
mov
sbb
sbb
sbb
sbb
sbb
sbb
lods
lods
jmp
sbb
sbb
sbb
sbb
in
jne
jmp
sbb
mov
mov
js
fs
mov
imul
mov
sbb
sbb
push
mov
repz
popf
add
cmps
sbb
cmps
sbb
cli
popa
cdq
cmp
sub
rol
sbb
into
pop
mov
mov
cwde
sbb
sahf
sbb
in
add
cld
addr16
jmp
mov
inc
push
mov
test
sub
jle
mov
mov
jmp
inc
sub
mov
or
sbb
in
sbb
mov
int3
(bad)
jmp
mov
test
and
sbb
cmp
mov
sbb
pusha
sbb
lods
inc
mov
adc
sbb
sbb
mov
and
mov
and
sbb
jns
dec
int3
shl
in
pop
adc
dec
iret
in
mov
mov
das
ja
pop
in
pop
dec
dec
sub
mov
in
mov
mov
lea
sbb
pusha
sbb
lods
inc
mov
mov
mov
adc
sbb
mov
out
jmp
dec
int3
ja
mov
xchg
out
mov
sbb
mov
sbb
or
movs
inc
mov
mov
mov
mov
or
aaa
mov
inc
push
js
and
jle
mov
mov
push
sub
xor
mov
lods
or
repnz
mov
sbb
mov
cmc
mov
lea
div
sbb
sub
mov
ja
inc
in
xchg
xor
sbb
fsubr
xchg
pop
dec
fnstenv
push
xchg
jl
or
(bad)
aaa
cmc
loope
test
pop
inc
and
mov
cmp
cdq
xor
adc
rcl
mul
xchg
xchg
pusha
xlat
ss
fidivr
call
or
jmp
imul
in
stc
xor
enter
adc
enter
fild
sbb
pop
test
xchg
out
jmp
ss
mov
loop
push
sahf
xor
dec
fmul
pop
add
fld
adc
call
ret
in
sub
mov
jmp
ss
mov
xor
out
add
jle
push
jmp
mov
inc
div
call
ss
mov
js
or
retf
lock
xchg
push
fwait
or
adc
pop
push
add
or
xchg
jno
cdq
ret
xchg
or
jmp
imul
cmp
enter
cmp
mov
sub
sbb
fsubr
lock
repz
cmp
xchg
out
fadd
in
pop
mov
dec
call
pop
rcl
or
sbb
in
pop
dec
mov
push
adc
(bad)
xchg
call
xor
sbb
repz
cmp
sbb
mov
jmp
push
mov
xchg
push
dec
xchg
retf
enter
push
pop
popf
mov
es
frstorw
ret
add
bnd
or
test
repz
lds
repz
lds
repz
lds
repz
(bad)
sub
stc
rcr
repz
(bad)
sub
cmp
repnz
push
cmps
or
stc
cmp
bnd
psllq
cmp
cmc
add
push
(bad)
stc
adc
rep
lds
repz
call
push
pop
clc
test
cmp
jns
outs
clc
or
push
jmp
popa
push
inc
clc
push
push
aas
ffree
psllq
cmp
les
repnz
(bad)
fcomip
inc
(bad)
(bad)
repnz
fwait
repnz
les
repnz
les
repnz
(bad)
repnz
les
repnz
les
repnz
les
repnz
lds
repz
inc
push
jnp
jns
daa
stc
adc
push
inc
clc
inc
push
dec
stc
imul
repnz
xchg
pmaddwd
ins
push
pop
mov
int3
push
xlat
cli
xor
cmp
and
lods
ror
cmp
push
pop
les
repz
lds
repz
repnz
add
lock
nop
mul
out
(bad)
(bad)
push
ss
push
test
psubb
pop
stc
out
or
les
ss
stc
pop
add
sti
push
ss
int
cmc
jmp
(bad)
(bad)
mov
or
stc
and
(bad)
out
outs
inc
push
(bad)
loopne
add
add
sbb
cmp
repz
adc
cli
sub
or
(bad)
psllq
rcr
out
(bad)
adc
cli
sub
or
(bad)
psllq
sar
sbb
cmp
in
sub
or
sar
stos
(bad)
sub
out
lock
sar
stc
cmp
repz
(bad)
cmp
mov
cmp
pop
into
push
push
add
nop
mov
pop
les
cmc
clc
ins
push
pop
mov
int3
push
xlat
pop
xor
repnz
movs
push
repz
outs
cli
push
les
repnz
adc
or
sub
fadd
push
(bad)
or
imul
repz
popf
(bad)
stc
push
xor
cmc
(bad)
psllq
(bad)
sbb
cld
rol
or
imul
sbb
jmp
ud0
and
cmp
repnz
push
cmps
or
std
cmp
repnz
adc
push
pop
adc
repz
(bad)
and
add
sbb
ret
cmp
add
mov
ror
clc
and
test
(bad)
mov
xor
or
mov
dec
push
dec
enter
lods
std
mov
xchg
into
xchg
popf
enter
cmp
mov
mov
out
xor
dec
pop
pop
leave
mov
lds
push
clc
mov
hlt
adc
(bad)
mul
xchg
push
mov
inc
push
sub
mov
loop
adc
loopne
dec
out
aaa
pop
xchg
sar
dec
xor
leave
movs
inc
xor
mov
and
icebp
jnp
inc
inc
dec
retf
sti
jbe
xchg
xor
pop
pop
dec
push
rcr
div
and
pop
mov
(bad)
jne
les
aas
push
mov
sub
adc
movs
sar
inc
jp
dec
push
ja
lods
xchg
mov
xchg
loop
out
sbb
stos
jmp
push
movs
fiadd
icebp
out
pop
inc
mov
fcomp
xor
rcr
mov
xor
jne
mov
int3
lahf
mov
jmp
mov
cmp
loop
lock
and
xchg
mov
leave
push
xchg
xor
sbb
cmp
cmps
aad
stc
sbb
retf
enter
and
cs
sbb
cmp
or
or
add
or
lods
jb
lock
dec
ds
dec
daa
sbb
or
adc
adc
retf
push
xor
push
dec
ss
mov
out
dec
shl
sbb
int3
sti
mov
inc
xchg
out
dec
(bad)
dec
inc
adc
cmp
aaa
and
mov
bound
leave
fisttp
arpl
pop
mov
xor
sub
jnp
jl
jns
pop
gs
jnp
je
add
gs
xchg
jl
stc
ins
scas
or
and
xchg
mov
out
xchg
jl
jns
stos
test
popa
call
jle
jns
dec
gs
jp
call
fcmovnb
jle
jl
fisubr
push
ret
sbb
add
push
(bad)
pop
jmp
aas
ret
(bad)
retf
daa
fisubr
sbb
pop
rcr
dec
adc
fwait
out
mov
xor
and
jmp
fwait
sub
jns
sub
jg
pop
stc
fwait
daa
sub
xchg
push
mov
(bad)
sub
daa
(bad)
and
(bad)
mov
jge
(bad)
pop
rcl
mov
jge
out
pushf
stc
or
xor
push
(bad)
dec
mov
jp
shl
sub
fwait
sbb
jmp
rol
add
fwait
(bad)
sub
pop
retf
push
mov
loope
out
pop
mov
mov
je
out
adc
adc
aad
fwait
out
sub
sub
sub
(bad)
jb
mov
fisubr
pop
cmp
mov
leave
pop
dec
adc
fwait
out
mov
xor
loope
jmp
fwait
jmp
lods
push
jbe
vshufps
fisubr
xchg
xchg
call
push
xchg
push
int
mov
fwait
arpl
jle
xchg
push
test
xchg
jl
outs
rol
xchg
jl
js
jecxz
xchg
ret
test
hlt
mov
xchg
rol
jnp
js
js
clc
jbe
xchg
jge
outs
inc
jl
js
sbb
dec
js
push
pusha
xchg
jge
scas
and
js
push
test
mov
js
jmp
jae
js
push
test
mov
jo
jmp
sahf
gs
jge
imul
scas
or
jge
ins
aam
lods
daa
xchg
and
lahf
jge
mov
adc
stos
and
jl
jnp
pusha
fwait
das
mov
jnp
jl
rcl
jle
test
test
xchg
fdiv
push
jge
jnp
sub
fwait
xchg
lods
xor
jl
dec
cmp
cmp
or
fdiv
push
jge
jnp
sub
fwait
xchg
lods
xor
jl
dec
cmp
cmp
fwait
jae
aam
fidiv
sub
fwait
xchg
lods
xor
jl
dec
cmp
cmp
fwait
jae
aam
(bad)
push
xchg
and
lods
xor
jl
sbb
sbb
xchg
aam
rcl
cmp
cs
and
fwait
jg
aam
test
fs
xchg
jo
jns
and
scas
jnp
test
rcl
nop
cs
and
fwait
jg
aam
test
fs
xchg
jo
jns
and
scas
jnp
test
rcl
nop
cs
and
fwait
jg
aam
test
fs
xchg
jo
jns
and
scas
jnp
test
rcl
nop
cs
and
add
fsub
xchg
jge
lea
jnp
sahf
ins
stos
loopne
fwait
lahf
mov
jb
push
int
aad
fwait
or
fwait
xlat
mov
bound
push
jge
jns
mov
jg
aam
rcl
dec
jbe
jg
loopne
mov
scas
mov
sub
and
mov
scas
mov
bound
push
jge
jns
jns
jg
aam
rcl
dec
jbe
jg
loopne
mov
scas
mov
sub
and
mov
scas
mov
bound
push
jge
mov
mov
inc
call
fs
xchg
jo
jnp
ins
mov
ins
xchg
fwait
cmp
cmp
cs
cdq
jnp
sahf
sahf
inc
test
jnp
aam
(bad)
outs
fidivr
jge
test
xchg
js
xchg
jo
js
ins
xor
jl
jns
in
jg
aam
cmp
xchg
and
inc
call
pop
fwait
xchg
pushf
ficomp
fidivr
jge
test
xchg
js
xchg
jo
jp
dec
mov
imul
and
inc
call
fdiv
push
jge
jnp
sbb
imul
fild
cmp
cs
cdq
jnp
sahf
mov
jp
jne
ret
inc
cmp
test
mov
add
ret
jo
mov
dec
ret
inc
jo
push
call
cld
pushfw
cmp
xchg
bound
lahf
jge
lahf
xchg
rcl
dec
jbe
jg
dec
cmp
and
lea
pusha
fwait
dec
mov
jg
jl
(bad)
mov
jg
jns
test
fist
mov
cmp
ins
xchg
jge
fwait
stos
movs
fdiv
jmp
outs
add
call
out
mov
inc
call
outs
je
cmp
jnp
rcr
jns
jl
imul
xor
ins
test
gs
inc
push
call
ins
xchg
test
jge
push
xor
push
pushf
outs
cmp
push
gs
jb
pushf
imul
(bad)
jp
sti
test
or
in
xchg
mov
bound
ss
mov
pusha
dec
out
ss
jb
leave
or
mov
ds
cdq
jmp
mov
arpl
pop
sbb
mov
jmp
loop
fdiv
leave
movs
out
xor
mov
sar
mov
xor
movs
inc
xor
mov
es
mov
and
or
(bad)
out
aas
add
pop
add
inc
add
xchg
jb
int3
aaa
sbb
mov
fisubr
pop
jl
pop
cmps
adc
cmps
loopne
add
sbb
cmps
sub
icebp
int3
or
jg
xor
rcr
sti
shl
hlt
sbb
int3
add
loope
cmc
adc
aaa
cmc
mov
sub
push
cmps
jmp
cmp
cmps
jmp
fwait
icebp
ins
or
mov
add
mov
xor
cmc
pop
cmc
cli
push
push
in
and
popf
mov
xor
cmc
push
add
loop
cmp
xchg
ret
aaa
stc
pop
in
push
imul
mov
aaa
mov
inc
add
sahf
and
repz
mul
xor
sbb
ins
sbb
push
icebp
mov
lock
repnz
cmps
ss
add
and
add
adc
scas
pop
or
popf
div
push
ficom
test
or
sbb
pop
mov
fcmovnb
mov
call
or
inc
or
fdivr
mov
sbb
cmps
loopne
call
push
cs
ror
mov
sbb
into
or
bound
dec
shl
cmp
jle
mov
repnz
shl
jnp
aas
sub
jge
test
cmps
sub
enter
data16
sub
and
pop
jl
popf
retf
and
ret
xor
lock
cmp
scas
inc
ds
in
sub
mov
adc
mov
cmp
mov
cs
cmps
les
test
or
jecxz
arpl
jmp
loope
test
pop
idiv
add
ds
mov
sub
and
aas
mov
call
aaa
cmc
mov
lods
lock
xor
cdq
jo
hlt
inc
cli
(bad)
cmc
mov
ins
lock
cdq
out
dec
xchg
pop
add
inc
push
adc
push
(bad)
(bad)
dec
movs
aam
jnp
sub
add
retf
and
mov
sahf
imul
mov
push
cmovp
ror
xor
hlt
pop
or
or
xchg
stos
mov
xor
loope
test
push
inc
sbb
mov
jmp
jbe
rcr
das
shl
inc
cmp
xchg
pusha
dec
ficomp
jmp
sbb
rcr
pop
retf
pop
fwait
stos
lods
or
adc
fld
add
mov
imul
mov
popf
push
imul
ss
pop
cmc
jle
dec
in
and
test
add
shl
pop
test
sbb
cmps
jmp
shl
(bad)
pop
jbe
ret
mov
in
pop
inc
pop
cmp
push
xchg
xor
jo
outs
pop
or
mov
mov
fiadd
pop
test
sbb
in
movhlps
retf
or
sub
pop
in
and
sbb
cmp
cmps
rcl
dec
adc
fidivr
lods
adc
mov
add
fild
jl
ret
add
add
int3
retf
sbb
mov
es
jle
fs
xchg
jnp
mov
int3
jg
ss
iret
sar
sbb
arpl
jb
sub
sar
fucomp
mov
jb
sub
sar
fucomp
loope
int3
jle
inc
sbb
out
(bad)
fucomp
mov
jle
inc
or
out
(bad)
fucomp
adc
jle
mov
mov
inc
int
mov
jle
jl
retf
aas
xor
data16
sar
popa
lods
cmp
arpl
addr16
stos
xchg
cmp
and
int3
sahf
call
call
and
int
sub
jb
cwde
repnz
and
int
sub
jo
cwde
repnz
and
int
sub
jp
cwde
repnz
and
int
sub
jnp
test
push
cmp
jmp
retf
iret
data16
shl
fsubr
and
int
cmp
arpl
addr16
stos
mov
and
int3
cmps
jmp
iret
push
sub
and
int
sub
js
cwde
repnz
and
int
sub
jbe
cwde
repnz
and
int
sub
jnp
cwde
repnz
and
int
sub
jnp
test
push
cmp
jmp
retf
iret
data16
shl
fsub
and
int3
jbe
jnp
mov
int3
jg
sub
iret
push
sar
sbb
arpl
jb
sub
sar
fucomp
shl
jle
jb
sub
sar
fucomp
stc
jo
jle
inc
sbb
out
(bad)
fucomp
cmp
inc
or
out
(bad)
fucomp
dec
jo
jle
mov
mov
inc
int
mov
jle
jl
retf
aas
shl
jbe
jl
pusha
int
xchg
sbb
and
push
sbb
popa
jp
rol
(bad)
iret
inc
int
std
pusha
fdivr
pop
into
mov
cmp
cmps
or
xor
cmp
jbe
fwait
jmp
mov
xor
cmc
mov
arpl
pop
jmp
in
push
les
adc
retf
cli
inc
out
or
mov
loop
adc
pop
fsub
(bad)
aas
mov
or
les
call
xor
hlt
dec
jmp
lods
mov
jmp
adc
repnz
or
dec
(bad)
push
ror
or
and
jmp
mov
aaa
(bad)
fsubr
xor
cmc
inc
ds
mov
gs
sbb
cwde
jmp
mov
xor
mov
xchg
arpl
in
ja
adc
aaa
cmc
mov
aad
popa
test
dec
cwde
cwde
jmp
mov
xchg
xor
inc
popf
pop
fsub
inc
ds
loope
clc
push
jmp
movs
sbb
jmp
cwde
jmp
inc
cmp
mov
xor
cmc
mov
aaa
and
gs
sbb
test
inc
jge
adc
jecxz
cmp
or
retf
mov
dec
lods
mov
jmp
test
adc
jecxz
sbb
or
jmp
scas
stc
xor
shr
sbb
pop
push
pop
add
mov
jnp
inc
pop
dec
loopne
ror
jmp
pop
in
addr16
ret
stc
scas
in
loope
bnd
lods
push
pop
cmc
fabs
sub
or
adc
iret
or
dec
ss
mov
aad
mov
frstor
inc
cli
sbb
inc
ss
mov
xor
aam
hlt
pop
inc
mov
push
out
pop
cmps
popa
xchg
out
push
cmp
repz
in
push
push
add
hlt
mov
push
shr
mov
inc
ss
nop
or
es
call
adc
lahf
adc
ficomp
shl
fldenv
in
pop
inc
scas
shl
popa
add
pop
mov
loope
arpl
cli
in
mov
inc
sub
push
dec
pop
retf
std
leave
or
jmp
cmp
jmp
and
fcomi
jb
rcr
in
pop
jle
nop
out
in
sub
shl
inc
adc
retf
push
jae
push
adc
fdiv
pop
ret
dec
retf
mov
xor
pop
dec
call
fidivr
sbb
pop
xchg
inc
or
(bad)
(bad)
and
adc
paddd
dec
loop
push
xor
dec
dec
sub
fabs
sub
(bad)
push
jns
daa
push
or
call
cmc
and
loope
hlt
or
jo
cmc
fabs
sub
dec
les
or
adc
and
loope
mov
or
cmps
dec
adc
dec
jns
sub
dec
push
fs
jge
xor
cmp
je
je
sbb
pop
mul
pop
cli
and
pop
mov
and
je
je
pop
xchg
and
jo
fs
push
scas
stc
push
pop
xchg
and
fs
sti
dec
dec
pusha
(bad)
dec
or
dec
xor
jno
add
dec
inc
mov
pusha
test
push
dec
je
jge
sub
je
je
pusha
adc
jl
mov
push
dec
pusha
sti
dec
dec
pusha
cmps
push
dec
je
pusha
adc
repz
adc
dec
jo
je
xor
xor
pop
sahf
cmp
xor
pusha
push
xor
xchg
pop
dec
push
or
mov
dec
or
je
je
je
inc
mov
and
xchg
dec
adc
dec
or
dec
xor
dec
push
xor
push
pop
imul
dec
dec
jo
movs
fs
jno
add
dec
inc
mov
xchg
dec
pop
pusha
lahf
and
je
js
in
clc
dec
and
fs
pop
scas
je
fs
and
cli
and
lds
js
je
pusha
dec
pusha
addr16
cmp
pusha
or
mov
mov
pop
inc
scas
dec
pop
xor
adc
scas
dec
adc
sti
adc
scas
ins
pop
gs
sbb
pop
mov
dec
popa
jge
lock
fs
mov
push
mov
int3
in
jle
std
mov
loopne
mov
mov
rol
and
and
sub
jno
sub
inc
or
xchg
js
xor
dec
pop
imul
dec
pop
sub
push
xor
pusha
adc
dec
pusha
out
inc
xor
ins
adc
fs
je
pop
xchg
cmp
inc
mov
ins
xchg
pusha
sbb
dec
adc
jns
sub
je
je
dec
jl
stos
jge
cmp
pop
push
jo
pusha
fs
jecxz
inc
mov
ins
xchg
pusha
sbb
js
pusha
scas
cmp
fs
gs
cmp
mov
inc
pop
jns
adc
jno
xor
cmp
dec
and
je
je
xor
pop
add
dec
pop
jns
ins
dec
pusha
xchg
js
push
xchg
je
je
pusha
inc
inc
call
push
stos
pusha
dec
pusha
jmp
adc
dec
pop
cli
pusha
cmp
jecxz
ins
pop
repnz
pusha
mov
fs
stos
je
xor
xor
pop
sahf
cmp
xor
je
inc
mov
je
inc
out
popa
pop
cli
sbb
pusha
mov
cld
pop
fldenv
pop
inc
scas
dec
pop
xor
adc
scas
dec
adc
sti
adc
scas
ins
pop
gs
sbb
pop
mov
jo
pusha
cmps
jo
pusha
jmp
cmp
iret
ins
or
stos
je
pop
mov
and
js
xchg
std
inc
inc
stos
dec
jl
es
pop
xchg
clc
rol
gs
xchg
jno
sub
inc
add
pop
push
scas
sub
dec
jge
mov
push
je
sti
jo
pusha
sti
jge
sub
sub
je
xor
pusha
pop
xor
and
je
dec
pop
cmp
and
xchg
dec
adc
and
and
sub
je
push
call
push
xchg
je
je
pusha
pop
js
dec
adc
jo
pusha
lahf
adc
je
xor
inc
sbb
dec
pop
cli
dec
adc
jo
pusha
cmps
dec
pusha
pusha
cmps
and
fs
iret
xor
adc
pusha
ins
mov
pusha
cmps
push
or
cli
pusha
fs
fs
gs
adc
scas
and
xchg
push
adc
jno
je
push
or
jo
pusha
daa
pusha
adc
mov
adc
dec
jl
mov
jns
sub
je
je
inc
add
call
pop
call
cmp
xchg
jne
push
call
pop
loop
jge
mov
dec
fs
inc
pusha
fst
pusha
inc
inc
xchg
adc
scas
and
je
cmp
pusha
scas
dec
dec
and
cmp
jge
jo
dec
cmp
arpl
call
pop
mov
aam
xchg
ror
xchg
push
inc
pusha
sti
push
dec
pusha
mov
pusha
je
dec
adc
xchg
jo
pusha
jmp
jge
call
sub
jge
push
stos
cmp
fs
mov
and
xchg
cmp
pusha
scas
and
je
push
push
ins
mov
call
pop
loop
pop
sub
and
xchg
dec
adc
je
fs
sub
and
xchg
inc
pop
cmp
mov
adc
push
je
dec
pop
ins
xchg
and
inc
cmps
ins
dec
jo
and
dec
sbb
adc
stos
cmp
jo
mov
pusha
pusha
sub
in
pusha
cmovs
in
sbb
pop
cli
mov
mov
pusha
pop
add
ins
pusha
xor
sub
inc
scas
pusha
dec
pusha
mov
dec
dec
push
jmp
add
pop
push
jo
dec
pusha
pusha
iret
jns
sub
dec
or
rol
gs
xchg
xor
sub
and
fs
lahf
jno
je
dec
pusha
pusha
(bad)
dec
adc
scas
dec
or
pusha
push
and
je
mov
jo
je
jno
pop
stos
cmp
cmp
pusha
sti
ins
pop
pop
out
dec
sub
je
pop
out
or
js
stos
dec
fs
call
gs
inc
pop
inc
cmps
je
ins
xchg
pop
stos
push
gs
cmc
xor
cmc
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
das
je
je
je
inc
mov
je
pop
cli
ins
jl
stos
inc
jl
scas
fs
mov
movs
dec
sub
je
je
jge
lock
sub
and
jmp
mov
xchg
jo
sub
and
inc
scas
je
inc
out
rol
gs
xchg
clc
rol
gs
xchg
jno
sub
ins
pop
sub
scas
jo
push
mov
push
fs
call
add
cmp
stos
pusha
cmp
cli
dec
ins
pop
cmovl
je
jns
xor
dec
push
xor
jo
xor
mov
push
daa
je
ins
xchg
loopne
cli
je
sub
push
dec
ins
cli
je
pop
out
pop
pop
mov
je
ins
cli
and
js
stos
cmp
xor
je
xor
pusha
push
pop
mov
pusha
pop
imul
jne
jo
push
fdivr
push
pop
cmp
dec
pop
xor
pusha
pop
add
je
xor
je
sub
pusha
dec
sub
dec
dec
pusha
pop
adc
scas
je
xor
xor
cmp
in
xor
sbb
je
in
loopne
les
cmc
mov
loope
cmc
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
sub
cmc
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
test
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
sub
cmc
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
xchg
loope
cmc
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
pop
(bad)
hlt
jge
loop
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
xchg
loope
cmc
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fxam
sub
fabs
sub
pop
(bad)
hlt
jge
loop
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
(bad)
loope
cmc
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
pop
(bad)
hlt
jge
loop
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
xchg
loope
cmc
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
pop
(bad)
hlt
jge
loop
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
loope
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
pop
(bad)
hlt
jge
loop
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
les
es
pop
stos
jo
ins
mov
pusha
jl
clc
rol
gs
xchg
cmp
mov
pusha
cld
pop
cli
and
pop
mov
cmp
sub
pusha
loopne
cli
int3
sbb
dec
xor
stc
adc
fs
xchg
dec
push
xor
sub
sub
xchg
jo
je
dec
dec
pusha
cmps
dec
pusha
xor
pop
push
stc
mov
pop
cmp
push
dec
pusha
mov
push
push
call
cmp
in
add
inc
fs
(bad)
cmp
inc
pop
jns
je
je
imul
mov
imul
pop
ins
scas
js
cmps
je
sub
inc
jl
stos
cmp
xor
icebp
adc
sub
out
adc
idiv
call
fs
je
dec
xchg
add
ror
dec
push
mov
xor
sbb
and
push
mov
sahf
inc
pop
xor
xor
xchg
push
or
loop
dec
sub
pusha
push
fs
jns
inc
xchg
jno
push
xchg
pop
or
inc
cli
je
inc
cli
and
jecxz
pop
std
call
lods
cli
je
je
and
pop
(bad)
cmp
pusha
and
sub
inc
popa
je
and
imul
and
cmp
and
push
or
mov
mov
leave
xor
rcl
and
je
inc
inc
inc
mov
jne
xor
xchg
cmp
adc
pusha
adc
mov
dec
fs
pusha
ins
pusha
fwait
je
je
fs
pop
xchg
and
xchg
dec
adc
stos
push
inc
pusha
imul
pusha
pop
(bad)
push
push
jo
ret
jmp
loop
adc
scas
std
dec
sub
dec
jl
cmps
icebp
jl
stos
inc
mov
stos
and
pop
aad
and
fs
dec
pusha
arpl
fs
push
pop
jmp
scas
sbb
pusha
mov
inc
pusha
ins
xchg
shl
inc
lock
and
xchg
xor
je
sub
jo
popa
daa
inc
inc
je
inc
pop
add
jne
and
xchg
je
pop
mov
fdivr
mov
cmp
xchg
cmp
push
adc
aam
dec
shr
mov
mov
dec
jl
cmps
icebp
jl
stos
jne
aam
cmp
pop
in
(bad)
je
je
pusha
xchg
xor
jne
xor
fnstsw
push
cmp
mul
pop
jmp
mov
jl
je
dec
fs
push
dec
pusha
and
ins
xchg
movs
pusha
pusha
das
pop
in
aam
dec
in
jmp
in
mov
stc
inc
sub
mov
rcr
in
xchg
jne
xor
test
dec
sub
fs
call
pusha
imul
pusha
pop
jno
push
stos
shl
pusha
pop
sub
cld
push
aam
dec
in
jmp
aad
lds
inc
dec
cmp
dec
int3
push
jmp
aad
cmp
pop
(bad)
jne
je
rcl
cmp
dec
sbb
call
jo
and
xor
and
and
scas
loope
xor
jo
popa
daa
cmp
push
stos
cmp
pop
cli
pop
dec
aam
je
call
cmps
dec
pusha
pop
call
add
jne
jo
pop
mov
pop
lods
cli
je
fs
cmp
mov
je
je
xor
push
out
push
pop
jmp
mov
jne
xor
jne
add
shl
jbe
lock
jo
sub
lds
je
std
pop
push
cmps
icebp
jl
stos
inc
mov
stos
cmp
pop
lods
mov
je
je
ins
mov
mov
pop
lods
cli
ror
pusha
lock
xor
mov
sbb
pusha
and
ins
xchg
movs
pusha
pusha
das
cmp
pusha
(bad)
js
push
xchg
fs
xor
jne
sub
xchg
and
jo
aad
inc
stos
je
jl
pusha
xchg
xor
ror
stc
lock
movs
fs
xchg
pusha
adc
adc
jne
sub
xchg
and
jo
aad
inc
stos
je
jl
pusha
xchg
xor
lds
dec
fs
mov
fcomp
imul
leave
test
pop
cli
cmp
jo
and
pop
mov
jo
xor
dec
dec
je
shl
jmp
push
pusha
and
ins
xchg
movs
pusha
pusha
das
jne
pusha
lahf
std
adc
idiv
or
mov
cmp
push
stos
dec
fs
mov
sbb
xor
inc
fs
mov
fs
cli
jo
inc
xchg
jns
push
xchg
frstor
push
push
in
leave
jnp
dec
pusha
pop
push
dec
pusha
fs
xor
dec
or
pop
rcl
js
inc
cli
je
inc
xchg
je
mov
jne
leave
out
push
adc
scas
fs
pusha
arpl
popa
sbb
xchg
jne
cmc
loop
cmp
cs
pop
mov
je
je
push
dec
pop
sahf
jo
sub
dec
in
pusha
sbb
fs
loope
sub
dec
dec
push
xchg
je
pop
xchg
stc
jns
(bad)
and
pop
loop
pop
aad
jo
sub
xor
in
pop
pusha
pusha
xor
push
pop
push
stos
lods
add
daa
dec
pop
pop
cmps
cmp
cmp
and
(bad)
je
cmp
stc
jns
(bad)
jl
xor
push
dec
ins
stos
mov
js
loop
gs
mov
push
pop
inc
out
push
aam
mov
xor
push
jl
ja
pusha
pop
mov
jl
icebp
or
cmp
push
stos
mov
pop
sub
dec
or
pop
inc
jecxz
aam
xchg
dec
push
xor
cmp
fst
push
pop
add
movs
sbb
daa
dec
sub
lods
adc
dec
jl
cli
je
inc
scas
stc
jns
(bad)
push
clc
fs
and
xchg
je
ins
xchg
dec
adc
push
pop
xchg
shl
and
jmp
mov
pop
in
and
imul
rcl
stc
lock
in
inc
xchg
je
sub
dec
push
pop
mov
je
inc
pusha
ins
xchg
and
imul
xor
push
scas
shl
and
jmp
mov
pop
in
xor
aad
and
imul
jns
and
(bad)
sub
pop
push
scas
std
adc
stos
dec
jl
cmps
icebp
jl
stos
push
mov
stos
push
pusha
pusha
addr16
dec
sub
pusha
fs
sahf
dec
adc
xchg
inc
pop
in
scas
rcr
out
icebp
add
xor
popa
addr16
popa
adc
in
leave
mul
pop
mov
dec
or
mov
sub
push
pop
aam
hlt
pusha
js
cmp
cmps
and
push
(bad)
cmp
shl
scas
sar
add
lock
aas
and
pop
xchg
shl
pop
push
call
inc
xchg
inc
fnsave
xchg
push
fs
xchg
adc
cmp
jecxz
sbb
xor
dec
dec
push
xchg
inc
or
pop
in
dec
pop
in
scas
rcr
sub
cmp
mov
fs
inc
fs
scas
inc
pusha
ins
xchg
dec
in
leave
(bad)
jl
pop
sub
xor
jns
push
xchg
frstor
push
sub
popa
add
and
inc
pop
test
into
ins
aam
mov
dec
je
je
pop
jmp
xor
dec
push
pop
mov
pop
in
xor
adc
out
dec
sub
fs
pusha
aas
and
pop
xchg
icebp
fs
stos
cmp
push
push
xor
xor
adc
pop
xchg
push
dec
jl
push
or
pusha
pop
cmps
and
mov
stos
je
pop
mov
dec
push
xor
inc
adc
pop
jmp
mov
pop
in
pusha
in
leave
imul
fs
pop
xchg
inc
pop
aad
sub
iret
aad
sub
mov
and
je
cmp
stc
xchg
js
pusha
pop
cmp
xor
jne
add
stc
fsubr
stos
fs
pop
scas
adc
jnp
clc
pusha
out
rcl
aad
jo
sub
dec
push
pop
mov
jmp
mov
pop
in
rcr
cmp
pop
cli
je
fs
xor
rcl
mov
aad
je
inc
mov
pusha
cwde
xor
pusha
adc
pop
xor
sub
je
inc
xchg
js
pop
(bad)
je
je
dec
js
mov
and
cmp
out
push
xor
push
or
cmp
dec
or
mov
cmp
je
inc
and
cmp
aas
jo
pusha
addr16
jge
cli
dec
call
sub
je
and
jne
xor
fisttp
push
xor
xor
push
xor
jo
sub
dec
push
pop
mov
sahf
rcl
shl
aad
jo
sub
dec
push
pop
mov
jmp
mov
pop
in
test
adc
jge
into
cmp
pop
inc
ins
je
xor
sbb
and
push
mov
ror
dec
pop
inc
out
pusha
pop
mov
and
je
dec
pop
aad
jo
sub
cmp
pusha
or
fsub
fld
popa
pop
dec
add
pop
out
pop
ins
xchg
inc
pusha
fs
inc
pusha
ins
xchg
dec
in
leave
(bad)
push
inc
pop
sub
sub
dec
push
pop
mov
sahf
rcl
shl
aad
jo
sub
dec
push
pop
mov
shr
inc
jge
stos
adc
(bad)
and
jmp
mov
shr
fnstsw
push
jne
xor
mov
dec
pop
mov
mov
dec
sub
dec
push
pop
xchg
mov
push
stos
sub
pusha
add
adc
xor
xor
push
xor
jo
sub
dec
push
pop
mov
sahf
dec
push
pop
sahf
fucomp
leave
pop
dec
fdiv
dec
push
pop
mov
mov
je
inc
xchg
je
mov
and
push
cmp
and
ins
xchg
dec
pusha
pusha
pop
pusha
pusha
xor
fstp
push
cmp
in
mov
xchg
inc
dec
je
dec
pop
pusha
daa
or
dec
sub
pusha
dec
inc
mov
adc
stos
cmp
pop
cli
inc
dec
fs
je
xor
sub
fnstsw
cmp
dec
pop
xor
dec
push
pop
mov
mov
std
lock
dec
jl
cmps
loope
pop
stos
cmp
jne
add
and
pop
xchg
inc
adc
pop
jmp
mov
pop
in
rcr
cmp
pop
cli
je
fs
ins
push
and
imul
inc
or
pusha
pop
xor
shl
and
inc
cli
dec
sbb
xchg
js
inc
cli
pusha
fs
xchg
cmp
jns
add
push
pop
aam
hlt
pusha
js
js
inc
cli
pusha
fs
xchg
cmp
jns
add
rcr
and
mov
es
in
leave
pop
pusha
pusha
xor
lods
pop
push
call
ins
mov
push
xchg
sar
adc
add
and
push
xchg
lds
loop
popa
xor
and
jmp
repnz
pop
inc
xchg
and
and
je
dec
push
xor
jne
push
call
sub
jne
add
cmp
push
xchg
fisttp
push
pusha
in
leave
daa
pusha
push
aam
sbb
xor
sub
pusha
add
cmps
pusha
push
pop
xchg
fisttp
pop
pop
xor
pop
aad
jo
pop
into
sub
pusha
das
inc
dec
pusha
aas
dec
pop
aad
jo
sub
stc
aam
stos
fs
pop
scas
test
pop
cmp
rol
xor
sbb
jne
and
pusha
clc
pop
test
jo
popa
jae
pusha
ins
xchg
inc
add
pop
jmp
add
pop
inc
retf
adc
sbb
cmp
and
inc
cli
dec
sbb
xchg
dec
add
inc
cli
push
fs
xchg
dec
pop
ins
out
push
pop
sahf
fucomp
leave
pop
fs
xor
jo
inc
mov
pop
in
dec
js
fs
pusha
fs
push
adc
push
or
pusha
pusha
das
mov
aam
pusha
js
xchg
inc
xor
inc
add
sti
inc
add
cmp
cmp
leave
out
adc
je
je
pusha
adc
loop
dec
xor
pusha
fs
jge
push
stos
push
push
aam
sbb
xor
sub
and
out
push
pop
jo
adc
cmps
inc
pusha
ins
xchg
dec
in
leave
cmps
js
xor
push
pop
jo
adc
cmps
inc
pusha
ins
xchg
fucomp
leave
pop
push
mov
pusha
pop
mov
scas
je
sub
cmp
xor
je
pop
mov
push
or
pusha
pusha
das
adc
aam
test
dec
sub
jo
sub
jo
popa
jae
pusha
ins
xchg
je
je
fst
in
push
xor
xor
hlt
fs
xor
add
dec
push
xor
js
push
xchg
sub
std
dec
sub
je
xor
push
ins
popa
and
ins
xchg
movs
pusha
pusha
das
mov
dec
sub
and
je
rcr
and
inc
cli
dec
sbb
xchg
dec
add
je
dec
push
sub
rcl
jne
add
cmp
push
scas
pusha
dec
pop
cmps
je
lods
cli
jo
xor
jne
fs
fstp
push
in
leave
jnp
dec
pusha
and
out
cdq
xor
jo
popa
aas
adc
je
xor
sbb
or
call
jo
sub
xor
cmp
pusha
pop
lods
call
aad
inc
dec
sub
and
je
rcr
and
inc
cli
dec
sbb
xchg
dec
add
je
dec
push
sub
rcl
cmp
lds
std
jl
stos
dec
jl
cmps
icebp
jl
stos
inc
mov
stos
dec
pop
aad
jo
sub
and
inc
xchg
dec
ins
sar
sar
pop
sub
and
pusha
imul
cmp
je
inc
and
dec
pusha
pusha
jnp
or
mov
xor
xor
sub
adc
je
je
pop
xchg
push
dec
inc
stos
jne
xor
inc
push
pop
(bad)
pusha
pusha
popa
pop
xor
sub
je
inc
xchg
je
sub
dec
xchg
mov
push
sbb
pop
scas
mov
push
stos
xor
pusha
or
add
daa
jo
fs
dec
or
ret
inc
xchg
dec
or
jl
scas
dec
ins
pop
cmps
shr
cmp
lds
lds
pusha
pop
ins
mov
fs
pop
push
stos
std
or
stos
dec
jl
cmps
lds
pusha
pop
ins
mov
mov
in
leave
repz
popa
pop
gs
je
mov
sub
dec
jl
xchg
cmp
cmp
mov
dec
adc
popa
pop
mov
je
cmp
sbb
inc
cli
dec
sbb
xchg
and
pop
out
pop
ins
xchg
inc
pusha
fs
inc
pusha
ins
xchg
shl
pusha
lock
(bad)
je
je
adc
dec
pop
std
mov
movs
sbb
das
xor
aam
jne
sub
inc
aam
mov
jo
pusha
fwait
dec
pop
in
scas
push
pop
sub
pusha
pop
movs
inc
cmps
je
movs
es
and
std
adc
out
jl
cmps
icebp
jl
stos
mov
js
loop
gs
mov
jo
gs
push
scas
cmp
or
xor
sub
aam
popa
addr16
in
lock
loopne
les
push
test
mov
lock
inc
(bad)
and
inc
cli
dec
sbb
xchg
cmp
cmps
and
push
(bad)
cmp
shl
ins
lock
xchg
and
loopne
inc
push
sub
dec
or
mov
sub
test
dec
sub
cmp
pop
scas
inc
or
je
fs
js
inc
cli
je
inc
xchg
rcr
push
and
or
xchg
je
fs
push
stos
and
inc
out
imul
xchg
in
mov
aad
cs
cwde
les
fst
add
jp
pop
aad
je
jl
in
fsubr
cld
push
test
and
mov
and
inc
cli
dec
sbb
sub
and
imul
cmp
sbb
lahf
and
sbb
aad
je
lods
jp
xchg
sar
loopne
pusha
daa
mov
in
leave
jae
nop
les
enter
rcl
in
shl
and
jmp
ins
add
cmp
out
sbb
add
lock
cmp
cld
hlt
stos
fcom
in
movs
xchg
fdiv
mov
mov
jbe
loopne
arpl
in
leave
das
inc
in
rcr
and
ins
sub
xor
jecxz
or
mov
add
or
stos
je
les
loopne
mov
(bad)
mov
inc
adc
sti
inc
adc
sti
and
leave
retf
xor
sub
dec
in
leave
jg
jl
mov
je
pop
mov
fcom
rcl
scas
cmp
lods
scas
dec
je
cli
mul
mov
dec
jl
cmps
icebp
jl
stos
push
mov
stos
jo
pusha
daa
push
push
sub
cmp
sub
rcr
xor
cmp
loop
pop
jo
sub
pusha
das
sub
jge
cmp
dec
or
push
pop
out
push
fs
dec
jl
mov
fsubr
and
call
pop
cmps
jo
leave
addr16
dec
scas
inc
gs
xchg
je
lods
push
je
cmp
rcr
add
mov
pusha
and
ins
xchg
jo
pusha
pop
dec
push
inc
mov
dec
aam
jne
and
inc
hlt
sub
je
cmp
mov
hlt
pusha
daa
jo
fs
pusha
add
jecxz
inc
inc
xchg
js
inc
cli
dec
gs
xchg
fst
push
jo
xor
dec
or
call
xor
sub
and
mov
dec
imul
in
leave
repz
popa
pop
mov
or
and
pop
cmps
jne
pop
call
ins
push
inc
sbb
in
scas
rcr
pusha
lock
adc
stc
xchg
fs
stc
mov
dec
push
mov
inc
sbb
xchg
cmp
inc
xchg
fnsave
pop
xor
xor
sub
pop
xchg
jns
cmp
and
add
push
fs
xchg
xchg
push
fs
cmp
pop
lods
jmp
in
dec
push
xor
and
jmp
mov
icebp
mov
fstp
push
mov
sbb
pusha
fs
inc
add
pop
mov
dec
fs
cli
and
leave
mov
and
sub
js
jno
cmp
pop
cli
jns
push
xchg
rcr
pusha
lock
loop
cmp
xchg
movs
pusha
jo
push
dec
sub
and
std
scas
adc
sub
mov
ror
xor
pop
jmp
cli
cmp
mov
dec
fs
cli
int3
push
aad
sub
and
daa
jo
fs
dec
pop
ins
call
pusha
lahf
and
inc
cmps
jo
sub
dec
push
pop
mov
pop
in
xor
leave
out
jmp
cmp
and
pusha
addr16
je
push
push
xor
jne
in
call
fs
dec
add
inc
cli
pusha
adc
adc
dec
push
pop
cmps
(bad)
pop
dec
jl
mov
fsubr
pop
push
sub
jns
ins
xchg
frstor
push
push
clc
fs
pop
repnz
pop
lods
cmps
ror
scas
and
jmp
mov
pop
in
js
rcl
je
gs
and
xor
pusha
cmp
adc
push
into
cmp
pusha
pcmpeqb
mov
cdq
xor
pusha
lock
inc
pop
shr
and
jmp
mov
pop
in
je
inc
out
pop
pusha
xchg
push
dec
pusha
mov
jo
pop
xchg
movs
push
aam
sub
xchg
je
pop
mov
cmp
pop
stos
push
or
cmps
je
sub
js
inc
cli
je
inc
xchg
and
cmp
jo
inc
pop
gs
and
pop
(bad)
fisttp
pop
and
xor
pusha
cmp
adc
push
into
cmp
pusha
pcmpeqb
mov
mov
push
cmp
xor
jne
add
cmp
shl
xlat
cmp
mov
retf
inc
cli
dec
sbb
sub
sub
ins
scas
pusha
jl
cli
dec
cmp
dec
ins
pop
mov
ins
je
adc
jge
out
cmp
or
jmp
mov
jl
cmps
push
in
leave
mov
js
inc
scas
dec
adc
cmps
test
pop
cmp
inc
inc
je
xor
sbb
jne
and
pusha
clc
pop
test
jo
leave
jae
pusha
ins
xchg
rol
loop
icebp
jmp
inc
jne
aad
jo
fs
fisttp
push
adc
add
and
repz
in
leave
cmps
js
xor
push
or
pusha
inc
scas
dec
adc
cmps
shr
jo
movs
(bad)
push
pop
in
dec
jo
and
mov
retf
pop
sahf
dec
lock
ret
push
repz
push
imul
add
pop
push
int3
push
scas
jns
or
xor
cmp
fs
dec
cmp
shr
push
lock
(bad)
movs
push
dec
and
in
leave
out
jl
ins
xchg
pop
cmps
jo
pop
cmps
xor
add
ins
movs
jle
aad
sahf
sub
xor
fucomp
leave
pop
cmp
in
std
fs
stos
je
add
les
pop
sar
jo
leave
scas
jl
pop
xchg
push
gs
mov
dec
lock
scas
je
jo
pusha
test
pop
and
xchg
sub
add
test
pop
cli
adc
sbb
adc
cmp
xor
sbb
sub
mov
js
loop
gs
mov
fucomp
leave
pop
inc
and
pusha
xchg
and
lods
scas
push
fs
jo
leave
repz
or
cli
and
sub
push
fs
inc
pusha
ins
xchg
adc
or
xor
jmp
in
leave
mov
add
div
sbb
out
sbb
je
sub
pusha
xchg
xor
jne
xor
sub
in
leave
and
cli
inc
sub
dec
pop
sub
jo
fs
lods
xchg
pusha
test
lock
xchg
inc
pusha
pusha
daa
push
or
cmps
dec
in
leave
cmps
inc
jl
cmps
push
or
cmps
inc
pusha
ins
xchg
inc
in
leave
aas
sbb
inc
call
pop
loop
fsubr
pusha
ins
call
pop
sahf
inc
lock
cmp
push
xor
je
xor
sbb
xor
sbb
leave
jnp
pop
jo
dec
jl
cmps
jns
pop
xchg
frstor
push
(bad)
sub
scas
and
jmp
mov
aam
inc
fs
scas
js
inc
cli
cmp
inc
pusha
ins
xchg
fucomp
leave
pop
mov
scas
and
call
mov
leave
sti
jl
jo
dec
jl
cmps
jns
pop
xchg
frstor
push
push
in
leave
or
or
jp
in
leave
mov
push
xchg
fucomp
leave
pop
adc
pop
call
cmps
sar
inc
lock
xchg
jo
xor
js
sub
dec
or
pusha
ins
xchg
fucomp
leave
pop
dec
aam
mov
scas
fisttp
push
dec
add
pop
mov
scas
dec
dec
sub
push
in
leave
and
lods
cli
(bad)
push
dec
add
inc
cli
xor
fs
and
pop
mov
push
aam
out
pop
lds
sar
cmp
ins
scas
and
inc
xchg
push
fs
xchg
jns
sub
frstor
push
(bad)
sub
pop
dec
mov
dec
add
xchg
cmps
rcl
std
lock
and
sar
and
imul
fucomp
leave
pop
dec
aam
mov
xchg
pop
bound
lock
xchg
cmp
sub
fucomp
leave
pop
cmp
add
clc
dec
sub
shl
xor
jne
cmp
je
dec
push
pop
mov
ins
xchg
fucomp
leave
pop
dec
aam
mov
fs
in
leave
cmps
jo
pop
cmps
jns
je
frstor
push
dec
in
leave
daa
jo
pop
and
adc
pop
mov
fs
pusha
ins
xchg
fucomp
leave
pop
push
fsubr
xchg
cmp
scas
jns
aam
jl
inc
xchg
dec
pop
sub
rcl
stc
lock
clc
fs
xchg
rcr
push
lock
xchg
ins
pusha
ins
scas
dec
dec
pop
cmps
stc
ins
aam
je
inc
xchg
pusha
aam
mov
push
pop
pop
int
sub
out
or
das
jne
pusha
lahf
je
pop
mov
std
adc
add
pop
xchg
inc
imul
cmp
adc
add
pop
xchg
cmp
popa
mov
cmp
sti
sub
in
leave
out
sbb
xchg
dec
or
cmps
jo
pop
cmps
jns
je
frstor
push
dec
in
leave
daa
dec
jl
bound
pop
cmps
sub
jns
cmp
cmp
inc
xchg
jns
sub
xor
xor
hlt
fs
dec
push
pop
mov
loop
push
pop
sahf
fucomp
leave
pop
pusha
call
mov
sub
cmp
scas
js
push
xchg
fucomp
leave
pop
xor
cmc
retf
je
dec
aam
mov
leave
mov
push
adc
xchg
dec
pusha
pop
cmps
cmp
dec
or
jmp
and
dec
adc
cmps
jns
pop
xchg
frstor
push
dec
in
leave
daa
pop
jl
push
jns
aam
inc
fs
xchg
jns
xor
push
in
leave
and
movs
(bad)
fst
push
xor
cli
pop
or
cmps
hlt
popa
ins
xchg
and
inc
cli
and
call
mov
jns
xor
fucomp
leave
pop
movs
cld
call
(bad)
jns
xor
fucomp
leave
pop
cld
rol
pop
sub
jl
inc
cli
jo
sub
pop
fs
(bad)
fucomp
leave
pop
and
inc
cli
js
ror
push
in
leave
mov
dec
jl
mov
sub
frstor
push
and
leave
outs
cld
jl
xchg
xor
fnstsw
push
js
xor
and
push
mov
xchg
fisttp
xor
hlt
fs
js
xor
and
push
mov
xchg
fisttp
leave
jnp
dec
pusha
jae
sbb
pop
push
jecxz
xchg
inc
xchg
and
jo
aad
inc
stos
je
jl
pusha
xchg
xor
fisttp
push
dec
add
pop
mov
push
xchg
dec
adc
shl
f2xm1
aad
pusha
adc
pusha
aam
pop
add
xchg
pusha
adc
pusha
pop
cmps
dec
ins
loopne
dec
add
jnp
pop
jmp
mov
mov
adc
add
cmp
cld
shl
dec
jl
cmps
dec
jge
out
jl
mov
gs
ret
xor
pushf
jl
adc
ins
xchg
inc
in
leave
aas
sbb
inc
call
cmps
and
push
xchg
frstor
push
dec
cwde
inc
xchg
pop
dec
or
and
add
pop
dec
aam
mov
jo
sbb
pop
xchg
and
leave
and
call
mov
xchg
frstor
push
and
pop
xchg
hlt
pop
ins
cli
jl
xor
dec
jl
cmps
jns
pop
xchg
sbb
pop
xchg
fucomp
leave
pop
push
fsubr
xchg
ins
pusha
rcl
jns
cmp
inc
fs
xchg
dec
gs
dec
push
pop
sahf
fstp
push
movs
in
leave
and
fs
inc
or
scas
fnstsw
push
jo
xor
and
scas
jo
xor
dec
imul
lock
sahf
jne
push
ret
je
pop
dec
je
cmp
push
mov
jo
push
mov
ins
xchg
push
in
leave
imul
repz
stos
jne
and
sti
enter
adc
jmp
out
test
sub
rcr
lock
into
inc
popa
je
test
fldenv
in
leave
pop
cld
les
jl
fnstsw
push
js
inc
cli
je
inc
xchg
je
xor
shr
mov
xor
stos
cmp
and
mov
or
mov
dec
dec
push
mov
clc
pop
mov
jmp
sbb
jo
xor
shr
and
jge
js
inc
cli
dec
gs
xchg
dec
push
pop
sahf
fstp
push
dec
in
leave
daa
jo
pop
add
pusha
imul
sbb
dec
pop
pop
jl
je
dec
fs
icebp
dec
push
stos
cmp
sub
jo
push
mov
leave
cmps
jo
pop
or
cmps
shr
js
imul
ror
js
imul
dec
dec
xor
shl
in
lock
xor
sub
cmp
jns
cmp
dec
or
and
fucomp
leave
pop
fs
fs
rcl
push
je
add
mov
and
pop
mov
dec
aam
mov
pop
mov
in
leave
cmps
dec
jl
call
push
xchg
ror
xchg
push
pop
push
mov
frstor
push
jo
pop
cmps
and
push
mov
pop
cmps
shr
push
lock
jne
cmp
jo
fs
dec
dec
inc
scas
js
cmc
retf
fs
mov
pop
cmc
retf
fs
fmul
js
cmc
retf
fs
and
jo
xor
dec
push
cmc
retf
fs
pusha
dec
sub
pusha
add
inc
dec
pop
push
scas
adc
pusha
aas
dec
push
inc
scas
rol
cmp
xor
inc
fs
scas
js
cmc
retf
fs
push
dec
sub
push
pop
xor
push
or
xchg
and
call
mov
out
pop
pusha
out
inc
xor
jge
je
fs
sub
inc
pop
pop
xchg
je
pop
mov
je
pop
cli
and
add
ror
aad
aad
and
fs
jmp
cmp
inc
xchg
xor
mov
scas
push
dec
pusha
mov
ins
pusha
sub
je
pop
sahf
popa
pop
pop
stos
jo
ins
mov
mov
movs
pusha
pusha
das
fucomp
pop
pop
cmp
pop
jnp
pop
pop
out
dec
sub
fs
pusha
scas
cmp
mov
pop
push
xor
fnstsw
pop
inc
mov
fs
scas
push
dec
pusha
sti
pusha
dec
pusha
xchg
cmp
adc
pusha
mov
dec
inc
je
dec
adc
rcr
pusha
pop
pop
jmp
pusha
cmps
cmp
sub
je
pop
mov
or
push
je
fld
leave
mov
add
(bad)
cmp
jno
jo
xor
and
pusha
pop
push
call
add
scas
dec
or
push
jl
cli
je
pusha
scas
je
je
js
inc
cli
je
inc
xchg
inc
add
call
push
call
pusha
(bad)
and
loop
push
xor
sub
leave
xor
add
xchg
pusha
cld
pop
cli
and
pop
mov
cmp
sub
dec
pusha
popa
aaa
je
xor
cmp
jo
sbb
sub
dec
pop
imul
dec
jl
mov
fs
cli
je
pop
mov
mov
or
pop
in
test
pop
push
call
xor
inc
adc
inc
ins
mov
mov
and
pop
jmp
inc
stos
xor
pop
sub
dec
sub
and
adc
je
je
xor
cmp
fs
add
loop
pop
inc
out
adc
cmps
jne
je
pusha
xchg
repnz
xchg
jo
pusha
jmp
adc
idiv
adc
inc
pop
js
xor
adc
adc
cmp
xchg
dec
inc
push
mov
cmps
je
ins
xchg
pop
cli
push
sbb
pusha
popa
xor
push
xor
xor
adc
or
fs
stos
sub
stos
push
dec
push
stos
xor
pop
add
pusha
push
gs
push
dec
pop
cli
and
fs
sti
pusha
dec
pusha
out
push
xor
cmp
dec
ins
xchg
fs
je
dec
pop
xor
push
call
pusha
sti
and
xchg
push
adc
push
or
pusha
pusha
mul
push
mov
push
push
dec
cmps
dec
pop
inc
xchg
dec
jl
mov
fs
cli
push
push
pusha
daa
je
ins
xchg
fs
stos
cmp
and
dec
int3
add
jne
xor
push
adc
jo
pusha
jmp
sbb
add
call
and
pusha
add
pop
dec
mov
push
or
push
pusha
jl
jo
pusha
lahf
inc
pusha
xor
push
imul
dec
pop
sub
cli
jne
je
je
pop
mov
dec
je
xchg
fs
jge
cmp
pusha
imul
scas
pusha
dec
pusha
pop
jne
jl
js
push
mov
add
mov
rol
pop
dec
mov
and
xchg
push
adc
push
or
pusha
pusha
mov
pusha
dec
pusha
jecxz
inc
push
mov
dec
js
stos
gs
cmp
cmp
sar
shl
add
mov
pusha
and
in
xchg
jo
pusha
jmp
cmp
mov
pop
push
jge
shl
adc
dec
inc
popa
xchg
pusha
pop
xor
popa
or
stos
cmp
xor
and
imul
cmp
je
inc
push
ins
xchg
mov
dec
cmp
mov
(bad)
add
loop
pop
push
xchg
jl
pusha
scas
je
xor
clc
rol
gs
xchg
sub
inc
xchg
and
pop
mov
dec
push
pop
mov
(bad)
jne
pop
stos
jne
popa
stos
jne
popa
stos
jne
popa
stos
and
imul
dec
in
leave
mov
dec
push
pop
mov
inc
cli
push
add
xchg
lds
dec
push
xor
dec
pop
popa
mov
dec
push
pop
mov
inc
cli
push
add
xchg
std
mov
jo
sub
adc
mov
and
imul
push
add
xchg
fs
mov
push
inc
cli
cmp
dec
pop
popa
mov
dec
push
pop
mov
inc
cli
push
add
xchg
aad
jo
pushf
push
inc
je
cmc
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
fabs
sub
movs
sub
movs
sub
shl
cmpps
icebp
daa
push
sub
sub
loope
cmc
fst
sbb
shl
sub
int
movs
fxch
cmp
mov
mov
mov
xlat
pop
dec
leave
fchs
daa
cmc
int
das
inc
(bad)
(bad)
shl
icebp
in
lods
jecxz
loope
or
aam
(bad)
xchg
pop
or
push
loopne
out
mul
fucom
rcr
fndisi(8087
sub
mov
loopne
mov
movs
and
(bad)
(bad)
loope
fdiv
bound
fwait
into
shl
les
sub
int
sub
fucomp
add
loope
hlt
std
cld
sub
std
cld
sub
xlat
mov
aam
in
cmp
pop
sbb
rol
into
or
xor
or
push
cs
jmp
xor
jge
push
out
test
cmp
out
loopne
cmc
dec
inc
and
fcmovnu
cmp
out
loopne
jecxz
xchg
adc
icebp
(bad)
jecxz
repz
jno
jecxz
loope
sar
sub
into
push
imul
je
das
cmc
jmp
xor
shl
out
pminub
mov
and
sub
ror
icebp
ret
and
mov
cs
and
cld
ret
pop
(bad)
sub
fucomp
sub
fcmovu
aas
repnz
aam
sub
loope
cmc
std
cld
sub
div
jp
scas
mov
cmp
jp
imul
cmc
ss
in
(bad)
loope
test
sub
or
ss
fxam
xor
(bad)
sub
sub
ss
in
sbb
loope
arpl
fisub
sbb
loope
adc
aaa
sbb
loope
mov
fucom
sub
movs
fidiv
stc
(bad)
sub
sub
ss
loope
cmc
fxam
sub
xlat
pop
dec
leave
fchs
sub
int
sub
(bad)
(bad)
shl
loop
fdiv
hlt
movs
cld
sub
fabs
sub
jge
sub
(bad)
fisttp
ret
loop
shl
hlt
movs
cld
sub
aad
sub
jne
es
or
xor
cmp
fabs
(bad)
call
fchs
and
fist
repz
shr
(bad)
shl
ret
fcomi
or
cmp
(bad)
fst
ret
jecxz
cmc
and
jb
hlt
or
dec
xor
mov
cmp
(bad)
cmp
shl
jmp
int3
popf
ss
fxam
sub
fimul
test
jmp
cmp
vcvtsi2sd
(bad)
sub
or
ss
cmp
cmp
out
loopne
cmc
dec
inc
and
fcmovnu
cmp
out
loopne
jecxz
xchg
adc
icebp
(bad)
jecxz
repz
jno
jecxz
loope
sar
sub
into
push
imul
not
aas
repz
das
cmc
xor
sub
div
das
cmc
sbb
sub
div
pxor
loopne
cmc
fucom
sub
not
por
loopne
cmc
lods
in
xor
hlt
push
xor
loopne
xor
hlt
call
fsub
das
xchg
stos
in
(bad)
shl
loop
lods
ss
test
sub
fabs
sub
daa
ss
out
loopne
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
cli
leave
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
retf
retf
jno
and
and
hlt
std
cld
sub
repz
hlt
int
xor
mov
loope
int
stc
(bad)
jecxz
mov
int
sub
xlat
jmp
test
sub
sub
ss
frstpm(287
xor
sbb
sub
sar
inc
sbb
ds
cmc
fabs
sub
fcomp
sub
retf
jno
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
out
jmp
in
cmc
imul
retf
aad
aam
sbb
lods
daa
mov
ret
shl
pop
hlt
int
sub
xlat
out
test
sub
or
ss
in
(bad)
loope
imul
xor
sbb
sub
sar
inc
sbb
ds
cmc
fxam
sub
fcomp
sub
retf
jno
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
out
jmp
in
cmc
imul
retf
aad
aam
sbb
lods
daa
mov
ret
shl
pop
hlt
int
sub
fucom
inc
mov
int
sub
fucomp
and
fabs
pop
hlt
std
cld
sub
(bad)
push
hlt
std
cld
sub
(bad)
cwde
icebp
(bad)
(bad)
std
adc
mov
mov
ss
mov
loope
call
fchs
daa
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
cli
leave
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
retf
retf
jno
and
and
hlt
std
cld
sub
repz
hlt
int
xor
mov
loope
int
icebp
(bad)
jecxz
cmc
(bad)
sub
fmul
jge
(bad)
jecxz
cmc
shl
and
fmul
std
icebp
(bad)
jecxz
cmc
shl
icebp
(bad)
jecxz
cmc
lds
fmul
and
mov
push
sub
cmp
shl
or
loope
test
cmp
out
loopne
cmc
dec
inc
and
fcmovnu
cmp
out
loopne
jecxz
xchg
adc
icebp
(bad)
jecxz
repz
jno
jecxz
loope
sar
sub
into
push
imul
not
aas
repz
das
cmc
xor
sub
div
das
cmc
test
sub
div
pxor
loopne
cmc
cdq
out
call
(bad)
das
cmc
imul
loopne
xor
cdq
loopne
xor
ss
and
sbb
cmc
fnstsw
jge
(bad)
jecxz
cmc
sar
rcr
int
icebp
(bad)
jecxz
cmc
shl
icebp
(bad)
jecxz
cmc
lds
fmul
and
pop
or
sub
cld
cmp
shl
push
(bad)
sub
xchg
sub
call
fchs
daa
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
cli
leave
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
retf
retf
jno
and
and
hlt
std
cld
sub
repz
hlt
int
xor
mov
and
in
(bad)
shl
ret
or
cld
sub
fucom
mov
fabs
pop
hlt
int
sub
fucomp
mov
fabs
pop
hlt
std
cld
sub
(bad)
push
hlt
std
cld
sub
(bad)
cwde
icebp
(bad)
(bad)
std
adc
mov
(bad)
(bad)
push
pop
hlt
mov
imul
imul
cmc
cmps
fldln2
sub
(bad)
(bad)
das
cmc
jns
sub
div
pxor
loopne
cmc
inc
loop
call
(bad)
das
cmc
xor
sub
loopne
xor
cdq
loopne
xor
pop
dec
and
loopne
test
vcvtsi2sd
mov
inc
aad
not
aas
repz
das
cmc
cmc
out
call
(bad)
das
cmc
jns
sub
div
pxor
loopne
shl
sub
(bad)
cs
std
adc
mov
mov
daa
hlt
mov
xor
sub
xor
out
(bad)
shl
icebp
in
jne
fabs
pop
hlt
int
sub
fucom
adc
int
sub
fucomp
clc
and
loope
hlt
std
cld
sub
xlat
sti
add
sub
ss
xor
cwde
xor
hlt
test
cdq
loopne
xor
hlt
out
(bad)
test
fabs
xlat
hlt
int
sub
aad
mov
test
sub
out
cli
test
cmp
out
loopne
cmc
dec
push
sub
jecxz
loopne
and
(bad)
dec
stc
sbb
sub
in
cmc
ss
fsubr
sub
(bad)
(bad)
das
cmc
imul
pxor
loopne
shl
int
stc
(bad)
jecxz
icebp
(bad)
sub
std
adc
mov
mov
ss
jge
sub
fabs
sub
daa
ss
out
loopne
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
cli
leave
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
retf
retf
jno
and
and
hlt
std
cld
sub
repz
hlt
int
xor
mov
(bad)
fxam
(bad)
fldl2t
sub
in
in
fsub
pop
movs
mov
pop
ins
fmul
outs
cwde
sub
loope
int3
sbb
cmc
frstor
loope
int
icebp
(bad)
jecxz
cmc
sar
and
icebp
(bad)
jecxz
cmc
rcl
fmul
(bad)
(bad)
jecxz
cmc
(bad)
fmul
and
js
push
sub
push
test
vcvtsi2sd
or
cli
sub
fidiv
shl
and
cld
sub
fmul
sbb
mov
int
sub
xlat
jmp
test
sub
sub
ss
frstpm(287
xor
sbb
sub
sar
dec
sbb
ds
sub
ss
ret
fldenv
push
sub
in
cmc
ss
in
sub
(bad)
(bad)
das
cmc
mov
aaa
pxor
loopne
cmc
cdq
out
call
(bad)
das
cmc
imul
loopne
xor
cdq
loopne
xor
pop
ja
fsub
sub
stc
cmp
and
aam
not
aas
repz
das
cmc
mov
sub
div
das
cmc
shl
sub
div
pxor
loopne
cmc
cdq
out
call
(bad)
das
cmc
imul
loopne
xor
cdq
loopne
xor
pop
ja
fsub
sub
stc
cmp
and
aam
not
aas
repz
das
cmc
(bad)
call
(bad)
das
cmc
or
aaa
pxor
loopne
cmc
cdq
out
call
(bad)
das
cmc
imul
loopne
xor
cdq
loopne
xor
pop
ja
fsub
sub
stc
cmp
and
aam
not
aas
repz
das
cmc
xor
sub
div
das
cmc
test
sub
div
pxor
loopne
cmc
cdq
out
call
(bad)
das
cmc
imul
loopne
xor
cdq
loopne
xor
pop
ja
fsub
sub
stc
cmp
and
aam
not
aas
repz
das
cmc
test
sub
div
das
cmc
inc
in
sub
div
pxor
loopne
cmc
cdq
out
call
(bad)
das
cmc
imul
loopne
xor
cdq
loopne
xor
pop
ja
fsub
sub
stc
cmp
and
aam
xlat
pop
jmp
fsub
sub
cwde
int3
sbb
cmc
fnstsw
loope
int
icebp
(bad)
jecxz
cmc
rol
rcr
int
icebp
(bad)
jecxz
cmc
shl
icebp
(bad)
jecxz
cmc
lds
fmul
and
mov
or
(bad)
vcvtsi2sd
paddb
or
aam
fmul
sbb
mov
int
sub
fucomp
mov
fabs
pop
hlt
std
cld
sub
xlat
sti
xor
sub
ss
fsubr
xor
pushf
xor
cdq
loopne
xor
pop
ja
fsub
sub
shl
ret
or
cld
sub
fucom
or
int
sub
fucomp
test
fabs
pop
hlt
std
cld
sub
(bad)
cwde
add
loope
hlt
std
cld
sub
(bad)
add
(bad)
(bad)
std
adc
push
fs
mov
xchg
mov
test
sub
(bad)
xor
fabs
dec
ret
fldenv
push
and
in
cmc
ss
frstpm(287
sub
test
sub
or
ss
xor
(bad)
sub
sub
ss
xor
sbb
sub
sbb
ds
imul
(bad)
out
xlat
pop
dec
and
loopne
imul
cmp
and
aam
ret
div
fneni(8087
das
imul
cmc
cmps
fldln2
sub
(bad)
(bad)
das
cmc
jns
sub
div
pxor
loopne
cmc
inc
loop
call
(bad)
das
cmc
xor
sub
in
jo
jmp
loopne
xor
pop
dec
and
loopne
test
vcvtsi2sd
paddb
or
aam
fmul
sbb
cmc
(bad)
sub
icebp
(bad)
jecxz
cmc
rol
rcr
int
stc
(bad)
jecxz
add
sahf
push
hlt
std
cld
sub
aad
in
(bad)
pop
sbb
ds
sbb
ds
sub
xor
fxam
dec
ret
stc
daa
push
sub
sub
xor
frstpm(287
pop
cmc
push
jecxz
call
(bad)
das
cmc
loope
sub
div
das
cmc
or
sub
div
pxor
loopne
shl
int
stc
(bad)
jecxz
icebp
(bad)
sub
std
adc
push
fs
mov
xchg
mov
mov
xor
xor
fabs
dec
ret
fldenv
push
sub
in
cmc
ss
fsubr
sub
(bad)
(bad)
das
cmc
imul
pxor
loopne
shl
int
stc
(bad)
jecxz
icebp
(bad)
sub
std
adc
push
fs
mov
xchg
mov
mov
xor
xor
fxam
dec
ret
cmc
daa
push
sub
cs
push
fist
jg
fsub
and
vcvtsi2sd
fist
jae
fsub
and
vcvtsi2sd
ret
cmc
daa
push
sub
cs
enter
hlt
jns
xlat
or
dec
sub
mov
nop
or
jg
enter
hlt
jns
aad
fimul
dec
jo
cs
shl
xlat
or
dec
sub
mov
or
ss
mov
jb
fxam
(bad)
fxam
sub
paddq
or
aam
cwde
sbb
icebp
sub
icebp
sub
loope
cmc
adc
sub
repnz
add
or
call
(bad)
stc
fndisi(8087
sub
mov
fstp
jae
mov
jbe
in
and
nop
sbb
gs
sub
dec
test
shl
lfs
sub
sub
inc
mov
in
cmp
cmp
shr
stc
aas
cmp
cmp
mov
fstp
cmp
or
dec
sub
popa
mov
jmp
fchs
daa
hlt
or
mov
cmc
cdq
or
xchg
aad
push
or
daa
in
cdq
pop
sti
popa
aad
push
or
clc
sub
fidivr
xor
in
xor
cs
sbb
xchg
not
loopne
stc
fndisi(8087
sub
(bad)
in
daa
idiv
add
loopne
hlt
or
xor
loop
inc
(bad)
mov
and
push
fchs
sub
fsub
pop
retf
leave
and
cmc
fucom
fsub
pop
and
mov
jl
sub
hlt
sbb
sub
fsubp
imul
sub
fcmovnb
cmp
or
jecxz
dec
sub
adc
test
or
cld
or
jecxz
dec
sub
fucom
test
or
xor
into
jecxz
dec
(bad)
jecxz
mul
cmc
push
and
loope
hlt
int
sub
aad
mov
stc
(bad)
jecxz
fwait
enter
jp
sub
dec
sub
fistp
sub
imul
das
or
lods
push
or
cmp
ficomp
sub
or
ss
cmp
push
out
sub
mov
jecxz
fwait
enter
jp
sub
dec
sub
sbb
sub
imul
das
or
lods
push
or
cmp
ficomp
sub
or
ss
cmp
loope
sub
mov
jecxz
call
mov
call
dec
cld
icebp
(bad)
jecxz
repz
jno
or
loope
test
sub
dec
add
cmp
mov
sub
shl
xchg
daa
ss
out
loopne
or
dec
test
xor
in
jnp
fisubr
cmp
fistp
sub
or
ss
cmp
fldz
sub
mov
jecxz
call
mov
call
dec
cld
stc
(bad)
jecxz
leave
retf
jno
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
aad
mov
test
sub
in
retf
xor
cmps
sbb
mov
push
loope
mov
push
mov
dec
leave
fchs
sub
int
pop
and
popa
(bad)
hlt
int
sub
repz
and
push
aad
int
sub
xlat
loope
and
xor
hlt
std
cld
sub
repz
and
and
hlt
std
cld
sub
fdiv
mov
cmc
into
add
jbe
jecxz
jne
xor
hlt
mov
sub
jns
out
fcomp
sub
leave
jno
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
dec
jno
jecxz
loope
ror
pop
cld
icebp
(bad)
jecxz
icebp
leave
jno
jecxz
loope
rcr
pop
cld
icebp
(bad)
jecxz
lock
jno
jecxz
loope
cmp
sub
sbb
xor
cmc
jns
loopne
(bad)
cmp
scas
daa
mov
jecxz
loopne
and
(bad)
hlt
sbb
sub
shl
out
or
das
xor
fldenv
sub
shl
out
or
sub
and
imul
scas
daa
mov
cmc
shl
out
or
sub
sti
xor
and
imul
scas
daa
mov
cmc
shl
out
or
xor
icebp
mov
sub
shl
xlat
hlt
int
sub
aam
mov
stc
(bad)
jecxz
cdq
enter
jno
mov
call
dec
cld
scas
daa
mov
jecxz
loopne
hlt
sbb
sbb
rol
inc
imul
fistp
sub
fidiv
test
ret
sbb
imul
and
sub
aad
pop
ret
sbb
push
sbb
sub
repz
sbb
and
mov
add
loopne
hlt
and
fnsave
jno
loope
hlt
and
cmc
daa
push
pop
dec
push
(bad)
cmps
daa
mov
je
loopne
cmc
jns
sub
fiadd
mov
and
aad
fucom
mov
jp
inc
or
data16
fucom
cmps
rcr
sub
or
sub
(bad)
sub
rol
cmc
(bad)
ret
fdiv
or
jne
fld
out
xor
sub
fabs
sub
nop
sbb
icebp
(bad)
jecxz
icebp
leave
jno
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
sti
leave
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
leave
retf
jno
and
and
hlt
std
cld
sub
aam
mov
repnz
aad
pop
ret
sbb
sub
sbb
or
out
test
jl
sub
and
or
call
jecxz
leave
retf
jno
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
out
jmp
in
cmc
imul
retf
aad
sbb
pop
jae
fistp
mov
hlt
sub
fnstsw
stc
fndisi(8087
sub
sub
xor
fndisi(8087
pop
cmc
leave
jecxz
pushf
out
imul
or
loopne
dec
cmp
or
jecxz
dec
sub
jne
test
or
xor
into
jecxz
dec
sub
fxam
test
or
jmp
call
dec
cld
stc
(bad)
jecxz
xchg
enter
daa
ss
out
loopne
cmc
dec
leave
cs
fmul
dec
or
lods
push
or
cmp
fistp
sub
push
mov
sub
fcom
cmp
scas
daa
mov
jecxz
loopne
and
(bad)
hlt
sbb
sub
shl
out
or
xor
icebp
mov
sub
shl
out
or
das
ss
xor
in
(bad)
hlt
sbb
sub
shl
xlat
hlt
int
sub
aad
mov
icebp
(bad)
jecxz
lock
jno
pop
fsub
inc
xchg
outs
inc
cmp
ss
fchs
xlat
hlt
popa
mov
mov
mov
xor
aad
mov
out
scas
daa
mov
jecxz
loopne
and
(bad)
hlt
sbb
sub
shl
out
or
xor
icebp
mov
sub
shl
out
or
sub
sti
xor
and
imul
scas
daa
mov
and
loopne
hlt
int
sub
mov
jecxz
cdq
enter
jo
mov
call
dec
cld
stc
(bad)
jecxz
xchg
enter
daa
ss
out
loopne
pop
dec
stc
inc
cmps
out
inc
jp
fsub
addr16
ss
fchs
xlat
hlt
popa
mov
aas
out
loopne
cmc
dec
mov
(bad)
hlt
std
cld
sub
aam
mov
hlt
jge
sub
xchg
mov
sub
shl
xlat
hlt
int
sub
mov
jecxz
cwde
enter
jb
mov
call
dec
(bad)
jecxz
and
cld
sub
mov
jecxz
cwde
enter
jb
mov
call
dec
test
or
ss
cmp
mov
sub
repz
hlt
add
(bad)
hlt
sbb
sub
shl
xlat
hlt
int
sub
mov
jecxz
test
loope
mov
fsub
addr16
ss
fchs
xlat
hlt
popa
mov
aas
out
loopne
or
dec
test
sub
call
mov
sub
shl
xlat
hlt
int
sub
mov
jecxz
test
loope
lods
add
fsub
addr16
ss
fchs
xlat
hlt
popa
mov
aas
out
loopne
or
dec
test
sub
dec
div
jne
sub
hlt
sbb
sub
shl
xlat
hlt
int
sub
mov
jecxz
test
arpl
inc
xchg
out
inc
bound
ss
fchs
xlat
hlt
popa
mov
aas
out
loopne
jecxz
mov
loope
pop
cld
icebp
(bad)
jecxz
cli
leave
jno
jecxz
loope
ror
pop
cld
icebp
(bad)
jecxz
test
mov
fsub
pop
rcr
pop
cld
icebp
(bad)
jecxz
test
ret
jecxz
loope
cmp
sub
and
pop
call
or
xor
pushf
dec
xor
into
jecxz
dec
(bad)
jecxz
and
cld
sub
fcomip
mov
call
fchs
das
cmc
dec
and
xchg
(bad)
jno
fisubr
cmp
fistp
sub
or
ss
cmp
icebp
jmp
sar
jecxz
icebp
leave
jno
pop
fsub
inc
scas
push
inc
ret
loopne
loop
ss
fchs
xlat
hlt
popa
mov
aas
out
loopne
or
dec
test
sub
dec
div
movs
sub
sbb
sub
shl
xlat
hlt
int
sub
mov
jecxz
lock
jno
pop
fsub
inc
scas
xlat
inc
pop
mov
loopne
loop
ss
fchs
xlat
hlt
popa
mov
aas
out
loopne
or
dec
test
sub
xchg
movs
mov
(bad)
hlt
sbb
sub
shl
xlat
hlt
int
sub
fcomip
mov
call
fchs
das
cmc
dec
sub
repz
jne
fisubr
cmp
fistp
sub
or
ss
cmp
mov
sub
fsub
sub
out
xor
into
jecxz
dec
cld
stc
(bad)
jecxz
leave
retf
jno
and
push
aad
int
sub
fcomip
mov
and
xor
hlt
std
cld
sub
(bad)
sub
int
aad
std
cld
sub
fdiv
mov
cmc
into
add
jbe
pop
sub
sti
xor
shl
push
or
jno
daa
inc
push
and
loopne
hlt
sbb
sub
loopne
jbe
jecxz
jne
xor
hlt
mov
sub
into
jecxz
dec
cld
icebp
(bad)
jecxz
clc
leave
jno
or
loope
test
sub
dec
or
sbb
mov
sub
shl
out
or
sub
sti
xor
and
imul
scas
daa
mov
cmc
shl
out
or
das
xor
sbb
imul
scas
daa
mov
jecxz
loopne
hlt
or
cmc
inc
fsub
jecxz
stc
mov
sub
rcr
icebp
(bad)
jecxz
test
loope
test
sub
mov
mov
call
dec
cld
scas
daa
mov
clc
shl
scas
imul
pop
cmc
cdq
jecxz
out
xlat
pop
dec
leave
fchs
sub
int
sub
fcomp
sub
leave
jno
or
loope
test
sub
mov
stos
hlt
jmp
loopne
hlt
(bad)
sub
jns
das
icebp
fld
mov
loope
loop
ss
fchs
xlat
hlt
sar
aas
out
loopne
cmc
dec
adc
(bad)
hlt
std
cld
sub
(bad)
repz
hlt
jmp
loopne
hlt
in
cli
sub
jns
das
icebp
fld
mov
loope
loop
ss
fchs
xlat
hlt
sar
ja
fchs
das
cmc
int
ds
sbb
sub
leave
jno
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
dec
jno
jecxz
loope
ror
pop
cld
icebp
(bad)
jecxz
test
loope
rcr
pop
cld
icebp
(bad)
jecxz
lock
jno
jecxz
loope
cmp
sub
ftst
test
or
mov
fcomp
sub
leave
jno
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
dec
jno
jecxz
loope
ror
pop
cld
icebp
(bad)
jecxz
test
loope
rcr
pop
cld
icebp
(bad)
jecxz
lock
jno
jecxz
loope
cmp
sub
xor
test
or
jmp
jns
mov
fcomp
sub
leave
jno
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
dec
jno
jecxz
loope
ror
pop
cld
icebp
(bad)
jecxz
test
arpl
fsub
pop
rcr
pop
cld
icebp
(bad)
jecxz
test
jcxz
loope
cmp
sub
ftst
test
or
mov
fcomp
sub
leave
jno
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
std
leave
jno
jecxz
loope
ror
pop
cld
icebp
(bad)
jecxz
lock
jno
jecxz
loope
rcr
pop
cld
icebp
(bad)
jecxz
lock
jno
jecxz
loope
cmp
sub
and
test
or
mov
fcomp
sub
leave
jno
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
std
leave
jno
jecxz
loope
ror
pop
cld
icebp
(bad)
jecxz
lock
jno
jecxz
loope
rcr
pop
cld
icebp
(bad)
jecxz
lock
jno
jecxz
loope
fidivr
das
sub
dec
lods
ss
fxam
test
repz
mov
loopne
push
(bad)
jecxz
cmc
xor
test
push
fcmovnb
cmp
or
jecxz
dec
sub
xor
test
or
jmp
call
dec
sub
and
pop
call
or
jecxz
dec
(bad)
vcvtsi2sd
or
sub
shl
push
imul
(bad)
call
fchs
das
cmc
dec
test
(bad)
hlt
std
cld
sub
fsub
sub
jo
mov
call
dec
shl
popf
ss
in
call
fchs
das
cmc
dec
shr
adc
and
fsub
sub
cld
mov
call
dec
cld
scas
daa
mov
jecxz
loopne
hlt
pop
mov
rol
inc
imul
fistp
sub
fidiv
sar
ret
sbb
imul
and
sub
aad
pop
ret
sbb
push
sbb
sub
imul
pop
cmc
mov
ss
out
loopne
cmc
dec
push
das
and
adc
test
repz
clc
jae
mov
call
dec
cld
icebp
(bad)
jecxz
icebp
leave
jno
or
loope
test
sub
dec
cmps
hlt
dec
stos
sub
hlt
sbb
sub
shl
xlat
hlt
int
sub
repz
call
fchs
das
cmc
dec
icebp
das
ins
(bad)
pusha
or
lods
push
or
cmp
fistp
sub
jmp
pop
push
leave
fchs
das
cmc
int
sub
fcomp
sub
leave
jno
or
loope
test
sub
dec
pop
hlt
popa
stos
sub
hlt
sbb
sub
shl
xlat
hlt
int
sub
repz
call
fchs
das
cmc
dec
and
pushf
(bad)
addr16
lods
push
or
cmp
fistp
sub
or
ss
cmp
imul
cld
icebp
(bad)
jecxz
icebp
leave
jno
pop
fsub
inc
mov
fsub
addr16
ss
fchs
xlat
hlt
popa
mov
sub
vcvtsi2sd
or
cld
sub
repz
call
fchs
das
cmc
dec
xchg
sub
js
data16
lods
push
or
cmp
fistp
sub
vcvtsi2sd
or
cld
sub
repz
call
fchs
das
cmc
dec
xchg
sub
xor
cwde
data16
lods
push
or
cmp
fistp
sub
or
ss
cmp
imul
cld
icebp
(bad)
jecxz
test
jmp
fsub
inc
mov
fsub
addr16
ss
fchs
xlat
hlt
popa
mov
mov
mov
popa
(bad)
cmp
scas
daa
mov
jecxz
loopne
and
(bad)
hlt
sbb
sub
shl
out
or
sub
loope
(bad)
hlt
sbb
sub
shl
out
or
sub
sti
xor
and
imul
scas
daa
mov
and
loopne
hlt
int
sub
fsub
sub
daa
ss
out
loopne
cmc
dec
stc
cs
(bad)
gs
lods
push
or
cmp
fistp
sub
push
mov
pop
xchg
(bad)
(bad)
shl
lock
cmp
hlt
sbb
sbb
rol
inc
imul
fistp
sub
fidiv
test
ret
sbb
imul
and
sub
aad
pop
ret
sbb
push
sbb
sub
test
(bad)
hlt
std
cld
sub
aad
mov
hlt
inc
or
hlt
sbb
sub
shl
xlat
hlt
int
sub
fcomip
mov
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
out
jmp
in
cmp
fdivr
and
and
aad
fwait
aad
push
or
movs
sub
fchs
xlat
hlt
cmp
daa
jecxz
leave
pop
loope
pop
cld
icebp
(bad)
jecxz
cli
leave
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
leave
retf
jno
and
and
hlt
std
cld
sub
(bad)
sub
into
add
jbe
pop
sub
sti
xor
shl
push
or
jno
int
sub
js
shl
jecxz
dec
cld
scas
daa
mov
push
shl
(bad)
stc
mov
sub
sub
xor
fucomi
pop
cmc
leave
(bad)
sub
xlat
pop
(bad)
sub
int
aas
xor
aad
mov
out
scas
daa
mov
jecxz
loopne
and
(bad)
hlt
sbb
sub
shl
out
or
xor
icebp
mov
sub
shl
out
or
sub
sti
xor
and
imul
scas
daa
mov
add
loopne
hlt
dec
cli
sub
inc
fnstsw
or
loope
test
cmp
out
loopne
cmc
dec
loope
and
fnstsw
out
loopne
jecxz
sub
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
mov
mov
sub
pop
and
jmp
fchs
xlat
hlt
cmp
das
cmc
dec
leave
cs
fcmovnu
cmp
out
loopne
cmc
dec
loope
and
fnstsw
out
loopne
jecxz
sub
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
xor
mov
loope
hlt
adc
sub
mov
cmp
frstor
fabs
sub
int
sub
fcomp
sub
retf
jno
and
push
aad
int
sub
fdiv
mov
and
xor
hlt
std
cld
sub
out
jmp
in
cmc
cdq
out
cmp
test
or
sti
mov
pop
sub
sub
and
inc
repnz
loopne
hlt
sbb
sub
loopne
hlt
int
sub
fdiv
mov
and
push
aad
int
sub
fcomip
mov
and
xor
hlt
std
cld
sub
out
jmp
in
cmc
cdq
out
cmp
test
or
sti
mov
pop
sub
js
or
out
test
jl
sub
cmc
and
sub
fist
mov
ins
fsub
(bad)
call
fchs
daa
jecxz
leave
pop
loope
pop
cld
icebp
(bad)
jecxz
lock
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
leave
retf
jno
and
and
hlt
std
cld
sub
(bad)
sub
into
add
jbe
pop
sub
sti
xor
shl
push
or
jno
popa
jecxz
repz
hlt
xor
into
jecxz
dec
sbb
fabs
das
hlt
dec
cli
sub
or
sub
in
xor
hlt
int
sub
aad
mov
test
sub
out
cli
test
cmp
out
loopne
cmc
dec
mov
cmp
and
and
aad
fwait
aad
test
mov
push
out
test
jl
sub
test
sub
out
call
in
cmc
fldpi
sub
out
cli
test
cmp
out
loopne
cmc
dec
mov
cmp
and
and
aad
fwait
aad
push
or
jno
sub
mov
cmp
ffree
shl
mul
cmc
add
fabs
xlat
hlt
int
sub
aad
mov
test
sub
out
cli
test
cmp
out
loopne
cmc
dec
mov
cmp
and
and
aad
fwait
aad
icebp
add
or
out
test
jl
sub
test
sub
out
call
in
cmc
fldpi
sub
out
cli
test
cmp
out
loopne
cmc
dec
mov
cmp
and
and
aad
fwait
aad
test
mov
ds
test
jl
sub
cmc
mov
pop
mov
loope
loope
cmc
leave
loop
call
fchs
daa
jecxz
leave
pop
loope
pop
cld
icebp
(bad)
jecxz
lock
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
leave
retf
jno
and
and
hlt
std
cld
sub
(bad)
sub
into
add
jbe
pop
sub
sti
xor
shl
push
or
jno
adc
and
loopne
hlt
sbb
sub
loopne
hlt
int
sub
fdiv
mov
and
push
aad
int
sub
fcomip
mov
and
xor
hlt
std
cld
sub
out
jmp
in
cmc
cdq
out
cmp
test
or
sti
mov
pop
sub
mov
es
loopne
hlt
sbb
sub
loopne
out
(bad)
test
fsub
xlat
jge
pop
jl
sub
imul
pop
cmc
mov
sub
loopne
dec
cmp
or
jecxz
dec
sub
jne
test
or
xor
into
jecxz
dec
sub
and
pop
call
or
jecxz
dec
cld
stc
(bad)
jecxz
leave
retf
jno
and
push
aad
int
sub
fdiv
mov
and
xor
hlt
std
cld
sub
out
jmp
in
cmc
cdq
out
cmp
test
or
sti
mov
pop
sub
dec
sub
fild
and
loopne
hlt
sbb
sub
loopne
hlt
int
sub
fdiv
mov
and
push
aad
int
sub
fcomip
mov
and
xor
hlt
std
cld
sub
out
jmp
in
cmc
cdq
out
cmp
test
or
sti
mov
pop
sub
je
fild
and
loopne
hlt
sbb
sub
loopne
jge
pop
jl
sub
repz
and
(bad)
hlt
adc
mov
daa
ss
fchs
xlat
hlt
mov
and
loope
and
ins
and
loop
ss
fchs
xlat
hlt
add
clc
and
and
aad
daa
ss
fchs
xlat
hlt
xor
aas
out
loopne
or
dec
test
xor
cmp
or
lods
push
or
cmp
fistp
sub
push
mov
(bad)
and
loopne
xor
aam
mov
out
scas
daa
mov
jecxz
loopne
and
(bad)
hlt
sbb
sub
shl
out
or
xor
icebp
mov
sub
shl
out
or
sub
sti
xor
and
imul
scas
daa
mov
ret
xchg
fsubp
imul
sub
fcmovnb
cmp
or
jecxz
dec
sub
jne
test
or
xor
into
jecxz
dec
sub
and
pop
call
or
jecxz
dec
cld
stc
(bad)
jecxz
enter
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
aad
mov
test
cmp
and
daa
and
imul
jmp
jo
pop
mov
js
ret
sbb
sub
mov
je
fabs
das
hlt
dec
cli
sub
or
sub
aaa
call
out
test
jl
sub
popa
sbb
(bad)
ret
jecxz
and
loope
shl
jno
pop
and
loopne
hlt
sbb
sub
loopne
out
xlat
pop
mov
shl
jno
mov
and
loopne
hlt
sbb
sub
loopne
out
fist
mov
nop
fabs
jmp
jo
pop
les
xor
mov
xor
into
jecxz
dec
cld
scas
daa
mov
add
loopne
hlt
jge
sub
fbstp
inc
mov
adc
mov
daa
ss
fchs
xlat
hlt
mov
and
loope
and
ins
and
loop
ss
fchs
xlat
hlt
add
clc
and
and
aad
daa
ss
fchs
xlat
hlt
xor
push
hlt
ins
mov
rol
inc
imul
fistp
sub
fidiv
test
ret
sbb
imul
and
sub
aad
pop
ret
sbb
push
sbb
sub
imul
(bad)
call
fchs
das
cmc
dec
fldcw
inc
fcmovnu
cmp
out
loopne
cmc
dec
xor
fcmovnu
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
stc
(bad)
jecxz
leave
retf
jno
cmc
into
add
jbe
pop
sub
sti
xor
or
dec
and
or
ss
cmp
cmp
out
loopne
cmc
dec
xor
fcmovnu
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
stc
(bad)
jecxz
leave
retf
jno
cmc
into
add
jbe
pop
sub
sti
xor
shl
push
or
jno
xchg
and
loopne
hlt
sbb
sub
loopne
jge
pop
jl
sub
cmc
inc
cmps
sub
xlat
pop
dec
leave
fchs
daa
cmc
int
push
mov
out
scas
daa
mov
jecxz
loopne
and
(bad)
hlt
sbb
sub
shl
out
or
xor
icebp
mov
sub
shl
out
or
sub
sti
xor
and
imul
scas
daa
mov
and
loopne
jge
pop
jl
sub
imul
pop
cmc
jne
sub
mul
fucom
sar
and
out
adc
in
dec
sbb
sub
in
cmp
scas
daa
mov
jecxz
loopne
and
(bad)
hlt
sbb
sub
shl
out
or
xor
icebp
mov
sub
shl
out
or
sub
sti
xor
and
imul
scas
daa
mov
ret
xchg
fsubp
imul
sub
fcmovnb
cmp
or
jecxz
dec
sub
jne
test
or
xor
into
jecxz
dec
sub
and
pop
call
or
jecxz
dec
stos
cli
fwait
into
shl
lds
sub
aad
mov
test
sub
out
cli
test
jmp
in
cmp
test
or
sti
mov
pop
sub
test
hlt
sbb
sub
loopne
jge
pop
jl
sub
stc
aad
js
fucom
leave
lock
sub
fabs
sub
ja
and
cmp
pop
or
sbb
pushf
out
imul
or
loopne
dec
cmp
or
jecxz
dec
sub
jne
test
or
xor
into
jecxz
dec
sub
and
pop
call
or
jecxz
dec
fisttp
push
out
and
cld
sub
fdivp
mov
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
aad
mov
test
sub
in
retf
xor
or
sti
mov
pop
sub
in
jb
inc
repnz
loopne
hlt
sbb
sub
loopne
cmc
(bad)
loope
repz
out
loope
loope
cmc
icebp
loop
call
fchs
das
cmc
dec
shr
fcmovnu
cmp
out
loopne
cmc
dec
xor
fcmovnu
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
inc
push
mov
loope
hlt
cmp
loop
ss
fchs
xlat
hlt
cmp
das
cmc
dec
jns
inc
fcmovnu
cmp
out
loopne
cmc
dec
test
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
and
xor
je
xor
into
jecxz
dec
aam
fabs
sub
movs
and
mov
or
ss
cmp
stc
loop
or
neg
gs
cmp
or
sub
out
cli
test
cmp
out
loopne
cmc
dec
mov
cmp
and
and
aad
fwait
aad
push
or
mov
sub
mov
cmp
(bad)
sbb
cmc
sbb
hlt
int
sub
fdivp
mov
and
push
aad
int
sub
(bad)
sub
int
aad
std
cld
sub
aad
mov
test
sub
in
retf
xor
or
sti
mov
pop
sub
xchg
sub
fild
and
loopne
hlt
sbb
sub
loopne
hlt
int
sub
repz
and
push
aad
int
sub
xlat
loope
and
xor
hlt
std
cld
sub
aad
mov
test
sub
in
retf
xor
or
sti
mov
pop
sub
mov
fucom
xlat
hlt
sbb
sub
loopne
cmc
iret
loope
repz
out
push
fsubr
(bad)
call
fchs
das
cmc
dec
shr
fcmovnu
cmp
out
loopne
cmc
dec
xor
fcmovnu
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
mov
mov
sub
leave
inc
sub
mov
cmp
fucom
sbb
inc
(bad)
hlt
int
sub
fdivp
mov
and
push
aad
int
sub
(bad)
sub
int
aad
std
cld
sub
aad
mov
test
sub
in
retf
xor
or
sti
mov
pop
sub
mov
push
fild
and
loopne
hlt
sbb
sub
loopne
cmc
retf
loope
repz
out
push
fdiv
(bad)
call
fchs
das
cmc
dec
shr
fcmovnu
cmp
out
loopne
cmc
dec
xor
fcmovnu
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
mov
fsub
sub
jno
sub
mov
cmp
fucomp
sbb
inc
(bad)
hlt
int
sub
fdivp
mov
and
push
aad
int
sub
(bad)
sub
int
aad
std
cld
sub
aad
mov
test
sub
in
retf
xor
or
sti
mov
pop
sub
loopne
pop
fild
and
loopne
hlt
sbb
sub
loopne
cmc
xlat
loope
repz
out
ins
fdivr
(bad)
call
fchs
das
cmc
dec
shr
fcmovnu
cmp
out
loopne
cmc
dec
xor
fcmovnu
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
lock
adc
or
jecxz
dec
aam
fabs
sub
movs
and
mov
or
ss
cmp
stc
loop
or
neg
gs
cmp
or
sub
out
cli
test
cmp
out
loopne
cmc
dec
mov
cmp
and
and
aad
fwait
aad
test
mov
push
sub
or
cmp
fcomp
sub
in
in
sub
fist
push
and
loopne
loope
sbb
icebp
(bad)
jecxz
test
or
fsub
pop
loope
pop
cld
icebp
(bad)
jecxz
repnz
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
leave
retf
jno
and
and
hlt
std
cld
sub
(bad)
sub
into
add
jbe
pop
sub
sti
xor
shl
push
or
jno
inc
inc
mul
fucom
xlat
hlt
sbb
sub
loopne
cmc
shl
sub
sub
out
push
fmul
(bad)
call
fchs
das
cmc
dec
shr
fcmovnu
cmp
out
loopne
cmc
dec
xor
fcmovnu
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
test
mov
sub
mov
ss
fchs
xlat
hlt
cmp
fstp
sbb
js
hlt
int
sub
fdivp
mov
and
push
aad
int
sub
(bad)
sub
int
aad
std
cld
sub
aad
mov
test
sub
in
retf
xor
or
sti
mov
pop
sub
movs
mov
(bad)
out
test
jl
sub
cmc
sub
pop
push
and
loopne
loope
sbb
icebp
(bad)
jecxz
test
or
fsub
pop
loope
pop
cld
icebp
(bad)
jecxz
repnz
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
leave
retf
jno
and
and
hlt
std
cld
sub
(bad)
sub
into
add
jbe
pop
sub
sti
xor
shl
push
or
jno
mov
loopne
hlt
sbb
sub
loopne
cmc
(bad)
sub
sub
out
push
fcom
(bad)
call
fchs
das
cmc
dec
shr
fcmovnu
cmp
out
loopne
cmc
dec
xor
fcmovnu
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
nop
imul
hlt
mov
ss
fchs
xlat
hlt
cmp
(bad)
sbb
js
hlt
int
sub
fdivp
mov
and
push
aad
int
sub
(bad)
sub
int
aad
std
cld
sub
aad
mov
test
sub
in
retf
xor
or
sti
mov
pop
sub
call
mul
fucom
xlat
hlt
sbb
sub
loopne
xor
pop
push
and
loopne
loope
sbb
icebp
(bad)
jecxz
test
or
fsub
pop
loope
pop
cld
icebp
(bad)
jecxz
repnz
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
leave
retf
jno
and
and
hlt
std
cld
sub
(bad)
sub
into
add
jbe
pop
sub
sti
xor
shl
push
or
jno
dec
loop
repz
jmp
ficomp
sub
mov
cld
scas
daa
mov
out
shl
(bad)
icebp
ret
loope
imul
sub
fnstsw
rcr
sub
int3
and
(bad)
hlt
adc
mov
daa
ss
fchs
xlat
hlt
mov
and
loope
and
ins
and
loop
ss
fchs
xlat
hlt
add
clc
and
and
aad
daa
ss
fchs
xlat
hlt
xor
aas
out
loopne
jecxz
leave
pop
loope
pop
cld
icebp
(bad)
jecxz
icebp
leave
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
leave
retf
jno
and
and
hlt
std
cld
sub
in
retf
xor
or
sti
add
pop
sbb
xchg
gs
fsubr
xor
jecxz
dec
cld
icebp
(bad)
jecxz
test
or
fsub
pop
loope
pop
cld
icebp
(bad)
jecxz
cli
leave
jno
jecxz
loope
ror
pop
cld
stc
(bad)
jecxz
leave
retf
jno
and
and
hlt
std
cld
sub
(bad)
sub
into
add
jbe
pop
sub
sti
xor
shl
push
or
jno
fucom
sub
js
lods
xor
into
jecxz
dec
cld
stc
(bad)
jecxz
leave
retf
jno
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
fdivp
mov
and
and
hlt
std
cld
sub
repz
cmc
into
add
jbe
pop
sub
sti
xor
or
fstp
out
inc
fwait
aad
test
daa
ss
fchs
xlat
hlt
cmp
das
cmc
dec
shr
fcmovnu
cmp
out
loopne
cmc
dec
inc
and
fcmovnu
cmp
out
loopne
cmc
dec
shr
fcmovnu
cmp
out
loopne
cmc
dec
mov
cmp
and
daa
and
repz
push
rcr
push
or
jno
std
out
xor
into
jecxz
dec
cld
scas
daa
mov
into
shl
(bad)
stc
retf
loope
imul
pop
cmc
jns
sub
loopne
dec
cmp
or
jecxz
dec
sub
jne
test
or
xor
into
jecxz
dec
sub
and
pop
call
or
jecxz
dec
cld
stc
(bad)
jecxz
leave
retf
jno
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
aad
mov
test
cmp
and
daa
and
repz
scas
rcr
push
or
jno
cmc
mov
sub
loopne
hlt
int
sub
fdivp
mov
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
aad
mov
test
sub
in
retf
xor
or
sti
mov
pop
sub
in
jb
inc
repnz
loopne
hlt
sbb
sub
loopne
hlt
int
sub
aad
mov
test
sub
out
cli
test
sub
out
jmp
in
cmc
or
sub
in
retf
xor
or
sti
add
pop
sbb
imul
xor
jecxz
dec
cld
icebp
(bad)
jecxz
test
or
fsub
pop
loope
pop
cld
icebp
(bad)
jecxz
cli
leave
jno
jecxz
loope
ror
pop
cld
icebp
(bad)
jecxz
test
loope
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
mov
loopne
scas
in
aaa
call
mov
sub
loopne
jge
pop
jl
sub
cmc
mov
pop
mov
loope
loope
cmc
test
imul
or
loopne
dec
cmp
or
jecxz
dec
sub
jne
test
or
xor
into
jecxz
dec
sub
and
pop
call
or
jecxz
dec
cld
stc
(bad)
jecxz
leave
retf
jno
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
aad
mov
test
cmp
and
daa
and
repz
scas
rcr
push
or
jno
cmc
mov
sub
loopne
hlt
int
sub
fdivp
mov
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
aad
mov
test
sub
in
retf
xor
or
sti
mov
pop
sub
in
jb
inc
repnz
loopne
hlt
sbb
sub
loopne
jge
pop
jl
sub
cmc
ins
in
pushf
out
imul
or
loopne
dec
cmp
or
jecxz
dec
sub
jne
test
or
xor
into
jecxz
dec
sub
and
pop
call
or
jecxz
dec
cld
stc
(bad)
jecxz
leave
retf
jno
and
push
aad
int
sub
repz
and
xor
hlt
std
cld
sub
aad
mov
test
cmp
and
daa
and
repz
scas
rcr
push
or
jno
cmc
mov
sub
loopne
jge
pop
jl
sub
repz
and
(bad)
hlt
adc
mov
daa
ss
fchs
xlat
hlt
mov
and
loope
and
ins
and
loop
ss
fchs
xlat
hlt
add
clc
and
and
aad
daa
ss
fchs
xlat
hlt
xor
aas
out
loopne
cmc
dec
shr
fcmovnu
cmp
out
loopne
cmc
dec
inc
and
fcmovnu
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
lock
hlt
add
loop
ss
fchs
xlat
hlt
cmp
jno
fld
add
loope
hlt
mov
fnstsw
or
loope
test
cmp
out
loopne
cmc
dec
inc
and
fcmovnu
cmp
out
loopne
jecxz
leave
pop
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
and
pop
call
or
loopne
dec
cmp
or
jecxz
dec
sub
jne
test
or
xor
into
jecxz
dec
sub
and
pop
call
or
jecxz
dec
push
or
jno
daa
inc
mov
fucom
xlat
hlt
sbb
sub
loopne
jge
pop
jl
sub
test
cmp
out
loopne
cmc
dec
inc
and
fcmovnu
cmp
out
loopne
cmc
dec
mov
cmp
out
loopne
cmc
dec
push
sub
out
adc
clc
and
scas
and
lahf
out
neg
dec
cmp
or
jecxz
dec
sub
shl
jmp
xchg
jmp
call
dec
sub
sub
test
or
jmp
or
jecxz
dec
cld
stc
(bad)
jecxz
leave
retf
jno
and
push
aad
int
sub
repz
test
sub
out
jmp
in
cmc
imul
retf
xor
neg
sti
pusha
sbb
sub
cld
mov
xchg
sub
or
cmp
fcomp
sub
or
ss
cmp
cmp
out
loopne
cmc
dec
sub
call
fchs
das
cmc
dec
mov
cmp
out
loopne
cmc
dec
push
sub
not
bound
pop
fsub
sub
std
push
or
add
xlat
hlt
cmp
das
cmc
dec
lea
inc
fcmovnu
cmp
out
loopne
cmc
dec
jmp
cmp
out
loopne
cmc
dec
mov
cmp
out
loopne
cmc
dec
push
sub
not
bound
pop
fsub
sub
std
push
or
pop
(bad)
sub
mov
cmp
das
cmc
dec
jmp
cmp
out
loopne
cmc
dec
or
and
fnstsw
out
loopne
cmc
dec
mov
cmp
out
loopne
cmc
dec
push
sub
not
bound
pop
fsub
sub
std
push
or
sbb
ss
fchs
xlat
hlt
cmp
das
cmc
dec
or
inc
fcmovnu
cmp
out
loopne
cmc
dec
mov
cmp
out
loopne
cmc
dec
mov
cmp
out
loopne
cmc
dec
push
sub
not
bound
pop
fsub
sub
std
push
or
sub
ss
fchs
xlat
hlt
cmp
das
cmc
dec
mov
cmp
out
loopne
cmc
dec
jge
and
fnstsw
out
loopne
cmc
dec
mov
cmp
out
loopne
cmc
dec
push
sub
not
bound
pop
fsub
sub
std
push
or
in
mov
mov
cmp
sub
dec
sbb
icebp
(bad)
jecxz
stc
leave
jno
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
cli
leave
jno
jecxz
loope
ror
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
fxam
test
or
jmp
jo
pop
mov
js
inc
xor
into
jecxz
dec
cld
scas
daa
mov
add
loopne
hlt
mov
fnstsw
or
loope
test
cmp
out
loopne
jecxz
jno
ror
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
jne
test
or
cmc
jns
and
fcmovnbe
cmp
scas
daa
mov
jecxz
loopne
and
(bad)
hlt
sbb
sub
shl
out
or
xor
icebp
mov
sub
shl
out
or
sub
sti
xor
and
imul
scas
daa
mov
pusha
shl
sub
cld
mov
xchg
sub
or
cmp
fcomp
sub
push
mov
es
(bad)
(bad)
shl
mul
cmc
sub
hlt
int
sub
out
call
in
cmc
mov
idiv
test
sub
out
jmp
in
cmc
imul
retf
xor
push
sbb
mov
shl
sub
int3
push
inc
mov
adc
mov
daa
ss
fchs
xlat
hlt
mov
and
loope
and
ins
and
loop
ss
fchs
xlat
hlt
add
clc
and
and
aad
daa
ss
fchs
xlat
hlt
xor
pop
mov
js
dec
xor
into
jecxz
dec
cld
scas
daa
mov
sub
loopne
stc
shl
sub
sub
xor
fucomi
pop
cmc
leave
loop
call
fchs
das
cmc
dec
lea
inc
fcmovnu
cmp
out
loopne
cmc
dec
jmp
cmp
out
loopne
cmc
dec
mov
cmp
out
loopne
cmc
dec
push
sub
pop
adc
clc
and
outs
and
cmc
jne
sub
fsubp
imul
sub
fcmovnb
cmp
or
jecxz
dec
sub
jne
test
or
xor
into
jecxz
dec
sub
and
pop
call
or
jecxz
dec
mov
fwait
lahf
inc
stos
and
loopne
hlt
sbb
sub
loopne
jge
pop
jl
sub
cmc
inc
out
out
xlat
pop
dec
leave
fchs
daa
cmc
int
sub
fcomp
sub
leave
jno
jecxz
loope
loope
pop
cld
icebp
(bad)
jecxz
std
leave
jno
jecxz
loope
ror
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
rcr
pop
cld
icebp
(bad)
jecxz
repz
jno
jecxz
loope
cmp
sub
jne
test
or
cmc
jns
cs
fcmovnbe
cmp
scas
daa
mov
jecxz
loopne
and
(bad)
hlt
sbb
sub
shl
out
or
xor
icebp
mov
sub
shl
out
or
sub
sti
xor
and
imul
scas
daa
mov
pusha
shl
sub
ror
test
jl
sub
mov
push
mov
sub
shl
mul
cmc
or
fabs
xlat
hlt
int
sub
shl
sub
int
aad
int
sub
repz
and
xor
hlt
std
cld
sub
(bad)
sub
int
aad
std
cld
sub
repz
cmc
into
add
jbe
dec
cs
icebp
inc
or
fsub
xlat
jge
pop
jl
sub
repz
push
inc
mov
adc
mov
daa
ss
fchs
xlat
hlt
mov
and
loope
and
ins
and
loop
ss
fchs
xlat
hlt
add
clc
and
and
aad
daa
ss
fchs
xlat
hlt
xor
pop
call
js
inc
xor
into
jecxz
dec
cld
scas
daa
mov
jecxz
loopne
and
mov
jl
sub
mov
daa
mov
jecxz
loopne
add
pop
cld
mov
neg
mov
mov
and
es
mov
(bad)
fldln2
test
idiv
addr16
pop
enter
cmc
int
sub
fldln2
cmp
pop
cld
cmp
and
aam
(bad)
sub
icebp
jno
cmc
fabs
sub
xlat
repz
mov
into
mov
or
rcl
fsub
pushf
(bad)
jmp
inc
and
push
xor
ins
mov
xor
in
out
hlt
icebp
cmps
sub
loope
loopne
hlt
and
add
daa
outs
mov
test
jne
mov
enter
and
aaa
push
into
xchg
or
jecxz
arpl
jmp
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
loope
test
pop
ja
clc
adc
adc
cmp
mov
sub
and
aas
out
loop
popf
scas
imul
leave
movs
inc
xor
mov
and
icebp
jnp
arpl
xor
adc
inc
xor
(bad)
jmp
jg
xchg
lods
jmp
push
mov
int
shl
jg
and
mov
xor
or
add
out
cmps
jmp
cdq
jp
push
daa
cmc
mov
push
movs
(bad)
jmp
scas
rcr
mov
push
xchg
jp
call
adc
sub
cmc
sub
dec
loop
popf
scas
imul
sbb
sbb
faddp
nop
or
pop
mov
fistp
pop
inc
into
cmp
vsubps
lock
stc
jno
adc
std
mov
mov
sahf
add
mov
fisubr
pop
iret
pop
mov
mov
test
adc
cmp
dec
into
stc
mov
lods
sub
adc
retf
pop
or
jb
cmc
leave
push
adc
ds
sbb
cmp
lahf
add
enter
cmp
mov
and
repnz
or
das
pop
jbe
shl
mov
fimul
jns
jmp
loop
dec
imul
push
mov
mov
nop
dec
mov
inc
dec
test
jecxz
xor
es
test
fistp
xchg
retf
and
test
mov
test
nop
add
mov
retf
xor
cld
out
cmp
ret
mov
fdivr
fbld
mov
mul
nop
(bad)
fbld
or
jae
movs
dec
mov
sub
outs
mov
mov
dec
mov
movs
inc
mov
pop
push
gs
and
fdivr
retf
ins
push
and
pushf
mov
cld
mov
mov
jmp
add
mov
(bad)
push
(bad)
pop
popa
fadd
push
and
div
cwde
jmp
ins
add
xchg
mov
test
cmp
pushf
adc
mov
cmp
retf
mov
sbb
shl
pop
retf
(bad)
aaa
jbe
out
mov
lds
pushf
mov
xchg
ret
shr
and
retf
jne
data16
mov
or
push
mov
mov
push
mov
sub
rol
mov
push
mov
stos
dec
or
jbe
shl
sub
or
jmp
xchg
dec
or
add
cmp
ret
mov
xchg
dec
add
test
clc
cld
aaa
neg
and
xor
retf
mov
(bad)
push
retf
xchg
cwde
stos
cwde
jb
mov
nop
dec
mov
ins
cld
arpl
mov
inc
iret
xchg
test
nop
pop
retf
std
imul
add
xor
ret
mov
jns
sbb
movs
cmc
retf
adc
mov
cwde
jmp
inc
dec
pop
xchg
daa
and
mov
aaa
not
shl
(bad)
sub
ins
adc
mov
xchg
daa
and
dec
(bad)
xlat
mov
adc
mov
nop
mov
retf
mov
nop
dec
mov
mov
ret
mov
nop
dec
mov
mov
ret
mov
sub
xlat
mov
xlat
ret
mov
cwde
push
jne
ins
cld
xchg
xor
call
nop
dec
mov
mov
cmc
retf
mov
std
inc
jne
pop
push
add
retf
add
fmulp
mov
nop
pop
call
out
mov
cmp
movs
in
(bad)
push
xchg
push
retf
mov
xchg
fwait
mov
jl
imul
pop
xor
xchg
stos
mov
outs
add
pop
ds
mov
popw
xor
xchg
fwait
mov
outs
and
pop
xchg
mov
nop
sti
retf
mov
nop
outs
div
(bad)
in
fsub
nop
dec
mov
nop
ret
frstor
sbb
pop
mov
push
mov
inc
push
xchg
xlat
ret
mov
xor
retf
cmp
pop
xchg
pop
retf
cld
arpl
or
aaa
div
scas
shl
push
retf
xchg
shr
xchg
test
mov
ins
in
mov
sbb
(bad)
push
nop
out
mov
xchg
jae
test
cmp
arpl
adc
add
mov
push
retf
mov
add
adc
out
dec
mov
nop
sti
retf
mov
nop
jmp
mov
(bad)
sar
push
test
test
inc
test
inc
(bad)
imul
add
jmp
push
push
gs
jmp
push
jecxz
mov
jnp
imul
xor
xor
ret
mov
ja
mov
dec
cs
mov
or
dec
mov
sub
arpl
jmp
mov
xor
cmc
dec
jmp
mov
mov
cmc
mov
mov
hlt
mov
lods
cmc
mov
popf
cmc
mov
add
popf
jmp
adc
xor
cmc
sbb
xor
cmc
add
jmp
mov
dec
xor
leave
movs
inc
xor
mov
(bad)
inc
scas
add
imul
pop
push
mov
add
outs
sbb
sbb
dec
pop
jmp
mov
add
movs
jle
xor
into
or
pop
inc
aad
pushf
push
adc
setae
retf
pop
sbb
xchg
cdq
repnz
in
pop
inc
stos
xor
jae
jno
sbb
int3
jmp
addr16
sbb
unpckhps
repnz
mov
adc
std
xor
(bad)
mov
jmp
mov
stc
cmp
push
call
aaa
cmc
mov
lock
test
cmc
mov
ds
jmp
ds
shl
popa
cwde
cmp
jmp
add
add
out
cmps
add
add
push
cmps
pop
sahf
push
div
std
mov
mov
adc
leave
sbb
sbb
inc
rcl
push
push
or
or
add
repnz
mov
xor
aaa
cmc
mov
xchg
out
push
cmp
mov
je
imul
adc
retf
or
retf
lahf
ficom
lods
adc
xor
sub
push
inc
idiv
mov
or
(bad)
stos
cld
pop
push
add
pop
or
pop
stos
pop
pop
push
mov
mov
push
pop
stos
stos
fs
data16
pop
not
sub
jmp
pop
mov
push
mov
pop
inc
inc
sub
inc
jmp
push
stos
bound
pop
call
push
mov
neg
add
pop
cmp
cmps
stc
mov
jne
jmp
int3
mov
out
or
retf
stc
xor
lea
xor
jb
lea
pop
add
shr
popa
xchg
(bad)
sbb
mov
stc
cmc
mov
fcomp
arpl
sbb
cmp
cmp
mov
in
mov
push
adc
xchg
pop
inc
mov
inc
jmp
xor
pop
push
jmp
mov
fxtract
mov
call
dec
jb
mov
xor
out
call
ss
mov
jmp
retf
mov
out
pop
dec
inc
cmp
stc
lea
(bad)
hlt
mov
std
mov
xchg
sbb
cdq
and
cdq
add
jmp
mov
mov
aaa
pop
fidiv
repnz
lock
daa
fidiv
push
psrlw
inc
neg
fild
retf
pop
cs
fcomp
arpl
rcr
adc
mov
push
adc
das
pop
call
ds
xor
push
das
mov
sbb
ss
mov
cmp
lods
adc
xor
dec
add
and
ss
mov
xor
cmp
xor
cmp
pop
dec
push
jns
cmp
rcl
cli
je
rcr
jp
repz
ins
cdq
mov
outs
add
xor
(bad)
lock
stc
fdivrp
push
xor
icebp
(bad)
ins
popf
jge
xchg
ret
push
xor
dec
(bad)
ja
xor
mov
mov
cmps
stc
mov
jne
jmp
mov
call
or
push
stc
xor
out
cmp
fiadd
jnp
xchg
cmps
pop
mov
aad
mov
cmc
mov
test
and
mov
mov
aas
jbe
or
sbb
dec
sbb
repz
jecxz
int3
or
push
cmp
cmps
mov
sbb
test
adc
mov
stos
(bad)
addr16
jmp
pop
aaa
sbb
and
xchg
into
mov
xor
cmc
sbb
xor
dec
fdiv
stc
pop
add
cmp
stos
jmp
mov
call
xchg
mov
retf
xor
pop
mov
sbb
repnz
lods
call
mov
sbb
or
hlt
mov
or
shl
call
dec
mov
xchg
imul
pop
es
loop
test
ret
xor
jmp
mov
add
out
stc
fldenv
jmp
adc
xor
adc
mov
sbb
in
or
cs
push
es
cs
retf
sub
das
pop
retf
mov
mov
fdivp
jg
or
mov
(bad)
fistp
out
pop
in
out
in
xchg
adc
pop
inc
xchg
mov
shr
call
push
cwde
test
test
daa
sub
sbb
ins
out
in
push
call
add
in
push
lods
les
sbb
add
push
cwde
leave
cdq
push
call
lahf
in
push
outs
sti
push
call
adc
retf
or
popf
mov
and
sbb
out
pop
cmc
xor
sti
xor
leave
movs
inc
xor
mov
and
sbb
in
out
std
inc
add
sbb
dec
mov
mov
xor
mov
inc
add
pop
pop
inc
idiv
mov
sti
outs
test
mov
adc
fbld
mov
sub
sub
mov
fbld
mov
push
stos
in
push
jle
dec
jmp
aaa
or
cmp
pop
lock
mov
adc
clc
in
pop
inc
ds
inc
stc
ins
clc
adc
jmp
hlt
pop
inc
and
push
in
popf
stc
push
mov
mov
inc
fdivr
stc
pop
or
popf
hlt
mov
call
jmp
test
pop
mov
sahf
add
dec
fucomip
loope
retf
mov
aas
hlt
sbb
cmp
sub
out
inc
data16
push
inc
pop
pop
repnz
sar
mov
jge
jbe
fsub
dec
retf
out
push
cmps
(bad)
out
adc
ficomp
in
pop
(bad)
sub
loop
adc
retf
push
pop
std
pop
adc
add
xor
push
and
adc
and
inc
sbb
pop
jbe
xchg
btc
mov
dec
addr16
les
mov
mov
mov
stc
cmc
fwait
sbb
push
mov
addr16
les
mov
mov
dec
cmps
leave
mov
mov
add
mov
loopne
cli
stc
cmc
dec
cmps
sub
xchg
jnp
stc
stc
cmc
adc
je
xor
sbb
stos
daa
icebp
inc
pop
jns
mov
xor
(bad)
out
iret
cmp
(bad)
int
jnp
out
xchg
pop
jmp
push
in
or
dec
cld
test
icebp
jg
stos
mov
mov
xor
xor
push
sbb
lahf
fcomp
sahf
xchg
mov
outs
leave
mov
jmp
mov
mov
mov
cmp
inc
jmp
fsub
iret
xor
dec
cmps
jne
jmp
mov
jmp
repnz
jno
call
jmp
sbb
cmp
mov
pop
sbb
add
mov
mov
std
mov
ficomp
xchg
fwait
ds
inc
fidiv
add
dec
aaa
fstp
cmc
mov
es
pop
add
jp
xlat
jmp
adc
fnstsw
ja
xlat
pop
mov
adc
leave
sbb
jbe
sbb
cmp
or
adc
ret
out
jl
adc
enter
fst
into
fcomp
sub
pop
adc
push
(bad)
std
leave
or
jmp
xchg
sahf
dec
iret
enter
sbb
sbb
inc
neg
jmp
pop
add
pop
fcomp
inc
out
fdiv
dec
add
sbb
cdq
or
and
(bad)
jo
hlt
adc
dec
mov
mov
shr
jmp
xor
mov
(bad)
int3
test
jge
adc
adc
ins
popf
ror
xchg
imul
cmps
mov
mov
dec
rcr
les
sar
call
mov
dec
out
jp
mov
jmp
out
arpl
in
fadd
test
xor
cmc
mov
xor
cmc
mov
adc
jno
cmp
pop
mov
xor
inc
adc
xchg
jmp
mov
popa
jmp
xor
cmp
xor
shl
(bad)
aaa
cmc
mov
loopne
loopne
ss
inc
out
std
mov
popf
and
jmp
cmps
add
test
adc
jo
fcompp
dec
and
or
mov
fidiv
inc
and
add
es
mov
(bad)
add
(bad)
mov
test
fld
cs
cs
(bad)
adc
xchg
cli
mov
xor
hlt
push
inc
retf
cdq
stos
clc
push
inc
retf
in
in
stc
push
sub
cmp
cmps
sbb
cmp
add
pusha
xchg
cmp
mov
cmps
shl
popa
int3
cdq
adc
xchg
das
sbb
mov
mov
cmp
adc
stos
jno
ret
pop
data16
sti
mov
cmp
mov
loop
pop
aad
iret
cmp
xor
imul
aaa
pop
push
xchg
mov
add
cli
xor
adc
leave
cli
push
dec
ret
adc
fdivr
mov
into
pop
mov
cwde
mov
inc
mov
(bad)
sbb
pop
push
mov
in
mov
mov
repnz
mov
mov
clc
mov
mov
mov
bnd
inc
movs
xor
mov
push
mov
push
jmp
mov
or
pop
add
and
shr
repz
mov
out
clc
sub
xor
and
ins
lahf
imul
repnz
stos
call
daa
cmp
or
mov
xchg
add
cmp
out
pop
cmp
bnd
push
mov
mov
repnz
add
retf
sbb
mov
mov
repz
add
jmp
mov
repz
add
pop
inc
and
sbb
icebp
movs
mov
pop
mov
xor
in
stos
and
sbb
mov
pop
mov
cmp
stos
and
mov
imul
inc
or
push
jb
push
mov
mov
in
push
stos
mov
and
mov
dec
or
inc
mov
mov
into
dec
scas
out
stos
mov
cli
dec
scas
and
pop
inc
or
adc
retf
jle
jmp
mov
aaa
cmc
mov
movs
fs
jmp
mov
jmp
mov
mov
fisub
jns
stc
cmps
mov
cmp
mov
popa
ds
mov
sbb
push
(bad)
dec
mov
sbb
jmp
mov
xchg
lahf
mov
and
pop
cmps
push
lds
iret
and
fstp
push
adc
bnd
and
jmp
jmp
add
movs
or
addr16
or
and
or
cmp
sbb
adc
test
pop
in
ret
cs
inc
es
inc
stc
mov
adc
or
pop
sbb
stos
jmp
xchg
mov
(bad)
fld
xchg
xchg
xor
sbb
(bad)
test
ret
stc
sbb
cmp
pop
mov
loop
das
rcl
sbb
dec
jp
pop
inc
push
mov
repnz
aaa
lods
pop
fwait
not
push
cmp
mov
neg
xor
sbb
or
sub
cmps
test
jnp
out
popf
cwde
jle
jmp
rcr
jmp
xchg
mov
pop
ficom
or
or
add
stos
into
add
idiv
adc
leave
adc
cmp
cmc
pop
add
cmp
pop
mov
mov
add
push
imul
push
lahf
and
sbb
stos
fdivr
ins
sbb
ret
fs
daa
inc
shl
je
addr16
xor
js
daa
out
ins
push
sbb
mov
push
das
(bad)
push
fdivr
jle
(bad)
retf
mov
jl
add
mov
pop
xor
fyl2xp1
ds
mov
push
mov
jge
mov
call
adc
adc
fisubr
(bad)
ficomp
iret
and
sub
jmp
jg
jg
inc
adc
outs
jnp
xor
pop
and
adc
imul
icebp
push
rol
mov
mov
sub
(bad)
pop
int
sbb
jp
cmp
cmps
jmp
dec
lods
enter
xchg
add
aaa
ficom
mov
inc
es
lds
aas
cld
ss
pop
inc
xchg
stc
(bad)
inc
ret
in
push
push
(bad)
adc
(bad)
pop
bound
int
out
mov
xchg
idiv
or
out
inc
and
add
ins
push
inc
aaa
cmc
pop
dec
xor
inc
jmp
imul
xchg
cmp
shl
or
push
cmp
mov
fs
enter
inc
or
pop
inc
popf
rcr
gs
test
add
xor
and
sbb
dec
cmp
adc
shl
mov
xor
add
jnp
sbb
rcr
dec
cmp
stos
pop
and
adc
retf
or
cdq
fwait
mov
xchg
retf
xor
push
sbb
mov
hlt
xor
es
adc
iret
mov
dec
stos
mov
adc
or
stos
pop
repz
and
mov
mov
out
imul
cdq
aam
adc
jb
(bad)
(bad)
out
add
je
fwait
popf
(bad)
fisub
mov
sbb
stos
adc
std
mov
add
add
add
dec
mov
and
dec
fdiv
jnp
aaa
sahf
pop
leave
cli
jp
jmp
pop
add
cmp
(bad)
imul
rol
popa
(bad)
pop
or
adc
xchg
jle
jmp
adc
shl
pop
sub
pop
mov
sub
pop
inc
or
clc
pop
or
jge
mov
cdq
jb
scas
fidiv
clc
call
xor
pop
inc
retf
adc
retf
or
inc
ss
mov
(bad)
pusha
ror
pop
xor
adc
dec
dec
add
mov
push
pop
sub
xor
lock
cmp
mov
inc
pop
into
adc
fidiv
jmp
xchg
adc
(bad)
mov
fistp
les
std
mov
out
dec
out
push
cmps
ret
shl
inc
xor
ret
loop
mov
aad
test
sahf
(bad)
shl
mov
cmp
andnps
add
in
or
sub
cdq
dec
push
sub
fild
scas
and
lock
and
or
push
fucomp
xor
bnd
lahf
cwde
pop
std
stc
into
adc
iret
sbb
cmp
lea
push
push
mov
mov
cmps
pop
retf
or
jne
sub
std
pop
mov
gs
enter
add
leave
dec
add
fstp
jbe
sub
ds
neg
(bad)
pop
lods
push
test
or
lds
jecxz
test
mov
cmps
pushf
xor
dec
je
hlt
add
jmp
mov
mov
mov
repnz
jmp
movs
jmp
dec
and
or
dec
fidiv
cs
ss
mov
push
cmps
icebp
pminub
sub
bnd
pop
adc
jo
push
fcom
lds
add
adc
xchg
push
sub
sbb
push
add
cmc
mov
in
mov
push
movs
or
test
std
mov
add
xchg
pushf
call
stc
sub
inc
mov
int
pop
adc
aaa
cmc
mov
(bad)
mov
mov
sbb
test
fwait
adc
push
cmp
mov
icebp
sbb
sbb
int3
and
lods
xor
xchg
cmc
cld
or
jmp
pop
and
add
inc
jmp
fs
pop
shl
push
pop
add
in
sbb
ficomp
stos
mov
out
in
cld
pop
(bad)
loop
adc
(bad)
stos
or
pop
mov
clc
in
pop
dec
inc
shr
or
cmp
pop
shl
inc
lock
push
out
pop
mov
fmul
retf
or
aam
lahf
das
push
retf
jmp
stos
jge
adc
fsub
push
and
or
xor
ret
sbb
sub
pop
jbe
daa
ins
aaa
mov
and
fisttp
fsub
nop
cdq
popf
(bad)
mov
mov
mov
dec
js
retf
xchg
mov
das
iret
and
jecxz
rol
(bad)
ja
xor
call
cli
pop
xchg
xor
cdq
xor
hlt
movs
cli
daa
hlt
mov
int
mov
fwait
out
sub
pop
add
adc
and
add
jmp
out
ficom
mov
dec
mov
jnp
cmp
xchg
or
lea
sbb
leave
push
call
sbb
xchg
sbb
fcmovb
or
fst
or
cmc
mov
pop
push
xlat
ds
iret
sbb
fistp
xchg
shl
inc
inc
(bad)
mov
sar
inc
mov
stc
adc
push
pop
or
xor
mov
cmp
jmp
jae
cmp
lahf
sub
movaps
push
sbb
xchg
xchg
mov
xor
adc
mov
jmp
mov
out
pop
out
sbb
jbe
fucomi
dec
add
push
jge
popa
clc
in
sbb
xchg
adc
push
sub
retf
or
adc
leave
push
aaa
test
sbb
cmp
mov
push
push
xchg
mov
or
mov
mov
push
enter
mov
add
inc
imul
retf
or
mov
dec
adc
leave
cli
scas
sti
fmul
jbe
rcr
jmp
jno
lock
xor
pop
adc
retf
or
nop
out
inc
bound
mov
aad
stos
jmp
mov
pop
fist
jp
jmp
aam
sub
mov
rol
xor
push
sbb
adc
pop
sti
ret
lods
mov
pop
movs
or
shr
jmp
push
mov
cwde
movs
or
push
pop
je
adc
retf
mov
jl
add
mov
pop
outs
xor
sub
hlt
cmp
pop
test
call
adc
push
nop
movs
xor
add
pop
mov
cmps
inc
dec
xor
cmp
cmp
pop
dec
push
adc
jmp
pop
or
pop
add
ins
imul
push
mov
xlat
add
adc
call
add
cmc
mov
sar
rcr
inc
dec
out
pop
push
in
adc
push
sbb
enter
push
pop
inc
sbb
daa
call
jmp
adc
sub
inc
jp
pop
in
sar
lods
loopne
pop
in
add
fst
test
data16
out
outs
sub
sub
hlt
cmp
ss
mov
pop
sbb
repnz
sub
ficomp
add
pop
push
adc
jo
clc
cdq
mov
mov
cli
mov
dec
dec
retf
sbb
cld
cmp
and
jl
push
add
cmc
mov
(bad)
imul
in
pop
inc
scas
sub
sub
adc
cmp
cmps
adc
push
cmps
adc
cmp
sbb
adc
or
pop
sbb
fbld
ins
push
sar
lods
aaa
push
add
cmp
cmps
stc
pop
cli
adc
int3
sar
mov
jnp
sbb
xor
push
js
or
pop
mov
outs
bound
xlat
push
lahf
and
sub
push
adc
pop
cmp
mov
push
jne
outs
stos
bound
in
inc
adc
and
push
ins
shl
adc
bound
enter
fcom
in
xchg
retf
pop
adc
je
fwait
popf
(bad)
fisub
mov
sbb
pop
xchg
shl
sub
and
xor
cmc
xchg
jnp
shl
jmp
xor
mov
int3
(bad)
daa
pop
lods
and
loope
mov
xor
cmc
mov
sbb
add
and
std
xor
test
aas
retf
cld
enter
out
mov
xor
out
retf
cwde
xor
cmc
mov
loopne
cmp
mov
cmp
out
add
retf
call
xor
mov
loopne
mov
push
cmp
add
movs
adc
out
pop
xchg
call
xor
sbb
jecxz
mov
pop
add
hlt
test
jmp
cmp
loopne
hlt
cdq
add
das
std
cmp
sbb
jmp
jp
retf
imul
mov
icebp
sbb
pop
out
aaa
jne
dec
fdivr
mov
shr
mov
xchg
push
mov
stos
xor
cmc
mov
loope
mov
xchg
xor
cmp
xchg
in
mov
xchg
add
imul
xor
leave
jb
or
and
out
mov
cs
mov
loop
xor
aaa
cdq
mov
sbb
mov
(bad)
jecxz
xor
adc
mov
mov
enter
adc
jecxz
push
inc
(bad)
or
mov
cmc
mov
aaa
cmc
mov
movs
fs
jmp
mov
jmp
sahf
jmp
mov
in
arpl
shl
push
ins
fnsave
cmc
adc
stc
mov
cmc
mov
mov
xchg
loop
std
and
xor
cmc
mov
es
les
xor
push
pop
add
pop
pop
push
dec
adc
jmp
ss
mov
cli
adc
cdq
fidivr
push
int
out
fisttp
dec
sbb
fwait
or
cwde
leave
mov
ins
or
cmc
jno
(bad)
dec
test
std
and
ss
cdq
int3
sbb
mov
(bad)
aad
or
jp
out
and
sub
cmp
sub
jae
push
sub
out
cmc
mov
xchg
out
inc
scas
std
mov
int
sub
aaa
cmc
pop
inc
push
sbb
mov
push
rol
pop
inc
push
pop
push
stc
mov
scas
fistp
stc
xor
inc
pop
inc
add
pop
or
sub
dec
stos
dec
jmp
loop
cmps
and
leave
or
in
cmps
mov
adc
ficomp
push
pop
into
push
push
repnz
or
cmp
cmps
out
inc
sbb
out
push
inc
ss
mov
sbb
sbb
sub
or
(bad)
mov
stc
sar
push
jle
inc
aad
sbb
in
stos
and
in
mov
movs
mov
cmps
and
mov
call
add
mov
je
stc
cmp
aas
and
mov
inc
and
enter
lock
mov
fwait
adc
mov
push
and
mov
pop
and
mov
call
jo
mov
cmp
retf
and
mov
call
js
xchg
cmp
(bad)
xor
pop
and
pop
cwde
cmp
scas
push
dec
scas
mov
sub
ins
xchg
mov
mov
dec
fs
xchg
mov
cmp
and
mov
outs
jge
mov
call
sbb
adc
add
adc
lea
aad
mov
call
cld
lods
adc
add
adc
lea
mov
retf
and
fwait
push
lods
adc
add
adc
mov
add
stos
sti
fwait
and
mov
pop
add
xor
or
rcl
scas
ins
push
mov
xchg
mov
xor
add
xchg
mov
lods
jns
mov
sub
xor
jl
es
lods
xchg
and
mov
pop
xor
mov
popa
fidivr
jae
mov
cs
(bad)
retf
mov
jl
adc
jmp
pop
sbb
out
jmp
push
mov
out
or
dec
stc
xor
and
adc
aas
outs
inc
sbb
xor
xlat
pop
or
test
jmp
aas
mov
sbb
mov
ja
jae
sti
(bad)
mov
fisubr
inc
aam
das
mov
add
pop
into
adc
inc
push
int3
icebp
in
pop
in
inc
dec
jge
out
adc
retf
inc
fist
and
push
xchg
int3
out
push
or
pop
div
stc
xor
aas
ret
stc
push
jns
add
jmp
bound
out
loopne
mov
pop
inc
ret
jle
jmp
pop
cmp
or
jae
and
pop
xchg
push
sbb
in
sbb
push
cmp
pop
push
aam
cwde
outs
sbb
or
int
mov
or
sbb
push
mov
lahf
jg
leave
cli
push
dec
loop
pop
dec
mov
or
xchg
jp
stc
leave
cli
scas
add
pop
sub
(bad)
adc
ss
bound
retf
or
push
cmp
mov
xlat
pop
jbe
(bad)
out
movs
stos
fidivr
push
and
add
xor
repz
adc
idiv
pop
fwait
xor
call
int
fs
mov
(bad)
hlt
test
loopne
addr16
jb
loop
adc
jecxz
retf
mov
loop
adc
pusha
cmp
sbb
test
jbe
and
arpl
(bad)
pop
cmc
loope
test
jmp
push
mov
out
or
lahf
stc
xor
mov
div
aas
out
and
mov
push
stos
rcl
cmp
inc
or
add
inc
adc
jle
xchg
cmp
lock
pop
add
fist
jl
xchg
xor
mov
sub
mov
and
cmc
pop
sub
mov
jmp
mov
inc
xor
push
pop
in
into
pop
ja
repnz
dec
call
adc
cmc
push
add
or
push
ror
add
inc
xchg
adc
pop
mov
sub
sub
(bad)
adc
pop
ficom
call
jmp
and
repnz
push
jnp
(bad)
inc
stc
(bad)
test
(bad)
pop
sub
and
inc
call
dec
fld
dec
call
xor
pop
dec
bound
adc
sub
xchg
add
push
xchg
sbb
call
inc
sub
test
cmp
mov
or
or
xor
pop
adc
cmp
jl
or
fwait
std
mov
ds
sub
pop
rcl
push
ret
or
out
cmp
jmp
jp
push
loop
pop
xchg
into
dec
stos
xor
or
aad
pop
add
aas
repnz
cmp
gs
out
mov
aas
repnz
sbb
loope
xchg
dec
mov
push
xchg
lds
enter
inc
cld
xchg
in
fadd
out
xchg
xor
push
xor
mov
inc
xor
mov
and
jmp
add
push
inc
sbb
stos
pop
push
rcr
outs
in
or
or
jmp
jbe
mov
scas
cwde
(bad)
xor
loop
inc
sub
leave
push
sbb
das
out
in
adc
xchg
out
inc
push
std
inc
sahf
das
sbb
mov
jmp
mov
aaa
xor
dec
int3
call
sbb
int3
repnz
push
push
fstp
inc
jmp
xchg
adc
idiv
mov
ja
adc
pop
mov
in
mov
adc
retf
add
pop
jmp
loop
loopne
hlt
ins
fmul
pop
jmp
adc
std
ss
sbb
mov
mov
outs
fistp
push
retf
xor
adc
leave
cli
push
pop
or
or
leave
or
cmps
sti
pop
in
pop
push
dec
cs
shl
out
mov
sbb
ja
sbb
cmp
cmps
adc
enter
or
adc
or
inc
or
cwde
sahf
adc
and
jne
xor
data16
add
iret
pushf
imul
xor
pop
adc
and
frstor
(bad)
es
adc
and
movs
push
test
dec
cmp
adc
fcmovbe
bound
add
adc
(bad)
and
mov
sbb
ss
and
movs
into
ss
add
xchg
adc
and
xchg
or
cmc
call
or
ja
xor
call
fadd
pop
xor
mov
aas
hlt
sbb
jmp
and
cmc
mov
loop
int
fsubr
pop
retf
and
pop
mov
shl
fcomp
push
ss
pop
in
pop
push
dec
iret
cli
cli
call
mov
iret
clc
outs
cmp
mov
in
cmp
dec
or
inc
mov
ss
mov
mov
mov
fcomp
not
xchg
bound
push
cmp
mov
pop
push
fimul
cmc
mov
adc
leave
or
push
cmp
cmps
sbb
dec
or
ss
mov
pop
sbb
jp
fist
lds
retf
pop
xor
int3
and
push
jnp
imul
fdiv
dec
out
pop
cli
xchg
fsubr
mov
rcr
das
pop
(bad)
out
shl
inc
adc
arpl
inc
mov
sti
adc
fwait
push
sbb
loop
ret
aas
hlt
sbb
dec
es
pop
adc
cmp
cmps
jmp
cmp
mov
mov
pop
sbb
xchg
sub
sbb
inc
cs
ret
out
adc
retf
or
push
enter
xchg
and
mov
sbb
mov
in
and
mov
adc
push
xor
mov
out
clc
test
or
outs
mov
out
mov
test
or
stc
mov
mov
push
inc
xchg
add
mov
hlt
inc
cli
jmp
mov
aad
mov
cdq
out
and
mov
es
fwait
and
dec
pop
aam
push
imul
adc
adc
repnz
aas
dec
and
jg
leave
sar
inc
stos
add
push
sbb
call
adc
cmc
mov
popf
cmc
mov
xchg
pop
mov
aaa
pop
pop
jmp
dec
mov
adc
retf
or
out
cmc
mov
xchg
out
push
idiv
mov
adc
push
inc
xor
mov
lahf
push
arpl
pop
sub
dec
sbb
sbb
sbb
push
cmps
add
daa
std
lds
stos
jmp
dec
mov
(bad)
fcom
aaa
in
pop
(bad)
mov
(bad)
sub
sbb
xchg
nop
cmp
dec
or
or
pop
stc
cmp
push
add
cmc
mov
push
sahf
sbb
mov
pop
ficom
or
or
stc
gs
push
add
pop
or
call
int
rcl
push
pop
sub
das
sbb
lock
cmc
mov
sub
cli
in
mov
dec
dec
cmc
adc
retf
or
push
mov
je
or
or
dec
jmp
jle
pushf
popa
fwait
xor
xchg
jle
xor
cs
rol
sahf
popf
cmp
xor
jl
pop
pop
mov
cs
in
adc
inc
push
les
pop
pop
jl
and
mov
cs
mov
xor
xor
jl
push
pop
mov
inc
xchg
sahf
icebp
sbb
les
jl
sbb
lea
daa
jmp
adc
push
inc
jge
push
inc
hlt
lea
daa
leave
or
into
jge
add
mov
jno
xchg
lds
sbb
xor
lahf
dec
(bad)
xchg
mov
ins
sahf
xchg
mov
inc
mov
mov
js
dec
jo
xchg
lds
test
call
push
lahf
in
mov
dec
ins
pop
pop
dec
cli
dec
mov
jle
js
inc
ja
ret
sub
jle
or
fcom
call
mov
aas
mov
pushf
xchg
enter
sahf
adc
call
lods
inc
mov
push
xchg
push
gs
adc
xchg
jg
rol
jne
nop
(bad)
jns
xchg
adc
inc
dec
aam
push
lods
das
xchg
xor
mov
jg
mov
shl
mov
push
imul
and
cli
retf
jne
es
sub
cmp
xchg
xor
xor
adc
xor
ins
enter
sbb
inc
test
mov
inc
push
icebp
std
mov
sbb
dec
mov
xor
icebp
mov
and
cmp
retf
dec
int
bnd
mov
mov
jmp
ss
mov
(bad)
in
xor
dec
and
or
outs
fdivp
mov
cli
push
sub
xchg
call
retf
pop
shr
popf
hlt
mov
fisub
repnz
pop
jbe
shl
inc
(bad)
cmp
push
sub
jmp
ret
push
icebp
std
mov
pop
lgs
(bad)
lock
repnz
not
xchg
out
adc
retf
pop
(bad)
adc
cli
in
sbb
int3
push
jge
aaa
pop
jbe
shl
popa
inc
fdiv
rol
shl
inc
sbb
pusha
out
pop
loop
nop
out
in
jae
stos
shl
inc
cmp
std
mov
xor
fucomi
mov
sbb
lock
pop
in
call
cs
mov
enter
adc
push
iret
pop
mov
sbb
mov
fmul
sub
pop
and
sbb
sbb
pop
push
es
sub
push
(bad)
ins
in
pop
add
xchg
xchg
xchg
arpl
lods
xor
push
pop
ss
mov
mov
pop
idiv
stos
pop
stos
outs
call
mov
xor
xchg
xchg
neg
jns
mov
xchg
push
ja
xchg
cli
mov
xchg
sti
mov
xchg
pop
push
mov
stos
pop
dec
sti
aas
push
xchg
push
mov
lahf
fwait
dec
sti
outs
push
xchg
imul
test
jbe
rol
cmc
loope
test
inc
xchg
sti
std
mov
mov
xor
or
sbb
mov
pop
jmp
paddq
or
dec
push
into
pop
jmp
mov
lds
fwait
pusha
std
add
scas
xchg
inc
add
or
sbb
cmps
inc
shl
loope
pop
ror
loop
outs
mov
pop
or
push
cmp
cmps
adc
int3
shr
xchg
mov
inc
cmp
call
xor
adc
clc
call
jmp
dec
sti
leave
push
retf
fnstenv
add
inc
ss
mov
aaa
xor
mov
cs
sub
pop
sbb
xchg
adc
pop
inc
sub
ss
mov
dec
jmp
mov
mov
and
jp
add
into
mov
dec
cmp
adc
cmp
mov
sbb
adc
cmp
inc
cli
pop
add
mov
xlat
mov
aaa
sbb
sbb
cmp
adc
cmp
cmps
pop
jle
retf
mov
adc
jae
lods
sbb
add
or
xchg
mov
in
or
fist
push
retf
xor
adc
leave
cli
adc
int3
mov
imul
sbb
xor
jmp
call
pusha
sbb
sbb
pop
jge
mov
int
dec
push
ins
daa
pop
push
int3
mov
pop
int
inc
jae
sub
sub
popa
push
or
push
inc
or
xor
xor
inc
xor
mov
scas
xor
adc
jbe
ret
(bad)
daa
cmc
loope
test
inc
shl
std
mov
aad
mov
and
pop
cmps
out
pop
(bad)
mov
std
push
fnsave
jns
mov
fst
and
cmc
mov
stos
inc
ins
sbb
cmp
add
mov
sahf
jne
adc
aas
pop
ds
inc
(bad)
mov
outs
xor
leave
push
ror
cmc
mov
adc
sbb
leave
sub
push
xor
inc
mov
in
adc
mov
jmp
cmc
push
and
das
sbb
xchg
(bad)
or
add
cmc
mov
fisub
cwde
push
pop
or
cmp
push
cmps
xor
hlt
sbb
stc
pop
push
cs
pop
inc
add
dec
dec
stos
pop
adc
imul
dec
inc
out
std
mov
int
ja
xor
and
jno
push
lods
ret
pusha
pop
in
xchg
dec
and
and
xlat
pop
sbb
cmp
sub
or
neg
and
mov
rcr
jnp
sbb
jmp
cmp
cmps
jmp
xchg
mov
in
leave
cli
push
mov
cmp
jnp
push
sbb
dec
mov
mov
lea
sbb
push
cmp
mov
and
or
popa
xor
inc
test
pop
adc
push
xor
inc
sti
cmp
(bad)
xlat
jle
retf
(bad)
ins
inc
xor
sub
mov
cmp
and
out
ja
sub
mov
sub
inc
in
jne
mov
ja
sbb
dec
stc
jne
mov
xor
add
aas
cmp
sar
mov
icebp
mov
fwait
out
or
inc
and
iretw
int
sbb
fs
adc
sub
jmp
iret
icebp
(bad)
jg
ja
inc
push
push
(bad)
mov
clc
fwait
leave
mov
jp
sbb
stos
jmp
cs
pop
fdivp
jnp
leave
push
xchg
sbb
fnsave
pop
push
rcr
jmp
and
fcomp
pop
mov
cmp
mov
ret
outs
repnz
adc
cmps
ss
out
adc
hlt
push
inc
retf
stc
xchg
cli
scas
inc
cmp
or
cli
mov
add
adc
inc
call
add
(bad)
mov
stc
cmp
cmps
jne
pop
daa
mov
sbb
ficom
inc
fidiv
lods
inc
ss
nop
add
pop
jmp
fwait
repnz
dec
call
js
add
mov
cmp
jnp
retf
cdq
dec
sbb
cmps
and
jmp
sbb
mov
mov
out
sar
adc
aaa
mov
jle
xchg
stos
es
fidiv
mov
adc
out
mov
mov
aaa
add
dec
jo
pushf
enter
cmp
mov
sbb
jmp
pop
dec
retf
adc
add
xlat
dec
retf
adc
cwde
test
push
jmp
leave
movs
push
cmc
mov
add
(bad)
adc
mov
adc
push
mov
retf
cmp
xchg
add
xchg
jmp
ror
jmp
ja
retf
adc
clc
shl
sbb
jecxz
pop
retf
cld
jecxz
adc
retf
or
(bad)
cmp
mov
and
stc
push
out
or
push
cmp
test
sbb
jecxz
cld
retf
or
sbb
jecxz
imul
ss
mov
(bad)
adc
mov
inc
adc
retf
fiadd
ret
or
add
ins
enter
add
(bad)
pop
retf
adc
retf
or
ret
adc
retf
cld
retf
or
(bad)
xor
jecxz
jmp
inc
pushf
aaa
cmc
cdq
adc
jmp
cmc
mov
popf
div
cli
add
mov
or
xchg
xchg
inc
sbb
jb
sbb
and
sbb
or
sbb
ret
daa
jns
or
mov
mov
adc
retf
or
ror
adc
leave
fiadd
imul
add
push
add
xchg
sub
xor
cmc
mov
jne
mov
xchg
nop
test
scas
xor
hlt
mov
loopne
test
lds
hlt
adc
stos
or
retf
cmp
push
add
xchg
pop
dec
(bad)
adc
push
(bad)
pop
retf
adc
retf
cld
retf
or
push
jbe
mov
retf
or
add
data16
or
jmp
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
cmp
pop
jmp
mov
imul
movs
jmp
hlt
std
mov
xor
mov
xor
cmc
mov
arpl
pop
fsub
aam
jmp
pop
jmp
mov
sbb
dec
inc
pop
int3
jmp
pop
mov
jmp
loopne
adc
adc
sbb
sbb
cmc
mov
rcr
mov
out
or
inc
stc
xor
adc
jmp
fstp
sub
or
and
dec
jmp
inc
and
mov
fisub
bound
cmp
aam
rol
and
call
xor
pop
push
jecxz
mov
sub
mov
fldcw
jmp
imul
fst
movs
xor
push
push
aaa
cmc
mov
mov
into
mov
xor
xchg
xchg
stc
aad
adc
adc
push
mov
inc
retf
call
xor
pop
inc
cmps
and
adc
pop
int
mov
push
add
or
or
mov
sti
adc
fild
push
fld
je
xor
mov
inc
retf
cmp
cli
sbb
fdiv
out
int
push
sub
cmp
imul
sbb
(bad)
dec
stc
jmp
or
loop
adc
aaa
jno
adc
pop
stos
jmp
sbb
in
pop
jmp
push
jbe
leave
or
(bad)
std
mov
and
push
cmp
jl
inc
jmp
in
aas
arpl
stc
(bad)
pop
cmp
sti
sub
pop
mov
cli
pop
mov
add
sbb
add
jmp
xchg
sbb
add
mov
add
jmp
push
(bad)
sbb
add
sbb
sti
or
nop
jbe
adc
mov
and
(bad)
cmc
jnp
adc
mov
(bad)
and
aas
xor
adc
cwde
movs
sbb
in
cdq
xchg
adc
push
xor
push
xor
adc
mov
popf
es
sbb
imul
sbb
push
and
mov
dec
jmp
std
pop
dec
mov
push
or
and
jp
vmovaps
xor
into
scas
or
or
cmps
imul
jge
adc
fcmovu
adc
ja
loope
mov
inc
imul
or
jo
sti
shl
and
pop
loopne
retf
loope
pop
in
push
jge
in
push
pushf
sbb
add
mov
push
idiv
xor
(bad)
shl
fist
pop
in
pop
jle
in
(bad)
pop
mov
repnz
sbb
adc
jge
adc
or
adc
mov
mov
(bad)
fdivr
adc
mov
mov
(bad)
fdivr
mov
mov
lds
sub
(bad)
jl
dec
movs
aaa
int3
into
or
in
inc
jb
ins
fs
sbb
mov
rol
pop
rol
push
adc
xor
ins
sbb
je
imul
pop
sbb
neg
aaa
les
pop
cwde
movs
adc
or
mov
adc
sub
or
and
inc
sub
shl
out
push
jge
adc
jbe
dec
sub
mov
jb
and
push
push
push
inc
aaa
push
push
int3
cmp
mov
ss
call
pop
out
add
and
pop
std
loope
inc
mov
pop
stos
sbb
mov
cmps
xor
or
(bad)
pop
adc
inc
cmps
push
ds
stos
cmp
in
sub
adc
add
or
mov
into
out
(bad)
cmp
pop
push
mov
adc
or
adc
mov
aad
xchg
sbb
mov
mov
push
pop
sbb
add
daa
and
sbb
add
push
xchg
sbb
push
loop
mov
cmp
mov
sbb
sbb
cmps
aad
(bad)
adc
mov
out
jp
adc
pop
and
mov
xchg
sbb
jmp
lds
adc
xor
adc
dec
sbb
out
and
xchg
out
mov
cmp
add
test
jne
inc
pop
aas
hlt
adc
mov
movs
mov
xor
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cdq
std
aas
hlt
movs
cli
aaa
cmc
mov
fyl2x
mov
call
add
pop
and
fucomip
fstp
repz
not
cmp
push
add
pop
push
jo
xor
inc
xchg
add
popf
ins
dec
sbb
leave
push
(bad)
out
cmc
xchg
addr16
inc
mov
fistp
jmp
idiv
fst
push
xor
repnz
shl
pop
sub
dec
push
lea
sbb
aad
push
adc
aaa
cmc
mov
xchg
out
out
cmp
lahf
mov
cmp
mov
dec
ss
mov
ror
cmps
jmp
idiv
ss
push
fistp
addr16
pop
inc
aaa
shl
popa
loope
xor
inc
retf
out
iret
sbb
sbb
xchg
push
sbb
inc
repnz
cmp
cmps
aaa
scas
fld
data16
stc
xor
mov
add
pop
jno
rcr
inc
jmp
inc
pop
(bad)
push
xchg
add
or
adc
retf
pop
(bad)
adc
cdq
pop
stos
jmp
or
sub
mov
out
adc
ds
out
mov
cld
pop
sbb
pop
js
lds
retf
js
loope
adc
mov
lahf
sub
inc
test
ins
loopne
ss
dec
fisub
pusha
push
xchg
ins
int3
or
dec
test
nop
inc
js
jp
test
ins
push
test
inc
test
ins
jmp
test
ins
mov
idiv
inc
lea
or
test
ins
dec
jns
lds
retf
js
loope
test
ins
mov
xchg
ins
loopne
popa
cmp
add
gs
inc
lahf
int3
dec
test
ins
dec
in
pushf
xchg
pop
or
addr16
test
nop
inc
test
ins
inc
rcr
gs
test
cmp
xchg
ins
int3
test
dec
lods
jg
pushf
js
jp
jp
ins
mov
arpl
inc
xchg
jp
xchg
mov
ins
inc
test
mov
test
mov
outs
xchg
ins
call
jmp
cdq
lods
pusha
fadd
or
mov
(bad)
arpl
mov
and
inc
pop
mov
xor
hlt
out
ins
xor
jl
jmp
xchg
clc
js
cwde
jmp
cdq
clc
movs
movs
cdq
mov
jmp
movs
jmp
mov
sbb
and
jb
repnz
repnz
shl
jmp
clc
sbb
call
mov
stos
fldenv
jge
fxam
and
in
lock
pop
cld
sahf
in
fadd
std
test
lods
sbb
div
call
or
jg
xor
lahf
xchg
inc
fst
aas
ficomp
and
jb
mov
out
call
in
sbb
mov
mov
movs
into
xor
xchg
ret
inc
xlat
push
mov
cli
jmp
aaa
cmc
mov
mov
int
fcomip
stc
idiv
xchg
shl
loopne
cmc
pop
or
(bad)
hlt
mov
fucomip
(bad)
rcl
repnz
mov
pop
and
sub
push
cmp
mov
dec
aaa
add
add
cmc
mov
push
gs
cwde
inc
pop
cs
sbb
in
pop
hlt
adc
aaa
cmc
mov
sar
mov
in
pop
cmp
(bad)
sbb
jmp
ficom
repnz
outs
ffreep
jno
xlat
pop
cmps
jmp
sti
mov
pop
(bad)
push
adc
jmp
hlt
and
hlt
mov
adc
call
xor
adc
cmps
adc
(bad)
jmp
(bad)
mov
cmp
imul
(bad)
push
(bad)
loopne
or
(bad)
pop
pop
adc
cmp
cmps
sbb
cmp
adc
cmp
mov
and
dec
aad
sbb
dec
cli
sbb
or
out
add
add
adc
retf
push
and
adc
inc
fucomi
stc
and
bnd
inc
jmp
shl
out
add
inc
retf
aam
(bad)
out
jg
sbb
leave
mov
ss
add
pop
pop
sbb
pop
cli
retf
cmp
add
inc
mov
jmp
xchg
adc
sbb
and
mov
out
or
in
icebp
mov
icebp
aam
(bad)
out
jl
adc
sbb
stos
and
mov
cld
xor
xchg
imul
sub
xchg
adc
sbb
aam
out
ss
pop
jno
push
xchg
adc
push
inc
rcl
jmp
addr16
jg
jno
js
adc
sbb
push
pop
pushf
out
sbb
jp
std
and
std
add
popf
jmp
mov
ret
push
add
push
fld
add
sbb
loope
xor
iret
or
je
and
cmp
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
add
aas
hlt
inc
cli
addr16
mov
(bad)
mov
out
and
mov
add
adc
aas
cs
lss
outs
cmp
shl
aas
push
and
sub
jmp
jg
test
out
shl
jg
xchg
push
or
sub
test
leave
sbb
inc
jb
dec
in
sar
push
dec
loope
pop
dec
cmp
pop
jmp
lods
dec
xor
or
push
cmp
mov
add
aam
cmc
push
add
cmc
mov
add
nop
push
cmp
adc
cmp
cdq
scas
stos
jmp
loope
jmp
test
dec
enter
frstor
ret
add
pop
push
call
lock
sbb
int3
sbb
loope
sub
repnz
ds
(bad)
cmp
repz
int3
les
dec
call
stc
ret
sub
mov
lods
adc
cmps
jnp
call
jmp
cmp
imul
inc
adc
rcl
retf
xor
sbb
cs
or
in
div
add
pop
push
sbb
cmp
out
sbb
sbb
in
fwait
aas
push
out
ficom
int3
sbb
and
sbb
arpl
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisub
pop
fisubr
movs
lock
mov
fcom
inc
dec
xchg
loop
push
pop
loop
loope
loop
jns
bound
pop
fidiv
adc
and
adc
fild
inc
(bad)
ins
(bad)
pop
ficom
ins
fld
or
fld
or
and
adc
pop
or
(bad)
ins
fild
or
fidivr
mov
cmp
pop
sahf
arpl
and
fld
push
jae
dec
cld
sbb
addr16
add
sbb
fsub
or
arpl
ror
or
jp
cdq
push
fild
sbb
fisubr
hlt
dec
push
or
fld
stc
daa
xor
sbb
shr
(bad)
dec
popf
or
pop
mov
pop
fld
ins
fcmovnb
or
int
ret
call
cld
scas
bound
pop
jb
cmp
jle
add
pop
add
mov
mov
or
retf
sbb
or
mov
(bad)
dec
shl
cld
(bad)
dec
shl
test
dec
add
jge
xchg
test
pop
aad
or
scas
(bad)
dec
jns
mov
or
retf
sbb
or
mov
(bad)
dec
shl
pop
retf
sbb
shl
pop
jnp
leave
pop
fisub
sbb
bound
shr
sub
ret
(bad)
popf
fisub
pop
call
xor
pop
bound
pop
jb
test
sbb
or
(bad)
pop
jb
test
xchg
add
sbb
or
(bad)
pop
jp
dec
pop
fimul
or
(bad)
dec
shl
pop
jnp
leave
pop
fisub
sbb
bound
shr
dec
into
ret
(bad)
popf
fisub
pop
call
xor
cld
bound
pop
jp
dec
pop
fisubr
sub
adc
imul
test
bound
pop
jp
dec
pop
fisubr
fxch
mov
imul
test
cli
add
adc
shr
shr
and
jp
std
add
adc
(bad)
into
test
sub
or
ret
fwait
push
(bad)
sub
jns
stos
inc
mov
pop
fidivr
jg
(bad)
aas
fisubr
(bad)
rcl
pop
jp
adc
sub
push
sbb
out
mov
(bad)
leave
fisubr
les
or
stc
xchg
or
bound
mov
push
mov
add
std
fldenv
pop
jbe
adc
pop
fiadd
pop
push
ja
mov
(bad)
cld
dec
shl
or
dec
add
adc
(bad)
sti
xchg
js
mov
cmps
fisubr
push
shr
inc
shl
push
(bad)
pusha
add
mov
pop
fcmovu
jl
lds
stc
(bad)
dec
bound
pop
(bad)
bound
push
retf
scas
or
(bad)
sub
or
push
push
fld
pop
into
inc
or
sti
sbb
inc
inc
imul
(bad)
push
push
inc
rol
or
lds
pop
jle
adc
(bad)
add
fidiv
inc
shl
pop
dec
bound
pop
ficomp
pop
xor
mov
pop
jb
test
sbb
or
jmp
or
(bad)
dec
sar
adc
std
or
arpl
mov
push
ja
stos
mov
pop
(bad)
fld
inc
lds
cmp
pop
mul
dec
shl
jg
dec
or
into
inc
or
not
enter
pop
sbb
std
(bad)
pop
jb
test
push
add
sbb
cld
(bad)
pop
jp
sbb
or
mov
(bad)
dec
shr
adc
std
imul
lock
js
dec
mov
jne
pop
out
bound
shl
fsubr
popa
add
pusha
sbb
shl
stos
out
bound
pop
(bad)
mov
pop
push
mov
lods
in
bound
inc
shl
jnp
sbb
add
push
xchg
push
(bad)
pop
fisubr
into
movs
jl
jle
div
push
dec
adc
std
sbb
arpl
mov
push
js
dec
mov
jne
pop
out
bound
shl
fcomp
pusha
sbb
shl
stos
sahf
bound
pop
(bad)
mov
pop
push
mov
lods
in
bound
inc
shl
jnp
sbb
add
push
xchg
push
(bad)
pop
fisubr
into
movs
jl
jle
div
dec
push
add
je
out
int
ret
pop
push
(bad)
clc
inc
shl
inc
jl
pop
jp
loop
and
adc
retf
jmp
mov
xor
(bad)
hlt
inc
cli
jnp
mov
pop
lock
cdq
out
and
cmc
mov
rcl
in
shl
add
sub
and
lods
jmp
ss
mov
inc
js
(bad)
xor
out
mov
cmc
pop
in
fistp
int3
test
add
das
mov
inc
fs
mov
dec
jmp
dec
call
ss
mov
call
aaa
cmc
pop
inc
(bad)
xor
es
nop
and
or
cmp
mov
fstp
cmps
out
pop
call
aas
fld
jmp
pop
cmp
cmp
mov
mov
add
sahf
sahf
ins
lds
loop
dec
aas
hlt
inc
leave
jp
adc
push
push
xchg
jno
call
dec
(bad)
push
mov
ror
pop
cmp
dec
retf
mov
cmc
sbb
add
mov
rol
and
fiadd
test
sbb
cmc
mov
sbb
pop
sub
sbb
adc
das
pop
mov
das
out
dec
(bad)
xchg
pop
adc
fcomi
mov
jge
hlt
adc
retf
or
shl
mov
fld
add
push
(bad)
lods
mov
or
add
mov
xor
sbb
cmc
les
dec
in
cli
lods
pop
fsubr
inc
inc
in
push
repnz
into
add
adc
in
inc
or
sti
add
movs
mov
into
add
sbb
or
pop
movs
iret
add
sbb
sub
adc
or
pop
lods
push
pop
outs
mov
mov
dec
nop
test
repnz
push
add
imul
cli
add
in
cli
add
in
cli
rcr
fiadd
inc
sti
outs
add
in
cli
mov
in
fiadd
jg
jbe
push
in
out
neg
repz
in
cli
cmp
adc
mov
and
push
into
in
cli
cwde
pop
shr
in
or
pop
loopne
add
fwait
ror
xor
cvtdq2ps
xor
and
cmp
mov
jbe
cmp
repz
gs
stc
lea
push
andps
or
pop
movs
push
add
pop
(bad)
pop
loopne
add
sti
adc
div
xor
inc
sti
or
pop
movs
iret
add
sbb
sub
adc
or
pop
movs
push
add
cmp
fcomp
or
outs
in
adc
div
xor
inc
sti
or
pop
movs
iret
add
sbb
sub
adc
or
pop
movs
push
add
sbb
fcomp
or
outs
in
adc
div
xor
inc
sti
or
pop
movs
iret
add
sbb
sub
adc
or
pop
movs
push
add
sti
fcomp
pop
loopne
add
sti
adc
div
xor
inc
sti
or
pop
movs
iret
add
sbb
sub
adc
jmp
and
add
sti
cli
retf
xchg
movs
and
inc
pop
loopne
push
movs
mov
push
stos
inc
sti
outs
add
in
(bad)
xchg
pop
in
(bad)
cmp
int3
push
dec
in
cli
pop
pop
loopne
test
icebp
in
add
sti
test
in
cli
adc
mov
(bad)
imul
ins
in
or
pop
call
das
cld
pop
dec
xor
adc
mov
adc
or
pop
fsubr
pop
sar
or
pop
sub
shr
or
pop
dec
xchg
pop
cmps
adc
imul
dec
mov
sbb
stos
jbe
inc
mov
or
mov
and
pop
cmps
push
aas
or
add
aas
pop
and
mov
push
pop
jb
fld
sub
xor
out
into
stc
push
sbb
xor
adc
mov
clc
push
adc
aad
inc
(bad)
push
sbb
jmp
dec
repnz
or
fdiv
mov
adc
jl
dec
push
inc
jmp
cmps
stc
sbb
scas
push
cmp
sbb
div
jmp
(bad)
cwde
ds
pop
inc
or
jecxz
jno
jb
fdiv
push
jmp
xchg
add
clc
in
adc
inc
out
inc
scas
enter
ds
sbb
iret
xchg
jp
sbb
cmp
mov
adc
out
add
pop
jle
mov
cmc
aam
hlt
in
(bad)
hlt
pop
dec
sbb
push
jmp
mov
inc
retf
inc
sbb
pop
sbb
or
push
mov
inc
retf
add
push
sbb
call
jmp
stc
stc
aad
adc
jmp
retf
or
cmp
shl
fisub
pusha
jns
bnd
add
xchg
dec
enter
push
fistp
test
not
cmp
(bad)
xchg
pop
ret
mov
out
(bad)
nop
sti
cmp
outs
movs
pop
sbb
nop
pop
sub
cmp
sbb
cmps
adc
shl
push
test
lahf
lods
sbb
mov
pop
std
adc
mov
dec
test
jg
jmp
retf
pop
mov
cmp
mov
(bad)
repz
jmp
addr16
call
sbb
inc
jp
fadd
inc
pop
fdiv
or
pop
fwait
pop
push
or
sub
xchg
neg
or
pop
push
or
pop
pop
sub
aas
or
nop
inc
pop
popf
aas
pop
push
or
pop
mov
nop
jg
pop
(bad)
push
pop
adc
das
push
add
fistp
mov
push
leave
push
add
push
cdq
mov
xor
xchg
pop
pop
fdiv
sbb
or
pop
mov
cmp
or
pop
push
cld
test
aas
or
dec
add
hlt
inc
jg
add
dec
adc
cmp
cld
test
aas
or
dec
add
hlt
inc
jg
add
push
pop
test
mov
or
cs
add
repz
mov
nop
repz
addr16
retf
pop
or
ins
mov
adc
loop
cwde
pop
adc
test
int3
push
sbb
cmc
push
or
leave
or
add
or
dec
pop
adc
das
push
add
neg
cdq
lods
dec
adc
xchg
pop
test
add
dec
(bad)
push
pop
and
setg
nop
sti
loop
xchg
pop
adc
sub
out
xor
cld
adc
xchg
pop
or
and
xchg
pop
or
sar
push
cmp
call
sbb
dec
ins
mov
mov
add
dec
cld
(bad)
std
push
adc
dec
jb
jmp
xchg
pop
sbb
(bad)
push
pop
sbb
inc
jp
fadd
dec
loop
cmp
dec
loop
cmp
pop
mov
push
or
cld
or
dec
push
or
jg
push
sbb
cmp
pop
push
or
pop
cmp
xchg
pop
pop
fdiv
mov
lea
xchg
pop
cmp
xchg
pop
pop
mov
mov
add
pop
pop
sbb
push
push
or
mov
push
cdq
ins
mov
sub
xchg
ja
jmp
addr16
retf
pop
dec
sub
mov
cwde
pop
jp
ins
mov
or
adc
pop
sub
xchg
mov
mov
rcr
adc
cdq
add
xor
pop
add
inc
cld
add
outs
mov
cmp
dec
shl
call
sbb
inc
jp
fsub
inc
pop
(bad)
dec
out
ins
or
pop
fwait
pop
push
jns
pop
dec
test
sti
mov
jge
push
pop
mov
nop
repz
mov
nop
push
pop
sbb
inc
jp
fadd
inc
pop
fdiv
or
pop
fwait
pop
mov
xchg
pop
xor
xchg
pop
mov
xchg
or
inc
pop
stc
fcom
or
mov
pop
lea
popf
dec
push
and
fwait
mov
nop
ja
(bad)
push
sbb
or
mov
test
(bad)
jecxz
add
movs
pop
sbb
fs
add
lahf
pop
sbb
sbb
dec
cwde
pop
pop
sbb
sbb
or
int3
xor
outs
aam
dec
cwde
pop
adc
jbe
fwait
jmp
pop
sbb
(bad)
mov
popa
mov
pop
out
or
cmps
stc
xor
mov
push
shr
bnd
pop
xor
xchg
cli
cmp
pop
test
div
and
sbb
xor
ficomp
jnp
stc
cmps
push
adc
and
leave
ror
dec
sbb
cwde
sbb
fcmovu
fild
into
pusha
cld
mov
mov
sbb
cli
(bad)
retf
pop
shr
mov
mov
xchg
es
sbb
xchg
cli
mov
xor
cmc
pop
dec
rol
jmp
(bad)
or
adc
adc
cmps
mov
mov
sbb
or
sbb
add
repz
mov
add
cmovb
into
push
add
or
mov
and
cmp
mov
add
ret
add
daa
sbb
retf
xor
sar
scas
dec
call
mov
cmp
cmps
adc
(bad)
pusha
out
leave
adc
pop
lock
pop
inc
scas
add
mov
cmc
adc
retf
xor
mov
or
push
ret
les
aas
scas
and
push
mov
mov
pop
add
cmp
loop
adc
ja
and
and
aaa
cmps
test
xor
js
cmp
loope
je
rcr
cmp
sbb
sub
lods
ret
push
out
test
scas
mov
sbb
cmp
enter
mov
xor
mov
test
shl
xchg
xor
or
addr16
and
out
and
xor
mov
push
repnz
xchg
es
mov
sub
pop
mov
pusha
neg
fdiv
add
retf
fst
xchg
cmp
repz
cmp
shl
push
out
ja
jge
add
fldcw
pusha
push
(bad)
xor
push
je
lea
ret
je
leave
adc
add
mov
popa
pop
mov
jle
dec
ss
bound
mov
push
cmc
ja
mov
scas
arpl
sbb
jmp
loope
test
pop
loop
xor
stc
mov
mov
cli
shl
jmp
xor
mov
cmp
fnstcw
hlt
adc
xchg
aad
popa
pushf
sub
jge
cmp
cmc
dec
push
(bad)
or
inc
push
cmp
adc
stos
aad
popa
jmp
call
cs
or
jmp
mov
pop
ss
inc
cmp
mov
test
mov
cmps
push
mov
movs
mov
xor
push
and
push
mov
add
and
xor
repnz
adc
outs
clc
out
jne
bnd
aaa
jl
mov
add
ror
daa
pop
clc
add
inc
push
pop
sbb
pop
dec
out
pop
and
push
cmps
mov
push
jmp
fiadd
aaa
cmc
xchg
aaa
ds
jmp
inc
cmp
hlt
pop
add
adc
mov
or
sub
pop
inc
lock
jmp
pop
add
lods
pop
call
cdq
sahf
jno
fbstp
add
pop
(bad)
push
or
and
jbe
hlt
gs
hlt
sbb
fwait
scas
repnz
lods
jl
xor
mov
out
cmp
pop
inc
ss
pop
call
aaa
cmc
pop
add
ret
or
mov
push
cmps
jmp
(bad)
jnp
xchg
ss
dec
retf
inc
xchg
cwde
inc
in
lods
cli
push
adc
fisttp
out
cmp
dec
mov
or
xchg
out
dec
push
retf
pop
add
bound
or
pop
mov
adc
(bad)
or
retf
pop
adc
sbb
aam
or
repz
push
xor
push
jae
sub
adc
xchg
adc
xchg
xor
fwait
in
scas
fwait
xchg
add
adc
jnp
sbb
pop
pop
sbb
je
jns
xchg
mov
adc
test
adc
xchg
aam
mov
not
jnp
cmp
inc
xchg
sbb
sbb
les
fwait
fwait
adc
xchg
loop
adc
and
adc
sbb
sbb
or
add
aam
mov
(bad)
(bad)
jnp
cmp
inc
xchg
sbb
sbb
les
fwait
fwait
sbb
xchg
loop
mov
aaa
test
es
nop
xchg
popa
lahf
pop
adc
xchg
mov
adc
test
adc
adc
jbe
xlat
push
mov
sub
xchg
shl
scas
ret
jbe
push
mov
or
arpl
xchg
jl
jmp
stos
jbe
push
mov
or
mov
xchg
sbb
sbb
jbe
outs
push
int
das
sbb
or
pop
adc
sahf
push
and
mov
adc
jl
jmp
mov
inc
pop
inc
xchg
adc
(bad)
jmp
mov
push
test
rcr
(bad)
repnz
push
int
div
adc
xchg
push
pop
pop
popf
or
(bad)
mov
xchg
div
sbb
xchg
xchg
pop
popf
or
xlat
mov
xchg
push
ja
or
mov
pop
push
popf
or
mov
push
xchg
or
mov
movs
rcl
jbe
push
mov
inc
mul
test
adc
cmp
sub
jbe
das
push
popa
mov
sbb
inc
pop
and
add
test
fdivr
adc
fwait
pushf
or
pop
(bad)
les
loop
xchg
mov
sbb
(bad)
and
adc
push
or
cmp
or
fwait
mov
dec
xchg
add
fcom
adc
lahf
pushf
pop
or
adc
sbb
sbb
mov
xchg
sar
mov
nop
js
bound
ja
sub
test
and
sub
sub
or
mov
add
jbe
not
cmp
inc
xchg
sbb
neg
mov
rcr
mov
(bad)
mul
rol
and
and
mov
fmul
pushf
sbb
pushf
sbb
jns
jmp
jb
sbb
(bad)
jg
jge
(bad)
rcl
call
adc
cmp
sbb
test
sub
gs
mov
rcl
test
aam
adc
ins
adc
cmp
mov
jle
jl
sbb
xchg
push
adc
xchg
hlt
sub
adc
mov
push
sub
jle
jb
pop
xchg
in
and
jnp
cmp
inc
xchg
sbb
push
xchg
or
adc
mov
out
jnp
cmp
inc
xchg
sbb
xor
mov
xchg
les
jle
inc
push
mov
adc
lahf
pushf
pop
lods
test
jmp
push
sbb
pop
cdq
or
add
sbb
sub
add
test
xchg
add
xchg
pop
gs
sub
mov
adc
xchg
adc
add
sbb
test
sbb
add
adc
pop
jnp
stos
pop
xchg
sbb
adc
inc
rol
shl
sbb
adc
adc
jmp
clc
pusha
jp
xchg
pop
dec
pushf
je
jl
cmp
adc
leave
mov
cmc
mov
xor
cmc
mov
xor
mov
adc
adc
xor
cmp
hlt
fsqrt
(bad)
test
call
or
inc
cmps
push
(bad)
daa
aad
push
jmp
loop
mov
pop
into
push
jmp
or
call
or
mov
movs
xor
sbb
cmp
inc
aam
mov
out
pop
add
sub
pop
in
in
inc
sbb
out
inc
jb
dec
std
adc
sub
sti
aaa
inc
or
jbe
stc
xor
push
cmp
jmp
call
ss
mov
jmp
pop
inc
or
mov
push
lods
pop
sub
adc
cli
push
aad
ins
sbb
int3
ja
push
xor
adc
mov
out
mov
shr
mov
dec
xchg
add
jmp
sbb
sub
call
xor
push
xor
cmp
ja
repnz
call
js
sti
pop
add
dec
jmp
fwait
jle
adc
dec
adc
leave
cli
push
ins
loop
sbb
push
mov
push
aaa
cmc
mov
fisub
cmps
adc
xor
ret
push
mov
and
xor
pop
pusha
xchg
add
pop
ror
stc
mov
lods
mov
fdiv
fldcw
or
push
popf
int
scas
and
dec
bound
xor
or
mov
mov
mov
sub
pop
in
add
lods
cwde
jne
mov
push
js
mov
clc
add
cmp
fbld
jmp
adc
retf
or
jecxz
or
inc
ss
shl
ret
jmp
loope
test
pop
jmp
ss
mov
and
cs
std
jp
fnstcw
cmc
sub
and
mov
lds
cmp
(bad)
or
inc
push
cmp
cmc
mov
cmp
xor
cmp
add
aad
popa
jmp
shl
ss
push
in
ret
or
xor
leave
movs
inc
xor
mov
daa
mov
jg
jecxz
mov
jp
retf
cmp
and
cmp
mov
test
push
add
cmc
mov
cs
ss
dec
mov
sbb
and
adc
adc
adc
and
imul
add
adc
xchg
fidiv
jae
mov
mov
ss
mov
std
mov
push
cmps
outs
sub
pop
cmp
movs
imul
pop
mov
fwait
sar
or
push
mov
call
xor
inc
jle
sbb
push
inc
ss
mov
gs
adc
fmul
stc
(bad)
push
popf
ret
fcomp
push
cmp
mov
jmp
jno
adc
retf
pop
bound
mov
dec
fdiv
in
pop
inc
pop
clc
pop
pop
xor
add
mov
cmp
ss
pop
in
(bad)
dec
sbb
out
dec
dec
inc
or
cli
in
pop
in
mov
das
out
inc
xchg
mov
push
sti
push
fsub
sbb
dec
adc
adc
sub
std
sub
hlt
fldenv
pop
dec
push
mov
cmps
or
fisubr
pop
(bad)
push
cli
and
or
mov
neg
adc
cmps
xchg
js
jno
(bad)
ja
jmp
inc
jmp
xor
push
(bad)
jnp
retf
sti
pop
push
jnp
scas
lea
pop
pop
xchg
fmul
mov
jmp
mov
retf
cli
loop
xchg
inc
data16
mov
sub
mov
and
pop
cmps
out
mov
sahf
imul
sbb
mov
cmp
xor
mov
fdiv
iret
lods
call
mov
sbb
ficom
sub
xor
jg
sbb
js
or
ret
add
pop
mov
jmp
cmps
xor
push
jmp
stos
jmp
jae
jmp
and
lds
sbb
cmc
pop
inc
push
sbb
stc
pop
inc
add
call
ss
mov
daa
fidivr
push
jmp
mov
jo
hlt
push
inc
ss
mov
push
adc
push
aaa
cmc
pop
in
not
xchg
out
inc
sahf
icebp
dec
adc
leave
or
popa
add
in
pop
mov
push
mov
fs
cwde
and
pushf
xor
mov
in
jne
push
pop
or
(bad)
cmp
or
out
inc
jmp
xchg
xchg
leave
cli
push
mov
int3
sbb
int3
stos
cmp
or
es
fdiv
in
pop
dec
jb
inc
adc
cmp
adc
mov
add
xlat
mov
add
loop
cmp
pusha
sahf
pop
pop
add
(bad)
daa
lock
jo
js
fadd
js
fadd
js
fadd
js
fadd
pop
xlat
ror
rcl
(bad)
fadd
js
fadd
pop
xlat
and
pop
stc
push
je
aam
xlat
lock
jno
fadd
js
pop
cmp
inc
aad
and
and
js
faddp
call
retf
scas
es
int3
jns
icebp
adc
or
jno
rcr
jae
(bad)
js
adc
xlat
je
rcl
jge
and
fsub
add
lds
jg
and
and
push
xlat
or
jno
repnz
shl
sbb
lds
dec
imul
leave
push
(bad)
(bad)
fadd
js
fsubr
jmp
lds
rcl
imul
push
(bad)
aam
jl
fadd
aam
dec
clc
outs
fcmovu
lds
int3
push
push
xlat
and
pop
icebp
push
je
aam
je
lock
jno
fst
push
(bad)
xor
jns
jg
fbld
and
outs
push
pop
int3
jns
push
scas
jns
sbb
ins
adc
(bad)
jne
sahf
fld
ins
jbe
int3
jns
jmp
xchg
push
add
sti
fidivr
imul
inc
cld
cmps
jmp
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
loope
test
pop
daa
popf
loopne
dec
cmps
cld
mov
push
inc
cmp
mov
pusha
push
xchg
mov
xchg
add
xor
arpl
sbb
cmc
mov
loope
mov
out
or
retf
stc
xor
icebp
addr16
aas
bound
adc
ret
mov
iret
push
or
aas
xchg
loopne
pop
pop
dec
push
cwde
push
jmp
mov
add
fisubr
and
retf
jge
add
(bad)
fwait
mov
adc
cwde
(bad)
sbb
loop
jmp
hlt
jno
mov
sbb
xchg
push
stos
xor
dec
loope
adc
into
xor
mov
fsubr
in
int
push
jmp
xor
pop
inc
sbb
pop
in
fmul
das
mov
xor
not
out
cmc
mov
fsubr
into
adc
cmc
push
add
dec
test
pop
in
xor
shl
mov
and
xchg
out
in
pop
out
nop
out
inc
data16
dec
adc
sbb
ret
es
(bad)
mov
mov
cmp
jmp
xor
(bad)
pop
mov
shl
(bad)
dec
in
pop
(bad)
shl
inc
dec
call
or
adc
(bad)
sub
jmp
push
pslld
adc
fdiv
mov
aad
scas
sbb
das
cmp
rcr
xchg
xchg
out
ins
fisttp
lods
adc
leave
bnd
jmp
pop
mov
sub
cmp
bnd
cmps
mov
mov
cmp
jne
and
xchg
and
xchg
and
xchg
and
in
shl
xor
bound
and
lds
pop
loop
and
adc
and
adc
and
push
and
add
nop
jne
push
inc
add
adc
ja
and
push
push
mov
adc
xchg
(bad)
xchg
jo
and
jno
and
add
inc
loope
and
xchg
and
pop
mov
in
xor
ja
and
xchg
inc
jne
and
je
or
and
jbe
cs
out
xchg
push
pushf
and
cmc
mov
jbe
aam
loope
and
mov
or
xlat
push
xchg
retf
xchg
push
aad
sbb
inc
std
add
shl
xchg
or
push
inc
leave
pop
sub
(bad)
sub
dec
enter
stc
gs
sbb
(bad)
jecxz
arpl
mov
repnz
retf
mov
shl
and
pop
cmps
out
mov
xchg
rcr
shl
pop
add
(bad)
popa
popf
jmp
jg
jae
inc
add
pop
mov
ficom
mov
fucomi
mov
xchg
add
repnz
jp
fstp
scas
dec
call
cld
ror
dec
sub
dec
jmp
sub
jg
adc
ss
mov
fmul
mov
lds
fnstenv
sbb
fnsave
xor
das
out
jmp
adc
mov
dec
jmp
ss
mov
mov
sub
pop
xchg
stc
sbb
(bad)
loop
fistp
not
repnz
adc
jp
push
jle
dec
js
in
pop
inc
xor
push
push
jnp
repz
and
stc
xor
pop
lea
ss
ss
or
in
or
cdq
mov
call
fdiv
sahf
adc
xchg
push
dec
pop
retf
and
or
inc
out
push
adc
cmp
(bad)
cmp
mov
outs
sbb
fimul
sbb
ds
pop
xchg
mov
mov
aas
sbb
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
cmp
stos
inc
dec
inc
mov
(bad)
mov
call
rcl
jmp
(bad)
cld
xchg
inc
shr
mov
fsubr
ss
push
dec
mov
inc
(bad)
mov
dec
into
and
jmp
dec
ud0
addr16
mov
push
fstp
xchg
adc
into
inc
shr
sbb
jl
inc
dec
inc
mov
fsubrp
mov
idiv
inc
dec
(bad)
mov
pop
leave
clc
xor
iret
pop
inc
(bad)
mov
fild
inc
out
mov
fldpi
mov
push
loop
dec
dec
out
pop
(bad)
(bad)
inc
inc
jp
mov
push
ret
or
jns
ffree
cld
jbe
shr
jle
retf
fstp
jmp
shr
jb
jmp
rcl
jmp
cmps
ja
adc
enter
cmp
mov
sbb
jmp
push
mov
out
or
outs
stc
xor
add
adc
ss
add
aas
bound
or
dec
xor
aaa
out
jmp
pop
and
hlt
mov
(bad)
icebp
lock
aas
add
or
sbb
pop
call
aaa
cmc
pop
inc
xchg
mov
jp
aaa
cmc
pop
dec
push
not
push
div
sub
sbb
jb
call
dec
call
lock
in
mov
sbb
sbb
cmp
fist
in
fst
adc
inc
or
sbb
int3
inc
sbb
xor
sbb
out
push
cmps
pop
shl
inc
lock
pop
outs
sub
add
push
cmps
jmp
fwait
jbe
aaa
cmp
pop
cmc
xchg
and
and
adc
pop
mov
xor
scas
popa
in
adc
leave
or
sub
fisttp
or
push
fxch
imul
rcl
aas
jmp
int3
fistp
adc
adc
retf
adc
cmp
mov
push
push
es
or
cmps
xor
jp
jle
mov
sahf
adc
jno
ret
add
adc
jno
ret
leave
fmul
ret
add
adc
fmul
aad
jo
ret
stc
fmul
imul
add
pop
jno
ret
add
adc
shr
mov
push
sbb
adc
out
ret
sbb
add
cmp
xchg
ret
adc
pop
jno
fild
bound
ret
add
adc
das
ret
add
push
jno
jle
pop
mov
mov
mov
repnz
mov
pop
movs
(bad)
jo
cmp
or
adc
call
push
gs
sbb
(bad)
adc
out
mov
ret
aad
or
pushf
enter
cmp
mov
sbb
jp
icebp
inc
loop
cld
mov
add
mov
and
pop
cmps
push
(bad)
(bad)
mov
lds
add
xchg
and
adc
and
aas
call
dec
inc
jmp
mov
in
aaa
or
(bad)
jp
sbb
jnp
mov
(bad)
cmp
fiadd
int
aas
pop
mov
xchg
retf
ss
pop
add
jbe
ins
mov
in
pop
dec
jb
pop
jmp
pop
add
sbb
fist
adc
aaa
cmc
mov
shl
inc
(bad)
fnsave
mov
dec
es
ret
div
push
xor
mov
(bad)
sub
mov
cmc
stos
inc
fld
outs
inc
jb
scas
in
pop
stc
push
jo
inc
pop
inc
not
pop
mov
pop
dec
inc
jmp
adc
xor
sbb
adc
jne
push
sbb
retf
push
(bad)
push
aaa
adc
jo
pop
fdivr
jmp
add
mov
mov
shl
retf
or
lock
dec
mov
pop
ds
cmp
cmps
pop
mov
push
repnz
mov
ficom
xlat
pop
add
and
xchg
dec
stc
leave
cli
adc
idiv
sbb
addr16
fmul
pushf
pop
(bad)
push
sbb
pop
add
pop
inc
sbb
lea
xor
repnz
int3
fnstcw
pop
int3
fnstcw
pop
int3
fnstcw
pop
int3
push
mov
into
ss
rcr
stos
test
ds
int3
imul
cmp
pop
call
push
dec
call
and
dec
fcomp
out
lds
leavew
xor
ds
int3
fldcw
pop
int3
shr
dec
jg
cmp
fwait
std
push
test
xor
push
je
neg
dec
sbb
adc
ss
fnstenv
ret
pop
adc
adc
aad
push
in
fcom
pop
sbb
adc
jecxz
(bad)
sbb
cmp
adc
sbb
adc
addr16
ss
dec
call
and
shl
fisubr
imul
rcl
push
loopne
xor
or
mov
fisub
and
dec
ret
push
cmp
fwait
cmc
push
jns
mov
cmps
jecxz
push
jl
lds
dec
std
fnstcw
pop
int3
lds
int3
(bad)
fnstcw
pop
int3
dec
ds
iret
push
enter
pop
int3
pop
xor
push
dec
call
repnz
pusha
fldcw
pop
int3
outs
cs
loopne
retf
push
into
enter
rcr
jmp
jns
mov
fld
mov
cs
pop
mov
ret
inc
fild
xchg
sar
fcomp
sub
jns
push
int
stc
scas
xor
mov
bound
clc
das
test
or
jecxz
arpl
jmp
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
aaa
cmc
loope
test
pop
push
xor
fldenv
hlt
inc
cli
xchg
mov
inc
lock
call
add
or
xor
mov
pop
dec
dec
jns
mov
xor
sahf
and
adc
cmp
fist
retf
bnd
adc
mov
or
mov
ret
or
adc
cmc
mov
loope
mov
jmp
ss
pop
inc
cmp
lods
jmp
mov
xor
cmc
pop
or
(bad)
mov
fdiv
enter
(bad)
adc
fucomi
mov
(bad)
sbb
repnz
add
fidiv
std
adc
pop
xchg
(bad)
fbstp
(bad)
pop
das
out
in
inc
dec
fcom
rcl
clc
scas
or
ret
xor
int3
add
rcr
cmp
ret
pop
push
(bad)
repnz
outs
cmp
(bad)
std
aaa
add
inc
aaa
(bad)
sbb
repnz
retf
add
dec
jecxz
cdq
mulps
add
ss
jmp
add
fistp
or
out
add
add
cdq
neg
dec
int3
pop
cmp
push
inc
(bad)
push
sbb
out
cmc
mov
xchg
out
in
or
fdivr
adc
retf
or
std
and
xchg
xor
jnp
mov
dec
cmp
(bad)
bnd
addr16
pop
adc
push
mov
cli
iret
pop
or
pop
or
pop
or
pop
fst
jg
stos
xor
dec
fwait
iret
or
pop
mov
mov
push
mov
sbb
or
push
or
pop
int3
xlat
jne
call
pop
cs
mov
or
mov
push
mov
pop
or
repnz
mov
mov
push
sub
fcom
cmps
inc
jne
jo
stos
jae
fdivr
lods
cmps
stos
addr16
or
pop
stos
test
retf
movs
mul
push
pop
lea
pop
sub
fdivr
xchg
cmps
repz
or
add
push
fwait
push
sub
mov
lds
movs
retf
dec
or
pop
imul
push
push
or
sbb
push
mov
mov
push
and
or
push
or
mov
not
lods
sti
mov
push
and
push
or
or
lea
sub
mov
cmc
push
push
stos
stos
daa
pop
or
pop
sbb
bnd
stos
pop
and
pop
imul
mov
hlt
push
cmp
test
add
cmps
push
push
int3
repnz
lea
push
jae
pop
test
arpl
pop
lea
stos
pop
or
call
or
add
call
jge
pop
test
dec
movs
pop
stos
jae
xor
(bad)
sti
mov
push
and
cli
push
jo
pop
test
push
jge
lea
add
push
jmp
push
pop
jle
inc
dec
movs
test
jae
or
(bad)
repz
(bad)
sti
not
pop
pop
sub
dec
fcom
js
cmp
pop
test
fistp
pop
retf
dec
hlt
test
call
cli
sbb
ret
or
pop
sub
retf
mov
pop
push
mov
inc
lahf
fild
inc
sbb
push
and
push
pop
sbb
push
xlat
lds
pop
add
pusha
in
push
sub
sbb
stos
or
sub
test
out
inc
or
ss
or
dec
lahf
or
cwde
jmp
pop
lea
hlt
cmc
cmps
test
stos
add
pop
(bad)
sti
test
je
and
cmp
cmc
mov
sbb
xlat
push
push
data16
enter
aam
inc
xchg
cld
cld
mov
leave
add
adc
pop
cmps
push
(bad)
mov
adc
aad
stos
xor
(bad)
int3
adc
iret
jp
xchg
std
ret
call
sub
out
aaa
cmc
mov
clc
pop
mov
add
mov
sti
inc
cmp
dec
mov
xchg
push
mov
xor
cmc
sbb
cmp
mov
add
pop
aaa
sbb
in
or
add
cmc
mov
scas
push
adc
adc
mov
jecxz
test
dec
pop
leave
push
cmp
sub
lods
std
mov
das
sbb
sbb
cmp
jmp
cmp
daa
sbb
test
icebp
in
pop
in
std
push
mov
es
mov
xor
adc
xchg
sub
sbb
rcr
mov
xor
xor
cmp
cmps
xchg
sbb
add
push
mov
adc
enter
jp
imul
aas
hlt
sbb
push
cmps
repnz
ja
inc
(bad)
pop
(bad)
stc
dec
sbb
std
sbb
test
jmp
dec
into
aam
xchg
xor
push
retf
dec
retf
adc
fldcw
mov
(bad)
pop
ret
sbb
and
or
pop
fidivr
(bad)
cdq
(bad)
add
outs
cld
pop
cmp
popa
retf
cmp
and
cmp
and
cmp
xor
retf
(bad)
xchg
and
cmp
mov
cs
cmp
fild
cmp
retf
sbb
and
push
and
add
pop
sub
mov
fs
xor
(bad)
lahf
rol
cwde
mov
test
mov
add
dec
fnsave
shl
les
call
ins
icebp
mov
ds
adc
add
retf
sub
cmps
(bad)
cmp
in
ret
and
add
or
xchg
retf
stos
xchg
cs
mov
and
cmp
aam
in
fwait
and
in
mov
and
cmc
aad
xor
fidiv
xchg
push
wrmsr
xchg
push
adc
sub
xor
adc
ins
fld
sub
adc
jbe
fwait
jmp
adc
adc
cmp
stc
cmp
add
xor
fadd
out
mov
jecxz
inc
mov
ret
or
jmp
xlat
popf
enter
aas
(bad)
mov
rcr
xor
les
xor
cmc
mov
and
sbb
mov
xchg
cmc
push
dec
fisttp
rcl
ss
leave
hlt
mov
fld
aad
bnd
xchg
pop
pop
ss
jp
mov
mov
cmp
retf
mov
dec
jmp
xor
iret
xor
add
out
cmps
sbb
xchg
xchg
mov
xor
inc
sbb
cmp
jae
out
and
shr
ss
mov
cmp
cmps
adc
call
xor
sbb
adc
inc
sub
push
scas
add
adc
fwait
dec
adc
aaa
cmc
mov
loop
pop
jmp
mov
sub
cmp
int3
sbb
xor
jae
dec
push
sbb
(bad)
mov
inc
push
mov
ds
dec
repnz
or
cwde
mov
push
lock
jecxz
pop
popa
inc
xor
les
sbb
push
push
aaa
cmc
mov
or
stc
dec
call
pop
or
mov
dec
loop
push
adc
ror
inc
dec
mov
sbb
adc
mov
jl
fdivr
out
into
bnd
ja
mov
sti
sbb
jmp
gs
mov
mov
mov
mov
mov
xchg
shl
jmp
stos
xor
shl
jmp
rcl
daa
mov
shl
fucomip
cmp
icebp
and
mov
mov
and
shl
das
mov
mov
es
dec
jp
ror
cld
repz
mov
mov
js
mov
nop
xchg
push
mov
mov
es
and
pop
in
mov
icebp
mov
es
sub
mov
adc
daa
mov
es
dec
jo
xchg
popa
sub
icebp
dec
jo
retf
popa
sub
lock
jge
jno
mov
ss
mov
mov
mov
out
out
cmps
hlt
push
shl
inc
dec
mov
fnstenv
sar
ss
mov
dec
xchg
inc
fst
sub
test
popa
test
das
mov
rcl
in
cs
fst
mov
xor
sub
fnstenv
jg
es
mov
mov
mov
mov
mov
shl
das
push
iret
mov
es
shl
das
outs
mul
sub
jmp
mov
mov
push
push
dec
cld
and
mov
mov
popa
es
shl
lods
rcr
daa
mov
sar
loop
fdiv
or
dec
adc
shl
add
jmp
mov
mov
pushf
push
fwait
cmp
scas
pop
sub
cmps
or
pop
sub
std
lods
pop
mov
or
cmp
dec
pop
xchg
(bad)
stos
into
xchg
icebp
xchg
call
cmc
test
into
retf
imul
cmp
xlat
retf
mov
cmp
dec
push
xchg
(bad)
stos
into
(bad)
or
push
call
xchg
cmps
mov
into
xor
es
enter
shl
mov
mov
mov
test
stos
shl
retf
xchg
(bad)
mov
mov
sbb
inc
stos
xor
mov
and
push
mov
mov
sub
jmp
mov
mov
lea
mov
(bad)
mov
and
mov
fisub
(bad)
das
outs
fiadd
fidiv
aaa
pop
shl
fnstenv
shl
es
mov
mov
mov
mov
mov
call
xor
daa
mov
and
mov
xchg
nop
xchg
xor
inc
fcom
stos
xor
shl
ror
mov
pop
mov
shl
add
(bad)
pusha
jle
fnstenv
or
aaa
mov
mov
rcr
daa
in
xlat
push
fstp
shl
mov
push
icebp
daa
das
dec
mov
iret
mov
and
shl
mov
(bad)
mov
mov
push
stos
xor
mov
cmps
sti
sbb
frstor
clc
rcr
daa
mov
shl
repz
push
ins
cmps
es
cmp
sar
es
mov
mov
mov
mov
mov
push
mul
cmps
(bad)
es
mov
push
test
(bad)
das
push
into
mov
es
shl
das
mov
(bad)
inc
xchg
mov
shl
shl
mov
fstp
xlat
mov
push
and
pop
mov
push
iret
mov
and
shl
mov
(bad)
mov
mov
push
stos
xor
mov
cmps
sti
sbb
frstor
adc
call
es
cmc
shl
repz
rcl
sbb
mov
mov
daa
sar
mov
shl
or
(bad)
mov
mov
push
stos
xor
mov
cmps
sti
sbb
frstor
and
call
es
push
shl
repz
rcl
std
cmps
es
cmp
sar
cmovg
sahf
sbb
test
daa
mov
movs
es
adc
xor
daa
mov
shl
adc
mov
fnstcw
rcl
sub
jecxz
inc
data16
push
adc
call
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
xor
cmc
mov
arpl
pop
sbb
out
jmp
sbb
or
idiv
xor
or
xor
ret
sub
jecxz
push
call
aaa
cmc
pop
in
pop
fadd
(bad)
push
or
xchg
cmp
sbb
pop
cdq
inc
or
ret
add
dec
xor
fistp
sbb
out
in
inc
pop
(bad)
loop
jmp
pop
idiv
scas
mov
and
pop
int
or
out
pop
push
xchg
out
adc
xor
sub
mov
out
pop
or
(bad)
stos
call
aaa
cmc
adc
aaa
cmc
mov
jle
rol
fwait
xchg
mov
out
xchg
nop
(bad)
repnz
and
scas
mov
jmp
aad
jmp
xor
(bad)
(bad)
shr
add
pop
es
sub
lock
in
mov
sbb
in
cmp
mov
or
mov
retf
or
mov
pop
sub
das
pop
bnd
add
and
adc
cmp
cmps
or
pop
pop
adc
leave
cli
push
nop
ret
in
ror
pop
mov
out
ds
imul
pop
inc
jp
inc
sbb
pop
add
(bad)
pop
mov
adc
les
xchg
jno
xchg
jno
xchg
jno
xchg
jno
xchg
jno
xchg
jno
xchg
jno
xchg
jno
xchg
ja
mov
xor
ficomp
out
sub
das
or
xor
(bad)
jmp
jl
mov
xor
repz
xchg
jo
mov
sahf
xchg
jno
aad
not
aaa
ficomp
mov
sahf
push
lds
shl
bound
call
pop
jmp
(bad)
xchg
sub
les
stos
xor
(bad)
xor
xchg
les
jp
in
jb
add
dec
push
and
sahf
push
lds
jle
mov
cs
jnp
push
lds
sahf
xchg
xor
sar
xlat
xchg
jo
and
int3
fs
lock
test
push
int3
jo
xchg
xchg
out
jo
arpl
movs
into
mov
and
jg
adc
lock
sub
mov
les
jp
jno
rcl
and
and
xchg
xchg
ja
lea
test
ja
lea
fs
shl
jno
jns
jecxz
xchg
rcr
jns
cmps
outs
mov
ins
mov
cmp
mov
js
(bad)
shl
ins
mov
mov
es
js
jns
xchg
dec
mov
xor
retf
or
out
arpl
in
arpl
pop
jmp
inc
es
cld
mov
pop
jge
jmp
cmps
push
adc
push
add
add
mov
cmp
jmp
jnp
cmp
pop
stc
sub
cdq
pusha
push
les
push
mov
loope
and
call
movs
loope
sbb
retf
jmp
jmp
out
push
cmp
ss
movs
data16
shl
xor
sub
test
hlt
pop
dec
push
xor
div
add
pop
push
xor
outs
daa
jmp
into
in
pop
retf
out
in
xchg
inc
adc
push
mov
push
sbb
popa
pop
jp
fldenv
in
pop
ss
shl
inc
out
pop
out
stos
shl
popa
stc
cmp
mov
pop
das
rcr
fild
sbb
cmc
adc
retf
or
shl
inc
or
rcr
pop
xchg
sbb
inc
add
hlt
pop
dec
out
mov
or
xchg
mov
mov
aad
adc
retf
or
inc
aad
imul
sbb
fld
ins
sub
pop
ficomp
std
inc
imul
lds
inc
les
push
les
push
les
push
les
push
les
push
les
push
les
push
les
push
les
push
lds
push
lds
push
lds
pop
lds
jnp
pop
imul
imul
push
lds
imul
imul
adc
lds
pop
lds
jnp
pop
imul
imul
push
cmp
jb
(bad)
repz
mov
call
push
pusha
inc
cwde
pop
out
mov
mov
sbb
daa
sub
mov
arpl
leave
add
push
mov
jge
lds
out
les
retf
pop
push
xchg
stc
cmp
retf
fs
pusha
inc
les
sub
stc
mov
mov
les
xchg
nop
lock
cmps
inc
xchg
pop
sub
les
jl
ror
pushf
mov
ror
pushf
mov
ret
pop
movs
vmaxsd
(bad)
stc
mov
out
push
push
les
sub
stc
mov
mov
les
xchg
nop
lock
inc
inc
xchg
pop
sub
les
jl
ror
pushf
mov
ror
pushf
mov
ret
pop
movs
rcl
out
(bad)
stc
mov
out
add
les
push
adc
push
xchg
stc
cmp
jecxz
add
cmp
dec
into
push
ret
add
xchg
mov
(bad)
sti
leave
inc
push
add
xchg
mov
xchg
sti
xchg
mov
(bad)
test
mov
pop
stc
xchg
mov
shl
les
pop
push
xchg
xchg
mov
xchg
sti
xchg
mov
adc
mov
movs
arpl
mov
movs
call
arpl
enter
and
popa
inc
les
sub
rol
fmul
add
popa
imul
pushf
mov
loope
xor
iret
inc
inc
and
dec
xchg
mov
mov
lds
cmp
out
(bad)
stc
mov
mov
(bad)
addr16
(bad)
je
dec
push
or
xchg
mov
xchg
(bad)
fmul
push
mov
int
jb
aad
jae
fucom
jae
(bad)
xchg
retf
inc
adc
push
lds
cmp
out
lds
imul
stc
mov
out
les
ret
adc
xchg
pop
sub
shr
xchg
inc
xchg
adc
inc
js
xchg
nop
cmp
inc
into
push
xchg
adc
push
retf
push
imul
jmp
ins
push
ret
push
ret
pop
xchg
nop
cmp
inc
into
push
push
adc
pop
mov
add
dec
int
pop
mov
add
push
or
sahf
mov
add
arpl
adc
mov
xor
xchg
enter
inc
adc
jbe
fwait
mov
inc
into
cmp
mov
test
jmp
cmps
out
xchg
mov
sti
or
leave
(bad)
push
mov
dec
push
test
mov
fistp
jnp
xchg
inc
pop
sbb
out
push
in
add
(bad)
xchg
mov
inc
rcr
push
xchg
push
or
sar
adc
rcr
mov
jnp
cmps
cmc
mov
test
(bad)
mov
ret
stc
and
inc
sbb
cmp
mov
pop
adc
pop
inc
repnz
pop
cli
nop
jmp
mov
xchg
or
call
jmp
dec
push
daa
push
call
lods
cwde
push
pop
sub
sub
cli
inc
fistp
pop
sub
or
leave
push
push
dec
cs
push
jmp
hlt
out
pop
push
(bad)
out
xlat
cmp
pop
lods
cdq
add
adc
retf
adc
cmp
mov
sbb
inc
ss
mov
mov
mov
outs
push
pop
(bad)
(bad)
adc
aam
jg
mov
call
scas
daa
dec
push
mov
inc
call
out
inc
call
mov
xor
out
sub
lahf
ss
xchg
mov
cmp
mov
mov
pop
xlat
cdq
mov
inc
xlat
fwait
xchg
ins
not
ds
sbb
push
das
outs
ja
not
or
mov
fwait
cmp
push
mov
(bad)
xchg
push
iret
cwde
xchg
inc
icebp
cdq
jp
dec
cmp
cwde
add
iret
cwde
pop
inc
icebp
cdq
jp
push
cwde
push
push
push
mov
push
cmp
push
mov
ret
ret
hlt
xor
xchg
push
sbb
neg
mov
xchg
push
push
stc
pusha
stos
sub
sub
outs
push
mov
sub
outs
push
mov
lds
cli
movs
mov
out
pop
ss
cli
xchg
das
fsubrp
sbb
xchg
out
cmp
lods
add
mov
not
cmp
je
retf
or
jmp
pop
and
hlt
mov
dec
lock
cwde
out
pop
jg
pop
add
jbe
sbb
add
xchg
not
aaa
(bad)
loop
cmp
bnd
mov
aad
call
jns
pop
scas
jp
sub
(bad)
ret
or
add
cmc
mov
test
jae
sbb
sbb
fstp
lods
adc
in
jmp
dec
sub
sub
setno
sbb
cmp
add
bound
push
pop
shl
cmp
das
dec
adc
pop
and
popa
in
mov
adc
push
pop
cmp
sbb
int3
stos
scas
adc
sbb
mov
pop
inc
scas
mov
stc
(bad)
adc
cmp
mov
jns
push
sbb
xchg
xchg
mov
ss
push
add
or
lock
mov
ffree
sti
push
shr
fisub
push
push
or
call
adc
fcmovne
mov
aaa
mov
pop
dec
cmps
ficomp
sbb
(bad)
sbb
cmp
mov
dec
push
pop
jne
adc
mov
das
add
(bad)
pop
add
out
inc
pop
jmp
adc
cmp
cmps
adc
retf
ins
fistp
push
(bad)
push
jbe
retf
push
sub
mov
rcr
movs
pusha
push
pop
popf
push
dec
add
retf
scas
mov
inc
lods
lea
mov
jne
inc
mov
lods
in
js
adc
push
mov
inc
dec
in
ja
mov
sbb
movs
inc
xor
mov
daa
leave
call
pop
mov
jmp
aas
sahf
test
cmc
mov
ret
mov
out
jbe
(bad)
push
ret
pushf
loop
pop
sbb
scas
retf
mov
sbb
fmul
jno
iret
xor
jmp
pop
dec
dec
sbb
cdq
div
adc
retf
or
sbb
clc
rcr
push
cmp
adc
pop
push
mov
push
adc
jne
mov
fisubr
gs
adc
and
sbb
out
cmps
mov
stc
pop
dec
mov
jmp
std
add
cmp
dec
call
xor
pop
pop
inc
xchg
pop
dec
pop
push
push
jmp
loope
test
jmp
mov
mov
std
or
sar
retf
inc
mov
stc
scas
cmp
ss
mov
inc
sbb
loope
add
loopne
outs
xchg
in
sbb
or
leave
or
sub
cmc
lods
adc
cmp
mov
mov
jecxz
cmc
not
in
or
fiadd
push
dec
ss
mov
jmp
fisttp
inc
shl
jnp
fwait
pop
dec
adc
es
dec
pop
cmp
dec
(bad)
fwait
outs
mov
cdq
data16
dec
jp
loope
cdq
je
mov
xchg
mov
push
dec
hlt
mov
xchg
rcr
gs
mov
xchg
add
fs
add
xchg
adc
je
mov
movs
push
cmp
cld
clc
in
cdq
test
stc
mov
mov
stc
cli
pop
loopne
clc
mov
(bad)
mov
aam
bound
ds
test
or
icebp
inc
ficom
push
and
pop
cmps
out
pop
sahf
mov
stc
sahf
ins
ja
sbb
and
adc
loop
xchg
xchg
add
jmp
push
ret
push
jg
push
adc
or
retf
test
or
xor
ret
add
cmc
mov
cmp
lods
jmp
(bad)
in
pop
push
jnp
loop
jmp
adc
cdq
fnstsw
es
push
sub
mov
xchg
mov
(bad)
lahf
out
pop
mov
xchg
out
loopne
add
adc
jmp
jg
xor
pop
in
ret
shl
inc
lock
(bad)
(bad)
shl
popa
in
(bad)
test
repz
pop
out
enter
out
inc
out
js
or
sar
add
xor
push
add
mov
in
pop
loop
nop
out
inc
retf
imul
(bad)
push
dec
ss
mov
inc
or
fst
or
jmp
mov
or
cdq
xchg
pop
inc
push
aad
pop
jle
jae
and
mov
pop
jge
loope
aas
outs
aas
xor
outs
or
mov
cdq
fisttp
sbb
sti
ret
(bad)
fwait
jne
outs
(bad)
sbb
fwait
inc
cdq
outs
xchg
ins
mov
mov
sbb
retf
(bad)
gs
(bad)
mov
ins
push
mov
mov
aam
outs
or
loop
sbb
mov
retf
mov
inc
mov
retf
mov
int
mov
sahf
sbb
dec
mov
mov
retf
ret
jmp
pop
cdq
fbstp
inc
xor
mov
aad
sti
ret
sti
mov
retf
mov
gs
mov
sahf
add
xor
mov
inc
sub
mov
in
jmp
push
(bad)
out
aad
mov
inc
xor
adc
cmps
out
inc
xor
mov
xor
ret
ja
pushf
mov
fbld
loope
xor
vfnmsub231sd
jno
scas
retf
repz
lea
sti
(bad)
gs
scas
ins
mov
jmp
jmp
mov
scas
inc
mov
retf
mov
jmp
daa
sahf
pop
xchg
mov
or
repz
push
jge
call
rcr
aad
sti
push
pop
xor
fisttp
aad
rol
inc
stc
sti
inc
sbb
movs
sti
push
cmp
daa
sahf
pop
xchg
mov
or
rol
inc
mov
pop
mov
(bad)
jecxz
or
mov
xlat
xchg
sbb
mov
shl
ins
in
inc
jne
scas
(bad)
xchg
xchg
mov
xchg
mov
ret
outs
dec
sbb
mov
ficom
cmps
sahf
jno
sti
sbb
xchg
cmps
out
inc
sub
lds
cmps
sahf
xor
rol
inc
sub
ja
add
loope
or
and
sbb
(bad)
out
aad
mov
ficomp
xchg
xlat
mov
pop
loope
mov
cwde
sti
push
push
and
sti
dec
sbb
imul
loope
mov
das
ret
sti
mov
pop
inc
stc
pop
mov
std
fistp
mov
jp
imul
sti
mov
rcr
inc
xchg
(bad)
mov
inc
stc
pop
mov
std
fistp
shr
jb
add
sti
sub
(bad)
mov
dec
stc
pop
mov
(bad)
jecxz
or
mov
xlat
xchg
jno
outs
adc
push
jno
mov
push
xor
retf
mov
jno
mov
aad
sti
push
int
sti
fcmovbe
(bad)
fistp
inc
mov
xor
sbb
cmps
push
aad
dec
sbb
fbstp
enter
push
cdq
rol
aad
jecxz
add
jns
ret
dec
add
mov
jmp
ins
adc
iret
ret
dec
jno
cmps
mov
inc
jns
ret
dec
add
mov
(bad)
push
add
xor
ret
xlat
xchg
jge
push
adc
jecxz
inc
popa
sti
mov
xor
sub
imul
jecxz
imul
sti
fiadd
retf
mov
sbb
and
test
sti
mov
gs
scas
popa
mov
outs
pop
pop
stc
aas
scas
add
mov
push
ins
loope
sahf
sbb
mov
mov
xor
fstp
aad
sti
push
shl
aad
sti
xchg
xor
fstp
aad
sti
push
inc
cmp
mov
aad
sti
push
add
(bad)
jne
sti
pop
inc
loope
mov
sub
fiadd
sti
mov
jns
ret
dec
add
mov
mov
fiadd
sub
add
cmp
outs
pop
or
lea
mov
jno
ret
out
inc
sub
arpl
add
jns
ret
jmp
jno
loop
in
mov
mov
push
aad
fist
jne
sahf
popa
cmp
sti
mov
xchg
jne
push
inc
mov
arpl
sbb
jne
push
push
mov
jecxz
ins
and
jecxz
mov
loop
inc
mov
jg
or
cmps
mov
jecxz
sbb
jle
xor
cmps
mov
or
jb
ins
or
xlat
xchg
ins
sub
ins
mov
rcl
push
sub
imul
mov
ret
ror
aad
cmps
push
jno
sti
xchg
sbb
and
jnp
inc
sub
mov
xlat
call
cmp
mov
xlat
call
pop
sahf
inc
in
xchg
sbb
lods
xlat
(bad)
loope
mov
mov
sti
or
mov
stos
push
mov
sti
push
push
or
retf
call
mov
mov
cdq
retf
retf
jmp
adc
stc
mov
imul
retf
mov
jne
mov
xchg
mov
jne
outs
inc
jno
mov
or
and
inc
in
xchg
inc
sub
ja
imul
xlat
call
inc
sahf
sbb
mov
sti
or
mov
fcmovu
stc
sti
or
repz
ins
imul
sbb
mov
aad
mov
mov
dec
sub
inc
jne
mov
xchg
mov
aad
jecxz
add
ins
mov
(bad)
aad
repz
xchg
cmp
retf
mov
sub
add
mov
cmps
scas
inc
in
inc
jno
arpl
push
loope
sbb
stc
jmp
inc
cdq
rol
adc
mov
outs
inc
push
stc
arpl
aad
repz
mov
fisubr
xlat
call
loop
xor
stc
cmps
mov
stc
imul
xchg
jecxz
icebp
stc
sti
call
jp
add
sub
retf
mov
jmp
aad
xlat
push
sbb
lods
jecxz
shl
or
sti
mov
sar
sahf
pop
leave
xor
aad
retf
add
mov
inc
sub
fldcw
fcmovne
gs
retf
add
jmp
push
and
sti
push
add
(bad)
out
cwde
cmp
pop
mov
push
adc
jecxz
lds
scas
inc
in
sbb
sti
fiadd
out
enter
pop
mov
sti
xchg
mov
sar
test
iret
or
mov
mov
sahf
imul
mov
ret
mov
fisub
arpl
inc
mov
mov
ret
cmps
sahf
icebp
stc
sti
sbb
and
add
and
ficomp
fild
gs
retf
mov
mov
mov
xchg
scas
fiadd
outs
inc
pop
stc
and
sbb
jg
adc
stc
rol
aad
jecxz
jmp
jmp
mov
inc
sub
and
mov
es
sbb
inc
sahf
add
jge
sahf
inc
adc
mov
inc
stc
cmp
popa
loope
mov
mov
sti
mov
and
repz
sbb
mov
sti
ret
jecxz
inc
sub
sbb
icebp
retf
xchg
lods
cmps
fidiv
cmps
rcl
movs
sti
push
sbb
and
inc
or
mov
cdq
sti
or
gs
ret
jecxz
(bad)
mov
inc
stc
jecxz
cwde
loope
or
mov
scas
push
mov
mov
xchg
sbb
gs
ret
jecxz
cmc
stc
cmps
mov
aad
cmps
push
imul
xlat
call
fild
inc
sub
imul
fild
sbb
mov
outs
xchg
(bad)
out
inc
xchg
jecxz
inc
stc
outs
xchg
sbb
iret
mov
stc
out
aad
fistp
imul
xlat
sahf
imul
mov
cmps
inc
stc
outs
(bad)
sbb
fistp
imul
xlat
or
rol
jns
rol
add
lods
cmps
fiadd
outs
ret
je
mov
gs
shl
jno
outs
mov
pop
sub
xchg
mov
sti
fisubr
sti
ret
fistp
loopne
fs
fld
xlat
sub
or
cmp
sub
(bad)
adc
aad
sub
jno
loop
call
or
fnstsw
fisttp
sub
aad
inc
add
test
add
cmps
cmps
std
es
fild
and
cld
ss
retf
outs
cmps
std
es
fild
and
cld
ss
jmp
cwde
fild
and
std
ss
push
outs
and
std
es
fild
and
std
ss
ss
and
std
es
fild
and
std
ss
outs
out
and
std
es
fild
and
std
ds
xchg
and
not
loopne
add
movs
test
ret
sub
not
cld
inc
add
jb
int
and
aam
mov
cs
lods
arpl
aam
lods
das
jbe
push
pop
retf
xlat
xchg
hlt
fidivr
outs
or
jb
cmp
fs
inc
add
pop
adc
or
cmp
stos
pop
je
or
out
mov
das
xchg
into
shr
out
cli
pop
in
test
in
cld
call
mov
pop
in
lods
aam
in
mov
pop
in
mov
aam
in
dec
rcr
or
pop
in
test
pop
in
aam
pop
in
and
pop
jmp
xor
pop
in
ins
aad
in
adc
in
inc
inc
pop
in
int3
xlat
xor
add
in
and
pop
in
xchg
loopne
in
test
push
in
mov
in
push
xchg
pop
in
nop
mov
push
in
sub
push
in
mov
fcomp
cmp
pop
in
add
pop
in
mov
pop
in
mov
pop
in
loopne
pop
in
xor
pop
in
xor
aas
in
dec
mov
push
in
sar
in
xchg
fst
push
push
in
push
mov
xchg
jecxz
jmp
aam
pop
in
dec
pop
pop
in
pop
test
sub
pop
in
mov
pop
in
cld
movs
pop
in
(bad)
out
pop
in
cmp
pop
in
(bad)
icebp
pop
in
mov
pop
in
js
ds
jo
pop
in
jo
pop
in
in
pop
in
dec
mov
pop
in
les
in
loopne
pop
in
hlt
repnz
in
je
pop
in
mov
out
in
or
xchg
je
out
test
out
xchg
in
jle
in
pop
adc
cmp
shr
pop
xchg
fucomp
ins
dec
fucomp
sbb
fucomip
sbb
in
mov
fcmovnu
in
dec
std
shr
nop
pusha
fucomip
mov
push
fucomip
sbb
in
lock
shr
fmul
shr
nop
mov
in
sbb
shr
je
aad
push
add
in
mov
shr
jo
shr
jo
shr
sub
pop
in
je
fsubr
sbb
shr
lock
fucomip
dec
inc
lods
in
test
shr
ror
in
int3
mov
in
or
mul
mov
dec
loope
int3
scas
loope
xlat
scas
loope
enter
out
loope
mov
loope
out
lods
loope
mov
lods
loope
add
loope
(bad)
scas
loope
std
lods
loope
add
loope
iret
and
lods
and
mov
loope
xchg
and
out
loope
scas
test
and
and
loopne
loope
pushf
xchg
inc
jno
loope
pushf
(bad)
loope
push
and
outs
mov
pusha
adc
loope
adc
loope
leave
and
mov
loope
dec
jnp
cmp
fadd
addr16
sbb
in
addr16
or
rcl
addr16
cmps
data16
push
data16
pop
addr16
sbb
test
addr16
mov
addr16
pop
addr16
jo
loope
mov
mov
push
mov
push
mov
aas
hlt
adc
loopne
sub
jno
xor
movs
inc
xor
mov
and
sbb
add
sub
pop
pop
mov
adc
in
fistp
ret
cmc
mov
stos
and
mov
mov
into
mov
popa
std
shl
sbb
dec
ja
adc
loope
xchg
ror
js
in
pop
inc
inc
xor
je
sbb
hlt
into
sbb
sub
sub
cmc
pop
inc
cmps
pop
push
mov
pop
inc
xor
imul
add
inc
push
fidiv
mov
ss
mov
fwait
repnz
inc
push
push
inc
mov
mov
or
push
arpl
cdq
push
jmp
test
jmp
xor
xchg
(bad)
mov
aaa
pop
pop
jmp
cmps
push
mov
mov
jmp
xchg
mov
out
pop
cmp
shl
mov
fmul
lock
pop
mov
adc
ficomp
pop
into
push
push
adc
or
retf
or
push
mov
pop
inc
push
leave
pop
mov
pop
inc
fimul
inc
in
mov
rcr
enter
retf
or
das
out
out
out
cmps
pop
xchg
out
dec
mov
or
xor
ret
lss
out
cmps
cmp
fdiv
shr
push
mov
test
inc
add
push
movs
cwde
mov
test
inc
jo
push
mov
je
test
ror
cli
mov
lea
mov
inc
jo
mov
xchg
lods
push
gs
dec
sub
pop
fwait
shr
pop
fwait
out
inc
mov
test
inc
mov
popf
inc
and
mov
inc
int3
sahf
test
inc
jae
mov
inc
jo
dec
push
cmp
wbinvd
pop
mov
test
loopne
xor
inc
mov
test
dec
jae
xchg
mov
or
imul
inc
mov
aas
xchg
movs
mov
mov
test
inc
lahf
inc
cmp
lahf
add
push
in
clc
fbstp
stos
and
inc
test
ins
call
inc
mov
jno
data16
inc
mov
test
inc
test
xchg
mov
xor
or
pop
xchg
push
lea
aaa
xchg
jge
adc
inc
xchg
inc
mov
fsub
test
stos
inc
xchg
aam
inc
mov
test
mov
(bad)
xchg
sbb
mov
xchg
pop
aaa
fnstsw
jbe
inc
jg
mov
(bad)
test
add
les
mov
mov
lock
fist
mov
cmp
dec
lods
adc
gs
push
test
lea
cli
repnz
dec
(bad)
retf
mov
loopne
xchg
push
dec
mov
jle
or
jge
dec
(bad)
retf
mov
loope
retf
jae
cs
fistp
jmp
(bad)
jle
pop
leave
cli
repnz
dec
(bad)
retf
mov
loope
retf
jb
push
mov
ss
cmp
sbb
jae
mov
inc
jo
push
mov
lea
test
inc
mov
xchg
push
pop
xchg
pop
sbb
mov
adc
xchg
and
fist
fisttp
inc
mov
test
imul
dec
mov
call
inc
mov
push
jmp
les
push
and
fbstp
push
pop
xor
inc
mov
test
inc
ins
xor
inc
inc
mov
push
mov
jmp
stos
inc
mov
inc
inc
mov
push
mov
scas
and
fild
sbb
inc
mov
inc
cs
jle
dec
mov
test
inc
test
test
aaa
push
stos
arpl
ret
xchg
inc
push
mov
test
loopne
daa
scas
inc
test
test
aaa
push
stos
arpl
push
mov
mov
shr
fcmove
xchg
jno
mov
inc
int3
aaa
cmps
in
js
dec
pop
mov
clc
mov
xchg
mov
aaa
test
inc
sub
repnz
mov
dec
pop
mov
aaa
test
inc
sub
int3
inc
mov
add
sbb
js
push
and
sbb
inc
jo
loop
mov
push
out
nop
sbb
inc
jo
inc
inc
mov
or
leave
push
call
xchg
xchg
aad
mov
mov
dec
mov
movs
iret
ds
inc
mov
xchg
and
stos
pop
fidiv
inc
test
mov
push
pusha
sub
or
fistp
nop
(bad)
aaa
test
inc
mov
inc
inc
mov
push
mov
out
cmp
inc
mov
movs
pusha
das
add
aas
inc
cs
jle
dec
mov
test
inc
test
test
aaa
push
stos
arpl
add
aaa
shr
ficomp
loope
test
int3
aaa
movs
js
push
and
sbb
inc
jo
mov
dec
mov
js
mov
sbb
inc
jo
add
xchg
mov
mov
test
push
shr
inc
lods
sub
js
and
mov
call
push
ins
cmp
loopne
ds
inc
(bad)
fimul
arpl
cmps
and
adc
adc
cmp
mov
xor
inc
mov
mov
rcl
inc
aas
pop
mov
cmp
push
lea
outs
pop
rcr
lea
sbb
mov
mov
ds
inc
mov
mov
sar
mov
sbb
pop
mov
mov
test
inc
mov
stos
push
sbb
test
dec
jle
mov
pop
out
push
sbb
aaa
mov
pop
cdq
dec
sahf
cmps
cmp
lds
jbe
movs
inc
and
xchg
cdq
xlat
lods
sbb
aaa
push
push
sbb
ja
test
lods
or
inc
mov
mov
cdq
dec
pop
cmps
scas
(bad)
stos
movs
les
mov
fdiv
mov
push
(bad)
scas
ins
push
push
sbb
retf
pop
rcr
cli
pop
and
pop
fwait
xchg
test
lods
dec
arpl
lods
popa
(bad)
das
jle
mov
and
inc
mov
pop
shl
cmp
adc
push
mov
xacquire
mov
shr
push
xchg
fstp
mov
lock
mov
fnstsw
enter
xchg
or
sub
mov
cmp
pusha
add
outs
mov
repz
and
pop
fwait
xchg
inc
add
ins
ficom
adc
das
and
mov
cmps
mov
sub
mov
in
adc
and
inc
mov
std
adc
mov
cmp
pusha
fs
inc
mov
scas
shr
jo
inc
mov
jg
or
sub
pop
pop
sbb
sub
pop
scas
cmp
mov
movs
jbe
aaa
fistp
fild
push
or
jecxz
mov
xchg
gs
mov
sbb
and
dec
mov
pop
adc
aaa
enter
xchg
(bad)
shl
or
push
(bad)
xchg
sub
outs
pop
(bad)
test
inc
push
sbb
pop
lahf
cmp
pop
mov
ins
hlt
or
pop
cmp
outs
scas
js
das
inc
jg
mov
aaa
mov
test
inc
push
imul
mov
adc
mov
adc
add
ins
sub
dec
mov
cmps
outs
loop
dec
xlat
jbe
dec
(bad)
enter
xor
xchg
repz
jge
outs
xor
gs
js
mov
or
add
test
add
jecxz
int3
sbb
(bad)
(bad)
das
mov
gs
fadd
das
loop
xchg
call
ficom
inc
lea
mov
jge
sbb
movs
and
xor
xor
pop
xchg
sub
pop
and
mov
add
repz
test
xchg
push
out
(bad)
cmp
pop
mov
test
inc
xor
lods
ins
sub
cmp
mov
and
cmp
and
test
lahf
inc
cmp
inc
mov
cmps
mov
rcr
ror
adc
test
mov
mov
inc
popa
pop
cmp
xchg
adc
(bad)
loopne
mov
jbe
push
mov
dec
xchg
and
scas
in
mov
ins
pop
cmps
call
and
inc
mov
mov
inc
pop
mov
mov
inc
dec
and
xchg
mov
inc
sub
outs
mov
xchg
adc
je
pop
dec
push
mov
retf
jecxz
arpl
jmp
sbb
je
push
rcr
or
jmp
or
mov
jmp
out
int3
xor
cmp
adc
dec
ffreep
daa
pusha
retf
loope
sub
out
aaa
cmc
mov
sti
data16
fdiv
jnp
dec
cli
push
sbb
pop
sbb
xchg
pop
in
bnd
xchg
pushf
dec
pop
leave
fisttp
or
push
sub
cdq
div
(bad)
out
add
cmp
cmps
jmp
(bad)
test
(bad)
pop
xor
sbb
pop
inc
jp
inc
les
mov
mov
or
jmp
xchg
retf
enter
fsubr
ds
(bad)
push
jmp
cmp
push
mov
or
mov
xchg
mov
mov
adc
push
(bad)
fidivr
and
ret
pop
stos
push
dec
cli
(bad)
jmp
cmp
cmps
push
xchg
out
inc
or
dec
stc
add
(bad)
sbb
xor
cmc
pop
inc
xor
pop
or
out
enter
retf
int
(bad)
in
jmp
dec
retf
adc
cmp
(bad)
out
adc
xchg
mov
std
leave
cli
push
std
ret
push
cmp
adc
imul
add
xchg
fwait
adc
push
or
aam
ror
ins
or
fs
cld
jmp
cmp
test
mov
lock
add
leave
fimul
adc
dec
cmp
imul
push
addr16
push
dec
bswap
cmp
fidivr
dec
pop
sub
ja
pop
sub
test
test
dec
hlt
fst
stos
cmp
mov
mov
retf
test
jg
xchg
mov
or
fldcw
fucomi
ja
mov
fnstsw
dec
stc
retf
pop
add
or
test
cmp
adc
aad
aaa
cmp
in
stc
xchg
jmp
push
mov
add
aam
fcom
xchg
aam
sbb
les
out
inc
inc
aaa
xchg
jecxz
jg
dec
cld
mov
sbb
retf
sti
xlat
or
sub
and
mov
das
dec
dec
inc
push
jmp
repz
jge
mov
mov
gs
jle
mov
jb
int
xor
int
adc
scas
hlt
cmps
enter
cmp
in
pop
ret
mov
sbb
les
out
inc
inc
aaa
xchg
jecxz
jg
mov
rol
push
sbb
mov
sti
xlat
or
sub
and
mov
das
or
push
test
repz
jge
mov
mov
gs
jle
mov
sbb
sbb
aam
cmp
push
lods
cmp
in
pop
mov
mov
enter
inc
mov
cmp
inc
aaa
xchg
jecxz
jg
stos
dec
fs
dec
dec
cmp
xlat
or
sub
and
mov
das
xor
inc
push
imul
jmp
jge
mov
mov
gs
jle
mov
pop
cmps
in
aad
sbb
aam
cmp
push
lods
cmp
in
pop
mov
mov
sbb
les
out
inc
inc
aaa
xchg
jecxz
jg
pop
dec
mov
cmp
xlat
or
sub
and
mov
das
sub
inc
push
sub
dec
icebp
(bad)
repz
jge
mov
mov
gs
jle
mov
imul
int
adc
scas
hlt
mov
cmp
in
pop
iret
inc
dec
xor
mov
sbb
int3
inc
mov
cmp
xchg
jecxz
ja
pop
cld
mov
sbb
mov
or
and
and
mov
das
mov
inc
sub
fisttp
(bad)
repz
(bad)
mov
out
jle
mov
push
adc
xor
mov
out
inc
inc
aaa
xchg
jecxz
jg
arpl
leave
push
sbb
mov
(bad)
inc
cwde
sub
add
and
mov
dec
fcom
inc
xor
inc
stc
(bad)
fwait
jmp
jne
mov
mov
and
neg
shl
test
fdiv
jecxz
stos
enter
cmp
in
cmp
(bad)
mov
inc
mov
inc
aaa
xchg
jecxz
jg
(bad)
dec
push
sbb
pop
into
adc
dec
dec
cmp
xlat
inc
cwde
sub
add
and
mov
dec
adc
inc
xor
fild
(bad)
fwait
jmp
jne
mov
mov
and
test
es
jno
int
jb
jecxz
stos
enter
cmp
in
cmp
jl
and
(bad)
mov
inc
mov
inc
aaa
xchg
jecxz
jg
add
leave
push
sbb
out
adc
or
(bad)
inc
cwde
sub
add
and
mov
dec
je
inc
xor
fild
(bad)
fwait
jmp
jne
mov
mov
and
hlt
mov
jno
int
jb
jecxz
stos
enter
cmp
in
cmp
jecxz
loopne
(bad)
mov
inc
mov
jne
add
(bad)
lods
inc
xor
fcomp
(bad)
and
in
int
lea
or
inc
cmp
inc
mov
push
jnp
lahf
std
jmp
call
repnz
cmp
adc
popa
imul
fst
(bad)
mov
inc
mov
jne
add
(bad)
loopne
pop
aad
sbb
fcomp
(bad)
and
in
sub
hlt
inc
cmp
fwait
mov
xchg
in
xchg
adc
stos
dec
cmp
adc
popa
imul
mov
(bad)
mov
inc
mov
jne
add
ffreep
mov
imul
pop
fadd
hlt
jmp
addr16
mov
jno
sbb
shl
mov
jecxz
imul
je
inc
push
stc
fisttp
(bad)
repz
jae
add
test
pop
sbb
xlat
sub
add
pop
jo
fwait
sbb
mov
sbb
enter
jns
inc
pop
jg
jns
dec
cs
push
aam
sbb
shl
mov
jecxz
imul
inc
movs
inc
push
cmp
dec
mov
repz
jae
cmp
aas
sbb
cli
dec
cmp
add
and
in
sahf
fxch
pop
(bad)
or
int
push
enter
fcomp
in
sbb
xchg
and
cmp
lock
inc
out
xchg
mov
jae
mov
jmp
out
repnz
not
popa
cmp
push
and
loope
mov
sub
cdq
fild
(bad)
mov
add
jle
(bad)
cs
pop
(bad)
push
sbb
fcom
(bad)
hlt
out
fcomp
in
sbb
sub
adc
cmp
lock
inc
out
xchg
mov
jae
jecxz
jmp
mov
bnd
cmp
xlat
popa
cmp
push
and
loope
mov
int
inc
(bad)
inc
mov
push
mov
pop
jg
mov
out
xchg
jne
push
sbb
fcom
(bad)
hlt
out
fcomp
in
sbb
dec
inc
cli
adc
cmp
out
xchg
mov
jae
inc
std
jmp
lds
repnz
popa
cmp
push
and
loope
mov
jecxz
inc
sbb
inc
mov
push
mov
pop
jg
pop
(bad)
mov
adc
fcom
(bad)
hlt
out
fcomp
in
sbb
pop
adc
push
ret
inc
out
xchg
mov
jae
sti
(bad)
jmp
loop
repnz
dec
cmp
xlat
popa
cmp
push
and
loope
mov
jne
inc
pop
fild
lds
xor
jp
jmp
leave
into
add
ficomp
pop
jae
(bad)
pop
pop
dec
ror
(bad)
dec
pop
or
ror
fadd
rcl
pop
pop
mov
ror
mov
mov
inc
(bad)
into
hlt
enter
retf
or
loopne
sub
imul
or
pop
mov
cmps
out
cmc
sbb
xchg
aaa
push
mov
jmp
pop
mov
out
or
das
stc
xor
dec
call
sub
adc
(bad)
push
sbb
cs
pop
dec
idiv
inc
jmp
sub
iret
push
pop
dec
fwait
adc
pop
sub
ret
dec
ror
mov
out
leave
push
faddp
aaa
cmc
pop
or
mov
mov
call
or
pop
mov
push
aaa
cmc
mov
mov
mov
call
ss
mov
push
aaa
cmc
mov
fdivp
and
fimul
shl
pop
mov
shl
popa
jmp
pop
inc
(bad)
sub
adc
cmps
push
add
or
popa
push
arpl
xchg
out
or
mov
dec
call
pop
aas
hlt
sbb
leave
jmp
imul
bound
mov
ss
adc
retf
or
shl
inc
pop
ficom
scas
add
pop
ds
(bad)
clc
aas
push
hlt
in
pop
inc
push
adc
cmc
sti
scas
sub
stos
dec
push
lahf
push
fwait
mov
jmp
mov
push
fcomp
int
jmp
xchg
xor
cld
dec
lock
pop
inc
pop
js
add
cmp
add
out
cmps
or
add
xchg
ret
retf
add
pop
dec
or
mov
add
lahf
mov
cli
xor
sbb
icebp
mov
in
inc
sbb
pop
mov
pop
dec
sbb
mov
movs
pushf
lock
or
cld
pop
scas
pop
or
add
sbb
mov
iret
sbb
pop
push
ror
mov
or
sbb
lock
aas
sbb
dec
mov
pop
xor
push
dec
or
pop
xchg
pop
dec
cdq
push
loop
inc
out
pop
mov
adc
(bad)
pop
movs
adc
dec
sbb
mov
lock
push
or
sbb
dec
sbb
dec
mov
jb
fs
dec
(bad)
dec
mov
iret
mov
loop
scas
sbb
ret
lods
icebp
out
jecxz
aas
pop
dec
sub
sbb
lods
add
mov
jp
or
out
jecxz
iret
pop
dec
sub
sbb
lods
add
mov
bound
popf
cmp
repnz
dec
and
movs
lahf
add
mov
sti
sbb
mov
or
adc
push
and
out
loop
push
sbb
mov
repnz
xor
push
dec
or
push
sbb
repnz
mov
loopne
movs
int3
(bad)
dec
mov
int
pop
xchg
icebp
dec
mov
add
hlt
xchg
cmps
test
mov
sbb
dec
mov
mov
mov
(bad)
pop
mov
mov
mov
ins
dec
cdq
bnd
dec
mov
dec
retf
adc
sbb
pop
add
dec
mov
(bad)
mov
or
xor
imul
mov
dec
cdq
icebp
pop
mov
sbb
xor
mov
xchg
cmp
sbb
or
mov
repnz
fmul
dec
in
jecxz
aas
repnz
jno
jne
dec
sbb
inc
mov
xchg
push
loopne
lods
add
push
mov
repnz
outs
mov
mov
outs
repnz
cmp
dec
cdq
shl
movs
mov
repnz
dec
xchg
loope
pop
shl
movs
inc
or
dec
in
sub
or
cmps
icebp
dec
mov
pop
dec
cdq
shl
mov
dec
mov
fs
cld
out
jecxz
inc
rcr
(bad)
pop
and
mov
repnz
pop
scas
ror
mov
adc
xor
mov
or
loopne
adc
xor
push
mov
repnz
outs
mov
mov
jp
iret
outs
mov
pop
dec
cdq
bnd
dec
mov
retf
inc
xchg
icebp
jecxz
dec
fcmove
xor
push
loop
sbb
mov
repnz
outs
mov
adc
or
push
sub
dec
outs
mov
pop
mov
repnz
xchg
xchg
loope
dec
rol
movs
sub
loopne
dec
das
xor
xchg
fsub
pushf
pop
sar
movs
pop
add
dec
aad
jmp
stos
pop
push
ror
hlt
(bad)
or
dec
movs
inc
pop
mov
pop
xchg
nop
sbb
ret
dec
mov
or
(bad)
xor
inc
aam
or
mov
out
jae
aaa
outs
mov
cld
adc
sbb
dec
mov
or
pop
adc
dec
mov
or
xchg
or
push
sbb
or
adc
lock
sub
sbb
jecxz
add
inc
jecxz
sbb
pop
xchg
lds
mov
jp
movq
bnd
dec
mov
dec
sti
sbb
or
loop
(bad)
sbb
xchg
pusha
cmp
mov
jg
jecxz
in
xor
dec
aad
or
aam
retf
sbb
cli
push
or
push
sbb
or
lods
loopne
out
sub
pop
shl
fs
pop
loopne
mov
push
loopne
sbb
push
sbb
dec
mov
jecxz
in
(bad)
dec
mov
pop
outs
mov
loop
push
or
mov
(bad)
sub
or
(bad)
clc
mov
(bad)
outs
mov
jecxz
dec
pop
loopne
mov
push
loopne
sbb
scas
dec
mov
cmp
dec
sti
push
mov
repnz
icebp
pop
imul
jno
xor
inc
mov
xchg
cmp
mov
shl
fs
pop
loopne
mov
inc
loopne
push
adc
fcmovb
xchg
mov
dec
inc
mov
dec
fdivr
dec
cdq
push
loop
(bad)
sti
adc
mov
repnz
fild
dec
dec
sbb
pop
fst
push
dec
cmp
dec
cdq
pop
loop
out
adc
push
or
sbb
or
and
or
sbb
cmps
dec
sbb
mov
pop
inc
repnz
cmp
out
pop
mov
test
ja
mov
lds
dec
fldenv
cmc
mov
xor
inc
cli
hlt
push
and
pop
cmps
out
pop
das
mov
dec
jno
bnd
pop
and
xchg
xor
and
cmc
mov
inc
add
xor
mov
xor
arpl
cld
push
cwde
push
fld
movs
(bad)
outs
mov
inc
add
dec
pop
sub
push
das
in
pop
dec
inc
std
mov
shl
mov
cmp
or
pop
aas
jmp
ds
ss
inc
(bad)
pop
(bad)
pop
(bad)
sbb
std
adc
stos
jmp
xor
call
xchg
mov
mov
stc
pop
or
jbe
adc
fst
or
sbb
bnd
rcl
jmp
(bad)
adc
popa
inc
call
jmp
(bad)
out
pop
add
pop
dec
mov
cmp
cmps
stc
xor
xchg
lock
fsqrt
push
movs
ret
dec
sbb
cmp
cmps
mul
pop
jae
pop
or
addr16
loop
(bad)
push
jb
retf
or
jmp
(bad)
adc
or
repnz
fcom
pop
inc
and
dec
push
shl
leave
or
daa
fsub
in
pop
stos
sti
fisttp
stos
aam
sbb
aad
sbb
in
or
shl
mov
xchg
jbe
nop
retf
and
or
(bad)
xor
inc
lock
stos
pop
add
imul
lods
mov
movs
ins
(bad)
mov
movs
(bad)
das
xor
add
mov
movs
or
shl
mov
dec
or
shl
(bad)
jae
loope
movs
dec
dec
mov
and
sbb
cmps
mov
pop
mov
mov
imul
sbb
loopne
mov
movs
adc
jp
add
aad
adc
popa
pop
adc
shr
popa
pop
or
mov
sub
gs
dec
jmp
loope
test
pop
addr16
add
dec
(bad)
push
xor
cdq
dec
cmp
test
call
or
out
test
jmp
jb
push
xor
push
ins
pop
jmp
jmp
xor
pop
cld
stos
sti
sbb
push
test
xchg
cmp
pop
and
cmp
pop
mov
adc
hlt
push
dec
retf
jmp
mov
mov
not
out
cmc
mov
fsub
addr16
mov
outs
je
out
adc
dec
jmp
cmp
jmp
aas
mov
in
mov
xchg
movs
aaa
cmc
pop
dec
cmp
pop
jmp
mov
xor
in
xor
cmp
cmp
dec
push
cmp
sti
mov
jb
or
xor
mov
fld
pop
retf
or
or
cld
ss
pop
or
jns
mov
fbstp
xor
adc
leave
cli
scas
or
dec
mov
add
mov
add
bound
jne
pop
and
pop
adc
push
cmp
cmps
pop
stos
xchg
in
dec
cmp
adc
cmp
inc
xchg
pop
(bad)
fdiv
and
pop
mov
mov
or
fdivr
aam
jmp
jg
sub
shl
int
xchg
cmp
rcl
int
xchg
cmp
rcl
xchg
int3
rcl
sar
ins
aas
xchg
cmp
xchg
inc
sbb
shr
xor
xchg
xchg
sahf
cmp
aad
call
bound
adc
gs
cmp
rcr
(bad)
xchg
push
cmp
pop
xor
push
xchg
call
ret
and
rcr
inc
sbb
cmp
ins
push
and
fimul
leave
shl
(bad)
dec
mov
lahf
cmp
xchg
addr16
or
or
cmp
in
cwde
sub
xor
jne
mov
add
(bad)
sub
into
cmc
(bad)
or
and
dec
fst
int3
pop
mov
ror
inc
xchg
cmp
in
mov
mov
(bad)
or
out
mov
test
mov
ror
inc
xchg
cmp
in
mov
cld
fmul
test
fwait
ror
inc
xchg
cmp
in
mov
pushf
retf
add
push
xchg
or
and
and
adc
ret
jmp
cmps
push
ret
(bad)
mov
ins
xchg
cmp
cmp
xchg
jp
inc
inc
add
xchg
(bad)
call
push
add
lds
int3
retf
add
lds
int3
aas
or
bound
push
cmp
sar
movs
xchg
sahf
cmp
ror
(bad)
punpckhbw
test
into
imul
or
xchg
(bad)
xchg
xchg
into
retf
pop
add
or
adc
xchg
(bad)
fld
xor
retf
add
xchg
call
pop
xor
adc
je
pop
dec
(bad)
push
sbb
(bad)
daa
cmc
loope
test
imul
stc
ret
cmc
loope
test
pop
mov
mov
jp
lock
push
loop
mov
mov
adc
push
aaa
jg
adc
je
mov
cmp
into
sbb
xlat
push
pop
jmp
push
jmp
sbb
aaa
ret
jecxz
cmp
mov
mov
pop
pop
cmps
shl
rcl
sub
mov
in
imul
pop
dec
call
push
cmp
mov
pop
pop
mov
sub
and
pop
shl
adc
adc
rol
cdq
pop
sbb
in
lods
stc
pop
stc
adc
cwde
or
push
(bad)
or
retf
sbb
in
pop
inc
jmp
sbb
fild
lods
jmp
dec
inc
dec
call
xor
and
cs
inc
std
ins
cli
push
rol
pop
add
xchg
or
xchg
ss
loop
push
iret
leave
mov
pop
or
pop
div
and
pop
mov
jmp
cmp
cmps
ss
fld
adc
add
jnp
stc
sar
adc
fdivr
cs
sub
(bad)
push
mov
or
popf
fadd
lds
push
mov
pop
into
push
mov
fs
or
movs
cmp
cmp
xchg
adc
cmps
cmp
pop
inc
xor
xchg
inc
xor
ror
rol
xchg
jb
sub
cdq
sub
adc
bound
test
ror
ins
movs
shl
test
sbb
sub
iret
xlat
retf
mov
cdq
movs
xor
and
mov
inc
pop
(bad)
xchg
(bad)
lahf
aam
movs
(bad)
push
loop
int3
push
adc
sub
int
jl
or
bound
cmp
rol
or
xchg
xor
mov
ds
adc
sub
push
xchg
push
mov
icebp
lods
mov
xor
mov
jmp
ret
adc
mov
cdq
mov
cdq
icebp
iret
xlat
sti
movs
cmp
arpl
cmp
cdq
pop
into
push
bound
xor
cdq
xor
xchg
loope
inc
xchg
mov
popf
xor
jmp
scas
mov
and
test
or
(bad)
popf
pop
fsub
jmp
mov
xor
cmc
mov
sbb
jmp
pop
mov
out
or
xchg
xor
pop
xor
and
sbb
mov
cmp
push
jp
jbe
xor
jb
xor
push
add
cmc
mov
aad
sub
ficom
jnp
iret
sbb
mov
fldenv
and
fiadd
cmp
adc
cdq
and
xor
xchg
push
mov
xor
cmp
inc
ss
mov
call
bndldx
jmp
adc
int3
jnp
das
xor
stc
scas
cmp
jmp
cs
sub
pop
in
popf
pop
stc
xchg
out
add
cmc
mov
outs
out
jmp
cmps
int
or
adc
leave
push
fwait
repnz
imul
aad
mov
sub
rcr
cmp
neg
or
shl
lods
rdmsr
clc
pop
cs
in
inc
or
add
mov
pop
adc
leave
cli
adc
cmp
mov
inc
retf
mov
sbb
inc
sar
mov
dec
sti
push
inc
retf
shl
jnp
xchg
add
in
or
shl
inc
pop
fstp
xor
rcr
ins
push
pop
rcr
and
or
test
dec
ins
fstp
pop
sbb
sahf
fs
push
push
retf
pop
sbb
pushf
ins
es
mov
push
retf
push
xchg
mov
jb
leave
mov
push
cmp
nop
mov
cmp
mov
push
cmp
imul
retf
push
jmp
mov
dec
mov
and
cmps
je
mov
cmps
pop
cmp
les
jg
popa
mov
js
imul
fbstp
mov
sub
pushf
push
mov
pushf
inc
inc
xchg
ret
retf
ss
enter
aas
out
loopne
jge
dec
ss
pop
fdiv
movs
inc
xor
mov
es
call
and
mov
rcr
mul
repnz
pop
dec
jle
push
jmp
es
xor
mov
in
inc
leave
dec
int
cs
(bad)
add
retf
mov
inc
jmp
pop
or
(bad)
cmp
cmc
mov
pop
clc
push
call
xor
add
add
cmc
mov
add
mov
push
aaa
cmc
mov
inc
mov
stc
xor
push
cmps
stc
pop
clc
adc
fadd
add
aas
hlt
pop
inc
cmp
inc
adc
leave
or
(bad)
in
add
pop
out
sbb
and
mov
aaa
pop
jbe
test
mov
mov
loopne
jge
dec
ss
pop
push
xor
sub
dec
retf
adc
sub
sbb
cmps
xchg
pop
pop
sar
adc
enter
std
neg
cdq
std
inc
adc
sbb
sbb
cmp
mov
cmp
mov
mov
adc
leave
push
div
loope
jb
cmp
cmps
sbb
lock
and
push
push
stos
hlt
add
loope
bnd
pop
fild
pushf
pop
dec
pop
inc
(bad)
or
push
repz
pop
jbe
or
out
js
ret
sbb
or
fsub
hlt
hlt
(bad)
sbb
cli
or
pop
xchg
(bad)
test
adc
add
jmp
mov
xor
inc
mov
rol
fistp
xor
out
sub
in
add
dec
jbe
mov
pusha
mov
pusha
js
mov
js
mov
ins
nop
mov
stc
pop
inc
mov
pop
jge
ret
jmp
xchg
mov
lea
sbb
pop
and
ja
mov
ins
xchg
mov
(bad)
and
mov
neg
cmp
sub
jp
ret
jecxz
das
sub
jle
(bad)
jmp
fadd
and
xchg
scas
aam
sbb
repnz
pop
jle
(bad)
in
sub
cdq
mov
imul
arpl
xor
fdivrp
and
stos
retf
xor
lahf
mov
imul
dec
adc
jb
mov
push
mov
neg
bound
cs
imul
in
sub
nop
mov
cld
pop
aas
test
pop
xor
js
mov
ins
fwait
mov
stc
daa
aas
ins
test
push
test
pop
jp
shl
sub
outs
xchg
mov
push
mov
repz
test
push
jp
shl
es
ins
xchg
mov
clc
sbb
popa
xchg
pop
jl
ret
sub
xchg
mov
std
and
mov
pop
jnp
shl
sub
xchg
mov
jmp
dec
outs
mov
and
jnp
mov
jae
mov
jmp
shl
pop
cmp
in
rdmsr
push
js
mov
jo
shl
sub
loop
and
shl
sbb
jmp
fwait
mov
ins
nop
mov
stc
pop
inc
mov
pop
jge
ret
out
das
push
jne
mov
jo
mov
imul
push
jp
shl
sub
(bad)
mov
clc
sbb
xchg
push
jl
ret
sub
xchg
mov
arpl
xor
fwait
mov
addr16
mov
neg
pop
jg
(bad)
sub
popf
shl
sub
xchg
mov
push
mov
stc
and
mov
pop
jge
ret
jmp
xchg
(bad)
fild
and
lea
pop
lea
pop
test
pop
jp
shl
sub
jne
mov
lea
sbb
jg
(bad)
cs
je
mov
imul
retf
xor
pushf
(bad)
sub
xchg
mov
ins
mov
pop
and
fild
mov
cli
sbb
int3
cmc
adc
pop
jle
(bad)
jmp
fild
and
fild
mov
neg
leave
out
sysexit
push
js
shl
sub
xchg
mov
jmp
dec
push
sbb
in
rdmsr
pop
jnp
shl
sub
nop
mov
neg
bound
xor
mov
dec
ins
mov
pop
and
fdivr
and
mov
pusha
and
jne
mov
neg
cmp
nop
mov
jmp
inc
imul
arpl
cmp
mov
push
jae
mov
imul
pop
and
js
(bad)
in
sub
xchg
mov
push
sbb
pusha
and
js
mov
ins
nop
mov
stc
sbb
bound
aaa
push
jge
ret
jecxz
sub
outs
xchg
mov
xchg
adc
pop
jg
(bad)
xor
call
(bad)
mov
sti
push
inc
mov
pop
jg
enter
push
ja
mov
outs
popf
mov
sti
push
dec
fs
mov
sti
and
push
lods
shl
push
cmp
mov
push
ja
mov
outs
(bad)
mov
sti
sbb
test
pop
jg
enter
push
ja
shl
es
ins
xchg
mov
sti
push
ds
test
jo
mov
neg
cmp
ja
mov
mov
js
mov
jo
mov
cld
and
mov
jno
ret
in
or
push
jne
mov
sti
sbb
pop
and
fdivr
and
xchg
mov
cli
and
mov
popa
test
push
jbe
mov
push
adc
and
outs
(bad)
mov
pop
and
or
push
jno
mov
mov
mov
pop
jl
ret
cs
ja
mov
imul
lock
pop
xchg
dec
jno
mov
or
dec
jno
mov
std
and
mov
pop
jle
(bad)
jmp
rol
mov
neg
leave
in
adc
push
js
mov
jo
mov
cld
sbb
bound
xor
jp
shl
sub
jb
mov
lea
sbb
pop
jg
(bad)
xor
xchg
mov
imul
lock
pop
jl
(bad)
cs
ja
mov
data16
and
fild
mov
cli
and
xchg
pop
js
mov
ins
nop
mov
neg
cmp
ret
sub
xchg
mov
neg
inc
pusha
xchg
push
mov
add
aas
pop
and
jp
retf
out
adc
pop
jp
mov
clc
sbb
pop
jle
(bad)
in
sub
lea
pop
and
ja
mov
imul
frndint
pop
inc
mov
pop
and
jne
mov
js
mov
ins
lea
bound
xor
jp
shl
sub
xchg
mov
sti
and
mov
stc
sbb
mov
pop
jge
ret
jmp
xchg
mov
jo
mov
pop
sub
xchg
mov
push
pop
aaa
pop
and
js
mov
jo
mov
stc
pop
aas
test
pop
jge
ret
out
sub
jb
mov
ins
mov
pop
test
push
jge
ret
out
sub
jb
mov
lea
push
cmp
(bad)
xor
xchg
mov
or
add
jnp
mov
fbld
mov
jmp
inc
imul
pusha
and
jne
mov
xchg
push
jae
mov
push
jp
mov
mov
push
jne
mov
pop
jg
enter
push
jno
mov
ins
(bad)
mov
add
dec
ins
(bad)
mov
in
adc
push
jbe
mov
bound
xor
ja
mov
outs
(bad)
mov
sti
adc
(bad)
stc
pop
aas
bound
aaa
gs
ret
out
sub
jb
mov
jne
mov
pop
mov
pop
test
push
je
mov
outs
(bad)
mov
cmc
push
cmp
movs
retf
xor
pushf
mov
outs
mov
arpl
xor
out
sub
xchg
mov
cld
and
mov
pop
jge
ret
jmp
xchg
mov
push
mov
repz
cmp
movs
enter
push
jp
mov
outs
xchg
mov
sti
push
inc
lea
bound
xor
popf
mov
ins
xchg
mov
clc
push
ds
pop
sbb
je
mov
ins
(bad)
mov
outs
(bad)
mov
sti
push
inc
ret
shr
sbb
sub
cmp
retf
sub
cmps
imul
movs
sub
sbb
sub
mov
mov
imul
mov
imul
mov
or
mov
mov
xor
jae
sbb
lock
xor
jae
jl
lock
xor
push
les
inc
sbb
push
les
xchg
pop
aas
jbe
daa
pushf
ja
push
cld
lahf
lahf
bound
cmp
add
std
fnsave
push
inc
aam
xchg
and
push
push
and
aaa
fsubr
fcomp
stos
dec
stos
sbb
xor
es
adc
retf
fwait
mov
cmp
push
sub
inc
adc
les
push
xchg
rcr
xchg
sar
pop
not
mov
or
jle
jo
push
jecxz
jge
cmps
jg
adc
std
adc
jmp
sub
cmp
call
pop
push
scas
mov
cwde
mov
xchg
dec
out
pop
nop
das
mov
push
es
xor
aaa
ret
dec
repnz
pop
not
or
popf
dec
push
adc
or
fisttp
repnz
(bad)
test
nop
inc
jg
mov
sbb
dec
out
cmp
aaa
enter
hlt
lods
(bad)
(bad)
jge
das
mov
cmp
xchg
cmp
and
mov
add
jp
cmp
retf
mov
mov
xor
sub
popf
xchg
je
dec
xchg
dec
jb
inc
rcr
inc
push
pop
cmps
popa
(bad)
mov
xchg
call
rcl
pop
xchg
jb
call
jae
not
daa
call
jae
sbb
lock
xor
jae
jl
lock
xor
push
les
inc
sbb
push
les
xchg
pop
aas
jbe
and
xlat
cmp
js
xlat
inc
mov
fidivr
loopne
icebp
adc
cdq
cmp
pop
stc
inc
jne
(bad)
jle
push
movzx
sti
call
mov
push
mov
js
mov
mov
js
push
inc
xlat
je
lds
adc
mov
add
adc
ins
stc
xchg
inc
jecxz
pop
adc
shr
sbb
push
ror
push
sub
pop
in
lods
(bad)
pop
pop
xor
mov
sbb
cmps
adc
pop
pop
jge
mov
fs
outs
in
std
xor
sub
lock
push
test
adc
pop
ja
movs
fnsave
in
xchg
mov
push
nop
pusha
out
pop
cmp
cwde
pop
ret
out
jl
(bad)
imul
pop
aas
sbb
sti
sbb
push
and
mov
fnstenv
and
cmp
lock
in
pop
mov
jge
mov
retf
ror
push
in
mov
shr
pop
lahf
mov
and
fwait
leave
out
aaa
cmps
rcr
rcl
jo
pop
xor
es
xor
sahf
hlt
jae
(bad)
cmc
nop
add
xor
jae
sbb
lock
xor
jae
jl
lock
xor
push
les
inc
sbb
push
les
xchg
pop
aas
jbe
and
xlat
mov
cmp
jne
cmp
jb
sbb
pusha
pop
jb
arpl
adc
sbb
ja
por
stc
rcl
push
fidivr
out
mov
mov
push
ficomp
loopne
leave
xchg
jl
xchg
imul
leave
push
sbb
scas
ss
sbb
push
mov
mov
lahf
mov
sbb
push
out
mov
cmp
and
test
mov
cmp
(bad)
mov
(bad)
push
cmp
iret
jbe
sbb
addr16
or
pop
jge
dec
push
push
stos
cmps
fidiv
push
jns
pop
xor
cmps
scas
fcomp
fisubr
sbb
dec
aas
popf
(bad)
xchg
jle
(bad)
mov
cwde
sub
pop
mov
pop
enter
aam
xchg
into
aam
call
sbb
cmp
cmp
sahf
fdiv
mov
(bad)
sbb
push
jp
bound
xchg
arpl
push
(bad)
sbb
fwait
out
ficom
in
push
mov
test
fnstcw
int
xchg
mov
in
scas
xchg
iret
data16
add
daa
rcr
(bad)
repz
(bad)
daa
mov
xor
(bad)
sahf
mov
inc
(bad)
mov
les
xor
jae
sbb
lock
xor
jae
jl
lock
adc
push
les
inc
sbb
push
les
xchg
pop
aas
jbe
and
xlat
xchg
mov
jb
outs
cwde
repz
div
hlt
pusha
pop
xchg
jbe
jp
cld
sub
test
fadd
adc
or
and
inc
imul
xchg
cmp
out
xchg
jb
cs
imul
js
xchg
mov
adc
push
dec
cmp
mov
mov
loope
stos
mov
xchg
mov
jp
retf
(bad)
pop
jl
scas
sbb
jp
and
dec
(bad)
sahf
pop
repnz
es
repnz
sub
xchg
xor
aas
out
outs
in
push
xor
push
dec
cmp
cmp
imul
fbstp
mov
loope
lods
out
push
repnz
(bad)
jmp
stc
rcl
xlat
jmp
stc
inc
xor
dec
xor
push
and
(bad)
push
mov
fwait
jo
outs
(bad)
lea
xor
inc
sbb
(bad)
(bad)
jnp
sar
jecxz
idiv
in
xchg
ret
addr16
cmp
fs
dec
fstp
xchg
ds
xbegin
xchg
xchg
data16
addr16
ss
cld
not
daa
call
jae
sbb
lock
xor
jae
jl
lock
adc
push
les
inc
sbb
push
les
xchg
pop
aas
jbe
and
xlat
test
sar
iret
mov
(bad)
fcmovne
mov
sbb
ja
xchg
loopne
xchg
mov
call
add
dec
daa
jl
xor
hlt
lods
in
jle
(bad)
mov
jnp
inc
push
dec
movs
fcomp
nop
sub
add
sbb
xlat
sub
retf
cmp
pushf
jge
das
mov
pop
fabs
imul
in
aam
push
fild
sub
sbb
icebp
sub
push
dec
les
adc
popa
mov
xchg
mov
pop
fldenv
shr
mov
gs
push
dec
jb
cwde
sbb
jbe
in
mov
sbb
mov
imul
(bad)
xor
push
or
lods
xlat
imul
adc
cmps
ficomp
xchg
sub
dec
js
add
shr
push
mov
stc
xchg
cmp
xor
xor
pop
into
adc
xor
cmp
sub
(bad)
or
xchg
out
nop
or
aaa
and
cmp
mov
jmp
sbb
inc
xchg
jae
es
push
mov
(bad)
mov
popw
ss
pop
cmc
nop
add
xor
jae
sbb
lock
xor
jae
jl
shl
adc
push
les
inc
sbb
push
les
xchg
pop
aas
push
mov
pushf
xlat
xchg
sbb
sbb
mov
mov
scas
xor
cmp
xlat
fbstp
out
and
sub
shr
bound
jge
dec
mov
cmp
pop
jge
in
mov
mov
push
push
pop
repnz
aam
cmp
pusha
xor
xor
xchg
in
addr16
jg
dec
xor
xlat
sbb
push
xchg
scas
jnp
test
lods
add
jmp
mov
pushf
push
push
in
push
inc
mov
inc
pop
mov
cdq
pop
les
dec
cmp
test
mov
add
je
sbb
(bad)
ror
xchg
das
pop
sbb
ss
movs
aas
pop
adc
fs
add
mov
fdivr
(bad)
pop
retf
fidiv
cmc
dec
cwde
mov
cli
sahf
imul
dec
cmp
mov
fimul
mov
push
mov
mov
stos
xor
jle
loopne
jg
mov
cli
add
imul
(bad)
xor
pop
add
gs
pop
push
or
fwait
jp
xchg
pop
xchg
add
mov
(bad)
mov
ss
cld
not
daa
call
jae
jl
lock
xor
jae
jl
shl
adc
push
les
inc
sbb
push
les
xchg
pop
aas
push
mov
pushf
xlat
xchg
mov
fldlg2
xchg
cmp
ret
(bad)
fisubr
je
sbb
fdivp
das
push
xor
xor
jnp
mov
dec
cmp
add
js
scas
stos
and
cdq
fs
aam
mov
mov
pop
addr16
adc
rcr
mov
sbb
lods
jmp
mov
jbe
cmp
jmp
mov
push
addr16
fadd
jp
call
add
jmp
inc
bound
aad
sbb
xchg
out
std
adc
sbb
fcom
jno
pop
push
test
sub
aas
xchg
dec
mov
sbb
xor
scas
(bad)
fwait
mov
icebp
test
stos
iret
aaa
movs
(bad)
add
dec
mov
sbb
push
or
ds
mov
cmp
outs
pop
sbb
pop
mov
jmp
movhlps
mov
ins
fnstsw
aad
sbb
jns
jg
xchg
sti
and
and
sub
(bad)
gs
out
sbb
push
cmc
mov
call
popf
sub
push
fwait
test
sbb
push
lds
icebp
addr16
ss
cld
not
daa
call
jae
jl
lock
xor
push
in
rcl
bound
adc
push
les
inc
sbb
mov
mov
cmc
xchg
pop
aas
push
mov
pushf
xlat
mov
jge
cmp
push
fstp
iret
push
js
xor
pop
fild
push
fdiv
cmc
repz
nop
adc
mov
pop
mov
ret
pusha
sbb
out
cmp
fisttp
call
inc
or
icebp
cmps
sub
pop
(bad)
mov
fsubp
test
iret
mov
ins
jg
add
stos
sbb
pop
dec
pop
ins
scas
dec
pop
and
pushf
js
stos
sub
sbb
ja
mov
jns
test
pcmpeqw
jmp
int3
mov
dec
jl
sub
cwde
add
ins
enter
clc
loopne
ins
clc
loopne
int3
jmp
shr
fsub
or
cdq
inc
mov
pop
sbb
cmp
or
clc
sar
mov
fstp
or
outs
retf
or
lds
jnp
ja
cmp
jbe
fisttp
aas
sbb
jbe
cmc
add
fimul
pusha
out
pop
das
or
sub
xchg
into
lock
mov
fadd
fdiv
(bad)
mov
add
xor
pop
add
sahf
xchg
in
mov
lds
icebp
addr16
push
jae
cld
not
daa
push
lock
xor
push
in
rcl
bound
adc
push
les
inc
sbb
mov
mov
cmc
xchg
pop
aas
push
mov
pushf
xlat
mov
jge
ds
xchg
std
fmulp
pop
fadd
dec
je
fwait
xor
inc
fisubr
mov
push
mov
not
loope
fnstcw
mov
sbb
ins
adc
push
es
cli
in
mov
sahf
aam
popf
add
lahf
icebp
mov
into
jno
call
rol
xchg
ror
addr16
lods
push
inc
inc
cli
loop
pop
or
mov
loop
fwait
lods
xchg
hlt
dec
lds
xchg
das
push
loopne
sbb
in
dec
nop
and
xchg
jno
cmps
and
add
inc
not
leave
and
ret
mov
push
push
mov
icebp
or
inc
xor
push
pusha
in
or
fisub
push
retf
xchg
jecxz
std
arpl
jo
add
and
test
stc
mov
cmp
aad
cmp
ja
fldcw
pop
pop
outs
xchg
adc
cmp
stos
sbb
jl
das
dec
mov
dec
add
(bad)
in
jl
mov
data16
mov
mov
(bad)
ss
sub
stc
adc
xchg
fidiv
icebp
addr16
push
jae
fdiv
nop
add
xor
jae
jl
lock
xor
push
in
rcl
inc
sbb
push
les
inc
sbb
mov
mov
cmc
xchg
pop
aas
push
mov
pushf
mov
(bad)
mov
pop
jle
jbe
es
mul
sbb
xchg
cmp
hlt
cld
push
into
xor
xor
stos
xor
loope
(bad)
(bad)
push
jle
or
popa
fistp
iret
sbb
test
cmps
stos
adc
mov
pop
repz
or
sti
inc
stos
mov
ror
into
das
xor
sti
sar
jno
or
out
scas
repnz
add
xchg
push
cld
dec
xor
ret
pop
(bad)
imul
fs
out
shl
out
stos
pop
inc
xor
mov
gs
jle
push
sub
gs
into
jle
xchg
or
bound
xchg
or
and
ror
cmps
jecxz
or
jp
bound
sub
adc
(bad)
push
push
cmp
xor
enter
retf
out
mov
add
jns
inc
scas
pop
out
adc
sbb
pop
mov
jnp
xchg
cmp
adc
cmp
fimul
sub
pop
jb
adc
(bad)
rcl
mov
cs
in
pop
in
hlt
int
add
mov
push
lds
lock
pop
mov
add
div
add
xor
jae
jl
lock
xor
push
les
inc
sbb
push
les
inc
sbb
mov
mov
cmc
xchg
pop
aas
push
mov
pushf
mov
(bad)
mov
cmp
and
jae
mov
add
mov
aad
adc
gs
mov
lock
lock
inc
lock
test
xor
add
addr16
inc
stos
mov
pop
xor
inc
in
or
xchg
mov
pop
adc
mov
lea
fs
pop
jne
arpl
mov
idiv
sbb
test
rol
sub
nop
in
call
out
xor
pop
xchg
callw
lds
and
call
bound
nop
mov
push
jmp
or
test
in
mov
popf
movs
ret
sub
xor
inc
pop
fs
jno
add
in
dec
lock
iret
movs
mov
dec
arpl
dec
leave
add
and
shr
call
das
and
cld
sbb
xchg
pop
pop
stos
sar
jnp
jbe
xor
jbe
mov
push
and
inc
pusha
xor
je
test
(bad)
in
jns
(bad)
or
lods
fcomi
fs
aad
addr16
push
jae
fdiv
lock
xor
jae
jl
lock
xor
push
les
inc
sbb
push
les
movs
sbb
jbe
and
xlat
adc
aas
push
mov
pushf
mov
(bad)
jge
cdq
dec
hlt
jge
into
mov
add
lahf
outs
xchg
push
stc
mov
sar
das
lds
xchg
add
inc
in
(bad)
inc
fsubp
mov
and
mov
les
(bad)
frstor
adc
inc
jle
repnz
lods
push
mov
and
sbb
or
mov
aas
adc
mov
cmp
(bad)
fcom
inc
pop
sub
lods
mov
mov
inc
ficomp
in
mov
sbb
cli
jg
in
mov
sbb
call
fsub
in
add
ja
mov
cmp
pop
jg
ins
mov
pop
fld
ins
inc
mov
or
fsub
xor
bound
imul
cmp
cmp
je
cmp
xchg
mov
sub
jle
retf
sar
lods
not
mov
inc
arpl
inc
mov
aam
test
push
retf
adc
dec
mov
arpl
dec
adc
or
das
add
or
push
and
pop
push
jae
fdiv
lock
xor
jae
jl
lock
xor
push
les
inc
sbb
push
les
movs
sbb
jbe
and
xlat
adc
aas
push
shl
mov
outs
sbb
sbb
mov
mov
dec
mov
fisub
hlt
jl
xor
in
test
mov
cld
shl
xor
push
xchg
sub
jmp
jmp
push
lock
pop
into
sbb
ror
pop
push
rcr
in
mov
call
gs
and
xchg
or
ror
out
ins
cmps
sbb
xchg
lea
imul
pusha
mov
mov
fbstp
pusha
inc
shr
out
push
add
push
sub
data16
fiadd
adc
adc
shl
cli
xchg
adc
cld
xor
mov
xchg
jo
cld
jb
shl
adc
pushf
xor
(bad)
mov
mov
cld
jb
rol
push
or
loop
lods
push
or
or
cmp
jns
mov
mov
aam
mov
sbb
sahf
fs
dec
add
mov
out
jb
adc
ds
popa
retf
adc
dec
inc
shl
xchg
mov
lock
pop
xchg
jae
(bad)
lock
xor
jae
jl
lock
adc
push
les
inc
sbb
push
les
xchg
pop
aas
jbe
and
xlat
adc
aas
push
jno
pushf
xchg
(bad)
fcomp
movhps
out
xlat
jg
adc
pop
mov
and
jo
daa
sub
mov
icebp
gs
jb
rol
inc
mov
retf
xchg
dec
jo
xchg
sbb
mov
out
xchg
xchg
mov
lahf
dec
sbb
xchg
adc
sbb
lods
push
dec
sahf
cmps
call
sar
in
stos
xor
mov
sbb
ja
add
or
cmps
and
orps
daa
loop
push
movs
cmc
addr16
mov
inc
jmp
mov
and
jp
ss
dec
nop
fs
int
mov
sub
inc
and
lods
xchg
jg
and
lock
ins
xchg
fild
test
jmp
out
cmp
ja
daa
mov
inc
inc
sti
dec
loope
and
dec
cli
xorps
cmp
push
cmp
sub
push
sbb
jae
jnp
jbe
mov
push
mov
loope
mov
or
cmps
push
ja
(bad)
in
push
xchg
pop
in
cwde
push
ror
sbb
sub
out
ror
mov
mov
jg
lock
pop
xchg
jae
cmp
lock
xor
push
in
rcl
bound
adc
push
les
inc
sbb
push
les
xchg
pop
aas
jbe
and
xlat
adc
aas
push
mov
pushf
mov
out
std
sbb
sub
popf
cmp
mov
pop
scas
push
jg
popa
neg
mov
mov
pop
xchg
mov
sbb
and
fcomip
fs
jecxz
rol
mov
ja
pop
int
dec
fistp
clc
jae
dec
jbe
neg
push
cs
mov
(bad)
cld
out
aas
aam
jge
mov
cmp
dec
push
gs
xchg
scas
enter
popa
cs
call
dec
fistp
or
sbb
loop
scas
mov
fiadd
call
bound
into
jae
sbb
mov
test
fisub
outs
jb
cli
xchg
adc
pushf
jp
shr
fisub
xor
jp
loopne
xor
jp
dec
shr
cmp
and
sub
or
jmp
test
cmp
mov
daa
stos
mov
cmps
sbb
into
sbb
sub
jns
cdq
xchg
jns
jbe
pop
mov
pop
(bad)
(bad)
mov
and
push
dec
jnp
mov
imul
pop
sbb
jge
pop
hlt
aas
addr16
add
sub
fadd
inc
dec
xchg
mov
jl
repnz
fcomip
jae
cmp
lock
xor
push
les
inc
sbb
push
les
inc
sbb
push
les
xchg
pop
aas
jbe
and
xlat
adc
aas
push
repz
xchg
aad
pop
pop
mov
mov
rcr
jns
test
sub
xchg
push
lds
dec
mov
jle
fstp
push
fcom
inc
icebp
or
pop
or
stos
mov
sahf
(bad)
sub
push
pop
leave
mov
adc
xor
out
push
test
sti
mov
pop
in
push
sahf
jle
mov
mov
in
stos
dec
xor
fidivr
repnz
pop
emms
in
pop
ds
imul
pop
iret
pop
lods
sti
jle
sbb
iret
push
scas
sbb
std
pop
dec
aaa
sub
in
nop
mov
pop
pop
gs
mov
mov
std
test
into
test
popf
jg
xchg
pminub
xor
lahf
add
ret
movs
mov
pop
push
cmp
sahf
or
pop
stc
retf
adc
push
dec
not
loopne
pop
xchg
and
xchg
retf
(bad)
mov
inc
sbb
test
repnz
pusha
test
movs
add
lock
adc
(bad)
cmp
nop
xchg
mov
repnz
mov
in
aam
bound
xor
push
les
inc
sbb
push
les
inc
sbb
mov
mov
cmc
xchg
pop
aas
push
mov
pushf
xlat
adc
aas
push
xchg
add
mov
out
sbb
fidivr
push
jle
xor
sbb
xlat
popa
mov
and
(bad)
movs
aaa
push
dec
cli
fldenv
jo
call
xor
dec
fsubrp
jp
fs
dec
int3
pushf
push
test
xor
xor
adc
out
pop
enter
cmp
mov
mov
test
lds
dec
jbe
cmps
test
mov
jo
(bad)
cli
nop
test
pop
jo
inc
call
and
(bad)
inc
mov
jo
loop
push
push
and
add
dec
and
push
test
xchg
jmp
ficom
test
aaa
or
ficom
lds
xor
test
xchg
xchg
add
lods
repz
or
jnp
xchg
xchg
lds
add
dec
adc
lods
(bad)
sahf
mov
call
cmp
sbb
lds
or
jns
shr
retf
push
int
daa
add
mov
add
gs
shl
jnp
arpl
add
xchg
repnz
pop
xchg
jae
cmp
lock
adc
push
les
inc
sbb
push
les
movs
sbb
jbe
and
xlat
xor
aas
push
mov
pushf
xlat
adc
aas
ss
add
mov
out
jge
pop
iret
mov
fldcw
inc
pop
push
push
call
inc
ss
popa
push
repnz
cmps
mov
fld
int
mov
dec
xchg
data16
es
fimul
sbb
xor
scas
cmp
out
test
jno
jae
mov
sub
imul
inc
loope
adc
inc
xchg
mov
push
and
scas
or
mov
push
or
push
lds
mov
add
or
cmp
aaa
gs
mov
and
sub
fwait
shl
sbb
lock
and
dec
idiv
dec
sbb
ja
cmp
xchg
cmp
push
push
loop
outs
mov
inc
adc
ret
fwait
lock
cmp
mov
in
dec
add
nop
xchg
ret
idiv
test
cmp
ss
inc
icebp
mov
mov
and
mov
repnz
out
stc
repz
mov
jle
sub
cli
dec
not
xor
aaa
inc
sbb
mov
movs
hlt
sbb
dec
addr16
mov
les
jecxz
cmp
bound
daa
push
out
pop
mov
pop
xchg
repnz
ficom
shl
adc
push
les
inc
sbb
push
les
xchg
pop
fbstp
and
xlat
adc
aas
push
mov
pushf
xlat
adc
pop
ss
cld
xlat
cmc
int
rcr
in
xchg
fucom
xchg
push
and
cs
jp
jns
test
cmps
stos
sbb
popa
ja
pop
shl
test
enter
jge
cmp
or
loope
and
jmp
outs
inc
test
ret
(bad)
push
in
js
pop
sub
scas
neg
add
inc
xchg
push
(bad)
fsub
sub
out
nop
loop
ins
je
inc
adc
and
xchg
cmp
jl
icebp
sub
sbb
aaa
inc
cmp
call
cmp
mov
in
push
and
push
push
cmp
icebp
enter
pop
sbb
pop
fs
sub
jo
mov
movs
nop
dec
loop
shl
jp
neg
xor
cli
xor
cmp
dec
and
mov
mov
test
fs
pop
jae
cmp
and
aad
mov
fwait
mov
mov
jmp
sbb
dec
aaa
repz
mov
fwait
lds
out
fld
dec
and
lock
sub
test
or
add
(bad)
sbb
or
(bad)
lock
addr16
(bad)
push
fs
rol
adc
push
les
inc
sbb
push
les
xchg
pop
aas
jbe
and
xlat
adc
aas
push
mov
pushf
mov
test
icebp
addr16
ss
cld
aaa
mov
pop
(bad)
mov
cmp
mov
mov
aaa
rol
mov
xlat
int3
mov
dec
xchg
inc
sahf
out
cmc
inc
cmp
mov
inc
jo
dec
mul
and
sbb
push
sbb
xchg
jg
pop
xor
mov
mov
das
rol
push
sub
mov
jp
xlat
sbb
sar
(bad)
jno
and
dec
(bad)
mov
sbb
add
into
aaa
jg
mov
and
xlat
inc
jnp
mov
add
dec
add
mov
fisttp
mov
(bad)
icebp
dec
jecxz
adc
fucomi
neg
add
mov
mov
add
dec
push
cmp
nop
enter
mul
outs
pop
sbb
icebp
or
rcl
cmp
cld
dec
jno
rcl
xor
cmp
pop
test
add
cmp
sub
pop
sbb
pop
jp
xlat
adc
loop
xor
es
jge
mov
div
dec
out
jo
xchg
gs
dec
xlat
lahf
out
inc
mov
xor
popa
fld
adc
repz
rol
(bad)
push
inc
sbb
rol
adc
push
les
inc
sbb
push
les
xchg
pop
aas
jbe
and
xlat
adc
aas
push
mov
pushf
mov
out
mov
addr16
rol
cld
push
adc
pop
std
jl
ja
mov
adc
cmp
push
pusha
xlat
xor
adc
cmps
imul
mov
cmps
call
inc
dec
imul
(bad)
aad
movs
push
imul
fmul
xchg
sbb
mov
cs
enter
in
adc
cwde
fist
sti
lds
mov
les
hlt
add
ss
addr16
inc
sbb
pop
movs
lock
arpl
dec
xlat
pop
(bad)
xchg
imul
out
mov
inc
xchg
dec
bound
jbe
sbb
idiv
lock
in
retf
ret
cli
nop
push
add
lock
icebp
jecxz
dec
push
fadd
xor
call
xor
push
mov
cwde
cs
xchg
in
cmc
pop
sbb
mov
sbb
mov
rcl
push
add
out
fwait
cmps
adc
push
pop
fsubp
or
fisubr
pop
pop
mov
add
test
retf
scas
jp
pop
mov
nop
movs
pop
xchg
rol
(bad)
push
inc
sbb
rol
adc
push
les
movs
sbb
jbe
les
xchg
pop
aas
jbe
es
aaa
xchg
inc
jle
jb
mov
push
xchg
inc
push
push
xchg
movs
pop
xchg
push
add
push
push
(bad)
jns
sahf
scas
mov
mov
mov
inc
stc
popa
aam
mov
fcomp
mov
pop
mov
xchg
outs
xchg
stos
cmps
retf
clc
mov
mov
jle
shr
fsubrp
push
pop
add
lds
xor
sti
into
mov
inc
jbe
push
cs
mov
push
jne
pusha
stc
(bad)
push
sbb
daa
pop
xchg
sbb
nop
fsub
leave
das
mov
bound
xlat
cld
les
and
xchg
mov
cmps
xchg
dec
cmp
push
pop
test
add
push
ja
pop
mov
mov
(bad)
xlat
sbb
mov
inc
xchg
dec
loop
shl
sbb
pop
add
test
fist
jbe
cmp
idiv
push
enter
test
push
sbb
lock
jecxz
dec
jbe
(bad)
push
outs
sub
(bad)
test
in
xor
and
ret
fdivr
es
outs
les
sub
jns
pop
sub
cmp
mov
add
popf
jb
fcom
cmp
daa
pop
fild
mov
and
add
ror
adc
lea
call
pop
xchg
rol
(bad)
push
inc
sbb
rol
adc
push
cmps
push
mov
test
adc
jo
mov
ja
and
ss
fst
test
mov
in
fdiv
in
ss
mov
push
icebp
sbb
orps
popa
jbe
sbb
inc
push
fidiv
cmp
and
lods
movs
xchg
mov
jo
cld
icebp
popa
test
pop
nop
out
dec
xchg
pop
in
mov
mov
fcmovnu
out
sub
jnp
icebp
and
dec
xchg
popf
sub
or
imul
rcr
cmps
and
cmp
test
out
(bad)
scas
push
lds
or
sub
mov
mov
and
test
call
jl
nop
sub
jnp
neg
test
pop
mov
add
mov
cli
adc
and
into
push
ds
jecxz
xlat
fwait
or
lds
cmp
(bad)
ret
push
sbb
ror
ret
jbe
pop
out
adc
addr16
das
pop
std
adc
aas
lods
or
xor
outs
cmp
jmp
cmp
jmp
jae
cmp
fdivr
jbe
les
push
push
rcl
and
xchg
dec
xor
arpl
ins
(bad)
and
dec
xor
mov
xor
mov
sbb
and
or
mov
rol
xchg
lock
xchg
xor
aas
mov
fs
rol
adc
push
les
xor
aas
jbe
mov
sbb
jp
push
dec
xor
jb
inc
es
cs
add
mov
enter
xchg
mov
pop
scas
ss
shl
stc
rcl
(bad)
rcl
add
int
hlt
push
dec
cmp
and
adc
js
out
mov
idiv
enter
sbb
retf
in
adc
iret
cmp
gs
push
stos
xor
sbb
sbb
and
fistp
mov
or
loop
add
add
out
mov
in
sub
icebp
push
and
add
retf
arpl
adc
cli
push
neg
adc
sar
push
jl
push
mov
rcl
adc
and
icebp
xor
mov
mul
fisttp
xchg
jg
xor
int3
pop
int3
add
add
aad
pop
sbb
dec
pop
sub
inc
out
pushf
ins
sar
pop
mov
mov
cmc
ins
jne
mov
in
sbb
emms
adc
gs
jge
xchg
aas
mov
test
mov
push
mov
inc
arpl
adc
repnz
cwde
(bad)
icebp
in
inc
xchg
sbb
lock
xchg
shl
pop
xchg
push
inc
jl
xor
push
xchg
push
(bad)
jle
xor
pop
mul
push
xchg
xchg
pop
ins
xor
pop
jge
in
test
iret
je
sbb
test
mov
test
jo
jp
aaa
pop
pop
add
mov
xchg
push
lds
inc
pop
jge
loopne
cmp
inc
push
mov
shr
les
test
xchg
mov
cs
mov
sar
out
mov
mov
mov
pop
push
dec
ds
sub
fisubr
dec
stos
pop
dec
ds
ret
push
movs
cmp
fnstcw
lahf
mov
(bad)
idiv
push
test
push
mov
add
mov
fidiv
push
jle
xchg
push
cwde
mov
inc
jge
xchg
jmp
mov
cmp
cmp
xor
bound
and
fisttp
dec
mov
mov
bound
fist
push
lds
mov
mov
mov
into
add
or
pusha
scas
jo
xor
ret
pop
cwde
and
call
sbb
cmc
pushf
cmp
stc
cmp
or
fwait
fwait
das
push
xchg
je
push
mov
cdq
and
pop
jl
mov
bound
xor
pop
out
popf
mov
and
jmp
cmp
movs
cli
nop
lock
xchg
xor
jg
push
movs
ds
xor
(bad)
hlt
push
inc
fist
(bad)
aas
xor
retf
clc
movs
ins
mov
cli
pushf
(bad)
or
inc
in
js
xor
and
imul
jl
arpl
or
mov
in
(bad)
mov
mov
jp
inc
pop
mov
fst
and
inc
mov
pop
add
adc
xor
inc
imul
test
cmp
lock
popf
cmp
fmul
fwait
sbb
call
sbb
cld
aas
(bad)
cmp
rol
push
fadd
lds
sahf
and
hlt
mov
jne
cld
pop
test
popa
test
xor
(bad)
aaa
push
push
test
mov
out
jbe
in
sub
rcl
cmp
inc
dec
loopne
push
pop
inc
fadd
push
fisttp
jmp
int
fadd
and
xchg
pusha
mov
pop
mov
movs
mov
jbe
pop
movs
sbb
idiv
in
and
daa
out
pop
xchg
iret
sub
pop
(bad)
cmp
or
jnp
cdq
xchg
cwde
(bad)
xchg
pop
sbb
or
xor
loope
mov
fdiv
mov
xor
push
pop
xor
hlt
cld
mov
test
mov
add
es
mov
mov
div
jnp
stc
shl
movs
pop
jne
inc
pop
mov
inc
jg
xor
ficom
xchg
xchg
xchg
es
jbe
mov
sub
xor
out
jmp
sub
mov
sub
or
js
jo
retf
ret
std
sub
js
xchg
cmp
xor
fidivr
cmp
mov
out
stos
stos
xor
pop
xchg
bound
xchg
retf
cmp
popa
cdq
mov
add
sbb
pop
(bad)
jnp
fwait
dec
leave
into
addr16
sub
mov
imul
adc
and
dec
(bad)
dec
add
stc
or
jp
push
cmp
icebp
mov
mov
inc
sbb
jns
mov
je
test
outs
dec
xchg
xchg
loop
inc
mov
les
mov
popf
lock
add
push
aaa
lds
and
outs
inc
pop
int
pop
loopne
dec
inc
sub
sbb
jl
and
in
cmp
add
mov
pusha
xchg
push
adc
cs
xor
loope
cmp
mov
cmp
out
out
push
or
ins
cmc
repz
pop
cmp
mov
in
(bad)
push
rcl
pop
push
mov
imul
add
jo
addr16
shr
and
enter
push
sahf
adc
xchg
repz
cdq
mov
popa
ss
rol
xchg
mov
jl
xor
ficom
push
lahf
push
fdivr
cmps
inc
cmps
and
mov
push
push
aam
add
sub
sbb
inc
cmp
(bad)
or
and
aam
fild
ds
pop
mov
aam
inc
call
rcl
arpl
inc
cmc
dec
(bad)
push
in
or
dec
mov
lds
sti
mov
dec
or
or
stc
or
cs
test
jmp
jnp
lea
sbb
xor
call
movs
fild
add
bound
push
ret
ss
inc
jno
and
aam
jnp
jbe
adc
mov
and
gs
jno
pusha
xchg
sub
pushf
mov
scas
mov
fdivr
mov
sbb
mov
sub
pop
mov
cmps
sub
test
pushf
mov
int
cwde
pop
or
jae
inc
push
pop
mov
xor
pop
jne
or
sub
pop
popf
dec
push
inc
sti
dec
xlat
repnz
mov
mov
aad
fild
test
cwde
push
movs
cmp
movs
xchg
in
push
push
dec
js
mov
add
cmp
push
repnz
mov
mov
inc
mov
xlat
adc
ds
adc
sahf
xchg
shl
ins
(bad)
in
les
aaa
adc
imul
add
mov
popa
sub
cmp
add
and
dec
mov
cmp
pop
mov
popf
push
xor
mov
inc
push
xchg
pop
sbb
jb
cmps
lods
sub
int3
fcom
ins
(bad)
mov
ror
mov
ror
popa
outs
mov
inc
mov
cdq
inc
push
mov
movs
mov
cli
xor
adc
jnp
push
mov
inc
xor
rcr
gs
bound
(bad)
pop
fs
loop
xor
mov
adc
or
push
or
and
adc
imul
mov
push
inc
or
mov
pop
pop
not
enter
jge
jo
(bad)
stos
and
leave
stc
jl
dec
scas
adc
inc
push
cmp
fcomp
xchg
xor
dec
cmp
xor
push
mov
pushf
jmp
push
mov
adc
mov
push
cmp
mov
stc
aam
pop
xchg
jge
ja
sahf
shl
xchg
push
out
add
int
mov
jne
pop
pop
test
mov
outs
xchg
pushf
xor
xchg
rol
xchg
xchg
cmps
pop
xchg
push
xchg
mov
mov
jne
gs
jecxz
sar
mov
mov
imul
cmp
xchg
pushf
in
dec
jb
push
pop
inc
mov
mov
mov
outs
xor
mov
ficomp
jbe
mov
mov
jo
xchg
mov
clc
mov
(bad)
xchg
pop
or
(bad)
sbb
dec
iret
cdq
loope
or
fwait
test
cwde
add
mov
jns
sub
and
xchg
xchg
test
cmp
mov
fwait
or
outs
hlt
unpckhps
inc
outs
jmp
jno
xlat
ins
aam
shl
sbb
fs
retf
xchg
mov
add
scas
sti
aas
dec
push
ds
push
iret
pop
(bad)
rcr
or
cmp
dec
push
cmp
iret
jbe
sbb
ja
enter
enter
popf
int3
dec
stc
cmp
sbb
dec
aad
cmp
sahf
xchg
or
jg
ins
jne
js
ss
xchg
scas
idiv
push
xor
jmp
cmp
sbb
push
adc
(bad)
push
xchg
jne
xchg
and
pop
xor
test
gs
dec
lock
and
cmp
add
fndisi(8087
mov
push
jae
mov
rol
xchg
mov
pop
xchg
push
inc
pop
adc
pop
aas
push
mul
pushf
div
gs
mov
mov
in
mov
arpl
pusha
mov
adc
dec
jmp
shr
sbb
dec
js
jge
sbb
push
ret
mov
xchg
mov
fnstenv
xchg
in
push
(bad)
lea
push
dec
lea
and
stc
loop
lea
add
retf
jmp
cld
out
jmp
stc
inc
imul
out
mov
pop
xor
sub
das
pop
xchg
(bad)
mov
pmaddwd
clc
adc
jb
mov
test
in
jecxz
jnp
inc
dec
dec
mov
inc
xor
xchg
cld
mov
cmp
(bad)
sbb
lahf
ret
pusha
inc
shr
ret
fimul
push
pop
cmp
jbe
cmp
cwde
iret
pop
cmp
or
sbb
sahf
dec
adc
jns
mov
mov
cwde
push
push
pop
mov
dec
aad
cmp
ss
hlt
dec
hlt
pushf
daa
push
or
ror
mov
retf
stc
std
fild
lock
push
cmp
add
ficom
shl
cld
add
std
inc
test
xchg
jno
rol
lock
mov
aad
fnstenv
inc
sti
jl
pusha
ss
loope
xchg
cwde
dec
push
pop
adc
adc
inc
mov
mov
test
cmc
xchg
fs
push
mov
ret
popf
jg
cmp
or
push
ins
mov
or
and
mov
mov
ja
retf
push
dec
mov
xchg
ins
and
jns
mov
inc
cmp
push
fdiv
jecxz
aas
(bad)
loope
mov
jb
test
dec
cmps
stos
mov
mov
ret
lods
sub
push
lea
inc
int3
mov
jg
dec
or
pop
enter
mov
cmp
rol
imul
ret
and
cmp
fs
lods
jmp
jl
and
pusha
ds
or
inc
out
int3
in
pop
or
push
pop
je
fdivr
scas
xor
pushf
cdq
sub
xor
mov
xchg
ret
dec
pop
scas
jno
cmp
mov
sbb
mov
dec
adc
mov
cdq
push
mov
aad
xchg
jge
dec
xchg
jae
popa
push
fnsave
xchg
sbb
jnp
mov
mov
xchg
popa
cmp
jmp
jne
aaa
pop
sti
out
push
jae
imul
pushf
test
pop
adc
sbb
pop
ror
pop
out
scas
pushf
add
sub
test
sub
sub
cli
jne
js
adc
and
sbb
clc
push
cdq
push
ss
adc
rol
jne
cmps
mov
cmc
adc
ss
mov
cwde
mov
push
or
ja
mov
les
sub
dec
adc
clc
xor
out
jnp
push
ins
cmp
xchg
dec
inc
pop
mov
js
push
cmps
mov
mov
xlat
xchg
inc
xchg
or
mov
test
mov
mov
mov
mov
sbb
or
test
push
pop
adc
jg
push
lods
add
pushf
mov
or
sub
fsub
mov
nop
xor
stc
dec
dec
lgs
mov
push
imul
adc
xchg
fnstsw
or
(bad)
dec
lods
jo
retf
fldcw
ss
in
adc
jns
adc
fsubr
(bad)
ds
sysexit
mov
cmp
call
xor
pop
in
aam
fwait
scas
jbe
cmc
int3
mov
js
aaa
sbb
mov
fidivr
outs
je
js
ss
cli
dec
xlat
jle
mov
sbb
adc
mov
mov
sahf
xchg
scas
pop
push
add
or
jne
aaa
pop
clc
out
push
xchg
fisubr
jge
dec
lock
pop
popa
jns
sbb
pop
jecxz
xor
iret
cmps
imul
and
leave
add
push
jl
mov
push
pusha
cwde
mov
loopne
cmp
pusha
mov
call
pop
adc
mov
mov
in
aad
arpl
sub
mov
dec
repnz
add
loop
xchg
mov
and
out
movs
je
rcr
movs
cmp
xor
sar
popf
rol
aas
ret
neg
sbb
mov
inc
pop
aas
adc
in
inc
jno
test
sti
mov
repz
or
mov
cmps
stc
inc
cmp
push
aaa
inc
out
mov
mov
mov
out
mov
mov
sub
mov
mov
adc
(bad)
dec
outs
xchg
dec
mov
cmp
rcl
pop
scas
pop
(bad)
lods
xor
lahf
mov
setbe
mov
dec
aaa
lahf
cmp
ficom
xor
stc
sahf
cmc
lea
xchg
cmp
aas
aad
mov
pop
mov
push
cmp
mov
cmp
fstp
jne
push
jle
das
pop
xchg
pop
loope
push
cmc
ins
hlt
cmp
sti
rcr
mov
xchg
repz
sub
aad
retf
lods
jbe
fmul
mov
mov
mov
adc
ret
daa
adc
jle
add
sub
les
aaa
cmp
jns
mov
mov
cmp
inc
push
jae
outs
sbb
push
inc
cmc
pushf
shl
pushf
xor
movs
mov
aad
pusha
pop
ss
ss
mov
std
pop
xor
call
iret
test
xor
lds
sub
xlat
mov
add
pop
jp
mov
inc
jecxz
push
and
mov
mov
pusha
aaa
popf
aam
mov
mov
jb
in
ins
test
fidivr
mov
sub
push
push
test
fwait
rol
sub
mov
cmp
out
lods
frstpm(287
dec
dec
sbb
or
and
or
xlat
lods
leave
jb
push
or
xor
mov
popa
cmp
cmp
xchg
mov
call
mov
push
sub
pop
repz
(bad)
clc
aad
adc
sbb
jbe
jnp
mov
jl
cmp
xchg
stc
mov
jns
xchg
in
aad
cwde
mov
sbb
xor
push
push
clc
mov
pop
jg
in
xchg
adc
loopne
xor
hlt
adc
test
aad
dec
loop
dec
push
cmp
lahf
imul
pop
imul
repnz
push
pop
cli
das
xchg
pop
popf
fsub
xchg
pop
dec
mov
push
push
mov
adc
sbb
add
pushf
cmc
add
mov
mov
pop
cmc
mov
pop
xor
mov
aad
popa
pop
ss
jp
adc
jge
jp
icebp
sub
scas
xchg
int3
push
jne
jnp
jg
aad
test
ins
mov
es
(bad)
lock
and
or
(bad)
xor
cli
cmp
scas
stc
pop
or
pop
clc
inc
fnstcw
cmp
loopne
xor
jae
add
fwait
fwait
inc
xlat
int
xchg
mov
ud1
dec
in
push
cmps
imul
mov
and
in
sbb
or
popf
movs
imul
mov
out
xlat
push
mov
xor
(bad)
mov
js
or
iret
and
mov
add
scas
loop
xor
inc
test
movs
mov
push
and
or
in
pop
(bad)
sub
jle
jns
retf
adc
ret
pop
sub
paddsb
jle
pop
mov
out
jecxz
icebp
jmp
fstp
or
mov
pop
imul
cmp
jmp
sub
cmc
loopne
mov
js
jbe
dec
jo
cli
lods
jns
mov
dec
mov
and
push
or
fiadd
xor
mul
jp
div
loopne
mov
js
xchg
sbb
lods
aam
pop
das
aad
xor
sbb
xchg
test
aad
ins
pop
ss
mov
cwde
and
mov
jle
xor
push
pop
movs
add
lea
pop
aas
cmps
inc
sbb
lea
pop
xchg
xchg
jnp
mov
jns
mov
inc
je
mov
fstp
sbb
xchg
sub
mov
fwait
loope
or
sbb
jmp
into
mov
loope
or
cmp
mov
cmp
push
ss
mov
push
and
arpl
and
cmp
scas
retf
and
mov
pop
aam
mov
mov
shl
push
scas
sub
mov
push
addr16
push
lods
mov
mov
aad
jns
lods
or
mov
mov
cmp
and
xchg
call
jmp
mov
bnd
lods
imul
rcr
retf
xor
mov
imul
mov
pop
xchg
lods
imul
and
int3
xchg
out
(bad)
or
fsubr
jbe
aas
push
mov
cmp
mov
push
add
pop
or
jnp
popf
bound
retf
clc
inc
and
addr16
xlat
test
cs
cmp
push
sbb
cmp
outs
xchg
pop
xor
lahf
mov
lds
xor
push
sub
lods
retf
call
add
mov
push
push
int
or
stos
mov
test
icebp
pop
inc
sub
jbe
push
sbb
mov
(bad)
jns
push
js
mov
movs
jecxz
mov
cmp
mov
fdivp
rcr
mov
cmp
mov
sub
stos
sbb
xchg
popa
dec
jl
das
dec
cmp
sub
std
cmps
imul
ror
cmp
mov
imul
test
fwait
add
ins
jl
dec
adc
movs
imul
mov
jnp
or
fs
inc
ds
add
mov
inc
jle
jb
mov
adc
inc
mov
mov
inc
jle
mov
mov
hlt
int
push
jae
add
xor
inc
fidiv
sar
int
fidiv
sar
int
(bad)
jae
sar
int
(bad)
jae
outs
mov
cmp
jle
repnz
mov
xor
inc
xor
xor
in
pop
mov
push
sbb
mov
sub
jae
loopne
mov
rcr
in
and
push
addr16
int
mov
dec
shl
push
inc
mov
lods
cdq
jg
or
jg
or
and
xor
ins
xor
jae
cmp
in
mov
lds
jno
pop
push
sub
retf
test
bound
cmp
lahf
inc
daa
add
ins
xchg
mov
mov
in
fild
cld
inc
loop
(bad)
stos
push
aas
test
clc
cmp
repz
pusha
mov
mov
les
mov
hlt
mov
jbe
mov
int3
test
push
lea
mov
outs
mov
jnp
sbb
stos
sub
sti
movs
imul
mov
imul
mov
mov
mov
retf
inc
test
lods
loopne
push
rcl
nop
add
inc
mov
push
mov
fs
mov
mov
repnz
in
mov
xchg
aad
loope
xor
add
mov
mov
and
mov
mov
lea
xchg
mov
rcl
xchg
into
xchg
ins
inc
mov
(bad)
push
push
mov
cmc
in
add
imul
inc
mov
aam
sbb
test
(bad)
data16
lods
sbb
test
fs
add
pusha
push
ins
adc
pop
outs
div
cld
or
pop
jge
push
les
ss
out
pop
mov
daa
cld
mov
cwde
les
call
sahf
sub
and
outs
cli
mov
push
jo
and
xchg
xchg
mov
lds
icebp
popa
pop
push
or
pop
mov
cmp
push
cli
scas
jmp
jecxz
mov
cdq
add
add
cs
in
or
retf
movs
pushf
loope
dec
outs
sahf
sahf
sar
and
xor
cdq
cmp
fmul
aaa
test
inc
cwde
pop
test
test
shr
mov
sub
loopne
mov
leave
sub
pop
add
or
movs
mov
mov
ffreep
inc
sub
ror
jmp
aas
je
sbb
inc
adc
sahf
loop
(bad)
jecxz
push
dec
lock
jmp
in
push
dec
jae
mov
es
shr
rol
push
adc
shr
jae
loope
mov
xchg
enter
(bad)
enter
add
aas
inc
inc
mov
pop
in
mov
cli
pop
daa
ret
dec
xor
fadd
pop
out
retf
pop
out
push
test
pop
out
in
push
or
sbb
ins
mov
sbb
push
cmp
enter
push
jno
cmp
sbb
push
call
add
sbb
imul
inc
dec
mov
dec
xchg
cli
jge
into
mov
leave
jno
adc
inc
xor
sbb
test
mov
fs
cmp
pop
aam
(bad)
sbb
rcr
pusha
add
mov
ror
cmps
lds
int
jg
addr16
xor
(bad)
add
outs
pop
clc
cmp
add
mov
in
icebp
pop
cmc
pusha
jnp
mov
and
mov
mov
xchg
lock
out
int
sub
cwde
adc
add
cmps
pop
je
xchg
mov
or
dec
jge
push
ficomp
adc
mov
adc
xchg
shl
jle
out
adc
leave
push
jecxz
sti
adc
adc
(bad)
mov
and
adc
xor
out
lea
out
jmp
stos
xor
cmps
dec
push
fbld
xor
inc
lahf
lods
adc
dec
push
mov
or
mov
or
pop
push
adc
imul
lahf
dec
adc
imul
mov
ret
or
rcr
sub
lahf
lods
fs
or
or
hlt
jl
jmp
fidivr
mov
pop
out
idiv
mov
cmc
dec
pop
movs
test
mov
add
enter
or
sti
rcl
rcr
sbb
repz
mov
and
jg
fisub
call
call
addr16
ins
push
ins
xor
pop
inc
jb
aam
and
out
mov
sbb
shr
(bad)
cli
and
bound
out
fs
cmp
clc
dec
xor
cmp
sbb
push
mov
mov
(bad)
dec
call
mov
cmp
popa
dec
push
imul
mov
ret
ror
retf
shl
pop
pusha
or
sbb
sub
mov
and
dec
(bad)
retf
cmp
aaa
jnp
xacquire
xchg
sbb
or
inc
xchg
retf
mov
inc
mov
inc
push
scas
mov
in
mov
ds
mov
inc
sub
fimul
cmp
mov
mov
or
dec
hlt
mov
or
ds
sbb
or
inc
ds
jb
inc
or
mov
cld
fs
push
jmp
push
add
sub
int
pop
cmp
idiv
cmp
mov
inc
push
xchg
ficom
mov
in
mov
and
jae
cs
test
sbb
mov
aas
retf
xor
leave
lock
sub
pusha
je
iret
pop
xor
push
xor
not
(bad)
std
(bad)
mov
out
es
adc
stc
cmps
repnz
aam
ret
adc
xchg
sub
sbb
mov
out
cmp
sbb
ins
loopne
(bad)
sti
scas
fwait
movs
pop
ins
idiv
push
cs
jp
jns
hlt
mov
jmp
mov
mov
ds
sub
push
sub
lods
mov
cmp
std
jg
mov
mov
cmp
(bad)
stos
mov
aas
mov
fcomp
outs
ror
das
popf
adc
sub
add
push
fiadd
(bad)
es
mov
add
mov
sub
in
repnz
ret
stos
push
lds
inc
sub
aam
inc
push
dec
xchg
cmp
or
dec
mov
inc
jle
bnd
sub
dec
aam
inc
mov
jno
hlt
lds
out
push
cmp
sub
hlt
lds
dec
push
fsub
or
adc
inc
ds
mov
les
les
outs
inc
jae
sub
dec
sub
pop
or
adc
pop
mov
mov
jns
pop
lahf
rol
je
mov
adc
in
scas
repz
movs
and
lock
scas
data16
or
cdq
out
jns
mov
push
xor
xor
jae
cmps
(bad)
xor
mov
jge
mov
jg
xlat
inc
pop
hlt
mov
ds
ins
pop
dec
out
retf
push
adc
js
jb
xor
loop
lods
jno
inc
in
sub
je
mov
out
cdq
jb
adc
inc
cmp
xlat
sbb
repnz
sti
loope
std
push
rcr
cmp
test
ds
ficomp
jmp
lods
test
stos
cwde
mov
pop
aas
jno
xchg
retf
sahf
sbb
xlat
sub
mov
call
in
aad
js
add
leave
cmp
add
cmp
retf
xlat
inc
lds
inc
jmp
in
or
or
mov
gs
jecxz
jno
aaa
add
fadd
lds
and
call
test
jl
and
fs
jo
in
mov
sub
les
sub
mov
add
dec
xor
movs
or
dec
push
and
mov
leave
js
lods
out
dec
je
stc
or
ja
fnsave
test
dec
div
mov
iret
adc
jns
int
in
rcr
lock
dec
xlat
inc
je
sub
mov
mov
sahf
mov
add
xor
pop
xor
mov
jge
icebp
addr16
repz
mov
jge
jge
jno
retf
and
push
rcr
sub
dec
push
cmps
in
lods
jno
inc
loope
xor
fld
pop
adc
fcmovnb
mov
mov
inc
jbe
pop
div
pop
dec
adc
fisub
stc
fst
inc
mov
bound
jp
ror
into
and
inc
leave
mov
and
test
gs
mov
movs
push
pop
ret
inc
adc
mov
dec
inc
mov
jecxz
nop
sub
xor
ret
ins
and
jle
dec
inc
adc
movs
mov
mov
cld
and
mov
or
pop
cs
shl
scas
out
add
retf
mov
inc
inc
mov
test
loope
loop
test
inc
inc
in
test
cli
test
jmp
mov
mov
jno
out
adc
bound
shr
daa
ret
ror
popa
out
stos
jp
jbe
and
ds
mov
int
adc
loope
retf
imul
jmp
clc
out
aad
mov
and
(bad)
and
mov
or
sbb
jb
mov
pop
mov
add
test
push
cwde
mov
movs
add
jb
xchg
add
clc
push
fmul
mov
and
aaa
cmp
jp
sbb
xor
push
xor
push
rol
(bad)
rol
push
add
mov
inc
push
les
xor
movs
aad
aam
xchg
add
daa
clc
cli
or
leave
mov
mov
rcl
movs
pushf
pop
sbb
adc
pop
cld
aaa
adc
fnsave
push
into
jnp
pop
arpl
repz
popa
jns
cmc
mov
sbb
mov
stc
mov
mov
jbe
jne
mov
xchg
popa
jns
xor
ret
mov
and
mov
sbb
fcomp
div
cmp
sbb
popa
pop
fcom
js
adc
pop
sar
and
fidivr
and
adc
mov
sar
mov
jnp
icebp
mov
xor
ret
cli
jae
rcr
pop
and
pop
repnz
and
push
xor
fdiv
jno
sbb
mov
gs
icebp
xchg
mov
pop
repz
out
div
add
jne
pop
jo
inc
sbb
cmc
repnz
pop
xchg
adc
xchg
call
shl
pop
xchg
sbb
sahf
push
pop
leave
adc
shr
aas
int3
idiv
xchg
adc
mov
and
mov
les
inc
jle
xchg
retf
sbb
push
cli
push
les
adc
nop
add
pop
(bad)
rol
ss
adc
push
cmp
or
adc
dec
xchg
add
mov
movs
mov
push
loop
jl
sbb
fisubr
ja
fwait
test
(bad)
jns
pop
cmp
addr16
adc
(bad)
mov
inc
(bad)
xchg
rol
xchg
rol
push
rol
xchg
rol
pop
xchg
rol
xchg
rol
xchg
xchg
(bad)
pop
mov
inc
(bad)
pop
adc
pop
xchg
rol
xchg
rol
aam
inc
pop
xchg
rol
hlt
rol
xchg
shl
pop
xchg
rol
rol
xchg
rol
xchg
rol
xchg
jb
pop
xchg
mov
pop
je
inc
jle
shl
cmp
repnz
pop
xchg
mov
pop
xchg
rol
xchg
rol
mov
inc
mov
xchg
rol
xchg
rol
xchg
rol
xchg
rol
xchg
rol
xchg
mov
pop
xchg
rol
adc
inc
push
xchg
rol
xchg
xchg
out
hlt
rol
not
pop
xchg
nop
xchg
repnz
pop
xchg
shl
hlt
rol
xchg
shl
pop
xchg
rol
xchg
repnz
hlt
rol
push
repnz
fist
fdiv
xchg
inc
mov
adc
das
std
xor
fs
call
fild
test
mov
mov
jb
pop
outs
push
mov
and
(bad)
pop
add
cdq
rol
pop
xchg
ss
xor
push
and
xor
inc
mov
xchg
nop
add
pop
(bad)
rol
xor
push
cmp
pushf
jmp
and
je
pop
inc
xor
mov
loopne
jb
xchg
arpl
cmp
mov
sub
inc
inc
aaa
and
push
loop
push
cmp
jp
stc
bound
icebp
lock
xor
fcom
xchg
test
adc
ret
xor
mov
aam
out
push
rol
lahf
ja
and
adc
jae
pushf
hlt
xchg
(bad)
sahf
cmc
xchg
daa
pop
push
adc
pushf
aad
and
ficom
mov
test
xor
jno
mov
rcl
pop
mov
out
push
rol
jae
pop
aam
movs
fidiv
shl
jle
mov
cld
aad
and
mov
and
mov
ja
inc
popf
xchg
jae
popf
xor
cmps
pop
cmc
adc
pop
jno
bound
jo
test
xor
xchg
lock
je
and
div
add
jb
add
jno
jl
xchg
in
aaa
repz
addr16
rep
pushf
push
adc
pop
mov
in
jge
jp
adc
push
xor
jne
pop
retf
or
lea
fwait
xor
adc
fwait
cs
aam
out
pop
xchg
shl
xchg
daa
pop
xchg
push
ins
cld
xchg
cdq
or
cmp
movs
jb
xor
fist
rol
mov
inc
jl
jo
cmp
icebp
push
mov
js
push
div
add
jo
data16
fisttp
mov
pusha
and
stos
push
arpl
imul
inc
xchg
mov
cld
xlat
jge
cwde
movs
fbld
sbb
mov
inc
stc
xor
cwde
sub
cmp
mov
or
les
(bad)
movs
pop
rcl
and
rol
mov
and
jo
mov
pop
mov
call
adc
nop
xchg
add
fidiv
and
aaa
push
inc
cmp
pop
xchg
hlt
add
popf
xchg
xchg
popa
pop
mov
and
adc
data16
adc
jno
bound
mov
out
nop
ss
adc
dec
mov
pop
cmp
lds
push
arpl
jbe
call
arpl
push
loope
xchg
aad
ficom
jge
cwde
mov
cmp
push
xor
add
cwde
stos
rcr
(bad)
adc
cmp
sahf
mov
cld
rol
cmc
sbb
and
mov
jmp
and
fld
jbe
xchg
out
mov
call
mov
and
sbb
push
out
xchg
push
int
push
fld
mov
xor
jg
shl
fist
rol
mov
inc
jl
lock
xchg
ja
cli
shl
stos
pop
jnp
xchg
xor
xchg
push
loope
aas
jecxz
adc
adc
aam
inc
jg
xchg
jnp
outs
jnp
and
jne
xchg
add
mov
mov
fldenvw
mov
mov
dec
pop
push
(bad)
jo
std
mov
repz
(bad)
mov
rcr
push
sub
std
les
test
sub
fprem1
mov
mov
cmp
push
mov
inc
fdivr
dec
pop
ss
mov
push
sbb
(bad)
inc
mov
xchg
pop
inc
pop
lock
popf
popf
push
push
xor
cmp
cmp
pop
icebp
push
push
xchg
je
sbb
xchg
mov
pop
mov
nop
add
stc
hlt
call
icebp
shl
xor
xor
fstp
icebp
mov
xchg
pop
out
xlat
xchg
and
fidiv
nop
xor
outs
mov
call
pushf
xchg
mul
and
adc
sbb
std
jbe
adc
pop
pop
pop
arpl
xchg
fsubr
xchg
ficom
pusha
push
in
ret
int
mov
jno
daa
adc
xchg
push
push
xchg
cmp
mov
cli
mov
sbb
cmc
jmp
push
fs
xor
fist
rol
mov
inc
jl
lock
xchg
jbe
jp
je
cmp
xchg
xchg
pop
and
shl
adc
call
xor
mov
cli
sub
xor
xor
nop
shl
stc
mov
std
jb
inc
cwde
mov
(bad)
sbb
jmp
outs
cmp
jb
dec
fwait
mov
push
xor
test
jge
rcl
cmc
retf
lods
repnz
data16
push
pop
fld
xchg
cmps
lods
sbb
xor
les
push
sbb
adc
scas
call
jmp
adc
fwait
cmp
(bad)
fbld
push
rol
rcl
fild
adc
fcomp
pop
add
xchg
sahf
add
popf
push
add
mov
and
(bad)
adc
add
push
xchg
les
mov
jmp
ror
push
fiadd
loope
pushf
daa
popf
dec
xchg
cmps
(bad)
lods
push
pop
cmps
xchg
or
dec
xor
pop
shl
aad
mov
cmp
push
jg
inc
push
push
jp
sbb
xchg
in
inc
(bad)
mov
mov
adc
dec
push
les
arpl
and
mov
pop
push
bound
jb
xor
mov
mov
xchg
rol
aas
xchg
lock
xchg
rol
mov
inc
jl
shl
jne
loope
nop
xchg
and
cmp
int
pop
fdiv
xchg
cmps
and
jmp
push
mov
mov
inc
ret
jge
fs
add
mov
add
ret
xchg
cli
and
mov
pushf
mov
arpl
pop
adc
xchg
(bad)
dec
fld
shr
push
adc
cli
mov
(bad)
ins
mov
pop
push
sub
fcmovne
nop
sahf
imul
test
mov
or
cwde
mov
fmul
loope
xchg
mov
push
jge
add
int
pop
in
dec
fs
sub
fsub
mov
jg
int
out
push
mov
mov
jae
sbb
sub
lock
stc
jge
out
jnp
mov
call
xchg
xor
jmp
mov
das
xchg
mov
mov
jne
and
mov
and
repz
or
sbb
fs
int
mov
test
sub
xchg
lock
pop
push
ss
fst
cld
dec
sbb
in
xchg
std
xchg
add
fnsave
addr16
add
addr16
rcr
xchg
in
push
mov
push
inc
loopne
add
sub
jmp
mov
lock
push
mov
pushf
adc
xchg
cmc
rol
aas
xchg
lock
xchg
rol
xchg
xor
pop
jne
mov
mov
jecxz
mov
jge
in
in
push
dec
xlat
inc
movs
cmp
nop
push
data16
push
or
hlt
cwde
stos
jnp
xchg
pop
arpl
scas
push
jl
jecxz
push
mov
std
push
pop
sub
cmp
in
xchg
adc
mov
cli
mov
fadd
cli
sub
pop
cs
in
mov
jle
addr16
xor
push
mov
out
mov
sbb
mov
test
outs
std
xor
call
dec
dec
mov
xor
jmp
xor
std
daa
mov
sbb
and
movs
push
(bad)
adc
mov
pop
cmp
daa
inc
imul
inc
mov
push
out
js
arpl
fisttp
sub
add
fsub
xor
cmps
mov
ds
push
sub
inc
sub
cdq
dec
cs
dec
dec
push
pop
jg
mov
mov
out
sbb
in
xlat
pop
add
cmp
rol
aam
add
mov
je
loopne
(bad)
inc
mov
mov
repz
lds
inc
jge
push
push
dec
and
test
mov
movs
clc
push
push
pop
pop
push
mov
pushf
adc
xchg
cmc
xor
aas
xchg
rol
jne
inc
mov
xchg
rol
jne
dec
fwait
adc
inc
jbe
mov
adc
dec
rol
pop
lods
xor
cmps
mov
pusha
in
and
sub
xlat
add
mov
adc
mov
pop
std
ret
repnz
shl
clc
ja
aaa
cmp
jmp
and
mov
mov
cmp
mov
in
cli
into
adc
jg
fs
pop
cmp
mov
xor
mov
xchg
jmp
dec
push
fstp
sub
adc
xor
shr
stos
jbe
out
mov
pop
les
fcom
std
add
stos
adc
popw
jg
jno
test
shl
aas
daa
mov
out
pop
dec
jae
cmps
inc
mov
pop
mov
pop
shr
test
nop
cmp
inc
ss
push
lods
aam
pop
clc
and
loopne
pop
xor
mov
adc
out
sbb
jge
push
fs
sub
ins
in
fist
bound
test
sub
jb
pop
xchg
aaa
loop
jb
push
pop
fisttp
xor
fwait
inc
popf
pushf
rcl
cmc
test
nop
sbb
xchg
fs
aaa
adc
aas
push
mov
pushf
adc
xchg
cmc
xor
aas
xchg
rol
jne
inc
mov
xchg
rol
jne
outs
pop
xor
outs
ss
mov
fs
push
lods
nop
data16
fiadd
in
mov
in
ins
sti
push
test
icebp
(bad)
mov
std
mov
dec
repnz
stc
pop
aas
and
push
ja
mov
rcl
xor
adc
(bad)
movs
inc
mov
jno
mov
xchg
jmp
outs
push
popf
(bad)
ror
mov
sti
inc
sar
and
call
inc
jmp
dec
sub
jg
ins
mov
sbb
fwait
jns
push
push
lea
cmp
bound
call
scas
xlat
popf
inc
ror
rcl
sbb
(bad)
mov
in
movs
push
jle
push
std
and
push
es
scas
push
cld
in
leave
sbb
mov
out
sub
outs
push
or
xchg
pushf
addr16
out
add
inc
dec
push
clc
cmp
int
sub
mov
sbb
outs
shr
stos
dec
adc
retf
inc
cmps
std
xor
bound
fs
movs
aad
push
and
(bad)
inc
neg
jge
imul
mul
(bad)
shl
xor
xchg
cmc
xor
aas
je
push
fidiv
pop
mov
out
push
xchg
add
adc
xchg
aad
(bad)
aas
push
mov
pushf
adc
xchg
cmc
xor
aas
xchg
rol
jne
inc
mov
xchg
xor
imul
jnp
xchg
loope
pop
xchg
loope
xor
sub
cmps
cmp
ss
stos
xchg
inc
and
mov
push
in
adc
aaa
add
fdiv
in
shl
mov
(bad)
xchg
add
push
std
or
stos
jae
push
adc
mov
retf
cwde
gs
imul
mov
test
or
loop
retf
jp
scas
test
and
pop
and
push
fild
push
(bad)
(bad)
jb
fisub
mov
daa
add
data16
xchg
jnp
test
and
hlt
cmpps
movs
test
and
xchg
mov
loopne
dec
loope
repnz
out
xlat
int3
ins
add
cmps
es
xor
push
xchg
pcmpgtd
out
loope
xor
adc
jne
and
scas
inc
add
rol
xor
(bad)
mov
mov
aaa
add
rcl
and
cmp
xor
fdiv
dec
pop
ja
push
push
std
rol
cmp
xchg
xchg
xchg
xor
adc
pop
pop
hlt
repnz
pop
mov
inc
jle
mov
mov
hlt
adc
pop
push
xchg
add
adc
xchg
aad
(bad)
pop
push
xchg
add
adc
xchg
cmc
xor
aas
xchg
rol
jne
inc
mov
xchg
xor
xchg
mov
push
jle
mov
pinsrw
lods
adc
cwde
lods
xchg
pop
daa
loopne
mov
shl
fisub
shl
cld
xchg
adc
pop
xor
lds
xrelease
jae
mov
xor
shl
je
data16
xchg
repnz
pop
xchg
test
dec
or
jmp
pop
dec
xchg
pop
jl
shl
add
fucomi
mov
sbb
repz
test
mov
mov
mov
and
pop
or
sbb
xlat
scas
mov
stc
push
push
inc
jl
in
lahf
and
jae
aas
sub
adc
pop
stos
adc
(bad)
push
(bad)
sbb
or
cmp
push
jns
stos
mov
sub
and
jmp
mov
mov
pop
or
mov
push
or
add
cmps
jno
sub
xchg
inc
pop
xchg
test
fdivp
adc
pop
push
xchg
add
pop
adc
test
(bad)
adc
jg
xor
pop
hlt
xor
jg
jae
ds
push
pop
adc
xchg
test
aad
daa
pop
push
xchg
add
hlt
adc
pop
push
xchg
add
adc
xchg
aad
(bad)
pop
xchg
xor
jne
cmps
mov
jne
iret
cmp
inc
ja
xor
pop
adc
movs
test
stos
mov
loopne
out
ja
pop
loopne
xchg
sub
mov
and
xchg
cmps
mov
je
inc
pop
mov
inc
fidiv
shl
aam
es
aad
in
push
xchg
xchg
xchg
push
inc
mov
xlat
or
mov
pop
mov
cmp
pop
push
mov
sbb
sub
ds
xor
jmp
fst
out
mov
jle
xor
fistp
sub
sbb
sub
pop
jmp
mov
pop
mov
mov
sbb
xor
jg
push
pop
fldcw
xor
mov
mov
fistp
mov
mov
cld
lea
cli
pushf
retf
lock
dec
jns
int3
jb
sti
in
je
dec
adc
sub
sahf
lods
push
daa
lahf
jne
mov
bound
push
add
in
jo
out
(bad)
mov
pop
push
xor
adc
jg
xor
jae
cmp
nop
pop
pop
adc
inc
fdivp
adc
jg
xor
fcom
daa
jg
jb
jl
mov
pop
push
mov
jle
shl
jbe
test
xchg
and
hlt
lock
aad
(bad)
pop
push
rol
xor
push
mov
xchg
xor
jne
cmps
mov
push
push
out
sbb
mov
aaa
push
pushf
fimul
in
xor
mov
ret
pop
out
xlat
mov
sub
aad
outs
mov
jae
(bad)
xor
ds
data16
adc
je
inc
pop
push
push
xchg
jne
inc
pushf
mov
es
mov
rcl
push
jp
sub
mov
fld
cld
clc
imul
neg
push
cmp
iret
xor
mov
mov
lahf
fmul
xchg
call
push
pop
fisubr
fisttp
fmul
xchg
pop
jle
ja
fwait
sub
fistp
rsqrtps
sti
mov
pop
cdq
scas
push
sbb
cmp
aam
pop
(bad)
aaa
mov
clc
lea
pushf
mov
dec
aad
pop
outs
xlat
cld
mov
add
sbb
fwait
in
je
pop
lods
ja
dec
ss
sbb
fnstsw
popf
(bad)
and
or
out
push
shl
pop
mov
xchg
xchg
mov
pop
push
repz
hlt
adc
jg
repz
sahf
hlt
adc
jg
repnz
mov
daa
jg
repz
hlt
adc
hlt
jae
jg
xchg
es
push
adc
push
add
hlt
adc
pop
push
xchg
add
hlt
adc
pop
xchg
xor
jne
xchg
push
aam
cmp
cs
call
mov
pushf
mov
stos
aas
add
pushf
inc
mov
cmps
sbb
push
(bad)
mov
jl
rol
rol
adc
sahf
push
adc
lahf
aam
cmps
ds
mov
inc
fcomip
jo
push
aam
sbb
xchg
jge
dec
call
pop
int3
xchg
std
fimul
adc
(bad)
ins
mov
clc
dec
idiv
aam
xchg
pop
fisubr
pushf
jle
neg
mov
cwde
lods
ja
cwde
and
push
sbb
nop
mov
(bad)
sub
mov
sub
fidivr
or
xor
stos
(bad)
mov
mov
scas
idiv
fwait
mov
cmp
xor
lods
adc
pop
push
pop
jge
push
push
mov
iret
cmp
push
lods
rcr
push
imul
sbb
imul
pop
or
mov
jg
mov
xchg
mov
mov
jmp
nop
cmps
mov
aam
xchg
mov
pop
pop
push
jae
pop
hlt
adc
jg
repz
hlt
adc
jg
repz
(bad)
xchg
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
pop
push
xchg
add
hlt
adc
pop
push
xchg
add
hlt
adc
pop
jbe
movs
mov
push
adc
mov
xor
scas
xlat
call
jne
(bad)
adc
test
retf
add
scas
push
jge
mov
inc
cdq
das
call
lock
(bad)
adc
push
shl
push
hlt
adc
pop
push
jae
pop
cmc
adc
ficom
cmps
jle
icebp
add
jge
cmp
push
fsubp
jo
add
dec
xor
je
cmp
or
jp
mov
sbb
or
lahf
jle
repnz
je
mov
ss
pop
jmp
adc
cwde
leave
(bad)
fstp
adc
mov
push
fistp
stos
push
fnstcw
int
fnstcw
stos
xchg
ds
sub
(bad)
jmp
sbb
dec
mov
jmp
jb
push
dec
xchg
jp
mov
cmp
sub
cdq
pop
dec
sar
pop
or
fwait
lahf
jmp
rcr
popf
(bad)
repz
mov
add
add
mov
bound
in
sbb
lods
push
std
xchg
bound
aam
xchg
xchg
xchg
pop
pop
push
rol
adc
pop
push
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
xchg
fs
hlt
adc
pop
push
xchg
add
hlt
adc
pop
jbe
test
adc
mov
xor
hlt
mov
cmp
dec
jno
pop
sub
lds
scas
sahf
test
sub
mov
jge
repz
jle
xchg
out
mov
inc
pop
mov
out
push
repz
jg
shl
jle
adc
push
sahf
adc
jmp
ins
in
test
outs
mov
mov
stos
jne
lahf
lods
ss
aam
outs
(bad)
outs
div
cmp
mov
pushf
js
cmp
xchg
sbb
inc
xchg
fbstp
push
adc
or
pop
call
sbb
loop
mov
ds
mov
(bad)
loopne
pop
push
scas
ss
and
pop
add
cli
loope
cmp
mov
cwde
jle
mov
pop
jge
add
xchg
xor
mov
(bad)
mov
out
jnp
sbb
ss
call
push
xchg
sbb
repz
mov
fmul
adc
(bad)
fwait
aaa
adc
pop
push
rol
adc
pop
push
repz
pushf
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
xchg
add
hlt
adc
pop
jbe
test
adc
mov
adc
push
js
mov
dec
js
arpl
iret
adc
inc
(bad)
xor
add
shl
xchg
xchg
inc
ds
xchg
cmc
xchg
out
aad
pop
jg
xchg
(bad)
pop
mov
data16
in
push
ss
pop
push
rcl
mov
or
fisub
xor
call
mov
rcl
sar
fs
push
(bad)
into
cmp
icebp
inc
jp
test
mov
jno
mov
cmp
cs
xor
jecxz
xchg
mov
xchg
push
push
and
rcl
mov
xor
lds
push
out
cwde
jno
loop
icebp
je
pop
jb
sbb
adc
ret
sbb
loop
push
push
in
push
jbe
aaa
jb
jecxz
xchg
xchg
(bad)
clc
repz
mov
call
and
sbb
sar
jmp
ds
sahf
sbb
mov
mov
jecxz
jl
addr16
rol
adc
pop
push
rol
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
pop
jbe
test
adc
mov
mov
test
scas
cmp
jg
cwde
sub
stc
dec
push
frstor
imul
test
ror
xchg
xchg
xchg
inc
pop
xchg
rol
aam
push
pop
xchg
repz
pop
xchg
repz
(bad)
xchg
xchg
fidiv
(bad)
(bad)
push
jmp
xor
out
dec
jo
pusha
xchg
sar
(bad)
jmp
mov
sbb
popf
jne
xchg
rcl
xchg
ja
loopne
repz
jae
pusha
clc
sbb
fwait
sbb
cmp
pop
outs
xor
sti
into
sti
sbb
jecxz
mov
add
xor
push
mov
lods
cwde
icebp
sbb
mov
jl
and
repz
dec
push
sahf
adc
and
pushf
jnp
fdiv
fld
mov
jns
div
(bad)
clc
aas
aam
je
pop
and
xlat
jecxz
std
aaa
(bad)
xlat
mov
sar
sbb
repz
cmp
jae
jmp
jb
cld
xchg
rol
and
cmp
les
xchg
xchg
pop
pop
push
rol
adc
pop
push
rol
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
adc
push
adc
mov
lock
pop
pop
push
dec
sti
mov
pop
jmp
sub
in
leave
fiadd
call
and
adc
mov
inc
pop
xchg
rol
mov
push
push
xchg
repnz
push
xor
je
push
pop
jbe
hlt
pop
cmps
xor
lds
loop
(bad)
test
pushf
jmp
mov
dec
int3
cmp
iret
push
push
call
cld
pop
outs
mov
cmp
std
sbb
mov
aam
mov
pop
adc
mov
sbb
fstp
mov
add
imul
mov
push
test
sar
pop
mov
into
jnp
sbb
or
hlt
push
jbe
aaa
xor
jae
and
jl
xor
jmp
loop
pop
xchg
into
cwde
pop
xchg
mov
xor
outs
cwde
jl
adc
adc
mov
mov
dec
jns
cwde
lods
fstp
js
push
jg
outs
push
pushf
mov
or
mov
jge
jne
jl
iret
movs
imul
scas
inc
jae
sbb
adc
pop
push
rol
adc
pop
push
rol
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
jae
mov
xor
jae
mov
push
inc
push
push
mov
mov
jl
cwde
mov
and
mov
and
enter
shl
repz
pop
mov
inc
ds
push
out
xchg
jae
pop
xchg
rol
dec
cmp
(bad)
fidiv
and
sub
inc
mov
or
pusha
jbe
stc
push
jmp
sbb
mov
mov
adc
fucomi
mov
sbb
popf
cmc
outs
ja
cmc
scas
not
clc
pop
retf
outs
mov
fwait
add
pop
push
out
mov
xlat
int
icebp
xchg
sar
mov
shl
xchg
lea
mov
int3
mov
cmc
sbb
pushf
pushf
push
in
mov
mov
jne
sbb
add
js
xor
cs
pop
mov
jb
cmp
(bad)
mov
leave
xchg
aas
dec
fidivr
adc
stc
js
fcom
ins
(bad)
cwde
sbb
sar
retf
jb
or
mov
jo
add
inc
adc
adc
pop
push
rol
adc
pop
push
rol
adc
pop
xchg
rol
lahf
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
jae
mov
xor
jae
mov
lock
jp
push
int3
cmp
jp
add
or
sub
push
addr16
mov
out
jp
jmp
jo
inc
pop
mov
daa
pushf
hlt
mov
push
xor
adc
jnp
(bad)
xor
cmps
imul
int3
sbb
mov
mov
or
jle
loope
mov
sbb
sbb
mov
xor
add
fstp
loope
fdiv
cdq
push
jnp
mov
push
sbb
xchg
into
push
adc
pusha
pop
pop
xlat
popa
cdq
pop
xor
ret
mov
xchg
sbb
clc
shl
iret
ss
inc
sbb
inc
mov
hlt
int3
cwde
push
pop
arpl
sbb
sti
pushf
adc
sar
and
repz
mov
and
jne
push
adc
dec
mov
fucomi
aam
mov
dec
push
pop
fimul
jns
or
jg
mov
sti
sub
sub
(bad)
jecxz
rcl
xchg
xchg
xchg
pop
pop
push
xor
push
xor
sbb
xor
lahf
aam
xchg
xchg
xchg
pop
pop
push
rol
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
jae
mov
xor
jae
mov
push
(bad)
leave
adc
cmp
(bad)
pop
es
dec
(bad)
sti
scas
sar
xchg
stos
es
out
cmc
cs
pusha
mov
sti
adc
inc
mov
push
mov
mov
mov
rcr
cmc
cmp
xchg
inc
(bad)
enter
or
clc
loopne
xor
mov
out
aaa
mov
mov
mov
cmp
jecxz
jnp
or
xchg
cmp
mov
ds
aam
sbb
pop
adc
iret
out
mov
pop
adc
ret
daa
mov
jmp
jmp
lock
daa
nop
push
mov
out
imul
inc
lds
addr16
test
add
icebp
enter
push
jmp
inc
fsub
pop
pop
hlt
and
xor
add
cli
(bad)
jns
sbb
xor
clc
sar
or
stc
dec
xor
ret
fstp
push
mov
xchg
inc
jae
adc
pop
push
xchg
inc
pushf
push
xor
push
xchg
shl
sahf
aam
xchg
xchg
mov
mov
aam
xchg
xchg
mov
pop
push
rol
adc
jg
repz
hlt
adc
jg
repz
hlt
adc
jg
jae
mov
xor
jae
mov
nop
sbb
test
and
ins
and
stos
add
mov
sbb
int3
or
pmullw
sbb
jo
adc
mov
pop
cmc
xor
push
mov
mov
cmp
addr16
lods
cmps
and
leave
scas
fbstp
les
mov
(bad)
imul
fmul
cmp
sti
out
pop
xchg
adc
and
je
div
xor
adc
jb
icebp
(bad)
xchg
cs
retf
inc
xchg
inc
push
sahf
leave
sub
enter
pop
into
cmp
fs
mov
jnp
jne
daa
ins
scas
adc
pop
retf
jecxz
outs
mov
inc
mov
enter
mov
dec
dec
scas
push
push
xor
hlt
enter
ror
push
jl
add
mov
jp
sub
push
maskmovq
mul
push
(bad)
xor
sub
cmp
pop
adc
(bad)
pop
je
not
outs
ss
ds
jo
aas
retf
mov
imul
loope
outs
xor
pop
push
pop
cmp
hlt
fdivr
dec
ja
ds
lea
fsubr
cmp
add
adc
xchg
xchg
xchg
pop
pop
push
rol
adc
pop
push
rol
adc
jg
repz
pushf
hlt
adc
jg
repz
hlt
adc
jg
jae
mov
adc
push
les
cmp
adc
jp
jp
fwait
test
fld
retf
bnd
outs
adc
enter
(bad)
mov
iret
sbb
adc
xchg
call
imul
imul
sbb
adc
xchg
sub
push
in
in
dec
into
mov
pop
jmp
mov
hlt
inc
idiv
outs
xchg
xchg
sbb
cmp
mov
xor
aad
cmp
je
xchg
mov
(bad)
aam
push
xor
repnz
fsubr
mov
addr16
and
lods
mov
dec
into
sti
sbb
dec
xchg
enter
sub
fbld
scas
stos
push
dec
pop
sbb
pop
out
mov
cld
and
jmp
jmp
jae
and
push
jns
retf
mov
xor
aam
je
stc
mov
cdq
pop
sbb
sbb
ds
ss
lahf
mov
fidivr
jmp
fstp
dec
into
mov
cmp
dec
ret
mul
popf
xchg
dec
and
adc
ins
xor
xchg
xchg
xchg
pop
pop
push
rol
adc
pop
push
rol
adc
pop
push
rol
adc
jg
repz
hlt
adc
jg
push
les
jb
fbstp
les
mov
or
clc
pop
jp
pop
mov
sub
or
into
rcr
mov
test
out
push
jbe
inc
dec
xchg
pop
mov
mov
fstp
push
iret
mov
les
adc
jecxz
ins
(bad)
mov
fisttp
push
push
dec
movs
pop
enter
pop
mov
push
or
clc
fsub
sbb
mov
xor
and
push
arpl
not
xor
out
xchg
hlt
dec
or
ins
aad
and
cmp
loop
std
mov
pop
das
in
add
sub
adc
push
not
mov
int
cmp
adc
popf
ins
add
jo
xchg
scas
mov
mov
dec
call
(bad)
rcl
cwde
ds
push
pop
cmp
fdivr
push
dec
fstp
mov
stc
sahf
adc
(bad)
jmp
pop
push
dec
cmp
ins
and
sbb
(bad)
fcmovnb
add
call
inc
cmps
imul
fcom
out
xchg
xchg
pop
pop
push
rol
adc
pop
push
rol
adc
pop
push
rol
adc
pop
push
rol
adc
jg
push
les
jb
fbstp
les
pop
dec
idiv
cld
pop
into
cmp
lock
inc
jnp
repz
inc
ret
sub
push
fisubr
sub
push
xor
imul
mov
test
nop
test
popf
test
rcr
jo
fimul
add
out
pop
sub
pop
mov
push
repnz
enter
popa
mov
cmc
sbb
sar
mov
mov
outs
cmp
pusha
push
fst
pop
xor
jmp
icebp
ds
ror
jg
shr
pop
or
nop
mov
xchg
push
mov
xchg
ret
scas
xchg
out
cli
clc
out
or
adc
push
jno
rol
int3
push
jmp
inc
adc
xor
mov
add
(bad)
rcr
pop
popf
or
fisub
jmp
jb
add
std
xchg
sub
sar
out
xchg
repz
cmp
div
fdivr
stc
push
push
sub
fcomp
push
push
cli
pop
jmp
sahf
imul
loop
stos
jns
out
inc
ret
dec
fs
in
ror
pop
sbb
les
test
aad
test
nop
and
cld
push
adc
xor
out
mov
pop
pop
push
rol
adc
pop
push
rol
adc
pop
jbe
les
jb
fbstp
les
cmp
push
fdivrp
in
hlt
sbb
enter
sub
lea
out
movs
push
dec
adc
(bad)
aam
in
push
push
adc
push
xor
mov
(bad)
jmp
bound
push
js
adc
mov
sahf
sub
mov
pop
dec
sub
adc
lea
sbb
add
jae
mov
push
adc
mov
cdq
xor
cmp
mov
(bad)
pop
leave
das
sub
loopne
lds
cmps
addr16
leave
nop
pop
inc
sub
dec
sub
and
inc
(bad)
fadd
xchg
push
and
ja
stos
jge
mov
ins
enter
cmp
pop
in
inc
jg
sbb
add
nop
call
sbb
dec
mov
xor
(bad)
push
js
ss
dec
sahf
jg
mov
ds
(bad)
push
fcomp
mov
pop
(bad)
ins
mov
inc
cmp
scas
dec
iret
pop
pop
int3
mov
(bad)
test
(bad)
mov
call
fcomp
push
pop
cmp
cmp
push
clc
fisubr
cmc
cwde
cwde
jecxz
sahf
xchg
out
push
rol
adc
pop
push
rol
adc
pop
jbe
les
push
(bad)
fbstp
les
cmp
idiv
aam
div
ds
mov
mov
cmp
dec
adc
mov
lds
out
xchg
mov
es
mov
xchg
add
out
popf
data16
mov
jp
ds
(bad)
mov
imul
stc
imul
xor
xchg
jno
inc
sbb
xchg
sbb
cmc
seta
pop
and
ficom
pop
push
stc
pushf
mov
sub
jmp
mov
push
mov
in
sub
sbb
sub
and
mov
jge
inc
mov
inc
repz
inc
imul
push
or
stos
lea
cmp
test
scas
cmp
add
std
and
aaa
cs
popa
jb
jp
sti
pop
call
mov
xlat
or
div
jle
mov
aas
sub
(bad)
push
call
stos
pop
popf
sub
jecxz
enter
fisub
add
jbe
pop
inc
mov
mov
pop
ins
mov
mov
lods
jne
fldcw
push
cdq
cmp
jo
mov
dec
xor
shl
adc
pop
push
rol
adc
pop
jbe
les
push
(bad)
aas
jbe
and
adc
inc
mov
repz
add
repz
xor
or
xor
mov
push
cmp
loop
jo
push
inc
add
mov
jl
push
outs
fdivr
(bad)
mov
jns
cwde
ins
std
pop
gs
jecxz
push
ret
les
xor
lea
push
jns
push
cwde
inc
push
xor
mov
scas
push
icebp
pop
mov
shl
jns
cmp
sbb
cmp
nop
cld
pop
(bad)
aam
sub
sub
jmp
cs
and
outs
in
xlat
mov
sbb
cs
popf
and
mov
or
std
arpl
fisub
sub
sbb
hlt
out
fstp
gs
dec
xor
mov
fsub
loope
bndldx
add
or
rcl
pop
out
mov
push
inc
ss
xor
push
std
mov
jmp
pop
dec
adc
dec
mov
mov
sbb
ret
outs
es
sbb
mov
popa
aaa
into
sub
push
or
lds
repnz
jl
xchg
cmp
or
js
imul
mov
nop
adc
nop
gs
adc
pop
push
rol
adc
pop
jbe
and
adc
cmps
fdivp
push
(bad)
aas
jbe
and
adc
sbb
push
add
jno
mov
shr
adc
jae
les
add
mov
xchg
lock
and
xor
pop
call
ret
sub
sub
rol
mov
out
jo
stos
sbb
or
jnp
sub
pop
aam
(bad)
jbe
mov
cmp
xchg
mov
int3
xchg
jo
iret
pop
pop
mov
scas
rcr
jnp
pop
cmp
cli
int3
fist
mov
jg
or
mov
sbb
sar
ret
pop
dec
push
test
xchg
test
test
pop
and
xor
jg
out
movs
mov
ins
cmc
inc
fidiv
add
mov
xchg
adc
cmp
adc
jp
xor
imul
(bad)
jns
sar
cli
add
cld
hlt
dec
pop
repz
push
(bad)
fcom
cmp
rcr
int
pop
mov
mov
cmp
mov
adc
mov
(bad)
icebp
dec
mov
or
test
jns
and
rcl
pop
push
ss
mov
cmp
movs
cmp
pop
pop
mov
xor
and
sbb
adc
pop
push
rol
adc
pop
push
mov
pushf
adc
xchg
cmc
push
(bad)
aas
push
mov
pushf
adc
test
cmc
xchg
sbb
xchg
stos
fnstenv
or
js
jae
inc
and
or
inc
sahf
scas
push
mov
cmps
test
mov
std
dec
push
imul
mov
lahf
add
enter
sbb
fs
ret
mov
add
test
sar
pop
lods
not
cdq
dec
push
repz
ja
js
sbb
sbb
sar
call
repnz
push
mov
xor
pop
sbb
add
mov
and
push
xor
fist
xlat
out
aaa
xor
sbb
imul
jbe
push
cmp
mov
push
popf
hlt
and
xor
add
xchg
jb
cld
xchg
nop
movs
pop
xor
xchg
rol
pop
repnz
inc
ds
mov
std
mov
dec
mov
cmp
fdiv
cmp
jns
mov
mov
pop
pop
scas
cmp
(bad)
push
push
pop
mov
or
fstp
stos
cmps
xor
add
pop
inc
mov
shl
loopne
cmps
in
mov
fcmovnbe
movs
xchg
jb
out
jne
pop
pop
rol
jo
push
xchg
xchg
pop
pop
rol
jo
push
xchg
xchg
pop
pop
rol
adc
pop
push
rol
adc
pop
push
mov
pushf
adc
xchg
cmc
push
(bad)
aas
push
mov
pushf
adc
xchg
cmc
xor
aas
neg
or
fdivr
xor
jmp
outs
xchg
pushf
add
push
movs
inc
pop
setbe
rcl
mov
dec
mov
clc
into
fsub
loopne
gs
std
jmp
test
jecxz
sub
sbb
mov
mov
leave
sub
mov
cmp
aad
fstp
not
push
mov
push
add
push
aam
cmp
adc
cmp
jno
sti
jo
inc
sbb
cmp
aad
push
cmp
cmp
xor
and
mov
mov
ss
jp
jns
xor
push
repz
cwde
xlat
xor
adc
inc
cmp
push
sub
adc
mov
ds
jge
xor
mov
push
xor
and
mov
cmp
js
push
or
xchg
mov
enter
sub
fmul
outs
fwait
sbb
jmp
test
xor
pop
mov
add
sbb
mov
aas
div
push
jne
push
jg
xor
cld
aam
out
xchg
xchg
pop
pop
rol
jo
push
xchg
xchg
pop
pop
rol
adc
pop
push
rol
adc
pop
push
mov
pushf
adc
xchg
cmc
push
(bad)
aas
push
mov
pushf
adc
test
cmc
fmul
jno
stos
mov
loope
adc
fucomp
ret
clc
(bad)
mov
and
mov
sahf
not
inc
shl
not
dec
adc
out
mov
loop
out
in
mov
in
sub
in
inc
mov
test
cmp
jb
pop
enter
mov
sbb
pop
sbb
shl
fcmovnu
mov
push
adc
stos
push
sbb
jnp
mov
xchg
(bad)
sti
mov
xchg
mov
int
(bad)
mov
imul
imul
inc
jp
ins
jg
in
push
add
adc
outs
pop
mov
popa
mov
xor
dec
sti
push
cmp
mov
mov
out
outs
cmp
call
push
es
outs
push
sbb
push
shl
and
adc
mov
mov
out
sbb
dec
repz
in
xchg
fcomp
jb
sbb
repz
dec
xchg
mov
fdivr
shl
mov
pop
aam
inc
push
xchg
mov
pop
hlt
mul
hlt
repnz
sahf
jne
in
jne
inc
mov
aam
out
jne
pop
mov
aam
out
xchg
xchg
pop
pop
rol
jo
push
xchg
xchg
pop
pop
rol
adc
push
xchg
push
pop
pop
push
mov
pushf
adc
xchg
cmc
push
(bad)
aas
push
mov
pushf
adc
sbb
mov
push
or
imul
mov
sbb
push
fsub
ror
jmp
add
fsubrp
not
inc
jl
hlt
xchg
aaa
fs
call
pop
adc
inc
pop
rcr
adc
in
push
out
dec
movs
shl
fucomp
dec
pusha
jle
ins
pop
jle
mov
mov
sub
jl
rcr
xchg
(bad)
mov
cmp
jno
scas
stc
les
test
adc
inc
cmc
rcl
shl
outs
repz
add
neg
inc
fadd
pop
pop
xchg
fld
pop
add
sbb
cmp
or
stc
ins
pop
xchg
xlat
and
xor
pop
aaa
clc
pop
iret
mov
pusha
cmp
gs
dec
ss
cld
inc
xlat
pop
mov
mov
jne
sbb
sbb
loopne
adc
in
stc
jl
mov
fdivr
fwait
into
mov
cmp
test
xor
int
cmp
(bad)
dec
mov
inc
mov
and
ret
mov
pop
mov
add
adc
mov
inc
(bad)
aam
in
mov
addr16
div
pop
call
jae
push
jne
pop
mov
aam
out
xchg
xchg
pop
pop
rol
jo
push
xchg
xchg
pop
pop
rol
jo
push
xchg
push
pop
pop
push
xchg
add
adc
xchg
aad
(bad)
pop
push
xchg
add
adc
test
aad
sub
rol
aad
mov
leave
sahf
jae
retf
out
xor
mov
and
push
ja
test
shl
mov
push
xchg
sahf
arpl
xchg
(bad)
gs
clc
mov
faddp
jmp
(bad)
das
(bad)
rol
sub
fild
int
pop
or
stc
fisttp
cmp
loope
cld
xchg
and
(bad)
push
out
xchg
rcr
fdivr
xor
pop
out
fnsave
sub
cmp
cmc
sub
std
inc
popf
or
sahf
in
daa
ja
xor
xor
inc
or
enter
sahf
push
out
and
popa
stos
and
(bad)
push
jp
cdq
xlat
pop
shl
add
in
rol
cmps
inc
or
mov
mov
call
xchg
imul
push
push
outs
sbb
mov
dec
sbb
lods
sahf
pop
mov
fimul
pop
aas
dec
xor
fild
dec
mov
loope
mov
mov
aaa
xor
call
inc
sbb
mov
call
pop
(bad)
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
pop
rol
jo
push
xchg
push
pop
pop
push
xchg
add
adc
xchg
aad
(bad)
pop
push
xchg
add
adc
sbb
js
fist
mov
sahf
jo
dec
movs
sbb
jmp
mul
fimul
push
test
xchg
cmps
ds
sbb
rol
mov
(bad)
adc
push
repz
mov
dec
data16
call
mov
leave
lock
xchg
mov
fsubp
xchg
cmp
mov
mov
jp
sti
adc
test
pushf
jns
sti
xchg
sbb
mov
and
xchg
dec
mov
or
sub
inc
sub
inc
xor
add
mov
sub
inc
jecxz
and
pop
mov
push
lods
div
fwait
lods
push
push
les
pop
in
int3
xor
inc
shr
bnd
ins
ins
adc
pop
enter
pop
add
test
iret
daa
leave
jno
inc
and
je
add
cli
pop
shl
and
fmul
iret
cmp
dec
push
fwait
or
inc
call
jmp
scas
out
std
shl
fcom
xchg
out
xor
movs
pop
jne
pop
xchg
mov
mov
aam
inc
fidiv
xor
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
xchg
push
pop
pop
push
xchg
add
adc
xchg
aad
(bad)
pop
push
xchg
add
hlt
adc
fist
jnp
sub
jmp
inc
jnp
rcr
(bad)
push
les
lods
xchg
test
mov
rol
xchg
repnz
jle
repz
jle
xor
test
lods
iret
mov
sub
or
fistp
mov
bound
repz
ds
cld
mov
pop
mov
jnp
pop
sbb
mov
xor
sbb
push
int
icebp
jb
mov
(bad)
push
scas
lods
jmp
adc
xor
mov
int
cmp
iret
push
(bad)
iret
ja
jmp
adc
xchg
sar
and
in
in
push
sbb
inc
pop
xor
mov
clc
mov
mov
cdq
std
daa
jb
adc
sbb
sub
mov
inc
and
iret
mov
mov
sbb
(bad)
mov
cs
mov
imul
(bad)
push
sti
pop
aaa
mov
mov
mov
mov
xchg
inc
jg
repnz
aas
adc
pop
xchg
mov
mov
adc
inc
ds
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
pop
push
xchg
add
hlt
xor
(bad)
leave
xor
cmps
enter
dec
add
fs
sub
mov
and
in
cmc
or
mov
add
hlt
adc
push
mov
jg
mov
pushf
push
push
stos
cmp
jg
mov
das
ret
or
sub
pushf
test
(bad)
test
(bad)
cmp
outs
aam
cmp
xor
sbb
mov
rcr
cmp
adc
out
mov
dec
scas
adc
dec
bound
mov
sbb
mov
ds
or
add
sub
or
movs
cmp
mov
sub
inc
sbb
cs
mov
fmul
sbb
mov
shr
sub
mov
push
(bad)
jge
int3
mov
cmp
pop
jge
enter
mov
dec
push
mov
enter
outs
pop
js
(bad)
jno
shl
pop
(bad)
adc
dec
jbe
(bad)
in
jbe
pop
push
mov
or
aas
fild
into
pop
sahf
mov
mov
(bad)
scas
xor
in
mov
cmps
pop
xor
cmps
jg
jo
pop
push
push
pop
mov
xor
inc
ds
xor
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
pop
push
xchg
add
hlt
xor
sti
jb
not
shr
lods
mov
bound
das
adc
mov
fsubrp
aad
test
and
xor
and
hlt
adc
jle
mov
jg
repz
xchg
stos
cld
jne
shl
jle
mov
ins
aas
shr
data16
in
sbb
adc
mov
(bad)
outs
jnp
sub
cld
sti
outs
idiv
cmp
xchg
repnz
sar
sbb
push
rcr
adc
add
push
enter
and
cmp
pop
jg
int3
mov
cmp
popf
jle
mov
imul
sbb
mov
mov
and
lods
adc
xchg
push
pop
add
ins
(bad)
mov
retf
cmp
pop
jg
scas
mov
movs
mov
inc
scas
(bad)
jp
nop
inc
jmp
aaa
xor
mov
mov
outs
push
fistp
enter
jmp
test
adc
and
loope
jb
inc
call
cmps
pop
push
jo
pop
xor
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
pop
push
xchg
add
hlt
rol
sti
xchg
in
aad
fdiv
inc
or
cli
outs
adc
xchg
out
mov
arpl
les
hlt
rol
push
mov
ficom
fs
hlt
mov
ds
dec
pop
push
or
mov
mov
(bad)
retf
add
out
fistp
cs
fild
xchg
pop
mov
add
fidiv
xor
into
sbb
in
js
retf
sub
mov
ds
fidivr
int
stos
cmp
jp
xor
mov
cmp
sbb
add
sub
ins
cmp
mov
mov
and
cmp
(bad)
jae
dec
mov
cmp
mov
mov
fwait
shl
jmp
ss
cmp
cmp
(bad)
jmp
cmp
lahf
dec
xchg
fistp
mov
add
icebp
pop
pushf
test
fwait
mov
jo
mov
nop
and
xor
xor
pop
aam
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
pop
push
repz
hlt
rol
sti
mov
xchg
cmc
int3
pop
xor
add
pop
retf
and
sub
in
mov
movs
pop
scas
sbb
repz
inc
sahf
hlt
rol
ficom
fs
hlt
push
cmp
cmp
sbb
pop
sbb
iret
in
mov
test
sub
inc
sahf
das
adc
pop
popa
sbb
js
pop
rcl
mov
jge
pop
hlt
repnz
in
(bad)
in
cwde
arpl
sub
sub
mov
jge
adc
mov
cmp
std
jl
out
mov
cmp
call
or
mov
pushf
in
or
into
xchg
imul
mov
jae
movzx
cmp
(bad)
jg
add
pop
rol
pop
sub
push
sbb
sbb
push
jae
in
mov
sahf
clc
ins
pop
popf
ret
clc
lahf
shr
cld
test
das
fwait
cwde
push
adc
inc
(bad)
mov
cmps
jl
xchg
out
xor
cmps
call
jo
push
xchg
push
pop
mov
aam
out
jne
push
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
jg
repz
hlt
adc
cmp
inc
mov
dec
mov
cmp
(bad)
ror
in
xchg
push
hlt
movs
fs
jp
inc
lods
push
add
nop
repz
hlt
adc
jg
adc
xchg
adc
pop
push
push
addr16
xchg
jle
add
mov
inc
mov
sub
adc
std
xchg
out
add
dec
push
popf
sbb
sbb
sbb
jo
fiadd
xchg
jl
or
mov
jnp
out
test
jge
ins
and
arpl
int3
mov
cmp
clc
jge
add
push
ins
(bad)
pop
jl
lea
xor
sti
mov
mov
les
retf
mov
enter
adc
mov
nop
ins
pop
jl
lods
mov
cmp
sbb
jb
mov
lahf
mov
lods
dec
sub
pop
enter
rcl
adc
pop
mov
inc
aas
dec
and
mov
pusha
jne
inc
jnp
mov
push
es
xchg
mov
pushf
xchg
repnz
fdiv
cmps
call
jae
push
push
jno
mov
aam
out
jne
pop
mov
inc
cld
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
jg
repz
hlt
lock
fsubr
loop
cmp
(bad)
sbb
xor
ror
dec
cwde
sub
je
les
arpl
test
xchg
adc
fdiv
rol
adc
pop
push
rol
mov
push
rcr
loope
dec
ret
jmp
push
push
cmp
(bad)
dec
sti
fsubr
jg
popa
jbe
mov
mov
js
cmp
icebp
add
sbb
cld
jns
test
in
ins
push
dec
mov
sbb
mov
fs
add
jl
retf
cmp
push
sbb
lds
or
sbb
pushf
dec
retf
clc
out
mov
mov
call
sbb
js
add
ins
xchg
push
mov
out
test
enter
out
xchg
adc
scas
idiv
int3
xchg
repnz
(bad)
push
mov
mov
leave
jno
pop
or
inc
push
cmovne
adc
repnz
mov
in
jne
xchg
xor
jle
xchg
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
jg
repz
hlt
push
cmp
pop
ins
js
in
jb
pushf
cmp
fadd
adc
xor
ja
rol
fidiv
lds
mov
pop
xchg
repz
aad
(bad)
jle
rol
adc
pop
push
rol
fist
stos
inc
jecxz
sub
and
fimul
pop
xor
cld
ja
les
push
pop
mov
cs
pop
and
arpl
mov
pop
xchg
(bad)
push
syscall
and
scas
popa
lods
push
mov
inc
push
xchg
ror
pop
push
cmp
cmps
mov
(bad)
(bad)
jl
jmp
or
mov
pop
inc
(bad)
iret
pop
popf
mov
cmp
sub
jb
xchg
retf
mov
adc
es
in
fmul
fst
ror
ds
out
into
jge
repz
mov
pop
and
push
pop
psubw
fwait
lods
sbb
ret
mov
inc
bound
jno
mov
push
dec
(bad)
jnp
xchg
jge
addr16
mov
out
jne
addr16
mov
out
jne
addr16
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
jg
repz
hlt
jo
ds
ins
sbb
inc
shl
outs
cs
repnz
xor
inc
pop
in
fcmovbe
add
cmps
pop
xchg
push
in
push
xchg
(bad)
pop
push
rol
adc
pop
push
rol
cmp
int
xor
repz
mov
scas
jne
cwde
(bad)
mov
fild
ja
jnp
push
dec
adc
(bad)
cmp
mov
aaa
pop
imul
mov
pop
mov
lods
stc
lods
cmp
fidivr
scas
mov
ds
and
stos
repnz
xlat
test
sti
push
(bad)
pop
or
push
test
out
ror
mov
jp
add
inc
jle
jb
mov
ja
addr16
adc
lods
mov
jecxz
icebp
movs
or
mov
add
mov
mov
not
xor
pop
sbb
mov
cmps
jp
push
cld
repnz
mov
out
jne
addr16
mov
out
jne
addr16
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
jg
repz
hlt
mov
ds
dec
js
les
jecxz
call
pusha
inc
push
adc
xor
(bad)
fs
jp
inc
or
adc
pop
xchg
jb
pushf
adc
out
push
rol
adc
pop
push
rol
xor
mov
and
xor
cmps
xor
into
cmp
ret
arpl
fwait
(bad)
push
pop
(bad)
hlt
(bad)
dec
push
xchg
call
xchg
push
les
sbb
jo
daa
popa
pop
xor
sbb
mov
clc
cld
adc
mov
mov
mov
imul
add
mov
cdq
lods
xchg
adc
int
out
push
rcl
lock
scas
retf
xor
popa
je
gs
pop
xor
push
fld
jno
hlt
mov
out
push
jnp
sub
(bad)
int3
dec
sbb
out
push
mov
in
mov
jg
lods
sbb
mov
arpl
xor
fcom
cli
jno
cmp
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
jg
repz
hlt
xor
sti
xchg
(bad)
jae
ret
mov
mov
adc
dec
mov
xor
push
ret
sub
shl
pushf
aam
test
xchg
xchg
(bad)
ficom
pushf
aam
xchg
xchg
xchg
pop
pop
push
rol
ror
mov
xchg
xor
dec
cmp
add
arpl
mov
shl
jp
push
mov
mov
push
xor
push
pop
jnp
stc
cmp
addps
pop
adc
and
fucomip
jno
je
lods
test
xchg
addr16
in
xor
mov
clc
sub
dec
xchg
adc
scas
pop
imul
dec
cmp
outs
sbb
mov
nop
std
test
and
jo
fld
clc
pop
xchg
dec
xchg
inc
mov
mov
push
mov
and
add
(bad)
out
(bad)
and
fisub
pushf
sbb
push
mov
sbb
pop
cmp
pop
(bad)
push
push
fisttp
ficomp
mov
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
jg
repz
hlt
lock
std
mov
and
call
and
pop
and
test
ret
cwde
das
ficom
dec
push
in
mov
test
xchg
(bad)
(bad)
push
rol
adc
pop
push
rol
adc
pop
xchg
mov
adc
mov
jecxz
hlt
ret
inc
popf
ins
lock
pop
inc
pop
clc
xchg
or
mov
adc
dec
cmp
cli
and
std
dec
fadd
fnsave
iret
and
(bad)
mov
loop
jo
sub
jecxz
outs
nop
or
pop
data16
pop
loope
cli
out
adc
jno
add
(bad)
imul
ret
lea
mov
das
mov
and
ror
and
and
mov
into
(bad)
jo
call
sbb
pop
pop
push
add
out
xchg
js
push
pop
pop
or
lahf
shl
xor
test
xor
pop
cli
mov
out
push
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
hlt
adc
pop
push
shl
nop
sbb
(bad)
scas
lds
dec
or
add
or
test
dec
jmp
push
leave
add
(bad)
(bad)
mov
pushf
aam
xchg
xchg
xchg
pop
pop
push
rol
adc
pop
push
rol
jo
push
xchg
xchg
pop
pop
rol
xchg
xor
push
jmp
mov
xor
inc
inc
lods
push
mov
fucomi
adc
sti
scas
mov
std
fldcw
push
repnz
scas
xchg
push
pusha
mov
cmp
mov
loop
rcl
adc
rep
xchg
les
dec
xor
jmp
retf
sub
or
xor
sbb
out
jnp
hlt
movs
call
repz
les
(bad)
xor
mov
cmps
mov
add
dec
iret
jecxz
int
sti
cs
popf
cmp
popf
pushf
inc
xlat
pushf
cwde
or
ficomp
paddb
xchg
pop
and
in
add
out
pushf
repnz
ds
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
aam
out
jne
pop
mov
mov
out
jne
pop
mov
aam
xchg
xchg
xchg
pop
pop
push
rol
jo
push
xchg
cmp
aaa
dec
(bad)
jmp
(bad)
retf
dec
xor
inc
enter
sbb
lods
jbe
outs
jl
inc
popf
aam
xchg
xchg
xchg
pop
pop
push
rol
jo
push
xchg
xchg
pop
pop
rol
jo
push
xchg
xchg
pop
pop
rol
mov
push
xchg
gs
mov
sbb
lods
push
cmp
lock
ins
push
pop
js
or
mov
cmc
mov
arpl
pop
cli
sub
cli
ror
dec
xor
jge
bound
inc
add
(bad)
xor
in
push
div
cmp
popf
cmp
xor
ret
xchg
mov
cs
mov
mov
xchg
pop
lock
(bad)
imul
enter
pop
iret
mov
imul
iret
push
push
cdq
lods
fnstcw
aas
scas
(bad)
jl
dec
idiv
sbb
lods
push
fistp
dec
push
mov
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
aam
xchg
xchg
xchg
pop
pop
push
rol
jo
push
xchg
cld
sub
add
icebp
inc
add
dec
in
mov
and
mov
movs
mov
and
test
je
arpl
mov
pushf
aam
xchg
xchg
xchg
pop
pop
push
rol
jo
push
xchg
xchg
pop
pop
rol
jo
push
xchg
xchg
pop
pop
xor
push
jne
or
lds
int3
xchg
mov
sbb
jae
into
(bad)
mov
rcr
shl
cmc
stos
mov
jno
cmc
push
hlt
inc
div
sub
cmps
dec
repnz
and
or
fwait
dec
int3
loopne
push
mov
out
call
dec
push
std
sbb
mov
xchg
adc
ins
stc
mov
jb
fwait
test
test
in
mov
dec
icebp
pop
mov
xchg
pop
mov
mov
sbb
(bad)
xchg
cmp
outs
aaa
pop
(bad)
xchg
jp
mov
jp
retf
cmp
aad
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
aam
xchg
xchg
xchg
pop
pop
push
rol
jo
push
xchg
cmp
jl
bound
movs
arpl
mov
scas
fsubp
and
inc
cs
push
pop
adc
adc
xor
out
xchg
xchg
pop
pop
rol
jo
push
xchg
xchg
pop
pop
xor
aam
out
jne
pop
mov
aam
out
jne
or
adc
cwde
mov
lahf
mov
mov
cli
sti
int
fistp
mov
jnp
push
popf
mov
repz
scas
idiv
xor
add
mov
mov
pop
jb
jecxz
repz
push
xor
dec
push
jae
pusha
js
aam
ja
call
sbb
out
xlat
bnd
clc
jae
cmp
xchg
ret
fcom
fisub
stc
std
jne
mov
push
inc
fwait
mov
dec
mov
cmp
outs
aaa
(bad)
call
jl
(bad)
(bad)
mov
sti
sub
std
retf
hlt
pusha
adc
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
aam
xchg
xchg
xchg
pop
pop
push
rol
nop
test
xchg
mov
cmc
lock
fnstsw
pop
out
jmp
pusha
in
scas
mov
cmp
jmp
dec
sbb
loopne
mov
cld
aam
out
xchg
xchg
pop
pop
rol
jo
push
xchg
xchg
pop
pop
xor
push
jne
pop
mov
aam
out
jne
or
xor
mov
mov
stc
or
pop
(bad)
cdq
jg
scas
push
pushf
clc
setns
jp
jbe
cli
retf
pop
inc
mov
pop
fild
nop
xchg
inc
jp
cmp
aaa
icebp
pop
and
ds
and
clc
mov
inc
(bad)
jge
mov
cmp
fwait
in
mov
xchg
add
xor
sar
fisub
jns
aam
cdq
xchg
mov
outs
jne
js
cmp
pop
dec
jo
cmc
dec
aaa
fidiv
jmp
fmul
mov
mov
mov
mov
xchg
repz
aam
inc
(bad)
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
aam
xchg
xchg
xchg
pop
pop
push
rol
adc
aas
jbe
cmc
shl
mov
mov
mov
test
push
jmp
inc
push
(bad)
into
stc
ss
mov
fs
jo
push
xchg
xchg
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
or
jne
adc
sbb
sub
cld
pop
sub
push
cmps
pop
xor
popf
pop
call
jne
mov
inc
cmp
pop
mov
jp
dec
jae
and
fwait
push
cli
outs
ss
jp
pop
fstp
cmc
mov
xor
popa
cdq
sbb
scas
mov
jge
inc
not
mov
push
mov
sar
pop
popa
hlt
(bad)
dec
jns
pop
stos
xchg
cld
out
mov
cmp
adc
pop
ins
jae
js
mov
fidiv
xchg
mov
pop
je
call
xor
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
aam
xchg
xchg
xchg
pop
pop
push
rol
adc
pop
push
pushf
adc
adc
fwait
sbb
scas
add
jbe
ficomp
(bad)
popf
repz
lock
fwait
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
or
xor
and
adc
pop
call
idiv
cmp
mov
rcr
cmp
movs
faddp
add
pop
mov
adc
and
sbb
mov
pop
xchg
and
sar
add
ret
out
repz
mov
ret
xor
into
mov
fwait
mov
inc
mov
rol
push
mov
mov
lahf
mov
sub
(bad)
cmp
aaa
pop
adc
or
cmp
push
xor
(bad)
(bad)
jl
pusha
adc
jae
jle
shl
push
xchg
and
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
aam
xchg
xchg
xchg
pop
pop
push
rol
jo
push
xchg
cmp
pop
mov
mov
mov
or
lods
movs
mov
xor
rsqrtps
jle
mov
stc
icebp
push
in
shl
out
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
movsx
ret
jp
out
xchg
fistp
sub
adc
jnp
mov
jl
ins
hlt
ds
sysexit
pop
sti
xor
mov
pop
dec
push
(bad)
cmp
push
pushf
pop
add
je
jae
(bad)
das
cmp
sbb
je
aad
ss
pop
outs
mov
pop
sbb
mov
mov
fnstcw
lea
std
xchg
pusha
neg
mov
int3
aaa
push
cmp
fdivr
push
cmp
repnz
sbb
out
test
mov
sbb
mov
fist
jecxz
jo
fwait
outs
shl
shl
jle
repnz
aas
xor
xchg
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
push
rol
jo
push
xchg
xchg
pop
pop
rol
jo
push
xchg
pop
maxps
xchg
je
mov
cld
neg
loope
retf
hlt
dec
test
aas
aas
mov
adc
loopne
stc
push
es
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
add
pop
cmp
push
push
aaa
gs
aaa
push
das
(bad)
mov
call
ret
icebp
sar
aaa
and
jo
loopne
not
cmp
(bad)
sbb
icebp
scas
push
mov
inc
pop
mov
loop
xor
mov
rcl
pop
pop
push
les
lock
push
and
push
jno
sahf
jo
(bad)
sti
repnz
mov
jo
loopne
mov
and
cld
push
loop
aad
cmps
aas
mov
in
adc
je
mov
cmp
inc
mov
push
scas
js
pop
sub
xchg
sbb
stc
adc
hlt
mov
(bad)
ficom
adc
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
aam
out
xchg
xchg
pop
pop
rol
jo
push
xchg
push
add
cmp
cwde
lahf
sub
sbb
and
jae
and
repnz
pusha
xlat
push
mov
lea
xlat
xor
pop
je
out
xor
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
pop
adc
push
jne
daa
jg
lock
aas
mov
ret
je
pop
jne
fs
mov
mov
pop
(bad)
aaa
push
sti
data16
dec
rcr
aad
(bad)
js
push
pushf
aas
mov
mov
mov
test
mov
adc
adc
div
imul
(bad)
sahf
xchg
in
xchg
xchg
jg
push
xor
xchg
jb
rcl
iret
xchg
xor
(bad)
jbe
pushf
or
fs
mov
aas
pop
or
mov
add
pop
xor
push
jb
pop
aad
fist
jl
adc
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jo
push
xchg
xchg
pop
pop
rol
jae
push
jne
add
sbb
jl
aaa
mov
test
shr
stos
pop
les
or
shl
mov
mov
repz
mov
pop
xor
inc
fidiv
xor
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
popa
sbb
adc
data16
popa
cwde
lahf
test
jge
popa
push
into
cli
jge
loop
xor
fadd
mov
jmp
xchg
cmp
cmc
lahf
les
push
or
out
ja
fs
or
sub
xchg
pop
add
repnz
inc
sbb
inc
and
dec
jl
and
pop
sub
cdq
iret
stc
sbb
(bad)
outs
xor
addr16
pop
sub
xor
push
cdq
jb
pop
pop
jo
pop
cmc
adc
jle
mov
lahf
xchg
rol
push
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
mov
cmp
jns
cli
jno
ins
push
inc
xchg
push
outs
pop
xor
ret
movs
mov
in
inc
mov
es
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
mov
jecxz
jne
sub
xchg
pusha
mov
add
mov
out
ja
hlt
ffree
and
push
out
adc
inc
jecxz
adc
test
enter
add
push
inc
loop
out
neg
lds
enter
in
mov
ret
jmp
outs
sar
test
outs
push
jl
int3
dec
aas
inc
xor
cld
inc
push
leave
sbb
mov
movs
push
inc
xchg
dec
sahf
cmp
aad
mov
jl
mov
ds
out
xchg
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
es
je
add
mov
jb
cmp
fst
aam
xchg
mov
jg
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
mov
in
jne
push
pop
hlt
sbb
sahf
test
leave
fimul
mov
xor
mov
sbb
fucom
and
ret
mov
mov
inc
add
test
pop
gs
dec
mov
bound
adc
scas
xor
xchg
stos
add
outs
enter
test
pop
(bad)
push
mov
addr16
imul
ins
aaa
xchg
inc
or
mov
stc
jb
addr16
xchg
jae
jle
rol
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
jle
xor
jg
xchg
pop
mov
aam
out
jne
out
xor
cmps
call
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
mov
out
jne
inc
sahf
push
mov
xchg
ins
movs
lds
out
push
movs
paddq
mov
cmps
xor
cdq
lea
cmp
dec
mov
dec
test
lds
jbe
and
xchg
shl
dec
neg
les
and
sub
test
leave
shr
pop
cmps
lds
mov
inc
xchg
sub
std
dec
xchg
pop
and
xor
(bad)
aad
clc
xor
data16
jp
shl
mov
push
mov
xchg
xchg
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
push
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
mov
out
jne
addr16
mov
out
jne
mov
add
call
hlt
ret
mov
add
jbe
adc
inc
pop
in
sbb
aaa
push
add
retf
adc
jo
jmp
push
ffree
lahf
and
aam
cmp
dec
rcl
mov
mov
mov
fiadd
inc
xor
sbb
or
xchg
stos
adc
sub
(bad)
test
xor
shl
cmc
shl
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
(bad)
ds
xchg
inc
sahf
push
mov
popf
hlt
icebp
inc
aas
hlt
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
(bad)
jle
adc
xor
es
push
rcr
es
mov
cmps
imul
adc
call
xor
ret
jle
daa
nop
mov
xchg
add
icebp
fadd
xor
and
repz
mov
adc
int3
fdivr
mov
shl
push
sub
ds
mov
loop
lock
mov
out
int
repnz
div
adc
jle
mov
(bad)
adc
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
push
sahf
aad
movs
pop
aam
out
hlt
xchg
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
sub
repnz
not
pop
inc
mov
xor
daa
xchg
stos
xchg
fild
or
mov
jnp
or
cmp
mov
cmps
push
push
adc
mov
aam
pushf
push
repnz
cmp
hlt
sbb
adc
dec
pop
jl
imul
out
cmc
retf
mov
call
imul
sub
movs
pop
gs
xor
xchg
mov
out
push
mov
lahf
adc
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aad
out
jne
pop
mov
aam
out
jne
pop
mov
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
in
push
xchg
scas
cli
rcr
push
ss
sbb
jb
ret
jmp
ficomp
jno
les
in
and
dec
retf
lds
shl
in
mov
mov
outs
pop
mov
jecxz
mov
and
xor
(bad)
xchg
mov
in
shl
adc
and
dec
inc
jns
out
add
inc
jle
repnz
pop
aaa
adc
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
xchg
push
repnz
xor
jae
push
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
xor
xchg
out
push
jno
jl
fwait
imul
adc
xchg
inc
pop
adc
xchg
out
ss
test
mov
lds
push
int
sub
push
cmc
les
adc
inc
fwait
(bad)
icebp
inc
mov
xchg
test
mov
add
pop
dec
stos
push
data16
icebp
push
inc
repz
fld
out
jne
push
inc
jne
rol
div
inc
pop
push
repnz
mov
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aad
inc
jl
xchg
pop
mov
aam
out
jne
(bad)
pop
xor
cmps
call
out
jne
pop
mov
aam
inc
pop
xchg
repnz
pop
xor
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
hlt
rol
push
adc
lahf
mov
int3
cli
xor
adc
push
in
xchg
cmp
lea
jle
iret
mov
cmp
sbb
xor
mov
(bad)
pop
rcl
loope
xchg
cmc
les
adc
cmp
push
pop
jle
jmp
mov
jge
lods
mov
xchg
and
jl
add
pop
rol
push
xchg
xchg
data16
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
mov
out
jne
addr16
aam
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
push
repnz
xor
jae
jle
repnz
xor
cmp
adc
mov
xchg
xchg
aas
cmc
or
push
out
dec
jbe
cmp
xor
sbb
push
xchg
outs
add
sahf
jno
xor
inc
jge
xchg
dec
push
into
sbb
xor
mov
mov
mov
sbb
mov
xchg
xor
fs
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
adc
xor
bound
rcr
idiv
sbb
jne
js
repnz
stos
sar
stos
adc
cmp
xchg
push
sub
sub
or
sub
ins
mov
call
jl
push
mov
cmp
xchg
mov
push
inc
xor
mov
pop
repnz
mov
aam
xchg
adc
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
aam
out
jne
pop
mov
aam
out
jne
pop
mov
mov
out
jne
pop
mov
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
xor
jae
jle
repnz
xor
jae
jle
mov
lahf
xchg
xor
div
les
adc
jle
repnz
xor
aam
sbb
adc
fscale
xlat
dec
not
sahf
popa
pop
jae
sbb
or
mov
pop
mov
jbe
cwde
loopne
adc
mov
jp
cmp
pop
shl
hlt
mov
push
xor
daa
sti
push
jb
pop
xchg
jae
jle
push
data16
xor
jae
mov
jne
cmps
push
addr16
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
push
jne
pop
mov
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
inc
ds
repnz
pop
xor
cmps
push
addr16
mov
out
jne
addr16
xor
jae
jle
repnz
xor
mov
jle
repnz
pop
xor
xchg
mov
out
push
nop
push
push
aad
pop
aas
(bad)
jae
mov
mov
inc
push
div
fist
adc
pop
adc
(bad)
into
cmp
and
xchg
xchg
arpl
rcl
mov
cli
push
lock
(bad)
mul
adc
pop
xlat
push
ret
sbb
push
out
(bad)
mov
pop
xchg
adc
je
mov
data16
aad
addr16
mov
out
push
xchg
data16
jne
xchg
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
xchg
addr16
xor
jae
jle
repnz
mov
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
adc
xlat
mov
pop
lock
jecxz
rcl
arpl
mul
mov
add
xlat
arpl
push
inc
fist
push
in
aaa
repnz
adc
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
push
repnz
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
jne
addr16
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
xor
jae
jle
repnz
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
jne
addr16
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
mov
out
push
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
repnz
xor
jae
jle
sub
into
xchg
sahf
mov
mov
sub
sub
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
add
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
add
add
sub
add
sub
add
add
add
add
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
add
add
sub
sub
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
add
add
sub
add
add
add
add
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
add
add
sub
add
sub
mov
mov
mov
add
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
mov
mov
mov
add
sub
sub
add
add
sub
sub
sub
sub
add
add
sub
add
sub
mov
mov
mov
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
add
add
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
mov
mov
mov
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
add
sub
add
add
sub
add
add
sub
sub
add
sub
add
sub
sub
mov
mov
mov
add
add
sub
sub
add
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
add
add
add
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
add
add
add
add
add
sub
mov
mov
mov
add
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
sub
add
add
sub
sub
add
add
sub
sub
sub
add
sub
sub
mov
mov
mov
add
add
sub
add
sub
sub
add
add
add
add
sub
add
add
add
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
mov
mov
mov
add
add
sub
add
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
add
add
add
add
sub
add
sub
sub
add
add
sub
mov
mov
mov
add
add
sub
add
sub
add
mov
mov
mov
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
add
sub
add
add
sub
sub
add
add
sub
sub
add
add
add
add
add
sub
add
mov
mov
mov
sub
add
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
mov
mov
mov
add
sub
add
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
add
sub
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
add
add
add
sub
add
add
sub
sub
sub
add
add
add
add
add
add
sub
sub
add
sub
add
add
sub
add
mov
mov
mov
sub
add
sub
add
add
sub
sub
sub
sub
add
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
add
add
add
add
add
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
add
add
sub
sub
add
sub
add
add
add
sub
sub
add
sub
add
sub
sub
add
add
add
sub
add
add
mov
mov
mov
sub
add
sub
add
add
sub
add
add
sub
sub
sub
add
add
add
sub
sub
add
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
add
add
sub
add
add
sub
add
add
add
sub
sub
sub
add
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
sub
mov
mov
mov
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
sub
add
add
sub
add
sub
add
sub
sub
add
add
sub
add
add
add
sub
sub
add
sub
add
add
add
add
sub
add
sub
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
add
sub
add
add
sub
add
sub
mov
mov
mov
sub
sub
sub
add
add
add
add
sub
add
add
sub
add
sub
add
sub
sub
add
add
mov
mov
mov
sub
sub
sub
add
sub
add
add
add
sub
sub
add
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
add
add
add
add
sub
add
sub
sub
sub
add
sub
mov
mov
mov
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
mov
mov
mov
add
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
mov
mov
mov
add
add
sub
sub
add
add
mov
mov
mov
sub
add
sub
add
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
add
add
add
sub
add
sub
sub
sub
sub
sub
add
mov
mov
mov
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
add
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
add
sub
add
add
add
add
add
add
sub
mov
mov
mov
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
add
add
add
sub
add
sub
sub
mov
mov
mov
sub
add
add
sub
sub
sub
sub
add
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
add
sub
sub
add
sub
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
sub
sub
sub
sub
add
add
sub
add
add
add
sub
add
add
mov
mov
mov
sub
sub
add
sub
sub
add
add
sub
add
add
sub
sub
add
sub
sub
add
add
add
sub
add
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
mov
mov
mov
sub
sub
add
add
sub
add
add
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
mov
mov
mov
add
add
add
add
sub
add
add
add
add
sub
add
add
sub
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
sub
add
sub
add
add
add
sub
add
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
add
sub
add
add
sub
sub
sub
add
add
sub
sub
add
sub
add
add
add
sub
add
sub
sub
add
add
sub
mov
mov
mov
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
add
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
add
sub
add
add
sub
sub
add
add
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
mov
mov
mov
add
add
add
sub
add
add
add
add
mov
mov
mov
add
sub
sub
sub
add
add
add
sub
add
sub
sub
add
add
sub
sub
sub
add
sub
mov
mov
mov
add
add
add
add
add
sub
sub
sub
sub
sub
sub
add
add
add
sub
add
add
add
mov
mov
mov
sub
add
add
add
mov
mov
mov
sub
sub
sub
add
sub
sub
add
sub
sub
add
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
add
add
sub
sub
mov
mov
mov
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
add
add
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
add
sub
add
sub
mov
mov
mov
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
add
add
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
add
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
add
add
sub
add
add
add
sub
sub
add
sub
add
sub
sub
add
sub
add
add
sub
mov
mov
mov
add
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
add
add
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
add
sub
mov
mov
mov
sub
sub
add
add
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
add
add
sub
add
add
add
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
mov
mov
mov
sub
add
sub
sub
sub
sub
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
add
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
add
add
sub
sub
add
add
add
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
mov
mov
mov
sub
sub
sub
add
add
add
add
sub
sub
sub
add
add
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
add
sub
add
add
add
sub
add
mov
mov
mov
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
add
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
mov
mov
mov
add
add
sub
add
sub
add
sub
sub
sub
sub
add
add
sub
add
add
add
add
add
add
add
sub
add
add
sub
sub
add
mov
mov
mov
sub
add
sub
add
sub
sub
add
sub
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
add
add
add
add
mov
mov
mov
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
add
add
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
add
add
add
sub
sub
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
add
sub
add
sub
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
sub
add
add
add
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
add
add
add
add
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
mov
mov
mov
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
mov
mov
mov
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
add
sub
add
add
sub
sub
add
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
add
add
sub
sub
add
add
add
add
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
add
add
add
sub
sub
add
sub
sub
add
add
add
sub
add
add
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
add
add
sub
sub
add
sub
add
add
sub
add
sub
sub
add
add
add
add
sub
add
add
sub
sub
sub
add
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
add
sub
sub
add
sub
add
add
add
mov
mov
mov
sub
sub
add
add
sub
sub
add
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
add
add
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
sub
add
sub
mov
mov
mov
add
add
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
add
add
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
add
add
add
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
add
mov
mov
mov
add
sub
sub
add
add
add
mov
mov
mov
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
add
sub
add
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
mov
mov
mov
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
add
add
add
add
add
sub
sub
add
sub
add
add
sub
mov
mov
mov
add
sub
add
add
sub
sub
sub
add
add
add
add
sub
add
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
add
add
add
add
add
mov
mov
mov
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
add
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
add
sub
sub
sub
add
mov
mov
mov
add
add
add
add
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
sub
add
sub
sub
sub
add
add
add
sub
add
mov
mov
mov
add
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
sub
add
add
add
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
mov
mov
mov
add
add
sub
add
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
sub
add
sub
add
add
add
add
sub
add
add
sub
add
mov
mov
mov
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
add
add
add
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
add
add
add
add
mov
mov
mov
sub
sub
add
sub
sub
add
add
add
add
add
add
sub
sub
add
sub
add
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
add
add
sub
add
add
add
sub
add
add
add
sub
sub
sub
add
sub
sub
add
add
sub
sub
add
sub
sub
add
mov
mov
mov
add
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
add
add
sub
sub
add
sub
sub
mov
mov
mov
sub
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
add
add
sub
add
add
add
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
sub
add
sub
add
mov
mov
mov
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
add
add
sub
sub
sub
mov
mov
mov
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
mov
mov
mov
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
add
add
sub
sub
mov
mov
mov
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
mov
mov
mov
add
add
sub
sub
add
add
mov
mov
mov
add
sub
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
sub
add
add
add
add
add
add
mov
mov
mov
add
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
add
sub
add
add
sub
add
sub
add
add
add
sub
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
mov
mov
mov
sub
add
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
add
add
add
sub
add
sub
sub
add
sub
add
sub
sub
add
add
sub
add
add
sub
sub
add
add
sub
sub
sub
add
add
add
add
sub
sub
add
mov
mov
mov
sub
sub
add
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
add
sub
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
sub
sub
add
sub
sub
add
add
add
add
add
add
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
add
sub
add
add
sub
add
add
sub
mov
mov
mov
add
sub
sub
add
add
sub
sub
add
add
sub
add
sub
add
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
mov
mov
mov
add
sub
sub
add
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
add
add
add
sub
sub
add
sub
sub
add
add
sub
add
sub
add
add
add
sub
sub
add
add
add
sub
add
sub
sub
mov
mov
mov
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
add
add
sub
add
sub
add
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
add
add
sub
sub
sub
sub
sub
mov
mov
mov
add
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
add
add
add
add
add
sub
add
add
sub
sub
add
sub
sub
add
sub
sub
add
add
add
sub
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
add
sub
mov
mov
mov
add
add
add
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
add
sub
add
sub
mov
mov
mov
add
add
sub
sub
sub
sub
sub
add
sub
add
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
mov
mov
mov
add
sub
sub
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
add
mov
mov
mov
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
mov
mov
sub
sub
add
add
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
call
ret
