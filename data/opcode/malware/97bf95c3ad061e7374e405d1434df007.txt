sbb
add
mov
pop
popf
mov
ja
xchg
dec
ins
stc
add
fnsave
into
popa
out
shr
inc
imul
(bad)
and
sbb
sub
rcl
test
sahf
xlat
and
data16
or
jmp
sub
push
out
pop
imul
lods
mov
inc
into
adc
movs
(bad)
loope
imul
enter
mov
sti
jno
sti
push
push
aas
scas
inc
sbb
sbb
shr
sbb
pop
arpl
jp
adc
repz
repnz
icebp
jbe
inc
inc
jp
(bad)
ds
gs
pop
mov
jne
addr16
mov
in
mov
jb
fiadd
add
idiv
mov
and
mov
out
fmul
(bad)
jnp
xchg
xor
fwait
mov
mov
out
push
jecxz
sub
cmps
rcl
mov
daa
std
push
push
xlat
mov
repz
rol
cli
out
cmc
dec
or
push
add
maskmovq
not
push
loop
xchg
jmp
(bad)
xchg
pop
cmps
xchg
js
sahf
cmp
inc
mov
nop
xchg
mov
jl
pop
mov
mov
js
sbb
test
add
aas
jmp
sbb
add
test
add
out
or
or
imul
(bad)
aas
lea
aam
mov
(bad)
cwde
je
xchg
(bad)
fiadd
in
popa
fwait
shl
adc
jg
push
lds
sbb
mov
dec
adc
cmps
mov
sub
mov
cmp
out
mov
mov
mov
call
push
scas
jp
inc
mov
and
push
or
push
push
test
popa
ja
xor
inc
pop
(bad)
data16
mov
in
fisttp
lsl
jne
push
push
std
cmc
inc
xor
int3
stos
ins
cs
sar
sub
out
push
lods
jle
lahf
ss
cs
hlt
gs
adc
out
xchg
mov
int
sbb
jl
out
fidivr
xor
inc
lods
fldenv
imul
invd
daa
sub
pop
push
xor
sub
cs
fidivr
dec
rcr
push
loop
test
and
cmc
adc
jns
cmp
add
xor
stos
in
inc
(bad)
or
dec
mov
in
jmp
hlt
test
outs
pop
cmp
sub
mov
pop
test
rol
mov
mov
dec
loope
xchg
or
sub
sbb
inc
ret
lds
mov
arpl
cdq
add
xor
outs
or
push
ds
mov
or
adc
push
scas
imul
adc
retf
fcom
sbb
rcl
in
pop
arpl
mov
hlt
mov
push
lods
and
aad
ror
popa
imul
not
push
sar
cmp
fidivr
ins
mov
add
cmp
in
pop
icebp
jns
adc
sub
movs
rcr
aam
ret
jbe
movs
enter
outs
int
and
fld
pushf
hlt
loop
test
xchg
(bad)
int3
popa
add
nop
pop
lds
pop
or
push
cmp
xchg
push
mov
dec
retf
outs
cs
ja
jo
in
ds
mov
(bad)
push
cmc
mov
add
lock
(bad)
add
add
pop
sub
test
pop
aad
push
inc
retf
jb
xor
and
(bad)
fisub
cmp
and
stos
shr
call
das
mov
xor
fdivr
js
out
mov
les
or
std
cld
or
push
iret
pop
shl
retf
mov
inc
pop
jne
test
retf
cmp
(bad)
cmps
push
sahf
repz
push
jecxz
stc
pop
sahf
in
mov
pushf
nop
cmps
iret
shl
cmp
mov
xchg
fxch
push
jbe
mov
pushf
fadd
fcomp
sbb
lods
push
jmp
rol
lods
xlat
pop
cli
jnp
ret
out
adc
(bad)
js
shl
mov
in
jp
mov
fld
jmp
push
xchg
ret
mov
sub
enter
push
outs
xchg
xor
inc
popf
add
(bad)
outs
sar
push
xor
arpl
jmp
add
in
cli
loopne
push
das
add
outs
push
add
adc
xchg
std
pop
arpl
add
push
cld
jp
mov
lea
adc
pop
in
je
retf
in
pop
ret
cmp
pop
jae
or
inc
pop
sar
call
test
cwde
mov
push
(bad)
or
cs
dec
ret
mov
test
jmp
in
push
add
jne
xchg
mov
outs
inc
cli
jg
cld
xchg
xor
pusha
mov
sti
repnz
test
fxam
push
push
cmp
ret
stos
mov
add
push
xchg
lods
(bad)
imul
rcl
add
cdq
stc
or
out
in
loope
es
cs
call
adc
(bad)
outs
call
pop
cmps
add
mov
fimul
ins
and
pop
mov
out
fucom
push
(bad)
lock
or
xor
mov
jo
(bad)
jg
or
adc
out
aam
xchg
and
cmp
pop
or
xchg
popf
call
enter
dec
shl
mov
inc
xor
fwait
or
and
push
fs
cmp
dec
adc
stos
inc
(bad)
and
ret
cmp
cmp
cmp
push
pop
cmps
push
push
push
loop
adc
pushaw
or
div
cwde
repnz
and
jns
xchg
pop
jle
popf
dec
push
mov
rcr
push
push
sub
popf
adc
mov
add
xchg
mov
cmp
mov
bound
jmp
adc
push
mov
mov
mov
push
fidivr
mov
fcomp
sub
sbb
cli
adc
leave
call
neg
retf
mov
fstp
dec
mov
xchg
adc
cdq
(bad)
js
and
jmp
mov
and
loope
dec
pop
jge
xchg
inc
mov
or
pop
jmp
adc
data16
mov
ret
adc
mov
and
xor
mov
mov
cs
retf
rcl
scas
inc
shl
xor
cmps
mov
aaa
sbb
push
ror
xor
jns
fs
sub
xlat
mov
out
push
mov
imul
mov
mov
cmp
pop
push
test
or
enter
test
retf
int3
pop
push
sub
add
fild
sub
mov
xor
aas
enter
aaa
test
lods
mov
adc
or
cli
or
loopne
mov
cmp
xchg
add
or
push
rcl
pop
fs
hlt
ins
mov
inc
div
(bad)
jmp
in
xor
stos
lahf
mov
cmp
pop
sub
mov
add
fnstcw
mov
mov
mov
mov
pop
xor
fs
adc
rcr
cld
push
ror
mov
mov
jo
push
inc
arpl
jg
je
daa
adc
sbb
adc
gs
add
add
cmps
pop
daa
add
push
daa
mov
fisub
mov
xchg
lea
(bad)
fldenv
push
jns
lahf
test
dec
mov
mov
push
add
ficom
pop
stos
xchg
pop
push
xor
jbe
xor
pop
jne
or
jae
icebp
ret
inc
mov
scas
out
pop
cs
pop
cdq
in
cmp
leave
mov
mov
fnstsw
dec
xor
adc
add
scas
jl
rol
repz
loopne
aaa
push
pop
fs
mov
popf
cmp
xlat
test
enter
out
aad
mov
or
ret
pop
or
mov
jo
(bad)
dec
stos
neg
pushf
lods
out
cmp
xor
xor
xchg
pop
mov
stos
imul
xchg
in
adc
jecxz
(bad)
sti
cmc
retf
and
retf
aad
jle
repz
lahf
xchg
or
icebp
cmc
pop
ret
mov
fcomp
pop
add
dec
popa
jmp
cmp
mov
and
ret
mov
push
dec
sub
loop
cmp
mov
fnstenv
pop
mov
jl
ret
xchg
cmps
data16
or
adc
xor
cmp
pop
dec
push
mov
fst
loop
adc
pop
push
and
rcl
nop
sbb
jb
pop
loope
ret
cmp
inc
imul
fwait
loope
pop
cwde
cld
stos
fstp
int
mov
aam
jecxz
pop
push
mov
inc
mov
leave
sbb
cld
mov
push
xchg
xchg
data16
pop
out
popf
fmul
add
or
push
mov
jge
xchg
fwait
push
push
(bad)
ins
dec
aaa
jp
pop
adc
jns
xor
enter
sbb
and
sub
sar
in
sub
xchg
movs
mov
and
rcr
xchg
arpl
or
movs
cmp
cmp
mov
jge
push
dec
sbb
mov
and
addr16
ins
jmp
aas
push
jmp
jmp
retf
dec
loope
fisttp
ds
adc
xor
sub
fnstenv
mov
dec
ins
movs
push
inc
bound
icebp
dec
pop
pop
sbb
sbb
mov
sbb
aas
mov
push
lods
pop
jbe
xchg
jo
and
push
scas
or
pop
mov
test
repz
dec
popf
movs
cmps
loope
mov
or
mov
mov
fst
sub
je
test
rol
retf
mov
jns
and
mov
movs
retf
mov
mov
in
pop
sub
dec
jmp
push
adc
into
jno
xor
jo
jmp
mov
pop
popa
mov
dec
imul
(bad)
rcl
inc
mov
ins
imul
call
bound
mov
das
cdq
xor
push
loop
idiv
mov
dec
in
or
push
jo
movs
sbb
movs
into
inc
mov
ins
cwde
pop
es
cdq
bound
(bad)
pushf
mov
xor
nop
xor
aaa
loope
imul
jl
cli
push
clc
xchg
mov
cmp
inc
bound
mov
aad
mov
pushf
jl
aam
jmp
xor
into
cmp
repz
pop
pop
sub
xor
push
push
ss
jecxz
push
sbb
add
jle
or
or
inc
leave
repnz
jne
cmp
iret
inc
push
es
mov
jnp
sar
pop
jae
pop
mov
mov
xchg
mov
mov
(bad)
xchg
adc
fst
cmp
dec
push
inc
cmp
mov
test
dec
pushf
or
xchg
iret
xchg
pop
push
xor
dec
push
mov
mov
es
in
jp
stos
fstp
jne
and
or
mov
test
push
retf
sbb
dec
push
mov
mov
cld
out
pushf
push
mov
hlt
data16
fs
fldcw
cld
jl
cmp
retf
mov
cmp
(bad)
mov
jns
lahf
into
push
clc
lock
retf
pusha
push
sbb
push
pop
add
sar
sub
ret
stos
lock
les
add
(bad)
fisubr
imul
lea
gs
inc
mov
adc
and
mov
cmp
push
jmp
icebp
sti
jmp
arpl
iret
inc
repz
pop
add
push
mul
pop
mov
cmp
mov
ret
repnz
rcl
out
arpl
(bad)
scas
inc
cli
icebp
sbb
(bad)
pop
outs
mov
push
xchg
add
stc
xor
ret
and
je
fnstcw
fdiv
push
loop
inc
mov
and
popf
sub
and
test
mov
fist
cmp
xor
aaa
shl
inc
sub
mov
adc
sub
pop
(bad)
adc
stos
lahf
stos
mov
icebp
frstor
cmps
push
cli
popa
aam
lock
cmp
das
addr16
push
pop
ss
xchg
sub
repnz
xor
sub
sbb
pop
lahf
inc
pop
dec
out
loop
(bad)
mov
adc
xor
pop
adc
sub
test
dec
xchg
sahf
das
pushf
push
sbb
sbb
into
imul
sub
dec
fprem1
xchg
xor
or
cld
fwait
rcl
inc
cld
adc
cld
or
push
ja
pop
into
popf
call
aaa
cdq
pusha
fs
outs
push
hlt
or
fmul
sbb
std
jne
push
or
and
push
out
xor
push
out
mov
add
or
mov
leave
push
lods
mov
sar
mov
fistp
xor
cmc
cmp
lock
ss
jne
mov
push
sahf
iret
sub
xchg
rcl
jmp
xchg
gs
sbb
stc
pop
inc
and
loopne
push
mov
pop
adc
dec
cmp
push
xchg
cmpps
rcl
cmps
dec
into
data16
push
cs
mov
add
jg
retf
and
aam
ror
adc
sub
cmp
cmp
out
or
lods
inc
(bad)
cdq
mov
xchg
mov
mov
repz
add
jne
and
push
inc
pop
jbe
jnp
xchg
pop
xor
jmp
mov
push
xchg
sbb
arpl
mov
fdivr
in
mov
int3
jp
adc
inc
xchg
push
fsubr
push
mov
dec
push
xchg
cs
stc
xchg
cwde
enter
fptan
mov
(bad)
lock
(bad)
je
jo
cld
jo
push
or
mov
fsub
in
mov
xchg
sar
cmp
shl
xor
dec
mov
mov
sbb
mov
mul
nop
push
cmp
sbb
(bad)
repnz
or
sub
cmp
stos
mov
xchg
cmp
pop
movs
jmp
cmps
mov
xchg
pop
cmp
jae
fwait
(bad)
adc
aaa
ss
xchg
lods
add
and
or
sub
xchg
xchg
add
xchg
je
xchg
xchg
pop
xor
add
inc
cmp
lods
mov
add
mov
outs
xor
icebp
adc
gs
ret
jecxz
dec
leave
js
xchg
gs
fstp
jae
in
and
loopne
in
adc
or
dec
popf
fs
lods
push
sbb
mov
add
shl
mov
cdq
mov
push
mov
add
xchg
daa
stc
lock
push
(bad)
imul
jb
cld
popf
popa
addr16
lock
sbb
dec
gs
addr16
(bad)
les
mov
inc
shl
aam
call
(bad)
push
inc
ret
jl
jcxz
jne
jge
add
push
inc
adc
mov
jae
fs
push
retf
jnp
ja
sbb
clc
sub
push
sub
jno
jle
js
xor
cmp
jl
adc
jecxz
sbb
(bad)
cld
push
stos
cli
and
mov
dec
jo
(bad)
mov
xchg
sub
jae
repz
cmp
mov
jne
arpl
rcr
or
jp
jo
popa
pop
das
jno
std
jbe
pusha
sbb
sbb
pop
fiadd
test
loope
in
sbb
fwait
pop
cdq
mov
arpl
push
ret
dec
pushf
cmp
mov
xor
pmullw
cmp
mov
push
push
xor
mov
inc
es
push
jp
in
pusha
int
neg
in
pusha
push
jecxz
ficomp
jge
mov
adc
xchg
inc
jns
and
stos
mov
int
bound
xchg
out
in
call
popf
retf
repnz
gs
adc
(bad)
stos
fdivr
mov
mov
xor
stos
cld
jmp
or
push
jge
add
sar
aas
jb
and
push
cmps
in
sbb
fisubr
outs
inc
inc
movs
pop
scas
popa
arpl
inc
push
mov
cs
sub
push
xchg
ins
adc
jecxz
ins
pop
ss
and
mov
push
jp
dec
int
and
xchg
dec
movs
fs
enter
rcr
in
jne
cmp
lock
jo
ror
jnp
pushf
out
mov
in
push
push
jle
bound
es
lods
mov
adc
pop
sub
leave
rol
or
and
pop
int3
cmp
nop
sbb
test
popf
dec
sbb
inc
aam
adc
add
or
pushf
sub
fistp
cmp
xchg
test
sub
dec
scas
fld
inc
out
mov
pop
jo
out
scas
sub
pop
dec
fld
pop
push
add
std
pop
(bad)
jg
mov
(bad)
in
adc
mov
sti
or
out
bound
es
cmp
sar
mov
cmp
je
in
call
cmp
adc
inc
sbb
mov
or
aaa
cmp
mov
pop
dec
lea
popf
inc
je
stos
cmp
xchg
loopne
mov
out
sahf
add
push
or
(bad)
xchg
and
mov
cmp
and
mov
imul
pop
dec
popf
xchg
sub
mov
(bad)
sbb
or
jmp
push
stos
ds
xchg
sub
cwde
cmp
dec
mov
sbb
inc
not
repz
xchg
(bad)
cmps
add
es
push
test
cli
sahf
aas
add
dec
xchg
imul
pusha
push
fisttp
xchg
outs
cld
inc
test
stos
movs
inc
stc
inc
stos
pop
das
inc
sar
mov
cmp
push
xor
in
cmp
dec
add
dec
ss
mov
in
pop
jg
and
add
sbb
jge
in
(bad)
pmullw
jge
pusha
pop
loop
in
add
adc
jmp
mov
(bad)
mov
pop
adc
or
in
xlat
pop
dec
jmp
mov
inc
jb
aad
mov
push
loopne
jmp
add
push
and
or
ret
cli
dec
arpl
in
repz
cld
mov
cmp
pushf
mov
movq
push
cmps
jmp
aas
cwde
lods
scas
cs
std
lea
lods
rcl
mov
or
push
mov
das
pop
addr16
pop
pushf
fs
sub
pushf
dec
out
sub
xchg
fcomp
pop
inc
std
jg
xor
jnp
xchg
mov
addr16
stc
in
(bad)
arpl
xor
xor
fs
and
pop
ret
mov
add
push
and
cld
add
pop
call
push
xchg
cmc
mov
fdivr
add
cli
jnp
ret
jmp
pop
jnp
fimul
lods
enter
add
jne
leave
lods
fcomp
lds
cmp
call
fdivr
shl
movs
xor
dec
das
sub
nop
jmp
sbb
sahf
lods
cmp
leave
cdq
cmp
and
mov
mov
out
pop
pusha
mov
aaa
int
sar
arpl
push
(bad)
or
cmp
jmp
jmp
jge
mov
(bad)
arpl
aaa
stos
test
dec
and
xor
(bad)
fcomip
pop
aam
push
cs
mov
mov
inc
ins
ins
cdq
add
xor
stos
out
icebp
cmp
cs
imul
popf
dec
push
fcomp
sbb
xor
std
sub
pop
xchg
cmp
dec
dec
cs
dec
jns
adc
sub
or
and
jl
pop
mov
rcr
cld
mov
aaa
cmp
inc
dec
or
les
leave
and
push
imul
add
xor
jmp
inc
jmp
xchg
rcr
cld
mov
and
jno
dec
icebp
jmp
mov
xchg
fistp
sub
xor
loopne
data16
out
lea
jb
jp
popa
nop
sahf
int
leave
loop
or
dec
ficom
jbe
mov
push
add
fst
or
push
cli
(bad)
or
leave
dec
adc
jmp
out
pop
call
outs
leave
fistp
mov
(bad)
mov
adc
mov
mov
mov
movs
pop
sbb
sbb
dec
clc
jo
pusha
out
mov
dec
pop
fnstcw
ficomp
pusha
enter
(bad)
ficomp
or
mov
lds
mov
enter
sbb
aas
cmp
mov
cmp
mov
clc
mov
sbb
and
(bad)
sar
repnz
ins
pop
xor
pop
or
jl
mov
xor
cmp
cdq
jb
jl
jg
sub
je
sahf
rcl
mov
pop
mov
sbb
xchg
or
sbb
repz
adc
mov
mul
lea
imul
sahf
std
mov
push
cmp
es
test
paddq
jge
xchg
and
jp
cmp
inc
jge
inc
imul
outs
aas
and
xor
loopne
pop
int3
push
call
cmp
xor
mov
xor
les
inc
outs
push
mov
cmp
fidiv
loop
sub
dec
xchg
ja
aad
pop
mov
and
add
pop
push
jge
movs
mov
aad
retf
mov
add
cwde
cmps
repnz
movs
sti
das
pop
loope
daa
lods
loop
dec
xchg
pop
jmp
xchg
adc
mov
data16
hlt
icebp
xchg
mov
push
dec
sub
push
nop
mov
imul
fstp
pop
leave
push
adc
fcomp
cwde
das
cmp
jp
adc
xor
aad
cwde
aam
jl
pop
xor
nop
(bad)
push
xchg
push
int
cmps
iret
or
dec
dec
push
clc
scas
arpl
inc
sub
into
mov
pop
into
test
faddp
(bad)
clc
outs
test
and
enter
hlt
cld
cmp
nop
hlt
stc
xchg
fwait
out
data16
imul
add
arpl
add
movs
sbb
neg
mov
cwde
(bad)
aas
fld
or
xor
xor
mov
dec
or
push
gs
sbb
or
repnz
xor
outs
stos
out
and
xor
adc
outs
adc
pop
fwait
inc
les
push
xor
(bad)
mov
mov
adc
dec
cmps
pop
cmp
mov
xor
mov
les
stos
out
imul
xor
push
and
dec
and
cli
ins
out
test
aas
and
test
xor
jmp
mov
jo
daa
or
add
rcr
push
or
fild
enter
xchg
fwait
push
cmc
push
add
je
adc
mov
scas
fiadd
sbb
xor
lods
leave
jp
sub
shl
push
(bad)
(bad)
jmp
std
mov
cmp
addr16
jno
push
mov
adc
je
xchg
ins
rep
inc
aas
rcl
xor
out
jg
and
dec
shr
nop
ror
mov
mov
aad
inc
sar
popa
les
adc
repnz
sub
add
rol
int
or
push
mov
out
loop
fwait
or
and
xchg
fwait
and
and
daa
cmp
adc
sbb
cmp
icebp
pop
push
xor
dec
pop
arpl
jmp
and
add
loopne
sub
mov
push
xchg
mov
lea
cwde
pop
xchg
mov
xrelease
xor
pusha
pop
add
jbe
es
dec
xchg
into
and
jmp
mov
mov
imul
aaa
push
lods
or
cmp
cmc
fistp
pop
bound
leave
fs
test
pop
js
call
pushf
xor
sub
xchg
pop
dec
daa
das
(bad)
fxtract
dec
xchg
repz
scas
inc
xchg
data16
cwde
inc
jne
retf
es
pop
stos
jmp
push
mov
sbb
lock
nop
push
test
fcmovb
rcl
jmp
lods
pop
fs
dec
dec
mov
sbb
call
test
inc
loope
ror
jne
cmp
xor
pop
add
ds
call
add
cmps
sub
loopne
dec
mov
lods
out
adc
inc
(bad)
test
pusha
lock
sbb
sbb
xchg
mov
mov
sbb
inc
int
fld
neg
mov
xor
sub
mov
ins
push
data16
and
lahf
aaa
int3
enter
das
jno
pushf
cmp
jo
sub
jmp
and
pop
call
stc
jmp
xor
add
aad
sahf
add
popf
mov
test
jae
ins
push
mov
shr
adc
dec
mov
repnz
popf
inc
xchg
out
sar
sbb
push
cmp
cs
dec
xor
sar
xor
or
jp
sbb
add
inc
xor
jmp
not
mov
sub
inc
jmp
fcomp
dec
mov
xlat
mov
sub
ins
or
ins
dec
in
mov
fisub
scas
adc
aam
mov
enter
add
sahf
rcr
sahf
inc
in
loop
imul
ret
pop
test
jo
shl
scas
(bad)
mov
xchg
les
not
retf
dec
xchg
add
cld
jg
inc
lock
das
aaa
loope
lds
adc
jbe
cwde
dec
adc
cmp
icebp
in
in
sub
ins
dec
inc
movs
jo
push
rcr
fild
out
test
(bad)
inc
std
stos
and
mov
cmc
dec
retf
fisub
inc
cmp
xor
mov
clc
adc
test
sub
scas
lods
pop
out
or
add
sbb
lahf
push
repz
cmp
push
cwde
mov
pop
test
mov
dec
out
test
mov
jecxz
lods
imul
sub
xchg
and
loope
test
xchg
repz
or
sti
xor
sbb
neg
das
(bad)
loop
mov
repnz
pop
mov
inc
test
ret
clc
fist
or
adc
fucomi
aam
jmp
or
fs
adc
sbb
sub
in
aas
jae
daa
push
or
cmp
add
push
(bad)
aam
fcmove
pushf
and
jbe
lock
imul
(bad)
dec
jmp
loope
sub
fidiv
cs
fsubr
movs
push
and
icebp
jns
push
xchg
or
push
mov
or
xchg
jae
iret
or
lods
neg
aad
xchg
mov
scas
iret
mov
cmps
mov
add
dec
jmp
addr16
scas
cli
inc
push
cdq
cwde
push
cmp
addr16
sub
ins
and
fldcw
xor
or
pop
cmps
jbe
mov
lea
xchg
mov
repz
scas
sbb
aaa
cmp
cmp
test
mov
and
xor
and
adc
adc
or
add
stos
mov
into
addr16
jmp
mov
and
jo
mov
sub
loope
(bad)
xor
jnp
mov
mov
cli
addr16
pop
or
push
aad
vmaxss
mov
dec
mov
push
mov
and
add
push
stos
cmp
inc
mov
xor
in
inc
push
sbb
popa
arpl
push
and
call
inc
in
ror
mov
test
mov
(bad)
ror
cmps
inc
shr
mov
push
out
call
jno
mov
add
test
ret
dec
xor
(bad)
mov
or
cs
xchg
std
addr16
ror
repnz
jo
xor
jae
test
test
sbb
out
pop
aam
push
dec
lods
jb
je
out
add
or
or
jnp
cdq
xchg
sbb
pop
lods
inc
xchg
mov
push
lahf
movs
in
add
and
loopne
or
jge
jmp
ficom
je
inc
ret
lods
dec
xchg
push
ja
lahf
ins
stc
jb
mov
pop
pushf
imul
inc
ss
ror
push
jmp
sub
adc
jns
inc
movs
outs
mov
dec
add
enter
jne
clc
add
fmul
add
les
push
push
xor
jle
ja
out
stos
popa
cld
dec
lahf
mov
xchg
(bad)
sub
mov
fwait
jnp
faddp
fwait
sub
mov
mov
pop
xchg
sar
mov
inc
out
addr16
ret
lea
push
call
and
dec
mov
cs
sub
in
cmps
and
ret
fild
gs
sbb
and
aaa
cmc
or
jno
mov
cmp
aas
mov
jmp
aas
cs
mov
cmc
and
lock
bound
pop
xchg
pop
ss
mov
in
cld
gs
cmp
test
sbb
shr
retf
push
fadd
mov
and
sbb
daa
mov
and
stos
cdq
adc
fistp
jmp
les
push
ins
call
fwait
adc
ficomp
rcr
hlt
dec
xor
test
(bad)
ror
mov
fwait
aas
pop
pop
or
lods
push
xlat
gs
pop
outs
imul
sub
cmp
ins
push
sub
sar
inc
stos
(bad)
or
dec
jmp
repnz
repz
or
jl
lock
(bad)
ss
add
xchg
js
and
or
pushf
xchg
stos
mov
hlt
loopne
je
mov
and
hlt
adc
je
sti
push
bound
push
cld
enter
jo
push
out
jle
sbb
push
add
sub
scas
add
imul
adc
add
fsubr
test
lock
test
inc
adc
test
jnp
repz
cmp
inc
cmp
adc
sub
ss
add
jle
dec
and
jae
jnp
das
pusha
ins
pop
pusha
mov
sti
leave
inc
mov
add
push
cmps
pop
cmp
sbb
push
sahf
xchg
js
cmp
jl
add
sbb
xchg
push
and
cmpxchg
dec
dec
sub
lahf
das
or
mov
jbe
ss
in
sti
push
daa
test
cdq
psadbw
adc
mov
movs
rcl
sub
icebp
out
imul
xchg
scas
movs
jns
icebp
fistp
sbb
ror
add
jmp
repnz
sub
rcl
mov
es
out
mov
sbb
mov
adc
test
jne
ss
add
push
cli
icebp
push
mov
and
push
outs
sbb
cld
ins
repnz
pusha
hlt
mov
add
aas
das
scas
in
daa
shr
dec
mov
cmp
inc
popa
aad
pop
std
inc
dec
push
xchg
inc
or
sbb
adc
cmp
imul
(bad)
hlt
test
jno
std
jbe
cmp
popa
mov
add
sub
retf
das
loopne
inc
ds
pop
jne
add
mov
mov
aas
js
mov
mov
dec
cs
mov
dec
add
mov
test
cld
xlat
out
inc
in
pushf
xor
les
pop
ror
mov
cmp
test
out
dec
xchg
(bad)
jmp
nop
(bad)
into
adc
(bad)
pop
call
xchg
add
add
mov
addr16
ja
mov
retf
mov
retf
fwait
or
push
mov
pop
inc
fisttp
push
test
mov
pop
ret
xchg
sbb
call
in
mov
pop
jbe
inc
push
lea
sub
icebp
jns
pop
stos
test
into
push
pop
mov
cmp
(bad)
sub
add
lds
adc
test
sar
fnstenv
test
jg
mov
mov
xor
xchg
mov
and
xchg
pop
mov
xor
push
rcr
adc
jne
mov
(bad)
ja
push
leave
inc
add
int3
or
cmp
pop
jae
les
sub
lods
jle
mov
and
push
sub
stc
pusha
ss
xchg
repnz
lahf
add
add
or
add
add
lock
mov
adc
aas
nop
stc
int
or
not
jmp
sbb
sub
add
push
mov
or
into
pushf
push
mov
or
cmps
out
xlat
(bad)
bound
in
push
div
ins
adc
sub
inc
imul
xor
dec
ret
mov
dec
fistp
mov
das
jns
ins
dec
mov
inc
xchg
stos
mov
lock
mov
scas
sbb
(bad)
xlat
les
add
clc
sub
movs
push
iret
dec
lea
sbb
aad
and
movs
jns
dec
dec
mov
pushf
cmc
inc
call
sti
dec
mov
data16
ror
jecxz
push
mov
xchg
je
and
(bad)
mov
sysenter
daa
ficom
test
jno
sub
sar
dec
hlt
pop
cmps
mov
mov
ror
mov
aad
dec
mov
pop
inc
xor
(bad)
aam
enter
xor
movs
retf
xchg
xchg
inc
(bad)
adc
dec
in
cwde
stos
lock
mul
out
stos
cwde
push
imul
ds
fidivr
jb
mov
mov
add
adc
stc
sti
xchg
dec
out
inc
inc
mov
sar
rcl
push
(bad)
jl
inc
mov
jl
sbb
sbb
outs
scas
scas
mov
lds
enter
sti
aam
loop
sbb
cvttps2pi
cmp
gs
xor
jge
sub
pop
dec
sbb
rcl
js
jns
jge
sbb
pushf
ja
nop
ret
test
fcomp
ss
js
and
mov
sbb
stc
mov
sti
push
mov
pusha
outs
xchg
or
xchg
add
imul
movs
add
sub
xor
adc
scas
mov
call
adc
dec
aaa
mov
ss
jae
div
push
or
lea
aaa
mov
fimul
jnp
inc
sub
clc
push
shr
fist
imul
call
ja
rcl
push
mov
in
xchg
ds
shl
aad
xchg
aaa
popf
test
loop
adc
shl
into
jg
push
jo
cmp
ds
mov
mov
dec
or
cmps
mov
imul
repnz
iret
jle
enter
pop
nop
jmp
test
cmp
dec
mov
aas
pop
mov
fist
cmp
mov
xchg
pop
pop
xlat
or
dec
pop
fcom
push
adc
add
push
scas
dec
enter
inc
cmp
adc
sbb
retf
cmp
mov
fisttp
xorps
cmps
xor
mov
adc
sahf
xor
mov
(bad)
in
pop
ds
mul
cmp
mov
and
(bad)
out
aad
cmps
test
jns
mov
into
or
mov
cmp
push
cmps
jb
shl
fdivr
lahf
(bad)
std
out
test
pop
adc
bound
xlat
push
xchg
clc
push
scas
in
out
xor
cmp
stos
(bad)
ja
cmps
ins
mov
push
add
arpl
cmc
movs
popf
ss
and
dec
mov
sbb
adc
cmp
dec
adc
dec
inc
lahf
sub
add
mov
leave
mov
sub
jbe
(bad)
sbb
sub
push
aad
enter
push
out
push
rol
cld
ds
fisub
jge
lock
push
clc
pop
jmp
pop
add
es
dec
sub
imul
loope
sbb
stos
ficomp
lds
repz
jnp
add
xchg
je
pop
sub
add
or
xor
int
or
mov
dec
inc
xchg
je
xor
int3
xor
(bad)
cdq
pop
sbb
cdq
jg
cs
jg
dec
cmc
mov
inc
repz
arpl
test
mov
lods
xlat
inc
in
not
jbe
sti
stos
movs
les
bound
push
adc
push
mov
imul
fdiv
mov
pushf
sub
push
sub
lock
mov
adc
add
mov
mov
out
mov
std
hlt
mov
cmp
imul
fwait
sti
xor
lahf
mov
cdq
and
pop
dec
dec
adc
fld
push
ss
scas
sbb
cmp
in
xchg
popa
daa
arpl
mov
jmp
mov
xor
rcl
cmps
add
adc
cmp
call
pop
push
and
or
out
iret
inc
aam
inc
sub
(bad)
mov
lea
and
push
es
aas
push
out
out
sbb
stc
cmp
sbb
add
pop
test
jb
shl
add
(bad)
retf
add
retf
ja
inc
arpl
es
inc
dec
mov
inc
jp
mov
sub
mov
pop
xchg
jl
add
dec
xchg
xchg
add
imul
scas
mov
cmps
mov
ret
std
jnp
mov
scas
pop
jmp
es
and
cwde
imul
pushf
xchg
push
loop
jbe
stos
xor
mov
pushf
xor
(bad)
mov
jecxz
mov
sub
cmps
(bad)
cmp
jge
adc
leave
xchg
and
add
and
xchg
(bad)
stos
jo
sub
mov
je
pop
std
pop
adc
cmp
jge
pop
push
(bad)
mov
imul
sub
in
(bad)
jmp
hlt
pushf
cmp
pop
std
mov
xor
stos
pop
cs
fs
(bad)
loop
leave
cmp
mov
fld
sbb
cmp
out
sub
hlt
xchg
repz
imul
adc
pop
cwde
jb
or
dec
xchg
jle
loop
loopne
sbb
sbb
adc
pop
adc
jae
aas
cmp
dec
mov
stc
sub
jmp
fild
div
in
clc
and
mov
dec
btr
jb
call
pop
retfw
dec
dec
sbb
add
scas
fisttp
push
pop
in
loop
ret
pusha
cwde
iret
jmp
icebp
js
stos
mov
mov
in
and
(bad)
jl
xchg
hlt
enter
add
mov
das
loopne
and
sbb
xlat
push
adc
push
hlt
sbb
in
mov
sbb
repnz
pop
sub
mov
jbe
repnz
gs
fsubr
fadd
shr
ret
cmp
iret
scas
jae
loopne
dec
sub
jmp
sub
jmp
sub
cmps
cmp
movs
rcl
das
popa
mov
retf
in
sub
mov
push
out
cmp
jns
mov
xor
imul
dec
mov
cmp
pusha
in
or
loop
or
int
jecxz
sub
sub
rcl
sub
dec
or
rcr
pusha
push
ja
adc
enter
inc
jmp
push
add
shr
inc
inc
dec
pop
fucom
fwait
inc
popa
mov
mov
clc
jge
xchg
imul
cmp
mov
xchg
fwait
mov
jl
pop
cld
mov
in
dec
push
in
push
jo
cmp
cdq
popa
inc
cmp
xlat
dec
jecxz
pop
fbstp
rcr
sub
xchg
pop
or
or
mov
cmps
xlat
sbb
mov
fs
fidivr
xchg
nop
call
(bad)
inc
dec
jmp
outs
lds
push
push
adc
and
in
mov
movs
sub
ss
sub
jno
(bad)
pop
add
mov
sbb
push
jb
xor
add
in
hlt
mov
fwait
xchg
into
pop
loop
sbb
mov
fsub
push
pop
iret
outs
movs
ds
clc
mov
xchg
and
data16
(bad)
jmp
call
(bad)
inc
jne
movs
or
mov
mov
jbe
adc
fidivr
xchg
xchg
inc
jne
ins
mov
(bad)
cld
test
cmp
cmp
mov
adc
pop
jne
lods
lds
adc
mov
out
pushf
jmp
cmc
cmc
inc
out
in
cmps
arpl
into
xchg
das
fimul
adc
cmp
jecxz
sub
pop
cmc
lds
repz
sub
push
or
hlt
jecxz
loopne
call
pushf
push
ret
sub
(bad)
repnz
sbb
mov
(bad)
mov
push
add
stos
mov
ss
pop
test
xchg
mov
pushf
(bad)
in
aas
sahf
dec
dec
mov
aas
or
out
add
jb
push
xor
sti
scas
dec
dec
stos
bound
xchg
stos
cmp
mov
std
ins
cdq
cmp
jl
int3
fcom
fdiv
push
mov
pop
sbb
and
or
sbb
call
mov
dec
sbb
ja
lds
imul
(bad)
ss
sbb
sbb
das
jae
retf
inc
jle
daa
sub
aaa
pop
leave
retf
xlat
gs
mov
nop
clc
or
cmp
fstp
mov
(bad)
adc
inc
mov
xchg
push
imul
fistp
xchg
inc
and
test
push
das
mov
data16
xchg
or
aam
cli
push
ja
xor
jmp
retf
and
aam
aam
mov
mov
pop
xchg
ret
sbb
add
lds
push
adc
pop
fs
sbb
iret
push
mov
(bad)
adc
jmp
jp
retf
dec
cmp
rcl
popf
ffree
add
adc
call
mov
fwait
pop
(bad)
xor
lea
jmp
xlat
loop
adc
ret
rcr
mov
outs
(bad)
pushf
mov
mov
pop
shl
mov
pop
aad
ins
jecxz
pusha
(bad)
clc
outs
mov
test
cmp
je
jnp
fld
mov
jno
inc
js
bound
fs
loopne
mov
es
xchg
cmp
or
sbb
out
repnz
fnstsw
push
dec
inc
jns
fdiv
mov
cmp
jns
xor
inc
popa
(bad)
nop
pop
dec
dec
and
imul
jmp
pop
adc
bound
call
xor
adc
arpl
adc
call
rol
cmp
push
mov
xor
rcl
fmul
mov
nop
push
mov
push
xor
popf
add
mov
sub
retf
inc
push
adc
js
mov
cwde
sub
out
loop
push
test
movs
jmp
mov
int3
aaa
cmp
retf
and
fwait
lods
gs
xchg
cmps
loop
jp
mov
rol
push
fimul
(bad)
sbb
aam
ins
fisttp
mov
iret
repnz
dec
ja
ins
or
enter
clc
push
cmovbe
sbb
adc
adc
pop
cwde
mov
(bad)
arpl
jmp
arpl
leave
call
xchg
retf
dec
lods
sub
into
inc
or
mov
push
jae
add
add
out
mov
and
jmp
xchg
xor
pslld
adc
jg
sbb
inc
mov
imul
jecxz
mov
cmp
jp
aam
cmp
pop
cmp
sub
scas
(bad)
jle
sbb
mov
neg
outs
and
fild
retf
dec
sub
(bad)
adc
jb
or
inc
push
dec
jge
pop
cwde
cmpxchg
adc
add
cwde
xchg
mov
jle
jg
imul
or
in
adc
das
inc
fiadd
pop
adc
enter
ins
sbb
shl
int
jns
movs
mov
inc
push
lods
mov
mov
cld
retf
cmp
aam
cld
cdq
xor
repz
cmp
fistp
mov
mov
stc
cmp
out
dec
xor
jmp
and
cmps
mov
stc
icebp
xchg
out
not
jge
xchg
mov
adc
lahf
sbb
leave
test
cs
(bad)
sti
cmc
test
jl
mov
sti
ds
call
fstp
stos
(bad)
into
jnp
ds
push
(bad)
jno
and
cli
js
add
xchg
jecxz
xlat
fisub
out
pop
mov
dec
cld
sahf
sub
push
dec
inc
dec
js
jnp
or
jno
jo
rcr
dec
cmp
loope
cdq
outs
test
enter
ffreep
and
scas
mov
sti
enter
repz
test
cdq
xchg
or
into
jb
push
xor
jl
or
add
sub
mov
std
cmp
inc
adc
shl
das
retf
mov
pop
sub
outs
es
dec
add
dec
fnstsw
and
sub
(bad)
call
test
inc
scas
xor
bound
mov
xchg
ficomp
stc
mov
jge
call
mov
xchg
arpl
jb
loop
pushf
cmp
add
popf
mov
cmp
jmp
mov
or
sti
xor
sbb
or
jno
dec
and
stos
mov
test
jmp
mov
lock
(bad)
dec
arpl
clc
adc
shl
into
xchg
dec
je
out
xor
hlt
dec
movs
jle
les
cld
push
inc
sbb
push
les
lds
adc
dec
imul
fnstenv
stos
mov
sbb
and
shr
jmp
retf
movs
in
ja
arpl
inc
mov
jecxz
push
inc
jae
ret
xor
fs
lock
bound
cdq
scas
in
push
jnp
xchg
test
idiv
loopne
lea
xchg
mov
lock
sub
or
ret
and
inc
pop
les
ret
cmp
fdiv
sti
dec
bnd
icebp
fiadd
rcl
dec
pop
mov
lahf
rcl
fcmove
mov
jle
mov
cs
mov
sbb
ins
jns
das
clc
pop
cwde
inc
jno
fwait
cmp
adc
mov
ins
std
push
ins
das
add
xchg
mov
cmp
addr16
push
lock
mov
es
adc
pop
arpl
pop
add
jmp
push
les
out
inc
das
jmp
jae
(bad)
mov
ret
(bad)
pusha
outs
pop
mov
cmp
jne
pop
pop
jl
sub
(bad)
mov
enter
inc
add
pusha
adc
pop
das
xchg
mov
mov
pop
sbb
je
loopne
lahf
or
jg
or
sub
lods
jmp
jae
fild
mov
ds
sbb
xor
test
ins
push
ss
sti
dec
gs
mov
cdq
add
ret
jne
mov
daa
in
ror
jno
or
ret
xlat
mov
(bad)
movs
mov
outs
pop
push
add
push
sub
and
mov
in
pushf
push
push
pop
ret
stc
dec
int3
je
jns
ret
psubw
sbb
imul
int
stos
repnz
xchg
xchg
arpl
aaa
pop
jb
adc
int
int
cmp
jmp
mov
or
xchg
push
out
mov
fdivr
push
retf
ret
dec
fdivr
cmp
inc
push
out
dec
push
add
ret
push
and
ja
out
das
push
add
dec
pushf
pop
push
ss
(bad)
enter
sub
push
pop
pop
mov
and
sbb
sub
fwait
jecxz
mov
shld
add
add
adc
test
mov
add
sub
xchg
loopne
push
dec
cld
push
mov
lea
pop
add
dec
fyl2x
jo
call
in
and
sub
cdq
shl
sbb
das
repnz
cwde
pop
leave
pop
fcomi
mov
xor
push
inc
out
(bad)
mov
pop
mov
shl
pop
jge
test
and
sbb
or
push
sbb
pop
xchg
stos
mov
mov
mov
aad
sub
(bad)
adc
cmc
fisttp
iret
xor
mov
mov
jbe
dec
add
js
inc
dec
xchg
inc
or
pop
sub
(bad)
adc
dec
lock
fdivr
stc
inc
jle
int
add
lods
int3
pop
js
or
sub
xchg
int
add
test
cmp
mov
repz
loop
mov
retf
push
aas
shl
and
lock
or
test
mov
mov
enter
jae
movs
clc
rol
fsub
mov
and
pop
in
cmps
add
(bad)
jle
pop
ror
xor
push
push
call
mov
out
imul
and
cli
push
pushf
enter
sti
in
ja
out
call
ins
fs
out
mov
das
sub
cwde
ret
fs
shl
add
mov
jnp
dec
ins
mov
and
nop
outs
pop
out
xchg
jp
ins
das
(bad)
push
das
call
xchg
es
mov
add
jecxz
pop
out
loopne
inc
and
mov
xor
jp
mov
ror
sub
mov
and
push
mov
mov
mov
push
in
jmp
leave
xchg
js
fstp
jnp
jle
sub
adc
fwait
(bad)
aad
dec
xchg
cmc
xchg
cmp
cmp
push
sbb
mov
pop
sar
mov
jp
mov
xchg
repnz
xchg
mov
pusha
jbe
push
mov
and
jb
pop
adc
cmps
daa
sbb
stc
mov
inc
lock
xor
jmp
sahf
push
mov
add
fnstcw
mov
je
mov
aad
(bad)
in
pop
fnsave
inc
ja
hlt
lahf
and
fidivr
xor
inc
mov
test
xchg
push
add
cmps
or
push
cmp
dec
ss
inc
dec
push
cmc
fistp
and
pop
test
cdq
pop
loop
mov
xchg
dec
call
dec
retf
(bad)
mov
push
fnstsw
mov
jno
scas
outs
cmp
mov
xchg
and
in
ss
pop
xchg
push
or
in
(bad)
cli
mov
test
and
and
ins
mov
push
or
fst
pushf
jbe
pop
test
pop
mov
or
leave
aaa
jg
dec
mov
stos
pusha
test
push
inc
mov
mov
mov
sbb
imul
lds
popf
arpl
or
and
shr
pop
ror
fisttp
sbb
inc
ins
cdq
push
into
(bad)
icebp
lods
mov
push
mov
sbb
sub
pop
cwde
lea
or
fldpi
dec
sbb
sub
repnz
push
jbe
xor
(bad)
cmp
and
test
mov
and
test
add
clc
xor
outs
sbb
sub
xlat
adc
xchg
cmp
shl
movs
iret
ror
jno
std
aas
lods
jbe
fwait
mov
sub
pop
sub
in
aas
mov
int3
sahf
xchg
sub
jb
inc
xchg
mov
mov
sbb
adc
outs
xchg
iret
rcr
sub
neg
frstor
loopne
or
scas
sub
sbb
sbb
out
pop
daa
unpckhps
stc
jbe
mov
cwde
adc
adc
shl
dec
jl
cmps
js
cmps
inc
mov
jg
and
sbb
and
shr
aad
push
inc
sub
sbb
sub
daa
frstor
cmp
mov
repnz
xchg
dec
dec
sar
pop
pop
push
outs
out
aas
cmp
mov
sbb
enter
sahf
lahf
mov
daa
cmp
xor
push
cmp
sbb
xor
pop
repz
aas
jne
or
adc
dec
inc
pop
mov
leave
add
cwde
jl
jmp
and
lock
and
aaa
jns
sbb
jg
aas
fsubr
adc
push
sar
cwde
scas
sbb
stc
dec
imul
imul
ja
(bad)
addr16
out
sub
scas
sub
shr
jo
int3
mov
cmp
pop
add
dec
rcr
(bad)
add
punpckldq
adc
test
jae
inc
daa
pop
outs
std
(bad)
push
(bad)
mov
jne
movs
pusha
(bad)
mov
js
mov
and
dec
xchg
mov
dec
les
outs
lds
rcl
vpunpcklwd
rol
sub
push
mov
data16
or
cli
lds
xor
jnp
push
out
xchg
aad
scas
adc
mov
xor
shl
(bad)
push
sub
mov
dec
pop
scas
xchg
stos
mov
les
sbb
enter
inc
jmp
gs
pop
test
je
xchg
sbb
pusha
cmp
pop
push
cmps
cli
mov
pop
mov
lds
sbb
sub
jl
out
loope
lds
in
std
xor
sub
xchg
add
dec
fsub
inc
out
sub
lods
jecxz
jbe
xchg
inc
lea
addr16
sbb
mov
ret
dec
push
push
add
data16
lods
fsub
pop
cli
retf
fldenv
inc
push
and
scas
jbe
xchg
rcl
int3
inc
inc
and
ja
adc
ins
xchg
clc
nop
(bad)
(bad)
iret
inc
dec
hlt
leave
out
(bad)
xchg
and
jecxz
xor
jmp
xchg
push
cmp
mov
sbb
pop
icebp
push
pop
test
ins
jb
fcompp
in
mov
add
sbb
cmp
std
sbb
ror
cli
jl
mov
jnp
jbe
sub
mov
push
fwait
or
and
xlat
call
sar
dec
test
sub
xor
dec
xchg
pushf
frstor
inc
jmp
jbe
aaa
out
xchg
in
dec
mov
sbb
test
xchg
out
and
out
mov
jne
inc
fwait
push
push
aam
xor
pop
sbb
push
out
lds
es
jp
mov
mov
leave
sub
mov
out
add
ins
aam
push
xor
mov
shl
dec
add
bt
cmp
cwde
mov
int3
aas
cmp
adc
push
rcl
cmp
mov
repz
retf
les
fs
out
fild
push
adc
mov
mov
or
xchg
dec
xlat
int3
pop
add
xchg
fld
ret
jmp
adc
lock
cwde
rcl
inc
inc
aad
test
pop
mov
(bad)
push
hlt
loope
les
test
jecxz
xchg
mov
cmp
mov
test
pop
cmp
je
cmps
fld
jnp
mov
sub
fimul
sub
loope
cmp
lds
pop
cmp
sbb
das
shl
or
push
sbb
push
push
pop
bnd
mov
push
movs
hlt
test
mov
dec
daa
add
xor
pop
xor
out
mov
popf
dec
mov
aas
inc
aad
mov
push
outs
dec
pop
jle
jae
sti
sbb
add
push
sbb
scas
push
in
enter
and
ss
imul
mov
pmulhw
xchg
push
jbe
sbb
clc
push
sub
push
repz
mov
loopne
add
arpl
push
mov
sbb
push
imul
sub
mov
test
mov
adc
nop
fst
jae
push
mov
int3
rcr
or
pushf
sbb
rcr
pop
mov
dec
test
lods
and
leave
test
pop
out
data16
pop
imul
mov
sbb
jg
repz
out
aaa
or
fdiv
xchg
sbb
dec
test
dec
jmp
iret
jo
in
pop
in
sub
enter
pop
xor
fcomi
jnp
cld
jmp
pushf
push
inc
ds
(bad)
stc
xor
and
sti
dec
pop
dec
mov
popa
out
pop
not
ficom
stc
sti
test
test
imul
aam
mov
push
cld
adc
loopne
dec
and
push
cwde
imul
push
jl
loope
jecxz
adc
pusha
or
into
jp
(bad)
ror
inc
or
mov
xchg
cmp
ret
or
(bad)
jbe
xor
and
adc
ror
mov
aam
shl
adc
cs
stos
out
jbe
movs
in
fld
sbb
push
in
add
pop
pop
call
fstp
mov
jmp
lea
adc
sub
or
(bad)
out
imul
lds
push
jge
mov
sbb
pop
lds
mov
outs
test
sbb
inc
retf
call
bound
jmp
xor
movs
loop
xchg
add
xchg
inc
arpl
ror
add
mov
cmp
push
bound
fild
loope
jmp
dec
loope
push
cmps
aas
mov
inc
std
adc
fstp
inc
lods
add
jmp
cld
sti
xchg
sahf
repz
dec
push
aas
aas
bound
sub
sar
outs
repz
push
inc
cld
out
in
sub
push
sub
js
mov
jmp
sbb
pushf
pop
fst
inc
call
mov
cmp
mov
iret
xchg
retf
push
cmp
mov
outs
mov
rol
lods
fadd
dec
and
repz
scas
fiadd
lds
retf
mov
pop
xor
or
mov
sbb
pop
dec
in
rol
les
jmp
pop
inc
popf
push
mov
pop
mov
out
mov
pusha
dec
jo
mov
seta
pop
cs
jnp
mov
sub
icebp
mov
jmp
xchg
mov
sbb
retf
cmps
fcomp
aas
xor
inc
mov
pop
paddd
call
mov
cli
out
addr16
imul
inc
xor
mov
in
xor
outs
cld
mov
(bad)
pop
fst
stos
std
jb
xchg
cmp
dec
mov
fstp
xor
jl
mov
dec
retf
mov
dec
mov
jno
aam
fwait
sub
sbb
push
cmp
rcl
push
fmul
xchg
mov
jb
data16
push
jmp
pop
dec
in
aam
push
push
xchg
jp
xchg
fbld
inc
xor
imul
xor
in
mov
aas
ss
jbe
dec
xchg
jae
stos
xchg
sub
jbe
pop
in
jmp
call
xor
cmp
hlt
inc
push
mov
xchg
ret
fucomip
inc
sti
iret
test
push
aam
xchg
inc
fxch
(bad)
inc
or
je
inc
pop
sub
mov
cmps
stc
jmp
outs
test
cmp
mov
shl
sti
xchg
xor
mov
out
in
push
inc
fst
clc
push
push
call
sub
lods
adc
lods
fdivr
loopne
xor
scas
call
adc
retf
fwait
dec
lahf
lods
fcomip
test
jmp
bound
(bad)
adc
imul
dec
jo
iret
sub
hlt
mov
xchg
(bad)
test
sub
adc
sar
xor
cmp
idiv
jbe
pop
mov
and
jb
jnp
sar
mov
retf
call
ins
das
jp
and
clc
adc
in
and
jle
loopne
dec
sub
lods
and
jmp
nop
mov
sbb
pop
inc
movs
mov
push
sbb
xchg
jmp
pop
das
lea
sbb
test
inc
sub
inc
sar
cmp
out
pop
cdq
dec
repnz
(bad)
jmp
popf
dec
loope
jbe
(bad)
sub
(bad)
mov
nop
mov
ret
xchg
hlt
daa
dec
dec
aaa
cmp
cmps
pop
sub
imul
gs
repz
je
mov
mov
test
imul
push
mov
dec
fwait
imul
pop
mov
push
data16
mov
call
adc
lahf
xchg
fild
mov
fwait
jbe
inc
ret
push
cmps
push
pop
ins
fnsave
imul
stc
int3
or
jle
pop
cmps
ins
jae
loop
lea
ins
push
pop
mov
(bad)
jb
(bad)
push
sbb
fst
mov
inc
mov
outs
and
cmps
loope
shr
outs
out
outs
jnp
stc
mov
outs
aad
outs
dec
mov
sbb
mov
(bad)
xor
(bad)
in
test
and
retf
and
sub
pop
jne
data16
jp
sub
mov
dec
sbb
add
adc
jl
inc
push
nop
pop
call
in
mov
fidiv
adc
retf
pop
bnd
mov
(bad)
sub
das
fmul
popf
cs
arpl
lds
push
xor
(bad)
icebp
cmps
sub
shl
add
mov
outs
add
cmps
ins
and
mov
test
or
mov
mov
stos
sbb
dec
cmps
rol
add
mov
jno
push
outs
sbb
mov
dec
cmps
fsubr
out
je
in
push
loope
pop
loop
jns
mov
sub
icebp
jb
cmp
inc
push
dec
test
popf
dec
shl
call
and
js
pop
pop
jns
jo
test
jo
in
push
shr
jns
cld
jbe
xchg
or
fld
loope
mov
(bad)
mov
mov
out
mov
dec
sub
stc
(bad)
jg
repnz
push
es
sti
xchg
jmp
xchg
inc
aam
push
dec
(bad)
cmps
sbb
mov
ffree
add
or
mov
or
ret
dec
adc
mov
and
(bad)
ds
sub
aas
push
nop
fild
(bad)
and
lea
aad
jg
inc
loop
mov
sar
js
mov
pop
adc
cmp
idiv
xchg
aam
and
inc
cmp
ficom
mov
fdiv
iret
add
iret
test
xor
gs
clc
sbb
dec
sbb
test
mov
inc
jb
push
add
mov
fs
mov
lea
xchg
pop
fs
hlt
std
sbb
push
dec
pop
movs
retf
xor
je
in
and
enter
cmp
cmp
pop
mov
scas
(bad)
arpl
lahf
test
stc
pop
mov
mov
inc
jp
jne
or
xchg
or
mov
sub
call
dec
adc
or
outs
push
xor
fst
sub
inc
mov
cmp
add
ret
retf
pusha
es
ret
jns
data16
and
fdiv
cdq
pop
fcomp
cmp
mov
jp
xchg
(bad)
fs
imul
mov
cdq
xchg
mov
ds
les
pop
out
loope
out
loope
loop
mov
dec
cmps
push
lds
int
rol
ret
jno
jg
cmc
jge
jns
dec
ficom
bound
inc
sub
dec
cmp
ja
xchg
fisubr
(bad)
push
sub
sti
adc
or
push
cmps
inc
(bad)
xor
pop
outs
mov
mov
xchg
add
and
sbb
xchg
xor
ins
cmps
mov
clc
jb
repz
jo
xchg
scas
and
pop
aam
sub
cmps
fiadd
mov
xor
stos
lods
push
cld
jo
repz
cli
xchg
or
shr
adc
or
test
push
mov
aaa
push
jmp
sbb
mov
xchg
shr
lds
push
dec
lods
inc
in
shr
mov
(bad)
inc
and
clc
loope
icebp
xchg
cmps
dec
es
les
add
sbb
retf
cli
stos
push
jne
push
call
add
xchg
addr16
xchg
(bad)
xchg
and
jb
pop
rol
mov
mov
mov
mov
adc
jb
push
ins
int3
lds
pop
stos
push
adc
scas
movs
or
pop
ret
xchg
dec
cmp
pop
push
sub
add
adc
ror
inc
ins
clc
xor
xchg
mov
cmp
sub
push
pop
fucomi
fdiv
add
mov
cmp
addr16
push
sbb
mov
cmp
jae
cmc
xor
pusha
movs
sub
mov
jns
jne
call
movs
cmp
inc
iret
xchg
jnp
call
mov
in
popa
int3
sub
cmp
int
sub
test
jecxz
leave
cmp
lods
idiv
sti
retf
sub
xchg
dec
mov
std
jns
loopne
mov
out
jecxz
call
cmp
shr
mov
into
aam
dec
cwde
xchg
xchg
out
cmps
ss
xchg
jbe
pop
sub
mov
repz
pop
dec
into
jb
ins
mov
loopne
and
in
mov
mov
xchg
pop
jp
xor
les
adc
jg
jne
imul
xor
repnz
pop
sbb
adc
out
pop
leave
je
fimul
pop
mov
fcmove
nop
ror
push
test
xchg
xchg
sbb
mov
jo
jb
adc
xlat
mov
fisubr
(bad)
push
stos
aaa
jns
lea
sbb
outs
fcom
xor
enter
int
dec
dec
xchg
icebp
jle
hlt
aas
(bad)
pop
xor
jp
adc
pop
jl
sbb
push
dec
inc
jl
mov
mov
or
outs
ret
inc
popf
imul
rol
movs
mov
call
xchg
xchg
dec
cmc
in
or
cmp
push
add
int3
xchg
loop
fstp
and
cmps
mov
cmps
or
push
ds
clc
mov
div
les
sar
pop
(bad)
lods
or
jmp
fcomp
lahf
cmp
arpl
or
andnps
es
addr16
(bad)
xchg
call
test
jbe
test
fwait
xor
addr16
mov
data16
retf
mov
xor
mov
test
dec
cmps
pop
pop
test
movs
xchg
test
movs
xor
icebp
push
les
lods
es
test
inc
mov
pusha
push
das
sub
(bad)
daa
scas
cmp
push
das
push
(bad)
das
mov
inc
mov
mov
rcl
lahf
xor
aad
mov
mov
ds
sbb
adc
loope
sbb
dec
sub
cmp
mov
dec
sbb
dec
out
pushf
inc
xchg
pop
and
in
adc
rcl
daa
sub
xor
outs
and
in
inc
pop
push
and
sub
(bad)
xor
loopne
int3
push
adc
(bad)
mov
out
icebp
movs
jmp
movs
test
pusha
js
fiadd
push
jbe
dec
test
pop
aad
cli
(bad)
jns
(bad)
jo
jge
outs
mov
mov
(bad)
repnz
gs
and
icebp
test
sub
ret
mov
maskmovq
mul
cli
jae
loopne
movs
bound
lea
jmp
inc
add
sbb
sahf
jns
jmp
icebp
fldl2t
xor
es
dec
jecxz
ds
lea
fwait
js
in
stc
mov
lods
push
data16
addr16
inc
jecxz
fistp
stos
adc
nop
aas
call
nop
neg
and
pop
stc
fmul
cmp
nop
cmp
pop
shr
mov
xor
shl
pop
lods
pusha
cmps
out
push
mov
mov
test
add
push
sahf
cmp
sub
(bad)
push
jecxz
addr16
mov
and
sub
mov
mov
sbb
rol
mov
xchg
retf
cld
push
mov
and
jns
mov
mov
in
call
paddq
jae
cmp
outs
inc
dec
mov
movs
out
add
shr
push
xchg
lea
les
inc
cmp
mov
xchg
mov
sbb
push
dec
add
(bad)
aam
(bad)
pop
scas
ficom
das
xchg
push
aad
icebp
cmp
xlat
jmp
fnstsw
jne
mov
inc
pop
and
jne
xchg
retf
mov
mov
xchg
stc
lea
xchg
cmp
or
test
sbb
jne
xlat
jp
mov
out
jmp
aaa
loope
mov
lods
adc
or
inc
(bad)
mov
js
cmp
shl
pop
out
cmp
cmp
test
int
push
(bad)
xor
xchg
mov
cmp
cld
repnz
das
adc
xor
dec
popf
icebp
jb
dec
mov
int3
sahf
js
xor
sub
sbb
cmc
fsub
inc
cmp
fisttp
or
pop
xor
adc
jbe
call
(bad)
(bad)
inc
rcr
push
fld
sbb
iret
cwde
fcmovu
dec
rcr
clc
aam
call
mov
adc
out
call
push
(bad)
jns
xchg
jg
jae
inc
stc
or
cs
mov
xor
in
dec
test
cmp
fwait
rep
and
pop
aam
fmulp
cld
jecxz
jmp
test
idiv
out
and
icebp
adc
scas
fsubr
loop
mov
out
pop
sub
jne
aam
leave
and
mov
push
cli
inc
aam
cmc
or
arpl
push
in
jecxz
or
aaa
jno
dec
(bad)
sub
dec
sub
test
adc
fsubr
lea
push
outs
sbb
ret
loopne
loop
add
sub
daa
rol
cs
add
inc
sub
push
and
clc
cmc
lds
mov
jb
jb
push
cmps
es
mov
jle
xchg
dec
out
rcl
ds
(bad)
mov
es
xor
js
repnz
mov
loop
jg
into
mov
ret
cmc
jmp
sub
dec
ror
cmc
sub
mov
pop
and
dec
rcr
mov
push
adc
fucompp
xor
xchg
jns
cmps
push
jmp
call
mov
mov
jmp
call
movs
cmp
ins
mov
sbb
jbe
in
stc
sahf
loop
(bad)
sbb
xchg
jg
stos
retf
icebp
jle
push
test
sub
test
js
pusha
pop
and
mov
xor
mul
movs
lods
popf
and
jbe
lock
fsub
push
loopne
adc
test
pop
lods
in
mov
rcr
jmp
sub
std
adc
scas
sbb
pop
dec
ret
ins
les
xchg
arpl
push
add
mov
retf
adc
pop
add
js
inc
aam
xchg
jmp
push
push
lds
or
lahf
in
mov
call
sti
je
fldcw
sbb
adc
and
ror
dec
lea
mov
push
iret
xor
sbb
in
xchg
fcomp
cli
aaa
add
imul
mov
jb
adc
out
(bad)
aas
sub
ficom
jmp
scas
and
ins
in
xor
inc
cld
sbb
and
mov
dec
pushf
pop
cmps
mov
push
arpl
xchg
loopne
outs
adc
pop
mov
nop
fisub
inc
inc
mul
pusha
jmp
(bad)
(bad)
test
fmul
mov
jl
and
hlt
ins
mov
test
jp
sub
sti
call
out
fisub
sub
out
jno
adc
cmc
(bad)
test
push
cmc
cli
(bad)
ror
idiv
sub
sub
cmp
xchg
scas
enter
add
ins
iret
ins
push
fmul
sbb
mov
cmp
or
mov
add
test
sbb
xchg
popa
aad
pop
pusha
int
lahf
dec
aas
call
aam
ret
clc
iret
or
fwait
or
adc
xlat
sub
jno
adc
mov
in
push
mov
dec
or
adc
je
mov
sbb
inc
das
or
jne
mov
jmp
mov
cmps
aam
xor
push
les
shr
or
outs
pop
daa
movs
jne
scas
icebp
bound
and
adc
ja
sti
fcom
xchg
inc
int3
(bad)
aaa
push
xlat
jae
ret
les
push
std
mov
add
pop
out
sbb
out
shl
pop
xchg
imul
mov
pop
call
sbb
cli
out
fnstsw
push
test
outs
mov
outs
jg
sbb
(bad)
jno
or
(bad)
daa
test
call
lods
(bad)
popf
scas
jecxz
jle
in
fnsetpm(287
cmp
in
mov
dec
pop
push
and
jmp
mov
pop
or
icebp
cmp
push
jb
mov
popf
wrmsr
cli
movs
inc
mov
push
call
adc
mov
push
addr16
or
add
jb
sub
mov
data16
fnstsw
fwait
and
repz
sub
in
adc
lock
sub
ss
(bad)
jmp
cwde
inc
xor
stos
popa
out
mov
or
push
mov
(bad)
ror
xchg
sar
jno
inc
scas
gs
dec
pop
mov
ror
cmp
dec
adc
in
pusha
sbb
pop
jg
xor
sub
mov
icebp
imul
ja
aaa
ins
es
repnz
out
call
pop
mov
jbe
push
sub
push
sub
outs
jb
mov
add
xor
scas
mov
scas
adc
inc
retf
hlt
and
fnstcw
ins
xchg
add
sub
inc
mov
movs
and
jmp
lock
aad
idiv
fst
and
icebp
mov
jae
add
iret
and
cmp
data16
push
cmp
mov
leave
out
popa
out
mov
addr16
clc
push
imul
cld
repz
jo
push
dec
pop
(bad)
ficom
popa
ror
stos
(bad)
cs
xchg
sub
xor
div
in
jle
xor
arpl
jns
arpl
ins
dec
jmp
mov
call
xor
imul
xor
ret
pop
(bad)
aaa
sub
js
pop
or
fdivr
ja
sahf
retf
les
sbb
or
(bad)
aas
sbb
pop
test
jle
out
in
mov
outs
icebp
fmul
out
cmp
adc
add
push
loope
es
sbb
dec
jnp
sbb
add
mov
repz
pusha
xor
sbb
jge
int
mov
xor
xchg
lods
push
(bad)
cs
jmp
dec
std
xchg
mov
(bad)
xor
in
jbe
mov
or
js
mov
sbb
mov
dec
iret
inc
lahf
cdq
mov
test
les
fs
cmp
sub
sbb
dec
sbb
fisubr
outs
cs
pop
pushf
inc
repz
fcmovnb
fs
mov
out
mov
pop
inc
pop
sbb
adc
sbb
or
lds
xchg
jo
cli
sahf
(bad)
lea
mov
in
int3
jl
out
gs
and
das
movs
mov
scas
popf
mov
cmp
imul
xchg
mov
aaa
mov
test
or
addr16
add
jmp
adc
dec
sbb
dec
sub
adc
outs
adc
jo
mul
jo
repz
xchg
xor
ins
test
std
mov
ins
in
not
aad
jecxz
leave
mov
cmps
mov
mov
and
mov
push
mov
xlat
fwait
test
cmc
xchg
mov
cmps
jp
push
aad
retf
in
inc
scas
xor
in
arpl
cmps
push
adc
mov
call
fstp
dec
int3
jns
fsubr
pop
sub
js
mov
add
mov
call
inc
sub
imul
pop
loopne
es
push
mov
in
(bad)
sub
dec
inc
dec
and
test
dec
xor
mov
fadd
xor
adc
shl
sub
ja
outs
arpl
mov
movs
ret
mov
pop
mov
inc
pop
adc
mov
(bad)
cmp
sbb
out
sbb
rcr
lock
out
ss
push
out
sbb
arpl
mov
clc
jge
push
sub
jnp
mov
rcl
and
or
xor
mov
pop
out
mov
movs
das
sub
xchg
jnp
push
test
aaa
ja
stc
ret
std
scas
add
repz
out
or
movs
or
and
ret
les
dec
addr16
int
push
retf
mov
sbb
movs
ss
push
jp
dec
jmp
add
lods
ret
repz
sar
xlat
ins
cmp
ss
hlt
sub
jo
push
cmc
mov
ss
cmp
add
call
dec
adc
cmp
out
dec
bound
and
push
loop
pop
add
dec
xchg
call
or
cmp
or
in
stos
mov
repz
gs
fsubr
pop
imul
fisubr
xor
dec
xchg
xor
inc
dec
inc
push
das
loopne
jae
ret
cmp
mov
imul
aaa
adc
fs
jne
sub
cmp
push
sbb
push
pushf
mov
mov
jb
pop
je
mov
shl
pusha
inc
xor
out
pop
xchg
sub
xchg
push
cmp
std
popa
push
add
bound
rcr
jp
mov
and
int3
mov
(bad)
mov
in
imul
mov
adc
push
push
imul
add
and
dec
test
mov
mov
mov
adc
pop
vpcmpeqd
data16
cwde
in
call
cdq
dec
call
(bad)
jge
dec
add
jnp
pop
enter
mov
xor
sti
dec
sbb
cdq
and
push
in
sbb
bound
ja
mov
test
jmp
ret
call
cwde
or
in
mov
outs
aam
jo
and
mov
fmul
dec
loop
cmp
ja
mov
dec
lods
data16
imul
fbstp
loop
dec
mov
test
mov
movs
imul
fadd
inc
cmc
cwde
aaa
inc
add
iret
cmp
cmp
mov
jbe
mov
mov
aas
mov
pop
sbb
jne
test
lods
inc
push
(bad)
mov
in
ficom
jmp
fidivr
dec
add
mov
cmc
sub
sbb
mov
repz
add
sbb
and
retf
into
xor
jnp
or
xchg
test
out
jmp
(bad)
fistp
aam
jmp
jle
sbb
sub
test
push
das
push
adc
mov
add
mov
hlt
neg
push
sub
outs
dec
inc
out
jo
repnz
(bad)
ss
jle
test
cwde
prefetch
or
adc
pop
push
push
rol
inc
fist
xchg
aam
out
dec
out
jmp
dec
pop
fld
mov
loopne
xor
dec
shl
scas
or
fimul
popf
push
out
xor
mov
repnz
ret
cld
ins
out
adc
je
out
hlt
xlat
jo
mov
mov
retf
std
(bad)
cmp
mov
aas
pop
inc
mov
xchg
sbb
sar
mov
push
mov
add
xor
jbe
loope
test
add
push
nop
dec
jecxz
clc
mov
out
jns
jmp
add
mov
sub
rcl
test
iret
test
ret
int
jmp
or
shl
mov
gs
jne
add
or
stos
into
aas
adc
(bad)
pop
cld
xchg
push
inc
out
jmp
dec
dec
mov
jge
add
or
mov
sahf
push
test
and
sti
add
cmp
dec
mov
out
call
push
pop
dec
and
push
jns
sub
sub
mov
or
retf
outs
and
leave
lods
or
enter
jecxz
jmp
jmp
popa
loop
cmc
in
test
stos
pop
mov
mov
gs
push
mov
sbb
lds
out
jmp
cmp
test
sub
jnp
aam
ds
fiadd
nop
mov
mov
shr
jmp
mov
push
imul
(bad)
jbe
push
cli
adc
and
in
jecxz
adc
push
das
lea
cmp
pushf
int3
or
xor
dec
shl
aam
pop
aaa
mov
scas
fucomip
cmp
mov
mov
movs
sub
or
xlat
jne
pop
inc
ficom
jmp
bound
in
xor
sbb
jo
adc
and
pushf
add
mov
in
enter
mov
dec
sub
jl
push
push
jno
add
mov
addr16
enter
test
shr
pop
test
mov
cmc
loop
popa
and
xchg
sub
push
cmp
(bad)
xor
xchg
inc
xchg
jb
jecxz
adc
sub
out
sub
dec
adc
lods
ja
mov
xor
icebp
aaa
popa
push
sahf
push
shl
add
cld
cmc
je
or
sub
test
sub
jl
out
push
push
jne
sub
push
pop
dec
adc
int
gs
leave
inc
hlt
enter
jge
pop
push
inc
xor
shr
neg
jne
xchg
sbb
adc
inc
clc
inc
in
std
enter
dec
pushf
loope
xchg
stos
and
push
mov
inc
leave
sbb
dec
pop
cmps
push
jmp
jmp
rcl
mov
push
pop
rcr
loop
sub
ss
jbe
enter
test
xor
fmulp
jecxz
fs
cmps
xchg
add
or
sub
inc
clc
mov
jmp
jbe
cld
jl
push
hlt
pop
ss
sti
inc
iret
mov
jge
pop
xchg
aaa
in
push
mov
sbb
mov
aaa
mov
popf
test
mul
ds
sbb
fsubr
rcr
mov
pop
test
pusha
dec
push
lock
ficomp
lds
push
(bad)
push
adc
bound
push
(bad)
mov
stc
ror
icebp
loope
imul
xchg
xchg
je
adc
inc
arpl
mov
mov
or
(bad)
ins
stos
push
or
pop
jb
sti
rcl
xchg
repnz
xchg
movsx
xlat
sbb
fsubr
mov
fwait
jns
pusha
xchg
bound
dec
imul
sbb
inc
(bad)
and
jl
sbb
xchg
sub
or
xor
loopne
adc
pop
lahf
lock
dec
mov
fistp
scas
mov
jne
xchg
setnp
pop
scas
mov
sbb
inc
in
mov
xchg
and
mov
scas
out
in
xor
xchg
cmp
cli
dec
ja
test
push
add
push
jo
call
fldcw
pop
imul
mov
jl
leave
push
in
loop
mov
pop
sub
test
jmp
jp
rcl
(bad)
int3
aad
jnp
and
sti
and
or
pop
(bad)
jno
pop
mov
in
mov
aam
out
sub
(bad)
cmp
sbb
push
xchg
das
sbb
and
push
inc
xchg
xchg
dec
pop
mov
push
outs
pop
inc
loopne
pop
add
dec
test
or
xor
add
jecxz
and
xlat
jg
pop
repnz
adc
pop
in
inc
adc
xor
cli
cwde
inc
inc
mov
xor
mov
sbb
jns
in
test
pop
xor
add
xor
(bad)
sub
jbe
xor
cmps
sbb
dec
mov
out
or
sbb
add
rol
movs
sbb
xor
sbb
push
imul
mov
push
pop
test
sahf
cwde
mov
int
and
xchg
ror
out
pop
stos
push
push
xor
ret
jl
sahf
add
xor
xlat
scas
lea
push
jl
stos
sbb
imul
push
cld
adc
sub
out
push
enter
mov
inc
mov
stc
fisttp
in
sub
sbb
js
jp
lahf
xor
or
jno
pusha
cli
inc
mov
mov
lea
mov
inc
inc
cmp
clc
adc
xor
movs
bound
fidiv
mov
fsub
(bad)
mov
shr
movs
and
jg
pop
sbb
dec
popa
lahf
xchg
sub
rol
mov
cs
test
sub
mov
and
add
in
jmp
adc
xor
add
inc
push
jbe
push
push
push
pop
into
inc
mov
mov
inc
xor
and
xor
mov
push
dec
cmp
jne
xor
(bad)
in
fdiv
mov
add
sub
or
(bad)
pop
dec
xchg
cmc
mov
dec
daa
repz
(bad)
jae
sti
sbb
clc
pushf
cmp
iret
pop
loopne
mov
ror
fmul
lea
lods
shr
xlat
and
addr16
inc
fstp
mov
fild
test
in
ror
lods
sub
sbb
fist
inc
stc
shl
sub
lea
pushf
loop
pop
fdivr
xchg
test
mov
add
add
jmp
retf
or
popf
in
clc
xchg
adc
icebp
cwde
mov
mov
adc
les
sbb
inc
repnz
mov
dec
enter
pop
in
leave
mov
jmp
(bad)
fmulp
es
int3
add
shl
dec
mov
adc
mov
std
cmp
out
mov
ds
cmp
fsubr
sub
add
inc
add
fld
call
push
xchg
push
jmp
shr
mov
(bad)
pop
leave
inc
push
add
(bad)
fwait
xchg
sbb
push
mov
dec
mov
jl
pop
jp
and
jmp
lods
push
cmps
sub
popf
dec
out
stc
sub
scas
outs
mov
imul
mov
mov
push
cmp
leave
in
inc
inc
inc
push
pushf
lods
sbb
push
jmp
adc
push
mov
repnz
enter
cmp
push
cmc
push
les
xchg
pop
out
scas
loopne
dec
xchg
xchg
pop
arpl
mov
push
add
cs
cmp
inc
cmp
fcom
call
add
retf
sub
out
or
push
aam
pop
mov
add
or
hlt
mov
adc
xchg
xchg
mov
ror
cmp
xor
aaa
jle
cmc
addr16
movs
repnz
sbb
mov
xchg
les
push
cdq
add
addr16
cli
add
addr16
push
push
jns
test
adc
dec
pop
xor
push
xor
pop
push
sub
(bad)
mov
popa
push
in
mov
fwait
jns
in
dec
inc
bound
repnz
inc
scas
xor
dec
jnp
pop
lock
and
hlt
in
hlt
test
mul
inc
leave
in
mov
inc
imul
aam
es
fidiv
sbb
jg
dec
lahf
outs
inc
xchg
jne
repnz
mov
mov
ret
dec
mov
test
or
jae
out
mov
int
push
std
lock
jl
rcr
out
dec
sar
inc
and
enter
addr16
mov
sbb
mov
push
out
outs
mov
sbb
push
inc
sbb
fs
push
(bad)
add
test
cmps
call
icebp
mov
inc
fcmovnbe
xlat
ror
xchg
fimul
xor
xchg
or
sub
dec
lods
cli
push
jmp
out
sbb
test
int3
mov
test
jmp
fst
cmp
mov
push
fsubp
push
lds
xchg
mov
ror
adc
push
popa
dec
cmp
jge
aaa
mov
aad
push
push
or
jns
sub
xor
ret
or
repnz
sub
pop
dec
adc
sti
push
repnz
mov
lock
out
sub
in
cwde
push
jb
fistp
pop
in
test
fdiv
mov
push
sub
jae
cmps
iret
pop
cld
mov
out
xchg
pop
das
cwde
gs
mov
sbb
pop
jmp
aad
inc
dec
and
jbe
or
push
js
mov
js
call
mov
and
push
(bad)
mov
int
mov
pop
cdq
push
mov
popf
sub
and
adc
mov
jl
adc
sub
sub
cmp
outs
stos
mov
cs
(bad)
ficomp
mov
mov
xor
jno
imul
jne
mov
jl
fwait
add
sub
xchg
xchg
and
call
cmp
fiadd
mov
sub
cld
sub
xchg
inc
xor
mov
sub
std
add
xor
mov
cmp
adc
jle
pop
ins
adc
xor
nop
daa
mov
jae
rcr
mov
sub
(bad)
mov
call
pop
or
dec
dec
inc
loop
enter
fs
std
jge
out
cld
add
jle
stos
jo
pop
cmps
push
inc
push
sbb
mov
out
inc
fnstcw
(bad)
loop
add
pop
pusha
lahf
fcmovnu
shl
xor
pop
cmp
div
in
cdq
aas
(bad)
push
pop
mov
adc
mov
cwde
xor
not
dec
push
cli
lds
mov
(bad)
adc
(bad)
mov
mov
outs
cs
cs
mul
xchg
add
test
mov
and
jmp
test
scas
in
jnp
jecxz
cmps
js
fdiv
dec
adc
jnp
push
call
xchg
es
xlat
add
pop
push
sub
dec
ds
repz
outs
(bad)
ja
fst
mov
test
add
jo
stos
fild
jl
add
movs
adc
imul
push
pop
test
mov
pop
aas
mov
aas
imul
into
mov
xchg
xor
inc
xor
pop
jmp
xchg
pusha
xchg
das
(bad)
push
inc
push
and
test
dec
dec
inc
dec
or
push
mov
cmp
outs
aad
push
cmp
mov
call
into
inc
call
adc
pop
scas
div
mov
cmp
das
fwait
xlat
sub
adc
adc
(bad)
cli
inc
xor
mov
mov
cwde
xchg
xchg
mov
pop
(bad)
push
mov
mov
iret
push
pop
xchg
mov
ret
scas
and
or
add
mov
sahf
dec
scas
jmp
push
mov
jle
daa
ret
mov
or
push
cwde
sbb
stos
fsubr
in
fwait
retf
mov
jns
gs
scas
cmp
int3
jne
mov
les
or
sub
mov
outs
mov
das
addr16
push
test
sbb
lea
inc
jbe
rcr
retf
repnz
xchg
adc
pop
shl
out
xor
and
add
stos
mov
or
cmp
les
cli
and
dec
add
adc
mov
pushf
stc
mov
fistp
push
(bad)
add
dec
push
push
jno
mov
pop
add
jmp
repnz
clc
and
outs
inc
fs
mov
call
test
lds
lods
inc
xchg
movs
call
cmc
jnp
ret
cmp
push
retf
mov
mov
push
fcomp
lock
jge
and
add
xor
test
push
cli
jne
adc
xor
fs
cmp
inc
ins
mov
cmp
fdivr
fimul
sbb
mov
adc
or
in
push
pushf
retf
ret
out
cmp
and
aam
dec
dec
mov
lods
sbb
in
fmul
cli
mov
jg
sub
ss
idiv
sub
adc
add
pop
or
(bad)
loope
mov
imul
dec
and
daa
inc
out
push
loop
cmp
xor
outs
and
mov
and
xor
jo
lahf
outs
push
or
push
das
shl
mov
jl
push
dec
xchg
pop
mov
xchg
ins
pop
bnd
leave
cs
mov
(bad)
adc
push
or
push
in
ret
xlat
stc
or
in
mov
js
cmp
test
jne
push
push
xor
jne
inc
adc
cdq
cli
popa
jge
ret
test
sbb
aas
xor
ds
adc
mov
cld
fs
adc
mov
in
in
xchg
push
jbe
imul
adc
xor
fistp
xor
adc
sbb
adc
jmp
push
movs
loop
mov
inc
add
push
rcl
ret
cli
add
call
pushf
sub
jp
popf
or
add
mov
call
jle
fsubr
pop
(bad)
cmp
dec
outs
scas
and
mov
and
imul
mov
out
cmps
bound
fild
push
sub
movnti
data16
jns
test
shl
ret
aaa
mov
adc
fs
mov
es
adc
and
ja
cli
arpl
repnz
cli
jns
mov
sub
dec
in
xchg
cmc
mov
and
dec
frstor
jb
hlt
mov
cmp
add
dec
mov
jmp
jbe
sbb
fwait
jl
and
imul
in
rcr
pushf
or
(bad)
stos
(bad)
popf
mov
lea
xchg
mov
es
pop
std
ja
and
adc
inc
dec
mov
push
adc
and
sub
in
ret
imul
es
sub
bound
inc
std
cwde
xchg
inc
ins
mov
sahf
dec
lods
inc
sbb
push
jno
aad
rcr
add
xor
call
mov
sbb
sub
stc
lea
dec
push
ror
xchg
mov
stos
pop
mov
sub
popf
nop
(bad)
cmp
sub
test
imul
test
imul
repz
retf
ds
or
or
(bad)
aas
mov
and
cwde
xchg
mov
stc
push
xor
das
rcl
call
sbb
loopne
int3
mov
xchg
mov
adc
pop
fwait
cli
push
jp
mov
cmc
add
mov
mov
mov
mov
xor
mov
mov
cmp
leave
pop
mov
in
pop
mov
xor
rcl
cmp
pusha
add
xor
pushf
cwde
rcl
in
mov
mov
popf
psrlq
aaa
mov
jno
push
xlat
test
xor
inc
ins
bound
cs
push
xor
jb
fxtract
dec
rol
sbb
retf
ret
push
pop
mov
mov
out
repnz
pop
pop
arpl
xchg
loope
mov
dec
call
jo
pop
add
pop
jecxz
xchg
xchg
mov
je
dec
mov
adc
xchg
mov
and
nop
lds
lock
lds
ins
mov
cmps
push
sbb
or
jb
std
xchg
lea
retf
inc
mov
inc
adc
cdq
into
mov
xchg
(bad)
sbb
dec
push
addr16
in
cmps
push
jmp
mov
retf
inc
pop
or
sbb
pop
dec
shr
loopne
test
mov
(bad)
das
pop
push
pop
lods
fnstsw
repz
imul
icebp
mov
sub
mov
sar
and
ins
inc
pop
and
jae
lds
push
xchg
fsubr
jl
outs
scas
xchg
data16
out
dec
inc
cld
push
sbb
repnz
xor
cmps
leave
hlt
fild
ins
aam
mov
push
dec
retf
ret
(bad)
xor
int3
mov
xor
pop
xor
adc
dec
ja
inc
inc
mov
cdq
adc
sub
sbb
leave
push
or
sbb
jbe
scas
pop
jb
imul
loop
lods
ret
icebp
xor
sbb
cld
add
sbb
mov
out
fcom
ds
lock
jmp
iret
test
or
sahf
dec
pop
push
push
into
in
iret
aad
(bad)
cld
xor
not
xor
ret
(bad)
neg
in
fs
xor
adc
push
push
jl
int3
lds
gs
and
ret
movs
pop
lods
jns
jns
or
dec
xchg
scas
lahf
inc
pop
lods
jge
inc
push
lea
mov
jne
or
popf
sbb
mov
lea
test
add
fist
push
sbb
push
xchg
jbe
loope
jmp
ja
mov
pop
aaa
xor
sbb
es
mov
cdq
clc
dec
int
dec
sub
fld
loope
(bad)
sbb
pushf
xchg
jnp
das
fadd
sub
ins
rcl
xor
mov
jo
test
imul
mov
sub
jns
cli
out
push
sbb
iret
pop
imul
or
fisttp
fwait
cld
sub
sub
pop
sahf
add
retf
fs
push
push
mov
aam
aas
inc
xor
ja
mov
push
xchg
cmp
cld
jnp
pop
stos
xor
out
adc
fldpi
(bad)
xor
pop
mov
mov
cmp
jmp
test
mov
jns
inc
cdq
ins
and
push
icebp
xchg
inc
lea
and
into
les
dec
push
stc
mov
shr
cmps
adc
jbe
mov
adc
jnp
mov
into
popa
inc
push
rol
into
and
lahf
pop
in
out
jp
and
sub
cli
test
sub
sub
scas
mov
call
xor
lods
mov
ret
sbb
pop
mov
pop
add
popa
jbe
gs
cwde
mov
xor
jmp
aam
fsubr
sbb
pop
mov
xor
fdivp
cmp
and
cmps
cwde
shl
mov
stc
fist
mov
div
cld
fwait
and
xor
das
adc
mov
dec
out
sub
les
inc
dec
mov
outs
hlt
aam
and
jp
or
call
sub
pusha
dec
jmp
popa
push
pop
inc
xlat
ror
push
ins
jae
aas
cs
and
fyl2x
and
pushf
bound
xor
mov
mov
mov
aas
mov
stos
ret
push
stc
xchg
xchg
adc
mov
add
out
leave
mov
cmp
mov
cmc
adc
pusha
adc
cmp
xchg
loope
push
jmp
cld
test
inc
sub
and
push
inc
test
mov
sub
fnstcw
iret
or
inc
xor
sbb
(bad)
leave
xor
out
dec
in
sub
and
mov
jp
push
ja
scas
imul
loop
sub
mov
xlat
jecxz
jmp
je
pop
xor
dec
movs
mov
(bad)
(bad)
mov
xchg
mov
mov
cld
scas
cmps
cmp
ror
push
out
sub
sbb
pop
add
cmp
js
or
fsubr
iret
and
out
fild
mov
push
sbb
ret
int3
dec
imul
js
add
ds
stc
nop
mov
test
cs
bnd
jne
jns
retf
imul
mov
or
pop
sar
fdivr
jecxz
inc
gs
push
adc
or
xchg
jbe
fs
or
xlat
fnstsw
out
push
je
or
pop
mov
rcr
mov
shl
jg
out
mov
sbb
je
sub
div
ja
pop
dec
lds
and
push
leave
xor
mov
adc
pop
out
pop
inc
out
jg
ja
pop
lods
mov
inc
(bad)
aaa
pop
in
xchg
ret
daa
adc
add
into
dec
jmp
jnp
lahf
jae
int
pusha
and
mov
cmp
pusha
jle
inc
dec
inc
or
push
sahf
je
stc
mov
add
cld
call
jno
sbb
popa
jns
test
into
mov
ss
inc
retf
leave
sub
mov
nop
(bad)
loop
pop
je
pop
stos
cdq
push
lods
inc
mov
pushf
ss
mov
mov
push
mov
inc
fst
inc
xchg
(bad)
push
das
and
push
jb
ror
vrcpps
adc
(bad)
(bad)
pop
scas
mov
loopne
in
dec
adc
sar
aam
push
out
mov
or
aaa
pop
ror
sti
das
shl
imul
xlat
test
dec
dec
nop
jl
add
mov
out
fst
dec
push
sbb
dec
sub
push
adc
scas
push
sbb
adc
dec
or
jp
push
sbb
sub
and
inc
dec
add
pop
and
rcr
sar
jp
icebp
sbb
push
arpl
rcr
sbb
fild
fsubr
inc
int3
shl
mov
int
or
add
cmp
add
aaa
inc
shr
mov
test
cmp
shl
mov
and
jmp
sbb
mov
cmps
mov
mov
sub
mov
cli
mov
sbb
sbb
jge
mov
int3
daa
outs
cmp
(bad)
xchg
mov
nop
jne
push
jne
hlt
(bad)
sar
jbe
inc
adc
(bad)
cmp
fwait
jl
pop
pop
not
fdiv
mov
jl
ds
adc
mov
pop
movs
pop
shl
dec
addr16
aaa
pop
cmc
mov
mov
mov
mov
cmp
inc
mov
cdq
cli
jg
loop
cvtdq2ps
and
sub
lds
(bad)
out
ss
stos
bound
fstp
in
adc
mov
push
fwait
sub
xor
sbb
mov
int3
cs
stos
xor
xor
mov
jnp
push
aam
call
dec
repz
clc
ds
sbb
addr16
fisttp
fst
xchg
fcomp
push
dec
outs
scas
pop
dec
in
pushf
or
fldcw
pusha
test
retf
inc
out
outs
sbb
sbb
out
cli
sub
push
in
outs
popf
add
pop
dec
and
pop
cmps
xor
xor
js
in
sbb
retf
fdiv
push
push
inc
push
jo
pushf
jecxz
and
arpl
(bad)
repz
inc
dec
add
in
ins
mov
mov
int3
cli
sub
fnstcw
fwait
ss
sti
jg
jno
in
test
push
popa
ret
push
test
or
sbb
push
inc
dec
push
cmps
sub
mov
cs
loop
lock
cmp
adc
dec
(bad)
push
push
into
mov
in
mov
(bad)
lea
iret
adc
int
sbb
jge
inc
jno
pop
(bad)
push
call
repz
outs
cld
aaa
pop
movs
xor
imul
cmp
cwde
pop
lods
pop
xor
dec
pusha
lahf
aad
adc
call
push
cld
cli
in
cmc
(bad)
adc
daa
pop
lahf
adc
aas
or
lea
fistp
movaps
or
or
sub
(bad)
test
movs
sti
mov
rcl
mov
mov
push
mov
push
add
xchg
sbb
data16
cmp
outs
pop
inc
xchg
out
cmps
adc
(bad)
in
out
test
mov
xchg
push
xor
add
idiv
dec
sub
sub
out
sub
dec
sub
mov
psrlw
ret
std
jecxz
or
inc
sbb
retf
push
pop
(bad)
test
movs
xor
ins
xchg
add
(bad)
sub
repnz
add
push
inc
daa
inc
sbb
xor
clc
mov
cli
lea
dec
jne
aam
cld
pop
sub
cmp
mov
jmp
add
data16
sub
cmps
mov
pushf
ret
mov
push
or
pop
(bad)
retf
addr16
adc
lahf
jmp
dec
lods
sbb
xchg
pop
scas
pop
(bad)
dec
jne
inc
pusha
fimul
xchg
outs
add
icebp
iret
mov
jmp
mov
sbb
xchg
out
sub
imul
idiv
sbb
jge
pop
xor
mov
es
xchg
sub
cmp
mov
push
jp
fwait
loop
xlat
div
dec
push
pushf
or
out
jbe
mov
adc
ja
dec
repnz
outs
dec
pop
sbb
into
loope
dec
mov
jno
clc
push
aam
lods
and
mov
sbb
xchg
retf
outs
sub
push
int3
dec
xor
jae
aad
adc
cld
fisub
mov
icebp
bound
dec
push
out
(bad)
rol
dec
adc
movs
mov
iret
shl
jno
pop
in
sub
ins
xor
cmc
call
call
adc
mov
imul
in
cmp
jmp
popf
cs
in
jns
ret
imul
repnz
dec
test
cld
add
push
xor
sbb
push
fisubr
xchg
adc
js
sbb
daa
sbb
mov
stos
xchg
nop
outs
xor
addr16
adc
jno
cdq
cmc
mov
bound
mov
mov
loope
inc
push
pop
or
dec
scas
mov
inc
pusha
and
imul
lock
popa
loope
and
daa
mov
sub
add
push
xchg
adc
xchg
lods
jne
xor
outs
shl
cmp
add
cmp
xchg
sbb
into
jmp
xor
add
mov
lods
push
mov
adc
lods
cmps
mov
cmp
add
dec
test
js
es
push
inc
xor
jmp
or
mov
popa
pminub
or
in
ins
std
mov
(bad)
gs
das
les
mov
sti
jne
dec
sbb
cli
lods
or
retf
xchg
sub
pushf
ss
adc
lods
rcr
retf
daa
ror
movs
movs
cwde
(bad)
rol
stos
add
je
rol
dec
mov
repnz
icebp
jge
inc
lock
mov
pop
pop
je
adc
test
push
out
out
or
and
xor
(bad)
aas
fucom
or
push
ret
repz
ret
add
arpl
pop
mov
cmp
test
jbe
pop
sub
sbb
push
add
enter
jmp
mov
popa
pop
jmp
xor
add
icebp
mov
ja
cmp
mov
mov
les
xchg
jp
ss
dec
rol
out
out
enter
inc
push
ins
test
out
mov
push
outs
and
xor
fmul
pop
repnz
mov
push
ror
movs
mov
inc
lods
push
(bad)
jbe
popf
jo
(bad)
or
push
mov
jle
cli
ror
jge
sub
add
sub
inc
sub
outs
mov
pop
push
cmps
jg
iret
mov
or
repnz
mov
xor
pop
and
mov
and
sti
fstp
lea
pop
les
int
outs
jne
mov
dec
push
les
mov
xchg
xchg
jg
in
jmp
lahf
mov
pop
mov
xchg
je
test
(bad)
ss
bound
(bad)
cmp
mov
add
ins
and
mov
pop
mov
call
mov
and
ror
xchg
ficomp
jnp
mov
in
and
nop
fwait
jo
sbb
je
and
loop
lods
pop
adc
push
sahf
fcomi
aam
imul
test
daa
sar
imul
cmp
fs
xchg
push
jb
push
popf
cmps
push
rcr
dec
mov
sub
mov
outs
test
add
pop
mov
icebp
repz
in
test
mov
out
or
sti
xchg
sbb
ret
int
ficomp
call
lods
outs
std
scas
pop
xlat
fs
out
xlat
into
idiv
inc
movs
mov
scas
adc
out
in
or
dec
in
cwde
mov
loop
pop
popf
in
dec
movs
jecxz
test
xchg
adc
stc
neg
cdq
mov
(bad)
mov
and
aas
dec
jb
dec
(bad)
jne
retf
pop
enter
mov
repnz
or
mov
pushf
idiv
jmp
xchg
mov
jno
add
jne
adc
aas
xchg
cmp
jnp
mov
fwait
inc
js
rcr
pop
and
and
jo
jp
mov
pusha
sar
mov
cli
fld
adc
pop
push
sub
add
mov
pop
mov
test
pop
or
xchg
sbb
cwde
loop
mov
push
push
jp
div
pushf
push
fldcw
xchg
hlt
push
inc
sbb
dec
movs
and
jecxz
inc
or
sbb
fnsave
iret
xor
dec
xor
push
sub
push
jp
sub
frstor
lock
lea
mov
iret
xchg
cs
mov
test
repz
(bad)
aad
sub
and
lods
jo
arpl
pop
lods
xor
cmp
mov
pop
stos
std
aam
out
and
leave
jle
mov
hlt
xchg
inc
fsub
jecxz
and
mov
idiv
push
clc
and
inc
xchg
mov
aaa
test
out
mov
inc
mov
in
mov
inc
pushf
cdq
sub
mov
mov
push
mov
pop
and
xchg
out
dec
add
mov
sbb
sbb
adc
jmp
dec
cmp
adc
jg
mov
push
jl
dec
data16
mov
mov
sbb
dec
imul
repz
push
mov
clc
stos
jecxz
or
jae
fwait
(bad)
or
popa
hlt
push
and
shr
add
mov
in
movs
jmp
nop
push
add
lahf
out
les
mov
mov
or
or
mov
loopne
shr
mov
mov
out
jle
push
sub
mov
add
(bad)
daa
sub
xchg
dec
dec
out
pop
iret
mov
cmp
ret
aas
das
mov
repz
nop
xlat
xor
fwait
loop
inc
iret
xor
mov
icebp
nop
sbb
mov
ret
sbb
jl
js
(bad)
fs
nop
std
push
jecxz
mov
fucomi
mov
shl
retf
lea
cmp
push
push
test
gs
inc
inc
sub
adc
test
xchg
pop
cmps
int
xchg
lods
pop
test
push
pushf
dec
dec
adc
mov
leave
into
mov
cmp
je
aas
cmp
pop
dec
cli
popa
jg
pop
(bad)
sub
sbb
sbb
add
ss
xor
and
jne
not
mov
xor
xchg
add
or
mov
ja
lods
mov
iret
cli
adc
jmp
leave
(bad)
cwde
and
jns
or
iret
shr
xchg
ret
cwde
mov
cmp
clc
ror
das
xchg
xlat
cld
test
add
cwde
pop
push
inc
es
hlt
mov
sar
inc
push
and
cld
popf
enter
mov
push
mov
jmp
push
and
pop
dec
imul
mov
sbb
xchg
mov
int
jle
add
movs
inc
mov
sbb
pop
fwait
cmp
mov
js
adc
das
inc
mov
inc
in
sbb
add
fdiv
lods
xchg
and
sbb
inc
lahf
xchg
or
jo
push
ins
popf
rol
jge
xchg
lods
cmp
pop
ss
sub
xchg
xor
popa
fldenv
adc
jecxz
popf
(bad)
jmp
push
add
xchg
sub
cmp
jbe
lahf
test
jbe
es
lds
jmp
xchg
pop
inc
jae
arpl
shl
cld
aas
cs
aaa
xchg
mov
inc
popf
cmps
jbe
jns
and
sbb
push
jecxz
jo
push
xchg
pop
shl
call
pop
push
dec
into
sti
mov
sub
mov
mov
inc
sbb
sahf
test
jnp
movs
retf
push
cld
jae
sbb
cmp
aaa
(bad)
sub
mov
out
loop
jae
mov
pop
xor
lods
mov
jbe
dec
pushf
aam
mov
xchg
mov
arpl
xchg
lock
sub
xor
sbb
enter
arpl
aad
jecxz
jmp
sar
mov
in
ss
push
rol
xor
fist
fwait
mov
gs
xor
jbe
inc
rcl
sbb
mov
and
cs
std
xor
cdq
and
dec
cli
sbb
clc
int
out
movs
test
retf
jns
inc
sub
inc
mov
ins
dec
pop
and
inc
sti
push
ins
movs
mov
lods
rol
retf
add
and
(bad)
std
xchg
daa
imul
fiadd
sub
dec
jl
and
rcr
xchg
push
xor
lods
shl
inc
cld
loopne
stos
popa
or
shr
mov
jle
xchg
ja
xchg
and
imul
in
push
push
xor
(bad)
out
sti
out
mov
rcr
loopne
cmps
cmp
dec
pop
jne
jne
xchg
dec
adc
ficom
cmps
mov
push
mov
dec
dec
iret
xchg
dec
imul
jbe
xchg
addr16
sub
loopne
into
icebp
ins
in
in
cmp
adc
jno
xchg
scas
push
js
mov
enter
push
cli
iret
mov
cwde
jnp
cld
call
inc
mov
push
arpl
pop
mov
retf
lock
xor
jbe
mov
xchg
cmc
rol
fld
imul
and
and
je
dec
mov
jle
pop
cs
imul
jne
loope
or
mov
jmp
push
jmp
pop
aad
rcl
jl
sub
or
cld
into
adc
xor
jae
hlt
jl
and
and
aam
fwait
inc
dec
clc
push
cmp
stc
mov
(bad)
mov
dec
movs
and
ins
pop
or
fwait
jno
push
jle
push
pushf
aaa
or
gs
addr16
inc
sub
mov
adc
mov
(bad)
aam
fisubr
mov
les
loope
inc
mov
and
dec
pop
xlat
jbe
les
out
push
and
data16
sub
cmps
sub
movs
pop
dec
retf
cmc
jns
data16
inc
jp
imul
inc
cmp
pop
call
xor
mov
daa
leave
imul
mul
jbe
mov
in
shr
fs
arpl
div
jne
hlt
lods
lods
out
jmp
dec
xchg
jb
and
shl
aaa
add
jl
push
xchg
out
mov
adc
jg
in
adc
rcl
arpl
ins
push
test
sbb
aad
or
lods
pop
test
sbb
cwde
imul
test
mov
fidivr
xchg
in
or
inc
sbb
clc
xchg
jns
lock
int3
rcl
mov
inc
mov
out
imul
shr
adc
sub
pusha
shl
cmps
xchg
daa
push
imul
push
add
cmp
cs
arpl
xchg
push
test
or
push
ss
(bad)
mov
push
jl
pop
cmp
jno
ror
ins
ffree
xchg
pop
sti
call
and
arpl
bound
mov
bound
push
cmp
pop
cmp
xchg
fist
pop
mov
jb
shr
xchg
or
jns
jecxz
cmpxchg
into
pusha
sti
ja
inc
inc
cmps
pop
push
mov
lock
iret
sub
fdiv
jl
jmp
jl
add
fld
pop
int3
test
mov
sets
(bad)
jle
nop
outs
push
push
mov
or
rcl
and
cs
or
jno
fidivr
sub
cmps
int
or
dec
cmp
sub
sbb
pop
test
in
add
call
enter
jmp
inc
stos
outs
jbe
mov
test
movs
stc
and
cs
push
pop
mov
mov
push
xor
outs
sub
lods
sbb
lahf
int3
hlt
push
movs
ins
mov
and
outs
gs
(bad)
push
push
and
in
nop
add
je
in
mov
and
inc
es
movs
das
cmp
lods
js
xchg
ja
stc
es
mov
sbb
inc
add
cmp
pop
mov
out
push
pop
(bad)
ror
je
xchg
sti
adc
scas
pop
cdq
rol
push
mov
push
mov
mov
mov
cmp
imul
pop
scas
in
imul
imul
std
xor
bound
adc
add
or
ja
out
jmp
leave
retf
cvtps2pi
and
shl
outs
xchg
jecxz
lea
push
daa
outs
adc
xchg
adc
jbe
stos
ret
test
add
mov
pop
sub
adc
fidiv
test
push
jp
nop
lock
cwde
and
div
or
push
movs
cmps
es
out
jno
popf
mov
mov
jnp
data16
fwait
mov
lods
pop
sbb
push
pop
(bad)
pop
adc
push
mov
jle
xchg
mov
div
jmp
(bad)
cmp
scas
hlt
enter
scas
(bad)
shr
test
mov
(bad)
and
out
sub
dec
mov
aaa
mov
xchg
bound
or
push
sub
mov
cmps
je
xor
leave
xchg
outs
shl
xchg
adc
aas
adc
add
sbb
cmp
test
retf
cmps
dec
clc
(bad)
lods
xor
cmps
lock
add
ss
pop
cmp
pop
xchg
in
retf
arpl
int3
mov
dec
dec
nop
mov
sub
cmps
and
adc
sub
fs
and
add
fsubr
(bad)
push
cmp
or
dec
mov
(bad)
xchg
(bad)
in
jb
ret
mov
xor
imul
rol
loop
aad
or
mov
xor
imul
xor
pop
inc
popf
cmp
popa
(bad)
mov
shl
cmp
aas
push
inc
call
int3
fiadd
outs
or
pop
inc
pop
ins
bound
addr16
fcmovnbe
lock
dec
mov
in
mov
or
sub
pop
shl
addr16
test
xchg
xor
ficomp
cli
xor
iret
sbb
cmp
movs
jmp
cmp
icebp
adc
loop
jnp
or
shl
in
add
inc
inc
sbb
fist
pushf
adc
lock
and
(bad)
fidivr
adc
dec
fiadd
shl
xor
scas
mov
(bad)
fbld
jecxz
jb
or
xor
add
data16
push
mov
movs
push
mov
or
neg
into
sbb
dec
sub
mov
push
je
xor
mov
cwde
add
hlt
sbb
or
ja
xchg
xchg
dec
enter
ret
aaa
stos
ret
xchg
bound
or
pop
mov
and
inc
std
adc
sub
scas
rol
imul
scas
jns
push
jmp
cmp
jmp
nop
xchg
or
xlat
cld
cli
in
lds
je
jmp
xor
push
sub
sub
sub
or
lods
mov
repnz
rcr
rol
sub
dec
sub
push
jmp
movs
mov
fiadd
jmp
pop
cdq
cmps
ror
inc
pop
cwd
push
mov
repnz
or
and
in
add
jmp
pop
mov
out
fcmovu
test
idiv
jecxz
pop
cs
mov
cmp
imul
mov
iret
sbb
add
jmp
sbb
inc
mov
mov
ret
mov
sbb
stos
mov
imul
fld
or
mov
sub
mov
call
das
rcr
mov
and
daa
inc
scas
fs
lods
fisub
div
mov
adc
aaa
jae
shr
aaa
in
xchg
pusha
rol
les
out
shr
pop
movs
sbb
cmp
lds
lahf
dec
fild
push
xchg
movs
add
call
xchg
jle
call
or
jp
fs
dec
nop
adc
sar
xchg
xor
clc
test
push
movs
jl
mov
rcl
psubb
pop
daa
ret
stos
xchg
fs
adc
jecxz
mov
mov
or
jl
shr
(bad)
pop
std
aaa
xchg
sub
inc
bound
xchg
and
sub
xchg
cmp
in
icebp
jl
jmp
mov
out
push
jp
bnd
mov
stos
cmp
int3
leave
hlt
mov
xchg
sub
nop
aas
into
ins
pop
rcl
movs
cmp
mov
pop
cdq
sbb
jge
jb
mov
xor
loop
movs
xlat
inc
mov
jmp
dec
cmp
pop
sub
cmp
or
aam
and
mov
mov
mov
pop
mov
add
xor
lock
push
iret
push
aaa
arpl
xchg
js
shl
bound
sbb
fild
sbb
ja
in
pop
cs
loop
mov
jnp
nop
mov
test
fidiv
mov
fwait
ins
push
jg
inc
dec
mov
retf
les
cmp
jmp
inc
ja
sbb
sbb
sbb
pop
mov
push
fld
sar
jne
loope
js
adc
sbb
rol
adc
sbb
mov
xchg
(bad)
je
scas
jns
stos
or
inc
adc
idiv
push
jo
mov
retf
pop
adc
xor
imul
test
inc
enter
and
fistp
retf
xchg
mov
cmps
pop
gs
in
mov
jb
push
add
mov
mov
and
or
in
mov
iret
jnp
cld
push
loop
sbb
fs
in
test
mov
call
jnp
add
dec
fist
pop
fisubr
retf
push
add
sbb
mov
inc
fild
push
inc
pop
icebp
cmp
pop
xor
xlat
push
dec
fdiv
dec
or
arpl
(bad)
(bad)
dec
dec
cmps
jns
daa
outs
mov
cdq
push
leave
cmc
dec
lods
pop
dec
xchg
adc
repnz
imul
xchg
add
imul
dec
arpl
sar
mov
push
hlt
shl
cld
es
outs
lea
test
sbb
fcmovbe
dec
adc
xor
popa
inc
and
loop
or
mov
or
dec
(bad)
xchg
(bad)
popa
xor
test
cmc
repnz
dec
out
(bad)
fs
into
jle
repz
xor
jmp
dec
je
test
shr
adc
outs
shl
cmps
daa
cli
fdiv
and
test
popa
sub
push
loope
add
pusha
push
(bad)
(bad)
mov
popa
in
jmp
sub
jge
sub
sbb
scas
das
(bad)
or
loop
test
mov
dec
int
and
scas
dec
loope
out
mov
movs
cmps
xor
push
mov
pop
sar
rep
xchg
ds
sti
dec
mov
sti
push
jb
dec
fcomp
sub
mov
arpl
push
mov
scas
rcr
xchg
adc
retf
aaa
mov
jl
dec
mov
inc
cli
jmp
mov
pop
mov
xor
ret
xor
and
ss
out
xlat
fnclex
data16
jmp
ins
into
std
pop
add
pop
dec
cmps
xor
dec
and
lods
leave
stos
arpl
inc
js
gs
sub
pusha
nop
repz
into
mov
pushf
xor
(bad)
pushf
inc
fcomp
les
mov
popa
push
push
cld
fwait
mov
pop
push
jmp
jg
in
jmp
jmp
ror
sub
jl
sbb
mov
test
imul
inc
and
sbb
or
or
loope
xlat
outs
jmp
movs
call
xlat
mov
xchg
or
fisttp
mov
xor
jl
and
dec
sti
dec
adc
pop
mov
pop
push
dec
out
call
jge
in
fs
sub
push
sahf
pop
cld
test
sub
in
fst
into
sbb
retf
add
data16
repz
add
pop
iret
and
sub
and
dec
push
sub
sub
outs
out
mov
jmp
sahf
mov
mov
pushf
stos
dec
jb
ja
cli
stc
xor
arpl
xchg
lds
pop
cmc
lods
fnsave
or
in
cdq
adc
out
jnp
out
add
mov
mov
xor
adc
jp
(bad)
fidivr
xchg
inc
cmp
aad
(bad)
mov
jb
add
sbb
in
push
pop
adc
xor
rol
xor
ja
jb
inc
adc
test
pop
mov
jmp
sbb
mov
outs
and
or
scas
pop
call
retf
sbb
and
test
jl
inc
rcr
mov
cli
mov
pop
jl
jmp
inc
cmp
mov
daa
fmul
jae
and
sbb
out
jecxz
sbb
scas
retf
jns
stos
mov
rcl
dec
adc
in
lea
adc
push
out
push
push
fldenv
and
mov
sub
data16
xor
pop
mov
lods
bound
ss
ror
sbb
sbb
pop
jb
dec
div
pop
outs
lods
(bad)
scas
dec
loope
out
pop
lock
pop
(bad)
sbb
and
mov
iret
jp
dec
or
sbb
hlt
icebp
mov
shl
fs
push
std
pop
pop
or
fadd
push
(bad)
add
in
inc
sub
mov
lock
or
pop
lods
mov
sbb
in
cdq
inc
or
popa
jle
in
(bad)
jns
jl
les
or
repnz
pop
in
sbb
sti
call
lods
mov
imul
dec
add
fld
jnp
sbb
pop
clc
call
inc
jp
scas
ins
mov
aas
or
add
pusha
fwait
ud1
or
sar
in
push
arpl
mov
jbe
pop
mov
xor
xchg
(bad)
in
dec
adc
shl
cmps
pop
mov
and
shr
fld
adc
cmc
fbstp
jo
in
mov
push
cli
clc
dec
dec
jp
cmc
adc
cmps
push
inc
(bad)
cmps
jo
pop
inc
dec
cmp
mov
inc
add
lock
and
aad
scas
cmps
ja
jne
std
enter
(bad)
or
mov
push
push
and
sub
in
pop
push
out
sub
mov
xchg
xor
imul
out
inc
psubq
pop
and
je
and
shl
nop
icebp
ins
pop
in
and
enter
lds
cmp
xlat
and
inc
jp
(bad)
fiadd
jae
xor
(bad)
mov
ds
or
xchg
mov
aas
pop
daa
fidivr
js
ror
mov
mov
xlat
push
fs
pop
fnsave
popa
push
out
and
cwde
jne
(bad)
push
mov
inc
mov
imul
addr16
inc
mov
fucom
xchg
(bad)
pop
clc
lods
or
and
mov
lahf
inc
cld
inc
or
aaa
loop
cmp
movs
cld
cmp
aaa
cmp
into
(bad)
lahf
and
sbb
movs
js
xchg
cmp
jecxz
pop
mov
fwait
push
and
call
cmp
out
das
dec
mov
inc
add
jl
ret
int3
xor
adc
fs
retf
mov
mov
pop
mov
fsub
(bad)
hlt
(bad)
popa
pop
scas
pop
rcr
movs
and
xchg
fldenv
xor
popa
lea
call
and
jns
dec
fdiv
fmul
inc
cmp
and
push
mov
outs
dec
jnp
pop
jg
daa
(bad)
mov
push
jmp
shr
loope
and
jb
ret
and
std
cs
rdmsr
add
sub
mov
into
mov
and
jl
mov
pop
out
loopne
mov
mov
aaa
inc
inc
pop
push
pop
fnsave
dec
jno
ins
jl
adc
push
js
pop
xchg
jns
mov
xlat
outs
enter
aas
cmp
jnp
sbb
jmp
and
dec
add
sbb
leave
fmul
mov
ret
cs
pop
loope
ins
(bad)
popf
jecxz
ret
aad
adc
or
mov
cmc
pop
in
push
push
bound
dec
retf
daa
dec
hlt
mov
(bad)
bound
test
jnp
jecxz
mov
xchg
imul
imul
gs
outs
sub
cs
imul
dec
sbb
xchg
das
pop
mov
add
mov
inc
dec
je
mov
enter
in
sub
add
jbe
jo
add
jne
cmp
fwait
sub
add
inc
dec
bound
adc
daa
ror
push
repz
addr16
push
add
in
push
mov
cs
hlt
out
dec
mov
push
mov
add
jb
outs
jns
inc
lds
(bad)
(bad)
xchg
stc
fcmovnu
dec
fisub
scas
ss
loope
inc
test
mov
dec
(bad)
shl
ins
xor
jbe
jnp
test
dec
shr
add
pop
inc
cmp
cmp
fcomi
clc
mov
dec
xchg
dec
test
dec
sub
movs
push
xchg
mov
xchg
mov
mov
jge
mov
loop
jmp
retf
icebp
push
or
jns
xor
push
test
call
add
hlt
push
and
add
icebp
dec
test
add
test
mov
jmp
xchg
mov
mov
jg
and
or
aam
jns
push
sbb
sbb
mov
repz
lea
int3
or
pause
loop
pop
xor
(bad)
shl
aaa
pop
sub
sub
test
out
das
shl
jle
sub
dec
jmp
(bad)
jnp
mov
xchg
leave
cdq
push
pop
or
ss
fxch
inc
js
cs
pop
enter
dec
xor
jg
mov
idiv
scas
mov
ds
cmp
lds
pop
dec
jo
mov
cmps
pop
movs
sbb
pop
shl
in
add
jae
sahf
mov
fsubrp
jnp
sub
or
outs
fild
int3
cmp
int
xor
in
sub
pop
out
outs
bound
js
in
xor
add
mov
or
cmps
mov
mov
or
pop
mov
sbb
daa
mov
in
stos
cmp
inc
popf
push
push
stos
xor
or
xchg
and
mov
mov
fwait
adc
jle
test
inc
push
test
cmp
jecxz
xor
and
jmp
ss
(bad)
(bad)
dec
enter
retf
and
fs
sub
jne
(bad)
adc
test
stc
sbb
cmp
push
mov
retf
out
aas
add
cld
(bad)
pop
aad
in
loopne
in
outs
dec
pushf
loop
in
in
jae
mov
inc
push
stc
sahf
dec
mov
sbb
stos
int3
jge
sub
or
dec
pushf
lea
lahf
adc
pop
push
or
mov
movs
jbe
test
lahf
xor
aam
mov
cmp
js
sbb
inc
jmp
imul
shl
xlat
std
jo
inc
(bad)
add
mov
pop
pop
iret
test
pop
xor
jmp
and
lea
mov
mov
mov
jge
adc
test
mov
cmp
mov
mov
mov
adc
daa
pop
inc
pop
cmps
cwde
cld
js
in
adc
test
adc
cmp
rol
test
cdq
jb
or
jo
inc
mov
lea
xchg
jns
enter
xor
sub
mov
jnp
pop
fs
push
inc
setle
dec
cmc
cmc
sbb
pop
sub
movs
adc
xchg
retf
mov
retf
punpckldq
add
daa
jns
push
mov
pop
cmp
or
out
xor
lock
outs
stos
sar
shl
inc
jmp
daa
push
cmp
sbb
mov
jmp
lods
pop
mov
inc
push
pushf
xchg
inc
inc
nop
mov
fst
or
loope
xlat
cld
aas
imul
mov
mov
xor
cwde
lock
out
sbb
retf
mov
sbb
push
adc
jns
pushf
xor
cmp
mov
xor
mov
adc
jl
imul
xor
xlat
xor
sub
push
arpl
xor
xlat
xchg
and
out
xchg
jb
push
or
cmps
cmp
(bad)
stos
mov
gs
daa
arpl
fdivr
xor
fsubr
lock
and
mov
out
cmp
push
mov
fdivr
int3
add
enter
cs
(bad)
jecxz
mov
aas
xchg
je
not
cmp
xchg
mov
xor
add
jo
imul
sbb
rcr
xor
scas
inc
jbe
and
loopne
pop
mov
inc
mov
push
adc
or
or
xor
and
mov
les
call
xor
mov
scas
jmp
loop
movs
sub
add
adc
mov
mov
pop
pop
or
(bad)
ins
sti
call
inc
cmp
mov
xchg
hlt
cmp
call
push
retf
into
das
cmp
and
stos
je
mov
aaa
jnp
retf
iret
std
adc
sar
mov
pop
inc
into
pop
fadd
pop
or
xor
inc
mov
jbe
fild
pop
ror
fbstp
movs
add
cmp
jle
push
test
adc
sbb
in
cmps
out
jl
ficom
retf
inc
adc
xchg
sub
movs
inc
pop
dec
loopne
mov
and
movs
mov
aas
or
jno
cld
sbb
fnstenv
pop
mov
aas
jne
imul
push
retf
pop
mov
repnz
(bad)
jno
call
jg
scas
cmp
lea
(bad)
ins
fbld
xchg
push
outs
out
mov
push
imul
xchg
lods
retf
cdq
rcr
jmp
(bad)
in
in
aas
xor
cdq
sbb
ret
in
lock
movs
shl
mov
mul
mov
and
jnp
jmp
fld
repz
cmp
jno
dec
sbb
in
jnp
ins
mov
and
jae
(bad)
js
jle
mov
(bad)
fisttp
sbb
cmc
iret
inc
sar
rcl
dec
xor
aad
es
aaa
js
out
jns
xor
pusha
push
int
sbb
mov
jmp
ins
ds
es
(bad)
fnstcw
loope
xor
mov
mov
push
sbb
cmp
sbb
inc
push
mov
push
xchg
adc
xor
jecxz
scas
fistp
call
mov
and
retf
jle
outs
mov
xchg
and
jp
jno
sbb
sub
stc
(bad)
jmp
pop
mov
scas
and
xchg
push
jnp
hlt
idiv
cmp
mov
rcr
ja
sub
cdq
xchg
xlat
xchg
xchg
mov
jns
ins
dec
outs
mov
add
lock
lds
mov
mov
jno
pop
adc
scas
mov
mov
fadd
xchg
movs
mov
outs
lea
or
or
mov
(bad)
or
sbb
test
sub
ret
es
jg
fsub
imul
pop
ror
sbb
cmp
pop
out
push
add
int3
les
xor
leave
mov
cmp
xor
cmps
pop
lahf
pop
outs
ret
xor
push
push
pop
xchg
mov
add
jno
out
outs
sar
data16
inc
and
ss
or
add
xor
sub
leave
xchg
mov
aam
fsubr
(bad)
xor
mov
mov
push
xchg
pop
inc
jmp
mov
test
stos
jno
sub
dec
loop
scas
int3
mov
ja
and
pop
fwait
popf
dec
fsubr
add
push
sar
cmp
fimul
jmp
ins
aas
nop
out
dec
inc
inc
pusha
neg
int3
outs
or
and
mov
in
lahf
clc
retf
sbb
jns
js
popf
movs
jb
vmovups
inc
mov
dec
gs
inc
out
repz
stos
sbb
(bad)
das
pop
jmp
movs
sbb
jge
(bad)
pop
fimul
sub
dec
dec
add
fisubr
or
adc
mov
push
push
lahf
cwde
arpl
pop
(bad)
imul
sbb
imul
pop
fmul
hlt
(bad)
adc
pop
mov
jno
mov
and
cwde
mov
mov
pop
data16
push
adc
(bad)
jmp
inc
sbb
mov
sub
sti
dec
xor
adc
cmp
(bad)
repz
retf
jg
fimul
xor
xor
ret
call
mov
in
imul
add
inc
adc
inc
scas
jl
push
inc
out
or
push
(bad)
lods
in
cmps
pop
cmp
xchg
mov
shl
ret
mov
push
ror
aad
ret
mov
icebp
sub
mov
aas
sbb
cmc
fistp
jb
fnstenv
inc
ins
or
ins
fcmovb
ins
cmovbe
inc
das
mov
mov
cs
lock
das
mov
sub
dec
call
or
loop
jb
push
mov
inc
rol
into
sbb
sar
pushf
stos
add
mov
jbe
adc
adc
jecxz
int3
mov
pop
dec
and
sti
inc
lods
bound
sub
or
cmp
sub
pop
fnsetpm(287
cli
fcomp
fnstcw
xchg
add
adc
mov
jecxz
call
inc
add
and
lahf
push
hlt
clc
and
xchg
sub
arpl
cs
add
inc
xor
repnz
cmp
adc
or
add
neg
pop
mov
fs
rcr
mov
loope
xor
pop
popa
in
mov
push
daa
or
fcomp
aad
dec
or
push
mov
jnp
pop
not
aas
mov
aad
pop
mov
idiv
jecxz
inc
ror
clc
fmul
rcl
cmp
xchg
push
jp
fld
mov
cmps
ret
jno
mov
mov
pop
ret
cmps
imul
shl
push
retf
xor
xor
loope
ja
mov
fwait
xor
repz
pop
data16
popa
push
adc
ins
out
enter
addr16
leave
inc
mov
fcomp
call
fwait
data16
aad
mov
outs
pop
(bad)
sahf
mov
(bad)
pop
add
ficomp
mov
adc
mov
sub
jne
ja
mov
ret
mov
xchg
es
in
or
retf
push
push
dec
push
add
fistp
mov
xor
xchg
xor
loope
test
aad
xor
int3
cli
cdq
xor
or
mov
sbb
mov
pusha
xor
(bad)
(bad)
ror
dec
clc
test
sub
mov
ret
aas
in
cmp
mov
mov
lods
pop
mov
iret
mov
jg
daa
mov
outs
jns
ins
xor
js
mov
js
xchg
data16
das
xor
mov
or
cli
mov
daa
inc
and
dec
or
inc
loope
js
xor
je
sub
adc
push
xchg
sbb
xchg
xchg
adc
and
ja
adc
inc
inc
(bad)
icebp
lahf
jmp
loop
nop
cmp
es
xor
pop
add
test
sub
out
mov
ror
xchg
add
mov
(bad)
adc
scas
mov
mov
inc
popa
push
aad
cmp
cmps
pop
xor
add
push
mov
mov
lock
pop
adc
(bad)
cdq
cmp
aad
jbe
or
xor
repz
es
xchg
push
lahf
mov
sbb
jmp
dec
sbb
jns
dec
mov
jp
xchg
mov
popf
in
out
stc
mov
loop
cmps
push
sub
lahf
mov
jae
mov
mov
sar
cmp
retf
test
(bad)
test
inc
jg
retf
pop
imul
cld
dec
inc
xchg
(bad)
popf
repnz
arpl
push
jne
fldenv
mov
sahf
dec
lahf
add
sub
pusha
jnp
bound
aad
lds
in
mov
mov
das
push
pop
mov
loopne
and
out
jp
mov
or
hlt
xor
sbb
or
not
and
mov
icebp
add
adc
mov
cmp
mov
cmp
loopne
inc
add
sbb
loope
test
jmp
fs
aam
ins
pop
enter
loopne
cmp
aad
outs
imul
out
add
dec
mov
add
mov
cwde
ret
jmp
inc
mov
and
ss
inc
inc
int
mov
rcr
dec
adc
idiv
jp
mov
xor
jp
and
setge
add
stc
imul
ror
mov
cli
push
pop
mov
mov
fdivr
repz
sub
loopne
ins
mov
fimul
xor
cmp
pop
mov
mov
xchg
jno
outs
mov
pop
bnd
call
jbe
dec
add
imul
dec
int3
retf
ficom
cmps
imul
cmp
cmp
and
ja
dec
pop
cmps
xchg
dec
add
sub
push
jge
dec
pop
imul
(bad)
das
jns
push
hlt
fisubr
aas
fdivr
adc
sbb
jge
int
push
xor
pop
jmp
cmp
xchg
sbb
jnp
repz
fsub
in
loop
out
pop
mov
pop
mov
loop
sahf
xlat
daa
sub
pop
mov
pop
jb
lds
mov
push
jae
adc
cwde
mov
jno
out
std
adc
sbb
jmp
call
dec
adc
fdivr
xor
push
jp
inc
or
daa
add
pop
push
or
rcr
inc
mov
pop
mov
cmp
sahf
mov
popa
xchg
xor
cld
icebp
push
or
int3
ret
jae
sub
(bad)
mov
test
(bad)
lock
outs
sub
cs
xchg
inc
sar
in
cmp
cmovbe
mov
inc
mov
pop
ret
fisttp
push
sbb
fild
add
test
jns
scas
(bad)
mov
dec
scas
sub
outs
mov
add
or
dec
inc
mov
fild
dec
sbb
(bad)
ins
cmp
setne
pop
sbb
mov
iret
(bad)
(bad)
dec
mov
dec
mov
stc
clc
xchg
sbb
scas
xchg
in
outs
cmp
movs
inc
mov
iret
imul
sbb
push
es
out
cmp
cmp
ror
and
dec
xor
cmp
and
dec
fld
cmps
pop
retf
and
jge
inc
xor
fisubr
jno
mov
mov
xchg
mov
rol
(bad)
repz
mov
xchg
js
jb
push
and
loop
ret
arpl
push
and
pop
adc
ss
dec
mov
mov
test
lods
dec
scas
xchg
adc
mov
mov
jbe
or
jmp
lahf
sub
jge
jge
pop
stos
lock
dec
mov
xor
inc
test
in
fwait
fs
or
sahf
pop
jo
imul
mov
outs
icebp
retf
pop
loop
push
adc
test
(bad)
pop
sbb
stc
pop
mov
in
nop
icebp
or
rol
jmp
movs
shl
addr16
push
and
popa
dec
lds
jne
div
repnz
mov
cmp
lods
mov
mov
jo
pop
into
aaa
je
loopne
pop
outs
dec
and
adc
push
pop
imul
jmp
sub
and
cmc
cmp
int
repnz
not
shl
movs
jns
cmp
mov
mov
rcl
loope
mov
(bad)
mov
mov
mov
cmp
push
les
cmc
sbb
ds
xor
xchg
cdq
sub
sbb
jno
rcl
fwait
out
dec
inc
repnz
inc
lods
outs
ins
jmp
les
adc
aam
inc
or
sub
mov
sahf
enter
sbb
mov
ficom
jbe
mov
mov
mov
shl
fdivr
jne
xor
sbb
lods
(bad)
enter
lahf
and
push
or
sbb
neg
or
movs
fadd
jno
inc
loope
push
btc
jo
dec
add
or
pop
ret
xchg
push
leave
mov
fadd
scas
mov
push
sub
pop
loopne
jge
retf
nop
inc
aas
xor
rcr
fs
out
fild
pop
jno
aaa
mov
xchg
scas
jb
fcom
cmp
jns
(bad)
ja
xchg
lds
pop
push
ins
mov
xchg
and
mov
push
mov
retf
jp
mov
mov
jbe
mov
cmp
cmp
jne
call
jge
fs
cmps
cmp
mov
(bad)
cli
and
stos
push
sbb
clc
ret
fs
dec
inc
cld
mov
idiv
cmp
test
adc
arpl
and
xchg
jg
jo
push
mov
pusha
dec
cwde
shr
je
loope
je
push
int3
jns
jns
dec
test
adc
push
mov
cld
or
mov
xchg
lods
add
add
pop
fadd
xor
neg
mov
mov
sar
aad
(bad)
adc
out
mov
inc
cli
and
sbb
sbb
and
jle
out
movs
push
sbb
js
mov
in
jmp
(bad)
int
(bad)
cmc
push
rcr
je
mov
(bad)
or
pop
adc
dec
idiv
pop
sbb
adc
dec
jb
mov
dec
retf
pop
adc
std
mov
pop
shl
ror
test
ret
mov
cmc
xchg
sbb
xchg
ret
int
sub
clc
hlt
pusha
sbb
loopne
cmps
cmp
mov
add
and
adc
and
jno
call
cdq
push
ret
mov
(bad)
cdq
les
push
push
and
cli
cli
aam
daa
xchg
pop
rol
pop
(bad)
cmp
fdivr
sbb
mov
xor
fistp
out
in
dec
popa
mov
jl
jmp
or
aam
mov
inc
lods
adc
fmul
and
adc
inc
aam
es
(bad)
mov
sbb
in
xchg
imul
ds
cli
stos
pop
dec
dec
js
mov
repnz
mov
bound
jmp
inc
aas
mov
sub
add
mov
inc
add
ror
call
imul
imul
adc
movs
pop
jno
lods
addr16
jne
cmp
into
test
scas
xor
ror
xchg
popa
adc
imul
inc
mov
sbb
sahf
adc
mov
rol
pop
(bad)
test
xchg
nop
in
cdq
out
sub
ins
call
dec
push
pop
fstp
cld
fadd
adc
push
jb
fpatan
sar
mov
into
mov
(bad)
sbb
scas
hlt
mov
popa
imul
mov
xchg
mov
xchg
adc
mov
into
fstp
add
xor
mov
push
retf
mov
repnz
imul
add
mov
xchg
xchg
cli
jnp
jmp
jne
popf
outs
mov
ret
push
test
push
sbb
fwait
test
call
add
jae
sub
cs
push
shl
push
cmps
fidivr
and
arpl
push
mov
dec
dec
test
add
les
loopne
aam
ret
dec
dec
fs
pop
sbb
jns
scas
repz
pop
les
adc
retf
pop
mov
and
call
cli
xchg
adc
xchg
dec
sahf
shl
ror
add
loop
cmp
or
aas
clc
ja
shl
ss
dec
ret
retf
cmp
push
in
outs
push
call
jmp
jb
int
pop
mov
xor
bound
enter
pop
arpl
mov
icebp
or
(bad)
mov
pusha
das
push
and
cmps
cmp
movs
daa
push
(bad)
mov
loope
push
iret
jmp
js
mul
repnz
mov
jmp
aas
mov
push
arpl
xlat
ror
mov
adc
pusha
call
popf
ins
int3
cmp
ss
xor
push
dec
pushf
adc
out
icebp
mov
sbb
test
ror
mov
mov
mov
inc
test
and
cli
retf
fwait
leave
das
lods
rcl
(bad)
into
bound
jbe
adc
sbb
aam
xor
rep
imul
cmps
push
add
mov
pop
sub
and
mov
sub
outs
mov
stc
arpl
lahf
jmp
push
add
add
jnp
cmp
test
cmps
daa
add
stos
adc
mov
mov
adc
retf
sub
adc
adc
shr
(bad)
fwait
sub
pop
movs
mov
cmp
jg
pop
add
and
lds
ja
(bad)
test
nop
xchg
mov
imul
cdq
data16
adc
test
call
mov
adc
mov
xchg
repnz
sbb
in
add
cmp
ins
add
or
(bad)
out
stos
clc
mov
loopne
ins
imul
sbb
pushf
jb
int
cmp
or
aam
repz
mov
fimul
sar
aas
lea
add
dec
pusha
mov
sub
inc
mov
je
lods
call
or
pop
cld
dec
mov
icebp
or
aaa
inc
lock
scas
arpl
push
jecxz
shl
mov
inc
pop
loopne
ja
js
dec
mov
xor
out
mov
push
or
mov
dec
sbb
movs
outs
(bad)
xchg
(bad)
fst
jo
nop
sbb
aas
loop
xor
mov
mov
inc
cld
or
out
xchg
sbb
(bad)
into
sub
mov
jecxz
addr16
sbb
xchg
out
bound
mov
movs
inc
inc
inc
and
pop
aaa
add
in
mov
push
sub
adc
sar
adc
dec
int
dec
test
dec
test
jg
dec
out
and
in
movs
scas
add
jo
push
aad
mov
sbb
jae
add
pop
sub
xchg
lahf
jmp
push
mov
push
mov
or
out
ror
retf
in
rol
fdiv
rol
mov
push
adc
imul
or
or
push
in
(bad)
out
out
mov
mov
sbb
xor
mov
iret
enter
(bad)
inc
sub
je
dec
vpcmpgtw
popa
adc
adc
(bad)
loope
sbb
or
dec
imul
push
push
repz
scas
mov
xchg
fwait
(bad)
bound
(bad)
cs
movs
pushf
dec
les
in
mov
retf
jmp
jp
das
fucomp
sbb
jmp
mov
das
cmp
fdivr
out
jmp
les
sbb
pushf
aas
pop
or
sbb
inc
aas
es
(bad)
and
(bad)
out
or
and
fs
cmc
into
addr16
dec
push
add
sahf
add
add
jmp
xor
retf
xlat
in
jno
push
cmp
sub
mov
adc
push
pop
sar
clc
cmp
in
retf
retf
cdq
stos
aam
jle
mov
add
pop
push
imul
fnstsw
jg
(bad)
(bad)
lock
inc
jnp
adc
fidivr
movs
adc
not
std
(bad)
lahf
cs
loope
jno
ret
loopne
dec
scas
pop
add
mov
out
nop
pusha
pushf
push
sti
mov
ins
xchg
mov
cdq
mov
iret
and
pop
cmp
ds
sbb
hlt
xor
arpl
mov
loope
clc
xchg
stos
(bad)
int
inc
pop
mov
rol
cmp
add
or
sub
js
jne
xor
shr
mov
add
data16
inc
test
cmp
call
arpl
push
stos
push
fst
icebp
fdivrp
mov
jmp
jbe
sub
rol
das
cmp
sbb
sti
ret
test
push
xlat
rol
in
repz
mov
cmp
xchg
stos
test
mov
loop
stos
mov
dec
leave
push
lods
xor
out
fwait
xor
int3
mov
push
and
cmps
add
adc
cli
push
jo
mov
mov
out
addr16
arpl
jg
sub
xchg
add
adc
add
pop
xchg
dec
add
jmp
jnp
rol
add
mov
mov
pop
enter
pusha
inc
js
or
shl
push
push
push
repnz
call
xchg
xor
fisubr
sub
mov
push
imul
ret
mov
inc
rol
ret
popf
xor
sti
mov
ja
(bad)
pop
(bad)
mov
ins
jle
pop
add
inc
or
mov
into
xchg
pop
(bad)
gs
xlat
adc
mov
dec
xchg
and
pop
lea
sub
jns
pop
mov
loopne
inc
icebp
lock
retf
adc
mov
ja
clc
lahf
das
mov
pushf
adc
pop
ss
loop
jo
ins
idiv
mov
inc
xchg
mov
test
jns
pushf
add
jno
adc
shl
movs
jnp
dec
(bad)
sbb
mov
xchg
cdq
jmp
sbb
or
lea
lds
sbb
mov
jle
jmp
mov
inc
jmp
mov
repnz
and
movs
mov
dec
mov
xor
xor
xor
push
mov
push
call
jmp
ss
xor
cmp
jg
(bad)
movs
arpl
cmp
inc
fcom
cmp
neg
in
pushf
hlt
add
movs
neg
out
pop
test
sbb
pusha
push
enter
test
inc
cmp
cmp
inc
fwait
adc
test
mov
sub
cmp
out
ftst
mov
nop
mov
pop
mov
pop
sbb
retf
cmp
icebp
mov
push
ins
es
xchg
mov
je
cmps
cmp
cmp
inc
mov
push
or
or
jnp
xor
les
cmps
mov
inc
ds
in
sbb
jne
and
popa
outs
jo
mov
out
test
fsubr
mov
(bad)
movsx
outs
push
xor
je
cmp
mov
ret
adc
xchg
out
pop
sub
bound
xor
pop
sbb
jbe
nop
(bad)
mov
mov
fld
cdq
push
mov
std
push
(bad)
mov
scas
sbb
fst
sar
dec
sub
mov
popf
jl
xchg
out
lea
push
dec
xchg
cmp
cli
and
cs
in
fist
addr16
clc
addr16
inc
(bad)
and
mov
mov
adc
js
add
imul
mov
ins
cmp
fisttp
dec
cmps
retf
or
push
pop
cli
mov
mov
mov
mov
fs
mov
jno
inc
fild
mov
and
out
pop
mul
loop
mov
test
jns
test
mov
(bad)
xchg
scas
xchg
mov
and
cli
inc
test
mov
xchg
outs
ja
icebp
dec
mov
iret
and
cmp
aas
jbe
push
cmp
in
dec
ins
push
inc
xchg
in
cdq
in
sbb
mov
mov
in
test
cwde
js
jg
inc
repnz
test
mov
sbb
add
push
fwait
outs
inc
rcr
cmc
sahf
ja
cmp
fcmovnbe
and
mov
xchg
pop
or
es
jecxz
ror
in
call
dec
ror
and
pop
bound
icebp
(bad)
cmp
push
popf
cmp
(bad)
mov
push
pushf
call
(bad)
jge
add
adc
int3
mov
cvtps2pi
sbb
pop
cmp
mov
es
xchg
cmp
pop
fptan
fwait
xor
aas
imul
mov
call
jae
pop
lds
scas
bound
aam
bound
adc
cmps
(bad)
jmp
popf
add
pop
jne
inc
ss
and
mov
cwde
mov
push
scas
pop
xor
ds
in
mov
jnp
ror
add
dec
test
push
icebp
push
std
inc
fisub
adc
sub
in
addr16
and
sbb
cmp
push
dec
jo
cwde
daa
lock
xor
dec
jg
xlat
add
or
push
sub
ss
adc
cwde
call
call
sbb
inc
pop
ins
adc
cmps
cmps
in
mov
and
outs
pop
jmp
mov
cmp
xor
movs
or
fdivr
add
mov
xchg
int
mov
mov
mov
mov
adc
sub
push
add
and
mov
xor
inc
ror
repnz
inc
mov
or
ins
fsubr
xor
popf
pop
mov
movs
cmp
jmp
cmp
push
cmc
das
push
(bad)
push
aam
sub
pop
daa
scas
jmp
inc
(bad)
or
jns
test
pop
daa
enter
icebp
shl
pushf
mov
rcl
sbb
fwait
test
cmp
inc
sub
jo
jl
mov
mov
and
int
call
inc
jmp
aam
fild
jns
sub
xor
push
je
shl
cmp
out
or
push
push
jle
pop
ja
popa
dec
outs
xor
or
neg
pop
jmp
or
push
push
popa
std
(bad)
sbb
movs
adc
call
jb
daa
cmp
sbb
adc
jge
cmp
pop
popa
xchg
cmp
enter
pop
dec
jne
adc
add
int3
(bad)
outs
ins
push
pop
and
mov
mov
xor
inc
or
mov
inc
popa
xchg
ss
push
js
iret
xor
dec
ds
mov
jl
fsubr
mov
xchg
in
mov
inc
xchg
test
icebp
int3
rcr
sub
icebp
mov
xchg
or
sub
rcr
inc
clc
and
aam
ret
loope
hlt
cld
test
in
cmp
in
pop
dec
pop
sahf
test
mov
scas
ret
call
xchg
and
je
(bad)
xor
repz
mov
dec
not
mov
call
pop
dec
aad
mov
dec
imul
sub
stos
nop
cmp
jmp
mov
xor
lods
sti
add
lock
dec
jmp
outs
push
mov
jecxz
inc
add
sub
mov
push
scas
xchg
out
out
sub
push
mov
xlat
mov
retf
jne
ins
or
and
mov
in
pop
xor
add
cwde
fbstp
fnstsw
cmps
int
rcl
sub
int3
xchg
mov
pop
jecxz
dec
in
adc
mov
int
repz
aas
pop
sar
pushf
ins
jecxz
ins
sbb
push
out
int
jl
out
rol
scas
or
pop
enter
push
std
pop
popa
(bad)
cwde
fs
xor
test
loopne
jne
cmps
push
push
mov
sti
mov
add
cs
lods
(bad)
sbb
sub
call
(bad)
fwait
mov
jbe
sbb
xchg
and
outs
dec
imul
loopne
adc
ins
push
adc
xor
push
mov
xor
dec
and
add
ja
mov
jmp
or
popf
fidivr
(bad)
arpl
mov
test
in
inc
push
jecxz
out
setbe
imul
(bad)
arpl
(bad)
(bad)
pop
mov
push
arpl
sbb
iret
test
pop
enter
in
mov
xchg
xor
sub
dec
mov
fbld
out
repz
mov
jge
fmul
pop
mov
mov
sub
sub
arpl
xor
pop
inc
fdiv
push
test
inc
es
cmp
nop
dec
test
ins
call
jmp
or
jnp
inc
ja
dec
inc
and
leave
adc
fs
ss
mov
and
xor
lds
cmp
ins
push
cmps
movs
cmp
jmp
fcom
cdq
gs
mov
and
cmc
aad
cmp
pusha
out
call
mov
movs
cmps
arpl
sbb
and
mov
push
push
loopne
imul
mul
inc
hlt
jge
jmp
sbb
(bad)
xor
jae
enter
stos
xor
adc
or
daa
loope
mov
mov
jge
mov
or
push
xchg
loope
ins
dec
push
aas
inc
push
(bad)
xor
or
jno
stos
dec
fldcw
dec
jae
xor
fwait
cs
in
push
xchg
add
mov
loope
std
ret
and
adc
mov
xor
mov
aaa
cmp
inc
xor
movs
ror
sub
inc
mov
inc
pop
pop
mov
or
inc
mov
(bad)
ins
in
sbb
in
xchg
(bad)
sbb
pop
in
pop
idiv
xor
xor
loop
clc
test
mov
mov
and
xchg
xchg
dec
int3
dec
bound
adc
mov
jp
cmp
inc
ret
dec
in
fstp
and
sub
cli
cmps
push
stos
outs
ret
imul
scas
outs
loopne
cmp
mov
cmp
dec
pop
les
push
call
mov
lods
pusha
cmp
cs
fs
jnp
in
sbb
retf
xor
mov
clc
mov
ins
dec
xchg
popf
and
pop
imul
adc
jae
push
push
jmp
push
mov
pop
retf
or
xchg
adc
and
mov
mov
daa
sbb
or
mov
add
xchg
or
xor
lock
xor
sahf
cmp
push
inc
add
cmp
adc
add
xchg
add
test
inc
dec
(bad)
push
in
sbb
add
inc
je
in
test
xchg
lds
leave
mov
xlat
rcr
sbb
shl
aaa
jle
push
cs
adc
adc
dec
xchg
adc
std
cmc
jl
test
push
mov
and
sbb
adc
mov
or
fiadd
and
xchg
into
scas
add
in
ds
sbb
int
(bad)
and
fwait
xchg
test
das
int
call
mov
mov
dec
push
loopne
mov
shl
pop
add
dec
and
and
xor
xchg
out
sbb
inc
out
adc
ror
daa
sub
add
js
scas
sbb
pop
cmp
rcl
xor
add
mov
fist
push
adc
jmp
sbb
push
mov
aad
jns
aad
dec
or
aam
sbb
sbb
xchg
stos
sbb
ds
stos
sub
xchg
adc
inc
xor
(bad)
cmp
lock
inc
call
mov
push
icebp
retf
pop
sbb
pop
dec
dec
fdivr
stos
imul
jo
aad
xchg
test
fwait
in
jmp
push
mov
jb
mov
fwait
xchg
xor
(bad)
jle
scas
push
imul
dec
jae
push
sti
dec
mov
(bad)
mov
push
aam
jae
and
stos
addr16
ds
ins
xor
push
mov
inc
mov
fild
lds
mov
sub
repz
and
lock
pop
jb
(bad)
dec
pusha
dec
sbb
mov
push
mov
mov
(bad)
or
das
movs
cmps
cdq
jle
into
inc
cmp
scas
mov
(bad)
call
mov
adc
inc
test
and
xchg
and
ins
inc
outs
push
test
stos
xor
add
movs
imul
xchg
ret
cli
push
sub
out
fwait
sti
scas
xlat
and
dec
lods
or
stos
mov
push
aaa
lahf
into
inc
xchg
sub
jmp
xor
sub
or
mov
mov
pop
mov
sub
xor
jae
scas
sbb
lds
in
adc
mov
movs
inc
ins
and
cmp
repnz
ret
ret
pop
loop
aad
adc
sar
adc
jne
and
paddw
inc
pop
add
pop
mov
push
sbb
sub
fldcw
cmp
shl
xchg
adc
jmp
das
pop
hlt
div
mov
mov
aam
jmp
repnz
je
xlat
pusha
(bad)
enter
sbb
fldenv
inc
adc
imul
sbb
out
push
and
and
cli
jmp
jno
push
add
ins
popf
and
lahf
in
mov
data16
push
add
mul
cmp
or
std
std
sub
pushf
sbb
mov
loopne
cmp
(bad)
push
out
ss
fistp
inc
cmp
or
adc
push
mov
mov
push
or
or
loopne
std
mov
cs
xchg
or
daa
(bad)
pushf
lock
xchg
out
out
adc
xchg
test
push
mov
and
sbb
mov
cwde
jne
adc
xlat
add
ret
and
mov
retf
stos
pop
inc
push
cdq
loope
dec
lock
bound
cli
add
dec
into
daa
test
clc
lods
imul
mov
cmovl
stc
push
pop
cmp
out
test
pop
inc
out
jb
ds
dec
mov
sbb
cmp
(bad)
mov
sti
jp
xor
imul
(bad)
out
cmps
retf
cs
ds
pop
shr
mov
mov
push
adc
pop
ins
pop
pop
push
mov
xchg
icebp
pop
out
pushf
cmp
pop
test
ret
scas
jb
push
loop
sub
or
out
sub
cli
outs
jo
faddp
sub
(bad)
sub
inc
sbb
out
nop
mov
fcmove
cdq
adc
retf
dec
ds
and
stos
sti
bound
mov
addr16
adc
clc
pop
mov
add
out
repnz
mov
call
in
mov
mov
stos
pushf
aas
repnz
jl
cdq
cmp
pop
and
(bad)
enter
scas
pushf
cli
dec
repnz
push
data16
sub
cmp
add
out
mov
gs
jae
jne
cmp
fcom
mov
pushf
fucom
ror
jg
or
(bad)
call
es
mov
in
(bad)
and
push
movs
rcl
push
and
jne
pusha
mov
test
fs
add
inc
pop
mov
movs
xchg
cli
pop
clc
ficomp
xor
mov
sub
ja
jno
out
jmp
retf
mov
xor
test
pop
sub
popf
pop
repnz
dec
rcl
bound
push
lods
cld
das
sub
cld
inc
inc
pushw
mov
scas
iret
mov
pop
in
mov
popa
mov
push
push
aam
imul
push
cmp
jno
test
aas
fstp
pop
call
dec
jns
inc
mov
or
dec
inc
mov
outs
call
inc
sti
test
push
mov
cmp
in
and
add
pop
jne
adc
aam
stos
mov
pop
ins
xchg
in
int3
cwde
pop
ror
push
aam
(bad)
xchg
mov
cld
and
sub
fucom
xor
jb
fwait
pop
jmp
(bad)
(bad)
(bad)
outs
pop
push
xor
push
lds
fcmovnu
adc
add
pop
mov
clc
and
and
sub
fsub
(bad)
push
sub
mov
pop
fisub
dec
cmp
ja
mov
push
pop
mov
inc
dec
mov
pop
ins
fisttp
inc
jb
loop
aas
pop
nop
outs
sub
ss
push
mov
pop
inc
adc
mov
or
jle
inc
fwait
add
push
icebp
and
sahf
mov
cli
ds
addr16
sahf
inc
dec
lock
jmp
(bad)
fimul
mov
fistp
add
pop
retf
leave
retf
add
fwait
js
cmps
push
adc
add
jb
jo
pop
push
out
test
nop
xchg
into
fs
mov
push
add
xchg
std
mov
jmp
ret
mov
mov
pop
cmp
push
das
dec
push
add
enter
add
xchg
fild
in
mov
jns
xor
mov
mov
inc
in
movs
fstp
mov
stos
adc
(bad)
retf
data16
cwde
jne
push
mov
daa
cmp
jns
jae
mov
imul
cmc
fistp
push
xor
aas
cld
popf
test
cs
inc
daa
loop
add
clc
pop
pop
and
xor
int
sahf
xor
pop
dec
cwde
mov
dec
jmp
or
je
mov
mov
pushf
scas
ret
and
xchg
mov
mov
push
jmp
out
outs
xchg
and
and
into
jg
or
cmp
xchg
aam
or
loope
or
fldenv
in
cmp
inc
or
mov
xchg
sbb
sbb
cmp
jae
in
pop
out
aas
je
mov
(bad)
push
stc
add
jmp
cmp
ja
test
sar
and
mov
lahf
dec
nop
xor
lds
and
ins
push
inc
cmp
std
pop
mov
sbb
cdq
mov
jecxz
dec
ins
xor
push
xchg
xor
mov
pop
fimul
sub
and
jb
daa
retf
stc
dec
(bad)
xor
leave
rcl
push
push
jp
fcomip
aad
(bad)
mov
(bad)
sbb
add
sub
jae
xlat
in
cmc
imul
repz
addr16
xor
mov
lahf
pop
and
push
mov
cli
push
pop
inc
ret
call
test
loope
(bad)
push
add
in
repnz
dec
push
cmp
fldenv
repz
pop
rol
loope
inc
ja
fwait
adc
fsub
xchg
iret
and
cld
ret
mov
loope
in
inc
dec
cwde
mov
scas
sbb
test
ror
add
jmp
sti
cmp
cmp
call
adc
mov
bound
test
ret
dec
sub
ins
cmp
lea
(bad)
sti
mov
push
std
jle
shl
push
loop
lea
jl
or
stos
pop
push
mov
mov
cmovne
iret
popa
ins
fisttp
aas
pop
mov
add
out
test
lahf
stos
cmp
(bad)
xchg
test
push
mov
lock
sbb
cmp
mov
test
or
mov
jp
arpl
fcomp
push
cs
dec
ret
(bad)
scas
mov
movs
sub
add
inc
xor
adc
rcl
test
adc
std
mov
or
inc
or
int3
xchg
dec
adc
cld
sub
jge
mov
adc
scas
mov
mov
aam
js
push
fsubrp
cmp
xor
adc
mov
lods
outs
ins
call
xchg
adc
arpl
or
iret
aas
dec
cwde
xor
div
mov
xchg
mov
arpl
cli
push
in
lahf
sbb
lods
xchg
ins
add
pop
add
push
mov
add
stos
mov
adc
push
out
mov
dec
das
leave
es
mul
fstp
jp
jecxz
xchg
aam
cmp
push
ret
mov
(bad)
arpl
mov
add
outs
es
push
or
push
ja
mov
xchg
aaa
aaa
mov
mov
lea
push
rol
jno
arpl
lahf
lahf
add
sub
mov
xor
cmps
cmps
lea
(bad)
clc
fadd
std
mov
jge
repnz
xlat
push
add
mov
jbe
lods
adc
clc
inc
push
sbb
or
and
dec
les
fist
out
ret
push
and
cmc
shl
push
fcmovne
(bad)
fmul
and
ja
test
push
pop
sbb
mov
jb
rcl
add
mov
bound
shl
dec
jl
push
xabort
jae
cdq
daa
addr16
pop
jnp
inc
fld
cdq
cmp
mov
neg
jl
test
outs
inc
(bad)
add
and
mov
pusha
loop
in
sti
in
dec
sar
or
push
cmc
push
pop
loopne
adc
fs
ins
xchg
mov
xor
mov
push
inc
pusha
lock
mov
popf
adc
cmp
lock
pop
mov
into
jg
inc
ret
dec
cs
retf
xor
fstp
jbe
mov
sub
ret
stos
inc
neg
cld
call
lea
cmp
xchg
xor
push
and
retf
out
mov
leave
jge
cmp
mov
xchg
aas
and
pop
mov
push
mov
stos
aas
sbb
pop
iret
aam
sbb
jae
fisubr
mov
sbb
xor
mov
jg
cmovne
std
push
mov
dec
in
push
adc
or
xchg
ja
cmps
(bad)
retf
fldcw
cmp
int
scas
outs
aas
inc
inc
sub
or
push
loopne
pop
or
jo
bound
mov
mov
fwait
mov
push
dec
jg
clc
shr
adc
adc
sub
jbe
push
mov
icebp
mov
sub
outs
icebp
lock
(bad)
sbb
lods
sub
xor
jno
int
fild
outs
pushw
fdivrp
jo
mov
aam
adc
call
push
into
sub
and
jmp
mov
xchg
or
cmps
aad
stc
lods
retf
(bad)
jmp
ins
in
jmp
shr
add
inc
push
(bad)
sahf
adc
push
pop
push
xchg
push
nop
(bad)
fidivr
imul
mov
cmp
scas
add
(bad)
mov
pop
inc
pop
jne
adc
mov
in
jns
repz
inc
dec
pop
xchg
mov
cmp
inc
fdivr
aam
(bad)
push
xchg
sub
or
(bad)
loope
es
adc
loop
mov
clc
sub
fisttp
xor
add
call
jb
jg
addps
mov
xor
push
stc
pop
movs
and
gs
pop
sub
pop
sbb
inc
sub
popa
cli
pop
xchg
add
(bad)
movs
clc
dec
mov
rcr
cdq
in
js
aad
icebp
sti
test
cwde
xor
dec
std
jg
movs
popa
add
pushf
cmp
add
cli
mov
fxch
mov
(bad)
nop
pusha
jb
aaa
lock
dec
ins
or
(bad)
pop
(bad)
sbb
xchg
js
(bad)
mov
retf
adc
loop
push
ror
sub
mov
cmp
adc
xchg
shl
ror
lods
mov
xor
fisub
cmc
nop
movs
(bad)
(bad)
sub
adc
(bad)
(bad)
enter
shl
adc
fisubr
lds
xchg
dec
cli
nop
xor
xor
hlt
push
mov
lock
mov
bnd
mov
add
xchg
mov
repz
cs
push
inc
add
mov
xor
or
retf
ficom
cmps
aam
mov
mov
es
lods
icebp
sbb
mov
mov
sahf
fidivr
lahf
sub
(bad)
push
lock
sar
dec
add
xchg
pop
les
inc
in
movs
mov
std
loope
pop
fistp
jne
adc
and
mov
mul
mov
mov
dec
mov
dec
dec
mov
xchg
aas
fwait
icebp
pop
cld
daa
inc
dec
inc
pop
int3
xor
fiadd
jns
lds
jo
lock
xor
cmp
mov
daa
in
jp
shl
pop
int
sbb
and
test
inc
(bad)
loop
shl
(bad)
mov
push
mov
scas
and
or
cwde
inc
icebp
or
sub
call
mov
sahf
xchg
jbe
dec
icebp
hlt
adc
cwde
(bad)
lds
hlt
(bad)
fst
fwait
lds
or
sub
add
lods
fnstsw
jne
and
mov
sahf
loopne
mov
mov
sub
mov
mov
jo
shr
pop
push
inc
std
xchg
sar
(bad)
dec
std
and
fisub
dec
push
mov
sub
mov
(bad)
and
icebp
fidiv
xor
and
jmp
int3
fld
inc
stos
mov
xor
push
mov
ins
push
pop
push
sub
sahf
jle
dec
lods
pop
aam
es
adc
bound
aaa
retf
fwait
mov
jnp
adc
sbb
mov
xchg
cli
sar
(bad)
sbb
out
out
push
lea
sbb
mov
jnp
(bad)
cmps
neg
sub
jbe
in
enter
outs
pop
or
push
hlt
mov
mov
lds
scas
rcr
mov
dec
and
cdq
inc
mov
jnp
fwait
aaa
out
stos
pop
mov
sbb
stos
cmp
sub
jecxz
jp
loopne
mov
pop
inc
cmp
adc
popa
push
inc
sub
jmp
xchg
movs
sbb
out
push
dec
cmp
(bad)
xor
inc
and
add
xchg
add
pusha
inc
ins
lahf
cdq
fs
add
or
test
(bad)
mov
push
sub
add
fisub
dec
out
or
jo
jge
pop
cmp
sbb
lock
or
lds
sub
pop
and
test
lea
imul
xchg
adc
sbb
jns
cmps
test
cmps
loope
fisubr
dec
pushf
and
pop
mov
lods
mov
(bad)
fs
js
call
sbb
in
and
sbb
mov
movs
hlt
xor
xchg
cs
inc
ins
and
mov
push
jmp
stos
test
lahf
xadd
mov
mov
xor
retf
mov
xor
rcr
lods
enterw
xchg
(bad)
aad
ja
mov
stc
data16
in
retf
xlat
ins
pop
cmps
outs
mov
mov
call
popa
retf
inc
call
ja
push
mov
mov
xchg
lods
mov
mov
imul
test
pop
into
outs
lock
das
sbb
cwde
je
cmp
mov
imul
test
cld
mov
cmc
movs
fmul
and
rcl
jne
test
and
out
scas
les
fisubr
aas
pusha
lock
adc
mov
hlt
arpl
loop
adc
(bad)
jmp
xchg
mov
(bad)
int
dec
jns
gs
jmp
jp
outs
push
in
pop
repnz
inc
ds
movs
cmps
add
push
jae
cmps
jae
inc
add
popf
loopne
push
into
(bad)
int3
jno
mov
sub
loopne
imul
out
inc
fidivr
push
data16
add
aad
into
fidivr
cmp
and
les
pop
and
add
push
inc
stc
or
mov
stos
pop
mov
and
xchg
lahf
xchg
jo
leave
mov
mov
xor
ja
scas
movs
mov
mov
xchg
inc
push
mul
or
mov
push
(bad)
cmps
mov
ins
not
or
outs
sbb
ja
pop
add
mov
xor
or
je
shl
sub
jp
dec
push
xor
shl
or
nop
inc
and
add
ror
iret
pop
rol
mov
or
jmp
jl
outs
sbb
aad
int3
xor
jle
jge
jo
js
arpl
sub
daa
test
int3
shl
mov
dec
out
sub
sar
inc
cmp
shl
repnz
mov
mov
jnp
pushf
adc
xchg
cmp
sti
cmp
cli
xchg
addr16
jmp
in
aad
popa
or
into
pusha
sub
jno
fwait
ror
sahf
loopne
rcl
fst
push
cld
add
or
adc
js
xchg
inc
jg
cmp
and
fs
xor
ja
imul
jae
and
imul
test
addr16
xor
cmp
adc
call
mov
in
or
mov
and
aaa
repz
hlt
repnz
push
mov
xlat
cli
iret
popa
rcl
inc
in
jno
loopne
(bad)
popf
mov
pop
xor
jp
mov
inc
jbe
je
or
enter
push
iret
cs
mov
sti
xchg
jbe
sub
ins
xor
xchg
xchg
adc
(bad)
pop
leave
sbb
int3
cmp
jno
in
cs
addr16
push
mov
dec
cmc
sti
inc
outs
cwde
clc
popf
sbb
push
sbb
adc
outs
scas
shl
jb
lods
mov
leave
pop
push
cld
cmp
inc
stos
inc
pop
cmps
repz
or
ss
mov
in
mov
xchg
std
bound
fdiv
repz
pop
cmp
aam
push
call
sbb
dec
sbb
call
and
iret
clc
xchg
out
inc
mov
out
jnp
in
xchg
inc
fsub
and
aas
add
cwde
es
ins
adc
leave
push
test
std
sub
(bad)
jmp
pop
mov
test
popf
and
mov
and
cmc
mov
pop
mov
mov
cmps
inc
push
cmp
inc
lock
nop
xor
or
mov
scas
push
push
cmp
call
data16
pop
lods
adc
test
stos
dec
ret
inc
movs
sbb
shl
sub
lea
jno
pop
mov
iret
cs
and
push
jecxz
ja
test
into
jbe
popa
ror
adc
mov
cdq
js
cmp
sar
aas
xchg
push
jecxz
test
fs
test
jmp
xor
rcl
punpckldq
push
loopne
xchg
cmc
xor
sub
xchg
sbb
pop
jnp
ss
inc
mov
or
repz
mov
aam
(bad)
loopne
push
jno
test
xor
addr16
cmp
ret
jmp
push
push
mov
inc
mov
aas
xor
mov
test
mov
in
sub
rcr
ret
shl
test
das
fisubr
mov
push
mov
std
or
or
or
mov
les
dec
sahf
lods
dec
sar
cmp
sbb
cli
pop
cmp
fldcw
stos
je
out
jns
adc
cmp
call
arpl
and
jmp
clc
push
sub
push
or
sub
call
imul
mov
(bad)
cmps
xchg
adc
push
and
in
fstp
dec
mov
sub
enter
lods
jae
pop
fmul
les
fidivr
mov
cmps
jnp
pop
cmp
pop
xchg
scas
jle
pop
call
loopne
lds
test
repnz
loope
push
jg
and
xchg
into
sub
(bad)
xor
push
enter
das
or
neg
pop
mov
adc
sbb
scas
call
call
mov
jge
loopne
inc
or
iret
loope
and
lods
shl
xor
cmp
mov
jmp
das
(bad)
mov
mov
mov
test
push
stc
xchg
fcomp
mov
sbb
cmp
imul
and
popa
mov
ffreep
jg
push
ins
je
mov
xor
dec
mov
and
stos
daa
inc
fs
pop
mov
aam
bound
mov
test
and
adc
hlt
inc
outs
test
ins
cdq
mov
or
dec
in
jg
adc
leave
mov
xchg
cwde
jae
pusha
out
in
loop
jae
xchg
mov
lock
sub
xor
dec
mov
mov
xchg
int3
jns
cmp
mov
std
retf
rcr
mov
sbb
lds
sub
js
jge
jp
inc
daa
jg
fwait
mov
ds
rcr
cmps
jo
por
or
mov
stos
jmp
mov
jg
mov
lahf
retf
icebp
inc
popf
push
jmp
sbb
push
xor
bt
and
sub
add
xchg
xchg
loopne
mov
xor
out
push
test
xor
ins
fiadd
and
stos
xchg
push
ds
push
sbb
das
stc
in
hlt
adc
aad
pop
fwait
xchg
xor
sub
add
fucomp
mov
sub
(bad)
fcmovne
inc
fist
shl
mov
pop
add
aaa
or
mov
jp
stos
push
dec
inc
arpl
dec
pop
cwde
jo
test
cmp
in
lea
jmp
mov
pop
pop
xchg
jmp
add
retf
mov
imul
dec
pusha
mov
aaa
mov
lock
add
and
test
inc
sti
sub
add
cmp
pop
pop
sbb
lock
jo
mov
and
call
dec
pop
adc
xchg
fs
mov
fldpi
and
cmps
pop
inc
div
or
jl
js
mov
jno
sahf
jb
sbb
xor
fild
and
(bad)
pop
out
sar
fwait
loop
int
aam
imul
loop
and
lods
and
inc
cmp
push
dec
std
mov
lahf
dec
call
ja
out
push
outs
add
xchg
jns
xor
xchg
dec
cli
push
pop
in
mov
xchg
daa
pop
shl
nop
dec
aad
mov
ret
rcr
or
cmp
xor
xor
nop
mov
pop
dec
add
mov
test
adc
pushf
imul
sub
cmps
out
jmp
test
sub
dec
xchg
fnstenv
iret
jecxz
dec
cwde
out
and
stc
es
or
rcr
daa
in
loop
div
jno
hlt
popa
lock
jecxz
jns
clc
adc
pop
fmul
or
cwde
cwde
dec
hlt
mov
cmp
sub
outs
jge
push
mov
xchg
sti
stos
add
cmp
lea
(bad)
push
rcr
movs
sahf
xchg
mov
pop
leave
push
pop
loopne
inc
add
push
fsub
repnz
ins
stos
mov
movs
xchg
inc
push
ss
xor
fwait
leave
pop
(bad)
jb
lds
pop
retf
dec
mov
pop
dec
call
inc
sub
pop
gs
mov
dec
pop
add
(bad)
(bad)
ins
inc
shl
mov
or
push
xchg
xor
int3
pop
jbe
sub
(bad)
enter
call
push
(bad)
mov
fwait
and
push
or
and
cmp
inc
gs
lock
icebp
lods
sbb
shr
out
jl
xor
repnz
ret
std
dec
inc
inc
pop
pop
(bad)
push
xor
xchg
sub
push
add
(bad)
icebp
fidivr
cmps
rol
dec
loopne
push
in
in
stos
and
pusha
xchg
inc
cmps
loopne
in
add
stos
lahf
or
jne
out
pop
add
leave
and
inc
mov
jns
xor
mov
les
stos
call
int3
aaa
mov
repz
mov
cmc
sbb
sub
inc
enter
inc
sar
push
xchg
pop
push
aaa
movs
popa
loop
xchg
push
mov
das
add
adc
cmp
xchg
movntq
mov
pusha
cmp
in
in
fadd
sbb
adc
rcl
xor
je
jecxz
cmp
cmps
xor
popa
pop
dec
xchg
aaa
inc
leave
aaa
aaa
loope
add
hlt
test
aas
clc
imul
inc
sahf
in
shl
xlat
repnz
stc
les
pop
push
push
retf
add
mov
xchg
or
pop
(bad)
sub
sbb
pop
jns
or
xlat
sbb
repnz
cli
rcl
and
je
dec
(bad)
dec
sub
in
stos
pop
call
repnz
loop
fild
adc
add
pop
lahf
std
ja
stos
popf
mov
xchg
imul
into
sub
fdivr
xor
xor
je
push
pop
rcl
cmps
cwde
sti
in
fcomp
pop
cmp
js
adc
int3
pop
xchg
push
xor
std
dec
adc
cli
push
sbb
stos
mov
jne
xor
out
adc
scas
sbb
jg
fisttp
xor
jg
out
mov
jno
ret
aas
(bad)
mov
cmps
jecxz
add
cmp
dec
push
push
aad
xchg
and
out
in
not
les
xor
js
cmp
adc
xor
dec
jmp
call
cmps
call
or
and
imul
rcr
(bad)
lea
add
mov
jb
mov
ds
outs
add
or
lahf
test
adc
iret
loop
xchg
mov
adc
loope
adc
adc
push
sub
icebp
mov
aad
cmp
jnp
mov
sub
jno
and
imul
push
ins
loope
sahf
sahf
ds
(bad)
xor
mov
or
adc
int
xor
adc
xchg
push
jmp
cmps
test
xchg
mov
jno
ficomp
pop
(bad)
jmp
popa
aam
mov
retf
int3
xchg
cwde
jmp
mov
push
add
or
pop
stos
cmp
xor
loop
xlat
xchg
jb
pop
call
pop
ja
shl
jnp
sahf
xchg
xor
mov
loop
cmp
push
in
jo
scas
jnp
inc
out
push
arpl
add
mov
or
daa
aas
mov
or
inc
lea
fcomp
fild
fsub
jl
adc
xchg
fwait
push
mov
jnp
pop
push
pusha
inc
xchg
gs
pop
dec
or
pop
inc
sti
add
leave
jns
xlat
repz
xor
or
mov
add
nop
loopne
out
mov
or
xor
push
or
test
add
mov
sub
xchg
or
aad
cmps
mov
lds
repnz
lds
ret
inc
xor
pop
sbb
pushf
jle
ss
pop
sbb
add
mov
mov
push
in
push
dec
stos
nop
pop
ds
cmp
xchg
cmp
not
dec
lea
mov
mov
adc
movs
and
mov
mov
stos
jnp
dec
stos
mov
cwde
dec
fistp
(bad)
push
daa
pop
repz
xchg
leave
call
push
mov
add
fldcw
data16
cmp
pop
adc
mov
mov
imul
cmps
xor
inc
cdq
fld
test
mov
cli
cmp
sbb
jle
xchg
jl
(bad)
jge
pusha
cld
movs
xchg
sub
cmp
aam
out
xor
mov
rcr
sub
sub
bound
test
lock
mov
mov
aad
hlt
lds
and
sub
and
fstp
stc
call
les
ja
aaa
(bad)
adc
jnp
sbb
fwait
neg
popf
sbb
lods
adc
test
scas
fcomp
sbb
cmp
std
cdq
retf
cs
cli
mov
in
mov
xbegin
nop
dec
cmp
or
add
push
push
ret
(bad)
loopne
icebp
dec
lods
and
push
inc
add
xchg
push
xlat
test
sahf
sbb
dec
lock
cmps
sbb
popf
mov
cmp
clc
leave
jb
inc
mov
in
test
or
xor
push
sub
fidiv
mov
dec
pop
repz
push
std
xchg
xchg
mov
inc
outs
test
add
fidivr
pop
xor
not
sbb
test
xlat
and
inc
or
(bad)
in
and
iret
and
mov
movs
frstor
pop
lods
sti
and
dec
ret
nop
sub
ds
ret
outs
cwde
mov
push
psubq
repz
sbb
xchg
outs
or
inc
xor
and
cmp
push
repnz
rol
clc
mov
fwait
lock
(bad)
repnz
sub
(bad)
mov
push
aam
lock
lock
sub
fbld
xor
js
and
test
sub
dec
ss
sub
gs
int3
sub
(bad)
pop
xchg
test
dec
or
mov
(bad)
rcl
loopne
xor
pop
das
pmaddwd
ror
gs
sbb
jno
mov
leave
mov
retf
mov
pushf
cmc
adc
sbb
xchg
repz
dec
jb
in
nop
pusha
sar
push
sahf
xchg
popa
ficom
sahf
push
pop
jl
movs
clc
les
jb
test
xchg
lea
idiv
(bad)
test
(bad)
xor
frstor
ins
stc
data16
mov
shl
pop
mov
aas
aaa
out
xchg
fidivr
ret
repz
pop
dec
adc
jno
add
add
mov
push
dec
test
mov
or
pop
popa
push
adc
in
mov
sub
sbb
inc
add
ins
pop
lds
and
stos
fsubr
pop
push
cmp
push
scas
jmp
sub
push
and
jae
inc
sbb
sahf
dec
ins
push
pop
xchg
cs
movs
jp
pop
cmp
rcr
in
test
mov
shr
mov
out
cmp
mov
xor
lock
jmp
jge
retf
dec
fmul
cmp
mov
or
dec
mov
mov
sbb
xor
das
hlt
bound
(bad)
cmc
lds
dec
shr
jae
(bad)
dec
adc
and
add
adc
pop
mov
mov
jge
daa
ror
pusha
mov
jmp
jge
outs
inc
lds
outs
mov
bound
addr16
adc
dec
and
mov
or
add
popa
hlt
sbb
push
popf
outs
dec
xchg
or
rol
outs
cmps
xchg
xchg
sbb
inc
pop
call
jecxz
div
retf
(bad)
out
sbb
pusha
daa
mov
fcom
mov
je
rsqrtps
(bad)
sub
movs
mov
inc
xchg
jae
jmp
sub
(bad)
fs
dec
or
mov
or
lahf
mov
xchg
int3
rcl
xchg
or
mov
push
test
cmp
jae
clc
push
imul
pop
mov
lock
mov
aas
in
dec
xchg
gs
pop
jle
mov
loopne
gs
jmp
sbb
ins
inc
push
leave
arpl
mov
xchg
or
call
dec
jp
ret
sbb
out
out
js
cmc
je
adc
push
ror
mov
int
sbb
aas
call
gs
ins
and
mov
pop
xchg
inc
std
mov
je
ret
es
lods
mov
adc
add
imul
mov
jne
jno
imul
or
sub
adc
and
stos
mov
loopne
outs
jle
sub
(bad)
loopne
cwde
stos
stos
(bad)
mov
jo
outs
dec
xor
retf
sub
bound
lods
rol
sub
imul
rcl
cmc
dec
fnsave
push
jae
movs
aad
cwde
cmc
aam
jo
jp
add
dec
sub
mov
icebp
jmp
test
aad
mov
push
ret
jno
add
ja
daa
popa
lds
js
mov
lea
sbb
dec
mov
lock
shl
inc
cmp
sub
sbb
push
fcomp
cmps
inc
cmp
mov
loope
jecxz
jno
mov
js
movs
mov
popf
icebp
xchg
pop
call
adc
mov
movs
shl
shl
out
fistp
jo
jb
hlt
rcr
sbb
(bad)
pop
dec
rol
sbb
mov
nop
fisttp
cdq
add
sub
adc
cmp
rcr
sub
mov
cs
adc
mov
(bad)
fcom
adc
inc
xor
loopne
sub
ins
retf
xlat
sbb
adc
sbb
int3
mov
cmp
fbstp
adc
mov
pop
xchg
retf
(bad)
repnz
push
jmp
ja
fsub
mov
pop
mov
cmps
inc
cmc
push
cmp
(bad)
cwde
jno
enter
scas
push
dec
xchg
test
add
es
popa
ss
xlat
popa
dec
sti
or
mov
ret
add
jae
lock
test
arpl
and
mov
sahf
out
and
and
scas
loope
cmp
fst
out
es
push
data16
gs
call
mov
mov
jge
inc
jl
mov
jno
inc
and
dec
or
dec
loop
gs
jno
mov
add
dec
dec
dec
cmp
(bad)
jecxz
(bad)
in
and
test
leave
and
xlat
sar
sub
mov
icebp
(bad)
adc
inc
inc
into
test
repnz
jecxz
or
pop
sub
ror
mov
fld
push
retf
mov
(bad)
fmulp
ins
idiv
sub
mov
xor
or
mov
aas
push
aas
pop
int3
sahf
gs
mov
outs
inc
push
adc
cli
push
inc
sti
popf
and
ror
push
out
enter
mov
or
cmp
(bad)
jmp
mov
and
xchg
inc
int3
call
loope
sub
(bad)
xchg
and
dec
or
xlat
(bad)
scas
arpl
aas
push
loopne
adc
loope
inc
imul
das
cdq
stos
pop
dec
xor
xchg
(bad)
bound
das
lahf
mov
pop
pop
jmp
hlt
pop
inc
std
out
cld
scas
mov
cmp
dec
mov
mov
mul
pop
sub
popa
(bad)
fiadd
adc
fist
mov
and
cmp
loope
inc
dec
mov
daa
cwde
cmps
mov
popa
(bad)
cwde
ret
push
mov
bnd
sti
mov
dec
stos
sbb
cmps
ret
test
sar
push
add
jae
out
data16
ds
shl
cdq
dec
pushf
xor
lods
into
sub
xor
mov
mov
mov
(bad)
push
cmps
jae
ins
lea
mov
push
test
paddd
or
call
xor
outs
leave
call
int
add
pop
mov
jns
out
cmps
xchg
fistp
ins
(bad)
pop
dec
fild
mov
sbb
or
inc
jp
sahf
jp
in
inc
xchg
xchg
cmp
std
aas
fsubr
test
gs
mov
(bad)
shl
xor
je
leave
jmp
retf
scas
bound
jo
std
mov
in
add
sahf
sahf
out
sub
push
push
jl
inc
(bad)
cs
dec
mov
mov
push
xchg
fimul
mov
out
cmp
mov
leave
lea
push
or
ja
enter
je
mov
sub
mov
fs
aas
cmp
out
aam
jp
add
in
sar
dec
push
hlt
idiv
fwait
cmp
cmp
aas
dec
cmp
sub
test
test
sbb
mov
jb
or
push
std
ret
(bad)
lds
push
sbb
ret
loope
add
push
(bad)
std
adc
cmp
data16
xchg
jg
stos
push
dec
mov
sbb
push
repnz
inc
mov
(bad)
sub
sub
cmc
loopne
dec
nop
stc
mov
push
add
cdq
pop
pop
test
jb
xchg
and
out
cmp
pop
mov
cmps
adc
loopne
mov
sbb
adc
or
cmps
nop
or
mov
rcr
mov
popa
mov
sub
adc
loop
test
and
(bad)
mov
retf
sbb
call
or
push
mov
sub
jmp
jno
xchg
xchg
adc
sub
mov
jl
pop
test
jbe
xchg
and
(bad)
or
loopne
outs
cmp
add
cli
(bad)
sti
add
(bad)
out
sar
call
in
add
jne
and
push
gs
fistp
jbe
sbb
bound
lods
aad
fild
mov
adc
adc
dec
inc
adc
xor
addr16
repnz
pusha
mov
pop
popa
push
xchg
rcl
jp
xchg
stos
cmps
pop
cmps
adc
jge
cmp
add
in
mov
int
psllw
pusha
lock
call
push
jns
jnp
jl
jl
cdq
sbb
jle
mov
mov
mov
xchg
(bad)
mov
dec
(bad)
out
dec
fldl2t
movnti
call
loop
test
jmp
mul
add
mov
mov
inc
out
xchg
push
sub
mov
test
add
jbe
jnp
(bad)
fwait
packssdw
inc
push
dec
jmp
loopne
les
rcr
out
(bad)
sub
mov
pop
push
mov
pusha
add
sbb
je
es
jmp
hlt
pop
inc
sbb
out
sbb
mov
jge
aaa
xor
sar
out
(bad)
arpl
push
sar
dec
push
push
cmp
in
pop
iret
lea
dec
icebp
clc
mov
imul
jge
lods
mov
sub
push
dec
frstor
adc
out
push
xor
mov
les
loop
pushf
repz
imul
idiv
popa
add
adc
je
pop
movs
gs
sub
jg
inc
call
or
leave
ret
mov
daa
call
(bad)
clc
mov
jge
sahf
xchg
scas
push
xor
jb
gs
adc
cmp
lahf
test
fldcw
test
test
jmp
inc
(bad)
sbb
xchg
jmp
add
mov
push
xchg
sahf
jbe
add
adc
ror
xchg
sub
cmp
test
mov
add
fnstenv
test
mov
cmp
fsub
push
cmps
loope
ret
and
xchg
adc
lds
(bad)
sbb
adc
or
cdq
pop
push
mov
(bad)
out
les
loope
or
mov
pop
lds
aad
or
hlt
enter
jns
mov
mov
sahf
cmp
mov
cld
mov
jae
mov
aas
or
jne
popa
sub
(bad)
cld
xchg
add
lds
mov
ins
inc
test
xchg
aaa
xchg
jmp
push
sbb
sbb
(bad)
push
adc
shl
div
iret
ret
adc
call
mov
pop
push
nop
(bad)
pop
fmul
ror
int
cmps
push
out
outs
test
(bad)
mul
movs
and
bound
retf
inc
ror
(bad)
sub
xor
lock
int3
in
or
mov
inc
mov
mov
pop
jnp
shl
(bad)
cmp
sbb
pusha
lock
adc
lods
sub
rol
lea
scas
push
mov
ins
push
sub
bound
inc
call
stc
sub
mov
test
mov
fmul
push
push
iret
fcom
leave
repnz
cmps
popf
std
(bad)
addr16
cmp
nop
lea
sbb
sahf
aaa
stos
aad
in
mov
fistp
pop
cs
out
push
mov
push
inc
mov
adc
add
outs
adc
sahf
daa
mov
leave
add
dec
inc
xor
ja
mov
ffree
xchg
rol
pop
pop
retf
cs
imul
gs
xor
xchg
mov
or
push
cmps
mov
xchg
jecxz
adc
mov
xchg
popf
fild
jl
(bad)
mov
inc
push
imul
call
and
jnp
mov
adc
push
pop
jno
lds
loop
cmp
test
dec
mov
ins
xlat
xor
push
outs
je
xchg
fwait
stos
les
push
add
pop
dec
xor
shr
in
mov
mov
shl
arpl
imul
daa
mov
aam
mov
fxch
xchg
jmp
sahf
ret
imul
mov
shl
loope
ins
xchg
scas
jmp
fidivr
mov
rcl
jb
xchg
or
push
adc
test
xlat
daa
push
xchg
xor
popa
outs
and
fdiv
and
je
cmp
xchg
repz
scas
ds
lds
push
(bad)
not
js
clc
cmp
ret
push
cmp
int
sti
sub
ins
jns
shl
jle
dec
jae
sub
nop
rcl
mov
fscale
cmc
test
ins
cmp
inc
push
aad
mov
mov
outs
mov
sbb
jae
mov
sbb
mov
mov
add
pop
push
retf
in
cmp
dec
mov
push
arpl
xor
mov
test
pop
inc
(bad)
(bad)
jns
lods
push
mov
arpl
add
and
pop
imul
pop
sahf
gs
mov
adc
adc
mov
pusha
pop
or
shl
sbb
xor
(bad)
jo
outs
sub
push
cmps
add
gs
pop
jge
push
push
fadd
push
push
int3
mov
add
imul
dec
es
adc
cmp
dec
les
jecxz
inc
jns
dec
cmp
jg
call
inc
cs
ds
cs
pusha
es
test
xchg
bound
mov
mov
fild
cs
mov
scas
cmp
test
es
push
push
imul
mov
fadd
sbb
and
push
xchg
jno
test
sub
ror
jecxz
imul
add
and
ds
fisttp
or
not
inc
push
cmps
scas
iret
jl
jns
mov
or
mov
lods
jmp
jecxz
bound
enter
cmps
cmp
test
fabs
loop
cld
psllw
repnz
pushf
xor
(bad)
push
jl
js
jb
cmp
rcr
jecxz
add
in
es
jle
push
xchg
pop
loopne
sbb
jp
scas
cld
adc
dec
xchg
sub
call
dec
pop
jbe
xor
add
shl
test
mov
adc
xlat
inc
or
inc
add
push
jecxz
xchg
scas
sbb
shl
int
push
lods
mov
adc
loop
pop
pop
sub
mov
sbb
sbb
xor
enter
or
icebp
retf
xchg
les
movs
test
mov
push
mov
adc
aaa
and
imul
mov
push
mov
sbb
shr
sub
jmp
enter
jle
ds
mov
mov
movs
ret
adc
pusha
mov
(bad)
nop
xlat
push
mov
add
rcl
push
mov
inc
dec
div
cmc
mov
test
lahf
ja
sub
mov
loopne
cmp
cmp
cmps
ret
out
xor
jmp
arpl
pop
mov
lock
cmp
push
xchg
fnstsw
push
sbb
mov
test
movs
mov
jns
mov
mov
ins
test
scas
stos
xor
jae
je
cmp
adc
aam
scas
jne
push
int
shl
je
mov
add
out
es
nop
retf
pop
mov
js
ss
adc
stos
ret
add
xor
arpl
loop
cwde
adc
pop
push
dec
push
mov
mov
scas
sub
(bad)
aad
popf
loopne
cs
cmps
add
fsub
cmp
jl
adc
pop
dec
xchg
ja
xor
push
lods
adc
sub
jo
arpl
lds
fsub
je
mov
popf
mov
and
aad
test
push
dec
lock
ss
cmp
cmp
mov
xor
ds
loop
inc
pop
push
push
ficomp
pop
mov
jecxz
scas
adc
mov
retf
mov
aaa
add
push
mov
add
int
jmp
and
adc
xchg
jmp
sbb
jle
loop
xlat
sbb
aad
jl
in
jnp
sbb
loope
xchg
mov
stos
or
js
adc
mov
je
fld1
mov
js
jnp
(bad)
jecxz
jmp
lods
and
mov
fs
scas
dec
out
mov
popa
sbb
mov
repz
popf
scas
clc
mov
sub
(bad)
jp
mov
cmp
mov
fwait
push
push
hlt
push
push
out
add
sbb
std
fild
xor
pop
mov
mov
mov
push
ja
mov
pop
pushf
cmp
aaa
push
mov
jg
dec
or
aam
cmps
inc
cdq
push
lds
push
adc
(bad)
shl
std
sti
mov
push
mov
stos
xor
test
push
jg
adc
xor
adc
mov
(bad)
or
stos
ss
cmp
or
sbb
aaa
dec
sar
imul
cdq
inc
pushf
adc
(bad)
or
(bad)
jo
jne
cli
jo
inc
dec
and
inc
dec
into
dec
retf
stos
iret
and
sbb
cmp
pop
cmp
jg
mov
int
adc
mov
je
xchg
mov
scas
loop
mov
xor
push
pushf
push
mov
mov
jns
jmp
dec
xchg
in
dec
inc
push
inc
mov
outs
iret
sub
rcl
imul
and
sub
cmps
test
push
add
fmul
or
clc
xchg
add
mov
pop
ret
(bad)
popa
scas
or
cmp
movs
jo
ror
retf
fst
pop
jno
in
inc
and
pop
leave
sbb
mov
inc
sti
mov
xchg
and
inc
pop
add
jge
ins
add
jp
pushw
hlt
add
push
out
inc
jge
in
call
and
jle
xor
dec
or
jmp
outs
dec
push
push
fisubr
mov
(bad)
xor
call
jmp
out
inc
inc
cmp
movs
lea
push
push
fdivr
lods
push
push
add
cmc
xchg
xlat
pop
rcr
jle
jle
mov
mov
ds
push
into
loop
sub
into
mov
sub
cmps
out
stos
jne
ret
loopne
push
les
ret
aam
xchg
call
and
arpl
mov
es
mov
dec
rol
push
inc
stc
and
add
bound
inc
cli
cmp
sahf
daa
scas
pop
sub
lea
adc
or
sahf
mov
push
not
mov
inc
test
out
std
sbb
cli
and
sub
fstp
and
sahf
adc
js
int3
clc
jmp
jle
and
pop
fnstsw
jmp
add
mov
or
out
jmp
mov
mov
pop
or
and
or
iret
ins
mov
retf
push
push
ins
fdivrp
inc
jnp
add
fnsave
inc
out
xor
(bad)
lods
ins
xlat
int3
jg
mov
push
jmp
out
push
cmp
cs
cmp
inc
pop
push
mov
xor
fmul
adc
add
dec
icebp
scas
sbb
push
jecxz
pop
xchg
xor
jmp
pop
mov
or
mov
fist
mov
test
jecxz
cdq
add
cmp
scas
dec
retf
xor
xchg
dec
std
pop
and
pop
in
and
or
xor
stos
add
sub
add
in
lea
lea
or
pop
xor
pop
movs
and
pusha
sub
and
sub
jnp
pop
xlat
ret
inc
dec
xchg
xor
ja
add
es
mov
fwait
jge
out
test
mov
ret
mov
(bad)
leave
out
add
inc
ja
(bad)
xchg
mov
mov
mov
mul
(bad)
xchg
xor
movs
jb
lock
fisub
outs
js
and
mov
and
or
emms
xor
pop
das
jo
ins
jb
in
cli
retf
ins
into
mov
cwde
icebp
mov
sbb
ss
and
or
mov
mov
mov
movs
sub
jmp
jno
cmp
fsubr
push
stos
ja
add
data16
xor
lock
and
and
xor
lods
mov
add
pop
out
outs
mov
ins
cli
sub
lds
add
sub
xchg
add
test
and
sbb
pop
adc
iret
sub
retf
retf
xchg
repnz
ror
adc
mov
lahf
adc
fs
sahf
call
fcom
xchg
and
add
push
cmp
jbe
jbe
movs
mov
jg
movs
nop
rcl
xor
xchg
sbb
sub
fisttp
scas
repnz
sub
push
inc
fsubr
xor
retf
mov
pop
aas
push
mov
jl
in
ret
arpl
(bad)
repnz
mov
scas
or
cmp
push
xchg
pop
call
arpl
xchg
and
mov
adc
or
hlt
sahf
add
mov
cld
xchg
fsubr
jns
xchg
pushf
repnz
jae
out
jl
mov
adc
xlat
in
aas
jns
fdiv
sub
inc
cmp
ficomp
je
push
xchg
push
stos
sub
adc
and
pop
inc
sar
dec
lahf
iret
call
clc
fs
jg
pop
test
in
lahf
aam
loop
mov
sub
inc
rcl
dec
mov
(bad)
mov
push
xchg
mov
jmp
js
mov
jns
push
adc
gs
pop
or
or
fs
mov
call
mov
sti
dec
aad
and
nop
adc
sbb
cmp
les
mov
add
or
ret
mov
mov
dec
sub
cdq
xor
adc
mov
inc
iret
push
repnz
int
test
dec
mov
sub
or
xchg
pop
dec
cmp
es
mov
and
xor
ror
adc
fwait
mov
call
xchg
xchg
mov
test
and
xor
sub
pop
xchg
add
repnz
jecxz
stc
push
shl
inc
pop
cmp
mov
xchg
stos
dec
daa
sub
daa
or
nop
cmp
inc
or
aaa
lahf
adc
jg
(bad)
jp
ja
lea
mov
mov
mov
jbe
je
sbb
inc
pop
mov
jb
and
or
in
cmp
jecxz
cmc
outs
jmp
pop
bound
mov
adc
sbb
lock
or
fild
xchg
inc
jne
push
lods
ins
cmp
push
pop
and
or
cld
adc
rcl
push
push
push
movs
xchg
nop
out
adc
shr
je
pop
sub
sti
ja
jmp
push
les
(bad)
sub
ret
and
add
sbb
(bad)
mov
inc
inc
loopne
inc
dec
stc
push
mov
popf
aaa
jle
daa
mov
push
popa
retf
cwde
dec
imul
jbe
js
popa
les
cwde
call
stos
cmp
outs
cmp
retf
(bad)
dec
call
xchg
loopne
stc
lock
cmp
in
mov
add
mov
stc
outs
fmul
jae
dec
adc
pop
jo
bound
mov
adc
ins
inc
(bad)
xchg
sub
test
fcomp
cmp
mov
leave
das
fsub
jecxz
sbb
inc
popa
retf
jns
xchg
xchg
fadd
shr
mov
push
retf
(bad)
nop
dec
lock
out
lods
call
inc
retf
cli
inc
push
icebp
push
jo
(bad)
xor
jmp
sub
xchg
add
and
xor
and
or
and
cli
mov
xchg
or
push
push
ds
mov
sbb
inc
movs
push
mov
stos
add
(bad)
push
retf
sbb
or
inc
pop
inc
xchg
add
pop
or
push
fisub
push
xor
xor
jmp
and
push
dec
and
adc
pop
sub
movs
or
mov
jb
adc
add
cdq
cli
xchg
je
ret
jns
sbb
cmp
outs
ins
mov
nop
(bad)
out
ja
add
(bad)
sbb
aaa
add
lahf
stos
cmp
and
inc
loop
mov
stc
push
pop
xor
dec
dec
icebp
jp
jb
idiv
adc
push
push
sbb
or
pop
cmps
retf
push
or
arpl
cwde
repz
mov
das
jbe
pop
in
mov
test
pusha
add
add
fwait
dec
shl
pop
popf
dec
fldcw
push
adc
out
mov
cmps
xchg
mov
das
inc
aas
fldenv
xor
push
sub
lock
fcmovnbe
mov
cli
call
scas
pop
adc
fstp
xchg
jno
sti
cmps
dec
ror
mov
or
in
popf
test
ins
int
and
sub
sub
add
and
test
add
xor
xlat
sbb
frstor
popf
call
mov
jne
movs
xor
sub
inc
nop
aaa
mov
adc
cmp
lock
mov
push
cmp
dec
push
imul
or
outs
cli
cs
xchg
xchg
enter
out
sub
nop
jecxz
ins
jmp
mov
das
xor
jge
xchg
stos
imul
out
push
in
adc
aaa
gs
test
mov
jo
jl
test
(bad)
div
cld
ret
xor
cmp
enter
ja
sbb
iret
pop
jno
mov
test
(bad)
pop
mov
xchg
add
arpl
(bad)
dec
adc
mov
mov
jns
sbb
mov
sub
adc
sub
mov
fucomp
enter
inc
ins
pop
and
rcr
aad
xchg
push
cmp
mov
jl
das
in
aam
test
mov
das
lea
out
popf
push
cmp
pop
cld
imul
pop
pop
inc
scas
rcl
fs
or
int
cmp
test
sti
pop
jnp
inc
call
aaa
stos
int3
ja
loope
pop
loop
aad
add
push
loop
es
jbe
pop
add
mov
test
les
repz
xor
in
adc
xor
fcomp
rep
adc
inc
mov
ror
aam
arpl
push
adc
bound
dec
adc
mov
mov
add
ror
lods
lods
retf
mov
gs
xchg
jo
fwait
iret
sub
test
cld
xchg
mov
fwait
mov
xchg
push
dec
into
aaa
jb
add
outs
cwde
mov
bound
mov
lods
cwde
iret
push
fs
stc
repz
lahf
jle
fdivr
mov
test
cdq
mov
int
shl
sub
js
jns
push
sub
scas
adc
push
push
inc
mov
popf
push
or
pushf
push
scas
jmp
and
(bad)
jp
jb
lock
xchg
pop
mov
jno
(bad)
jge
push
hlt
mov
push
push
ret
or
jae
sbb
cmc
and
push
fs
sbb
in
sub
sbb
adc
cmps
(bad)
cmp
scas
fsubr
ins
les
retf
xlat
sub
push
mov
(bad)
dec
push
das
and
hlt
shl
and
mov
int
retf
lods
add
data16
lds
adc
push
jge
push
jno
lahf
dec
sbb
jmp
mov
xchg
leave
fs
jg
mov
iret
cmc
leave
and
xor
out
fsubr
sub
popf
cmp
adc
outs
je
movs
xchg
xchg
scas
inc
out
jae
pop
gs
shr
mov
xchg
loope
pusha
cs
cli
and
mov
cli
xor
cmps
ins
int3
and
jne
sbb
in
mov
imul
fnstenv
jmp
stc
jb
test
fadd
sub
push
cmp
bound
pop
out
imul
in
out
lds
call
les
and
jl
sub
mov
add
pop
sub
xchg
out
jg
ins
push
push
or
retf
call
push
mov
js
mov
test
mov
fwait
scas
test
inc
aas
push
mov
push
nop
ror
pushf
loope
mov
mov
mov
mov
xor
repnz
loopne
xchg
leave
sbb
jge
fwait
push
movs
(bad)
test
pop
loop
lea
pop
mov
pop
jns
dec
out
cmps
xchg
dec
das
test
mov
shr
xchg
pop
enter
daa
or
cmp
inc
inc
or
pop
call
or
cmps
jg
mov
dec
daa
adc
aam
jb
cmps
inc
in
mov
add
ins
add
push
push
xor
stos
scas
stc
repnz
pop
mov
mov
inc
pop
push
inc
jp
stos
push
sbb
mov
in
mov
xor
nop
loopne
adc
mov
mov
xchg
pop
into
dec
sahf
xchg
(bad)
mov
dec
mov
mov
in
pop
sbb
popa
adc
js
adc
mov
mov
ror
aas
xor
cld
mov
inc
fist
bound
and
xor
dec
push
jns
(bad)
cmp
mov
mov
test
add
test
adc
ficom
(bad)
xlat
popa
out
call
adc
xor
adc
icebp
es
aaa
dec
mov
cmps
mov
psrlq
adc
xor
loope
xchg
cld
daa
sti
add
pop
enter
jae
pop
inc
aas
cmp
(bad)
jmp
imul
cwde
dec
cmp
stc
retf
push
and
shr
push
es
mov
dec
xchg
sub
and
inc
fcmovnbe
mov
adc
sbb
repnz
dec
call
(bad)
sub
out
in
sbb
xor
add
fiadd
enter
cmp
and
fcomp
or
or
mov
adc
popa
(bad)
and
mov
inc
push
cmp
xchg
jp
pop
je
cmp
retf
mov
rcr
jae
xor
mov
lahf
mov
stos
jle
xchg
and
mov
sub
outs
xchg
call
jmp
pop
xchg
add
and
cmps
icebp
lds
xchg
push
push
xor
jnp
shl
and
ins
and
loope
lea
and
test
lds
or
or
push
jge
xchg
mov
pop
repz
or
jns
inc
outs
mov
pop
lds
xor
jmp
jmp
cmp
dec
call
test
sbb
or
cld
shl
inc
sbb
sub
or
jae
stos
scas
sar
mov
imul
call
sub
lods
dec
lea
pop
cld
pushf
mov
jnp
std
enter
or
mov
call
xor
jae
xchg
movs
shl
outs
sub
sub
call
cmp
dec
sbb
movs
std
push
jnp
jne
dec
inc
std
push
or
js
dec
mov
data16
mov
stos
sti
mov
xchg
cwde
push
push
and
jge
jp
adc
cld
xor
ficomp
adc
xor
inc
lahf
clc
std
push
test
push
add
movhps
inc
push
or
jnp
pop
adc
fwait
push
sub
sbb
hlt
add
mov
fiadd
lods
ret
dec
aaa
inc
dec
push
and
ins
xchg
aaa
fiadd
in
or
jns
mov
gs
xchg
(bad)
or
aaa
sub
clc
in
or
mov
inc
or
jbe
add
push
adc
(bad)
in
jb
adc
push
ss
shr
xor
cmp
jno
cmp
mov
fdivr
cdq
mov
mov
and
mov
jecxz
(bad)
xchg
(bad)
adc
cmps
out
sub
int3
mov
dec
xor
test
dec
(bad)
mov
dec
xor
loope
ds
mov
pop
call
dec
mov
out
inc
lea
adc
mov
mov
xchg
outs
mov
int3
add
xor
jmp
stos
out
shl
mov
(bad)
stc
cmp
mov
test
ja
pop
jmp
mov
cmp
arpl
std
and
ret
inc
dec
data16
jns
arpl
ret
movs
mov
mov
sbb
sub
pop
xchg
movs
aaa
out
jl
dec
daa
test
fisttp
mov
xchg
mov
or
test
(bad)
lea
cmp
and
mov
jns
adc
cdq
jge
outs
dec
xor
adc
mov
sub
dec
call
inc
sar
in
cmp
mov
mov
add
or
or
ins
fwait
dec
imul
mov
jae
cmc
xchg
in
pop
jg
pop
hlt
scas
pusha
push
cmp
not
out
mov
icebp
adc
mov
inc
adc
pop
test
jecxz
enter
sti
in
add
jge
sahf
mov
sub
pop
cmp
xchg
(bad)
inc
jbe
adc
mov
nop
jl
shl
test
push
and
jmp
xchg
ss
(bad)
hlt
lahf
mov
out
das
xor
call
lea
sahf
xchg
(bad)
cld
and
call
mov
fsub
imul
push
or
fidivr
sar
shl
mov
ret
add
mov
outs
iret
xchg
xor
pop
pusha
js
mov
mov
test
ins
jb
xor
ins
mov
or
mov
push
mov
jb
and
stos
mul
or
nop
fild
outs
mov
mov
es
daa
repz
repz
jge
test
fdiv
mov
gs
into
mov
and
dec
imul
jmp
mov
adc
test
or
add
and
mov
shl
aam
inc
push
les
fiadd
rol
mov
jecxz
int
scas
mov
cs
or
inc
cld
fwait
out
rcl
imul
repz
sbb
aas
fmul
mov
call
mov
sbb
adc
pop
and
jmp
outs
and
dec
test
arpl
or
adc
jne
in
sti
pop
in
repnz
pop
mov
adc
jecxz
sar
mov
nop
hlt
push
es
adc
add
jnp
mov
inc
xor
lahf
push
mov
hlt
cmp
imul
jno
and
xchg
jl
int
rcl
mov
int3
jp
in
push
sar
sub
and
jne
cwde
pop
pop
cld
jecxz
mov
add
cmp
mov
xchg
sti
outs
ss
(bad)
imul
movs
dec
sar
les
push
scas
jb
rcr
int3
mov
cmp
int
inc
push
out
cwde
out
adc
rcr
sbb
jle
(bad)
adc
dec
enter
xor
call
sbb
call
(bad)
mov
lock
jl
lods
mov
and
cld
push
in
or
repnz
lahf
in
(bad)
jl
loop
xor
mov
js
shl
push
xor
mov
popf
inc
jle
scas
and
push
outs
int
bswap
pop
xor
das
stos
in
mov
gs
jg
in
and
sub
es
mov
shl
jb
mov
test
test
push
mov
cmovne
test
bound
out
scas
dec
mov
or
mov
dec
add
xbegin
(bad)
(bad)
lock
mov
ret
add
dec
cmps
int
ins
call
call
cmp
repz
enter
and
(bad)
std
and
std
leave
adc
mov
lods
inc
sub
aaa
aas
mov
jmp
inc
mov
mov
cmp
(bad)
add
mov
xor
std
inc
enter
adc
mov
xchg
mov
inc
jnp
outs
xchg
mov
xchg
pop
xlat
fidiv
mov
enter
xchg
mov
mov
dec
scas
ins
push
mov
ins
inc
inc
call
dec
add
sbb
xor
push
push
and
xchg
jo
(bad)
xlat
push
stos
cwde
in
mov
push
xor
ss
repnz
and
sbb
push
dec
dec
push
pop
cmps
in
add
push
lds
mov
jnp
ja
mov
in
fstp
lock
dec
mov
jge
push
test
retf
aam
(bad)
fiadd
add
or
push
ins
lods
pop
(bad)
rcpps
sub
popf
xlat
scas
dec
sub
cmc
movs
(bad)
ret
in
cmp
loopne
rol
lock
lea
inc
and
xchg
fidivr
mov
mov
repnz
test
loopne
ins
xor
imul
dec
or
inc
pop
adc
fild
sbb
pop
test
movs
xchg
mov
ret
or
neg
xchg
out
ds
jbe
jge
call
cmps
sub
js
outs
pop
or
rcl
xchg
dec
add
add
xor
popa
div
fidivr
pop
leave
jmp
addr16
pop
les
jmp
jmp
outs
or
jecxz
arpl
repz
sbb
push
(bad)
dec
mov
test
mov
sbb
out
push
add
mov
adc
sbb
push
inc
xor
out
add
fstp
or
mov
clc
mov
push
pop
mov
repnz
add
outs
(bad)
daa
jle
adc
xchg
push
jnp
jbe
imul
aam
or
pop
xlat
sti
loopne
xor
sbb
push
(bad)
out
xchg
or
mov
mov
imul
lock
sbb
adc
inc
mov
adc
adc
and
push
jecxz
mov
sbb
ucomiss
aaa
int3
and
loop
pop
mov
shr
inc
cmp
inc
(bad)
into
imul
jp
mov
fbld
shr
push
xor
test
imul
sbb
cmp
dec
repz
fwait
mov
sub
and
dec
mov
mov
in
mov
outs
je
mov
rol
rcr
mov
and
mov
xlat
ret
(bad)
retf
call
push
rcr
and
inc
pop
sub
call
jecxz
(bad)
jmp
cs
sub
call
cmp
stos
pushf
xor
fwait
in
icebp
and
fsubr
ins
and
jmp
jge
(bad)
sub
xor
and
push
mov
test
xor
stos
push
hlt
fld
scas
int
std
pushf
cmp
arpl
mov
and
jecxz
xchg
adc
cs
sahf
adc
jns
jae
outs
xchg
retf
mov
(bad)
push
rcr
mov
mov
ror
xor
mov
and
jge
mov
mov
ja
mov
and
add
gs
xor
add
inc
jl
out
push
mov
or
adc
shr
xor
repz
cmovnp
xor
movs
call
mov
add
push
popf
push
mov
pop
sbb
mov
xor
call
push
add
pop
mov
or
test
xor
adc
(bad)
(bad)
sar
xchg
repz
cmp
pop
add
sbb
stos
xor
cwde
imul
inc
jnp
js
popf
mov
cmp
lods
pop
push
mov
(bad)
fmul
mov
xchg
cdq
xchg
shr
adc
popf
or
mov
mov
mov
out
mov
sbb
fstp
xchg
and
push
in
jo
mov
test
call
in
mov
jle
call
into
cmps
dec
mov
mov
ret
shl
mov
mov
(bad)
sub
add
fbstp
call
sbb
fistp
fsubr
stos
fcmovnu
repz
sbb
add
xchg
xchg
rol
stos
cld
cwde
and
arpl
jb
gs
sub
sti
mov
push
cmc
mov
sub
sub
fucom
test
dec
pop
nop
cdq
dec
loop
pop
pushf
adc
jge
sub
aad
mov
cmp
or
push
fdivr
paddq
jae
and
in
push
mov
rcl
fild
ficom
and
mov
(bad)
xchg
into
jno
outs
je
sub
aam
in
sbb
inc
imul
inc
ins
loop
xchg
imul
ins
mov
push
aad
xchg
cmc
int
xor
fcom
fwait
dec
push
sbb
xchg
dec
fidiv
cmp
or
test
arpl
or
sub
out
jmp
add
sbb
push
fwait
adc
lds
push
fcomp
cli
pop
shl
adc
scas
jp
sub
push
xchg
pop
daa
lods
lods
jp
(bad)
ret
repz
dec
sbb
daa
xor
mov
sub
push
adc
or
xchg
dec
xor
inc
mov
pop
ja
mov
xor
cdq
push
or
dec
dec
cli
ret
cli
in
xor
pop
inc
sub
xchg
js
xchg
xchg
out
xor
adc
cwde
pop
in
pop
nop
and
loopne
push
push
fcom
outs
sbb
div
jg
mov
je
xchg
sbb
jae
fs
dec
push
mov
push
popa
jae
jns
test
pushf
dec
aaa
xor
or
shl
xchg
push
sub
push
int3
stos
lahf
movs
jmp
cmp
aas
imul
cmp
push
mov
std
mov
add
mov
lea
cmc
lods
pop
inc
lods
mov
inc
mov
push
push
(bad)
cmp
test
add
inc
xchg
mov
inc
xchg
inc
sbb
mov
adc
cmp
pop
ud1
add
cli
inc
daa
int
imul
out
sub
push
xor
(bad)
jns
xchg
(bad)
lock
mov
cmp
and
stc
xchg
inc
fsincos
adc
retf
lahf
add
sub
outs
and
scas
adc
xchg
inc
push
jno
mov
jmp
pop
sbb
jns
jle
sub
or
mov
lahf
xchg
adc
leave
iret
mov
mov
dec
mov
and
sbb
pop
cmp
sub
sti
push
sub
fistp
cmp
push
leave
pop
dec
arpl
jle
pop
sbb
mov
neg
xor
adc
inc
int
(bad)
sbb
int
mov
call
outs
cmp
retf
(bad)
xchg
or
xchg
mov
(bad)
mov
mov
or
int
outs
inc
jne
push
das
ret
test
sbb
add
add
ror
sbb
mov
pop
sbb
ficom
or
fs
inc
bound
push
ficom
mov
pop
nop
int3
in
sub
add
loop
mov
mov
mov
pusha
repz
and
lahf
ror
fdiv
sbb
aad
or
jns
scas
sti
pop
ret
pop
dec
adc
sub
sub
pop
in
mov
push
dec
push
sub
or
cmp
test
pop
mov
ret
cmp
cmps
je
xor
mov
and
add
mov
mov
mov
xchg
pusha
stc
arpl
leave
push
xor
jge
mov
inc
adc
jbe
mov
jae
faddp
cmp
rcr
das
call
rcr
mov
stc
push
dec
clc
xchg
fwait
ret
adc
jmp
inc
add
pop
cmp
pop
or
mov
int3
or
inc
sub
inc
fsubr
inc
cmc
mov
outs
je
cwde
jp
cmp
addr16
mov
cwde
mov
dec
(bad)
push
xchg
mov
inc
imul
adc
mov
inc
test
xor
push
jp
sub
inc
jge
inc
mov
cmp
xor
mov
and
xchg
nop
sbb
test
repnz
mov
push
jge
push
xor
sbb
push
xchg
test
icebp
sbb
add
(bad)
pop
ret
es
mov
sbb
bound
repnz
inc
cwde
cmps
stos
mov
push
popf
push
inc
scas
popa
pop
push
out
out
je
(bad)
mov
push
div
lahf
mov
aaa
lock
mov
shl
jo
mov
int
test
cmp
or
stos
push
push
enter
mov
add
in
rcr
xchg
dec
inc
jl
pusha
loopne
ss
les
stos
cmc
cli
sahf
bound
ins
inc
outs
popa
jb
xchg
shl
jnp
inc
icebp
cmp
ret
inc
xchg
inc
adc
es
xchg
xchg
xor
mov
test
scas
inc
out
arpl
xor
dec
sbb
stc
cmp
aam
adc
and
enter
ss
in
xchg
popa
test
jbe
or
sub
mov
pop
movs
sub
cmp
repz
les
push
and
adc
push
mov
cmp
stos
enter
dec
mov
fwait
add
xchg
std
pop
loopne
inc
loopne
and
jnp
mov
repz
call
jge
sbb
dec
mov
shr
repz
jae
and
mov
mov
sbb
xchg
xor
call
and
sbb
mov
push
cmc
ins
movs
xchg
mov
xor
daa
xlat
int
and
add
pop
aad
add
push
dec
lods
idiv
(bad)
cld
je
pushf
fst
mov
mov
add
jmp
inc
mov
and
mov
cmp
mov
cmps
fwait
shr
and
pusha
xor
jl
or
out
jo
mov
ret
fdivr
es
fld
xor
test
push
mov
mov
mov
test
ror
jmp
aas
pop
paddsw
jmp
mul
xchg
fistp
ss
not
sub
ins
sbb
dec
and
repz
mov
xchg
shl
cmp
cld
xchg
outs
pop
lods
add
mov
jb
popf
cmp
xchg
pop
in
in
ins
and
jg
xor
push
out
fld
les
loop
movs
mov
rol
or
jnp
lock
dec
je
or
ror
ins
mov
movs
retf
out
sbb
dec
and
jge
(bad)
mov
sbb
nop
pop
dec
aas
xchg
pop
xchg
inc
fs
aas
inc
mov
in
mov
aam
outs
push
jb
adc
mov
pop
call
vorps
pop
sar
gs
popa
pop
js
pop
test
dec
enter
xchg
adc
inc
jb
sahf
pusha
jmp
movs
mov
es
lock
dec
sub
push
mov
movs
and
das
(bad)
outs
jo
xor
cld
sub
mov
cdq
xchg
add
out
arpl
addr16
ficom
mov
push
fsubrp
int
loopne
sub
push
in
adc
xchg
rcl
mov
jmp
or
cmp
in
scas
repz
(bad)
outs
fwait
xchg
arpl
mov
jbe
sbb
and
adc
jbe
mov
ret
retf
test
sub
and
sub
jge
adc
aaa
push
sbb
stos
ret
jecxz
frstor
fild
jmp
iret
inc
js
data16
aam
push
test
nop
and
lods
add
or
and
es
xchg
add
repz
mov
ret
jb
mov
out
or
and
jl
fistp
xor
int3
sbb
fistp
rcl
jno
dec
pop
dec
aam
pop
sub
add
call
pusha
movs
loop
cmp
cmc
jmp
cmp
adc
rol
mov
pop
pop
jb
arpl
test
pop
cmp
sbb
gs
cmps
pop
mov
jmp
pop
je
cmp
sahf
iret
mov
lock
pushf
shl
fnsave
mov
xchg
add
adc
rol
dec
push
pop
outs
(bad)
in
xchg
loopne
or
dec
pop
mov
cdq
sub
push
mov
adc
mul
and
into
fadd
jne
arpl
repz
addr16
xchg
mov
jl
xor
xchg
sbb
ds
sub
jl
jl
cs
je
test
dec
sahf
xor
and
add
ja
mov
mov
das
test
xchg
jmp
stos
ret
lea
sub
in
addr16
retf
mov
(bad)
loope
and
into
jmp
dec
nop
mov
stos
jae
dec
cmp
and
adc
loope
mov
clc
out
cdq
pop
test
mov
and
jecxz
mov
jbe
call
add
stos
loopne
out
mov
push
fcom
outs
inc
(bad)
lods
call
das
and
shl
jle
add
adc
sub
dec
dec
inc
push
cdq
mov
fadd
sti
mov
enter
sbb
push
mov
fcmovu
frstor
mov
les
fstp
fist
retf
bound
test
push
add
jmp
mov
dec
adc
repnz
adc
(bad)
mov
hlt
leave
(bad)
mov
jp
sbb
repnz
mov
mov
(bad)
ins
out
pop
call
lods
clc
or
and
lahf
pop
int3
sbb
pusha
loope
out
push
rcl
xor
ret
scas
push
and
(bad)
nop
sub
(bad)
jo
or
out
hlt
lods
ins
mov
or
in
add
dec
sbb
pop
vpmulhw
mov
shl
ins
cmp
sub
mov
sbb
sti
mov
in
dec
cmc
inc
imul
(bad)
rcl
mov
and
xchg
mov
es
mov
or
pop
cmps
movs
sbb
dec
retf
adc
mov
lahf
pcmpeqb
mov
adc
lds
push
test
or
sub
std
and
jbe
fistp
xchg
xor
pop
adc
xlat
lahf
pop
dec
stos
sbb
dec
cmp
addr16
push
(bad)
jae
xchg
jp
aad
add
adc
adc
mov
sbb
out
push
ss
pop
(bad)
pop
imul
xchg
ins
(bad)
das
in
mov
test
mov
test
ss
push
(bad)
jp
dec
push
(bad)
ror
int3
in
hlt
dec
mov
inc
cmp
sub
fwait
outs
es
sub
or
out
push
iret
pusha
(bad)
and
dec
xchg
gs
mov
xchg
cld
(bad)
mov
pop
out
pop
sub
mov
jge
mov
mov
scas
xchg
lds
iret
jmp
movs
or
sahf
ret
push
aaa
dec
mov
dec
retf
stos
xchg
push
jns
xor
cmp
xchg
lods
jnp
daa
xor
mov
addr16
or
rcr
mov
mov
and
jno
repnz
add
gs
call
pop
rcr
xchg
and
(bad)
jecxz
sub
pusha
sub
jbe
sub
cmp
mov
rol
mov
sar
imul
rcl
fcomip
shl
repz
mov
mov
cdq
and
jno
loopne
shr
out
and
or
jecxz
js
loope
imul
xchg
sub
pop
jo
mov
outs
cmc
sbb
jecxz
ds
jbe
mov
shl
pushf
pop
mov
jb
nop
xchg
lds
lods
andnps
push
adc
jae
and
popf
int3
stos
or
cmp
pop
sar
dec
arpl
pop
fdiv
cmps
add
test
shr
xchg
adc
xor
pop
data16
jbe
jl
push
js
scas
mov
add
pop
mov
dec
dec
and
mov
adc
cmp
cmp
xor
xor
xor
jno
leave
outs
test
mov
retf
hlt
push
shl
lock
xlat
repz
fidiv
cmc
pop
xor
std
pop
inc
dec
iret
shl
pop
(bad)
push
movs
loope
push
cmp
outs
or
aam
arpl
sbb
mov
add
inc
loope
cmp
cdq
jl
add
sub
out
pop
inc
popa
xor
in
pop
pusha
mov
sub
rol
fimul
jo
in
mov
in
ins
outs
dec
les
or
je
xor
cmp
es
ret
add
cli
pushf
inc
inc
rcl
scas
mov
fist
cmps
inc
cwde
push
jmp
mov
scas
push
dec
sti
xor
jns
xor
shl
xor
rcl
int3
jb
pop
sbb
aam
(bad)
cmp
neg
je
pop
lods
out
fwait
push
aaa
ins
inc
cmp
sbb
dec
sbb
and
inc
jns
dec
xlat
imul
cmp
int
retf
mov
std
outs
xlat
xor
outs
add
leave
sub
sbb
into
adc
cmp
lods
sbb
imul
mov
mov
inc
sub
dec
mul
test
mov
xchg
xchg
stos
cdq
int
cmp
jle
shl
daa
sti
sahf
mov
push
aaa
sahf
xor
xchg
jg
cdq
outs
push
ret
in
push
fidivr
or
add
outs
in
or
pop
mov
push
sub
call
(bad)
push
sar
ret
ins
mov
dec
mov
xchg
xbegin
sub
fwait
nop
xor
cmp
xlat
into
test
sbb
mov
xchg
cmp
pushf
inc
adc
dec
pop
scas
or
std
add
call
jbe
push
push
pcmpgtb
adc
push
xor
cs
pop
mov
mov
add
retf
adc
leave
add
jmp
add
xchg
pop
pop
lods
jp
xchg
fld
test
nop
fld
jp
cmc
xchg
aam
cmc
push
lahf
shl
add
xchg
push
adc
pop
mov
xchg
and
xor
mov
mov
cmps
js
adc
mul
and
shr
es
out
hlt
fdiv
adc
lods
xor
(bad)
ins
and
test
cli
aam
clc
dec
jne
pop
jg
jo
in
cmp
jns
pop
loope
mov
or
pop
pop
cwde
test
stos
mov
movs
dec
loopne
stc
test
js
push
aas
xchg
ret
mov
inc
push
inc
rcr
cmp
dec
mov
mov
xchg
fst
mov
mov
int3
jo
push
inc
sbb
sahf
jl
shl
sbb
inc
adc
test
cmp
cmp
inc
sub
jo
test
inc
pop
iret
mov
mov
add
cld
scas
enter
repnz
arpl
pop
mov
mov
das
inc
imul
dec
bound
push
pop
iret
push
out
lock
std
jns
and
push
cmc
pop
dec
jmp
or
mov
mov
pop
in
push
scas
dec
inc
xor
js
aas
xchg
adc
fistp
out
sub
add
out
mov
fisub
jb
cmp
cmps
inc
fdivrp
push
cld
enter
fwait
push
pop
out
jle
pop
dec
out
enter
cli
(bad)
mov
loopne
frstor
jae
out
es
xor
xor
push
icebp
scas
jae
jg
xchg
cwde
pop
nop
std
mov
fcmovu
pusha
in
jl
or
jne
and
rol
cmc
outs
punpckhwd
add
sahf
mov
add
out
ficom
dec
rcl
std
cmc
mov
scas
mov
dec
or
lea
stos
outs
call
add
mov
mov
pop
stos
outs
adc
lahf
int3
cmps
inc
add
je
jnp
push
cmovbe
mov
(bad)
into
repz
repz
out
cwde
or
add
mov
and
ds
xchg
jns
ins
jecxz
push
scas
daa
mov
xor
ret
ror
aas
std
jmp
mov
fiadd
mov
(bad)
cmc
mov
push
adc
in
loopne
fstp
jecxz
fcomp
gs
fdiv
mov
pop
mov
xlat
mov
mov
(bad)
fisub
bound
jbe
cmps
mov
retf
or
les
(bad)
jecxz
push
jnp
sub
add
rcl
adc
test
pop
stos
xchg
nop
inc
pop
nop
adc
cmps
sub
mov
sub
sub
mov
rcr
inc
cmp
mov
mov
sbb
das
outs
adc
push
inc
popa
mov
sbb
cmp
mov
sub
and
out
push
out
fcmovnu
xor
jmp
sahf
xchg
pop
(bad)
mov
stos
jmp
(bad)
dec
aas
add
mov
dec
and
cmps
dec
pop
push
add
mov
(bad)
mov
cld
mov
out
and
je
ret
test
xor
mov
aam
adc
jmp
pushf
leave
push
cld
movs
loope
jnp
add
push
mov
imul
fld
jmp
mov
rcr
pop
sar
inc
out
cmp
jp
ret
iret
jns
mov
arpl
adc
retf
jns
sub
dec
ins
cmp
(bad)
inc
shl
loope
sub
sub
or
xchg
mov
jnp
add
nop
das
bound
cli
repz
adc
les
mov
das
fs
retf
(bad)
in
nop
in
dec
dec
inc
into
pop
scas
leave
mov
bound
jg
cmp
pop
aaa
fild
xor
jmp
fst
xor
addr16
push
mov
data16
sub
retf
(bad)
scas
pushf
ss
repz
push
inc
adc
push
dec
sbb
cmp
inc
jmp
fnsave
or
shl
shl
pop
xchg
and
cmp
inc
xlat
(bad)
and
adc
push
sahf
fcomp
cdq
fcmovnb
stos
int
add
daa
push
mov
jae
(bad)
loopne
cs
push
jmp
add
push
ja
push
rol
pop
mov
jbe
dec
xlat
adc
in
mov
ret
dec
jmp
mov
or
jae
stc
xchg
sbb
dec
jae
lds
push
ss
adc
es
jg
inc
push
xchg
adc
aaa
fldpi
inc
repz
push
rcl
jmp
sbb
cmp
sub
movs
mov
rol
les
adc
leave
xlat
push
stos
and
jno
cmp
scas
push
push
repz
imul
push
clc
lods
ds
pop
cmp
test
not
adc
push
jge
adc
ss
jle
xchg
dec
lea
fistp
xchg
and
aam
cmp
and
xchg
adc
std
in
int3
jns
push
setge
mov
xchg
shl
fidivr
test
mov
mov
or
ficomp
mov
pop
les
fimul
mul
(bad)
(bad)
cld
push
xchg
es
dec
movs
fdiv
push
push
popa
add
add
mul
mov
and
push
add
or
cld
fsubr
pop
jo
and
or
aaa
bound
(bad)
mov
mov
push
mov
dec
inc
ds
or
mov
mov
inc
cmp
mov
or
and
inc
(bad)
sub
cs
cmp
fld
rol
jmp
shr
(bad)
mov
pop
push
cmp
imul
mov
cmc
scas
mov
cmp
arpl
xchg
(bad)
iret
fs
es
test
mov
sti
shl
or
add
fimul
sub
ss
nop
xor
mov
aaa
(bad)
imul
push
sar
nop
push
ret
jno
mov
pop
scas
add
add
mov
test
enter
cmp
push
or
data16
push
(bad)
cmps
movs
lods
add
and
mov
and
or
mov
inc
test
aad
daa
pusha
jmp
pop
call
or
mov
cmp
xchg
das
(bad)
(bad)
hlt
aas
shr
fld
std
mov
sub
in
or
sub
and
or
aaa
addr16
jmp
mov
ins
inc
xor
in
sub
pusha
dec
xor
push
(bad)
or
repz
xor
ds
(bad)
dec
jmp
in
retf
cmc
xor
ins
das
(bad)
or
mov
and
or
in
std
js
stos
gs
xor
push
ret
out
imul
cmp
popf
(bad)
arpl
rol
scas
mov
and
mov
inc
and
push
les
jo
push
rcl
pop
push
rol
fist
clc
jp
scas
push
adc
pop
inc
inc
(bad)
dec
outs
imul
mov
fucomp
sub
inc
(bad)
jmp
push
jbe
cs
pushf
jns
cmps
outs
data16
int
adc
hlt
pushf
jg
mov
sbb
lods
or
clc
scas
arpl
xchg
lock
push
jle
stc
in
(bad)
sbb
stos
movs
sbb
xor
daa
in
jne
adc
nop
loop
mov
loop
add
add
cmps
jb
enter
repnz
fbstp
pop
aaa
ds
test
jno
xlat
mov
sbb
mov
test
add
jnp
imul
mov
xor
mov
mov
out
add
mov
xchg
ret
dec
mov
shl
fcomp
mov
push
dec
out
shl
pushf
push
stos
clc
push
fdiv
ror
jp
pop
sub
ins
adc
mov
lea
or
xchg
push
cmp
push
xchg
shr
cmps
adc
and
pop
gs
sbb
sub
ret
push
and
rcl
pushf
call
jmp
ror
dec
stos
dec
movs
add
xchg
pop
cmps
hlt
xchg
aam
cmp
mov
xchg
or
dec
fcom
push
sub
aaa
cmps
dec
aad
mov
mov
aas
(bad)
inc
and
sbb
dec
cmp
mov
xchg
dec
lds
xchg
adc
std
test
sbb
mov
or
lods
out
lock
repz
in
into
sti
hlt
sar
aas
lahf
retf
adc
mov
pusha
mov
hlt
pusha
push
or
movs
xchg
mov
loop
jno
push
scas
or
lahf
dec
aas
std
adc
lock
adc
fidivr
ins
in
ret
sti
(bad)
adc
pop
jo
dec
stos
sbb
aad
(bad)
dec
sbb
ret
jmp
mov
push
shl
xor
mov
dec
and
push
mov
or
inc
jnp
es
cmp
inc
sub
(bad)
fdiv
xor
sbb
mov
xchg
dec
jnp
fdivr
push
daa
stos
xchg
lock
aam
sbb
sub
mov
add
fild
jecxz
dec
sbb
mov
mov
call
retf
mov
pop
cs
loop
dec
neg
pop
scas
pop
inc
repnz
xchg
sub
ror
shr
enter
ret
cwde
xor
push
repz
and
in
jmp
jge
lods
fild
mov
pop
loope
movs
jl
xchg
mov
cmps
test
shr
sub
cdq
mov
jae
push
jl
adc
js
inc
popa
fwait
xor
jmp
cmp
jg
mov
push
jbe
retf
and
hlt
xlat
push
adc
test
in
sub
hlt
jle
cmp
inc
xor
mov
jae
push
fst
(bad)
loopne
cmp
ret
jecxz
dec
out
or
outs
dec
push
jle
pop
leave
cmp
test
in
push
test
lds
stos
js
xchg
push
ret
mov
cmps
mov
cmp
mov
xchg
retf
outs
cmpps
cmp
jle
and
push
or
xchg
repz
cmp
ins
loope
dec
jmp
xor
cld
leave
sbb
scas
imul
add
or
(bad)
das
sbb
ja
sub
enter
daa
icebp
shr
inc
jnp
loop
push
cmp
sahf
dec
pushf
mov
inc
bound
(bad)
or
(bad)
(bad)
push
loopne
fwait
mov
add
pop
(bad)
das
idiv
xchg
ret
xchg
push
jo
jp
mov
push
pusha
push
fnstsw
pop
cmp
xchg
push
push
ror
cmp
cmps
cld
stc
cmps
mov
mov
mov
(bad)
iret
js
sahf
adc
imul
rdtsc
pop
xlat
cmc
jbe
adc
repnz
mov
call
shl
fs
xchg
xor
xor
ficom
pop
imul
pop
leave
stc
lahf
and
mov
out
mov
and
cmc
xchg
sbb
sahf
in
or
dec
aam
lock
mov
xor
fidiv
sub
inc
add
hlt
and
push
fnstsw
(bad)
jb
xchg
dec
fnstsw
ret
jmp
xchg
call
mov
mov
or
lods
in
adc
cli
jp
pop
into
dec
outs
in
scas
daa
sub
sbb
data16
and
fidiv
jle
stos
aam
push
inc
aam
imul
cmp
cmp
out
cmp
repnz
xor
dec
push
fnsave
test
and
test
jns
movs
jg
mov
push
sub
mov
and
aad
lods
adc
mov
cmp
xchg
push
cmc
mov
xchg
cmp
mov
sub
adc
pop
retf
dec
pop
stos
mov
sub
aaa
in
popa
pop
xor
into
xor
and
adc
or
aas
sbb
jnp
iret
lahf
and
adc
imul
sbb
jmp
je
movs
mov
adc
out
mov
and
fcomi
mov
pop
push
xchg
lds
xor
xor
xchg
pop
mov
cmps
xor
dec
mov
push
sub
clc
psubw
sub
pop
pop
in
push
cmp
(bad)
movs
ja
fdivr
ja
or
icebp
pop
mov
test
pop
lea
rcl
retf
sti
popf
add
or
daa
add
clc
in
inc
push
ins
and
cmc
and
ja
or
fiadd
pop
mov
out
cdq
retf
fwait
cmps
mov
cli
jmp
push
pop
mov
lods
add
sub
xor
fistp
imul
out
aas
idiv
cmc
fsubr
sbb
cwde
fs
mov
push
xchg
add
add
in
imul
adc
test
or
jbe
stos
in
in
jl
gs
mov
sahf
popf
pop
adc
push
arpl
jmp
adc
xchg
pop
pushf
stc
data16
xchg
mov
mov
scas
sub
rcr
push
cwde
mov
inc
sub
int
mov
push
dec
rcr
in
xchg
in
fsubr
nop
adc
ret
in
(bad)
xlat
xchg
loope
dec
mov
dec
int
adc
cmp
push
cmc
cmps
imul
mov
mov
inc
sbb
and
pop
pop
jmp
sbb
cmp
fcomp
hlt
jbe
or
push
add
or
dec
or
sbb
mov
pusha
sbb
ins
dec
add
(bad)
ins
pop
xchg
jmp
jbe
test
push
adc
test
cmp
push
cmps
xchg
mov
push
int3
pop
mov
sub
int3
pop
dec
into
shl
shl
je
cmp
push
ds
mov
outs
outs
ss
in
lock
mov
mov
cmc
out
pop
out
loop
retf
pop
(bad)
pop
push
bound
xchg
dec
fdiv
sbb
cmp
ss
add
outs
pop
je
aad
sti
mov
cld
adc
mov
sahf
cli
adc
dec
arpl
xor
mov
bound
je
mov
sbb
lea
sbb
jo
cmps
sti
xchg
cli
dec
stos
dec
sub
add
neg
loope
mov
push
shl
(bad)
mov
adc
cld
push
push
mov
mov
sbb
hlt
ja
scas
cmps
cli
mov
xchg
mov
and
mov
idiv
fmul
scas
daa
dec
and
pop
fsubr
loope
es
scas
add
adc
aad
ins
xchg
push
fs
push
sbb
jmp
sub
pop
scas
ds
ja
sub
mov
mov
mov
pop
sahf
adc
outs
adc
xchg
in
mov
cli
lods
xchg
sbb
cmc
sbb
sbb
adc
add
mov
popf
xchg
mov
enter
sbb
push
xchg
sub
test
xor
ins
loop
lods
sub
stos
mov
or
xchg
or
bound
inc
pusha
sbb
or
or
lods
sub
mov
adc
mov
jp
test
loopne
push
mov
rcr
mov
fisttp
mov
xor
or
cli
fsub
xchg
sbb
outs
mov
cmp
mov
cmp
rol
push
pop
ss
cwde
xor
mov
pop
outs
push
adc
cwde
xor
or
dec
mov
retf
psubsb
sub
cmp
out
les
sbb
repz
scas
xor
cmp
stc
mov
mov
repz
pop
inc
xor
loope
jne
dec
and
pop
in
(bad)
into
sub
or
xchg
scas
icebp
cmps
sbb
or
xchg
(bad)
(bad)
sbb
inc
pop
cmps
mov
push
das
push
mov
call
aad
movs
rcr
jmp
xchg
push
pop
ror
pusha
aad
pop
test
jle
cmps
and
sbb
add
dec
inc
push
cmp
sbb
out
aad
outs
xchg
mov
push
jns
add
test
push
imul
jo
and
push
call
or
call
int
xor
(bad)
push
cmp
xor
shr
jmp
sahf
aas
das
sub
dec
test
add
aas
xlat
mov
ror
jnp
out
pop
cwde
mov
(bad)
ja
cmp
dec
jmp
or
movs
imul
or
mul
shr
bound
push
push
sub
mov
push
inc
or
cdq
pusha
cld
cmp
jg
hlt
cmp
jle
xor
test
lea
mov
push
gs
aad
sbb
loope
and
jmp
mov
popf
arpl
mov
mov
dec
mov
push
cmp
inc
rcr
and
popf
dec
lods
cmp
and
mov
push
retf
les
inc
test
adc
xor
popa
stos
pop
loop
pop
mov
xor
das
mov
sub
xor
sbb
ds
dec
loop
les
call
(bad)
repz
call
popf
sbb
xor
mov
sbb
dec
(bad)
cmp
cmp
ret
jl
add
mov
int
mov
add
pop
cmp
lods
stos
retf
lock
cmps
data16
sbb
aad
push
mov
adc
mov
or
sub
imul
cmp
pop
dec
mov
clc
pop
push
mov
adc
iret
push
sub
pushf
scas
dec
imul
retf
mov
out
aaa
test
mov
or
cmp
into
and
jnp
ss
jns
xor
jb
mov
adc
test
lods
loop
push
iret
idiv
mov
cmps
iret
popf
xor
add
or
cld
and
scas
aas
mov
sub
mov
lock
pop
in
jnp
and
and
jl
test
dec
push
or
jge
sbb
jns
call
mov
and
xor
out
scas
ins
jbe
inc
and
mov
ds
push
movs
(bad)
aam
mov
fistp
retf
xchg
inc
adc
scas
shr
pop
das
les
add
aam
movs
inc
loopne
clc
xchg
gs
shl
repz
push
mov
sti
pop
lahf
push
mov
sbb
sub
fwait
xor
pop
test
in
jge
xchg
ret
scas
clc
iret
xor
movs
repnz
mov
nop
les
adc
fdiv
jns
aad
adc
mov
arpl
push
icebp
inc
adc
je
mov
neg
stos
push
das
jbe
fist
add
inc
shl
mov
pop
cmp
hlt
fnsave
mov
adc
(bad)
movs
add
aam
(bad)
xchg
mov
(bad)
mov
push
inc
add
jo
ret
and
jecxz
das
jae
jbe
mov
test
(bad)
dec
repz
mov
je
and
in
or
mov
cmps
push
mov
cld
pop
sub
mov
ret
test
push
jl
aaa
sbb
dec
push
add
and
add
ret
(bad)
fmul
test
and
pop
(bad)
dec
fdiv
ins
inc
mov
inc
add
and
dec
repnz
test
sub
daa
xor
ret
aas
(bad)
mov
into
sahf
jmp
push
jg
and
fbstp
and
push
jbe
push
ja
popf
sbb
jne
xchg
aas
and
adc
in
out
mov
sbb
aad
(bad)
ficomp
jae
mov
jbe
cmps
adc
imul
xchg
dec
ins
arpl
sub
das
add
ja
rcl
mov
in
or
pop
mov
dec
aas
aam
inc
in
stos
mov
hlt
pop
lods
dec
outs
jo
sbb
sbb
or
jns
nop
imul
pop
or
out
es
shl
in
out
(bad)
hlt
push
icebp
dec
aas
bswap
iret
mov
inc
push
test
test
cmp
aas
daa
lods
cmp
push
int3
stc
mov
mov
push
push
outs
pop
or
mov
inc
cmp
call
(bad)
lds
pop
loopne
enter
dec
nop
aad
jle
push
gs
js
push
push
mov
cld
test
mov
mov
fbstp
and
pop
mov
cdq
je
jne
les
mov
jmp
movs
and
dec
pop
jmp
icebp
sbb
push
lahf
jmp
cwde
xor
pop
xchg
fwait
into
out
jge
inc
jmp
dec
jg
fild
pop
push
leave
cli
adc
adc
pop
in
int3
popf
jns
ins
and
sbb
jne
add
dec
sti
adc
sti
and
cmp
sbb
xchg
je
shl
sahf
je
xor
sbb
stc
fcomi
dec
mov
mov
fidivr
test
jae
lahf
sbb
jmp
adc
jmp
(bad)
hlt
cmp
sbb
(bad)
sbb
lods
lock
jno
xor
dec
stos
aad
inc
fimul
mov
sbb
fimul
inc
dec
cwde
out
aas
mov
repz
in
cmp
jnp
repnz
xor
sub
cmp
jl
or
and
or
sbb
xor
ins
mov
mov
mov
jns
bswap
test
sbb
dec
and
ja
xor
test
shl
cmp
fdivp
retf
sub
(bad)
lds
cmp
and
mov
xlat
cs
iret
inc
fist
xchg
in
sbb
jp
or
stos
dec
sti
hlt
lahf
es
cmps
dec
dec
stc
cmp
mov
jae
aaa
sub
pop
retf
pop
mov
xchg
addr16
rcr
jle
and
push
mov
adc
sub
mov
xchg
mov
jmp
mov
or
rcr
retf
std
call
into
data16
out
jl
fs
cdq
jns
pop
dec
cmp
aas
cmps
sbb
nop
aam
lahf
fwait
add
popf
xchg
jo
cmp
inc
mov
pop
js
and
add
mov
adc
or
mov
scas
or
out
lods
jns
out
or
add
leave
mov
call
repz
mov
fidiv
and
pop
test
mov
adc
(bad)
repnz
ror
daa
rcl
je
dec
fnstcw
sahf
sbb
adc
ret
mov
sbb
xlat
xor
jb
stos
push
mov
mov
xchg
xor
and
out
ret
mov
jg
rol
dec
inc
retf
fadd
push
cmp
repnz
pop
iret
jecxz
(bad)
adc
dec
call
jbe
cwde
ss
pushf
and
push
pop
jecxz
int3
add
pop
sub
pushf
lods
sub
std
out
mov
inc
repz
push
ds
mov
out
lods
mov
daa
retf
jl
mov
imul
xlat
pop
shl
outs
ins
call
mov
and
out
push
ins
sub
mov
(bad)
xchg
outs
adc
push
lock
jecxz
jge
inc
out
in
test
jns
pop
push
push
(bad)
sub
das
xor
mov
in
mov
(bad)
rol
test
out
mov
and
cmp
lods
fcomp
jae
add
or
sbb
adc
pop
scas
stos
fadd
fldenv
jecxz
xor
out
ret
jmp
(bad)
cmp
ins
ficom
aam
(bad)
popa
inc
dec
inc
fidiv
arpl
inc
out
xlat
in
les
and
(bad)
out
ret
outs
mov
icebp
jnp
jno
iret
push
not
inc
rol
xchg
dec
mov
cmp
xchg
enter
sbb
arpl
(bad)
xchg
scas
lods
arpl
mov
cmps
sbb
mov
test
push
cmp
retf
sub
mov
sar
push
dec
mov
mov
(bad)
jg
pop
ret
mov
inc
not
outs
mov
imul
in
inc
int3
add
mov
mov
mov
sti
add
mov
movs
lock
fst
cmp
(bad)
push
out
xor
pop
jae
jp
and
cs
out
ret
push
ds
and
sub
and
(bad)
rcl
mov
dec
inc
cmp
mov
push
call
js
test
push
xlat
push
nop
fnstenv
mov
push
ja
pop
add
es
dec
retf
pop
or
xor
out
sahf
xor
fwait
mov
outs
ins
push
(bad)
jnp
dec
pop
ret
movs
data16
add
xor
dec
mov
adc
mov
rol
push
pop
xchg
inc
and
sub
fstp
nop
inc
push
mov
mov
cmp
call
aad
test
repz
mov
sub
push
es
xor
jmp
aaa
add
pop
ficomp
push
and
xchg
outs
adc
in
mov
add
ficomp
cmp
push
pop
sbb
out
(bad)
out
ins
add
jb
and
popa
cwde
retf
inc
in
popf
mov
jmp
or
fild
call
mov
(bad)
mov
jmp
and
fdivrp
mov
in
loopne
mov
xor
mov
(bad)
aaa
cmp
mov
fisttp
or
cld
je
aam
push
std
loope
cmp
mov
addr16
xchg
mov
adc
leave
daa
leave
scas
xor
retf
adc
mov
scas
(bad)
sbb
jp
push
push
fwait
ja
xor
test
ins
lods
mov
or
push
adc
dec
mov
ins
add
imul
or
or
(bad)
mov
jge
arpl
lock
sub
xor
inc
fbstp
push
ja
cdq
mov
shr
and
mov
scas
scas
popa
pop
and
retf
mov
sub
nop
retf
rcr
ss
cmp
mov
int
dec
jo
mov
mov
or
inc
add
add
je
cmp
inc
in
jl
mov
cdq
add
add
jge
repz
into
aas
daa
das
dec
cs
inc
or
add
sub
dec
inc
inc
sbb
das
fs
dec
or
mov
stos
lock
out
sbb
cmp
fldenv
mov
cmc
jae
outs
add
sbb
mov
aas
arpl
mov
stos
dec
mov
pusha
cmps
test
jmp
push
jl
mov
xor
fwait
add
das
add
fisubr
loop
fcmovnbe
dec
out
adc
dec
addr16
add
fdivr
popa
adc
mov
xchg
out
scas
call
sub
mov
nop
inc
add
jns
or
call
adc
mov
cld
jae
jne
test
call
ret
out
out
pop
call
test
fwait
sahf
push
cs
sbb
add
outs
out
jno
sbb
scas
adc
and
pop
jl
jmp
mov
push
loope
cdq
dec
int3
mov
(bad)
aaa
(bad)
mov
mov
add
jp
fild
xchg
sub
ins
dec
hlt
mov
int3
mov
add
mov
push
jne
cli
or
sub
add
xlat
adc
pop
in
daa
xor
(bad)
js
cmp
jne
adc
popf
ins
clc
pusha
outs
scas
inc
jmp
es
inc
inc
sub
fistp
or
mov
fstp
jg
pusha
jo
aaa
mov
ror
test
jecxz
xchg
addr16
popa
cmp
pop
ins
or
mov
or
rol
outs
sahf
jnp
mov
inc
int3
data16
rol
into
(bad)
fidivr
daa
push
jl
mov
add
add
add
outs
nop
pop
sub
and
sub
loopne
xchg
sti
inc
mov
push
lds
pop
xchg
bound
pop
inc
ds
pop
popf
mov
jmp
and
pop
cmp
out
cdq
xchg
push
or
and
test
xchg
mov
inc
add
push
mov
movs
sub
je
loope
repz
cdq
loopne
sub
mov
push
aam
movs
ss
xor
xlat
int
cmps
mov
jno
add
xor
cwde
push
out
mov
inc
aaa
test
cs
test
adc
(bad)
cmp
mov
bound
push
lea
push
mov
aam
mov
adc
icebp
aaa
jo
loope
add
jbe
stc
ds
jmp
clc
cld
cmp
mov
sbb
movs
push
xchg
mov
xor
xchg
test
jge
jne
dec
mov
jmp
adc
mov
popa
pop
mov
xchg
mov
sbb
mov
jge
xchg
and
ret
imul
test
das
fs
push
mov
mov
fnstenv
in
fs
jecxz
mov
xlat
mov
fsub
shl
and
xor
push
(bad)
dec
in
mov
adc
and
mov
rcr
jp
jns
mov
daa
xchg
or
or
jg
bound
out
fistp
ret
daa
mov
mov
mov
jns
sar
lock
xchg
ja
gs
int
dec
mov
js
jns
lds
xor
sbb
in
cmp
cmps
and
and
add
jmp
push
loope
(bad)
loop
and
jns
jg
mov
sbb
pop
mov
sti
xlat
int
jns
(bad)
cmp
jle
jb
out
hlt
(bad)
pop
movs
aaa
stos
xchg
or
loopne
movs
test
xchg
int3
jnp
test
mov
dec
daa
loopne
fisttp
jae
pop
adc
cli
jecxz
or
fsubr
rcr
clc
out
adc
(bad)
ja
int
xor
(bad)
adc
cmp
iret
push
and
jmp
imul
mov
int
jb
mov
dec
sub
les
add
jmp
push
fcom
pusha
(bad)
outs
dec
outs
popa
xor
cmp
push
fwait
fwait
jmp
stc
xor
hlt
out
pop
repnz
or
int
sbb
test
sub
mov
int
mov
push
scas
sbb
call
aam
scas
fs
(bad)
retf
ds
pop
cmps
ins
inc
jle
lock
xlat
cmc
push
scas
mov
imul
and
inc
movs
faddp
js
cmps
inc
pop
and
int3
pop
mov
adc
pop
jnp
cs
cld
mov
or
push
sbb
ret
add
in
leave
jne
and
leave
call
or
pushf
adc
jp
addr16
jmp
loop
loopne
push
mov
aaa
jp
inc
or
dec
inc
xor
cmp
sbb
push
in
clc
xchg
sub
mov
mov
es
arpl
inc
push
inc
sbb
cwde
and
and
pushf
stc
mov
nop
pop
jb
test
and
ja
es
mov
cmp
out
xor
aam
cmp
arpl
call
add
cli
and
test
fcom
cmc
fcom
test
add
add
fwait
(bad)
push
lods
push
shl
das
pop
lock
ds
push
lds
cs
fadd
mov
fidiv
sbb
mov
and
loope
ja
cmp
aas
cld
std
pop
out
jo
jge
fdiv
mov
adc
rol
jnp
pushf
dec
fdiv
ins
jno
jns
push
jp
test
sar
mov
sbb
(bad)
pop
jmp
xlat
std
jge
add
mov
sub
mov
sti
xor
(bad)
fistp
inc
inc
inc
add
mov
xor
pusha
xor
push
cdq
jp
pop
out
mov
xchg
and
dec
jle
sar
mov
xchg
pop
rol
(bad)
dec
and
cmps
cmp
jns
adc
or
clc
iret
jle
hlt
inc
or
clc
dec
arpl
call
shl
dec
(bad)
adc
or
cmc
mov
das
mov
in
dec
adc
aam
adc
jae
add
neg
mov
xor
(bad)
(bad)
sbb
pusha
bnd
jbe
ret
mov
loop
jle
cmps
mov
sbb
stc
sub
mov
daa
test
or
jmp
add
add
outs
in
add
loop
jb
iret
jmp
ins
inc
mov
out
iret
xchg
pop
enter
and
fdivrp
xor
xchg
stc
mov
mov
nop
int
xor
aam
jo
stos
fwait
adc
enter
mov
idiv
and
xchg
scas
mov
mov
inc
cmps
retf
add
ret
test
mov
pop
addr16
(bad)
xor
in
in
dec
loopne
movs
sub
inc
scas
push
jno
fdiv
into
pop
jbe
inc
xor
dec
shl
jg
div
xor
std
test
mov
inc
(bad)
and
mov
jo
out
jbe
fnsave
pop
pop
inc
in
pop
adc
ins
sub
test
sbb
pusha
cmovae
inc
jecxz
imul
cmp
(bad)
pop
inc
fld
dec
mov
mov
pop
pop
inc
test
jns
bound
fsub
mov
sahf
sbb
movs
aad
cld
loope
cmp
ja
rol
ret
jmp
pop
inc
mov
(bad)
or
pop
neg
add
scas
mov
ret
xor
call
and
jbe
adc
pusha
loope
mov
cmc
inc
das
and
call
pop
out
push
fnsave
sub
push
dec
int
push
cdq
out
pop
xor
fist
pop
mov
cmp
xor
scas
mov
call
push
clc
cs
mov
les
popf
xchg
adc
test
retf
mov
sub
pop
add
pop
or
or
les
loopne
addr16
mov
std
mov
loopne
cmp
adc
in
add
imul
mov
cdq
inc
popf
jl
stos
bound
xor
ficomp
loopne
xchg
pop
rep
dec
mov
pop
mov
fucomi
add
sahf
or
jge
inc
inc
aaa
pop
loop
push
ret
xchg
mov
mov
sbb
fiadd
mov
xchg
or
add
clc
cli
es
inc
loop
inc
inc
imul
jnp
push
push
imul
outs
push
add
cmp
adc
push
adc
stc
jno
mov
je
lahf
sbb
shl
into
sbb
jb
inc
xchg
iret
addr16
fist
push
jne
into
adc
scas
adc
xchg
je
test
push
lds
or
sbb
jno
mov
aaa
movs
lods
retf
jb
std
sbb
xchg
rol
xchg
daa
pop
xchg
mov
dec
imul
mov
add
pop
push
neg
imul
scas
lods
dec
cwde
pop
inc
or
dec
data16
pusha
out
jl
(bad)
(bad)
jg
iret
retf
sbb
mov
fs
jmp
inc
out
icebp
retf
in
mov
test
sbb
jns
sbb
or
xor
dec
jb
lds
lahf
push
sbb
jne
and
cdq
xchg
stos
(bad)
ins
xchg
cld
(bad)
or
dec
jg
arpl
into
inc
and
ret
lea
jnp
loope
stos
pop
loop
sub
popa
iret
and
jle
test
jmp
cmp
outs
stc
mov
adc
stos
mov
ror
push
mov
cli
movs
ins
mov
popa
mov
mov
idiv
or
call
adc
sbb
xchg
es
push
ret
adc
and
jle
mov
jno
gs
das
rcl
pushf
push
jmp
push
jecxz
inc
jg
sbb
daa
add
or
mov
sub
cmps
push
pop
out
clc
xor
push
sbb
and
dec
cmps
ss
retf
sbb
mov
out
add
arpl
adc
push
fucomip
inc
inc
jnp
fadd
call
inc
ss
in
mov
scas
sbb
and
sub
neg
push
sbb
adc
fst
add
dec
icebp
push
push
push
in
loope
das
inc
ja
sbb
jl
xchg
rol
jmp
cwde
into
fmulp
(bad)
stc
sbb
sub
ins
fisubr
push
push
scas
lods
cwde
sub
(bad)
adc
inc
loop
add
(bad)
pusha
fwait
inc
das
mul
ja
mov
or
xchg
mov
xchg
test
mov
bswap
pop
inc
jp
(bad)
clc
add
out
cmp
aad
mov
sub
mov
or
out
aad
inc
loop
je
jmp
cmp
test
sbb
and
popa
mov
fmulp
sahf
inc
sub
mov
sub
sub
jnp
scas
div
sahf
sub
cdq
xlat
cmps
jb
xlat
and
lock
(bad)
shl
ss
hlt
mov
out
(bad)
icebp
dec
popa
shl
pop
int
lock
adc
(bad)
mov
or
push
test
mov
cdq
out
jl
jae
stc
les
jge
pop
ss
cld
fsub
in
sbb
int
pop
mov
cmp
movs
inc
hlt
inc
mov
call
fwait
pop
jne
imul
sbb
in
lea
push
mov
xor
aaa
cld
arpl
arpl
xor
mov
push
stos
push
jp
fiadd
hlt
mov
loope
xchg
(bad)
enter
add
not
mov
aas
(bad)
xchg
outs
mov
jg
inc
jge
repnz
dec
aam
inc
stos
ins
ja
xchg
add
pop
push
mov
add
cli
stos
not
jle
push
xchg
xor
add
idiv
data16
and
movs
ss
fwait
cmp
mov
jbe
sbb
cmp
xor
cmp
test
sub
and
scas
pop
mov
lods
sbb
xlat
into
dec
pop
mov
fwait
stos
ret
mov
movs
fdivr
and
mov
jbe
outs
bound
imul
adc
int
movs
or
das
mov
jns
mov
iret
mov
xchg
jmp
jmp
fimul
xor
xlat
out
out
jne
mov
mov
pop
fisub
push
loopne
cmp
mov
cmc
jecxz
sbb
int
sahf
push
cmp
ds
push
mov
push
xchg
jmp
icebp
adc
out
test
xor
lea
xor
adc
pop
push
lahf
sub
and
addr16
pop
sbb
pop
mov
jmp
iret
fwait
das
jns
pop
jg
ins
clc
aam
fmul
cmp
inc
jmp
xchg
loop
out
add
loopne
out
stc
addr16
and
and
inc
iret
cdq
in
or
mov
outs
test
nop
into
jp
cmp
out
arpl
push
push
shl
add
(bad)
xchg
xlat
xchg
lods
mov
jno
jmp
(bad)
dec
or
out
push
adc
int
jno
lds
out
sub
add
xor
stc
repz
in
mov
les
xchg
and
jmp
je
jp
enter
int
pop
jo
rol
popf
enter
push
jae
mov
cmp
cld
xor
mov
test
push
inc
sahf
adc
xchg
xchg
aam
lds
ins
(bad)
frstor
nop
pop
(bad)
(bad)
in
push
add
jge
mov
das
cdq
nop
ret
mov
cli
mov
adc
xor
cmp
pusha
(bad)
je
sub
idiv
pop
das
(bad)
pop
cmp
mov
jecxz
sub
shl
std
jb
jo
sub
pop
bound
push
jbe
ja
mov
pop
int3
mov
push
test
dec
ins
sub
fmulp
sbb
push
movs
(bad)
rcr
or
xchg
mov
fdivr
in
fcom
iret
es
sbb
in
(bad)
xchg
fistp
or
inc
clc
cmp
dec
cmp
mov
stos
mov
add
ss
mov
inc
shr
scas
iret
shr
mov
and
ins
jo
mov
jmp
jb
int
enter
popf
inc
loopne
shr
pop
push
jae
mov
shl
shl
nop
xor
cmps
ins
retf
shl
inc
add
outs
adc
fcomp
jl
push
xchg
sbb
data16
inc
fcomp
shl
call
sub
xchg
stos
or
aaa
enter
int
ret
jg
mov
sub
sbb
mov
in
cld
jp
cmp
enter
mov
jecxz
in
mov
jbe
fs
xchg
in
enter
adc
jne
mov
or
dec
std
sub
and
jg
cmps
retf
add
cmps
cmc
pop
outs
push
mov
push
out
ja
mov
(bad)
xchg
loop
(bad)
mul
xchg
loopne
cwde
xchg
aam
je
(bad)
jbe
jp
mov
cmps
push
inc
cmp
int3
cmp
out
jmp
sbb
into
jle
cs
es
je
pusha
outs
lock
adc
sbb
pop
pop
test
daa
(bad)
pop
movs
sub
bound
cmc
jle
pop
sahf
mov
cmps
xor
sbb
icebp
cmp
dec
stc
shl
mov
imul
pop
xchg
cmp
or
int3
cli
inc
loopne
fbstp
les
stos
sbb
arpl
movs
ja
fs
cmp
mov
les
add
mov
es
ins
add
sbb
xchg
sbb
lock
jnp
imul
cwde
mov
or
pop
cs
mov
sahf
out
sub
and
jae
jle
inc
(bad)
rol
lock
movs
xchg
xor
arpl
mov
(bad)
pop
(bad)
dec
sbb
ins
inc
fdivr
or
jb
add
cmp
mov
push
sti
dec
ds
popf
sti
in
cli
sbb
movs
inc
sti
imul
push
or
mov
and
sbb
or
mov
mov
and
int
(bad)
mov
int3
ja
pop
add
sti
mov
lods
inc
push
stos
mov
inc
push
lea
icebp
mov
movs
push
push
(bad)
std
sbb
test
inc
jmp
and
shr
mov
fimul
inc
scas
pop
mov
repz
jg
xchg
jp
xchg
adc
fs
xchg
popf
or
jmp
popa
lea
sbb
sbb
out
cli
and
jmp
and
fwait
mov
mov
sub
jle
xchg
into
push
sbb
imul
xor
ss
stos
popf
and
out
scas
cmp
and
and
(bad)
cli
xor
inc
xlat
jecxz
hlt
scas
or
movs
jmp
jecxz
xchg
jno
add
in
and
and
nop
xor
inc
or
or
dec
movs
(bad)
icebp
aad
test
pop
xchg
inc
into
xchg
add
pop
mov
adc
(bad)
adc
leave
jns
xchg
lahf
pushf
ss
cmp
bnd
jno
push
mov
cwde
pop
rcl
xchg
shr
out
cld
push
jo
push
out
mov
push
dec
imul
and
stos
cs
les
cmp
movs
lea
inc
sbb
cmp
pushf
jp
or
fiadd
repz
inc
jp
xchg
pop
into
pop
clc
or
mov
ins
mov
mov
shr
inc
es
xor
pop
in
or
mov
test
jmp
lods
and
dec
les
inc
into
in
adc
mov
jno
mov
sbb
retf
dec
test
cmp
ins
ins
and
(bad)
jmp
push
stos
stos
dec
icebp
or
mov
stos
pop
and
jl
cmp
fcmove
mov
out
push
or
fbld
nop
shr
pop
scas
mov
pop
sub
adc
jle
icebp
stos
push
(bad)
xchg
pop
push
xchg
retfw
jmp
add
xchg
jecxz
test
xchg
sub
fsubr
push
jbe
out
(bad)
sar
cwde
push
sub
and
push
dec
pop
gs
sbb
sbb
stos
jmp
es
xchg
mov
adc
rol
add
inc
test
and
push
ficom
scas
nop
not
into
and
mov
out
scas
jge
lock
jns
(bad)
jns
pop
in
push
sbb
into
scas
lock
aas
xchg
mov
mov
loope
pusha
pop
and
imul
popf
pop
adc
js
std
adc
enter
push
sbb
mov
scas
in
aaa
loopne
adc
mov
pushf
daa
repnz
or
outs
aas
leave
aaa
xchg
idiv
retf
shl
(bad)
jns
int
and
out
jl
fsubr
aad
cwde
pop
iret
cmps
xlat
mov
mov
mov
mov
sub
jne
lea
ins
aas
and
xchg
ins
imul
lods
test
cwde
ins
fwait
pop
sub
xchg
xchg
setbe
fst
out
mov
and
dec
dec
push
ror
stos
retf
sub
(bad)
pop
sub
call
imul
clc
lods
dec
movs
imul
push
pop
inc
mov
cmc
loop
ins
fcomp
or
es
out
repz
sbb
fidiv
and
or
cwde
inc
popf
push
push
(bad)
xchg
fwait
xor
cmps
xchg
mov
jle
shl
(bad)
in
sub
mov
lds
push
xchg
and
and
xchg
movs
push
cmp
xlat
es
and
dec
int3
mov
push
outs
and
and
jb
retf
lock
jl
das
ds
ins
stc
jne
retf
mov
inc
shr
sub
std
test
shr
scas
data16
sti
xchg
mov
mov
sub
es
mov
clc
fst
jnp
pop
int3
adc
test
xlat
xor
adc
adc
pushf
js
dec
stc
mov
dec
(bad)
dec
cmp
pushf
sbb
pop
int3
mov
int
push
jge
inc
adc
xor
les
lods
lahf
std
cmps
sbb
imul
call
icebp
mov
push
sbb
mov
lahf
in
push
sub
dec
das
mov
sbb
or
repnz
inc
ja
gs
(bad)
jmp
xchg
jp
dec
clc
aas
out
sahf
mov
xlat
fldenv
ins
dec
jp
mov
sub
adc
fstp
arpl
mov
pop
icebp
jnp
pop
ret
xor
lea
lods
add
ret
dec
inc
lock
mov
outs
add
in
js
push
cmc
imul
mov
out
push
pushf
ja
jecxz
mov
cli
push
scas
cpuid
das
xchg
adc
jmp
sub
xchg
aaa
cs
fwait
mov
mov
add
xor
mov
adc
push
test
mov
adc
cmp
icebp
leave
fisubr
sub
push
pop
lods
in
xchg
shl
jge
mov
cs
stos
ficomp
outs
xor
imul
arpl
inc
or
movs
test
jae
jmp
out
pop
push
and
push
stos
mov
in
mov
sti
push
sbb
sub
cmp
pop
mov
scas
mov
add
push
or
jo
add
jo
xchg
jmp
into
movs
adc
das
inc
jno
sub
(bad)
pop
(bad)
loopne
pushf
xor
dec
dec
jmp
sub
into
outs
mov
inc
cwde
adc
xor
cmp
mov
outs
mov
daa
or
fst
xchg
ret
std
cld
pop
div
test
out
inc
mov
movs
mov
cdq
jo
cs
jecxz
outs
(bad)
pcmpeqb
jg
xchg
sub
jg
push
push
fimul
sbb
ds
loope
out
pop
jmp
movs
gs
and
push
test
(bad)
(bad)
jae
add
inc
pslld
hlt
sub
scas
les
dec
daa
xor
shl
cmp
fst
retf
push
sub
xchg
or
xor
sbb
add
mov
stc
fst
xor
ins
aad
xlat
add
adc
and
sbb
outs
xchg
fnstcw
aam
fs
sub
cmp
mov
mov
cmc
outs
bswap
in
ror
das
sub
fcom
add
sti
jmp
push
mov
in
fstp
retf
push
das
dec
shl
cdq
jb
pop
ja
pop
daa
scas
pop
enter
and
xchg
aas
sub
mov
call
xor
int3
jmp
mov
mov
shl
clts
mov
mov
cli
add
pop
lds
fwait
scas
push
xchg
cmp
jp
dec
aam
cdq
push
imul
cmp
inc
into
out
sub
push
xor
loope
jle
je
xchg
(bad)
sub
jmp
push
sbb
fxch
(bad)
inc
adc
sbb
or
mov
push
call
mov
(bad)
mov
adc
(bad)
out
fsub
std
aas
or
pop
ins
dec
mov
mov
out
or
mov
push
mov
and
fs
cmps
xor
xlat
call
inc
xor
ret
fcomi
sbb
pushf
push
scas
ret
in
leave
loop
add
jg
mov
test
sub
icebp
push
int
add
rol
adc
scas
ins
pop
fxch
aad
(bad)
les
jns
in
gs
mov
movs
add
cmp
loopne
iret
cdq
scas
sbb
xchg
sbb
ins
dec
xor
and
loopne
jb
ds
retf
call
fidiv
fsub
push
sub
push
in
test
(bad)
fstp
jmp
dec
jmp
adc
pop
js
mov
push
mov
popa
(bad)
push
push
pop
add
sub
xlat
jmp
xchg
dec
and
jmp
adc
xchg
bound
jmp
imul
leave
xchg
jnp
cmp
dec
enter
shl
cmc
add
pop
fcomip
mov
std
movs
xor
sbb
xchg
inc
sbb
(bad)
mov
rcl
les
idiv
outs
pop
xor
add
mov
in
loope
retf
and
push
in
push
frstor
push
lea
dec
sub
into
or
mov
pusha
sub
push
mov
or
stos
add
cmp
jbe
jmp
lods
mov
push
sub
(bad)
ss
sti
push
hlt
fisubr
mov
mov
pop
pop
dec
jl
jle
mov
or
into
sar
jns
sbb
popa
stc
jb
inc
mov
or
pop
ins
xlat
dec
(bad)
pusha
pop
add
push
dec
adc
es
pop
sbb
les
xchg
imul
fwait
jo
dec
xor
fbstp
(bad)
mov
or
(bad)
repnz
sbb
out
call
jecxz
dec
(bad)
jp
mov
je
or
mov
fild
add
stos
cmp
cmp
mov
jp
and
(bad)
mov
and
mov
dec
dec
jbe
xchg
cmp
push
jle
ror
jae
jnp
fs
pop
pop
shl
das
or
(bad)
cld
in
sub
dec
mov
test
popa
cmp
push
retf
mov
dec
repnz
sub
or
inc
pop
mov
sbb
xor
outs
fimul
xor
add
xor
sub
jb
add
int
cmps
jne
cmp
cmp
dec
fsubr
retf
ret
add
hlt
push
and
gs
icebp
xchg
sbb
in
and
aam
dec
jp
loop
mov
outs
stos
ds
jo
not
mov
mov
jle
pop
add
add
out
push
pushf
mov
ret
and
lods
cs
test
push
imul
inc
mov
js
fcomp
jne
push
lock
leave
aaa
pop
cmp
leave
cmp
jmp
mov
xlat
gs
in
xor
inc
add
and
cdq
clc
call
retf
aad
ror
xchg
or
(bad)
popa
push
test
push
neg
xor
stos
lds
aad
fcmove
adc
xor
xchg
sahf
sti
cli
or
rcr
xchg
iret
cld
push
mul
mov
mov
xor
mov
in
ss
xor
add
into
xchg
jnp
pop
adc
call
xchg
or
neg
sub
repnz
out
cs
jle
mov
das
mov
hlt
cmps
adc
test
xor
ja
inc
cmp
sbb
sbb
fnstenv
cli
xor
push
pop
push
add
not
mov
xor
inc
dec
push
pop
ret
repnz
in
mov
adc
pop
xchg
aad
mov
clc
jl
leave
jge
xor
jno
jbe
add
movs
(bad)
xchg
cmp
shr
in
dec
jns
sbb
pop
das
ja
fcomp
nop
push
sbb
clc
add
push
inc
push
call
fmul
int3
mov
xchg
int3
inc
ret
es
or
mov
ret
jae
dec
jb
add
icebp
add
mov
mov
push
nop
pusha
push
mov
cmps
pop
pop
pusha
mov
xchg
stos
cmp
int
sub
(bad)
push
fisubr
mov
retf
or
pop
jg
mov
(bad)
ret
jmp
dec
call
mov
sub
push
inc
std
cli
nop
int3
ins
std
or
pop
sub
aaa
jns
pop
add
and
ins
mov
addr16
xor
xor
mov
or
mov
popa
adc
xor
test
popf
les
and
jnp
cmp
push
mov
and
ins
push
(bad)
stos
push
cli
lods
mov
or
outs
lds
dec
jmp
in
cmp
add
pop
adc
test
aad
cmp
adc
jnp
sbb
enter
and
rcl
fstp
add
jl
or
pusha
cmp
jg
popa
inc
mov
frstor
push
jno
inc
adc
sbb
ja
mov
mov
adc
add
iret
retf
and
inc
aaa
aaa
and
xchg
jg
add
xchg
jb
sti
jbe
sub
jae
jecxz
repz
into
pushf
rol
sbb
cmp
add
cmpxchg
(bad)
ja
xor
in
aas
dec
jge
aad
fldenv
ficomp
add
imul
(bad)
sub
(bad)
mov
imul
test
(bad)
aaa
out
icebp
sbb
int3
aad
jmp
push
mov
xchg
lods
xchg
and
or
stc
mov
mov
call
push
dec
or
mov
(bad)
fstp
inc
xchg
cwde
loopne
dec
mov
jo
clc
pop
sbb
mov
mov
jae
mov
sbb
add
shl
and
mov
push
imul
xchg
aaa
jmp
jle
sti
aas
ins
mov
adc
sub
sbb
mov
clc
push
cmp
cmp
jl
inc
dec
xor
xchg
lea
not
retf
and
push
dec
loopne
or
mov
and
push
jnp
stos
mov
xchg
and
sub
in
sub
aam
addr16
idiv
frstor
sahf
aad
cs
sbb
imul
cmp
aas
push
pop
test
add
loop
push
cmp
dec
out
sub
mov
inc
cli
bound
ret
into
imul
(bad)
lea
ja
and
sub
psubusb
push
sub
fcom
mov
sub
and
lea
das
inc
dec
cmp
and
push
xchg
div
inc
lea
push
push
xor
adc
jmp
push
call
xchg
popa
dec
add
inc
push
shl
or
mov
call
add
add
stc
neg
inc
sahf
mov
outs
xchg
fcom
xchg
mov
dec
xchg
fucomi
push
hlt
and
ret
js
jl
xchg
mov
mov
jbe
or
xadd
add
into
and
hlt
mov
in
(bad)
scas
mov
icebp
out
retf
mov
mov
cmp
arpl
or
sbb
sbb
sbb
push
(bad)
sar
ret
in
repnz
dec
rcl
outs
pop
ja
je
out
mov
push
dec
nop
jns
aad
and
mov
lahf
inc
call
xor
cdq
in
mov
ret
div
sbb
fnstsw
sub
xor
mov
jmp
jp
mov
and
dec
test
(bad)
xchg
xchg
lock
loopne
push
scas
in
pop
lock
push
add
fiadd
loop
repnz
push
pop
sar
mov
sbb
or
or
jp
dec
fs
push
inc
push
cmc
out
rcr
mov
dec
popa
pop
scas
mov
inc
pop
push
push
sub
xlat
cmp
jns
mov
out
div
call
pop
in
mov
lahf
retf
jbe
rcl
inc
adc
lods
test
inc
push
cmp
mul
outs
pmulhw
in
jp
xor
pop
inc
cmp
fstp
sub
sti
imul
dec
gs
push
test
jmp
push
das
push
xor
(bad)
jle
stos
push
push
push
or
bnd
and
(bad)
inc
test
cdq
add
pop
inc
cdq
ret
mov
out
and
iret
xlat
pop
into
ins
stc
cmps
outs
mov
rcl
mov
pusha
stc
in
or
lahf
jns
(bad)
retf
sahf
mov
cmp
repz
ds
enter
bnd
js
push
repz
xchg
add
push
dec
push
pop
repnz
dec
mov
jecxz
lea
fnstcw
aad
retf
ja
test
mov
test
push
mov
inc
aad
out
fisttp
cli
xchg
xchg
dec
xlat
push
fild
mov
sti
adc
stos
out
loope
adc
xor
cmps
push
fdiv
sub
mov
xlat
add
mov
pop
call
mov
jbe
clc
sbb
or
imul
retf
fnsave
(bad)
test
loop
push
pop
int
mov
ins
adc
push
fdivrp
and
mov
(bad)
cmp
shl
rcl
pop
jp
jmp
add
call
lahf
inc
sbb
jl
call
sti
lock
test
mov
je
test
imul
gs
or
inc
ds
repnz
js
mov
fidiv
lea
bnd
dec
fiadd
adc
hlt
xchg
or
sub
leave
or
lea
in
jl
mov
es
fcomi
adc
lods
aas
loopne
cmp
ins
jge
dec
sar
aad
repnz
retf
push
neg
(bad)
xlat
ins
cmps
sbb
mov
add
ins
or
jns
xor
repz
sub
adc
loop
xor
mov
mov
or
lea
mov
leave
and
jb
mov
adc
repnz
frstpm(287
int3
push
mov
sub
je
xor
mov
pop
push
scas
lods
(bad)
imul
jns
mov
cwde
sbb
adc
das
jo
test
aam
adc
je
or
xchg
imul
fcomp
popa
jmp
ret
nop
cld
cwde
pop
fdiv
mov
sahf
retf
ins
mov
gs
jmp
and
enter
fidiv
pop
pusha
inc
cdq
inc
test
ficom
ficomp
xor
cs
outs
inc
out
jmp
pusha
xchg
adc
enter
std
cdq
mov
int3
sbb
jle
dec
sbb
adc
push
push
sbb
xchg
(bad)
les
mov
jmp
nop
popf
push
xor
mov
push
in
ret
jge
outs
movs
lods
cdq
xchg
jp
retf
sub
mov
pop
inc
(bad)
lea
jbe
ins
fistp
pop
popf
test
jne
fdiv
test
or
cmp
or
or
sbb
sbb
clc
mov
and
push
mov
loopne
xor
push
fstp
dec
aaa
jmp
mov
(bad)
cmp
ja
repz
or
(bad)
fimul
in
adc
std
loopne
push
mov
mov
fwait
stos
inc
xlat
loope
xchg
daa
lods
push
push
aas
or
popa
cdq
jb
jnp
dec
xor
lds
lea
push
lahf
pop
and
inc
push
mov
imul
jg
int3
js
jg
xor
dec
xor
nop
cs
mov
xchg
mov
adc
jnp
icebp
in
(bad)
pop
retf
mov
mov
clc
inc
adc
fidivr
sub
mov
(bad)
jmp
pushf
push
popa
and
and
push
rol
xchg
sub
fidivr
shr
sub
rcl
rcr
rol
xchg
ins
rcr
mov
test
gs
loop
lods
push
mov
mov
fsub
cdq
inc
(bad)
jmp
out
rol
iret
aaa
neg
les
jnp
jmp
daa
call
je
or
stos
and
cmc
in
cmp
out
mov
pop
and
dec
xchg
retf
retf
adc
js
movs
pusha
test
push
fisubr
xor
les
pop
inc
xchg
mov
pop
mov
xor
rcr
jb
push
pop
cmp
adc
imul
cmp
cmp
cmp
add
pop
jmp
push
mov
imul
ret
sub
jmp
push
dec
jo
cmp
add
mov
adc
stc
test
adc
jnp
test
retf
cmps
arpl
mov
adc
daa
ins
(bad)
gs
iret
mov
cmps
sbb
(bad)
jecxz
packuswb
(bad)
test
pop
mov
das
addr16
mov
(bad)
jno
jae
hlt
addr16
mov
hlt
jae
adc
dec
popf
or
movs
pop
jmp
push
cld
and
dec
addr16
and
lea
repnz
push
fistp
stos
or
shl
inc
nop
scas
or
cmp
gs
mov
sahf
push
movs
pop
cmp
mov
or
mov
or
lahf
add
dec
std
pop
rol
mov
xor
fsub
scas
popf
shl
imul
dec
int
xor
sti
inc
mov
cwde
sbb
inc
enter
adc
loope
inc
pop
ds
mov
sbb
out
mov
fisttp
jecxz
shl
call
std
retf
xchg
arpl
sti
clc
call
pop
lds
cmps
dec
(bad)
cs
ja
dec
out
jo
ds
ss
cli
mov
cmp
lds
mov
and
add
je
jp
lock
pop
dec
int
sar
clc
inc
call
sub
mov
inc
dec
in
cmp
xor
test
sub
cmps
aas
push
dec
dec
ins
mov
pop
daa
sub
pop
cwde
mov
xchg
or
cs
out
mov
jp
movs
scas
cmp
add
sbb
jmp
or
xor
call
retf
mov
shr
popa
fdiv
mov
inc
mov
or
cmps
clc
mov
dec
mov
and
or
pusha
fsub
jl
add
jae
pop
pop
sbb
repz
pusha
pop
lahf
daa
jp
jl
mov
lock
jnp
jnp
rcl
jge
fs
popa
shl
push
xchg
frstpm(287
push
fst
stc
es
sahf
and
jb
lock
xchg
pushf
scas
cmps
sub
fidiv
pop
std
fwait
ja
xor
jmp
mov
aas
fs
inc
pop
jle
cmp
mov
cmp
mov
pop
aaa
cmps
cld
and
sub
popf
xchg
jnp
cmps
out
leave
xchg
jmp
fwait
lahf
cli
inc
sar
imul
test
lock
mov
stc
or
sbb
pop
fmul
xchg
sbb
cli
xor
vprotq
mov
mov
aaa
mov
inc
test
mov
int3
mov
sbb
aam
movs
push
aam
sbb
adc
mov
dec
mov
and
push
pop
dec
jmp
or
ffreep
cmovne
jp
ja
adc
mov
sar
or
gs
bound
mov
mov
inc
call
sbb
xor
cs
jb
out
pop
or
cmp
shl
loope
pop
xchg
xchg
push
jle
sbb
stos
mov
std
sub
mov
jb
popa
dec
mov
mov
mov
into
clc
mov
cld
inc
ss
mov
outs
xor
fsubr
and
pop
jmp
mov
mov
stos
mov
sub
mov
jns
add
clc
xor
sahf
jne
(bad)
data16
sub
mov
add
and
std
pop
fisubr
pop
adc
mov
mov
bound
ds
(bad)
jle
sti
fdiv
mov
in
out
mov
out
sbb
adc
cmp
js
das
pop
mov
xlat
xor
mov
fst
and
pop
shl
fnstenv
je
cli
(bad)
test
adc
xor
or
in
and
jne
or
mov
aas
sbb
dec
mov
lock
je
xchg
and
mov
and
cs
inc
push
push
sub
cld
test
sbb
clc
sbb
fnstsw
repz
dec
cwde
dec
sbb
shr
mov
dec
sbb
sbb
ja
scas
jg
mov
push
push
cdq
dec
mov
add
aam
sub
xchg
xor
sbb
stc
clc
outs
(bad)
and
dec
and
push
sub
(bad)
in
push
and
lahf
mov
cmp
es
ja
lock
dec
stos
add
jmp
aam
mov
pop
sub
xchg
fdivr
pushf
imul
add
pop
sbb
jge
mov
mov
pop
es
jp
xor
sbb
int
cmp
sub
(bad)
(bad)
sub
xchg
imul
xor
out
mov
xor
mov
jne
pushf
xchg
adc
(bad)
push
push
or
out
out
mov
out
cmp
xchg
cwde
mov
jo
cmp
push
adc
test
loop
jns
(bad)
push
mov
out
and
mov
adc
call
cs
test
or
popf
add
push
pop
inc
outs
imul
daa
push
rol
cwde
bswap
mov
cmp
cli
pop
rcr
test
(bad)
inc
ss
pop
das
or
mov
ins
xor
or
neg
cmp
push
test
mov
xchg
movs
into
mov
outs
(bad)
cli
mov
sub
int3
daa
fmul
and
and
or
popa
jb
push
xchg
cmp
inc
xor
xchg
js
xchg
stc
out
cmps
push
pusha
sbb
pop
lds
ins
jl
xchg
cmc
repnz
(bad)
cdq
add
cmc
adc
mov
(bad)
not
mov
and
scas
sbb
imul
jle
xchg
and
xchg
mov
ret
xchg
(bad)
push
inc
cmp
fwait
lods
and
pop
loop
or
pop
out
xchg
mov
arpl
fbld
sbb
mov
test
xor
jmp
pop
retf
sub
ret
ret
mov
or
push
cmp
cmps
mov
and
cmp
inc
cwde
mov
xor
cmc
nop
push
cdq
movs
xchg
or
jecxz
gs
enter
push
push
jle
xor
adc
ret
and
test
lahf
call
fwait
mov
js
fs
aad
or
push
inc
jge
out
push
sar
popw
mov
jnp
pop
jae
pop
mov
push
cmp
das
shl
add
ds
cmp
frstor
jl
mov
cld
push
jb
mov
data16
push
lods
mov
mov
hlt
and
test
xchg
push
add
mov
jecxz
outs
add
call
cld
mov
pop
push
ja
xchg
push
sti
xchg
in
push
fdivr
push
hlt
inc
lock
inc
inc
les
int
and
jl
mov
iret
int3
std
jae
mov
sbb
rol
mov
sti
test
xchg
add
scas
xchg
aam
ss
scas
mov
dec
fwait
and
pop
fwait
cmp
clc
fstp
fist
das
ret
xchg
mov
mov
push
push
fcomp
call
dec
arpl
mov
cs
rcr
push
or
cmp
pop
and
xor
cmp
sub
mul
mov
inc
test
xlat
sub
lds
int3
movs
inc
mov
cmps
lds
mov
call
jmp
adc
jp
repz
dec
pop
call
adc
cmp
and
or
jo
sub
je
sbb
sub
cmp
(bad)
and
pop
pusha
ja
cmp
jne
jecxz
movs
mov
test
mov
gs
sbb
jmp
imul
aas
outs
xchg
ins
dec
jno
jne
mov
jp
call
mov
ins
lock
lahf
aaa
popf
in
mov
icebp
test
adc
in
cmp
and
in
rcl
adc
xlat
fcomp
cmp
mov
shl
sub
in
fs
xchg
jo
push
mov
sbb
loope
stos
or
inc
lahf
imul
dec
push
sub
test
sbb
sbb
repnz
std
out
into
or
fisttp
or
sti
pop
mov
scas
fiadd
pusha
push
jl
jne
add
test
jl
popf
pop
add
or
mov
(bad)
xchg
xchg
xchg
xchg
push
movs
into
out
inc
cmp
cmps
aam
scas
or
mov
lods
jle
outs
ins
out
call
mov
mov
sub
cmp
pop
dec
push
sub
mov
adc
retf
jecxz
sbb
and
pop
sbb
pop
sbb
or
sbb
lock
pop
xchg
into
arpl
jmp
ins
cmc
push
xchg
fst
mov
sub
jo
ins
mov
ja
jmp
mov
jge
inc
movs
into
mov
imul
lahf
cmp
test
cmp
fld
add
test
sbb
and
mov
imul
add
add
cwde
imul
cmp
retf
out
sub
outs
imul
sahf
dec
inc
sub
jnp
(bad)
xchg
sti
mov
add
mov
es
inc
or
fxtract
and
popf
inc
pop
inc
and
sub
and
ret
sub
jp
in
out
in
int
xor
hlt
(bad)
pop
push
out
xchg
lods
jg
mov
or
aas
dec
push
aad
mov
fistp
dec
sub
jb
into
rol
jmp
pop
or
lahf
mov
fcom
xchg
fdiv
sub
mov
push
es
movs
jle
cdq
fstp
fldenv
into
add
gs
ja
(bad)
dec
bound
and
addr16
jne
mov
out
cmp
lods
aaa
mov
and
xchg
lock
icebp
(bad)
jp
das
xchg
(bad)
cmp
loopne
and
inc
(bad)
fs
leave
sbb
xor
jns
adc
push
enter
cmps
aaa
dec
push
add
mov
jl
and
jae
shl
(bad)
fs
jecxz
shr
data16
dec
jmp
xchg
dec
(bad)
sub
cmp
pop
cli
retw
repz
dec
pusha
popf
rcl
inc
dec
xchg
aas
push
xchg
push
nop
inc
jo
outs
call
push
inc
or
not
dec
movsx
sbb
mov
bound
push
fnstsw
dec
test
mov
jo
outs
in
mov
mov
icebp
cmp
call
icebp
arpl
nop
mov
sbb
fs
out
dec
das
mov
mov
cdq
dec
cmp
sbb
pop
xchg
pop
pop
mov
mov
cmc
sahf
mov
std
or
leave
int
xchg
push
jbe
(bad)
call
mov
repz
sar
xchg
xchg
and
sub
xor
cld
aas
pop
inc
pop
cmovp
add
or
push
mov
cwde
or
or
pop
adc
(bad)
or
int3
pushf
jp
xchg
imul
(bad)
aas
mov
xchg
or
fdiv
or
int3
jnp
test
inc
cdq
fidiv
push
xlat
push
cmp
jp
mov
into
cmp
fild
mov
lahf
in
jae
inc
mov
stos
in
jbe
and
or
sbb
call
or
lds
stc
mov
xor
add
adc
test
adc
or
adc
push
jle
fiadd
and
and
lock
scas
dec
mov
pop
es
dec
retf
enter
pop
(bad)
aad
outs
fist
rol
int3
sub
xchg
cmp
std
cmp
nop
mov
in
and
scas
mov
push
cmp
sahf
pushf
ins
lock
lock
sbb
inc
cld
cdq
rol
adc
pop
stos
aad
jle
rcl
push
fmul
mov
loopne
mov
pushf
mov
leave
cmp
loop
mov
retf
sbb
out
push
add
or
push
sub
cli
es
bound
cmp
sub
mov
pop
mov
xchg
add
gs
in
mov
leave
xchg
test
cmp
loop
js
pusha
icebp
aaa
mov
push
dec
xor
cmp
sbb
cmp
push
push
xlat
jl
rol
ret
in
outs
jne
pop
mov
and
fwait
mov
inc
jecxz
sbb
cmp
inc
js
pop
hlt
sub
sub
mov
mov
add
lods
cwde
hlt
in
xchg
fs
push
sti
xchg
out
mov
pop
les
mov
scas
sub
repnz
sub
rcl
daa
out
fs
mov
inc
imul
test
sub
outs
mov
arpl
jmp
pop
push
shr
lock
shl
scas
mov
fild
jl
cmps
into
sub
ds
jo
les
push
xor
(bad)
push
lods
adc
shl
mov
or
cdq
mov
fwait
add
add
sub
mov
or
ret
ss
js
xlat
mov
mov
shl
mov
into
int3
and
js
xchg
mov
jo
fcomp
xchg
or
xchg
lock
mul
pop
sub
sbb
and
push
mov
add
stos
mov
inc
icebp
mov
(bad)
(bad)
dec
jmp
or
(bad)
fistp
inc
aaa
pop
xor
ins
in
icebp
arpl
lods
or
sahf
sahf
lods
dec
inc
leave
and
inc
hlt
or
push
jbe
pop
jnp
xchg
(bad)
fcomp
sbb
inc
jne
fdivr
sbb
enter
inc
push
mov
pop
or
add
test
add
or
add
jmp
mov
sbb
mov
hlt
bswap
mov
or
adc
inc
in
lock
outs
adc
(bad)
push
test
mov
sub
xchg
(bad)
mov
mov
lock
shr
out
loop
aaa
jp
sar
push
xchg
inc
rcl
adc
outs
sar
add
scas
ins
rcl
sbb
pusha
popf
fdivr
xor
add
loopne
xchg
std
or
out
add
mov
jl
sbb
dec
mov
fstp
lahf
mov
cli
jp
outs
mov
iret
in
lds
mov
(bad)
xchg
rcr
adc
aam
ret
int
sar
sbb
lds
call
sbb
ins
pop
lock
mov
or
movs
push
xchg
jmp
mov
arpl
fs
and
pop
fisttp
adc
mov
xchg
ins
stos
pop
shl
cmp
aad
rcr
pop
enter
jbe
je
cmps
stos
frstor
repz
mov
push
(bad)
mov
xchg
pusha
mov
sar
inc
adc
sbb
cli
loop
aad
ret
aaa
imul
or
xchg
outs
neg
jne
sbb
fwait
or
mov
jl
or
inc
lds
test
fist
fidivr
push
retf
iret
out
mov
mov
retf
jno
div
lods
jmp
jmp
imul
mov
mov
psubb
ds
mov
and
mov
fnstsw
push
fmul
es
xchg
aam
jl
push
jnp
addr16
rcr
sub
out
jns
push
jbe
jbe
xlat
or
aad
mov
and
sbb
pop
and
pop
adc
push
int3
mov
dec
fdivr
mov
les
pop
adc
data16
jbe
aad
sub
cli
jns
cmp
aas
shl
shl
and
xchg
inc
pop
push
sub
hlt
and
(bad)
xor
cmp
lods
xor
jae
imul
je
retf
fild
jg
mov
cld
cmp
retf
popf
std
test
push
xor
lea
xchg
scas
int3
mov
adc
or
mov
mov
jmp
(bad)
ds
std
mov
in
lods
jne
mov
cld
int3
and
push
sar
xchg
push
test
adc
into
aam
aas
(bad)
pop
into
into
jo
jne
dec
push
shr
jb
jle
stc
jg
xchg
ret
shl
xor
fwait
lds
ror
ffree
rcr
add
and
dec
inc
and
cmp
lods
sub
pop
jb
xor
mov
retf
jge
mov
sub
mov
add
arpl
mov
push
xchg
repnz
jg
dec
movs
aad
xor
jnp
xor
popa
xchg
addr16
leave
shl
cmp
stos
dec
test
sbb
icebp
outs
aad
movs
jb
imul
sub
and
out
jno
cs
cli
test
fisub
push
mov
jl
and
and
mov
cmp
jle
jecxz
shl
call
enter
jb
adc
imul
movs
xor
adc
loop
ins
xor
out
jnp
push
leave
mov
(bad)
jae
scas
out
lock
mov
pop
dec
or
dec
test
mov
mov
xor
scas
inc
dec
je
out
jecxz
in
jmp
push
das
push
push
pop
mov
dec
sbb
jbe
pop
rcl
cmp
dec
or
out
push
(bad)
jl
dec
sbb
cmp
cs
aas
sar
shl
or
popa
cmp
aam
loope
adc
xor
sub
retf
call
or
or
push
mov
inc
(bad)
fistp
bound
jb
in
les
dec
mov
aam
jg
xchg
mov
nop
call
cmp
mov
mov
bound
dec
add
mov
fmul
adc
jne
mov
lods
movs
cmp
push
dec
mov
ficom
outs
or
int3
mov
xor
div
sti
cdq
loope
sbb
mov
call
stc
push
mov
cmp
inc
xchg
das
mov
ror
imul
mov
shr
or
imul
or
or
dec
lds
inc
dec
lds
xchg
pop
sahf
rol
inc
(bad)
test
fld
movs
cmp
daa
sub
daa
inc
xchg
xchg
dec
aad
mov
call
inc
ret
push
xchg
dec
xchg
je
rol
in
lahf
rcr
add
inc
push
mov
xor
aad
test
les
add
mov
mov
fidiv
sub
es
cmps
cmp
retf
sub
outs
dec
sbb
mov
adc
jae
and
push
mov
clc
and
mov
fstp
jbe
dec
mov
dec
sbb
sti
movs
frndint
add
sub
jns
fild
stc
imul
out
add
mov
push
mov
(bad)
out
mov
movs
jge
or
in
ret
jo
pop
ja
mov
mov
push
(bad)
fwait
xchg
and
and
sbb
add
movs
js
jl
jo
daa
cmps
ja
dec
addr16
in
cmps
fmul
in
mov
mov
jb
pop
das
in
cmc
jae
fmulp
mov
sub
dec
and
ins
xchg
and
nop
out
jbe
push
jo
out
sbb
dec
fldcw
test
and
or
cmp
gs
ror
cmp
outs
test
int
inc
pop
mov
repz
popa
mov
jno
push
stos
ds
sbb
push
loop
xchg
cmp
xchg
mov
stos
ins
dec
mov
add
daa
mov
call
jmp
cmp
jmp
les
jnp
ins
adc
pop
lods
ret
call
rcl
pop
lds
scas
arpl
mov
push
iret
gs
add
(bad)
sbb
stc
mov
mov
fmul
nop
push
(bad)
sub
in
or
clc
(bad)
push
retf
or
push
(bad)
fdivrp
out
cmp
mov
cmp
or
dec
sub
inc
bound
out
in
shl
sub
hlt
imul
hlt
mov
es
pop
push
mov
cdq
test
test
out
push
in
out
es
ja
and
inc
das
sub
push
jne
and
jns
push
mov
push
push
enter
(bad)
mov
xor
sub
dec
add
inc
dec
inc
mov
xchg
out
dec
push
pop
push
mov
push
or
ficomp
pop
aaa
jmp
sbb
stos
push
loopne
pop
jl
jb
loop
jl
stos
test
retf
add
outs
add
mov
cs
lea
shl
mov
and
xlat
sbb
xor
push
adc
shl
outs
xor
ret
jbe
les
out
mov
xchg
jbe
ja
jb
cld
(bad)
push
mov
mov
xor
ja
test
in
mov
sub
jmp
(bad)
and
dec
sub
xor
xchg
clc
neg
cmp
out
sub
lahf
inc
sub
in
fild
cdq
ins
cmp
inc
je
dec
repz
imul
push
xchg
jg
loopne
neg
shl
and
xlat
cmp
mov
sahf
sbb
cmp
adc
cmp
dec
add
and
addr16
mov
cmp
je
pop
or
and
dec
test
inc
inc
adc
adc
mov
stos
ja
aas
xor
aaa
test
mov
xchg
clc
pop
mov
sub
xor
mov
arpl
in
adc
std
jp
inc
aad
jbe
mov
jl
inc
ss
sahf
loopne
test
cmp
add
mov
mov
sub
dec
and
mov
fucomip
jge
add
mov
inc
in
adc
xchg
mov
sar
cwde
inc
jp
icebp
aas
mov
daa
cmp
aaa
ror
inc
push
not
jge
push
call
ret
loopne
xor
cmps
(bad)
inc
sbb
pop
icebp
jmp
mov
lahf
loop
push
mov
fist
out
sbb
fidivr
scas
jecxz
neg
scas
sbb
push
bnd
sub
inc
rol
shl
adc
sub
call
and
test
fwait
and
fmul
rcl
int
jnp
jmp
xor
dec
out
push
lea
dec
sbb
scas
inc
jb
ds
jmp
inc
pop
mov
js
and
mov
sub
or
jns
xor
push
mov
pop
in
retf
pop
inc
shl
jg
and
loopne
clc
cmp
aam
pushf
cmc
ja
fnstsw
xor
loop
mov
xor
test
adc
push
pushf
fisubr
ficom
jle
outs
cli
sahf
je
adc
idiv
pop
lahf
popa
jge
jae
mov
fidiv
gs
pop
mov
push
cmps
mov
cmps
cmps
add
mov
push
cmp
and
mov
int3
retf
jle
int3
xor
pusha
ror
push
mov
(bad)
out
sahf
imul
xchg
imul
jbe
cmovae
imul
push
mov
pop
push
out
push
sub
jmp
lea
inc
mov
jne
nop
mov
add
nop
clc
push
pop
test
in
sub
mov
retf
jno
enter
fucom
neg
push
fld
ret
(bad)
ins
xchg
add
mov
movs
jp
cld
aad
in
loope
adc
xor
pop
pop
pop
movs
adc
mov
xor
icebp
adc
or
leave
dec
lds
(bad)
pop
sub
xor
inc
mov
push
sub
xchg
add
jb
mov
pop
mov
jno
mov
int3
cmp
fxch
jl
test
cmps
test
pop
xor
rcl
xor
ror
nop
ret
mov
ficomp
adc
mov
add
call
out
mov
scas
test
adc
cmp
mov
push
inc
push
lea
sahf
mov
loopne
mov
dec
ret
fdivr
xor
fistp
mov
mov
in
push
push
sub
das
push
dec
inc
retf
fisubr
fdiv
dec
loope
sub
dec
loop
test
in
jmp
inc
popa
add
sub
cs
fsub
mov
fimul
mov
jmp
dec
add
into
iret
mov
sti
jmp
cdq
out
adc
dec
fcom
sub
xor
bnd
int
scas
xchg
das
sahf
clc
retf
or
push
test
jp
mov
sbb
add
pop
aam
or
push
xchg
mov
or
sbb
mov
inc
or
cmps
ss
xchg
cmps
xchg
jge
xor
jno
test
or
and
les
push
and
icebp
pop
into
inc
(bad)
imul
add
xchg
jbe
xlat
daa
es
add
mov
push
test
(bad)
leave
pop
fcom
or
jg
aas
inc
retf
pusha
arpl
in
sub
je
pop
clc
jne
dec
mov
jmp
fldenv
or
ret
shl
jg
pushf
pop
jge
sbb
cmc
movs
popf
inc
mov
adc
inc
push
outs
mov
cli
mov
arpl
jecxz
xlat
cld
cs
test
mov
cmp
and
movs
inc
fldcw
jmp
sub
cmps
and
sub
jno
ss
stc
add
sbb
sahf
out
pop
pop
pushf
imul
or
cld
fcmovb
inc
in
dec
dec
or
push
into
push
cmc
mov
xor
xchg
xor
mov
mov
popf
jbe
xchg
leave
aas
pop
lods
sbb
cmp
dec
dec
xor
data16
js
add
mov
bound
(bad)
xor
mov
sti
retf
pop
or
mov
sti
repnz
rcl
and
mov
mov
leave
inc
(bad)
scas
pusha
aas
inc
mov
dec
sub
movs
and
xor
push
mov
repnz
outs
jae
pop
jge
jno
sbb
xchg
and
(bad)
sub
push
adc
push
mov
paddsw
xor
adc
in
lock
cmp
cld
test
xchg
shl
shl
sbb
lock
or
push
psubw
enter
je
movs
cdq
into
call
xor
pushf
pop
pop
shl
cmp
out
rcl
das
cmp
pop
frstor
pusha
idiv
outs
pushf
mov
cld
(bad)
cmp
sbb
retf
dec
mov
out
mov
sbb
out
lods
loop
mov
mov
push
aaa
push
jp
add
dec
cli
(bad)
lods
test
push
les
add
mov
dec
retf
cmp
sub
into
outs
fdivr
test
aas
mov
loope
dec
mov
(bad)
pop
arpl
sahf
sub
and
js
fldl2e
fdivp
xor
xchg
loopne
hlt
dec
jge
xlat
loope
dec
jo
mov
xchg
xor
sbb
adc
or
push
or
pop
mov
inc
fld
cli
inc
sbb
add
mov
mov
inc
test
push
movs
jo
dec
inc
mov
mov
fdiv
je
lock
xchg
sbb
aad
push
(bad)
push
xor
call
ja
mov
jb
fs
adc
mov
push
test
cli
test
sbb
sub
push
data16
scas
xor
xchg
mov
mov
push
je
jbe
or
pusha
cmp
jmp
adc
jne
or
adc
lock
stos
call
sbb
jg
inc
icebp
sub
cmps
jo
push
mov
sar
xchg
adc
(bad)
mov
sub
int3
or
jae
mov
xchg
sti
jmp
cmp
jne
sbb
add
ins
adc
jno
cdq
test
ja
ja
in
jne
addr16
out
pop
mov
pop
pop
mov
call
sbb
ss
xor
arpl
adc
nop
stc
or
or
into
mov
nop
cmp
pop
retf
mov
xchg
cmp
js
div
jmp
shl
(bad)
inc
jae
rol
push
and
test
fisttp
xchg
xchg
fnstcw
scas
es
and
push
call
or
pop
pop
je
sub
pop
test
adc
mov
test
push
push
or
inc
xchg
mov
sbb
pusha
mov
push
into
outs
and
or
in
and
loope
inc
ins
pop
addr16
cmps
push
aad
xor
mov
out
xlat
mov
lds
jo
ins
pop
cmps
mov
fidiv
or
inc
jno
xchg
data16
inc
pushf
fucom
sar
movs
repnz
mov
mov
inc
inc
cmps
xchg
cmc
sub
inc
js
data16
cmp
sbb
lods
hlt
cmp
(bad)
sub
mov
loope
add
add
(bad)
or
cli
retf
sub
pop
xor
outs
inc
xchg
pop
popf
in
mov
in
rcr
ficom
std
mov
icebp
push
retf
jmp
push
sbb
jmp
sub
outs
and
pop
repnz
xchg
jb
outs
add
into
stc
ss
sub
mov
ins
push
push
or
cmp
inc
fmul
test
dec
sbb
sar
test
inc
adc
hlt
scas
out
imul
mov
test
jbe
sbb
mov
(bad)
and
mov
jg
or
mov
scas
jp
js
dec
pop
repnz
(bad)
lahf
out
jb
cmp
or
les
test
movs
cli
cmp
mov
push
pop
mov
xchg
or
add
mov
add
mov
cmps
sub
push
adc
dec
out
stos
call
mov
sbb
(bad)
sub
popf
xor
inc
adc
shl
push
nop
jecxz
retf
sub
mov
ins
sub
adc
mov
shr
cld
lea
mov
pop
fwait
lods
ins
xchg
jb
jbe
mov
iret
lds
inc
pop
mov
dec
lahf
cmp
fidivr
add
or
jp
je
jnp
cdq
in
call
test
out
pop
sbb
or
rcr
loop
mov
pop
loope
inc
jb
sub
xor
mov
mov
scas
add
add
jmp
mov
lock
mov
(bad)
loope
inc
mov
es
test
call
imul
sub
xchg
popf
outs
add
outs
in
ins
les
fisubr
cmp
dec
xlat
aad
fs
out
loopne
rcl
cmp
lods
addr16
sbb
mov
movs
retf
ja
dec
push
retf
fstp
je
cmp
repnz
cmc
pop
sbb
mov
pop
push
scas
pushf
aad
pop
add
or
xchg
and
repnz
into
mov
jle
cs
pop
inc
dec
(bad)
(bad)
mov
(bad)
sbb
cli
js
cmps
inc
xor
lahf
lea
push
in
sar
mov
fistp
ss
adc
sbb
rcl
push
(bad)
inc
outs
cmp
or
add
mov
push
shr
icebp
stc
push
jl
xchg
mov
jno
jl
hlt
push
popf
aas
sbb
and
push
rcl
adc
push
sub
loope
(bad)
mov
arpl
xchg
sub
adc
addr16
xor
add
loopne
xchg
scas
retf
hlt
fcomp
push
xchg
adc
scas
push
xchg
jae
cld
xor
cwde
ror
mov
lods
inc
daa
and
mov
add
mov
push
sub
aas
and
push
jmp
lahf
mov
sahf
loop
ds
mov
gs
sbb
out
mov
test
(bad)
cmc
jmp
cmp
rcl
stos
pop
addr16
cmc
ss
mov
test
mov
in
cmp
sub
or
cmp
ja
pushf
idiv
les
xchg
xor
xor
(bad)
jecxz
cs
(bad)
xor
pop
dec
in
out
inc
cmp
jb
outs
mov
mov
aam
push
scas
movs
dec
jae
fadd
sbb
pop
cs
push
jb
sbb
aaa
or
les
xchg
and
sub
inc
imul
sub
enter
cwde
pushf
mov
inc
push
sub
(bad)
das
dec
retf
(bad)
add
aam
ss
iret
sbb
cmps
adc
xchg
mov
jae
sar
adc
rcl
xchg
lahf
add
ret
int
loop
shl
dec
cmc
cmps
mov
pop
cwde
cmp
mov
push
pop
fst
outs
mov
mov
xchg
ltr
pop
je
loop
aaa
add
retf
icebp
outs
ficomp
out
mov
xlat
xor
rol
bnd
loop
mov
outs
jo
sub
push
sbb
fmul
mov
loope
test
outs
mov
push
stos
repnz
in
mov
sub
outs
ja
adc
cld
out
retf
cmc
push
jle
leave
pop
jbe
retf
or
add
mov
mov
(bad)
outs
mov
pop
push
xchg
push
ror
fst
lods
arpl
push
pop
in
mov
push
or
jae
xor
mov
xchg
pop
retf
pop
push
dec
fdivr
fs
xor
cli
xchg
jns
arpl
xor
inc
(bad)
inc
pop
ror
repz
mov
gs
mov
gs
push
xor
cmc
call
jle
(bad)
jbe
adc
test
push
push
inc
xchg
cmp
cli
bound
shr
sar
or
sbb
sbb
xor
mov
mov
cld
test
popf
jnp
add
ret
add
jo
jmp
dec
cmp
mov
fsubr
mov
dec
(bad)
cmc
gs
call
cmp
je
push
dec
clc
mov
(bad)
bound
rcr
test
dec
adc
xor
mov
sbb
icebp
push
cmps
sub
cmp
inc
shr
mov
(bad)
mov
adc
mov
dec
hlt
hlt
inc
jmp
adc
sbb
ret
js
ja
fwait
sub
and
lahf
das
pcmpeqd
shl
and
and
xor
test
outs
adc
mov
xchg
sub
movs
sar
mov
mov
pushf
cmp
xchg
push
sub
js
mov
sbb
mov
cmp
scas
inc
fucomi
cli
mov
rcr
jmp
jecxz
out
push
mov
mov
ret
sub
rol
xchg
outs
repnz
push
loope
bound
pusha
popf
jae
imul
xchg
dec
pop
shr
xchg
in
jno
cmp
fs
das
shl
add
jle
sub
pop
push
cmp
adc
or
rcr
cmps
inc
dec
sbb
fldenv
out
and
ss
pop
sar
in
outs
rcr
pop
dec
sti
lds
cmp
push
xor
loope
cld
adc
inc
mov
ds
outs
jmp
mov
xchg
mov
movs
pop
fdivr
ror
les
mov
(bad)
daa
inc
mov
aaa
fsubr
cmc
sub
inc
ret
mov
or
add
push
out
call
call
test
repz
lods
mov
das
push
jmp
into
xchg
out
cmp
cmps
cmp
ja
dec
shl
push
push
fistp
or
push
mov
cs
adc
mov
sub
lahf
jl
popf
xchg
int
inc
scas
movs
data16
mov
out
fldenv
and
inc
add
xor
stc
(bad)
jae
dec
mov
xchg
add
movs
xor
xchg
mov
hlt
loope
test
pop
in
lea
push
imul
pop
inc
xchg
add
cmp
mov
pop
mov
ror
dec
xchg
repnz
outs
outs
mov
icebp
clc
shr
sub
or
call
cld
lods
mul
test
call
xor
cdq
lahf
mov
xchg
fsub
in
rol
and
test
inc
inc
(bad)
in
xchg
jo
test
lahf
ret
jne
xor
jbe
(bad)
popf
cmps
retf
jge
cwde
jns
cmp
shl
daa
lock
mov
aam
fmulp
loopne
push
mov
dec
xchg
push
es
push
repz
mov
mov
push
push
popa
adc
mov
pop
ss
add
push
dec
sub
jo
add
add
or
xchg
xlat
(bad)
push
sub
mov
es
pop
or
mov
dec
add
int3
lods
inc
in
call
out
push
ins
fnstenv
imul
cli
dec
std
or
popaw
fs
dec
push
mov
and
add
xor
xchg
pop
shr
ja
cmp
dec
dec
jg
scas
push
mov
(bad)
mov
scas
movs
cmps
cmp
jecxz
arpl
xlat
push
inc
addr16
mov
cmp
cmp
mov
dec
rcr
div
or
mov
fwait
inc
repz
daa
in
mov
das
sbb
mov
inc
test
sub
cmp
gs
adc
push
push
mov
cmc
jl
loope
mov
outs
cwde
rol
outs
or
sbb
test
retf
mov
mov
out
sbb
jg
adc
add
lods
or
pop
popf
mov
push
adc
js
arpl
push
cmc
inc
xchg
push
sahf
in
fs
add
inc
xor
cdq
sbb
loopne
dec
loop
xor
push
sbb
jo
mov
mov
mov
mov
push
das
ins
or
sbb
adc
(bad)
sbb
push
sbb
jo
sahf
xchg
mov
mov
mov
fwait
sub
iret
ss
in
ret
das
(bad)
sub
cmp
sub
pop
dec
stos
iret
pushf
and
sahf
xchg
xchg
je
inc
sbb
popf
sub
popa
dec
sub
mov
sub
jecxz
xor
(bad)
or
fs
leave
sub
cmc
adc
cld
mov
cwde
cmp
inc
(bad)
or
fucomp
pop
fadd
or
cmps
stc
clc
popa
fst
jmp
imul
inc
jno
mov
ret
jbe
cmps
retf
xlat
(bad)
stc
ja
ret
sub
pmaddwd
je
outs
sub
jp
xor
or
fs
(bad)
ss
sub
sub
xchg
mov
jns
js
data16
ds
ror
or
(bad)
sbb
aaa
into
fsubr
ins
or
mov
arpl
hlt
addr16
xchg
icebp
out
push
iret
stos
out
pop
mov
shr
ins
add
mov
cld
dec
push
js
xor
cmc
push
call
add
sub
sub
inc
add
mov
ret
pop
outs
iret
outs
pop
jbe
push
cmp
mov
lahf
mov
inc
in
stos
cdq
addr16
shl
fcom
sbb
sub
stos
sti
dec
jle
cs
inc
rcl
inc
aam
out
mov
xchg
add
stos
jbe
push
xchg
std
mov
xchg
add
popf
jnp
cmps
cdq
enter
ret
jo
dec
pand
sub
movs
mov
cmps
pop
cli
pop
loopne
sti
rol
push
sbb
imul
data16
mov
dec
xor
mov
sub
fild
mov
bound
mov
pushf
add
add
mov
out
fmulp
inc
sub
scas
inc
push
fs
jnp
inc
movs
xlat
mov
cmp
sbb
std
(bad)
xlat
jns
jl
xchg
popf
and
shl
data16
add
cmps
iret
outs
jmp
xchg
stos
rcl
add
mov
cmp
test
mov
mov
lods
div
jl
mov
arpl
xor
inc
stc
cmp
mov
or
or
cmp
xchg
in
or
cs
mov
push
mov
rol
pop
les
call
xchg
add
sub
and
ret
sbb
js
and
fwait
loopne
or
dec
push
dec
jo
mov
leave
and
out
fbstp
xchg
jmp
imul
add
dec
push
mov
sahf
xchg
fstp
ret
pop
stc
add
ins
fadd
push
ins
xchg
es
sti
xor
(bad)
fistp
dec
sbb
in
repz
add
retf
sti
ja
pop
sub
(bad)
pop
lahf
push
push
test
dec
mov
arpl
add
cmp
loop
push
push
dec
jne
stos
cli
retf
mov
mov
pop
push
(bad)
pop
int
xchg
push
pop
sbb
push
sbb
popf
stos
and
popa
xchg
mov
cmps
mov
jp
ret
xor
lahf
xor
mov
div
dec
xchg
sbb
mov
add
pusha
or
or
push
cwde
cmps
shl
(bad)
loope
sahf
pusha
sub
call
and
aam
xchg
xor
(bad)
movs
int
xor
fwait
sub
or
inc
shl
out
lods
adc
pushf
je
jae
leave
scas
or
sbb
dec
sbb
in
jae
sub
std
and
mov
sti
push
push
lea
push
ret
sub
call
jns
push
out
inc
cli
hlt
or
test
cmp
mov
mov
fsubr
ja
hlt
xchg
dec
sahf
out
mov
mov
adc
and
outs
fimul
mov
jo
mov
movs
div
cli
cmp
bound
xchg
push
inc
mov
xchg
jge
and
push
lahf
jbe
mov
mov
mov
sub
dec
fadd
jp
and
aad
imul
or
popa
in
daa
aas
xchg
sub
iret
aas
ins
xor
push
adc
jmp
jge
pop
and
cld
ror
mov
cmps
hlt
mov
iret
xchg
cmp
mov
aaa
test
pop
dec
mov
out
dec
cmps
mov
xor
adc
rcl
fcomp
nop
add
push
leave
mov
pop
push
gs
inc
pop
repz
dec
int3
movs
mov
cmp
xchg
div
mov
lods
arpl
add
hlt
jp
imul
cld
movs
lods
mov
in
ins
or
stos
retf
cmp
dec
push
fld
or
jecxz
mov
ins
stos
inc
fisubr
inc
sbb
push
sub
js
add
adc
jne
or
xor
repz
test
es
loopne
popf
iret
or
movs
ds
sub
sub
cs
xchg
scas
lods
mov
inc
ret
(bad)
ja
mov
mov
xchg
adc
dec
mov
and
(bad)
sti
ror
ret
jl
stos
mov
rcr
xchg
adc
or
or
fcmovbe
push
cmp
add
fstp
in
test
rcr
out
loop
call
pop
inc
int3
sbb
sub
addr16
sub
xor
mov
movs
pop
inc
mov
ret
sbb
stos
(bad)
rcl
aad
mov
js
push
div
xor
aad
cmp
push
sbb
add
jns
movs
les
ins
mov
jmp
or
ins
iret
dec
(bad)
pop
jp
repnz
test
dec
imul
push
aaa
jno
out
cmp
rol
or
jp
scas
rcr
(bad)
push
xor
fisttp
popa
mov
call
test
pop
loop
or
es
sar
mov
mov
clc
(bad)
push
cmps
js
adc
xchg
or
je
mov
cs
cmc
sbb
jns
(bad)
or
(bad)
xor
xor
sbb
adc
fistp
repz
xor
jp
ja
mov
sbb
xor
xchg
or
add
std
mov
mul
xchg
xor
cmp
cwde
fistp
adc
sub
out
not
in
jne
add
out
(bad)
mov
pop
movs
pop
test
jnp
imul
int
fadd
outs
cmp
add
ins
sub
repz
call
int
daa
pop
test
push
push
push
inc
jp
fdivr
jl
inc
stos
ficomp
xor
cs
adc
sti
bound
push
ja
ds
pushf
ins
adc
nop
test
addr16
mov
call
mov
mov
test
xor
ins
or
bswap
(bad)
dec
xchg
sub
pop
fbstp
adc
fwait
cli
in
xor
lahf
mov
sub
dec
jg
add
sub
or
aad
adc
fld
jle
cmp
call
dec
ds
and
mov
ins
call
sub
in
pop
fld
push
ja
pop
bound
cli
jge
mov
and
inc
(bad)
jle
cmp
movs
sub
dec
mov
add
pop
or
jne
and
or
jb
pop
dec
fs
xor
push
push
repnz
jbe
and
ret
mov
dec
jmp
xchg
mov
inc
retf
fstp
int
dec
mov
pop
or
push
in
(bad)
hlt
cmc
pop
lods
sbb
lahf
adc
xor
pop
sar
mov
(bad)
test
add
(bad)
adc
call
jl
in
or
cli
or
and
aaa
adc
mov
dec
cmps
xchg
test
mov
dec
xor
push
in
dec
mov
add
sub
mov
test
pusha
cwde
fmul
(bad)
rol
imul
jne
mov
arpl
cld
mov
mov
jmp
test
stc
xchg
jnp
dec
int
out
shr
xchg
sar
stc
leave
mov
ret
push
push
outs
pop
xor
out
mov
add
jmp
jp
cmc
cmps
jne
adc
xlat
mov
retf
nop
push
sbb
push
cmp
dec
das
test
fisttp
xor
sub
add
fsub
leave
cld
stos
lods
mov
cdq
xchg
add
shl
es
addr16
enter
mov
cwde
dec
adc
push
cmp
push
(bad)
in
and
add
cld
cmp
dec
outs
(bad)
ins
xor
call
jmp
push
add
imul
xchg
jmp
jno
xor
stos
jno
mov
jbe
sub
out
and
loope
lea
mov
popa
fmul
int3
(bad)
adc
xor
bound
fistp
(bad)
mov
push
cmp
clc
lock
or
enter
mov
mov
inc
push
in
icebp
jg
jge
cdq
shl
into
mov
pop
mov
xor
ret
cs
mov
outs
jp
cmp
pushf
scas
out
dec
(bad)
cmp
sbb
cdq
das
mov
xchg
mov
iret
mov
call
jp
es
imul
cli
sub
in
or
sub
jne
in
lods
leave
mov
xchg
inc
jbe
dec
jg
sub
call
loopne
xor
mov
sar
shl
(bad)
pop
(bad)
cwde
inc
frstor
and
xor
push
push
pop
pop
jno
add
mov
int3
and
mov
les
cmc
and
xchg
pop
dec
pop
pushf
cmp
adc
jmp
xchg
inc
inc
lahf
packsswb
je
jge
or
jo
pop
mov
sub
mov
es
mov
jne
xchg
inc
call
pop
adc
in
push
movs
sar
dec
fisub
dec
xor
sub
je
sub
(bad)
mov
push
movs
xor
add
pop
mov
and
das
add
xor
in
mov
stos
repz
lahf
fimul
inc
xchg
imul
ret
cs
push
and
fstp
stos
mov
inc
imul
cdq
jg
inc
(bad)
in
adc
js
pushf
adc
test
cmp
out
shl
jns
xchg
fwait
mov
pop
cmps
add
mov
pushf
aam
fistp
out
adc
push
dec
inc
pop
enter
pop
retf
movs
sbb
in
jle
dec
xor
add
(bad)
into
fnstenv
arpl
loop
jl
push
jl
cmps
ss
mov
sar
int3
enter
ror
pop
je
into
push
mov
lods
pusha
pop
(bad)
gs
cmp
cmp
cmp
cld
mov
mov
jmp
repnz
mov
lds
test
sub
fnstsw
xor
shl
sbb
js
inc
clc
scas
sub
lds
add
xchg
jp
movs
inc
pop
inc
das
test
aam
int
dec
sub
mov
ret
jne
inc
call
cmps
aam
adc
mov
(bad)
(bad)
lock
xchg
lock
out
add
int3
into
ret
push
ins
mov
or
cmp
sub
cld
and
jns
jmp
jb
ret
rcr
ss
nop
add
mov
stos
js
inc
repz
popa
jmp
mov
bound
ja
and
xor
shl
inc
inc
fimul
and
repz
out
fidivr
or
add
jno
add
add
stos
mov
div
push
cmp
in
das
inc
test
fdivr
hlt
mov
push
jmp
xchg
sbb
fld
adc
cmp
fimul
cmp
outs
setno
addr16
push
ret
dec
int
je
jno
pop
cmp
mov
aad
aaa
fs
mov
push
call
jg
jo
js
cmps
sub
push
pop
cmps
sub
scas
xchg
inc
std
fisttp
test
jecxz
and
sbb
fsubr
push
cmps
addr16
inc
clc
dec
imul
cmp
call
push
mov
out
pushf
push
fidiv
loopne
mov
popf
test
fild
xor
data16
inc
sub
jge
(bad)
lods
dec
pop
sub
inc
jl
call
and
fsubr
aaa
push
movs
inc
rcl
add
cli
dec
movlps
scas
pop
repnz
cmps
push
pop
ds
enter
cli
inc
mov
or
or
adc
inc
lds
fistp
sbb
test
fmul
in
jno
inc
mov
sub
jge
mov
call
aas
xor
aaa
mov
fucom
cmp
cmp
idiv
push
out
push
inc
popf
out
cld
xchg
push
add
mov
inc
mov
pop
jb
adc
sar
loope
dec
pop
popf
call
mov
mov
mov
sub
lahf
adc
lahf
fcmovne
cmps
and
lds
or
fisubr
add
sub
xchg
lahf
dec
sbb
jg
jg
push
push
jno
and
mov
or
mov
push
inc
cmps
jo
inc
fsubp
test
ret
dec
into
push
inc
mov
lds
jno
cs
and
adc
xor
int3
fucomip
dec
pop
fcomp
ds
call
fbld
xchg
mov
jge
mov
pop
mov
fld
sbb
fwait
sahf
fidiv
mov
sahf
test
add
inc
popa
mov
inc
fs
mov
sbb
jl
jle
popf
imul
xor
ret
lods
or
mov
cwde
mov
div
ss
xchg
jnp
cld
repnz
sub
(bad)
adc
adc
in
outs
aaa
and
dec
and
add
dec
clc
sbb
sbb
xchg
jl
adc
xchg
xlat
mov
mov
test
push
mov
sub
push
mov
mov
cwde
lahf
push
or
scas
dec
pop
stos
xor
out
dec
(bad)
lock
sar
sub
cld
jecxz
icebp
adc
ret
xor
or
fstp
xchg
xchg
jo
sbb
movs
inc
loop
test
ins
inc
adc
pop
test
rcl
jo
mov
xchg
mov
cmp
shl
or
adc
fs
push
fcomi
jge
adc
in
bound
or
xor
dec
push
push
xor
loopne
push
loop
pop
cmp
xchg
and
fbld
lea
jmp
dec
or
sub
loop
dec
mov
aam
xchg
data16
push
dec
jp
into
loope
sub
jle
shl
mov
stc
adc
(bad)
bound
(bad)
adc
inc
mov
out
push
push
xor
mov
pusha
pop
lods
in
inc
sub
les
dec
mov
jnp
xlat
repz
adc
mov
mov
inc
xchg
(bad)
out
add
push
rcr
xchg
cmp
in
popf
pop
imul
std
dec
fmulp
outs
mov
and
into
aad
shl
pop
sub
mov
lock
sar
pop
cmps
out
xchg
lods
daa
push
push
dec
out
cmp
or
push
rcl
mov
ins
or
or
dec
repnz
mov
int
ror
adc
jl
push
mov
clc
cmp
xchg
(bad)
push
pop
ret
shl
pop
cs
bound
jp
add
push
inc
add
sbb
and
dec
push
xchg
dec
jle
retf
jecxz
daa
inc
cmps
pusha
inc
mov
mov
push
dec
sahf
sbb
int3
xchg
inc
and
mov
pop
dec
adc
std
inc
stos
movs
mov
sub
loopne
outs
sbb
or
mov
hlt
fild
movs
xor
sbb
movs
xchg
test
and
dec
jb
outs
jmp
push
pop
dec
or
xchg
js
not
outs
jo
mov
mov
fst
ret
je
out
push
(bad)
rol
jne
or
repz
in
js
lahf
adc
dec
ja
hlt
rol
popf
sub
push
les
lods
mov
cmp
adc
stc
xchg
cs
(bad)
jge
aam
stos
add
(bad)
mov
ret
pop
xchg
ret
outs
push
adc
xor
cmps
ss
mov
popw
jp
(bad)
mov
sub
dec
iret
push
in
push
or
push
or
xchg
jo
pop
cmp
push
cmps
retf
xchg
dec
sbb
xlat
fwait
int3
xchg
popa
movs
ret
dec
rol
and
int
loope
xor
xor
or
out
je
sti
ds
inc
pop
mov
in
retf
jnp
stos
iret
movs
adc
fimul
fisub
push
jmp
imul
clc
pop
dec
icebp
push
call
cmp
(bad)
jle
adc
retf
xchg
ror
icebp
(bad)
pop
or
mov
mov
or
mov
neg
fcmovne
stos
jle
dec
test
or
in
jle
add
ja
je
jo
out
fld
jmp
fistp
adc
cmp
call
and
dec
dec
mov
pusha
in
lods
lods
sbb
sbb
mov
jbe
test
stc
cmp
sbb
test
ret
and
jo
loop
retf
sbb
xchg
std
mov
pop
cs
cmp
sar
mov
gs
call
inc
pop
das
sub
or
fcom
push
or
mov
shl
dec
mov
imul
in
ret
daa
cmp
add
xor
cmp
or
and
sub
out
dec
push
popf
cmp
retf
jns
and
aad
cs
sub
sbb
add
inc
js
lock
push
test
fld
fstp
retf
ja
sbb
mov
push
test
inc
repz
mov
pop
out
jmp
pop
cmc
xchg
in
sbb
mov
jp
or
jmp
mov
es
sbb
ffreep
mov
leave
leave
mov
xor
jmp
jmp
(bad)
mov
(bad)
jno
(bad)
cld
cwde
jle
mov
jno
lock
dec
in
cmc
cmp
xchg
and
repz
and
lahf
xchg
ror
lea
ds
idiv
clc
(bad)
repnz
cmps
lds
(bad)
aam
rcr
cmp
xor
pop
push
scas
dec
aas
xor
jl
fdivr
clc
mov
or
add
fs
movs
retf
jne
fnsave
mov
jmp
das
dec
lahf
add
mov
pop
fld
and
es
dec
leave
push
(bad)
sar
xchg
pop
push
sbb
pusha
jl
mov
(bad)
lea
and
mov
pop
sbb
sub
adc
in
push
pop
and
fst
test
sub
pop
and
fsubr
push
inc
call
add
mov
je
push
cmc
jno
lea
movs
push
fsubr
popa
fbstp
bound
dec
in
ror
call
in
ins
pop
adc
stos
in
(bad)
sbb
xor
or
in
cld
ffreep
cdq
test
mov
add
fldenv
pop
ret
xchg
or
and
aam
ss
sbb
push
stos
or
je
mov
shr
stos
out
ret
xor
shr
fisttp
cli
sub
pop
ficom
fwait
data16
mov
jmp
mov
aaa
jecxz
loope
mov
test
adc
fisubr
dec
inc
repz
add
jg
aaa
push
loopne
(bad)
call
push
(bad)
jmp
aas
push
cwde
lods
inc
or
inc
push
push
cwde
jb
loope
lods
data16
test
adc
mov
xchg
cmp
in
xchg
movs
(bad)
mov
cld
mov
ds
in
aad
ss
(bad)
cmp
adc
jno
inc
out
(bad)
push
mov
stos
push
sub
mov
mov
pop
aam
out
(bad)
pop
push
std
jl
mov
push
inc
pop
cmp
xor
cld
mov
pop
stos
fsub
clc
(bad)
cmp
xchg
push
je
cdq
adc
dec
js
cmp
cmps
sub
fnstcw
push
adc
inc
mov
rol
lahf
mov
jnp
scas
int3
jae
push
inc
cmp
test
xor
push
ja
pop
leave
mov
fimul
sbb
dec
mov
fwait
mov
rcr
and
fisubr
sbb
aas
and
add
cmc
pop
popa
std
ins
lea
fld
ret
xor
pop
pop
stos
js
fimul
jnp
sbb
test
int3
ins
aam
sub
loopne
and
and
jb
push
imul
push
and
aaa
enter
popa
dec
dec
shl
aaa
ror
mov
pop
cmp
lds
pop
daa
jb
imul
jecxz
gs
fimul
call
cmp
mov
hlt
dec
fcom
xor
stos
mov
jbe
mov
jne
jb
jno
test
popa
leave
sbb
mov
dec
mov
jbe
inc
mov
mov
rcr
sub
jmp
lahf
or
lods
dec
sub
out
fnstenv
movs
retf
std
cmp
out
adc
xchg
cmps
sub
cmp
jl
pushf
inc
test
push
sub
mov
xchg
or
push
rcr
sub
das
cmp
jns
mov
xchg
out
fincstp
out
mov
in
dec
or
add
aad
push
mov
das
enter
movs
rcl
inc
xchg
sar
push
inc
sub
mov
cmc
loop
pop
popa
(bad)
nop
neg
or
aas
inc
pop
mov
or
push
call
les
arpl
mov
mov
inc
sbb
adc
fadd
leave
aas
sbb
push
into
rol
xchg
add
cmps
cmp
and
das
dec
sbb
adc
sub
or
gs
pop
pop
icebp
jmp
jno
mov
jl
add
rcl
cmp
jb
adc
mov
rol
hlt
xor
in
retf
xchg
test
(bad)
retf
cli
outs
loop
mov
mov
jne
daa
(bad)
sub
lds
add
icebp
popa
inc
pop
mov
xor
push
mov
mov
add
mov
mov
les
ja
lea
cmc
movs
(bad)
(bad)
inc
and
xchg
inc
mov
mov
aam
pop
in
(bad)
jmp
mov
call
movs
cmp
mov
or
mov
sahf
lea
hlt
jo
mov
pop
into
cmp
mov
lods
pop
xor
sbb
and
dec
push
jne
jmp
xchg
out
int3
addps
push
xchg
cmp
mov
popf
push
jecxz
lds
jmp
xor
fbld
xchg
repz
jbe
mov
inc
(bad)
(bad)
jno
les
movs
nop
inc
dec
add
loopne
cld
mov
push
xchg
jo
lds
scas
dec
mov
mov
mov
rol
mov
les
mov
sti
adc
repz
arpl
fidiv
mov
pushf
div
push
lahf
fwait
adc
ret
int
jmp
push
push
dec
fwait
jmp
sub
xchg
ret
movs
add
mov
aam
pop
pop
add
mov
mov
scas
cmps
iret
sub
cmp
push
sbb
pushf
(bad)
les
lock
ins
sbb
dec
mov
pop
mov
lock
mov
dec
adc
leave
add
dec
adc
je
sub
add
cmp
repnz
dec
mul
xchg
scas
and
dec
mov
adc
adc
inc
(bad)
(bad)
ds
push
cmp
les
je
dec
in
pop
loop
fst
push
push
out
mov
fs
mov
sahf
fdivp
loop
cmp
dec
icebp
cs
push
mov
sbb
adc
inc
mov
retf
push
adc
inc
ret
mov
icebp
rcl
aam
push
call
test
add
icebp
imul
(bad)
shl
push
push
pop
and
pusha
mov
inc
or
jecxz
cmp
and
ret
je
pusha
test
or
mov
mov
mov
aaa
cli
jae
or
dec
xchg
mov
and
cmps
test
add
mov
fsub
(bad)
es
pop
mov
out
dec
push
xor
repnz
cmp
pushw
adc
int
jmp
cmps
push
jge
fidivr
add
ret
mov
adc
loopne
or
mov
add
fsub
das
bound
enter
mov
mov
pop
or
int3
or
dec
sbb
out
push
xchg
ret
jno
imul
arpl
lods
aas
fist
sub
xchg
jg
rol
jmp
arpl
jb
and
faddp
fincstp
cmc
ins
lahf
outs
lahf
(bad)
jns
xor
cmp
mov
mov
ror
repnz
hlt
lods
fld
mov
cld
(bad)
cld
dec
repnz
mov
and
icebp
fstp
sahf
mov
cmp
cld
out
jne
gs
cmp
push
das
loopne
in
jge
cwde
cmc
and
dec
pop
adc
punpckldq
xor
mov
mov
mov
(bad)
fmul
jle
mov
outs
ja
addr16
pop
or
hlt
adc
es
movs
je
mov
xchg
push
push
inc
nop
loop
jo
out
cmp
int
xor
push
pop
xchg
int3
xor
push
std
mov
enter
dec
psubsb
push
ins
inc
mov
popa
cmp
jb
sbb
pop
mov
jg
es
xor
nop
dec
pop
mov
or
outs
rol
jg
or
pop
rcr
inc
fmul
nop
test
or
cmps
dec
rcl
sbb
pop
xor
push
rcl
cmp
inc
xchg
fimul
dec
xchg
push
scas
mov
cwde
ret
cdq
cli
sub
push
(bad)
lods
fcmovnu
ret
popa
sbb
adc
mov
push
repnz
push
and
arpl
rol
pushf
inc
dec
pusha
bound
popf
in
arpl
dec
aad
mov
mov
loope
xlat
mov
adc
mov
movs
push
mul
popf
jp
btr
xor
sbb
xchg
mov
push
xor
adc
aaa
fisttp
sub
inc
fdivp
jmp
sbb
movs
mov
xor
popa
fwait
mov
in
rcr
les
inc
in
jns
(bad)
(bad)
mov
cmc
sub
cmp
sub
mov
xor
xchg
retf
mov
sbb
push
add
outs
or
mov
and
sbb
xlat
mov
ins
or
and
sti
daa
lock
imul
(bad)
and
push
xchg
xchg
rcr
lock
in
dec
popa
xchg
mov
mov
enter
in
adc
sub
call
sub
xor
aas
pop
cmps
scas
inc
dec
(bad)
fnstenv
inc
pop
add
rcr
out
jno
mov
and
jbe
adc
(bad)
fistp
push
mov
pop
jae
out
push
xchg
sub
mov
mov
add
fcmovu
ins
pop
repz
inc
mov
jno
mov
push
hlt
cdq
fmul
mov
out
sbb
or
je
add
mov
sub
mov
(bad)
lods
cdq
lds
or
inc
push
jg
push
dec
shl
popf
in
sub
mov
mov
pop
dec
adc
ja
jbe
dec
out
add
and
stos
xor
and
inc
ficomp
adc
xchg
cdq
xchg
dec
or
cdq
xchg
(bad)
and
lods
fsubr
sbb
adc
loop
push
inc
mov
sti
jbe
pop
aas
inc
push
movs
cld
and
enter
cs
mov
icebp
add
(bad)
jl
fnstsw
lods
dec
inc
cmps
mov
(bad)
test
fldcw
lods
mov
dec
sar
pop
jae
lods
pusha
mov
popf
adc
out
daa
call
psrlq
(bad)
jl
aaa
popf
ds
mov
mov
shl
adc
mov
push
pop
add
xor
popa
jb
outs
sbb
clc
xor
jmp
and
mov
jp
mov
imul
add
fcmovbe
test
xchg
sbb
adc
rol
and
or
ret
std
cmp
pop
in
lds
xchg
in
cmc
pop
les
(bad)
jp
jo
rcl
inc
ins
dec
add
aaa
xchg
loop
dec
popf
push
mov
dec
lods
bound
adc
rcl
jecxz
je
(bad)
mov
pop
imul
into
jge
sub
popf
in
mov
xor
loop
jl
jle
cmp
sub
(bad)
iret
xor
out
cmps
add
ja
leave
js
sar
inc
daa
(bad)
call
dec
in
pop
not
out
mov
movs
pusha
inc
inc
sbb
clc
mov
daa
lds
and
inc
sbb
push
movs
or
sahf
xlat
jbe
sub
das
dec
stos
rcl
leave
in
mov
aas
xchg
sar
sbb
xor
add
pop
sbb
or
cmps
xchg
or
addr16
add
pop
cmc
jbe
inc
push
cmp
push
outs
xor
and
data16
and
push
retf
dec
pop
fs
and
pop
clc
add
pushf
add
add
rol
cli
mul
cmp
xchg
mov
xchg
(bad)
call
stos
dec
mov
cwde
adc
push
cmp
es
jns
dec
cmp
sar
xor
(bad)
adc
ret
cmp
test
pop
xchg
jne
and
mov
clc
test
fld
and
fs
mov
xchg
or
jmp
(bad)
pcmpeqw
pop
xchg
xor
xchg
in
mov
les
out
xchg
and
mov
pop
retf
sti
dec
mul
cmp
lods
jns
mov
mov
imul
mov
cmps
add
mov
iret
mov
dec
jno
and
cmps
and
or
inc
sbb
cmps
and
jnp
jge
enter
icebp
pop
jl
repnz
inc
popf
xor
stos
dec
sub
test
shl
sub
dec
rep
cmp
out
jmp
lods
das
pop
shr
push
(bad)
xor
xchg
jo
icebp
aaa
inc
pop
lock
stos
(bad)
imul
mov
(bad)
xchg
daa
adc
xor
push
mov
idiv
pusha
lock
or
add
aad
xchg
popf
mov
out
dec
and
jmp
pop
cli
ins
stc
jbe
jbe
mov
bound
fidivr
repz
lock
leave
jnp
rcl
pop
sub
cmps
shl
sub
pop
mov
mov
int
jp
movs
mov
outs
stos
int
inc
ds
mov
jb
mov
pusha
inc
add
pop
push
in
test
pop
inc
sub
sbb
mov
and
cwde
add
inc
ja
cdq
js
sahf
int3
iret
std
fidiv
sub
aad
adc
pop
xchg
outs
lea
out
in
and
inc
push
jecxz
data16
jb
push
loopne
pusha
adc
cwde
ret
pushf
sub
aam
aad
test
retf
lea
das
hlt
mov
fsubrp
sub
mov
jbe
jg
fiadd
loope
(bad)
mov
enter
and
pop
pop
retf
or
sub
(bad)
(bad)
(bad)
add
out
aad
pop
inc
xchg
mov
pop
scas
ret
loope
mov
cmp
loopne
mov
lea
js
cmc
fcmovu
imul
xchg
pop
lock
(bad)
aad
rcl
push
push
or
lods
std
xchg
push
cmp
cmps
sbb
enter
dec
lahf
xchg
add
pop
ins
lods
and
stos
cmp
dec
mov
enter
in
int3
inc
cmp
(bad)
sbb
add
jns
pusha
sbb
sub
es
push
inc
xor
push
pusha
movs
sbb
shl
arpl
cmp
jbe
hlt
add
sub
imul
add
daa
jb
mov
cwde
rcl
adc
xchg
cli
or
jg
mov
push
stos
stc
xor
rcl
repz
xlat
mov
adc
jmp
mov
pop
or
adc
xor
xor
ds
mov
call
(bad)
pop
and
inc
int3
test
inc
xor
fnstsw
mov
shr
jbe
jo
cmp
adc
(bad)
arpl
push
mov
shr
add
inc
pop
sub
mul
add
lock
imul
jbe
nop
dec
dec
data16
push
jg
push
sub
push
sbb
jl
add
add
mov
dec
or
pushf
scas
call
cmp
xchg
lods
or
or
mov
cdq
into
cld
ja
fimul
cmp
icebp
stos
push
addr16
int
popa
inc
pushf
(bad)
push
cs
inc
xor
add
enter
cmp
sbb
mov
sti
iret
pusha
pop
stc
int3
nop
retf
out
scas
ins
sahf
mov
and
(bad)
pop
mov
sbb
fisttp
test
jp
and
es
xchg
cmps
adc
jg
xchg
fmul
or
adc
add
aam
in
inc
out
dec
int3
inc
mov
push
mov
push
jp
enter
xchg
lods
mov
leave
mov
test
sub
xchg
mov
dec
daa
mov
call
xor
hlt
pop
retf
sbb
mov
mov
dec
popf
and
in
mov
pop
mov
xlat
push
pop
pop
add
popf
mov
cdq
mov
mov
jb
xchg
mov
daa
and
leave
icebp
lods
add
jmp
pusha
bound
xchg
sub
sti
ret
(bad)
rcr
ret
sti
dec
push
pop
or
int3
pop
jne
pop
add
aad
mov
sbb
out
gs
outs
add
(bad)
xor
cmp
popa
call
shr
dec
into
and
push
sbb
bound
or
jbe
call
sub
pop
or
js
hlt
mov
lds
push
nop
xchg
cmp
add
out
fndisi(8087
aam
mov
arpl
mov
clc
test
mov
push
add
mov
ss
(bad)
push
stos
and
jns
ror
retf
scas
test
outs
stos
jns
cld
cld
bound
jmp
imul
sahf
mov
(bad)
xor
xlat
cmp
std
add
jmp
pop
xor
and
push
retf
pop
inc
sahf
arpl
loope
mov
bound
arpl
ret
call
fld
xor
adc
add
cdq
into
add
aad
js
stos
es
pop
pop
int
inc
pop
sbb
cmps
dec
(bad)
jae
sub
(bad)
aas
clc
mov
mov
inc
pusha
test
out
out
cmc
dec
popa
or
and
clc
enter
sar
or
xor
mov
aaa
dec
(bad)
cmp
shr
sub
mov
inc
fist
test
mov
jne
das
jp
das
repnz
std
jl
mov
or
sub
inc
inc
loope
sbb
cs
out
dec
pop
and
cs
pop
ja
xor
dec
jge
pop
pop
fadd
push
cmp
cmps
outs
enter
das
add
jmp
mov
mov
and
mov
sub
ficomp
mov
push
frstor
iret
js
pop
xchg
pop
imul
(bad)
push
shl
inc
pushf
add
push
add
adc
jae
(bad)
and
pop
mov
bound
popf
mov
loope
mov
push
test
and
push
aas
test
aaa
imul
imul
sub
iret
scas
jp
lahf
pop
aas
loopne
outs
dec
or
stc
or
test
and
mov
(bad)
repnz
aas
add
(bad)
lock
cmc
sbb
int
inc
int3
scas
or
daa
sbb
popa
imul
shl
mov
mov
nop
mov
fst
aad
cdq
mov
fisttp
mov
push
jbe
inc
and
inc
jo
ja
mov
outs
sub
lods
xchg
out
gs
out
sub
jge
inc
cmp
cmps
dec
xor
push
push
or
ret
fisub
mov
mov
outs
pop
popa
cwde
ja
add
mov
inc
popa
outs
test
aaa
fs
je
movs
test
pop
adc
push
xor
imul
sbb
mov
adc
xor
or
inc
sub
push
inc
shr
inc
sub
sar
mov
sbb
add
arpl
shr
fbstp
daa
out
push
dec
mov
gs
call
xchg
cmp
cmp
fdiv
fwait
mov
add
xchg
lds
lea
inc
scas
sbb
mov
jb
mov
mov
(bad)
xchg
es
add
mov
daa
inc
adc
mov
xchg
xchg
fstp
mov
mov
xor
jns
fld
sbb
stc
and
repnz
jmp
xchg
mov
fs
movs
push
out
inc
xlat
adc
mov
add
xchg
out
or
push
inc
dec
popf
pop
jl
stos
xchg
fistp
aad
xor
jo
pop
lea
mov
xchg
lea
int3
in
dec
push
mov
loopne
jbe
mov
fnsave
push
sub
in
or
push
jmp
in
cwde
test
out
repnz
mov
das
fist
adc
add
fldcw
sbb
cmp
aam
adc
sub
movs
mov
icebp
cmp
shl
(bad)
int
dec
cmc
inc
pop
pop
ins
frstor
cmp
push
inc
repnz
mov
push
pop
cmps
je
in
jmp
mov
iret
jae
rcr
pop
cmp
push
mov
cmp
test
jecxz
jmp
inc
hlt
ret
(bad)
pop
sub
push
or
mov
inc
jmp
popa
jne
push
jo
push
sbb
aad
repz
repz
xchg
mov
scas
jle
iret
(bad)
cmp
imul
mov
lods
jp
in
(bad)
rcl
jns
imul
cmovae
retf
in
out
sbb
lea
sub
and
pop
retf
aaa
inc
lock
loope
out
sbb
and
loop
(bad)
int
pop
int3
pop
mov
in
ss
jmp
xchg
xchg
xchg
(bad)
out
push
xchg
push
mov
mov
push
sahf
(bad)
cmps
push
dec
(bad)
cmp
fbstp
adc
js
dec
(bad)
in
xchg
mov
jnp
lock
push
(bad)
cmp
rcl
int
dec
shl
enter
inc
inc
or
push
cwde
xor
stc
sub
fisttp
ins
clc
fwait
sub
mov
pop
adc
fnstenv
or
das
ss
cmp
jbe
clc
mov
cwde
pusha
ret
xchg
mov
fcom
mov
(bad)
xor
xchg
fist
hlt
cs
rcl
mov
push
sub
mov
mov
(bad)
sbb
pop
push
inc
mov
scas
xor
add
jge
ins
pop
inc
push
call
sub
push
mov
push
push
sbb
ror
hlt
jne
repz
push
idiv
test
xchg
iret
mov
xchg
mov
in
in
add
sbb
clc
(bad)
mov
retf
(bad)
pop
mov
xchg
dec
in
iret
outs
sub
fcom
data16
(bad)
jb
bound
push
add
shr
ret
push
lds
mov
xchg
inc
xchg
mov
bound
(bad)
lea
add
stc
xor
into
push
push
and
mov
ins
xchg
out
jmp
mov
xchg
dec
mov
and
arpl
aad
jecxz
(bad)
repz
pop
pop
and
mov
pop
into
out
dec
pop
xchg
xchg
dec
xchg
cmp
jo
sahf
cdq
(bad)
xor
jmp
imul
in
mov
cli
pop
or
mov
push
(bad)
shl
mov
aas
repnz
pop
inc
loop
sbb
pop
fsub
push
shl
sti
pushf
pop
leave
xchg
sbb
inc
mov
fistp
lahf
mov
jle
pop
mov
xchg
into
test
push
cmp
adc
push
movs
repz
pop
push
cmp
push
mov
fwait
sbb
pop
ja
push
fisttp
arpl
mov
repnz
out
out
movsx
shr
mov
iret
inc
jmp
aam
mov
mov
adc
in
in
xchg
retf
mov
cmp
test
aaa
xor
rcr
mov
shr
cmp
jg
arpl
pop
and
inc
hlt
adc
cmp
call
les
pop
mov
jmp
adc
in
xor
cmp
xchg
inc
mov
clc
enter
fs
cdq
retf
mov
cmp
jp
inc
addr16
iret
jo
ins
(bad)
lock
xor
cmc
and
pop
mov
cmp
cs
pop
hlt
inc
(bad)
push
aam
jp
or
outs
xchg
call
push
ret
loop
xchg
mov
in
or
shl
ds
fs
mov
into
sub
and
xchg
in
imul
sub
add
loopne
js
xor
sbb
nop
push
mov
pop
lods
jmp
cld
sbb
or
jne
xchg
imul
scas
test
add
add
mov
xchg
outs
cwde
xor
daa
jne
shl
dec
aaa
cdq
test
ret
jo
push
mov
mov
and
sub
sbb
inc
sub
push
jle
rep
adc
add
and
cwde
mov
shl
mov
jp
shl
and
lock
addr16
out
mov
xchg
(bad)
jns
inc
and
(bad)
push
mov
add
mov
cmp
sbb
ret
lahf
push
pop
aas
lods
mov
lods
xchg
outs
ret
dec
outs
add
dec
scas
xor
aam
or
sbb
les
jnp
call
lods
aad
loop
jo
(bad)
inc
mov
xor
or
movs
xor
shr
xor
inc
scas
and
xor
mov
ficom
mov
fbld
xchg
mov
xor
and
jne
aas
(bad)
into
adc
jge
pop
mov
sar
sahf
and
pusha
xchg
js
xchg
mov
mov
test
call
mov
and
mov
push
mov
lods
faddp
sbb
fchs
adc
pop
jle
nop/reserved
dec
cld
into
mov
mov
and
outs
movs
adc
dec
push
push
(bad)
fldcw
xor
retf
shl
dec
sub
sbb
xor
cwde
arpl
lahf
xchg
sahf
int
(bad)
test
call
in
pop
add
lea
mov
imul
nop
xlat
mov
lahf
setno
out
les
add
shl
mov
add
rcl
dec
icebp
jle
inc
leave
imul
loopne
cmp
test
daa
xlat
or
push
push
lock
and
test
addr16
jle
ss
inc
ret
sub
and
stos
loope
out
mov
cdq
mov
out
int3
mov
imul
pop
arpl
push
mov
mov
sub
xchg
pop
ss
inc
cdq
jmp
mov
lea
add
xlat
jl
fsub
xchg
ins
arpl
shr
pop
inc
add
fdiv
xchg
or
xchg
ins
xchg
cmp
or
push
and
xchg
in
sub
retf
scas
cwde
ss
cmp
xor
xchg
loope
pop
add
and
mov
adc
cmp
imul
push
pop
pop
stc
arpl
pop
loop
popf
rcr
jo
mov
inc
retf
lods
cmp
mov
(bad)
repnz
imul
scas
mov
hlt
cmp
popf
fstp
mov
out
data16
popf
cmp
scas
ret
push
leave
mov
out
gs
mov
and
pop
js
add
retf
popa
fld
inc
les
jmp
cld
jl
xor
push
pop
cmps
pop
fisub
loopne
pop
cmp
push
or
and
pop
cmc
or
(bad)
out
mov
in
loope
not
cmp
cmc
std
adc
mov
xchg
pushf
sbb
stc
sbb
dec
loopne
jns
enter
frstor
je
(bad)
jo
add
xlat
stos
cmp
mov
test
mov
cmp
mov
mov
add
xor
push
imul
jp
bound
xchg
jmp
jmp
cmp
mov
int
inc
add
sbb
adc
ds
add
call
mov
jbe
call
retf
and
fild
ja
(bad)
iret
xor
cld
cld
outs
push
loopne
cmp
inc
repnz
dec
sub
sbb
iret
and
mov
les
cld
mov
loopne
add
xor
push
add
pop
rol
xor
and
xor
test
dec
sahf
(bad)
cmc
or
js
mov
icebp
cmp
aam
sbb
stc
sti
mov
leave
add
pop
shl
mov
(bad)
out
not
dec
dec
sub
mov
push
aam
stos
call
push
repz
sub
popf
in
xchg
xor
dec
(bad)
mov
retf
and
ret
sbb
sbb
mov
dec
std
jns
iret
inc
or
das
pop
mov
sub
test
scas
or
inc
pop
ins
cmp
and
loop
repz
popf
cmp
push
stc
mov
and
test
test
mov
outs
ficomp
sbb
(bad)
push
or
or
loope
jne
in
push
fs
out
dec
lea
addr16
ret
mov
enter
mov
in
daa
icebp
pop
xor
mov
jl
ficom
inc
or
or
cmps
pop
dec
fwait
or
out
mov
inc
out
add
and
fsub
mov
pushf
sbb
cmp
neg
pop
cmp
jns
sahf
xor
or
xor
sbb
pop
dec
shl
shl
ss
fdivr
ret
mov
fist
add
xchg
idiv
ins
mov
push
rcl
hlt
xor
(bad)
mov
jns
or
gs
ds
sub
jmp
cmp
rcr
add
jl
jo
push
adc
sahf
out
in
rcr
call
aas
loope
add
mov
mov
jg
mov
inc
(bad)
jo
pop
idiv
and
mov
jnp
mov
retf
or
mov
push
jmp
aam
pop
mov
adc
sbb
cmc
mov
inc
or
and
jne
pop
stos
jmp
call
dec
fcomp
or
or
add
mov
jns
inc
mov
inc
movs
in
lea
jno
inc
scas
fcmovne
mov
sti
inc
es
fisub
and
fwait
stc
push
fisubr
test
scas
add
and
arpl
push
js
jp
mov
cmps
cmp
push
bound
sbb
push
sbb
add
mov
in
in
inc
mov
pusha
mov
sub
out
ror
repnz
mov
cmps
jl
scas
mov
xchg
shl
jmp
mov
stc
pop
hlt
movs
shr
js
repnz
pop
adc
adc
(bad)
int3
add
lahf
repnz
daa
test
jbe
add
or
inc
movs
pop
push
cmp
add
(bad)
stos
cmps
jmp
xlat
xchg
and
aas
(bad)
call
out
push
ret
test
shl
jnp
mov
(bad)
xor
mov
inc
adc
daa
in
in
sbb
and
pop
retf
cmp
sbb
out
das
sbb
fld
or
in
pop
pop
sub
cmps
mov
outs
pop
jg
inc
pop
inc
inc
inc
push
call
sub
or
arpl
aas
loopne
xchg
jnp
push
dec
jno
popf
pop
outs
out
xor
add
daa
icebp
retf
sub
pop
xor
repnz
mov
inc
repnz
cdq
sbb
call
int3
in
lods
bnd
jb
pushf
adc
jne
mov
jmp
loop
ja
xchg
in
and
cmp
arpl
mov
cld
sbb
inc
shl
dec
mov
and
cmp
push
test
rcl
test
(bad)
fadd
fiadd
outs
adc
leave
adc
retf
dec
xchg
nop
push
popf
scas
cmp
and
sbb
cdq
add
test
sub
ror
in
inc
and
dec
ja
fwait
mov
ds
shl
paddusb
fnstsw
ins
mov
cdq
mov
xor
rcl
arpl
dec
mov
pop
shl
dec
mov
or
in
lea
xlat
inc
push
and
mov
out
rol
sub
xchg
addr16
clc
rcl
ror
xchg
fst
adc
adc
mov
mov
pop
sub
mov
fcom
aaa
aad
pushf
or
or
fld
sbb
dec
fwait
and
bnd
adc
jne
add
repz
cmp
push
dec
mov
les
cmps
in
ror
inc
inc
mov
jo
outs
cmps
into
push
jge
or
shl
add
jmp
inc
ds
ficomp
add
shr
pop
add
dec
shr
repnz
stos
push
iret
inc
ret
adc
sub
movs
jne
lahf
jge
push
push
pop
pop
jnp
loopne
jmp
int3
fdivr
sub
xchg
sbb
(bad)
shr
in
dec
pop
or
adc
sti
jecxz
xchg
jl
fistp
jecxz
sub
pop
fnstcw
xchg
dec
sbb
jno
adc
cmp
ret
fld
cmc
ja
mov
adc
mov
jne
int3
mov
sbb
test
mov
test
mov
or
cmp
repnz
jmp
jge
cs
das
xchg
cmp
adc
and
pop
mov
xor
ss
jbe
cmps
xor
stc
mov
jmp
fst
gs
imul
dec
cwde
lahf
push
icebp
jmp
shr
inc
fwait
std
sub
xchg
fst
sbb
loope
mov
mov
scas
aad
mov
aam
jmp
pop
rcl
mov
pop
lock
(bad)
sbb
pusha
push
retf
ror
mov
mov
add
mov
imul
jmp
jnp
mov
push
mov
jns
sub
mov
outs
in
sbb
jmp
sbb
inc
dec
mov
inc
cmp
cwde
inc
cld
and
mov
inc
outs
push
mov
in
push
dec
push
jne
test
loop
fbld
gs
sbb
add
inc
xchg
mov
adc
jo
gs
sub
xor
stc
mov
jns
adc
or
int
add
(bad)
test
adc
mov
aad
or
(bad)
inc
ins
pop
ret
rcl
pop
int3
fcmovb
ret
pushf
aad
(bad)
fmul
and
pop
pop
ret
jnp
push
pop
imul
movs
into
xchg
sub
dec
mov
daa
fsub
in
les
and
(bad)
and
cmp
add
or
or
cmp
adc
inc
sub
mov
test
push
sbb
aas
xchg
mov
inc
imul
fidivr
push
pop
fcom
mov
push
lods
dec
iret
ret
rcr
sub
es
bound
jo
adc
or
mov
push
ret
das
sub
xor
lock
and
push
(bad)
aas
fdivr
out
outs
pop
ret
test
inc
repz
sbb
fidivr
push
mov
jp
mov
scas
push
sbb
mov
xchg
jmp
mov
mov
cli
ins
inc
ret
jne
clc
pop
sub
sti
loop
xchg
iret
cmp
rcl
cs
adc
iret
inc
aad
pop
push
rcr
inc
stos
dec
mov
fiadd
add
sub
mov
xor
repz
sar
je
adc
(bad)
mov
push
enter
mov
pop
test
adc
sbb
leave
in
jo
sbb
sub
lea
je
cwde
lea
imul
das
push
mov
xchg
enter
jge
push
pop
mov
pop
sbb
call
push
sbb
and
nop
shr
shl
mov
jl
std
ret
data16
jbe
test
xor
or
push
(bad)
pop
adc
mov
xor
push
dec
push
mov
sahf
mov
jns
call
dec
inc
jae
(bad)
sub
into
pop
ror
sbb
pop
sbb
dec
inc
jbe
call
jbe
cmp
add
push
cmp
jnp
xchg
stc
aas
xchg
lds
sbb
aaa
fist
jno
popf
mov
mov
inc
mov
sahf
jne
mov
ret
cmps
outs
test
je
pop
mov
aaa
rcr
cdq
mov
jae
sbb
ror
inc
int3
out
jl
imul
leave
outs
push
cmp
and
pop
mul
dec
xor
int3
xchg
adc
ins
aam
xchg
lock
add
imul
pop
sub
jbe
jb
je
cwde
fdiv
mov
icebp
pop
frstor
scas
out
out
xchg
cs
jmp
jp
movs
add
gs
shr
loopne
ret
lods
jmp
add
jmp
jno
retf
stc
out
jg
push
pop
inc
jb
lods
cmc
(bad)
fmul
cwde
les
imul
dec
add
out
mov
fsub
cmp
shl
daa
mov
sub
scas
jmp
pop
ss
and
mov
pop
mov
leave
test
ret
dec
out
pushf
mov
sbb
(bad)
out
daa
std
les
push
xchg
loop
outs
adc
jne
mov
fistp
jo
jne
imul
gs
sub
mov
in
push
and
jb
xchg
inc
mov
(bad)
push
fstp
xchg
and
mov
test
dec
jge
xlat
iret
xchg
ins
ds
(bad)
jge
scas
sti
pop
clc
repz
(bad)
jnp
xchg
xchg
aaa
std
aaa
cmp
mov
imul
sub
loop
mov
push
sbb
(bad)
cs
pop
jne
adc
ds
sbb
xor
and
movs
test
data16
mov
hlt
mov
clc
adc
xchg
push
jg
inc
inc
jge
in
pusha
jle
test
dec
sbb
iret
outs
(bad)
cmps
add
or
push
add
inc
mov
test
sub
sar
xchg
mov
mov
inc
sti
adc
dec
and
mov
jns
or
js
lods
(bad)
ins
add
cmps
sahf
mov
pop
and
jmp
gs
test
stos
jmp
mov
inc
loop
outs
hlt
push
jl
add
mov
dec
add
stos
dec
mov
lds
add
sub
adc
mov
dec
out
mov
lds
dec
sub
and
mov
pop
fcomp
mov
imul
in
sub
stos
pslld
cld
sub
jl
or
leave
sub
mov
fisubr
cmps
pop
in
sahf
mov
adc
nop
out
aas
mov
outs
adc
jecxz
add
ja
cmp
outs
push
mov
std
pop
jbe
sub
mov
push
call
push
(bad)
repz
mov
loopne
in
iret
adc
inc
dec
aad
or
adc
or
fwait
xchg
xor
or
xchg
mov
mov
xor
sub
rcl
push
shr
adc
out
ret
stc
ret
imul
inc
or
mov
adc
stos
fldpi
aad
inc
mov
and
repz
sbb
ret
and
bswap
fdivr
inc
dec
xchg
or
mov
out
adc
add
outs
push
cmp
mov
shr
icebp
push
jae
out
pop
ret
jnp
in
lods
out
cmp
icebp
mov
bound
xchg
pop
ins
push
adc
js
push
in
shr
fadd
cmps
pop
jmp
push
ret
(bad)
out
push
pop
mov
sti
pop
sar
loope
int3
lods
lods
les
rcl
mov
sub
inc
(bad)
call
shr
mov
test
and
add
cmp
jnp
jecxz
jg
xor
mov
je
je
sti
push
aaa
fisubr
pop
push
xor
jle
mov
out
rol
loope
jno
cdq
cmp
test
cmps
mov
test
dec
pop
inc
push
movs
adc
data16
(bad)
xor
call
retf
int
imul
clc
lods
xchg
leave
mov
mov
lea
fdivr
dec
or
outs
imul
inc
arpl
sub
xor
fdivr
clc
pop
adc
stc
mov
xchg
hlt
pop
add
mov
add
je
jl
(bad)
sbb
jl
push
mov
xchg
fidiv
mov
sbb
cli
or
out
(bad)
and
icebp
fisttp
jb
daa
add
mov
mov
in
(bad)
inc
jecxz
cdq
inc
mov
mov
leave
aas
mov
fld
mov
mov
in
pop
lahf
or
pop
jle
imul
arpl
out
int3
scas
(bad)
hlt
jg
mov
ds
cwde
jnp
push
jne
pop
lock
iret
mov
in
jl
es
cmp
data16
cmc
fdiv
sbb
sub
daa
lds
push
ins
mov
mov
imul
mov
mov
cs
push
jo
pop
fdivr
inc
mov
add
jns
ins
das
push
retf
push
pop
and
pop
and
cwde
mov
mov
icebp
pop
and
stos
adc
ds
mov
adc
push
push
dec
repnz
imul
inc
(bad)
cwde
push
test
push
cwde
sbb
pusha
add
in
pop
xor
push
xchg
sub
jmp
sub
in
iret
cmc
xchg
movs
test
push
sub
loope
dec
or
test
sub
or
inc
pop
jne
(bad)
imul
and
mov
sub
push
movs
cdq
jp
sub
rcr
jl
push
or
call
xor
cmp
inc
sbb
js
mov
scas
ins
lods
or
cmps
mov
mov
stos
add
pop
out
loope
push
fidivr
sub
mov
into
loop
jo
loope
adc
shr
retf
xlat
scas
shr
pop
cmp
lock
push
popa
mov
test
jns
mov
sub
push
or
adc
in
push
pop
push
cwde
jmp
imul
xchg
cmp
pop
test
not
cmp
(bad)
out
gs
call
or
dec
mov
sahf
adc
add
mov
sbb
or
in
pop
cmps
sub
leave
enter
hlt
imul
mov
adc
dec
xlat
fs
cmp
and
push
mov
rcl
daa
cmp
mov
inc
jp
push
pop
stc
dec
fdiv
mov
test
sar
adc
or
les
cmp
jl
xchg
ss
cmps
test
scas
call
mov
sub
inc
push
test
addr16
in
das
push
mov
js
daa
cdq
mov
dec
cpuid
int
call
js
adc
mov
not
push
js
aam
push
in
addr16
frstor
fnstenv
out
scas
rcl
iret
(bad)
fisttp
sbb
add
jae
or
(bad)
shr
jmp
push
stc
retfw
call
xchg
loop
(bad)
cmp
pop
cmp
jbe
pop
outs
jae
mov
out
push
adc
fisub
sbb
stc
mov
dec
ds
jns
push
pop
bound
leave
(bad)
or
shl
scas
mov
scas
clc
(bad)
lock
pop
mov
jae
push
xchg
lods
mov
sub
popf
jne
mov
mov
popa
sub
imul
ficomp
retf
push
lds
sub
sbb
stos
(bad)
lock
sahf
sahf
or
sub
dec
fst
scas
ja
(bad)
mov
icebp
repz
mov
sbb
or
(bad)
out
fsub
out
xor
ror
add
pop
stc
bound
cld
test
jb
outs
push
sbb
movs
add
push
test
jle
add
cmp
push
xchg
jbe
push
dec
out
push
push
push
pop
xor
sub
and
sar
fiadd
add
sub
pop
sbb
shl
cs
mov
pusha
mov
out
xchg
jl
test
imul
xchg
stos
test
adc
mov
add
mov
fs
imul
gs
stos
les
jge
push
push
arpl
add
adc
fisttp
fsubr
nop
push
daa
cmps
add
loope
fist
push
jecxz
int3
cmp
gs
call
push
pop
mov
xchg
ret
(bad)
mov
in
fisub
push
pusha
or
push
push
fst
or
dec
or
rcr
cli
mov
xor
push
imul
xlat
jno
retf
jo
fbld
rol
sbb
nop
mov
fiadd
jl
mov
xchg
jae
xor
sub
in
sub
mov
xchg
mov
xor
xor
xor
push
xchg
popa
stc
push
cld
pushw
or
xor
cmp
cmp
cmp
inc
enter
hlt
xchg
shl
fstp
cmc
leave
inc
mov
je
or
pop
adc
ds
mov
mov
in
(bad)
jmp
mov
out
mov
sti
push
inc
mov
stc
std
and
cmp
xor
fcom
ins
retf
jmp
or
inc
into
icebp
bndldx
xchg
pop
mov
push
stos
retf
dec
jle
int3
data16
pop
pusha
pop
xor
jecxz
sbb
sbb
mov
mov
adc
jmp
inc
lahf
xor
ins
cs
jmp
daa
outs
(bad)
sahf
dec
iret
or
push
cs
xor
sti
ror
sahf
test
sbb
popa
shr
adc
mov
xor
shl
stos
(bad)
dec
inc
mov
call
js
add
mul
jecxz
mov
data16
shl
adc
mov
bound
mov
int
jle
add
lods
adc
inc
push
aaa
jno
or
pop
or
dec
test
in
push
test
cmp
mov
xchg
cmp
adc
aas
dec
adc
fidiv
into
add
jecxz
lods
daa
and
lods
push
ja
push
dec
bound
cmp
or
xlat
dec
push
ret
je
push
call
mov
mov
lahf
arpl
rol
and
pusha
into
ror
jmp
cwde
add
out
popa
xchg
pop
daa
test
add
mov
cmps
mov
jmp
(bad)
loop
push
idiv
rcl
mov
scas
adc
pop
stos
call
pop
mov
xlat
movs
(bad)
out
cmp
xlat
mov
mov
and
xchg
sbb
mov
and
test
stos
push
cmp
sub
sub
adc
shl
adc
fiadd
mov
sbb
pop
out
or
xchg
int3
pop
mov
mov
cmp
nop
les
dec
jo
lods
fnstenv
pop
stos
pop
xchg
jb
xchg
shl
pop
leave
mov
into
mov
or
or
mov
add
sub
pop
dec
xlat
lods
xchg
jp
push
retf
adc
cmps
in
dec
loopne
push
pop
cmp
mov
push
das
scas
dec
mov
outs
pop
jb
jbe
mov
add
xlat
mov
mov
or
cmp
inc
(bad)
call
mov
ja
fs
xchg
push
(bad)
in
adc
movs
cwde
dec
(bad)
fcomp
(bad)
das
push
in
or
and
xor
js
push
mov
xchg
retf
gs
popa
sub
dec
leave
das
je
popa
dec
jg
fwait
jecxz
(bad)
dec
sbb
inc
sub
test
gs
mov
xor
retf
cmp
sbb
mov
add
lea
sub
sahf
dec
xor
pop
inc
leave
sub
int
jbe
jae
loopne
enter
or
lahf
push
loope
out
mov
shr
jnp
daa
add
loop
test
jns
test
cs
int3
inc
imul
dec
and
ror
jle
jmp
mov
mov
dec
inc
sbb
dec
xor
or
jg
ja
push
test
xor
call
inc
cmp
cmp
mov
push
(bad)
pop
rcr
stos
ret
adc
xchg
sar
loope
ret
inc
pop
dec
jnp
aam
icebp
pop
mov
lock
sub
and
(bad)
and
fsubr
mov
and
in
add
scas
pop
movs
jmp
dec
outs
mov
xchg
cmp
xchg
adc
mov
maskmovq
inc
dec
mov
js
jb
(bad)
sbb
xor
pop
pop
shl
pop
aam
pop
inc
push
xchg
imul
in
lock
(bad)
jnp
push
rcr
hlt
pop
inc
fcmove
sub
sbb
xchg
mov
icebp
lock
mov
in
sbb
sub
pop
inc
daa
or
jp
lds
xchg
sub
stos
(bad)
inc
sbb
mov
jb
out
pop
cdq
jge
pop
or
inc
mov
mov
xchg
fcom
vpcmpeqd
jecxz
shl
cmp
dec
mov
data16
outs
lahf
fild
xchg
fisubr
sub
mov
arpl
sub
pop
push
call
outs
jo
retf
lea
pop
xor
push
nop
fidiv
stos
xor
scas
dec
push
movs
in
inc
std
inc
fstp
xor
jl
mov
outs
test
mov
repz
div
lds
aam
mov
lods
lods
lock
sbb
and
xchg
shl
mul
mov
ret
mov
pop
mov
mov
dec
adc
xor
popf
push
js
and
lea
push
xchg
loope
(bad)
mov
adc
mov
add
xchg
in
std
clc
in
xor
xor
aaa
cs
xchg
mov
popa
xor
add
retf
movs
mov
pop
sbb
mov
imul
xchg
mov
stos
sbb
daa
cdq
por
cmp
xchg
jl
cwde
xchg
ret
and
adc
fild
aam
scas
dec
(bad)
push
dec
add
and
shl
addr16
push
inc
cld
test
dec
je
pop
and
adc
dec
leave
push
das
pop
sbb
sti
mov
mov
jnp
dec
paddq
jne
ins
arpl
stc
jne
js
xchg
sbb
mov
arpl
and
mov
bound
and
inc
sub
add
fsub
les
mov
lock
and
sub
ror
lds
fidiv
adc
sti
ss
mov
sub
adc
mov
pop
scas
rol
pop
mov
sub
inc
jmp
retf
sub
sbb
push
fsub
(bad)
retf
mov
or
jno
pop
mov
js
push
das
inc
xlat
shr
(bad)
pop
mov
ret
mov
lahf
fidivr
out
dec
daa
mov
inc
setp
push
fisttp
addr16
adc
xchg
mov
jp
inc
push
cmove
xchg
cs
push
jl
(bad)
pushf
mov
cwde
(bad)
jge
xor
ds
in
mov
mov
push
cwde
(bad)
mov
mov
test
lea
repz
add
dec
fisubr
jae
ret
rcl
test
scas
in
cld
mov
lahf
dec
pop
pop
dec
aad
add
pop
loopne
es
ds
push
adc
lahf
pop
stc
sar
clc
aaa
(bad)
xchg
mov
test
pushf
cmp
sti
pop
xor
arpl
jmp
out
mov
in
jge
nop
fistp
lods
or
ins
or
xor
cli
mov
pop
leave
ret
push
repnz
(bad)
aaa
sub
add
ins
mov
add
jbe
lahf
add
aaa
and
lea
adc
cmp
mov
cli
out
mov
pop
and
retf
adc
inc
jecxz
sub
jmp
mov
cmp
int
movs
cwde
adc
xor
loope
mov
xchg
test
pop
mov
(bad)
ficom
movzx
pop
jno
hlt
mov
dec
inc
shl
(bad)
pushf
inc
or
addr16
jg
sub
sbb
push
outs
mov
out
push
jp
cmp
cmp
jae
pop
mov
test
stos
(bad)
outs
ror
mov
popf
lock
mov
add
mov
pop
stc
inc
es
stos
out
rcr
xchg
(bad)
iret
aad
mov
pop
popf
(bad)
retf
xchg
sar
inc
sub
ins
mov
call
dec
cwde
pop
cmps
call
dec
setle
aaa
movs
jb
mov
mov
or
xchg
(bad)
(bad)
push
pusha
xor
or
mov
mov
sub
mov
push
test
mov
cmp
add
movs
pop
cs
test
cmp
cmp
inc
shr
pop
add
sbb
adc
mov
shl
mov
imul
jo
mul
or
iret
(bad)
fidiv
out
mov
pop
es
mov
cld
cmp
push
push
sahf
push
mov
icebp
and
pop
pop
outs
stos
add
loop
sub
cmp
lock
or
ficom
std
ret
gs
and
cmp
test
movs
clc
lods
or
scas
test
stos
mov
mov
mov
inc
cmps
push
sbb
add
inc
xor
sub
ret
loopne
xor
sbb
mov
push
scas
push
pop
and
retfw
mov
push
xchg
sub
adc
pop
sbb
sub
mov
out
jb
pop
mov
ins
movs
jmp
adc
popa
add
push
mov
inc
jne
inc
mov
pop
fisub
ss
retf
in
clc
(bad)
mov
aas
inc
inc
push
pop
cmp
sbb
sub
or
loope
scas
sub
ds
call
push
and
into
mov
cmp
mov
pop
aam
pusha
or
xor
jl
in
or
jmp
int
mov
(bad)
comiss
aad
mov
jge
inc
pop
adc
jmp
imul
leave
dec
fist
loope
and
aaa
cdq
cmps
mov
or
fnstenv
inc
cmp
dec
adc
cmp
xchg
lods
mov
js
cmp
out
add
loop
xor
sar
loope
push
push
fbstp
stos
in
(bad)
popf
xor
mov
aaa
(bad)
sub
ss
mov
lods
inc
in
test
jae
data16
imul
sub
mov
xor
pushf
in
retf
push
and
inc
fld
cmps
add
(bad)
and
movs
cmp
loope
pushf
push
shr
jne
mov
loopne
dec
mov
stos
adc
clc
jmp
inc
loopne
lods
popf
and
inc
xlat
jg
mov
add
fcomip
and
inc
mov
sub
dec
fmul
cdq
fstp
rcl
and
and
add
sub
mov
pop
lods
enter
call
or
outs
mov
jp
inc
pop
push
jmp
or
int3
push
inc
push
out
shl
push
les
or
push
jmp
ror
daa
and
pop
xlat
jmp
retf
cmp
jg
jmp
mov
inc
inc
xor
add
and
aas
sbb
ins
lahf
dec
push
movs
ss
mov
inc
into
bound
fstp
mov
dec
adc
add
dec
jge
dec
push
xchg
xchg
imul
sbb
ins
xchg
push
push
adc
call
scas
sub
arpl
sbb
popf
(bad)
retf
lods
xor
imul
movs
xor
inc
or
fcom
sbb
bound
test
mov
lods
stc
call
xor
or
adc
pop
push
mov
pop
lahf
sub
(bad)
mov
aam
fs
mov
js
adc
or
fwait
mov
mov
aad
push
xlat
inc
movs
rcr
pop
dec
dec
mov
pop
cld
ins
mov
add
add
xchg
lahf
mov
cld
dec
repnz
out
popf
xor
fidiv
jnp
cmp
ss
fist
dec
shr
test
das
or
mov
iret
inc
leave
ret
sbb
call
dec
push
cmp
inc
shl
adc
std
aam
mov
mov
sbb
lea
dec
xchg
ss
fdivr
bound
imul
out
adc
push
imul
sub
or
mov
arpl
xchg
ja
cmc
repz
pop
add
or
cmps
xor
dec
call
adc
popf
std
jp
stc
jb
adc
inc
cmp
push
(bad)
cmps
mov
sbb
fld
and
or
ret
dec
mov
cmps
sbb
fnstcw
stos
mov
mov
mov
jg
inc
out
xchg
in
xor
or
aad
leave
sbb
lock
les
and
adc
out
in
cmp
jmp
scas
je
test
out
adc
fimul
out
cmp
mov
jno
mov
xor
cmc
mov
xchg
push
xchg
add
lds
inc
sbb
cmp
pop
push
rcl
dec
scas
mov
inc
push
jo
(bad)
and
mov
jae
or
add
mov
fmulp
(bad)
dec
pop
jmp
jmp
shr
(bad)
jb
rcl
xchg
pop
add
or
ins
sti
push
cwde
ret
sar
shl
cmps
dec
cmps
sbb
lods
pop
cwde
stc
(bad)
mov
add
test
pusha
xor
call
jge
push
dec
scas
push
xchg
dec
dec
ja
cdq
loopne
lods
aam
stos
pop
ins
cmps
fcmovbe
sahf
pop
inc
imul
sbb
ds
lods
inc
test
dec
jae
pusha
int3
jne
jmp
push
sbb
xor
sbb
popf
jecxz
ret
xchg
mov
mov
scas
pop
test
push
(bad)
arpl
ins
fidivr
fld
sub
lea
mov
mov
add
int
cli
or
outs
mov
movs
xchg
mov
out
push
std
into
dec
mwaitx
icebp
cmp
xchg
inc
pop
call
pop
aaa
push
sub
cmp
cmps
push
out
jge
shl
xchg
hlt
dec
push
lahf
mov
and
mov
xchg
test
sbb
pop
cmp
imul
lods
cmc
pop
fst
jno
dec
repz
cs
inc
cmp
mov
pop
pop
or
call
(bad)
dec
jb
xor
stos
add
xor
or
xchg
fwait
call
cmc
cmp
pop
xor
mov
mov
sbb
sub
stos
push
push
jg
sub
dec
and
and
xor
push
pop
cdq
push
ins
ja
icebp
ins
jecxz
das
mov
xchg
cmp
and
popa
lock
inc
xchg
mov
sahf
cmc
in
popf
mov
stos
push
push
sbb
and
out
xlat
or
pop
and
das
imul
pop
fist
cwde
xchg
mov
mov
mov
pushf
or
push
adc
push
mov
fimul
dec
mov
not
stos
sub
cmc
es
fisttp
and
gs
mov
retf
add
cmp
in
push
stos
pop
cs
adc
sar
and
jo
jp
dec
fcomi
xchg
sub
sbb
or
rcr
xchg
retf
mov
ja
inc
addr16
push
push
shl
jo
and
mov
mov
cmp
idiv
retf
cs
add
xchg
pop
ss
push
add
aaa
jnp
xlat
bound
lods
xor
movs
aam
dec
dec
xor
lea
cs
repz
fistp
xchg
das
push
addr16
or
sbb
dec
sbb
lods
outs
in
jae
xchg
jge
cmp
jno
mov
mov
sbb
cmps
hlt
jne
xchg
push
sar
jns
jmp
ret
rcr
aad
test
push
adc
push
stc
addr16
add
(bad)
imul
mov
outs
sti
mov
rcl
cmp
sub
std
icebp
in
in
scas
jmp
int3
mov
sub
inc
int3
mov
adc
sar
push
push
push
lods
jmp
xchg
adc
(bad)
xchg
(bad)
hlt
in
push
xchg
adc
adc
mov
add
push
mov
dec
inc
lds
add
imul
cmp
add
cmc
or
mov
std
fxch
jbe
inc
call
jo
mov
ja
loope
dec
or
mov
fmulp
nop
add
dec
mov
cmp
les
cmp
add
cmps
or
mov
add
push
movs
or
ret
cdq
clc
push
in
inc
js
mov
pop
sub
jmp
mov
xor
je
mov
push
lock
xlat
add
jnp
lock
sub
movs
fwait
push
or
or
loopne
shl
add
adc
or
sbb
dec
xchg
push
xor
inc
cli
lahf
loop
ja
pusha
or
push
aas
ds
fild
out
in
pop
pop
cli
ja
scas
aad
push
fcomp
iret
sbb
jecxz
pop
pop
inc
clc
cmc
leave
sub
and
push
je
dec
movs
jp
out
(bad)
cmp
sbb
push
imul
or
jne
push
(bad)
out
rol
jmp
xchg
inc
mov
not
or
jns
(bad)
push
jmp
dec
and
loopne
xor
pushf
or
lods
pop
imul
dec
ret
daa
pusha
sub
sub
imul
push
pop
cwde
and
sub
push
iret
add
bswap
push
arpl
mov
lahf
call
(bad)
fnstcw
add
std
out
push
jb
mov
xchg
in
fnsave
push
fld
push
call
push
inc
cmp
dec
popa
jnp
jp
mov
fdivr
cmp
pop
push
ret
cmp
inc
sub
loop
add
in
inc
pop
xchg
cmp
jg
jae
mov
dec
movs
pop
and
or
es
sub
add
cli
(bad)
clc
xchg
xor
mov
or
inc
mov
movs
mov
adc
push
mov
add
pop
out
pop
lock
dec
je
mov
outs
stos
shr
mov
es
xor
or
xchg
sub
retf
imul
lock
mov
nop
(bad)
lods
or
call
test
mov
imul
mov
pop
jmp
jl
or
aad
jmp
out
add
and
fcmovnu
cmps
int3
mov
cmc
or
mov
sub
aad
rol
mov
inc
leave
jnp
bound
jns
fisttp
cli
sub
cmp
cmps
movs
cmp
adc
and
data16
xchg
add
sbb
jecxz
sbb
push
inc
iretw
mov
rcl
test
push
call
mov
sub
add
mov
sub
lds
sti
test
sbb
bound
gs
loopne
lea
adc
inc
xlat
mov
pop
and
inc
add
and
out
(bad)
dec
or
inc
dec
js
scas
retf
jne
jle
cmp
fcom
or
fucom
ja
jge
add
pusha
stos
clc
out
or
xchg
mov
push
cdq
sub
dec
movs
mov
fist
mov
scas
rcl
ss
scas
dec
mov
ror
pop
rol
out
sub
das
arpl
push
mov
push
(bad)
aas
mov
pusha
sub
aam
(bad)
mov
shl
and
jge
mov
xchg
add
fwait
and
out
iret
in
rol
jns
nop
call
iret
imul
out
bound
pop
mov
sbb
pop
js
mov
pop
mov
add
jns
(bad)
outs
fsubr
inc
inc
loopne
xchg
pop
lods
pusha
xchg
movs
ins
inc
pop
scas
push
(bad)
and
mov
mov
and
and
lods
cmc
jg
xchg
loope
fadd
inc
scas
and
add
mov
sub
icebp
lea
push
push
mov
loopne
neg
fst
ins
js
fdiv
mov
rol
push
jne
mov
push
mov
push
and
pop
add
cmc
or
mov
or
sbb
test
stos
mov
mov
sbb
mov
lds
jns
(bad)
(bad)
and
dec
call
shl
das
movs
xchg
xchg
mov
lods
push
adc
xchg
loop
cs
cwde
lahf
out
call
add
xor
out
fldenv
xor
shl
in
movs
cmc
outs
or
cmp
stos
inc
mov
ins
test
mov
jne
adc
push
call
scas
inc
pusha
stc
retf
mov
xchg
pop
sbb
not
cli
or
rcr
mov
mov
lds
inc
dec
dec
or
jns
in
push
mov
pop
mov
loop
xor
jp
fistp
fistp
adc
mov
add
int
ret
jg
inc
out
xchg
loopne
push
sahf
sbb
jnp
enter
adc
mov
sbb
bound
xor
xchg
gs
mov
mov
(bad)
xor
(bad)
push
inc
jmp
fwait
scas
xchg
sub
cmps
add
xor
ficom
inc
pop
pop
sbb
xchg
lods
xlat
sbb
call
or
fstp
mov
lea
lahf
ds
popa
adc
xchg
mov
pop
jecxz
das
inc
jl
dec
aam
shl
sub
cmp
(bad)
jp
or
sahf
and
and
and
and
test
jae
sbb
das
xchg
out
repnz
ss
adc
push
cmp
push
daa
or
addr16
jmp
cmp
ins
jbe
jb
xor
push
pop
nop
xor
aam
lea
inc
or
sub
jmp
mov
(bad)
in
jno
mov
aad
or
push
ret
stos
dec
cmc
add
cmp
stos
test
push
and
(bad)
outs
(bad)
cmp
fwait
movs
xor
int
out
xor
ins
into
fcmovbe
adc
inc
dec
repnz
cmp
shl
call
push
pushf
cmp
sub
push
sbb
xor
sub
int3
adc
jae
cld
mov
int3
cmps
mov
xor
inc
mov
into
cmps
mov
popa
(bad)
mov
mov
mov
sub
dec
ins
jmp
je
mov
(bad)
jp
mov
bound
jmp
jnp
push
xchg
and
and
nop
fs
fwait
ret
jge
mov
aas
mov
mov
and
in
int3
(bad)
call
sub
into
ficomp
call
sbb
clc
dec
pushf
cmp
mov
inc
mov
(bad)
out
cwde
fldenv
cmp
sbb
pop
xor
jle
in
mov
stos
(bad)
movs
push
adc
retf
push
fimul
xor
jp
push
lods
sub
sub
ds
mov
popf
xchg
movs
repz
sahf
(bad)
push
sti
mov
and
jns
call
dec
test
push
addr16
ja
inc
out
dec
test
(bad)
sub
adc
stos
mov
jbe
mov
fs
mul
push
pop
es
mov
and
mov
test
sbb
jns
mov
iret
mov
out
adc
ins
or
jecxz
lea
xchg
xchg
mov
inc
cmp
sbb
add
(bad)
out
sub
les
hlt
push
cmp
jmp
xchg
dec
lahf
sbb
jns
pop
std
pop
movs
out
jne
retf
and
int
jge
xchg
(bad)
addr16
frstor
adc
gs
push
movs
pop
pop
test
ss
call
or
not
int3
(bad)
sti
call
cmp
scas
addr16
xchg
outs
pop
mov
mov
outs
jbe
xchg
inc
inc
jmp
pusha
inc
(bad)
pop
mov
rcl
mov
mov
mov
pop
jecxz
dec
adc
popa
in
pop
add
or
push
nop
sbb
stos
ins
rcl
(bad)
mov
jb
jge
xor
mov
push
mov
sbb
cli
sub
pop
inc
add
std
dec
dec
fist
arpl
pop
mov
mov
data16
out
call
xlat
(bad)
pop
shl
imul
mov
add
mov
cmps
mov
dec
adc
in
xchg
push
pop
jno
add
dec
mov
xor
pop
into
test
and
sub
dec
mov
push
jmp
je
aaa
pop
xchg
cmp
inc
nop
outs
clc
std
jae
xor
scas
xchg
pavgb
stc
aaa
(bad)
movs
pop
adc
mov
sub
xor
aad
sub
jmp
cmps
or
shl
dec
sti
xchg
mov
mov
dec
clc
out
mov
test
or
xor
scas
fwait
inc
pop
sbb
mov
popf
push
inc
xchg
gs
xchg
add
jecxz
pop
and
das
mov
or
rcl
jge
cmps
mov
outs
sti
loop
dec
xchg
ror
call
xchg
icebp
(bad)
lods
rol
xchg
nop
sbb
xchg
pop
adc
pusha
call
fidiv
push
mov
je
mov
add
ins
mov
mov
rcl
and
jae
retf
cmc
movs
inc
stos
test
in
dec
push
out
mov
pop
iret
fucomi
add
ja
and
cmc
sbb
enterw
fiadd
xchg
cmp
(bad)
mov
in
xchg
hlt
jae
inc
ds
mov
je
cmp
lds
movs
cld
test
cmp
aaa
cmp
mov
xor
pop
cmc
xor
sar
or
loope
sub
push
loope
xor
loope
push
mov
mov
aad
dec
sub
test
xchg
xor
xor
inc
hlt
repnz
js
pop
retf
mov
mov
sub
sbb
js
jl
(bad)
ja
das
cmp
inc
inc
sub
ret
or
lea
mov
add
ja
add
stos
shl
mov
aad
sbb
xor
scas
arpl
popf
out
mov
or
rcl
mov
xor
inc
in
cmp
hlt
push
mov
mov
lea
fnstsw
inc
aad
std
fnclex
or
movs
jmp
in
jg
cmp
push
cmp
test
mov
sti
mov
test
in
adc
fcomp
hlt
cs
push
sub
add
outs
loop
loopne
cwde
pop
sub
inc
lock
dec
adc
fnstcw
cld
mov
mov
std
pop
sub
(bad)
out
rol
je
xor
lea
int3
jg
push
ficomp
jo
cwde
retf
test
jg
hlt
popf
(bad)
dec
icebp
mov
push
test
inc
hlt
sti
mov
dec
adc
jbe
nop
xor
test
mov
rol
add
fwait
call
cmp
(bad)
push
in
lahf
fld
rol
imul
xchg
test
cwde
or
cmp
fcmove
and
repnz
push
mov
ds
fist
jns
ins
inc
push
dec
sbb
jle
int3
jae
xor
fmul
lea
aas
ins
mov
out
repz
push
rcr
dec
scas
mov
mov
outs
cmp
sub
jecxz
in
jg
aam
push
inc
aaa
(bad)
mov
sbb
retf
sub
xchg
ins
ds
sti
scas
mov
sub
inc
jae
push
(bad)
mov
push
iret
push
sbb
sbb
loope
push
add
sbb
add
lea
bnd
adc
add
push
loop
and
pushf
pop
outs
mov
and
push
bound
(bad)
and
ins
xor
mov
(bad)
jecxz
jns
jne
add
dec
cmp
mov
loopne
and
mov
rcr
icebp
(bad)
daa
aad
cmp
and
xchg
jbe
jmp
pop
mov
fst
xchg
push
(bad)
jmp
mov
outs
(bad)
icebp
mov
mov
rcr
mov
mov
mov
int3
mov
es
push
inc
retf
pop
bound
mov
xchg
adc
xchg
push
mov
mov
pop
lods
sub
mov
shr
jge
jle
pop
mov
push
xor
dec
pop
or
sub
inc
pop
in
push
dec
cwde
and
scas
dec
add
enter
sbb
add
imul
push
rcl
in
ss
movs
sub
mov
cld
mov
jne
mov
(bad)
jmp
jl
xchg
dec
jbe
and
fs
and
jo
cmp
ins
mov
mov
or
sbb
sub
in
or
in
push
out
or
mov
daa
mov
cmp
fisubr
in
movs
sbb
or
dec
mov
lahf
frstor
or
push
es
pop
jmp
icebp
mov
mov
mov
dec
push
mov
movs
pop
fmul
push
dec
mov
pop
push
or
inc
cmc
gs
scas
cwde
movs
and
test
xchg
or
test
outs
cmp
and
mov
pop
in
add
add
jmp
cwde
dec
jno
cmp
dec
test
cmps
xor
push
cdq
pop
hlt
scas
out
jg
pop
jp
je
out
jle
in
fmul
fbld
xor
add
dec
fcomp
push
cwde
xchg
jmp
popw
add
js
pop
and
pop
fild
add
imul
inc
gs
es
out
bound
pop
xchg
xchg
rcl
mov
sahf
dec
(bad)
mov
fs
mov
fnsetpm(287
rol
(bad)
mov
fwait
enter
adc
movs
rol
into
iret
adc
or
inc
jae
dec
mov
mov
sub
pop
arpl
mov
ret
cwde
sbb
mov
push
pop
xor
adc
clc
add
pop
inc
jmp
push
adc
push
lock
push
in
mov
fs
sub
cwde
or
icebp
arpl
mov
fwait
out
push
fsubr
jmp
pusha
add
cmps
dec
in
and
push
(bad)
ror
add
aam
icebp
ins
(bad)
sub
or
sbb
enter
jp
jae
stos
adc
test
data16
outs
pop
dec
jae
jnp
call
pusha
in
sbb
hlt
adc
lods
pusha
pop
in
aad
pop
or
or
f2xm1
imul
mov
add
add
out
leave
mov
pop
adc
rcr
sub
xchg
jmp
and
in
mov
mov
jbe
dec
xor
mov
or
or
push
pusha
add
xor
lahf
sub
loopne
sub
test
cli
push
cmp
imul
adc
xor
push
lods
xor
cld
stos
popa
ins
xor
out
rcl
add
mov
fsubp
mov
xor
xor
gs
imul
lods
test
out
loopne
and
inc
call
movs
inc
stc
sbb
or
fnstsw
lods
jnp
mov
jp
shl
test
aam
cmps
cs
pushf
mov
clc
mov
push
sub
jmp
stc
out
lahf
xchg
enter
sub
les
lods
cmp
(bad)
mov
cmp
push
mov
mov
gs
in
cli
sub
into
repz
in
xor
add
mov
mov
mov
jg
(bad)
or
jp
adc
mov
fsub
fcmovbe
mov
jno
das
ins
inc
xchg
cdq
(bad)
shl
imul
sub
and
cmps
daa
in
sbb
lods
fstp
jg
je
pop
mov
mov
xchg
ja
lods
in
dec
cmp
push
jle
inc
jno
jle
daa
popf
dec
(bad)
repnz
mov
dec
add
lods
mov
inc
push
int3
adc
lods
cli
scas
sub
mov
in
jae
std
popa
cli
dec
movs
cmp
imul
call
mov
fldcw
pop
xchg
xor
mov
mov
loop
(bad)
sub
in
mov
arpl
(bad)
loop
jecxz
add
push
jg
pop
or
out
mov
mov
stos
das
mov
test
or
fidiv
ja
jg
test
push
sbb
dec
sahf
loope
fbld
leave
loopne
pop
nop
call
xchg
push
cmp
lods
and
fiadd
push
inc
lahf
push
retf
jmp
data16
mov
adc
mov
test
shr
and
pop
jbe
jl
test
mov
aad
shr
imul
xor
out
aam
xchg
jb
add
je
sahf
ins
iret
addr16
dec
popa
sbb
mov
mov
xchg
jl
fbld
and
adc
(bad)
mov
loopne
retf
inc
push
inc
fwait
and
into
out
xor
adc
jge
int3
mov
test
repz
jae
(bad)
adc
jle
jmp
ret
inc
jnp
mov
ficom
ss
(bad)
jne
neg
dec
push
push
mov
mov
xchg
pop
inc
jnp
(bad)
call
dec
mov
mov
fimul
sbb
and
jbe
iret
cli
fsubr
fist
jmp
popa
retf
les
out
jae
frstor
push
imul
pushf
iret
shr
lods
push
ror
jp
jnp
xchg
lds
or
xor
fstp
out
xor
mov
enter
mov
sar
pop
mov
je
add
std
mov
test
mov
jle
xchg
stos
imul
aas
popf
add
lods
sbb
and
cli
cmp
adc
and
cld
dec
or
js
jno
cld
fs
xor
adc
mov
loope
or
imul
iret
adc
jmp
popa
popf
sbb
jle
retf
mov
xor
outs
fwait
mov
adc
push
add
ins
in
xchg
xchg
out
jmp
mov
fsub
repz
or
repnz
mov
mov
sbb
std
retf
call
dec
xchg
mov
cmp
jp
cld
std
enter
sti
and
nop
ja
retf
pop
repz
and
push
xchg
cwde
pop
dec
jg
jle
push
push
ret
ds
add
xor
dec
adc
fcom
(bad)
or
mov
add
nop
push
dec
fild
or
iret
add
mov
scas
in
sahf
xchg
xlat
mov
jmp
(bad)
xor
pop
push
scas
inc
not
lahf
call
pop
cli
sbb
mov
leave
or
dec
sub
sbb
mov
add
hlt
mov
push
push
adc
fwait
mov
popf
test
je
test
sbb
jp
xchg
mov
out
inc
(bad)
or
dec
dec
jb
in
fld
mov
fwait
(bad)
and
out
sub
dec
inc
sbb
call
repnz
div
imul
rcr
ror
and
dec
pmaddwd
add
mov
fwait
push
test
mov
mov
cmp
inc
shr
in
loop
pop
jb
repnz
jo
fstp
ds
pop
inc
fst
xlat
sub
jecxz
idiv
fiadd
mov
jp
push
adc
cmp
sub
imul
stos
div
cmp
inc
push
cld
adc
mov
and
outs
aas
clc
jo
jg
mov
ja
test
mov
imul
test
mov
sti
mov
mov
xor
dec
les
pop
fld
test
inc
sbb
or
leave
fsubr
ror
mul
int3
inc
jbe
mov
retf
sahf
push
js
cmp
mov
mov
xchg
pop
mov
js
cmp
add
lods
push
mov
push
push
fisttp
into
dec
and
mov
or
into
fs
cld
jecxz
pop
adc
mov
aad
mov
jbe
cmp
leave
fbstp
retf
in
(bad)
dec
mov
pop
and
mov
jp
add
push
stos
push
adc
jp
fs
pop
jmp
or
mov
jb
push
iret
sahf
fadd
popa
cld
out
mov
adc
int
loop
xchg
or
or
iret
inc
jo
xchg
scas
minps
(bad)
js
mov
mov
test
stos
ret
xchg
mov
cmp
add
in
pusha
inc
inc
push
int3
inc
xor
lea
push
inc
iret
sbb
fsubr
mov
jo
mov
jg
sub
daa
outs
aas
ins
fadd
push
sub
adc
sub
fucomi
mov
bound
xchg
and
xchg
gs
pop
sub
popa
lods
das
push
je
les
mov
icebp
neg
mov
dec
or
ins
push
sub
jmp
pop
xchg
sub
imul
mov
inc
and
ja
cwde
stos
mov
cmp
ja
jmp
lock
das
aas
pop
aad
dec
inc
mov
sbb
fcomp
int
outs
fsubrp
or
and
and
les
aas
add
push
jnp
sub
xchg
inc
out
inc
stos
repz
gs
pop
dec
dec
mov
and
mov
jbe
retf
mov
ins
ja
sub
adc
inc
popw
fist
pop
jge
rcr
jne
repnz
jb
(bad)
shl
lds
mov
sti
mov
mov
push
sbb
adc
mov
sub
jge
sub
loope
lgs
das
stos
xor
jecxz
je
cmpps
mov
mov
inc
stos
mov
retf
cmp
dec
repz
pop
adc
cmp
addr16
sbb
addr16
jo
cmps
ds
xchg
das
stc
ret
push
adc
jg
inc
xchg
sbb
mov
daa
mov
xor
sub
bound
int3
std
dec
je
inc
fcom
sti
xchg
clc
or
fiadd
shl
sbb
mov
loop
inc
cmp
out
stos
sub
jmp
pop
stos
pop
enter
out
xlat
iret
les
pop
xor
mov
xchg
(bad)
mov
and
popf
lahf
(bad)
xor
mov
enter
lock
int
mov
sar
popa
jmp
or
ins
call
add
add
into
cli
(bad)
das
ja
dec
aam
jno
xor
pop
sub
push
mov
mov
sbb
mov
add
jmp
jo
sub
push
addr16
gs
xchg
push
adc
pusha
mov
test
lea
add
push
(bad)
xlat
dec
push
ins
adc
inc
mov
or
sub
sub
movs
int3
hlt
jmp
and
dec
cs
mov
out
inc
xchg
cdq
idiv
fwait
rol
push
inc
fst
test
stos
xchg
retf
popa
jp
out
jmp
jns
bound
inc
xor
xchg
pop
jbe
bnd
retf
jns
lds
jp
mov
mov
sub
test
push
inc
sbb
cld
jno
mov
dec
pop
test
inc
sbb
or
dec
(bad)
fnstenv
xchg
fbld
mov
or
mov
jnp
sbb
jg
or
mov
mov
fwait
in
ror
or
pop
mov
mov
adc
inc
in
or
dec
xor
jbe
dec
ret
div
xlat
call
sar
movs
(bad)
into
mov
loopne
call
test
mov
popa
xor
pop
lock
push
ret
ret
shl
pop
mov
sub
nop
pop
lods
push
adc
movs
or
add
xchg
or
mov
in
movs
sbb
xor
(bad)
sub
ret
test
jp
dec
shl
repz
push
mov
pop
push
lods
popf
and
shl
sub
sub
push
out
pop
mov
pop
mov
arpl
cmp
ins
inc
xor
hlt
adc
and
retf
xor
ds
mov
jmp
adc
cld
scas
sbb
sahf
push
or
mov
in
xchg
sub
jge
sbb
add
and
push
mov
lock
leave
add
xchg
jle
inc
iret
cdq
adc
mov
(bad)
xchg
lods
cmps
push
jmp
retf
or
into
(bad)
hlt
ja
inc
dec
jecxz
pop
fistp
loopne
call
and
(bad)
in
retf
jb
jl
push
xor
mov
dec
sub
aad
inc
popa
push
jb
pusha
retf
push
inc
data16
fwait
pop
stc
mov
push
mov
fld
adc
fnsave
ins
inc
pop
fadd
mov
jecxz
dec
in
ret
sbb
push
adc
inc
dec
or
dec
xchg
mov
adc
pop
sub
icebp
aas
sbb
idiv
lods
sub
dec
das
(bad)
xor
aad
sahf
add
jb
inc
(bad)
xor
jmp
xchg
repnz
xlat
pop
mov
ins
(bad)
out
aas
cmps
loopne
fimul
das
adc
dec
test
mov
mov
out
cmps
arpl
inc
jecxz
std
inc
adc
push
xor
aas
push
mov
test
cmp
loopne
mov
mov
push
loope
mov
sub
fbld
sar
jmp
and
cmp
push
sbb
int3
sar
std
fs
and
fcmovnbe
shl
mov
test
stos
push
sbb
outs
std
or
inc
xor
dec
ds
je
mov
mov
cmps
test
xchg
cwde
mov
sbb
mov
xchg
fsubr
xor
pop
sub
gs
lock
out
inc
lock
das
push
and
add
je
or
push
jmp
pushf
xor
pop
inc
mov
fwait
pop
std
test
fisubr
cmps
cmp
aas
in
inc
int3
fld
icebp
lea
hlt
ja
cdq
xlat
sbb
dec
stc
or
jl
mov
shr
jo
xchg
or
jecxz
xor
sbb
in
shl
mov
cdq
mov
ror
maxps
dec
das
movs
leave
or
repz
out
arpl
lods
in
lahf
ss
cmps
pop
mov
xchg
pop
add
lock
addr16
inc
cmp
xor
or
aaa
inc
or
xchg
les
xchg
mov
(bad)
mov
fld
push
adc
dec
call
sub
jle
add
cmp
mov
or
jb
rcr
mov
jmp
rcl
cmp
dec
xchg
jp
xor
dec
mov
sbb
jbe
stos
test
movs
xchg
pop
retf
mov
inc
xor
dec
call
mov
mov
popf
fsub
(bad)
fbstp
sbb
sbb
sbb
pop
mov
test
loop
cmp
fidivr
mov
outs
out
popa
mov
cmp
inc
xor
fwait
pushf
popf
fistp
std
cwde
(bad)
pop
cmp
sbb
mov
dec
test
inc
ror
adc
jmp
dec
lock
or
and
or
jo
fisub
je
int3
outs
int
inc
popf
jne
add
ret
and
es
jecxz
pop
mov
arpl
imul
push
paddsw
jg
jne
push
push
fwait
mov
push
xchg
sub
inc
sub
(bad)
out
mov
bnd
sbb
outs
and
repz
stos
or
xor
or
(bad)
xchg
cmp
aad
jg
xchg
sub
jecxz
adc
stc
daa
cmp
push
cwde
mov
xor
shl
stos
div
pop
jecxz
sub
popf
ins
dec
lods
hlt
in
clc
cmp
xor
pushf
retf
add
jae
add
sub
scas
adc
retf
jle
out
mov
xor
add
mov
inc
mov
gs
loop
mov
dec
sbb
dec
and
mov
push
stos
ret
imul
outs
ja
fcmovnb
push
fadd
adc
pop
dec
outs
lds
jo
mov
mov
sbb
cmp
and
adc
iret
retf
xor
add
inc
leave
call
ins
cmp
jmp
lahf
ss
call
inc
(bad)
mov
out
sub
push
cmps
mov
push
push
mov
(bad)
repz
lods
sbb
mov
loopne
push
sbb
inc
or
and
or
xchg
jae
cmp
mov
cmp
xchg
mov
dec
sub
pop
(bad)
(bad)
sub
test
adc
cs
jne
popa
pop
cmp
push
xchg
add
je
dec
loop
lods
fwait
add
or
fdivr
cli
or
cli
xchg
add
push
out
pop
mov
popf
xor
pop
mov
adc
mov
fisttp
outs
add
dec
mov
int3
setg
mov
dec
add
cld
and
adc
mov
xchg
mov
retf
jno
test
inc
jp
(bad)
push
jne
and
shl
int
and
mov
xchg
fidivr
or
(bad)
aad
mov
and
jmp
call
push
inc
adc
xchg
test
sub
cmp
sar
pop
adc
add
jne
shl
sbb
sar
sahf
xchg
cmp
mov
imul
pusha
or
sti
pop
add
push
push
sbb
or
dec
sbb
xor
jae
mov
jno
cmps
fld
xchg
scas
sbb
in
arpl
jb
es
push
je
mov
into
stos
outs
mov
or
jmp
cmp
fild
test
adc
clc
add
addr16
sub
in
add
loope
mov
loopne
add
rol
mov
xchg
outs
out
mov
aam
fcomp
cmp
ja
mov
int
add
dec
in
cmc
or
ret
or
sbb
iret
or
sbb
and
jmp
adc
imul
cmps
retf
jo
sbb
pusha
sbb
fst
test
inc
and
push
dec
rol
xor
int
repnz
ds
or
jo
movs
stos
inc
dec
loop
xchg
pop
and
rol
mov
pop
dec
test
pushf
dec
cli
in
cmp
in
(bad)
retf
lods
sub
add
jbe
scas
mov
and
jns
xlat
xor
fcompp
clc
popf
push
(bad)
mov
or
shl
sbb
popa
scas
cmc
push
pop
bound
and
cwde
call
push
adc
scas
pop
pop
jge
sbb
sbb
stos
and
dec
xor
xchg
inc
pop
lds
cmc
mov
sub
ret
xlat
dec
cmc
in
aam
retf
sbb
pop
pop
lods
jl
retf
mov
inc
jb
mov
outs
cmp
and
stc
dec
xchg
test
ror
sub
cmp
dec
xor
inc
stos
stc
mov
imul
jge
jb
and
cwde
retf
or
mov
cmp
sbb
cmp
daa
xor
add
or
fcmovnbe
xor
test
mov
mov
jo
icebp
inc
in
cmp
sub
mov
push
pop
mov
xlat
shl
nop
imul
loope
adc
loope
and
sbb
push
mov
jge
aaa
jno
push
cmc
dec
pop
pop
dec
adc
enter
or
sub
dec
rcl
jne
js
add
pop
xchg
pop
mov
sub
pop
and
jmp
and
push
or
pop
dec
push
lods
add
jmp
iret
xchg
pop
int3
imul
push
xchg
pop
sub
int3
sbb
icebp
cmp
leave
or
xchg
lea
(bad)
popa
push
sbb
dec
xor
test
jb
pop
and
sahf
and
jne
or
add
int3
inc
call
mov
leave
out
jl
aaa
not
imul
xchg
xlat
and
lock
shr
xchg
(bad)
mov
mov
jmp
push
call
jae
sahf
and
sub
mov
push
adc
aam
lods
sbb
in
scas
cmp
and
mov
lods
pop
mov
push
xor
xor
(bad)
cmp
jnp
xor
mov
and
scas
mov
outs
or
addr16
sub
ins
mov
cmps
popa
sub
outs
ret
ins
popa
dec
scas
into
jp
add
mov
and
mov
fnsetpm(287
out
push
inc
adc
mov
icebp
sbb
bound
mov
and
pop
es
arpl
outs
retf
aad
sbb
xchg
dec
pop
movs
test
inc
inc
clc
sbb
mov
sbb
mov
cmp
call
in
push
jae
xchg
cmp
push
push
mov
stos
in
loop
jmp
mov
ins
xchg
inc
adc
mov
test
cmp
mov
dec
pop
enter
lods
inc
mov
dec
(bad)
sbb
test
cwde
mov
outs
pop
pop
imul
push
sti
std
jle
pop
jmp
and
enter
adc
inc
sub
adc
mov
xor
xchg
push
icebp
movs
and
pushf
jmp
adc
mov
pusha
shr
idiv
loope
ds
sahf
and
adc
and
xchg
sbb
sti
in
cmp
xchg
aaa
adc
cmc
ds
test
fs
push
mov
clc
cmp
retf
adc
inc
inc
dec
xor
call
mov
cmc
push
xor
daa
mov
fdivr
das
leave
loope
repz
ins
inc
xor
or
loopne
iret
dec
addr16
or
es
mov
pop
mov
rcl
and
outs
icebp
inc
xchg
inc
add
ficom
test
dec
imul
jne
push
pop
cld
jle
into
mov
pop
pop
in
leave
int3
sbb
sub
mov
inc
sbb
add
sub
and
mov
daa
cmp
movs
repnz
(bad)
ins
jbe
call
mov
xor
or
stc
push
das
pavgb
xchg
jmp
dec
add
in
mov
dec
scas
xlat
adc
jge
scas
les
inc
push
stc
xor
das
xchg
hlt
int3
pop
mov
movs
jl
jns
cmp
arpl
sbb
mov
jmp
scas
and
cmps
(bad)
mov
mov
dec
js
push
xlat
arpl
xchg
imul
mov
inc
fdivr
jle
sbb
push
inc
out
fbstp
push
xor
sbb
sub
push
jge
jle
or
(bad)
stc
fild
ja
test
ins
ret
dec
and
pop
std
jp
(bad)
cmp
leave
mov
add
jle
pop
push
ds
cli
pop
mov
shl
xor
mov
adc
dec
in
in
sub
pop
or
and
jns
leave
cmps
sbb
sbb
cmp
push
cmp
dec
dec
sub
inc
in
sahf
or
mov
or
inc
and
dec
adc
mov
rcl
ja
sbb
adc
in
cmps
dec
aam
push
adc
and
xor
cli
out
call
push
xchg
or
inc
imul
enter
clc
pop
in
retf
mov
pop
cli
mov
dec
inc
rol
ret
cmc
push
jmp
retf
call
movs
inc
imul
call
(bad)
jae
aad
cmp
stos
mov
sub
stos
xchg
jl
lock
(bad)
dec
pop
jbe
mov
(bad)
cmps
bound
inc
bound
and
in
lahf
loop
push
mov
push
cmp
popf
xchg
movs
je
stos
out
mov
push
rcl
mov
push
les
data16
mov
fsub
movs
add
retf
jecxz
xor
push
ins
dec
xchg
sub
dec
es
push
jnp
add
pop
(bad)
sub
dec
adc
mov
dec
std
sub
leave
dec
les
in
(bad)
movs
push
xchg
mov
fistp
xchg
sub
loope
push
xlat
inc
ret
sbb
dec
push
and
outs
cmps
data16
cwde
sub
sub
shl
cld
pop
jle
adc
xchg
int
inc
xchg
sahf
push
xor
repnz
lods
cmp
dec
cmp
push
mov
fst
into
or
jl
in
shl
int
xchg
mov
inc
lods
bound
gs
std
fisubr
xchg
ret
mov
sub
icebp
push
in
mov
pop
push
add
lods
cwde
or
ffreep
fs
retf
inc
(bad)
fnsave
push
gs
ds
sar
mov
sbb
lahf
jno
jne
inc
cmp
scas
(bad)
add
jb
jmp
mov
jne
fiadd
xchg
sub
(bad)
jl
leave
jge
add
int3
je
mov
daa
xor
aaa
sbb
movs
mov
sbb
ja
adc
push
pushf
mov
leave
ror
mov
mov
jmp
dec
pop
ja
jno
sbb
push
sbb
sti
mov
mov
retf
dec
ds
in
mov
sub
mov
sub
sbb
inc
hlt
movs
fs
cmp
sub
bound
xor
cdq
dec
(bad)
or
shl
xor
inc
mov
shl
adc
aam
ins
cmp
add
dec
mov
sbb
clc
div
mov
neg
pop
or
in
jle
or
pop
mov
adc
and
jge
push
daa
mov
int3
into
test
push
cmps
mov
mov
(bad)
(bad)
in
add
cmps
je
(bad)
into
(bad)
mul
pop
sbb
fcompp
xor
(bad)
pop
add
jmp
arpl
push
loopne
(bad)
cld
scas
jno
xchg
xor
lahf
ss
test
pop
push
xchg
adc
sti
mov
pop
cmp
(bad)
test
call
call
movs
xor
xor
sar
jnp
jne
mov
fs
nop
stos
inc
jle
xchg
or
jnp
push
test
sub
lods
adc
jae
std
je
push
mov
sub
lahf
xor
or
xor
add
lahf
fwait
jg
sbb
je
mov
xor
loop
and
cdq
jecxz
push
out
and
hlt
pop
fsub
scas
fwait
xlat
cs
jle
sbb
inc
les
mov
mov
cmc
cmp
xlat
test
fisubr
mov
dec
dec
push
or
out
(bad)
sahf
inc
jbe
xlat
lock
pop
push
pop
in
jno
mov
push
inc
lds
aam
xchg
mov
aaa
sbb
shr
sbb
sbb
lock
out
ins
fcomp
adc
clc
sbb
xchg
or
dec
xchg
out
shr
in
pushf
pop
jns
jns
pop
int
lock
outs
lods
call
push
outs
fnstsw
dec
jge
xlat
in
pop
dec
movs
cdq
lahf
jle
loop
and
fisttp
and
sub
add
std
cdq
out
repz
in
pop
push
sahf
inc
adc
cmps
ror
adc
mov
fistp
lods
push
sti
sbb
pop
fwait
lods
xchg
mov
sbb
inc
jb
daa
test
inc
in
push
std
add
xchg
sbb
cmc
mov
mov
mov
sub
(bad)
ror
xchg
sbb
xchg
push
sbb
test
push
dec
push
(bad)
push
popa
and
nop
cli
pusha
jno
mov
dec
xlat
mov
mov
xlat
movs
enter
inc
jbe
push
xchg
xor
add
adc
call
iret
(bad)
loop
rcl
cmp
mov
jge
fidiv
movs
sbb
push
cmp
ret
mov
lahf
inc
stos
arpl
and
mov
inc
dec
jae
sub
icebp
inc
pop
lods
gs
add
pusha
es
pop
(bad)
repz
adc
popa
push
icebp
repz
push
rcl
es
cmp
jo
sub
and
aas
inc
pop
cmps
mov
(bad)
cmps
or
aad
js
push
loop
add
pop
add
es
ss
stc
ja
mov
sub
aad
add
in
fisttp
ja
xchg
dec
sub
shl
xchg
sbb
mov
lahf
daa
mov
fild
xlat
pop
dec
neg
adc
xor
(bad)
jge
int3
sbb
mov
div
(bad)
loopne
jmp
pop
(bad)
iret
sbb
(bad)
adc
inc
pop
(bad)
push
arpl
jmp
shr
fcmovne
in
pop
lahf
sub
mov
hlt
xchg
daa
push
lock
mov
mov
xchg
(bad)
push
jecxz
rcl
pop
jbe
jno
add
enter
dec
rol
adc
icebp
ret
lock
fadd
mov
cli
dec
mov
cdq
adc
sub
cli
lods
repnz
mov
push
inc
shl
mov
xchg
data16
inc
into
pushf
xchg
cmps
imul
jecxz
icebp
cmps
mov
or
in
jge
cmp
sub
pop
ja
pop
in
push
(bad)
out
imul
shl
push
adc
sbb
mov
cli
and
stc
and
inc
sahf
in
scas
push
clc
ficom
(bad)
jmp
cs
xchg
jg
sbb
aas
mov
jecxz
fmul
push
bnd
adc
sahf
mov
pusha
pop
sar
add
mov
cmp
push
xchg
push
push
sbb
in
pop
push
rol
add
out
add
mov
push
shr
xchg
mov
mov
mov
stc
daa
xor
(bad)
and
sar
std
retf
jmp
loopne
push
movs
sbb
(bad)
div
gs
call
xchg
and
mov
push
scas
jno
arpl
push
add
lea
xor
inc
pop
jbe
shr
popf
jg
fdiv
scas
(bad)
dec
pop
inc
ins
inc
aam
imul
and
loop
mov
fst
inc
xor
or
in
and
dec
inc
daa
aad
loop
dec
fidiv
xor
sub
xor
leave
adc
addr16
popf
pusha
mov
das
xor
shl
in
movs
jo
jge
jmp
fcmovne
jo
retf
ja
ss
test
shr
dec
nop
rcr
movs
and
and
sub
movs
out
mov
(bad)
mov
call
xor
cmc
add
retf
add
xchg
(bad)
push
push
dec
xchg
call
jne
cmp
call
or
out
sbb
les
add
cmp
jns
xor
jae
and
cmps
lods
sub
add
hlt
pushf
sub
mov
push
neg
mov
and
xor
leave
fnstenv
shl
add
sbb
dec
xchg
mov
dec
push
sbb
jnp
dec
ret
rcr
and
dec
int3
sub
and
(bad)
into
test
loope
shl
jmp
ds
xchg
aam
adc
sbb
sbb
push
xchg
jl
sar
retf
iret
xor
sbb
mov
ret
nop
jo
(bad)
out
jl
(bad)
lahf
xchg
mov
(bad)
sti
ds
cmps
mov
mov
(bad)
jo
aad
jo
dec
fnstsw
mov
xor
sbb
xchg
push
(bad)
sar
enter
dec
aam
push
fcom
aas
call
cmp
mov
jo
inc
outs
fistp
call
js
es
xor
dec
add
sti
adc
enter
jecxz
imul
sbb
sbb
jp
cmp
add
stos
or
push
loope
mov
in
cwde
mov
fdiv
leave
mov
hlt
dec
pusha
pop
adc
aas
sbb
pop
and
movs
scas
push
stos
lahf
sub
push
sbb
jecxz
sub
xchg
and
push
dec
adc
add
jg
stc
adc
jl
dec
dec
inc
pop
int
mov
call
push
fnstsw
pop
cmp
sbb
inc
inc
inc
and
popf
fld
and
pop
inc
mov
out
test
enter
push
cmc
mov
adc
ins
xor
and
out
call
xor
outs
jns
outs
add
cmp
pop
adc
sbb
mov
cs
adc
dec
sub
mov
in
mov
movaps
gs
out
mov
add
call
push
popa
sbb
inc
inc
xor
rcr
and
pop
mov
adc
mov
test
sub
sub
jno
enter
sub
push
icebp
push
(bad)
pop
arpl
push
add
or
xchg
pusha
stc
stos
push
je
out
movs
call
scas
jb
scas
cmps
xor
sbb
and
push
pop
cld
lock
loopne
xlat
iret
outs
or
push
cmps
sbb
add
inc
cmp
cmc
fcomp
aad
dec
pop
sub
cs
outs
cli
sbb
mov
bound
jnp
push
jle
sub
dec
xchg
test
inc
aas
mov
adc
cli
outs
xor
push
adc
cmc
repz
push
mov
cli
call
sti
and
jge
mov
pop
rol
and
pop
dec
shl
mov
retf
mov
cmp
ret
repz
ins
inc
jecxz
test
stc
jp
xchg
mov
mov
imul
setge
std
or
mov
mov
jbe
enter
pop
cmps
jg
add
clc
or
inc
xor
loop
xchg
pop
fs
dec
xor
iret
loop
stos
out
cli
fsubr
xchg
retf
add
mov
iret
imul
bound
sbb
jae
out
ss
adc
retf
xor
cli
loop
cdq
and
lahf
(bad)
mov
cmps
push
inc
and
in
sbb
xchg
pop
sar
cmps
add
dec
fist
adc
mov
add
mov
scas
inc
icebp
out
mov
jmp
or
imul
retf
mov
dec
lahf
adc
jbe
scas
adc
mov
mov
inc
mov
enter
(bad)
pop
xor
movs
in
sbb
add
cdq
sub
dec
pop
rcr
ins
out
mov
repnz
cmp
syscall
adc
inc
mov
call
sbb
mov
pop
push
sub
and
xor
out
mov
cmc
retf
mov
dec
cld
jmp
xchg
jmp
mov
pop
or
or
inc
call
sub
ins
pop
das
in
pop
pop
bound
mov
pop
imul
push
retf
ins
jle
adc
mov
dec
loopne
test
pop
aam
push
jbe
cmp
mov
adc
ss
jns
mov
out
mov
sbb
pop
push
add
das
sub
pop
and
lods
daa
push
pop
test
(bad)
cmp
into
and
jo
in
cmp
cmps
jl
mov
inc
jp
jmp
push
jmp
sub
adc
(bad)
mov
arpl
cwde
mov
jmp
(bad)
lods
shl
xchg
cmp
and
cld
leave
loope
ins
sub
inc
aas
les
ins
(bad)
sti
ret
leave
sub
pop
aaa
lods
adc
inc
push
in
dec
das
scas
int3
sbb
cdq
sub
pop
jecxz
repz
fnsave
scas
imul
repnz
sub
sbb
shl
pop
adc
jmp
test
(bad)
ret
sub
mov
adc
pop
xor
stc
(bad)
jbe
iret
aas
fidiv
push
jg
stos
leave
pop
shr
jae
fimul
cmps
fisttp
cwde
inc
ror
mov
xchg
adc
outs
into
imul
fdivr
pop
call
mov
lea
xor
adc
mov
cmp
sbb
inc
xchg
xor
cmp
pop
xchg
in
sti
xchg
sub
push
(bad)
pop
ja
adc
mov
jge
push
mov
pop
cmp
mov
idiv
stc
mov
pop
retf
inc
xchg
pop
jne
xlat
mov
into
and
push
jo
add
ret
fst
int3
cmp
aam
jmp
xor
fistp
mov
pop
movs
aad
out
ja
mov
aaa
xchg
outs
and
rcr
daa
or
jnp
push
cmp
adc
cmp
ins
inc
jg
daa
add
inc
mov
xor
cdq
outs
or
mov
dec
icebp
and
add
enter
in
in
or
pop
out
sti
mov
push
pop
mov
pop
stc
dec
out
lea
jmp
push
fst
and
jmp
mov
mov
and
arpl
sub
or
(bad)
lods
ja
out
pop
aam
mul
mov
repz
jge
jp
psubusb
mov
fscale
rol
and
aaa
push
retf
cdq
cmp
jge
cdq
sub
dec
lahf
and
retf
add
mov
pushf
jmp
test
xchg
cmp
cdq
sub
retf
(bad)
retf
imul
loopne
js
mov
add
mov
mov
retf
(bad)
sub
add
push
sub
fst
cli
pop
add
cmc
gs
test
pop
loop
push
fimul
daa
shr
jno
lea
and
retf
lahf
aad
inc
les
dec
jmp
test
neg
or
add
add
adc
xor
xchg
dec
cmp
mov
push
lock
cli
repz
sub
jns
adc
sbb
mov
mov
pop
push
jno
stos
mov
xchg
es
xor
cs
cmp
lods
push
lods
fild
icebp
test
mov
call
xchg
je
jo
clc
push
mov
(bad)
psllq
inc
popf
fwait
dec
xor
test
cmp
jb
setle
add
jmp
fidivr
or
gs
jge
xor
sar
in
stos
fdiv
stc
xchg
dec
fsubrp
dec
and
test
jg
sub
retf
fwait
pop
mov
and
and
mov
mov
dec
sbb
clc
xchg
cli
add
push
push
lods
inc
enter
inc
pop
push
into
shl
and
cmp
xlat
sbb
fnsave
std
stos
retf
xor
push
mov
inc
les
cmp
lea
in
shr
movs
xchg
aas
(bad)
int
mov
jnp
in
mov
movs
push
jl
mov
cmp
rol
mov
std
mov
lods
movs
add
or
cmp
lods
and
adc
loopne
in
loope
xchg
sub
sub
or
xlat
rol
int
sub
ja
push
mov
adc
mov
or
add
mul
jae
adc
popf
cmp
(bad)
mov
repnz
fidivr
xchg
sub
sahf
adc
push
mov
xchg
push
pop
repz
lods
mov
xor
pop
inc
pushf
add
cmp
cmp
fdiv
add
ja
je
push
inc
(bad)
pop
jp
add
sub
or
ret
(bad)
pop
imul
test
cmps
test
mov
or
add
inc
ins
push
loope
push
jle
push
and
mov
push
pop
add
cmc
mov
fbld
pop
shr
xchg
stc
and
xchg
scas
iret
mov
bound
pop
sar
mov
(bad)
fsub
outs
cwde
data16
mov
add
js
or
pop
dec
mov
fs
jbe
xor
add
xchg
dec
cld
and
pusha
ins
dec
or
pop
dec
dec
mov
add
into
and
jg
cld
in
xchg
mov
(bad)
es
pushf
cmp
mov
xchg
mov
ror
xchg
jne
mov
push
frstor
(bad)
mov
daa
xlat
or
aad
(bad)
jmp
cdq
imul
jmp
xor
mov
xor
mov
les
neg
inc
mov
bound
xor
xchg
sub
xor
cld
sub
mov
inc
test
jb
jae
mov
repz
test
dec
dec
ja
push
jge
fwait
ret
call
sti
mov
jo
inc
sub
arpl
(bad)
pop
mov
or
and
push
mov
mov
push
jae
and
or
repz
test
out
cli
movs
pushf
jge
jne
in
shr
js
cs
push
aas
inc
rcr
js
jge
or
retf
mov
loopne
dec
cwde
stos
enter
and
jne
xor
sbb
test
arpl
adc
loop
fidivr
cmps
cmp
add
(bad)
loopne
jecxz
ins
push
stos
inc
jg
mov
scas
cmc
(bad)
in
sar
xchg
pop
cmp
retf
dec
inc
inc
retf
inc
adc
mov
out
dec
pusha
clc
pop
inc
fisttp
dec
fisubr
jecxz
and
mov
xchg
sbb
rcr
or
mov
inc
test
(bad)
push
(bad)
aad
cmps
push
faddp
mov
bnd
int3
and
pop
or
cld
mov
icebp
mov
jns
test
adc
mov
and
pop
iret
or
outs
mov
or
fmul
mov
gs
hlt
ret
mov
lea
scas
add
cmps
mov
push
cmp
jl
adc
push
pusha
push
je
pop
xchg
cmps
imul
inc
int
test
add
jbe
daa
inc
cmps
loopne
leave
adc
xchg
xchg
sbb
push
mov
test
pop
arpl
aaa
loop
jmp
mov
ds
dec
add
stos
mov
xlat
dec
jnp
sbb
sbb
test
inc
push
mov
addr16
movs
lods
cs
jnp
pop
jae
out
mov
shr
stos
push
and
pop
cdq
loopne
rcr
mov
(bad)
dec
pop
sub
repz
(bad)
add
xchg
push
in
jmp
cld
stc
mov
lea
pop
dec
fiadd
jns
push
mov
dec
adc
dec
mov
int
fsubr
nop
fs
ss
xchg
jne
ficom
mov
cmc
out
(bad)
xor
jo
loope
sub
int
xchg
mov
movs
lods
sahf
fistp
mov
sbb
cmps
xchg
int3
inc
xchg
loopne
stos
movq
scas
jmp
outs
(bad)
mov
inc
pop
mov
lods
das
ret
push
lods
jg
fwait
sti
je
(bad)
adc
push
mov
mov
mov
stos
sbb
or
rol
or
sbb
pop
mov
mov
into
sbb
and
ret
(bad)
mov
cli
pop
lods
sbb
push
pop
mov
or
int
leave
add
mov
adc
outs
mov
xchg
ror
push
out
push
xor
pop
inc
mov
(bad)
xchg
hlt
loopne
outs
cdq
rol
cmps
test
(bad)
fld
jmp
loope
push
div
es
inc
or
and
sbb
xor
movs
lahf
adc
dec
push
stc
fimul
test
fsub
js
dec
push
mov
fdivr
inc
gs
xlat
jmp
push
frstor
mov
leave
(bad)
jl
push
loope
and
in
pop
mov
outs
add
retf
(bad)
mov
xor
movs
pusha
ds
cmp
cmps
popa
popf
ds
mov
mov
bound
jp
popw
push
sub
stos
test
fisub
sbb
push
mov
in
push
(bad)
clc
out
enter
pop
fdivr
jl
mov
into
ins
push
lea
ror
test
stos
test
push
xchg
mov
jle
mov
mov
inc
inc
fs
cmp
es
mov
ins
inc
sub
push
jnp
add
(bad)
mov
neg
aas
inc
daa
nop
cmp
mov
adc
out
inc
sub
aas
inc
retf
cmp
mov
sbb
sub
xchg
(bad)
xchg
mov
ss
stos
jnp
fcmovu
pop
pop
popa
cwde
push
inc
bound
adc
pop
stc
push
js
jae
pop
aas
fs
push
lods
nop
(bad)
mov
jo
cli
sti
or
xor
jb
push
imul
jb
not
mov
mov
test
mul
jno
enter
sti
cmp
push
adc
sbb
inc
xchg
adc
and
sbb
outs
test
stc
dec
inc
jne
sbb
aaa
pop
pop
sbb
adc
icebp
mov
add
add
xchg
ret
mov
dec
push
or
jns
call
push
nop
and
les
mov
adc
pop
jb
and
cmp
mov
leave
or
scas
mov
jne
jne
sub
jbe
mov
popf
push
and
cld
or
rol
addr16
imul
and
repnz
xor
lahf
push
lods
clc
adc
mov
mov
mov
or
rol
jae
clc
fs
dec
popa
popf
add
jnp
loopne
sub
fcmovb
pop
mov
mov
sbb
mov
mov
push
je
imul
dec
cmp
mov
stos
jmp
fnstenv
xlat
int3
xchg
push
(bad)
out
test
sbb
push
mov
sbb
and
adc
jnp
cmp
dec
or
test
dec
push
xor
test
xor
mov
jae
cdq
and
ins
ret
repz
push
xor
pop
sbb
retf
mov
sar
or
sub
inc
and
movs
inc
arpl
hlt
xchg
dec
lea
clc
mov
add
mov
xlat
mov
test
mov
jno
sbb
cmp
clc
(bad)
jns
mov
jmp
mov
xor
adc
(bad)
adc
mov
lods
(bad)
stc
mov
xor
jmp
loope
sub
xor
or
ror
ins
retf
int
int
inc
jo
dec
stos
ficomp
and
jg
xchg
daa
nop
push
scas
lock
loop
stos
mov
mov
mov
shl
push
fcomp
inc
rcl
(bad)
mov
out
dec
sub
or
pop
out
iret
rcr
lahf
inc
pop
fcom
iret
jae
stos
test
imul
sub
repz
jmp
shl
les
shl
mov
sub
sub
or
cmps
fmul
mov
rcl
test
adc
ss
xchg
or
leave
and
shl
pop
ficom
xlat
xor
movs
push
jnp
pusha
test
xchg
push
jae
and
lahf
sti
xchg
retf
repnz
xor
or
sbb
or
ins
loop
(bad)
pop
daa
ins
shl
adc
ja
push
push
jno
in
sahf
pop
mov
inc
jno
jo
push
sub
stos
hlt
rcr
imul
xlat
inc
cmp
mov
mov
mov
pop
adc
jb
out
pop
add
repz
mov
lods
mov
mov
shl
cmc
(bad)
rol
push
pop
mov
aad
ja
push
xor
aas
cmp
pop
or
lock
je
push
or
push
outs
mov
xor
mov
pop
add
sub
pop
cmps
sbb
cdq
mov
push
inc
xchg
pop
test
data16
pop
push
idiv
push
adc
mov
fsubr
(bad)
push
pop
inc
(bad)
rcr
xchg
pop
rcr
jp
sbb
loopne
xchg
out
popf
shl
outs
pop
(bad)
pop
jecxz
mov
outs
inc
aaa
das
adc
test
xchg
movs
hlt
mov
out
nop
mov
mov
retf
sar
mov
sub
push
imul
les
hlt
enter
mov
or
in
or
in
inc
mov
rcr
xor
test
cli
jecxz
mov
or
jmp
lods
fsubr
or
in
out
jbe
xor
add
shr
xchg
mov
mov
(bad)
or
cmp
or
adc
fbld
leave
dec
ficomp
daa
xchg
hlt
mov
es
jge
mov
or
mov
mov
pop
mov
addr16
movs
ja
(bad)
stc
mov
clc
jb
add
xor
fst
(bad)
sub
xlat
xchg
jnp
adc
mov
cmp
dec
ror
mov
cmp
mov
mov
stos
xor
bound
push
add
shr
inc
sar
sar
dec
push
bound
inc
pop
ins
les
aaa
popa
mov
mov
mov
and
out
xchg
mov
pop
shl
push
push
pop
or
xlat
test
ds
dec
aad
mov
sub
shl
dec
mov
out
(bad)
push
hlt
test
test
aad
adc
lods
mov
stos
fiadd
adc
cmp
adc
xchg
xor
jle
adc
aaa
xchg
scas
lock
adc
push
and
inc
add
imul
xor
loope
pop
movs
xor
pop
inc
fwait
push
push
mov
outs
mov
hlt
call
popa
xchg
imul
idiv
mov
cmc
and
cmp
cs
cmps
mov
(bad)
mov
pop
call
pop
dec
rcl
mov
ret
shr
mov
cld
xor
sbb
ins
push
aad
repnz
in
jo
or
add
xor
call
shl
mov
daa
adc
sbb
scas
out
jl
sub
loopne
test
in
mov
push
mov
add
retf
jns
ja
sbb
test
fist
xchg
add
cmps
xchg
cld
imul
push
mov
fild
test
pop
inc
pop
bound
adc
and
inc
lods
jge
pop
push
mov
dec
cmp
loope
and
cmp
xor
mov
(bad)
pop
push
dec
jb
fisubr
or
sbb
dec
jge
shl
repnz
mov
mov
hlt
in
mov
xchg
fsubr
fidivr
push
outs
fsub
in
cs
jmp
mov
inc
lea
push
adc
lods
loop
dec
lock
mov
push
mov
outs
inc
or
ins
jl
cmc
or
aaa
rcl
mov
stos
and
cmps
in
lahf
out
stos
pop
mov
or
xchg
cwde
push
xor
fadd
loop
loopne
scas
cwde
fwait
adc
arpl
jmp
push
cmps
outs
jne
mov
jle
ds
cs
xor
jnp
(bad)
mov
mov
outs
add
dec
mov
cmp
xchg
add
inc
dec
cdq
scas
adc
(bad)
mov
pop
pop
sbb
fbld
cmp
jle
push
mov
aam
inc
pmaxsw
je
sbb
ins
or
add
popf
pusha
in
and
inc
loop
jno
test
data16
sbb
xor
movs
push
je
add
ja
dec
push
xchg
adc
xor
fcmovbe
pop
xchg
mov
cli
es
xor
pop
fldenv
push
ja
cmp
mov
inc
and
test
mov
adc
nop
mov
mov
xor
test
pop
stc
fistp
outs
jle
inc
adc
loop
hlt
xor
and
cmps
jbe
daa
and
in
movs
call
and
and
pop
push
jnp
jo
adc
push
adc
pop
xor
loopne
jae
sub
into
inc
dec
outs
outs
call
or
test
data16
jmp
pop
mov
xor
cmp
sub
cs
cdq
ins
push
lahf
or
mov
xchg
jecxz
jo
cli
test
pushf
jecxz
xor
pop
scas
loopne
push
cwde
add
ds
shr
and
loope
and
adc
(bad)
les
fsub
loope
addr16
cmp
xchg
inc
cmp
pushf
xchg
mov
or
xchg
aad
in
invd
fld
repnz
pop
ret
jne
stc
add
cmp
jmp
add
add
or
sbb
push
dec
lds
xor
push
jge
mov
test
pop
mov
arpl
add
jnp
mov
mov
in
nop
movs
push
outs
jae
or
push
fldcw
popa
popf
add
adc
mov
js
imul
cmp
lods
clc
or
mov
adc
cmp
dec
push
sar
mov
cs
mov
cmp
adc
xchg
and
fadd
in
fdivp
mov
les
sbb
xor
sub
mov
imul
repnz
std
xor
sub
push
mov
or
jae
jbe
sbb
aam
xchg
add
pop
aaa
and
push
clc
push
mov
adc
jnp
data16
mov
icebp
ins
aam
xchg
idiv
shr
inc
out
jno
pop
call
dec
fwait
push
cmc
sbb
dec
pop
repnz
inc
mov
rcl
enter
into
scas
into
adc
pop
jnp
sbb
xchg
cdq
jmp
stos
fwait
pop
mov
sbb
xchg
aas
mov
sbb
cmp
mov
push
nop
inc
call
sbb
sbb
sahf
pop
iret
dec
xor
call
jne
aas
ins
lods
dec
mov
and
pop
jmp
fadd
add
jno
rcr
sbb
jbe
xchg
push
stos
mov
inc
test
push
push
adc
mov
fsubr
mov
mov
test
in
in
xchg
cmp
or
or
cmp
inc
push
stc
out
xchg
push
xor
inc
jnp
retf
inc
push
icebp
daa
and
dec
cmp
call
mov
mov
fld
das
pop
and
mov
add
pop
in
je
and
jle
pop
ja
sub
jecxz
sub
inc
shl
and
rol
or
sbb
cmp
mov
repnz
inc
xor
ret
add
mov
xor
push
icebp
popa
and
push
mov
jp
xchg
movs
loope
movs
mov
inc
add
adc
aaa
sub
cmp
dec
xor
stc
or
inc
sbb
fld
enter
mov
jae
add
movs
xor
mov
and
push
cdq
mov
or
pop
push
xchg
in
gs
add
test
ins
popa
sub
rol
inc
shr
call
cli
mov
sub
cmps
mov
mov
addr16
cdq
jle
cld
ss
bound
(bad)
mov
inc
imul
mov
or
inc
add
jle
adc
mov
mov
jg
inc
mov
int3
push
jecxz
das
dec
dec
and
icebp
dec
xchg
cmp
jo
jbe
jge
test
stc
ss
lods
cli
sbb
xchg
sti
pushf
add
pop
dec
xor
lahf
jg
sub
jg
pushf
mov
jae
xchg
jbe
aam
and
leave
pop
sub
push
dec
(bad)
xchg
add
sub
push
push
lea
jbe
mov
xchg
mov
xchg
adc
ffree
je
retf
leave
and
out
mov
jae
jge
je
pop
rcr
pop
scas
or
mov
mov
push
inc
dec
mov
cmp
(bad)
outs
mov
mov
or
push
movs
fwait
out
aas
push
mov
pop
pusha
jnp
mov
out
or
into
inc
movs
xchg
cmps
push
xchg
sar
dec
or
nop
mov
xchg
xchg
jno
popa
cwde
add
data16
imul
cmp
sub
sub
imul
mov
dec
and
sar
in
movs
(bad)
aam
neg
cwde
mov
mov
mov
cs
es
jno
test
mov
dec
fcmovnb
xchg
movs
jmp
mov
or
(bad)
fdiv
std
mov
sub
cwde
or
dec
add
(bad)
push
cmp
mov
xchg
jmp
sub
dec
inc
popf
mov
inc
adc
jp
mov
cmps
push
inc
in
inc
mov
push
popa
xlat
push
sub
add
out
xchg
je
cdq
sub
jecxz
mov
sub
mov
sub
lahf
out
daa
mov
imul
aas
into
pushf
or
sahf
mov
pop
push
fisub
clc
shl
jae
imul
xchg
stos
pop
adc
les
mov
mov
and
popf
sti
dec
add
cdq
fmul
xchg
dec
and
jmp
daa
adc
adc
mov
add
shl
cdq
scas
in
popf
mov
push
pusha
(bad)
f2xm1
nop
mov
mov
pop
test
ret
es
popa
pushf
(bad)
je
or
jno
(bad)
in
sub
sti
lahf
cmp
jp
and
mov
sub
stos
mov
je
xor
inc
mov
dec
movs
and
adc
push
cli
lock
stos
push
sbb
jno
push
mov
div
sbb
(bad)
lock
aad
test
in
adc
inc
push
(bad)
mov
nop
add
ins
ret
jae
popf
cmp
push
pop
push
push
ret
in
pop
jns
in
adc
(bad)
in
repz
lods
ds
test
fdiv
sbb
loopne
and
(bad)
push
xchg
and
jle
pop
shl
rol
mov
arpl
mov
out
iret
jge
add
pop
cld
mov
mov
pop
hlt
inc
sub
cmc
jo
popa
fdivr
sbb
bound
mov
jbe
cmp
adc
adc
cmp
fstp
push
mov
and
or
in
aas
and
xor
nop
push
into
retfw
fsubr
lods
ins
retf
mov
sub
int3
jmp
lock
lock
loop
inc
sub
jb
push
adc
cmps
mov
pop
cmps
daa
clc
movs
sti
push
xchg
push
mov
push
cmp
mov
dec
fadd
pop
mov
jno
sbb
add
xor
ret
loope
cmp
push
repz
retf
jg
pusha
inc
xchg
call
sti
test
or
or
xchg
pusha
repnz
inc
clc
jae
push
jp
xor
inc
sub
mov
cmp
aam
xchg
test
cmp
ja
ja
mov
(bad)
lds
pop
xchg
cmc
push
fild
push
mov
push
mov
dec
lahf
push
xchg
push
fdiv
in
outs
cli
and
(bad)
ins
mov
shl
fsub
stos
lahf
inc
clc
xchg
sbb
cmp
xchg
sti
jnp
mov
dec
sub
movs
sub
(bad)
js
movs
xor
js
fimul
in
jae
adc
jno
hlt
ror
sub
jg
or
jl
retf
in
sbb
mov
xchg
scas
adc
add
and
nop
push
daa
je
inc
adc
fstp
(bad)
hlt
cmp
add
xchg
sbb
sbb
cs
(bad)
icebp
in
mov
ds
xchg
pop
es
js
pop
pop
jne
cmp
out
mov
movs
sbb
jl
sub
in
inc
fisub
cmp
xor
js
add
into
test
pushf
or
imul
mov
in
mov
loop
ds
inc
adc
xchg
retf
and
fwait
xchg
in
mov
fsubr
push
repz
ds
aas
add
adc
mov
and
sbb
adc
mov
ss
pop
hlt
pop
or
cdq
add
cdq
(bad)
pop
xchg
out
cmp
mov
xchg
xchg
inc
mov
push
popa
xor
mov
(bad)
cwde
adc
jge
not
sti
dec
dec
jp
retf
pop
xchg
push
mov
mov
mul
inc
out
jecxz
mov
neg
int
xchg
mov
fwait
les
cmp
aam
adc
lods
inc
scas
and
adc
test
lods
int3
clc
pop
fisttp
add
add
dec
and
js
xchg
rcl
into
mov
aam
dec
bound
mov
call
mov
mov
inc
push
sbb
popa
fcom
out
aad
xor
and
neg
adc
(bad)
(bad)
les
out
push
adc
repz
in
jge
bound
add
jo
pop
inc
scas
sbb
pop
push
loope
mov
arpl
xchg
(bad)
scas
add
sbb
sahf
and
arpl
xor
xor
fnstenv
sbb
dec
retf
stos
sti
push
xchg
inc
push
or
mov
loope
push
sahf
(bad)
mov
shr
mov
cmp
push
imul
add
or
push
repnz
hlt
rol
add
daa
mov
nop
lods
adc
pop
aad
sbb
outs
mov
hlt
pop
ds
mov
push
push
jb
or
ins
push
inc
(bad)
jo
push
mov
ret
js
lods
xor
mov
jb
mov
pop
outs
xchg
xchg
call
mov
pop
jp
or
mov
popa
(bad)
xor
out
cmp
shl
adc
arpl
xchg
push
outs
out
xor
pop
(bad)
in
cmp
ins
jge
test
add
cmp
std
adc
pusha
das
jo
scas
sub
jmp
dec
adc
xor
or
jecxz
(bad)
loopne
pop
lods
call
adc
push
pop
adc
test
js
adc
mov
in
fs
inc
or
pop
scas
cmp
xchg
mov
jnp
lahf
push
cmp
mov
mov
std
push
adc
pop
test
ins
int
sbb
es
mov
in
(bad)
adc
pop
das
sbb
pop
lods
or
jb
xchg
xchg
adc
int
adc
movs
sub
and
sub
(bad)
das
mov
mov
cmp
mov
xchg
clc
movs
ss
imul
jmp
test
loop
outs
sub
mov
or
xchg
sbb
pop
cmp
(bad)
into
dec
mov
nop
or
push
xor
jno
jmp
jmp
sbb
jnp
repnz
cli
addr16
fs
jge
movs
bound
dec
cmp
movs
adc
fs
sub
mov
jbe
movs
in
test
stos
pop
fwait
add
mov
mov
push
outs
dec
mov
retf
fidiv
push
hlt
cmp
ja
push
ja
inc
xchg
sbb
cmp
sbb
pop
push
xor
int
cmp
or
leave
lods
cmp
aad
cmp
pop
ret
inc
inc
adc
(bad)
aaa
popf
push
mov
cmps
pop
sub
adc
jge
mov
and
xchg
adc
add
fmul
cmp
mov
pop
add
cmp
repz
push
mov
xor
jne
push
inc
repnz
sbb
push
mov
iret
ss
mov
pop
dec
gs
mov
push
mov
cmp
retf
movs
add
mov
call
mov
lock
xchg
or
and
sub
in
push
add
jnp
pop
mov
inc
xchg
shl
stos
mov
fs
mov
hlt
push
lods
cmp
mov
mov
jl
cmps
ins
add
pop
ret
test
or
or
popa
jl
mov
pusha
fbld
inc
add
push
jge
inc
mov
dec
outs
mov
cmp
int
dec
scas
popf
repnz
stos
sub
xchg
pop
fdivr
mov
mov
popa
sti
xor
in
jno
nop
inc
lock
into
jle
pop
jns
daa
or
ja
ret
shr
loopne
cdq
test
scas
push
popf
pop
and
mov
movs
movs
(bad)
ds
inc
in
sbb
inc
xchg
pop
int3
test
jmp
out
(bad)
xchg
inc
jle
sub
iret
div
sar
jae
inc
pushf
fsubr
pop
push
mov
sbb
lock
and
imul
and
out
fs
jl
xchg
int
jmp
daa
pop
mov
inc
pop
imul
fisubr
in
sbb
clc
sub
dec
pop
sub
sbb
or
repnz
in
lods
cmp
push
xor
xchg
stos
jnp
cmp
mov
and
cmps
fist
pop
pmaxub
cmps
popf
or
sub
adc
dec
add
adc
rcl
iret
inc
and
jmp
shl
shl
xchg
fidiv
(bad)
adc
sub
shr
jp
mov
jno
push
dec
push
cdq
je
push
into
adc
je
xor
inc
pop
aad
(bad)
fld
outs
aad
fldenv
retf
mov
dec
jno
lahf
ja
push
sub
loope
sti
cli
fwait
mov
xlat
hlt
out
imul
loope
test
(bad)
xlat
fld
ror
nop
mov
fld
out
mov
cwde
loope
daa
push
ins
test
loopne
ds
divps
lds
xchg
xchg
pop
jns
add
and
inc
mov
fsubr
jae
loopne
scas
cwde
std
sbb
addr16
test
clc
cwd
and
ret
jb
call
add
test
inc
adc
loope
push
punpckhdq
pop
call
inc
dec
cwde
in
jbe
adc
ficomp
idiv
rcl
or
stc
push
inc
jecxz
dec
imul
push
pop
in
addr16
sbb
mov
mov
mov
rcl
iret
fstp
ja
xchg
cli
inc
call
cmp
repnz
and
sahf
pop
out
retf
shl
xor
fs
nop
movs
mov
mov
stc
cmps
xor
out
xor
pop
xor
jb
in
std
mov
xchg
das
and
and
pop
into
jne
mov
ins
ins
nop
jecxz
pop
mov
ins
xor
mov
jno
dec
in
mov
jmp
test
inc
sahf
repnz
(bad)
ss
adc
pop
mul
mov
ins
add
aas
mov
sbb
out
repz
in
add
test
push
cdq
jecxz
mov
or
retf
mov
xchg
jo
add
fmul
add
lock
into
icebp
sbb
push
jmp
dec
cs
je
ret
xor
mov
pcmpgtb
call
xchg
add
test
xchg
sbb
lods
dec
and
jl
add
xchg
mov
ret
xchg
add
and
add
(bad)
punpckldq
neg
pop
sub
fsub
mov
and
ret
fisttp
call
mov
fsqrt
es
mov
fsub
push
dec
xchg
mov
cmp
or
jl
test
inc
jne
cmc
dec
leave
inc
xchg
repnz
mov
xor
add
jo
jmp
loop
xchg
(bad)
jns
jbe
stc
dec
adc
inc
and
mov
mov
in
mov
mov
hlt
adc
fsub
jno
or
inc
popf
mov
mov
(bad)
in
gs
pop
cmp
jbe
outs
fdivrp
gs
scas
stos
sub
jecxz
fs
adc
fld
or
sub
jno
imul
out
add
std
mov
push
pop
sub
push
in
jge
retf
fdivr
mov
push
lds
shl
pslld
inc
and
mov
ds
add
mov
cmp
jl
mov
cmps
out
xor
mov
mov
cmp
adc
add
jmp
cdq
sbb
inc
jp
lock
loope
out
scas
sbb
mov
mov
jg
inc
inc
mov
and
test
sub
les
jmp
or
add
imul
or
fs
imul
sub
xchg
push
jns
lahf
loopne
jle
add
ror
retf
das
cs
cmp
sahf
push
push
jo
ror
sub
pop
iret
cmp
mov
inc
das
mov
xlat
pushf
div
mov
loop
(bad)
in
mov
das
mov
leave
mov
pop
jl
push
or
push
mov
mov
or
pop
sub
das
adc
push
fstp
rol
imul
jae
ror
jbe
sbb
push
repnz
dec
imul
pop
test
cmp
push
dec
mov
or
sbb
dec
out
fdivr
push
sub
jno
add
shr
fwait
cwde
les
retf
ds
fcmovb
loop
xchg
(bad)
add
jnp
retf
adc
arpl
pop
aas
mov
ror
pop
push
or
and
hlt
popf
ret
mov
aas
and
xchg
inc
mov
ins
sub
test
loope
dec
pop
js
adc
push
nop
call
xchg
pop
push
aad
or
fsubr
outs
test
cli
adc
xchg
rcl
ja
jb
punpckhdq
wrmsr
sbb
pop
push
out
repz
stos
fisttp
or
loope
(bad)
mov
aad
pop
inc
cld
repz
xchg
inc
rcr
fs
pop
push
cmp
jmp
add
cmps
jecxz
mov
xor
push
test
jmp
push
jmp
fisttp
in
or
gs
sub
fbstp
lock
cmps
jl
retf
mov
stos
mov
xchg
into
jle
sub
push
mov
iret
dec
jle
mov
movs
iret
inc
adc
cdq
les
repnz
cwde
add
enter
call
ds
sti
adc
mov
pop
lea
mov
fsub
fmul
jae
push
add
dec
lsl
test
aaa
sbb
into
xchg
jg
dec
and
push
icebp
les
pop
mov
cmc
xor
call
jo
jb
mov
(bad)
cmp
js
adc
iret
(bad)
(bad)
out
lds
add
rcr
mov
ja
iret
out
jp
or
jne
arpl
xchg
inc
iret
push
mov
leave
mov
jae
push
xchg
das
push
sti
cmp
mov
(bad)
cmp
inc
movs
call
mov
jp
jo
mov
icebp
fcomp
xor
cwde
add
xchg
mov
hlt
enter
mov
enter
mov
dec
fwait
push
xchg
mov
ja
icebp
mov
push
mov
loop
mov
cmp
(bad)
or
adc
test
jg
aas
and
fstp
mov
add
scas
jle
xchg
das
mov
add
ja
mov
cmp
adc
loop
outs
push
push
pop
or
cmp
mov
mov
movs
sub
jmp
cmp
iret
cs
imul
sbb
xor
jne
daa
outs
ret
push
imul
repnz
xor
mov
js
xor
test
mov
es
jge
mov
adc
scas
loope
mov
neg
cmp
lock
sub
fbstp
dec
stc
sti
imul
hlt
xchg
add
and
sbb
in
mov
gs
mov
call
jmp
ss
inc
dec
push
cmp
ret
aam
jnp
dec
fcompp
dec
loope
les
seto
dec
xor
inc
cmp
cmp
xchg
test
(bad)
pushf
repnz
sahf
dec
jmp
jge
dec
sbb
mov
dec
mov
neg
int
mov
mov
std
push
test
popf
mov
or
fnstcw
inc
test
int
pop
mul
mov
add
lea
dec
out
gs
pop
aad
sbb
nop
bound
movs
xchg
rol
in
sub
test
xor
stc
pop
mov
daa
xchg
push
xchg
pop
test
fldl2t
add
into
cmp
mov
jl
neg
cmp
fcom
stos
push
xchg
mov
xchg
popa
lods
push
fwait
(bad)
jle
aas
inc
std
xor
test
dec
or
ss
mov
scas
ja
fs
mov
sti
ficomp
dec
leave
fdivr
dec
jno
call
push
(bad)
xor
adc
jle
inc
dec
mov
je
in
shl
xchg
ja
cmps
cmp
mov
bound
jbe
hlt
fisub
mov
lods
lods
dec
dec
ss
lods
ins
mov
out
lods
xchg
das
call
cs
or
daa
(bad)
inc
lods
mov
inc
pop
test
imul
and
pop
test
lock
dec
add
sbb
pusha
js
lea
xchg
sbb
lahf
retf
xor
enter
inc
xchg
(bad)
fnsave
sub
cmp
and
pop
pop
sub
repz
adc
and
mov
pop
mov
repnz
call
and
mov
xor
lods
cmps
and
or
jge
or
or
loopne
pop
call
loop
xchg
push
cmps
push
(bad)
jp
mov
test
div
push
sti
dec
call
nop
scas
xchg
mov
and
aas
imul
pusha
retf
retf
add
xchg
into
pop
xacquire
push
repnz
rcr
push
fs
fild
fimul
inc
cwde
pop
pop
ror
add
jecxz
and
xchg
in
sub
es
sbb
fwait
push
xchg
shl
push
(bad)
scas
in
ins
fisttp
popf
mov
mov
push
out
add
xchg
leave
sub
mov
sbb
aam
popaw
scas
dec
pop
gs
pop
inc
or
sub
mov
push
popf
or
dec
shl
inc
out
xchg
and
add
push
or
std
push
icebp
js
outs
dec
cld
stc
cmp
sahf
jp
idiv
dec
in
ss
cmp
nop
fist
movs
fdiv
xor
cmp
and
cmp
shr
aad
(bad)
bound
hlt
ja
fwait
mov
in
xchg
imul
inc
mov
xor
dec
out
in
xchg
data16
cmp
sar
sub
inc
lods
movs
call
cmp
mov
sbb
jecxz
sub
cmp
push
out
test
cmps
ins
cmc
inc
push
xor
mov
fcmovnbe
push
push
adc
fist
lea
mov
lds
mov
rol
mov
cld
jge
movs
sub
pushf
push
std
pop
mov
es
les
mov
sub
or
rol
hlt
js
enter
rcl
addr16
cdq
popf
add
mov
or
es
inc
int3
or
rcr
and
iret
(bad)
mov
(bad)
push
mov
jle
shr
loop
push
push
fs
cdq
pop
out
mov
and
push
pop
aas
data16
enter
das
mov
inc
mov
mov
push
xchg
cmp
rcl
or
sub
ins
sti
(bad)
repz
or
add
hlt
xchg
push
stos
mov
enter
(bad)
mov
or
cmp
pop
dec
mov
dec
pop
enter
mov
mov
cdq
and
xlat
scas
mov
lods
test
push
daa
loopne
out
push
mov
push
(bad)
cmps
jbe
cmp
out
lods
dec
push
clc
(bad)
pushw
push
mov
push
std
lods
mov
leave
es
dec
push
push
mov
and
and
pop
xchg
enter
repnz
or
mov
or
mov
bound
mov
shr
inc
add
jmp
movs
sbb
jo
jecxz
fstp
std
pop
push
xchg
fidiv
ds
sbb
push
popf
mov
idiv
jno
jge
popf
bound
or
xchg
fild
outs
pushf
xchg
les
and
jecxz
push
jmp
cmp
dec
jb
mov
stos
iret
mov
cmp
sub
mov
out
mov
inc
or
jb
lods
fimul
xchg
jmp
gs
es
jne
nop
shl
sbb
cmp
sub
mov
pop
mov
add
jge
sti
jo
xchg
push
xor
push
mov
into
icebp
jle
dec
mov
xchg
gs
sub
ja
xchg
sub
out
jnp
test
lods
inc
je
cmp
cmps
scas
gs
nop
in
call
mov
scas
xchg
pop
movs
jno
push
adc
mov
inc
xor
mov
pushf
jecxz
mov
outs
test
pop
cmp
cmp
loope
je
jnp
loopne
and
pop
js
xchg
aas
popf
movs
push
xchg
sbb
adc
cmp
push
xchg
add
inc
dec
xlat
iret
sti
pop
and
and
mov
pop
addr16
movs
rcr
mov
gs
js
and
xlat
les
out
mov
or
std
test
jae
rcr
sub
inc
mov
sbb
jae
lods
(bad)
add
(bad)
push
(bad)
xor
or
std
rcr
data16
fist
cmp
iret
inc
jno
sbb
jmp
cs
shl
les
or
test
push
jb
cmp
pop
lods
lods
loopne
(bad)
std
les
repz
mov
or
and
push
stos
lea
add
add
ret
fsub
jle
pop
cmp
push
or
pop
fidiv
popf
aad
inc
test
pop
adc
cs
mov
push
in
and
out
sbb
lods
jl
inc
jge
ret
xor
add
loop
push
rol
cmp
callw
out
adc
(bad)
aas
xlat
inc
fbstp
hlt
imul
or
add
shl
popf
xor
cmp
imul
mov
pushf
lods
sar
fld
pop
add
mov
pop
pop
fistp
mov
and
sti
push
and
fdiv
push
jp
pusha
inc
add
jns
and
xor
in
scas
push
dec
jno
mov
cmp
add
fadd
push
jae
cmps
inc
std
(bad)
mov
pop
pushf
inc
ins
mov
ss
dec
ins
xchg
push
int
sbb
call
inc
add
sub
ret
sub
xor
xchg
push
jecxz
or
out
pop
mov
das
mov
sub
cs
aam
ja
mov
mov
mov
call
dec
ror
les
(bad)
pusha
mov
or
call
pop
sbb
push
and
xor
cmp
popf
popa
mov
sub
adc
push
push
cli
sbb
jmp
jle
pop
pop
mov
lods
call
in
(bad)
int3
xor
inc
or
mov
repnz
cmp
loopne
inc
add
cdq
repnz
stc
mov
xor
cwde
adc
fdiv
ret
aaa
add
cli
test
dec
imul
mov
pop
mov
push
dec
clc
mov
int
jmp
add
out
sbb
out
sub
mov
sub
mov
inc
jge
xchg
test
mov
dec
pop
xor
and
sub
nop
hlt
or
bound
jno
mov
frndint
or
cmp
mov
sub
fwait
xor
mov
pushf
jg
imul
int
aas
and
push
repnz
pop
and
push
popa
mov
jo
and
push
xchg
or
pop
inc
xor
retf
mov
pop
and
into
cmp
jo
mov
mov
pop
jne
movs
test
pusha
daa
out
lods
ss
popf
mov
cmps
movs
nop
mov
enter
js
ss
xor
push
jne
sar
jo
ret
ret
xor
loope
sbb
push
xchg
inc
push
sbb
ror
mov
push
or
xchg
and
mov
rcr
pusha
sub
arpl
pop
inc
aaa
add
sub
jmp
(bad)
pop
int3
dec
xchg
not
pop
dec
jmp
mov
sbb
sbb
lds
clc
jae
inc
cmp
mov
jns
ja
hlt
jmp
imul
stos
cli
adc
lods
push
xchg
mov
mov
dec
push
inc
fmul
pushf
(bad)
sbb
mov
add
add
jns
mov
xchg
jmp
ins
je
iret
jmp
icebp
fild
dec
jns
in
cdq
or
cmp
push
dec
test
mov
nop
add
ds
and
aam
dec
fstp
xchg
cmp
fcom
arpl
dec
(bad)
fild
sbb
adc
adc
and
or
xor
jp
sub
imul
adc
aaa
mov
stos
add
fisttp
push
xlat
lahf
mov
cmp
sahf
retf
ja
adc
mov
sti
mov
fist
into
shl
in
sub
aam
fnstcw
sbb
outs
xchg
retf
mov
push
clc
xor
push
or
arpl
shl
inc
jnp
pop
sub
test
shr
pop
fimul
in
jmp
dec
mov
mov
and
test
fbstp
iret
add
iret
mov
cdq
sbb
pop
lea
out
shl
pop
inc
sti
or
jns
sbb
add
add
push
test
jge
in
aas
xor
or
lahf
(bad)
dec
jmp
test
lock
pop
xchg
inc
add
pop
iret
sbb
mov
pop
in
movs
sub
add
jae
pushf
nop
das
xor
jmp
mov
cmps
in
inc
cs
loopne
test
mov
adc
jne
fcom
mov
js
cli
ror
cmps
pop
jle
inc
retf
pop
(bad)
and
and
add
sbb
adc
xchg
cmp
cmps
mov
into
ss
ret
sub
xlat
xchg
fld
and
imul
aad
add
enter
fbstp
adc
mov
aam
mov
mov
fcmovb
arpl
or
or
xchg
jl
(bad)
pop
gs
int
call
xor
sbb
adc
stos
icebp
sar
ins
test
(bad)
in
and
je
cmp
dec
or
vmread
scas
shr
pop
dec
cmp
fwait
scas
mov
xchg
push
cdq
or
sbb
mov
hlt
xchg
or
fs
stc
sbb
gs
out
xor
cmp
xchg
pop
mov
aaa
sub
pop
shl
xchg
xor
inc
hlt
xchg
outs
inc
gs
or
aad
xchg
xor
jb
scas
cmp
mov
ins
jno
test
mov
cmp
mov
lods
pop
push
push
int3
mov
push
jno
jmp
loop
xor
mov
or
cmp
repnz
push
(bad)
xor
fst
sub
ja
jnp
mov
and
jbe
shl
mov
push
call
in
sbb
mov
pop
add
aas
sub
jl
fwait
in
jmp
adc
pop
retf
jno
push
cmp
rcr
dec
retf
cmp
cdq
gs
xor
push
stos
pusha
fwait
adc
sub
and
mov
xchg
cmps
xor
es
mov
rcl
xchg
pop
out
fwait
fwait
sub
cmp
inc
dec
loopne
sbb
pop
adc
xchg
ins
icebp
dec
jmp
icebp
cmc
imul
fsubr
in
clc
das
les
mov
stos
cs
mov
arpl
dec
shl
mov
repnz
xor
cmp
(bad)
mov
lea
mov
xlat
jmp
dec
enter
pop
xchg
idiv
mov
jno
bound
loop
stos
mov
and
adc
fs
cmp
test
xchg
fld
xchg
mov
add
sbb
xchg
fcmovnu
retf
and
push
pop
(bad)
rcl
sar
or
je
sub
outs
stos
jmp
sub
sub
test
pop
popa
and
dec
add
inc
lock
dec
(bad)
scas
(bad)
inc
retf
sbb
mov
data16
daa
out
imul
inc
add
bnd
dec
pop
sbb
popf
inc
dec
mov
inc
cwde
mov
imul
push
push
out
test
jg
sbb
cmps
je
data16
sbb
lea
jge
mov
nop
mov
mov
(bad)
or
ins
cmp
das
cmps
test
push
popa
mov
sbb
cmp
fdivr
xchg
adc
cs
jne
xchg
cli
imul
adc
and
dec
sub
cld
push
pushf
adc
mov
or
push
data16
sahf
pop
rep
(bad)
movs
cmp
ret
mov
or
mov
mov
mov
mov
loope
sub
aad
into
lock
repz
pusha
jecxz
leave
clc
cmp
jg
sbb
cmps
(bad)
int
xlat
inc
(bad)
dec
(bad)
mov
mov
mov
shl
cmp
dec
pop
inc
jb
xchg
lods
js
jp
xor
and
sar
sbb
shl
inc
ja
mov
or
mov
xor
retf
mov
pop
nop
pop
je
(bad)
jl
sub
out
mov
ret
sub
cld
xlat
jmp
fst
outs
push
pop
fcomp
push
and
xor
es
mov
mov
pop
jmp
and
sbb
addr16
movs
hlt
push
or
dec
xor
in
popf
aaa
sub
icebp
and
and
repz
fwait
lods
lock
dec
dec
cmp
mov
jl
push
fmul
cmps
int3
ja
dec
xor
sub
int3
and
jbe
add
fs
int3
sbb
shl
nop
jnp
jbe
and
dec
fs
adc
sub
mov
inc
mov
cmps
pushf
mov
gs
(bad)
adc
imul
push
push
stos
pand
pop
leave
xchg
call
jmp
jp
dec
push
cmp
sbb
pop
lea
dec
mov
scas
jbe
mov
daa
jne
mov
cmp
jmp
cmp
enter
pop
enter
clc
push
xchg
xchg
jle
mov
mov
shr
sub
add
cmps
fs
jge
aas
retf
cmps
call
adc
and
sub
xor
jecxz
ins
cmps
rcr
fnstsw
ror
stos
add
pop
loope
addr16
daa
xor
gs
mov
inc
mov
lock
(bad)
fs
xor
jmp
sbb
push
mov
xor
lods
mov
enter
xchg
lock
rcl
scas
jge
push
cdq
add
or
dec
(bad)
mov
or
mov
mov
cli
cdq
mov
shl
rdpmc
stc
call
inc
aas
daa
and
mov
inc
retf
push
cmps
jecxz
lods
jecxz
(bad)
out
cmp
or
push
jmp
cli
popf
int3
std
xor
pushf
inc
push
and
inc
add
add
push
imul
mov
xchg
pop
xor
mov
and
pop
sbb
or
sub
jno
cmp
popf
icebp
test
push
pusha
add
test
and
or
es
adc
in
pop
addr16
cwde
leave
mov
movs
sbb
sar
dec
sti
cmp
sbb
fsubr
pop
push
aas
loop
mov
mov
les
fs
not
pop
out
sbb
inc
push
ficomp
push
fwait
movs
dec
sbb
cli
jmp
stc
lods
pusha
btr
scas
mov
out
aad
inc
or
repnz
shl
and
ss
add
fistp
sub
stos
and
je
and
lea
mov
into
pop
xlat
pop
jo
out
enter
shr
sbb
push
inc
call
sub
movs
test
sar
cmc
das
mov
in
fdivr
or
inc
cs
hlt
cmp
enter
xor
cli
adc
push
cmp
mov
test
cmc
fcmove
into
sbb
in
adc
popf
xor
loope
add
mov
mov
pushf
cmp
les
fld
mov
(bad)
mov
sub
das
mov
adc
xor
cdq
cli
imul
xchg
jmp
inc
adc
loopne
out
cmp
ins
out
or
adc
fadd
dec
fiadd
es
pop
or
push
fst
je
(bad)
je
jne
or
mov
(bad)
cmp
lods
repz
dec
out
xchg
cmp
sub
inc
outs
mov
inc
mov
loopne
jns
mov
cli
adc
movs
not
xor
xchg
xchg
mov
test
xchg
sbb
mov
push
or
out
xchg
cmp
fwait
add
cmp
xor
cmp
jp
pop
stc
lods
xchg
sbb
dec
adc
push
mov
hlt
mov
cmp
and
stos
add
retf
push
or
xlat
cmc
push
out
adc
pop
je
push
retf
enter
shl
scas
or
or
pop
test
xchg
mov
push
add
sahf
(bad)
xchg
add
jp
cld
jg
imul
sbb
in
add
xor
scas
xchg
inc
push
xchg
sub
(bad)
pusha
out
pop
rcl
sbb
adc
cmp
xchg
push
or
loope
mov
test
adc
loop
add
xchg
dec
mov
jbe
dec
push
inc
dec
mov
sti
adc
fs
jb
inc
lock
repz
lods
pop
(bad)
jne
push
dec
call
push
sub
jp
mov
aad
sbb
sbb
dec
sbb
movs
repz
sar
shl
fst
gs
clc
ds
and
(bad)
mov
cli
stos
push
fwait
adc
cmp
and
push
movs
jl
cdq
scas
add
sub
xchg
sbb
je
rol
or
in
out
inc
pop
xor
mov
fimul
xchg
test
outs
test
xchg
int3
mov
push
jecxz
cli
cmp
cmp
into
pop
adc
mov
inc
xor
imul
in
inc
popa
iret
outs
jne
xor
adc
inc
push
(bad)
xor
fist
ficomp
clc
and
test
sub
add
pop
icebp
retf
cs
and
aam
cmps
pop
jo
push
pop
int3
dec
xlat
sbb
popf
call
cmps
mov
inc
lds
lock
xchg
push
arpl
inc
sub
shl
add
pop
cmp
in
cs
dec
idiv
inc
sbb
(bad)
scas
add
ret
mov
lahf
mov
pop
add
sub
xchg
out
ficom
shl
xlat
test
mov
inc
adc
imul
les
fisubr
in
pop
push
rol
std
mov
retf
cmp
loop
jp
daa
(bad)
jmp
mov
mov
mov
inc
push
or
jne
dec
or
xchg
int
xchg
test
jg
mov
je
add
sub
dec
je
por
push
call
add
mov
stos
shl
xchg
inc
xor
shl
mov
push
adc
retf
push
scas
shl
or
cld
push
inc
add
aas
cmp
adc
push
adc
popf
ins
pop
mov
add
out
scas
dec
cmp
into
or
loope
dec
loope
mov
inc
ss
aad
in
ret
mov
push
push
dec
scas
shr
scas
inc
cdq
or
(bad)
sbb
stos
lods
stos
enter
out
ins
shl
je
shl
lea
inc
pop
dec
jae
inc
xchg
ins
xchg
push
hlt
hlt
or
dec
cmp
fs
add
das
cli
mov
std
xor
fbstp
jb
sbb
or
(bad)
mov
hlt
add
sub
ss
ds
iret
jge
es
pop
pop
jge
lods
or
fistp
gs
data16
xor
clc
pushf
fcomp
ja
mov
pusha
cmp
push
jb
and
pop
and
mov
dec
jns
hlt
pusha
rol
mov
and
jmp
and
fwait
dec
mov
dec
xor
fisttp
idiv
mov
call
mov
mov
sub
cmp
bound
mov
ror
loope
jg
(bad)
lods
stos
enter
popf
shr
sahf
lahf
stos
add
lea
loopne
xchg
outs
in
rol
cmp
mov
inc
adc
jmp
ret
(bad)
jmp
ja
push
mov
pcmpeqd
mov
sub
inc
adc
mov
pop
test
push
clc
(bad)
sub
cdq
add
sti
out
ins
xor
and
jecxz
fnstcw
and
mov
push
stos
or
sahf
sbb
jmp
es
ret
sub
pop
cmp
mov
fcomi
dec
cld
ret
sbb
pop
fisubr
dec
mov
inc
js
xchg
sbb
dec
xchg
cmp
jmp
add
mov
nop
sbb
mov
pop
aad
xchg
mov
xlat
push
jecxz
xlat
into
js
nop
inc
pop
sub
inc
in
fisubr
mov
std
(bad)
adc
mov
adc
popa
push
xor
and
jge
sbb
cmps
sbb
cmps
call
out
xlat
xchg
cmp
mov
daa
into
sub
shr
int3
mov
cmps
adc
jo
and
or
mov
jbe
iret
adc
(bad)
jne
dec
xor
adc
add
lds
dec
test
mov
out
rol
arpl
fcomp
ss
dec
cs
jmp
fsubp
xchg
(bad)
push
outs
and
scas
jle
movaps
cdq
fbld
mov
pop
shl
ret
push
jne
outs
mov
mov
push
push
mov
mov
xor
movs
mov
and
mov
jb
jo
cmps
clc
sysexit
mov
xchg
in
imul
push
bound
inc
mov
push
mov
jns
mov
xchg
pop
push
jge
leave
mov
scas
or
rol
add
test
cmp
pusha
test
fs
hlt
outs
std
rol
and
sub
mov
popf
hlt
mov
xchg
dec
loope
and
clc
in
adc
rcl
dec
or
mov
mov
adc
mov
rol
and
mov
arpl
sbb
push
mov
inc
xchg
sub
scas
dec
fsubr
or
imul
pusha
arpl
sub
pop
or
or
dec
or
jl
push
cmp
outs
push
sbb
popa
push
inc
mov
cli
jmp
scas
test
cld
cmp
cwde
adc
pushw
inc
mov
mov
xor
cmps
mov
scas
imul
xchg
jo
inc
sub
adc
dec
adc
mov
(bad)
shl
rol
xchg
aam
xchg
cmp
fsub
and
cmp
and
push
jb
xlat
pushf
xor
push
ret
and
adc
push
push
div
int
push
mov
lock
push
mov
aas
sbb
dec
movs
ins
pop
and
and
fldenv
test
mov
jmp
xchg
outs
push
jnp
fstp
mov
pop
mov
lds
enter
lea
jmp
xor
jl
jp
pop
or
inc
mov
(bad)
dec
(bad)
movs
jecxz
cmp
sub
or
inc
(bad)
jecxz
dec
mov
hlt
daa
repz
pushf
fnstcw
jb
and
pushf
cs
inc
mov
lock
ins
std
xchg
mov
mov
mov
push
test
scas
stc
lock
add
das
mov
sbb
stc
add
and
aaa
xchg
jg
lock
test
jno
push
sub
lods
and
in
dec
inc
fldenv
in
call
pop
cmp
mov
sar
sub
inc
mov
ror
div
add
jnp
(bad)
cmps
scas
cwde
cmps
ja
out
mov
out
jbe
fadd
ds
push
(bad)
cld
adc
nop
retf
imul
test
cmp
push
sub
inc
cmp
pop
dec
add
out
into
xchg
das
inc
test
inc
fbstp
int3
jg
daa
inc
hlt
dec
retf
fwait
add
cmp
pop
pop
push
xchg
add
xor
out
in
(bad)
and
out
gs
push
xchg
in
mov
ds
sub
mov
rcl
adc
or
jge
adc
or
mov
add
nop
mov
icebp
fbstp
dec
(bad)
sub
into
stos
inc
adc
jno
mov
jb
dec
aad
cmp
or
cli
mov
mov
xor
mov
or
add
scas
bound
stos
xchg
xchg
pushf
pop
sbb
dec
sti
mov
(bad)
sub
test
inc
arpl
test
dec
xor
add
test
or
test
add
jl
push
mov
xor
push
fstp
mov
mov
arpl
push
sbb
and
lds
push
push
dec
inc
int
in
mov
push
scas
and
cmp
ds
lock
adc
mov
loop
ins
std
es
sbb
test
xchg
aam
sbb
in
mov
les
add
adc
adc
bound
jbe
mov
(bad)
mov
sbb
mov
(bad)
in
jmp
inc
or
cmp
aam
add
(bad)
push
neg
mov
add
mov
mov
nop
adc
sbb
push
add
jae
das
pop
imul
stos
enter
fs
inc
xchg
mov
mov
inc
in
jmp
or
loope
xchg
mov
mov
pop
adc
test
repz
push
test
push
iret
into
stos
stos
pop
push
in
test
(bad)
mov
or
pushf
test
xchg
imul
fidiv
cld
inc
add
loope
sbb
xor
sub
sbb
pop
sbb
add
fistp
std
adc
sbb
test
and
ins
push
add
inc
dec
(bad)
add
movs
sbb
(bad)
xchg
push
and
fidivr
inc
mov
mov
sub
sub
into
sar
mov
add
or
dec
nop
lock
stos
jnp
clc
jle
adc
mov
ss
ss
lea
out
in
jge
(bad)
xor
test
outs
jb
into
dec
mov
inc
cmp
or
movs
add
stos
enter
push
sub
xor
enter
xor
push
dec
gs
push
xlat
fstp
push
dec
sar
pop
cmp
pop
jl
sub
mov
data16
ins
jge
push
push
and
retf
sub
pop
sar
loope
sub
and
mov
mov
inc
addr16
(bad)
clc
push
mov
cmp
jmp
pushf
or
xchg
inc
imul
push
mov
push
mov
xchg
mov
mov
inc
js
aas
xchg
mov
mov
mov
cs
test
add
or
cmps
js
or
movs
mov
sbb
enter
pop
add
rcl
push
push
xor
dec
(bad)
and
and
ja
jns
lock
bnd
stos
jl
add
stc
xchg
cmp
sbb
je
sbb
or
mov
cmp
mov
sub
push
mov
dec
inc
push
xor
mov
adc
mov
xor
popa
sbb
int
inc
sahf
inc
push
jns
or
xor
cld
adc
out
mov
or
scas
jnp
rcr
loopne
mov
ror
mov
popa
lahf
pusha
or
ret
js
imul
and
push
push
fisubr
lahf
je
mov
and
movs
mov
mov
mov
bound
xchg
mov
dec
mov
pop
stc
sti
int
lock
cmp
jp
push
jecxz
adc
cwde
arpl
fild
je
sub
mov
mov
mov
cs
add
sub
setle
stos
or
push
inc
mov
and
xchg
inc
es
sbb
xchg
fdiv
adc
pop
push
mov
(bad)
das
cmps
inc
and
mov
xor
cmp
pop
sub
cmps
bound
addr16
(bad)
xchg
retf
mov
add
mov
cmp
fisttp
xchg
push
ss
fs
ins
loop
jg
fidiv
lods
(bad)
loop
cmp
xchg
jmp
fs
mov
repnz
mov
sub
mov
lea
inc
xchg
ja
xchg
adc
cmc
xor
adc
cmp
cwde
test
cmp
rol
jne
add
dec
bound
fiadd
lds
and
outs
lahf
int3
sbb
jno
div
mov
or
sub
dec
nop
cmp
xor
jno
add
push
addr16
push
dec
fs
pop
stc
add
or
jle
fsubr
dec
xor
xchg
push
(bad)
bound
not
scas
daa
cmp
lock
mov
xchg
(bad)
into
jge
and
jmp
lds
push
push
outs
lds
ins
mov
int3
add
sub
xchg
in
dec
push
push
aam
xor
into
sub
pop
int
jnp
inc
dec
push
enter
ror
aad
sbb
sar
mov
pop
dec
fisttp
push
vpshufhw
in
mov
adc
jo
xchg
cmp
pop
ret
cmps
pop
sbb
mov
mov
jno
into
add
stos
shr
push
aas
int
neg
hlt
mov
out
ficom
pop
or
cmp
out
ja
movs
dec
push
jmp
call
mov
and
dec
je
int3
in
mov
sar
add
ret
or
(bad)
in
dec
es
jbe
pop
sub
(bad)
dec
push
cwde
jle
xor
es
bound
(bad)
push
shl
push
mov
add
out
or
leave
mov
xchg
ret
lods
ins
jb
sbb
dec
lods
or
outs
jb
aad
push
dec
cs
into
mov
rcl
xlat
mov
inc
pushf
lock
pushf
idiv
mov
loope
aas
sub
pop
dec
fistp
bnd
and
mov
cmps
ins
or
in
mov
pop
and
repnz
ja
fs
adc
push
inc
xchg
fsubp
xchg
cmps
ds
lock
pop
xor
ficom
push
add
xor
loope
(bad)
retf
in
add
lahf
sbb
adc
lods
jb
xchg
lods
int
fcomip
loop
mov
faddp
fs
lods
shl
inc
int3
hlt
inc
mov
push
sbb
fild
fdiv
xchg
pop
xor
adc
test
ins
mov
add
mov
pop
xchg
xor
nop
xchg
clc
fld
scas
sbb
pop
fdivr
shl
pop
xchg
sti
jo
inc
sbb
xlat
popa
mov
xchg
inc
icebp
jbe
xchg
adc
push
cmp
cmp
mul
daa
inc
xlat
aam
mov
inc
mov
int
cdq
test
add
adc
out
add
inc
mov
mov
mov
icebp
cmp
pop
dec
mov
push
jle
add
push
movs
adc
shl
(bad)
fsin
inc
mov
movs
xchg
sbb
mov
mov
jb
aaa
push
sbb
ins
lahf
hlt
or
sub
jecxz
repnz
scas
fnstenv
shl
cmp
aas
mov
dec
and
lea
mov
or
(bad)
jmp
call
nop
add
mov
jl
mov
mov
cmps
mov
data16
mov
sbb
sub
mov
(bad)
jmp
inc
mov
and
xor
xor
rdtsc
xor
mov
mov
jb
inc
(bad)
scas
scas
ins
mov
push
(bad)
mov
shl
xchg
xor
push
dec
loopne
mov
dec
retf
push
mov
scas
inc
xchg
mov
or
mov
inc
inc
sbb
aaa
imul
int3
mov
or
aam
ret
in
outs
out
sti
mov
call
lock
cwde
sar
cwde
jns
repz
push
fadd
xor
hlt
sbb
enter
shr
push
repz
mov
aaa
pop
out
and
stos
test
jb
dec
mov
cli
mov
and
cmc
jle
and
jo
xchg
mov
mov
sbb
cmps
sub
ss
jb
arpl
cmps
retf
outs
or
lea
xor
ds
push
retf
outs
jg
jne
sbb
retf
test
sub
sar
sbb
pop
mov
(bad)
pop
and
and
test
in
mov
mov
xor
test
js
in
adc
std
outs
movs
rcr
cwde
jns
call
aam
js
rcr
shl
stos
out
push
les
xchg
(bad)
jo
popf
pop
xlat
ret
arpl
test
(bad)
leave
pop
ds
sbb
add
shr
call
cmp
test
retf
mov
mov
jne
les
das
add
mov
into
cdq
sub
adc
inc
mov
(bad)
lea
and
mov
jge
and
lock
and
cld
pop
push
in
ror
dec
or
push
fsubrp
inc
or
cmp
(bad)
shr
outs
push
push
test
pop
in
pop
cmp
mov
mul
bound
cmc
jge
jp
push
loopne
dec
pop
pmulhuw
sbb
push
adc
mov
push
and
mov
sbb
pop
stc
sub
push
mov
inc
or
sub
retf
and
dec
jg
out
mov
ret
cmp
pusha
or
add
and
xor
jo
pop
push
inc
ins
leave
imul
xchg
pop
inc
mov
jno
jno
adc
bound
fistp
add
(bad)
jmp
enter
inc
enter
mov
pop
aam
and
mov
inc
inc
cmp
xchg
scas
or
push
(bad)
sbb
in
add
dec
fadd
cmp
cs
add
dec
ins
imul
add
mov
mov
adc
je
sub
mov
jb
inc
cmc
pop
or
imul
dec
lock
sbb
lahf
daa
pusha
in
pushf
mov
dec
dec
cmp
mov
rol
aam
test
loop
add
lea
sub
mov
add
mov
push
inc
push
jo
call
scas
popa
call
repnz
push
xor
add
adc
aam
xor
xor
jno
pop
jb
xchg
ret
ret
cmp
mov
lds
xor
test
out
cs
push
(bad)
push
cmp
push
push
ret
mov
sub
add
jbe
loop
inc
cmc
outs
inc
cmp
jmp
dec
xor
cmp
inc
inc
xchg
aas
pop
loopne
rol
mov
xlat
dec
push
mov
jmp
cmp
push
pop
xlat
(bad)
add
repz
sbb
cmp
adc
xor
jno
add
and
xor
pushf
pop
pop
pop
sub
mov
ins
fsubr
sti
mov
xor
mov
push
cwde
outs
outs
sub
mov
scas
dec
into
inc
push
sahf
fcompp
pusha
pop
gs
mov
out
cdq
stc
xor
shl
cmp
jge
int
(bad)
cmps
mov
xchg
inc
scas
fidivr
xchg
test
lods
adc
cli
xlat
push
and
fist
loop
jp
fldenv
test
jmp
jge
cdq
into
aas
loope
mov
mov
in
mov
lods
add
dec
fsub
dec
and
(bad)
daa
scas
clc
push
jae
mov
cmp
adc
add
pop
xchg
ja
mul
mov
loop
push
cmp
das
xor
lahf
retf
mov
shl
call
sub
mov
and
test
xor
dec
in
mov
and
and
fadd
mov
inc
xor
xor
add
mov
mov
xchg
xor
mov
fs
dec
in
jne
retf
mov
pushf
movs
hlt
mov
(bad)
jno
add
inc
mov
xchg
pop
mov
call
mov
enter
mov
bound
jbe
(bad)
fwait
or
push
xchg
adc
push
adc
out
mov
mov
push
xchg
neg
xchg
sti
ins
xchg
dec
sbb
dec
pusha
sub
out
data16
aaa
cmc
mov
xchg
or
cmps
stos
jo
mov
push
test
inc
mov
mov
push
xchg
aad
sbb
and
stos
adc
(bad)
lea
sahf
aas
loop
stos
push
stos
adc
pushf
cmp
push
jnp
jbe
cmc
imul
fcom
int3
mov
rol
push
xor
mov
inc
and
mov
add
cmp
push
(bad)
lock
cmp
call
push
push
pop
push
(bad)
dec
movs
bound
popa
xchg
sub
into
and
jae
mov
fild
jns
stos
and
add
push
jae
pop
(bad)
enter
xor
dec
cwde
push
mov
mov
fmulp
rcl
jecxz
xlat
xchg
jg
sbb
mov
into
jecxz
and
adc
in
(bad)
into
bnd
inc
cmp
push
push
data16
jne
cmc
mov
dec
in
adc
mov
sahf
push
sbb
ror
mov
inc
ret
dec
jg
push
mov
or
(bad)
fdivr
adc
rcl
ret
jmp
jp
inc
cli
stos
imul
mov
mov
test
lock
stos
xlat
call
push
fsubr
dec
push
sub
dec
fsubr
adc
mov
push
or
mov
ror
dec
enter
into
inc
bnd
(bad)
ror
in
and
jo
xor
jge
jecxz
dec
ret
xchg
outs
jo
pop
imul
jmp
cmp
mov
call
add
inc
or
ror
daa
lock
stos
pop
sbb
sub
arpl
jns
aas
fsubr
stos
mov
sbb
(bad)
aam
inc
ds
(bad)
push
mov
add
(bad)
int3
sbb
rol
test
inc
xlat
or
xor
mov
rsqrtps
dec
in
add
cmp
loope
leave
stc
inc
call
ja
cmp
xor
mov
leave
lahf
sub
outs
jmp
xor
imul
adc
retf
repz
pop
xchg
cmp
scas
adc
stc
stos
and
(bad)
call
sub
jmp
fnstenv
pushf
xor
adc
mov
inc
(bad)
cwde
cmps
ret
mul
xor
adc
scas
cwde
repnz
sbb
cmp
sbb
rcr
(bad)
fld1
out
aas
push
not
pop
ror
outs
push
xor
mov
aam
add
cmp
jmp
into
popa
push
xor
push
andps
lods
loope
retf
inc
and
loopne
daa
hlt
mov
push
push
sub
fisubr
mov
pusha
stc
mov
imul
jbe
cmp
pop
dec
jmp
ficomp
mov
aad
dec
pop
ss
dec
xchg
(bad)
cdq
xor
repnz
add
push
neg
xor
in
call
ficom
ror
jle
pop
pop
pushf
fs
adc
lds
test
mov
jne
rcr
(bad)
cmp
push
jge
(bad)
cmp
int
adc
fadd
or
and
adc
pop
or
add
int
xor
xor
loopne
aaa
or
loop
repnz
jo
outs
cmc
cli
rcl
enter
movs
sub
or
inc
and
gs
lahf
xor
jno
mov
scas
test
xchg
scas
pop
aaa
aas
leave
fcom
repz
dec
push
jmp
mov
pop
(bad)
mov
enter
and
xchg
gs
push
mov
xchg
mov
jnp
pop
clc
rcl
pop
push
scas
int
jecxz
inc
mul
cmp
xlat
lods
mov
mov
mov
jle
sbb
cmps
jb
mov
jmp
adc
xchg
pop
fild
push
add
fadd
mov
ret
jo
mov
cmp
push
inc
test
in
xchg
xchg
pop
lods
push
or
adc
xchg
pop
xchg
sub
ret
arpl
mov
popa
je
push
sahf
add
sub
les
pop
neg
sbb
push
cmp
xchg
fbstp
sub
fist
jle
and
adc
popa
imul
scas
add
xchg
test
xchg
or
push
push
or
imul
mov
mov
jmp
add
imul
inc
xor
mov
sbb
xor
jbe
fs
mov
and
xchg
or
add
addr16
gs
jb
rcr
sbb
in
jmp
fbstp
dec
adc
add
xchg
loope
and
adc
in
lahf
cmp
sbb
dec
movs
and
cmp
push
dec
fld
adc
nop
push
test
mov
jmp
adc
ds
les
retf
mov
push
out
ins
sub
clc
xchg
jp
xor
fs
dec
je
add
jbe
cmc
stc
jno
xor
cmc
into
xchg
push
sti
fnsave
cmp
scas
pop
out
fcmovnbe
retf
loopne
adc
ror
sbb
mov
jmp
out
sbb
sbb
movs
je
sar
mov
mov
jg
or
mov
jmp
xchg
sbb
sbb
sbb
outs
mov
es
sbb
in
test
aad
push
jle
xor
sub
div
jp
pushf
xor
movs
mov
adc
dec
mov
cdq
mov
ja
fdiv
fadd
mov
mov
(bad)
adc
retf
popf
call
push
mov
cmp
sub
mov
sub
adc
jb
sbb
jo
fwait
into
(bad)
mov
jecxz
mov
mov
fistp
jmp
push
adc
mov
inc
imul
jmp
adc
xchg
sub
xor
stc
sub
or
push
into
push
(bad)
iret
fmul
cs
inc
jmp
rcr
ret
addr16
inc
mov
cmps
call
inc
and
lds
mov
sbb
movs
aad
iret
sbb
cdq
sbb
mov
mov
jle
aad
inc
and
push
ins
repnz
in
retf
sbb
pop
pop
cmp
leave
jge
enter
je
push
jmp
mov
(bad)
aam
inc
inc
jns
aad
xor
and
nop
not
jbe
mov
popa
in
fcmovnb
jmp
mov
pop
xchg
cmps
out
cmps
add
ret
imul
dec
lods
cmp
mov
sub
sbb
ins
mov
inc
pushf
jb
adc
scas
int3
xchg
test
pop
bound
(bad)
(bad)
xchg
jl
into
add
fsub
fcom
retf
jmp
mov
cmps
push
or
imul
mov
(bad)
cmp
and
leave
sbb
dec
subps
nop
pop
sbb
aam
lods
mov
mul
mov
mov
mov
das
sbb
hlt
scas
mov
in
mov
pushf
inc
call
lahf
scas
add
dec
adc
test
fsub
jb
(bad)
test
ds
clc
push
in
dec
shr
sar
pop
jg
xchg
shl
jno
xor
jo
push
adc
jl
cmps
mov
nop
fld
pop
mov
sub
in
sbb
cmp
adc
jnp
dec
sbb
mov
and
call
arpl
add
movups
loope
fistp
xchg
jbe
ret
mov
push
jl
and
add
mov
retf
inc
(bad)
cmp
dec
jmp
stos
fwait
push
pop
in
out
mov
mov
(bad)
jae
xchg
ins
dec
cld
dec
(bad)
adc
dec
lods
mov
shr
and
and
aad
adc
sbb
test
jp
das
sub
sahf
cwde
inc
fild
or
aad
hlt
cmp
mov
mov
(bad)
aas
mov
leave
pusha
xor
cmc
imul
sbb
and
stc
clc
(bad)
out
mov
sub
in
push
mov
sti
dec
adc
lods
enter
jl
mov
scas
push
je
sub
ret
xor
sbb
mov
sub
sbb
adc
iret
jne
ret
mov
or
retw
sub
xchg
cmp
dec
ret
xlat
outs
adc
and
lods
or
cmp
xchg
aad
jns
stc
xchg
jmp
int3
xor
xor
les
jp
test
xor
bound
lea
in
out
(bad)
jae
and
int
cmp
dec
sub
add
cmp
mov
popa
pop
aad
std
loopne
cmp
mov
clc
aaa
cli
pop
xor
add
adc
lds
fstp
enter
jb
cs
fistp
test
test
mov
(bad)
imul
stos
inc
sar
hlt
fcmovnbe
rcl
mov
xor
pop
push
jmp
cwde
mov
pop
push
mov
aaa
mov
fcmovne
push
adc
jmp
cmp
stos
sub
(bad)
push
rcr
jle
jecxz
stos
hlt
in
lahf
(bad)
sbb
fwait
mov
in
arpl
or
cmps
(bad)
xchg
add
(bad)
mov
mov
f2xm1
imul
inc
sub
sbb
mov
sub
arpl
sub
dec
sbb
test
jecxz
ss
dec
shl
fxch
push
and
pop
add
push
inc
icebp
clc
and
js
dec
sub
pop
fs
dec
das
pop
xor
fcom
dec
inc
ins
addr16
out
leave
or
outs
pop
inc
shr
leave
sub
imul
sbb
bound
jmp
das
pop
mov
mov
leave
jg
mov
push
in
inc
into
ins
(bad)
pop
push
mov
adc
enter
shr
dec
push
rcr
cwde
or
jmp
push
ret
pop
pop
sub
int
pop
sub
bound
pop
jae
repz
mov
std
hlt
and
nop
aad
lahf
dec
ror
fistp
cmp
loopne
ja
into
xchg
push
nop
aam
dec
xchg
loope
pop
mov
pop
adc
neg
pop
push
out
sbb
iret
out
add
mov
dec
push
mov
cmp
call
repnz
aas
xchg
push
add
inc
je
stc
(bad)
sti
and
cmp
hlt
jle
mov
pop
or
retf
add
and
jl
and
fs
(bad)
sub
jae
pop
sub
xor
js
aas
push
or
inc
or
pop
and
retf
mov
sbb
sub
mov
xchg
dec
out
adc
add
imul
ds
idiv
xor
mov
adc
mov
push
inc
das
sub
pop
aaa
call
div
retf
jl
jmp
inc
sbb
mov
stos
jo
xor
idiv
cwde
fdivrp
ins
cmc
sbb
pusha
xlat
adc
ss
bound
dec
add
xor
ins
and
idiv
fiadd
xchg
xor
pop
daa
pop
retf
cmc
rep
lahf
mov
sbb
or
out
scas
cmps
xchg
sbb
ja
inc
push
push
mov
xchg
mov
xor
and
adc
scas
cmp
mov
lock
jnp
xchg
sar
js
(bad)
sti
mov
popf
lea
sbb
jge
dec
pop
jmp
xchg
rcl
pushf
jg
test
cmp
adc
or
cmp
sti
cli
nop
adc
pop
fsubp
sub
ror
push
mov
scas
mov
mov
inc
imul
jg
(bad)
in
xor
sti
pop
jmp
jnp
fwait
jb
(bad)
or
sub
ja
out
jp
sahf
sbb
mov
add
dec
push
arpl
cdq
finit
push
sub
je
cmc
idiv
outs
mov
inc
adc
push
jmp
mov
mov
call
pop
xchg
mov
or
ror
ret
push
sbb
repnz
mov
inc
lods
sub
inc
add
leave
fist
popf
shr
into
das
cmp
mov
cmp
xchg
dec
(bad)
push
adc
repz
jmp
inc
std
sbb
in
adc
xor
iret
mov
jno
lock
mov
push
es
inc
aaa
addr16
cmp
ss
js
js
mov
movs
inc
(bad)
mov
in
dec
dec
daa
push
not
fcmovnb
aas
pop
mov
div
stc
out
lahf
push
xchg
cmps
dec
out
cmp
mov
aam
fdiv
leave
cmp
push
daa
leave
xor
mov
xchg
shr
loop
outs
sbb
add
xchg
xchg
jbe
movs
add
inc
fwait
mov
mov
mov
pusha
(bad)
xlat
jo
rcl
movs
call
(bad)
xchg
cmp
popa
scas
jp
pop
xchg
js
sbb
inc
sbb
dec
sahf
pop
cmp
ins
aad
fcomi
call
mov
push
mov
sahf
and
cdq
mov
ss
js
mov
bound
ftst
sub
loope
mov
pop
cmp
sbb
lds
aaa
or
outs
pop
cwde
imul
dec
sti
xor
leave
clc
dec
(bad)
push
inc
push
aas
cmp
cmps
sub
call
inc
sub
(bad)
pop
inc
out
dec
jl
mov
xor
adc
(bad)
ffree
dec
loop
enter
lahf
popa
jbe
out
popf
aad
and
xor
lahf
mov
push
call
sti
ins
test
in
fidivr
sti
pusha
dec
add
xchg
jl
xor
adc
lods
addr16
pop
dec
arpl
shr
dec
sub
sub
adc
mov
repz
popa
push
inc
fdivr
dec
pop
in
mov
dec
aam
shr
cmp
div
pop
xor
imul
or
mov
lea
or
push
int
inc
movs
adc
jp
outs
rol
test
push
retf
add
out
(bad)
jb
push
retf
sub
xchg
es
inc
jmp
sbb
in
mov
fisub
cmp
inc
xlat
dec
jecxz
pop
inc
xchg
sub
sub
scas
adc
jns
sub
loopne
xchg
or
fstp
les
xchg
jae
jmp
test
fwait
jmp
jg
push
xchg
mov
ss
ins
sbb
dec
xlat
and
cmp
cld
dec
movs
xor
xor
sub
xchg
mov
in
xor
add
sub
test
add
xchg
in
sub
ret
xchg
pushf
inc
aad
cmp
add
in
push
pusha
mov
movs
lods
cwde
jnp
ins
cli
and
imul
and
(bad)
cmp
out
add
call
fadd
add
and
adc
sbb
adc
and
push
fidivr
add
mov
arpl
jae
(bad)
mov
mov
(bad)
stc
loopne
add
xchg
or
pop
sub
popf
fwait
mov
xchg
sbb
jnp
popa
pop
retf
jno
in
je
push
sbb
bound
or
jecxz
sar
mov
in
outs
in
jmp
cmps
adc
fmul
mov
rcr
int3
call
mov
add
fnstsw
and
or
xchg
mov
retf
sub
xor
fwait
adc
xlat
int3
xchg
xchg
neg
clc
push
iret
imul
out
dec
mov
jmp
pusha
out
cdq
jmp
mov
mov
mov
popf
test
outs
outs
pop
xchg
push
out
stos
xchg
mov
adc
pop
push
addr16
xchg
repnz
mov
mov
cmc
mov
ss
pop
add
(bad)
out
mov
sub
aas
ins
aam
out
in
sub
pop
mov
fs
jmp
cmc
sub
jmp
out
fmul
sbb
into
mov
mov
stos
inc
mov
nop
mov
(bad)
jmp
dec
movs
xchg
orps
sar
aas
lds
loopne
imul
sub
add
pop
jae
scas
aad
lods
dec
lea
je
or
retf
pop
push
push
dec
lock
add
mov
push
jl
gs
test
gs
cmc
push
and
and
xor
add
jnp
adc
test
jmp
push
xor
xchg
cdq
(bad)
or
mov
imul
std
fstp
lods
clc
inc
das
sar
test
add
jmp
xor
aam
aaa
mov
shr
inc
pop
sbb
arpl
ja
push
data16
leave
sahf
neg
dec
cmp
cwde
inc
cmp
je
lds
dec
adc
push
stos
mov
sub
popf
sbb
iret
or
adc
push
retf
inc
xchg
pop
out
adc
mov
(bad)
mov
sti
nop
mov
push
shl
in
ins
(bad)
lods
pop
sub
jb
adc
dec
sub
push
shl
repnz
pop
pop
cmp
xor
jl
inc
pop
cdq
mov
jg
and
jecxz
lods
fwait
aaa
fild
icebp
(bad)
cdq
mov
jmp
aad
out
test
scas
int
pop
out
fbld
mov
dec
loop
cmps
aas
or
xchg
add
push
(bad)
inc
lahf
imul
xchg
sbb
shr
sahf
push
out
aaa
sti
aad
inc
sbb
std
iret
push
pushf
cmps
push
iret
sub
inc
lock
(bad)
scas
cld
jae
xchg
xchg
push
ins
repz
ds
cmps
test
xlat
out
push
push
aam
retf
aaa
test
mov
add
cld
inc
pop
and
repz
lods
lahf
retf
out
dec
cwde
in
sti
jp
sbb
fsub
es
mov
adc
pop
mov
jecxz
jno
out
mov
shr
mov
int3
test
ret
fisub
mov
or
xor
cs
scas
sub
out
cdq
mov
(bad)
(bad)
fsub
sbb
clc
mov
sub
mov
xchg
xor
sub
or
mov
bound
sbb
push
sub
(bad)
fldz
mov
xchg
cmp
sub
cmc
(bad)
movs
dec
push
arpl
and
and
fnstsw
ins
icebp
ret
inc
test
mov
mov
stos
push
or
cdq
add
je
add
push
jmp
pop
sub
fwait
sub
sti
adc
sbb
mov
mov
sbb
sub
xor
mov
cmp
jno
mov
pop
mov
mov
cwde
arpl
mov
xchg
push
push
xlat
ss
inc
movs
in
sbb
mov
cmp
sub
stc
push
call
sbb
mov
fstp
sbb
outs
sbb
das
cmp
cmp
ret
cmp
mov
add
add
inc
(bad)
sahf
loopne
xchg
pop
mov
sbb
hlt
cmps
call
and
outs
push
xchg
je
arpl
or
jne
inc
shl
in
dec
ja
xchg
(bad)
add
push
jg
dec
movs
mov
data16
ins
hlt
es
cmp
dec
mov
jmp
loope
xor
js
popf
cmp
adc
mov
shr
retfw
xchg
push
nop
jecxz
pop
sahf
(bad)
sub
ja
cmc
popf
into
ffreep
xchg
cmp
cmp
fst
mov
mov
rcl
push
sbb
xchg
pop
dec
or
add
ss
xlat
add
shl
cwde
(bad)
outs
inc
and
ins
test
std
push
mov
xchg
aad
sbb
and
dec
mov
into
adc
jecxz
imul
add
test
mov
je
dec
shl
sbb
std
adc
addr16
test
mov
mov
bound
jne
enter
sbb
(bad)
push
out
nop
loop
pop
xchg
ins
in
mov
xor
(bad)
aaa
movs
push
popf
pushf
gs
into
adc
inc
xchg
push
push
shl
adc
call
cmp
pop
repnz
out
shr
and
xchg
pusha
push
cmp
jb
pop
inc
mov
ss
jmp
add
sub
clc
mov
shl
test
addr16
lds
clc
test
mov
idiv
aaa
jne
xor
shr
outs
test
imul
hlt
add
(bad)
sub
fstp
sub
push
popa
mov
std
mov
xchg
fwait
mov
sbb
pusha
retf
aam
mov
cmp
adc
ret
mov
mov
and
imul
sbb
jl
cmp
pop
out
scas
sbb
aam
ins
aad
(bad)
fwait
in
xchg
push
mov
cdq
xchg
mov
icebp
movs
outs
mov
hlt
scas
mov
or
jecxz
shl
movs
movs
dec
sbb
xor
mov
dec
pop
popf
or
call
adc
cmps
mov
pop
call
xor
mov
adc
ret
cli
shr
xor
ret
js
pop
es
cli
and
mov
int3
enter
cmp
dec
mov
or
xchg
mov
cdq
sub
stos
push
scas
xor
mov
dec
cmps
xchg
jecxz
icebp
xchg
mov
and
dec
scas
in
pop
in
cmps
(bad)
arpl
popf
retf
aam
xlat
in
pop
and
pop
push
inc
ja
push
and
sub
data16
dec
jns
and
add
push
xchg
mov
lock
mov
add
sub
lods
adc
out
lds
dec
dec
jnp
xchg
lds
mov
add
test
cmc
sbb
rcr
inc
mov
or
adc
and
or
enter
push
mov
retf
and
sbb
in
xchg
dec
adc
fcomp
sbb
fnstsw
fcom
pop
xchg
(bad)
xchg
retf
int3
push
mov
push
mov
mov
mov
mov
inc
mov
sar
test
sbb
cli
or
inc
mov
mov
rol
fs
and
cmp
sub
jg
dec
mov
dec
push
push
scas
data16
xor
mov
jnp
cmp
and
jl
sbb
jge
call
adc
and
pop
jo
mov
in
mov
sub
das
in
scas
xchg
shr
mov
jp
mov
cmp
lds
(bad)
or
or
push
mov
sti
(bad)
fidiv
or
mov
retf
in
ret
pop
xor
(bad)
scas
xor
add
iret
repnz
cld
nop
xor
xor
mov
adc
dec
and
jb
xor
movs
jnp
fild
push
xchg
and
sub
cmp
test
scas
xchg
aas
aas
movs
sbb
fnstcw
ins
cmps
retf
mov
fcmovu
adc
pop
push
inc
mov
aam
fnstcw
test
or
(bad)
inc
ret
xchg
pop
aas
cmp
in
inc
or
sub
lods
mov
mov
pop
imul
aad
into
sub
or
pop
adc
addr16
iret
jle
out
mov
hlt
pop
out
bound
clc
loop
jns
stc
dec
shl
jae
pusha
mov
inc
inc
jbe
aad
fwait
popf
mov
adc
push
mov
sti
adc
mov
and
dec
mov
js
mov
mov
int3
sahf
and
cmp
stc
mov
(bad)
adc
ret
xchg
movs
jbe
lea
mov
xor
and
pop
adc
retf
(bad)
aas
or
iret
jns
mov
aad
sub
jp
popf
rcr
mov
in
sub
into
jg
cmp
mov
hlt
inc
pushf
jmp
add
je
adc
aam
stos
out
jge
jo
push
mov
dec
and
arpl
test
sub
sbb
add
and
fiadd
jns
xchg
neg
je
adc
push
push
jbe
je
fdivr
cwde
stc
out
add
outs
sbb
cld
sub
ins
xchg
loope
mov
lahf
inc
stc
jns
movs
inc
sbb
js
fs
sbb
out
data16
mov
sbb
int3
sti
and
cdq
xor
xchg
pop
sub
sbb
mov
adc
mov
dec
sbb
rol
stc
jp
jl
out
dec
fstp
fisubr
out
and
xchg
sbb
arpl
pop
add
mov
xchg
sub
fs
push
xor
call
cwde
mov
nop
bound
and
gs
xchg
push
jl
add
sub
push
neg
cli
xor
int
cmp
jbe
call
xchg
cmc
sbb
dec
shl
dec
call
dec
or
sub
popf
test
out
leave
sub
jle
ins
jno
lahf
cli
xor
and
enter
push
div
or
push
int
retf
imul
mov
out
test
cmc
call
jne
mov
outs
shl
aas
lods
in
mov
mov
jo
fiadd
gs
mov
test
ror
ss
(bad)
pushf
scas
xor
add
loopne
test
sub
cs
pop
in
loop
test
mov
jmp
mov
pop
cmp
in
jae
out
cmps
dec
cld
and
xchg
lea
imul
cwde
je
dec
push
push
mov
cmp
cmps
aaa
sbb
xchg
sub
mov
and
(bad)
mov
fwait
and
(bad)
(bad)
nop
mov
pop
pop
stc
sbb
movs
lea
sub
dec
mov
retf
add
lods
shl
mov
fadd
dec
dec
outs
pop
fisubr
aas
mov
ins
loop
sbb
in
inc
xchg
push
je
imul
(bad)
and
pop
adc
adc
push
mov
sbb
enter
xor
lods
jns
mov
gs
fwait
push
jns
and
movs
int3
inc
pop
mov
jl
and
sbb
repz
mov
mov
and
sbb
jmp
cmps
lods
test
and
mov
push
jns
mov
gs
aaa
test
mov
adc
push
shr
adc
sahf
rol
mov
pushf
int3
sub
hlt
clc
or
cmp
(bad)
cmp
or
das
or
mov
inc
(bad)
push
and
or
stc
test
call
jnp
(bad)
lods
mov
jb
sbb
dec
pop
cmp
add
out
scas
and
xchg
stos
cmp
push
jmp
ja
add
and
popa
mov
mov
iret
sub
hlt
sub
stos
data16
dec
jns
and
adc
nop
std
xchg
fcmovbe
mov
add
cmps
(bad)
enter
mov
in
add
stos
in
aaa
cmp
mov
clc
imul
pop
adc
lds
pop
mov
sub
addr16
cmp
test
fadd
addr16
fcomip
cmp
mov
cmp
xchg
pop
fstp
sbb
sub
outs
pop
inc
mov
pmulhw
jbe
add
push
and
std
ss
jns
jne
or
xor
outs
adc
imul
dec
(bad)
ins
gs
leave
inc
mov
fistp
jae
lods
arpl
sbb
sub
add
mov
popa
adc
dec
jnp
pop
sbb
xchg
call
int3
outs
lock
xchg
sbb
(bad)
pushf
repnz
mov
dec
test
jbe
xchg
call
std
pop
xchg
pop
adc
aad
sub
enter
adc
adc
sbb
inc
cli
bound
sti
stos
(bad)
mov
aad
xor
sub
aam
jp
sub
scas
or
retf
cmp
fisttp
cmps
repnz
or
pop
retf
hlt
(bad)
scas
(bad)
jmp
mov
sub
cmovnp
push
js
adc
addr16
sub
(bad)
xchg
mov
imul
lods
lods
into
cmp
or
mov
dec
add
sbb
call
mov
stos
rcr
mov
lock
cmps
repnz
pop
cmp
js
mov
mov
enter
dec
inc
dec
inc
dec
sbb
mov
stos
inc
push
sti
popf
pop
stos
jno
daa
nop
lods
and
mov
and
xor
inc
and
xchg
jnp
pushf
ds
push
lds
xor
fmul
and
add
xchg
retf
xor
daa
push
mov
jne
mov
jo
mov
pop
aad
retf
std
(bad)
cli
mov
push
push
ja
xor
nop
jno
gs
test
jmp
test
lods
mov
leave
jno
xor
mov
jecxz
jb
inc
push
clc
cmps
sbb
mov
test
fst
inc
test
add
jne
(bad)
fiadd
cs
jmp
pop
inc
sbb
cmps
jb
(bad)
cmc
iret
leave
dec
mov
std
add
add
sbb
ds
sbb
add
cmp
xor
fwait
pop
lods
jp
int
dec
hlt
inc
jmp
sti
push
push
js
dec
cmp
je
scas
cli
mov
dec
inc
jmp
add
ret
and
std
lea
adc
clc
pop
js
lahf
push
xor
push
rcl
int3
add
sub
cs
dec
cmp
test
std
cmp
pushf
cdq
jns
pusha
mov
shr
cmps
mov
aaa
outs
xchg
cmp
shr
fs
or
pop
push
not
fwait
sub
fiadd
fist
rcl
fwait
xchg
aam
or
ja
pop
xor
loopne
std
jnp
call
call
retf
aaa
(bad)
out
fucompp
sbb
cdq
gs
and
fbld
les
hlt
mov
bound
ja
mov
les
sub
loopne
sbb
and
mov
push
cwde
loop
iret
push
push
inc
mov
jmp
sub
pop
push
or
push
adc
mov
pop
retf
cmp
in
jg
aas
or
icebp
cmps
or
add
cmp
ret
retf
repz
in
cmps
mov
retf
scas
gs
add
repz
cmp
stos
sbb
fist
cmp
int
stc
fnsave
adc
jne
adc
xchg
mov
repz
sbb
sbb
mov
pop
push
lods
imul
leave
xor
push
inc
popf
jo
pusha
sub
repz
mov
js
add
shl
pop
ja
inc
and
nop
scas
xchg
dec
adc
sub
jmp
jmp
stos
gs
call
cli
hlt
lea
sar
mov
out
jae
xchg
xor
movs
mov
mov
pushf
outs
in
imul
dec
mov
enter
test
dec
bound
(bad)
sahf
jno
xor
jl
rcr
retf
sub
mov
test
hlt
xor
jb
jle
iret
into
and
out
aas
jmp
aaa
in
fcom
call
sar
call
stos
(bad)
jecxz
adc
sbb
movs
in
stc
sti
aad
loope
and
pushf
mov
ret
dec
mov
fnstenv
cs
jmp
jae
shl
mov
fiadd
cmp
jge
aaa
int3
sbb
aas
add
sar
test
shl
stos
repnz
repz
xchg
shl
fwait
xor
adc
lods
jl
ds
xchg
icebp
mov
push
cld
jno
add
fild
test
pop
dec
adc
ins
repnz
jle
fsub
push
jne
out
adc
(bad)
mov
inc
(bad)
leave
add
jl
mov
loop
ins
adc
outs
jecxz
mov
sbb
xchg
cwde
adc
xchg
pusha
mov
xchg
(bad)
popf
fnstsw
ret
mov
(bad)
mov
cmps
and
fs
jo
inc
imul
mov
pop
pop
jecxz
stos
icebp
jmp
inc
ds
movs
mov
xor
nop
or
(bad)
push
push
add
pop
fadd
xchg
cs
or
mov
jo
daa
lods
mov
(bad)
pop
add
pusha
mov
in
int3
sub
and
repz
test
mov
ror
dec
add
mov
xchg
test
jmp
sub
and
neg
retf
mov
cmps
mov
mov
or
push
push
sub
aaa
call
jbe
bound
cdq
gs
xlat
loope
cmp
icebp
push
inc
sbb
and
loopne
dec
jge
inc
sbb
lahf
pop
pop
stos
mov
popf
pop
std
aas
cld
(bad)
jmp
mov
outs
adc
mov
dec
cmp
jmp
jmp
ja
pop
jnp
push
pop
or
sti
ror
push
imul
cmps
mov
enter
(bad)
addr16
and
sbb
(bad)
in
sbb
daa
xchg
jae
jbe
std
xchg
or
cmps
add
in
ds
loopne
test
cs
cdq
bound
mov
add
arpl
test
daa
or
mov
mov
inc
pushf
push
les
pop
sti
push
jge
ja
ins
into
jnp
dec
mov
rol
push
fs
sub
std
jmp
call
sub
or
ret
outs
ss
pop
ds
js
ffree
dec
jp
mov
jmp
cdq
sbb
into
mov
jmp
fadd
outs
ds
and
pushf
addr16
push
jb
cdq
test
jbe
test
outs
xor
inc
ja
bound
pop
fwait
sub
dec
adc
cmp
sbb
cmp
cmp
sbb
xchg
dec
ror
xchg
mov
sbb
or
inc
call
shr
stos
sub
cmps
int
or
adc
sti
cmp
div
mov
mov
addr16
rcl
push
pop
movs
cmp
loope
in
test
stos
jge
ja
rol
fst
xlat
jno
jmp
ds
test
fwait
in
pop
loop
cld
ds
add
stos
mov
fimul
xchg
(bad)
jb
jmp
sub
sbb
mov
push
dec
rol
in
jl
and
icebp
pop
inc
xchg
scas
daa
mov
mov
imul
sbb
jle
sti
stc
jmp
inc
imul
mov
mov
(bad)
in
adc
cmp
sbb
mov
outs
mov
xor
sub
mov
test
add
ror
into
xchg
fwait
(bad)
push
jae
jmp
in
and
xchg
push
inc
(bad)
das
or
popa
adc
add
test
sbb
ss
mov
ja
mov
das
addr16
mov
dec
mov
neg
ret
push
in
fbstp
call
xor
add
jnp
les
fld
mov
sahf
add
dec
sti
xchg
div
push
fld
cmp
movs
cmp
(bad)
stc
push
loop
pushf
hlt
xchg
(bad)
cmp
inc
mov
shr
and
mov
and
call
cmp
test
into
je
mov
shl
lods
jbe
sar
push
clc
xchg
in
repnz
adc
xchg
ins
enter
fchs
jecxz
call
mov
mov
loopne
xor
pop
std
xor
mov
mov
jb
or
mov
enter
imul
pop
inc
scas
sbb
mov
push
push
adc
aaa
out
stos
repz
test
cs
in
push
or
pop
inc
adc
or
lods
(bad)
arpl
dec
and
xchg
jns
jl
into
leave
mov
(bad)
nop
retf
outs
test
add
and
(bad)
loopne
xor
pop
int
mov
push
add
sbb
movs
enter
push
lea
test
sub
inc
mov
add
jge
add
push
push
xchg
mov
jp
mov
jae
inc
fldenv
lds
sub
mov
cmc
fnstcw
sbb
aad
jg
push
mov
push
jbe
mov
pop
push
xchg
pop
out
inc
jmp
cs
sub
mov
inc
push
push
xor
xor
adc
shl
add
ins
cmp
xor
repz
jo
xchg
pushf
pop
mov
push
jns
test
mov
daa
adc
scas
or
sar
test
mov
scas
jecxz
sti
dec
cmc
dec
or
into
fwait
in
mov
mov
mov
pushf
jl
into
xor
das
sub
cmps
push
(bad)
jae
and
test
sbb
repnz
loopne
int3
jmp
(bad)
sbb
ins
pusha
iret
xor
sub
int
rol
mov
mov
mov
pop
xchg
push
cwde
into
inc
pop
pop
jl
data16
xor
test
xor
mov
inc
aas
sub
sbb
out
sti
mov
mov
je
adc
sub
pop
ror
test
imul
cmp
repnz
adc
stc
push
js
cmc
pop
ins
add
or
xor
mov
(bad)
cld
jns
push
jbe
mov
enter
mov
jnp
cmc
xchg
aad
adc
dec
(bad)
and
jmp
das
ret
popf
xor
push
es
(bad)
push
and
ds
ins
fld
jecxz
cmps
leave
jg
sub
xlat
sub
or
jge
mov
loope
fdivp
les
into
mov
rcl
mov
mov
mov
imul
or
imul
adc
test
jo
cmp
nop
xor
into
mov
pop
cmp
mov
push
jmp
dec
inc
fimul
inc
ret
pop
shl
push
jns
das
jge
icebp
xchg
js
js
xchg
or
inc
in
or
inc
popa
ja
inc
sti
push
push
sbb
jne
add
xchg
cmp
icebp
xor
and
ret
or
xlat
in
hlt
aam
push
cmp
scas
fld
ja
outs
fwait
cmp
mov
jb
retf
call
sti
fcomi
inc
sub
(bad)
cmc
xor
add
adc
sbb
lods
push
and
sbb
pop
jb
cmp
daa
neg
push
push
in
(bad)
daa
inc
sbb
push
sar
push
addr16
data16
lods
fidiv
pop
xor
icebp
jns
jecxz
mov
aaa
in
cld
dec
sti
leave
repz
push
mov
sub
and
mov
pop
pop
(bad)
movs
mov
xor
(bad)
ficom
sub
inc
cmp
jmp
out
push
xor
or
pushf
push
cmp
or
sahf
xchg
stos
mov
nop
pop
pop
mov
and
imul
mov
jmp
push
adc
ficom
add
adc
pop
sbb
sub
daa
ds
pop
push
push
pop
sbb
sbb
outs
pop
movs
pop
cs
ins
inc
or
repz
into
stos
or
xor
dec
dec
repz
jp
sub
arpl
xor
ins
inc
shl
cmp
lock
cmp
and
fild
mov
loopne
ja
in
mov
mov
and
mov
clc
jecxz
aaa
adc
dec
ins
or
mov
inc
inc
sub
sti
mov
call
call
pop
cmp
fdiv
out
(bad)
pop
push
stc
jbe
mov
ds
pop
mov
add
xchg
sub
pop
in
mov
xor
cli
jbe
lea
mov
fimul
lds
in
dec
scas
mov
pop
scas
add
mov
lock
rcl
pushf
mov
pop
jnp
dec
xchg
xor
pop
fwait
pop
and
lods
sub
test
outs
add
adc
xchg
pop
aad
mov
loopne
push
stos
and
xor
cwde
int3
fdivr
adc
movs
stos
pop
pushf
gs
shr
mov
push
xchg
mov
xor
enter
popf
mov
ins
xor
jne
add
mov
sbb
cld
add
cmp
repnz
das
or
retf
mov
jb
js
test
cmc
aam
cmp
aam
pusha
out
es
xor
pop
stos
mov
pop
and
push
push
inc
xor
sti
repz
loop
scas
and
mov
dec
push
add
adc
(bad)
pop
adc
jae
in
push
add
dec
fwait
mov
aam
popf
lahf
rcr
call
jmp
mov
out
loop
xchg
in
pop
(bad)
adc
cmc
je
add
test
out
std
(bad)
pop
scas
ret
xchg
or
jne
retf
and
cmp
pop
enter
not
aas
nop
test
xchg
inc
sub
lods
xor
sub
lea
push
dec
pusha
daa
mov
sbb
jb
adc
dec
pop
jo
int3
dec
rcl
jge
push
dec
fwait
sbb
sub
or
clc
sahf
fldenv
mov
xchg
sub
mov
shr
push
out
or
out
and
inc
add
xchg
add
adc
fsubr
cmps
pop
sub
lock
mov
pop
(bad)
xchg
js
mov
push
dec
fs
mov
f2xm1
or
rol
sbb
lds
icebp
imul
bound
ret
(bad)
mov
xor
push
pushf
xchg
frstor
jmp
in
and
dec
retf
dec
sbb
je
mov
push
jne
and
cmc
pop
xchg
retf
sub
ja
mov
inc
and
sti
jmp
pop
sub
jle
add
arpl
es
xchg
pop
xchg
push
ss
or
lahf
mov
push
cld
inc
or
test
sub
test
add
repnz
loope
sub
mov
repnz
pop
js
pop
dec
les
xchg
inc
das
inc
call
jae
cmps
stos
repz
jae
jecxz
sbb
data16
mov
sbb
jb
imul
out
dec
neg
aaa
push
and
call
xchg
pop
adc
test
push
mov
repz
add
pusha
outs
movs
xor
addr16
aas
ins
fcom
mov
dec
loop
mov
push
or
int3
inc
sub
xor
popf
pop
clc
in
and
cmps
scas
pop
push
mov
cmc
retf
cmp
or
cmp
pop
push
mov
not
dec
cs
mov
xchg
mov
sbb
xchg
mov
cwde
xor
dec
sbb
or
js
jb
pop
imul
into
inc
aam
or
aad
dec
mov
xchg
btc
jl
aam
mov
movs
out
pop
ret
push
sub
and
pushf
cwde
sub
sub
jp
dec
add
dec
fnstcw
imul
xchg
xchg
sub
nop
std
loopne
test
mov
adc
add
arpl
hlt
push
int3
jo
sbb
jmp
cmp
and
and
or
aam
das
and
adc
adc
inc
push
add
pop
xchg
push
out
push
aas
adc
mov
jmp
lds
jmp
test
repnz
dec
out
pop
and
out
jp
jecxz
retf
scas
pop
xchg
and
aas
mov
fcmovu
shl
stc
add
inc
xchg
add
push
ror
inc
xchg
data16
mov
xchg
jno
das
mov
and
call
aam
fs
jne
retf
pushf
mov
cwde
punpckldq
mov
out
xlat
pop
fcom
fidiv
dec
mov
cmc
dec
mov
mov
(bad)
int3
mov
cmp
rcr
lea
movs
arpl
ret
xor
sahf
fsubr
sub
pop
cmovge
inc
push
in
pop
lahf
or
(bad)
(bad)
push
mov
retf
adc
xor
fnstcw
pop
xchg
mov
mov
(bad)
xor
mov
loopne
(bad)
inc
jmp
jecxz
ret
and
retf
push
mov
adc
xchg
mov
dec
test
pop
cmp
sbb
fild
mov
repnz
in
dec
lds
dec
mov
stc
mov
inc
add
mov
int3
imul
sar
pop
ins
dec
iret
xchg
or
sub
imul
dec
inc
mov
in
dec
cld
cmp
mov
fadd
and
push
mov
inc
xlat
cmps
jecxz
mov
mov
adc
cmc
sub
add
sbb
std
shr
dec
and
call
stos
sqrtps
cmps
or
cs
enter
jb
mov
ins
lock
mov
inc
loopne
add
pop
mov
stos
jo
stc
mov
dec
jmp
and
(bad)
mov
pop
arpl
sbb
sbb
and
sub
inc
mov
fisubr
push
inc
ss
stos
xor
ins
inc
add
add
popa
sub
mov
pusha
movs
adc
je
scas
cdq
sub
repnz
sbb
cli
mov
jns
mov
into
jb
jge
jbe
mov
push
pop
push
cdq
das
and
icebp
sub
ins
inc
push
pusha
imul
mov
(bad)
out
shl
dec
rcr
dec
jne
pop
adc
inc
into
push
out
add
call
sbb
scas
movs
(bad)
pop
repz
and
dec
add
or
jbe
stos
cwde
mov
and
jmp
hlt
sub
imul
adc
mov
pop
mov
xchg
ret
(bad)
cld
jb
sbb
add
imul
sbb
and
imul
jbe
cwde
push
(bad)
adc
jecxz
(bad)
je
std
sub
aam
dec
xchg
repz
xlat
add
add
xor
js
jne
dec
push
aaa
xlat
xchg
and
push
mov
sub
mov
mov
sbb
xlat
icebp
repz
pop
xor
aas
mov
bnd
mov
dec
ret
popa
call
dec
sahf
mov
mov
xchg
inc
sti
ds
or
test
out
xchg
out
sbb
in
mov
jo
mov
outs
enter
mov
enter
jb
sbb
cmp
dec
sbb
enter
adc
mov
jle
call
mov
arpl
pop
into
mov
test
ss
std
repnz
sbb
sbb
popf
imul
jp
sbb
and
jge
pop
mov
xor
loope
cmps
xchg
sbb
sbb
mov
mov
mov
shr
fnstsw
xchg
fstp
mov
jg
add
fld
stc
push
outs
pop
sbb
jns
outs
xchg
out
in
mov
adc
(bad)
stos
xchg
sti
and
out
scas
data16
std
xor
int3
sbb
and
xor
cmc
jmp
into
jmp
sub
cmp
push
lds
jo
adc
int3
cmp
(bad)
xor
sub
neg
rol
popf
mov
sub
jle
mov
fldenv
push
pop
jns
sub
aam
sbb
(bad)
inc
sbb
cs
std
mov
and
sbb
mov
xor
mov
adc
fist
cmp
das
pop
dec
std
push
movs
and
sub
mov
inc
adc
cdq
push
cdq
fild
push
or
bound
jmp
hlt
sub
jecxz
xchg
jmp
adc
fadd
movs
ins
mov
fsub
or
mov
int
xchg
push
xchg
jnp
addr16
adc
xor
fistp
sti
cmp
pop
dec
or
or
mov
jae
test
and
cmp
and
push
and
es
neg
sbb
mov
cmps
shl
add
addr16
loop
js
jg
scas
ins
adc
sbb
push
cmp
inc
adc
(bad)
mov
add
iret
inc
sahf
inc
push
inc
inc
popa
push
sub
mov
int3
dec
jge
lods
ror
(bad)
out
aaa
push
inc
imul
push
rol
movs
cmc
adc
nop
jb
cmps
lea
popf
fbstp
aad
inc
sub
inc
inc
cmp
out
xor
xor
and
add
jp
(bad)
mov
sbb
dec
std
mov
popf
loope
dec
sub
(bad)
push
pushf
pop
cmp
aas
mov
shl
mov
pop
xor
je
(bad)
neg
sub
fidivr
or
imul
xor
or
rcr
stc
imul
daa
daa
inc
dec
push
pop
rcr
pop
in
ret
inc
cs
pop
xchg
nop
in
inc
fs
adc
xchg
cmps
test
je
sub
cdq
add
imul
add
xlat
xchg
nop
pusha
addr16
stc
test
lea
mov
into
das
pop
lods
inc
mov
sar
not
push
or
scas
jno
dec
cmc
addr16
ret
neg
inc
sub
push
mov
and
sti
repz
sub
repnz
(bad)
call
cmp
adc
push
jb
cwde
cli
xor
push
add
cmp
clc
out
and
ins
cli
loope
jmp
pop
in
shl
lods
call
cmp
ffreep
pop
jecxz
pop
test
sbb
jmp
xlat
and
gs
pop
retf
icebp
imul
ficomp
pop
fisub
adc
int3
cdq
pop
xor
outs
mov
fst
lea
in
jnp
repnz
clc
ret
inc
sbb
lds
in
popf
push
out
xor
sbb
push
xchg
jae
or
bound
jns
pop
cmc
in
mov
xchg
jl
inc
pusha
dec
mov
les
cmp
jp
in
mov
outs
popa
mov
xchg
cmps
mov
aam
rol
sar
hlt
xchg
fist
push
pushf
in
les
pop
sar
pop
ret
ror
mov
lds
dec
xchg
test
xchg
jne
lea
jmp
jmp
xor
ror
retf
jno
add
pop
dec
leave
stos
and
sub
inc
push
fucom
icebp
pop
test
inc
loop
xor
xchg
(bad)
cmp
out
lds
sub
push
xchg
jecxz
rcr
das
cmp
popf
cmp
xchg
into
push
adc
inc
repnz
ins
lods
xor
xchg
push
add
ss
xor
jb
retf
neg
cmps
test
ins
xlat
frstor
ret
call
mov
(bad)
pop
and
jbe
and
stos
xchg
lods
ret
cmps
push
adc
es
ss
sbb
adc
push
jnp
mov
sar
add
popa
out
inc
push
pop
adc
retf
mov
bnd
les
in
mov
sbb
(bad)
(bad)
cmp
into
mov
adc
adc
retf
xchg
dec
sbb
std
cmp
sub
retf
lahf
push
xor
mov
and
loope
pop
(bad)
push
mov
pop
pop
mov
jno
sti
jbe
test
(bad)
xor
sbb
jmp
addr16
daa
jo
sbb
jbe
sahf
js
lahf
imul
mov
push
jnp
popf
fcomp
lea
int
adc
js
movs
scas
movs
dec
cmp
lods
je
mov
jp
cwde
inc
shl
adc
push
mov
imul
fdivr
std
arpl
aad
call
jne
popf
mov
stos
aam
call
arpl
or
(bad)
(bad)
cmps
vcvtss2si
repnz
push
stos
mov
(bad)
push
push
int3
addr16
xchg
adc
jnp
scas
mov
jo
pop
icebp
fstp
mov
xor
int3
adc
dec
or
ror
inc
xor
xlat
sub
mov
ins
inc
lds
inc
and
scas
add
xchg
ja
fs
cwde
fmul
cmp
add
cmp
shl
ss
pop
jge
fwait
imul
mov
sbb
lea
nop
leave
or
cmp
push
inc
frndint
out
and
dec
sti
call
add
xchg
enter
xchg
adc
pop
cmp
fwait
xchg
dec
or
std
dec
sbb
mov
sbb
xor
inc
pop
enter
out
out
call
clc
cmp
sub
hlt
inc
push
nop
js
xor
daa
in
imul
daa
dec
les
retf
mul
fwait
out
lods
mov
sbb
push
xor
outs
test
xor
mov
pop
ins
sbb
sbb
cli
pop
jle
sub
push
test
cmp
hlt
loope
inc
(bad)
iret
aaa
fcmovbe
sbb
ror
data16
and
aaa
jecxz
pop
dec
mov
push
scas
xor
mov
cmps
rcr
(bad)
xlat
xor
jae
loope
sbb
xor
sbb
out
leave
mov
dec
push
jle
(bad)
shl
sub
mov
pop
icebp
in
add
sbb
sub
mov
jp
les
mov
cmps
push
jns
push
dec
repnz
jnp
sub
retf
ror
scas
fidiv
rol
jnp
inc
xchg
nop
mov
sub
jbe
xor
push
sub
(bad)
mov
and
pusha
out
test
jp
sub
xchg
pop
push
inc
mov
shl
shl
das
ins
cmc
sbb
ja
(bad)
cmp
inc
into
xchg
test
dec
lods
in
rcr
mov
jno
leave
mov
sahf
sbb
neg
movs
movs
lock
and
out
ja
inc
jl
xchg
inc
cmps
xchg
sub
ret
movs
daa
and
frstor
loope
scas
jae
push
fcomi
neg
mov
pop
js
jmp
fld
jecxz
inc
or
mov
cmps
xchg
mov
dec
sbb
or
cmps
inc
xor
popa
inc
adc
xchg
cmpxchg
push
call
jge
cld
add
pop
(bad)
aas
call
cmp
in
push
loopne
sbb
pop
rcl
mov
cli
aaa
pop
cld
into
jmp
or
jp
xchg
sbb
popa
ror
test
lds
add
and
push
mov
fsub
mov
lds
in
sub
clc
bnd
xchg
pop
js
cwde
cmp
sub
push
sub
fs
inc
push
mov
xchg
inc
scas
mov
jnp
rol
mov
nop
sti
sbb
stc
mov
fs
lahf
mov
in
ror
lahf
xor
pop
inc
add
push
mov
sti
adc
cmp
lds
cld
pop
inc
xchg
das
sub
or
pop
or
test
std
into
mov
mov
xchg
push
pushf
mov
add
gs
int3
mov
xlat
pop
fidiv
into
or
xchg
pusha
push
fs
std
pop
mov
mov
mov
inc
pop
je
(bad)
retf
cmp
push
pop
and
cmp
retf
lods
pop
pop
xor
jecxz
adc
rcl
jmp
inc
shl
mov
xor
push
lock
movs
fild
retf
dec
icebp
retf
scas
mov
sub
gs
jg
xchg
std
and
adc
fstp
xchg
mov
xchg
int3
frndint
mov
in
pop
sbb
addr16
pop
imul
add
scas
inc
inc
gs
or
ins
movs
push
mov
dec
sub
cmp
call
(bad)
in
jb
dec
leave
js
mov
jo
or
ins
ds
mov
lods
clc
sbb
ins
sti
mov
pushf
ds
loopne
cmp
mov
cdq
cmp
or
setge
out
ja
jecxz
mov
cli
jmp
aaa
mov
xor
jne
mov
push
xchg
dec
pop
ror
pop
jmp
dec
fisttp
and
inc
jne
stc
and
rcl
cmps
cs
shl
jg
push
mov
aaa
mov
and
xchg
mov
dec
mov
ja
pop
aad
shl
gs
loopne
inc
add
fisub
sbb
adc
xchg
cmc
jmp
push
clc
mov
rol
(bad)
adc
fisubr
mov
lahf
or
fdiv
clc
sbb
(bad)
jb
jae
outs
pop
mov
or
shl
jmp
inc
jmp
aad
add
in
jns
or
xlat
mov
adc
dec
out
mov
cmp
(bad)
xchg
lock
dec
sti
sub
pop
and
(bad)
js
jb
xchg
xchg
push
dec
aas
push
jle
jmp
pop
jo
sbb
fiadd
push
xor
mov
scas
add
jecxz
xor
add
rol
sbb
ins
cmp
popa
xchg
xchg
xlat
mov
inc
mov
mov
shl
adc
xchg
and
xlat
cli
add
int
inc
xor
pushf
imul
idiv
jge
and
jo
jle
or
cmp
cmp
das
stos
repz
or
mov
mov
or
mov
jns
scas
nop
jmp
xchg
adc
test
aad
pop
sbb
call
sbb
dec
push
inc
fsincos
jae
(bad)
nop
clc
mov
ss
pop
or
retf
adc
das
sub
jae
out
or
mov
mov
(bad)
push
sub
cmc
dec
add
sub
popf
dec
aad
std
loope
jo
nop
cmps
in
ret
sbb
jns
mov
jl
dec
sub
pop
out
cli
addr16
jl
add
test
lds
outs
cdq
mov
jmp
xchg
hlt
(bad)
push
xchg
jo
ja
lock
or
shl
retf
cli
lods
leave
int
jb
inc
cmc
dec
cld
pop
jbe
xchg
pop
cmp
xchg
fisttp
(bad)
or
push
pop
and
dec
ins
std
mov
mov
jmp
xor
sbb
mov
dec
popf
push
rol
or
out
inc
ins
jns
pop
jecxz
rcl
pusha
jmp
arpl
add
mov
mov
sbb
lods
cmp
scas
imul
sbb
shl
xchg
sub
mov
es
pop
cld
imul
mov
push
aad
mov
push
leave
xor
cmps
push
gs
mov
xchg
xor
shl
add
popf
mov
push
dec
icebp
jo
fmul
in
mov
xchg
mov
xchg
xor
das
sar
ss
fnstenv
xchg
mov
retf
leave
pop
adc
repnz
inc
jmp
icebp
mov
cld
cmp
les
xor
sbb
adc
jno
(bad)
xor
cli
dec
xchg
adc
jle
cld
lods
iret
shr
lods
or
sbb
jl
idiv
xchg
sub
pop
cmps
in
ret
cmp
dec
xchg
mov
jmp
shl
adc
nop
xor
pushf
cmp
imul
iret
xchg
push
sahf
mov
xlat
popa
retf
or
push
cmp
lds
imul
inc
add
ins
aad
pop
pop
push
dec
fcom
scas
cmps
pop
mov
xchg
cmc
call
dec
dec
sub
push
pop
and
mov
movs
dec
sahf
jns
and
div
fs
pop
and
popf
hlt
sub
idiv
jge
pop
sbb
cli
and
and
int3
bound
imul
jmp
xor
xor
sub
gs
xchg
imul
enter
pop
xchg
je
pop
stos
push
repnz
sbb
fld
mov
lahf
xchg
push
pusha
test
in
sub
in
push
xchg
xor
loopne
push
adc
hlt
pop
jo
sbb
das
ret
imul
cmp
xchg
xchg
test
popf
or
mov
stos
not
cmc
cs
outs
arpl
mov
mov
cmp
nop
sbb
cld
sub
add
aam
push
repz
hlt
es
cmc
mov
add
cmc
mov
pop
rcl
pushf
jnp
sub
pop
mov
repnz
push
pop
and
pusha
jnp
rol
test
inc
mov
jae
or
pop
es
pop
mov
dec
jl
(bad)
std
daa
adc
loop
movs
cld
xlat
mov
or
(bad)
ret
push
xor
or
add
xor
or
cmp
cmp
sbb
cdq
xor
xor
adc
loope
mov
cdq
jnp
lock
(bad)
retf
aaa
push
mov
mov
mov
call
into
mov
imul
dec
xlat
jmp
xlat
push
mov
mov
xchg
and
les
js
scas
fucom
sbb
pop
in
or
pop
lods
popf
and
or
scas
xchg
sbb
adc
xchg
ret
add
adc
xor
pop
arpl
(bad)
not
add
(bad)
ja
outs
pop
inc
jno
mov
push
ja
jge
jns
dec
sar
pop
ins
sar
xchg
xchg
fnstcw
es
(bad)
push
out
pop
xchg
arpl
sbb
add
add
imul
jle
or
stc
movs
cld
xchg
mov
push
call
sub
mov
xchg
xlat
sahf
shl
mov
mov
rcr
mov
stos
jns
(bad)
and
pusha
xor
repnz
stos
rcl
sbb
or
popa
inc
movs
and
std
mov
push
mov
jmp
les
xor
sar
jne
movs
mov
enter
lea
imul
or
xor
fsubr
add
stc
jmp
dec
sub
pop
push
xchg
leave
sbb
ja
lock
jl
pop
es
in
xchg
aad
out
mov
or
push
fs
adc
and
xchg
cmps
jb
test
std
ror
push
icebp
mov
(bad)
call
cmp
fild
xlat
jno
in
mov
lods
int3
fsub
and
in
and
ins
mov
lds
pop
shl
and
inc
(bad)
arpl
lahf
scas
int3
(bad)
mov
les
inc
je
sti
jae
hlt
sti
out
add
bound
outs
ret
sahf
and
jo
fsubr
shl
lods
daa
mov
mov
cs
sub
or
test
jo
add
push
mov
adc
cld
ins
mov
data16
data16
ror
dec
mov
add
adc
out
test
imul
loop
mov
stc
push
mov
jnp
xchg
or
outs
aad
pop
rol
xchg
sub
leave
outs
sbb
add
mov
pop
stos
xchg
adc
xchg
cmp
mov
jns
aam
out
test
lds
ret
push
repz
js
mov
mov
jno
pop
mov
bound
xor
xchg
ret
sar
mov
popa
enter
dec
add
ins
mov
in
je
jmp
xor
cld
sub
sub
clc
inc
pop
daa
not
add
lods
in
xor
lock
sub
add
push
js
sbb
cmp
mov
sub
add
jmp
jl
cmp
fwait
jmp
stos
retf
fld
sbb
cmps
xchg
jle
add
shl
push
cld
test
cdq
ins
dec
clc
imul
adc
call
and
mov
mov
cmp
adc
int
(bad)
mov
out
popfw
fsubr
fstp
push
stos
ret
inc
mov
je
lds
shl
xchg
frstpm(287
loop
adc
rcr
das
lods
fidiv
movs
scas
mov
sbb
inc
outs
inc
inc
fst
lods
aad
fnsave
pop
sub
xlat
dec
xchg
js
mov
loop
mov
nop
xor
cmps
jo
ffreep
loopne
in
out
cdq
(bad)
int3
je
lods
out
fcomp
sbb
sbb
cmp
or
aam
iret
mov
pop
or
ins
cmp
mov
jp
pop
sbb
test
cld
test
mov
ret
mov
xor
dec
xor
addr16
std
popf
clc
test
call
xchg
push
xor
imul
arpl
mov
sub
in
bound
cmp
call
push
mov
dec
sub
mov
pop
mov
pushf
ror
aas
xor
in
fnstcw
lahf
jmp
in
(bad)
rcr
jmp
(bad)
lock
sti
xchg
cmc
mov
sub
aad
pop
jge
loopne
mov
aas
sub
(bad)
retf
retf
mov
movs
adc
mov
out
add
fist
push
mov
rcl
daa
(bad)
cli
mov
xchg
jge
test
push
and
sub
and
dec
and
jne
cmp
xchg
push
aaa
int
mov
mov
repz
mov
loop
es
dec
inc
gs
cmp
push
dec
in
mov
mov
mov
not
jb
xchg
adc
dec
loopne
pop
and
sub
or
push
inc
cmc
sbb
fwait
(bad)
cli
out
fdiv
daa
aas
mov
test
(bad)
xlat
cmp
sub
repz
cmp
test
jecxz
xchg
mov
scas
and
ja
add
sub
mov
mov
mov
out
popa
mov
adc
pop
xchg
ja
cmp
inc
and
cwde
pusha
neg
call
jbe
add
pop
mov
mov
ins
xchg
fcomi
ret
arpl
jae
rol
cli
add
aam
xchg
adc
test
pop
int
ins
jnp
add
fidiv
sahf
sahf
or
dec
pop
adc
pop
pop
jl
std
xchg
fwait
popa
mov
jne
ds
jge
adc
push
push
repz
bound
sbb
jmp
xchg
push
outs
xchg
les
sub
jns
xchg
sbb
add
inc
xchg
gs
punpckldq
push
imul
push
mov
adc
fsub
sub
enter
sahf
mov
adc
add
cwde
test
outs
sub
sub
add
cmps
test
mov
fbstp
mov
cmp
das
xor
pop
ret
jns
cmp
or
aaa
add
inc
daa
jnp
ror
cmp
mov
push
je
ret
pushf
inc
iret
adc
cmp
out
xchg
out
sbb
mov
jl
adc
pop
ja
jmp
and
push
mov
imul
movs
(bad)
scas
xor
shl
mov
pop
pop
or
movs
pop
mov
xchg
jbe
add
cmp
fwait
in
out
ins
jne
or
fwait
jnp
adc
lahf
loope
in
cmp
jle
icebp
inc
inc
(bad)
lea
outs
xchg
cwde
les
dec
mov
mov
ret
cmps
ins
mov
and
int
in
pop
icebp
xchg
cld
out
pusha
aam
mov
jp
fist
cmc
add
adc
in
xchg
jp
sbb
xor
cld
jle
cli
stos
fwait
cmps
xchg
(bad)
popa
cdq
aad
cmp
add
clc
push
shl
ret
inc
add
inc
add
and
repnz
int
(bad)
xor
mov
adc
neg
stos
jp
imul
mov
mov
add
(bad)
mov
cmp
pop
fwait
in
scas
outs
push
outs
out
ret
or
out
cmp
in
jl
xor
(bad)
cmp
push
dec
adc
idiv
in
inc
cmp
aaa
cwde
out
push
call
std
mov
dec
(bad)
outs
mov
pop
mov
outs
xchg
inc
sbb
and
sahf
in
mov
jge
hlt
scas
mov
add
ss
jae
push
stos
inc
icebp
xchg
nop
mov
lea
or
jne
test
das
mov
dec
adc
out
mov
cs
mov
push
inc
das
stos
and
les
mov
fcomp
fst
and
jle
div
inc
repz
cli
scas
pop
cmps
mov
repnz
ins
in
xor
xor
cmc
inc
add
and
sbb
sub
xor
jl
mov
js
sbb
cli
loop
cmps
loope
xchg
mov
repz
fsubr
cmc
xor
and
dec
inc
or
inc
popa
mov
sub
mov
(bad)
mov
sbb
dec
mov
pop
xor
dec
popa
rep
aad
jns
and
pop
inc
leave
stos
or
cmp
and
mov
(bad)
pop
adc
push
pop
shl
repz
sbb
mov
cli
push
jmp
mov
mov
ins
sti
cmp
add
jmp
mov
call
fs
call
cvtps2pd
mov
adc
clc
and
jle
lods
xor
mov
or
rcr
scas
pop
mov
movs
mov
hlt
sub
enter
les
dec
mov
add
test
aaa
cwde
mov
ret
jg
lods
mov
retf
xlat
add
jge
mov
stos
pop
(bad)
fidiv
jns
sbb
mov
cmp
add
cwde
loope
cmp
lods
mov
inc
popa
aam
dec
pop
loop
ss
fst
cmp
cmc
fs
popa
not
outs
aam
lds
inc
and
repz
fdivp
inc
push
mov
out
ins
rcr
int3
pop
sub
hlt
add
aam
loope
dec
fstp
mov
lahf
sbb
pop
mov
adc
and
pop
mov
mov
jbe
pop
ret
cs
rcr
mov
call
mov
push
dec
adc
loope
cdq
dec
xor
mov
inc
shr
std
mov
inc
cmps
pop
dec
mov
add
cmc
xor
or
mov
cli
(bad)
cld
loopne
pop
sub
enter
pop
pop
int3
out
xchg
(bad)
int
jne
ret
inc
test
daa
shl
retf
imul
push
pop
mov
cmp
and
cmps
inc
jl
push
push
leave
xchg
cdq
outs
mov
outs
test
add
xchg
mov
js
pop
loopne
jbe
stos
arpl
(bad)
mov
dec
test
movs
or
dec
push
hlt
add
push
call
retf
jg
movs
out
stos
fdivr
mov
in
(bad)
stos
sub
mov
stos
pushf
add
cs
inc
mov
test
leave
xor
in
cdq
fld
push
mov
mov
pop
inc
jmp
lods
pop
inc
xchg
out
popf
or
outs
sub
sahf
stc
lock
lods
mov
rcl
xchg
(bad)
pop
arpl
fcom
mov
(bad)
or
xchg
imul
lea
pop
fwait
adc
fld
jae
dec
(bad)
xor
aas
mov
fimul
pop
das
mov
scas
jmp
add
test
mov
scas
test
inc
mov
aas
test
call
retf
mov
push
out
rcl
(bad)
test
xchg
into
pusha
or
(bad)
cli
xchg
les
ins
dec
pop
mov
or
jmp
call
or
jg
jecxz
in
xchg
test
pop
dec
xchg
jmp
sub
cmp
push
mov
mov
xchg
xchg
out
into
dec
and
adc
sub
push
cmps
test
ins
cmp
cmp
je
push
sub
add
das
xor
push
sub
push
and
gs
lods
mov
ret
popa
aas
inc
mov
fmul
cli
add
fs
popf
clc
jg
add
or
sbb
sub
shl
mov
lea
xchg
or
iret
sub
(bad)
cdq
(bad)
je
(bad)
push
mov
gs
dec
rcl
cmp
cdq
inc
mov
leave
jno
mov
push
scas
jmp
mov
sbb
ds
sbb
movs
sub
sub
cmps
mov
call
sub
pop
ins
sub
push
sub
mov
in
push
ret
popa
outs
mov
adc
add
test
and
ds
fwait
add
pop
fdiv
mov
imul
xchg
xchg
std
in
aaa
adc
test
cmp
jne
imul
ins
push
(bad)
add
or
in
dec
aas
sub
or
into
cs
fs
push
stos
add
sub
cmc
lods
dec
cmp
dec
or
sti
jmp
jecxz
sti
xchg
mov
leave
mov
aam
jo
inc
adc
fiadd
jl
sar
pop
(bad)
push
jge
jns
data16
adc
rcr
mov
jb
ins
cmp
dec
dec
mov
mov
aaa
mov
pop
dec
out
or
ds
fsub
push
(bad)
xchg
fiadd
or
sbb
loop
(bad)
out
test
mov
jnp
into
sbb
jnp
outs
outs
sub
cld
inc
push
xchg
popf
mov
push
mov
int3
adc
pop
mov
add
xchg
addr16
jnp
jne
jp
inc
xor
dec
stos
push
dec
leave
fwait
out
xchg
out
lods
cmp
sahf
pop
mov
aad
fsubr
xchg
cdq
mov
jae
lea
sbb
div
or
sub
xchg
push
mov
pop
aad
adc
jg
out
cwde
nop
inc
mov
scas
or
mov
test
xchg
dec
xor
push
aam
push
mov
cdq
ret
or
dec
push
mov
outs
inc
rcl
rsm
pop
pop
leave
dec
fild
mov
out
push
jge
(bad)
ins
sbb
(bad)
push
mov
mov
cdq
mov
imul
clc
and
jl
mov
push
cmps
mov
(bad)
(bad)
jmp
out
loope
jb
jne
iret
lahf
lods
cmova
jo
mov
and
mov
lods
imul
xor
out
call
xchg
bnd
fistp
pop
into
adc
mul
(bad)
jmp
mov
int3
cmp
pop
(bad)
jno
jmp
mov
mov
cmc
pop
push
cmp
jnp
ficom
adc
push
call
inc
push
xchg
sub
retf
loope
mov
in
scas
mov
xchg
gs
mov
mov
cmc
(bad)
fcmovnu
ss
sbb
mov
stc
retf
push
aaa
outs
fwait
and
or
mov
xchg
dec
or
ds
cmps
imul
xchg
retf
pop
aaa
ret
mov
push
(bad)
fld
(bad)
call
cli
sbb
aaa
in
push
in
mov
mov
pop
push
fwait
addr16
scas
adc
and
fsub
add
jbe
hlt
sbb
dec
mov
dec
ss
sar
fs
das
pop
adc
xlat
in
cmps
dec
scas
dec
pop
add
push
dec
mov
shr
cwde
std
sar
xchg
xchg
ror
and
cmps
out
or
out
mov
fidivr
lea
mov
movs
and
jbe
in
pop
sub
mov
mov
push
jecxz
mov
dec
or
daa
outs
or
jg
jge
pop
push
mov
fdivr
je
or
pop
aas
cmp
aam
popa
sbb
(bad)
(bad)
sbb
cmc
movs
ror
adc
inc
push
pop
in
jge
jmp
sbb
dec
and
lea
sub
int3
fdiv
lahf
inc
sub
sub
pop
jnp
aas
push
lods
shl
jecxz
fdiv
std
push
fcmovnb
sub
push
rcr
(bad)
xor
jecxz
push
lea
mov
jo
dec
adc
in
jge
outs
adc
adc
cli
push
mov
pushf
ds
mov
or
jmp
lsl
imul
cs
pushf
pusha
pop
not
js
call
xrelease
mov
cmp
inc
push
std
or
in
mov
cs
(bad)
xchg
fwait
test
mov
push
not
lahf
dec
jns
push
add
push
cs
ret
lea
or
imul
ins
jp
adc
mov
lds
dec
in
cmp
aam
rol
hlt
call
icebp
xchg
sbb
xor
add
repnz
mov
mov
cli
call
adc
xchg
inc
cmp
mov
mov
xchg
pop
mov
mul
push
lahf
retf
in
add
aad
movs
(bad)
jmp
loop
xor
mov
mov
xor
jecxz
xchg
jno
(bad)
out
call
push
stos
lods
aad
jne
jecxz
rcl
ficom
sbb
mov
es
dec
dec
jmp
aaa
jle
rol
fdecstp
fisub
mov
jno
mov
jg
mov
adc
in
add
jo
inc
fidivr
sub
jge
movs
jno
mul
or
pop
out
dec
fstp
popf
cmps
mov
inc
dec
jle
lahf
inc
fild
ss
cmps
push
dec
sbb
cmp
int
rol
xor
std
imul
addr16
out
xor
sbb
pop
mov
push
nop
cwde
hlt
loop
add
or
test
lods
mov
mov
pop
sbb
add
jmp
mov
lods
or
jmp
jne
sbb
add
imul
mov
in
cmps
daa
nop
adc
jnp
scas
outs
test
stos
mov
stc
and
pusha
int3
fsub
mov
scas
push
cs
push
adc
add
mov
push
int
pop
add
(bad)
sub
inc
iret
xor
dec
aam
jb
test
push
stc
adc
ins
xchg
mov
and
and
ficom
icebp
sub
inc
mov
or
sbb
pop
stos
mov
xchg
les
inc
jo
mov
jle
sbb
adc
cmp
push
aaa
mov
and
arpl
jecxz
lds
rcr
stos
mov
push
adc
dec
dec
into
repz
inc
push
rcr
pop
mov
fldenv
cmc
mov
mov
dec
dec
repz
aam
rcl
ds
sbb
sbb
popa
dec
mov
mov
inc
int3
retf
dec
(bad)
ds
pop
cmp
inc
xor
ins
jle
imul
jno
stc
sub
aam
lock
sbb
mov
mov
cmc
add
(bad)
jmp
add
test
jb
add
xchg
xor
call
popf
dec
xlat
push
push
movs
push
push
jne
mov
ins
js
shl
xchg
rol
add
scas
push
cs
push
(bad)
cmps
stos
stos
pop
cmovnp
jne
iret
add
dec
shl
add
cmc
leave
(bad)
imul
mov
(bad)
or
fwait
cld
and
add
fwait
cwde
sub
test
repnz
jnp
xchg
mov
icebp
jmp
addr16
add
and
aaa
gs
in
or
sbb
aas
test
or
adc
and
arpl
out
imul
mov
outs
sbb
pop
stos
and
push
xchg
pop
icebp
sub
fsub
mov
add
inc
(bad)
retf
aad
mov
mov
pop
jmp
cmp
inc
pop
pop
fst
ss
fs
cs
fs
call
jmp
rcr
inc
js
je
icebp
les
rcr
int
mov
sahf
push
lods
mov
(bad)
cmps
arpl
pop
mov
adc
(bad)
sbb
ret
cdq
mov
or
ror
jmp
int
push
sub
in
inc
sub
push
pop
dec
mov
lahf
adc
ffreep
and
pop
cmp
outs
jmp
nop
pusha
popa
fisttp
cli
int
rol
mov
shl
jbe
hlt
fsubr
xchg
js
inc
ret
clc
arpl
popa
iret
and
mov
mov
call
xor
ss
xlat
pop
es
stos
dec
xor
push
(bad)
sub
add
inc
imul
push
sbb
outs
xlat
cmp
push
fisubr
pop
jns
mov
enter
pop
cdq
aad
xor
xor
push
loope
mov
cs
cmp
pop
mov
or
sbb
test
test
adc
cmp
push
fucom
pop
jg
int
inc
ins
repz
jg
movs
stos
lods
and
push
cs
dec
dec
cs
xchg
or
call
mov
outs
or
and
xchg
adc
mov
inc
lahf
sbb
add
jbe
out
push
arpl
mov
sbb
(bad)
push
and
mov
jns
sbb
inc
pop
sbb
push
cmp
mov
in
inc
pop
js
pop
cwde
mov
sbb
sub
xor
lds
xor
jle
pop
jge
and
push
jmp
pop
cli
cs
pop
fistp
imul
mov
pop
pop
out
add
pop
jnp
loopne
mov
nop
xor
mov
jge
or
(bad)
and
scas
dec
fs
xchg
cmc
pushf
mov
xchg
jnp
inc
jle
daa
xchg
fcom
or
and
jnp
adc
dec
les
sub
xor
mov
imul
push
and
inc
popa
push
adc
and
(bad)
mov
and
dec
push
lds
xchg
gs
mov
xor
mov
sub
out
push
dec
lock
push
mov
aam
dec
pushf
in
or
bound
fwait
ja
inc
sub
sub
rol
enter
test
xchg
xchg
cld
pop
xchg
push
sbb
(bad)
dec
add
stc
ins
xchg
cmp
mov
inc
sti
cs
pop
cs
retf
shl
sub
xor
mov
jg
dec
lock
imul
inc
jp
loop
xchg
mov
adc
rol
fisub
es
sbb
xchg
cli
rcl
not
mov
fwait
(bad)
push
mov
scas
inc
dec
sahf
jp
push
mov
mov
and
sub
push
sbb
int3
fcmovu
jl
pop
lea
enter
xor
pop
sahf
mov
dec
(bad)
jns
adc
in
xchg
xor
lods
ss
xchg
ja
mov
sahf
dec
in
stos
mov
or
je
xchg
mov
cdq
in
push
fwait
inc
xchg
in
retf
pop
pop
adc
mov
cli
inc
xchg
mov
imul
dec
mov
or
cdq
fnsave
cmp
jmp
popf
and
sub
ja
mov
adc
int3
mov
adc
push
into
inc
outs
movs
cmp
cmps
rcr
or
pushf
jmp
adc
sub
enter
mov
inc
sahf
push
ret
push
push
and
adc
sbb
fbstp
ret
je
scas
mov
pop
adc
and
loop
pop
pushf
pushf
and
xor
enter
add
(bad)
sti
dec
lds
jmp
loopne
mov
xor
adc
in
lods
pop
fnstsw
mov
int
dec
clc
lods
cmps
add
cmp
mov
pop
sahf
pop
(bad)
out
fimul
push
inc
ins
dec
mov
jne
clc
mov
(bad)
add
sahf
xor
or
inc
jle
cmc
sub
inc
ficomp
out
inc
stc
jae
and
xor
push
cmp
into
xor
sbb
(bad)
dec
test
sub
cmp
in
lock
pushf
stos
imul
call
ret
popa
test
out
arpl
and
cmp
xchg
adc
add
mov
int3
jg
inc
mov
into
inc
add
cs
fcom
mov
mov
(bad)
jge
push
not
push
cmp
out
sbb
inc
push
push
call
cld
imul
cs
or
scas
add
in
dec
outs
or
mov
(bad)
out
inc
test
fdecstp
jnp
lods
mov
setnp
push
cli
adc
test
cmc
inc
and
jae
and
sbb
sbb
leave
jb
shr
adc
lds
shl
jb
clc
xor
add
xor
xchg
addr16
aas
enter
jge
cmps
aaa
js
mov
jno
mov
xchg
inc
pushf
or
(bad)
jle
(bad)
fist
xor
cmc
xchg
or
mov
jns
dec
xchg
retf
cmp
xor
es
popa
sbb
call
pop
mov
je
js
push
xor
push
ret
lods
daa
cwde
jo
and
stos
xor
or
pop
popa
add
pop
add
mov
jmp
icebp
push
or
mov
or
adc
jp
mov
jp
push
add
imul
les
mov
fs
adc
dec
clc
inc
inc
adc
or
cmp
push
rcr
mov
or
push
jbe
and
and
nop
xchg
mov
sbb
loopne
add
xchg
xor
mov
ret
data16
out
pop
push
jo
adc
dec
in
mov
or
adc
dec
mov
cmp
enter
jnp
je
mov
xchg
xlat
or
mov
mov
jg
cmc
pop
cmp
sub
outs
(bad)
out
xor
fld
bound
dec
adc
pusha
je
jmp
sub
add
jo
fisttp
inc
out
imul
mov
mov
gs
out
and
cdq
mov
mov
(bad)
xor
retf
scas
add
pop
(bad)
jne
jmp
mov
std
push
int3
lods
xchg
jo
out
icebp
adc
std
cmp
xchg
pop
mov
add
cmpxchg
pop
or
fcom
std
mov
bound
enter
dec
mov
cdq
fidivr
jecxz
je
or
and
jle
pop
dec
js
cdq
es
sub
retf
inc
movs
je
fild
adc
add
test
das
movs
(bad)
lods
retf
jbe
sub
int3
add
popa
inc
xchg
inc
retf
cmc
pop
and
aam
psubd
fst
inc
fdiv
(bad)
jecxz
addr16
pop
std
mov
mov
nop
adc
add
push
cs
inc
popa
(bad)
sbb
jle
sbb
aam
or
dec
icebp
push
jns
mov
or
shr
sahf
cmp
repnz
dec
adc
push
in
test
jmp
dec
or
iret
rep
movs
xor
jbe
das
idiv
jo
imul
jne
call
mov
sbb
and
cdq
cs
sub
repz
sar
pusha
addr16
sub
mov
outs
pop
retf
xchg
dec
xchg
inc
es
lahf
add
stos
add
xchg
iret
jp
fdivr
outs
daa
punpckldq
loopne
inc
sar
stos
mov
mov
lock
inc
jns
leave
retf
popf
inc
sub
push
imul
popa
rcr
pop
pop
adc
xchg
xor
je
js
imul
inc
mov
rcl
xor
pop
rcl
fisub
test
add
or
xchg
vxorps
sahf
jecxz
es
jmp
(bad)
and
mov
push
push
jno
push
or
mov
outs
out
push
pop
out
int
mov
nop
dec
ds
xor
inc
ds
int
(bad)
call
and
push
sahf
push
sub
push
aas
bound
mov
inc
xchg
adc
leave
jecxz
or
repnz
xchg
icebp
gs
int
cmp
lock
push
sti
cmp
xor
mov
adc
xchg
pop
ret
mov
mov
rcl
scas
mov
jmp
sub
ficomp
push
ret
cmps
out
or
xor
movs
in
(bad)
out
mov
mov
jl
fwait
inc
xchg
(bad)
jecxz
sbb
bound
pop
daa
mov
cmps
add
jo
push
(bad)
cli
mov
shr
or
fdiv
pop
div
adc
in
mov
xchg
xor
mov
add
jle
xchg
lock
mov
dec
inc
lods
add
cmp
adc
adc
dec
outs
cmp
mov
adc
pop
jne
mov
(bad)
pop
pop
ror
(bad)
stos
ja
jecxz
or
movs
fnstcw
lock
cmp
dec
sti
out
cmc
enter
int
popf
repz
mov
es
sbb
mov
mov
fst
into
mov
in
stc
popf
inc
inc
xchg
pushf
in
and
mov
adc
push
cmp
xor
call
and
and
push
sub
mov
outs
ss
mov
add
gs
stos
push
adc
ins
bound
adc
les
repnz
test
ret
ins
mov
fmul
(bad)
jp
(bad)
pushf
xor
in
mov
sub
data16
adc
dec
sub
test
push
out
or
fnstsw
xchg
hlt
jb
mov
fbstp
aaa
sub
push
cmps
jnp
stc
ret
jne
imul
mov
pop
loope
in
aaa
ja
jo
mov
xchg
test
mov
aaa
and
mov
stos
cmp
mov
sbb
adc
je
hlt
loope
pop
and
adc
xor
push
aad
pop
pop
and
mov
and
lods
stos
dec
aaa
mov
mov
add
push
sbb
mov
mov
scas
push
cmp
cdq
test
nop
inc
mov
movs
mov
mov
mov
retf
int3
mov
into
sbb
test
pushf
add
lahf
jmp
jb
or
popa
loopne
sbb
scas
out
mov
inc
cmp
jg
xchg
mov
jns
xlat
mov
xchg
add
cmps
xchg
lods
mov
mov
pop
xchg
call
call
imul
sahf
mov
adc
mov
(bad)
cs
add
in
rcl
pop
ss
inc
out
xchg
cld
ror
pop
mov
lds
int
fbld
jo
fistp
loope
or
std
pusha
adc
cmp
hlt
(bad)
cmp
ret
sub
jp
jmp
movs
mov
push
jp
xor
or
lds
cmp
pop
fistp
xchg
loop
loope
jp
int
cli
je
and
mov
inc
pop
outs
add
mov
(bad)
xchg
mov
cmp
loop
xchg
jbe
retf
push
call
dec
cmp
sub
arpl
pop
mov
cld
(bad)
repz
sub
ins
es
push
int
mov
je
mov
sub
call
or
out
inc
push
loop
jl
gs
inc
les
mov
mov
and
or
xchg
mov
jmp
add
(bad)
jnp
inc
cmps
loope
pop
mov
add
cmp
mov
mov
adc
sti
push
hlt
jne
cmc
xchg
movs
clc
jmp
cmp
arpl
inc
pop
pop
mov
adc
aad
cmps
mov
into
mov
jo
sub
sub
cs
mov
in
and
and
xor
retf
xor
push
jg
out
cld
je
inc
xchg
lock
in
sbb
mov
imul
mov
mov
(bad)
into
push
mov
(bad)
leave
outs
pop
mov
repnz
inc
sbb
xchg
sbb
cmc
add
mov
arpl
in
mov
mov
fld
sub
mov
ret
jge
ins
jae
loope
inc
jge
adc
rcl
outs
jnp
xchg
xchg
lock
or
or
aaa
(bad)
push
je
push
arpl
call
and
push
jp
sbb
iret
jecxz
add
cmp
sub
or
loopne
cmc
jae
inc
and
popf
ret
jp
dec
test
jo
popf
sub
ret
dec
sub
(bad)
std
ss
fs
dec
cmc
mov
aam
ins
das
cmp
mov
sub
mov
test
ret
mov
ins
xchg
int3
mov
aad
cmc
xchg
or
shl
lds
aas
xlat
std
mov
cs
add
adc
imul
inc
mov
popf
mov
ins
pop
arpl
push
jge
fld
lods
push
adc
call
fstp
xchg
push
fld
and
es
pop
aad
stc
mov
lock
pop
scas
cli
ror
test
adc
push
out
daa
cmp
xchg
or
xor
dec
aam
pop
test
push
(bad)
sub
test
mov
pusha
rol
lock
cmovb
aad
jns
mov
test
stc
mov
and
jg
and
sub
sub
out
movs
ror
popa
ss
pop
push
jmp
inc
mov
mov
bound
loop
cmps
cmp
pop
xchg
fstp
or
div
outs
mov
jl
cmps
or
das
xchg
xchg
aam
mov
call
mov
dec
cmp
jle
cmp
push
or
cli
pop
push
scas
cmp
xchg
ins
imul
sbb
push
(bad)
xchg
or
xchg
adc
cwde
or
add
pop
pop
sub
stos
mov
out
inc
nop
call
fs
fs
fwait
ror
sub
shl
and
in
cmps
retf
sbb
mov
jge
add
jae
inc
outs
fnstsw
dec
movs
ficomp
add
jg
inc
jle
add
(bad)
cli
(bad)
adc
push
je
mov
jbe
xor
movs
ins
mov
push
mov
cmp
loopne
fsubr
popa
(bad)
xchg
and
sub
nop
mov
sub
aad
cmp
pop
jbe
call
fnstsw
test
out
push
lods
mov
and
retf
test
fadd
fistp
jbe
lods
stos
or
sbb
cmc
pop
jecxz
xor
xchg
mov
mov
(bad)
push
iret
push
shl
hlt
mov
or
ret
lock
lahf
push
jo
(bad)
pminsw
scas
adc
jae
test
inc
icebp
pop
in
jne
imul
addr16
icebp
(bad)
inc
add
std
js
dec
mov
or
adc
add
cmp
dec
(bad)
ins
mov
inc
xchg
aam
adc
fwait
pop
adc
jl
xchg
in
ss
dec
jbe
jge
aaa
adc
jmp
push
pop
push
sub
das
(bad)
in
and
xor
pushf
jp
sbb
mov
cmp
dec
mov
mov
movs
add
dec
mov
inc
movs
fs
fist
push
xchg
out
mov
jg
inc
sub
cld
cs
repnz
call
pop
call
addr16
xchg
inc
push
das
test
and
push
mov
fisubr
shl
test
lods
inc
into
pop
dec
jp
mov
jne
sbb
adc
mov
xor
(bad)
std
lock
cmp
sbb
sar
push
(bad)
cmp
ret
mov
in
and
inc
stos
inc
push
fisub
in
outs
mov
adc
mov
mov
cmc
mov
inc
fdivr
ror
dec
dec
rol
cmps
jge
mov
repz
cmps
lea
dec
in
into
mov
ins
sub
sub
in
cmp
inc
shl
movs
mov
xchg
aaa
call
cmc
clc
push
inc
sub
jo
pop
mov
jb
fstp
mov
sbb
cmp
arpl
loop
sti
sbb
nop
shl
ins
mov
ins
imul
(bad)
mov
test
dec
call
fstp
int3
loopne
iret
es
push
xchg
inc
dec
push
retf
add
pop
int
stc
std
cmc
(bad)
cmps
in
mov
lea
push
jecxz
aaa
jmp
in
out
pop
jns
cmp
xchg
pop
pop
mov
stos
jp
pop
out
cdq
pop
(bad)
int3
lock
or
xchg
inc
inc
stos
cs
inc
inc
shl
and
and
push
iret
(bad)
adc
sub
jb
sub
jae
mov
leave
adc
mov
rcr
js
push
jne
cmp
cmp
mul
add
es
shl
push
std
leave
and
jae
push
fwait
pusha
dec
mov
xor
push
cmp
sbb
xchg
cmp
and
mov
inc
lods
movs
add
(bad)
fadd
test
adc
xor
xchg
call
stos
jmp
in
fs
mov
xchg
out
outs
xchg
cmps
psubw
xchg
cwde
movs
(bad)
and
xchg
inc
sub
retf
xchg
push
fwait
or
mov
mov
popf
es
cwde
pusha
add
outs
pop
xchg
aas
push
mov
sbb
pushf
pop
fdivr
dec
mov
pop
jns
jns
ins
sub
ds
sub
add
cmp
or
mov
jp
test
daa
mov
iret
sub
in
lods
ins
xchg
or
ret
ret
je
mov
pop
inc
dec
xchg
or
sbb
out
jle
(bad)
mov
scas
das
inc
mov
movs
loop
cmps
test
pop
mov
xor
jno
lds
fisttp
cdq
jne
dec
xchg
pushf
test
pop
dec
aaa
pop
call
loopne
inc
cmps
pop
sbb
push
jb
(bad)
and
imul
push
cli
or
jb
ror
movs
(bad)
mov
mov
add
loopne
mov
leave
pop
inc
mov
jmp
cmps
jns
mov
adc
mov
lds
or
jge
mov
xchg
adc
mov
jmp
scas
xchg
sar
inc
cs
pop
jne
aam
gs
scas
mov
cmp
pusha
jp
movs
push
retf
stos
lea
mov
in
dec
mov
xchg
aas
lds
daa
jbe
rcl
into
cwde
xor
pop
js
push
pop
push
das
arpl
add
cdq
loopne
leave
push
xor
repnz
nop
js
lods
add
add
push
enter
push
imul
inc
adc
mov
inc
cli
cmp
inc
lds
pop
mov
inc
jo
push
shr
or
sub
(bad)
ficomp
imul
pop
mov
push
or
int3
scas
mov
rol
lahf
bound
popf
sbb
sub
lea
mov
outs
mov
fstp
sbb
test
xor
mov
or
cmp
mov
xor
mov
cmp
cmp
lods
iret
mov
fidiv
js
lods
adc
mov
xchg
sub
cmc
inc
push
int3
sbb
pop
xor
pop
jp
fnstenv
cmps
jne
jl
dec
enter
aam
push
daa
call
cli
add
mov
cmp
xor
cwde
dec
and
ins
int
pop
and
retf
rcr
jbe
sbb
call
shr
push
jp
cmp
jnp
adc
not
inc
push
movs
xor
in
sub
jecxz
std
push
push
mov
xchg
outs
push
pop
dec
aam
addr16
jl
shr
push
shr
cs
xor
daa
mov
cmovs
mov
les
dec
xor
mov
inc
jmp
push
inc
and
shr
jnp
push
xchg
adc
xchg
mov
aas
fucomip
out
sub
dec
enter
loopne
aad
fisttp
shl
enter
xchg
repnz
rcl
jg
cdq
cld
jp
push
ins
inc
cmp
mov
cld
cld
shl
sub
je
mov
mov
imul
push
or
add
inc
xor
movs
push
lahf
adc
fwait
xor
sub
xor
jns
pushf
adc
cmp
pop
bound
jecxz
push
mov
(bad)
imul
xor
lea
lods
loop
adc
xchg
mov
dec
push
jmp
test
mov
add
mov
jmp
jne
gs
shr
push
jl
ret
pop
and
daa
push
leave
test
sbb
sbb
arpl
mov
xor
push
or
cli
imul
(bad)
js
lahf
idiv
out
adc
dec
mov
sub
fistp
test
inc
retf
and
cmp
ds
repz
ret
mov
int
and
add
std
lahf
cmps
std
mov
xor
fisubr
sub
mov
test
(bad)
pop
mov
mov
add
fadd
sbb
xor
jnp
sbb
test
mov
in
jnp
shl
loop
or
dec
loopne
xor
das
int3
lahf
xchg
or
clc
xchg
jl
popf
xor
jle
push
loopne
xchg
adc
in
aas
test
stos
xchg
fs
test
sbb
cmp
in
mov
iret
jg
add
repnz
jnp
cmp
clc
(bad)
mov
xchg
ror
mov
adc
les
aas
jmp
dec
inc
xchg
mov
mov
sahf
retf
shl
sti
int3
dec
and
ret
and
xor
loopne
addr16
into
cmps
cmps
xor
(bad)
cmp
ins
enter
inc
xor
enter
mov
loopne
pop
lahf
pop
dec
xchg
add
hlt
repnz
(bad)
in
xlat
jns
test
scas
movs
push
clc
arpl
xchg
or
or
call
mov
pop
pop
xor
popa
sub
mov
pop
or
(bad)
or
jmp
dec
in
mov
les
adc
xchg
stos
int
ss
push
lea
shl
movs
push
add
cmps
jl
ret
ds
pusha
outs
cli
inc
and
out
fdivp
call
out
imul
mov
fwait
inc
push
mov
pop
cmp
jecxz
icebp
xor
(bad)
sbb
into
das
jne
mov
daa
add
ficom
lock
hlt
sbb
add
and
inc
or
push
cmps
dec
aam
mov
inc
mov
in
cmp
enter
pop
and
int3
sub
(bad)
(bad)
xchg
inc
cmp
mov
fnstenv
cmp
es
mov
daa
cmp
aad
loope
scas
jecxz
je
jmp
and
in
jg
or
dec
mov
cs
loopne
(bad)
lods
aaa
mov
sbb
cmp
jle
dec
jmp
mov
icebp
add
jl
dec
sbb
hlt
loop
cli
jb
dec
mov
push
inc
mov
loopne
nop
jae
inc
inc
sbb
and
xlat
mov
je
xor
in
outs
push
or
shl
inc
pop
aaa
mov
jge
sub
jmp
push
call
mov
cld
inc
test
mov
shl
int
xchg
ja
mov
ret
ins
test
cld
jns
pop
jno
cmp
cmp
scas
push
clc
ror
lds
call
pop
and
and
outs
pop
sbb
mov
mov
je
mov
xor
push
mov
aas
xor
and
or
dec
jecxz
test
sahf
(bad)
push
sbb
push
test
in
or
leave
mov
(bad)
and
mov
fimul
xchg
xchg
sbb
pop
ss
mov
fcmovu
jmp
push
into
ins
cs
mov
ins
bound
inc
mov
xchg
test
das
ret
lea
xchg
loopne
xchg
out
adc
lods
(bad)
jmp
jae
xor
popa
cld
es
shr
or
and
jbe
ret
xor
mov
and
pop
fwait
bound
fnsave
int
les
fidiv
gs
xchg
dec
push
in
adc
dec
dec
push
js
mov
mov
pop
(bad)
out
adc
mov
int3
into
int
push
inc
mov
icebp
out
pop
ins
inc
push
neg
pusha
sbb
mov
pop
and
mov
call
rcr
mov
mov
stos
leave
loopne
dec
push
stos
dec
sub
(bad)
cmp
xor
ins
pop
sti
and
cdq
mov
xor
cdq
lock
xlat
mov
cmps
xor
leave
xor
ins
xchg
out
mov
das
neg
jns
inc
out
cmp
outs
and
adc
xchg
jne
pop
call
fiadd
imul
mov
in
pop
inc
cwde
sbb
call
mov
cld
fwait
pop
fs
fucomip
pop
adc
sub
cwde
retf
cmp
mov
mov
ret
imul
push
and
cmps
in
sub
mov
icebp
push
cmp
cmps
or
jo
inc
adc
mov
mov
outs
cmps
mov
jge
pop
clc
adc
or
jno
mov
cmps
inc
and
aas
mov
xlat
push
sub
xchg
pop
icebp
jne
stos
jae
lock
fist
pop
test
outs
or
out
mov
jg
lods
jmp
ss
call
das
inc
imul
cmc
sub
or
shl
pop
ss
enter
pushf
out
mov
mov
loopne
mov
and
xlat
push
adc
inc
cmp
(bad)
fs
push
sub
stc
ja
push
push
imul
push
test
test
rdtsc
outs
cmp
and
inc
add
popf
mov
repz
sub
mov
adc
pop
cmp
xchg
repnz
test
test
xchg
std
fild
mov
test
sti
or
jg
loop
jle
test
fcom
push
in
mov
inc
or
stos
pop
mov
es
add
sub
push
mov
mov
outs
ficom
es
inc
add
fprem1
or
and
pop
loope
mov
pop
daa
mov
dec
sub
mov
pop
sub
or
loope
loop
mov
push
sub
mov
rol
cli
ret
scas
jo
lods
jge
jnp
pop
adc
mov
arpl
push
std
inc
sub
call
fist
gs
jp
xchg
xchg
xchg
push
sub
jbe
adc
fistp
dec
out
int3
cmp
cmp
mov
xor
add
xchg
pushf
dec
add
jb
sbb
push
mov
push
pop
pop
pop
and
inc
ret
mov
stos
mov
popf
std
mov
jbe
aad
jmp
push
or
mov
push
push
mov
enter
fistp
xlat
psadbw
mov
dec
inc
jecxz
int
xchg
mov
cwde
not
fadd
cdq
out
adc
jne
dec
add
jo
test
fs
mov
pop
addr16
pop
jbe
cmp
leave
inc
adc
das
cmp
inc
(bad)
jnp
xchg
push
scas
sbb
int
sub
inc
inc
(bad)
out
out
stc
xor
movs
adc
ficomp
pop
test
jo
je
push
dec
dec
shl
sub
nop
call
rcl
sbb
cmp
ins
inc
mov
sub
jmp
mov
test
dec
fst
xor
retf
xor
or
dec
jmp
or
(bad)
rcr
sub
shr
repz
outs
mov
outs
(bad)
xor
mov
and
cdq
lahf
adc
xor
dec
sbb
pop
and
test
jo
jle
ins
or
imul
cmp
out
stc
pop
add
and
add
shl
mov
int
loopne
mov
cmp
pushf
mov
jnp
xchg
mov
addr16
out
push
mov
popa
inc
sbb
xor
repz
inc
and
pandn
repnz
push
sbb
push
fnstcw
mov
ret
lods
mov
fdiv
pop
test
fs
iret
mov
sub
inc
(bad)
adc
xchg
sti
cs
and
inc
mov
xchg
dec
pop
sub
or
sbb
ret
call
imul
sbb
dec
retf
jo
cwde
hlt
push
sbb
xchg
dec
div
fstp
pop
enter
xor
movs
dec
daa
aam
les
sbb
rol
daa
and
mov
sbb
out
xor
mov
test
mov
scas
xchg
retf
sub
sbb
es
stc
jno
cmp
ins
(bad)
dec
sbb
out
dec
std
nop
ror
xor
loope
mov
jnp
xor
mov
cwde
pop
aaa
mov
cmp
add
stc
sub
mov
lea
inc
jno
and
mov
int3
sub
cs
add
add
sub
jge
push
fwait
ins
(bad)
or
hlt
ins
inc
and
sbb
dec
mov
fimul
inc
aaa
sahf
cmps
fistp
out
xchg
push
data16
rep
xchg
mov
hlt
(bad)
repnz
push
jp
fwait
shr
out
imul
jecxz
sbb
push
sar
shr
mov
loope
jno
out
sbb
sbb
cmc
cwde
lods
jb
dec
cmp
neg
push
lods
sub
jb
imul
in
fs
stos
inc
xor
adc
not
(bad)
jbe
pop
fwait
mov
cmp
mov
mov
arpl
pop
test
fs
iret
retf
cmp
data16
cmp
xchg
pushf
sbb
mov
ud2
adc
gs
inc
mov
sub
pop
loop
sub
jl
xor
pop
rcr
fwait
mov
push
jp
mov
repnz
add
push
cld
je
(bad)
push
(bad)
mov
pop
bswap
pop
das
push
(bad)
clc
cmp
loopne
rcl
cmp
into
mov
or
bnd
push
cmc
xchg
adc
daa
mov
rol
pop
sbb
loopne
fld
inc
sbb
sbb
cdq
repz
cdq
iret
cmp
aad
jb
cmp
adc
in
stc
(bad)
lods
push
fcom
sbb
add
cld
cmp
cmps
cli
add
mov
jmp
xor
dec
or
push
stos
dec
ret
pushf
mov
cdq
mov
add
and
dec
xchg
loop
adc
and
ins
imul
in
fisubr
sbb
mov
std
xchg
inc
sub
cmc
push
sbb
dec
push
mov
xor
mov
shl
sbb
sbb
lods
f2xm1
xor
cli
or
and
mov
lods
add
xor
and
pop
sbb
mov
(bad)
outs
sub
outs
add
stos
daa
adc
into
lods
repnz
jmp
jb
dec
(bad)
rep
adc
mov
div
and
xlat
in
aaa
shr
hlt
test
inc
rcl
pop
push
ds
or
push
mov
sbb
(bad)
xchg
mov
add
enter
ds
or
out
jae
pop
mov
aaa
cli
add
fstp
out
jno
jmp
jo
adc
test
aam
ror
mov
mov
add
(bad)
shl
ss
mov
mov
adc
mov
lds
or
ss
inc
adc
(bad)
sbb
out
mov
inc
fcom
test
mov
jle
aas
ja
js
sub
js
sbb
idiv
pop
sbb
(bad)
pushf
mov
and
retf
dec
cs
aam
in
test
or
mov
inc
out
and
aam
inc
or
loop
lods
daa
in
mov
mov
xchg
and
inc
push
push
cld
mov
push
int
jmp
inc
mov
popa
sub
ror
clc
mov
shl
mov
jmp
ins
jle
call
push
sub
mov
stos
jmp
mov
out
xor
stc
pop
or
and
leave
sti
(bad)
cmp
and
(bad)
pushf
push
and
enter
cmps
jne
dec
pop
jp
pop
lahf
cmps
push
cs
ror
mov
dec
cmp
in
bound
(bad)
ins
pop
push
mov
stos
and
sub
scas
sub
inc
mov
mov
scas
pop
repnz
call
into
xchg
aam
cwde
push
lock
adc
push
sahf
jg
movs
mov
cs
xor
pusha
add
jecxz
sbb
add
mov
in
cmp
scas
div
dec
iret
aad
cld
iret
int3
cmp
retf
aam
lock
mov
call
and
xor
adc
jns
add
lock
pop
sbb
pop
mov
pop
push
(bad)
sub
cli
lods
push
mov
mov
bnd
mov
lock
adc
mov
sbb
adc
mov
push
pop
add
add
xchg
push
pop
shr
xchg
nop
sub
scas
pusha
adc
sar
add
push
out
loop
push
dec
leave
pop
push
dec
push
cmp
aas
sahf
mov
nop
fdivr
and
addr16
clc
ds
lea
push
mov
xor
add
sub
or
push
pop
mov
fdivp
mov
les
stc
jmp
enter
pop
mov
int3
or
mov
sub
pop
or
mov
(bad)
addr16
mov
sar
push
lock
xor
loope
addr16
jg
xchg
fldcw
mov
test
out
mov
(bad)
sub
in
push
or
jnp
ss
dec
pop
(bad)
add
jb
xchg
jno
inc
mov
mov
xor
xor
ins
dec
or
sbb
fwait
shr
mov
mov
cmp
mov
push
aas
iret
(bad)
(bad)
fsubr
push
ins
pusha
dec
mov
jmp
jo
or
lods
xchg
mov
jmp
push
mov
fdiv
sub
mov
jb
pop
adc
outs
add
cld
dec
mov
mov
lods
xchg
out
cmp
jge
and
fdivrp
jmp
mov
cmc
push
inc
cmp
xchg
and
dec
sub
cmp
pop
mov
ret
push
sub
pop
inc
and
cld
mov
retf
in
push
sbb
in
mov
out
movs
push
xchg
cld
and
jp
movs
fidivr
sbb
pop
ret
(bad)
sbb
add
rol
pop
(bad)
(bad)
sar
gs
clc
or
lds
in
inc
cmp
add
mov
dec
lock
sub
shl
nop
and
test
jbe
jo
fmul
inc
jns
jno
mov
cmp
bound
pop
lea
sar
xchg
mov
sub
cwde
loope
pop
mov
lds
push
jge
push
fisttp
pop
jmp
fucomp
mov
mov
mov
cwde
ins
out
jle
cmp
fdivr
add
(bad)
sbb
add
mov
and
test
cdq
xchg
push
adc
cmp
mov
bnd
das
cmp
adc
imul
sub
pushf
pop
xchg
mov
sbb
jmp
pop
dec
enter
push
mov
pop
into
xchg
test
js
mov
popf
rcl
mov
leave
inc
pop
lods
add
mov
les
jecxz
neg
sub
xor
mov
(bad)
ja
aam
aas
clc
mov
inc
xchg
mov
cli
or
ficom
ins
jbe
or
scas
xor
add
dec
sbb
lahf
jnp
aad
or
js
mov
and
mov
popa
inc
sbb
sub
xor
mov
fwait
in
or
data16
mov
shr
retf
das
rcr
(bad)
shl
push
mov
mov
call
lahf
mov
fidivr
jmp
mov
clc
cli
or
push
sbb
jmp
sub
sub
adc
pop
dec
pop
pop
es
sahf
std
xchg
jp
(bad)
mov
dec
neg
cmp
mov
rcr
lods
xor
outs
sbb
mov
and
and
cmp
xor
sbb
sbb
mov
push
rol
cwde
jecxz
mov
add
test
xchg
popa
add
jl
repnz
xchg
xor
or
popa
add
inc
cmp
inc
les
(bad)
(bad)
jbe
jb
in
cmp
add
cli
add
jb
mov
sub
pop
ds
fsub
lods
inc
jno
mov
out
mov
push
and
aaa
stos
cmp
out
xor
xor
inc
xor
fldcw
(bad)
mov
cmp
test
into
and
call
test
popf
mov
retf
push
add
cli
pop
les
sub
add
cwde
mov
mov
cmp
pop
cdq
test
mov
cmps
ds
jl
sbb
ins
(bad)
jmp
scas
test
mov
adc
leave
fwait
mov
loopne
sub
xor
outs
sub
pop
jge
sbb
inc
aam
pop
popf
movs
fwait
push
jns
and
imul
mov
mov
out
cmc
push
cmp
inc
jns
pop
inc
push
and
and
les
pop
jns
add
add
retf
retf
push
dec
push
ins
mov
out
mov
push
rcr
jbe
bound
hlt
pop
into
fld
cdq
jae
push
(bad)
hlt
shl
or
(bad)
mov
icebp
sar
aam
fldenv
jno
add
lods
mov
xchg
iret
ret
sub
push
cld
pop
js
aad
cmp
mov
into
std
and
sub
push
xor
jnp
movs
test
mov
ss
lods
fld
icebp
loope
in
gs
jmp
sub
movs
dec
retf
mov
pop
jne
and
inc
shl
rol
xchg
pusha
jecxz
fidiv
fisub
xchg
cmc
sbb
mov
nop
stos
add
sbb
stos
imul
imul
(bad)
cli
pop
mov
in
pop
dec
or
xchg
and
pusha
daa
std
or
jle
and
adc
dec
imul
fs
jle
jb
sub
lods
push
fisttp
ret
mov
int
adc
sahf
ins
lods
hlt
dec
sbb
fadd
sub
or
popf
xor
stc
(bad)
push
mov
arpl
ds
mov
icebp
mov
xchg
push
sbb
mov
dec
mov
dec
in
dec
in
sti
rol
sub
jbe
fcom
dec
lods
cmp
cwde
dec
das
imul
mov
dec
pop
dec
(bad)
lahf
cmp
cld
sbb
push
push
push
aad
test
repnz
out
add
fsub
dec
pop
stos
xchg
pop
mov
and
xchg
retf
xchg
shl
leave
sub
mov
adc
pop
test
mov
call
cmp
in
popa
ins
inc
dec
rcr
dec
xchg
movs
test
inc
pusha
clc
jmp
dec
test
fcom
mov
mov
(bad)
jmp
xchg
not
adc
fcom
out
sbb
inc
gs
fstp
popa
cmp
jns
leave
sub
enter
addr16
xchg
sbb
push
sub
jp
and
fnstcw
popf
cwde
xor
pop
mov
pop
iret
in
pushf
mov
(bad)
and
es
lahf
mov
jno
test
push
jge
cli
sbb
add
or
add
int
xchg
or
push
sbb
lock
jp
cmp
jmp
mov
ins
stos
sti
jns
sub
test
pop
(bad)
in
cmp
sub
rcl
pop
pop
or
(bad)
sbb
test
popf
push
rcl
(bad)
jg
cmp
jl
outs
push
fucomip
pop
and
hlt
xor
icebp
sbb
aas
mov
ficom
jns
mov
addr16
fcmovb
xor
outs
push
dec
jbe
lods
push
mov
jg
(bad)
xor
jmp
cmp
dec
test
sub
leave
sahf
or
arpl
sub
stc
inc
(bad)
sbb
adc
cld
fs
mov
dec
sar
fwait
inc
dec
push
jnp
pop
(bad)
loopne
jb
scas
retf
loope
sar
call
pop
inc
pop
inc
mov
loopne
and
fcmovb
xor
push
xchg
push
and
or
xchg
push
push
ss
fs
push
jmp
dec
in
div
popf
mul
lahf
addr16
test
mov
mov
pop
and
mov
ins
ret
imul
stos
cmp
int3
mov
mov
jg
cmp
(bad)
pop
adc
movs
dec
int
jb
jbe
adc
mov
aaa
cld
not
cmp
mov
into
cdq
arpl
bound
ins
push
cmp
push
cmp
adc
repz
jecxz
imul
repz
out
dec
and
mov
popw
and
test
loope
cld
aaa
xor
inc
mov
mov
(bad)
outs
pop
xor
retf
pusha
push
mov
repnz
pop
je
or
pusha
iret
push
popf
lea
pop
lods
and
add
xchg
lods
repnz
add
fidiv
xchg
push
inc
and
pop
or
es
cmp
pushf
test
dec
fisttp
push
inc
xor
fldlg2
sar
(bad)
mov
fdiv
test
push
jnp
add
lods
mov
clc
aaa
fsubp
repz
and
dec
or
dec
sbb
mov
dec
sar
adc
mov
mov
ds
retf
fcomp
lds
cwde
push
dec
cwde
sbb
cmp
xchg
repz
fs
sbb
cmp
call
mov
movs
mov
sbb
out
xor
in
inc
sub
jl
mov
sbb
sahf
loopne
test
repz
fxtract
and
js
xor
pop
inc
xchg
test
pop
je
dec
dec
pop
in
mov
stc
inc
lods
shr
js
jecxz
out
jae
pop
sub
loop
jbe
hlt
dec
int
call
pop
cmp
pop
inc
add
mov
(bad)
jo
dec
lock
jns
cmp
sub
pop
es
popa
add
dec
call
es
mov
ss
jae
jle
rcr
data16
xor
and
mov
push
inc
retf
ret
add
xor
test
push
(bad)
loope
or
mov
xchg
cli
js
out
jbe
jns
ds
and
pop
xchg
sbb
cmps
sbb
repnz
scas
test
fdiv
jno
icebp
xchg
jmp
scas
rol
std
inc
shl
sti
fcomp
inc
xor
hlt
xchg
leave
pop
pop
jmp
shl
add
dec
mov
mov
push
inc
pop
pop
lds
pop
inc
mov
adc
cmc
fs
xchg
pushf
sub
jp
push
lods
aad
or
cmp
outs
lods
neg
xchg
pop
rcr
fwait
scas
icebp
fisttp
inc
pushf
ins
jl
pop
std
cmps
hlt
xchg
ret
xchg
xchg
cmps
cmps
jnp
sar
sbb
xlat
mov
inc
mov
sub
xchg
(bad)
sub
push
jbe
in
jns
bound
sub
sbb
in
ret
mov
hlt
pop
inc
cwde
sbb
daa
xor
inc
xchg
push
pushf
loope
sti
mov
mov
or
mov
push
add
imul
cs
jp
add
lock
mov
sub
es
dec
scas
and
popf
in
iret
sbb
call
aad
add
cdq
dec
cmp
outs
push
sti
adc
cs
mov
or
mov
pop
dec
jb
hlt
ins
pop
mov
retf
(bad)
jmp
xchg
sub
mov
adc
cli
push
mov
or
inc
xor
push
std
sub
push
inc
rol
cdq
xor
mov
dec
fucomip
ins
ins
xor
icebp
fld
jecxz
mov
jae
aaa
jbe
push
leave
pop
imul
in
jecxz
mov
int3
add
jmp
into
xchg
retf
pusha
xchg
add
in
mov
in
mov
push
push
ror
xchg
lea
push
popf
cmps
dec
lods
add
js
mov
sahf
mov
repnz
push
mov
mov
repnz
aas
sub
inc
cdq
fs
bound
cmc
push
jmp
and
jns
nop
mov
xchg
scas
jae
arpl
fsubr
push
xor
fsub
lock
or
cmp
xor
xchg
sar
and
dec
cld
or
dec
in
into
lock
or
popf
push
and
(bad)
leave
rcl
mov
enter
in
sbb
xor
cmps
out
inc
jp
xchg
out
into
loope
(bad)
mov
bound
push
popa
mov
mov
dec
sbb
push
test
or
adc
outs
int3
pop
mov
mov
clts
mov
repnz
bound
stc
sbb
cmps
sbb
xchg
jp
imul
add
movs
sub
fild
lods
add
xor
jno
adc
sub
mov
mov
jmp
mov
sar
aam
mov
fidiv
adc
mov
ror
std
popa
add
out
push
jle
retf
or
mov
xchg
scas
add
and
aaa
jmp
add
push
or
pop
dec
fcom
mov
mov
loopne
mov
or
xchg
add
xchg
xchg
cmp
lods
mov
xor
jns
lds
mov
mov
(bad)
cmps
xchg
mov
mov
xchg
cli
xor
jo
mov
div
ror
sbb
ds
mov
outs
sbb
inc
or
lds
sub
movs
jl
pop
aad
jmp
lods
enter
(bad)
int
add
loope
cmp
bound
push
stc
std
mov
pop
or
ffree
mov
sub
loop
xor
shl
mov
dec
je
or
mov
push
mov
aaa
loopne
ins
push
jg
aad
mov
xchg
cwde
adc
scas
cmp
enter
cmp
cmp
push
mov
jmp
mov
retf
jmp
cdq
inc
mov
mov
mov
xor
mov
xchg
pop
jp
push
je
out
jmp
cmp
and
out
sbb
push
mov
xchg
adc
inc
fist
inc
inc
stos
aas
lds
das
and
sub
add
xor
je
ins
popf
stc
mov
mov
div
lds
mov
mov
ss
push
scas
ins
pop
(bad)
mov
daa
out
mov
pushf
inc
aad
mov
cmc
test
pop
in
xor
adc
adc
fdivr
jmp
push
pop
inc
lods
retf
jp
sbb
dec
outs
jg
fs
mov
popa
(bad)
sahf
aad
mov
push
xchg
pop
inc
push
jmp
xlat
sar
ins
mov
dec
lods
retf
scas
ret
ret
pop
pop
shl
mov
stos
shl
fwait
pushf
pop
mov
int3
rcl
and
pop
outs
mov
lock
call
lea
adc
push
mov
pushf
sub
cmp
pop
pop
ret
sub
(bad)
pushf
rol
add
xor
pop
add
mov
(bad)
shr
adc
aam
ins
imul
(bad)
push
in
add
adc
and
shl
xor
sbb
adc
jl
or
leave
adc
ficom
imul
pop
int
popf
push
or
jnp
sbb
call
mov
mov
arpl
pop
xor
icebp
mov
mov
jge
xchg
pop
xchg
mov
push
addr16
xchg
lea
xchg
fcomp
fst
imul
repnz
xlat
dec
scas
jne
dec
dec
add
(bad)
xchg
sti
and
fidiv
dec
iret
inc
scas
(bad)
ds
pop
imul
cdq
cmc
sti
xor
mov
lds
arpl
inc
movs
loop
cli
adc
dec
lods
retf
adc
xchg
nop
std
mov
outs
mov
stos
xor
out
mov
dec
out
(bad)
pop
jmp
xchg
(bad)
bound
or
jp
jae
push
stos
aaa
adc
pop
loope
jmp
fimul
dec
or
mov
cmp
add
lds
mov
std
xchg
inc
push
mov
(bad)
retf
dec
out
jb
cld
dec
scas
add
inc
sbb
(bad)
xor
hlt
push
test
mov
es
iret
jg
jno
xchg
fiadd
xchg
clc
imul
addr16
aam
out
hlt
xchg
push
inc
rol
movs
les
lods
pop
(bad)
jno
push
jge
ds
je
lock
xchg
pushf
cs
test
push
inc
retf
dec
xchg
mov
outs
rcr
xchg
into
or
inc
(bad)
jmp
or
and
aaa
xchg
data16
dec
ret
xor
cmp
dec
sbb
dec
inc
push
dec
cmp
mov
popf
jne
add
xchg
test
cmp
call
fadd
jae
cmp
call
mov
mov
mov
push
ret
mov
inc
pop
xchg
cmp
mov
xchg
cli
pop
push
loopne
icebp
movaps
adc
jbe
(bad)
jecxz
arpl
jb
xchg
(bad)
retf
xchg
lea
sub
imul
fisub
or
mov
popa
pop
cmp
xchg
(bad)
addr16
sub
ret
out
push
out
pop
xchg
mov
shl
add
ret
fst
repz
imul
test
mov
pop
or
ficom
pop
(bad)
mov
mov
inc
js
faddp
bound
ror
dec
test
cmps
sub
mov
mov
in
xchg
das
int3
arpl
push
lea
or
sub
ficomp
jns
mov
call
adc
pop
mov
dec
xchg
int
shr
and
cmps
mov
push
out
cli
and
inc
push
sub
pop
push
xchg
out
xlat
sbb
xor
(bad)
sbb
pop
pop
inc
xchg
imul
not
repz
outs
in
adc
jmp
inc
das
call
sar
mov
out
mov
jb
or
jb
fidivr
xchg
jb
inc
mov
jne
aam
scas
xchg
inc
stos
push
xchg
retf
mov
(bad)
push
inc
icebp
fwait
push
xchg
pop
mov
iret
in
dec
mov
retf
mov
jge
les
arpl
loope
dec
push
jns
lds
jp
outs
stos
into
lfs
and
loop
mov
or
stc
adc
dec
xor
int
ficomp
in
and
jb
shl
repz
jns
ror
out
inc
(bad)
rcl
out
popa
jmp
mov
sbb
push
cwde
cmps
fwait
pop
ss
xlat
in
xchg
sar
and
stos
mov
inc
(bad)
ins
leave
mov
add
enter
cmp
and
push
aad
outs
fst
jno
(bad)
in
int3
push
mov
sub
aas
cmp
xor
cld
aad
inc
inc
push
enter
mov
rcl
sahf
mov
mov
call
cdq
lea
jmp
dec
pop
sbb
pusha
push
test
(bad)
sbb
cmp
inc
cmp
ins
pop
add
inc
ds
cwde
rol
jno
cs
ins
iret
dec
(bad)
and
fistp
lods
xchg
sbb
fcmove
loope
ja
ss
push
cvtdq2ps
push
xchg
add
int
imul
ins
mov
dec
and
jl
(bad)
repz
das
xchg
and
xchg
repnz
out
fimul
repz
dec
loopne
xchg
icebp
mov
pop
leave
mov
inc
xchg
hlt
mov
ficomp
xor
out
loop
push
dec
and
cmp
push
xor
pop
ins
push
fistp
das
repz
mov
scas
mov
aas
pop
test
jae
retf
pop
add
pop
into
fisttp
inc
nop
adc
icebp
push
dec
and
push
out
push
jmp
icebp
push
mov
lea
das
cmp
mov
push
xor
pop
dec
pusha
mov
push
out
call
mov
popa
into
popf
loop
mov
adc
pop
es
mov
aam
dec
xor
test
gs
pop
inc
jae
daa
jmp
cmp
movhps
or
jmp
xchg
push
xor
dec
jl
out
stc
inc
adc
push
cmp
xchg
pop
out
in
outs
cld
jl
imul
les
ins
or
aad
loopne
in
mov
cmp
sub
test
jecxz
test
cmp
rcl
rol
test
sbb
shr
jb
mov
sbb
cmp
sub
popf
(bad)
shl
lock
cmp
dec
jne
clc
adc
mov
test
mov
push
es
popa
mov
paddusw
mov
lds
addr16
mov
call
stos
clc
xor
pop
not
xchg
icebp
inc
mov
scas
mov
cli
je
push
mov
jg
inc
fisub
xchg
or
xchg
mov
mov
and
add
in
add
xchg
in
fadd
sbb
in
cmc
aaa
mov
movs
sti
imul
or
push
inc
aad
rcr
push
cs
mov
sbb
outs
mov
cmc
out
je
stos
inc
into
jb
daa
push
adc
jge
inc
inc
adc
lds
or
push
push
ds
cmp
pop
icebp
mov
push
int3
jno
rol
mov
fmul
and
xor
push
popf
call
mov
shl
(bad)
mov
mov
cmp
push
sub
dec
fscale
loope
test
or
inc
push
sub
adc
repnz
ds
(bad)
cld
fstp
dec
push
sub
jp
dec
aaa
popa
cmps
rcr
push
mov
int3
dec
std
aaa
lods
retf
pop
xor
outs
mov
jmp
out
add
xor
retf
mov
dec
into
je
adc
scas
ror
jnp
cmps
imul
movs
retf
mov
add
int3
mov
std
enter
push
xchg
pop
outs
aam
fidivr
push
jg
shr
not
mov
mov
cmps
ss
dec
xchg
inc
clc
inc
inc
mov
fs
stos
push
pop
pop
mov
mov
pop
inc
hlt
sub
shl
imul
loopne
add
aam
push
cmp
push
fabs
push
dec
jno
lahf
fld
jnp
xchg
inc
not
nop
mov
push
xlat
dec
add
mov
mov
xchg
fwait
cmps
mov
aam
lods
sti
jp
or
inc
popf
push
mov
dec
mov
retf
lods
add
sbb
retf
xor
retf
aad
movs
mov
mov
lds
lock
mov
mov
loopne
ss
inc
addr16
outs
inc
fcom
mov
imul
push
jae
(bad)
out
test
jb
dec
int
add
pop
mov
sbb
std
push
retw
(bad)
inc
call
dec
(bad)
ficom
mul
fild
adc
retf
sbb
inc
stc
jo
test
nop
jmp
neg
push
je
mov
lock
sbb
jl
jl
div
xchg
push
adc
sbb
test
mov
sub
retf
sub
inc
xchg
mov
sbb
shl
shl
out
sbb
aam
stos
sub
xchg
es
xchg
add
jmp
jl
fcomip
hlt
popa
mov
aaa
aaa
xor
pop
mov
pusha
or
pop
ret
push
loopne
nop
inc
sar
sbb
pop
lea
and
and
bound
cmp
adc
call
push
cwde
iret
mov
loopne
push
fstp
fs
int
fldcw
push
and
fs
cmp
and
and
es
inc
imul
mov
inc
inc
and
or
not
xchg
aad
aad
cld
inc
out
dec
fsub
sbb
movups
loope
cmp
scas
cmp
test
ret
xchg
push
cmc
int
cmps
xor
ret
push
test
daa
fsub
fcom
nop
pop
sbb
inc
repz
arpl
(bad)
in
pop
sub
sub
jp
xchg
cmp
dec
cmp
mov
xchg
fsubr
mov
clc
fild
scas
mov
test
mov
cmp
arpl
mov
outs
adc
or
fild
inc
mov
les
xor
mov
cmp
mov
xor
aaa
sbb
push
adc
icebp
mov
mov
dec
cwde
das
repnz
cmp
inc
or
push
outs
cmps
mov
lods
rcl
jle
aam
outs
or
mov
hlt
pop
and
mov
data16
mov
jmp
add
cdq
aas
aas
mov
ins
lods
rol
add
add
stos
les
in
retf
ja
rol
js
xchg
lods
xlat
xchg
mov
push
dec
mov
rol
cwde
sbb
and
dec
movs
ret
adc
dec
mov
add
jnp
leave
adc
lods
xlat
xor
sub
test
es
ret
ret
add
ret
pop
mov
add
sahf
inc
inc
cmp
sbb
cdq
pop
pop
(bad)
inc
add
inc
push
es
cmp
cmps
mov
(bad)
lds
leave
aad
fdiv
cmps
mov
outs
ret
cld
(bad)
sbb
push
stc
dec
xchg
not
push
aad
mov
jno
fistp
ss
bound
push
jbe
ret
mov
loope
sub
and
(bad)
jg
sbb
pop
sbb
loope
or
cli
xchg
add
les
ja
(bad)
cmp
out
xlat
push
pop
mov
jmp
stc
push
pop
cmp
mov
sub
leave
(bad)
or
ficomp
xchg
mov
pop
movs
or
sub
pop
cmp
mov
and
sub
call
fmul
push
es
cmc
mov
test
add
sub
dec
fst
loope
cmp
adc
lea
push
mov
fsubr
and
or
push
mov
mov
icebp
push
jno
dec
in
mov
cmp
into
js
xor
push
cdq
sbb
retf
add
xlat
sbb
popf
xor
sub
push
and
cmc
fistp
xor
mov
push
adc
ins
fmul
cdq
fidivr
mov
and
bound
jp
mov
xor
mov
push
sub
adc
ds
outs
jmp
mov
lds
ret
mov
lahf
and
sub
in
shl
jl
ins
scas
popf
div
adc
outs
lahf
rol
(bad)
add
out
lahf
cli
jae
push
adc
mov
push
add
out
inc
in
iret
lds
sbb
push
jle
aad
test
pop
xor
add
div
cmps
mov
jne
mov
pop
(bad)
int
daa
fs
int
xchg
aaa
mov
inc
jne
mov
das
ds
in
je
xor
mov
and
dec
inc
mov
add
jns
sbb
pop
dec
adc
popf
cmp
mov
mov
mov
mov
shl
dec
cmps
add
mov
gs
data16
(bad)
xor
movs
pop
(bad)
aad
fcomp
mov
icebp
adc
ror
and
fnsave
out
xlat
push
les
add
jp
sbb
std
adc
mov
fnstsw
cmp
fwait
aaa
pop
shl
aad
xchg
call
mov
jne
daa
xchg
or
mov
setl
push
fs
mov
mov
push
cwde
push
inc
iret
pop
pop
popa
pop
rcr
addr16
jno
add
xchg
loop
mov
imul
adc
mov
cmp
(bad)
xchg
and
fsubr
(bad)
lods
test
addr16
pop
shl
mov
(bad)
mov
mov
ss
cli
aaa
sub
es
js
sbb
shl
pop
cmp
(bad)
std
ins
stos
xchg
pop
mov
xchg
or
or
fstp
fwait
sbb
dec
fisttp
inc
add
pushf
bound
data16
leave
and
bound
fcompp
pusha
mov
push
idiv
adc
fld
mov
mov
cmp
or
(bad)
mov
xchg
xchg
imul
cmp
inc
popf
cmp
mov
movs
loope
stos
test
or
aaa
inc
sti
dec
cmp
adc
dec
mov
loop
xlat
sbb
cdq
or
pop
iret
pop
inc
retf
fs
push
cld
fcom
or
int
cli
mov
(bad)
ret
xor
xchg
push
sbb
dec
pop
ins
call
xor
(bad)
push
add
mov
jne
mov
xchg
sbb
imul
test
cmc
sub
test
jne
jle
cli
nop
mov
cmps
push
inc
into
stos
push
loope
cmp
pop
inc
sbb
xor
(bad)
ffreep
stos
adc
sbb
nop
sub
xor
inc
es
in
imul
or
cmps
pop
mov
loope
ror
xor
pushf
add
mov
iret
xchg
pop
popa
daa
sbb
xchg
shr
aam
xor
shl
stc
inc
cmp
inc
or
mov
dec
mov
sbb
(bad)
push
scas
das
sub
add
lods
rcr
jge
lea
mov
inc
pop
mov
jmp
ss
sub
adc
repz
ins
xor
push
mov
inc
xchg
sub
stc
mov
pop
inc
sub
xchg
or
push
or
push
fistp
rcl
add
out
xchg
xchg
mov
sub
cmp
xchg
in
sbb
inc
mov
xchg
lahf
fimul
pop
retf
(bad)
adc
movs
pop
jge
sar
ja
bound
(bad)
adc
jle
jp
sahf
fidiv
stos
jg
test
sbb
loope
mov
movs
and
mov
xchg
out
jnp
adc
xchg
ja
sbb
cwde
lods
xchg
out
fbstp
cmp
xor
sub
push
pop
gs
mov
test
inc
sub
add
test
xor
sub
push
arpl
stc
fbstp
and
repz
add
outs
nop
lods
test
inc
pushf
sub
not
mov
cmp
outs
fild
sbb
mov
mov
sahf
icebp
dec
jmp
mov
mov
xchg
or
cdq
ins
lea
jno
test
scas
sbb
push
sub
mov
mov
and
les
xor
fwait
jecxz
mov
dec
xchg
daa
ss
dec
gs
sub
sub
outs
(bad)
call
sub
xchg
retf
test
sub
and
pop
loopne
jno
out
lea
aas
inc
cld
push
call
in
push
pop
fs
push
jp
xchg
call
retf
push
cmp
cmp
xchg
pop
xchg
iret
ins
test
dec
mov
clc
cmp
push
call
(bad)
and
push
cmp
cmp
lods
or
inc
loopne
ins
adc
cmp
fidivr
dec
lea
pop
sbb
pusha
mov
lods
inc
mov
mov
hlt
rol
lahf
add
push
neg
mov
fcom
in
clc
pushf
sbb
fwait
xchg
scas
pop
mov
push
xor
daa
dec
mov
and
pop
jp
fwait
pop
aaa
mov
outs
mov
cwde
and
test
or
ss
push
adc
inc
mov
iret
enter
test
sbb
sar
sbb
mov
xchg
stc
mov
xchg
jl
stos
xchg
xchg
call
lock
inc
popa
ror
inc
hlt
arpl
stos
cmp
retf
push
dec
mov
add
mov
scas
in
mul
push
xor
dec
adc
adc
push
ret
jno
pop
sub
pop
xor
lods
fistp
test
jge
test
(bad)
inc
shl
add
jp
mov
xor
mov
ins
retf
xor
and
mov
retf
jns
pop
mov
cld
imul
xor
aas
jl
shr
fmulp
pop
arpl
jne
cmp
(bad)
jp
adc
daa
out
hlt
dec
lds
cmc
add
adc
out
add
mov
or
pusha
popf
adc
mov
ret
or
aam
cmps
jo
in
sti
aam
loopne
jl
sub
add
imul
and
push
add
daa
cmp
push
mov
jns
lock
int3
sbb
popf
or
jae
push
lahf
mov
(bad)
xlat
sar
in
(bad)
cli
push
fwait
je
jno
ret
cld
add
mov
test
mov
test
jno
mul
add
xchg
outs
jl
daa
and
or
xchg
repnz
xor
les
add
shl
cmc
sti
fdiv
sub
retf
add
aaa
stos
pop
(bad)
mov
pushf
dec
sub
in
int3
out
sbb
repz
sub
jmp
je
cwde
xor
inc
push
fsub
(bad)
or
test
or
mov
add
pushf
out
xchg
cdq
loopne
cmps
jbe
xor
inc
push
gs
test
mov
jmp
xlat
aam
mov
in
or
cmp
sbb
frstor
jp
iret
mov
and
adc
sbb
imul
fisub
jle
lock
jmp
add
inc
xchg
loopne
push
loope
or
loopne
pop
pop
xlat
dec
hlt
aad
scas
lock
aaa
pop
push
ror
adc
xor
pop
daa
push
xchg
ja
aam
das
pop
sbb
mov
out
push
jmp
in
lods
ja
jae
adc
mov
lods
stos
xor
mul
out
dec
add
or
mov
push
cmp
scas
adc
add
imul
cmp
mov
fsqrt
inc
xchg
sar
loope
leave
xchg
jno
repnz
jne
pop
ret
or
call
sub
pop
dec
pop
sahf
imul
clc
jne
xchg
cmps
push
mov
inc
(bad)
sub
and
or
mov
xchg
ret
pusha
jecxz
test
lods
sub
cmp
adc
mov
jne
dec
mov
repnz
mov
aad
int3
fidiv
cmc
adc
sub
sub
inc
loopne
out
add
ror
mov
mov
jne
jge
stc
cwde
and
xchg
or
or
dec
push
out
add
repz
rol
mov
pop
into
mov
add
push
adc
loopne
(bad)
xchg
cmc
sahf
mov
push
enter
rcr
test
fs
jmp
add
or
icebp
pop
or
mov
dec
jmp
lock
ss
or
pop
clc
les
fstp
inc
mov
cli
xchg
call
xchg
xchg
fbld
idiv
imul
inc
loopne
dec
mov
ins
in
fprem
vpsrlq
mov
stos
and
test
pop
(bad)
mov
push
add
xchg
adc
jb
clc
fs
xor
cmp
inc
push
stos
cli
stos
jl
push
(bad)
and
adc
mov
lods
aas
shl
je
dec
or
test
xor
(bad)
and
xchg
or
push
cmp
jmp
into
mov
pop
jge
les
mov
xor
inc
and
popf
test
ins
pop
cmps
stos
pop
sahf
or
aaa
and
cmp
adc
xchg
mov
int3
xor
jmp
add
(bad)
cmc
adc
dec
add
adc
cmps
(bad)
mov
sub
cld
mov
jae
pop
pop
pushf
inc
and
xchg
scas
gs
xchg
aaa
adc
mov
push
test
sbb
cmc
aas
rol
icebp
cmc
add
sbb
rol
fldcw
push
sub
sbb
mov
fnstcw
push
xor
aam
xchg
hlt
mov
xchg
mov
sar
adc
and
(bad)
neg
pushf
jmp
adc
ss
push
mov
and
out
mov
movups
xor
xchg
pop
int
pop
cld
mov
shl
cdq
xlat
rcl
push
add
inc
and
cmps
pop
push
push
inc
or
clc
je
inc
in
int3
adc
clc
popa
or
stc
sti
not
mov
xchg
(bad)
cmp
cmps
bndstx
(bad)
xchg
sbb
repz
daa
mov
ret
cli
arpl
mov
test
cmc
imul
movs
pop
ror
mov
xchg
xacquire
xlat
xor
lods
sbb
and
shr
scas
xchg
mov
push
mov
xchg
movs
mov
mov
pusha
imul
repnz
cmps
dec
push
mov
cdq
mov
ins
mov
popa
icebp
scas
int
mov
jmp
outs
adc
ret
pop
add
add
test
mov
push
jne
sti
push
imul
fadd
add
nop
add
aaa
sar
xor
sub
rcl
sub
pop
sar
(bad)
sar
pushf
mov
xor
dec
dec
xor
inc
cmp
xchg
rcl
jp
jmp
inc
loop
and
dec
push
cmp
hlt
push
daa
xchg
repnz
and
pop
pop
imul
or
or
push
add
cmp
mov
retf
stos
dec
push
dec
push
in
ret
std
into
xor
jge
mov
jnp
out
adc
daa
pop
cmp
popa
cwde
xchg
pop
and
cli
(bad)
std
sub
add
xor
add
or
cli
cmps
in
imul
dec
cmp
cmp
pop
and
outs
or
jb
dec
ds
cs
fdivr
xor
push
(bad)
test
rcl
fist
mov
and
xor
cmp
dec
and
add
pop
inc
mov
int
inc
xor
(bad)
repz
xchg
push
inc
dec
xchg
cmps
scas
and
mov
adc
fidiv
fisub
call
mov
sbb
jne
sbb
cld
clc
sub
mov
cs
push
or
inc
divps
xchg
mov
dec
cld
jp
and
in
aam
mov
lahf
scas
cmp
push
cmps
mov
sbb
dec
fstp
or
dec
shl
lods
pop
mov
jns
xlat
cmp
pop
dec
call
adc
mov
(bad)
loope
pusha
mov
mov
nop
loopne
mov
in
push
fisub
inc
rol
sub
imul
fstp
aas
push
ret
add
mov
das
push
jb
jbe
and
xor
pop
popf
sub
lods
sbb
out
mov
jo
(bad)
cld
pop
push
je
stc
data16
cwde
jge
xor
cdq
stos
xor
jge
sbb
push
or
(bad)
and
test
hlt
push
nop
adc
xchg
pop
fidiv
sub
pop
sbb
repz
cld
retf
lods
shr
sbb
ret
mov
pop
adc
pop
aam
iret
inc
inc
rcr
test
popf
fcom
mov
jp
jp
popf
(bad)
jns
test
push
(bad)
mov
cdq
in
jbe
fwait
mov
dec
mov
dec
leave
dec
lods
pop
dec
out
aad
dec
jge
cmp
mov
iret
ja
cmc
adc
and
jl
jb
or
xchg
sbb
lods
out
sahf
iret
or
jmp
and
lahf
inc
mov
imul
lods
adc
retf
mov
adc
sub
stc
cmps
cmc
cmp
xor
(bad)
pop
xchg
sahf
mov
je
push
sahf
nop
sub
fwait
adc
in
xchg
aam
xchg
dec
push
pop
cmp
adc
aad
cmps
aas
inc
pop
rcpps
xor
stos
out
and
adc
repz
jne
inc
bound
add
stc
iret
test
push
rcl
pop
dec
sbb
data16
hlt
dec
pusha
frstor
push
(bad)
call
scas
sahf
push
and
cmc
mov
push
mov
pop
mov
xor
fwait
imul
ss
and
iret
out
lock
xchg
inc
call
or
(bad)
dec
(bad)
cmp
cli
mov
mov
and
outs
push
add
inc
pushf
sub
fist
rol
sbb
sti
in
les
aaa
retf
pop
test
dec
outs
(bad)
jae
cdq
mov
and
sub
fst
mov
scas
inc
xchg
loope
push
iret
push
int3
(bad)
imul
jg
xor
jnp
nop
pusha
ret
mov
cwde
jmp
retf
xchg
jge
(bad)
sub
jle
adc
fimul
xor
or
adc
test
sbb
mov
lods
mov
stos
out
stos
(bad)
movs
arpl
sbb
cmps
cmps
add
xchg
xor
mov
je
cli
cmc
(bad)
sbb
push
fsub
loop
fdivr
and
les
popa
shr
dec
dec
fidiv
scas
aas
ins
int
scas
leave
xor
aam
int
push
imul
dec
cmp
pushf
sbb
and
dec
ds
pop
test
(bad)
adc
jo
adc
push
into
ret
adc
pop
leave
pop
and
outs
push
push
out
xor
jl
cmp
jp
out
push
dec
mov
mov
push
mov
retf
ja
in
jno
cdq
sbb
shr
idiv
dec
stos
inc
mov
ins
mov
test
addr16
fimul
cmp
sub
daa
or
sub
jle
cs
mov
test
dec
daa
jae
hlt
sbb
add
leave
adc
add
dec
rcl
or
add
push
add
call
fadd
and
sar
sub
push
mov
xor
cmp
sbb
fisub
idiv
outs
adc
sub
mov
or
jmp
repnz
fwait
gs
sub
mov
dec
add
inc
loopne
xchg
mov
adc
ficom
adc
lods
int
sbb
iret
push
mov
rcr
ror
fsub
xor
imul
sbb
cwde
pop
xor
push
jbe
daa
js
cmp
cmps
mov
popf
out
and
pop
push
mov
ret
ficom
inc
and
mov
xor
hlt
dec
movs
sahf
jb
xchg
hlt
pop
push
push
push
cmp
in
mov
sub
sub
sub
mov
or
xchg
mov
xchg
pop
push
push
mov
cmp
cmp
or
lea
push
cmp
inc
dec
jl
movs
push
ror
and
mov
jo
int
xchg
lods
in
jnp
dec
arpl
outs
mov
(bad)
jnp
mov
into
xchg
std
shr
aam
adc
or
cmp
stc
mov
(bad)
fdiv
test
mov
mov
xor
stos
les
in
call
pop
inc
aam
jb
in
mov
add
in
add
stos
xor
aad
mov
dec
cdq
sub
or
push
mov
(bad)
loop
dec
les
push
inc
ss
and
fnstenv
ins
cmp
data16
out
xlat
fs
imul
sar
mov
dec
jmp
shl
(bad)
hlt
adc
aas
sbb
sub
data16
jg
hlt
retf
repz
push
gs
or
cli
cmps
mov
sub
push
sbb
nop
dec
inc
add
in
mov
fs
push
retf
int
outs
outs
lock
or
test
lods
jns
mov
inc
addr16
in
jns
mov
sbb
outs
test
fs
push
cmp
lods
call
xchg
dec
xchg
cwde
sub
stos
icebp
jb
sbb
call
dec
xor
(bad)
hlt
mov
mov
out
sub
mov
add
cmp
xchg
and
cli
jmp
arpl
dec
sub
jo
and
ror
adc
and
add
out
repnz
jne
push
xor
(bad)
push
aas
mov
jae
xor
enter
fst
leave
inc
mov
popa
add
pushf
and
jno
test
or
jbe
mov
sub
xchg
sbb
popa
pop
cmp
dec
outs
sub
xchg
jg
jge
js
jmp
in
xchg
cmp
and
jbe
jb
mov
fmulp
dec
jle
daa
fs
rol
or
add
mov
out
cmp
imul
mov
sbb
leave
mov
dec
pop
leave
test
in
jae
addr16
loope
leave
and
dec
mov
fmul
inc
(bad)
mov
cmps
fld
pushf
jmp
mov
inc
cli
inc
jns
xchg
mov
jle
pop
xchg
out
cmps
inc
cmp
cdq
push
pop
ins
dec
aam
dec
mov
adc
dec
sub
add
cld
mov
(bad)
clc
mov
push
cs
pusha
cs
mov
test
repnz
(bad)
aad
dec
xchg
rcr
out
cmp
rcr
outs
shl
(bad)
call
jmp
arpl
dec
jmp
nop
xchg
arpl
pmuludq
rcl
xor
les
mov
pmuludq
(bad)
mov
stos
test
mov
jns
lds
(bad)
xchg
xor
or
push
jne
xchg
mov
in
ret
sbb
fptan
or
fs
or
xchg
lock
lds
enter
xor
mov
jb
mov
pop
push
imul
pop
stc
ja
mov
inc
retf
and
or
outs
sbb
cmp
xchg
loop
pushf
retf
or
add
repnz
fdivr
(bad)
xchg
xlat
sbb
and
jns
shr
and
cmc
sbb
ja
pop
clc
inc
int3
fstp
pushf
jp
jb
mov
jp
adc
test
ds
mov
fiadd
lock
int3
sbb
and
shl
js
cdq
jp
jp
jmp
dec
and
retf
retf
(bad)
pop
cmps
call
jecxz
add
sub
or
fidivr
push
dec
pop
adc
cli
cmp
leave
push
dec
(bad)
imul
dec
jne
and
adc
(bad)
lods
sub
push
in
fld
inc
ret
sub
jl
jne
jecxz
es
fst
scas
sub
test
stc
push
push
call
xchg
popf
idiv
(bad)
rdpmc
test
xchg
(bad)
stc
sbb
cmp
out
xchg
pop
mov
and
imul
outs
aaa
int
mov
popa
cmp
pop
bound
and
xchg
add
enter
(bad)
repz
xabort
pop
in
fisttp
jns
xor
(bad)
rcr
push
xchg
out
pop
and
push
mov
gs
je
cmp
or
aas
repz
loopne
mov
mov
cmp
mov
add
cld
jb
ret
or
cmc
ret
mov
cmps
dec
lods
out
jg
mov
pop
out
adc
add
and
fsubr
cmp
jge
add
lock
push
push
jge
ins
fs
mov
dec
xchg
(bad)
shl
xchg
push
xchg
js
inc
fild
shl
and
lods
push
mov
scas
les
sar
aad
inc
inc
push
and
sbb
stos
jp
push
fwait
aas
and
push
xor
loop
add
dec
fld
daa
les
xor
push
pop
mov
pop
push
nop
inc
ins
mov
mov
ss
test
jmp
or
adc
outs
in
jge
add
call
and
ret
rol
mov
cmc
add
lods
and
add
sbb
jge
jecxz
test
in
(bad)
leave
lods
je
into
idiv
icebp
les
push
cmps
leave
(bad)
in
imul
jmp
dec
in
hlt
dec
lea
sbb
pop
packsswb
inc
xor
icebp
and
dec
adc
(bad)
mov
mov
mov
mov
mov
test
or
cmp
cmps
frstor
lock
ficomp
ret
fsubr
fadd
(bad)
dec
cmp
out
nop
adc
sbb
sub
mov
ret
xor
add
(bad)
mov
pop
out
cs
std
fistp
in
dec
popa
inc
add
mov
inc
int3
mov
(bad)
test
mov
les
int
pushw
sub
push
add
xor
mov
mov
loopne
call
cmp
cmps
nop
jnp
int3
mov
sbb
stos
ror
cdq
adc
jmp
fs
mov
popa
test
mov
push
and
xlat
movs
movs
sub
jp
fcom
clc
imul
cmp
xor
dec
fistp
js
mov
add
add
cmp
aaa
sub
pop
out
adc
jbe
jbe
inc
popa
fstp
pusha
cmp
out
not
js
sbb
xchg
ins
or
push
cmc
and
jmp
sub
out
rol
add
enter
out
push
(bad)
dec
sbb
ins
aaa
std
je
sbb
cs
ja
jo
into
inc
hlt
pop
xor
scas
test
retf
aas
push
jmp
mov
add
lock
fcomp
xor
push
mov
jmp
ror
jge
xchg
mul
sub
mov
and
(bad)
sub
xor
push
fdivr
dec
fimul
sub
mov
pop
(bad)
rcl
or
aam
loop
inc
pop
scas
mov
mov
jmp
cdq
cmp
mov
mov
movs
test
sbb
test
mov
dec
(bad)
and
in
xchg
jae
jg
sbb
in
pop
stos
or
or
inc
repnz
cmp
not
dec
lea
aam
loop
cmp
out
popa
mov
or
xchg
mov
dec
dec
test
and
(bad)
iret
aaa
in
aaa
mov
popf
jns
or
(bad)
stc
or
sub
ins
mov
mov
adc
mov
popa
or
shl
int3
sbb
aaa
(bad)
dec
xor
sub
mov
jmp
shl
xor
push
mov
cmp
hlt
xor
es
scas
shl
lock
dec
adc
mov
or
cmps
jmp
sub
outs
inc
test
sub
pushf
in
dec
fist
add
cmp
movs
addr16
popf
gs
xchg
ds
adc
inc
je
rcl
cmps
scas
xchg
imul
xchg
ds
add
(bad)
pop
mov
lea
es
(bad)
scas
add
ficom
ret
aas
pop
iret
cs
dec
add
or
adc
ror
bound
call
pusha
mov
xor
xor
and
clc
jae
inc
sbb
push
xchg
xrelease
mov
in
sbb
or
loope
pop
sbb
sbb
jmp
and
int3
or
stc
stos
sub
bnd
dec
jmp
or
cmps
xchg
(bad)
out
mov
(bad)
cmp
dec
fdivp
adc
mov
sti
add
xlat
fadd
sbb
(bad)
cmp
cmp
push
pop
lods
jmp
(bad)
xchg
jmp
in
xor
sub
add
xchg
pop
cmp
fdivr
dec
ret
jo
push
ret
adc
sub
pop
cwde
aad
or
sti
adc
xor
iret
sbb
pop
xor
loop
pop
cmp
jg
jae
aaa
les
es
loope
jae
loope
adc
sbb
call
xchg
enter
mov
loop
add
fstp
mov
xchg
addr16
lods
lea
cwde
in
push
sub
pusha
daa
push
mov
or
mov
(bad)
cmp
daa
inc
mov
adc
mov
adc
and
and
ret
push
mov
icebp
into
and
mov
pop
les
or
pushf
fpatan
leave
sbb
(bad)
pop
push
adc
dec
ss
test
popa
sub
popf
(bad)
aam
outs
cmps
cdq
jbe
push
(bad)
push
mov
lahf
sbb
aaa
inc
mov
scas
popa
mov
lock
jl
mov
stc
icebp
stos
outs
xor
inc
out
sbb
xor
cli
ins
out
jnp
inc
clc
push
and
jae
or
inc
xor
mov
mov
push
sbb
lods
ret
sub
and
push
out
pop
sbb
mov
inc
sub
mov
cmp
scas
inc
stc
test
cli
in
inc
retf
adc
sub
pop
hlt
push
cmp
inc
sbb
xor
std
fbstp
pop
popa
cli
fmul
ss
neg
sbb
mov
gs
pusha
aas
fidiv
das
out
test
fld
iret
mov
inc
inc
retf
jno
jnp
pop
sbb
fnstsw
mov
retf
das
leave
mov
mov
pop
jmp
pop
mov
cmc
popf
cmp
loope
xchg
dec
pop
jg
movs
adc
loop
cli
mov
retf
hlt
inc
cli
scas
call
repz
scas
outs
push
mov
cmp
(bad)
dec
xchg
jg
nop
or
pop
mov
pop
je
pop
mov
pop
jbe
lock
and
scas
pop
and
xchg
xlat
cld
dec
cmp
sub
sub
ja
cmp
aas
into
out
sbb
push
aas
stos
fisttp
and
jle
add
dec
cs
(bad)
icebp
out
loop
sub
outs
arpl
movs
out
mov
add
std
pop
shr
enter
mov
push
xor
pop
rol
and
push
loope
adc
aaa
out
cmp
mov
in
mov
fbstp
mul
jo
mov
and
xchg
lock
push
imul
outs
and
test
ret
cmp
fwait
rcl
sahf
nop
xchg
mov
xor
or
sbb
in
imul
ins
inc
retf
xchg
sbb
rol
loopne
(bad)
sub
jo
add
push
push
add
je
or
xlat
mov
test
mov
cld
or
data16
sbb
fsubp
(bad)
hlt
sbb
and
pop
(bad)
scas
mov
sbb
lods
ror
pop
xchg
pop
xchg
cwde
test
sbb
pop
ins
xchg
nop
mov
retf
shr
mov
rcr
(bad)
xor
div
pushf
dec
push
dec
push
mov
cdq
pusha
cmp
and
in
add
push
cmps
mov
add
in
in
mov
(bad)
mov
jne
mov
jmp
pop
push
repnz
ror
ss
mov
sbb
xor
in
je
mov
fwait
xchg
mov
outs
cmp
jo
test
and
mov
mov
daa
sub
shr
mov
push
or
aam
call
icebp
loopne
out
test
xlat
sbb
aas
dec
cwde
and
mov
fild
(bad)
xchg
pop
add
int
enter
clc
pop
std
and
adc
aaa
std
cmc
clc
arpl
pop
mov
add
jecxz
loope
js
and
xor
push
or
lock
loop
mov
pop
movs
add
mov
push
fwait
xlat
add
cmps
out
mov
popa
aaa
xor
adc
sbb
mov
add
push
pop
pop
shr
jae
sub
cmc
clc
pusha
mov
cwde
sbb
push
inc
aad
mov
mov
dec
mov
loope
pop
pop
jbe
xor
mov
inc
xchg
jo
sub
daa
std
in
ret
leave
push
push
ficomp
psubb
or
mov
add
xchg
ds
fcmovnu
fs
outs
push
clc
xchg
aam
pop
lods
add
cmps
cmp
ror
out
xor
jge
adc
xor
movs
xchg
pop
fs
xor
push
lahf
jge
dec
fmul
ins
clc
pop
sub
test
mov
stc
scas
jbe
repz
push
mov
stc
cld
or
jb
inc
mov
mov
stos
fimul
add
rcr
ins
pop
adc
lods
test
jge
or
je
fst
jnp
sub
(bad)
into
or
jmp
ins
inc
movs
repz
push
adc
mov
add
imul
(bad)
in
mov
mov
mov
or
pop
dec
mov
push
adc
xchg
pop
cdq
xchg
das
fs
adc
mov
mov
sbb
fstp
daa
adc
dec
outs
outs
mov
mov
jne
push
(bad)
aam
xchg
aaa
mul
mov
or
hlt
iret
dec
or
jne
jmp
pop
inc
add
xchg
fld
dec
idiv
xchg
fnclex
outs
scas
fsubr
push
call
inc
cmps
scas
(bad)
push
neg
bswap
sti
or
(bad)
fdiv
dec
and
and
mov
pop
dec
jno
pop
sub
xchg
push
cmp
jae
mov
loop
je
adc
dec
outs
frstorw
lods
push
lea
lods
(bad)
call
ins
sbb
adc
mov
das
and
ja
adc
sub
fxch
xchg
pop
fldcw
inc
push
shl
lea
ins
das
add
(bad)
cld
outs
and
in
cld
push
popa
mov
pushf
sbb
xchg
xchg
pop
inc
lahf
jecxz
imul
pop
(bad)
cmp
retf
es
arpl
repz
mov
inc
inc
inc
add
leave
sub
inc
cdq
inc
pop
add
adc
mov
lea
jno
and
aas
or
mov
fisubr
inc
outs
cmp
clc
sbb
or
call
sub
or
sub
add
sar
xor
shr
add
cmc
ins
mov
pushf
and
sub
scas
cs
and
js
jge
and
mov
jge
imul
push
mov
dec
je
push
rcr
shr
add
nop
aam
xchg
mov
pop
fsub
movs
mov
mov
sub
cmps
jge
jl
and
test
mov
fldcw
sub
xor
mov
aas
sti
cmc
push
push
fwait
lods
hlt
inc
cmps
push
jle
loop
pop
arpl
gs
xlat
xor
test
and
or
cmp
cmps
and
cmp
shl
(bad)
ins
xchg
xchg
cmp
mov
cmc
jns
rol
jns
aaa
mov
sti
mov
aaa
mov
xchg
and
sbb
and
pop
sub
stc
sub
rcr
jl
adc
pop
add
outs
or
movs
adc
sub
rcl
mov
sub
rol
lock
push
push
mov
cdq
cdq
repz
inc
div
jb
stos
sbb
cmp
jecxz
ins
lea
xchg
mov
fnsave
ret
shl
dec
lahf
sub
(bad)
cmp
sbb
inc
add
mov
mov
inc
(bad)
out
jnp
retf
mov
dec
sub
xor
sbb
sub
jmp
cmp
pop
retf
outs
push
or
sar
mov
dec
mov
retf
cli
mov
out
xchg
dec
pusha
mov
push
xchg
push
add
adc
add
test
pop
push
fs
add
imul
inc
mul
ins
in
outs
pop
or
dec
inc
jmp
sbb
mov
adc
nop
repnz
rcl
adc
lods
popa
add
pushf
int3
mov
(bad)
push
icebp
cmps
inc
mov
xchg
jmp
test
fild
shl
dec
dec
xchg
xor
xlat
and
rsqrtps
test
sar
jge
mov
rcl
adc
mov
pop
punpcklwd
mov
and
gs
push
dec
in
fs
movs
out
xor
push
fstp
loope
sub
daa
inc
jbe
lods
push
sti
jb
jl
adc
popf
aaa
aam
gs
gs
ins
jmp
jp
mov
mov
mov
scas
mov
jle
cdq
xchg
lock
test
sub
jo
aaa
or
or
fsubp
fcom
pop
sbb
add
retf
cwde
xchg
cmps
pop
cmps
daa
aam
fdiv
ins
jmp
imul
fcmovnb
test
sub
cmp
dec
lods
lds
int3
mov
les
mov
push
adc
imul
xchg
push
push
jmp
sahf
arpl
shl
add
mov
or
xor
and
aam
rol
repz
ret
push
in
call
cmp
cmc
sub
into
jmp
pusha
cmp
mov
fmul
mov
sub
jne
out
pushf
daa
add
inc
push
push
push
xchg
sub
xor
ins
dec
loop
(bad)
push
in
dec
mov
stc
loope
pop
adc
ret
fmul
xchg
mov
out
and
jne
jg
jge
cmps
lock
and
gs
js
rcl
push
mov
jae
out
push
push
iret
cmp
iret
add
lods
inc
mov
inc
call
rep
push
inc
repz
lahf
push
mov
pop
push
push
mov
inc
sbb
cmps
pop
stos
cmps
lock
loope
jmp
pop
push
and
and
lods
push
ins
and
mov
test
jge
sub
mov
mov
xor
pop
gs
arpl
call
ror
add
scas
pop
loopne
push
mov
shr
je
outs
dec
sub
sbb
data16
fstp
pop
test
fnstsw
aam
xlat
sub
lock
mov
loope
sbb
retf
xchg
cmp
lods
add
jb
push
enter
pop
outs
test
sub
imul
cld
mov
stos
xor
shl
rcl
cwde
mov
xchg
and
repnz
lods
push
cmp
sbb
(bad)
in
adc
sbb
cmp
add
add
popa
sub
mov
mov
gs
pop
jmp
retf
fsubr
mov
test
cmpxchg
(bad)
lea
out
retf
pop
iret
aam
jns
push
mov
jmp
sar
sub
and
jmp
jle
call
outs
dec
jle
adc
sub
add
xchg
shl
adc
cmp
imul
addr16
jmp
ins
pop
pop
jo
in
mov
cmp
adc
jns
xor
sahf
es
stc
sbb
leave
mov
adc
fidivr
aad
movs
in
adc
neg
jo
fsubr
xor
dec
cdq
aam
sbb
adc
xor
and
test
fcmovnbe
push
push
xchg
ins
ins
cmp
lods
mov
scas
adc
add
outs
ror
rol
aad
cld
int3
or
jno
jnp
mov
dec
inc
stc
pusha
dec
add
outs
bound
cwde
pusha
or
sbb
adc
sbb
xchg
cmps
inc
ins
loope
or
movs
(bad)
sub
jae
das
dec
jae
dec
xor
test
inc
mov
jmp
fbstp
dec
jmp
xor
mov
or
inc
xchg
dec
mov
fnsave
sbb
add
stc
and
xchg
or
movs
push
cmp
push
pusha
push
iret
or
pop
pushf
xor
shr
sbb
mov
mov
and
jne
add
mov
push
or
pop
mov
cwde
ficom
mov
inc
out
call
(bad)
pop
inc
mov
xor
xchg
xor
inc
jle
mov
(bad)
out
ret
ds
call
cwde
jb
clc
add
xchg
sbb
hlt
retf
cmp
xor
jg
mov
scas
xor
mov
mov
movs
loope
nop
inc
aas
cwde
daa
jmp
push
add
call
add
popa
rcl
test
mov
jge
add
and
call
pop
loopne
and
and
mov
mov
lods
(bad)
pop
daa
adc
or
(bad)
fmul
cwde
gs
ret
fistp
adc
inc
push
or
loopne
out
or
xchg
or
bound
retf
and
jle
xchg
arpl
nop
cs
mov
ins
xor
mov
leave
div
es
out
scas
ret
sub
inc
add
dec
mov
shr
loop
imul
(bad)
arpl
add
js
leave
push
in
loopne
and
cwde
pop
xchg
xlat
popf
outs
jge
es
mov
das
push
jge
cwde
test
xchg
enter
ins
or
fincstp
clc
and
(bad)
fld
das
inc
xchg
icebp
mov
push
push
cld
je
cdq
jg
neg
push
and
mov
ficom
lea
sti
rol
scas
ror
jo
xor
daa
lea
(bad)
ret
xchg
out
add
gs
popa
(bad)
repz
out
mov
test
dec
loopne
dec
dec
ret
inc
pop
xor
jg
in
hlt
enter
jo
(bad)
ror
cmp
data16
sti
or
fidiv
sbb
js
outs
adc
mov
mov
es
sbb
cdq
repz
mov
mov
xor
and
cmc
les
repnz
jo
out
in
cmp
pusha
add
sbb
or
mov
cmp
ds
jp
ja
push
pop
pop
xchg
pushf
add
ins
sbb
fnstcw
sar
pop
pminub
fcomp
je
cmp
xchg
cmp
sahf
push
push
pop
ins
inc
adc
xchg
mov
fcom
pop
dec
les
xor
mov
pop
cdq
mov
loop
lahf
and
push
int3
pop
dec
icebp
cmp
or
mov
mov
add
pop
mov
cmps
jl
les
shl
sbb
jb
pop
jmp
int
xchg
call
arpl
lea
sub
pop
sbb
xchg
jne
cmp
jg
mov
shr
xchg
add
cwde
fild
push
nop
in
or
clc
pop
adc
push
pop
loopne
push
std
scas
in
xchg
pushf
or
lods
retf
cld
(bad)
shl
jae
out
or
dec
fiadd
int
in
into
pop
mov
mov
mov
and
push
out
test
inc
stos
push
call
fidivr
xchg
mov
inc
jmp
jne
sub
outs
and
out
and
fs
cmps
cmps
and
xchg
sbb
repnz
push
(bad)
cmp
jge
xor
sar
sub
jecxz
mov
les
outs
nop
cmp
sub
fwait
mov
jmp
mov
sahf
sti
shl
scas
pop
icebp
jbe
xor
cmp
sub
sub
jmp
push
sti
sub
or
das
imul
xor
pop
cwde
dec
sbb
cmp
call
jg
sub
into
push
sti
mov
sbb
js
fisub
adc
jmp
adc
movs
lock
jae
cmp
ins
je
scas
stos
or
test
(bad)
loop
shl
lea
mov
loope
test
sti
add
scas
pop
mov
dec
jmp
bound
xchg
mov
int3
adc
jnp
fcmovbe
(bad)
mov
or
xchg
sub
push
mov
cmp
ficom
(bad)
fst
add
cmp
xor
mov
jmp
(bad)
xchg
stos
or
mov
lods
cmps
pop
cmc
sbb
jp
mov
repz
lods
and
mov
loop
mov
push
jl
(bad)
fcmove
jmp
(bad)
retf
add
(bad)
pop
mov
jo
add
(bad)
sub
ss
int3
push
fs
mov
or
xor
push
cmp
xor
fisttp
jmp
enter
in
les
outs
mov
mov
jmp
xchg
jo
mov
inc
stos
test
pop
add
and
imul
mov
mov
cdq
jnp
or
mov
jle
xor
(bad)
pusha
push
js
js
pop
adc
mov
push
rcr
push
mov
int
pop
or
mov
adc
test
cmp
cmps
xor
cmps
sbb
outs
test
stos
dec
xchg
mov
dec
sub
aad
add
(bad)
outs
scas
mov
fwait
push
addr16
sbb
xor
les
aam
mov
neg
xor
or
cmps
push
loopne
jbe
pop
out
les
jg
add
sub
push
arpl
pop
cli
ins
or
push
pop
mov
pop
fsubr
ret
xor
push
dec
xchg
dec
js
adc
jno
mov
mov
(bad)
adc
mov
xchg
jle
push
popf
dec
cli
and
inc
cmp
std
or
dec
aaa
push
mov
mov
jo
xor
pop
ja
jnp
cmps
fldcw
fsubr
jl
sbb
mov
inc
arpl
in
jae
sub
or
push
ret
push
out
fwait
xlat
out
cmps
mov
jae
pop
dec
(bad)
mov
inc
dec
sub
fisub
xor
pop
stos
jge
jge
mov
dec
add
sub
fwait
dec
sub
sbb
in
test
outs
xchg
adc
pop
mov
inc
iret
push
mov
loopne
js
ds
and
sub
sbb
jmp
jnp
or
dec
cmp
jmp
inc
pop
cmp
jo
xchg
or
sbb
ja
add
push
popa
leave
aam
push
dec
outs
les
nop
gs
iret
cld
adc
push
dec
sahf
out
mov
adc
sub
cwde
mov
ins
xchg
(bad)
sti
iret
ds
pop
test
dec
ins
test
cmp
cmp
jno
pop
call
das
sbb
shl
mov
jmp
aam
pop
sub
imul
shr
mov
mov
sub
stos
push
sub
mov
cmp
jae
dec
jge
sbb
adc
xor
mov
lahf
jle
cmp
movs
pop
fxch
jecxz
data16
out
test
shr
adc
xor
adc
jae
sbb
std
mov
es
hlt
mov
mov
jns
sub
mov
jg
les
(bad)
pop
and
mov
cmp
call
in
out
xor
sub
fiadd
mov
mov
fdivr
retf
les
ja
sti
cli
(bad)
or
adc
pushf
mov
inc
mov
xchg
push
fimul
test
call
int
mov
dec
and
and
sbb
imul
cmp
dec
cmc
movs
dec
repnz
xchg
cmp
inc
je
mov
mov
adc
dec
repz
dec
ins
rdtsc
mov
xchg
in
cmp
out
(bad)
es
je
cmp
fwait
jg
push
popa
(bad)
call
popa
arpl
adc
mov
jae
jae
psraw
and
rcl
es
pop
pop
lahf
les
jae
sbb
cdq
scas
push
push
sbb
fldcw
jl
out
push
push
mov
dec
clc
xchg
mov
jne
cmp
sahf
cmc
lahf
test
dec
jbe
push
xchg
shr
lds
add
push
jns
mov
push
in
les
push
js
push
sbb
(bad)
cld
dec
jae
xor
pop
sbb
push
movs
lods
js
sahf
dec
fdiv
rcr
hlt
int3
mov
in
mov
out
mov
cs
fadd
nop
xor
add
in
jp
dec
or
pusha
(bad)
and
add
mov
adc
xor
push
lea
das
sbb
rcr
mov
or
add
pop
gs
enter
sti
pop
ins
popf
sbb
pop
jl
fsub
mov
(bad)
jl
cmps
(bad)
jecxz
mov
jae
cmp
dec
test
js
fwait
jb
lods
cmp
inc
sub
add
xlat
mov
iret
and
jns
cmp
sub
jno
push
mov
fnstcw
push
enter
mov
cs
pop
mov
in
cmps
inc
xlat
xor
sahf
or
iret
test
cld
cli
data16
dec
dec
push
xor
imul
in
repnz
test
xchg
adc
imul
sbb
add
pop
adc
outs
je
jl
cmps
imul
data16
fstp
and
je
inc
loop
fsub
pop
mov
and
cld
das
sbb
sub
std
mov
retf
cmp
xor
mov
or
push
and
sub
movs
and
adc
pop
outs
pushf
repnz
jmp
ins
jae
cld
or
aad
cld
fidiv
lods
xchg
jmp
mov
(bad)
jns
mov
fild
retf
enter
add
dec
sub
retf
cmp
adc
call
mov
cli
push
sbb
cmp
out
pop
add
and
mov
jmp
dec
(bad)
cmp
leave
adc
push
inc
mov
xor
mov
push
inc
jmp
mov
xor
push
addr16
sub
and
ror
push
movs
lock
jne
push
gs
sti
fcmovnu
sti
cmp
retf
mov
cmps
jno
fsubr
lods
pop
mov
fild
test
ror
pop
and
outs
repz
in
mov
clc
lods
jno
in
jmp
(bad)
pop
sbb
sub
inc
aad
jl
test
mov
adc
(bad)
movs
shl
xchg
inc
mov
mov
(bad)
dec
and
stos
inc
(bad)
fadd
pushf
mov
push
cmp
cld
fcom
pop
lock
fwait
shr
lods
(bad)
leave
xor
push
rcr
sbb
adc
jle
in
jecxz
inc
sub
popf
cmc
add
movq
retf
push
jg
(bad)
test
out
pusha
or
das
adc
or
adc
jmp
test
dec
mov
and
jmp
out
or
adc
daa
repnz
add
mov
pop
sub
inc
shr
fld
std
test
cdq
popa
int
cmp
mov
stos
sti
in
inc
(bad)
cmp
into
jnp
inc
sub
inc
hlt
cmp
or
cmp
retf
sbb
pusha
xchg
mov
aad
push
and
pop
add
arpl
test
push
jmp
inc
(bad)
ds
fisttp
and
xor
cmp
sti
inc
mov
pop
xchg
mov
jp
shr
fsub
sbb
sbb
lods
out
outs
jl
(bad)
fild
retf
shr
pop
jo
cmp
stos
jmp
pusha
adc
in
jp
and
fwait
cmp
push
pop
adc
or
and
dec
sbb
lahf
popf
int3
inc
inc
mov
or
mov
ja
or
bnd
mov
jno
and
sub
cli
jge
sub
shl
cmp
fidiv
mov
cmp
sbb
sub
xor
scas
icebp
ja
mov
popf
jb
or
and
rcl
int
pop
in
cmp
and
cmps
nop
and
push
mov
clc
in
cmps
(bad)
inc
ficom
aas
add
push
mov
xchg
js
xor
in
mov
mov
xchg
data16
test
push
test
mov
xchg
std
mov
outs
push
push
push
add
pop
call
(bad)
(bad)
stc
xchg
cmc
retf
push
hlt
xchg
or
add
cmc
clc
std
inc
(bad)
push
xchg
push
or
xchg
stos
fmul
cmp
stc
sub
out
or
mov
jmp
retf
push
rcl
retf
mov
das
sub
out
rcl
mov
iret
test
(bad)
dec
nop
inc
test
test
lahf
jbe
pop
jmp
xor
je
shl
clc
movs
cmp
gs
fld
inc
cdq
push
push
xchg
mov
bound
test
or
xchg
mov
ret
dec
cli
xchg
dec
sar
sub
jmp
lods
jmp
xor
pushf
pop
jp
(bad)
aaa
call
ret
cs
jl
adc
stos
addr16
push
sub
push
das
sub
mov
nop
inc
mov
(bad)
cmp
mov
or
test
test
out
lea
imul
dec
xor
jno
pop
sub
jle
aad
mov
imul
in
(bad)
jne
mov
xchg
pandn
and
cmp
sub
or
push
retf
mov
cmp
enter
cmp
cmp
pop
cwde
jmp
dec
ret
and
mov
push
and
test
std
dec
and
leave
into
cmp
pushf
push
test
out
cmp
psubsb
fadd
std
rol
icebp
mov
fdivr
add
pop
jge
mov
leave
push
ror
cmp
cmp
ins
push
int3
jecxz
dec
stc
inc
sub
sti
stos
pop
call
xchg
push
sbb
std
xchg
cmps
lods
outs
in
lds
xor
nop
outs
mov
ds
in
popa
jne
mul
out
jmp
(bad)
cld
jg
mul
mov
sub
inc
loope
mov
or
in
mov
aaa
dec
push
daa
clc
scas
rol
pop
xchg
enter
or
inc
stc
push
call
sub
xor
ror
mov
ja
push
xor
mov
inc
loope
dec
mov
repz
sub
sub
sahf
add
iret
mov
shl
inc
cmp
into
aam
mov
es
xor
push
dec
jp
sbb
cmp
push
mov
cmps
sbb
addr16
fadd
add
pop
adc
outs
sbb
sub
push
inc
shl
jecxz
xlat
pop
(bad)
sub
mov
or
push
jp
loope
lock
mov
loop
lock
mov
cmp
dec
dec
not
fs
mov
inc
out
out
aaa
xchg
xchg
mov
mov
jns
mov
cmp
neg
mov
add
inc
movs
cmp
retf
imul
cmp
and
inc
mov
xor
push
idiv
jge
pop
or
cdq
sub
mov
mov
mov
sub
scas
cmp
cmp
lds
jnp
out
call
jl
aas
loopne
pushf
lock
cli
ds
in
cmp
dec
call
pop
push
inc
xor
cmp
shl
mov
mov
shr
cmp
dec
inc
loop
icebp
mov
xor
sub
(bad)
adc
adc
cmp
inc
lods
jns
lods
and
push
sub
pop
pop
inc
pop
aam
adc
mov
or
shl
sti
and
shr
push
mov
out
inc
jae
adc
xlat
sub
cdq
xlat
ret
pop
inc
add
jmp
inc
scas
cdq
push
enter
test
pop
xchg
loopne
dec
mov
in
inc
ror
xor
dec
sbb
jne
pushf
mov
aam
jno
or
adc
lods
rcr
frstor
pop
es
push
shr
mov
dec
imul
cmp
iret
dec
cmps
outs
sar
loopne
nop
push
xor
mov
cmp
shl
xchg
dec
sub
mov
xchg
(bad)
dec
inc
push
ins
(bad)
or
imul
xlat
push
sbb
inc
push
sbb
popf
ins
loope
dec
cdq
xor
cli
add
les
daa
je
test
pushf
mov
cmps
and
xchg
sub
test
popa
pop
mov
jp
pop
mov
fnstsw
ss
and
fld
jg
imul
sar
pop
je
rcr
fsubrp
imul
stc
enter
repnz
mov
ror
fisttp
loope
imul
and
out
ins
or
(bad)
cmps
aad
fwait
dec
cdq
jno
dec
ret
mov
cld
push
shr
adc
xchg
push
pop
sub
retf
mov
imul
cmp
or
(bad)
fwait
cmp
jns
add
dec
sar
xchg
add
cmp
xchg
mov
mov
pop
xchg
or
div
or
push
jle
cli
mov
stos
mov
mov
scas
jne
enter
push
dec
mov
mov
in
mov
pop
das
loop
inc
mov
and
or
ficomp
push
mov
sahf
adc
mov
jbe
push
rcl
stos
push
test
sub
pop
add
sbb
jl
push
test
(bad)
jne
fistp
pop
cdq
jnp
fcmovb
std
in
bound
dec
add
sbb
das
jno
jmp
mov
inc
sub
push
lahf
pop
fdivr
mov
add
shl
test
push
dec
mov
add
mov
mov
and
cmc
mov
jg
cmp
fsub
or
(bad)
loop
push
mov
test
fnop
test
aam
sub
ds
aaa
jmp
mov
in
or
ins
sub
ret
inc
mov
adc
mov
xchg
out
and
aaa
nop
nop
add
rcl
fsub
sub
push
es
push
dec
cwde
fs
in
outs
cmp
mov
push
aaa
stc
mov
gs
xor
or
arpl
aam
sahf
xchg
push
fadd
pusha
test
add
cld
dec
faddp
cmps
xor
and
xacquire
pop
fidivr
adc
int3
lods
gs
jae
cmp
inc
out
add
xor
cdq
lods
sub
mov
xchg
ror
mov
jbe
xchg
aaa
ja
lds
loop
popa
psrad
retf
xchg
dec
push
sbb
cli
enter
dec
inc
sbb
and
xchg
sub
sbb
mov
inc
aam
dec
lock
push
sbb
xchg
push
and
sbb
popf
in
push
clc
scas
imul
mov
mov
jmp
test
or
jle
loop
push
mov
jp
bound
sahf
mov
cmp
xchg
stos
xor
sub
mov
cmps
cmp
js
xchg
loope
inc
add
out
sub
jno
mov
outs
pop
(bad)
pop
les
pop
inc
cmp
cmps
cmp
add
jno
sahf
outs
push
cmc
inc
bound
retf
leave
out
fdiv
cdq
mov
cli
push
inc
(bad)
push
popa
sbb
mov
sbb
(bad)
sbb
gs
ins
mov
lods
fsub
in
fs
rcr
push
xchg
mov
rcl
dec
push
cmc
js
inc
ds
xchg
inc
xor
retf
sub
test
xchg
or
adc
dec
adc
and
add
sub
cld
xor
adc
dec
cmp
xlat
je
jns
mov
addr16
and
and
jmp
push
dec
mov
or
xor
mov
sub
sub
fsubr
fstp
inc
mov
sub
add
mov
sbb
lods
mov
mov
pusha
dec
repnz
sbb
cmc
push
cmp
pop
mov
stc
fiadd
xchg
cdq
mov
sub
in
aad
mov
lahf
dec
jmp
out
fdivr
cld
sbb
adc
xchg
out
aad
sub
xchg
mov
cmp
imul
fprem1
int3
add
jl
movs
pop
mov
xchg
dec
sar
pop
fidivr
xchg
mov
out
test
ins
inc
je
mov
movs
cmp
sbb
repnz
shr
mov
rcr
fdiv
idiv
jp
movs
int3
sbb
dec
lods
jecxz
mov
ins
add
add
addr16
fist
pop
adc
mov
xchg
imul
je
(bad)
mov
sahf
inc
ins
push
out
in
mov
aam
das
dec
sub
repnz
pop
arpl
xor
and
mov
mov
mov
retf
mov
daa
cmp
xor
mov
aas
int3
sub
es
test
ja
movs
outs
jbe
(bad)
in
lahf
dec
mov
inc
mov
imul
outs
mov
ss
sub
ficomp
mov
and
popf
pop
das
aad
cmp
popa
dec
or
in
scas
push
popf
add
jl
in
adc
xor
adc
gs
out
cmps
mov
jge
mov
cli
dec
loope
mov
mov
int
cmp
xor
(bad)
(bad)
leave
inc
rcr
imul
leave
mov
into
test
mov
and
test
stc
mov
mov
mov
push
xchg
add
sub
xor
ficomp
test
add
sub
ds
lahf
mov
clc
xchg
jo
sbb
mov
xchg
xchg
or
sbb
add
out
add
push
or
mov
mov
retf
xor
mov
sub
mov
in
xchg
dec
fstp
inc
je
or
push
mov
fisubr
mov
clc
stos
pop
inc
sub
and
(bad)
mov
clc
retf
rcl
mov
clc
sti
repz
dec
retf
and
dec
cmp
inc
jo
mov
pop
scas
stc
xchg
mov
and
inc
shr
and
imul
mov
imul
lds
dec
dec
mov
fidivr
loop
es
jp
loopne
mov
cmp
add
outs
fadd
sbb
ret
mov
jle
pop
ret
aam
dec
jmp
mov
shr
adc
jno
mov
push
retf
fdivr
fdiv
sub
push
test
loopne
dec
dec
adc
loop
call
pop
loop
(bad)
sub
mov
imul
xchg
push
mov
add
iret
out
sbb
out
cmc
cwde
jo
nop
out
test
xlat
xor
pop
sub
pop
and
stos
scas
clc
stc
jg
and
cdq
sbb
cmp
pop
addr16
mov
nop
adc
jo
inc
loopne
aam
pop
inc
inc
mov
(bad)
ror
add
dec
adc
in
push
(bad)
sub
push
sbb
xchg
lar
out
das
inc
inc
mov
frstor
aam
jne
aad
cdq
inc
repnz
mov
sar
imul
icebp
pop
popa
mov
add
fistp
mov
inc
bound
jae
push
es
ja
pop
xchg
fmul
cmps
bound
in
ins
or
aaa
sbb
ja
sbb
fwait
ret
sub
fisub
sbb
inc
and
adc
out
push
sbb
inc
icebp
pop
xchg
mov
jmp
movs
mov
mov
or
(bad)
sub
scas
mov
sub
ins
cli
lods
cmc
pop
dec
push
or
jo
cs
pop
mov
fbld
in
movs
pushf
je
xor
mov
or
mov
jae
ret
xchg
jp
pop
ins
pop
imul
aam
and
xor
in
je
xor
retf
pop
ds
jne
push
inc
pop
ret
dec
adc
pop
push
sub
dec
sbb
push
add
retf
test
pop
aam
sbb
cmps
push
out
lods
jmp
std
pop
repz
scas
jmp
mov
jbe
jns
lock
popf
mov
retf
pusha
scas
call
jl
shr
(bad)
enter
inc
or
ja
jle
jno
jp
xchg
mov
nop
sub
std
inc
sbb
dec
pop
ja
push
aas
and
and
clc
int3
cwde
bnd
mov
(bad)
(bad)
add
add
lods
mov
push
xor
pop
sti
xor
cld
stos
sub
stos
sub
push
xchg
jl
add
mov
push
mov
addr16
std
lds
cdq
or
jle
stos
lock
xchg
(bad)
dec
mov
pop
push
jo
fcom
pop
ds
push
sbb
sti
xchg
push
dec
jae
leave
jne
mov
outs
arpl
xor
fs
or
out
or
mov
cmps
mov
mov
stos
nop
inc
pop
in
loop
sub
cmps
mov
adc
push
push
neg
rcl
push
or
nop
jmp
fwait
add
jae
mov
mov
mov
add
mov
mov
dec
push
outs
add
jbe
sub
jo
push
mul
nop
adc
fs
sub
mov
int
pop
sbb
dec
or
or
sbb
mov
in
push
rcl
movs
pusha
push
xor
mov
pop
inc
jb
mov
xchg
mov
bnd
loop
jg
(bad)
mov
jl
xor
and
in
mov
imul
fxch
xchg
mov
mov
xchg
dec
cmp
clts
adc
scas
cli
shl
xchg
inc
inc
adc
outs
test
les
mov
cmp
ins
mov
xlat
dec
std
jmp
pop
cmps
mov
arpl
dec
(bad)
mov
popf
clc
(bad)
mov
cwde
rol
test
or
das
fisttp
pop
daa
mov
out
arpl
pusha
cs
dec
repz
adc
ret
mov
pop
outs
mov
icebp
adc
sbb
cmp
pop
pop
bound
sbb
xchg
retf
jns
ins
xchg
call
or
pusha
retf
sti
fidiv
in
mov
or
fcmovne
aam
xor
jnp
pop
in
inc
adc
stc
jmp
add
inc
inc
int
ins
jnp
push
lods
inc
pop
cld
dec
sbb
xchg
outs
fbstp
push
mov
call
jp
dec
repnz
cmp
(bad)
dec
add
test
out
fdivr
dec
adc
ficom
iret
call
daa
xor
cmp
fcmove
pusha
sub
mov
xor
leave
mov
sub
sti
add
stos
int3
rcr
in
pop
in
(bad)
je
dec
outs
cwde
xchg
mov
jne
aas
stos
mov
cwde
lods
mov
push
out
es
jg
fisubr
in
cwde
in
cdq
adc
add
cmp
xchg
repnz
and
mov
daa
xor
imul
idiv
jmp
outs
pop
lock
stos
out
mov
popf
mov
outs
out
sub
cmp
inc
push
frstor
addr16
cmp
scas
add
sub
push
pop
jno
loope
stos
push
ror
daa
enter
inc
mov
push
cmc
mov
scas
test
adc
popf
adc
push
std
sbb
cs
stos
popf
mov
sbb
stos
call
sbb
cld
xchg
inc
adc
add
adc
inc
jmp
fcmovb
or
lds
pop
(bad)
popf
jae
ret
and
test
xlat
pop
fdiv
into
lahf
adc
or
int3
outs
int
mov
and
mov
mov
aam
inc
dec
in
rcl
mov
sti
dec
arpl
sub
inc
stos
mov
pop
imul
cmp
cs
sub
je
xor
jecxz
adc
adc
sub
test
imul
fdiv
sub
cmps
push
nop
das
ds
repz
mov
icebp
inc
mov
mov
xor
fmul
sbb
bswap
stos
ja
inc
cmp
jmp
pop
push
aam
outs
or
mov
stc
cs
jmp
int3
mov
ins
xchg
shl
out
gs
nop
inc
jmp
retf
mov
fdiv
mov
push
imul
into
mov
adc
mov
sbb
pusha
xchg
xor
dec
and
dec
jbe
out
icebp
mov
lahf
lds
pop
js
inc
dec
jb
out
js
pop
pop
mov
in
bound
or
rcl
inc
scas
mov
jne
mov
popa
loopne
xchg
inc
push
adc
jmp
inc
dec
retf
fiadd
rcl
sub
rep
hlt
fxch
daa
(bad)
sti
xlat
push
or
adc
sbb
int
shl
push
popa
repnz
mov
push
movs
dec
cs
jmp
imul
sti
aaa
aas
mov
jns
and
shr
jne
dec
in
mov
pop
(bad)
xor
add
inc
nop
neg
dec
js
sbb
xor
inc
daa
out
es
sti
sbb
jo
in
sub
mov
(bad)
ds
dec
mov
ud1
dec
dec
inc
test
adc
xlat
dec
(bad)
imul
and
mov
sbb
jge
mov
pop
in
stos
daa
mov
bound
inc
ss
cld
cmps
aas
mov
mov
jbe
add
pop
jmp
push
mov
imul
dec
mov
or
push
outs
leave
mov
fdivr
mov
repz
and
add
test
mov
sub
sub
xor
movs
jle
xor
das
mov
cmp
cmp
add
in
enter
aas
daa
(bad)
out
aam
lock
adc
adc
fucom
out
xor
retf
fwait
sub
jnp
shl
mov
fs
adc
push
xchg
lods
inc
cdq
mov
sub
sub
popa
pop
gs
dec
test
cs
aam
jg
or
iret
jb
sbb
ins
or
xchg
mov
inc
out
imul
(bad)
xor
neg
xor
xchg
mov
or
sub
pop
jmp
in
es
and
int3
ret
mov
adc
loop
aaa
js
fidivr
sbb
mov
movs
push
inc
mov
cmc
cdq
icebp
lods
or
repz
push
rcr
jg
pop
imul
jnp
mov
sub
mov
sbb
sahf
mov
and
add
inc
aad
mov
and
(bad)
jno
in
and
mov
sbb
and
push
cmp
ficomp
in
mov
jl
push
dec
push
(bad)
cli
mov
mov
mov
retf
xchg
pop
pushf
cdq
dec
ret
xor
stc
jns
arpl
lock
cdq
je
(bad)
sub
icebp
sbb
ja
push
call
shr
stos
loop
dec
lods
fsub
sti
cmp
jmp
mov
inc
dec
aas
jge
hlt
jl
mov
mov
in
push
cs
inc
xor
add
adc
popa
jno
and
mov
inc
cmp
bound
test
xchg
xor
bsf
loope
pop
inc
neg
movs
inc
lods
call
aaa
(bad)
dec
mov
sbb
cmp
mov
jecxz
test
xor
cmp
push
sbb
push
adc
xor
lds
int
addr16
inc
push
inc
mov
rol
inc
daa
clc
sub
xlat
out
inc
mov
das
mov
lahf
into
pushf
add
mov
cmp
jle
jno
test
cmps
jmp
mov
(bad)
xchg
add
pop
add
sbb
or
or
pop
jb
or
repnz
pop
cmp
ret
mov
mov
ror
lea
mov
mov
test
dec
push
xchg
movs
pop
pop
adc
inc
les
mov
mov
clc
nop
and
in
xchg
loop
jne
inc
add
adc
aas
push
js
div
mov
cmp
bound
ds
(bad)
shl
cmps
jo
pop
mov
dec
sbb
jge
test
mov
shl
leave
add
mov
push
jae
sbb
ret
cmp
or
inc
fimul
out
std
dec
inc
dec
loopne
das
test
movs
or
push
ins
(bad)
cmps
sbb
xor
and
push
cmc
adc
inc
push
es
fdecstp
xor
push
(bad)
jg
fsub
xlat
call
hlt
jne
stos
dec
inc
int3
push
pop
push
cmps
mov
jb
cmps
inc
dec
in
mov
cmp
loop
fucomp
jns
xchg
and
push
(bad)
mov
ins
(bad)
cmps
hlt
pop
movs
(bad)
sti
jg
(bad)
popa
int3
dec
mov
sbb
push
xchg
out
imul
push
dec
(bad)
aaa
cmp
xchg
ja
fs
ret
jecxz
mov
movs
gs
ret
dec
cdq
aam
lods
xchg
std
aad
call
inc
mov
ins
in
es
(bad)
sbb
sub
adc
mov
out
out
cs
pushf
arpl
sub
mov
mov
mov
cmp
loop
loopne
xor
adc
ss
pop
cmps
daa
inc
inc
sahf
mov
adc
out
inc
push
aaa
mov
xchg
and
mov
in
out
cmps
stos
sbb
add
pop
sbb
fs
sbb
hlt
xchg
lock
sbb
inc
cdq
push
pop
mov
xchg
and
sbb
stc
inc
imul
loope
sub
popa
test
call
ins
outs
adc
push
inc
mov
mov
mul
scas
xor
cmp
mov
xor
je
rcl
jle
mov
out
rol
in
push
push
out
test
push
pusha
outs
jl
arpl
inc
dec
(bad)
pop
int
jle
push
xor
xchg
daa
sub
pusha
and
sub
lds
icebp
push
mov
cmp
not
nop
aaa
in
cwde
mov
loop
or
(bad)
jns
jmp
dec
popf
(bad)
rcl
and
jno
das
inc
int3
std
enter
fldenv
jns
xor
(bad)
jg
add
xor
and
ficom
dec
imul
test
add
or
push
addr16
mov
(bad)
js
mov
sub
scas
loop
sub
pop
pop
popf
mov
xor
clc
fwait
mov
lds
call
mov
popf
jbe
fwait
test
(bad)
out
or
out
lsl
sti
outs
mov
bound
(bad)
sbb
sub
xchg
cmp
push
test
(bad)
adc
les
jge
add
mov
xor
sbb
adc
jno
je
sbb
cmps
daa
ds
xchg
mov
bound
jl
jp
dec
add
ds
sbb
inc
cdq
mov
imul
icebp
mov
push
push
in
pop
lods
cmps
stos
fdiv
gs
pop
mov
pop
push
dec
pop
add
cdq
pop
mov
outs
ins
lods
xchg
push
pop
es
dec
mov
shl
add
jo
push
pop
mov
call
cmps
repz
mov
mov
idiv
sub
mov
push
cmp
retf
jle
sbb
xchg
sbb
and
mov
(bad)
out
not
mov
push
jb
push
mov
inc
out
pop
inc
sbb
sbb
jle
ds
test
scas
mov
iret
mov
dec
add
add
xchg
jne
dec
hlt
scas
mov
push
sbb
nop
adc
mov
shl
call
neg
mov
jno
outs
mov
shl
adc
inc
adc
fdiv
bound
or
sti
pop
dec
fcmovnbe
push
leave
jmp
sub
movs
jge
mov
add
and
push
sahf
daa
push
imul
xor
sbb
dec
add
sbb
inc
dec
sbb
mov
frstor
imul
push
mov
mov
cdq
adc
dec
aad
inc
iret
enter
cmp
xor
ret
retf
stos
push
test
push
nop
push
mov
aas
mov
popf
jg
std
adc
test
call
ror
xlat
pop
dec
add
xchg
arpl
mov
mov
not
outs
imul
clc
dec
retf
inc
sbb
jmp
loope
(bad)
dec
pushf
iret
lahf
push
lds
pop
shr
cs
les
dec
ins
lock
hlt
es
cmp
or
pop
ret
cmp
push
in
inc
cmp
pop
xchg
push
ds
add
ret
push
mov
and
ret
xor
dec
sub
lods
dec
mov
pop
ss
mov
aad
xor
cmp
sbb
mov
dec
arpl
sub
bound
retf
js
pusha
mov
shl
push
jno
xchg
out
aaa
pmullw
imul
adc
dec
cmp
jae
xchg
sbb
loop
sub
cdq
daa
jnp
loop
gs
aad
mov
(bad)
xor
push
xor
dec
dec
pop
dec
stos
inc
inc
cmps
xor
fadd
in
lods
dec
cmps
(bad)
mov
or
mov
ret
cld
icebp
jnp
(bad)
repnz
into
scas
xchg
cmc
sub
dec
fdivr
mov
mov
sbb
imul
jmp
fadd
ror
arpl
lds
inc
add
jae
and
xor
mov
xor
sub
mov
cmp
pop
loopne
test
add
fidiv
movs
fstp
adc
iret
nop
pop
lea
hlt
loope
push
cmp
cmps
sbb
fdivr
popa
sub
lds
outs
xchg
xor
pop
imul
fld
add
sub
push
lahf
cmps
sub
cmp
or
loopne
xor
jae
mov
mov
inc
rcr
mov
daa
test
push
or
pop
inc
cli
cmps
mov
daa
pop
sub
ins
std
cmp
cwde
(bad)
sbb
call
push
iret
imul
or
jmp
std
or
icebp
retf
shr
out
sub
ins
cmp
data16
mov
jge
mov
pop
fist
stc
pop
imul
jno
int
les
jne
inc
aas
ret
jno
ja
or
out
inc
inc
pop
mov
cli
xlat
test
ss
lds
dec
mov
fs
and
dec
outs
(bad)
mov
test
cmps
mov
mov
cmp
xchg
mov
pushf
jo
imul
repz
pop
pop
fdivr
aas
sbb
sub
rol
xchg
cmp
nop
inc
xor
das
and
pop
mov
loop
xor
or
inc
xor
jmp
pushf
pushf
int
inc
mov
add
pop
mov
jb
cwde
sub
mov
sub
lea
jecxz
cmps
or
sub
pop
int3
fidivr
dec
pop
or
push
out
je
mov
adc
repnz
xchg
fisttp
pop
push
jge
jno
push
sub
arpl
or
test
inc
xchg
jl
cmc
xchg
mov
fstp
retf
arpl
push
xchg
jnp
cmp
mov
sbb
call
mov
dec
mov
cmps
xchg
test
in
xchg
dec
push
scas
out
daa
cmp
or
lock
dec
push
out
js
rcr
sbb
bound
pop
call
fild
sar
psrld
int
sub
fmul
(bad)
adc
push
lahf
movs
cmp
int3
sti
xor
mov
mov
mov
push
in
sbb
cmp
cmp
cmp
adc
adc
mov
xor
out
mov
mov
push
pushf
and
in
lea
mov
or
inc
iret
inc
mov
and
bound
jecxz
push
pop
iret
mov
hlt
div
jp
stos
repz
sbb
nop
shl
leave
movs
inc
sub
cmps
inc
loopne
mov
sub
dec
into
ds
push
call
push
fadd
dec
xor
popa
inc
jge
fistp
sahf
neg
jbe
out
adc
dec
sub
shl
stos
push
mov
xchg
dec
sub
clc
mov
mov
and
std
add
and
stos
fcom
or
mov
call
mov
lock
sub
or
push
fdivrp
xchg
jae
pop
and
xchg
cmp
cmp
sub
or
bound
or
mov
les
nop
or
push
es
fild
iret
mov
jmp
popa
loope
mov
cmps
xchg
int3
jns
int
mov
jns
retf
sbb
push
jle
ror
xor
pop
stc
cmp
call
shr
sub
push
and
mov
xchg
mov
ret
add
mov
sar
pop
fwait
in
adc
out
jg
add
call
push
inc
fist
pushf
pop
icebp
ja
movs
es
adc
push
inc
pop
pop
jbe
dec
aaa
cmc
mov
pop
xchg
dec
cld
mov
inc
push
popa
rcr
push
adc
jne
and
inc
sete
dec
fnsave
pop
(bad)
mov
adc
bound
cwde
out
jmp
or
add
and
pop
div
fidivr
scas
add
push
(bad)
shl
sbb
retf
pop
push
in
cld
xchg
xchg
sub
int3
daa
popf
dec
pop
clc
test
jnp
addr16
inc
js
mov
pusha
pop
aam
sbb
or
stos
out
sar
add
cmc
jnp
fimul
sbb
iret
(bad)
cmc
lahf
mov
das
lock
data16
push
out
inc
imul
test
pop
out
push
mov
inc
jmp
dec
in
cmps
mov
nop
add
(bad)
cmp
inc
pop
xchg
and
dec
add
movs
xchg
aaa
(bad)
pop
or
test
retf
fistp
aad
xchg
jmp
mov
loope
inc
ret
xchg
cmc
sub
dec
jmp
and
or
nop
and
mov
xchg
mov
stc
daa
(bad)
or
arpl
in
push
fstp
sbb
cmp
into
scas
cmc
idiv
(bad)
push
sbb
sub
ja
cmps
mov
xor
(bad)
pop
pop
cmps
mov
mov
ja
push
popf
popf
sub
in
(bad)
call
mov
or
fistp
arpl
jp
daa
(bad)
arpl
(bad)
jp
jo
push
push
leave
aad
cmp
icebp
call
mov
and
jmp
js
or
xchg
cmp
xchg
jns
rep
mov
std
sub
mov
cmp
inc
xor
and
in
loop
mov
adc
mov
jae
mov
mov
hlt
inc
and
adc
xchg
cli
sbb
ins
arpl
or
sbb
retf
cld
add
mov
jae
jge
arpl
mov
(bad)
lea
fprem1
imul
adc
mov
mov
fld
push
repz
test
ja
xchg
push
test
xchg
out
std
aad
and
rcr
icebp
loope
xor
(bad)
push
adc
inc
test
ficom
out
cli
sahf
repnz
std
pop
or
cmp
or
and
sub
mov
dec
or
std
call
(bad)
or
ss
push
pop
ror
xor
arpl
call
enter
cli
int
out
outs
daa
dec
test
dec
scas
mov
aas
cmp
pop
push
add
sub
jb
out
popa
aaa
fstp
push
cmps
call
pop
and
xchg
dec
cld
push
mov
xor
mov
stos
push
pushf
in
jl
mov
dec
enter
(bad)
fisttp
push
and
test
xor
cmp
arpl
push
in
and
in
mov
ds
(bad)
cli
int3
dec
and
pop
mov
xchg
hlt
inc
add
fs
mov
in
or
test
pop
ret
(bad)
xor
mov
(bad)
adc
sahf
loop
push
jle
(bad)
stc
daa
pop
mov
push
inc
aad
inc
pop
pop
call
cmc
ficom
in
mov
lds
xlat
xchg
fiadd
in
sub
fld
(bad)
jmp
pushf
in
lahf
daa
cmp
sbb
inc
inc
dec
cmp
addr16
aad
sub
fistp
push
loope
push
ins
imul
sub
pop
in
cmp
mov
cmp
dec
das
or
aas
jp
je
and
xor
cmps
mov
pop
daa
jmp
jle
and
cmps
mov
sti
pop
mov
inc
arpl
sbb
mov
loopne
cmp
mov
ja
xor
adc
loopne
test
pushf
ins
sub
push
and
add
sub
out
adc
jmp
fild
mov
(bad)
xor
adc
push
pop
mov
cdq
adc
loopne
dec
pop
adc
vpcmpgtb
adc
xor
cmp
xor
or
adc
fsin
icebp
int3
iret
loope
inc
jb
stos
lods
scas
imul
dec
pop
repz
scas
dec
call
xchg
aam
dec
push
adc
out
lods
btr
pop
inc
and
retf
ins
push
adc
pusha
jno
sub
dec
jbe
test
in
xor
loopne
jg
sub
and
or
inc
int
or
xor
movs
jge
mov
dec
cdq
(bad)
adc
retf
cmp
pop
jno
add
test
movs
mov
in
pop
sbb
sub
cmp
mov
fldcw
sbb
push
mov
aad
jae
arpl
aaa
jb
sbb
rol
mov
dec
or
push
push
repz
repz
dec
mov
jne
ret
sbb
jno
out
lahf
xchg
stos
or
inc
cwde
nop
cld
sbb
and
pop
cmp
mov
xor
in
or
shr
add
sub
cmp
lock
call
sahf
sbb
or
sub
jns
leave
shl
ds
cmp
js
fucomp
gs
aam
jg
and
xor
lock
mov
push
ss
pop
arpl
ds
push
aaa
push
mov
bound
repnz
fidiv
popa
faddp
add
mov
push
pop
test
mov
int3
mov
mov
(bad)
fist
mov
sbb
push
aas
cmps
je
mov
sub
fsubp
pop
imul
fscale
je
mov
push
lods
sbb
stos
lss
xlat
cmp
and
cwde
stos
mov
sbb
aad
(bad)
sbb
out
stos
cmc
xor
adc
mov
into
out
and
cmc
add
pop
xor
test
aad
pop
stc
es
adc
sar
mov
xchg
cmp
lods
cmps
add
in
mov
fbld
ins
clc
(bad)
xor
fld
and
minps
cmc
hlt
sbb
pop
mov
xor
cdq
cdq
cmc
into
fstp
jae
scas
data16
daa
and
je
bound
ds
movs
shl
fist
mov
loopne
(bad)
xchg
dec
add
cdq
push
and
aas
and
mov
aaa
push
xor
adc
mov
or
or
add
mov
leave
outs
rcl
mov
ds
test
mov
xor
and
inc
jmp
push
mov
mov
mov
sbb
xor
mov
lea
push
aas
addr16
lahf
sub
addr16
aaa
mov
push
stc
imul
mov
jbe
jne
popf
mov
int
call
jns
popf
mov
or
xchg
mov
gs
hlt
mov
pop
sbb
sbb
jae
or
ds
push
ret
ss
idiv
pop
add
into
pop
sub
push
aaa
outs
xor
mov
test
loopne
jl
icebp
or
and
leave
or
out
ret
mov
daa
addr16
push
fdivp
cs
pop
dec
fisub
jle
bound
pop
mov
bound
fwait
cmp
jb
mov
or
push
lea
mov
inc
cmps
arpl
adc
ins
(bad)
xchg
rcr
cmps
fimul
inc
les
or
mov
add
div
dec
jo
ins
aam
pop
cli
sub
shl
pop
sub
std
addr16
adc
inc
inc
xor
(bad)
rep
gs
pop
sub
sbb
xchg
and
loop
test
pusha
push
shl
test
aam
bound
sub
inc
in
xor
leave
enter
mov
push
adc
mov
loop
or
mov
or
adc
ret
(bad)
js
in
and
xor
je
shl
icebp
shr
sbb
call
xchg
jb
pop
cld
pop
(bad)
mov
add
adc
xchg
mov
popa
pop
pop
mov
cmp
loop
dec
sbb
cld
and
sbb
movs
xbegin
jnp
cld
pop
sbb
xor
mov
icebp
(bad)
pushf
pop
mov
les
ss
mov
pop
lahf
or
stos
sub
cli
push
push
cmp
sbb
js
lods
mov
(bad)
cmp
call
pop
ss
inc
out
or
push
inc
retf
pop
sub
bound
mov
pop
push
pusha
mov
aas
clc
xchg
cmp
repnz
xor
jno
mov
cld
dec
scas
in
xrelease
push
dec
pop
fnsave
sub
retf
in
rcr
push
inc
sub
iret
ret
(bad)
retf
jp
jmp
es
cli
icebp
leave
lea
push
mov
xor
inc
int
stc
push
jp
cli
cdq
sbb
retf
adc
stos
ror
lods
enter
cmp
shl
mov
and
pop
mov
cmps
mul
imul
xor
ss
jo
push
mov
fstp
cdq
adc
lahf
jecxz
dec
inc
xchg
retf
ds
stos
pop
mov
fistp
(bad)
mov
clc
mov
scas
dec
jmp
mov
sub
lods
dec
jmp
mov
cmp
inc
test
jae
push
or
cmps
aaa
es
ja
dec
inc
and
jnp
push
mov
pop
(bad)
icebp
push
add
pop
inc
test
addr16
js
mov
push
push
and
call
adc
mov
idiv
or
repnz
retf
and
inc
xchg
xchg
dec
cli
pop
and
and
(bad)
enter
ret
xor
or
stos
retf
mov
sbb
in
add
or
fimul
and
gs
pushf
mov
and
sub
fisub
jbe
pop
xor
jnp
aas
sub
ja
sub
scas
add
call
movs
das
add
mov
lea
scas
sub
in
mov
mov
xor
test
movs
push
xchg
jae
push
aas
jmp
cmp
and
popf
mov
jge
or
rcl
sti
pop
sar
mov
popa
popf
inc
fld
mov
cmp
jmp
jp
mov
inc
ja
adc
jne
jne
hlt
std
lods
je
cdq
cmp
cwde
jno
aad
inc
dec
enter
inc
jmp
movs
lods
dec
dec
add
sub
add
lahf
add
nop
scas
pop
iret
repnz
sbb
(bad)
mov
clc
cmp
ret
mov
push
sbb
stc
or
outs
ficomp
inc
pusha
aas
adc
cli
aaa
add
sbb
out
mov
fild
outs
repz
aad
mov
push
mov
ss
cmp
loop
and
icebp
inc
mov
mov
sub
not
test
add
stos
push
cmps
data16
fwait
aam
xchg
nop
out
idiv
ret
pop
(bad)
cld
mov
add
or
ret
pop
push
dec
fwait
test
lock
xor
push
mov
xchg
adc
pop
(bad)
sbb
xor
mov
pop
stc
imul
xor
push
inc
push
jmp
push
jecxz
cmps
ins
jo
jbe
mov
or
xchg
inc
fcom
ins
pop
adc
push
sub
inc
test
or
cmps
pushf
rcl
pop
ret
sti
in
pop
mov
dec
jmp
stos
xor
fld
push
push
cmp
cmp
mov
and
sub
ja
ins
ins
movs
xchg
push
sub
jb
sar
or
add
das
or
mov
adc
ds
icebp
add
popa
pop
or
enter
jno
addr16
push
jne
xchg
cs
cmp
inc
daa
jae
dec
fdiv
jns
int
or
gs
pop
pop
xor
mov
cs
mov
clc
dec
fcom
jl
mov
push
mov
push
pop
stos
sub
jg
stos
xlat
sbb
sbb
ret
dec
mov
cmp
fnstcw
das
cmps
mov
dec
inc
push
push
mov
pop
(bad)
retf
hlt
into
test
cwde
retf
cli
fwait
cmp
xchg
fcomp
rcr
mov
push
in
(bad)
lock
sub
xchg
ja
ds
shr
loope
mov
mov
sbb
ud2
call
pop
pop
dec
out
sub
add
not
addr16
out
add
adc
shr
inc
enter
sbb
popa
cld
int
sbb
xchg
mov
mov
dec
cmp
jge
test
push
fs
add
sbb
jmp
xchg
sti
push
cld
sub
xlat
xchg
(bad)
mov
sbb
sbb
push
mov
pusha
push
lods
cmps
sbb
stos
jbe
std
dec
adc
outs
push
ret
dec
xlat
leave
mov
push
stos
fwait
sub
inc
xchg
ins
pop
call
jb
imul
inc
sbb
push
xor
enter
xchg
imul
mov
fs
jle
xchg
aam
inc
cmp
fild
test
ins
or
outs
stc
and
lock
enter
xor
inc
data16
adc
loop
jp
xchg
sub
sbb
sbb
or
das
adc
rcl
mov
and
hlt
daa
out
(bad)
sahf
mov
or
in
fwait
stc
adc
pushf
mov
in
or
mov
sbb
xor
sbb
lock
or
jb
push
mov
into
cli
jb
ins
aas
jmp
out
inc
push
jbe
sbb
push
mov
cmps
(bad)
xchg
fldcw
dec
push
push
adc
jno
imul
icebp
loopne
cmp
mov
out
in
jmp
outs
pop
push
ret
xor
xchg
inc
mov
repnz
ins
fadd
pop
adc
retf
pop
dec
repz
cld
dec
stc
ja
xor
jbe
mov
mov
mov
imul
(bad)
mov
stos
sbb
jp
pop
jae
jle
and
loop
pop
imul
(bad)
scas
xor
out
xor
mov
cs
pop
jns
sahf
sub
xchg
ret
nop
and
adc
mov
push
pop
sbb
shl
fbld
jle
adc
and
iret
xchg
fild
ds
retf
out
and
cwde
pop
int
add
stos
bound
mov
out
mov
js
inc
nop
pop
add
mov
icebp
cmps
cmp
dec
jle
add
pop
retf
sbb
xchg
test
test
ds
push
repnz
cld
arpl
sub
sbb
jne
pushf
call
mov
retf
cmp
es
xchg
stos
jb
pop
inc
push
outs
movs
add
jae
cmp
push
jecxz
arpl
sahf
mov
ins
inc
jle
lea
imul
mov
mov
shr
inc
push
add
dec
sbb
pusha
mov
dec
aad
cs
js
mov
ja
mov
push
arpl
or
fwait
call
push
stc
sub
mov
lds
movs
push
mov
imul
dec
jne
or
xchg
pop
push
push
mov
int3
scas
pushf
mov
inc
push
stos
repz
fdivr
movs
jmp
mov
ds
leave
mov
mov
(bad)
sub
inc
fistp
mov
jmp
rcr
stc
mov
inc
retf
mov
retf
pop
int
add
ret
popf
sbb
int3
inc
popf
adc
pop
xchg
popa
jmp
xor
cmps
cwde
adc
inc
mov
cdq
inc
push
push
fwait
mov
int3
mov
adc
jp
push
lock
or
mov
inc
sub
rcl
xor
sub
scas
inc
rol
mov
or
adc
adc
das
imul
retf
xor
aas
and
test
dec
int3
aam
xchg
jbe
or
pop
in
add
test
sbb
lods
mov
std
push
retf
pop
jmp
std
pop
mov
dec
cmp
adc
mov
inc
xchg
mov
test
mov
ret
in
xchg
idiv
add
inc
leave
out
fnstcw
cmps
mov
in
push
mov
mov
aad
fist
jecxz
dec
mov
mov
dec
sub
jg
sub
xor
and
sbb
mov
sbb
in
cs
mov
mov
mov
call
push
pop
inc
imul
sti
cmps
cmp
inc
pop
call
scas
inc
jae
jnp
scas
js
xlat
or
retfw
or
test
clc
or
sti
push
jge
push
xchg
enter
sahf
sbb
mov
inc
ret
nop
lock
add
xor
xchg
in
mov
dec
jg
sbb
imul
stos
stc
xchg
push
dec
loope
popa
rcr
mov
and
and
sysenter
mov
lds
enter
sub
arpl
adc
pusha
ins
and
mov
jl
ins
and
adc
shl
pop
or
sahf
xor
retf
sub
test
push
inc
cmps
jnp
mov
bound
sbb
loopne
ja
je
adc
mov
or
mov
ja
rol
sahf
pop
adc
fwait
vprotb
js
call
jae
add
popa
mov
fistp
sub
jp
adc
xchg
mov
fwait
fwait
ins
mov
mov
out
outs
push
repnz
fiadd
stos
call
xor
aad
jne
(bad)
test
add
cmc
xor
(bad)
stos
inc
jmp
fdivp
sub
dec
imul
lods
rol
mov
sub
leave
cmps
dec
bound
in
es
mov
inc
cmp
nop
mov
mov
inc
cmps
sub
mov
push
and
adc
adc
mov
out
xchg
(bad)
fst
push
jo
loope
repnz
and
pusha
gs
jl
rcl
mov
mov
sbb
fs
and
frstor
mov
fdiv
(bad)
mov
xchg
js
outs
dec
pop
pop
out
mov
ret
pop
mov
popa
xchg
push
(bad)
cld
dec
inc
cmp
adc
pop
add
sub
outs
mov
ja
xchg
sti
push
xor
xchg
xor
inc
fstp
sub
lahf
aas
jp
out
cmps
movs
mov
mov
jae
enter
jne
xor
shl
cmp
add
mov
adc
int3
mul
xor
jns
int
fwait
push
mov
sbb
call
mov
cli
stc
and
push
aas
cmp
(bad)
xchg
(bad)
loopne
aad
fild
movs
dec
ror
lahf
repnz
or
shl
dec
out
jno
add
jns
mov
gs
add
popf
push
shr
int3
mov
and
sub
adc
jnp
jge
les
jle
dec
outs
mov
aam
mov
mov
mov
push
cmp
in
pop
mov
scas
xchg
xor
xchg
lods
ja
inc
shl
add
mov
(bad)
pop
add
test
jnp
xchg
jle
mov
pop
jae
ja
xchg
jbe
iret
inc
add
lods
jno
test
int3
inc
push
dec
sbb
retf
or
pop
inc
fldl2t
sahf
adc
fdivr
sar
push
sti
push
mov
mov
xchg
addr16
mov
adc
call
out
ja
cli
jnp
es
push
and
jns
mov
stos
test
inc
cmp
inc
or
fsubr
(bad)
mov
fistp
popa
loopne
je
aaa
push
inc
sti
fdiv
jg
ds
mov
popa
enter
lahf
in
mov
push
lea
inc
sbb
movs
or
xor
and
das
out
cmps
push
inc
fsubr
repz
cli
pop
fs
pop
ret
inc
xchg
ins
test
out
and
repz
ret
adc
popa
sbb
test
das
push
jne
push
repz
sub
and
outs
xchg
lds
aad
in
pop
jl
call
sub
dec
or
cmp
jno
mul
jbe
mov
and
clc
std
mov
push
pop
jo
jne
js
push
neg
cmp
adc
dec
sbb
sahf
add
bound
push
cmp
sbb
mov
ja
dec
pop
xor
cld
push
jmp
xor
add
dec
xchg
jecxz
nop
push
xchg
lea
mov
mov
inc
or
mov
sbb
or
inc
mov
dec
dec
inc
int3
add
into
mov
neg
test
dec
shl
push
cmp
mov
mov
out
test
pop
loop
mov
imul
imul
jge
enter
xchg
or
ins
add
add
adc
imul
out
xchg
hlt
ret
xchg
outs
fcomi
mov
fisubr
xchg
mov
out
fmul
mov
lods
push
mov
sub
out
inc
fbld
(bad)
std
imul
fsub
and
scas
push
inc
inc
xchg
add
cwde
pop
sbb
mov
xchg
clc
pop
in
or
mov
xchg
int3
pop
add
lahf
dec
sar
xor
xchg
cmp
adc
push
popa
cmp
test
js
or
rcl
pop
in
sub
mov
daa
or
xor
adc
sbb
rcl
mov
dec
mov
in
(bad)
aaa
popf
dec
loopne
xor
pop
dec
mov
pushf
outs
add
push
clc
adc
add
pop
nop
xchg
retf
sub
pop
fwait
in
inc
rcl
pop
dec
lods
loopne
jo
shl
push
call
and
cmp
lods
not
dec
sbb
fsubr
jge
fiadd
cmps
aas
pop
jg
shl
sbb
mov
bswap
mov
(bad)
mov
repz
jge
pop
xchg
adc
stos
cmp
stc
pop
imul
int
and
ins
test
mov
cmc
cld
icebp
in
movs
add
jns
ja
ins
aas
pushf
sbb
addr16
xchg
mov
call
ins
cmp
push
push
dec
push
in
add
loop
xchg
adc
or
jbe
in
xchg
mov
add
cmp
inc
add
loope
aaa
xchg
add
jmp
loopne
movs
pop
fdivr
or
inc
loopne
test
cmp
cdq
cmc
call
mov
stos
jge
dec
je
push
push
fnstcw
pop
imul
cmc
inc
lock
mov
cs
into
rcl
or
inc
rep
arpl
sbb
and
sbb
cmp
mov
scas
test
jg
jbe
xor
pop
lods
fcmovnu
cmp
sbb
add
xor
daa
popf
pusha
ds
mov
mov
push
mov
and
pushf
int3
sbb
stos
cmp
dec
xchg
sbb
xor
xchg
jns
mov
xor
mov
aas
or
jmp
add
div
xor
fsub
outs
fst
xchg
ja
icebp
cmps
lea
fwait
mov
ja
inc
xlat
pop
push
inc
mov
or
pop
push
out
sahf
shl
scas
adc
or
aam
and
inc
(bad)
stos
(bad)
jne
mov
call
das
icebp
nop
out
js
add
cmp
or
fisttp
xchg
movs
aad
mov
push
adc
loopne
popa
mov
and
push
daa
fmul
scas
sbb
mov
dec
pop
push
fiadd
xchg
les
xchg
jecxz
mov
clc
dec
daa
out
repnz
push
jmp
sbb
sbb
rcl
les
cmp
enter
dec
pop
add
mov
mov
mov
neg
push
xchg
aad
sti
les
punpcklbw
ret
jb
xor
leave
and
push
jbe
cmps
sbb
iret
int3
sbb
call
cmp
jge
jle
xor
call
std
adc
dec
xchg
or
rcl
xchg
data16
sbb
mov
mov
push
loop
(bad)
mov
fcmovne
pusha
cmps
mov
ror
and
mov
and
hlt
dec
in
retf
(bad)
jbe
sub
sub
neg
sahf
xor
sub
test
nop
jno
sub
mov
dec
int3
imul
adc
xchg
aaa
aad
(bad)
neg
jg
mov
sbb
and
popf
cmp
mov
fcomp
repz
adc
frstor
jnp
cmps
push
jbe
inc
sub
enter
and
aam
mov
test
icebp
sbb
cmc
je
mov
aad
mov
in
sub
das
push
adc
ret
push
popf
xlat
(bad)
cmps
xchg
xor
pop
in
ins
jmp
mov
pop
push
and
lock
mov
dec
lods
xor
xor
retf
jo
mov
es
stos
cmp
pop
enter
movs
sar
ret
std
xor
adc
aas
fnsave
xor
pushf
push
popf
and
cmp
lea
scas
mov
lahf
js
mov
cdq
sub
adc
or
mov
jp
sbb
fwait
pop
mov
xchg
jnp
sar
nop
dec
push
jmp
and
loopne
xchg
les
lahf
cs
jns
ret
js
push
fisub
repnz
push
inc
adc
push
pop
jg
mov
xor
mov
dec
fiadd
jno
adc
(bad)
icebp
cmp
mov
xchg
rol
(bad)
aaa
in
imul
xchg
ds
and
aaa
pop
xlat
push
add
ins
cwde
adc
pop
int3
sub
fisub
popf
jl
dec
les
movs
movs
popa
je
shr
sub
imul
jo
adc
push
shl
or
loope
push
idiv
ret
jg
fnstenv
or
inc
js
dec
sbb
jae
xor
mov
(bad)
fld
gs
outs
push
dec
das
pusha
mov
les
repnz
pop
pusha
inc
das
adc
xor
sahf
shl
jne
out
jnp
mov
sbb
mov
mov
or
inc
daa
jg
sbb
adc
imul
out
dec
push
and
imul
mov
pop
test
inc
es
xchg
in
sub
(bad)
shr
enter
lods
pop
xlat
inc
jbe
mov
fsubr
loop
mov
adc
(bad)
ds
cld
cdq
cmp
and
lds
add
pop
cmp
lock
js
adc
mov
mov
mov
lods
inc
push
retf
xor
jl
sbb
ret
push
xchg
mov
xchg
cmp
in
xor
sub
jnp
mov
into
mov
div
and
stc
(bad)
icebp
mov
dec
sub
cmp
movs
mov
push
ret
inc
add
add
dec
adc
or
dec
sub
xor
cmp
sub
sbb
mov
sub
out
hlt
add
push
cmps
loop
outs
rcr
test
inc
jmp
pop
cwde
inc
pop
test
loope
cmp
pop
fwait
xlat
mov
xor
jmp
pop
or
cwde
lods
dec
int3
ds
call
ret
popa
loope
jns
popf
jo
sbb
jg
sub
inc
jl
jle
pop
adc
test
and
push
loop
int
push
add
cmps
cwde
or
movs
gs
sbb
adc
neg
sub
dec
add
outs
outs
movs
int
pop
sbb
mov
ret
int
and
xchg
enter
inc
adc
je
scas
mov
adc
shl
add
ja
adc
mov
sbb
ud1
data16
mov
xchg
pusha
sub
fxch
xor
push
repz
jbe
lods
dec
leave
add
add
cmp
mov
dec
dec
xchg
(bad)
hlt
ficom
call
cmps
repnz
fadd
adc
fidivr
mov
aam
sbb
mov
mov
sub
sbb
and
cli
pop
dec
mov
or
cmp
sub
adc
sub
mov
popa
mov
fisttp
and
ret
inc
cmps
(bad)
div
mov
mov
shr
adc
inc
in
(bad)
movs
sbb
dec
sub
xlat
shl
xor
and
daa
cmp
out
out
jmp
pop
pop
movs
cmp
xchg
mov
retf
(bad)
cmp
jnp
add
arpl
jp
fidiv
pop
je
add
jbe
mov
jmp
xor
sbb
xor
xchg
mov
inc
pushf
hlt
and
jns
push
sbb
fdiv
cmps
push
(bad)
sub
pop
mov
jmp
int3
dec
pop
or
mov
loop
push
aad
cmp
and
loopne
sar
adc
pop
retf
(bad)
jns
test
add
mov
pop
pop
xor
sub
repnz
inc
xchg
loope
inc
and
ret
push
nop
pop
outs
push
xor
and
pop
xlat
jb
cmp
and
inc
nop
leave
dec
sbb
mov
jge
repnz
(bad)
xor
outs
cmp
loope
mov
adc
into
pop
mov
cmp
data16
sbb
test
enter
inc
aam
add
push
jmp
jl
mov
cmp
int3
call
les
add
in
cmps
cmp
push
fwait
imul
xor
cld
mov
call
pusha
dec
push
int3
and
mov
adc
les
stc
sbb
inc
adc
and
dec
adc
cmc
lea
pop
das
mov
or
and
repnz
pop
xor
or
test
pop
mov
cmp
sbb
jle
jmp
push
(bad)
push
sbb
enter
dec
and
inc
xor
mov
mov
mov
and
dec
ins
xor
mov
fcmovbe
gs
arpl
pop
test
push
leave
jo
push
mov
int
call
cmp
repz
mov
int
dec
loopne
or
mov
jae
cmps
stc
fdiv
push
cdq
mov
inc
mov
or
push
xor
push
pushf
nop
sbb
pop
pushf
out
cmp
out
mov
push
call
mov
or
or
rcl
xchg
icebp
sub
push
jns
mov
add
cmp
repz
cld
sub
xor
xor
fwait
or
jbe
jp
mov
cld
and
jle
nop
inc
mov
and
sbb
mov
inc
pop
inc
xor
jb
aad
sbb
lea
dec
in
pop
scas
cmp
pusha
or
out
inc
ret
pop
pop
mov
out
xchg
push
sub
test
push
or
daa
add
(bad)
sub
lock
rcr
arpl
jmp
repnz
lods
lods
xchg
(bad)
xor
push
ja
mov
push
aaa
mov
and
test
or
movs
scas
loopne
repz
int
mov
adc
mov
inc
xor
sub
and
je
jae
add
mov
pop
lahf
fnstenv
jns
rcr
pop
mov
mov
or
mov
jnp
sub
and
mov
dec
rcl
sbb
sub
mov
adc
lds
mov
cdq
add
shl
push
sbb
pusha
and
push
jbe
(bad)
js
pop
xchg
(bad)
sbb
mov
pop
ficomp
xchg
aaa
in
push
scas
nop
call
jg
jp
sub
pop
fstp
outs
or
das
inc
(bad)
sub
add
popf
mov
push
jg
xchg
clc
sub
mov
xchg
scas
inc
sbb
xchg
ret
mov
loope
clc
pop
sbb
push
pop
and
sub
mov
mov
pop
test
loop
in
div
into
push
push
fnstcw
pop
xlat
add
pop
or
dec
and
and
add
sbb
popa
out
push
add
pop
mov
push
movs
cmp
add
les
into
add
pusha
sahf
mov
jmp
(bad)
cdq
arpl
daa
scas
jnp
inc
fwait
or
fidiv
popf
sbb
pop
mov
adc
loop
cmp
xor
jno
xor
cs
mov
pop
mov
out
push
aam
dec
retf
push
ss
push
addr16
dec
out
mov
jae
sub
out
shl
repz
popf
push
pop
mov
cmps
xlat
ret
mov
ror
mov
xlat
xchg
dec
stos
rcr
retf
push
mov
shl
and
mov
mov
push
ss
pop
add
in
jge
cmps
jg
adc
inc
mov
cwde
fstp
xchg
ins
icebp
fcom
sub
adc
ret
xchg
sub
ja
jmp
cmp
sahf
adc
in
jb
aas
pusha
std
dec
ror
ret
je
hlt
push
and
ja
ds
fistp
stos
mov
popf
mov
cmp
sahf
adc
mov
pop
popa
lods
or
aas
push
cmp
add
dec
push
fwait
inc
adc
and
iret
sub
and
inc
or
push
mov
or
mov
dec
pop
rcl
fnstcw
in
xchg
js
loopne
cmps
out
xor
js
mov
jecxz
inc
test
sti
js
push
(bad)
neg
call
mov
mov
mov
or
cmp
retf
mov
jb
es
es
loope
cmps
(bad)
mov
jmp
add
and
xchg
pop
xchg
add
sub
out
ror
adc
std
mov
xchg
mov
adc
adc
sub
ficom
cmps
and
test
scas
push
mov
scas
not
scas
mov
dec
xlat
add
popa
inc
dec
repnz
cmps
loop
mov
lahf
lock
scas
femms
fwait
xchg
int3
sar
cmp
cdq
retf
dec
lds
sbb
aaa
and
fcmove
popa
jmp
imul
arpl
fstp
or
in
mov
and
int3
or
jb
fidivr
mov
push
aas
aam
je
test
ds
cmps
shl
add
sbb
dec
jo
ins
aaa
mov
adc
pop
mov
call
(bad)
sub
call
imul
pop
pop
xor
scas
add
inc
mov
mov
loop
pop
add
into
cli
out
push
xchg
jbe
sub
popa
sahf
xchg
mov
test
push
push
lahf
mov
movs
ficom
jg
aas
inc
cmc
xchg
adc
jae
jmp
(bad)
pop
mov
or
dec
es
int3
xor
inc
mov
lods
push
dec
leave
jecxz
es
int
lock
bound
outs
aas
inc
(bad)
mov
jecxz
sub
mov
mov
imul
cmc
addr16
sub
int
rcr
and
mov
jns
leave
iret
mov
idiv
mov
pusha
sub
and
jle
sbb
stos
movs
mov
adc
mov
sahf
adc
jge
sar
dec
or
stos
or
mov
retf
in
data16
sahf
and
mov
xchg
movs
lods
cwde
xor
pushf
inc
div
xchg
int
dec
pop
cwde
xor
ret
cld
pusha
cmp
int3
mov
jge
mov
pushf
mov
sbb
das
(bad)
aam
ret
pop
pop
jmp
push
out
jge
fild
xchg
rol
outs
push
iret
in
mov
sub
dec
jmp
ins
mov
fisub
fld
(bad)
jge
pop
ror
fcomp
enter
ficom
enter
jne
jmp
ds
pop
mov
push
das
jo
add
sbb
dec
sub
mov
leave
ret
loop
fild
jle
mov
sub
scas
scas
sbb
(bad)
cmps
es
pusha
sub
dec
ins
add
popa
pop
push
into
or
mov
loopne
mov
ins
rcl
mov
pop
xor
jbe
stc
sbb
fistp
inc
add
pusha
jne
adc
out
pop
xlat
or
in
xchg
mov
(bad)
and
mov
call
sub
jl
mov
pop
(bad)
mov
push
sti
sub
jb
add
arpl
sbb
outs
mov
into
cmp
dec
sbb
cmp
daa
mov
push
xor
repz
ja
mov
jge
loop
xor
adc
fcom
scas
daa
dec
cmps
and
mov
out
pop
popf
sub
mov
into
ficomp
jne
sub
scas
jp
retf
mov
shl
sub
jmp
mov
and
mov
jno
xor
jp
cdq
xchg
es
push
out
in
div
and
fnstcw
dec
rcl
iret
hlt
(bad)
sar
add
(bad)
into
dec
(bad)
repz
cmp
adc
int
mov
mov
push
lds
xor
pop
cmp
xor
and
xchg
sbb
adc
push
sti
push
or
or
into
or
mov
(bad)
lock
shr
mov
sub
lea
dec
out
xchg
jmp
cmc
shl
stc
mov
inc
jae
int
mov
ds
jne
mov
cmovle
add
xchg
mov
mov
(bad)
xor
mov
repnz
mov
test
cwde
xor
ss
lahf
or
outs
xor
dec
xor
xor
sub
pop
shl
push
sbb
(bad)
lock
mov
mov
adc
int
adc
adc
aaa
dec
pusha
and
sub
mov
ret
pop
int
sub
rcr
dec
or
out
lock
cmc
or
icebp
pop
fimul
enter
jno
pop
adc
push
jg
xchg
in
test
dec
stos
ja
push
(bad)
fisttp
dec
add
inc
cwde
popf
pushf
mov
mov
push
sub
jae
popa
inc
cli
andps
dec
outs
jmp
jbe
xor
push
or
mov
enter
sar
xor
sub
cmp
clc
jle
jmp
sbb
mov
add
pop
cmp
rcl
aam
push
je
push
and
div
jno
xchg
pushf
pop
(bad)
push
(bad)
das
cmp
mov
repnz
ss
xchg
jo
adc
push
retf
test
push
adc
daa
jle
adc
cld
push
(bad)
or
outs
clc
mov
add
mov
jg
fld
outs
aad
(bad)
dec
mov
mov
or
xor
repz
std
dec
cld
pop
xchg
pop
test
int
rcl
sbb
lds
jnp
sbb
mov
loop
xor
dec
jb
arpl
outs
add
test
sar
pop
hlt
mov
cmp
sub
fcos
sub
(bad)
mov
in
test
inc
sti
cmps
pop
xlat
pop
sbb
in
fdiv
add
mov
or
or
lahf
gs
in
mov
dec
or
sub
scas
xlat
dec
sbb
faddp
test
adc
xor
inc
mov
jmp
mov
push
lea
or
sub
and
mov
stos
mov
push
mov
sbb
jae
mov
sbb
loope
mov
into
out
nop
sbb
iret
sbb
xor
lock
or
jo
sbb
jae
dec
mov
mov
inc
jno
(bad)
mov
movs
cld
dec
sub
mov
in
push
mov
xchg
les
jmp
shl
cwde
dec
out
retf
popw
pop
inc
sbb
imul
jp
pop
int
hlt
ins
aaa
addr16
lods
sub
pop
jnp
dec
je
les
jle
imul
mov
xchg
cpuid
or
outs
mov
mov
pop
call
out
mov
(bad)
sub
sahf
enter
and
stc
pop
inc
pop
inc
mov
dec
mov
not
add
nop
(bad)
mov
push
dec
mov
add
or
dec
push
cmp
cmp
and
test
inc
sbb
push
fst
cli
or
dec
fisub
jmp
mov
es
les
inc
push
adc
loop
adc
sub
popa
mov
inc
repz
and
jecxz
mov
lea
les
inc
mov
mov
mov
test
xchg
lds
and
ret
out
jmp
dec
sti
movs
push
adc
inc
push
fist
lahf
(bad)
mov
mov
sbb
jl
jle
and
push
and
xor
call
adc
or
mov
test
mov
push
arpl
and
fs
out
cld
jp
lock
les
pop
fs
in
sbb
adc
mov
sub
test
(bad)
ficomp
and
outs
inc
cmp
ds
mov
mov
fdivr
sub
shl
add
sub
inc
mov
adc
mov
push
adc
out
popa
fnsave
lock
cmps
fistp
fs
jmp
sahf
fst
les
icebp
fstp
popa
fiadd
jbe
push
jae
jl
adc
or
pop
sub
shl
jo
lds
mov
mov
cmp
mov
sub
cmp
dec
push
daa
push
push
retf
xlat
in
rcl
ins
or
fistp
sahf
cmp
jnp
mov
jo
das
into
ret
dec
jle
(bad)
push
and
fsub
add
lahf
adc
outs
sub
adc
cli
mov
cmp
adc
and
lods
dec
cmp
imul
in
fistp
and
popf
ror
mov
mov
sbb
mov
push
pop
js
addr16
mov
jmp
mov
inc
inc
cmps
loope
add
pop
sti
push
sahf
push
push
daa
xchg
dec
jb
pop
jne
push
mov
dec
int3
loopne
adc
or
mov
xor
dec
sub
aad
xchg
dec
hlt
test
cli
and
aad
pop
pop
fcmovnu
pop
mov
out
out
mov
repnz
aas
rcl
in
inc
std
ret
dec
or
daa
push
push
sbb
js
mov
es
dec
test
pop
push
xchg
out
rol
inc
mov
je
dec
adc
or
call
sbb
stc
es
inc
js
jb
sbb
add
fwait
or
lds
outs
fist
add
and
push
fdivr
aam
add
xor
xchg
in
addr16
mov
jg
imul
jge
mov
sbb
clc
retf
xchg
push
pop
aad
out
scas
in
cmp
mov
je
mov
mov
daa
push
push
or
and
lock
wbinvd
or
icebp
sub
fisttp
xchg
xor
sahf
and
sbb
fld
cmc
ror
scas
pop
or
rcr
lock
inc
cmp
pop
push
mov
push
ins
mov
js
hlt
mov
cmp
cwde
int
jno
cmp
and
sub
ficomp
push
push
retf
addr16
mul
stc
int
jge
add
mov
cmps
fdivr
push
sbb
cs
outs
ins
les
and
or
push
stc
sub
loope
mov
rcr
push
fwait
sub
scas
mov
or
mov
out
repnz
and
shl
and
mov
add
jae
xor
dec
sub
xchg
std
adc
popf
dec
sbb
aas
repnz
stos
mul
pop
cmps
dec
retf
out
test
xchg
and
push
(bad)
mov
ret
mov
or
push
fsubr
imul
adc
lock
or
xor
shl
into
int
call
push
push
enter
lds
frstor
inc
xor
inc
ja
stc
xor
add
pushf
out
mov
and
add
inc
mov
xor
adc
or
push
and
push
lods
imul
sahf
movs
cmp
dec
jno
cs
or
hlt
mov
pop
jae
ret
outs
xlat
cld
inc
into
ss
mov
jo
in
or
(bad)
push
iret
loope
mov
dec
xchg
lea
cmps
jge
std
mov
out
imul
cmp
jl
loopne
xor
sub
pop
cmp
cmp
into
ret
xchg
loope
xchg
cmp
add
cmc
add
xor
fs
cmp
fiadd
jle
mov
or
pop
xchg
mov
sbb
leave
in
mov
adc
(bad)
loop
sub
pop
push
or
xbegin
inc
inc
push
shl
mov
hlt
and
jl
shr
jae
ds
xchg
ins
mov
pop
pop
mov
dec
jo
sbb
mov
(bad)
jae
cwde
call
lods
out
cmp
add
push
adc
add
js
xor
ret
fisubr
out
loop
shl
and
mov
xchg
scas
xchg
imul
call
icebp
jl
data16
push
or
fst
loop
mov
loopne
add
sub
test
stos
dec
mov
sti
push
jns
(bad)
nop
cs
and
cdq
push
pop
out
jl
std
xchg
test
int
cmp
stos
out
retf
ret
dec
in
pop
mov
sub
inc
scas
gs
cmp
ss
clc
pop
cvttps2pi
sub
cmps
add
or
in
rcl
dec
pop
dec
sbb
call
mov
sub
xlat
popf
sbb
pop
xchg
sti
sub
rcr
or
sti
fwait
rcr
test
rol
xor
retf
lods
jl
mov
lods
retf
cmc
jecxz
xchg
(bad)
clc
leave
lahf
cmp
call
add
aas
pop
mov
cmps
ins
aad
ins
fild
sub
sbb
pop
or
xchg
or
mov
pop
pop
mov
add
inc
adc
inc
mov
cmp
pop
xchg
add
movs
xchg
cmp
cmps
mov
pop
stos
ficomp
iret
dec
movs
rcr
cmp
sub
cmps
mov
mov
jp
dec
jmp
cmp
mov
xchg
pop
xchg
(bad)
jmp
movs
xchg
and
pop
jp
imul
call
out
inc
inc
aam
or
sub
rol
sub
ret
ja
push
es
sbb
jmp
cld
mov
mov
sti
dec
sub
cmp
cmp
add
jmp
enter
pusha
out
in
fld
jo
mov
shl
scas
xor
scas
int
sub
xchg
sbb
xchg
cdq
ss
pop
fild
aam
mov
jnp
cmps
movs
add
lods
mov
into
push
outs
push
sbb
mov
mov
loope
dec
jl
pop
cmp
lock
hlt
sbb
jno
sub
pop
retf
js
shr
lods
es
dec
ret
daa
je
repz
mov
mov
repnz
adc
pushf
imul
out
adc
pushf
inc
scas
fisubr
lahf
jno
ret
or
mov
test
jbe
jns
inc
inc
jnp
les
call
(bad)
ja
add
mov
cmps
fidivr
or
daa
mov
mov
repz
cmp
jnp
ficomp
dec
push
or
out
jnp
jae
mov
push
popf
pop
xor
shl
mov
xchg
ja
dec
push
retf
mov
enter
inc
cld
js
mov
mov
imul
jge
push
lock
push
xchg
push
pusha
inc
fcomp
push
sbb
scas
push
cmp
inc
popf
les
loope
fisttp
lods
lds
call
pop
cmp
cmp
or
adc
nop
into
and
ss
jbe
adc
mov
jmp
sbb
add
enter
or
stos
ror
inc
xchg
and
push
movs
test
popa
gs
inc
xor
jge
mov
(bad)
aaa
addr16
adc
lods
jno
(bad)
fwait
xchg
xor
dec
mov
rcr
xchg
cmp
into
scas
stos
test
cmps
call
call
jp
pop
outs
mov
std
loope
inc
scas
mov
sub
fcmove
mov
xor
mov
jae
sbb
xchg
popf
in
je
int3
hlt
xchg
loope
sub
xchg
push
jnp
(bad)
push
outs
div
xor
dec
lock
mov
enter
jns
not
mov
mov
das
in
(bad)
push
hlt
ss
sbb
or
push
(bad)
cmp
ja
push
popf
loope
into
and
lods
js
jne
sbb
cmp
push
mov
lock
dec
mov
fsub
pop
dec
imul
rcl
ficomp
stc
std
xor
sbb
movs
adc
out
and
inc
add
dec
inc
or
or
test
mov
bswap
cmp
add
enter
sbb
sbb
inc
sub
and
jne
aad
popa
dec
arpl
(bad)
jmp
in
je
ss
xchg
lahf
xor
jg
cld
mov
repnz
cmp
(bad)
sbb
or
sar
imul
ret
or
mov
in
pop
test
into
xchg
and
test
dec
xchg
push
mov
adc
je
mov
cmp
add
push
jne
mov
out
xchg
xor
mov
or
push
arpl
imul
out
sub
addr16
or
cmps
or
xchg
out
jl
jg
call
test
xor
and
ss
pushf
retf
cmp
outs
xor
mov
dec
sub
jno
xchg
mov
xor
hlt
xchg
rol
lods
fisttp
pop
push
and
lahf
js
enter
cmp
sti
test
jnp
pop
mov
mov
dec
xchg
xor
jl
cmc
and
sbb
(bad)
(bad)
in
xor
fs
pushf
jb
daa
daa
in
xchg
cld
push
(bad)
pushf
xchg
and
mov
mov
les
add
mov
push
retf
and
add
mov
arpl
add
(bad)
jle
mov
or
add
sbb
bound
adc
fcom
(bad)
dec
test
xchg
pusha
cmp
or
cmp
xor
sub
xchg
sub
pop
retf
clc
sti
into
sbb
imul
pop
jb
repz
imul
bound
pop
fstp
inc
mov
jns
push
in
push
and
xchg
jge
pushf
ja
or
(bad)
add
push
add
mov
push
mov
mov
scas
inc
adc
dec
push
jp
sub
das
dec
fidiv
or
imul
mov
push
jnp
or
pop
ins
movs
jnp
lock
mov
out
adc
or
dec
mov
scas
das
jge
repz
inc
cmp
outs
pop
fstp
fst
jae
xlat
add
and
pop
cld
(bad)
sub
in
inc
rol
(bad)
fs
xchg
push
jle
jae
(bad)
je
jbe
jb
ror
je
fnstcw
ja
push
cmc
inc
ins
inc
outs
add
test
lods
aaa
aaa
iret
stc
cmp
cmp
push
jne
hlt
pushf
jne
out
out
sbb
cmc
xor
adc
adc
jge
aaa
retf
jo
cmps
add
out
dec
xor
(bad)
aas
lods
mov
jmp
cli
mov
stos
xor
movs
dec
movs
cmp
fdiv
dec
icebp
or
pushf
addr16
movs
jg
int
and
mov
sbb
mov
loopne
aas
pop
lds
hlt
dec
push
fild
lea
push
jmp
cmova
jge
jg
xor
sub
inc
pop
jmp
dec
xchg
xor
sub
sub
mov
(bad)
cdq
inc
and
(bad)
cmps
dec
cmp
mov
in
iret
aaa
test
dec
push
mov
loop
loopne
imul
add
in
popa
sub
in
cmp
(bad)
pushf
or
and
or
mov
fxam
and
pop
in
imul
in
bsr
dec
lods
in
nop
ins
jmp
ret
mov
inc
ret
add
mov
adc
lahf
daa
out
mov
gs
arpl
stc
frstor
pop
or
push
je
ror
push
cdq
cmp
push
mov
jmp
and
sub
cmp
adc
adc
aam
push
leave
test
cmp
lods
jecxz
retf
(bad)
and
cmp
rol
ffree
ins
mov
lock
cmc
sbb
sub
cwde
jb
mov
in
xchg
jg
adc
mov
inc
xor
fnsave
cmp
popf
mov
lods
ins
hlt
xor
mov
jmp
dec
lock
dec
outs
and
mov
mov
leave
loop
pop
push
pop
and
imul
fild
push
push
lea
push
xor
mov
and
aas
ins
jae
out
dec
pop
jnp
pusha
sbb
adc
add
ins
and
or
jnp
add
mov
jl
and
push
inc
or
nop
movs
sahf
cmp
popf
repz
pop
push
sub
jle
sub
stos
inc
retf
cmp
retf
aaa
inc
mov
inc
jmp
mov
and
ret
pop
xlat
jmp
adc
call
data16
lahf
(bad)
push
xor
paddd
data16
mov
pop
in
xchg
jl
cmps
outs
adc
add
mov
nop
mov
mov
inc
nop
test
xor
fld
add
dec
xlat
inc
ins
test
popa
add
stos
sub
retf
pop
sti
mov
idiv
push
sub
imul
sbb
repnz
and
cmp
push
and
arpl
in
fmul
fsub
mov
fcomi
jg
fisub
movaps
adc
scas
data16
push
repz
shl
in
jo
mov
pop
lock
cli
repnz
data16
(bad)
int3
mov
xchg
sbb
or
jmp
shl
cs
stos
sbb
pop
adc
(bad)
pop
rcr
adc
pop
mov
sub
fwait
jne
sub
jp
push
cmp
pop
cmc
pop
mov
jge
test
sbb
mov
push
popa
inc
loop
and
popf
xchg
pop
daa
out
push
sub
mov
retf
(bad)
fdiv
adc
out
pop
out
jge
test
sub
cwde
dec
cmp
ins
or
push
mov
stos
mov
neg
dec
mov
xchg
mov
call
test
pop
mov
cli
outs
push
push
jmp
dec
(bad)
mov
sti
stc
adc
outs
ja
test
fst
fucom
or
std
mov
jne
mov
jbe
in
test
sbb
add
ror
test
inc
jno
dec
inc
scas
int3
pusha
pop
in
lea
inc
shl
fs
add
mov
inc
adc
aad
shl
mov
out
leave
std
fucomip
mov
cmps
jge
enter
add
adc
sbb
or
pop
xchg
mov
pop
in
inc
(bad)
cmp
add
xchg
push
jbe
ja
push
push
cmc
sub
xor
jns
div
sti
push
popa
jl
xor
sbb
dec
mov
mov
aaa
push
(bad)
xchg
addr16
in
pop
fsub
push
sbb
pop
sub
popf
loop
shl
call
cmp
cmps
cld
ds
std
jmp
bound
(bad)
enter
xchg
je
pop
movs
xchg
out
retf
adc
icebp
dec
xchg
adc
adc
leave
rol
in
and
cli
fwait
jmp
rcl
call
sub
pop
sbb
iret
add
adc
adc
sbb
dec
ret
add
sbb
sar
xor
(bad)
sbb
push
(bad)
(bad)
sti
jae
sub
rcr
pop
ins
fisub
and
mov
xor
fcomp
inc
rcr
push
xchg
mov
cmp
cmp
or
inc
xchg
sbb
hlt
xlat
loop
ja
ds
out
pop
sahf
aas
jmp
in
repz
xchg
movs
dec
retf
sbb
xchg
movs
sub
push
inc
pop
pop
cli
add
fwait
rol
out
outs
dec
test
rcl
dec
jae
(bad)
jo
jbe
jno
pop
mov
mov
fisubr
fcom
push
or
fcomp
aad
inc
call
fcomp
int
push
stos
cmp
xchg
sbb
shr
int
sub
inc
aad
add
jnp
xor
push
sub
mov
in
cdq
xchg
mov
int3
jmp
mov
mov
cld
xor
popa
test
das
jno
cmps
sti
test
inc
aad
xor
cmp
mov
pop
push
add
cld
repz
dec
jae
rol
sub
je
fstp
jl
or
mov
lds
add
or
test
inc
jae
ja
inc
cmp
test
scas
mov
mov
(bad)
xchg
into
jge
xchg
or
pop
shl
pop
mov
pop
imul
xor
jne
ret
and
inc
sub
jecxz
ficom
add
int
mov
stc
movs
ins
jo
xchg
jmp
out
nop
cdq
adc
bound
cdq
icebp
stc
retf
mov
ret
imul
cmps
xchg
minps
mov
jge
add
(bad)
mov
pop
mov
jle
xchg
popf
push
or
out
mov
sub
xchg
shl
xchg
mov
mov
shl
mov
hlt
clc
push
jmp
retf
or
push
mov
pop
sbb
int
ins
cmp
mov
mov
cs
or
clc
shr
loop
jnp
test
mov
mov
adc
retf
cmp
mov
pop
inc
hlt
rcl
add
adc
xor
mov
jmp
push
addr16
aaa
jno
sbb
and
xor
mov
nop
jmp
fs
sbb
or
cmp
xchg
sar
dec
(bad)
scas
adc
scas
inc
shl
xchg
jmp
xor
into
mov
add
sub
test
in
loopne
test
mov
stos
pop
xor
mov
das
loope
adc
add
lods
mov
in
dec
xchg
push
es
repz
neg
stos
aaa
sahf
mov
cmp
push
inc
and
or
(bad)
jp
inc
ret
mov
sbb
push
ins
scas
test
mov
adc
fsub
fld
inc
(bad)
pop
sbb
push
js
dec
xchg
or
sbb
mov
pop
sbb
icebp
jne
and
hlt
dec
and
mov
dec
ds
sbb
mov
repz
jae
mov
mov
(bad)
xlat
adc
mov
mov
outs
bound
lahf
call
push
mov
mov
mov
int
inc
or
test
fcom
leave
pop
push
cmp
and
inc
nop
push
add
repz
mov
std
xor
lock
xchg
shr
popa
xchg
cmp
retf
xor
cwde
add
(bad)
mov
pop
lock
xchg
(bad)
inc
shl
int
adc
loope
xchg
xchg
cmps
(bad)
cwde
push
or
cmp
xchg
sub
inc
jg
aad
ss
neg
mov
rcr
push
stos
stc
xlat
inc
mov
or
ret
movs
add
movs
xchg
or
pop
xchg
call
cmps
aam
scas
add
mov
pop
inc
mov
std
xor
int3
mov
mov
in
mov
and
add
das
pop
bound
cmp
sbb
inc
cmp
mov
or
xchg
mov
enter
bound
pop
sub
jmp
xchg
fst
ret
add
mov
scas
jno
leave
rcl
inc
shr
push
ret
ss
mov
mov
jno
dec
arpl
and
fwait
(bad)
mov
jmp
xor
test
jbe
mov
sbb
dec
inc
call
mov
pop
int
xor
pop
mov
pop
pop
jns
iret
cdq
in
sbb
enter
xchg
ror
pushf
cmp
and
mov
inc
pop
and
mov
daa
in
xchg
repnz
outs
cdq
xchg
adc
popa
fisttp
adc
xchg
xchg
pop
pop
pop
mov
test
cmp
cli
je
mov
aad
xor
xlat
xchg
add
sahf
mov
(bad)
into
and
lods
stos
xchg
retf
call
xchg
imul
sbb
adc
(bad)
int
fs
cmp
jnp
fcomp
cmp
stos
push
jo
sti
mov
sub
jmp
add
push
ror
(bad)
mov
sbb
dec
cli
dec
fwait
or
in
push
jg
xlat
xlat
sbb
sbb
cli
sahf
dec
popf
dec
xchg
icebp
aam
push
inc
inc
push
clc
jge
push
cmc
shl
cmp
jge
mov
ret
and
lock
pop
fistp
shr
lods
push
sub
mov
pop
sub
retf
std
pushf
xchg
mov
das
add
or
stos
jecxz
(bad)
imul
sbb
and
mov
mov
sbb
mov
dec
(bad)
dec
push
adc
popa
adc
jle
and
dec
or
and
push
add
inc
in
xchg
dec
shl
cmc
(bad)
aam
mov
cmp
out
xchg
out
inc
adc
push
lods
ror
jb
xchg
xchg
clc
mov
and
mov
jne
mov
imul
cmc
pop
mov
int3
fisttp
jmp
cmp
mov
sub
ror
mov
adc
mov
mov
test
adc
xchg
in
loop
cmp
call
fucomip
lock
out
lds
jnp
mov
jno
mov
xchg
push
cmp
dec
shl
call
sub
mov
adc
in
jno
jle
ror
push
pop
jg
in
or
xchg
mov
push
mov
stos
push
sbb
xor
xchg
fmul
mov
and
daa
cmp
xchg
addr16
mov
test
jmp
jmp
ja
int
jl
sub
or
(bad)
cld
xchg
popf
jno
rcr
les
push
rcl
int3
and
push
cmps
sub
hlt
fbld
pop
xor
mov
fistp
jne
aam
cmps
cmp
rol
lods
inc
jl
jno
es
call
(bad)
cwde
test
and
js
movs
cwde
jl
xor
push
cmp
xor
cs
lods
mov
or
inc
mov
sbb
mov
fdiv
adc
test
pop
lods
pushf
mov
mov
sub
pop
jo
pop
inc
fsqrt
xor
jge
mov
inc
pop
pop
xchg
xchg
mov
push
mov
test
nop
and
mov
daa
retf
lods
and
dec
mov
jae
xchg
mov
push
cmp
xor
and
add
push
out
jge
(bad)
dec
in
xor
or
int3
popa
ret
jg
(bad)
inc
mov
nop
and
repnz
push
jg
cdq
scas
in
ret
popw
mov
cld
inc
in
js
adc
fxch
bound
add
out
mov
ss
shl
or
sbb
xor
mov
xchg
or
jl
adc
mov
pop
jge
xor
jp
sub
sbb
(bad)
dec
push
out
ja
pop
dec
js
cwde
jnp
dec
xchg
das
fs
(bad)
lods
mov
daa
hlt
add
shr
shl
loop
fwait
mov
js
mov
cmp
faddp
call
out
and
loop
fisttp
mov
mov
ficom
in
stc
push
mov
lahf
test
xchg
or
push
in
lea
xor
das
mov
out
repnz
pop
dec
push
cmc
dec
push
dec
xchg
fisubr
push
mov
sub
imul
pop
retf
sbb
or
(bad)
pop
movs
cmp
pushw
popa
dec
mov
xor
int3
loop
out
xchg
xor
cmp
scas
sbb
cwde
mov
ss
dec
inc
jp
cmc
pop
mov
icebp
std
or
aaa
mov
xchg
mov
gs
or
js
scas
push
test
and
cmp
sub
retf
sub
aas
lds
mov
jmp
movs
inc
push
jne
xchg
popf
cmp
fsubrp
push
mov
retf
sub
pop
xor
cld
add
mov
cld
jns
je
jmp
push
in
outs
nop
dec
inc
jns
out
cmp
jbe
clc
and
inc
or
rcl
jnp
pushf
jmp
pop
rcl
mov
fdiv
inc
mov
fisub
aad
and
mov
sub
xchg
lods
pop
loope
sub
xor
cmp
retf
xchg
mov
pushf
jl
fadd
jg
jo
cmp
ret
iret
inc
daa
or
rep
dec
pop
dec
pop
ins
(bad)
iret
xchg
pusha
inc
pop
lock
out
xlat
push
nop
dec
aaa
inc
fs
mul
in
fcomp
dec
in
pop
adc
adc
xchg
mov
jae
ret
push
xchg
dec
or
inc
sbb
jmp
test
sar
test
and
movs
sub
jnp
adc
xor
add
int3
xchg
cmps
xor
mov
sbb
inc
xor
push
sub
addr16
lods
out
sub
xchg
mov
or
rcl
dec
imul
in
mov
mov
out
(bad)
adc
cmp
inc
or
mov
stos
not
hlt
ins
inc
sub
push
dec
or
push
lds
or
sbb
cmp
or
aam
mov
xchg
and
call
inc
test
fisttp
add
aaa
arpl
test
out
or
mov
mov
test
stc
add
push
movs
into
(bad)
fmul
fwait
push
inc
push
scas
test
mov
arpl
repz
fstp
dec
jne
movs
adc
dec
mov
fcom
mov
arpl
sbb
outs
push
mov
xlat
push
inc
mov
arpl
cld
jns
inc
out
or
mov
push
add
ret
bound
mov
enter
xchg
sub
adc
fstp
lds
jp
cmp
mov
jne
xlat
outs
sub
dec
sbb
inc
outs
(bad)
mov
jl
xchg
sete
xor
add
mov
xor
imul
jmp
lea
fsubr
(bad)
jp
out
icebp
cli
scas
jmp
ds
fmul
push
retf
pop
sbb
aas
xchg
xor
test
cld
mov
ret
xchg
cwde
jne
mov
inc
stos
(bad)
jae
lahf
jmp
das
repz
out
lahf
pop
xchg
and
mov
addr16
cmp
clc
and
xchg
xlat
mov
stc
sub
ror
icebp
sahf
add
sbb
imul
loopne
wrmsr
scas
imul
(bad)
fucomip
loopne
dec
(bad)
mov
std
mov
aaa
inc
add
fld
cmp
movs
pusha
add
pusha
(bad)
das
or
repz
(bad)
iret
xchg
lods
push
or
adc
jle
clc
and
jle
inc
dec
test
jns
push
clc
add
pusha
adc
mov
or
jmp
cmp
jns
add
jmp
imul
stos
popf
addr16
mov
xchg
cmp
jp
gs
cdq
inc
inc
jmp
xchg
leave
jge
fild
cmp
jmp
push
inc
mov
mov
xchg
fnstsw
mov
mov
(bad)
(bad)
jb
and
cwde
enter
cs
sahf
inc
daa
(bad)
cmp
rol
sbb
cmp
xchg
pop
jp
mov
push
ret
rcl
xor
loope
loope
std
jnp
inc
and
inc
mov
into
nop
dec
(bad)
mov
sub
push
xchg
lock
fnstenv
pop
xchg
inc
pop
sbb
mov
mov
hlt
jae
xor
mov
mov
outs
fs
xchg
pushf
mov
push
ss
xlat
or
push
push
push
and
es
mov
pop
test
xor
xor
jge
or
int3
sub
inc
mov
jmp
push
cdq
(bad)
mov
jl
add
mov
pusha
(bad)
test
in
fstp
xchg
in
xor
int3
jmp
push
and
xchg
and
mov
mov
fsub
or
scas
and
jo
les
arpl
(bad)
(bad)
mov
daa
mov
sub
(bad)
xchg
mov
into
xchg
push
int3
inc
es
xor
sub
and
xor
push
sbb
call
push
cmp
push
loopne
shr
out
add
xchg
add
adc
ins
mov
cwde
dec
jne
gs
jmp
ins
fsubr
mov
jmp
add
aam
pop
cmp
loope
outs
add
hlt
mov
scas
push
xor
inc
add
dec
and
mov
aad
xor
mov
and
mov
retf
xor
scas
aaa
xchg
jo
imul
mov
div
shr
dec
inc
(bad)
mov
pop
sub
cwde
adc
add
xor
and
push
(bad)
lahf
cmp
(bad)
dec
xchg
fsubr
sbb
and
ja
out
mov
jmp
and
out
sahf
push
adc
mov
in
sbb
fcmovu
js
std
cmp
push
pop
pop
imul
dec
repnz
pop
adc
nop
outs
ror
push
outs
loop
pop
fisub
and
xor
test
popa
pop
sbb
in
xchg
test
pop
sbb
fld
fnsave
dec
adc
pushf
int3
aaa
cmp
dec
in
sar
rcl
out
dec
movs
cmp
dec
sbb
cli
pop
pop
sbb
mov
and
ins
and
out
sub
mov
mov
ds
fild
xlat
ds
and
ins
xchg
sbb
push
cmp
xchg
push
test
in
or
push
sbb
jo
lods
hlt
js
dec
adc
bound
dec
mov
mov
lea
push
mov
add
xor
cs
in
mov
movs
jno
sahf
jmp
jns
(bad)
sbb
and
repnz
mov
fimul
xchg
test
js
retf
imul
cmp
in
jmp
inc
and
jg
adc
mov
pop
pushf
mov
adc
and
cmps
jmp
jp
and
fild
in
fldenv
xchg
data16
and
jecxz
scas
call
les
stos
daa
xchg
retf
stos
icebp
jg
call
std
push
jbe
dec
addr16
sbb
mov
ins
and
xor
out
mov
stos
pop
pop
cdq
adc
in
mov
lock
sub
xlat
ror
inc
lds
shl
int
or
sub
lods
xor
sbb
in
dec
cmp
mov
je
pop
stos
jmp
pop
outs
inc
sub
jmp
inc
mov
rcl
sbb
push
shr
in
sub
not
add
cmp
cli
xchg
or
mov
mov
jne
dec
push
arpl
mov
dec
mov
mov
(bad)
repnz
xchg
fnstenv
and
shr
mul
rcr
pop
pushf
push
loop
test
adc
mov
addr16
jnp
xor
xchg
fs
aam
mov
fs
mov
(bad)
add
mov
pop
pushf
retf
and
inc
cmp
cmp
pmuludq
or
sbb
pop
jo
add
cmp
ret
into
jp
dec
adc
sahf
jbe
push
cmps
xor
cmp
fst
and
jo
fisttp
out
repz
push
or
add
inc
inc
shr
mov
jb
dec
ds
mov
inc
(bad)
mov
cmp
retf
mov
sub
lahf
loope
fsub
shl
scas
mov
inc
adc
(bad)
xor
outs
jnp
ret
push
dec
push
jbe
mov
mov
xor
(bad)
jg
jne
sbb
push
mov
daa
fcmovbe
add
pop
jl
js
das
push
cmp
hlt
dec
fisttp
pop
cmp
jb
or
inc
pop
xor
stc
xchg
mov
stc
aad
inc
fs
mov
inc
and
jmp
repz
inc
sbb
mov
mov
sub
pop
mov
pop
sub
jno
mov
cs
adc
gs
pop
sbb
jmp
mov
xor
lds
ror
xchg
icebp
(bad)
sbb
cmp
pop
add
fs
inc
mov
stos
pop
add
inc
sbb
aam
adc
int
xchg
dec
dec
xor
adc
(bad)
test
fisubr
fmul
adc
push
aas
scas
std
dec
shl
in
mov
and
ret
xchg
mov
les
loopne
shld
movs
fimul
(bad)
(bad)
call
iret
add
add
and
icebp
retf
(bad)
daa
shl
aas
out
inc
(bad)
and
adc
fdivr
push
xor
push
std
scas
dec
or
call
mov
mov
jno
test
clc
inc
cdq
movs
xchg
nop
fdivr
and
jge
cld
ret
or
enter
stc
pop
xchg
daa
cmp
jo
retf
or
popa
jno
pusha
xor
mov
sbb
cmps
cmp
ins
and
mov
dec
mov
jecxz
xor
sub
or
adc
out
lds
ss
push
jne
int3
adc
(bad)
lea
push
push
icebp
lock
push
loopne
mov
xor
fmul
xor
in
pushf
add
inc
xchg
mov
add
jg
inc
xor
xor
fs
out
int
lods
in
sbb
pop
add
loop
xlat
movs
(bad)
sub
xor
xchg
fstp
xor
mov
pushf
sbb
mov
out
pop
imul
out
cwde
(bad)
aad
mov
or
imul
popf
pop
sar
cmps
push
sahf
ror
scas
leave
mov
dec
mov
sub
sbb
sub
push
sbb
imul
mov
jp
sbb
sub
mov
(bad)
ret
popf
jmp
cmps
sub
and
stc
pop
cli
xchg
jnp
sub
dec
test
retf
mov
mov
jno
dec
xchg
fst
push
add
stc
int
es
sbb
adc
dec
cwde
dec
mov
inc
inc
and
mov
nop
std
or
cmc
jmp
fs
in
fwait
int3
push
mov
jg
in
retf
cmp
push
pop
push
sar
shl
mov
call
ja
pop
ror
or
xchg
mov
or
test
das
std
push
and
and
fisub
test
outs
mov
fsubrp
mov
cmp
fsub
mov
popf
mov
xchg
jmp
rcr
jo
adc
inc
sbb
add
in
jbe
mov
sub
(bad)
std
out
mov
daa
add
repz
sbb
or
dec
sbb
sub
ss
repz
inc
xchg
cmp
cwde
in
sub
ret
outs
enter
push
jecxz
gs
mov
outs
and
or
lock
nop
xor
std
ret
mov
mov
addr16
sub
xor
nop
out
dec
mov
or
pmaxsw
sub
lahf
push
add
jb
push
adc
ins
inc
(bad)
les
bound
push
or
movs
mov
push
sti
scas
mov
jle
lds
enter
sti
shl
sbb
(bad)
les
mov
test
ret
lea
gs
or
std
fst
gs
fadd
sbb
or
jmp
adc
out
pop
or
mov
enter
inc
gs
fist
pushf
cmps
in
mov
and
cmp
push
jp
pop
or
and
je
mov
and
pop
mov
bound
or
aaa
xchg
je
pop
gs
mov
mov
or
(bad)
addr16
xchg
mov
nop
out
or
lahf
push
cli
pop
sub
xor
call
pop
cmp
cmp
sahf
es
jno
(bad)
shl
iret
and
rcr
fistp
dec
add
lea
lods
pop
sbb
adc
test
fstp
and
daa
jl
mov
mov
xlat
xor
or
icebp
les
mov
fidivr
push
push
das
xor
push
(bad)
sub
rcl
pop
shl
test
xor
sbb
sub
dec
outs
scas
xchg
(bad)
xchg
or
inc
(bad)
js
add
out
pop
out
or
loopne
pushf
out
push
add
mov
pop
es
inc
int
aad
jo
fs
popf
jp
adc
fist
dec
retf
lea
pop
sahf
mov
cmp
pushf
std
out
and
and
cmp
jb
je
jne
pushf
outs
or
jge
pop
pop
inc
or
(bad)
dec
icebp
movs
push
push
(bad)
cmps
jb
data16
arpl
and
cmp
ror
hlt
dec
js
out
mov
inc
sbb
mov
dec
pushf
jg
push
jbe
xchg
lea
mov
mov
sahf
jp
xchg
push
inc
outs
jns
and
fs
outs
xor
ds
adc
and
fwait
sbb
pop
mov
scas
pushf
iret
test
sbb
stos
jo
dec
xchg
push
es
mov
mov
imul
aas
pop
xchg
push
sbb
mov
sbb
mov
fdiv
shl
xor
fdivr
sub
icebp
gs
and
dec
fldcw
push
ss
test
pop
lods
outs
mov
add
jmp
xor
or
push
call
or
cld
push
add
loope
in
dec
push
adc
push
mov
cmp
lods
push
arpl
outs
jg
enter
loope
cmc
cmp
(bad)
in
in
sub
mov
mov
ficom
add
jmp
mov
jb
nop
push
outs
es
pop
mov
hlt
jno
adc
sub
mov
adc
in
out
ins
in
inc
add
nop
mov
xchg
and
inc
push
jne
(bad)
ror
enter
cld
clc
jnp
mov
dec
xchg
xchg
comiss
loope
pop
xor
xchg
sahf
shl
jbe
xor
mov
or
out
retf
sbb
mov
jle
iret
(bad)
or
sub
loop
scas
mov
cmc
(bad)
sti
mov
call
push
inc
movs
leave
mov
fild
cld
call
int
xchg
aaa
xor
mov
mov
sub
xchg
clc
aad
out
cdq
fmul
fsub
add
mov
pop
clc
push
scas
jl
pop
lds
int3
int
pop
fistp
jb
aad
or
aaa
adc
mov
pop
mov
call
jmp
jmp
pop
jecxz
int
loopne
fild
adc
add
mov
mov
jge
jl
sar
test
repz
inc
bound
pop
stos
jmp
jb
or
cmp
enter
mov
test
push
out
mov
fs
push
fldcw
jge
out
outs
and
call
jmp
lahf
stos
push
and
mov
(bad)
rol
xchg
xlat
movs
outs
sahf
xor
or
call
push
lea
inc
mov
and
sub
xchg
shl
mov
fdiv
scas
sub
test
pop
dec
lds
mov
jp
and
pop
fbstp
popa
xchg
xor
retf
mov
adc
cmps
imul
push
sbb
push
push
popf
or
int3
mov
mov
cmp
cwde
or
mov
mov
retf
xor
test
sbb
xchg
cmp
or
popa
push
push
push
leave
inc
movs
sar
push
mov
inc
test
dec
jbe
out
jg
pop
scas
leave
xor
xor
jo
daa
aas
jae
cmps
cwde
scas
ss
xor
rcl
dec
jns
loopne
into
xor
adc
push
mov
push
mov
fist
push
mov
adc
shl
cwde
sub
ss
fist
popa
mov
cmp
cli
aad
leave
gs
adc
jne
fmul
cmp
retf
or
mov
aad
xlat
lahf
test
inc
sbb
(bad)
or
or
lods
es
rcl
sbb
ret
push
add
xor
and
pushf
mov
out
clc
adc
jp
or
pop
in
mov
xchg
mov
ds
adc
push
xchg
imul
imul
pop
and
test
stos
addr16
in
retf
ins
sti
mov
in
cld
sub
inc
xor
push
mov
rol
sbb
fisub
mov
sub
inc
dec
dec
das
sbb
inc
fcom
jns
push
call
lahf
dec
xor
and
cmps
popa
sti
sbb
mov
and
fdiv
popf
push
mov
imul
cld
jo
call
xchg
shr
push
pop
mov
(bad)
mov
pop
jg
ss
imul
sbb
fadd
js
sub
cmp
xchg
xor
jmp
(bad)
and
fadd
jp
lods
add
fdiv
push
das
mov
cmp
int
retf
adc
pop
pop
jno
fistp
inc
sti
push
jnp
xor
aad
xor
add
test
xor
nop
jg
lds
add
adc
mov
imul
push
or
adc
pusha
sbb
dec
test
cwde
cmp
out
das
rcl
ror
fimul
std
fisubr
or
stc
add
lods
mov
jecxz
add
dec
fldenv
push
adc
test
jne
xor
sbb
push
adc
es
in
jmp
cmc
lds
push
(bad)
push
fst
es
scas
pop
adc
daa
cdq
inc
dec
inc
push
cdq
inc
mov
call
sahf
aaa
jns
push
and
sbb
ja
aas
enter
inc
pop
wrmsr
in
pop
push
loope
adc
out
push
popa
inc
call
pminub
aad
mov
xchg
loopne
retf
pop
add
mov
ficomp
xor
sti
in
in
outs
push
stos
addr16
aad
js
idiv
dec
out
neg
lods
repnz
xchg
cmc
inc
cmp
cmp
pusha
xchg
or
push
inc
add
aad
adc
and
loope
stos
stos
rcr
fmul
mov
sub
push
pop
sbb
sub
mov
cmps
sbb
pop
fadd
dec
repz
push
pushf
cmp
rcl
aas
in
cmps
sub
in
loopne
xlat
cmps
das
jbe
and
cmc
ror
dec
jbe
rol
push
retf
mov
pop
arpl
idiv
in
or
cmps
test
sbb
lea
daa
outs
into
(bad)
pop
ss
lods
retf
out
jo
jmp
mov
push
xor
pop
dec
mov
sub
sbb
push
cmp
into
inc
test
mov
cmp
enter
in
lods
mov
out
int
sbb
fcomip
or
daa
loopne
aam
mov
add
mov
push
jnp
shl
cmp
retf
iret
out
aam
sub
iret
push
push
mov
out
pop
add
or
test
add
test
(bad)
fld
cmps
pop
jg
cwde
cmp
invd
lods
xchg
sbb
mov
push
dec
int3
pop
into
pop
jmp
aas
fstp
xchg
in
dec
lds
jp
fld
xchg
jg
(bad)
loop
mov
dec
xchg
inc
fld
jno
jg
fs
push
add
xor
(bad)
dec
jnp
enter
add
adc
mov
and
std
ficom
retf
pop
add
push
and
shl
fwait
xchg
inc
pop
push
push
test
cmp
stos
sub
into
push
xchg
stos
js
add
or
pop
sbb
(bad)
sub
sbb
ja
inc
xchg
out
ret
fwait
mov
mov
mov
std
xor
jns
or
imul
arpl
retf
xchg
imul
inc
addr16
cmp
sbb
les
pop
dec
jp
adc
pop
jg
mov
test
xchg
or
jmp
cmp
xor
mov
retf
fsubr
pushf
inc
pop
enter
xor
stos
mov
(bad)
fld
or
ins
scas
ret
out
jno
(bad)
repz
loopne
dec
ja
cmp
scas
dec
and
ss
xchg
ficom
push
loopne
adc
enter
pusha
mov
loop
add
sub
stc
or
or
xor
sub
scas
retf
pushf
adc
pop
lock
and
mov
mov
popf
add
movs
add
scas
stos
sub
lea
xchg
xor
pop
inc
add
test
cmc
push
sbb
push
scas
ret
in
les
xlat
mov
mov
cmp
(bad)
mov
test
popa
call
test
inc
loope
das
or
sbb
add
dec
test
push
ins
pop
ret
pusha
retf
jp
dec
pop
call
sub
dec
repz
mov
pop
(bad)
(bad)
xchg
inc
adc
(bad)
loopne
call
jno
add
mul
clc
(bad)
inc
cwde
jmp
dec
es
dec
(bad)
dec
xchg
add
sub
test
shl
aam
cmp
dec
pushf
pop
mov
movs
fadd
test
mov
scas
push
xchg
push
in
mov
test
hlt
inc
fcmove
dec
mov
fwait
adc
jae
inc
adc
sub
std
push
cld
xchg
jmp
fscale
dec
mov
fst
and
imul
xchg
jb
and
pop
sub
fmul
es
or
pop
aad
fidivr
nop
int
adc
loop
pop
int
popf
cld
cmp
and
rol
aam
mov
cs
into
clc
(bad)
sbb
int
call
xchg
scas
test
rcr
dec
mov
sbb
sub
loope
aaa
jo
sub
mov
sbb
fdivr
or
xchg
push
inc
push
xchg
lds
xchg
je
pop
and
push
add
dec
add
jp
outs
xor
jg
jl
sub
test
lods
xchg
pop
push
sub
cwde
stos
div
ror
jno
mov
jmp
adc
scas
mov
inc
les
xor
fwait
retf
call
lods
mov
inc
pop
push
sti
rol
stos
mov
cld
jne
cmps
pusha
aas
retf
adc
push
stos
and
lahf
sbb
icebp
mov
sub
ins
aad
loop
cmp
sbb
inc
retf
mul
xor
push
xchg
cmp
pop
push
xchg
and
out
push
je
cmp
into
adc
ds
mov
mov
fstp
ror
lea
retf
cmps
adc
fcomp
and
xchg
or
push
sub
or
cmp
outs
and
jecxz
xor
outs
or
push
mov
icebp
sbb
or
pop
rol
pop
dec
mov
pop
mov
outs
cmp
or
jne
gs
sub
adc
push
icebp
jp
dec
adc
or
out
add
out
out
outs
mov
xor
std
call
ins
ret
nop
and
loope
add
(bad)
jbe
cmp
std
mov
hlt
je
cli
xor
cmps
ret
pop
xor
stos
mov
dec
jecxz
sbb
or
cmp
mov
cwde
push
(bad)
adc
and
pop
loopne
jl
xchg
mov
xchg
add
mov
mov
inc
cld
mov
cwde
pop
xor
dec
mov
ja
ret
push
fistp
adc
dec
add
and
loop
cli
push
mov
push
sub
dec
mov
xor
dec
mov
add
xchg
aam
ret
mov
not
xchg
xor
shl
push
idiv
aas
mov
cmp
data16
pop
shr
and
inc
mov
mov
or
or
mov
sub
adc
pop
inc
xchg
cld
sbb
push
pop
push
cmp
xchg
or
xor
cmps
jb
test
(bad)
into
mov
mov
jae
jno
dec
xchg
retf
sbb
sub
mov
sbb
(bad)
adc
ret
loopne
dec
push
jo
popf
test
sub
pop
ss
test
pop
inc
aaa
ds
les
mov
inc
push
in
ss
mov
add
inc
mov
sbb
pushf
aad
int3
(bad)
dec
test
rol
imul
cwde
mov
inc
push
pcmpeqb
or
pop
dec
xlat
sbb
and
adc
xor
cmovbe
add
sub
mov
or
mov
push
sahf
fistp
shl
mov
mov
test
cmp
loop
ret
mov
push
int3
cli
mov
imul
push
sbb
jno
sbb
scas
enter
lods
sub
adc
push
aas
leave
test
test
adc
jne
sbb
pop
fisubr
or
shl
mov
out
mov
movs
jle
das
cs
sbb
add
mov
dec
mov
rcl
jle
cwde
lea
jmp
in
imul
push
leave
push
push
je
mov
fsub
xchg
or
mov
xchg
mov
not
daa
stos
fucomip
ficomp
jmp
mov
aaa
fs
loop
inc
xchg
sbb
jp
fwait
scas
out
inc
bound
jg
test
in
and
cs
push
jb
add
retf
push
ret
int
push
xlat
mov
arpl
sub
sub
test
std
sbb
(bad)
fldenv
(bad)
dec
mov
scas
jo
jne
jmp
repnz
sub
dec
je
sub
(bad)
sbb
mov
fmul
sti
ja
mov
push
clc
cdq
dec
mov
es
dec
jb
aam
xor
mov
push
push
fld
(bad)
enter
sar
cmps
mov
mov
outs
mov
push
stc
inc
shl
(bad)
mov
movs
dec
out
adc
sbb
ror
xchg
mov
inc
shr
jo
inc
mov
stos
mov
push
nop
adc
pop
addr16
xchg
push
gs
or
adc
pop
jp
push
mov
or
or
loope
test
sbb
inc
inc
lock
fs
call
sbb
pop
(bad)
test
(bad)
inc
pop
cmp
push
(bad)
push
lahf
adc
rol
mov
fs
test
dec
or
cmp
repz
in
shr
rcr
adc
ret
mov
mov
adc
call
mov
fisttp
push
lock
jo
sti
pop
inc
dec
ficomp
out
mov
aas
mov
dec
mov
sub
into
cmp
leave
and
push
adc
lods
jp
retf
hlt
stc
stos
dec
lds
dec
(bad)
into
into
jno
push
scas
adc
stos
das
inc
cmp
sub
adc
nop
ja
(bad)
push
scas
daa
lea
dec
push
hlt
mov
and
push
pusha
es
adc
lock
mov
(bad)
hlt
pop
sub
(bad)
pop
cs
pop
pop
or
jbe
xchg
pop
xchg
dec
ficom
imul
fs
aaa
mov
push
dec
sbb
sahf
mov
lahf
xor
mov
imul
dec
test
add
mov
stos
loop
push
dec
xor
jbe
xchg
xchg
sbb
aam
shl
into
mov
fidivr
scas
and
xchg
sbb
cmp
push
mov
pusha
cmc
jnp
inc
scas
dec
movs
inc
fdivr
or
bound
pop
test
cmps
lea
jle
stc
jo
mov
inc
adc
cmp
test
mov
sar
aas
ret
xchg
ss
push
and
outs
clc
test
daa
dec
push
fld
xchg
pop
popf
das
aas
rcl
js
add
lds
mov
and
and
xor
jo
cmps
lock
mov
cmp
fisubr
rcr
(bad)
jmp
bound
repz
adc
clc
add
push
in
sar
lock
jno
(bad)
jmp
or
outs
jecxz
nop
pop
loop
cld
(bad)
inc
int
sub
movs
cmp
mov
xchg
push
or
stos
ins
lods
shl
pop
cdq
cmp
aaa
fisub
xlat
push
cmp
std
inc
clc
pop
out
test
loop
(bad)
movs
pop
xchg
movs
xor
aaa
lock
add
jae
imul
mov
jmp
into
aad
enter
sti
imul
adc
xlat
les
push
leave
hlt
div
loope
cmp
loopne
add
scas
xchg
jecxz
and
or
sahf
cmp
(bad)
call
add
add
cmps
dec
jne
dec
sti
jmp
xchg
arpl
sar
repnz
sti
mov
pop
and
mov
cmp
cmp
jns
add
aas
pusha
add
outs
jbe
dec
mov
and
in
sub
icebp
jge
sub
shl
lds
xchg
fsub
sar
add
sub
movs
test
push
stc
dec
adc
push
out
and
(bad)
stos
ds
cdq
or
xchg
cmp
(bad)
inc
push
test
lea
shl
fwait
and
cmp
dec
aas
movs
stos
inc
ret
ja
xchg
mov
sahf
pushf
cmps
adc
addr16
sti
pop
xlat
sbb
js
pop
fwait
popa
in
clc
add
mov
cwde
xor
das
pop
int3
dec
lea
(bad)
cmp
repz
inc
lods
sbb
ror
daa
mov
or
cld
inc
js
push
jmp
pop
cmp
(bad)
sti
pop
out
xor
xor
dec
dec
xchg
xor
(bad)
adc
inc
dec
sbb
push
push
in
ins
mov
push
movs
dec
ss
lods
clc
fwait
sub
(bad)
cld
lahf
mov
in
inc
add
jg
in
xchg
mov
rcr
test
ret
sub
dec
jnp
sbb
aam
pop
cli
push
xlat
add
scas
add
ret
ror
inc
adc
push
mov
cmp
add
mov
jg
jns
aam
ret
sub
dec
lock
mov
cmp
arpl
js
dec
sub
sub
add
xchg
(bad)
sahf
mov
push
mov
mul
mov
or
adc
push
cwde
sbb
mov
in
xchg
repz
cwde
pop
(bad)
jmp
sbb
popa
fs
ins
scas
xor
retf
dec
dec
sahf
int3
test
ja
jne
jne
xchg
xchg
xor
jmp
popa
cmp
sbb
in
jmp
(bad)
or
pop
and
jg
mov
inc
push
repnz
mov
hlt
adc
in
pop
shl
mov
sub
inc
scas
dec
iret
jle
sbb
aaa
mov
sbb
out
into
jp
pop
add
dec
mov
sbb
push
movs
mov
xchg
sub
ja
and
jecxz
gs
xor
dec
and
dec
stos
shl
cmp
add
shr
std
ror
sub
adc
ficomp
repnz
dec
and
mov
fcomp
dec
sub
or
test
popa
dec
xchg
mov
lods
loope
pop
arpl
int3
sbb
xchg
(bad)
cli
cmp
into
je
cmps
xchg
je
jo
adc
push
mov
cmp
ret
mov
retf
xchg
cmp
mov
mov
cmp
pop
jmp
pop
clc
dec
pop
cmc
pop
data16
mov
aad
in
sub
dec
cdq
xchg
jl
xchg
dec
or
sub
retf
pop
cmp
jmp
push
ja
shr
test
dec
test
fwait
ret
mov
rol
(bad)
clc
add
setbe
and
lahf
in
add
loop
int
jp
jnp
fstp
cmp
xor
adc
cmp
fcomp
(bad)
inc
sahf
or
mov
aaa
cs
in
jmp
and
xchg
addr16
jb
ins
outs
ins
pop
ret
adc
adc
cmp
sbb
or
pushf
movups
aaa
sub
mov
loop
mov
or
pop
rcl
out
xchg
pop
loop
fbstp
sti
xchg
(bad)
in
movs
jnp
scas
ret
push
adc
adc
mov
sbb
mov
mov
mov
jns
lds
cli
iret
in
bound
mov
add
lds
movs
fistp
dec
sar
in
pusha
cli
dec
pop
idiv
pop
sbb
xchg
shl
je
pushf
shl
dec
cmc
push
mov
pop
mov
leave
movs
outs
ins
mov
nop
mov
test
js
inc
loop
outs
or
repnz
cmp
retf
and
or
xchg
dec
fwait
mov
ficomp
mov
sbb
and
push
add
pop
sbb
xor
jo
sbb
jg
xchg
mov
add
mov
rcl
xor
xor
mov
sti
hlt
ret
and
call
pop
sbb
dec
cmp
xchg
push
mov
jns
jns
pop
enter
inc
sar
and
jno
xchg
pop
pop
aad
daa
arpl
xor
and
jmp
popf
(bad)
or
adc
jns
fcmovne
pmullw
mov
imul
mov
sub
popa
add
retf
inc
jno
pop
(bad)
mov
lea
or
and
aas
out
(bad)
sti
ja
xchg
sub
ins
and
mov
imul
adc
xchg
shl
xchg
jbe
fsub
dec
pop
dec
je
mov
rcr
icebp
jb
sar
jns
pop
sub
repnz
movs
test
ins
and
mov
add
jp
clts
adc
inc
aas
fwait
inc
fwait
scas
out
(bad)
lahf
fidivr
inc
mov
adc
ror
pop
mul
and
xchg
jbe
mov
ja
mov
mov
mov
xchg
and
mov
loopne
sub
cdq
sbb
dec
aas
mov
push
push
lock
into
jb
xlat
ja
sbb
cmp
in
call
ds
hlt
push
test
cs
enter
adc
movs
fs
pop
jbe
lahf
dec
dec
mov
outs
xor
mov
add
jns
push
dec
bswap
repz
sub
or
xor
popa
mov
push
mov
les
xchg
das
sub
mov
jno
scas
rcr
cmps
dec
sar
xchg
aaa
int
jbe
lods
nop
leave
sub
fnsave
add
cmp
inc
cmp
xlat
mov
inc
sub
jb
hlt
fimul
addr16
add
adc
bound
or
lods
popf
push
cmp
aaa
adc
xchg
pop
pop
xor
add
xchg
je
iret
xlat
xchg
adc
out
adc
cmp
xchg
lahf
(bad)
cmp
mov
cwde
sbb
push
retf
test
push
add
or
xchg
push
gs
pop
lea
loope
lds
ficomp
ja
leave
iret
or
mov
imul
push
bound
add
daa
lods
dec
mov
xchg
inc
sbb
repz
dec
addr16
arpl
ret
pop
jae
and
push
aam
shl
retf
ror
pop
add
repnz
pop
es
push
cs
xor
add
imul
adc
xchg
cmc
mov
inc
pop
jp
mov
or
arpl
clc
pop
into
lods
dec
sbb
xor
addr16
and
and
push
jg
mov
xor
cmp
inc
or
js
inc
mov
mov
inc
scas
jae
push
sti
leave
pusha
or
mov
xor
sbb
sub
jns
cmp
push
xor
jp
sbb
pop
cld
cmp
dec
pusha
sbb
pop
retf
add
out
imul
data16
push
je
mov
je
retf
mov
mov
push
inc
jae
pop
test
add
aam
test
test
cwde
inc
jbe
xor
mov
xor
aad
mov
or
fadd
ret
mov
or
out
add
pop
iret
cdq
add
je
jle
retf
or
in
mov
in
mov
stc
ret
xchg
out
or
inc
out
dec
sub
cwde
and
mov
fs
out
in
inc
call
pushf
dec
daa
mov
data16
in
movs
sub
imul
mov
sbb
neg
mov
xchg
xor
int3
enter
out
add
clc
arpl
inc
stos
push
add
inc
cmps
and
pop
jno
and
or
mov
sub
mov
(bad)
inc
mov
pop
test
mov
clc
fild
aam
adc
mov
mov
inc
mov
cmc
lahf
call
cmp
pop
inc
rcl
out
popf
push
mov
das
scas
jmp
lahf
and
xor
retf
retf
dec
push
jno
sub
sub
xlat
dec
push
repz
or
ret
jge
dec
cmp
imul
dec
push
add
mov
into
icebp
jb
sbb
(bad)
gs
iret
sub
pop
clc
mov
aas
js
fidivr
stos
cmp
cdq
aas
mov
sbb
icebp
out
into
mov
jbe
sbb
mov
push
aas
sbb
xchg
mov
xor
or
mov
sub
inc
sub
pop
mov
push
into
pop
nop
out
dec
jecxz
pop
clc
fs
mov
xor
ins
(bad)
jo
sub
mov
jmp
fst
fs
push
or
and
daa
push
sti
je
shr
mov
jb
int3
jns
clc
data16
mov
rcl
and
xchg
xchg
cmc
ins
pop
fmul
xchg
dec
push
ins
inc
push
out
mov
aaa
xor
adc
xchg
inc
xor
and
je
jl
mov
sbb
out
mov
retf
(bad)
shl
cmp
ja
jae
sti
cmp
xchg
xchg
(bad)
aaa
dec
jle
sbb
push
jnp
aam
jns
sti
mov
add
adc
sbb
psubusw
shl
mov
xor
sbb
pop
push
imul
je
adc
in
shr
adc
enter
jns
push
sti
push
push
loope
retf
jmp
ds
pop
xchg
dec
mov
adc
mov
mov
enter
mov
(bad)
jns
or
or
pop
jae
sti
test
into
aad
sti
pusha
imul
int3
ss
in
aaa
cmp
push
cli
data16
sahf
neg
cwde
push
ret
(bad)
jle
(bad)
xchg
adc
lds
dec
sub
arpl
mov
cmp
sti
dec
cmc
inc
fldenv
not
mov
push
movs
lahf
into
jl
daa
cmp
sub
fld
pop
push
and
sub
inc
adc
mov
add
enter
sbb
mov
xchg
jg
xor
mov
cmp
and
add
out
stc
xor
xor
(bad)
mov
pusha
cmp
jns
or
rol
adc
xchg
ss
sbb
ret
(bad)
in
or
scas
mov
xor
in
dec
mov
mov
cmc
ins
xchg
ins
add
and
add
or
xor
inc
dec
cmp
dec
fist
loop
in
mov
(bad)
adc
adc
cmp
sbb
stos
fstp
and
or
mov
(bad)
fs
outs
popf
pop
jb
xchg
popa
jnp
test
stc
fld
dec
imul
ins
push
jb
jg
sbb
sbb
clc
imul
(bad)
jle
(bad)
cld
les
mov
or
pop
repz
fistp
outs
xchg
mov
into
jo
xor
in
mov
jecxz
sbb
jge
js
icebp
push
outs
jmp
adc
mov
fisub
popf
int
retf
xchg
cmp
push
cmps
std
imul
test
pop
adc
mov
test
iret
or
and
jbe
cmps
ret
cmps
enter
xchg
pop
cmp
in
cmp
in
jmp
jmp
jb
inc
dec
add
cmc
out
(bad)
iret
scas
ins
jecxz
ins
fiadd
retf
cmp
(bad)
aad
jle
pop
shr
inc
xor
out
mov
add
sbb
dec
and
jbe
sbb
mov
clc
sub
push
adc
aad
adc
test
mov
ja
aaa
gs
and
add
or
and
xor
and
xchg
adc
(bad)
in
ss
push
in
adc
sub
pop
xor
push
(bad)
pop
imul
cmc
out
dec
popf
mov
pop
shl
imul
inc
dec
ins
in
adc
push
jp
call
pop
clc
pop
dec
adc
mov
mov
call
or
jo
xor
push
mov
cmps
inc
xchg
pop
fwait
xchg
inc
inc
push
xchg
push
cmc
test
frstor
je
xor
push
sbb
pop
adc
pusha
call
jne
gs
or
ret
push
mov
adc
loop
push
push
in
mov
popa
call
dec
loope
jns
test
ret
inc
xchg
add
add
icebp
fldenv
(bad)
ss
mov
cmp
mov
in
push
(bad)
gs
std
add
adc
mov
je
lock
or
dec
cmps
(bad)
imul
fdivr
inc
xlat
pop
add
mov
sbb
cs
cmp
dec
xchg
bound
cwde
sahf
jno
and
inc
test
into
jecxz
in
push
imul
aad
scas
xor
inc
push
pmaxsw
out
cli
mov
out
mov
mov
shl
or
fwait
mov
mov
and
ins
jmp
mov
mov
sub
xor
sahf
xlat
nop
out
in
mov
gs
mov
push
xchg
inc
sub
and
call
jbe
xchg
and
popf
mov
push
scas
stos
add
push
pop
adc
pop
sub
xchg
and
test
mov
ret
xchg
mov
mov
dec
mov
test
aas
or
push
cmps
aaa
mov
and
xlat
popa
icebp
cmpxchg8b
mov
mov
mov
cmps
dec
(bad)
fcomp
mov
push
pop
jae
(bad)
jl
fs
push
mov
dec
int3
popf
inc
mov
jge
push
mov
sub
mov
dec
dec
fdiv
out
in
lahf
idiv
cmp
fwait
cld
cs
test
aad
sti
push
sub
or
adc
or
fbld
jo
scas
jmp
loopne
cmp
or
in
out
add
jl
sbb
shr
sbb
inc
mov
fucomip
into
inc
movs
mov
push
inc
lods
stc
sahf
mov
cmp
retf
mov
jg
std
jp
push
out
test
xlat
jge
xor
imul
or
std
jo
jns
mov
clc
push
add
mov
popf
adc
xor
jmp
jle
dec
std
xor
shl
mov
arpl
fst
adc
mov
retf
and
les
mov
das
inc
ret
in
and
pop
rcr
sub
cmp
dec
pop
sahf
ss
dec
push
and
or
push
dec
adc
push
shl
int
clc
mov
push
cmp
adc
xor
icebp
addr16
cmp
push
imul
mov
pop
mov
dec
test
scas
push
es
ins
sbb
xchg
mov
jmp
sti
out
test
add
fsubr
mov
sub
in
push
scas
push
out
out
sub
pushf
and
cdq
mov
mov
(bad)
imul
lods
xor
leave
sub
mov
xor
out
pop
ja
and
fst
idiv
hlt
cmp
call
cmc
imul
mov
or
ficom
pop
ins
rcr
mov
jp
repz
cmp
fdivr
rol
pushf
lahf
cmc
adc
(bad)
adc
arpl
lock
sbb
(bad)
push
sub
mov
mov
or
call
int
enter
fiadd
inc
je
aaa
xchg
cdq
sub
jnp
cdq
out
sbb
sbb
xlat
pop
stos
and
xchg
sahf
pushf
jne
movs
sbb
jmp
les
pusha
xor
leave
mov
xchg
mov
out
push
in
sub
dec
repz
cmp
imul
push
inc
inc
xchg
dec
int3
cmps
clc
cmp
fwait
mov
call
xchg
add
dec
and
gs
in
cmp
jb
mov
ret
mov
andps
loopne
in
dec
xor
fisubr
xor
jge
mov
mov
icebp
les
and
mov
popf
and
and
retf
gs
rcr
jo
bnd
stos
mov
jecxz
pusha
push
mov
retf
sar
adc
add
ret
pushf
out
pop
xor
cwde
les
dec
fild
lods
les
mov
sbb
sbb
and
jns
push
mov
or
cs
pop
mov
push
xchg
ja
dec
(bad)
hlt
dec
sti
ss
fisubr
enter
pop
cmp
pop
pop
sbb
xor
sbb
sbb
popa
mov
mov
cmc
aam
rcl
sbb
inc
xchg
jae
test
jp
and
rcl
gs
add
in
(bad)
inc
and
jns
fadd
aad
fidiv
imul
mov
pop
jne
mov
stos
enter
fdiv
es
mov
jge
fwait
daa
lods
call
aam
jae
mov
xor
stc
push
stos
stos
cmp
stc
and
cmps
popf
jns
cwde
call
aaa
sub
cmp
faddp
(bad)
shr
cmp
clc
(bad)
dec
jp
(bad)
shr
mov
dec
fcomp
stos
pushf
jge
mov
fwait
mov
outs
ror
sub
int
(bad)
push
xchg
cmp
sti
fcom
aad
jl
int3
jmp
jno
popa
cwde
ds
cs
aas
sbb
jo
fnstenv
sar
dec
mov
jnp
xor
mov
shl
or
test
(bad)
push
(bad)
push
mov
inc
inc
push
and
clc
xchg
stc
popf
call
sub
push
icebp
leave
mov
push
sub
mov
add
fcomp
push
(bad)
adc
inc
cmp
xor
add
fisttp
inc
inc
mov
xor
mov
xchg
or
jmp
sub
jmp
jecxz
(bad)
lahf
adc
hlt
xchg
test
ins
call
mov
mov
add
fs
sub
cdq
sub
dec
or
and
std
mov
outs
enter
inc
cli
(bad)
repnz
cdq
push
pop
or
mov
daa
push
push
arpl
stos
mov
jg
jecxz
mov
inc
test
cmp
dec
add
dec
mov
imul
mov
mov
jbe
(bad)
cmp
inc
cmps
pop
jmp
daa
sub
cmp
loop
hlt
cmps
xchg
push
repz
pop
fwait
test
aad
pop
sbb
fucomip
pop
repnz
cmp
cmp
xchg
sub
sbb
in
aas
sbb
mov
out
lods
sub
inc
daa
xor
dec
pop
add
sar
or
sahf
loopne
xlat
movlps
mov
test
js
mov
pop
mov
call
xchg
pop
or
into
mov
rcl
nop
jmp
inc
stos
xchg
js
push
or
sahf
shl
or
or
mov
(bad)
scas
cmp
jbe
rcl
cmp
test
push
or
repnz
inc
aaa
sub
je
sub
adc
js
gs
xor
(bad)
sbb
je
outs
lods
ja
and
adc
ds
xchg
and
shr
pop
int
sbb
fsub
movs
push
sub
pop
mov
sub
adc
inc
loop
or
(bad)
rol
pop
jmp
mov
stos
pusha
jno
loop
push
xor
mov
in
push
mov
in
fsubr
sbb
mov
fistp
xchg
loopne
push
jae
mov
pop
push
pop
cmp
mov
and
imul
lock
push
push
enter
add
call
scas
pop
movs
jge
sar
ror
push
imul
jle
nop
ja
push
xchg
push
adc
xchg
mov
xchg
in
push
or
lahf
retf
inc
test
and
mov
cdq
repnz
sbb
mov
(bad)
outs
in
(bad)
mov
movs
test
retf
ficomp
or
xchg
or
call
ds
std
dec
lods
fmul
add
mov
pop
push
cwde
addr16
std
push
pushf
jnp
adc
ja
mov
pop
aaa
cmp
xchg
call
std
or
js
jmp
sbb
ss
sub
xchg
sub
shl
fisttp
sahf
daa
sbb
xchg
pusha
test
and
jecxz
push
fcomp
mov
dec
pusha
dec
and
push
dec
mov
mov
out
loopne
sbb
(bad)
shr
cmp
pushf
stc
ds
and
movs
repz
mov
jge
in
dec
clc
movs
bound
test
sti
push
pop
cmp
cld
out
xchg
pop
(bad)
lods
cmps
cmps
popa
sbb
sbb
loopne
out
and
scas
(bad)
imul
loope
adc
out
arpl
imul
pop
cmp
arpl
fst
loop
mov
ret
mov
ret
outs
sub
xlat
dec
mov
xor
cmc
or
out
shl
(bad)
iret
stos
push
pushw
jecxz
mov
int3
stc
add
jge
daa
in
repnz
lahf
pop
push
sub
icebp
(bad)
rol
lds
(bad)
cmp
cmp
popf
mov
test
(bad)
outs
push
out
sub
or
jp
or
es
pop
xchg
iret
fistp
sahf
xchg
stc
mov
rcr
enter
ss
cmp
xor
jnp
mov
or
cs
sub
push
or
lea
ror
outs
in
test
xor
xchg
mov
xor
or
ret
jge
ror
adc
and
cmp
lahf
jmp
fcmovu
cmp
cmp
outs
mov
pop
das
scas
jle
mov
pop
in
jae
mov
outs
dec
loopne
aas
xchg
jp
push
scas
aad
loop
inc
jmp
mov
mov
push
ret
add
adc
sbb
iret
jns
dec
fidivr
add
pushf
sar
in
push
adc
ror
(bad)
mov
push
wbinvd
xchg
stos
out
sbb
jb
or
das
js
in
out
fisttp
add
arpl
test
ror
lods
sub
mov
nop
(bad)
sahf
sahf
push
lods
shl
add
rol
aad
bound
pop
repnz
pop
sub
divss
push
mov
iret
in
push
ds
int
mov
leave
in
iret
inc
cmps
mov
push
repnz
sub
sub
sbb
mov
jbe
mov
ds
retf
and
mov
pop
cdq
mov
movs
push
(bad)
inc
sti
adc
add
dec
ficom
mov
add
adc
scas
int3
push
cmp
ins
jp
inc
cwde
inc
adc
div
cmc
adc
push
xor
xchg
mov
inc
mov
ret
sbb
lods
movs
and
daa
enter
loopne
push
imul
arpl
push
psubq
mov
push
xchg
inc
mov
rcl
xchg
mov
adc
mov
test
xchg
inc
(bad)
repz
ret
outs
inc
xor
mov
jmp
fldcw
add
outs
(bad)
bound
jae
or
push
mov
xchg
add
fcomp
xor
mov
mov
push
sub
jb
aam
fdivrp
(bad)
mov
(bad)
in
jno
inc
ins
out
frstor
mov
jmp
shr
adc
movups
mov
mov
inc
sub
gs
icebp
fmul
mov
mov
cmp
pop
out
retf
lds
push
jp
ins
mov
inc
xchg
fwait
iret
mov
lock
cmp
cmp
and
and
mov
fisubr
lods
mov
mov
imul
shr
jne
adc
cmp
and
call
std
jne
jnp
xor
aas
sbb
jmp
and
rcr
in
pusha
(bad)
outs
jp
icebp
ins
in
rcl
mov
mov
dec
aad
and
mov
nop
push
lock
mov
pop
aad
jp
ret
pop
jae
xlat
jl
push
jmp
xchg
jbe
sbb
(bad)
jae
inc
xchg
test
loop
fisttp
push
jb
jecxz
inc
dec
mov
mov
jne
leave
out
xor
outs
(bad)
sub
add
lods
outs
fdiv
sbb
mov
cld
sbb
fdiv
inc
popf
fdivp
cmp
test
cmp
xchg
stc
sub
push
retf
mov
ds
inc
jno
call
jb
pop
dec
scas
cdq
pusha
mov
call
lods
jno
ret
outs
pop
lods
mov
fnstenv
inc
pusha
dec
mov
push
add
or
jae
inc
cli
cmp
addr16
cld
pop
cmps
stc
(bad)
sar
lea
jge
stos
cmps
bound
ins
rol
push
cli
pop
push
retf
dec
je
mov
mov
jl
addr16
sub
cs
stos
cmp
imul
dec
jno
cmp
push
ret
scas
cmp
arpl
and
das
rcr
mov
mov
fbld
jns
fist
xor
sub
je
cwde
jl
mov
nop
and
xchg
outs
xchg
mov
lahf
pop
sub
rcr
push
jae
aad
ins
pop
inc
fs
sub
adc
rcr
mov
mov
mov
ja
idiv
mov
mov
out
dec
sti
ja
add
repnz
jns
(bad)
cmps
or
cli
xchg
or
les
xchg
jb
int3
arpl
popa
mov
push
mov
mov
xor
cli
jmp
mov
dec
mov
call
xchg
push
or
xchg
jmp
pop
js
add
je
mov
or
xor
hlt
imul
pop
cmp
iret
shr
popf
pop
fisub
sub
fild
jecxz
scas
imul
push
je
retf
or
add
dec
mov
mov
dec
bound
jno
push
dec
adc
fsub
stos
daa
or
mov
aam
mov
xor
jecxz
or
fs
stos
add
jbe
aam
mov
or
call
push
cmc
dec
xor
fst
loope
pop
jg
arpl
jb
fsub
or
repz
movs
(bad)
hlt
cli
fadd
pop
push
(bad)
push
jmp
adc
jp
test
fsubr
pop
jmp
pop
and
aas
cli
je
inc
pop
cmp
xor
inc
pop
jb
xchg
ror
jle
retf
test
loope
rcpps
inc
lods
jl
push
es
push
or
add
rcl
mov
or
xchg
cmp
inc
cmps
dec
out
addr16
cdq
jae
dec
repz
mov
cwde
or
cdq
and
imul
loope
mov
test
mov
mov
add
lds
mov
and
shl
inc
or
xchg
fldln2
push
mov
mov
and
out
xor
nop
movs
in
imul
jge
fst
imul
cmp
in
xlat
shr
add
nop
into
sub
cmp
lea
gs
dec
jnp
mov
mov
in
(bad)
mov
jecxz
push
or
or
or
and
test
popa
inc
lea
call
aad
retf
adc
mov
repz
dec
sbb
shr
test
inc
push
mov
fidivr
xchg
ds
mov
mov
jmp
push
adc
sti
test
pop
xchg
jecxz
dec
vdivpd
retf
outs
mov
retf
fs
jg
retf
and
jae
(bad)
popf
sti
in
cmp
xchg
adc
adc
sar
lea
ret
cdq
neg
push
call
outs
sbb
xchg
sti
scas
sub
or
add
sub
pushf
push
adc
mov
ror
jnp
dec
daa
sbb
(bad)
out
faddp
pop
jp
inc
dec
or
mov
call
jo
bound
pushf
arpl
(bad)
aas
jb
out
push
enter
pop
mov
fnstcw
cmp
xchg
push
dec
adc
cwde
sbb
jnp
sub
outs
pop
xor
sbb
push
pushf
test
or
lods
mov
add
mov
push
daa
addr16
or
cmp
and
xchg
out
xor
sbb
sbb
scas
je
fdivr
(bad)
out
bound
push
pop
dec
pop
mov
dec
enter
dec
out
mov
fwait
sbb
daa
ret
jns
mov
xchg
clc
mov
loopne
pop
mov
pop
add
or
pop
ss
sbb
dec
cmp
xchg
mov
cld
fidivr
mov
in
or
imul
mov
xchg
mov
popa
(bad)
or
out
inc
sbb
faddp
les
lahf
mov
aaa
cmps
sub
leave
addr16
ret
push
jge
add
push
sbb
clc
mov
push
and
mov
push
jecxz
or
retf
mov
lods
and
in
stos
dec
add
push
sbb
mov
repz
push
or
mov
cmp
adc
icebp
int
enter
cdq
lea
push
sar
xor
xchg
iret
and
out
and
ins
and
in
in
leave
(bad)
mov
inc
fucomi
aaa
jbe
lea
jle
fnstenv
dec
mov
jno
jmp
fidivr
popa
jae
push
pop
fmulp
scas
jb
or
inc
xchg
imul
aam
sub
push
sbb
jno
aaa
mov
rol
push
push
xchg
bound
inc
icebp
pop
test
clc
mov
push
out
and
cmps
push
push
add
sbb
inc
scas
mov
pop
xor
ret
xor
sbb
out
fcom
repz
cld
dec
xchg
push
in
sbb
and
mov
inc
jmp
cmp
adc
sti
push
or
push
inc
jne
test
push
das
and
mov
arpl
mov
leave
dec
rcl
cmp
jge
adc
std
dec
fist
mov
adc
sbb
stos
sbb
push
dec
in
xor
cmc
ret
std
pushf
mov
call
jns
rol
test
sbb
cmp
stc
clc
test
mov
jg
or
int3
add
mov
or
or
ret
jno
ins
and
int3
sbb
mov
mov
ror
enter
jnp
inc
and
test
push
in
or
retf
in
fnstenv
shr
sar
and
fld
(bad)
mov
retf
inc
imul
retf
mov
mov
ja
in
xchg
push
mov
aam
dec
push
ret
les
adc
arpl
aaa
adc
sar
test
loop
push
lock
cmc
ds
lock
sbb
int
and
mov
jns
sbb
inc
pushf
xor
push
mov
pop
mov
pusha
not
stos
sub
stc
or
mov
out
or
retf
fisttp
inc
imul
cmp
movs
stc
mov
dec
sub
pop
pop
test
paddsb
rcl
xor
test
pop
mov
cdq
xor
xchg
adc
mov
rcl
push
rcl
test
lods
pop
(bad)
lahf
or
xchg
mov
pop
and
adc
loopne
lahf
jmp
mov
lock
sub
and
cdq
mov
sub
or
mov
jmp
sub
fwait
xor
mov
xchg
xchg
lods
xlat
cmps
xor
xchg
mov
scas
add
jmp
push
add
clc
sub
pop
cmp
sbb
xchg
(bad)
neg
or
and
aaa
jbe
push
pop
mov
lahf
mov
arpl
mov
push
jmp
mov
sbb
lods
mov
adc
and
sbb
or
mov
not
out
popa
sub
(bad)
pop
(bad)
xlat
rcl
adc
dec
sub
mov
iret
daa
push
mov
test
aaa
fs
shl
mov
arpl
jnp
inc
lahf
jns
jl
imul
dec
mov
pop
cmps
out
rcr
clc
or
int3
in
or
push
mov
clc
or
scas
mov
ror
sbb
pop
jmp
icebp
cmps
fidiv
cmps
sub
call
mov
dec
xchg
cmp
pop
(bad)
pop
lds
imul
in
les
mov
cdq
and
dec
pop
leave
addr16
jmp
xchg
jb
repnz
and
sbb
sti
push
in
mov
xor
push
mov
push
cmps
mov
or
(bad)
dec
and
shr
addr16
ret
xchg
out
ja
pop
es
sbb
out
xor
leave
and
fidivr
mov
xor
pop
jg
aaa
xchg
cmp
popa
cmp
or
or
add
cmp
shl
lea
pop
push
lock
add
clc
and
xchg
sbb
sub
add
popf
sub
pop
pop
fmul
sub
enter
sti
mov
adc
retf
test
je
adc
shl
xor
out
add
ret
int
je
jb
cmc
jge
add
(bad)
inc
(bad)
inc
mov
mul
iret
bound
mov
inc
or
fnstenv
pminub
retf
mov
out
adc
lods
call
add
or
push
repnz
imul
pop
dec
cwde
cs
and
fld
jmp
shl
sub
cmc
push
or
lds
or
adc
cmp
or
test
xor
inc
mov
fild
sub
popf
out
xchg
adc
jmp
fwait
aas
jbe
mov
push
je
gs
(bad)
jle
inc
arpl
lods
cld
aas
adc
je
dec
scas
pop
bound
mov
cmp
sub
or
or
mov
cmp
xor
movs
(bad)
xlat
add
iret
loop
inc
fsubr
ss
cmp
pop
jne
pop
pop
sbb
push
in
pop
cdq
push
xchg
fldcw
cwde
sub
scas
enter
inc
dec
jge
or
test
add
stc
push
dec
pusha
xor
pop
or
pop
dec
mov
popf
push
outs
jg
add
jns
jg
fnstsw
mov
mov
ret
push
or
push
sub
sbb
mov
pop
sbb
mov
inc
cmp
dec
jmp
arpl
mov
in
mov
mov
jp
pusha
mov
mov
xor
test
hlt
mov
ja
cmp
repz
xchg
ror
mov
fstp
(bad)
out
xor
inc
fisubr
pop
xor
ror
clc
in
fwait
sbb
adc
mov
adc
test
adc
icebp
dec
dec
xchg
aaa
retf
xchg
xor
fwait
dec
icebp
xchg
lods
les
push
mov
lods
push
and
pop
push
sbb
pushf
sbb
pop
jp
lods
stc
test
les
xchg
cmps
xchg
pop
pop
xor
cdq
or
dec
in
les
inc
popa
push
jne
xchg
dec
mov
call
cmps
imul
imul
jge
jnp
lea
pushw
ds
jb
sub
jge
stc
inc
lea
mov
mov
std
xlat
xchg
into
or
xor
adc
sahf
retf
add
scas
adc
nop
nop
test
and
mov
mov
jb
xor
imul
inc
sti
outs
ins
push
inc
ds
sbb
out
lods
std
mov
add
inc
add
push
and
div
popa
sbb
xchg
scas
loop
int3
and
rcl
add
inc
add
(bad)
loope
(bad)
shl
jae
out
in
fild
(bad)
pop
fs
sub
jl
push
xor
push
mov
sbb
idiv
mov
xor
mov
mov
aad
mov
cld
mov
js
cmp
shl
mov
or
mov
das
imul
in
inc
adc
iret
js
retf
rol
call
(bad)
dec
cmp
pop
and
in
sbb
or
cmp
sbb
inc
call
dec
sti
mov
mov
punpckhbw
push
mov
add
or
mov
ret
jnp
(bad)
mov
fld
sti
or
mov
jns
pushf
push
or
outs
mov
fdivr
dec
ins
clc
fadd
movs
push
pop
mov
lahf
test
push
push
(bad)
or
int3
pop
fninit
mov
mov
add
pop
mov
and
jmp
shl
jecxz
mov
out
push
mov
mov
sub
xchg
aam
out
or
mov
jle
pop
sub
jl
scas
pop
adc
push
cmp
adc
jmp
xchg
enter
adc
call
cmps
jg
mov
cmp
rol
pushf
or
scas
arpl
movs
retf
int
jb
push
xchg
xchg
add
push
hlt
out
cmp
add
call
xchg
and
js
sub
or
dec
inc
pop
rcr
mov
cld
and
pushf
sbb
int
xchg
cmp
(bad)
sub
jbe
push
hlt
js
mov
lahf
jmp
iret
sbb
js
mov
fisubr
mov
push
out
cmps
push
in
lea
inc
fmul
fiadd
inc
loope
aas
and
mov
dec
(bad)
out
scas
jne
xor
dec
xor
inc
add
adc
mov
pop
pop
sar
ja
inc
cli
jno
das
add
xor
rcl
inc
sbb
xchg
or
cdq
les
(bad)
ss
js
push
or
jmp
cmc
daa
hlt
mov
ret
mov
xor
mov
adc
mov
add
mov
push
jg
int
mov
mov
iret
cmc
jns
into
add
int3
xor
in
push
sbb
nop
mov
push
cli
bound
and
dec
adc
xchg
add
call
sub
xchg
add
inc
je
sbb
mov
pavgb
sub
jno
inc
or
jbe
daa
inc
sbb
mov
and
sub
mov
dec
iret
jnp
inc
inc
and
cmps
out
stos
mov
and
out
xchg
mov
xchg
stos
scas
loope
dec
loopne
ret
sub
pop
scas
repz
sub
inc
scas
cs
loope
cld
leave
sbb
into
es
add
retf
pop
sub
js
loope
shl
xchg
iret
scas
test
movs
push
das
jno
je
sar
(bad)
xor
jb
and
sub
inc
fsubrp
push
xor
or
daa
cld
mov
mov
add
sar
aam
hlt
xchg
pop
retf
jmp
push
sub
ins
lds
iret
push
(bad)
into
inc
jne
jnp
lods
xchg
mov
mov
es
(bad)
ss
mov
mov
dec
dec
mov
cmps
cmp
rol
xor
pop
cwde
add
and
cmp
fstp
hlt
inc
xor
inc
xchg
in
dec
in
xor
dec
ret
sub
and
je
mov
xor
les
mov
test
and
in
shl
mov
cmc
cmc
add
popf
pop
retf
adc
dec
mov
clc
in
out
jo
jb
out
fstp
adc
clc
(bad)
in
mov
xchg
push
shr
dec
or
mov
(bad)
sub
mov
ja
(bad)
jnp
pop
jmp
inc
add
ins
push
mov
mov
sbb
mov
sahf
push
xchg
mov
in
jo
gs
jne
mov
arpl
add
idiv
(bad)
xor
cmp
rol
xchg
mov
cli
dec
lods
xor
mov
pushf
shl
mov
add
out
push
icebp
shr
pop
clc
les
mov
inc
mov
adc
lea
sub
inc
pop
repz
or
xlat
lds
mov
push
xchg
fst
imul
push
in
mov
iret
inc
in
xchg
call
ret
mov
js
or
loopne
jle
xchg
xchg
ins
sbb
xchg
dec
add
mov
mov
fs
jecxz
xchg
adc
(bad)
xlat
mov
jecxz
and
mov
mov
pop
xchg
sbb
pop
arpl
test
stos
arpl
jns
cld
ds
(bad)
lahf
fwait
mov
mov
xchg
call
sbb
dec
push
data16
rcpps
xor
scas
pop
add
push
in
pop
cmps
fnstcw
jle
mov
mov
push
les
jp
pop
jae
in
dec
jno
dec
cmps
inc
adc
cs
mov
cmps
push
add
call
gs
sbb
icebp
fmul
outs
icebp
cmps
adc
movs
jecxz
xlat
in
pop
mov
jmp
idiv
jp
int3
daa
and
and
out
cvtpi2ps
ret
mov
lods
push
inc
push
(bad)
cmc
cwde
add
jbe
scas
fdivr
sahf
lock
cmc
inc
or
mov
mov
or
jne
xchg
pop
and
sbb
lahf
outs
sbb
mov
aas
pop
sbb
add
dec
or
fcomp
test
rcr
and
ret
jecxz
inc
inc
stc
sbb
inc
mov
push
push
addr16
into
movs
loope
ss
hlt
xchg
sbb
mov
neg
in
std
inc
pop
neg
xor
or
cdq
fwait
cmp
push
add
fsubr
lock
test
push
mov
arpl
test
retf
xor
ds
fmul
shl
xchg
enter
shl
xor
push
xchg
clc
stos
js
sahf
dec
xor
dec
inc
shl
outs
arpl
push
getsec
int
(bad)
cmp
fsin
or
pushf
fidiv
retf
sub
lea
and
out
lods
sub
call
call
into
out
cdq
retf
mov
iret
push
retf
es
loopne
loop
mov
or
(bad)
mov
es
and
mov
aas
pfrcpit1
dec
mov
jg
cs
aam
es
sahf
es
aaa
in
cmp
push
cmp
add
cmp
jns
fmulp
lock
test
aas
fldenv
test
mov
jmp
not
ins
sub
mov
add
les
lods
push
push
mov
and
pop
in
stc
xor
adc
mov
or
aas
out
pop
daa
add
add
pushf
aaa
movs
mov
mov
xchg
fucomi
call
xor
push
xchg
frstor
(bad)
div
or
(bad)
dec
test
test
das
adc
test
pop
push
cmp
jns
pop
sub
add
cli
sub
mov
fdivr
clc
jecxz
push
test
out
inc
cmc
lods
dec
xchg
cmp
call
xchg
mov
cwde
mov
repnz
cmc
sahf
mov
(bad)
sub
inc
sti
sahf
clc
daa
shl
add
pop
xor
adc
mov
iret
xor
loop
fcomp
pcmpgtb
test
and
in
add
xchg
aaa
pop
sbb
pop
in
ja
ret
test
and
fstp
dec
pop
dec
or
or
std
inc
jae
mov
into
mov
aas
fwait
retf
jb
pop
shl
ss
and
out
repnz
cmp
lock
test
lea
or
mov
sbb
dec
pop
retf
jl
cmps
mov
xor
fs
out
mov
dec
loop
mov
add
call
jmp
loope
inc
inc
repz
xchg
pop
mov
nop
sub
jl
clc
jecxz
cmp
sahf
mul
adc
or
inc
fnsave
inc
push
pop
and
hlt
in
xchg
fisubr
or
aaa
(bad)
ss
call
or
and
cmps
push
in
stos
into
jb
aam
and
test
add
add
les
(bad)
icebp
pop
sub
xor
jg
das
jbe
mov
dec
iret
inc
pop
xor
outs
adc
mov
loope
ss
add
not
sbb
fcomp
xor
(bad)
scas
dec
mov
rcl
dec
mov
mov
pop
les
sbb
loopne
inc
lahf
mov
add
jl
jb
out
(bad)
or
scas
in
inc
cli
jo
dec
inc
xor
push
mov
shr
mov
mul
jp
rcl
xor
aam
and
adc
jnp
fcomp
fist
or
imul
mov
dec
jne
scas
daa
adc
adc
popf
imul
xchg
or
mov
xchg
neg
in
xor
icebp
jne
xor
ret
ret
cmp
stc
out
outs
add
imul
cmp
mov
adc
mov
(bad)
mov
cmps
lds
mov
cs
push
out
mov
(bad)
cmp
shl
push
xor
dec
sub
pop
sahf
shl
ds
cmp
(bad)
fwait
(bad)
or
sub
lock
pop
mov
inc
mov
jecxz
adc
jmp
push
in
mov
fdiv
mov
mov
shl
loopne
cmp
in
adc
or
movs
jbe
dec
inc
cwde
pop
mov
rcr
pop
xor
push
out
xchg
dec
pop
add
ins
push
and
or
shl
es
mov
sub
call
sbb
push
in
icebp
out
js
ins
arpl
(bad)
outs
pop
repz
push
or
cmp
jbe
jbe
or
ins
imul
dec
xchg
pop
push
mov
cwde
sbb
sbb
std
(bad)
imul
xor
(bad)
dec
sbb
xchg
xchg
pusha
dec
rcl
mov
or
jno
sbb
pop
or
enter
sbb
xor
xor
adc
jnp
xor
xchg
stos
(bad)
(bad)
pop
int
test
pop
push
bound
(bad)
shr
inc
mov
aad
push
mov
xchg
out
aas
jns
dec
push
pop
popf
mov
inc
adc
(bad)
or
std
aaa
stos
xor
sub
repz
cmps
fxch
das
cmp
leave
jmp
dec
(bad)
in
das
adc
push
test
into
ret
push
loope
pop
fiadd
push
pop
jo
pop
mov
add
mov
jmp
in
cdq
movs
dec
mov
daa
inc
or
mov
jo
int
es
mov
shl
shl
jbe
rcr
push
sub
xor
ins
test
push
jbe
xor
lods
add
push
add
or
cwde
adc
mov
arpl
lea
fistp
loopne
in
pop
mov
sbb
shl
scas
cmp
fsub
add
fsubr
retf
stc
imul
popa
fist
pop
call
jle
ja
xor
aam
movs
adc
sbb
fstp
sub
and
lea
mov
movs
in
pop
lock
inc
xchg
mov
cmc
popf
and
fwait
shl
push
lock
inc
and
push
xor
nop
cmp
ins
in
adc
outs
xchg
push
cmc
mov
fisttp
or
rcl
mov
scas
xchg
push
jl
dec
lea
dec
pop
sbb
xor
jecxz
out
add
sbb
cmp
iret
daa
test
xchg
movs
cld
loop
jecxz
out
cmps
push
sub
shr
push
repz
(bad)
retf
rcr
icebp
or
leave
pop
cmp
xor
mov
call
dec
pop
xchg
div
jge
pop
sar
inc
dec
sti
rcl
or
addr16
mov
gs
push
in
jb
popf
mov
xchg
(bad)
jmp
add
cmp
(bad)
stc
aad
sub
es
nop
dec
lahf
(bad)
pop
push
sub
out
in
inc
je
inc
sti
xchg
lods
ss
fild
cdq
mov
cmp
pop
mov
test
dec
and
cli
mov
sub
loop
push
clc
sbb
cmp
add
add
ins
push
dec
cmp
add
sub
xchg
shl
test
clc
lods
cmp
scas
out
xchg
(bad)
or
inc
stos
mov
jns
inc
cmp
cmpxchg
pop
arpl
sbb
pop
daa
sar
enter
dec
xchg
test
and
fcmovne
enter
stc
mov
test
cli
aam
ja
adc
cdq
mov
outs
pop
inc
test
jmp
inc
add
sub
pusha
dec
mov
ss
in
mov
mov
inc
cmp
test
xor
sbb
jne
or
mov
jle
lahf
imul
ror
lahf
and
jae
scas
push
add
jne
iret
imul
popf
push
add
outs
in
(bad)
push
fs
push
and
daa
add
mov
mov
mov
out
inc
add
mov
nop
adc
mov
add
jnp
repz
rcl
xchg
std
arpl
ins
lods
movs
arpl
movs
cdq
push
adc
adc
mov
out
push
jmp
and
mov
rol
mov
mov
cmp
out
cdq
and
sbb
mov
push
jae
xchg
aam
fwait
inc
add
add
xchg
sbb
(bad)
stc
xchg
out
(bad)
rcl
dec
push
add
dec
(bad)
out
int
push
push
sub
movs
xchg
stos
(bad)
aas
or
push
dec
stos
cli
out
outs
push
rcl
sar
cmp
push
mov
in
jmp
imul
in
lahf
xchg
or
pop
test
mov
jb
(bad)
jecxz
movs
aas
inc
rol
or
xor
outs
or
jbe
scas
and
loopne
xor
jle
adc
or
mov
and
rcl
cdq
hlt
xchg
ret
xlat
mov
popf
jmp
jb
jae
lahf
sub
xor
mov
sbb
sbb
inc
rcl
jle
call
test
sbb
pop
test
sbb
icebp
jle
stos
xlat
inc
nop
mov
pop
(bad)
hlt
mov
adc
xchg
es
je
or
setg
push
pop
add
call
cmps
sub
mov
test
and
sub
bound
rcl
jo
ss
push
add
sub
shl
ss
add
push
mov
sahf
dec
pop
shr
jecxz
mov
mov
shr
add
mov
add
nop
mov
and
aas
daa
mov
cmp
shl
mov
scas
cmc
fnsave
pop
(bad)
adc
and
call
mov
cmp
mov
push
xchg
mov
adc
inc
jp
retf
jns
and
push
jecxz
push
movs
inc
pop
or
retf
rcr
mov
add
dec
inc
xchg
rcl
rcl
pop
movs
cdq
push
cmp
and
add
jge
inc
sbb
jb
sub
mov
dec
mov
je
cwde
ret
data16
rcl
cmp
adc
sbb
dec
or
ins
mov
lahf
xor
bound
push
ds
ins
push
mov
bound
sub
mov
mov
cmp
inc
xchg
mov
mov
pop
stos
inc
pop
or
call
sbb
mov
dec
xor
fnstsw
sbb
xor
std
inc
push
mov
std
repnz
adc
pop
push
pop
clc
add
xchg
(bad)
jecxz
jge
hlt
sbb
sbb
ds
adc
je
inc
leave
inc
fstp
enter
lods
fwait
inc
push
mov
pop
cmp
and
call
int3
cmp
ret
ins
xchg
in
out
jo
test
push
mov
add
imul
or
call
pushf
movs
add
(bad)
jb
dec
call
pusha
in
call
xor
mov
es
(bad)
mov
cmp
rol
inc
cmp
cmc
xchg
lea
into
adc
lds
push
push
push
aaa
inc
pop
jg
push
fcom
push
ins
xor
jbe
in
mov
mov
inc
pop
fistp
mov
scas
cmps
clc
enter
fistp
xlat
sbb
call
aad
sahf
jmp
mov
lahf
int3
movs
ret
sahf
imul
mov
ret
inc
(bad)
jge
xchg
shl
xchg
add
imul
jg
and
cmps
mov
adc
xor
(bad)
sub
mov
xor
mov
dec
pop
data16
jns
cli
test
stc
test
(bad)
call
push
outs
gs
or
mov
or
ds
inc
inc
xor
mov
push
out
push
adc
imul
sub
mov
mov
xor
adc
jg
sub
lahf
inc
adc
jp
inc
inc
pusha
outs
out
xchg
retf
xchg
dec
in
fldcw
pop
or
adc
mov
inc
mov
sub
fdiv
fidiv
(bad)
push
icebp
pop
(bad)
mov
dec
jmp
(bad)
ds
js
add
outs
mov
adc
scas
xor
push
pop
sub
mov
mov
je
jl
xchg
cmp
sbb
and
and
movs
dec
inc
jg
xchg
or
xor
test
rcl
cmp
pop
rcl
out
(bad)
add
dec
out
stos
int
and
xor
cmp
lods
xchg
xchg
and
(bad)
das
pop
call
jl
mov
fbstp
daa
jle
sahf
cmp
in
or
sbb
popa
lods
mov
lahf
loopne
cmp
and
out
imul
cs
js
add
fld
lods
imul
inc
ins
mov
arpl
clc
xchg
mov
rol
mov
jg
add
test
push
fst
out
cmp
out
adc
in
and
jae
mov
xor
add
repnz
push
cmp
sub
scas
pop
jg
int3
xor
(bad)
in
cwde
mov
and
pop
push
cmp
push
inc
adc
sub
scas
mov
nop
pop
xor
js
xor
aad
jp
mov
dec
sar
xlat
scas
push
mov
fdivr
movs
popf
aam
pop
fistp
pop
xchg
dec
and
adc
add
cli
inc
dec
lea
fs
inc
xchg
xor
mov
nop
sub
cmp
push
pop
jmp
inc
dec
sbb
test
ret
jbe
enter
fisttp
in
xchg
jnp
int3
sub
jno
or
xor
mov
mov
iret
int
cmp
dec
and
addr16
mov
adc
sub
clc
add
hlt
(bad)
jns
or
add
addr16
inc
jl
push
xor
pop
mov
fst
sbb
inc
sti
add
cdq
out
shl
(bad)
push
push
xor
mov
stc
cmp
or
push
jg
or
pusha
cwde
jmp
into
scas
lods
cld
loop
push
iret
cmps
fdivr
addr16
xor
daa
sbb
mov
add
jl
xchg
movs
retf
push
mov
pop
mov
int3
test
cmp
cdq
cld
pop
xor
jnp
inc
and
push
xor
popf
popf
xor
aam
das
cmp
scas
jae
aad
arpl
imul
rcl
in
and
xor
sbb
dec
add
pop
adc
mov
movs
add
je
jmp
push
xor
je
jae
xchg
std
ret
mov
stos
in
cmp
push
xlat
mov
imul
push
(bad)
add
xchg
or
pop
inc
fs
dec
sub
inc
pop
retf
push
xchg
or
inc
jg
adc
cdq
loopne
inc
dec
icebp
mov
pop
(bad)
out
jbe
mov
in
leave
sub
pop
stos
ja
mov
pop
fmul
dec
sbb
sbb
(bad)
jle
mov
gs
mov
jbe
scas
out
mov
push
stos
je
pop
inc
int3
xchg
test
jecxz
push
enter
aam
call
ret
ret
dec
add
dec
push
lock
aam
les
dec
fisubr
jno
fstp
or
(bad)
adc
xlat
dec
retf
fucomi
adc
ret
push
into
dec
mov
sub
in
retf
std
xchg
addr16
mov
inc
cmp
or
stc
dec
xor
stos
or
fcmovnbe
test
pushf
xchg
ret
add
or
dec
ins
push
fdivr
add
in
push
jo
ror
pop
fist
loope
ret
and
clc
and
mov
scas
cmp
inc
adc
mov
fst
jle
add
add
xor
pop
mov
outs
jae
js
xchg
stc
inc
or
(bad)
cvtpi2ps
mov
(bad)
cmp
jl
sub
mov
iret
inc
add
mov
jns
jnp
jl
outs
aam
nop
scas
and
aaa
dec
dec
jp
(bad)
je
sbb
icebp
cmovnp
ficom
cmps
pop
or
ins
push
inc
cdq
lods
adc
movs
jb
mov
out
or
dec
xchg
mov
int
test
mov
in
push
cdq
pcmpeqd
adc
stos
xor
xor
add
nop
xor
and
leave
daa
jbe
pop
rcl
ret
pop
call
pop
xchg
inc
sub
loopne
add
or
dec
lods
jne
rcr
push
pop
mov
xor
push
gs
push
retf
and
pusha
sbb
js
(bad)
push
stos
fwait
jbe
push
(bad)
imul
shr
mov
pop
xchg
nop
(bad)
add
sub
std
xchg
and
jne
push
clc
or
mov
inc
inc
adc
push
stos
ficomp
adc
lds
lea
sub
je
mov
or
pop
cli
call
xchg
mov
xor
cmp
aas
sub
out
mov
lods
outs
inc
cli
pop
xor
div
adc
or
cli
push
push
pop
outs
stc
sar
(bad)
jnp
dec
add
cwde
xor
jecxz
in
mov
adc
and
aam
vdivss
je
das
sbb
cmp
and
lods
push
imul
js
inc
xor
jne
xchg
adc
mov
dec
mov
mov
xor
mov
div
mov
test
fild
call
lea
popf
frstpm(287
push
sub
mov
jp
js
mov
inc
jae
inc
inc
loope
pop
cmp
fdivrp
mov
mov
push
push
test
movs
mov
ja
fcomp
adc
movs
push
vpaddsw
cdq
xchg
cdq
adc
or
jle
pop
pop
ja
mov
daa
in
in
pop
lahf
fcmovb
repz
mov
or
lea
push
xchg
outs
and
sub
cli
pop
sbb
jae
retf
(bad)
adc
dec
adc
mov
loopne
repnz
cmp
mov
mov
cmp
xchg
sbb
scas
push
jl
mov
(bad)
adc
mov
mov
fst
out
jnp
push
add
jns
fwait
adc
fadd
jg
(bad)
xor
mov
mov
pushf
aam
(bad)
mov
rol
push
nop
enter
adc
addr16
add
xchg
cmp
sbb
sbb
adc
mov
icebp
int
in
push
and
cmp
pop
stos
fwait
mov
inc
jbe
xchg
ins
push
dec
in
cmp
mov
stos
lea
push
adc
cmc
jl
xor
pushf
push
fisub
lea
mov
mov
repnz
sbb
jb
fcomp
mov
jp
inc
mov
loop
mov
sahf
sahf
fnstsw
xchg
jmp
jno
mov
push
push
test
jp
sbb
cmp
out
sub
mov
retf
mul
out
adc
je
test
add
sbb
add
mov
rcl
stos
aas
jo
pop
adc
xor
loop
jns
and
inc
sbb
jbe
shl
in
mov
pop
mov
dec
sub
push
adc
dec
test
mov
pop
cdq
popf
xlat
inc
xchg
sbb
jns
leave
sub
and
push
add
xchg
jge
jnp
fimul
xlat
inc
shl
or
mov
stc
mov
arpl
popf
push
sbb
and
in
xor
out
jne
into
sub
lds
lock
dec
repz
push
and
mov
push
dec
mov
and
sti
adc
push
popa
movs
imul
mov
inc
inc
xchg
xor
jne
cmp
(bad)
lea
and
jbe
pop
jle
in
arpl
and
jno
and
retf
scas
add
cld
dec
cmp
push
xor
jo
call
enter
jmp
ficomp
movs
retf
xor
mov
out
div
add
add
nop
pop
(bad)
mov
test
adc
xchg
jns
mov
jae
xor
mov
xor
adc
dec
fs
inc
adc
dec
sbb
cmp
push
lods
bound
pop
mov
and
mov
iret
imul
imul
push
inc
adc
neg
xchg
push
jp
pop
scas
iret
leave
cmp
and
dec
stos
adc
scas
fisubr
dec
adc
imul
sbb
ins
mov
xchg
call
(bad)
pop
js
inc
out
lock
jge
in
aam
mov
loopne
pop
add
mov
dec
and
sbb
(bad)
or
push
arpl
sbb
xchg
push
repz
gs
xor
rol
std
mov
gs
repz
and
cmp
out
fld
ftst
inc
dec
mov
xor
mov
cld
jno
(bad)
push
stos
dec
xor
in
ror
adc
push
cld
ins
push
mov
add
sahf
sub
dec
repz
cmp
inc
es
ins
scas
xchg
mov
push
(bad)
(bad)
jnp
adc
sub
je
ins
adc
scas
cld
loopne
aad
loopne
push
movs
mov
sub
int3
jbe
or
jbe
or
adc
or
dec
pop
mov
call
imul
sub
dec
fadd
jecxz
es
sub
sub
cmp
xchg
sbb
test
enter
pop
enter
mov
setns
sbb
ds
push
mov
sub
imul
pop
pop
ret
out
and
stos
rcr
xchg
bound
inc
shl
(bad)
ds
jl
sub
cmp
call
ss
cmps
cli
xor
dec
push
add
sbb
and
rep
mov
jmp
in
out
cmc
and
pop
dec
mov
adc
push
ret
mov
std
in
inc
cmp
stc
das
movs
mov
lods
pop
mov
mov
sysenter
adc
jbe
je
in
xchg
rol
mov
bound
xchg
xchg
sub
movs
daa
hlt
fimul
mov
cmp
ret
in
pop
scas
sti
jnp
(bad)
hlt
adc
xor
pop
in
cld
clc
inc
sti
pop
cmc
jl
clc
outs
nop
adc
loope
add
pop
mov
out
nop
pusha
sti
ret
cmp
push
adc
jge
push
add
cs
mov
cs
ret
pop
lds
cs
imul
in
mov
xchg
xchg
mov
xchg
jb
leave
jb
les
or
pop
sbb
mov
inc
add
in
dec
movs
imul
mov
jmp
xchg
int
jne
sbb
jne
or
scas
inc
sti
dec
fsub
imul
(bad)
mov
sahf
outs
sub
xchg
mov
dec
add
mov
fimul
jns
cwde
sub
and
out
dec
scas
cmp
sti
retf
mov
hlt
enter
(bad)
adc
nop
in
sub
arpl
dec
shl
inc
das
mov
sbb
pop
lahf
jmp
loopne
shr
(bad)
xlat
outs
mov
inc
or
data16
sar
fs
adc
loopne
add
mov
xchg
push
movs
cmp
out
js
out
iret
push
out
aam
mov
(bad)
test
stos
dec
popa
out
adc
mov
sbb
call
mov
fisttp
push
pop
dec
aam
sti
mov
adc
mov
xchg
int
dec
stc
cmp
jns
mov
mul
mov
ins
mul
mov
xor
jb
dec
xchg
int
xor
(bad)
loope
or
in
push
lea
push
pusha
stos
shr
or
and
in
out
nop
daa
fbstp
sbb
mov
xchg
mov
mov
push
test
je
aas
inc
add
cmp
xor
xor
cmp
lods
rcr
dec
push
and
in
bound
pop
dec
in
mov
ucomiss
adc
xchg
xchg
mov
dec
data16
sbb
imul
sub
or
or
push
or
mov
adc
ss
push
mov
push
dec
int
jb
dec
pusha
stos
dec
mov
xor
add
inc
push
arpl
or
arpl
mov
jle
fwait
out
and
mov
mov
sub
mov
xchg
inc
bnd
fild
outs
stos
mov
das
cs
mov
sbb
add
test
or
(bad)
js
mov
pop
cmps
jge
or
imul
hlt
fld
pop
xchg
scas
xchg
sahf
jmp
adc
cwde
lods
scas
daa
(bad)
dec
and
jo
or
sub
in
(bad)
jae
lods
leave
loope
cmc
(bad)
jp
inc
stc
js
push
mov
jp
and
in
sbb
mov
and
add
or
mov
cmps
scas
in
xor
(bad)
sub
leave
jmp
ret
xchg
(bad)
push
add
cmp
xchg
sbb
dec
or
scas
pop
mov
push
out
movs
call
xlat
nop
in
fs
lea
pop
(bad)
arpl
jae
pop
daa
mov
loopne
rcr
push
mov
outs
cmp
jbe
inc
in
mov
push
test
cwde
push
stos
sti
test
imul
push
scas
movs
push
inc
jb
retf
mov
inc
pop
and
pop
dec
mov
lahf
pop
or
scas
cli
lods
inc
shl
sbb
xor
push
pop
dec
or
dec
push
sub
(bad)
fld
cmp
je
int3
mov
(bad)
xor
dec
sbb
out
mov
xor
sbb
ret
pop
jle
xor
cmp
adc
imul
add
push
jl
iret
shr
retf
pop
stos
int
into
push
jnp
ss
jp
mov
call
and
mov
gs
aam
lds
call
arpl
clc
test
cld
mov
lods
leave
fisttp
mov
hlt
xchg
shl
sbb
jnp
stos
rcr
pop
sub
stc
in
mov
daa
mov
(bad)
jmp
xchg
cmp
fisubr
stos
and
out
push
ins
sbb
push
or
add
push
loope
bound
sub
sar
dec
outs
in
test
xor
sbb
pop
cli
push
mov
in
lods
xchg
test
jmp
lock
adc
out
imul
cmp
jecxz
(bad)
(bad)
fwait
ret
hlt
stc
in
pop
dec
(bad)
pop
push
(bad)
push
pop
ss
sbb
repz
pop
out
inc
jo
cmp
fidiv
adc
mov
stos
pop
ins
dec
push
or
sub
add
sub
add
jp
adc
inc
add
lock
jp
xor
es
in
and
jno
pop
hlt
popa
(bad)
popf
sbb
cli
inc
mov
dec
aaa
jo
add
xor
call
daa
daa
sub
mov
test
(bad)
dec
fadd
mov
ss
sub
setl
scas
or
rol
sbb
and
dec
dec
add
aam
test
mov
inc
fwait
mov
inc
jb
into
mov
iret
lods
(bad)
jecxz
jns
fistp
fsub
scas
xor
mov
mov
imul
fisubr
jo
jbe
fisub
xor
sbb
aad
gs
dec
inc
xor
pop
sbb
ins
lds
adc
mov
jp
and
dec
dec
xchg
test
push
and
call
loope
outs
fadd
(bad)
dec
inc
stos
out
aad
cmp
dec
mov
nop
cmp
jmp
adc
dec
test
push
add
aad
pusha
xchg
fdivrp
ret
int3
adc
ret
stc
mov
ror
sub
mov
jns
fs
xchg
sbb
inc
add
xor
lds
pop
or
add
inc
sahf
stc
add
adc
ins
mov
shl
xchg
loop
cmp
and
(bad)
pop
call
ss
pop
sbb
inc
push
cs
in
push
xor
hlt
lods
xchg
sbb
in
and
mov
mov
bound
jmp
xor
mov
push
cmp
jbe
fsubr
cs
or
pop
xchg
pxor
add
inc
into
sbb
push
(bad)
je
dec
jo
jle
sti
shr
cld
lods
inc
inc
jl
cmps
adc
xor
inc
pop
pop
add
push
cmp
(bad)
push
cdq
add
add
or
inc
cmp
in
xchg
jbe
xchg
adc
pusha
hlt
lods
ds
imul
sbb
in
pop
fs
sub
pop
sub
jp
je
dec
sbb
cld
sub
int
and
pushf
call
sti
loope
cdq
movs
ja
shl
and
jbe
cmp
jmp
sub
sub
sub
jmp
cmp
push
popa
jnp
jmp
jae
ja
aaa
les
pop
jbe
sbb
push
stos
cmp
and
sbb
cmp
dec
xchg
ss
or
jae
pop
sbb
jg
div
pop
movs
xor
cmp
outs
adc
push
jg
dec
xor
fucomip
lods
sub
cmps
add
cmp
sbb
push
or
cmps
sub
jns
and
arpl
call
in
jp
add
aas
popa
popa
loopne
xor
mov
xor
fisttp
loopne
adc
add
stc
xchg
mov
sbb
out
adc
inc
imul
and
js
pop
(bad)
cs
jbe
inc
jmp
push
add
(bad)
pop
pop
das
mov
cdq
push
pop
rol
loope
xor
pop
out
int
jmp
ss
and
fs
inc
out
xor
test
push
cmc
mov
push
xor
popa
jnp
sbb
call
xchg
movs
stos
cmp
retf
outs
dec
aas
popf
or
cld
and
mov
sub
or
sbb
xchg
aaa
sbb
add
inc
movs
in
push
movs
(bad)
xchg
sub
lahf
scas
jb
mov
inc
mov
dec
hlt
out
or
lds
dec
adc
adc
dec
pop
push
xchg
add
jecxz
cmp
outs
in
in
stos
push
dec
movs
mov
mov
in
ja
adc
pop
or
sbb
ds
xlat
dec
scas
jle
test
(bad)
cmp
cmp
scas
sub
inc
jle
mov
clc
jp
aad
outs
icebp
cld
pushf
fwait
jb
xlat
cmp
mov
jnp
out
mov
sub
cmp
add
sub
and
push
(bad)
loop
lahf
push
sbb
xchg
outs
mov
jp
jno
push
fcomp
aam
pop
cld
nop
pop
into
jmp
out
outs
cwde
retf
adc
test
jo
push
xchg
jae
inc
xor
or
jp
mov
(bad)
iret
adc
mov
dec
(bad)
cmp
push
ret
push
ins
jmp
repnz
in
cmp
mov
cmc
jmp
cmp
add
ins
pop
adc
adc
sub
cmc
fs
(bad)
dec
and
dec
mov
test
push
cmp
pusha
mov
xchg
into
ja
cmps
mov
test
test
dec
shr
sar
ror
or
mov
mov
stc
test
push
push
pop
and
or
mov
mov
mov
mov
jmpw
repz
das
shr
shl
add
lods
xor
stos
in
les
cmp
enter
in
jmp
out
and
xchg
mov
dec
mov
and
jmp
sbb
jo
cmp
aam
jl
(bad)
add
jb
stos
stos
fsub
fwait
sbb
mov
cmp
adc
pop
dec
xchg
cmovge
pop
test
(bad)
jne
pop
leave
jg
lods
das
push
sub
in
sahf
(bad)
and
or
jb
cmp
or
xchg
or
(bad)
cmp
repz
fs
sub
rol
test
(bad)
stos
jae
push
sub
data16
inc
add
dec
and
xor
ret
repnz
enter
inc
addr16
jbe
fistp
aad
sub
in
ins
fild
dec
lods
or
(bad)
into
addr16
push
aam
sub
jmp
mov
cmp
fsub
mov
inc
cmps
(bad)
jg
mov
repnz
daa
jbe
dec
outs
cmc
repnz
jae
addr16
xlat
push
add
pop
movs
dec
sbb
cmps
pop
adc
xchg
mov
outs
cdq
xor
(bad)
loop
sub
js
or
stos
pop
aaa
popf
mov
dec
jmp
je
xor
retf
hlt
inc
inc
lock
shl
and
push
dec
lock
dec
sub
xchg
popf
push
les
fmul
pusha
fidiv
aad
pop
sub
jge
ret
out
icebp
ror
adc
mov
or
inc
ficom
pusha
dec
out
jns
(bad)
in
js
mov
das
jmp
lahf
fidivr
push
mov
and
leave
imul
fcmovbe
test
push
(bad)
cmp
mov
jp
or
cs
ss
shl
inc
shr
mov
inc
cmp
dec
xor
mov
jecxz
pop
pop
test
push
xor
cli
cmps
add
fs
mov
std
mov
dec
pop
enter
dec
aaa
adc
adc
adc
ja
aam
dec
cmps
mov
cmps
jne
das
bound
jmp
cs
jle
push
inc
scas
lods
mov
mov
out
and
dec
sub
push
sahf
shr
cmp
(bad)
sbb
movs
jge
leave
scas
cmp
dec
dec
scas
or
xchg
icebp
jg
test
(bad)
inc
retf
imul
nop
inc
sbb
cdq
test
lds
xchg
sahf
push
push
scas
outs
call
or
inc
sub
(bad)
or
ret
inc
adc
fs
jne
xchg
fistp
sbb
cmp
jae
mov
cmp
add
fisub
call
mov
stc
mov
pop
mov
pop
lods
sub
cli
dec
call
jg
repnz
sbb
mov
repz
jne
hlt
sub
mov
movs
fisub
cmp
sub
push
hlt
xor
hlt
mov
xchg
sbb
mov
xor
(bad)
popf
mov
into
pop
aaa
dec
or
and
mov
jb
mov
ds
es
lods
test
pusha
pop
in
xor
ins
mov
xlat
or
lock
pop
dec
xlat
dec
lds
inc
out
or
mov
fdivr
lock
jle
xor
pop
sbb
or
test
and
in
and
mov
push
adc
xlat
clc
inc
xor
or
(bad)
jae
mov
inc
cmp
stos
inc
add
test
mov
jnp
jns
call
sbb
les
inc
aad
sub
jg
cli
pop
shl
xchg
jp
ins
scas
and
xchg
movs
add
outs
and
loope
xchg
inc
(bad)
shl
retf
cmc
pushf
or
xchg
shl
mov
rcl
idiv
ror
push
mov
out
pop
data16
mov
addr16
push
sub
pop
ds
mov
pop
sub
push
mov
in
call
cmps
(bad)
jle
pushf
push
loopne
je
ficomp
xchg
mov
xchg
mov
jbe
jne
dec
fistp
retf
mov
repz
(bad)
mov
ja
daa
or
sub
clc
mov
mov
retf
ds
sbb
adc
lock
iret
jne
pop
mov
dec
lock
loope
movs
cmc
sar
pusha
jbe
xchg
sbb
dec
cwde
loop
aas
nop
ss
cmps
xlat
lods
cmps
lock
sub
stos
in
inc
in
fucom
pushf
sub
and
add
push
mul
imul
mov
sbb
sbb
mov
lds
sbb
ret
jge
movs
ror
rol
sbb
jne
cmp
ss
mov
out
ss
or
or
psrad
das
or
mov
sub
test
jno
pop
push
inc
mov
dec
cmp
and
xchg
ror
xlat
test
mov
cmp
inc
push
aas
into
sbb
pop
xlat
pop
call
ins
call
inc
stc
retf
add
repz
call
or
or
and
jmp
stc
sbb
pop
cwde
push
popf
sahf
shl
leave
add
stos
jne
jo
sub
and
mov
stos
div
jnp
sbb
vunpckhps
sub
xchg
retf
push
loop
sbb
fisttp
and
daa
sbb
std
jne
cwde
pop
ror
movs
xchg
rcr
lahf
dec
hlt
xchg
mov
mov
fisub
cmp
into
dec
ja
xor
repz
lock
jae
pop
mov
data16
and
shl
fs
adc
adc
mov
pusha
pop
in
xchg
sub
ja
xor
jmp
and
dec
mov
pop
push
push
in
inc
popf
lods
popf
pop
lods
into
jo
and
jno
cmp
adc
mov
pushf
pop
mov
adc
loope
mov
outs
sbb
test
sbb
shl
adc
or
retf
icebp
pop
sub
push
inc
xor
sbb
and
imul
inc
stos
mov
push
in
(bad)
leave
lods
in
jmp
je
lds
outs
pop
ret
ds
inc
test
test
cmp
dec
out
inc
mov
or
jge
push
sbb
push
xor
pop
mov
ins
add
jb
enter
cmps
xchg
ret
push
call
sbb
xchg
rcl
mov
ret
pop
out
cmc
out
(bad)
out
inc
push
and
ror
push
fdivp
call
sub
int3
sub
cwde
pop
rcl
pop
jo
aam
adc
call
fild
fistp
pusha
adc
and
inc
xchg
cdq
jl
nop
mov
cli
ds
xchg
cmps
in
push
mov
shl
mov
ficomp
iret
xchg
ss
cmps
cmp
iret
lea
xor
clc
dec
imul
xchg
push
call
cli
mov
das
mov
inc
pop
(bad)
jge
inc
cmp
lea
(bad)
hlt
add
test
cmp
mov
aad
mov
dec
loope
rcr
stos
js
pop
push
cmp
cmp
pop
cmp
out
pop
jg
mov
nop
neg
pop
jae
or
outs
or
data16
repz
mov
inc
inc
jmp
repz
daa
stos
pop
sti
dec
mov
stc
pop
fld
inc
bound
imul
pop
sub
das
mov
xchg
out
xchg
inc
imul
retf
mov
in
cmp
sbb
imul
push
fadd
adc
mov
xlat
lahf
sbb
movs
aas
addr16
xchg
ret
jne
xchg
mov
dec
test
pushf
jmp
add
out
nop
mov
inc
int3
or
and
inc
and
out
pop
lea
fdiv
xchg
mov
inc
mov
cmps
dec
jno
push
scas
push
out
fs
js
nop
icebp
scas
pushf
sbb
ss
js
gs
pop
mov
lds
nop
js
add
cs
clc
outs
xlat
inc
add
mov
bound
pop
ss
jmp
imul
repnz
sar
xlat
out
test
xor
ds
das
pushf
out
jl
jbe
aaa
dec
cmp
fld
out
xor
stos
test
sti
sbb
xor
sub
mov
cmp
inc
jne
jnp
push
mov
imul
adc
cmp
data16
add
arpl
push
dec
xchg
out
adc
xor
xchg
sar
outs
out
out
xchg
popf
mov
scas
adc
imul
xor
mov
inc
cmps
xor
in
add
mov
pop
gs
push
stos
inc
inc
pop
add
pop
jbe
pop
mov
std
sub
xchg
mov
in
adc
cdq
add
pop
nop
sbb
mov
(bad)
xor
adc
or
sub
fisub
addr16
ins
retf
retf
push
inc
push
or
cmc
push
js
or
clc
daa
sbb
fnstsw
mov
jg
xchg
and
call
ror
and
xchg
hlt
mov
mov
xchg
mov
call
mov
sbb
push
cmp
stc
ins
fdiv
or
stos
jmp
jmp
js
(bad)
mov
push
cmp
sbb
fimul
sub
add
scas
sub
mov
jl
(bad)
pop
or
pop
xchg
call
cdq
or
add
mov
or
jo
loop
data16
in
aam
fmul
out
pop
mov
xchg
pusha
adc
mov
pop
call
cdq
scas
cmps
jge
out
rol
and
call
in
mov
cmc
(bad)
outs
adc
sbb
mov
jbe
xchg
(bad)
jecxz
imul
push
push
xor
sub
push
das
dec
xor
adc
arpl
mov
ds
fsubr
xchg
dec
sbb
or
mov
dec
inc
stos
shl
loopne
std
outs
and
test
mov
and
mov
sbb
and
adc
adc
xchg
dec
retf
les
add
jg
fucom
jg
pop
gs
in
aam
sub
or
(bad)
test
mov
push
aaa
mov
and
mov
js
loopne
dec
mov
push
gs
jle
push
(bad)
in
jmp
adc
ds
out
fs
xchg
adc
xor
jno
cmc
push
xor
sub
cmp
lahf
in
mov
sub
jle
sub
sbb
push
xchg
je
das
fstp
sub
mov
(bad)
je
sbb
data16
cmp
cmp
pop
fs
out
xor
out
enter
sbb
aas
ja
in
jbe
cmp
jae
xor
retf
add
inc
(bad)
xor
xchg
mov
sbb
js
stos
ficomp
ins
dec
loopne
pop
push
sti
jne
aad
in
pop
inc
fisubr
xchg
pop
jg
sbb
pop
lds
xchg
adc
cmc
mov
push
mov
popf
out
call
pop
stos
dec
nop
cmp
std
jo
ds
pushf
dec
pop
sub
push
mov
push
and
sub
mov
ins
and
mov
repz
addr16
sbb
in
ja
xchg
sub
adc
xchg
sub
nop
sub
pop
pusha
and
ror
mov
movs
leave
xor
pop
push
ds
clc
daa
pop
(bad)
or
dec
movs
jp
jecxz
call
call
pushf
jl
pop
pop
dec
sub
mov
pop
test
lods
js
into
pop
pusha
add
test
leave
outs
jne
dec
hlt
fdivr
ss
scas
mov
jecxz
or
(bad)
iret
sub
vmovq
and
test
ins
test
(bad)
retf
pop
jmp
shl
sub
inc
mov
mov
inc
in
fs
push
or
bound
sub
or
sub
push
xor
pusha
sbb
or
fdiv
sub
xor
add
(bad)
in
test
cmp
xor
das
jl
sub
or
outs
movs
pusha
inc
xor
dec
movs
sub
arpl
pop
jle
push
in
in
in
cdq
push
pop
aas
mov
pop
clc
mov
mov
and
mov
fld
sbb
cwde
push
int
or
cli
or
and
mov
push
or
inc
outs
fimul
xor
jae
test
jmp
call
popa
dec
test
pop
in
in
sti
cmp
dec
loopne
xor
popa
and
mov
int
test
leave
adc
fs
ja
pop
(bad)
enter
(bad)
out
fmul
xchg
push
mov
loop
iret
push
dec
inc
pop
mov
fimul
inc
pop
jl
sbb
push
lea
sbb
cli
loop
and
ret
xor
sub
arpl
sahf
cli
jb
sbb
div
or
add
loopne
sub
push
fidivr
mov
loop
xchg
dec
pop
leave
data16
xor
or
push
loop
dec
and
pop
push
push
pop
iret
pop
aaa
loope
movs
ins
dec
vmovsd
outs
dec
jns
pop
add
fdivr
inc
repz
popa
mov
pushf
pop
addr16
(bad)
imul
ret
ds
jno
ret
lock
jb
ror
sub
cmps
or
in
xor
ficomp
daa
pop
push
call
and
(bad)
lea
loopne
pop
mov
sahf
imul
inc
inc
jecxz
jle
ror
imul
call
or
cmps
or
push
add
inc
(bad)
out
aam
pop
or
jmp
jno
push
mov
out
jle
loope
sbb
sbb
mov
sbb
lds
adc
mov
call
mov
and
jns
out
xor
xor
lock
sar
cdq
aad
xlat
sub
jge
xor
out
add
push
sub
es
mov
inc
cmp
pop
mov
lahf
outs
bswap
xchg
iret
cmp
hlt
es
sbb
pop
sub
push
cs
(bad)
mov
pop
mov
pop
push
push
push
sahf
jo
adc
sub
cmp
mov
mov
inc
out
push
in
adc
jmp
mov
mov
xchg
repnz
sbb
jo
fmul
loopne
and
jns
or
push
scas
dec
cmp
into
in
and
dec
add
pop
rcl
clc
pusha
pusha
shr
lea
scas
inc
popf
push
outs
mov
mov
sbb
and
mov
and
sub
push
icebp
sti
xchg
xchg
fcomp
push
loope
mov
(bad)
sub
pop
sub
stc
adc
dec
mov
stos
ss
mov
add
xchg
loopne
cmp
xchg
mov
adc
fld
sbb
adc
adc
and
mov
xor
in
std
and
test
jmp
fdiv
(bad)
jmp
sbb
pop
xor
sti
ret
push
cs
jmp
xlat
xchg
inc
aas
imul
fisubr
sub
mov
int3
push
je
adc
ds
or
add
push
stos
sti
jbe
cs
xor
jge
jne
push
sub
push
xor
sub
push
(bad)
jae
out
push
pushw
fsubr
cmp
xlat
ss
inc
leave
or
sub
fstp
call
daa
add
in
or
mov
outs
in
mov
dec
sub
aas
mov
cli
mov
(bad)
(bad)
aaa
pop
adc
or
mov
jmp
mov
xchg
icebp
jae
(bad)
dec
ins
add
mov
daa
xchg
inc
movs
push
xchg
loop
inc
cmps
xor
fs
ret
retf
add
or
fsub
repnz
xor
mov
dec
aaa
movs
ds
dec
in
pop
stos
push
mov
ret
adc
inc
jmp
jns
je
and
gs
bnd
shl
icebp
outs
xchg
dec
pushaw
(bad)
dec
or
sbb
mov
jmp
clc
mul
pop
add
and
mov
ret
push
pop
ja
lock
sahf
mov
mov
xchg
fs
jmp
std
test
adc
data16
cmp
add
mov
mov
mov
and
jmp
call
hlt
jmp
jp
pop
mov
dec
cld
jecxz
ja
and
and
pop
push
call
or
out
(bad)
orps
xor
into
mov
jno
push
ret
fucomp
inc
mov
dec
cdq
in
adc
loopne
imul
movs
dec
retf
shr
jae
adc
xchg
cmp
pop
int3
cmp
ficomp
add
addr16
sti
mov
(bad)
ins
popf
repnz
test
add
xchg
add
imul
dec
jge
clc
les
shl
shr
cmp
push
and
pop
in
xor
cmps
out
add
out
mov
inc
pop
mov
jns
ds
outs
or
cwde
std
mov
cmp
mov
fimul
sbb
loop
das
inc
stc
sub
mov
jo
stos
mov
(bad)
xchg
and
mov
xchg
mov
mov
clc
bound
sahf
(bad)
or
test
sbb
pop
shl
jnp
int
inc
mov
ret
ja
cdq
inc
jno
sub
mov
pop
jg
or
push
ficom
jle
push
dec
jp
or
inc
scas
loop
in
les
test
rol
stos
out
scas
xor
pop
(bad)
jno
mov
sub
lods
pop
cdq
outs
rcl
loopne
pop
in
jb
sub
popa
sub
stos
mov
pop
mov
push
pop
add
pop
rcl
movs
pop
and
int3
jg
pop
int3
mov
xor
add
push
movs
enter
mov
or
rcr
scas
and
inc
sub
mul
sub
and
test
inc
fwait
xor
push
jns
movs
mov
call
push
das
(bad)
jae
mov
mov
push
mov
adc
jmp
push
adc
loopne
xchg
bound
push
ja
xor
sahf
inc
aad
sub
xcrypt-cfb
cmps
arpl
popf
dec
pop
mov
test
adc
mov
add
scas
sub
ins
out
inc
in
arpl
cmc
or
dec
add
push
mov
xchg
dec
jns
sbb
out
jb
pop
test
fstp
popf
pop
inc
adc
cld
cld
pop
jle
rcr
(bad)
jbe
mov
mov
mov
xor
fisttp
push
add
pop
cmc
hlt
mov
mov
test
inc
ficomp
mov
lods
mov
jno
cmp
push
nop
add
hlt
daa
sahf
jmp
cmp
mov
or
test
mov
fidiv
jp
je
in
ret
sbb
jae
icebp
test
sbb
ins
stos
push
push
(bad)
fsubr
(bad)
es
ins
or
jecxz
loop
cmc
pop
push
or
add
inc
ins
int
in
stc
int3
iret
cmps
cmp
jo
das
rcr
mov
push
pop
adc
stos
js
jp
adc
iret
clc
mov
data16
dec
sub
inc
ins
push
or
aam
fnstsw
lods
xor
dec
popa
push
jns
arpl
mov
cdq
xchg
mov
arpl
pop
add
rcr
pop
(bad)
adc
jbe
stos
and
xchg
pop
add
or
mov
cli
loop
inc
mov
bound
mov
clc
mov
xor
mov
popf
dec
outs
leave
or
push
cld
cmp
jnp
pop
es
cmp
push
fs
xchg
xchg
pop
nop
fwait
ss
add
test
stos
mov
xchg
or
fadd
mov
aas
call
push
in
mov
outs
ret
(bad)
retf
movs
into
ds
les
pop
jp
out
loopne
cdq
sbb
mov
xor
stc
dec
xor
dec
push
jbe
scas
lods
ficomp
xor
mov
pop
out
and
shr
movs
push
push
cld
adc
gs
push
inc
push
int3
push
push
imul
aas
dec
lahf
mov
xchg
ret
mov
pop
ss
inc
xor
int
push
xor
ins
or
adc
(bad)
xor
add
outs
stos
jmp
aas
adc
scas
ret
xchg
ror
(bad)
xlat
or
enter
clc
cmp
adc
outs
fsubr
outs
sub
cmp
loope
imul
fst
mov
pushf
mov
cmp
movs
push
jge
inc
stc
cmp
pop
jp
push
fnstenv
imul
out
mov
jns
mov
test
mov
ins
test
lds
cmc
dec
mov
mov
ds
jbe
push
cmp
pop
lods
lods
sbb
stos
aam
ja
adc
mov
rcl
mov
pop
int3
outs
stos
inc
add
enter
shr
inc
inc
or
retf
push
sbb
aaa
ins
add
cmp
pop
pop
mov
mov
inc
jbe
sub
jge
(bad)
aad
jbe
pop
loope
xor
push
shl
jno
imul
test
mov
xor
test
pop
sbb
js
jle
daa
mov
mov
or
movs
out
test
(bad)
cmps
xchg
mov
jmp
clc
jmp
jbe
dec
dec
retf
outs
stc
pop
sbb
movs
dec
mov
ins
std
cmp
loop
xlat
xor
mov
xchg
fsubr
call
and
mov
sbb
jmp
imul
jmp
mov
mov
xchg
push
out
mov
(bad)
fidiv
xchg
or
jbe
and
mov
loop
test
fistp
(bad)
add
cwde
dec
(bad)
out
mov
je
or
push
pop
lods
movs
sub
jecxz
xchg
mov
mov
mov
cmpxchg
push
(bad)
mov
in
sub
push
fucomi
stos
cli
(bad)
and
leave
sub
and
lods
rol
das
imul
sub
stos
cmp
and
pop
jno
mov
push
mov
fcmovbe
nop
in
out
adc
aas
scas
mov
jg
push
call
mov
sti
push
and
ja
pop
std
loopne
xor
into
mov
dec
mul
push
mov
ret
inc
cmps
cs
aad
adc
shr
in
jmp
dec
adc
std
ja
int3
test
inc
enter
pop
(bad)
das
push
cs
(bad)
addr16
ficomp
mov
ins
cs
adc
mov
test
cmp
pop
and
jmp
jmp
enter
adc
pusha
sbb
fsubr
cmp
mov
mov
fisubr
loope
sub
jnp
test
jns
test
enter
push
mov
imul
stos
lea
sub
xor
mov
mov
ror
loop
stos
xor
enter
adc
(bad)
loope
mov
sti
cmp
jb
jmp
and
scas
gs
mov
stos
jnp
retf
xor
clc
sahf
ins
pop
pop
std
mul
test
sbb
cs
and
daa
push
pop
vpsrad
pusha
icebp
xchg
add
xor
(bad)
push
lods
leave
test
stos
pop
pop
lds
sub
xchg
adc
adc
mov
push
pushf
dec
out
push
out
cld
sbb
shl
fstp
js
dec
cli
xor
rcl
mov
jo
mov
into
sub
outs
mov
mov
sbb
push
loope
fwait
repnz
neg
pop
hlt
mov
sub
in
and
mov
stos
movs
popf
sub
adc
mov
loope
clc
lahf
adc
imul
sub
jno
xor
sbb
add
out
addr16
pop
in
mov
cwde
add
cli
push
fwait
not
xchg
sbb
stos
inc
dec
outs
ds
cmp
xor
fmul
push
push
sbb
pop
jp
sar
push
adc
into
or
repnz
div
push
inc
jae
and
pop
hlt
add
sub
sub
pop
shl
jp
adc
lahf
loopne
into
add
jl
repnz
cmp
jecxz
jp
ins
mov
mov
dec
scas
adc
sub
shl
jne
call
xchg
adc
cli
shl
sbb
jb
es
dec
adc
stos
xchg
cmp
test
aas
cli
mov
aad
loop
in
out
mov
inc
and
mov
cmps
cmp
fwait
xor
xor
xor
and
lock
mov
call
inc
xchg
push
xchg
movs
xlat
mov
pop
retf
sbb
lds
jo
inc
adc
sub
stc
sub
popa
and
pop
imul
sbb
in
mov
nop
loopne
sbb
jmp
jle
push
jmp
inc
cmp
ss
dec
int3
fimul
cld
cmp
out
test
test
mov
jno
dec
pushf
std
sti
popa
sahf
sbb
jg
xchg
enter
cdq
inc
jb
clc
mov
cmp
retf
ds
xor
cmp
adc
fidivr
shl
cmps
cmps
mov
and
das
push
std
std
adc
xchg
imul
out
lahf
mov
movs
pop
cwde
pushf
or
ins
inc
inc
pop
arpl
test
hlt
lea
out
jle
test
stos
cdq
clc
xchg
cs
cmp
jbe
ins
lods
jle
outs
daa
xor
and
scas
inc
ds
enter
test
loop
sbb
jnp
xor
mov
inc
and
xor
retf
xor
adc
jle
mov
jmp
sub
jle
pusha
mov
and
push
sbb
(bad)
mov
addr16
outs
out
cmp
adc
adc
ret
dec
or
daa
push
jg
xchg
pusha
aaa
jge
mov
pop
loopne
in
pop
mov
aam
shl
push
push
scas
int3
call
mov
scas
add
dec
cmovp
pop
movs
ins
mov
fisubr
push
inc
jmp
sub
bound
cdq
lea
sahf
jb
repnz
(bad)
inc
stos
and
sbb
mov
imul
dec
add
hlt
xor
add
pop
dec
and
xor
scas
cwde
dec
add
adc
jge
dec
fidiv
fimul
imul
movs
call
add
scas
loope
int3
jbe
(bad)
fcomp
add
imul
cmp
out
test
dec
test
pop
neg
add
and
add
or
movs
sbb
add
fild
xchg
ds
dec
ds
jecxz
out
iret
sub
test
push
fstp
inc
xchg
mov
cmp
push
das
adc
add
xor
(bad)
add
mov
dec
and
dec
sub
mov
hlt
out
jne
rol
mov
sar
mov
jecxz
ficomp
add
rcr
shl
adc
je
cmp
or
mov
shr
sbb
mov
data16
ss
pop
cld
cmps
int3
cwde
out
push
adc
fwait
add
pop
fist
aas
cmps
outs
push
and
stos
test
cmc
add
jmp
js
pop
mov
lock
shl
nop
xchg
mov
pop
jg
jmp
mov
cmp
aam
xlat
xchg
xor
cs
mov
(bad)
sub
and
inc
stc
dec
and
out
call
int3
add
push
fld
pop
ins
fldenv
add
sub
cmp
fcmovbe
aas
imul
test
sub
push
popa
out
ds
in
pop
call
out
push
pop
addr16
mov
sahf
out
cmps
mov
jge
sbb
mov
push
std
stos
pop
dec
adc
mov
push
popf
ja
sub
jb
mov
aad
int
sbb
pop
dec
pop
clc
data16
mul
ins
iret
bound
iret
sbb
xchg
cli
dec
rcr
test
or
outs
ja
stc
jae
test
jns
sub
xor
ret
xor
aam
pushf
mov
xchg
jp
test
jg
jb
dec
add
sbb
mov
inc
mov
mov
in
scas
std
aam
call
adc
adc
(bad)
retf
in
push
dec
clc
mov
shl
mov
les
fisttp
add
jbe
add
sar
mov
lods
or
rol
jns
xor
mov
mov
je
retf
in
and
adc
push
xor
inc
repnz
in
shl
dec
or
xchg
push
jp
pop
push
ins
ss
fcmovne
jnp
in
pop
pushf
in
sub
pop
add
mov
add
pop
ds
retf
cmp
xchg
(bad)
arpl
mov
dec
sbb
das
cmp
dec
fsub
sub
pop
(bad)
cmp
pop
pop
call
int3
into
call
jae
fwait
pop
pop
or
(bad)
xchg
test
mov
jp
ss
pop
repz
pop
xchg
clc
mov
mov
jo
dec
mov
push
inc
rol
sub
retf
mov
ds
jmp
imul
jns
movs
outs
fild
movs
imul
mov
mov
xor
cmp
or
(bad)
lock
rol
daa
shr
dec
retf
mov
fs
inc
cmps
mov
cmp
pushf
and
inc
iret
dec
sbb
aas
mov
cmp
ins
mov
movs
xor
(bad)
jno
push
fs
out
push
pop
(bad)
xchg
leave
call
ret
mov
pusha
(bad)
jbe
jp
sbb
mov
das
push
push
jge
or
cs
cmps
sbb
add
scas
pop
or
(bad)
mov
fs
addr16
mov
jg
xor
outs
mov
pop
dec
imul
pop
and
inc
in
fyl2xp1
push
out
int
jl
test
mov
addr16
dec
movs
and
call
int
adc
mov
adc
es
inc
outs
dec
or
cmps
ins
pushf
cmp
fidivr
and
sub
mov
and
lahf
or
sub
in
xchg
pusha
fidiv
repz
pop
jne
loope
adc
inc
dec
adc
loope
movs
ss
ins
(bad)
(bad)
fs
cdq
outs
stos
push
cmps
repnz
mov
mov
dec
push
jmp
or
iret
ror
sub
jmp
nop
sbb
mov
aas
cwde
(bad)
jnp
jecxz
jg
dec
mov
and
jmp
(bad)
jp
loope
repnz
iret
cmp
aaa
das
dec
es
mov
fucom
push
in
add
jbe
in
sub
lods
pop
adc
(bad)
loopne
fsubr
xchg
pop
in
mov
mov
pushfw
pop
movs
(bad)
(bad)
mov
clc
iret
jp
pop
push
rcl
fwait
adc
sar
into
lods
cdq
ret
fsubr
int
pop
sahf
and
sbb
out
jb
cmp
cmp
add
mov
stos
pop
push
dec
jl
ret
mov
sbb
repz
test
jge
sub
adc
mov
mov
inc
fld
adc
mov
fld
dec
mov
inc
inc
dec
rcr
(bad)
ret
or
mov
scas
test
pushf
movs
pop
pop
pop
jmp
sahf
jb
fcomp
ss
pop
out
aas
cmps
xchg
push
shr
mov
and
xchg
outs
loopne
and
xchg
call
ds
lea
mov
fild
test
sub
je
xchg
pop
stos
xor
add
dec
fwait
popa
test
rcr
cwde
pusha
xchg
xor
dec
mov
dec
(bad)
(bad)
rcr
enter
stos
sbb
jns
iret
mov
and
test
or
popa
pop
jne
mov
popf
and
mov
inc
add
and
jg
mul
xor
mov
popf
fisubr
fs
aaa
jmp
pop
adc
pusha
rol
mov
stos
cs
and
jp
cmps
iret
push
call
dec
jg
repz
add
push
aad
mov
int3
outs
adc
pushf
adc
cmp
ins
pop
sbb
jns
sbb
pop
fdivr
mov
je
jae
mov
xor
(bad)
pop
push
or
repz
test
jge
push
mov
outs
sar
cmp
ss
push
sub
stos
mov
fadd
sbb
xchg
cld
add
add
ror
jbe
xchg
(bad)
jecxz
cs
sub
dec
xchg
push
sub
push
ins
mov
dec
int3
jno
and
xlat
iret
add
xor
aas
pop
aaa
stc
popa
inc
pop
shl
mov
test
pop
imul
mov
or
jl
aad
mov
jmp
pop
xor
rcr
hlt
xchg
xor
adc
mov
stos
xor
mov
and
ins
cmc
or
repnz
out
sub
pop
push
sub
loop
int
aad
sahf
adc
adc
jmp
call
jmp
xchg
popa
ds
mov
push
or
add
test
imul
popf
push
shl
mov
jmp
fsqrt
sbb
stos
out
lds
(bad)
outs
lahf
cmp
xchg
(bad)
lahf
xchg
inc
je
dec
pop
xor
fadd
cmps
push
(bad)
out
cmp
or
or
not
jle
push
push
mov
ss
fwait
sub
mov
aas
cld
dec
xchg
fwait
jmp
sbb
push
pop
arpl
stos
test
fs
loope
int3
mov
sbb
div
call
in
mov
xor
and
mov
pop
xor
ret
fcom
mov
popf
mov
stos
daa
dec
inc
mov
pushf
jns
dec
cmp
arpl
stos
and
mov
js
pop
mov
test
pop
and
sub
cs
int
push
mov
out
jbe
inc
jo
jp
inc
mov
inc
or
or
lock
fstp
adc
cmp
pop
sub
inc
dec
stos
sar
es
gs
shr
inc
test
xchg
sbb
jp
sbb
cwde
sbb
fs
(bad)
cs
mov
hlt
mov
aad
mov
inc
arpl
in
lods
inc
xor
push
repnz
mov
sbb
aas
inc
out
or
dec
pop
pop
test
sahf
mov
lahf
xchg
gs
adc
or
xor
or
nop
pushf
mov
arpl
jae
mov
xor
dec
jmp
clc
jle
sbb
aad
mov
stos
cs
or
dec
fstp
push
mov
jmp
popa
bnd
mov
shr
retf
jl
ins
push
hlt
ror
jg
sub
outs
js
bound
ins
pusha
mov
std
jle
mul
int3
movhps
and
jnp
jg
xchg
sbb
add
dec
outs
mov
lds
pop
pop
pop
jp
mov
pop
rcl
repz
push
inc
lods
sbb
cvtdq2ps
and
mov
jns
aad
cmp
fimul
retf
dec
cmp
cwde
hlt
std
add
(bad)
push
aam
jnp
fstp
in
jl
or
clc
mov
in
fisub
cmp
stc
in
add
xor
mov
mov
xchg
cmp
add
sbb
mov
xor
and
imul
xchg
cmp
popa
and
gs
(bad)
out
sub
mov
sub
jmp
push
fs
aad
jb
iret
jo
pushf
int
aad
sub
push
repz
dec
mov
(bad)
jmp
or
pop
daa
icebp
jl
ins
add
aas
mov
and
mov
mov
dec
imul
xchg
jae
mov
inc
(bad)
lahf
sub
and
sub
xor
aas
mov
out
pop
pop
add
aam
push
mov
and
xchg
inc
or
mov
mov
fsubr
call
jno
mov
fs
adc
dec
cmp
in
or
jge
test
sbb
push
and
mov
std
mov
shl
cmc
(bad)
mov
ins
push
lods
push
or
je
in
(bad)
push
or
xchg
push
arpl
movs
loopne
jge
pusha
add
lods
repnz
leave
cmps
fnstcw
cmp
push
xor
jno
mov
icebp
stos
sub
ret
mov
add
ds
mov
sbb
ret
or
popf
xor
and
push
pop
or
sub
dec
jg
repz
cmp
hlt
push
test
mov
dec
jmp
add
pop
dec
outs
inc
dec
movs
imul
stc
xor
sar
pop
cmp
jmp
pop
mov
cmp
stos
cmc
inc
cmovp
dec
mov
dec
lods
cmp
sbb
jmp
fsub
cdq
shl
cmps
cmp
icebp
gs
mov
jno
mov
repz
das
mov
mov
mov
mov
int
xor
inc
out
retf
xor
jno
mov
test
cmp
mov
adc
ins
ins
sub
lods
xchg
and
cmps
sti
jge
sti
icebp
shr
sub
cmps
cmps
pop
xchg
mov
shl
aaa
fist
lock
dec
movs
cmp
jmp
cmps
mov
pop
xchg
cmp
and
iret
jge
popf
push
data16
cwde
stos
ficom
push
inc
in
dec
add
movs
push
int
jle
cmp
pop
std
sbb
jg
repnz
iret
out
mov
jle
push
dec
out
add
js
push
xor
inc
and
mov
xchg
fsub
pop
clc
cmovns
pop
test
shl
mov
jl
stos
mov
xor
popa
mov
add
inc
sahf
sub
cld
xchg
loopne
shl
ds
and
lods
and
jge
and
lock
or
sti
pop
xor
nop
test
push
clc
into
dec
push
push
jmp
outs
or
mov
arpl
xchg
ror
cmc
xchg
and
xor
adc
pop
push
icebp
mov
or
add
and
js
(bad)
jle
push
imul
sbb
test
mov
mov
or
fdivr
fisubr
sbb
push
bound
repz
adc
bound
sahf
out
(bad)
mov
mov
test
pop
sub
sub
mov
mov
(bad)
out
pop
leave
pop
mov
mov
push
push
iret
icebp
xor
jmp
pop
mov
mov
fwait
pop
xchg
mov
in
fsubr
std
mov
clc
cmp
jbe
sbb
adc
call
jl
dec
add
imul
shl
sbb
inc
out
push
cmp
add
sbb
icebp
jnp
rol
loopne
push
outs
push
mov
pop
jae
shl
push
jl
int
dec
jmp
mov
pop
sbb
mov
sti
pop
imul
(bad)
pop
cmp
fmul
pop
sub
inc
sbb
ja
in
xor
fdiv
mov
add
shr
push
sub
dec
mov
outs
out
cmp
jge
cmp
jge
repz
cld
shl
jno
inc
std
outs
xor
dec
ret
pop
pop
loope
(bad)
clc
or
fdiv
data16
dec
ds
pop
gs
int
pop
jmp
iret
mov
sar
enter
rcr
sub
jle
sbb
in
out
pushf
jmp
add
sbb
aam
adc
jle
xchg
jmp
imul
jmp
push
mov
call
inc
movs
fisttp
mov
sbb
push
cmc
movs
in
jne
retf
ins
xchg
in
jp
sbb
jb
add
mov
mov
das
mov
adc
in
in
and
ins
(bad)
in
loop
popa
cld
loop
stos
dec
in
adc
imul
mov
xchg
adc
dec
pop
push
mov
scas
jmp
adc
out
xor
out
mov
push
outs
jmp
pusha
jnp
xor
call
jmp
sub
add
hlt
xchg
push
inc
jecxz
(bad)
cdq
aad
repnz
jl
sub
push
add
scas
push
jle
enter
lods
(bad)
cmp
dec
sar
leave
inc
mov
mov
arpl
adc
test
add
shl
sub
sbb
lock
pop
into
mov
faddp
push
sub
retf
pop
sar
out
xchg
cli
push
pushf
add
add
mov
dec
and
leave
mov
xchg
pusha
test
data16
lods
xor
and
jmp
dec
jbe
and
push
(bad)
mov
fist
aaa
xlat
dec
dec
je
rcl
pop
inc
mov
in
sub
leave
fistp
pop
daa
sbb
xchg
inc
sbb
je
retf
add
movs
sub
and
(bad)
(bad)
jb
xor
mov
sbb
xor
aad
push
mov
fisttp
push
dec
cwde
dec
pop
xor
cmp
(bad)
mov
mov
addr16
imul
add
pop
ret
ret
lahf
or
jge
and
mov
dec
shl
mov
mov
test
xchg
jmp
lock
xchg
cmp
in
adc
inc
mov
inc
fdivr
in
cmp
bound
imul
adc
out
push
mov
dec
xchg
cmp
jbe
jnp
aad
jns
(bad)
sbb
jp
sbb
rcl
add
add
fstp
xchg
int
mov
cdq
ret
xlat
or
icebp
push
dec
and
scas
lock
mov
push
sbb
movs
rcl
xchg
ja
push
repz
or
(bad)
jg
jge
xchg
xchg
(bad)
jb
sbb
mov
test
push
sub
jge
cmp
jnp
lock
mov
int
les
xchg
inc
lods
sbb
loop
mov
adc
cmp
ds
inc
test
cs
adc
pop
mov
mov
pop
fwait
dec
xor
bound
xchg
inc
xor
and
add
dec
cli
(bad)
cmc
fistp
jmp
loope
adc
sbb
test
or
mov
and
test
mov
call
fistp
jp
mov
push
scas
push
call
cmps
leave
push
xor
cli
jns
push
cwde
sbb
jnp
xchg
push
sub
xor
jmp
cld
mov
pop
out
(bad)
imul
or
pop
dec
enter
popa
ror
pop
pusha
push
test
or
jne
cmp
js
sbb
lds
cdq
mov
dec
call
stos
add
fsub
mul
add
cmp
movs
int
push
cmp
out
hlt
mov
jb
in
aam
sahf
lds
dec
push
scas
cdq
xchg
int3
sub
adc
lock
les
fld
cmp
jmp
sbb
sar
push
in
imul
out
lods
(bad)
jo
cld
imul
jecxz
outs
mov
pop
shl
jp
add
nop
hlt
ret
out
mov
daa
sub
mov
shl
call
(bad)
pop
add
inc
fadd
rcl
test
sbb
dec
push
movs
cmp
cmp
cwde
mov
sbb
sbb
icebp
ss
and
pop
cmp
mov
enter
dec
arpl
popa
xchg
imul
fucomip
movs
in
(bad)
in
inc
jmp
inc
and
push
stos
test
add
fwait
jecxz
sbb
int3
xchg
hlt
(bad)
mov
or
mov
xlat
gs
jnp
dec
jnp
lea
stc
nop
sahf
in
gs
jae
fidiv
in
ins
mov
push
test
dec
mov
push
(bad)
call
adc
iret
pop
adc
add
retf
xchg
mov
or
mov
in
mov
cmc
out
dec
or
add
mov
xor
adc
mov
sub
xchg
fiadd
xchg
sbb
cli
mov
or
enter
adc
mov
add
retf
xchg
retf
imul
sub
sub
sbb
pop
hlt
mov
into
pusha
movs
push
pop
xlat
lds
and
and
rcl
mov
sbb
lods
out
clc
inc
jo
call
fadd
mov
int
out
add
iret
jp
mov
xor
pop
rcl
fild
call
in
ja
dec
rol
inc
in
adc
sahf
xchg
push
mov
inc
pop
adc
push
enter
(bad)
retf
lock
jnp
lds
jecxz
outs
sbb
dec
xor
adc
test
cmp
into
inc
aad
ds
push
push
jg
mov
jne
ror
push
in
ret
fwait
ret
das
cmps
addr16
aam
push
pop
and
sbb
hlt
jnp
cli
aam
push
jp
cs
jo
enter
mov
inc
iret
js
cmp
neg
xor
dec
cld
test
inc
or
das
adc
jl
fld
mov
inc
or
xchg
into
mov
stos
jecxz
push
int3
add
jae
test
ss
xchg
pop
dec
cmp
fsubr
add
neg
push
push
cmovnp
(bad)
xlat
je
adc
inc
mov
cli
dec
inc
pop
mov
ja
adc
push
sub
ja
sub
imul
mov
mov
xchg
cmps
loopne
fld
mov
add
push
mov
push
pop
adc
or
out
push
push
jl
adc
mov
(bad)
(bad)
cmp
out
dec
or
daa
stos
adc
push
add
push
lock
mov
lods
pop
fild
retf
cmp
cmp
call
pushf
sahf
sahf
shr
out
popa
pushf
aad
xchg
mov
mov
mov
xchg
pop
fmul
push
in
xor
mov
sti
sbb
mov
push
div
inc
sbb
push
bswap
pop
cmp
and
ss
jno
sub
jns
jp
mov
shl
mov
jbe
push
mov
(bad)
movs
xor
loopne
jmp
mov
add
int
mov
sub
and
or
(bad)
mov
(bad)
aad
aad
pushf
mov
sub
mov
and
pusha
xchg
aam
ret
repz
pop
mov
or
fdiv
lahf
pop
pop
les
outs
cwde
inc
out
mov
adc
and
out
or
pop
jno
xchg
fcom
push
push
cmp
enter
mov
cmp
repnz
rcl
jno
pop
neg
jge
stos
dec
in
sbb
or
sbb
leave
lea
dec
mov
ficom
mov
mov
cmp
mov
pusha
in
or
es
(bad)
sahf
jns
iret
sub
adc
mov
and
ss
pop
dec
stos
and
out
pop
cs
mov
test
inc
in
mov
ror
inc
(bad)
xchg
fucomi
test
pop
pop
inc
and
jo
sub
inc
pop
adc
retf
sub
scas
test
imul
not
dec
cs
mov
xor
aas
stc
js
sub
aam
adc
cmp
dec
(bad)
scas
into
mov
sbb
jo
fs
xor
jb
xchg
add
cmps
sahf
sbb
pop
push
lods
fucomip
adc
pop
repnz
mov
and
shl
mov
pop
jno
inc
lahf
mov
mov
mov
sub
mov
cmc
wrpkru
jmp
call
push
xchg
addr16
mov
pop
jecxz
push
out
cmp
aas
jo
out
std
sub
jo
xchg
stos
je
leave
dec
sbb
aaa
fsubp
and
(bad)
loopne
fadd
inc
nop
push
mov
test
jle
pop
xor
sub
call
mov
repz
dec
jg
sbb
and
pop
mov
sbb
sub
nop
push
call
mov
mov
jecxz
arpl
loop
js
push
adc
pop
pop
xor
ins
mov
xchg
mov
push
movs
push
mov
pop
sbb
fiadd
mov
jle
jp
movs
cmc
mul
retf
sub
sar
or
sub
push
ror
clc
mov
xor
and
or
test
es
ret
ret
cdq
cmp
js
xor
xchg
mov
stos
push
mov
lods
out
pop
out
repz
pop
in
add
into
pop
popa
fstp
pop
mov
popa
cwde
stos
jmp
test
sar
jle
(bad)
sub
call
ins
mov
xchg
pop
inc
fild
cmp
in
jb
pop
neg
bnd
lock
pop
fs
jb
xchg
(bad)
or
mov
fcomip
sub
pop
xchg
mov
inc
loope
mov
loopne
adc
xchg
cld
gs
inc
sub
pop
cdq
popf
test
fwait
mov
or
imul
test
mov
mov
jne
sub
(bad)
cmc
mov
or
jmp
pusha
pushf
test
test
and
(bad)
das
cli
ss
cmp
mov
push
enter
jge
push
cli
ss
pop
sbb
ins
or
cwde
sbb
(bad)
fnstcw
out
sar
xor
out
push
and
lods
or
inc
pop
add
les
add
cmp
cs
call
imul
out
add
imul
mov
or
push
loopne
ror
test
mov
inc
mov
jnp
dec
ja
mov
outs
out
mov
pop
imul
sbb
inc
pop
pop
(bad)
cli
or
inc
mov
mov
rcr
je
ja
scas
out
jo
jnp
jmp
xchg
push
stc
push
and
jecxz
stc
fnsave
loope
sbb
sub
or
xlat
pop
pop
push
sbb
aaa
cdq
push
pop
jmp
shl
aad
sub
icebp
and
shl
(bad)
jno
stc
cmps
xchg
outs
daa
jg
fcomp
or
mul
rol
sbb
shl
pop
inc
jmp
xor
aas
loop
lods
sbb
sbb
ret
mov
push
adc
jmp
inc
aas
fsub
adc
cmp
loope
out
aam
xchg
das
jmp
push
retf
in
add
push
mov
fnstcw
movs
sub
ficomp
lods
mov
xchg
dec
bound
sub
cmp
lock
aaa
mov
movs
fidiv
lods
ja
test
dec
cmp
jns
adc
loope
or
inc
cmp
xor
stos
jbe
popf
aad
xchg
ror
clc
aas
mov
jmp
dec
retf
and
or
ret
mov
xor
(bad)
pusha
(bad)
ds
add
data16
call
inc
xchg
jecxz
xchg
mov
or
out
in
xchg
jge
mov
cmc
sbb
inc
dec
jecxz
ror
mov
mov
sub
sti
dec
cli
or
mov
int3
stos
jb
cmc
jle
xchg
js
cs
jle
cwde
or
cdq
sub
cmp
jp
mov
dec
mov
adc
dec
push
jmp
out
icebp
(bad)
mov
sub
in
mov
ror
jge
push
dec
popa
sub
jnp
add
fiadd
push
(bad)
into
lods
jbe
scas
pop
mov
xchg
mov
mov
mov
mov
out
sub
retf
push
imul
mov
xchg
dec
push
aas
in
sti
dec
ds
ja
loop
test
shl
and
adc
add
outs
mov
movs
push
fs
xor
aaa
mov
sub
cld
pop
inc
jne
inc
mov
fmulp
rcr
scas
test
pop
daa
mov
sahf
push
sbb
mov
fcmovnu
popa
sbb
scas
xor
aas
add
jl
cdq
mov
test
ret
ja
push
cmps
xchg
jl
dec
repnz
push
cmp
lds
pop
dec
or
mov
xchg
rcl
xchg
mov
push
lea
add
rcr
movs
sub
shr
fwait
xor
cwde
leave
paddsw
xor
pop
pop
sub
test
xor
aad
out
daa
adc
icebp
xor
sbb
cmc
test
mov
pop
fsub
loope
push
loop
in
ret
jg
fcmove
jne
sbb
call
dec
or
mov
pop
fs
gs
xor
xor
fbld
or
inc
lahf
mov
gs
mov
ret
outs
cld
push
jbe
bound
jbe
lock
sub
mov
rol
cmp
sub
mov
add
mov
imul
lahf
mov
loop
pop
dec
repz
fnsave
sbb
enter
arpl
cmp
loopne
pop
inc
pushf
retf
movaps
aaa
sub
jl
ss
xchg
dec
sbb
or
adc
inc
mov
(bad)
mov
rol
(bad)
mov
and
inc
mov
fld
ds
xor
(bad)
cdq
or
ffreep
loopne
cli
daa
icebp
xchg
sbb
pop
mov
cmp
sti
sar
movnti
(bad)
pushf
mov
cdq
stc
xchg
ja
stos
xchg
mov
sahf
sbb
nop
cmp
icebp
fsubp
adc
stos
fidiv
movs
stos
pop
popf
int
adc
mov
iret
sub
call
addr16
mov
ror
mov
lock
or
push
push
lods
inc
repnz
sbb
xchg
or
cli
mov
test
aaa
pop
sbb
pop
movs
xor
or
out
ds
das
inc
stos
mov
mov
mov
jle
sbb
movs
and
sbb
lods
mov
lock
inc
push
stc
cli
push
(bad)
mov
add
push
mov
loop
cld
push
bound
xchg
mov
adc
xchg
scas
lds
xchg
popa
inc
cmps
pop
add
jo
xor
(bad)
xchg
pop
cs
adc
rol
clc
stos
daa
imul
jge
pushf
sbb
or
(bad)
sti
sbb
test
mov
xor
add
out
sub
aaa
lods
add
xlat
and
shl
xchg
dec
push
mov
push
jmp
aad
ret
aas
inc
add
out
repz
aaa
loope
mov
pop
pop
cmp
dec
jbe
jle
retf
or
mov
xor
ds
xor
mov
xor
aam
test
ror
cmc
cdq
xor
push
push
jg
inc
mov
das
sbb
repz
arpl
jge
xchg
push
adc
movs
sar
mov
jo
das
out
call
add
je
dec
inc
mov
int3
clc
fucomip
xor
xor
inc
fs
ror
rol
js
xor
inc
sub
cmp
mov
jl
repz
cld
das
jmp
xor
xor
pop
nop
(bad)
call
les
(bad)
or
sar
mov
add
xchg
es
inc
das
call
fdiv
(bad)
dec
in
pop
sbb
dec
push
jp
cwde
sar
outs
(bad)
ror
xor
int
popf
jne
cmc
aam
cmp
xchg
(bad)
mov
inc
fisttp
cmp
pusha
dec
daa
aaa
clc
out
bound
outs
sbb
mov
sub
cs
sbb
push
in
dec
test
cmps
aam
jmp
fcomp
push
rol
int3
xor
shl
jb
fdivr
outs
cmp
lahf
call
cmp
nop
jl
lods
fadd
mov
(bad)
out
push
shl
clc
inc
mov
cmp
addr16
dec
or
sub
call
sar
lods
xchg
xchg
jne
test
inc
cmp
jmp
mov
mov
fwait
push
repz
mov
jp
xchg
ret
mov
or
out
sbb
lods
cmp
clc
popa
stos
cwde
pop
rcl
sub
bound
stos
mov
sbb
jmp
cmp
push
out
mov
adc
jnp
popf
ins
pop
repnz
mov
or
lock
daa
mov
push
aas
arpl
mov
(bad)
jne
popa
push
clc
adc
mov
in
adc
jns
gs
icebp
inc
mov
xlat
push
and
repz
mov
std
loop
fcmovnbe
repnz
jmp
lods
sbb
jae
retf
xchg
pushf
xchg
or
iret
aad
and
data16
out
rcr
and
and
add
fwait
and
outs
xchg
mov
adc
or
cmp
icebp
mov
leave
and
movntps
ins
cmp
or
rcr
je
pop
cmps
dec
(bad)
fcom
or
mov
xor
pop
push
xor
push
clc
inc
mov
xchg
inc
fsub
jne
rcr
jnp
jl
jmp
adc
sub
aad
dec
movs
cmp
retf
xor
jmp
clc
paddd
push
pop
xor
(bad)
in
outs
out
imul
cmc
dec
xchg
mov
add
ins
ja
outs
loope
inc
add
iret
aaa
push
jle
jl
xor
push
xor
imul
sti
xlat
ins
pushf
pop
(bad)
jae
mov
add
(bad)
pop
sbb
xor
jg
sbb
ja
pushf
clc
sub
xor
xor
xchg
out
lods
mov
push
pop
inc
pop
mov
or
mov
mov
(bad)
rol
mov
retf
lea
cmps
test
sbb
adc
js
sbb
rcr
loopne
mov
mov
bound
idiv
cmps
xchg
or
cmc
xchg
xlat
mov
push
dec
aas
mov
scas
jae
test
leave
adc
fimul
dec
mov
or
gs
mov
push
xchg
add
or
aam
cmp
jno
sub
xchg
nop
(bad)
fs
adc
and
jp
outs
clc
cmp
dec
mov
mov
shr
add
mov
in
pop
cli
(bad)
mov
pop
ins
add
push
fild
dec
ss
cdq
bound
ficom
ror
rcl
stc
fsubp
sbb
add
adc
(bad)
mov
addr16
mov
push
les
pop
xor
imul
test
and
fcmove
or
mov
retf
das
clc
or
mov
sbb
pop
mov
test
xchg
dec
sub
jno
sbb
sahf
jne
mov
or
movs
inc
call
dec
push
sar
ja
pop
mov
sar
aam
inc
mov
pop
sbb
test
rcr
and
js
sub
add
push
sbb
xchg
out
idiv
jae
dec
mov
outs
jno
inc
ret
lds
jbe
cwde
jne
lods
jle
adc
pop
xchg
jnp
hlt
inc
cld
arpl
scas
xchg
ds
arpl
leave
mov
xchg
xchg
sbb
dec
jle
sub
mov
sbb
push
xor
fst
xchg
ror
mov
dec
xchg
scas
in
push
shr
test
lods
push
lahf
ins
mov
jnp
sbb
pop
sub
(bad)
int3
lods
scas
jmp
cmp
int3
add
pop
dec
dec
sub
outs
or
xchg
jmp
and
push
pop
mov
gs
or
cmps
fwait
stos
and
ror
and
daa
rcr
fnsave
cli
out
pop
push
(bad)
dec
xchg
scas
push
sub
movs
into
in
adc
adc
clc
adc
push
xchg
jb
jecxz
movs
or
imul
adc
push
mov
lds
push
xor
dec
sbb
cmp
add
push
fist
or
xsha1
cmps
(bad)
or
data16
outs
dec
and
ins
sub
mov
adc
push
inc
pop
ins
jmp
icebp
fwait
lahf
push
outs
and
pop
enter
sti
mov
push
sbb
dec
pop
mov
stc
stos
push
fist
and
(bad)
call
mov
mov
mov
in
(bad)
std
mov
test
mov
jno
scas
into
lods
test
mov
push
aam
sub
int
sbb
pop
cmc
scas
or
lods
in
cmp
adc
add
(bad)
js
xchg
adc
mov
cmp
ja
mov
retf
xor
xchg
lock
or
sub
pop
jns
and
sbb
(bad)
inc
test
cwde
dec
icebp
dec
jb
shl
fwait
adc
jne
lods
and
scas
xchg
pusha
sbb
inc
mov
(bad)
and
movs
inc
push
popa
sbb
adc
sub
fcmovnu
or
call
rol
loopne
cmp
cmps
sbb
xchg
sahf
out
mov
push
mov
bound
ror
jmp
push
push
pop
jnp
into
mov
jle
or
pop
dec
and
jmp
sbb
xchg
cld
aad
daa
(bad)
out
cmp
fs
sbb
or
ror
sar
test
add
sbb
pop
xchg
test
jbe
cs
inc
mov
cmps
outs
imul
call
xor
push
test
ror
xor
sbb
mov
in
push
fnstcw
stos
adc
and
pop
sub
out
(bad)
push
inc
xor
jae
cmp
cmp
jo
in
mov
jbe
js
inc
rcr
hlt
loop
aas
shl
scas
ret
fs
das
iret
out
xchg
popa
pop
jl
movs
sbb
clc
mov
inc
sub
cwde
cs
mov
fs
neg
inc
(bad)
loop
jmp
nop/reserved
xchg
jge
cmps
stos
jp
mov
retf
les
inc
and
fcomp
jb
xchg
lods
sub
retf
enter
(bad)
scas
ret
dec
xchg
cmp
mov
repz
mov
ret
fwait
scas
fld
cdq
retf
ja
into
xchg
mov
pop
add
xlat
mov
jg
xor
push
cmc
leave
out
or
inc
js
rcl
inc
stos
and
pusha
out
sbb
call
push
in
shr
cmp
and
adc
push
dec
mov
dec
cli
xor
cmp
jmp
sbb
mov
pop
ja
cmp
push
mov
ins
pop
inc
inc
xor
dec
sub
xor
fidiv
call
fdiv
rol
lahf
mov
xor
adc
mov
jp
add
adc
mov
repnz
scas
(bad)
hlt
dec
inc
jae
test
fadd
pop
call
hlt
sbb
dec
mov
mov
xor
adc
cmp
and
test
jl
outs
adc
enter
repz
inc
adc
aaa
jmp
ins
xchg
cmp
push
imul
mov
push
(bad)
jmp
aas
jno
stos
pop
fcomp
lods
push
pop
into
lahf
sbb
jmp
mov
ins
(bad)
gs
das
lea
xlat
push
mov
sbb
dec
fnstcw
je
loopne
jno
lds
dec
ja
bound
add
js
dec
ret
inc
into
pop
and
mov
mov
xchg
sar
(bad)
inc
sahf
repnz
mov
mov
mov
pop
call
shr
shl
adc
(bad)
(bad)
mov
scas
jmp
push
jle
mov
stos
ds
clc
pop
ds
pop
or
and
push
fcomp
scas
pop
push
pop
push
add
pushf
mov
pop
stos
fsubr
push
add
(bad)
push
ins
jg
inc
adc
xor
push
mov
nop
or
or
adc
daa
nop
sub
into
fimul
cmp
ins
ret
pop
(bad)
(bad)
rcr
adc
mov
fst
dec
lahf
push
push
hlt
push
fild
fidivr
imul
adc
not
cdq
dec
popf
out
rol
gs
loopne
jb
or
dec
push
cmp
cmp
cmps
cmovge
stc
nop
inc
mov
push
retf
std
rcl
mov
jl
cmp
inc
dec
pop
fistp
mov
call
clc
lods
pop
pop
adc
scas
add
pop
popf
stos
cli
xor
cmp
mov
add
js
adc
xor
arpl
mov
mov
mov
test
adc
pop
movs
ss
rep
dec
popf
xor
push
or
sbb
popa
ins
das
add
or
shl
or
fs
clc
xor
sbb
inc
jb
sbb
xor
push
out
shl
or
addr16
pop
sbb
add
xchg
jecxz
stos
mov
xlat
test
fwait
sti
out
pop
mov
ss
std
ja
or
daa
mov
test
or
fcomp
stos
and
out
sub
adc
arpl
sub
popf
jp
mov
xor
inc
cwde
pop
out
mov
fwait
sahf
jb
jge
push
cmp
mov
je
stos
pop
mov
dec
pushf
aam
and
adc
inc
inc
(bad)
out
adc
mov
mov
loop
test
inc
pop
and
cs
push
shl
and
add
push
dec
test
ret
inc
pop
inc
(bad)
xchg
call
lods
bound
cdq
dec
ds
in
inc
ins
xchg
jmp
stc
dec
movs
mov
xor
push
pop
aam
xchg
push
cmp
popa
mov
retf
dec
push
xor
mov
xchg
or
jmp
aaa
pop
adc
test
push
icebp
mov
call
cwde
push
push
pop
or
scas
cmps
pusha
lods
outs
mov
test
sub
fsub
xor
int
xchg
ins
movs
dec
fist
lahf
add
clc
mov
and
addr16
loop
(bad)
fbld
lahf
mov
adc
pop
jl
adc
xor
push
and
mov
imul
lahf
pushf
mov
(bad)
jl
mov
or
jle
rcl
pop
(bad)
out
cmp
or
sbb
lds
out
mov
push
push
sub
into
iret
adc
adc
popa
int3
cwde
inc
sbb
int3
pop
jmp
(bad)
xor
js
gs
dec
shr
lahf
in
mov
push
pop
int3
lds
and
jb
xor
xor
mov
dec
sbb
popa
jno
jp
dec
and
mov
pop
jns
inc
(bad)
xor
xor
sub
popf
outs
pop
push
mov
nop
fwait
sub
dec
add
add
std
xor
mov
jp
(bad)
xor
stos
push
das
outs
xchg
ins
movs
xchg
sbb
js
je
fdivr
pop
and
mov
jmp
sbb
lea
ds
xor
jle
iret
inc
jmp
xchg
ror
lods
xor
pop
sbb
leave
nop
pop
jo
xchg
bound
mov
stc
aaa
rcr
sub
mov
push
xchg
and
lahf
xchg
cmp
mov
push
jp
repz
test
repz
xlat
jl
pop
fsub
jns
xor
mov
in
call
ins
xor
push
scas
jp
loope
xor
xor
outs
push
lock
stos
arpl
dec
shr
popa
ror
mov
mov
rol
out
xor
mov
popf
jb
xchg
cli
ins
hlt
jae
in
popa
cmp
jnp
add
sub
dec
pop
mov
mov
out
or
lds
xchg
mov
mov
ins
dec
and
ds
lahf
push
cmps
loope
mov
and
cmp
jg
and
jb
adc
fdivp
xchg
loopne
sub
mov
(bad)
out
cld
retf
js
xchg
scas
xchg
aad
pop
xor
pop
or
sub
ror
xchg
loope
xor
mov
cwde
(bad)
mov
pop
rcr
jg
mov
fnstenv
aas
addr16
inc
sub
mov
push
and
cmps
dec
inc
aad
and
(bad)
and
les
pop
loope
mov
inc
inc
add
lea
pop
repz
lods
cmp
jnp
std
mov
cdq
pop
xchg
(bad)
jns
iret
pop
cli
xor
test
dec
adc
stos
mov
cmps
mov
xor
sub
test
xchg
mov
mov
pushf
scas
fdiv
ja
repnz
fstp
popa
movs
mov
add
pushf
inc
and
pop
sti
xchg
add
cmp
int3
fcom
gs
lock
les
ds
cwde
pop
inc
mov
mov
inc
pop
mov
pusha
clc
aaa
xor
popf
lea
int
test
mov
mov
movs
add
mov
call
and
aas
mov
jae
scas
leave
xchg
sbb
outs
in
out
out
dec
cmp
inc
mov
sub
popf
outs
lock
mov
test
pop
icebp
nop
adc
inc
stos
dec
push
inc
add
xlat
or
push
out
sti
mov
lods
stos
pop
repnz
ins
pop
arpl
addr16
push
cmp
push
cmc
pop
or
jecxz
push
inc
mov
sub
popa
fsub
mov
and
test
xor
retf
call
inc
stos
and
mov
cmp
scas
ss
mov
push
add
or
mov
shr
daa
sbb
fdivr
addr16
out
dec
inc
mov
in
addr16
aad
loope
adc
out
in
or
pushf
xor
sar
call
test
jle
xlat
mov
jg
lock
xor
int
jnp
in
outs
lods
test
das
jge
adc
add
mov
jae
adc
pop
xchg
cmps
cmp
mov
xchg
out
push
inc
les
dec
icebp
cmp
popa
xchg
jecxz
add
ficomp
adc
cmp
pop
dec
or
aad
and
sub
je
(bad)
addr16
ret
pop
adc
arpl
mov
jl
sub
cmps
stos
xor
pop
pop
mov
mov
shr
cdq
cld
aad
ret
in
mov
movs
in
loope
pop
push
push
adc
xor
xor
gs
pop
xchg
inc
je
dec
cwde
cmps
ds
adc
nop
mov
(bad)
and
mov
int3
ja
(bad)
mov
and
outs
pop
dec
(bad)
sub
das
(bad)
cmp
out
jae
jg
data16
jns
pop
mov
xchg
pop
in
push
nop
inc
aad
arpl
rol
xchg
and
dec
cmp
sub
aam
mov
mov
ror
mov
sbb
xchg
jg
mov
push
cmp
and
or
xchg
leave
push
mov
pop
repz
lods
or
jecxz
mov
loopne
mov
call
mov
sub
fsub
adc
popf
inc
movs
sub
loopne
and
lea
movs
pop
pop
(bad)
jns
retf
mov
lds
push
add
push
dec
repz
xchg
jecxz
mov
xor
push
mov
jmp
mov
js
arpl
sub
sub
dec
mov
push
mov
fisttp
(bad)
push
mov
fdivr
dec
xchg
jbe
xor
shl
adc
sub
ret
inc
popf
or
adc
inc
mov
popa
pop
sub
mov
lods
mov
pop
iret
dec
dec
scas
push
sbb
(bad)
out
std
adc
mov
lahf
sub
jmp
neg
push
jnp
xor
dec
jae
call
rol
(bad)
mov
or
jmp
jno
cmp
out
jno
xchg
jge
rcl
or
push
xchg
fwait
rcl
push
adc
xor
mov
mov
icebp
std
in
gs
sub
jecxz
sbb
push
cli
loopne
add
and
or
push
mov
inc
sbb
sbb
shr
test
js
adc
(bad)
(bad)
mov
adc
add
ret
(bad)
xlat
dec
dec
in
push
imul
xor
push
dec
movs
mov
inc
sub
push
rcl
nop
out
and
in
sub
push
mov
jns
jmp
lods
(bad)
jb
loopne
sbb
mov
data16
inc
cmp
sub
ins
jmp
push
retf
cmp
shl
fsub
scas
inc
pop
mov
push
sti
pop
(bad)
sar
nop
and
sub
gs
jne
ins
dec
out
dec
xor
adc
pop
mov
mov
mov
pop
or
or
xchg
lea
pop
fnstsw
loope
scas
inc
sbb
cs
(bad)
icebp
sub
leave
sti
repz
or
jl
or
aad
ins
mov
mov
mov
cwde
adc
mov
jnp
mov
fnsave
adc
fld
jne
or
pop
sbb
sar
jnp
(bad)
out
or
popf
inc
stos
(bad)
leave
cmp
je
or
push
(bad)
xchg
sub
or
(bad)
lds
pop
call
cmp
push
pop
sub
cmps
rol
shl
pop
mov
retf
ror
mov
jbe
fs
ins
jb
clc
(bad)
std
xchg
lahf
addr16
pop
int3
lahf
mov
dec
test
cmp
push
popa
loop
xor
adc
iret
ss
popf
push
mov
adc
dec
pop
or
mov
jle
scas
cmp
xor
mov
pusha
in
cmp
jl
mov
leave
je
xor
push
sbb
imul
mov
shr
pop
neg
jle
aas
add
inc
cmp
icebp
(bad)
add
pop
jb
push
xor
mov
cmp
fldcw
mov
nop
cmc
inc
sbb
test
aam
pop
mov
cmp
les
cs
inc
push
xlat
push
fcomp
mov
arpl
jg
mov
out
ins
push
mov
int3
fcmovnbe
retf
popf
inc
lods
dec
iret
cs
or
mov
je
mov
jne
mov
push
mov
push
xor
adc
lods
icebp
inc
or
clc
mov
cmp
xchg
mov
pop
xchg
and
lahf
push
sbb
les
xchg
mov
add
shl
test
cmp
test
add
inc
mov
xchg
xchg
(bad)
cmp
pop
cdq
sbb
(bad)
cmps
push
sbb
imul
sub
xor
rol
dec
imul
pop
jo
icebp
xor
rol
pop
xchg
mov
add
leave
or
mov
cmc
(bad)
loop
dec
xor
and
jl
xor
jb
and
and
mov
or
or
add
shl
popa
dec
cmp
mov
aam
dec
push
leave
cmp
dec
sbb
ret
popf
je
dec
fcomp
in
(bad)
mov
ja
cmc
or
(bad)
(bad)
retf
ds
dec
ret
in
out
mov
adc
mov
jge
lock
pop
add
out
push
mov
daa
rcl
ffree
pop
cmc
xchg
xchg
xchg
dec
lock
dec
test
out
cwde
mov
imul
jg
(bad)
pop
or
stc
out
or
pop
push
lods
xor
xlat
jns
jge
mov
jmp
js
dec
pop
mov
add
sti
stc
and
jo
cmps
aaa
pop
je
jmp
sub
pop
movs
gs
push
adc
rcl
cs
(bad)
stos
(bad)
fdivr
add
jo
outs
sub
mov
mov
pop
inc
popf
aaa
mov
retf
js
(bad)
jns
sti
outs
dec
push
adc
dec
cdq
mov
lea
mov
fwait
or
inc
js
jbe
inc
or
mov
(bad)
pushf
mov
test
sbb
gs
pop
daa
fadd
xor
fbld
push
ds
pop
xor
pop
(bad)
or
cld
pandn
cmp
adc
pop
inc
popf
mov
bound
dec
adc
and
jg
cmp
(bad)
adc
cmps
inc
test
ret
mov
sub
sub
xchg
inc
retf
cdq
jp
ss
pop
mov
cdq
jb
jle
je
mov
push
xchg
daa
adc
lods
xor
mov
out
sbb
mov
(bad)
mov
pop
mov
fimul
cmp
xchg
cld
mov
fs
inc
mov
gs
mov
stos
lods
shl
mov
jo
cmps
sbb
arpl
and
dec
hlt
in
movs
imul
or
f2xm1
movs
or
sub
aad
arpl
lock
inc
push
stos
mov
(bad)
(bad)
sbb
add
in
out
loope
js
dec
add
ds
es
push
imul
test
adc
xchg
repz
mov
rcl
sub
aam
push
cmc
mov
or
(bad)
stc
je
pop
imul
pop
mov
jl
outs
ret
icebp
fist
int3
dec
test
add
push
fnstcw
aad
inc
arpl
aaa
nop
mov
xor
push
mov
imul
gs
repnz
(bad)
test
cmp
adc
outs
jne
sub
push
test
outs
adc
gs
jecxz
mov
push
int3
mov
test
pop
cmp
cmc
or
mov
mov
push
movs
inc
ins
repz
and
pop
xchg
(bad)
cmc
dec
cli
cwde
cmp
std
stos
adc
mov
clc
sbb
mov
sbb
pop
push
push
(bad)
sbb
repnz
pop
fwait
jb
fcom
jl
mov
mov
add
adc
test
push
xor
jmp
jbe
mov
into
adc
push
add
mov
pop
lds
cmp
dec
retf
dec
call
cmp
lock
and
repz
fs
ja
pop
push
clc
inc
les
inc
repnz
cmp
sbb
(bad)
mov
ins
fscale
bound
out
test
jo
sub
push
test
dec
cdq
mov
inc
jns
in
xor
jne
loope
popf
xor
daa
test
and
rcl
imul
xchg
(bad)
arpl
pop
mov
adc
sub
loope
inc
xchg
dec
mov
xchg
or
scas
aaa
ds
push
arpl
adc
les
sar
dec
aad
maxps
fld
adc
sub
push
sbb
out
add
adc
pusha
outs
jg
mov
or
lea
sub
rcr
xchg
test
in
out
push
sbb
inc
or
cld
icebp
or
sahf
mov
loopne
aaa
mov
adc
outs
mov
cmc
dec
push
movs
push
lea
inc
dec
pushf
jg
mov
js
ret
ror
jno
dec
sbb
iret
sub
dec
sbb
pop
loopne
stos
dec
call
cmp
xchg
movs
and
sbb
dec
inc
xor
mov
mov
pop
retf
dec
sub
cmp
mov
mov
sahf
js
ret
bound
sub
xchg
and
retf
fs
mov
push
sahf
push
sbb
fistp
jle
push
out
int3
sub
(bad)
call
popf
sti
or
xor
adc
mov
arpl
push
xchg
add
das
jae
sbb
neg
cmps
pop
mov
fwait
scas
ja
(bad)
mov
sbb
sbb
adc
stos
adc
fmul
push
in
mov
ja
pop
neg
out
dec
popa
push
mov
mov
pop
adc
shl
jecxz
iret
ins
add
shl
inc
scas
sub
lds
popf
test
mov
sub
vpcmpgtw
pushf
(bad)
adc
xlat
mov
bnd
add
push
cdq
and
das
rcr
scas
les
loop
out
mov
es
ffree
movs
cs
daa
sbb
and
int
xor
cmp
sub
pop
mov
icebp
jmp
lds
ret
fiadd
mov
cdq
leave
iret
aad
jp
cwde
mov
outs
or
jno
adc
jnp
data16
adc
jne
mov
mov
or
(bad)
loope
xchg
nop
inc
mov
jg
ja
add
adc
movs
push
loopne
fcom
push
out
sub
outs
int
lods
icebp
cmp
pop
mov
dec
shl
fnstsw
sahf
pusha
xlat
sti
push
daa
or
bound
loopne
ins
shr
scas
lock
dec
and
jno
jg
dec
arpl
fdiv
xchg
mov
ficom
cmc
je
sub
push
(bad)
mov
xchg
jle
pop
gs
cmps
xchg
add
or
outs
repz
mov
loopne
arpl
test
(bad)
push
xchg
and
xchg
shl
ds
xchg
dec
les
sbb
cli
test
add
xchg
pop
scas
adc
mov
jg
std
pop
mov
jle
ret
retf
and
cld
stos
sbb
pop
pop
ja
test
xchg
jecxz
inc
mov
pop
movs
imul
mov
mov
or
sete
sbb
xchg
aas
stos
adc
jne
xor
leave
xor
mov
mov
ss
(bad)
xchg
shl
test
test
cld
mov
dec
cmp
out
jns
js
iret
push
dec
hlt
test
cmp
jnp
outs
(bad)
pop
loopne
stos
fadd
fcom
adc
push
ret
xlat
cs
addr16
add
imul
shl
xor
xchg
in
jbe
or
cdq
push
and
sbb
cmps
lods
leave
jbe
into
fcmove
sbb
cmps
pop
inc
push
lods
mov
cmps
dec
je
inc
cmp
dec
test
cwde
push
test
sbb
jmp
pop
out
popf
dec
fcomp
cmp
and
sbb
mov
cmp
shl
data16
push
mov
lock
mov
mov
jp
sub
adc
push
pop
inc
retf
or
sub
dec
cld
int3
cwde
(bad)
push
push
mov
gs
fiadd
jae
mov
sbb
fimul
inc
popf
mov
jo
outs
scas
jle
imul
push
in
jo
mov
mov
add
cmc
(bad)
fcomp
ds
and
pop
inc
jp
add
inc
push
pop
js
(bad)
sar
dec
fst
sti
aas
or
test
push
jmp
data16
lock
pop
push
jecxz
xlat
rol
imul
jecxz
mov
cmp
pop
fistp
mov
repz
fisttp
jbe
jo
xchg
xlat
mov
cwde
jge
push
inc
aad
test
or
inc
inc
(bad)
pop
movs
imul
xor
pop
mov
inc
mov
xor
retf
jge
xchg
pop
test
ret
lods
pop
sub
ja
cmps
pop
aad
arpl
movs
xchg
or
push
pop
call
mov
mov
xor
lea
cwde
inc
pushf
fnsave
adc
ds
xchg
sbb
aaa
jbe
jnp
xchg
hlt
arpl
ret
or
int3
iret
inc
xchg
jmp
imul
int3
adc
dec
pop
lds
pop
je
aad
mov
(bad)
cmps
data16
lods
cs
xchg
cmp
or
data16
fsub
sti
inc
mov
jmp
mov
adc
ins
adc
or
xor
jbe
dec
(bad)
and
fnsave
mov
mov
dec
or
xchg
xchg
xchg
outs
sbb
(bad)
arpl
fcmovnb
and
adc
cmp
and
mov
repnz
in
ja
outs
out
and
add
push
or
fcomp
xchg
jle
jae
ret
fmul
sub
jecxz
mov
dec
push
aad
mov
mov
push
pusha
stos
inc
sbb
xchg
pop
in
jg
add
sub
mov
xor
cmps
pop
jmp
cwde
xchg
adc
and
arpl
mov
cld
pop
ficomp
pop
shl
jle
mov
outs
pop
mov
or
ja
adc
mov
mov
inc
rol
outs
adc
cmps
sub
sbb
aaa
sub
fsub
jns
mov
cmp
pop
lock
or
jecxz
cli
adc
xlat
sbb
xchg
cli
out
jae
test
in
outs
popf
into
pop
arpl
sbb
jle
dec
mov
mov
lods
aam
test
inc
sub
sar
add
push
cmp
adc
mov
mov
mov
icebp
sub
mov
cli
shl
enter
scas
push
inc
or
fdiv
(bad)
movs
cmp
outs
imul
lods
cld
xor
retf
mov
sub
movs
xor
mov
retf
scas
mov
jb
neg
icebp
icebp
pop
rcl
popa
mov
aaa
add
push
mov
retf
clc
dec
cmps
std
xchg
jb
imul
dec
or
rol
fild
push
xor
out
mov
pushf
dec
iret
add
fstp
cmp
retf
test
or
es
mov
test
call
mov
and
in
in
pop
or
call
es
outs
mov
sub
pusha
xor
and
lock
in
mov
mov
shl
jmp
add
ins
popf
je
and
hlt
sahf
out
(bad)
and
cmp
sub
lds
adc
bound
cdq
(bad)
pop
adc
pop
setbe
pop
pop
dec
inc
inc
call
mov
es
retf
aaa
rcr
mov
mov
rcr
cmp
mov
mov
adc
(bad)
jno
call
(bad)
fsubr
dec
push
(bad)
js
loope
in
not
sbb
or
dec
mov
mov
and
(bad)
aad
pushf
and
pop
adc
int
jle
mov
pop
loopne
cmps
dec
movs
idiv
sbb
jecxz
and
xor
sub
mov
jp
daa
xchg
call
cli
or
icebp
out
inc
call
nop
cmps
in
sub
xchg
data16
ins
pop
popa
fld
imul
cld
pop
pop
ds
shl
inc
fs
shr
test
call
outs
push
mov
fst
pushf
jmp
dec
int3
nop
imul
push
add
pop
xchg
imul
imul
inc
lds
je
shl
out
and
inc
pop
repnz
pop
mul
jmp
(bad)
xchg
add
xor
push
mov
(bad)
fadd
lods
xor
stc
hlt
add
shr
adc
(bad)
not
or
add
xlat
adc
push
jmp
cmc
pop
cwde
inc
fwait
adc
jns
mov
hlt
repnz
in
and
cmp
inc
fwait
int
call
mov
sbb
shl
xchg
(bad)
pminsw
or
cmps
ds
push
call
(bad)
xchg
int3
loope
ins
stc
inc
mov
push
xor
ficomp
(bad)
pusha
shl
pop
and
pusha
das
push
sub
popf
cmp
test
push
std
cs
fild
jl
push
and
adc
retf
in
and
jmp
jbe
xchg
fpatan
push
jns
xor
adc
cmp
inc
out
dec
repnz
loope
add
in
inc
aad
psrld
popf
(bad)
push
add
xchg
xchg
dec
call
retf
or
cwde
daa
aas
mov
cwde
(bad)
adc
jbe
fistp
jl
int3
cmp
(bad)
adc
out
sub
add
clc
retf
imul
mov
(bad)
mov
mov
adc
pop
mov
mov
push
mov
pop
fisttp
mov
(bad)
pop
mov
call
mov
inc
ja
call
xchg
sub
push
mov
jecxz
push
pop
rcr
in
outs
in
sub
hlt
xor
pop
test
test
jns
dec
dec
fmul
into
(bad)
pop
lea
(bad)
adc
push
and
dec
push
inc
sub
push
je
mov
daa
cs
sbb
jbe
jo
int3
or
(bad)
pop
lods
popa
ret
jbe
ins
sub
pop
adc
call
jae
jmp
jns
cmp
mov
jns
int3
out
push
jne
into
cmps
mov
pop
bound
jmp
sub
aaa
mov
ins
out
imul
mov
loopne
in
ror
unpckhps
inc
icebp
sub
jnp
push
sub
and
and
ficomp
dec
inc
sbb
dec
mov
fldenv
aad
mov
retf
lds
push
pop
movs
mov
test
test
mov
clc
push
shr
jo
pop
push
inc
dec
inc
arpl
push
push
or
stc
loop
pusha
jge
xchg
aaa
or
sub
mov
ret
xchg
jle
enter
popf
movs
mov
xlat
inc
int
loopne
ret
stos
fbstp
in
or
test
inc
cmps
scas
pop
pop
lods
repnz
dec
je
out
pop
sub
mov
out
loop
xlat
(bad)
xor
push
xor
enter
into
lods
loope
inc
out
arpl
push
sbb
push
lods
cmps
xchg
call
inc
xchg
fisubr
xchg
shl
mov
adc
cmc
inc
outs
pop
call
sahf
je
ja
mov
dec
lods
fnstcw
rcr
shl
mov
shl
lea
rol
(bad)
shr
add
push
jle
pusha
xchg
data16
inc
inc
movs
fwait
lods
add
inc
push
imul
inc
pop
repnz
inc
sub
dec
adc
sub
sub
xor
cmp
in
xchg
shr
daa
test
icebp
or
ficom
cmp
imul
adc
ror
and
pushf
push
pop
scas
dec
xor
add
pop
cmps
out
mov
jno
mov
out
fcom
mov
cmp
es
stos
fwait
add
dec
icebp
sahf
iret
sbb
xor
sbb
fwait
outs
in
aaa
jl
add
fist
cmc
retf
dec
stos
mov
dec
inc
retf
and
pop
je
js
jb
aad
mov
or
lds
add
dec
jbe
sub
xlat
add
push
jmp
es
jmp
aad
shl
gs
ja
jno
nop
lea
rcr
mov
mov
pop
inc
stc
rcr
xchg
sbb
mov
inc
adc
cmps
xchg
shr
or
xchg
add
push
xchg
enter
imul
pushf
mov
ins
push
daa
mov
adc
mov
jns
(bad)
outs
jb
pop
mov
pop
adc
jb
mov
xchg
loope
add
mov
inc
mov
push
ret
test
dec
push
xlat
call
fisttp
shl
xor
mov
add
jnp
(bad)
mov
lods
dec
pusha
into
mov
ja
ins
rcr
mov
inc
mov
or
xchg
test
add
int
loope
rcl
mov
push
in
mov
xchg
pop
addr16
inc
js
shl
ja
xchg
popa
bound
xchg
ja
sti
ret
sub
rcl
psubq
sub
loopne
idiv
inc
mov
xchg
mov
mov
outs
pop
(bad)
clc
add
cdq
hlt
test
push
inc
dec
pop
loope
push
add
cmp
shr
arpl
mov
loop
std
loopne
inc
dec
in
xchg
push
test
push
daa
xlat
sti
ret
hlt
and
iret
add
lea
int3
imul
pushf
call
retf
in
jb
aas
sbb
sbb
cmp
out
push
adc
cmp
int
sub
cmp
ret
call
xor
pushf
ror
sbb
pop
push
ds
inc
sub
aad
xchg
or
mov
and
std
pop
cmp
call
repz
imul
lods
mov
retf
inc
and
adc
and
test
cmps
sbb
cld
xchg
sbb
sub
inc
in
enter
pop
fidivr
addr16
shl
mov
ds
es
push
fsubr
int
aam
std
push
add
aas
push
sbb
jle
xchg
add
ins
mov
cmp
push
(bad)
jmp
movs
xor
cmp
movs
popf
clc
jg
cmp
mov
rcr
xor
ja
cmp
push
loopne
lea
cdq
test
jle
ret
push
push
and
adc
retf
xchg
mov
push
dec
dec
push
iret
xlat
cmc
loopne
dec
push
retf
scas
enter
enter
adc
sbb
xchg
test
aad
cld
mov
pop
xchg
xchg
push
stc
aad
js
addr16
and
sbb
popa
imul
repz
push
repz
out
or
pop
scas
sub
jp
mov
int
and
bnd
push
add
mov
jl
dec
push
cmps
or
cli
(bad)
xchg
out
int
mov
mov
(bad)
fdivr
add
int3
cmps
retf
jg
cmp
adc
outs
pop
dec
loop
mov
push
ins
popa
or
xchg
out
or
mov
cmps
popf
inc
int3
(bad)
call
call
pop
bound
push
test
adc
pusha
inc
dec
je
inc
sahf
and
jno
sub
sbb
setbe
jo
sbb
xchg
adc
mov
js
mul
cli
int
mov
pop
idiv
or
js
xor
xchg
arpl
repz
xor
dec
and
sub
arpl
or
mov
adc
or
push
mov
jl
push
add
cmp
sub
add
push
ja
int
aam
mov
and
loope
repnz
pop
jmp
enter
xor
cli
movs
aas
hlt
adc
push
cwde
pop
das
sbb
mov
mov
mov
out
mov
je
aaa
iret
icebp
and
test
adc
jnp
push
mov
jge
push
int3
and
mov
pushf
mov
cmc
(bad)
pop
arpl
gs
sub
retf
aas
js
pusha
cmp
pop
movs
mov
stos
mov
js
and
mov
ds
pop
sbb
lods
leave
jl
or
dec
clc
out
ret
xor
mov
jp
xor
pop
sub
aad
sti
and
push
pushf
pop
jl
dec
es
dec
pop
mov
test
fs
leave
cli
mov
mov
(bad)
mov
dec
mul
mov
int3
mov
int3
jnp
jb
mov
outs
xor
and
jecxz
mov
mov
arpl
(bad)
mov
mov
test
test
sbb
adc
and
out
(bad)
loope
ret
cmp
fst
jns
sti
popf
inc
stos
clc
popf
xchg
call
dec
or
sub
adc
test
js
or
xor
(bad)
mov
push
add
jl
in
push
sbb
call
mov
sub
mov
mov
dec
pusha
jp
mov
pop
movs
(bad)
ds
or
movaps
xchg
shr
jbe
mov
je
fwait
les
ror
je
(bad)
jmp
scas
ja
pop
(bad)
das
adc
sub
repz
push
inc
push
mov
pshufw
jno
inc
cdq
out
mov
adc
jne
adc
xchg
rcr
sbb
jbe
push
inc
aad
shr
jle
in
xchg
cdq
call
and
in
fisubr
mov
dec
inc
xchg
xchg
xor
xchg
sub
or
out
icebp
scas
mov
push
or
xchg
loop
sbb
lea
cmc
jge
and
jne
xchg
adc
jle
jl
cmp
cmp
ja
inc
addr16
pop
out
out
xchg
cmp
jae
mov
ret
outs
xchg
cmp
adc
jne
pop
cmps
sbb
and
hlt
and
or
sar
add
ins
add
jge
xchg
setnp
push
fwait
lds
inc
gs
jle
sub
and
out
popf
xor
nop
enter
mov
out
pusha
pop
mov
inc
mov
push
ret
cld
ins
sub
test
(bad)
not
mov
imul
pop
xchg
ins
or
data16
sub
sahf
inc
and
or
ins
fld
(bad)
push
mov
jge
dec
nop
test
iret
mov
lods
add
aam
out
push
xor
dec
or
out
push
aaa
adc
(bad)
retf
lahf
call
popf
shl
cli
les
mov
leave
jne
jnp
fcom
(bad)
nop
xor
outs
rcl
mov
adc
xor
or
pushf
dec
pop
sbb
add
das
cs
popa
cmp
xor
mov
mov
xor
(bad)
and
lahf
mov
and
mov
push
sbb
mov
test
inc
inc
mov
retf
mov
inc
adc
and
in
imul
repz
push
scas
mov
jmp
adc
cwde
push
pop
fs
inc
shl
jmp
das
xor
pop
add
jge
div
add
jecxz
rol
fst
mov
shl
inc
adc
xchg
sbb
shl
enter
and
out
xchg
jmp
fisub
mov
lods
mov
push
les
mov
cmp
xchg
fwait
mov
lock
out
loop
popa
mov
loop
and
dec
nop
enter
cmp
hlt
ret
mov
xor
dec
sbb
xchg
test
add
mov
xlat
nop
js
and
mov
sti
(bad)
lods
(bad)
iret
inc
cmps
data16
add
push
(bad)
push
add
out
sbb
mov
das
cmp
adc
cmp
pusha
das
(bad)
and
das
push
jle
adc
xchg
cmps
mov
push
dec
push
jecxz
or
iret
and
or
pop
jns
mov
or
cmp
aam
test
in
and
mov
pop
jle
and
cli
lock
xchg
mov
push
jl
push
(bad)
(bad)
stos
fistp
ss
mov
popa
retf
test
sub
inc
push
ins
pop
pop
(bad)
ret
ret
inc
les
mov
std
dec
test
mov
imul
js
dec
and
add
test
add
add
cmp
fadd
sub
scas
mov
dec
sbb
test
sub
rol
sub
mov
jg
inc
jg
stc
retf
adc
push
dec
and
push
leave
outs
pop
dec
xchg
dec
setae
dec
xchg
add
stos
cmp
cdq
call
movs
fcom
mov
sbb
push
pop
lds
popa
out
popa
ret
jae
inc
mov
adc
or
adc
std
cld
pop
int
sti
daa
loope
inc
push
jp
shr
xchg
mov
aam
loope
data16
fimul
fcom
dec
into
and
push
pop
push
enter
pop
add
add
test
cld
push
mov
jmp
and
xor
loopne
cli
inc
test
and
test
movs
loop
pusha
fwait
int
jmp
es
in
lock
push
cmp
iret
jns
call
push
jne
fcom
fstp
out
mov
sub
stc
sub
xchg
xor
sub
(bad)
sbb
mov
mov
cmp
lahf
cdq
sti
sub
gs
cmovg
pop
sub
sub
outs
jle
xchg
aad
push
cwde
pop
sbb
nop
push
ds
js
data16
and
sbb
xchg
jmp
or
movs
or
(bad)
adc
push
cmp
inc
mov
repnz
xlat
or
push
popa
loop
pop
iret
pop
or
add
jnp
jecxz
hlt
test
sbb
push
add
jl
xor
cmps
out
push
lods
sbb
jb
arpl
fisubr
retf
fcmovbe
sar
xchg
dec
cmps
add
xchg
adc
xchg
nop
push
add
stc
push
fcmovbe
add
or
icebp
imul
mov
int
nop
mov
pop
adc
call
cld
jge
pop
xchg
(bad)
pop
mov
lods
xor
scas
xchg
mov
jg
imul
dec
pop
cmp
ins
enter
lds
fstp
adc
push
mul
inc
or
fst
xlat
inc
inc
fimul
repnz
movs
push
icebp
xor
mov
mov
pop
push
and
adc
and
das
xchg
jl
cwde
pop
stos
lahf
xchg
jmp
and
cmp
pusha
or
repnz
mov
popf
push
dec
mov
not
xchg
imul
adc
pop
mov
dec
mov
dec
test
je
pop
out
adc
arpl
pop
pop
in
lods
or
jno
sahf
imul
into
mov
push
aad
add
leave
or
cmp
sbb
jb
bnd
dec
cmp
jl
cmps
das
push
and
test
jp
scas
imul
push
stos
cmc
push
cmp
movs
rol
call
or
mov
pushf
cmp
inc
shl
fdivr
shr
loope
fisub
inc
xchg
scas
xchg
push
inc
mov
mov
pop
data16
ret
push
push
call
push
xor
(bad)
imul
mov
fidivr
mov
pop
movs
sub
test
push
push
push
in
call
mov
pop
push
mov
xchg
pusha
arpl
cmp
push
adc
popa
ds
retf
push
mov
jmp
add
out
test
hlt
ror
adc
mov
(bad)
jb
in
or
retf
ja
sub
ret
or
int3
add
adc
call
jg
enter
outs
sub
mov
(bad)
out
int3
je
fistp
fmul
das
xor
lds
jbe
clc
cmp
mov
ror
or
out
test
xlat
and
cli
sub
mov
pop
iret
push
cmps
ins
inc
sti
cmps
jb
sbb
dec
add
pop
inc
into
call
movs
test
xlat
sub
xchg
outs
xor
jnp
inc
sbb
xor
sub
aaa
dec
push
aaa
test
xchg
cmps
mov
add
sub
cwde
(bad)
fidivr
jo
push
or
movs
push
les
aas
cld
frstor
and
adc
xor
pusha
je
popf
aad
leave
popa
adc
call
cmp
dec
inc
xor
js
into
inc
mov
fisttp
out
stos
icebp
pop
and
into
pop
mov
adc
lds
jmp
sbb
aam
sti
mov
mov
dec
std
xchg
call
push
push
or
ins
or
jo
push
repz
sbb
or
jo
mov
scas
ins
rol
add
jp
ret
xor
ret
dec
stos
jp
dec
je
pop
cmp
cli
mov
cli
mov
mov
inc
sub
inc
jecxz
fbld
xchg
add
jno
(bad)
ins
enter
test
retf
mov
push
test
add
pop
aad
jge
test
outs
dec
fisttp
ss
mov
js
bound
sbb
add
cmp
xor
or
mov
fs
rol
pop
rol
scas
es
or
fsub
inc
stc
adc
add
mov
push
or
push
sbb
fisttp
retf
scas
stos
push
xchg
lock
sbb
jp
bound
jnp
cwde
test
sub
data16
jns
pop
inc
data16
sbb
push
in
or
nop
pop
xor
jae
retf
(bad)
int
dec
add
jmp
ret
jmp
mov
imul
dec
xchg
(bad)
aaa
aad
test
pop
call
mov
and
push
hlt
adc
stc
push
mov
pop
xor
xlat
push
test
add
xchg
gs
mov
jl
push
aas
int
jb
js
ins
or
push
test
inc
ror
or
xchg
pop
cwde
push
pop
jl
shl
repnz
test
xor
pop
div
xchg
push
aaa
int3
rcr
sub
lods
inc
int
sti
rol
retf
call
in
jmp
cmp
test
inc
xchg
mov
aad
adc
inc
or
push
and
clc
call
xchg
stos
in
fist
stos
mov
xchg
enter
fnstsw
int
sub
test
mov
ins
bound
jne
rcr
(bad)
sbb
pusha
into
test
xchg
push
mov
mov
shl
out
inc
mov
imul
mov
icebp
shl
ret
std
jns
pop
add
call
adc
xor
nop
pop
add
mov
xchg
inc
out
add
out
sar
pop
std
and
add
dec
ds
jbe
cdq
jle
jo
repz
and
std
mov
add
push
push
inc
les
mov
aad
iret
retf
es
retf
fsubr
rcr
push
xchg
adc
sub
aaa
xor
push
mov
inc
jae
mov
adc
jns
fwait
iret
mul
dec
xor
fld
jge
mov
jmp
(bad)
fwait
(bad)
mov
mov
fimul
aas
jno
inc
lods
jg
mov
enter
lea
push
jecxz
mov
inc
or
icebp
ror
cmp
sar
push
ds
aaa
adc
inc
xchg
sti
cmp
(bad)
movs
mov
or
pop
js
movs
jbe
mov
outs
popf
and
mov
outs
scas
pop
bound
stc
adc
out
push
mov
fimul
push
or
and
pop
mov
or
addr16
lock
out
fnstsw
ret
es
retf
lods
cld
ins
(bad)
and
nop
jo
aas
xchg
call
loopne
xchg
xchg
imul
dec
jle
mov
sbb
xchg
lock
retf
enter
ret
into
jp
jle
pop
jae
add
jnp
leave
fisub
rol
push
mov
mov
mov
mov
sbb
mov
push
ror
ret
push
stos
mov
ins
aaa
stos
(bad)
fcmovbe
jmp
add
ja
iret
mov
ss
fidivr
pop
out
in
icebp
jl
push
jle
ja
mov
sahf
xchg
add
or
sub
cmp
and
xor
mov
mov
pop
xor
clc
jmp
push
(bad)
mov
cmp
dec
mov
push
cmp
shl
aam
cmp
pop
xor
cmp
adc
jg
adc
cwde
mov
and
xchg
jle
dec
adc
leave
jl
sub
mov
cs
out
fsubr
sar
call
pop
nop
mov
push
inc
test
enter
push
jle
push
clc
aam
mov
add
cs
arpl
movs
fsub
mov
daa
add
mov
paddsw
movups
jecxz
lods
(bad)
mov
push
cwde
mov
sub
stos
cli
pop
scas
cmp
push
pusha
sub
mov
adc
cdq
adc
test
mov
mov
cmp
mov
mov
loopne
mov
je
dec
push
enter
xchg
mov
mov
mov
add
mov
xchg
inc
retf
inc
lods
pop
les
pop
lods
aad
pusha
xor
push
ret
mov
jl
ja
lods
in
push
ins
dec
push
movs
dec
popf
(bad)
jle
aas
mov
xor
sub
iret
xchg
xchg
adc
cwde
pmaddwd
inc
cmp
mov
jmp
bound
inc
inc
sbb
fcomi
sub
aam
mov
scas
mov
cmp
adc
adc
cmp
or
test
mov
cmc
cmp
iret
jmp
mov
mov
jle
mov
jecxz
xor
jb
xchg
fisub
icebp
ret
inc
push
in
jmp
repnz
mov
mov
je
push
jmp
mov
loope
(bad)
pop
ins
(bad)
or
inc
pop
jmp
scas
xchg
fisub
outs
mov
int3
mov
ja
mov
fld
cld
inc
xor
dec
fbstp
nop
or
push
sbb
cmps
xchg
mov
sbb
add
pop
pusha
gs
loope
iret
and
loop
push
cld
and
push
retf
push
mov
inc
fcom
ror
scas
stc
into
out
xchg
das
in
xchg
push
pushf
mov
push
nop
mov
push
sub
adc
movs
jg
(bad)
cmp
mov
xor
movs
rcl
fisubr
js
jle
leave
cld
add
add
imul
adc
mov
mov
add
arpl
popf
lahf
enter
in
push
adc
lahf
mov
aaa
push
imul
jmp
mov
aam
push
mov
inc
mov
popf
test
jg
pop
ss
mov
pop
and
dec
dec
lahf
jmp
xor
(bad)
leave
jmp
loope
mov
fwait
push
mov
mov
jb
dec
fwait
push
dec
mov
leave
sbb
fs
lods
jo
ret
ret
adc
repz
and
dec
jne
mov
pop
mov
int3
jo
push
jbe
push
mov
mov
push
mov
rol
mov
cmp
mov
sbb
dec
mov
sub
push
mov
sbb
push
sub
jmp
stos
jge
in
and
outs
xchg
adc
dec
dec
dec
cmp
sbb
clc
push
xchg
add
dec
push
inc
pop
dec
stc
cmp
fsubr
jmp
sbb
push
sub
dec
aad
ins
mov
jle
jbe
mov
and
mov
cwde
std
push
inc
popa
push
pop
jns
ja
mov
mov
ja
enter
push
ins
test
data16
mov
fmul
mov
nop
jle
cmps
lahf
fld
mov
inc
int3
sub
inc
ret
ins
adc
jns
fld
ds
jmp
dec
rol
fsubr
cld
das
add
repz
ret
cwde
shl
pop
popf
sar
jle
repz
cmps
ins
or
mov
sub
cmp
imul
xchg
xor
mov
dec
daa
scas
shr
scas
cmp
pop
pop
rcr
adc
(bad)
imul
repnz
bound
clc
adc
jmp
xor
or
out
out
aas
fst
pushf
adc
aam
sbb
lods
cmp
push
inc
and
jmp
cmps
popw
std
fdiv
pop
clc
xchg
jmp
sub
push
ins
xor
lds
sub
sub
rcl
outs
ins
push
jp
mov
adc
sub
sub
add
jns
push
aas
out
cmp
cmp
mov
(bad)
into
or
xchg
and
mov
lds
push
mov
das
loop
mov
push
push
sahf
out
mov
ins
or
push
cmp
inc
jle
imul
(bad)
arpl
mov
imul
mov
ins
into
jno
neg
xchg
sbb
xchg
in
cmp
daa
fcomip
add
jl
cmps
push
cmc
adc
jo
sbb
lea
rol
iret
mov
or
fldcw
out
sub
aad
aaa
int
sub
xchg
rol
sbb
cmc
inc
xor
aaa
sub
scas
out
pop
cmp
jmp
loopne
sbb
xchg
xor
call
dec
cmps
loop
retf
test
and
cmp
call
fwait
lods
mov
pop
iret
fcom
inc
add
jp
sbb
popa
fmul
mov
repnz
mov
sahf
pop
pop
add
pop
push
retf
fs
xchg
xchg
add
and
mov
pop
mov
xchg
mov
xchg
repnz
dec
outs
(bad)
push
xor
sub
popf
mov
pop
cmp
adc
push
xor
xor
xor
mov
aas
nop
cmp
popa
int3
jge
pop
sub
stc
inc
mov
add
push
or
mov
repnz
cdq
hlt
jae
sbb
mov
sub
mov
fidiv
(bad)
xor
sub
ret
and
iret
xchg
xchg
xchg
gs
mov
cmp
(bad)
inc
mov
in
outs
sub
clc
sti
fnstsw
jo
push
inc
inc
cmps
inc
pop
pop
ins
enter
sbb
xor
repz
push
jmp
bound
mov
shl
or
xchg
retf
adc
xor
dec
or
sub
pop
mov
sub
mov
in
adc
pop
add
ins
cmp
fldenv
push
or
mov
loop
dec
mov
xlat
and
add
xlat
mov
call
es
fild
arpl
ds
icebp
cmp
pop
mov
mov
ret
aam
movs
call
cmp
rol
jno
jge
and
test
cmps
stc
inc
lea
xor
int
scas
shl
sbb
sub
pop
sti
jle
jge
or
add
outs
ret
inc
lods
out
pop
out
stos
rcl
imul
add
add
jge
inc
push
sbb
inc
ins
scas
push
adc
mov
out
and
push
call
imul
daa
retf
sti
mov
adc
es
test
mov
cs
mov
or
adc
out
mov
cld
cmp
sar
popa
pop
cmp
and
jge
das
out
fucomi
sti
add
neg
xlat
or
repnz
adc
dec
dec
pushf
pop
loop
je
mov
in
xchg
pop
cmp
inc
arpl
leave
jge
mov
push
fsub
adc
call
int
es
push
repnz
add
or
xor
adc
sub
daa
daa
inc
push
icebp
pop
popa
(bad)
dec
arpl
sahf
mov
out
push
sbb
rcr
or
(bad)
bound
inc
js
mov
mov
cwde
mov
sbb
outs
push
arpl
fsubp
add
popf
adc
aas
xchg
stc
inc
mov
jl
std
in
jl
loope
psubw
jnp
popa
mov
pop
add
jb
xor
in
fstp
cwde
out
mov
inc
dec
pop
sub
iret
mov
or
adc
dec
push
add
dec
mov
jno
(bad)
dec
ins
dec
(bad)
jg
in
stos
lea
fmul
jle
sbb
dec
adc
dec
pushf
into
jno
push
cmc
and
fcom
or
mov
dec
push
xor
push
in
ds
inc
ret
mov
out
push
(bad)
pop
shr
sbb
pop
fist
fcomp
add
loopne
js
or
test
add
adc
push
or
aam
icebp
rcr
aas
sbb
idiv
pop
dec
ror
xchg
add
mov
sub
jns
test
lea
call
aad
(bad)
(bad)
fisubr
and
fmul
inc
jle
pop
push
stos
std
xor
cwde
fucomip
lea
xor
pop
mov
sbb
sti
les
not
popa
fisubr
ins
nop
xchg
pop
(bad)
mov
enter
or
(bad)
jmp
adc
sbb
lahf
fwait
push
pop
cwde
and
dec
and
iret
mov
push
mov
lds
stc
stos
lods
mov
test
(bad)
sub
mov
sub
fist
inc
in
dec
mov
loopne
dec
mul
dec
aaa
sahf
mov
sbb
add
and
mov
xchg
mov
sbb
arpl
shl
call
xchg
int
xchg
test
scas
leave
dec
jbe
xchg
xor
sbb
retf
das
cmp
call
push
mov
aam
mov
mov
fisub
btc
pop
or
(bad)
inc
mov
xchg
mov
push
mov
ss
gs
cs
(bad)
mov
stc
or
sahf
jbe
xlat
imul
jl
(bad)
sahf
push
jecxz
ds
ins
pop
jnp
inc
in
xchg
arpl
retf
sub
cmp
jg
test
xchg
mov
jmp
mov
in
jo
fidiv
mov
ds
adc
in
aas
mov
retf
outs
mov
inc
data16
sar
es
adc
mov
fwait
sbb
dec
add
mov
push
or
adc
dec
je
ins
xchg
ss
xchg
ins
inc
or
jl
dec
add
xchg
jmp
push
movs
outs
imul
in
sub
cmp
xor
xchg
pop
xor
retf
jae
cmp
imul
bound
jmp
adc
inc
nop
gs
leave
mov
mov
imul
pop
and
ds
xor
push
ret
or
and
xor
shl
aad
sub
xchg
cwde
jp
pop
addr16
into
inc
(bad)
cdq
pop
sub
jg
clc
int3
jnp
lds
aad
dec
lea
bound
inc
mov
loope
add
xchg
hlt
mov
jmp
clc
xor
dec
push
sbb
xchg
jns
mov
and
or
leave
in
mov
jmp
pop
mov
gs
cli
std
bound
jnp
(bad)
sahf
stos
sub
push
sbb
mov
jg
iret
sar
in
std
loop
out
movs
dec
dec
fisttp
jp
and
fisttp
and
jmp
lahf
mov
sub
jl
dec
call
mov
and
push
jnp
xchg
jl
call
xchg
or
push
mov
pop
and
adc
in
in
call
mov
xlat
push
mov
inc
outs
and
push
sub
fdivp
hlt
adc
cli
inc
in
mov
mov
in
ds
pop
add
outs
pop
inc
pop
call
repz
xchg
mov
clc
daa
popf
inc
aam
mov
sbb
in
jb
ins
cmp
lods
pusha
test
add
mov
sbb
xor
pop
dec
arpl
push
mov
clc
sbb
rcr
pop
scas
jg
push
cmp
enter
call
xchg
outs
shl
ja
xchg
popf
lds
push
mul
xchg
xchg
lea
and
push
movs
cld
fcompp
mov
cmc
cmp
inc
aam
push
out
and
jno
dec
or
xchg
jnp
popa
psubd
add
push
daa
iret
das
shl
mov
outs
mul
push
sbb
and
es
into
out
xlat
pop
jo
cmps
adc
scas
aaa
aas
or
xchg
movs
test
cmc
inc
test
jmp
xor
scas
mov
dec
xchg
std
xchg
lock
pop
ins
inc
popw
xchg
mov
cwde
out
fwait
repz
(bad)
ret
mov
mov
push
fldcw
dec
xchg
xchg
add
jmp
cmc
xor
and
xchg
pop
imul
and
enter
into
push
cmp
push
adc
xor
test
cmp
lods
cmp
push
add
enter
stos
(bad)
push
fist
outs
aad
test
out
jl
xchg
mov
sub
aam
in
jecxz
push
(bad)
repz
add
add
sti
loopne
pop
push
xchg
out
retf
mov
cmps
cmp
not
imul
test
mov
lods
add
push
jge
add
(bad)
sub
lds
data16
and
pop
jl
xchg
addr16
mov
or
int
xor
xchg
stos
xor
aas
jne
sbb
xchg
or
pop
mov
ins
inc
retf
or
push
dec
in
adc
mov
xchg
add
sub
mov
sbb
mov
inc
shl
jmp
pushf
leave
push
scas
cmp
sub
pop
sub
outs
fiadd
inc
stos
into
and
or
dec
xchg
shr
hlt
in
mov
add
shl
jns
mov
xchg
les
out
enter
mov
sub
inc
out
movs
test
cmp
test
xor
push
call
mov
fild
pop
jmp
mov
inc
lods
xchg
cmp
cmp
dec
les
fcomp
inc
pop
sahf
(bad)
xchg
fwait
dec
outs
jae
jge
or
out
lahf
dec
icebp
pop
inc
jb
ret
aam
in
cmp
out
ret
jl
sar
pop
in
cmps
sub
(bad)
push
adc
rol
ja
push
inc
add
retf
sub
sub
mov
(bad)
repz
mov
scas
lock
xor
cwde
add
loopne
imul
stos
test
sbb
int
sbb
add
mov
inc
sub
clc
or
xchg
mov
enter
xor
shr
mov
sahf
jmp
cs
xor
dec
dec
in
stos
and
dec
mov
ins
pop
cwde
imul
stc
or
sti
add
push
cmp
dec
mov
popf
fwait
cld
out
mov
sbb
stos
pop
movs
mov
sub
add
(bad)
(bad)
hlt
aaa
scas
in
sbb
rcl
nop
rcr
outs
stos
cmc
dec
fwait
dec
(bad)
pushf
and
mov
rol
pop
mov
in
and
jecxz
(bad)
pop
test
fmul
or
mov
or
lea
pop
pop
dec
jmp
out
inc
pop
sahf
and
sub
call
fnstsw
add
mov
fdiv
inc
mov
jecxz
or
test
and
mov
fbstp
push
add
inc
pop
ret
imul
mov
iret
je
dec
enter
push
sbb
leave
sahf
mov
movs
adc
inc
xchg
rcr
xchg
repnz
adc
sbb
out
ins
pop
cmp
push
pusha
(bad)
mov
rcl
repnz
daa
mov
hlt
ja
jae
pop
add
mov
pusha
in
add
and
xlat
enter
sub
test
test
and
adc
out
jl
sbb
cmps
sbb
ss
xchg
test
aaa
cdq
pop
cmp
enter
arpl
out
jbe
popa
jp
fwait
dec
pop
mov
mov
cmp
dec
mov
pop
push
jne
(bad)
out
cdq
call
ret
inc
push
outs
sbb
popa
mov
cmp
xchg
outs
call
add
jmp
adc
fstp
js
push
add
je
xchg
xor
push
dec
dec
in
xor
stc
mov
xor
mov
inc
gs
hlt
push
lds
shr
(bad)
mov
dec
ds
outs
ret
cmp
ins
dec
retf
daa
mov
int
pushf
mov
div
cmp
test
inc
mov
cwde
rol
jne
adc
dec
push
push
or
jg
dec
rcl
or
sub
jae
xchg
into
mov
sbb
mov
data16
push
mov
adc
loop
jne
inc
aad
test
pushf
div
push
cmp
adc
cdq
pop
pop
std
xchg
jb
mov
out
xchg
adc
int3
sahf
xchg
mov
fisttp
cmc
div
mov
ror
mov
fwait
je
inc
dec
pop
out
imul
jle
mov
push
data16
jno
add
cmps
or
and
dec
les
ret
cmp
mov
enter
and
shl
out
fcmovne
not
scas
and
jecxz
cmp
int3
xchg
ins
cmc
(bad)
stos
xchg
stc
pop
xchg
movs
sbb
jb
and
dec
inc
xchg
cmps
dec
inc
fdiv
gs
fisub
jo
fsub
cmp
outs
dec
mov
add
xor
pop
enter
je
push
adc
push
push
cmp
addr16
xchg
dec
hlt
cmp
adc
es
push
inc
or
mov
test
aam
inc
pop
jns
stc
pop
cmps
loope
ds
jge
ret
jno
outs
adc
xchg
push
(bad)
sti
or
out
mov
test
or
loop
(bad)
scas
cmps
inc
xor
psrlw
inc
add
out
call
cli
shl
lock
std
sbb
fnstenv
repnz
adc
rcr
test
mov
ja
sub
dec
adc
mov
ins
popa
add
push
call
fisub
out
pop
dec
imul
push
cmp
mov
mov
cmp
(bad)
in
stc
mov
cld
jnp
in
cmp
jmp
neg
mov
mov
inc
inc
dec
and
mov
retf
fisubr
inc
xlat
leave
xor
jmp
push
sub
sub
inc
push
in
iret
cli
ret
lock
mov
je
push
icebp
out
das
popf
test
sar
ror
or
jmp
push
add
mov
push
pop
je
pop
sahf
shl
fcom
mov
hlt
(bad)
fsub
mov
push
lods
mov
fild
sub
jge
and
mov
push
mov
in
nop
retf
push
pop
cld
jo
sub
(bad)
aam
mov
ins
sti
not
into
jno
fidiv
or
inc
(bad)
pop
add
pop
imul
push
jae
push
inc
mov
test
xor
xor
icebp
fcomp
fist
lock
adc
sbb
data16
int3
mov
jns
push
out
mov
sahf
xchg
cmps
ins
cmp
div
inc
or
cmp
cld
lahf
xchg
sub
clc
xchg
shl
out
xor
and
(bad)
sbb
mov
cwde
fdiv
dec
sbb
jp
or
jo
add
xchg
jo
mov
and
adc
in
int
or
mov
leave
push
out
test
mov
sbb
sub
dec
or
test
clc
add
jo
test
pop
sub
shl
popa
mov
cmps
in
and
xlat
retf
mov
jmp
outs
inc
jp
push
adc
mov
rcl
xor
dec
sub
mov
call
pop
test
mov
sbb
gs
sti
ror
fwait
call
leave
cmp
aad
or
stos
dec
lahf
loop
into
test
or
adc
xor
mov
mov
clc
adc
in
inc
dec
std
inc
adc
call
add
mov
jb
sub
pop
js
dec
idiv
retf
xchg
in
sti
jb
mov
inc
je
sub
mov
xor
es
lds
mov
mov
movs
adc
stc
mov
sbb
dec
add
jb
ret
push
test
push
jmp
xchg
and
call
sub
cmp
int
xchg
or
mov
out
(bad)
clc
pop
addr16
cmps
or
sbb
push
xchg
ret
ret
pop
mov
rcr
or
sahf
add
push
(bad)
rcr
outs
sbb
cld
cmp
icebp
inc
mov
mov
inc
pop
mov
pop
shl
sub
int
jae
rcl
stos
in
iret
inc
mov
push
daa
out
sub
add
call
inc
scas
ss
or
inc
fcomp
mov
and
fcom
gs
push
jle
iret
out
aaa
fstp
(bad)
pusha
jb
jno
jb
jmp
mov
mov
add
pushf
aam
shl
int3
push
in
(bad)
shl
sbb
push
xor
jp
fidivr
pop
fild
dec
sbb
inc
pop
ins
(bad)
enter
sub
xchg
xchg
adc
cmps
jmp
nop
gs
movs
out
outs
ficomp
jl
or
cmps
xchg
inc
inc
cmc
aad
int3
int3
mov
add
ins
mov
nop
mov
lahf
pop
xor
fidiv
into
dec
cmp
mov
push
(bad)
int
mov
dec
ss
test
or
inc
loopne
xchg
dec
data16
enter
adc
fwait
mov
and
retf
mov
lea
mov
in
xchg
pop
cmp
icebp
jne
xlat
xchg
jle
fdivr
mov
lods
push
das
pop
lea
xor
pop
sub
and
and
jnp
shr
add
pop
or
push
jno
or
jle
sbb
leave
adc
jb
repz
adc
retf
in
xchg
xor
iret
jp
jns
test
jp
dec
adc
fdiv
cdq
lods
aas
add
std
inc
mov
daa
push
adc
jecxz
lahf
icebp
jo
lahf
ret
imul
rcl
inc
aam
jmp
pop
sub
xor
add
push
rcr
jmp
jge
jge
pop
in
sbb
mov
retf
hlt
mov
addr16
loop
sahf
ficomp
cmp
rol
(bad)
imul
loop
pop
shl
push
lods
jnp
fnstcw
push
pop
dec
lock
movs
xchg
sahf
pop
add
mov
ds
repnz
icebp
aad
into
mov
inc
mov
push
les
test
xor
pop
xchg
stc
lahf
sbb
xor
jne
std
call
cmp
scas
ja
mov
mov
jns
scas
and
add
shr
xchg
fistp
mov
stos
add
into
and
icebp
scas
inc
(bad)
cmp
popf
mov
jle
adc
jle
cwde
cwde
sbb
das
test
fidivr
jmp
sar
rcl
(bad)
retf
push
imul
iret
inc
aas
mov
jle
jmp
jae
je
test
pop
stos
adc
or
push
dec
sar
jbe
mov
cli
aad
sar
cmp
(bad)
and
shl
cmps
xor
push
setl
add
jno
or
je
les
xchg
or
adc
push
test
scas
xor
jb
(bad)
dec
mov
xchg
xchg
cdq
mov
scas
push
in
jp
jmp
push
dec
lods
mov
mov
cmp
fwait
js
add
mov
dec
adc
pop
mov
push
cmc
sbb
sub
in
lds
into
sub
idiv
or
fcmovu
retf
cmp
jmp
fld
add
loope
mov
adc
xor
shl
lds
sub
stos
shl
scas
xchg
jo
xchg
hlt
gs
sub
mov
test
out
ret
lods
sub
jmp
mov
inc
xchg
ret
data16
xor
adc
xor
lahf
outs
xchg
loop
in
mov
gs
mov
retf
repz
xchg
xor
loope
inc
out
pop
push
les
jge
mov
dec
cmps
retf
shl
out
push
jmp
dec
cld
(bad)
ja
(bad)
adc
pop
lea
xchg
aaa
pushf
loopne
mov
gs
(bad)
lahf
jg
stos
call
outs
mov
inc
retf
fisttp
adc
aaa
cmp
int
enter
ror
adc
sbb
cmp
jbe
pushf
or
add
push
stos
dec
call
(bad)
sub
popf
cmp
(bad)
cmc
dec
dec
cmp
xchg
lea
mov
jne
ret
xor
mov
push
sbb
sbb
cmp
(bad)
jge
and
xor
jno
hlt
pop
cli
into
je
rol
pop
dec
addr16
cli
imul
dec
imul
repnz
and
mov
lods
push
sbb
iret
imul
push
pop
aam
popf
mov
std
xor
ret
adc
in
int
popf
call
push
in
es
cmp
adc
add
loop
xchg
scas
hlt
cmp
je
int
xchg
in
mov
cmc
(bad)
(bad)
aam
or
into
pushf
adc
pop
imul
(bad)
push
pop
xchg
data16
mov
mov
mov
div
jae
imul
sub
rol
jae
sub
adc
stos
mov
repnz
push
xor
adc
fwait
mov
retf
test
sub
sub
pop
in
ret
lods
enter
scas
pop
mov
(bad)
mov
outs
mov
shl
jmp
adc
add
sbb
xchg
rol
aas
mov
ins
call
cld
and
repz
and
adc
add
dec
(bad)
out
adc
nop
test
xor
xchg
lods
ficom
loopne
call
(bad)
dec
inc
xor
push
mov
xor
je
fwait
mov
sub
cmps
add
push
fsubrp
add
iret
xor
mov
cmp
sbb
arpl
jno
ins
mov
scas
mov
inc
adc
cmp
(bad)
dec
leave
or
inc
pop
sbb
(bad)
add
mov
xlat
outs
mov
pop
shl
adc
dec
or
in
scas
dec
or
add
inc
imul
mov
jb
and
div
mov
cmps
add
fadd
xchg
inc
je
test
and
out
jmp
jnp
movs
into
rcl
mov
leave
mov
mov
adc
push
in
mov
inc
pop
mov
mov
pop
in
add
jbe
ret
cld
ret
or
mov
inc
sar
popf
imul
dec
jb
or
mov
xor
fcmovnbe
or
mov
out
xchg
icebp
popa
xchg
or
mov
aad
xchg
cmp
aas
in
xchg
enter
mov
pop
jl
(bad)
loope
xor
sahf
scas
push
sub
xchg
xchg
shl
mov
js
or
xchg
inc
inc
pop
fst
cwde
or
cwde
jb
and
cmp
das
sbb
(bad)
adc
and
add
icebp
imul
adc
fisubr
xlat
(bad)
fwait
xor
jge
mov
mov
pop
push
dec
jae
fdivp
pop
call
ja
cmp
test
pop
nop
dec
imul
inc
cmp
outs
mov
sbb
out
dec
jns
sub
mov
jg
xchg
loope
fistp
aad
fist
sub
cli
xor
repnz
ins
scas
ins
(bad)
paddb
and
lods
popa
xor
rcl
dec
xor
enter
les
pop
cmp
outs
movhlps
xchg
dec
mov
scas
fistp
clc
cmps
sub
fimul
sub
aas
movs
inc
jbe
push
in
(bad)
pop
mov
mov
sbb
sbb
cwde
inc
jne
in
std
jg
arpl
retf
repz
jne
sbb
add
ret
push
ins
leave
and
inc
ds
push
leave
mov
fucom
pop
sub
loope
or
stos
out
sbb
sbb
pop
jecxz
xchg
les
push
push
outs
mov
sbb
mov
push
dec
stos
mov
movs
adc
mov
(bad)
adc
pop
pop
mov
cmps
sti
dec
push
sahf
loop
popa
push
mov
dec
fs
loope
jnp
sub
add
(bad)
mov
leave
imul
(bad)
fist
xchg
pop
xlat
adc
jg
jl
pop
ja
add
add
rol
test
xor
jge
ror
in
ss
jmp
jp
sbb
sar
sar
test
fsubr
jb
mov
shr
rcl
fldenv
aad
rep
in
jge
add
pop
enter
cmp
sahf
neg
pop
pop
and
sub
loope
les
cmp
in
inc
cmp
std
jne
dec
retf
rcr
push
sbb
mov
mov
iret
addr16
imul
pop
mov
int
inc
push
adc
aaa
lahf
cld
pop
int3
push
pop
cmp
adc
imul
(bad)
pop
adc
(bad)
adc
out
sub
daa
clc
in
sbb
(bad)
int
out
dec
(bad)
out
int3
nop
sahf
pop
xchg
nop
mov
retf
cwde
sbb
aas
dec
ret
inc
lahf
shl
pop
outs
push
sbb
es
lock
outs
push
push
mov
and
test
les
fld
bound
xor
cld
js
js
jbe
in
call
mov
mov
cmp
mov
sbb
sub
pop
sub
arpl
mov
dec
xchg
mov
adc
jb
js
mov
lods
and
in
push
cmp
sub
pusha
sbb
jns
ret
ret
ror
(bad)
sub
sahf
mov
push
mov
pop
xchg
inc
xchg
imul
test
jmp
mov
les
pusha
cmp
dec
test
xchg
dec
shr
mov
mov
cwde
in
in
add
jno
lds
xor
dec
das
sahf
movs
les
mov
(bad)
fsub
and
dec
jne
xchg
dec
sar
or
stos
or
out
adc
movs
cmp
adc
aad
test
dec
push
fsub
je
inc
pop
inc
mov
sub
jae
dec
loop
repnz
lahf
(bad)
jmp
outs
mov
adc
call
mov
mov
dec
aad
dec
mov
iret
dec
mov
dec
push
mov
inc
push
xor
out
add
out
(bad)
cmps
mov
mov
retf
xchg
loope
mov
mov
cmc
call
xchg
xchg
or
push
jo
inc
aaa
inc
mul
mov
lock
rcl
out
jmp
push
loopne
push
icebp
dec
(bad)
xchg
cli
pop
dec
fimul
in
(bad)
aaa
retf
(bad)
fstp
loope
fucomip
out
imul
add
outs
cmps
(bad)
std
and
sbb
sbb
and
dec
cmps
cmp
fdivp
xchg
dec
fstp
cmp
push
and
push
and
cdq
pop
pop
into
push
ins
shl
in
ret
fdivr
shr
xchg
sbb
setb
loop
pop
ss
sub
pop
dec
pop
rcl
bound
pusha
lods
in
push
mov
mov
mov
inc
arpl
fs
push
pop
push
inc
leave
mov
jnp
inc
int
xor
add
(bad)
sbb
dec
jle
xchg
lods
jmp
cmp
pusha
fidiv
out
imul
adc
push
(bad)
xchg
cmp
pop
xchg
mov
ins
popa
test
sub
mov
inc
fiadd
adc
(bad)
aas
jecxz
jp
gs
int
adc
cmps
pop
ror
jnp
pop
int3
pushf
loope
mov
je
cmps
ret
sbb
daa
fisttp
aaa
or
aaa
xor
push
inc
xor
call
cmps
and
cmp
outs
fwait
pop
repz
inc
xor
pop
into
adc
push
mov
das
lods
lock
les
jp
cli
mov
mov
je
(bad)
icebp
(bad)
pop
mov
imul
sbb
sub
in
mov
inc
or
fucomi
lods
sub
push
pmullw
push
lahf
cli
inc
adc
jmp
xchg
jnp
ins
cmp
ret
inc
int
mov
jno
lock
(bad)
push
loope
out
mov
retf
jnp
adc
into
mov
les
jae
ret
dec
fiadd
and
sbb
jge
xor
repnz
int
fsub
(bad)
cli
and
cmp
sbb
leave
fst
xchg
pop
ror
xchg
cmp
xor
jmp
fchs
cwde
pop
push
call
sti
call
ja
rcr
add
xchg
dec
pop
popa
sub
fiadd
outs
test
es
mov
arpl
jg
fnsave
push
push
cwde
jns
retf
and
addr16
inc
in
sub
ja
hlt
sti
xor
shrd
mov
mov
std
fs
mov
scas
iret
shl
aas
scas
ret
loop
pop
and
mov
or
jae
inc
rcl
dec
enter
jecxz
push
push
mov
inc
pop
outs
bound
inc
arpl
cmc
outs
push
pop
mov
arpl
dec
add
inc
add
fbld
fadd
pop
inc
call
outs
push
push
push
inc
sub
mov
addr16
jmp
mov
(bad)
cmp
lds
inc
inc
xor
pop
sti
and
jnp
icebp
fs
jnp
and
loop
mov
(bad)
pop
inc
or
sbb
stc
pop
popa
les
sbb
cmp
ja
lahf
pop
lods
and
(bad)
mov
stos
mov
adc
xor
sbb
fmul
ja
pop
cmp
test
out
cmps
dec
xchg
in
xor
cmp
in
push
std
mov
mov
xor
add
lock
push
ins
push
arpl
lds
mov
fisttp
fldenv
mov
retf
addr16
jp
clc
jecxz
arpl
sub
retf
fimul
inc
pop
mov
(bad)
ins
pop
pop
push
jge
sar
add
test
sbb
pop
cs
jmp
aad
pop
adc
add
mov
popa
add
mov
outs
mov
xor
mov
jb
or
jns
adc
adc
push
test
mov
adc
es
cs
sti
jge
adc
pushf
sbb
cmp
push
push
call
dec
cdq
mov
pop
out
test
shl
movs
sbb
ret
mul
rcr
iret
je
jae
or
in
and
test
movs
add
retf
ss
pop
fwait
push
or
jmp
stos
sbb
sbb
mov
retf
cmp
call
bound
sub
retf
outs
jmp
mov
push
xchg
sar
scas
stos
jle
push
xchg
ret
cmps
aas
push
movs
mov
and
addr16
cmp
lock
movs
leave
repz
inc
xor
push
aas
cs
inc
mov
xchg
xchg
dec
or
dec
inc
(bad)
arpl
cs
daa
data16
add
xchg
cmp
pushf
nop
ins
xchg
or
repz
cld
adc
xchg
sti
fwait
and
mov
xor
in
cmps
loop
std
push
sub
nop
fst
or
or
test
xchg
push
pop
cmp
push
xchg
test
cld
pop
ror
popf
into
enter
push
xchg
mov
dec
pop
outs
les
popf
mov
add
popa
inc
js
retf
and
push
in
ret
(bad)
out
push
sbb
ins
mov
mov
jmp
cwde
fs
push
adc
fdivr
jnp
sbb
neg
add
std
cmp
pop
in
sub
xlat
xchg
into
into
sbb
mov
rcr
fisttp
mov
dec
cmp
ja
(bad)
repz
shl
setnp
fnstenv
cmc
xchg
fldenv
cmp
mov
inc
out
sbb
lea
in
cmp
xchg
adc
xor
dec
retf
mov
in
cmp
sub
lods
(bad)
(bad)
and
shr
scas
leave
and
retf
in
jle
sti
test
loopne
jg
jp
xchg
shufps
fbld
inc
mov
mov
in
sub
pop
shl
out
add
ror
cmp
mov
mov
gs
sbb
pop
sti
xchg
jbe
add
cli
ins
aaa
dec
pop
(bad)
int
jle
mov
in
(bad)
pop
xor
and
jecxz
mov
inc
adc
js
push
push
sahf
or
mov
test
ins
(bad)
jbe
pop
adc
out
pop
mov
mov
into
int
inc
sub
dec
imul
in
fistp
or
lock
sub
inc
adc
ins
fimul
mov
xor
in
pop
fsubr
and
ret
mov
test
or
mov
pop
cmp
adc
inc
das
jo
xor
gs
pop
scas
(bad)
cmps
aas
je
in
int
mov
xchg
cmp
out
clc
cmp
and
sub
mov
retf
xchg
in
pop
and
jecxz
pop
pusha
lea
(bad)
loopne
pop
and
loopne
movs
clc
mov
leave
scas
xchg
jle
imul
mov
scas
cmp
pop
mov
iret
and
dec
or
mov
add
ins
test
inc
jmp
sbb
adc
push
mov
xor
lahf
dec
pop
outs
xlat
ficom
or
cmp
dec
fiadd
in
mov
mov
clc
aas
pop
or
ja
jp
mov
or
enter
out
xchg
add
stos
xchg
ja
and
mov
ret
loop
mov
mov
push
adc
repz
scas
inc
cdq
outs
pop
dec
adc
mov
jle
arpl
add
cmps
test
mov
cli
cmp
pop
les
out
add
loop
icebp
xchg
mov
jmp
test
(bad)
jmp
(bad)
jne
mov
fsubr
addr16
cmp
cdq
pop
add
jo
sub
xchg
imul
(bad)
ror
pop
and
xchg
pop
push
mov
pop
jl
(bad)
push
xor
add
or
cmc
sar
test
dec
aas
pushf
inc
pop
mov
sahf
mov
dec
mov
mov
das
stc
push
outs
xchg
pop
shl
adc
sti
pusha
loopne
bswap
push
jb
dec
aam
jbe
push
inc
retf
adc
jbe
daa
fidiv
ins
or
(bad)
repnz
inc
push
adc
mov
mov
mov
fdivr
leave
adc
outs
mov
cmps
mov
mov
and
mov
fld
push
and
loope
sbb
adc
rcl
xlat
push
cs
xor
dec
dec
sbb
pop
lods
data16
scas
mov
pusha
lods
mov
sub
sub
hlt
in
aad
mov
enter
add
push
icebp
cmp
add
adc
arpl
xchg
outs
jb
mov
div
std
xor
cmc
mov
pop
mov
mov
sub
es
aad
mul
outs
jmp
call
cs
sub
aad
jmp
mov
jb
mov
(bad)
(bad)
scas
(bad)
scas
mov
cdq
jl
call
xor
mov
fdivr
dec
shr
and
jp
and
mov
jecxz
lds
mov
push
inc
xchg
gs
ins
adc
sub
inc
iret
cmc
sar
enter
ret
xchg
icebp
retf
add
rcl
clc
dec
call
iret
ja
add
iret
cmp
outs
mov
dec
and
push
retf
cmc
xchg
es
push
cmp
sbb
fimul
fs
adc
fwait
jae
stos
lds
fld
lahf
addr16
mov
jns
sbb
mov
icebp
sbb
jl
clc
pushf
mov
jns
adc
add
mov
pop
pop
xor
(bad)
dec
sti
sbb
xchg
and
xchg
ror
add
pop
addr16
mov
enter
and
or
and
cmp
xchg
add
mov
stos
sbb
call
imul
aaa
mov
clc
pop
pop
fld
jl
cwde
sahf
div
and
cmc
cmp
add
mov
add
sub
retf
or
cmp
addr16
dec
outs
pop
(bad)
cld
leave
movs
int3
inc
pop
pop
jmp
xor
retf
adc
xor
push
mov
or
icebp
imul
add
push
fwait
imul
and
mov
dec
xchg
aad
mov
inc
cmp
shr
ds
sahf
mov
sub
sbb
mov
clc
inc
mov
test
inc
lods
mov
out
inc
sub
jno
sub
mov
daa
fisttp
jmp
(bad)
pop
jbe
inc
pop
fstp
fnstenv
jae
imul
test
leave
push
loope
xchg
cmps
xchg
pop
xchg
ficom
ror
leave
sbb
pushf
out
pusha
sar
cmp
stc
ja
xor
sub
sbb
add
dec
std
std
test
stc
sub
int3
xor
sub
aam
pop
and
push
int
popf
push
and
popa
fistp
(bad)
jecxz
jge
xlat
dec
in
in
sbb
fistp
lods
xor
fwait
cmp
pop
inc
mov
daa
bound
(bad)
mov
push
jmp
dec
lds
add
lea
push
jo
xor
mov
adc
add
add
mov
cmps
aam
jno
cmp
loop
or
push
pop
pop
iret
ds
and
mov
push
hlt
loopne
test
and
aaa
cwde
arpl
movs
pop
push
push
(bad)
jnp
inc
retf
add
(bad)
adc
cli
cdq
xor
fstp
repz
into
scas
outs
icebp
das
jecxz
test
or
rol
(bad)
fs
daa
fyl2x
(bad)
mov
cmps
lods
fdiv
adc
add
popa
jne
imul
jecxz
repnz
inc
jnp
leave
push
dec
inc
loop
out
pop
add
(bad)
(bad)
fiadd
adc
pop
pop
cmc
pop
cmp
adc
mov
sbb
inc
push
pop
test
cmp
ret
inc
repz
sbb
lods
add
mov
imul
repz
sub
or
test
mov
xor
dec
mov
xor
push
mov
cmp
sahf
arpl
stos
lea
dec
fimul
int
or
dec
add
test
add
addr16
popa
call
adc
and
ss
nop
mov
test
stc
test
or
mov
and
inc
out
aaa
lods
push
and
jno
stos
fidivr
movs
lods
mov
dec
cli
pusha
fcom
ins
retf
sbb
ror
dec
jmp
jo
pop
arpl
loop
aas
out
add
mov
js
outs
out
sbb
xchg
inc
and
mov
(bad)
or
add
nop
xchg
inc
pop
and
popa
mov
sub
mov
outs
sbb
(bad)
cmp
mov
ret
mov
repz
outs
xchg
mov
add
xchg
mov
xchg
test
sbb
das
jno
push
ins
add
fild
inc
xchg
daa
and
adc
xor
mov
cmps
dec
scas
mov
daa
cmp
jno
cwde
or
cmps
daa
push
cs
out
icebp
clc
mov
xchg
add
repz
push
(bad)
fist
mov
sub
sub
iret
or
jge
inc
push
rcr
and
retf
repz
les
jne
cmp
jg
repnz
jns
lahf
sbb
cs
ficomp
mov
stos
cld
adc
das
das
lods
jb
adc
outs
adc
sahf
movaps
add
icebp
inc
rcl
add
popf
xchg
stos
outs
icebp
dec
jns
xchg
jle
sub
push
aaa
add
pop
and
lods
popa
mov
lock
xor
scas
sbb
add
mov
in
clc
pop
dec
xchg
ret
cmp
outs
ror
pop
jecxz
jne
or
(bad)
cdq
push
fwait
push
sub
test
lods
pop
ficomp
mov
mov
sbb
push
cwde
push
clc
sbb
loope
enter
dec
push
cmc
and
aas
cmp
add
dec
mov
jns
xor
ins
imul
mov
lods
add
inc
stos
add
ret
pop
push
lea
shr
(bad)
mov
push
sbb
enter
pop
xchg
sbb
ds
div
cmps
dec
sar
cli
mov
js
cmps
adc
rcl
and
sbb
int3
stc
push
inc
in
rcr
pop
sub
je
js
or
loopne
nop
enter
xchg
sub
aas
mov
or
adc
(bad)
daa
mov
jmp
mov
js
dec
and
sbb
push
mov
jbe
sub
pop
xor
push
and
sub
xchg
mov
jo
test
es
test
pop
arpl
js
xor
inc
loop
out
adc
add
or
out
aas
out
(bad)
push
sub
loop
add
mov
mov
xor
xor
push
retf
add
pop
fdivr
clc
mov
in
mov
cmps
cmp
rcr
repz
add
loope
shl
add
lods
xor
lods
div
scas
add
out
ins
jbe
jge
bnd
cmp
push
pushf
mov
mov
pop
mov
(bad)
js
cmp
jl
jae
adc
mov
xor
push
push
jp
push
inc
xor
cli
sbb
jle
jbe
aaa
pop
pop
or
clc
inc
shr
or
mov
test
mul
jp
sub
repnz
test
cdq
into
mov
in
mov
add
(bad)
nop
sub
sbb
cdq
dec
(bad)
out
push
mov
bound
mov
cld
stc
fmul
aaa
aaa
jmp
adc
push
in
gs
movs
movs
inc
ins
mov
pop
(bad)
xlat
je
and
shl
xchg
cmp
mov
addr16
and
loop
lea
and
cdq
or
adc
sti
ret
test
add
inc
fucomip
scas
cdq
mov
adc
fs
mov
dec
fst
loopne
mov
jle
in
adc
(bad)
xlat
test
mov
das
rol
xor
cs
pop
popf
xchg
fadd
cmp
retf
add
adc
and
mov
adc
or
mov
test
sub
xchg
jg
das
push
xor
jge
out
stos
imul
dec
pop
loopne
cdq
mov
xor
stos
dec
in
test
pop
sub
mov
repnz
sub
pop
(bad)
sbb
bound
xor
fdiv
cdq
cmps
sub
pop
push
repnz
sahf
jg
add
jbe
jnp
dec
imul
leave
mov
sbb
sbb
mov
jle
in
gs
xor
mov
int
jge
pop
mov
mov
(bad)
iret
aaa
outs
mov
sub
add
sti
xor
std
js
in
movs
mov
adc
fisub
addr16
fiadd
cli
dec
lds
pushf
xor
leave
xchg
dec
idiv
fldenv
daa
jne
xor
in
dec
test
pop
sub
sub
lea
push
fstp
aaa
adc
sbb
cmc
pop
(bad)
mov
mov
mov
inc
int3
out
sub
daa
jg
dec
pop
jns
add
pop
mov
das
cmp
aad
dec
movs
jo
lock
cmps
sbb
in
sub
test
or
xor
dec
fs
sub
xor
push
in
stos
ins
mov
pminsw
add
mov
cmp
or
pusha
retf
fs
pop
leave
cwde
sbb
test
add
stos
cld
pop
dec
aad
cmps
pop
scas
in
pushf
push
clc
cmp
jl
add
pand
cmp
cmps
xor
jmp
fldenv
rcr
or
cmp
inc
std
(bad)
out
sahf
aad
mov
sahf
pop
xor
cmp
sbb
pop
mov
or
test
and
(bad)
call
repnz
jns
shl
inc
loop
popa
jge
dec
xchg
jne
fst
iret
cmp
mov
ins
aam
lahf
cs
jne
push
js
xchg
repnz
xor
aam
mov
mov
outs
xchg
mov
mov
mov
xchg
xor
nop
cmp
dec
xor
mov
xor
int
mov
or
jmp
push
pop
or
lds
mov
xchg
mov
rol
sbb
dec
mov
dec
popa
dec
enter
cmp
add
inc
cdq
jnp
inc
dec
call
xchg
add
add
imul
out
xchg
inc
jmp
jb
ret
cli
in
inc
cdq
jge
jg
out
cdq
cmc
mov
ror
fadd
pop
stos
xor
in
retf
clc
sub
enter
cld
in
push
adc
push
inc
stos
xor
jecxz
mov
retf
mov
mov
pop
adc
adc
inc
adc
scas
mov
adc
aaa
fiadd
push
inc
and
retf
add
push
out
push
push
ss
dec
sub
lahf
and
add
movs
sbb
fbstp
cmp
fs
fstp
sbb
push
pop
out
sbb
mov
xor
leave
or
and
scas
or
mov
sub
jg
ja
scas
imul
pushf
sub
dec
xchg
add
sbb
inc
loope
sub
int
out
popa
adc
mov
sbb
pusha
test
sub
push
ins
movs
dec
xchg
fcmovnu
push
das
add
mov
xchg
push
xor
mov
mov
fcomp
pop
loop
out
xchg
cmp
cdq
aaa
outs
out
rol
pop
sub
jl
ror
mov
xor
mov
(bad)
aaa
rcr
inc
or
jge
sub
hlt
cdq
and
(bad)
sbb
and
xchg
dec
shr
int
mov
and
ret
mov
call
aam
cmp
test
arpl
sub
adc
and
dec
adc
cmp
imul
int3
and
stc
and
pop
mov
or
xchg
jnp
lds
lock
mov
jle
xlat
ds
sub
(bad)
push
jp
sub
call
cmps
into
push
push
in
shl
call
xor
xchg
push
lahf
sub
lahf
cmp
into
popf
and
jge
retf
aam
cmp
adc
mov
push
rol
fsubr
mov
ror
aaa
sub
cmps
test
dec
cmp
das
scas
adc
push
mov
out
in
adc
gs
push
add
jg
retf
xchg
push
mov
push
xchg
push
jno
mov
aaa
xor
gs
mov
and
ins
dec
jmp
fcom
dec
jne
or
movs
and
jbe
jmp
addr16
push
or
add
arpl
popf
fst
pop
push
mov
sar
idiv
mov
fsub
aaa
cmp
aaa
sbb
cmp
stc
in
pop
cmc
or
jns
sbb
ds
in
pop
mov
popf
mov
test
push
jmp
sahf
(bad)
arpl
pushf
push
add
mov
xchg
rcl
push
data16
je
add
lea
inc
test
add
(bad)
cmp
jg
mov
xchg
xchg
xchg
jge
(bad)
popf
cld
shr
sub
repz
sub
xlat
jl
cmc
imul
aam
sub
repnz
jne
mov
loop
in
stc
xor
ins
add
ins
outs
sbb
ds
out
sbb
sbb
cmc
inc
pop
ins
or
sbb
inc
or
mov
dec
retf
out
add
xor
pop
sub
push
outs
lds
popf
neg
pop
dec
shr
dec
movs
and
adc
or
push
mov
cmp
pushf
ficomp
sub
es
jp
sub
or
fst
popa
push
mov
push
enter
stos
jle
scas
mov
and
aam
mov
inc
mov
popa
dec
ja
test
ror
or
jge
sub
pop
pop
dec
cwde
jge
shl
fwait
and
sbb
mov
ins
mov
jg
lea
in
es
sti
fsub
push
out
ja
pop
mov
fld
xlat
out
ret
mov
lods
jl
push
xchg
mov
lea
(bad)
(bad)
ins
mov
dec
inc
(bad)
cmps
or
push
out
leave
stc
cwde
cmp
aam
mov
jns
push
mov
sub
lods
int
cmp
jnp
pop
enter
bnd
cld
xchg
aad
loop
sub
or
div
aad
mov
sub
jmp
xor
pop
(bad)
adc
mov
mov
mov
push
jle
rcr
cdq
inc
push
daa
xchg
adc
jb
add
or
dec
add
fistp
fmul
jnp
inc
test
es
das
push
xor
dec
ret
add
push
pop
rcr
sbb
fisttp
and
jbe
das
cmp
or
stos
sbb
bound
mov
idiv
add
adc
push
lods
ja
out
push
leave
xor
je
div
into
cmps
mov
dec
adc
leave
adc
(bad)
mov
test
add
loopne
or
xor
rcl
jl
mov
jge
xor
fcos
nop
xchg
jle
mov
in
sbb
(bad)
jl
mov
sbb
aad
xchg
and
sub
ja
int
inc
stc
xchg
ss
adc
inc
fcomp
and
(bad)
neg
ss
or
dec
dec
mov
jl
jbe
mov
scas
inc
adc
aam
push
pusha
xor
sbb
stc
(bad)
in
js
pusha
inc
cmps
icebp
repz
mov
stos
cmps
daa
mov
mov
(bad)
daa
and
cld
imul
add
shl
add
lea
cs
add
data16
retw
mov
inc
stc
xchg
add
out
pusha
xchg
je
mov
(bad)
cld
in
fst
shl
addr16
outs
inc
inc
add
(bad)
xchg
in
ins
ja
adc
je
icebp
xor
xchg
sub
stos
mov
mov
iret
inc
cmp
(bad)
pop
popf
rcl
add
adc
adc
xor
push
test
ins
inc
pop
addr16
sub
mov
repz
dec
xchg
mov
mov
lods
jae
rcl
fisttp
and
jge
retf
fnstcw
aas
or
ficomp
push
xchg
adc
xchg
les
cdq
lock
les
arpl
out
xchg
mov
shl
cmp
or
fsub
enter
enter
push
sbb
jmp
fisttp
inc
push
pop
je
enter
or
ss
mov
push
xor
and
int
jae
add
not
les
sbb
push
sar
inc
movs
jbe
div
xchg
aam
adc
mov
sub
pop
push
inc
dec
mov
sub
mov
xchg
out
cmp
scas
in
adc
sub
or
lahf
pop
mov
jecxz
sar
retf
jecxz
rcr
mov
fld
in
mov
ror
ds
leave
mov
and
jp
adc
xor
mov
cmp
xchg
dec
inc
sti
mov
movs
add
fidiv
mov
retf
bnd
and
mov
mov
or
fwait
loopne
pop
dec
fidivr
mov
or
sub
xor
fs
cmp
lds
cld
jecxz
addr16
faddp
mov
mov
(bad)
stos
cmp
sahf
shl
inc
mov
sbb
retf
retf
repz
adc
mov
iret
push
movs
mov
adc
sub
push
mov
cmps
xchg
mov
add
xchg
mov
cld
dec
call
je
inc
inc
add
retf
scas
mov
aad
ds
ret
cs
mov
or
lahf
inc
jge
pop
mov
push
inc
idiv
or
cmp
push
push
adc
adc
sub
pop
cmp
dec
mov
xchg
lods
mov
popf
push
jle
lea
ror
mov
ins
mov
test
cmps
jne
and
arpl
scas
sti
cmp
cmps
xor
(bad)
int3
jmp
dec
out
leave
daa
cmps
jnp
call
cmc
ret
aam
pop
neg
enter
pop
outs
iret
adc
mov
arpl
das
sub
mov
inc
ss
ret
and
jbe
or
jg
scas
ret
inc
lods
fild
movs
mov
fwait
and
shl
fs
sar
movnti
mov
mov
sbb
fnstsw
test
cld
cwd
ja
not
addr16
push
mov
and
jp
test
add
(bad)
mov
stos
xor
add
sti
ss
test
call
imul
xor
pop
xchg
aad
or
push
jg
fcomp
jb
or
jmp
or
cmps
pop
aaa
push
add
iret
push
call
xor
push
ret
push
xor
xor
test
inc
pop
sbb
cwde
pop
inc
sbb
add
xchg
adc
hlt
jb
stc
call
mov
repnz
or
shl
jae
ret
retf
jge
dec
lahf
dec
pop
or
push
and
shl
in
pop
add
inc
(bad)
or
pop
cmc
into
aam
xchg
repz
aaa
mov
inc
jge
jp
adc
sbb
das
inc
xchg
jmp
push
in
pop
or
hlt
fcmove
cmp
inc
pop
dec
fnstenv
adc
mov
jae
je
shl
add
mov
lock
jmp
jecxz
push
push
mov
hlt
pop
sbb
dec
loopne
adc
mov
mov
(bad)
adc
or
mov
adc
sub
xchg
ret
cmp
inc
leave
ret
lea
repnz
add
dec
fisttp
inc
jmp
leave
pop
mov
sbb
loopne
into
aad
imul
mov
out
mov
push
mov
xchg
push
xor
or
rcr
imul
jmp
outs
jo
pop
jp
jl
aaa
pop
sub
push
mov
fwait
cdq
sbb
xor
push
jb
ja
xchg
push
and
mov
(bad)
lods
adc
sub
cmp
aam
outs
and
lahf
push
pop
xor
lds
arpl
push
mov
push
mov
push
pop
push
mov
into
add
push
bnd
or
retf
(bad)
inc
inc
les
dec
jne
call
jbe
leave
dec
dec
push
sub
cli
imul
ja
lock
add
cmps
adc
(bad)
xor
adc
call
arpl
or
xchg
das
cmp
sahf
push
stc
xor
inc
fimul
or
push
cmp
cmp
(bad)
push
sar
inc
mov
mov
rcr
sti
cmp
cmp
or
cmp
into
dec
xor
rol
sbb
cmp
cmp
inc
jbe
test
sete
adc
xor
jle
std
mov
mov
fidiv
and
xchg
retf
xchg
xchg
mov
or
lods
aas
jae
sti
add
add
jl
add
cmp
scas
(bad)
je
and
pop
sub
or
xor
dec
out
sbb
inc
fnstcw
popf
loope
mov
pop
push
or
imul
mov
repnz
mov
(bad)
les
sub
fwait
mov
jno
imul
cld
(bad)
dec
xor
jo
mov
cmc
cld
xchg
in
inc
and
fucomi
and
(bad)
sbb
and
xor
repz
daa
hlt
or
jle
(bad)
lea
push
mov
clc
mov
sbb
hlt
xchg
sar
mov
bound
loop
icebp
xchg
mov
mov
jbe
lds
das
mov
inc
(bad)
es
pop
add
std
mov
cmps
movs
rcr
mov
shr
xchg
(bad)
daa
jmp
rcr
rcl
mov
push
sbb
xor
clc
(bad)
xchg
mov
dec
push
retf
and
or
jg
fsubr
add
scas
adc
xor
push
movs
sti
or
mov
xchg
out
jmp
mov
cld
lods
cmps
aas
test
cwde
es
push
cmp
loope
sbb
stos
push
cmc
xchg
and
repnz
or
xchg
js
iret
fidiv
repnz
push
mov
jl
lds
in
jmp
jno
ins
test
sbb
adc
push
imul
sbb
mov
nop
in
dec
int
in
sub
jg
adc
shl
xchg
and
iret
(bad)
(bad)
loop
or
rcr
push
push
adc
sub
je
rcr
or
ins
ror
or
lahf
sbb
cmps
sbb
pop
lods
pop
adc
test
push
leave
jb
or
mov
out
add
inc
call
xchg
imul
rol
add
dec
push
das
in
aaa
mov
and
loop
(bad)
dec
int3
xor
xor
mov
sahf
dec
mov
ret
pop
xor
stos
mov
adc
xor
xchg
dec
or
xor
cmps
adc
cwde
int3
xchg
lods
arpl
xor
inc
mov
jg
cmp
(bad)
mov
xor
cmc
xchg
push
xchg
in
sti
clc
sub
inc
sub
dec
jb
nop
(bad)
(bad)
adc
adc
das
adc
es
adc
repnz
pop
push
xlat
pop
shl
loop
adc
out
pushf
test
mov
pop
int3
int
ror
(bad)
aas
dec
int
out
cmps
int
fld
inc
shl
sub
pushf
jno
mov
rcr
sbb
mov
in
and
loope
jmp
xchg
add
xor
call
shr
inc
in
adc
cmp
jge
push
mov
ja
ret
int3
clc
(bad)
lock
or
cmp
movs
mov
mov
push
dec
pop
stos
popa
inc
lods
adc
xor
fs
xchg
hlt
(bad)
push
lahf
jno
sub
cmc
sub
pushw
push
push
lahf
fs
or
xor
xlat
daa
lea
xor
inc
push
mov
jmp
jne
mov
popf
arpl
lock
out
and
das
enter
(bad)
mov
push
out
int3
lahf
mov
fwait
cli
mov
push
in
sub
inc
lock
mov
adc
cmp
sar
mov
sub
scas
pop
ror
inc
inc
mov
mov
xchg
mov
push
out
sahf
int3
shl
cmps
retf
fucomp
dec
push
fistp
ja
mov
stos
inc
ret
pushf
popa
xchg
mov
es
xchg
sbb
add
nop
push
push
pop
daa
inc
aam
repz
loope
pop
fimul
scas
xchg
inc
adc
pop
mov
int
les
inc
add
or
add
(bad)
mov
jge
movs
or
sbb
and
out
mov
xchg
movs
dec
ja
sub
cmp
fs
out
aad
(bad)
out
xchg
fiadd
push
mov
sbb
xchg
repnz
sbb
or
mov
icebp
scas
jne
in
cmp
or
dec
adc
test
jge
jg
shl
adc
(bad)
push
in
js
ret
push
aas
xor
fbld
aam
ret
jge
sbb
in
cmps
xchg
add
cmp
add
mov
cdq
pop
popf
xchg
mov
xchg
cmp
jmp
push
pop
mov
add
mov
ss
pop
icebp
push
mov
das
push
cld
and
sahf
jmp
xor
das
mov
add
sbb
(bad)
sub
sub
loopne
int3
shl
rcl
fisubr
ficom
int3
cmp
in
cmp
jo
pop
cmp
cmp
push
mov
shl
ror
mov
mov
aad
or
push
xor
dec
not
loope
retf
push
lods
movs
imul
sub
out
leave
cs
test
lods
enter
adc
cmp
xor
mov
sub
sub
repz
mov
mov
clc
jle
push
scas
ror
add
hlt
sub
xchg
sbb
sub
shr
ficomp
sub
push
mov
lods
push
inc
jae
xor
jmp
sti
sub
jle
mov
mov
xchg
rcr
fld
sar
jp
mov
mov
adc
in
mov
ds
sbb
add
icebp
fs
out
movs
stc
mov
jb
sahf
shl
(bad)
or
adc
cmp
dec
test
bound
mov
push
push
add
pop
inc
mov
adc
mov
xchg
push
adc
int
arpl
push
ss
lea
xor
std
mov
arpl
add
and
sub
jno
jae
les
cdq
or
push
in
test
arpl
stos
xlat
cmp
into
jecxz
inc
out
push
outs
sub
push
pop
cmp
xor
pop
fs
and
mov
dec
mov
ins
sub
push
movs
dec
dec
lods
mov
adc
popf
test
xchg
leave
jmp
mov
outs
xchg
(bad)
into
aam
inc
ret
lock
dec
mov
mov
scas
std
and
movs
outs
leave
test
jae
xchg
fcomp
shl
sub
mov
inc
adc
cmp
cmp
aam
jl
ret
mov
(bad)
dec
xchg
adc
(bad)
out
pop
jp
sub
cmp
lods
push
out
or
neg
mov
jle
in
pop
pop
dec
cs
pop
shr
pusha
pop
jne
mov
in
ins
jae
adc
outs
aad
dec
pop
and
lds
xlat
push
and
pop
cmc
cmp
add
adc
pop
cmc
push
xor
push
icebp
mov
fiadd
jmp
xor
jno
jne
xor
mov
enter
adc
fmul
sub
out
mov
inc
xor
and
cli
xchg
xor
pop
xor
rol
out
nop
mov
(bad)
mov
(bad)
jne
mov
push
sbb
cmc
inc
daa
inc
pushf
data16
(bad)
mov
xor
cmp
jmp
inc
aas
push
(bad)
sbb
(bad)
adc
(bad)
sbb
sub
shl
call
repnz
out
sbb
sti
jne
inc
jp
test
mov
mov
lods
cmp
push
lods
call
movs
out
not
add
imul
jl
sub
xor
dec
add
add
push
int
fimul
rcl
xor
popa
into
mov
scas
xor
arpl
(bad)
push
mov
xchg
mov
ins
shl
pushf
int
mov
cmp
gs
rcr
cmp
inc
sub
sub
pop
mov
cmp
sub
inc
jbe
fadd
cmp
and
ins
cli
jb
jmp
cmp
stos
imul
lods
push
test
dec
cmp
in
and
jae
jge
or
xchg
fimul
or
ret
inc
pop
stc
push
and
je
jo
jnp
pop
shl
add
call
jg
push
retf
loop
std
scas
push
xchg
cmps
cmp
cmp
cmp
ss
dec
mov
cmp
loope
adc
mov
sbb
pop
xchg
leave
jnp
popa
jno
cmp
fmul
in
cli
xor
jmp
adc
cmp
es
inc
aas
mov
ss
add
adc
dec
pusha
inc
inc
pop
xor
dec
ds
mov
ins
pop
pop
jne
add
out
inc
xor
loop
mov
mov
shr
and
ja
mov
sbb
in
mov
pop
xchg
mov
in
dec
inc
(bad)
sub
lods
loop
int
fld
mov
ins
mov
call
in
push
lods
idiv
in
sub
xor
test
cmps
pop
in
pop
mov
and
cmp
xor
xchg
jno
cs
fbstp
push
push
fstp
push
les
sub
adc
push
lds
push
add
shr
vmaxsd
stc
fcmove
aad
scas
pushf
into
inc
push
cld
and
(bad)
xlat
(bad)
repz
lods
loope
rol
lea
lods
and
jle
mov
cli
pop
out
jmp
pop
dec
int3
or
jae
mov
or
pop
adc
or
or
fxam
inc
pop
ss
mov
mov
sub
fild
jns
jb
pop
mov
push
adc
fnstenv
mov
mov
push
xchg
inc
add
add
stos
inc
lea
sti
push
inc
mov
mov
or
ins
test
jno
outs
push
xor
xchg
fiadd
fistp
scas
jmp
adc
(bad)
outs
int3
mov
adc
sub
push
push
ins
cdq
inc
xchg
ret
add
pop
(bad)
push
rcr
and
aad
cli
push
push
push
js
jns
and
jle
mov
inc
mov
mov
std
outs
fst
jg
in
jle
sub
adc
inc
push
sbb
sbb
and
and
(bad)
cwde
(bad)
jl
dec
in
add
imul
out
lods
repnz
adc
lock
xor
in
shl
mov
mov
es
imul
out
mov
mov
mov
imul
out
cmps
movs
cmp
arpl
lock
mov
(bad)
mov
movs
sti
mov
jbe
and
inc
push
add
mov
(bad)
mov
fadd
test
sbb
push
jb
loopne
push
icebp
sti
cld
stos
xor
leave
xchg
cs
sahf
aas
ins
mov
fisub
add
jne
mov
adc
test
xchg
retf
mov
xchg
int
inc
std
ins
das
imul
int
push
dec
push
jmp
cmp
cmp
pop
xor
push
mov
ja
and
sub
inc
pop
fldcw
mov
xlat
cs
lea
shl
jge
sbb
pop
call
fstp
fs
push
test
sbb
popa
jns
mov
jae
inc
clc
mov
inc
jl
push
jnp
mov
rol
cld
jnp
rcr
in
ss
sbb
and
fnstsw
movs
int
cmp
mov
test
outs
sti
in
mov
setge
cmp
push
xchg
adc
call
and
mov
xor
inc
(bad)
in
sbb
ret
jg
mov
inc
and
cmp
into
jb
inc
pusha
dec
imul
mov
daa
mov
mov
clc
sahf
in
jne
pop
(bad)
jae
xor
push
enter
and
cmps
inc
test
mov
xchg
loope
xor
sub
mov
mul
xchg
push
sub
lods
daa
pop
xchg
cwde
jmp
fild
mov
mov
inc
nop
dec
ret
loopne
stc
movs
jae
outs
test
cmp
sub
cmp
(bad)
xchg
rol
test
mov
sub
sbb
out
and
xchg
xchg
cs
xchg
dec
es
pop
(bad)
ins
push
inc
pop
out
jge
xchg
leave
cmps
test
dec
aas
test
adc
jge
scas
rol
cwde
test
ins
mov
mov
pushf
ret
test
test
inc
iret
cmp
add
rcr
sti
aad
mov
dec
adc
in
lods
inc
rcr
das
adc
adc
je
lods
push
cwde
js
cmp
hlt
dec
mov
cmp
(bad)
mov
loop
ret
pop
loopne
and
cmps
fdiv
out
out
js
sbb
rol
xchg
(bad)
std
push
es
mov
mov
out
and
mov
ins
jae
test
std
inc
jmp
daa
fnstcw
fiadd
iret
shl
or
dec
pop
mov
(bad)
es
pop
das
aad
mov
ja
pop
inc
push
psllq
movs
mov
mov
jle
adc
ds
push
mov
and
adc
les
test
cmp
inc
or
inc
adc
fmul
mov
mov
shl
fsubp
xchg
sub
fdivr
cli
movs
popa
push
cdq
scas
into
cmc
fistp
dec
(bad)
leave
xchg
dec
repz
(bad)
in
retf
xor
xchg
(bad)
xchg
bound
mov
scas
mov
ficomp
xchg
push
outs
jp
in
fsubr
push
mov
adc
dec
leave
jne
rol
sahf
ss
fst
adc
leave
sub
loopne
mov
xchg
ret
popa
push
inc
add
push
hlt
cmp
les
test
adc
into
loop
into
cmc
add
jb
mov
sbb
sub
cmp
sub
and
and
mov
pop
jno
pop
sub
out
daa
leave
cmp
jle
xchg
lahf
sahf
cmps
mov
adc
ds
jb
add
out
adc
jnp
or
cmps
retf
int
dec
popa
dec
xor
add
inc
rol
test
lea
fldcw
popa
out
in
mov
xor
test
out
aam
packuswb
loop
add
ins
pushf
iret
sub
retf
mov
mov
mov
out
ret
mov
xlat
sbb
out
xor
sar
pop
mov
popa
and
inc
sub
or
or
outs
call
imul
stos
mov
(bad)
shr
pop
sub
sub
jne
jno
jae
(bad)
psubusw
pop
loop
xor
xchg
imul
add
outs
movs
fadd
sahf
sbb
xchg
dec
xchg
dec
or
hlt
mov
sahf
cmp
mov
cmp
sbb
clc
cmp
pusha
bound
jg
jb
xchg
jae
fwait
mov
ja
and
cmp
mov
push
jae
movs
mov
xor
mov
lahf
test
(bad)
and
push
in
xor
shr
and
arpl
adc
aaa
clc
xchg
aam
sbb
scas
aaa
sti
jb
or
ror
sbb
out
ret
adc
add
sbb
jo
xchg
inc
dec
iret
sub
dec
xor
pop
mov
sbb
or
lods
jne
mov
xor
inc
or
or
pop
push
nop
dec
adc
add
sahf
adc
mov
jne
pop
jmp
cdq
ja
fwait
movs
mov
arpl
call
lea
push
cmp
fiadd
call
mov
push
adc
imul
and
pushf
pop
or
pop
addr16
cmps
xor
jle
mov
jmp
jmp
dec
loope
inc
push
fcomp
jnp
ffreep
or
mov
push
std
int3
dec
scas
mov
xchg
mov
cdq
jecxz
arpl
mov
mov
ins
dec
into
jns
movs
mov
fimul
(bad)
div
loope
dec
scas
and
out
mov
ja
sub
call
mov
cmp
pop
fsubr
jp
cmp
jmp
pop
sub
and
bound
(bad)
sbb
test
lods
xor
jnp
pop
jmp
adc
or
push
test
cmp
xor
test
adc
ret
fst
xlat
mov
outs
cwde
jnp
das
cmp
cwde
adc
push
xor
hlt
out
(bad)
cmc
fst
test
inc
dec
scas
jo
adc
sub
loope
xchg
test
leave
ins
lods
mov
fcom
aaa
sub
or
xchg
(bad)
test
dec
inc
dec
add
mov
out
std
sub
das
outs
mov
inc
sbb
or
adc
pop
inc
aam
mov
lock
mov
rcr
mov
test
mov
mov
push
push
push
push
test
lea
sbb
(bad)
mov
lahf
mov
adc
cmp
add
push
outs
jno
jle
xor
stos
mov
jl
das
shr
mov
mov
mov
pushf
mov
push
jge
mov
sbb
test
xor
inc
adc
xchg
mov
daa
sub
neg
test
out
and
aas
into
jae
jp
mov
sub
cmp
xor
sbb
pop
cmc
in
pop
pop
jp
sahf
stc
(bad)
lds
stos
sbb
mov
sar
jge
cld
jl
sbb
push
cmp
add
sbb
mov
das
xchg
int
ss
mov
jge
test
and
retf
jnp
push
cwde
test
push
sub
fbld
mov
adc
sbb
(bad)
aam
and
ror
adc
int
ins
pop
shl
aam
xor
pop
in
scas
sti
retf
jne
cs
or
stos
adc
ror
inc
xchg
mov
lods
xchg
imul
in
arpl
sub
lock
mov
std
sbb
cmps
out
sbb
imul
pop
pop
rol
popa
mov
addr16
adc
arpl
jl
int
pop
adc
mov
push
loope
cmp
movs
pop
inc
loope
popf
or
fisttp
aam
daa
ins
mov
adc
repnz
addr16
jmp
mov
icebp
mov
(bad)
sahf
sar
mov
push
mov
pop
cmp
ja
inc
push
jb
test
sub
or
adc
or
push
in
outs
bound
fst
cmp
dec
jle
ds
leave
js
mov
and
ret
outs
push
push
inc
adc
mov
pop
mov
inc
add
dec
popa
ds
jo
push
pop
xchg
add
dec
imul
out
inc
adc
call
das
lods
cmp
adc
cmp
mov
neg
cmp
dec
xor
pop
and
int3
out
mov
adc
adc
in
pop
loopne
in
shl
dec
(bad)
sub
cwde
xchg
call
bound
fs
in
mov
mov
ret
popf
mov
mov
sbb
aas
aad
push
out
and
sub
outs
xchg
sbb
mov
retf
jb
imul
stos
and
pop
fdivr
cli
fbld
dec
aam
inc
aaa
movs
ja
mov
or
mov
pop
mov
loop
loopne
(bad)
pop
sbb
fidiv
mov
in
sbb
stos
cmp
es
mov
sti
adc
or
pop
std
retf
and
sar
in
dec
inc
jmp
and
push
outs
gs
cld
lods
clc
test
fnstsw
cld
dec
ficomp
cmp
lods
push
xor
icebp
xchg
mov
mov
addr16
jmp
and
sbb
jecxz
sbb
jae
rcl
sub
stos
mov
outs
pop
inc
cmc
mov
(bad)
mov
mov
sub
test
pusha
dec
(bad)
out
mov
test
imul
add
push
sbb
sub
les
sub
sbb
std
xor
int3
into
sbb
fistp
xchg
push
or
and
push
jmp
scas
or
popa
mov
jecxz
or
popf
pushf
jbe
out
add
adc
pop
push
test
dec
cwde
mov
sbb
sbb
push
pop
dec
and
cmps
and
xor
jmp
jmp
mov
rcr
(bad)
and
jp
cmps
adc
sbb
ins
daa
test
inc
cmc
mov
jge
push
push
pop
loopne
add
sbb
xor
cmp
shl
repnz
aaa
inc
xchg
out
jge
movs
jbe
push
out
bound
lahf
into
mov
jp
push
sbb
fwait
mov
push
ficom
push
xor
es
(bad)
sahf
rcr
push
add
dec
call
ret
push
data16
shr
mov
jle
pop
repz
ret
arpl
jl
jmp
mov
mov
repz
into
pop
rcr
sbb
scas
fwait
call
sub
or
mov
adc
or
sbb
mov
icebp
enter
mov
iret
adc
jl
mov
jmp
jmp
mov
ja
repz
and
ja
(bad)
imul
icebp
jno
je
or
leave
push
jl
movntq
ret
mov
movs
or
das
mov
xor
test
retf
cmps
inc
pop
mov
movs
jmp
outs
jmp
lds
dec
ret
jne
fs
inc
fucomip
or
cmp
pop
cmp
mov
add
sub
sbb
retf
mov
mov
adc
push
mov
jns
scas
push
icebp
xchg
xchg
sbb
scas
sub
call
jnp
sub
jno
ret
or
into
sbb
or
inc
and
mul
cmp
cmp
jbe
inc
dec
fwait
ret
shl
lock
xchg
add
ror
dec
icebp
ins
add
int
mov
cld
jno
neg
leave
test
or
pop
xor
repnz
jmp
cmps
imul
jmp
mov
lahf
adc
or
sbb
rcr
inc
mov
mov
mov
sub
repnz
xchg
cmp
push
jae
mov
inc
mov
fsubrp
(bad)
out
sub
std
fsubr
xchg
inc
cmp
mov
mov
cli
lds
xchg
mov
sti
test
xchg
imul
imul
sub
bswap
in
(bad)
push
sbb
hlt
nop
cmp
mov
or
mov
pushf
fisttp
repnz
push
dec
inc
in
xor
mov
cwde
dec
pusha
jb
pop
sub
leave
cld
(bad)
enter
cmp
rcl
jns
and
(bad)
or
sub
mov
inc
stc
aam
mov
gs
mov
clc
push
and
adc
lahf
pop
fistp
shl
test
cmps
movs
mov
cs
js
jg
daa
mov
xor
int
les
stc
lods
pop
mov
aam
scas
mov
xchg
imul
push
push
hlt
(bad)
push
sub
add
ds
repnz
rcr
cmp
test
xchg
xlat
jnp
out
push
out
xor
dec
or
mov
lods
push
cmp
xchg
adc
cmps
out
xchg
push
in
cmps
sahf
xor
cmp
sub
arpl
mov
mov
loop
mov
rol
add
in
pop
inc
pop
cmp
call
add
mov
test
imul
out
xchg
sbb
loop
shr
nop
or
int
push
cmp
or
sub
sub
xor
aas
add
dec
outs
nop
pop
(bad)
dec
movs
aas
(bad)
sub
ret
ror
mov
sbb
push
xchg
inc
push
mov
ja
movs
jmp
mov
cmp
jns
out
add
test
shld
jp
adc
cs
pop
(bad)
icebp
xchg
fcomp
adc
xor
push
je
pop
gs
sub
ins
mov
dec
int3
mov
jmp
clc
jmp
pop
add
inc
nop
div
jmp
out
sub
push
stos
mov
aaa
or
sbb
imul
repz
nop
cdq
xor
sub
pop
cmps
ficomp
repz
test
mov
enter
ss
(bad)
push
xchg
mov
nop
mov
sahf
jae
cmp
xchg
fsub
mov
inc
imul
pop
not
jmp
lods
or
sbb
jl
lea
loop
cmps
js
add
xor
movs
std
lods
cmp
push
(bad)
ficom
setns
frstor
mov
xor
gs
sbb
das
jae
loopne
xor
ror
fcomp
add
mov
and
movs
(bad)
lahf
jno
cdq
sti
dec
cmp
xor
mov
sbb
mov
pop
cld
add
pop
or
cmp
sbb
icebp
add
sub
or
xchg
push
in
inc
mov
stos
mov
jmp
aas
mov
ss
adc
ficomp
sbb
outs
arpl
mov
std
inc
cmp
push
jno
xchg
pop
sub
ror
jle
movs
cmc
aad
mov
inc
test
ja
mov
mov
mov
mov
stos
and
or
mov
in
jo
sbb
and
stos
jle
add
push
mov
pop
pop
xor
jle
pop
pop
push
cmp
xchg
jns
and
(bad)
adc
sti
mov
add
inc
xchg
jmp
add
dec
pop
jne
jl
loopne
ss
sti
dec
push
xchg
(bad)
ja
pop
dec
stos
jmp
cld
jg
mov
and
sar
push
pop
int
arpl
call
jl
lods
cmp
inc
jle
call
cld
sahf
cs
(bad)
fcomp
sub
pop
add
dec
pop
(bad)
js
je
jecxz
dec
inc
ins
pop
mov
stc
shl
jl
add
xchg
dec
fcomip
arpl
jo
lods
pop
pop
cdq
mov
inc
or
imul
lods
and
stos
xchg
xchg
(bad)
les
(bad)
fidiv
or
retf
pushf
mov
scas
aas
inc
push
dec
data16
pop
shr
dec
push
and
pop
mov
push
add
mov
sahf
and
retf
loopne
cmp
and
and
daa
mov
add
dec
inc
cdq
mov
ror
jmp
xchg
and
ret
cmp
mov
xchg
and
test
int
push
and
ss
cmp
sbb
ins
ins
out
test
mov
imul
sub
mov
mov
repnz
and
cmp
jnp
leave
push
ret
cs
repz
ja
loop
icebp
push
shr
in
and
sub
ja
xor
adc
fld
rol
cmc
pop
pop
in
pop
pop
add
mov
clc
xor
(bad)
mov
test
pop
and
jl
imul
sti
xchg
cdq
rol
test
adc
xor
xlat
scas
ret
inc
retf
and
adc
pop
retf
data16
mov
inc
dec
or
stos
aad
iret
xchg
pop
test
cmps
outs
xor
pop
pop
inc
xor
mov
mov
adc
mov
jecxz
dec
lahf
cdq
fisub
cmp
sbb
dec
mov
ja
stc
enter
hlt
lds
add
cmp
xor
jg
(bad)
pushf
fisubr
adc
ins
push
frstor
push
pop
(bad)
inc
mov
mov
and
adc
jns
jecxz
mov
push
inc
xor
imul
push
jle
dec
and
shr
ds
mov
jge
pushf
sahf
pop
or
cmp
push
jmp
mov
sbb
ins
fild
pop
es
mov
push
and
push
cmp
sub
jle
inc
sar
fdivr
sti
or
adc
test
lock
(bad)
jnp
test
iret
lds
mov
push
pushf
test
add
adc
js
xchg
jb
imul
pop
aas
cmp
inc
and
xchg
in
retf
je
daa
mov
cld
mov
pop
mov
and
daa
popa
jg
loope
push
sbb
add
cld
xor
repnz
cmp
das
or
popf
ss
jp
mov
jge
les
mov
lods
jb
movs
ret
je
mov
xlat
push
adc
(bad)
xchg
loop
mov
lahf
icebp
adc
aad
dec
mov
push
sbb
mov
jne
inc
stc
clc
push
js
call
retf
(bad)
(bad)
ficom
ret
sbb
mov
add
rol
or
pop
mov
fs
jb
imul
dec
pop
cld
or
iret
adc
jns
cld
jo
push
sub
mov
cmp
repz
fmulp
xchg
ins
xor
sbb
mov
fild
ror
or
jle
test
clc
fisub
mov
cmp
fidiv
sub
push
lds
mov
mov
dec
cdq
push
movs
add
rol
jmp
jno
xor
jp
cmp
jmp
mov
fimul
test
stos
and
lds
mov
pushf
imul
jmp
leave
or
lds
adc
add
lahf
xor
sub
inc
xor
lock
pop
je
call
into
stc
jmp
fcomi
push
in
inc
sete
ins
imul
jg
outs
and
jge
sub
jl
add
cmps
stos
ret
push
cdq
or
test
xchg
test
in
pop
push
jle
inc
pop
mov
jle
mov
pop
dec
mov
jbe
xchg
enter
les
test
shl
inc
cmps
xchg
(bad)
retf
inc
jno
xchg
aaa
push
sbb
aas
sar
inc
ins
jle
sub
inc
hlt
push
xchg
sub
xchg
adc
xchg
aad
pop
xlat
add
adc
mov
or
(bad)
cmp
fucomp
stos
hlt
sub
sar
test
or
pop
sub
arpl
or
mov
push
push
nop
in
mov
int3
ror
mov
mov
inc
sbb
aam
je
repnz
lahf
rol
or
fcomp
loope
int3
jge
mov
or
push
xor
lea
ss
(bad)
mov
pop
push
jnp
popf
push
fisubr
push
sbb
lock
ds
inc
xor
inc
jg
pop
xchg
mov
inc
loopne
push
mov
jmp
or
call
cdq
add
cld
aaa
inc
ss
mov
lock
dec
push
mov
cmp
(bad)
lahf
pop
neg
int3
shl
test
mov
pushf
icebp
push
mov
mov
xchg
add
push
xor
inc
es
push
stos
in
and
or
xchg
jo
dec
mov
pop
dec
addr16
ja
sub
or
sbb
sahf
cs
and
pop
adc
inc
rol
pushf
mov
arpl
pop
dec
fild
pushf
and
push
(bad)
scas
add
add
xor
nop
imul
mov
das
adc
sbb
mov
pop
rcr
cmp
rol
inc
dec
cmp
and
xchg
or
jae
or
push
pop
dec
mov
adc
xchg
sub
(bad)
mov
fistp
cs
fnstcw
idiv
cmc
es
(bad)
sub
xor
retf
dec
sub
fisttp
push
std
cmp
mov
mov
adc
xor
daa
scas
push
mov
and
sar
cmps
pop
inc
repnz
mov
(bad)
push
bound
add
das
lea
fmul
mov
jecxz
xchg
cmp
inc
bound
call
cwde
and
push
mov
loopne
movs
in
cmps
gs
mov
xor
loopne
push
pushf
nop
cwde
neg
in
inc
stos
(bad)
cmp
or
dec
lock
retf
jl
(bad)
mov
or
sti
or
fiadd
inc
dec
pop
xchg
out
and
or
pop
mov
rol
sub
sub
jno
(bad)
jno
and
adc
pop
xor
mov
mov
fld
pop
jmp
lods
dec
outs
imul
push
ds
aaa
stos
xchg
movs
nop
mov
pop
loopne
retf
and
shl
adc
pop
shl
jle
or
jle
leave
mov
jbe
push
ret
scas
mov
retf
jg
(bad)
sub
pop
out
sub
into
pop
mov
mov
sub
xchg
cs
mov
hlt
stos
jmp
add
jmp
retf
cmc
arpl
cmc
imul
call
dec
pop
or
adc
inc
std
xchg
rep
sbb
test
lds
xchg
outs
(bad)
neg
cmovno
out
adc
adc
push
movs
stos
arpl
xchg
ds
je
sbb
adc
repnz
imul
mov
push
xchg
leave
jg
sahf
je
lds
xor
sbb
and
cs
in
cld
add
lods
pop
jl
sbb
rcl
call
push
dec
mov
addr16
push
jl
or
sbb
sar
xchg
push
iret
mov
lds
stos
leave
(bad)
imul
jmp
xchg
xchg
pop
mov
cmp
mov
add
and
rcr
push
ror
clc
fcom
repnz
imul
pop
pop
pop
icebp
add
inc
mov
mov
stos
sahf
enter
lods
push
loope
ss
and
daa
icebp
dec
pop
rcr
arpl
loop
fptan
xor
dec
inc
adc
jmp
mov
lods
dec
inc
add
adc
pop
scas
cmps
test
jns
add
inc
cwde
or
cmp
cmp
pop
mov
(bad)
arpl
das
cmps
movs
(bad)
fmul
xchg
daa
pop
pop
or
std
sub
add
jo
movs
jg
push
test
inc
stos
inc
and
fs
sub
xchg
fld
xchg
jbe
inc
into
faddp
push
lods
dec
pushf
out
in
xlat
cld
push
or
and
add
arpl
jne
cwde
dec
or
iret
xchg
mov
(bad)
sub
in
fild
add
mov
xchg
inc
xor
fistp
xchg
lods
push
repnz
mov
add
and
jns
push
jno
and
sbb
loop
or
push
and
pop
jb
mov
(bad)
in
outs
xchg
shl
repz
ds
jno
mov
inc
ret
je
scas
ret
int
scas
lea
popa
sub
inc
xchg
sti
xlat
fist
xchg
mov
xor
mov
push
push
dec
movs
rol
cdq
sbb
scas
sub
adc
mov
gs
mov
mov
dec
xchg
sub
fucom
and
inc
dec
xchg
jbe
scas
cdq
add
cld
cs
movs
sub
adc
into
sub
cli
div
popf
popa
les
mov
ja
dec
out
mov
movs
mov
dec
inc
sbb
mov
push
out
and
xchg
cmps
xchg
loope
movs
dec
movs
xchg
loop
repnz
aaa
or
xor
xchg
sbb
mov
(bad)
and
leave
jb
das
xor
cld
inc
shl
aas
movs
cmc
push
lahf
pop
ret
sar
fimul
lock
fsubr
lods
jo
std
callw
xor
sub
(bad)
push
stc
sysexit
adc
iret
or
fild
out
outs
bnd
and
mov
js
shl
sar
iret
pop
jbe
cmp
add
add
dec
lds
scas
jmp
cmps
dec
cmps
popf
iret
sub
data16
in
daa
nop
stos
loope
sbb
mov
sbb
or
shl
imul
es
cdq
sbb
rcr
push
daa
mov
stos
outs
mov
push
out
stos
mov
mov
outs
mov
mov
movs
pop
fstsw
and
imul
push
test
dec
xor
jb
ja
stc
clc
push
popf
mov
pop
sub
ds
fcom
sbb
sti
xchg
div
aas
push
stc
sbb
clc
nop
test
iret
lea
cmc
int
xlat
mov
push
mov
je
ins
mov
rcr
pop
ja
fcmovnb
push
int
mov
js
mov
pop
mov
out
(bad)
mul
jle
lods
cmc
pop
ret
jo
data16
pop
jbe
adc
nop
cmp
jb
pushf
out
fimul
ror
jge
pop
sbb
inc
cli
and
xor
add
sub
push
push
out
dec
gs
(bad)
popf
int3
mov
xlat
sbb
jp
xchg
sahf
test
jno
push
push
leave
repz
pusha
jge
xchg
or
scas
push
xor
sbb
xchg
sbb
call
mov
mov
xchg
xor
fsubr
or
pusha
cld
ret
jo
(bad)
or
jo
les
leave
adc
push
jl
imul
push
and
xchg
das
xchg
xchg
jl
lahf
push
jmp
ficom
fdiv
int3
cmp
or
fimul
adc
pop
mov
mov
adc
fadd
mov
jle
adc
mov
add
jecxz
adc
call
ror
dec
sahf
dec
neg
arpl
popf
pmulhw
sbb
enter
adc
mov
je
in
add
jl
adc
xor
jbe
test
adc
imul
add
arpl
inc
in
fisub
test
xchg
daa
movs
jmp
dec
xchg
in
inc
mov
push
mov
mov
pop
sahf
push
add
sbb
adc
pop
fs
adc
push
mov
adc
loope
clc
fistp
sub
xor
mov
loop
inc
jmp
pop
ins
pop
sbb
(bad)
jle
cmps
(bad)
in
add
dec
aad
mov
es
inc
xor
xchg
sub
jle
ja
jg
inc
popf
imul
jmp
and
ret
sar
or
jb
mov
aam
std
cmp
hlt
inc
js
xchg
sub
jb
xchg
xchg
iret
movs
fild
jae
pcmpeqb
(bad)
ins
or
dec
iret
in
int
fidiv
je
fild
add
scas
jmp
out
aad
retf
sti
psadbw
jo
sub
push
mov
xchg
jg
push
ins
adc
jmp
adc
push
sub
daa
cld
ins
mul
push
cmp
pop
sub
pop
or
iret
lea
std
sub
fstp
jno
and
and
in
xchg
push
sbb
ins
jno
ds
jge
pop
rol
fnstsw
int3
je
dec
cmp
jmp
inc
(bad)
sbb
and
cmp
js
dec
not
(bad)
or
cdq
jg
pop
jne
(bad)
jbe
std
(bad)
cmp
loope
mov
pop
and
aad
mov
mov
pop
imul
inc
add
ss
imul
add
jno
(bad)
(bad)
pushf
leave
lods
in
push
(bad)
fwait
test
call
cld
jnp
aas
ret
jle
call
leave
add
pop
popf
and
pop
ins
(bad)
adc
femms
out
xor
cmp
mov
fcomp
add
mov
pop
mov
pop
and
loop
mov
jns
mov
movs
xor
adc
mov
pop
add
sub
loope
sahf
cmps
and
sub
test
xchg
cwde
mov
xchg
repnz
jne
sbb
push
cwde
dec
cwde
std
fsubr
and
xor
shl
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fst
clc
sub
or
ins
fbstp
cs
stos
(bad)
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
call
repz
clc
cmc
xchg
xor
shl
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fst
clc
sub
add
not
fxch
push
retf
add
pop
addr16
cmp
or
xor
pop
push
fld
out
stos
inc
dec
jle
in
adc
add
adc
adc
repz
push
push
rcl
mov
leave
in
mov
inc
jle
jnp
loop
out
cmp
ss
(bad)
or
movs
xchg
cmp
mov
test
mov
mov
jmp
sub
pop
xlat
in
or
inc
jo
push
mov
xchg
stos
sbb
in
jp
sub
(bad)
ret
frstor
mov
push
imul
retf
ret
mov
jno
jno
and
ins
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmps
and
sub
test
xchg
cwde
mov
xchg
repnz
jne
sbb
push
cwde
dec
cwde
std
fsubr
and
xor
shl
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fst
clc
sub
or
ins
fbstp
cs
stos
(bad)
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
call
repz
clc
cmc
xchg
xor
shl
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fst
clc
sub
or
ins
fbstp
cs
stos
(bad)
dec
inc
nop
adc
call
xchg
clc
jno
pop
icebp
icebp
push
shr
mov
icebp
sub
jae
add
mov
inc
inc
lods
rcr
mov
add
pop
sti
sub
ficom
pop
idiv
or
cmp
fisub
sub
test
push
jae
pop
mul
and
sub
into
je
sbb
mov
fnstenv
pop
and
xor
retf
enter
add
shr
add
sbb
call
or
outs
jg
sbb
cmp
mov
sbb
xor
and
stos
or
div
mov
mov
aam
popf
mov
sbb
popf
pop
adc
adc
add
mov
push
adc
jl
test
fnstsw
ins
push
adc
sub
dec
mov
int
nop
xor
cmc
add
icebp
mov
push
add
pop
fistp
nop
fld
adc
sbb
das
push
loope
mov
lods
daa
push
and
pop
mov
and
jno
push
xchg
mov
or
retf
mov
cmc
push
and
enter
push
dec
mov
push
dec
adc
vcvtdq2ps
movs
mov
call
fcomp
jmp
adc
jno
loopne
pop
mov
(bad)
aad
sbb
in
sti
fwait
mov
sbb
inc
outs
push
pop
adc
mov
xor
cli
(bad)
jge
jmp
sti
stos
xor
mov
ins
push
sbb
sbb
adc
sti
push
xor
imul
clc
or
adc
arpl
out
mov
repnz
clc
ins
xchg
test
or
call
popf
inc
out
jl
mov
sub
adc
push
xchg
cs
lds
retf
repnz
cmps
out
(bad)
in
and
inc
out
inc
push
sub
arpl
push
add
mov
das
xchg
adc
mov
jg
jae
ss
clc
jb
mov
lds
ds
je
cmp
dec
pop
cwde
into
cmc
jge
aam
int
test
cmc
xchg
cli
cwde
xor
rol
loope
mov
jnp
stos
push
out
pop
pushf
or
shl
mov
add
(bad)
daa
loop
inc
pop
push
scas
lock
pop
adc
lock
sub
pop
and
or
inc
std
fisttp
dec
add
lea
push
add
add
adc
mov
push
push
dec
xchg
ins
(bad)
not
xchg
popa
sbb
inc
inc
jmp
fucomi
fstp
ror
ins
jp
test
mov
jae
and
(bad)
sbb
retf
sar
xor
div
ror
mov
sbb
hlt
or
cmp
or
cmps
mov
mov
nop
test
sbb
jno
add
enter
push
(bad)
pop
int3
sahf
push
popa
xor
mov
jmp
xchg
xchg
ins
addr16
mov
(bad)
into
mov
cmp
pop
cmp
xor
repnz
cmps
jb
dec
hlt
movs
(bad)
inc
retf
(bad)
push
pop
in
ds
jmp
push
xor
int
inc
cmps
jle
pusha
pop
pop
push
in
repz
jmp
push
(bad)
es
fdivr
mov
pushf
push
les
cmps
repnz
sbb
push
repz
into
icebp
push
shl
jle
push
pop
mov
ficom
adc
stos
cmc
push
xor
out
aam
inc
xchg
les
sbb
sahf
fistp
cs
dec
jb
pop
int3
cmc
(bad)
xor
and
mov
out
movs
sbb
pop
mov
bound
cli
jnp
push
adc
dec
sub
inc
lds
sbb
(bad)
iret
mov
cmp
pop
xchg
push
imul
dec
jg
pop
push
mov
out
out
xor
xchg
es
fdiv
loop
xor
mov
push
sti
or
xchg
add
aad
bnd
jo
stos
in
adc
inc
sub
vmaxss
frstor
cli
bound
adc
mov
and
jmp
fldcw
or
xchg
and
and
rcl
jle
adc
push
lds
push
push
imul
cmp
loope
(bad)
jle
dec
sub
out
nop
outs
int3
sbb
(bad)
(bad)
(bad)
out
push
jmp
sbb
jo
and
pop
mov
jge
xchg
pop
(bad)
mov
sti
(bad)
push
mov
in
fsubr
fsub
sbb
loop
iret
sub
jl
hlt
jl
adc
pop
cmp
clc
and
pop
sbb
fild
out
cmp
or
jmp
and
iret
jno
gs
je
mov
rcr
mov
xchg
fist
(bad)
in
rcr
jp
(bad)
jns
jo
push
cmc
aas
xchg
xor
mov
dec
lods
add
or
push
fdivp
cmp
mov
imul
fisubr
movs
scas
cmp
fs
xchg
jge
or
mov
push
jno
cli
jecxz
mov
scas
mov
mov
or
test
and
xchg
or
adc
push
mov
cli
outs
dec
jbe
sar
xchg
je
fcom
cmp
push
pmulhw
push
int
push
cs
sar
adc
test
dec
test
das
hlt
cmp
test
pop
mov
call
sbb
xchg
add
dec
les
dec
xchg
rol
jae
mov
test
shl
cli
ins
fwait
sub
xchg
outs
add
cmp
mov
xchg
ins
jmp
dec
mov
mov
add
mov
shr
retf
(bad)
mov
popf
pusha
repnz
adc
mov
inc
(bad)
adc
jmp
call
jmp
xor
push
gs
fidiv
jl
pop
cwde
lds
jae
bound
repnz
mov
push
mov
jge
fld
adc
(bad)
add
adc
stc
repnz
push
cmp
pop
idiv
jne
test
xchg
sub
sar
or
mov
push
adc
xor
mov
sub
push
hlt
cdq
sub
mov
(bad)
les
retf
sti
bound
and
adc
xor
repnz
std
or
xor
sbb
fisttp
test
jmp
jmp
dec
out
mov
or
pop
mov
(bad)
fcomip
jo
xchg
cmp
or
dec
outs
pop
jne
push
xchg
(bad)
pop
mov
mul
shl
test
adc
daa
add
ins
arpl
jp
data16
nop
aad
movs
add
or
mov
or
pop
fwait
jp
push
sub
pop
jmp
or
fnsave
sbb
mov
int
gs
retf
hlt
and
inc
and
inc
scas
icebp
js
or
pcmpgtw
pop
dec
jmp
jp
sahf
dec
mov
cmp
pop
fistp
std
mov
sub
inc
jns
in
jmp
pop
adc
mov
das
aas
loop
mov
jnp
stos
cmp
aas
pop
retf
(bad)
sub
xor
mov
mov
and
pop
or
xchg
fwait
lds
bound
xchg
dec
scas
iret
ficomp
mov
fisub
sbb
stos
lods
push
aas
add
push
sub
and
popa
cdq
mov
mov
lea
inc
push
fwait
add
push
jp
mov
jge
jmp
mov
stos
lods
xlat
shl
cmp
rcl
sbb
push
mov
stc
fist
cs
jne
clc
push
add
ja
cli
or
std
dec
cli
sbb
cmp
(bad)
cmc
mov
iret
and
aad
gs
loope
hlt
jecxz
aad
sbb
popf
repz
shl
fadd
out
ret
dec
cmp
ret
rcl
fild
cmp
outs
arpl
imul
jmp
(bad)
jle
or
push
pusha
test
lods
pop
push
jb
imul
leave
mov
retf
xor
fs
or
pusha
pop
add
adc
xchg
clc
mov
mov
jno
pop
push
adc
xor
and
lock
clc
add
dec
in
cmp
outs
jl
arpl
mov
mov
xchg
and
inc
call
or
por
and
ins
cmp
outs
gs
sbb
loopne
in
sub
enter
pop
lods
sbb
or
rol
idiv
sbb
bound
call
je
scas
jmp
jle
sub
mov
inc
bound
pusha
add
fmul
mov
retf
fsubr
pop
(bad)
loop
cmp
sub
inc
sbb
fdivr
pop
mov
and
pop
pop
sbb
enter
jge
(bad)
push
xor
sbb
lds
popa
adc
jmp
out
loopne
les
cmovo
les
add
pop
retf
clc
fisttp
ins
push
pop
adc
enter
xor
adc
mov
outs
mov
and
mov
rol
adc
cmps
test
mov
daa
push
xchg
sar
jbe
das
les
(bad)
mov
cmc
jbe
sahf
popf
sub
xor
movs
mov
jbe
inc
test
jmp
loop
jns
or
jo
ret
mov
mov
add
iret
xchg
dec
enter
popf
je
test
push
or
mov
inc
cmps
xchg
rcr
test
gs
jp
in
inc
jg
and
mov
sub
repnz
in
fs
pop
nop
inc
sbb
sbb
mov
dec
pushf
mov
mov
inc
outs
out
es
and
sbb
je
arpl
repz
out
push
cmc
mov
call
inc
sbb
das
fsubr
in
cmp
jp
xchg
mov
mov
mov
pop
sbb
pushf
(bad)
pusha
push
or
pop
pushf
leave
in
int3
add
push
push
push
fbld
push
mov
xchg
out
xchg
(bad)
(bad)
xor
jecxz
xchg
out
jle
or
and
inc
dec
das
ja
fdivp
cwde
xchg
(bad)
cmps
rcr
sahf
inc
cmp
jne
fimul
adc
mov
idiv
or
mov
pop
scas
push
dec
in
out
jle
dec
adc
sub
add
and
pop
mov
call
add
inc
jmp
enter
sbb
enter
push
test
sub
in
test
mov
gs
push
pop
inc
lods
mov
mov
scas
mov
movs
ficomp
and
movs
mov
jmp
jmp
and
sub
repz
and
scas
push
ret
iret
je
popf
in
stos
aam
inc
retw
mov
sbb
das
sub
test
mov
jecxz
push
ins
sbb
adc
jecxz
add
stos
mov
xor
mov
std
dec
pushf
jle
ror
leave
sub
mov
stos
mov
fsub
mov
or
add
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
inc
not
push
mov
add
