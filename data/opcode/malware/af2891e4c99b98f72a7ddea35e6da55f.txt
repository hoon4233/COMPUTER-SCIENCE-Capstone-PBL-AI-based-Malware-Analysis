xor
inc
call
adc
call
jb
ret
add
add
push
ret
add
add
add
add
inc
add
inc
add
inc
add
add
xor
ret
jp
enter
add
adc
mov
or
inc
or
pop
outs
arpl
je
inc
add
xchg
or
jno
arpl
push
inc
or
or
xchg
adc
adc
push
xor
inc
push
dec
push
jl
adc
dec
popa
outs
push
fadd
ja
not
inc
clc
jbe
jb
cmc
ins
jmp
bound
cwde
ins
add
ficomp
push
je
outs
sub
adc
idiv
fs
mul
dec
pushw
mov
jo
push
inc
jp
ficomp
call
gs
cld
imul
mov
push
dec
bound
arpl
xor
dec
push
popa
ret
dec
dec
outs
retw
adc
push
jns
in
push
pop
adc
dec
inc
dec
mov
pop
inc
dec
test
or
dec
ja
stc
call
push
outs
push
(bad)
loop
inc
push
ss
mov
fcom
xchg
jl
mov
push
stos
mov
jns
fiadd
pop
push
dec
xchg
mov
push
test
jb
iret
inc
jge
jae
jns
shl
jb
dec
jo
repz
cmps
adc
xchg
fs
inc
adc
outs
jae
adc
jns
leave
nop
arpl
add
ret
shr
imul
dec
popaw
xor
jae
movs
xor
and
adc
int
add
pop
push
int3
outs
cmp
and
mov
imul
mov
call
and
inc
je
jne
or
or
push
movs
sub
inc
int3
ins
je
jns
or
cmp
neg
test
sub
adc
and
repz
xchg
fs
sbb
cmp
mov
xor
fwait
arpl
cdq
es
icebp
push
xor
stos
test
xchg
loope
sbb
iret
bound
addr16
mov
dec
xchg
and
adc
ins
jae
sub
jbe
stos
or
push
pop
retf
dec
leave
dec
fwait
inc
imul
push
shl
iret
dec
mov
out
sub
and
push
dec
out
movs
test
retf
add
in
pop
fst
push
push
in
inc
xlat
and
push
out
push
outs
xor
push
(bad)
fld
push
ja
and
adc
iret
xchg
or
inc
test
dec
adc
adc
cmps
(bad)
outs
sub
xchg
inc
mov
dec
inc
loope
(bad)
push
xchg
and
mov
mov
dec
in
xchg
cmp
jae
enter
xor
push
aas
arpl
push
jne
clc
jns
or
mov
push
jne
pop
ds
bound
xchg
pop
inc
jne
ja
stc
xor
push
dec
mov
rol
lock
and
ret
inc
add
add
call
push
mov
adc
add
or
out
movzx
cmp
test
add
pop
pop
ret
push
xor
xor
push
mov
or
push
push
icebp
fcmovbe
out
enter
(bad)
jb
sub
or
or
adc
out
sub
test
std
inc
add
pop
mov
inc
mov
test
(bad)
movzx
shr
fsubr
or
clc
jae
mov
ins
data16
jo
mov
sar
add
mov
mov
cmp
or
cmp
mov
adc
aaa
clc
and
push
fld
(bad)
mov
sub
pop
cwde
or
push
push
push
cdq
fcmovb
sbb
(bad)
orps
or
ds
add
aam
cld
sbb
pop
inc
mov
add
shl
pop
sub
leave
in
loope
cmp
mov
clc
xor
cmp
cmp
cld
sbb
push
js
inc
inc
or
call
iret
dec
adc
shl
or
xor
dec
jl
pop
bound
inc
push
push
mov
out
pop
shl
nop
pop
or
mov
add
dec
sbb
retf
mov
adc
cmp
ret
inc
add
fiadd
xchg
pop
call
jmp
mov
jge
ins
dec
and
in
call
or
ret
pop
jle
push
(bad)
enter
arpl
test
jne
cli
inc
sbb
push
xchg
adc
pop
lea
xor
jecxz
jmp
mov
ds
add
aas
and
push
jne
dec
adc
mov
add
push
mov
call
test
jecxz
inc
inc
push
lods
push
enter
fdiv
mov
and
jne
add
cmp
and
mov
mov
sti
or
pop
add
test
and
lock
push
or
call
neg
and
mov
into
and
lea
rol
add
enter
in
and
mov
dec
cmp
sub
dec
and
mov
ins
push
shr
dec
hlt
jge
sbb
in
aam
add
retf
or
sti
jo
sub
add
sub
mov
lahf
mov
xchg
push
jmp
push
(bad)
and
mov
mov
rol
int3
call
adc
in
mov
xor
inc
call
mov
cld
pop
pop
sub
mov
cwde
xor
loopne
test
into
(bad)
adc
iret
add
mov
stos
pop
call
iret
dec
and
cmp
jmp
mov
pop
mov
dec
mov
cld
sbb
jmp
mov
mov
jne
dec
adc
jmp
push
enter
sbb
jmp
fisubr
repz
push
or
(bad)
cwde
sub
das
repnz
push
fistp
imul
clc
jmp
test
ins
fadd
or
lods
and
push
daa
jl
fs
fistp
and
xor
xchg
xchg
or
add
jl
add
and
fstp
es
inc
test
pusha
add
cld
inc
and
enter
stc
in
out
jg
sbb
sub
jge
ret
mov
rol
ret
pop
add
es
lea
jg
xor
xor
push
push
fwait
and
adc
mov
sub
ret
or
(bad)
hlt
and
push
inc
les
cmp
add
iret
ror
fwait
shr
pop
xor
add
sub
je
dec
call
fsubr
shr
jne
xchg
dec
xor
add
add
add
jo
add
add
mov
add
adc
push
add
add
adc
mov
cld
popa
inc
pop
loope
push
mov
stc
xchg
ins
(bad)
fisttp
mov
inc
jecxz
add
mov
sbb
mov
push
sbb
mov
mov
sbb
pushf
aas
ins
(bad)
addr16
pop
lea
inc
fdiv
mov
push
movs
dec
add
call
xchg
test
scas
sbb
rol
dec
push
adc
xor
pop
mov
or
push
cs
repz
inc
inc
jle
cdq
push
dec
cmc
ss
push
shl
jmp
jmp
cwde
push
push
inc
ins
mov
sub
lds
inc
popf
aad
(bad)
mov
cmp
hlt
inc
push
xchg
pop
jmp
jmp
cs
jae
inc
and
loopne
push
sbb
cmps
icebp
add
shl
push
mov
adc
pop
nop
addr16
push
loopne
test
loop
mov
popa
mov
shl
(bad)
call
jae
ins
sub
mov
fnstenv
fst
inc
push
enter
mov
sub
sbb
push
pop
lea
dec
push
movs
int
pop
dec
push
xchg
arpl
out
push
xor
mov
add
jg
pushf
sbb
jb
sti
inc
test
cli
mov
mov
push
sub
movs
sub
fimul
stc
xchg
push
pop
es
dec
or
rcl
add
inc
inc
mov
ins
(bad)
pop
jne
add
mov
in
ficomp
inc
fisub
mov
fisttp
inc
cmp
cmp
imul
mov
jo
xchg
inc
out
xchg
push
mov
retf
pop
xor
in
enter
xlat
cmp
(bad)
mov
mov
push
(bad)
loopne
arpl
mov
lods
sbb
fcomp
ret
xor
sbb
retf
fst
xor
std
add
fld
sub
ret
nop
adc
sbb
push
(bad)
sbb
cmps
shl
xor
lahf
outs
inc
mov
sbb
and
sbb
jmp
xchg
dec
js
xchg
xchg
daa
inc
bound
cmp
retf
jle
fisub
mov
adc
pop
inc
cmp
sbb
imul
stos
fsubr
dec
repz
xchg
(bad)
aam
push
(bad)
jp
pop
sbb
ret
(bad)
retf
push
clc
pop
mov
gs
xor
in
jge
mov
les
cmp
cmp
test
movs
jnp
mov
inc
int3
inc
outs
aaa
imul
ds
ins
into
adc
shl
leave
fisttp
(bad)
in
xchg
popa
loopne
ret
mov
sub
jno
popf
mov
cld
push
jbe
lahf
das
xor
sub
inc
add
sbb
mov
mul
jle
xor
call
sar
outs
fnsave
mov
leave
ss
push
adc
inc
and
pushw
out
(bad)
leave
test
push
lock
sbb
loop
push
loope
cmp
or
lods
je
(bad)
je
jl
stc
call
data16
or
hlt
pop
pop
jns
dec
iret
retf
(bad)
(bad)
std
sbb
outs
call
test
(bad)
sbb
mov
repz
outs
inc
leave
jecxz
mov
sub
call
nop
push
pop
push
stos
(bad)
(bad)
aam
jne
mov
fisub
jecxz
sbb
mov
pop
add
mov
and
jns
inc
icebp
popf
dec
fidivr
jl
jmp
cmp
pop
push
pop
sub
inc
shr
loope
mov
jg
dec
mov
cs
inc
sbb
cmp
fnstenv
pushf
lock
shr
mov
push
pop
mov
pop
jne
lods
and
pop
dec
mov
adc
imul
cmp
leave
and
fmul
popf
or
cmc
and
pop
push
or
call
xchg
pusha
rol
(bad)
pop
sbb
sbb
loop
or
mov
mov
and
mov
mov
push
xchg
cmp
pop
loopne
outs
add
popf
pop
jmp
mov
and
pop
mov
sbb
clc
sub
test
jl
in
pop
loope
push
hlt
mov
cwde
mov
or
int3
mov
cld
sbb
fs
mov
jmp
sub
or
xor
fdivr
ret
sbb
dec
fadd
mov
data16
xlat
fnstenv
out
gs
sti
aaa
add
jbe
cmp
call
cmp
aad
sbb
pushf
pop
jbe
add
lds
icebp
rol
rol
pop
stc
je
cmc
fcmovbe
enter
adc
ja
cmps
pop
(bad)
mov
dec
sbb
dec
jmp
push
cmp
dec
retf
pop
mov
jnp
jle
and
cmp
scas
jne
ds
mov
push
and
into
xchg
cmp
jmp
cmp
push
(bad)
shl
xchg
aaa
add
mov
dec
pop
loop
pushf
stc
inc
pusha
repnz
push
in
mov
and
xor
addr16
(bad)
cmc
test
push
dec
jno
add
cli
add
xchg
iret
add
into
xchg
bound
push
xor
js
add
pop
inc
retf
retf
pop
loopne
jmp
sbb
or
jle
mov
repnz
push
les
push
outs
in
mov
call
test
mov
cli
mov
int3
div
loopne
call
arpl
shl
sub
or
arpl
mov
addr16
fist
cmp
jns
inc
add
nop
jle
push
je
push
outs
mov
imul
jle
gs
xchg
push
aam
aaa
mov
sub
ret
jne
aas
jg
les
jno
jae
jmp
xchg
mov
aad
jno
cli
dec
(bad)
cmp
aaa
sbb
sbb
cmp
dec
leave
int3
leave
cmc
mov
and
scas
out
sbb
add
jb
push
cmp
js
out
imul
xchg
cmc
popf
jp
in
aad
stc
pop
loope
arpl
fisttp
pop
dec
cmp
movs
lods
xchg
int3
fcmovu
scas
test
push
cmp
jle
test
jmp
out
mov
imul
xchg
inc
ja
xchg
mov
pop
jmp
les
mov
or
cmp
outs
aam
jecxz
dec
lahf
mov
xor
jns
and
stc
sbb
sbb
inc
mov
jmp
mov
mov
or
xor
cmp
lahf
jge
mov
sti
ret
mov
inc
xlat
xchg
pop
add
dec
jmp
jno
das
sbb
cwde
sub
imul
enter
gs
sar
or
les
lds
push
arpl
add
mov
(bad)
sub
inc
sub
add
inc
xchg
loop
test
pop
xor
jmp
aad
je
std
pop
sub
shl
push
pop
push
jae
mov
fistp
pop
mov
add
inc
(bad)
not
(bad)
shl
enter
shr
(bad)
xor
call
movups
fisttp
xchg
aaa
cmp
dec
mov
ret
inc
cmp
cmp
or
jb
push
mov
jo
xchg
fstp
retf
jp
fist
(bad)
jnp
push
mov
cmp
cs
sbb
mov
shl
popf
adc
mov
(bad)
or
pop
mov
push
and
dec
add
fs
mov
sub
lea
scas
aam
popa
push
in
dec
retf
mov
std
sub
mov
sbb
pushf
in
jge
mov
mov
rcr
out
mov
inc
cmps
je
fs
repz
and
jae
add
nop
dec
arpl
xchg
sub
or
add
in
or
dec
push
adc
imul
add
jae
dec
in
daa
aaa
inc
fdivr
jae
mov
cmp
or
cwde
loope
cmp
faddp
dec
or
mov
xchg
mov
and
sar
test
paddsb
ja
out
not
fnstenv
mov
add
push
jo
cmp
xor
mov
movs
adc
mov
cwde
jp
sbb
cmp
jns
ret
sub
push
rcr
fcmovnbe
sub
cs
or
jno
sbb
in
pop
mov
and
adc
leave
movs
das
ins
sbb
push
adc
pop
cmps
sbb
in
ins
stos
stos
fld
pop
xchg
fidiv
pop
or
sub
mov
(bad)
push
das
shl
xor
jg
push
and
movs
mov
test
daa
or
sbb
ret
movs
les
out
jae
scas
out
add
inc
test
push
sub
mov
mov
call
shl
xlat
pusha
movs
jnp
movs
and
or
pop
je
sub
out
jno
jnp
mov
ds
stos
xchg
and
rol
ret
jge
cdq
je
mov
ror
mov
and
shl
mov
fist
sahf
dec
in
iret
lahf
mov
outs
mov
cmp
fsub
in
into
cs
(bad)
lock
retf
push
mov
repz
clc
push
add
xchg
imul
jecxz
mov
popa
pusha
xchg
pop
mov
sub
call
repnz
ss
and
and
xor
cs
dec
push
dec
dec
pop
add
ret
push
adc
pop
dec
div
mov
aaa
arpl
push
push
mov
movs
jp
inc
cmps
add
addr16
add
fcom
fld
addr16
loop
pop
repnz
inc
aad
ret
pop
push
(bad)
rol
arpl
pushf
sbb
xor
jmp
jnp
push
repnz
movs
fisttp
adc
cwde
jle
movs
xor
sbb
mov
nop
scas
out
retf
pop
push
inc
push
mov
cli
stos
movs
push
ins
push
mov
mov
into
jl
aam
add
or
mov
cmp
ins
nop
inc
mov
das
or
cdq
mov
(bad)
cs
mov
push
(bad)
out
aas
ret
sbb
inc
mov
lods
loopne
cmp
in
enter
jecxz
pop
and
stos
jmp
daa
rcr
cmps
dec
push
mov
stos
push
xchg
std
mov
out
xor
aad
imul
dec
(bad)
and
jnp
iret
xlat
ins
push
das
cmp
dec
stc
mov
sub
repnz
call
lock
pop
movs
or
add
dec
adc
loopne
sub
pop
mov
sbb
js
push
aad
mov
sub
push
pop
inc
adc
in
icebp
imul
mov
popa
enter
das
test
jnp
mov
jle
mov
jns
fwait
add
in
adc
sbb
(bad)
jecxz
fidivr
xor
push
sbb
stc
retf
push
stos
ds
movs
dec
stc
mov
sub
in
in
xor
aad
pop
sbb
ror
fidiv
into
push
in
or
les
cli
dec
and
push
js
pop
mov
or
(bad)
mov
mov
cld
push
retf
sbb
fwait
ins
cwde
mov
and
xchg
test
sbb
push
xchg
iret
rcr
inc
aas
stc
dec
(bad)
imul
imul
(bad)
std
in
push
fistp
add
out
mov
jns
pop
dec
mov
jle
add
sub
xchg
adc
push
mov
dec
push
xchg
outs
(bad)
test
sbb
retf
and
sub
sub
mov
shl
and
cmp
or
movaps
(bad)
(bad)
mov
ret
adc
pop
mov
lods
adc
fimul
jb
shl
cmp
stc
jo
sbb
pop
xchg
xor
add
mov
or
xchg
in
mov
loop
sbb
arpl
lods
push
jae
sub
xor
and
add
xchg
xor
cwde
in
aad
(bad)
dec
add
mov
mov
push
pop
sbb
xor
leave
popa
stos
dec
push
cmp
inc
mov
mov
ins
jnp
mov
push
ret
inc
mov
add
pop
jnp
xchg
cld
mov
data16
fs
xrelease
lds
xchg
dec
imul
inc
mov
push
mov
pop
fst
xor
mov
mov
cmp
aam
sbb
int
ret
cli
or
(bad)
inc
xchg
rcr
rcl
test
fisub
test
push
jle
retf
push
and
inc
cmps
mov
xchg
pop
push
lahf
sub
outs
repz
jmp
sub
xlat
fild
sbb
sbb
mov
ror
rdtsc
cs
stos
jne
int3
mov
ret
or
sub
or
scas
int
mov
popf
mov
das
xor
ret
mov
cmps
mov
mov
mov
(bad)
push
or
loopne
add
ret
cmp
test
fisttp
xchg
gs
ja
dec
es
pop
pop
aas
and
scas
jb
into
arpl
test
xor
movs
jbe
sbb
jns
(bad)
aaa
or
xchg
shl
jns
out
jl
push
pop
jl
and
inc
fnstcw
sub
pop
sub
mov
add
in
loopne
(bad)
std
xchg
sub
sti
(bad)
enter
cmp
(bad)
push
shr
dec
cmps
movups
sub
iret
aaa
mov
call
and
dec
movs
mov
adc
(bad)
imul
cmps
pop
frstor
gs
mov
jp
pop
push
mov
mov
std
sub
xor
mov
sub
rcr
adc
aad
sub
imul
sar
iret
sub
ja
jl
movs
sub
dec
cdq
mov
lds
sub
sub
popa
retf
pop
lock
cmp
mov
jns
aaa
push
scas
outs
scas
icebp
rcr
cmps
(bad)
sbb
daa
test
jo
or
shr
(bad)
retf
bound
pop
jmp
push
xor
lods
xchg
xor
dec
cmc
adc
and
mov
sub
fwait
addr16
xchg
lock
jo
mov
aad
lock
dec
adc
pop
adc
out
out
or
addr16
cmp
cmp
rcl
sub
mov
jmp
enter
dec
std
ss
inc
sbb
cmp
add
imul
push
ret
dec
cmc
jns
(bad)
sbb
dec
ret
jmp
sub
xchg
sbb
sub
push
(bad)
sbb
popa
dec
mov
fnstsw
pop
loop
nop
inc
or
xor
dec
mov
sub
lahf
fcmovb
fmul
cld
(bad)
ret
(bad)
in
add
xor
pop
movs
sub
aam
or
cmps
jno
jno
or
mov
and
gs
cmps
push
ds
retf
mov
jmp
fisttp
cdq
cmp
sub
jle
mov
add
sub
inc
cdq
ss
xor
pop
mov
mov
xchg
lods
rcr
in
sbb
repnz
jp
retf
push
adc
adc
and
lea
sar
mov
xchg
loopne
push
sub
rol
push
sbb
fcmovbe
sub
sbb
and
add
mov
in
stc
int
xor
dec
loop
shr
in
xchg
inc
cli
xor
cs
push
push
fcom
xchg
imul
je
shl
iret
aaa
mov
pop
cld
(bad)
add
cmp
gs
sub
mov
or
rcl
addr16
pop
call
dec
dec
nop
jl
call
jmp
sbb
dec
sub
ja
inc
mov
lea
pop
call
cmps
add
mov
cmp
mov
xor
add
shl
push
mov
mov
test
push
into
into
rol
sub
add
push
xor
mov
out
xor
or
mov
cmps
lods
dec
dec
jl
int3
(bad)
mov
pusha
push
rcl
retf
cmps
mov
jg
push
push
imul
mov
xchg
cmp
aas
sub
dec
xchg
xor
jns
pop
push
cs
add
mov
push
xchg
iret
mov
nop
movs
jb
and
leave
mov
ror
mov
jge
jns
sti
pusha
jnp
cmps
cmp
neg
push
cmps
sub
sub
leave
xchg
test
aas
movs
and
or
ins
rcl
mov
add
ficomp
lahf
adc
jae
xor
inc
mov
sbb
std
add
add
pop
sbb
ficom
add
retf
std
push
scas
pop
scas
jmp
add
xor
gs
out
mov
mov
movsx
jg
mov
(bad)
test
ins
dec
xchg
(bad)
ja
push
mov
and
lods
mov
cmp
sub
inc
push
sub
mov
mov
pop
rcl
or
mov
iret
es
push
push
hlt
sahf
dec
movs
add
jbe
xor
ret
mov
jb
call
idiv
ret
inc
dec
add
out
sbb
push
pop
sbb
xchg
xor
xor
sar
jno
mov
add
scas
mov
fist
or
imul
clc
ror
jl
ja
outs
stc
push
pop
retf
jg
push
sub
shl
(bad)
repnz
(bad)
xlat
imul
or
fstp
fsub
aaa
in
scas
jo
aaa
xor
sbb
add
loop
fiadd
add
xor
push
xor
stc
out
jo
inc
call
ror
jecxz
(bad)
pushf
(bad)
nop
sbb
(bad)
jno
std
bt
sahf
add
shl
fdivr
out
cwde
repnz
scas
bound
ja
jno
lds
dec
push
(bad)
jns
daa
xor
or
jmp
mov
nop
xchg
inc
out
dec
ret
push
ret
leave
mov
not
(bad)
(bad)
fsub
pop
mov
xchg
ins
loope
and
cs
jge
cmp
je
shl
inc
iret
and
add
add
retf
xchg
xchg
icebp
cmp
cmp
push
test
xor
or
inc
xchg
sub
scas
mov
leave
outs
jns
stos
lods
lods
mov
push
sub
sub
in
pop
push
xor
je
outs
xchg
fstp
add
inc
ins
jg
sti
pop
ret
(bad)
icebp
pop
pop
jne
test
cli
mov
inc
pop
stos
sbb
xor
fnstenv
outs
mov
and
push
xchg
cli
mov
stos
cmps
div
fdivr
sbb
out
std
lahf
lock
cmp
cs
xchg
add
jo
jbe
jg
push
mov
mov
rcl
jle
movs
adc
addr16
mov
test
iret
inc
std
adc
jnp
repnz
movs
inc
test
int3
arpl
in
inc
cli
mov
dec
enter
cs
adc
sbb
mov
adc
dec
xchg
pop
add
dec
dec
jo
adc
pusha
pop
push
daa
or
cmps
dec
(bad)
dec
mov
arpl
inc
dec
scas
int
pop
pop
sbb
por
das
test
jp
int
outs
or
add
in
fdiv
repnz
and
inc
daa
popf
jbe
mov
retf
out
cmps
ss
mov
pop
cld
(bad)
std
mov
ret
cmp
mul
out
pushf
pop
or
pop
cwde
push
jge
push
js
jl
sbb
iret
cmp
push
scas
nop
push
out
mov
shl
movntps
push
popf
rcl
in
ins
xchg
out
imul
(bad)
cmps
add
shl
xlat
pop
inc
adc
sub
xlat
inc
inc
jle
inc
sub
pop
or
and
inc
sti
mov
out
push
ins
xchg
adc
sub
dec
cmps
and
gs
pop
fcmovb
test
mov
loop
mov
mov
stc
imul
ficomp
mov
repnz
jo
lea
push
bound
push
xchg
and
loopne
ins
xchg
mov
xchg
outs
pop
loopne
bound
inc
cmc
loope
mov
jae
or
ds
cwde
mov
dec
hlt
push
neg
aaa
es
push
mov
int3
sar
mov
inc
mov
push
sub
into
scas
pop
pop
push
mov
sar
ror
mov
ins
mov
mov
call
xchg
or
das
mov
cmps
jb
test
dec
jns
je
jmp
rol
inc
cmps
mov
mov
in
dec
push
push
dec
and
mov
cwde
push
jae
push
or
adc
in
and
cmps
push
inc
mov
push
stos
fnstcw
clc
out
dec
stos
mov
xchg
rcr
inc
jp
fs
cmps
inc
dec
or
mov
nop
iret
lea
sbb
jmp
mov
aaa
adc
lods
cmc
and
sub
pop
inc
sub
add
ret
gs
add
in
rcl
adc
jl
push
jle
dec
fsub
ja
sbb
test
mov
hlt
pop
jl
mov
not
or
pop
cmp
mov
aad
and
pop
or
mov
push
nop
jo
imul
mov
mov
mov
test
pop
ror
xor
call
nop
int
sub
inc
push
movs
ins
fidiv
cmps
xor
or
ficomp
(bad)
into
loope
xor
ret
movs
mov
je
daa
inc
mov
movs
cwde
call
pop
mov
or
(bad)
mov
fnstcw
mov
sbb
mov
mov
sti
xchg
aad
cmp
or
call
movs
mov
jo
dec
xlat
add
inc
loopne
test
loopne
push
(bad)
retf
in
sbb
(bad)
xlat
add
jmp
inc
dec
hlt
hlt
lds
mov
dec
sar
add
lds
(bad)
xor
push
ret
inc
push
arpl
jae
add
lock
jbe
mov
ficom
pop
outs
xchg
data16
scas
dec
punpckhwd
inc
xchg
inc
iret
sub
loop
leave
pop
dec
mov
mov
adc
mov
leave
push
popa
fisubr
shl
daa
mov
dec
push
pop
call
int
ja
xchg
pusha
inc
pop
inc
outs
das
mov
bound
pusha
sbb
dec
mov
out
clc
pop
and
out
test
stc
cwde
sar
xchg
dec
mov
retf
(bad)
retf
mov
xchg
adc
fimul
icebp
shl
push
cmps
aas
adc
jae
and
loopne
pop
shr
cmp
lock
push
out
icebp
cmp
out
sub
xchg
mov
mov
or
dec
sbb
lahf
add
xchg
lds
mov
adc
cmp
adc
mov
call
add
add
pop
sbb
or
popf
pusha
cmp
mov
je
push
(bad)
out
dec
call
nop
and
pop
call
mov
fisttp
xor
les
pop
cs
dec
mov
xor
push
imul
dec
add
cmp
les
xor
and
pop
adc
adc
gs
cmps
cld
adc
les
cmp
retf
xor
sub
call
xchg
jb
ins
fwait
mov
push
aad
cmps
add
fisubr
dec
imul
int3
dec
shr
(bad)
sahf
rep
mov
jmp
inc
jno
mov
repnz
sub
arpl
mov
popa
mov
xchg
mov
retf
pop
ror
or
enter
add
inc
js
fbld
mov
fucomi
inc
or
enter
sub
inc
push
fidiv
js
pop
jecxz
outs
fistp
imul
xchg
aas
outs
sub
rcl
scas
mov
sub
xchg
jnp
arpl
data16
mov
or
xor
or
push
or
enter
cmp
inc
or
pop
adc
or
fiadd
daa
inc
jge
sub
pop
xchg
sbb
das
mov
popa
sub
aad
and
shl
pop
ds
inc
stos
repz
(bad)
inc
iret
mov
push
or
sub
mov
ret
leave
ror
pop
inc
jg
inc
and
mov
loop
lahf
cmp
or
inc
dec
call
pop
es
mov
push
fwait
cmps
bound
xor
lods
(bad)
dec
push
pop
and
fstp
movs
fstp
je
aam
arpl
and
cmp
sub
cld
std
loope
lea
adc
jo
adc
and
neg
es
jmp
fst
(bad)
lods
movs
pop
cmp
pop
ds
leave
clc
jae
push
(bad)
push
inc
test
cwde
rol
inc
mov
loopne
jae
xchg
xor
mov
add
rcl
fwait
xchg
inc
lahf
pop
mov
popf
cmp
jmp
fldenv
hlt
mov
movs
jg
or
add
push
nop
dec
mov
scas
push
mov
mov
inc
dec
jmp
jle
pop
cmp
stc
mov
les
cmc
sbb
inc
pop
xchg
mov
mov
cmp
jo
push
xchg
inc
das
xchg
cmp
icebp
std
int3
jo
mov
mov
addr16
stos
inc
jecxz
mov
push
(bad)
je
sbb
icebp
dec
lock
mov
or
es
push
fisttp
xchg
gs
adc
retf
ficom
mov
sbb
cmp
mov
cdq
push
jno
lea
dec
(bad)
dec
inc
ja
cmp
arpl
jl
push
push
lahf
mov
push
jo
or
outs
jle
repnz
mov
jge
test
clc
loopne
ja
fs
push
repnz
xchg
add
xchg
lds
and
cwde
sub
in
in
xor
jmp
out
leave
enter
sub
pop
mov
mov
xor
mov
stos
and
inc
(bad)
out
jnp
xlat
stos
cld
sbb
in
jno
iret
sbb
jb
aad
jle
fsubp
cmps
cmp
push
fwait
sbb
pop
or
lds
lods
scas
push
push
ja
and
pop
push
ror
push
fld
push
movs
out
shl
pop
leave
fdivr
fdiv
call
in
push
sub
lds
clc
lods
push
popa
aaa
inc
cmp
lock
mov
mov
sbb
mov
stos
enter
dec
adc
sbb
mov
std
pop
jnp
icebp
bound
sbb
cmp
loopne
xor
push
fadd
call
cmp
std
mov
push
push
outs
out
pop
xchg
mov
jecxz
jbe
push
cwde
adc
fimul
enter
cmp
std
jo
push
adc
mov
adc
push
pop
pop
scas
dec
in
fcmovnbe
and
fadd
mov
lock
es
jmp
xor
sub
pop
mov
sub
movs
sbb
pop
xchg
test
loopne
iret
lds
mov
jo
lds
sub
xlat
and
popa
inc
push
and
stc
or
add
dec
scas
sahf
jmp
mov
xchg
outs
xadd
mov
call
ret
mov
(bad)
sub
or
and
push
xor
push
inc
in
mov
dec
dec
ds
mov
jne
jmp
xor
cmp
sub
minps
cmps
test
jne
fmul
adc
pop
mov
jmp
fadd
fsubr
(bad)
in
mov
mov
xor
les
mov
dec
mov
call
lahf
or
add
sub
push
dec
mov
push
ss
enter
sbb
js
test
test
test
retf
sub
imul
dec
je
jns
push
cmp
shl
mov
add
pop
jg
(bad)
sbb
mov
ret
mov
outs
in
jnp
mov
cmc
cmp
jg
cmp
fldcw
cli
scas
mov
jo
inc
ins
sub
fstp
push
mov
pop
fst
ja
cwde
cmps
cwde
mov
xchg
jb
test
call
mov
fisubr
in
fisttp
xchg
and
mov
aaa
hlt
in
mov
or
inc
jl
xchg
xor
xchg
jecxz
mov
or
aad
and
test
sub
xchg
lods
mov
cmc
mov
sub
sub
repnz
adc
je
leave
xchg
or
(bad)
xor
xchg
iret
neg
lods
fidiv
mov
bound
mov
enterw
cwde
mov
aad
lea
test
adc
imul
ss
inc
mov
clc
aaa
and
add
sar
push
loopne
xchg
inc
ror
push
xlat
or
mov
add
pop
jge
mov
mov
mov
int
test
lock
test
out
push
pushf
mov
and
dec
iret
and
in
(bad)
ja
std
fistp
(bad)
fs
pop
add
int
inc
in
cmp
and
es
pop
jg
(bad)
push
xchg
lds
xchg
mov
cwde
sbb
es
mov
fwait
push
rcr
js
pop
push
mov
ficomp
scas
pop
sub
push
call
push
mov
inc
imul
sub
and
(bad)
adc
lods
loope
xor
mov
scas
push
adc
and
mov
or
cmp
pop
fdiv
fwait
pop
cdq
lea
(bad)
movs
sti
addr16
adc
sbb
cmp
jae
into
in
mov
xor
dec
adc
push
xchg
test
in
push
xor
inc
sbb
push
enter
xchg
fisttp
jae
shl
dec
into
pop
pop
and
pop
popa
inc
imul
stc
stos
cmp
mov
ds
pop
jmp
and
iret
lods
retf
add
jg
cli
cli
xchg
fs
or
push
xchg
xor
push
xchg
test
test
or
sub
mov
adc
popf
mov
pop
shl
imul
rcl
lods
push
mov
add
add
sbb
sbb
sub
in
pusha
sbb
shl
or
add
add
add
sti
jmp
mov
movs
std
int3
es
mov
add
sti
mov
ins
out
lods
cmp
mov
pop
enter
fs
or
jmp
inc
sub
mov
int3
stc
dec
fisttp
sub
cwde
or
(bad)
cmp
out
sub
cmp
bndstx
int
push
test
and
(bad)
jne
cmp
adc
xchg
call
scas
mov
cmp
jp
lods
or
jmp
adc
jecxz
fdiv
(bad)
call
mov
xor
xchg
les
xchg
ss
push
mov
sbb
jbe
sub
pop
push
pop
xchg
sbb
jo
mov
and
adc
xchg
xlat
inc
in
outs
push
push
inc
cmps
cwde
fstp
sbb
xchg
fcmove
movs
in
inc
aas
pop
outs
bound
mov
cmp
rol
call
sahf
pop
jg
test
scas
jbe
xchg
sbb
jmp
dec
pop
mov
stos
and
popf
pushf
push
jge
or
pop
jmp
test
arpl
jle
and
cmps
dec
sub
inc
sbb
pop
push
sti
cwde
jns
dec
push
sar
test
xor
xor
jo
add
jmp
scas
and
mov
xor
mov
fild
mov
sub
mov
jne
cld
adc
fnsave
js
add
xchg
sub
cvtps2pi
push
xchg
cs
mov
retf
js
inc
mov
retf
cmps
out
lds
jle
out
lea
dec
fistp
xchg
cmps
mov
push
cli
push
xchg
(bad)
ins
fadd
sahf
nop
daa
jmp
fst
daa
pop
jmp
push
push
ds
adc
je
dec
sub
cmp
std
sub
jecxz
pop
into
pushf
stc
mov
leave
mov
imul
mov
jecxz
jp
and
inc
jns
daa
data16
mov
aaa
mov
cmc
push
cmp
ins
dec
stos
shl
lds
jbe
jge
je
and
ror
push
push
jmp
into
xor
mov
loop
xchg
cdq
pop
lods
mov
call
retf
scas
adc
cmp
mov
cmp
push
xchg
adc
mov
push
gs
push
and
ja
lahf
ret
popa
fimul
ret
ror
jbe
fcmovne
arpl
dec
in
pop
or
out
xchg
and
je
(bad)
jae
and
popa
cld
and
sub
add
jae
push
ret
push
pop
pop
sti
mov
adc
sub
mov
and
pop
aad
arpl
dec
sub
push
pusha
mov
in
int3
bound
das
in
push
sbb
sub
xor
outs
inc
mov
xor
iret
pushf
cwde
sbb
pusha
push
dec
call
adc
add
add
jo
mov
lock
mov
or
mov
mov
adc
int3
sbb
jae
cmp
cmp
mov
push
bound
test
cmp
adc
cld
pop
push
pop
jae
and
lahf
test
repz
cdq
enter
inc
lahf
add
jnp
stc
jle
and
leave
cmc
push
movs
addr16
out
jp
stc
lods
jle
inc
lds
mov
xchg
aas
aas
push
aaa
rcl
mov
mov
sub
jecxz
pushf
jge
jae
neg
xchg
mov
xchg
jge
jne
popa
js
cli
fstp
imul
ficom
or
push
mov
dec
pop
hlt
sub
sub
out
cmp
xchg
dec
test
into
pop
jl
push
add
call
push
push
dec
sub
adc
ins
dec
add
pop
jl
out
pushf
sbb
or
add
cmps
mov
js
mov
or
(bad)
aam
pop
int
or
sub
ret
lahf
xor
sub
jae
push
sbb
jns
sub
pop
out
ret
jae
retf
sbb
cld
bound
cmp
xlat
scas
sbb
stos
sub
sti
in
jnp
cwde
mov
ins
(bad)
iret
dec
cmc
sub
mov
mov
sar
mov
addr16
and
dec
jg
ret
ficom
into
mov
jecxz
cmp
or
jp
add
mov
jp
in
adc
paddd
test
and
ret
iret
push
push
lahf
pop
push
push
jb
arpl
mov
jecxz
mov
dec
dec
dec
pop
jno
pop
dec
jmp
adc
stos
and
shr
mov
mov
das
xchg
outs
xchg
adc
ret
xor
lods
and
push
lahf
jp
mov
mov
sbb
(bad)
mov
and
sub
adc
jle
mul
in
(bad)
lock
fs
adc
std
nop
adc
adc
test
frstor
push
imul
(bad)
lods
fcomp
cmp
stc
popa
icebp
(bad)
jge
stc
mov
enter
sub
mov
sub
in
dec
push
pop
pop
enter
icebp
iret
sub
mov
jne
scas
mov
fcom
mov
xchg
fincstp
mov
adc
pop
stos
dec
and
push
jns
add
fwait
adc
scas
mov
push
inc
or
ja
outs
push
sub
or
dec
ja
jb
lods
dec
mov
shl
mov
adc
lock
inc
inc
xchg
dec
js
arpl
imul
xchg
sbb
mov
ret
dec
mov
push
int
lods
popa
les
std
xchg
sbb
daa
sub
test
mov
int
das
pop
aaa
jne
test
sbb
hlt
jmp
retf
pop
pop
retf
xchg
push
jp
jmp
xchg
mov
push
iret
inc
sbb
loop
pop
aas
inc
not
ds
push
mov
push
and
fdivrp
push
fs
call
lea
dec
pop
mov
lock
and
xlat
iret
in
shr
jl
inc
pop
and
aaa
sub
(bad)
loope
dec
push
add
mov
jnp
adc
push
(bad)
int3
sbb
repz
mov
mov
sub
push
jle
mov
push
aad
mov
xlat
xchg
mov
test
retf
sar
or
mov
push
inc
inc
jmp
int3
enter
jle
jge
xor
pop
rcl
ja
out
and
sqrtps
aad
fnsave
fwait
xor
pop
js
inc
mov
(bad)
inc
mov
and
out
(bad)
add
xchg
mov
adc
loope
push
push
lods
sbb
hlt
ficom
add
and
movs
mov
inc
or
ins
cmp
dec
sub
test
mov
jmp
xor
inc
out
or
sbb
pop
mov
les
ror
mov
jp
sti
add
cmc
outs
jne
pop
mov
cmp
fiadd
mov
cmp
pusha
out
push
clc
fs
les
mov
pusha
xchg
push
popf
cli
movs
sub
xchg
in
in
xchg
push
push
sub
dec
ror
je
sbb
mov
pop
jle
aas
test
jecxz
xchg
cs
test
pop
aad
mov
xchg
imul
pop
sbb
cmp
xchg
pushf
data16
push
arpl
pop
sbb
test
cwde
xor
sub
loop
movs
push
mov
scas
iret
or
inc
mov
mov
jmp
movs
pop
pop
xor
jecxz
mov
pop
loopne
in
ja
out
mov
ficom
in
pop
jecxz
sub
aaa
xor
ficomp
push
ds
mov
inc
arpl
pop
inc
outs
leave
sti
outs
idiv
in
(bad)
dec
sub
pop
adc
das
sahf
test
nop
shr
xchg
xchg
push
and
mov
mov
repz
bound
mov
mov
scas
dec
sbb
and
idiv
inc
movs
hlt
mov
aas
and
and
and
pushf
loopne
jge
xor
mov
fdivr
dec
test
ins
mov
jo
loope
scas
pop
mov
xchg
jo
pop
sub
sub
pop
push
(bad)
out
mov
rol
pop
mov
cld
cmp
add
xor
adc
retf
xor
cmp
dec
loop
dec
addr16
lds
pop
cmp
pop
daa
push
xor
add
popa
sbb
dec
pop
rcl
es
mov
xchg
pop
adc
repnz
test
fmul
fild
pop
xor
add
out
call
pop
push
or
cli
ins
jp
jmp
push
fcomip
xchg
(bad)
enter
stos
add
pop
(bad)
xlat
cmp
mov
xor
or
mov
mov
out
out
daa
jno
sbb
or
sub
push
nop
fnstsw
rol
xor
fdiv
in
cmp
lahf
scas
sbb
mov
adc
and
or
lock
lahf
or
inc
xchg
mov
pop
jp
push
jp
jbe
stc
leave
je
or
in
jo
lods
leave
out
mov
test
cmc
cld
gs
sbb
push
sbb
mov
adc
jecxz
pop
push
je
cld
fcmovbe
fistp
sbb
cld
sbb
test
jne
repnz
call
addr16
enter
rcr
fmulp
sbb
mov
mov
cld
lods
and
ret
pop
cs
xchg
pop
lods
(bad)
sbb
aam
sar
jnp
fisttp
mov
cmp
repnz
add
mov
push
dec
mov
mov
or
popa
fld
(bad)
cwde
test
pop
jnp
cmp
call
lds
dec
cdq
push
fs
lds
mov
mov
jne
sub
ss
std
imul
shl
aam
cmps
out
dec
loopne
outs
mov
inc
cmc
mov
and
and
cmp
mov
mov
std
inc
push
in
scas
jne
sub
shl
outs
adc
repz
jbe
retf
aaa
cwde
add
xchg
mov
inc
xor
lods
mov
cmps
not
jns
das
and
in
ins
mov
mov
mov
inc
lods
jno
stos
and
mov
test
inc
aas
push
retf
push
loopne
loope
ffreep
inc
lahf
movs
not
mov
fbstp
inc
xor
pop
jb
daa
inc
push
cmp
jns
jecxz
loope
pop
dec
jle
sub
adc
ret
sbb
nop
xchg
rol
xchg
rol
cmp
and
pop
sar
sbb
cmp
inc
movs
int3
test
jb
inc
pushf
inc
mov
cmp
sub
es
push
jmp
ja
sbb
add
push
sbb
mov
shl
xchg
jno
xchg
push
bound
sbb
pushf
ins
loop
imul
movs
(bad)
jnp
cld
add
loop
push
dec
dec
nop
xlat
in
xor
fsub
fsub
ins
call
pop
mul
sbb
inc
retf
(bad)
and
movs
xchg
out
xlat
aam
add
mov
ins
cmps
cmp
ins
mov
push
and
mul
lahf
shl
mov
test
stc
leave
xchg
cdq
pop
sbb
sbb
mov
cmp
push
cmp
hlt
or
jg
mov
test
or
bound
add
mov
sti
popf
test
push
lods
ja
push
xchg
xchg
js
pop
inc
mov
movs
dec
out
pop
mov
or
mov
xchg
in
aas
dec
or
in
pop
and
cmps
cmp
rcl
out
fsubr
shl
(bad)
icebp
ds
into
call
and
scas
or
add
inc
arpl
(bad)
nop
mov
je
adc
pop
sar
or
xor
cld
call
mov
xor
or
imul
mov
push
push
scas
mov
cmp
jg
ror
sub
push
das
push
xchg
jnp
mov
test
loop
mov
(bad)
(bad)
mov
ret
inc
sbb
mov
pop
pop
aaa
leave
repnz
pop
and
imul
pop
cmps
push
mov
loope
or
lods
dec
movs
mov
dec
xchg
inc
push
jbe
ret
push
cmp
mov
repnz
push
push
(bad)
push
or
hlt
xor
adc
psrlq
or
pop
ficomp
cmp
xchg
jge
ror
xor
icebp
or
lods
rol
or
rol
fsubr
popf
call
or
adc
cmps
mov
in
jle
and
mov
lods
adc
imul
dec
xchg
adc
out
sub
loope
push
test
dec
xor
pop
retf
iret
fistp
cdq
popa
jg
adc
inc
jmp
popa
inc
jecxz
mov
or
pop
shr
dec
or
dec
mov
repnz
fimul
pop
hlt
lods
and
test
out
dec
dec
out
(bad)
mov
xor
jmp
arpl
mov
add
jmp
stos
or
cs
(bad)
sub
sbb
mov
mov
jmp
add
ss
dec
mov
nop
adc
mov
sub
adc
ret
cmp
and
mov
sub
jne
and
cwde
cli
inc
jp
(bad)
fisttp
lea
scas
ret
(bad)
push
push
pop
faddp
fs
cmp
mov
mov
(bad)
mov
push
inc
add
or
dec
icebp
test
es
xchg
jg
frstor
hlt
ret
icebp
adc
push
jnp
movs
fisubr
loop
aas
jns
dec
fs
pop
adc
lods
loopne
out
call
adc
in
lds
movs
ins
outs
mov
mov
pusha
loop
xchg
aam
add
adc
push
retf
popf
int
rcl
fistp
xchg
into
push
dec
sub
jmp
or
push
pop
cld
sti
les
lods
repz
outs
test
xor
adc
cs
loope
mov
pop
lods
fs
cwde
add
sub
enter
fnsave
adc
or
loopne
dec
sbb
mov
pusha
sbb
imul
mov
imul
sbb
sbb
cld
jmp
cmc
inc
popa
loop
mov
jle
gs
xchg
es
push
push
add
jg
fs
pop
imul
cmc
fdivrp
vpcmpgtb
cmp
xchg
mov
cmps
stos
pop
inc
xlat
gs
js
aas
push
into
sar
xor
inc
test
jbe
mov
xchg
add
fistp
jecxz
sar
inc
jne
aaa
lahf
adc
pop
sub
data16
adc
jl
mov
shl
jo
and
add
icebp
test
sub
or
push
mov
cmp
in
(bad)
jp
scas
ror
push
push
fstp
imul
ret
mov
or
push
jmp
jmp
movs
cli
push
aam
in
cwde
or
or
inc
xor
xchg
add
ins
test
cmps
sub
add
dec
arpl
loop
cld
jecxz
pop
repnz
sti
inc
jecxz
popa
cmp
mov
pop
fiadd
jp
or
loopne
jle
out
test
mov
sbb
add
dec
push
cli
xchg
out
cmc
mov
push
mov
pop
mov
and
cmc
sub
mov
ja
dec
fcomi
sbb
dec
arpl
mov
dec
jp
fadd
call
repz
dec
dec
jmp
sti
stos
imul
ds
mov
dec
fbld
mov
and
je
mov
xchg
adc
jne
(bad)
push
sbb
loopne
mov
mov
xchg
jnp
jecxz
sub
scas
mov
clc
loopne
adc
xchg
dec
adc
add
pushf
and
jbe
lds
cmp
push
mov
ds
jl
sub
inc
jo
test
inc
repz
sbb
mov
repnz
outs
cdq
dec
mov
ds
test
pop
sbb
shr
adc
fs
call
xor
sub
pop
mov
test
(bad)
ds
jae
push
xor
fisttp
or
retf
mov
in
lahf
or
xor
cmc
cmp
jmp
pop
movs
and
icebp
inc
jmp
aas
or
pop
ret
imul
mov
xchg
dec
shr
jmp
dec
mov
cmp
xchg
jns
add
dec
bound
inc
push
dec
movs
push
push
popf
daa
push
cmc
in
ss
std
loope
(bad)
shl
or
jnp
lds
aam
sub
sub
cmp
jnp
mov
mov
sti
fwait
retf
ret
fs
mov
aas
jle
repz
xor
dec
movs
imul
add
enter
call
retf
xchg
or
test
inc
data16
lods
int
imul
cld
xchg
daa
not
(bad)
(bad)
je
or
and
mov
mov
scas
repz
xor
pop
mov
es
push
enter
mov
lock
aad
mov
aas
fwait
mov
retf
out
imul
dec
dec
dec
and
or
fs
movs
das
mov
adc
fadd
test
(bad)
mov
mov
push
dec
cmp
shl
lods
xchg
pop
push
iret
movs
test
mov
mov
or
sbb
adc
outs
in
loopne
sub
xor
test
daa
mov
aaa
in
sbb
cmp
pusha
mov
sbb
xchg
pop
icebp
(bad)
push
test
(bad)
jns
dec
jmp
pushf
xlat
outs
imul
out
pop
dec
(bad)
jge
int3
ret
fidivr
fs
mov
xchg
or
mov
adc
xor
mov
fwait
popa
mov
in
jbe
or
push
jb
and
lds
iret
cmovno
adc
hlt
cmp
sub
or
and
cmp
fnstsw
int
bound
mov
or
in
scas
jmp
sbb
xor
fcom
les
sbb
jno
outs
fs
enter
shl
mov
in
adc
jbe
fs
imul
push
dec
add
fdivr
mov
jmp
(bad)
sbb
rcl
shl
xchg
push
arpl
(bad)
in
xor
sbb
add
scas
repz
mov
cmp
sub
add
je
cdq
xchg
xor
sbb
sub
repz
shl
lahf
adc
cmp
inc
dec
aas
movs
jne
push
aaa
mov
pop
dec
jb
xor
cmc
loop
hlt
std
cmps
xor
out
dec
inc
out
cli
imul
or
sub
push
pop
stc
or
adc
dec
loopne
rol
aaa
les
popa
xchg
arpl
scas
in
aas
js
xchg
retf
lods
gs
call
mul
(bad)
pop
arpl
xchg
aad
jb
mov
mov
pop
(bad)
push
in
loope
inc
pop
test
mov
sub
cld
(bad)
ror
cmp
pop
les
dec
mov
add
iret
xor
inc
loop
test
fsubr
push
mov
inc
shl
pop
add
hlt
in
add
mov
push
cmp
bswap
adc
pop
mov
jnp
je
xchg
ins
aam
mov
cmp
std
xor
arpl
cmp
(bad)
jno
scas
ffree
ss
xchg
inc
call
mov
jbe
sahf
dec
pushf
push
pop
icebp
inc
pop
movs
cwde
mov
or
or
ficom
sbb
loopne
lock
not
jae
retf
add
jne
mov
adc
dec
rcr
dec
imul
mov
xor
inc
ins
outs
imul
push
adc
sub
or
mov
cs
jbe
and
ret
pop
jmp
dec
push
mov
cmp
xchg
shl
and
dec
jp
xlat
push
ss
fstp
test
or
cmps
cld
sbb
push
pop
(bad)
aaa
mov
outs
push
iret
das
push
cmp
daa
xlat
imul
cmps
in
(bad)
retf
out
xchg
jnp
or
adc
or
pop
push
inc
enter
dec
sahf
sub
cdq
retf
sbb
jno
jg
xchg
stos
movs
xchg
sti
mov
dec
mov
or
fild
adc
cmps
mov
aam
mov
test
sub
es
inc
xchg
xor
sbb
dec
test
pusha
out
mov
lock
xchg
cmp
ror
add
lods
arpl
inc
jne
sbb
lods
jge
fist
clc
or
shl
cmp
push
loope
adc
aas
lock
adc
or
daa
test
lods
addr16
je
outs
ins
pushf
pop
add
mov
mov
test
call
out
xchg
inc
outs
push
jl
add
dec
jmp
push
movs
movs
jg
pop
or
mov
and
mov
mov
retf
xor
fidivr
pop
mov
cvttps2pi
ins
dec
sbb
and
loop
outs
cmp
xor
add
cld
(bad)
dec
mov
out
mov
shl
add
xchg
ins
mov
mov
retf
sub
dec
push
sar
mov
xor
push
and
xor
xor
mov
jp
sub
push
mov
dec
aad
in
sub
jae
(bad)
mov
and
or
mov
ds
add
sbb
mov
push
adc
fcom
ds
mov
inc
pop
pop
fwait
(bad)
or
or
fldcw
jo
push
xlat
iret
icebp
mov
push
mov
bound
(bad)
lock
shl
repz
sub
(bad)
aas
retf
xchg
push
xchg
mov
lds
mov
pop
mov
dec
push
add
scas
jle
mov
sub
mov
adc
sub
sub
int3
into
stos
test
aas
daa
aaa
loopne
js
arpl
cs
shr
and
(bad)
dec
mov
(bad)
dec
and
cmp
sbb
sub
jmp
call
mov
xor
jge
scas
cmp
fs
movs
sub
jl
dec
std
cmps
mov
sub
adc
add
adc
repnz
push
nop
aad
cmps
fimul
rcl
ins
push
xchg
pop
ret
adc
sti
inc
pop
leave
adc
imul
(bad)
nop
inc
push
nop
xchg
push
cld
clc
sbb
sbb
jbe
mov
fdiv
rol
jae
sbb
pop
fiadd
jbe
pop
add
fld
(bad)
sub
nop
jge
xor
lds
loop
int3
jmp
cmp
jecxz
rcl
jp
and
pop
pop
dec
fidivr
leave
call
push
cmp
push
retf
scas
push
jecxz
(bad)
fisubr
out
ret
in
sbb
bound
mov
push
int3
ficomp
mov
loop
push
xchg
leave
stos
mov
pop
addr16
lock
ds
jno
aad
imul
cmp
std
pop
(bad)
repz
jmp
fistp
stos
sub
push
fsub
jg
stc
cld
mov
arpl
sbb
aas
pop
xchg
mov
cmps
sar
arpl
int
(bad)
xchg
gs
aam
jmp
int
mov
aad
jb
dec
sbb
mov
adc
pop
or
bound
(bad)
scas
leave
int3
pop
adc
movs
pop
adc
fild
aam
mov
imul
stos
mov
ret
ja
xor
clc
pushf
sti
aad
pop
cmp
sar
ficom
add
sub
scas
mov
test
arpl
scas
movs
dec
lea
fs
jge
stc
hlt
lahf
(bad)
jbe
xchg
cwde
scas
jnp
pop
and
sub
xlat
adc
mov
ret
mov
xor
fwait
xor
sub
repz
push
inc
pushf
adc
push
dec
push
aaa
ins
or
stos
xor
rcl
fidivr
repz
inc
mov
scas
fwait
das
cli
jl
dec
or
push
lods
xor
leave
xchg
icebp
cmp
lea
iret
outs
sbb
cs
ror
mov
add
nop
sub
add
sbb
inc
xchg
dec
retf
sub
mov
xchg
js
inc
push
outs
jo
shl
ret
adc
sub
call
mov
test
popf
fisttp
out
or
push
pop
cmp
or
or
in
cmp
mov
sub
fisub
sub
scas
(bad)
mov
dec
pop
jmp
adc
ret
call
stos
rcl
sbb
inc
mov
pop
adc
ret
scas
push
sub
lahf
repz
sub
in
or
or
ror
mov
pop
(bad)
popa
ins
jne
sub
(bad)
sub
xchg
imul
cmps
stc
cdq
push
push
inc
push
mov
into
cmp
pop
daa
fistp
mov
loopne
push
inc
loope
lods
and
sbb
push
aas
stos
dec
fimul
sbb
push
cmp
pop
aad
inc
(bad)
in
inc
out
das
imul
push
add
hlt
inc
cli
repz
or
jns
je
nop
and
push
in
dec
into
push
ret
not
sub
xchg
xchg
jmp
(bad)
iret
loop
adc
cdq
ss
add
test
stc
inc
ins
adc
retf
fisttp
push
add
jge
ds
mov
add
rcl
shr
jns
jg
in
or
stos
movs
add
jmp
mov
sub
jbe
adc
pop
fwait
iret
dec
outs
sbb
xor
push
rol
inc
fs
cmps
xchg
or
stc
out
mov
cdq
dec
dec
sahf
fwait
sbb
or
mov
in
xchg
hlt
(bad)
lahf
xchg
imul
push
(bad)
cld
ds
pop
out
mov
ffreep
test
out
mov
fprem
fs
movs
repz
inc
ror
pop
mov
xchg
sub
lea
outs
mov
mov
add
out
push
fsub
cmps
pop
xchg
dec
sbb
or
lock
les
retf
mov
outs
movs
inc
push
adc
lahf
mov
loope
dec
in
call
xor
bnd
and
xchg
adc
dec
in
aas
adc
leave
fcom
mov
icebp
gs
xchg
leave
push
sbb
xchg
in
push
add
mov
test
sbb
sub
fisub
mov
or
xchg
pop
ins
xchg
pop
stos
pop
jno
scas
pminub
je
cdq
stos
retf
in
popf
retf
cli
add
lds
push
shr
lock
mov
pop
inc
push
out
test
rol
push
cs
inc
jl
or
(bad)
retf
lods
mov
stos
popf
pop
inc
jb
nop
and
push
jno
add
dec
or
(bad)
shl
pop
dec
ins
retf
inc
movs
imul
movs
add
jno
jnp
mov
push
or
sub
repz
mov
xor
call
popa
and
mov
scas
mov
jbe
cwde
jo
adc
aas
cmp
adc
out
enter
pop
adc
mov
pop
out
hlt
pop
cld
sar
push
adc
mov
sti
dec
xchg
aas
inc
push
jle
jno
test
std
pushf
xchg
fdivr
inc
pop
(bad)
mov
fs
popf
cmps
ins
sbb
popa
setae
xchg
(bad)
xchg
dec
or
test
in
ret
in
push
pop
loope
bound
xor
xlat
hlt
jns
lahf
dec
sbb
dec
lds
inc
repnz
inc
cld
repz
popa
imul
push
and
pop
stc
imul
fisubr
hlt
(bad)
dec
xchg
iret
(bad)
int3
jbe
ss
add
in
fisubr
scas
ins
stos
sub
imul
xor
sub
aaa
test
push
in
and
add
retf
ret
imul
shl
(bad)
shr
dec
push
fdiv
cmps
jns
repz
mov
xor
(bad)
arpl
xchg
or
adc
fwait
imul
loope
popf
and
or
xor
inc
cmp
push
mul
mov
or
fs
mov
out
pop
jo
int
fidiv
and
sti
dec
pop
mov
inc
cmp
xor
mov
lea
sub
pop
mov
mov
mov
xchg
sbb
repz
aaa
je
xchg
out
xor
lods
push
jecxz
mov
pusha
dec
push
sub
and
cmp
xchg
(bad)
sub
jbe
stos
jge
scas
xchg
popf
xor
neg
fcom
cmp
outs
daa
and
add
mov
or
pop
xlat
ret
adc
mov
cmp
daa
je
int3
fst
add
in
or
push
fadd
push
push
sbb
sub
les
and
aaa
jecxz
fbld
mov
(bad)
pop
adc
rcl
mov
lods
popa
xor
movs
and
(bad)
fwait
xchg
popf
(bad)
stc
jl
mov
dec
jnp
rol
stc
cmc
add
lods
int
jne
jg
add
dec
xchg
push
mov
imul
and
jl
lock
in
push
xchg
int
add
push
sub
push
into
add
add
jmp
enter
lds
cwde
dec
sbb
fdivr
arpl
adc
rol
mov
xor
popa
sbb
push
add
jge
mov
add
mov
and
pushf
dec
mov
pop
outs
push
mov
xchg
push
cmp
or
or
retf
jo
and
mov
hlt
xor
out
(bad)
jb
popf
sbb
xor
mov
mov
cwde
in
dec
xchg
dec
sqrtps
les
xchg
xchg
push
jbe
stc
iret
stos
(bad)
sub
aaa
mov
push
je
pop
pop
xor
shl
push
push
sbb
fcmove
and
retf
rol
jns
enter
dec
mov
or
addr16
adc
mov
js
and
stos
fdiv
popa
and
lds
aaa
and
adc
call
inc
inc
add
hlt
jne
stc
(bad)
mov
cmp
push
cli
mov
sbb
jmp
xchg
jge
mov
dec
and
pop
xchg
out
cs
jae
inc
loope
pusha
rcl
jb
xor
sar
mov
xor
mov
inc
add
in
xchg
dec
mov
sub
fisub
cmp
dec
push
in
ja
sub
ja
push
xor
pop
sub
cmc
lahf
inc
cli
xchg
stos
sbb
std
ret
jmp
or
mov
movs
mov
jne
add
mov
adc
cli
mov
adc
outs
shr
test
retf
mov
mov
push
loope
cmps
xchg
pop
out
mov
mov
ins
or
sbb
mov
popf
loope
ins
out
xchg
rol
sbb
rcl
ror
pop
leave
lds
arpl
mov
cwde
jo
jne
mov
cmp
stos
lods
ror
pop
imul
push
add
xchg
xchg
sbb
(bad)
mov
mov
repz
push
test
mov
mov
popa
adc
repz
mov
inc
fdivr
cs
int3
cli
mov
(bad)
mov
hlt
rol
cmp
(bad)
ss
xchg
pop
ret
aas
xchg
ja
nop
lods
nop
dec
jl
(bad)
retf
adc
sbb
xor
out
(bad)
jo
add
or
pusha
ds
push
enter
or
test
into
in
shr
sbb
mov
mov
xchg
jp
mov
lods
daa
out
or
pop
mov
in
jnp
out
stc
ret
xlat
out
xchg
dec
mov
and
mov
scas
xor
xchg
dec
inc
push
aam
sbb
rcl
mov
dec
jl
cmp
sahf
xchg
rol
mov
ja
scas
arpl
ins
(bad)
sbb
hlt
shl
out
add
out
xor
mov
ret
gs
sub
repz
mov
adc
mov
lds
ds
dec
xor
pushf
jns
cmp
jnp
test
cmp
mov
inc
lahf
iret
and
and
sub
lods
das
pop
cmp
mov
mov
mov
jmp
mov
or
movs
push
or
inc
mov
inc
scas
repnz
xchg
cwde
dec
jmp
pusha
imul
mov
jmp
ret
rep
or
inc
mov
lahf
and
in
pop
mov
aas
movs
mov
int
mov
fs
add
rcr
pop
inc
push
(bad)
sub
call
and
or
ins
ins
clc
mov
and
(bad)
in
fst
jg
jmp
ins
fisub
jp
mov
popa
xor
call
imul
(bad)
dec
jmp
cmp
icebp
rcr
and
test
and
add
cmps
jmp
lock
out
mov
inc
xchg
jmp
sbb
mov
inc
cmp
sti
jbe
stos
push
(bad)
sub
inc
and
mov
into
cmc
add
and
or
xchg
or
cmp
mov
repnz
push
dec
fild
mov
stos
sbb
mov
shl
je
call
lahf
pushf
sub
inc
push
inc
loop
dec
int
icebp
push
(bad)
pop
lock
push
scas
fsubr
sbb
xchg
sub
leave
loopne
xor
sub
stos
(bad)
cs
mov
(bad)
addr16
aad
mov
mov
pusha
mov
dec
xchg
or
pop
xchg
gs
cmp
sub
pop
mov
mov
fdivp
mov
sub
stos
adc
fcomp
aad
jmp
and
mov
fxch
and
stos
mov
inc
js
sbb
dec
adc
fiadd
test
test
push
mov
mov
pop
loope
dec
mov
xchg
sub
call
jp
int3
xchg
xchg
lock
adc
call
sub
xchg
mov
mov
movs
jno
mov
pop
xchg
cwde
fs
cmp
in
retf
repnz
xchg
jno
stc
mov
xchg
inc
push
inc
imul
pop
call
test
mov
push
push
mov
jge
and
ds
sub
dec
push
cmp
fmul
push
xchg
shl
repnz
jg
mov
inc
(bad)
sti
cmp
and
mov
fisttp
push
cwde
test
or
cli
sahf
mov
xor
movs
push
pop
imul
retf
adc
iret
xor
mov
ret
sar
inc
push
sub
pop
icebp
in
test
movs
and
xor
test
lea
lock
lds
and
and
adc
ret
retf
js
and
dec
xor
add
dec
mov
mov
pop
hlt
sbb
mov
push
xchg
add
mov
cmps
pop
call
inc
stc
fbld
jmp
clc
mov
mov
call
pop
imul
sub
dec
pop
pusha
in
stos
js
ins
xor
loopne
pusha
iret
mov
bound
ss
ret
mov
mov
movs
mov
imul
sub
xchg
retf
pop
std
xor
push
mov
lods
fs
xor
jbe
ins
aaa
add
ret
push
mov
cmp
xchg
lock
ja
fisub
iret
shl
mov
mov
inc
sti
ror
in
imul
frstor
lods
repnz
mov
popf
add
movs
lahf
ret
or
add
push
mov
adc
es
shl
jbe
stos
push
cmc
retf
neg
das
jp
popa
imul
int3
in
movs
fdiv
or
cwde
sub
and
(bad)
pop
test
mov
xor
fwait
pop
push
sti
scas
sbb
dec
pop
repz
cmp
pop
mov
xchg
out
dec
xchg
sahf
cmp
dec
scas
outs
das
stos
add
in
out
push
ret
jle
loope
mov
push
into
leave
push
movs
inc
sub
mov
fstp
adc
pop
iret
aas
adc
push
fimul
jg
sbb
jge
pavgb
xor
sub
jns
xchg
bound
push
sbb
retf
bound
jo
xchg
mov
retf
fistp
scas
int3
xor
cmp
es
movs
aas
pop
in
adc
push
out
iret
jmp
retf
jle
sub
mov
xor
push
fild
pop
or
(bad)
stos
arpl
push
mov
xchg
cli
xchg
add
and
adc
sbb
push
enter
push
fs
pop
push
call
jecxz
and
cli
ss
mov
(bad)
pop
ja
movs
add
stos
and
outs
xchg
jp
mul
mov
jecxz
lods
std
in
std
repnz
sbb
cwde
xor
in
loop
mov
cmp
movs
and
ret
jg
push
pop
xchg
mov
data16
aam
mov
clc
ucomiss
pusha
inc
push
sar
mov
mov
jg
xchg
hlt
or
es
rcr
lea
push
mov
inc
push
xor
jg
lahf
into
inc
mov
push
push
inc
jns
rcl
cmp
pop
jno
mov
outs
mov
mov
inc
mov
enter
xor
inc
and
loop
mov
jmp
(bad)
lock
ins
fdivr
test
or
out
push
inc
adc
out
gs
test
sbb
xchg
outs
div
jnp
mov
cmp
adc
daa
in
pop
xor
nop
add
sub
ins
mov
scas
sub
shr
mov
cmp
adc
icebp
cs
pop
dec
test
jns
rol
imul
test
jbe
cmc
jl
cli
mov
mov
loop
sub
fist
sbb
mov
mov
pop
int
add
fnstcw
dec
xor
enter
pop
mov
mov
fwait
mov
int3
mov
mov
dec
push
ret
leave
gs
(bad)
mov
test
shl
jecxz
iret
sbb
mov
xchg
and
ss
xchg
dec
cmps
inc
jmp
jg
inc
pop
push
mov
pushf
xchg
out
or
mov
into
inc
xchg
call
scas
pop
mov
and
inc
sub
adc
jmp
fist
fsub
pushf
sbb
xor
mov
pop
inc
scas
(bad)
mov
jne
fisubr
das
mov
sti
and
daa
(bad)
movs
shl
push
pushf
xchg
stos
xor
dec
fnsave
xchg
mov
xchg
ss
jmp
fwait
xchg
and
or
shl
inc
imul
pop
cmp
mov
retf
mov
cmc
jle
inc
jmp
dec
fcom
repz
and
push
cdq
dec
xor
jb
sbb
test
leave
ds
push
sahf
(bad)
jmp
iret
sbb
add
push
lahf
daa
ret
pop
ret
sub
pop
xchg
xchg
mov
mul
cmp
mov
jmp
daa
jmp
(bad)
push
xlat
movs
xchg
scas
jecxz
pusha
jl
jge
jne
sub
bound
ds
add
aas
int3
add
and
add
inc
xchg
daa
add
mov
pop
jecxz
mov
or
push
jne
scas
rcl
cdq
xchg
xchg
outs
leave
dec
imul
ja
xchg
test
repnz
jle
call
sub
or
xor
dec
dec
leave
jns
clc
mov
xchg
iret
jecxz
dec
inc
aad
pop
xchg
lds
cmc
shl
call
add
test
dec
in
pop
sar
pop
outs
xchg
jbe
mov
jp
aad
mov
mov
xchg
mov
xchg
mov
lahf
mov
mov
or
retf
dec
adc
mov
iret
inc
xlat
(bad)
pop
shl
addr16
push
pop
pop
daa
mov
jb
inc
sbb
iret
aam
fsubr
movs
mul
xor
inc
and
stos
jno
aaa
adc
je
or
pop
(bad)
into
js
jns
movs
dec
repnz
mov
icebp
fs
jae
out
cld
iret
inc
sbb
(bad)
jnp
cmp
ins
loopne
pushf
aam
mov
mov
leave
push
imul
mov
pop
test
idiv
jge
dec
inc
mul
inc
pop
sbb
retf
loop
sbb
imul
inc
pop
pushf
pop
popf
sahf
std
sub
mov
xor
push
pushf
xor
or
cmp
pusha
cld
xor
dec
iret
and
jmp
outs
sub
retf
mov
into
retf
xchg
popf
sub
push
sub
xchg
or
loopne
xchg
mov
adc
mov
cmp
imul
(bad)
out
xchg
movlps
mov
daa
int
mov
push
xchg
mov
lock
test
(bad)
std
and
imul
adc
test
in
or
sti
(bad)
jae
ins
dec
lahf
jl
sahf
jmp
imul
pop
out
jns
xchg
mov
aas
add
inc
sbb
loopne
sub
ja
cmp
addr16
ret
pop
jecxz
add
jp
test
cwde
or
outs
sahf
mov
xchg
add
jns
and
mov
jle
repnz
stc
pusha
jb
loope
jne
lods
outs
push
jg
ret
add
loopne
or
popa
lock
sub
jmp
pop
push
ds
ja
mov
iret
sbb
cli
mov
dec
(bad)
fidiv
xor
mov
scas
sti
add
iret
inc
bound
shl
mov
jbe
bnd
dec
mov
dec
in
popa
sub
frstor
cli
jo
test
jo
mov
jp
add
mov
push
lods
bound
sar
mov
movs
dec
pop
retf
scas
xlat
mov
js
jns
retf
hlt
(bad)
or
lods
jle
pop
and
jge
mov
xchg
jno
or
or
je
push
xor
add
mov
(bad)
loopne
fcomp
popf
das
add
mov
or
lods
push
jno
movs
xlat
pop
fdivp
add
cmc
or
in
ja
add
mov
into
cmp
hlt
and
sbb
and
adc
xchg
mov
push
test
mov
mov
jno
pop
jne
cmps
mov
adc
ror
push
cmp
aas
mov
adc
loopne
iret
jo
inc
(bad)
cmp
jmp
fidiv
inc
pusha
jmp
cmp
push
mov
or
call
and
add
xchg
xor
out
dec
jnp
jns
call
sub
iret
das
nop
mov
add
(bad)
mov
mov
out
(bad)
and
lods
sub
jge
sbb
repz
in
xor
push
into
xchg
sbb
ss
xor
mov
addr16
jnp
sbb
mov
sbb
and
cmc
movs
or
dec
cld
sub
aas
xchg
call
xchg
add
arpl
out
fbstp
dec
(bad)
pop
sub
sub
jbe
cs
push
mov
jne
ficom
lea
mov
jno
jmp
stos
stos
(bad)
fidiv
push
mov
pop
add
xor
push
mov
add
lods
(bad)
push
into
int3
les
add
int
mov
das
cwde
jne
push
fs
push
call
mov
ja
repz
jbe
gs
jp
jmp
ret
inc
stc
add
leave
xlat
and
dec
sbb
jne
mov
int
xchg
and
mov
lahf
cmp
stc
sbb
hlt
jecxz
(bad)
adc
test
mov
in
cmp
sbb
inc
mov
dec
mov
std
(bad)
jmp
scas
mov
sub
cmc
inc
jg
xor
sahf
mov
movs
cmps
dec
jo
in
add
push
popa
mov
jae
mov
adc
cmc
pop
imul
fistp
jecxz
dec
jmp
into
lods
inc
cmp
xor
mov
test
and
and
lea
push
cmp
and
jnp
leave
and
pop
scas
jnp
push
icebp
pop
adc
pop
cli
lock
xchg
and
push
pop
xlat
test
(bad)
out
pop
or
sub
leave
cld
pusha
aaa
pop
mov
mov
inc
cmp
lock
leave
mov
ret
fidiv
inc
mov
repnz
sub
dec
clc
lock
(bad)
js
es
and
xor
(bad)
inc
mov
jnp
jne
jne
mov
or
int3
into
out
aas
retf
ret
pop
xchg
cdq
push
cmps
xor
icebp
int3
rcl
mov
xor
push
movs
cmps
outs
sub
mov
inc
push
ja
jmp
jg
mov
add
cmp
mov
and
fldcw
jmp
fldenv
sbb
pop
or
lock
cdq
cdq
std
or
and
push
adc
xchg
xlat
in
sub
jmp
or
lea
in
adc
or
out
out
adc
aas
dec
(bad)
push
lds
jno
arpl
aad
rcr
pop
lods
imul
sbb
out
mov
sub
aaa
pop
mov
dec
les
mov
sub
jns
push
and
mov
out
push
add
data16
pop
xor
sub
adc
cmc
xchg
adc
push
dec
dec
lods
mul
daa
mov
inc
data16
mov
(bad)
and
xor
int3
sub
fs
pop
or
stos
aad
mov
xchg
int
add
in
cld
cli
(bad)
popf
movs
mov
aaa
mov
sub
jns
push
or
aad
movs
push
cmp
test
inc
pop
adc
cmp
pushf
push
mov
mov
push
sbb
int
xchg
nop
ror
mov
mov
cld
pusha
inc
xchg
div
jno
xor
pop
push
sar
leave
rcr
jle
lahf
lahf
ins
pop
jae
and
imul
push
out
sbb
sti
add
gs
dec
not
scas
stos
add
pop
arpl
pusha
arpl
push
xor
ja
int
sub
adc
movs
mov
mov
inc
cmp
sub
pop
jne
xor
out
mov
test
xchg
int3
and
mov
lock
mov
gs
sar
and
fs
in
dec
js
mov
or
(bad)
dec
icebp
dec
das
jp
mov
inc
xor
rcr
test
gs
push
(bad)
jmp
or
loopne
dec
pop
adc
cmp
sbb
mov
push
or
test
and
adc
mov
xchg
add
cmp
imul
push
xchg
jmp
inc
add
mov
pushf
inc
mov
repnz
inc
sub
adc
xchg
pop
hlt
dec
jge
ja
lea
add
arpl
in
dec
and
or
and
push
pop
xor
xlat
jecxz
mul
in
mov
mov
sbb
xchg
mov
mov
pusha
stc
mov
pop
cmp
movs
sub
test
jnp
cmc
nop
dec
jns
loopne
add
fbstp
xrelease
cwde
mov
xlat
pop
pop
sbb
jmp
jmp
push
and
jns
in
fld
inc
data16
loopne
les
xor
lock
popf
jge
rol
adc
cmps
mov
shl
inc
lock
dec
sbb
mov
adc
and
inc
add
jg
mov
and
inc
fimul
dec
fistp
mov
push
in
popa
shufps
xchg
or
sub
push
or
loope
loop
xor
stc
push
std
pop
sub
sbb
pop
push
inc
cmp
(bad)
mov
cmps
mov
call
mov
out
inc
cmp
in
dec
not
and
(bad)
retf
clc
or
add
dec
mov
sub
(bad)
out
jae
inc
das
enter
sahf
daa
jmp
dec
lods
test
dec
je
mov
fcomp
lods
mov
jecxz
xor
iret
sti
adc
in
pop
data16
mov
and
aad
add
mov
pop
xchg
inc
rcr
fwait
add
outs
out
shl
lds
mov
fxch
mov
jne
inc
outs
jmp
fistp
mov
mov
push
mov
mov
sbb
aas
popa
cmps
scas
pop
retf
or
xor
hlt
jl
dec
sbb
jmp
mov
push
les
adc
adc
pop
and
fdivrp
bound
mov
(bad)
fsub
loop
stos
out
xor
or
dec
mov
cmp
in
dec
cmps
(bad)
(bad)
and
jns
adc
hlt
adc
call
sub
push
int3
add
fld
test
pushf
loope
daa
mov
frstor
dec
imul
imul
clc
add
or
xchg
and
mov
pop
dec
nop
cmps
in
push
dec
loope
xchg
imul
cdq
js
pop
ds
pop
pop
pcmpeqb
out
div
add
std
jp
(bad)
mov
(bad)
nop
call
dec
dec
test
or
sbb
fmul
push
or
sbb
sub
jl
sbb
xchg
lods
xor
pop
js
push
adc
sub
jnp
in
cli
outs
mov
push
mov
jg
fmul
idiv
xchg
addr16
push
adc
std
test
adc
mov
cli
popf
sbb
inc
(bad)
or
sti
sbb
call
loop
push
(bad)
clc
sbb
cld
fcomp
push
sti
pop
xchg
xor
cmps
in
and
adc
xchg
ja
sub
daa
shr
scas
ins
pop
pop
rcr
and
xchg
add
adc
mov
or
xchg
cmp
jno
out
xor
sti
push
lahf
and
std
(bad)
hlt
movs
in
retf
jbe
cmc
adc
call
mov
into
sub
sub
(bad)
fdivr
jg
cdq
arpl
jo
fadd
out
adc
imul
in
int3
add
test
(bad)
aas
add
cmp
mov
loope
mov
cdq
mov
push
in
aaa
ss
jmp
adc
inc
xor
lods
adc
in
jns
call
jge
push
xor
(bad)
jbe
add
jmp
je
cwde
sbb
test
pushf
popa
add
pop
sub
aam
push
cmp
loope
xchg
(bad)
int3
mov
cdq
jl
xchg
cld
test
ret
dec
loop
mov
push
dec
call
mov
leave
xchg
inc
mov
push
xor
xor
mov
adc
stos
imul
out
test
push
stos
inc
xor
or
cmp
popf
jns
ss
cdq
mov
lea
sbb
mov
xchg
ss
add
rcr
or
sbb
cmps
lea
mov
aas
fwait
xor
cmp
call
nop
jo
inc
mov
sbb
sbb
jae
pop
out
pusha
inc
push
inc
xchg
push
cli
fistp
xor
stos
and
jnp
mov
icebp
xchg
mov
(bad)
jmp
aaa
dec
sbb
lock
in
add
xor
lahf
or
cld
push
pop
int
loop
jne
mov
jle
mov
in
and
fimul
sbb
mov
pop
sub
sub
pop
dec
mov
cmps
and
jle
cld
mov
dec
push
sbb
jne
ficomp
dec
(bad)
call
cs
sbb
out
push
pop
or
aad
daa
movs
ja
xchg
mov
ja
daa
hlt
dec
leave
or
mov
cmc
mov
scas
iret
adc
out
stc
or
sub
inc
jno
and
adc
inc
mov
jb
cmp
in
adc
test
scas
retf
sbb
sahf
adc
das
inc
pop
mov
or
dec
sbb
retf
sbb
aam
push
addr16
leave
dec
retf
mov
imul
mov
rcr
mov
fisttp
sub
outs
mov
or
lock
mov
into
scas
lock
cdq
les
push
ror
jle
and
pop
mov
ds
xchg
cmps
dec
mov
jb
outs
out
mov
in
mov
fs
(bad)
xchg
mov
call
out
and
xchg
(bad)
ss
cwde
into
cmp
xchg
jo
stos
jp
sub
dec
(bad)
imul
add
xor
fdiv
enter
sub
xor
xchg
lds
and
adc
jmp
add
pop
mov
dec
push
cmc
xchg
push
rcl
mov
inc
dec
into
les
cmp
pop
fptan
cmp
jmp
movd
push
pop
bound
popa
shr
xlat
and
sub
inc
ja
test
(bad)
cmp
(bad)
inc
pop
imul
fistp
xchg
mov
mov
cmp
xor
and
adc
fistp
std
and
cmp
or
out
cmp
mov
sbb
int
fbstp
lods
xchg
sti
jbe
(bad)
mov
inc
inc
not
test
pop
clc
fnstenv
ins
push
mov
pop
pop
std
inc
inc
adc
pop
rcr
ss
jbe
sbb
and
sar
into
adc
neg
aad
xor
or
imul
cdq
(bad)
(bad)
(bad)
dec
jecxz
mov
or
mov
and
or
stos
and
in
sub
pop
imul
xchg
and
jb
mov
xor
nop
test
fcom
ret
sti
or
jl
add
das
loop
adc
xchg
ins
mov
push
jge
cmp
sub
pop
push
into
sbb
cmp
lea
pop
test
in
pop
aaa
adc
es
outs
jbe
mov
inc
sahf
imul
and
cmp
inc
push
mov
addr16
loopne
lahf
jle
popa
mov
dec
lock
ins
or
mov
cmp
pop
aas
mov
call
icebp
jge
sti
shl
imul
out
hlt
cmp
mov
fldcw
das
test
and
cld
sub
xchg
add
gs
push
inc
and
imul
pop
dec
inc
cdq
add
gs
jg
jmp
mov
push
and
push
mov
and
mov
mov
and
dec
and
mov
aad
out
movs
jg
and
adc
lods
xor
movs
pop
lods
jl
sbb
jnp
(bad)
cmp
ds
mov
mov
inc
addr16
lds
fimul
mov
xchg
(bad)
repz
push
push
sbb
push
adc
sahf
js
and
push
push
into
push
xchg
mov
sub
lock
mov
dec
dec
bound
xor
xchg
mov
je
arpl
sbb
jnp
mov
bound
(bad)
mov
into
sub
and
movs
cmp
xchg
push
mov
ss
inc
fild
add
dec
sbb
in
mov
in
inc
(bad)
stc
dec
jb
(bad)
cs
cmp
neg
sahf
std
adc
push
les
fnstsw
sbb
mov
jb
test
lock
mov
xchg
ins
xchg
fsubr
cld
icebp
mov
cmps
lods
and
repnz
out
jecxz
addr16
cmp
(bad)
lock
push
repz
retf
jl
mov
inc
push
ins
dec
sub
into
clc
xor
repz
ror
add
jb
mov
shl
call
aaa
fdiv
or
adc
pop
mov
retf
mov
mov
mov
stos
push
dec
fs
test
adc
outs
outs
cld
or
scas
inc
adc
int3
loope
push
dec
xlat
xlat
retf
(bad)
stc
dec
or
mov
adc
(bad)
pop
aad
add
lods
or
dec
fwait
mul
push
dec
cmp
pop
fcmove
shl
jnp
aaa
adc
cwde
dec
addr16
test
sbb
shr
cdq
jnp
ja
stc
and
cmp
fs
sbb
dec
xchg
jmp
or
rol
aaa
sub
jp
push
jnp
mov
cmps
inc
imul
sti
jnp
shl
sbb
into
mov
mov
sbb
or
sbb
cmps
mov
mov
in
xor
lods
inc
xchg
xchg
mov
xor
adc
mov
in
out
pusha
push
call
cmp
std
movs
jo
xchg
bound
cli
jle
mov
shr
test
ss
xlat
mov
sub
cmps
pop
adc
inc
loopne
xor
enter
dec
into
int3
sbb
xor
and
push
lods
or
pop
inc
sub
aad
fmul
shl
or
mov
hlt
push
ja
stc
pop
out
fimul
sysexit
ss
ins
sahf
mov
cmp
lods
xchg
ins
jmp
and
add
fld
shl
out
ret
jmp
add
cwde
rcl
ins
push
out
mov
into
sar
cmc
cmps
ror
or
icebp
fwait
arpl
adc
jae
test
cli
push
mov
fucom
imul
dec
mov
neg
daa
xor
fisttp
cs
lods
adc
mov
popf
iret
inc
push
push
jp
push
and
sti
sub
inc
cmps
pop
push
jno
ds
dec
or
dec
sahf
gs
jns
xchg
shr
sti
(bad)
push
pop
jg
pusha
in
sub
loop
aas
lods
and
hlt
or
xor
and
push
mov
add
inc
retf
jb
push
cs
int
popf
adc
cmp
jne
icebp
aad
pop
loopne
pop
icebp
push
js
pop
call
imul
mov
sub
nop
or
outs
dec
mov
scas
sub
lea
pop
mov
ins
xchg
xchg
test
pop
xchg
sub
xor
aas
aam
or
adc
mul
cmp
sbb
jmp
sbb
test
adc
pusha
fs
(bad)
dec
sti
xchg
sbb
mul
inc
xor
les
push
sub
(bad)
stos
dec
xchg
sbb
mov
jecxz
adc
retf
sbb
mov
aam
push
mov
sar
rcl
jae
aad
jecxz
or
sti
inc
jno
xchg
add
cmp
aas
imul
je
pop
test
xchg
sbb
enter
test
arpl
push
jae
(bad)
push
sti
aam
in
sub
cmp
xchg
and
out
adc
nop
es
je
xchg
fnstcw
test
cmc
jp
add
inc
loop
loop
cmp
xor
rol
pop
and
mov
movs
cmp
and
lahf
(bad)
(bad)
ins
pop
retf
or
pop
xchg
into
pop
repz
and
sub
iret
rol
mov
add
xchg
rcr
dec
jl
lds
adc
loop
inc
and
sbb
xor
test
mov
pop
mov
imul
idiv
add
icebp
mov
test
(bad)
pop
pop
mov
sar
lods
retf
add
jne
push
dec
xor
rcr
pop
sub
add
fdivp
out
and
fstp
or
dec
cmp
dec
mov
push
mov
jge
jne
out
and
add
popf
add
add
ins
mov
int3
dec
xchg
cmc
bound
xchg
popf
fadd
adc
addr16
mov
inc
xor
xor
or
pop
cld
ficomp
push
push
outs
dec
bound
aam
mov
sbb
repz
ins
pusha
bnd
das
sub
sbb
push
xor
ss
push
in
pushf
mov
aam
daa
inc
pause
push
xor
jecxz
cmp
add
mov
in
jmp
sub
sbb
cld
(bad)
push
sub
xor
scas
and
(bad)
(bad)
idiv
push
loope
sub
xchg
xchg
push
sti
push
repz
iret
out
mov
dec
test
cmp
mov
(bad)
xchg
aas
inc
enter
jmp
cdq
inc
pop
xchg
xchg
or
jmp
sub
(bad)
in
ja
movs
and
inc
cmp
push
(bad)
xchg
in
rol
xor
in
push
and
fsubr
loopne
sbb
retf
pop
es
sbb
call
pushf
das
test
sar
int3
jg
int
cdq
adc
aad
jp
je
ret
mov
aaa
pop
cmps
cld
adc
(bad)
cmp
xchg
push
movs
inc
loope
jg
movs
and
jp
out
cmps
xor
dec
pop
xchg
ret
enter
out
and
loopne
test
leave
mov
xchg
push
loope
and
mov
shl
push
loopne
push
pop
mov
dec
jmp
outs
pop
mov
xor
aam
sub
lds
cmp
(bad)
out
icebp
cmp
cmp
scas
jge
xchg
xor
and
les
test
mov
and
xor
xchg
call
mov
jecxz
ret
cdq
(bad)
aam
cmp
cmp
push
jno
sbb
push
xor
in
jl
retf
fsubr
fisub
jo
xor
(bad)
fldcw
lds
pop
movs
adc
rol
lods
jl
sbb
repz
sbb
push
pop
into
into
stos
mov
cmp
test
popf
sti
pop
mov
std
sub
xchg
xchg
fst
call
loop
sbb
in
gs
dec
jg
movs
or
cmps
or
xchg
jg
lea
cmp
jecxz
into
xor
sbb
xchg
mov
mov
add
sbb
popa
mov
add
xchg
jns
scas
or
mov
mov
lea
mov
pop
dec
mov
stos
xor
jl
jae
or
out
pusha
test
dec
and
push
xlat
or
scas
in
lea
or
hlt
inc
fs
push
mov
test
dec
fld
hlt
fmul
stc
add
imul
fwait
jmp
sub
cmp
stc
(bad)
xchg
cmp
and
push
pusha
add
test
and
shl
push
or
mov
add
js
(bad)
out
push
xor
mov
int3
cmps
pop
add
repz
leave
sbb
inc
inc
jle
mov
xchg
jp
imul
jp
adc
mov
lea
mov
xor
je
pop
stos
adc
xor
xor
(bad)
push
fwait
arpl
std
xchg
xor
and
and
xchg
daa
xchg
xchg
pop
clc
into
dec
pop
xchg
dec
bound
xor
movs
test
cld
cli
ja
jle
mov
xchg
movs
aaa
cdq
mov
xchg
movs
jmp
mov
aas
sub
jns
or
in
(bad)
dec
sbb
or
cmp
out
nop
sub
jno
push
add
retf
inc
pop
push
sbb
sets
xchg
mov
cli
sbb
daa
ja
jge
movs
enter
cmp
sbb
sub
sahf
jb
cmp
loopne
repz
je
sbb
ficom
xor
xchg
in
xchg
out
xlat
fst
mov
clc
shl
es
cmc
push
out
mov
xchg
aad
mov
dec
fwait
jmp
test
cli
cmp
jbe
cmp
stos
sbb
es
and
add
sub
js
mov
xchg
sbb
cmps
cmp
repnz
mov
outs
push
jmp
pop
les
jp
test
jge
dec
push
jns
mov
inc
outs
sar
mov
out
mov
push
test
adc
add
adc
(bad)
cmp
xlat
test
sbb
mov
xor
mov
je
jg
mov
mov
or
gs
fxam
push
pop
xchg
xchg
jns
stos
xchg
sbb
mov
jns
clc
jno
sbb
jle
cwde
push
jae
(bad)
loop
dec
mov
hlt
imul
das
in
mov
push
sub
push
(bad)
dec
and
retf
sahf
xchg
test
jae
mov
sbb
ficom
adc
add
push
stos
mov
adc
out
jle
hlt
xchg
in
xor
mov
mov
in
pop
pop
and
push
in
stos
inc
pop
es
int3
adc
cwde
push
mov
dec
fdivr
movs
or
mov
rcr
mov
gs
fsqrt
cmc
jno
retf
adc
jmp
push
clc
loope
and
sub
(bad)
imul
mov
popf
mov
in
ds
fild
imul
xor
xchg
test
lahf
(bad)
push
jle
pushf
test
shl
xchg
sbb
sub
fimul
mov
adc
cmps
enter
out
(bad)
push
add
xchg
ja
add
es
pop
cmp
iret
add
mov
das
push
jl
mov
mov
push
scas
fcom
mov
nop
inc
ja
mul
out
jnp
xor
push
push
es
mov
iret
and
and
dec
out
std
iret
sbb
cmc
fiadd
add
movs
addr16
icebp
aas
adc
mov
ins
cmp
inc
(bad)
and
xor
call
dec
ja
stos
jmp
ret
add
jmp
jmp
dec
test
daa
(bad)
sbb
jb
xor
hlt
das
std
sbb
movs
jnp
push
jg
daa
fs
add
loope
cmp
inc
loope
mov
hlt
aam
and
stos
push
data16
lods
ss
bound
jo
lea
sbb
test
mov
test
and
mov
pusha
push
mov
push
xor
rol
jns
aam
outs
imul
cmp
or
retf
adc
ja
sbb
xchg
out
imul
xchg
add
jg
cmp
inc
ins
xchg
jg
add
enter
mov
les
lock
(bad)
pop
sbb
xchg
js
ret
shr
jb
pop
stc
popf
ss
sbb
in
in
scas
es
pop
inc
enter
xlat
aaa
xchg
lahf
fisttp
cmovs
or
inc
inc
adc
dec
inc
sti
enter
cli
(bad)
loop
(bad)
sub
mov
jb
retf
push
in
call
cmps
imul
and
int3
sti
mov
daa
pop
push
sbb
pop
adc
(bad)
aam
mov
pushf
les
mov
inc
jmp
mov
push
adc
retf
arpl
loop
push
in
mov
inc
dec
aad
pop
mov
mov
mov
xor
push
scas
adc
aad
mov
sbb
and
add
nop
xor
hlt
cmp
movs
aam
mov
call
clc
jle
mov
adc
retf
(bad)
sahf
into
aam
cli
call
(bad)
loop
mov
div
adc
mov
jmp
mov
jae
push
adc
(bad)
adc
retf
or
pop
arpl
sub
push
adc
cmp
ret
jae
mov
push
fwait
push
add
mov
jmp
stc
xor
repnz
ficom
std
scas
mov
pushf
data16
xchg
push
push
mov
lods
ins
es
sub
sub
xchg
xchg
pop
jb
xchg
and
mov
and
jns
repz
cdq
stos
(bad)
cld
mov
mov
repz
icebp
or
and
ja
push
icebp
test
xchg
dec
mov
stos
mov
inc
mov
jecxz
call
out
jecxz
ds
pushf
xlat
inc
jl
(bad)
inc
jmp
pop
fsubr
pop
push
out
dec
inc
or
retf
and
add
push
ror
loop
enter
cmc
add
retf
inc
int3
hlt
xchg
jb
ins
or
pushf
or
mov
and
inc
fnstenv
add
mov
lods
mov
sub
mov
ret
ss
xchg
sbb
arpl
fstp
test
inc
test
loop
and
cmp
dec
push
ss
push
mov
sahf
je
or
xchg
or
call
outs
push
jmp
push
add
inc
or
ins
xchg
test
jl
xchg
cmp
or
cmp
retf
mov
mov
stos
fcomp
jp
jmp
jmp
mov
test
pop
mov
test
fsubr
xchg
(bad)
sbb
or
adc
mov
retf
push
mov
or
cmps
test
aas
nop
add
cmp
mov
mov
sub
lahf
mov
push
fsubr
xchg
push
jae
cmp
push
bound
mov
xor
(bad)
test
shl
jl
mov
(bad)
(bad)
pop
dec
mov
jp
int
push
dec
jne
xor
push
sub
or
adc
dec
aad
dec
inc
sub
mov
push
(bad)
stc
out
jb
inc
jmp
in
iret
add
mov
leave
pop
xchg
xor
test
sbb
push
mov
mov
dec
gs
dec
jp
mov
fld
ins
sti
in
(bad)
sub
or
or
je
adc
mov
fwait
movs
je
in
imul
std
sbb
mov
push
push
add
sbb
cwde
loope
mov
repz
and
shl
mul
repnz
mov
es
push
mov
out
inc
lods
dec
xchg
pop
mov
inc
mov
shr
mov
and
jbe
movs
xchg
cmp
cmp
mov
adc
cmp
adc
sbb
push
(bad)
jmp
push
movs
and
and
pushf
arpl
(bad)
test
jbe
test
sti
test
lods
xchg
icebp
jl
sbb
shl
mov
mov
rol
add
mov
lea
cmc
mov
mov
xchg
fdiv
jbe
repnz
or
cdq
sub
push
fcom
sbb
ja
int
adc
ret
mov
sbb
pop
ret
push
dec
rcl
add
stc
mov
cwde
adc
hlt
loope
or
push
pop
jns
es
sahf
fcom
push
adc
test
lods
sbb
add
xor
cmp
xchg
fidiv
outs
inc
ins
(bad)
out
dec
pop
(bad)
pop
xor
mov
mov
loopne
sahf
inc
sub
inc
in
xor
push
jmp
cmc
lahf
test
jmp
pop
imul
mov
cmp
adc
inc
cmp
cmp
imul
scas
push
push
rcl
sbb
xchg
stos
push
mov
mov
push
shr
push
ret
or
push
adc
or
sub
call
jmp
dec
rol
test
jno
sub
es
or
std
jno
cdq
jmp
jge
xchg
mul
mov
jne
jp
aad
dec
jb
sbb
sbb
data16
push
jl
lods
aad
xchg
add
push
inc
pop
sub
jae
mov
mov
(bad)
sahf
xor
push
mov
push
or
push
out
movs
scas
clc
mov
sbb
pop
rep
dec
and
sbb
int
ror
ins
mov
jp
mov
xor
je
jl
mov
arpl
cld
ficom
(bad)
push
fdivr
jge
xor
jl
ins
adc
mov
xchg
ins
div
inc
xlat
out
inc
cs
cwde
ja
clc
add
dec
sbb
neg
or
jmp
pusha
xchg
xor
sub
fild
inc
es
(bad)
rcl
mov
pop
sub
addr16
in
movs
or
cmp
fcomp
xchg
xchg
xlat
cmps
jmp
mov
repz
repz
jnp
test
arpl
lods
sub
sbb
cdq
xchg
je
jge
xor
rcr
aam
xor
enter
jmp
pop
mov
mov
dec
pop
inc
sbb
cmc
call
subps
sub
jmp
xor
inc
les
out
xor
and
inc
cmp
pusha
lea
ins
cmp
and
pusha
pop
mov
mov
test
xchg
mov
xor
cmps
fisub
sbb
add
call
lods
push
pop
sub
test
out
add
pop
inc
(bad)
mov
mov
sar
jb
or
dec
in
dec
or
add
lods
cmp
js
hlt
int3
cmp
fidivr
in
push
mov
fnsave
gs
xor
adc
and
fwait
and
jnp
push
aaa
or
or
fwait
(bad)
fnstenv
ds
jg
mov
(bad)
retf
jle
lock
imul
rcr
cdq
and
inc
xchg
dec
into
cmp
or
ins
inc
dec
(bad)
das
arpl
add
cmps
add
xor
jo
je
cmp
mov
xor
cmp
fdiv
std
and
pop
icebp
jns
(bad)
js
mov
pop
pop
leave
push
push
mov
sub
xor
push
jmp
in
dec
cmp
adc
xchg
mov
js
mov
sahf
int
repz
loope
es
mov
js
push
mov
sbb
xor
lahf
iret
lods
sbb
cli
pushf
outs
les
dec
mov
rcl
dec
cmp
jp
nop
repnz
or
mov
out
loopne
mov
jo
outs
int
sub
add
rcl
push
cmc
lahf
(bad)
sti
pop
or
pop
and
jmp
pop
(bad)
inc
lods
inc
aam
pop
or
pusha
xchg
fadd
cmp
adc
retf
cmp
rol
sbb
std
and
pop
and
imul
cmps
pop
shr
repnz
xchg
(bad)
jnp
add
pop
jne
les
push
cmp
lahf
sub
push
pusha
ss
call
jae
lock
test
fs
in
or
mov
scas
mov
pushf
dec
sbb
dec
mov
add
and
add
popf
(bad)
cmps
push
xor
jg
or
mov
das
(bad)
push
scas
ss
dec
nop
sbb
dec
add
jmp
mov
pop
call
xor
lea
mov
push
call
sub
jmp
jmp
jmp
inc
mov
or
ja
push
dec
nop
mov
scas
div
sub
xchg
(bad)
or
loope
pop
clc
sti
popa
cmp
lods
sub
mov
fsubr
xchg
retf
adc
inc
mov
ret
and
mov
inc
jl
cmp
adc
inc
and
cmps
shl
mov
call
sbb
fwait
mov
inc
or
dec
mov
(bad)
in
mov
jb
xchg
(bad)
mov
gs
shl
dec
mov
stos
mov
push
or
sbb
test
fcomp
pushf
popa
test
xchg
loope
ror
pop
std
pop
or
dec
mov
push
or
fucomip
(bad)
leave
push
daa
cli
fsubr
inc
adc
sbb
pushw
dec
dec
and
int
ins
repz
mov
add
pusha
sbb
add
jge
cmp
(bad)
push
push
aad
test
mov
push
xchg
pushf
push
xor
cmp
fst
pop
shl
test
dec
das
mov
jecxz
mov
mov
inc
pop
fisub
(bad)
retf
and
mov
jnp
sti
fwait
cmp
(bad)
sahf
stos
or
movups
or
sbb
mov
rcl
sub
xchg
sub
cdq
popa
or
test
out
ret
lods
and
sbb
sub
les
adc
ja
pop
jp
or
ds
mov
add
cmp
jno
mov
and
pushf
mov
rol
sub
movs
xchg
fidivr
pop
call
adc
cs
mov
jae
push
ret
ds
jnp
sub
add
cli
jne
ret
ret
xchg
xchg
test
mov
xor
ret
dec
xchg
sbb
mov
add
clc
sbb
mov
outs
int
fisubr
mul
mov
and
add
pop
add
in
cmp
mov
icebp
not
or
dec
cli
xchg
and
(bad)
jnp
inc
fst
xchg
push
nop
(bad)
xchg
add
mov
jae
pop
add
add
movs
call
xor
jmp
mov
popf
iret
cmp
dec
xchg
sti
mov
add
push
icebp
dec
mov
ror
bound
retf
mov
push
add
cld
adc
test
cli
test
xor
xor
mov
xlat
push
call
or
nop
dec
cld
int
cmps
std
cmp
xor
aas
fsub
in
mov
outs
enter
ds
(bad)
jle
dec
fs
push
push
dec
jmp
lods
cmp
in
ins
scas
sahf
clc
ins
inc
test
dec
push
lea
or
jg
(bad)
loop
dec
test
ret
popa
pop
out
(bad)
xchg
mov
lds
mov
adc
outs
je
sar
test
ss
lods
xchg
in
lods
cmps
mov
not
jmp
jle
sbb
mov
pop
push
fs
jge
mov
adc
jno
sbb
iret
jns
mov
es
push
sbb
es
mov
jp
or
test
outs
outs
test
arpl
or
push
cmp
shl
outs
mov
(bad)
out
(bad)
js
inc
std
dec
xlat
sahf
jge
int3
jge
push
mov
add
dec
xchg
in
mov
fcmovne
fidiv
pop
adc
sbb
(bad)
test
addr16
or
(bad)
xor
jns
inc
pop
sbb
inc
aam
mov
aaa
xor
ret
sub
lock
xchg
aam
(bad)
shr
call
jecxz
jne
add
and
jmp
int
sbb
into
sti
cmovl
cli
adc
xchg
ficom
cmp
xor
sahf
cmp
and
iret
or
xchg
mov
stos
shl
mov
mov
aad
pop
sub
jae
xor
jbe
les
inc
adc
push
mov
call
jl
clc
mov
xchg
fild
push
cmp
int
sbb
arpl
js
jmp
dec
mov
sub
or
cmp
stos
or
jae
adc
ds
sub
test
aad
or
dec
inc
sub
fsub
push
std
retf
scas
jb
shl
sub
xor
or
loope
or
add
test
xor
test
mov
pop
inc
mov
shr
inc
lds
out
addr16
inc
fsubp
shl
fwait
rol
cmp
jnp
fidiv
lea
and
push
add
enter
ret
in
sub
clc
jmp
bound
mov
fld
mov
fdivr
retf
sub
loopne
pop
pop
ins
(bad)
push
cmp
xlat
and
lods
mov
adc
sub
pop
es
push
push
out
mov
call
jb
mov
movhps
dec
push
push
mov
sub
das
mov
add
stos
dec
loope
sbb
adc
ja
aad
mov
mov
mov
xor
pop
xchg
xchg
call
(bad)
xor
pop
out
mov
inc
mov
dec
fiadd
cmp
in
mov
sbb
cmp
jno
pop
es
inc
and
pop
inc
(bad)
sbb
or
mov
cmp
or
repnz
movzx
je
mov
inc
xchg
jg
je
popa
jge
hlt
xor
sub
mov
pop
(bad)
sbb
fbstp
push
cwde
cmp
int3
sbb
jge
shr
jl
ins
or
sub
xchg
jns
loope
push
xchg
movs
mov
dec
xor
inc
mov
in
das
pop
sbb
mov
cmp
cmps
pop
push
mov
dec
repnz
mov
lea
mov
jge
push
cs
pop
movs
jmp
or
add
out
and
pop
rcl
jmp
pop
dec
mov
outs
jp
imul
push
cwde
jmp
imul
mov
or
int
mov
int3
(bad)
push
fwait
jnp
into
call
pop
rcr
dec
or
sbb
out
movs
nop
push
fwait
xor
(bad)
and
stos
neg
sbb
jle
sub
push
jae
sbb
stos
xor
in
movs
push
push
pop
in
dec
xchg
pop
mov
xor
outs
jno
sub
sub
pop
ins
data16
sbb
mov
data16
adc
repnz
retf
mov
iret
fstp
or
test
aad
rcr
mov
push
cld
jecxz
pop
mul
dec
add
mov
mov
retf
pop
cmp
in
push
dec
push
mov
fs
cmp
push
sub
clc
add
add
cmp
cwde
mov
out
push
test
clc
nop
pop
xchg
mov
or
push
push
cmp
call
sbb
shl
add
jae
mov
(bad)
mov
mov
es
into
dec
cmp
stos
sbb
shl
xor
xor
jg
into
cmp
mov
sbb
arpl
(bad)
int
jb
mov
mov
out
dec
xlat
add
mov
data16
call
cli
mov
mov
loop
das
cs
in
cs
pop
std
retf
rcr
outs
mov
sbb
imul
mov
mov
push
mov
mov
jge
add
cmp
into
mov
jno
adc
data16
sbb
mov
xchg
adc
push
retf
out
sbb
out
mov
mov
pop
xor
xchg
xchg
in
mov
adc
pop
jecxz
outs
fcmovne
call
aas
aam
mov
inc
pusha
pop
and
sbb
jbe
mov
sbb
sub
in
mov
sbb
outs
sbb
lods
adc
jl
and
popa
fwait
lods
fs
xchg
out
jnp
xlat
call
inc
test
fisub
pusha
pop
(bad)
xor
mov
dec
xchg
push
rcr
rol
stos
adc
loopne
jmp
add
addr16
outs
pop
(bad)
lea
adc
mov
daa
das
retf
daa
int
fild
pop
jle
iret
mov
sahf
retf
xlat
and
or
iret
scas
add
test
ins
sub
inc
pushf
inc
hlt
or
add
add
daa
sar
lods
pushf
(bad)
jae
add
or
arpl
cs
sbb
pop
dec
sub
and
gs
jmp
outs
cdq
into
pop
punpckldq
cmp
mov
jnp
pop
int
push
dec
adc
add
xchg
ins
push
jnp
sbb
xor
jno
fstp
or
popa
jne
xchg
and
lock
or
std
out
inc
fst
pushf
hlt
sar
mov
sub
lods
sbb
shl
ficomp
and
push
into
adc
xchg
sub
xabort
mov
aad
leave
xchg
adc
movs
xchg
shr
and
(bad)
mov
mov
jbe
adc
jnp
push
or
adc
and
in
cmps
and
js
xor
jg
arpl
jmp
ret
imul
cmps
test
mov
xchg
aam
js
push
pop
leave
movs
jmp
daa
(bad)
das
or
fild
sbb
jge
pop
mov
sub
stos
les
adc
sbb
(bad)
sub
addr16
fimul
add
adc
xor
sbb
mov
and
js
mov
cmps
sti
pop
fimul
sbb
out
and
fidiv
test
dec
leave
pop
inc
retf
into
xchg
les
movs
mov
outs
sar
xchg
inc
popf
push
loopne
jnp
(bad)
ins
out
loope
push
inc
cmps
cwde
jae
pop
test
pop
push
mov
imul
dec
add
pop
mov
adc
pop
sub
cmp
scas
push
add
push
pusha
cli
push
and
xchg
cmp
sub
outs
inc
mov
jmp
scas
dec
sbb
sbb
xchg
pop
dec
mov
xchg
call
fadd
push
mov
add
mov
adc
sub
pop
jg
push
outs
push
loope
mov
and
mov
xchg
ins
scas
sub
cmp
retf
add
lock
ret
add
pushf
in
shr
xchg
cli
mov
add
dec
sub
xchg
out
loop
mov
pop
push
cmp
mov
aam
pop
pop
inc
loope
xchg
ffreep
jmp
xor
mov
pushf
jecxz
imul
sub
out
xor
test
add
cmps
ds
dec
push
mov
(bad)
mov
push
inc
ins
xchg
lahf
in
cmp
mov
mov
and
es
jmp
or
ins
or
leave
rcl
std
shl
sbb
ss
adc
jno
pushf
lahf
xor
jg
pop
cld
(bad)
mov
xor
ins
mov
fadd
clc
hlt
xor
movs
adc
sahf
data16
push
test
inc
push
mov
cmp
fadd
test
mov
pop
push
addr16
push
ret
sbb
icebp
inc
daa
push
mov
js
xor
mov
pop
outs
push
or
ret
xchg
add
ret
or
and
test
jnp
xor
mov
xor
das
pop
xor
jge
test
int3
add
adc
sbb
jo
jmp
fsub
push
xchg
sbb
jae
jo
aam
loope
xor
jnp
pop
scas
sbb
pop
in
sub
pop
sbb
loope
ins
add
inc
loop
out
movs
mov
push
test
push
call
arpl
mov
movs
xchg
jbe
mov
pusha
cmps
mov
xor
hlt
dec
lock
fmul
lea
mov
mov
xor
neg
imul
jmp
call
movs
test
jg
enter
mov
test
out
pop
ja
add
sub
jl
jecxz
imul
xchg
shr
outs
add
bound
push
rcl
leave
ds
add
bound
lods
rol
iret
scas
leave
neg
jbe
jns
cmp
fwait
sti
mov
cli
ss
call
pop
xor
jmp
ffreep
test
rol
sbb
mov
mov
popf
jmp
xor
cmp
cmp
mov
jmp
(bad)
retf
push
call
shr
inc
call
pop
(bad)
int
mov
in
mov
ja
inc
fmul
push
pusha
mov
xor
jp
mov
iret
sub
cmp
fsubr
repz
enter
retf
jmp
into
add
cmps
mov
inc
call
sti
stos
inc
or
inc
sti
lds
gs
jmp
or
pop
adc
push
xlat
sar
aas
cmp
clc
pop
and
xor
push
cmp
inc
mov
pop
mov
or
cmp
mov
ds
xor
fldcw
sbb
dec
fwait
or
test
dec
push
xchg
cmp
cmp
inc
or
jne
int3
push
stc
dec
dec
or
push
out
mov
mov
test
sbb
ins
es
test
cmp
push
mov
mov
adc
mov
mov
fwait
fwait
push
sbb
and
add
push
loop
pop
cmp
mov
push
dec
arpl
inc
(bad)
dec
retf
fsubp
push
mov
xlat
stos
jge
mov
test
xchg
sub
adc
cmp
xor
fmul
outs
dec
push
jg
je
ror
jmp
sub
popa
push
or
jo
cmp
inc
jp
fstp
xchg
mov
mov
iret
xor
retf
outs
xchg
inc
xchg
or
cmp
lahf
and
call
sub
inc
iret
add
sar
sub
xor
bound
xchg
call
jg
dec
cmp
mov
mov
mov
fwait
add
scas
loop
or
jge
and
std
push
mov
(bad)
sti
jmp
adc
mov
fcom
pop
cmp
aam
and
push
pop
daa
loop
fwait
mov
push
sub
js
jecxz
pop
fist
xchg
pop
xchg
adc
inc
es
add
cmp
jle
stc
scas
gs
stc
inc
out
push
mov
inc
stos
push
jg
aas
std
cwde
fnsave
push
sub
push
pop
xchg
mov
inc
xor
test
push
cmp
pop
pusha
jmp
loop
into
ret
jo
sbb
pop
ja
data16
in
pop
cmovb
inc
mov
add
les
in
xor
fsubr
adc
cmps
sahf
and
sub
iret
fbld
(bad)
daa
pop
stos
mov
mov
inc
adc
push
rol
aaa
rol
ja
fcom
test
add
in
verw
test
rcr
sbb
inc
xor
bound
push
out
jbe
out
gs
pop
and
mov
pop
repnz
cmp
mov
jns
push
clc
pop
lods
xor
push
jg
neg
outs
or
xchg
cmp
aaa
and
xchg
mov
cmps
push
es
mov
inc
jg
(bad)
(bad)
loopne
cmp
xchg
cmp
scas
mov
adc
cli
std
xor
repnz
cmc
jbe
mov
mov
mov
test
stos
mov
arpl
xchg
scas
addr16
jae
cs
(bad)
dec
jge
xchg
pop
xor
sti
mov
int3
and
cmps
inc
xor
cmc
jne
cmp
(bad)
mov
add
cdq
mov
jecxz
es
loop
dec
mov
popa
aas
sbb
sbb
push
das
mov
adc
ret
dec
lea
pop
xchg
sbb
dec
aas
jge
and
xor
lahf
(bad)
mov
mul
fs
rol
xor
ret
mov
jae
test
je
xchg
mov
add
sub
pop
adc
jnp
mov
je
cmp
lds
mov
mov
or
dec
sbb
cmps
in
xor
sub
retf
ret
jmp
fist
pop
sbb
push
fwait
push
dec
pop
test
enter
sbb
bswap
sub
shl
cmp
push
imul
hlt
popf
cld
push
xchg
clc
fbstp
outs
sbb
adc
cmp
arpl
mov
pop
pop
jo
push
jl
mov
mov
fwait
xchg
jmp
test
ret
pushf
imul
jnp
shr
adc
aaa
xor
repz
dec
push
test
pop
outs
in
popa
or
add
mov
pusha
or
jmp
pushf
inc
call
rol
out
neg
(bad)
int3
idiv
pop
lds
addr16
xchg
pusha
xchg
sub
push
or
lds
mov
add
dec
fimul
ins
xor
shl
add
or
mov
jae
add
cmps
fisttp
inc
jge
loope
xchg
add
pusha
xchg
or
mov
mov
cld
xor
jae
aas
in
pushf
fnstsw
iret
ret
rcl
gs
adc
stc
push
push
test
lock
das
fcomi
ins
mov
std
pop
or
inc
mov
xor
xor
lock
sbb
fld
sub
jno
add
js
ret
adc
sahf
mov
jbe
xor
pop
inc
mov
fld
add
mov
pushf
ficom
cwde
inc
sti
jno
inc
or
(bad)
mov
add
mov
push
mov
sub
jno
cmp
js
jae
dec
ds
jb
jbe
test
mov
push
jbe
std
fist
enter
sbb
fcom
xchg
sub
jp
shr
test
inc
jle
pop
dec
test
jg
retf
add
(bad)
adc
or
jae
(bad)
cmp
dec
mov
call
in
cmp
aam
mov
hlt
or
pop
jmp
mov
mov
faddp
xchg
mov
aas
mov
aam
les
xchg
sub
push
outs
and
mov
nop
stos
push
loope
mov
adc
outs
dec
adc
neg
push
xor
and
out
pop
sub
clc
push
sub
lods
jae
dec
mov
mov
loope
dec
lods
xchg
inc
(bad)
fs
das
fs
fcomp
inc
inc
sbb
fcomp
add
or
fs
retf
ret
(bad)
aaa
mov
hlt
inc
test
aas
adc
xor
jnp
mov
add
lds
cli
imul
mov
jp
arpl
stos
loop
in
cli
shl
mov
or
js
call
dec
xchg
xor
push
cwde
dec
fsubrp
sbb
xchg
mov
xchg
loope
jg
sbb
inc
jno
es
das
cmp
mov
mov
call
add
mov
inc
mov
xchg
xchg
sbb
adc
xor
int
mov
shl
adc
pop
dec
mov
mov
(bad)
mov
stc
adc
xor
dec
aaa
ja
mov
xchg
hlt
dec
pop
retf
ins
mov
push
es
mov
pmaxsw
jne
add
pop
scas
push
aam
loop
arpl
nop
mov
sbb
or
jp
xchg
sbb
push
data16
mov
outs
pop
inc
push
scas
retf
outs
inc
ret
scas
adc
adc
dec
adc
inc
dec
cld
add
pop
xor
cs
fld
dec
sbb
repz
retf
xchg
cmp
ja
ds
jnp
ins
jmp
movs
test
or
jne
push
ja
pop
dec
fisttp
jg
out
imul
icebp
mov
cmp
pop
loop
sbb
sbb
sub
pop
jnp
aad
xchg
push
aam
ret
inc
mov
loopne
mov
or
jge
add
out
pop
jae
or
mov
xchg
bound
cli
add
inc
fld
jbe
mov
mov
in
ror
dec
jae
pop
iret
push
push
mov
test
xlat
ficomp
jbe
push
fwait
cmp
add
cmp
add
mov
inc
xor
push
ins
and
cmp
aaa
xchg
ins
mov
pop
mov
cmps
scas
es
icebp
jl
je
push
daa
inc
push
cs
jmp
cmc
cmc
mov
push
lds
adc
test
xchg
cmp
inc
(bad)
jmp
jns
push
adc
pop
popa
fidivr
add
mov
mov
sub
popf
out
inc
xchg
mov
adc
int
cmp
pop
mov
mov
shl
dec
xchg
add
pop
pop
test
cmp
lods
jne
inc
cmp
adc
push
sbb
jmp
fdiv
xchg
jne
jp
clc
jnp
cmps
push
mov
fucomp
add
pop
imul
(bad)
imul
int
inc
inc
ret
imul
adc
fistp
push
cli
pop
into
cli
add
loopne
nop
cmp
movs
jno
sub
pusha
popf
in
mov
mov
jae
in
jl
test
sbb
mov
int3
cwde
xchg
arpl
imul
fwait
cmp
(bad)
rcr
mov
iret
cli
cmps
cmp
and
fiadd
jl
pop
and
shl
inc
dec
stos
cmp
(bad)
imul
loope
scas
mov
jns
out
push
push
popf
int
daa
daa
shl
test
cmp
aad
sbb
add
push
or
fldenv
rol
ror
mov
sbb
gs
jmp
push
shl
xchg
loopne
cmp
sbb
jbe
pop
movzx
jecxz
scas
inc
mov
outs
retf
and
mov
xchg
sbb
bound
into
add
mov
stos
inc
sub
jge
repz
loope
cmp
lock
xor
jge
(bad)
clc
xchg
push
jge
sbb
xlat
(bad)
sbb
xchg
pusha
or
xor
repz
(bad)
add
call
loop
ins
push
cmc
popa
dec
jnp
dec
in
push
lea
dec
scas
in
jle
loope
cmp
xchg
add
inc
jecxz
hlt
mov
inc
movs
push
repnz
mov
mov
imul
hlt
push
add
jmp
ret
mov
(bad)
dec
pop
dec
or
stc
fucomi
das
mov
test
inc
dec
pop
dec
and
mov
imul
xchg
mov
lods
neg
xor
xor
fdivr
pop
sbb
mov
pushf
and
jns
in
rcr
aas
add
mov
neg
mov
or
dec
stc
inc
(bad)
mov
sbb
shl
(bad)
cmp
call
js
mov
scas
out
jb
movs
imul
pop
arpl
mov
jle
xchg
cmp
xchg
idiv
stc
jno
mov
gs
pop
dec
jo
adc
adc
mov
pop
ror
neg
rcl
les
sbb
and
sar
loopne
sub
xchg
mov
aas
xchg
mov
sti
into
rsm
jecxz
and
fwait
push
xchg
xchg
jecxz
test
retf
mov
out
inc
push
dec
ds
(bad)
mov
pop
in
mov
in
scas
xor
sbb
and
jl
or
sub
mov
outs
mov
xor
lahf
jns
rcl
pop
stc
push
sbb
sahf
in
xor
or
popa
daa
and
jp
jo
test
scas
call
mov
lds
cld
mov
push
arpl
push
pop
mov
add
mov
and
xchg
push
push
pop
movs
std
ja
js
sub
cmps
and
(bad)
jmp
fs
rcr
nop
adc
call
inc
outs
sti
cli
xchg
xchg
test
jo
sbb
mov
pop
mov
cwde
cmp
xor
push
mov
sbb
pusha
adc
add
pusha
pop
push
mov
jnp
push
in
add
imul
dec
inc
test
dec
cld
mov
outs
push
mov
enter
and
sub
pop
xchg
imul
cmp
pop
mov
inc
pop
push
mov
mov
dec
cmp
stos
mov
jae
adc
das
add
addr16
(bad)
sbb
popaw
mov
shl
and
dec
outs
mov
(bad)
cmp
mov
in
cmc
fs
je
push
hlt
dec
rcr
sub
(bad)
cld
stos
sub
mov
dec
test
jmp
pop
dec
fcom
mov
lahf
aaa
mov
ficomp
aad
push
xor
push
jmp
push
bound
es
mov
mov
mov
jne
jb
popf
ss
inc
adc
sub
sbb
inc
xchg
or
in
mov
lock
retf
push
data16
or
and
arpl
dec
in
repz
scas
shl
mov
popa
jo
jns
aaa
push
cld
inc
adc
pop
(bad)
rcr
movs
(bad)
clc
adc
shr
(bad)
sahf
(bad)
xchg
sbb
in
cmps
pop
pop
out
add
in
jecxz
in
push
or
cmp
push
mov
lds
loopne
neg
inc
xlat
daa
mov
pop
stc
(bad)
(bad)
mov
sahf
sub
add
add
inc
fld
rcr
loopne
dec
and
or
call
out
je
push
int
mov
sub
outs
out
push
pop
pusha
invd
shl
fld
fld
cmp
out
pop
sub
push
sbb
xchg
push
stos
ret
inc
inc
fidivr
inc
sbb
mov
mov
sub
adc
sbb
or
mov
push
sub
(bad)
xchg
test
inc
aam
movs
fcomp
jle
bound
dec
in
or
mov
mov
xor
mov
push
fild
ins
addr16
bnd
cmp
jmp
and
mov
das
mov
jbe
mov
mov
add
sbb
les
sub
xchg
jl
jns
mov
in
pop
test
xchg
scas
ins
inc
clc
or
add
dec
mov
test
stos
call
sub
stos
loop
mov
mov
inc
imul
out
in
rol
push
mov
sbb
daa
movs
lea
les
movs
sub
adc
mov
adc
inc
mov
lds
ss
sbb
arpl
pop
mov
je
push
adc
sub
adc
and
paddsw
sar
jnp
jo
and
pop
push
fcom
mov
stos
adc
test
mov
cmc
scas
inc
lods
addr16
jl
(bad)
hlt
mov
and
(bad)
arpl
and
into
inc
cmp
int
hlt
xchg
ret
les
in
pop
out
inc
xchg
add
sbb
sub
pop
xlat
adc
inc
adc
pop
jge
ret
mov
rcl
jo
pop
lock
jecxz
xor
adc
lock
rcl
sub
outs
jle
addr16
xchg
mov
lock
je
adc
gs
xchg
mov
push
and
(bad)
fsub
and
ss
or
mov
mov
or
std
or
jb
movs
xchg
push
dec
fsubrp
mov
mov
jae
ins
inc
addr16
and
sbb
dec
mov
pop
ror
(bad)
icebp
inc
dec
lods
out
jmp
call
push
pop
mov
icebp
add
movs
add
loopne
(bad)
jmp
mov
ror
sbb
pop
sbb
mov
imul
or
push
cli
cmp
pop
and
addr16
add
pusha
sti
test
je
arpl
out
mul
dec
fld
add
cmps
mov
(bad)
fiadd
mov
push
fdivp
push
push
repnz
inc
das
ror
jns
hlt
dec
inc
ss
retf
xchg
lods
mov
sbb
(bad)
aaa
dec
mov
fisubr
aad
loope
fs
jg
pop
movs
push
push
adc
test
popa
xchg
repz
or
lods
leave
push
pop
pop
xchg
pusha
icebp
test
add
fiadd
retf
push
dec
xchg
retf
mov
mov
addr16
cmc
jmp
je
adc
outs
cmp
cmps
pop
arpl
jo
scas
pop
or
cmp
mov
popa
and
pop
mov
out
data16
fwait
ss
(bad)
push
dec
sub
add
pop
sbb
xchg
das
out
mov
sub
ss
adc
cmps
retf
imul
push
fld
sub
cmp
add
add
sar
(bad)
je
fstp
xchg
sub
out
sub
mov
arpl
mov
inc
into
adc
cmp
cmp
(bad)
imul
xchg
jecxz
xchg
pop
push
inc
xor
icebp
stos
sbb
jb
jmp
xchg
push
je
sub
mov
jge
sbb
dec
into
lods
mov
xlat
(bad)
dec
ficom
xor
fst
cli
aam
jbe
xor
and
mov
sbb
push
movs
sbb
mov
or
loop
cli
stos
stos
in
pop
clc
cmp
or
mov
icebp
push
mov
addr16
ins
mov
inc
jg
out
int3
dec
outs
jl
scas
inc
pop
or
sbb
push
shl
cs
xor
mov
mov
(bad)
pop
fs
sahf
mov
in
sbb
sbb
push
xchg
rcr
fwait
loope
adc
and
adc
out
ins
mov
iret
and
dec
repnz
sbb
out
and
mov
push
imul
cmp
xchg
outs
mov
sar
and
cmp
add
dec
stos
(bad)
inc
sbb
(bad)
cwde
push
(bad)
movs
(bad)
xor
loope
mov
(bad)
cwde
cdq
adc
std
jns
jns
jg
mov
mov
dec
jmp
xchg
add
test
loope
scas
int
out
dec
ins
add
test
shl
ret
ins
out
ja
push
mov
mov
inc
cmp
mov
inc
data16
sbb
inc
xchg
jl
in
or
retf
dec
call
rcr
xor
pushf
jmp
pop
and
cld
adc
pop
fwait
movs
lea
ins
adc
stc
add
cli
and
jmp
gs
imul
cdq
aas
inc
lock
fwait
or
icebp
xlat
mov
fmul
cmp
outs
push
mov
ja
nop
std
dec
lock
ret
and
ins
in
jno
mov
pop
stos
push
jge
sub
cmp
in
lea
lods
mov
lea
xor
gs
mov
xchg
pop
mov
mov
(bad)
movs
out
addr16
(bad)
fwait
pop
not
mov
popf
cld
enter
aaa
jge
sub
pop
mov
inc
or
adc
add
dec
fsub
mov
test
loop
lea
cmp
outs
xchg
adc
iret
ins
inc
mov
fisub
fwait
(bad)
pop
imul
sub
stos
outs
fsub
and
movs
sub
dec
adc
mov
fs
jno
sbb
neg
cs
sub
aam
xchg
add
call
shl
mov
push
loopne
inc
sbb
shl
dec
arpl
mov
inc
outs
push
add
mov
xchg
pushf
popf
mov
xlat
jp
pop
pop
lock
dec
and
pop
fstp
sub
cmp
or
lds
jl
sbb
xchg
dec
outs
movs
lock
ror
ror
call
inc
shl
shl
in
xor
mov
xchg
test
test
mov
pop
cmps
xor
dec
jg
xor
aam
mov
mov
push
add
xor
(bad)
pop
and
loope
shr
inc
aas
xchg
addr16
iret
dec
adc
cmp
retf
ins
arpl
loopne
pop
icebp
pop
addr16
loop
mov
xchg
mov
add
pop
pop
sbb
call
test
ins
push
mov
rol
push
jnp
push
(bad)
aam
xchg
pop
jmp
loop
pop
inc
sti
loop
sar
mov
fwait
jo
jnp
pop
jl
(bad)
mov
push
mov
shr
push
ret
inc
push
cmc
aaa
or
mov
jo
or
test
das
push
(bad)
fidiv
int3
popf
out
add
dec
movs
lods
pop
cmp
jp
or
adc
mov
mov
sbb
mov
xchg
adc
leave
adc
(bad)
in
imul
sbb
xor
mov
lahf
ret
sbb
sbb
pop
add
xchg
aas
mov
imul
in
shl
xor
cmc
add
lds
push
int3
mov
outs
push
pop
mov
cmp
movs
xor
(bad)
(bad)
clc
dec
push
pop
cmc
pop
clc
loope
pusha
mov
xchg
loopne
mov
or
push
push
pop
scas
mov
les
leave
sub
mov
mov
push
gs
ds
cmp
loop
inc
pop
add
data16
adc
jno
loop
ja
int3
jo
cmp
lds
pop
and
pop
mov
fcmovnu
xchg
mov
dec
lods
or
bswap
jp
push
test
xchg
xor
call
aas
(bad)
lds
ins
mov
sub
movs
sbb
ret
sub
ds
adc
mov
and
cmps
ds
pop
mov
out
fiadd
cli
(bad)
fs
pop
fwait
jo
or
jg
and
adc
or
cmc
in
push
or
out
xchg
adc
xchg
pushf
loope
fs
xor
jb
mov
jle
xchg
xchg
(bad)
cli
mov
mov
stos
cmp
dec
fs
rcr
js
pop
mov
xchg
cmp
or
retf
in
test
and
pushf
add
pop
sub
(bad)
fcomi
test
xor
bswap
imul
scas
or
adc
loop
lods
xchg
cmp
jge
dec
fs
or
inc
xchg
cmp
inc
push
adc
sti
out
and
xor
lahf
inc
pop
mov
ror
adc
jmp
push
mov
sahf
(bad)
sbb
enter
add
iret
cs
test
add
retf
outs
jo
fld
and
out
push
fucomi
ins
clc
jle
pop
test
jg
xchg
movs
jmp
ins
addr16
pop
pop
fs
mov
cli
dec
mov
clc
pop
mov
add
jmp
bound
sub
psrlq
js
inc
pop
test
jnp
aad
dec
cmp
mov
das
mov
mov
push
add
pop
stos
mov
dec
sub
je
or
(bad)
mov
or
jle
sub
dec
or
sahf
fld
mov
mov
idiv
ret
jno
jl
int
push
pop
leave
pop
jl
jbe
push
es
out
mov
xor
jbe
add
adc
jo
les
jnp
mov
inc
std
aaa
aam
outs
retf
adc
adc
mov
loopne
popa
adc
or
xchg
outs
jecxz
inc
push
int3
mov
mov
ins
push
mov
(bad)
jp
in
dec
(bad)
jb
xchg
pop
ret
pop
xchg
cs
and
push
imul
mov
pop
inc
fidiv
dec
test
cs
daa
and
stc
cmp
fisubr
jle
cmp
hlt
inc
xor
(bad)
out
(bad)
fstp
(bad)
or
pop
xchg
fld
dec
dec
adc
sub
sahf
jecxz
pop
and
daa
mov
repz
pop
fsubr
pusha
retf
outs
mov
or
push
mov
xor
out
repnz
fdivr
iret
xchg
mov
gs
inc
test
mov
fwait
and
fisttp
lock
lahf
push
xchg
cmps
adc
into
cli
out
cmp
cwde
popf
jle
adc
inc
sahf
sub
mov
dec
mov
push
sahf
repnz
push
mov
pop
or
(bad)
jmp
sar
test
std
mov
call
ss
inc
sbb
cmps
cli
adc
les
push
test
cmp
and
stos
sahf
imul
or
ret
mov
inc
mov
xchg
sar
pop
fdivr
sbb
aaa
lea
loop
adc
adc
cmp
or
push
mov
fld
loope
es
cld
jl
rcl
push
gs
mov
std
test
ss
jo
dec
jne
mov
mov
pop
aad
jb
ins
mov
push
call
cmp
or
fild
movs
pop
icebp
ret
shl
aas
nop
and
dec
out
pop
cmp
add
stc
push
pop
mov
sub
mov
mov
jae
sub
mov
or
mov
sbb
jae
pop
and
push
xchg
sub
jmp
test
push
mov
mov
pop
mov
loopne
sbb
jnp
or
mov
dec
shl
sub
xlat
ins
sbb
scas
mov
iret
inc
les
in
cmps
std
add
adc
fwait
mov
xchg
popa
stos
outs
aaa
or
inc
bound
loop
sub
sub
xor
(bad)
lea
xor
outs
rcl
lds
cmp
retf
stc
xor
test
rcr
mov
dec
cmp
cmp
out
shl
cmc
ds
fs
sahf
cmps
mov
xchg
fcomp
aam
es
pusha
mov
add
loope
jp
jl
adc
mov
pusha
or
pop
pop
inc
pop
push
mov
std
scas
xor
dec
xchg
sub
add
ds
inc
cmp
push
and
xchg
cld
jae
shl
call
and
xchg
add
das
dec
or
fwait
adc
cmc
or
sub
or
fbstp
inc
outs
xchg
sub
add
sub
xchg
push
test
loopne
dec
mov
sbb
sbb
adc
mov
clc
int
icebp
aad
xchg
bound
out
push
jne
or
call
or
dec
adc
sbb
sbb
(bad)
pop
test
jne
xchg
jecxz
mov
addr16
inc
cmc
outs
sbb
push
int
mov
dec
mov
data16
add
(bad)
cld
das
bound
cmp
push
add
sub
mov
rep
mov
mov
sub
test
mov
lea
cmps
arpl
mov
dec
outs
movs
push
adc
sub
movs
add
out
jne
adc
nop
repz
mov
fmul
repnz
dec
fild
lea
jg
and
inc
and
xlat
fstp
std
and
aad
jmp
pop
outs
fcom
retf
shr
cmp
jne
aad
clc
jne
aad
jmp
adc
mov
fbld
cmp
pop
(bad)
mov
sbb
xor
out
popa
xor
ins
sbb
add
shl
xchg
jmp
push
sbb
mov
mov
fmul
(bad)
fisub
out
fwait
jo
or
(bad)
mov
mov
stos
(bad)
or
outs
cdq
mov
pop
or
out
(bad)
push
pop
mov
in
ror
es
cmp
cmps
jp
fst
mov
jl
mov
or
mov
sbb
and
aad
cmp
stos
stos
ins
mov
jbe
xor
cwde
ret
mov
cmp
out
cmp
popf
test
in
or
xor
cdq
scas
jae
mov
or
out
imul
pop
cmp
rcr
sub
adc
push
cli
xchg
push
sbb
stos
test
(bad)
ja
or
lock
sbb
add
cs
xchg
fmul
jle
cmp
sub
xchg
mov
rcr
xor
mov
adc
jno
fidivr
ss
xor
dec
icebp
loop
js
mov
sbb
jecxz
leave
jle
(bad)
aad
mov
outs
sbb
in
mov
and
fwait
aas
adc
xchg
inc
test
sub
inc
in
pop
inc
push
push
pop
cmp
idiv
sub
mov
gs
nop
in
mov
(bad)
add
xchg
push
xchg
mov
jb
adc
cmps
cmp
xchg
xchg
paddsw
xchg
pop
pop
jno
fimul
and
je
inc
sub
movs
adc
fs
aam
cmps
aas
fwait
cmp
xchg
push
fisttp
iret
lods
aas
int3
add
cmp
add
sti
dec
mov
add
scas
pushf
aaa
mov
dec
push
sar
push
mov
stos
mov
std
dec
iret
push
pop
xor
rcl
popf
jmp
sbb
int
jo
shl
pop
sbb
clc
and
mov
ja
dec
push
add
jmp
stc
and
mov
pop
jbe
fnsave
pop
test
cmp
clc
jle
enter
mov
push
add
sbb
xlat
pop
adc
inc
inc
mov
dec
mov
jmp
ret
retf
jecxz
jl
mov
lahf
add
bswap
and
adc
mov
cdq
out
lea
scas
(bad)
mov
jbe
popf
adc
mov
int3
out
jmp
sbb
mov
or
adc
cmc
rcl
mov
aaa
inc
jg
mov
int
das
pop
fdiv
xor
loopne
sbb
loope
pusha
sbb
push
mov
loope
xchg
stos
xor
icebp
push
mov
pop
push
sahf
pusha
sub
cmps
or
xor
mov
jge
iret
enter
and
or
test
aam
and
sub
hlt
lock
ja
mov
sub
xchg
addr16
scas
add
jnp
repnz
mov
enter
popa
inc
fidivr
sub
mov
ins
outs
(bad)
test
cmc
sbb
mov
fdivr
mov
or
pop
scas
and
call
inc
mov
in
psubusb
mov
xchg
and
add
xor
test
xor
sbb
add
or
cs
(bad)
shl
push
movs
repz
jg
fistp
mov
clc
sbb
inc
cli
imul
mov
mov
inc
jle
add
(bad)
mov
sub
mov
xchg
add
lock
pop
mov
popf
cmp
sub
mov
sar
xor
push
sub
jnp
push
xlat
out
dec
or
out
mov
pushf
mov
call
je
pop
mov
pop
(bad)
clc
pop
(bad)
push
aam
and
xchg
loopne
rsqrtps
aad
das
cmp
add
retf
and
(bad)
sbb
(bad)
aas
sbb
pushf
jae
jecxz
pinsrw
add
cmp
pop
jb
loop
sar
jmp
push
and
push
sbb
hlt
popf
stc
(bad)
lahf
push
cs
add
jmp
mov
arpl
adc
cli
jb
sti
test
fcom
push
xchg
movs
mov
test
mov
jl
mov
xor
pop
mul
mov
fiadd
mov
pop
and
pusha
and
and
pop
mov
add
sbb
and
loopne
inc
add
xor
cmc
lods
dec
adc
aad
popf
int
sub
adc
jo
pusha
loope
mov
push
int
sbb
sahf
aam
fisttp
add
test
stos
std
pushf
xchg
pop
dec
daa
sub
mov
mov
(bad)
and
pushf
(bad)
in
sbb
fstp
into
not
sub
je
lahf
push
fwait
cmp
rcl
inc
sbb
shr
cmps
cmp
int
mov
loope
xchg
cmps
scas
daa
in
dec
mov
add
cmps
and
add
xchg
scas
pop
xchg
(bad)
mov
pop
mov
pop
add
js
jecxz
dec
aaa
adc
mov
cmps
test
dec
pop
push
cmp
xchg
dec
inc
push
mov
enter
nop
lahf
push
sub
test
(bad)
popa
idiv
les
sahf
xchg
ficomp
or
(bad)
cmp
inc
sub
pop
int
imul
add
lock
inc
cwde
mov
sub
shr
push
add
jbe
xchg
mov
mov
mov
mov
pop
cmps
pop
inc
pop
cwde
aam
mov
rcl
adc
adc
xchg
jne
std
xchg
lahf
rcl
xchg
(bad)
loop
je
stc
pop
ins
pop
xchg
dec
test
sbb
mov
add
lods
mov
arpl
mov
push
sbb
ss
inc
xor
test
add
inc
add
sbb
cmps
xor
cmp
mov
add
es
in
xchg
dec
test
xor
xchg
xor
dec
cmp
mov
cmc
or
sar
cmc
sti
in
cld
loop
xchg
test
jp
(bad)
aaa
mov
add
mov
push
je
pop
adc
cs
(bad)
xor
ds
cmc
aad
sbb
dec
pusha
loopne
movs
add
sub
xor
cmp
adc
inc
add
or
mov
es
add
inc
mov
test
and
imul
inc
inc
push
les
pusha
and
scas
pop
fidivr
adc
push
mov
(bad)
iret
retf
push
shl
xor
arpl
xchg
xchg
mov
push
mov
fisttp
mov
fs
les
cmp
push
mov
mov
lock
ins
test
aam
je
mov
pushf
mov
scas
push
scas
pop
adc
and
out
aad
daa
mov
sub
ins
ror
push
mov
pushf
lahf
xchg
jno
into
fidivr
fwait
int3
pop
sub
ins
xor
cmps
mov
int
or
icebp
cdq
loop
clc
cmp
mov
jbe
es
add
inc
or
cld
pusha
jle
mov
push
out
movs
nop
test
cmp
(bad)
aam
(bad)
ret
(bad)
cmc
cwde
pop
out
pop
data16
shl
xchg
int3
dec
call
xor
jle
mov
pop
enter
push
push
call
movs
jmp
int3
sub
mov
inc
sub
mov
jbe
add
push
jne
test
stos
sbb
cmp
xchg
loopne
retf
push
push
ror
imul
pop
cmp
xchg
mov
imul
inc
add
mov
jae
mov
mov
fld
(bad)
jl
inc
mov
shl
or
gs
xor
jo
push
cmps
sbb
sti
iret
sub
push
lock
ja
cmp
cmp
mov
rcl
mov
or
inc
adc
cmp
jo
cmp
or
imul
popf
mov
jp
test
inc
mov
inc
push
push
test
repnz
and
std
(bad)
addr16
xchg
ror
jbe
inc
jp
jo
or
mov
inc
or
sbb
sub
in
mov
cmp
dec
adc
loope
mov
stc
sti
xchg
imul
pop
or
push
fwait
cli
add
test
cwde
(bad)
cli
jbe
fidiv
stc
pop
xchg
enter
mov
xchg
xchg
test
das
xlat
aas
adc
adc
sub
add
jmp
inc
(bad)
enter
jbe
repnz
cmp
fdivrp
retf
mov
imul
shl
(bad)
add
ficom
cld
out
xchg
cmps
rcl
ja
sub
icebp
fadd
aaa
setbe
jp
pop
xor
cmp
pop
sbb
or
xchg
and
add
mov
adc
in
mov
(bad)
bound
jmp
xor
xor
push
pop
or
jge
adc
xor
test
je
mov
lods
pop
into
aas
push
add
dec
fsub
mov
fcom
fs
lds
cld
cmp
mov
gs
inc
out
dec
(bad)
fsubr
loope
fcom
jle
mov
mov
jl
push
test
mov
jbe
and
rcr
cs
(bad)
hlt
cli
outs
out
push
xor
and
dec
pop
repnz
(bad)
fild
ret
and
cwde
icebp
sbb
add
idiv
sub
pop
cmp
pop
loop
rol
fst
push
int3
shl
mov
adc
xor
out
loope
or
rcl
inc
mov
jno
cmp
jl
or
sahf
fs
addr16
push
retf
pop
int3
mov
inc
jp
and
jmp
loop
aaa
jge
dec
retf
mov
jmp
xor
inc
xchg
sub
xchg
pop
jno
aad
in
es
loope
in
cdq
xor
and
enter
stos
or
dec
push
or
mov
pop
popa
popa
stos
mov
add
in
movs
pop
ss
pop
dec
pusha
cld
inc
shr
imul
sub
or
dec
mov
sub
js
gs
jno
push
mov
leave
scas
and
dec
das
push
dec
sbb
aam
adc
iret
pop
jne
dec
test
xor
pop
ins
data16
xchg
data16
sahf
mov
sub
jg
xchg
mov
mov
imul
jne
xchg
mov
cmps
mov
mov
and
inc
push
push
or
pop
mov
stc
jl
xchg
mov
pop
jae
movs
shr
push
push
fs
pop
mov
push
fwait
inc
sbb
dec
or
dec
xor
mov
sub
sti
test
mov
pop
imul
mov
jmp
jp
cmps
(bad)
sub
push
shl
dec
dec
xchg
cmp
xlat
jmp
loop
pop
jp
(bad)
jbe
inc
leave
push
dec
fsubr
push
pop
dec
cld
sbb
pop
das
xor
mov
jl
inc
add
movs
inc
imul
leave
enter
jo
loopne
push
mov
push
jmp
imul
data16
mov
test
sub
out
ds
std
pop
xor
cwde
xchg
jnp
nop
xor
push
pop
ss
push
sbb
push
push
hlt
aam
pop
jle
outs
and
xchg
ret
or
cmp
xor
xor
jmp
xor
ja
pop
jecxz
mov
cmc
adc
and
push
pop
pop
cli
retf
adc
pushf
scas
push
repnz
aam
push
mov
pop
and
inc
je
je
sub
stos
les
arpl
es
xor
cmp
retf
dec
xlat
jge
and
and
dec
and
cmp
jno
sbb
pop
mov
loop
out
cwde
jns
cwde
adc
dec
pushf
mov
cmps
jmp
pop
cmp
dec
(bad)
mov
mov
inc
neg
inc
pop
mov
jae
(bad)
pop
arpl
sti
xlat
jb
inc
add
mov
cmps
xchg
test
out
sar
call
add
mov
std
xor
cmp
mov
data16
jb
loop
repz
mov
sub
cdq
ds
stos
pop
or
or
adc
pusha
nop
mov
test
int
cmp
adc
inc
(bad)
out
gs
xor
out
push
and
xor
sar
fs
jno
push
out
repnz
imul
dec
popf
mov
test
and
fnstenv
ins
inc
lahf
stos
rcl
push
cmps
jns
in
jae
pop
sti
lds
sahf
ficom
or
leave
jmp
and
pop
xchg
loope
movs
jb
sub
repz
mov
mulps
ja
jg
ja
pop
push
sub
pop
leave
push
jae
sbb
ins
js
lock
cli
xchg
dec
(bad)
or
dec
jmp
lahf
cmc
pop
xchg
push
adc
sbb
imul
xor
shl
nop
dec
fsub
xor
mov
iret
xchg
cmp
mov
dec
ds
popf
in
dec
jmp
jecxz
out
mov
push
fidiv
retf
je
cmp
test
imul
inc
nop
(bad)
icebp
lods
icebp
lea
call
sbb
shl
loope
movs
inc
bound
and
push
jle
rcl
neg
dec
inc
pop
rol
xchg
outs
(bad)
ret
cli
cdq
push
mov
xchg
jecxz
in
push
lock
das
retf
(bad)
loope
lar
iret
lea
and
xchg
mov
mov
sahf
les
sti
(bad)
sbb
push
add
sub
sbb
arpl
pop
xchg
sbb
adc
jp
inc
mov
outs
xor
pushf
call
cli
test
outs
or
cmp
aad
mov
push
enter
loop
std
and
add
mov
popa
arpl
aas
movs
push
and
cmp
pop
loop
inc
lock
jmp
sbb
div
movs
lahf
sub
imul
sbb
lods
push
adc
stc
push
call
ja
bound
pop
xor
cmp
out
arpl
int3
mov
mov
nop
(bad)
in
jg
stos
sub
call
std
jl
sbb
jb
lds
stos
icebp
push
ds
pop
ins
dec
inc
dec
sub
movs
mov
add
(bad)
mov
icebp
pusha
aam
pop
gs
xor
nop
pop
jmp
popa
mov
push
push
jle
jo
mov
mov
mov
fucomip
jmp
test
pop
div
in
movs
pop
mov
ja
and
mov
mov
push
jae
jg
jne
mov
and
xlat
and
push
mov
add
enter
and
neg
cmps
fwait
jg
(bad)
(bad)
movs
sub
loope
push
or
retf
jp
test
lods
adc
test
fidiv
xchg
sbb
xor
ret
aaa
or
(bad)
loopne
pop
and
(bad)
or
(bad)
mov
dec
or
into
outs
push
into
pop
mov
cmp
sbb
add
fwait
jbe
or
stos
fwait
add
fwait
jl
push
fisub
rcr
pop
inc
dec
int3
xchg
mov
lods
inc
xchg
cwde
iret
je
add
mov
dec
dec
jns
shl
or
popa
fucom
push
jp
or
mov
lea
pop
enter
sti
mov
popa
push
data16
push
xchg
push
xchg
outs
inc
mov
pusha
mov
pop
pop
jo
lock
xchg
mov
pop
mov
mov
sbb
and
outs
adc
hlt
mov
jmp
and
add
stos
jmp
dec
push
pusha
sbb
aam
mov
mov
lea
sahf
mov
and
inc
jge
pop
push
xor
adc
pop
(bad)
pop
cs
inc
pushf
dec
xchg
and
mov
mov
mov
adc
cmps
mov
add
add
hlt
mov
jb
and
pop
add
test
push
jo
pop
cmps
hlt
mov
cmp
xlat
in
mov
hlt
pop
stc
dec
mov
fcomp
stos
mov
inc
xchg
es
inc
dec
outs
push
data16
cmc
push
jmp
outs
jp
jnp
pop
(bad)
mov
in
pop
and
xor
pop
and
in
mov
add
sub
and
sar
fisttp
adc
mov
ss
stos
cld
popf
fwait
mov
out
sub
sar
cdq
sar
jo
jmp
mov
push
pop
in
sbb
pop
xchg
jns
imul
ins
cmp
movs
mov
cmp
imul
and
repz
xchg
pop
stos
xor
aam
sub
movs
xchg
pop
stos
sbb
add
inc
pop
out
push
jle
xchg
fwait
and
in
dec
cmp
mov
ret
int
leave
mov
push
mov
shl
imul
mov
mov
sub
jp
and
adc
mov
push
jge
xor
in
test
xlat
jno
(bad)
jmp
lods
dec
sti
cmc
mov
cdq
sub
cmp
inc
inc
in
sub
jle
loop
rcr
neg
or
pop
test
aas
out
cmp
das
push
sub
(bad)
sbb
(bad)
lea
fwait
jne
test
outs
cwde
sub
inc
icebp
shr
mov
sahf
icebp
fwait
push
add
in
inc
and
(bad)
in
stc
adc
pushf
push
div
xor
loope
mov
dec
jns
cmc
xchg
movs
aad
mov
sbb
in
mov
xchg
mov
sub
jo
mov
dec
sub
jmp
dec
sub
and
jle
fcom
mov
std
or
or
sub
push
scas
fstp
aaa
cmps
push
adc
and
out
push
inc
dec
cdq
in
xlat
fadd
popf
out
rcr
ret
pop
adc
test
and
in
(bad)
sti
and
(bad)
fwait
xor
add
or
mov
sbb
pop
pop
jb
icebp
imul
shl
jle
sbb
mov
xchg
arpl
fldenv
xchg
push
adc
fstp
and
fs
jle
or
loop
xchg
pusha
xchg
xor
cmp
pop
sub
jnp
fcom
aam
into
int
mov
outs
pop
mov
mov
out
cwde
imul
xchg
stos
pop
fisttp
fmul
jae
(bad)
cld
(bad)
loope
jo
dec
dec
or
inc
jnp
js
movs
rcl
(bad)
outs
push
fwait
adc
push
mov
in
adc
or
mov
lahf
inc
pop
rol
and
mov
xlat
stc
ret
mov
and
pushf
sub
test
jno
mov
mov
mov
inc
jmp
xor
fdivr
mov
nop
popa
xchg
pop
aad
pop
test
cwde
sbb
aad
cld
add
scas
mov
adc
dec
jne
xchg
test
(bad)
mov
cld
pop
sbb
xchg
mov
mov
adc
(bad)
popa
(bad)
mov
imul
ja
jbe
shr
add
push
shl
xchg
int3
repz
dec
mov
icebp
jmp
and
fdiv
jb
cmp
dec
jnp
inc
jb
jg
fwait
addr16
sbb
mov
xor
fadd
imul
mov
out
push
sub
ja
int
jg
inc
ret
xchg
sahf
mov
call
fistp
sub
jnp
aaa
push
(bad)
rcr
shl
or
paddsw
adc
mov
imul
and
inc
inc
aaa
lds
sbb
mov
mov
in
cmp
mov
inc
xor
call
test
mov
push
push
sub
sbb
(bad)
add
xchg
jle
inc
or
mov
clc
jmp
jnp
cmp
lods
mov
fcom
xchg
out
mov
adc
inc
iret
fmul
add
(bad)
dec
cmc
loopne
and
jo
pop
or
or
jns
aas
push
stc
repz
inc
mov
mov
xchg
inc
add
rcr
(bad)
sub
xlat
inc
fild
jnp
jle
jmp
jae
pop
xor
(bad)
cmp
mov
rcr
push
mov
and
movs
mov
(bad)
loope
sub
test
lods
xchg
and
mov
mov
mov
jbe
cmp
ret
xchg
sub
push
cmp
inc
repz
cmps
sbb
repnz
and
dec
jnp
jne
icebp
js
ror
into
lea
pop
and
or
std
fucomip
jne
mov
retf
cli
or
addr16
stc
pop
jge
test
test
inc
(bad)
(bad)
iret
(bad)
add
and
(bad)
pop
fs
mov
cmp
xchg
lds
pusha
pop
push
mov
ins
jmp
add
lods
ins
mov
subps
in
and
xor
pop
retf
sar
in
into
and
jmp
dec
stos
mov
mov
or
jecxz
pushf
pop
cli
retf
dec
pop
inc
push
ret
fadd
xchg
push
xlat
fidiv
sbb
xchg
shl
mov
inc
jle
push
popa
xchg
aam
pop
sub
sub
into
cmp
retf
push
mov
pop
ins
cmp
shr
inc
mov
shl
mov
sar
dec
shr
movs
mov
cmc
not
stos
sar
ror
xchg
adc
iret
jo
out
xchg
arpl
xchg
adc
cld
pop
add
inc
mov
stos
pop
add
mov
cmp
ffreep
push
and
xchg
or
pop
lods
addr16
scas
cld
mov
clc
popa
dec
cmp
inc
xchg
not
(bad)
fbld
in
and
pushf
movs
push
or
mov
repnz
test
into
shr
ret
cmp
movs
imul
mov
dec
sub
pop
(bad)
bound
jns
add
out
xor
xlat
and
adc
jp
sahf
xchg
in
adc
(bad)
pop
retf
add
mov
add
xchg
inc
rcr
cmc
inc
dec
mov
lock
out
jmp
or
in
pop
lock
out
ss
fisttp
scas
sar
lahf
cmc
xor
push
dec
add
jge
and
jp
lea
mov
mov
add
pop
out
lods
mov
imul
add
xor
dec
mov
xor
mov
pop
inc
xchg
dec
cwde
ret
cmp
push
ret
stos
clc
jmp
inc
cld
repnz
idiv
adc
fs
push
inc
add
(bad)
gs
movs
adc
sbb
sar
adc
jns
add
shr
(bad)
mov
and
push
popf
and
into
jecxz
mov
js
sbb
mov
lods
mov
cs
ins
(bad)
cld
ja
adc
dec
addr16
scas
lock
clc
mov
add
in
pop
outs
cmp
sbb
es
mov
xchg
(bad)
xchg
retf
mov
js
dec
leave
ins
sub
sub
xchg
jge
ss
or
idiv
adc
push
repz
cmps
stc
sub
rcl
int3
test
adc
inc
add
fsubr
inc
inc
or
pusha
mov
lea
pop
and
xchg
jno
in
mov
mov
xor
pop
fldcw
ret
inc
sub
nop
outs
mov
dec
(bad)
iret
sar
aad
jno
sbb
adc
fnstcw
mov
pushf
js
cwde
ja
mov
and
sub
dec
pop
push
loopne
xor
xor
xor
sahf
cwde
xchg
ret
sbb
call
test
mov
xor
out
mov
push
jmp
cmp
sub
leave
(bad)
test
aas
xor
lea
mov
and
jnp
out
fs
call
xor
into
mov
les
mov
mov
sbb
je
sbb
adc
fnstsw
lahf
jge
pop
lods
dec
mov
(bad)
pop
cld
retf
imul
cwde
xchg
jp
and
jo
nop
cld
jne
loope
int
fldl2t
jns
test
sub
push
mov
in
adc
push
jbe
lahf
xchg
hlt
mov
cwde
data16
cvtps2pd
imul
repnz
ret
mov
mov
jbe
loope
jb
stc
dec
push
dec
jmp
mov
les
arpl
and
pop
push
cwde
js
loop
inc
or
push
es
xor
out
into
xchg
pop
and
jmp
or
dec
fldenv
push
jl
sub
fidivr
jbe
adc
outs
mov
pop
jge
inc
and
mov
and
aaa
dec
loopne
dec
lods
jmp
dec
in
repnz
inc
dec
cld
mov
daa
cmp
mov
jle
sub
jns
pop
push
hlt
push
mov
add
retf
or
and
movs
sub
dec
push
fstp
repnz
mov
add
js
stos
adc
mov
dec
ins
fdivr
sub
and
ins
sub
(bad)
sar
lds
out
aad
loope
(bad)
dec
ins
lods
mov
fsubr
mov
cdq
push
or
repz
rol
shl
push
out
cmp
jecxz
pop
fidiv
pop
fwait
mov
aas
jns
in
ss
adc
rol
sar
inc
jmp
cmp
in
mov
cmc
daa
shl
outs
jnp
jbe
cmp
repz
push
jae
jae
pop
retf
outs
out
xchg
jmp
popa
and
pop
sub
mov
sbb
imul
ror
jle
mov
stos
add
loop
xor
ror
adc
add
inc
mov
jb
out
hlt
push
push
fiadd
(bad)
mov
jae
in
ret
xor
scas
xchg
shl
sbb
xor
or
aas
sti
inc
test
in
(bad)
sti
out
push
andnps
fisttp
cmp
int3
ins
pop
adc
mov
cmc
or
push
push
retf
xlat
inc
(bad)
loope
mov
xchg
sti
sar
inc
dec
sti
bound
cld
jbe
push
and
sbb
sahf
call
outs
push
sbb
popa
(bad)
push
das
adc
push
dec
pop
inc
mov
jne
sbb
sbb
call
mov
pop
fst
lahf
jns
sbb
inc
fimul
ins
fld
cmp
push
add
cmps
clc
xor
cld
fisubr
pushw
adc
push
sub
jne
pop
les
fst
cld
call
popa
fnsave
pop
pop
pop
nop
xchg
mov
iret
push
fwait
cs
outs
jg
inc
loopne
retf
push
sub
inc
dec
test
cdq
pop
int
cmp
mov
jl
in
cmp
test
jne
pushf
mov
mov
xchg
jl
pop
imul
jbe
outs
std
in
push
push
fsubr
movs
rol
sbb
or
aas
cmp
or
jl
ret
sbb
cmp
xor
mov
dec
arpl
xor
sub
jge
hlt
adc
stos
jns
loope
add
inc
sahf
fnstenv
hlt
iret
mov
rcr
adc
sub
clc
out
popf
jo
and
push
fwait
mov
dec
sub
jnp
jmp
in
fadd
or
inc
xchg
and
sub
dec
nop
jl
das
icebp
mov
lods
imul
cmp
popa
pop
(bad)
lahf
retf
stos
mov
enter
cmp
push
int
je
inc
xchg
popf
or
inc
mov
fsubrp
or
sbb
mul
sbb
push
push
jno
pop
and
mov
pop
lods
fld
lods
add
mov
sub
shl
popa
call
rcr
cwde
out
(bad)
call
hlt
inc
pop
pushf
cld
xor
push
fdivr
dec
aaa
popa
nop
clc
mov
fwait
pop
(bad)
aaa
(bad)
adc
enter
adc
sar
and
push
ds
sbb
int3
and
fwait
add
iret
pop
lahf
dec
inc
cmp
push
mov
imul
xchg
jne
ficom
push
int
mov
loop
repz
(bad)
add
xor
inc
xlat
in
imul
mov
test
or
popa
and
sbb
push
xchg
and
js
adc
sti
mov
bnd
jp
clc
cwde
test
mov
daa
xchg
sbb
mov
jl
pop
or
int
add
aas
mov
stc
inc
mov
in
sti
dec
mov
add
add
mov
push
adc
xchg
sbb
sar
fdiv
lock
out
mov
mov
and
(bad)
adc
push
cld
pushf
jl
push
xchg
dec
daa
mov
mov
add
movs
cs
sub
shl
pop
imul
xor
sub
or
aaa
xor
movs
stos
xor
retf
in
rol
add
(bad)
add
loopne
fistp
mov
bound
sub
lds
aaa
aas
out
mov
xor
jo
lea
jmp
repnz
xchg
sub
rcl
cdq
ja
adc
inc
inc
test
in
movs
fisubr
clc
xlat
fstp
pop
xchg
lods
xor
jle
jmp
dec
cmp
cmp
and
das
sub
ja
outs
sar
inc
inc
retf
call
mov
sar
xchg
in
dec
mov
cld
out
loopne
nop
into
leave
loope
pop
dec
stos
cmp
scas
inc
enter
jb
ret
fcomp
mov
mov
std
mov
or
arpl
add
call
mov
loope
push
mov
(bad)
sub
test
into
and
jl
or
or
pop
or
inc
test
mov
fisttp
xchg
jge
jo
inc
mov
loop
rcl
mov
mov
mov
or
mov
ret
outs
and
mov
cmp
scas
pop
cmp
lods
adc
stos
dec
push
or
das
aad
in
movs
jmp
sbb
jmp
add
sar
and
dec
ins
pop
shl
sub
or
or
imul
sub
scas
jns
jle
retf
push
pop
adc
or
dec
loope
mov
jp
jmp
jb
fwait
xchg
mov
ds
shl
stc
(bad)
cwde
cmp
xor
lea
rcr
cmp
xchg
xchg
inc
mov
dec
push
lds
inc
adc
outs
pop
cli
rol
pop
out
inc
add
rol
out
jmp
fcomp
push
adc
xchg
push
lock
push
ror
push
mov
ins
push
cmps
ja
leave
jg
sub
out
int
(bad)
or
sub
ficomp
jb
pop
leave
sbb
fwait
rol
sbb
arpl
adc
(bad)
scas
sub
ins
dec
popf
dec
movs
shl
or
leave
repz
ds
xchg
fist
movs
push
inc
sub
xor
inc
cmp
mov
dec
pop
cmp
push
ret
push
cli
push
add
jg
pop
imul
or
jns
push
pop
test
inc
mov
cmps
int3
xchg
mov
mov
add
mov
pushf
and
pushf
cmp
(bad)
fdiv
adc
push
inc
hlt
ror
pop
pop
jne
adc
fcomp
rcr
push
leave
es
addr16
bound
gs
out
xor
cmp
out
aad
jp
cmp
iret
aaa
imul
jae
int3
sub
jl
outs
(bad)
mov
rcr
pop
jmp
jb
adc
in
movs
pop
sub
jmp
pop
lea
cmp
movs
pop
stos
lods
rcl
scas
sub
cmp
jae
call
inc
sub
xchg
scas
in
frstor
out
cmps
mul
cmps
enter
adc
lea
popf
sbb
jg
scas
shr
and
jb
loop
add
push
add
cmp
mov
push
sub
cmp
(bad)
mov
(bad)
mov
lods
repnz
mov
jae
cmp
test
je
mov
inc
pushf
mov
jge
lods
scas
jns
outs
dec
test
sahf
and
rcl
mov
push
pop
adc
pop
sbb
leave
(bad)
push
btc
push
xchg
xchg
mov
je
or
mov
dec
loop
pop
push
pop
adc
mov
sub
leave
fimul
dec
mov
int3
cmp
push
jns
or
shl
ds
aas
xor
mov
pop
mov
retf
and
fs
push
xchg
ror
retf
dec
mov
call
out
cli
xchg
push
cmp
mov
and
sbb
je
movs
adc
ins
fstp
cli
mov
xchg
sbb
and
or
adc
xchg
aaa
sti
dec
sti
in
scas
outs
mov
into
ret
bound
ret
add
in
mov
repnz
pop
mov
xor
mov
add
jb
gs
xor
cs
ins
add
fs
imul
add
je
jb
arpl
fs
jae
add
xor
std
dec
add
test
add
add
