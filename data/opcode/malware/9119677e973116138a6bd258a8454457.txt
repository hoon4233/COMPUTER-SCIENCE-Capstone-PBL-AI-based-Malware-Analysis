gs
mov
push
mov
mov
push
sahf
mov
lods
dec
ret
mov
or
mov
jae
dec
jne
mov
out
xchg
add
pop
arpl
outs
pop
mov
sar
pop
adc
aas
jb
add
add
mov
(bad)
movs
lods
movs
or
daa
mov
cmp
or
shl
pop
mov
sbb
sbb
out
jbe
cmp
mov
jl
xchg
ret
xchg
rol
loopne
pop
pop
or
imul
sar
push
mov
sub
enter
(bad)
ins
push
es
fild
lods
dec
(bad)
scas
movs
mov
sar
or
fbstp
mov
xor
xchg
sub
cld
cs
data16
add
sub
repnz
scas
cld
ror
pop
pushf
mov
pop
mov
cli
jo
repz
cmps
mov
cmp
cmp
or
out
lahf
repnz
mov
test
sub
les
mov
xor
dec
sub
jmp
mov
pop
pop
loop
push
nop
inc
sbb
adc
sahf
inc
mov
jle
or
xor
gs
jmp
push
jnp
or
in
lods
sbb
pop
adc
pop
aaa
add
mov
dec
lods
xchg
pop
popf
(bad)
hlt
jmp
or
test
stos
int3
xchg
xchg
rcr
iret
dec
mov
and
std
icebp
mov
test
clc
or
(bad)
jle
outs
int
ds
sbb
pop
fcmovnbe
mov
xchg
inc
fiadd
cmps
mov
arpl
mov
xor
mov
arpl
pxor
rcr
inc
aas
xor
add
cmc
(bad)
in
rcl
fst
jmp
ret
sbb
popa
inc
mov
into
mov
dec
stos
cmp
mov
and
inc
test
fwait
or
pop
movs
stc
cmp
jnp
mov
xchg
hlt
push
iret
sub
arpl
and
aad
fst
pushf
outs
mov
mov
push
aaa
push
add
mov
pop
pop
repz
sbb
test
xchg
and
mov
cld
adc
xchg
mov
xchg
call
ds
repz
xchg
popf
dec
stos
pop
iret
jno
les
fsub
add
leave
int
into
scas
div
and
js
loopne
stos
fimul
pop
adc
xchg
out
and
add
leave
mov
aad
dec
mov
mov
cdq
pop
enter
stos
cmp
dec
nop
ror
sub
push
outs
inc
push
jl
adc
mov
add
jae
sub
lods
mov
rcr
cmc
jmp
jb
cmp
push
push
inc
in
sbb
fwait
fwait
ret
xchg
sub
addr16
jo
and
pop
ins
or
test
or
mov
cmp
xlat
xchg
shr
mov
dec
jmp
mov
and
es
cmps
scas
test
in
cmp
out
call
fisubr
movs
jle
mov
test
ficomp
cmp
(bad)
jbe
ror
mov
stc
ja
icebp
jle
neg
out
mov
lods
icebp
leave
sub
mov
hlt
adc
dec
inc
sbb
or
mov
arpl
dec
fistp
push
mov
call
popf
inc
js
sahf
cmp
fbld
cmc
mov
std
nop
push
sub
jp
lock
adc
sbb
dec
add
push
test
pop
add
pop
cmp
fild
(bad)
rcr
xchg
xchg
sbb
push
or
add
push
fstp
xchg
pop
mov
dec
inc
cmp
xchg
inc
cmp
mov
mov
scas
in
mov
(bad)
dec
ds
in
jge
stos
in
ficomp
xor
repz
mov
jle
sub
inc
arpl
push
inc
mov
out
aad
add
dec
por
push
mov
and
aas
inc
cmp
mov
cmc
xchg
xor
pop
shl
mov
xchg
fistp
and
fwait
add
and
sbb
stos
push
lahf
and
retf
cmp
xor
jle
pop
lods
jo
push
fcom
dec
std
nop
sub
scas
cmc
sub
mov
cmc
inc
aaa
push
adc
xchg
mov
push
iret
jp
clc
outs
mov
xchg
call
std
push
fwait
jne
jo
adc
test
ds
je
jl
lds
add
xchg
out
mov
aas
out
xor
sub
icebp
push
mov
and
adc
bound
mov
lods
syscall
mov
jae
ss
jnp
and
push
xchg
(bad)
dec
(bad)
mov
push
outs
scas
pop
retf
lods
rcr
xlat
aad
je
(bad)
dec
(bad)
or
fsin
mov
inc
mov
mov
pop
xchg
scas
outs
rol
jns
retf
loopne
xchg
mov
push
adc
rol
mov
push
(bad)
out
das
mov
pop
pop
fwait
cmc
jle
adc
push
xor
mov
rcr
fimul
and
jge
stos
out
push
jg
sbb
fdiv
jmp
mov
arpl
pop
imul
jp
mov
mov
stc
ror
stos
int3
imul
mov
dec
pop
stc
test
fidiv
xor
comiss
stos
imul
and
or
in
mov
je
mov
push
or
inc
nop
out
mov
loopne
mov
gs
and
push
int3
ins
push
loopne
mov
in
ins
push
movs
sbb
push
mov
sar
inc
push
mov
setge
jle
xor
outs
jl
rol
add
andps
retf
jg
(bad)
clc
(bad)
sbb
jmp
std
inc
xchg
cmp
psubusw
jge
scas
jmp
test
jp
pop
mov
inc
out
jae
sub
mov
sub
jb
out
pop
mov
repz
enter
push
push
das
jmp
xor
mov
adc
push
ds
in
push
out
jae
xchg
data16
xchg
ror
ds
test
adc
pushf
pop
mov
push
fcomp
inc
fstp
sti
jb
call
stos
fldcw
or
lea
ret
mov
xchg
ins
lods
stos
int
xchg
mov
mov
cmp
jmp
or
lock
fs
paddd
nop
ins
cld
cmp
mov
cwde
add
lds
ret
cmp
fisttp
sub
bound
or
add
add
mov
lock
pop
es
cmps
rol
jno
test
sti
mov
push
retf
(bad)
aaa
add
mov
out
sbb
pop
loope
jae
movs
arpl
adc
cmps
push
leave
mov
xchg
repnz
pushf
push
mov
xchg
into
xchg
push
mov
nop
cmp
or
loop
imul
stos
or
sub
dec
lods
xchg
mov
mov
(bad)
ret
shr
push
jnp
sti
xchg
ins
jnp
fcom
inc
in
sub
xchg
push
outs
jecxz
add
mov
out
and
fstp
sbb
jg
mov
sbb
f2xm1
jo
out
out
mov
mov
xlat
mov
xlat
sbb
or
fldcw
lock
jmp
add
mov
xor
inc
mov
inc
mov
fisttp
iret
xor
div
dec
sbb
xor
out
push
dec
cmp
dec
sbb
int
jl
and
xor
xchg
or
pushf
or
jae
lods
push
adc
mov
jae
adc
shr
jle
aas
repz
adc
imul
push
mov
jmp
inc
sbb
fcomp
pushw
inc
mov
mov
(bad)
mov
and
jmp
xor
movs
cmp
stos
add
ds
jne
js
scas
xchg
pop
pop
dec
ss
adc
or
pop
dec
fs
inc
ret
clc
push
dec
cmp
mov
add
jne
ret
cmp
jmp
sahf
pushf
in
mov
mov
loop
cwde
pop
jmp
fwait
mov
jge
je
xchg
inc
add
cli
dec
pop
push
jb
and
and
daa
iret
xchg
add
jb
sub
cmp
lods
mov
cmp
jmp
cld
push
cld
test
push
out
setg
cwde
mov
and
cli
imul
in
and
sbb
mov
into
aam
in
jle
fsubr
mov
xchg
cdq
ins
inc
test
add
sbb
fs
scas
sbb
or
or
or
aas
aas
mov
lahf
(bad)
ja
lahf
sub
inc
inc
mov
inc
jge
ins
inc
or
xchg
mov
in
or
scas
cmc
stos
retf
mov
cdq
movs
arpl
jnp
jl
cmp
jp
cmp
call
lahf
push
add
int
mov
or
push
daa
jle
jp
pop
jae
or
test
inc
adc
dec
push
jo
jp
in
mov
sbb
scas
mov
mov
or
call
cld
dec
xlat
retf
retf
adc
(bad)
(bad)
sbb
jmp
mov
rcl
(bad)
icebp
pop
fcom
leave
mov
int3
push
outs
xchg
sbb
dec
out
pop
xor
sti
push
adc
mov
dec
mov
mov
scas
leave
movs
scas
xor
and
mov
aaa
dec
jmp
or
shr
jns
mov
retf
rcr
cwde
in
fild
and
adc
xchg
xor
loopne
sub
movs
mov
mov
push
out
jb
shr
sar
fs
dec
nop
jmp
(bad)
mov
xchg
je
jne
xor
sub
icebp
mov
push
cwde
sub
retf
add
pusha
sbb
scas
adc
pop
push
and
dec
fwait
pop
outs
into
test
repnz
mov
test
mov
scas
cmps
or
and
imul
sub
cmp
xor
mov
fld
popf
sahf
mov
add
aad
and
scas
pop
test
das
ror
add
xor
sbb
les
mov
jle
ss
mov
addr16
repz
jno
jge
aaa
mov
mov
shl
gs
(bad)
retf
or
mov
sub
push
out
mov
imul
jp
and
push
jb
push
pop
mov
mov
pop
sub
mov
push
xchg
mov
test
mov
push
adc
clc
test
bound
inc
sbb
sub
out
xchg
in
xor
push
pushf
mov
mov
cmps
shr
push
sti
bound
or
add
inc
test
pop
shr
jmp
add
ds
push
in
mov
imul
jmp
and
mov
pop
movs
adc
shl
in
mov
mov
xchg
(bad)
jecxz
inc
sbb
imul
inc
fsubr
ins
lods
xor
cli
lock
xlat
inc
add
gs
aad
mov
mov
or
icebp
sbb
push
sub
push
dec
lods
aas
pop
pop
jno
scas
into
pushf
xchg
fmul
ins
cmp
pushf
inc
nop
jecxz
jns
and
scas
(bad)
and
mov
cmps
loop
dec
in
stos
or
mov
xchg
dec
xchg
test
mov
xchg
fwait
sub
push
mov
pop
adc
pusha
mov
pop
stc
stos
pop
pop
sbb
adc
mov
mov
pop
sbb
dec
(bad)
les
and
jle
loopne
cmp
fistp
(bad)
and
jnp
dec
xor
fistp
or
or
lock
pusha
stos
je
add
push
inc
xor
pusha
xor
nop
mov
sub
in
popa
add
scas
xchg
or
icebp
adc
push
vpcmpeqd
scas
cdq
ds
imul
fiadd
cli
or
lahf
and
hlt
aad
std
stos
stc
fnstcw
(bad)
pop
ret
inc
enter
shl
cmp
and
cmp
or
iret
movs
xor
push
add
pop
inc
mov
cdq
push
pop
cdq
cwde
mov
int3
push
add
scas
pop
lahf
ficomp
cmp
mov
repz
or
push
ja
div
sbb
test
push
jno
and
jle
aas
jb
jbe
sbb
pop
(bad)
jmp
pop
aas
pop
xor
rol
aad
dec
and
cmp
popf
rol
sub
test
sahf
pop
mov
inc
mov
movs
mov
mov
pop
loopne
xchg
mov
or
dec
push
or
ret
xchg
cmps
jmp
adc
shl
dec
push
mov
repz
addr16
mov
ficomp
push
or
into
push
rol
dec
movs
adc
imul
xchg
jnp
dec
cmp
ret
loope
jno
leave
popf
(bad)
scas
ins
outs
mov
pop
aaa
push
or
or
add
pusha
mov
mov
push
sub
adc
clc
push
mov
pop
(bad)
cld
stc
call
push
dec
jg
or
inc
ror
cli
sbb
mov
pop
mov
push
neg
xchg
xor
(bad)
fiadd
sahf
push
js
dec
lds
add
inc
arpl
sbb
pop
cmps
cmp
rol
stc
add
mov
or
mov
or
out
inc
enter
scas
sbb
dec
loope
mov
rcr
xchg
pop
pop
xor
dec
or
stos
mov
mov
test
add
inc
loopne
lods
sub
mov
loop
call
popf
pop
cmp
sub
mov
call
pop
push
mov
xor
inc
cmp
rol
psrld
fwait
adc
inc
(bad)
sub
push
jmp
dec
and
and
xlat
push
push
sub
(bad)
test
sbb
sti
fnstsw
mov
adc
sbb
outs
pop
mov
xchg
cmc
mov
out
jp
dec
test
out
mov
xchg
cmp
sti
in
pop
cmps
daa
inc
push
mov
clc
mov
pop
and
inc
jge
lods
xlat
mov
cld
xchg
xor
sub
and
xor
jno
outs
(bad)
jl
and
std
adc
into
pop
aad
cmp
cmps
call
stos
lea
xchg
push
mov
cmp
inc
das
mov
pop
and
pop
test
add
(bad)
adc
mov
inc
fmul
mov
inc
pop
add
pop
cmp
jg
and
sub
jno
sti
retf
fnsave
out
pusha
cmp
mov
fwait
stc
leave
ins
fisubr
popa
push
aam
pop
cmps
pop
sub
call
ret
dec
mov
jne
ins
loopne
and
cmp
(bad)
nop
ins
dec
sub
mov
push
and
aaa
cmps
test
mov
leave
jl
in
sbb
add
out
cmp
aas
push
xchg
stc
mov
jg
cmps
mov
mov
adc
sub
pop
pop
leave
xchg
dec
jno
sbb
icebp
int3
push
imul
pop
popf
loopne
ret
jp
push
ss
aas
aaa
adc
sbb
mov
cld
js
xor
add
and
mov
lds
mov
call
pop
mov
scas
dec
fs
sub
je
in
adc
adc
mov
clc
pop
jbe
fild
mov
les
les
dec
(bad)
or
dec
mov
std
imul
add
leave
mov
aas
add
jg
aas
add
mov
xor
in
sub
xchg
cmp
sub
loop
inc
xchg
out
movs
outs
ret
pop
mov
cmp
bound
(bad)
std
clc
xor
mov
jns
inc
jmp
push
outs
dec
scas
aad
gs
(bad)
dec
cmp
aam
mov
mov
adc
sub
mov
xchg
push
xchg
int3
fiadd
idiv
nop
cmp
into
or
pop
clc
js
pop
out
fmul
sti
test
ror
inc
mov
aad
out
mov
or
mov
mov
mov
aad
repnz
cmp
xor
(bad)
xchg
ja
cmp
xchg
jecxz
pop
rcr
adc
jno
test
pop
in
xchg
imul
xchg
and
shl
addr16
xchg
or
jle
add
outs
jmp
cmp
dec
inc
lods
pop
xchg
fdiv
js
xor
cmp
test
xchg
sub
not
xchg
(bad)
mov
mov
cmp
cdq
pop
punpckldq
mov
mov
sbb
push
mov
call
imul
adc
mov
aaa
je
sbb
cmps
rcl
popf
push
push
push
adc
mov
add
push
sub
addr16
cmp
and
xchg
popf
jle
mov
xor
pushf
jg
ins
sub
movzx
stc
jmp
pop
xor
dec
test
daa
xor
pusha
es
adc
stos
fisub
and
sbb
daa
ds
jo
push
and
ret
xchg
pop
ja
mov
xchg
add
pcmpgtw
mov
ret
sbb
test
lds
xchg
test
popf
test
push
ins
xor
sti
jbe
mov
sbb
ins
inc
pop
mov
mov
iret
(bad)
add
pop
dec
sub
sbb
jp
cmp
inc
cmp
adc
movs
mov
loopne
xchg
sub
(bad)
inc
movs
icebp
jp
pop
xchg
sub
adc
call
xor
or
cmp
pop
jae
sbb
(bad)
(bad)
sbb
cmp
adc
adc
movs
mov
mov
cmp
mov
sbb
fsub
or
sub
nop
ficomp
jp
icebp
aas
jb
pushf
and
sub
mov
ds
add
out
popa
or
test
stc
pop
stc
ficomp
test
or
mov
push
test
adc
es
dec
adc
test
jge
pop
movs
xchg
push
sbb
sub
movs
popa
inc
aam
sbb
jg
ret
and
out
xor
ss
pop
cs
cmp
jns
ss
adc
inc
dec
xchg
cld
xor
cmp
or
mov
push
ret
and
pop
std
jb
xor
xchg
sub
sti
cdq
jmp
rcl
jb
add
jle
push
lods
in
(bad)
test
xchg
call
or
jp
xchg
dec
sbb
inc
xor
sub
test
adc
mov
mov
inc
push
mov
pop
mov
inc
dec
xchg
repz
test
xor
pop
iret
mov
and
push
push
popf
in
ins
mov
xchg
bndldx
dec
test
inc
(bad)
lahf
repz
push
lahf
mov
inc
iret
or
loop
dec
out
ror
adc
mov
imul
dec
push
xchg
push
outs
lea
rol
cmp
in
or
xor
loopne
cli
xor
int
jg
xchg
and
mov
mov
or
stc
jnp
mov
addr16
pop
out
pop
scas
push
pop
pop
icebp
sub
pop
add
ret
arpl
cmps
(bad)
test
push
xor
mov
iret
dec
rcl
cmc
retf
lods
cmp
jge
imul
clc
and
dec
scas
icebp
out
mov
aad
adc
(bad)
cmc
adc
inc
ror
loop
pop
js
push
aam
movs
push
inc
bound
and
fstp
and
fwait
adc
test
mov
ret
into
jbe
popf
std
enter
pusha
mov
pop
imul
jge
mov
inc
xor
cmc
jle
mul
stc
cmp
mov
fs
dec
cwde
cmp
cmp
jle
fsubp
xor
or
int
cmc
mov
ss
sbb
xor
pop
ret
(bad)
cmp
out
mov
and
mov
jle
push
enter
pushf
ror
sbb
pushf
pop
(bad)
xor
repz
(bad)
sbb
ss
int3
aas
dec
dec
cld
mov
xor
fsub
push
lods
imul
mov
adc
mov
rcr
mov
(bad)
nop
jae
add
je
mov
jno
xchg
inc
inc
out
scas
fcomp
xchg
mov
das
std
icebp
xor
cdq
jmp
bound
or
sub
and
lock
and
or
mov
int
fistp
pop
loop
add
mov
icebp
pop
das
into
sub
pop
int
cmp
pusha
pop
mov
adc
xchg
push
repz
jle
jnp
in
add
enter
out
push
shr
imul
call
push
rol
or
in
in
movs
fmul
add
fsubr
cmp
xor
push
xor
mov
shl
sar
jmp
xchg
pop
in
adc
(bad)
pop
out
or
fcomip
xchg
mov
cmp
ins
sar
cmp
mov
pop
ss
dec
xchg
mov
sub
arpl
jo
cld
sub
push
and
outs
das
in
cmp
scas
xlat
(bad)
lods
jmp
push
or
sti
adc
xrelease
lods
mov
mov
mov
jg
sub
mov
mov
jb
stc
sti
in
loope
ds
test
push
and
idiv
cmp
mov
push
sar
loopne
xor
mov
xchg
lods
ja
adc
xchg
and
adc
clc
es
inc
ds
dec
and
and
lahf
movs
jp
ds
bswap
aas
jmp
fisubr
sub
or
(bad)
das
(bad)
mov
mov
push
ja
jmp
jnp
pop
in
fcomp
dec
xchg
jg
in
into
outs
jo
jae
loop
movs
xchg
stos
or
pop
test
sbb
cdq
sar
mov
das
mov
sub
sub
xchg
jnp
cmp
inc
cmp
inc
xchg
or
sbb
je
sub
mov
pop
fist
mov
lock
mov
in
inc
or
pushf
imul
rcr
cmp
adc
out
call
mov
inc
and
pop
mov
js
mov
scas
movs
mov
test
xchg
push
cmp
mov
push
mov
popa
xchg
js
inc
dec
or
mov
sbb
xchg
dec
or
mov
scas
mov
retf
cmp
cld
test
nop
xor
push
lock
out
cmp
cdq
jbe
sti
cmc
push
out
xchg
int3
int
inc
sub
fdiv
jnp
(bad)
dec
add
or
xor
adc
shr
js
bnd
xchg
inc
shl
or
sub
mov
call
or
lods
and
aam
pop
or
pop
pop
sub
sub
push
dec
and
push
fcmovne
bound
mov
jp
or
data16
push
mov
push
push
rcl
out
jge
mov
ss
pusha
jns
jbe
xlat
icebp
out
rcr
(bad)
jge
sub
cmp
push
mov
adc
mov
pop
je
sbb
(bad)
mov
sub
popa
icebp
(bad)
dec
push
cmc
pop
retf
fidivr
sub
sub
mov
cmp
jmp
cmp
movs
div
sub
cmp
mov
add
dec
sbb
mov
push
es
scas
int3
jns
inc
(bad)
adc
out
div
ss
lea
sbb
movs
or
mov
lods
retf
sub
pop
xor
jae
bnd
outs
inc
mov
adc
xchg
ins
mov
dec
push
sbb
out
sbb
and
xchg
int
and
retf
jge
addr16
xor
jmp
inc
aam
adc
xor
dec
sbb
xlat
pusha
leave
jnp
cmps
dec
rcl
test
xchg
or
cmps
stos
inc
xchg
mov
cli
call
cwde
push
jp
jmp
push
push
jl
xor
pop
ins
repz
(bad)
stos
dec
in
mov
sbb
inc
push
mov
ins
gs
test
cmp
pop
cld
and
or
cmps
ror
sbb
lods
mov
jns
inc
pop
lds
rol
shr
mov
icebp
fnstcw
(bad)
cmps
pop
xchg
mov
xor
out
call
into
sbb
lods
int
inc
cwde
sbb
mov
outs
stos
xchg
cmp
fild
les
cwde
mov
jle
push
fisubr
mov
cdq
fsubr
dec
cmps
test
xor
daa
push
jne
leave
bound
arpl
cmp
lods
adc
pop
sti
inc
inc
stos
fs
(bad)
arpl
push
push
push
xchg
test
jle
jmp
dec
xlat
xchg
xor
scas
frndint
xor
mov
imul
jmp
and
shr
or
xor
xchg
js
jg
jmp
clc
dec
adc
cld
xor
(bad)
lods
loop
rcl
out
push
add
jb
mov
lock
push
out
mov
loop
pop
gs
add
sti
inc
(bad)
rcl
push
test
(bad)
(bad)
div
adc
adc
add
int3
fldenv
push
in
xchg
movs
aas
cmp
add
adc
loop
dec
retf
stos
adc
sahf
or
mov
out
popf
sub
mov
leave
jecxz
dec
jp
cs
loope
mov
inc
adc
xchg
xchg
dec
je
add
mov
sbb
arpl
(bad)
ja
dec
cld
int
mov
adc
movs
sbb
in
sub
cmp
ins
add
pop
mov
out
aas
dec
or
cmp
mov
mov
clc
or
hlt
lods
sbb
mov
push
test
add
pusha
stos
outs
push
push
xchg
dec
lds
pop
xchg
inc
(bad)
mov
mov
sbb
shl
xor
xor
jnp
inc
lods
xlat
mov
jge
inc
xor
mov
jbe
mov
ds
into
in
inc
addr16
xchg
pusha
loop
xor
scas
xor
aam
ret
dec
test
imul
out
inc
mov
call
int3
dec
adc
mov
push
dec
aaa
in
repnz
sub
rcr
jnp
bound
fidivr
scas
adc
push
jmp
imul
jmp
inc
push
pcmpgtd
test
push
aad
(bad)
mov
mov
and
iret
leave
cdq
xchg
mov
inc
push
and
hlt
adc
cmp
mov
push
lahf
lea
outs
pop
adc
lods
push
pop
fwait
dec
jecxz
ror
sbb
xor
std
in
pop
add
jmp
inc
mov
or
ret
fisubr
or
mov
lahf
pushf
xor
sbb
push
or
jmp
add
movs
xchg
mov
popf
mov
pop
iret
cmp
adc
jns
xor
adc
inc
and
mov
sub
sbb
aam
stc
in
pop
add
xor
movs
pop
inc
inc
jmp
sbb
add
out
movs
inc
push
xor
mov
div
je
fstp
std
sub
mov
imul
cmp
push
fwait
aam
xor
push
(bad)
mov
push
jns
mov
xlat
ins
ja
jb
bnd
(bad)
xchg
push
xor
out
(bad)
outs
pushf
inc
out
in
fstp
movs
sub
mov
and
repz
sub
push
retf
iret
in
cdq
jns
mov
jo
adc
fidivr
inc
mul
retf
call
mov
mov
daa
or
iret
xor
ins
aad
(bad)
inc
mov
ins
inc
pusha
xchg
mov
cdq
adc
(bad)
fstp
shl
ja
sbb
aaa
loop
push
hlt
add
lea
sbb
xchg
xchg
ret
out
fsubr
inc
int3
jmp
imul
sahf
adc
pop
fwait
xor
lds
ss
pop
stc
xor
sbb
ja
jo
lods
inc
push
xchg
int3
scas
cmps
push
outs
add
cmp
and
dec
xchg
jmp
clc
mov
std
ror
add
cmp
xlat
and
imul
cld
sub
lods
pop
xchg
xor
pop
out
xchg
fnstenv
ins
imul
es
in
mov
int3
push
ret
mov
aaa
retf
sub
test
mov
xor
out
mov
in
cdq
in
jnp
or
cwde
(bad)
push
out
sub
stc
fucomp
or
sub
jg
jns
leave
pop
push
or
mov
push
sahf
pop
rol
push
ja
fwait
ret
push
jl
test
scas
and
xor
std
sbb
fdiv
pop
lods
and
push
push
movs
test
sbb
pop
stos
cmp
jo
jp
stc
out
into
fs
fistp
mov
movs
inc
cmp
mov
pusha
mov
xchg
mov
mov
fmulp
test
cmp
hlt
adc
xchg
clc
and
jp
ja
ja
jge
add
icebp
dec
mov
in
mov
iret
push
pop
jl
push
out
push
push
jg
or
add
xor
test
mov
ds
gs
and
jns
mov
mov
sub
out
imul
lahf
xor
pop
(bad)
cmp
mov
(bad)
(bad)
xor
mov
mov
mov
je
xchg
rol
and
add
xor
mov
cmps
sub
ret
jge
push
pop
add
mov
leave
mov
push
je
(bad)
and
inc
fldenv
add
addr16
xor
pop
cld
push
and
jne
shrd
scas
xchg
sar
adc
dec
lahf
mov
xchg
gs
in
cmp
push
(bad)
pop
sub
nop
adc
jbe
int
ja
xchg
bound
(bad)
data16
ret
mov
jno
pop
push
mov
loope
mov
pop
std
sub
sub
fwait
sbb
icebp
test
loopne
mov
adc
dec
aas
xchg
push
fcomp
add
retf
mov
xchg
xchg
pop
movs
add
mov
jg
xor
inc
dec
hlt
and
mov
push
clc
loope
(bad)
int3
cmp
or
inc
xor
xchg
cmp
push
sahf
cs
push
cwde
and
dec
sbb
add
mov
sub
in
xchg
pushf
cmps
add
mov
les
clc
daa
jl
loop
xor
mov
test
ja
pusha
ja
pop
inc
repz
xchg
cwde
in
push
loope
enter
je
out
push
out
or
call
mov
fisub
clc
add
call
pop
pop
pop
push
and
jmp
scas
dec
adc
mov
mov
imul
pop
jo
cmp
ret
hlt
ss
mov
inc
pop
out
inc
jmp
out
imul
test
je
xchg
and
es
ss
cmp
jle
loope
inc
jne
aam
test
sbb
sub
or
idiv
cmp
popf
mov
test
xchg
ficomp
into
into
stos
pop
jmp
lds
icebp
fwait
sub
sbb
lds
xor
sub
and
inc
add
cmp
cmc
xor
mov
jae
dec
int
jmp
mov
call
xor
lock
mov
cmp
test
fnstenv
push
fisubr
dec
dec
or
outs
(bad)
fcom
jge
aam
jecxz
fbstp
lods
cwde
jnp
stos
ja
mov
rcl
pop
sbb
sbb
stos
(bad)
cwde
dec
xchg
pusha
lea
fild
adc
fidiv
in
fcom
xchg
push
or
xchg
ins
int
scas
fsubr
pop
loopne
inc
push
or
jne
mov
outs
nop
sahf
cmp
cdq
add
mov
mov
jb
leave
adc
or
rcr
sub
ret
xchg
fbld
cmp
loope
hlt
cmps
mov
popa
cmp
rol
xlat
vprotw
sub
jmp
push
mov
inc
push
fiadd
imul
(bad)
lahf
mov
add
sub
ficom
pop
and
out
cmp
push
sbb
fcmovnbe
sub
fwait
xlat
push
retf
clc
push
push
retf
ret
sbb
sub
push
test
aaa
test
and
sti
jo
and
adc
mov
mov
test
xor
std
(bad)
and
out
mov
test
push
add
mov
js
inc
stos
xchg
or
jno
adc
push
aad
clc
(bad)
sub
add
jle
not
pop
addr16
lock
inc
jmp
or
cs
xchg
xor
add
cmp
push
push
pop
pusha
cmp
dec
int
sbb
xor
push
mov
mov
cwde
mov
and
(bad)
sub
dec
pop
push
xor
sbb
movs
mov
ror
push
ficomp
repnz
pop
add
jmp
dec
push
push
ret
in
fstp
mov
pop
ficom
inc
nop
out
rol
or
adc
dec
mov
adc
pop
fwait
icebp
ins
jp
add
mov
in
scas
imul
jnp
daa
pop
xchg
adc
sbb
and
cmp
or
cmp
sub
pop
imul
push
movups
sbb
test
out
sub
push
fsub
stc
inc
sbb
(bad)
and
retf
movs
push
leave
mov
jb
ja
imul
xchg
sub
add
movs
jmp
sub
jo
(bad)
sub
push
aas
hlt
mov
cmp
xchg
pop
or
int
das
pushf
addr16
xchg
movs
movs
int3
aaa
sub
cs
stos
pop
mov
aaa
setae
xchg
ins
push
jbe
add
rcr
xor
or
lock
ja
adc
repz
in
xor
stc
push
mov
ss
push
dec
push
sbb
std
cmps
icebp
(bad)
je
into
cmp
retf
adc
cmc
push
scas
in
adc
xor
lods
and
std
push
jge
xlat
jmp
(bad)
mov
jp
sbb
sub
jnp
stos
sbb
mov
mov
mov
in
lock
popf
mov
inc
repz
mov
xchg
or
add
mov
stos
sbb
aaa
popf
dec
push
pop
hlt
pop
outs
sub
out
mov
fnstsw
cmp
xchg
sbb
adc
test
je
(bad)
xchg
bound
push
mov
or
rcl
loope
and
mov
mov
xchg
inc
cmp
iret
pop
xor
mov
xor
inc
jb
arpl
cmp
mov
(bad)
jp
imul
adc
xor
mov
movs
ds
lods
dec
in
jo
mov
mov
xchg
in
mov
mov
dec
std
push
mov
fistp
jno
out
inc
test
push
xchg
jmp
fistp
mov
leave
dec
xchg
cli
mov
sbb
cdq
and
scas
imul
xchg
pushf
ja
fstp
nop
cld
and
jo
jmp
jne
xor
(bad)
fiadd
test
and
push
es
push
jns
xor
clc
repnz
xchg
lds
xor
sysret
sbb
or
cmps
or
dec
mov
(bad)
jb
popf
test
mov
mov
xor
mov
popa
pusha
(bad)
hlt
cmp
xchg
jmp
sti
jp
jmp
sti
call
psrad
mov
mov
ins
(bad)
lahf
aaa
adc
mov
pusha
jmp
addr16
push
jae
jle
outs
xor
inc
xlat
mov
jmp
(bad)
fisub
scas
cmp
test
es
lods
int3
cdq
push
adc
dec
aaa
dec
mov
in
addr16
adc
and
cmp
dec
sahf
push
push
cmp
mov
cmps
jb
and
dec
cmc
jl
je
pop
xchg
xchg
not
shl
(bad)
mov
test
bound
retf
ins
icebp
lock
repnz
pop
inc
fs
retf
xor
es
std
dec
repz
inc
or
adc
ret
inc
mov
xchg
fadd
jo
xchg
dec
push
call
dec
xchg
mov
dec
ins
mov
scas
inc
pop
or
pop
dec
lods
mov
out
les
push
dec
dec
jg
aam
or
dec
xor
dec
inc
dec
push
pop
(bad)
jecxz
cmp
jmp
jno
dec
sahf
sub
ins
sar
cmp
sar
mov
call
fucomi
mov
daa
adc
test
dec
jnp
push
dec
lahf
pop
pop
xchg
mov
ror
xor
cmc
xchg
mov
pop
bound
mov
jb
rcr
jno
fild
or
gs
scas
mul
loop
inc
bnd
mov
test
mov
cmp
ins
dec
std
es
cmp
inc
dec
fisttp
repz
adc
cld
loopne
fldenv
pop
out
dec
mov
pop
dec
jns
mov
xchg
pop
jne
cmp
push
xor
imul
jbe
inc
fnstenv
shl
in
or
inc
ins
push
idiv
sub
aam
xlat
sub
clc
in
outs
popf
loop
mov
pop
in
(bad)
sub
lock
mov
xor
into
push
inc
pop
fst
mov
mov
mov
mov
ds
add
out
jge
inc
adc
dec
pop
adc
pop
mov
fisubr
xor
arpl
sbb
pop
dec
(bad)
adc
mov
std
jle
popf
mov
aam
stos
lock
movs
hlt
xor
nop
movs
cmps
sub
int3
jl
push
pushf
mov
fwait
inc
mov
ins
sbb
pop
out
add
out
mov
xor
lock
add
scas
add
jmp
lds
inc
sbb
inc
sbb
leave
add
fs
and
addr16
jp
xor
call
popf
sbb
or
icebp
jmp
int3
adc
clc
fist
scas
adc
ins
gs
lods
mov
enter
dec
ja
inc
jnp
xchg
mov
(bad)
pushaw
js
xchg
fisttp
push
xchg
or
sub
out
test
pop
inc
add
jg
aas
inc
fcomp
in
mov
shl
push
adc
adc
xchg
jnp
fs
add
xchg
aad
lods
adc
sub
cmp
nop
xor
add
jge
call
pop
push
cmp
xor
sub
mov
out
inc
adc
jmp
cmp
cmp
pop
push
mov
cmp
cs
repnz
in
inc
mov
lds
dec
mov
sub
les
(bad)
sar
pushf
xchg
sub
or
js
fstp
mov
add
ret
pusha
in
mov
hlt
les
pop
lea
sub
aas
out
std
sar
cld
cmp
paddq
call
inc
push
(bad)
fcomp
sbb
shl
cmp
mov
fdiv
lock
cmp
mov
xchg
fwait
jmp
bound
xchg
icebp
mov
loope
(bad)
nop
push
fdivr
(bad)
leave
xor
outs
dec
pop
xchg
xor
retf
xchg
adc
pop
pop
into
sub
out
cmc
add
stc
inc
ror
pop
inc
mov
push
nop
jg
adc
cli
push
jnp
std
jo
jbe
call
push
xchg
adc
xor
jmp
mov
enter
inc
out
ins
mov
daa
out
pop
add
pop
fcomp
hlt
jne
bound
iret
(bad)
popa
cs
out
mov
cmp
mov
mov
xlat
mov
sub
and
or
adc
and
dec
test
movs
inc
xor
mov
enter
bound
cli
(bad)
faddp
imul
pop
push
and
push
ror
(bad)
retf
jle
push
ds
dec
stc
test
in
sub
jp
add
in
xor
imul
sub
mov
dec
cwde
sub
js
xchg
cdq
push
mov
popf
adc
(bad)
in
fwait
pop
retf
pop
inc
popf
dec
shl
ror
cs
sub
or
mov
pop
je
adc
mov
push
push
mov
pusha
cmc
fcomi
jb
mov
push
jno
jno
mov
jg
xlat
mov
lea
cmps
mov
or
inc
mov
lock
mov
jbe
in
popa
add
gs
inc
lods
bound
sbb
mov
sub
push
mov
sti
jo
or
leave
sbb
ins
cmp
mov
mov
sbb
sti
movs
sub
cmp
xchg
cld
push
loope
repz
in
add
outs
call
pusha
das
push
arpl
cmp
das
pop
out
fcom
stc
shl
stos
loop
push
pop
lock
mov
sub
inc
stos
add
adc
mov
fisttp
push
mov
sbb
loopne
les
pop
out
mov
lods
xor
fs
mov
xchg
add
scas
daa
push
ds
pop
pop
jp
push
int
cwde
pushf
jle
je
(bad)
out
mov
stos
stc
in
adc
push
jp
and
(bad)
movs
xchg
xchg
cmp
(bad)
sub
popa
pop
mov
or
scas
ror
mov
pop
add
push
xor
push
jne
cmp
out
xor
cwde
or
sub
jbe
fst
xchg
mov
sub
push
dec
stc
sbb
(bad)
lock
loope
inc
jb
add
nop
mov
dec
and
mov
jbe
sub
xor
nop
or
sbb
push
fmul
cs
mov
test
add
push
(bad)
outs
les
add
fwait
cmp
fs
inc
xchg
sbb
ret
cmp
jmp
into
cmps
out
out
push
scas
daa
into
jp
xchg
loopne
sub
mov
inc
fbld
(bad)
bound
in
ja
inc
cmp
out
lods
push
dec
add
hlt
cld
xchg
push
jp
shl
and
mov
xlat
test
xchg
adc
sbb
mov
cmp
pushf
in
or
nop
sbb
mov
xor
adc
push
sub
mov
mov
mov
aad
xlat
out
sub
inc
sub
bound
sti
mov
nop
cmp
dec
out
ja
mov
daa
(bad)
adc
add
retf
mov
scas
out
sbb
xor
gs
jbe
dec
idiv
popa
(bad)
(bad)
repnz
movs
call
xchg
mov
pop
pop
and
adc
test
cmp
out
loope
fsub
and
leave
sub
fsubr
outs
dec
adc
call
lea
ror
dec
adc
(bad)
aam
in
test
jbe
cwde
pusha
sbb
xchg
or
mov
xchg
clc
and
jl
jp
xchg
xlat
pop
sub
shl
repz
xchg
xor
cmp
jnp
stos
sub
fwait
sahf
mov
outs
sub
aas
xchg
out
pushf
sbb
or
xchg
(bad)
gs
outs
adc
push
arpl
mov
add
aaa
scas
call
mov
mov
sub
es
inc
clc
mov
stc
xor
(bad)
fwait
xchg
cmp
jne
popa
sub
xor
fisttp
xchg
inc
fisubr
out
xor
aam
ret
cmps
push
out
addr16
shr
or
sub
sbb
mov
pushf
aas
xor
push
mov
popf
add
mov
add
call
mov
neg
adc
lahf
in
fdivr
ins
loopne
and
jmp
xchg
aas
pop
outs
rcr
jne
sub
out
ins
xlat
gs
ins
fcomp
call
adc
cmps
cdq
loope
mov
rcr
mov
bound
inc
adc
xor
jnp
out
sub
pop
bound
lods
in
sub
imul
add
addr16
retf
cwde
call
test
xor
js
(bad)
push
xor
lds
add
into
or
loopne
(bad)
stc
js
rol
jmp
pop
hlt
shl
out
inc
loop
jae
call
stos
je
fwait
cmp
jg
add
mov
fdiv
(bad)
sti
xchg
in
mov
lea
inc
and
in
data16
popa
ret
push
cmps
aas
pop
xchg
(bad)
test
outs
int
and
xor
jb
add
sbb
xchg
inc
push
scas
imul
les
test
xor
xchg
dec
enter
leave
or
pop
mul
mov
push
int3
mov
cmps
out
es
jnp
das
push
pop
xchg
mov
push
lods
sub
xchg
add
(bad)
cmps
rol
inc
repz
dec
enter
pcmpeqd
rol
(bad)
fs
mov
dec
sub
jecxz
push
jg
imul
arpl
inc
or
adc
xor
and
inc
jmp
(bad)
(bad)
mov
loop
aam
ret
les
jecxz
sti
retf
and
mov
les
jecxz
sub
pusha
arpl
cmp
xchg
test
aam
dec
repz
loop
addr16
(bad)
cld
pop
xchg
cmp
xor
or
jns
cmp
fmul
shr
xchg
out
mov
loopne
stos
or
pop
and
int
sub
sub
jmp
jns
pop
inc
mov
xchg
pop
shr
loop
or
aad
mov
mov
aaa
imul
outs
and
mov
loopne
cli
ins
inc
push
jae
pop
cmp
cmp
pop
inc
shl
fcmovne
xchg
jbe
mov
stos
cli
(bad)
jnp
(bad)
jns
movs
and
scas
fsub
mov
arpl
dec
(bad)
cwde
in
jnp
iret
clc
ret
mov
push
cmp
sub
sbb
adc
in
adc
pop
(bad)
adc
and
pop
push
xchg
std
jno
mov
lock
mov
outs
xor
and
sbb
gs
mov
out
add
scas
sbb
sbb
ss
jbe
js
in
pop
(bad)
dec
dec
pop
lods
mov
ins
xchg
mov
call
mov
xor
cmovs
adc
pop
sbb
enter
outs
ror
cmps
xchg
adc
rol
add
loopne
cmps
lahf
mov
out
rcl
xor
push
xor
rol
or
repz
lock
cmps
jae
sbb
inc
sbb
push
(bad)
enter
js
scas
out
sbb
jp
dec
lds
mov
sub
ret
into
(bad)
adc
add
dec
hlt
xlat
add
pop
adc
inc
sbb
inc
mov
xchg
sbb
mov
scas
inc
scas
pop
or
sub
gs
inc
dec
mov
cmp
jo
aas
xor
mov
imul
es
dec
pop
dec
(bad)
ror
sbb
sbb
inc
icebp
sahf
dec
xchg
mov
xchg
push
fxch
xlat
jge
ror
jne
or
adc
jle
les
push
(bad)
aaa
add
call
in
jns
mov
jb
loope
cmp
iret
int3
movs
std
test
lea
call
aam
inc
mov
jmp
mov
add
mov
jecxz
call
hlt
fstp
xchg
mov
jbe
inc
inc
sub
inc
add
test
clc
retf
mov
into
mov
mov
fcom
pop
repz
pushf
pop
inc
adc
fsub
outs
daa
cmp
movs
cmp
lahf
stos
out
retf
test
push
fmul
sub
xchg
out
rcr
inc
shl
push
xor
inc
pop
es
xchg
pop
and
cmps
inc
adc
frndint
sti
jmp
or
and
fs
fnsave
inc
jne
adc
fwait
inc
fsubp
int
das
cmps
les
out
fsubrp
adc
aam
or
je
out
push
in
pushf
hlt
jb
pop
xlat
mov
fwait
cmps
mov
mov
fcom
and
and
jbe
inc
inc
rol
cmp
pop
outs
pop
dec
jmp
mov
dec
inc
call
les
jb
out
xchg
loope
and
cmp
dec
iret
add
rcr
xor
mov
and
call
cmp
jne
push
pop
sbb
iret
jne
cmp
pop
mov
push
xor
and
xchg
sub
dec
sahf
retf
xor
outs
imul
outs
clc
call
jmp
jne
xor
lahf
cld
rcr
push
imul
fst
push
mov
sub
sbb
or
cmp
jns
mov
xor
(bad)
imul
jge
icebp
push
jbe
in
aad
xor
cwde
fwait
jge
pop
or
in
mov
mov
jle
scas
in
inc
mov
(bad)
ja
dec
test
in
jl
xchg
inc
mov
push
mov
test
clc
(bad)
sub
(bad)
ficom
mov
aam
push
jb
mov
adc
add
and
out
adc
jp
ss
cmps
stc
mov
aaa
xor
outs
fld
dec
rcr
int3
inc
mov
pusha
sub
aaa
push
pop
(bad)
in
jae
cwde
pop
sbb
push
sub
mov
push
rol
cmp
arpl
cwde
mov
and
aaa
inc
stc
ins
arpl
jecxz
add
imul
sub
retf
mov
fidiv
mov
retf
repnz
in
dec
cdq
test
xor
test
add
aam
pop
or
dec
ret
jmp
(bad)
rol
mov
or
in
rcl
xlat
das
push
xor
xchg
cdq
stos
jp
test
mov
jle
adc
int3
or
or
push
(bad)
add
std
xchg
push
add
and
arpl
and
les
mov
pop
sub
sub
pushf
sub
mov
ins
xor
fisttp
shr
fadd
and
aas
sbb
enter
clc
dec
test
(bad)
icebp
push
jl
and
mov
(bad)
xchg
push
aaa
sub
lds
push
enter
or
xchg
(bad)
inc
cmps
and
and
lods
jl
or
lock
or
inc
or
hlt
mov
xchg
test
mov
push
mov
xchg
mov
sub
outs
data16
das
mov
sub
push
sbb
mov
sub
push
loope
sub
scas
div
add
dec
mov
jns
push
rcr
mov
dec
or
mov
push
ins
pop
mov
jne
cmp
daa
inc
cmp
add
in
and
xor
sub
pop
pop
or
(bad)
retf
inc
mov
aas
mov
sbb
add
jbe
inc
pop
xor
cmps
xchg
add
cs
loope
xchg
fsubr
daa
mov
xchg
nop
dec
fsubr
xlat
fisttp
retf
rcl
imul
ins
xor
inc
out
les
sbb
cli
inc
pop
push
cmp
or
xlat
cmovge
pushf
sub
jnp
jns
mov
lods
ret
cdq
cwde
mul
pop
fadd
mov
movs
push
mov
shl
fld
in
retf
inc
nop
adc
adc
iret
clc
mov
jno
popa
fisub
rep
mov
and
cmp
add
push
and
call
sbb
add
stc
retf
in
adc
arpl
xchg
or
cld
mov
xor
push
in
or
inc
call
sub
cld
inc
loopne
push
fist
call
enter
sbb
dec
lahf
loopne
sbb
adc
cs
(bad)
into
xor
not
jb
fwait
out
cmp
mov
and
mov
cmps
lock
cmp
mov
ficomp
outs
outs
fwait
push
cmps
(bad)
mov
aas
adc
shl
outs
sbb
adc
dec
gs
out
mov
scas
or
adc
or
fisttp
cmp
sub
mov
or
imul
in
mov
mov
loopne
sub
adc
jo
int
and
xchg
inc
add
stc
pushf
push
adc
ret
popf
mov
mov
leave
cmps
es
jo
jbe
mov
pusha
jb
iret
pop
shl
xchg
addr16
sbb
leave
rcl
dec
mul
iret
adc
lea
jle
mov
out
lods
jecxz
popf
icebp
xor
push
and
test
mov
sbb
jbe
xchg
jae
shr
test
int
mov
leave
pop
and
test
ret
inc
push
mov
xor
push
int3
test
in
mov
sar
inc
movs
mov
sub
mul
mov
sar
pop
push
dec
mov
inc
test
pop
mov
in
mov
and
cmc
lea
retf
fcom
sbb
movs
nop
stos
mov
dec
and
cmp
cwde
mov
rcl
cld
push
mov
pop
je
and
test
inc
shl
mov
jecxz
and
mov
daa
iret
jg
ins
jbe
imul
dec
mov
arpl
jle
mov
scas
mov
(bad)
cmp
mov
ins
inc
mov
test
imul
enter
dec
imul
push
aaa
rcr
pop
loope
pop
scas
push
inc
jmp
arpl
mov
sub
stc
(bad)
push
stos
retf
mov
mov
cmp
aad
mov
push
fs
outs
push
cs
addr16
int3
sub
(bad)
sahf
aad
adc
sbb
test
ret
ins
sbb
iret
pop
pop
add
out
dec
js
inc
jnp
push
mov
and
ins
mov
ins
fisubr
mov
icebp
xlat
fwait
call
cmp
je
push
js
push
mov
pop
mov
shr
add
gs
and
ja
cmp
cdq
pop
push
and
dec
and
pop
test
test
ds
mov
or
adc
or
pop
fdivr
add
adc
test
mov
add
mul
aas
shl
mov
ret
das
clc
sub
push
retf
sub
cmps
or
xor
ins
clc
xor
pop
in
dec
cmp
pop
ins
or
sbb
dec
gs
and
in
add
jns
aas
cdq
add
mov
mov
std
je
popa
into
push
jp
jle
dec
sub
xchg
jp
repnz
je
aaa
jle
sub
mov
jmp
mov
push
aam
sub
bound
lea
xchg
xor
sbb
jae
popa
xchg
jecxz
jns
cmp
jl
sbb
inc
adc
inc
adc
retf
fidiv
push
shl
dec
fiadd
or
jmp
shr
inc
daa
mov
sbb
mov
retf
inc
mov
int3
and
repnz
les
dec
in
test
test
mov
or
dec
cmp
inc
sub
(bad)
retf
std
and
sub
leave
mov
out
mov
inc
aas
retf
dec
sbb
cmp
pushf
xchg
nop
call
imul
dec
cld
sahf
mov
mov
xor
pop
sbb
inc
dec
sbb
enter
out
mov
repnz
jo
xor
scas
outs
dec
xor
xor
jnp
or
or
and
inc
and
mov
cmp
jp
test
jbe
retf
xchg
inc
clc
cmp
aaa
xor
inc
ja
cmps
mov
js
pop
ss
mov
pusha
or
(bad)
push
fs
dec
xor
dec
shl
adc
adc
repz
loopne
xor
jns
out
adc
enter
xchg
jmp
test
or
ret
cs
sbb
js
mov
xor
push
jmp
push
int3
fsubr
scas
fwait
popf
ror
clc
lds
mov
in
arpl
cld
or
pop
mov
adc
out
(bad)
and
call
out
mov
xchg
push
arpl
rcl
fisubr
(bad)
mov
xchg
adc
or
into
push
sti
fisttp
mov
cmps
in
mov
fbstp
pop
xchg
ins
and
jns
popa
arpl
xchg
mov
lods
dec
data16
pop
ror
cmp
sub
cmps
in
push
mov
xor
sub
pop
sub
jmp
loop
out
mov
and
loopne
pushf
fist
push
mov
mov
fdivr
push
out
in
test
or
(bad)
mov
repz
sub
daa
sbb
and
retf
out
clc
cmp
inc
stc
xchg
retf
mov
jl
ds
and
movs
addr16
cmp
fprem1
in
ds
xor
leave
add
inc
les
out
das
jle
nop
pop
rcl
out
add
sbb
iret
push
xor
inc
icebp
(bad)
iret
cmp
cmp
call
in
or
jnp
imul
xor
xor
dec
sti
xchg
dec
ret
mov
arpl
xor
xor
sti
int
or
movs
fsubr
push
popf
leave
push
je
fdivr
call
fnstcw
daa
push
jo
xor
test
dec
xchg
out
gs
lods
push
adc
stc
mov
xlat
add
cmp
ins
cdq
fcmovbe
out
in
enter
jns
dec
in
dec
int3
jae
add
aaa
xchg
clc
mov
cld
jo
(bad)
rcl
dec
aad
test
pop
add
repnz
cmp
add
clc
push
mov
imul
mov
shl
ud0
xor
inc
cwde
call
pop
xor
and
xchg
daa
jmp
jb
mul
jecxz
stc
ins
jns
jb
paddusw
scas
mov
jb
clc
mov
jle
cmp
pop
fimul
out
adc
xchg
xchg
mov
pop
nop
sub
jne
ret
arpl
lahf
mov
mov
gs
call
mov
xor
pop
sub
je
outs
movs
or
jge
dec
mov
sbb
lock
lock
push
fstp
je
pop
push
xchg
imul
inc
inc
movs
lock
aad
sbb
loop
push
adc
inc
vmaxss
inc
test
popf
aas
repnz
inc
xor
adc
ja
fld
mov
cs
out
call
xor
arpl
or
dec
cmps
adc
mov
adc
lea
(bad)
pop
pop
enter
mov
xchg
push
sti
inc
inc
mov
and
lahf
sub
and
mov
and
add
mov
inc
cmps
adc
inc
mov
int3
rol
stc
std
push
mov
adc
dec
xchg
inc
sbb
test
cwde
pop
test
aam
in
jmp
fild
stc
movs
inc
icebp
scas
dec
mov
div
fnsave
and
adc
pop
pushf
inc
xchg
and
mov
cs
jb
shl
xor
xor
stc
jns
jnp
std
jae
outs
cs
arpl
xor
inc
jmp
adc
ins
int3
imul
retf
pop
jmp
add
jo
out
cmp
cld
lock
icebp
js
fild
dec
cli
retf
fdivrp
cdq
sbb
dec
xchg
mov
fcom
out
push
xor
imul
pushw
dec
imul
pop
jb
and
les
pause
inc
and
mov
scas
arpl
sbb
retf
push
loope
push
js
mov
in
pop
test
cld
shl
fisttp
jge
inc
push
test
(bad)
fwait
in
pushf
lods
xor
mov
in
addr16
jbe
ret
aam
gs
lods
mov
sub
dec
scas
push
daa
or
xor
jg
mov
lods
mov
ja
jle
in
ja
sub
cmp
push
int3
test
cmp
mov
imul
in
out
aad
push
pop
jmp
imul
clc
sub
in
stc
lock
test
test
(bad)
mov
call
mov
icebp
inc
xor
ins
bound
mov
push
les
dec
pop
mov
retf
xor
jg
aaa
test
test
scas
(bad)
and
nop
outs
mov
adc
popa
xor
dec
cs
call
out
inc
mov
jp
sbb
cmp
fimul
sub
mov
hlt
fs
sahf
test
ja
fsub
cmp
jmp
dec
xlat
mov
sbb
outs
sbb
sbb
sahf
xchg
out
outs
js
mov
cwde
data16
in
loope
cdq
push
ds
scas
pop
xchg
imul
and
je
retf
xlat
mov
into
repz
test
xor
jmp
movs
xchg
mov
ja
fisub
ins
mov
push
shl
out
and
ja
rol
ins
pop
enter
call
cmp
jecxz
inc
jbe
pop
retf
sub
in
and
fcomp
push
outs
adc
aad
xchg
cdq
test
push
xchg
mov
push
ins
xchg
hlt
add
js
les
xchg
xor
push
stos
mov
(bad)
pop
cmp
rcl
adc
inc
ret
mov
aas
xor
paddb
or
mov
loop
ins
outs
int
icebp
call
adc
test
stos
sbb
cwde
in
inc
xor
jo
push
inc
add
mov
xchg
(bad)
nop
mov
addr16
jmp
cwde
(bad)
imul
ins
adc
lock
sar
xor
jae
pop
mov
xchg
mov
(bad)
cld
std
or
jmp
xor
test
test
popf
clc
pusha
mov
lea
hlt
sti
enter
inc
jp
movs
sub
(bad)
mov
(bad)
jno
adc
leave
adc
retf
aam
in
int
scas
stc
or
xchg
sub
mov
movs
push
out
test
and
xchg
int3
addr16
sti
je
aad
jmp
fwait
xor
(bad)
shl
and
jae
rol
cmp
aaa
fnstenv
sbb
sub
addr16
bound
and
mul
call
adc
sub
inc
cwde
out
ds
cdq
not
arpl
cmp
ret
nop
jge
cmps
mov
fst
pop
cmp
jb
push
enter
(bad)
lahf
stc
and
sub
mov
rcr
inc
adc
xchg
mov
sbb
xlat
jl
or
cmp
data16
mov
outs
dec
pop
dec
cdq
(bad)
enter
inc
sub
nop
pop
dec
test
cmp
jmp
pop
jne
jne
imul
or
adc
mov
pop
inc
push
mov
jecxz
std
je
sbb
jg
jb
nop
sbb
xchg
mov
push
mov
jns
arpl
out
pop
jg
jnp
cs
data16
xor
sti
cmps
jle
inc
add
sbb
jmp
xor
cs
popf
test
gs
or
sbb
ja
xlat
sbb
jbe
int3
mov
add
(bad)
sub
add
xor
pop
imul
or
inc
int
mov
mov
inc
mov
lods
pop
lds
jmp
loope
call
pop
add
cdq
pop
dec
sub
inc
hlt
dec
jnp
fwait
push
fcom
out
fbld
jge
(bad)
dec
hlt
mov
stc
dec
cmps
ficom
mov
sub
add
push
push
xchg
push
arpl
or
jb
daa
fst
out
sub
mov
pop
test
sub
ds
in
adc
mov
fcomip
stos
cmp
sbb
sbb
ror
dec
ja
and
add
clc
add
ss
jmp
cmp
aad
cmp
lds
push
jnp
daa
call
jo
sub
inc
retf
jle
ss
ja
fadd
inc
leave
call
xor
loop
add
retf
inc
dec
jo
retf
xchg
out
mov
xchg
pusha
dec
mov
fiadd
test
lahf
mov
stos
retf
mov
in
inc
into
mov
push
dec
js
xchg
pop
sbb
test
fwait
es
jl
aas
adc
xchg
test
in
lods
(bad)
jg
pop
popa
pop
dec
inc
cmc
add
(bad)
ins
imul
jmp
xor
mov
sbb
xchg
int
shl
out
cli
inc
mov
jle
or
arpl
fistp
mov
xor
js
xor
jle
bswap
lods
cdq
xor
dec
dec
hlt
repz
data16
aas
inc
xchg
xor
mov
idiv
inc
scas
pop
or
sub
jb
ret
paddw
sub
push
lods
sub
push
js
mov
adc
mov
repz
dec
pusha
call
dec
in
repz
and
fnsave
imul
xchg
nop
iret
je
lods
in
(bad)
fsub
inc
in
outs
sbb
leave
stos
inc
iret
cdq
cmp
clc
cdq
xchg
jecxz
push
xchg
into
dec
aam
iret
fild
(bad)
hlt
dec
cwde
out
out
push
into
aad
mov
test
and
adc
or
adc
sub
sbb
sbb
xchg
lds
inc
ds
push
adc
iret
add
mov
or
nop
(bad)
in
jmp
inc
out
and
cmp
js
(bad)
aam
lods
dec
js
jp
(bad)
ds
lods
lahf
fild
mov
sub
or
xchg
jecxz
popf
cmps
adc
dec
scas
and
push
cmp
sbb
xlat
jge
pop
out
dec
sti
pop
sti
data16
xor
out
(bad)
mov
lock
mov
inc
fldenv
jne
pop
mov
or
inc
mov
test
ins
cs
jno
sbb
pushf
mov
inc
mov
fwait
or
xlat
stc
mov
mov
std
adc
adc
sub
xor
cmp
cmc
ss
mov
dec
fisttp
cmp
aad
into
jnp
test
in
push
or
out
mov
pop
and
out
xor
jg
clc
cmps
adc
(bad)
ins
test
inc
(bad)
lods
push
pop
imul
jge
xchg
xchg
dec
imul
retf
movs
inc
xor
inc
mov
mov
mov
movs
jbe
jne
xlat
(bad)
jecxz
xchg
pop
mov
push
adc
adc
add
jmp
lock
and
cmp
jne
xchg
into
test
sub
bound
rcr
sti
adc
jecxz
sbb
pop
inc
(bad)
stc
bound
pop
mov
stc
pop
sbb
mov
jecxz
mov
fiadd
ins
sub
outs
cmp
dec
lahf
mov
mov
outs
dec
aam
jns
je
stos
pop
mov
jmp
lahf
pop
shr
dec
push
ds
cmp
fwait
jne
gs
hlt
xor
ror
call
repz
scas
inc
fst
sbb
ss
retf
mov
call
xchg
loopne
(bad)
fidivr
ret
add
(bad)
xor
mov
sbb
ror
pusha
jnp
ins
mov
mov
push
dec
loopne
mov
out
add
mov
sbb
xor
fadd
pop
jb
scas
cmp
sub
xlat
dec
jne
ins
dec
fstp
mov
loopne
out
bound
bound
lods
xchg
jle
retf
jbe
test
loope
mov
daa
popf
mov
cmps
adc
test
add
test
inc
xchg
fcmovnu
rcl
add
daa
and
push
(bad)
add
les
popa
loopne
push
scas
in
pop
lods
fstp
enter
out
mov
cwde
inc
mov
mov
neg
call
push
sub
ja
in
push
loop
add
mov
and
in
int3
fild
dec
sub
es
cmps
in
loope
jmp
fiadd
mov
push
mov
xchg
add
add
retf
and
inc
addr16
mov
xlat
dec
mov
test
jg
lea
jp
in
jl
out
cmp
clc
sub
stos
pop
inc
out
mov
cwde
dec
mov
fs
push
and
out
aad
aam
push
(bad)
(bad)
dec
ja
cmc
js
leave
pop
sub
xchg
mov
jl
sti
repnz
or
aam
jno
dec
addr16
test
cli
cwde
jl
add
jb
loop
adc
jle
hlt
xor
pop
add
fmul
ficomp
repz
gs
xchg
jbe
sbb
sub
(bad)
in
sub
sbb
jle
dec
mov
cmp
int
cwde
neg
cmp
fld
fmul
add
mov
iret
(bad)
int3
dec
repnz
pushf
stc
mov
xor
popa
sbb
(bad)
lock
xor
sub
push
es
int3
or
fnstsw
mov
push
mov
xchg
in
ins
pop
adc
rcl
mov
sbb
ins
stos
xor
mov
data16
test
mov
rcr
ja
stc
and
test
sbb
sbb
jmp
inc
enter
fcom
inc
push
hlt
retf
add
fs
push
sub
(bad)
ret
add
aas
push
inc
cld
rcl
inc
mov
mov
aam
mov
imul
xchg
mov
gs
bound
mov
stos
mov
retf
inc
inc
sbb
scas
popf
add
cmc
ja
sub
adc
pop
and
std
push
or
xor
aaa
dec
jge
pop
ja
mov
outs
push
neg
arpl
(bad)
pop
mov
bound
adc
ins
cmp
sub
dec
call
scas
jle
icebp
stc
cmps
movs
push
lock
adc
jmp
popf
push
nop
int
inc
mov
inc
outs
mov
mov
xchg
mov
xchg
cmp
loop
jmp
or
test
lea
pop
mov
imul
(bad)
out
iret
mov
jo
je
fs
or
mov
mov
bound
gs
ss
xor
xchg
jbe
and
aas
aas
adc
jge
mov
out
les
inc
repz
inc
es
cmps
rcr
es
fild
add
(bad)
or
fwait
mov
push
ret
cdq
test
cmc
out
sbb
mov
ss
adc
es
mov
pop
test
sbb
fldcw
clc
popf
pop
mov
imul
ss
retf
or
xchg
push
inc
push
(bad)
outs
imul
fld
dec
ins
xor
mov
mov
xor
test
inc
inc
push
xchg
sahf
cld
push
std
jno
and
icebp
lock
data16
pop
or
jmp
jae
test
sbb
div
ds
xchg
lea
int
pop
dec
xor
mov
add
cmp
inc
shr
cmc
test
and
jo
inc
and
cld
dec
cmp
inc
(bad)
mov
pop
stc
repz
or
xchg
rcr
ret
dec
dec
xchg
mov
pop
icebp
push
push
xchg
xchg
adc
xchg
mov
add
add
in
lock
std
in
out
fs
push
or
mov
cmp
jae
jbe
xor
sbb
mov
jo
retf
mov
xchg
cmps
adc
sbb
lahf
sub
lea
mov
mov
pop
lds
ror
popf
lahf
lahf
aas
rcl
imul
aad
cmp
hlt
jb
out
mov
adc
xchg
push
jno
adc
(bad)
mov
cmp
dec
stos
adc
adc
js
jo
or
(bad)
jae
xchg
out
cmp
imul
test
push
xchg
aas
sbb
mov
xchg
data16
call
in
xor
mov
loope
inc
and
aaa
sbb
cmps
dec
out
sbb
pop
aad
imul
movs
jl
inc
cmc
and
adc
(bad)
mov
icebp
cmp
mov
cmp
or
push
dec
icebp
mov
mov
inc
dec
add
xchg
cdq
repz
sub
ins
inc
fwait
jbe
icebp
dec
mov
icebp
rol
mov
in
inc
int3
loop
and
mov
es
out
out
mov
in
add
rcl
jp
push
jle
xor
test
sar
cmc
adc
mov
cmp
idiv
call
sbb
push
pop
lea
mov
es
mov
test
push
fnstsw
fiadd
in
test
shl
pop
push
jp
leave
retf
ret
popf
lds
sahf
fwait
int3
shr
mov
mov
shl
lea
pop
leave
xchg
cmps
cwde
fld
hlt
fidiv
jb
inc
enter
cmp
xchg
jge
jae
inc
xor
inc
mov
xlat
call
adc
ret
retf
sar
(bad)
shl
xor
sub
cmp
rcr
mov
and
rcr
adc
or
cmp
repnz
rcr
retf
clc
jl
and
jecxz
jns
mov
in
push
jo
pop
pop
add
hlt
add
in
cwde
addr16
ret
push
in
mov
pusha
mov
test
(bad)
fs
pop
mov
inc
imul
or
pop
out
lahf
fsubrp
sahf
(bad)
adc
js
sub
into
in
cwde
mov
lods
cmp
cmp
add
cmps
jb
imul
dec
idiv
rcr
pop
test
xor
sbb
mov
mov
add
loope
mov
mov
in
push
test
cmp
push
inc
repz
aam
pop
and
dec
dec
inc
pop
call
pushf
in
inc
cdq
in
cdq
popf
fwait
mov
cmp
sbb
sub
imul
xor
and
aaa
add
std
mov
rcr
mov
jecxz
fs
pop
mov
jle
test
xchg
jnp
outs
stc
jnp
loope
(bad)
lock
add
daa
fidiv
sub
outs
lea
adc
in
add
lods
daa
je
adc
mov
mov
test
test
jl
dec
mov
gs
ret
test
loope
jge
xor
scas
repz
aad
sbb
sar
jmp
aaa
scas
fsubrp
cmp
in
sbb
mov
xchg
jae
outs
test
outs
loop
mov
and
test
mov
xchg
or
adc
data16
ficomp
push
(bad)
iret
xchg
xor
pop
sahf
dec
mov
in
inc
ja
(bad)
(bad)
jl
inc
dec
ds
cmovbe
xor
add
mov
ja
push
imul
ins
movs
mov
retf
push
pop
adc
ret
and
xor
push
mov
lahf
mov
(bad)
leave
xor
mov
add
inc
inc
mov
inc
xchg
jl
shl
outs
push
scas
repnz
call
xchg
cmp
sar
ret
mov
xor
or
hlt
add
ja
add
sub
fadd
lods
sub
pop
dec
or
loopne
test
sub
or
nop
cmps
xchg
mov
xor
sahf
pop
cwde
mov
mov
and
adc
fimul
lods
and
imul
mov
fistp
lock
dec
mov
xor
ins
mov
xor
xchg
xor
test
dec
pop
sbb
ret
int3
adc
iret
cs
fisub
je
sbb
jge
iret
fs
mov
mov
in
push
jge
pop
enter
jb
out
les
mov
and
sub
sub
or
mov
ja
scas
sub
sbb
xor
add
dec
inc
add
xor
dec
ins
int
(bad)
mov
pop
jecxz
mov
and
ret
jg
sub
scas
aam
xchg
jbe
xchg
lahf
xor
inc
div
jb
(bad)
cli
cli
xchg
jecxz
sub
push
inc
jp
mov
adc
pop
ror
mov
cmps
sub
adc
test
sbb
xchg
popf
ffreep
stos
(bad)
in
mov
and
stc
xchg
ret
push
vpunpckhbw
imul
daa
in
ins
ror
je
push
inc
out
push
dec
sti
xor
pop
dec
cmp
inc
inc
test
xor
into
mov
repz
pop
cmc
or
(bad)
push
mov
(bad)
loope
xchg
shl
(bad)
sub
cmc
ins
xor
pop
xchg
sub
rcr
or
in
je
sbb
mov
sub
out
dec
or
inc
loopne
and
pop
pop
mov
and
pop
dec
jp
push
ror
frstor
cmps
add
inc
jle
out
adc
mov
jo
jb
inc
or
cdq
es
retf
out
mov
jae
stos
cmp
pop
pop
pop
cmp
xchg
xor
outs
jecxz
cdq
fidivr
aad
mov
xchg
jae
out
iret
add
cli
add
sbb
adc
rcl
jmp
loopne
imul
cmp
pushf
adc
lods
sti
push
cmc
mov
adc
fidiv
dec
cmp
into
cmp
or
pop
sahf
push
js
pop
retf
and
enter
loopne
imul
add
movs
test
mov
and
in
stc
inc
mov
retf
cwde
or
je
ret
jl
sbb
mov
or
cmc
stos
cmp
test
lea
out
leave
aaa
(bad)
mov
xchg
fcmovnb
in
xor
pop
(bad)
hlt
fcom
sbb
jo
mov
mov
lods
fbld
inc
pop
repz
into
mov
sbb
outs
push
add
sub
xor
test
inc
cmps
popa
ret
nop
add
xchg
nop
out
dec
(bad)
ficomp
scas
cmp
dec
or
push
sahf
cwde
add
xchg
movs
out
movs
aam
imul
pop
jae
mov
loop
or
test
mov
cmp
mov
shr
sub
movs
jbe
ror
xor
hlt
pop
ror
arpl
jae
dec
mov
add
pop
shl
outs
shl
jle
adc
into
or
sub
mov
in
call
xlat
repz
test
rcr
call
pushf
dec
aad
pop
fld
push
lahf
test
aaa
inc
mov
js
mov
xor
in
mov
xor
mov
psrad
movs
lods
rcl
cld
jle
retf
jo
push
push
adc
enter
jo
cli
lahf
popa
jl
cdq
shl
out
icebp
mov
mov
inc
xchg
jl
and
jno
jnp
mov
pop
sub
rdtsc
cmp
lods
pop
jne
popa
mov
stos
es
fmul
ret
xchg
sbb
repz
les
push
test
xchg
mov
mov
repz
pusha
and
mov
xchg
mov
std
push
lods
movs
jb
lods
imul
add
cmps
cmps
jecxz
pop
arpl
addr16
jmp
push
mov
xor
addr16
sub
mov
ins
push
fwait
mov
inc
inc
push
(bad)
and
and
fimul
inc
cli
popa
sub
dec
adc
fwait
lods
popf
ins
or
add
sub
dec
iret
jbe
jno
or
mov
jle
jl
xor
pop
xlat
test
push
shr
cmp
aam
gs
(bad)
xchg
jp
xor
or
fs
or
das
xor
sar
test
out
sahf
pop
jl
or
sahf
sbb
xor
cmp
cmp
rcl
outs
ret
sub
icebp
mov
into
jno
int3
loopne
and
mov
jae
mov
mov
push
push
sbb
les
jmp
stos
repnz
je
ss
leave
pop
les
pop
(bad)
xor
inc
push
movs
mov
in
aas
mov
sub
lock
ins
fadd
nop
pusha
test
rcl
lods
ret
jl
xlat
jo
pop
cli
call
sbb
cmp
int3
cs
pop
jg
repnz
pop
adc
stc
(bad)
(bad)
jbe
imul
rcr
xchg
repnz
jge
jecxz
leave
cwde
and
ret
xor
cmp
pop
mov
sti
jae
mov
jg
pop
dec
les
daa
nop
or
pop
and
push
cmps
jae
jmp
push
fisttp
cld
dec
stc
mov
jno
fwait
call
and
xchg
adc
aaa
clc
call
fimul
in
sbb
ins
or
adc
mov
add
mov
jae
test
retf
dec
push
pminub
fimul
imul
mov
jmp
pop
push
movs
or
fs
mov
push
shl
ins
(bad)
inc
dec
dec
jae
in
mov
iret
ja
nop
jg
imul
xchg
fild
ins
retf
pop
xor
data16
stos
or
fst
mov
sti
pop
stos
push
adc
(bad)
js
jecxz
mov
lds
movs
adc
stc
and
(bad)
aas
rol
jecxz
sbb
loope
sub
addr16
pop
shl
mov
jg
jge
iret
push
sbb
cmp
jno
push
xor
sbb
ins
gs
and
hlt
shl
inc
ja
fxch
dec
jge
mov
sub
mov
mov
sbb
pop
das
mov
inc
pop
mov
loope
mov
(bad)
xchg
pop
pop
jge
xchg
push
add
aad
add
scas
add
rol
leave
les
xor
dec
dec
movs
xchg
retf
mov
mov
add
call
add
faddp
pop
lods
adc
inc
push
xor
out
ins
inc
adc
sub
dec
sbb
xchg
xor
and
mov
pop
stos
xor
inc
icebp
mov
mov
pop
int3
test
push
dec
cmc
xor
sub
dec
sbb
adc
inc
xor
ins
sbb
fldcw
xchg
jl
adc
and
jg
hlt
jg
mov
jl
cmp
jmp
mov
pusha
and
retf
fs
pop
sub
test
cmc
cld
or
outs
fucomi
leave
jns
fs
xlat
lock
pop
call
and
mov
ins
add
cmps
mov
adc
push
adc
movs
je
xchg
adc
mov
hlt
cmp
sbb
ss
inc
mov
xor
xchg
fbstp
stos
dec
cli
lock
loop
fsub
cld
test
mov
mov
mov
cli
rcl
push
inc
mov
in
sahf
jecxz
xchg
in
int
out
inc
or
push
gs
inc
les
or
jle
pop
xor
cwde
dec
mov
push
into
inc
sub
dec
int
(bad)
sbb
xor
(bad)
mov
xor
xchg
cs
mov
jecxz
mov
pop
int3
cli
test
fldln2
pop
add
pop
jnp
jg
sub
(bad)
out
mov
fcmovu
(bad)
xor
outs
xchg
and
mov
ret
stos
repnz
sbb
outs
pop
mov
out
xchg
mov
mov
shl
pop
addr16
sbb
or
mov
push
xchg
pop
cmp
push
test
shl
enter
jns
pop
xor
pop
call
cwde
cmps
scas
and
xor
aad
or
jae
sbb
stos
retf
mov
jae
movs
xor
xor
mov
stc
mov
cmp
push
adc
adc
pop
xor
js
fwait
outs
sub
gs
dec
cwde
cld
mov
nop
out
stos
cmp
popf
jno
xchg
adc
ror
push
push
and
pop
movs
scas
lods
fcomp
sub
cmp
in
adc
out
call
sahf
jne
jnp
loope
pop
aad
std
loope
pop
lock
pop
xchg
fist
pop
add
out
mov
fild
sti
cli
fwait
jbe
mov
adc
or
fdiv
cmps
or
test
sub
fisttp
outs
xor
cmp
cli
xlat
xlat
rcr
ins
lahf
stos
fimul
call
add
mov
xor
das
out
push
mov
jl
sub
sbb
hlt
shl
addr16
lods
arpl
ins
xlat
es
dec
xchg
mov
mov
or
mov
mul
popf
add
out
in
iret
cmp
loope
mov
lods
mov
scas
rcr
xchg
in
addr16
jnp
push
sbb
mov
ror
push
in
push
mov
mov
jp
dec
xlat
or
mov
(bad)
out
(bad)
fmul
ds
pop
pop
mov
inc
mov
rol
adc
xchg
xlat
ja
inc
adc
or
ins
xor
leave
mov
and
inc
out
pop
cwde
sar
mov
sar
jmp
xchg
in
mov
cmps
mov
sar
test
mov
cmps
lds
int3
pushf
jp
scas
mov
iret
clc
sbb
mov
mov
adc
fidiv
icebp
retf
cmp
loopne
xor
sbb
mov
pop
(bad)
hlt
cmovnp
xor
cmps
lahf
or
in
mov
imul
adc
retf
imul
out
xchg
(bad)
(bad)
and
mov
sbb
inc
and
div
xchg
xchg
jno
lods
ja
or
loop
inc
data16
pop
xor
push
adc
pusha
sub
mov
cli
mov
in
imul
sbb
or
rcl
addr16
ror
mov
adc
mov
cmc
push
inc
iret
stos
mov
and
adc
and
jne
push
push
dec
lea
push
leave
inc
imul
and
and
test
push
sqrtps
xchg
lods
add
jmp
shl
pop
adc
dec
mov
jmp
into
and
or
or
xchg
hlt
retf
and
inc
ja
pushf
dec
mov
imul
pop
mov
out
xor
dec
cmp
shr
sub
(bad)
mov
dec
gs
loopne
mov
dec
ss
add
nop
fcom
int3
test
and
mov
inc
xor
(bad)
jg
add
inc
sub
and
lea
rcl
ins
enter
popa
out
or
in
dec
in
sbb
shl
cmc
repz
mov
(bad)
retf
aam
push
in
leave
mov
and
mov
mov
fdivr
aam
xchg
and
std
mov
add
imul
imul
pop
dec
test
mov
dec
cmp
xchg
pop
mov
cmc
icebp
sub
cmc
scas
cmc
push
int
enter
pop
out
push
shl
fistp
push
ins
mov
ret
adc
retf
ret
retf
out
leave
repnz
mov
lods
lea
ja
sahf
xchg
and
das
leave
neg
test
jmp
aad
fnsave
lahf
xchg
clc
ds
jp
test
sahf
add
dec
push
xchg
movs
mov
pop
loop
loope
popa
(bad)
pop
mov
cs
cmp
adc
pop
inc
inc
in
inc
mov
xchg
mov
sub
pop
leave
cmp
loop
jle
retf
jo
cmp
(bad)
cmps
ret
jecxz
adc
rcr
rol
mov
push
jbe
ins
sbb
mov
lock
and
sub
add
adc
pop
push
lods
mov
push
adc
jl
adc
ror
push
push
js
jno
(bad)
not
cmp
mov
mov
dec
or
ss
adc
mov
test
out
xchg
js
div
test
rol
scas
xor
pop
mov
pushf
adc
imul
and
gs
rep
out
push
mov
xchg
jg
cli
cwde
repz
mov
(bad)
xlat
std
sub
pop
jle
dec
pushf
stos
add
and
scas
loop
inc
pop
fnstcw
popa
call
and
(bad)
and
or
dec
rcr
inc
mov
mov
cmp
and
mov
data16
ins
xchg
loope
in
std
ins
dec
mov
test
(bad)
xchg
inc
das
xor
adc
das
push
bound
inc
shl
in
in
sub
mov
mov
rcr
ins
ret
cmc
push
cmp
jbe
inc
jl
test
std
bound
cmp
mov
imul
pop
mov
or
mov
xchg
(bad)
push
test
jno
sub
dec
ret
imul
jl
pop
sti
xchg
cmp
mov
icebp
and
dec
cmc
mov
add
mov
imul
and
mov
pop
dec
gs
and
outs
push
or
mov
cmp
push
jle
add
mov
add
loop
mov
pop
mov
ret
into
(bad)
push
fnstcw
or
or
mov
(bad)
push
(bad)
pop
push
into
fstp
push
cmp
out
jmp
lods
shl
idiv
ins
nop
sbb
dec
(bad)
xchg
sub
repz
xor
mov
inc
xchg
fidivr
or
vcvtps2pd
cdq
sub
cmp
adc
xchg
(bad)
xor
mov
fstp
xor
add
xchg
dec
cmp
dec
add
xchg
fmul
jmp
jle
cmp
cmp
gs
test
xor
aam
arpl
or
cs
cmp
cmc
not
mov
out
add
and
mov
rol
sti
mov
rcl
movs
lock
adc
inc
fmul
mov
push
xor
adc
jne
pop
inc
jmp
pop
pop
mov
cmp
inc
push
xchg
inc
mov
jne
xor
cmp
and
adc
xchg
pop
cmps
inc
lea
mov
mov
adc
ret
jp
xchg
dec
pop
test
das
adc
mov
je
pop
jno
leave
mov
es
sub
and
push
xchg
rol
mov
in
fnstsw
push
sti
sub
aaa
add
cmps
push
cmp
mov
jl
cmc
pop
inc
mov
cmp
dec
cmc
jno
addr16
sub
jne
int3
jp
aad
out
jns
int3
mov
and
retf
test
movs
std
or
ds
push
cdq
int3
hlt
dec
fbld
je
(bad)
adc
mov
mov
scas
imul
pusha
push
jbe
(bad)
cmp
fucomip
mov
mov
nop
icebp
cld
cmp
pushf
jo
jbe
pop
popf
and
mov
test
movs
out
cdq
fdiv
xor
jb
xor
repz
ja
fdiv
dec
popf
or
lahf
mov
push
dec
adc
inc
add
pop
js
dec
sub
inc
ins
sub
mov
loop
push
push
cmp
mov
cmp
lea
mov
and
mov
pop
pop
das
sar
inc
fwait
movs
mov
fwait
int
pop
sbb
adc
and
imul
xchg
fisttp
pop
rcr
inc
lahf
sub
cdq
xchg
arpl
xor
les
shl
ss
push
jne
rcl
mov
iretw
mov
fsubr
mov
dec
adc
bound
in
into
sub
dec
iret
or
jbe
push
pop
mov
or
jle
fadd
xor
cmp
sub
arpl
ins
or
mov
xlat
xor
mov
xchg
loope
mov
outs
mov
xchg
or
push
test
push
cli
sub
repz
stc
adc
loop
and
je
fcomp
(bad)
in
mov
test
push
pushf
(bad)
and
fstp
(bad)
jb
pop
pop
sbb
mov
and
retf
jno
xor
pop
pslld
and
xchg
or
push
call
mov
sar
gs
in
lds
daa
stc
inc
pop
fbld
int3
xor
fiadd
nop
inc
fwait
jmp
retf
enter
cmp
or
jae
outs
fistp
out
pop
inc
add
in
call
pop
pop
dec
cmp
or
sub
jg
jb
(bad)
cmc
ficomp
pushf
dec
lock
sub
xor
popa
retf
stos
jbe
jno
aam
add
sti
test
inc
arpl
mov
retf
and
mov
inc
push
ret
push
ret
rcr
rcr
sar
add
inc
mov
in
xchg
push
cmp
lock
and
movs
aad
rol
jmp
sbb
sub
pop
push
pop
inc
ja
xchg
xor
mov
cmps
push
adc
xchg
out
inc
popf
mov
mov
stc
in
pop
inc
dec
adc
pop
sub
aas
dec
or
push
mov
jmp
and
mov
dec
pop
or
add
sbb
cmp
fmul
push
mov
jge
jecxz
jmp
cdq
lods
repnz
cs
add
lds
or
add
cmc
jbe
bound
sbb
add
jne
in
mov
stos
push
push
add
add
sbb
xor
push
sub
loopne
jbe
mov
(bad)
xor
into
test
xchg
or
retf
mov
jl
in
shl
enter
push
mov
lods
sti
ins
mov
hlt
inc
jno
lea
aaa
dec
sub
adc
pop
inc
in
jle
xor
pop
pop
adc
in
cmps
lods
aas
lds
in
dec
sbb
je
mov
call
dec
(bad)
aaa
mov
mov
sbb
mov
push
arpl
xor
dec
push
and
pop
add
xchg
dec
popa
and
mov
inc
ja
cmp
push
lock
cmps
pop
fstp
xor
xchg
imul
lock
mov
mov
or
int3
add
ret
cmp
sbb
stc
mov
cmp
dec
dec
jl
pop
(bad)
sbb
mov
pop
dec
xor
dec
sub
sbb
ss
test
enter
xlat
fdivr
dec
pop
scas
jne
cmps
mov
daa
shl
mov
mov
mov
push
in
push
inc
mov
add
sbb
call
cmp
sbb
(bad)
in
sub
mov
mov
pop
pop
ret
sub
push
lock
jge
jbe
mov
popf
movs
adc
mov
mov
push
push
add
les
or
scas
in
repnz
inc
xchg
inc
jle
push
clc
ss
mov
sub
ss
inc
push
scas
ror
or
sbb
and
mov
pop
jecxz
in
int
add
adc
sub
pop
mov
cwde
cmc
or
pop
sbb
push
mov
rcr
xchg
jle
leave
fwait
mov
xor
imul
mov
jmp
outs
adc
mov
jns
inc
jns
mov
es
add
xchg
ins
dec
mov
pop
push
xor
mov
sar
into
das
mov
xchg
sub
cdq
movs
push
cmps
addr16
push
mov
or
sbb
loop
xlat
add
push
push
and
shr
mov
movs
loopne
fcomp
je
add
mov
mov
xchg
adc
push
dec
retf
mov
les
pop
jmp
sahf
mov
dec
aas
pop
(bad)
mov
or
scas
sbb
in
or
sbb
fnstenv
cmp
in
jb
fstp
cld
lods
adc
and
dec
sbb
retf
xor
retf
popa
push
fidivr
jno
add
cmp
into
inc
and
int3
sbb
or
or
div
dec
sbb
cmp
xor
adc
shl
sub
fistp
mov
iret
js
aam
mov
retf
shl
jo
dec
xchg
jecxz
popf
and
pushf
xchg
mov
jnp
(bad)
loopne
outs
jecxz
pop
std
mov
add
mov
pop
leave
push
cmp
mov
test
shr
(bad)
and
in
xchg
pop
aam
jle
add
nop
mov
push
push
inc
loope
sub
cmp
inc
push
fimul
mov
lea
(bad)
cmp
cmps
aad
xor
pcmpgtw
les
xor
call
inc
retf
push
stc
ds
mov
mov
data16
sbb
cli
and
cdq
push
pushf
fcomp
aaa
mov
cs
add
ja
icebp
mov
adc
ds
loopne
xchg
pop
inc
lods
cmps
sub
pushf
and
cmps
push
adc
maxps
dec
mov
add
push
or
xor
dec
xor
ficom
xor
imul
jecxz
ret
(bad)
mov
(bad)
xor
adc
inc
shr
push
adc
xchg
ret
or
inc
mov
pop
movs
jne
lods
lock
jae
cld
loop
inc
mov
jp
ss
scas
push
xor
push
sbb
shl
or
in
mov
mov
mov
int
scas
adc
pop
and
adc
test
mov
inc
cmp
sub
(bad)
popa
jg
stc
mov
sbb
lock
out
cmp
sbb
or
int3
adc
or
mov
and
mov
pop
pop
xchg
fs
outs
outs
pop
cld
push
dec
xor
dec
lea
add
inc
inc
jp
dec
jae
repz
movs
dec
mov
shl
mov
sub
enter
mov
inc
add
cmps
into
adc
out
pop
pop
nop
loop
cmps
(bad)
jge
inc
ror
retf
jge
or
or
xor
jg
outs
xchg
xchg
cmps
xchg
nop
sbb
lods
clc
jmp
jge
push
ja
movs
aad
cmp
cmp
jp
loope
fwait
xchg
pop
or
nop
mov
out
push
(bad)
fmul
xchg
shl
and
inc
pop
dec
mov
jge
movs
fwait
or
and
add
sub
aad
test
inc
or
jo
pop
pop
sbb
push
daa
cli
mov
push
add
inc
xor
out
cmp
cmp
mov
mov
cmp
push
push
sub
bound
cmp
pop
js
cmp
int
mov
icebp
enter
push
lahf
jbe
cdq
cdq
mov
or
(bad)
fist
ret
imul
shl
xchg
(bad)
mov
bound
icebp
ret
retf
dec
imul
xor
cs
movs
adc
dec
lds
mov
fistp
test
movs
adc
add
sub
jmp
inc
imul
in
adc
sti
fs
out
cld
fbld
mov
sbb
or
scas
sub
jge
inc
sbb
mov
lahf
jge
aaa
mov
shl
cmps
mov
mov
jns
sub
add
mov
fldcw
mov
aas
add
aam
ret
retf
outs
loopne
(bad)
clc
inc
sbb
xchg
nop
popf
mov
and
xchg
mov
imul
shl
ins
sub
ror
and
mov
out
lea
das
sbb
cli
jb
xchg
sbb
jnp
mov
inc
xor
stc
push
jne
push
lahf
adc
push
or
sub
dec
fdivr
imul
add
pop
jbe
lods
or
mov
fwait
mov
cmc
aad
stos
hlt
mov
or
rcl
mov
rcr
aas
jmp
int
xchg
ds
dec
mov
imul
mov
xchg
add
mov
in
into
loope
push
xchg
inc
fst
fwait
repz
xlat
dec
lods
sbb
enter
icebp
pop
cmp
daa
ds
inc
popf
xor
out
mov
cmp
and
js
jmp
xor
call
ins
xchg
(bad)
push
ret
out
push
pop
sbb
fsubr
dec
test
push
cmps
shl
mov
mov
cmp
(bad)
in
mov
push
fld
ins
movs
jb
imul
jg
jge
call
shl
xchg
mov
xchg
icebp
xor
aaa
(bad)
jo
push
push
(bad)
(bad)
pop
pop
ret
pop
cmps
pop
xchg
cwde
mov
(bad)
cld
xor
sbb
push
int
push
popa
fld
frstor
xor
jae
pusha
shl
cdq
jno
xor
jb
cmp
dec
cdq
repz
and
mov
xor
and
(bad)
push
push
jno
fadd
not
std
jle
ins
nop
xchg
sti
pop
aaa
mov
add
ret
outs
std
or
mov
into
ja
pop
cmps
movs
mov
add
mov
test
sbb
enter
cmps
mov
adc
adc
mov
adc
or
(bad)
movs
retf
and
das
push
push
push
pushf
sub
addr16
call
add
sbb
cmp
add
(bad)
test
push
fst
out
sbb
bound
and
das
fld
sti
mov
dec
movs
push
(bad)
pop
inc
pusha
(bad)
loop
jmp
jmp
fs
or
dec
inc
adc
lock
dec
cmp
and
aas
(bad)
imul
(bad)
jmp
cmp
inc
imul
lods
mov
in
rep
push
push
lea
xchg
xchg
retf
adc
icebp
dec
inc
icebp
repnz
push
jmp
sub
jne
add
push
out
imul
pop
sbb
jp
push
les
retf
test
jle
mov
sub
xor
push
nop
ror
mov
xchg
data16
out
mov
lods
jl
jg
mov
loopne
hlt
xor
cs
sbb
jp
test
frstor
pusha
in
xor
pop
fwait
in
add
(bad)
fisub
or
cmp
retf
rcl
(bad)
jbe
cmps
add
pusha
sub
aam
add
ss
and
out
pop
push
inc
test
pusha
or
pushf
mov
mov
fbstp
daa
mov
push
add
or
xchg
push
mov
push
out
repz
mov
and
ins
adc
sbb
idiv
in
add
mov
pushf
and
jp
movs
fld
xor
mov
cdq
inc
add
push
adc
and
lods
or
inc
ret
mov
add
sub
int3
or
pop
and
add
shr
fdivr
call
sbb
mov
dec
inc
jg
jecxz
add
inc
pop
sub
add
and
push
mov
(bad)
ror
inc
pop
push
pop
sub
test
mov
mov
ret
and
xor
mov
int
stc
jmp
cmc
mov
loopne
push
push
and
fisub
sub
lods
cld
adc
dec
pusha
lods
push
enter
cmp
mov
pushf
pop
pop
dec
inc
test
fldenv
(bad)
push
mov
sbb
jne
stc
mov
or
adc
scas
ins
adc
call
sub
rol
test
pop
call
jmp
popa
sub
xchg
jp
ss
cmp
mov
adc
mov
pop
add
in
pushf
popa
(bad)
dec
jae
dec
aaa
add
mov
fnstsw
xor
mov
(bad)
cmp
imul
xchg
sub
mov
dec
pop
neg
mov
cmp
cmp
pop
xor
pop
xor
arpl
jge
jb
adc
lods
test
inc
pop
lea
jecxz
pusha
inc
sbb
xlat
dec
arpl
jae
push
jmp
cld
mov
(bad)
in
adc
add
sti
(bad)
jmp
fwait
and
dec
mov
lds
pop
lahf
and
shl
and
mov
shr
mov
jecxz
mov
ja
imul
aaa
cmp
(bad)
fnstcw
or
xchg
push
bts
mov
stc
sbb
adc
lods
add
adc
xlat
sbb
xchg
push
ds
pop
and
pop
fwait
push
imul
adc
retf
(bad)
jnp
pop
retf
jno
jmp
mov
mov
xchg
ret
and
neg
push
mov
jo
in
js
jno
pop
or
jo
cmps
sub
and
jecxz
iret
out
pop
push
int
gs
sub
add
test
mov
push
mov
fiadd
jb
xor
mov
cmp
daa
mov
dec
xchg
xor
pop
ins
dec
or
sbb
cmps
int
and
and
fwait
addr16
sbb
lahf
inc
pop
icebp
fisubr
clc
inc
jecxz
or
sub
dec
imul
lods
jp
arpl
adc
cmp
aad
sub
jne
mul
sbb
jmp
int
pop
dec
aas
popf
fs
cwde
jle
mov
or
xor
ror
sti
xchg
jp
cs
ret
push
pop
lods
dec
sti
gs
xchg
lods
(bad)
cmp
push
pop
or
icebp
mov
xor
xchg
cmp
xchg
push
mov
dec
mov
(bad)
mov
dec
aaa
push
inc
jae
or
aas
cmp
mov
xor
inc
pop
imul
sahf
xor
xchg
push
xor
dec
xchg
jno
pop
je
and
mov
xchg
les
out
xor
mov
xchg
jb
sbb
push
stos
push
xchg
fld
sub
cld
pushf
push
inc
vmovntpd
outs
push
push
call
mov
xchg
dec
xor
(bad)
gs
xchg
adc
add
les
mov
jne
je
test
mov
cmp
dec
dec
xchg
xchg
pop
cmps
xor
push
or
fyl2x
test
enter
jbe
dec
inc
add
xchg
call
mov
inc
outs
imul
mov
(bad)
stc
xorps
shl
je
dec
ret
les
jns
cmp
pop
mov
jns
shl
xor
jae
dec
int3
and
xchg
ins
mov
aaa
xchg
adc
xchg
dec
sahf
call
push
inc
inc
xchg
inc
or
adc
je
aam
xlat
pop
or
and
jmp
pop
jmp
hlt
xchg
movs
push
out
mov
inc
mov
xchg
sar
std
xchg
pop
aad
mov
jmp
nop
call
sbb
mov
adc
sbb
bound
arpl
jne
push
les
and
fwait
pop
aam
fwait
xchg
jg
dec
mov
mov
xchg
iret
in
pop
aam
jecxz
scas
mov
fs
add
cmp
aaa
mov
push
push
addr16
mov
sbb
(bad)
pop
je
inc
push
or
packuswb
lds
js
and
add
ins
and
mov
fcomp
jnp
je
js
push
loop
div
pop
fadd
pop
hlt
(bad)
sahf
adc
inc
jmp
loope
cli
adc
out
int3
jbe
ins
aad
inc
nop
daa
sbb
xchg
push
jns
jae
adc
jge
aam
push
pusha
mov
rcl
jmp
or
adc
jo
dec
cmc
adc
add
shl
dec
lds
mov
int3
icebp
and
ret
inc
add
push
dec
dec
jecxz
jl
inc
js
push
sahf
sub
push
ret
pop
xchg
mov
adc
aaa
loop
mov
pop
imul
stos
(bad)
loope
mov
sti
jns
adc
adc
xor
jmp
(bad)
and
or
popf
mov
dec
mov
popa
cmp
cdq
int3
inc
outs
pop
mov
stos
push
jo
xor
enter
jmp
mov
mov
xchg
stos
sub
or
mov
sub
xchg
popf
std
push
aas
and
ret
arpl
xor
and
popf
xchg
cmp
out
push
push
or
fmul
cli
adc
test
lods
jge
lods
push
test
rcl
adc
(bad)
shl
add
movs
pop
push
cdq
mov
aaa
cmp
mov
and
lods
adc
ins
imul
sbb
jl
mov
js
inc
push
sub
cmp
xchg
mov
jmp
cmp
or
sbb
add
loopne
mov
iret
adc
outs
gs
adc
ins
test
jbe
dec
into
mov
or
(bad)
inc
test
inc
popa
pop
outs
rol
ror
not
movs
xchg
mov
mov
repnz
shl
sub
mov
pop
sbb
dec
mov
scas
inc
mov
pop
ficom
loopne
sbb
push
dec
adc
stc
addr16
jno
ret
mov
mov
jb
pop
dec
int
cmp
mov
call
adc
popf
mov
sahf
lock
dec
ss
js
les
push
jmp
sbb
pop
sar
sub
lea
mov
lods
inc
sub
cli
ror
push
stos
push
cli
test
adc
pop
push
jno
xchg
push
inc
fcom
lahf
imul
repnz
pop
mov
cmp
leave
pushf
add
xchg
mov
pop
lahf
ja
test
pop
adc
nop
cld
fwait
scas
sbb
or
fisttp
les
mov
sub
pusha
lods
mov
int
(bad)
lahf
xor
push
and
dec
lahf
ins
or
mov
push
scas
adc
dec
xor
fnop
inc
lods
fisubr
(bad)
sbb
int
inc
dec
mov
add
xchg
push
push
(bad)
or
inc
imul
mov
aas
icebp
pop
cmp
xchg
ss
imul
es
and
adc
dec
pop
shl
dec
dec
xchg
leave
in
aas
or
cld
mov
sar
dec
(bad)
xchg
stos
push
jnp
retf
test
test
mov
ins
cli
push
dec
mov
ins
push
mov
(bad)
imul
call
in
xor
mov
inc
jp
jge
xor
pop
dec
retf
pop
mov
cmp
ds
jbe
xor
cwde
push
sub
fwait
ret
adc
xchg
mov
scas
mov
loope
inc
rcl
dec
xor
add
ret
ins
jp
push
and
and
(bad)
int
aam
loop
shr
mov
std
jnp
jmp
mov
jge
adc
push
(bad)
(bad)
jge
(bad)
das
outs
or
movs
xor
xchg
inc
lods
imul
and
adc
xor
push
daa
lock
and
or
jb
pop
loopne
inc
cmp
rcl
js
stc
mov
dec
xchg
movs
dec
outs
jno
and
inc
scas
fneni(8087
retf
(bad)
cmp
mov
mov
stc
push
jge
sbb
loope
ret
aad
push
jle
cmp
pop
fisubr
mov
test
out
push
pusha
pop
outs
outs
jo
pop
adc
xchg
jp
mov
mov
mov
das
adc
addr16
outs
jge
jno
or
cmc
in
retf
loope
jns
stos
pop
hlt
sbb
js
ja
iret
push
pushf
pop
mov
pop
mov
aaa
jne
ret
popa
stc
sbb
popf
fidivr
fwait
and
and
xchg
enter
or
cmp
pusha
cmp
jo
pop
daa
jp
aad
jg
add
jne
scas
mov
xchg
je
imul
and
shl
daa
cmp
and
ins
push
push
and
out
div
imul
mov
cdq
dec
je
imul
mov
cld
xchg
and
push
mov
into
jmp
cmp
repz
sub
(bad)
bound
int
test
jmp
loope
call
mov
test
sub
mov
aas
push
in
xchg
stos
and
xchg
popa
lea
mov
xor
aaa
call
pop
stc
bound
inc
pop
gs
xchg
and
rcl
cld
sub
in
adc
jmp
int
add
sahf
cld
push
cmp
mov
and
or
aad
loope
and
in
clc
xchg
int
in
sbb
test
fsub
add
sub
mov
call
jnp
inc
add
fiadd
push
(bad)
aaa
ret
fs
or
sub
xor
popf
xor
lods
mov
outs
push
fwait
scas
ret
movs
movs
sbb
or
(bad)
sub
sbb
xor
push
sbb
or
data16
sub
imul
inc
xor
pusha
addr16
(bad)
cs
sbb
movs
pop
nop
or
xor
cli
mov
imul
sub
pop
pop
test
pop
push
mov
arpl
push
test
jecxz
shr
lds
cmp
push
mov
pop
mov
(bad)
data16
pop
add
sbb
mov
les
jb
inc
and
mov
mov
popf
dec
mov
mov
mov
inc
xor
call
loop
push
imul
aaa
adc
(bad)
push
aam
dec
push
or
push
cmp
imul
int
jmp
jl
bnd
jae
rol
dec
mov
add
push
and
mov
mov
icebp
xchg
and
aad
dec
das
sbb
xchg
mov
jecxz
cmp
push
push
xchg
aam
cdq
fwait
ja
aaa
cmp
enter
jne
mov
rcl
add
xor
ds
shl
fisttp
mov
mov
scas
cmp
inc
leave
mov
imul
cwde
leave
and
test
xor
pop
xchg
xchg
cdq
add
cmp
(bad)
xchg
(bad)
xchg
sub
inc
pop
mov
call
adc
push
jae
test
std
sub
pop
pusha
outs
and
test
sti
push
fst
imul
and
jo
jle
in
dec
jne
cli
cmp
repnz
or
daa
(bad)
std
mov
and
pop
mov
xlat
test
xor
mov
je
call
test
daa
mov
add
xchg
aad
out
xchg
pop
out
pop
int
stos
int
popa
or
jp
sub
cld
fild
retf
mov
or
test
arpl
push
dec
adc
sbb
fld
test
sbb
jg
adc
cmovbe
jmp
cmp
jmp
xchg
mov
fnstsw
cmp
int3
dec
pushf
jle
add
mov
sub
mov
repz
or
xor
mov
push
mov
push
mov
inc
mov
pop
push
popa
fisub
sbb
pop
pop
jae
mov
clc
sub
mov
dec
xor
inc
fcomp
pop
sahf
inc
rcr
push
aam
sub
iret
test
or
clc
ficomp
ins
scas
arpl
es
sub
mov
loope
cmp
mov
stos
pop
cmps
lahf
pop
jg
mov
pop
xchg
pop
mov
mov
sbb
jae
aad
(bad)
and
int3
adc
push
mov
stc
jmp
push
sub
adc
sub
pop
xchg
mov
lea
sbb
sar
pop
xor
cmp
mov
mov
(bad)
je
shr
sbb
inc
jno
jg
cdq
sub
xor
lods
cmp
imul
sbb
out
add
adc
inc
mov
mov
sar
add
movs
dec
jb
cmp
jae
push
xchg
test
jmp
add
jmp
and
lds
mov
pop
rcr
int3
inc
inc
psubw
xor
xor
arpl
fldenv
leave
xchg
adc
hlt
loope
pop
call
je
dec
shl
sbb
inc
sbb
mov
mov
rcl
mov
pop
and
mov
jae
ja
adc
popf
scas
div
mov
hlt
mov
or
inc
adc
scas
cmps
aad
dec
fcmovnbe
push
cwde
mov
fistp
arpl
pop
loopne
mov
std
mov
es
into
mov
das
enter
add
xchg
je
and
cmp
fistp
dec
xchg
inc
test
inc
dec
xor
out
and
stc
jmp
rcl
jle
clc
or
adc
std
mov
inc
jge
add
outs
pusha
stos
sbb
nop
pavgb
pmaxub
xchg
test
pop
loopne
popa
pop
call
jno
mov
inc
shl
sar
cdq
rol
lea
adc
lods
loopne
loop
jecxz
mov
fidivr
sbb
test
retf
jecxz
inc
sbb
pushf
xchg
xor
adc
push
cmps
cmc
das
out
pusha
js
mov
in
jp
(bad)
movs
jp
enter
or
add
jecxz
sbb
in
xchg
dec
xor
aas
ret
xor
push
das
jg
jb
in
outs
pop
sbb
and
sar
fiadd
sub
inc
mov
dec
dec
ret
mov
test
rol
xor
inc
adc
sbb
les
test
rcr
adc
addr16
mov
dec
or
cld
nop
xor
out
mov
add
mov
sar
xchg
movs
bound
mov
inc
and
jmp
rcl
mov
div
or
das
je
add
cmc
mov
outs
rol
cmp
xchg
call
retf
stc
es
mov
jmp
mov
dec
std
js
add
mov
nop
ss
mov
jle
jb
cmp
enter
inc
cli
and
fs
adc
retf
sub
dec
xchg
rol
cmps
xor
sbb
jne
cmp
inc
into
push
cmp
jge
mov
cwde
sub
mov
int
inc
sub
cs
std
dec
stc
mov
inc
in
js
cmps
push
int
xchg
adc
jns
leave
outs
cmp
mov
test
mov
cmp
mov
(bad)
xchg
push
push
add
lahf
mov
adc
scas
ins
in
int
bound
ja
in
and
pop
icebp
sbb
push
addr16
dec
nop
dec
fisttp
lds
cmp
cwde
clc
pop
adc
bnd
jns
cmp
push
(bad)
and
or
xor
shr
ss
repz
and
and
pop
mov
jp
int3
xor
call
dec
mov
ss
enter
adc
inc
in
mov
mov
mov
pop
inc
dec
jb
jp
mov
cmp
lahf
scas
or
cmps
(bad)
aas
outs
mov
mov
and
outs
adc
xchg
jmp
jb
pop
sub
pop
(bad)
mov
mov
jle
imul
xchg
mov
test
jmp
test
shl
adc
xchg
dec
mov
mov
jmp
aas
xchg
mov
dec
sbb
cmp
std
movs
mov
or
pop
es
(bad)
ficomp
pop
addr16
movs
push
push
arpl
aad
or
mov
popf
mov
sti
sub
in
push
cmp
ja
icebp
shr
cli
xlat
mov
cmp
push
pop
mov
loopne
mov
inc
adc
mov
outs
clc
ret
cmp
xor
pop
ret
sbb
into
nop
test
inc
sbb
mov
je
mov
imul
lock
mov
loop
xchg
in
(bad)
or
and
push
scas
out
popf
push
inc
xchg
ja
(bad)
daa
cmps
sub
push
mov
mov
xchg
sbb
xchg
add
(bad)
pop
(bad)
pop
mov
dec
dec
mov
out
add
cmps
ds
shl
push
(bad)
inc
out
(bad)
and
pop
scas
arpl
inc
lds
add
iret
stos
retf
or
dec
mov
por
push
es
cli
sub
cld
sub
mov
jne
or
adc
dec
lock
mov
sub
jne
push
(bad)
dec
pop
test
mov
mov
jns
fwait
mov
jg
cmp
fwait
retf
data16
mov
sub
fwait
xchg
add
push
mov
gs
pop
mov
out
sbb
in
jl
and
jmp
push
xchg
push
sahf
sbb
push
mov
xor
pushf
inc
mov
or
xor
or
out
sbb
shl
fwait
jne
imul
ins
add
dec
fsub
push
push
popf
mov
jae
ret
pop
jle
jae
popf
jge
xchg
push
sbb
ficomp
push
mov
out
sub
in
das
mov
and
push
in
pop
inc
out
pop
stos
(bad)
data16
mov
mov
sbb
ins
dec
inc
lods
dec
mov
dec
out
and
adc
cmp
icebp
xor
inc
sub
outs
mov
out
dec
push
xor
xor
imul
cmp
xchg
sub
fwait
lods
pop
push
mov
test
and
pop
and
sahf
mov
sbb
out
sub
sbb
cmp
jne
cmp
xchg
add
add
cdq
repz
mov
dec
push
xchg
fs
or
nop
sbb
test
adc
mov
pop
mov
sahf
mov
leave
cmp
movs
push
push
or
sbb
dec
mov
pop
add
outs
imul
mov
clc
push
cmp
icebp
out
popa
xchg
hlt
lock
cmc
cmp
addr16
sbb
xor
scas
test
test
xchg
mov
and
cmps
(bad)
mov
aas
into
push
pop
(bad)
jle
or
test
add
imul
mul
(bad)
adc
inc
sub
test
ds
daa
dec
test
loope
jno
rol
cmp
(bad)
adc
jle
jne
ret
push
pop
and
add
push
pop
xor
stos
stos
push
xlat
inc
mov
hlt
ror
mov
cmp
outs
mov
outs
sbb
and
dec
rcl
cmp
push
jmp
and
(bad)
adc
xchg
loop
jmp
jle
sbb
push
shl
enter
f2xm1
adc
int3
fmul
mov
xchg
jb
or
jbe
idiv
bound
ds
jbe
adc
loop
call
stos
or
add
lods
xchg
lahf
sbb
mov
mov
pop
imul
leave
push
mov
push
mov
lods
sub
call
dec
imul
xchg
sbb
movs
test
cs
inc
and
and
cs
bound
ja
ficomp
push
cmc
stc
jne
mov
fidivr
pop
add
imul
cs
and
add
mov
jl
out
cmp
aas
pop
bound
gs
ds
mov
mov
mov
fstp
popa
into
cmc
sti
iret
pop
jp
sysenter
aam
xor
xchg
or
jp
and
mov
sbb
sub
pop
jmp
push
sbb
lods
sahf
cld
sbb
xchg
in
xor
mov
mov
gs
xchg
rcl
mov
mov
mov
and
movs
call
inc
cmps
shr
xor
fdiv
jae
pop
and
mov
addr16
sub
out
push
and
jg
and
jnp
aaa
nop
mov
push
dec
loopne
loopne
das
mov
and
and
ds
pop
push
fdivr
pop
add
ret
mov
inc
cmps
xchg
aad
sar
sub
mov
add
pop
into
pop
aam
xchg
mov
mov
cmp
adc
add
inc
mov
pop
jmp
in
das
sub
call
dec
in
cmp
addr16
mov
dec
fcmove
icebp
inc
les
in
fs
out
cmps
sbb
cmc
aam
(bad)
push
push
mov
call
aad
cwde
pusha
cmp
jnp
xor
inc
cmp
out
or
or
scas
ror
push
jmp
fistp
mov
popa
std
and
lods
les
lea
rcl
out
aaa
mov
call
(bad)
pop
push
xchg
pushf
pusha
movs
retf
int3
mov
add
popf
(bad)
fcmovb
jecxz
pop
popa
les
mov
add
push
mov
xchg
sbb
xchg
repz
sbb
pop
or
mov
imul
sar
fwait
ror
test
scas
and
cmp
js
les
test
mov
pop
sub
outs
push
pusha
sbb
out
lods
popa
mov
stc
sti
jb
inc
push
(bad)
fldenv
daa
lods
jmp
jns
mov
push
jb
xchg
popa
and
inc
scas
adc
xor
mov
xchg
inc
dec
sub
popa
aaa
pop
adc
jo
ret
pop
push
inc
jmp
sub
scas
xchg
scas
iret
and
shl
cmc
inc
push
pop
jl
pop
adc
shr
ret
and
icebp
mov
cmc
das
and
push
stos
mov
xlat
mov
repz
inc
(bad)
test
neg
mov
dec
fstp
ds
mov
push
(bad)
pop
mov
and
and
jne
inc
lea
cmp
push
rol
adc
mov
cdq
cmp
das
imul
jp
sbb
sbb
xor
inc
popf
sbb
add
sub
jne
jmp
cs
dec
scas
mov
cmp
mov
push
loope
or
ins
lods
jne
sub
adc
inc
out
dec
cmc
mov
sahf
test
push
xchg
rcr
rcr
mov
xor
outs
aaa
aaa
push
ja
gs
sahf
dec
jp
lahf
imul
mov
xor
aaa
pop
mov
dec
shl
mov
daa
out
stos
xchg
adc
aam
pop
pop
or
jg
mov
cmp
test
xchg
dec
sbb
mov
gs
je
mov
jg
arpl
sar
fcom
dec
push
cli
sub
imul
inc
call
nop
ja
ror
in
adc
xchg
into
enter
inc
icebp
ja
or
dec
cmps
imul
stc
add
repnz
retf
stc
cmps
scas
jmp
adc
mov
ret
jae
cmp
push
pop
imul
push
in
iret
adc
jg
aad
mov
sbb
out
outs
mov
mov
movs
push
imul
fsub
xlat
arpl
lds
fdivrp
jmp
enter
inc
sahf
dec
xchg
cmp
repz
pop
stos
adc
hlt
xchg
dec
xchg
shl
cwde
rol
popa
lds
test
pusha
pop
sbb
mov
adc
mov
jmp
inc
jne
mov
pop
push
inc
loop
and
inc
cmps
enter
shl
rcl
(bad)
jno
jne
outs
ja
push
mov
fs
push
mov
mov
mov
push
ficomp
push
sub
adc
xchg
jmp
mov
repz
jnp
cld
(bad)
mov
sbb
clc
cmp
lods
sub
lods
movs
fld
int
pop
not
rcl
imul
sar
or
push
shr
jns
inc
imul
or
out
in
fs
sub
add
test
mov
cmp
jg
loopne
mov
pop
push
out
loopne
jmp
pusha
inc
out
cli
xor
or
mov
xchg
sbb
mov
adc
dec
push
nop
cmp
push
jmp
xor
mov
sahf
arpl
lods
adc
jmp
and
cmc
push
or
sbb
jg
or
add
adc
mov
and
outs
iret
xchg
pop
jmp
mov
out
jbe
adc
leave
and
out
imul
sar
mov
dec
iret
xchg
jns
xor
fsubr
jmp
inc
and
lods
xlat
add
(bad)
cmp
loop
push
push
nop
pushf
push
leave
sbb
sar
sbb
jno
fsubrp
pop
loope
push
stos
loop
xor
movs
sub
aad
hlt
fcmove
(bad)
cmp
pop
in
test
gs
mov
sub
jns
(bad)
sar
stc
cmp
loopne
dec
xchg
pop
xlat
ret
lods
fstp
movs
pop
jns
loop
cld
jo
add
xchg
dec
cdq
fucomp
sbb
xchg
xor
dec
test
mov
cmp
dec
cwde
cmp
adc
aaa
daa
jecxz
fwait
jae
aas
aad
(bad)
cmp
inc
stc
in
arpl
add
jg
pop
pop
cli
sub
jb
mov
jmp
add
in
inc
out
dec
or
pop
dec
sub
sahf
outs
stos
in
cs
adc
jne
and
sub
cmp
fisubr
test
lock
sub
into
ror
mov
xchg
inc
sbb
inc
ins
clc
pop
das
push
hlt
adc
aam
or
pop
cmp
test
adc
add
fsubr
cmps
test
sbb
mov
mov
imul
arpl
mov
mov
and
xor
js
jno
ror
inc
test
mov
lods
into
push
repz
test
cmp
outs
mov
pop
int3
or
test
movs
or
sbb
and
mov
sub
mov
push
retf
jb
cmp
inc
mov
mov
gs
int
sub
ds
mov
mov
imul
mov
dec
in
ins
jmp
jns
cmps
dec
push
xlat
sub
push
mov
pop
outs
xor
sbb
jge
stos
cld
scas
xchg
sahf
in
shl
std
pusha
js
and
ret
cmps
test
arpl
in
call
jl
sbb
push
xor
nop
lahf
call
mov
ins
mov
(bad)
int3
imul
pop
cmp
(bad)
pusha
jle
lock
jecxz
dec
ja
jbe
fstp
or
sbb
jmp
and
or
push
loop
xlat
pop
outs
jb
ja
retf
in
inc
sub
retw
popa
xchg
xor
lahf
inc
pop
imul
sahf
lods
mov
push
push
mov
sbb
in
imul
shl
xor
(bad)
xor
xor
cmp
push
push
dec
adc
mov
sbb
das
pop
and
imul
sub
jecxz
leave
push
add
inc
inc
adc
movs
mov
rcr
ret
jno
inc
leave
bound
cmp
rcr
jo
dec
jmp
sub
movs
aas
push
fnstsw
mov
loope
mov
push
imul
xchg
call
sbb
test
jl
push
loope
scas
dec
mov
gs
hlt
xchg
xchg
or
mov
jae
cs
inc
jle
aad
xor
push
adc
jae
dec
push
mov
arpl
pusha
inc
sub
aad
mov
dec
mov
pop
and
pop
sub
jmp
imul
test
sub
sub
sbb
das
imul
add
imul
(bad)
fadd
mov
and
fcomp
mov
mov
imul
cs
jns
pop
int3
ret
push
cmp
sbb
jmp
movs
dec
push
sub
xor
lock
fcom
sub
les
mov
leave
shr
sub
movs
lods
outs
mov
push
idiv
call
mov
jnp
cmp
mov
xor
add
pop
aaa
xor
(bad)
lods
mov
pop
(bad)
cmp
dec
sar
ret
sbb
pop
xchg
outs
add
(bad)
fs
jmp
in
mov
fistp
mov
push
scas
or
sbb
clc
pop
je
sbb
dec
jno
shl
pusha
je
and
iret
xchg
cmp
add
clc
shl
mov
sub
imul
repz
push
call
add
inc
(bad)
and
hlt
addr16
dec
pop
adc
test
xor
mov
repnz
mov
retf
shr
jl
push
sub
push
add
js
xor
ss
adc
ror
stos
push
mov
fsub
sbb
retf
xchg
jg
push
and
pop
or
cmc
mov
pop
mov
mov
mov
or
mov
addr16
mov
js
cmps
or
lds
mov
sahf
sbb
lds
inc
cmp
fstp
push
xor
dec
xor
ss
jl
xchg
pop
pop
push
xor
sub
jns
jbe
test
aam
ss
sub
sub
xor
and
jbe
pop
dec
mov
and
mov
dec
mov
(bad)
out
and
dec
fwait
cmp
rcl
jg
test
mov
or
or
gs
cmps
loope
sub
jb
cwde
mov
jmp
mov
inc
ror
xchg
ret
fcmovnbe
std
in
fild
jne
sbb
mov
inc
jnp
dec
jno
mov
add
fidiv
adc
scas
cmps
enter
xstore-rng
cmps
shr
stos
scas
mov
jg
mov
push
test
pop
xchg
(bad)
push
in
dec
mov
sahf
sub
cmp
and
inc
add
pop
or
mov
jp
bnd
ins
jne
shl
pop
test
int3
cmps
sbb
jmp
out
pop
jmp
adc
mov
xlat
and
call
cmp
mov
shl
fs
mov
jbe
fnstsw
imul
pop
pop
cmp
rol
dec
jae
or
mov
add
push
and
dec
rcl
jno
push
stos
aam
addr16
or
(bad)
jns
push
xchg
stos
xor
js
sar
pop
push
and
sti
mov
repnz
push
leave
retf
in
les
rcr
shl
retf
jl
add
mov
pop
mov
sbb
add
sub
popf
mov
jmp
mov
mov
aas
(bad)
jg
out
movs
cmc
jnp
lods
sub
add
lea
mov
or
and
in
mov
rcr
jle
or
push
and
andnps
push
sbb
mov
test
lods
mov
sar
dec
pop
je
cmp
fsubr
cmps
jae
cmp
jb
pop
ins
xor
mov
xchg
(bad)
xor
and
xchg
arpl
pop
fdivr
add
clc
or
test
lods
cdq
fdivr
xor
out
and
int
and
jns
cmp
mov
sbb
pop
mov
xchg
retf
adc
mov
pop
add
cmp
dec
mov
adc
adc
lods
mul
cmps
ret
dec
jb
lods
push
cli
movs
cmp
ret
xor
fistp
xor
ret
nop
jno
and
call
or
ja
into
mov
mov
cli
add
mov
cmp
mov
ficomp
inc
int
mov
sub
mov
shr
fcom
sub
jmp
jbe
and
or
je
push
stos
mov
dec
jmp
imul
pop
es
jg
int
aam
(bad)
(bad)
std
fld
setl
inc
outs
push
mov
jmp
pushf
adc
ds
cmp
xor
jge
es
stos
mov
and
mov
sub
jle
ret
mov
push
popa
movs
and
call
dec
or
pop
cmp
mov
mov
push
add
push
in
adc
xchg
cmp
cmp
pop
push
scas
xor
pop
cmp
sbb
and
retf
pop
test
pushf
mov
ins
in
out
cmc
mov
sbb
mov
shl
adc
jne
inc
lods
inc
jge
jno
push
inc
sub
retf
pop
stos
mov
dec
mov
loopne
adc
mov
hlt
adc
aam
pop
jle
movs
xchg
push
mov
cmp
or
aam
in
in
xor
push
jmp
or
cs
push
(bad)
mov
push
add
iret
jecxz
mov
aaa
inc
mov
out
cmps
(bad)
(bad)
je
mov
mov
push
cld
pusha
scas
jmp
popa
aad
call
int3
fcomip
stos
int
xor
jmp
xchg
inc
dec
jns
jp
mov
in
cmp
dec
mov
(bad)
fwait
sub
pop
fadd
cmp
xchg
addr16
xchg
rcl
mov
pop
mov
sbb
mov
inc
or
jp
jo
adc
in
jmp
outs
add
retf
cld
ja
fnstsw
cmc
fisttp
repz
mov
mov
in
aas
and
mov
or
cmp
test
mov
mov
and
cs
pop
lea
cs
cmp
xchg
pop
out
(bad)
mov
and
scas
call
pop
in
sbb
cmps
hlt
sbb
bound
mov
out
jbe
inc
pop
cmp
sbb
je
in
lods
inc
inc
mov
shr
fstp
inc
inc
iret
xor
mov
clc
scas
and
jl
fwait
adc
dec
rol
lahf
ficom
mov
stos
in
fs
jae
jl
ret
add
or
bound
sbb
nop
or
cmp
jno
inc
int
xor
cmps
cld
adc
mov
mov
out
ret
iret
cmps
popf
xchg
xor
mov
add
repnz
pusha
fst
inc
data16
ja
ss
jne
shr
pop
das
cmp
shl
sbb
in
mov
pushf
and
(bad)
xor
shl
cld
xor
mov
pop
mov
scas
mov
outs
sbb
xor
aas
push
push
dec
fcom
push
dec
cmp
pusha
mov
lds
and
mov
pop
mov
inc
out
(bad)
jge
adc
sub
dec
int
out
add
int
test
mov
dec
sub
sbb
pop
ins
test
ficom
lock
inc
lods
std
test
mov
pop
add
mov
(bad)
das
push
cwde
(bad)
xor
sbb
adc
test
mov
adc
loope
shl
sub
lea
mov
mov
fwait
or
neg
adc
pop
jle
push
jbe
sbb
clc
or
mov
and
mov
and
jbe
or
cmc
scas
xchg
aam
rcr
jl
push
xchg
leave
xor
mov
pop
js
mov
pop
push
mul
idiv
mov
stos
hlt
jno
in
dec
gs
sub
inc
test
jns
and
sbb
aam
push
sbb
out
cmps
pop
push
ins
mov
pop
mov
pop
and
fdiv
add
sub
push
add
das
imul
data16
adc
and
es
jle
jae
into
cmp
push
in
push
sahf
cwde
mov
and
xlat
pop
push
dec
adc
push
inc
arpl
sbb
dec
ror
mov
inc
mov
call
push
sub
pop
gs
nop
dec
stos
mov
je
xor
push
sbb
cdq
xchg
cmp
or
or
mov
pop
fadd
cld
ins
dec
rol
cmps
add
xor
sbb
hlt
jnp
add
xchg
iret
inc
fidivr
loop
mov
out
jge
mov
fistp
mov
pop
cmps
add
push
xor
xor
gs
jmp
ret
push
stos
adc
das
outs
call
mov
xchg
xchg
ja
shr
stc
je
push
pop
jae
mov
ret
fwait
test
call
cmp
ret
mov
fld
loopne
fsub
xor
and
rol
cmc
or
xchg
movs
pusha
and
dec
imul
leave
out
jge
pop
pop
sub
sub
(bad)
loopne
ret
jp
ds
sub
sahf
mov
jmp
shr
mov
mov
push
in
mov
loopne
inc
xchg
movs
xor
aas
adc
or
push
dec
addr16
push
push
pop
add
dec
fistp
cmc
mov
test
fild
push
cld
mov
fxam
in
pop
cmp
push
xchg
adc
jbe
adc
gs
scas
stos
pop
in
pop
sub
sbb
aam
movs
int3
mov
and
push
call
jecxz
popf
hlt
(bad)
int
shl
dec
pop
mov
mov
call
(bad)
push
jns
ja
xor
xor
mov
jmp
mov
cmp
adc
mov
lods
fcom
adc
aad
sub
idiv
aam
mov
or
inc
mov
adc
sar
add
cmp
shr
rcr
add
and
ret
and
sub
sbb
shl
shl
mov
fs
mov
out
rol
and
or
call
mov
ficomp
ins
and
fst
pop
int3
jle
xchg
shl
inc
(bad)
or
out
jmp
adc
push
xchg
fistp
or
push
xchg
aam
int3
out
pop
mov
push
cmp
test
push
sub
add
leave
cmp
or
xchg
loope
add
pop
cmp
fwait
xor
aad
outs
ror
inc
mov
outs
xor
jnp
pusha
xor
into
mov
sub
jno
dec
sbb
mov
dec
sub
adc
xchg
push
adc
and
sbb
nop
shr
(bad)
data16
data16
mov
out
push
fbstp
dec
add
leave
sub
movs
dec
jmp
sbb
mov
mov
mov
outs
aad
pop
push
imul
int
dec
and
and
inc
adc
and
je
pusha
out
rcr
or
inc
dec
inc
jle
in
in
jns
test
jbe
leave
cs
cmp
addr16
std
lock
and
mov
dec
arpl
or
lods
mov
push
inc
or
in
(bad)
ret
sub
lds
dec
pusha
cmp
(bad)
in
ins
nop
inc
pop
jmp
xor
fs
cmc
loopne
jns
ins
imul
sub
xchg
lds
pop
mov
adc
cmp
mov
sbb
jnp
fdivrp
repnz
movs
(bad)
sub
in
js
jno
jle
mov
loop
and
fsubr
test
jmp
ins
repnz
rcr
pop
fbld
inc
je
hlt
xor
xchg
add
add
aad
gs
in
in
repz
int
dec
mov
in
int
test
imul
sub
scas
pop
cmp
movs
add
mov
test
jg
cmp
out
add
mov
inc
mov
adc
pop
jae
icebp
lods
fs
test
out
dec
pop
push
jae
push
ja
rcr
or
pop
loop
mov
mov
or
test
aad
fs
mov
mov
xchg
(bad)
aad
int3
and
sbb
clc
adc
push
add
scas
in
lods
mov
pop
mov
dec
add
je
into
jle
cmp
sbb
xor
rcl
in
jmp
retf
adc
or
mov
dec
aam
or
push
adc
cmps
inc
rol
adc
rol
int
push
lea
sahf
aaa
push
push
sbb
sub
popa
lea
or
pop
sti
pop
push
iret
aad
pop
call
ds
add
cmp
nop
mov
cmp
(bad)
int3
icebp
call
sub
or
pop
dec
data16
push
gs
mov
sahf
or
mov
push
dec
xor
dec
xor
int
fsub
aam
int
jge
popa
imul
cmp
test
fs
mov
xchg
daa
push
icebp
in
xor
imul
stos
mov
call
push
dec
sbb
mov
iret
lods
jnp
sub
ds
(bad)
sbb
xor
adc
add
out
call
or
jg
enter
xor
or
sub
ins
inc
xlat
lds
daa
bnd
fist
jae
jne
push
pop
lea
dec
pop
outs
push
test
mov
mov
(bad)
loope
dec
adc
fs
sub
push
popa
mov
jmp
ret
call
pop
das
test
(bad)
xor
(bad)
dec
push
(bad)
lock
mov
(bad)
xchg
mov
mov
or
push
and
push
out
les
mov
push
in
mov
call
repz
jns
inc
jbe
cs
sub
(bad)
fimul
xchg
dec
lea
pop
mov
in
jl
push
ds
out
out
cmp
sbb
pop
add
clc
mov
cdq
adc
mov
repz
push
jl
sar
push
mov
addr16
xlat
adc
xchg
ror
cdq
and
cmp
fwait
and
push
sub
movs
mov
xor
xchg
jbe
(bad)
jecxz
adc
adc
(bad)
mov
jbe
cmc
cmp
js
mov
repnz
sar
cmc
push
sbb
imul
and
push
dec
inc
pop
and
push
cli
inc
xchg
popa
add
cmp
add
es
jecxz
rcr
ins
(bad)
add
xlat
addr16
into
jno
pop
cwde
ror
aad
push
xchg
sub
pop
push
mov
loope
in
push
pushf
lods
js
cld
xchg
sbb
les
push
idiv
popa
lods
fimul
cmp
dec
and
and
dec
jge
dec
dec
pop
fcom
movs
pop
add
jne
addr16
jbe
lock
nop
loop
fs
sbb
jbe
mov
ja
mov
jno
and
loopne
push
mov
sbb
adc
sub
xchg
push
inc
popf
retf
retf
sbb
sbb
dec
mov
or
sub
enter
mov
mov
push
xchg
retf
out
push
dec
fsub
push
cmp
or
jmp
stos
lea
sbb
dec
stos
sub
test
adc
pushf
inc
popa
push
lods
mov
adc
stos
in
xchg
and
ret
adc
aam
test
(bad)
popf
add
xor
and
test
push
pop
and
fs
push
and
iret
jb
cmc
cli
xor
cld
jg
hlt
jno
push
inc
and
dec
not
enter
loop
dec
cmps
call
and
add
jl
add
mov
jmp
bound
rcr
sbb
mov
inc
aam
adc
imul
cmc
adc
cmp
dec
and
ret
sahf
dec
xor
inc
out
mov
cmp
mov
pop
sub
cmp
jg
push
jno
push
into
mov
push
lods
shl
aad
ins
popa
sti
xchg
mov
jmp
mov
(bad)
jb
inc
xchg
sub
shl
push
push
fild
add
shr
fwait
stos
dec
pop
jo
lds
retf
dec
inc
push
jb
mov
mov
jge
push
(bad)
jno
ror
test
cli
jns
int3
ror
(bad)
movs
pop
mov
jo
outs
jbe
test
pop
fnstenv
retf
dec
jmp
push
mov
movs
mov
xchg
or
pop
inc
push
mov
popf
push
pop
mov
adc
inc
sbb
not
fist
mov
in
push
ins
jl
clc
mov
mov
inc
mov
xchg
out
sti
inc
jae
dec
cs
xchg
dec
clc
mov
rol
(bad)
(bad)
out
xor
mov
and
jne
pushf
(bad)
pop
xor
retf
and
icebp
cwde
inc
iret
rcl
nop
dec
xchg
mov
sbb
xor
jb
aam
adc
mov
adc
hlt
jg
sub
xor
xlat
repnz
adc
pop
fcom
lds
xor
loope
mov
cmp
or
dec
push
(bad)
pop
mov
test
push
cmc
movs
std
mov
sbb
mov
inc
push
mov
add
fadd
sub
fs
xor
cld
cmp
lds
sbb
fild
and
jns
push
test
adc
icebp
dec
rcr
psllq
xor
rcl
or
cmp
ins
je
out
add
or
add
push
rcl
cmps
add
int
pop
and
or
sbb
dec
mov
xchg
lods
push
lods
mov
test
int3
imul
out
test
add
push
fst
xchg
jnp
scas
xor
mov
jbe
nop
xchg
pusha
out
test
sub
out
mov
or
fild
xchg
out
rcr
js
push
inc
aam
mov
(bad)
cmp
dec
enter
std
popa
push
outs
dec
push
clc
lods
or
cs
cmps
pop
repz
push
pop
jmp
or
or
cmp
fcmovnu
add
jp
fcom
push
(bad)
(bad)
div
xchg
fadd
add
outs
pop
mov
xor
jp
push
call
lea
jge
inc
mov
pushf
aad
arpl
aad
xor
cdq
mov
mov
js
cmps
int
push
arpl
movs
ja
ret
ja
and
adc
dec
fisttp
loop
cmp
ins
jmp
push
dec
nop
push
loop
test
fisub
test
neg
sub
pop
inc
fldcw
ret
nop
xchg
inc
jmp
lea
inc
ins
rol
loopne
cdq
sbb
inc
add
call
adc
iret
rcl
pop
mov
js
(bad)
imul
arpl
mov
cwde
in
pop
sbb
mov
clc
cmp
and
mov
movs
xor
mov
jb
retf
stos
gs
cld
mov
test
sbb
lds
jae
js
inc
pop
and
inc
mov
mov
(bad)
mov
dec
mov
xchg
test
dec
fsubr
popf
rcr
cmp
mov
lea
sub
mov
in
push
adc
inc
sub
mov
jns
dec
call
adc
rcl
mov
stos
adc
cs
pushf
test
push
cld
push
jno
jp
imul
and
rcl
or
pop
sub
mov
mov
scas
sbb
push
shl
fdivr
mov
repnz
adc
ds
or
inc
sbb
(bad)
leave
arpl
xor
popf
cli
xchg
cdq
retf
jae
push
adc
into
and
xchg
adc
stc
mov
popa
cmp
outs
ret
in
lahf
push
xchg
xchg
xor
sub
jp
push
xor
mov
or
int3
hlt
je
xor
add
cli
loop
je
cld
mov
std
scas
push
xchg
xchg
push
iret
sahf
push
xor
push
je
push
scas
mov
xor
xchg
push
or
or
jmp
or
inc
mov
jns
mov
fild
cmp
test
ror
dec
test
or
in
pop
outs
pop
sub
xchg
push
push
inc
movs
into
sub
xor
enter
int3
stc
xchg
inc
ss
les
addr16
retf
mov
and
mov
pminsw
test
hlt
jmp
and
adc
pop
out
clc
fs
addr16
add
out
ins
stmxcsr
imul
mov
loope
cmp
clc
es
call
dec
or
sbb
add
das
mov
lahf
sub
retf
ins
adc
loop
scas
scas
cmp
aad
mov
test
pop
pop
inc
mov
repnz
pop
mov
cdq
(bad)
adc
mov
sbb
mov
data16
jg
add
inc
inc
sbb
pop
mov
jmp
mov
push
jmp
std
inc
jp
pop
shl
pop
mov
adc
xchg
sub
sub
repnz
dec
xchg
mov
or
lea
out
popf
imul
pop
int3
lds
fnstsw
ret
aaa
popf
enter
mov
test
je
aam
xchg
inc
in
push
cmp
sub
fsqrt
mov
adc
adc
dec
mov
inc
xlat
aam
mov
hlt
cwde
hlt
xchg
rcl
jno
sbb
mov
inc
std
sbb
dec
push
jns
je
mov
lods
lods
test
mov
xchg
cmp
sahf
jmp
mov
lea
lods
leave
or
(bad)
(bad)
retf
mov
push
aas
ja
in
in
sub
adc
mov
mov
retf
ds
mov
rol
call
mov
fcomp
imul
xor
pusha
sub
sti
xchg
rol
mov
adc
rol
sbb
add
(bad)
in
lahf
xchg
mov
mov
adc
int
or
mov
loop
push
in
mov
aas
nop
add
cmp
cdq
dec
adc
pop
leave
fist
bound
push
arpl
ret
neg
shl
loope
push
call
jle
sbb
movs
push
push
sar
xchg
imul
movs
fnstsw
mov
dec
ss
xor
call
pop
std
out
push
cli
pop
stos
enter
xor
fsub
xor
xchg
inc
out
test
cmp
sbb
jb
xchg
daa
pop
pop
addr16
pusha
les
fidiv
inc
jmp
or
mov
mov
and
out
cmp
jo
jb
jo
popa
dec
test
shl
outs
push
(bad)
push
add
retf
rcl
stos
ret
stos
cmps
(bad)
sbb
pop
mov
add
pop
pop
aas
jl
xor
popf
(bad)
in
mov
adc
mov
outs
ret
xor
popf
fcom
sbb
adc
call
fistp
imul
(bad)
pop
jns
sub
inc
(bad)
cmc
push
sub
xchg
add
jmp
cmps
lahf
hlt
scas
sar
jmp
mov
lahf
shl
mov
jg
mov
pusha
and
(bad)
cli
cli
adc
enter
jge
call
push
sbb
leave
imul
les
jp
js
dec
push
bound
and
sub
arpl
pop
and
shr
inc
daa
cmp
sub
jo
mov
mov
dec
fstp
push
or
pop
and
xor
shr
mov
fisub
(bad)
cld
adc
(bad)
push
loopne
into
imul
dec
cs
pop
inc
xchg
icebp
jp
xor
(bad)
rcr
inc
xchg
push
mov
mov
xchg
inc
add
stos
dec
addr16
jle
retf
bound
push
rcl
xor
repnz
aas
pop
jg
or
pop
sbb
cmp
jecxz
cmps
xchg
xchg
pop
(bad)
fs
call
cld
mov
ret
outs
aam
popa
fld
xor
fcmovnbe
push
rsqrtps
mov
loop
call
jmp
test
ret
hlt
pop
sbb
cdq
stos
adc
ror
fwait
cld
stos
add
mov
cdq
xor
fucomip
stc
out
sub
(bad)
loop
(bad)
out
cmp
push
fwait
popf
pop
mov
int
std
cmp
adc
int3
cmovno
mov
stc
jp
jne
sbb
sbb
xor
shl
in
daa
stos
jmp
xchg
and
sub
xor
popa
push
mov
shl
pop
in
mov
fistp
mov
test
into
dec
mov
cmps
cmps
jae
aaa
sub
stos
adc
sbb
sbb
scas
repnz
xchg
inc
stc
cmps
push
jnp
pop
lds
jle
inc
cmp
jle
test
test
inc
fcomi
sub
pushf
aam
(bad)
mov
bound
(bad)
fwait
dec
cmp
dec
cmps
dec
repz
dec
repz
inc
test
(bad)
dec
lahf
mov
test
jge
in
frstor
into
jmp
(bad)
cs
ss
cmp
fdivr
rol
lds
iret
or
addr16
stos
cdq
pushf
ror
cmp
out
pusha
dec
popa
xchg
mov
mov
mov
rcl
xlat
mov
xchg
sub
outs
xor
mov
sub
fs
popf
mov
test
cmp
xor
or
clc
scas
sbb
outs
in
mov
repnz
popa
in
out
pop
mov
add
xor
enter
adc
(bad)
cli
lea
pcmpeqd
mov
pop
mov
mov
bound
(bad)
push
xchg
pop
js
retf
arpl
pcmpeqb
cwde
(bad)
mov
and
fwait
call
adc
aad
test
test
sub
addr16
xchg
stos
lea
dec
cmc
mov
inc
or
icebp
sub
inc
or
jge
mov
or
lea
push
jns
(bad)
adc
aaa
in
push
popa
adc
cmp
cwde
int
pop
jmp
jae
ins
das
xchg
lea
cli
sahf
inc
repnz
enter
aaa
sub
mov
hlt
ins
sub
popa
loopne
ins
xchg
mov
jmp
(bad)
popf
(bad)
lahf
fild
mov
pop
rcr
push
inc
add
arpl
cmc
mov
sub
dec
mov
mov
popa
ret
lea
sbb
imul
mov
call
lock
pop
fild
xchg
out
movs
jne
pop
lahf
mov
rol
inc
test
les
ret
ins
inc
xor
aam
push
cld
push
(bad)
jmp
xchg
adc
cmp
inc
ret
sbb
xchg
outs
idiv
retf
mov
pop
inc
cmp
scas
fist
adc
jmp
mov
call
sbb
ret
mov
arpl
add
mov
rol
lods
lea
cmp
push
sbb
xor
nop
dec
js
cmp
push
xor
out
adc
mov
cmp
jmp
add
mov
lods
pop
push
jl
jg
test
jnp
xchg
hlt
sbb
pop
mov
test
cmp
ins
cmp
mov
fistp
dec
mov
xor
out
pop
push
stos
mov
mov
pop
add
push
retf
or
add
loope
(bad)
mov
adc
test
clc
xchg
stc
xor
xchg
out
dec
inc
ficom
sahf
cld
ins
fiadd
inc
xchg
push
idiv
movs
arpl
cmp
ret
icebp
addr16
data16
mov
dec
and
aam
mov
or
mov
dec
push
add
fdiv
and
xor
pop
sbb
dec
push
in
sub
mov
adc
adc
in
call
dec
popf
movs
repnz
test
in
vaddsd
aam
jnp
icebp
adc
add
add
add
test
jg
cmp
push
out
popf
in
or
in
add
loop
mov
fsub
(bad)
rol
add
and
or
dec
pop
inc
fstp
cmps
xchg
(bad)
fld
loope
imul
mov
dec
loope
and
xor
clc
jge
jg
jbe
inc
addr16
jg
cli
or
movs
lock
sub
inc
ret
xor
sub
fcmovnb
imul
jmp
mov
mov
mov
scas
popf
or
mov
sub
iret
rcr
sbb
cmc
lods
stc
pop
movs
mov
sbb
push
int
fsub
sub
push
aaa
(bad)
lods
jb
into
cmps
int3
aam
(bad)
cmp
sbb
xor
push
into
or
xor
pop
xor
ficom
cs
and
loop
jl
ss
stos
sub
cmp
adc
mov
outs
fmul
sbb
sbb
clc
sbb
or
add
mov
stos
stos
pop
(bad)
dec
adc
test
jle
mov
dec
out
std
jae
out
inc
push
addr16
pop
or
push
nop
push
mov
mov
xchg
mov
cmp
stc
xor
mov
sub
ins
xor
fmul
and
mov
xchg
jae
mov
fs
jp
xor
stos
push
pushf
and
cld
cmp
retf
pop
pop
repz
shl
pop
cmp
ss
(bad)
jp
stc
xor
xlat
inc
xchg
xchg
test
jae
call
push
push
popf
dec
outs
shl
mov
std
out
fs
xor
fs
add
repz
dec
ja
mov
stos
dec
xor
data16
pop
cmps
dec
ficomp
pop
xchg
(bad)
out
jnp
(bad)
mov
test
js
rcl
dec
mov
cmp
sahf
jle
sbb
mov
mov
pop
sar
mov
dec
aam
xor
pop
(bad)
fild
div
(bad)
inc
mul
outs
xor
mov
sbb
sub
inc
or
outs
sahf
fs
retf
out
sbb
repz
fiadd
jle
es
sti
inc
and
jmp
inc
out
loop
cdq
add
and
jge
lods
cwde
mov
mov
push
add
push
add
xchg
cmp
stos
push
jg
stos
repnz
and
dec
jo
fcom
js
test
adc
nop
sbb
xor
dec
mov
jae
pop
popa
add
repz
test
pop
sub
aad
cmps
test
or
jle
mov
jno
xlat
stos
outs
mov
xchg
pop
sbb
test
in
pop
fcomp
stc
fwait
xor
inc
movs
aad
outs
dec
cmps
cmp
lahf
ficomp
dec
das
xor
es
fdivrp
inc
loopne
jne
fwait
inc
inc
dec
xor
push
adc
pop
fwait
xchg
fdivr
adc
data16
mov
mov
(bad)
popa
mov
pop
fist
sti
inc
mov
pushf
inc
scas
push
scas
sbb
cmps
add
and
adc
pop
pop
cmp
dec
out
(bad)
cmps
or
mov
repnz
cwde
nop
fdiv
pop
jl
xchg
push
and
loop
xor
bound
jecxz
out
push
mov
adc
nop
adc
lahf
xchg
jl
lods
movs
outs
ss
js
test
lods
mov
jmp
ror
pushf
and
stos
cmp
dec
cmp
push
or
jg
jle
xor
jnp
xchg
adc
push
inc
inc
out
jp
xor
test
test
and
pop
js
test
popa
push
jp
sub
movs
xor
adc
shl
add
xchg
xchg
jge
sar
adc
and
cmp
ficomp
push
jae
ins
jecxz
adc
popf
lods
out
mov
push
aam
inc
test
xchg
sub
dec
jmp
shr
fdiv
mov
xchg
add
add
inc
cs
adc
sub
int
xor
fs
clc
xchg
bound
or
shl
loopne
jbe
push
jg
retf
jno
pop
neg
pusha
pslld
inc
rcr
sar
push
mov
mov
mov
scas
cmps
fwait
addr16
std
jecxz
lds
and
add
loop
mov
jp
mov
ins
sbb
pop
mov
or
push
lea
cmp
xchg
mov
dec
dec
aaa
adc
push
in
jo
stos
dec
mov
jae
pop
mov
xlat
mov
addr16
pslld
or
mov
or
lea
mov
ja
or
lods
lahf
cdq
push
cmp
outs
dec
(bad)
xchg
(bad)
(bad)
imul
loop
rcr
mov
add
cdq
mov
cmp
pop
mov
imul
mov
mov
inc
and
or
fcmovne
loopne
ins
movs
fstp
pop
jl
adc
aam
(bad)
cld
or
or
sbb
lahf
push
xchg
dec
or
in
lea
(bad)
shl
out
data16
pushf
ror
daa
xchg
inc
stc
jge
jo
and
adc
xchg
cmps
fcmovne
xchg
stos
inc
call
jno
add
sub
(bad)
xor
ins
push
into
cli
or
jne
jp
int3
ins
loopne
sub
fidiv
hlt
sar
ins
fsubr
inc
add
icebp
and
(bad)
out
(bad)
and
sahf
sub
pop
inc
cli
shl
dec
adc
push
sub
clc
int3
nop
int
loopne
call
les
ins
call
inc
cmp
and
cmp
jmp
xor
fsub
mov
nop
adc
in
jbe
mov
out
sbb
outs
mov
xor
xor
ins
or
leave
push
addr16
in
pusha
fcom
cmp
adc
leave
pop
push
push
add
adc
or
xor
push
seto
jns
jb
lods
dec
inc
ret
in
ret
ins
ja
ins
int
and
mov
in
mov
call
loopne
adc
mov
scas
(bad)
mov
or
stc
sbb
stc
jbe
jmp
dec
mov
das
fdivr
jecxz
sub
cmp
cmp
add
jl
mov
test
xor
mov
mov
adc
(bad)
jg
pop
icebp
inc
sub
(bad)
jnp
retf
int
jl
push
pop
ja
scas
lock
jne
into
aaa
lods
mov
fst
and
pushf
inc
push
test
ret
fcomp
and
add
inc
repnz
or
xchg
sbb
or
aas
sbb
dec
cld
scas
stc
xchg
mov
cmp
sub
rcr
(bad)
cs
jae
mov
retf
and
in
inc
hlt
imul
cmp
rol
pop
int
dec
enter
fst
sub
fs
out
or
push
dec
dec
xchg
out
fst
daa
imul
mov
xor
mov
fstp
fcomp
retf
jbe
scas
sub
(bad)
call
inc
push
loope
and
sti
inc
sar
data16
jbe
cmp
and
mov
mov
jle
mov
(bad)
je
loopne
xor
sbb
and
into
or
xchg
sub
inc
(bad)
cwde
push
inc
call
clc
imul
mov
adc
mov
enter
mov
iret
and
pop
sbb
loope
jp
sub
mov
ins
mov
cld
sub
outs
dec
push
mov
and
repz
xchg
test
ror
scas
or
dec
and
rcr
ds
cld
adc
retf
add
test
cmp
repnz
adc
cli
inc
cmp
aaa
clc
fcmovnb
push
push
cmps
sub
cmp
dec
(bad)
xor
(bad)
mov
push
bound
mov
jmp
sub
push
xor
pop
and
jnp
mov
idiv
xor
and
xchg
popa
loop
rcr
rcr
into
xchg
pop
outs
cmps
loop
fsub
jo
int
jnp
or
push
popa
cld
mov
cmp
mov
lds
xchg
in
int
bnd
push
xchg
mov
xor
pop
cs
or
xchg
fisubr
push
dec
or
mov
vpackuswb
dec
jmp
(bad)
jecxz
jecxz
sbb
mov
pop
mov
mov
loope
dec
and
jne
sbb
jg
sar
sbb
push
addr16
popa
or
out
adc
sub
sub
pop
pop
stos
pusha
addr16
jp
scas
pop
sub
jg
mov
retf
es
fbstp
push
ins
jecxz
js
les
inc
js
sub
mov
cmp
xchg
or
lock
inc
jecxz
or
mov
cmp
je
arpl
pushf
ret
ins
jp
icebp
push
retf
icebp
xor
pop
call
pop
or
jl
fsub
test
inc
ss
in
sbb
mov
dec
add
inc
adc
test
and
inc
das
xchg
cli
out
repnz
test
int
stc
sub
cmps
(bad)
fwait
stc
jne
push
pop
sbb
jmp
dec
cli
inc
ror
push
mov
push
pop
in
xor
add
xor
push
ret
rcr
ret
xchg
icebp
adc
inc
push
(bad)
sbb
jmp
xchg
loop
jmp
jle
call
outs
std
shr
std
lods
popa
mov
sti
call
jmp
or
fsubr
jno
js
xchg
test
cmp
sub
paddd
test
test
or
test
dec
mov
mov
stc
sbb
inc
into
movlps
sbb
xchg
cld
pop
jmp
outs
mov
std
or
iret
mov
sbb
mov
(bad)
push
xchg
pop
push
xor
mov
gs
movs
repz
cmc
shl
mov
sbb
bound
test
jns
out
popf
(bad)
mov
ja
retf
jge
daa
or
cmps
in
test
(bad)
mov
mov
push
dec
inc
or
and
dec
jge
push
shr
aam
std
mov
cmp
fld
sbb
test
leave
cmp
xor
add
hlt
cmps
cmp
adc
sub
cmc
xor
sub
dec
aam
jp
dec
call
push
dec
push
std
ins
add
enter
mov
addr16
inc
or
leave
adc
or
les
(bad)
mov
fwait
outs
cwde
rcr
arpl
ror
out
movs
mov
xor
xchg
vpmacssdql
scas
mov
mov
(bad)
loop
outs
sbb
or
ror
xor
(bad)
int3
add
cmp
mov
call
out
(bad)
xchg
cmp
mov
cmp
mov
dec
inc
or
lock
mov
xchg
jp
lahf
jno
adc
cmp
mov
cmp
inc
pop
stos
in
(bad)
cli
dec
stos
dec
cld
daa
cdq
out
inc
dec
cmp
push
rol
dec
call
and
imul
cmp
xchg
inc
(bad)
push
inc
xchg
adc
addr16
scas
mov
jb
vpsubq
dec
add
lahf
jmp
nop
pop
dec
adc
std
data16
iret
into
test
sbb
rol
xchg
es
hlt
into
rcl
sbb
xor
mov
mov
add
scas
fwait
nop
in
mov
and
imul
sub
adc
and
les
call
or
mov
add
ret
movs
stos
ja
test
cmp
jg
clc
int
nop
sub
pusha
jmp
dec
stc
jmp
ja
cmps
gs
out
ins
fwait
jmp
push
aaa
inc
mov
mov
pop
mov
not
pop
xor
in
popf
mov
mov
fs
fild
leave
pop
scas
and
jl
mov
pmuludq
sbb
out
fcmovnu
mov
lods
out
pop
out
test
or
or
mov
nop
jo
cmp
(bad)
imul
popa
sub
xchg
(bad)
jns
or
std
cmp
imul
pop
hlt
jmp
rol
push
in
fwait
push
(bad)
imul
out
shr
stos
pop
xor
mov
and
pushf
inc
cmp
jo
mov
retf
jle
scas
lods
leave
or
idiv
jae
sbb
pusha
pushf
jo
push
test
imul
sub
jne
ins
imul
ins
std
mov
mov
shr
js
(bad)
jp
int3
retf
(bad)
sub
hlt
cdq
mov
fbstp
jnp
dec
dec
sub
scas
stos
jbe
jno
jmp
jns
jne
push
fild
pop
bound
scas
push
in
daa
stc
movs
test
fadd
push
arpl
jecxz
bnd
jmp
mov
sbb
scas
mov
dec
movs
loopne
push
xlat
aaa
pop
jnp
das
inc
pop
sbb
adc
jecxz
mov
rcr
or
inc
fdivr
push
(bad)
pop
sar
int
mov
xchg
adc
pop
xchg
push
imul
test
push
adc
cmps
dec
sar
(bad)
ins
stos
pop
inc
push
mov
js
imul
lods
es
push
pop
setge
and
add
xor
movs
inc
dec
mov
ss
adc
mov
mov
add
xchg
std
mov
sbb
jae
add
ja
pop
and
lods
pop
ret
sub
pop
in
(bad)
dec
push
leave
xlat
inc
test
or
cmp
xchg
pop
jnp
scas
inc
push
inc
out
xor
mov
and
or
pop
in
jge
adc
loope
addr16
imul
mov
pop
and
mov
repz
popf
push
repnz
test
adc
xchg
mov
(bad)
inc
mov
add
sbb
add
popf
fdivrp
dec
and
and
ror
add
out
push
imul
push
int
xor
shl
push
inc
cmp
push
dec
jno
repz
cdq
test
cmp
add
ds
xchg
jns
pushf
sbb
ss
jle
call
test
out
lds
out
push
add
xchg
pop
dec
pop
pop
in
gs
call
push
lods
sbb
out
pushf
daa
test
movs
pshufw
mov
mov
stos
nop
cmp
pop
ret
sub
hlt
stos
call
jns
punpckhdq
les
adc
or
leave
xchg
mov
mov
pop
push
pop
sub
push
push
gs
neg
out
adc
(bad)
mov
sbb
pop
fild
sub
push
ret
rcr
push
daa
fmul
push
stos
sub
fist
outs
push
sbb
mov
leave
and
xlat
mov
pop
rol
clc
aaa
adc
mov
les
outs
scas
mov
jp
aas
aaa
xchg
cmp
mov
mul
xor
mov
pop
xor
or
fwait
dec
adc
(bad)
mov
shl
cdq
shl
jmp
inc
rdmsr
(bad)
and
(bad)
gs
push
jecxz
add
cmps
bnd
mov
test
pop
loope
jmp
mov
sbb
xlat
outs
mov
outs
mov
mov
cmps
int3
adc
xlat
jle
bound
daa
sbb
and
cmc
icebp
mov
lds
push
dec
push
outs
sbb
pushf
aam
pop
and
(bad)
(bad)
cmc
xor
sub
aas
dec
jno
xchg
lea
(bad)
retf
or
mov
test
xchg
lods
push
xchg
int3
shl
popa
popa
sbb
retf
cli
sub
jo
adc
out
cmp
(bad)
cmps
mov
iret
addr16
sbb
push
in
adc
imul
or
push
cld
adc
in
cmps
dec
movs
lea
or
fs
mov
iret
jl
mov
stos
sbb
xlat
pop
add
jecxz
sub
jecxz
jbe
in
stos
stos
(bad)
int3
(bad)
or
adc
es
sub
(bad)
cmc
mov
outs
xor
not
cmp
mov
xor
outs
dec
dec
cwde
pusha
out
pop
cwde
shl
test
imul
sahf
jp
mov
xor
mov
cmc
or
in
push
sbb
scas
adc
add
sahf
(bad)
fimul
jp
enter
movs
sar
cmp
loop
stos
(bad)
xchg
lods
aaa
jnp
fistp
adc
(bad)
xor
aam
in
mov
les
loopne
inc
mov
mov
jnp
or
fscale
pusha
cmc
outs
or
adc
adc
out
mov
pop
or
dec
sbb
shl
ret
ins
or
sbb
add
shr
xor
jb
push
add
xor
pop
jno
dec
sub
div
mov
cwde
mov
mov
xor
inc
sub
repnz
push
sbb
call
cmp
cmp
mov
sbb
dec
xor
jmp
bound
mov
xchg
in
stos
call
jmp
iret
jmp
mov
rcr
xchg
dec
loop
popa
in
add
xchg
cmp
hlt
sub
ret
je
or
repz
and
mov
dec
xor
cmp
test
out
dec
jmp
rcr
sub
sub
sub
loopne
push
inc
push
pop
sbb
dec
ret
into
jb
mov
rcl
adc
stos
jg
sti
inc
add
push
ret
cli
dec
mov
rcr
mov
push
push
test
and
adc
mov
and
add
xchg
ret
and
sar
dec
inc
cmc
mov
cli
adc
dec
xor
push
mov
jp
sub
js
or
dec
iret
fcomp
push
cld
sub
xor
fsubr
aas
imul
rcl
jecxz
popf
dec
mov
shl
mov
mov
call
jo
pop
(bad)
lea
pop
mov
mov
xchg
fld
jae
jae
sub
xor
fdiv
lods
repnz
xor
neg
jbe
jmp
mov
hlt
inc
lock
pop
add
jo
int
or
scas
jmp
movs
sahf
ficom
xchg
jb
xor
push
lds
loop
ins
jo
retf
sbb
stos
nop
xchg
jnp
cwde
dec
sbb
test
pushf
stos
ss
push
mov
call
sbb
xor
pop
mov
add
sti
ja
add
mov
cmc
mov
mov
xor
mov
push
clc
jmp
aad
inc
loope
enter
addr16
lea
ficomp
fist
rol
pop
mov
push
icebp
or
shl
push
test
push
test
stos
shl
xchg
inc
inc
add
mov
jmp
sub
mov
stos
push
rcl
mov
pop
clc
adc
jne
daa
dec
aad
pushf
push
(bad)
xor
out
jne
xchg
sub
xchg
outs
lahf
inc
pop
jle
stc
into
cmps
imul
pop
out
jl
jmp
fwait
xchg
lock
lea
pop
cmp
sbb
pop
jmp
mov
dec
call
cld
pop
outs
and
xor
ret
call
inc
dec
stc
in
sub
cmps
lods
mov
mov
in
mov
arpl
dec
pop
adc
jbe
and
test
leave
cdq
pop
out
cmp
cmovbe
xor
mov
cmp
xlat
inc
fisub
inc
jg
lods
ret
dec
pop
xor
loope
push
loop
loopne
pushf
inc
in
mov
movs
(bad)
cdq
pop
mov
adc
cmp
push
ror
stos
ret
dec
test
(bad)
mov
cdq
jmp
popf
push
xor
jp
test
mov
mov
pop
jne
cmp
test
cmps
test
in
pusha
popa
test
lds
xlat
das
mov
xchg
rcr
xchg
ins
fimul
cmc
and
test
sbb
cmps
push
ins
cs
js
jnp
mov
test
enter
pop
xor
stc
dec
xchg
hlt
out
xchg
loope
lahf
push
dec
(bad)
pushf
adc
or
dec
or
adc
mov
xlat
fadd
in
or
and
in
shl
push
add
test
lods
or
mov
in
daa
loop
repz
pop
inc
outs
(bad)
loopne
(bad)
lods
std
iret
mov
test
jmp
iret
ret
or
inc
pop
movs
or
je
loop
or
jge
inc
in
scas
in
adc
fisttp
movs
jae
dec
leave
xchg
xor
pusha
mov
sbb
scas
js
dec
mov
push
daa
push
push
dec
push
xchg
movs
sbb
mov
icebp
jl
(bad)
fdiv
dec
xor
mov
test
pop
push
sti
mov
enter
fcom
sbb
jo
jmp
add
ror
inc
and
cld
xchg
rcr
add
stc
ret
inc
mov
scas
retf
push
xlat
xor
mov
or
outs
mov
sub
mov
xchg
fs
out
(bad)
leave
push
leave
mov
das
ins
fbld
mov
xchg
sub
xor
ror
pop
push
mov
jmp
sbb
jmp
mov
lea
push
repnz
mov
xchg
ror
jb
xor
dec
mov
(bad)
cld
aad
mov
sub
push
icebp
lods
mov
and
cwde
cmp
(bad)
out
or
je
xchg
xchg
sbb
cdq
jno
scas
push
lock
imul
loop
jl
add
(bad)
jmp
aam
push
dec
mov
daa
clc
or
and
adc
and
cdq
sbb
arpl
mov
out
cwde
and
jg
pop
push
pop
pop
aam
ja
and
push
test
mov
jae
in
daa
ret
cmps
add
xchg
mov
dec
cmp
out
fiadd
or
icebp
push
xor
les
test
ret
xchg
(bad)
cmc
lds
(bad)
iret
add
sub
inc
pop
fistp
mov
inc
pusha
cld
jnp
fwait
test
fst
add
adc
fdivr
xchg
or
popf
inc
aad
inc
jmp
pop
repnz
jbe
arpl
cld
push
rol
aad
mov
or
cmc
repz
int
outs
fmul
les
fs
push
(bad)
and
xchg
adc
arpl
in
retf
sub
sbb
ret
sub
es
cli
mov
mov
jno
imul
xor
inc
fisubr
aaa
adc
and
sbb
mov
push
or
pop
test
call
stc
(bad)
lods
dec
jmp
xor
cmps
or
paddd
jbe
movs
test
arpl
shl
push
cmc
in
fwait
sub
test
or
or
xor
cld
mov
loopne
mov
lods
add
nop
mov
outs
mov
push
push
jge
mov
mov
movs
pop
(bad)
movs
dec
test
ja
outs
and
ds
jecxz
push
out
push
outs
ja
mov
add
push
or
std
(bad)
mov
pop
stc
push
mov
loop
(bad)
(bad)
imul
popf
call
sar
or
mov
stos
stos
fild
adc
adc
fwait
nop
movs
pop
leave
retf
aaa
xlat
jle
in
mov
loope
sub
aam
sahf
mov
adc
xor
aad
loope
push
sbb
sbb
cmc
fdivrp
inc
(bad)
jg
pop
xor
ss
gs
inc
and
add
clc
cvtpi2ps
sub
test
jg
add
fsub
and
push
xchg
leave
cs
mov
test
ds
jmp
cmp
xchg
popa
and
jecxz
hlt
outs
dec
jmp
and
ins
addr16
jae
sub
leave
adc
sbb
call
pop
adc
add
out
jecxz
mov
adc
dec
xor
adc
adc
mov
test
pop
sub
imul
or
push
nop
push
cmps
jg
iret
fadd
xchg
sub
std
xor
enterw
xchg
cld
das
(bad)
(bad)
jb
jp
test
pop
in
fnstenv
mov
jge
push
xchg
lea
cli
and
inc
mov
mov
(bad)
fmul
jmp
mov
mov
(bad)
ret
sbb
xor
bound
cmp
and
out
and
scas
xchg
fwait
ret
test
jecxz
imul
add
jecxz
jl
xor
sbb
mov
pop
mov
inc
dec
int
ja
dec
sbb
into
aas
cmp
xchg
jmp
inc
and
add
retf
fild
iret
pop
xchg
rol
pop
div
or
(bad)
pop
cwde
lock
xor
shr
mov
push
add
fldenv
sub
cld
lahf
aad
(bad)
cdq
push
stos
lahf
push
xchg
fcmovne
stc
push
lahf
xor
mov
stc
int
or
repnz
test
mov
push
fwait
bound
je
push
jg
push
push
xchg
sbb
push
in
sub
cmps
addr16
xlat
mov
daa
cmc
xchg
fistp
push
sub
and
mov
sar
xchg
push
push
jge
loope
push
push
add
push
dec
gs
mov
hlt
ja
pop
xlat
add
pop
mov
ficom
imul
lds
mov
xchg
lods
ret
lea
fnstsw
sbb
mov
in
xchg
push
(bad)
sub
lahf
shr
repz
mov
inc
adc
sbb
adc
dec
das
clc
stos
jno
inc
adc
fst
adc
sub
ret
adc
push
test
jecxz
fpatan
test
or
test
pop
jbe
jp
jne
xchg
lock
push
pop
adc
jecxz
sbb
sbb
jmp
xchg
xor
imul
mov
cli
(bad)
adc
and
push
push
popf
dec
add
shl
(bad)
retf
into
iret
fisubr
mov
inc
add
mov
sbb
inc
or
mov
(bad)
xor
sbb
ins
(bad)
(bad)
scas
push
ins
imul
or
call
lahf
(bad)
adc
cs
mov
jecxz
loopne
ret
mov
ficomp
std
xor
xor
shl
ret
call
cwde
or
fmul
mov
mov
xchg
sub
add
push
cdq
or
or
xlat
and
inc
xchg
je
adc
mov
adc
sub
jno
mov
sti
xchg
cli
mov
lods
jl
sub
or
xlat
ret
leave
call
in
pop
sar
sub
outs
(bad)
in
in
hlt
sub
xchg
movs
xor
mov
and
cmp
loopne
sbb
mov
pushf
adc
push
jle
add
pop
inc
daa
or
mov
mov
pop
(bad)
int
(bad)
inc
and
sbb
idiv
ret
stos
dec
push
xor
jo
adc
ins
ret
push
aaa
pop
push
pmaxub
mov
ret
inc
out
pop
mov
jecxz
xor
movs
adc
iret
(bad)
pop
and
into
adc
int3
leave
sub
adc
mov
fmul
int3
sbb
repz
dec
inc
and
xchg
xchg
or
(bad)
adc
(bad)
cmp
cli
leave
xchg
jnp
jnp
leave
xor
inc
fisub
sub
test
jae
aam
ficom
pop
mov
adc
or
call
popa
lods
fist
dec
cmps
retf
xor
pop
mov
jecxz
fdiv
adc
cmc
inc
or
aam
ja
mov
fisubr
out
or
pop
sub
jecxz
mov
sbb
mov
(bad)
imul
sti
jmp
jmp
cdq
les
in
arpl
js
ins
mov
mov
mov
lods
pop
xor
xor
scas
mov
cmps
cmovne
xchg
mov
sti
push
out
lock
pop
ret
pop
repnz
leave
nop
sahf
shr
sub
jno
int3
aaa
inc
fimul
fnstsw
cmp
lahf
and
cmc
add
add
aad
std
push
aaa
jae
stos
sbb
add
retf
jmp
pop
or
daa
mov
popa
push
call
or
adc
shr
lods
jecxz
sub
xchg
int
inc
and
sub
adc
sbb
jp
inc
div
jecxz
push
pop
add
iret
mov
loope
inc
ins
(bad)
aad
xchg
dec
mov
(bad)
int
and
shr
imul
iret
mov
pop
out
xchg
pop
mov
and
pop
pop
rol
ins
enter
dec
rcl
hlt
fild
or
gs
ins
inc
and
and
add
xor
mov
cli
jmp
mov
cs
add
jno
pop
push
jno
xor
cmps
adc
daa
gs
lahf
enter
outs
(bad)
inc
ins
aam
(bad)
and
mov
jb
add
and
push
(bad)
repnz
pusha
js
push
popf
inc
aas
inc
inc
mov
xor
fld
repnz
scas
iret
(bad)
aad
mov
push
jg
pop
push
jp
sti
mov
enter
pop
cmp
pop
jp
rcr
imul
ja
imul
dec
inc
push
pop
or
pop
dec
pop
xchg
or
(bad)
std
cmp
test
and
push
gs
xchg
fld
out
test
xchg
xchg
aam
cmp
push
sub
icebp
push
xchg
inc
mov
hlt
and
inc
nop
mov
out
mov
popa
and
int3
pcmpgtb
jae
test
sahf
mov
push
arpl
mov
jno
mov
ror
test
push
jmp
outs
mov
loopne
add
int3
xchg
lea
sbb
push
cmp
push
xchg
push
cli
push
pop
mov
pusha
fdivr
arpl
lahf
gs
mov
push
outs
jmp
mov
mov
pusha
pop
inc
mov
mov
xchg
inc
add
fnstsw
bound
enter
retf
dec
in
pop
push
cdq
sub
loop
enter
fild
xchg
pop
push
in
adc
push
call
add
push
sub
ds
jne
cwde
dec
add
and
add
sub
or
adc
adc
sub
popf
mov
in
mov
lock
in
sbb
mov
out
mov
push
sti
in
aaa
jle
sub
add
adc
jne
cmc
shl
adc
sub
addr16
pusha
movs
icebp
xchg
and
fstp
xlat
out
retf
mov
pop
xlat
xor
or
nop
cmp
or
sub
xor
pop
jl
scas
jns
mov
sbb
cmp
jmp
in
xchg
leave
push
mov
pop
add
jmp
into
push
and
in
fsubr
adc
sahf
xor
mov
dec
or
out
shl
scas
sar
aaa
inc
shr
cld
pop
mov
cmp
push
jecxz
push
inc
adc
jns
aas
mov
movs
jns
xacquire
test
hlt
jmp
adc
mov
cmp
stc
mov
push
rol
jae
cmp
mov
out
mov
fsub
aad
mov
pushf
repz
call
lods
shl
xchg
jne
(bad)
mov
in
or
or
les
jecxz
addr16
mov
mov
add
cmp
daa
dec
dec
cmp
outs
shr
jns
and
inc
dec
ret
inc
push
cmp
lea
ins
pop
push
aaa
call
add
imul
lea
adc
jae
add
daa
dec
adc
and
fbstp
movs
adc
dec
add
mov
mov
mov
daa
sbb
inc
or
pop
mov
aam
and
dec
mov
mov
inc
mov
adc
push
inc
push
mov
xchg
xchg
or
ss
add
inc
mov
jno
mov
and
test
int
addr16
xchg
out
daa
popf
inc
cmp
pusha
pop
adc
xchg
ret
xchg
adc
loop
call
xor
(bad)
clc
mov
and
mov
cmps
inc
and
xor
lods
sub
xchg
std
test
inc
les
dec
mov
inc
cmp
lock
stc
mov
adc
xchg
xor
nop
push
pop
popf
or
in
addr16
repz
sub
psrlq
neg
imul
pop
es
or
push
out
arpl
xor
shr
push
test
cmp
xchg
xor
loope
sub
fwait
inc
test
shl
aam
cmps
imul
adc
pop
es
ins
jae
inc
lahf
jb
out
fisub
jns
dec
rcr
mov
xor
lds
inc
add
jbe
hlt
inc
adc
mov
cwde
stos
sbb
sbb
sar
inc
and
nop
mov
cld
out
cmps
inc
xchg
inc
icebp
fisubr
jnp
pop
and
pop
pop
mov
adc
inc
out
outs
daa
xchg
pop
adc
test
ja
push
hlt
cmps
push
or
(bad)
jl
cmps
push
push
clc
imul
sub
(bad)
sbb
inc
jno
ret
jl
pop
or
xor
mov
and
(bad)
lods
hlt
fs
adc
popf
push
mov
or
ret
std
loopne
mov
ja
mov
mov
mov
test
lds
inc
inc
lahf
loope
scas
jp
cmp
iret
pop
push
push
mov
sub
out
out
dec
es
out
fucomip
je
fsub
sub
xchg
call
and
mov
cld
adc
inc
in
into
inc
lock
dec
das
add
mov
inc
call
je
push
int
mov
in
enter
and
xchg
push
retf
scas
jmp
pop
inc
push
mov
xchg
mov
lea
retf
push
call
mov
popa
rcl
pop
push
inc
or
cdq
leave
mov
inc
pop
loopne
pop
or
push
div
sub
pop
aaa
jbe
ins
pop
xchg
cmp
adc
repz
data16
adc
push
xchg
fadd
gs
adc
repnz
idiv
je
call
loop
ins
and
mov
pop
movs
sbb
lahf
sbb
add
out
je
xchg
enter
outs
les
les
into
adc
mov
add
jl
jmp
push
jno
test
lods
lock
call
push
fs
dec
and
mov
cli
ins
and
(bad)
dec
mov
mov
in
mov
jnp
mov
mov
in
gs
cmc
imul
adc
hlt
push
stos
inc
les
xchg
lahf
jno
lea
les
out
mov
call
adc
leave
jecxz
adc
(bad)
sbb
retf
jp
mov
or
adc
test
inc
cmps
mov
sub
(bad)
test
gs
adc
test
jne
ins
lods
and
into
push
sub
fcomp
mov
inc
xor
pop
and
js
ret
sub
inc
ffreep
mov
outs
loopne
stc
pushf
fild
mov
xchg
test
cmps
jns
shl
call
push
mov
movsx
inc
adc
or
push
das
stos
mov
pop
adc
ds
push
sbb
fucom
in
ds
jae
stc
fcmovu
repnz
ja
jb
push
cmps
adc
push
daa
fwait
jl
ror
push
test
nop
mov
push
cwde
mov
movs
rcl
xchg
jns
sar
xor
mov
int
add
cmp
gs
dec
jb
call
or
sahf
push
sub
aaa
cmp
sub
rol
imul
xchg
fwait
mov
jb
test
iret
dec
jmp
dec
popf
ins
in
xor
jmp
xor
out
and
dec
aaa
dec
inc
cdq
inc
mov
and
dec
loop
sbb
test
xchg
test
imul
scas
(bad)
(bad)
scas
and
outs
bound
jle
test
xchg
xchg
mov
adc
xchg
rol
adc
pop
scas
and
lds
sub
mov
fnsave
cmps
lock
inc
mov
aam
stos
fcom
pop
(bad)
push
imul
xor
outs
pop
cdq
add
int
jl
in
mov
pop
loop
aad
mov
cmp
mov
in
ficomp
jge
xor
test
dec
clc
sub
xchg
ja
xchg
pop
xlat
call
jnp
mov
test
mov
scas
cmp
mov
or
lea
jbe
fmul
je
pushf
sbb
mov
add
cmps
call
out
jecxz
xor
lods
mov
or
sar
inc
nop
loope
int
push
ret
fidivr
jae
in
(bad)
or
aaa
nop
cdq
xchg
dec
repz
test
jmp
cli
xor
cmp
rcr
hlt
(bad)
mov
pop
ret
xchg
cmp
lahf
dec
xor
adc
and
sbb
cmp
fadd
out
stos
mov
add
mov
jmp
mov
hlt
cmp
(bad)
pop
sub
sbb
dec
cmp
into
ins
pop
jns
push
les
jge
jae
dec
xor
xchg
jecxz
inc
pop
out
adc
and
pop
add
in
cwde
retf
push
xor
lea
add
inc
inc
or
pop
xchg
add
adc
sbb
and
das
imul
xor
pop
cmp
loope
stos
sbb
gs
call
jbe
xchg
mov
xchg
out
jns
mov
movs
sbb
lea
mov
iret
mov
or
xchg
jns
ror
pusha
and
mov
es
mov
xchg
xor
js
daa
imul
inc
jno
xchg
in
aaa
pop
push
xor
add
aad
cmps
mov
jl
imul
test
sbb
adc
adc
pop
adc
sub
pushf
ds
xchg
lods
inc
mov
mov
mov
ret
cwde
in
fnstsw
shl
jnp
sbb
ss
scas
dec
pop
jg
es
idiv
cli
leave
pop
cmp
sub
leave
adc
ror
and
cmps
mov
adc
adc
(bad)
ins
jns
add
sbb
inc
std
lea
inc
fld
in
jp
adc
pop
retf
mov
in
mov
add
add
sbb
je
(bad)
cmp
pop
dec
and
inc
ret
dec
shl
scas
dec
push
dec
mov
in
out
stc
test
fidiv
fcomip
xor
add
dec
xor
mov
or
push
adc
cmps
loopne
jb
push
dec
fadd
xor
stos
rcl
mov
cmp
rcl
jecxz
(bad)
jecxz
cwde
adc
outs
sbb
mov
mov
dec
dec
out
test
inc
mov
movs
nop
adc
mov
mov
mov
lahf
pop
movs
cmp
adc
lods
inc
bnd
cmc
jno
mov
(bad)
repnz
movs
adc
test
mov
jns
inc
jg
mov
inc
test
or
and
inc
call
daa
cmp
jp
(bad)
cmc
jl
loop
pop
pop
pop
xchg
adc
das
fadd
mov
sbb
int3
mov
call
fdiv
leave
push
ja
mov
xor
mov
xchg
js
mov
cmp
(bad)
pop
mov
ds
mov
sbb
xchg
gs
gs
cmc
sar
popa
sahf
pushf
push
bound
fst
cmp
stos
pop
call
adc
mov
test
outs
fidivr
jmp
cmps
xor
inc
retf
jmp
sti
aaa
loopne
mov
movs
or
cmp
popa
retf
bound
xchg
iret
lds
jae
sbb
(bad)
sti
mov
bound
mov
jae
enter
ror
(bad)
fild
xchg
repz
dec
mov
in
mov
retf
jecxz
icebp
push
and
sub
lahf
or
mov
sub
iret
cdq
mov
pop
push
test
int3
call
shl
fs
cld
cmp
xchg
call
cmp
adc
sbb
sbb
nop
pushf
pop
sbb
push
daa
add
retf
scas
mov
jae
inc
stos
test
loope
cdq
out
retf
jnp
out
xor
push
inc
cmp
jg
adc
addr16
out
ss
inc
call
and
pop
fadd
jl
std
sub
stc
imul
pop
or
loope
jne
into
or
(bad)
jns
inc
test
mov
mov
sub
jnp
fs
fsub
stc
les
adc
out
(bad)
jbe
sbb
movs
jl
fwait
xchg
add
sub
(bad)
xor
retf
jmp
mov
mov
push
(bad)
clc
jle
push
push
movs
mov
test
aam
jmp
xlat
mov
mov
stos
xchg
test
je
pushf
lahf
iret
jg
jbe
xchg
mov
popa
sbb
into
call
and
mov
ret
pushf
jle
jmp
mov
jp
icebp
mov
mov
adc
jg
sbb
sbb
out
dec
adc
repnz
mov
or
test
daa
push
sti
inc
mov
sbb
mov
pop
and
sub
dec
adc
mov
test
mov
and
jle
jp
(bad)
push
or
push
jle
(bad)
in
cmps
mov
push
cmp
cwde
pop
inc
pop
push
pop
stos
xor
jecxz
in
scas
lahf
fldcw
inc
stos
addr16
aam
add
ret
cmps
in
xlat
push
cmps
add
(bad)
add
ret
mov
out
out
cmp
mov
or
rcr
fldl2e
mov
std
or
shl
or
dec
push
repz
xchg
imul
xchg
or
or
pushf
pop
cmp
xor
pop
add
jns
lds
mov
push
(bad)
scas
pop
and
shr
ss
cdq
cwde
fild
fidivr
ror
(bad)
out
ins
cmps
cmp
outs
cmp
inc
add
xchg
aam
nop
stc
cmp
jp
xchg
rcl
gs
or
xor
jp
dec
xchg
jmp
xchg
hlt
lahf
hlt
aas
and
or
xor
arpl
mov
push
inc
mov
sbb
mov
adc
inc
in
jecxz
pop
ins
mov
(bad)
pop
in
mov
mov
pop
fwait
push
mov
cmp
pusha
mov
scas
gs
outs
fwait
rol
leave
push
das
stos
call
sub
push
push
out
adc
cs
xchg
in
aaa
jnp
loop
jnp
fs
ret
jnp
outs
push
pop
cwde
sbb
and
fist
pop
push
cmps
and
dec
repnz
push
icebp
inc
mov
adc
pushf
mov
mov
test
shr
sub
ins
dec
adc
mov
xchg
mov
out
jnp
pop
rcr
sub
(bad)
adc
dec
add
dec
popa
push
xor
mov
icebp
out
lods
popa
inc
in
push
inc
mov
fwait
jbe
test
push
dec
jbe
push
mov
add
xchg
jge
sbb
ja
sar
in
or
mov
frstor
and
cld
mov
pushf
fxch
retf
adc
dec
push
xchg
imul
add
push
cli
outs
stos
sbb
xchg
cmp
loope
out
or
xchg
sbb
idiv
xchg
out
and
pop
outs
adc
push
xchg
popf
pop
ins
or
fiadd
push
scas
mov
mov
test
xchg
data16
(bad)
clc
leave
fistp
rol
xchg
stc
bound
call
xchg
mov
pop
rcl
push
xor
sbb
and
int
mov
ja
mov
(bad)
das
jo
inc
popa
out
popa
dec
add
sahf
(bad)
frstor
xchg
xchg
out
adc
(bad)
in
or
les
jno
and
inc
fsub
cld
jl
aam
mov
cmp
add
push
push
dec
ret
iret
add
jne
popa
xchg
aam
sub
out
pop
or
pop
mov
lods
cmp
out
jl
in
push
mov
jecxz
loop
cmp
mov
imul
mov
and
dec
add
push
inc
(bad)
jmp
pop
xchg
addr16
adc
ins
and
jle
mov
mov
cmc
mov
and
retf
(bad)
push
adc
pop
push
mov
leave
xor
xchg
and
adc
popf
cmps
mov
adc
push
add
mov
cmp
in
mov
sbb
cmp
(bad)
ds
xor
loopne
jae
push
pop
xor
mov
inc
lock
mov
ja
mov
dec
shl
mov
out
arpl
call
test
lds
repz
adc
pop
out
adc
fcomp
test
inc
mov
inc
add
rcl
dec
in
sti
jmp
sub
retf
xchg
repz
cmp
fst
jmp
imul
cmp
pop
ds
das
daa
mov
lods
mov
addr16
js
mov
add
sub
xor
push
jnp
xor
imul
mov
mov
mov
xor
or
push
fidivr
xor
jp
adc
ja
cmp
pop
push
xor
xchg
pop
mov
jne
out
je
jmp
retf
js
sbb
sub
push
jecxz
jle
(bad)
das
ss
xchg
adc
retf
pop
sbb
mov
adc
jb
enter
outs
shl
fstp
or
push
ins
xchg
xor
popf
push
mov
pop
xor
std
cli
jle
mov
(bad)
cmp
icebp
pop
iret
fnstenv
daa
test
add
mov
xchg
and
cmp
cmp
test
cli
and
adc
xchg
popf
cmp
into
stos
ficomp
xchg
add
adc
lods
sbb
lods
add
bound
aas
test
mov
data16
jmp
scas
sub
(bad)
mov
xlat
mov
out
jno
sbb
stos
mov
jbe
aaa
or
cmp
faddp
int
dec
pop
inc
push
jmp
lock
into
adc
(bad)
lea
jno
mov
stos
jmp
loop
imul
dec
stc
scas
sbb
not
mov
push
scas
push
sbb
add
dec
rdtsc
shl
sbb
int3
std
(bad)
mov
daa
push
xchg
mov
xor
xor
dec
shl
repnz
out
jl
dec
rcr
push
leave
stos
sub
and
fbld
rcl
mov
not
jge
call
(bad)
inc
add
jmp
int
cdq
pop
rcl
out
jno
ins
add
arpl
xchg
jmp
div
jmp
dec
dec
loop
mov
pop
ret
aam
jnp
cmp
cli
enter
mov
scas
retf
lahf
pop
call
jno
cs
cmp
out
pusha
popa
sub
call
stc
sahf
out
sbb
mov
sahf
jp
and
(bad)
cmp
add
add
in
xor
enter
fistp
stc
mov
cwde
mov
(bad)
pushf
daa
das
bound
mov
iret
mov
adc
mov
sub
scas
in
or
std
fucomp
mov
mov
jg
lahf
jle
das
dec
mov
test
and
push
jge
std
or
mov
sub
je
push
test
jo
fwait
push
or
add
movs
xor
lock
jmp
stc
inc
pop
inc
xchg
mov
pop
sub
ret
xchg
inc
movs
shr
fiadd
mov
ja
nop
adc
mov
(bad)
out
sti
dec
jno
mov
mov
mov
int3
sub
inc
fdivr
in
and
fnstenv
push
jns
adc
imul
mov
test
test
call
push
rcr
(bad)
xchg
cli
add
dec
xchg
iret
jb
mov
push
xchg
sub
sbb
test
rol
mov
xor
fldcw
mov
mov
and
inc
push
add
jg
(bad)
sar
push
mov
loope
sbb
cmp
int
ficomp
sub
or
shl
out
into
push
sub
mov
and
(bad)
pusha
jmp
test
dec
ins
inc
add
lods
mov
push
push
sbb
pop
cmp
jmp
ss
mov
repz
aaa
jae
retf
pop
push
(bad)
sub
outs
mov
data16
or
jb
jle
xor
xchg
movs
mov
call
jle
add
xor
test
push
test
test
sbb
cmp
mov
int3
rcr
ror
out
fst
mov
ret
push
jg
(bad)
dec
call
mov
rcl
aas
repnz
ds
outs
pop
scas
arpl
xchg
fcmovnu
jns
adc
addr16
jmp
adc
xchg
lods
mov
jo
adc
jae
xchg
mov
xchg
mov
xchg
and
pop
loopne
sub
mov
adc
sbb
dec
leave
out
sub
sbb
sub
mov
out
dec
lods
mov
lock
xlat
data16
add
mov
and
cli
mov
pop
ss
jg
jo
and
pop
add
stc
fbld
jle
adc
fstp
adc
int3
int
and
and
mul
mov
or
test
xchg
mov
pop
mov
jp
mov
inc
dec
cs
jmp
and
outs
and
xor
retf
rcl
dec
aam
push
and
das
shr
cmp
mov
fsub
les
or
push
push
sar
and
adc
popf
jbe
pop
push
hlt
ins
cmp
rcl
mov
sub
jno
adc
(bad)
int3
aaa
adc
add
or
cmp
in
ins
or
push
sub
cli
stos
lea
test
retf
and
cwde
dec
xor
loop
inc
out
add
push
outs
addr16
outs
jmp
jnp
inc
push
stos
pop
mov
inc
pop
les
imul
dec
cmp
sub
mov
mov
lods
jecxz
push
push
ja
mov
std
push
inc
xor
aas
call
ret
cld
inc
xchg
mov
sbb
inc
dec
aad
or
jne
xor
and
retf
jbe
movs
xor
shl
cmp
add
lods
call
fwait
(bad)
xor
sbb
scas
std
into
addr16
sbb
dec
sar
jmp
retf
pop
xchg
jle
cld
sub
cmp
(bad)
in
invd
sub
faddp
xor
or
and
call
jmp
out
mov
jg
test
xchg
adc
xchg
cmp
or
pop
sbb
pusha
int3
push
or
sub
and
pop
sbb
aaa
ins
dec
jmp
in
fs
mov
int
cmp
shr
mov
cdq
add
mov
jnp
es
pop
xchg
push
retf
and
xor
dec
and
adc
adc
sub
jo
push
push
jmp
ss
pop
dec
scas
daa
scas
in
pop
xor
jl
mov
push
and
ja
inc
cmp
xor
dec
lods
jl
in
stos
mov
inc
xlat
btc
add
ds
or
mov
rcl
add
(bad)
mov
push
push
push
and
in
adc
cld
jecxz
pusha
add
test
in
ss
jp
xchg
lods
loopne
test
ret
push
and
out
sbb
xor
jmp
in
jae
and
xchg
(bad)
pop
idiv
repnz
lods
jne
je
cmp
pop
(bad)
test
and
lods
fs
add
dec
jge
mov
push
sar
pop
xchg
dec
mov
jae
in
mov
stc
retf
cmp
dec
mov
mov
mov
stos
pop
xchg
test
xor
retf
mov
pop
loope
cmp
in
xor
iret
mov
dec
in
cmp
(bad)
fmul
popa
jl
sbb
xchg
jb
xor
push
ins
in
cmps
pop
pop
test
push
mov
add
fimul
sub
and
and
daa
pop
xor
stos
pop
sub
mov
mov
bound
cmp
shl
cmps
or
sbb
clc
enter
or
(bad)
push
mov
jb
inc
sub
jge
adc
dec
sar
aaa
cmps
mov
les
xor
jae
(bad)
xor
xchg
addr16
scas
add
(bad)
mov
inc
test
out
ja
rcl
jbe
and
jnp
jecxz
xor
pop
retf
mov
(bad)
and
int
retf
cmps
dec
jno
ins
enter
mov
jns
dec
test
sub
mov
data16
cmp
rcr
ret
mov
dec
neg
push
or
out
inc
mov
push
push
(bad)
jns
push
in
dec
inc
add
inc
int3
xchg
jb
jo
test
mov
jmp
cld
loopne
xchg
ret
inc
push
fld
push
pop
mov
mov
pushf
retf
or
test
mov
cmp
and
pusha
and
pop
cs
sbb
in
cmp
push
cs
mov
push
mov
xor
mov
loope
adc
das
stc
mov
inc
mov
out
pop
lahf
jbe
test
movs
cdq
(bad)
call
xlat
xor
xchg
sti
sub
sbb
jbe
inc
ret
and
lods
mov
xor
neg
iret
int3
xchg
retf
adc
or
push
sub
cmp
push
out
(bad)
fdiv
sti
cmp
or
fmul
outs
data16
scas
xor
or
sub
iret
mov
outs
cmc
pushf
jne
arpl
xor
sbb
mov
cmp
leave
mov
push
add
inc
stc
rol
call
xchg
mov
cmp
cmp
adc
not
daa
xor
push
inc
xchg
popf
mov
stos
cmp
loope
movs
inc
stos
xor
call
shr
adc
xor
(bad)
mov
aam
cmp
dec
dec
out
lahf
add
mov
js
movs
sahf
jnp
scas
retf
pop
test
push
mov
iret
and
sbb
aas
not
ret
push
add
xchg
or
jne
dec
dec
mov
and
popf
sub
push
fcmovne
or
call
sub
pusha
jle
cs
jge
rcl
jb
les
divps
out
xor
scas
aad
rcr
xor
jae
sub
addr16
mov
sahf
aaa
sbb
add
out
data16
(bad)
into
pop
lds
jae
add
leave
lahf
jmp
pop
push
and
mov
mov
aam
push
icebp
or
je
mov
rol
call
cdq
out
fst
mov
mov
xchg
xchg
cmp
or
test
pop
inc
cmp
pop
pop
pusha
xchg
mov
(bad)
int3
add
fistp
inc
movs
ds
and
arpl
cmps
cmp
div
mov
dec
les
xchg
xor
aas
fst
cmps
jbe
test
fld
nop
dec
dec
lock
nop
push
xor
mov
or
mov
and
stc
or
push
xchg
(bad)
adc
imul
leave
mov
sub
inc
popa
cmp
pushf
inc
and
cld
and
dec
fnsave
mov
pop
mov
cmp
pop
push
lods
push
sub
sar
cmps
enter
test
lock
mov
xchg
xor
ins
adc
psllq
cwde
fimul
mov
(bad)
jp
xchg
push
cmp
call
push
leave
popf
ja
xchg
sub
mov
ins
xor
xchg
xchg
mov
mov
js
cmp
mov
rcr
cli
pop
mov
das
mov
xchg
(bad)
out
imul
ds
adc
sbb
aas
xor
ret
aam
add
inc
in
push
fmul
sti
(bad)
sti
add
neg
pop
mov
mov
mov
pop
outs
ficom
xchg
out
inc
popa
jmp
mov
mov
mov
dec
dec
add
in
inc
jmp
bswap
sti
repz
out
lahf
inc
scas
dec
sbb
sub
fild
inc
dec
mov
test
out
bound
sbb
pushf
push
shr
ins
or
sub
adc
xchg
shl
mov
or
add
pop
iret
into
jbe
(bad)
push
je
xor
nop
sbb
dec
repnz
loop
movs
pop
mov
repz
push
imul
test
lods
mov
and
ss
and
adc
xor
xor
loopne
pop
ins
sbb
mov
dec
dec
jns
ret
leave
mov
mov
loopne
out
sbb
mov
aas
loope
xor
bnd
mov
jbe
std
mov
or
outs
jb
push
ror
xchg
cdq
mov
dec
mov
mul
sub
or
jmp
test
(bad)
loope
jle
in
inc
out
sbb
dec
test
push
loopne
xlat
outs
cmp
enter
and
js
aam
jae
push
inc
sub
cdq
jmp
mov
mov
inc
add
hlt
repnz
and
push
ret
inc
mov
pop
por
test
push
aam
rol
mov
ret
ret
jg
in
shr
sbb
not
push
int3
jg
xor
xor
xchg
dec
add
add
mov
and
xchg
lods
arpl
sar
not
jb
push
fmul
rcr
ret
aad
xchg
and
shl
mov
int
pop
cmp
mov
nop
scas
lahf
out
dec
ror
add
sar
jmp
(bad)
mov
jmp
scas
and
push
jmp
call
je
lds
dec
xor
lods
push
stos
mov
cdq
(bad)
in
jmp
stos
jno
mov
rcl
push
fnstcw
add
pop
test
cdq
xor
adc
aam
pop
enter
jae
popa
cmp
adc
add
in
pop
pusha
int
push
aam
inc
bound
bound
mov
dec
xchg
jno
and
dec
sub
mov
adc
mov
jae
pusha
and
xchg
lahf
add
cdq
fsub
or
test
sub
mov
xchg
movs
jbe
or
lock
popa
sub
pop
rcl
mov
int
sbb
pop
inc
(bad)
jmp
in
inc
ss
lahf
xchg
xchg
out
mov
popa
ffree
adc
fwait
mov
and
adc
addr16
daa
lds
lods
or
fsubp
sbb
jo
mov
pop
into
add
scas
push
lock
push
cmps
mov
call
sub
cmp
jb
push
jae
mov
inc
cld
int
mov
imul
sbb
xlat
loopne
mov
mov
add
sbb
add
dec
shr
addr16
xlat
cmps
xor
and
xchg
inc
mov
jmp
push
xor
sti
add
pop
pop
add
lods
jae
xor
(bad)
cmp
add
fsubrp
cmp
vpaddd
push
push
push
dec
sub
lahf
fnstenv
cmps
push
addr16
test
sub
hlt
adc
daa
jp
sub
add
(bad)
adc
lea
lahf
pop
js
(bad)
std
je
cmp
ins
pop
retf
and
adc
cdq
outs
mov
dec
mov
cmp
and
cmp
movs
adc
cs
sub
mov
adc
ds
scas
xor
sahf
adc
xor
mov
pop
imul
mov
sbb
push
jge
mov
add
xor
fwait
dec
pop
push
push
cld
sub
sub
or
pop
inc
iret
xor
aaa
stos
sub
sahf
jne
sti
mov
pop
popa
adc
retf
imul
and
call
sbb
sti
mov
bound
jb
xchg
mov
sub
dec
xchg
pop
add
in
(bad)
gs
shl
fucomi
add
imul
fisttp
mov
mov
fwait
and
mov
dec
outs
arpl
mov
dec
and
sahf
adc
sub
push
rol
hlt
mov
fiadd
leave
mov
sar
ror
sbb
cdq
xchg
sbb
cwde
jp
dec
(bad)
in
xlat
xor
mov
idiv
shl
add
loop
dec
or
sahf
imul
cmp
sub
jecxz
or
mov
push
cs
add
adc
adc
sbb
test
out
jge
movs
push
mov
mov
stos
not
out
cmp
xchg
test
pop
ja
adc
xor
cmp
mov
sub
mov
into
imul
push
mov
lods
or
test
out
add
mov
cmp
punpckhbw
ss
cld
test
pushf
push
xchg
(bad)
sbb
imul
jae
cmp
jne
test
adc
sub
ss
xchg
cdq
outs
pop
(bad)
in
mov
jmp
jle
push
aam
inc
(bad)
lock
mov
pusha
sub
or
nop
rcr
out
in
retf
xor
mul
repz
(bad)
sti
pop
not
or
mov
sub
test
push
add
xchg
jne
and
ret
xchg
dec
stos
push
js
dec
push
mov
mov
dec
cmps
imul
lods
pop
jb
sbb
sti
add
rcr
or
fnstcw
or
or
sbb
bound
push
stos
push
xchg
adc
stos
mov
mov
in
call
pop
inc
cli
xor
iret
out
mov
out
pop
mov
fwait
pop
stos
cmp
adc
pop
in
aas
mov
retf
sub
int
push
adc
or
mov
mov
push
xchg
xor
xchg
into
and
mov
test
inc
adc
dec
push
jbe
cmp
inc
dec
xchg
test
dec
inc
dec
mov
les
sub
sub
cli
push
adc
frstor
fisub
inc
mov
jb
adc
daa
cmp
push
and
pop
das
out
push
push
dec
inc
push
jmp
gs
dec
arpl
mov
icebp
pop
nop
cmp
adc
mov
jnp
sub
icebp
jno
inc
test
fwait
ror
ds
ins
lods
add
retf
mov
pushf
lahf
imul
add
mov
xchg
jmp
lods
lahf
aad
or
retf
pop
aaa
xor
pop
sub
(bad)
mov
push
dec
mov
xor
in
xlat
jp
cmp
out
mov
icebp
jle
jne
or
pop
push
inc
call
sub
xchg
jmp
pop
in
push
shl
inc
out
mov
sbb
cmp
dec
xor
in
shl
movs
add
sub
loope
pop
mov
fstp
es
xor
push
call
inc
pop
lock
push
jns
lahf
pop
sbb
lea
or
xchg
dec
(bad)
repnz
lahf
imul
in
add
adc
push
cmp
or
mov
sbb
cdq
cdq
add
xor
cld
adc
in
adc
and
xchg
sti
fdiv
mov
xor
cmp
add
jnp
xor
cli
test
adc
push
out
(bad)
fst
mov
jge
lds
sbb
push
(bad)
pop
idiv
mov
mov
pop
jnp
jnp
sbb
push
jne
jp
ja
push
ss
mov
jl
xor
imul
imul
xor
in
pop
mov
mov
aaa
mov
jp
or
ds
inc
and
cmp
das
popa
mov
enter
stos
or
iret
cdq
in
xchg
cmp
stos
lods
xor
jge
retf
sbb
(bad)
aad
mov
jmp
arpl
retf
jmp
push
xor
mov
fisub
js
push
or
mov
fsub
movs
popf
fiadd
sbb
push
xor
cwde
push
cmc
dec
out
call
jnp
mov
adc
sbb
(bad)
dec
adc
clc
neg
mov
test
push
pop
stos
in
xchg
popf
xchg
sbb
aam
not
cli
shl
popf
nop
and
or
add
adc
stc
int3
cld
cs
push
and
dec
sbb
push
adc
std
sahf
pop
sbb
xor
outs
fiadd
inc
hlt
xchg
xchg
add
inc
std
sub
cmps
and
lods
jecxz
int3
push
sar
cmps
ret
or
push
cmp
sub
iret
inc
mov
inc
into
add
bound
pusha
jbe
sti
jae
loopne
mov
int
aam
xlat
cmps
jno
push
cmp
push
jb
lahf
and
or
test
inc
ret
xor
leave
js
xor
cmp
fadd
xchg
jmp
fisubr
cld
mov
jmp
jle
mov
test
enter
push
sar
xor
pop
inc
lods
adc
cmps
ret
xor
mov
test
jl
jp
das
pop
cmp
(bad)
fiadd
int3
loope
daa
and
mov
call
dec
xor
mov
mov
sub
aaa
xchg
add
add
sub
lea
das
int3
sar
inc
adc
test
jmp
mov
adc
mov
test
push
and
hlt
shl
mov
jecxz
add
repnz
dec
add
and
xor
mov
enter
sub
cmc
xchg
mov
sbb
pop
xchg
in
fmulp
jne
retf
test
adc
imul
sbb
das
addr16
push
mov
sub
and
sub
(bad)
pusha
pushf
push
sbb
adc
leave
mov
mov
mov
imul
push
mov
mov
sbb
icebp
daa
(bad)
fdivr
mov
(bad)
sti
bnd
push
cmp
sub
lock
mov
cwde
adc
call
xchg
mov
in
movq
(bad)
in
push
xor
ds
stos
mov
xchg
sub
ds
int3
repz
xchg
xor
ror
cmp
lds
ja
scas
out
jl
das
add
add
mov
add
in
mov
lahf
pop
and
inc
lea
mov
aam
inc
mov
cli
movs
ins
or
push
push
inc
fdivrp
and
ret
icebp
movs
inc
mov
or
fmul
xchg
mov
jb
xor
lds
ret
pop
push
and
ins
retf
and
nop
loop
movs
xchg
aaa
test
shr
in
jne
sub
fs
jns
xor
or
cmp
jle
cmp
ins
cmc
aam
xchg
or
in
inc
cld
nop
mov
push
outs
adc
in
mov
test
jecxz
dec
jb
sub
mov
sbb
cmp
xor
or
cmp
pop
mov
fstp
or
pushf
hlt
mov
fiadd
or
les
push
pop
retf
test
jnp
xchg
mov
pop
push
pop
fdiv
inc
jae
aaa
cdq
out
xchg
(bad)
sub
adc
in
out
mov
sahf
nop
jp
mov
cmp
jecxz
aaa
popf
sub
adc
push
mov
out
mov
fcomp
push
retf
popa
push
add
fistp
(bad)
and
inc
es
stos
(bad)
jno
xor
ins
popf
shr
or
mov
sbb
push
cwde
jle
jne
call
mov
cmps
adc
cmp
retf
or
psubq
(bad)
icebp
cmp
jle
mov
jae
xor
pop
repz
fdivp
and
in
mov
stc
cmp
ds
cs
dec
sub
cmp
sar
cmp
mov
lea
fwait
pop
pop
iret
jo
hlt
mov
dec
mov
pop
out
xor
sub
jnp
sbb
adc
jbe
dec
or
dec
es
push
loopne
xchg
inc
jle
push
xchg
sub
mov
in
icebp
pushf
sti
pop
mov
sbb
fcom
movsx
and
push
and
(bad)
add
or
loopne
jo
scas
ret
pop
mov
ror
mov
hlt
addr16
test
jns
dec
mov
fwait
retf
leave
test
push
icebp
mov
repz
mov
push
loope
adc
test
jne
pop
inc
std
dec
sub
add
repnz
fiadd
into
push
xchg
sub
jb
lods
mov
xchg
mov
cmp
jbe
stos
push
cmp
popa
loop
and
push
xchg
inc
call
in
jmp
push
cwde
rcl
rcl
and
mov
imul
dec
mov
stos
xor
pop
(bad)
push
sub
repnz
ja
adc
les
add
paddusb
lods
pop
leave
or
sar
cwde
pop
pushf
jle
push
mov
inc
pusha
mov
jb
add
in
repz
fs
iret
aad
sbb
jns
and
in
cmps
jns
and
test
inc
xor
lods
sub
fiadd
ds
bound
mov
(bad)
mov
sub
aam
mov
cld
jb
das
(bad)
aas
int
cmp
sub
push
test
(bad)
sbb
daa
inc
pop
clc
lock
(bad)
adc
sbb
cmp
sub
xor
jno
cmp
aas
shl
dec
adc
or
leave
test
sahf
mov
mov
cld
sbb
test
test
jnp
dec
push
mov
inc
dec
dec
sbb
mov
or
push
mov
repnz
adc
rol
out
lahf
xor
(bad)
dec
int
pop
sub
xor
pop
cmp
pusha
dec
stos
xlat
rcl
leave
xchg
outs
sbb
sbb
mov
js
xchg
fsub
pop
jb
fld
jle
mov
je
inc
inc
xor
jb
loop
dec
cwde
dec
jg
(bad)
ins
sub
cmp
fist
xchg
jp
push
pop
and
ss
cmp
lea
or
jle
inc
dec
loopne
mov
xchg
push
cli
jp
pop
dec
mov
test
ins
call
loope
dec
test
mov
jl
les
lds
mov
or
pop
cmp
rol
loop
mov
arpl
xchg
cld
and
repz
lds
fwait
jnp
(bad)
dec
ja
hlt
movs
jge
and
push
cmc
arpl
mov
cmps
in
fbstp
rcr
inc
mov
stos
sub
popf
jge
pushf
pushf
jg
jns
xchg
mov
cld
and
sub
mov
test
cld
out
jmp
cmps
and
fnstsw
xchg
rol
mov
aas
cmp
mov
sub
ja
mov
cwde
xchg
or
and
mov
sbb
jmp
xor
push
sub
mov
in
fiadd
sti
pop
fcomi
nop
int
es
ret
bswap
jnp
jmp
mul
jecxz
xchg
test
scas
sti
push
scas
sub
aaa
xchg
xor
std
pop
inc
aaa
pop
fucomp
pop
xchg
sbb
jnp
mov
push
sub
and
stc
pusha
or
add
outs
dec
in
inc
and
lds
mov
lahf
into
loop
in
inc
ret
xchg
cmp
mov
dec
stos
push
icebp
(bad)
fnstcw
push
ja
or
push
pop
inc
mov
imul
mov
mov
test
cmp
cli
add
daa
xor
xchg
sub
test
jmp
fwait
push
shl
or
pushf
sbb
fs
jp
nop
mov
mov
repnz
dec
sbb
cmp
cli
lock
sbb
jbe
popf
fmul
movs
imul
test
enter
in
ins
jbe
pop
popf
pop
xchg
ds
jae
mov
sbb
icebp
cld
add
rol
clc
push
je
and
loope
push
inc
aam
popa
xor
push
outs
out
loope
xchg
mov
ffreep
jle
lock
jo
or
jo
ss
mov
stc
leave
and
sbb
add
adc
and
mov
gs
or
(bad)
std
jae
adc
mov
les
sahf
dec
call
xor
cli
shl
cmp
adc
adc
hlt
xor
pop
dec
sub
data16
cmc
mov
sahf
out
clc
cdq
mul
loopne
lods
out
jo
inc
das
stc
add
jg
jge
mov
xchg
jo
fcomp
sub
pushf
lahf
sbb
mov
lahf
fwait
ss
mov
or
add
jmp
mov
hlt
mov
test
sbb
jge
cmps
push
out
call
shl
data16
cmc
repz
mov
sbb
jp
stos
fwait
mov
xchg
inc
mov
(bad)
push
pop
inc
sahf
repz
ret
shl
cmc
addr16
fs
stos
cmp
dec
sbb
in
mov
(bad)
std
xor
adc
ds
adc
jmp
test
sub
jno
pop
fstp
jb
retf
hlt
scas
mov
mov
jb
cmp
lahf
sub
sti
cmps
into
test
xchg
xchg
xor
stos
(bad)
pop
xchg
push
jmp
push
ins
out
jle
jne
enter
fiadd
fwait
test
ret
adc
iret
dec
pushf
fcom
outs
push
aas
fwait
imul
out
and
xchg
push
mov
jl
xchg
fild
add
jnp
popa
sub
jmp
mov
push
mov
add
jmp
mov
sti
xor
arpl
push
sub
push
leave
pop
ret
aam
sub
loopne
push
call
pop
cmp
jae
sbb
cmp
adc
enter
sbb
and
mov
push
jne
or
jae
mov
or
push
xor
and
(bad)
lock
sbb
mov
sub
ror
push
mov
addr16
adc
cmp
ja
(bad)
mov
pop
add
xchg
or
push
jmp
into
rol
addr16
and
shl
scas
dec
mov
mov
dec
enter
jp
mov
aam
fidivr
out
xchg
mov
fistp
sar
nop
inc
cmc
sub
or
adc
or
or
xchg
rcl
clc
mov
sub
cmp
sub
dec
(bad)
js
imul
lds
push
push
cwde
mov
and
add
and
ds
fld
adc
lods
fdiv
je
int3
(bad)
cld
(bad)
pusha
(bad)
jae
pop
mov
pop
push
adc
jno
popa
aam
sbb
popf
push
mov
sub
popa
mov
jmp
pop
mov
xor
clc
cmp
fistp
adc
ret
dec
inc
fsub
pop
xchg
jae
aad
in
inc
sub
sub
into
stos
outs
mov
sbb
cmps
or
adc
jg
(bad)
or
mov
dec
add
lods
retf
xchg
mov
cmps
mov
or
mov
pop
jmp
add
ror
dec
mov
push
fld
fld
mov
xchg
pop
movups
or
push
inc
inc
pop
(bad)
inc
pop
mov
adc
adc
push
out
pusha
cmp
data16
imul
call
push
cmp
sbb
loopne
sbb
stos
pop
or
cmp
xlat
inc
pop
cmc
mov
and
jae
mov
ficomp
add
repz
mov
pop
or
clc
fidiv
push
mov
xor
jmp
cdq
jmp
or
push
xchg
and
jno
jno
mov
(bad)
pushf
push
(bad)
mov
mov
add
test
or
fldenv
icebp
outs
stc
mov
mov
outs
mov
cdq
aaa
sub
dec
inc
rcr
and
xchg
dec
or
cwde
jae
ins
push
pop
in
je
xor
inc
sub
jbe
mov
push
pop
lahf
ins
jmp
xor
imul
jne
mov
int
add
cdq
movs
rol
test
pop
cmp
push
push
not
mov
push
xor
je
aad
retf
enter
push
test
lds
cs
(bad)
ror
pop
push
lods
mov
or
icebp
jg
add
and
jns
loopne
loop
dec
ds
sbb
cmps
scas
test
mov
pushf
mov
pop
jne
mov
test
mov
fs
push
ss
add
icebp
sbb
outs
mov
jne
mov
arpl
(bad)
adc
fs
jo
shl
cmp
(bad)
fdiv
fucomip
pop
imul
cmp
sbb
xlat
sub
ret
sbb
push
mov
jae
fisttp
push
mov
iret
inc
in
pop
sahf
test
rcl
pop
in
push
sub
rcl
jge
add
push
cld
mov
lods
pop
pop
or
jge
xor
lock
bound
out
(bad)
rol
in
push
loopne
aad
fild
cmc
shr
mov
lea
sbb
xchg
cmp
mov
lds
jbe
clc
sbb
fstp
movs
sbb
pusha
cdq
fsub
jbe
xlat
test
je
(bad)
and
gs
retf
call
mov
mov
pop
shl
adc
ret
mov
xchg
or
pop
jp
(bad)
ins
jns
pop
ret
leave
out
(bad)
lods
xchg
fist
sbb
mov
retf
call
mov
mov
dec
add
ror
mov
popf
mov
xchg
ficomp
jp
push
dec
test
jecxz
mov
jecxz
mov
ffree
cmp
in
mov
ds
(bad)
mov
stos
cmp
push
enter
out
sbb
int
mov
out
inc
in
push
mov
(bad)
aam
inc
jb
jnp
std
jne
lahf
adc
dec
cmc
aad
push
je
jle
daa
(bad)
loope
pop
add
aaa
call
inc
jp
cli
jge
outs
push
loopne
ins
out
loope
imul
inc
loop
push
lods
dec
add
leave
jb
das
mov
outs
mov
jbe
fisttp
fst
les
sar
push
(bad)
jmp
mov
and
(bad)
or
pop
push
enter
test
push
inc
(bad)
jge
push
xor
or
cli
push
push
xor
xchg
jp
fdivr
mov
cmc
fld
scas
mov
dec
cdq
dec
jb
out
and
pop
pop
xlat
xor
add
or
es
pop
fsubr
sub
mov
bound
call
xor
cmps
cmp
(bad)
out
sbb
inc
(bad)
cli
repnz
test
mov
xchg
nop
jb
mov
pop
xor
jecxz
jno
inc
cwde
imul
inc
jno
or
and
push
dec
adc
std
loopne
xchg
mov
pop
cwde
mov
cld
sub
popf
inc
mov
jne
mov
pop
push
fmul
fsub
enter
jno
call
dec
sub
jle
fdivr
in
lea
jmp
stos
jmp
stos
sub
into
lds
in
cdq
repz
jg
pop
fidivr
mov
movs
jmp
xchg
sub
daa
jp
stos
and
mov
or
pop
xchg
cmps
or
jb
push
fcmovu
je
fucomi
and
dec
lods
scas
retf
inc
inc
sar
or
movs
mov
add
jns
je
mov
sti
gs
mov
jle
rcr
(bad)
xchg
jmp
fadd
arpl
mov
jne
lahf
sti
lahf
imul
in
mov
xor
cmp
pusha
adc
dec
stos
fsub
test
and
inc
jecxz
sbb
mov
push
sub
daa
aas
pop
add
jmp
retf
mov
inc
sbb
jl
add
jecxz
call
sti
dec
cmp
dec
mov
push
and
mov
out
int3
fdiv
adc
dec
pop
sbb
ins
int
push
popf
sbb
adc
cmp
aaa
rol
fnstcw
inc
(bad)
mov
add
add
fs
das
add
je
jp
int
lea
jnp
and
xchg
pop
mov
mov
jle
cmp
and
jae
mov
mov
dec
cmps
xchg
out
push
(bad)
pop
add
add
jmp
ja
jns
sub
daa
and
jbe
mov
dec
pop
and
push
push
adc
push
bound
inc
ins
push
sub
popf
iret
or
cmp
cmps
pop
jl
test
mov
xchg
repz
idiv
retf
or
and
scas
in
push
adc
adc
xchg
test
pop
cmps
xchg
inc
mov
pop
rcr
add
repnz
cmp
cmp
or
fwait
test
test
and
ret
dec
cmc
sbb
add
sbb
and
xchg
loop
out
add
fbstp
in
sbb
xor
sub
(bad)
hlt
add
add
fnstenv
push
cmp
push
inc
lock
(bad)
jmp
pop
pusha
xor
cmc
cmp
fdiv
psubusb
rol
aam
add
mov
stos
xchg
xor
jae
mov
mov
call
enter
addr16
out
lea
loop
cmp
sub
sar
sbb
cmps
popa
retf
aam
pop
jle
test
add
pop
pop
stos
in
xor
or
mov
ja
cmp
pusha
lock
and
adc
cmp
mov
sbb
jmp
and
xchg
cmp
repnz
dec
push
int
mov
sub
xlat
jg
into
daa
hlt
int
add
jbe
jae
adc
xor
pop
jnp
fmul
dec
cwde
mov
adc
shl
cmp
inc
cmp
hlt
xchg
add
repz
scas
mov
jno
adc
inc
outs
test
jns
(bad)
dec
dec
mov
test
mov
aam
jmp
in
jle
outs
iret
push
mov
cmp
mov
into
pushf
pushf
jae
mov
adc
or
sbb
stos
dec
lea
push
mul
mov
imul
out
fistp
push
fiadd
jbe
mov
cmp
jns
loope
cmp
pop
ja
cs
adc
(bad)
pop
pop
sub
pop
call
icebp
jno
(bad)
dec
inc
dec
jge
mov
movs
test
pushf
push
repnz
aaa
pop
les
stc
rcl
lea
jb
js
jmpw
ja
imul
mov
(bad)
jmp
cmp
pop
daa
iret
aas
pop
fldenv
int
stc
push
mov
adc
test
inc
add
or
cli
cld
mov
leave
add
push
push
mov
push
ins
enter
fs
leave
aaa
push
pop
fbstp
add
xlat
adc
lods
mov
jnp
or
and
not
minps
xor
inc
popf
in
xchg
add
sti
lahf
xchg
add
mov
imul
cmp
rol
int
imul
pop
in
movs
ss
mov
sbb
shl
push
pop
xchg
xor
xchg
in
adc
(bad)
clc
xor
movs
in
jo
in
(bad)
cmp
sbb
mov
gs
mov
cld
inc
dec
adc
mov
mov
test
pusha
cmp
bound
sbb
inc
inc
enter
xor
fwait
fs
cmp
jp
xchg
idiv
inc
movs
mov
mov
in
pop
and
pop
lods
cmove
(bad)
cmp
mov
sbb
arpl
mov
xor
iret
or
out
inc
cli
pop
je
bound
xchg
mov
loopne
fucom
das
jnp
ds
scas
adc
mov
lods
xchg
cmps
mov
call
xchg
mov
fisttp
mov
ror
imul
xlat
jbe
jbe
js
icebp
mov
rcl
jmp
inc
ins
xor
inc
jmp
inc
xchg
adc
retf
sar
fs
pop
outs
push
bound
mov
mov
pop
xchg
stos
or
mov
test
and
ins
aaa
inc
xchg
lahf
call
test
xchg
ror
iret
leave
hlt
mov
lods
mov
or
sub
mov
(bad)
push
mov
nop
dec
js
mov
mov
outs
add
cld
jb
inc
sbb
js
push
ja
pop
mov
(bad)
idiv
daa
(bad)
pop
cmp
mov
or
rol
mov
push
xor
ins
push
enter
cmp
mov
in
rcr
pop
inc
cld
fnsave
out
xor
iret
enter
jbe
repnz
push
xor
or
xor
dec
ins
push
sbb
icebp
xor
mov
sbb
jge
stos
xchg
xchg
mov
outs
push
or
push
adc
sub
sahf
jns
or
add
repnz
cmc
sbb
inc
mov
scas
sub
fwait
gs
cwde
cdq
mov
sub
mov
in
int3
gs
outs
cmp
dec
shr
push
cmc
rol
mov
mov
cmp
gs
test
popa
jecxz
scas
int3
cmps
cli
pop
ins
popf
int3
jns
cmp
ror
jo
cmp
retf
add
rol
int
mov
retf
neg
arpl
repz
adc
or
(bad)
jbe
lea
xor
(bad)
dec
movs
jb
rep
popa
mov
test
pop
retf
out
ret
sbb
retf
loope
xor
sbb
scas
jno
movs
sub
pushf
js
sar
pop
push
xchg
(bad)
(bad)
jne
add
rcr
(bad)
cmp
cli
arpl
jle
sahf
add
push
sbb
addr16
mov
fmul
outs
adc
push
pop
rcl
scas
jle
retf
mov
adc
cmp
in
fild
stc
dec
shr
add
dec
xchg
mov
bsf
fwait
cmp
scas
rol
and
cmp
pop
repnz
rol
imul
sbb
lods
ja
es
sbb
sub
popf
add
sbb
fdiv
stos
(bad)
or
inc
mov
pop
loope
pop
loop
sub
mov
stos
cmp
push
out
aas
or
lods
ret
icebp
sub
cwde
xchg
jp
dec
mov
(bad)
fdivp
sub
and
xchg
cdq
leave
push
mov
sub
call
(bad)
in
nop
mov
pusha
sub
inc
push
mov
(bad)
adc
enter
sbb
xchg
adc
jnp
pop
jmp
out
stos
push
and
mov
iret
imul
cwde
leave
jne
into
loopne
out
neg
hlt
daa
loop
mov
xor
ror
mov
pop
call
inc
push
adc
call
push
and
and
daa
and
adc
jnp
in
outs
aas
inc
mov
and
mov
xlat
cmp
cmc
or
cmp
push
and
cmp
pop
mov
cmp
push
scas
sub
add
lock
pop
mul
stos
push
es
mov
mov
pop
imul
in
or
adc
adc
cmp
push
jmp
pop
push
sub
out
sbb
clc
xchg
data16
xchg
inc
in
mov
imul
sub
jmp
pop
fwait
dec
pop
push
cs
out
test
mul
arpl
loope
jbe
(bad)
cmp
daa
stos
cmps
jns
mov
xchg
xchg
xchg
pop
sub
mov
loopne
in
mov
call
scas
sbb
fldenv
bound
jo
stos
jmp
call
repz
shr
ret
push
js
es
stc
sbb
daa
inc
ja
loope
sbb
int
push
dec
and
mov
inc
cdq
hlt
nop
cmc
xchg
repnz
xlat
sub
fadd
ins
hlt
jmp
fwait
xchg
add
mov
jge
adc
ds
je
ret
out
mov
sub
in
fisttp
cmp
push
push
ffreep
popf
and
jb
(bad)
dec
mov
mov
cmp
fs
nop
lahf
sbb
dec
iret
ds
or
pop
push
jmp
and
hlt
imul
jne
xchg
arpl
jp
mov
push
jne
stc
call
jmp
push
fld
out
cmc
cld
shl
push
add
movs
xchg
sbb
mov
adc
addr16
(bad)
data16
(bad)
jbe
adc
shl
(bad)
cmp
shl
push
jecxz
rcl
push
and
sub
ss
dec
jle
stos
inc
jae
and
jp
outs
sti
and
fsubr
js
lods
xchg
dec
in
in
cmp
push
loopne
test
scas
sbb
cmp
mov
or
ror
adc
dec
inc
popa
movs
xor
mov
popf
popf
sub
rcr
push
mov
inc
sahf
pop
cmp
into
rol
lahf
cmovne
lods
sbb
mov
into
xchg
fistp
push
jns
ins
jmp
xor
(bad)
dec
adc
fistp
inc
mov
jmp
test
outs
and
adc
clc
scas
jae
les
mov
mov
adc
sub
xor
dec
mov
rcr
and
mov
and
test
pop
push
sbb
mov
push
mov
lea
or
sbb
cwde
stos
pop
loopne
je
xchg
cmps
stos
cwde
mov
ret
inc
outs
push
sahf
call
sti
dec
and
mov
pop
stos
rol
cmp
(bad)
imul
mov
mov
sub
sbb
inc
mov
mov
push
clc
mov
ds
fwait
in
or
sahf
cmps
inc
sbb
adc
fisttp
arpl
call
mov
stos
jg
inc
xchg
mov
jmp
xchg
jmp
gs
leave
aas
nop
push
mov
push
mov
iret
ss
es
outs
mul
hlt
icebp
mov
inc
xchg
in
shl
mov
mov
stos
mov
lea
mov
fwait
or
cmovo
push
pop
add
stos
xchg
xor
add
(bad)
xchg
cwde
sub
test
sbb
mov
ret
jmp
or
icebp
or
out
retf
sub
dec
test
clc
sub
inc
idiv
iret
xor
fisttp
sub
mov
pop
loop
mov
adc
xchg
jg
(bad)
and
pop
inc
les
add
js
scas
dec
xor
jno
pop
sbb
iret
test
in
and
xlat
out
sbb
into
push
cmp
(bad)
out
pop
inc
movs
out
pop
xor
dec
or
push
into
and
pop
cdq
mov
dec
cmp
movs
lock
mov
into
fistp
sub
pushf
xchg
test
jg
in
jg
mov
cld
(bad)
add
dec
mov
pop
xchg
or
dec
and
test
pop
and
xor
cli
jl
enter
or
ds
into
xchg
add
fimul
daa
jno
icebp
in
fucom
adc
loope
xor
fsubr
pop
(bad)
test
xchg
je
add
xrelease
scas
rcl
adc
je
jns
fdiv
mov
pusha
imul
push
or
sbb
xor
xchg
stc
adc
xor
enter
cmp
(bad)
lea
aam
in
inc
push
movs
cld
lahf
addr16
mov
lock
movs
inc
and
lahf
test
sub
mov
inc
loop
pop
inc
or
cmps
sub
add
cli
leave
pop
cmp
xor
push
or
xchg
jnp
xchg
gs
mov
in
xchg
inc
sahf
jo
xlat
mov
mov
neg
mov
xor
jmp
mov
in
dec
jge
retf
jae
cmp
xchg
aam
cwde
ret
es
xor
sub
add
pop
sbb
and
add
cli
dec
sbb
int
adc
jbe
xor
or
mov
fstp
sar
xlat
or
push
push
dec
cdq
inc
push
or
inc
xchg
mov
pop
adc
jbe
push
inc
xor
pop
pusha
pop
adc
(bad)
inc
xchg
enter
dec
mov
ins
mov
popa
retf
cdq
inc
push
jnp
xchg
push
push
or
pushf
xchg
fld
dec
sub
xchg
mov
mov
sub
xchg
mov
sub
pop
add
jb
mov
jnp
push
movhps
push
rol
lods
mov
repz
out
cmp
out
mov
gs
test
rcl
imul
xor
jp
fistp
loope
out
add
std
daa
jne
pop
sbb
cmp
dec
push
xor
lods
pop
hlt
test
cmps
popa
sbb
retf
push
jl
jbe
inc
fnstsw
arpl
mov
jno
pop
mov
ins
rcr
clc
jnp
xchg
add
xor
jge
jle
mov
inc
data16
movs
stos
aaa
fldenv
in
clc
fadd
out
ds
sbb
mov
loopne
stos
arpl
mov
mov
cmps
mov
push
ds
nop
sub
adc
loopne
pop
and
mov
adc
dec
std
xchg
ja
test
and
repnz
aam
or
xor
cmc
loope
jmp
mov
add
sub
adc
sbb
je
xchg
pop
movs
pushf
mov
mov
and
stc
cmp
in
or
or
adc
push
cmp
mov
mov
jns
cs
imul
(bad)
iret
repnz
popf
xor
sti
adc
lods
jmp
pop
jg
mov
or
cs
lods
pop
lahf
scas
xor
test
push
mov
stos
cdq
loop
jo
pop
retf
jmp
xor
mov
sar
sub
mov
jne
mov
adc
push
mov
outs
nop
and
rcr
out
sub
jmp
test
dec
xor
sub
inc
dec
les
jle
bound
rcl
rcr
jns
or
sub
dec
or
push
clc
adc
(bad)
fwait
dec
xchg
mov
cmps
mov
leave
pop
inc
(bad)
jmp
fs
cld
pop
repz
sub
add
sub
lahf
push
or
sub
fwait
cs
sub
sar
sub
scas
mov
add
outs
mov
out
ds
mov
stos
xchg
cmp
push
or
gs
cmp
cwde
mov
retf
xor
pop
jb
inc
aad
(bad)
ror
xor
add
dec
outs
fwait
cmp
call
ret
call
lods
push
mov
sar
sbb
cmp
outs
out
cmp
ret
les
mov
cs
fst
lahf
add
(bad)
jo
mov
pop
in
lods
push
in
mov
inc
adc
mov
nop/reserved
xchg
adc
jno
push
mov
mov
scas
pop
and
xor
mov
ja
imul
mov
mov
or
je
mov
xor
add
call
mov
data16
push
out
dec
fcmovb
mov
aam
mov
jle
inc
sub
scas
push
aas
cmp
or
aas
add
xor
aad
adc
xchg
jecxz
jge
loop
and
jmp
push
or
test
jmp
jmp
iret
outs
dec
ret
adc
outs
ins
or
les
jnp
or
int3
xchg
inc
in
pop
ret
jp
and
dec
dec
leave
js
loope
dec
sub
pushf
js
aad
push
repnz
sahf
sbb
data16
cwde
xor
add
mov
pop
iret
shl
iret
jbe
nop
shl
jp
fwait
push
push
test
sbb
ja
xchg
pop
addr16
(bad)
mov
pop
aad
ins
(bad)
pop
and
sbb
mov
movs
jo
mov
cs
cwde
dec
mov
push
(bad)
ins
sub
in
cmp
mov
mov
outs
pop
aas
pop
daa
fwait
dec
mov
sbb
out
ret
pop
push
jbe
sar
out
mov
test
inc
sbb
and
loopne
sub
inc
inc
test
ins
out
or
xadd
sub
std
adc
pop
ja
push
dec
push
pop
mov
arpl
and
icebp
ret
es
pop
mov
inc
outs
pop
pop
das
out
xchg
test
or
and
mov
xchg
or
test
mov
jmp
dec
adc
popf
and
fsubr
int
inc
push
ins
pop
leave
or
hlt
adc
dec
repnz
mov
(bad)
sbb
cmpxchg
test
enter
scas
std
daa
(bad)
mov
leave
jp
jl
xchg
pop
mov
push
and
jmp
cmp
jnp
mov
add
cmc
push
call
inc
stos
pop
fidivr
fstp
pop
repz
pop
loopne
cdq
mov
sbb
adc
sub
push
sbb
mov
loop
and
std
(bad)
(bad)
mov
cmp
mov
xchg
in
retf
mov
fs
xor
mov
hlt
(bad)
in
sub
gs
mov
pop
repz
mov
mov
sbb
mov
jecxz
xchg
pop
sub
xor
xlat
sub
rcr
fwait
sbb
rcr
mov
xchg
push
lods
ror
sbb
in
ss
or
movs
out
xchg
retf
call
lea
nop
mov
inc
int3
add
pop
push
add
mov
test
cmp
xchg
cmp
dec
or
jo
ins
(bad)
es
sbb
int
mov
inc
jge
inc
(bad)
and
lahf
push
bound
inc
adc
cmps
push
pop
mov
adc
pop
gs
das
add
rcr
ret
cmp
inc
jns
(bad)
addr16
mov
adc
mov
or
iret
repz
nop
xor
call
daa
add
in
inc
outs
pop
scas
lods
pop
retf
(bad)
std
mov
mov
inc
pop
adc
add
es
loop
aam
ins
inc
or
cdq
mov
push
mov
add
cmp
repz
cmp
xor
xlat
(bad)
fwait
inc
adc
outs
das
js
sub
add
mov
mov
ss
das
popa
cdq
movs
dec
fadd
fidivr
movs
jo
jns
ds
mov
cmp
and
lds
retf
into
or
or
add
test
xchg
cmp
sub
adc
lds
(bad)
adc
or
aas
mov
or
lea
pop
jmp
clc
pop
aad
pop
or
test
hlt
vpshufhw
add
test
xlat
mov
mov
mov
xor
out
hlt
adc
dec
retf
cmp
mov
mov
cmp
sub
lods
push
or
cmp
cmp
push
mov
pop
(bad)
cmp
inc
in
dec
adc
pushf
cmp
or
push
shl
dec
ret
les
xchg
popa
out
ret
test
rcr
in
bound
aad
jp
and
xchg
cdq
movs
daa
jl
jae
dec
dec
out
mov
cld
mov
cli
sbb
adc
pop
jnp
sbb
dec
sbb
push
sub
dec
stos
or
mov
popf
mov
out
iret
xor
and
xchg
add
and
xchg
add
pop
mov
jg
loop
add
push
mov
push
mov
fist
sub
sub
cmp
xor
sub
xchg
add
loop
dec
in
jns
xchg
mov
pop
rol
stos
mov
enter
cmps
cmp
sbb
xchg
dec
leavew
retf
fnstsw
push
dec
je
test
stos
test
and
out
dec
movs
or
inc
pop
je
push
daa
dec
adc
mov
cwde
call
sbb
dec
and
fidivr
or
mov
cmps
scas
adc
xor
test
pushf
sahf
push
adc
xor
or
xlat
push
pop
pop
sahf
jbe
inc
xor
lds
jge
and
repz
xchg
rol
jmp
xchg
call
or
add
mov
imul
push
jp
lock
imul
repz
add
and
sbb
dec
mov
dec
inc
or
aad
and
cli
push
jo
cmp
icebp
xlat
jnp
(bad)
mov
scas
ins
adc
int
mov
adc
adc
inc
pop
sti
mov
pop
popa
add
fidivr
jno
lock
push
push
xchg
fistp
aaa
adc
xor
int3
jae
cwde
inc
ds
sub
addr16
mov
xchg
clc
jmp
pop
pushf
mov
movs
mov
ret
clc
pop
jne
mov
pop
aam
ss
leave
mov
inc
sti
paddusw
lahf
mov
ins
or
test
sbb
popa
xchg
ficomp
sbb
ja
pusha
dec
scas
jecxz
dec
and
jbe
fisttp
aas
repnz
div
add
cmps
sub
clc
shl
jge
sti
cmp
jne
ret
pop
cmp
and
cmp
aam
(bad)
adc
ss
mov
cwde
jp
xor
and
ret
sti
movs
dec
js
pusha
nop
shl
and
fmul
sbb
call
movs
lahf
push
pop
mov
pop
and
test
dec
inc
sub
adc
lock
fistp
imul
fsubr
and
jmp
test
pmaddwd
push
adc
out
sbb
ret
or
imul
sub
and
mov
scas
dec
xor
and
std
test
repnz
gs
ins
and
(bad)
mul
and
aam
lea
sti
ins
xchg
hlt
das
sub
cmp
enter
in
data16
mov
aas
call
in
arpl
pop
add
hlt
dec
(bad)
es
adc
cmps
sti
cmps
loope
dec
dec
mov
push
aaa
(bad)
loopne
test
sti
push
cmp
je
movs
jmp
jg
pop
adc
fwait
cs
into
mov
inc
xlat
stos
lahf
jnp
dec
pop
inc
dec
inc
out
or
or
xchg
push
adc
sar
jge
add
add
mov
xchg
dec
enter
pop
adc
dec
jo
mov
fimul
cmc
or
push
stos
mov
pop
cld
aas
mov
sub
lods
xor
shr
xor
iret
sbb
mov
push
aam
ror
xor
imul
adc
add
jmp
js
neg
mov
or
clc
stos
push
pop
mov
pusha
(bad)
fdivp
dec
(bad)
lahf
xchg
cmp
pop
jns
nop
(bad)
pusha
fs
xor
fidiv
ja
fucom
std
setle
shl
fcomip
push
xchg
inc
xor
or
mov
fld
and
out
push
mov
ins
or
loop
dec
sbb
mov
jbe
fs
das
into
les
pushf
pop
jle
xchg
push
(bad)
xchg
das
stos
mov
pop
in
test
push
push
scas
(bad)
or
push
mov
xor
(bad)
cmovae
sbb
mov
cmp
loope
inc
sub
cmp
clc
push
cmp
mov
ins
sbb
xor
sbb
mov
sub
repz
clc
fcmove
and
dec
int3
sbb
mov
mov
and
dec
xor
pop
sub
fdivr
xor
adc
(bad)
pop
test
pop
mov
stos
rol
ins
cmp
xchg
ss
shr
mov
js
dec
fdivr
xchg
mov
mov
aas
imul
and
push
retf
jns
clc
fs
sub
call
ror
js
pop
push
xchg
ss
sahf
xchg
into
fucomp
cmc
inc
and
int
mov
xor
xchg
pop
inc
test
fs
add
mov
cmp
jne
push
adc
mov
pop
mov
mov
and
sub
sub
arpl
in
mov
xor
jbe
mov
addr16
xchg
fbld
cmps
mov
iret
push
or
hlt
mov
(bad)
into
arpl
pop
icebp
sbb
cmp
mov
lods
fwait
sbb
mov
add
pop
mov
pop
add
movs
out
and
xlat
add
inc
ins
or
stos
pop
jle
ds
movs
inc
call
fadd
imul
hlt
lahf
ret
std
iret
out
and
jecxz
mov
cmc
std
clc
inc
dec
inc
xor
or
adc
xor
xchg
outs
mov
scas
movs
int3
dec
aas
mov
adc
mov
sub
mov
js
je
xor
retf
mov
adc
mov
xor
call
int
cmc
jecxz
adc
add
ret
jae
and
rol
and
shl
in
jns
add
inc
fistp
push
gs
or
dec
ja
test
add
inc
push
cmp
fsubr
xchg
loop
dec
(bad)
push
(bad)
jp
mov
sbb
arpl
ins
inc
gs
retf
cmp
add
jmp
mov
add
(bad)
fiadd
pop
jg
ds
mov
xchg
clc
mov
mov
mov
pusha
aaa
enter
dec
bound
and
cmp
pop
mov
jb
jno
sub
push
mov
or
(bad)
loopne
add
jns
lea
je
push
mov
or
popa
hlt
add
sub
pushf
sub
inc
or
and
ja
mov
gs
shl
jo
mov
and
xor
jp
xor
bt
unpckhps
daa
ja
mov
add
cmps
sar
stos
daa
sub
jne
push
dec
jl
pop
out
addr16
jmp
push
or
div
sahf
leave
jl
xchg
lods
sub
mov
outs
ja
jmp
mov
pop
clc
gs
das
lahf
xchg
inc
scas
jmp
sbb
aam
in
leave
push
loopne
dec
enter
xchg
pusha
ret
out
jae
cld
cmp
gs
adc
movs
test
jp
sbb
push
rcr
stc
lea
xchg
sub
sbb
test
sub
shl
xor
push
sub
bound
mov
lock
pop
cs
inc
rol
xor
jns
aad
jmp
push
pop
aaa
ins
add
xor
pop
and
leave
(bad)
pushf
outs
jo
add
jb
sbb
outs
sti
out
data16
xchg
jp
imul
dec
cwde
mov
(bad)
scas
into
hlt
je
call
sub
fnsave
and
xchg
imul
push
and
jmp
std
imul
pop
sbb
push
sub
lahf
xchg
leave
out
add
add
rcl
ret
cmc
fisttp
frstor
pop
sub
dec
rcr
dec
mov
mov
aaa
test
inc
and
popa
pop
lea
or
mov
mov
xor
int3
pop
into
mov
sub
lods
ret
push
xor
(bad)
mov
adc
shr
shl
sub
in
inc
pop
nop
call
js
xchg
lds
jge
mov
push
jns
cs
xlat
out
jne
movs
inc
add
(bad)
mov
movs
movs
sahf
call
sub
mov
cmp
movs
loope
inc
jmp
adc
jns
push
mov
xor
add
retf
inc
mov
add
mov
xchg
test
jge
xlat
pop
mov
(bad)
sub
dec
fucom
lods
dec
push
jp
sub
push
dec
call
adc
xchg
test
icebp
loope
shl
(bad)
mov
call
inc
popf
cmp
mov
jecxz
cs
ds
mov
jl
mov
es
lds
jo
shl
pop
hlt
sub
rcl
les
ja
outs
movs
jle
cwde
retf
je
in
sar
hlt
pusha
int
lods
pop
pop
std
lods
pop
ds
add
lods
inc
popf
pop
cmp
dec
or
(bad)
or
xlat
out
jb
out
cmc
mov
pop
or
cwde
daa
and
pop
std
cmp
pop
dec
js
lods
cmp
xchg
aas
mov
adc
fisttp
jbe
ds
add
push
xchg
shl
cld
iret
cmp
add
jae
dec
outs
stos
mov
and
(bad)
cmp
aad
and
dec
mov
hlt
inc
mov
pusha
cmp
scas
adc
loope
xchg
sub
popa
jl
cmp
inc
dec
sbb
push
vmread
and
test
repnz
aas
mov
xchg
adc
fs
dec
push
or
mov
out
mov
pop
out
test
pop
(bad)
push
imul
cmp
push
pushf
mov
jge
mov
adc
inc
jne
fst
sub
(bad)
mov
mov
pop
mov
fild
iret
std
add
push
lea
xchg
int3
gs
(bad)
xchg
(bad)
mov
sar
pop
push
fwait
int
clc
mov
ffreep
out
popf
gs
jl
aas
cmp
cmps
cmp
sbb
jle
jns
mov
push
scas
lods
fucomi
hlt
xchg
sti
mov
add
xor
add
xor
or
pop
(bad)
cld
leave
push
aas
push
add
ffreep
mov
jns
push
push
jecxz
mov
retf
mov
cmps
(bad)
push
pushf
pop
es
mov
push
xchg
add
jb
push
jb
mov
movs
jge
aad
test
push
addr16
shr
arpl
fld
pusha
ins
cmp
fdivr
jmp
sbb
pusha
imul
call
loop
dec
push
retf
inc
retf
addr16
jmp
je
sub
and
mov
push
mov
mov
pop
int3
cdq
or
or
jmp
pop
pop
sub
loope
or
daa
jo
fs
out
mov
push
inc
fcmovbe
pop
js
xchg
inc
mov
cmp
loop
(bad)
xchg
sahf
inc
mov
lds
movs
dec
int3
mov
addr16
addr16
outs
pop
xchg
mov
push
cmps
jmp
and
or
sbb
fwait
push
or
test
(bad)
fsub
inc
mov
inc
ja
inc
sbb
dec
mov
cmc
rol
jle
adc
pop
jae
dec
arpl
mov
movs
movs
pop
pop
(bad)
pop
into
je
test
fist
test
retf
enter
mov
add
adc
(bad)
ret
scas
and
pop
leave
push
sub
sub
adc
xchg
mov
sbb
mov
ficom
xchg
js
outs
dec
sbb
mov
cmc
push
or
repz
jmp
sbb
movs
ss
repz
add
cmps
call
xchg
imul
clc
cs
jne
mov
add
sub
push
arpl
push
mov
inc
cld
fcomp
inc
iret
dec
in
ror
sbb
jmp
mov
lock
and
movs
inc
ret
sbb
cmp
clc
mov
arpl
mov
mov
in
sub
cmc
enter
mov
imul
xor
daa
jl
(bad)
in
cmc
xlat
xchg
and
xchg
sub
push
mov
les
cmp
out
(bad)
adc
cmp
and
js
push
add
jp
mov
cmp
(bad)
ds
fbld
adc
movs
cmp
jl
sbb
jbe
jecxz
push
mov
xor
cmp
pop
jp
and
popf
arpl
(bad)
idiv
jo
sbb
xchg
aas
test
pop
push
jno
gs
xchg
outs
xchg
sub
cmps
loope
sbb
or
dec
imul
in
popa
hlt
xor
jg
pop
jne
xlat
call
jae
jns
fcmovnu
shr
imul
inc
xor
loop
cvtdq2ps
inc
scas
pop
inc
add
inc
stos
cmp
es
cmps
scas
mov
sub
mov
cmps
movs
sbb
mov
xor
arpl
jl
inc
sbb
outs
ds
repnz
xacquire
mov
xlat
int3
or
cmp
mov
push
jae
ficom
dec
fdivr
out
and
cmp
mov
and
add
test
loope
mov
iret
push
mov
xchg
fcomp
or
cwde
jp
es
mov
(bad)
jo
test
pop
cmps
fnstcw
ds
pop
push
pop
rcr
adc
jle
lea
int3
or
push
sub
out
cmp
ja
inc
inc
mov
jle
shl
and
test
push
xor
pop
and
test
xor
sbb
mov
movs
add
jl
scas
mov
data16
ds
ret
sub
lods
sub
hlt
fidivr
inc
xor
mov
fs
enter
aaa
mov
jmp
dec
fldcw
jnp
and
les
icebp
ret
pop
xchg
mov
and
jp
dec
(bad)
cmp
pop
clc
ficomp
scas
pop
adc
jnp
cld
fucomp
or
sub
test
test
neg
sub
aam
out
push
sub
aas
push
cmp
or
jne
scas
in
dec
push
lea
aam
push
inc
mov
int3
add
js
mov
shl
les
es
fistp
loopne
mov
mov
sub
out
popf
mov
int3
push
es
retf
inc
and
(bad)
xchg
pusha
imul
inc
push
mul
bound
mov
es
imul
in
movs
call
sbb
xchg
xor
dec
push
pop
sbb
adc
inc
xchg
push
mov
adc
jecxz
inc
dec
mov
dec
mov
test
inc
inc
ins
bound
call
sub
and
push
imul
push
lods
cmc
pop
lea
nop
js
push
cdq
daa
pusha
xchg
pop
jp
arpl
hlt
imul
and
jle
and
jae
mov
mov
sub
sbb
and
mov
lods
xchg
inc
gs
add
dec
call
and
pop
dec
mov
and
sbb
sub
xor
ret
mov
stos
add
das
xchg
pop
fidivr
aaa
push
mov
cdq
sub
xor
ss
adc
jbe
jbe
inc
int3
push
sbb
dec
shl
add
mov
jl
inc
add
pop
dec
mov
aaa
stc
jmp
cmps
fstp
mov
inc
int3
pop
inc
cmps
ret
mov
jmp
mov
mov
sbb
call
fsubr
mov
sahf
push
jmp
ret
mov
movs
push
mov
cmp
add
sahf
std
jmp
fsub
mov
cmps
cdq
add
and
in
fs
push
mov
push
cdq
push
sbb
scas
loop
out
mov
adc
or
cmp
hlt
data16
jb
mov
jnp
pushf
mov
dec
movs
or
push
mov
add
sar
cdq
in
(bad)
mov
inc
lahf
jbe
pop
xor
mov
add
std
add
sbb
sub
xchg
mov
and
mov
and
dec
in
sub
sub
arpl
push
add
sbb
in
fisubr
mov
add
xchg
xor
lods
mov
movs
in
ja
jmp
retf
idiv
and
xchg
add
iret
outs
dec
pop
add
ss
arpl
pop
std
inc
xchg
iret
cs
cmp
push
outs
or
ret
dec
mov
xor
icebp
ret
jmp
pop
mov
out
and
add
mov
sub
jge
and
leave
dec
icebp
test
cmc
mov
xchg
sahf
cwde
add
and
mov
jo
out
jg
clc
sub
fisubr
cmp
xchg
ds
mov
stos
sbb
sbb
dec
mov
jmp
test
sub
pop
dec
pop
enter
ss
mov
outs
mov
les
fidiv
and
(bad)
jmp
inc
out
or
lock
fcmovnu
and
or
icebp
int3
fwait
iret
add
mov
daa
xchg
pop
aas
mov
pop
shr
and
pop
stos
lock
sahf
and
mov
sti
iret
pop
je
aad
sti
mov
loop
add
repnz
inc
mov
mov
loopne
push
clc
rol
ret
xchg
(bad)
fist
jo
inc
sub
(bad)
(bad)
mov
mov
and
gs
fwait
mov
sbb
mov
aad
(bad)
aaa
mov
mov
retf
mov
add
lahf
or
cmp
pop
ret
aas
cmp
pop
ficomp
outs
fistp
jp
and
popa
push
popf
mov
std
mov
mov
je
ret
jno
or
push
fcomp
push
jge
add
jg
mov
imul
in
sbb
test
adc
jmp
imul
mov
and
add
mov
xchg
xchg
fldln2
sar
ins
pop
push
mov
sub
push
retf
iret
ror
inc
sub
mov
add
push
xchg
mov
(bad)
cli
movs
es
sub
push
or
cmp
adc
call
cmp
adc
popa
test
pop
rol
imul
and
repz
(bad)
inc
jecxz
pop
or
sbb
pusha
pop
je
xchg
(bad)
clc
test
and
lea
loope
lods
or
cmps
sbb
gs
lods
inc
mov
mov
loopne
sub
std
pop
pop
jno
or
sub
jmp
xchg
aaa
into
outs
mov
mov
jmp
(bad)
mov
adc
mov
neg
xchg
adc
sbb
leave
sbb
cmp
cli
cmp
pop
jmp
sub
sbb
dec
push
jne
dec
jecxz
pop
icebp
dec
mov
dec
xor
pushf
push
clc
fistp
jl
xchg
dec
ror
xor
fsub
jecxz
cwde
pop
retf
jae
cmp
dec
mov
cld
pushf
adc
repz
je
in
mov
shl
rcl
lahf
mov
bound
jmp
in
(bad)
fwait
out
mov
sar
inc
pop
pop
aam
inc
(bad)
int
and
cs
inc
lds
retf
add
dec
dec
inc
inc
adc
sub
std
cli
in
jno
int
iret
lock
cwde
loope
mov
clc
lock
(bad)
xor
push
add
dec
add
imul
mov
outs
scas
push
sbb
lahf
js
mov
push
out
jb
repz
sbb
dec
or
mov
std
push
adc
leave
cmps
or
fidiv
mov
je
ss
repz
pusha
jmp
cmps
sahf
xchg
in
arpl
lock
test
sbb
sbb
jo
mov
sub
mov
push
sub
std
inc
iret
push
rcr
dec
cwde
sar
mov
pop
jno
into
mov
xchg
xchg
adc
sbb
push
jg
xchg
sbb
lods
sbb
xchg
in
js
test
add
add
stos
popf
dec
push
clc
adc
mov
add
sbb
dec
xchg
mov
push
or
jmp
mov
and
mov
or
push
(bad)
sbb
sti
sbb
add
bound
stc
cmc
add
(bad)
dec
jmp
cwde
rcl
dec
push
mov
jnp
push
scas
jmp
sbb
mov
adc
pusha
jne
jae
enter
scas
jmp
jae
jp
(bad)
stc
and
ret
pop
or
sbb
push
lods
sub
fstp
js
jmp
inc
cdq
loope
gs
imul
rol
in
pop
int3
(bad)
stos
imul
mov
cmp
fbstp
lea
jb
push
xchg
repz
sub
std
(bad)
out
lds
jnp
mov
or
pop
nop
xchg
dec
lahf
ds
test
repnz
ins
out
jle
mov
sub
inc
mov
sub
test
pop
jp
out
fwait
push
loope
adc
xor
pop
scas
fnstsw
mov
inc
ror
pop
fwait
int3
div
ret
sbb
sub
sbb
(bad)
out
(bad)
mov
gs
jb
and
fsubr
cmp
ret
cdq
mov
fs
dec
fsubr
jle
out
adc
sub
mov
add
cld
stc
mov
jmp
mov
inc
pop
sbb
inc
push
mov
push
fild
and
jmp
out
outs
test
sti
dec
mov
sbb
aaa
movs
(bad)
fcom
(bad)
ss
dec
in
imul
repnz
pop
adc
retf
cmc
add
sbb
test
jnp
pop
outs
cmp
mov
push
in
or
punpckhdq
jmp
addr16
cmps
ds
dec
sahf
jmp
sbb
mov
rcr
iret
mov
fisubr
jle
repnz
push
inc
fisttp
adc
lds
jge
mov
jle
jo
dec
das
imul
(bad)
mov
rol
sbb
jecxz
lods
push
mov
mov
jl
push
stos
push
arpl
mov
push
pusha
outs
repz
lahf
jae
push
jl
adc
stos
pop
in
push
enter
jae
shl
mov
repz
shl
shl
sub
sti
ds
adc
rcl
push
or
arpl
test
mov
std
loopne
dec
(bad)
hlt
inc
adc
fmul
imul
js
mov
cmp
jmp
daa
aas
jb
fwait
mov
mov
xchg
pop
add
push
push
dec
cli
jmp
retf
xchg
pusha
frstor
(bad)
mov
jne
sbb
mov
add
frstor
jge
push
loopne
inc
fstp
fwait
cmpxchg
je
shl
shr
stos
in
(bad)
cs
inc
adc
push
and
dec
shl
sbb
lods
sbb
mov
(bad)
hlt
mov
xor
in
and
scas
pushf
mov
xchg
repnz
test
loopne
fimul
dec
js
push
cmp
pop
xchg
clc
ins
test
inc
aam
jbe
mov
sub
jge
push
sub
idiv
dec
pop
lock
add
jo
inc
in
push
cdq
cwde
ins
int
xchg
pop
pop
sub
jmp
scas
sbb
test
jp
mov
sub
ja
ret
data16
jle
shl
cmc
xor
xor
das
xchg
xchg
sti
or
adc
icebp
pop
imul
mul
ins
or
mov
sbb
jo
xchg
inc
jbe
xchg
inc
mov
bound
into
push
push
fs
cmp
mov
and
mov
mov
test
mov
fwait
rcr
cmp
and
and
shl
jmp
call
pop
retf
push
pop
and
push
mov
dec
ret
lds
stc
call
jnp
scas
push
fmulp
into
xchg
loope
cmp
xor
adc
fwait
les
aaa
fs
repz
cs
test
lock
cdq
test
sub
push
fisttp
push
std
xchg
mov
and
cmp
ja
sbb
adc
sub
and
push
add
push
mov
jae
mov
pop
in
xchg
fisub
sub
arpl
mov
ret
inc
fs
push
(bad)
inc
jge
addr16
jg
in
jne
fbld
xor
adc
outs
cmp
mov
inc
or
pop
jmp
(bad)
shr
add
fistp
dec
bound
outs
push
adc
addr16
call
sbb
repnz
arpl
push
cmc
mov
mov
xchg
push
mov
call
or
cli
inc
sti
ret
and
pop
sub
out
mov
sub
jge
mov
mov
loop
idiv
mov
mov
ds
jmp
test
(bad)
xor
retf
inc
mov
inc
xor
movs
dec
push
pop
out
test
out
jmp
pop
dec
or
mov
hlt
pop
cmp
jmp
mov
inc
jns
jns
fisttp
(bad)
lods
out
xchg
pop
in
jge
mov
inc
adc
ror
cmp
cmp
push
icebp
dec
popf
call
inc
imul
addr16
cli
push
mov
data16
nop
push
cmp
cmps
int3
cmp
xchg
mov
hlt
cmp
bound
stos
cdq
lods
aam
add
loopne
out
jl
cmc
add
fldcw
retf
test
dec
ins
fld
jb
fwait
movs
nop
ja
inc
mov
and
inc
xchg
ins
mov
rcr
les
loopne
pop
cwde
sub
ins
gs
bnd
mov
aas
pop
fisttp
sbb
cs
mov
adc
jp
bound
push
jno
lahf
sbb
push
add
push
jo
fisttp
fidivr
jg
mov
clts
loop
inc
sub
cmp
push
inc
mov
ror
pop
fs
adc
out
jl
arpl
add
jg
es
add
in
loope
cmp
test
fistp
adc
das
inc
xchg
cmps
clc
cmp
jbe
pop
add
sub
int
dec
out
sub
dec
out
clc
fdiv
stc
jge
fidiv
sub
in
test
cwde
add
sbb
(bad)
nop
jo
push
push
and
repz
push
hlt
lods
and
jne
dec
fst
push
je
jp
fistp
and
movs
pop
and
dec
jbe
xchg
jno
ret
cmp
inc
mov
loopne
fcmovnbe
pop
mov
dec
mov
jle
lods
inc
push
scas
iret
mov
cmp
pop
es
xchg
fadd
xchg
cli
movs
cwde
pop
retf
hlt
call
mov
(bad)
jae
and
jecxz
mov
sub
cmps
ins
adc
bound
movs
(bad)
dec
imul
dec
mov
cld
js
out
icebp
(bad)
mov
sub
pop
arpl
adc
scas
push
push
xor
mov
(bad)
jp
inc
clc
ret
cmp
ror
mov
push
xor
adc
(bad)
aas
stc
lea
pop
ror
call
mov
retf
sbb
jns
call
out
pop
and
xchg
inc
cmp
pop
(bad)
and
cmp
inc
inc
fistp
xor
mov
push
nop
mov
sub
cmc
cdq
sahf
fisubr
(bad)
push
sub
push
mov
scas
pop
xchg
(bad)
sbb
sub
xchg
imul
dec
xchg
test
icebp
push
mov
or
ja
xchg
push
mov
shl
push
push
xor
push
jmp
es
add
rol
test
(bad)
jno
pop
dec
jmp
ret
dec
mov
cmp
add
and
cmp
xor
jecxz
xchg
xor
jl
fist
mov
out
jg
xchg
sub
jno
pop
inc
cmps
aas
sbb
loopne
mov
mov
movs
loopne
sbb
loopne
sbb
jo
xchg
xor
push
aaa
pop
aam
lock
mov
aad
push
adc
daa
cmp
mov
inc
sbb
loopne
dec
adc
or
pop
mov
movs
sbb
test
sar
nop
cmp
mov
xchg
shr
jmp
push
or
xor
test
mov
add
xchg
into
mov
mov
mov
mov
scas
sbb
xlat
push
cmp
mov
ret
jo
call
test
mov
mov
ss
add
repnz
sbb
jmp
jb
stos
mov
jbe
pop
dec
xlat
and
daa
sti
push
inc
js
test
jo
aad
dec
and
iret
xchg
and
pop
daa
pop
rcl
pushf
cli
retf
fild
pop
fcom
lea
xchg
mov
in
mov
in
test
push
xchg
ret
cmp
(bad)
(bad)
in
xchg
sbb
ret
outs
or
fcom
mov
cmp
or
int
fnstsw
mov
fwait
mov
ins
ds
sbb
(bad)
scas
ret
ins
sahf
data16
sbb
cmp
sub
sub
sar
pop
cmps
ror
and
jae
movs
mov
mov
inc
push
(bad)
xor
nop
popa
sub
pop
and
js
add
mov
dec
repnz
icebp
cmp
jg
pop
ret
in
retf
pop
ja
movs
lahf
stc
iret
sub
push
sahf
adc
jb
mov
sub
xchg
inc
jo
mov
dec
xchg
mov
mov
jbe
call
mov
push
mov
enter
je
dec
ss
pop
jns
sub
les
repz
sub
add
ins
lahf
and
rcl
push
mov
in
ds
mov
pop
sbb
jo
stos
hlt
inc
sar
sub
fdiv
rcl
fild
sub
add
mov
mov
ins
int
pop
in
sbb
push
cmps
dec
mov
xchg
outs
pop
loope
mov
inc
sbb
mov
push
nop
es
inc
daa
adc
pop
(bad)
ds
inc
jp
je
jns
das
xchg
aaa
add
mov
xor
sbb
xchg
stos
push
cmp
mov
inc
int3
jbe
jnp
fld
jb
sub
xchg
jmp
fnstsw
mov
icebp
js
jae
cmps
dec
cmp
xchg
imul
jecxz
pop
inc
mov
pushf
and
cs
xor
movs
pop
jns
or
xchg
pop
test
(bad)
imul
and
inc
xor
or
cmp
ja
xchg
jl
mov
fwait
cld
push
and
adc
sbb
push
cmp
cwde
dec
mov
pop
stos
mov
add
mov
lahf
mov
in
loop
shl
cmp
call
mov
add
fcomp
xchg
fwait
pop
mov
stc
lds
cmp
mov
call
int
fwait
sbb
lods
xchg
lods
retf
mov
inc
fs
cmp
retf
dec
pop
leave
cmp
cmp
bound
add
leave
pop
ret
dec
pop
lock
mov
sbb
jg
test
and
neg
stos
test
pop
sti
lock
cmp
ret
or
sahf
bnd
mov
xchg
sbb
or
out
jmp
cld
xlat
call
and
pushf
ja
inc
sahf
xchg
fistp
mov
mov
sahf
es
ss
mov
repnz
and
daa
das
mov
scas
mov
dec
icebp
pop
xchg
std
mov
pop
cmp
push
int3
js
or
mov
int3
movd
(bad)
(bad)
adc
fidivr
leave
and
rcr
jge
and
ret
sub
fimul
in
dec
out
sbb
test
mov
xchg
arpl
es
pop
or
outs
mov
(bad)
and
test
mov
jle
fldenv
jle
test
iret
dec
jg
push
sbb
cwde
pusha
clc
cwde
pushf
rcl
jmp
dec
jp
inc
ins
out
iret
mov
push
cld
rcr
in
sbb
inc
fist
int
lods
sbb
pushf
lea
dec
mov
and
mov
and
cmp
mov
mov
adc
jl
sbb
add
imul
mov
mov
push
std
adc
cmps
and
push
xlat
xchg
cmp
pop
outs
mov
adc
cmp
sahf
adc
and
dec
pop
sbb
(bad)
sbb
loop
sbb
dec
aaa
mov
shr
and
adc
push
mov
or
inc
int3
call
lods
(bad)
inc
pop
mov
cmp
add
imul
jne
and
push
mov
lock
out
ret
pushf
clc
push
jno
dec
or
xchg
lock
mov
xor
lock
jecxz
sbb
push
test
xor
clc
shr
or
xor
xchg
shl
mov
rcr
test
fld
les
iret
daa
and
or
and
jg
xchg
xchg
inc
outs
inc
outs
dec
call
xchg
jmp
imul
loop
mov
mov
inc
(bad)
pop
push
outs
mov
dec
push
dec
dec
cmp
icebp
js
xchg
in
ins
aad
fwait
adc
in
repnz
(bad)
push
or
nop
fld
cmp
pop
or
inc
and
xchg
out
inc
pop
lahf
inc
jbe
shl
shl
and
or
add
cmps
or
cmp
fsub
pop
xchg
data16
pop
dec
mov
push
mov
in
gs
int
out
pop
jbe
mov
das
cmp
ficom
aad
ins
jmp
aad
pop
pop
leave
iret
clc
retf
out
mov
into
mov
sar
pop
sub
loop
movs
mov
cmp
mov
sub
mov
sar
stos
retf
push
jb
outs
push
or
movs
out
mov
not
out
pushf
(bad)
jnp
js
ins
add
in
addr16
mov
and
add
jns
or
mov
sub
and
xchg
outs
jno
scas
mov
mov
lods
adc
dec
dec
push
lock
int
std
push
jmp
test
ins
sub
aam
mov
fdiv
xlat
test
pop
mov
in
jo
adc
pop
sar
imul
sysret
and
dec
mov
in
xor
js
jns
adc
mov
sbb
mov
outs
lea
or
out
xor
xor
xchg
mov
mov
sub
xor
test
in
addr16
adc
jmp
push
push
xor
je
cs
cmps
mov
or
mov
jns
rol
mov
jns
icebp
and
dec
xchg
retf
mov
fsub
mov
out
adc
sbb
sub
cmp
js
cwde
mov
retf
repz
add
lods
inc
mov
pop
cmp
cwde
(bad)
rcl
je
in
sbb
stos
pop
sbb
bound
ror
cmp
jmp
fidiv
hlt
and
test
add
jae
jge
sub
xchg
fnstcw
sbb
push
imul
sbb
xchg
retf
pop
sub
inc
xor
out
push
pop
xchg
int3
jmp
ud2
sub
add
xchg
push
mov
push
cmc
into
test
das
sbb
in
pop
call
shl
and
lahf
jae
mov
loopne
dec
fwait
daa
cld
pop
mov
mov
lods
movs
cmp
fistp
mov
and
shl
push
retf
xor
adc
dec
fistp
mov
jae
iret
out
fwait
cmp
mov
(bad)
jnp
test
bound
dec
inc
mov
lods
push
inc
inc
cwde
jge
mov
orps
mov
popa
dec
popa
aaa
sti
cmp
xor
bound
scas
fsub
out
call
gs
sti
hlt
cwde
add
sahf
sbb
mov
push
push
adc
cmp
into
loopne
sbb
cmp
gs
cmp
aam
add
movs
(bad)
sar
out
xor
iret
dec
xchg
adc
xor
lds
movs
xchg
das
test
shr
cmc
mov
cmp
sti
adc
cmc
push
jle
test
pop
or
or
mov
xchg
gs
sahf
scas
adc
add
scas
and
or
jbe
jo
inc
lock
pushf
inc
lds
and
cmp
dec
jmp
fmul
add
cdq
cmp
mov
sub
into
(bad)
outs
ret
mov
or
or
pop
inc
and
lahf
xchg
jnp
pop
jne
jp
aad
sti
jecxz
rol
fisttp
sub
push
xchg
xchg
cmp
dec
iret
int3
xor
repnz
je
nop
jge
add
je
cmps
retf
hlt
jge
jg
repz
fidivr
pop
pop
jo
fwait
jmp
js
mov
lods
(bad)
jmp
mov
jns
cmovs
push
dec
push
mov
push
push
imul
jae
sub
sub
rcr
(bad)
cmc
ret
sub
xor
int3
(bad)
(bad)
hlt
in
test
and
frstor
rcl
or
xor
inc
pop
jle
call
dec
or
std
into
adc
aad
addr16
sbb
pop
push
in
stos
stos
inc
and
push
or
add
push
repnz
or
ds
mov
mov
out
into
jmp
int
cs
xor
ret
jp
movs
adc
popf
and
test
jno
xor
out
inc
dec
mov
and
pop
jmp
test
hlt
sub
xor
movs
movs
cmps
cs
mov
mov
sbb
jp
push
cmp
(bad)
mov
out
pop
dec
(bad)
cmp
js
push
call
and
in
add
stos
and
cdq
ds
dec
(bad)
shr
sbb
outs
sbb
and
fisub
xor
xchg
ret
dec
or
lods
jo
mov
mov
lods
std
mov
add
addr16
stos
inc
sub
cwde
and
pushf
inc
into
pop
xchg
test
xchg
mov
adc
das
(bad)
(bad)
dec
and
fwait
je
shr
das
sub
fmul
(bad)
jns
mov
stc
push
push
lahf
adc
mov
mov
cmpxchg
mov
fcmovb
mov
scas
xchg
xor
hlt
jnp
push
or
inc
push
mov
mov
fild
xor
adc
push
dec
aas
(bad)
loope
add
mov
cld
imul
mov
mov
into
or
push
push
add
sbb
scas
and
gs
and
mov
or
cld
jno
fsub
xlat
add
push
dec
std
cld
mov
dec
mov
push
xlat
lds
mov
xchg
push
add
mov
pop
sahf
inc
retf
mov
fisubr
loopne
in
(bad)
stos
push
aad
add
addr16
test
mov
out
push
sbb
add
rol
pop
mov
sub
fstp
dec
cmp
inc
rcl
fadd
or
sub
jb
cli
mov
lods
jnp
cwde
dec
scas
scas
cdq
ds
adc
cmp
fist
dec
add
or
xor
push
pop
mov
xor
sbb
add
push
mov
pop
scas
sbb
xor
dec
fnstcw
pop
repz
mov
cwde
arpl
loopne
add
loopne
cmp
mov
cmc
ss
jne
dec
sahf
gs
data16
mov
retf
cmp
enter
enter
loopne
out
cdq
pop
push
scas
adc
fldcw
int
scas
sbb
jg
movs
mov
test
dec
sbb
xchg
dec
mov
std
mov
mov
sbb
mov
stos
mov
aas
(bad)
mov
xchg
retf
mov
sub
sbb
mov
test
je
in
ins
xor
ficom
push
jne
xchg
or
mov
adc
stos
ins
mov
add
mov
fdivr
mov
sahf
lock
sub
push
jno
xchg
lods
inc
out
push
inc
xor
aam
clc
(bad)
cmp
add
(bad)
mov
or
bts
jp
mov
imul
pop
gs
sahf
lods
add
sbb
je
mov
aas
inc
in
sub
rcr
das
lods
jge
add
mov
xchg
or
fisubr
sub
jp
jmp
rcl
jnp
test
jmp
test
inc
ins
outs
shl
pop
add
xor
adc
or
jae
cmp
and
push
xchg
stc
inc
sub
pop
jae
push
mov
push
iret
xor
xchg
sahf
aaa
jne
jmp
inc
imul
ret
inc
or
sbb
dec
add
and
outs
inc
sahf
xor
or
cld
or
and
mov
ins
mov
(bad)
mov
ds
in
xchg
xor
stos
mov
add
pop
push
(bad)
loop
push
scas
mov
aad
into
dec
out
and
cld
sbb
cld
pop
in
mov
xchg
xor
(bad)
rcl
sub
and
es
inc
sub
cmp
ret
popa
cmp
xchg
fistp
icebp
mov
ret
jl
inc
ja
fstp
and
inc
inc
mov
cmp
add
push
js
inc
adc
push
or
cmp
inc
out
or
mov
jbe
out
cld
imul
cmc
jne
rcl
mov
ficom
jmp
mov
jmp
jge
mov
lahf
loopne
inc
pushf
jnp
ret
jmp
sbb
mov
hlt
jb
pop
mov
pop
pop
data16
(bad)
cdq
dec
sub
lods
and
pop
scas
mov
jle
pop
pop
push
jl
sub
lods
xor
not
lahf
lods
mov
pop
mov
xor
cmps
mov
push
aaa
or
pop
add
das
sub
fisub
jns
jg
xor
xlat
test
cwde
mov
pop
lods
pop
sbb
mov
jmp
scas
(bad)
(bad)
arpl
fadd
fsubr
repnz
adc
mul
outs
fldcw
lods
fwait
push
fmul
xchg
push
add
mov
aam
push
mov
mov
rcr
dec
in
cmp
inc
xchg
call
push
daa
loopne
pop
inc
push
mov
std
ins
sbb
in
mov
jmp
xor
stos
jno
in
test
rol
and
lds
add
out
jb
test
aas
or
stc
push
mov
xchg
add
pop
sti
sahf
push
fcmovnb
loope
imul
pusha
pop
jnp
(bad)
pop
call
mov
movs
push
popf
rcr
fisttp
add
pop
dec
sub
(bad)
popf
sub
stc
and
cwde
mov
sub
test
in
pusha
in
imul
mov
sbb
xor
fst
hlt
inc
out
xor
jmp
xor
cmp
rcl
pop
xor
inc
mov
loope
inc
or
add
xor
cs
push
xor
mov
sub
popf
cmc
mov
adc
pop
dec
pop
mov
(bad)
mov
movs
or
xchg
pushf
test
ficomp
inc
fisttp
cmp
and
jmp
daa
mov
xchg
adc
dec
imul
pop
test
jne
aaa
pop
cli
ss
loope
dec
pop
jbe
push
push
fst
in
lods
ret
mov
je
mov
add
adc
adc
mov
jne
adc
dec
sub
jbe
repnz
inc
js
fist
sub
dec
sbb
or
or
div
xchg
in
jno
(bad)
cdq
lods
inc
mov
adc
cmp
ss
sub
call
jmp
cs
hlt
jno
movs
icebp
out
sahf
lds
sbb
cwde
out
cmp
sub
push
mov
mov
sub
mov
push
fldcw
cmp
pop
pop
xchg
(bad)
in
xor
into
mov
inc
sbb
mov
loope
xchg
push
addr16
enter
mov
xor
inc
repnz
pop
arpl
jle
ins
inc
xchg
mov
mov
adc
in
mov
sahf
xor
addr16
rcl
nop
adc
test
movs
push
ds
push
jmp
cmp
lahf
bound
mov
data16
xchg
pop
stos
push
fnstsw
cmp
pusha
add
test
push
inc
xlat
clc
setns
push
or
xlat
mov
adc
or
inc
in
mov
fadd
outs
jns
lahf
mov
aaa
xchg
mov
dec
push
jns
xchg
pop
and
dec
cmp
enter
or
int3
mov
lahf
fisttp
sub
cmp
mov
inc
mov
pushf
xchg
sub
sub
jmp
dec
in
jp
and
xor
cmp
or
out
or
push
or
or
out
or
sbb
ror
loopne
retf
rcl
icebp
bound
mov
neg
jge
jge
cmps
scas
daa
mov
sbb
test
addr16
jb
lea
jnp
dec
(bad)
jle
jp
cmp
and
in
fsub
mov
ja
add
cdq
test
fistp
mov
ror
push
mov
jl
(bad)
pop
stos
in
xor
dec
icebp
sub
xchg
iret
in
push
(bad)
out
aad
ins
nop
scas
sbb
mov
scas
lods
lock
mov
pusha
xor
icebp
or
fdivr
mov
(bad)
sbb
dec
stc
mov
ins
imul
push
and
stc
mov
push
mov
sahf
mov
icebp
jno
jno
adc
add
sbb
repnz
cmp
cmc
daa
cmp
daa
lods
and
ret
sbb
xchg
sub
or
out
in
in
inc
xor
addr16
cmp
mov
sub
dec
xor
sbb
fbld
dec
mov
(bad)
xor
and
jge
or
popa
iret
icebp
push
jbe
sar
or
cdq
je
(bad)
pop
outs
lahf
nop
pop
mov
jge
mov
int3
dec
into
xor
or
mov
mov
rcr
fcmovbe
sub
mov
adc
fsubr
sti
and
cmp
mov
add
(bad)
jae
mov
mov
and
xchg
mov
hlt
stos
pop
loopne
dec
push
cmp
mov
repnz
in
mov
dec
ret
es
mov
xchg
pop
jae
or
inc
cmp
cmp
pop
pop
cmps
in
jno
sbb
mov
repz
xchg
fwait
out
jmp
cli
mov
mov
dec
repnz
mov
das
(bad)
sbb
cld
mov
inc
pop
in
enter
lods
sub
mov
imul
clc
out
ret
push
pextrw
mov
push
mov
mov
lea
(bad)
or
push
mov
movs
or
sbb
ins
push
dec
sbb
inc
inc
aas
not
xor
sbb
retf
xchg
mov
js
jae
icebp
inc
neg
adc
pop
fucomip
sbb
dec
adc
adc
loopne
jecxz
mov
dec
cmc
dec
pusha
loop
sub
inc
or
mov
push
icebp
or
mov
dec
or
sbb
adc
adc
pop
movs
sahf
loopne
sbb
lds
pop
or
ds
push
out
jge
pop
iret
sti
xchg
rcl
sub
jge
inc
iret
addr16
imul
scas
test
cmp
popf
inc
and
inc
call
inc
out
jecxz
ficom
mov
cdq
call
mov
add
pop
sar
inc
mov
pop
js
aam
sub
xchg
ins
mov
les
inc
jbe
jge
in
jmp
out
xor
and
push
and
pop
push
into
fcom
pop
adc
(bad)
cdq
js
sbb
es
mov
(bad)
aam
and
mov
pop
ja
fidiv
pop
mov
mov
aas
(bad)
retf
pop
xchg
and
das
rol
pop
sub
fs
jne
mov
jecxz
add
ficom
rcr
stos
(bad)
sbb
lahf
(bad)
fisttp
jmp
mov
call
shl
repnz
xor
or
cmps
push
jmp
test
inc
push
mov
das
fwait
jno
mov
pop
jl
test
sbb
shl
pop
cdq
ret
jns
add
xlat
ins
xor
cmp
shrd
mov
movlps
(bad)
push
push
cwde
or
jl
into
dec
mov
jmp
mov
inc
mov
popf
jns
dec
das
fistp
mov
jnp
xchg
pusha
mov
adc
retf
(bad)
ror
inc
sbb
imul
inc
mov
mov
adc
cmp
cdq
push
jecxz
sti
inc
sbb
es
retf
call
push
stos
aad
xor
xchg
xor
repnz
push
jmp
cmp
xor
mov
and
adc
or
mov
dec
loop
in
lea
xchg
mov
xor
dec
dec
mov
add
daa
ins
sub
pop
xchg
fisttp
aad
not
sti
xchg
stos
loop
mov
sub
adc
add
call
ins
inc
stc
mov
cmp
jmp
push
sub
(bad)
clc
pushf
inc
push
jl
lds
push
xlat
inc
cld
mov
dec
ret
xchg
xor
in
push
xchg
inc
int3
or
loop
cmp
sbb
inc
fiadd
add
hlt
dec
xor
fistp
xchg
ret
popa
pop
fld
mov
mov
js
or
pusha
addr16
mov
mov
addr16
rcl
ss
mov
or
int
ins
cmc
test
jnp
(bad)
jl
or
hlt
pop
jmp
dec
adc
sar
(bad)
sbb
cmp
xlat
test
xor
js
adc
or
(bad)
jno
lock
stc
pop
(bad)
icebp
data16
cwde
sub
jo
add
inc
mov
ins
pop
in
mov
dec
jmp
add
(bad)
(bad)
push
inc
das
pop
cmp
xor
into
aad
push
imul
les
outs
mov
bound
xor
mov
stos
hlt
into
jmp
sahf
bound
add
out
rol
out
int
cmc
and
pop
or
rol
xor
jne
jmp
in
test
xor
push
add
aad
xor
out
rcl
xchg
call
imul
or
jno
dec
iret
pop
call
ins
pop
jns
and
outs
adc
pushf
das
xor
mov
scas
add
mov
or
push
test
hlt
pusha
add
test
inc
addr16
fimul
xor
or
inc
jns
inc
sub
inc
push
lock
cmp
(bad)
shr
pop
mov
lods
lahf
jns
out
jne
adc
scas
adc
xor
mov
push
and
push
cmp
dec
or
xor
in
pop
cwde
js
aaa
daa
push
mov
(bad)
dec
(bad)
retf
mov
lock
add
or
fcomp
fsubp
lods
xor
out
pop
clc
ficomp
aaa
lea
les
(bad)
or
sbb
adc
cmp
inc
sub
fcmovne
outs
iret
lock
test
in
in
js
mov
cmp
xor
je
xor
inc
sbb
out
sub
push
push
pop
jl
lods
jno
stc
mov
adc
sar
jmp
ja
inc
rcl
add
cmp
and
adc
dec
cld
shr
cmp
jne
aad
sbb
xchg
jge
icebp
push
loopne
sbb
(bad)
enter
push
cmp
mov
pop
jmp
movs
adc
stos
les
mov
mov
retf
js
push
aaa
repz
cmps
sub
pusha
je
cmp
je
loopne
pushf
xor
scas
mov
enter
mov
inc
or
jmp
mov
test
dec
xchg
dec
pop
nop
ja
add
js
mov
in
cmp
ret
lods
arpl
mov
push
pop
pop
jne
fcomp
into
adc
push
and
xor
bound
leave
or
gs
xchg
in
xchg
and
dec
inc
push
outs
(bad)
pop
mov
test
xor
je
sub
test
pusha
add
push
loopne
or
dec
nop
pusha
ret
mov
gs
movs
jecxz
add
test
pop
add
xchg
and
or
mov
jle
push
mov
mov
sub
push
cmp
or
mov
cwde
les
sub
fsub
mov
mov
mov
mov
jnp
shr
ins
mov
test
imul
add
xor
or
rcl
stos
cmc
lahf
jbe
xor
mov
and
and
or
test
xchg
sbb
shl
fcomp
jge
in
jp
addr16
(bad)
or
dec
rol
test
nop
adc
and
es
imul
cmp
add
and
mov
add
sub
mov
xchg
and
mov
push
dec
sbb
lods
call
sub
jle
xchg
dec
xchg
xchg
mov
(bad)
mov
cmp
frstor
jne
pusha
push
out
test
sub
je
mov
jnp
enter
sub
jl
mov
adc
leave
xlat
pop
clc
and
pop
sub
xchg
aaa
imul
sbb
jmp
cmc
imul
inc
mov
cmp
cmp
in
in
lods
xor
(bad)
(bad)
aad
cmc
mov
jns
jg
stos
scas
mov
inc
test
hlt
not
and
mov
or
(bad)
lock
das
call
mov
sbb
ins
(bad)
dec
sub
sbb
iret
jge
pop
int
adc
jb
in
test
and
dec
(bad)
out
mov
push
inc
cmc
push
and
adc
sub
aad
daa
popa
xchg
mov
out
fidiv
repnz
or
retf
call
mov
lock
xchg
mov
sbb
cmc
push
jg
pop
inc
pushf
jmp
cmp
mov
xor
shr
pop
ror
stos
jle
loop
push
pushf
sub
sbb
add
loopne
(bad)
in
add
(bad)
scas
(bad)
xchg
xchg
push
loope
xor
(bad)
into
mov
or
add
xchg
imul
and
dec
and
xor
dec
lock
dec
mov
xchg
pop
or
mov
(bad)
movs
enter
in
loop
or
(bad)
sbb
inc
sar
inc
add
mov
dec
push
sub
cs
and
pop
jle
jge
inc
test
popf
sbb
stos
mov
ins
add
arpl
and
xchg
sti
sub
fst
or
mov
cmp
sahf
mov
imul
and
repnz
cmc
aaa
fwait
push
call
lods
xchg
jo
int3
xor
jmp
jp
loopne
lods
jae
ins
stos
or
pop
pop
hlt
(bad)
mov
xlat
(bad)
xor
(bad)
hlt
sbb
mov
jp
popf
mov
xchg
cmp
(bad)
or
data16
mul
push
jg
dec
mov
pop
imul
stos
out
push
scas
pop
mov
push
xchg
and
jo
call
push
mov
in
pop
cs
loope
dec
stc
xor
shr
and
data16
scas
dec
inc
inc
pusha
outs
pusha
sar
dec
xchg
gs
adc
pusha
sti
(bad)
pop
cmp
cli
xchg
iret
add
in
das
jle
test
fiadd
push
rcl
imul
cmps
ds
scas
ret
or
jmp
call
outs
out
js
sub
cmc
adc
push
sub
sbb
xor
fcmovnbe
sar
add
mov
and
movs
(bad)
push
stc
push
aam
xchg
jbe
mov
jp
sbb
mov
imul
cdq
adc
or
add
stc
or
push
jg
mov
cmc
xchg
out
cmp
fisubr
mov
icebp
xchg
out
push
dec
nop
fwait
inc
xor
(bad)
sub
pop
mov
xchg
in
push
rcl
dec
adc
nop
aas
frstor
adc
pop
aam
and
sub
dec
repnz
hlt
addr16
daa
xchg
iret
(bad)
jecxz
fs
lds
fsubr
xchg
fadd
das
xor
cmps
mov
xchg
movs
call
scas
data16
daa
out
fiadd
popa
aam
lods
push
push
(bad)
xchg
aad
inc
mov
lds
stos
loop
aam
sbb
pop
pop
shr
add
mov
enter
and
out
pop
pop
pop
icebp
jge
or
imul
std
inc
push
push
xchg
imul
xor
and
lods
sbb
out
(bad)
mov
jae
call
test
call
adc
sbb
ds
mov
and
je
ret
mov
fbstp
inc
retf
mov
jae
sbb
jae
ins
in
es
je
lahf
lahf
imul
jmp
mov
iret
mov
cmp
inc
adc
loop
movs
jns
(bad)
pop
(bad)
jnp
lods
pop
div
out
mov
add
jmp
pop
jnp
imul
test
adc
rcr
inc
pop
lods
push
or
ins
aas
in
addr16
add
mov
dec
jecxz
stos
clc
and
cmps
adc
and
pop
retf
sbb
push
or
fist
cmps
or
clc
scas
xor
rcr
jp
add
mov
or
das
mov
out
cmp
shl
pushf
mov
xchg
cmp
stos
mov
mov
loope
lods
mov
adc
and
jg
add
scas
les
add
sub
jbe
aas
dec
inc
aam
retf
nop
push
(bad)
push
or
mov
inc
(bad)
mov
(bad)
iret
mov
cmps
and
cmps
xor
bound
adc
mov
outs
rcr
mov
fbstp
arpl
out
js
imul
cwde
out
arpl
push
inc
push
adc
push
pop
cmp
cmps
in
mov
lea
aam
sub
push
dec
or
sub
mov
lea
mov
xchg
pusha
(bad)
sbb
(bad)
mov
jmp
cmp
pop
add
push
daa
jmp
xchg
ficomp
cs
(bad)
xchg
pop
mov
icebp
sbb
add
aaa
xchg
sub
out
mov
pop
and
popa
cmp
mov
data16
icebp
stos
js
dec
fadd
test
dec
xlat
cli
rcr
mov
or
mov
xor
(bad)
repnz
cmp
loopne
mov
out
pop
xchg
out
jo
sub
rol
adc
jb
pop
sub
mov
mov
adc
pop
pop
xchg
jno
jecxz
cdq
scas
add
add
or
fsubr
jge
ret
test
xor
and
sar
loopne
dec
xor
xchg
push
pop
adc
popa
neg
jecxz
mov
push
and
ins
add
retf
fsubr
outs
jbe
pop
inc
pop
adc
outs
and
jae
cmp
inc
dec
repnz
inc
jo
mov
test
xchg
add
clc
add
xchg
and
movs
ret
shr
daa
out
out
int3
(bad)
ror
lods
in
dec
or
in
es
sub
outs
jnp
mul
imul
mov
jmp
ret
inc
sub
gs
xchg
(bad)
sub
mov
and
leave
cmp
in
sbb
psrlw
repnz
dec
test
sub
or
push
sub
add
ja
cmp
cmps
movs
es
push
iret
dec
pop
xor
mov
xchg
xchg
pop
(bad)
sub
adc
movs
adc
in
mov
popf
mov
(bad)
sbb
adc
(bad)
push
pop
cld
int
movs
mov
xchg
les
retf
mov
xor
jo
mov
xchg
mov
pop
push
pushf
pop
loop
xlat
inc
outs
es
jg
push
int
fiadd
rcl
int
push
jmp
retf
xchg
jge
jmp
xchg
or
xchg
(bad)
shr
sbb
aaa
fcmovnu
aaa
mov
bound
retf
jmp
add
sbb
jmp
inc
out
xchg
fst
mov
adc
inc
stos
shl
call
pop
jl
nop
int
test
add
ins
lock
mov
inc
retf
inc
jle
in
xor
pop
and
mov
leave
icebp
xor
icebp
inc
lods
(bad)
and
dec
nop
pop
push
mov
pusha
das
lods
push
stos
shl
jb
imul
js
nop
mov
fs
push
add
dec
mov
outs
xor
ret
jb
or
jl
mov
repz
in
je
in
aam
sbb
not
shr
push
cdq
pushf
(bad)
iret
inc
mov
pusha
ffree
dec
outs
push
jnp
and
cs
dec
sub
in
hlt
ds
cs
xor
test
add
and
push
jg
pop
bound
pop
jmp
int
into
xchg
sub
sub
push
jo
pop
jb
into
cmc
cmp
outs
iret
mov
sahf
dec
cmp
mov
mov
cmc
push
pop
test
out
dec
repnz
pop
sbb
add
or
jl
mov
inc
and
pop
scas
repnz
sub
jb
sbb
and
xchg
jmp
mov
sbb
jnp
(bad)
popa
xor
sbb
pop
xlat
push
ret
(bad)
cwde
sbb
daa
jge
pop
mov
cmp
xor
test
(bad)
dec
sub
movs
jp
cmp
and
data16
arpl
jmp
gs
inc
in
or
fimul
push
xlat
xchg
xchg
dec
or
sub
xchg
add
push
xor
scas
mov
sub
inc
inc
cwde
call
mov
jmp
retf
inc
cli
ja
repnz
and
xchg
in
movs
pop
sub
pop
push
es
mov
mov
sub
jb
jno
nop
leave
adc
call
ins
mov
adc
sub
dec
and
inc
arpl
sub
mov
pop
fucomip
pop
sub
inc
sahf
sub
sbb
xchg
scas
cwde
pop
movs
frstor
pop
es
mov
lods
fisttp
and
mov
addr16
addr16
(bad)
outs
pop
fnstsw
cmp
jb
sbb
dec
stos
sti
in
xchg
adc
sar
adc
jnp
sub
clc
mov
bound
adc
push
loopne
add
addr16
adc
rcr
or
lods
adc
xchg
call
out
push
add
push
add
or
sub
(bad)
adc
push
retf
cmp
pop
push
jne
bnd
mov
dec
rcl
mov
pop
push
push
repnz
add
jns
xchg
arpl
bound
pop
jl
xchg
mov
mov
adc
sub
cmp
jno
inc
pusha
xor
mov
xchg
cmps
int3
push
std
mov
dec
sbb
add
xchg
sbb
pop
push
test
pop
(bad)
cmp
ret
mov
jg
popa
inc
mov
sub
shl
jge
cmp
div
lock
test
dec
loope
cld
adc
popf
ret
cmp
adc
daa
popa
sub
rcl
xor
mov
cmp
push
sbb
mov
mov
xor
fist
pop
shl
aad
punpcklbw
push
mov
fcomip
fisttp
es
pusha
cmp
xor
jb
lods
int3
cld
push
pop
dec
daa
cwd
or
mov
stos
or
sub
stos
hlt
fimul
pop
and
ins
les
cld
jge
ret
jp
data16
fistp
and
mov
loope
cmp
jmp
ins
xchg
stc
(bad)
aam
jge
test
push
fdivr
int
daa
jp
sub
loopne
dec
xchg
pop
daa
pop
push
inc
dec
mov
fidivr
aam
or
mov
fst
loop
aas
out
and
xor
rcr
psadbw
sahf
paddusw
dec
enter
push
movs
sahf
movs
cmp
(bad)
out
inc
inc
test
xor
call
clc
adc
iret
mov
fidivr
and
int
retf
dec
sbb
nop
xlat
dec
sbb
pop
aas
inc
enter
imul
call
cmps
mov
sub
fs
mov
jo
(bad)
dec
mov
sub
fdiv
retf
clc
mov
pop
mov
popa
sbb
xchg
xchg
out
in
push
sti
arpl
lea
xor
inc
and
push
das
(bad)
sub
add
aam
arpl
inc
and
std
xlat
mov
and
cmp
mov
mov
bndstx
nop
and
std
cmp
nop
pop
pop
movs
push
je
movs
inc
rol
cmp
push
loope
rcl
mov
inc
mov
dec
xchg
pop
jle
push
ds
pop
cmp
jmp
sbb
popf
add
stos
in
fsubr
sbb
call
xor
inc
popf
push
jnp
loop
add
jmp
add
nop
push
scas
xchg
jb
leave
jecxz
xlat
mov
mov
push
js
retf
cmps
aaa
inc
cld
cmc
mov
or
jo
xor
ja
sahf
jl
inc
push
xor
and
jl
sub
(bad)
cwde
sub
test
(bad)
(bad)
in
faddp
(bad)
arpl
lods
adc
imul
gs
cmc
retf
pop
jecxz
jg
daa
mov
std
add
fwait
pop
push
xchg
mov
jp
xlat
xchg
out
out
dec
arpl
mov
mov
sub
sub
xchg
cmps
jns
add
dec
shl
and
fldcw
scas
cmps
or
outs
dec
std
in
sbb
gs
(bad)
inc
movs
dec
out
fisttp
mov
inc
xchg
daa
(bad)
leave
xor
cmp
mov
jne
cmp
jb
lock
pop
repz
xchg
bound
nop
jns
arpl
in
loopne
pop
inc
rcr
jmp
test
push
cmp
fwait
mov
shr
inc
adc
add
or
les
push
xor
pop
shr
xchg
jmp
cmps
or
pop
rcr
cmp
icebp
push
mov
stos
lds
neg
add
sbb
out
ins
mov
cmp
daa
leave
ror
jecxz
jb
pop
jecxz
sub
mov
aad
pop
in
mov
mov
sar
jecxz
push
or
push
js
repnz
lahf
adc
sbb
pushf
in
xor
je
pop
jmp
(bad)
mov
xchg
mov
dec
movs
mov
cmp
pop
cmp
sub
mov
gs
sbb
lods
sbb
movs
jb
sar
or
sub
mov
int
push
or
cmp
outs
dec
mov
jg
mov
add
(bad)
in
clc
rcr
xor
sub
mov
arpl
mov
add
sub
sbb
sub
dec
add
in
aas
repz
or
(bad)
and
jmp
xlat
and
cmp
cli
jb
mov
imul
push
or
mov
(bad)
xchg
retf
call
stos
repnz
inc
js
dec
pop
mov
jmp
and
push
mov
cmp
lods
pop
mov
mov
ss
push
repnz
adc
sbb
in
jmp
mov
inc
push
cmp
aaa
iret
cmp
sbb
mov
jle
sub
lahf
enter
mov
fs
ins
int
call
inc
and
shl
inc
scas
sbb
js
pop
add
cmp
mov
scas
push
inc
jae
mov
dec
cmp
loopne
adc
push
pop
loopne
add
adc
pop
cmps
pop
icebp
dec
dec
repnz
std
bound
sahf
or
add
mov
and
pop
sub
not
mov
jmp
stos
rcl
pop
jge
and
mov
jge
lea
not
out
dec
pop
jmp
cdq
test
jae
cs
rol
adc
gs
jo
jmp
xchg
lea
ret
push
dec
nop
out
cmps
(bad)
(bad)
xor
rcl
aam
imul
xor
cmp
in
mov
test
inc
(bad)
xchg
sbb
push
lock
retf
daa
sbb
and
test
sbb
add
cwde
dec
inc
(bad)
fnstenv
mov
add
lahf
rol
scas
test
sbb
pushf
stc
retf
sbb
jo
jno
jecxz
dec
dec
aad
fcmovne
in
test
inc
ins
jmp
sbb
mov
xor
xchg
mov
ds
adc
movs
enter
scas
mov
mov
stos
fucomp
or
adc
sar
or
mov
arpl
xor
sbb
mov
cli
add
das
xor
out
xor
out
sbb
mov
jp
and
mov
mov
test
cmp
jne
push
arpl
dec
or
test
pushf
lds
push
and
mov
arpl
shl
or
or
scas
addr16
mov
pop
cmp
fnsave
cmp
aaa
lods
jae
push
cmp
test
push
cmps
cmp
retf
lea
gs
sbb
sbb
add
fdivr
cmps
call
push
outs
out
mov
std
mov
(bad)
xor
mov
in
or
push
xor
ds
mov
sar
adc
(bad)
jp
dec
sub
jmp
jmp
mov
ret
push
xor
inc
pop
gs
jne
mov
stos
pop
(bad)
(bad)
jmp
or
pop
test
push
lock
pop
movs
and
jge
jmp
retf
or
adc
aas
and
in
rol
xor
mov
jecxz
inc
lods
pushf
ret
test
ins
jmp
adc
shr
fsub
add
data16
xor
inc
push
adc
mov
jg
lods
aam
fst
fsub
cwde
pop
arpl
psadbw
sti
adc
lahf
sbb
shl
adc
movs
mov
sbb
mov
mov
ja
xor
iret
bound
sub
or
out
adc
mov
and
pop
loopne
aam
pop
mov
mov
push
sbb
or
mov
imul
xor
retf
jp
mov
mov
(bad)
push
ret
mov
and
mov
pop
out
pop
in
inc
gs
(bad)
bound
push
aam
adc
or
movhps
adc
or
gs
pop
(bad)
mov
addr16
into
and
dec
jbe
mov
push
push
push
xlat
call
jg
bound
ss
lods
in
shl
loope
in
xchg
cwde
cmps
add
or
mov
jge
cli
idiv
pop
lds
push
ds
xor
dec
adc
adc
xor
fstp
rcl
lock
ret
out
or
mov
pop
adc
push
fisttp
pop
daa
test
mov
xor
sbb
jg
add
bound
loop
xchg
mov
and
ret
ds
sub
jl
push
inc
inc
mov
jmp
lea
sub
xchg
movs
repnz
sar
sar
addr16
les
dec
ss
cmp
jp
fiadd
xchg
in
pop
sbb
jl
in
test
jp
jle
jmp
(bad)
sbb
pop
clc
xchg
jno
call
mov
scas
ret
cmp
adc
inc
sub
movs
mov
enter
imul
cmp
mov
aaa
mov
cmp
xchg
cmp
mov
fdiv
jmp
(bad)
clc
jle
aaa
xchg
sbb
jle
or
shl
mov
xchg
cmp
mov
fs
ror
scas
push
les
inc
push
out
pushf
push
sbb
jb
ret
pop
push
xadd
ret
jnp
push
aam
rol
mov
dec
call
mov
push
mov
sub
jl
jg
push
push
dec
and
add
sub
mov
jne
and
mov
fdiv
cmps
pop
add
mov
mov
push
mov
mov
mov
dec
imul
jb
dec
cmp
std
loop
ret
mov
mov
xchg
xor
or
add
mov
lods
and
in
es
jne
inc
mov
xchg
in
mov
aad
(bad)
jmp
mov
popa
push
mov
aam
js
adc
aas
mov
mov
stc
sbb
or
test
lock
xchg
loope
and
hlt
in
xchg
(bad)
cmps
jmp
data16
push
xor
sub
pop
and
push
js
clc
push
adc
fiadd
cli
sbb
rcl
push
shl
sub
cs
sbb
inc
pop
lea
jae
inc
popa
pop
mov
xor
adc
loope
fidiv
or
inc
add
out
int
dec
adc
ja
dec
xchg
xchg
loope
cld
sbb
xchg
dec
inc
dec
mov
sbb
mov
jo
ret
jge
test
xchg
jb
retf
push
mov
cmp
mov
mov
push
cmp
and
popa
in
xlat
mov
cdq
xor
jmp
icebp
aam
push
dec
pop
cs
retf
les
jbe
lods
int3
mov
lds
std
sahf
push
(bad)
and
sub
popf
push
dec
sahf
push
xchg
jno
jno
rcl
dec
cmp
dec
sbb
rol
cmps
and
mov
mov
outs
add
fnstenv
push
sub
or
leave
call
not
test
mov
rcl
adc
sub
mov
jb
sbb
xchg
mov
mov
out
sbb
xor
addr16
inc
into
test
cmps
fcomi
repz
in
cmp
sbb
push
mov
out
cs
sub
enter
xlat
xchg
mov
repz
xchg
hlt
jmp
loopne
cwde
jecxz
shr
sti
in
dec
ja
mov
mov
push
jmp
mov
loope
into
sub
loopne
xchg
fiadd
hlt
mov
int
sub
or
mov
mov
jae
mov
inc
scas
jo
call
sbb
out
shl
ret
adc
xor
jle
int
pop
fdivr
jae
cdq
imul
sbb
cmps
sbb
cdq
xor
cdq
jmp
mov
xor
dec
xlat
jbe
popa
jmp
leave
das
jmp
imul
mov
add
mov
add
fwait
add
out
test
lods
adc
push
imul
lods
out
lds
push
pop
xchg
sbb
push
xor
dec
shl
cmps
ins
adc
mov
dec
(bad)
fidiv
test
push
mov
ds
cmps
pop
in
daa
stc
or
aam
(bad)
fwait
jmp
jo
jno
jl
cmps
sbb
mov
fwait
mov
dec
int
mov
fcomi
pop
mov
pusha
hlt
(bad)
push
fsub
ror
int
in
cmp
or
dec
pusha
push
jmp
clc
out
adc
push
push
xor
fstp
fidivr
data16
pop
icebp
je
sub
xchg
maxps
das
cdq
je
repz
sbb
adc
imul
mov
push
hlt
lods
mov
in
ins
loopne
cwde
rcl
arpl
sub
mov
and
add
out
fiadd
movs
mov
mov
ret
jecxz
inc
push
push
dec
lock
push
icebp
fstp
push
enter
sti
sti
sar
fstp
xor
cs
fdivr
inc
adc
sbb
ja
lds
lahf
out
mov
andnps
mov
lahf
neg
std
pop
int3
(bad)
xchg
cmps
add
shr
mov
fnstenv
cwde
jae
xchg
cmp
data16
xor
mov
xchg
fdiv
mov
in
and
aas
xor
push
mov
add
test
and
je
js
and
mov
retf
rol
lods
ja
xor
push
pop
add
test
pushf
or
mov
in
add
xchg
push
mov
ss
pop
or
pop
xchg
ja
jl
retf
pop
sub
mov
dec
in
xlat
mov
mov
les
push
aas
mov
test
pop
dec
push
jmp
jae
mov
jbe
jnp
(bad)
jle
movs
outs
cld
mov
js
inc
sbb
jg
in
cmc
xchg
ja
and
adc
adc
sti
sub
imul
loope
mov
ss
cmp
inc
mov
jl
in
inc
jp
and
xchg
addr16
inc
bound
mov
add
repnz
jmp
fucomp
add
adc
and
cmp
sbb
mov
das
push
xor
inc
inc
(bad)
aas
jle
xchg
ret
push
out
aam
mov
cdq
mov
icebp
cmp
sub
and
jns
push
outs
fwait
jnp
inc
cld
frstor
push
mov
push
cmps
push
icebp
mov
lds
xchg
xchg
xor
and
push
cmps
xchg
imul
data16
cmp
mov
or
add
scas
and
outs
(bad)
push
fdiv
mov
adc
dec
daa
adc
jp
cmc
and
test
lods
adc
(bad)
iret
fmul
xchg
loope
adc
ds
fnstenv
push
dec
imul
popa
scas
inc
push
sub
adc
inc
inc
(bad)
mov
push
lods
pop
daa
fst
mov
xchg
inc
push
mov
out
jp
xor
fistp
gs
ret
mov
mov
lods
outs
add
sti
or
mov
mov
fadd
rcr
jge
jge
lods
es
(bad)
loop
cld
daa
icebp
xchg
push
mov
jb
sbb
out
mov
jp
add
out
mov
fcomp
lods
adc
inc
mov
mov
push
ror
sbb
cmp
jbe
arpl
cmps
outs
and
std
mov
xchg
and
mov
add
fwait
repz
imul
int
(bad)
mov
fsub
ins
and
pop
push
xor
imul
das
push
mov
or
mov
test
fs
out
fild
sub
and
jne
mov
dec
mov
mov
mov
mov
cmp
mov
and
push
pusha
push
push
xchg
push
add
pop
rol
mov
dec
mov
sub
cdq
mov
mov
pop
lods
sbb
cmp
push
dec
cli
inc
dec
lods
(bad)
pop
in
lds
pop
xchg
fnstsw
cmp
xlat
out
jmp
push
mov
jbe
rcr
sbb
cmp
xchg
out
neg
and
scas
das
pop
mov
cmc
mov
test
out
aad
retf
push
call
jb
imul
inc
add
fld
data16
shl
outs
jl
xor
(bad)
fs
xchg
repnz
sub
push
ss
pusha
sbb
lock
pusha
enter
push
jns
cmps
mov
push
pop
xor
xchg
cmps
sahf
pop
dec
jp
fistp
cmp
aaa
cmp
sub
lds
dec
jbe
xchg
mov
mov
add
dec
jne
popf
clc
pushw
fs
jnp
sbb
mov
xor
ret
int
push
inc
adc
pusha
int
test
or
sub
inc
jg
dec
inc
stos
fidivr
rcr
push
movs
push
add
xchg
sub
and
xor
mov
sbb
dec
mov
sti
jns
mov
jb
fsub
test
push
add
lea
fwait
cmp
push
cmp
test
imul
jne
mov
aaa
adc
(bad)
popf
or
dec
jne
jnp
fwait
test
mov
inc
je
adc
loop
push
mov
sbb
add
sahf
push
dec
cmps
das
lods
fdiv
push
or
xchg
int3
jmp
shr
in
pushf
dec
pop
mov
push
test
sti
cmp
add
cld
bound
sub
cmp
adc
inc
out
lea
lahf
pop
movs
add
inc
or
stc
jb
dec
inc
repnz
das
sub
movs
dec
ss
nop
sbb
cwde
pop
outs
xchg
idiv
dec
cmp
cmc
(bad)
fst
mov
mov
cmp
and
cmp
jmp
imul
dec
nop
pop
inc
std
sub
mov
xchg
and
dec
in
fnstsw
xor
dec
out
mov
out
scas
add
clc
loope
in
das
fdivr
add
xchg
fsub
add
idiv
mov
addr16
shr
dec
xchg
aaa
(bad)
and
push
mov
mov
scas
adc
out
sbb
dec
mov
js
dec
mov
rcr
mov
cmc
xlat
test
mov
mov
fcmovnbe
int3
cmp
(bad)
enterw
xchg
enter
adc
jecxz
adc
rcl
xchg
cld
push
cmp
xchg
nop
mov
xor
es
sbb
enter
(bad)
lods
sub
pop
ret
mov
sub
cmc
int
out
ins
dec
sub
sbb
loope
iret
fcmove
es
mov
cwde
pop
mov
cdq
xchg
xor
cmps
pop
rol
cmp
or
aaa
out
retf
push
jnp
cmp
dec
xchg
(bad)
sub
dec
cmp
nop
jp
imul
rcr
sub
scas
(bad)
sti
and
iret
push
mov
mov
mov
fiadd
rcr
aad
(bad)
jecxz
sub
outs
jmp
push
inc
add
push
lahf
lds
ret
xor
setle
mov
mov
dec
push
mov
pop
jbe
test
inc
pop
push
cld
mov
xor
cmps
ss
icebp
jecxz
(bad)
mov
xlat
pop
fidiv
daa
sub
aaa
mov
pop
ins
enter
xchg
test
or
xchg
sub
sub
retf
sbb
pop
sub
enter
push
sbb
retf
or
rcl
sbb
push
mov
test
mov
sbb
dec
stos
cli
outs
jmp
mov
jp
pop
repnz
test
push
fwait
pop
call
jg
ret
pop
stc
xor
dec
mov
dec
or
cmp
xor
ss
out
inc
sub
dec
cmp
add
lods
fiadd
rcr
inc
popa
dec
out
xchg
cdq
xchg
mov
adc
pop
jmp
sar
adc
push
xor
nop
mov
std
fmul
sub
add
out
retf
loope
inc
xor
sub
adc
lods
in
int3
mov
sub
adc
out
mov
not
jmp
add
cmps
ins
out
(bad)
iret
and
(bad)
dec
xchg
mov
iret
jmp
push
dec
loopne
inc
aad
jae
mov
ficom
stos
mov
and
mov
mov
xlat
and
out
call
es
js
sti
and
dec
cmps
jbe
mov
mov
and
arpl
outs
xor
jp
push
push
push
sbb
mov
mov
sar
dec
je
dec
scas
push
or
or
push
dec
popf
sub
stos
outs
pop
in
add
mov
xor
cs
scas
call
adc
fisttp
into
push
outs
scas
sbb
stos
ja
repnz
mov
jmp
lahf
lods
pop
(bad)
push
sbb
sbb
movs
mov
push
xor
fwait
bswap
fcom
imul
(bad)
add
sbb
ret
push
mov
pop
push
ja
ret
dec
inc
aas
es
sbb
add
inc
cmp
xchg
ret
pop
aaa
(bad)
jne
xor
xchg
xchg
outs
cmp
dec
ss
lds
cdq
and
sti
push
mov
rcl
mov
jae
es
pop
imul
inc
mov
xor
ret
bound
pop
enter
sub
adc
sub
and
xor
and
pop
xchg
sbb
rcr
add
sbb
rol
mov
xchg
(bad)
stos
std
imul
adc
aad
push
fist
jl
mov
popf
jp
lock
stc
(bad)
jmp
imul
push
movs
and
add
jbe
jns
xchg
movs
clc
sub
cmp
pop
xlat
call
xchg
mov
xor
cmp
scas
pusha
ffreep
aam
not
shl
enter
in
clc
jno
int
repnz
mov
adc
int3
(bad)
jecxz
and
inc
xchg
lds
sub
call
popa
jbe
movs
ins
lds
sbb
(bad)
and
adc
jl
or
(bad)
into
or
rol
sub
movs
ret
movs
(bad)
stos
leave
sub
(bad)
jae
xchg
sub
arpl
fwait
sub
int
addr16
or
or
loopne
and
pop
pushf
jbe
cmps
mov
ja
(bad)
in
popf
repz
leave
int
xlat
xchg
cmp
cmp
and
loop
je
cs
xchg
sbb
mov
jno
adc
ror
pop
cmc
les
sbb
ja
dec
in
push
cmp
into
(bad)
inc
mov
test
sbb
xchg
das
jp
and
(bad)
sub
in
or
enter
mov
push
rcl
add
jb
pop
add
pop
repnz
scas
inc
imul
lahf
test
ins
je
mov
rcl
sub
inc
je
xor
dec
jmp
mov
cmp
push
add
adc
loop
pop
inc
xchg
inc
or
arpl
jbe
es
into
movs
jne
es
pop
call
or
mov
mov
fnsave
cld
(bad)
cwde
dec
out
cmp
or
pusha
mov
jmp
mov
mov
sbb
jbe
inc
and
adc
aad
push
sbb
sahf
jb
sbb
xor
or
xchg
cmp
cmps
stos
lods
movs
das
aad
ja
adc
mov
add
cs
test
or
sbb
call
xchg
call
sub
imul
add
aad
xor
xor
repnz
sbb
iret
ss
rcr
gs
xchg
xchg
aas
out
pusha
in
mov
lahf
inc
les
jmp
sbb
xchg
mov
sub
or
pop
mov
test
mov
lahf
aad
xor
cmps
out
xchg
inc
fcomp
lods
push
or
jae
or
in
mov
xchg
nop
inc
leave
jg
(bad)
sub
(bad)
mov
pslld
xor
pop
ds
mov
test
xchg
push
sahf
sub
mov
inc
(bad)
mov
inc
popa
jb
and
adc
mov
mov
mov
pusha
push
in
shl
sub
in
inc
xchg
fistp
clc
adc
stos
mov
fwait
movs
xor
into
inc
mov
dec
idiv
aaa
push
mov
sbb
sbb
test
cs
nop
mov
push
mov
loop
scas
fscale
dec
jle
mov
lea
xchg
xlat
enter
adc
mov
mov
adc
mov
inc
(bad)
xor
mov
cmp
xchg
leave
out
and
iret
cmp
lahf
dec
leave
push
xchg
out
adc
arpl
ss
pop
and
xlat
mov
fld
retf
movs
mov
lahf
push
lods
dec
in
aas
push
cli
fistp
and
xor
push
pop
xor
jl
fwait
bswap
add
mov
sbb
mov
mov
dec
stc
adc
push
popa
arpl
jmp
in
inc
test
sub
daa
xchg
pop
or
int
adc
xchg
inc
xchg
push
pop
pop
mov
cmc
shl
pop
call
push
push
pop
push
xchg
jmp
clc
xchg
xor
cmp
popa
push
test
dec
movs
in
les
(bad)
push
xor
je
pop
sbb
call
mov
out
push
push
mov
xor
call
mov
jmp
cli
sub
push
add
push
push
xchg
sub
mov
loop
xchg
leave
outs
leave
add
dec
nop
push
fbstp
dec
push
push
dec
(bad)
sbb
sbb
push
or
or
mov
andnps
mov
pop
dec
xor
loop
pop
mov
loope
aad
pop
jo
outs
adc
les
pop
imul
(bad)
sbb
inc
mov
and
mov
ror
nop
lds
xor
mov
jl
xlat
rcl
jns
mov
and
out
mov
or
test
xchg
jge
(bad)
mov
fld
jmp
(bad)
inc
std
mov
sbb
ret
inc
cmp
mov
mov
jle
push
(bad)
pusha
and
pop
pop
into
jo
shl
jne
psubq
imul
or
loop
rcl
lahf
(bad)
aaa
pop
fwait
mov
jae
cmp
retf
push
int3
cmp
aad
mov
push
int
sar
pusha
aam
sbb
(bad)
std
and
push
and
cmc
pop
dec
xchg
add
inc
loopne
mov
hlt
pop
call
dec
adc
ds
gs
and
pop
mov
ret
mov
push
test
cmp
(bad)
xor
sub
sahf
mov
dec
lea
call
pop
mov
mov
pusha
and
rol
js
loopne
mov
outs
cmp
lods
xchg
inc
dec
aam
pusha
retf
stos
sahf
dec
fwait
push
and
aad
mov
gs
cmp
jae
inc
push
jne
add
or
push
sub
call
inc
in
xor
out
pop
lods
and
adc
mov
push
xchg
sbb
inc
les
dec
call
aas
sbb
pop
cli
das
pop
adc
or
add
push
pop
retf
leave
fdiv
popa
add
jge
jae
scas
push
push
cli
mov
idiv
sar
imul
rol
mov
aad
ret
sub
sbb
cmp
xchg
fdivrp
loop
jg
cmp
sbb
jnp
pop
or
call
popf
outs
adc
pop
shl
aad
and
jmp
xor
sbb
popa
fxch
icebp
outs
cmp
xchg
and
fnstenv
stos
jg
cmc
inc
stos
(bad)
push
add
repz
mov
inc
ficom
xchg
xchg
out
and
scas
mov
or
(bad)
ins
cmp
mov
daa
scas
leave
inc
sti
sahf
mov
cmc
mov
ins
mov
jmp
sub
push
fs
fisubr
cmp
jmp
mov
aaa
and
sbb
rcl
imul
xchg
xor
inc
xor
(bad)
cmp
sti
clc
xchg
jne
aad
clc
fdivr
out
sar
jp
sti
loopne
mov
in
push
loopne
mov
repnz
sbb
jl
mov
mov
retf
mov
xchg
aas
in
sahf
adc
dec
mov
retf
mov
xchg
movhps
jbe
fcmovbe
sub
mov
mov
shr
xchg
jmp
repnz
pop
daa
mov
xchg
es
repnz
mov
lods
xchg
and
dec
sti
pop
iret
stos
xchg
scas
and
lods
sbb
ins
jne
push
(bad)
cmp
pop
cmp
mov
mov
cdq
add
add
add
inc
sub
(bad)
dec
inc
scas
dec
inc
xchg
mov
sub
aas
adc
aam
adc
pop
and
imul
outs
jge
idiv
loop
data16
mov
sub
std
add
mov
cli
scas
mov
mov
test
lods
jge
mov
jle
pop
adc
mov
xor
push
cmp
xchg
add
push
int
and
daa
pop
test
mov
jnp
fist
aad
adc
es
sbb
xchg
mov
je
mov
sub
mov
ror
cs
xchg
and
in
xor
mov
movs
jno
sbb
out
aam
js
sahf
inc
pusha
shr
mov
(bad)
push
movs
mov
jmp
inc
iret
js
repz
sub
or
add
sbb
inc
cli
adc
in
out
neg
xor
cmp
gs
mov
sub
xchg
jns
lock
dec
pop
sub
mov
sub
sbb
lock
jmp
add
add
mov
jmp
mov
mov
in
retf
jnp
lds
jge
out
mov
lahf
or
mov
arpl
adc
inc
jnp
fild
div
(bad)
add
std
mov
fimul
push
fcmovu
xor
es
pusha
pop
pop
ror
mov
mov
mov
mov
aad
dec
ret
push
cli
pop
push
outs
add
in
xor
sbb
dec
in
in
xchg
pushf
and
rcl
ret
push
loop
ror
xor
es
movnti
cmp
mov
sbb
int
idiv
mov
test
add
arpl
cmp
jbe
push
jecxz
sti
(bad)
ffreep
push
jge
ret
sbb
or
aaa
add
iret
test
push
(bad)
jle
out
icebp
or
retf
mov
mov
mov
sysexit
jmp
ins
bound
sub
scas
dec
mov
cmp
sbb
xchg
xchg
cmps
cmp
mov
jnp
push
xor
mov
push
push
mov
imul
mov
loop
pusha
adc
enter
mov
lock
repz
mov
dec
shl
rol
dec
sar
push
push
add
icebp
mov
mov
aad
jnp
pop
xchg
jecxz
out
ror
xchg
loop
loopne
cmp
sub
imul
mov
pop
fidiv
repnz
lea
imul
or
sbb
xchg
mov
outs
test
ins
pop
push
in
push
xlat
xchg
inc
sub
sub
pop
push
adc
jne
jge
xor
mov
mov
movs
fisttp
loop
daa
jne
pop
enter
push
in
sub
fcom
jmp
addr16
je
fs
cmp
push
icebp
mov
ficomp
xchg
out
pop
pop
push
mov
dec
mov
jmp
add
(bad)
or
sbb
sub
(bad)
aad
imul
stos
out
push
loop
or
sub
mov
xlat
pop
inc
push
popa
mov
xor
and
mov
fdiv
movs
push
jno
nop
out
jge
out
int
scas
arpl
imul
(bad)
sub
xchg
dec
sub
sbb
lods
jae
pop
and
cmps
mov
xchg
mov
mov
and
push
fadd
sbb
cmp
mov
mov
les
dec
cmc
mov
in
jne
mov
mov
xor
ja
lods
iret
push
dec
cmps
pop
stc
pop
xchg
lock
cld
push
inc
xchg
pop
fisub
cdq
je
not
aam
mov
retf
out
ret
adc
dec
cdq
inc
aam
or
mov
mov
test
shr
or
fs
aam
cmps
push
out
xlat
and
(bad)
aad
inc
sti
loope
dec
jb
loopne
xor
arpl
adc
aam
add
adc
or
cli
into
mov
inc
jg
movs
mov
fnsave
daa
mov
cmc
and
jne
popf
and
xchg
ja
jb
int3
(bad)
loop
jo
mov
test
mov
push
in
pop
and
adc
inc
adc
inc
ins
mov
scas
xor
dec
rol
out
test
mov
pop
xlat
lods
das
ret
in
add
shl
mov
inc
fucomip
shr
jg
push
(bad)
jmp
(bad)
mov
jge
cmp
(bad)
out
rcl
sub
sub
jne
xor
lahf
sub
in
sbb
cmp
sub
xchg
je
xlat
jle
adc
(bad)
adc
rcr
cmp
add
or
sub
out
ss
push
or
data16
stos
cmp
pop
jg
mov
inc
xchg
ds
daa
and
fist
push
and
add
push
data16
sbb
inc
fcom
xchg
add
inc
les
lock
out
movs
jl
sbb
sub
mov
out
and
out
popa
add
mov
mov
pop
dec
out
mov
into
fiadd
dec
xor
and
mov
mov
cmps
xlat
mov
in
jg
sbb
xchg
das
dec
(bad)
mov
dec
lock
loope
mov
std
push
addr16
xchg
jle
addr16
mov
mov
leave
stc
jecxz
(bad)
call
lea
cmps
or
shl
mov
out
fidivr
jmp
push
ins
dec
jle
mov
adc
into
inc
adc
push
mov
aaa
xchg
ror
jnp
inc
(bad)
fistp
fdiv
pop
xchg
imul
in
fwait
int
clc
sub
pop
inc
mov
cdq
push
lods
adc
ret
cmp
stc
loopne
xchg
fdiv
xor
pop
(bad)
addr16
ins
aaa
mov
(bad)
loop
push
sti
sub
mov
sub
sbb
pop
and
leave
fwait
and
movs
test
mov
cs
imul
add
cmc
jmp
sbb
or
push
mov
sub
sub
rcr
out
outs
jb
mov
outs
add
and
popf
push
sub
and
enter
add
xor
adc
ins
dec
push
mov
dec
mov
arpl
repz
test
sbb
js
aas
xchg
and
neg
push
mov
pop
pop
mov
lea
arpl
pop
cmps
stos
xor
mov
push
pop
outs
sti
add
sbb
pop
outs
mov
cdq
in
inc
adc
cwde
sbb
pop
test
xchg
xchg
and
call
sahf
xor
inc
add
shl
pop
test
in
shl
mov
jge
popf
mov
inc
push
push
mov
shl
dec
sub
dec
push
mov
add
mov
mov
push
mov
(bad)
out
pop
jae
push
aaa
test
mov
shl
(bad)
inc
les
lahf
adc
sub
push
outs
xor
test
adc
pop
xchg
in
push
sti
in
jo
fiadd
fild
pop
jp
fiadd
lods
xor
stc
ins
jge
pop
adc
mov
cmps
xchg
js
imul
pop
rol
mov
push
arpl
jl
mov
lods
fdiv
test
xchg
inc
not
shl
mov
(bad)
inc
repz
cmp
mov
scas
ret
cmp
jmp
inc
(bad)
lods
pop
adc
jle
sar
xor
fdivr
enter
mov
xchg
pop
mov
fwait
xor
xor
jbe
mov
leave
dec
popf
aad
sbb
int3
jbe
adc
dec
scas
or
push
movs
leave
inc
jae
pop
xor
mov
jmp
ins
dec
pop
gs
retf
cmps
dec
aam
jae
pop
mov
inc
pop
or
and
lods
int
push
jge
add
and
cmc
xchg
xchg
lock
jp
jl
push
(bad)
push
aas
test
cwde
mov
xor
arpl
xlat
mov
(bad)
movs
ja
out
mov
cmp
jb
fwait
movs
sub
outs
adc
(bad)
lods
mov
push
(bad)
push
adc
jbe
push
clc
sbb
clc
loop
mov
into
fistp
pop
pop
stos
sahf
movs
sahf
xchg
inc
ret
and
or
pop
sti
xchg
mov
bound
fwait
or
cmp
cmp
aas
adc
fcomp
pushf
or
add
push
(bad)
mov
xor
and
out
inc
aad
sbb
push
sbb
xor
sti
mov
sub
mov
js
rcl
mov
jle
fcom
in
pop
jo
dec
repz
out
sbb
xor
push
iret
ror
pop
stos
aad
movs
popf
int3
ds
jl
jnp
mov
mov
ret
mov
inc
retf
sbb
add
and
adc
dec
mov
dec
push
sbb
shl
sub
push
xchg
cmp
movs
jne
scas
repnz
or
sub
imul
pop
rcl
cdq
mov
push
xor
(bad)
imul
lock
mov
std
(bad)
hlt
sar
into
jmp
and
fcom
mov
(bad)
mov
loopne
jmp
call
and
inc
jmp
cmp
add
mov
push
fadd
pop
sar
xchg
test
cmps
das
retf
mov
jns
pop
cmp
ja
xor
mov
fwait
test
movs
int3
test
xorps
pop
cmp
ins
pop
loope
sub
repz
in
xchg
lods
fcom
mov
shr
outs
or
xor
dec
add
pop
loope
push
data16
push
jp
out
mov
mov
or
gs
mov
jnp
cmp
fiadd
in
fwait
retf
push
mov
add
push
in
xchg
mov
test
(bad)
outs
cmp
push
dec
inc
push
iret
loopne
aaa
xchg
mov
and
in
jg
mov
push
inc
push
stos
cld
pop
in
sub
xchg
mov
lods
jecxz
dec
or
dec
adc
pop
mov
ret
mov
cdq
loop
(bad)
xor
fisub
push
dec
xchg
sbb
inc
cmps
mov
mov
test
lea
jbe
and
cmp
pop
ret
iret
jbe
adc
push
movs
dec
inc
sub
mov
jp
cmp
dec
sub
or
in
(bad)
icebp
mov
pop
inc
push
xor
test
sbb
pop
lods
xchg
ds
cld
cmp
xchg
fstp
xchg
sub
xchg
jb
fldenv
mov
dec
jecxz
test
jmp
ins
pop
mov
aad
pop
in
je
and
add
xor
dec
mov
sbb
push
call
xor
les
xchg
cld
cmp
cld
lods
aam
ds
ins
mov
cld
dec
jnp
or
retf
into
les
adc
push
ror
sbb
mov
jmp
sbb
ror
sub
push
mov
jecxz
aam
mov
mov
or
jge
inc
pop
(bad)
shl
adc
mov
jp
popa
jno
rcr
hlt
jbe
add
mov
out
repnz
sbb
dec
gs
push
jge
or
test
mov
int3
call
push
mov
dec
mov
imul
(bad)
cmp
and
and
scas
dec
aas
push
mov
cld
mov
mov
lock
lock
outs
mov
mov
hlt
in
jnp
sub
cmp
add
mov
sbb
out
cmp
out
nop
imul
cmp
pop
icebp
out
xor
out
ja
icebp
retf
mov
retf
mov
aaa
stc
inc
jo
ja
push
(bad)
sahf
dec
adc
mov
ret
xchg
cmp
lock
aas
mov
adc
jne
popa
mov
sbb
jmp
jecxz
mov
add
xchg
pop
(bad)
in
pop
(bad)
mov
inc
cwde
sti
sbb
adc
cdq
mov
xor
push
mov
and
adc
mov
je
mov
mov
ss
icebp
push
inc
addr16
sti
rcr
inc
ret
(bad)
cmps
icebp
or
adc
jb
inc
retf
loopne
jno
cmp
jmp
fld
dec
jp
(bad)
(bad)
jb
cmp
or
sbb
into
cli
add
jge
into
mov
mov
scas
sbb
add
mov
leave
mov
xchg
fld
std
mov
sbb
fidiv
repnz
(bad)
repz
mov
adc
popf
fwait
cmp
stos
cmp
fwait
inc
sbb
lods
mov
daa
mov
sti
pop
rcl
mov
jge
xlat
pop
fs
ret
cwde
sub
icebp
(bad)
stos
cmp
ja
dec
mov
mov
adc
push
push
ja
dec
(bad)
loope
scas
push
mov
jo
xor
out
js
clc
xor
xor
scas
aad
sbb
in
xchg
mov
call
jle
sub
fdiv
mov
clc
js
retf
mov
or
dec
inc
loope
dec
sub
mov
(bad)
inc
pop
adc
adc
jmp
cmp
nop
or
shl
jecxz
movs
dec
rcl
fwait
jge
or
daa
mov
pop
in
daa
cmp
push
test
dec
cmp
sub
add
cmc
add
cmps
test
mov
jns
inc
and
mov
mov
mov
inc
es
popf
mov
inc
and
push
push
ins
out
cmc
sbb
ja
loope
cli
cmp
sti
ret
shl
jne
xchg
pop
cmp
sub
mov
cmps
sbb
dec
in
in
push
(bad)
cmps
faddp
xlat
xor
jo
push
adc
jg
sbb
pop
push
mov
es
xchg
lea
and
inc
pushf
ss
retf
push
sub
mov
mov
mov
data16
sub
lods
mov
sar
les
or
xchg
sub
xor
add
sbb
xchg
sub
push
popa
popa
mov
push
outs
aas
pusha
fs
cld
push
cmc
int
in
adc
add
mov
pushf
fstp
and
loopne
repz
cmp
dec
and
add
jle
dec
dec
dec
xor
mov
mov
add
test
lods
ror
in
or
mov
retf
pusha
pusha
cmps
sub
jg
push
jg
pop
mov
test
pop
ja
jnp
call
mov
dec
mov
sbb
mov
inc
and
inc
call
lahf
aam
push
inc
fsubr
iret
shr
pop
sbb
repnz
pop
aad
adc
mov
pop
push
movs
clc
dec
xchg
push
cmp
and
adc
fbld
repnz
call
xchg
sar
sbb
sbb
ror
cs
(bad)
mov
push
outs
mov
arpl
out
clc
cwde
in
xchg
out
movs
cmp
std
sub
inc
iret
sbb
mov
jnp
push
push
adc
xchg
lea
lods
arpl
fdiv
retf
int
jmp
jecxz
cmps
jns
retf
ror
and
xchg
or
xchg
inc
jno
test
call
stos
loopne
xchg
cwde
xor
lar
ins
cmp
sbb
imul
(bad)
jecxz
retf
fistp
imul
ss
xor
dec
test
daa
dec
push
sub
fs
adc
mov
idiv
xchg
and
inc
sti
push
mov
sbb
jge
pop
mov
out
std
pop
sub
cli
and
dec
pop
repz
dec
repnz
inc
jecxz
inc
mov
dec
test
pop
icebp
cmp
les
fwait
dec
xlat
inc
ret
ins
enter
xchg
pop
pop
hlt
push
push
push
or
jecxz
pop
sti
sub
jg
mov
out
fnstcw
jae
ja
push
dec
dec
xor
xor
fsub
inc
jne
jo
sub
add
inc
add
jge
icebp
adc
(bad)
aaa
push
add
cmp
(bad)
in
push
xchg
push
cdq
leave
sub
or
xor
daa
jl
cmp
hlt
or
mov
test
cli
imul
cli
fdiv
jl
cmps
les
inc
clc
adc
lods
inc
or
cld
pop
leave
fld
mov
dec
fmul
or
inc
and
mov
sub
jp
arpl
rol
push
inc
hlt
into
stc
ds
push
icebp
jle
(bad)
push
jnp
mov
ins
lods
(bad)
adc
(bad)
int3
jae
fs
xor
mov
xchg
or
inc
xchg
test
mul
adc
jb
mov
ror
loop
addr16
shr
mov
call
mov
movs
mov
mov
int
sub
sub
dec
sub
iret
shr
or
pop
jl
jmp
outs
jnp
hlt
out
aam
cli
test
call
ins
fidivr
xor
jmp
and
(bad)
mov
call
push
popa
dec
mov
sub
and
rcr
adc
sub
cmp
or
stc
mov
jl
adc
xor
in
xchg
popa
retf
push
xchg
aaa
sbb
xchg
sub
lahf
fimul
movs
xchg
pop
out
sbb
mov
fs
xchg
daa
push
fwait
out
fmul
jle
add
and
ds
push
rcl
mov
xor
dec
push
mov
add
mov
out
scas
ja
sub
movs
js
jbe
das
repnz
sahf
inc
mov
jl
push
mov
xchg
xchg
(bad)
por
pop
aas
adc
inc
sbb
mov
xchg
pop
add
inc
push
pop
xor
ins
mov
mov
or
scas
cmp
mov
std
call
fcmovb
popf
(bad)
sbb
and
repz
jne
sbb
add
jl
imul
cli
cmp
mov
adc
dec
data16
aas
adc
add
sub
sub
mov
mov
out
lods
imul
cld
pop
xchg
inc
inc
test
leave
dec
rol
sub
setl
sub
shl
or
add
dec
mov
les
out
stos
sti
sub
inc
jnp
sub
and
scas
inc
(bad)
adc
sub
loope
gs
je
and
pusha
jb
mov
push
sbb
inc
test
inc
or
adc
pop
jnp
mov
out
jns
sub
mov
rcl
and
mov
repnz
jecxz
cmps
dec
add
sar
jle
out
mov
mov
jbe
enter
jl
fmul
outs
inc
pop
pop
in
pop
jmp
out
add
pop
or
add
cmps
inc
pop
icebp
clc
inc
xor
mov
sub
dec
xchg
call
jae
mov
cld
shr
sbb
and
jmp
inc
mov
mov
mov
mov
inc
scas
mov
lea
cmp
shl
outs
fcomp
aas
jb
xchg
ins
inc
xchg
xchg
push
aas
mov
push
add
mov
add
pusha
popa
mov
int
pushf
ds
fs
test
in
imul
aad
push
push
mov
sbb
push
daa
mul
push
enter
fcmovne
les
loope
push
or
sbb
fild
stc
lock
icebp
pop
adc
je
xchg
movs
into
jo
inc
retf
(bad)
shr
daa
cmp
dec
add
sub
jge
das
fstp
pop
int
and
jge
in
in
cmps
mov
xchg
inc
add
shr
jmp
and
ja
pop
mov
lds
mov
cs
in
test
jae
retf
shl
sti
xor
mov
mov
ror
iret
add
pop
inc
int3
push
ret
lods
mov
jb
xchg
ds
dec
mov
inc
push
(bad)
int3
or
popa
lds
gs
push
sub
pop
mov
pop
imul
loopne
cmp
cdq
adc
push
cmp
and
test
imul
cwde
(bad)
xor
xchg
out
enter
and
aam
xor
lea
pop
call
(bad)
ror
test
lea
xchg
push
jecxz
fldcw
ss
jne
(bad)
(bad)
xlat
or
(bad)
mov
jmp
cmp
dec
push
fisttp
in
imul
dec
shr
test
stos
dec
retf
push
sbb
bound
sub
cli
pop
sahf
lea
js
cmps
jne
stc
pop
adc
popf
repz
xlat
(bad)
and
pushf
sub
or
cdq
ret
ja
aaa
aam
add
push
int3
fiadd
dec
xor
adc
add
pop
sti
int3
xor
sub
push
mov
cdq
in
loope
retf
push
xor
dec
in
dec
inc
xchg
out
sub
loopne
dec
mov
and
cli
iret
bound
mov
jnp
push
nop
pusha
pop
mov
push
gs
xor
sbb
call
or
dec
mov
sbb
cmc
ret
jmp
mov
push
pop
retf
jge
and
out
cs
mov
int3
pop
data16
fwait
dec
icebp
sub
cmp
in
out
fild
or
push
int3
pusha
push
cs
pushf
mov
sub
leave
das
ror
xchg
int
(bad)
mov
test
aad
cmps
(bad)
push
ds
pushf
test
and
jge
mov
adc
mov
cmp
pmaxub
fimul
cmp
adc
and
xor
jb
or
std
mov
les
cmp
mov
push
jp
jp
stos
xor
fisttp
test
push
pop
sbb
test
dec
push
cli
(bad)
push
dec
sti
les
xor
add
js
pusha
push
inc
sub
add
gs
jl
add
cli
push
lock
test
leave
and
pop
inc
xchg
adc
(bad)
mov
fcomp
imul
mov
idiv
out
inc
cli
repnz
add
cmp
test
shr
and
sbb
outs
add
adc
xchg
adc
sbb
xchg
(bad)
rcl
mov
dec
xchg
and
in
sbb
je
pop
mov
or
cmp
sub
sbb
pusha
ret
lods
jl
lods
test
inc
push
adc
(bad)
retf
in
iret
fmulp
xchg
push
dec
ins
lds
jne
aam
stos
aas
adc
nop
retf
push
sar
(bad)
jmpw
ins
add
pop
scas
rol
xor
pop
xor
xchg
fdiv
xchg
dec
pushf
(bad)
lahf
mov
add
dec
mov
cs
popa
ins
mov
xor
mov
ja
out
stc
mov
hlt
cs
mov
xchg
daa
or
add
inc
aad
(bad)
sti
imul
out
out
push
rcr
cmp
cli
add
push
leave
pop
mov
arpl
ja
aam
mov
pop
in
popf
int3
fisttp
mov
sbb
push
or
xchg
jbe
(bad)
cmps
push
inc
pop
adc
nop
add
inc
dec
loop
sbb
rcr
or
adc
sub
jecxz
adc
std
std
not
hlt
xlat
ja
adc
loopne
fxch
jmp
into
ja
cmp
in
ret
sbb
sub
pushf
inc
fbld
pop
sahf
jmp
jb
xor
xchg
rcl
je
loopne
adc
dec
mov
add
jecxz
scas
sbb
mov
xchg
test
mov
jns
retf
and
and
cmc
in
and
adc
ins
es
jp
in
mov
mov
je
add
lea
or
lods
in
push
sub
adc
dec
int
sbb
out
jecxz
ins
inc
into
rol
outs
fwait
xor
push
adc
mov
outs
cdq
xor
jmp
movs
loope
mov
(bad)
cmp
sub
and
inc
sahf
and
(bad)
dec
pop
mov
adc
adc
xchg
out
jmp
or
pop
addr16
mov
in
xchg
jle
pusha
ret
scas
xor
inc
loop
sub
xchg
mov
xchg
imul
les
ret
loopne
and
mov
repnz
adc
lock
xor
adc
imul
xor
mov
inc
jnp
or
push
rol
fimul
lea
mov
or
xchg
sbb
imul
sar
in
loope
je
jns
mov
(bad)
sbb
fist
sar
dec
mov
xchg
ins
stos
movs
sbb
cdq
sub
dec
js
cld
pop
fistp
or
repnz
jmp
or
pop
es
std
cmps
movs
cmp
hlt
mov
rcr
rol
stos
test
add
mov
(bad)
inc
test
push
xchg
xor
cmc
xchg
(bad)
div
movs
sbb
pop
cmp
sub
push
je
cld
test
sub
mov
lods
jnp
push
mov
or
repz
icebp
sti
or
sbb
popf
push
outs
dec
scas
inc
(bad)
mov
cmp
push
ds
push
fs
inc
cs
push
ror
popa
aaa
inc
mov
push
mov
fimul
sbb
mov
iret
pop
imul
pop
cld
and
out
mov
cld
mov
out
mov
inc
lea
pop
out
mov
inc
sbb
cmps
retf
dec
dec
(bad)
adc
push
nop
xchg
push
stos
imul
js
out
or
popf
inc
pop
ss
pop
addr16
push
pop
inc
and
mov
loop
es
add
lahf
pop
or
sbb
je
int
adc
movs
out
stc
cdq
mov
sbb
xor
push
adc
fisubr
test
ret
imul
iret
jne
sbb
cwde
sub
stos
ror
ret
push
push
dec
enter
cmps
or
pop
test
(bad)
cli
adc
jl
ror
inc
push
mov
aaa
xor
ss
dec
gs
ret
iret
mov
xlat
push
fstp
dec
cmp
dec
inc
(bad)
fild
xchg
inc
or
arpl
std
sbb
movs
sub
ds
pop
xchg
jg
and
push
stos
xchg
jmp
mov
jge
adc
fwait
call
mov
push
out
mov
sub
cmps
and
and
xor
jge
stos
rcl
adc
outs
mov
cwde
std
pusha
adc
imul
push
xchg
mov
test
pop
inc
xor
fimul
fild
pop
in
mov
push
jp
lea
stc
add
pop
dec
or
ret
ja
enter
retf
mov
sub
out
xor
mov
cmp
jo
fcom
push
retf
bound
xor
xor
mov
(bad)
daa
sbb
jmp
sub
sahf
sub
aam
jno
sub
lock
cmp
call
jle
xchg
cmp
retf
sbb
in
dec
add
movs
push
and
jl
adc
nop
cmp
jmp
cmp
lods
add
add
test
and
mov
jbe
ja
scas
or
pop
lods
mov
mov
sub
cmp
xchg
in
shl
in
arpl
sbb
mov
call
nop
jnp
adc
adc
ins
lock
mov
call
jp
dec
bound
fadd
scas
jo
and
push
pushf
add
arpl
arpl
ins
pop
cmp
jmp
and
lea
in
outs
sbb
mov
add
mov
jmp
mov
movs
dec
dec
or
pop
pop
stos
xor
movs
xchg
cmp
sub
sbb
call
ret
mov
sbb
inc
sub
cli
add
sti
mov
and
jle
std
or
cmps
xchg
cmp
push
lods
push
hlt
cmp
xor
gs
fst
mov
sub
test
daa
lock
dec
sub
mov
sub
in
add
shl
rcl
sub
inc
pop
and
popa
xor
test
mov
js
mov
stos
cmp
dec
pop
mov
or
fwait
clc
push
mov
mov
repz
int3
cwde
or
repnz
popa
dec
jmp
(bad)
sahf
sbb
mov
into
cmp
dec
mov
xor
jle
clc
lea
pushf
lock
jbe
addr16
xchg
sahf
or
test
xchg
jne
xor
jmp
mov
xchg
movs
cdq
retf
mov
sbb
or
ret
aad
das
cmp
(bad)
repnz
sub
mov
mov
sar
cld
ret
lods
jns
sub
test
imul
fstp
inc
popa
cmps
pop
cmc
cmps
inc
cmp
outs
mov
fisubr
retf
mov
cmp
sbb
pop
fsubr
mov
dec
xchg
jbe
adc
push
pop
mov
or
icebp
xchg
daa
not
test
scas
mov
fstp
loope
int3
xlat
shr
fisub
fist
xchg
cmp
sbb
outs
rcl
sub
retf
ds
jne
movs
mov
lea
mov
sbb
xor
jmp
mov
out
enter
xor
xchg
stc
mov
(bad)
mov
pop
fisub
xchg
movs
add
shl
daa
cmp
dec
xchg
mov
arpl
fnstcw
mov
mov
cmp
ins
push
(bad)
enter
adc
jno
xchg
movs
pop
es
jne
adc
push
cmps
or
xchg
cwde
stc
ror
jb
xchg
loopne
fidivr
add
bnd
daa
ja
lods
nop
lsl
das
pop
jno
das
sbb
daa
outs
inc
retf
(bad)
std
adc
fsubr
fldcw
test
mov
inc
addr16
js
cs
push
je
div
das
nop
pop
xchg
jp
mov
ja
xor
(bad)
sbb
rep
mov
cmp
fistp
jae
in
inc
mov
mov
in
(bad)
jne
leave
sti
push
lds
cmp
mov
jl
inc
out
add
out
adc
aaa
mov
xchg
xor
ds
mov
sti
push
dec
or
test
mov
xchg
in
out
push
xchg
push
repnz
sub
lods
in
nop
div
ins
mov
or
xor
sbb
add
adc
pop
int
xchg
jne
lea
sub
frstor
pushf
das
in
je
stc
shr
dec
stos
adc
or
xchg
xchg
bswap
xchg
out
stos
pop
cmps
addr16
pop
lods
adc
test
mov
cwde
mov
das
(bad)
je
fidiv
inc
retf
dec
test
add
fisttp
mov
test
pop
std
xchg
aaa
xchg
(bad)
test
outs
in
push
loop
retf
lods
retf
iret
nop
cmp
mov
arpl
add
les
dec
repnz
cdq
jb
ror
cmp
fadd
(bad)
je
xor
add
push
sub
jle
add
and
fsubr
stc
cmps
inc
ja
mov
cmp
imul
jo
push
repnz
adc
mov
inc
sbb
addr16
pop
and
pushf
or
inc
aam
xchg
mov
jg
mov
rcr
xor
std
fdivr
xor
cmc
stos
ret
pop
dec
int3
xor
lea
(bad)
mov
icebp
cmp
and
cmps
sub
repnz
neg
cmp
push
jbe
cmps
fcom
cmps
add
inc
not
pop
mov
mov
pop
cld
dec
add
inc
mov
mov
mov
dec
scas
push
sbb
pop
jno
push
in
fs
inc
das
mov
icebp
pop
call
add
xlat
and
mov
sti
ret
jg
push
xor
and
sub
mov
mov
xchg
push
and
or
add
loope
int
(bad)
mov
jp
outs
pusha
pop
lds
fadd
in
sbb
pop
inc
mov
xchg
ja
push
adc
arpl
sub
sub
jae
jl
inc
pop
gs
dec
fimul
out
and
mov
ret
mov
(bad)
clc
loope
inc
xor
daa
popf
jne
outs
mov
mov
jp
mov
sbb
cmp
inc
jge
fisubr
add
inc
xchg
popf
fsub
retf
jo
ret
in
jmp
adc
call
jmp
push
stc
iret
cwde
cmps
into
retf
aaa
dec
jno
lods
push
xchg
cmp
xlat
addr16
xchg
jbe
inc
retf
sahf
repz
push
fucomi
arpl
adc
out
inc
cmp
add
les
aad
or
mov
loopne
or
aas
fld
or
lods
bound
add
push
fild
out
adc
jge
dec
out
jnp
popf
pop
into
in
rcl
outs
mov
sti
and
sbb
sti
xor
pop
add
arpl
ficom
dec
das
lahf
mov
loope
fwait
pop
sub
mov
xchg
iret
xlat
xor
mul
pop
mov
push
(bad)
pop
pop
aas
fidivr
dec
add
daa
dec
jo
movs
js
div
cmp
int3
ss
jmp
mov
ror
lahf
cwde
aad
mov
jne
inc
test
dec
xchg
js
pop
retf
jmp
sbb
das
movs
mov
shr
fwait
mov
jbe
loopne
push
push
pushf
jbe
or
push
movs
xor
pop
retf
shr
mov
ins
xchg
arpl
mov
test
ins
fdiv
cs
cmp
popf
lock
aaa
xchg
mov
xchg
loop
stos
sbb
jae
cmp
cli
fiadd
adc
fsub
xchg
ja
int3
cmps
mov
pop
sahf
mov
add
add
mov
push
repz
aam
pop
(bad)
jmp
loopne
(bad)
xor
js
sti
test
fst
push
ret
cmp
or
jnp
fs
pusha
or
mov
fdivr
push
fcom
lahf
jg
push
add
mov
xor
jb
or
jo
pop
sbb
cwde
(bad)
test
data16
cmp
push
jmp
push
arpl
call
mov
add
sub
es
fidiv
out
ror
adc
lods
rcl
popf
inc
loop
inc
mov
cmps
sbb
jns
jp
or
xchg
sti
xor
mov
or
pop
xchg
fstp
add
rcr
(bad)
mov
xor
inc
addr16
in
jl
popf
cld
xor
fdivp
test
jmp
les
popf
jge
xor
stos
push
add
aas
mov
dec
sbb
lea
mov
les
jl
sub
adc
shr
dec
shr
lods
pop
and
sub
mov
mov
jns
pop
jb
xchg
clc
jp
sbb
sub
sbb
and
lea
xchg
daa
and
or
out
sbb
lock
push
das
mov
push
or
pop
movs
loope
dec
test
std
adc
cli
mov
mov
dec
mov
arpl
(bad)
pop
cmp
out
bound
or
adc
jb
jecxz
test
jno
pop
dec
call
adc
xor
lahf
xchg
add
pop
xchg
sbb
mov
xor
retf
sti
mov
(bad)
daa
push
retf
test
xor
xor
cwde
retf
rol
mov
out
mov
aad
mov
out
jno
adc
pop
cmp
ja
sbb
inc
nop
cdq
and
xchg
nop
mov
in
push
inc
mov
ds
xor
call
push
gs
xlat
push
std
pop
ret
fistp
sub
xor
call
or
pop
sbb
dec
adc
out
jmp
or
mov
data16
loopne
or
cmps
ins
fwait
test
xchg
xchg
popf
jae
test
retf
(bad)
or
and
pop
aad
clc
iret
lods
rcr
sbb
cwde
out
push
ret
fadd
dec
mov
mov
inc
cli
iret
test
and
hlt
mov
test
inc
dec
bswap
sub
stos
pop
ret
add
aad
pop
sub
addr16
into
jnp
mov
pusha
inc
inc
push
mov
aaa
mov
retf
sbb
inc
popa
push
hlt
push
sbb
aad
adc
push
fdivr
jbe
sbb
sub
sub
repnz
leave
adc
or
push
cmp
clc
pop
pop
sub
push
les
mov
mov
adc
fsubrp
call
ds
sbb
pop
adc
mov
clc
ret
cdq
popf
fbld
shl
sahf
not
pushf
xchg
mov
mov
xchg
fcmovbe
mov
add
sub
cdq
(bad)
push
aam
sub
fidiv
cmps
push
sbb
ret
sbb
adc
jo
outs
fwait
aad
mov
pushf
inc
or
sub
xlat
cmps
inc
jae
imul
in
pop
jne
xchg
pop
sbb
scas
(bad)
xchg
mov
ins
rcr
xor
and
add
fdivr
sbb
ja
pop
add
xlat
push
fild
dec
repz
es
push
sub
pop
ret
or
je
aaa
mov
outs
sub
retf
repz
cld
cmps
pop
jmp
push
inc
jbe
fisubr
adc
mov
jg
mov
lea
adc
dec
xchg
out
dec
shr
and
in
std
pop
xchg
into
movs
cmp
mov
mov
fisub
test
mov
inc
ja
adc
je
jo
sahf
xor
ret
pop
xlat
dec
add
add
jg
ret
xor
and
and
jge
sbb
loopne
das
jecxz
fnclex
data16
push
mov
mov
std
scas
mov
dec
sti
lahf
xchg
mov
or
inc
sub
retf
pushf
push
inc
movs
fs
sbb
test
xchg
jns
mov
lock
fistp
imul
cs
jge
aam
ret
inc
out
pop
sar
cmp
xchg
cwde
pop
les
in
(bad)
jo
dec
cdq
movs
lds
es
push
sahf
test
movs
mov
je
je
jmp
(bad)
cmps
scas
and
out
dec
inc
jmp
mov
loope
dec
add
fimul
out
std
stos
hlt
mov
xor
jecxz
mov
pop
xor
adc
int3
leave
sub
jo
xchg
xchg
inc
mov
test
and
pusha
lock
(bad)
push
adc
cmp
scas
repz
or
pop
bnd
std
push
cmps
xchg
inc
ret
repnz
or
jnp
in
sbb
mov
mov
cmp
outs
mov
mov
xor
mov
adc
jns
in
clc
inc
push
neg
inc
stc
repz
add
ins
ret
mov
in
inc
dec
jo
and
das
mov
mov
dec
xor
retf
fsubr
push
pusha
add
clc
test
mov
push
test
ins
jnp
mov
pop
add
ja
ja
adc
jg
add
jp
sti
dec
mov
imul
fst
mov
imul
je
loope
shl
cmp
xchg
or
movs
or
mov
push
dec
sbb
add
and
dec
shr
inc
gs
sbb
hlt
sar
cs
rcr
into
push
mov
cmc
mov
jmp
aad
jecxz
cmps
mov
push
inc
mov
inc
icebp
pop
in
cmp
in
or
lods
loope
xor
mov
cmps
dec
dec
mov
mov
adc
test
push
xchg
daa
push
xchg
test
add
jae
mov
ret
sbb
sahf
jne
xchg
dec
mov
mov
cli
xchg
imul
dec
ret
xchg
retf
adc
adc
dec
mov
sub
ret
ret
sub
jo
sub
jo
jecxz
add
cmp
cmp
dec
xchg
dec
stos
sbb
sub
fsub
and
push
hlt
mov
xchg
mov
in
mov
ret
in
ss
sub
mov
pop
in
mov
sbb
push
dec
mov
xchg
jbe
ror
stos
dec
imul
push
jecxz
mov
mov
loope
loop
mov
adc
cmp
jl
push
cmc
mov
cmps
out
lods
mov
ret
aam
es
(bad)
pop
adc
lods
jge
push
lock
fsqrt
xlat
outs
pop
jecxz
(bad)
pop
cmp
mov
ret
inc
dec
stos
mov
nop
push
dec
sub
sar
push
(bad)
cmp
mov
je
pop
stos
in
test
mov
cmp
lods
xchg
ds
ficomp
cwde
mov
push
sbb
movs
pop
or
add
pop
push
mov
xlat
(bad)
addr16
and
repz
or
push
cmp
(bad)
repnz
adc
xchg
or
cdq
aas
popf
inc
mov
push
xor
out
loop
inc
ja
jecxz
js
fs
sub
mov
and
mov
xlat
mov
xchg
adc
xchg
pop
int
fwait
repnz
ds
add
cmp
add
scas
fld
and
bound
and
mov
inc
in
popf
icebp
adc
and
int3
ss
scas
cld
cmp
adc
or
pop
push
xchg
mov
or
shl
(bad)
xor
les
ror
arpl
cmps
jne
ret
(bad)
and
fwait
clc
inc
ja
mov
add
xchg
sbb
and
mov
das
mul
test
(bad)
cld
mov
ds
inc
aas
mov
test
inc
shr
rol
dec
test
aas
adc
je
inc
sub
test
fwait
add
cli
xor
inc
or
pusha
icebp
dec
xchg
cmc
jns
xchg
test
mov
cmp
mov
nop
sbb
pop
out
sbb
inc
dec
js
stc
pop
mov
retf
sbb
push
cwde
faddp
inc
cld
adc
xor
adc
inc
scas
and
push
dec
mov
test
aas
daa
jne
push
mov
stos
mov
leave
ins
adc
cmp
lods
xchg
mov
dec
cdq
ds
sti
mov
mov
sbb
call
add
mov
xchg
add
mov
mov
dec
and
jmp
sbb
scas
test
(bad)
jmp
rol
cmp
and
xchg
into
repz
dec
sub
rol
mov
jl
sbb
sbb
and
popa
jmp
sub
mov
xchg
jb
hlt
pop
rcl
aad
xchg
cmps
mov
adc
repz
jle
inc
enter
cmp
jne
(bad)
daa
dec
das
adc
repz
xchg
adc
xchg
inc
jno
movs
adc
test
push
jne
out
jmp
jle
aaa
inc
cli
push
enter
fadd
in
popa
(bad)
and
xchg
dec
aam
fwait
mul
test
mov
mov
inc
inc
dec
test
mul
and
enter
jb
cli
lock
rcr
jmp
dec
(bad)
jo
sbb
and
pop
add
inc
jbe
mov
and
mov
xor
fdivr
xchg
mov
or
push
sub
jg
ja
je
fisub
mov
or
fnstsw
mov
test
fist
clc
jno
sub
imul
push
fidiv
inc
ss
repnz
repnz
push
push
daa
or
adc
enter
mov
repz
mov
or
shl
ins
addr16
dec
neg
dec
and
(bad)
in
daa
aad
cmp
mov
jecxz
(bad)
and
sti
test
xchg
push
hlt
aam
sbb
xchg
mov
adc
inc
xchg
push
in
or
stc
jmp
lods
xchg
xchg
push
sub
mov
adc
(bad)
cs
loope
or
pop
(bad)
jge
lock
jle
test
mov
mov
adc
aas
sub
sub
sar
adc
in
lods
xor
xchg
pop
hlt
cmps
pushf
mov
bound
pop
cld
in
movs
sbb
or
adc
push
adc
lock
into
ret
mov
mov
dec
pop
cs
das
fs
jne
in
out
xor
test
dec
mov
dec
mov
xor
sti
test
or
movhlps
int3
ret
cmc
fdiv
mov
push
adc
pop
inc
push
cmps
arpl
das
dec
cmp
sub
push
cli
and
mov
jp
call
push
xchg
daa
fsubp
sub
ss
out
bound
not
xor
ficom
sub
jg
dec
mov
xchg
ja
data16
dec
in
cdq
dec
shr
std
pop
repz
pop
adc
mov
mov
loope
cmp
sub
pop
or
push
gs
adc
xchg
add
cmp
pop
mov
mov
mov
stos
inc
cmc
cmp
cmp
xchg
loop
sub
cmp
in
sub
(bad)
push
jmp
and
daa
adc
sub
sbb
mov
dec
clc
mov
in
inc
push
outs
lds
fmulp
sti
mov
add
cli
test
adc
push
(bad)
into
hlt
jbe
ins
vpmuludq
(bad)
loope
inc
icebp
gs
jo
push
int3
push
xchg
mov
pop
push
sbb
mov
or
mov
sub
or
cmps
mov
add
repz
ins
arpl
or
cmp
dec
ins
sub
adc
cmp
lock
test
jno
mov
add
xor
movs
xchg
xor
mov
or
fstp
ins
inc
in
ja
ja
ror
xor
dec
cmp
xor
test
rcr
sub
inc
cmps
(bad)
dec
(bad)
cmp
pop
pop
(bad)
pop
pop
jno
out
mov
or
add
mov
xchg
and
pushf
jne
mov
ds
inc
cld
pop
mov
outs
pop
cmp
mov
outs
scas
not
fwait
dec
aam
sbb
aad
xchg
add
mov
push
and
push
out
pop
pop
test
movs
das
pop
mov
cmps
dec
pusha
sub
icebp
fst
aas
xchg
sbb
mov
movs
imul
mov
inc
fist
les
xor
cmc
push
inc
in
mov
std
push
jo
cmps
mov
ret
lods
loopne
ror
push
std
push
jmp
adc
dec
mov
mov
nop
mov
aam
outs
mov
mov
fcom
ret
mov
add
mov
retf
or
push
les
rcl
je
dec
repz
push
sti
jno
mov
outs
mov
ret
adc
dec
inc
jnp
xchg
jge
ja
mov
retf
es
jae
inc
adc
xchg
mov
sbb
dec
sbb
adc
repnz
in
(bad)
aam
mov
lock
movs
jmp
push
ja
daa
sub
inc
push
inc
sub
lods
dec
lock
jb
leave
jo
push
push
ss
lods
xlat
jg
test
lods
and
sbb
pop
dec
ror
fldcw
mov
jecxz
dec
pop
sub
bound
into
cs
shl
fucomp
or
push
add
lea
addr16
pop
ss
or
fnstenv
sbb
retf
jo
or
sbb
mov
imul
dec
mov
push
push
retf
pop
mov
mov
int3
jle
dec
inc
outs
inc
mov
xchg
rcl
cmps
mov
pushf
scas
lock
shr
inc
hlt
pop
pop
lock
scas
add
jmp
adc
lock
add
dec
adc
dec
jl
dec
mov
cmp
mov
sub
sub
or
pop
jge
imul
pushf
pop
sahf
inc
retf
cmp
jbe
sahf
test
aad
shl
in
std
daa
sbb
mov
ins
xchg
dec
repnz
mov
cmp
xor
arpl
mov
repz
ret
ja
pop
repz
sub
xor
icebp
sar
pop
sub
jae
jo
retf
loope
mov
push
sar
cmova
test
pop
daa
or
ds
movs
pop
add
mov
add
aas
push
ss
fiadd
jge
aam
xor
cwde
hlt
arpl
pop
and
sub
cld
ds
aam
mov
into
in
inc
xor
inc
lods
cmp
in
sbb
cwde
popa
das
popa
mov
cmp
test
sbb
dec
fcomp
psubusw
gs
pop
jge
and
out
sbb
loopne
in
mov
hlt
test
jnp
out
jae
jae
(bad)
push
repnz
inc
int
jg
clc
add
(bad)
xor
sub
repz
and
sub
and
es
dec
(bad)
iret
mov
xchg
aas
cmp
xchg
es
scas
sbb
imul
fild
mov
ins
pusha
and
adc
inc
jmp
stos
cmp
xchg
and
mov
cmps
jecxz
shr
stc
(bad)
inc
push
pop
scas
xlat
fxch
es
ucomiss
inc
cmp
popf
pop
jp
cmp
fld
cmp
movs
(bad)
jnp
dec
cmp
in
xor
xor
ins
fs
mov
jge
mov
test
xchg
rcr
lods
push
into
inc
je
xor
mov
cs
outs
call
inc
movs
inc
fdivrp
dec
das
loopne
mov
sbb
outs
mov
repz
mov
add
std
and
test
retf
xchg
pop
dec
in
and
rcl
xor
cmp
ins
cli
mov
cmps
out
push
sub
pop
outs
popa
sbb
ins
push
cmps
xor
lahf
lods
xchg
adc
jnp
ss
mov
mov
addps
add
sub
cmp
leave
jno
gs
xchg
push
or
pop
inc
stos
pop
pop
sbb
cmc
pop
(bad)
repnz
mov
sbb
popa
xchg
sbb
int
jnp
lods
mov
aas
xchg
jl
mov
adc
out
iret
jbe
sbb
cmp
mov
jnp
or
xor
xor
call
mov
xor
jmp
rcl
dec
push
popa
in
out
pop
in
add
pop
in
mov
test
jno
mov
mov
mov
cmps
mov
adc
daa
pop
stos
pusha
sub
mov
dec
scas
neg
jle
in
jg
cwde
aas
retf
push
pop
dec
xchg
dec
push
aad
jmp
pop
fsubp
lds
add
rcl
nop
ins
rcr
dec
mov
sub
push
pusha
stos
adc
inc
xor
mov
jge
lds
xor
mov
jge
inc
das
adc
mov
daa
or
mov
mov
push
xchg
jmp
xchg
cwde
jmp
cmp
test
pop
pop
xchg
jne
div
outs
sub
(bad)
jno
mov
fidivr
and
cld
and
push
(bad)
lds
add
cmp
(bad)
neg
mov
je
mov
hlt
ret
inc
add
dec
mov
arpl
or
and
adc
pop
pop
jmp
jecxz
retf
in
fidiv
cmp
inc
jbe
cs
ss
imul
imul
push
outs
inc
xor
pop
sbb
dec
int
out
pop
lds
loop
jnp
pop
loope
rcl
scas
fwait
addr16
retf
or
sbb
add
(bad)
jb
clc
cmc
ins
test
stos
jo
loop
jns
mov
mov
push
inc
mov
ins
add
mov
mov
pop
add
add
pop
pusha
xor
mov
outs
hlt
push
sub
das
call
cld
jg
push
stos
fcom
mov
push
jge
sub
not
lock
push
push
stos
mov
add
arpl
pop
outs
(bad)
jle
sti
(bad)
aad
jae
stc
sub
mov
call
popa
loop
rol
std
or
mov
stc
addr16
mov
inc
imul
and
mov
rcr
xor
pushf
or
pop
repz
inc
fld
add
jo
ins
and
loop
push
pop
or
push
movs
mov
xchg
adc
or
push
scas
sti
and
push
int
pop
int3
enter
pop
pop
inc
repnz
aad
sbb
and
inc
inc
or
cmp
test
lea
add
test
mov
jmp
mov
inc
mov
mov
ja
in
hlt
mov
in
cmp
mov
aad
out
loop
jmp
sbb
scas
ror
push
add
jle
popf
leave
dec
add
fst
out
add
xor
ret
ret
mov
cli
fdivp
fld
mov
clc
or
dec
mov
lods
sti
ja
push
iret
xchg
cmp
sub
push
rcr
pop
xchg
mov
repz
scas
ds
call
inc
mov
retf
adc
clc
ror
(bad)
or
mov
das
pop
and
push
data16
pop
mov
in
imul
jmp
js
xor
jo
pop
stos
sub
loop
addr16
pop
repnz
inc
pop
out
mov
jp
in
mov
loopne
std
clc
jno
fidiv
add
into
test
icebp
jle
and
or
(bad)
pop
add
jmp
push
fwait
mov
jbe
fidiv
neg
xor
mov
retf
int
fild
mov
rol
adc
imul
and
mov
jo
push
push
add
push
push
ss
clc
mov
aaa
aam
push
and
cmp
push
cmp
jne
test
aas
aas
ret
add
leave
adc
ret
pop
xchg
pop
lea
add
cmc
xchg
out
sbb
es
inc
mov
fwait
imul
lea
je
pushw
xor
in
dec
and
add
enter
loop
sbb
mov
and
ret
and
and
popa
in
cli
pop
sbb
std
or
xor
ins
fsubr
jb
sbb
int
test
add
xchg
leave
jne
sahf
adc
(bad)
enter
dec
je
push
fs
sbb
lods
push
xchg
mov
cdq
daa
adc
enter
dec
cmp
les
repz
push
jp
sub
aaa
aas
mov
push
mul
lea
aaa
aam
jle
sbb
sbb
aaa
ins
push
repz
cmp
and
ins
jmp
and
mov
pop
jle
fisttp
sbb
test
mov
and
mov
(bad)
cmps
int
int3
ret
adc
nop
fcom
es
repnz
lods
sahf
add
lods
fdivr
mov
xor
cmc
lds
pop
hlt
aad
sbb
outs
ins
jecxz
shr
sub
mov
adc
and
jge
mov
movs
push
lods
loop
fldln2
in
in
in
div
xchg
(bad)
rcr
je
rol
lds
jmp
jl
add
inc
mov
rcl
push
adc
mov
(bad)
jmp
push
jns
(bad)
jmp
cdq
mov
shr
mov
gs
mov
mov
or
xchg
pop
shl
push
mov
stos
aam
mov
scas
ss
xor
aam
ror
(bad)
mov
pop
and
sub
xor
jb
inc
out
jae
adc
loopne
int
or
or
aad
cmp
in
dec
dec
dec
sbb
push
mov
sahf
jmp
and
lds
loope
jmp
aaa
(bad)
in
in
enter
mov
stos
lods
rcr
cwde
pop
data16
xlat
pop
push
outs
dec
sar
inc
inc
add
add
stos
adc
jge
test
scas
mov
inc
in
fld
mov
addr16
int
les
dec
mov
icebp
movs
push
pop
out
aad
xor
mov
push
scas
ins
adc
mov
mov
call
mov
ja
mov
stc
aas
popf
jnp
adc
pop
call
rcr
loop
mov
(bad)
mov
repz
pop
and
or
in
out
mov
push
test
xchg
retf
or
repnz
or
jmp
out
add
shl
in
ja
add
dec
xlat
(bad)
fst
rol
mov
scas
in
adc
mov
mov
aas
test
inc
dec
fdivr
push
mov
inc
jp
mov
sbb
js
fsub
cmp
pop
ret
push
sar
faddp
hlt
jbe
dec
xchg
fsubr
xlat
stc
(bad)
and
loope
aas
jge
mov
jle
sbb
je
pop
adc
sbb
mov
jae
(bad)
sub
(bad)
icebp
xor
and
popa
dec
lock
add
dec
add
jecxz
and
jg
mov
xor
push
push
lds
jns
push
in
ds
jmp
aaa
and
clc
cdq
ret
xor
jno
aam
cmps
xchg
xchg
ds
and
int3
pop
dec
imul
add
dec
fst
jo
scas
daa
in
pop
mov
in
xlat
adc
jno
lahf
mov
push
sub
out
push
add
sub
push
std
sub
shl
push
loop
mov
mov
jno
std
pop
arpl
mov
fsub
inc
cmp
xchg
or
mov
push
arpl
pop
pop
mov
mov
and
(bad)
movs
sbb
(bad)
fs
bswap
fs
popa
sbb
in
jno
cdq
shl
cmp
(bad)
sbb
sbb
lds
mov
and
dec
mov
jae
mov
pop
outs
neg
add
ret
into
ds
mov
cmp
cmp
mov
test
hlt
outs
xor
loopne
pop
js
inc
mov
mov
pop
mov
push
mov
das
daa
push
jp
pop
icebp
repz
inc
fild
push
sbb
sub
(bad)
mov
dec
cwde
add
(bad)
or
add
xchg
bound
enter
xchg
cmp
aad
xor
(bad)
jecxz
jmp
addr16
pusha
lods
int3
push
fnsave
jo
inc
pop
lods
and
std
jmp
push
sar
push
sbb
(bad)
test
(bad)
push
adc
jg
imul
pop
sbb
mov
and
adc
jl
sar
cmp
ror
call
jbe
adc
inc
inc
mov
push
jns
mov
into
push
pop
mov
mov
xchg
sbb
ret
adc
xchg
sbb
(bad)
xchg
xchg
pop
cmp
cmp
into
xor
(bad)
div
adc
inc
(bad)
push
pop
fld
add
sub
pop
pusha
jns
ins
sub
lea
test
aaa
aad
pop
inc
inc
mov
(bad)
adc
leave
ja
xchg
movs
jbe
cmc
loopne
cmp
ss
xchg
cmp
cmp
rep
fstp
and
popf
fs
cmp
cmps
sbb
(bad)
addr16
jae
imul
cmp
leave
pop
dec
mov
cmp
sbb
adc
(bad)
push
into
dec
call
ret
mov
ret
xor
aad
mov
pop
lock
test
cmc
(bad)
cmc
in
and
add
inc
and
mov
xchg
lods
xchg
shr
jmp
lods
push
pop
fwait
pop
mov
pop
shl
mov
add
mov
fmulp
mov
sbb
lock
lahf
cmp
jmp
lock
fwait
adc
add
sti
xchg
cmp
gs
cmp
outs
xor
imul
push
push
lods
ss
fild
retf
es
movs
pop
jns
mov
cmc
popa
or
xlat
call
mov
pop
ret
jnp
cdq
(bad)
popf
cmp
imul
xor
ss
inc
jmp
inc
pusha
call
xchg
gs
dec
add
ins
js
in
inc
call
xor
jecxz
sbb
mov
xchg
push
in
ss
or
mov
push
(bad)
lock
mov
ss
push
push
addr16
lock
inc
(bad)
lds
mov
mov
sbb
aaa
pop
movs
movs
pop
mov
arpl
xlat
add
jne
idiv
sbb
stc
xor
mov
mov
ss
jmp
stos
std
sbb
mov
jne
mov
cmp
test
adc
pusha
cmp
rol
xlat
push
aad
in
fwait
xor
aaa
mov
lds
inc
mov
jmp
loopne
add
pop
adc
jmp
in
js
pop
out
loope
fs
xchg
mov
mov
push
cmps
movs
mov
lea
cmc
(bad)
pop
fnsave
outs
cmp
mov
js
sahf
and
retf
xchg
icebp
lods
and
js
sti
cmp
push
iret
adc
jmp
cmp
sub
aaa
int
vpmacsswd
rcl
jo
int
ds
sbb
popa
pop
push
cmp
pop
scas
xor
mov
xchg
in
daa
ins
dec
cwde
fimul
aaa
jmp
test
fst
xor
das
rcl
inc
pop
and
sbb
mov
fstp
inc
mov
mov
sbb
cli
xchg
mov
outs
cmps
addr16
push
aam
ss
imul
inc
xchg
ror
iret
mov
ret
sbb
mov
cmp
xlat
xchg
push
inc
push
xchg
mov
mov
jle
scas
mov
mov
retf
imul
and
mov
imul
ja
dec
and
adc
lock
mov
fs
jbe
mov
mov
pop
mov
pop
lods
ds
pop
shr
imul
aaa
sub
xchg
cwde
or
or
xchg
push
bound
fisub
adc
sahf
or
cdq
xlat
push
(bad)
xor
ffree
(bad)
xchg
aam
popf
xor
ins
js
jl
pop
pusha
adc
movs
mov
sub
ins
ror
je
xchg
fsub
xchg
mov
xor
and
cli
xor
jno
ret
inc
xor
fimul
dec
retf
test
(bad)
or
cmc
ja
xchg
mov
aam
mov
scas
lds
dec
jp
ror
iret
push
cdq
sub
inc
not
add
sub
call
pop
mov
mov
loop
pop
jae
or
js
iret
push
xchg
cmp
pop
adc
or
xchg
imul
aas
sbb
sub
inc
stos
lods
fwait
shr
movs
iret
push
sti
jo
mov
test
int
std
mov
popf
aaa
je
in
js
xchg
sub
lods
lea
jmp
call
xor
and
std
mov
add
dec
gs
call
cmps
inc
xchg
xor
pusha
icebp
movs
xor
(bad)
popf
lods
and
cld
inc
inc
dec
and
jmp
or
pusha
retf
xor
movs
loope
or
mov
xchg
mov
in
dec
xchg
pop
cmp
jnp
in
mov
add
pop
scas
in
mov
adc
lahf
dec
call
scas
push
dec
arpl
cdq
push
bound
std
jb
xor
cmp
pop
outs
push
test
cmp
push
and
mov
pop
sar
cmps
dec
cmp
cld
pushf
ss
push
sbb
movs
es
mov
jnp
cli
adc
and
(bad)
sub
jl
adc
fnstenv
out
xor
js
jne
and
sbb
mov
bswap
xchg
adc
ret
cmp
shr
sub
push
ins
cmps
ret
push
jns
sar
cmp
ror
popa
or
pop
movhps
(bad)
and
leave
jo
ret
xchg
or
ja
mov
push
dec
data16
test
mov
mov
xchg
sub
sbb
mov
pop
stos
inc
gs
ja
int
pop
sbb
xchg
(bad)
push
cdq
xlat
cmp
push
jl
mov
test
ins
push
mov
inc
fcmovnu
call
mov
adc
sub
fidivr
adc
xor
sahf
push
mov
jmp
add
in
fisttp
adc
xor
xchg
lods
repnz
xchg
cmp
lods
cmp
jb
cmp
jmp
ins
data16
push
popf
sub
lahf
loop
loopne
jecxz
mov
jp
hlt
nop
arpl
jbe
ret
xchg
retf
pop
ret
call
jg
aas
xchg
stos
aaa
jg
mov
push
jmp
(bad)
(bad)
cmp
(bad)
adc
jo
dec
data16
xchg
dec
mov
mul
shl
pushf
and
jl
repz
into
xor
mov
mov
inc
and
fild
fldcw
xchg
in
adc
push
ror
adc
and
mov
scas
pop
xor
nop
pop
mov
xchg
js
adc
push
adc
push
jae
addr16
sbb
jns
mov
xchg
icebp
sbb
cwde
fldenv
mov
ja
push
xchg
inc
sbb
push
jo
test
daa
dec
lea
xlat
lea
stos
jo
adc
fwait
dec
rcl
mov
imul
fdiv
(bad)
jbe
sub
sbb
nop
movs
xchg
es
jmp
pop
(bad)
daa
xchg
cmp
into
fisub
ins
push
and
xlat
mov
adc
pushf
sbb
in
icebp
rcr
mov
outs
pop
call
xchg
mov
jae
hlt
fadd
aaa
sysexit
inc
jl
scas
fild
add
push
imul
daa
mov
leave
mov
stos
push
imul
jb
mov
cmps
ret
dec
mov
arpl
outs
aam
jg
sahf
jle
or
xchg
not
ins
cmp
addr16
push
fisttp
je
fsubr
ja
stc
loop
rol
and
xchg
pop
sar
and
stos
mov
cmps
sub
mov
or
mov
imul
jg
out
add
(bad)
test
mov
and
dec
mov
xor
scas
dec
xor
pushw
(bad)
adc
and
mov
scas
pop
leave
cli
les
ins
jo
std
xchg
rcr
cmc
dec
les
je
lods
adc
bound
or
mov
repnz
bound
pop
cmp
movs
or
jle
call
or
inc
ins
div
mov
add
hlt
test
or
mov
scas
add
mov
mov
inc
andnps
xchg
scas
cmc
sub
cmp
sub
sub
jge
mov
mov
jecxz
mov
jecxz
test
imul
inc
ss
aas
pop
in
cwde
(bad)
jns
test
ins
push
(bad)
bnd
pop
xor
cmp
push
std
test
cmps
sub
ss
and
xchg
loop
test
in
cwde
jmp
mov
lods
push
xlat
or
loop
mov
fnstenv
rcl
push
(bad)
leave
add
mov
push
add
push
or
jae
lea
sub
sub
mov
imul
iret
ror
mov
bound
inc
rol
test
cmp
in
xor
inc
loop
push
xchg
(bad)
sar
xor
or
dec
dec
sbb
ficom
adc
test
sbb
gs
ins
sbb
pop
inc
inc
xchg
mov
daa
jbe
pop
jg
cdq
(bad)
mov
enterw
adc
das
inc
push
sbb
aas
mov
push
lods
add
movs
loopne
lea
into
xchg
mov
cmp
or
dec
jns
dec
sbb
and
retf
test
mov
outs
loope
mov
fimul
jg
mov
mov
sbb
mov
out
test
mov
sbb
cmp
clc
scas
push
xchg
cmp
test
retf
sub
outs
mov
ss
ins
ins
sub
(bad)
lock
xor
in
jb
ret
pop
clc
ret
lock
push
arpl
or
int
test
out
ficomp
ret
inc
or
stos
fistp
jle
jb
push
in
and
add
mov
fadd
pop
aam
retf
cwde
push
add
sbb
pop
popf
pop
xchg
and
outs
jg
or
pop
outs
cmps
push
fs
push
loope
aaa
enter
daa
(bad)
call
pop
xchg
mov
imul
pop
je
cli
les
xchg
cmp
out
xor
xchg
sbb
in
call
repnz
std
in
std
test
pop
addr16
aad
adc
jo
mov
mov
das
push
arpl
cmp
push
(bad)
fnstsw
aam
outs
sub
imul
lea
xor
dec
icebp
mov
push
pop
pop
jmp
test
mov
jae
add
daa
call
cmp
daa
int
hlt
mov
adc
fsub
mov
cld
icebp
dec
mov
fiadd
adc
test
mov
push
xor
ins
cmp
sub
sti
mov
icebp
call
dec
mov
xor
fbld
(bad)
int3
jmp
ret
and
sbb
xor
cmc
push
sub
pop
add
push
push
std
sub
mov
aaa
(bad)
call
in
mov
mov
fcom
int3
or
mov
xchg
mov
cdq
int
lahf
cmp
mov
mov
ret
mov
imul
mov
push
pop
cmp
sti
xor
xor
div
pop
pop
sub
inc
inc
add
lods
pop
cmp
and
pop
jmp
jmp
mov
jae
or
pop
jl
xchg
push
jbe
inc
mov
mov
push
mov
push
cmps
je
jp
sub
cmp
and
inc
mul
mov
pop
rcl
jmp
mov
push
push
in
inc
idiv
fld
and
inc
sar
inc
and
call
and
push
pop
adc
cmp
inc
faddp
mov
ds
mov
int
fsub
shl
xchg
push
or
add
nop
shr
lds
int3
dec
fistp
add
and
nop
shr
or
xor
or
sub
cmp
and
sbb
pop
xor
mov
cmc
in
pop
aaa
clc
adc
mov
jle
es
(bad)
repz
xor
les
jmp
lods
mov
sub
jg
fdivr
jmp
jnp
push
jle
test
push
mov
cmp
(bad)
neg
movs
fild
sbb
test
jns
mov
jnp
movs
xor
adc
sahf
sub
out
mov
int3
jns
sbb
aas
cmps
retf
push
inc
shl
clc
sbb
popf
mov
movs
xor
call
fistp
iret
mov
test
mov
call
inc
repz
xor
dec
and
mov
into
xchg
inc
and
sbb
sub
shl
shl
mov
fwait
push
sahf
jnp
jmp
jmp
cwde
out
jmp
stc
xor
push
aas
shl
iret
out
mov
mov
or
leave
dec
std
cmp
mov
and
int
icebp
fldz
dec
fcomp
mov
push
pop
test
jp
push
arpl
sahf
call
sub
outs
cmc
stos
push
ins
xchg
imul
aad
jecxz
xor
in
mov
and
or
retf
ret
mov
les
sub
popf
or
and
pop
xchg
pop
dec
mov
pop
push
arpl
test
rcr
or
les
mov
dec
ret
ins
(bad)
pop
xchg
fldcw
jmp
lea
push
fadd
call
cwde
inc
sbb
fdivr
dec
inc
add
cmps
inc
jmp
pop
repnz
icebp
inc
jbe
sub
pop
es
add
in
xor
aam
xchg
popw
retf
loope
mov
mov
test
mov
or
mov
shr
jmp
jp
jns
add
cmps
test
mov
jno
js
inc
sbb
jmpw
sbb
pop
mov
adc
xchg
fstp
clc
mov
jecxz
add
and
pop
xchg
arpl
cmp
loop
sub
mov
ss
or
add
mov
fwait
mov
mul
or
shl
ins
push
pop
cmp
mov
sub
mov
fsub
ins
fdiv
cmp
inc
jge
xor
hlt
je
jge
bound
mov
lds
in
fs
popa
movs
pop
(bad)
or
and
and
in
(bad)
push
lods
mov
mov
dec
cmp
fcmovbe
xor
leave
outs
cli
jp
mov
std
pushf
in
iret
jle
mov
sub
mov
lahf
fcom
xor
sub
mov
jns
xor
loope
lods
add
adc
fidiv
cmp
sbb
je
stos
and
in
aaa
mov
imul
pop
movs
inc
sar
or
data16
ficom
pop
loope
mov
lods
pop
adc
mov
sahf
fs
mov
cld
mov
jl
sub
mov
scas
daa
adc
retf
xor
inc
fdivr
sub
(bad)
fisttp
sub
int3
loop
sbb
out
stc
push
test
lods
mov
mov
iret
loope
mov
dec
shr
sub
lds
fs
mov
out
aas
fld
add
ja
sub
jno
popf
cmc
neg
mov
inc
push
inc
xchg
les
mov
dec
jae
cmp
mov
push
adc
jge
mov
mov
dec
mov
xchg
jo
neg
lea
repz
out
sbb
stos
(bad)
sbb
dec
mov
inc
xor
cdq
ret
stos
inc
cs
in
and
aas
stos
icebp
shl
xor
xor
mov
xor
mov
pop
dec
ds
pop
mov
mov
xchg
jl
cmp
aad
mov
and
jl
popa
sub
dec
fisubr
jge
call
popf
cmps
das
add
sbb
icebp
mov
dec
inc
and
and
jge
mov
xor
adc
mov
jmp
inc
push
push
sub
mov
xchg
scas
xor
popa
xor
movs
xor
daa
xchg
xchg
jno
out
scas
xchg
ds
in
xchg
jl
jns
fnop
lds
mov
pop
dec
push
mov
ins
pop
add
fst
mov
lock
loopne
enter
push
aaa
sub
pop
jbe
cmp
xor
sbb
mov
mov
add
outs
scas
lds
sub
outs
cdq
dec
mov
add
inc
call
jnp
push
adc
mov
adc
cmp
sub
or
or
jne
pop
dec
jecxz
movs
test
std
inc
jns
push
aam
mov
mov
out
xchg
sub
jmp
or
or
inc
pop
popf
inc
or
cmps
adc
js
bound
and
in
imul
in
and
icebp
xor
jp
stos
ins
add
jno
jg
xchg
xor
xor
sar
dec
mov
adc
add
bnd
jae
adc
in
repnz
in
mov
fdiv
pop
pop
out
jnp
popf
stos
and
mov
xor
leave
jg
pop
retf
dec
fimul
cld
jl
pop
add
icebp
sar
xor
pop
out
imul
(bad)
fst
sar
xchg
in
pop
imul
stc
mov
popa
clc
xchg
cmp
jb
out
je
mov
ror
inc
jo
pop
dec
ja
fistp
movs
ret
fldcw
cld
xchg
loop
shl
popf
int
mov
neg
cs
mov
pop
call
mov
xchg
xor
and
mov
sub
cmp
out
jne
jg
sbb
pop
fisttp
cld
adc
xor
pusha
test
sub
push
sub
outs
(bad)
cmc
jae
xchg
aas
int
aam
and
loope
push
call
jae
and
(bad)
lods
dec
(bad)
push
retf
or
in
sbb
jb
es
fdivr
stc
iret
popa
ja
test
inc
(bad)
or
int3
jecxz
jns
and
and
sub
sub
popa
(bad)
push
cli
in
sbb
mov
ds
fs
scas
in
mov
(bad)
pop
sbb
mov
push
dec
add
jmp
jno
mov
pop
sub
adc
dec
mov
jns
loope
mov
ins
jne
repz
mov
xor
and
loopne
mov
not
test
xor
push
and
fsub
call
and
punpckhbw
scas
mov
and
sbb
test
cld
pop
push
cmp
scas
add
jmp
add
push
pusha
shr
mov
pop
pop
leave
and
jle
ret
cmps
jle
int3
ins
xchg
out
sbb
and
int
cmc
mov
shl
int
mov
imul
mov
adc
lds
cmps
add
call
mov
adc
int3
lea
pusha
jmp
fnstenv
xchg
xchg
sbb
add
sub
mov
test
mov
icebp
popa
add
add
hlt
jle
shl
ror
jo
inc
sub
gs
mov
sub
sub
ds
push
add
movs
or
cmp
pop
xor
cli
movs
jge
ret
test
ret
add
add
iret
sub
mov
sbb
jmp
imul
leave
js
lock
sbb
daa
cmps
and
scas
repz
xor
sub
into
test
je
inc
mov
stos
xor
push
inc
scas
(bad)
sbb
cmps
repnz
cmp
cld
in
sti
mov
mov
and
addr16
add
mov
jp
nop
cmps
nop
lds
js
mov
cmp
jnp
or
call
retf
fild
cli
fucom
mov
mov
xchg
cmp
pop
jge
cs
sub
or
mov
sbb
or
cmp
mov
fwait
push
(bad)
cdq
xor
adc
dec
mov
adc
and
int
or
xchg
outs
mov
movs
dec
push
cmps
dec
cld
shl
fwait
xchg
xchg
push
aas
add
jg
sbb
and
shl
es
nop
fst
icebp
mov
xchg
mov
hlt
mov
adc
dec
adc
dec
out
dec
icebp
into
fwait
movs
sbb
stc
mov
push
enter
std
jl
shl
and
inc
or
and
jns
cmc
inc
out
xchg
and
(bad)
cmc
cmps
inc
mov
mov
fsubr
dec
cld
fnstenv
xor
jecxz
inc
jnp
sti
push
sbb
fwait
sahf
nop
ret
fistp
xchg
hlt
push
and
jno
xchg
std
push
nop
loope
jg
lods
mov
sub
stos
loopne
mov
jnp
dec
jno
scas
mov
push
push
push
lods
ds
jns
lea
cmp
shl
push
adc
add
adc
or
dec
out
shl
mov
dec
js
fadd
mov
mov
jle
loopne
in
push
add
pop
adc
mov
mov
push
push
mov
sar
fiadd
mov
icebp
ins
into
push
add
div
xor
fild
daa
pushf
lods
test
inc
lods
push
lds
in
sahf
(bad)
lock
std
and
popa
dec
pop
test
sub
inc
out
pusha
adc
pop
rcl
je
inc
mov
sbb
cli
test
push
mov
dec
cmp
(bad)
call
push
xchg
push
div
push
repnz
adc
retf
je
xor
fldlg2
dec
sbb
dec
mov
sub
adc
xchg
ror
xchg
retf
(bad)
push
pushf
test
and
cmc
(bad)
mov
in
jne
or
push
clc
inc
out
sar
push
loopne
cmp
jnp
out
adc
and
dec
mov
xchg
xor
jnp
iret
arpl
dec
jne
mov
jmp
jecxz
jne
adc
dec
xor
js
mov
(bad)
cmp
jg
cmp
scas
(bad)
jae
clc
mov
jnp
adc
ret
aaa
rol
mov
adc
dec
shr
add
out
sbb
pop
push
mul
xchg
mov
mov
gs
jns
and
ss
mov
push
pop
adc
nop
jmp
sub
into
sar
(bad)
repnz
call
mov
sbb
jb
outs
xor
shl
std
mov
mov
mov
xor
add
push
loope
cmps
and
shr
add
and
adc
mov
clc
jb
xchg
sbb
aad
repz
pushf
push
ret
lea
cli
mov
and
call
(bad)
xchg
push
mov
sub
cmp
jle
pop
sbb
pop
add
cmp
js
pop
xchg
jg
hlt
ds
xor
(bad)
fidivr
mov
add
dec
retf
popf
lods
bound
stos
aas
jmp
(bad)
cld
jmp
sbb
test
dec
fwait
xchg
fistp
xchg
retf
shl
addr16
cdq
pop
or
mov
test
inc
outs
add
cs
lahf
mov
outs
jb
xor
adc
test
and
sbb
push
pop
pop
bound
int3
mov
sbb
jb
aaa
lock
scas
jl
xchg
adc
out
xchg
and
dec
jmp
aam
shl
int
ss
iret
mov
xchg
pushf
pushf
jns
mov
jmp
imul
jno
or
pop
jmp
div
js
mov
sbb
push
movs
sbb
popf
call
dec
add
mov
xchg
mov
imul
inc
push
hlt
lods
enter
ds
push
retf
(bad)
jo
cmp
ins
cmps
ja
cmps
push
push
dec
pop
xchg
test
sbb
mov
lods
xchg
adc
mov
pop
cs
(bad)
jp
pminub
rol
push
push
mov
adc
test
data16
cmc
sbb
repnz
(bad)
xor
repnz
push
add
jo
pusha
pop
pop
enter
add
or
mov
dec
test
out
jmp
inc
cwde
add
ja
cdq
inc
inc
xchg
push
dec
ror
scas
fwait
ret
pushf
mov
pop
pop
mov
fistp
pop
cmp
mov
sub
ret
shl
adc
pop
scas
xchg
loopne
cmp
mov
add
loopne
imul
sar
xchg
jno
dec
sbb
sbb
mov
or
mov
cwde
les
movs
mov
xchg
mov
fiadd
xchg
xchg
xor
mov
xchg
aad
xchg
xor
nop
mov
mov
popa
push
(bad)
loopne
test
inc
es
dec
push
xchg
inc
out
movs
jg
std
lahf
lds
jne
pop
iret
inc
outs
push
mov
mov
adc
adc
fsub
nop
push
or
add
int3
stos
pop
pop
inc
lea
in
enter
lods
and
(bad)
fmulp
add
ret
add
push
cli
mov
mov
mov
inc
aad
call
test
ins
mov
cmc
call
imul
xchg
ins
test
mov
add
adc
adc
in
out
and
sub
inc
dec
and
fmul
or
in
xor
push
ss
push
mov
adc
or
xor
mov
xchg
cmps
fs
bnd
xlat
inc
cs
mov
jb
jecxz
(bad)
inc
lock
sub
inc
mul
js
out
call
inc
adc
mov
xlat
ja
or
out
cmps
dec
mov
in
lock
shl
rcl
pop
dec
or
movs
cmp
or
rcl
mul
js
ins
imul
mov
sub
mov
push
ds
xchg
mov
inc
lods
push
jne
lods
sbb
inc
or
lahf
stos
push
push
loop
cmp
dec
loop
loop
cs
sbb
mov
mov
enter
sub
inc
jbe
sbb
mov
xor
mov
sbb
push
xor
xor
dec
cmp
fstp
mov
loop
mov
cvtps2pi
inc
or
hlt
inc
std
inc
inc
loope
adc
jnp
pop
add
mov
int
int
pop
push
sbb
inc
jb
cli
imul
xchg
and
(bad)
scas
aas
lods
dec
xchg
or
movs
mov
mov
ins
adc
enter
out
dec
push
or
iret
adc
mov
cmp
push
mov
leave
ins
pushf
fs
push
jne
call
and
ss
pop
fild
in
out
push
mov
pop
mov
mov
gs
cmp
and
jae
jl
lahf
and
arpl
scas
(bad)
xchg
ins
push
xchg
or
sbb
mov
aad
pop
ret
xchg
in
adc
stos
les
fstp
cli
aam
jecxz
in
xchg
rcl
push
inc
mov
(bad)
jmp
xchg
mov
adc
in
xchg
popa
daa
adc
rcr
iret
xor
je
ds
and
sar
je
in
inc
call
cmp
imul
in
out
mov
pop
ror
leave
or
repnz
mov
sbb
jb
ds
cmp
and
mov
cmc
xor
stos
or
dec
cld
or
xchg
cmp
aaa
fdivr
int
imul
add
mov
sub
mov
addr16
sub
push
test
xor
dec
fnstsw
push
mov
pop
ror
mov
push
retf
les
inc
xchg
hlt
sub
das
imul
arpl
jbe
fs
pop
leave
xchg
out
fwait
lock
cli
xor
push
pop
mov
sub
jne
in
cld
mov
aam
aam
mov
and
ja
mov
sub
das
clc
sbb
popa
pop
fstp
ret
sbb
jle
jg
aas
or
movs
inc
inc
out
ret
fistp
inc
jne
inc
and
pop
mov
pop
cmp
add
jns
adc
lock
daa
(bad)
pusha
cmc
es
fabs
inc
pop
pop
xchg
push
(bad)
pop
mov
ins
int
xchg
push
loopne
cdq
repnz
xor
cwde
sbb
repnz
xchg
mov
nop
cmps
adc
sbb
lods
dec
add
mov
je
inc
mov
sub
fnstsw
data16
inc
(bad)
cmp
ret
inc
clc
inc
iret
out
or
xchg
dec
daa
inc
xlat
call
ror
(bad)
leave
stos
pop
jmp
(bad)
mov
add
mov
sub
cmp
popa
mov
aad
mov
stos
jae
retf
jns
sub
into
push
ja
fxch
and
lahf
jl
jb
push
ret
mov
cmps
pop
push
add
sub
sbb
xchg
repz
adc
xor
cmp
mov
push
sbb
xchg
push
leave
fild
push
aad
ror
mov
in
jo
cmp
adc
xor
shl
cld
inc
pop
pop
xchg
nop
sub
repnz
cmps
nop
push
test
push
xor
inc
or
test
push
loop
xchg
rol
add
inc
loopne
sbb
ss
adc
into
mov
or
push
hlt
cmp
pop
pop
movs
fild
sub
cmp
pop
test
stc
pop
jge
leavew
xchg
mov
mov
test
mov
enter
mov
(bad)
jp
aaa
test
jbe
dec
xchg
ds
inc
mov
dec
mul
aad
add
call
inc
mov
push
call
jecxz
in
sub
into
ret
push
mov
pop
push
ret
push
dec
das
idiv
iret
or
outs
dec
inc
cmp
jo
mov
cs
icebp
add
pop
mov
jg
movs
and
sub
mov
enter
adc
mov
jl
loopne
popa
jmp
and
mov
mov
loope
cmps
stos
inc
cmp
cmp
and
test
xchg
push
xchg
into
repz
mov
cmp
retf
inc
lods
shr
mov
inc
push
xor
or
rcr
icebp
mov
sbb
push
xor
retf
mov
jo
test
out
xor
dec
or
shl
or
cmp
jb
pop
(bad)
rcr
or
xor
outs
imul
inc
stc
leave
outs
push
call
fsubr
mov
xlat
mov
cs
inc
arpl
mov
fdivr
or
cmp
sahf
pusha
scas
xchg
jb
out
jmp
dec
push
xor
adc
add
sub
int
aam
dec
test
rcr
cmp
add
rcl
into
and
aad
or
inc
stos
add
call
mov
call
mov
and
sbb
lahf
ror
sbb
jno
in
sbb
pop
add
imul
xchg
inc
jbe
in
mov
jp
push
jne
dec
and
adc
xor
push
addr16
jl
adc
les
mov
leave
data16
ja
hlt
mov
mov
sti
into
in
pslld
adc
and
popf
cli
outs
jecxz
sub
inc
rcl
jl
push
minps
sub
xchg
ins
out
mov
std
scas
push
or
cli
adc
ins
mov
mov
or
xor
jo
fisubr
ror
mov
pop
loopne
in
fldcw
in
popa
add
mov
movs
fs
jne
adc
dec
stos
idiv
dec
jmp
test
inc
into
or
(bad)
in
xor
sub
iretw
test
inc
push
rol
inc
(bad)
sbb
pop
xchg
mov
pop
je
sbb
dec
(bad)
fdivr
and
out
loope
test
pop
loopne
out
jmp
or
push
push
xlat
test
ror
and
cmp
xchg
cmp
enter
mov
movs
inc
cmps
cmp
xor
cli
or
mov
add
xchg
sbb
out
ss
mov
aam
push
jo
mov
inc
or
adc
fwait
stos
ds
jmp
fcomip
sbb
add
mov
sub
xchg
(bad)
not
mov
inc
pushw
cmp
neg
cs
clc
jae
rcr
jle
fdivr
sbb
jno
cdq
(bad)
je
push
mov
cmp
je
movs
mov
nop
cmps
imul
out
and
jae
pusha
aam
out
mov
jbe
cmp
popf
xchg
cmp
xchg
das
dec
jne
stos
js
or
clc
out
jbe
inc
stos
sub
test
iret
mov
je
bound
jmp
push
sbb
mov
fistp
add
out
scas
push
scas
mov
std
(bad)
push
je
mov
mov
push
cdq
xor
push
das
in
out
dec
movs
sbb
or
mov
imul
sbb
jmp
dec
cli
in
xchg
cld
mov
xlat
push
jne
mov
xlat
dec
js
push
ins
push
adc
xchg
push
jg
out
les
test
dec
pop
dec
cli
cmp
sbb
pop
xor
cwde
iret
xchg
mov
popa
push
es
mov
iret
pop
mov
adc
cwde
stos
out
scas
sahf
mov
inc
or
cli
adc
jo
inc
lea
fmul
dec
neg
sbb
dec
push
or
not
xor
xor
sbb
test
data16
inc
mov
xchg
cld
or
fs
adc
mov
out
nop
outs
call
ins
neg
stos
jnp
mov
mov
iret
fs
cmp
loopne
push
addr16
(bad)
xchg
das
add
clc
outs
mov
shl
pop
adc
ds
sbb
repnz
mov
shl
inc
inc
hlt
scas
cli
jp
inc
fist
cmps
jne
out
push
push
retf
add
sar
push
push
dec
fwait
and
stos
push
ficomp
cmp
shl
or
sbb
xor
in
vaddsd
push
jp
jae
cmp
and
xor
jge
fisttp
xor
(bad)
inc
scas
xchg
sub
add
add
dec
push
mov
push
inc
and
imul
or
pop
(bad)
cmp
dec
push
fidiv
in
jno
out
xchg
test
sub
add
pop
test
mov
fs
or
sub
adc
sahf
jb
adc
std
pusha
cli
sub
mov
cld
pop
sub
data16
nop
pop
aam
add
retf
xlat
imul
daa
or
in
(bad)
jo
in
cld
aas
call
test
xlat
cld
call
(bad)
in
test
adc
(bad)
fcom
and
mov
mov
gs
xchg
mov
xor
ds
mov
inc
out
das
ins
inc
push
mov
and
test
and
adc
stos
xchg
jle
cmc
retf
sahf
dec
cmc
dec
mov
sub
jmp
adc
test
cmp
inc
xor
ds
leave
pop
enter
or
test
fucomi
dec
(bad)
or
sub
add
(bad)
lahf
cmp
aam
mov
xchg
in
into
fnstsw
xor
adc
scas
jmp
mov
out
push
cmps
adc
inc
add
retf
push
test
scas
stc
icebp
inc
dec
sbb
pop
dec
ret
pop
sub
add
pmulhw
cmp
adc
repz
call
sbb
jnp
aam
dec
cmps
xor
fwait
cwde
dec
mov
pop
and
adc
scas
or
cld
clc
fstp
stos
mov
iret
xchg
push
sbb
imul
adc
in
icebp
pop
adc
setl
mov
test
lahf
xchg
dec
dec
pop
sbb
inc
push
xchg
lock
ja
xchg
jmp
push
mov
outs
cmc
push
fisubr
push
push
xor
inc
jmp
nop
test
sbb
pusha
mov
sbb
xchg
sbb
add
call
adc
leave
inc
push
mov
jns
inc
mov
and
xor
adc
cmp
push
loope
jne
in
mov
inc
xchg
inc
shr
enter
xor
mov
cmps
jp
dec
xor
xchg
ret
lahf
outs
lahf
popf
fist
pop
xor
or
cmp
mov
test
jecxz
push
mov
(bad)
jnp
out
dec
fs
pop
out
fwait
inc
(bad)
shl
dec
xor
sbb
lea
adc
pop
(bad)
repnz
ins
(bad)
out
enter
and
pop
hlt
and
neg
sub
js
popa
data16
jb
aas
xchg
or
mov
cmc
mov
add
shr
sar
push
stos
fwait
xchg
sbb
rcr
pop
pop
dec
mov
add
push
imul
fstp
lahf
movs
fdiv
mov
xlat
xor
fdiv
lock
pop
xchg
data16
push
cmp
jge
sub
lea
hlt
mov
and
sbb
mov
es
and
adc
xrelease
sbb
push
daa
or
fld
jmp
(bad)
lods
add
rol
cmps
clc
pop
mov
fisttp
(bad)
out
inc
arpl
test
loopne
loop
fmul
retf
mov
(bad)
in
add
jbe
mov
dec
ins
sbb
xchg
jbe
test
call
or
sub
lods
gs
mov
bound
xor
xchg
imul
dec
mov
pop
xor
dec
rdtsc
xlat
enter
push
xchg
js
adc
inc
test
dec
push
mov
popf
lea
out
fs
add
jbe
add
ret
stos
jo
sub
in
repz
std
and
ins
bound
sbb
mov
ficom
imul
dec
and
mov
daa
dec
mov
call
push
fmul
pushf
cmc
mov
pop
lea
je
ror
movs
cli
add
pop
inc
jns
jns
jp
xchg
mov
jae
jae
xchg
fcomp
test
gs
inc
and
cmp
test
out
lea
sbb
clc
cdq
(bad)
push
sbb
push
jl
addr16
adc
push
or
cli
dec
scas
retf
fistp
test
enter
ins
sbb
std
retf
mov
loopne
mov
cmp
loop
cmp
mov
xchg
xchg
sub
out
jle
bound
aaa
mov
mov
dec
fs
sub
adc
jno
or
push
(bad)
mov
verr
shl
mov
dec
xchg
retf
xor
fst
mov
sub
into
scas
nop
ins
dec
pop
xchg
cmps
aad
push
xchg
(bad)
push
vaddsd
test
outs
xor
inc
dec
clc
mov
jmp
push
std
ret
dec
pop
sar
popf
adc
repnz
mov
xor
cmc
imul
jecxz
pushf
pop
push
xor
push
loope
popa
push
in
je
aam
repnz
and
sbb
mov
fild
or
pop
ins
fisubr
test
sub
bound
sbb
and
scas
shl
cmc
jne
test
imul
pop
pop
push
pop
popf
and
mov
jno
leave
jecxz
jmp
mov
cmc
adc
ins
idiv
jge
push
and
inc
or
mul
jmp
outs
adc
arpl
mov
pop
jp
xor
mov
stos
out
and
inc
iret
retf
add
pop
adc
and
iret
and
dec
js
add
mov
adc
sub
scas
aas
push
add
cmp
popa
add
ficom
xor
mov
mov
pop
push
leave
xor
dec
sub
mov
mov
retf
int3
and
cmp
dec
enter
in
daa
pusha
mov
dec
repnz
push
(bad)
cs
fdivr
add
inc
and
dec
sbb
sbb
addr16
clc
mov
(bad)
add
sub
or
pop
jle
movs
fadd
daa
test
mov
fdiv
nop
iret
and
push
mov
sub
sar
fmul
add
adc
scas
add
pusha
sub
out
imul
loop
adc
loope
es
dec
inc
cmp
call
pop
inc
scas
inc
rcr
les
mov
dec
int3
into
fcmovbe
mov
push
retf
xlat
aaa
aas
pusha
loope
pop
push
cmp
push
neg
mov
xchg
push
xchg
cmp
adc
mov
dec
inc
retf
xchg
push
xchg
mov
call
into
mov
popf
imul
add
mov
pop
mov
pop
xor
je
and
and
test
lea
mov
dec
std
xor
cld
stos
sbb
or
jae
sbb
xor
mov
rsm
mov
inc
les
pop
movs
stos
hlt
jle
fwait
xor
mov
sbb
and
loop
enter
xor
pop
fistp
int3
jg
cli
rol
je
xchg
jne
aas
sbb
sub
out
push
sar
and
mov
fmul
clc
nop
repnz
cmps
jecxz
dec
test
(bad)
sbb
or
mov
aas
or
imul
into
dec
mov
push
xor
mov
sub
into
xchg
dec
repnz
sub
out
add
leave
add
and
inc
xor
shl
in
xchg
mov
mov
add
cmp
sub
movs
mov
and
xchg
mov
adc
pop
pop
sub
int
lods
sbb
pop
xor
xchg
adc
pop
lahf
int3
(bad)
fcmovnu
int
add
fdivr
cmp
pop
ins
outs
push
enter
cmp
sbb
out
mov
enter
push
xchg
adc
xchg
fist
movs
jns
dec
xlat
dec
push
mov
xchg
xchg
int
and
xor
dec
test
movs
cli
mov
repnz
push
mov
ds
or
fcom
std
rol
inc
stos
mov
push
test
push
push
xor
mov
sbb
stos
mov
outs
cmc
cmp
jno
sub
pop
fmul
cwde
xchg
shl
out
clc
repz
sahf
add
dec
pop
out
addr16
sub
add
div
stos
daa
cmp
push
mov
cmp
sub
pushf
popf
cwde
popa
cmp
cmps
add
iret
ins
mov
cmp
jns
outs
jb
gs
xor
movs
movs
add
cmps
ins
cwde
inc
movs
mov
dec
test
cmp
xor
push
mov
out
mov
jb
inc
imul
hlt
jo
(bad)
into
xor
aad
or
xchg
out
and
in
ficom
or
dec
sar
xor
aaa
(bad)
adc
imul
test
test
cmp
stos
hlt
mov
push
(bad)
out
cmp
inc
sub
pop
push
call
push
sbb
sbb
jnp
fwait
mov
mov
stos
dec
(bad)
mov
pop
cmps
mov
jl
mov
lahf
adc
mov
and
rcr
and
and
cdq
jle
std
cs
xchg
xchg
cmp
mov
outs
mov
adc
pop
fldenv
lahf
stos
pop
call
rol
aad
adc
pop
xor
push
jle
push
push
jns
pop
mov
mov
repnz
leave
dec
neg
xchg
into
push
fsub
and
add
aaa
inc
add
add
and
ret
dec
jl
test
cs
(bad)
sub
jno
popa
ficom
jmp
pop
add
stos
push
repz
fwait
inc
jle
xor
outs
inc
sti
iret
cmp
cmp
lea
sbb
pop
mov
stos
mov
xchg
xor
mov
loop
sbb
pop
ins
cmp
aad
jbe
mov
add
movd
mov
mov
test
dec
xor
xchg
sbb
xor
addr16
sub
xor
jle
sti
std
imul
scas
into
imul
test
ror
aaa
pop
adc
pop
fcom
push
sbb
mov
loop
or
cs
cmp
sahf
mov
jge
stos
scas
out
loop
jl
neg
fst
(bad)
aad
setns
pushf
push
sub
jns
cmp
mov
fdiv
pop
sub
mov
scas
ss
movs
mov
fist
cmps
loopne
dec
cmp
mov
sbb
int
adc
dec
and
movs
sub
arpl
loopne
push
mov
push
sti
mov
shl
shl
icebp
out
or
mov
pop
dec
loope
movs
inc
shl
enter
inc
and
cmps
(bad)
or
adc
sub
mov
pop
sbb
mov
inc
mov
jo
sub
fnstsw
pop
pop
out
or
ds
cmp
push
xchg
xchg
push
fadd
push
dec
mov
test
imul
loopne
mov
cmc
das
pop
xchg
add
test
lods
jo
push
pop
pop
out
fs
ds
mov
shl
ds
and
test
push
rcr
xchg
pop
cmp
nop
sub
or
(bad)
adc
dec
dec
push
cmp
jne
sub
mov
rcl
mov
or
or
inc
fadd
fidivr
xor
mov
dec
inc
xor
test
jle
imul
int3
xor
mov
push
mov
cmp
xchg
sub
dec
psubq
(bad)
in
sar
dec
mov
push
add
ja
pop
xor
push
retf
jb
sbb
inc
xchg
add
xchg
bound
ins
xor
jle
lods
sub
cmp
xor
test
in
sub
dec
xlat
sti
test
and
pusha
mov
cs
mov
out
mov
jp
ror
dec
jnp
clc
push
and
and
add
sbb
sbb
sbb
ss
mov
out
mov
out
inc
jge
(bad)
ins
jno
mov
push
mov
cdq
adc
sub
(bad)
leave
mov
and
es
jo
inc
dec
mov
mov
outs
mov
aad
movs
clc
or
xor
ror
retf
(bad)
jo
sahf
pop
cmp
pop
jmp
or
(bad)
lahf
add
inc
int
adc
add
(bad)
(bad)
out
adc
push
vcomisd
mov
add
std
hlt
mov
test
fisub
lahf
xchg
repnz
adc
push
sahf
mov
jle
push
popf
cmp
stos
clc
and
cwde
adc
inc
sub
inc
sbb
adc
mov
shl
fist
fs
out
je
sbb
sar
(bad)
add
jge
push
icebp
xor
aad
lods
(bad)
cmp
or
xchg
and
out
out
aas
dec
iret
cmp
aad
jg
icebp
mov
inc
pop
cwde
mov
scas
daa
jae
inc
mov
shr
jno
test
and
pop
dec
mov
pop
push
ins
rol
ins
push
retf
fs
xor
jmp
push
push
retf
movs
xchg
cmc
xchg
iret
inc
push
xor
inc
jae
aas
adc
inc
bound
cmp
rol
sub
bound
jne
mov
mov
adc
cdq
lods
mov
inc
jns
mov
(bad)
xchg
aaa
and
push
adc
jecxz
(bad)
dec
nop
gs
adc
pop
xchg
cdq
shr
loope
pop
mov
push
dec
(bad)
fisubr
fist
repnz
xchg
adc
mov
pop
push
fcomp
out
ja
cdq
call
inc
dec
inc
rcl
or
jle
and
aam
adc
jmp
movs
dec
dec
jo
mov
add
sub
leave
arpl
fimul
pushf
bound
or
mov
imul
sub
in
adc
ret
dec
xor
push
cmp
sti
mov
jp
fnstenv
aad
dec
cmps
cmp
das
out
cmc
mul
jmp
loope
and
mov
add
ins
jno
daa
das
sahf
shr
stc
(bad)
adc
retf
aad
(bad)
and
dec
sub
stos
shl
ins
dec
mov
mov
push
ror
and
sub
jbe
ins
mov
scas
push
jno
pop
pop
imul
mul
idiv
mov
xchg
jecxz
push
(bad)
cmp
dec
retf
ins
lahf
scas
rol
cmps
pushf
or
mov
pushfw
movs
sbb
fs
xchg
mov
out
and
xchg
dec
adc
mov
sub
sbb
and
nop
jb
(bad)
(bad)
mov
and
mov
jge
rcr
retf
xchg
cwde
fsubr
xor
pop
and
punpckldq
and
jae
xor
stc
adc
(bad)
jmp
jnp
inc
test
ror
mov
mov
out
or
popa
and
fstp
cmp
sub
inc
mov
push
adc
loopne
or
leave
movs
cmp
sahf
jmp
es
int3
imul
pop
jno
(bad)
leave
call
sbb
div
mov
ss
and
or
in
pop
cli
repz
mov
mov
retf
dec
cwde
arpl
out
aad
cmps
je
out
(bad)
hlt
mov
mov
int
pushf
lds
lods
(bad)
arpl
add
or
div
mov
add
fbld
or
mov
js
ret
pop
(bad)
push
mov
aam
sbb
mov
cmp
cmp
sub
mov
push
ror
push
out
sub
pop
out
jo
xchg
dec
xlat
icebp
in
pop
inc
pop
lods
bts
cmps
jb
jp
aam
dec
push
inc
retf
mov
es
fwait
icebp
addr16
fldenv
and
out
adc
xchg
sub
cwde
movs
in
mov
sbb
push
or
cli
pop
test
stos
fimul
ss
lahf
ret
dec
push
jmp
stc
sbb
jno
cmp
sub
push
or
out
mov
xchg
jno
retf
loopne
sar
je
fisub
inc
add
jmp
cwde
or
cmp
ror
pop
cmps
or
out
outs
push
lea
xor
mov
push
retf
sub
inc
cmps
aas
xor
pusha
push
fisttp
xor
dec
pop
repz
pop
push
popa
xor
fwait
movups
jge
out
(bad)
inc
hlt
and
ret
xchg
adc
cmp
jle
jnp
xchg
mov
prefetch
cli
cld
imul
int
jl
jg
int3
lock
adc
sub
fwait
test
cmp
mov
inc
es
gs
and
and
inc
sub
or
adc
data16
xor
add
pop
icebp
ja
mov
ja
jns
sub
mov
sbb
mov
imul
movs
add
dec
je
data16
into
inc
xor
add
jmp
ins
mov
cld
cld
(bad)
lods
inc
inc
mov
inc
cmp
pop
scas
xchg
pushf
pop
inc
cmp
mov
add
push
add
push
lock
les
sahf
xor
rcr
pop
jmp
mov
leave
sar
fadd
and
fidiv
add
in
pop
push
imul
pop
ja
(bad)
aaa
xor
sub
and
or
mov
fld
or
xor
jl
or
xchg
mov
mov
leave
mov
fstp
repz
xchg
dec
push
xchg
scas
push
sub
xlat
push
push
jb
pop
daa
inc
fsub
sbb
dec
sub
lock
lds
or
sbb
mov
xchg
sub
mov
sbb
imul
bound
ficomp
pop
les
cdq
fs
inc
in
jbe
movs
cmp
or
out
fist
jbe
mov
push
scas
imul
pop
movs
pop
mov
jnp
and
icebp
imul
pop
cmc
je
gs
loopne
mov
mov
out
sbb
or
je
push
mov
push
push
sub
inc
ret
sahf
and
sub
movs
inc
mov
push
jmp
(bad)
xor
sub
lea
cmp
mov
sbb
mov
lds
test
fwait
ins
dec
scas
pop
fcom
cmps
jp
ja
pop
(bad)
aaa
mov
and
cmp
popf
mov
cmp
popa
push
xor
ja
cmp
cmp
pop
(bad)
sub
sub
and
movs
and
add
xchg
push
imul
retf
jle
jo
hlt
cmps
ror
dec
mov
lods
inc
popf
adc
andps
cmp
inc
ror
movs
push
xor
mov
loop
pop
xor
call
rcl
and
dec
mov
xchg
xor
enter
pop
xor
std
les
cdq
mov
fldenv
lock
or
xchg
scas
mov
lds
inc
and
test
push
cld
mov
in
sahf
adc
sub
dec
xor
pop
jo
jb
mov
loope
enter
adc
jp
adc
inc
fucompp
jb
pop
xchg
add
mov
call
movs
mov
cld
cmp
sar
push
or
gs
push
sti
xlat
(bad)
add
std
loope
fiadd
das
push
or
fldln2
mov
xchg
clc
in
retf
jnp
jmp
aaa
xor
mov
inc
lods
xor
lods
data16
mov
sbb
cmc
and
pop
inc
xor
xchg
jl
call
xchg
fsubr
mov
mov
dec
fld
push
pop
push
push
js
pop
iret
inc
xlat
mov
dec
xchg
dec
mov
inc
daa
dec
rol
inc
js
stos
scas
pop
jg
mov
adc
dec
mov
cmps
xor
pop
cwde
add
into
rcl
cld
cmps
dec
xchg
arpl
sub
aas
sbb
sub
pop
int
icebp
repz
retf
(bad)
mov
(bad)
addr16
fwait
out
sub
test
imul
jae
mov
sub
adc
xchg
xchg
cmc
rep
mov
imul
push
test
into
loopne
test
ror
cmps
scas
enter
stos
stc
fmulp
cmps
cmp
dec
cmp
addr16
jmp
sub
inc
mov
dec
pop
and
fadd
imul
xor
test
jb
xor
pop
pop
mov
mov
daa
push
loop
inc
mov
xchg
movs
data16
jp
(bad)
jp
(bad)
xor
dec
inc
sub
cmp
ret
aas
cmp
xor
aad
xor
call
std
mov
cmp
sub
adc
cmc
jne
xchg
push
inc
add
mov
or
hlt
mov
lea
pop
pop
loop
shl
outs
clc
mov
mov
sub
jecxz
inc
aas
mov
enter
adc
and
jae
gs
xchg
scas
dec
mov
rcr
mov
pmullw
or
out
add
and
dec
rcr
hlt
xchg
or
mov
or
(bad)
jge
je
xchg
test
call
mov
add
add
in
dec
pop
add
sbb
and
sub
fisub
cli
sub
jne
test
jecxz
ret
stc
sub
adc
popa
xor
test
mov
mov
and
or
mov
rcl
add
or
push
(bad)
nop
out
fld
xchg
aam
inc
gs
jno
cld
inc
add
fs
xor
pop
pop
mov
add
nop
pushf
dec
leave
mov
push
ins
xor
sub
scas
ret
jle
xchg
fcmovb
into
jle
xor
enter
lds
mov
xor
xchg
adc
jle
xchg
ins
cmp
fwait
add
ja
mov
aaa
mov
mov
cmp
test
jl
test
add
mov
sub
ret
fidiv
rcr
cwde
sub
cmp
arpl
outs
xlat
dec
adc
(bad)
xor
mov
mov
cwde
xchg
je
push
stos
add
stc
pop
sub
bnd
sbb
shl
dec
popf
xchg
xlat
jns
or
cmp
lock
sub
test
push
push
inc
aaa
int3
push
sub
cmp
cmps
mov
pop
into
push
rcr
or
xchg
cmp
and
cli
jmp
xchg
push
dec
pop
test
sub
gs
or
add
jmp
cmp
cmp
outs
inc
(bad)
jbe
imul
xchg
pop
sub
in
ds
push
cld
sub
push
pop
shl
test
cmc
push
push
jl
(bad)
into
repnz
test
leave
sbb
mov
dec
xor
lods
adc
aam
xor
push
add
jo
mov
xchg
jmp
les
or
out
fwait
jne
mov
cdq
pop
adc
(bad)
retf
mov
sbb
mov
sub
xchg
retf
mov
cmp
rcr
fwait
mov
jge
dec
inc
ds
sar
pop
push
movs
mov
std
jmp
mov
(bad)
dec
xchg
mov
pop
inc
pop
mov
sbb
pop
cmp
push
and
std
mov
aaa
push
leave
(bad)
and
in
in
or
into
fwait
inc
push
retf
jg
sti
and
and
cmp
dec
cmp
jle
pop
add
add
add
cmp
sti
dec
fbld
jo
test
cmp
popf
cmp
imul
dec
xor
rcr
dec
lea
mov
xchg
mov
xchg
mov
sbb
inc
push
adc
ret
mov
test
out
dec
mov
sbb
lahf
retf
aas
add
scas
inc
arpl
in
inc
xor
popa
lods
ret
(bad)
pusha
sbb
imul
test
mov
(bad)
retf
xor
out
pop
inc
push
mov
pushf
clc
js
pop
ror
fmul
jae
lea
xlat
adc
inc
inc
mov
les
xor
xor
jl
outs
push
ficomp
stos
(bad)
add
enter
mov
cld
mov
mov
sbb
sbb
(bad)
push
js
push
outs
pand
out
xor
clc
ficom
xlat
jae
mov
xchg
add
xlat
add
stos
push
mov
movs
xchg
add
ret
out
pop
cmp
ret
jecxz
pusha
sti
pop
jno
call
dec
dec
aaa
inc
dec
xlat
(bad)
push
test
sbb
cs
call
shr
inc
mov
pushf
push
jnp
and
cmc
rdmsr
mov
lock
mov
jle
inc
mov
mov
add
in
arpl
addr16
pop
xchg
dec
mov
xchg
out
ret
fwait
mov
call
mov
mov
pop
es
mov
jb
jnp
and
ja
push
hlt
rcl
mov
shr
or
and
dec
out
and
jb
iret
xchg
ja
mov
push
dec
pop
nop
push
and
icebp
int
add
pop
sub
and
dec
jb
xlat
call
mov
adc
jno
rcl
cmc
dec
sbb
push
js
out
lds
inc
test
or
inc
mov
fisttp
sub
ss
mov
mov
sar
adc
sbb
cmc
sbb
ds
ins
mov
jmp
adc
lahf
xor
cwde
sbb
cld
fsub
fiadd
mov
xor
test
xchg
retf
push
fbld
les
jmp
icebp
mov
cmp
pop
pusha
push
sahf
xchg
jne
jae
pop
(bad)
scas
jb
jmp
rcl
arpl
sbb
ror
cld
xor
cmc
xor
add
das
lahf
jne
jecxz
dec
push
js
push
jb
aaa
daa
pusha
(bad)
push
(bad)
lods
jns
out
sub
jmp
pushf
cmc
repnz
mov
lock
out
ins
push
mov
test
add
xor
add
mov
sbb
into
push
sub
pshufw
adc
adc
cs
xlat
inc
neg
sub
sub
adc
sbb
xchg
jmp
gs
and
push
(bad)
ror
sub
rcl
fidivr
pop
adc
dec
arpl
lock
xlat
pop
fs
sti
pusha
jl
jmp
pop
fwait
pop
loop
jo
outs
daa
xchg
out
mov
pop
lock
icebp
mov
loope
pop
rcr
mov
ror
pushf
mov
fstp
sti
jbe
fyl2x
shr
inc
mov
mov
movs
mov
push
add
pop
push
push
sbb
nop
mov
(bad)
test
push
iret
cwde
inc
mov
cmp
call
icebp
push
out
push
jb
stc
mov
js
jnp
cli
(bad)
btc
test
sub
out
movs
outs
fmul
bound
or
sahf
idiv
cmps
xor
pop
pop
add
popa
(bad)
and
scas
adc
and
cld
jmp
popa
(bad)
in
or
cs
add
jp
mov
mov
popf
sbb
aaa
clc
mov
retf
inc
cwde
or
enter
jae
imul
popf
sbb
fs
and
adc
sbb
mov
cmp
xor
cmp
jae
clc
leave
mov
mov
idiv
cmp
fidiv
test
daa
inc
pop
dec
or
pop
imul
push
sub
shr
jb
and
mov
inc
outs
fistp
push
push
bswap
daa
adc
or
retf
sub
push
aam
imul
pusha
mov
inc
adc
mov
test
sti
cmp
mov
dec
ret
add
jno
dec
or
pop
cmp
lock
xor
mov
mov
fiadd
out
xchg
ror
adc
inc
and
movs
mov
jb
nop
xor
push
cmp
je
or
ja
jnp
push
popa
test
xor
retf
mov
adc
ds
enter
xchg
imul
shl
mov
aam
sbb
aaa
lahf
jbe
sar
push
inc
mov
pop
(bad)
mov
xchg
push
jmp
movs
loope
dec
test
inc
cmps
test
sbb
fnstsw
popa
sub
dec
jge
jno
mov
inc
jecxz
and
les
jbe
push
cmp
add
icebp
xchg
push
ja
mov
cmp
das
loopne
inc
mov
jecxz
push
jns
aad
xlat
xor
std
(bad)
fbld
sub
jb
scas
lock
mov
ja
dec
cld
jle
adc
inc
loop
xlat
paddw
adc
xchg
fist
mov
dec
xchg
jle
scas
mov
sub
test
lahf
stos
in
int
jge
jge
inc
outs
xchg
sahf
xor
scas
mov
loope
mov
cmps
sub
(bad)
aas
cwde
lds
out
jns
mov
pop
dec
into
(bad)
(bad)
mov
lock
jg
lock
not
gs
and
jmp
xor
add
adc
sar
mov
xchg
loopne
fwait
out
jbe
cmp
mov
sar
sbb
shr
arpl
xchg
pusha
add
mov
inc
out
in
xchg
scas
xor
scas
sar
sbb
fsub
adc
cmps
or
int3
pop
test
outs
mov
cmps
test
lds
inc
pop
cs
xchg
sub
pop
sub
lea
sbb
jl
in
push
add
fisub
mov
pop
addr16
fmul
shl
xchg
pop
adc
xchg
pop
xchg
mov
retf
stos
add
pusha
push
cmps
cmp
mov
dec
bound
mov
xchg
ret
fiadd
add
cwde
(bad)
mov
loope
xor
lock
inc
xchg
jecxz
shr
push
cmp
push
and
(bad)
movs
imul
aas
addr16
sbb
leave
fbstp
mov
jbe
or
mov
test
xchg
cmps
shl
iret
retf
fcom
lea
retf
pop
xchg
cmp
mov
pop
inc
je
dec
outs
stos
or
test
dec
and
rol
and
mov
pop
scas
rol
repnz
pop
loopne
(bad)
ss
shl
out
ret
add
xchg
pusha
int3
cmp
and
int3
hlt
sub
lahf
xor
xchg
xor
dec
inc
out
mov
lahf
loope
loope
(bad)
outs
pop
ja
mov
dec
out
push
xchg
xchg
add
dec
jns
imul
ficomp
cmp
retf
sub
test
sbb
jmp
inc
mov
cmc
dec
or
mov
inc
pop
ja
cmp
sbb
test
popf
pop
(bad)
sub
inc
dec
add
lea
popf
in
fmul
pop
cs
call
addr16
add
sub
dec
in
scas
repz
pushf
sub
popa
cmp
cs
enter
pop
pusha
pusha
adc
inc
dec
sahf
sar
jae
dec
inc
mov
adc
imul
xchg
ins
repnz
repnz
jle
outs
loop
inc
pop
jp
sbb
fimul
(bad)
das
pushf
push
repnz
xchg
jmp
in
push
xor
pop
hlt
iret
dec
das
loope
mov
lods
pop
xor
retf
imul
dec
je
or
and
cmp
cmps
loop
lds
and
leave
xchg
icebp
retf
mov
loop
call
repnz
ds
fucomp
jb
cmp
add
mov
cs
add
cmp
add
mov
mov
dec
stos
jb
mul
inc
mov
add
loope
push
rol
jb
fdivr
sar
or
mov
aas
mov
jl
mov
cmp
adc
adc
loop
sbb
mov
maskmovq
inc
or
leave
out
mov
test
imul
cmp
cld
cwde
retf
stos
mov
test
std
dec
or
scas
lahf
sub
inc
mov
fs
xor
inc
mov
jge
cmp
dec
test
cmps
out
mov
pop
(bad)
div
in
adc
sbb
dec
jle
mov
jbe
jno
out
ret
jmp
xor
in
shr
mov
mov
jp
push
and
sub
pushf
ds
sub
pop
mov
outs
repnz
ffree
xor
gs
dec
mul
and
loopne
sbb
push
mov
ds
arpl
push
xor
stc
push
xchg
mov
daa
mov
jle
arpl
aad
test
pop
sti
js
(bad)
cmp
lods
push
mov
outs
or
add
sub
or
jne
jmp
js
mov
inc
inc
sub
lock
rcl
loop
ja
xor
cdq
xchg
xchg
pushf
jno
mov
icebp
pop
stc
add
pop
stos
mov
repnz
add
jl
adc
jge
jle
in
std
xchg
loope
cwde
mov
xchg
xchg
jle
cdq
sti
in
js
jbe
loop
pop
cmps
mov
movs
push
fwait
xchg
push
mov
xchg
imul
sbb
in
jae
jge
jno
(bad)
inc
or
arpl
xchg
addr16
xchg
iret
adc
ins
and
jg
jno
jnp
push
push
stc
outs
test
out
mov
out
or
inc
mov
lock
jne
dec
lahf
add
in
ss
fadd
mov
push
mov
push
dec
fnstsw
stc
sub
rol
xchg
fnstenv
push
bound
dec
imul
push
jbe
add
lea
pop
js
sub
xor
jo
add
fistp
(bad)
aad
or
dec
cmp
cmp
aad
dec
movs
inc
and
(bad)
sbb
push
inc
pop
mov
or
call
xlat
add
mov
es
sub
(bad)
sub
inc
out
cli
sub
dec
out
dec
mov
sbb
mov
mov
pop
mov
push
cld
push
add
in
xchg
cmp
pop
cmp
and
fldcw
mov
push
sub
sbb
jl
xchg
call
mov
sub
sti
js
sbb
stos
pop
mov
(bad)
es
scas
(bad)
jle
bound
jne
and
adc
inc
shl
and
retf
or
clc
mov
cmp
dec
movsx
lds
rcl
ret
stos
loope
and
adc
mov
loop
dec
inc
test
cmp
test
fs
cld
clc
movs
sub
jae
cmp
addr16
cli
fidiv
mov
fst
add
imul
push
inc
xchg
xor
ds
out
dec
inc
mov
adc
inc
out
push
inc
sahf
push
and
mov
iret
lods
sub
add
inc
xchg
sbb
mov
das
add
sbb
push
in
add
cmps
idiv
test
push
stos
in
aas
jp
push
out
mov
rol
int3
adc
aad
mov
aam
rol
adc
je
push
mov
adc
movs
adc
jge
sbb
gs
and
sbb
push
data16
daa
pop
mov
daa
sbb
loope
rcr
sub
dec
dec
je
push
push
mov
aas
imul
inc
push
(bad)
cmp
or
dec
xchg
add
and
add
cmp
cmps
loope
adc
jl
mov
dec
ja
or
pop
mov
mul
inc
pop
test
cmc
je
mov
retf
test
movs
pop
cmc
inc
leave
jns
aam
xor
adc
inc
mov
mov
and
lods
add
stos
dec
test
adc
shl
cs
stos
and
adc
add
sub
call
aad
out
jnp
sbb
(bad)
cmp
sub
pop
cli
adc
xor
inc
push
daa
test
fidiv
(bad)
dec
inc
mov
into
sar
out
mov
inc
xor
mov
jo
call
sub
or
xlat
push
(bad)
repnz
dec
cmps
in
mov
push
cmps
mov
mov
pop
or
xchg
xor
add
xchg
(bad)
xor
loop
push
add
xchg
sti
mov
mov
jmp
scas
or
dec
out
sub
hlt
ins
sbb
mov
in
mov
jns
shl
mov
(bad)
icebp
jmp
sub
adc
cmp
leave
and
jno
xor
popa
cmps
mov
adc
icebp
xchg
jb
test
mov
xchg
dec
xor
pop
sbb
and
mov
int
shr
shr
in
(bad)
xor
dec
jns
pop
and
test
lahf
(bad)
fiadd
cmp
push
pop
stos
adc
or
loopne
in
sub
sti
pop
(bad)
pop
in
add
mov
push
dec
sahf
sbb
and
das
and
popa
or
movs
mov
cdq
mov
add
xor
mov
lock
pop
clc
add
and
fadd
test
mov
jno
sbb
sbb
jg
std
mov
inc
jb
and
(bad)
mov
in
loopne
fdiv
mov
mov
or
mov
or
daa
fisttp
xchg
xchg
sub
jl
sub
leave
add
push
cld
jnp
push
ja
push
or
je
xlat
mov
push
sub
and
sar
mov
fcomp
pop
sbb
jne
mov
adc
pop
or
rcl
mov
sti
fs
int
mov
sub
and
inc
leave
div
or
jno
cs
jg
test
outs
(bad)
cmp
pop
mov
or
inc
or
and
mov
or
retf
int3
and
cs
adc
jae
and
imul
cmps
cmc
pop
(bad)
sbb
dec
pusha
test
push
loop
cmp
mov
lods
aam
jg
jecxz
ja
or
loopne
or
shr
push
lahf
and
ror
aas
fadd
sahf
retf
(bad)
stc
push
and
stos
xchg
nop
xchg
xchg
mov
fistp
mov
aad
sub
mov
sar
mov
push
sub
xor
js
xchg
rcl
test
popf
cmp
mov
in
jmp
test
pop
cs
cmp
pop
xchg
(bad)
int
mov
mov
sub
adc
xor
jne
fs
and
push
sub
dec
sub
out
inc
shl
out
or
xchg
or
mov
xor
(bad)
cs
pop
adc
or
js
adc
into
mov
loopne
fidivr
push
mov
jmp
stos
mov
and
sub
push
cmps
sub
sbb
adc
addr16
xor
ds
enter
mov
mov
in
sahf
push
push
fiadd
dec
sahf
imul
(bad)
jns
lods
stos
pop
aam
jp
out
les
push
fldcw
(bad)
mov
sti
loopne
mov
sbb
js
mov
outs
outs
in
cmps
repz
gs
vpunpcklwd
cli
cwde
aad
sbb
(bad)
into
rep
call
in
mov
push
xor
xchg
xor
mov
or
out
cmps
mov
stc
dec
inc
jecxz
movs
call
in
mov
aaa
scas
psubsw
mov
out
inc
mov
and
stc
in
inc
push
mov
pop
lods
add
movs
into
xchg
mov
cwde
or
jns
pushf
repnz
xchg
xchg
jno
lock
ror
lods
push
pop
addr16
add
call
xchg
(bad)
xor
lahf
std
push
test
mov
jl
popf
cld
inc
mov
in
es
iret
mov
add
sub
shl
fidivr
cdq
push
mov
retf
mov
sbb
mov
xor
and
pop
push
sbb
adc
out
push
stos
inc
aas
add
(bad)
push
call
sbb
arpl
cmp
rcl
adc
aas
jnp
jmp
dec
movs
sub
inc
movs
ret
stos
or
pop
push
loopne
mov
cmps
arpl
lock
mov
push
and
push
mov
lea
das
std
div
neg
(bad)
mov
pop
jb
imul
jmp
push
jne
mov
ins
scas
pop
bound
leave
outs
or
out
out
xor
xchg
ja
daa
mov
inc
arpl
arpl
aad
lods
push
xor
stos
inc
fdivrp
jge
cdq
dec
add
mov
std
or
je
pop
cmps
mov
xor
push
cmp
push
add
into
ja
das
stos
in
sahf
jns
add
jecxz
cmp
popa
das
imul
inc
sbb
and
mov
sar
int3
adc
mov
outs
outs
mov
jg
and
jns
lods
cwde
cmp
cmp
mov
cmp
popa
sub
push
hlt
aam
dec
push
pusha
xor
inc
mov
xchg
add
mov
in
push
test
inc
ret
jb
(bad)
jne
out
dec
clc
sub
adc
out
jno
rol
add
fs
repz
dec
call
inc
pop
retf
mov
pop
pop
ds
mov
je
xor
shl
ror
jbe
mov
sar
das
ficomp
or
mov
fbstp
shl
rol
cmp
mov
mov
or
pop
ror
mov
jno
xchg
jo
cld
cmps
jb
xor
jmp
inc
dec
out
xor
or
xchg
inc
in
fdivr
je
xor
ret
rcr
sub
sbb
sbb
ja
jmp
inc
sbb
mov
cmp
xchg
mov
popf
add
push
adc
scas
mov
mov
hlt
bound
std
add
xor
ja
sbb
imul
mov
pop
(bad)
hlt
sbb
jb
mov
int
push
cmp
aam
cmc
jp
inc
inc
sbb
cmps
cmp
pop
or
stc
and
fcmovnb
push
xor
and
test
sbb
mov
std
or
loope
icebp
daa
in
into
sti
adc
inc
fiadd
scas
pop
inc
add
mov
adc
mov
sub
sahf
jp
shr
xor
sbb
das
push
sbb
xor
js
out
mov
add
xor
inc
inc
dec
js
(bad)
xchg
xchg
sbb
fcmovu
adc
ret
ret
mov
daa
inc
into
scas
sub
icebp
xchg
add
push
add
add
and
imul
imul
test
adc
in
xor
dec
sti
test
int3
mov
mov
pop
lahf
push
inc
out
dec
push
push
ds
stos
jge
cmc
cmp
pop
or
sar
cmp
mov
and
jbe
mov
adc
push
test
call
sub
in
lds
jle
mov
loop
movs
nop
scas
test
loopne
xchg
ret
mov
cmp
pop
bound
jl
or
xor
adc
add
or
sub
gs
repz
outs
fistp
push
rcr
test
pop
dec
mov
xor
test
aaa
out
pop
in
test
sbb
movs
sub
pop
pop
(bad)
imul
aaa
clc
rcr
mov
mov
jmp
ins
out
popf
fcom
(bad)
xchg
xchg
add
mov
fsub
fcom
push
sub
mov
leave
fldcw
dec
sbb
push
jne
stc
push
ds
clts
das
ror
push
inc
inc
ficomp
lock
mov
outs
or
enter
test
dec
fstp
sahf
xor
jns
(bad)
adc
xchg
and
push
in
fnstenv
ss
sbb
jl
iret
arpl
push
sbb
sub
dec
cs
shl
fimul
xor
adc
movzx
xchg
out
ja
push
pop
cmc
add
bound
outs
cmps
mov
push
pop
push
sbb
fwait
out
xchg
adc
cmp
je
outs
and
jb
dec
xchg
mov
mov
pop
les
(bad)
in
push
jbe
push
cmp
cmp
or
and
mov
fs
jns
int
and
jle
fwait
jb
add
sahf
dec
sub
and
sbb
pop
xchg
push
xchg
movs
dec
ja
bound
inc
(bad)
int3
push
loope
cmps
xchg
dec
cwde
xacquire
ss
ja
les
and
mov
sub
(bad)
mov
adc
ja
lahf
aam
ins
retf
jmp
sub
add
xor
popa
loopne
pop
pop
mov
mov
jbe
jae
mov
jo
cld
in
dec
nop
pop
xchg
and
cmp
pop
aad
fnsave
adc
dec
jmp
(bad)
mov
inc
push
jb
mov
inc
fisubr
cmp
cmps
call
dec
int3
movs
(bad)
or
scas
pop
sub
leave
xchg
xchg
inc
and
cmp
movs
pop
xchg
idiv
jle
lds
xchg
fnstcw
and
addr16
pop
shl
pop
js
xor
mov
mov
(bad)
iret
in
or
adc
popf
cmp
inc
rcl
push
cmps
repz
and
xchg
xchg
inc
fwait
push
add
jmp
cs
in
dec
mov
sti
sub
dec
or
cmp
les
xor
sub
fild
add
ja
xchg
(bad)
dec
or
in
loopne
ss
and
pop
int
aam
push
imul
or
xor
ins
jl
je
or
jl
sub
jecxz
cmp
mov
mov
and
test
std
add
ds
fild
xor
in
lods
loop
(bad)
pop
sbb
mov
ret
dec
rol
cmp
jl
and
or
(bad)
mov
jb
icebp
aad
(bad)
(bad)
shl
mov
and
xor
sub
jne
cdq
(bad)
or
(bad)
push
fs
xor
jmp
jne
ins
xchg
(bad)
stc
mov
mov
add
test
out
sbb
sbb
hlt
or
pop
push
sub
inc
fcom
or
adc
xor
mov
sbb
arpl
lods
shl
sbb
outs
(bad)
push
or
aam
lods
out
and
lds
jne
sbb
cmp
push
nop
and
sub
arpl
push
jne
call
iret
fmul
inc
cmp
cmc
push
add
sbb
test
retf
pop
das
fadd
and
adc
pop
cdq
(bad)
mov
xlat
add
mov
jle
daa
int3
pop
sub
cld
arpl
sbb
pop
mov
jne
inc
add
pop
fsubr
or
push
loope
test
fisubr
xor
sub
ds
popa
bound
bound
nop
mov
(bad)
adc
cmp
dec
nop
sbb
dec
sub
sbb
add
popa
dec
jge
jo
xor
das
imul
in
nop
lods
push
cmps
in
test
inc
add
cmp
movs
jbe
(bad)
bound
ja
jae
jno
loope
stc
fcomp
in
mov
or
dec
bound
cmp
popa
sti
int
and
aaa
jmp
in
ret
(bad)
leave
xrelease
mov
icebp
sub
mov
fs
mov
sbb
out
loop
test
cmps
pop
popa
lea
je
inc
and
iret
add
add
dec
xchg
push
add
sbb
loopne
xor
in
add
int
pop
and
cld
xor
add
imul
adc
dec
retf
mov
cwde
add
inc
out
test
pusha
pop
inc
jge
sbb
xchg
sub
(bad)
ret
sub
int3
nop
mov
enter
sub
aam
sbb
push
pop
bound
dec
loop
cld
test
ds
fisub
add
or
cdq
cmp
mov
and
and
fadd
inc
jg
(bad)
lea
mov
clc
pushf
push
lods
sub
jo
cmp
lods
sub
test
dec
dec
pop
dec
stos
push
cmp
jo
xchg
jp
cmc
adc
add
xchg
icebp
adc
dec
jmp
mov
mov
xor
mov
xchg
and
loopne
xlat
add
mul
loopne
in
imul
call
cs
cmp
xor
jns
(bad)
xchg
xor
ins
jo
mov
out
cmp
addr16
daa
dec
repnz
pop
add
aas
xor
mov
sub
jae
fstp
imul
jp
lea
inc
and
and
(bad)
push
neg
xchg
jge
dec
daa
out
fild
mov
ja
add
sbb
je
aas
movs
popf
addr16
sbb
(bad)
(bad)
sar
mov
xchg
or
jg
mov
movs
test
inc
or
inc
mov
(bad)
aad
jecxz
xor
pushf
or
movs
and
sti
(bad)
js
enter
push
pop
add
cmp
popf
loope
mov
mov
push
jae
je
in
movs
inc
add
loop
pop
adc
mov
sub
repnz
stc
and
mov
and
outs
jno
mov
mov
clc
or
push
xlat
mov
stos
loope
cmp
lahf
sub
xor
movaps
dec
push
add
das
and
stos
stos
int3
jge
test
out
outs
in
lahf
out
adc
mov
es
or
pop
xchg
sbb
das
mov
jmp
xchg
std
mov
icebp
in
sar
xchg
pop
sub
(bad)
je
sbb
xchg
lds
std
lock
adc
inc
inc
leave
dec
sub
cs
mov
int
mov
and
inc
jne
out
outs
cmc
cmps
aaa
cmp
and
lods
mov
(bad)
mov
xchg
gs
sti
push
out
les
test
or
adc
and
add
adc
adc
jmp
push
aad
out
call
icebp
xor
gs
sub
out
xchg
jbe
jne
repz
cmps
add
int
in
aad
test
ret
and
jns
mov
mov
mov
addr16
and
shr
xchg
fstp
retf
movzx
xchg
(bad)
cmc
in
(bad)
push
pusha
cmc
sti
mov
xor
jle
icebp
insertq
enter
aad
sbb
inc
gs
mov
or
xchg
cld
push
(bad)
push
sub
sti
ds
arpl
iret
in
mov
jbe
pop
leave
retf
pop
not
arpl
adc
les
sbb
mov
loop
jmp
xchg
mov
inc
xchg
aam
lods
mov
jno
jle
sbb
xchg
fisttp
in
mov
jo
repz
lahf
adc
packsswb
loope
mov
xor
cmps
repz
psrlq
stos
mov
not
mov
not
sub
sub
lock
push
ins
and
jb
leave
lahf
lods
sub
and
inc
xchg
push
jg
pop
inc
mov
mov
je
mov
stc
sbb
jp
cwde
in
into
jp
ror
fdiv
mov
mov
fwait
in
mov
in
add
scas
dec
cld
jno
dec
mov
xor
cli
jmp
sbb
mov
add
aaa
loope
xchg
(bad)
imul
clc
enter
idiv
sbb
push
mov
add
pop
push
mov
aaa
mov
test
adc
jecxz
in
daa
xchg
popf
mov
pop
jmp
sbb
fld
inc
mov
aaa
adc
sbb
jecxz
xlat
div
mov
out
(bad)
daa
(bad)
push
repz
std
add
fs
jo
sti
jnp
push
dec
mov
adc
or
punpckldq
fstp
loop
push
test
je
cdq
fisubr
mov
or
add
sar
scas
pop
imul
sub
mov
jl
xor
mov
cmc
pop
inc
ins
scas
paddusw
fcom
ret
out
sub
mov
adc
test
leave
sub
iret
shl
xchg
in
loope
jns
jb
dec
shl
fucom
add
and
cmp
jne
mov
add
mov
hlt
jns
xor
movs
and
or
mov
dec
(bad)
sbb
test
cld
and
mov
mov
pop
and
stos
pop
jns
and
inc
push
scas
mov
mov
rcl
mov
mov
call
mov
fcom
fsubr
inc
(bad)
jge
(bad)
sub
and
arpl
and
pop
mov
pop
xchg
fcomp
pop
popa
mov
mov
or
cwde
jg
jne
sub
jne
xchg
lods
pop
mov
adc
rcl
daa
mov
test
mov
pop
pop
int
stos
(bad)
jnp
ror
fnstenv
jmp
sbb
addr16
call
rcl
in
mov
js
mov
iret
shr
add
daa
cmps
inc
pop
and
xor
lods
inc
mov
test
jl
rol
push
cmp
aas
jecxz
mov
dec
dec
sbb
pop
push
lods
ret
loope
sub
add
jmp
stos
inc
pop
iret
or
or
test
scas
add
xor
xor
fs
call
int
stos
leave
fld
jmp
dec
inc
enter
push
mov
inc
mov
adc
lea
push
bound
mov
test
mov
cmp
add
daa
ins
add
int
outs
mov
call
clc
xchg
shr
ret
or
mov
pop
xor
in
fild
in
add
sbb
sub
sub
add
outs
aas
mov
push
xor
mov
(bad)
cli
mov
sbb
add
inc
arpl
xchg
fs
mov
dec
xchg
iret
cwde
sahf
xchg
and
pop
imul
mov
dec
cmc
ret
retf
xor
fadd
dec
daa
xchg
ins
fisubr
xchg
push
xor
xchg
fcom
or
dec
cdq
inc
mov
jb
jp
js
(bad)
xchg
test
pop
push
xchg
sbb
jle
retf
cmc
jle
dec
and
jg
fwait
push
in
xor
add
sbb
push
jl
pushf
sbb
mov
add
add
jns
int3
push
xor
xchg
in
out
aas
data16
ds
out
leave
in
shl
jmp
pop
sub
push
mov
in
mov
test
retf
mov
lea
xchg
pop
and
hlt
xchg
jb
mov
ret
ror
sub
loope
out
xchg
cmp
lea
mov
aaa
cli
jmp
imul
xchg
lea
aas
cdq
mov
xchg
pop
mov
repnz
mov
cdq
in
nop
inc
xchg
and
and
jge
mov
sbb
sub
loopne
out
sub
imul
mov
cmp
div
int3
fld
mov
aas
aam
sbb
sub
addr16
jmp
pop
cli
jnp
add
sbb
jp
ret
push
sbb
inc
sahf
add
push
and
jnp
and
imul
paddw
jae
fcom
imul
inc
xor
cdq
scas
adc
scas
test
mov
mov
ds
inc
int3
fdivr
jecxz
xchg
lods
pop
dec
pop
int
adc
inc
mov
pop
iret
pushf
push
sbb
push
das
test
dec
scas
jecxz
stos
push
mov
mov
and
cmc
mov
mov
sti
push
(bad)
in
sbb
aaa
mov
fist
xchg
pop
out
mov
and
lock
ins
xchg
dec
and
into
hlt
mov
mov
outs
lods
mov
mul
xchg
mov
cs
mov
xor
addr16
push
lock
lods
pushf
sbb
mov
sbb
or
in
mov
push
sbb
(bad)
and
xchg
cs
inc
call
pop
jb
fild
push
push
xor
fmul
shr
(bad)
sar
neg
jae
(bad)
cdq
jno
sub
cli
sub
sti
popf
cwde
scas
pop
pop
fcmovnb
cmc
jb
mov
xor
ret
in
inc
mov
in
hlt
cmc
pop
xor
sbb
push
inc
push
retf
or
mov
sub
mov
sub
stos
(bad)
jmp
lods
dec
pushf
jge
mov
sbb
mov
ror
inc
hlt
push
ss
neg
popa
test
and
jecxz
mov
push
fild
mov
fdiv
add
(bad)
cli
clc
stos
pusha
scas
fadd
sub
inc
arpl
lea
das
shl
and
xchg
push
jmp
dec
cmp
and
cmp
or
sbb
or
mov
rol
mov
div
test
lods
push
scas
aam
pop
in
mov
arpl
jnp
pop
mov
mov
adc
cwde
bound
jno
jno
mov
scas
push
adc
mov
outs
test
mov
test
int
sub
aad
arpl
pop
xor
inc
clc
jmp
xor
icebp
in
jne
jo
cdq
out
xchg
bound
push
sbb
pushf
ds
add
out
pop
cmp
fild
pop
loope
cwde
and
adc
dec
int
and
adc
mov
lock
(bad)
mov
and
arpl
jmp
adc
sbb
push
push
scas
enter
add
daa
cmp
xor
jp
ins
and
adc
and
cmps
xlat
mov
enter
invd
jne
(bad)
outs
scas
ret
imul
nop
ja
inc
in
(bad)
and
loope
mov
cdq
fwait
pop
(bad)
xlat
jmp
clc
sub
data16
ret
rcl
in
lds
ins
sub
sti
aaa
fcomp
into
out
fild
scas
out
out
daa
test
jb
shl
jbe
cs
pop
ins
stos
jnp
cwde
mov
pop
mov
pusha
push
push
dec
mov
push
jb
scas
mov
jnp
ss
add
pop
xlat
jge
bound
push
std
mov
jnp
outs
cmp
mul
jmp
inc
out
rcl
mov
adc
cmp
jmp
cmps
cmps
out
mov
cli
cwde
cmps
lods
stc
or
iret
mov
mov
test
lods
(bad)
cs
fisttp
pop
push
adc
and
or
jecxz
dec
or
sbb
int
enter
addr16
aam
push
jp
or
cmp
lds
push
jo
mov
scas
pop
ins
inc
push
iret
idiv
aam
push
sbb
and
dec
mov
shr
sub
sub
bound
retf
jns
lea
mov
dec
iret
call
les
shl
fucomi
add
ins
addr16
or
push
push
jl
add
loop
jne
mov
(bad)
sub
adc
jle
cmp
adc
adc
leave
fs
inc
fist
in
inc
xor
imul
adc
test
loopne
jmp
repnz
cli
dec
push
jg
mov
push
(bad)
cld
sub
jb
pusha
ficom
jo
mov
jb
in
push
scas
mov
mov
inc
scas
xchg
cmp
xor
fcomp
cmps
in
push
add
mov
cmp
aaa
add
jmp
mov
mov
leave
test
push
cmp
xor
jb
xchg
scas
outs
bound
xchg
outs
push
or
sub
mov
mov
pop
cmp
std
push
popf
push
ror
shl
and
in
xchg
inc
xor
add
aam
adc
inc
repnz
enter
fld
mov
movs
gs
inc
loop
out
jge
jecxz
cmps
(bad)
mov
(bad)
(bad)
push
sbb
sbb
test
mov
push
adc
or
pop
aam
xchg
adc
jbe
jne
adc
popf
test
cmp
aad
adc
add
inc
xchg
inc
xchg
les
leave
mov
and
lahf
sbb
dec
jae
retf
xlat
in
pop
stos
pusha
inc
and
adc
sbb
in
adc
xchg
push
clc
or
adc
xor
lahf
inc
sbb
sbb
pop
out
mov
out
das
and
mov
sub
pop
nop
mov
push
sti
imul
xor
scas
pop
stc
pop
fmul
inc
cmc
jae
mov
stos
out
fstp
mov
and
les
daa
add
push
or
jo
stos
xor
pop
faddp
cdq
inc
fcom
mov
inc
out
cmp
(bad)
out
adc
nop
jne
enter
fwait
std
popa
movs
stos
cwde
pop
inc
dec
mov
into
(bad)
mov
dec
cmp
xor
pop
fidiv
pop
mov
cmp
jge
loop
sbb
pop
push
mov
xor
xchg
xor
stc
cmp
and
dec
add
inc
enter
out
sub
add
mov
push
cmp
call
aaa
in
adc
scas
jmp
stos
inc
icebp
dec
adc
lods
leave
xor
inc
jb
mov
iret
or
sub
or
lds
aad
inc
mov
and
(bad)
hlt
stos
mul
mov
(bad)
adc
cli
gs
inc
dec
sbb
sbb
xor
call
in
sbb
stos
pop
push
inc
jg
shr
test
xchg
call
fiadd
xchg
sub
cwde
sbb
xlat
sbb
or
cmp
stos
test
test
cmc
sbb
mov
lds
int3
add
(bad)
movs
push
popf
inc
sbb
mov
stos
adc
jno
pushf
sub
push
mov
and
push
mov
ja
dec
scas
inc
cmp
and
cmp
inc
(bad)
sahf
dec
add
stc
push
mov
bound
cld
(bad)
cmp
dec
or
(bad)
pusha
js
sahf
fisubr
inc
stos
xchg
xor
adc
addr16
fnstcw
dec
sbb
sub
cs
mov
xchg
scas
mov
jnp
dec
hlt
sbb
loop
mov
push
sbb
xor
dec
xchg
les
sub
sub
les
loopne
mov
sbb
das
dec
sbb
mov
mov
push
jne
sub
xchg
xor
xor
stc
arpl
or
xchg
fild
(bad)
aaa
iret
call
sbb
ins
pop
or
call
ret
mov
call
(bad)
mov
adc
clc
sbb
jp
mov
jns
push
vaddsubps
int
mov
push
sub
jp
xchg
push
test
sub
and
jge
rcr
sbb
ficom
and
dec
ins
lock
push
xlat
repz
enter
mov
push
dec
mov
mov
out
rol
jg
inc
leave
int3
in
ret
add
jg
xor
cdq
ins
mov
jecxz
sar
sti
sbb
lods
test
test
sub
shl
cmp
imul
imul
cmps
cmp
ret
adc
add
out
dec
daa
cmp
pop
dec
int
nop
sbb
push
and
adc
bound
inc
loop
(bad)
mov
in
mov
jmp
(bad)
sbb
jne
cld
jmp
out
adc
dec
sbb
mov
xor
fcmovne
int
pop
inc
ins
movs
and
outs
fdivp
ror
ret
and
push
ficomp
arpl
adc
test
or
push
dec
inc
inc
mul
enter
(bad)
test
arpl
hlt
stos
mov
sub
push
out
xchg
nop
cdq
test
scas
es
es
adc
mov
addr16
xlat
jp
sbb
or
cmp
pusha
pop
cwde
mov
adc
fxch
clc
out
int3
ss
enter
push
icebp
scas
push
cmp
or
scas
pop
inc
shl
stos
scas
movs
fwait
stc
push
ja
push
lock
mov
pop
xchg
(bad)
stos
test
mov
into
addr16
arpl
and
(bad)
aad
test
test
les
and
xchg
jl
sbb
addr16
test
mov
mov
data16
cmp
mov
jecxz
test
xchg
out
addr16
fstp
dec
and
pop
inc
stc
add
jns
sar
fstp
xor
mov
mov
mul
jae
inc
popa
or
ficomp
lahf
aam
jo
push
add
and
mov
or
out
push
hlt
int3
inc
pop
ret
sahf
jns
ret
es
pop
push
mov
adc
sahf
jecxz
ss
test
and
inc
jle
(bad)
lods
cld
adc
xchg
retf
loopne
adc
xchg
leave
mov
inc
(bad)
cmp
out
lods
xor
or
mov
cwde
(bad)
fucom
lahf
cli
cs
fnsave
pusha
shl
test
dec
add
in
push
ror
jnp
lods
xor
push
(bad)
not
push
mov
ja
dec
and
adc
les
inc
jnp
ret
div
mov
mov
mov
pop
out
push
xor
mov
pushf
and
mov
int3
pop
and
in
and
popa
xchg
inc
scas
push
pop
jnp
inc
sar
shl
gs
out
pop
out
jg
mov
lods
sets
or
call
shl
test
test
sbb
jbe
cmp
or
push
lock
test
aaa
icebp
pop
pop
shr
in
bound
inc
jge
scas
std
add
xor
fwait
loop
jg
jbe
jp
fnstenv
fs
pop
inc
fs
outs
add
add
ret
sub
push
and
nop
add
es
push
sub
mov
stos
outs
int3
in
rcr
loop
add
cmp
clc
xor
daa
pop
into
ret
push
mov
fisubr
out
sub
dec
jns
repz
ins
lods
loopne
add
ja
cs
aad
jno
addr16
es
pop
cmp
mov
pop
sahf
add
imul
retf
clc
and
aaa
movs
xor
push
loope
mov
sbb
xchg
jmp
xchg
cmps
add
mov
movs
iret
jmp
sbb
add
rol
push
rcl
loopne
ins
mov
push
cs
push
sub
jns
sbb
out
add
pop
retf
(bad)
and
ds
pop
sbb
xor
push
jg
add
sahf
nop
mov
lahf
mov
out
push
dec
fistp
mov
mov
cwde
stc
(bad)
sbb
pop
inc
inc
push
outs
adc
jl
adc
push
xchg
adc
jnp
inc
jnp
fild
xchg
call
pop
or
outs
lods
dec
fist
daa
cs
sbb
jp
call
cmps
lods
outs
push
mov
xor
fmul
fiadd
jmp
and
xor
or
dec
cmps
sub
lea
jmp
sbb
movs
enter
sti
leave
inc
addr16
dec
pop
mov
and
(bad)
fsubrp
popf
fld
or
aam
jno
lods
vmaskmovdqu
stc
div
or
jno
repz
or
cs
mov
sbb
jbe
test
enter
mov
mov
add
add
(bad)
pop
sub
hlt
stos
cmp
dec
xchg
xor
push
movs
out
cmp
loopne
and
clc
or
xchg
dec
std
mov
fild
loopne
mov
jmp
add
repz
aad
ins
repz
adc
jmp
add
repz
lahf
out
ffreep
int
xor
aam
sti
pop
xchg
xor
je
sub
or
es
sbb
sbb
out
mov
imul
push
shl
xor
rcr
jmp
cs
into
mov
ffreep
adc
(bad)
sub
mov
rcl
les
xchg
out
dec
mov
cmps
sbb
add
jmp
or
sub
fsubr
add
adc
sub
scas
sbb
fwait
sbb
rsm
dec
inc
retfw
je
rol
add
fcom
add
lods
pushw
mov
jmp
add
fisubr
jns
cmp
retf
mov
daa
dec
mov
sbb
sbb
cmps
or
xchg
out
adc
fld
push
je
cmp
cmp
jne
retfw
iret
mov
and
inc
ds
je
jnp
scas
leave
mov
mov
outs
aad
cwde
pop
pop
pop
mov
fisubr
sbb
add
push
mov
mov
jno
fwait
push
sbb
icebp
es
xchg
jne
sub
pop
leave
jl
xor
cmp
push
mov
imul
shr
sbb
adc
mov
out
retf
aam
push
pop
icebp
push
fsubr
mov
adc
jno
pop
xchg
dec
push
aas
jge
jp
out
mov
add
xchg
cmps
sbb
push
fcomp
xchg
push
outs
cmp
push
lods
lods
icebp
xchg
push
sbb
rcr
pusha
cmp
add
out
mov
jle
iret
std
mov
out
jbe
lods
rcr
cmp
loope
dec
cdq
(bad)
retf
out
in
je
inc
jns
call
fnstcw
xchg
sbb
sti
loopne
adc
xor
aas
jl
dec
dec
adc
loopne
int
and
sbb
cmp
sbb
adc
mov
push
push
int
xor
shr
fidivr
out
jmp
data16
mov
ins
repz
mov
ret
or
(bad)
adc
repz
shl
ror
lock
and
out
shl
call
(bad)
out
push
or
pushf
sti
xor
push
mov
aas
ret
enter
mul
not
mov
test
nop
mov
lds
push
ficomp
push
push
fcom
and
cld
ins
sub
lock
inc
mov
xchg
sbb
into
test
push
mov
sub
cmp
ror
ror
push
bound
cmp
je
cdq
dec
jne
inc
or
aas
test
add
mov
leave
test
mov
cmp
jmp
pop
xchg
lfs
inc
mov
mov
or
(bad)
mov
cmps
sub
and
test
in
add
jno
pop
adc
shl
add
sbb
out
mov
mov
iret
cmc
sub
dec
mov
jmp
sbb
xchg
jnp
jecxz
in
mov
(bad)
push
mov
lods
lods
inc
dec
jae
aad
xor
cmp
sbb
cwde
mov
ss
enter
cld
sub
sub
imul
aaa
jmp
imul
mov
fldcw
xor
pop
jo
xor
sub
call
shl
dec
mov
xor
ret
pop
jle
mov
lea
sbb
mov
sbb
(bad)
fisub
mov
mov
push
add
xchg
mov
dec
mov
push
popa
test
xchg
mov
adc
mov
jo
jno
add
and
into
dec
hlt
pop
aaa
adc
and
dec
hlt
pushf
sbb
jge
jmp
inc
xchg
lea
mov
test
jmp
psllw
push
inc
and
fnstcw
cmp
inc
push
ins
add
pop
dec
or
sahf
jl
jle
pop
in
jmp
pop
arpl
mov
imul
test
pop
cmc
pop
fwait
add
adc
shl
gs
cld
mov
jle
dec
sbb
mov
sbb
aaa
imul
dec
test
adc
pop
xchg
mov
xchg
cli
(bad)
outs
mov
sub
adc
lods
lock
lds
(bad)
sbb
add
shr
jmp
addr16
(bad)
xchg
inc
sub
dec
fdiv
inc
sahf
add
ret
int
and
inc
into
or
xchg
jl
xor
xchg
enter
or
inc
add
mov
sub
cmp
les
mov
mov
repz
or
fmul
(bad)
outs
xchg
(bad)
jnp
call
loopne
ja
pushaw
xchg
pushf
pusha
xchg
lahf
mov
(bad)
cmp
push
push
sub
imul
xchg
je
sbb
ins
push
pop
mov
inc
adc
movs
jb
pop
pop
cdq
or
pop
mov
xchg
xor
cmp
sbb
out
das
mov
pop
cmps
sahf
add
adc
scas
test
inc
mov
setge
nop
mov
xchg
inc
add
test
jb
xor
jno
sub
int3
dec
and
imul
inc
int3
and
dec
(bad)
retf
xchg
or
scas
into
or
sub
mov
das
fadd
cld
dec
das
pop
mov
jne
mov
sbb
outs
retf
pop
test
jecxz
js
(bad)
mov
mov
mov
jp
or
adc
loop
or
scas
ror
jg
test
sbb
fwait
out
scas
arpl
jg
ins
push
(bad)
jg
and
dec
hlt
outs
bound
push
ficom
mov
cld
imul
ficom
repnz
test
add
xor
daa
iret
loope
dec
pusha
sub
retf
dec
xchg
outs
fcomp
inc
cld
cmp
ret
jg
push
xchg
jo
cmp
pop
or
cmp
leave
dec
mov
ja
push
xor
adc
outs
sbb
out
jno
xor
aad
(bad)
inc
fcom
hlt
pop
jne
repnz
in
xchg
(bad)
into
out
iret
pop
xchg
mov
mov
xchg
mov
add
(bad)
sti
add
mov
pop
xchg
loop
scas
test
dec
lods
mov
sub
lea
mov
lods
jecxz
(bad)
push
fs
out
(bad)
in
pop
jg
push
xor
and
xchg
enter
cmp
movs
ins
outs
movs
nop
sbb
add
push
inc
out
jmp
loope
mov
imul
jmp
jge
inc
outs
sahf
mov
stos
jmp
xor
pop
pop
jbe
pop
inc
and
sub
sbb
cld
xor
in
fidivr
sub
jl
and
icebp
add
les
mov
pop
lds
cld
sahf
mov
pop
dec
mov
popf
frstor
adc
ret
inc
in
std
and
icebp
mov
shl
dec
push
cmp
xchg
repz
adc
add
sub
retf
dec
cld
cmps
jae
mov
and
lods
or
cmp
aam
xchg
add
mov
pop
pop
sar
das
add
fsubp
or
sbb
fsub
test
pop
sbb
pop
add
add
xchg
fs
loope
xchg
loope
bound
clc
inc
fs
repz
mov
(bad)
icebp
inc
adc
div
pop
adc
jge
add
jnp
mov
adc
jmp
add
loopne
xchg
retf
jb
mov
ja
(bad)
jg
xor
addr16
mov
aad
sbb
(bad)
sub
xchg
leave
pop
dec
sbb
imul
js
push
leave
mov
jp
clc
mov
push
ins
test
mov
mov
inc
mov
rcl
scas
stc
repz
outs
test
ja
std
inc
pop
stc
add
outs
(bad)
in
jp
sar
lock
leave
mov
mov
sbb
pusha
or
lods
clc
scas
add
test
sbb
mov
cmp
ret
test
movs
js
and
sub
fld
stos
adc
xchg
inc
test
(bad)
xor
jge
cli
aas
fnsave
lea
stos
sub
xchg
push
lods
loopne
adc
dec
aad
cld
mov
xor
jmp
out
mov
mov
pop
jno
jae
jl
jge
mov
in
xchg
jb
mov
mov
inc
cmc
jl
mov
push
sbb
sbb
pop
or
mov
ss
ins
pop
js
push
jmp
int
ss
lds
cmp
(bad)
mov
sbb
rcr
dec
pop
scas
jo
mov
fnstcw
jnp
xor
das
adc
fwait
jle
ins
fstp
leave
add
aam
push
inc
test
xlat
cld
fstp
aad
adc
cmps
cmp
jo
cmps
loopne
jnp
sub
ja
mov
std
popa
fmul
pop
sub
adc
iret
lock
mov
sub
sbb
push
cmp
rol
fdivr
ret
cmp
mov
jp
stos
sbb
cmp
test
xchg
leave
enter
out
pop
fistp
mov
repz
mov
xchg
push
ror
xor
lahf
out
push
jmp
nop
jg
mov
sbb
push
mov
pop
rcr
outs
fwait
xlat
push
pop
scas
outs
jne
xor
ror
mov
inc
mov
dec
add
(bad)
clc
push
sub
jbe
add
mov
cmps
cmp
inc
or
push
bound
cmp
lds
dec
pop
aam
add
jecxz
in
xor
xchg
push
cmp
mov
push
nop
mov
add
out
mov
hlt
jnp
cmp
push
cli
mov
jle
xchg
xchg
sti
stos
(bad)
sbb
jae
clc
pop
or
in
dec
xchg
repnz
and
test
push
sbb
pop
popf
jmp
mov
in
and
cmp
dec
fs
movs
popfw
in
fsubr
xchg
sar
sbb
and
lods
mov
into
mov
dec
imul
and
js
dec
add
adc
in
pop
adc
push
pop
jecxz
js
mov
fisttp
mov
push
lods
xor
leave
and
js
test
push
push
clc
adc
pop
pop
xor
xor
cmps
std
rep
in
push
dec
pop
idiv
arpl
je
std
and
mov
xor
add
or
rcl
pop
(bad)
jmp
out
jl
jne
sbb
in
cdq
xchg
in
retf
mov
cmps
pop
ret
fs
push
adc
push
adc
add
add
push
xchg
daa
fisub
and
or
pushf
xor
in
pop
fmul
and
cs
mov
pop
xor
out
jle
sar
mov
xor
dec
out
movs
aam
dec
fdivr
pop
scas
sbb
jge
mov
xchg
arpl
mov
add
mov
rcr
mov
scas
push
jmp
or
jno
mov
inc
jmp
adc
pop
cmp
inc
mov
cmp
repnz
sar
sub
add
adc
loope
neg
dec
xor
sbb
push
and
shufps
int3
push
int3
retf
ret
push
loope
ret
inc
in
inc
mov
enter
add
cmc
imul
pusha
(bad)
pop
ror
mov
xor
add
int3
int
stos
fstp
jg
pop
xchg
add
xchg
sbb
mov
cmps
test
out
cwde
xchg
imul
aaa
cmps
nop
movs
jp
ret
dec
test
aam
mov
fcmovu
mul
(bad)
pop
mov
(bad)
or
mov
cmp
or
sbb
pusha
cmp
aaa
das
xlat
leave
jl
cmp
mov
xlat
cmp
iret
outs
mov
mov
nop
ficom
aad
mov
dec
out
inc
cmps
(bad)
xchg
out
into
jmp
outs
mov
out
in
dec
xor
loopne
dec
adc
punpckhdq
dec
js
call
ins
mov
leave
mov
mov
call
lods
movs
sahf
cdq
dec
push
cmps
adc
mov
pop
int
retf
stos
mov
mov
inc
cdq
repz
mov
cmp
je
int3
pusha
leave
sbb
(bad)
jno
je
pop
outs
aaa
or
push
fsubr
pop
mov
leave
repnz
mov
ret
cmps
xor
push
dec
pop
lock
cli
int
sub
ret
aaa
add
in
test
in
sub
js
mov
sbb
(bad)
inc
add
cld
add
mov
imul
sub
jno
adc
dec
pop
scas
js
not
xchg
adc
sub
mov
cwde
adc
push
test
mov
cli
out
pop
adc
mov
ret
shl
mov
fs
arpl
add
iret
sbb
cld
ins
mov
mov
ficom
fisttp
out
iret
sbb
mov
cwde
adc
dec
addr16
jecxz
ds
popf
inc
push
fldln2
bound
inc
push
arpl
fnsave
cmp
push
in
jmp
ja
call
stos
ss
lods
and
arpl
xchg
shr
pop
ins
scas
test
inc
dec
sbb
fst
cmp
push
scas
stos
scas
or
arpl
push
xor
mov
jg
ja
out
enter
sub
xchg
sub
fisub
sbb
mov
add
sti
les
lods
ret
push
lahf
dec
jne
pop
xchg
sub
lea
outs
imul
jp
xchg
or
inc
outs
cmp
icebp
cmp
mov
adc
sbb
scas
jnp
cld
mov
pop
out
push
mov
push
int3
or
sbb
rcl
bnd
pop
xchg
xor
adc
xchg
sbb
scas
clc
and
cmp
xlat
inc
in
ret
mov
jae
test
and
mov
(bad)
pop
outs
xchg
jae
mov
(bad)
xchg
rol
in
out
daa
sbb
xchg
adc
out
adc
and
jmp
js
repz
mov
ficomp
loop
lock
fiadd
ds
cmp
sahf
xchg
test
dec
xor
out
imul
popf
out
xor
jle
out
xor
and
dec
leave
into
aam
pop
sub
add
leave
push
sbb
(bad)
add
pop
mov
dec
retf
add
div
in
xor
in
icebp
pop
rep
xchg
mov
loope
shl
jne
mov
add
pop
ds
sub
inc
lock
test
mul
add
pushf
jne
lds
in
jmp
sbb
sub
or
push
add
daa
sbb
xchg
int
outs
jle
xor
out
in
lods
ins
sar
and
push
jecxz
inc
or
or
fld
xchg
sti
mov
aad
mov
jge
or
fisttp
xchg
fild
inc
or
mov
adc
push
cld
xchg
sbb
jmp
les
jl
and
or
(bad)
mov
xchg
xor
cmp
sbb
repnz
fmul
std
sub
add
inc
fs
inc
pop
retf
mov
mov
ins
lds
push
test
mov
scas
loope
add
in
movs
mov
mov
shl
ja
shr
call
daa
cmp
mov
aam
or
imul
sub
pushf
and
icebp
call
imul
das
mov
mov
cmps
add
push
aas
loopne
out
test
cli
out
les
jmp
xchg
xchg
and
movs
psrlw
addr16
xchg
lea
adc
push
mov
mov
sbb
cmp
adc
fdivp
cmps
mov
dec
or
ror
iret
inc
pusha
push
push
jecxz
mov
dec
pusha
popf
and
mov
fmul
or
and
dec
mov
nop
push
adc
add
leave
pop
out
sbb
fcomp
out
fstcw
cld
jmp
sub
shl
test
ds
pop
jmp
sbb
xchg
(bad)
pop
push
inc
movs
out
jo
(bad)
pop
enter
mov
dec
push
xor
retf
sub
mul
aam
push
ins
call
pop
enter
mov
pusha
and
mov
std
stos
push
dec
fmul
adc
and
shl
imul
add
mov
cmp
adc
mov
test
dec
sub
mov
pop
adc
and
xchg
cmp
ret
and
and
add
xor
mov
movs
push
lds
and
es
cmp
jmp
fstp
push
pop
mov
push
push
adc
cld
and
es
add
inc
lods
dec
fisttp
ror
push
test
in
fwait
inc
scas
jle
adc
jbe
movs
adc
xor
sub
popf
mov
xchg
(bad)
in
add
shl
fs
cmp
fidiv
mov
(bad)
cmp
mov
ja
test
aaa
push
xor
js
arpl
jnp
lds
add
int3
in
inc
rcr
sub
and
sub
push
fs
dec
mov
jecxz
(bad)
(bad)
dec
rcl
sub
in
cmp
call
push
jae
sub
jp
jmp
in
inc
mov
imul
mov
into
push
sub
sub
jb
call
cmp
fsubp
inc
aad
push
or
stos
bound
sbb
lds
push
sub
test
push
add
sar
pop
je
retf
les
push
aad
or
cmp
sbb
cld
dec
mov
pop
push
adc
ins
fld
(bad)
call
outs
xchg
and
mov
hlt
cmp
scas
fisubr
xchg
retf
outs
and
out
scas
in
inc
fcomp
push
lds
fcomp
add
mov
movs
mov
addr16
movs
int3
sub
hlt
mov
fcom
in
mov
inc
in
pop
and
mov
xor
cmps
pop
movs
call
or
cdq
and
aas
outs
or
(bad)
add
mov
mov
sbb
aas
movmskps
add
fild
jbe
je
lea
outs
cmp
(bad)
mov
dec
mov
std
inc
mov
bound
cdq
inc
loop
cwde
xor
out
mov
cmp
jge
xor
push
mov
pop
(bad)
clc
add
sbb
or
aaa
adc
xchg
movs
out
xchg
std
sub
jnp
mov
sbb
neg
mov
cld
push
(bad)
mov
ret
or
sbb
bnd
jmp
bound
add
fcmovnu
test
scas
sbb
mov
xchg
inc
sti
pop
inc
cli
xor
push
mov
push
lock
add
xchg
int3
jmp
ja
and
sbb
mov
aad
sbb
add
xor
rcr
push
cmp
jmp
push
fstp
repz
retf
jg
pop
push
inc
or
loop
shl
lock
clc
shr
push
and
into
and
pop
scas
mov
mov
ins
das
mov
fcomp
cmps
xor
sbb
hlt
push
mov
shl
test
arpl
xchg
add
movs
mov
imul
push
mov
add
pop
add
test
ficomp
ret
mov
xor
mov
jecxz
and
xchg
mov
clc
xchg
dec
scas
enter
test
pop
sub
aad
pop
jp
(bad)
mov
add
inc
pop
xor
ret
ins
(bad)
sbb
dec
(bad)
ror
pop
mov
(bad)
jg
ins
popa
jnp
(bad)
xchg
jb
ins
shl
retf
mov
pop
adc
sbb
add
sub
and
lock
xchg
(bad)
push
cmp
or
xor
dec
in
(bad)
cs
mov
pop
aaa
jbe
outs
sbb
or
or
ins
fist
bound
leave
test
or
sbb
test
pop
pusha
or
rcl
das
les
mov
je
mov
daa
scas
fst
cli
pop
addr16
pop
xor
xor
fsub
out
ret
cs
xchg
pusha
mov
ja
popa
pop
add
pop
test
ret
mov
fwait
sub
retf
mov
movzx
pushf
mov
xchg
icebp
lock
test
lahf
loop
pop
adc
pop
sbb
and
mov
test
in
jl
jno
dec
mov
(bad)
in
mov
and
mov
and
push
dec
jmp
pop
int3
mov
cwde
loope
aas
cli
sbb
xchg
pop
mov
in
cmc
test
dec
(bad)
sub
and
ja
jg
shl
test
jg
lea
push
pop
mov
adc
lock
cmps
dec
mov
mov
movs
and
push
add
ins
sbb
xlat
push
jae
add
xor
pop
dec
mov
mov
push
mov
pop
popf
mov
fisubr
loop
cs
fisubr
cmp
add
adc
int
push
mov
sbb
retf
(bad)
(bad)
mov
mov
icebp
adc
sbb
rcr
adc
stc
or
jnp
es
pop
ret
fld
push
in
jmp
stos
addr16
mov
jne
(bad)
push
bound
test
inc
mov
inc
jge
sti
fiadd
dec
push
inc
cwde
or
clc
pop
cmp
sub
lock
call
rol
pop
cdq
or
jmp
hlt
ins
mov
xchg
in
loopne
es
mov
or
int
pop
scas
dec
xchg
mov
(bad)
sbb
jo
sub
dec
push
aad
dec
push
and
add
ja
pop
mov
mov
xchg
mov
je
fidiv
data16
push
push
iret
dec
adc
adc
adc
jmp
jae
push
into
les
mov
dec
icebp
call
xor
push
ror
je
into
mov
cmps
add
cmp
in
fcomip
rol
test
idiv
imul
scas
push
mov
(bad)
mov
inc
sbb
pop
jg
in
push
nop
dec
mov
out
add
push
sbb
enter
xor
pop
push
jmp
test
jle
pop
mov
cli
jle
(bad)
outs
jo
cmps
mov
mov
pop
adc
jmp
in
fsub
movaps
pop
in
adc
add
or
test
inc
aas
retf
les
cs
or
popa
push
xchg
sbb
jbe
and
xor
lods
dec
inc
mov
icebp
sub
xchg
dec
lods
and
xor
inc
cmp
mov
dec
test
push
aad
cmp
shl
cmp
mov
js
daa
mov
in
inc
pop
jne
cwde
and
mov
mov
pushf
mov
aad
adc
ja
repnz
sub
call
std
mov
adc
push
into
imul
push
mov
jae
or
out
fcomip
jae
aaa
fist
movs
ficomp
ins
stos
mul
daa
lods
data16
into
into
jne
sub
add
outs
cmp
repz
push
push
fild
xor
fwait
popf
mov
sub
push
inc
popa
addr16
cmps
or
and
sub
jp
or
xor
or
icebp
xchg
shl
adc
lock
or
daa
outs
xchg
scas
cmp
jmp
sbb
sbb
sub
je
jge
mov
ret
and
dec
div
adc
lock
mov
mov
mov
mov
push
imul
int
jl
cmps
shl
scas
push
inc
mov
push
stos
mov
rcr
mov
inc
aas
pop
and
cmp
jle
icebp
inc
std
es
(bad)
ins
loopne
pop
xor
xor
add
idiv
dec
in
mov
mov
lods
mov
xor
inc
into
mov
and
das
and
scas
cmp
sti
xchg
push
dec
dec
scas
daa
jb
xchg
repnz
jbe
jge
loop
dec
adc
mov
mov
mov
pop
jmp
repz
lods
call
dec
pop
clc
in
(bad)
adc
dec
fld
loopne
mov
bound
jbe
aas
mov
fsub
cmp
push
push
push
sbb
retf
xor
push
jnp
mov
daa
sbb
ret
adc
xchg
mov
cmovo
stos
cmp
and
shl
jmp
and
mov
xchg
xor
push
push
cwde
mov
cmps
mov
ds
adc
xchg
mov
xchg
ret
int3
icebp
dec
lea
out
(bad)
sar
xchg
lods
dec
xchg
jl
mov
jle
arpl
je
js
loope
je
pop
dec
imul
fistp
pushf
hlt
mov
test
lds
repnz
or
fwait
sbb
into
cmp
mov
mov
cmps
(bad)
sbb
adc
data16
sub
xchg
push
adc
shrd
sti
ins
mov
push
push
sahf
sbb
mov
add
pop
mov
and
push
mov
mov
movs
mov
lods
pusha
call
pop
sbb
xchg
adc
add
jbe
cmp
mov
mov
inc
mov
jmp
fdiv
inc
int3
mov
nop
(bad)
cli
xchg
lahf
(bad)
mov
in
outs
inc
push
call
xchg
sub
push
mov
fwait
pop
xchg
or
adc
das
xchg
pushf
and
mov
adc
rol
jmp
shl
lds
aas
sahf
jb
inc
and
in
mov
jnp
pusha
out
pusha
(bad)
cld
cwde
jae
scas
pop
jbe
and
sub
mov
iret
call
inc
sub
cmp
add
sbb
sbb
xor
adc
sbb
inc
cmp
push
or
iret
jle
mov
pop
mov
mov
cmp
xor
jg
pop
in
pop
cmps
cmp
dec
mov
pushf
mov
mov
inc
sbb
add
xchg
jmp
je
lds
clc
push
sahf
lock
and
lahf
xchg
pop
call
adc
add
dec
pushf
clc
stc
fcomi
fcomi
div
stos
lods
jne
and
in
adc
fwait
mov
inc
cmps
lods
push
mov
imul
iret
push
add
mov
mov
in
mov
push
stos
adc
jbe
push
sbb
fistp
dec
in
jle
pop
sbb
and
dec
push
cmp
out
popf
lods
pop
push
outs
leave
call
push
xchg
push
mov
mov
ins
lods
jmp
ror
jb
outs
aad
pop
inc
movs
in
cmp
in
sub
ret
push
fwait
xchg
jmp
mov
dec
stos
xor
cmp
jecxz
ins
pop
jb
push
jmp
dec
test
sti
loop
aas
fmul
push
mov
retf
(bad)
das
cmps
stc
cmp
out
sbb
movs
(bad)
jae
jmp
nop
inc
xor
into
rcl
js
inc
cwde
out
adc
and
sbb
int
mov
push
pop
loope
out
mov
cmp
or
aas
adc
xchg
sub
cmp
ror
mov
jge
outs
xchg
mov
mov
int
fistp
jb
sbb
sub
dec
mov
stos
jns
dec
sub
jmp
in
sbb
ss
js
push
mov
in
shl
dec
jl
lods
sar
jg
ins
inc
sbb
dec
inc
and
scas
jg
inc
std
ror
add
xchg
das
shr
mov
cmp
pop
xchg
add
mov
mov
inc
stos
dec
pop
sub
imul
sub
pop
push
(bad)
out
(bad)
adc
scas
das
out
mov
push
dec
push
outs
add
outs
stos
ss
push
(bad)
adc
sbb
gs
(bad)
gs
adc
dec
(bad)
jg
sub
jo
neg
add
mov
dec
inc
adc
mov
xor
push
mov
dec
mov
pop
add
adc
lods
ja
cmc
(bad)
fild
loopne
push
pushf
ss
fadd
cwde
scas
iret
(bad)
aam
pop
hlt
pop
cli
push
jns
cld
xchg
inc
inc
scas
in
lods
in
add
(bad)
sub
push
(bad)
add
loope
stos
pop
(bad)
cmp
nop
fistp
pop
dec
rcl
pop
mov
shr
mov
or
cmp
or
jae
add
nop
popf
repz
sub
sbb
stos
addr16
cmp
pop
pop
loop
xchg
inc
push
and
ret
jl
outs
repz
loop
cmps
or
jmp
imul
in
mov
(bad)
jl
dec
pop
int
in
inc
mov
xchg
lahf
push
dec
add
lods
sub
xor
add
(bad)
pop
ficom
mov
imul
jno
rol
(bad)
pop
and
xchg
pusha
out
add
aaa
mov
dec
mov
fs
pop
push
fisttp
lahf
int
ins
jbe
popf
xchg
or
ficom
in
in
mov
fbld
add
enter
jne
sti
dec
ss
movs
adc
sbb
sbb
test
inc
cmp
repnz
ror
popa
mov
popa
lods
dec
sbb
xor
jge
push
cdq
inc
retf
push
loopne
mov
mov
stc
dec
mov
add
and
loopne
pusha
jmp
inc
and
cs
in
out
(bad)
shl
pop
retf
in
cmc
ins
aas
mov
pushf
jbe
iret
das
inc
sbb
jns
push
shl
js
inc
add
popa
lock
mov
les
movs
test
call
movs
rol
int3
mov
in
dec
or
lods
ret
stos
and
xchg
std
arpl
and
mov
retf
pop
imul
test
std
ss
sbb
js
inc
jne
mov
mov
cld
test
pop
mov
leave
das
cmp
mov
pop
push
mov
test
ror
and
mov
retf
cmps
inc
dec
push
inc
push
fisttp
lock
xchg
lahf
push
inc
push
and
mov
mov
mov
sub
adc
sub
imul
lahf
jo
fs
aam
jns
les
dec
retf
fwait
push
adc
ja
add
call
and
or
adc
cli
inc
or
xor
mov
mov
add
adc
pusha
scas
mov
and
sbb
xor
xchg
(bad)
aam
mov
mov
dec
pop
mov
popf
and
scas
je
fbld
dec
xchg
xchg
into
inc
jne
and
mov
test
test
pop
pop
xchg
scas
xlat
sahf
pop
scas
jns
jo
add
mov
ins
xchg
inc
fadd
(bad)
pop
sbb
cmp
push
repz
je
call
cwde
loop
push
xchg
sbb
or
ins
mov
dec
push
mov
pop
nop
adc
push
pop
fidivr
bnd
dec
sti
sbb
hlt
mov
dec
pop
cwde
neg
pusha
movs
jecxz
push
sub
inc
xor
and
int
outs
leave
mov
xor
loopne
out
ja
sub
cmp
jmp
dec
dec
jb
nop
mov
outs
cmp
sub
xor
xor
jp
inc
out
add
fisttp
ror
fld
or
jl
push
ret
movs
rcr
into
push
cmps
jp
sbb
or
cmp
sahf
adc
push
pop
cmps
jmp
push
ds
adc
and
repz
cwde
sbb
sbb
cli
or
das
fdiv
hlt
add
cs
xchg
lods
dec
std
push
sub
or
popf
pop
out
push
and
cmp
cmp
ins
retf
sbb
sub
mov
popa
add
sar
aam
pushf
adc
sbb
inc
xchg
rcr
and
mov
rcl
sub
shr
adc
neg
add
mov
dec
xchg
cmp
mov
pop
pop
ins
dec
dec
dec
xlat
arpl
ds
xor
repz
jae
mov
sbb
sbb
push
mov
pushf
add
or
xchg
jge
cmp
retf
loop
pushf
inc
(bad)
scas
inc
(bad)
fmul
mov
cmp
out
mov
add
or
jle
push
pop
in
xor
popa
movs
(bad)
aas
jbe
pop
aaa
mov
neg
inc
or
rcr
jl
stos
lea
dec
push
jno
dec
imul
push
xchg
out
pop
mov
xor
xchg
call
aad
scas
js
or
jb
rol
sahf
int
in
aam
leave
(bad)
loope
ins
(bad)
push
dec
movs
cmp
in
(bad)
and
mov
test
add
aas
dec
lea
into
aad
test
ins
fwait
iret
mov
in
adc
push
and
mov
leave
shl
cld
adc
test
popa
cli
outs
shl
mov
mov
test
push
xor
or
(bad)
cwde
fnsave
test
daa
push
test
push
cmp
loopne
fsub
push
pop
(bad)
add
arpl
mov
loop
out
cwde
push
bound
cmps
mov
mov
or
xor
repnz
sti
in
in
mov
js
sbb
stos
ja
xor
add
and
pop
mov
dec
dec
fucomi
pop
scas
scas
dec
ins
dec
outs
jmp
es
jae
dec
xor
(bad)
loopne
int
mov
mov
(bad)
retf
jbe
sahf
jge
sub
xor
cs
mov
test
cmc
cmp
and
mov
mov
sahf
cmp
pushf
shl
imul
rol
xor
push
scas
(bad)
(bad)
mov
(bad)
push
sbb
test
xchg
das
inc
repz
out
mov
test
or
push
sub
gs
mov
mov
jno
cmp
dec
popa
repz
cld
push
retf
sbb
mov
adc
inc
xor
sets
aaa
jno
or
data16
aam
xor
in
mov
and
cmp
dec
pop
jg
test
pop
inc
and
pop
xchg
inc
dec
pop
mov
les
loop
xchg
fadd
mov
xor
ret
out
neg
cmp
push
mov
rol
loop
iret
repnz
push
jg
or
rcl
retf
sub
xchg
in
xor
add
xchg
ret
retf
stos
xlat
pop
cmp
pop
jp
or
inc
in
je
ret
pop
mov
mov
es
ins
lahf
cmps
pop
repz
fs
lods
mov
imul
dec
xor
loopne
(bad)
gs
loop
push
stc
pop
mov
cmc
and
addr16
aad
(bad)
pop
rcr
jl
jbe
sbb
repnz
add
adc
movs
(bad)
jbe
xchg
mov
add
ror
mov
dec
inc
imul
es
call
mov
add
mov
cld
mov
jecxz
adc
sbb
xor
dec
push
aam
fwait
inc
pop
aam
in
or
xchg
out
in
mov
xchg
aas
push
cmp
pushf
xchg
shl
adc
ror
out
stos
inc
pop
out
jp
jbe
int3
cs
push
fidivr
test
rcl
movs
sub
hlt
sbb
pop
xor
cli
shr
mov
cmp
xchg
pop
dec
xchg
cmps
mov
dec
or
das
inc
(bad)
movs
xor
loope
shl
retf
mov
loop
scas
mov
sub
xchg
(bad)
les
(bad)
fwait
jo
inc
repz
and
push
outs
scas
jae
sbb
add
dec
fnstenv
or
movs
mov
cli
and
movs
mov
cvtps2pi
repz
inc
loopne
mov
xor
cmp
cmps
lods
sub
pop
mov
push
push
test
mov
stos
hlt
in
cli
sahf
sub
mov
xchg
cld
pushf
in
addr16
inc
in
or
ja
add
push
fs
and
add
mov
outs
mov
or
movs
push
movs
cdq
sub
xchg
scas
xor
adc
sti
pushf
stos
icebp
lea
jp
push
nop
leave
and
hlt
add
mov
sbb
jno
push
xor
pop
push
in
cld
add
call
ja
xor
push
loope
outs
outs
loopne
xchg
mov
inc
test
fisttp
mov
fcmovu
push
ret
xchg
or
or
into
sahf
in
out
das
add
(bad)
and
push
cmp
adc
pop
ja
jmp
pushf
bound
add
inc
jae
lea
jg
push
and
dec
repnz
shr
(bad)
mov
outs
or
ja
cmp
movs
inc
out
mov
and
sub
pop
fs
or
xchg
xor
cmp
mov
ror
fmul
or
xchg
jge
cld
fimul
mov
retf
mov
popa
cs
int3
push
pop
push
js
xchg
jge
call
push
pop
data16
stos
in
sub
call
mov
shl
mov
mov
jb
pop
pusha
or
pop
call
or
outs
retf
in
test
adc
or
jmpw
out
inc
test
clc
push
imul
cmp
das
loope
pop
mov
ins
repz
inc
fisubr
adc
(bad)
mov
movs
add
nop
cmc
cmp
ficomp
push
jmp
out
mov
movs
sahf
sub
cmp
cmp
adc
movs
dec
push
je
lock
data16
(bad)
(bad)
or
dec
inc
gs
fidiv
aaa
inc
bound
push
inc
mov
xor
push
push
cs
add
mov
in
movs
cld
push
nop
adc
pop
jmp
dec
(bad)
push
call
iret
cmp
aas
std
shr
push
mov
pusha
xlat
pop
xor
loope
sub
push
add
jmp
mov
pop
(bad)
ins
adc
aas
lods
(bad)
lahf
xor
xchg
test
loope
inc
fxam
jbe
push
(bad)
or
mov
shl
out
shl
inc
(bad)
stos
loop
pop
inc
or
je
cmp
loopne
push
xchg
call
cmp
fisubr
mov
mov
sti
in
cmp
movs
dec
retf
xchg
or
jbe
adc
lds
out
xor
dec
and
stos
lea
mov
shl
fadd
xchg
ins
sub
js
xor
sbb
daa
xchg
push
mul
pop
(bad)
int
mov
mov
inc
sub
mov
dec
sbb
pop
ins
int
outs
out
xchg
or
or
fiadd
in
xlat
lfs
mov
sub
push
repz
cs
idiv
leave
push
sub
sub
inc
outs
pop
or
mov
jne
and
inc
cli
or
ret
jae
inc
pushf
jp
ja
int3
and
sub
xchg
push
fs
in
mov
nop
pop
pop
push
popa
fld
mov
ret
lds
mov
mov
push
and
and
jecxz
fild
dec
ds
pop
mov
sub
loop
cli
(bad)
jle
fisttp
xor
sub
mov
xchg
mov
and
daa
jae
rol
add
iret
mul
push
into
jg
xchg
fist
xchg
sbb
add
xor
not
fcom
cmp
aas
mov
push
jp
pop
adc
ret
fs
enter
jo
mov
pop
dec
in
push
jl
and
loop
mov
fcom
and
ja
(bad)
out
or
int3
mov
scas
xchg
(bad)
call
mov
pusha
popa
push
test
xor
loop
push
cmp
mov
aaa
push
mov
in
push
push
pushf
loopne
pop
pop
inc
out
add
jmp
push
mov
imul
cmp
test
enter
lods
xor
into
or
in
imul
out
stos
(bad)
xchg
cmps
cli
add
sti
pusha
aam
std
shr
popf
sub
call
jp
adc
rcr
inc
mov
ficom
cmps
mov
mov
scas
scas
stos
xor
cld
or
mov
xlat
xor
clc
jl
popf
add
jne
xchg
gs
jmp
lds
mov
fnstcw
sbb
daa
sahf
inc
fisubr
xchg
jo
dec
data16
adc
dec
test
jecxz
pop
dec
cmc
sub
(bad)
mul
fdivr
jecxz
cmp
xor
mov
inc
cmp
jnp
pop
aam
push
adc
test
dec
adc
arpl
xchg
inc
mov
mov
mov
(bad)
sub
cmp
dec
pop
aad
cli
loopne
mov
neg
adc
adc
ret
leave
mov
gs
bound
push
mov
sub
das
xor
sahf
dec
ins
mov
aaa
ret
jae
mov
(bad)
jbe
push
xchg
fwait
jg
dec
fnstenv
test
test
outs
pop
pop
xchg
mov
mov
push
sub
push
or
cmp
xchg
cmp
fnstenv
jmp
ret
gs
cs
lods
push
(bad)
sbb
push
mov
cld
in
hlt
push
dec
mov
jge
inc
movs
iret
jp
sbb
fwait
inc
push
add
movs
jl
outs
ss
movs
mov
xlat
js
test
cmp
and
xchg
call
pop
stc
das
fs
test
mov
in
cmc
inc
sti
jo
adc
ja
push
mov
(bad)
xchg
in
ret
mul
jp
ret
mov
rcl
dec
pop
pop
stos
jb
das
xchg
nop
adc
add
or
push
mov
xor
xchg
mov
rcr
das
pop
mov
cwde
daa
aad
mov
sub
add
popf
cdq
cmp
loopne
sub
pop
add
cmp
dec
sub
adc
mov
pop
inc
push
mov
xchg
or
jne
pop
jb
ffree
nop
xlat
push
push
stos
push
js
(bad)
data16
mov
jns
sbb
imul
xchg
mov
fistp
jo
pop
call
int3
cmps
and
jp
mov
ds
add
(bad)
aam
out
enter
js
jno
ss
dec
lods
rol
ror
jne
sub
fld
bound
leave
mov
cmp
and
lock
and
xchg
push
dec
mov
imul
jp
rcl
jge
fisttp
sbb
call
dec
les
cmps
xor
inc
stos
inc
vsubsd
cmp
pop
xchg
gs
in
or
jle
mov
pop
hlt
mov
outs
loopne
jecxz
mov
add
jne
test
cmp
lea
and
inc
ins
jmp
sbb
jle
push
mov
add
dec
mov
mov
fs
cmp
lds
xchg
imul
cmps
adc
test
cmp
fisub
sbb
sub
test
fisub
imul
jbe
sub
in
idiv
adc
rcr
cmp
aad
fwait
inc
jmp
sub
into
dec
mov
lods
adc
test
ret
ss
test
jge
ret
scas
repnz
int3
pop
gs
sbb
cmp
movs
push
add
xor
dec
inc
jnp
retf
jns
push
movs
inc
in
dec
cwde
cmps
push
cmp
aam
and
imul
fimul
and
repz
xor
pop
ins
inc
mov
int
das
and
lock
cmc
dec
mov
xor
imul
dec
icebp
push
adc
iret
xor
ds
xchg
cmp
sub
std
ficomp
push
cmp
aam
xlat
out
repnz
inc
shl
shl
jbe
or
mov
mov
retf
les
icebp
scas
mov
out
jmp
mov
mov
jmp
or
inc
sub
push
dec
bound
fwait
push
xor
adc
pop
js
cmp
ins
mov
push
ja
xchg
sti
inc
xor
push
(bad)
aaa
pusha
in
aam
test
mov
xchg
mov
fisttp
dec
mov
ins
fnstsw
in
nop
pop
(bad)
pop
add
jbe
add
sub
adc
gs
mov
jno
into
cdq
fld
ss
and
clc
and
push
shl
imul
adc
repz
xchg
loopne
nop
mov
xchg
aad
test
dec
nop
int
ss
(bad)
in
popf
push
mov
add
out
inc
int
dec
mov
fisttp
and
sbb
rol
lods
in
push
jb
mov
mov
lea
pop
movs
push
xor
lods
retf
and
mov
pop
inc
into
xchg
mov
jb
xchg
int3
jmp
pushf
mov
mov
test
inc
sbb
dec
add
fld
jecxz
loopne
pusha
cli
js
cli
or
nop
(bad)
fstp
sub
xor
leavew
ffree
scas
loop
out
inc
push
xchg
cmp
retf
call
in
fldenv
std
mov
mov
aaa
cmps
sbb
adc
pop
lods
fcom
jge
mov
inc
lods
jns
and
xor
push
dec
pop
cmp
sbb
mov
push
scas
hlt
in
pop
cdq
sub
xor
inc
adc
mov
mov
(bad)
popa
mov
(bad)
int3
outs
test
jns
jmp
iret
mov
(bad)
adc
sub
cwde
push
lahf
js
cmp
adc
xor
fisubr
fidivr
add
mov
clc
mov
cld
push
(bad)
sub
sbb
fcomp
aad
dec
sub
iret
(bad)
xlat
mov
imul
jne
shl
retf
dec
push
stos
xchg
jle
mul
jo
mov
mov
jge
and
cmp
out
aaa
mov
ins
jmp
mov
daa
repz
push
mov
hlt
or
stos
mov
xchg
mov
jne
push
inc
iret
cmp
pop
daa
int
test
pop
jbe
int3
in
into
jge
daa
gs
and
mov
aad
pop
lock
test
mov
or
add
jg
adc
xchg
test
and
aam
mov
(bad)
je
in
jecxz
or
scas
adc
gs
jl
icebp
push
sbb
outs
sub
adc
popa
mov
cmp
jb
out
cli
and
les
push
movs
inc
mov
fstp
mov
ins
fcmovnbe
in
repz
adc
movs
mov
xchg
popa
xor
cmp
out
(bad)
jmp
jb
and
mov
bound
sbb
cli
test
mov
and
xor
push
cmp
xchg
das
xchg
ror
enter
sub
xchg
cmp
push
sub
pop
dec
into
fld
mov
dec
adc
xor
xor
dec
inc
pop
fidivr
mov
push
add
push
cdq
div
in
push
pop
xlat
cs
outs
es
xor
icebp
repnz
mov
cmp
pop
(bad)
bound
mov
loope
mov
(bad)
and
dec
call
jmp
xchg
pop
adc
fstp
enter
daa
out
ss
jmp
xchg
aaa
loope
aad
inc
daa
ins
frstor
out
popa
xchg
xchg
out
fimul
stc
lock
jmp
and
fistp
jne
mov
lods
fnsave
mov
imul
push
les
inc
in
les
into
and
push
(bad)
pushf
mov
jecxz
xor
aad
pop
aad
loop
push
ret
movs
fs
ret
mov
fidiv
or
inc
xchg
push
sub
aad
or
cmp
add
lea
xchg
cmps
imul
add
xor
out
dec
repz
stc
mov
pop
ss
and
cmps
xor
loope
cdq
add
cmp
loope
ins
jbe
test
repz
cmp
push
inc
sub
aas
jnp
xor
pop
out
sub
pop
dec
fadd
mov
or
outs
pop
movs
add
xor
dec
inc
push
xor
test
jle
jecxz
push
jmp
or
bound
xchg
retf
jo
xor
shl
xchg
div
mov
scas
mov
test
int
xchg
in
retf
cmps
out
inc
bound
nop
or
outs
int3
xchg
clc
es
sti
xchg
rcr
enter
pop
in
nop
xlat
mov
push
push
push
out
cdq
mov
push
ja
pushf
gs
dec
adc
jmp
sub
cmp
fiadd
sbb
xor
test
sub
cld
retf
lahf
cld
pop
sbb
xor
mov
push
(bad)
out
sub
pop
outs
adc
inc
shl
dec
ins
aaa
cs
cmp
int
mov
int3
fsub
test
push
mov
fdiv
pop
aam
daa
ret
cmp
sub
cdq
nop
mov
movs
dec
push
xchg
fstp
call
adc
movs
test
jge
mov
xchg
ss
shl
in
sar
push
and
(bad)
out
adc
mov
sbb
mov
icebp
(bad)
lahf
mov
adc
daa
mov
(bad)
out
inc
test
and
push
test
leave
repz
jmp
and
mov
xchg
dec
js
mov
fisttp
adc
dec
jl
gs
jae
fwait
test
cwde
fdiv
inc
or
es
mov
xchg
xchg
shl
mov
daa
jmp
add
repz
inc
sbb
(bad)
repnz
jmp
add
and
imul
push
inc
int3
jno
das
sbb
hlt
pop
adc
jnp
scas
jmp
inc
adc
mov
mov
fist
jg
mov
mov
jns
xchg
inc
pop
test
in
xchg
dec
mov
test
cmp
js
push
mov
lea
xchg
xor
repnz
xchg
(bad)
jnp
data16
sbb
sbb
or
push
ret
cmp
push
test
cmp
nop
les
jmp
or
sbb
aam
mov
xchg
mov
sbb
cmp
ss
pop
pop
(bad)
aas
pop
fsubr
xchg
mov
jge
mov
adc
cmp
ret
arpl
std
hlt
hlt
repz
lahf
adc
add
call
mov
sub
ss
push
test
xchg
inc
test
sub
out
cmps
xor
xchg
mov
jae
call
adc
fmul
add
cmp
and
leave
push
push
cmp
fsub
loope
iret
repnz
inc
sbb
ins
fnstsw
xlat
ret
sbb
cmps
cwde
cwde
jmp
push
push
(bad)
out
cs
je
xor
mov
ds
pop
pop
ret
or
nop
aas
je
mov
daa
or
jne
jno
add
mov
cld
or
inc
jno
xchg
enter
mov
not
pop
cmp
inc
mov
push
ror
call
popf
les
imul
push
arpl
sub
aas
rcr
enter
pop
ds
out
icebp
test
mov
xor
dec
into
(bad)
aad
retf
scas
fistp
cli
push
mov
jecxz
lods
in
cmp
push
fldcw
dec
cdq
imul
(bad)
or
pop
loopne
ins
mov
adc
lods
sub
and
js
stc
push
mov
mov
outs
movs
pop
leave
add
and
sub
mov
shl
or
mov
pop
clc
jge
fisub
sub
sbb
mov
retf
es
outs
out
sahf
fwait
push
mov
xchg
pop
add
es
nop
fidivr
fsubr
fsubrp
pusha
jns
cmps
push
pop
mov
loopne
je
cmp
outs
xor
dec
mov
xchg
pop
mov
test
dec
lods
xchg
imul
dec
jne
int
mov
push
sbb
xchg
xor
or
(bad)
mov
cmps
ds
aaa
cmp
(bad)
or
pop
pop
or
or
cld
out
in
sahf
adc
sub
out
jle
hlt
adc
sbb
cli
jno
test
or
(bad)
sbb
cwde
xor
imul
pop
mov
pushf
ja
pop
mov
fld
add
adc
(bad)
ror
push
cwde
sbb
lods
cmp
inc
int
outs
dec
es
pop
rol
mov
jb
rol
inc
test
je
mov
lods
or
xchg
jmp
xchg
jae
call
(bad)
mov
repnz
cmp
jnp
and
hlt
inc
xor
and
int3
fwait
inc
add
scas
jns
retf
add
aaa
retf
in
outs
shl
xchg
push
jmp
mov
icebp
sub
mov
loopne
push
in
xor
aam
sbb
mov
xchg
ret
pop
fs
cmp
inc
popa
push
cmp
jecxz
inc
cmc
sub
xchg
imul
jne
push
mov
jae
(bad)
xchg
cmps
fcom
not
(bad)
out
xchg
outs
test
lea
or
mov
xor
jp
jns
ins
ja
jo
sub
clc
mov
add
out
imul
arpl
shl
pop
imul
mov
mov
js
sub
dec
enter
push
or
add
mov
aam
jae
scas
inc
sahf
pusha
ins
aam
arpl
inc
aam
xor
pushf
jbe
or
mov
sar
iret
ficomp
adc
dec
out
aad
jo
imul
push
xchg
ficomp
scas
inc
cmps
xchg
cdq
cs
push
mov
cmc
and
xchg
pop
mov
adc
pop
retf
aas
fs
lahf
pop
loop
pop
mov
xchg
loope
push
rcr
or
pop
ja
add
and
int
lds
mov
mov
sti
ins
push
pushf
or
fbstp
mov
in
hlt
pop
adc
dec
outs
(bad)
enter
inc
aam
xlat
scas
or
aam
push
add
jp
loope
shl
xor
sub
or
nop
mov
shl
or
enter
and
jns
jle
in
mov
jbe
mov
stc
mov
out
sbb
nop
imul
clc
cmp
lods
jmp
ds
idiv
mov
bnd
mov
ror
jo
es
and
jmp
xor
pop
leave
lea
mov
out
ja
nop
xor
cli
push
xor
fsubr
aaa
bnd
(bad)
aas
cld
xchg
stos
mov
outs
sub
mov
inc
fbld
cmp
pop
out
pop
movs
in
mov
neg
inc
mov
push
leave
mov
jo
imul
loope
xchg
add
repz
frstor
ja
addr16
pop
xchg
pop
out
adc
dec
cmp
scas
es
fdiv
neg
dec
pop
popf
pusha
and
pop
mov
lea
leave
pop
sbb
and
ud0
pop
dec
adc
in
inc
clc
jae
in
xchg
jmp
jl
pop
xchg
jecxz
imul
jae
pop
add
push
jnp
jno
add
pop
loopne
aam
in
int3
js
pushf
dec
xor
pop
fld
sbb
jnp
popa
imul
mov
loop
push
mov
adc
mov
shl
outs
iret
mov
cs
iret
push
mov
or
sbb
fcmovnbe
les
push
in
jmp
cwde
push
xor
sbb
push
outs
dec
jo
in
jns
lahf
(bad)
icebp
or
sub
sub
cdq
cmps
daa
hlt
push
rcl
pcmpeqb
arpl
out
push
ds
lahf
sub
(bad)
sbb
xor
push
pop
inc
or
pop
fdivr
fucomp
(bad)
mov
dec
sub
dec
outs
push
and
sub
adc
sbb
mov
test
xor
test
sub
jne
adc
jmp
jle
push
ja
movs
push
ins
cmps
inc
loop
cmp
loopne
pop
stc
mov
dec
int3
out
fisttp
cmp
jbe
or
(bad)
sub
cwde
into
inc
aaa
mov
mov
mov
inc
cmp
inc
iret
push
mov
test
out
pop
and
imul
fxch
adc
div
ffree
or
xchg
iret
xchg
repnz
hlt
xor
mov
add
loop
in
scas
sbb
fstp
jge
movs
adc
les
pushf
clc
add
lods
dec
pop
add
aam
cmp
aaa
clc
movs
ss
fistp
mov
in
cmps
add
mov
rcr
or
(bad)
sahf
ss
dec
clc
icebp
pop
cmc
sbb
or
lds
and
stos
bound
sub
stos
jne
mov
dec
sar
sbb
leave
ds
push
pop
clc
xchg
or
and
dec
mov
int3
les
shl
sub
xor
cdq
jnp
add
nop
out
xchg
mov
push
mov
mov
repz
sub
mov
or
nop
sbb
fisubr
mov
loopne
test
adc
sub
mov
(bad)
pop
sbb
mov
aaa
add
add
arpl
lea
jns
fs
lea
xlat
mov
sbb
cmp
push
inc
cmp
pushf
sub
stos
jbe
rcl
sti
and
scas
push
mov
ret
shr
shld
sar
cmp
stc
jecxz
movs
jbe
imul
loope
jge
push
mov
sub
push
out
adc
fisub
int3
xchg
dec
or
push
cmp
jg
add
aad
xchg
push
inc
sub
cmp
(bad)
xchg
mov
mov
dec
jae
idiv
or
mov
or
lds
lods
in
aam
out
mov
lea
lea
push
out
adc
fadd
scas
or
xchg
dec
pop
fwait
or
(bad)
dec
out
xor
dec
push
in
mov
cmp
jl
adc
shl
jl
(bad)
retf
mov
(bad)
out
pop
lea
pop
and
cmps
xor
rcl
rcr
push
mov
repz
jbe
or
retf
and
adc
jl
rcr
and
js
ficom
(bad)
icebp
push
pop
sbb
cmps
std
cmp
int
ret
cmps
inc
dec
mov
or
jns
out
mov
popf
adc
lods
mov
cmp
mov
and
(bad)
stc
adc
adc
inc
outs
nop
push
and
inc
jbe
rcr
(bad)
fmul
fistp
pop
pushf
loop
(bad)
cwde
jmp
or
(bad)
out
lock
aas
jge
jg
push
push
(bad)
cmp
cs
pushf
cmp
inc
fidiv
psadbw
ja
push
mov
fsubr
pusha
pop
xchg
aaa
dec
popa
bt
mov
adc
mov
scas
push
xlat
jmp
and
mov
xlat
jp
in
dec
adc
mov
jno
mov
in
stos
in
fs
cld
pop
jo
xchg
sub
ins
jmp
cdq
jmp
and
mov
dec
adc
out
adc
cwde
hlt
data16
dec
retf
xchg
cmp
sti
mov
push
push
movs
stos
jecxz
jne
mov
jbe
cmp
mov
test
pop
xor
ret
rcl
adc
dec
xor
push
(bad)
mov
and
mov
add
dec
fnsave
mov
push
(bad)
lods
cmp
cmps
mov
scas
sub
push
jb
jo
test
int3
outs
jns
push
jl
das
pop
enter
mov
cmps
or
adc
fisub
fist
fs
pop
fwait
aad
ins
aaa
cmp
loope
jp
lahf
xchg
in
lahf
dec
(bad)
push
mov
and
add
test
(bad)
movs
adc
test
xchg
imul
adc
add
or
shr
xor
ins
sti
or
mov
or
fstp
mov
data16
adc
out
jmp
adc
sub
neg
xchg
shl
pop
mov
xchg
mov
or
lea
or
pushf
hlt
(bad)
sbb
les
cmp
shl
fiadd
inc
pop
out
in
test
dec
add
jns
popf
jb
stc
popa
mov
push
sub
out
lock
jle
js
or
fisttp
mov
repnz
fstp
push
lods
stc
outs
retf
fistp
sbb
mov
in
push
mov
cdq
jmp
in
inc
aaa
pop
jmp
les
mov
or
pop
scas
scas
push
adc
mov
pop
inc
sbb
jnp
inc
mov
inc
sub
sbb
popa
adc
and
mov
jbe
dec
int3
dec
pop
enter
xor
xlat
fldcw
(bad)
in
inc
mov
ficomp
cli
ins
adc
inc
add
adc
lods
pushf
retfw
mov
jo
lods
test
pushf
lods
mov
lods
cmovb
mov
adc
sub
ja
in
frstor
(bad)
jb
jns
jnp
out
cdq
fistp
les
les
dec
test
inc
cdq
sub
fild
mov
loop
imul
fimul
xchg
fwait
inc
pop
and
jne
push
add
ja
(bad)
push
mov
hlt
rol
jge
mov
rcl
dec
and
stos
inc
pop
es
xlat
outs
and
xor
in
xor
outs
jae
xchg
pop
ins
or
js
mov
retf
stc
popa
mov
push
xor
addr16
sub
jle
arpl
adc
outs
pop
bound
(bad)
fnstsw
pop
xchg
push
cmp
push
inc
loopne
aam
aam
inc
mov
and
adc
js
ins
leave
test
stc
fcomp
mov
ret
stc
fst
jmp
ret
stos
xchg
movs
jns
jnp
xchg
mov
and
fbld
cwde
push
mov
jno
add
jge
add
add
xchg
int3
retf
fdiv
pop
or
cmps
lahf
bound
xchg
sbb
or
dec
mov
fadd
call
call
inc
clc
push
(bad)
dec
dec
push
out
cdq
xchg
iret
add
mov
xor
sub
or
out
push
mov
inc
into
xchg
sbb
mov
mov
or
sbb
imul
cld
(bad)
jae
xlat
aam
les
add
dec
jle
fsubp
in
popf
out
repnz
arpl
mov
jg
sub
xchg
xchg
fild
cdq
call
jo
xchg
pusha
add
mov
out
call
sbb
xlat
xchg
add
xchg
add
nop
adc
mov
dec
movq
sub
add
into
adc
mov
mov
test
in
shr
or
push
test
dec
jl
daa
cmp
daa
cmp
xor
ins
in
mov
mov
movs
pop
xchg
cmp
sbb
cmp
ins
cmps
fst
pop
jmp
iret
adc
and
sub
sub
imul
inc
std
call
ret
mov
and
jl
or
pop
stc
sbb
(bad)
inc
bound
push
mov
cli
mov
mov
pushf
sar
add
and
xchg
mov
jp
mov
sbb
mov
jmp
mov
mov
xchg
(bad)
xchg
stos
retf
mov
or
xchg
xchg
addr16
adc
retf
mov
push
or
sti
xchg
cmps
inc
jb
pop
shl
add
dec
out
mov
mov
cmp
and
test
repnz
mov
adc
add
or
and
sbb
jecxz
imul
lods
out
js
or
bound
xor
in
xor
rcr
je
mov
scas
dec
mov
mov
xor
mov
jp
dec
fstp
fdivr
cmps
cmp
leave
xor
fwait
hlt
inc
imul
cmp
(bad)
mov
arpl
and
cld
retf
out
das
outs
enter
xchg
sti
in
sbb
mov
inc
xor
sbb
call
(bad)
ins
scas
popa
mov
je
push
aam
cli
push
rol
jmp
jb
inc
shl
or
jecxz
gs
and
jnp
fdiv
mov
mov
cmps
(bad)
clc
popa
mov
push
out
dec
adc
dec
std
popa
in
cld
cwde
jbe
inc
or
ret
adc
or
in
(bad)
xchg
and
repnz
addr16
(bad)
mov
or
clc
inc
fistp
pop
ins
and
inc
or
xchg
pusha
mov
pushf
fstp
cmp
sbb
mov
in
rcr
fwait
rol
jne
mov
push
add
ficomp
and
push
cmp
cmps
cmp
ins
pop
mov
out
test
dec
bound
jb
and
ss
out
cmps
iret
cli
lods
mov
or
xor
sar
xor
jg
js
dec
jmp
loope
fs
cdq
scas
mov
push
mov
cmp
stos
mov
les
not
mov
retf
scas
sub
push
inc
ds
xchg
je
pop
xor
stos
jle
or
push
outs
aam
dec
in
in
shl
test
inc
pop
repz
in
lahf
cli
push
mov
add
in
aas
inc
clc
sub
mov
or
shl
(bad)
xchg
jl
sar
or
repnz
jne
jno
pop
scas
ficomp
push
out
pop
or
sbb
mov
mov
and
mov
hlt
push
sub
jecxz
inc
xchg
dec
push
push
inc
retf
das
inc
xor
daa
push
mov
and
xchg
repnz
xchg
mov
int
sub
iret
inc
rcl
in
xor
mov
inc
lods
(bad)
xchg
mov
mov
cs
push
mov
cmc
dec
cmc
and
mov
data16
es
imul
xlat
xchg
add
sub
icebp
mov
ins
rcl
lds
test
mov
sbb
scas
cmp
mov
dec
dec
test
mov
call
mov
retf
or
aas
cdq
pop
popf
aas
cdq
inc
rcl
cmps
fild
mov
daa
(bad)
cmp
xor
mov
mov
aad
xchg
fcom
push
push
pop
in
pop
mov
outs
sub
int
ins
stos
ins
pop
push
add
popa
repz
dec
in
jno
mov
xchg
xor
loop
aaa
fdivr
les
iret
cdq
leave
out
nop
shl
cmps
dec
sar
fild
push
sub
loopne
pushf
dec
popf
fwait
es
movs
sub
fstp
xor
mov
shl
cmps
xor
hlt
sub
shl
mov
cmps
sar
(bad)
mov
sub
imul
and
jo
add
or
xor
retf
stos
iret
or
dec
jno
stos
dec
push
call
mov
fs
cld
cli
sub
add
loope
cwde
pop
ja
and
mov
cli
pop
test
fisttp
popf
dec
mov
xchg
or
jmp
div
or
sub
and
sbb
inc
add
xchg
mov
dec
xchg
pop
out
fst
push
ins
fwait
loope
sbb
and
sbb
in
jmp
(bad)
sar
sub
pop
sub
pop
cs
and
cwde
mov
in
fist
pop
jmp
adc
ja
addr16
mov
xchg
repnz
dec
mov
xlat
dec
shl
cmps
xchg
xor
fwait
cld
in
jge
mov
sub
dec
add
test
scas
inc
or
imul
arpl
mov
aas
ret
aad
dec
inc
js
fisttp
into
sbb
adc
nop
cmps
push
sbb
xor
inc
js
add
or
mov
lds
cmp
aad
inc
lock
push
jno
mov
mov
or
sar
lds
rol
pop
add
cmp
mov
xor
sub
out
mov
test
aas
popa
jle
push
cmp
inc
adc
mov
mov
inc
pop
lahf
bound
popa
sub
fidivr
push
outs
mov
loope
jns
int3
test
aas
daa
jg
jmp
dec
and
mov
mov
movs
or
cli
inc
dec
ffree
retf
scas
jp
int
cmps
add
sub
mov
mov
es
mov
sub
xchg
daa
arpl
cmc
call
inc
cmp
retf
sub
cmp
mul
inc
add
jp
das
pop
sbb
mov
xchg
xchg
sub
sbb
push
add
pop
mov
mov
inc
push
sti
leave
sub
test
neg
test
daa
mov
xor
das
jl
dec
pop
adc
stos
xor
cmp
lds
iret
scas
cmp
es
fistp
sbb
mov
mov
mov
enter
es
fld
fisttp
stos
mov
mov
adc
mov
mov
add
fisubr
or
sub
bound
add
cmp
mov
mov
inc
inc
ins
repnz
pop
shl
dec
push
push
test
gs
rcl
and
adc
ja
call
add
mov
loop
jg
in
outs
ffreep
fcom
lods
inc
cmp
xchg
or
stc
xor
cmovno
ret
nop
aam
fiadd
dec
sbb
cmp
xlat
push
xchg
jmp
dec
jmp
push
sbb
cmps
pop
xchg
cdq
js
jne
cmp
outs
loop
pop
or
xor
nop
outs
mov
js
cwde
stc
pop
ret
pop
ret
xlat
ds
jnp
das
push
adc
neg
cmp
mov
mov
pushf
dec
imul
pop
jecxz
ins
xchg
stos
mov
jae
xor
cmp
in
xor
repz
jecxz
shl
push
pop
paddsw
pop
mov
or
dec
std
ror
cmp
stos
and
xor
mov
int
das
enter
pusha
mov
mov
call
lock
adc
jne
add
or
mov
dec
jmp
mov
dec
nop
xchg
sbb
outs
jle
xor
stc
imul
and
movs
not
aaa
pop
and
aaa
push
je
mov
mov
sbb
mov
(bad)
clc
fisubr
mov
sbb
push
ret
lods
(bad)
stos
test
les
ror
cmp
mov
inc
cwde
push
push
push
lfs
ficomp
mov
cdq
jle
dec
je
ror
mov
sub
repz
inc
loopne
and
jne
add
xchg
outs
pusha
sbb
mov
daa
inc
out
loop
mov
sbb
in
rol
int
adc
stos
adc
aad
and
mov
jno
movq
pop
pop
cmp
cld
ds
xor
add
cli
(bad)
pop
jo
fwait
jmp
add
scas
sub
sbb
jae
add
(bad)
mov
bound
xchg
jg
jo
mov
jmp
inc
movs
or
call
test
mov
cdq
jb
inc
sti
les
cmp
cmps
sahf
mov
xor
fwait
aam
jne
pop
loopne
out
arpl
mov
and
cmp
out
scas
mov
into
jno
movq
lods
or
dec
lods
(bad)
es
mov
or
push
ret
popa
sub
(bad)
mov
xchg
cmp
dec
sbb
fxch
les
int
dec
jp
dec
sub
sub
mov
inc
xchg
xor
nop
inc
popf
mov
int
test
xchg
lds
xor
mov
push
dec
rcl
xor
push
retf
cmp
xlat
shr
xor
ss
repz
push
mov
and
or
cdq
or
lods
mov
and
push
mov
xchg
daa
shl
fistp
aad
dec
mov
pop
sub
and
loop
outs
inc
std
lds
out
gs
pop
and
fld
cmp
pusha
sbb
js
test
call
outs
mov
jns
(bad)
mov
adc
mov
mov
push
push
jb
fist
movs
outs
pop
lods
sti
pop
movs
js
call
movs
sbb
loopne
or
push
scas
in
mov
fsubr
std
cs
int3
add
mov
ds
inc
mov
int
fist
daa
cmp
lods
jl
cwde
sar
lahf
data16
push
out
ret
retf
dec
sbb
pop
sbb
add
rol
xor
imul
imul
adc
and
into
lock
mov
mov
push
push
in
inc
stos
ret
cs
xchg
(bad)
cmp
pop
hlt
cmp
push
or
dec
dec
into
inc
js
not
sub
ins
dec
in
fs
outs
lahf
push
cli
out
or
jg
cmp
loopne
in
jl
cli
or
mov
outs
rcr
push
ins
push
mov
mov
scas
(bad)
and
add
mov
into
ins
lahf
leave
hlt
pop
jae
loop
leave
aas
xchg
ror
mov
cwde
or
push
addr16
fidiv
(bad)
or
imul
mov
xchg
or
and
aaa
test
int
in
adc
inc
jmp
enter
icebp
or
stos
dec
test
cs
fisttp
dec
mov
sub
(bad)
(bad)
in
jmp
push
cs
push
shr
sbb
mov
xchg
mul
imul
xchg
retf
repnz
add
mov
pop
rcl
loop
fist
nop
sar
in
mov
or
outs
mov
mov
shr
adc
mov
mov
xlat
jp
sub
lds
cmps
push
jl
mov
mov
adc
inc
xchg
cmp
mov
jo
sbb
jae
(bad)
cs
sbb
or
dec
or
and
pop
outs
out
push
push
scas
mov
scas
xchg
test
pop
mov
sub
and
mov
in
xor
cwde
mov
xchg
cmp
mov
dec
inc
not
iret
fnstenv
std
adc
jl
jne
in
stos
inc
addr16
xor
sahf
(bad)
push
and
data16
mov
adc
rol
adc
aas
int3
mov
faddp
inc
push
push
ins
jecxz
mov
mov
inc
jns
fstp
jns
cmp
ror
pop
fnstenv
xchg
imul
fs
jge
std
ja
mov
(bad)
xor
cmp
push
int3
mov
sub
rcr
xor
hlt
dec
mov
add
pop
sbb
lock
outs
aad
retf
adc
popf
push
sub
jle
cmp
jbe
sub
pop
add
ss
jecxz
lock
inc
push
daa
lea
js
jg
ins
(bad)
push
xor
mov
cmp
dec
add
inc
jb
jmp
ret
xor
push
xor
cmps
js
add
popa
fwait
cmps
jo
cdq
loop
lahf
inc
push
cmps
or
and
and
cmp
jp
lods
(bad)
mov
jecxz
scas
add
mov
arpl
adc
and
inc
push
mov
push
ss
fucomip
scas
out
mov
and
fisttp
inc
cmp
cmp
mov
inc
aaa
test
pop
xor
push
ins
std
pushf
ret
stc
stos
jge
dec
xchg
imul
add
push
clc
out
call
mov
fiadd
cmp
xor
and
mov
mov
lock
out
adc
loope
xlat
sar
jno
mov
mov
repz
mov
and
mov
pop
ret
adc
and
mov
fstp
xor
xchg
imul
cmp
pop
pop
cmps
(bad)
inc
inc
pop
retf
mov
ins
sbb
ins
call
inc
cwde
or
hlt
cli
jns
mov
mov
bound
dec
lods
xchg
out
call
sti
(bad)
sub
js
adc
add
out
leave
add
jmp
sub
sbb
inc
call
mov
cmp
mov
add
call
shr
out
lods
es
(bad)
neg
sub
mov
cli
aaa
stos
popa
adc
cmp
push
sahf
into
cdq
scas
out
rol
shl
mov
sbb
daa
mov
xchg
mov
mov
pop
or
in
xor
je
pop
jnp
cmp
dec
mov
sub
dec
mov
imul
enter
shl
xchg
pop
sti
popa
test
cmp
jns
pusha
out
adc
jmp
fbstp
js
(bad)
daa
xor
add
test
aad
pop
in
dec
push
sahf
repz
xchg
jecxz
stc
lahf
mov
dec
nop
iret
inc
call
mov
cmps
lock
jge
mov
dec
inc
or
pushf
push
push
jmp
movs
movs
push
and
test
enter
push
call
loope
in
jecxz
test
push
push
ja
push
cmp
fwait
sub
dec
xchg
aas
push
dec
adc
cli
in
mov
lds
inc
pop
fwait
push
test
ret
mov
pusha
push
push
jns
test
mov
cdq
mov
repz
mov
jp
xchg
xrelease
test
and
and
xor
mov
daa
ror
adc
daa
aas
xor
sahf
ds
rcr
repnz
and
add
dec
mov
or
data16
aas
and
out
mov
mov
scas
ror
sub
ds
xor
adc
push
pop
and
test
sbb
rol
leave
lahf
rol
push
sbb
jns
xchg
jne
fstp
test
fdivr
xchg
sub
xchg
sti
pop
cs
out
outs
inc
daa
or
jecxz
ins
test
pushf
pop
mov
push
retf
loop
sbb
jmp
xchg
icebp
rcr
cmps
jmp
xchg
ins
mov
xchg
mov
or
jo
std
lock
jmp
xchg
push
into
movs
in
dec
xchg
out
xchg
mov
jge
mov
sti
(bad)
xchg
dec
pop
adc
jns
xor
push
xchg
call
or
add
adc
pushf
in
mov
pop
gs
enter
dec
pop
(bad)
add
ds
xor
clc
and
pop
test
mov
stos
mov
imul
or
ss
mov
out
out
dec
call
jmp
test
out
leave
mov
clc
ds
movs
lock
mul
mov
movaps
add
add
and
in
int
cmps
mov
js
int3
icebp
loope
cld
data16
cmp
out
jecxz
(bad)
into
iret
(bad)
popa
xor
aas
scas
cmp
les
mov
stos
gs
push
hlt
outs
xchg
bound
sti
or
leave
fbld
(bad)
push
mov
pmuludq
sbb
and
dec
adc
sbb
cmps
out
test
pop
cmp
into
popf
sub
mov
push
add
mov
les
mov
pop
fsubr
dec
into
add
cmp
aam
repnz
(bad)
sahf
inc
sbb
loope
scas
retf
jmp
mov
lds
clc
jmp
cmps
mov
nop
test
cmp
add
mov
mov
adc
fst
or
call
cs
or
call
outs
or
push
fistp
jle
jmp
add
hlt
adc
sub
stos
stos
dec
add
cmp
and
(bad)
ss
lods
push
pop
jb
jp
push
and
xor
iret
mov
lds
inc
(bad)
sbb
arpl
in
lea
adc
mov
add
adc
adc
xor
ss
lods
or
or
lea
sub
inc
adc
xor
and
loopne
dec
lods
sbb
xor
mov
sub
das
mov
and
jmp
cmp
add
or
sub
mov
pop
adc
sar
int
(bad)
iret
jbe
fadd
mov
dec
int
nop
cmp
cmp
inc
pop
lods
in
rcr
push
push
cld
inc
pop
or
mov
push
repz
xchg
and
cmp
xor
or
xlat
xlat
or
pop
aad
xor
jnp
inc
mov
xor
push
mov
mov
retf
add
mov
adc
mov
dec
retf
adc
loope
jmp
mov
mov
adc
xor
leave
cli
push
pop
adc
ds
icebp
test
xchg
sti
jmp
hlt
jp
mov
shr
jg
push
retf
push
dec
inc
adc
and
aam
push
call
and
out
mov
or
push
sbb
mov
clc
or
lods
fmul
(bad)
in
jns
test
cmp
xor
cmp
stc
cld
sbb
retf
inc
hlt
fwait
ret
add
cmp
mov
mov
fucomi
movs
mov
mov
mov
push
cmp
lock
or
inc
xchg
jle
dec
cmp
jle
(bad)
lods
sbb
(bad)
ds
inc
mov
push
dec
call
(bad)
(bad)
mov
push
dec
mov
movs
adc
loopne
sub
mov
jge
sbb
jae
scas
sbb
rol
adc
repnz
stos
movs
stos
in
push
adc
arpl
lods
and
jae
push
lahf
lea
jmp
inc
xor
pop
pop
add
repnz
lods
fcmovnu
push
outs
call
(bad)
pop
sahf
fisub
out
or
xchg
scas
xchg
dec
and
adc
stc
xor
mov
mov
jecxz
mov
shl
mov
dec
mov
mov
movs
retf
jg
jns
pop
es
outs
jge
cli
pop
je
xor
push
mov
into
call
xchg
fadd
dec
mov
sar
(bad)
xor
es
mov
imul
cli
or
add
inc
jg
dec
mov
lock
idiv
sbb
add
jo
out
gs
and
fistp
mov
int3
jmp
cld
push
mov
das
loop
add
outs
inc
rcl
jle
shl
add
pop
enter
(bad)
cld
bound
xor
ja
icebp
retf
pop
mov
repz
jp
or
fstp
jmp
lock
fs
jmp
mov
ja
cmp
scas
jnp
fwait
sar
mov
rcl
shl
leave
mov
outs
loopne
jmp
jno
cdq
ins
adc
stos
mov
dec
ret
sub
mov
or
leave
xchg
into
hlt
jae
aam
inc
mov
sti
scas
cmc
jno
push
enter
scas
mov
or
in
imul
ficom
xor
jb
add
rcr
scas
xor
in
ret
out
mov
pop
xchg
aaa
in
xchg
sahf
mov
test
xchg
ja
or
nop
inc
(bad)
jno
sbb
dec
pop
ins
xor
pusha
sbb
xchg
(bad)
daa
jp
repnz
bound
mov
cmps
xchg
jmp
jnp
sbb
js
(bad)
(bad)
adc
sub
or
mov
hlt
loope
push
and
jge
mov
fdiv
add
push
sbb
dec
add
and
sub
dec
push
stos
fistp
es
popf
add
aas
lahf
(bad)
dec
jno
ret
bound
pop
mov
popa
dec
(bad)
(bad)
jp
jbe
stos
xor
jle
arpl
daa
(bad)
ja
retf
jns
gs
add
dec
sbb
sbb
sub
les
mov
xor
loopne
iret
mov
xchg
cmp
mov
fwait
and
or
push
stos
pop
lods
add
aas
call
pop
xor
into
and
loopne
dec
sub
pop
cmp
popf
je
and
jnp
cmp
sub
adc
fsub
pop
int3
scas
mov
mov
bnd
aas
pusha
mov
out
pop
dec
cmps
adc
push
jbe
pop
xor
inc
inc
push
jmp
in
mov
fnstcw
xchg
cmp
or
out
imul
mov
or
les
push
test
adc
stos
push
imul
add
into
xor
idiv
add
xchg
dec
js
mov
icebp
push
xchg
icebp
call
mov
in
bound
movs
(bad)
int3
imul
arpl
bound
loopne
outs
inc
jg
dec
pop
push
sub
dec
mov
pop
movs
pop
or
in
dec
xor
adc
pop
lods
retf
push
xchg
hlt
or
mov
cmp
pop
xchg
jmp
iret
jmp
dec
test
xchg
int
mov
mov
sahf
pop
das
pop
xchg
xchg
jg
add
retf
sub
mov
outs
fcomp
hlt
sub
pop
xchg
aad
repnz
dec
sbb
cmp
sbb
popf
ja
xchg
inc
imul
movs
inc
jae
paddsb
adc
and
ds
jecxz
mov
inc
sbb
in
pushf
cmp
movs
cmp
jle
inc
out
leave
std
xchg
or
cmp
(bad)
(bad)
mov
retf
and
aad
pusha
fstp
add
popa
pop
pop
xchg
sbb
mov
mov
repnz
and
daa
jmp
std
xor
lods
sub
imul
sbb
inc
dec
ror
mov
mov
push
js
(bad)
gs
fbld
add
add
push
xlat
rcl
popa
fdivr
ss
xchg
(bad)
dec
jns
inc
pop
aaa
jle
pushf
or
lock
mov
adc
mov
xor
vmulss
ss
call
dec
int
jg
jg
loopne
in
jo
cmp
mov
mov
or
movs
jnp
xor
mov
mov
addr16
or
aas
(bad)
fist
retf
or
jmp
sbb
push
shr
ins
test
xor
in
and
(bad)
pusha
mov
test
push
fnsave
pop
repz
jmp
xor
add
(bad)
not
stos
dec
aaa
cmp
sbb
cli
pop
call
js
pop
popf
push
mov
sub
stos
and
pushf
cmp
stc
dec
shr
ja
xchg
dec
cmp
or
shr
mov
dec
pop
fld
inc
ja
adc
mov
xchg
pop
outs
xor
inc
fstp
(bad)
ins
(bad)
xor
fst
nop
cmp
in
rcr
cmp
shl
outs
fld
aas
inc
aam
jmp
(bad)
shl
jnp
cmp
ficom
mov
pop
xor
call
mov
inc
dec
jge
dec
les
push
clc
xor
mov
(bad)
mov
packsswb
dec
jg
add
xor
push
mov
dec
push
ss
shl
in
stc
jne
imul
dec
lea
call
mov
push
into
dec
fsubr
stos
pop
push
pop
pop
mov
xchg
jmp
xor
das
dec
push
pop
mov
outs
push
push
xchg
push
add
push
mov
and
inc
mov
popf
leave
sbb
fidivr
cmps
fadd
xlat
(bad)
push
lods
enter
cmp
pop
popf
mov
mov
loop
or
icebp
add
ret
iret
add
sbb
dec
sub
adc
adc
pop
inc
push
add
clc
mov
dec
ds
int
inc
lods
lods
(bad)
in
dec
sahf
mov
call
adc
(bad)
fld
pause
add
retf
mov
push
mov
ss
dec
mov
push
aas
mov
jg
sub
push
xchg
and
adc
out
das
iret
aas
xchg
or
cld
cld
xchg
xchg
sbb
sahf
cmp
add
cmp
sbb
mov
pop
jbe
sub
xor
or
das
adc
lea
aad
lds
adc
lea
out
and
jns
ret
xchg
xchg
js
scas
outs
inc
test
or
xor
dec
icebp
popa
jns
xlat
mov
rol
xchg
push
mov
dec
shl
cmp
ror
jmp
xchg
add
shr
push
mov
pop
stc
mov
icebp
scas
jp
jmp
jo
or
and
cmp
mov
push
mov
ret
cmc
bound
mov
dec
jne
cmps
sub
push
sub
(bad)
jg
fisub
cmp
aad
das
ins
xchg
push
add
lock
bound
lods
add
sbb
call
clc
sbb
mov
shl
test
mov
jbe
cwde
and
sbb
into
and
test
sahf
jecxz
mov
repnz
mov
push
stc
push
out
call
dec
(bad)
movs
push
cmp
and
push
aam
mov
xlat
or
xchg
push
sub
shl
inc
test
mov
push
inc
or
es
pop
jecxz
out
cmp
mov
movs
mov
pop
push
into
pop
xchg
mov
xor
outs
sahf
mov
stos
std
js
push
xor
js
(bad)
iret
cmc
sub
add
call
jl
push
pop
daa
mov
sub
mov
scas
mov
mov
fild
inc
into
iret
std
(bad)
ins
mov
jp
push
(bad)
jbe
fwait
push
fwait
cmps
aam
cmp
iret
out
mov
push
inc
add
cld
dec
in
pop
cmp
dec
imul
sbb
test
jb
xchg
push
push
int
test
movs
mov
std
inc
in
imul
push
test
or
aad
retf
pop
stc
test
std
push
out
test
add
adc
sbb
int
cmp
adc
fiadd
scas
daa
dec
dec
inc
cmp
shl
fistp
xor
aam
inc
xchg
fmul
xor
out
je
sub
mov
call
mov
std
cmp
lds
push
mov
sbb
cmp
loope
stos
jnp
cmp
mov
ret
inc
or
ret
mov
add
push
xchg
mov
dec
cmps
mov
mov
push
mov
pop
cs
push
out
pusha
daa
mov
in
mov
adc
jae
(bad)
cmp
clc
cmps
rcl
das
imul
sbb
dec
sub
jbe
jg
jmp
mov
enter
push
mov
inc
stc
(bad)
bound
jmp
js
shl
cmp
jmp
mov
dec
mov
xchg
or
ja
jecxz
mov
push
std
sub
sub
repnz
int
(bad)
dec
jmp
stc
sub
mov
or
enter
mov
cdq
out
pop
shr
cld
and
fisttp
sbb
inc
bound
add
idiv
inc
xor
xor
not
les
add
xchg
aad
int
bound
sub
or
dec
mov
sbb
aam
mov
ror
and
ficom
lods
push
pop
(bad)
push
idiv
in
shl
aam
int3
pop
lds
sbb
lds
push
jbe
or
add
addr16
cmp
sbb
(bad)
aas
aaa
add
movs
cmp
test
pop
in
push
xor
fwait
inc
fcomip
inc
arpl
xor
std
or
pop
ds
pop
and
push
jb
sbb
daa
fst
and
push
ja
pop
bswap
sti
xor
aad
xchg
mov
cmp
repnz
add
cmp
shl
sbb
add
iret
or
add
stos
pop
jb
jle
stos
retf
push
out
adc
mov
cs
aam
imul
fiadd
shr
loop
aas
inc
aad
xchg
xor
sbb
retf
jmp
enter
call
not
lds
ret
popa
movs
je
addr16
mov
iret
sbb
sbb
iret
xchg
sahf
aad
ret
cmps
jle
push
adc
test
ss
inc
cmps
mov
mov
xor
movs
mov
(bad)
(bad)
sub
pop
jl
pushf
jmp
adc
and
sahf
sbb
or
push
mov
les
aaa
ret
xor
jmp
pushf
adc
(bad)
dec
inc
dec
sbb
test
daa
xchg
sub
loope
fld
ss
inc
pushf
sbb
mov
adc
mov
cmp
xchg
pop
and
or
cmp
mov
xor
int
mov
xor
repnz
outs
or
loopne
cmp
mov
ds
retf
bound
mov
mov
or
ror
xchg
mov
test
cli
sub
lods
mov
push
(bad)
inc
adc
cs
mov
sub
les
and
or
in
shr
in
xchg
cwde
rcl
xchg
jmp
rcl
stos
xor
sub
addr16
repnz
fld
lock
clc
mov
lock
xchg
dec
inc
mov
pop
xor
repnz
cwde
aaa
mov
scas
or
xor
fwait
sahf
and
aad
(bad)
sti
cmps
fnstsw
push
sahf
mov
leave
xchg
int3
xchg
retf
in
pop
mov
sbb
(bad)
mov
movs
cmp
fisubr
pop
dec
cld
or
xor
inc
sahf
jns
pop
jmp
mov
push
push
sbb
mov
jmp
aad
cmc
loop
fld
enter
mov
sub
loopne
sahf
and
test
(bad)
lock
pop
sub
mov
test
dec
enter
add
or
shl
or
add
push
xor
push
call
sbb
pop
clc
cmp
sti
mov
and
jns
jno
inc
sbb
repnz
std
sbb
adc
xchg
pusha
les
mov
dec
pop
sbb
stos
inc
sbb
or
mov
popa
repnz
jmp
and
jnp
(bad)
aam
dec
cmp
sbb
ins
cmp
xchg
pop
push
jb
aam
xor
test
jnp
leave
jp
xor
call
xchg
and
clc
int3
scas
xchg
adc
pushf
ret
test
adc
jmp
loop
nop
pop
sbb
ins
pushf
ror
mov
push
jno
out
push
xchg
into
pop
stc
xchg
dec
ja
dec
mov
mov
dec
(bad)
push
pop
pop
jnp
out
aas
stos
adc
or
xchg
iret
xchg
mov
add
jno
and
xor
in
inc
imul
xor
ds
lahf
fwait
sbb
in
dec
push
gs
cs
sbb
mov
xor
popf
push
mov
hlt
fisub
sub
sub
add
je
rcr
sub
mov
retf
xor
add
fwait
push
push
add
enter
test
lods
jb
xchg
sbb
jnp
ja
dec
xchg
adc
xchg
vmwrite
jmp
nop
aas
jns
inc
push
jne
(bad)
in
mov
and
jno
lods
pushf
js
pop
test
lods
mov
je
sahf
ins
xchg
dec
in
jo
cmp
sbb
cmp
adc
push
loopne
(bad)
mov
inc
jp
sub
in
or
addr16
mov
fwait
cli
jmp
dec
push
sub
cwde
fsubrp
and
mov
mov
lock
lock
outs
adc
pusha
mov
pop
adc
pop
cmp
outs
in
push
dec
jo
jns
ror
mov
jnp
(bad)
push
dec
push
out
push
lahf
dec
inc
pop
pop
ss
xchg
or
xchg
jns
je
add
test
sti
outs
icebp
jb
cmp
lahf
shl
push
mov
test
inc
mov
or
cmp
hlt
inc
aas
lahf
dec
out
shl
aas
call
(bad)
(bad)
push
jmp
push
bound
cdq
mov
popf
out
push
out
adc
push
int3
cmp
mov
shr
jns
lea
arpl
push
sub
fst
movs
outs
pushf
sbb
dec
fild
xchg
mov
mov
dec
movs
ss
mov
sti
xchg
cmc
outs
je
in
xchg
aam
(bad)
pop
adc
sbb
int
push
cmp
clc
add
pop
mov
into
movs
es
add
ds
dec
or
mov
(bad)
push
pop
inc
popf
mov
addr16
add
in
rol
fsubp
mov
aaa
push
jmp
adc
sub
push
fcom
ret
jg
ja
loopne
repnz
jp
adc
rcl
test
lea
pop
ins
pushf
push
fisubr
push
aad
fwait
ror
fdivr
in
inc
mov
stc
mov
scas
jmp
xchg
mov
rcl
int
lock
shl
shr
std
dec
(bad)
mov
jmp
adc
sbb
fsub
push
sar
ins
out
dec
(bad)
in
retf
and
lods
test
push
ins
test
outs
fs
lods
gs
pop
adc
xchg
pop
mov
dec
out
fcom
clc
mov
adc
push
mov
jne
into
scas
push
mov
cdq
mov
jnp
ret
jne
or
and
cmovno
pop
aam
xchg
movs
fdivr
js
test
fdiv
or
cmc
cmp
xor
cmp
movs
das
pop
xchg
adc
fst
pop
enter
movs
adc
scas
cmp
mov
mov
mov
xor
inc
xor
es
jg
add
shl
dec
clc
div
outs
out
xchg
jl
enter
mov
stos
xor
xor
jmp
out
cmp
dec
push
add
pop
fistp
pop
std
jle
adc
mov
add
icebp
add
pop
sub
outs
mov
pop
cwde
in
inc
pmuludq
push
xchg
dec
mov
cmps
and
(bad)
xor
int3
cmps
bound
cmp
dec
pop
inc
sub
pusha
icebp
inc
adc
fdivp
lahf
fwait
dec
adc
cwde
outs
ja
popa
popa
mov
popa
and
xchg
push
mov
adc
cmp
pop
dec
xchg
scas
clc
fmul
sbb
mov
pop
add
cmp
cmp
pop
pop
sub
sbb
outs
std
fbstp
xchg
dec
xor
test
push
lock
mov
gs
jp
inc
push
mov
dec
inc
jbe
mov
cmp
shl
cwde
jle
leave
jle
call
pop
loop
lods
fisubr
rcl
int3
xor
(bad)
adc
adc
sub
stos
sar
jb
cmps
cmp
(bad)
into
pop
inc
fild
inc
enter
stos
inc
aas
sbb
jo
call
fld
mov
popa
push
call
pusha
add
rcl
loopne
mov
pop
fucomp
stos
xchg
scas
jge
cmp
inc
out
in
jne
or
fwait
sub
loop
xor
dec
fwait
popa
pop
jo
xchg
push
clc
or
sub
sub
mov
push
lahf
jnp
xor
cs
cmc
xor
lahf
aaa
lea
mov
sub
bound
test
int3
(bad)
jno
icebp
(bad)
xchg
adc
(bad)
cmp
inc
jge
rol
cmp
je
shr
jo
xchg
or
mov
call
das
call
mov
shl
xchg
xchg
pop
cmp
repz
data16
push
adc
mov
xlat
cmp
inc
or
arpl
mov
or
sub
invd
clc
jb
test
or
iret
jmp
cmc
int3
push
xchg
inc
xchg
or
cmps
ins
cmp
daa
fst
xchg
xlat
mov
cmp
in
adc
shl
xor
pop
jge
cdq
and
push
jmp
pop
ja
adc
fadd
call
add
push
int3
add
push
dec
mov
push
or
cmps
repnz
test
xchg
or
(bad)
mov
fisub
leave
clc
mov
inc
ror
mov
test
push
sub
sub
jne
mov
jle
rcl
fdivrp
aas
aas
pop
push
jnp
push
mov
lods
and
xchg
mov
pop
test
sub
adc
jb
mov
frstor
push
mov
dec
adc
ds
xor
jns
mov
sbb
dec
mov
div
stos
outs
scas
pusha
in
iret
mov
pop
hlt
clc
dec
adc
pop
jmp
es
push
sub
bound
push
push
mov
pop
jmp
push
push
mov
sti
test
out
jnp
in
bound
sub
cmp
push
(bad)
out
sub
loopne
imul
sub
mov
xor
imul
aaa
jno
retf
test
adc
sub
add
and
inc
jmp
mov
(bad)
cld
xor
adc
fsub
ins
loopne
pop
inc
in
ret
push
mov
jl
mov
in
pop
cmp
sbb
sbb
dec
dec
cmovbe
jns
or
push
mov
cmps
mov
xor
shl
repz
ret
aas
(bad)
in
daa
rcl
xor
inc
aas
add
repz
call
jp
ror
call
(bad)
test
mov
pop
cmp
or
fidiv
fst
mov
mov
mov
popa
sub
mov
mov
mov
or
pushf
stos
and
and
add
ins
hlt
inc
aam
or
and
int
pushf
outs
pop
sbb
sub
push
in
or
idiv
mov
pop
cmp
inc
adc
push
call
push
iret
addr16
pop
inc
adc
push
xchg
movs
and
add
repz
xchg
pop
jne
push
(bad)
sub
icebp
jae
rcl
cmp
add
adc
sub
call
xchg
stos
es
sub
push
and
inc
pop
jb
out
lock
out
outs
mov
mov
pop
int3
add
shr
addr16
test
fwait
sbb
retf
pop
addr16
retf
test
iret
jp
jmp
mov
jecxz
aaa
or
out
jp
inc
xchg
out
mov
adc
sti
sub
xor
into
adc
fstp
xchg
icebp
cld
dec
push
arpl
in
pop
xor
pop
mov
cli
jg
into
add
add
jnp
or
fld
loopne
sub
sbb
(bad)
mov
mov
adc
sbb
cmc
rcr
call
fcom
scas
jns
je
pop
pop
inc
inc
jns
push
fs
pop
cmps
repnz
xor
in
fimul
fmul
test
imul
es
daa
je
popa
popf
jle
out
stos
into
(bad)
mov
daa
push
lods
retf
pushf
ret
mov
cmp
jo
pop
jmp
push
xchg
fistp
xchg
shr
sbb
jno
sbb
fmulp
je
ret
inc
(bad)
dec
and
lahf
inc
mov
retf
push
xor
adc
mov
mov
cmc
clc
mov
cs
pop
mov
jnp
or
cmp
push
and
aam
push
sub
sub
mov
jg
sub
push
sub
stos
cmc
mov
xchg
fwait
shl
retf
add
dec
mov
xchg
xchg
inc
hlt
inc
jecxz
push
clc
icebp
scas
cdq
jno
lea
fisub
xor
dec
pop
fidivr
int
sahf
mov
cs
sub
addr16
loope
adc
int3
dec
dec
xchg
push
pop
adc
dec
arpl
cli
(bad)
sbb
idiv
xchg
mov
out
or
lods
lock
stc
mov
das
pmuludq
mov
pop
mov
push
fistp
push
mov
imul
mov
lods
mov
std
push
mov
int3
cmp
cmps
jns
adc
sahf
pop
pop
dec
push
push
inc
add
mov
adc
frstor
jne
les
add
stos
into
iret
dec
jae
adc
inc
psraw
mov
cmp
fs
(bad)
imul
call
out
mov
fist
adc
in
push
sub
xchg
stos
mov
movs
mov
leave
jo
add
(bad)
ror
rcr
cs
inc
je
pop
out
inc
mov
aas
popa
clc
sub
ret
lods
xor
or
push
adc
mov
stos
pop
leave
test
push
test
pushf
std
xor
loopne
mov
cmp
dec
jns
in
jo
xchg
lea
push
and
hlt
inc
push
and
ja
cmp
stos
(bad)
repnz
std
mov
hlt
in
push
imul
inc
jl
sbb
xor
and
lock
loopne
mov
mov
rcr
in
or
adc
mov
imul
pop
fucom
pop
stc
dec
jbe
add
arpl
mov
xchg
bound
sub
add
sbb
sbb
(bad)
in
add
push
inc
jle
and
retf
lahf
pop
jb
mov
add
ret
ja
pop
mov
xchg
jo
dec
pop
das
pusha
and
jp
jg
pop
xchg
add
jl
test
cmp
out
sbb
and
or
call
dec
rcr
fdivr
into
cmp
popf
mov
mov
cmp
in
in
inc
pop
cmp
cmps
enter
pop
repz
imul
add
and
addr16
out
fbld
dec
cli
es
pop
dec
jbe
pop
push
ja
mov
stc
dec
and
push
adc
jnp
adc
bnd
pop
adc
adc
call
cs
add
scas
pushf
pop
jb
fdiv
mov
les
jl
into
lea
and
inc
sar
pop
or
fcomp
test
xor
cli
je
fs
add
bound
std
in
or
dec
adc
fdiv
cmp
in
fnstenv
inc
pop
and
iret
xor
icebp
pop
into
test
sub
nop
mov
cs
xor
data16
add
push
daa
call
sahf
jge
fistp
movs
fistp
cmps
mov
jle
idiv
inc
js
shr
jmp
or
lods
cmp
rcr
int3
push
call
adc
ja
inc
jb
ins
add
jo
ror
cwde
out
push
xor
jno
ficomp
xchg
mov
dec
test
push
sbb
add
into
mov
aam
xchg
je
in
sti
in
fidiv
fiadd
fild
imul
dec
loope
data16
inc
fs
and
repz
jp
test
and
(bad)
int
and
push
je
cwde
mov
les
and
les
pop
xlat
test
jae
mov
sti
dec
sbb
mov
jmp
jae
pop
jb
pop
hlt
test
add
sbb
xor
int3
jae
sub
push
inc
retf
mov
xchg
loop
and
mov
add
xor
cmp
push
pop
outs
sub
push
fnstenv
out
cmp
imul
fmulp
xchg
jg
gs
mov
or
lahf
xor
(bad)
call
pop
and
movs
add
cmp
nop
inc
int
mov
mov
push
push
repz
mov
xchg
stc
inc
mov
aam
adc
sar
pop
bound
sbb
push
add
push
frstor
int
pop
sub
aaa
cld
inc
xor
repz
(bad)
xchg
mov
add
scas
icebp
arpl
ins
cld
or
mov
scas
and
mov
mov
pop
shl
push
addr16
dec
push
mov
fisubr
cmps
sbb
jl
dec
out
loopne
movs
arpl
inc
fisttp
dec
xchg
push
stc
or
ficomp
cmp
mov
fs
xchg
jnp
mov
xchg
jae
pop
dec
mov
loope
wrussd
les
jb
mov
cmp
out
ret
fiadd
push
fcom
dec
out
mov
dec
daa
test
inc
ss
dec
fs
(bad)
test
out
loop
pop
push
sbb
sti
adc
ret
clc
pop
jmp
inc
outs
mov
dec
cmp
idiv
int3
add
int
dec
pop
pushf
push
xchg
cmp
dec
leave
(bad)
ins
sbb
das
das
int3
sbb
leave
das
xchg
stc
adc
lds
push
imul
sbb
outs
es
aaa
pusha
ins
je
mov
in
int3
(bad)
cmp
sub
pop
and
iret
pop
dec
frstor
sbb
sbb
loope
(bad)
xor
ja
popa
pusha
nop
aam
lahf
dec
cwde
out
lahf
mov
hlt
sahf
or
fcmovnu
push
pop
daa
mov
out
test
les
dec
test
scas
dec
pop
pop
mov
sbb
and
lods
loope
add
stos
and
bound
jecxz
call
sbb
jb
es
into
ins
dec
adc
dec
cdq
or
sub
push
repz
mov
push
push
push
rol
rol
jle
xchg
add
sbb
int3
sub
sbb
cmps
xchg
push
or
outs
push
push
xor
or
cmp
xlat
sbb
pop
arpl
aad
cmovne
ror
retf
pop
sub
and
mov
mov
mov
cmp
and
out
jl
ins
mov
mov
mov
outs
fnstcw
ins
call
or
add
xchg
cmc
sub
js
stc
loopne
mov
pop
call
mov
js
or
or
dec
rcr
lahf
fnstenv
jmp
rcl
fst
ss
mov
jno
pop
cs
in
movs
fwait
cmp
ds
cmc
aam
fxch
dec
mov
adc
mov
ficomp
jae
sbb
jmp
mov
sub
(bad)
mov
imul
in
dec
cmp
retf
pop
dec
adc
out
fild
cwde
arpl
test
das
jp
pop
fs
pop
pop
mov
out
sub
xchg
jae
or
rcl
(bad)
fsub
jl
dec
cmp
adc
push
in
xchg
lods
and
jne
out
push
xor
pop
sub
xor
sub
scas
pop
pop
fcmovnu
leave
fdivr
aas
push
mov
pop
fcom
jg
mov
aad
gs
movs
push
mov
dec
and
push
outs
fild
lahf
cs
mov
push
(bad)
icebp
aad
out
shl
and
jbe
fs
cmp
bnd
mov
add
popa
add
call
(bad)
fdivr
sub
pop
cmp
inc
gs
in
sub
pop
outs
lods
push
pop
dec
sub
xchg
movs
daa
mov
push
aad
jl
(bad)
adc
lahf
je
push
movs
stc
and
cmp
cwde
js
adc
cmc
and
xor
fsubr
in
sub
mov
pop
or
mov
into
inc
out
xchg
pop
push
fs
adc
xrelease
je
xor
ret
retf
movs
test
dec
cs
addr16
cld
sub
test
jns
dec
jp
xor
fild
adc
jle
mov
sub
mov
das
cmp
outs
mov
inc
fs
push
daa
mov
fisttp
push
and
mov
fbstp
int
adc
sub
je
movq
jmp
cli
in
adc
int3
push
push
iret
and
xchg
(bad)
push
mov
es
out
xchg
fnstsw
test
hlt
adc
xor
or
popa
sbb
nop
inc
fs
fsubr
add
mov
cld
push
(bad)
(bad)
sahf
or
dec
jae
dec
rep
jmpw
or
ds
icebp
sar
pop
rol
neg
ror
ret
mov
push
sbb
iret
dec
(bad)
loope
xor
jecxz
xchg
and
lods
pop
aad
ror
adc
inc
rol
pop
adc
and
and
shl
fnstsw
sahf
push
ja
and
sbb
mov
xor
add
sbb
call
movs
mov
nop
test
das
cmp
push
dec
cmp
test
mov
jmp
jmp
aas
outs
xlat
mov
jno
jno
xchg
sub
xchg
iret
fcom
out
push
xor
push
ret
stos
ins
sbb
ja
cmp
mov
jp
clc
mov
sbb
jle
inc
lea
pushf
ret
popf
jo
fild
aaa
retf
ror
inc
jmp
fs
jmp
cmps
mov
mov
mov
ror
out
shr
mov
out
stos
fcmovne
test
mov
hlt
cdq
pop
and
clc
mov
icebp
adc
lahf
mov
push
pop
jle
mov
mov
in
mov
push
cmp
mov
pop
mov
jecxz
push
xchg
mov
pop
jne
xchg
inc
mov
test
jge
cmc
sahf
push
adc
mov
inc
(bad)
call
lahf
mov
push
lock
inc
jl
mov
push
pusha
in
sar
fisttp
inc
(bad)
inc
cbw
loopne
pop
xchg
adc
inc
jae
retf
xchg
and
pop
mov
adc
addr16
xor
add
xor
cmp
adc
push
mov
add
shl
cmp
sub
sub
mov
(bad)
pushf
test
adc
cmp
or
inc
cmp
shl
rcr
jnp
(bad)
int
xor
rol
jg
mov
std
pusha
push
push
shl
sbb
push
bound
ds
repnz
ins
and
xor
mov
jno
stos
or
jmp
pop
lods
inc
sub
mov
ins
push
jp
dec
cld
es
adc
in
clc
test
adc
sub
test
fistp
add
ins
and
push
es
pop
loop
cdq
mov
cli
sbb
xchg
popf
call
stc
jne
sahf
sti
cld
sbb
mov
jp
addr16
sub
jmp
jge
sbb
sbb
mov
or
ror
ins
popa
mov
mov
add
push
pop
jp
mov
mov
repnz
in
cmc
sbb
cmp
sbb
out
outs
inc
gs
mov
fidivr
(bad)
xchg
add
(bad)
jmp
dec
imul
adc
bound
cmp
(bad)
adc
ds
sbb
xor
lock
jnp
daa
aad
fnstsw
sub
pop
ret
mov
aaa
pop
ja
into
dec
stos
or
aam
inc
imul
mov
pop
fdivr
sub
(bad)
mov
sbb
lock
cmp
popa
icebp
je
or
inc
push
jge
jnp
cmp
jl
xchg
cmps
cdq
(bad)
xor
xchg
and
mov
pop
lds
jg
pusha
in
push
mov
dec
das
in
sub
mov
dec
pop
lods
out
out
enter
das
sbb
cwde
add
push
dec
mov
ds
mov
je
or
vpunpcklqdq
cdq
push
lea
leave
out
test
push
data16
(bad)
cmp
fiadd
cmp
in
xchg
aam
leave
mov
mov
push
xchg
dec
push
cs
rcr
stos
stc
addr16
fcom
xor
sub
xor
xchg
jns
dec
dec
xchg
adc
xchg
adc
rcr
push
arpl
sub
mov
aam
mov
mov
lods
pushf
mov
fst
fdiv
mov
and
iret
mov
jne
jl
mov
out
outs
xor
push
fs
out
(bad)
iret
push
repz
rcr
fnstcw
mov
pop
in
and
push
dec
pop
pop
push
mov
pop
data16
mov
popa
add
imul
in
mov
mov
or
dec
cmp
int3
pop
out
add
sahf
and
add
(bad)
sbb
add
mov
cli
(bad)
or
cmp
std
scas
push
jg
sub
daa
xor
pop
mov
push
scas
jbe
xchg
les
pop
add
and
jno
xor
add
xchg
popf
int
cmp
popa
and
(bad)
das
out
dec
loopne
mov
jns
dec
shl
adc
je
ror
adc
jge
pop
inc
xor
pusha
add
jmp
ss
in
pop
adc
addr16
ret
js
inc
sub
iret
cmps
retf
loop
sbb
mov
or
aad
outs
rol
xchg
ds
mov
retf
jmp
xchg
mov
call
retf
(bad)
sbb
add
mov
or
push
jno
cbw
(bad)
mov
daa
inc
and
nop
mov
mov
loop
cmp
and
adc
cwde
je
jmp
push
inc
or
push
cs
(bad)
sub
push
test
mov
outs
loopne
js
(bad)
push
sub
dec
rcl
test
dec
and
jmp
aaa
repnz
or
cld
in
pop
in
repz
xor
jge
and
mov
xchg
push
mov
push
mov
fldenv
xchg
(bad)
mov
neg
xor
stos
jmp
in
aas
mov
or
pop
push
mov
bound
mov
test
add
iret
sub
mov
jae
pusha
in
loope
mov
xchg
ins
mov
outs
or
mov
xor
or
scas
out
lea
push
ins
jmp
nop
cmp
into
neg
mov
push
ret
(bad)
shr
and
pop
imul
clc
mov
fst
loop
sub
lea
imul
clc
mov
sbb
adc
push
leave
rcr
out
jl
jbe
lea
adc
test
dec
xchg
pop
mov
fcomi
(bad)
cmp
push
call
add
push
imul
cmp
test
mov
cmps
push
sti
scas
and
dec
push
dec
js
sbb
clc
dec
pop
xchg
bnd
fdivr
add
shl
ja
ret
push
dec
fadd
xchg
(bad)
ficom
std
add
popa
or
inc
cmp
mov
push
add
and
xor
add
pop
out
and
jle
mov
aas
test
stos
mov
stc
jne
sahf
dec
add
mov
push
test
sub
(bad)
pop
inc
and
pop
stos
es
and
test
fs
out
dec
dec
adc
arpl
sub
icebp
jg
lods
imul
loope
aas
inc
and
jno
aaa
lods
mov
nop
hlt
xchg
and
in
repz
xor
call
gs
mov
shl
mov
or
lea
stos
xchg
or
fwait
sbb
sbb
jp
jecxz
or
mov
lds
dec
inc
jnp
adc
inc
dec
gs
out
push
lods
dec
daa
inc
adc
addr16
fsubr
bound
mov
cmps
inc
fisub
in
cs
pop
mov
cwde
repz
xor
leave
jmp
add
sar
cld
bound
(bad)
push
or
or
mov
test
es
or
cdq
sub
sbb
xchg
out
sbb
or
or
pop
jo
mov
ret
lods
pusha
and
das
lods
ins
cld
jns
(bad)
out
jecxz
inc
add
cwde
add
inc
push
jae
int
arpl
sbb
mov
and
or
stos
sbb
sub
mov
rcr
data16
inc
adc
out
mov
sub
sub
addr16
rcl
mov
push
ja
(bad)
jl
adc
out
repnz
sbb
mov
pop
mov
ss
shl
mov
jecxz
add
stos
mov
popf
mov
xor
mov
clc
in
or
ins
(bad)
mov
sahf
xchg
xchg
test
inc
repnz
or
xor
or
call
punpckhwd
scas
xchg
mov
ror
fdivr
push
inc
lods
retf
aas
mov
inc
dec
push
test
cmps
push
into
xchg
das
or
inc
dec
push
push
jl
and
cdq
fbld
ror
mov
add
jecxz
stos
mov
scas
mov
add
data16
sub
jb
fcomp
sbb
xor
fld
cwde
(bad)
xchg
cmp
(bad)
lahf
sbb
les
ja
xchg
sub
sub
repz
jmp
(bad)
mov
into
push
icebp
mov
lods
pop
adc
bound
and
shr
or
mov
push
mov
cmps
inc
ja
sbb
mov
xlat
cmps
cmp
jecxz
push
(bad)
sub
mov
mov
inc
lods
pop
xor
and
stos
popa
jl
mov
pop
sub
mov
pusha
call
pop
ds
push
in
or
sbb
xor
movs
es
inc
mov
push
pshufw
cmp
fcmovnbe
loopne
jge
adc
(bad)
xor
inc
sbb
mov
jl
retf
push
xlat
test
int3
and
repz
loop
mov
pop
test
(bad)
leave
mov
dec
push
mov
fnstcw
idiv
stos
or
lea
xor
dec
repz
sub
jbe
aas
jl
into
iret
std
fldenv
retf
aaa
ficomp
test
mov
or
or
jno
dec
adc
scas
xor
dec
(bad)
push
gs
neg
das
add
pushf
retf
scas
int
pusha
jp
sbb
sub
in
adc
push
jge
adc
push
leave
das
cld
or
add
pop
(bad)
mov
movs
out
mov
fmulp
je
add
add
(bad)
pop
mov
(bad)
lods
nop
pushf
push
add
sbb
and
ja
test
enter
jecxz
pop
mov
cmp
xor
sbb
inc
jg
mov
mov
mov
bound
or
cmp
ins
mov
cmc
inc
(bad)
cli
daa
fwait
mov
jmp
cs
retf
pop
jmp
push
cmc
push
jae
xor
dec
ror
and
push
mov
sti
xchg
adc
rol
ja
mov
test
pop
fwait
inc
jae
push
rcr
dec
(bad)
ffreep
dec
pop
ins
frstorw
ror
fld
push
cmp
mov
sub
push
cmp
adc
mov
(bad)
or
lds
(bad)
movlps
pop
mov
and
out
nop
data16
xchg
cmp
imul
xchg
addr16
pop
xor
(bad)
aad
daa
sbb
mov
and
sub
outs
xor
mov
add
inc
(bad)
jmp
add
ins
stc
shl
mov
sub
mov
stos
xchg
test
mov
inc
mov
jnp
mov
test
pop
cmp
xchg
mov
lods
es
nop
cmp
cmovae
hlt
ins
dec
xor
lmsw
pop
fs
sub
jl
jb
jno
nop
mov
xchg
adc
stos
pop
daa
stos
addr16
and
pushf
mov
and
sbb
or
pop
lds
xor
ret
loopne
sti
mov
cmp
outs
cmp
jmp
int
arpl
dec
add
inc
test
inc
jne
js
aad
(bad)
test
fsubrp
outs
sub
xchg
ret
dec
test
clc
outs
xor
dec
icebp
mov
fild
mov
cmps
sahf
mov
and
call
stos
mov
aad
adc
xor
test
(bad)
pop
or
fimul
cmp
imul
adc
cmp
stc
fdivr
jmp
cmp
mov
pop
daa
xchg
rcr
mov
ficom
inc
dec
out
outs
fnsave
dec
adc
hlt
push
js
(bad)
repz
outs
ja
xor
mov
cdq
push
in
jge
xor
mov
cli
fist
int
retf
call
(bad)
fnstcw
lea
jo
sub
mov
adc
mov
dec
fild
push
sbb
add
dec
inc
call
jno
jp
test
inc
xor
dec
pop
imul
xor
in
bound
and
cld
xchg
and
cmp
leave
fdivp
scas
(bad)
push
or
dec
ret
xor
push
retf
daa
inc
cmp
imul
sub
sbb
mov
mov
cli
pop
mov
mov
push
add
fs
loop
xchg
daa
xor
rcl
sbb
movs
adc
sub
mov
xchg
cmp
add
sbb
int
cmp
add
lods
jnp
pop
imul
inc
fcomip
ss
(bad)
pop
sbb
gs
mov
xor
lahf
fst
jge
sqrtps
popf
shl
pop
scas
retf
sub
cwde
xchg
mov
xchg
mov
aas
pop
sub
pop
lock
push
pop
adc
sahf
cmp
fnstenv
mov
ss
and
inc
push
call
in
aam
push
sar
fcom
and
test
rol
aam
(bad)
nop
data16
adc
test
adc
pop
cli
data16
scas
mov
xchg
or
outs
aam
jae
and
fst
scas
mov
mov
fimul
mov
jne
and
aam
pop
rol
stc
shl
jg
mov
scas
in
mov
xchg
inc
jnp
xor
outs
out
cmp
dec
sub
stos
mov
mov
js
add
pusha
cmp
push
mov
jecxz
sub
leave
mov
pop
rcl
cmc
sbb
mov
in
pop
cli
cld
inc
sub
fmul
cmps
shl
push
div
ins
xchg
mov
pop
fbstp
push
xor
pop
dec
xor
(bad)
cdq
into
jne
sub
fmul
clc
std
inc
dec
jbe
pop
push
ds
loop
xor
aam
cdq
gs
mov
cdq
out
xor
mov
cmp
dec
ss
or
lds
mov
(bad)
and
xor
or
push
add
mov
lock
sub
push
scas
xchg
rcr
repz
mov
sub
scas
adc
pop
inc
(bad)
mov
mov
cli
adc
sub
stos
mov
xchg
xchg
and
mov
sbb
shr
fwait
adc
mov
push
(bad)
(bad)
rol
fs
xor
push
out
cmp
out
dec
test
push
sub
jns
shr
add
mov
jbe
fisub
mov
mov
sbb
cs
jg
push
pop
or
or
dec
shl
mov
adc
mov
movs
loop
enter
push
cmc
mov
js
cmp
outs
fwait
jl
stos
popa
frstor
je
ret
push
fdivr
push
int
xor
pushf
not
or
prefetch
push
pushf
mov
fidiv
sahf
sub
dec
xchg
in
add
loope
shl
call
shl
scas
es
mov
adc
ja
aad
aaa
pop
push
fimul
stos
addr16
pushf
pop
add
inc
cwde
cwde
sub
sbb
jbe
adc
jns
pusha
mov
(bad)
add
cmc
add
mov
and
jmp
pop
inc
jl
into
cmp
lock
adc
sub
imul
jns
push
movs
mov
das
rcr
sub
pop
and
xor
inc
xor
xor
(bad)
cmp
into
cli
pop
adc
sub
cmp
sub
mov
test
fwait
dec
mov
mov
outs
inc
xchg
mov
pop
dec
(bad)
popf
shl
imul
push
cmps
jmp
gs
cli
mov
inc
fs
xor
mov
jno
lods
cmp
xchg
push
jmp
fdivr
hlt
cmp
movs
inc
repnz
das
or
cmc
jnp
jns
movs
or
scas
cmp
movs
ja
imul
pop
mov
xor
sar
adc
es
xchg
xchg
retf
inc
mov
jp
mov
lods
mov
inc
mov
test
sbb
std
fist
and
fiadd
psadbw
pop
inc
and
cmp
adc
xor
mov
loopne
cmp
mov
xchg
or
nop
xchg
add
(bad)
mov
arpl
mov
shr
or
sbb
jb
movaps
ret
cmp
dec
jno
adc
xchg
mov
or
add
inc
rcl
jo
test
stc
xchg
rcl
cld
cmp
sti
inc
rol
int3
pop
mov
pop
mov
sti
shr
shl
and
adc
jle
lods
das
fild
fs
leave
out
mov
mov
cmp
inc
push
pop
pusha
and
fs
(bad)
jo
or
out
pop
mov
imul
sbb
not
into
aas
enter
pop
cli
out
mov
mov
jb
loope
xchg
test
push
jb
push
cmp
lea
cmp
push
(bad)
js
or
jge
pop
cmps
mov
enter
scas
call
jnp
mov
pop
(bad)
in
dec
push
or
push
cmp
xor
(bad)
cmp
pushf
add
outs
xor
les
ss
mov
or
fsub
push
xchg
xchg
push
int
dec
test
cmp
mov
std
xchg
lock
call
dec
jmp
es
xor
push
scas
jne
in
pop
jno
jae
push
inc
bound
les
inc
(bad)
scas
sbb
js
fisub
loop
les
int
fcomp
xlat
add
ret
cmps
movs
add
aaa
push
adc
ins
enter
dec
cmp
inc
icebp
jge
bnd
fisub
(bad)
ja
or
mov
mov
adc
sub
cmp
dec
push
cmp
push
mov
inc
shl
push
adc
ss
int3
mov
jl
adc
cmp
and
push
ror
jle
out
ins
in
pop
or
add
dec
push
pop
test
jmp
push
jb
out
push
and
cmp
loopne
jb
mov
cmps
in
je
(bad)
xor
int
lds
aad
mov
xor
aas
sar
leave
sbb
mov
shl
xor
sub
adc
lahf
arpl
rcr
(bad)
xor
inc
push
xchg
outs
mov
ins
cmp
pop
push
mov
fwait
xor
add
sbb
mov
lods
mov
leave
pop
push
fcomp
ja
lock
popa
pop
pop
(bad)
aad
cmp
lahf
std
gs
aas
adc
imul
nop
test
in
dec
add
aad
push
retf
pop
mov
xor
cmps
retf
xlat
mov
je
popa
sbb
xor
mov
or
out
jbe
jl
xor
inc
push
sbb
sbb
stc
sbb
loop
xchg
sbb
cwde
add
loope
jbe
test
pop
je
xor
or
lods
pop
es
popf
gs
fdivrp
mov
aad
out
push
mov
cli
pop
ins
and
or
pop
int3
xchg
lmsw
movs
std
cmc
xchg
lods
mov
jg
inc
mov
mov
cmc
xor
daa
addr16
dec
dec
fcmovbe
sub
push
inc
movs
jp
sbb
out
repnz
inc
jl
dec
outs
jb
ss
or
mov
xchg
dec
nop
cmc
xchg
mov
jb
ret
scas
sbb
das
xlat
add
movs
out
push
sar
jp
hlt
les
pop
and
pop
cwde
xchg
scas
enter
scas
or
nop
sbb
fcom
popf
xchg
out
(bad)
(bad)
in
shl
js
cwde
jnp
jno
mov
call
dec
(bad)
xchg
scas
or
inc
push
add
xchg
or
stos
xchg
lahf
adc
je
cmp
test
rol
sbb
fisttp
fstp
and
shl
inc
mov
int
or
stos
jmp
xor
jno
mov
jecxz
xchg
pop
test
jbe
sbb
clc
sbb
jae
(bad)
mov
push
cs
retf
out
push
pushf
jnp
jo
std
mov
cs
nop
xchg
and
dec
out
rol
in
icebp
ror
push
cdq
adc
das
fist
add
js
push
test
xchg
cld
mov
push
jmp
mov
fwait
cwde
mov
ja
add
dec
cli
sbb
mov
scas
xor
jmp
jae
ror
je
fimul
add
mov
cmp
jbe
and
inc
pop
inc
lods
cmp
push
retf
test
jl
push
(bad)
shl
xor
je
sub
cwde
fnsave
mov
lods
test
xchg
imul
data16
sub
ds
test
sti
inc
cmp
mov
call
cmp
xchg
add
adc
jg
mov
popa
test
or
in
or
xor
mov
sbb
add
adc
lea
mov
jnp
adc
push
mov
out
aam
jns
ss
cdq
cmp
inc
jno
dec
inc
sbb
rol
or
pop
call
push
es
sub
ins
add
sub
jmp
cwde
fwait
or
sti
lahf
shr
ret
push
pushf
mov
inc
mov
frstor
jl
pop
push
inc
cmp
jo
and
xchg
dec
adc
push
das
mov
loop
cli
and
mov
stos
loope
repz
fadd
add
push
inc
push
sbb
adc
ret
xchg
mov
mov
inc
mov
jmp
imul
or
inc
stos
mov
inc
push
in
push
dec
mov
push
sub
xor
cmp
xor
cmp
push
add
out
mov
icebp
xor
pop
mov
push
hlt
push
push
(bad)
mov
push
daa
push
mov
sbb
shr
in
out
iret
sbb
inc
shl
jmp
or
jmp
add
aaa
rol
jmp
xchg
lea
push
add
xchg
retf
jmp
ins
bndldx
mov
dec
(bad)
addr16
mov
mov
iret
jmp
sar
pop
push
jmp
sbb
into
(bad)
and
setns
movhps
xchg
xchg
inc
mov
lods
push
add
sub
jae
xchg
neg
add
xor
mov
movs
fs
sub
push
call
shl
je
cwde
(bad)
dec
push
int
xor
hlt
jno
pop
and
dec
jg
ret
mov
jmp
cmc
mov
xchg
test
test
cmp
(bad)
imul
mov
nop
jb
out
mov
data16
pop
mov
xor
fdivr
in
or
lods
dec
stos
cwde
push
cmp
and
mov
adc
aaa
std
(bad)
shr
repz
adc
pop
jmp
sbb
xchg
add
mov
aaa
xor
shr
pop
neg
pop
sbb
push
jg
mov
out
das
xchg
jmp
call
in
test
pop
inc
test
sbb
add
sbb
in
fcmovnbe
or
push
jnp
loopne
fisttp
cs
rcr
out
fwait
retf
ins
add
and
inc
and
das
stos
lods
call
cwde
jmp
adc
add
je
popa
jnp
pop
dec
outs
bound
fst
pop
lea
xchg
jge
stos
sub
repz
sti
rol
cli
or
je
cmps
jmp
xchg
push
dec
mov
fst
or
stos
cmp
or
mov
pop
jle
mov
das
rcl
push
icebp
mov
sub
out
rcr
fucomp
mul
sub
(bad)
push
pop
in
addr16
inc
aad
push
mov
fsubrp
test
sub
and
rol
shr
in
icebp
sbb
and
in
popf
and
sbb
(bad)
repnz
sbb
xlat
jmp
mov
clc
arpl
mov
push
jge
stc
das
jnp
cwde
sbb
pop
cmps
mov
jne
shr
mov
pop
jae
xchg
jmp
jmp
adc
and
sub
cmp
jle
jbe
sub
clc
push
pop
xchg
aam
stos
cmp
xor
mov
dec
popf
mov
loope
jmp
jmp
mov
inc
imul
xchg
ds
sub
fbstp
nop
push
les
scas
loope
shr
stc
mov
sbb
or
sar
sub
loope
ror
popw
xchg
das
jae
clc
mov
push
enter
sbb
out
repz
push
and
hlt
dec
clc
movs
pop
clc
xor
mov
mov
pop
jecxz
por
addr16
mov
pop
stos
loop
cmp
and
sbb
in
fwait
mov
xor
rcl
inc
(bad)
add
pop
int
call
pushf
xchg
adc
push
mov
in
loopne
ror
push
mov
mov
ficom
retf
xchg
lock
test
or
dec
cmp
movs
out
jl
xchg
mov
add
and
xchg
cmp
and
jmp
mov
or
adc
inc
mov
pop
cmp
jbe
pop
ins
popf
ins
es
push
inc
fistp
dec
lods
leave
fs
push
adc
sbb
xchg
push
loop
dec
adc
cmp
(bad)
retf
or
in
mov
mov
int3
inc
popf
add
fwait
in
xchg
pusha
jae
xchg
xor
or
ds
pop
adc
sbb
dec
jmp
outs
pop
adc
pop
dec
add
sbb
cmp
ret
lods
xor
jnp
push
xlat
or
push
test
iret
adc
loopne
or
sub
aam
pop
adc
ss
xchg
xchg
scas
and
and
(bad)
cmc
data16
cmp
xor
dec
addr16
stos
cmp
push
in
mov
outs
pop
mov
dec
fisttp
fcomp
ficomp
and
and
movs
mov
mov
lock
ret
mov
mov
sar
fwait
test
xlat
test
jbe
dec
ss
cmp
cmp
xor
sar
push
sub
or
pop
mov
jnp
cdq
lods
in
push
outs
jmp
cmp
xchg
jo
retf
jo
in
pusha
test
sbb
rol
icebp
cmp
pop
iret
mov
lahf
test
scas
cmps
xchg
fild
pop
ror
cwde
ror
sub
xchg
mov
mov
stos
leave
ins
sbb
retf
xchg
in
adc
into
jmp
add
or
jno
and
push
jb
mov
pop
call
add
xchg
shl
inc
xlat
add
xchg
mov
cmp
or
cmp
push
push
stos
ds
mov
cmps
(bad)
les
out
addr16
and
xchg
pop
test
sub
sahf
test
cs
fcom
or
xor
jmp
unpcklps
mov
sbb
jg
fbld
mov
adc
sbb
cli
push
inc
shl
in
sub
in
jbe
aam
(bad)
mov
bound
mov
mov
and
scas
movs
jne
gs
mov
stos
das
jnp
popa
and
mov
adc
cmp
inc
scas
push
(bad)
cld
dec
mov
xchg
loopne
dec
pop
adc
fstp
fiadd
sub
jle
mov
test
jae
jmp
push
dec
inc
(bad)
retf
retf
xchg
data16
aaa
ret
or
pop
cmps
xchg
jae
(bad)
push
icebp
daa
add
retf
fistp
mov
loop
call
xchg
stos
xchg
mov
arpl
icebp
inc
jb
pop
stos
ins
into
sub
outs
cwde
out
inc
loopne
sahf
idiv
fisttp
in
jns
mov
push
popa
add
(bad)
jle
dec
out
mov
push
hlt
dec
xchg
sti
cmp
daa
popa
enter
sub
test
mov
dec
jo
pop
mov
dec
xchg
jmp
sahf
add
ss
pop
pop
add
inc
cmp
js
leave
movs
dec
or
(bad)
dec
repz
sti
sub
lock
sub
cdq
jmp
cs
cli
adc
inc
ret
jno
jb
loope
sub
nop
xor
ss
mov
test
dec
pop
mov
sti
push
in
sahf
dec
(bad)
or
sub
cmp
imul
cmps
mov
pop
jmp
sub
icebp
nop
lahf
fcmovne
ss
inc
cmc
jge
rcr
pop
cmc
mov
iret
lods
and
repnz
mov
cmps
jo
clc
loopne
outs
ret
mov
pop
mov
aad
mov
loope
gs
test
popa
ds
xor
adc
das
mov
add
mov
(bad)
loop
mov
pop
test
sub
(bad)
xor
and
xchg
xchg
repz
pushf
mov
fist
mov
xchg
jne
cmp
out
xchg
enter
dec
test
je
ds
das
int
jnp
cmps
sub
ja
cmp
pop
sahf
loop
ja
inc
pop
ins
mov
xlat
dec
jb
sub
shl
leave
fist
das
cdq
add
int
jmp
push
outs
mov
out
in
aam
sbb
adc
and
sub
fsub
loopne
pop
outs
cld
xor
adc
xor
pop
xor
cld
adc
or
mov
idiv
test
mov
(bad)
cmp
sbb
lahf
sub
xchg
repz
inc
mov
aaa
stc
xor
jmp
jne
jmp
jmp
icebp
mov
mov
ja
icebp
cmp
push
xchg
or
adc
in
js
adc
icebp
jge
sub
or
into
mov
push
adc
popa
loop
dec
mov
inc
movs
aad
mov
repz
or
dec
push
(bad)
jns
push
jmp
pushf
test
shr
mov
add
mov
mov
mov
(bad)
out
lock
sub
movs
mov
repz
ficomp
(bad)
aam
mov
aaa
add
in
xlat
pop
shr
(bad)
sahf
inc
loop
std
dec
idiv
cmp
cmp
and
addr16
jg
mov
iret
xchg
pop
dec
mov
je
call
cmp
and
movs
pusha
aaa
scas
pop
dec
nop
(bad)
ret
aam
nop
sub
sahf
add
(bad)
jle
jns
test
outs
ins
retf
je
adc
pop
or
loop
movs
xor
sbb
call
ins
push
(bad)
pop
into
mov
jo
mov
fcmovu
dec
cmp
movs
xor
in
pop
icebp
pushf
xchg
mov
cmp
scas
lahf
xor
inc
dec
xchg
fild
mov
movs
sbb
add
in
sbb
int
inc
out
aam
mov
inc
addr16
loope
dec
add
sbb
jo
xor
jo
jg
xor
cmc
ds
stos
adc
(bad)
test
cdq
repz
sahf
das
add
xor
outs
cmc
stos
mov
popa
sub
inc
sub
push
mov
push
xchg
inc
dec
push
add
adc
sub
fadd
inc
inc
xchg
int
retf
out
and
out
ja
or
jnp
cdq
bound
cs
retf
and
cmp
in
jae
fistp
ret
shl
idiv
loope
dec
jecxz
cdq
push
adc
xchg
test
sub
dec
jmp
jmp
jno
out
dec
sub
or
mov
pusha
daa
popa
pop
mov
inc
out
xchg
call
push
pop
lahf
dec
pop
xchg
stos
push
and
ret
dec
inc
out
stos
jg
adc
and
cmp
iret
iret
jle
inc
mov
add
icebp
xor
ret
aaa
retf
and
test
sub
leave
aas
dec
fdivr
xchg
sub
mov
xor
sbb
out
add
mov
popa
mov
cmps
pusha
fsubp
clc
repz
retf
je
nop
pop
or
fcomp
jno
sbb
stc
loope
cmc
mov
data16
cmps
or
lock
jns
pop
xor
nop
cmp
in
mov
sbb
cmps
iret
inc
(bad)
add
lahf
dec
je
das
das
popa
repnz
ins
inc
mov
test
add
imul
xchg
int3
dec
adc
cli
push
je
daa
mov
cmc
daa
xchg
mov
jae
sub
add
or
je
inc
push
push
inc
push
pop
or
movs
cmps
les
inc
and
adc
push
adc
push
mov
mov
sub
test
mov
xchg
xor
iret
mov
das
mov
test
cmp
or
pushf
add
pop
add
sub
sbb
sbb
push
(bad)
mov
shl
jb
jb
sbb
mov
test
cmc
jp
adc
sahf
test
jg
mov
js
or
ins
add
aam
or
imul
neg
fdiv
mov
pop
push
sub
pop
inc
inc
adc
mov
call
or
shr
cmp
jae
add
fnsave
push
adc
cwde
fstp
cld
in
sti
mov
ins
add
mov
inc
loopne
push
into
mov
dec
in
stos
push
adc
fistp
fdiv
or
jl
push
inc
cmp
and
cld
push
dec
cmp
ja
xlat
mov
inc
shl
dec
sbb
rcr
in
cmp
dec
xor
inc
inc
(bad)
push
movs
xchg
hlt
xor
stc
adc
dec
bound
das
sub
or
in
shl
xor
jno
stos
cmp
lods
pop
and
xchg
fist
inc
loop
mov
adc
inc
push
int
adc
xchg
fdiv
xor
adc
dec
inc
cli
div
pop
push
pop
imul
shl
or
sbb
jns
popf
xor
push
pop
xchg
fist
xor
push
adc
jne
cmc
les
xor
jecxz
sub
inc
cmp
push
sub
cmp
aaa
data16
ret
jno
cs
cwde
popf
cmp
stos
stos
sub
adc
popf
pop
pop
ins
mov
cld
sub
xchg
push
sub
(bad)
mov
sbb
sub
dec
dec
js
mov
and
(bad)
repnz
fwait
inc
fcmovnu
xchg
les
dec
jl
pop
xchg
dec
iret
std
push
sti
push
xor
loop
add
lahf
dec
sahf
push
pop
pop
(bad)
mov
fwait
out
sub
call
or
sbb
pusha
rol
push
add
cdq
xor
fsubr
retf
sub
sahf
jbe
sbb
mov
arpl
inc
mov
sbb
jmp
adc
pop
jnp
aas
mov
mov
enter
stos
int3
add
and
in
cdq
fiadd
push
adc
fisubr
nop
pop
fldpi
sar
add
imul
add
add
dec
leave
xor
pop
lahf
sub
shr
shl
fsub
pop
adc
push
test
xor
xor
mov
cmp
or
push
int
inc
and
dec
mov
shl
xchg
stc
pop
xor
leave
adc
scas
movs
adc
sbb
jmp
mov
mov
gs
lods
or
stos
rol
retf
std
push
inc
sar
pop
cmp
and
(bad)
lods
repz
push
push
(bad)
es
repz
mov
loop
sub
push
inc
ret
adc
lods
cmps
mov
movs
jecxz
rcr
or
(bad)
aaa
ds
adc
mov
pop
loope
mov
out
in
push
sbb
lods
ret
jne
rol
xchg
lods
sub
test
(bad)
xchg
sbb
call
fiadd
iret
cmc
add
jns
cdq
mov
lahf
mov
fidiv
cmps
xchg
scas
pop
cs
xchg
mov
inc
add
pop
xor
mov
data16
mov
popf
add
mov
or
int3
test
or
fwait
aaa
sub
xchg
fisttp
fadd
push
xchg
pop
push
call
mov
test
jnp
loope
sti
js
xchg
sti
leave
push
out
lea
jnp
lahf
sbb
xchg
movs
sahf
inc
int
xor
pusha
addr16
js
cmps
jmp
cmp
push
es
scas
(bad)
sub
mov
sar
mov
cld
add
cmps
idiv
mov
sbb
or
push
and
stos
pop
pop
call
loope
retf
pop
xor
dec
ja
fs
(bad)
test
sbb
or
not
retf
jnp
lds
into
push
mov
mov
enter
jle
inc
mov
call
cmp
jl
daa
cmc
outs
pop
test
and
fistp
and
mov
(bad)
fdiv
repnz
repz
or
mov
xor
daa
test
cmps
pusha
cld
mov
test
pop
in
jl
fcomp
xchg
cmps
aaa
dec
sub
ins
mov
inc
int3
inc
jp
in
pop
dec
mov
movs
mov
jnp
stos
adc
mov
scas
mov
cs
stc
aam
scas
jnp
loopne
retf
imul
and
or
push
rcr
jne
nop
pop
dec
jns
js
or
mov
mov
push
xchg
adc
test
push
push
retf
fld
push
pop
or
add
fst
jne
fcom
daa
sbb
adc
sub
imul
jne
sbb
mov
je
enter
clc
iret
xlat
pop
rcr
retf
cmc
mov
out
jo
bswap
test
mov
push
and
mov
and
(bad)
mov
pop
xchg
fcomp
imul
scas
jl
clc
ins
imul
mov
leave
fild
xor
aad
xchg
mov
es
aaa
dec
jmp
jbe
hlt
fwait
jae
ret
jmp
jae
mov
fisttp
xchg
mov
mov
jnp
adc
sub
ror
dec
sbb
idiv
inc
(bad)
mov
sub
call
std
and
rcr
add
fdivr
cmp
cmp
int
jo
dec
cdq
push
push
dec
push
and
push
adc
jno
push
push
xchg
fimul
dec
in
push
fldenv
push
sbb
mov
sbb
pop
inc
fs
bound
(bad)
aad
and
test
xchg
(bad)
cdq
adc
mov
(bad)
stc
leave
mov
sbb
xor
ins
call
xchg
(bad)
mov
std
mov
add
in
shr
jbe
int3
push
aas
popa
ss
cmp
(bad)
sar
adc
les
sub
test
lock
and
out
fisttp
cmp
mov
mov
shr
test
mov
pop
mov
mov
rol
lock
leave
mov
pop
outs
mov
jno
iret
pop
push
dec
out
cmc
mov
(bad)
mov
cmps
fnstsw
aas
out
ss
xchg
add
stc
jbe
jecxz
cld
ds
arpl
out
mov
movs
(bad)
in
push
or
cwde
es
or
mov
aaa
push
ret
sub
fnstenv
sub
cmp
push
lods
and
or
mov
dec
sbb
mov
int3
cmp
fstp
int3
cmp
pusha
enter
retf
mov
sub
sar
adc
gs
std
pop
push
std
mov
mov
mov
xchg
cwde
pop
push
arpl
xlat
repnz
push
jo
jmp
sub
aaa
push
sbb
sub
mov
pop
mov
addr16
add
(bad)
rcl
sub
sahf
adc
xor
adc
(bad)
in
arpl
aaa
test
xchg
aaa
pop
ja
pop
icebp
call
out
adc
scas
dec
mov
xchg
push
sti
popa
mov
test
(bad)
sti
cli
addr16
cwde
cli
pop
dec
ins
int3
sub
aas
lods
xchg
jge
out
xor
pop
mov
xor
xchg
shl
popf
mov
daa
cmc
dec
push
pop
out
cmp
and
cwde
push
adc
dec
dec
push
leave
pusha
xchg
add
sbb
pusha
add
cdq
xchg
jmp
iret
pop
scas
dec
inc
mov
lahf
inc
and
stos
xchg
adc
sub
mov
inc
sub
jg
push
ja
popf
test
mov
jg
popa
call
add
jno
scas
pop
mov
or
scas
mov
mov
popa
sub
cwde
aas
mov
sbb
sbb
lea
sbb
add
xor
xchg
xor
daa
pop
cmp
inc
cmp
addr16
pop
fnsave
xchg
retf
dec
xchg
ja
in
add
dec
loop
cmp
adc
add
lods
scas
movs
sbb
jne
jp
pushf
sbb
imul
daa
add
jmp
fistp
ins
out
mov
outs
inc
mov
cmp
adc
scas
sbb
test
push
mov
xchg
jl
jmp
pop
mov
mov
cmp
mov
aad
push
ret
test
ja
inc
jl
mov
cmp
or
xor
push
into
cmp
jnp
div
lods
sbb
fsub
xor
sbb
inc
loopne
gs
lods
in
cs
ja
push
mov
out
test
nop
repnz
fimul
pushf
sub
sbb
sahf
out
movs
cmc
push
and
fcomp
cmp
in
loop
dec
sahf
mov
or
pop
inc
outs
xchg
dec
ja
leave
and
pop
out
push
xchg
mov
push
push
push
sbb
pusha
cmp
outs
pop
or
mov
arpl
cmps
(bad)
leave
or
popa
adc
pop
clc
or
jbe
stos
xor
sub
unpckhps
clc
popa
stc
inc
and
sar
adc
push
call
stos
mov
adc
lock
mov
adc
mov
cmp
push
sub
arpl
js
es
pusha
push
loopne
dec
nop
pop
mov
add
outs
in
fdiv
dec
les
lea
cs
rol
sbb
stos
mov
test
shl
call
xor
das
xor
std
xlat
pop
cmp
mov
xchg
sbb
idiv
or
mov
stos
mov
xor
rcr
ja
mov
mov
and
sub
fwait
and
hlt
cmp
and
pusha
cs
dec
adc
aam
scas
aam
inc
test
mov
in
std
jmp
and
adc
sbb
int3
mov
adc
cmp
loope
hlt
sbb
xlat
sub
lock
dec
push
mov
sar
adc
and
xchg
add
sub
lds
add
add
cmp
jno
loop
ror
test
adc
lea
xor
cld
mov
aam
jo
mov
hlt
je
ds
sub
mov
inc
jl
pushf
xor
jle
push
and
xor
sbb
adc
dec
xchg
adc
dec
inc
dec
stos
shl
pop
pop
jno
mov
jo
lea
imul
sbb
jecxz
clc
jp
sbb
je
test
cmps
aam
or
xchg
mov
rcr
es
inc
pop
push
dec
cwde
hlt
pop
mov
and
dec
out
lds
loopne
test
daa
sbb
call
adc
scas
int3
mov
fild
out
scas
dec
pop
bound
sub
ja
adc
es
xor
mov
jnp
ins
add
(bad)
daa
jb
push
and
xlat
lods
xchg
inc
push
pop
ss
mov
jbe
cmp
push
sub
and
inc
adc
xor
dec
push
or
xchg
mov
fld
les
int
inc
pusha
mov
scas
mov
ret
stos
lock
std
lods
stos
and
add
outs
xchg
sahf
push
mov
cmp
xchg
mov
not
xlat
or
dec
inc
nop
ret
fidivr
daa
mov
fbstp
sub
ffree
adc
sub
cmp
xor
int
in
faddp
js
enter
mov
inc
adc
test
jns
dec
data16
push
out
data16
shr
jns
pushf
sub
jmp
stc
iret
cmp
out
mov
cmp
lods
jg
sub
in
int
std
imul
int3
popa
push
loopne
fild
in
imul
mov
add
jmp
mov
cld
aad
pushf
inc
jg
ds
and
pop
test
lahf
cmp
jno
xchg
cmp
scas
stc
clc
lods
rcr
sub
sub
cmp
es
jmp
push
jp
call
js
sbb
daa
bound
pushf
jle
fisubr
setb
scas
add
out
mov
add
dec
pop
movs
xchg
mov
clc
or
dec
dec
sti
outs
cli
(bad)
sub
rcr
mov
sub
in
imul
call
std
cs
mov
loop
cs
cmp
dec
lods
ja
sub
das
fsubr
mov
lock
pop
das
je
xchg
cmp
pushf
sub
adc
lock
movs
test
clc
(bad)
je
rcl
pop
ins
scas
imul
cmp
mov
out
cmp
sub
push
cmc
pushf
sub
sub
sub
mov
out
sbb
mov
mov
aaa
or
ss
xchg
shl
mov
xor
xchg
and
push
mov
fmul
and
or
lahf
pop
xor
in
mov
dec
sub
sub
cli
in
rcr
jns
jg
cld
pop
or
add
xor
addr16
hlt
add
das
clc
inc
out
push
push
cdq
pop
dec
jae
lahf
repz
mov
stc
fs
cmp
inc
clc
rcl
fnstenv
ds
(bad)
and
dec
lock
add
cmp
xchg
into
or
dec
mov
jge
add
jle
sahf
retf
daa
test
dec
into
sub
and
pop
pop
fwait
jp
push
mov
shr
sahf
out
(bad)
cmps
push
cmps
rcr
sbb
push
or
cmps
pop
fisub
mov
loope
add
pop
inc
test
popf
(bad)
dec
jecxz
and
mov
(bad)
test
out
out
jle
and
mov
sub
cs
aad
dec
add
xchg
sbb
or
pop
in
(bad)
ins
cmp
sub
push
mov
jp
dec
or
popf
pop
test
dec
inc
jmp
xlat
cmp
xor
shl
xchg
add
xchg
popf
out
push
add
dec
cwde
test
push
add
push
cmp
shl
fwait
outs
mov
popf
test
repnz
push
sub
cmp
xchg
jmp
nop
mov
adc
sti
movs
pop
sbb
push
outs
popa
lock
or
jp
cmp
out
ror
sub
mov
daa
enter
push
jae
mov
sti
daa
mov
xchg
aam
push
sbb
loopne
push
sbb
push
ds
aas
sub
das
dec
test
jmp
xor
adc
das
retf
nop
adc
xchg
loop
inc
scas
ror
idiv
adc
shr
xor
les
repnz
add
cmp
xchg
sub
int3
repz
mov
(bad)
fistp
ret
jnp
cs
imul
stos
aad
loopne
push
mov
hlt
repnz
cwde
movs
mov
outs
pop
mov
xlat
out
inc
add
and
hlt
mov
jns
inc
mov
das
xor
enter
sub
pop
bound
xor
test
jbe
int3
adc
jno
jae
push
cli
ds
es
xor
pop
xchg
jle
xor
mov
ss
hlt
out
ror
mov
loope
outs
jne
push
mov
jmp
pop
inc
test
or
movs
sub
dec
nop
cmps
mov
xor
jae
arpl
cmp
adc
outs
repz
lgs
sub
int3
or
and
jae
mov
jno
imul
sub
xchg
repz
fstp
cs
xor
pop
dec
xor
fisubr
mov
in
or
sti
inc
adc
or
lods
mov
out
call
sbb
sub
dec
cdq
adc
xchg
pcmpeqd
and
mov
mov
pop
inc
retf
das
push
mov
jmp
add
xor
xor
jne
xchg
pop
xchg
sar
(bad)
and
jp
out
fstp
test
out
mov
mov
lea
je
outs
mov
icebp
inc
(bad)
retf
stos
sub
es
in
cmp
xor
xor
ss
sub
(bad)
cli
cmp
outs
movs
fistp
push
jns
jno
outs
pop
dec
and
dec
in
(bad)
pushf
push
dec
jecxz
and
pop
repz
adc
mov
iret
push
ret
jmp
push
inc
cmc
mov
jno
sub
pop
jmp
sub
inc
arpl
(bad)
stos
mov
test
dec
aad
jo
test
xchg
and
xchg
into
test
or
mov
cmp
sbb
nop
(bad)
cmc
bound
std
rol
cli
jecxz
frstor
mov
jo
and
sub
adc
jmp
adc
cmp
addr16
outs
in
inc
retf
aas
cli
imul
fidiv
test
bound
fiadd
clc
mov
inc
mov
push
out
sbb
mov
push
add
cmc
add
repz
and
add
or
enter
inc
cmp
pushf
loopne
xlat
xchg
pop
dec
push
dec
cdq
jne
cmp
(bad)
scas
(bad)
push
in
ja
add
in
xlat
pop
mov
pop
(bad)
shl
imul
mov
xchg
out
push
pop
aaa
into
ret
es
cmp
std
add
pop
sbb
inc
jno
xchg
pop
pop
sub
lahf
mov
shl
clc
xor
ficomp
fs
jmp
xchg
sahf
cmp
or
pop
shl
(bad)
das
repnz
in
or
ins
(bad)
scas
ins
test
aaa
push
rol
mov
icebp
push
push
pop
cmp
shl
movs
push
clc
cmp
in
out
loop
sub
sub
jne
xor
add
lea
push
jp
(bad)
int
lea
aaa
mov
fnstsw
cs
sbb
mov
jae
in
xchg
mov
inc
adc
push
pop
mov
(bad)
imul
retf
test
bound
push
fld
imul
shr
mov
mov
xchg
xor
dec
inc
sbb
push
pop
popf
arpl
fadd
jecxz
pop
addr16
sar
or
aaa
mov
fisttp
scas
in
lahf
ds
fisubr
aad
fnstenv
push
inc
out
repz
leave
jg
sub
sbb
mov
cwde
ss
mov
lea
inc
loope
call
cdq
xchg
sub
js
jb
dec
jnp
xlat
cmp
es
mov
cmp
(bad)
mov
in
int3
pop
pop
mov
ins
int
cmc
(bad)
sub
arpl
cmp
push
add
in
inc
xchg
mov
adc
push
mov
std
gs
dec
cmp
pop
sub
call
daa
mov
xchg
mov
sbb
jb
dec
fisttp
loop
movs
mov
xor
pop
jl
lock
inc
nop
shl
or
cmc
fsubrp
mov
adc
dec
and
dec
inc
pop
pop
and
mov
popa
lods
mov
mul
out
mov
xchg
mov
pop
or
aas
push
fimul
int
adc
movs
sbb
sbb
mov
lods
or
int
scas
jmp
adc
dec
sti
inc
sbb
xor
gs
sub
inc
mov
adc
(bad)
pop
xor
mov
into
xchg
mov
dec
xor
scas
out
mov
pop
and
inc
mov
push
call
cmp
popf
loopne
popa
inc
test
stos
shr
ins
ss
fsub
push
sbb
push
sub
xor
lods
popf
mov
enter
jl
or
clc
sar
jp
push
dec
add
push
fstp
dec
mov
repz
ins
stos
imul
cmp
xchg
cmp
jp
mul
mov
mov
dec
and
nop
jmp
fist
xchg
test
iret
push
in
and
xchg
xor
mov
jge
fs
lds
sbb
pop
add
cdq
iret
leave
lods
cmps
hlt
out
rcr
sbb
and
xchg
sbb
and
popf
add
je
jl
je
ficom
and
add
imul
jmp
std
aas
xchg
lahf
jg
out
scas
in
inc
mov
lds
daa
sahf
fucom
popf
add
sbb
call
xor
hlt
adc
jne
push
int
mov
mov
push
(bad)
shl
jbe
outs
push
add
mov
mov
mov
jle
jnp
jns
test
adc
fwait
dec
ja
jae
not
das
cmp
js
rcr
nop
xchg
jl
fisub
pop
(bad)
xchg
xchg
in
aaa
xchg
scas
add
push
xchg
clc
cmp
sar
ret
mov
das
std
jns
(bad)
push
jne
stc
xchg
(bad)
push
jg
call
neg
push
enter
adc
jnp
jns
mov
mov
lods
pop
les
adc
sar
push
xor
cmp
adc
out
jmp
test
mov
cmps
(bad)
inc
leave
pop
rol
mov
in
or
jns
movs
sub
mov
ds
not
mov
fcom
mov
cmp
ins
xchg
or
jb
add
inc
rcr
and
shr
(bad)
or
inc
outs
hlt
sbb
pop
sub
ss
mov
test
and
sub
inc
push
shl
clc
and
xchg
ror
jb
adc
aam
sbb
cli
imul
cmps
nop
sub
cmps
mov
mov
jp
pop
cmps
sub
pushf
mov
nop
cmp
cmps
out
jmp
ja
and
lea
adc
add
ds
inc
aam
or
cli
hlt
iret
cmp
cmps
jl
and
jns
push
in
into
sbb
mov
fidiv
jnp
ror
and
cli
mov
jnp
jmp
and
sahf
cli
pop
push
push
scas
adc
sub
aas
xchg
out
jo
pop
jne
lahf
rcl
push
mov
dec
aas
pop
adc
mov
(bad)
call
in
mov
iret
std
call
movs
cdq
sar
adc
inc
cli
sbb
test
jbe
or
add
pop
rcr
dec
push
test
lfs
sbb
sbb
loope
adc
and
mov
mov
xchg
call
fisubr
jns
adc
cmp
lahf
sub
xor
in
jb
add
stos
xor
xlat
leave
in
cli
nop
pop
cld
test
aaa
push
out
call
rol
add
lods
test
sub
stc
adc
in
dec
add
mov
push
fcmove
retf
pop
jnp
neg
(bad)
cmp
(bad)
cmps
cmp
daa
pop
push
cmp
mov
sub
dec
repz
inc
pop
mov
imul
or
ret
leave
fnstsw
js
jnp
enter
dec
popf
sub
jnp
bound
test
sub
adc
push
hlt
popf
cli
pop
imul
push
cmp
rcl
xchg
ror
or
inc
jns
mov
repz
lea
int
or
outs
push
popf
icebp
in
push
adc
push
mov
popa
sbb
xchg
and
dec
sbb
push
add
push
inc
iret
pop
mov
add
sub
mov
scas
jne
xchg
dec
loop
or
mov
cmp
lds
(bad)
lds
jmp
push
xor
jl
ins
xchg
fs
movs
mul
pop
sti
clc
add
sub
sub
rol
cmp
add
imul
test
movs
ret
cmp
and
push
mov
or
xchg
xchg
in
or
sbb
leave
xor
and
ins
lods
or
and
jmp
cmp
adc
jns
push
cmovns
pusha
mov
sub
das
bound
adc
int
mov
sbb
in
pop
test
jl
ins
sub
mov
nop
out
pushf
xchg
std
enter
xor
stos
shr
push
jae
call
lods
cmp
mov
cli
mov
xor
or
sbb
mov
push
xor
fld
cmp
pop
cmp
fwait
outs
mov
bound
or
scas
add
lea
sub
mov
mov
mul
jecxz
clc
and
mov
addr16
xchg
and
hlt
jmp
add
mov
loopne
sbb
xchg
cmp
or
sbb
pop
out
push
lahf
mov
jo
jns
push
xchg
stos
cmp
pop
fsub
fdivr
idiv
shl
pop
mov
jo
imul
and
cmp
mov
neg
int3
retf
sub
dec
adc
cld
mov
sti
shl
xchg
or
and
rol
sahf
sub
adc
cmp
jge
mov
dec
add
repnz
(bad)
dec
hlt
ss
jmp
loopne
dec
repnz
jle
(bad)
test
dec
dec
cs
jne
out
xor
in
mov
ret
loop
and
mov
dec
push
sub
sar
out
es
cmp
js
test
sub
inc
push
sub
add
adc
icebp
gs
idiv
rol
and
adc
pop
cmps
mov
dec
xchg
les
outs
pop
test
call
enter
pop
mov
jp
fisubr
dec
dec
xor
les
add
inc
stc
sub
daa
test
pop
mov
jle
and
cmp
out
out
xor
adc
and
jo
mov
pop
cwde
mov
mov
xchg
and
cmp
mov
adc
mov
ja
nop
inc
jg
movs
call
mov
adc
ja
iret
nop
mov
es
mov
cmp
cdq
es
loop
pop
add
sub
add
je
sbb
loope
(bad)
je
pop
leave
test
sbb
cmp
mov
jg
data16
stos
sbb
int3
xlat
in
sub
push
mov
mov
dec
gs
es
adc
jb
jo
or
xchg
add
push
cmps
mov
inc
or
stc
cmp
and
rcl
jnp
mov
arpl
inc
inc
fwait
cwde
xor
lods
out
stc
sub
or
pop
enter
cmc
(bad)
mov
and
js
or
repnz
aas
ds
dec
mov
mov
rol
add
inc
aas
push
xchg
ja
dec
dec
enter
sub
ds
out
adc
xchg
aam
push
call
repnz
movs
and
dec
adc
int3
xchg
dec
cli
and
mov
cmp
and
cmp
xchg
add
adc
push
(bad)
xlat
mov
sub
enter
xchg
mov
inc
(bad)
mov
pusha
fdivr
push
add
add
das
int3
xchg
rcr
daa
cli
ret
mov
pop
or
(bad)
dec
imul
popf
lea
popa
mov
sbb
ins
push
or
xchg
jae
mov
adc
mov
and
int
cli
xchg
out
jmp
and
add
inc
add
imul
(bad)
xchg
push
ds
jecxz
outs
jg
ret
add
imul
mov
mov
ficomp
and
(bad)
mov
adc
mov
aaa
mov
fwait
ss
cmp
shl
je
pusha
cld
pop
test
aad
adc
xor
inc
jg
mov
adc
push
inc
inc
mov
jne
jns
jmp
cmp
jmp
xchg
int
addr16
mov
mov
inc
sub
cmps
scas
mov
ror
sar
jl
retf
dec
mov
pop
jl
sbb
lods
out
sti
fld
mov
(bad)
gs
adc
adc
stc
mov
inc
xor
out
call
out
adc
mov
fbld
push
fucomi
ins
push
inc
sub
paddd
aam
or
sub
pop
pusha
ret
jecxz
mov
retf
in
dec
aad
xor
arpl
xor
xchg
or
mov
adc
leave
bound
push
int
loopne
inc
adc
and
sbb
enter
fsubp
sub
fmul
xchg
xchg
dec
or
mov
pusha
jmp
icebp
shl
dec
pushf
mov
jge
mov
ds
loop
inc
out
std
xlat
and
in
js
sbb
mov
inc
mov
sbb
mov
stos
push
sub
mov
sbb
iret
xchg
daa
imul
call
add
mov
(bad)
xchg
or
lds
daa
mov
ss
and
jns
inc
jnp
xchg
in
ret
sbb
into
push
mov
dec
jno
je
sub
xor
repz
pop
pop
xor
mov
in
xor
mov
inc
mov
and
or
mov
mov
repnz
or
test
xor
in
jns
sbb
cmc
jne
sbb
pushf
fldenv
add
jo
out
adc
imul
test
je
fwait
inc
out
test
aas
fwait
or
fwait
cmp
xchg
mov
sbb
dec
xchg
inc
xchg
sbb
sub
inc
cli
aaa
mov
loope
sbb
test
mov
ret
dec
jecxz
(bad)
clc
mov
dec
jbe
mul
gs
cmp
and
jl
icebp
pop
jecxz
jae
in
movs
pop
push
sbb
xor
fcom
out
sti
xor
sbb
mov
xchg
shl
mov
adc
jne
push
xchg
jae
ss
test
imul
add
pop
clc
push
push
jne
push
inc
mov
add
push
push
in
mov
sbb
sbb
stos
jne
cmc
xor
outs
(bad)
loope
rcr
cmc
das
sahf
push
sbb
popf
daa
clc
push
rcr
xlat
popf
es
das
fdivr
adc
hlt
call
dec
in
cmps
shl
xor
push
jnp
imul
jmp
and
add
push
addr16
call
out
(bad)
popf
outs
(bad)
jae
fisttp
fidivr
(bad)
in
and
scas
outs
adc
inc
sub
xor
dec
pop
(bad)
pop
cmp
push
sbb
sti
in
std
inc
cmps
inc
sub
mov
(bad)
pop
jnp
das
push
add
out
mov
mov
mov
mov
cmp
mov
xchg
fcom
test
pop
leave
adc
js
xchg
out
stos
jmp
jl
jp
mov
xlat
fdivr
or
aas
shl
inc
mov
sub
push
mov
cmp
mov
test
shl
je
or
test
or
movs
enter
js
ins
test
dec
or
pop
sub
jo
sbb
sub
cmp
rcl
xchg
pop
es
frstor
cld
in
pop
pop
aaa
mov
sahf
pop
inc
xor
int
jne
shl
aas
(bad)
popf
push
rcl
or
adc
div
xchg
pop
and
jb
and
mov
movs
pop
push
push
pop
neg
shr
gs
fisttp
cmp
imul
inc
push
rcl
shl
mov
jae
outs
js
inc
out
shl
test
and
loopne
adc
sbb
adc
mov
stos
adc
sbb
jge
push
nop
icebp
lds
retf
jae
retf
stos
sub
cmps
adc
enter
fsub
retf
imul
push
mov
ja
mov
push
lods
bound
sub
mov
mov
add
sbb
gs
test
xor
call
xchg
add
rcr
cwde
mov
fidivr
push
jno
fdivr
leave
in
cmp
leave
out
mov
mov
loop
gs
(bad)
fadd
lds
hlt
movs
int3
fcom
xchg
or
sahf
in
out
adc
push
add
ret
push
mov
xchg
xchg
sbb
dec
les
inc
adc
in
mov
lods
sub
add
xchg
dec
cdq
cmp
jg
sbb
jp
jae
sub
adc
les
mov
ja
xor
sahf
repnz
and
daa
and
cwde
pop
loopne
xchg
dec
ficomp
adc
or
fst
jecxz
dec
cmp
cmp
(bad)
(bad)
aad
bound
ja
add
mov
push
movs
int
jne
inc
outs
std
(bad)
jbe
xchg
inc
xchg
lods
ins
iret
loop
cmp
dec
xchg
xchg
jmp
mov
movs
popf
pop
xlat
fsubr
lahf
pop
outs
or
dec
retf
cmp
enter
jo
mul
movs
(bad)
dec
mov
pop
cvtps2pd
cdq
xor
test
aas
js
sub
add
inc
jmp
pop
movs
(bad)
mov
mov
xor
cmp
or
add
or
xor
dec
inc
addr16
xor
lds
stos
add
mov
sub
dec
xchg
mov
sub
inc
xor
ins
cmp
into
pop
add
sar
xor
cmps
(bad)
xor
push
out
jmp
jle
movs
repnz
cmp
xchg
bound
loopne
jecxz
imul
inc
pop
jmp
fld
fld
push
call
dec
jo
out
or
pop
js
xor
jecxz
adc
inc
pop
aaa
cmps
lods
daa
jo
int
pusha
sub
sbb
add
push
adc
inc
pop
cld
inc
cld
scas
pop
data16
or
jg
inc
or
retf
push
dec
call
cs
inc
stc
jge
mov
imul
push
gs
mov
popf
das
cs
(bad)
fwait
rol
out
fcom
fs
sbb
sbb
dec
jnp
push
repz
shl
add
and
push
jns
test
(bad)
popf
clc
int3
stos
dec
aaa
and
mov
push
cmp
xchg
mov
addr16
cli
pushf
inc
repz
(bad)
or
add
xchg
and
pop
push
dec
pop
nop
cwde
(bad)
sub
shl
mov
int3
aam
jmp
jmp
imul
cmps
pusha
fisubr
int
add
inc
mov
out
cmps
lods
lods
mov
popa
inc
adc
stc
mov
popf
pop
stos
(bad)
adc
lahf
shr
jmp
mov
cdq
mov
dec
and
push
adc
add
push
sahf
stos
shl
(bad)
cld
jmp
ret
or
adc
popa
pop
in
call
mov
xor
movs
mov
jecxz
arpl
je
les
add
adc
sbb
adc
fst
jle
sahf
lds
mov
or
cmp
xor
mov
cdq
mov
test
inc
popa
and
and
push
sti
lds
iret
cld
pop
lds
(bad)
mov
jne
and
mov
dec
imul
stos
jp
retf
inc
mov
mov
xchg
or
retf
out
test
jnp
and
xor
leave
pop
jl
mov
retf
daa
push
xor
lea
jl
or
cmp
fsub
add
or
jge
jb
std
adc
stos
int
test
mov
retf
and
je
rcr
push
vcvtss2si
ins
call
mov
jg
jp
mov
repz
dec
aas
xlat
mov
repz
pop
call
cmp
sbb
mov
sub
pop
push
adc
cwde
hlt
(bad)
not
pop
retf
mov
js
sub
pop
inc
je
shl
mov
dec
aam
imul
les
and
and
adc
cmp
push
or
xchg
push
call
mov
mov
inc
mov
inc
add
shl
mov
shr
inc
lds
or
dec
xchg
out
mov
add
jle
std
fs
je
hlt
adc
in
call
scas
and
sbb
xchg
leave
and
cmp
js
mov
mov
lock
mov
cdq
mov
inc
jo
call
outs
dec
shl
in
sub
dec
dec
dec
xor
adc
or
rcl
xlat
xchg
bound
rcr
dec
or
out
xor
pmaxsw
sub
jnp
inc
mov
ds
mov
ja
cmp
and
in
lock
mov
int3
arpl
mov
xchg
mov
adc
fs
push
(bad)
adc
ret
pop
mov
aad
int
ret
test
push
sub
nop
inc
sub
mov
adc
cmp
(bad)
adc
xchg
test
sbb
es
xchg
sbb
inc
aaa
xchg
and
mov
mov
loopne
dec
fst
mov
dec
ret
cmp
or
mov
fnstsw
arpl
add
sub
dec
pushf
mov
jno
sbb
push
out
and
imul
add
add
dec
jge
(bad)
mov
sbb
repz
movs
icebp
scas
inc
lods
out
sub
inc
repz
fsub
mov
icebp
add
fdiv
push
cmp
cmps
call
ds
ja
dec
pop
push
adc
jae
repz
cmp
sbb
stos
pop
loop
or
movs
pop
pop
frstor
repz
mov
xchg
sub
pop
sub
dec
and
(bad)
cmp
and
and
ror
push
jne
jb
movs
sub
fs
addr16
mov
test
cmps
outs
add
popa
fsub
(bad)
test
adc
adc
adc
xor
outs
cmp
(bad)
ins
inc
mov
retf
dec
inc
cmp
cmp
mov
fmul
push
mov
sahf
cld
xor
daa
adc
pop
in
and
jne
cwde
dec
and
jo
pop
jle
inc
sbb
jmp
push
(bad)
or
stos
pop
mov
dec
jnp
push
lods
xor
dec
stc
emms
and
retf
xor
push
mov
dec
pop
push
daa
cwde
or
cmp
dec
movs
or
xor
or
inc
xor
retf
imul
(bad)
inc
cmp
adc
sahf
(bad)
or
mov
and
aad
pop
add
loop
nop
inc
inc
mov
mov
and
sahf
or
cwde
jp
xchg
imul
sbb
xor
icebp
jp
lahf
adc
mov
das
inc
mov
inc
and
push
scas
xchg
retf
out
ds
inc
pop
imul
movs
shr
mov
pop
(bad)
in
ins
or
shl
mov
pop
jae
leave
xchg
mov
sub
loop
xchg
mov
adc
pop
sbb
imul
mov
sar
outs
pop
xchg
(bad)
xor
movs
mov
cmp
fimul
test
cmp
iret
push
xor
mov
cmp
scas
push
mov
inc
push
ret
and
fimul
pushf
stc
sub
in
sti
xor
mov
shl
fld
cmp
into
outs
jnp
into
sub
sbb
jecxz
sub
pop
les
imul
mov
das
xor
add
inc
leave
push
cmp
cdq
jne
shr
sub
xlat
shl
jo
mov
outs
mov
movs
push
sahf
fstp
(bad)
iret
cli
inc
jecxz
sub
xlat
inc
lock
sbb
mov
scas
cmp
scas
cmc
jle
out
inc
dec
cmp
fmul
retf
loopne
jns
sahf
mov
nop
addr16
arpl
sti
pop
or
or
sub
push
mov
icebp
in
jnp
jg
xor
aas
add
mov
push
mov
sub
pop
sbb
fcom
jmp
xor
mov
xchg
popf
int3
(bad)
mov
mov
mov
movs
mov
adc
loopne
sub
test
loope
push
cmp
stos
push
push
sti
loopne
inc
in
mov
loope
add
or
cdq
cld
pusha
push
sbb
dec
mul
scas
sahf
sub
cmp
pop
add
mov
cwde
cmp
sbb
test
push
in
inc
add
sti
neg
cmps
ins
fild
or
mov
call
sub
adc
sbb
dec
mov
mov
jns
cld
dec
fidiv
xchg
cmps
xchg
dec
push
fdivrp
cmp
mov
jo
popf
ds
push
sahf
sub
out
or
jno
pop
and
sub
pop
jo
imul
jle
les
inc
movs
retf
cmovp
pop
fcom
les
mov
push
mov
popf
mov
xor
pop
inc
ins
imul
fsub
daa
lods
sub
test
mov
jmp
repnz
pop
inc
(bad)
pop
mov
adc
or
mov
inc
out
(bad)
mov
sub
mov
imul
pop
xor
or
cmps
shl
push
nop
xor
sahf
xchg
test
cwde
daa
imul
fsub
arpl
mov
mov
enter
pop
sub
pop
or
cmc
bound
jo
jb
push
mov
sbb
pop
push
inc
stos
push
cmp
out
icebp
jns
daa
lods
in
(bad)
lods
outs
daa
in
dec
mov
icebp
imul
rol
cwde
inc
dec
xchg
mov
out
adc
clc
jno
mov
xchg
or
lahf
ins
arpl
test
cmp
das
jmp
mov
jge
ror
add
xchg
ret
sub
jl
inc
inc
dec
add
sub
xor
shl
sahf
or
popa
iret
xchg
push
mov
adc
pusha
imul
or
add
repz
shl
stos
movs
sbb
data16
(bad)
out
push
or
xchg
cmc
ins
mov
jmp
push
mov
pusha
mov
pop
stos
pop
fldenv
inc
mov
xlat
mov
aaa
rcr
xchg
cmp
(bad)
inc
in
int
(bad)
cmp
ds
les
adc
add
lods
rcr
mov
shl
in
sahf
inc
push
fstp
cmp
pop
(bad)
loopne
dec
and
xchg
pushf
mov
bound
and
scas
adc
xor
(bad)
push
inc
ds
ins
jmp
outs
(bad)
enter
ins
adc
or
xor
es
xor
retf
data16
mov
push
pop
pop
dec
jb
pop
std
dec
dec
dec
cmps
stc
data16
call
cwde
mov
jbe
ret
push
out
mov
int
mov
fiadd
jg
xor
lea
pop
xor
scas
xchg
cmp
jmp
int
or
push
pop
into
lahf
push
adc
pusha
test
push
dec
push
in
inc
enter
call
cmp
mov
rcr
call
je
cmp
les
jmp
push
lahf
out
push
cs
aas
push
dec
xchg
push
sub
jno
inc
in
xchg
sbb
ret
sti
pop
sahf
xchg
lds
dec
jle
xchg
jp
lahf
enter
xor
ret
iret
xor
call
inc
cmp
shl
pop
cmp
adc
xor
aad
or
(bad)
iret
mov
inc
push
test
inc
and
hlt
sbb
add
fdiv
mov
mov
pop
int
ret
(bad)
dec
inc
mov
ss
out
pusha
cmc
(bad)
sbb
repz
mov
and
mov
mov
inc
add
mov
test
mov
jle
or
jno
pusha
adc
jne
loop
push
das
scas
imul
pop
cmc
js
sub
push
dec
xchg
push
out
repnz
add
push
and
mov
cli
and
jmp
pop
and
mov
or
xlat
add
js
rcl
into
jmp
sub
fild
and
mov
dec
ds
or
sub
pop
jns
sahf
push
fild
mov
inc
mov
add
neg
pop
xchg
xchg
jg
int
jl
imul
pop
xchg
lods
push
nop
mov
and
mov
sub
(bad)
ins
aam
xchg
xor
mov
pop
fiadd
inc
out
js
call
cmp
pop
add
mov
pop
pop
push
cdq
sub
inc
and
xor
lods
inc
jb
lds
pop
jnp
call
adc
jle
shl
push
pop
push
adc
sub
enter
lods
cdq
ficomp
inc
nop
inc
test
push
mov
icebp
add
movups
adc
aam
jmp
xchg
pop
movs
adc
sbb
add
lea
jge
retf
psubusb
mov
repz
or
dec
js
inc
mov
das
sub
xor
inc
pop
cmp
lock
jo
scas
mov
inc
mov
push
rcpps
xchg
xchg
lods
dec
mov
mov
dec
or
ret
and
cmp
test
sti
dec
mov
fimul
mov
cmp
mov
inc
sbb
xchg
push
mov
or
jl
push
jl
outs
cwde
fcomp
sbb
call
imul
fadd
ins
pusha
jne
xor
dec
mov
popa
xor
stos
leave
icebp
inc
pop
xor
push
pushf
cmp
iret
fnsave
jbe
cwde
test
jb
sub
mov
(bad)
push
shr
xchg
mov
jb
test
cmp
popa
cdq
(bad)
pop
add
sub
mov
add
movs
pop
adc
shr
xchg
cmp
aas
test
je
out
xor
adc
rcl
bound
inc
pushf
(bad)
or
cmps
outs
sbb
mov
int
sbb
and
ficomp
fisubr
xor
fwait
out
push
(bad)
imul
pop
xchg
dec
arpl
stos
xchg
int3
ins
rcl
mov
div
push
xor
xchg
(bad)
outs
mov
xor
adc
aas
inc
xor
adc
inc
pushf
sbb
jp
jno
ins
sbb
pop
push
push
push
div
enter
loope
sub
call
push
or
mov
out
and
in
mov
ss
or
addr16
cmp
dec
mov
in
movs
sbb
bnd
std
(bad)
stos
lahf
push
dec
sub
rol
mov
fdiv
mov
push
inc
sbb
hlt
sbb
das
mov
mov
lods
pop
clc
adc
adc
or
shl
out
outs
or
adc
in
mov
lea
jo
cli
leave
sub
inc
sub
inc
inc
push
push
jno
lock
xchg
mov
sbb
mov
loop
mov
dec
das
stos
mov
sub
int3
aad
lock
jae
sbb
popf
mov
das
stos
or
jl
lea
das
das
pop
nop
pop
hlt
ins
hlt
sbb
lea
jge
xchg
push
scas
das
fwait
dec
sbb
fst
sbb
push
and
push
sbb
mov
sti
outs
fnsave
lea
pop
jl
sub
sbb
mov
sub
mov
leave
lock
xor
pop
ffreep
ror
repnz
sub
cld
cli
std
sub
cmp
ja
lea
repz
and
jecxz
pushf
std
inc
sbb
xor
icebp
(bad)
jge
aaa
aas
and
adc
pop
bound
and
or
daa
ret
xor
test
pusha
call
mov
nop
dec
cdq
jno
and
mov
or
or
jbe
mov
pushfw
inc
xchg
(bad)
mov
push
fisttp
cdq
xchg
jnp
dec
in
movs
fs
cs
xchg
outs
xor
push
push
adc
js
clc
mov
dec
not
movs
enter
pop
jg
mov
push
inc
test
mov
mov
sbb
mov
mov
sti
enter
jnp
xchg
pushf
mov
cld
pop
adc
cs
jno
(bad)
data16
jp
xchg
xor
or
outs
xchg
push
add
cwde
ins
xor
pop
std
aas
jge
mov
or
stos
mov
inc
push
ins
mov
scas
cmps
data16
aas
(bad)
test
add
mov
aas
xchg
xor
jbe
(bad)
mov
nop
out
jno
and
adc
cmp
es
fadd
dec
xchg
inc
adc
inc
push
dec
test
jge
jne
in
ins
neg
fisubr
nop
loope
nop
lods
imul
sub
mov
push
mov
call
inc
loop
push
ins
pop
jg
inc
frndint
(bad)
mov
pop
and
out
movs
imul
js
jbe
scas
call
ret
push
les
fistp
sbb
rcl
dec
loop
pushf
cmp
not
or
stos
push
mov
add
stc
mov
dec
hlt
cld
cmp
mov
test
add
pop
lock
and
shr
jmp
rol
jecxz
cmps
in
scas
jg
jnp
pushf
mov
in
daa
mov
inc
sub
(bad)
jge
cmp
mov
dec
or
mov
mov
xor
inc
xor
mov
es
mov
mov
les
pop
sar
or
xor
out
or
cmps
mov
test
es
mov
repz
and
mov
mov
lods
not
lock
dec
cmps
sbb
adc
sub
ror
fisttp
jmp
push
xor
sbb
push
scas
outs
xchg
scas
mov
call
loopne
out
stc
mov
push
pop
arpl
out
retf
inc
sub
sbb
and
mov
es
sti
and
fimul
jmp
inc
pop
jmp
movs
jno
leave
or
and
ret
dec
mov
dec
adc
pop
push
add
ffreep
and
aad
xchg
and
cmps
inc
sub
mov
or
es
or
sbb
pop
pop
mov
and
fdiv
mov
fist
popa
out
retf
inc
adc
cli
or
stc
inc
push
(bad)
mov
jp
outs
dec
shl
inc
add
mov
mov
ror
out
jmp
(bad)
into
xor
adc
fild
retf
and
jo
aas
and
nop
addr16
xchg
cli
(bad)
xchg
push
jo
pop
sti
or
mov
mov
xchg
ins
fmul
dec
push
xor
inc
push
pop
popa
cdq
std
rcr
adc
mov
sbb
and
aad
mov
mov
sbb
cmp
mov
dec
mov
pop
sbb
jmp
sub
lds
enter
jno
sub
ins
inc
push
jmp
gs
sti
inc
stos
cmp
sbb
aad
adc
pop
inc
and
frstor
idiv
adc
mov
mov
jl
arpl
mov
ret
clc
jmp
(bad)
and
leave
mov
std
fwait
das
xchg
inc
jmp
sub
xlat
jmp
cmp
xor
add
gs
mov
into
xor
ficom
xchg
jnp
ins
or
test
add
xor
pop
mov
(bad)
cld
or
movs
push
mov
dec
mov
shl
xchg
mov
add
xchg
movs
mov
call
mov
fxch
lea
and
cmp
iret
mov
dec
in
ins
mov
add
mov
hlt
pop
mov
stos
fnstcw
xor
and
add
or
stc
arpl
int
or
add
push
iret
pop
(bad)
(bad)
fstp
loopne
adc
inc
popa
ins
fbstp
cs
add
imul
in
or
daa
mov
mov
xchg
add
xchg
or
jle
mov
jmp
adc
mov
retf
and
rol
adc
and
pop
pop
ss
icebp
dec
mov
sbb
ja
cwde
xor
pop
push
adc
mov
pop
and
adc
or
je
test
inc
push
add
pop
ds
das
adc
movs
xchg
jo
lea
(bad)
lods
dec
rcr
repz
leave
mov
data16
xor
repz
ss
mov
shr
push
iret
sbb
dec
stc
push
mov
sub
and
dec
sub
ja
or
lock
jns
mov
pushf
aas
std
or
sub
jecxz
mov
push
aad
inc
or
shl
imul
fcomp
cmp
retf
mov
outs
stos
outs
and
push
dec
pop
gs
outs
les
or
inc
mov
adc
mov
and
xchg
and
je
and
call
mov
pop
stc
(bad)
add
jl
adc
popf
call
loopne
jbe
aaa
out
push
sub
and
icebp
cmps
push
inc
mov
jns
cmp
pop
add
xchg
call
(bad)
sub
inc
bound
retf
xchg
je
mov
mov
adc
add
lds
add
sbb
fsubr
pop
or
xchg
pushf
jp
cmp
or
add
movs
fs
fwait
shr
and
fstp
data16
dec
bound
nop
and
mov
fist
jle
out
cdq
lahf
dec
or
dec
jle
icebp
inc
cmps
jne
xchg
push
mov
test
in
xchg
movs
inc
jmp
sti
adc
dec
imul
adc
mov
push
mov
loopne
cs
mov
jo
enter
xor
aad
cmp
jp
fcmovb
in
sbb
je
ficom
dec
int
dec
ins
fldenv
movs
cmp
mov
sbb
mov
lea
push
mov
jl
pop
inc
sbb
lods
das
fwait
adc
pop
mov
repnz
dec
rcr
push
adc
and
sbb
sbb
call
addr16
jg
iret
ror
ror
xchg
xchg
push
sbb
push
push
pop
shl
or
xchg
mov
adc
mov
imul
retf
inc
popf
push
xor
scas
push
mov
lahf
cmp
add
push
mov
icebp
xchg
xchg
movs
cmp
repnz
adc
int
or
xor
dec
xchg
jmp
das
and
aad
imul
adc
call
mov
jmp
lock
dec
enter
add
sahf
or
mov
jg
lahf
sbb
cmp
mov
pop
rcr
pop
add
aam
jno
mov
xor
cmp
dec
clc
inc
pusha
push
bnd
(bad)
(bad)
push
jb
push
sar
mov
rcr
ins
sub
lahf
lods
je
dec
and
and
cdq
cwde
mov
dec
jl
cmp
push
xor
dec
adc
mov
or
movs
loop
jecxz
and
inc
imul
(bad)
or
sub
shl
out
push
push
or
stos
cmp
inc
enter
aam
loope
call
or
mov
mov
push
xchg
mov
sub
push
jge
lods
inc
jb
inc
dec
cmp
(bad)
retf
(bad)
mov
xlat
test
frstor
jns
cmp
add
stos
aas
mov
aas
jmp
sbb
iret
cmp
sub
xor
jae
retf
xchg
mov
dec
xor
sub
test
pop
imul
cmp
mov
inc
call
or
dec
jbe
push
sbb
mov
dec
popa
nop
popf
adc
jno
in
push
dec
sti
enter
inc
xor
cmc
retf
dec
mov
mov
data16
mov
leave
aaa
and
pop
bound
call
jmp
mov
add
mov
mov
cdq
push
ja
pop
int3
push
jns
pop
xchg
pop
sti
ins
dec
sub
popa
and
push
ja
push
pop
sbb
or
lods
out
out
outs
jnp
loop
jne
jecxz
mov
cmps
fmul
jbe
cwde
pop
xchg
add
movs
add
and
mov
ficomp
inc
js
lock
or
push
les
sar
stos
jp
push
mov
inc
daa
dec
out
std
in
pop
push
jp
das
or
mov
ss
cmp
cdq
pop
mov
lods
into
ret
inc
dec
fist
ds
nop
fstp
popf
ja
mov
lock
les
sub
push
jecxz
ret
and
inc
fisub
cmp
imul
ins
cdq
xor
mov
test
add
and
fisttp
test
sub
dec
loope
loope
jmp
xchg
mov
add
push
lahf
adc
fisttp
sub
jno
shr
mov
jne
in
xchg
imul
ss
jae
mov
out
leave
cmp
mov
mov
les
push
sub
les
cld
rol
adc
loopne
sub
leave
mov
out
xchg
arpl
das
cmp
adc
push
fld
loop
inc
mov
mov
mov
into
test
inc
fstp
mov
add
add
test
test
mov
xchg
repz
jl
popf
ret
retf
shl
stc
push
repz
sub
inc
xor
xchg
mov
sub
dec
hlt
in
jbe
inc
into
clc
cmp
out
pop
mov
mov
sbb
je
inc
popa
cmps
or
sbb
jle
and
out
and
xlat
fild
out
jo
les
jge
fild
pop
adc
dec
mov
pop
jp
or
lods
lods
test
aaa
cdq
lahf
das
popw
sub
mov
in
aas
bound
push
mov
mov
xor
and
repz
mov
or
mov
test
loope
jl
cmc
push
cmp
rol
int3
lahf
dec
lods
xchg
mov
adc
stos
mov
sbb
gs
add
sbb
mov
cdq
das
lds
inc
leave
loopne
sbb
xchg
fstp
cli
inc
cli
sar
std
sti
enter
push
lods
movs
push
or
call
sbb
jle
jle
test
xor
into
inc
add
or
pop
xor
repz
sub
push
fwait
movs
pop
push
mov
faddp
push
push
dec
ins
pushf
fiadd
and
imul
pop
sub
xchg
mov
std
fidiv
ds
dec
mov
ror
jmp
cmc
sar
or
mov
cmps
fnsave
dec
loop
xor
inc
sub
sbb
ret
inc
lock
sti
(bad)
jae
enter
sub
push
sbb
mov
push
mov
mov
mov
mov
or
pusha
xor
mov
lods
jge
loope
fld
inc
ret
mov
mov
and
or
and
repnz
loope
push
lea
mov
in
call
ss
js
int
pop
cmps
in
cld
enter
retf
int3
add
mov
pop
ja
psubusw
inc
aad
mov
and
sbb
test
xor
sbb
jae
sub
ret
adc
inc
outs
mov
cmc
inc
not
push
ds
jmp
mov
and
mov
lahf
jb
xchg
mov
imul
call
xchg
imul
sti
(bad)
and
add
lock
push
stos
fmul
sbb
outs
cmp
out
adc
das
push
xchg
mov
aas
movhps
in
dec
test
adc
cmp
cmps
sub
cmp
add
fist
push
imul
mov
cmps
shl
mov
sbb
mov
push
retf
cld
pop
sbb
mov
cmp
cmp
loop
or
add
inc
add
js
sbb
xchg
xor
pop
or
sub
inc
mov
into
add
push
repnz
cmp
xchg
daa
lock
mov
xchg
mov
lods
repz
and
retf
add
shl
push
jno
call
mov
sub
pop
ret
scas
int3
adc
jno
and
out
sub
icebp
mov
(bad)
jno
xchg
jg
sub
icebp
or
xor
cs
sbb
out
or
adc
les
adc
push
imul
in
xchg
gs
pop
sahf
mov
xor
mov
jo
pushf
inc
ret
xor
jle
and
fst
sbb
or
dec
fucomp
adc
add
inc
js
cli
mov
xor
inc
lods
jo
xor
stos
aad
xchg
pusha
adc
jp
mov
jle
mov
cmc
and
jbe
cmps
inc
ja
lods
ds
or
in
mov
retf
dec
adc
jns
xchg
or
sub
call
jae
(bad)
loop
movs
hlt
push
test
inc
stos
adc
jno
jmp
bnd
jge
pop
sbb
jnp
adc
imul
pop
push
xchg
out
int
sahf
rcl
or
dec
sbb
fs
mov
outs
push
mov
xchg
mov
or
inc
xchg
xor
fnstenv
mov
mov
jno
or
shl
pop
xor
and
ins
mov
xor
inc
cmp
fdiv
movs
adc
test
and
out
mov
mov
cmps
sub
cwde
push
mov
adc
lds
inc
inc
push
shr
jle
and
dec
xor
pop
pop
repz
inc
push
xchg
dec
push
jl
cmp
aaa
jmp
dec
cmp
adc
enter
push
cmp
in
jmp
mov
loopne
mov
test
push
int
sub
push
and
int
push
cwde
shl
jo
jle
repz
fcmovnu
push
call
or
inc
sub
popa
jle
or
shl
ret
push
in
jmp
or
popf
(bad)
jo
inc
mov
lock
jae
fcom
xchg
(bad)
jbe
jp
movs
push
add
push
fisttp
cmps
add
push
fs
push
int
mov
jns
mov
out
test
dec
mov
jmp
retf
retf
mov
ja
dec
out
push
stos
push
shl
retf
pop
out
loopne
jb
cmp
popa
adc
test
xor
icebp
mov
mov
mov
fisttp
xchg
pop
pushf
xlat
rol
(bad)
mov
fs
cmps
call
out
shr
inc
ja
mov
fs
inc
adc
jecxz
inc
adc
icebp
imul
or
test
add
or
push
mov
shl
and
out
xchg
mov
push
test
lahf
sub
retf
xlat
ja
adc
ret
outs
test
clc
lock
scas
jne
jae
ret
or
imul
sbb
sub
int
add
cs
mov
stc
lods
mov
mov
xchg
sbb
into
stos
mov
in
leave
popf
push
or
test
inc
push
pop
lods
jbe
daa
cmp
dec
push
mov
clc
in
test
mov
push
fnsave
out
mov
stos
arpl
mov
sbb
stos
stos
sub
xor
add
jle
sbb
repz
add
sub
retf
aad
(bad)
and
jmp
push
arpl
std
wbinvd
scas
xor
std
mov
xchg
aad
pop
loopne
gs
test
mov
xlat
mov
cwde
shl
mov
pop
mov
mov
cmp
xlat
mov
add
pop
jnp
ins
pop
adc
stc
cmps
and
dec
pop
sbb
(bad)
psrlq
mov
dec
mov
jle
jge
mov
fistp
ins
dec
je
loopne
adc
das
lods
in
dec
dec
test
xor
adc
push
and
retf
push
ss
mov
icebp
or
shr
or
fwait
jecxz
pop
cmps
mov
div
jmp
shl
jnp
ret
sub
xlat
outs
and
dec
ds
sbb
bound
jne
push
pop
mov
and
std
jle
cwde
movs
cmp
ins
sub
sti
push
add
cmps
clc
gs
mov
xchg
cli
les
dec
es
arpl
pop
jno
xchg
(bad)
call
outs
out
enter
hlt
and
cli
stos
push
fisub
push
and
(bad)
xlat
push
push
popa
retf
and
pop
in
xchg
adc
ds
gs
inc
mov
(bad)
fisubr
rcr
outs
pop
stc
outs
mov
fwait
test
ins
test
inc
out
jge
dec
jecxz
popf
outs
cs
mov
adc
inc
ss
in
add
std
cs
mov
push
dec
and
adc
loop
jge
js
stc
imul
enter
mov
sub
push
mov
xchg
outs
lds
adc
add
cli
repnz
mov
or
mov
rcl
jnp
mov
mov
push
aad
xor
inc
pushf
cmps
in
mov
popa
push
adc
rcl
ins
(bad)
xlat
fiadd
rcr
(bad)
scas
out
dec
(bad)
jecxz
sub
pop
sbb
inc
cmp
fdiv
cli
adc
mov
xor
or
fbstp
inc
jne
or
js
inc
xchg
les
hlt
(bad)
mov
jecxz
sbb
sar
paddw
nop
(bad)
mov
outs
sub
sbb
adc
in
retf
xchg
pop
dec
shl
fwait
out
daa
outs
sub
dec
push
jp
cmps
js
xchg
xchg
mov
mov
fild
xor
lods
cmps
int3
dec
add
ror
mov
out
pop
mov
mov
and
pop
pusha
and
mov
jge
dec
movs
in
xor
sbb
test
test
adc
jne
dec
push
scas
inc
(bad)
dec
movs
cdq
or
call
cmp
adc
lock
xor
jbe
arpl
mov
test
jne
cmp
scas
popa
and
push
or
adc
cmp
jecxz
sbb
jmp
xor
pop
adc
add
fdivr
jl
loope
loopne
cs
arpl
dec
pusha
je
cmp
lahf
mov
push
add
xor
cmp
ret
jge
and
mov
xchg
mov
test
fsubr
add
ja
push
int3
jl
mov
nop
das
std
stos
mov
jle
sahf
xor
xchg
or
mov
jae
pop
jp
ins
popf
jg
gs
mov
aad
shl
addr16
pop
cli
sti
mov
jmp
fldenv
xchg
dec
jbe
push
adc
cs
daa
mov
mov
adc
xchg
(bad)
sbb
mov
stos
pop
pop
aaa
cmps
lods
ins
push
inc
out
out
retf
ds
cli
mov
test
cmc
pop
jne
dec
pop
cmp
or
int
and
sub
cmp
enter
cmps
fist
ins
sbb
adc
mov
inc
pusha
(bad)
ret
push
test
or
cdq
dec
adc
and
hlt
jp
push
add
add
dec
jge
rol
xchg
aam
call
clc
jge
test
repnz
pop
sbb
popa
pop
sub
push
cwde
shr
jbe
push
xchg
push
scas
push
add
mov
push
cmps
(bad)
lahf
sbb
dec
in
popf
rcr
packssdw
and
(bad)
cmp
jle
pop
dec
jmp
add
pushf
js
sub
xor
aam
js
inc
or
out
icebp
mov
sahf
xchg
imul
mov
xor
dec
cld
sbb
test
leave
enter
test
add
mov
xor
and
inc
dec
outs
and
out
xchg
(bad)
pop
inc
push
iret
imul
sub
adc
jns
xor
dec
add
lds
mov
xchg
mov
mov
jecxz
add
mov
mov
push
push
cmps
cmp
ror
inc
mov
mov
gs
popa
ja
bound
mov
js
rcl
mov
jnp
test
movs
ror
jp
frstor
adc
and
mov
mov
cmp
iret
sub
add
ret
dec
das
aaa
push
sbb
pop
dec
jae
jmp
mov
mov
inc
arpl
sub
adc
gs
repnz
mov
loop
gs
adc
and
mov
pop
test
push
pop
cmp
ret
and
clc
jmp
fistp
mov
js
faddp
jns
je
cmps
pop
push
mov
popf
cmp
mov
xchg
lahf
imul
jmp
popf
pop
idiv
lds
pop
pop
daa
movs
pop
in
inc
test
mov
cmps
or
pop
icebp
dec
pop
push
add
sub
dec
jl
bound
js
jns
and
call
xor
stos
push
pop
std
add
and
mov
fwait
or
cwd
gs
pop
call
adc
xchg
and
inc
repz
mov
mul
jae
mov
inc
pop
je
mov
pop
je
adc
mov
mov
mov
imul
ins
(bad)
jne
dec
dec
xor
das
add
retf
les
test
mov
(bad)
mov
sub
mov
ret
dec
or
in
or
jmp
mov
fild
cwde
jge
sub
rcr
les
add
bound
test
out
mov
xchg
rol
stos
or
adc
add
xor
int3
jmp
movs
out
cmc
add
push
add
dec
xchg
sbb
repz
add
mov
sbb
adc
cmp
iret
into
dec
jp
inc
mov
cdq
cli
out
pop
sahf
out
clc
mov
xchg
pop
mov
outs
cld
prefetcht1
adc
and
gs
fstp
xlat
packssdw
(bad)
fistp
scas
ins
mov
fidivr
sbb
or
loop
jne
imul
leave
movs
and
xchg
leave
sub
test
pop
or
in
shr
(bad)
adc
mov
repnz
pop
jae
(bad)
dec
jo
xor
outs
je
mov
addr16
scas
jmp
icebp
sahf
std
daa
jae
add
xchg
arpl
int
test
xchg
add
xchg
cld
xor
retf
imul
xor
xchg
dec
push
mov
jns
call
movs
and
lock
push
repz
sub
push
dec
push
test
dec
inc
mov
popa
cmps
lds
mov
and
dec
xor
std
push
jge
je
jmp
add
das
ss
adc
mov
inc
mov
xchg
test
lds
adc
push
xor
mov
cmps
sysenter
push
mov
mov
mov
loop
mov
or
cmp
sub
daa
les
aas
or
stos
mov
dec
inc
int3
(bad)
jmp
cmp
push
rcr
pushf
cmc
int3
or
or
adc
jae
lds
sbb
jp
or
push
je
adc
inc
pop
pushf
imul
pop
(bad)
jne
push
inc
jns
outs
adc
repz
(bad)
jecxz
idiv
jge
ins
(bad)
mov
sbb
cmp
lods
mov
inc
xor
sahf
imul
lahf
fist
cmps
ror
mov
(bad)
leave
xchg
inc
loopne
cmc
int
lahf
call
lods
sub
in
pop
cmc
pop
psrad
jmp
sub
fadd
repz
pop
icebp
jp
jo
and
or
sub
add
cld
jmp
dec
not
jp
xor
or
push
hlt
add
xchg
jge
dec
xchg
xor
cmc
dec
repz
xchg
cmp
xlat
xchg
out
(bad)
sub
out
pavgw
test
loopne
retf
cld
arpl
push
cmps
adc
xor
out
lea
popa
pushf
dec
cmp
(bad)
dec
cs
adc
dec
add
enter
cs
cmp
leave
scas
cmp
mov
mov
rol
sbb
retf
sub
clc
sbb
dec
movs
iret
stos
jmp
rcl
xchg
xor
lods
imul
xchg
push
out
lods
and
sbb
shl
and
push
dec
stc
fstp
cmp
xchg
daa
rcl
das
inc
mov
ror
xchg
adc
outs
call
and
and
loop
mov
sub
lahf
dec
cs
test
pop
push
xor
js
sub
fcos
adc
adc
mov
inc
aas
pop
dec
fisubr
in
inc
cmp
addr16
adc
and
mov
sub
scas
xor
shl
call
les
and
mov
cmp
fdivr
movs
jecxz
scas
ror
dec
pop
pop
repnz
fwait
xor
inc
dec
fild
cmp
add
or
sbb
add
dec
xor
scas
inc
inc
push
jns
int
in
mov
(bad)
pop
out
xlat
daa
imul
mov
xlat
or
es
(bad)
cmp
inc
pop
lds
adc
mov
mov
daa
out
gs
mov
or
outs
jmp
movs
dec
inc
jmp
sub
jb
les
into
out
pop
icebp
stc
les
sbb
leave
mul
adc
outs
outs
ins
ins
iret
and
jge
bound
daa
mov
cdq
int
jbe
(bad)
mul
lods
aaa
mov
cmp
inc
mov
push
inc
lea
cli
lahf
stos
loop
push
ja
repnz
movs
enter
js
jl
xor
fwait
les
cmp
lea
mov
adc
scas
add
bound
push
mov
std
mov
jnp
ins
pop
push
(bad)
imul
pusha
rol
or
in
lock
sub
xor
das
push
dec
ja
loopne
dec
add
jl
and
cs
cmp
xchg
vmovd
iret
fstp
cmp
jns
dec
add
std
mov
mov
jno
pop
dec
out
adc
pop
push
int
add
stos
push
dec
xor
lds
mov
jb
scas
mov
or
add
(bad)
add
cmp
adc
sar
cmp
push
mov
inc
inc
mov
cmp
fild
retf
js
fs
stc
cmp
cli
or
ret
test
cld
sti
les
push
movs
ret
pop
pop
dec
adc
(bad)
ret
das
sar
dec
xor
in
ins
in
outs
fmul
add
daa
loope
lahf
mov
out
inc
mov
inc
outs
dec
xor
mov
or
imul
inc
int3
and
dec
je
icebp
mov
pushf
(bad)
xchg
inc
push
bound
xor
pop
in
idiv
sar
leave
jge
mov
out
imul
push
mov
push
sbb
inc
dec
mov
call
xlat
adc
and
in
es
jne
mov
xor
push
sbb
xchg
xchg
mov
cld
dec
mov
add
dec
sti
rol
push
and
push
and
jns
cmp
retf
cmps
rcl
adc
loop
and
repnz
pop
dec
xchg
cmp
hlt
out
mov
fist
lods
pop
mov
xchg
xor
test
fmul
sbb
fwait
pop
test
enter
mov
cmp
rcr
movsx
es
cmp
inc
pop
leave
cwde
(bad)
aas
(bad)
push
adc
lds
push
dec
xlat
cs
jecxz
xor
dec
fs
pusha
adc
adc
cdq
ins
js
or
xor
xor
lods
cmp
scas
xor
not
dec
mov
es
inc
pop
dec
or
cli
mov
out
aam
xchg
mov
fistp
pop
mov
dec
in
add
jg
xlat
add
lock
cmp
cmp
psubusw
mov
jno
add
int3
mov
out
call
add
aas
sti
jae
mov
cdq
cld
inc
sub
jo
mov
and
xor
push
xchg
mov
add
push
daa
ret
lods
jne
push
outs
(bad)
push
mov
jb
jecxz
jecxz
xchg
loope
xor
jno
rol
(bad)
xlat
mov
data16
pop
sbb
js
xor
aaa
push
pop
mov
xchg
sbb
cmps
inc
sbb
icebp
sub
movs
jns
pop
js
xchg
jp
dec
mov
ins
xor
mov
sbb
pop
mov
addr16
mov
scas
mov
dec
jmp
arpl
push
and
sbb
dec
movs
in
jmp
(bad)
pop
call
shr
jae
(bad)
fmul
sub
cmps
inc
and
aad
ror
push
icebp
mov
inc
lods
sbb
mov
jmp
inc
fwait
push
jns
sub
iret
ror
pop
js
jmp
and
fsub
mov
mov
outs
in
call
jnp
lds
adc
or
dec
push
or
mov
fbld
je
pop
pop
sbb
enter
sbb
dec
fstp
repz
jne
dec
mov
or
in
pop
mov
mov
stos
outs
adc
inc
in
repnz
xchg
cmp
mov
jl
fwait
adc
aam
gs
bound
mov
xchg
fmulp
imul
shl
ds
or
or
xchg
jnp
iret
lods
inc
dec
push
rcl
call
mov
sbb
call
xchg
push
adc
mov
jmp
jae
jo
sti
ss
cli
cmp
pop
fild
jns
xchg
mov
sbb
dec
or
pop
xlat
xchg
cs
ret
inc
(bad)
jmp
je
imul
enter
nop
iret
les
sbb
cli
std
stos
repnz
scas
dec
xor
inc
push
mov
mov
sbb
sub
dec
xchg
ds
dec
adc
cdq
std
xor
cmp
mov
pop
test
int3
sub
gs
rcr
ret
xor
xchg
repnz
mov
dec
push
sub
gs
sub
div
or
jmp
jge
sbb
frstor
inc
jecxz
mov
pusha
xor
xchg
shl
xor
lods
inc
jg
mov
mov
shl
pop
retf
cdq
or
das
cwde
or
and
xchg
sbb
jmp
jb
and
xchg
cmc
ds
mov
loop
pop
mov
adc
xor
and
jbe
daa
push
inc
jmp
sahf
(bad)
aaa
cmps
call
iret
jb
(bad)
out
pop
xchg
or
sub
inc
loopne
or
xchg
mov
loopne
das
shl
mul
xor
cli
arpl
fistp
fsub
fwait
cli
mov
data16
popf
repnz
nop
jae
mov
sbb
fucomp
ficomp
je
jle
push
mov
adc
dec
xor
xchg
add
push
xor
jo
mov
lods
jne
mov
test
je
or
pusha
mov
xchg
aam
fst
cmp
sbb
or
arpl
or
clc
sti
ror
imul
ret
mov
test
xor
push
cdq
push
cmp
aam
add
mov
nop
pushf
fwait
std
push
mov
dec
jno
imul
ret
rol
stos
xchg
test
xor
repnz
xchg
mov
mov
in
mov
out
adc
mov
dec
xchg
mov
mov
stc
pop
xchg
aad
mov
pop
popf
lock
pop
jg
leave
pop
mov
inc
je
push
mov
jnp
scas
push
jmp
sub
test
sbb
test
xchg
shl
jecxz
push
sti
mov
dec
xor
mul
pop
es
push
and
cmc
dec
iret
mov
hlt
sub
mov
xchg
sbb
ret
ret
xchg
push
cwde
inc
das
pop
mov
dec
clc
scas
mov
mov
(bad)
loopne
pop
and
push
mov
cdq
hlt
xchg
outs
push
out
cmps
pushf
xlat
xchg
push
fcom
hlt
lock
test
sub
cmps
neg
xor
ins
inc
test
loopne
inc
sub
sbb
gs
pop
jmp
movs
lea
mov
sub
pop
dec
xchg
ss
and
aaa
adc
adc
add
dec
jae
shl
loop
mov
enter
inc
rcr
sbb
adc
clc
mov
ds
sub
outs
mov
pop
into
mov
repnz
xchg
mov
mov
sbb
and
xchg
repnz
pop
xor
xor
cmp
cmp
inc
enter
push
lods
push
add
sbb
xchg
(bad)
sbb
or
inc
rcl
call
dec
ss
lahf
icebp
dec
mov
hlt
adc
test
enter
dec
jbe
and
pop
fwait
shl
jo
loope
push
hlt
push
cmp
cwde
xchg
inc
cmp
inc
xchg
popa
sub
addr16
and
loop
pop
add
jno
fisub
jb
aaa
addr16
push
jecxz
cmps
lahf
cmp
jmp
push
pop
cmp
jno
mov
std
imul
add
out
movs
cmps
cmp
sbb
lods
cmp
mov
xchg
xchg
movs
adc
pop
inc
popa
mov
sub
mov
jmp
cdq
shl
je
aam
lods
fnstenv
pop
and
sbb
add
push
stos
jle
frstor
pop
cmp
xor
test
aad
add
add
fsub
nop
jmp
ja
mov
daa
jp
jo
ret
mov
cmc
(bad)
sti
mov
and
ds
ret
and
fistp
repz
aas
popa
(bad)
mov
xor
neg
loopne
pop
push
imul
inc
pop
push
xchg
xchg
mov
inc
dec
aaa
lods
sub
je
push
imul
test
cwde
lahf
int
mov
jbe
call
fs
mov
mov
pusha
pushf
scas
leave
fisttp
arpl
and
xchg
shr
pop
hlt
sub
pop
aaa
in
bound
fisubr
pusha
mov
sbb
pop
imul
sbb
popa
es
jns
mov
arpl
js
mov
nop
fadd
cmp
dec
push
and
fsub
mov
mov
addr16
int3
daa
lds
add
mov
sti
ror
adc
sub
cs
or
in
adc
stc
inc
scas
std
imul
aam
jne
hlt
cs
sar
popf
xchg
or
pop
iret
jnp
mov
int3
es
push
jecxz
add
add
jne
sub
lea
cmp
ins
mov
shl
mov
stos
loopne
test
add
arpl
pop
sub
sub
enter
in
xchg
ss
enter
or
add
or
fwait
addr16
arpl
xor
jmp
push
test
into
cmp
call
call
cmp
or
lea
pusha
mov
adc
inc
scas
loope
dec
iret
shl
jle
jne
jbe
retf
mov
mov
xor
(bad)
in
sbb
inc
and
aaa
xchg
sqrtps
outs
mov
std
mov
jge
das
movs
push
or
in
ja
jmp
movs
lods
fbstp
cdq
test
jmp
and
hlt
cmp
xchg
out
jno
mov
cmps
fisubr
jbe
lock
add
mov
fsubr
sub
cmp
push
mov
(bad)
fidiv
mov
sub
jmp
stos
dec
dec
inc
frstor
stos
jge
dec
inc
mov
loope
addr16
adc
cs
nop
inc
gs
loop
jb
sahf
mov
pop
mov
popf
test
int3
lahf
ror
pop
fnstsw
retf
mov
xor
jmp
test
nop
lock
pop
or
add
mov
ins
xchg
js
add
(bad)
ss
jmp
ja
out
shl
xchg
in
pop
push
and
js
test
(bad)
cmps
fdivrp
xor
mov
lahf
mov
sar
dec
add
je
pop
mov
stos
ficom
add
inc
ret
jg
jae
sbb
rcr
inc
jmp
out
add
xor
dec
mov
repz
idiv
dec
jb
xlat
(bad)
stc
sti
jns
sbb
pop
aad
jge
cmps
and
ficom
jle
(bad)
rcl
hlt
pushf
stos
call
fs
call
lods
adc
and
bound
not
fsubr
jae
cmp
and
ds
cmp
daa
out
jecxz
inc
pop
dec
or
mov
inc
fnstenv
fimul
dec
fcmovnb
dec
call
jmp
pop
add
inc
add
mov
jp
adc
in
(bad)
jl
std
fwait
mov
sbb
stos
and
in
or
mov
pop
inc
movs
cmp
cli
and
arpl
leave
sub
cmp
inc
loope
mov
pop
pop
xchg
mov
lds
mov
push
add
mov
lahf
pushf
lds
(bad)
dec
cld
inc
pop
outs
lods
adc
mov
cld
aaa
ja
ret
add
xchg
sub
aam
add
fmul
mov
or
cmps
mov
(bad)
pop
mov
fldenv
mov
sar
mov
mov
ja
mov
push
mov
arpl
sbb
adc
aad
bsf
and
push
cmc
imul
mov
sub
pop
add
pop
scas
jns
mov
retf
or
pushf
rol
pop
jnp
std
cmp
xchg
mov
fdivr
aad
es
popa
test
xlat
iret
cli
mov
int
ret
inc
jo
sbb
mov
or
inc
dec
dec
push
imul
pop
pusha
ins
pop
cmp
add
sahf
movs
mov
das
sub
jle
mov
cmc
loop
dec
inc
mov
out
test
xchg
and
les
rcr
cmp
mov
xlat
mov
sub
test
fild
pop
test
or
ja
lds
daa
inc
cwde
jmp
call
or
ret
aaa
cmp
xor
aam
std
aam
jae
jb
idiv
xor
iret
and
xchg
das
in
mov
into
out
pop
jmp
push
lock
jge
fild
cmp
dec
test
in
movs
adc
repz
sbb
mov
xchg
ins
fisub
fcom
cmp
adc
sub
cmps
and
jp
pushf
sbb
cmp
cmc
push
scas
xchg
or
movaps
imul
shl
xchg
and
inc
stos
clc
add
xor
push
dec
jge
out
dec
rcl
out
popf
(bad)
pop
push
ins
jge
fwait
in
xchg
or
sub
mov
adc
mov
or
sbb
repz
inc
shr
dec
arpl
movs
cmps
jmp
shr
dec
loopne
cmp
daa
sub
cmc
xchg
jecxz
adc
jo
inc
aaa
pop
mov
push
xchg
mov
xor
jmp
popa
rcr
sub
and
push
ins
and
sub
in
das
(bad)
out
xchg
xchg
popf
pop
mov
(bad)
pop
mov
and
add
mov
scas
mov
pop
mov
jle
les
sbb
inc
xchg
aaa
pushf
cmps
stos
test
jg
jno
jge
add
or
inc
cdq
retf
loop
sbb
scas
push
push
loope
sub
adc
sbb
mov
mov
push
cli
push
or
rol
push
xor
aam
adc
aaa
aad
in
add
and
xlat
xor
sub
mov
adc
add
mov
mov
lods
lock
aad
jne
dec
dec
outs
adc
fbld
jmp
sub
jns
repnz
inc
loope
jg
inc
in
xchg
or
mov
pop
adc
sub
leave
xlat
mov
(bad)
pop
adc
adc
fcom
ffree
fidiv
mov
popf
stos
pop
mov
jne
mov
jo
fs
or
dec
or
mov
lock
add
xor
lods
int3
jl
lds
mov
cdq
xchg
pusha
xor
mov
inc
lods
fbstp
jo
pop
mov
add
ins
push
mov
and
sbb
cmp
loop
push
ret
cdq
ficom
test
inc
cld
mov
xor
jbe
jg
jmp
or
cmp
popa
xor
adc
imul
(bad)
fcom
loop
sub
sbb
pop
(bad)
popa
xchg
cmp
out
or
mov
std
and
xchg
push
pop
sbb
fdivr
xlat
ds
push
mov
cli
arpl
cmps
sub
jo
cmps
mov
int
imul
mov
mov
lahf
mov
push
(bad)
cmps
fmulp
pop
aam
or
mov
add
dec
push
mov
pop
fwait
jne
cmp
hlt
stos
icebp
push
idiv
push
cmp
std
mov
add
fldcw
push
enter
dec
xchg
sbb
dec
cmp
pop
pop
dec
cmp
adc
pop
test
(bad)
jmp
(bad)
sbb
jg
jmp
outs
and
sub
sub
in
test
push
iret
adc
sub
mov
gs
jbe
pop
dec
enter
fisttp
popa
sub
out
lods
lock
call
mov
fwait
cmp
outs
lods
inc
lea
repz
or
mov
dec
push
xchg
inc
lock
jns
and
pop
push
jmp
(bad)
ficom
fisttp
gs
gs
xor
sbb
mov
(bad)
out
in
xchg
and
lock
leave
push
gs
sub
push
xchg
(bad)
ja
(bad)
push
(bad)
repz
icebp
inc
mov
jne
sbb
mov
cmp
adc
pop
addr16
aaa
push
arpl
das
std
jbe
lock
aad
js
jnp
inc
sbb
or
mov
dec
lahf
pop
or
xor
hlt
sti
push
js
xchg
sub
xor
and
fldcw
(bad)
cdq
dec
dec
int3
mov
test
push
adc
stos
xor
pop
leave
addr16
ffreep
sbb
inc
test
leave
ins
repnz
das
add
adc
(bad)
adc
inc
mov
js
push
(bad)
push
push
outs
push
imul
jnp
dec
inc
cmp
push
cwde
or
jg
pop
ins
add
les
dec
mov
push
jg
(bad)
or
or
(bad)
xor
xor
loop
(bad)
mov
loop
xor
xchg
lods
push
add
cld
inc
xchg
shr
sbb
xor
aaa
inc
fisttp
mov
xor
dec
push
pushf
adc
mov
retf
xchg
xchg
cmp
add
inc
xor
je
and
lods
test
cmp
test
mov
push
sub
ret
sub
jp
nop
ror
lea
mov
call
mov
jbe
jl
cmc
mov
and
test
iret
inc
fwait
cli
inc
mov
mov
xor
inc
clc
xor
out
sbb
adc
mov
sbb
dec
dec
push
stos
adc
sbb
cmp
cs
mov
stos
jecxz
fbld
jo
pop
adc
retf
jb
out
mov
imul
fidivr
test
cmp
or
icebp
outs
cmc
sub
inc
mov
dec
push
jbe
adc
sahf
dec
xor
stos
sbb
es
jb
pop
(bad)
lods
pop
jmp
scas
sahf
mov
fdiv
rcr
jp
(bad)
out
jne
adc
cld
imul
into
push
mov
int3
dec
fidiv
and
cmp
cmp
inc
or
ja
xchg
cmp
in
dec
inc
cli
fst
lahf
repz
xor
cmp
pop
cdq
add
fwait
in
jmp
or
and
(bad)
mov
je
ins
mov
xchg
ja
push
sub
pop
icebp
and
ins
int3
inc
push
es
xor
inc
sub
gs
push
daa
fild
sbb
clc
ret
ror
mov
aad
(bad)
push
xchg
sub
fwait
sub
jmp
outs
jmp
ds
push
cmp
dec
test
and
imul
sti
out
mov
mov
ja
jo
outs
xlat
mov
hlt
pop
push
cli
call
sub
popa
cmp
inc
out
jns
gs
mov
sbb
dec
cld
jo
imul
lods
lea
repz
xchg
test
mov
lock
inc
sbb
popf
shr
mov
call
sub
dec
inc
jbe
inc
lods
inc
lock
int
jns
sbb
xchg
mov
mov
pop
popf
cmp
push
mov
sub
inc
mov
punpcklwd
fwait
aas
fidivr
push
shl
ins
std
repnz
push
out
iret
lods
sbb
cmp
cli
mov
jle
mov
mov
shl
mov
jp
mov
(bad)
cdq
(bad)
pop
or
inc
cmp
test
push
and
jno
arpl
and
std
lods
loopne
push
data16
and
daa
sub
sub
mov
movs
and
xchg
out
js
dec
icebp
das
xor
sub
ret
or
int3
es
fild
mov
leave
mov
jne
push
fxch
test
dec
sub
mov
aaa
add
arpl
stos
call
mov
sti
sbb
or
adc
scas
(bad)
jno
iret
cmps
mov
jecxz
push
hlt
push
cmp
shl
loopne
inc
or
mov
stos
(bad)
jmp
jge
pop
enter
(bad)
addr16
jno
test
stos
(bad)
stos
out
push
inc
jmp
(bad)
xadd
hlt
dec
dec
sbb
xor
fisubr
or
sub
loop
stos
movs
shr
std
int3
pop
xchg
lods
xchg
shr
fdiv
pop
jb
cs
mov
aad
mov
les
jb
fimul
inc
les
mov
jl
or
fist
xor
mov
mov
jbe
sub
mov
test
nop
outs
hlt
cs
aas
xor
inc
shl
aaa
out
movs
out
fcom
jle
add
int3
loopne
ss
js
mov
call
pop
mov
mov
sub
add
sbb
ss
in
lahf
mov
in
enter
xchg
cmp
xor
cmp
sub
and
repnz
or
add
cmps
cmp
and
leave
xor
in
out
mov
retf
outs
cmps
imul
pop
js
test
add
mov
jp
jo
inc
cld
sub
xor
sub
ret
sar
jbe
daa
sbb
stos
popa
shr
aaa
(bad)
lock
(bad)
push
lods
jl
inc
stos
push
add
xchg
shl
rep
cmp
inc
(bad)
jb
jnp
push
add
or
stc
or
emms
push
pop
call
sub
das
push
inc
test
and
repnz
retf
sub
add
das
jp
dec
or
jg
add
add
xchg
adc
lock
imul
fsubr
out
adc
outs
jecxz
loope
jnp
nop
inc
jnp
push
in
cwde
popa
pop
adc
out
or
add
scas
push
inc
inc
aad
movs
into
push
pop
iret
(bad)
mov
pushf
xchg
pop
xchg
and
mov
xchg
imul
cwde
int3
mov
cmp
js
rol
xor
movs
push
aam
jns
xchg
ins
or
bound
cld
push
jecxz
fcmovu
data16
ret
je
cs
cwde
pop
xchg
inc
scas
mov
xor
xchg
push
push
mov
aaa
sub
jg
cmp
stc
repnz
push
bound
cmp
sbb
jecxz
cs
mov
push
pop
sub
cmps
icebp
movs
mov
loopne
clc
loope
sub
gs
arpl
dec
and
ss
dec
cmp
xor
and
retf
jbe
loopne
in
ror
cmps
adc
jmp
jo
xor
sub
movs
(bad)
pop
sub
mov
sub
fiadd
lock
stos
cmp
sub
sbb
ins
xchg
mov
add
ds
mov
rcr
cs
or
es
shr
or
sbb
inc
dec
jl
call
(bad)
and
fstp
inc
popa
sbb
stos
mov
xor
repnz
dec
sbb
sub
jmp
das
mov
mov
push
rcl
mov
es
cld
mov
out
in
mov
adc
aaa
dec
ins
or
mov
inc
cmc
std
xchg
sti
mov
cs
test
js
mov
retf
push
push
inc
pusha
xchg
cmps
movs
pop
ins
jbe
int3
xor
mov
imul
add
add
jne
cmc
xchg
mov
lds
and
sbb
or
not
(bad)
test
sahf
(bad)
dec
mov
and
or
push
mov
jns
sahf
leave
xchg
fisttp
mov
div
cmp
aas
stc
push
push
mov
sbb
ror
movs
retf
jp
xor
aaa
std
jg
or
jae
scas
retf
push
js
leave
mov
mov
xor
nop
imul
sar
les
ret
add
(bad)
jno
fisubr
mov
(bad)
pop
lods
nop
inc
mov
pop
push
sub
cdq
sub
xor
jbe
(bad)
mov
inc
mov
cmp
fidiv
rcr
movs
iret
and
ds
jae
cmc
jae
mov
stos
sub
or
mov
js
dec
mov
les
push
push
sub
ret
xchg
and
sub
pop
scas
repnz
lods
repnz
pop
sub
push
icebp
jns
rol
std
add
loopne
mov
mov
cmp
aas
xchg
and
inc
sub
(bad)
cmp
aad
mov
pop
push
rol
dec
sbb
aas
(bad)
xor
pop
push
fnsave
std
not
cwde
mov
scas
aad
push
vorps
int
je
add
hlt
mov
mov
les
int
or
mov
cmp
movs
xchg
mov
adc
mov
mov
push
mov
paddw
push
and
add
pop
xor
push
bound
xchg
pop
cmp
sbb
test
stc
push
adc
sbb
std
in
cmp
add
addr16
pop
adc
dec
cmp
push
out
xor
dec
push
cld
push
imul
ja
sahf
stos
xchg
sub
jge
mov
mul
or
sub
inc
mov
loope
cmp
fdiv
pop
lea
shr
xor
or
and
sbb
mov
mov
fucom
jo
sub
and
clc
les
out
ficom
lods
mov
mov
or
mov
dec
xor
lods
sbb
sti
jne
aad
or
mov
and
je
ins
and
dec
adc
mov
cmps
and
clc
cmps
iret
mov
fdiv
or
jns
xchg
and
gs
push
jb
sbb
sub
push
pop
lock
mov
pop
jg
int3
sub
inc
int
or
cld
scas
icebp
dec
cmps
adc
inc
ds
dec
cmp
inc
xor
mov
imul
ds
cmp
aam
mov
push
pop
cmc
dec
adc
std
or
popf
aas
std
sti
xor
xchg
or
lods
into
call
test
es
jecxz
ins
adc
loop
fisub
int3
dec
jb
nop
add
std
cmps
out
push
(bad)
fild
iret
pop
in
inc
cmp
xchg
xchg
push
xchg
loopne
adc
xchg
xchg
cmp
push
clc
mov
fwait
movs
lea
mov
stos
dec
ret
sbb
je
les
call
fistp
cmp
pop
push
cs
push
fiadd
adc
aam
mov
or
or
jecxz
(bad)
pop
ret
retf
or
pop
xchg
xchg
pop
jno
hlt
add
and
or
sbb
fucomip
fstp
dec
jbe
(bad)
sbb
sbb
icebp
sub
sub
pop
sbb
mul
shr
xor
sbb
outs
dec
push
jns
pop
or
jns
fcmovb
adc
push
js
stos
xor
jge
pop
adc
movs
and
inc
test
clc
pop
dec
push
sbb
xchg
add
call
div
mov
jo
lods
test
pop
shr
pushf
cmp
add
cmps
fsub
jg
lods
retf
mov
lahf
add
movs
jg
cmc
fdiv
nop
cli
add
xchg
xchg
jmp
cmp
xchg
fmul
jo
sub
dec
mov
xor
cdq
xor
daa
outs
cdq
(bad)
sbb
mov
ret
(bad)
inc
lods
pop
mov
into
jno
pop
mov
pop
loope
push
mov
lock
lock
popf
js
adc
test
push
fst
fiadd
add
jmp
sbb
(bad)
push
std
pop
cli
test
xor
mov
xlat
xor
pop
(bad)
mov
std
push
ins
mov
inc
aam
retf
and
les
enter
push
mov
fcom
pushf
nop
pop
jns
xor
and
in
in
cmp
daa
cmp
enter
iret
ins
jle
sub
mov
cdq
pop
mov
mov
addr16
add
xchg
lock
loope
out
fsub
jo
and
mov
sbb
lea
or
es
movs
hlt
jg
ret
outs
ds
sbb
xchg
sbb
addr16
cmp
repnz
jo
mov
xchg
add
or
fnstcw
and
jge
add
call
or
inc
pusha
mov
mov
arpl
dec
out
add
cmp
jb
aam
xor
fimul
sar
and
xlat
inc
cld
jne
ret
lds
mov
aam
fimul
inc
and
dec
btr
cs
or
movs
pop
fsub
add
jne
sti
xchg
xor
cmp
imul
xchg
mov
fldln2
aaa
inc
jbe
mov
fcomp
inc
in
and
sbb
imul
mov
outs
jbe
xchg
sbb
cwde
nop
sahf
pop
(bad)
mov
lock
sar
push
sub
mov
inc
addr16
sti
fcomip
loop
popa
pop
mov
jge
call
xor
in
ret
or
sar
pop
mov
jo
call
adc
test
mov
rcr
jl
int
sub
or
mov
push
rol
pop
mov
cmc
inc
cli
inc
loop
arpl
icebp
js
sbb
xor
pop
push
xor
ret
push
adc
ds
idiv
cmp
mov
sti
iret
adc
(bad)
jecxz
push
fisubr
or
out
shr
pop
rol
xchg
adc
jo
cmc
ds
inc
and
cmp
sbb
pop
call
out
xchg
(bad)
jbe
pop
dec
(bad)
fcom
jle
mov
and
fsub
jmp
xchg
daa
sar
outs
bound
rol
add
test
stc
sub
inc
mov
or
stos
push
mov
lock
in
pop
mov
mov
or
stc
scas
outs
lea
aas
arpl
dec
pop
push
add
bt
push
mov
aam
xor
mov
pop
shl
sahf
sahf
mov
dec
inc
test
(bad)
das
pushf
cdq
inc
mov
in
mov
repnz
das
in
fimul
mov
mov
sub
adc
repnz
ror
mov
cdq
pop
add
inc
dec
shl
repnz
fistp
jl
enter
mov
fwait
mov
adc
test
(bad)
jmp
xchg
cmp
sbb
popf
jo
cmp
es
in
push
(bad)
jp
or
sbb
push
sub
mov
dec
mov
jmp
push
dec
stos
pusha
add
mov
iret
dec
out
sti
adc
repz
dec
scas
and
enter
(bad)
rcr
pop
inc
daa
fist
shl
and
add
cmp
(bad)
add
mov
fwait
std
xchg
fldenv
sub
aaa
xchg
jecxz
inc
xor
jmp
jae
push
sub
int
add
xchg
mov
mov
xchg
sub
outs
or
pushf
and
(bad)
test
push
pusha
push
jmp
pop
push
mov
lds
xchg
xchg
(bad)
popa
ins
mov
and
xchg
rcr
mov
lea
ins
dec
ss
xchg
mov
mov
xor
fcmovnu
in
idiv
das
mov
add
jo
cld
sti
movs
jo
pop
in
int3
out
jnp
jnp
mov
ja
push
adc
cwde
les
stos
or
mov
scas
add
and
sbb
add
mov
push
mov
inc
dec
mov
dec
mov
fcom
push
daa
cwde
mov
adc
daa
aam
xchg
std
adc
pop
add
retf
stos
sbb
fs
in
pop
pop
xor
xchg
sub
pop
mov
aaa
mov
(bad)
retf
xor
out
pop
and
gs
pop
xor
jg
jl
jp
or
movzx
pop
mov
jg
sub
fs
pop
mul
mov
jno
dec
add
cld
inc
pop
and
push
(bad)
sub
fsub
cs
inc
jge
iret
mov
rol
jmp
pop
stos
dec
retf
or
push
push
(bad)
mov
mov
fdivr
into
aad
pop
mov
fdivr
push
out
aas
jecxz
dec
sbb
das
js
fnstcw
push
mov
outs
into
test
xchg
add
in
retf
jge
push
sbb
and
sub
or
(bad)
repnz
cmp
jmp
out
sub
iret
sbb
nop
ins
mov
cmp
sub
icebp
cmp
mov
fisttp
and
bound
mov
fwait
cmp
and
add
xlat
ins
fiadd
add
ja
movs
cmps
data16
dec
pop
stc
jecxz
int
xchg
retf
and
aad
clc
ja
scas
fild
push
nop
imul
cmp
inc
dec
and
xchg
arpl
inc
ror
mov
neg
jle
xor
sbb
ds
hlt
and
jno
stc
movs
outs
sub
(bad)
or
data16
and
sbb
and
cmp
jne
fadd
gs
outs
cmps
mov
dec
int
das
mov
xor
adc
outs
icebp
out
xchg
stc
out
scas
pushf
inc
ins
es
or
out
ss
adc
cwde
psrlw
daa
mov
mov
fdivr
idiv
lahf
mov
fmul
fisub
xchg
push
cld
jmp
stc
popf
ds
mov
lods
or
sub
cmp
iret
fdiv
loopne
and
leave
pop
sub
adc
pop
add
bound
add
pushf
out
xchg
fsub
jp
lds
enter
cmp
add
mov
lock
inc
jl
dec
sub
hlt
mov
mov
mov
(bad)
ja
inc
test
or
pop
inc
loope
retf
inc
sub
mov
add
mov
pop
ss
out
scas
nop
or
fdivr
jb
jp
rcl
push
in
xor
mov
shl
and
dec
jle
push
mov
pop
push
mov
ret
sub
cmp
xor
int3
cmc
dec
pop
mov
jns
in
jb
xor
sahf
and
fbstp
mov
add
fisub
cmp
sub
xor
ss
in
lock
xchg
(bad)
mov
popf
sbb
ds
std
dec
jbe
sub
dec
mov
or
popf
movs
sbb
jnp
xchg
std
js
jmp
jne
xchg
js
rcr
movs
jg
jl
in
movs
or
pusha
js
pusha
mov
movs
pop
cld
or
lods
movs
(bad)
jmp
aas
add
sbb
dec
jne
mov
mov
int3
sub
cmp
jge
mov
addr16
push
sub
jl
xchg
imul
jge
push
ins
jg
xchg
and
cmp
sub
jl
adc
pop
add
push
mov
jbe
mov
xchg
inc
sub
aas
scas
jl
idiv
jp
adc
(bad)
dec
push
cmp
mov
pop
xor
test
cld
pop
cmp
xchg
push
loop
pop
xchg
mov
fst
out
mov
mov
pop
idiv
sub
icebp
hlt
sbb
sbb
push
xchg
div
pop
pop
mov
scas
arpl
or
hlt
jecxz
add
loop
(bad)
gs
addr16
mov
jp
jae
cwde
in
dec
adc
sub
(bad)
jmp
ror
inc
xchg
pushf
pop
ret
int
and
mov
push
xchg
out
xor
nop
pop
inc
mov
jl
mov
scas
call
lock
outs
or
sbb
ins
add
add
or
dec
jl
clc
push
inc
sbb
jnp
call
outs
cmps
in
sbb
add
out
jmp
mov
mov
ins
fs
push
fisub
push
dec
ja
sbb
scas
cmp
dec
repz
xchg
mov
xlat
scas
(bad)
sbb
add
pop
les
outs
stos
jl
inc
jecxz
adc
retf
add
push
fsubr
jno
jg
lea
aad
push
xchg
fnstenv
add
mov
mov
lss
mov
shl
xchg
mov
pop
jb
(bad)
jle
inc
dec
add
jne
ja
pop
and
movs
fnstcw
stos
and
std
pop
push
mov
rcr
mov
sub
mov
sub
stos
in
adc
call
shl
push
add
std
add
jecxz
mov
and
pop
pop
jge
fstp
std
xchg
lods
jnp
pop
stos
fisub
loopne
mov
sub
(bad)
pop
mov
lea
add
lock
add
mov
loope
xor
add
repz
retf
pop
xor
and
mov
push
or
mov
call
xor
in
inc
xchg
or
xchg
push
sbb
(bad)
out
add
sub
jge
div
mov
lea
call
pusha
popf
scas
test
(bad)
cmp
div
and
das
hlt
into
mov
jns
fsub
jg
xor
pop
idiv
mov
inc
lds
jl
jl
fs
std
inc
pusha
gs
cmp
and
dec
iret
pop
ficom
aad
stc
xchg
push
inc
mov
mov
xchg
and
retf
inc
add
mov
dec
jmp
aas
xchg
mov
fdiv
popf
mov
call
jmp
outs
adc
push
cld
imul
mov
in
jbe
mov
gs
mov
shl
jle
sbb
test
jp
inc
jge
stos
je
pop
in
mov
push
jl
mov
jp
into
popa
and
and
call
mov
or
sub
xchg
inc
ret
jle
in
lea
sahf
mov
call
fsubr
fistp
mov
and
popf
ins
int3
cli
daa
xor
in
sar
aas
jbe
movs
push
jne
enter
adc
adc
test
sub
inc
ret
arpl
in
xchg
fisubr
sbb
loope
jp
rcl
out
mov
xor
repz
test
pushf
mov
scas
sbb
and
push
inc
sub
xlat
nop
and
(bad)
and
push
mov
sbb
push
jecxz
mov
(bad)
sub
sub
int
add
jno
aam
xchg
cs
add
cld
cdq
out
add
jle
bound
inc
adc
loopne
ret
push
and
xchg
retf
into
pop
aaa
mov
aad
movs
fldenv
jno
pop
lahf
cmp
cli
adc
push
xor
les
push
or
stc
sbb
mov
mov
mov
imul
dec
mov
mov
mov
fdiv
sub
mov
and
test
fs
call
push
shl
inc
call
das
call
(bad)
adc
cmp
dec
(bad)
mov
stc
loop
(bad)
mov
int3
stos
test
and
enter
test
lods
fsub
adc
adc
xchg
jnp
sbb
jg
xchg
fcom
mov
rcl
and
mov
out
sub
add
test
lds
or
jge
push
adc
and
repz
test
mov
bound
test
mov
not
pop
idiv
xor
jo
jae
cld
clc
cdq
mov
ficom
sti
mov
sbb
xor
dec
movs
(bad)
dec
xlat
adc
mov
or
shl
mov
js
pop
jp
mov
mov
mov
pop
sub
adc
jo
scas
repz
addr16
call
aaa
pop
imul
and
pop
sbb
push
mov
mov
dec
mov
pop
pop
je
lock
adc
pusha
mov
mov
and
cdq
popa
sub
dec
cdq
and
push
sbb
sahf
clc
mov
sub
push
mov
rcl
push
repz
(bad)
sub
sti
add
push
clc
jmp
and
sub
inc
cmc
fild
daa
push
add
in
xlat
add
cmp
adc
ins
pop
fidivr
(bad)
xor
scas
popf
call
sbb
(bad)
sub
out
test
mov
es
push
inc
cmc
pop
jo
(bad)
jecxz
leave
xchg
push
scas
test
in
jmp
mov
cmp
add
imul
and
stos
mov
aad
add
push
ret
(bad)
ds
mov
(bad)
fcomp
int
lods
adc
cmp
lods
inc
mov
test
jne
(bad)
dec
push
fidivr
and
icebp
mov
jmp
nop
and
push
xor
inc
or
mov
dec
sbb
sub
cs
(bad)
ffreep
mov
dec
mov
cmps
retf
cmp
jge
fs
cs
stos
pop
jb
mov
loope
test
int3
(bad)
mov
fidivr
push
dec
add
adc
cmps
adc
dec
dec
mov
movs
jmp
mov
ins
retf
add
sbb
rol
pop
out
dec
gs
xlat
jno
popf
mov
and
jp
mov
scas
xchg
std
mov
mov
push
cmp
xchg
pop
push
mov
mov
or
pop
sub
jo
dec
adc
sbb
cli
push
(bad)
(bad)
xchg
xchg
fs
in
adc
cvtpi2ps
jo
ss
dec
call
push
retf
mov
xor
sbb
lods
and
jmp
mov
mov
cs
xor
nop
sub
aam
(bad)
pop
sbb
push
jmp
dec
rcl
add
mov
cmp
cwde
fldenv
push
push
dec
xchg
shr
sbb
test
cdq
fld
add
sar
jae
lock
popf
cmp
into
pop
inc
inc
jb
(bad)
std
loope
fild
jne
mov
fwait
js
jne
(bad)
arpl
add
stc
dec
jne
xchg
movs
cmp
aas
sbb
ds
push
jb
cmc
inc
bound
push
in
popa
scas
pop
cmps
outs
mov
scas
inc
rcl
in
or
dec
dec
cmp
clc
daa
sbb
test
inc
clc
cmp
xor
jne
fbld
pop
pop
xchg
adc
sbb
ins
outs
shl
lahf
mov
pop
xchg
jno
movs
jmp
cmps
mov
push
(bad)
aad
lock
test
jmp
push
scas
leave
xor
xchg
sahf
cmp
mov
adc
pop
cld
ja
jp
dec
xor
inc
imul
stos
out
clc
enter
cmp
dec
mov
ja
push
pop
icebp
enter
push
mov
jmp
outs
stos
xchg
mov
jbe
jo
pop
lea
and
call
leave
add
cmp
cmp
in
ins
dec
test
cmp
call
jge
scas
out
ins
push
stos
clc
int3
mov
sbb
rcr
movs
ret
adc
sub
scas
(bad)
dec
jnp
mov
mov
rcr
popf
out
outs
dec
jmp
(bad)
mov
pop
xchg
ja
push
sub
ds
das
jns
loopne
xor
test
in
xchg
mov
and
out
js
push
cmp
sti
std
repnz
or
mov
daa
xchg
dec
retf
and
mov
sbb
jo
rol
xchg
cld
and
cmp
hlt
repz
pusha
das
sub
xlat
mov
outs
inc
aad
sbb
sbb
loopne
mov
sub
or
or
add
xlat
or
shl
jmp
push
pop
outs
pop
in
sbb
push
movs
adc
sub
mov
and
jnp
push
stos
mov
xchg
mov
pop
addr16
mov
inc
call
sar
pusha
inc
xchg
fld
push
and
jecxz
test
sub
fnstenv
nop
inc
ret
cld
sahf
inc
ss
in
mov
dec
mov
adc
adc
int3
js
jne
cmp
cmps
stos
xor
mov
(bad)
xor
bound
std
ds
inc
mov
or
nop
out
js
and
inc
adc
mov
in
jge
mov
pop
loop
sub
das
add
mov
xor
push
jne
sbb
dec
xor
int3
xchg
arpl
adc
pop
cmp
xchg
jne
ss
mov
iret
push
retf
test
pop
in
fcmovnb
dec
xor
inc
in
cmp
sub
dec
jmp
stc
icebp
aas
mov
sub
fimul
sbb
popa
push
dec
scas
fcom
adc
gs
and
retf
xchg
aas
push
push
ret
and
mov
imul
sbb
xor
adc
clc
mov
and
push
movs
dec
pop
mov
(bad)
or
xor
xchg
and
push
sti
push
(bad)
int
adc
shl
cmp
xor
xchg
add
mov
std
and
or
jbe
xor
xor
inc
and
dec
mov
push
sbb
cli
or
scas
adc
icebp
xchg
stos
cmps
sub
data16
mov
pop
sahf
pop
fcmovnu
cmp
out
dec
psrlq
scas
stos
inc
add
push
fbstp
push
pop
cmp
sahf
pop
add
jge
fisubr
leave
push
addr16
cmps
std
lods
in
dec
mov
loope
clc
std
adc
aam
push
outs
cld
(bad)
pop
dec
jns
sbb
(bad)
fild
adc
in
dec
test
lahf
sbb
sbb
pop
pop
sub
pop
pushf
push
push
lods
add
fistp
scas
popf
mov
add
dec
rcl
stos
cmp
xor
cwde
into
pusha
sbb
mov
xchg
mov
lahf
pop
lods
dec
movs
jns
sbb
inc
sbb
out
cld
jb
(bad)
and
movs
hlt
int3
out
push
sti
mov
ror
dec
out
dec
(bad)
adc
jbe
sbb
xor
pop
mov
aas
les
daa
jae
retf
sbb
inc
es
loope
sub
add
fwait
scas
xchg
sahf
sbb
iret
lds
cmps
and
enter
outs
jmp
icebp
scas
xor
(bad)
mov
das
in
sub
adc
sub
test
mov
or
push
shl
push
retf
cld
push
shr
sbb
test
mov
es
inc
cmp
or
xchg
inc
popa
or
xchg
aaa
jmp
mov
jmp
out
fisttp
ins
lock
imul
jmp
or
push
cdq
and
aam
dec
push
push
pop
inc
or
push
cli
sti
xchg
dec
push
pop
mov
in
js
and
sbb
push
cli
mov
cmps
cmp
nop
push
or
les
push
mov
stc
mov
mov
push
or
sbb
loop
inc
lods
push
and
(bad)
nop
jmp
push
ja
(bad)
fs
out
arpl
jle
js
cmp
(bad)
jbe
in
inc
add
xchg
add
add
pop
adc
cli
imul
pusha
(bad)
lock
cmp
xchg
jp
mov
in
loopne
aas
movs
test
pop
and
mov
test
dec
xor
fld
pop
jle
push
pop
mov
ss
mov
shl
mov
xchg
xchg
std
cmc
imul
sti
mov
mov
mov
aam
rol
jmp
adc
mov
out
or
add
ret
retf
fsubr
out
dec
imul
xor
sbb
fisub
adc
pop
cmp
jnp
and
pushf
xchg
jmp
jecxz
jnp
push
push
inc
sub
pop
mov
cmp
fild
push
mov
push
js
xor
je
or
call
jo
adc
dec
dec
out
ja
push
dec
jbe
or
call
mov
add
outs
dec
sub
mov
jg
jne
xor
das
mov
fwait
sbb
mov
gs
cdq
call
ret
adc
cmp
mov
dec
xlat
push
adc
pop
cmp
inc
outs
sub
call
xchg
jp
push
cdq
xor
mov
retf
mov
inc
cs
shr
dec
mov
sbb
sub
aad
in
lea
enter
mov
stc
int3
sbb
ret
xchg
mov
adc
xor
dec
sub
cmp
jmp
mov
and
xchg
add
adc
cs
je
sti
xchg
dec
inc
push
and
or
scas
hlt
add
fisubr
fwait
repz
mov
loop
imul
(bad)
jp
sti
in
movs
pop
jmp
shl
xchg
fs
outs
sbb
pop
ins
mov
mov
sti
or
dec
int
xor
cmp
pop
adc
rcl
xchg
enter
dec
or
repz
push
xor
add
or
sub
call
dec
xor
sub
jp
pop
push
icebp
push
repz
call
popf
mov
sbb
add
dec
and
out
sub
and
call
imul
sbb
mov
or
push
cli
nop
sub
ins
inc
lds
cmp
es
fadd
inc
ins
and
js
ret
clc
jmp
pop
pusha
je
and
push
icebp
mov
aaa
ret
mov
inc
ins
pop
popf
movs
popf
cmp
loop
iret
jl
xor
pop
push
jecxz
push
loope
sub
pop
data16
push
mov
imul
push
xchg
sub
xchg
xor
mov
ret
and
gs
ret
stos
ins
fidiv
test
cmp
int
pop
push
sahf
cs
and
leave
inc
inc
xchg
pop
aam
dec
dec
(bad)
and
sub
or
cmps
test
jecxz
std
outs
js
bound
aas
sub
stc
xor
pop
(bad)
pop
out
lahf
adc
popf
jmp
fistp
out
sbb
mov
mov
mov
dec
inc
push
xor
daa
dec
movs
cmp
(bad)
push
mov
dec
jge
dec
(bad)
pop
sbb
adc
test
enter
aam
stos
jmp
mov
lods
outs
fld
out
in
stos
sbb
xor
and
sub
movzx
and
jnp
outs
mov
aad
out
xlat
sbb
pop
pop
loopne
push
dec
add
push
cmc
not
enter
mov
sub
stos
xchg
shr
imul
shr
xchg
jecxz
fld
fwait
cld
sbb
sbb
inc
pop
mov
cvttps2pi
xor
mov
push
sar
repz
pop
fwait
jae
es
cmp
dec
pop
cld
mov
(bad)
cld
and
cmp
xchg
pop
repnz
inc
dec
arpl
rcr
aam
inc
inc
sub
jne
(bad)
out
inc
bound
push
imul
sbb
add
mov
(bad)
dec
nop
mov
outs
dec
pop
stos
out
lahf
repnz
arpl
pop
arpl
daa
iret
add
or
mov
push
int
jg
sub
mov
in
push
mov
xchg
imul
iret
mov
and
icebp
test
xchg
xchg
add
adc
in
daa
vmaxss
test
shr
adc
push
cmp
mov
hlt
dec
or
in
and
movd
inc
stos
sbb
dec
add
cmps
stc
cs
inc
fld
or
adc
ret
retf
mov
aad
xor
cdq
mov
aas
mov
xchg
aam
dec
out
xor
jae
add
jmp
mov
enter
cmp
inc
into
arpl
jne
test
imul
sbb
lods
retf
dec
cdq
pop
pop
(bad)
jbe
or
fistp
jnp
fs
in
stos
xchg
cmp
lock
xor
int
dec
or
lahf
sub
jmp
jle
sub
sub
daa
add
pop
pop
in
jne
mov
cwde
fimul
cmp
mov
enter
fild
push
push
xchg
gs
xchg
adc
lea
sub
dec
iret
aas
dec
sbb
repnz
movs
xor
or
xor
int3
mov
aad
cmovg
push
loop
cmp
mov
mov
je
sbb
cmp
pop
out
sub
(bad)
in
sub
cwde
and
test
bound
out
iret
loop
ror
sub
adc
sbb
push
fisttp
fld
rol
in
lods
fs
adc
sahf
mov
mov
cmps
jo
add
test
sbb
(bad)
call
or
cmp
sbb
dec
jnp
xchg
push
pop
pop
adc
inc
cwde
fsub
sub
and
mov
pop
lods
retf
push
mov
idiv
clc
cmp
outs
and
mov
and
in
cmps
(bad)
repnz
call
pusha
jns
stc
test
push
out
scas
(bad)
dec
scas
inc
jo
in
out
xchg
ins
dec
sbb
in
sahf
pop
dec
rcl
hlt
jnp
push
and
pop
fnsave
sar
push
adc
out
push
lahf
ja
inc
cmps
push
inc
cmp
sub
jbe
fwait
das
pop
jnp
pop
ret
adc
sbb
pop
jb
mov
pop
lods
pop
in
daa
outs
xchg
add
or
and
fild
inc
mov
pushf
xchg
lea
mov
hlt
push
xor
dec
outs
ins
adc
sbb
repz
mov
loopne
jge
sbb
cmc
das
not
mov
cmp
adc
adc
pop
mov
lea
cli
adc
and
pop
push
push
fwait
neg
sub
arpl
repnz
dec
mov
jle
add
sub
xchg
ins
jne
jl
cmp
mov
mov
push
clc
in
stos
jne
mov
inc
shr
sbb
mov
xor
fidivr
xchg
adc
push
cmc
mov
xchg
jl
pop
mov
je
cmc
jbe
push
inc
jbe
mov
cmp
mov
(bad)
shr
cmp
mov
sbb
fisubr
inc
clc
fisubr
push
push
xor
cdq
loope
cld
pop
mov
jo
xor
xchg
repnz
rcr
aas
pop
(bad)
fisub
sbb
dec
out
sbb
jne
xchg
sub
xor
fmul
sbb
outs
out
iret
ins
scas
icebp
sbb
or
ret
js
dec
cld
mov
cwde
adc
fwait
lea
pop
mov
push
xchg
jne
les
jne
mov
icebp
fmul
or
jno
sbb
mov
cmp
sbb
push
(bad)
push
popa
aam
mov
pop
mov
xor
xchg
ror
mov
pop
js
ja
rcr
adc
add
movs
shr
inc
adc
pop
xor
dec
iret
js
je
mov
pop
sbb
sub
jo
mov
mov
jns
jmp
pop
mov
sub
mov
stos
mov
rol
pushf
clc
mov
jle
fwait
aad
lahf
cmp
daa
into
mov
daa
jo
(bad)
mov
adc
gs
lea
ret
sbb
mov
in
jb
leave
je
retf
cmp
(bad)
cmp
mov
es
sahf
sti
mov
aaa
mov
cdq
test
xchg
add
cmp
fst
push
aam
cld
imul
imul
es
int
mov
imul
mov
loope
pop
int3
sub
mov
push
mov
rcl
lods
pusha
cdq
sub
cmp
loopne
call
sbb
and
adc
or
pop
scas
iret
pop
add
mov
repnz
call
add
pop
and
cwde
push
je
sbb
sub
fbld
sub
pop
cmp
push
jg
xchg
cld
push
inc
mov
cli
dec
movs
inc
sbb
outs
ds
adc
das
imul
mov
loopne
jecxz
scas
adc
xor
or
inc
into
jne
cmp
dec
imul
rcr
pop
cli
lahf
or
push
jo
pop
icebp
mov
mov
dec
and
cs
push
(bad)
jns
inc
mov
pop
sbb
pop
enter
mov
lods
dec
jno
cs
in
(bad)
dec
icebp
or
cmc
sub
stos
in
stos
jae
(bad)
outs
sbb
push
xor
add
jp
cmps
call
out
jbe
add
inc
or
shr
dec
and
adc
pop
out
and
adc
aas
jae
cmps
clc
cs
loop
repz
movs
or
jns
hlt
inc
mov
jmp
xor
mul
shl
add
loop
adc
cmps
cmps
inc
xor
push
and
into
or
ret
cmp
or
add
loop
out
or
and
cmp
xchg
xor
mov
loope
in
js
(bad)
mov
jnp
push
cwde
sahf
sbb
jb
adc
xchg
mov
fdiv
xchg
bound
dec
in
sub
fs
gs
popa
mov
ror
movs
mov
add
les
adc
mov
dec
jg
sub
inc
add
(bad)
mov
mov
cld
xchg
add
fwait
mov
outs
inc
bound
adc
and
jne
lds
pop
(bad)
cmp
rcl
or
scas
jl
cmp
mov
cmp
stos
dec
sub
sub
and
jnp
jmp
cmps
je
mov
or
inc
rcr
inc
inc
outs
cmps
imul
sti
or
mov
inc
js
mov
adc
cs
call
icebp
push
in
and
aas
push
out
data16
cmps
stos
out
mov
jge
adc
and
cmp
ret
bound
dec
sbb
add
popa
pop
les
pop
cmps
inc
pop
sbb
push
pop
(bad)
or
xor
or
icebp
jl
ret
sub
ret
pop
cdq
call
mov
leave
cmp
leave
mov
and
enter
test
sbb
lea
fist
ficom
adc
setno
jae
cli
mov
jno
into
dec
add
jo
sahf
hlt
sbb
add
loop
imul
mov
bound
aas
pusha
fisubr
mov
mov
fstp
mov
or
sbb
mov
xchg
add
push
fst
xchg
ss
push
jno
mov
add
add
xchg
stc
jmp
shl
outs
clc
dec
mov
in
stos
and
dec
cmovl
mov
jg
fs
loop
inc
(bad)
test
or
add
and
mov
mov
(bad)
push
or
test
out
outs
out
push
mov
xchg
pushw
inc
in
outs
add
pushf
enter
stc
cmc
arpl
shl
imul
sbb
mov
cmp
das
xor
push
stos
in
dec
fcomi
jmp
xchg
mov
jp
mov
and
(bad)
hlt
jp
add
pop
adc
and
mov
les
in
inc
rcl
xchg
sub
and
fmul
sbb
in
xchg
jns
push
fld
push
in
xor
(bad)
cmc
xchg
push
out
mov
adc
fist
aas
les
add
and
inc
jae
pop
(bad)
mov
fldcw
test
loope
(bad)
ins
(bad)
pusha
movs
sub
pop
inc
inc
mov
jo
mov
ss
push
sbb
cmp
rol
ins
mov
jmp
hlt
scas
push
pop
push
jbe
pop
call
cmp
mov
xor
push
pop
pop
xchg
ror
or
sahf
push
push
addr16
dec
js
sti
movs
sar
int
in
ja
in
adc
pop
sub
dec
adc
sub
fbld
mov
mov
shl
add
cmp
mov
mov
in
inc
ret
jecxz
div
mov
or
cli
fdivr
mov
aad
in
sub
ja
scas
jno
mov
fs
shl
(bad)
or
jae
mov
test
fld
dec
jns
(bad)
adc
stos
jecxz
and
push
sbb
mov
imul
add
adc
and
dec
jg
inc
in
(bad)
aaa
pop
sbb
nop
leave
stc
call
cld
into
pushf
(bad)
jne
add
test
inc
popa
pop
lock
dec
dec
or
adc
add
add
in
xchg
xlat
fsub
stc
into
inc
cli
mov
repnz
movs
xchg
cmp
in
ret
imul
mov
push
push
inc
test
enter
jp
xor
cmp
push
xchg
in
retf
shr
fcmove
lahf
test
call
js
inc
adc
test
loop
or
jno
sub
add
pop
retf
test
push
ins
fwait
out
adc
cs
adc
xor
push
inc
sub
lahf
sbb
sub
cmp
enter
inc
clc
test
xor
mov
nop
setae
dec
mov
push
clc
fwait
jmp
stos
sbb
push
les
mov
mov
retf
mov
nop
(bad)
cmc
ret
lahf
call
mov
inc
enter
inc
mov
nop
sbb
add
dec
in
push
pop
loopne
mov
dec
sbb
rol
mov
jne
nop
jmp
or
mov
aaa
adc
mov
cmps
fadd
cmp
dec
cld
popf
cmp
mov
xor
inc
pop
cmp
in
data16
movs
jmp
mov
cdq
pop
or
retf
xor
mov
pop
aam
ins
pusha
stos
stos
jnp
ret
aam
and
xchg
arpl
es
in
iret
jecxz
cmc
push
cmp
popf
xchg
jmp
sbb
in
clc
sbb
jmp
pop
cmp
ss
inc
inc
pop
fisub
les
and
arpl
mov
xor
in
xchg
and
sub
not
inc
inc
out
pop
test
icebp
iret
push
fs
rcl
(bad)
push
nop
div
adc
loope
outs
clc
dec
mov
adc
add
bound
stc
jle
sbb
into
mov
imul
ret
push
jle
(bad)
out
fidiv
or
dec
cmps
or
call
xor
xor
cmp
jge
adc
fbld
add
lock
xchg
sub
pusha
das
pop
inc
dec
xchg
popf
inc
fidivr
adc
push
jp
xchg
push
mov
jns
push
cmps
inc
lea
rol
stc
and
push
push
cmp
jecxz
bound
out
sub
(bad)
push
ret
pop
ds
in
push
inc
xchg
adc
add
ins
ja
dec
add
mov
(bad)
je
lock
fcom
mov
es
cmp
xchg
push
mov
inc
std
dec
ret
pop
ss
enter
xor
aaa
loope
neg
cli
sub
sbb
test
lea
fisub
ds
dec
mov
push
mov
pop
pusha
push
xchg
(bad)
cs
jmp
out
test
dec
lea
icebp
sub
cli
add
inc
xchg
mov
mov
sub
and
mov
mov
in
aad
push
push
adc
sbb
sub
inc
jecxz
xchg
xor
push
add
stos
mov
mov
and
pop
nop
inc
pop
mov
ret
jne
adc
mov
xor
lea
retf
jge
mov
loope
stos
or
je
xchg
dec
inc
call
fcmovu
dec
mov
dec
fild
retf
shl
sbb
sub
dec
aad
adc
inc
test
jge
xor
adc
lea
fisttp
add
sub
cwde
jle
pop
mov
jg
hlt
fsub
pop
and
repz
pop
in
rcr
out
das
push
xchg
adc
out
and
rcl
jle
pop
sbb
xor
sub
mov
xchg
in
or
cmps
mov
inc
adc
jge
fsubr
jl
mov
add
sahf
cdq
add
mov
or
cmp
push
jge
cwde
pop
jmp
cld
and
adc
ret
test
mov
sbb
mov
shl
fnstcw
nop
inc
ss
nop
xlat
fadd
pop
sbb
(bad)
ret
jo
push
fimul
shr
in
aad
shl
sbb
call
in
mov
clc
enter
pop
pop
rcr
lahf
jno
call
mov
clc
or
fldcw
cmps
mov
test
sbb
das
nop
scas
mov
call
dec
sar
hlt
push
sbb
sub
adc
test
xchg
push
or
pop
hlt
mov
(bad)
jb
add
xchg
clc
xchg
arpl
fnsave
push
jbe
pop
inc
xor
dec
loop
loope
mov
jae
cmc
icebp
jp
fld
js
mov
in
aas
int3
cdq
cmp
(bad)
pop
dec
outs
lahf
mov
inc
movs
inc
adc
and
stc
lds
daa
push
pop
adc
push
xchg
int
push
add
test
xchg
(bad)
cmps
cmp
jne
xlat
popa
push
or
cmp
cld
retf
addr16
pop
out
or
dec
arpl
pop
xchg
aaa
adc
shl
sbb
iret
dec
mov
jb
mov
(bad)
jmp
sub
mov
int3
mov
leave
xchg
jae
inc
repnz
dec
or
mov
(bad)
adc
repnz
mov
cmp
xchg
push
sub
ds
lods
jmp
pop
fisub
sub
lods
out
lock
push
loop
cmp
in
shr
pop
mov
pop
movs
adc
cmp
dec
cmps
sbb
call
sbb
(bad)
in
hlt
mov
ret
mov
leave
jge
mov
aam
or
or
es
mov
cmp
and
call
xor
push
mov
aam
push
test
push
inc
xchg
sub
fcom
lea
mov
push
mov
es
fnstcw
hlt
jo
pop
fistp
ins
pop
retf
dec
clc
sbb
push
cmp
cwde
xchg
xchg
jns
dec
sub
arpl
mov
xchg
jle
cmp
ret
adc
nop
fsubrp
pushf
ja
loopne
test
mov
sub
cli
rcl
mov
outs
popa
ss
stos
pop
sbb
and
bnd
inc
or
inc
push
shr
mov
lods
cmps
ds
cmp
mov
rol
adc
in
xchg
std
call
push
xchg
out
rep
stc
leave
loop
add
fcomp
pop
mov
lds
or
adc
arpl
add
mov
and
mov
cmp
add
ret
mov
test
adc
ret
sub
shl
jge
scas
stos
mul
adc
xor
adc
(bad)
pop
out
xor
xor
pop
shr
jmp
xchg
xchg
ja
cmps
ins
jne
pop
jecxz
data16
mov
or
out
adc
fisttp
punpcklwd
test
sub
pop
imul
scas
xlat
nop
and
xchg
mov
pop
lock
imul
stc
or
(bad)
adc
mov
mov
pop
sbb
retf
ficomp
and
loopne
mov
xchg
or
out
ja
mov
push
push
rcl
xchg
sub
jb
add
mov
jmp
xchg
cmp
adc
cs
add
push
or
inc
aaa
arpl
nop
fnsave
jno
jmp
and
(bad)
cmp
test
lea
inc
mov
jae
push
(bad)
in
in
mov
aas
push
movs
outs
or
fs
jg
lods
cwde
fstp
xchg
xchg
xor
push
stos
loopne
int3
(bad)
xchg
mov
push
mov
jbe
dec
(bad)
jmp
mov
sbb
xlat
xchg
test
scas
pop
and
xchg
dec
sti
es
mov
les
mov
push
loopne
pop
xchg
mov
into
inc
mov
xor
mov
dec
add
scas
cmp
nop
or
imul
pop
clc
fs
and
test
pop
ins
aas
xor
das
push
aad
jecxz
mov
rcl
xchg
push
cmp
cld
lods
inc
push
clc
out
and
popf
xchg
xchg
pop
and
call
inc
ret
and
sbb
aas
inc
rol
or
cmp
push
fistp
mov
inc
shl
in
fimul
jecxz
pop
sbb
movs
xchg
mov
stos
jge
out
sub
jns
mov
stos
hlt
les
mov
outs
nop
lods
(bad)
adc
fwait
and
ja
lock
jl
test
xchg
jmp
into
fld
mov
mov
imul
fwait
jecxz
arpl
jle
sub
inc
inc
in
test
mov
cld
or
push
pop
pop
(bad)
jbe
sub
sub
xor
inc
and
movs
bound
xor
or
sub
sti
adc
nop
cmps
nop
inc
or
pop
lock
jecxz
dec
pop
int
inc
cld
js
in
mov
adc
cdq
pop
jecxz
test
in
aam
push
jns
inc
in
inc
jnp
ins
xchg
leave
jmp
adc
(bad)
ins
movs
scas
pop
inc
inc
cmp
rol
addr16
nop
div
add
push
call
data16
out
in
inc
add
push
add
retf
jmp
pop
sub
and
dec
xchg
enter
push
mov
in
inc
lock
or
pop
call
(bad)
cmp
mov
test
not
ret
(bad)
test
and
xor
repnz
ror
and
icebp
inc
(bad)
xchg
lds
icebp
mov
sub
push
add
das
dec
mov
in
shl
sub
pushf
aad
mov
scas
fsubp
ja
push
retf
pushf
sbb
and
add
ds
mov
sub
jmp
ret
xchg
cli
jo
push
out
push
ret
or
xor
xor
jp
add
jns
bound
jbe
jmp
mov
imul
adc
mov
movs
lods
int3
or
cmps
inc
sar
and
or
xchg
xor
mov
inc
iret
cwde
addr16
mov
xor
jp
jl
aad
and
cmp
bound
es
out
jmp
dec
mov
std
scas
mov
mov
sub
out
cmc
stc
adc
stos
popa
push
(bad)
shl
mov
push
add
icebp
sbb
in
push
xchg
pop
mov
mov
sbb
dec
inc
inc
call
loope
je
mov
and
call
sub
scas
mov
sahf
fmulp
enter
inc
jmp
push
clc
test
mov
mov
mov
inc
ror
imul
mov
ja
mov
xchg
mov
mov
nop
ins
test
xor
push
stos
sbb
mov
jbe
xchg
shl
mov
aad
pop
push
jmp
mov
push
sub
lock
test
(bad)
icebp
jp
pop
cli
int
mov
xchg
mov
fisub
pop
mov
inc
fcomp
push
sub
les
push
jmp
cwde
movs
or
scas
(bad)
shr
xor
xor
push
mov
sbb
push
pop
pop
sti
xor
xor
ds
(bad)
loope
push
(bad)
das
pop
mov
mov
mov
sub
pop
fmul
dec
hlt
mov
icebp
movs
xchg
dec
sbb
and
in
popa
cli
lea
jp
mov
mov
in
jmp
mov
xchg
hlt
mov
fs
das
retf
out
out
mov
push
xor
mov
retf
shr
loope
enter
jno
jne
loopne
dec
(bad)
out
adc
dec
fild
cdq
cmps
mov
adc
fiadd
inc
cmp
out
jmp
push
test
dec
cmp
mov
jp
cmp
pop
xchg
pop
ret
xor
loop
(bad)
(bad)
scas
xchg
push
sub
(bad)
test
dec
or
in
into
jle
push
sets
dec
jnp
test
cs
xor
or
outs
pop
and
or
jecxz
ins
outs
popf
out
mov
adc
adc
dec
pop
add
gs
and
or
inc
dec
clc
aas
aas
in
xchg
xor
cmp
mov
(bad)
arpl
aad
shl
(bad)
loop
jo
mov
cdq
mov
ja
cmc
icebp
sub
xchg
shr
test
hlt
or
ret
add
dec
fbstp
xor
loope
sti
popf
mov
pusha
es
inc
adc
adc
test
or
mov
(bad)
jmp
jo
cmp
int
pop
repz
in
xor
test
lods
sbb
dec
mov
ds
fcom
mov
addr16
cmp
push
aam
add
mov
popa
cmp
xor
add
test
mov
sbb
push
test
rol
outs
xor
jo
mov
push
xchg
jns
dec
jp
xlat
addr16
mov
mov
jp
ficomp
pusha
das
mov
data16
sub
sbb
icebp
push
sbb
movs
retf
jno
fsubp
xor
sub
push
pusha
std
jmp
push
stos
dec
sbb
imul
(bad)
mov
outs
inc
iret
fsub
leave
sbb
or
jg
aaa
inc
movs
jb
fadd
lea
push
lods
(bad)
ds
and
and
jno
xchg
test
or
cmp
jne
push
or
test
xchg
xchg
scas
mov
fstp
or
lds
pop
sbb
xchg
ja
mov
push
mov
or
addr16
fisttp
pop
jle
inc
pop
cmp
adc
mov
loope
push
mov
mov
xor
sub
pop
aam
mov
push
mov
call
xor
test
sub
ret
mov
and
ds
adc
out
dec
nop
push
mov
sti
cwde
neg
(bad)
push
push
das
xchg
mov
push
pusha
fistp
mov
mov
and
add
or
bound
ss
mov
shr
sti
cmc
add
mov
cmps
mov
mov
cli
dec
jl
loopne
cmc
leave
popf
mov
neg
pop
push
xor
add
stc
mov
outs
xchg
push
in
sub
push
pop
push
fbld
pop
out
pop
mov
xor
pushf
por
cmp
mov
jns
stos
push
or
out
adc
xchg
jae
fnsave
push
cmps
leave
jbe
dec
aam
push
pop
aam
movs
pextrw
lahf
jae
xchg
and
das
fiadd
jl
cwde
into
loopne
sub
mov
mov
repnz
sub
push
jl
jg
push
loope
mov
pusha
lods
dec
out
fwait
dec
fisub
add
cmps
inc
sub
jno
sub
ja
(bad)
std
mov
mov
cmp
js
cmp
out
pop
in
sub
or
xchg
mov
pop
cmps
adc
ja
and
pushf
mov
scas
push
(bad)
aaa
jne
stc
push
lar
mov
adc
jne
cs
or
ror
(bad)
movs
fwait
cmps
push
jae
repnz
mov
or
pop
sbb
fst
cld
rcl
das
sub
test
fist
jl
adc
or
scas
jo
jg
cmp
push
sub
imul
jle
stc
pop
pop
sub
mov
pop
and
movs
dec
pop
inc
cmp
shr
into
adc
fcomp
leave
outs
cld
sar
hlt
sub
movs
cmp
hlt
mov
ret
int3
and
mov
mov
sahf
xlat
outs
adc
mov
jp
sub
add
inc
jmp
xchg
xchg
stos
push
add
scas
jns
mov
aas
(bad)
pop
sub
mov
in
jmp
inc
ret
iret
inc
push
jl
cmps
sub
mov
aad
or
fcomi
daa
rcl
xchg
mov
jmp
(bad)
push
mov
cmc
cld
es
xchg
mov
enter
cmp
xor
imul
ret
hlt
repz
out
pop
loopne
icebp
xor
and
nop
out
mov
int3
pop
gs
dec
xchg
mov
jns
mov
sbb
push
aam
dec
(bad)
mov
cdq
sub
add
call
cmp
fnsave
mov
(bad)
fld
bound
ror
jge
js
mov
jmp
stos
push
neg
and
nop
out
cmps
aad
jns
push
and
fist
inc
ret
xchg
mov
mov
jno
icebp
mov
pop
sbb
call
stos
jo
aaa
or
or
jnp
jnp
or
not
adc
push
cmp
out
mov
jmp
push
cmp
mov
and
push
stc
loop
push
aas
sub
std
js
in
(bad)
es
and
jnp
(bad)
adc
out
cmps
add
outs
(bad)
push
test
inc
enter
int
mov
adc
push
rol
xchg
imul
lods
sub
inc
ficom
inc
retf
lahf
dec
std
add
mov
or
adc
addr16
xchg
shl
ss
pop
pushf
mov
rcl
adc
push
ss
adc
pop
sbb
mov
push
dec
arpl
cli
push
cmp
lock
inc
cmp
or
sar
(bad)
mov
in
sbb
loop
xor
adc
clc
jecxz
adc
or
mov
ret
jb
sahf
dec
adc
adc
push
or
popf
in
test
dec
in
and
retf
jb
ret
adc
fsub
pop
nop
lock
or
mov
cld
test
and
sbb
rol
mov
mov
inc
outs
xchg
cmp
dec
ss
add
xchg
push
inc
imul
scas
inc
lds
xor
mov
arpl
aas
test
cwde
std
(bad)
pop
movs
(bad)
jbe
cmc
jmp
movs
out
outs
inc
mov
and
adc
xchg
inc
and
jae
inc
stos
je
stos
loope
mov
dec
xchg
push
stos
pop
(bad)
mov
inc
push
out
(bad)
stos
pusha
movs
ret
mov
daa
arpl
adc
sbb
out
push
je
aas
sub
mov
xlat
pop
movs
clc
andps
xor
int
loope
ins
fcomp
add
inc
popa
inc
and
dec
inc
inc
test
add
ret
pop
cmps
mov
mov
push
sub
aas
pop
lahf
inc
and
fadd
popf
dec
mov
int3
imul
pop
adc
push
dec
pop
in
xlat
push
nop
(bad)
jbe
or
sub
psubsw
and
mov
mov
sub
mov
mov
xor
outs
mov
adc
sub
sub
movs
jp
mov
sub
jge
xchg
ret
mov
and
jge
fdiv
jae
ret
cmp
cs
xchg
cmc
lea
jl
jg
jmp
inc
nop
xor
cmps
or
dec
push
inc
sahf
mov
pushf
push
push
sub
xchg
loop
cmp
icebp
out
pop
xchg
add
sahf
pop
pop
cmc
ret
inc
call
dec
test
cmc
mov
mov
lea
jno
aad
retf
dec
fcomp
sahf
jge
ins
mov
out
adc
push
push
(bad)
cmp
rcr
not
xchg
cmp
ds
pop
cmp
jnp
aaa
mov
aas
ds
std
jae
mov
pop
and
nop
orps
stc
pop
push
call
call
add
xchg
inc
cmp
jb
nop
nop
mov
shl
cld
lahf
mov
js
or
cmp
inc
lea
xchg
dec
push
add
arpl
frstor
pop
or
es
stc
call
xor
pop
repz
pop
mov
dec
shr
xor
call
jmp
jb
stos
dec
outs
sbb
pop
in
fsin
int3
jne
mov
push
in
cs
xor
mov
not
xlat
mul
fdivr
(bad)
stc
outs
jl
scas
rcr
jp
pop
lods
imul
dec
mov
xor
cmp
arpl
mov
push
out
adc
mov
or
daa
cmps
lahf
arpl
sub
in
(bad)
call
push
push
in
lea
rcr
call
pusha
pop
adc
leave
add
mov
fldcw
jo
xchg
inc
in
and
fucomi
inc
mov
jno
cwde
stc
sub
cmp
push
cmp
sub
inc
popf
add
sti
aad
pop
(bad)
jne
pop
xchg
ret
aam
pop
test
ss
js
sub
daa
inc
push
nop
pop
mov
sbb
in
adc
sbb
out
cmp
stos
arpl
sub
xchg
add
(bad)
cmp
cmp
mov
xor
aas
pop
cmp
push
sbb
or
imul
mov
bnd
out
inc
dec
dec
std
xor
arpl
ror
mov
pop
imul
dec
fmul
jnp
cmp
or
add
jae
mov
sub
adc
cmp
bound
cdq
mov
int
push
test
mov
sbb
cmc
xchg
xchg
bswap
pop
pop
jno
sbb
pop
pop
stc
aam
pop
loope
mov
ja
adc
into
arpl
sti
or
lods
and
repz
cmp
out
or
jmp
ds
cmc
(bad)
outs
and
std
or
mov
retf
jo
jmp
adc
dec
mov
mov
jnp
call
fidivr
fwait
lock
out
cmp
loope
sbb
jmp
call
cmp
frstor
jecxz
ror
cmp
mov
jns
(bad)
ja
push
mov
sub
mov
inc
inc
mov
sbb
pop
mov
add
sbb
outs
aas
sub
jecxz
lds
imul
clc
je
ins
jno
loope
mov
pop
in
xor
fldcw
gs
xchg
push
dec
into
mov
sub
jns
xchg
retf
mov
pop
arpl
cmp
pushf
out
jo
sub
ins
in
hlt
aad
jb
push
retf
mov
in
lods
and
cli
addr16
dec
outs
enter
mov
jle
lods
push
pop
out
jmp
add
faddp
mov
sub
mov
adc
push
outs
clc
add
pushf
shr
xor
stos
ret
or
je
sub
xchg
pop
adc
out
sbb
jg
push
and
icebp
push
mov
ret
shl
add
enter
jmp
mov
aad
repnz
fisub
add
test
jae
out
sub
adc
int
je
rcl
shr
and
push
add
js
sbb
fimul
and
dec
movs
ins
sbb
iret
cmp
xor
int3
movs
mov
pop
mov
loop
pop
fldcw
fwait
cmp
sub
repz
add
shr
mov
inc
(bad)
jle
retf
sbb
dec
sbb
or
jge
fstp
ins
jmp
cmp
mov
mov
cwde
jnp
sti
add
fisttp
ja
jnp
iret
pop
retf
sub
and
pop
cwde
or
xor
fist
jbe
mov
jecxz
test
and
cmp
in
mov
js
xor
jbe
arpl
xchg
sub
jnp
mov
in
cmp
lea
lods
pushf
jle
xor
cli
repz
cwde
dec
mov
int
out
and
out
pop
dec
sbb
mov
mov
mov
ins
xor
arpl
sbb
ret
stos
sbb
xchg
sar
das
mov
enter
sbb
in
jbe
into
dec
mov
out
scas
lods
mov
rcr
(bad)
dec
mov
repz
or
or
cwde
enter
mov
addr16
sub
fnstsw
or
cmp
aad
loope
out
lds
push
mov
cmp
popa
fwait
pop
add
in
xor
aad
jmp
mov
xchg
sar
xor
rcr
xor
sbb
cmc
ins
dec
fld
rol
bound
mov
out
mov
cmp
cmp
shl
jmp
mov
das
pushf
fs
jle
push
mov
dec
sub
(bad)
xchg
mov
mov
adc
mov
test
push
mov
shl
(bad)
outs
adc
jmp
arpl
cmps
test
dec
call
fidiv
sbb
sub
mov
cdq
adc
xlat
daa
test
cwde
inc
sub
add
enter
clc
pop
xor
fcomp
shl
xchg
push
(bad)
cli
inc
push
daa
pop
jno
push
pop
and
pusha
nop
iret
push
in
or
and
loopne
and
(bad)
data16
dec
add
mov
sar
push
cwde
ins
or
mov
cmps
ds
rcr
movs
push
jle
xchg
mov
inc
pop
sbb
icebp
jne
sub
sbb
push
xchg
popa
mov
inc
call
movs
push
dec
and
retf
xor
popa
sub
pop
xchg
into
mov
icebp
arpl
stos
pop
push
inc
call
mov
cs
sbb
mov
jb
jecxz
push
fcom
mov
inc
jl
and
call
cli
and
leave
inc
jno
adc
jbe
adc
into
(bad)
pop
loop
out
rol
xor
repz
rcr
int
xchg
int3
repnz
aas
push
stos
in
iret
retf
loope
(bad)
stos
test
lock
rcl
mov
shl
and
shr
jno
fnstsw
fwait
sar
mov
and
scas
mov
pop
xor
xchg
mov
xor
ins
mov
aad
add
retf
adc
cmp
icebp
jno
mov
sahf
(bad)
sar
stc
mov
cdq
int
scas
pusha
sub
sbb
outs
fstp
pop
rcl
add
scas
mov
fwait
sahf
pop
mov
fwait
xchg
mov
add
sub
xchg
aas
xor
xchg
mov
cmp
out
jns
or
sub
push
pop
dec
add
push
cmp
ss
addr16
cmpxchg
jns
add
push
cs
mov
iret
sbb
pop
pop
jo
inc
stc
jns
add
and
and
jae
adc
ret
push
ret
hlt
jmp
movs
or
add
cli
add
sbb
test
push
jg
jbe
add
out
push
sub
in
les
jmp
shl
mov
cld
inc
out
ret
fistp
mov
mov
out
sbb
iret
ss
sub
add
outs
rcl
xlat
cdq
and
push
mov
mul
push
mov
call
pop
mov
fld
inc
repz
les
push
out
inc
pushf
xor
sub
ret
cmps
mov
mov
xchg
sub
xor
cmp
mov
aad
xchg
fcmovne
adc
mov
popf
daa
add
inc
imul
fisub
mov
imul
xor
test
jmp
and
sbb
jle
and
adc
(bad)
lahf
aad
call
mov
loop
movs
adc
nop
sbb
sub
je
movs
mov
xchg
push
pusha
xor
jmp
jns
vpsubusw
(bad)
leave
sbb
jmp
icebp
outs
ret
or
push
lock
sub
mov
add
scas
mov
inc
pop
dec
hlt
aaa
loop
jmp
retf
mov
dec
in
retf
pop
ror
enter
int3
movs
pop
mov
sub
aam
push
push
mov
jge
or
add
bound
adc
jecxz
dec
sbb
cmps
push
mov
sub
cs
push
jnp
scas
int
or
rcr
cld
pusha
cld
push
inc
dec
mov
sbb
in
in
pop
add
and
mov
jo
push
jp
ret
push
movs
(bad)
std
sub
mov
outs
or
int
mov
jno
pop
jmp
xchg
xchg
dec
or
mov
inc
mov
fsubr
jmp
jmp
dec
nop
push
xchg
test
popa
cmp
add
(bad)
sbb
mov
sbb
mov
enter
xor
fsubp
cdq
(bad)
xchg
(bad)
push
push
and
cdq
cwde
outs
out
jnp
mov
into
mov
mov
stc
pop
or
cli
clc
cs
(bad)
cmp
mov
sbb
addr16
cmp
or
out
sti
stos
repnz
in
lock
dec
ja
cmp
xchg
popf
xor
adc
enter
mov
pop
in
sub
mov
xchg
cmp
or
pop
pop
in
mov
sub
jp
mov
jp
adc
loop
xchg
in
ja
test
dec
rol
inc
inc
ins
adc
xor
jge
jbe
pop
retf
mov
jns
xchg
or
or
mov
cmp
ret
outs
popa
lods
mov
jae
arpl
xchg
mov
push
add
into
mov
adc
mov
das
shr
cs
cmps
(bad)
loope
xchg
jno
push
in
pop
div
retf
lahf
rol
pop
mov
pop
les
sbb
gs
cmp
into
mov
pop
iret
pop
jle
push
ficom
addr16
fnsave
mov
fucomip
(bad)
(bad)
xor
lods
add
clc
mov
jl
dec
and
rcl
es
dec
xor
test
mov
adc
das
push
test
es
sbb
mov
mov
jae
cmp
xchg
ins
mov
movs
cmp
imul
lds
cmp
inc
cmc
rcr
call
ins
push
cmps
fisubr
movs
(bad)
push
in
add
jns
push
les
repz
loopne
inc
dec
xchg
gs
lods
xchg
xchg
pop
aad
fs
inc
(bad)
imul
loopne
xlat
les
in
cmp
jle
das
push
fiadd
js
(bad)
and
dec
cld
cld
push
pusha
(bad)
(bad)
adc
cmp
xor
in
xlat
scas
xlat
inc
dec
call
and
enter
sbb
jl
cdq
jb
cmp
jns
mov
aad
mov
clc
clc
dec
lods
xchg
sbb
add
inc
add
push
outs
icebp
je
imul
sar
clc
jl
xor
sbb
add
ror
xchg
cmps
sub
and
aaa
pop
push
js
cmps
push
dec
enter
pop
(bad)
in
(bad)
dec
xor
mov
mov
jmp
sti
mov
(bad)
adc
and
add
inc
mov
retf
sbb
in
ja
xor
sub
mov
arpl
sbb
push
mov
pop
ss
mov
fwait
lods
or
gs
retf
jecxz
inc
or
(bad)
mov
sub
lahf
out
fwait
mov
pusha
xchg
mov
shl
in
movs
pop
fndisi(8087
lea
adc
mov
or
jae
mov
pushf
adc
sti
mov
mov
lds
lods
pop
mov
xchg
sub
add
lahf
jle
hlt
mov
xchg
pop
retf
dec
mov
mov
mov
out
hlt
jmp
mov
outs
test
pop
js
jbe
mov
lahf
cmp
popf
mov
or
push
sub
mov
inc
cmp
hlt
dec
pop
retf
pop
cli
jns
inc
cwde
xor
ja
adc
mov
xchg
fistp
xor
imul
mov
dec
jmp
mov
retf
dec
cmp
les
outs
inc
sti
sub
push
ss
or
dec
cmp
rol
pop
ret
ins
(bad)
mov
cmp
outs
je
pop
(bad)
mov
aas
xor
inc
mov
adc
dec
nop
in
(bad)
dec
sahf
das
add
fnstsw
ins
inc
mov
pushf
loop
mov
sub
es
xchg
sub
dec
sbb
in
pushf
call
nop
cmp
inc
adc
inc
lods
enter
adc
out
shl
sbb
mov
jnp
iret
inc
(bad)
cmp
and
mov
daa
ins
or
xlat
shr
or
adc
repz
retf
sbb
aam
mov
mov
mov
ret
xchg
shl
pop
mov
push
cmp
mov
repz
fcom
and
push
(bad)
(bad)
mov
jno
cvtdq2ps
sbb
mov
shr
fild
lea
(bad)
cmp
es
xchg
xchg
out
jb
mov
jo
pop
dec
lods
cmp
or
mov
cmp
test
out
adc
(bad)
xlat
dec
outs
fs
push
adc
adc
push
xor
imul
xchg
inc
int3
add
retf
pushf
ja
(bad)
and
imul
(bad)
fild
push
push
cmps
scas
adc
jnp
jbe
fxch
fsub
inc
and
mov
mov
pop
scas
shl
xchg
push
cmp
inc
mov
pusha
mov
gs
mov
das
inc
jge
jle
mov
jbe
mov
mov
call
mov
gs
xchg
push
dec
lea
mov
jl
mov
or
ret
mov
popa
in
or
fadd
and
cmps
mov
push
sbb
jnp
mov
mov
enter
jne
sbb
jg
aad
or
stos
pop
cli
hlt
shr
dec
jge
xor
loopne
(bad)
repz
inc
mov
bnd
push
jmp
push
into
mul
push
mov
jmp
mov
loop
iret
push
jge
dec
cmp
mov
add
icebp
or
mov
adc
mov
movs
fld
ror
adc
xchg
or
pop
push
cmp
mov
push
ds
scas
bound
adc
mov
es
adc
packssdw
dec
daa
cmp
mov
les
cwde
leave
and
hlt
gs
ret
dec
mov
jg
loopne
jae
add
mov
xchg
retf
jecxz
xchg
jle
sti
(bad)
xchg
(bad)
daa
add
es
sbb
inc
pushf
jo
sbb
sub
mul
jg
pop
and
jbe
adc
mov
mov
lahf
popa
shr
pusha
mov
dec
sbb
jge
sar
mov
(bad)
mov
adc
daa
adc
cmc
es
xor
mov
cld
sub
mov
fisttp
ds
adc
mov
push
into
std
or
out
fbld
pop
fmul
jae
xor
jmp
ror
ss
or
jg
fdiv
imul
dec
push
test
leave
cmps
icebp
and
pusha
mov
push
adc
movs
cmp
inc
pop
test
(bad)
adc
les
sti
jbe
xlat
or
sbb
test
add
ins
cmp
ins
rol
mov
retf
(bad)
ins
inc
mul
into
test
sub
movs
xor
or
mov
icebp
xor
pop
cwde
inc
dec
mov
jno
call
mov
jg
das
fcom
dec
push
leave
pop
(bad)
lods
push
ja
mov
push
pop
xchg
jmp
xchg
cmc
xchg
inc
out
je
inc
and
dec
retf
rcl
popf
movs
jmp
jmp
inc
fsubr
adc
aad
mov
jmp
stos
add
fstp
or
add
adc
out
cmp
call
push
sub
ficom
cdq
in
and
xchg
movs
shl
ja
sbb
arpl
sar
loope
sub
mov
data16
pop
mov
inc
leave
cmc
movs
enter
rcl
lods
aaa
dec
sbb
mov
fist
add
mov
not
or
addr16
je
sar
mov
pop
hlt
mov
retf
repnz
js
(bad)
sbb
adc
sbb
cmps
dec
mov
sbb
mov
aam
aaa
inc
push
push
mov
in
(bad)
popa
xchg
ds
iret
xchg
movs
daa
xor
push
mov
mov
mov
aaa
push
sub
jbe
mov
mov
or
(bad)
jl
test
mov
jmp
call
xchg
sbb
dec
imul
pop
xchg
mov
push
(bad)
test
inc
bound
inc
ror
mov
iret
inc
in
popa
push
test
adc
call
fnstenv
or
test
push
pop
lods
leave
pusha
push
cmp
pop
cdq
retf
push
jmp
sub
js
daa
stos
mov
push
cmc
aam
pop
inc
push
fcomp
dec
sub
push
fist
ja
jmp
pop
cmp
mov
inc
out
jmp
add
aad
pushf
push
ret
mov
daa
inc
pop
jnp
pop
out
(bad)
sub
dec
cld
sbb
mov
outs
sbb
push
cdq
xchg
loope
sub
out
mov
(bad)
fcom
or
in
jle
xchg
push
sub
pop
push
dec
adc
in
arpl
cmp
inc
inc
(bad)
fdiv
fs
add
(bad)
fdivr
inc
loop
dec
call
stos
mov
cmps
ins
adc
retf
mov
pop
in
mov
outs
push
aam
mov
cmp
sbb
es
retf
lods
sbb
cmp
sub
xor
jae
mov
cmp
out
ins
mov
sub
or
repz
(bad)
mov
mov
cmp
cmp
scas
xchg
dec
and
lods
xchg
dec
xchg
pushf
mov
es
les
and
popa
in
sbb
and
daa
push
lea
ss
cmps
inc
movs
outs
jp
mov
js
pop
sbb
enter
repz
cmp
imul
adc
movs
mov
sub
leave
mov
pop
inc
pusha
inc
push
jl
fstp
clc
push
adc
test
mov
adc
lock
fiadd
in
retf
aam
call
mov
cli
icebp
gs
loopne
pop
cwde
out
fs
fld
push
inc
sub
or
pop
(bad)
fisubr
push
loop
loop
aas
test
xchg
(bad)
es
pop
xchg
inc
pop
nop
fld
jmp
xchg
lds
mov
outs
pusha
add
jae
gs
cmc
test
dec
pop
mov
push
jmp
(bad)
(bad)
test
sbb
sub
aaa
mov
dec
fsub
aaa
inc
push
xchg
daa
data16
push
cs
les
aaa
mov
xchg
mov
jns
mov
imul
popa
ds
out
rcr
mov
fst
fnstenv
and
mov
sub
call
ins
(bad)
cmc
mov
cdq
cmp
inc
mov
repz
ss
jbe
xchg
jmp
xor
arpl
(bad)
iret
inc
and
(bad)
inc
pop
pop
dec
(bad)
sbb
clc
loop
adc
repz
jg
int3
cmc
dec
cmc
sub
fisub
dec
inc
mov
jno
pusha
cmp
or
mov
mov
sti
mov
mov
dec
dec
loopne
push
push
push
enter
or
mov
js
jmp
and
arpl
fsub
xor
sub
mov
or
ret
ret
outs
or
das
inc
inc
retf
xchg
aad
xchg
sbb
adc
std
jae
rcl
mov
repnz
inc
pop
sti
dec
xchg
mov
(bad)
push
test
jmp
xor
sbb
(bad)
movs
dec
mov
push
inc
sub
mov
call
stos
cmp
arpl
scas
pop
mov
bound
push
sbb
add
gs
sbb
mov
rcr
xor
leave
or
(bad)
xor
push
and
cmp
mov
xchg
in
mov
out
xor
(bad)
into
xchg
jmp
add
mov
lods
push
test
xlat
and
cdq
add
test
mov
dec
jmp
jns
jno
inc
mov
ins
test
mov
xchg
ror
hlt
loopne
jecxz
pop
sbb
test
(bad)
std
jl
scas
into
fisub
xchg
sbb
and
adc
hlt
aaa
xchg
add
ss
fs
sahf
hlt
leave
xchg
push
cmp
mov
sub
mov
es
xchg
ins
sbb
enter
jne
mov
add
ss
mov
mul
repnz
ficom
mov
jo
xchg
xlat
xchg
jmp
mov
imul
xor
popf
sub
shr
iret
mov
mov
in
mov
je
pop
push
or
dec
popf
fcmovnb
aad
sbb
add
imul
aas
in
push
fbld
(bad)
or
jmp
imul
stc
fdiv
call
cmp
mov
and
adc
in
les
xor
loope
bound
cmp
test
cmps
je
hlt
fst
ins
xor
pop
adc
lods
sti
daa
movs
xchg
ret
in
cli
and
rol
jmp
jmp
push
or
xchg
mov
pop
sub
outs
loop
mov
jle
mov
mov
ds
jp
jno
(bad)
loop
fdiv
sub
pop
mov
dec
les
pop
stc
dec
call
or
popa
imul
(bad)
cmp
and
pushf
dec
retf
xchg
cmc
xchg
mov
xor
lock
fiadd
test
cs
xor
call
cmp
push
sbb
(bad)
xor
out
ret
fimul
add
adc
je
imul
mov
push
mov
pushf
jp
or
push
data16
rcl
add
xchg
fidiv
mov
dec
sbb
and
sbb
into
gs
mov
push
outs
mov
aad
iret
outs
pop
ins
push
jae
mov
in
imul
scas
mov
ds
lahf
sub
mov
cmp
add
ja
(bad)
jl
sbb
push
push
(bad)
retf
inc
sub
adc
mov
imul
enter
repnz
outs
ret
js
out
xchg
jno
aam
in
jnp
setp
hlt
sar
push
repnz
sahf
retf
imul
jo
adc
pop
mov
push
outs
ins
adc
bound
jl
pop
cmps
sub
cmp
or
ss
sbb
(bad)
push
jae
addr16
cli
pop
ins
sahf
fidivr
fimul
mov
test
mov
fimul
xor
aam
ins
xor
or
out
ins
mov
shl
dec
inc
out
push
(bad)
xor
ds
ret
lods
sub
add
cmc
mov
xor
ja
pushf
arpl
das
mov
inc
or
sub
push
sbb
stc
jmp
xor
pop
sbb
lods
mov
push
fcom
sub
or
sar
jle
retf
mov
call
cmps
aam
les
xor
stc
stc
leave
bound
xchg
sub
test
pop
mov
mov
ss
mov
clc
mov
lock
sub
cmp
or
dec
daa
push
pushf
sbb
jo
cmp
jns
loope
clc
gs
sub
xchg
loop
dec
movs
ins
lahf
jo
je
(bad)
jb
(bad)
test
div
ror
jmp
jp
and
jp
in
add
fcom
cmc
movs
mov
jb
in
les
repnz
imul
mov
cmpxchg
fimul
add
test
mov
jge
or
push
and
jo
mov
sbb
sub
adc
iret
dec
mov
adc
cmp
add
repnz
int
push
cmp
xchg
cmps
inc
lock
and
mov
repz
call
pop
dec
movs
xchg
in
and
les
pop
adc
int3
ror
sbb
jge
cmp
xchg
dec
pop
push
push
push
cmp
dec
ret
(bad)
cmc
push
out
out
adc
sahf
adc
cmp
xchg
or
int
lods
into
(bad)
cmp
outs
icebp
xor
cmps
cdq
inc
pop
dec
hlt
fs
out
mov
sar
cld
loopne
mov
or
jg
xchg
das
add
and
ins
mov
outs
aad
loop
jge
imul
dec
jp
ins
(bad)
out
inc
inc
mov
push
xchg
and
sti
jb
aam
or
lahf
loop
cmp
out
(bad)
daa
arpl
add
sub
call
mov
dec
dec
loop
jbe
popf
pop
fs
movs
popf
mov
sub
mov
sub
into
lods
arpl
adc
lods
ds
add
shr
je
add
mov
mov
(bad)
add
int3
daa
(bad)
adc
bound
clc
es
in
sti
aas
shl
inc
popa
xchg
cli
fmul
out
jbe
adc
test
mov
(bad)
adc
pop
sub
in
cmp
jecxz
jle
mov
bound
in
mov
push
push
das
add
aaa
sbb
pop
mov
neg
xor
repnz
cmp
scas
xchg
fwait
jns
sub
cmp
mov
adc
or
call
repz
sahf
pusha
xor
dec
adc
or
cmp
ds
outs
xchg
adc
mov
stos
out
bound
or
or
ror
ss
out
aas
sub
xchg
xor
jg
neg
dec
sbb
sbb
xchg
test
push
dec
and
mov
add
dec
es
fidivr
sahf
ror
fwait
jl
xor
lds
test
push
pop
xor
stc
ret
nop
fldcw
loope
push
je
xchg
jmp
jge
push
je
fwait
or
daa
data16
inc
cmps
jne
adc
cmp
cmps
add
mov
xor
pushf
cmp
push
icebp
sub
add
push
mov
dec
scas
pop
xchg
adc
lahf
dec
mov
adc
sbb
xor
stc
mov
ins
mov
push
push
push
popa
mov
inc
call
mov
ror
aaa
das
push
movs
push
push
cmp
xlat
xor
dec
sbb
push
loope
cmp
sahf
pop
imul
loop
(bad)
sub
imul
bound
call
in
mov
mov
add
xor
into
pop
or
ror
jmp
imul
sbb
mov
pop
inc
sahf
inc
adc
imul
nop
stc
cmc
pop
dec
call
mov
jne
pop
dec
getsec
pop
push
dec
or
fiadd
or
call
xchg
xor
inc
inc
scas
mov
(bad)
xchg
sbb
inc
(bad)
popa
stos
stos
add
xchg
lahf
add
inc
imul
mov
cmp
push
pop
mov
in
mov
(bad)
call
dec
add
push
sbb
mov
jns
lods
xchg
jmp
jae
fdiv
out
dec
scas
adc
stos
dec
mov
inc
mov
mov
sahf
sbb
mov
add
push
sub
test
mov
jmp
jne
jmp
cwde
imul
jb
test
adc
daa
mov
mov
aam
loop
cmp
mov
shl
adc
ss
in
icebp
lods
adc
arpl
and
xlat
aam
es
pop
mov
push
popf
mov
mov
jmp
popa
(bad)
popf
ins
add
dec
mov
mov
dec
and
pop
inc
add
inc
inc
mov
pop
data16
adc
sub
jge
ds
dec
cmp
push
inc
pop
ins
mov
adc
mov
test
xor
cld
sbb
out
inc
(bad)
xchg
popa
mov
outs
das
mov
ficomp
jp
jne
xchg
and
fwait
cmp
adc
dec
cs
hlt
jge
sub
(bad)
xor
ret
push
jbe
mov
or
dec
cmp
mov
mov
call
jnp
jle
clc
sbb
in
jg
movs
mov
or
data16
jb
cmp
xor
inc
xchg
addr16
js
aam
sbb
and
pop
(bad)
cmp
mov
cmp
(bad)
sbb
jo
(bad)
lahf
shl
icebp
or
les
or
out
(bad)
mov
push
sbb
fistp
outs
adc
push
mov
push
enter
mov
ins
or
lods
ret
fsub
hlt
mov
fwait
dec
out
jg
push
and
xor
xchg
push
mov
push
or
cmp
mov
sbb
pop
les
pmaxub
ret
retf
xor
mov
not
bound
out
sub
sub
mov
das
shr
lock
dec
mov
mov
xchg
ins
jecxz
dec
leave
sti
xchg
fimul
mov
iret
sar
popf
mov
xchg
nop
cmp
out
popa
fs
int3
retf
fldenv
xchg
cmps
push
idiv
outs
clc
ds
imul
xchg
jmp
push
pop
xchg
addr16
and
push
inc
adc
jnp
pop
xchg
sar
sar
push
inc
dec
push
push
sbb
stos
adc
das
dec
adc
enter
ja
cmps
cmp
mov
mov
push
pop
push
cmp
mov
pushf
pop
lods
pop
pop
in
jae
out
in
add
arpl
in
adc
xchg
popf
dec
shl
jge
icebp
gs
cmps
mov
mov
das
dec
(bad)
xor
div
xor
pop
cmps
mov
ror
div
hlt
and
inc
lahf
lock
mov
movs
sbb
mov
sub
xchg
mov
jne
das
into
push
pushf
inc
cwde
cli
xor
sbb
xchg
inc
dec
fs
call
jnp
call
arpl
inc
arpl
imul
int
mov
jbe
sub
imul
xchg
sbb
js
xchg
cmps
scas
fldenv
lods
push
in
fcom
mov
dec
sbb
inc
hlt
mov
aad
out
sub
test
push
out
inc
mov
fs
and
add
inc
or
xchg
imul
inc
movs
push
jmp
daa
rol
xchg
cwde
sbb
pop
mov
jecxz
repnz
cli
popf
js
shl
cld
dec
jae
adc
out
mov
retf
mov
scas
aad
or
jl
push
dec
fwait
cwde
cli
sbb
fsubr
repz
ret
push
aas
push
mov
cmp
psraw
mov
add
ds
lock
cmp
push
outs
jge
leave
cmc
push
pop
dec
je
mov
in
test
outs
mov
sbb
pushf
sbb
cmc
out
xor
loopne
sub
cmc
in
fstp
adc
ret
inc
and
push
inc
cdq
xchg
cdq
je
adc
cmps
scas
dec
outs
mov
cmp
aam
dec
aas
les
adc
(bad)
push
sub
sahf
push
fcmovnbe
mov
mov
rol
cmp
cmps
in
xchg
mov
inc
mov
outs
fmul
xor
stc
loop
icebp
mov
mov
lods
push
fwait
popa
fstp
push
xor
mov
sub
mov
or
jecxz
adc
add
loopne
jne
jnp
push
cmp
cmp
push
fidiv
push
xlat
sbb
xor
xchg
movs
cmp
add
sbb
lds
lods
inc
test
neg
repz
repnz
jmp
add
jmp
das
call
mov
add
add
in
inc
shr
lahf
jmp
std
or
pop
jle
or
pop
dec
mov
mov
scas
jl
aaa
mov
inc
fcmovu
std
mov
in
bound
jmp
jb
mov
add
mov
(bad)
shl
sar
std
xchg
jne
aaa
dec
and
mov
push
pop
push
jecxz
ja
enter
aaa
loope
jecxz
std
lods
jle
sbb
mov
les
addr16
push
push
push
xchg
test
mov
push
push
bound
leave
sbb
aaa
sahf
or
dec
mov
sbb
xchg
retf
stc
push
cmp
push
repz
mov
mov
add
mov
icebp
ins
jbe
inc
jno
stc
pop
jge
pop
cmp
sub
mov
dec
inc
jmp
daa
das
aam
ins
cmps
and
or
mov
xor
call
out
xchg
(bad)
mov
and
ror
lods
jge
mov
mov
sub
in
scas
rol
cdq
xor
xor
int
push
and
xchg
mov
pop
stc
leave
cmp
leave
sbb
xor
jns
cdq
stos
(bad)
fiadd
mov
adc
push
iret
or
push
outs
ins
cmp
adc
cmc
mov
pop
sub
cmp
push
aam
pushf
addr16
mov
sti
arpl
popf
adc
jne
lds
pop
iret
xchg
cmp
sub
sar
daa
inc
out
outs
jp
arpl
loope
or
gs
mov
push
mov
inc
add
fwait
int3
jmp
es
dec
cdq
dec
mov
int
fsubr
jbe
clc
scas
retf
mov
std
call
rcr
pop
(bad)
enter
nop
push
cmp
fiadd
lods
pop
jno
xchg
stc
sbb
stc
mov
or
les
mov
dec
repz
aam
xchg
in
or
cmp
pop
fist
or
cmp
aad
xchg
fcomp
pop
inc
(bad)
scas
jecxz
xchg
push
inc
aaa
stos
mov
jmp
daa
xchg
(bad)
out
xchg
add
dec
xchg
xchg
test
adc
je
es
jbe
neg
imul
test
aas
(bad)
fcomp
js
nop
add
popa
test
push
pop
xchg
pusha
adc
scas
pop
cmc
or
test
push
jl
inc
loope
push
jge
sub
inc
lock
scas
pop
xor
call
idiv
inc
out
push
lods
mov
cmp
push
dec
js
push
(bad)
stos
mov
std
cmp
xor
jecxz
push
jmp
fmul
inc
dec
cs
inc
push
push
pop
mov
xor
daa
repz
stc
bound
outs
jns
mov
out
int3
dec
push
inc
loopne
cmp
leave
jbe
push
pop
xchg
mov
cmps
aas
loope
xor
and
xor
ins
test
bnd
icebp
sub
xchg
xchg
movq
and
(bad)
push
jmp
push
aaa
pop
in
jecxz
cmp
mov
push
cmc
repnz
and
or
out
or
das
xchg
jp
sub
aaa
or
fmul
fstp
push
fsub
enter
push
retf
push
add
call
fcomi
pusha
mov
xchg
sahf
lahf
test
test
inc
loop
sbb
jp
rcr
push
ins
jg
sbb
push
dec
fild
sbb
imul
adc
popa
outs
inc
mov
or
dec
push
out
retf
ret
pop
shl
inc
add
push
sub
cmp
mov
jne
aas
fcom
inc
adc
int3
mov
inc
iret
dec
aad
jbe
inc
out
div
jno
mov
push
inc
add
jge
ficomp
pop
inc
mov
gs
sahf
aad
dec
sub
mov
inc
push
jmp
cmp
xlat
pop
jo
jnp
xor
imul
sahf
inc
call
rcr
push
mov
push
sbb
dec
fild
jl
jl
cmps
add
ja
mov
sub
dec
adc
les
inc
adc
push
data16
mov
cmp
out
ins
test
cs
xor
push
inc
sub
dec
inc
fidivr
dec
iret
loop
hlt
adc
daa
shr
mov
mov
ja
jno
dec
aad
push
imul
xor
rcl
ss
mov
jo
scas
mov
sub
or
in
rol
mov
cli
neg
and
mov
pop
push
xor
mov
repnz
ret
dec
mov
aam
mov
mov
lea
pop
fsubr
and
dec
mov
jle
out
daa
push
(bad)
push
pushf
push
add
repnz
adc
into
mov
out
push
fst
inc
sub
add
pop
lods
mov
idiv
sti
and
call
jnp
push
mov
rol
xor
inc
xchg
hlt
pop
mov
addr16
in
das
mov
js
pop
jb
in
mov
adc
sbb
mov
mov
int
or
xlat
push
and
xchg
add
or
cmp
aad
mov
cmp
iret
xchg
daa
dec
mov
add
test
test
dec
dec
mov
daa
out
and
and
(bad)
add
popa
test
cmp
hlt
dec
mov
out
ds
inc
push
or
push
or
sbb
arpl
adc
in
test
push
cmp
loop
mov
jecxz
(bad)
mov
pop
sub
and
sub
lock
repz
cmc
sbb
sub
sahf
mov
sub
sti
mov
push
inc
sar
idiv
inc
imul
movs
mov
pusha
stos
mov
in
sbb
loope
ss
mov
aad
sbb
in
push
out
outs
loop
div
fld
mov
and
push
inc
nop
ss
aaa
add
in
aaa
add
cmp
bound
jb
jbe
push
sbb
mov
(bad)
jnp
mov
mov
push
mov
dec
dec
mov
gs
xchg
cs
cmp
sbb
push
xor
jl
sub
sahf
sub
daa
gs
and
sub
add
lea
lahf
fld
mov
int3
cmp
sbb
xor
jmp
leave
dec
add
pop
retf
retf
inc
adc
inc
mov
rcl
jecxz
int
xchg
repnz
ret
leave
xor
pop
cmp
loop
in
mov
xchg
into
jb
jg
cs
js
sub
cmp
pop
xchg
nop
sub
imul
shl
and
jne
lea
fs
out
lods
inc
and
adc
cmp
sbb
jl
call
cvtps2pd
sbb
adc
outs
cmp
dec
fimul
imul
push
add
jmp
push
dec
movs
sbb
mov
out
movs
jmp
aam
cmp
sbb
cmp
rcl
gs
stos
xchg
and
loope
icebp
mov
movs
adc
(bad)
aad
mov
inc
clc
es
and
fdivr
push
rcr
stc
enter
daa
or
mov
js
(bad)
lahf
(bad)
cld
(bad)
rol
stos
test
(bad)
add
jmp
inc
pop
sub
in
dec
jg
or
inc
into
jns
and
icebp
daa
sub
sub
dec
out
xchg
jecxz
mov
addr16
scas
aaa
addr16
mov
cmps
inc
cmp
sub
sbb
aad
xchg
mov
jnp
in
pop
mov
lods
xor
mov
xor
out
repnz
gs
sub
out
dec
loopne
hlt
inc
retf
jmp
and
lock
movs
and
rol
jle
sub
ret
(bad)
cmp
jle
test
and
pop
mov
std
push
lods
dec
mov
cld
jne
mov
adc
jbe
addr16
push
(bad)
ins
stos
or
arpl
pushf
mov
call
and
pusha
arpl
mov
mov
iret
adc
repz
mov
ds
lahf
jno
inc
push
adc
aaa
mov
call
mov
cmc
ret
add
retf
mul
mov
sahf
jne
js
fsub
mov
fs
inc
or
or
push
mov
push
shl
sbb
or
inc
push
pop
sbb
(bad)
jmp
ss
add
into
push
mov
mov
jecxz
data16
cld
inc
mov
lods
jge
ins
cmp
mov
mov
mov
setnp
add
shr
imul
repnz
jmp
je
cbw
mov
std
sub
jecxz
neg
or
and
push
fcom
and
or
xor
push
out
data16
lds
imul
mov
test
mov
adc
cmp
push
imul
neg
fisttp
ds
push
retf
pop
mov
cdq
sbb
clc
mov
scas
cmc
and
xchg
sub
push
cmp
xor
ins
lahf
(bad)
call
dec
dec
mov
(bad)
xor
loop
or
adc
fidiv
mov
jle
inc
jg
call
std
enter
sub
stc
cmps
pop
pusha
mov
icebp
xlat
dec
pusha
nop
fstp
in
xor
sbb
in
mov
push
mov
inc
push
and
ja
cmp
sub
in
adc
add
lds
and
cli
cld
out
dec
sub
push
mov
(bad)
cmps
stos
pop
(bad)
jle
(bad)
cdq
shl
shr
xor
push
add
mov
fstp
clc
sbb
xor
int
or
jbe
das
push
test
cli
aam
out
outs
lods
xchg
cmps
fnstsw
cmps
sub
xchg
cmp
fild
test
pushf
mov
inc
outs
push
dec
leave
lods
popa
xlat
popa
ficomp
repz
(bad)
dec
ror
fldcw
shl
adc
scas
addr16
std
sbb
outs
aam
mov
ds
xchg
ins
rcr
and
ret
xlat
jbe
add
jne
pop
(bad)
sar
mov
xor
aas
add
sub
aaa
pop
in
cwde
or
pop
lock
mov
push
adc
call
sbb
in
pop
pop
retf
dec
jmp
fcomp
mov
dec
rcl
mov
cmp
mov
mov
les
add
pushf
mov
jmp
(bad)
fidivr
cmc
nop
daa
aas
push
std
imul
mov
add
push
(bad)
loopne
mov
cmp
jge
xor
sub
popf
inc
pop
(bad)
out
ret
mov
pop
mov
movs
pop
fs
(bad)
stos
mov
push
addr16
addr16
add
cmp
outs
data16
or
adc
jmp
popa
mov
inc
sub
(bad)
stc
(bad)
inc
xchg
jae
test
mov
sbb
dec
inc
mov
mov
(bad)
int3
inc
stos
in
or
cld
mov
dec
into
mov
repnz
cmp
mov
mov
pusha
repnz
push
inc
les
mov
outs
sbb
icebp
push
pop
ja
arpl
retf
inc
imul
retf
dec
mov
mov
cmps
mov
mov
pushfw
dec
adc
push
jno
imul
shl
mov
loopne
jno
inc
or
int3
mov
push
xchg
movs
and
sub
imul
add
movs
cmps
repz
fcmovu
sti
xor
in
ftst
into
mov
inc
push
jbe
(bad)
adc
mov
fwait
xchg
mov
mov
and
mov
dec
movs
ret
push
push
es
imul
inc
dec
mov
xchg
imul
int3
call
imul
or
sbb
mov
sub
dec
in
mov
jl
mov
fld
gs
push
pushf
ins
(bad)
pop
sti
pop
mov
out
sbb
dec
imul
out
pop
mov
(bad)
jmp
sub
jmp
cld
mov
repz
movs
popa
sub
mov
into
je
leave
out
call
jp
sahf
popa
rcr
jnp
sbb
inc
cmp
fisttp
xchg
mov
fbstp
mov
cmc
data16
jmp
rol
mov
mov
add
push
rcr
inc
stos
push
mov
repnz
ret
cmps
leave
mov
(bad)
enter
(bad)
sbb
dec
push
test
into
and
stc
adc
pop
xchg
xor
push
jns
movs
xor
retf
push
loope
add
push
dec
or
std
dec
lods
(bad)
rcl
push
adc
fcomi
push
cwde
add
mov
push
movs
movs
or
xchg
into
mov
in
fxch
pop
arpl
aaa
fwait
lds
stos
lds
adc
lahf
call
scas
mov
and
jnp
in
call
pop
icebp
dec
push
mov
(bad)
adc
shl
sahf
dec
test
scas
adc
ficom
jl
adc
arpl
add
(bad)
add
std
cld
sahf
or
xor
and
dec
mov
ret
adc
sbb
mov
cli
push
cmp
mov
lock
out
mov
pushf
xor
xchg
jnp
bound
(bad)
xor
jne
lds
and
xor
out
add
add
jnp
scas
add
jmp
and
and
and
cmp
shr
dec
inc
aaa
mov
bound
and
es
(bad)
out
retf
jmp
mov
jg
inc
bound
dec
lea
outs
outs
mov
add
push
inc
aad
outs
inc
cld
mov
dec
mov
sub
in
mov
xchg
clc
stos
popf
sub
jg
jp
ds
call
stos
ffreep
pop
push
mov
shr
push
rcl
mov
lods
ror
fwait
or
lods
inc
sub
inc
scas
xor
cmp
pop
out
cmps
test
gs
xor
leave
mov
xor
sbb
mov
cmps
dec
fisttp
rcl
sub
fst
jle
inc
and
clc
sbb
cwde
cli
mov
xchg
nop
push
ds
adc
xor
push
sub
repz
rcl
int3
mov
(bad)
in
push
stos
fsubp
scas
leave
add
stos
sbb
es
cmp
jge
outs
adc
xchg
xchg
jecxz
sub
test
adc
xor
and
or
mov
mov
push
mov
int
cmp
sbb
(bad)
lock
or
mov
pop
push
sbb
cmps
arpl
test
fxam
bound
ret
aas
adc
xor
or
loope
xchg
push
fisub
leave
sbb
retf
cmps
enter
adc
push
mov
adc
cmp
pop
and
int
jne
clc
cmp
mov
repnz
leave
and
movs
xchg
inc
scas
cmp
mov
jmp
mov
imul
rcl
test
mov
mov
pop
sbb
int
pop
cmp
inc
ds
loope
into
popf
call
xchg
jns
scas
jg
add
sahf
test
icebp
dec
rol
dec
push
add
xlat
mov
int3
fwait
xor
xor
gs
add
ror
xchg
(bad)
sub
test
stos
das
aam
mov
pop
js
sbb
cmp
and
retf
int3
dec
movs
and
ja
(bad)
loopne
sub
test
xchg
test
jl
in
movs
mov
jl
add
popa
jmp
inc
out
mov
rcr
retf
movs
push
pop
cld
call
jb
lods
sub
cmc
rep
aad
inc
cmps
mov
dec
or
fs
cmp
or
mov
cmp
in
sub
jnp
dec
bt
dec
pop
xor
adc
test
pop
cmp
fs
mov
sahf
out
(bad)
xlat
pop
(bad)
aam
sub
shl
pop
fdivr
jns
mov
or
arpl
jmp
dec
sub
imul
pop
lock
add
sbb
jnp
xchg
sub
xchg
shr
push
push
paddq
push
(bad)
loop
fild
pushf
xchg
push
aad
neg
xchg
loopne
and
cdq
test
les
xchg
fwait
outs
retf
xchg
adc
test
mul
std
shr
sbb
jne
(bad)
cmp
sbb
jmp
jg
and
xor
arpl
cmc
mov
dec
out
xlat
pop
imul
mov
pop
xlat
ds
lods
fimul
das
mov
pop
mov
test
enter
les
popf
enter
and
push
call
or
shl
movs
ss
test
dec
lock
nop
jb
bound
cmc
fiadd
enter
dec
outs
jle
mov
and
cwde
daa
imul
and
ins
xchg
movs
cmp
or
add
movs
pop
mov
enter
hlt
popf
add
scas
movs
jmp
es
daa
call
sbb
enter
sub
sub
icebp
(bad)
mov
mov
in
dec
rcl
jmp
bound
dec
in
mov
call
mov
pop
cwde
push
xchg
mov
push
cmc
dec
sbb
mov
mov
and
das
xchg
in
out
push
or
arpl
lods
sub
sti
inc
test
repnz
add
inc
lods
dec
inc
and
adc
(bad)
add
mov
in
mov
xchg
mov
inc
xor
es
in
pop
xchg
inc
and
fwait
xchg
or
xchg
mov
cmp
inc
mov
xor
jecxz
adc
in
das
out
cld
lods
repz
inc
dec
inc
mov
adc
and
push
mov
mov
dec
ret
ret
gs
stos
mov
pop
out
setp
in
pop
cmps
mov
retf
jp
inc
out
inc
mov
retf
inc
test
(bad)
aad
add
cs
test
stos
movs
sbb
repnz
cmp
dec
jl
cs
cs
xchg
sbb
iret
shl
xor
int3
push
pop
mov
out
ds
jg
push
adc
ror
inc
dec
push
xchg
jge
inc
pop
aam
bound
sub
adc
mov
loopne
xlat
cli
jl
mov
push
retf
push
repz
daa
xchg
xor
sbb
in
sub
adc
enter
lahf
dec
xchg
lods
mov
push
sbb
cmps
xor
stos
scas
xchg
sbb
out
sub
pushf
fnsave
jno
jne
fnsave
scas
xor
xor
cli
ror
xor
daa
fs
push
scas
add
jbe
dec
adc
test
pop
jae
jle
lock
cli
cmp
sub
jbe
pop
dec
and
add
dec
lods
lds
out
test
jge
cli
cli
sbb
(bad)
mov
adc
loopne
inc
mov
inc
(bad)
inc
xchg
sub
cs
repnz
call
sbb
xchg
dec
push
sub
xchg
mov
add
jp
neg
dec
sar
pop
or
daa
or
mov
(bad)
and
call
fs
inc
(bad)
ds
or
stos
(bad)
cdq
xor
stc
(bad)
inc
adc
sbb
aam
dec
outs
call
iret
xor
xor
js
mov
jp
les
ins
push
mov
and
mov
ror
loopne
dec
lock
add
imul
push
xor
mov
xchg
fcmovne
fs
add
es
mov
test
pusha
fwait
dec
xor
popa
xchg
sbb
mov
pushf
icebp
push
sbb
movs
cmp
mov
add
pop
mov
test
jae
sub
adc
call
out
sbb
call
add
inc
fst
jns
outs
and
inc
test
ror
shr
jne
mov
dec
jg
mov
cmp
mov
lods
cdq
or
inc
dec
fcmovb
(bad)
mov
les
enter
push
jns
sub
jb
mov
gs
inc
inc
xor
cli
sub
mov
jae
and
inc
inc
dec
cmp
mov
icebp
lods
mov
pop
dec
sub
jg
jns
add
stos
outs
sub
xor
cmps
aad
loopne
push
leave
xchg
adc
xor
xchg
sbb
sbb
iret
push
cs
mov
enter
push
aas
inc
in
fwait
dec
mov
adc
lea
cmp
paddb
ins
jl
xchg
dec
adc
out
xchg
imul
pop
sbb
repnz
inc
inc
jnp
rcr
out
sub
push
(bad)
ret
mov
lahf
mov
(bad)
popf
(bad)
sbb
adc
cmps
retf
and
test
xchg
jmp
not
fimul
loopne
push
inc
pop
or
(bad)
jnp
mov
repz
mov
jne
sub
aaa
push
daa
(bad)
cld
das
(bad)
xor
jne
push
mov
(bad)
scas
mov
dec
cwde
pop
rol
inc
leave
push
jmp
das
popa
cmc
push
cmp
xchg
and
enter
mov
cmp
es
shl
pushf
and
cmp
jne
call
in
cmp
pop
cld
inc
mov
xchg
loop
fsub
retf
jb
imul
mov
sub
les
retf
call
push
push
arpl
or
sub
wbinvd
lahf
xlat
data16
repz
inc
stos
jg
sub
cmp
clc
and
inc
cmp
mov
clc
mov
or
xchg
or
stc
aas
or
adc
ds
lock
(bad)
push
push
mov
fimul
xchg
jmp
inc
jo
dec
lea
retf
cmps
(bad)
retf
in
jns
rcr
call
pop
or
push
popa
bound
clc
cmp
aas
add
les
lahf
fld
mov
push
in
mov
js
ss
push
mov
push
inc
bound
dec
test
jb
jae
mov
sar
in
mov
in
(bad)
cmps
mov
and
xchg
out
sbb
xlat
ror
or
je
pop
ss
rcr
pop
enter
jnp
jmp
inc
push
repnz
sub
cmp
inc
neg
inc
push
fild
sub
mov
out
and
mov
dec
ins
or
mov
mov
mov
sub
or
retf
aad
stos
sub
popa
(bad)
leave
in
mov
mov
inc
fdivr
int3
xchg
movs
ja
in
mov
inc
popa
push
mov
out
jno
pop
xchg
add
iret
push
mov
neg
sti
add
ins
sahf
out
push
stc
push
leave
xor
sbb
cmp
sbb
fbstp
sub
ins
xchg
fcmovnb
push
mov
pop
add
enter
and
cmp
dec
outs
dec
mov
out
xchg
bound
in
fmulp
inc
pop
mov
rcl
dec
shr
std
out
dec
bound
pop
stos
out
in
icebp
jnp
and
xor
call
xchg
scas
push
das
or
jl
pop
js
daa
jae
(bad)
sbb
or
pop
fsubr
nop
mov
in
imul
popf
lock
xlat
and
jl
push
lods
mov
in
es
loop
mov
push
dec
adc
add
xchg
cld
fistp
jns
push
jno
in
push
movs
ss
adc
jbe
ss
pop
call
add
leave
retf
cwde
and
test
cmp
repz
addr16
xlat
in
hlt
adc
mov
mov
push
and
cmp
lahf
sar
inc
inc
ins
test
mov
pop
push
cmc
rcr
push
and
fld
scas
lods
jg
ret
(bad)
and
adc
std
in
and
xchg
sub
adc
or
repnz
mov
ret
mov
jge
sub
add
jmp
(bad)
xchg
jnp
cmp
adc
fcmovbe
dec
or
inc
or
sub
in
dec
ins
cmp
jmp
sbb
pop
and
mov
xchg
push
add
lea
mov
mov
fwait
inc
rcl
ja
nop
dec
or
shl
mov
call
test
fnstcw
xchg
imul
mov
mov
dec
and
adc
arpl
call
aam
(bad)
cmps
jns
in
in
xor
out
dec
ins
jnp
mov
daa
xor
adc
dec
cmc
in
and
dec
mov
hlt
jecxz
(bad)
jmp
test
dec
inc
jmp
in
test
add
mov
mov
or
jg
jmp
add
xchg
(bad)
push
xor
pop
out
sub
inc
ret
dec
test
aaa
in
data16
pop
mov
in
sbb
cmp
sbb
int
xor
xchg
int
push
or
ja
mov
jecxz
push
rcl
fwait
jmp
dec
ins
lahf
adc
aaa
loopne
pop
ror
pop
ret
xor
psrld
clc
ror
or
dec
sti
repz
shr
xchg
js
rol
addr16
xor
arpl
repnz
test
add
mov
xchg
sbb
push
fdivrp
cmps
das
in
jmp
add
sub
dec
inc
pusha
jge
sbb
mov
mov
cld
xchg
or
(bad)
(bad)
mov
in
scas
jae
repnz
jp
inc
(bad)
cmp
lahf
fidiv
stos
mov
cmps
movs
jmp
js
je
mov
imul
dec
inc
(bad)
(bad)
aaa
daa
sbb
mov
(bad)
xchg
adc
outs
js
cmp
xchg
addr16
dec
and
dec
mov
in
in
xor
loop
aad
leave
inc
shr
xchg
jp
cld
push
mov
pop
mov
(bad)
xor
xchg
jae
or
(bad)
fdivr
movs
push
test
fwait
mov
dec
mov
pop
mov
gs
or
mov
aad
addr16
daa
adc
xor
shl
or
jecxz
lods
pop
inc
xchg
mov
mov
pop
mov
push
xor
cmps
sbb
mov
mov
ror
sbb
test
in
cmp
or
push
enter
sbb
add
stos
popf
push
inc
xor
js
movaps
or
(bad)
cmp
sar
scas
pop
lea
lea
test
fild
dec
jmp
pop
popa
js
dec
stos
mov
sahf
shl
push
inc
mov
imul
cli
add
inc
mov
rol
pop
call
pop
test
push
movs
sar
mov
addr16
add
stos
xor
jns
pop
adc
mov
sar
pop
mov
xchg
inc
pop
adc
test
xchg
jmp
adc
ins
dec
xlat
vcvtsd2si
and
les
inc
mov
mulps
call
mov
mov
push
push
ret
ja
pop
ins
mov
call
sub
push
push
sbb
add
(bad)
jl
and
and
sub
and
leave
hlt
mov
stos
mov
mov
clc
pusha
mov
mov
add
push
iret
pushf
xchg
out
loop
or
and
mov
mov
scas
sbb
nop
stos
pop
mov
(bad)
imul
(bad)
pop
jnp
in
push
mov
mov
adc
not
fcomp
loope
pop
int3
mov
scas
iret
sbb
les
push
mov
sbb
iret
mov
loopne
imul
movs
mov
dec
adc
xor
sbb
push
(bad)
(bad)
jmp
stos
add
dec
mov
xchg
iret
xor
int3
fwait
sub
or
pop
adc
jmp
addr16
jle
clc
aas
call
out
sub
(bad)
push
repnz
jmp
push
jnp
sbb
repnz
xchg
xor
sub
mov
rcl
rol
cmps
inc
inc
sahf
lds
pop
cmp
cmp
das
jmp
or
jns
fidiv
fcmovnbe
rol
sbb
das
mov
shl
cwde
pop
inc
jmp
mov
nop
pop
in
push
cmp
inc
lahf
data16
aaa
xor
xchg
adc
add
jo
ins
and
vphaddwd
out
icebp
hlt
lods
stos
or
fimul
or
xchg
cmps
xor
fldcw
pop
fsub
call
fstp
mov
into
sub
mov
aas
sub
dec
sbb
repnz
fdiv
lods
push
xor
aas
dec
sbb
pop
adc
or
scas
xor
in
loope
dec
(bad)
xor
dec
inc
pop
cli
fcom
lds
fs
movs
mov
loop
fistp
mov
add
rcl
adc
rcl
out
(bad)
jmp
fisttp
mov
push
sub
mov
gs
or
mov
outs
mov
adc
pavgw
and
in
xor
call
and
rol
bound
les
and
popa
cli
call
sub
sub
adc
or
push
jp
add
imul
or
xchg
pop
mov
movs
jecxz
pop
fisttp
mov
cmp
in
mov
fiadd
jp
cdq
push
enter
loop
add
in
dec
icebp
add
add
mov
shl
mov
inc
mov
hlt
xchg
pop
xchg
add
or
xchg
nop
(bad)
sbb
into
xchg
jbe
into
sub
jns
xchg
ret
js
fidiv
cmp
cmp
jmp
es
ja
xchg
add
or
mov
iret
pop
std
std
test
lods
xchg
out
leave
call
fdivr
adc
daa
push
xchg
sub
mov
cmp
jo
lods
pop
mov
stc
add
into
fisttp
mov
sbb
lods
les
inc
daa
idiv
or
jge
and
mov
dec
push
cs
sti
sahf
push
js
mov
imul
push
pxor
mov
lea
sub
clc
add
in
ret
ret
imul
pushf
in
jae
xchg
call
hlt
pop
xor
xchg
inc
mov
inc
pop
frstor
jbe
xor
dec
sbb
mov
xor
leave
aaa
pop
(bad)
imul
pop
jmp
pop
dec
push
gs
xchg
push
mul
int
jl
mov
lds
inc
dec
pop
cdq
shr
iret
clc
loop
dec
jge
cmc
scas
xor
test
mov
shl
ins
xlat
and
mov
cmc
jne
pop
out
and
fbstp
lock
das
aas
out
jbe
mov
dec
jmp
mov
cmps
out
pusha
sbb
xchg
jb
pop
loopne
pop
aaa
lods
add
mov
sbb
adc
pop
or
mov
int3
pop
in
popa
xchg
push
xchg
xor
(bad)
int
mov
pop
add
loope
or
je
ins
popf
daa
out
(bad)
mov
dec
loope
idiv
les
pop
repz
inc
lods
je
pop
mov
add
fadd
adc
hlt
test
shl
xchg
addr16
fwait
aam
cmp
in
or
mov
xchg
mov
sbb
fwait
and
add
sub
in
test
cmps
xor
fwait
xor
rcr
push
mov
or
iret
push
xchg
pop
cmp
int
repnz
sub
cmps
retf
pop
xchg
cmp
rol
test
mov
or
jg
pop
jns
dec
call
iret
push
dec
jg
push
mov
mov
ja
sub
cwde
push
inc
(bad)
xlat
push
popf
jno
pop
stos
inc
and
(bad)
inc
xchg
jae
xlat
mov
jo
in
ins
push
xchg
dec
rcr
push
jne
cli
outs
mov
sbb
mov
shl
fisub
mov
push
or
push
hlt
xchg
(bad)
out
xchg
cmp
sbb
push
push
fwait
popf
aas
scas
fyl2x
sub
scas
(bad)
mov
out
sar
add
mov
and
imul
(bad)
cmp
bound
jne
inc
jo
ins
mov
rcl
aad
fisttp
adc
jecxz
cmp
adc
scas
retf
gs
inc
mov
cmps
movs
sub
adc
das
in
mov
pusha
retw
dec
cdq
(bad)
pop
fiadd
push
jbe
cmps
cmp
out
push
fwait
repz
inc
ror
xor
arpl
push
lods
retf
popf
or
pop
mov
lds
clc
jle
in
add
push
cld
sahf
push
adc
es
mov
pop
push
sar
jbe
aad
je
mov
(bad)
dec
pop
test
fld
in
jbe
cwde
cdq
dec
outs
mov
nop
(bad)
sub
retf
xor
into
jae
sbb
mov
push
lahf
sub
mov
mov
retf
fisttp
fxch
not
jmp
mov
mov
mov
fsub
or
pushf
lods
adc
add
jo
cs
ror
xchg
pop
lods
sahf
cmp
push
add
pop
clc
call
xchg
repnz
push
mov
scas
out
retf
cwde
xchg
iret
add
daa
mov
aad
in
out
aam
dec
inc
sbb
lock
jl
sar
mul
pop
cmp
mov
js
(bad)
sbb
xchg
mov
pushf
je
and
dec
movs
movs
push
jns
call
popa
and
movs
and
mov
mov
fwait
test
gs
stos
or
js
jp
xor
out
sar
scas
(bad)
rcl
xor
pop
cmps
push
shl
or
cwde
(bad)
(bad)
sahf
into
cmp
jmp
test
stos
fnstsw
or
sub
fcomp
fisttp
std
cs
outs
xor
cdq
ret
and
fist
mov
mov
mov
sub
dec
fstp
xor
in
int3
xchg
rol
(bad)
push
mov
sbb
shl
push
pop
lods
ret
cli
daa
pop
mov
repnz
push
mov
mov
mov
mov
pop
aad
jl
and
dec
mov
test
std
xchg
pop
lds
out
clc
jnp
clc
cmp
outs
cmp
jge
sub
pop
dec
(bad)
outs
sbb
and
mov
sahf
push
push
sub
aaa
mov
jl
or
(bad)
xchg
push
push
fwait
and
int3
mov
cmc
scas
inc
popa
lods
ja
stos
dec
jle
hlt
mov
push
push
cmp
dec
sbb
mov
push
cli
outs
ins
out
mov
pop
call
adc
xor
dec
jp
arpl
ffreep
fisub
sbb
imul
sahf
mov
xor
out
test
mov
cmp
stos
sbb
mov
jne
inc
mov
std
add
mov
sahf
sub
pushf
cdq
shl
xchg
xor
xchg
aas
mov
xchg
(bad)
sti
pop
je
inc
jns
not
rcl
fidiv
cmp
add
xor
mov
dec
aad
or
mov
cdq
or
mov
and
mov
push
xor
adc
cmps
outs
inc
shl
cmp
stos
pushf
arpl
test
mov
jl
pop
cdq
mov
imul
enter
call
cmc
push
popa
sbb
jno
adc
jmp
mov
or
cmps
in
xor
pop
push
(bad)
hlt
dec
test
cs
mov
stos
jge
sahf
push
mov
cdq
mov
cmc
arpl
ss
xchg
mov
lds
mov
bound
mov
jmp
enter
mov
sbb
cmp
sti
pop
sub
loope
lods
mov
into
je
jns
outs
retf
das
ins
sbb
mov
es
in
inc
pop
ret
sub
cmps
sub
cmc
rol
inc
inc
sub
dec
std
mov
fdiv
pop
inc
mov
lahf
cmp
push
mov
bound
xor
mov
push
add
and
(bad)
jl
in
inc
in
xchg
lahf
adc
sar
inc
add
xchg
popa
imul
xor
add
jle
push
jmp
ds
xchg
cmc
xor
ins
and
or
ins
cmc
sub
add
and
push
mov
mov
xor
scas
mov
mov
dec
mov
sub
and
lods
cmp
cmp
or
push
pop
imul
outs
jecxz
mov
adc
xor
mov
xchg
ret
clc
pop
stc
fwait
mov
or
lock
fstenv
sti
in
mov
xor
jae
shl
inc
cmps
ja
clc
stos
mov
sub
icebp
cli
xor
or
add
daa
das
pop
aam
xor
int
xchg
fidiv
dec
iret
or
lahf
jmp
aas
jnp
xor
cmp
mov
stc
push
pop
loope
dec
sti
mov
enter
in
mov
out
pop
jg
inc
or
cmp
rcl
sahf
dec
pop
mov
aaa
hlt
xor
push
and
jns
push
mov
mov
mov
xor
not
pop
popa
test
shr
int3
mov
ror
(bad)
out
loop
dec
retf
mov
(bad)
mov
data16
lea
je
sbb
dec
movs
daa
push
jo
fs
and
cmps
adc
fwait
pop
out
xor
xchg
ds
mov
out
(bad)
fimul
nop
les
std
iret
out
jne
enter
mov
pusha
paddw
sbb
or
mov
jnp
test
les
pop
cwde
scas
ins
mov
(bad)
out
out
xchg
(bad)
fld
mov
mov
jns
jae
sbb
jae
scas
das
iret
jns
inc
loope
jae
sub
sbb
aam
lea
push
sub
push
push
cli
push
and
adc
and
test
movs
cmp
les
inc
dec
ret
push
cld
xbegin
pop
sti
out
bound
test
mov
dec
ins
aad
mov
inc
push
push
mov
mov
pop
xlat
dec
js
xchg
outs
inc
or
xor
shl
sti
jo
shl
sbb
je
das
mov
mov
and
(bad)
repz
imul
jle
aam
sbb
(bad)
imul
dec
cmps
and
in
sbb
mov
rcl
mov
icebp
test
pop
xor
and
push
outs
and
retf
bound
cmp
aam
cwde
mov
jge
cli
pop
cmp
xchg
scas
jl
outs
adc
mov
inc
es
push
cli
imul
test
push
add
pop
int
push
push
call
hlt
mov
ss
push
jne
mov
or
ins
sub
jle
repz
loop
and
repz
cdq
in
mov
nop
mov
sbb
dec
femms
jb
pusha
push
pop
in
cmc
push
(bad)
adc
loop
test
sbb
adc
sbb
aas
rep
idiv
loop
cmp
fsub
and
xchg
call
dec
add
xchg
sbb
adc
jno
sbb
mov
mov
push
mov
(bad)
aaa
scas
test
mov
jb
(bad)
in
sbb
stc
repnz
pop
out
add
cli
mov
jnp
aam
jle
mov
ret
sbb
jae
push
ror
adc
inc
jmp
sub
repnz
and
sub
sub
ins
clc
push
sti
cmps
cmp
retf
mov
pop
mov
cs
add
xchg
adc
jmp
hlt
pop
or
xchg
and
das
inc
and
fist
add
dec
sti
aam
xchg
leave
pop
sti
and
(bad)
push
jns
cwde
cwde
adc
pop
pop
push
ret
(bad)
in
fsubr
rcr
inc
data16
or
cmps
xchg
mov
sbb
jmp
xor
mov
aas
mov
xchg
aas
xlat
xchg
outs
fs
mov
push
ret
mov
scas
xchg
add
push
(bad)
clc
fnsave
inc
push
div
cmp
mov
xor
dec
in
pop
xchg
sbb
xor
mov
mov
sub
inc
jmp
cmps
push
mov
shr
or
mov
jecxz
inc
hlt
repz
into
sbb
je
xchg
lock
mov
pop
jbe
aam
mov
cmp
sub
aas
and
aas
jne
jne
and
bnd
inc
mov
call
inc
dec
mov
mov
jp
inc
cmp
ss
aas
adc
(bad)
out
cmps
fld
xor
adc
inc
fld
mov
lea
lea
cmp
mov
push
fsubr
scas
xor
xchg
shl
mov
es
push
in
mov
(bad)
inc
push
xchg
retf
pushf
mov
sbb
clc
mov
retf
out
sbb
sbb
ficom
push
push
ss
mov
jae
enter
mov
mov
push
or
lock
pushf
int3
fstp
pop
adc
or
mov
xchg
pop
xor
mov
int
mov
sbb
jl
loopne
jne
out
call
pusha
out
mov
sbb
sahf
jmp
retf
retf
or
dec
jbe
inc
fisttp
setp
test
aaa
push
dec
out
je
mov
mov
xor
mov
dec
rcl
popf
dec
push
push
scas
mov
push
jo
or
fwait
test
rcl
jg
jecxz
mov
jg
pop
mov
xor
mov
cmc
stos
add
arpl
ss
jns
inc
cmps
adc
cmp
jle
xchg
jp
enter
adc
ins
ds
push
xor
or
out
xor
cmp
add
jl
cld
jb
sub
sub
cmps
mov
nop
xchg
push
adc
loopne
mov
dec
dec
pushf
pushf
cmp
je
fsubr
or
push
stc
dec
das
add
mov
fwait
call
loopne
fbstp
mov
push
and
es
inc
sahf
out
sub
popa
sub
and
cmp
lods
sub
nop
daa
repz
jg
(bad)
and
lock
loope
push
push
jae
push
inc
pop
jb
iret
popa
jle
gs
ret
scas
repnz
aaa
or
je
jnp
jno
mov
sub
data16
pop
mov
not
cmp
dec
add
xchg
lods
pop
pop
inc
add
out
inc
shl
ret
fcom
sub
push
scas
mov
cmps
pop
mov
inc
ret
jp
mov
ins
mov
inc
lds
sbb
repz
push
pop
mov
pop
push
add
out
test
(bad)
cwde
in
gs
inc
idiv
jmp
inc
std
pop
retf
or
ficom
icebp
ret
fild
push
xor
push
cmps
aam
cmp
mov
sub
mov
push
jp
sub
sub
cmp
ja
jg
xor
sahf
sub
ins
cmc
sbb
cmp
mov
icebp
sbb
icebp
push
and
mov
fxch
or
popa
scas
out
inc
mov
dec
loopne
sahf
adc
and
mov
and
mov
mov
in
test
mov
or
xchg
int
movs
ds
push
popa
ja
cmp
pushf
jno
jp
jmp
xor
inc
jmp
loopne
or
mov
leave
mov
int3
ror
ss
add
fcmovne
add
mov
adc
add
sub
jmp
in
cmps
inc
pop
shl
mov
jg
mov
jge
inc
xor
cmp
jo
ror
sub
mov
fwait
je
jle
lahf
mov
add
test
mov
jnp
pushf
dec
or
cmp
pop
adc
dec
cmp
test
daa
jbe
add
adc
mov
push
stos
jno
dec
shr
xchg
sbb
sbb
inc
sub
mov
mov
jg
add
or
iret
mov
gs
(bad)
pcmpgtd
cmp
inc
push
mov
ffreep
xchg
cs
dec
shr
mov
ret
movs
jae
test
cmp
rcl
mov
out
mov
shl
and
ins
mov
out
call
xchg
cwde
xchg
lahf
loopne
cmps
xor
push
xor
loope
xor
jo
adc
jg
mov
add
cdq
in
sub
in
sub
or
nop
imul
cmps
mov
push
movs
mov
pop
cmp
lock
xchg
cmps
jmp
and
jno
push
in
adc
retf
lods
mov
pop
(bad)
pushf
sti
xor
adc
(bad)
iret
out
fwait
in
cmp
inc
retf
sub
fcmove
or
xor
data16
jne
xchg
rol
clc
aam
loop
daa
dec
jp
dec
inc
ror
mov
pop
daa
ret
pop
int3
stc
nop
sub
cmp
scas
xchg
test
mov
loope
jecxz
fisubr
icebp
add
lock
jb
daa
mov
sub
dec
cmp
fcomp
out
mov
add
or
mov
pop
int
mov
inc
mov
ds
sbb
pushf
push
mov
mov
mov
lods
cmp
xchg
lea
lock
fdiv
mov
jns
mov
cvtdq2ps
ss
popa
jl
mov
rcl
cld
cmc
in
out
enter
pop
mov
int3
mul
cmp
push
inc
movs
sub
fldenv
cmp
cmc
ss
arpl
sub
es
lods
lock
mov
cwde
(bad)
out
pop
dec
or
icebp
ror
rol
daa
cmp
in
movs
in
push
les
add
push
pop
cmp
sub
das
xor
pop
push
or
add
jns
xchg
xor
clc
mov
(bad)
jmp
cmc
cld
mov
adc
xchg
imul
inc
mov
mov
mov
cld
repnz
pop
sub
idiv
aas
aas
out
test
pusha
cwde
imul
outs
push
int3
push
add
rol
push
or
mov
jecxz
push
je
(bad)
sub
dec
inc
jecxz
jp
jb
fs
retf
mov
adc
popa
test
mov
sbb
ins
test
adc
sbb
xchg
mov
add
pop
leave
std
bound
jecxz
dec
xchg
(bad)
fist
call
sti
cmp
push
in
dec
push
and
iret
push
mov
and
loop
fild
and
popf
xchg
sub
ret
daa
repz
test
xor
mov
test
jo
add
retf
mov
retf
cmp
add
(bad)
js
jns
mov
sbb
daa
adc
rcr
or
mov
xlat
(bad)
xchg
xor
xor
mov
or
pop
int3
test
loopne
rcl
iret
push
(bad)
loop
mov
movs
xor
xor
pop
mov
bound
enter
jne
jns
sub
cld
push
xchg
push
jmp
retf
jae
or
jmp
add
xchg
and
test
inc
rcl
xchg
or
das
mov
push
add
inc
retf
inc
inc
jb
jge
cmp
leave
cmps
dec
retf
mov
inc
mov
push
and
sbb
mov
or
es
aam
sbb
test
movs
into
xor
mov
fcomp
xor
jne
scas
cdq
fld
pop
lods
cwde
(bad)
movs
add
push
add
icebp
js
aad
sub
mov
jmp
lods
loopne
cmc
mov
(bad)
ds
inc
aas
std
push
test
push
ror
jbe
sub
xchg
ins
fisubr
in
sub
mov
call
push
jmp
pop
pop
jmp
in
loop
xor
mov
add
or
and
adc
and
push
mov
retf
jo
mov
scas
inc
aas
movs
xor
mov
dec
push
cmp
mov
xchg
ja
mov
outs
inc
jecxz
mov
leave
neg
loop
fsub
sub
imul
pop
lahf
fiadd
or
movs
mov
repz
in
test
test
cli
mov
mov
or
pop
inc
adc
(bad)
sub
dec
or
addr16
mov
adc
lods
mov
nop
mov
(bad)
loopne
into
inc
mov
sbb
jae
sbb
rep
mov
shr
stos
push
out
vmovlpd
push
sbb
jle
out
or
or
jge
jbe
mov
pop
xor
add
or
mov
mov
mov
into
(bad)
ja
pop
dec
out
sbb
or
test
js
pushf
or
mov
in
cld
in
or
adc
les
jp
lock
mov
jmp
and
in
call
test
adc
mov
fmulp
out
sbb
cmp
and
sti
test
cmp
and
inc
mov
scas
jecxz
adc
clc
hlt
ins
pop
cmc
push
and
xor
jns
ins
inc
dec
pusha
test
std
aad
add
shl
xor
and
jb
in
iret
xchg
adc
sub
and
mov
mov
push
iret
outs
fisubr
int3
lods
xchg
lahf
sbb
dec
adc
fisttp
jmp
mov
bswap
imul
(bad)
mov
retf
xlat
mov
push
movs
cmovbe
aam
ret
test
div
lds
adc
inc
shl
sub
xor
and
inc
dec
leave
xchg
dec
push
pop
lods
mov
mov
add
loopne
cwde
lds
inc
mov
rep
ins
mov
sbb
jp
mov
mov
pusha
movs
sub
pop
lods
add
out
jle
shr
or
mov
ins
sbb
add
imul
jbe
xor
mov
aam
xor
cmps
in
sub
sbb
mov
adc
lods
addr16
fsub
mov
sub
pop
mov
mov
push
movs
lods
pusha
push
scas
xlat
and
cmp
and
push
dec
sub
mov
adc
jb
pop
repz
shl
mov
jbe
int
xchg
(bad)
mov
fwait
test
inc
sbb
pop
push
jno
stc
sahf
dec
mov
and
add
jl
in
cmp
xor
aad
lock
(bad)
or
xchg
lahf
test
xor
sbb
test
stos
sbb
in
mov
inc
push
std
mov
out
and
sahf
mov
mov
or
mov
push
enter
mov
jae
scas
add
leave
jmp
rcl
aam
inc
xor
call
cs
xchg
mov
into
push
mov
cli
fisub
addr16
jp
cmp
push
je
jecxz
ins
adc
dec
(bad)
and
cmps
test
adc
into
sbb
retf
shl
mov
(bad)
jmp
fs
jns
imul
mov
or
dec
int
jmp
mov
retf
mov
loop
mov
ins
dec
or
(bad)
das
fisubr
fidiv
jne
mov
inc
cdq
(bad)
icebp
imul
out
in
cmp
mov
jns
dec
sub
xchg
pop
push
sub
out
mov
jecxz
and
and
aas
hlt
cmp
mov
mov
lods
enter
retf
sub
jl
fnstcw
jo
mov
push
enter
(bad)
sbb
mov
jne
lods
jecxz
dec
outs
test
aaa
jns
int
out
(bad)
jl
sti
neg
inc
mov
or
jmp
mov
loop
push
in
pop
(bad)
jl
out
xor
dec
lahf
fsubr
rol
loop
dec
mov
mov
cs
call
pusha
stos
iret
push
dec
pop
enter
push
(bad)
cmps
or
lods
add
and
cmp
shl
loopne
loop
or
push
gs
add
mov
inc
loop
je
test
call
jmp
lds
mov
ins
push
int3
jno
adc
push
xchg
pop
dec
rcr
out
xor
xor
adc
std
cli
and
les
pop
fucomip
pop
mov
add
into
or
(bad)
pop
or
adc
cmps
out
push
adc
aad
ret
shl
cmp
mov
pushf
lock
out
jno
xlat
call
push
popf
adc
mov
push
leave
ins
and
or
outs
jl
scas
popf
lea
out
mov
in
mov
in
pop
popf
mov
or
xchg
ror
lods
push
jnp
popf
inc
mov
adc
es
push
add
shr
adc
and
or
retf
jns
or
pop
mov
les
idiv
jmp
push
mov
fdiv
sub
or
jl
jns
jb
and
inc
mov
inc
and
sbb
jns
push
push
inc
je
jg
movaps
ins
ret
sub
dec
xor
dec
test
jg
ja
or
scas
sbb
call
jns
ds
stos
pop
mov
sub
rol
add
xchg
lods
add
push
xlat
cmps
sbb
imul
and
xchg
xor
push
push
sbb
push
pusha
mov
mov
mov
mov
xchg
inc
neg
dec
pop
test
fwait
jo
lods
js
loope
in
gs
bound
mov
repz
mov
xor
lods
cmps
mov
movs
mov
push
sub
out
add
inc
test
ins
addr16
inc
pop
repz
mov
sub
icebp
cmp
jle
add
push
jno
add
push
xchg
paddsw
mov
outs
jbe
lock
ret
jnp
xchg
stc
add
mov
or
and
adc
push
and
dec
fwait
clc
push
int3
adc
or
iret
xchg
ret
lds
mov
out
mov
push
cdq
sbb
jbe
nop
xor
jle
pop
xchg
dec
mov
mov
jge
xor
inc
add
xor
ja
repnz
or
out
adc
pushf
xlat
and
push
mov
stc
sbb
repz
add
std
xlat
mov
pop
dec
or
push
mov
adc
sub
mov
out
cmps
mov
inc
cmp
adc
mov
dec
push
adc
fnstenv
pop
out
rol
xchg
jecxz
push
dec
cmp
pop
(bad)
out
push
add
les
out
out
push
mov
daa
ins
daa
cmps
mov
push
xchg
rcl
mov
ror
shl
mov
adc
xor
(bad)
test
pop
xor
stos
adc
js
or
cdq
pop
sbb
je
sahf
aad
cmp
mov
jne
shl
lahf
retf
mov
call
sbb
mov
movs
add
dec
inc
in
push
xor
scas
cmp
ins
pop
aas
call
sub
inc
iret
adc
pop
inc
outs
loopne
sbb
add
or
sbb
xor
xchg
hlt
loop
pop
shl
mov
mov
lock
jae
jbe
push
jle
mov
icebp
(bad)
cmps
mov
pop
ss
add
into
xchg
in
(bad)
ds
sbb
pusha
add
ror
adc
sbb
inc
in
sbb
test
mov
retf
and
rol
xchg
pop
out
inc
jnp
pop
cmp
xor
adc
xchg
(bad)
ss
out
cmp
sub
inc
test
gs
dec
test
je
je
adc
out
and
fwait
movs
xchg
ror
mov
mov
(bad)
xchg
adc
cmps
mov
mov
rol
mov
ret
loopne
data16
jmp
mov
push
ret
push
dec
jbe
and
outs
or
jecxz
in
pop
mov
sar
or
call
fistp
add
mov
push
jbe
leave
hlt
and
pop
jmp
daa
mov
add
test
push
fwait
repz
sbb
xor
add
jmp
out
(bad)
aam
mov
int
adc
dec
mov
jno
cmp
outs
and
jmp
test
cmp
retf
jg
call
sbb
sbb
push
jae
addr16
cmp
shr
fnstcw
cli
test
ja
sbb
fcmovu
jae
pop
push
adc
xchg
and
xchg
loope
and
inc
test
mov
repnz
mov
mov
xchg
and
mov
(bad)
(bad)
push
inc
sub
sub
bound
cmp
nop
sub
push
push
fadd
ja
cmps
scas
ror
sbb
imul
std
dec
jmp
inc
xchg
nop
add
movs
fs
movs
jl
fild
pusha
pop
fsub
add
aaa
idiv
push
jbe
in
mov
inc
stos
mov
(bad)
inc
dec
mov
iret
adc
rcl
mov
dec
out
call
cmp
mov
cli
dec
mov
clc
xor
jno
hlt
dec
fcmove
clc
daa
jne
pusha
push
das
pop
out
in
mov
dec
inc
(bad)
dec
push
retf
outs
xchg
lods
or
and
(bad)
out
pop
mov
or
sahf
outs
push
shr
mov
xlat
test
aaa
ret
dec
or
ja
cld
mov
sub
xor
jg
shr
mov
ffreep
push
pop
dec
adc
ja
scas
ror
sub
mov
xchg
sahf
jecxz
not
pop
jbe
or
aam
push
ja
leave
jg
push
mov
gs
aam
adc
out
mov
adc
mov
mov
ss
sti
mov
push
ja
jg
gs
xchg
(bad)
gs
inc
loop
retf
xchg
leave
jae
and
sti
ficom
arpl
fidiv
sbb
gs
fs
push
ret
retf
mov
sub
leave
cmp
xchg
sbb
daa
mov
out
sbb
daa
sbb
rcl
mov
cmps
repnz
stc
test
mov
inc
push
fmul
(bad)
xchg
jae
icebp
dec
push
in
popa
retf
and
stos
mov
mov
mov
cwde
mov
mov
cld
popa
in
fs
iret
dec
cmp
fcomp
stos
and
repz
cld
fsubp
(bad)
mov
sbb
enter
sub
jnp
add
push
lahf
jg
xlat
das
bound
sahf
add
imul
dec
sub
loopne
in
(bad)
js
jb
lahf
fdivr
scas
scas
add
div
das
pushf
in
and
xor
and
jle
or
ret
test
pop
sub
push
mov
cli
ins
enter
aam
ins
not
cmps
gs
das
cs
push
(bad)
mov
pop
and
in
mov
add
sar
js
jo
sbb
jge
loopne
test
nop
loopne
dec
push
inc
retf
xor
push
or
fcom
addr16
dec
in
gs
or
cli
inc
icebp
jmp
(bad)
movs
sub
dec
push
mov
jnp
arpl
jp
inc
clc
push
addr16
or
inc
jp
jno
fwait
icebp
jecxz
xor
iret
scas
cmc
and
imul
inc
lea
sbb
sub
js
outs
push
xor
(bad)
hlt
int3
frstor
pusha
mov
inc
fadd
inc
ins
mov
adc
xor
sub
jnp
outs
jl
mov
dec
or
aam
ror
loope
jne
cdq
div
push
mov
vmovsldup
adc
(bad)
je
inc
std
pop
mov
loope
inc
push
in
dec
and
jle
mov
rcl
mov
mov
fsub
push
fcomp
mov
neg
pop
jb
loopne
dec
mov
pop
add
jge
xchg
imul
adc
cmp
ins
pop
xor
aam
cmc
mov
push
cwde
cmp
push
jmp
shl
jecxz
add
mov
int
mov
ja
jb
scas
iret
data16
cmp
jmp
mov
scas
or
and
cmp
rcl
push
sbb
in
test
mov
adc
add
mov
add
into
(bad)
jmp
(bad)
xor
adc
cmc
push
cmp
mov
pop
sbb
aam
aaa
or
lods
jp
pop
or
xlat
jne
iret
cmp
mov
mov
jbe
(bad)
leave
dec
ror
ds
sub
pop
xchg
sbb
lahf
inc
mov
mov
std
pusha
inc
push
or
jg
in
xchg
adc
push
ror
sbb
enter
js
jns
mov
lock
xor
cs
mov
das
loope
pop
into
push
out
sbb
xor
scas
mov
rol
in
stc
push
loopne
lock
pop
cmp
sbb
sahf
inc
xor
scas
mov
jg
mov
mov
test
jp
push
sub
or
pop
(bad)
lods
adc
jo
mov
mov
sub
add
jmp
je
fldcw
lods
cs
xchg
adc
pop
ficomp
cmp
push
sbb
outs
add
mov
stc
dec
stos
int
bound
push
repnz
push
or
jb
addr16
test
inc
or
lea
xor
inc
jo
mov
mov
jo
sub
cld
inc
xor
dec
outs
enter
int3
cmp
ret
imul
pop
call
mov
lods
scas
repz
jmp
into
mov
lahf
scas
call
sbb
cdq
inc
cmp
and
retf
outs
arpl
add
pop
test
fisttp
mov
nop
fidivr
not
rcr
fs
dec
sahf
inc
push
sbb
adc
(bad)
fsub
cmp
aaa
mov
cmp
mov
daa
loop
stos
(bad)
pop
sahf
xchg
lods
xrelease
or
sbb
mov
mov
(bad)
jmp
mov
jo
repnz
jbe
add
stos
pop
pop
rol
sub
jge
call
push
cmc
scas
stc
cmp
retf
xor
push
into
outs
push
rdmsr
ret
and
leave
inc
not
dec
mov
lahf
xchg
jmp
cwde
mov
adc
cmps
mov
or
sub
clc
add
xchg
scas
or
ins
jo
cmp
movs
pusha
mov
out
ficom
fcom
lahf
aad
cmp
xor
inc
sbb
(bad)
mov
mov
adc
aad
jp
pop
(bad)
in
into
jp
xchg
push
fdiv
cld
adc
push
add
outs
int3
mov
and
inc
shl
int
aas
cdq
or
dec
mov
into
(bad)
lods
add
push
cmp
enter
popf
(bad)
aad
inc
dec
pop
xor
sub
push
shl
shl
nop
xchg
sub
adc
sub
movs
sub
adc
mov
cmps
inc
xchg
sbb
add
int
daa
xchg
jmp
sbb
cmp
sub
inc
lods
loop
inc
or
aaa
push
mov
add
in
sub
add
push
test
stos
cdq
imul
test
pop
mov
inc
or
mov
neg
push
or
jne
xchg
dec
xchg
(bad)
jecxz
cmc
jno
push
adc
pop
(bad)
fs
ror
jp
pop
lea
into
shl
cld
ins
seto
pop
int3
int
mov
ins
aam
inc
minps
mov
dec
sbb
mov
fdivr
jne
and
cli
sbb
mov
loopne
xchg
call
inc
lds
add
sub
arpl
cmc
test
jecxz
rcl
or
and
xchg
aas
gs
pop
clc
scas
nop
mov
lea
or
ret
add
sbb
sar
or
pop
pop
push
xchg
aas
sbb
push
lods
or
(bad)
(bad)
jnp
xchg
or
mov
push
fstp
imul
test
test
or
movs
rcr
or
xor
imul
jle
sbb
movs
add
inc
repz
push
daa
inc
or
push
push
hlt
retf
sahf
mov
xchg
lods
popf
lahf
stc
call
push
in
xor
ficom
xchg
pop
test
cmps
or
mov
into
cli
pop
loop
pop
into
hlt
jns
inc
jg
in
les
mov
mov
or
mov
rcl
adc
sbb
push
inc
dec
mov
pop
inc
mov
movs
je
mov
inc
outs
push
das
xchg
cmp
push
pop
add
pop
out
and
push
std
call
aaa
cmp
movnti
and
fld
rol
cmp
or
icebp
adc
cs
dec
cmp
into
out
sbb
adc
jae
aaa
or
scas
push
mov
shr
jmp
add
mov
sub
arpl
out
dec
call
sar
pop
pop
inc
push
into
out
imul
jb
xor
outs
bound
jecxz
in
fucompp
cdq
jae
fcmovnu
std
(bad)
pushf
push
xor
ins
push
push
jmp
adc
cmps
test
fcom
jne
cmp
or
imul
jo
loopne
sub
jns
dec
pop
int3
cmp
mov
push
mov
xor
movs
aas
adc
out
add
push
inc
int3
pop
(bad)
imul
ins
dec
pop
dec
fwait
or
mov
hlt
adc
push
cmp
aad
scas
push
iret
inc
mov
push
pop
or
xor
pop
outs
lods
(bad)
sub
mov
(bad)
call
je
loop
aaa
shr
mov
fimul
sbb
popa
into
mov
cmp
xor
mov
adc
scas
mov
push
aam
mov
aaa
sub
adc
shl
push
or
pushf
int
cmp
jno
inc
clc
call
loop
mov
mov
popf
adc
(bad)
dec
(bad)
and
retf
xor
inc
jge
pusha
out
fcomp
sub
jbe
inc
mov
ds
add
out
mov
scas
mov
mov
xor
aam
jns
sahf
sbb
and
es
xor
sub
das
cmp
and
adc
cmc
xor
test
fimul
xlat
mov
ret
ret
jle
test
lds
cmp
push
out
push
gs
out
push
pop
jo
aaa
call
inc
scas
pop
add
xor
fnstenv
inc
or
add
mov
pop
scas
or
das
mov
sub
popf
outs
mov
shl
push
cld
sbb
imul
cld
jne
out
imul
cli
repz
cmp
leave
aaa
ret
or
int3
mov
outs
and
fsub
mov
mov
and
jbe
sbb
not
jns
cmps
pop
ror
xchg
mov
lahf
retf
mov
lea
mov
movs
loop
rcl
lea
mov
dec
xor
clc
add
outs
push
cmp
pop
imul
sahf
xchg
inc
shl
jg
cmp
repz
and
push
xchg
mov
inc
inc
sahf
inc
sbb
mov
dec
jp
jns
imul
retf
pop
call
hlt
retf
sub
lods
nop
xor
mov
rcl
add
sbb
test
push
test
xchg
sti
and
push
jmp
xlat
and
outs
(bad)
out
push
jge
dec
mov
sbb
arpl
les
fwait
xor
out
es
mov
pop
or
ret
mov
imul
bound
cdq
xor
sar
arpl
push
(bad)
mov
add
jge
pusha
outs
stc
mov
cmp
jl
cs
loop
xchg
inc
test
movs
jmp
mov
jle
sub
inc
pop
pushf
sahf
push
dec
ss
push
ja
test
std
fnstsw
cmps
fstp
sbb
icebp
pop
dec
leave
in
in
dec
inc
sub
sahf
inc
(bad)
icebp
mov
dec
inc
add
adc
mov
das
cwde
or
mov
inc
xlat
xor
iret
pop
jg
jmp
jns
jno
aam
xchg
mov
pmaxub
jge
pop
mov
and
cdq
sbb
stos
adc
popf
scas
(bad)
sar
jl
add
jno
js
retf
aas
cli
lahf
mov
in
enter
jmp
aad
sub
pop
sub
outs
dec
js
cdq
outs
mov
shl
call
cdq
xchg
ss
pop
arpl
lea
popa
repz
aaa
(bad)
sti
jmp
cdq
loope
popf
fdiv
sbb
lock
dec
jge
fwait
xchg
push
dec
mov
fisub
cld
jmp
fistp
jge
sub
fsub
cli
or
dec
in
push
(bad)
adc
int
mov
dec
jmp
or
jne
test
js
inc
pusha
xlat
fisubr
arpl
push
push
dec
xor
idiv
(bad)
cmps
mov
dec
(bad)
(bad)
cmp
jg
sub
dec
stos
iret
push
fdivr
popa
(bad)
shl
pop
cli
inc
das
cmp
movs
push
sbb
add
pop
sbb
jmp
ja
fld
stos
out
cwde
sar
cmp
or
jmp
add
iret
pop
addr16
add
adc
mov
and
jae
fsubr
dec
(bad)
lahf
or
fimul
pusha
fidiv
iret
fiadd
test
fdiv
aam
push
pop
shl
xchg
and
mul
ins
mov
pusha
sbb
adc
mov
and
pop
ret
icebp
cs
mov
fdivr
mov
iret
je
(bad)
xor
fdiv
icebp
mov
in
xor
inc
mov
sub
cmp
(bad)
xchg
mov
xor
dec
sbb
(bad)
mov
test
jno
(bad)
(bad)
dec
addr16
out
mov
jmp
(bad)
cmp
cmp
adc
xor
cmc
jns
movs
les
and
lock
iret
sahf
inc
enter
call
call
mov
ja
mov
jno
mov
repnz
or
adc
add
add
sbb
sti
(bad)
sub
add
adc
push
es
sub
jecxz
ret
adc
mov
sbb
add
add
dec
sbb
sbb
(bad)
fidiv
test
jo
fisttp
mov
hlt
and
frstor
ffreep
ss
ss
adc
fimul
or
hlt
pop
imul
push
mov
out
cmp
(bad)
mov
inc
out
add
add
loope
jnp
dec
gs
pop
sbb
mov
jae
mov
lods
or
xchg
and
int
mov
dec
pop
ficomp
jmp
mov
mov
test
push
jb
imul
cmp
inc
cdq
stos
pusha
daa
icebp
pop
cwde
jmp
outs
je
repnz
push
and
mov
cmp
jmp
jns
mov
sahf
adc
movs
jne
call
mov
loope
test
lods
into
cmp
scas
jecxz
mov
push
nop
daa
popf
int3
pop
adc
xchg
psubsw
cmps
fimul
retf
in
jae
mov
push
out
xor
rcl
xor
jl
push
xor
xchg
je
ja
add
adc
bound
cmp
mov
scas
mov
add
sbb
outs
js
mov
xchg
lock
pusha
mov
xor
(bad)
(bad)
cmc
sbb
sti
mov
and
pop
xchg
mov
xor
loop
in
xlat
in
and
mov
adc
(bad)
jp
mov
mov
or
jae
fdivr
fcmovnu
hlt
sti
mov
pop
inc
aaa
inc
out
inc
fwait
sub
fadd
scas
(bad)
bound
and
adc
sbb
imul
stos
push
in
jg
adc
sbb
retf
push
dec
stos
push
into
out
fs
rol
out
xor
inc
mov
lds
rcl
mov
mov
xchg
dec
or
sub
call
retf
inc
push
xchg
ins
mov
ficom
xchg
sbb
adc
gs
dec
aas
fdiv
mov
cvtpi2ps
adc
loopne
jne
imul
sti
mov
cmps
mov
cmp
add
clc
inc
loope
rol
fisttp
cli
std
(bad)
fsubr
sbb
mov
push
add
add
(bad)
loop
sub
test
add
pop
cmovg
cdq
(bad)
clc
dec
or
cmp
bound
aam
xor
mov
(bad)
jl
call
fwait
in
inc
inc
repnz
test
fwait
cdq
cmps
ins
shr
jns
ror
mov
lds
lods
jnp
(bad)
daa
inc
sub
cmc
xchg
mov
ja
addr16
arpl
lea
scas
push
xchg
xor
mov
call
inc
outs
add
shl
push
int3
xor
xor
ret
test
call
mov
pop
aad
mov
ins
mov
sbb
outs
call
xor
(bad)
mov
gs
dec
lds
test
hlt
ja
aas
xchg
and
push
clc
fist
lods
out
mov
push
add
aaa
cwde
mov
jp
sub
pop
xchg
add
pop
pop
mov
pop
enter
inc
jo
xlat
add
xchg
jmp
fwait
ins
inc
lahf
push
mov
inc
sbb
or
scas
outs
std
mov
stos
test
add
inc
(bad)
fcmovnu
loopne
xor
add
pop
sub
push
and
into
mov
aas
sbb
xchg
ins
pop
cmp
daa
loopne
retf
xor
and
adc
mov
cwde
movups
sbb
sbb
in
push
daa
sbb
(bad)
in
std
xor
inc
daa
pop
fmulp
mov
mov
lds
sbb
(bad)
scas
inc
sub
pop
add
jp
daa
sub
inc
and
jecxz
mov
or
pushf
push
mov
clc
adc
xchg
jmp
mov
dec
jae
retf
mov
xchg
out
test
cmp
pop
das
jnp
mov
fbstp
movs
inc
xor
and
repnz
test
cs
test
cmps
sti
fdivp
cmp
enter
aam
lods
ds
pop
add
mov
inc
jne
imul
lds
arpl
ins
mov
inc
stos
pop
add
xlat
call
sbb
icebp
add
ins
(bad)
leave
out
lds
shl
(bad)
mov
xchg
gs
adc
add
leave
add
and
adc
pop
fs
sub
cwde
xchg
or
cmp
or
mov
addr16
sub
loopne
in
push
mov
xchg
daa
push
out
imul
jg
dec
lea
idiv
in
xchg
cmps
mov
imul
cmp
add
repz
loope
test
rcl
(bad)
cmp
or
ds
cdq
and
or
inc
into
in
pop
sbb
test
pop
push
imul
ins
sub
mov
cmp
aaa
fst
jg
mov
sbb
mov
jno
ins
or
mov
mov
and
dec
cmp
cmp
int
inc
xchg
daa
mov
test
cmp
mov
das
sub
bound
sub
push
(bad)
xchg
(bad)
xchg
dec
(bad)
cmp
into
xor
test
xor
(bad)
aaa
pop
std
pop
jmp
aas
or
push
add
xchg
lods
pop
xor
rcr
add
mov
daa
adc
call
and
add
xor
pusha
dec
lock
or
lahf
(bad)
dec
jge
call
bound
cmp
mov
in
sub
(bad)
neg
add
cmp
adc
push
dec
out
push
outs
add
repnz
pop
fwait
pusha
dec
aas
in
sub
cmp
or
mov
test
dec
in
aad
sub
push
stc
test
dec
mov
(bad)
push
inc
jge
xchg
push
cmp
lea
mov
test
mov
sub
mov
add
cmp
add
xchg
out
cmc
out
push
push
leave
or
xor
or
mov
hlt
lds
cmps
sti
adc
nop
je
dec
xchg
loop
push
pop
sbb
fwait
cwde
dec
nop
push
or
add
mov
cmp
mov
inc
push
retf
adc
mov
inc
es
xor
pop
jb
cmp
loope
daa
or
test
movs
dec
jmp
mov
in
mov
dec
inc
aad
movs
leave
cmp
push
retf
ficom
dec
addr16
mov
mov
jg
imul
dec
addr16
cli
xchg
jno
cld
dec
int
mov
(bad)
jmp
inc
cmp
sbb
mov
mov
pop
arpl
push
xor
icebp
hlt
jecxz
adc
test
idiv
outs
mov
iret
sbb
jnp
(bad)
ret
mov
aam
aas
daa
shld
cli
inc
cdq
movs
mov
ss
icebp
enter
xor
sbb
fisub
mov
sub
mov
neg
pop
mov
mov
mov
outs
loope
pop
push
push
xchg
add
sbb
in
xchg
sub
dec
xor
xchg
enter
sbb
and
mov
jno
ficom
jno
shl
sti
rol
outs
push
or
xchg
repnz
jg
mov
in
je
and
sbb
test
inc
cmps
mov
stos
pop
lods
leave
inc
lea
sub
inc
xor
cmp
std
mov
clc
pop
das
dec
and
sbb
add
cdq
inc
mov
adc
sbb
mov
dec
inc
faddp
adc
cli
sbb
adc
out
dec
outs
(bad)
jbe
cmp
push
jge
(bad)
ins
push
mov
push
addr16
add
outs
and
shl
pop
adc
rcl
dec
aam
push
mov
jge
cmp
fucom
jae
lods
aaa
add
or
stc
movs
adc
jo
push
add
sbb
aam
cs
push
cmp
cs
mov
or
pushf
imul
ficom
(bad)
cmp
fisttp
cli
pop
je
rcr
(bad)
pop
imul
dec
lods
inc
sbb
push
push
jae
mov
ret
shl
lock
adc
aam
movs
fst
das
push
movs
shr
xor
sbb
sub
inc
test
clc
jl
pop
or
and
mov
mov
or
push
nop
cwde
les
bound
das
sar
push
test
call
and
(bad)
add
or
shl
push
scas
adc
imul
dec
jb
xor
jecxz
dec
dec
cmc
mov
mov
and
mov
sahf
pop
mov
mov
not
enter
stos
cmps
repz
popa
js
mov
in
add
psrlw
test
jmp
mov
(bad)
(bad)
call
mov
jns
ret
xchg
pop
sub
icebp
pop
ds
pop
cld
mov
js
adc
xchg
and
fimul
mov
sar
or
push
jb
cdq
mov
fmul
or
jl
daa
and
repz
in
push
fcmovnu
cmps
cmp
xor
mov
icebp
pop
into
rcl
aas
xor
addr16
jb
and
stos
mov
fld
mov
mov
in
or
in
shl
xchg
sbb
push
nop
(bad)
pop
scas
jmp
gs
pop
sub
test
or
test
loopne
(bad)
mov
addr16
pop
mov
push
mov
mov
jecxz
push
out
das
xchg
in
xchg
push
pusha
push
(bad)
jne
call
mov
outs
sahf
sbb
jmp
add
mov
pop
xor
or
pop
out
fstp
lock
clc
out
pop
aam
int3
into
and
xor
or
dec
pop
in
or
jg
jecxz
shl
popf
jnp
out
sbb
pop
imul
leave
pop
dec
sbb
ds
mov
inc
fisttp
test
inc
out
pop
out
or
pop
scas
or
or
int
xchg
fnstcw
mov
repz
ins
aam
enter
and
jmp
mov
push
stos
jmp
int3
movs
xor
and
fwait
loop
cdq
mov
push
data16
pop
daa
xchg
out
jnp
gs
das
jge
mov
xchg
cmp
sub
fdiv
pusha
pop
rol
shl
lds
inc
mov
in
mov
out
inc
dec
jae
ds
dec
test
clc
ins
xchg
outs
adc
cdq
stc
lock
popa
sbb
scas
aam
xor
imul
mov
and
(bad)
enter
pop
pusha
(bad)
cli
neg
xchg
cld
mov
xchg
mov
fbld
mov
imul
neg
or
enter
es
dec
femms
ds
arpl
mov
cld
push
sub
pop
and
sbb
hlt
in
rcr
stos
cmp
xor
adc
in
sbb
nop
das
mov
pop
pop
inc
sbb
jp
sar
pop
outs
and
movs
sub
sub
xchg
mov
in
ss
jae
loopne
jae
sub
xor
lock
imul
inc
je
cmc
inc
mov
mov
arpl
cmc
mov
mov
dec
call
hlt
add
(bad)
xchg
dec
stos
imul
cdq
or
cmp
pop
sbb
es
fincstp
mov
out
xchg
out
mov
cdq
xchg
inc
(bad)
(bad)
mov
jl
mov
mov
push
repnz
(bad)
push
into
fstp
arpl
(bad)
inc
adc
jg
adc
dec
lahf
add
ins
repnz
cwde
inc
(bad)
into
sbb
push
movs
mov
outs
xchg
add
loopne
ins
pop
rcl
mov
loop
neg
hlt
dec
xchg
sub
cmp
ja
or
jmp
inc
cmps
sbb
js
jmp
or
not
nop
jmp
mov
or
xor
scas
das
adc
mov
ror
lods
mov
xchg
inc
add
leave
pop
stc
seta
test
jae
mov
adc
js
hlt
inc
mov
test
push
sub
push
xor
sbb
fidiv
int
inc
jbe
push
add
mov
lds
sbb
push
mov
jmp
aas
icebp
xchg
bound
faddp
push
mov
sbb
ret
retf
mov
loope
outs
mov
or
sbb
repz
sar
cmp
add
mov
ds
in
mov
jo
or
xchg
mov
sub
sub
dec
leave
cmp
sbb
mov
add
xor
cdq
call
inc
leave
jnp
pop
push
sbb
adc
push
xchg
xchg
pop
xor
repnz
and
xchg
arpl
push
adc
neg
pop
push
jbe
dec
jbe
ins
and
mov
lods
ins
push
jbe
test
gs
imul
sbb
lods
mov
pop
dec
popa
out
cmp
sbb
leave
xlat
dec
xor
out
and
cmp
jle
ins
js
in
and
(bad)
jge
fnstcw
lock
in
xchg
push
cli
add
shr
pop
and
cmp
fistp
pop
xchg
fdivp
mov
add
or
mov
scas
lea
cmp
test
cmc
mov
std
leave
test
loope
or
retf
and
enter
popf
test
jns
cli
push
cli
dec
mov
(bad)
sbb
adc
mov
xchg
adc
popf
(bad)
(bad)
gs
sub
mov
xchg
mov
jp
jecxz
xchg
jg
clc
in
mov
xor
pop
cmp
adc
lds
mov
das
mov
jo
scas
push
ja
push
mov
sbb
adc
jge
stc
cmps
sbb
jmp
sahf
loopne
pop
out
pop
sub
sub
int
push
sahf
in
retf
cdq
inc
fidiv
and
dec
ins
inc
sbb
and
stos
or
inc
adc
popa
test
(bad)
jne
dec
inc
push
and
xlat
jb
repz
cld
cmp
push
sbb
pushf
(bad)
(bad)
dec
arpl
and
mov
push
jp
push
xor
cld
repnz
jge
ret
mov
test
cs
fild
pop
dec
das
push
and
pop
pop
mov
push
mov
xacquire
shl
shl
mov
push
repnz
lods
mov
cwde
lahf
jnp
jae
pop
fdivr
mov
test
pop
ds
fmul
xor
in
scas
sub
ret
pop
mov
(bad)
adc
mov
stos
or
mov
xlat
data16
inc
mov
mov
in
aam
mov
je
int3
je
sub
jp
int3
pop
xor
or
xor
dec
loop
outs
test
push
ret
push
sbb
add
mov
adc
ins
push
push
ret
arpl
call
mov
mov
xor
(bad)
(bad)
mov
or
js
and
jl
jno
mov
pop
mov
mov
lds
add
pusha
xor
mov
or
les
test
pop
adc
adc
or
call
mov
je
mov
pop
repz
arpl
or
xchg
add
mov
in
cdq
cli
lods
jb
fmul
xchg
dec
movs
or
push
inc
xchg
jp
daa
leave
jmp
xor
clc
pop
and
aam
out
mov
out
faddp
jbe
lahf
test
std
out
mov
push
cmp
mov
jns
push
mov
scas
mov
sub
icebp
stos
jmp
or
aam
(bad)
(bad)
pop
movs
cmps
sbb
push
jge
cmp
stos
aaa
xor
dec
ret
int3
ret
ins
(bad)
ss
xor
fimul
ja
cdq
scas
dec
fidivr
loop
lock
ins
dec
call
mov
js
jle
mov
adc
(bad)
mov
cs
add
cmp
pop
pop
lods
add
inc
adc
or
daa
jmp
inc
stos
cs
pop
pop
xchg
xchg
sub
ds
lahf
push
add
pop
cld
adc
sar
sahf
js
leave
dec
shl
cmp
aad
cld
sbb
inc
xchg
popa
in
dec
or
cmp
repz
arpl
mov
pop
in
push
jmp
jns
sbb
xor
clc
dec
pop
das
sbb
mov
ss
cld
mov
cld
aam
fs
sbb
scas
lds
cmp
rol
loope
mov
cmp
or
push
push
and
and
stos
fwait
in
push
mov
outs
mov
push
cs
push
mov
adc
enter
pop
jg
jb
aas
clc
dec
add
inc
dec
mov
ja
(bad)
xor
out
cmp
dec
das
iret
out
fcmovbe
dec
push
int
mov
dec
jecxz
push
fldcw
and
mov
popa
adc
add
stos
mov
and
cmp
jo
loop
xchg
fdiv
ins
lock
das
cmps
xlat
mov
popf
and
arpl
cmp
jns
push
jecxz
hlt
pop
pop
push
add
rcl
test
rcl
enter
loope
sahf
ins
nop
pop
stc
repz
repz
pusha
pop
jnp
adc
test
fucom
aam
mov
enter
ins
mov
cli
xchg
sbb
sub
jle
and
daa
sub
mov
(bad)
push
repnz
(bad)
jle
les
imul
mov
and
nop
xchg
daa
stos
pop
ins
cld
or
into
stc
jb
ds
pop
push
mov
xchg
adc
pop
push
pop
loope
and
xchg
movs
mov
pop
xchg
dec
jns
sti
jecxz
mov
mov
mov
aaa
pop
inc
data16
or
and
fisttp
pop
jns
push
enter
xlat
dec
scas
scas
repz
fs
rcl
retf
xor
add
ret
out
sub
(bad)
adc
pushw
jl
xchg
adc
test
mov
sbb
mov
(bad)
movs
jne
push
imul
mov
fadd
rcr
ds
pop
aam
xchg
sbb
inc
mov
dec
or
jb
clc
aas
(bad)
push
or
mov
jl
jge
pop
popa
push
sub
pusha
add
loopne
fdivr
frstor
int
sbb
xchg
mov
xor
outs
les
aaa
retf
inc
fstp
jecxz
inc
cmp
mov
or
(bad)
movs
or
sbb
jb
pop
mov
jg
das
iret
int
or
cmp
scas
cmp
lahf
clc
(bad)
outs
cmc
push
aad
(bad)
mov
mov
inc
jbe
repz
mov
mov
push
sar
mov
and
scas
push
cmp
das
mov
leave
push
aad
repz
mov
adc
push
sbb
xor
test
int
adc
iret
push
loopne
std
in
adc
test
arpl
jg
or
add
arpl
mov
lahf
xchg
sbb
out
mov
or
fiadd
cmp
sahf
push
sub
pop
cmps
test
call
daa
push
xor
cmp
mov
mov
pop
xor
push
push
push
andps
dec
push
retf
sbb
adc
push
sub
mov
lock
cmp
sub
dec
(bad)
mov
mov
jb
and
mov
push
repnz
inc
push
pop
stc
gs
mov
daa
jge
and
jp
push
add
js
or
mov
dec
lahf
(bad)
sub
dec
xchg
lahf
mov
ja
sub
les
jmp
cli
add
inc
push
hlt
ins
jno
dec
leave
cmps
inc
xchg
mov
invd
les
ret
cmp
repnz
retf
pop
cli
sub
mov
pop
(bad)
mov
sbb
cmp
jmp
scas
xor
movs
nop
loopne
call
cmp
adc
jne
push
jg
test
inc
dec
xor
movs
fstp
stos
int
mul
jge
mov
mov
xchg
jmp
hlt
push
(bad)
sub
xchg
jmp
mov
mov
test
or
add
mov
sbb
push
mov
add
jo
mov
pop
xchg
mov
pop
and
les
inc
arpl
stc
ins
dec
dec
mov
shl
or
pop
jns
fst
pop
jno
sub
xchg
push
sar
cmps
call
inc
xor
out
outs
out
loopne
pop
inc
xchg
cmp
into
or
xor
jge
hlt
stos
mov
nop
sub
mov
jecxz
popa
lods
push
xchg
xor
and
outs
cmp
pop
rcl
icebp
xor
clc
push
loop
adc
and
fwait
xchg
jl
test
add
lock
ret
mov
fsin
pop
lods
loopne
inc
iret
scas
sub
enter
xor
jnp
lds
sub
movs
sbb
jl
mov
lahf
mov
adc
aad
ins
mov
sub
aam
jge
mov
inc
iret
outs
mov
imul
sub
sub
aad
imul
xor
test
(bad)
xor
xlat
cmps
js
mov
std
addr16
aam
enter
push
ja
mov
(bad)
sahf
mov
mov
lea
(bad)
sti
push
inc
daa
jecxz
scas
ret
ja
xchg
adc
dec
ret
or
pop
jnp
pop
add
lods
cld
mov
ja
gs
outs
ss
jmp
and
mov
fs
pop
scas
test
xchg
dec
jne
je
cmp
bound
test
add
adc
inc
push
les
push
or
sbb
adc
sub
pop
loope
xchg
shr
add
mov
out
mov
add
pop
mov
clc
ret
push
add
or
xchg
or
retf
mov
xchg
jg
jmp
mov
jecxz
mov
dec
cmp
call
sbb
adc
stos
push
nop
add
sub
aas
in
and
or
ja
pop
jecxz
sbb
jmp
not
jmp
xor
(bad)
fst
mov
dec
cmp
int3
scas
sbb
lea
fsubp
retf
jge
outs
adc
ds
pop
stos
int3
inc
ret
or
push
sub
out
add
mov
push
xchg
lock
and
inc
ret
mov
sub
xor
and
mov
test
pop
aad
inc
pop
dec
xchg
push
into
sbb
add
int
dec
jg
cmps
test
adc
out
out
push
test
ins
scas
in
lds
cmp
sbb
loopne
sub
inc
pop
popa
adc
pop
sti
and
mov
(bad)
sbb
fwait
data16
dec
jmp
mov
xlat
mov
repnz
jns
daa
jne
jae
push
xchg
fist
cmp
icebp
call
fstp
mov
iret
sbb
out
mov
or
or
push
sbb
loop
sbb
ret
dec
push
into
fcom
jno
xchg
lods
sub
fwait
movs
cmp
add
dec
aad
pop
xchg
add
fmul
push
inc
iret
std
xchg
jb
xchg
aas
mov
call
test
add
mov
and
ds
shl
fcom
popf
mov
fsubr
cwde
fdivr
jbe
aas
pop
xrelease
js
gs
test
pop
cwde
inc
adc
xchg
test
dec
mov
neg
mov
ins
jo
outs
fstp
cwde
nop
xchg
loopne
out
cmp
shr
pusha
jbe
push
xchg
dec
inc
and
stos
cmp
xor
sub
lods
repnz
adc
pop
pusha
in
sub
mov
inc
sar
addr16
pop
mov
outs
sub
mov
jle
mov
leave
xor
xchg
rcl
leave
or
pop
das
xchg
or
into
scas
and
icebp
mov
add
data16
or
cdq
leave
cld
sar
cmps
push
sub
retf
stos
std
lock
add
pop
(bad)
aad
mov
shr
(bad)
popa
sub
lock
jbe
rcl
and
pusha
aad
fwait
int
xchg
sbb
or
fwait
rcr
mov
es
(bad)
add
call
jmp
arpl
or
into
rcr
or
jecxz
in
inc
ret
inc
mov
leave
repz
sahf
push
and
add
xor
and
out
enter
and
and
xchg
mov
xor
lea
aaa
aaa
aam
fnstcw
loope
aaa
lahf
ret
sub
in
cmp
mov
xchg
mov
add
movs
inc
xor
adc
das
sbb
enter
outs
sub
call
sub
out
scas
and
or
sub
jecxz
sbb
sbb
inc
inc
retf
push
xchg
std
pusha
(bad)
jne
das
out
lock
mov
mov
imul
mov
ds
adc
mov
jg
push
xchg
in
(bad)
ds
add
in
icebp
jbe
inc
rdseed
cli
mov
jp
shr
(bad)
dec
imul
push
test
adc
jmp
sub
(bad)
mov
mov
lods
pop
outs
pop
push
sbb
jg
or
fs
stos
call
out
je
in
jmp
pop
pop
enter
cmp
or
in
push
mov
fmulp
pusha
enter
jns
outs
loope
inc
cmp
int3
inc
sbb
aam
mov
iret
xchg
cs
push
in
daa
outs
push
xchg
loope
and
loope
adc
push
inc
outs
xchg
xchg
jbe
rcr
jmp
leave
add
daa
(bad)
daa
xor
or
int3
xor
cwde
repnz
in
dec
ds
ins
daa
or
mov
push
push
sub
pop
fwait
shl
or
sub
sbb
sbb
dec
jmp
movs
adc
mov
sar
call
cmp
aam
shl
scas
out
retf
pop
nop
(bad)
les
xor
sbb
dec
or
cwde
add
rcr
out
jbe
shl
fimul
pop
scas
mov
pop
add
pop
xchg
lock
leave
enter
jmp
cli
das
neg
repnz
mov
mov
inc
in
int
div
pop
pushf
push
jmp
in
adc
pop
loope
sar
cmp
add
std
push
stos
push
in
cld
pushf
pusha
dec
mov
and
(bad)
inc
cmp
adc
das
test
or
inc
call
dec
cld
je
rol
mov
mov
pop
sti
into
jle
and
adc
call
add
cs
or
jle
push
mov
push
pop
cld
push
adc
adc
(bad)
sbb
inc
sbb
arpl
inc
rol
jo
jnp
adc
mov
jno
xor
es
lahf
inc
js
jp
in
jmp
int
inc
das
loopne
in
jbe
mov
adc
imul
rcl
sub
pop
mov
pop
(bad)
jmp
mov
xchg
repz
inc
add
mov
push
adc
hlt
mov
push
dec
inc
in
ss
or
cli
(bad)
jmp
mov
retf
das
cmp
cmp
fcom
mov
push
stc
or
inc
adc
sub
(bad)
fild
lds
jmp
dec
push
dec
mov
sbb
push
push
enter
jl
add
push
jle
outs
pop
pop
xchg
xchg
(bad)
jbe
sbb
jmp
repz
test
and
popa
ja
pop
test
cwde
adc
jmp
mov
sub
icebp
xchg
dec
mov
pop
and
mov
xchg
outs
rcr
stos
(bad)
and
and
ficom
ins
(bad)
pusha
scas
mov
aas
pop
stos
dec
and
jnp
ds
addr16
xchg
pop
mov
jnp
fnstenv
and
adc
icebp
xchg
and
int3
pop
cmp
push
inc
push
stc
in
(bad)
out
jmp
xor
retf
lahf
fcomi
pusha
xchg
xlat
mov
dec
pop
dec
dec
dec
add
xlat
or
dec
lahf
stos
fdivr
add
jns
or
enter
stos
xchg
inc
sbb
adc
inc
mov
jl
pop
loop
ss
pop
fwait
xchg
shl
sub
and
mov
lea
push
(bad)
or
jle
xor
dec
imul
push
aam
repz
push
std
cmps
xor
loop
mov
dec
sbb
and
cs
cmp
and
pusha
in
push
xchg
outs
movs
mov
stos
xchg
mov
jbe
das
add
push
pop
or
(bad)
mov
(bad)
ret
xchg
dec
sub
mov
jmp
(bad)
sti
xlat
ins
mul
jns
icebp
add
cmp
pop
ins
inc
rcl
aaa
cdq
or
in
dec
fadd
add
and
jmp
cwde
lds
loopne
xor
mov
in
add
cmp
es
lea
addr16
test
push
aas
cmp
popa
lahf
adc
cmp
dec
mov
adc
xrelease
or
mov
jmp
test
pusha
xor
cmps
jmp
push
and
loop
push
mov
adc
adc
sub
jle
mov
call
cmps
cmps
shl
test
mov
mov
xlat
mov
mov
idiv
movs
outs
test
pop
add
cmp
pop
xor
lock
lds
fcom
dec
push
dec
xchg
push
mov
mov
sahf
mov
add
cmp
xchg
dec
add
in
add
pop
pop
div
mov
fst
sub
shl
push
shr
int
xchg
test
inc
mov
adc
add
inc
adc
(bad)
jb
push
ret
push
dec
xchg
fidiv
or
test
not
adc
dec
inc
clc
and
jge
and
adc
lea
mov
call
cli
outs
ds
iret
nop
call
jnp
call
add
inc
pop
mov
jl
cmp
dec
xchg
adc
jg
jmp
mov
push
jae
sbb
pop
xlat
pop
rcr
loopne
bnd
ret
pminsw
or
in
mov
xchg
les
sub
fucom
and
inc
repz
ds
sbb
cmp
fnsave
(bad)
pop
mov
in
(bad)
leave
ret
pop
pop
xor
cwde
mov
adc
xor
cmp
(bad)
out
pop
xchg
or
aad
icebp
or
push
cld
and
das
jle
add
leave
xchg
sub
cmp
retf
or
inc
sub
xlat
ins
adc
xor
cld
ss
sub
inc
sub
jp
fst
pop
imul
mov
xchg
aas
mov
mov
dec
cmp
xchg
int3
je
cmp
out
adc
inc
gs
mov
mov
clc
sbb
dec
fldcw
test
jmp
retf
pop
adc
(bad)
jo
es
ja
add
ins
aas
jbe
mov
rcr
dec
adc
sub
xor
push
add
cmps
mov
(bad)
xchg
jg
cmp
jmp
outs
dec
jp
xchg
int
mov
push
(bad)
adc
xchg
add
in
faddp
inc
jmp
mov
push
repnz
mov
loope
inc
cs
mov
adc
ja
test
inc
xlat
cld
cmp
pop
jp
ds
ja
(bad)
(bad)
adc
std
into
ret
xchg
addr16
int
push
call
xlat
sub
push
clc
popa
add
or
adc
out
xlat
int3
mov
add
cmp
or
lea
lods
sti
jmp
adc
pop
sbb
fidiv
fnstcw
mov
push
mov
push
cdq
shl
push
in
jge
outs
sub
mov
adc
or
dec
out
mov
(bad)
mov
mov
mov
icebp
adc
cmp
cmp
pop
icebp
jnp
mov
mov
jmp
push
mov
adc
pop
cld
out
in
mov
jp
jo
xlat
fwait
xor
add
and
ror
mov
shr
or
fimul
daa
mov
nop
sub
xor
loope
sbb
add
ds
add
jecxz
mov
sub
lods
pop
add
lahf
mov
(bad)
or
adc
mov
jns
inc
neg
jmp
mov
je
sub
mov
je
push
mov
retf
cli
and
dec
bound
mov
sar
push
dec
jbe
test
gs
cld
jmp
loope
imul
mov
or
mov
in
icebp
shr
jg
cli
stc
inc
add
mov
and
dec
sti
mov
mov
cmc
pop
sti
jo
outs
xor
daa
lock
aas
popa
pop
dec
dec
and
popw
pusha
stos
mov
jns
mov
inc
cmp
out
test
jno
cmp
lods
clc
imul
push
mov
dec
add
mov
xchg
mov
lds
aas
scas
sub
fdivr
sar
pop
loopne
imul
mov
cs
sbb
aas
iret
jmp
inc
sti
mov
push
addr16
cmp
packssdw
jnp
inc
ins
fild
mov
icebp
ins
push
int
dec
xlat
cmp
xchg
pusha
(bad)
je
jecxz
mov
sahf
call
iret
lods
pusha
loopne
(bad)
in
inc
jl
xchg
dec
pusha
cmps
cmovge
or
inc
push
jnp
hlt
push
mov
cmc
jmp
cmps
cmp
and
fisttp
out
rcl
in
scas
es
leave
push
inc
add
push
mov
fs
xor
inc
or
add
pop
adc
cmp
aas
popf
xor
adc
jge
cwde
iret
dec
push
in
aas
repz
rcl
push
enter
pop
into
loope
int
(bad)
loope
add
in
push
scas
cmp
jae
pop
das
mov
(bad)
ds
mov
mov
and
sbb
sub
sbb
in
shr
and
sbb
push
lds
std
out
icebp
arpl
mov
lods
jge
lock
push
stos
mov
ds
and
or
and
push
retf
int
aas
cmp
jne
lock
jle
or
hlt
pop
cmp
mov
cmp
and
aaa
sub
ins
add
mov
add
cmp
add
ds
xor
ffreep
xlat
ret
push
fsub
push
push
hlt
add
jb
jecxz
xadd
pop
jae
adc
int3
dec
push
out
ja
out
out
test
or
xlat
add
add
and
imul
push
xchg
and
sbb
push
sub
leave
sub
adc
(bad)
ficomp
fs
and
leave
sbb
adc
loopne
sbb
pop
xchg
stc
or
stos
adc
inc
(bad)
cmps
adc
mov
imul
xchg
aas
rcr
mov
popa
pop
je
xchg
ja
rcr
out
adc
sbb
cli
pop
dec
jl
mov
dec
jb
imul
jno
or
dec
movs
mov
sar
in
jns
repnz
icebp
push
popa
das
(bad)
mov
xor
(bad)
jmp
repz
xchg
dec
repnz
nop
lds
ins
addr16
inc
mov
sub
jnp
mov
mov
cld
(bad)
icebp
mov
push
mov
mov
xchg
xchg
mov
jnp
pop
mov
sbb
js
pop
je
clc
mov
push
fidivr
fist
jecxz
mov
fld
int
xchg
cmp
jmp
mov
pop
gs
xor
add
outs
fs
stc
stos
dec
repz
int
or
add
xor
cli
not
cmp
cmp
aaa
sbb
outs
sbb
jmp
mov
cmps
out
fs
mov
into
sti
mov
and
cmps
pop
xchg
push
mov
sbb
es
(bad)
mov
inc
add
jl
loope
add
sub
test
mov
dec
pushf
xlat
add
inc
mov
sub
sbb
sbb
push
add
daa
jns
pop
add
adc
sti
jmp
adc
popf
cmp
loope
inc
mov
xacquire
idiv
test
mov
shr
jbe
sub
dec
test
bound
sub
cmps
je
mov
sub
icebp
out
xchg
mov
dec
dec
je
fistp
add
pop
or
add
rcl
mov
imul
clc
add
add
jbe
jnp
(bad)
std
in
aaa
pop
add
jns
dec
jnp
stos
shl
fwait
cmp
ins
lods
in
nop
icebp
pop
jae
stos
mov
fdivrp
std
cmps
imul
xor
mov
nop
mul
ss
or
lahf
mov
add
adc
data16
and
adc
call
push
add
mov
sbb
inc
daa
xor
icebp
jmp
mov
jmp
rcr
sub
push
imul
inc
jle
inc
cmp
movntq
push
ret
iret
push
inc
xchg
cdq
in
sbb
sbb
dec
ret
iret
popa
mov
(bad)
inc
daa
enter
test
cmp
sbb
ds
(bad)
bound
cmp
pop
popf
and
fdivp
pcmpgtw
dec
sar
and
mov
xchg
xor
loop
xchg
les
aaa
inc
inc
xor
dec
xor
sub
push
or
ins
inc
jno
jp
icebp
lods
pushf
mov
adc
sahf
int
ficom
and
dec
push
mov
xchg
ds
adc
repz
fs
or
clc
ds
jecxz
and
mov
sbb
sbb
pop
data16
cmp
sub
dec
add
nop
movs
lods
ror
add
scas
hlt
stos
cld
and
retf
(bad)
out
adc
pop
retf
aas
ror
jmp
loopne
movs
lds
mov
lods
les
jb
sub
icebp
pop
leave
mov
daa
jne
jmp
adc
xchg
sahf
les
(bad)
shl
mov
data16
jnp
pop
ds
and
cmps
rcl
adc
add
mov
cld
call
xchg
adc
(bad)
fcmovnb
cmp
call
fcmovnbe
push
stos
jmp
inc
pop
js
mov
enter
xor
ret
xchg
xchg
push
jl
pop
(bad)
aam
jg
enter
inc
retf
mov
or
popf
cmp
test
mov
aaa
test
add
popf
icebp
inc
mov
ss
jno
mov
addr16
sbb
mov
sub
lock
adc
sub
cld
sahf
mov
das
jg
into
(bad)
loop
and
mov
scas
in
(bad)
stos
inc
(bad)
sbb
movs
fst
ds
jp
movs
adc
imul
movs
into
and
push
movs
das
jmp
and
xor
mov
daa
push
imul
dec
add
push
push
shl
dec
sbb
jg
dec
imul
dec
cld
adc
or
in
rcr
dec
enter
sbb
bswap
mov
fst
rcl
cs
out
leave
dec
and
cmc
loopne
iret
call
test
retf
add
push
push
fst
loopne
lahf
dec
xor
sub
fist
xor
ja
pop
pop
mov
sbb
cs
dec
fimul
shl
pusha
dec
mov
inc
clc
xchg
jns
std
mov
aad
cmp
outs
cld
ins
in
mov
imul
cwde
inc
shr
dec
cmp
aas
out
rcl
dec
(bad)
icebp
pop
stc
loopne
inc
sahf
inc
cmp
inc
dec
lahf
xchg
sub
out
xchg
in
pop
outs
push
cwde
jnp
inc
xor
jg
(bad)
cmp
sbb
inc
and
mov
js
mov
sub
and
sub
call
jg
jg
movs
cs
xchg
data16
mov
ret
aaa
test
pushf
adc
lods
dec
retf
add
movs
ins
add
xlat
pop
bound
std
mov
sub
xchg
les
aaa
(bad)
stos
rcl
lods
xchg
mov
jb
push
jp
fwait
jle
xor
jo
inc
inc
jmp
stc
aaa
sub
jo
or
cmps
xchg
retf
sahf
mov
stos
movs
adc
mov
push
imul
jnp
jo
cmps
adc
out
(bad)
sub
xchg
dec
cmps
aaa
xor
adc
dec
scas
mov
mov
imul
xchg
inc
in
ret
dec
adc
push
mov
test
aam
jno
dec
mov
es
std
push
jns
lahf
(bad)
mov
ds
call
adc
(bad)
pushf
loop
stos
mov
daa
adc
rcl
dec
stos
or
dec
pop
push
icebp
fucom
add
cmp
jg
jns
movs
add
daa
jl
loopne
clc
inc
sub
inc
adc
je
mov
push
stos
retf
inc
inc
cmc
mov
xor
pop
stos
inc
icebp
popf
inc
dec
mov
and
mov
mov
jmp
repnz
xchg
cmp
call
mov
ss
mov
jns
cmp
add
test
das
jnp
jmp
push
fwait
jp
mov
popf
inc
inc
and
fwait
(bad)
(bad)
jns
sbb
ja
aad
call
xchg
nop
mov
push
test
(bad)
fsubr
mov
push
out
sahf
xchg
or
sbb
into
lods
mov
lods
aam
call
xchg
popf
out
mov
dec
jle
xor
xchg
dec
push
xchg
mov
pop
push
sub
pop
aaa
jl
cli
call
and
mov
ins
inc
xchg
mov
dec
(bad)
sub
imul
jb
(bad)
push
sahf
or
xor
dec
sbb
out
iret
push
outs
cdq
sub
ret
retf
adc
retf
adc
cs
and
adc
or
pop
cmps
hlt
fld
aad
lock
pop
inc
add
adc
outs
int
scas
xlat
push
xchg
jne
shl
push
push
popf
(bad)
sub
mov
imul
jmp
xchg
jne
in
test
test
test
and
(bad)
mov
xchg
fucomip
fsubr
xchg
push
push
out
jle
fdivr
out
pop
mov
stos
xchg
das
add
xor
and
push
pop
xchg
sub
mov
adc
xor
jle
xor
jg
lods
xchg
mov
cmps
or
mov
movs
mov
pusha
add
fstp
(bad)
push
cmp
mov
out
in
and
mov
std
add
or
(bad)
fld
out
js
cmp
sbb
aam
lea
xor
clc
iret
cmp
cmp
xchg
icebp
adc
xchg
lea
mov
pop
mov
and
and
cmps
dec
dec
(bad)
fisttp
cmp
sbb
dec
pop
mov
enter
(bad)
add
or
push
cmp
bound
push
xor
push
adc
jbe
add
lea
shl
inc
fld
adc
addr16
add
pop
xchg
hlt
ret
mov
js
xchg
xor
pop
jp
leave
mov
inc
mov
sub
idiv
pushf
sti
mov
loopne
sar
aaa
outs
add
mov
cmp
arpl
sbb
jmp
push
xchg
dec
mov
fwait
scas
cmps
fs
jecxz
mov
add
xor
ror
es
mov
ret
pop
not
or
retf
xchg
push
out
mov
mov
xchg
loopne
add
popf
sahf
or
pop
push
xor
inc
or
loopne
clc
inc
xor
outs
pop
push
add
and
mov
xor
sahf
jmp
fisub
sub
outs
test
ret
jnp
jmp
adc
into
inc
out
inc
dec
cmp
out
data16
adc
push
(bad)
cmp
or
mov
jge
movs
outs
repz
cmp
loop
and
add
fnsave
jnp
xor
mov
xor
sbb
xor
jns
stc
push
les
dec
xor
push
xor
push
mov
movs
iret
aaa
mov
or
sar
xchg
cmp
int
mov
pop
add
in
cmps
push
xor
scas
cmc
loop
cmp
jb
xor
stos
je
ins
pop
mov
dec
sbb
xor
(bad)
adc
mov
imul
mov
loop
jge
cmp
add
pop
fadd
xlat
add
inc
jg
shl
ds
pop
sar
sbb
pop
or
sbb
fmul
out
mov
inc
add
dec
retf
cld
push
and
inc
jne
fstp
push
mov
mov
xchg
adc
cwde
jne
pop
jo
mov
xlat
cdq
daa
bound
push
cmp
or
test
pusha
mov
pop
loop
inc
fs
xchg
std
jmp
bound
jp
retf
lods
dec
cmp
inc
rcl
cdq
retf
push
xchg
mov
in
imul
jg
adc
loop
mov
cmp
loopne
pusha
xor
cmps
adc
call
xchg
dec
or
imul
adc
mov
icebp
dec
mov
jp
jmp
and
pop
(bad)
sub
inc
hlt
or
bound
mov
sti
dec
adc
ds
ror
mov
inc
test
std
adc
lds
ds
cmps
sahf
dec
(bad)
stc
int
adc
or
aam
call
mov
ja
adc
sbb
dec
fld
xchg
mov
shl
stos
rol
push
ret
pop
mov
nop
aaa
loopne
pop
adc
sbb
mov
jmp
or
iret
out
lods
push
adc
mov
fidiv
sub
ss
leave
sti
lods
mov
mov
aam
xor
push
cmc
in
mov
mov
out
(bad)
call
add
xchg
mov
jp
pop
jle
pop
fdiv
xchg
nop
sub
mov
mov
ror
adc
xor
or
inc
jle
in
ret
dec
inc
shr
lds
jg
lock
shr
sbb
mov
retf
xchg
push
lss
retf
add
(bad)
or
sti
and
sbb
mov
mov
dec
(bad)
jmp
nop
xchg
call
scas
(bad)
mov
arpl
push
mov
add
inc
lods
inc
in
adc
mov
rcl
cmp
(bad)
cld
mov
or
je
mov
int3
mov
cli
inc
adc
(bad)
std
(bad)
out
je
ins
(bad)
jge
adc
xchg
fdivr
and
cmc
aas
cmps
add
ins
rcr
pop
mov
jnp
hlt
lock
dec
inc
xchg
test
mov
gs
xor
push
out
sub
push
mov
lods
xchg
xchg
int
pusha
les
mov
arpl
xor
inc
cmp
outs
(bad)
pushf
push
inc
push
(bad)
fist
into
xor
sbb
jbe
mov
add
(bad)
sar
and
lds
and
fnsave
jp
mov
pop
(bad)
out
loope
inc
xor
cmps
cld
pop
jmp
ja
or
mov
bound
or
ss
push
scas
clc
rcr
jmp
in
pop
add
call
cmp
mov
add
cwde
jmp
pop
sbb
cwde
fs
ins
in
mov
jp
cmp
fwait
mov
sbb
lods
mov
or
adc
lock
add
push
dec
inc
dec
xchg
mov
sub
cmp
(bad)
add
inc
and
(bad)
out
push
xlat
sub
lahf
lock
cdq
mov
xchg
mov
lahf
xchg
mov
mov
cmp
jecxz
(bad)
fist
jecxz
pop
lods
ficomp
mov
shl
lock
mov
cdq
test
ret
out
mov
test
je
out
icebp
mov
fisub
dec
cs
adc
pop
cmc
fidiv
or
inc
outs
mov
sub
and
out
fs
jo
popa
or
in
pusha
std
add
cwde
hlt
jge
dec
mov
dec
lock
xlat
jg
ret
push
adc
loop
test
xor
jo
loope
xlat
inc
gs
stos
outs
call
scas
pop
jo
das
adc
xor
fcomp
cld
loop
gs
sub
push
imul
fdivr
dec
shl
and
mov
sbb
call
inc
jmp
sub
iret
(bad)
ins
xchg
push
mov
sbb
(bad)
les
stc
and
pop
dec
in
xor
jno
cmp
mov
jne
lds
iret
cdq
jb
inc
and
pop
jb
in
loope
hlt
push
pop
mov
das
or
jl
out
fwait
xchg
jecxz
dec
mov
xchg
(bad)
mov
aaa
sbb
fwait
add
adc
adc
stc
sub
jno
(bad)
fldenv
in
or
pop
adc
xchg
data16
pop
mov
inc
fmul
sub
xchg
ror
and
mov
std
mov
fs
sub
ja
and
add
add
mov
push
mov
mov
aaa
xlat
aad
pop
sbb
and
std
aam
xor
lahf
fidivr
scas
and
ins
pop
fs
and
xchg
jge
repz
pop
std
inc
pop
leave
jle
mov
xor
ja
and
test
movs
data16
inc
gs
mov
pop
clc
cmp
scas
add
sti
mov
inc
in
mov
ret
stc
js
mov
xlat
aas
addr16
mov
jg
xor
adc
lahf
dec
cld
aam
inc
imul
fs
inc
out
adc
xchg
jnp
mov
repz
dec
adc
ficomp
dec
cld
jnp
inc
test
stos
xor
fisub
fcom
fdivr
cmp
mov
fdivr
or
bound
jge
add
pusha
stc
mov
(bad)
jp
jp
cmp
sub
int3
jge
xchg
push
test
dec
dec
or
lea
sub
inc
mov
dec
cmp
mov
scas
adc
loopne
fs
out
test
jno
ss
and
and
mov
fild
add
ret
inc
jb
push
pop
jo
nop
sbb
dec
and
stos
jp
ret
or
jecxz
(bad)
shl
xor
gs
push
xchg
addr16
cmc
jb
outs
sub
push
test
or
sub
test
in
xor
out
mov
mov
outs
push
sbb
dec
loopne
cwde
inc
movs
je
fisub
and
das
fwait
pushf
fstp
xchg
arpl
and
ss
jg
sahf
and
(bad)
and
xor
sar
int3
ret
pop
pop
and
mov
(bad)
fs
xor
out
sbb
inc
jns
push
lds
stos
stos
ins
iret
and
xlat
xor
push
jae
inc
loop
lods
lea
scas
or
inc
aas
sbb
shr
loopne
arpl
lock
jmp
std
cmp
xor
or
mov
cwde
(bad)
fld
fxch
push
inc
shl
ffree
jmp
push
aaa
pop
call
xchg
arpl
mov
enter
inc
movs
mov
dec
icebp
sbb
les
pop
push
cmp
pop
movs
lds
mov
ss
(bad)
leave
stos
fbld
es
cmc
push
or
mov
je
add
jg
addr16
mov
xor
adc
mov
lods
daa
dec
pop
out
xchg
xchg
imul
jl
jns
mov
dec
(bad)
sti
xor
mov
(bad)
mul
repnz
out
fmul
xor
push
adc
push
xcrypt-ecb
cmps
dec
test
mov
and
pop
hlt
add
add
mov
pop
shl
mov
mov
cwde
and
cmp
push
aad
imul
push
dec
jns
fistp
sbb
call
jne
inc
aam
pop
push
cmp
push
sbb
xchg
push
test
das
and
repnz
xchg
cmps
mov
sub
xchg
mov
arpl
dec
push
loopne
dec
cwde
(bad)
aas
out
jno
ret
push
arpl
pop
push
pushf
sbb
ins
ret
jl
out
cmp
je
pop
rcr
or
popa
push
out
adc
push
mov
pop
dec
mov
cmp
(bad)
cmp
lds
mov
dec
int3
and
ins
rcl
test
inc
in
jae
shr
sbb
aad
inc
icebp
call
(bad)
add
shl
jecxz
iret
int3
rcl
dec
out
jl
movs
dec
mov
lahf
or
mov
jmp
cmp
(bad)
xchg
mov
shl
nop
loope
pop
ja
xchg
jg
sbb
pop
jae
sub
les
inc
lds
pop
add
mov
pcmpeqd
inc
not
dec
stos
shr
xor
aam
push
ror
and
sti
(bad)
mov
outs
ins
fadd
fcmovne
mov
mov
and
(bad)
ins
stos
mov
mov
movs
jnp
std
pusha
pop
fcmove
mov
xchg
(bad)
mov
jae
dec
jno
xor
packuswb
xchg
xchg
mov
cwde
jp
into
sub
rcl
stos
out
out
test
and
cmp
inc
test
dec
and
jmp
jae
xlat
mov
data16
pushf
add
in
cmc
mov
mov
jle
dec
fisub
cmp
call
pop
xchg
push
popf
ins
xchg
cmc
xchg
pushf
jmp
jl
jnp
mov
sbb
imul
arpl
add
(bad)
xchg
xchg
mov
mov
pop
pushf
xor
inc
aam
adc
or
cmps
sbb
jmp
jnp
mov
pop
cwde
popa
mul
pop
push
xchg
cld
in
(bad)
jp
(bad)
fisttp
(bad)
jp
sar
cmps
loope
popf
mov
pop
xchg
inc
adc
inc
in
pop
jmp
int3
mov
(bad)
daa
jmp
repz
sbb
xor
add
retf
push
or
das
and
sbb
and
mov
mov
(bad)
movs
push
and
sbb
cmp
int3
sbb
sub
xor
daa
fidiv
inc
push
dec
inc
fnstcw
and
mov
jl
inc
mov
adc
stc
adc
mov
and
push
loopne
xchg
lds
js
mov
add
jnp
ins
(bad)
cmp
adc
movs
hlt
push
mov
sar
xchg
in
pop
jns
push
mov
outs
(bad)
out
loop
fcmovnu
(bad)
xchg
mov
pop
mov
pop
adc
mov
and
or
lds
ins
xchg
sbb
dec
and
enter
rcl
mov
xor
loope
retf
push
xchg
in
dec
push
inc
mov
xchg
cmp
jecxz
imul
sti
jae
into
inc
xor
jo
sub
gs
and
pop
push
add
les
cld
push
movs
add
lods
(bad)
pop
push
mov
jecxz
mov
ins
fild
test
xchg
and
sbb
jb
mov
cmps
popf
pop
nop
xchg
dec
and
jmp
jge
mov
mov
mov
dec
jbe
or
movs
mov
jg
imul
mov
or
(bad)
jno
hlt
mov
mov
mov
dec
sub
dec
out
adc
fnstcw
push
push
adc
xor
loop
cld
fdiv
mov
xchg
lock
add
push
pusha
cmp
adc
mov
es
ret
jl
jp
push
push
push
int3
jne
out
dec
mov
loopne
sub
mov
popa
add
paddq
pop
shl
popf
push
ds
sub
adc
sub
fsubr
scas
ror
pop
add
outs
pop
pop
cmps
repnz
ss
(bad)
xor
fsub
shl
iret
dec
or
push
hlt
pop
cdq
out
pop
add
push
push
ffreep
mov
imul
add
pop
movs
mov
outs
cmps
fcmovu
and
ja
(bad)
pop
test
ror
sbb
sbb
aas
(bad)
lock
and
stos
pop
je
repz
jg
or
sub
jb
adc
sub
inc
cs
adc
pop
adc
stc
fadd
cmc
cmp
mov
sub
adc
int
pop
xchg
ror
cld
loope
mov
enter
stos
stos
dec
cmps
cld
add
call
cmp
jnp
mov
adc
js
pop
loop
stos
fcmovnb
jnp
xchg
inc
and
pop
jo
fistp
mov
inc
inc
cs
cmp
mov
aad
popf
pop
or
push
xor
pop
mov
and
lds
aaa
xor
or
inc
inc
cmp
in
ds
loope
popf
and
ror
lods
gs
movs
adc
cli
les
mov
pushf
fucomp
mov
addr16
test
stc
push
ret
enter
or
fbstp
outs
fcomp
jmp
sub
adc
or
fcomp
cmp
push
xchg
(bad)
in
mov
bound
push
bound
addr16
dec
xchg
les
jae
mov
in
xlat
mov
stos
adc
push
fsubrp
fadd
sub
jns
inc
pop
dec
mov
add
fistp
jbe
xor
inc
jecxz
sbb
rcr
fsubr
and
enter
dec
aas
cmp
es
es
fsubr
aas
aam
mov
ja
in
fst
xchg
push
push
sbb
bound
pop
mov
mov
xchg
push
in
xchg
in
xchg
fldenv
xor
shl
aas
sbb
inc
and
pop
lds
mov
xchg
test
aas
push
shl
mov
lahf
fwait
jnp
jns
pop
or
ret
jno
aaa
inc
ja
jmp
sub
jns
push
lahf
dec
mov
add
cmp
aam
shl
push
xlat
scas
add
fimul
push
sbb
pusha
mov
std
add
iret
mov
test
cdq
mov
ficom
loopne
retf
inc
jle
imul
push
into
ffree
or
lods
and
rcr
adc
retf
imul
arpl
fdivr
jns
add
adc
das
pop
stos
jle
stos
aad
sar
ja
repz
jmp
repz
test
inc
in
(bad)
cmp
push
add
mov
retf
aas
and
retf
ins
pop
ins
fistp
int
or
and
sub
pop
mov
mov
stos
lds
jae
jae
sub
aaa
adc
mov
mov
cmp
inc
shl
adc
sbb
std
scas
loop
add
dec
xchg
fwait
int3
adc
clc
or
ins
stos
inc
jmp
es
movs
jmp
shl
into
xchg
push
cli
jb
sbb
add
ret
push
cmps
sub
dec
mov
jecxz
in
mov
clc
jns
dec
cmp
test
dec
frstor
imul
sbb
addr16
jge
into
push
cmps
push
jnp
dec
(bad)
repz
les
test
mov
retf
outs
leave
fdivr
push
jbe
out
jbe
in
stc
test
sub
xor
mov
nop
idiv
pop
mov
imul
inc
iret
sti
dec
inc
mov
outs
mov
xchg
test
nop
pop
dec
mov
bound
adc
test
dec
div
cld
push
test
cli
dec
arpl
movs
pop
or
nop
sbb
cld
jb
dec
sub
cmp
sub
pop
into
ret
cmps
adc
add
mov
fcom
test
out
leave
das
jb
sub
outs
xlat
fidivr
pop
mov
cmp
adc
fild
retf
dec
fild
mov
imul
xor
push
cmp
dec
pusha
cmp
das
movs
mov
mov
pop
mov
push
sbb
jb
popa
scas
ror
cmp
add
in
xchg
out
xchg
test
gs
pop
or
sti
add
adc
and
outs
inc
dec
dec
hlt
std
aaa
(bad)
ins
pop
mov
push
xchg
sub
mov
or
in
inc
ret
jo
pop
mov
out
xlat
push
cmc
adc
or
inc
xor
iret
mov
lods
dec
stos
sbb
dec
fmul
outs
out
imul
adc
adc
push
xchg
aaa
pop
ja
clc
das
aad
add
ds
inc
test
push
ins
push
add
icebp
mov
daa
mov
or
push
add
mov
arpl
xchg
push
mov
dec
and
stc
sub
sbb
xchg
daa
repz
retf
bt
cmps
out
jecxz
mov
retf
fwait
enter
mov
cdq
(bad)
mov
(bad)
js
xor
inc
push
div
cmp
sub
add
add
fwait
(bad)
retf
mov
xchg
adc
and
sbb
jnp
pop
js
fisub
lds
mov
(bad)
arpl
adc
mov
inc
and
adc
mov
mov
cmp
mov
retf
loop
mov
movs
call
out
and
add
int3
(bad)
pop
xor
inc
outs
out
mov
inc
inc
icebp
adc
mov
adc
sbb
mov
lods
fild
ds
mov
or
mov
sub
sbb
sub
sub
popa
nop
cmps
jmp
jne
push
xchg
mov
inc
sub
pushf
movs
mov
sbb
lods
xor
arpl
sti
into
cli
push
xchg
bound
and
lahf
xchg
ins
jne
adc
je
out
xchg
aam
sub
dec
jmp
mov
jl
mul
data16
les
bound
or
std
je
mov
mov
retf
cmp
icebp
lock
test
inc
call
sbb
pop
fidiv
iret
mov
(bad)
in
push
sti
fucompp
and
xchg
imul
out
push
(bad)
(bad)
stc
out
test
mov
aad
lock
pop
push
inc
stc
jbe
aaa
cmps
xchg
or
out
mov
xor
inc
iret
mov
jl
xor
push
push
cmp
mov
out
mov
dec
push
jno
mov
inc
sbb
fistp
push
mov
call
add
sahf
rcr
xchg
mov
jbe
fisubr
ja
fisub
mov
push
lock
(bad)
std
xchg
mov
mov
imul
xlat
mov
mov
ins
jmp
pop
aas
push
in
mov
dec
fcom
inc
test
inc
pop
in
push
inc
jge
xor
sbb
mov
push
or
inc
sahf
dec
mov
mov
test
inc
sbb
pop
dec
lds
mov
cmc
pop
in
ja
out
xor
xchg
inc
pop
(bad)
jbe
arpl
add
imul
jl
xlat
push
rcl
(bad)
aad
repz
adc
mov
mov
(bad)
pop
xchg
fwait
int3
mov
adc
pop
repz
mov
retf
dec
imul
test
fdivr
pop
xchg
lods
sbb
call
dec
pushf
je
call
inc
push
jge
(bad)
je
in
push
add
and
adc
sbb
jb
xchg
das
pop
pushf
(bad)
stc
and
pop
mov
jnp
dec
loopne
sahf
movs
mov
aad
push
mov
push
jnp
sub
sbb
repnz
mov
ins
xor
pushf
push
std
das
aas
jns
cmps
sbb
or
loope
cmp
addr16
les
into
mov
add
sbb
std
pop
lock
dec
ins
clc
xchg
jne
inc
imul
pop
repnz
and
and
or
push
inc
xchg
test
inc
cli
cmp
(bad)
xor
jns
xchg
sahf
jne
inc
ficomp
cmc
test
xchg
call
ffreep
adc
das
ror
fs
mov
push
pop
fsubr
in
jmp
popf
add
sub
(bad)
mov
shl
cmp
push
imul
call
mov
lea
jae
out
call
mov
jnp
cmc
iret
mov
icebp
ret
out
rcl
fiadd
xor
jbe
adc
pop
int
sbb
mov
adc
pop
xchg
push
and
pop
cdq
loop
xchg
test
add
mov
icebp
repnz
mov
mul
xchg
call
pop
add
add
scas
xchg
popa
ins
hlt
sbb
pop
mov
sub
hlt
xchg
xchg
mov
or
mov
bound
rol
jnp
addr16
xor
mov
fistp
mov
jp
fcmove
inc
adc
xchg
xchg
mov
(bad)
push
sub
fwait
inc
scas
sahf
xor
shl
fisubr
xchg
scas
mov
nop
in
and
arpl
mov
test
jnp
or
adc
push
jae
data16
scas
scas
ins
ds
pusha
mov
lock
aas
test
xchg
mov
je
es
ins
cs
(bad)
(bad)
stos
int
pushf
lds
sbb
scas
repnz
pop
push
test
or
loope
jge
adc
pusha
pop
(bad)
xor
xor
bound
push
addr16
out
lods
add
lea
dec
xchg
push
lock
retf
and
cld
and
ins
addr16
jge
cs
test
cmc
cld
mov
add
pop
sbb
jb
jmp
int
jnp
bound
xchg
pop
sub
rcl
mov
fdiv
xchg
sub
lahf
sub
mov
sbb
sbb
das
je
dec
mov
and
adc
movs
jl
add
xchg
aam
fwait
push
icebp
das
enter
or
pop
sub
lock
out
aad
mul
push
push
ds
in
inc
jns
mov
mov
repnz
lea
(bad)
adc
ja
(bad)
xchg
mov
cmps
mov
add
outs
or
push
(bad)
scas
and
js
repz
pop
push
(bad)
retf
jo
movs
dec
inc
mov
fucomi
loopne
ret
cli
ins
mov
int
jecxz
push
lahf
fcom
mov
fldcw
mov
es
nop
lds
push
jb
push
pop
test
sti
enter
and
adc
out
xchg
aam
xor
sar
inc
dec
sub
xchg
pop
retf
add
mov
icebp
das
shl
dec
sub
jne
jne
mov
rcl
pop
cli
or
cmp
xor
(bad)
cmp
sbb
pushf
pusha
jno
jmp
mov
fcomp
sar
repnz
scas
(bad)
bound
imul
xchg
js
inc
or
cmp
mov
mov
push
sahf
cmp
push
and
loope
mov
sub
inc
mov
popf
and
sbb
lahf
cmp
or
dec
sub
cdq
or
push
sub
push
test
inc
call
inc
aad
and
xor
std
call
enter
aas
neg
cmp
pusha
add
retf
pop
scas
inc
adc
or
movs
sub
jno
pop
xchg
rcr
xlat
push
or
aaa
or
and
sbb
sub
or
jbe
sahf
pusha
dec
dec
xchg
pop
leave
jae
test
dec
xlat
clc
xor
fisttp
jmp
jge
or
je
sahf
arpl
jne
daa
loopne
pop
(bad)
adc
pop
adc
into
pop
mov
push
stc
mov
adc
and
push
mov
mov
or
fbstp
js
cmp
or
clc
sti
xchg
(bad)
xchg
ret
retf
clc
ret
test
cmps
xor
fisub
mov
sti
out
and
mov
and
leave
ins
sbb
lods
mov
daa
adc
sub
ins
out
push
mov
jmp
push
popa
xchg
in
cmps
loope
cdq
mov
adc
in
stc
push
pop
pop
aas
aas
fimul
lds
mov
push
and
das
sbb
mov
mov
jb
test
icebp
fistp
jns
mov
xchg
and
outs
ds
ds
or
les
or
mov
clc
sbb
xchg
sti
popa
sbb
scas
inc
mov
jmp
sbb
rcl
fs
sbb
sbb
cmp
dec
inc
into
fild
ins
mov
out
lods
fucom
stos
mov
push
(bad)
enter
jne
xchg
les
or
ss
xlat
mov
adc
jbe
cs
add
cld
cld
mov
pop
adc
cmp
popa
lahf
mov
rcr
dec
movs
mov
push
or
loopne
mov
outs
or
ins
aad
ss
sbb
adc
mov
xchg
repnz
test
lds
mov
(bad)
xor
scas
jle
cdq
scas
stos
pushf
xchg
jb
out
and
push
and
into
pop
popf
cvtps2pd
mov
sub
nop
sbb
xchg
pop
fld
sbb
jmp
add
popa
(bad)
jnp
xchg
in
inc
cmp
push
bound
xchg
popf
repz
jno
or
imul
sbb
fdivp
call
sbb
jbe
push
pop
dec
mov
cmp
mov
mov
dec
es
cmp
push
jp
inc
push
sbb
stos
cmps
psubd
cmc
push
jns
pop
xchg
(bad)
jns
imul
aas
xlat
js
ds
xor
outs
mov
jae
(bad)
sub
mov
movs
adc
lds
idiv
and
jle
fwait
jae
jp
pop
scas
call
mov
mov
ins
adc
cmps
push
push
test
mov
shl
(bad)
outs
mov
inc
int3
dec
or
outs
ins
out
movs
add
mov
and
cwde
imul
into
push
xchg
jae
scas
xchg
add
mov
mov
and
aas
ret
sbb
cmps
jle
pinsrw
iret
mov
add
je
jo
test
xchg
repnz
call
cmp
addr16
inc
lock
add
add
mov
cld
mov
xchg
dec
jnp
pop
test
pop
mov
dec
jg
(bad)
fadd
mov
cmp
jno
dec
push
add
bound
out
inc
fild
and
adc
shl
ds
pop
ret
out
adc
sbb
mov
mov
jle
punpcklbw
fucomi
sahf
call
fcom
mov
xor
sbb
lods
ret
aaa
push
inc
inc
jge
(bad)
out
xchg
fdiv
movs
adc
repz
sbb
inc
aaa
cmp
xchg
or
les
push
out
nop
and
repnz
icebp
mov
inc
xchg
cmp
sub
push
fld
nop
xchg
or
jp
test
jns
mov
fisub
into
test
cmc
mov
lahf
(bad)
fs
xchg
icebp
or
aam
call
repz
pushf
mov
cmp
push
mov
(bad)
sub
xchg
fistp
mov
cmp
jne
lock
fild
retf
mov
xor
stc
and
adc
pop
jo
cld
jne
sub
out
sahf
xchg
cmp
cmps
das
inc
cmp
les
dec
sahf
fistp
psrlq
mov
push
cmp
lock
push
dec
daa
inc
cli
repz
pop
lods
pop
pop
test
xchg
mov
out
xchg
xchg
sbb
(bad)
mov
fst
into
loopne
pop
push
inc
mov
scas
mov
daa
sar
mov
sbb
and
ins
mov
mov
mov
js
out
adc
push
push
sub
hlt
xchg
push
out
mov
out
ret
es
out
dec
outs
pop
mov
mov
mov
cdq
out
inc
sti
dec
inc
jmp
(bad)
popa
into
fs
add
mov
leave
nop
stc
dec
test
aas
mov
loope
xor
adc
push
sbb
jg
pop
test
popf
cli
jno
fdiv
push
clc
mov
lea
in
push
xor
and
add
out
mov
inc
ror
adc
imul
mov
xor
dec
or
aaa
fwait
xchg
fcmovb
cmc
movs
clc
push
jmp
mov
cmp
xchg
aam
pop
in
sub
das
pop
jmp
mov
add
dec
jle
inc
or
or
mov
daa
push
fdiv
push
mov
inc
jns
out
adc
test
arpl
xchg
test
enterw
shl
stos
mov
sbb
arpl
paddd
dec
sbb
pop
rcl
int
jecxz
push
nop
cwde
loope
pop
jbe
movs
fwait
imul
sub
jmp
xor
gs
xchg
jmp
xchg
jp
ins
popa
adc
mul
jmp
adc
cmps
inc
xor
inc
pop
and
or
mov
popf
cli
pop
or
jl
ret
pop
fisttp
dec
addr16
pop
mov
sub
xchg
and
repnz
fadd
fdiv
pop
fadd
xor
inc
mov
jno
ds
jbe
test
dec
jb
jb
test
cwde
push
pop
retf
and
adc
mov
sti
popa
int
push
or
loopne
jg
shl
call
or
mov
dec
ret
imul
jmp
bound
daa
gs
dec
cmp
jl
call
mov
xchg
xchg
or
dec
xor
pop
sbb
test
xchg
pop
and
out
popf
enter
jne
lahf
pushf
pop
idiv
lahf
pop
push
cli
push
dec
test
sub
or
dec
(bad)
mov
bound
pop
aaa
mov
xor
cmp
fimul
loope
jns
test
mov
clc
mov
push
movs
xchg
clc
lock
in
test
pop
js
scas
(bad)
xchg
push
cwde
or
mov
(bad)
mov
pop
loop
lods
pop
rcr
fmul
xchg
adc
dec
cmps
sub
jae
in
push
imul
mov
cmps
jae
cwde
mov
adc
and
repz
or
jne
dec
popa
cdq
xchg
mov
ss
pop
loope
mov
repz
pop
call
(bad)
enter
jbe
xchg
sahf
lods
jb
(bad)
mov
xor
jmp
fsubr
add
mov
loopne
xchg
jns
sahf
inc
push
jp
repz
xor
xor
add
enter
push
or
mov
imul
aas
popa
adc
cli
push
push
inc
in
les
into
xchg
cmps
push
mov
popf
idiv
cmp
out
into
sub
inc
clc
outs
inc
inc
mov
test
pop
out
sbb
pusha
adc
retf
out
lods
mov
jb
inc
xsaveopt
push
dec
push
cld
sub
add
pop
sbb
fcmovb
aas
xlat
(bad)
test
inc
enter
or
sub
xor
add
pop
mov
mov
push
cmp
pop
pop
fs
js
sbb
(bad)
pop
adc
ja
shr
mov
not
push
frstor
push
fstp
popa
outs
dec
sub
call
add
sub
or
mov
scas
xchg
in
rol
or
pop
call
loopne
push
jmp
and
and
pop
xlat
adc
fnsave
push
xchg
ins
push
in
jmp
ja
cmps
and
retf
(bad)
int3
outs
add
jmp
mov
mov
xchg
int3
sub
ins
loope
add
imul
ja
daa
pop
out
xchg
(bad)
cmp
push
xchg
loop
arpl
fisub
retf
nop
fcomp
mov
push
das
mov
push
outs
xchg
out
adc
popa
retf
sbb
or
pop
iret
leave
xchg
mov
stos
mov
jl
sbb
xchg
jge
movs
(bad)
cwde
hlt
pop
sub
cld
bound
lea
mov
cmc
push
iret
cmp
jmp
xchg
dec
in
add
rol
sti
mov
mov
inc
aas
push
sbb
bound
push
sahf
and
dec
(bad)
jmp
push
rcl
xchg
mov
add
dec
push
pop
loop
mov
xchg
adc
test
sbb
cmp
and
mov
mov
dec
(bad)
pop
push
dec
cmp
loopne
movs
dec
call
mov
mov
jb
popa
xor
jp
and
stc
xor
data16
jle
sbb
je
pusha
ins
rol
sub
cmp
in
sub
cdq
cmp
(bad)
jmp
cmp
push
(bad)
gs
xor
pop
(bad)
out
cdq
mov
ins
fxch
xchg
jp
adc
cld
xor
xchg
cwde
sub
retf
std
push
xchg
xchg
sub
add
xchg
mov
or
cmps
fsub
pop
and
stc
pop
mov
(bad)
or
xchg
or
mov
in
xchg
pop
in
(bad)
mov
shl
inc
pop
aam
push
popa
jo
lahf
dec
sti
mov
add
(bad)
clc
mov
fwait
sbb
mov
mov
xor
push
lahf
fild
pop
sub
jle
mov
and
pop
cmc
call
or
mov
xchg
cmp
hlt
(bad)
iret
fdivr
(bad)
push
or
mov
sar
pop
out
shl
xlat
mov
js
aad
mov
push
ja
(bad)
xchg
fnstenv
mov
sub
push
or
inc
mov
pop
push
int3
out
out
xor
cmp
sti
pushf
into
gs
repz
mov
and
adc
add
(bad)
gs
inc
test
aaa
clc
adc
enter
call
pop
cmp
call
jb
(bad)
pusha
bound
xchg
push
push
add
les
xor
out
lea
add
popa
scas
push
dec
in
cli
out
loope
sbb
call
retf
add
and
pop
pop
fwait
adc
inc
adc
jns
cmp
dec
mov
js
cli
aaa
mov
sti
xor
lahf
sti
(bad)
fsub
hlt
pushf
mov
push
(bad)
ret
inc
push
xchg
cld
cld
push
hlt
imul
popf
or
jb
rcl
in
mov
loop
add
and
int
fidivr
mov
pushf
or
div
(bad)
push
(bad)
mov
jecxz
sahf
(bad)
stc
stos
rcl
jle
std
enter
in
movs
(bad)
and
arpl
pop
stos
jmp
xlat
push
xor
stc
jg
scas
daa
fucomip
ins
xchg
push
lds
not
repnz
out
sbb
push
ror
shl
jl
cmp
je
or
das
mov
mov
mov
cmp
(bad)
inc
jg
out
cmp
add
stc
or
js
shr
in
mov
pushf
push
aas
mov
xchg
dec
xchg
and
lods
jno
or
ins
push
dec
xchg
ficom
es
dec
cmp
(bad)
out
div
int3
shl
fadd
std
mov
rcr
inc
jns
xlat
js
push
sub
jge
into
out
adc
add
stc
sbb
xchg
sbb
cs
stos
lods
retf
mov
jae
les
or
jl
pop
jle
in
pop
inc
or
push
or
mov
imul
or
pop
hlt
jmp
xchg
jb
add
rcr
pop
mov
aad
cmp
add
bound
sbb
out
dec
pop
dec
xor
cmp
jle
xchg
or
jbe
cwde
movs
pusha
cdq
bound
xchg
repz
xor
sbb
repz
inc
jmp
jne
cwde
pop
and
lss
sbb
or
retf
das
xchg
adc
jmp
xlat
call
sub
test
sub
mov
stc
test
in
ins
mov
sar
sahf
lds
ret
jle
out
adc
dec
icebp
rcl
cmps
arpl
das
icebp
test
stos
lods
and
out
fsub
mov
aad
popa
or
add
mov
ja
sbb
push
xchg
sahf
push
xchg
fisttp
jne
imul
inc
iret
out
cmp
bound
mov
or
cmp
mov
sbb
loopne
lods
pop
pop
stos
addr16
xchg
or
xchg
clc
ins
and
popa
mov
and
mov
not
ds
movs
call
mov
int
mov
mov
cmp
outs
rol
sbb
add
xchg
das
add
mov
add
mov
arpl
retf
out
dec
pop
addr16
cmp
xor
test
push
repnz
sbb
repnz
and
out
xchg
fiadd
push
sbb
mov
pop
call
into
fcomip
shl
cmp
fist
ja
sub
dec
rcr
xor
or
cmp
dec
cmp
xor
test
cmc
lods
repnz
fucomi
fsub
dec
mov
dec
fs
fst
icebp
dec
daa
retf
dec
repz
mov
jns
pop
xchg
cmps
adc
inc
jae
ret
adc
ins
shl
jmp
stos
int
adc
cmp
sub
cmp
lods
jecxz
mov
xor
jae
call
inc
and
sbb
stc
sti
leave
int3
sbb
in
clc
ss
jnp
add
ror
or
adc
inc
sbb
adc
jnp
adc
dec
jnp
push
inc
sbb
xchg
sar
jg
mov
or
movs
sbb
jmp
mov
daa
jl
jbe
pop
xor
les
ror
(bad)
hlt
es
or
popf
int3
dec
cmp
and
bound
jp
push
movs
(bad)
jns
daa
jns
das
pop
pop
adc
lahf
pop
push
stos
mov
xor
pop
imul
mov
add
fnstsw
inc
loope
stos
fiadd
int
stos
mov
add
push
and
in
and
inc
sub
push
dec
movs
movs
aaa
add
pop
out
add
cmp
push
(bad)
push
cmp
mov
push
push
loopne
out
outs
and
fst
icebp
sbb
mov
fwait
jae
cwde
mov
js
mov
dec
inc
cld
stos
aad
mov
pop
pop
in
cdq
js
cmps
dec
or
adc
into
arpl
mov
rcr
sub
(bad)
sti
add
add
outs
fdivr
sbb
mov
or
inc
cdq
jp
aas
add
push
jmp
fldcw
cdq
enter
lods
mov
pop
push
mov
lods
sub
pop
pop
pushf
dec
cld
(bad)
push
xor
add
push
cmp
sbb
test
sub
mov
mov
nop
clc
imul
jmp
fistp
stos
cmps
cs
sahf
sar
je
ins
das
push
pop
out
stos
test
pop
cmp
mov
out
(bad)
xor
(bad)
loopne
cmps
arpl
and
js
aaa
es
aad
mov
fsubr
adc
dec
sbb
sar
shr
add
sub
inc
(bad)
outs
repnz
fucomp
(bad)
xchg
sub
adc
xchg
xchg
add
movs
mov
movs
pop
inc
mov
cmp
dec
pop
mov
aas
fsub
inc
mov
sub
and
fadd
inc
cmps
int
add
mov
jg
jp
pop
or
mov
pop
xchg
pop
adc
sbb
mov
mov
jmp
mov
scas
ja
xchg
jno
pop
test
std
mov
fdivr
leave
mov
pop
xchg
jo
in
ins
and
inc
sub
and
push
adc
pop
das
repz
and
call
ins
lds
jmp
xchg
jmp
xchg
mov
sub
mov
aad
pop
sbb
lea
scas
cmp
ror
inc
loopne
cmp
(bad)
fadd
pop
ror
inc
inc
mov
outs
loopne
shr
ss
push
hlt
xor
(bad)
outs
pop
inc
sbb
jnp
popa
add
shl
or
sub
pop
je
jb
rcl
(bad)
mov
pop
imul
jne
inc
ret
dec
mov
inc
scas
repnz
cmp
cdq
xchg
lods
je
std
add
or
jg
cwde
mov
jne
mov
and
pop
pop
lods
mov
test
jle
sbb
adc
arpl
in
aam
cmps
push
sbb
ins
rol
call
(bad)
push
jmp
and
xchg
dec
pop
loopne
ins
jle
jg
mov
scas
pop
pop
test
ins
cmp
mov
sub
sub
rcr
mov
ss
inc
pop
dec
and
mov
(bad)
mov
inc
mov
jp
or
hlt
inc
fist
mov
(bad)
(bad)
jmp
mov
test
sbb
sbb
and
adc
inc
enter
mov
cli
into
sar
mov
push
sbb
ret
fidivr
cwde
scas
xchg
test
into
and
ins
pop
xchg
mov
ss
mov
outs
stos
daa
movs
in
sbb
loop
adc
adc
jl
sbb
push
loope
or
aad
leave
(bad)
mov
data16
repnz
fisttp
out
nop
es
mov
pop
ins
add
adc
mov
pop
xchg
arpl
lods
shr
(bad)
xor
sub
jb
scas
or
ds
jecxz
sahf
lods
xchg
or
retf
fcmove
(bad)
aas
mov
and
sub
cmp
cmps
push
ss
shl
jge
shl
push
sar
in
pop
jmp
sar
mov
dec
pop
icebp
or
mov
aad
add
push
mov
dec
ret
inc
dec
retf
(bad)
repz
or
pop
jae
mov
mov
les
hlt
icebp
gs
shl
xchg
cmp
test
retf
ret
add
push
int
icebp
rol
(bad)
ins
shr
test
mov
adc
cmp
xor
cmc
iret
lds
sbb
(bad)
sti
enter
xchg
inc
mov
sbb
dec
not
jmp
push
retf
sbb
les
push
push
icebp
mov
push
push
sbb
mov
xor
aad
sbb
hlt
pusha
xchg
push
ins
xchg
or
inc
lods
inc
pop
popf
push
xor
sbb
push
clc
popf
inc
sub
sub
mov
jecxz
stos
sbb
pushf
adc
pop
cmps
stos
xor
ja
jmp
mov
ret
hlt
add
jp
lods
pop
lock
mov
arpl
adc
sub
dec
inc
cld
int3
jecxz
xchg
and
pop
fmul
ja
sbb
sbb
out
jp
gs
ror
ins
das
pop
loopne
add
jae
call
retf
and
cmp
ret
outs
sbb
xor
std
sbb
push
push
jmp
dec
mov
(bad)
inc
xchg
jle
popa
stc
push
(bad)
pminsw
xor
mov
mov
(bad)
(bad)
stc
mov
xchg
jne
call
and
cmp
out
cmp
(bad)
inc
ds
jg
neg
sub
mov
sbb
fiadd
das
in
test
mov
or
stc
std
mov
push
lods
jns
(bad)
fiadd
(bad)
mov
jle
jae
(bad)
push
xor
sbb
lock
fucomi
rcl
add
das
pop
arpl
jmp
retf
mov
mov
(bad)
xchg
retf
pushf
adc
cli
xor
rcl
pop
jae
test
mov
mov
mov
ret
call
(bad)
sbb
scas
inc
sub
out
into
jns
cld
xchg
fsub
mov
ds
or
dec
xor
dec
pop
mov
add
and
fmulp
in
cmp
pop
sbb
std
or
push
inc
loop
mov
inc
rcr
ins
pop
pop
pushf
dec
adc
sbb
jno
mov
or
jns
inc
xchg
pop
rcr
jo
jecxz
inc
addr16
iret
movs
fist
xor
repz
ins
mov
mov
add
in
scas
push
inc
lods
cmps
fiadd
js
mov
mov
add
outs
xchg
fcomp
(bad)
jne
fisttp
lock
add
call
stc
dec
cmp
pop
(bad)
mov
xchg
pop
stos
shl
js
ja
mov
add
enter
addr16
lock
xor
loope
shr
jmp
push
inc
(bad)
jns
inc
xor
sbb
xchg
sbb
outs
mov
(bad)
cld
fcomp
pusha
lods
xchg
jmp
cmc
ror
add
mov
jne
icebp
jo
cld
and
loop
mov
out
inc
sbb
add
jbe
pop
cmc
les
adc
sub
out
repz
fninit
jae
sub
push
(bad)
es
add
(bad)
je
nop
mov
cmp
jecxz
sub
imul
daa
shr
jo
sbb
xor
dec
fisttp
cld
fwait
nop
cs
mov
ror
mov
or
push
sub
cmp
push
cmp
add
std
push
add
add
and
sbb
mov
test
stos
(bad)
ror
(bad)
call
sub
mov
ja
or
inc
lahf
xor
push
loopne
rep
popf
sti
mov
aam
push
mov
jp
sub
ss
clc
lods
sub
(bad)
in
cmp
test
es
or
fprem
xchg
ret
(bad)
sub
loop
fistp
cmp
jl
in
imul
xor
jmp
ret
jns
pop
cmps
repnz
movs
stos
mov
jp
test
out
pop
lahf
push
mov
inc
xor
mov
ss
pop
xor
rep
jp
dec
cwde
inc
mov
pop
jae
int3
jge
adc
push
push
adc
clc
mov
inc
push
mov
jnp
test
jbe
imul
sbb
dec
xor
adc
popa
mov
xor
sbb
(bad)
xlat
fbld
mov
sub
ds
repnz
out
push
jae
sub
js
dec
mov
and
sub
add
ret
cwde
cmp
or
js
jle
dec
inc
or
inc
or
cmc
mov
mov
movs
scas
xor
or
push
mov
adc
fbstp
mov
inc
inc
stos
xchg
rcr
retf
in
(bad)
mul
retf
pop
mov
or
pop
mov
add
pop
inc
in
xchg
push
int
cmp
jmp
jns
fsubp
outs
dec
mov
(bad)
fisub
outs
push
dec
std
cmp
mov
xchg
mov
push
mov
or
int3
ins
pop
pop
cmp
nop
lods
jb
sub
repnz
add
pop
fsub
mov
fdivr
push
inc
cmp
enter
xchg
les
mov
xchg
cmp
(bad)
xor
xchg
ja
sbb
xchg
les
aad
add
outs
xchg
add
loopne
aas
inc
jmp
sub
sbb
mov
(bad)
lock
fidiv
(bad)
mov
loope
mov
cmp
aas
mov
add
mov
push
rcl
push
pop
push
sub
sub
pop
jbe
(bad)
jns
cmp
jle
stos
in
pop
ror
push
ds
lahf
lods
int
shl
cmp
or
int3
sar
ins
div
lods
and
arpl
hlt
movs
pop
sub
popf
push
stos
jns
ffreep
push
push
popf
leave
(bad)
fcmovb
pop
dec
or
idiv
pop
aam
retf
movs
int3
sahf
xor
outs
rol
mov
add
jmp
dec
rol
adc
stc
adc
pop
push
repnz
stos
push
imul
sbb
call
clc
mov
ret
sbb
leave
sbb
xor
pop
(bad)
pushf
js
cmp
js
push
mov
cmps
ja
fimul
cdq
xlat
fucom
lods
add
lea
sub
mov
cmps
sbb
imul
or
or
cmp
iret
je
out
sti
jmp
push
mov
xor
iret
test
xchg
mov
rcl
retf
jg
enter
out
cmps
aad
xor
xchg
shl
jae
xor
int3
mov
sbb
pop
inc
pop
cmp
and
mov
aad
test
hlt
mov
js
xor
add
and
lds
push
adc
imul
xor
(bad)
rcr
leave
fsubr
fistp
inc
mov
mov
fs
test
movs
pop
mov
xor
outs
dec
fld
cmps
(bad)
sbb
fist
fmul
push
cwde
ror
into
test
loope
push
xchg
into
test
stos
jge
mov
popf
adc
cmps
and
dec
cmps
js
adc
in
lea
rol
iret
or
cmps
sbb
jle
sbb
aaa
call
pop
cmp
in
pop
push
push
adc
clc
mov
inc
dec
xchg
mov
xchg
cmps
adc
outs
or
push
fdivr
xor
(bad)
jg
jne
into
cmp
lahf
(bad)
(bad)
mov
movs
push
pop
loopne
mov
dec
lock
stos
out
dec
sti
arpl
mov
js
jmp
aad
mov
sti
outs
(bad)
pop
or
cmc
fiadd
mov
les
push
test
jns
stos
push
test
out
sbb
add
push
push
stos
and
ja
repnz
jns
and
mov
ror
pusha
cmp
cwde
(bad)
jns
test
stc
jbe
inc
add
ss
mov
add
inc
mov
test
lds
adc
mov
aam
sbb
dec
sahf
pop
xor
repz
inc
inc
(bad)
pop
aad
mov
lea
imul
adc
mov
sub
dec
pusha
lods
xor
dec
xor
sbb
test
jbe
or
cmps
mov
sti
(bad)
adc
jge
inc
xlat
push
or
into
cmc
push
fwait
arpl
push
or
movs
cmp
xor
or
cmp
leave
cli
inc
pop
and
mov
mov
aaa
jb
pop
test
movs
arpl
mov
ins
icebp
dec
iret
das
xchg
data16
pop
cmp
or
in
or
mov
and
cmp
loop
leave
inc
out
fld
dec
xor
mov
jns
and
ss
mov
jle
cmps
test
or
inc
push
dec
mov
mov
push
cmp
push
jl
lds
out
cwde
aam
(bad)
dec
xchg
mov
mov
sub
add
adc
mov
mov
cmp
retf
mov
aaa
inc
(bad)
dec
mov
pop
nop
das
jge
mov
lahf
gs
mov
mov
sub
and
out
push
mov
retf
xor
sub
sbb
pop
popf
out
inc
popf
push
loopne
clc
mov
adc
pop
dec
sub
sub
mov
scas
nop
lds
or
lods
cli
and
or
mov
xor
fidivr
jae
movs
rol
enter
aas
loope
aas
adc
aaa
pop
sbb
mov
les
sbb
xor
stc
mov
dec
pusha
push
in
fimul
and
jns
add
shl
test
pop
daa
sub
mov
scas
into
inc
mov
iret
pop
cmc
into
mov
test
hlt
dec
cmp
inc
outs
push
lods
std
sbb
(bad)
aam
std
out
out
sub
stos
push
xchg
mov
push
scas
xchg
fsub
mov
stc
psrld
cmp
cmp
mov
in
add
xchg
mov
stos
jnp
ficomp
imul
popf
lock
sub
out
ret
mov
(bad)
cmps
ffreep
push
fst
or
xor
mov
(bad)
shl
imul
clc
cs
loope
ror
cmp
xor
leave
aas
in
mov
aas
sub
dec
je
enter
push
add
lods
cmp
mov
nop
jne
imul
gs
stos
mov
jecxz
shl
mov
sbb
mov
xor
push
out
lds
gs
adc
cmp
lock
adc
push
jp
movs
jmp
aaa
add
xchg
inc
aam
mov
ret
es
idiv
aam
scas
or
loope
pusha
add
loope
and
inc
inc
repz
and
inc
out
hlt
or
(bad)
fsub
xchg
push
jmp
stos
in
jecxz
jle
pop
pop
inc
jne
dec
sub
cmp
or
cmps
jle
hlt
fincstp
das
mov
xor
loopne
cmp
inc
jno
push
and
or
mov
outs
inc
scas
or
xchg
bound
jb
hlt
and
push
lahf
sbb
movs
cmp
cmc
jl
repnz
mov
sub
dec
nop
push
jg
adc
add
addr16
dec
xchg
jle
inc
inc
dec
rcl
ret
pushf
icebp
and
and
inc
mov
not
or
inc
dec
add
into
jg
and
add
mov
jp
imul
mov
mov
cmps
pcmpeqd
aad
pusha
dec
repnz
jg
mov
xchg
leave
popa
dec
mov
adc
mov
add
or
test
xchg
pop
pushf
test
mov
scas
sbb
adc
push
mov
adc
lds
mov
fdivr
jg
adc
xchg
mov
test
xor
lods
sub
repz
sub
leave
cwde
in
repnz
mov
sbb
popf
ja
push
xchg
push
dec
call
mov
ss
cli
sbb
jnp
test
test
ja
mov
xor
call
dec
sub
enter
(bad)
loopne
cdq
jb
and
dec
jmp
loopne
pop
cmp
cwde
jo
mov
xchg
(bad)
in
mov
adc
call
pushf
ret
adc
xchg
gs
fldcw
leave
aad
repz
test
aas
xchg
xor
jnp
rcl
mov
push
fadd
adc
in
cmp
add
cdq
ins
or
outs
or
sti
pop
pop
push
jnp
mov
mov
push
shrd
pusha
push
inc
or
pop
ins
(bad)
sbb
xchg
fdivr
movs
imul
(bad)
pop
call
daa
sbb
mov
push
cdq
jo
adc
jns
mov
or
fist
or
xchg
push
in
test
push
sub
mov
leave
fist
sbb
daa
jno
cmp
and
jmp
mov
jo
ficom
xchg
clc
mov
jb
or
adc
mov
into
sub
imul
push
xor
rcr
lahf
xlat
fidivr
in
inc
adc
sub
int3
je
ficomp
mov
push
dec
xor
arpl
mov
jp
repz
adc
mov
ja
fst
stos
fnstcw
mov
imul
xor
mov
push
xchg
dec
outs
cmp
ins
cdq
dec
jecxz
fcomp
stc
mov
stc
sub
mov
nop
xor
dec
push
and
mov
popf
and
cmp
in
in
mov
data16
into
aad
fild
jno
ja
(bad)
stc
nop
daa
dec
or
lods
pop
adc
and
in
mov
add
in
mov
aam
mov
sub
(bad)
outs
pop
xchg
dec
test
pop
and
adc
ret
(bad)
stc
aaa
pop
jbe
cmp
add
daa
push
xchg
jmp
jecxz
mov
cmc
loope
mov
jns
dec
push
mov
loopne
lds
jmp
sahf
test
sub
je
aam
mov
mov
sar
pushf
push
sub
mov
in
imul
mov
jmp
dec
ret
cmp
dec
imul
mov
mov
imul
fadd
je
mov
fidivr
in
inc
lods
xor
jbe
mov
jmp
leave
push
les
pop
or
or
lods
push
movs
es
push
push
push
outs
aas
mov
loopne
and
xchg
jb
test
sbb
mov
test
mov
shr
fild
adc
mov
outs
jb
inc
cs
xchg
std
aam
mov
add
add
mov
cmp
or
call
test
xchg
leave
out
cli
jge
rol
fwait
js
jp
mov
cmp
repnz
xchg
sub
sub
push
loope
mov
retf
push
xor
ror
push
jns
xchg
mov
inc
ja
dec
mov
cmps
adc
out
mov
ja
(bad)
push
cmp
and
push
clc
aad
xchg
push
xlat
fcom
xlat
cmc
push
mov
add
fcom
xchg
sbb
(bad)
js
push
ds
cmovo
rol
popf
rcl
jmp
mov
mov
call
(bad)
cmp
and
or
stos
mov
xchg
out
lock
sbb
into
repnz
jp
mov
sub
dec
pop
xchg
std
loop
imul
xor
cmp
ss
(bad)
shl
es
and
cmc
cmps
rol
inc
iret
push
hlt
js
into
ins
add
outs
vpsignw
push
xor
scas
arpl
push
jae
cld
lahf
mov
sub
neg
sbb
aam
and
jg
xlat
stos
sub
pop
(bad)
sti
(bad)
loop
mov
(bad)
test
dec
xlat
sbb
pop
ret
and
add
xchg
xchg
pop
mov
pop
es
in
cwde
daa
adc
pop
leave
sbb
add
xchg
je
mov
mov
jl
mov
dec
(bad)
cmp
das
inc
in
out
push
mov
or
pop
adc
mov
scas
loope
push
adc
retf
pop
and
add
retf
xchg
sbb
fild
cmp
test
arpl
cmp
enter
or
jge
cwde
and
pop
and
lds
mov
or
arpl
cmps
fldenv
stc
lock
mov
lea
lock
push
fcmovb
movs
pusha
imul
call
cmp
stos
mov
adc
push
into
test
add
scas
test
xchg
pop
push
lods
les
dec
mov
cmp
cmp
(bad)
out
in
xor
mov
inc
iret
stos
sub
arpl
bound
adc
out
jge
mov
and
jl
fwait
dec
pop
pop
int
push
jns
jl
arpl
jbe
pop
jnp
lods
je
(bad)
adc
pop
loop
mov
mov
(bad)
ficomp
mov
dec
inc
aaa
jmp
fiadd
push
scas
xchg
outs
iret
mov
add
xchg
lock
pop
dec
mov
fdivrp
movs
cmps
sbb
cmp
sti
ins
scas
mov
add
enter
cmp
cwde
rcr
nop
je
pop
mov
inc
leave
cmps
jle
push
and
pop
ins
dec
lods
xchg
jp
dec
cdq
call
dec
push
jge
les
lahf
xor
enter
or
add
cmp
aaa
pop
push
sbb
fstp
pop
lahf
xor
shr
sbb
das
out
mov
(bad)
jg
sub
sbb
outs
and
mov
pop
imul
push
pop
in
stos
cmp
dec
in
jmp
not
repnz
sub
gs
cld
out
pop
mov
ins
or
push
ja
movs
outs
sbb
xlat
(bad)
pop
rol
out
shr
or
imul
mov
int3
jl
scas
dec
loope
cwde
stos
jne
xchg
adc
gs
(bad)
pop
ja
mov
jp
and
pop
mov
cs
mov
inc
adc
nop
xor
add
jp
aad
scas
shr
cmc
adc
dec
ror
push
and
imul
mov
xor
xchg
sub
cmp
leave
dec
retf
sahf
retf
stos
xchg
xor
sub
jns
(bad)
das
das
scas
scas
mov
pop
or
sbb
popf
mov
in
ss
cdq
push
imul
mov
in
aam
push
sbb
sub
and
mov
push
cmps
std
arpl
dec
hlt
sbb
mov
push
cmps
pop
push
mov
push
ret
add
gs
jne
jbe
or
inc
scas
xor
ror
test
inc
fdivr
inc
rcl
xlat
js
adc
pop
ss
fnstenv
jo
sub
mov
imul
fmul
sbb
xchg
stos
stc
jne
pop
mov
cmps
push
sub
aad
in
cwde
xor
jg
mov
test
mov
fisttp
dec
add
push
sti
dec
cmp
adc
(bad)
scas
add
cmp
or
push
dec
loope
and
pop
cli
fstp
lock
stc
jmp
je
pop
pop
fs
jnp
ret
adc
inc
and
xchg
popa
iret
mov
jo
inc
add
pop
leave
or
es
dec
mov
push
inc
jmp
cmc
jne
(bad)
adc
adc
fincstp
fdivr
mov
cmps
cmp
jmp
mov
push
dec
sar
xor
mov
xor
sub
sub
adc
mov
(bad)
daa
or
mov
push
or
popf
(bad)
int3
cmp
push
std
test
jbe
mov
fcmovu
mov
xchg
aam
lds
inc
mov
xchg
lods
shr
(bad)
ror
daa
int
mov
and
xor
push
fild
ss
push
pop
out
jbe
jmp
push
hlt
ss
jne
pusha
cwde
cs
loop
xchg
ins
or
xchg
bound
nop
outs
aaa
sbb
call
shl
sbb
ss
iret
sbb
dec
mov
out
sub
cmp
push
mov
mov
fcom
call
inc
cmp
lock
inc
icebp
mov
jb
mov
adc
(bad)
adc
dec
or
pop
sbb
mov
cmp
xchg
jb
cmp
xor
ins
lds
xlat
xchg
out
dec
or
push
std
nop
outs
clc
adc
repnz
sub
fdiv
xchg
push
rcr
(bad)
imul
mov
fidivr
(bad)
jnp
repnz
dec
mov
rol
push
sbb
int3
mov
sub
xchg
sub
das
call
(bad)
shr
jmp
movs
inc
outs
mov
retf
aam
aaa
inc
push
pop
test
or
pop
xchg
and
in
(bad)
sbb
or
pop
mov
mov
(bad)
mov
inc
sbb
pop
jne
arpl
mov
test
jno
push
retf
jae
loope
add
sahf
retf
add
dec
inc
hlt
stc
aad
frstor
movs
shl
fsub
pop
inc
and
mov
or
push
or
jnp
xor
ins
test
(bad)
xchg
xor
mul
popa
pop
stos
mov
push
add
or
aam
dec
or
push
cmps
test
cmps
mov
and
xor
pop
loope
cld
daa
mov
cli
or
or
cmp
mov
xchg
xor
sub
mov
add
jg
je
daa
dec
sahf
fsubr
ja
fistp
fs
stc
add
pop
sahf
sub
sbb
(bad)
stc
(bad)
cmp
mov
sti
ins
sbb
lea
mov
mov
fstp
lock
push
mov
call
into
aad
xor
inc
out
shr
mov
scas
xor
push
sbb
sbb
out
popf
mov
mov
in
enter
mov
jmp
xlat
(bad)
aam
pop
and
sub
or
icebp
sti
(bad)
daa
ror
mov
mov
stos
push
aam
in
fcomp
stos
fcomp
xchg
dec
(bad)
xor
ins
ins
sti
mov
xlat
cli
or
(bad)
(bad)
mov
inc
dec
inc
add
push
popf
fcmovb
icebp
cmps
stos
sub
jns
retf
or
push
push
in
hlt
mov
dec
and
jmp
mov
sub
xor
mov
jp
or
mov
call
sub
sub
and
push
xchg
mov
push
sti
retf
pop
or
test
idiv
pop
ror
repz
mov
cmp
inc
pop
pusha
jno
retf
dec
sub
jno
push
pop
xor
xor
ret
cmps
inc
sub
xchg
stos
cmc
pop
iret
clc
loop
js
push
adc
nop
adc
js
mov
loope
mov
test
stc
mov
xchg
sbb
cld
xchg
mov
xchg
and
push
or
out
test
cmp
xor
inc
jge
xor
fdivr
adc
lds
call
shr
adc
or
xor
adc
mov
sbb
xchg
jne
jg
(bad)
lods
fmul
test
or
or
out
into
lods
fcom
dec
test
jno
sahf
jmp
bound
int3
lahf
pop
push
mov
gs
aas
pop
test
call
jno
cmp
lahf
mov
inc
mov
mov
xchg
ret
test
fst
and
pop
mov
adc
jns
pop
out
mov
cmps
inc
push
imul
pusha
test
leave
movs
lahf
xchg
addr16
push
cmp
imul
inc
push
jmp
pop
mov
cmps
stos
pushf
idiv
test
mov
outs
pop
cmp
out
and
jo
xchg
dec
add
repnz
stc
popf
pop
pop
adc
daa
xchg
repz
imul
xor
rcl
stos
and
out
iret
ds
jecxz
sar
push
mov
mov
xlat
mov
mov
cmp
adc
scas
cli
imul
jge
push
stc
add
mov
push
ror
inc
cmp
jmp
push
pop
jmp
gs
push
adc
mov
test
fwait
adc
fisttp
dec
mov
jle
xor
dec
dec
or
cwde
dec
dec
mov
sbb
mov
js
iret
push
das
xor
js
call
or
addr16
mov
lahf
pop
sahf
icebp
lods
jb
icebp
mov
(bad)
iret
sub
mov
xor
jae
mov
xor
call
enter
and
icebp
fidivr
pop
jmp
inc
adc
adc
in
sbb
and
and
stc
push
out
adc
(bad)
mov
int
dec
or
adc
ja
pusha
push
pop
test
mov
mov
add
sbb
jnp
push
push
mov
(bad)
or
iret
repnz
fcmovu
stos
pop
or
cmp
out
sub
clc
(bad)
jo
ret
xchg
inc
xchg
movs
int3
in
mov
jb
xor
pushf
fcmovne
push
ins
shl
xlat
inc
pop
jnp
out
(bad)
aad
push
gs
fild
sbb
stc
jne
push
inc
retf
jns
adc
xchg
jb
pop
jmp
sub
jmp
push
fdiv
aaa
rcl
(bad)
ss
ret
push
push
xor
repz
xchg
test
inc
leave
push
mov
cmps
(bad)
and
jle
int3
cs
bound
cmp
sbb
add
adc
movs
(bad)
xchg
pusha
cmp
ret
loopne
pop
sub
cmps
rcl
sbb
adc
push
push
mov
dec
lea
pop
in
cmps
mov
outs
loop
push
sbb
sub
in
pop
push
(bad)
stc
sub
mov
fstp
mov
sbb
ret
pop
xchg
inc
dec
mov
paddq
in
stos
std
mov
(bad)
out
icebp
sbb
in
sub
mov
stc
or
out
loope
leave
xchg
sbb
shl
and
push
adc
(bad)
push
gs
out
les
adc
je
in
jae
lea
pop
mov
pusha
loop
adc
imul
pop
dec
imul
ds
mov
fwait
in
(bad)
jne
push
leave
mov
add
pusha
fisubr
xlat
mov
mov
ss
aad
popa
in
out
call
or
dec
push
imul
stc
and
sbb
sub
inc
or
sbb
sbb
mov
fcmovnbe
inc
inc
iret
xchg
or
fild
test
sbb
pop
cmp
or
inc
pop
pop
arpl
jg
sti
mov
xor
lods
push
popa
inc
jg
(bad)
jb
dec
sub
mov
shr
das
jmpw
mov
popf
int
lods
repnz
cmp
pop
xor
lods
mov
fs
test
fwait
xor
bound
fstp
sbb
mov
or
int
cmps
xchg
outs
scas
add
ja
sbb
jnp
xchg
test
fstp
pop
and
stc
lods
or
dec
cmc
mov
das
jbe
dec
sbb
mov
cs
mov
movs
in
mov
dec
fs
clc
jno
out
cmp
add
inc
xor
(bad)
cmp
aaa
mov
inc
sti
aaa
ficomp
fs
das
shl
lods
lods
pusha
jg
or
dec
call
or
js
jo
jg
test
push
and
and
mov
add
mov
hlt
sti
jmp
jo
fild
cli
pop
or
mov
xor
add
sub
lahf
ret
jge
bound
shr
xor
lock
pop
push
into
(bad)
es
push
adc
out
lods
mov
pop
fld
scas
and
rol
(bad)
jmp
xchg
out
inc
scas
adc
ja
cmp
add
adc
cld
and
pop
inc
push
iret
jae
add
(bad)
cmp
pop
cmc
and
stos
inc
push
movs
adc
jbe
lods
xor
ins
mov
pop
nop
cmps
jo
sub
lods
fwait
cmps
ins
xchg
pusha
xchg
and
inc
js
push
cwde
jo
les
cmp
in
pop
push
xchg
sbb
mov
test
test
in
pop
rcr
xor
and
popa
add
mov
sahf
es
mov
inc
ja
xor
enter
mov
sub
mov
xor
repz
icebp
mov
mov
cmp
jmp
mov
sub
add
mov
jno
push
(bad)
mov
and
mov
xor
sbb
sti
test
ja
mov
sbb
in
imul
jnp
mov
clc
das
adc
mov
es
xchg
pop
cmp
cs
out
repz
mov
stos
xchg
repnz
addr16
sbb
daa
daa
ret
cmp
inc
jne
inc
inc
pop
bound
jno
test
div
mov
and
out
xor
or
xchg
xor
push
call
pusha
ja
push
aas
inc
jl
js
mov
mov
and
xor
in
stos
loope
inc
cmp
mov
int
dec
loope
mov
inc
fcom
mov
bound
sbb
dec
fs
xchg
test
mov
push
add
arpl
inc
mov
popa
mov
leave
daa
out
mov
jp
(bad)
pop
xor
jne
inc
nop
mov
jge
iret
inc
sar
shl
xor
je
test
jns
shr
push
dec
repz
cmp
dec
mov
(bad)
mov
xor
and
push
outs
xor
mov
ds
jae
sahf
add
inc
adc
clc
ret
out
icebp
shl
lods
clc
stc
rcl
arpl
jb
jecxz
jge
popf
cmc
jbe
and
popf
mov
cld
lea
sbb
retf
mov
xlat
leave
repz
cdq
aam
mov
scas
mov
jecxz
retf
inc
mov
fist
add
cmp
movs
pop
dec
cmps
xor
xchg
cmp
xchg
push
aas
xchg
out
fcomp
cld
stos
fsub
pop
cmp
xchg
push
nop
aam
iret
inc
jne
jp
(bad)
mul
fild
mov
sbb
scas
mov
cwde
out
push
in
push
pop
rcl
ins
fadd
sbb
mov
jne
jnp
mov
add
imul
adc
arpl
push
sbb
xor
scas
data16
or
mov
dec
push
std
xchg
cmp
loope
cmc
test
pusha
push
test
icebp
les
fst
or
push
das
into
or
or
inc
and
add
out
xchg
mov
push
jmp
movs
pop
es
pop
push
or
jb
call
ja
lds
sbb
sbb
mov
xor
int3
jecxz
repz
jo
sti
add
mov
push
cwde
call
and
movs
loop
mov
jbe
out
cwde
cmc
push
fwait
clc
mov
mov
pop
cmp
test
xchg
and
pop
(bad)
sbb
pop
mov
sub
repnz
cmp
push
cwde
ret
jno
out
mov
aam
nop
pop
leave
push
test
jge
push
jl
mov
lahf
sahf
(bad)
gs
push
inc
push
pusha
mov
ja
jbe
sbb
inc
inc
movs
rol
xchg
es
cmps
lock
daa
pop
dec
aam
xor
push
fwait
dec
mov
inc
adc
mov
mov
or
icebp
popa
in
push
pushf
mov
movs
das
out
push
fwait
jne
dec
ins
or
add
sahf
add
sub
adc
xor
mov
push
in
movs
cmp
pop
bound
fcom
or
add
lahf
dec
loope
enter
sub
jg
dec
fdiv
(bad)
in
sbb
mul
jne
or
iret
loop
cdq
mov
call
js
push
(bad)
sub
mov
fiadd
psraw
dec
adc
mov
adc
mov
xchg
aas
push
rcl
mov
rcr
daa
jp
pop
adc
movs
dec
push
cmp
inc
fidivr
fdiv
ror
sbb
sti
(bad)
adc
js
loop
cwde
shl
js
mov
mov
mov
call
leave
mov
loopne
mov
jbe
xchg
imul
jle
out
cmp
add
addr16
(bad)
fistp
int
neg
lea
int
imul
fidivr
xor
icebp
adc
mov
xchg
jo
jo
scas
test
(bad)
mov
stc
vmwrite
nop
mov
retf
mov
sbb
or
or
js
or
xchg
jne
ins
ds
stc
mul
dec
mov
mov
mov
xor
xor
push
dec
retf
and
fwait
in
mov
fwait
pmulhw
popf
dec
test
out
dec
rol
mov
sub
ss
into
push
dec
aad
movs
popf
std
jno
mov
je
dec
or
cmc
inc
mov
cmp
sbb
pop
call
(bad)
pusha
iret
ja
dec
mov
and
loopne
gs
popa
call
(bad)
adc
lock
or
fisubr
mov
inc
mov
popa
add
repz
not
ror
cmp
ror
pop
pop
frstpm(287
sbb
bound
sahf
push
sbb
rol
sti
aas
xchg
ja
jnp
mov
iret
jns
add
mov
std
jb
xchg
mov
pop
arpl
ror
cmp
in
shl
aad
jmp
stos
jae
jge
add
mov
sbb
inc
imul
or
jne
push
or
push
sbb
jle
(bad)
sub
lahf
inc
pop
cmp
lea
(bad)
mov
call
sub
repz
mov
repnz
cmp
xchg
aam
jb
add
movs
sub
imul
xchg
mov
pop
aam
scas
push
ds
lods
mov
in
adc
sub
dec
mov
mov
xchg
sub
addr16
and
add
push
das
xchg
mov
sbb
ret
jnp
(bad)
jge
push
or
push
in
mov
sbb
movs
(bad)
mov
cmp
inc
sbb
mov
xor
into
iret
call
aaa
mov
pop
ficomp
xlat
push
xchg
dec
sub
cmp
jle
sar
test
mov
shl
movs
sti
fptan
fs
jge
sub
(bad)
jg
das
add
xchg
xchg
push
add
mov
sub
add
fld
adc
xchg
jp
cs
pop
arpl
xor
dec
pop
jbe
pop
and
scas
or
adc
(bad)
out
mov
je
mov
and
jbe
xchg
(bad)
(bad)
mov
cdq
push
pop
mov
rcr
or
mov
cwde
test
cdq
pop
mov
jge
pop
adc
jecxz
mov
inc
call
repz
in
sbb
ins
int
dec
cmp
dec
fwait
pop
fdivr
mov
add
ret
xchg
in
arpl
jge
jo
xchg
mov
aas
jmp
cmps
sbb
aaa
inc
retf
lods
int3
xrelease
push
fs
in
out
clc
iret
or
in
inc
cmc
imul
jecxz
cld
or
loopne
in
pop
push
xor
loopne
xor
imul
es
out
out
mov
xor
xchg
pop
jl
pop
jb
pop
lahf
sub
out
sbb
stc
sbb
test
sub
(bad)
pop
retf
pop
dec
das
fmul
sub
pop
or
fisub
adc
add
cld
push
push
(bad)
dec
ss
mov
sbb
scas
sbb
and
aam
sbb
inc
jl
push
(bad)
or
ins
int3
fdivr
(bad)
movs
pop
repnz
jne
push
xchg
sub
and
icebp
outs
inc
mov
scas
ret
sahf
mov
pusha
loopne
cdq
inc
pop
leave
daa
retf
in
dec
jbe
add
imul
cmc
rol
bound
or
rcl
jbe
lea
push
(bad)
mov
mov
mov
mov
sub
out
jbe
jmp
pop
sub
xor
es
xor
aad
mov
out
scas
imul
pop
test
loopne
push
pop
mov
jns
out
mov
pop
aas
sub
xlat
sahf
rcr
lahf
into
loop
test
jecxz
jp
lods
(bad)
div
jmp
rcr
test
and
es
pop
das
and
outs
sbb
mov
fsub
push
and
cli
push
inc
cdq
mov
xchg
std
sar
jg
add
nop
psubq
inc
adc
iret
inc
cwde
test
test
pop
fwait
out
pushf
rol
mov
(bad)
push
cmp
push
cld
out
add
fwait
xor
call
push
push
outs
jecxz
out
sub
jl
into
xor
inc
out
std
cmp
imul
in
or
xor
mov
jle
stos
std
retf
pop
sub
fld
adc
mov
push
retf
mov
sub
dec
or
dec
push
cli
mov
ins
push
in
jnp
or
in
stos
sbb
lods
div
and
or
mov
aaa
(bad)
iret
daa
adc
jecxz
mov
push
sbb
adc
or
and
pop
dec
clc
mov
int3
daa
inc
sti
pop
or
push
jle
mov
imul
add
jae
inc
cmp
and
push
and
loope
pop
push
fisttp
fmul
push
mov
xchg
(bad)
add
loope
fwait
or
test
sbb
stos
pushf
outs
push
mov
mov
sub
fwait
in
and
fst
test
dec
lahf
(bad)
enter
xor
dec
daa
mov
lods
jmp
inc
into
loope
fstp
aam
(bad)
mov
sub
adc
loopne
fcomp
jmp
xchg
xchg
jle
sub
adc
and
mov
dec
inc
or
dec
into
jle
fcmovu
lahf
lahf
outs
mov
xor
dec
fwait
jo
and
push
cs
rcr
aaa
les
dec
sti
push
imul
scas
mov
add
adc
cli
jp
retf
sub
fstp
mov
mov
xor
(bad)
push
dec
dec
and
pop
in
and
push
fstp
stos
(bad)
mov
mov
ror
ror
add
adc
test
in
imul
push
shl
xor
(bad)
movs
and
retf
inc
addr16
movs
and
cli
loop
sbb
out
sar
mov
lahf
xchg
push
mov
pop
lods
cld
pusha
or
mov
pusha
dec
push
in
inc
add
ja
shl
push
mov
add
cmp
xchg
xchg
inc
adc
in
inc
or
out
sub
adc
sbb
sbb
inc
gs
cmp
leave
into
push
pop
pop
mov
jb
enter
nop
sbb
test
inc
popa
adc
jp
loopne
addr16
loope
retf
sub
pop
and
cmps
repz
jns
arpl
or
in
jg
arpl
push
sub
(bad)
mov
inc
jg
scas
test
jmp
mov
cli
mov
adc
and
fidivr
add
fsubr
push
fidivr
xor
(bad)
cmp
jp
pop
test
stos
sar
add
xchg
addr16
or
add
xlat
cmp
push
sbb
(bad)
(bad)
hlt
xor
push
mov
sub
(bad)
ins
daa
pop
push
ret
sbb
inc
(bad)
aas
pop
push
mov
leave
cwde
adc
xchg
sar
adc
(bad)
cmp
xchg
rcl
cmp
push
fnsave
mov
lods
clc
call
jne
int
xor
hlt
sahf
pop
xchg
sahf
push
sti
push
leave
cld
outs
(bad)
mov
adc
in
add
dec
std
(bad)
daa
ret
dec
jnp
fsubr
ds
stos
test
dec
pop
(bad)
int3
jbe
stos
xchg
sbb
dec
lahf
scas
repnz
xor
dec
mov
add
test
and
lahf
jp
inc
cmp
cmp
inc
cli
int3
(bad)
gs
mov
fs
and
(bad)
fmulp
pop
jae
cmp
lock
or
pop
push
out
mov
std
mov
add
fistp
add
std
out
dec
pop
addr16
scas
push
(bad)
push
xchg
mov
ss
or
aas
push
sar
in
cmps
cmps
lods
pop
cli
cmps
pop
stos
(bad)
cli
xchg
(bad)
iret
loop
iret
and
pop
pop
je
xchg
fdiv
cmps
sbb
in
xchg
sbb
daa
pop
int
pusha
or
daa
ror
shr
mov
xchg
fsub
adc
xchg
pusha
fcomip
mov
mov
pop
push
push
enter
in
cmp
movs
mov
call
xchg
xor
xchg
(bad)
retf
gs
xchg
jle
mov
pop
jge
add
fnstsw
adc
or
mov
add
sti
repz
popa
movs
sub
sub
xchg
xor
xor
out
imul
and
xor
inc
popa
and
push
inc
mov
pop
sbb
(bad)
adc
neg
repz
setl
and
loop
in
test
imul
mov
ds
movs
(bad)
fcomip
dec
or
sbb
lds
int3
and
xchg
loop
push
mov
dec
mov
inc
shr
call
and
retf
nop
sti
test
call
add
xor
sbb
pop
mov
fsubr
pop
xchg
jle
adc
push
fist
adc
int3
pop
and
sub
jne
sub
in
sub
nop
aas
cwde
sub
mov
cmp
jb
and
jo
fsubrp
loopne
cwde
add
or
and
pushf
push
dec
retf
mov
pop
mov
add
push
hlt
add
xchg
stos
and
add
aaa
push
ss
ror
into
sbb
call
daa
inc
pop
cmp
pop
sbb
leave
inc
mov
and
fistp
dec
push
data16
sub
mov
jp
pop
leave
push
fdiv
das
pop
xor
jo
pop
adc
push
or
fild
add
add
sub
lock
cli
lods
adc
adc
lock
pop
or
adc
js
les
or
jg
ja
xchg
fs
push
shrd
popf
cmps
icebp
dec
in
sbb
test
push
call
push
add
gs
pop
sbb
sahf
pop
dec
dec
cmp
in
pop
jno
loopne
jp
xchg
cmp
aam
imul
retf
mov
out
cmp
inc
out
int3
pop
pusha
dec
movs
loopne
and
xchg
addr16
repz
inc
add
xor
dec
add
push
jecxz
add
jecxz
not
cmp
pop
sahf
sbb
es
outs
repnz
popa
out
push
xchg
sub
aaa
xchg
fsub
push
fnstsw
adc
mov
scas
dec
sbb
adc
scas
pusha
sar
mov
les
mov
cmp
mul
leave
pusha
mov
je
xchg
sar
mov
iret
aas
inc
jns
dec
mov
sti
shl
popa
hlt
pop
dec
mov
xchg
imul
inc
int3
fstp
cmc
push
push
test
in
mov
scas
fwait
cmp
arpl
cmp
cli
jnp
fsub
retf
cmp
iret
ror
jbe
movs
(bad)
aad
jmp
imul
repz
je
and
jns
pop
mov
cli
fst
mov
xchg
es
dec
sbb
inc
ret
test
jg
mov
push
mov
aas
sub
inc
lods
push
dec
mov
fldln2
cmps
js
adc
adc
mov
cmc
dec
loope
scas
cmp
adc
pop
mov
imul
sub
shr
push
sub
outs
mov
aas
adc
fist
ja
retf
fisubr
cwde
pop
out
test
dec
push
jo
mov
daa
sti
outs
popa
sub
test
inc
adc
cwde
push
(bad)
pop
mov
mov
pop
push
lahf
jg
je
push
repnz
daa
fldz
push
popf
int3
loope
pop
jbe
sbb
sbb
cwde
pop
mov
xchg
mov
xor
fnstcw
pop
xchg
rol
fldenv
stos
or
dec
or
dec
in
jnp
push
xchg
jle
sar
sub
clc
out
pop
icebp
or
mov
pop
in
jp
imul
sti
add
aaa
jbe
jmp
mov
cwde
push
popf
inc
arpl
or
jns
test
out
and
mov
popa
lahf
cmc
cdq
push
jl
push
push
cld
sub
jne
lods
and
aaa
xchg
pop
jmp
loope
retf
fsubrp
mov
shl
fisttp
xchg
push
adc
dec
loope
or
and
sbb
push
rcl
adc
cld
sbb
ja
mov
or
aas
and
cmp
jge
cmps
(bad)
sub
fdivr
jbe
daa
cmp
mov
fstp
sbb
sub
ja
xchg
pop
adc
pop
mov
mov
enter
hlt
mov
pop
lea
leave
or
loopne
cmp
clc
mov
push
daa
test
xchg
dec
jmp
mov
sub
dec
xor
mov
test
add
rol
ins
pushf
mov
int3
cmp
cmp
add
xchg
fld
and
lods
lock
xor
aaa
cs
or
or
pop
outs
outs
push
mov
jo
mov
sar
fwait
lock
aad
gs
pop
ror
loopne
xchg
rcl
xchg
push
fst
sbb
xor
cdq
das
daa
ss
mov
mov
add
mov
or
sbb
mov
daa
stos
fidiv
mov
sbb
not
xor
aaa
lahf
cs
xor
mov
daa
dec
and
mov
pop
das
hlt
jge
fstp
mov
lds
les
imul
cmp
or
and
mov
and
pop
das
neg
stos
dec
mov
cmc
pop
sahf
ret
jge
popf
adc
ret
push
popa
xor
out
clc
jne
lock
push
cmps
mov
jecxz
or
ds
outs
rcl
imul
push
(bad)
pop
sbb
push
push
je
js
mov
rcr
jo
ins
imul
lods
imul
adc
xchg
(bad)
mov
js
fcom
sbb
(bad)
(bad)
clc
adc
enter
mov
mov
xlat
xchg
call
xchg
int
ror
xchg
ret
leave
xor
xchg
addr16
add
pop
out
xlat
mov
call
push
outs
add
imul
out
addr16
dec
jno
sub
push
pushf
loope
mov
add
arpl
retf
test
aad
jge
mov
(bad)
push
push
or
cwde
mov
fnsave
pop
push
jmp
cmp
or
mov
inc
lahf
fistp
in
test
jle
pop
cmp
adc
and
xchg
pop
add
pop
mov
or
cli
cmps
lods
mov
(bad)
fwait
push
pop
xor
fisttp
enter
shr
out
lock
or
shr
push
imul
lds
inc
add
in
inc
xchg
les
adc
xchg
int
or
out
jg
xchg
cmc
cwde
js
adc
inc
mov
nop
daa
mov
sub
daa
mov
push
(bad)
sub
dec
mov
jno
ret
into
pop
sub
jp
jmp
cwde
ins
mov
add
and
fdiv
out
adc
sub
xchg
sbb
ins
pushf
fwait
out
jle
fnsave
or
pop
mov
mov
movs
pop
cmp
mov
test
or
mov
loopne
sbb
pusha
mov
cdq
shr
aam
push
in
sub
mov
sub
jbe
mov
nop
add
jl
jge
iret
adc
fist
push
xor
ds
lea
fst
fdiv
fst
push
add
mov
ret
cdq
pop
cld
inc
mov
out
push
push
cmp
sbb
adc
in
loop
outs
addr16
dec
bound
xor
leave
mov
out
xchg
dec
and
jecxz
inc
ret
xchg
jns
in
pop
sub
imul
dec
lods
push
inc
icebp
in
sbb
push
inc
fsub
inc
adc
xchg
push
popa
add
jns
push
call
(bad)
dec
jmp
mov
test
mov
popf
fisub
xchg
sub
and
xchg
xchg
retf
jns
cmp
xchg
dec
cmp
pop
xor
xchg
pop
sbb
xor
in
nop
ins
adc
sar
xchg
inc
or
(bad)
ins
adc
or
jmp
in
push
bound
rcr
mov
cmp
loop
sti
pop
lods
mov
dec
fucom
enter
xchg
arpl
cmp
push
sbb
lahf
jmp
push
jne
fs
add
dec
xchg
and
jnp
sub
rol
ins
xchg
adc
or
ret
cmp
xchg
cwde
push
xor
add
or
fld
int3
pop
inc
mov
mov
cmp
and
add
pop
push
push
jnp
xor
push
cmps
mov
push
lea
inc
ins
mov
cmps
xchg
mov
dec
hlt
retf
mov
lods
enter
cld
xor
or
scas
imul
pushf
mov
xor
cmp
mov
sbb
fidivr
pop
ds
aam
cmc
mov
add
jge
cmps
inc
xor
jbe
xchg
push
hlt
cmps
lods
inc
cmps
loope
xchg
mov
dec
push
lock
lods
jp
ja
stos
das
data16
ja
push
ins
push
scas
aas
in
xor
outs
inc
jmp
retf
xchg
sub
mov
push
mov
dec
jmp
pop
test
cwde
repz
and
cli
aam
xlat
inc
retf
les
pushf
test
pop
(bad)
int
adc
xlat
in
sub
dec
(bad)
adc
add
div
js
pop
mov
outs
or
jne
ret
(bad)
xlat
test
retf
mov
push
inc
add
popa
dec
imul
inc
add
jne
pop
push
cmp
adc
js
cmps
(bad)
or
add
leave
inc
or
xchg
inc
pop
add
lahf
cmp
adc
xor
lock
mov
dec
test
lock
aad
aaa
pop
mov
sub
in
pop
push
jnp
fild
mov
sub
cmp
leave
cld
out
loopne
cli
movs
push
arpl
dec
xor
xor
leave
cmps
dec
mov
(bad)
sbb
pop
(bad)
shl
mov
xor
pop
fbld
enter
ss
cmp
iret
das
outs
ss
int
leave
add
push
lods
ins
mov
sub
inc
mov
rcl
sub
retf
adc
sub
loop
ja
inc
adc
lods
cli
pop
adc
jne
adc
rcl
cmp
add
cwde
cmp
and
push
cld
cmp
push
sub
fisttp
add
out
xor
cmp
sbb
jecxz
cld
int3
div
mov
outs
lods
sub
call
in
stos
mov
enter
mov
scas
push
mov
or
push
rcr
pop
les
jne
push
es
scas
sahf
lds
pusha
mov
push
xor
(bad)
stos
pop
xor
dec
(bad)
fist
and
mov
xchg
rol
push
xor
popa
pushf
arpl
jo
(bad)
xchg
imul
je
sub
retf
mov
movs
cmp
test
fwait
mov
fbld
push
mov
je
unpcklps
xlat
sbb
push
call
outs
lahf
adc
into
aas
pop
fsubr
and
inc
dec
sbb
mov
add
jl
mov
dec
retf
add
mov
mov
int
adc
or
daa
add
xchg
cdq
(bad)
ds
mov
sbb
or
sahf
push
push
jmp
test
dec
mov
hlt
push
ds
push
xchg
rol
sub
sub
mov
jge
popa
sub
out
push
dec
add
pop
(bad)
aaa
mov
gs
add
pop
mov
mov
dec
sahf
pop
aam
xchg
push
xor
ins
fadd
push
lahf
sub
mov
hlt
or
(bad)
stos
mov
mov
pop
mov
cmp
gs
jne
test
mov
xchg
xchg
dec
loopne
test
push
pop
rol
mov
jmp
mov
mov
dec
mov
sbb
test
xchg
(bad)
and
jecxz
rol
jp
jmp
mov
add
ja
mov
lahf
out
sub
out
push
ja
ins
(bad)
mov
retf
pop
adc
test
pop
sahf
mov
cmp
hlt
retf
inc
mov
not
jmp
outs
push
fiadd
mov
imul
jmp
cdq
push
or
dec
daa
jge
xchg
les
jnp
or
jnp
cmp
adc
xchg
imul
js
mov
jbe
mov
and
test
js
ss
mov
loopne
sahf
ins
(bad)
fst
je
mov
pop
mov
cmp
and
jecxz
mov
ret
inc
inc
mov
and
fsubrp
shl
dec
repnz
push
(bad)
(bad)
fcom
jle
pop
bound
int3
setp
fs
rol
stc
jnp
push
xchg
(bad)
and
jne
in
pop
and
push
adc
adc
add
clc
ins
cmp
das
outs
add
and
jb
mov
loope
test
scas
and
ins
pop
mov
scas
adc
clc
push
mov
and
cdq
mov
js
pop
mov
enter
imul
ja
inc
nop
jbe
inc
jo
dec
adc
fwait
jbe
ss
inc
push
mov
mov
fnstenv
adc
jmp
sbb
lods
jmp
pop
mov
fild
dec
mov
cmp
cmp
repnz
(bad)
pop
inc
adc
xchg
lods
push
std
mov
jg
push
mov
and
inc
dec
test
jmp
cs
dec
shl
std
mov
pop
mov
fidiv
inc
imul
(bad)
xchg
stos
xchg
jmp
dec
cli
dec
pop
fwait
mov
adc
das
mov
mov
outs
repz
outs
adc
push
jmp
out
sub
push
scas
jbe
inc
jl
xchg
repz
mov
xor
and
add
sbb
mov
push
lea
mov
sbb
repz
neg
(bad)
adc
and
mov
pop
pop
push
cwde
js
jp
loop
inc
lods
stos
or
cmp
inc
push
mov
(bad)
int
(bad)
cld
ins
jmp
xchg
outs
fnsave
movs
add
mov
pop
ins
mov
jns
xlat
sbb
dec
repz
mov
scas
dec
js
dec
out
stos
jg
shr
out
cmp
xlat
shl
rcr
ja
xchg
xchg
frstor
test
jmp
mov
cs
(bad)
popf
hlt
mov
xor
fdiv
sahf
repz
cmps
shl
test
das
sub
ds
pop
xor
rol
mov
xchg
jbe
es
adc
mov
mov
icebp
adc
lock
or
call
loop
clc
jne
push
or
cmp
xchg
stos
push
loope
je
ja
inc
xchg
std
pop
push
jnp
dec
test
stos
dec
scas
lds
mov
data16
and
in
(bad)
pop
inc
cmc
movaps
and
adc
mov
in
and
aas
or
pop
mov
js
mov
aaa
aad
jmp
dec
les
mov
retf
cmp
aaa
aam
and
pushf
or
lahf
int
xchg
adc
fnsave
les
add
mov
enter
clc
jmp
daa
lods
xchg
xor
add
push
cdq
pop
test
xchg
fcomi
std
or
imul
and
test
pop
repz
dec
clc
(bad)
(bad)
xchg
xchg
xor
loope
xchg
mov
dec
sub
fwait
cmps
lahf
mov
jnp
sub
test
aas
add
cmp
sbb
mov
ss
jo
(bad)
pusha
mov
adc
sti
scas
addr16
data16
mov
in
pop
inc
add
mov
mov
dec
pop
add
push
add
das
mov
jb
sub
mov
call
les
out
shl
(bad)
lahf
or
add
fsub
jmp
add
nop
lods
dec
xchg
xchg
xchg
push
cmp
mov
data16
mov
(bad)
jnp
(bad)
push
fcmovbe
jno
mov
lahf
fsubp
xor
mov
out
pop
(bad)
mov
shl
loope
out
jmp
movs
or
loope
xlat
int
inc
adc
leave
cmps
loopne
adc
(bad)
xor
neg
pusha
mov
inc
inc
shl
pop
ds
popaw
mov
sahf
icebp
add
sbb
mov
mov
in
and
dec
retf
ins
pop
xor
or
sahf
aad
(bad)
cmp
mov
cmp
(bad)
or
jne
outs
push
mov
adc
out
les
jbe
push
mov
test
and
mov
das
mov
dec
out
lock
mov
push
addr16
mov
and
xor
inc
jb
ret
lahf
arpl
pop
lock
fwait
mov
lds
js
add
fs
mov
mov
sbb
dec
mov
xchg
push
cwde
movs
xchg
dec
dec
daa
cmp
xor
jecxz
shl
les
mov
mov
dec
push
xchg
stos
push
mov
mov
mov
sbb
sub
and
sub
or
add
call
adc
cs
mov
adc
and
cwde
or
fsub
and
add
cmps
repz
push
and
iret
mov
call
lahf
lahf
in
sub
xchg
aad
add
stc
or
aam
jmp
pop
jbe
iret
mov
lods
hlt
sti
bnd
or
div
cmp
dec
ins
nop
xor
out
pop
mov
xchg
dec
lock
xchg
stc
mov
js
adc
push
test
aad
stos
fistp
adc
outs
inc
repz
mov
arpl
repnz
(bad)
in
loope
pop
or
dec
xor
mov
lock
xchg
adc
(bad)
imul
icebp
add
popf
lods
(bad)
sub
rol
sub
(bad)
sbb
imul
pop
cli
lods
dec
pop
xchg
add
mov
test
ins
jns
or
adc
dec
out
ss
mov
aam
aas
mov
(bad)
mov
(bad)
push
jge
dec
repz
add
bound
cmp
loopne
dec
(bad)
int3
push
popa
cmp
test
xchg
pop
sub
mov
ror
xchg
xchg
and
add
jno
or
stos
or
fst
es
int3
sbb
inc
cmp
enter
xor
ret
mov
in
inc
mov
or
adc
jnp
movs
push
mov
movs
push
int3
cdq
movs
mov
ror
cmp
mov
mov
cli
test
dec
inc
call
iret
data16
sub
aad
daa
xchg
iret
or
xchg
ret
jle
lahf
sbb
cmp
mov
pop
jp
movs
mov
fcmovnu
dec
cld
in
pusha
xor
mov
or
popa
push
push
pop
push
pop
out
jmp
cs
jns
in
adc
add
adc
sbb
retf
imul
mov
adc
xchg
aam
cmps
add
stos
push
inc
pop
scas
mov
mov
pushf
(bad)
pop
fmul
fstp
jo
sbb
push
cmp
sbb
(bad)
mov
js
sub
xchg
jge
push
push
dec
clc
mov
push
push
popf
addr16
(bad)
mov
call
movs
(bad)
out
or
out
aam
fimul
ficom
cmc
outs
mov
js
fist
add
unpckhps
movs
(bad)
cld
div
cs
jno
mov
mov
and
mov
push
scas
jo
jmp
das
hlt
popa
daa
(bad)
mov
test
movs
jecxz
stc
repz
sbb
xor
(bad)
aas
nop
ret
cmp
push
in
je
dec
inc
sub
jmp
pop
adc
add
fnstcw
cmps
test
sub
cmp
mov
or
lds
icebp
sub
fidivr
adc
jecxz
mov
adc
stos
cmc
and
fsubr
dec
mov
scas
pop
xor
or
mov
push
outs
(bad)
mov
mov
imul
call
jb
inc
jl
jns
xor
inc
fcomip
and
retf
loopne
xchg
add
inc
call
add
mov
jns
adc
pop
stc
jmp
retf
ret
data16
or
and
fiadd
xchg
lahf
xor
jbe
je
inc
cmps
jl
iret
call
mov
fwait
jno
xchg
add
mov
inc
gs
out
fucomi
sahf
movs
add
fisub
push
pop
retf
jbe
inc
mov
(bad)
(bad)
int
push
(bad)
movs
push
movs
dec
pop
mov
mov
push
or
out
retf
add
xor
imul
enter
pop
pop
or
xchg
mov
push
adc
das
xor
fxch
dec
mov
add
mov
ins
xchg
dec
call
pop
mov
or
adc
cmps
mov
call
push
push
jle
jmp
repnz
xor
adc
data16
push
cmp
pop
sub
imul
inc
and
repz
call
or
sub
xor
ret
imul
and
sahf
or
stc
das
xor
xchg
mov
into
out
mov
pop
stc
and
aam
int3
arpl
push
jmp
lea
mov
mov
fcomp
ins
(bad)
dec
inc
pop
and
or
cs
pop
xor
das
push
jbe
aad
jge
imul
cmp
bound
pop
jle
dec
mov
push
ficom
(bad)
push
mov
cmp
test
xchg
std
push
repz
mov
popf
fdiv
xor
and
adc
mov
jle
fld
mov
mov
lahf
mov
aaa
jp
add
ins
or
sahf
iret
lock
loope
(bad)
je
and
test
cdq
push
ror
in
inc
dec
ret
cmp
les
jns
mov
test
leave
and
stc
lock
jg
cmp
push
xor
sub
(bad)
jl
cmp
mov
cmp
lds
jno
rcl
mov
(bad)
int3
aam
push
dec
stos
outs
leave
fucompp
fsubr
jp
cmp
or
lds
or
cmps
retf
and
inc
sub
retf
xchg
pop
mov
popa
es
mov
movs
nop
test
movs
retf
retf
cmp
pop
ins
ds
mov
aas
loopne
mov
dec
mov
scas
inc
xor
sbb
xchg
fsubr
pop
js
jo
ror
jl
in
mov
lea
out
sub
xchg
dec
mov
call
test
adc
inc
inc
imul
cmp
mov
sbb
les
cs
push
lahf
mov
movs
inc
test
das
xchg
add
jnp
call
lds
mov
cs
shl
cmps
not
shl
adc
cdq
sub
mov
dec
aad
in
dec
mov
push
jnp
and
mov
pusha
dec
sub
pop
cmps
repz
jo
mov
mov
ins
call
lock
mov
jmp
pop
dec
loope
outs
js
xchg
inc
mov
test
dec
rol
test
mov
fcomp
pusha
pop
cmp
loopne
clc
scas
aam
pop
cmp
cmps
and
push
dec
jbe
nop
iret
jg
test
cmp
icebp
sbb
loope
rcr
xchg
shld
dec
adc
push
jno
test
nop
mov
cdq
push
cmc
aas
mov
cs
ret
aad
lods
loopne
enter
sahf
mov
push
mov
inc
add
shr
clc
mov
jp
or
inc
lds
cmps
mov
pop
in
aas
sti
cmp
loopne
lods
or
scas
icebp
pop
call
jge
in
out
jmp
scas
cli
test
pop
cmp
jge
adc
fstp
in
test
sub
xor
ja
add
mov
mov
(bad)
outs
in
mov
inc
(bad)
or
sbb
cs
test
lahf
test
mov
mov
aam
out
cdq
xchg
cdq
or
push
je
cli
sub
jmp
jne
jne
into
lahf
rcr
(bad)
iret
push
cmovnp
sub
sbb
push
dec
xchg
or
test
loop
jno
push
les
cmp
lock
xchg
mov
mov
sbb
lods
mov
jecxz
loop
inc
popa
push
out
test
scas
push
ds
cmps
test
fldpi
or
mov
jp
cmp
call
jb
fist
rol
cmc
mov
movups
push
cld
ficom
add
loop
jno
retf
shr
sub
mov
xchg
fld
shl
mov
(bad)
sahf
inc
mov
mov
xchg
shl
sar
outs
ins
cmp
adc
int3
adc
je
mov
xlat
jg
scas
xchg
inc
dec
(bad)
dec
js
lods
or
mov
frstor
xor
or
(bad)
pusha
aam
bound
jg
cmps
sar
imul
es
lods
popf
inc
xchg
xor
sbb
test
jmp
add
das
rcl
pop
cmp
add
push
mov
pusha
mov
pop
add
hlt
retf
jle
lods
xor
jmp
pushf
add
mov
sub
xor
pop
adc
loopne
ret
xchg
out
jb
push
push
add
jbe
push
test
push
mov
cmp
loop
jecxz
std
dec
sub
arpl
dec
and
push
add
xlat
pop
mov
inc
xor
mov
mov
jge
add
popa
jge
ins
div
and
out
cmp
mov
pop
pop
cmp
mov
call
xor
mov
mov
iret
mov
pop
dec
dec
sub
mov
xor
or
(bad)
jno
enter
inc
fadd
lods
stos
fistp
cmp
lods
lock
sub
in
xchg
xor
les
inc
cdq
jecxz
sbb
add
and
and
xor
int3
sub
out
inc
xor
inc
js
cmp
jnp
fdivr
fsubrp
mov
cmp
and
mov
je
bound
xlat
dec
cdq
ins
ins
es
cmps
in
loope
mov
jg
(bad)
fiadd
xchg
(bad)
mov
cmp
or
(bad)
xlat
test
mov
shl
cli
and
adc
popa
cmp
fld
mov
adc
(bad)
outs
cmps
in
fdivrp
lds
push
mov
mov
mov
push
add
jno
jp
cld
(bad)
mov
fs
pop
loopne
push
or
(bad)
jnp
cmp
mov
iret
scas
shl
js
mov
fwait
and
retf
shl
je
pusha
xchg
adc
fs
mov
sbb
or
lods
mov
jmp
push
adc
(bad)
mov
clc
div
mov
mov
cmp
fmul
add
data16
call
dec
(bad)
dec
mov
push
push
mov
jo
dec
shr
sti
cwde
dec
jl
fstp
inc
icebp
test
sbb
mov
test
and
ins
adc
fs
test
mov
push
hlt
lods
fdiv
loop
enter
xchg
xor
push
(bad)
xchg
sbb
cmp
loop
sbb
cmps
jl
xor
sub
or
popf
(bad)
mov
in
inc
(bad)
cmp
ins
push
pop
xlat
loop
pop
xchg
push
aaa
push
jns
mov
mov
push
jns
lods
(bad)
sub
xchg
(bad)
(bad)
jae
and
mov
daa
xor
mov
or
add
jmp
sbb
pop
adc
fcmovnu
out
out
ds
fist
(bad)
mov
test
jg
push
shr
mov
xchg
mov
dec
(bad)
mov
add
adc
cmp
fld
scas
mov
shl
jno
add
sbb
sbb
repnz
jo
push
fld
push
pop
add
sbb
test
or
gs
test
dec
jae
fimul
push
fsubrp
stos
fdivr
fs
cmp
int3
xor
(bad)
fwait
sub
mov
pop
mov
icebp
sub
shl
push
jae
sub
mov
xchg
xchg
retf
cmp
in
adc
repz
mov
lea
out
push
pop
mov
(bad)
sbb
push
and
xchg
scas
call
sbb
sti
inc
add
inc
(bad)
cmps
add
push
pop
push
or
mov
add
push
(bad)
dec
xchg
loope
or
adc
mov
adc
call
sub
sub
pop
mov
int3
mov
or
call
mov
mov
add
xor
cwde
mov
pop
add
into
popa
js
outs
in
mov
(bad)
(bad)
pop
(bad)
jl
inc
cmps
lock
pusha
adc
imul
(bad)
mov
(bad)
xchg
addr16
sub
clc
test
popa
xor
sub
rep
addr16
adc
(bad)
aaa
sub
aaa
and
retf
fimul
scas
movntps
loop
stos
test
adc
and
sbb
jmp
dec
icebp
in
cs
pop
inc
ret
pop
and
std
xlat
test
pop
add
xchg
and
push
les
iret
cdq
mov
add
cmc
(bad)
xlat
into
mov
outs
add
ret
xor
cmp
adc
inc
dec
ret
pop
in
add
in
or
mov
xchg
sar
cmp
jno
test
repnz
jge
aam
adc
jnp
push
sub
inc
jge
jecxz
and
and
jne
mov
popa
nop
into
xor
movs
pop
loopne
cmps
fsubr
scas
xor
in
jp
push
cld
adc
mov
fisttp
mov
push
fsub
inc
call
mov
pop
sbb
enter
movs
mov
repz
xor
aad
sub
jae
mov
or
fsub
movs
out
inc
push
test
inc
xor
lods
sub
xor
movs
dec
mov
mov
loop
imul
mov
pop
(bad)
fisttp
mov
movs
or
and
enter
inc
mov
sbb
popa
jmp
retf
stos
test
push
pop
mov
pop
push
jge
ja
mov
push
popa
dec
jo
mov
cld
mov
push
gs
mov
sbb
push
ss
repnz
(bad)
or
xor
push
and
sar
(bad)
les
test
jmp
add
fisttp
ins
movs
(bad)
mov
push
pop
inc
cdq
xor
in
div
out
rol
in
lds
aam
jg
sti
fucomip
pop
or
pop
fnsave
pop
jg
pop
jne
fcomp
pop
push
cdq
or
cmps
xor
xchg
push
pop
and
xchg
aaa
rcr
pop
fldenv
and
inc
dec
lahf
dec
dec
and
enter
jne
fwait
pop
aam
adc
imul
jmp
popf
repz
rcr
inc
add
mov
xor
mov
push
sbb
push
retf
ret
aaa
cmps
mov
dec
inc
inc
outs
adc
sbb
test
(bad)
xor
(bad)
ins
cmp
push
div
int
pop
jle
push
call
mov
xor
movs
mov
adc
push
dec
mov
js
scas
jns
mov
les
mov
push
rol
popa
cmp
fucomip
xor
dec
jl
dec
jmp
cmp
inc
mov
dec
add
popf
ss
jbe
sub
mov
ins
jge
inc
daa
vmptrst
aas
pop
adc
loopne
pop
push
mov
mov
aas
out
push
js
inc
or
mov
mov
add
loopne
mov
mov
xor
inc
mov
loop
dec
dec
cdq
jecxz
sub
xchg
(bad)
mov
rol
lea
(bad)
mov
out
test
mov
loope
(bad)
xor
int
cdq
imul
xchg
push
xchg
push
jnp
call
cwde
jmp
loop
aaa
add
movs
bndstx
aad
ins
repnz
fcom
les
packssdw
sbb
scas
imul
push
fbld
jg
dec
lods
aas
mov
adc
adc
mov
les
das
sub
jae
loopne
scas
shr
push
ss
pop
or
pop
in
inc
int
aam
or
jmp
cmp
ins
inc
jmp
mov
stos
jo
push
loop
push
retf
jge
jne
stc
or
cld
mov
pop
cmps
mov
cmp
xor
push
pop
inc
cld
stos
add
dec
jmp
dec
(bad)
shl
dec
retf
or
inc
das
js
xor
aam
ins
mov
ss
jg
pushf
push
mov
add
adc
inc
retf
iret
inc
stos
sub
inc
push
or
pop
lock
mov
(bad)
push
inc
xchg
sar
scas
(bad)
in
popf
inc
mov
xchg
sbb
fiadd
clc
(bad)
retf
mov
div
retf
add
xchg
rcr
xchg
lss
in
mov
lods
cmps
xor
or
jns
popa
(bad)
sub
cwde
ficomp
sub
out
lahf
loopne
jae
(bad)
sub
sbb
data16
sar
test
xor
mov
cmp
leave
pop
inc
jno
inc
cmp
cmp
jg
xchg
pop
inc
jl
(bad)
in
jp
mov
sub
pop
les
es
test
xchg
in
add
dec
es
je
and
adc
push
push
add
adc
push
shr
sub
aad
and
xor
jb
mov
cmc
mov
mov
push
fstp
stc
mov
nop
bound
adc
inc
sub
scas
fdivr
aam
jp
not
clc
lods
push
xlat
sbb
mov
push
add
mov
in
sub
shl
shl
sub
jg
cmp
add
call
pop
lds
jle
inc
rol
cmp
sti
jecxz
in
(bad)
inc
adc
test
or
pop
call
pop
jge
rol
push
leave
mov
imul
mov
mov
jnp
mov
push
mov
test
sub
xor
add
aas
sub
test
adc
cwde
shl
idiv
lods
or
and
xchg
repnz
es
push
lahf
xchg
cmc
shl
cdq
in
or
aad
jge
gs
fwait
mov
push
sbb
daa
js
cmp
test
cmps
or
jg
inc
into
and
outs
int
ret
mov
push
push
adc
or
mov
nop
imul
movs
inc
movs
test
sbb
daa
and
cmp
adc
cld
call
mov
mov
xchg
jns
push
retf
adc
clc
adc
js
jl
sub
jge
daa
pop
jo
mov
imul
xchg
jno
stc
shr
xor
mov
push
cmps
dec
popf
loop
jae
aas
adc
sysenter
(bad)
cs
xchg
mov
into
inc
popa
lgs
movs
lahf
in
(bad)
(bad)
std
add
xor
scas
mov
sub
mov
fdiv
dec
jns
jecxz
into
ins
jno
out
pushf
dec
mov
and
ret
add
or
jl
xchg
fsubr
cmp
mov
fcomp
adc
push
imul
xchg
movs
movs
movs
js
xchg
xor
sar
mov
into
pop
jge
mov
lods
mov
push
ins
je
imul
mov
leave
push
dec
les
sbb
fcmovnb
(bad)
icebp
cdq
imul
jl
mov
shl
out
retf
sahf
add
dec
push
mov
jg
idiv
hlt
cmp
pop
shl
dec
push
lods
or
test
push
gs
sbb
ja
lods
iret
retf
xchg
push
call
call
std
pop
(bad)
add
jne
or
sbb
test
and
or
std
mov
call
div
sub
cmp
mov
sbb
in
jo
push
in
and
iret
hlt
(bad)
addr16
loope
push
out
sbb
jnp
gs
loop
sbb
jg
pop
dec
test
imul
xchg
fs
pop
test
fisttp
or
ret
jecxz
push
cmp
lock
or
xchg
test
mov
inc
(bad)
mov
in
adc
icebp
call
arpl
cmp
cwde
test
push
sub
inc
xchg
loopne
or
aam
mov
pop
push
shl
cwde
pop
sbb
cmp
pop
scas
jno
jmp
out
xchg
shl
xor
shr
loopne
test
movs
and
fisttp
jmp
xlat
movs
pushf
fs
mov
bnd
enter
jmp
cmps
or
dec
dec
jmp
push
frstor
jo
sahf
mov
or
jne
aas
xchg
test
enter
push
loop
sar
adc
lea
add
sub
(bad)
push
clc
push
or
rcr
inc
cmp
or
xor
inc
sbb
mov
push
lods
rsqrtps
es
or
scas
sbb
loopne
inc
jecxz
aas
fs
and
(bad)
pop
sub
xor
xchg
mov
jnp
jl
cmp
xchg
inc
(bad)
adc
fadd
sub
inc
loop
scas
call
push
lock
jnp
stos
cmp
in
stc
nop
jle
scas
pop
fisubr
and
les
pop
repz
mov
mov
add
xor
cmps
(bad)
pop
fmul
test
test
push
push
jmp
shr
pop
sbb
or
(bad)
lds
add
xor
out
(bad)
sahf
push
mov
int3
fwait
add
pop
out
clc
movs
sti
in
in
pop
cli
xor
pushf
aam
je
pusha
aam
bound
add
push
sub
adc
mov
cmp
int3
retf
cmps
mov
xchg
or
outs
and
ror
add
mov
mov
push
and
adc
aas
call
(bad)
pushf
sub
add
nop
and
push
leave
aaa
ja
popa
mov
pop
sbb
stc
ins
adc
into
ror
loopne
cmc
pop
cli
sub
pop
xchg
add
push
lock
xor
ins
aaa
and
cdq
add
cmp
test
add
sbb
shr
jne
leave
jmp
lock
xchg
int
push
lods
push
sbb
mov
mov
mov
popa
xchg
ds
pop
sub
push
gs
jb
repz
inc
add
stos
mov
dec
sub
inc
push
pusha
inc
push
nop
pop
push
lock
shr
or
rol
icebp
jecxz
dec
or
sbb
jo
mov
sub
mov
fiadd
mov
hlt
push
cmc
mov
aaa
repz
ficomp
dec
movs
dec
aas
retf
lahf
xchg
xchg
in
dec
cmp
add
xchg
int
mov
jno
cmp
fwait
shr
mov
dec
outs
mov
movs
scas
cli
push
jmp
sbb
sub
out
push
aas
addr16
in
adc
shr
jno
pusha
int
xchg
bound
daa
stos
push
inc
dec
leave
or
test
dec
mov
(bad)
data16
(bad)
mov
pop
cdq
(bad)
pop
and
push
sub
call
gs
fadd
test
(bad)
xchg
lods
test
fsubr
pop
call
adc
je
lds
mov
scas
jne
aas
sub
mov
or
popa
push
leave
shr
cmps
adc
mov
inc
xchg
and
inc
dec
sar
cmp
scas
adc
jae
addr16
jne
cli
mov
push
repnz
addr16
in
stos
popaw
daa
movs
fimul
sub
les
and
jle
loop
jl
adc
cmp
cwde
push
jo
sti
sbb
sbb
fisub
jo
lods
inc
dec
cmps
mov
in
jmp
test
jno
adc
jge
icebp
ret
adc
pop
mov
je
fld
test
popa
adc
leave
aam
std
mov
repnz
gs
mov
cmp
popf
xchg
pusha
mov
or
mov
cmc
mov
pandn
arpl
or
iret
xchg
fsetpm(287
or
add
add
pop
ja
sub
and
dec
pop
or
jno
jbe
repz
sbb
rol
dec
adc
mov
aaa
adc
push
pop
adc
mov
mov
and
mov
xchg
nop
jb
mov
retf
sub
pop
mov
jns
call
mov
ins
pop
scas
(bad)
das
jo
jge
daa
cs
pushf
sub
cdq
(bad)
adc
jb
and
jge
loope
test
pop
pop
jns
mov
or
jle
or
(bad)
dec
(bad)
push
int
iret
aam
ret
push
in
mov
and
imul
imul
mov
(bad)
fidiv
or
fscale
add
dec
xchg
retf
pusha
sub
push
sbb
inc
fs
dec
xchg
ss
fnsave
xchg
repz
leave
add
pop
dec
retf
cmp
cmp
or
mov
push
rcl
push
dec
and
jae
out
push
cmp
sbb
fs
test
xchg
repz
cmp
test
mov
out
xor
pop
inc
xor
sbb
adc
cmp
pop
push
or
es
in
out
push
aad
clc
clc
push
dec
adc
fcmovne
mov
pop
or
or
and
retf
aam
in
(bad)
cld
pop
xchg
push
cmp
rcr
out
int
dec
sti
outs
dec
inc
pusha
jbe
push
inc
rol
mov
xlat
push
mov
and
in
cmp
retf
adc
or
ja
out
cmp
popf
push
dec
mov
leave
mov
popa
scas
pushf
out
xor
inc
repz
std
out
outs
dec
call
dec
push
pop
in
stos
jmp
mov
inc
xchg
out
pop
inc
imul
sti
dec
aam
mov
scas
daa
cmp
sbb
jmp
(bad)
fild
imul
xchg
inc
stc
sub
call
retf
mov
aad
lea
cwde
movs
fst
test
cmps
and
enter
jmp
test
xchg
xor
mov
pop
xchg
jl
aam
ss
pop
out
test
mov
lods
outs
pop
mov
(bad)
ret
xor
fwait
jle
xchg
outs
mov
shr
dec
pop
in
movs
push
std
xlat
ficomp
mov
jle
xor
ja
mov
add
and
mov
sub
add
stos
jmp
mov
mov
mov
and
mov
jmp
sbb
test
je
mov
arpl
or
cmp
int3
sti
sub
fnstcw
fucom
hlt
xor
push
(bad)
mov
jp
mov
sub
sbb
xchg
xor
push
mov
lea
les
sahf
xor
in
dec
aas
outs
add
shr
(bad)
je
dec
xor
ror
inc
test
pop
(bad)
cmps
mov
sbb
lods
imul
sbb
shl
jp
std
mov
stc
sbb
pop
pop
icebp
ss
cmc
push
fs
jne
rcr
push
jmp
fisub
xor
mov
sbb
loopne
add
rcl
bound
je
in
push
je
inc
cmp
xor
aaa
or
push
ss
push
movs
jmp
aad
mov
mov
cwde
cdq
mov
mov
sti
fild
dec
nop
jg
inc
adc
out
push
xor
mov
fucomi
into
cmc
(bad)
or
mov
push
xchg
cmp
mov
fst
(bad)
sub
jae
xor
dec
xor
push
mov
sub
dec
mov
jnp
pop
adc
xor
lea
js
mov
or
aad
nop
mov
cmp
stos
pusha
test
lods
and
mov
add
das
ret
and
test
rol
mov
test
es
scas
inc
jmp
daa
cld
xchg
(bad)
inc
shl
adc
sbb
push
xchg
rcr
(bad)
mov
inc
and
push
fiadd
scas
inc
inc
sub
mov
push
dec
jmp
adc
jbe
lds
test
imul
or
mov
mov
jnp
gs
popf
push
(bad)
std
outs
cli
mov
xchg
xor
leave
sub
sbb
shl
retf
cmp
mov
push
fldcw
xor
jl
ds
add
and
and
pop
idiv
mov
fcmovnb
pop
sbb
mov
pop
rcl
loope
or
int3
xor
and
mov
mov
sbb
ja
cmp
mov
mov
jb
pusha
leave
and
sahf
pusha
ja
inc
mov
les
(bad)
int3
leave
ins
test
stos
inc
cmp
xchg
outs
cmc
adc
sbb
push
mov
imul
pop
xchg
xchg
mov
cmps
and
xor
test
cwde
push
mov
add
pop
std
fstp
movs
mov
xchg
xor
daa
mov
adc
cmp
ins
mov
test
push
(bad)
jge
cmp
(bad)
jg
mov
fs
jle
in
add
lods
mov
or
push
daa
cmp
push
pushf
js
sub
and
loope
or
cld
out
scas
daa
push
rcl
xchg
(bad)
jmp
mov
popa
jge
cli
fstp
cmp
and
mov
sub
pop
outs
push
ds
mov
out
mov
sbb
inc
enter
cdq
jo
into
clc
push
dec
jmp
xor
mov
push
imul
mov
dec
mov
xchg
pushf
xchg
mov
call
jae
push
jne
loop
mov
adc
add
inc
mov
xor
icebp
add
dec
stos
pcmpeqb
xor
jno
fldenv
mov
out
add
stos
xchg
add
inc
jp
pop
add
outs
call
push
mov
mov
push
inc
js
jae
dec
lds
test
stos
xor
dec
lea
out
and
rcl
(bad)
(bad)
je
mov
pop
aas
inc
shl
xchg
jmp
loopne
arpl
sub
dec
dec
pop
movs
cs
pop
inc
scas
shl
inc
push
push
imul
pop
jecxz
ins
sbb
fsub
das
mov
dec
pop
push
adc
stc
xor
jmp
push
das
outs
add
pusha
mov
cli
not
or
(bad)
fsubrp
out
xor
xchg
je
jnp
dec
mov
lea
add
xchg
clc
movq
xchg
cs
adc
add
and
test
test
mov
mov
fnsave
fld
dec
cmp
jmp
push
push
out
frstor
inc
pop
jnp
ret
pop
sbb
retf
popa
cmp
sbb
jne
test
dec
mov
jbe
xchg
stc
test
and
iret
in
lahf
pop
fs
cmc
inc
imul
call
mov
mov
add
scas
add
and
sbb
mov
add
loope
repz
mov
(bad)
jecxz
jl
lahf
(bad)
dec
ficom
pop
js
jnp
jmp
ret
adc
cdq
mov
iret
fmul
(bad)
dec
pop
and
outs
adc
aad
inc
repnz
sbb
dec
ds
shl
enter
sbb
sbb
lods
xor
pop
pop
repz
hlt
mov
add
mov
ret
cmps
mov
pop
mov
and
test
vandnpd
pop
add
daa
xchg
fwait
or
movs
loop
jmp
adc
xchg
adc
movs
adc
xor
sbb
loop
sub
inc
xchg
inc
fsubr
and
lahf
out
out
mov
dec
loope
ds
jnp
fistp
(bad)
mov
lods
mov
mov
mov
pop
pop
data16
aad
inc
add
push
inc
sar
retf
pushw
scas
fistp
mov
jp
cmp
add
or
(bad)
adc
daa
jle
xor
mul
jge
shl
in
sbb
mov
xchg
jge
cmp
xchg
cmp
(bad)
retf
push
xchg
add
shl
test
xchg
sub
inc
jp
add
mov
pop
in
lea
int
pop
inc
cdq
mov
cmp
int3
jne
sub
lahf
loope
xchg
repz
fdivp
sti
sbb
test
push
pushf
sbb
ins
icebp
push
cmp
sbb
add
fimul
and
mov
js
jns
mov
push
push
out
xchg
aas
dec
dec
shl
ja
push
aaa
inc
dec
xchg
std
es
push
stc
sahf
pop
mov
jae
repnz
daa
test
test
push
out
xchg
and
in
jg
out
mov
stos
retf
inc
inc
stc
cmp
repnz
inc
loop
add
shl
cmp
div
sub
(bad)
bnd
retf
or
out
outs
call
cmp
xchg
sub
jb
sbb
adc
inc
movs
ins
xchg
sahf
mov
ds
(bad)
out
sub
inc
ficom
push
aaa
loope
mov
inc
outs
aas
shl
dec
loope
dec
add
int
aad
adc
mov
jg
and
scas
leave
push
xchg
xor
jmp
call
xchg
scas
das
cmovbe
or
nop
push
or
aad
jmp
shl
xor
jg
fstp
pop
cmp
loopne
enter
mov
fisub
pop
sahf
mov
cli
in
pop
(bad)
outs
ds
jnp
lods
cwde
stos
jae
or
test
mov
sbb
push
inc
xchg
cmp
xchg
xor
pop
mov
in
int3
lock
mov
cdq
call
inc
pop
or
adc
jae
xor
stos
inc
enter
pop
mov
push
dec
cs
add
dec
je
pop
out
ins
and
jl
jmp
icebp
int3
and
cs
sbb
(bad)
jg
cdq
mov
pop
mov
cmp
add
jmp
(bad)
mul
lods
ins
mov
pop
cwde
jmp
pop
dec
pop
pcmpeqw
xor
xchg
ss
push
dec
shl
mov
push
outs
ret
not
push
popa
push
dec
test
rcl
and
test
mov
sbb
or
mov
shl
outs
inc
adc
int
imul
es
arpl
call
cdq
sbb
jmp
mov
push
dec
adc
mov
jne
push
mov
xchg
jmp
adc
out
inc
mov
jmp
mov
fcomp
sub
test
cmp
dec
cmps
pop
(bad)
cmc
mov
nop
xor
pop
shl
sbb
out
iret
cmps
dec
out
shl
xor
sti
out
out
gs
mov
jns
adc
fistp
jb
mov
fdivr
int
outs
push
adc
in
cwde
xchg
data16
rcl
sub
pop
adc
xor
inc
dec
leave
mov
popa
jle
(bad)
and
cmp
movs
inc
mov
cld
nop
jbe
inc
icebp
adc
or
movs
cld
inc
(bad)
in
pop
sbb
mov
push
(bad)
loop
std
mov
div
lahf
fdiv
fimul
fisub
cmp
push
or
mov
fwait
xchg
mov
push
les
(bad)
fwait
or
sub
fwait
mov
popa
mov
push
sbb
mov
(bad)
fidivr
add
retf
or
retf
icebp
icebp
ins
mov
cdq
loope
mov
call
xor
xor
xchg
dec
sbb
cdq
and
push
jno
ret
jle
cld
sub
mov
adc
lods
ret
dec
or
clc
aaa
ret
xchg
clc
lods
xchg
inc
aaa
fsub
pop
dec
mov
ins
push
xchg
adc
jb
das
inc
in
mov
arpl
xchg
(bad)
push
frstor
ss
push
xor
aaa
mov
push
push
out
dec
adc
lahf
arpl
inc
and
bound
inc
jns
xchg
fsub
pop
mov
out
inc
inc
push
pop
xchg
mov
mov
mov
mov
push
jl
push
in
pop
outs
and
daa
jb
dec
std
aaa
fisubr
sbb
rcl
fbld
fsub
sub
fs
aaa
call
retf
js
push
cmc
xchg
out
fild
add
pop
fst
pop
aaa
fld
dec
xor
leave
in
std
mov
sahf
sbb
sub
pop
mov
punpckldq
xchg
inc
sahf
jmp
mov
mov
mov
mul
xchg
and
mov
push
fwait
ret
ds
cmc
sbb
push
dec
or
push
stc
loop
out
inc
pop
fcmove
push
or
iret
(bad)
test
sub
mov
xlat
cli
xlat
stos
fcom
mov
icebp
stc
jb
test
cmps
mov
cmps
in
movs
and
call
or
ror
sahf
cmps
movs
or
xchg
mov
or
call
scas
jmp
sbb
fadd
repz
xchg
fs
mov
jp
cmp
sbb
xchg
mov
dec
inc
call
fwait
jmp
pop
out
and
cmps
jecxz
dec
into
or
jns
sbb
call
and
lods
(bad)
mov
ret
sbb
push
retf
pop
rol
add
aas
and
pushf
jle
std
push
sbb
stos
js
mov
lods
sar
adc
cmc
mov
adc
out
out
xor
ret
lea
sub
and
adc
ins
adc
popf
enter
dec
aam
push
mov
xor
fist
xor
sub
div
mov
xor
sub
imul
stos
sub
push
push
lods
add
sub
lods
jnp
in
mov
enter
lds
(bad)
push
enter
shr
cmp
inc
mov
fwait
and
ds
out
add
dec
or
loop
mov
mov
jge
mov
sar
mov
add
pop
pop
popf
jne
xor
rol
adc
pop
and
into
jo
or
imul
outs
mov
sub
dec
dec
call
mov
jmp
and
imul
daa
movs
dec
nop
push
and
retf
daa
hlt
lahf
pop
pop
jo
call
jg
pop
cmp
(bad)
and
lock
pop
jg
adc
sub
retf
mov
loop
test
ins
pop
sub
push
dec
xor
sbb
fadd
add
out
adc
mov
cs
sbb
icebp
ja
mov
push
int3
jae
jae
pop
adc
aad
jle
mov
iret
pop
not
dec
lock
pop
imul
inc
or
adc
lea
add
inc
mov
push
shld
inc
mov
cdq
sar
or
ins
and
test
jne
rcr
cmp
xchg
mov
data16
popa
retf
scas
out
cmps
add
jnp
push
iret
and
and
outs
xor
adc
movs
iret
and
mov
dec
call
jge
int3
sbb
outs
int3
es
jnp
mov
cmps
jo
dec
call
mov
pop
mov
mov
mov
push
jmp
pop
test
les
jns
mov
sbb
jns
aaa
cmc
jge
jge
sahf
xor
adc
cmp
rcr
mov
sahf
mov
cmp
lock
push
in
and
mov
push
xor
pop
call
inc
xor
inc
adc
add
iret
push
jo
fwait
adc
daa
or
lods
xor
cmps
cmp
gs
in
jp
mov
cmp
xor
ja
cmp
pop
frstor
mov
lds
cs
dec
leave
dec
pop
jl
inc
data16
pop
ds
push
lods
mov
add
fidivr
out
(bad)
mov
jae
ja
aaa
xchg
not
ja
mov
lahf
jle
dec
(bad)
in
inc
jb
mov
add
call
retf
add
push
adc
icebp
push
pushf
add
std
or
sub
inc
sbb
out
call
mov
repnz
fdiv
fdivr
daa
inc
sub
fidiv
daa
test
je
pop
fwait
(bad)
pop
fcomp
clc
xchg
jnp
mov
jmp
mov
sub
push
nop
inc
lods
mov
xchg
gs
xchg
xchg
in
mov
dec
call
and
out
fild
shr
out
cmc
pop
fstp
pop
into
test
call
adc
push
or
dec
cbw
test
push
sbb
mov
mov
fs
xlat
out
mov
jnp
les
mov
push
xor
jnp
std
pop
in
test
retf
ror
(bad)
jle
push
cmp
cmp
pushf
rcr
cmp
pop
imul
mov
repz
stc
push
push
cld
stc
test
dec
sbb
mov
cmp
xchg
xchg
push
cmp
mov
(bad)
fstp
leave
mov
jb
data16
das
std
movs
and
arpl
adc
call
dec
push
mov
fst
adc
adc
std
sbb
inc
cmc
(bad)
pop
mov
pop
arpl
das
mov
jge
push
or
lock
add
inc
pop
icebp
mov
mov
or
mov
cmp
retf
jg
in
call
sub
pop
lds
xor
ret
or
mov
in
jmp
mov
leave
cmps
sbb
movs
test
cdq
leave
inc
cmp
inc
popa
pushf
retf
push
test
aaa
test
rol
mov
ins
mov
dec
(bad)
sahf
add
or
sbb
push
adc
xor
ret
lfs
and
pop
adc
pop
push
call
fisttp
mov
inc
ss
mov
jo
aaa
xchg
int3
xchg
leave
inc
dec
shr
jo
call
pop
dec
xchg
adc
jb
push
mov
cmp
call
aaa
pop
add
xchg
sbb
test
repz
push
fcomi
cmp
jmp
mov
inc
fimul
arpl
(bad)
mov
pop
pop
(bad)
mov
in
push
mov
pop
dec
inc
ja
int
gs
jl
fld
xchg
pop
pop
push
sbb
fimul
fdivr
xor
or
pop
sub
fnstenv
mov
mov
iret
xchg
add
push
dec
lahf
enter
dec
add
mov
mov
cmp
mov
jmp
sbb
test
sbb
dec
stc
das
nop
jne
int3
test
jbe
fld
sub
es
xchg
jle
xchg
pop
ficom
push
retf
lods
shl
inc
or
push
pusha
cmc
scas
ds
pusha
dec
retf
into
sahf
mov
xor
mov
pslld
xchg
xchg
fidiv
pushf
wbinvd
push
std
mov
adc
fsubr
fucom
cli
cmp
xlat
cs
fdivp
xchg
aas
push
mov
out
push
in
retf
sbb
std
mov
xchg
fsub
retf
imul
mov
xchg
fsubr
pushf
movs
pusha
popa
jnp
stos
add
mov
aam
out
in
xor
jmp
adc
adc
leave
xchg
sub
xchg
js
or
es
sub
je
sbb
cmp
dec
imul
xor
mov
inc
cli
imul
jmp
adc
xor
ret
pop
bswap
jle
sti
scas
aam
mov
ret
stos
and
sbb
call
pop
cmc
movs
out
popf
sub
push
movs
mov
dec
push
adc
test
mov
lahf
(bad)
rcl
sbb
in
popa
pop
rcr
outs
lods
cdq
jle
test
cmp
lds
cli
ffree
aam
jmp
loop
fld
sahf
jg
adc
ret
in
dec
lahf
xchg
imul
xor
in
ins
cmp
shr
sbb
mov
push
push
jmp
sbb
mov
(bad)
xchg
imul
push
icebp
adc
fmul
jae
mov
and
add
push
inc
cmps
dec
call
push
jnp
add
xor
add
and
adc
lds
push
or
push
xor
arpl
or
mov
xor
test
pop
xor
mov
in
jnp
xchg
cmp
dec
in
lea
int
repnz
inc
rcl
addr16
mov
xchg
int3
call
in
pop
sbb
test
fld
and
adc
jb
rol
outs
jne
or
sti
lea
adc
xor
lea
loop
loop
pop
cmc
lods
push
cmp
push
out
pop
or
cmp
or
jecxz
cmp
mov
shr
adc
scas
not
lock
out
test
and
sub
(bad)
dec
sti
fcom
(bad)
repz
cs
ret
aas
jne
shl
mov
cld
cwde
scas
push
xor
push
mov
xchg
dec
ds
arpl
(bad)
or
call
jns
pop
mul
pop
(bad)
mov
pop
es
popf
in
add
je
shl
pushf
mov
pop
neg
bound
retf
cmp
inc
icebp
shr
fiadd
sub
jno
dec
es
sbb
cmp
lahf
jne
(bad)
in
fnstsw
xlat
fxch
jne
mov
enter
fst
push
xor
push
mov
data16
push
lock
lahf
xchg
jno
jle
scas
mov
imul
add
repz
fcom
adc
pop
add
mov
cld
sbb
dec
sub
mov
in
test
mov
sbb
fcom
sub
movs
ror
and
cmp
fst
mov
dec
les
sub
push
out
dec
push
jecxz
mov
call
or
mov
retf
sbb
jl
inc
or
pop
cmp
std
call
mov
das
pop
cmc
add
mov
leave
fstp
jns
xchg
xchg
jb
fstp
aam
push
ret
mov
push
ret
dec
aaa
lea
test
in
lock
add
sub
dec
repz
mov
es
inc
push
iret
pop
lds
test
sbb
rcr
mov
jmp
jecxz
add
shl
and
or
(bad)
cmp
stos
push
pop
mov
jmp
push
cmp
(bad)
xchg
test
sbb
stos
mov
aam
inc
pop
xor
into
repz
aam
pop
add
bound
fbld
sbb
xor
inc
add
idiv
adc
cwde
ret
bound
inc
jmp
(bad)
neg
inc
outs
test
pushf
rcl
push
shl
nop
inc
mov
addr16
in
mov
xchg
ss
(bad)
pop
or
cmp
and
fst
xchg
jne
mov
push
xor
dec
xlat
hlt
jmp
cld
ins
ds
or
iret
add
jo
mov
in
loopne
retf
pop
ins
sysenter
mov
mov
cmc
dec
in
ret
mov
popa
xor
xchg
neg
ficomp
ret
cmp
sub
loopne
add
int3
mov
pop
pop
add
sub
out
stos
mov
xlat
inc
out
add
retf
inc
call
repz
lock
mov
call
lds
test
iret
leave
and
jmp
push
inc
lahf
aas
fnstcw
(bad)
fdiv
rcr
into
pop
enter
hlt
and
mov
ins
jle
inc
mov
das
mov
xlat
jp
jecxz
xchg
xor
aad
jns
fs
nop
or
sub
enter
dec
and
adc
scas
in
push
sub
add
mov
aas
jg
pushf
aam
lea
sub
std
nop
and
xor
push
push
mov
pop
into
sbb
daa
adc
shl
test
push
or
pop
stos
stos
mov
mov
(bad)
rcl
nop
shl
pop
mov
cmp
mov
jno
inc
shl
outs
add
mov
js
les
dec
sub
and
clc
retf
sub
repnz
lea
(bad)
push
xor
ins
(bad)
push
out
push
sub
inc
scas
xchg
add
xor
and
push
scas
xchg
push
ins
mul
push
mov
jbe
das
xchg
call
fcomp
mov
data16
sbb
sbb
outs
pop
iret
lahf
and
pop
cmps
addr16
inc
test
test
jl
cmp
mov
into
icebp
jp
dec
(bad)
in
add
ss
or
mov
and
mov
dec
imul
js
or
and
cmp
xor
sbb
inc
sbb
int
inc
sub
das
or
clc
mov
cmc
push
loopne
jmp
in
stos
sbb
loope
(bad)
cli
sbb
pop
in
stos
push
mov
xlat
mov
sbb
and
mov
ins
bound
test
jae
push
inc
mov
inc
xchg
xchg
sbb
aaa
xchg
loopne
and
xor
scas
cdq
loopne
pop
rcr
mov
cmp
sbb
sbb
lods
mul
stc
hlt
xor
xor
jmp
call
pop
push
std
mov
out
outs
addr16
and
pop
inc
clc
mov
loopne
pop
dec
stos
rol
mov
call
pop
adc
xchg
mov
mov
cmp
loop
into
adc
fsubr
mov
sub
fiadd
lods
scas
xchg
pop
pop
jno
(bad)
jmp
push
in
sub
in
sbb
cmp
mov
cwde
std
pop
xchg
test
pop
jne
fldenv
mov
push
mov
mul
mov
push
sbb
dec
test
mov
or
adc
enter
xor
inc
and
call
nop
mov
dec
xor
das
mov
or
dec
mov
xor
in
(bad)
cld
into
js
(bad)
clc
or
repnz
cmp
cs
call
inc
movs
out
and
inc
mov
sbb
fidivr
jo
and
sub
cmp
pop
cmp
jmp
loope
mov
add
in
push
int3
mov
lahf
rcl
jl
dec
mov
in
das
cmp
mov
scas
test
jl
xchg
mov
shl
cdq
out
sbb
inc
fs
or
ror
aas
jno
lahf
pop
dec
adc
sahf
push
call
ds
hlt
cmps
jge
pop
and
jno
stc
add
and
rol
add
xor
pop
out
jge
movs
lods
les
retf
movs
sti
inc
iret
mov
ss
test
out
sub
or
in
pop
xchg
push
div
call
mov
sbb
or
inc
sub
pop
arpl
or
imul
repnz
pop
push
int3
sub
jecxz
test
jl
pushf
pop
pop
shl
dec
cld
mov
in
repnz
retf
or
rcr
cmp
pop
push
cmp
test
add
outs
pop
bound
in
jns
add
scas
aaa
test
sbb
aad
cmps
mov
iret
in
sbb
inc
xor
iret
jle
adc
mov
loopne
into
xlat
mov
adc
rcl
psrlq
xchg
inc
lods
loop
push
fldcw
rcl
fcom
sbb
adc
cmp
sub
inc
cmps
ja
imul
pop
cmp
adc
mov
xchg
mov
dec
jl
sub
jmp
test
pop
mov
(bad)
test
imul
call
sbb
jmp
out
mov
fisttp
outs
pop
lea
mov
lods
repnz
hlt
aam
add
jl
xchg
or
mov
jno
pusha
push
adc
dec
mov
dec
iret
and
dec
or
sbb
jno
aas
fdivr
ins
cs
mov
test
push
pusha
cmc
fnstcw
sbb
mov
ficomp
stc
mov
lods
and
cmp
jbe
psrlw
ins
lods
inc
rcl
js
(bad)
mov
inc
test
add
sub
inc
in
retf
adc
retf
test
jmp
scas
dec
int
add
adc
clc
xor
loope
pop
sbb
mov
lea
outs
stc
or
test
sub
int3
in
fisubr
push
mov
xlat
ja
fst
mov
cwde
call
mov
xchg
fnsave
in
mov
xchg
addr16
and
adc
add
sbb
jb
mov
std
jmp
mov
add
leave
out
and
pop
dec
inc
cs
mov
fs
out
hlt
hlt
inc
dec
into
fucomi
inc
xlat
sar
jb
adc
fist
mov
sub
stos
jae
pushf
call
(bad)
call
ss
pop
in
data16
sub
mov
(bad)
call
xchg
and
xor
lock
push
ror
mov
(bad)
push
aaa
jmp
jg
add
inc
fld
mov
out
pop
aaa
sub
inc
ins
sub
fwait
mov
rcl
pop
stos
loopne
xor
or
dec
mov
outs
and
mov
sbb
adc
jmp
jmp
mov
push
add
jns
loope
mov
retf
xor
icebp
aas
xor
dec
dec
stc
or
add
rol
xor
aam
(bad)
loopne
iret
loope
(bad)
pop
retf
aaa
or
inc
cmp
lds
imul
adc
mov
mov
inc
mov
and
aaa
jge
js
(bad)
outs
xchg
mov
daa
popa
jb
out
in
stos
push
in
jns
jae
adc
xor
nop
dec
inc
fcmovnb
sub
add
dec
bound
xor
frstor
dec
aas
mov
sbb
adc
push
xor
cmc
cld
jl
xor
and
mov
je
mov
inc
mov
aaa
out
sub
mov
scas
sti
sbb
retf
mov
scas
sub
fs
ror
cmp
xchg
outs
fdiv
cmc
pop
enter
test
jge
ins
add
ds
add
scas
(bad)
int3
shr
xchg
pop
iret
ins
mov
cdq
ins
jnp
(bad)
ss
jae
imul
sar
loopne
push
dec
lock
mov
mov
and
imul
inc
adc
aaa
sub
push
jle
lods
jle
sti
jp
jne
adc
fistp
loopne
dec
loopne
ds
fst
xor
in
pushf
out
jae
pop
push
pop
(bad)
mov
adc
mov
adc
idiv
(bad)
ds
repnz
xor
xor
jae
scas
cli
dec
mov
xlat
ss
and
xchg
dec
add
test
bound
shl
add
or
(bad)
push
outs
adc
mov
sub
push
push
gs
ja
pushf
cmp
js
sbb
pop
sub
xor
jbe
push
fs
inc
and
aas
add
and
cdq
pop
into
shl
and
lock
lds
jmp
dec
push
or
mov
cmps
call
in
or
test
scas
mov
mov
in
jmp
dec
push
int3
(bad)
loop
push
add
sbb
test
pop
mov
pop
outs
retf
mov
add
xor
jns
mov
or
sbb
repz
scas
pop
addr16
dec
mul
mov
adc
add
push
call
jle
sar
sbb
add
dec
adc
arpl
mov
or
jmp
aam
jg
add
test
js
int3
hlt
sbb
repnz
js
adc
push
sub
sub
push
mov
sbb
mov
add
mov
mov
icebp
add
sub
xor
jbe
pop
jg
mov
test
push
cli
call
jecxz
rcr
mov
jmp
ficom
push
sub
inc
adc
mov
loopne
out
mov
push
adc
jecxz
jle
jecxz
sbb
js
sbb
cmps
fist
imul
xchg
out
nop
xlat
sub
pop
pop
lock
xor
movs
push
daa
mov
lahf
sbb
adc
cli
lock
dec
and
(bad)
cmps
in
xor
(bad)
sbb
fs
mov
xchg
mov
mov
or
retf
retf
and
stc
add
jp
adc
es
mov
jg
dec
loope
loope
test
sub
and
inc
in
out
ds
clc
jecxz
sti
loope
xor
push
adc
pushf
lods
push
aas
jns
inc
and
movs
(bad)
push
fdiv
mov
rcl
inc
jge
dec
mov
icebp
aaa
ror
js
fcmovnu
pop
daa
nop
sti
outs
imul
adc
(bad)
in
sahf
pop
call
js
cmp
or
sbb
call
or
cmp
adc
in
sti
mov
jo
addr16
jl
xor
xchg
xchg
std
enter
aaa
sbb
xor
ds
mov
ret
aad
cmp
jae
pop
push
test
pop
stc
les
or
shl
movs
aam
fdivr
arpl
mov
mov
idiv
into
test
sub
leave
mov
push
sahf
test
inc
or
in
xor
imul
and
mov
pop
clc
xchg
cmps
and
adc
loop
ins
iret
sahf
xor
push
adc
xor
fs
in
sbb
test
mov
in
fldcw
arpl
pop
es
out
pop
jle
inc
push
dec
adc
mov
push
mov
mov
mov
outs
arpl
shl
mov
fdiv
jae
outs
and
retf
and
cli
xchg
call
ror
outs
pop
inc
lock
sbb
mov
add
es
add
fistp
jae
jnp
sub
cmp
lock
push
mov
lods
sub
mov
jbe
in
sub
inc
jb
adc
jg
mov
jg
or
mov
mov
dec
jae
inc
enter
sub
neg
arpl
add
mov
xchg
out
cli
lock
stos
nop
sbb
sbb
cmps
ins
inc
(bad)
sub
dec
fistp
(bad)
push
pushf
jne
imul
ret
cmps
mov
jae
es
arpl
out
imul
adc
xchg
or
adc
stos
daa
inc
adc
mov
cld
gs
idiv
test
ins
or
mov
push
repz
popf
mov
push
jnp
addr16
adc
push
sbb
jg
popa
add
retf
adc
inc
daa
xchg
sbb
jp
addr16
sub
xchg
push
rcr
icebp
popa
test
popf
dec
out
pop
(bad)
adc
pop
aas
push
ja
push
mov
mov
xor
jge
mov
lods
mov
iret
scas
call
out
lods
jns
fs
inc
cld
shl
push
std
retf
adc
fidivr
dec
adc
cmp
cdq
or
paddusb
cmp
test
aaa
out
xor
add
mov
stos
xor
push
and
stos
xchg
mov
cmp
loope
cmp
cmp
iret
adc
imul
hlt
add
xor
shl
aad
pop
je
repnz
xor
daa
pop
xchg
adc
aam
xor
pop
sti
les
pop
repz
retf
stos
jmp
push
mov
(bad)
fmul
jl
or
sar
xchg
mov
add
or
sub
loope
sbb
call
dec
sti
mov
dec
or
test
sbb
push
imul
xchg
mov
xor
push
bound
push
fnstsw
pop
xchg
sub
dec
(bad)
xchg
mov
imul
(bad)
gs
retf
xchg
not
aam
pop
lods
xor
jmp
xor
fisub
push
pop
xchg
int
mov
pop
inc
test
push
(bad)
inc
imul
jo
retf
pusha
jmp
jo
cli
sbb
fs
test
sbb
dec
jmp
out
(bad)
je
loop
jmp
call
sbb
jmp
fmul
mov
dec
jmp
fld
push
sub
ficom
pop
call
push
mov
or
sub
jb
push
xchg
mov
mov
ss
jge
stos
(bad)
mov
push
mov
sbb
jb
scas
add
mov
mov
pop
jge
jno
(bad)
scas
jno
jmp
stos
adc
in
inc
(bad)
and
inc
pop
mov
ja
retf
mov
add
dec
loopne
sub
jle
xor
jno
xchg
retf
mov
pusha
test
clc
xchg
add
ds
rcr
nop
add
jg
jmp
dec
mov
mov
mov
cmc
pop
ins
ret
lea
sub
dec
inc
cmc
int3
jmp
repz
daa
std
into
mov
enter
test
scas
js
stos
jo
je
sub
(bad)
jns
or
pop
xor
lock
sub
in
pop
adc
imul
stos
mov
jmp
dec
ins
sahf
std
dec
inc
fadd
mov
stos
cmp
je
push
(bad)
dec
or
xchg
xor
into
in
push
xor
bsr
cwde
and
jg
data16
add
push
movs
sub
ins
add
sar
dec
shl
mov
scas
rcr
inc
jbe
push
sub
sbb
cld
stos
jle
movs
fisub
idiv
cmps
cmps
push
scas
aad
push
xchg
in
ins
dec
push
stos
adc
je
out
ins
or
les
xor
and
ret
sbb
movs
sbb
aas
xchg
jo
mov
aaa
(bad)
fisubr
mov
push
pop
xor
xor
sbb
cmp
data16
adc
mov
add
iret
or
dec
shl
pop
sbb
jmp
ffreep
or
and
inc
or
mov
lock
gs
push
or
push
push
ror
call
or
adc
mov
jmp
int3
and
dec
lock
mov
xor
ds
jg
mov
in
pop
inc
shl
scas
dec
mov
nop
das
xor
faddp
movs
scas
pop
pop
adc
int
in
das
loopne
loop
adc
pop
call
stos
jmp
rcr
xor
sub
stos
mov
out
add
push
adc
xor
dec
addr16
add
hlt
test
push
cmps
and
test
stc
and
cdq
or
dec
xor
cmp
jl
fwait
and
retf
lahf
add
inc
jb
ret
daa
sar
push
pushf
loop
xchg
idiv
sbb
cwde
inc
das
rcl
data16
sti
jae
pop
das
mov
mov
pop
out
sbb
cmp
add
sbb
dec
aam
fld
inc
(bad)
movs
inc
std
xor
cld
stc
lahf
cmp
lods
and
dec
je
aam
sub
aad
aad
sbb
or
jmp
add
pop
in
imul
sub
or
les
imul
hlt
dec
jl
mov
adc
fwait
inc
sbb
in
das
(bad)
dec
out
sbb
xchg
mov
sbb
add
jne
mov
adc
cmp
mov
mov
adc
nop/reserved
cmp
sbb
mov
sbb
mov
mov
inc
fild
sar
mov
adc
hlt
or
jp
daa
sub
cmp
mov
adc
xor
xchg
fiadd
push
mov
fadd
pusha
cmc
push
loop
cmp
add
addr16
icebp
inc
mov
jp
test
jg
dec
jp
fsub
and
ds
mov
leave
in
cwde
mov
sti
int3
and
call
jmp
cmp
sti
sbb
enter
call
jne
icebp
sbb
mov
aam
jnp
sub
aad
pop
cmp
mov
jmp
inc
push
mov
cs
sbb
xlat
mov
arpl
dec
or
push
pop
cmc
sar
push
sbb
cmp
or
xchg
mov
xor
cli
cmp
xor
jne
scas
and
test
daa
pop
test
repz
mov
imul
adc
xchg
call
or
mov
dec
scas
fimul
es
xchg
lahf
mov
push
arpl
stc
mov
mov
jbe
loopne
lea
je
mov
adc
addr16
imul
ins
inc
add
pop
and
add
or
or
xor
(bad)
xchg
sub
scas
ins
push
or
shl
dec
cmps
xor
dec
xchg
mov
add
jmp
add
pop
pop
pop
jne
mov
and
lock
(bad)
mov
xchg
mov
jne
call
mov
call
xchg
jmp
pop
inc
mov
sub
xchg
inc
jecxz
pop
and
outs
xchg
es
clc
arpl
test
push
rol
inc
sub
cld
cmp
into
inc
xchg
pop
add
inc
jmp
mov
or
in
loopne
setg
aam
push
mov
pop
bound
test
(bad)
jmp
cld
inc
das
(bad)
and
sbb
sub
loop
cmps
retf
xor
dec
ins
jnp
pop
jns
cmp
ret
and
daa
jns
inc
sub
leave
dec
loope
retf
mov
inc
inc
mov
xlat
and
ret
shl
lods
cmps
cs
mov
gs
push
daa
pop
imul
(bad)
mov
lods
jle
dec
dec
movs
push
lods
push
ret
sbb
aam
xchg
addr16
stos
and
adc
cmps
mov
jno
imul
jmp
jp
and
out
ds
dec
fdivr
xchg
jmp
sub
xchg
mov
add
xchg
ins
mov
adc
jb
mov
pushf
cmp
dec
out
adc
test
(bad)
mov
mov
or
cld
jl
fdiv
call
add
xchg
or
or
(bad)
sub
jge
fidivr
sub
add
dec
sbb
cmp
ficom
add
cmp
out
jns
rcr
mov
adc
sbb
dec
stos
stc
cmp
ficom
fiadd
ret
addr16
mov
je
jne
push
pop
pop
in
sti
popa
xchg
push
push
and
dec
xor
je
repz
inc
pop
lahf
jo
outs
and
adc
and
and
xor
arpl
push
outs
and
mov
jmp
pop
push
cs
popf
adc
clc
imul
(bad)
iret
loop
shl
mov
clc
cmp
clc
adc
aas
mov
inc
xor
push
xor
xlat
inc
sub
sub
inc
in
movs
or
fst
inc
nop
pusha
(bad)
out
dec
enter
cmp
cwde
ja
ja
mov
inc
push
xor
rcr
retf
add
(bad)
hlt
dec
ja
sbb
imul
adc
or
adc
ja
sbb
shl
mov
pop
sub
neg
mov
shl
push
ins
out
sti
outs
jae
int
push
inc
push
lea
out
pop
daa
jb
outs
mov
mov
lahf
aaa
xor
inc
stos
or
adc
mov
mov
mov
inc
pop
(bad)
adc
xlat
lods
in
xor
in
hlt
mov
dec
dec
lea
dec
ror
mov
daa
jne
jecxz
xor
imul
aaa
lahf
add
cmc
(bad)
out
inc
cwde
les
(bad)
xor
jne
jbe
mov
cmp
aas
lods
(bad)
xor
adc
jecxz
loope
or
fcom
adc
bound
(bad)
mov
or
pop
int3
out
call
mov
in
mov
int
jle
or
adc
fadd
fisttp
mov
je
ret
rcr
loop
pop
jmp
std
ja
je
arpl
test
mov
xchg
add
outs
out
inc
push
adc
sar
inc
popf
js
cmp
mov
cdq
fidiv
pop
pop
aam
sub
and
push
jb
push
jmp
cmp
outs
fiadd
mov
sub
cmp
(bad)
xchg
movs
and
mov
in
dec
repnz
popf
not
mov
push
test
or
pop
and
push
ins
pop
dec
dec
je
out
es
push
stc
pusha
add
xor
cld
sbb
(bad)
fsubrp
xchg
xlat
nop
(bad)
ja
push
add
add
jg
or
add
(bad)
stos
cmpxchg
lods
or
std
xor
inc
mov
stos
hlt
scas
clc
iret
xchg
into
popa
push
push
cmp
mov
jl
push
pop
shrd
outs
enter
ffree
dec
xchg
outs
adc
(bad)
cld
jmp
pop
(bad)
mov
pop
sbb
pop
sub
ins
std
add
je
inc
outs
sub
xchg
out
ret
call
dec
shl
shl
sbb
cwde
daa
jno
or
repnz
xchg
ss
rcr
xchg
clc
scas
mov
sbb
test
xchg
xor
push
pmuludq
cmp
and
dec
mov
test
imul
sti
fdivr
pusha
aad
das
mov
cmps
cwde
jns
call
dec
test
mov
in
sbb
lds
mov
mov
stos
push
(bad)
jg
fs
push
xchg
retf
movs
std
test
fsubr
jecxz
fmul
adc
stc
fiadd
pop
adc
inc
ss
xchg
enter
xchg
aaa
mov
test
push
cmp
loopne
mov
pop
cmp
sbb
imul
push
sbb
dec
mov
jecxz
inc
fistp
push
inc
push
rcr
adc
scas
arpl
jb
xchg
add
pop
jl
xor
inc
das
push
cmp
inc
adc
cmp
jns
sub
and
mov
push
xchg
or
pop
dec
pop
adc
inc
out
add
and
cld
pop
mov
fist
xchg
movs
imul
mov
fisubr
inc
xchg
inc
and
pop
movs
mov
push
and
or
popf
shr
pop
mov
mov
mov
mov
sub
add
shl
add
je
dec
or
jge
rol
sahf
mov
pop
xchg
lods
mov
xchg
mov
test
lods
scas
enter
inc
dec
inc
cmp
lds
jl
fld
retf
mov
add
test
or
aad
ja
movs
fiadd
mov
jbe
pop
push
scas
(bad)
stos
jb
call
sub
cmc
in
or
stos
or
(bad)
stc
push
(bad)
call
sub
pop
loope
nop
jns
scas
aaa
nop
inc
push
cmp
ret
neg
push
jbe
leave
cdq
test
inc
enter
add
xor
fisttp
adc
mov
mov
jg
fwait
push
lahf
inc
add
je
add
outs
popf
xchg
not
or
hlt
outs
popa
push
jne
pop
xchg
jle
xchg
push
and
sbb
ret
jo
(bad)
sbb
pusha
in
loope
or
mov
inc
jmp
inc
shr
retf
mov
test
xchg
loop
dec
(bad)
into
stos
cmc
shr
mov
mov
cmp
in
(bad)
sbb
pop
ficomp
dec
xor
mov
lds
pop
adc
push
jae
stos
inc
sub
repz
sub
ins
sub
xchg
cmc
stos
cdq
sbb
push
imul
adc
les
jmp
cld
pop
adc
mov
cmp
push
xchg
stos
push
push
les
add
int3
loop
sub
mov
pop
aas
arpl
jg
add
mov
adc
push
retf
xor
mov
rcl
add
movs
cmp
addr16
in
ficom
gs
shl
or
aas
adc
cmp
cli
mov
mov
cmp
sbb
mov
std
or
call
sbb
push
adc
dec
das
jmp
jmp
inc
sar
lods
mov
int
jnp
push
shl
pop
jle
mov
ret
rcl
jno
and
cmps
(bad)
retf
and
imul
loop
mov
push
push
jb
addr16
xchg
bnd
jns
inc
xchg
or
mov
adc
push
jl
jp
inc
xor
pop
or
cmp
push
mov
pusha
add
call
lock
sub
jb
out
sti
adc
push
ror
into
and
es
faddp
xor
aam
xchg
jle
push
mov
hlt
lods
into
inc
pop
xchg
or
push
js
or
sub
adc
push
mov
aaa
in
mov
pop
xchg
adc
ficomp
out
xchg
push
mov
mov
jno
jmp
inc
dec
data16
popf
adc
cwde
cwde
xchg
pusha
arpl
(bad)
(bad)
fwait
call
pop
ret
leave
not
bound
loopne
jno
and
mov
jle
and
push
nop
jno
cmps
sar
mov
addr16
(bad)
sbb
add
xchg
xlat
dec
jle
sub
in
bound
sbb
rcl
int3
in
inc
pop
jg
ins
jbe
in
xchg
push
in
(bad)
ds
rcl
xchg
das
dec
scas
aaa
dec
push
cmp
sub
cmps
and
lods
dec
(bad)
arpl
out
pop
xor
dec
out
jmp
in
outs
and
psubusw
mul
jno
pop
inc
pop
cmp
mov
xor
out
dec
push
jae
cld
loopne
popf
test
xchg
sub
xchg
mov
loop
jo
ret
xor
mov
ds
stos
inc
imul
cli
or
(bad)
push
lds
pop
xor
mov
push
adc
(bad)
mov
push
adc
movs
jnp
pop
inc
xchg
xchg
movs
dec
inc
stos
test
jmp
sbb
fst
lea
dec
pop
daa
mov
mov
jle
aad
ficomp
ror
dec
add
push
mov
and
arpl
push
sub
loope
mov
enter
mov
call
xchg
and
or
mov
into
dec
ds
push
or
test
out
arpl
les
adc
call
stos
out
addr16
data16
cdq
cmc
xchg
call
ror
pop
fld
push
or
aas
jl
cdq
(bad)
jnp
mov
inc
inc
push
sbb
mov
lahf
cld
push
and
adc
lea
or
sti
into
fld
inc
mov
add
add
add
jge
jo
cld
outs
jno
fs
push
mov
fcomip
cld
mov
retf
mov
mov
pop
int
loope
jo
pop
(bad)
jge
inc
in
ret
and
sub
cmps
xchg
cmc
xchg
xor
repz
xor
mov
push
dec
nop
(bad)
fdiv
ja
out
int
jno
mov
jl
pop
arpl
out
bound
jmp
adc
push
inc
jnp
test
add
xor
movs
xchg
push
xlat
xchg
rcl
call
xor
cld
dec
jmp
aas
xchg
in
sub
shr
cmp
out
cld
outs
jecxz
sahf
test
ss
pop
sar
call
lods
repnz
fldenv
je
push
outs
fsub
ror
mov
dec
ds
pusha
fiadd
dec
pop
jmp
and
cld
dec
ret
mov
sbb
je
dec
and
dec
out
jns
dec
jno
mov
out
out
daa
push
xor
inc
(bad)
and
dec
jae
dec
lods
mov
das
movs
inc
movs
inc
fimul
push
data16
pushw
mov
sbb
imul
xor
ins
pop
retf
lds
mov
dec
(bad)
or
jecxz
outs
xchg
inc
cmp
cdq
(bad)
arpl
into
push
push
push
sbb
test
das
repz
xor
out
xlat
sbb
call
push
loope
rol
das
mov
inc
xor
dec
xchg
jp
dec
fcom
xchg
es
inc
fldenv
sub
add
aas
cmp
adc
bound
sbb
push
sub
lock
push
arpl
adc
ds
lods
inc
aas
mov
inc
ret
cmp
sub
imul
inc
das
and
xor
jmp
cmps
dec
sbb
gs
in
cli
ins
mov
add
repz
push
test
adc
ror
mov
es
xor
test
sub
fldenv
jne
popf
jle
adc
aaa
fdiv
or
or
push
or
add
mov
loop
arpl
add
loop
repz
pop
dec
xchg
xchg
arpl
xlat
xor
lock
push
aam
cmp
mov
int3
ins
inc
(bad)
or
sub
sub
xor
push
and
and
(bad)
nop
scas
xor
xor
push
mov
push
in
out
mov
pop
mov
imul
cmps
pop
xchg
stc
shr
(bad)
xor
cmp
bound
stc
sbb
pop
or
ss
sub
leave
jne
inc
std
mov
dec
dec
jge
jno
in
fsubp
or
push
cmp
scas
mov
mov
or
sub
xchg
lock
outs
sbb
(bad)
mov
pop
ins
into
xchg
in
pop
cli
dec
aad
ret
pop
pop
enter
leave
inc
sbb
pop
mov
sub
xor
fisttp
jmp
cmp
add
inc
mov
cmp
fiadd
push
or
cmc
aad
loop
test
push
inc
cmp
ja
cmp
or
sbb
xrelease
or
(bad)
xchg
test
push
xchg
and
das
mov
clc
dec
cmp
(bad)
mov
je
je
in
xchg
fstp
(bad)
movs
rcl
imul
cli
(bad)
push
leave
mov
adc
retf
clc
cli
sbb
int3
sub
adc
xor
xor
jg
jmp
movs
test
mov
push
sbb
and
xchg
inc
push
and
ss
jg
sub
xchg
jnp
push
shl
cwde
in
daa
xchg
cmp
mov
dec
je
jae
fiadd
jle
mov
and
fnstenv
sub
xor
outs
out
mul
lds
cmp
cmp
sbb
loop
scas
pminub
pop
test
movs
pushf
sub
cmp
icebp
mov
mov
out
sti
arpl
or
sbb
dec
sub
mov
ins
rol
repz
imul
jb
test
aas
pop
or
sub
sbb
ja
xchg
pop
repz
fwait
sar
push
adc
cdq
xor
inc
mov
inc
xor
dec
jmp
or
scas
mov
imul
dec
xor
aad
cs
push
int3
addr16
jne
gs
jno
push
mov
fadd
lods
aam
jne
jmp
cmp
xchg
mov
pop
aas
pop
repnz
call
(bad)
dec
leave
(bad)
ss
je
pushf
xchg
call
aas
pop
outs
stc
cmc
outs
std
out
lahf
xchg
mov
add
inc
je
add
mov
push
test
push
cmp
and
and
lods
push
mov
adc
sbb
mov
push
fadd
inc
xchg
les
or
out
int
movs
xchg
jle
mov
sub
jmp
scas
or
movs
pop
push
popf
sbb
ss
cmps
sub
outs
in
sbb
jmp
pusha
int
cmp
pop
xchg
sub
retf
nop
dec
cmp
gs
aaa
mov
mov
xor
cmps
sub
xor
cwde
nop
or
add
loope
or
jno
mov
cwde
ins
pop
test
lahf
push
fisubr
inc
hlt
add
mov
xchg
mov
lahf
ret
sar
(bad)
fsubp
daa
int
scas
push
push
mov
sub
adc
arpl
jmp
imul
push
jmp
xchg
mov
push
ss
adc
(bad)
jle
enter
and
in
jo
push
mov
out
dec
or
dec
push
idiv
xor
fsubr
cmp
mov
pop
add
stc
or
jae
popa
fprem
xchg
in
aam
icebp
sti
and
std
popa
and
fadd
adc
jl
mov
pop
add
ficom
cwde
jmp
outs
pop
sbb
div
jg
xchg
inc
cmp
loope
jmp
dec
loop
imul
mov
add
iret
shl
(bad)
xor
in
(bad)
push
ror
rcr
addr16
neg
adc
xor
add
mov
mov
cld
jl
aad
xchg
je
xchg
mov
inc
inc
les
imul
push
jns
adc
cmp
cmp
jmp
mov
xchg
dec
jns
mov
pop
test
test
xchg
xor
aam
xchg
mov
loopne
cwde
push
pop
mov
scas
jle
aaa
imul
push
enter
fucomi
frstor
mov
sub
mov
inc
out
mov
pushf
lahf
push
cli
xchg
imul
lahf
outs
pop
mov
lods
or
xor
popf
push
xchg
shl
jl
push
xor
sbb
sbb
mov
pop
mov
icebp
xor
jnp
(bad)
xchg
in
sbb
retf
xor
sub
xor
push
lock
sub
dec
mov
cmp
sub
or
xor
sub
dec
push
ja
mov
aas
dec
mov
call
xor
xchg
mov
sub
mov
adc
cli
adc
sub
xor
mov
or
pushf
sbb
iret
or
das
ficomp
mov
pop
dec
(bad)
nop
sbb
jnp
mov
jo
jge
test
mov
aad
retf
dec
and
rcl
pop
mov
xchg
mov
shl
in
pop
stos
push
iret
pop
jge
adc
fsubp
fsin
cmps
dec
outs
xor
adc
xlat
mov
test
fnstenv
jmp
loope
rcl
cmps
lea
bound
inc
mov
jae
out
pop
mov
mov
retf
ss
push
fdiv
adc
shl
arpl
stos
dec
ins
cmp
cli
cmc
div
lods
xor
shr
lods
pop
outs
inc
aas
fmul
push
rcl
dec
mov
jae
es
mov
lock
stc
mov
jns
ins
cmp
xor
and
into
fxch
xchg
stc
push
xor
retf
mov
(bad)
push
sbb
es
mov
cmp
xchg
arpl
or
mov
je
sub
or
sub
leave
gs
mov
ins
mov
mov
rcr
cmp
out
or
dec
add
dec
shl
add
jnp
(bad)
bound
popa
inc
mov
jge
add
(bad)
cmp
dec
out
sbb
inc
or
das
add
xor
loop
sub
cld
sub
mov
pop
clc
xor
xchg
(bad)
pop
rcr
inc
std
arpl
icebp
mov
jb
mov
mov
lds
pop
test
out
adc
add
push
and
mov
sub
mov
jmp
pop
inc
xchg
mov
xchg
mul
lea
pop
cmp
stos
enter
enter
xor
jns
gs
or
(bad)
or
ins
pop
xchg
mov
mov
sbb
cwde
cmp
(bad)
or
sbb
movs
pop
cmp
idiv
and
mov
sub
stos
(bad)
pop
mov
xor
call
push
xchg
std
sub
push
pusha
popa
and
fisub
xor
push
adc
loop
repz
loope
xor
push
add
cdq
mov
lods
ficomp
call
cmp
and
ins
fnsave
mov
and
inc
out
pop
mov
in
push
mov
sbb
dec
push
cmps
xor
pop
shl
test
inc
adc
(bad)
outs
add
arpl
push
stos
sbb
(bad)
in
(bad)
pop
arpl
clc
jne
jecxz
inc
xor
out
and
jecxz
imul
jl
jge
inc
outs
xor
push
data16
scas
fwait
mov
ins
cmp
sub
lods
pushf
outs
mov
fidivr
sbb
les
retf
outs
xchg
mov
clc
mov
mov
in
out
inc
inc
cmp
aad
xor
rcr
xor
test
jl
rcr
test
dec
xchg
push
dec
lahf
pop
imul
leave
outs
jne
and
sub
xor
jbe
movs
mov
mov
test
scas
jge
stos
mov
pop
jmp
clc
ret
jae
arpl
push
jb
xor
sbb
(bad)
imul
jo
out
aas
addr16
inc
cmp
ss
inc
cli
or
adc
(bad)
stc
cmp
ret
cs
test
fldcw
inc
xchg
gs
xor
loopne
test
xor
retf
dec
mov
sub
aas
in
inc
pop
or
mov
add
int3
rol
js
sub
int3
push
movs
cmp
pop
sub
dec
xor
arpl
or
adc
scas
in
cmp
rcl
in
popa
gs
sti
rcl
imul
(bad)
icebp
popa
inc
sbb
mov
add
inc
jae
sbb
out
sti
pop
imul
sahf
lea
cmp
call
stos
std
xor
out
sub
mov
in
stos
mov
jle
shr
mov
daa
neg
je
ins
or
adc
pop
aas
xchg
(bad)
retfw
and
mov
inc
cs
lods
cmc
mov
stos
es
aaa
test
sbb
cmps
adc
mov
es
ja
add
and
sbb
(bad)
retf
arpl
adc
adc
inc
mov
jg
dec
jnp
pop
fwait
test
inc
jge
out
inc
in
sbb
inc
jb
repnz
fmulp
xchg
mov
les
imul
call
sub
xchg
jns
test
xchg
jg
dec
cmp
inc
pop
arpl
rcr
sbb
push
out
out
mov
lds
in
shl
loope
xor
in
inc
prefetch
add
clc
inc
scas
push
in
jmp
in
mov
pop
cwde
lds
pop
ja
jno
mov
xchg
daa
jl
shr
xchg
sahf
cmp
pop
cmp
ss
les
cmp
cli
outs
push
cmp
inc
dec
jo
int3
(bad)
mov
mov
xchg
stos
cmps
cmp
sahf
enter
push
sar
jl
test
(bad)
repz
pop
ret
pop
sub
rol
icebp
dec
cmp
sbb
imul
je
and
gs
or
mov
inc
call
les
lods
scas
retf
or
jl
popf
(bad)
cld
sbb
fs
pop
out
sbb
fs
icebp
inc
data16
imul
ret
and
call
or
popa
sbb
pop
xchg
push
pop
test
or
rcl
or
imul
(bad)
xchg
push
xor
fist
daa
movs
inc
and
fs
popa
jno
jecxz
mov
fwait
in
std
xchg
mov
xor
int3
jnp
push
or
jmp
iret
loop
cmp
cmp
leave
ret
into
out
inc
jle
xchg
(bad)
mov
ficomp
rcr
mov
mov
lea
out
adc
fidivr
rcr
daa
pop
xor
and
stc
sbb
dec
jmp
dec
popf
push
(bad)
movs
push
test
pop
pop
mov
push
xor
(bad)
das
sub
cmp
ret
sbb
adc
pop
movs
or
ret
shr
ret
shl
in
dec
lods
fistp
stc
pop
and
cmp
xchg
add
aad
jne
adc
cmp
mov
xchg
adc
sbb
aas
movs
ins
daa
xor
push
sar
and
pop
mul
or
nop
in
and
mov
retf
clc
ja
dec
adc
or
and
fisub
shl
fsub
xor
loop
sbb
in
stc
jecxz
pop
mov
push
dec
jno
int3
xchg
loop
xlat
(bad)
das
std
adc
lock
gs
call
scas
mov
mov
cmp
push
add
cmps
push
lods
xchg
cmps
cmps
call
test
mov
xor
adc
aas
jne
nop
out
rcr
or
mov
icebp
cmc
and
ss
aas
scas
out
push
outs
dec
dec
rol
ficomp
mov
xacquire
jp
mov
jge
dec
addr16
xor
repz
test
in
inc
jbe
jg
fs
jnp
adc
(bad)
sbb
xchg
imul
xor
test
inc
xor
out
imul
mov
cmp
imul
ret
lods
sub
mov
outs
div
xchg
jp
sub
fistp
adc
lods
and
in
std
fmul
jp
gs
loopne
(bad)
cli
stos
xchg
cld
push
jb
sub
jl
hlt
mov
dec
and
imul
movs
(bad)
aaa
jge
mov
and
jae
dec
loope
icebp
push
dec
dec
sub
xor
fs
dec
movs
inc
scas
xchg
shl
arpl
pop
stos
push
sahf
or
dec
fisttp
je
sbb
jmp
scas
test
mov
dec
inc
push
or
add
xchg
xchg
(bad)
shl
inc
pop
leave
push
push
not
scas
fcom
stos
or
test
fs
test
pop
addr16
popa
jmp
push
or
pop
cmp
inc
xchg
push
mov
mov
rcl
jae
push
daa
fimul
push
xor
pop
ins
adc
popf
pop
ret
sar
hlt
das
mov
cmp
dec
sub
cs
adc
das
push
rcl
mov
xchg
fimul
dec
dec
cmp
jbe
shr
lds
add
xchg
mov
mov
cs
stos
aas
mov
adc
sub
repnz
cvtps2pi
lahf
sahf
mov
jns
pop
jge
es
outs
outs
push
or
fldcw
shl
leave
lds
test
jnp
fst
retf
or
push
mov
movs
je
out
sbb
(bad)
or
iret
and
mov
movs
xchg
inc
mov
int
mov
dec
or
cmp
add
push
sub
pushf
push
xchg
cld
out
adc
std
hlt
jnp
pop
in
add
ja
inc
xor
es
clc
mov
ret
xor
or
dec
xor
pop
call
xor
xchg
jp
cmps
imul
gs
xchg
mov
ficomp
les
pop
dec
cwde
test
jno
pop
dec
cdq
mov
inc
std
sbb
mov
inc
addr16
jb
fimul
dec
push
repz
out
or
std
dec
shl
popa
pop
add
dec
div
aam
lods
jae
leave
ficomp
mov
add
xor
(bad)
pop
(bad)
sar
push
ret
mov
lods
sar
xchg
or
fwait
add
xchg
mov
cs
loope
inc
mov
and
jne
outs
xchg
test
mov
pop
inc
cmp
imul
stc
std
mov
movs
pop
and
jge
mov
fistp
in
pop
outs
mov
(bad)
sbb
pushf
out
jl
je
retf
rcr
sbb
cmp
mov
adc
into
jo
xor
fist
test
add
mov
icebp
push
jp
(bad)
push
leave
pop
mov
aad
mov
inc
ret
ret
(bad)
aaa
and
scas
push
xchg
mov
inc
mov
add
call
inc
repz
movs
jmp
sub
mov
pop
stos
sub
fs
push
(bad)
adc
data16
loope
mov
cmp
sahf
call
sbb
pop
sahf
pop
inc
retf
(bad)
cmps
xchg
inc
sub
outs
fld
rol
pop
xchg
pop
xlat
lahf
nop
inc
ret
xor
mov
fstp
dec
mov
(bad)
cmp
je
int
mov
lea
adc
in
mov
sub
test
pop
sti
inc
inc
fstp
cmp
sti
sub
sahf
and
push
dec
add
sub
fldpi
or
lods
pop
sub
or
mov
push
cli
cmp
repnz
(bad)
mov
mov
out
or
jbe
or
jb
ror
dec
inc
hlt
pop
rol
jmp
push
clc
fist
jle
int3
test
or
popa
cmp
dec
mov
arpl
push
and
mul
cmp
sbb
mov
or
pop
std
aam
xor
xchg
gs
mov
jbe
mov
aad
into
aas
popa
inc
push
cmp
rep
outs
sbb
in
ja
sbb
mov
loope
movs
cmp
push
addr16
inc
out
loope
sbb
pop
push
or
les
jmp
mov
push
pop
add
jle
fistp
jmp
pop
dec
push
fstp
mov
adc
xchg
or
pop
sar
imul
mov
loope
or
xor
cmp
pushf
leave
jle
ins
dec
int
xchg
leave
aam
scas
call
sub
adc
rcr
xor
ret
leave
pop
mov
imul
jecxz
add
jl
push
mov
imul
out
sub
xor
daa
icebp
sbb
bound
sub
pop
arpl
xor
push
pop
adc
and
add
cmc
cmp
xor
fcomp
jne
fnstenv
rcl
imul
push
mov
adc
pop
cwde
sbb
das
inc
int
call
popf
std
mov
adc
loop
sbb
mov
cld
loope
jb
sub
sti
cmc
movs
imul
mov
cmp
mov
cld
dec
adc
mov
bound
test
jns
jle
dec
addr16
push
(bad)
mov
ja
xlat
cs
add
or
(bad)
bound
cmp
dec
scas
rol
js
and
or
repnz
inc
mov
add
mov
cmp
cmp
mov
(bad)
rcl
push
out
jne
push
repz
mov
lahf
push
sbb
adc
sub
xor
mov
bound
sub
outs
js
cmps
(bad)
enter
cmp
ins
ja
js
xchg
je
sbb
into
ret
out
in
inc
retf
data16
push
arpl
nop
mov
dec
mov
sbb
ret
ret
pop
mov
inc
xor
mov
int
cmp
ds
jle
adc
pop
(bad)
retf
sub
fbstp
mov
lea
push
push
enter
jge
push
repnz
adc
sti
stos
dec
aad
aam
push
sub
int3
xchg
in
sbb
pop
or
sar
xchg
jmp
push
mov
mov
je
push
add
out
pop
fsubp
xchg
fiadd
jns
hlt
inc
out
dec
pop
test
jg
stos
(bad)
jge
mov
aas
jmp
or
mov
and
mov
inc
adc
adc
cld
jno
add
das
enter
jg
cmp
inc
mov
push
cmc
or
mov
xor
not
mov
mov
sub
ins
call
ins
loopne
test
inc
in
mov
sub
jmp
pop
inc
add
lock
or
ins
mov
(bad)
or
and
xchg
addr16
aaa
cmp
ret
bswap
xchg
and
mov
xchg
ins
xlat
mov
fs
lods
jb
fmul
jbe
mov
push
nop
(bad)
mov
retf
mov
adc
repz
cmps
fisttp
or
or
xlat
addr16
push
in
dec
mov
sub
ja
test
sbb
js
pop
lods
push
out
xor
leave
push
out
ins
fwait
or
(bad)
cld
sbb
data16
cmp
aaa
out
mov
aas
push
ret
je
inc
ins
or
fisttp
popa
outs
dec
mov
sbb
fmul
mov
das
pop
mov
or
repnz
aad
pop
(bad)
jmp
jae
stos
mov
xor
add
mov
outs
dec
sbb
mov
inc
lock
in
mov
xor
inc
dec
dec
call
pop
or
mov
jle
jp
mov
(bad)
jmp
inc
fidiv
mov
jns
inc
fdiv
popf
jnp
jno
(bad)
icebp
aam
push
mov
xchg
xchg
ss
cmp
std
ret
sar
or
xchg
les
(bad)
push
push
test
movs
int
stos
ror
pusha
std
shr
mul
and
out
xchg
or
retf
mov
and
or
lods
retf
cmp
inc
cwde
adc
in
sbb
vandnps
dec
pusha
adc
jno
mov
cmp
xor
cmp
(bad)
push
add
inc
mov
nop
imul
fistp
ds
sbb
xor
push
mov
xchg
addr16
mov
xchg
pop
cmp
arpl
ins
xor
cli
(bad)
jmp
in
xchg
popa
sbb
or
mov
mov
push
cs
inc
sbb
and
bound
addr16
in
cdq
ss
cdq
jns
push
(bad)
mov
jb
(bad)
pop
mov
or
or
out
cmp
and
adc
mov
retf
jecxz
not
pop
mov
mov
loop
sbb
pop
rol
add
test
fidiv
ret
lea
mov
iret
pop
jb
push
jne
push
jae
and
push
aas
gs
push
into
and
push
fwait
jmp
pop
and
movs
cmps
call
jns
push
lods
ins
xchg
jno
mov
cld
jmp
cld
mov
ins
xor
lock
lods
dec
test
imul
(bad)
neg
and
adc
data16
xchg
jno
jecxz
loopne
cmp
stc
inc
outs
popa
mov
mov
shl
and
int
dec
add
je
jg
std
mov
xor
(bad)
je
push
and
or
or
stc
mov
mov
in
(bad)
enter
hlt
data16
lock
mov
cmp
shl
jecxz
mov
inc
and
icebp
and
fs
jge
fcmovu
mov
add
push
or
ss
dec
pop
push
pop
out
add
fimul
repnz
sub
rcr
pop
arpl
(bad)
je
shl
sub
push
fisubr
aaa
les
xchg
scas
inc
push
mov
fstp
(bad)
xor
(bad)
jo
arpl
rcl
and
aaa
clc
int
push
mov
jmp
dec
or
cmp
retf
push
fisttp
inc
jg
fstp
adc
cmc
dec
sub
xchg
test
sbb
push
mov
xor
outs
xor
clc
stos
dec
inc
or
cmc
cmp
mov
jnp
es
push
(bad)
jg
(bad)
clc
sbb
ret
outs
jp
addr16
adc
icebp
push
sub
pop
add
xchg
cli
out
add
aaa
add
pushf
inc
mov
jnp
std
sub
test
jnp
mov
jb
rcr
xlat
scas
xlat
pop
lea
loop
push
hlt
jmp
into
imul
fstp
pop
sbb
jecxz
add
ja
xchg
push
add
clc
pop
jo
aad
jae
frstor
retf
(bad)
inc
mov
jp
or
pop
es
(bad)
push
mov
test
pop
mov
xchg
test
adc
pop
scas
lahf
push
cld
jne
mov
hlt
push
daa
inc
ret
es
xchg
ss
xor
popf
xchg
idiv
xchg
push
mov
test
dec
sub
stos
es
mov
lea
ret
stos
sbb
pop
xor
aad
bndstx
je
int3
xor
adc
call
mov
adc
sub
or
dec
iret
shr
ja
pop
jge
retf
in
les
sbb
mov
dec
(bad)
movaps
jo
ja
and
or
dec
enter
stos
arpl
inc
arpl
cmp
test
jbe
jo
lea
inc
loopne
test
loop
inc
mov
out
mov
xchg
mov
adc
inc
mov
cs
or
fwait
cmc
mov
jmp
push
(bad)
test
mov
or
popf
fist
iret
adc
mov
outs
stc
mov
test
bound
ret
mov
push
(bad)
pop
push
cs
dec
add
int
(bad)
shl
mov
pop
stc
pop
gs
(bad)
and
ss
mov
repnz
adc
adc
cmp
icebp
sub
popa
cs
lea
test
(bad)
(bad)
lods
imul
ss
loopne
add
aaa
jge
repnz
xchg
inc
iret
aas
push
jno
add
push
(bad)
leave
imul
xchg
in
sti
push
xchg
aas
movs
jae
cs
lods
push
cdq
dec
int3
dec
xchg
mov
add
fst
adc
movs
cmp
adc
dec
mov
jno
sbb
mul
sti
mov
and
fadd
jo
xchg
ds
cmp
add
icebp
pop
pop
div
bound
fst
enter
in
loopne
push
jge
popa
test
mov
push
dec
mov
sbb
pop
sbb
add
(bad)
mov
xor
popa
cdq
into
scas
icebp
fimul
xchg
ins
stc
fcmovne
dec
sub
pop
mov
fcom
sub
xchg
mov
inc
(bad)
xchg
adc
fisttp
je
xor
push
retf
dec
dec
and
mov
push
ror
or
iret
test
cmp
icebp
jmp
cwde
mov
push
lock
mov
pop
test
in
rcr
xchg
loope
inc
in
leave
rcl
fsubr
inc
jg
mov
jl
dec
out
(bad)
mov
xchg
dec
scas
inc
inc
scas
aad
aas
and
mov
fwait
popf
ja
mov
loope
test
das
retf
mov
cmc
rcr
lea
adc
(bad)
sti
ja
daa
inc
mov
setge
mov
int3
or
cmp
ret
clc
dec
xlat
(bad)
leave
hlt
sub
sbb
mov
sbb
outs
cdq
imul
xchg
push
cwde
repz
dec
mov
push
mov
push
and
ds
enter
add
lea
xor
lods
mov
out
xchg
movs
and
mov
sti
lahf
dec
mov
out
test
push
sbb
jnp
add
pop
xor
push
inc
pop
sbb
inc
push
pop
xchg
test
pop
mov
leave
push
scas
fstp
cmps
or
xor
pop
xchg
fsubr
or
push
(bad)
(bad)
sbb
in
mov
cwde
xchg
retf
cdq
in
jg
jnp
adc
push
inc
ret
into
adc
lods
sbb
fdivr
mov
int3
ss
shl
ret
jle
test
mov
ficom
mov
pop
push
into
and
(bad)
sbb
enter
inc
retf
int
sub
jmp
es
test
push
(bad)
(bad)
lods
xlat
jle
fcomp
add
mov
xlat
test
mov
cld
dec
ds
cmp
retf
shl
pop
pop
clc
add
or
imul
push
sub
(bad)
pop
scas
push
or
clc
mov
in
add
mov
adc
dec
das
inc
dec
shr
adc
jmp
dec
and
sbb
loope
call
pop
xor
stos
test
ins
pusha
add
shl
xchg
shl
cs
pop
aad
mov
or
dec
mov
cmp
push
repz
xchg
pusha
jg
fwait
popa
dec
out
shl
add
ja
out
adc
fcom
(bad)
xor
movs
cmp
cmp
scas
mov
cmps
dec
xor
adc
xor
pop
loopne
add
push
sbb
dec
add
jo
pop
shr
jmp
add
call
add
sub
xchg
mov
sbb
retf
mov
dec
mov
(bad)
mov
xchg
in
sahf
idiv
xchg
stos
fld
sbb
clc
es
mov
out
ror
or
push
jmp
push
(bad)
(bad)
popf
mov
mov
das
inc
push
ins
call
pop
das
sbb
pop
cmp
(bad)
push
sti
push
mov
inc
push
std
fsubr
xor
adc
in
call
popa
or
fist
jno
popa
add
sbb
jnp
in
das
fidiv
inc
fnsave
pop
loop
aam
dec
push
xchg
pop
push
(bad)
cmc
and
in
mov
xchg
retfw
jo
cmc
call
add
fucomip
inc
leave
jne
and
lods
mov
sbb
mov
sbb
iret
movs
xchg
out
push
test
sbb
(bad)
jg
sub
out
jl
and
sahf
push
sti
mov
in
stos
stos
add
cmp
test
mov
dec
jns
or
pop
sbb
and
xchg
mov
jl
add
aad
or
mov
or
mov
aam
dec
dec
mov
pop
cmp
retf
and
pop
ret
lods
stos
out
dec
iret
add
fidiv
bound
mov
and
inc
or
fsubr
jl
jmp
sub
lahf
xchg
inc
push
fst
or
cmp
dec
cmp
(bad)
cmp
pop
cld
push
aaa
bound
bound
mov
ja
(bad)
stos
xchg
add
or
clc
adc
fs
adc
sar
cmp
stc
retf
enter
xor
fs
or
fcom
loope
and
xchg
or
test
mov
test
mov
test
fidiv
pop
xchg
outs
sahf
inc
(bad)
cmp
sub
int3
out
xchg
jl
and
stos
(bad)
cdq
fcmovne
popa
cs
(bad)
and
pop
inc
cmc
mov
(bad)
fmul
mov
jle
jl
ins
mov
add
lods
pop
push
sub
(bad)
pop
sub
(bad)
adc
sar
es
push
dec
cmps
mov
push
dec
push
js
cmp
bound
ins
mov
and
fcmovne
and
cmc
mov
sub
or
shl
out
bound
into
pop
mov
cld
or
xchg
lods
inc
jb
int
call
cmps
sar
sbb
xchg
aad
(bad)
jne
jno
daa
dec
fiadd
pusha
xor
sub
jae
inc
jge
adc
scas
clc
das
ftst
adc
imul
std
pop
push
and
inc
push
sbb
not
fwait
test
das
cld
mov
xor
mov
xchg
(bad)
fisub
repnz
mov
daa
fsub
test
into
push
imul
dec
into
shr
dec
jae
das
mov
sbb
in
retf
push
mov
jg
mov
inc
sub
arpl
fisttp
int3
pop
mov
mov
call
fcom
movs
push
xchg
test
out
mov
popf
dec
jno
scas
mov
icebp
sbb
fnstenv
or
fcom
or
mov
jb
cmps
push
cmp
aam
data16
push
or
adc
inc
ds
(bad)
nop
xchg
cmp
daa
nop
gs
loope
add
cwde
adc
inc
dec
sar
add
or
loop
(bad)
icebp
test
in
sub
jl
xchg
std
ret
sbb
cwde
mov
jno
jp
jle
mov
add
idiv
mov
jo
in
lods
mov
(bad)
(bad)
push
mov
jno
imul
or
jmp
pop
lods
iret
adc
cmps
fstp
push
inc
ja
and
push
sub
push
adc
ja
dec
sti
xchg
and
xor
out
retf
hlt
pop
mov
mov
sti
loop
lock
xchg
and
add
pop
mov
adc
cmp
cmp
imul
add
push
cmp
cmp
gs
dec
int
loope
fwait
iret
and
add
pop
inc
(bad)
fwait
xchg
mov
(bad)
out
gs
fld
or
in
or
popa
out
pop
data16
pop
or
inc
clc
inc
push
(bad)
pop
xchg
inc
cmp
add
adc
xchg
jmp
shl
xchg
cld
mov
frstor
xlat
xor
popf
mov
and
pop
(bad)
repz
add
xchg
imul
jmp
xor
pop
out
clc
daa
scas
pop
addr16
sbb
pop
mov
jmp
ds
dec
dec
jmp
ds
outs
shl
cmp
cmp
cmp
mov
ins
popf
imul
sub
and
xlat
cmp
rol
sub
adc
repz
jmp
pop
movs
push
push
sar
xchg
mov
outs
and
ret
repnz
mov
cmp
sar
out
sbb
inc
(bad)
sbb
scas
cmps
xor
out
xchg
jnp
dec
loope
mov
outs
dec
js
ror
xchg
call
(bad)
mov
(bad)
add
mov
mov
in
(bad)
adc
sub
js
repz
push
stos
das
sub
mov
cmp
clc
fisub
jmp
push
jae
dec
mov
mov
repnz
jne
loope
xchg
push
mov
inc
clc
sbb
nop
fild
(bad)
loope
int
rol
stc
fistp
mov
xchg
ds
sbb
push
loopne
stos
in
pop
add
cli
pop
(bad)
pusha
(bad)
sbb
out
jl
aam
popa
add
sbb
or
fnstenv
(bad)
pop
cwde
test
adc
in
xor
idiv
lods
dec
mov
gs
mov
push
jae
inc
aad
cld
popf
lahf
mov
ret
xlat
sub
(bad)
cmps
cmp
into
xor
mov
inc
sti
dec
xor
ss
push
ds
sbb
jnp
das
mov
iret
arpl
jb
dec
mov
pop
(bad)
retf
lock
xor
fisttp
sbb
int3
aad
enter
aad
pop
test
shl
movs
sub
xlat
mov
sub
jge
int
in
fdivp
test
mov
test
lods
sub
and
push
xchg
popa
jle
push
imul
into
jno
into
loope
ror
mov
fild
jmp
inc
test
pop
xor
mov
push
add
int3
jmp
cli
xchg
and
gs
or
push
ret
xchg
repnz
pop
fnsetpm(287
pop
xlat
les
mov
sbb
jg
int
out
mov
sbb
nop
cmp
push
enter
ja
test
sub
sub
jle
popa
sbb
aad
aam
mov
push
push
loope
repz
cwde
inc
mov
test
or
and
movs
mov
call
lods
push
mov
push
cmp
sar
dec
xchg
push
je
mov
inc
aad
sbb
or
lahf
and
adc
mov
push
scas
int3
mov
cmp
adc
ficom
lods
xchg
dec
pop
jmp
inc
add
mov
cld
test
cmp
cs
leave
xchg
dec
dec
into
ret
sbb
imul
and
push
(bad)
sbb
or
mov
and
pusha
lods
jns
shl
adc
(bad)
sahf
mov
loop
push
in
ret
call
dec
icebp
push
enter
or
pop
jnp
imul
xor
pop
adc
dec
push
inc
cs
xor
xor
(bad)
retf
sbb
push
add
(bad)
pop
sub
sub
pushf
inc
jnp
sbb
cmp
pop
sbb
dec
lods
imul
dec
sbb
cmp
mov
mov
out
iret
shl
inc
jne
inc
xchg
aam
jge
mov
pop
sub
dec
icebp
jo
push
xchg
(bad)
rol
rol
das
jb
jg
lea
test
jne
out
ins
das
fimul
(bad)
shl
shl
cmp
push
sub
or
pop
lods
dec
(bad)
mul
push
lahf
fcomi
add
cs
mov
xchg
pop
and
imul
adc
inc
add
out
xor
stc
pusha
retf
mov
repz
pop
ds
mov
xchg
or
sti
inc
ror
push
std
pop
mov
xor
sbb
cmp
or
call
popa
dec
sub
sub
es
jbe
dec
icebp
and
shl
fs
cmp
xchg
sbb
sbb
aaa
into
test
pop
les
cdq
fs
rcr
dec
push
loope
sub
jl
dec
sti
mov
into
outs
into
mov
fs
jle
mov
push
cld
leave
fwait
sbb
push
in
les
add
lahf
arpl
cmp
retf
repnz
cdq
loop
movs
xor
pop
ins
pop
out
dec
mov
pusha
pusha
add
js
push
adc
xchg
or
sub
push
je
sbb
movs
jecxz
movs
(bad)
xor
inc
xchg
mov
rcr
dec
icebp
(bad)
lds
movs
xor
test
or
xchg
inc
ins
retf
movs
int3
aas
cwde
pop
xor
ja
inc
push
pop
push
add
clc
hlt
jne
pop
int3
(bad)
xor
mov
in
inc
adc
jp
in
dec
push
(bad)
xchg
popf
ins
mov
inc
bound
cmps
test
test
fcmovbe
popa
fcom
jmp
jg
loope
xor
in
and
pop
test
dec
mov
fild
not
scas
mov
std
jle
inc
in
mov
nop
js
jae
test
push
js
and
sbb
ins
or
ins
cwde
push
movs
leave
in
(bad)
sbb
fsubr
add
nop
mov
fs
(bad)
fcmovnb
jnp
inc
dec
cs
cwde
sub
mov
pop
movs
jmp
mov
shr
sbb
dec
iret
cwde
lea
jecxz
shr
mov
scas
cmp
lds
lahf
fwait
xor
cmps
fs
xchg
inc
adc
(bad)
enter
dec
je
xor
js
push
popa
xor
sbb
ja
fisttp
in
xor
sub
inc
cmp
push
and
dec
popa
mov
cmp
stos
sub
mov
or
mov
loopne
mov
imul
call
xor
ror
push
add
xchg
sbb
sub
and
mov
scas
pop
lds
sbb
test
sbb
sbb
(bad)
into
lock
enter
push
mov
pop
mov
jo
lock
mov
ror
daa
cmps
xor
xchg
out
sahf
mov
mov
mov
in
jne
outs
mov
ins
dec
rcr
in
mov
and
popf
stc
shl
push
mov
ret
jg
iret
jo
jmp
push
int3
cmp
xchg
pop
daa
das
xor
pop
rcr
call
adc
out
call
or
lds
into
jmp
and
inc
ret
xchg
imul
inc
fcomp
test
rcr
inc
mov
inc
xbegin
arpl
jp
jb
sub
out
inc
jbe
dec
jl
xchg
pop
push
fild
cmp
push
test
out
rol
popf
imul
fabs
out
push
pop
pop
sub
pop
into
lahf
not
inc
call
in
add
hlt
or
and
lock
xchg
imul
sub
mov
inc
aam
js
imul
inc
xor
icebp
inc
in
aas
fstp
pushf
pop
xchg
in
ins
aam
pop
cmp
ds
add
bound
sbb
jmp
inc
repz
div
ja
mov
mov
and
stc
cs
xchg
into
xchg
fwait
call
sbb
push
fcom
sub
in
xchg
loop
out
and
xor
mov
and
mov
(bad)
cld
fidiv
ds
mov
xlat
mov
xor
imul
hlt
cmc
jle
xor
pop
xor
adc
imul
inc
stos
sub
mov
in
sub
add
aas
mov
or
enter
repnz
xchg
dec
add
mov
sti
in
cmp
retf
mov
fmul
in
dec
add
mov
dec
xchg
mov
(bad)
dec
loop
pop
popa
mov
inc
mov
pop
data16
aas
cld
mov
add
add
sbb
cmps
ss
push
loopne
nop
xchg
(bad)
icebp
adc
dec
imul
sbb
into
xchg
(bad)
mov
add
cmp
cmp
adc
mov
or
mul
retf
sub
push
jmp
ds
and
scas
(bad)
int
cli
stos
cmp
das
xchg
xor
adc
cmp
inc
xlat
pop
(bad)
aam
lea
lahf
dec
inc
fst
fs
je
(bad)
and
xchg
xchg
or
and
push
sbb
xor
loopne
cmp
adc
cmp
test
test
ins
xor
icebp
loop
push
mov
and
rcr
push
cs
imul
icebp
imul
dec
out
sti
mov
aad
inc
js
sahf
xor
xor
sti
jnp
lock
cmc
icebp
fs
inc
pop
mov
push
xor
fcomp
mov
cmp
dec
push
rol
cmc
fucomip
and
movs
cmp
je
xor
outs
inc
mov
aaa
repnz
ds
movs
aam
ror
jmp
in
or
adc
push
add
or
loop
aam
(bad)
ss
push
in
test
cmc
mov
jge
jae
imul
into
ret
mov
jge
adc
das
js
aas
push
aad
sti
ins
call
mov
mov
imul
aaa
test
pop
add
xchg
pop
xchg
jecxz
xor
xchg
dec
sub
sahf
pop
mov
rol
fidiv
test
mov
jl
dec
dec
mov
push
inc
push
add
push
nop
leave
xchg
push
popa
inc
pop
add
add
scas
mov
push
cmc
xchg
ror
sub
jmp
je
jge
dec
out
(bad)
jmp
inc
cs
xchg
push
std
cli
call
sub
or
hlt
push
fidivr
ja
push
dec
div
jg
push
and
xchg
or
fadd
loopne
(bad)
ret
nop
leave
jns
push
jb
stos
shl
xchg
mov
icebp
fdivr
cmp
js
sbb
add
int
xlat
ret
sbb
jmp
(bad)
aaa
in
add
cmp
call
cmps
arpl
inc
lahf
jno
mov
and
cmp
mov
(bad)
mov
pop
rcl
mov
je
movs
inc
ds
scas
cmp
aad
xor
mov
or
xchg
out
mov
push
aas
rcl
(bad)
mov
sub
lods
sar
and
xchg
and
push
inc
sbb
and
pop
das
inc
repnz
mov
loope
inc
jecxz
call
pusha
dec
div
mov
dec
std
stos
lods
pop
sub
fucomip
adc
cmc
mov
and
dec
sar
jnp
add
(bad)
sub
sti
lods
sub
fdiv
xor
pusha
fs
das
pop
cmps
in
loopne
mov
mov
sahf
add
xlat
jl
and
test
inc
sti
fidiv
jmp
and
pop
inc
scas
test
inc
sub
inc
jg
inc
iret
mov
mov
jmp
pop
push
jg
xchg
sbb
sbb
mov
outs
pop
js
add
das
lea
xchg
mov
sti
xor
lock
mov
xchg
ins
sbb
mov
es
inc
stc
popa
adc
adc
dec
cmp
ror
imul
gs
fimul
push
int
mov
or
neg
adc
popf
push
imul
cmps
(bad)
adc
dec
cmp
cs
xchg
jbe
push
lods
xchg
sbb
fsub
inc
sti
sti
mov
xchg
fst
int
rcl
inc
repz
mov
cmp
cld
sti
mov
xor
sbb
inc
std
clc
push
loope
mov
lahf
adc
and
jmp
retf
push
mov
mov
cmp
stos
mov
ret
sub
mov
mov
popa
pop
repnz
aas
mov
movs
ss
inc
fsubr
dec
mov
and
mov
fistp
clc
mov
ins
test
mov
bound
mov
jp
test
cli
sub
icebp
sub
fidiv
mov
loope
je
inc
(bad)
mov
pushf
mov
sahf
dec
push
addr16
mov
nop
xchg
shr
ret
(bad)
jg
lock
scas
adc
aad
(bad)
cwde
jp
pop
dec
inc
int
(bad)
push
enter
or
clc
daa
imul
jno
outs
sub
or
or
dec
jae
xchg
xchg
xor
xchg
nop
arpl
icebp
aad
rol
mov
outs
cmp
sub
push
int3
call
or
daa
sbb
cdq
mov
xor
push
jno
fs
loope
and
adc
stc
icebp
ins
mov
int3
test
push
mov
or
jno
test
clc
cld
or
jge
sbb
xchg
push
or
or
cmp
cmp
mov
mov
jne
adc
lods
cmps
aad
dec
cmp
xchg
(bad)
in
fs
push
inc
(bad)
hlt
mov
std
std
jp
or
movs
sbb
xchg
leave
cmp
cmp
and
sub
inc
cmp
xor
sub
call
xchg
pop
cwde
fwait
xchg
jg
in
sti
or
outs
adc
sbb
(bad)
movs
and
rcr
push
(bad)
out
imul
ja
ja
fistp
mov
push
xchg
gs
pusha
sbb
fisubr
inc
xchg
movs
in
add
pusha
jno
repnz
push
mov
mov
std
(bad)
cmp
out
add
fsub
(bad)
dec
or
ins
mov
cdq
adc
pop
imul
js
call
dec
jle
add
cld
adc
and
xor
sbb
xchg
popa
dec
test
loop
cmp
test
std
or
xchg
stos
mov
mov
and
nop
arpl
dec
inc
pop
dec
adc
cmps
lea
xor
jge
cmps
cld
in
add
stos
jbe
test
pop
push
into
ins
rol
mov
test
mov
iret
jns
leave
push
out
inc
scas
sbb
inc
cwde
mov
cwde
mov
cdq
nop
or
shr
scas
nop
jne
je
adc
mov
(bad)
push
cmps
repnz
(bad)
pusha
sub
pop
ss
jle
push
push
imul
rcr
sar
js
mov
cmp
dec
loopne
lods
in
sbb
pop
jno
xchg
pop
xor
ja
cmp
fwait
hlt
(bad)
or
mov
push
es
xchg
xchg
pop
or
arpl
jb
lds
cmp
jo
ss
push
ficomp
jp
ror
int
add
(bad)
xor
retf
pusha
jb
mov
popf
pop
add
jmp
das
push
aad
push
jg
lahf
out
and
enter
push
xchg
fwait
jmp
das
sbb
inc
jmp
jae
cmp
and
or
dec
xor
stos
(bad)
jne
push
hlt
or
push
mov
clc
pop
mov
stos
pop
cmp
jb
into
dec
lea
aad
mov
or
ret
mov
fwait
shl
pop
nop
push
sbb
adc
mov
xor
test
push
call
stos
ret
mov
and
daa
jge
mov
leave
pusha
scas
fsub
(bad)
jb
xor
push
loop
arpl
movs
outs
mov
mov
retf
lods
lea
inc
ret
push
dec
mov
add
lahf
xlat
jae
ins
stos
jecxz
cmp
fild
sbb
adc
xchg
mov
std
inc
(bad)
jns
sbb
push
dec
dec
add
cmp
dec
sbb
clc
or
shl
scas
mov
ins
cmps
je
or
push
push
sub
movs
data16
xor
push
int
inc
in
mov
inc
bound
push
shl
ins
(bad)
es
adc
ret
mov
jmp
add
mov
pop
mov
or
jecxz
cmp
(bad)
xchg
scas
inc
out
pop
fistp
fld
retf
push
jle
pop
sbb
xchg
inc
mov
inc
dec
xchg
in
(bad)
mov
jmp
gs
and
mov
int3
jno
lods
or
pop
rcr
mov
and
lea
jbe
(bad)
mov
mov
test
sbb
push
and
or
jae
popa
mov
rdpmc
cmp
jne
test
inc
jl
mov
imul
js
dec
addr16
inc
or
pusha
test
dec
sub
addr16
sub
sbb
out
sub
in
stc
out
popa
push
sub
pop
ja
icebp
inc
imul
mov
mov
sbb
xchg
(bad)
xchg
imul
call
sar
(bad)
mov
data16
mov
addr16
or
jle
out
mov
imul
mov
arpl
es
push
cmp
mov
xchg
adc
inc
iret
and
out
sbb
cmp
dec
aad
iret
stos
aas
xor
dec
pop
ret
mov
fimul
mov
int3
mov
idiv
adc
enter
and
dec
call
jmp
int3
ret
addr16
push
dec
xor
push
or
sahf
add
int
and
nop
popa
jmp
pusha
cmp
push
mov
jnp
aad
(bad)
(bad)
or
jle
mov
nop
jge
(bad)
mov
lods
ins
xchg
hlt
mov
rcr
arpl
stos
xchg
cmp
mov
std
and
leave
xor
ss
xor
cmps
or
(bad)
shl
es
lds
mov
xchg
pop
dec
jmp
in
rol
cmp
popa
jnp
adc
inc
loopne
add
(bad)
repz
sub
push
daa
pushf
es
and
inc
inc
ins
mul
push
sbb
jg
mov
imul
aas
imul
and
je
inc
xchg
bound
add
push
mov
into
cli
adc
cs
pop
out
scas
ins
cmps
adc
(bad)
pushf
call
ins
stos
jmp
cmps
int3
addr16
pop
and
push
dec
sbb
hlt
mov
movs
mov
cmc
pop
out
rol
pop
std
ret
or
xchg
jno
enter
mov
shl
in
add
aad
fnstsw
xor
jle
inc
cmp
sub
std
push
xor
mov
fnsetpm(287
mov
jo
mov
iret
(bad)
lock
xchg
sub
xchg
fidivr
pop
sti
inc
mov
jge
mov
mov
push
mov
cmp
rcl
ja
ins
pusha
and
pop
sbb
out
shld
arpl
mov
in
scas
mov
imul
mov
pop
mov
sti
pop
push
ret
mov
push
data16
sahf
rol
jmp
jno
cwde
fdivr
jbe
iret
or
inc
loop
inc
push
daa
sahf
hlt
cmps
retf
dec
sbb
stc
cmp
test
mov
or
repz
test
popa
out
xchg
xor
xor
out
aam
test
inc
push
leave
jbe
inc
jge
pop
ds
pop
cmps
xor
cmp
loopne
es
aas
inc
jg
xchg
sbb
pop
ds
push
movs
or
adc
sbb
repnz
xor
mov
(bad)
retf
or
lods
arpl
jp
in
stos
inc
xchg
xchg
jnp
mov
mov
sar
mov
or
mov
dec
repnz
inc
inc
inc
cdq
fld
aas
xlat
jns
xlat
jg
mov
or
call
shl
(bad)
dec
lock
stos
pusha
sub
or
push
or
pusha
inc
lds
aas
adc
push
mov
push
mov
add
mov
mov
pop
jge
(bad)
sbb
lds
shl
or
jns
test
fdivr
into
lods
adc
pop
int
mov
jbe
adc
imul
mov
pop
addr16
xor
sub
call
sbb
hlt
into
mov
adc
imul
pop
cmc
dec
add
jb
aad
ret
push
fisubr
add
stos
xchg
inc
cmp
or
(bad)
pop
fwait
ins
mov
cmp
mov
xlat
leave
inc
xchg
jge
pop
cmp
sub
sub
call
pop
push
ds
cmp
push
jnp
dec
aas
jnp
xor
xor
dec
dec
inc
(bad)
push
push
js
icebp
dec
sub
and
pop
lahf
adc
adc
pop
cmp
inc
popa
mov
fld
jge
mov
jmp
mov
inc
scas
outs
inc
test
call
loope
adc
ins
xchg
mov
sar
inc
cwde
idiv
pop
ret
ins
mov
and
xlat
jnp
push
lods
adc
mov
push
or
jns
pop
xor
test
dec
sar
jmp
mov
xchg
xchg
push
xor
cmp
adc
dec
jle
icebp
pusha
sar
not
das
jne
loopne
je
adc
mov
sbb
sub
das
pop
in
stos
xchg
and
mov
pop
and
frstor
icebp
cmp
jne
aad
dec
popa
pop
push
cs
pop
jp
fnstenv
test
imul
jae
jne
lods
inc
lea
jl
popf
cwde
cmp
xlat
cmp
adc
mov
lods
xor
out
pop
xchg
jmp
jmp
mov
out
ret
ds
jl
aad
sub
mov
jbe
adc
cmp
cmps
dec
(bad)
push
or
repnz
sti
(bad)
xchg
leave
ss
mov
xchg
sbb
ja
mov
mov
lods
inc
ret
jecxz
pop
fwait
jl
shr
adc
cmp
mov
sahf
repz
dec
leave
jp
xor
fmul
dec
fcom
sbb
sub
ret
xchg
jne
xor
(bad)
xchg
es
xchg
mov
ret
fwait
mov
adc
iret
mov
loope
sbb
ja
cmp
cli
out
jle
loopne
jecxz
jmp
(bad)
sbb
jb
adc
rol
and
fdivr
mov
repz
mov
push
loopne
push
inc
fsubrp
push
dec
mov
xor
mov
sub
ret
cmp
js
iret
clc
(bad)
jne
pop
into
retf
xchg
cmp
add
add
dec
pop
fidiv
jmp
pop
mov
fucomip
cmp
dec
clc
mov
cmp
ret
mov
hlt
ins
jmp
mov
cmp
cmp
xchg
inc
xchg
pop
sub
pusha
mov
loopne
jo
pop
and
xchg
dec
shl
sbb
hlt
inc
cmp
repz
xor
movs
add
jb
pop
in
xchg
jns
xor
jecxz
lods
popa
scas
and
popf
dec
dec
jl
jno
jnp
dec
icebp
xchg
stc
mov
in
xchg
push
xchg
mov
mov
jno
outs
(bad)
xchg
pop
sub
loopne
mov
fcmove
or
sbb
push
mov
(bad)
adc
out
test
leave
add
pop
movs
pop
jecxz
mov
and
jbe
js
pop
dec
sub
imul
fs
mov
xor
or
add
jmp
xor
mov
and
loop
or
or
xor
sti
sti
cmp
fadd
xor
ja
scas
cmp
outs
aad
mov
out
dec
cmp
add
sbb
push
imul
jne
(bad)
jbe
inc
mov
add
aaa
xor
pop
out
lock
push
mov
xor
repnz
outs
js
mov
(bad)
cmp
fcmovnu
pop
adc
adc
adc
push
movs
adc
and
mov
aas
inc
jg
std
mov
xchg
cmp
pop
loopne
ja
mov
rol
xchg
call
pusha
ins
push
push
movs
fisttp
(bad)
out
jecxz
pop
shl
loope
sub
jmp
call
ds
shl
shl
xor
sbb
ror
jle
into
push
loope
add
cld
pop
scas
inc
call
aam
mov
cmp
mov
in
sub
ret
movs
push
inc
dec
ss
out
int
stc
test
je
mov
jge
pop
cdq
add
pop
dec
and
xor
dec
repz
out
dec
div
sub
jbe
mov
jae
cmps
jmp
jbe
retf
sub
inc
cwde
das
adc
jp
out
or
es
das
inc
or
push
and
adc
mov
jle
adc
or
or
sahf
pop
xor
out
sub
(bad)
sbb
mov
out
or
jle
leave
stos
xchg
arpl
mov
test
call
pop
ins
int3
adc
mov
xor
retf
jp
push
test
lock
mov
outs
retf
mov
loope
add
push
inc
adc
xor
arpl
int3
xchg
stos
icebp
dec
and
fisttp
or
ficomp
scas
jp
xchg
and
xchg
pushf
lods
mov
(bad)
sub
(bad)
lea
loope
ja
or
xlat
dec
cld
imul
int3
inc
aam
cmp
fisub
or
jle
mov
mov
jo
push
sub
out
jle
xchg
push
xor
popa
mov
dec
adc
nop
ror
iret
mov
stc
js
cmp
jns
out
loope
push
push
fs
sbb
mov
pop
shr
mov
push
and
in
sbb
arpl
ret
mov
adc
imul
mov
popf
xchg
pushf
cwde
iret
or
sub
xchg
iret
aaa
jo
pop
jecxz
pushf
loopne
daa
mov
(bad)
jmp
mov
int
cmp
popa
xchg
adc
mov
mov
jo
and
enter
cmc
jmp
aad
fmul
test
or
mov
vphaddwd
and
call
repz
push
test
xchg
loope
(bad)
iret
sub
mov
ret
jb
aas
pop
inc
out
movs
xor
test
out
jae
xchg
mov
sub
call
fsubr
mov
xchg
stos
cmp
cs
(bad)
push
sub
cli
fxch
mov
jle
xchg
ins
add
mov
pcmpeqw
in
inc
jnp
scas
ret
pop
icebp
aam
movs
in
(bad)
ja
enter
ja
or
cmp
aam
dec
xlat
outs
sbb
pop
pushf
inc
ret
jno
and
lock
and
sub
lea
mov
popa
cmp
loopne
pop
out
je
xchg
mov
push
add
pop
mov
in
cmp
ret
pop
iret
push
xor
stc
(bad)
call
jns
push
mov
inc
inc
int3
aaa
push
iret
test
mov
sbb
push
retf
and
jae
push
call
cmp
in
push
test
mov
sub
(bad)
rcl
call
repz
xchg
xchg
fcom
xchg
mov
bound
movs
(bad)
mov
out
push
pop
mov
dec
sbb
addr16
in
jl
das
ja
mov
mov
imul
mov
pushf
icebp
xor
mov
jp
cmp
ficomp
jmp
or
fstp
cmps
fcmovne
ja
aad
nop
push
mov
adc
daa
xor
xchg
xchg
mov
sub
aas
pop
jbe
add
push
les
and
cwde
(bad)
mov
mov
mov
rcl
jl
inc
jl
out
or
repz
in
cmovns
scas
jp
inc
push
mov
jno
add
icebp
shl
lock
and
hlt
scas
cmp
fsub
test
xchg
mov
lock
jns
jnp
mov
pop
cmc
push
jecxz
cs
gs
pop
pusha
pop
mov
dec
or
pop
jae
fsub
inc
jns
aaa
cld
into
retf
jae
ror
sbb
xchg
mov
add
dec
arpl
pop
movs
jle
aad
div
into
ror
cmp
retf
inc
retf
adc
xor
daa
aaa
imul
(bad)
icebp
and
lock
cmps
xchg
xchg
out
jne
outs
pop
movs
inc
push
je
fcomi
mov
push
or
enter
cmp
adc
or
das
ja
out
xchg
test
sbb
xor
xchg
xor
jge
ins
adc
xor
inc
fs
adc
(bad)
call
shl
sbb
fmul
adc
out
xchg
out
push
cmp
repnz
mov
(bad)
cmps
xor
sahf
and
push
xchg
dec
lahf
inc
mov
mov
popaw
xor
fstp
pop
ret
clc
inc
inc
mov
mov
xchg
and
sbb
sar
(bad)
rcl
inc
imul
jb
imul
sbb
js
out
leave
inc
xchg
inc
xchg
pop
fimul
xchg
enter
pop
and
xchg
mov
rol
into
pop
sbb
adc
adc
push
sub
shl
imul
sub
xor
out
xor
shl
mov
fadd
xchg
xchg
nop
ins
jns
sub
jg
mov
xor
xor
add
cmc
push
adc
and
push
fcom
jb
hlt
lods
push
cmc
mov
imul
test
push
mov
pop
data16
jo
fcmovnbe
jne
mov
sub
pop
push
cmp
out
sbb
pop
inc
(bad)
mov
mov
inc
test
in
iret
lods
pushf
fidivr
sbb
sar
loope
add
push
mov
xor
cdq
aaa
jb
lahf
out
pop
adc
pop
jb
inc
data16
sbb
cli
sub
aad
(bad)
mov
or
mov
mov
jnp
pop
push
push
pop
jo
aaa
sti
inc
cmps
loop
xchg
push
adc
adc
int3
dec
xchg
je
jecxz
or
mov
es
loope
mov
push
push
add
mov
and
or
pop
pop
sbb
adc
gs
je
mov
or
inc
test
mov
(bad)
jp
imul
mov
test
xchg
adc
adc
push
xor
mov
(bad)
outs
leave
xchg
mov
add
gs
dec
inc
add
adc
cmp
daa
mov
je
loop
fiadd
mov
lock
mov
ret
cmp
dec
lea
mov
and
div
fucomip
cmps
sbb
jecxz
mov
mov
inc
sbb
rcl
nop
retf
mov
jle
jle
push
xor
arpl
movs
pop
mov
adc
pop
pop
(bad)
(bad)
cmps
xor
push
retf
inc
mov
int
pop
punpcklbw
mov
cdq
adc
pop
fimul
mov
shl
ins
xchg
jmp
lock
lds
test
loop
sbb
test
xor
jg
rol
lahf
stos
sbb
jns
mov
call
mov
out
jcxz
or
test
cld
push
outs
sub
xor
push
mov
mov
les
dec
adc
std
popa
fcmove
inc
imul
add
out
push
mov
mov
shr
pusha
aaa
sbb
outs
movs
mov
shl
hlt
cmp
in
mov
inc
cmova
call
loope
or
push
jbe
pop
pop
ret
mov
arpl
sbb
xor
and
cmp
call
mov
aad
test
xchg
push
xchg
sbb
(bad)
ins
xchg
add
or
mov
imul
xchg
ds
clc
out
mov
jns
cmc
pusha
sub
adc
sbb
sbb
sar
out
jne
push
cmp
dec
cmp
or
aaa
jg
sub
out
(bad)
sbb
neg
adc
bound
sar
and
test
and
lahf
stc
inc
pop
ins
dec
cmp
sbb
stc
xchg
pop
mov
mov
and
add
ja
jmp
or
mov
jg
mov
ja
in
fwait
ss
ins
enter
ins
mov
or
loop
xor
into
loopne
cs
push
(bad)
dec
jle
js
pushf
ins
(bad)
retf
push
jae
push
nop
int3
aaa
cmp
pop
mov
jae
mov
mov
jnp
jg
dec
xchg
nop
add
imul
jbe
xchg
test
add
or
or
mov
mov
jmp
scas
mov
add
mov
add
pop
jnp
out
dec
adc
mov
cld
jno
mov
adc
cli
cs
call
repz
dec
ins
les
inc
aaa
movs
hlt
or
jle
mov
out
jnp
add
pop
rol
and
addr16
adc
push
jl
retf
push
test
inc
push
aas
outs
mov
mov
cmp
mov
pop
mov
outs
jnp
cmp
fild
cdq
mov
mov
cld
sti
aad
push
div
imul
mov
shr
dec
and
bound
adc
push
scas
(bad)
cdq
and
cdq
push
aas
mov
inc
pop
adc
add
xchg
sbb
xchg
pop
sbb
popf
and
pop
ret
dec
pop
cmp
aas
adc
xor
cmp
outs
pushf
js
test
cli
add
(bad)
and
pop
mov
mov
push
gs
pop
jo
cmp
repz
inc
leave
shl
push
jmp
je
add
js
xor
in
mov
setge
mov
mov
cmp
mov
je
mov
cld
mov
pop
inc
sbb
cld
pushf
stos
adc
push
mov
mov
call
stos
aaa
or
imul
imul
mov
cld
jne
test
mov
outs
out
mov
stos
adc
xor
xchg
ds
loopne
fst
rol
mov
cli
sbb
dec
pop
inc
adc
push
inc
add
inc
push
imul
retf
or
loopne
pop
xchg
iret
je
xor
cli
jae
imul
daa
push
adc
pop
xchg
jecxz
aas
clc
rep
fwait
mov
mov
fisttp
je
aas
and
imul
jmp
pushf
cmp
adc
jmp
mov
out
sbb
dec
push
push
xor
xor
mov
and
pop
push
xor
int3
jbe
dec
sub
sub
lea
sbb
(bad)
fldenv
push
mov
lahf
les
test
scas
mov
jns
xor
xchg
sub
jo
out
stc
xchg
test
fcomi
dec
popa
xor
cmp
fsub
repnz
dec
cmp
outs
xchg
adc
lea
das
aaa
mov
sbb
xor
repnz
mov
cli
mov
rcr
and
sub
sbb
sbb
loop
call
and
sahf
in
mov
fst
add
outs
push
(bad)
pop
nop
xor
movs
pop
cmp
or
adc
retf
les
es
test
mov
mov
jge
mov
inc
rcr
cmc
fs
push
ret
popa
mov
loop
pop
data16
jne
cwde
or
push
adc
cli
aad
pusha
mov
lods
mov
adc
push
jmp
add
lahf
fldenv
imul
mov
pop
leave
out
out
or
cmps
rcr
sub
scas
aaa
and
dec
in
push
rcl
inc
cmp
mov
and
(bad)
mov
mov
xchg
or
and
stos
pop
fdiv
xor
fs
pop
push
xor
(bad)
js
daa
(bad)
jmp
inc
add
or
icebp
and
ror
sti
es
std
add
repz
bound
cld
jp
pop
jne
nop
push
cmp
jae
cwde
imul
mov
(bad)
das
add
cdq
(bad)
test
push
inc
lock
imul
ficomp
mov
cmc
xchg
mov
push
retf
sub
lods
call
nop
mov
cs
jbe
loope
pop
mov
jge
rcr
int
mov
mov
lock
inc
mov
inc
cwde
sub
pop
in
xor
mov
outs
imul
loop
cmp
fwait
shl
out
or
push
push
dec
jo
ds
add
mov
cmp
xor
adc
jnp
sbb
rol
mov
xor
inc
rcr
fisub
mov
pop
or
lahf
xor
iret
push
mov
mov
cmp
sar
xchg
inc
inc
les
shr
mov
fistp
xchg
es
pusha
shr
ins
rcr
pop
shl
je
pushf
jge
aas
addr16
and
push
aad
and
loope
mov
nop
adc
cwde
sbb
es
out
dec
lahf
ror
sbb
inc
fwait
or
adc
mov
mov
sbb
xchg
jnp
out
mov
pop
sub
std
push
or
mov
clc
ret
icebp
movs
jp
dec
imul
(bad)
mov
imul
aas
cs
dec
dec
push
push
stos
loope
pop
aam
mov
fisubr
jmp
push
push
or
xlat
or
outs
jb
add
sbb
dec
sub
xor
xchg
mov
cmp
pop
jo
retf
fidiv
scas
mov
inc
lods
sbb
xchg
push
mov
ins
cwde
mov
add
sahf
adc
retf
fcomi
and
dec
mov
in
xchg
mov
mov
xchg
loop
gs
fmul
jg
and
pop
dec
das
std
loop
cmc
jae
adc
gs
and
jno
mov
mov
mov
push
loop
cmc
xchg
das
das
push
mov
push
mov
sub
inc
cmp
and
mov
sub
mov
aad
out
mov
jne
shr
mov
loope
int3
ror
jno
stc
and
into
aaa
sub
sbb
jbe
out
push
gs
mov
cmp
jmp
sub
cli
rcl
jae
ror
lods
sub
nop
sbb
mov
mov
movs
repz
xchg
aad
dec
jno
inc
mov
xor
adc
sub
push
cwde
jge
stos
add
push
xchg
mov
pop
xchg
jle
pop
push
outs
jne
push
cmc
jl
or
clc
out
pop
xchg
sbb
sbb
mov
leave
mov
jmp
adc
or
daa
cmovae
stc
in
adc
loope
nop
shl
add
push
and
aad
mov
outs
dec
and
pop
enter
xchg
mov
popa
scas
jecxz
ret
pusha
aad
lods
adc
adc
rcr
movs
push
bound
jns
test
mov
sub
icebp
adc
inc
dec
jns
or
cmp
sub
fnstcw
call
int3
cmp
jnp
inc
sbb
or
and
pop
sbb
inc
daa
or
pop
push
pop
fwait
mov
mov
inc
mov
std
jns
add
out
daa
in
lods
xchg
bound
test
add
mov
sahf
pop
add
mov
cmp
mov
or
xchg
fwait
mov
dec
pushf
jno
movs
imul
cmp
xor
push
pop
int
mov
test
sub
sbb
in
das
cmp
inc
jo
aaa
cdq
ret
mov
or
ret
cld
popf
sbb
jbe
or
je
adc
mov
in
or
dec
call
mov
xor
inc
jge
jp
repnz
add
inc
hlt
or
sub
add
(bad)
pop
mov
ins
pop
mov
push
mov
xchg
dec
out
pop
or
or
push
repnz
mov
adc
pop
push
popa
pop
fwait
jne
mov
(bad)
addr16
sbb
xchg
mov
push
adc
out
rcr
sti
xchg
ficomp
mov
test
sahf
sti
hlt
mov
mov
or
dec
add
push
push
mov
je
pop
outs
out
or
jne
push
jae
pop
imul
pop
cli
ss
push
(bad)
retf
call
(bad)
add
push
jge
ins
(bad)
lods
or
pop
mov
mov
retf
push
stos
sbb
add
ja
aaa
pop
cmc
jo
push
jb
sub
mov
cmp
pop
mov
xchg
jg
lds
imul
movs
sub
mov
test
push
xchg
add
ja
push
mov
sub
jne
rcr
int
xchg
mov
mov
xchg
fst
push
mov
pop
push
hlt
(bad)
je
std
out
shl
cmp
(bad)
rol
pop
dec
mov
fsubr
scas
jmp
mov
shl
es
pop
push
inc
rcr
das
jge
shl
jl
dec
clc
in
sub
add
mov
push
out
dec
add
jle
jecxz
mov
push
lods
mov
sub
inc
pusha
inc
mov
aaa
xor
xor
stos
mov
(bad)
ss
adc
fs
mov
xor
cld
cs
stos
ss
xor
sub
mov
cdq
in
rol
adc
out
mov
idiv
outs
or
retf
and
xor
cmp
dec
mov
cld
js
mov
or
fdiv
sar
xchg
bound
data16
mov
or
pop
out
test
xor
mov
mov
pop
cwde
mov
cmps
int
loop
pop
(bad)
push
movs
mov
push
mov
and
lods
movnti
xchg
jo
sub
xchg
aas
dec
inc
enter
dec
stc
lock
sub
dec
pop
(bad)
cmc
xchg
push
push
adc
loope
gs
nop
dec
cmc
pop
mov
mov
icebp
rol
popf
mov
sub
movs
js
fisubr
jns
xchg
sbb
mov
dec
into
aas
icebp
push
add
mov
jnp
retf
ins
jb
or
adc
mov
in
loop
mov
push
jo
retf
add
arpl
imul
or
and
in
dec
std
stos
ja
retf
aad
mov
cmp
pop
popfw
cld
ss
data16
jno
push
pop
data16
pop
xchg
push
dec
inc
and
pop
cmp
jo
dec
cmps
sub
and
in
xlat
push
jns
scas
sbb
retf
add
rol
(bad)
inc
inc
data16
xchg
pop
leave
leave
sub
cwde
shl
mov
jnp
mov
pop
inc
cmp
sub
mov
mov
cli
or
ins
repz
sub
lock
stos
call
clc
sub
call
popa
shr
jp
test
and
mov
push
xor
cmps
ficom
push
in
fwait
shl
imul
rcr
jmp
stos
add
dec
or
cmp
hlt
push
push
and
into
cwde
out
jmp
cmp
mov
xchg
jns
xchg
inc
dec
cmp
push
fdivr
push
or
push
inc
div
retf
int3
or
ins
int3
push
push
retf
outs
jecxz
add
out
loopne
cdq
test
inc
push
add
adc
mov
mov
mov
fucomip
stos
(bad)
xor
popf
aad
loopne
jmp
jge
loopne
aad
and
cmp
dec
mov
in
xor
dec
ins
pop
into
sti
aad
pop
mov
or
cli
ins
mov
scas
inc
repz
xor
xchg
aas
(bad)
push
xchg
or
jmp
xchg
pop
lods
mov
mov
xor
imul
xor
mov
dec
cmps
daa
jbe
test
pushf
pusha
dec
adc
mov
das
pushf
and
add
xchg
addr16
(bad)
in
(bad)
clc
mov
dec
lea
xor
cmp
out
or
jp
sbb
aaa
lods
jl
fidivr
adc
mov
rcl
xchg
lds
out
loop
adc
mov
cmp
xor
sahf
fs
pop
test
mov
sbb
pushf
adc
retf
in
push
test
or
arpl
jae
cmc
repnz
xchg
add
and
imul
mov
jl
lahf
push
sub
mov
xor
mov
fistp
std
sbb
arpl
mov
jp
mov
jmp
sbb
out
and
je
or
in
xchg
imul
push
inc
xchg
mov
add
mov
mov
mov
mov
mov
adc
and
(bad)
sbb
mov
ja
rcl
or
sub
dec
push
inc
int
xor
mov
ins
ret
jbe
out
jmp
stos
mov
add
rol
fcmovbe
pushf
push
loopne
fiadd
sbb
fiadd
in
loop
sbb
mov
mov
dec
bound
pop
push
scas
dec
pop
cmc
sti
movs
adc
xchg
inc
popa
fisub
mov
cmp
sar
sbb
and
sub
add
jecxz
ins
lock
das
loopne
in
mov
scas
test
pop
add
and
jp
sbb
aad
(bad)
mov
mov
inc
dec
cmp
mov
xor
fimul
mov
add
test
cmp
mov
frstor
pop
je
jp
fistp
aas
mov
dec
int
lods
das
or
inc
out
popa
and
std
stos
shl
(bad)
push
adc
ret
xor
mov
or
xor
retf
scas
test
add
js
mov
push
out
mov
fsubr
inc
jbe
movs
inc
inc
fild
mov
out
push
lea
imul
jmp
ins
fcomi
cld
xchg
xor
call
fdivr
add
pop
call
add
xor
pop
dec
dec
mov
int
push
inc
std
sub
inc
shl
adc
aaa
stc
dec
js
mov
sahf
sbb
cmp
push
cli
iret
leave
jl
fcomp
mov
pop
mov
mov
mov
add
sbb
mov
addr16
or
sub
dec
mov
leave
popa
cmp
mov
jns
in
mov
and
(bad)
push
out
loop
sbb
xchg
aam
fadd
loopne
into
pop
(bad)
stos
fisttp
pop
lock
inc
in
ret
in
mov
adc
mov
dec
hlt
xchg
jge
out
and
jmp
test
movs
repnz
in
cmp
(bad)
push
jmp
out
jge
clc
call
mov
movs
in
test
shr
aam
pop
xchg
add
adc
aam
fild
adc
je
test
fidiv
push
push
arpl
cmps
sbb
and
push
adc
and
mov
pop
sbb
adc
cmp
sub
xchg
das
and
jl
jg
sbb
(bad)
imul
lahf
out
sub
xchg
jb
rol
lods
mov
xor
gs
fs
mov
cmp
sbb
shr
lahf
adc
neg
jno
lea
push
sbb
mov
mov
call
out
push
xor
cmps
das
sub
dec
mov
pop
in
mov
or
inc
out
sti
std
inc
pop
cli
adc
ret
mov
leave
mov
mov
jns
stc
or
cmp
or
icebp
add
(bad)
add
sub
adc
xor
sub
inc
call
imul
stos
dec
and
fild
cld
push
inc
ins
sub
or
jmp
pop
add
jnp
sub
mov
dec
cmp
sbb
pushf
jmp
jbe
jo
cs
test
call
inc
mov
test
inc
mov
inc
arpl
cmc
ror
sub
sahf
jl
lods
sbb
push
popa
out
jne
cmps
mov
mov
addr16
je
dec
mov
fxch
ds
iret
pop
sub
adc
(bad)
mov
lods
and
jnp
jg
cdq
xor
fcomp
push
mov
movs
in
cwde
mov
in
imul
imul
lods
sbb
stos
nop
cmp
dec
jp
test
xor
out
sbb
xchg
inc
cmps
pop
lods
repnz
js
shr
nop
shl
mov
inc
jmp
sti
test
iret
ss
cdq
add
inc
sbb
pop
shl
inc
pop
add
sbb
dec
into
jle
ss
adc
jmp
cwde
icebp
xchg
mov
mov
mov
xor
and
xor
cwde
mov
sub
out
xlat
or
xchg
into
mov
mov
call
outs
cwde
je
repz
les
rol
sbb
loopne
pop
lds
ins
pushf
in
inc
js
pop
out
sbb
stc
addr16
or
lock
jecxz
hlt
inc
adc
loopne
and
aad
aam
cmc
xchg
or
dec
in
mov
aad
in
sub
dec
rol
(bad)
call
int3
sbb
test
xchg
hlt
push
test
es
add
sbb
cli
ficom
shl
ja
fsub
inc
cmp
icebp
call
push
inc
pop
fisttp
mov
test
mov
sub
cmp
repnz
push
imul
xchg
push
inc
cmps
inc
mov
sub
mov
fld
pop
cmp
sti
leave
popa
in
test
ror
leave
push
lahf
stos
mov
dec
jle
fs
adc
mov
jno
jne
pop
xchg
xor
or
jbe
neg
loopne
out
adc
jmp
test
retf
lods
test
pop
pop
std
iret
dec
jne
ret
pop
mov
movs
ins
push
rol
imul
push
rol
out
add
(bad)
and
scas
add
and
dec
stc
push
dec
push
cdq
push
or
push
push
pop
lock
mov
in
je
jb
mov
cmp
dec
fucomp
and
shr
ins
dec
jmp
stos
icebp
rcl
out
push
test
sbb
push
int3
pop
lods
or
fiadd
stos
and
(bad)
test
xor
rol
sub
outs
int3
das
adc
sbb
(bad)
pop
add
lds
jg
dec
ret
jno
bound
dec
jb
(bad)
cli
mov
push
mov
sub
mov
and
out
cmp
inc
inc
or
inc
pop
lock
into
add
stc
pop
jb
repz
dec
or
sub
adc
and
add
jne
pusha
stos
push
xor
int3
push
xchg
dec
xchg
out
cld
fmul
sub
cmp
add
call
pushf
fwait
push
fcomp
adc
cmps
inc
test
xor
pop
aam
dec
pusha
je
jnp
movs
jmp
sbb
mov
jnp
maskmovq
test
jmp
out
shr
dec
or
lds
pop
loope
adc
in
jo
xor
adc
mov
mov
push
push
test
fs
outs
shr
sar
std
push
test
stc
push
sub
xor
jg
push
ja
mov
mov
push
es
xor
aad
es
or
je
inc
sub
xchg
test
jns
inc
lods
repnz
jmp
scas
repz
jg
into
repnz
clc
xchg
mov
pop
xchg
in
mov
loop
mov
add
stos
mov
test
(bad)
fld
jae
xchg
adc
ins
or
in
pop
cmp
retf
dec
mov
inc
stc
aaa
je
into
or
xchg
or
imul
or
rcr
and
stos
inc
movs
fwait
or
dec
mov
xor
mov
iret
mov
ror
and
ss
or
mov
aas
push
dec
mov
cmp
popf
fmul
mov
jp
ja
or
repz
jmp
(bad)
in
cld
fidiv
inc
stc
shr
das
pop
mov
mov
pop
mov
and
jns
adc
jns
stos
popa
jae
inc
xchg
push
inc
and
mov
cmp
push
rol
adc
and
mov
fistp
into
push
mov
lods
mov
cld
adc
jmp
and
adc
mov
cmp
and
(bad)
inc
dec
rcl
push
inc
jb
or
cli
mov
xlat
movs
(bad)
push
sbb
(bad)
js
popf
push
(bad)
in
je
leave
jle
or
in
mov
jle
pusha
push
loope
inc
inc
fsub
es
adc
ja
cli
and
int3
sub
fstp
lahf
shl
retf
sti
cmp
sbb
fidivr
inc
xchg
mov
outs
mov
imul
dec
jmp
test
push
in
sbb
xchg
js
pusha
lods
inc
mov
xchg
lahf
pop
addr16
xchg
cmp
repnz
out
cmp
xor
add
add
cmps
repz
or
fwait
jecxz
sbb
mov
add
enter
pusha
mov
clc
sub
xor
scas
pushf
arpl
icebp
jecxz
fucomip
dec
mov
je
aam
(bad)
xchg
imul
inc
test
mov
xchg
(bad)
hlt
dec
add
mov
adc
pop
(bad)
adc
(bad)
sti
stos
test
pop
mov
push
sub
pop
call
pop
int3
(bad)
cmp
cmp
stos
xchg
add
out
cli
dec
sti
mov
mov
pusha
mov
or
fwait
xchg
mov
mov
adc
sub
iret
mov
cmc
mov
popa
repz
bts
in
and
jmp
xchg
or
pop
jne
dec
add
pop
pop
rcr
into
xor
fmul
imul
or
xchg
sub
dec
mov
aas
mov
sub
jne
cdq
push
mov
movs
mov
les
mov
outs
mov
jno
fisubr
nop
cmp
xchg
mov
xlat
(bad)
xor
ins
xlat
mov
ret
adc
sub
or
dec
test
dec
and
cmp
mov
sbb
push
mov
cmp
inc
mov
push
or
(bad)
jg
data16
mov
add
fisub
dec
mov
add
sar
fistp
mov
xor
push
ror
mov
cld
(bad)
cld
bound
mov
int
push
sub
jmp
sbb
out
push
int3
or
push
sub
test
test
mov
stos
les
imul
retf
pop
and
js
rcl
es
fchs
push
aam
add
(bad)
push
mov
pop
je
mov
xchg
cmp
push
lods
rcl
jbe
push
(bad)
mov
test
cdq
retf
clc
xor
cdq
mov
jecxz
scas
sub
arpl
call
out
jne
fdivr
pop
push
jl
push
jge
(bad)
mov
cwde
mov
push
cmps
push
jl
xlat
add
inc
pop
jo
scas
push
mov
in
mov
(bad)
repz
or
(bad)
(bad)
adc
lods
xchg
(bad)
sub
enter
push
rcl
lods
sti
iret
cld
jecxz
or
imul
jmp
add
retf
outs
mov
scas
mov
shr
popf
stc
adc
cdq
push
cld
lea
push
lds
xchg
sbb
sub
push
inc
cmp
xor
jmp
mov
cmp
hlt
icebp
pop
lds
mov
in
out
push
fisubr
mov
clc
push
sub
inc
test
ror
scas
push
xor
arpl
pop
xor
stc
repnz
jnp
stos
jp
cmc
pop
les
mov
xor
jg
leave
dec
ins
mov
sub
adc
retf
arpl
xchg
dec
daa
lock
scas
lock
cdq
mov
inc
out
adc
pop
sub
add
test
jl
sar
pushf
inc
test
mov
pushf
pop
mov
adc
xor
sar
or
dec
gs
mov
sbb
pop
xchg
dec
fs
shl
dec
adc
dec
and
mov
ins
gs
adc
outs
scas
adc
mov
xor
aaa
cmp
lahf
xor
in
js
push
xchg
push
aaa
in
push
inc
mov
int3
mov
std
sahf
aas
jo
outs
or
(bad)
sub
xor
sbb
push
pop
adc
loop
xor
dec
sub
add
fbstp
pushf
out
call
or
push
aam
jmp
scas
jmp
ds
out
sub
sbb
inc
in
lods
rol
inc
test
jge
pop
add
push
outs
pop
push
jge
popa
pop
fisubr
lahf
xor
movs
cmovne
mov
ret
(bad)
adc
es
sub
lods
inc
out
test
mov
mov
leave
inc
pop
retf
jp
inc
inc
jo
xchg
jecxz
jp
add
pusha
jg
xchg
inc
jo
stos
pop
(bad)
ss
pop
dec
xor
jns
clc
test
cs
icebp
pop
pop
xchg
cmp
repz
in
fsqrt
or
cmp
mov
jg
mov
pop
dec
mov
cs
shl
pop
and
inc
dec
clc
stos
push
fwait
sub
pop
movs
fild
sbb
sub
stc
mov
ud0
jbe
jne
aad
push
lahf
push
shl
jmp
xchg
mov
(bad)
and
test
pop
inc
std
dec
jo
in
int3
xor
test
fcmovne
cld
loop
fiadd
mov
cmps
aad
adc
mov
aad
sbb
push
test
cmps
pop
fprem
popf
or
add
lds
dec
aaa
lods
jo
xchg
daa
xor
repz
scas
movs
mov
ret
mov
mul
jno
add
xor
mov
lds
and
and
inc
mov
adc
cld
cs
stos
push
fcomi
sti
and
mov
xor
dec
rcl
ins
xor
xor
int
jae
je
xor
or
retf
jne
xchg
xor
jmp
add
loop
cli
inc
xor
sbb
in
leave
pop
sbb
jge
shl
loop
push
mov
jge
push
aad
sub
arpl
aas
add
inc
ins
mov
jecxz
or
cmp
nop
inc
ror
cmc
daa
(bad)
push
shr
fs
or
movs
mov
dec
addr16
repnz
leave
les
movs
inc
cli
in
xchg
fbstp
out
sbb
jae
neg
in
dec
xchg
mov
push
sub
iret
and
mov
aaa
pusha
in
xchg
xor
outs
stos
cmp
movs
stos
out
mov
sbb
cmp
pop
push
xor
mov
mov
sub
sbb
and
cmps
adc
retf
push
daa
js
fs
sub
adc
and
pop
cs
int3
test
inc
add
sub
je
outs
bt
sub
arpl
and
push
div
pusha
pop
les
xrstor
jae
add
dec
in
push
mov
mov
inc
cmp
mov
dec
cmc
mov
es
jg
dec
aam
mov
push
pushf
leave
ror
std
sbb
add
sar
or
pop
mov
ja
fsub
cmc
in
mov
cmc
mov
xor
xor
dec
jmp
sbb
out
xchg
cdq
lods
fwait
cwde
scas
rol
loope
repz
mov
rol
mov
lea
stc
mov
pop
xchg
mov
imul
jp
sub
push
push
xchg
push
daa
or
es
out
jle
dec
mov
sti
ins
outs
sbb
int
inc
jle
push
and
movs
inc
test
mov
xor
int3
ror
outs
push
mov
sub
iret
cmps
jle
std
xchg
(bad)
int3
or
shl
mov
mov
push
clc
inc
jae
out
jbe
scas
pop
data16
push
adc
sbb
cmp
hlt
call
std
sbb
adc
js
xchg
inc
adc
push
outs
add
xor
sahf
out
add
and
mov
popa
in
ins
outs
je
xchg
mov
nop
cwde
pop
shl
dec
cmp
jge
in
retf
xor
mov
cmp
push
mov
mov
dec
pop
xchg
cmp
push
fiadd
sbb
or
inc
fisub
rol
mov
adc
sub
(bad)
jo
sub
xchg
repz
mov
aaa
jns
jmp
icebp
stos
mov
xor
in
xchg
movs
jno
pop
cmp
adc
bound
retf
nop
shr
or
pusha
or
mov
ins
dec
push
aad
(bad)
cld
cmp
jp
cmp
dec
xor
int
(bad)
pusha
sbb
or
and
bound
xchg
nop
sub
jmp
xchg
push
xlat
mov
sbb
fimul
mov
ja
push
pop
cmp
pop
cmp
shl
push
xchg
jmp
(bad)
in
les
mov
mov
(bad)
clc
cmp
repnz
xchg
and
repz
adc
adc
shl
adc
jg
lds
(bad)
enter
(bad)
das
cmps
fcomp
das
xchg
mov
imul
scas
lods
dec
stos
adc
inc
jge
enter
pop
pop
or
dec
push
and
push
cmp
sub
fwait
mov
adc
xchg
xor
sub
or
hlt
mov
dec
test
sahf
jp
retf
mov
mov
add
or
les
retf
icebp
jno
xor
test
xchg
int
fisubr
test
mov
clc
pop
pop
mov
xor
cmp
fchs
mov
adc
sub
push
loope
cwde
dec
out
and
iret
mov
icebp
lock
push
loop
scas
sbb
pop
ins
ds
and
test
and
pop
loopne
cmp
cmp
in
and
mov
xchg
imul
xchg
xchg
xor
mov
pop
xchg
jmp
in
mov
rcl
mov
dec
ss
mov
push
dec
mov
push
push
dec
dec
jae
sti
pop
jae
push
mov
test
pop
movs
lahf
(bad)
std
(bad)
and
jbe
imul
add
sbb
cmp
je
sahf
lods
xor
je
scas
cmps
in
mov
jmp
inc
push
xor
mov
popa
mov
or
sahf
jmp
mov
inc
push
out
cmp
nop
and
stos
or
pop
(bad)
in
iret
push
push
fist
inc
ins
pusha
les
fs
push
rcr
xchg
mov
mov
xchg
sbb
mov
sub
(bad)
cmp
faddp
pop
cmp
(bad)
call
jge
ror
xor
jp
inc
xlat
pop
test
aas
or
daa
stos
or
and
int3
sbb
adc
sub
ins
or
mov
call
mov
push
sub
xor
test
pop
test
push
shr
lahf
xor
add
cmps
in
add
ret
xor
xchg
pushf
pop
int
popf
sbb
or
push
pop
jecxz
xor
push
out
xchg
and
(bad)
pop
lahf
xchg
std
enter
add
inc
and
inc
sahf
add
sar
test
cmp
enter
mov
pop
pop
push
inc
or
mov
retf
sub
aas
pop
jns
js
add
je
cmp
adc
mov
cmp
ja
ret
ss
mov
pop
rcr
fild
mov
pop
in
sahf
ins
add
pop
mov
jl
adc
fcmovnbe
push
fistp
xchg
jne
mov
test
fwait
sub
mov
pop
inc
xchg
mov
adc
xchg
dec
sbb
push
cmp
mov
add
mul
xor
gs
jns
callw
pop
in
retfw
jmp
fld
repz
inc
xor
dec
push
dec
push
jmp
ds
popa
mov
ins
mov
or
and
push
rcl
outs
je
fistp
int
cmp
repz
dec
sbb
xchg
jle
leave
or
xor
pop
xchg
dec
and
sahf
xor
aam
test
js
call
sbb
jge
cdq
cmp
xchg
jne
test
xor
movs
and
out
mov
xchg
mov
jg
lahf
sub
and
push
mov
xchg
arpl
pop
bound
adc
cdq
outs
in
jl
aas
jnp
pop
cmp
pop
cdq
adc
pop
xchg
stos
pop
cmp
push
(bad)
neg
repnz
cdq
out
imul
popf
retf
adc
sbb
cmp
loopne
mov
push
addr16
or
inc
mov
arpl
inc
mov
ins
mov
pusha
lods
test
daa
push
or
sti
jno
test
cmp
(bad)
aad
outs
xchg
pop
lea
call
add
test
xchg
xchg
push
out
pop
aaa
mov
sub
mov
ds
mov
stc
ficom
xor
enter
push
xor
js
and
cmp
add
gs
movs
out
xchg
pusha
xchg
movs
int
mov
pusha
xchg
push
sub
xchg
inc
pop
or
movs
sti
popf
mov
nop
clc
dec
test
mov
mov
inc
adc
dec
xchg
movs
std
push
ds
sahf
fimul
leave
scas
je
or
fmul
sbb
sub
mov
jmp
sub
lock
jne
pop
mov
push
shl
xlat
pop
mov
jo
sbb
add
es
pop
mov
mov
push
push
xor
push
mov
fisttp
jg
test
loopne
xor
pushf
mov
mov
sbb
cld
adc
cs
or
lds
bound
pop
dec
push
call
(bad)
fcmove
popa
in
arpl
mov
push
mov
cs
cs
cmp
in
int
add
repz
imul
jle
mov
cmp
fstp
ret
aad
and
call
push
push
sbb
inc
inc
inc
js
inc
sub
(bad)
sub
mov
cmps
iret
pop
or
cli
inc
jno
xchg
cmp
or
shr
cmp
test
sbb
lea
jo
sub
push
clc
xchg
jle
push
loope
rol
mov
adc
adc
pop
(bad)
jge
or
in
push
sub
jge
jge
mov
movs
sub
pop
pop
dec
pop
js
mov
mov
nop
mov
jno
xor
push
mov
mov
fistp
jb
scas
mov
je
cmc
dec
pop
ds
popf
out
in
mov
call
stos
xor
cs
mov
test
nop
mov
lods
fs
add
(bad)
fld
out
mov
loop
lods
call
mov
jl
push
and
jbe
inc
mov
cmp
jbe
xchg
cmp
dec
push
(bad)
jp
xor
popf
nop
retf
fwait
lock
mov
add
jno
ja
adc
neg
jg
inc
rcr
cmc
mov
mov
pop
ror
shl
jne
ret
cmc
ins
jns
lock
inc
iret
pop
dec
cmp
fdivr
dec
bound
test
cs
pop
and
jmp
int
xchg
cmp
xchg
jne
xchg
jle
cld
add
and
dec
push
sub
mov
jg
movs
fisttp
inc
inc
ror
xchg
adc
push
inc
inc
lods
mov
jo
les
int
mov
cmps
rol
je
mov
test
jne
mov
mov
out
or
adc
icebp
jmp
rcl
adc
sub
aad
clc
mov
jl
push
inc
push
stos
inc
mov
cmps
pop
pop
jecxz
add
mov
sbb
psubsb
cmp
adc
dec
cld
inc
sti
cmps
inc
dec
jecxz
ja
out
scas
retf
icebp
push
in
or
add
test
xor
fstp
jae
fdivr
jg
int
fld
xchg
call
cwde
jmp
js
fs
xchg
ja
sub
push
push
loop
xchg
lea
mov
(bad)
jl
(bad)
or
repz
push
mov
adc
or
xor
and
mov
jg
sbb
bound
sbb
popf
xor
int3
aas
mov
inc
mov
cmps
call
cs
and
addr16
test
pop
push
enter
mov
mov
mov
inc
xchg
pop
xchg
push
pop
adc
aaa
xchg
into
inc
std
cli
push
test
adc
sar
add
daa
add
shl
daa
arpl
or
je
aam
sbb
icebp
cmc
add
pop
pxor
pop
pop
test
inc
sbb
dec
lahf
das
or
jle
in
jo
or
retf
jp
pop
jno
int3
pop
cmps
inc
leave
scas
push
mov
daa
jle
push
imul
adc
cmp
(bad)
sub
mov
push
jo
dec
icebp
xor
xlat
mov
pop
xchg
push
jo
jae
gs
cwde
retf
mov
out
idiv
sub
test
push
icebp
(bad)
jecxz
(bad)
xchg
jmp
ins
aad
mov
mov
xchg
cwde
sub
add
mov
push
and
push
retf
enter
arpl
sub
sahf
std
sar
or
outs
xchg
xor
mov
shr
nop
(bad)
mov
or
pop
inc
pop
cmc
sbb
int3
mov
xchg
sub
outs
clc
movs
mov
pop
dec
fldenv
stos
inc
mov
addr16
mov
mov
and
push
imul
mov
test
xchg
pop
int3
jmp
es
stos
stos
je
out
lock
test
data16
pusha
lods
pop
dec
cmp
mov
dec
jp
push
pop
dec
mov
into
jge
pop
and
sub
jbe
sti
cmps
xchg
in
ficom
bound
inc
dec
retf
fs
lock
in
xchg
rdtsc
push
push
sti
mov
or
jmp
dec
jmp
and
push
and
jnp
push
fucom
sar
scas
arpl
jmp
sub
cmp
pop
pushf
stos
ss
ficom
jmp
mov
psubb
ins
push
(bad)
jecxz
mov
mov
mov
call
pop
dec
xchg
sbb
iret
sub
rol
jb
jp
int
mov
retf
jecxz
add
pop
add
dec
aaa
lds
loopne
ret
xor
jp
lahf
jb
cs
test
sbb
jbe
jge
add
lods
rcl
push
sbb
cmp
fwait
mov
add
jge
nop
lods
cwde
jae
dec
(bad)
scas
sub
pop
adc
mov
inc
cmp
data16
jnp
movs
mov
xchg
mov
loopne
sbb
out
pop
push
loopne
jno
mov
fistp
data16
stc
fwait
rol
idiv
es
mov
stc
or
pop
jb
sub
xchg
outs
std
jg
mov
scas
imul
push
cmc
lahf
jns
out
ret
jo
rol
int3
in
pusha
fcomp
(bad)
cmp
outs
xor
lods
sub
cs
mov
in
stos
mov
jmp
and
jp
into
cmp
xor
jns
repz
mov
ins
jo
mov
dec
sub
mov
js
mov
sar
imul
nop
pusha
loop
push
pop
inc
and
(bad)
hlt
mov
push
sti
push
inc
jo
dec
inc
data16
mov
ds
cmp
xor
push
outs
loop
cmp
scas
js
cmp
push
std
aas
addr16
and
inc
bound
xlat
cmps
jae
shl
arpl
fadd
inc
mov
fbstp
inc
pop
sti
ds
sub
fidiv
inc
jne
cmp
mov
ins
inc
push
adc
popf
fisub
ds
mov
or
xchg
sahf
loopne
or
jl
jnp
cmps
jbe
test
fs
mov
je
cmp
mov
dec
cmp
xchg
push
push
je
xlat
out
and
dec
xor
cmp
push
iret
aad
call
nop
and
sbb
add
mul
outs
pop
cs
call
cmps
popf
jne
mov
in
push
gs
sahf
call
cmps
jmp
retf
loope
jne
(bad)
add
push
rcr
push
scas
push
add
rol
pop
xor
lods
inc
es
inc
repnz
sahf
cmc
pusha
jbe
push
dec
mov
cmps
push
fwait
mov
fsub
jbe
fcomp
mov
sbb
cmp
push
mov
out
sbb
imul
shl
mov
and
push
and
xchg
test
cld
push
retf
mov
fs
dec
popf
(bad)
fist
sub
inc
lods
push
out
xchg
daa
cmps
sar
cmp
and
sbb
xchg
cli
jno
jle
mul
aaa
xor
(bad)
xchg
int3
sbb
sub
movs
(bad)
mov
jbe
rcr
adc
(bad)
div
or
jg
add
jno
shr
in
mov
ds
and
inc
int3
adc
ror
xchg
lea
sti
dec
ds
mov
mov
mov
ins
call
push
cmp
mov
bound
inc
or
inc
sub
icebp
js
sub
cmp
sub
add
nop
cmp
inc
dec
sub
mov
(bad)
sub
jle
fisubr
inc
cmps
add
fstp
xlat
cdq
cmp
out
cmp
mov
retf
xor
cmp
push
ror
loope
add
fiadd
loop
sub
jnp
pop
and
ds
icebp
xchg
fs
pop
cmps
call
clc
sbb
daa
enter
lea
mov
daa
ss
pop
push
aaa
pop
jg
inc
pusha
dec
mov
jg
ret
jmp
sbb
pop
daa
lea
cld
jne
loop
sub
mov
push
(bad)
fstp
push
nop
jae
push
ins
fidivr
jo
adc
stos
xor
outs
sbb
jmp
push
gs
jecxz
dec
hlt
add
inc
scas
dec
stos
xor
or
sub
into
inc
loopne
jnp
pop
push
inc
push
rol
inc
mov
push
adc
mov
cmp
sbb
sbb
int
cmps
dec
push
xchg
push
mov
xor
mov
xchg
mov
enter
fisttp
mov
inc
cli
das
inc
dec
push
ins
jmp
test
cmp
or
ja
in
jmp
fldenv
bound
sar
movs
jl
popa
cwde
(bad)
call
popf
push
xor
mov
sahf
cli
cli
sbb
push
sub
cs
sahf
push
cmps
int
sbb
jns
cdq
mov
ds
nop
sub
test
lods
push
dec
push
push
shl
fisttp
stc
idiv
mov
cli
xchg
jno
loope
or
mov
mov
aaa
sub
rol
jmp
cmp
fs
ja
outs
jmp
gs
pushf
nop
pop
and
jecxz
jb
inc
sub
fidiv
or
mov
adc
rcl
lock
cdq
test
xchg
outs
lds
sbb
cdq
les
addr16
inc
pop
popa
jno
mov
xchg
outs
(bad)
sub
xor
je
mov
pop
aas
mov
xchg
cmp
jp
mov
ss
fsub
fdivr
sbb
adc
(bad)
adc
gs
inc
fist
xchg
into
cli
xchg
pop
dec
jo
xchg
(bad)
out
mov
in
and
call
push
sbb
sub
pop
je
repz
rcl
or
enter
popa
mov
jae
jle
cld
pop
xchg
dec
xchg
cmp
push
mov
mov
dec
and
pop
stos
mov
(bad)
hlt
add
inc
imul
jne
push
shl
je
into
sub
sub
xchg
aam
pop
mov
mov
ret
push
xor
mov
aam
xchg
push
inc
sbb
adc
(bad)
sbb
and
mov
test
lock
xchg
xor
sub
retf
mov
and
repz
icebp
or
movs
and
adc
(bad)
frstor
fmul
cmps
out
xchg
mov
mov
sub
xchg
mov
test
imul
sub
arpl
aam
mov
xchg
dec
sub
lock
and
pop
fisttp
cmps
clc
std
pushf
(bad)
ins
std
test
and
inc
or
mov
mov
inc
sbb
bound
sub
fnstsw
sahf
stos
scas
sub
sahf
xchg
repnz
pop
jle
xor
add
xchg
push
lods
pop
mov
(bad)
jle
mov
iret
inc
cwde
ficomp
sub
dec
sbb
mov
add
mov
jno
sbb
mov
xchg
lods
nop
(bad)
mov
push
fs
jmp
lods
pop
mov
xor
jno
pop
repnz
mov
mov
lock
bswap
push
mov
int3
adc
clc
inc
push
retf
and
xor
ret
pop
lods
xchg
add
pop
cmp
xchg
dec
mov
mov
inc
add
or
fsub
cli
cmp
jnp
pop
push
mov
xchg
shr
sub
out
add
sti
arpl
sbb
clc
fiadd
dec
mov
gs
mov
inc
dec
inc
out
daa
test
lea
iret
lods
or
dec
cmp
jecxz
push
rol
adc
sub
mov
stos
imul
cmp
and
sbb
push
cmps
push
test
xor
test
xchg
xchg
jo
mov
xor
fist
loop
stc
scas
cs
mov
dec
or
mov
dec
stos
mov
jae
inc
mov
pushf
mov
mov
pop
sub
(bad)
and
lods
or
pop
xor
enter
pop
leave
mov
fbld
jmp
add
and
pop
pop
sbb
inc
hlt
call
mov
lds
mov
outs
jne
mov
lahf
xchg
clc
xor
movs
and
sbb
pop
arpl
jnp
pop
jae
xchg
xor
dec
ficom
movs
mov
jns
bound
(bad)
jl
or
push
and
aas
(bad)
es
imul
leave
jb
push
mov
pop
stos
imul
call
dec
std
cmc
cmp
shl
cmp
ss
arpl
mov
inc
mov
(bad)
aas
ds
add
pop
pop
sbb
retf
les
(bad)
mov
lods
retf
mov
dec
xor
push
pop
xlat
sub
aaa
fcmovnbe
xchg
mov
lds
popa
add
out
scas
arpl
rol
jb
mov
rcl
mov
stc
leave
cmp
test
jp
out
inc
loopne
(bad)
sti
aas
shr
xor
imul
test
into
jne
ins
and
push
(bad)
jns
dec
or
pop
jne
xchg
popf
sahf
arpl
into
aam
fistp
shl
dec
cli
or
mov
popf
mov
fiadd
sbb
mov
mov
adc
mov
aad
mov
cdq
dec
mov
stos
loopne
jno
shl
or
fwait
(bad)
dec
cmp
hlt
mov
push
fadd
inc
dec
cmp
out
add
in
aad
pop
xchg
inc
loope
out
out
mov
push
mov
add
xor
lea
mov
dec
xor
retf
imul
xchg
sub
sbb
and
jb
jo
jno
push
and
std
imul
sar
mov
dec
and
mov
jle
mov
jo
mov
or
std
ret
jg
and
cmp
loopne
(bad)
jge
adc
xchg
add
pop
dec
fs
sbb
add
ret
cmp
sub
repnz
mov
mov
sub
imul
in
retf
jbe
and
lahf
test
or
repnz
mov
mov
in
shr
sub
out
sub
adc
cwde
in
dec
dec
cmp
mov
mov
xor
jl
hlt
ja
cmp
mov
jno
inc
sbb
jb
cdq
cmp
jecxz
jl
pusha
ror
xor
enter
xchg
add
pop
dec
push
or
sub
push
inc
lds
int
retf
outs
es
mov
int
add
pop
or
adc
push
push
lods
mov
mov
mov
ss
out
mov
movs
mov
js
inc
call
sub
es
fcom
ror
sub
mov
cdq
adc
aaa
lods
imul
mov
dec
imul
ror
icebp
fsub
mov
retf
lods
int
fwait
xchg
cmp
or
or
lea
scas
test
push
retf
test
daa
and
cmp
stos
les
bound
lds
mov
adc
xor
pop
push
xchg
test
jns
shl
pop
repnz
add
or
retf
std
jecxz
inc
mov
add
into
cmp
popa
cmps
or
scas
loopne
sahf
sub
adc
stos
pop
int3
xlat
out
jecxz
mov
add
pop
mov
or
mov
or
clc
leave
adc
xchg
xor
hlt
lods
leave
push
xchg
nop
(bad)
sar
jo
test
xchg
ins
mov
stos
and
or
push
outs
test
jmp
lahf
cmps
and
push
enter
pop
iret
xchg
nop
xor
mov
pusha
jl
or
xchg
and
lods
loop
cwde
and
je
(bad)
dec
dec
stc
mov
test
shl
mov
push
push
push
jp
(bad)
fistp
mov
sbb
mov
call
fnstsw
std
jge
es
bound
and
push
test
or
inc
push
and
jnp
loopne
jae
pop
jo
fwait
mov
inc
cmp
pop
stos
inc
das
xchg
(bad)
rol
xchg
cs
cli
dec
lock
out
push
shr
xchg
cmps
dec
or
iret
ret
icebp
outs
popf
test
(bad)
pusha
sahf
add
int3
jns
sub
in
pop
out
xchg
push
test
ss
je
push
or
pop
jb
not
push
add
call
jnp
xor
pop
xchg
mov
rcl
les
outs
cmp
mov
enter
in
jge
inc
mov
jg
add
mov
push
pop
mov
retf
jnp
ds
push
rol
xchg
cmp
dec
xlat
pushf
mov
dec
dec
xchg
(bad)
xlat
add
dec
push
fist
leave
call
shl
jne
imul
mov
cmc
sbb
int
pop
mov
pop
in
mov
adc
daa
mov
int3
jg
in
mov
push
jno
(bad)
fdiv
adc
mov
mov
push
jo
dec
popa
dec
cmp
out
(bad)
push
ja
lds
xchg
pop
and
mov
cmps
lahf
lods
in
pop
popa
cld
arpl
or
movs
xchg
dec
das
add
push
or
(bad)
rol
cmp
fmul
mov
xchg
cmp
clc
retf
pop
lea
aas
cs
jno
call
mov
inc
in
push
lds
inc
push
jbe
mov
jge
pusha
fst
push
imul
cli
jns
and
mov
mov
std
xchg
xchg
or
pop
daa
hlt
repz
fisttp
sub
cmps
cs
xchg
ins
adc
pop
adc
aas
mov
adc
mov
ja
pop
jnp
outs
cmp
es
ss
xor
push
sti
inc
inc
or
xchg
dec
das
repnz
xor
xchg
sbb
dec
mov
ja
mov
div
add
leave
outs
ss
adc
pop
imul
pop
loope
push
push
pop
out
mov
mov
cmp
jmp
or
in
cmp
in
fmul
and
nop
push
inc
cmps
pop
xchg
sub
sbb
xlat
cmc
ins
jae
dec
xchg
cmps
pop
adc
mov
adc
(bad)
nop
out
cmc
sbb
inc
inc
adc
loop
icebp
cli
pop
int3
add
push
jns
fdivp
cwde
repz
sub
mov
mov
call
or
push
adc
jmp
pop
out
aam
fwait
mov
xor
jo
outs
jbe
iret
(bad)
and
cmp
or
inc
push
aaa
ds
inc
cld
(bad)
xchg
ins
mov
inc
retf
xor
adc
out
in
xchg
mov
sbb
jnp
mov
add
into
jecxz
out
adc
pop
mov
ins
push
sbb
xor
mov
pop
mov
fwait
mov
and
test
cmp
sub
ret
cld
sbb
add
movs
jmp
xchg
xlat
add
aam
jae
call
mov
rol
xchg
shl
adc
cmp
test
sbb
cmps
fcomp
jae
lds
pop
ja
adc
or
outs
pusha
scas
sub
jmp
pop
sbb
xor
and
dec
pop
in
dec
mov
std
mov
arpl
enter
mov
mov
push
into
(bad)
into
push
add
inc
test
jecxz
dec
ret
and
and
push
pop
retf
dec
mov
pop
std
leave
add
dec
stc
int
add
ror
or
pop
into
arpl
pop
dec
sbb
les
ret
int
dec
inc
mov
call
mov
add
pop
mov
shr
imul
out
call
mov
inc
sub
(bad)
pop
pusha
div
pop
clc
cmp
jp
sbb
push
gs
ret
push
je
sahf
or
ret
fmulp
dec
sar
call
add
test
dec
mov
add
jns
push
lea
cld
push
fisubr
mov
dec
retf
jle
clc
mov
sti
sbb
sub
fwait
xchg
hlt
mov
test
in
mov
xor
repnz
rcl
dec
mov
inc
push
jmp
mov
mov
call
cmp
pop
xchg
adc
add
outs
leave
loope
jle
add
push
leave
mov
pop
ror
jno
gs
enter
int3
cmp
(bad)
cmps
imul
inc
in
xchg
inc
test
mov
mov
xchg
push
lock
loope
inc
outs
dec
jbe
inc
popf
imul
push
neg
frstor
vfrczpd
sub
adc
outs
test
adc
test
mov
(bad)
lock
ins
aam
rcl
fcmovb
mov
push
inc
pusha
clc
pusha
cld
imul
rcl
xor
in
and
inc
xchg
dec
add
dec
cwde
mov
add
cmp
inc
ds
mov
or
cmp
pop
fist
pushf
shl
stos
push
jb
xchg
(bad)
mov
xlat
addr16
sbb
je
mov
sub
or
sub
fidivr
push
add
dec
pop
push
xor
adc
ins
mov
jmp
mov
xor
mov
loop
push
pusha
pusha
sahf
xchg
ret
in
jne
xor
jmp
xor
fimul
test
iret
inc
sub
inc
sti
dec
inc
mov
scas
neg
cmp
mov
jp
imul
sub
dec
mov
push
dec
jno
jns
cmp
shl
repnz
rol
rcl
pusha
sti
sub
out
into
add
mov
or
dec
pushf
jle
adc
add
mov
sbb
addr16
add
popa
stc
inc
mov
or
xchg
test
pop
(bad)
fist
(bad)
pusha
dec
mov
cmc
pop
or
shr
xchg
into
mov
pop
enter
or
cs
mov
outs
pop
scas
xchg
lahf
daa
ins
xor
adc
outs
sar
xor
pop
call
ss
loope
ficom
and
push
jnp
daa
push
mov
xchg
jmp
icebp
jmp
and
sbb
adc
cs
push
xor
cmps
dec
(bad)
std
fidiv
or
or
mov
mov
inc
mov
ss
out
jg
sub
ds
aas
jecxz
mov
nop
sbb
enter
aad
data16
pop
pusha
jae
push
push
sbb
in
ret
xor
(bad)
pusha
cmp
sub
push
shr
push
je
pop
mov
push
iret
out
cmps
mov
rol
outs
scas
shl
inc
fs
cmp
shr
jno
sub
stos
mov
mov
jmp
mov
sbb
inc
popa
push
or
jns
les
cmp
outs
mov
stos
shl
xchg
or
addr16
shl
adc
push
repz
sub
out
out
or
jge
push
mov
inc
int3
test
lock
sub
xchg
dec
push
scas
mov
mov
lods
push
jbe
sub
sbb
pusha
lock
lahf
or
mov
fistp
add
neg
jnp
movs
mov
ficomp
mov
jge
cld
movs
(bad)
mov
es
js
mov
adc
leave
ja
xchg
jecxz
fsubr
jnp
cmp
pop
cmp
push
les
adc
jge
lahf
fwait
cmp
pusha
mov
shl
fwait
test
or
and
leave
cmc
cmps
inc
std
inc
sbb
xchg
mov
inc
sub
xor
neg
es
xor
inc
dec
int3
mov
cmp
leave
adc
adc
lea
push
pop
xchg
sbb
or
(bad)
out
lods
neg
jmp
push
(bad)
xchg
(bad)
pop
in
xchg
jmp
sti
std
push
cmp
cli
or
cmp
int3
sbb
loope
mov
fst
mov
jns
std
arpl
mov
leave
lock
and
mov
jne
adc
repz
xchg
xor
xchg
clc
and
out
push
xlat
mov
out
retf
cwde
out
or
lea
pop
and
push
loope
call
lods
pop
je
xlat
cmp
cmp
jmp
movs
fisttp
dec
ss
scas
pop
rcr
mov
lock
test
push
mov
pop
std
test
cmp
sbb
fadd
cmp
(bad)
aad
gs
cmp
or
inc
leave
dec
mov
jns
retf
test
push
loop
xchg
mov
scas
mov
push
test
and
mov
mov
into
mov
movs
ins
sbb
sti
test
dec
jo
test
xchg
lods
addr16
mov
ror
jge
and
stos
sub
call
test
mov
jmp
pop
pop
into
jecxz
jae
mov
int3
dec
mov
and
dec
popa
cmp
xchg
aam
cmps
int
mov
jb
mov
mov
jo
loopne
or
adc
xor
int
adc
in
jmp
sub
imul
adc
outs
push
cmp
std
pop
cmp
shl
arpl
(bad)
aad
lods
test
mov
adc
test
(bad)
std
dec
out
lds
cdq
sub
jle
cmps
inc
imul
ret
call
ror
add
(bad)
shr
xor
adc
jg
pop
cmp
or
jmp
and
mov
leave
xor
push
loope
sbb
imul
daa
mov
pop
scas
pop
jg
xchg
(bad)
stos
adc
enter
(bad)
xor
xor
and
(bad)
jo
xchg
mov
push
(bad)
cmp
adc
or
lahf
jl
test
and
xchg
fiadd
cmps
dec
cmc
dec
ror
leave
outs
mov
jg
jb
push
mov
mov
mov
aaa
jmp
daa
lahf
int
jle
cmp
jns
xor
lea
icebp
push
inc
pop
ret
or
and
pop
sbb
nop
push
adc
add
adc
cs
or
jne
inc
adc
ins
push
cmp
jbe
mov
jo
mov
pusha
std
inc
cmps
dec
jle
cmovl
and
sbb
mov
lods
add
leave
shl
cli
cmp
es
sbb
fxch
inc
mov
xchg
cmp
mov
sbb
aad
arpl
dec
and
dec
pop
mov
xchg
xor
and
mov
inc
push
outs
ret
lahf
inc
jb
popf
rcr
movq
ins
repnz
sub
or
cdq
push
or
loope
pop
add
pop
clc
push
add
mov
push
cli
jl
jo
enter
mov
sbb
or
sub
mov
cli
je
loop
sub
das
adc
rol
stos
shr
(bad)
jle
mov
and
in
pop
(bad)
lods
pop
mov
pushf
out
test
push
pop
retf
add
dec
or
(bad)
or
pop
lea
std
stos
stc
lea
jmp
movs
fmul
pop
fstp
inc
push
rcr
sbb
adc
call
mov
cs
push
push
sbb
mov
inc
ds
ffreep
jmp
jbe
pop
push
inc
bound
rcr
xor
sub
hlt
mov
retf
movs
pop
int3
jge
stc
pop
jmp
and
inc
mov
and
sub
xchg
(bad)
push
and
shr
or
inc
jo
cmp
sub
cmp
push
xor
jecxz
sbb
mov
sub
or
and
xchg
repz
add
add
hlt
mov
retf
jo
and
psrlw
int3
lods
mov
icebp
bound
add
fsubr
mov
shr
hlt
pop
leave
cwde
or
or
sbb
ret
adc
sbb
imul
pop
cmp
aas
push
mov
ins
rcl
dec
jae
pusha
xchg
call
in
add
add
push
xor
pop
imul
ficomp
add
and
mov
sbb
mov
cmp
mov
call
dec
xchg
repz
sbb
loope
nop
fisub
add
pop
cmps
jae
pop
mov
outs
jp
leave
pop
test
push
xchg
jge
mov
retf
xchg
int
movs
mov
jo
xlat
mov
pop
pop
les
cmps
add
mov
in
pop
loopne
dec
inc
lods
xchg
aad
mov
pop
and
or
loopne
adc
adc
pop
sbb
test
int3
outs
por
inc
push
jbe
and
pop
ins
xchg
xchg
jae
cmp
arpl
cmp
sti
ror
adc
leave
mov
clc
mov
je
or
jge
(bad)
data16
jge
rcl
mov
lea
call
sbb
hlt
add
adc
adc
ins
imul
out
lods
mov
or
jnp
mov
pop
call
mov
jp
ror
xchg
and
adc
or
sbb
mov
jp
mov
repz
sub
in
mov
cld
pop
mov
ins
push
call
inc
jo
jmp
adc
retf
cwde
xor
xchg
cmps
clc
fisub
fmul
(bad)
push
dec
das
mov
movs
leave
mov
into
push
push
sahf
retf
repnz
ds
in
or
ret
in
aad
fisttp
jmp
lods
ins
push
push
movs
mov
cmp
jne
in
(bad)
push
dec
push
mov
add
ficomp
mov
mov
adc
mov
xor
call
scas
cmp
inc
pop
lea
iret
lea
lahf
mov
pushf
fcom
sbb
sub
pop
mov
mov
dec
popa
mov
or
mov
das
and
mov
in
add
jmp
dec
int
jae
ret
sbb
sub
pop
push
repz
xor
mov
push
cli
popa
fisttp
out
and
mov
pop
mov
loope
stc
mov
mov
retf
shl
mov
fsubr
rcl
test
mov
rol
popa
push
mov
xchg
jmp
xor
mov
or
cmp
inc
mov
call
jp
pop
aaa
inc
aam
push
mov
xchg
and
push
push
mov
sub
pop
mov
xor
jnp
or
enter
pop
adc
test
addr16
ins
cmp
ss
fs
retf
sbb
ja
xchg
push
out
int3
mov
gs
adc
adc
xchg
push
sub
pop
and
jae
shl
retf
push
loope
out
addr16
jne
adc
loop
and
and
adc
(bad)
aam
xchg
add
inc
jl
push
out
xchg
sar
addr16
(bad)
test
call
outs
dec
add
rcl
mov
sbb
jns
mov
dec
cld
sti
push
ret
pop
aas
sbb
xchg
pop
mov
mov
xchg
adc
jle
ds
imul
cli
movs
repz
jp
out
es
mov
push
fs
out
cdq
mov
pop
in
jb
out
lds
in
cmc
and
dec
bound
sub
mov
mov
mov
xor
je
ss
cli
mov
test
ficomp
or
aam
mov
inc
mov
add
sub
add
dec
push
cld
lds
lahf
neg
in
lahf
daa
fld
test
nop
jne
push
xchg
cmp
xor
inc
shr
adc
stos
dec
push
pop
xchg
jno
sbb
out
retfw
lds
inc
cwde
inc
popa
sbb
mov
xor
pop
int
pop
(bad)
add
out
icebp
mov
pop
sub
or
cdq
jg
(bad)
dec
xchg
mov
mov
jg
idiv
mov
and
rol
shl
push
push
bound
aad
or
and
dec
cmp
xchg
jl
fwait
icebp
push
push
js
mov
xor
push
push
aad
mov
repnz
call
lds
dec
call
mov
jmp
ds
hlt
jge
xchg
xchg
cdq
fild
adc
lods
arpl
sbb
jmp
push
int
out
scas
out
rol
retf
gs
pop
lods
pushf
mov
and
repz
loop
and
int3
out
adc
pop
xchg
out
ror
jmp
sub
shl
and
ja
jo
inc
dec
push
dec
fnstsw
dec
je
rcl
movs
aad
stc
lods
push
ror
xlat
push
push
jmp
and
jle
ja
or
pusha
and
pop
push
fwait
test
push
(bad)
adc
pop
test
imul
mov
dec
test
mov
fisttp
out
out
sub
add
pop
xchg
cmp
pop
cmp
mov
cmp
loopne
cld
pop
adc
sbb
neg
iret
jle
rcl
in
retf
test
cmps
in
adc
dec
dec
mov
mov
pop
hlt
ja
add
iret
lea
dec
mov
push
stos
loope
shl
daa
cmp
jg
cwde
dec
gs
push
push
mov
loopne
add
xor
jecxz
cmp
jecxz
dec
mov
cmc
pop
cld
aam
aad
test
pop
into
rol
sar
jmp
pushf
add
mov
movs
sub
xchg
fwait
(bad)
xor
lods
jmp
xor
pop
pop
add
add
lods
sbb
loope
mov
xchg
add
aad
sub
inc
push
sub
outs
scas
or
and
jae
jb
dec
movs
shl
std
xor
add
sub
and
or
cli
test
fisubr
or
(bad)
not
push
(bad)
movs
fs
movs
mov
lahf
mov
mov
and
fimul
inc
test
mul
fstp
out
sbb
gs
pop
push
cmps
repz
pop
cs
adc
mov
sbb
add
lds
in
xor
inc
ja
ins
test
aaa
frstor
js
mov
mov
ins
lds
imul
xor
push
lods
add
loopne
jmp
push
mov
ds
cmp
aad
rcl
mov
sub
ret
mov
inc
jmp
pop
popf
dec
sbb
or
adc
add
lahf
fild
dec
adc
imul
jbe
push
cld
div
(bad)
lods
or
ins
jl
rol
iret
std
loop
(bad)
in
dec
lea
dec
sbb
retf
scas
push
std
sbb
push
shl
dec
lds
push
adc
mov
sbb
pop
into
xchg
push
mov
int3
xchg
inc
adc
daa
push
dec
mov
inc
push
mov
adc
dec
lock
and
mov
inc
adc
cmp
jp
push
push
push
xor
mov
or
mov
mov
int
test
ds
sub
test
aad
dec
add
arpl
maxps
stos
ss
xchg
adc
rcl
gs
aaa
(bad)
mov
sub
dec
push
inc
mov
hlt
test
ss
mov
sub
popa
call
enter
das
(bad)
jecxz
pop
add
pop
das
inc
and
pop
jns
aaa
das
hlt
and
ins
inc
push
aaa
add
or
fisub
hlt
xchg
sti
test
jmp
fst
sbb
sbb
sti
data16
je
add
(bad)
stos
cdq
cmps
rcl
mov
adc
aam
and
dec
mov
mov
push
inc
icebp
les
out
std
ss
dec
dec
int
ds
imul
jno
mov
jb
retf
nop
inc
jecxz
and
or
ss
jp
into
adc
call
(bad)
dec
pop
jb
(bad)
(bad)
das
mov
inc
iret
repnz
aaa
adc
cwde
sti
cmps
inc
push
ds
call
add
mov
fwait
dec
jns
retf
loopne
mov
cmp
and
xchg
add
pop
add
mov
mov
adc
sti
adc
retf
push
cwde
sbb
xchg
mov
sbb
fild
enter
adc
xchg
push
add
add
adc
jne
imul
(bad)
repnz
mov
cmp
add
mov
xlat
cli
ss
stc
ds
stos
push
sbb
fild
cmp
xor
cmp
sub
xor
push
or
call
jo
xchg
inc
push
or
jmp
test
push
lods
mov
dec
xor
cmp
rcl
pusha
adc
sbb
movs
out
mov
jecxz
out
arpl
scas
hlt
aas
mov
repz
sub
outs
xor
push
cmp
(bad)
jg
mov
ja
jmp
mov
mov
(bad)
in
pop
mov
lock
xchg
test
pop
push
push
mov
jl
(bad)
and
imul
pop
mov
xor
pop
add
lea
xchg
mov
mov
push
call
jo
mov
popf
fs
add
and
cld
test
pusha
das
jecxz
retf
fmul
scas
xor
fwait
lea
aam
push
or
mov
ret
fdivr
mov
xor
sub
aaa
jnp
add
add
(bad)
inc
dec
mov
gs
aas
retf
sbb
pop
adc
pop
and
xor
loope
mov
mov
test
std
pop
pop
jecxz
pop
call
shl
hlt
retf
lds
cli
add
jmp
pusha
inc
lea
adc
or
aam
inc
sbb
xchg
pop
push
xchg
inc
or
push
xchg
call
test
fwait
mov
or
xchg
imul
jg
adc
loopne
data16
idiv
sub
outs
inc
(bad)
push
sahf
or
fstp
push
shl
jnp
xchg
outs
iret
pop
loopne
inc
stos
or
dec
gs
sbb
ror
mov
add
xchg
mov
ret
ds
aam
ss
mov
fsubr
(bad)
mov
pusha
mov
cmp
jmp
push
dec
cld
jo
repnz
xchg
dec
lods
ins
jge
sbb
fbstp
jmp
dec
dec
and
nop
pop
pop
push
push
or
ds
jne
mov
icebp
push
sub
in
mov
pop
jnp
xor
jnp
sub
scas
xor
pop
xor
cwde
mov
pushf
and
jns
rcr
ins
cmp
retf
aad
movs
jle
adc
fmul
xor
xchg
cld
push
dec
add
adc
mov
fmul
cmp
xor
aas
(bad)
jmp
sti
sar
cmc
add
pop
inc
mov
repz
mov
pop
xor
call
adc
xchg
into
das
inc
mov
(bad)
push
ret
mul
or
repz
loopne
push
sti
jbe
shl
inc
xchg
xor
jl
lods
cwde
sub
cmp
push
pmullw
inc
test
mov
and
and
xor
xchg
add
add
fmul
inc
jl
pmaxsw
aaa
xchg
add
adc
pop
fsub
test
retf
gs
test
rcr
addr16
adc
mov
xchg
cmp
test
add
(bad)
sub
fadd
movs
push
push
xchg
mov
mov
sbb
cmp
mov
int3
push
xor
(bad)
jo
scas
push
call
cmp
xor
or
test
mov
test
outs
inc
adc
fistp
outs
jnp
inc
push
test
mov
sub
cmp
scas
mov
and
xor
sbb
int3
ss
jp
mov
aas
push
cld
pusha
pop
cmp
test
in
test
mov
fld
cld
lea
add
mov
mov
fwait
retf
bound
mov
mov
cs
mov
adc
loop
xor
fsubr
iret
sbb
xchg
jo
aad
mov
cmp
inc
push
jecxz
mov
stos
jmp
das
fisub
mov
ret
in
push
addr16
mov
aad
xchg
or
mov
push
mov
inc
cmp
adc
lock
scas
mov
(bad)
xchg
in
mov
xor
sbb
not
jno
retf
mov
push
xchg
loop
aad
ss
icebp
jne
xor
inc
sti
cmps
sar
(bad)
(bad)
mov
xchg
retf
sbb
sbb
add
cmc
cmp
scas
cdq
shl
jle
lods
mov
jl
pop
mov
fmul
scas
daa
outs
inc
jmp
adc
add
push
nop
jge
lds
dec
adc
pop
xlat
aaa
jmp
adc
scas
fs
pop
mov
jmp
and
push
sbb
retf
xchg
sub
lds
mov
dec
(bad)
retf
mov
in
stos
adc
jae
sbb
add
jno
mov
sbb
cmps
js
lds
add
push
scas
mov
test
test
rcr
cmp
xchg
test
mov
jne
and
in
sub
sub
inc
xchg
je
sti
jo
dec
or
and
aad
lds
mov
mov
sbb
sub
ficomp
xchg
pop
test
xchg
fwait
div
sbb
sbb
retf
fld
das
adc
mov
shr
jno
and
pushf
pusha
jno
adc
fstp
pop
pusha
sbb
mov
mov
(bad)
jnp
retf
std
or
sub
repz
xor
out
std
jl
dec
mov
mov
scas
cli
jle
loop
(bad)
lods
cmp
shl
cmps
test
sub
rcr
and
rcr
xchg
gs
dec
push
pop
gs
push
ja
sbb
neg
scas
fldlg2
pop
sub
jns
cmp
cdq
(bad)
jp
dec
push
pop
push
xchg
add
mov
stos
sub
call
jae
mov
cdq
shr
xlat
mov
fwait
jmp
cmps
push
loopne
push
adc
jo
rol
mov
popa
out
inc
shr
xchg
gs
push
popa
sbb
(bad)
mov
jp
or
loope
cmp
fs
les
mov
sbb
mov
push
mov
push
mov
lods
retf
aam
or
int3
outs
cmps
cli
pop
leave
push
cmp
sbb
pop
dec
jmp
movs
push
and
outs
out
or
inc
popf
fisubr
scas
xor
sti
mul
dec
loop
call
add
xchg
movs
xor
sti
xchg
inc
adc
dec
xchg
jge
fild
xor
shl
movs
sub
loope
adc
mov
fiadd
retf
aas
fdivrp
int3
loopne
sbb
scas
pop
and
popf
das
jno
push
out
cmc
sahf
test
jge
in
imul
jne
(bad)
and
mov
pop
and
into
aaa
adc
jb
ret
pop
imul
lods
test
sub
jle
cmp
sub
sbb
call
les
inc
and
aas
push
stos
cmp
pushf
neg
sub
pop
xchg
mov
in
cmp
std
outs
js
sbb
add
push
and
sbb
fld
arpl
lods
(bad)
in
cmp
inc
es
movs
(bad)
retf
mov
mov
in
push
loope
cdq
xlat
inc
xchg
fdivr
mov
loopne
sbb
out
jnp
sub
adc
fidiv
aaa
jge
call
jbe
jno
call
jo
hlt
push
nop
in
dec
loope
mov
stos
cmp
or
fwait
mov
rcr
ja
popf
push
clc
clc
pop
adc
pop
retf
leave
push
sub
or
movs
sbb
cmp
sub
dec
psubw
push
mov
imul
adc
jle
or
(bad)
ja
test
out
inc
sti
cdq
packsswb
aam
fisubr
fist
(bad)
and
pop
mov
cdq
aaa
mov
(bad)
icebp
adc
pop
aaa
sar
ret
sub
mov
xlat
and
out
aas
xor
mov
ss
xor
sub
fimul
fwait
or
mov
dec
and
dec
dec
lock
int3
and
std
js
je
inc
add
(bad)
cmc
inc
gs
inc
pop
jg
pop
sbb
fimul
mov
adc
inc
cdq
or
popf
jno
cmc
inc
std
out
js
mov
test
cwde
adc
(bad)
cmp
sub
pop
inc
je
out
xchg
mov
in
idiv
mov
xchg
rcr
push
mov
ret
jge
je
retf
jae
push
inc
pop
cmp
push
hlt
pop
mov
push
mov
push
cmps
leave
jne
pop
addr16
jge
and
pop
es
lods
adc
jl
rcr
cmps
shl
imul
adc
std
inc
pop
push
cmps
adc
das
xor
out
adc
adc
test
cmp
mul
outs
(bad)
sti
adc
icebp
add
mov
nop
lds
push
shr
add
movs
inc
or
out
push
jle
sub
mov
lods
push
stos
(bad)
cmp
mov
popf
call
and
scas
retf
lds
pop
es
imul
ja
and
adc
add
fdiv
aad
movs
mov
adc
pop
mov
retf
mov
jnp
sbb
mov
xlat
outs
lods
sub
in
nop
adc
dec
sbb
imul
das
retf
shl
mov
adc
sbb
into
and
inc
mov
std
retf
rcr
sti
xchg
mov
repz
imul
mov
inc
inc
fnstcw
movs
mov
cli
retf
(bad)
in
stos
inc
lds
out
cmc
lods
out
ficomp
push
js
adc
push
ds
retf
les
repnz
cmp
into
jo
fadd
push
ja
adc
in
sahf
shl
pushf
aad
stos
sbb
jae
cdq
shr
sbb
sbb
clc
retf
jmp
sbb
jnp
dec
hlt
outs
xor
cdq
push
iret
sti
push
pop
cwde
push
add
icebp
cmp
adc
outs
sbb
out
fimul
jmp
push
and
rcr
mov
or
das
stos
idiv
je
add
xor
dec
mov
or
aad
iret
ins
inc
loop
jbe
push
xor
enter
jmp
jle
mov
cdq
push
fadd
(bad)
cli
xchg
mov
fwait
test
jnp
mov
inc
fistp
mov
mov
shl
jp
cmp
mov
test
jecxz
sbb
dec
mov
dec
ins
pushf
in
test
test
add
xchg
fadd
xchg
cli
jmp
in
xchg
rcl
arpl
arpl
push
mov
bound
std
jno
or
push
and
push
sub
lods
in
or
mov
nop
lds
int
dec
jecxz
cs
rcl
call
mov
mov
dec
mov
xchg
arpl
push
addr16
shl
mov
cwde
jmp
out
jae
xchg
std
jo
push
out
div
test
xchg
orps
xchg
and
push
movs
into
inc
lea
call
inc
int3
ror
(bad)
xor
dec
dec
cs
push
imul
jl
test
mov
cmp
ins
fist
xchg
push
add
in
jno
or
or
jecxz
jbe
imul
xchg
fxch
add
(bad)
daa
sub
scas
adc
rcr
dec
dec
jne
ins
sar
cmp
push
repnz
gs
out
cmp
jns
clc
adc
xchg
xchg
stos
sbb
jmp
inc
ror
dec
or
jmp
xchg
cmp
inc
mov
gs
or
iret
adc
ins
dec
jbe
into
sbb
hlt
xchg
cdq
mov
jmp
out
and
pusha
sar
jb
push
ins
lods
jnp
or
rol
clc
xchg
sub
test
adc
repnz
pushf
jmp
pop
(bad)
std
sub
dec
mov
xchg
and
daa
dec
scas
mov
sub
les
test
fist
add
stos
mov
enter
sub
pop
(bad)
mov
mov
sbb
cdq
pop
movs
mov
pushf
das
iret
mov
inc
lahf
arpl
aas
dec
and
fidivr
mov
lea
xor
ja
nop
call
or
in
or
or
jmp
cli
mov
cdq
jp
ret
pop
push
(bad)
xor
sbb
and
sbb
jmp
daa
pop
out
call
mov
sahf
adc
ret
sub
dec
icebp
push
lods
fs
sbb
xlat
mov
and
cld
xchg
xlat
adc
not
dec
mov
cmp
out
fild
out
mov
test
lahf
push
in
or
sub
adc
aad
add
adc
cmp
jge
int3
cdq
std
xor
sub
js
repz
push
sbb
(bad)
jne
push
sub
jnp
dec
icebp
test
mov
test
cld
movs
(bad)
hlt
lods
scas
daa
rcr
pop
loop
fwait
sbb
(bad)
sahf
and
adc
call
push
nop
mov
jle
dec
loopne
mov
push
xor
(bad)
mov
sub
cmp
adc
adc
and
pop
mov
push
cmp
add
push
imul
cdq
adc
lock
mov
test
jno
ss
sub
jecxz
out
xchg
xchg
ins
jbe
xor
out
cmp
jecxz
repz
loop
dec
push
dec
mov
jno
cmps
bound
imul
(bad)
aad
cdq
xor
add
rol
push
setl
scas
sub
mov
cmps
and
cmp
shl
xor
les
sbb
lods
test
lods
test
and
mov
in
jg
lahf
cdq
je
ror
pop
inc
cmps
mov
out
pop
cmps
mov
sub
das
xor
xor
or
sbb
cld
cmps
loopne
jmp
iret
pop
ret
jl
mov
xchg
stos
out
scas
or
dec
or
xor
sub
jbe
das
ss
cmps
dec
movs
xchg
push
add
add
or
dec
stos
dec
xor
jmp
or
call
sbb
and
ret
ja
mov
mov
idiv
test
cld
jno
xchg
jg
test
pop
ds
cmp
inc
sahf
and
das
(bad)
mov
push
das
scas
mov
clc
fnstsw
(bad)
push
dec
ror
mov
in
shl
or
mov
cmp
xlat
sub
out
mov
adc
cmp
stos
sbb
jecxz
jo
push
cmp
mov
inc
inc
retw
test
retf
pop
add
enter
sub
pop
outs
(bad)
in
sbb
mov
adc
mov
test
rcl
pop
das
fdivr
and
in
ins
or
bound
sbb
fdivp
test
sbb
push
test
xor
ins
jg
call
jae
dec
push
pop
retf
ja
fcomp
outs
shr
and
ss
test
sbb
sbb
sub
xlat
mov
pushf
test
and
rcr
xchg
and
mov
sub
push
leave
sbb
pop
or
adc
mov
mov
dec
scas
hlt
mov
sbb
loop
mov
cmp
addr16
ret
xlat
xchg
mov
dec
mov
in
cmp
outs
xor
repnz
pop
xchg
mov
pop
pop
test
push
inc
jb
mov
test
je
jg
inc
into
add
push
cmp
lock
cmps
(bad)
and
sub
imul
dec
adc
lds
sub
sti
push
sub
push
or
adc
clc
mov
cmp
mov
outs
and
jl
je
pop
jmp
sub
je
das
outs
fnstcw
(bad)
in
adc
lods
out
mov
sub
int
pushf
stc
dec
ret
dec
xor
(bad)
pop
xor
push
mov
add
adc
je
(bad)
jb
jbe
scas
lods
loope
adc
xchg
pop
and
adc
ds
out
movs
imul
sub
leave
pop
movs
xchg
neg
mov
cmp
xchg
cmp
xor
dec
mov
movs
dec
push
mov
mov
dec
push
and
idiv
mov
(bad)
lds
push
clc
pusha
data16
stos
mov
scas
cmp
mov
sub
pusha
push
lods
ret
clc
mov
fiadd
sti
aad
adc
daa
sub
movs
dec
leave
sub
lods
dec
jnp
inc
popa
call
and
jg
mov
ja
cmp
xor
dec
ins
fld
shl
xor
jmp
inc
add
cld
cmps
in
mov
cmp
leave
push
fs
leave
xchg
cmp
ret
jne
inc
call
imul
mov
jmp
mov
sbb
mov
in
mov
and
adc
jns
add
in
fsub
mov
mov
inc
mov
xchg
mov
cmp
xor
sbb
sub
cmc
retf
mov
call
add
jo
xor
mov
pop
fcomi
repnz
stos
and
test
xlat
jb
or
pop
sbb
sbb
fxch
in
ficom
pushf
jge
mov
in
mov
push
and
inc
inc
push
jns
lds
in
aam
lock
or
ins
sti
and
lea
adc
xchg
inc
mov
imul
out
add
hlt
call
ficom
retf
push
je
std
loop
mov
push
ins
in
cs
pop
fnstenv
jle
std
ja
mov
das
adc
jge
cmp
inc
inc
in
or
repnz
jno
dec
repz
xchg
cmp
inc
aaa
retf
outs
lahf
jp
adc
sbb
(bad)
shr
das
or
sub
or
xchg
retw
dec
cld
mov
lahf
xor
ret
push
pop
inc
rcr
sbb
jbe
mov
xlat
jmp
and
addr16
lahf
adc
loope
in
mov
add
pop
inc
jmp
out
pusha
enter
lods
mov
outs
jae
sti
jmp
call
xchg
mov
push
mov
test
jb
sahf
rol
xlat
pop
jmp
mov
mov
pop
hlt
ins
mov
pusha
mov
jae
and
mov
ds
stc
addr16
add
xchg
adc
stos
sbb
and
cmps
neg
xchg
inc
sti
cmps
lock
loope
jno
xchg
push
movs
neg
scas
dec
stos
repz
adc
mov
xchg
shl
nop
imul
lock
adc
cwde
cmp
gs
jno
xor
or
xchg
sbb
(bad)
aad
mov
xchg
les
je
pop
inc
mov
or
pop
out
ins
pop
aam
lock
scas
movs
jnp
fisub
inc
mov
cmp
in
adc
test
mov
sbb
(bad)
das
mov
shl
sub
ja
jmp
rcl
adc
lods
or
sub
sub
int
xchg
nop
push
cmp
icebp
and
or
xor
dec
mov
pop
and
push
jno
pop
gs
push
sub
fstp
xchg
sub
or
pop
outs
mov
xchg
cdq
pop
daa
sub
lods
pop
cmp
mov
pop
out
das
in
mov
pop
mov
jns
aas
push
imul
push
std
lock
sahf
fwait
cmp
fisttp
test
out
xor
in
(bad)
pop
push
scas
aas
and
xor
arpl
mov
cmc
xchg
jecxz
test
jnp
sahf
inc
retf
dec
add
pusha
ins
xor
jno
ror
lahf
shr
xlat
lahf
leave
pop
push
jecxz
pop
cwde
fisttp
or
and
fadd
jmp
in
retf
ins
or
mov
call
pushf
rcr
rcr
mov
add
icebp
mov
push
pop
or
or
in
inc
arpl
jle
arpl
jmp
add
aam
xchg
cmp
jbe
in
or
into
dec
push
push
xchg
dec
pop
div
xchg
mov
inc
lods
cmp
fmul
gs
dec
movs
xchg
sub
loope
loope
sbb
push
and
pop
ja
aaa
add
push
add
inc
jo
call
xor
xchg
lock
in
mov
aas
js
test
and
out
movs
sub
push
push
jb
sbb
cwde
inc
mov
jp
xchg
pop
test
jns
out
lods
or
(bad)
xor
movs
std
mov
pushf
scas
shl
inc
jecxz
cmp
cmp
mov
das
pop
mov
(bad)
dec
pop
dec
mov
dec
pop
fldcw
dec
iret
pop
and
shl
xchg
fcmovnb
bound
arpl
jle
inc
mov
test
ins
sbb
stc
outs
jecxz
lods
add
xchg
mov
bound
ins
movs
repnz
into
adc
push
pop
inc
inc
jp
cmps
sbb
sar
push
sub
sbb
cmp
scas
(bad)
ss
xchg
stos
mov
cmp
not
dec
call
int3
xchg
and
gs
(bad)
sub
dec
mov
aam
out
retf
inc
inc
or
xchg
(bad)
inc
adc
sahf
shr
pop
adc
sbb
cmps
(bad)
call
mov
inc
sub
xor
fiadd
mov
pop
jp
xchg
mov
std
xor
fisttp
mov
dec
push
hlt
out
stos
jne
and
mov
cmps
das
movs
mov
sub
ins
add
dec
xchg
jg
inc
lahf
(bad)
arpl
add
cmp
and
gs
push
sbb
out
jle
ss
cmp
in
mov
xor
out
dec
push
mov
inc
add
test
adc
ror
adc
inc
test
mov
jecxz
call
popf
daa
fcmovne
inc
movs
(bad)
dec
imul
mov
mov
mov
nop
fisttp
ret
movs
adc
sub
jne
mov
dec
(bad)
adc
icebp
cmp
loopne
fs
idiv
je
pop
or
mov
iret
sbb
xchg
lock
lahf
call
mov
mov
shl
or
and
cmp
and
add
mov
pop
icebp
outs
pop
int3
in
daa
ret
addr16
cwde
adc
stos
movs
mov
pop
out
loope
arpl
fdiv
inc
adc
fwait
pop
xchg
ja
jo
es
xor
and
loope
push
(bad)
hlt
cld
ins
ss
ins
fist
and
push
lea
outs
shl
cmps
fisttp
sar
test
xchg
(bad)
jmp
out
or
loopne
mov
xor
shl
int
or
lods
adc
mov
or
repz
test
js
hlt
int3
inc
sub
lods
pop
js
add
shl
xchg
and
cmp
adc
sub
inc
dec
jp
dec
hlt
inc
imul
pop
fld
xor
push
cmp
cli
add
mov
cli
jge
sub
push
fist
push
arpl
cmp
fistp
lea
mov
pop
addr16
mov
(bad)
into
bound
int3
and
jae
sbb
out
in
aas
fisubr
popf
mov
ret
mov
xchg
push
xor
and
jge
dec
cmp
sbb
xchg
xchg
cmp
repz
retf
imul
sbb
pop
dec
lahf
loop
cwde
rol
push
stos
cmps
or
xchg
mov
adc
movs
pop
popa
push
mov
aad
rol
shl
sub
fs
push
mov
mov
pushf
add
inc
ret
sbb
push
popa
adc
and
or
add
repz
push
lds
in
ins
xchg
mov
xchg
aad
inc
mov
mov
out
inc
and
sahf
and
ja
add
mov
(bad)
push
cwde
adc
aam
ret
popf
out
cs
loope
mov
sbb
inc
int
into
sbb
sub
les
enter
xchg
or
stos
dec
jecxz
add
sub
xchg
retf
add
(bad)
pop
fsubr
xchg
push
dec
sub
imul
mov
mov
xlat
pop
sbb
mov
add
fadd
or
xchg
mov
sar
mov
scas
pushf
test
mov
int
pop
sahf
xchg
stos
ins
popa
idiv
fstp
gs
sahf
aaa
xor
xor
out
inc
nop
inc
jno
cmc
pusha
sub
es
pop
shr
cmp
cs
push
inc
ins
icebp
jns
in
cld
jnp
outs
(bad)
xor
hlt
cmp
pop
mov
imul
cwde
dec
ror
xchg
js
xor
clc
mov
and
add
pop
push
mov
repnz
jg
gs
mov
fistp
cmp
out
mov
fst
or
rcl
nop
stc
arpl
xchg
(bad)
fdivr
rcl
out
xchg
jo
popfw
pop
out
scas
sbb
mov
ret
(bad)
in
ja
std
push
or
stos
jb
je
imul
popa
mov
xchg
push
daa
xchg
dec
ins
test
fnstsw
repnz
mov
jge
mov
(bad)
mov
dec
mov
cmp
je
cmps
dec
ror
mov
adc
xchg
cwde
lds
pushf
retf
inc
lods
mov
mov
jne
mov
add
mov
fisttp
sub
aaa
int
add
les
mov
shl
jbe
fisub
loop
push
pop
mov
inc
and
dec
test
pop
xchg
push
xor
pop
push
mov
in
scas
mov
rcr
rol
pop
pop
cmp
sub
xchg
(bad)
mov
in
fidivr
mov
call
popf
aas
sub
ins
mov
mov
std
cmps
ret
test
(bad)
mov
push
xor
sbb
aaa
(bad)
adc
adc
jecxz
cmp
add
push
push
push
cmp
mov
jp
or
sub
dec
or
out
lods
xchg
xcrypt-ofb
cmps
jmp
xchg
jg
mov
fistp
js
mov
test
nop
out
inc
push
fidivr
mov
nop
push
retf
xor
and
pop
mov
clc
mov
jno
mov
in
xchg
mov
or
ds
in
and
pop
push
jae
(bad)
push
cmp
sub
mov
fidiv
mov
repz
xchg
clc
pop
inc
mov
in
pop
and
xchg
lock
imul
aad
sub
push
fdiv
pop
jmp
cs
inc
rol
lods
dec
adc
stc
jns
popf
dec
enter
call
call
rcl
aas
enter
bound
push
ins
pushf
(bad)
div
arpl
fisttp
bound
or
inc
pushf
test
mov
ds
push
in
sub
fdiv
and
loop
fs
mov
xor
adc
lock
xchg
lahf
test
mov
xchg
clc
jecxz
mov
jmp
out
pushf
pop
cmp
jmp
mov
aad
pop
pop
pop
dec
test
mov
xor
adc
cmp
dec
imul
or
xchg
push
inc
xchg
jnp
rol
sbb
outs
push
pop
outs
fisub
dec
fwait
sbb
sbb
push
push
in
out
push
xor
stos
push
jg
stos
cmps
lahf
in
arpl
and
xor
clc
ins
xchg
mov
loope
or
mov
outs
icebp
xor
imul
movs
shl
mov
push
ja
dec
pusha
and
xor
and
mov
in
mov
or
pop
mov
pop
retf
push
jmp
mov
xor
sub
cmp
mov
and
mov
inc
clc
scas
aam
mov
mov
jecxz
cmp
sub
(bad)
fmul
fwait
icebp
ret
retf
jp
mov
jl
stc
xchg
add
sbb
xor
sub
psllq
fild
outs
cmps
aam
pop
loop
mov
pop
cmp
and
inc
repz
jmp
fcomp
mov
mov
repnz
daa
jmp
push
mov
(bad)
ror
adc
xchg
jmp
mov
jne
push
cs
lock
pop
or
adc
jecxz
mov
(bad)
fldenv
xor
dec
and
pop
stc
std
les
push
or
dec
fadd
and
inc
mov
fs
loope
pop
jbe
in
sub
test
cmps
scas
cmp
outs
ret
push
adc
adc
repz
add
fiadd
jmp
jmp
mov
repz
stos
movs
shl
enter
daa
push
call
add
xor
clc
ret
bound
mov
rcr
pop
enter
pop
jl
ja
rol
test
ins
idiv
adc
inc
and
loopne
add
and
lods
xor
fidiv
jae
add
or
mov
into
inc
loopne
or
and
rol
movs
mov
or
test
adc
sbb
sti
pop
mov
dec
mov
js
pop
pop
movs
test
sub
xor
push
ficom
mov
add
mov
dec
stc
test
lods
ret
stos
adc
nop
mov
faddp
outs
mov
push
mov
sbb
aaa
cmps
adc
call
int
out
shl
repz
xchg
or
dec
add
mov
xchg
imul
inc
test
inc
jae
shr
xor
jb
cli
sub
mov
xor
mov
mov
mov
cmp
fadd
mov
xor
push
je
ret
mov
shr
call
jmp
(bad)
iret
cmp
xchg
dec
out
inc
xor
leave
jecxz
les
aad
xor
shl
push
and
xor
push
mov
repnz
xor
dec
push
and
xor
jge
sub
out
jb
cmp
jp
repz
or
xor
sbb
xor
sub
lock
(bad)
dec
jno
cli
movs
pop
push
lahf
xor
mov
xchg
xor
in
push
pop
inc
call
imul
je
push
mov
bound
dec
pop
adc
das
and
scas
test
lea
ret
cwde
mov
mov
out
or
out
mov
xchg
repz
inc
cmp
lock
pop
rcl
call
in
adc
pop
adc
fdiv
adc
pop
nop
mov
inc
jmp
pop
mov
clc
or
jl
cld
mov
mov
xor
(bad)
repnz
mov
cmp
pop
xor
stos
inc
loope
shl
add
test
xchg
not
mov
fisttp
or
loope
daa
outs
mov
xor
lds
cmps
call
xchg
das
call
pop
enter
pop
fcomip
das
scas
fstp
(bad)
dec
push
scas
cmp
xchg
inc
popf
es
cli
mov
push
test
(bad)
not
mov
and
push
pop
and
rcl
inc
aaa
ret
ins
repz
cmc
sbb
and
fwait
pusha
pop
adc
cli
icebp
clc
(bad)
mov
push
shl
(bad)
dec
or
arpl
cmp
pushf
dec
enter
fucom
ins
lock
mov
imul
cmp
fwait
and
adc
add
pop
fwait
int3
sbb
and
(bad)
pop
aaa
movd
cmp
scas
das
and
jmp
(bad)
sbb
sar
ror
sbb
std
and
in
inc
mov
lods
mov
or
daa
cmp
or
or
adc
inc
jbe
mov
xchg
neg
adc
xchg
jmp
pop
xor
push
dec
fmul
push
adc
test
adc
outs
mov
aam
leave
jne
jae
pop
ret
mov
cmp
dec
and
sar
pop
mul
das
iret
cmp
ret
std
stc
test
scas
cdq
and
inc
dec
nop
sbb
dec
add
loope
int
into
add
mov
lods
in
sbb
je
stos
je
nop
cmc
xchg
mov
sub
adc
cs
inc
movs
js
je
lahf
iret
into
lock
pop
add
lock
data16
jl
(bad)
aas
(bad)
and
jge
add
jle
xchg
jmp
les
sub
in
mov
aam
dec
js
daa
push
je
rol
dec
mov
nop
jb
or
pop
jg
ja
jmp
mov
mov
jnp
inc
fndisi(8087
cdq
les
repnz
push
(bad)
shl
pop
pushf
push
js
cdq
test
enter
in
adc
or
fmul
in
push
fdivr
push
sbb
pop
sbb
fld
retf
jne
dec
(bad)
in
mov
push
jle
(bad)
push
jle
dec
pop
cmp
xchg
mov
jmp
mov
dec
mov
imul
or
xor
dec
push
fucomp
adc
aaa
sar
fdivr
sub
inc
aaa
jmp
pop
mov
mov
and
jge
sbb
mov
xchg
and
push
add
outs
add
sbb
or
xor
sbb
cmc
shl
or
std
lock
out
or
es
int3
mov
cmps
mov
or
daa
stos
leave
add
adc
repnz
mov
ret
sbb
popf
jmp
cmps
pop
ror
ins
aam
fadd
movs
enter
sub
mov
sub
jg
outs
dec
adc
dec
sbb
mov
add
xor
cmps
xchg
mov
movs
out
sbb
sti
push
hlt
fwait
sbb
dec
gs
test
jne
ret
call
das
repnz
xor
lods
jns
jmp
outs
pop
sbb
enter
jmp
xchg
out
cdq
jb
ja
and
mov
jmp
xor
sbb
je
rcr
and
fs
jmp
retf
rcl
push
loope
loope
pushf
arpl
iret
add
pop
dec
hlt
mov
(bad)
js
imul
or
aas
pop
jmp
in
or
int3
dec
scas
fdivr
cmp
mov
add
jp
sub
add
push
pop
inc
out
mov
cmp
mov
or
int
test
pop
xchg
jns
mov
ins
pushf
mov
mov
enter
sub
scas
ret
aaa
jmp
xor
out
add
test
jne
adc
mov
jne
mov
ror
push
or
test
repz
repz
hlt
retf
mov
test
in
inc
cmp
sub
push
pushf
mov
mov
sub
cli
push
sti
jge
inc
or
or
mov
in
fiadd
pop
lods
jmp
sub
pop
mov
fiadd
push
pushf
nop
imul
cmp
aas
test
cmp
jmp
js
cmps
ds
loopne
xor
add
add
adc
out
inc
jg
ror
push
cmp
lock
sub
popa
js
rcl
mov
push
adc
cld
(bad)
lods
inc
std
sub
(bad)
call
mov
nop
fld
(bad)
jb
fistp
mov
xor
mov
(bad)
xor
jo
mov
mov
sbb
call
pop
es
pop
outs
aam
xchg
aas
aam
sub
and
in
es
mov
stc
and
(bad)
mov
cmp
scas
add
sbb
jno
ret
pop
out
mov
pop
and
cmp
dec
lds
push
inc
inc
pop
cs
push
push
pop
mov
ins
loopne
jo
xchg
enter
outs
lods
cmp
or
sahf
sbb
ins
and
cmc
pop
inc
cmp
cld
lods
movs
test
fs
les
(bad)
(bad)
fs
mov
mov
inc
cli
pop
mov
xor
jb
fs
cmp
mov
lea
mov
sti
(bad)
mov
push
in
enter
pop
and
adc
and
mov
xor
push
adc
or
div
mov
fwait
push
retfw
push
lds
mov
push
pop
hlt
rcl
mov
jg
mov
or
pusha
ror
fistp
out
pop
call
inc
fcom
cmps
fsubr
mov
int3
add
outs
and
shl
jmp
vpavgw
cmps
test
cmp
xor
jns
xor
jl
adc
mov
scas
jae
movs
mov
push
or
xchg
cwde
fdivr
fisttp
icebp
jb
or
test
sub
mov
or
adc
loop
sub
cmps
sub
ja
jae
dec
das
inc
xchg
and
push
and
pop
add
sub
dec
add
sbb
sti
mov
push
xchg
jns
lods
sbb
lahf
mov
cmp
push
xchg
push
mov
mov
push
repnz
mov
ror
cmps
in
ror
loop
inc
jmp
leave
shl
cmc
sbb
scas
stos
aad
jns
cli
dec
pop
leave
es
ins
scas
mov
dec
data16
mov
add
mov
adc
enter
adc
js
sub
stc
(bad)
push
out
mov
inc
dec
jmp
pop
repnz
stos
dec
sub
pop
cmp
out
cmps
or
jmp
mov
fs
enter
dec
mov
sar
call
jg
xor
imul
push
scas
inc
lock
adc
or
pop
cdq
icebp
fisub
push
sahf
xor
out
cli
push
jne
xchg
push
imul
ds
jle
pop
ins
or
cmps
adc
(bad)
push
add
pop
(bad)
jmp
cdq
test
sbb
lods
cmp
adc
lods
imul
gs
out
sbb
dec
sub
lods
popa
or
enter
inc
in
test
test
and
pop
nop
jb
scas
sbb
and
shr
jp
and
adc
pushf
out
inc
lock
and
mov
fwait
sub
sbb
das
aaa
adc
or
iret
lea
clc
jbe
test
xor
clc
out
arpl
cmp
dec
aam
pop
add
inc
(bad)
icebp
cmp
cmp
sar
sti
add
iret
jp
push
lods
lds
ins
scas
push
xor
push
adc
cli
xchg
in
aas
xchg
int
pop
movs
pop
sbb
adc
movs
dec
imul
ffreep
xchg
jmp
dec
test
fs
jmp
loop
sbb
outs
sbb
cmp
mov
jb
push
xchg
(bad)
icebp
push
xchg
adc
out
jl
add
dec
stos
lods
xchg
repz
fadd
xchg
mov
into
call
in
xchg
and
arpl
xor
xor
mov
xlat
lahf
mov
adc
inc
inc
je
inc
pop
(bad)
mov
aad
jbe
lods
in
xor
scas
and
mov
in
repnz
ins
aas
test
test
jmp
inc
sti
lahf
ret
(bad)
pop
(bad)
xor
or
popa
or
mov
xchg
mov
xchg
call
shr
repnz
add
push
push
mov
inc
out
jecxz
loope
movs
dec
adc
out
sahf
or
fs
cmp
sti
xor
mov
ret
sbb
stos
cmp
ret
mov
sbb
je
push
mov
outs
movs
imul
cmp
push
add
retf
xchg
push
jmp
sub
push
sub
iret
aas
mov
lds
add
stos
(bad)
mov
sti
push
jo
mov
(bad)
mov
sti
cmps
pop
xchg
ja
out
xchg
pop
pusha
leave
add
jge
sti
mov
dec
adc
(bad)
mov
in
add
mov
or
mov
pop
shr
cmc
loop
mov
pop
test
jns
add
popf
mov
ins
pop
and
repz
jl
xor
push
cdq
fadd
shr
add
or
lea
stos
ret
mov
adc
mov
sbb
clc
(bad)
shl
add
test
jl
int3
in
das
aad
pop
dec
adc
ins
add
inc
adc
bound
mov
dec
sbb
mov
sub
xchg
push
or
(bad)
cld
jmp
leave
fcomp
pop
fnsave
sub
je
fwait
in
fwait
push
jmp
add
imul
dec
cmps
push
lock
adc
outs
call
sbb
retf
jbe
bound
stc
addr16
xchg
fwait
fwait
stc
imul
scas
cdq
stos
mov
imul
jnp
mov
fst
div
adc
mov
sub
cmp
sti
scas
jbe
mov
dec
(bad)
cmp
cmp
and
mov
pop
das
dec
pusha
outs
scas
imul
ds
rcl
popa
mov
sahf
xchg
ins
xor
mov
jo
out
add
add
sub
cmp
addr16
retf
push
cmp
lea
push
scas
push
cmp
cwde
sbb
dec
and
movs
(bad)
xchg
out
push
std
mov
push
dec
ret
push
jmp
fidiv
mov
(bad)
cmp
jbe
repnz
loop
mov
out
arpl
or
add
pop
mov
addr16
pop
xor
push
sub
push
dec
stos
dec
pop
in
mov
sub
pop
loopne
mov
cdq
retf
and
or
xchg
mov
(bad)
out
xchg
pusha
or
xor
xchg
xor
mov
into
sub
push
inc
and
cmp
push
jae
mov
jmp
dec
lahf
fwait
xchg
pusha
add
fidiv
cwde
xlat
aad
cdq
aad
mov
jo
sub
iret
lahf
xor
or
xchg
push
test
fwait
ds
or
mov
sar
outs
sub
mov
call
retf
scas
in
fld
mov
push
inc
shl
mov
and
daa
mov
outs
and
sub
(bad)
lods
fistp
in
lods
mov
int
jmp
xor
imul
lea
pop
jbe
lock
push
retf
xlat
arpl
jp
push
push
out
scas
jmp
mov
mov
mov
jp
push
add
xlat
or
ror
jge
add
fist
pop
sbb
ror
ja
sub
shl
dec
(bad)
fistp
lods
lahf
je
inc
hlt
mov
jge
mov
fwait
mov
or
mov
dec
add
add
mov
(bad)
lock
test
mul
dec
ins
sbb
std
inc
sub
sub
mov
aas
inc
addps
mov
lds
js
rol
mov
daa
ins
pusha
std
into
cmp
lea
cld
loope
xchg
pop
in
sbb
and
sub
inc
or
retf
fwait
inc
retf
aaa
fst
scas
ret
arpl
lods
pop
sbb
std
add
loop
mov
imul
adc
or
inc
pop
retf
stos
sbb
jbe
jge
xor
imul
xchg
cmp
jp
pusha
jmp
inc
ficomp
aam
inc
(bad)
(bad)
mov
jge
mov
lock
jecxz
pop
movs
xchg
cld
in
retf
xchg
lods
scas
leave
add
xchg
and
int
mov
sbb
sbb
or
aas
pop
xor
shl
push
inc
js
scas
int
xor
mov
mov
sbb
xrstors
stos
cmc
sti
and
and
xchg
jb
fidivr
fidivr
test
mov
pop
inc
cmp
or
das
or
and
int3
sbb
aad
push
popf
push
test
xchg
pop
sti
cwde
(bad)
stc
aam
pop
dec
ror
jl
pop
fwait
out
clts
jne
fisttp
ins
add
and
mov
ds
scas
cdq
out
(bad)
in
mov
lahf
jne
shl
add
add
dec
pop
push
push
fisttp
lds
rcl
cmc
or
fdiv
sti
jmp
sbb
in
cmp
push
xchg
sub
icebp
(bad)
in
test
into
popa
mov
push
mov
mov
fwait
adc
push
cld
inc
jp
xchg
rcl
dec
adc
jmp
cmps
test
imul
cmc
icebp
add
xor
test
rol
out
push
inc
inc
cmp
mov
les
pop
pop
add
push
fwait
sbb
mov
les
es
add
sbb
sub
sbb
iret
fs
push
cmp
mov
stc
in
sub
jmp
lock
push
and
sbb
cld
push
mov
(bad)
(bad)
mov
loopne
or
sub
dec
mov
mov
add
cmp
mov
cmps
dec
and
add
push
or
jle
push
push
das
clc
lods
push
jns
call
cmp
sbb
sbb
pop
push
mov
call
in
push
xor
dec
jne
mov
mov
push
ins
sub
fsub
mov
adc
jmp
sbb
jo
aas
jnp
int
xor
retf
ins
mov
inc
jmp
pop
das
je
icebp
jns
jle
pop
shr
in
ins
mov
jo
shr
sub
pop
shr
inc
and
xor
cmp
call
mov
xor
adc
sub
rcl
add
cmps
adc
int3
in
enter
(bad)
mov
pop
imul
sbb
iret
jmp
xchg
mul
dec
mov
pop
mov
mov
das
loopne
or
jbe
icebp
pop
push
pop
fwait
div
fsubr
xor
addr16
nop
dec
lea
repz
call
jne
inc
aam
mov
bound
cmps
outs
cmps
dec
cmc
fisub
push
test
or
int
mov
jecxz
aas
dec
xchg
imul
mov
cmp
enter
setl
dec
imul
sub
inc
addr16
loop
sbb
imul
jmp
aaa
mov
or
jge
mov
xchg
sub
lds
lahf
mov
or
out
push
mov
sti
nop
jbe
je
jecxz
mov
dec
inc
pop
jns
pop
and
mov
mov
adc
mov
in
or
sbb
inc
pusha
mov
mov
push
fwait
fs
int3
push
adc
adc
xchg
pop
inc
shl
lock
mov
xchg
xor
(bad)
ins
loope
test
cdq
jns
inc
cld
dec
mov
mov
ret
push
adc
and
repz
stos
and
xchg
cdq
ja
mov
gs
xchg
aaa
clc
jne
sub
xor
xchg
cdq
push
scas
jo
jecxz
imul
cdq
aas
dec
test
push
sbb
cmp
cmp
mov
or
inc
pop
sbb
(bad)
dec
push
dec
mov
fs
push
test
cli
push
lahf
int
into
ror
lea
cli
(bad)
int3
add
inc
jge
loopne
out
ins
loopne
xor
pop
and
out
aam
loop
pop
cmps
mov
push
and
out
in
push
and
and
xlat
pushf
jae
fst
or
lea
dec
jae
lods
sub
inc
xchg
pop
dec
pop
rcr
icebp
jmp
enter
(bad)
jb
jmp
add
test
pmovmskb
les
mov
inc
xor
ss
mov
mov
xchg
movs
and
ret
jl
mov
lods
dec
mov
ror
jle
js
cmps
addr16
mov
pop
aas
cli
out
adc
adc
pop
sub
dec
xchg
pushf
sub
outs
mov
out
ror
jae
sar
bound
mov
retf
lods
sub
jmp
push
leave
jmp
test
adc
mov
mov
adc
mov
clc
pop
call
and
and
neg
out
inc
in
js
cmp
(bad)
pop
jnp
sbb
jae
mov
sbb
ja
adc
sub
cmps
and
cmp
xchg
pop
loopne
shr
push
in
sahf
and
xlat
call
int
pop
mov
leave
js
adc
jecxz
mov
stos
mov
mov
in
mov
test
jb
sbb
sub
ja
lods
mov
ss
(bad)
xor
retf
mov
ins
fist
adc
sub
daa
into
inc
mov
test
jb
(bad)
int3
imul
pop
dec
xor
sub
repz
pop
fnstenv
cmp
xchg
sbb
movs
lods
sub
aam
adc
outs
add
pop
add
lods
xchg
xchg
mov
pushf
stos
repz
(bad)
and
and
dec
or
enter
repnz
aas
cwde
repz
add
dec
jp
movs
mov
and
mov
mov
jg
(bad)
jmp
mov
mov
stos
pop
sti
jp
xchg
outs
jmp
mov
or
clc
dec
cmps
fstp
lahf
ret
pop
not
fstp
sub
and
jae
movs
mov
int3
adc
xor
sahf
jle
add
addr16
shl
sub
sbb
retf
mov
test
loopne
int3
xchg
loopne
int
jecxz
data16
mov
movs
pop
dec
loop
daa
sahf
sub
inc
aam
dec
stos
loop
inc
pop
jo
shr
adc
cmp
xchg
in
fldenv
nop
dec
fnstcw
pop
es
and
cmps
sbb
xchg
pop
push
sbb
inc
mov
mov
and
mov
popf
out
inc
clc
mov
fs
outs
sbb
xor
or
cmp
stos
in
int
mov
call
jge
or
shl
jne
sub
push
adc
jnp
jp
test
jns
and
or
aad
stos
push
in
lds
push
xor
ret
scas
mov
bound
jbe
sub
call
and
pop
test
or
int3
lods
sbb
or
movs
inc
add
dec
add
in
or
pushf
sbb
mov
xor
cmc
call
sub
fisubr
adc
inc
repz
sub
or
cdq
sub
pop
jo
pusha
loopne
fst
test
push
(bad)
shl
jmp
xchg
or
das
mov
xor
aas
fild
sbb
add
jge
lock
ins
jp
rol
retf
ds
sti
pop
icebp
push
or
rol
xchg
in
push
idiv
mov
es
lods
jnp
outs
jb
mov
xor
inc
jl
dec
lods
add
add
stc
mov
xchg
in
mov
out
into
stos
movs
jp
cli
adc
int
cli
sub
int
push
dec
jle
xchg
(bad)
std
mov
push
jp
fwait
mov
int
hlt
fist
das
or
rol
sub
jne
ds
mov
and
xchg
or
jbe
push
sbb
addr16
adc
or
sub
aam
jb
mov
mov
outs
push
ror
dec
stos
rcr
int3
test
add
clc
retf
mov
inc
test
or
movs
mov
sub
inc
cdq
mov
movs
int
lahf
mov
(bad)
xor
mov
pop
add
mov
jp
sub
out
sbb
sbb
arpl
and
test
mov
dec
out
xchg
(bad)
cli
mov
fs
inc
mov
lock
cmp
xchg
das
push
mov
mov
shr
in
ins
repz
mov
int
popf
scas
out
shl
loope
mov
cmp
push
movs
cdq
dec
daa
ins
inc
jl
icebp
out
adc
sbb
pop
popf
daa
push
jnp
and
pop
jbe
add
jmp
imul
inc
mov
jg
or
or
int
js
pusha
dec
pop
cmp
mov
mov
mov
push
mov
hlt
inc
cmp
popf
fadd
or
daa
ret
rcr
cmp
fucompp
jmp
add
cmp
adc
or
mov
movs
xor
xchg
xor
repz
xchg
hlt
pop
mov
or
mov
jl
gs
lahf
(bad)
aaa
lea
test
mov
sbb
and
das
(bad)
call
or
stc
stos
out
(bad)
nop
or
mov
popf
repz
mov
mov
adc
sbb
and
inc
(bad)
aad
lds
inc
rcr
pop
in
lods
mov
mov
or
ret
dec
fldcw
pmaddwd
loopne
mov
mov
(bad)
fadd
scas
int
les
xchg
div
call
dec
lock
lods
jne
inc
pop
sar
push
out
mov
out
pop
aas
mov
call
mov
cmp
jge
sub
jo
or
lods
cmp
jnp
push
call
mov
inc
shl
mov
and
dec
scas
ins
inc
in
and
mov
mov
or
inc
test
mov
dec
lahf
popa
sahf
not
(bad)
in
mov
add
fmul
xchg
jmp
add
(bad)
xchg
scas
shl
bound
or
mul
jecxz
repz
icebp
mov
sbb
leave
push
nop
iret
push
repnz
clc
ss
test
test
out
test
cld
xchg
pop
fwait
cmp
push
pusha
pop
loope
shr
aas
ja
or
les
pop
jge
imul
push
add
xor
xor
pop
add
inc
xor
jns
dec
sbb
pushf
fadd
clc
pop
pop
push
shl
pop
jg
enter
xchg
and
inc
in
cdq
mov
mov
bnd
add
in
push
(bad)
xchg
fmul
pushf
jbe
mov
sti
mov
mov
fs
push
pop
je
or
inc
push
add
ja
mov
aas
movs
xor
push
and
sar
xchg
pop
fadd
mov
ins
adc
xchg
cmps
imul
shl
and
xchg
pop
cmp
fnsave
les
push
imul
add
sbb
sub
jae
inc
int
out
lahf
xor
jb
mov
pop
cmp
inc
pop
outs
sub
mov
add
push
stos
xchg
test
movs
popf
cmc
xor
mov
rcr
add
repz
pushf
test
lds
jo
inc
jmp
adc
and
call
sar
xor
imul
loopne
xlat
lahf
adc
std
pop
cmc
ret
pop
bound
pop
jg
je
hlt
cwde
adc
fild
test
int
adc
sub
test
dec
repz
pop
or
loopne
call
fld
ins
xlat
call
mov
push
test
nop
mov
sahf
cmp
imul
fdiv
xor
xor
lods
mul
std
dec
sub
sub
and
retf
aam
push
adc
lods
mov
add
jnp
or
nop
jg
pushw
pop
das
xchg
dec
push
push
pop
inc
fcmovu
test
ds
clc
push
add
fxch
jp
in
es
das
jl
sbb
mov
mov
jb
xchg
aas
mov
cld
stc
aam
int3
aad
jge
push
xchg
int
mov
dec
push
dec
inc
pop
push
scas
loope
mov
mov
sbb
pop
iret
test
lods
add
aad
jg
mov
jno
inc
dec
xchg
xor
sub
adc
xor
and
sbb
jmp
mov
adc
push
arpl
rcr
xor
leave
xchg
lods
push
mov
adc
mov
xchg
ss
pop
fwait
popf
jp
bound
arpl
aas
inc
mov
xchg
pusha
pop
jl
je
and
mov
cld
(bad)
add
add
(bad)
outs
or
add
sti
stos
sub
sub
sbb
add
movs
add
sub
cmp
mov
mov
mov
out
(bad)
in
arpl
fist
cs
fdiv
mov
sub
jmp
fmul
or
pushf
inc
xchg
cmp
sub
in
call
jecxz
mov
(bad)
enter
mov
retf
inc
mov
jb
and
mov
lds
cld
sbb
cmc
idiv
outs
ja
ret
xchg
push
or
push
push
cli
ja
add
sbb
jl
nop
stos
cdq
clc
sub
xor
and
sub
dec
push
xor
shl
push
mov
jmp
movs
std
popa
mov
jl
call
outs
cmps
mov
or
or
inc
test
add
push
scas
cmp
jo
dec
lods
push
callw
pop
inc
movs
cmp
(bad)
mov
fnstenv
cmps
fnstcw
adc
and
and
mov
in
mov
jmp
cmps
lea
xchg
arpl
rcl
pop
inc
or
push
add
mov
and
sub
inc
xor
push
(bad)
cmp
xlat
lea
mov
rcr
imul
or
push
mov
pusha
inc
repnz
push
in
dec
aad
jge
pop
mov
xor
and
cmps
jge
adc
fiadd
pop
or
inc
lea
sahf
imul
sub
or
sbb
clc
ss
ins
dec
adc
lock
adc
(bad)
cmp
movups
mov
sub
je
not
xchg
sar
(bad)
lds
xchg
xchg
push
(bad)
fist
outs
ret
sahf
sbb
daa
adc
mov
popf
fidivr
add
mov
push
inc
stos
adc
lods
or
addr16
xchg
sub
push
lods
shr
cmp
xchg
dec
adc
xchg
jmp
lock
fidivr
fs
psubusb
jne
jnp
mov
shl
push
push
sbb
add
mov
(bad)
push
or
scas
fadd
shl
int3
and
rcl
mov
pop
pop
pop
xor
cmp
fisub
stc
cmp
sub
add
fist
push
sbb
cmp
gs
int
jmp
adc
dec
repnz
mov
pop
jmp
and
fsubr
lods
sti
xchg
movs
fld
shr
lahf
lahf
jns
adc
and
xor
dec
inc
test
pop
and
mov
cmp
and
mov
arpl
pop
sbb
retf
push
pusha
stc
dec
xchg
(bad)
aam
mov
es
mov
into
push
or
neg
mov
jp
jnp
inc
xor
fstp
jle
cmovp
push
rcl
imul
lods
(bad)
xor
push
leave
xchg
xchg
out
scas
ins
repz
adc
xor
lods
iret
in
dec
sahf
nop
rol
push
into
xchg
dec
jns
cdq
or
mov
push
sub
cwde
pop
(bad)
neg
test
cmp
xor
(bad)
mov
out
into
std
jne
adc
jmp
aam
push
imul
ja
push
cmc
sar
hlt
mov
mov
dec
iret
aam
inc
stos
bsf
lock
jmp
(bad)
int3
inc
fsubr
inc
dec
in
or
test
adc
out
cmp
je
movs
movs
sub
push
ds
add
cdq
mov
sub
mov
je
push
or
pop
and
inc
test
in
adc
cmp
das
or
push
jnp
(bad)
adc
xchg
jnp
xchg
pop
dec
or
sub
aaa
and
in
(bad)
retf
lds
test
mov
sub
push
xchg
xor
push
and
push
out
or
aam
jmp
fisub
ss
iret
fs
je
out
or
sbb
outs
into
dec
pop
call
jmp
add
sub
xor
loope
push
sub
push
and
jmp
sbb
xor
sbb
inc
sbb
aad
fdiv
mov
(bad)
or
test
mov
enter
(bad)
push
inc
sub
aas
cli
jns
mov
ret
pop
iret
xor
sub
dec
mov
fisub
xor
rcl
sub
nop
(bad)
shl
imul
bswap
and
jge
mov
movs
movs
or
scas
or
mov
aad
mov
add
rol
adc
ins
jno
sbb
and
dec
inc
loope
fwait
ds
adc
daa
jge
mov
iret
clc
pop
xor
and
aam
jle
scas
das
cmp
loopne
movs
xchg
pop
add
cmp
adc
pop
mov
retf
mov
in
inc
mov
stos
pop
or
sbb
movs
pusha
imul
ss
in
ret
out
xchg
mov
fs
shr
stc
and
loop
adc
cmp
rol
loopne
xor
out
(bad)
xchg
adc
dec
fimul
mov
cmp
push
retf
leave
inc
adc
sbb
cmps
lock
jl
loop
adc
sar
pop
into
popa
add
mov
ds
lock
inc
outs
sbb
js
rcl
out
outs
pop
hlt
aam
xor
cwde
dec
push
push
aam
fdiv
call
mov
xor
cs
pop
outs
push
out
dec
cmp
pop
ins
mov
and
retf
inc
movs
jmp
xor
jge
pop
jmp
mov
push
push
in
or
xchg
adc
stc
sub
iret
mov
cmp
push
into
add
or
cs
mov
je
adc
xchg
adc
addr16
(bad)
mov
cwde
out
xchg
xchg
sbb
popf
inc
push
mov
pop
push
hlt
mov
add
adc
pop
mov
arpl
cmps
xor
sbb
cmps
jmp
cmc
jae
jne
loop
aaa
(bad)
pop
cmp
int3
pop
sbb
jl
mov
and
sti
or
outs
dec
jbe
and
stos
cmp
mov
sbb
not
push
mov
repnz
jno
cwde
daa
push
jmp
pop
test
shl
sub
in
cmps
mov
out
and
ss
add
push
or
xor
pop
out
dec
pop
mov
and
enter
pop
push
and
stc
gs
ret
in
mov
fist
mov
sub
hlt
out
cmp
outs
into
test
mov
pop
inc
mov
pop
or
aam
push
xor
movs
cs
arpl
hlt
sub
imul
sub
cmp
inc
mov
add
into
pop
in
aad
mov
ja
out
add
mov
add
cs
xor
sub
sets
xchg
test
sub
jmp
jecxz
sub
test
call
add
loope
movs
fist
imul
cdq
and
fs
or
cmp
dec
ret
daa
call
inc
dec
mov
hlt
adc
rol
push
mov
mov
jp
dec
ret
inc
mov
cmp
jmp
mov
fdiv
mov
pop
mov
pop
cmp
xchg
dec
loop
shl
into
sbb
leave
inc
dec
fadd
inc
shl
xchg
lea
xor
imul
mov
mov
stc
retf
push
push
jp
(bad)
pusha
sub
mov
add
push
mov
push
scas
sub
lds
mov
retf
das
cmp
cmp
sub
adc
mov
xor
fimul
and
popf
push
jmp
aaa
not
sub
loopne
adc
icebp
inc
pop
js
dec
sbb
fisubr
and
in
(bad)
xchg
test
in
stos
pop
lock
jmp
sub
fld
xor
sbb
movs
or
popa
retf
rol
aaa
dec
dec
lock
sbb
ficomp
ret
xor
gs
shr
addr16
adc
fisttp
or
mov
pop
loope
push
mov
or
xchg
stos
xchg
pusha
pop
stos
mov
pop
(bad)
and
add
sbb
aam
mov
adc
ds
sar
idiv
mov
mov
stos
je
push
ret
sbb
xchg
jmp
and
inc
push
rcl
sub
pop
inc
lea
and
shl
rep
js
enter
xor
je
jecxz
clc
or
les
das
sub
test
and
pop
push
mov
(bad)
push
cld
or
add
les
in
ins
sub
inc
or
(bad)
sub
jp
(bad)
into
inc
(bad)
cmp
add
daa
adc
push
mov
cmps
cmp
mov
arpl
outs
jo
lods
adc
jge
and
or
or
pop
ins
movs
mov
mov
jb
mov
mov
pop
out
inc
fldenv
daa
test
sbb
loope
call
gs
ja
sub
adc
jmp
mov
sub
xchg
pop
mov
cmp
xchg
fist
pushf
mov
jns
test
lock
cdq
pop
hlt
call
icebp
push
jecxz
(bad)
adc
xor
scas
jle
repz
or
popf
js
pop
xchg
xchg
inc
ins
push
pop
pop
pop
inc
rcr
sti
mov
push
ins
imul
ins
inc
aam
icebp
jns
mov
es
jbe
sbb
push
test
imul
mov
dec
stos
cmp
pop
adc
adc
fndisi(8087
dec
aam
ins
mov
xchg
push
mov
test
pop
sti
sub
enter
or
gs
xchg
or
js
imul
jl
xchg
add
push
in
adc
mov
into
mov
add
int3
bound
mov
pop
pop
(bad)
pop
rol
pop
outs
je
int
js
push
dec
sbb
dec
or
fcomp
xor
push
xchg
ror
jl
pop
pop
pop
mov
dec
push
enter
mov
pop
jno
jne
jecxz
push
jae
(bad)
push
ds
xor
xchg
mov
jmp
cmps
sbb
mov
cmp
push
ficom
repnz
jge
add
fdiv
repnz
push
aaa
(bad)
inc
mov
and
mov
stc
int
add
push
sbb
jno
and
push
mov
push
push
fisubr
cmc
adc
dec
outs
and
repnz
dec
cmp
or
ficomp
sub
fdivp
jno
and
stos
adc
sub
add
or
inc
xchg
fcomi
cmps
add
mov
pop
mov
mov
sub
loope
dec
jae
fistp
or
into
lea
mov
sub
or
mov
mov
es
cmp
xchg
ret
xor
inc
in
ja
or
sbb
adc
gs
dec
nop
mov
hlt
jb
stc
sub
xchg
push
inc
ins
add
jg
mov
out
sub
std
shl
jmp
in
les
out
test
in
pop
shl
adc
loope
push
fcomp
jl
test
sbb
scas
adc
fdivrp
sar
cwde
cmp
sub
push
adc
sub
xor
aaa
xchg
jmp
movs
cmp
xchg
ror
leave
and
stos
push
add
movs
lock
inc
push
outs
out
shl
mov
sub
inc
inc
adc
mov
lock
dec
and
sahf
add
loope
pop
cli
push
arpl
retf
enter
pop
call
popa
pusha
sar
mov
dec
jmp
in
cmc
cmps
mov
and
lock
ss
and
lds
jns
cmps
call
es
(bad)
mov
retf
mov
ss
aaa
repz
mov
test
popa
out
jl
icebp
iret
iret
pop
out
xchg
xor
dec
addr16
mov
imul
lods
shr
push
out
bound
mov
cs
inc
fcom
mov
ins
stos
sbb
inc
sbb
cmc
ins
jp
sbb
mov
add
sbb
xchg
xchg
mov
(bad)
jecxz
jl
ror
xor
shl
sub
mov
xor
(bad)
mov
xor
jl
test
in
pop
fsubr
push
(bad)
jg
int
mul
jbe
out
das
cdq
add
jb
mov
mov
xchg
pop
adc
mov
and
mov
jmp
mov
(bad)
sbb
scas
enter
jl
xchg
xchg
mov
jno
jae
push
mov
gs
stos
sub
xchg
mov
jmp
mov
aaa
mov
(bad)
inc
inc
addr16
dec
mov
shr
push
mov
sub
int3
mov
in
js
lock
test
int
cli
or
pop
lahf
(bad)
jmp
cs
or
dec
xchg
jmp
rcl
push
repnz
dec
mov
daa
inc
dec
dec
push
stos
arpl
mov
xchg
idiv
xor
fdiv
sbb
push
mov
adc
fidiv
aas
out
popf
dec
mov
fs
push
mov
cdq
fst
and
data16
retf
ret
push
pop
test
out
sub
rol
xchg
xchg
movs
outs
fsub
daa
pusha
push
jbe
cmp
rcl
loop
or
push
and
daa
sub
push
sbb
xor
imul
xchg
add
xchg
mov
pop
xor
fst
scas
int3
(bad)
scas
scas
popf
lea
jg
inc
loop
into
and
dec
mov
test
popa
xchg
popa
pop
push
mov
adc
mov
push
mov
popf
mov
xchg
lods
in
sbb
int3
fdiv
mov
jmp
push
mov
stos
mov
jmp
das
push
sti
(bad)
lea
mov
retf
call
loope
xchg
sub
mov
mov
mov
dec
push
loopne
adc
jecxz
mov
xor
lea
and
xchg
pop
push
sub
leave
xchg
mov
lods
mov
add
das
mov
dec
movs
frstor
mov
mov
sub
pushf
pop
popa
mov
ins
fldenv
jg
rcr
and
push
push
sub
sbb
push
add
cmc
cmps
sub
mov
mov
inc
lock
pop
les
stos
movs
inc
add
adc
inc
fs
fcomp
in
neg
fs
icebp
fbld
sub
jecxz
imul
add
fsubp
inc
lods
outs
or
mov
xchg
sbb
mov
or
jne
xchg
aam
scas
mov
imul
push
(bad)
push
mov
pop
lods
stos
xchg
xchg
pop
call
cmp
dec
outs
(bad)
cmp
xchg
xor
add
xor
pop
push
hlt
jnp
scas
sbb
test
fwait
mov
(bad)
rcr
pop
adc
je
icebp
jnp
sub
aas
sbb
ror
test
nop
(bad)
fstp
push
mov
fisttp
fs
int
bound
aaa
xchg
mov
cmps
xchg
stc
jae
jecxz
cmp
or
mov
ret
jle
push
retf
push
push
out
mov
xchg
inc
movs
cmp
sub
mov
fs
out
pushf
jnp
fbld
mov
dec
pop
add
cli
jmp
gs
inc
mov
jbe
mov
mov
xchg
mov
mov
mov
into
mov
(bad)
pop
jmp
sbb
ja
ret
jge
mov
or
jae
sahf
fdivr
push
jmp
not
pop
mov
jecxz
sub
outs
idiv
dec
in
scas
(bad)
inc
mov
xchg
loop
inc
pop
dec
das
cmps
fldcw
test
jae
sub
mov
cmp
push
xor
mov
mov
fwait
push
popf
test
inc
neg
shr
push
ds
mov
mov
mul
mov
cli
jb
pop
es
push
popf
rep
outs
outs
jg
mov
bsr
in
adc
jne
mov
jmp
(bad)
(bad)
and
retf
dec
cmp
lods
mov
shl
bound
and
lahf
stos
or
jmp
in
push
(bad)
pop
cmp
jnp
retf
mov
xor
jecxz
into
inc
loope
repnz
es
push
cmp
in
and
jns
into
lods
push
and
mov
pusha
into
and
xchg
add
div
cmp
xchg
stos
into
dec
jns
dec
mov
push
xor
sbb
jne
add
iret
out
xor
inc
outs
cli
popf
xchg
cwde
inc
retf
out
daa
cli
dec
xchg
cld
popf
enter
enter
(bad)
mov
out
pop
retf
(bad)
hlt
lods
mov
add
pcmpgtb
out
sub
addr16
mov
inc
lock
pop
xchg
cld
icebp
inc
dec
icebp
add
int3
pop
mov
loop
mov
add
ja
jp
pop
fmul
xchg
stc
in
jmp
pop
inc
add
xchg
or
movs
sbb
xor
je
bound
and
inc
inc
mov
imul
in
inc
and
clc
into
daa
jmp
aad
lds
rcl
icebp
adc
(bad)
int
sub
dec
(bad)
adc
or
mov
out
push
lods
bound
and
fist
inc
ret
adc
push
cwde
fwait
jno
cmc
mov
dec
(bad)
xchg
pop
mov
lea
fbld
aas
jmp
lahf
jmp
lahf
sti
aad
call
jp
sbb
ffree
ins
out
xchg
jne
(bad)
jmp
pushf
mov
push
cmp
lock
add
xor
pushf
scas
ins
inc
mov
and
cld
ins
add
sbb
call
ret
ja
push
inc
sbb
jp
popa
push
test
or
jnp
pop
mov
jp
sbb
(bad)
ja
dec
push
mov
leave
sub
cmp
pop
retf
mov
and
dec
ds
xor
out
mov
sbb
xor
jae
add
stc
in
sbb
test
push
mov
pop
out
out
fisttp
xor
cli
xor
scas
out
adc
adc
ret
mov
jne
lea
push
pop
jne
push
jg
pusha
inc
dec
hlt
xchg
into
cmp
cmp
mov
(bad)
sub
sub
ins
pop
xor
(bad)
stos
adc
adc
mov
inc
hlt
lds
cmp
lea
test
xor
(bad)
fidiv
jle
xchg
push
enter
push
retf
xor
sbb
daa
mov
adc
push
lods
and
mov
dec
jne
jae
(bad)
(bad)
(bad)
hlt
test
enter
and
jbe
cld
or
aad
pop
js
push
loopne
add
push
mov
inc
mov
pop
cmp
mov
jl
lods
push
push
jge
fadd
mov
daa
bound
or
ins
je
div
mov
jl
and
sub
jp
dec
pushf
cmps
nop
movs
ins
mov
xchg
mov
and
xor
lods
in
fsubr
or
xchg
xchg
xchg
or
push
jno
arpl
inc
gs
lods
mov
out
sub
jae
setb
pop
xchg
push
mov
cmp
mov
sub
and
test
(bad)
sbb
mov
cmp
jns
dec
adc
pop
push
dec
mov
cli
jb
ret
mov
and
dec
movs
dec
xchg
cwde
test
pushf
div
add
xchg
enter
cli
pop
mov
lea
call
xchg
fcomp
repz
dec
mov
dec
imul
push
dec
jge
cmc
cs
jmp
stos
aas
sbb
das
push
xchg
pushf
sbb
pop
mov
mov
xor
arpl
push
stos
cmp
dec
mov
sbb
add
mov
xor
adc
and
push
outs
sub
fstp
(bad)
pop
test
inc
es
cmp
int3
add
pop
(bad)
pop
mov
jl
push
add
and
jle
xchg
sub
ins
(bad)
ss
movs
lea
xlat
call
push
xchg
cdq
push
inc
scas
pop
xchg
test
xchg
aam
mov
ror
jo
xor
add
xchg
add
xchg
add
out
cs
fld1
xchg
mov
push
sub
adc
int
or
sub
cmp
push
out
sub
pop
popa
or
sbb
scas
push
pop
jne
ret
adc
add
test
dec
in
les
sub
in
(bad)
ds
lods
ins
addr16
inc
sti
xchg
xor
(bad)
pop
cmp
dec
int3
cmps
sbb
movs
push
and
in
pop
jo
mov
or
lea
fisub
dec
jle
push
shl
jle
xor
xchg
daa
shr
ret
sbb
fcom
pop
inc
inc
sub
pmaddwd
jp
cmps
loope
jnp
cdq
adc
in
mul
into
ficom
repz
xchg
mov
(bad)
ja
jo
das
nop
lods
int3
mov
pusha
sbb
idiv
je
push
adc
push
and
pusha
push
pop
lea
sub
inc
sahf
fsubr
hlt
fcmovb
xor
call
leave
(bad)
sub
lea
xchg
cdq
xchg
imul
sub
in
les
push
dec
loop
or
outs
push
in
leave
xlat
pop
pusha
repnz
cmp
sbb
sbb
jo
cmp
inc
xlat
imul
bound
or
dec
jae
and
add
push
mov
cli
xor
in
adc
xor
and
and
daa
cmp
cmp
(bad)
mov
lods
xchg
adc
push
mov
pop
add
mov
sti
std
test
cmp
gs
jns
pop
aad
mov
loopne
ins
jecxz
sbb
mov
push
dec
call
jmp
inc
out
adc
jmp
adc
arpl
out
sub
hlt
outs
jle
push
mov
dec
pop
and
data16
imul
xchg
enter
fisubr
mov
and
enter
cwde
ins
test
imul
mov
fstp
loope
imul
sbb
inc
test
clc
cmc
gs
retf
out
gs
pop
or
dec
retf
adc
cwde
mov
xchg
ss
xor
mov
push
sysret
sub
fild
dec
pop
jp
out
pusha
pushf
scas
cs
bound
xor
xor
xchg
mov
(bad)
imul
mov
shl
test
fld
(bad)
cmp
int
fs
mov
ds
add
push
push
push
iret
scas
aad
in
out
mov
out
fcmovnbe
gs
push
mov
pusha
jl
dec
add
stos
lds
adc
inc
dec
sar
mov
xchg
sub
push
sub
out
or
inc
dec
nop
pmaxub
xor
add
dec
cwde
inc
sub
lods
lea
and
jae
push
in
call
and
call
(bad)
mov
call
add
push
jno
push
cmps
push
mov
jl
xor
inc
sbb
xchg
adc
repnz
sbb
inc
jg
pop
ins
jl
mov
fst
sub
cmp
pop
ret
jl
int3
mov
fadd
rcl
push
push
lods
ds
iret
cmp
mov
aad
cli
pop
pinsrw
push
xor
push
cmp
sbb
mov
aad
daa
push
adc
mov
or
pop
mov
inc
mov
push
cmps
leave
(bad)
ins
out
(bad)
aaa
mov
dec
pop
xchg
mov
mov
xchg
loop
jns
ror
pusha
stc
xchg
adc
jb
test
fxtract
cmps
cmp
ds
inc
and
and
hlt
adc
mov
xchg
adc
ins
inc
mov
pop
push
sbb
mov
aas
pop
mov
pop
fstp
popa
pop
scas
(bad)
or
loopne
jmp
or
jg
sub
or
fild
cmc
ret
adc
mov
and
inc
(bad)
and
ret
jbe
jno
cmp
mov
fcomp
call
mov
repnz
adc
mov
push
cmp
sub
mov
or
and
das
repnz
outs
mov
in
ins
jecxz
cmovno
adc
cmp
inc
mov
and
cmp
or
enter
inc
mov
xchg
jecxz
mov
outs
cmp
mov
cmp
arpl
mov
das
pop
lahf
fsubr
mov
and
pop
data16
clc
and
out
ins
mov
sub
jno
fsubr
mov
jb
cs
in
int
mov
adc
js
fsubr
movs
add
leave
(bad)
das
mov
mov
popf
adc
sub
jo
inc
xchg
sbb
dec
push
jmp
mov
inc
xchg
in
fadd
lods
adc
push
pop
ins
pop
fdiv
dec
mov
pop
xor
rcr
dec
cld
sbb
out
daa
mov
fisub
xor
rcr
fidivr
sub
loop
sbb
bound
jmp
and
cmps
imul
ficomp
jnp
test
enter
rol
adc
lock
stc
xchg
fs
sbb
iret
jbe
push
mov
mov
sub
cs
jmp
pop
(bad)
repnz
in
(bad)
leave
jo
loopne
fsubr
dec
(bad)
mov
popa
mov
mov
call
push
aaa
call
out
mov
ds
js
aas
mov
pop
icebp
call
mov
adc
pop
sub
stos
jmp
loopne
mov
push
inc
inc
inc
sbb
test
mov
xchg
pop
(bad)
shl
mov
test
jbe
mov
push
call
in
dec
or
inc
out
mov
pop
cmp
enter
ds
mov
adc
adc
mov
mov
adc
fsubr
popf
pop
jnp
xchg
sbb
in
fcomp
inc
neg
(bad)
cmp
js
nop
icebp
cmp
mov
xchg
lods
(bad)
dec
mov
jbe
lahf
adc
(bad)
xor
sar
nop
pop
mov
add
mov
cmp
lea
jbe
lea
data16
pop
ins
call
fwait
add
mov
jb
test
mov
fcmove
dec
add
cld
call
cmp
iret
add
lea
pop
jne
test
ins
retf
psubw
push
sar
xchg
mov
(bad)
fs
cmp
iret
and
mov
icebp
inc
cmps
sbb
(bad)
out
cmp
stos
cmp
(bad)
dec
jo
sub
test
add
jae
(bad)
(bad)
cmp
pop
icebp
test
xor
and
lods
iret
jle
movs
popf
sbb
pushf
dec
ficom
pusha
mul
(bad)
fisub
inc
xchg
xchg
fisttp
xchg
pop
sbb
jo
inc
ins
sbb
test
sub
add
cmp
push
retf
jge
push
or
dec
lahf
mov
lahf
nop
fst
pop
(bad)
mov
jns
inc
adc
jo
jae
and
sub
xchg
je
outs
or
add
or
(bad)
sahf
imul
xchg
in
out
mov
mov
(bad)
pushf
pushf
add
sbb
xchg
fwait
ds
ret
jb
aaa
enter
adc
cs
cmp
data16
add
loopne
addr16
hlt
xchg
push
push
iret
not
pop
and
movntps
call
mov
sbb
leave
sub
or
jbe
scas
dec
scas
fs
test
int3
gs
xor
mov
cmp
push
aaa
xchg
repz
mov
retf
xchg
lods
test
pushf
push
xor
xchg
fwait
pop
fs
stos
(bad)
imul
mov
or
in
push
mov
mov
adc
pop
mov
sbb
mov
xchg
dec
or
sub
dec
mov
retf
pop
xchg
(bad)
icebp
sub
xchg
gs
les
cmp
mov
in
xchg
mov
test
mov
push
adc
pshufw
aam
cwde
jmp
sub
rol
ins
and
pop
dec
rol
aam
arpl
scas
das
sbb
mov
inc
in
loopne
inc
xchg
scas
jbe
xchg
rcr
add
ins
test
hlt
cmp
add
mov
data16
or
jecxz
xlat
pop
dec
cmps
imul
xchg
push
add
gs
mov
sti
daa
pop
movs
inc
add
dec
ins
add
sbb
test
daa
sbb
scas
and
cmps
es
cmps
or
pop
sub
call
lock
mov
call
repnz
mov
or
or
jno
iret
mov
xor
cmp
xor
mov
leave
cmp
scas
pop
popf
xchg
add
into
retf
inc
sbb
sub
sub
jno
and
mov
push
push
ds
xchg
jae
(bad)
pop
retf
and
xchg
ss
cmc
pusha
aas
rol
push
push
lea
js
push
dec
mov
into
lds
enter
pop
dec
push
bound
in
cmc
ins
add
jbe
adc
push
cmp
in
pop
pop
xor
out
xchg
pop
(bad)
push
aaa
and
cwde
int
in
add
xchg
jg
cmp
retf
call
cmp
and
cli
sbb
mov
adc
mov
jns
movs
mov
dec
or
les
push
jmp
pop
adc
inc
and
mov
adc
repnz
(bad)
mov
xchg
inc
mov
popa
inc
call
hlt
and
in
sub
rcl
out
inc
add
push
mov
lods
arpl
arpl
dec
pop
int
aam
rcl
gs
out
jnp
jne
movs
sub
push
inc
mov
aas
cmps
mov
int
aaa
and
pop
daa
and
loopne
fisttp
or
jecxz
gs
mov
cmp
sub
dec
bound
data16
pop
loopne
sbb
in
ffree
and
or
out
mov
dec
loopne
inc
les
push
std
retf
repz
mov
push
push
mov
pushf
push
sbb
daa
ds
dec
data16
ret
add
nop
xor
fwait
aam
test
addr16
dec
lods
xor
pop
sbb
mov
xchg
jp
stc
push
add
sbb
nop
or
or
retf
movs
mov
sub
in
push
shr
movs
adc
int3
cmp
int3
fdivr
add
cwde
(bad)
mov
cmp
lods
pop
xchg
push
mov
jg
sub
xchg
fcomp
sub
lea
hlt
es
cmp
repnz
pop
shl
sub
or
mov
rcr
fisub
sbb
ficom
bswap
sbb
jmp
outs
mov
stc
aam
add
jle
inc
pop
dec
hlt
push
add
add
shl
sbb
fcom
(bad)
jne
rcr
hlt
imul
pop
nop
dec
push
cmps
pop
test
imul
popa
mov
and
pop
adc
addr16
sbb
push
fdivr
stos
pop
add
scas
addr16
adc
sbb
lahf
xor
push
cmp
cmp
xlat
xchg
mov
push
cmp
push
stc
outs
mov
cwde
xchg
xchg
pop
mov
sub
fdivp
adc
adc
adc
mov
xchg
in
shl
cld
pop
mov
sti
adc
and
repnz
sahf
nop
push
cmp
xor
ror
stos
or
sbb
(bad)
fimul
fsubr
mov
jmp
fs
dec
test
inc
adc
mov
push
push
add
pop
(bad)
ror
jbe
mov
mov
int3
mov
and
jno
pop
fist
lods
mov
mov
sahf
xchg
push
loopne
pusha
into
inc
leave
retf
cdq
and
ins
pop
jg
cwde
xor
pop
pop
xchg
ret
sub
cmp
push
mov
cs
push
cwde
push
jecxz
inc
cli
mov
into
jo
dec
jge
js
xlat
test
jo
jae
adc
push
sbb
xchg
out
imul
xchg
test
adc
push
repnz
aad
icebp
mov
and
cmc
dec
inc
add
movs
(bad)
or
adc
add
sub
and
sub
mov
fisttp
fstp
inc
mov
mov
ja
add
int3
add
ss
dec
(bad)
cmc
rcl
sti
push
aam
adc
mov
addr16
cwde
sahf
hlt
dec
cld
jno
out
sahf
mov
lds
popf
shr
cmps
ret
dec
ror
ja
dec
(bad)
sbb
mov
sub
lahf
leave
popf
daa
cdq
mov
pop
and
or
lds
inc
and
pop
cmp
stos
fst
or
stc
out
dec
movs
mov
bound
cli
and
call
push
adc
scas
pop
xchg
cs
scas
stc
fwait
jns
push
jg
jp
cmps
push
cmp
jo
mov
loop
pop
mov
fdivr
or
popf
cmc
hlt
cmp
imul
mov
fwait
jae
cmps
dec
adc
xor
cdq
xchg
pop
inc
inc
mov
mov
mov
push
dec
mov
and
arpl
and
enter
mov
in
push
xor
mov
xor
ins
pusha
cmovae
cmp
sbb
imul
in
mov
out
inc
push
mov
and
bound
or
mov
sbb
xchg
div
jecxz
es
ins
inc
in
xchg
enter
stos
int3
jl
xor
or
and
cmp
test
cmp
mov
jns
js
pop
ss
out
inc
mov
xchg
test
pop
out
cmp
xchg
loopne
jae
sbb
xchg
or
inc
cwde
or
add
std
dec
jno
aas
xor
jnp
mov
dec
dec
mov
sbb
leave
stos
mov
div
fnstsw
or
imul
fistp
sti
sub
inc
mov
ror
push
(bad)
mov
and
and
sub
sbb
scas
jecxz
movs
dec
(bad)
sahf
int3
mov
imul
jb
imul
clc
enter
inc
or
outs
not
inc
pop
loop
sub
xor
bound
call
ficom
scas
add
mov
imul
mov
fdiv
retf
pop
fadd
dec
cmp
lahf
ror
or
mov
sub
jp
data16
xor
aad
mov
(bad)
popf
nop
stos
jns
push
pop
fs
test
mov
mov
lds
(bad)
mov
cmp
push
ror
ret
add
ins
repz
push
jp
add
sub
outs
scas
sar
lods
pop
(bad)
pop
test
fild
pop
(bad)
cli
pop
fst
lods
mov
adc
jmp
sahf
push
pop
jno
sahf
inc
xchg
pushf
xor
lea
repz
mov
adc
xchg
call
mov
enter
sbb
jae
pop
pop
std
les
pop
and
(bad)
adc
add
cli
les
sbb
stos
and
(bad)
jns
fld
ret
sti
inc
jae
call
daa
pushf
dec
ja
jbe
xchg
addr16
add
sub
pop
xlat
rcl
xchg
hlt
adc
sbb
xor
fmul
mov
stos
mov
pop
xchg
call
xchg
add
mov
out
push
mov
sbb
sahf
xchg
repz
jecxz
mov
popf
push
mov
pusha
ja
fistp
mov
or
(bad)
pop
popf
sub
retf
mov
inc
cld
mov
ficomp
or
lahf
jae
jl
adc
in
ror
inc
mov
fisubr
stos
fs
mov
sbb
jbe
push
xor
aad
mov
nop
pop
push
sbb
mov
fistp
push
iret
lahf
loopne
fiadd
addr16
pop
ja
imul
inc
mov
scas
add
jmp
mov
je
jg
xor
add
jl
arpl
pop
(bad)
(bad)
dec
push
jp
mov
rol
(bad)
mov
mov
add
adc
xchg
add
hlt
mov
(bad)
adc
sub
scas
mov
and
js
cld
imul
ins
fld
ss
and
sub
call
and
inc
cdq
ds
in
test
adc
pop
jns
setae
pop
(bad)
fidiv
cs
jecxz
or
inc
pop
adc
lods
outs
addr16
ja
(bad)
cmp
mov
fnstenv
xchg
arpl
shl
mov
into
mov
pushf
scas
mov
cmp
out
mov
push
xchg
xor
mov
stc
jp
push
dec
adc
(bad)
or
pop
and
xchg
retf
mov
mov
add
imul
xor
popf
sub
inc
sub
mov
xchg
xchg
pushf
push
and
fnstcw
xchg
(bad)
mov
int
call
in
fwait
clc
sbb
(bad)
sbb
scas
stos
sub
leave
cmc
pop
retf
mov
mov
sbb
rol
in
sbb
cwde
fisttp
push
(bad)
sahf
xchg
cli
pop
inc
ret
test
shl
pop
dec
lahf
arpl
or
pop
cmp
xbegin
push
push
mov
in
jo
iret
xchg
lahf
rol
mov
loop
fstp
loop
mov
jecxz
inc
retf
lds
mov
mov
(bad)
sti
xchg
xchg
xor
push
sbb
icebp
shl
ret
cmps
movs
add
push
dec
mov
cmp
test
dec
cmp
sbb
(bad)
daa
ins
out
pop
push
fidivr
push
adc
sbb
int
stc
std
sub
add
leave
push
adc
pop
push
sbb
inc
out
ss
mov
in
sbb
push
jno
mov
hlt
jmp
mov
dec
imul
jb
ins
push
xor
and
pushf
sahf
pop
pop
xchg
fisubr
je
fs
dec
ss
dec
inc
aas
enter
jne
int
push
or
sub
daa
call
dec
mov
imul
xchg
xchg
jne
xchg
mul
jns
sub
scas
pop
push
xchg
ds
addr16
popa
sti
je
cmp
cmp
test
lea
mov
ror
stc
int
jl
call
push
rol
pop
push
push
mov
mov
sub
cmps
xchg
rcl
inc
mov
clc
leave
(bad)
fucomip
mov
ins
gs
mov
pop
ins
outs
test
mov
ja
push
call
pusha
movs
sbb
and
mov
cmps
jle
push
iret
jns
push
xchg
dec
xor
scas
cmp
sbb
jg
inc
push
adc
mov
pop
retf
or
rol
dec
fsubr
fsubrp
test
mov
fimul
xchg
pop
rcr
jl
push
dec
movs
xchg
pop
call
call
les
xor
lods
and
movs
xchg
fistp
leave
and
cmp
(bad)
inc
cmp
inc
in
mov
(bad)
mov
(bad)
into
(bad)
cdq
or
test
sub
jns
cmp
retf
fisub
and
xlat
dec
in
std
adc
lock
adc
not
push
stc
cmp
xor
xchg
in
dec
jle
rcl
or
dec
fld
cmp
movs
ins
add
push
sbb
add
inc
mov
cmp
out
xor
push
mov
stos
dec
cmc
out
clc
jno
dec
scas
ins
fdiv
fwait
or
ja
loop
hlt
scas
push
push
repz
iret
(bad)
cmp
cmp
aas
mov
mov
xlat
mov
fwait
aas
hlt
fisubr
xor
pusha
push
shl
sahf
or
sti
mov
fbld
es
stos
je
inc
inc
jb
mov
xchg
mov
inc
stc
inc
call
xchg
xchg
mov
call
ret
sub
out
jnp
add
xchg
into
aad
je
loop
(bad)
mov
push
mov
mov
test
fwait
and
push
hlt
push
imul
loope
stos
pop
or
fisub
adc
std
or
das
idiv
int
icebp
xor
inc
enter
into
jbe
or
out
rol
nop
xor
pop
fnsave
(bad)
shl
retf
jmp
movs
lds
and
test
call
test
fsubr
jle
sbb
ss
ds
std
jo
add
fs
pop
rcl
ins
scas
lds
sub
iret
add
and
lds
mov
lock
xor
scas
retf
xchg
test
push
call
aad
js
aas
fsubr
scas
cmp
mov
mov
(bad)
jbe
mov
sbb
pop
sub
mov
ret
clc
gs
inc
mov
dec
cmp
xor
and
mov
retf
inc
push
daa
xchg
and
inc
jns
mov
fstp
in
add
or
or
out
mov
xchg
pop
jnp
cdq
sub
js
adc
push
and
inc
aas
dec
dec
push
mov
mov
xor
repz
xor
mov
add
stos
fadd
sahf
mov
cmps
mov
cmp
jge
outs
xor
and
cmps
enter
test
push
mov
cmp
movs
js
adc
add
jg
xor
adc
shl
adc
mov
fs
mov
lods
sbb
outs
stc
and
dec
add
in
cmps
add
pop
daa
adc
inc
scas
mov
push
cmp
mov
movs
repz
push
xor
test
in
mov
cmp
sbb
sub
call
adc
test
dec
cli
cpuid
or
jmp
inc
repnz
mov
push
pop
rcl
add
in
jbe
mov
mov
retf
sub
movs
sbb
addr16
cmp
scas
pop
jmp
inc
outs
mov
sbb
sub
xor
jl
xchg
ret
fwait
mov
mov
cmp
or
bnd
(bad)
push
cli
bound
and
iret
into
pusha
mov
mov
or
lods
out
les
ror
cdq
aaa
push
jnp
pusha
aam
dec
pop
ins
add
dec
outs
xchg
push
fcomp
dec
adc
lods
push
add
add
sub
or
adc
dec
mov
or
and
or
adc
inc
xchg
arpl
push
sub
scas
fucomi
aad
xchg
inc
loop
xor
adc
cmp
lods
pop
leave
jge
mov
ret
inc
pop
(bad)
iret
jb
clc
(bad)
pop
fwait
pop
xor
mov
rol
movs
call
dec
sbb
jmp
push
shl
cld
xlat
jns
xor
inc
fcom
and
cmp
push
xor
div
cmp
or
push
inc
jmp
mov
push
es
loop
(bad)
sub
sahf
add
adc
xlat
dec
adc
data16
ret
stc
xor
(bad)
adc
in
in
mov
fucomip
dec
inc
pop
cld
retf
(bad)
mov
cdq
or
mov
sbb
cli
cmps
stos
add
inc
ins
mov
cmc
and
mov
int
pop
adc
adc
in
(bad)
sbb
adc
xchg
push
out
rcl
or
add
in
pop
xchg
data16
test
sbb
ss
jbe
lea
xchg
sti
and
add
ins
cld
loopne
push
xchg
add
gs
push
push
push
push
mov
inc
pop
or
jle
push
in
repnz
jo
outs
mov
imul
stos
sbb
nop
and
std
sar
fidivr
lahf
sub
ins
fist
imul
icebp
inc
out
aam
lea
(bad)
iret
xchg
cmp
dec
push
aaa
push
shr
mov
stc
call
or
lea
jb
jo
fild
pusha
jae
mov
repz
sar
scas
or
call
outs
inc
sub
pop
mov
adc
test
mov
mov
xor
ja
loop
arpl
cdq
pop
enter
pushf
ds
and
enter
aad
imul
repz
sub
pop
and
mov
dec
mov
ins
mov
cwde
cmc
out
mov
sub
or
ds
ins
es
push
mov
pop
shr
ss
mov
(bad)
push
adc
xlat
std
cmp
lea
scas
mov
ja
mov
mov
jnp
mov
es
setnp
movs
dec
xchg
cld
push
cmp
inc
or
jmp
push
leave
sub
jmp
jmp
or
pop
ret
xor
jnp
mov
aam
ss
jnp
mov
repnz
push
les
add
push
das
cmp
inc
and
(bad)
dec
inc
adc
(bad)
repnz
(bad)
sti
push
pop
push
mov
(bad)
into
xchg
lds
punpckhwd
pop
pop
and
mov
mov
push
cmp
dec
push
dec
hlt
xlat
jge
mov
call
test
ds
je
mov
mov
or
les
mov
xor
cmp
fwait
dec
jl
pop
lahf
mov
mov
mov
jae
mov
jmp
div
mov
aas
into
mov
jae
and
xor
cmp
iret
fisubr
xor
cwde
jb
test
inc
arpl
mov
push
nop
(bad)
stc
cdq
inc
arpl
cdq
dec
es
fisubr
mov
mov
dec
jns
shr
pusha
pop
adc
mov
dec
je
sub
ds
enter
push
leave
cmp
sub
movs
xlat
pushf
jno
aas
dec
xchg
call
outs
lds
das
push
cmp
daa
jno
or
add
add
xchg
mov
ficomp
or
aas
xor
daa
push
push
xor
imul
repz
dec
scas
add
push
pusha
inc
sti
js
cdq
jnp
(bad)
xchg
(bad)
scas
std
adc
stos
dec
sbb
xlat
ss
mov
das
ffreep
adc
fcmovb
pop
lds
lock
cmp
mov
cmps
cmp
xchg
pop
cdq
sbb
sub
movs
movs
test
mov
stc
adc
rol
mov
ds
cmp
push
(bad)
pop
fsub
jle
inc
inc
loopne
xchg
or
(bad)
push
fsub
inc
cs
or
push
cli
push
fcomp
xchg
mov
dec
jl
ja
pop
fs
icebp
icebp
fwait
mov
mov
push
cdq
or
loopne
retf
aaa
jnp
push
pop
adc
sub
fist
inc
scas
mov
xor
(bad)
adc
imul
(bad)
retf
jo
xchg
pop
push
push
or
mov
cs
xor
or
mov
mov
aas
sub
lds
not
push
(bad)
(bad)
sub
sar
cwde
outs
(bad)
or
mov
cmps
mov
xor
cld
sti
cld
ds
jmp
mov
jp
ins
pop
push
push
ins
push
push
mov
dec
jp
mov
aaa
mov
jmp
push
mov
(bad)
mov
pop
and
push
jne
add
add
mov
xchg
ds
mov
repnz
inc
pusha
cmp
test
cmps
stc
push
out
jmp
inc
and
push
jne
jne
int3
std
mov
push
mov
(bad)
nop
mov
adc
repnz
mov
std
dec
xchg
lods
mov
xor
xchg
mov
movs
jb
or
out
fidivr
xor
outs
mov
cmp
fnstsw
sub
or
loopne
bound
iret
pusha
ror
into
adc
movs
mov
mov
out
push
sbb
mov
push
mov
(bad)
xchg
repz
xor
loopne
daa
jae
mov
lea
xor
and
push
icebp
(bad)
in
in
jo
jo
sub
out
fbld
mov
stos
xchg
dec
aaa
add
hlt
mov
pop
push
stos
idiv
out
test
cmp
adc
add
mov
xor
and
push
int3
cmp
pop
rcl
(bad)
xchg
(bad)
mov
xchg
cmc
inc
scas
pop
jno
xlat
push
jb
push
test
rcr
jle
leave
or
cwde
imul
xor
and
fs
in
mov
dec
enter
clc
sub
push
jg
xor
jle
jl
mov
or
fld
xor
mov
mov
aam
sbb
fstp
stc
in
je
jmp
adc
shl
nop
in
out
sbb
adc
aas
jb
xlat
mov
cmps
mov
mov
mov
mov
cwde
pop
lock
pop
hlt
mov
test
cmc
cmp
or
scas
xor
push
shl
loopne
fxch
or
int3
scas
(bad)
cli
sub
stos
xor
in
cmps
xchg
cmp
in
out
shr
inc
mul
push
mov
std
lock
xor
int
ss
jo
and
push
sub
sahf
stos
fdivr
stos
into
out
(bad)
(bad)
cmps
sub
(bad)
cdq
adc
dec
push
mov
inc
dec
stos
mov
(bad)
dec
sbb
mov
pusha
xlat
xor
sbb
icebp
loop
lahf
std
outs
cwde
xor
les
(bad)
shr
pushf
dec
shl
dec
sbb
scas
(bad)
in
rcl
stc
scas
dec
mov
xor
sub
adc
cmp
mov
inc
xor
lods
adc
mov
push
or
mov
jo
sbb
shl
xor
repz
lea
pop
jne
inc
xor
and
scas
and
sbb
jmp
adc
pop
lock
xchg
popa
xor
jb
and
sbb
push
add
stc
ins
int3
iret
mov
and
and
push
lea
adc
jbe
sbb
add
pop
mov
inc
cmp
mov
mov
mov
imul
retw
and
ins
out
mov
inc
xlat
ins
push
mov
imul
mov
inc
fmul
adc
mov
mov
push
fld
push
pop
dec
xchg
mov
ror
imul
aaa
bound
test
daa
mov
push
dec
lea
test
adc
(bad)
icebp
in
add
cmp
sub
xchg
out
imul
lock
sbb
outs
or
icebp
xor
adc
mov
(bad)
xor
mov
mov
xor
mov
jp
cmc
fidiv
movs
ss
sub
ret
out
and
cmp
sbb
and
cdq
mov
and
fs
gs
dec
clc
inc
pusha
push
sub
push
add
shr
aas
inc
mov
retf
adc
test
fstp
(bad)
dec
in
or
loope
jae
jp
repnz
cdq
mov
(bad)
dec
mov
or
dec
mov
xor
stos
in
cdq
movs
jecxz
mov
cdq
lods
dec
mov
xchg
push
test
push
mov
(bad)
cs
ror
mov
mov
jg
mov
cli
push
add
xchg
test
and
sbb
jle
pusha
test
fld
or
pop
jmp
cmps
and
jne
mov
inc
xor
jns
enter
jg
dec
cli
call
push
push
mov
xor
in
outs
call
lock
or
xor
cbw
cmp
fwait
call
cmps
lods
sbb
(bad)
fs
mov
mov
add
jbe
jle
push
and
cmp
scas
or
jbe
mov
call
jne
mov
dec
mov
cmps
or
aaa
ja
call
push
out
out
adc
pop
lods
xor
cmp
rcr
ss
(bad)
mov
fsubr
in
adc
fmulp
mov
add
inc
or
mov
outs
into
stc
mov
jg
in
mov
(bad)
and
ins
call
cmps
mov
adc
(bad)
and
popa
cmp
cmc
das
(bad)
out
inc
xchg
mov
push
scas
pushf
fistp
jmp
adc
stos
das
mov
icebp
adc
mov
sub
in
nop
inc
je
fidivr
inc
(bad)
pushf
jmp
loop
xchg
mul
push
and
call
lods
mov
div
ins
cwde
sti
sti
pushf
call
add
mov
cld
(bad)
cs
xor
mov
pop
sbb
movs
jae
addr16
push
daa
jle
mov
fldz
into
call
cmp
mov
and
pop
cdq
sbb
cs
lahf
cld
js
(bad)
adc
and
das
mov
cmp
lahf
imul
je
sbb
inc
push
adc
fcmovu
popf
pop
mov
in
inc
inc
add
addr16
repnz
test
aam
mov
rol
pushf
addr16
xor
ds
xchg
(bad)
popf
mov
and
sbb
arpl
sub
cs
jle
fucomi
cdq
sbb
test
loop
sub
mov
cmp
sbb
ja
js
clc
(bad)
xchg
cld
lods
xor
mov
mov
ja
std
adc
push
stos
mov
push
jmp
aad
popa
sbb
clc
ja
stc
adc
pushf
push
bound
add
retf
cmp
fnsave
addr16
mov
nop
xor
add
jge
xlat
push
shr
call
sbb
arpl
shr
ins
and
dec
inc
pop
ret
enter
cmp
lods
adc
inc
jge
pop
aad
push
pop
cdq
jne
mov
(bad)
ja
jnp
jg
ficomp
push
xchg
mov
jae
inc
pop
pop
out
cmp
push
pop
mov
divss
aad
mov
cmc
or
sti
test
pop
mul
inc
sub
pushf
mov
mov
repnz
ds
into
xor
fbld
(bad)
sbb
std
lea
dec
lahf
sbb
mov
ins
adc
mov
leave
inc
pop
fsubr
xor
out
pop
mov
sub
and
mov
pop
adc
cli
in
fidivr
jg
inc
and
or
(bad)
scas
sub
(bad)
shr
mov
push
call
mov
repz
cmc
dec
iret
xchg
adc
add
sub
ins
scas
push
dec
out
adc
sbb
dec
adc
js
jae
jo
test
push
int
xchg
repz
ds
push
mov
lahf
lds
dec
xor
cs
outs
mov
xor
inc
xchg
shl
xchg
pushf
outs
fsub
and
xor
mov
cmp
sti
and
push
ss
out
add
call
and
add
jmp
and
fmulp
xchg
aad
and
xchg
adc
out
sbb
mov
dec
sub
pushf
shl
jp
sub
mov
mov
mov
test
push
push
(bad)
mov
and
and
mov
cmc
sub
jns
xor
in
or
and
leave
ror
les
retf
mov
test
mov
xchg
or
addr16
scas
xor
fiadd
sahf
sbb
call
int
dec
test
out
sar
addr16
and
mov
aas
sti
xor
stc
and
imul
cli
sub
dec
idiv
push
jl
pop
ss
cs
mov
pop
inc
mov
dec
and
ss
aad
movs
stos
outs
mov
loop
adc
push
js
or
dec
adc
inc
dec
push
stos
dec
jae
adc
push
out
inc
sahf
xchg
cwde
adc
sahf
mov
rcl
out
out
popf
inc
add
jb
adc
sbb
and
mov
aaa
call
fidiv
std
push
push
fdiv
retf
push
xchg
fnsave
jae
or
adc
rcr
popa
scas
mov
mov
arpl
(bad)
push
add
loopne
and
jge
in
lds
sub
lds
pop
mov
stos
xchg
jb
out
test
jne
cli
xor
and
out
in
pop
push
or
rcl
ja
mov
nop
not
outs
mov
inc
adc
pop
adc
pop
ret
jne
pop
aad
jmp
xor
cwde
arpl
push
xor
sub
mov
repnz
sub
add
jnp
lods
cpuid
mov
or
frstor
sbb
mov
sub
pop
cs
xlat
sahf
mov
sti
inc
aaa
call
adc
and
daa
cwde
jmp
pop
outs
aas
je
cs
jae
push
loopne
lods
fsub
mov
sbb
mov
ds
mov
cmp
gs
mov
pop
test
and
arpl
jne
xor
lods
popf
popa
xchg
push
cmp
retf
push
mov
sbb
pusha
dec
mov
pop
xchg
pushf
inc
or
and
and
xchg
and
mov
dec
mov
cmp
jmp
dec
scas
inc
stc
jmp
ss
dec
loop
add
aam
fidivr
mov
xchg
movs
out
inc
sbb
outs
mov
pop
jbe
mov
pop
lock
adc
mov
stos
icebp
jo
pop
adc
push
shr
fld
jge
test
cli
mov
cmc
loope
jb
into
cmp
or
adc
fwait
imul
je
test
aad
or
ds
stc
cmp
pop
das
lods
call
into
daa
jno
xor
stc
pop
in
jl
sar
xchg
mov
shr
mov
add
das
jmp
pop
and
mov
arpl
and
push
aaa
cmps
and
rcl
xchg
xor
jns
mov
push
test
xor
mov
push
out
fwait
mov
sti
xchg
fcmovnbe
in
jg
lock
inc
movs
dec
cmp
cmp
aaa
cmps
cld
cmp
add
das
call
inc
jl
dec
pop
push
call
std
lds
and
add
mov
leave
push
sbb
call
cdq
iret
xchg
dec
or
or
test
movs
mov
dec
into
cmp
or
div
pop
je
push
and
mov
sub
stos
rcr
sub
and
cvttps2pi
or
imul
inc
lahf
stc
add
mov
mov
adc
dec
fiadd
jb
aad
ficomp
inc
xor
stos
sub
push
xor
jb
mov
sbb
dec
sbb
cmp
out
call
pusha
mov
xchg
sbb
push
scas
or
and
shl
(bad)
imul
mov
mov
jnp
cmp
xor
lods
cmc
cwde
jno
xor
inc
dec
imul
mov
movs
lock
push
lods
in
repnz
add
inc
sbb
sub
jo
clc
or
ds
and
lock
adc
outs
jne
(bad)
cmovge
stc
jnp
mov
dec
dec
xchg
mov
std
jo
adc
dec
(bad)
sub
pop
add
add
pop
dec
out
mov
test
cmps
push
or
jg
sub
jo
cdq
or
jl
cwde
scas
xchg
inc
jns
add
sar
jle
push
xchg
pop
rol
or
push
push
mov
push
jl
mov
jl
mov
outs
jo
inc
push
hlt
and
mov
ins
push
add
pop
in
loop
inc
out
outs
mov
mov
inc
cmp
pop
hlt
ds
sbb
mov
dec
daa
xchg
push
mov
fsub
or
or
and
mov
int
mov
pop
les
(bad)
movs
push
xchg
test
test
xor
dec
and
pop
inc
or
or
xlat
and
mov
sub
inc
jmp
xor
test
mov
pop
dec
xchg
(bad)
sub
loop
push
push
cmp
adc
aam
ret
dec
jo
xchg
ins
and
(bad)
scas
les
sub
jno
pop
test
and
push
rol
pop
jmp
data16
xchg
lock
rsm
ret
jecxz
dec
and
lods
fwait
test
dec
cld
das
mov
lahf
jmp
into
inc
lahf
xor
int3
test
shr
cmp
mov
cmps
ins
xchg
add
hlt
hlt
pop
pushfw
out
call
inc
add
rol
das
add
add
cmp
popf
sub
jnp
push
inc
mov
jb
ins
cwde
cdq
std
xchg
(bad)
jge
aam
cmp
jecxz
xor
imul
imul
cmps
aam
sub
or
sub
jmp
mov
lock
xchg
jecxz
sbb
mov
adc
stos
ret
aaa
pop
cmp
lods
and
sbb
jle
sahf
dec
in
in
in
xor
or
jecxz
gs
add
in
cli
mov
movs
lods
dec
js
push
xchg
cs
add
cdq
mov
(bad)
lock
cli
adc
inc
fimul
leave
int
cmp
dec
xchg
jbe
cmp
ss
cmps
(bad)
mov
in
xchg
add
xchg
cmps
fistp
clc
out
call
int
mov
aas
inc
jmp
adc
in
xchg
and
add
iret
lock
add
add
mov
cli
jae
shl
push
test
cmp
out
sub
and
lea
ret
(bad)
and
dec
dec
nop
jmp
mov
in
fbld
and
(bad)
(bad)
push
pop
jno
lods
scas
ins
and
cmp
dec
xor
pop
xor
je
xchg
std
shl
imul
jp
cmp
stc
ds
jnp
inc
cmp
repz
retf
ret
pusha
push
push
cli
sbb
hlt
sub
in
cmp
dec
or
push
arpl
push
mov
adc
(bad)
enter
mov
xor
mov
xor
aas
pushf
dec
cwde
shl
push
add
cmp
call
pop
rcl
xor
(bad)
in
inc
and
or
push
(bad)
xor
ss
loopne
mov
clc
ds
movs
push
cmp
adc
std
pop
loop
bound
cli
lds
xchg
pushf
and
vmovaps
xor
cli
lods
pop
dec
fisttp
pop
ror
jl
mov
retf
stc
icebp
movs
dec
jnp
aaa
and
jnp
pushf
jno
dec
adc
mov
push
push
jno
pop
and
ins
mov
sti
ins
out
(bad)
and
pop
mov
adc
call
rcr
imul
pop
adc
into
js
out
add
ins
inc
cmp
mov
mov
push
loopne
sbb
cmps
add
pop
jne
addr16
mov
mov
xor
dec
(bad)
js
adc
dec
inc
call
fwait
inc
mov
sbb
mov
stos
mov
pop
xchg
xchg
push
push
adc
fcom
dec
call
or
xor
cwde
scas
je
xchg
ret
and
pop
jns
inc
adc
cmc
mov
dec
push
leave
xor
jbe
cmc
sub
pop
stc
xchg
inc
fcomp
retf
jmp
mov
xor
sti
add
push
das
rcr
aad
xor
arpl
xchg
adc
sub
aas
outs
mov
mov
push
pop
jp
and
iret
xchg
retf
ret
dec
and
pusha
stc
pop
sysenter
leave
rcr
push
into
cmp
push
arpl
sub
daa
pop
rol
mul
test
ja
aaa
mov
outs
push
ds
sahf
dec
push
xchg
(bad)
fstp
movs
mov
inc
pop
xor
adc
ret
xchg
mov
push
and
data16
stos
sahf
sub
pop
xchg
cmp
(bad)
hlt
inc
std
cmp
dec
fs
fistp
fsub
sub
lods
push
dec
dec
or
shl
fsub
jnp
movs
add
inc
outs
jecxz
push
fwait
call
cmp
arpl
scas
dec
mov
data16
(bad)
fld
sbb
jnp
and
cmp
xchg
enter
or
mulps
or
das
adc
call
bound
pop
fcom
test
(bad)
cmps
xor
cmp
adc
int3
(bad)
test
sbb
pusha
in
cmp
pop
inc
aas
xchg
cmp
xchg
out
int3
inc
pop
mov
xchg
in
or
movs
mov
pusha
sbb
adc
jmp
outs
aaa
outs
xchg
test
ss
hlt
or
add
movs
push
sbb
xlat
jmp
adc
shl
sbb
sbb
cmp
stos
sahf
lahf
es
mov
cmps
and
jg
cmp
inc
mov
int
or
dec
popa
lods
lock
pop
add
adc
sbb
int3
inc
pop
cs
aam
imul
xlat
sub
ja
push
lock
out
xor
lea
arpl
imul
shr
lock
ret
cmps
add
push
push
mov
jno
fldcw
out
stos
cmp
mov
clc
mov
inc
sub
(bad)
in
and
out
jb
pop
add
dec
lds
cmps
lods
sti
dec
mov
in
or
in
pop
into
mov
shr
lea
mov
dec
retf
imul
mov
repnz
out
div
pushf
cmp
add
stos
push
and
ret
cld
or
sti
fisttp
(bad)
jl
dec
ins
test
push
imul
xchg
xchg
scas
mov
jo
enter
xor
push
push
and
inc
shl
aam
sbb
xor
aam
sbb
outs
dec
call
jbe
fld
mov
inc
jg
dec
xchg
mov
mov
bound
xchg
outs
xor
xor
cmp
xor
cs
mov
jl
pop
and
mov
xor
imul
xor
movs
cmp
xchg
outs
xchg
mov
ss
sub
add
addr16
and
loopne
pop
xchg
pop
sub
adc
arpl
ins
sbb
repz
cmp
test
(bad)
jmp
popa
aam
dec
mov
stos
pop
push
push
mov
jb
sbb
out
int
fwait
jg
cli
jns
add
or
mov
cmps
add
sbb
int3
fs
or
or
loopne
pop
and
enter
addr16
fistp
or
ret
xor
lock
das
cmp
shr
imul
mov
push
ret
call
out
call
cmp
lock
leave
push
fcom
pop
push
jmp
sbb
push
cmp
mov
mov
sbb
sub
mov
dec
cmp
push
fwait
push
xor
push
clc
out
push
dec
call
icebp
inc
lods
cmp
cdq
pop
nop
jnp
in
and
xor
and
fsubrp
jno
jmp
sub
out
es
pusha
test
movs
stos
test
or
imul
leave
daa
xchg
ins
jmp
jno
cmp
loop
add
sbb
ret
movs
push
add
pop
retf
mov
mov
repnz
fsubr
inc
in
or
cmps
das
mov
clc
popf
or
mov
mov
scas
mov
cmp
dec
mov
sub
repnz
jle
(bad)
gs
push
in
leave
jbe
push
pop
mov
loop
aaa
cwde
in
iret
mov
mov
sub
bound
je
ja
push
out
shr
mov
sub
xcrypt-ofb
cmps
sub
enter
or
ret
sub
fadd
and
dec
xchg
movs
enter
and
ins
outs
jnp
pop
jge
les
push
inc
test
sti
shl
iret
push
mov
mov
jae
jecxz
and
in
jmp
push
xlat
int
inc
mov
popf
inc
iret
sub
int3
loope
stc
fdivr
inc
mov
push
cdq
jno
das
sub
push
lods
sbb
cld
and
mov
adc
adc
adc
jnp
and
mov
retf
in
mov
loop
lock
add
lahf
xor
dec
adc
jb
enter
push
xor
sar
into
jl
das
add
adc
xor
aam
repnz
and
push
adc
rol
push
mov
dec
push
mov
jecxz
clc
xor
inc
jo
aas
test
aam
(bad)
jno
out
mov
push
or
sub
mov
or
and
shr
pminub
push
out
aam
out
std
or
jmp
iret
sar
test
sbb
jle
pop
mov
mov
push
cmp
dec
xchg
cs
pop
cmc
aam
loope
in
and
je
add
imul
fucomi
inc
test
xchg
mov
sbb
call
stc
retf
pop
cmps
gs
mov
out
xchg
ror
clc
test
outs
mov
mov
movs
and
and
in
loop
sbb
mov
dec
jno
aad
iret
aaa
aaa
dec
cmps
in
jnp
scas
ja
add
jmp
jo
test
mov
xor
data16
adc
pop
imul
xchg
fisttp
adc
je
cli
push
jbe
call
repz
iret
(bad)
iret
pop
inc
push
cmp
jge
push
test
mov
add
jecxz
sub
cmc
fidiv
repz
sub
rcl
mov
xor
inc
push
push
push
mov
js
cmp
shr
dec
jb
popf
mov
mov
and
push
or
test
daa
fbld
ds
pop
jns
jmp
and
xor
aas
inc
xor
pop
fsubr
pusha
mov
shl
loope
fcom
inc
xchg
idiv
ds
stc
aaa
inc
sbb
(bad)
adc
rcl
add
push
test
bound
pmulhuw
rcl
ret
sub
cmp
cmp
retf
(bad)
adc
pushf
xbegin
and
xchg
fld1
jmp
mov
nop
sar
cwde
inc
dec
cmp
cld
jne
push
mov
xlat
mov
xchg
fwait
clc
jl
mov
xchg
xchg
cmp
in
pop
and
dec
pop
cmps
sub
or
mov
leave
mov
mov
sti
sbb
xor
shl
and
adc
dec
mov
add
dec
mov
xchg
arpl
push
fs
jnp
aaa
and
ins
sar
mov
dec
mov
inc
inc
adc
stos
sbb
jl
mov
sar
nop
push
mov
ficomp
cmp
sete
rol
adc
dec
cs
sbb
xchg
pop
or
add
push
iret
ret
xor
cs
test
aaa
adc
loopne
sbb
fs
mov
(bad)
je
mov
mov
mov
xchg
aam
pop
loopne
(bad)
jle
scas
lea
xchg
ficomp
out
mov
fimul
dec
and
push
mov
scas
or
sbb
je
ins
push
repz
xchg
or
ds
mov
fimul
pop
pop
test
addr16
sar
sbb
mov
mov
and
lods
and
jo
push
sub
dec
mov
xor
mov
ret
(bad)
jl
jl
mov
lock
push
mov
xor
add
mov
adc
call
hlt
inc
icebp
jmp
dec
stos
jnp
dec
lock
jb
arpl
inc
mov
push
nop
mov
neg
mov
scas
aam
retf
sbb
shl
xchg
push
inc
pushw
add
sub
repz
(bad)
add
das
dec
ret
fldenv
fist
add
cli
inc
pop
mov
add
jb
inc
mov
in
cmp
jg
jbe
repnz
je
stc
push
lods
mov
lods
xchg
mov
cmps
ins
adc
and
mov
out
xchg
push
push
jbe
cli
pop
jg
inc
scas
mov
sbb
mov
repnz
push
sub
fld
jge
lds
xlat
es
dec
mov
or
cmp
jne
or
mov
stos
ja
mov
bound
out
repz
push
jno
popa
call
sahf
mov
test
inc
and
pop
dec
sbb
inc
inc
sub
xor
outs
pop
(bad)
adc
cs
in
out
jg
push
not
xor
push
or
nop
in
push
or
iret
fdiv
das
xchg
(bad)
xor
push
out
sbb
(bad)
adc
aas
mov
push
and
mov
outs
pop
(bad)
xlat
cwde
cmps
sbb
jecxz
mul
mov
pushf
pop
fadd
jbe
and
faddp
jl
sub
loope
test
and
inc
bswap
stc
xchg
xor
ins
repz
mov
adc
jbe
ja
sbb
retf
(bad)
jns
fbstp
js
ins
sub
cmps
sbb
hlt
outs
loopne
lods
mov
inc
lahf
jle
xor
mov
in
(bad)
les
ror
fidiv
pop
ja
in
test
inc
mov
mov
cli
fs
test
and
int3
lock
sti
dec
dec
hlt
jmp
pushf
ja
add
dec
xchg
(bad)
mov
jnp
mov
int3
neg
call
cwde
sub
sub
mov
and
mov
call
jp
movs
cmp
sub
sub
lds
test
cmp
mov
test
inc
sbb
shr
inc
icebp
mov
jmp
jo
add
push
les
mov
ins
lods
and
and
push
or
sbb
loope
dec
(bad)
lock
push
mov
ret
in
(bad)
pop
sahf
stc
sar
movs
xchg
fstp
div
mov
ret
dec
inc
sbb
push
retf
mov
retf
push
mov
sub
test
mov
inc
jmp
sbb
push
aam
add
mov
jns
addr16
(bad)
mov
add
lea
mov
push
mov
call
push
call
mov
sub
mov
(bad)
cmp
sub
push
sar
sbb
push
inc
pop
enter
ja
das
jecxz
sbb
in
fsub
aaa
jb
test
mov
cmps
and
(bad)
out
mov
push
mov
fmul
sub
xor
pop
mov
shl
cmps
add
movs
test
call
test
jle
mov
mov
fs
push
out
push
cwde
mov
cdq
cmp
(bad)
in
inc
mov
jg
fisttp
push
push
jp
dec
ja
adc
(bad)
gs
call
jmp
jl
mov
jnp
cmp
mov
lahf
lock
sbb
xor
test
lea
inc
sbb
inc
pop
push
std
mov
sub
inc
lock
sbb
xor
cld
mov
cmp
mov
or
cmp
jle
mov
and
push
sub
jl
cmp
clc
mov
lods
sahf
push
stc
jecxz
dec
inc
aam
dec
ss
imul
dec
icebp
sbb
sub
outs
mov
gs
lds
or
aaa
aaa
lea
shl
mov
test
outs
pop
and
movs
ret
mov
lds
push
ret
jmp
jl
push
ds
lahf
mov
(bad)
mov
cmps
cld
ret
rcl
push
xlat
or
movs
aad
jne
push
lds
call
xor
fdivrp
inc
xor
rcr
push
push
call
rol
mov
cmp
stos
shl
cmp
jb
neg
push
mov
fsubrp
imul
retf
sbb
fcom
cmp
repnz
(bad)
jmp
mov
adc
cmc
fistp
test
or
outs
pop
pop
xchg
neg
aas
ins
cmp
dec
movs
cld
sub
push
in
mov
mov
xchg
sub
pop
sbb
fiadd
or
push
pop
mov
push
rol
push
and
rep
test
fwait
sub
das
ss
rol
or
daa
or
mov
enter
cmp
repz
cdq
sub
fisttp
add
jmp
sbb
iret
mov
test
pusha
jb
fcmovbe
mov
out
sbb
xchg
aam
mov
stos
xor
jmp
cdq
scas
fist
ror
fimul
(bad)
popf
ins
pop
jecxz
sbb
add
aaa
lods
mov
mov
pop
jb
mov
jbe
and
and
mov
sub
mov
clc
add
push
or
clc
adc
jp
sti
pop
mov
mov
mov
dec
pop
cmp
inc
and
test
in
mov
or
leave
mov
hlt
pop
js
dec
or
shl
pop
push
add
call
fild
imul
or
retf
imul
call
and
repnz
mov
pop
outs
push
ret
(bad)
fist
sub
mov
mov
sbb
mov
ror
ins
ins
jno
inc
test
lds
or
dec
out
or
cmp
lds
pop
add
add
int3
xchg
or
jmp
fistp
(bad)
sub
push
jmp
gs
and
pop
adc
mov
bound
or
jmp
movs
push
xor
mov
mov
enter
mov
mov
cdq
push
les
lock
or
ret
lods
fidiv
test
adc
movs
cmc
outs
lods
fisubr
popf
xchg
and
mov
xor
pop
imul
jmp
inc
jg
je
mov
(bad)
pop
mov
pop
fucom
add
sbb
(bad)
push
add
fldcw
mov
sub
dec
xor
movs
fisub
bound
div
cli
push
adc
cmp
test
xchg
icebp
jle
inc
arpl
movs
ins
push
cs
mov
loope
cmp
aad
sub
fld
mov
pop
sbb
ror
adc
out
xchg
pop
dec
pop
rcr
jmp
xlat
test
fisub
push
iret
mov
call
arpl
pop
enter
sub
and
push
jae
retf
xor
shr
mov
daa
mov
ret
imul
test
add
jbe
(bad)
ja
arpl
push
push
movs
mov
xor
ud1
cmp
sub
or
(bad)
xor
lock
(bad)
dec
sar
retf
mov
into
sub
add
push
jg
ja
or
cmc
retf
jbe
cdq
sub
adc
fild
arpl
imul
hlt
push
push
sbb
out
clc
inc
ror
dec
xor
(bad)
in
dec
and
cwde
sbb
iret
test
movs
ins
retf
sub
mov
popf
in
adc
pop
scas
pop
mov
sbb
xchg
dec
movs
fild
stos
adc
(bad)
cmp
or
cmps
add
or
shl
ficom
mov
xor
mov
repnz
mov
adc
mov
or
xlat
jmp
or
and
xchg
fmul
cmps
pop
addr16
lods
ret
nop
dec
jge
xchg
std
cwde
xor
mov
int
and
and
mov
fadd
popf
pop
mov
loope
enter
js
mov
fmul
fbstp
sbb
cld
add
lahf
dec
mov
xlat
jns
or
js
or
sub
stos
data16
cmc
imul
pop
mov
sbb
xor
movs
ds
cli
inc
mov
rcr
ss
mov
mov
jg
push
mov
or
inc
jne
cld
call
fwait
pop
outs
ret
add
mov
xor
scas
push
icebp
jmp
mov
repz
sbb
out
mov
retf
out
loope
adc
or
sbb
push
adc
mov
scas
mov
mov
sub
jns
mov
jle
les
inc
imul
icebp
dec
inc
push
jmp
mov
fwait
and
inc
and
fild
sahf
mov
jg
lods
pop
add
inc
out
jb
int
mov
(bad)
push
pop
sub
jge
pop
jno
hlt
sbb
lock
push
das
into
sbb
adc
shr
add
call
repnz
dec
leave
mov
pop
add
adc
sub
mov
pop
sbb
jb
mov
lods
das
push
push
sub
dec
sub
in
ror
or
lods
inc
xor
push
cdq
xor
inc
jge
mov
mov
mov
mov
mov
ins
fs
xlat
loop
pop
push
daa
sub
or
cmp
inc
dec
shl
shl
dec
mov
scas
test
and
inc
in
jbe
sbb
test
mov
cmp
dec
ins
hlt
jnp
pop
or
loope
xor
ja
fst
xor
xor
push
jmp
or
lods
cdq
inc
or
xor
mov
rol
fcom
iret
addr16
push
xchg
xchg
xchg
arpl
cmp
pop
lea
jle
jbe
push
cmp
in
out
lea
int
xchg
lock
js
jle
xchg
xor
inc
and
mov
sbb
std
out
push
(bad)
rcr
jecxz
iret
jecxz
(bad)
sbb
fcomp
mov
popf
retf
ins
add
pop
inc
pop
sbb
into
jl
test
outs
popa
adc
(bad)
push
mov
pmulhuw
xchg
push
pop
sbb
adc
xor
js
jp
in
jno
push
jmp
ficomp
push
pop
jbe
pop
(bad)
and
xchg
(bad)
cmps
dec
rcl
mov
mov
xor
mov
test
cmps
ins
(bad)
push
test
push
loopne
out
out
mov
adc
mov
inc
xchg
lea
in
jb
mov
cmp
or
fisttp
xchg
stos
(bad)
or
cmp
mov
rol
mov
ins
sti
and
in
inc
ror
dec
push
fmul
cli
inc
dec
ret
pusha
dec
clc
mov
mov
jge
test
ss
mov
and
jp
push
(bad)
sbb
cmp
es
dec
jl
cmp
sub
mov
imul
fwait
test
push
dec
pop
mov
jns
sub
sub
ss
sub
mov
or
movs
in
std
jg
jle
(bad)
loopne
test
cmps
and
lds
mov
jge
out
hlt
xor
xchg
xchg
sar
mov
sub
(bad)
(bad)
scas
lods
push
push
ss
ja
fdiv
inc
mov
jb
loop
ins
add
dec
inc
ss
cld
add
jl
into
xor
jns
xor
cs
aam
sbb
cmp
sbb
jecxz
(bad)
or
sbb
imul
xchg
fidiv
xchg
cmps
(bad)
jle
push
mov
retf
cli
or
sbb
fcmovne
and
pop
(bad)
pop
pop
movs
and
das
fisttp
inc
lods
xor
pop
jge
addr16
cmp
mov
push
jo
lds
gs
cmp
pop
mov
and
xor
fwait
(bad)
jl
jo
test
cmp
mov
mov
aaa
inc
push
push
sbb
xchg
mov
repnz
dec
lods
aad
stos
stos
(bad)
or
jle
data16
mov
or
dec
cmp
sub
aas
rcl
pop
jbe
mov
add
xor
pop
and
into
arpl
and
pop
adc
cli
sbb
aas
mov
out
push
lea
mov
adc
es
cmps
mov
cmc
das
sub
addr16
sub
cld
adc
xchg
pop
dec
test
pop
sub
pop
pop
ss
xchg
push
rcl
or
imul
jo
and
sub
call
cmps
in
adc
push
push
mov
and
clc
js
es
push
sbb
rcl
cwde
outs
nop
mov
or
xor
adc
or
and
inc
cdq
add
(bad)
lock
jb
mov
adc
xchg
adc
daa
sub
jmp
(bad)
dec
data16
add
dec
cmp
jl
mov
mov
cmp
daa
outs
inc
pushf
scas
fmul
(bad)
dec
stos
call
jnp
pop
mov
into
inc
sub
aaa
in
or
or
mov
xlat
mul
lods
in
ss
pop
mov
push
pop
(bad)
retf
or
add
jmp
xchg
jno
xlat
adc
sbb
test
ins
retf
mov
sbb
push
adc
pop
cmp
shl
shl
jmp
in
xchg
nop
sub
xor
cmps
fcom
inc
lock
xor
fs
rcr
mov
adc
iret
outs
cld
(bad)
mov
xchg
push
push
jmp
sub
jmp
je
ins
(bad)
fcomp
and
xchg
sub
(bad)
fcmovbe
fdiv
out
loopne
out
add
jnp
xor
mov
sub
mov
or
cmp
dec
pusha
jg
(bad)
mov
sbb
cmp
(bad)
or
push
sar
(bad)
jmp
mov
mov
push
push
aaa
mov
jge
lods
inc
sbb
loopne
cmp
pop
bound
ja
sbb
cmp
pop
out
loopne
xor
jmp
xor
and
adc
out
push
jno
push
(bad)
push
out
fcomp
pop
xchg
and
fnstsw
ins
xor
inc
ja
cmps
test
jl
imul
jmp
xor
pop
into
in
sbb
lea
imul
mov
mov
inc
mov
sbb
xor
sub
fimul
xor
sub
and
inc
in
mov
sub
cs
inc
es
cs
stc
dec
mov
ret
(bad)
scas
ficom
add
mov
std
fiadd
pop
sbb
mov
aam
cmp
in
stos
je
dec
loope
cmps
add
jmp
mov
jmp
mov
(bad)
pop
xchg
movs
mov
aaa
bound
in
ret
mov
mul
stc
(bad)
pop
jg
push
push
xchg
test
(bad)
aaa
daa
xchg
retf
movs
cmp
out
mov
aas
mov
imul
jbe
fsub
and
mov
out
cli
inc
(bad)
xor
sbb
xchg
mov
mov
add
out
aas
xchg
out
dec
movs
mov
sub
outs
xchg
fcomp
imul
test
mov
jmp
leave
mov
icebp
out
ret
outs
dec
fs
xor
fstp
rcr
(bad)
rol
add
adc
adc
out
test
inc
mov
sub
mov
push
icebp
loopne
mov
and
das
pop
jae
imul
cld
jle
sar
fs
mov
xor
cdq
jns
mov
lods
idiv
mov
or
jmp
inc
xchg
sbb
sub
lea
out
lds
lock
and
sbb
cmp
dec
xor
cmp
call
mov
xchg
pushf
js
mov
test
aaa
sub
rcr
and
jne
adc
shl
sub
sbb
loopne
aas
fstp
test
in
jmp
lds
cli
push
push
push
(bad)
call
cmp
aad
das
inc
push
xor
out
adc
sbb
adc
mov
aaa
xor
xor
mov
ins
pop
mov
sti
enter
cli
gs
pusha
push
sar
std
(bad)
or
fmul
imul
adc
xchg
mov
cwde
(bad)
jmp
sbb
(bad)
and
dec
push
pop
in
outs
xor
xor
rcr
push
lahf
les
gs
lods
ss
jnp
js
dec
int
or
lock
popa
push
xor
push
sbb
pop
pop
loop
sbb
mov
cmp
push
inc
adc
adc
cmps
ror
mov
idiv
das
mov
imul
loopne
adc
dec
push
sbb
imul
pop
scas
dec
movs
sbb
shr
push
nop
std
inc
push
mov
outs
dec
dec
or
into
sub
adc
xlat
and
mov
sbb
xchg
jge
pop
stos
dec
addr16
neg
loopne
pop
jmp
or
push
test
pop
aas
shl
adc
repnz
dec
mov
fisub
push
pusha
stos
fstp
and
out
sub
in
pop
gs
pop
and
std
xchg
sub
movs
xchg
shl
das
mov
je
mov
scas
adc
es
fadd
xchg
out
pop
fisttp
jg
jmp
mov
cmps
scas
retf
imul
inc
imul
in
xor
sbb
jno
shl
aad
push
mov
or
inc
xor
ja
jnp
pop
mov
fdivrp
ret
inc
dec
mov
lods
xchg
push
cmp
neg
xchg
out
jb
cmp
lea
cmp
fisttp
aas
xor
outs
pop
ja
push
sbb
call
(bad)
xadd
jne
test
mov
iret
dec
xchg
mov
les
lods
mov
inc
or
mov
mov
jl
retf
push
add
ficomp
out
int
das
fwait
mov
dec
adc
retf
add
inc
aam
imul
push
mov
and
jmp
jbe
pop
xchg
fs
loopne
scas
fwait
mov
in
fsub
adc
in
inc
shl
dec
sbb
push
push
inc
(bad)
out
rcr
fldl2t
mov
(bad)
sub
fnstsw
(bad)
(bad)
sub
lods
lea
cld
int3
retf
and
mov
cmp
dec
lods
rcr
retf
loopne
push
loope
int
push
adc
fimul
push
xor
jecxz
ss
inc
ins
ds
xor
sub
dec
mov
mov
or
xchg
test
pop
imul
xor
xchg
into
cmp
das
ret
jmp
aaa
sub
xor
push
mov
and
cdq
popa
inc
or
cmps
out
sbb
(bad)
loope
les
pop
sub
(bad)
jbe
jl
sub
mov
cmp
stos
cdq
xchg
push
add
sbb
pop
pop
outs
push
adc
ror
daa
xchg
and
add
adc
cmp
push
ss
sub
xchg
iret
adc
inc
fidivr
or
lahf
in
pop
and
jo
frstor
pop
or
xlat
cmp
mov
pop
aam
add
in
sub
xor
mov
lock
(bad)
adc
mov
inc
jne
push
sub
cmp
fimul
xor
ss
sub
xchg
mov
push
retf
clc
dec
pop
fbld
ins
sub
and
sub
jne
pop
push
xchg
mov
inc
lea
cs
outs
loopne
inc
lods
cdq
mov
js
add
xor
jle
jno
xchg
out
stos
test
add
xchg
pop
jb
xor
aaa
mov
mov
jg
inc
push
dec
jbe
mov
cmp
sub
retf
dec
popa
xchg
imul
push
push
pop
ret
lds
add
xchg
inc
addr16
push
int
mov
pop
aam
inc
lea
mov
xor
(bad)
cmp
adc
ins
xchg
ins
sahf
add
(bad)
int3
pop
jne
jae
jb
sub
add
push
mov
inc
mov
mov
sub
test
cli
jns
jmp
push
aam
jmp
aas
(bad)
(bad)
call
jmp
sub
nop
sub
adc
xor
add
int3
xchg
pushf
or
push
jns
cmc
sub
mov
cmp
fiadd
hlt
stc
mov
out
sbb
div
imul
inc
adc
jns
fisttp
push
and
mov
xchg
call
or
pusha
movs
in
pop
fisubr
stos
pop
mov
ins
push
jmp
xor
and
pop
mov
and
arpl
jnp
stos
test
mov
cmp
add
dec
push
aas
sub
mov
mov
jecxz
and
push
(bad)
pop
mov
out
movs
bound
cmps
mov
mov
mov
repz
pop
dec
sti
ss
ror
out
push
movs
jno
(bad)
pop
pop
cmp
int3
push
sub
test
sub
inc
ins
cmp
and
inc
lock
sbb
mov
fadd
pop
pop
xchg
imul
sbb
add
pop
jne
xchg
inc
sub
int
mov
push
jp
test
ss
int
inc
and
mul
retf
mov
mul
aam
mov
jp
sbb
je
out
and
shl
rol
push
or
ds
sti
xchg
mov
cmp
xlat
or
int
xor
sbb
inc
sbb
sub
lods
cmps
inc
xchg
jle
(bad)
jnp
and
in
sub
jmp
mov
jmp
out
and
jp
pop
ja
pop
xchg
dec
mov
js
pop
jl
enter
adc
iret
dec
jns
mov
or
in
or
mov
mov
sbb
jl
imul
loopne
pop
or
sar
clc
lods
sar
inc
or
add
adc
sub
imul
shr
sbb
xchg
xor
ja
xor
and
arpl
addr16
pop
fcom
cdq
or
push
xchg
test
inc
and
mov
jb
leave
add
lahf
in
inc
aas
js
and
and
lock
sbb
push
(bad)
jecxz
lods
or
pop
mov
mov
fnstsw
push
fild
dec
adc
cdq
xchg
mov
ja
sbb
inc
xchg
(bad)
and
mov
scas
loope
and
pop
div
rcr
ja
sub
xor
popf
sub
cmp
sub
iret
inc
mov
in
xadd
push
call
test
mov
or
outs
clc
cld
jge
hlt
cmp
xor
fwait
cwde
mov
in
loopne
(bad)
jmp
add
retf
fscale
mov
sub
loope
ret
mov
cmp
retf
sbb
retf
cdq
test
ins
mov
loopne
sub
lods
fisub
movs
push
add
std
mov
xor
mov
into
pop
sub
jmp
ja
cmp
jmp
cmps
cmp
iret
dec
pushf
push
jae
dec
jl
int3
mov
inc
cmps
xlat
inc
loope
or
mov
bound
xor
stos
scas
or
jne
and
push
push
cmp
cmp
push
dec
or
xchg
je
gs
sub
out
inc
jne
sub
iret
icebp
and
cs
push
cs
push
scas
test
xchg
test
pop
cmp
popa
sub
xchg
fwait
es
loopne
push
adc
sub
mov
jmp
push
call
inc
ins
ret
mov
dec
cmp
js
push
popf
mov
stos
jno
je
jbe
jl
in
inc
imul
retf
int3
add
sbb
test
rcr
adc
popa
in
bound
retf
dec
add
push
into
xchg
ret
push
jbe
or
aad
test
sub
mov
mov
push
xor
enter
hlt
inc
sbb
pop
imul
stos
jp
outs
in
popf
sahf
shl
lahf
loope
(bad)
mov
cmp
mov
arpl
es
adc
pop
and
test
in
fst
lds
dec
jp
inc
adc
jae
sar
test
in
mov
cmc
xchg
adc
mov
inc
and
pop
inc
out
fidiv
imul
movs
aas
push
or
cmp
test
pop
lea
jo
xchg
push
into
int
cmp
fisubr
add
mov
mov
push
ja
fucom
imul
fs
and
popa
mov
pop
ins
xchg
dec
sbb
aaa
adc
pop
cmps
adc
je
or
pop
sub
and
js
gs
(bad)
ins
fisttp
mov
adc
out
pop
pop
inc
inc
in
(bad)
dec
jecxz
push
adc
sbb
in
lods
je
sbb
rol
push
pop
and
dec
and
cld
adc
aas
add
push
repz
push
and
pmaxub
or
out
push
call
cmp
lods
or
push
lock
sbb
loopne
aas
mov
call
out
mov
pop
sub
repz
xor
adc
jbe
jl
mov
pop
call
pushf
or
(bad)
scas
add
xlat
stc
repnz
jmp
xor
das
xchg
cmp
add
fbstp
pop
jmp
push
jecxz
or
cmps
cmc
add
mov
repz
xchg
cmps
push
test
test
icebp
sub
pop
rcl
stc
scas
xchg
aam
and
mov
dec
xchg
pfsubr
pop
loope
inc
and
or
shl
lahf
mov
or
mov
int
mov
pop
mov
in
ins
popa
sar
mov
xor
fadd
inc
dec
jg
js
or
das
popf
icebp
xor
frstor
and
icebp
xor
jno
mov
out
sub
sub
cmp
push
and
iret
lods
les
xchg
adc
xor
xchg
icebp
stos
repz
popa
push
push
add
loope
cmp
lods
retf
ss
je
sar
adc
xchg
sub
dec
mov
dec
mov
sbb
mov
cmp
xor
push
jg
pop
cmps
jecxz
lahf
pop
lds
outs
inc
mov
nop
push
out
js
xchg
jl
add
push
popa
pop
mov
hlt
push
(bad)
iret
fst
adc
pushf
dec
xchg
mov
adc
mov
cmp
pop
in
dec
xor
jmp
cs
jmp
int3
fsub
call
adc
mov
push
dec
pop
xor
test
xchg
xchg
or
sbb
jmp
loop
push
int3
sub
dec
jae
xchg
gs
icebp
sbb
add
test
mov
push
add
sahf
arpl
test
and
adc
jp
jge
outs
fld
dec
in
cli
add
mov
add
ror
stos
inc
sti
ror
imul
lods
push
inc
jo
mov
mov
int
jae
retf
adc
xor
push
jno
les
scas
xor
cmp
(bad)
call
mov
or
(bad)
je
push
rcl
push
jns
clc
mov
mov
jae
and
mov
clc
push
stos
fld
mov
jmp
pop
dec
mov
cmps
fnsave
jnp
mov
inc
push
sub
push
push
cwde
or
jge
and
and
stos
sbb
push
adc
test
jb
mov
add
or
cmps
adc
iret
pushf
addr16
scas
and
fild
jecxz
arpl
retf
or
loop
jne
loope
sub
dec
xchg
in
jno
pop
push
xor
inc
mov
xchg
cdq
js
bound
mov
jne
mov
inc
xchg
std
dec
jno
fstp
imul
inc
btr
mov
jecxz
mov
dec
xor
mov
cmp
pop
call
mov
sbb
inc
ja
mov
pop
cdq
loop
push
sub
jge
(bad)
into
cli
bound
ror
push
mov
add
enter
mov
pop
and
adc
(bad)
popa
add
in
jb
daa
addr16
(bad)
jp
mov
sub
repz
xor
sub
push
cmp
(bad)
jecxz
pop
mov
test
ss
pop
imul
xchg
cmp
nop
dec
and
cs
imul
xchg
gs
sahf
adc
xchg
add
ds
(bad)
jge
add
mov
sbb
gs
fprem
inc
cmp
xchg
in
and
cmps
popf
adc
in
dec
push
icebp
and
adc
mov
aas
dec
faddp
hlt
mov
dec
mov
pop
jo
pop
mov
push
mov
or
pop
adc
and
xor
dec
dec
cmp
(bad)
shl
loop
cmp
sub
mov
and
fcomp
and
or
mov
aas
dec
cmp
push
jmp
or
retf
and
cmp
aaa
test
popf
sub
dec
pop
(bad)
retf
mov
sub
outs
lods
fist
lods
xchg
cwde
test
pop
mov
or
mov
addr16
sbb
(bad)
fadd
cmp
jge
cld
fimul
(bad)
movs
inc
xchg
pushf
mov
(bad)
mov
adc
and
shl
mov
jno
fidiv
mov
je
add
push
inc
push
mov
jmp
adc
xor
outs
loopne
cmp
push
push
sbb
outs
and
jnp
jnp
js
ds
mov
out
je
call
sti
inc
cmp
mov
jmp
out
aas
(bad)
sub
mov
fbld
call
add
and
(bad)
pop
ffree
in
push
scas
jo
adc
sar
pop
dec
sub
in
fdivr
push
xor
sbb
ret
ror
gs
and
loope
fimul
and
jno
mov
pop
int3
mov
addr16
push
data16
pop
push
jo
xor
adc
jmp
(bad)
pop
sub
xor
push
dec
fs
lds
cmp
mov
mov
lahf
arpl
cmp
add
(bad)
div
dec
stos
js
leave
sub
dec
dec
add
sbb
into
cld
jle
fdivr
cmc
ins
xchg
or
push
pop
clc
or
pop
cli
cli
mov
test
(bad)
pop
imul
sar
lods
fimul
fistp
sbb
inc
nop
mov
mov
sub
(bad)
int
mov
pop
dec
xchg
movs
test
xor
pop
es
(bad)
jle
sub
in
daa
jae
outs
inc
mov
loopne
xor
sub
jae
loop
pop
pop
jae
mov
rol
xlat
stos
bound
adc
pop
enter
mov
mov
or
das
mov
push
fadd
cld
pop
outs
xchg
jns
cmp
jnp
shl
loope
fwait
jmp
ret
mov
jmp
clc
sahf
cmps
(bad)
in
shr
shl
stos
push
adc
mov
mov
std
out
pop
cdq
jle
sub
push
cmp
push
adc
sub
mov
fmul
in
cmp
pushf
test
in
jns
ss
jp
shl
mov
xor
int3
out
and
sbb
retf
cwde
sub
aas
mov
call
enter
xchg
add
xchg
cmp
frstor
xchg
inc
popa
les
and
fcmovbe
cmp
and
frstor
jg
cli
inc
mov
outs
adc
add
pop
fwait
xor
pop
outs
and
ins
arpl
cmps
(bad)
xchg
arpl
xchg
fisttp
in
call
jle
inc
pushf
push
clc
nop
mov
jp
and
movs
mov
sub
in
(bad)
int
push
mov
pop
out
dec
adc
stos
cmp
sahf
fld
sbb
std
movs
bound
add
loopne
pop
mov
imul
mov
out
jns
(bad)
loop
mov
xchg
xchg
jge
(bad)
push
adc
fmul
bound
dec
dec
xor
dec
lock
out
arpl
jo
sbb
push
data16
or
shr
add
cdq
push
xor
icebp
arpl
adc
inc
rol
mov
out
xchg
stos
cld
dec
push
pop
(bad)
fmul
rcl
inc
mov
ficomp
repz
in
and
or
mov
movs
call
int3
(bad)
rcr
std
dec
(bad)
test
mov
fcmovnu
mov
out
or
mov
scas
xchg
and
aam
or
lods
pop
fwait
pop
sub
popa
stos
mov
xchg
cmp
(bad)
stc
repnz
(bad)
xor
test
adc
sub
lods
movs
xchg
jmp
dec
outs
jns
sbb
test
push
adc
bound
add
lods
mov
mov
pop
cs
ret
into
xor
xor
(bad)
ins
retf
add
pop
sub
add
sar
sub
sbb
xor
mov
add
jl
mov
add
dec
mov
dec
and
std
punpcklwd
adc
repz
xlat
jbe
push
sbb
dec
adc
imul
scas
dec
nop
mov
mov
push
jecxz
ins
mov
adc
nop
sbb
sub
sub
add
jb
icebp
mov
(bad)
and
pop
scas
cwde
sbb
xchg
repnz
test
pop
fisubr
inc
ins
push
dec
rcl
div
jmp
ret
xor
jnp
jecxz
jnp
cmps
add
push
leave
xor
fnsave
dec
sub
mov
xlat
test
aam
out
jecxz
dec
fisttp
movs
xor
xchg
retf
sub
(bad)
in
mov
xor
jge
scas
pop
add
not
icebp
retf
mov
jno
aam
movs
mov
mov
mov
mov
icebp
inc
clc
jno
fimul
ja
call
pop
mov
sub
test
test
in
inc
lea
test
push
inc
jp
in
cs
lods
jle
pop
fisubr
popa
jge
xchg
xchg
cmovl
(bad)
cmp
in
iret
call
mov
sub
mov
and
pop
or
in
cmp
adc
mov
repnz
dec
inc
lahf
or
cmp
mov
lods
iret
jnp
mov
retf
inc
repnz
icebp
push
sahf
inc
rcr
pop
mov
push
jecxz
xor
cmps
gs
fisttp
movs
mov
pop
stc
in
dec
cmc
cmc
mov
adc
pop
in
cwde
jp
lea
ret
in
imul
push
(bad)
clc
ins
xor
stc
pop
add
fadd
(bad)
cmp
adc
out
pop
jno
adc
iret
jae
iret
inc
stc
ss
jno
add
(bad)
jbe
movs
or
gs
repz
cmp
movs
or
jmp
xor
sti
mov
add
pushf
rol
mov
cld
fiadd
add
dec
popf
stos
mov
pop
push
cdq
pop
xor
dec
mov
mov
sti
jg
push
dec
xor
adc
ds
sbb
adc
pop
addr16
xchg
jb
or
int3
mov
shl
daa
or
addr16
dec
sbb
mov
sub
adc
mov
js
leave
xchg
cdq
(bad)
mov
fidiv
push
jmp
lock
pop
(bad)
stc
mov
xchg
sbb
in
sbb
sbb
jbe
pop
sbb
mov
push
fisttp
pusha
dec
ds
sbb
test
sub
fst
push
dec
ins
das
mov
and
adc
test
mov
repnz
(bad)
aad
pop
aas
jmp
mov
lds
mov
pop
adc
fadd
dec
mov
xchg
ds
loopne
cs
(bad)
mov
arpl
cmp
adc
mov
rcl
std
xchg
gs
mov
xchg
mov
popa
pushf
adc
mov
fist
icebp
mov
das
push
aas
and
mov
cmp
imul
outs
sbb
mov
jb
dec
std
cmp
and
cmp
push
cmp
stos
call
in
or
mov
cli
mov
or
sub
mov
or
dec
pusha
and
iret
popa
mov
xchg
test
and
neg
inc
push
pop
add
jmp
inc
movs
mov
jbe
mov
push
inc
pop
and
lds
mov
sti
dec
adc
scas
clc
adc
lea
jl
jbe
cs
(bad)
repnz
dec
inc
and
adc
sbb
mov
sbb
push
dec
pop
(bad)
repnz
outs
test
or
pop
xor
xor
(bad)
mov
bound
xchg
mov
pop
pop
xor
fcmovne
cmp
add
ret
xchg
les
punpckhdq
shl
inc
lock
xchg
mov
add
jnp
cmp
iret
cmp
lods
enter
scas
and
inc
cs
cs
dec
lahf
imul
or
mov
jbe
add
mov
test
into
sub
aad
mov
sti
mov
fwait
inc
cli
and
repz
cmp
jg
add
jmp
lds
in
popf
pop
dec
and
jmp
add
fwait
or
or
stos
sub
push
outs
add
fadd
mov
dec
push
push
je
enter
or
out
out
aas
cmp
fmul
pop
xor
popa
addr16
aad
std
and
pop
inc
repz
sti
push
xchg
jb
cmp
xchg
retf
or
cmp
pop
out
out
in
sbb
in
dec
adc
movups
push
(bad)
out
and
(bad)
xchg
xchg
fs
mov
mov
inc
mov
jo
sbb
ficom
mov
and
(bad)
xchg
(bad)
fisubr
daa
mov
data16
add
sub
stos
js
inc
gs
test
shl
and
icebp
jecxz
mov
pop
cwde
loopne
jecxz
(bad)
xchg
mov
lods
add
loopne
retf
aam
adc
xor
(bad)
jmp
or
div
pop
pop
nop
add
lods
adc
gs
inc
dec
sub
mov
cwde
and
ret
nop
in
mov
push
fs
add
fisttp
cmc
hlt
mov
outs
(bad)
arpl
xchg
add
mov
popa
fbld
dec
jge
es
iret
ret
call
push
mov
test
(bad)
jns
cli
xor
pop
clc
or
aaa
clc
stos
in
jbe
pop
mov
and
ds
or
out
inc
into
bswap
push
ffreep
lahf
ins
mov
aad
mov
mov
and
jne
into
(bad)
mov
test
mov
call
call
lods
inc
jecxz
ret
icebp
ret
retf
or
xchg
jb
fidiv
lahf
mov
cmps
aas
mov
call
dec
ds
or
mov
sbb
push
jmp
movs
mov
fldln2
cwde
cld
pop
aas
into
jb
out
fs
push
or
stos
add
jne
xchg
icebp
into
xchg
pop
inc
pop
aas
push
out
inc
lods
inc
nop
ja
pop
adc
dec
loope
loopne
shl
sbb
sahf
and
mov
jp
imul
fiadd
cmp
sahf
sub
fistp
xchg
cmp
sub
lds
cs
dec
rol
push
mov
jmp
(bad)
test
fwait
xchg
pop
push
scas
dec
xor
push
out
and
fs
inc
stos
pop
not
push
push
(bad)
loop
test
arpl
and
push
cmps
adc
test
jl
xor
adc
mov
xor
add
mov
leave
dec
hlt
adc
mov
xchg
aas
or
je
int3
loopne
jno
add
jne
call
dec
fs
in
clc
adc
stos
mov
jp
sbb
cmp
mov
shl
jmp
mov
fistp
push
ret
stos
add
mov
cmp
sbb
ss
or
les
sub
ins
aad
mov
daa
sbb
xor
xchg
test
cdq
loope
test
add
push
pop
fsubr
push
sbb
jp
sub
xchg
xchg
jg
imul
adc
call
sbb
add
mov
das
ja
retf
daa
out
loopne
pop
test
rcl
xchg
fadd
ds
enter
stc
jecxz
fnstsw
imul
test
ss
not
shr
popa
leave
hlt
mov
inc
adc
push
add
jle
sti
mov
adc
int
hlt
push
xor
imul
pop
es
dec
mov
(bad)
arpl
jne
ss
adc
mov
sbb
sti
adc
jne
xchg
add
outs
push
pop
dec
mov
sbb
aaa
pushf
cmps
inc
add
rcr
cwde
pop
fsub
loop
shr
jle
pop
pop
pop
addr16
jmp
jno
(bad)
pop
retf
inc
inc
test
retf
or
fst
mov
fs
enter
mov
dec
jns
out
mov
pop
jns
das
dec
xchg
add
and
les
dec
fist
fdivp
in
aad
lea
cmp
inc
lods
in
jne
mov
push
cmp
jae
ret
pop
sub
push
adc
jno
or
mov
ss
and
imul
mov
es
shl
push
push
sbb
jne
xor
and
jo
sbb
dec
cmps
or
add
jp
pop
int3
lahf
dec
test
xor
fstp
imul
fwait
clc
outs
dec
idiv
mul
and
xor
add
jle
loopne
mov
inc
shl
pop
lds
mov
push
mov
pop
cs
mov
mov
jecxz
pop
cmp
hlt
mov
mov
retf
mov
test
cmc
arpl
jno
dec
dec
fisttp
lods
mov
sbb
push
gs
daa
or
js
fbstp
jnp
gs
push
adc
mov
jo
lods
jg
dec
rcl
pop
data16
js
mov
and
(bad)
movs
cmps
out
xchg
inc
rcl
jl
jle
jl
mov
dec
movs
sub
std
fstp
repz
loopne
loope
or
rcr
shr
push
test
stos
xor
std
mov
inc
pop
push
jecxz
out
dec
in
sbb
enter
gs
cli
icebp
mov
rol
add
sub
sahf
cmp
mov
jbe
leave
jo
dec
loop
mov
stc
jns
xor
or
add
out
out
retf
xor
pop
mov
fcomp
cwde
cli
xor
les
lods
mov
test
add
and
pop
daa
mov
push
jns
and
inc
push
add
ja
je
pop
sbb
sub
jle
adc
scas
fmulp
shr
mov
fisubr
or
into
imul
push
adc
xlat
cmps
push
and
inc
add
lahf
aaa
stos
cld
mov
icebp
cmp
cmp
mov
sbb
mov
sub
pushf
dec
sbb
push
in
push
add
and
enter
mov
es
mov
out
pop
cmp
out
repnz
mov
stc
in
or
cmps
xor
lea
mov
push
xchg
je
clc
xchg
jp
cmp
and
mov
add
xor
mov
mov
dec
inc
cdq
mov
mov
push
pop
fimul
rcr
and
addr16
jp
mov
push
lahf
repz
jbe
mov
pop
push
jno
push
add
je
cmps
and
test
cli
adc
xor
mov
xor
shl
sbb
in
xchg
mov
xor
mov
add
pop
mov
fs
push
dec
(bad)
xor
mov
addr16
hlt
cmp
call
push
jae
mov
stos
adc
adc
in
fadd
or
mov
imul
scas
push
enter
sbb
iret
in
ficom
cli
push
data16
addr16
cmc
adc
mov
jg
xlat
outs
pop
push
adc
sbb
test
sbb
ror
(bad)
retf
lods
dec
xchg
push
and
dec
loopne
sbb
je
inc
mov
scas
mov
outs
add
xor
pop
frstor
aad
(bad)
outs
mov
loopne
push
lea
add
inc
inc
shl
aad
pop
dec
adc
nop
jecxz
sar
in
int3
enter
jno
pop
enter
mov
mov
jmp
lods
jle
xchg
xchg
fbstp
xor
out
lock
adc
or
punpckhwd
adc
mov
and
pop
push
sbb
lea
push
xor
and
icebp
fs
out
data16
cmp
or
xchg
xor
jle
bound
je
mov
cmp
push
pusha
rol
jle
mov
xchg
fstp
out
ds
adc
adc
sti
fidivr
jge
test
retf
dec
inc
xchg
cmps
pop
mov
inc
jb
clc
adc
sub
push
and
jecxz
popf
popf
or
xchg
loop
mov
pop
imul
pushf
imul
mov
mov
fisubr
loop
imul
add
cmp
jnp
xlat
gs
lods
(bad)
fsub
pop
cmp
add
pop
push
int
ins
adc
push
retf
jb
mov
dec
cmp
sub
retf
test
jp
call
cwde
xchg
scas
push
adc
or
in
ror
dec
stos
bound
(bad)
xchg
adc
ret
hlt
out
lock
aam
dec
push
jecxz
add
stos
not
and
adc
sbb
jbe
inc
adc
jmp
xchg
adc
retf
sub
daa
imul
pop
lods
test
and
pop
not
retf
mov
cdq
sahf
outs
mov
ins
stos
sbb
int3
cmp
inc
adc
fwait
inc
pop
rcl
cli
or
retf
or
pop
daa
ficomp
fadd
and
(bad)
ss
call
scas
push
fadd
xchg
xchg
pop
pop
push
movs
mov
sub
test
pushf
outs
jg
aas
inc
mov
sbb
cmp
jns
add
sub
pusha
sbb
jmp
out
movs
sub
movs
sub
stos
fisubr
(bad)
icebp
sbb
imul
and
into
or
test
outs
out
mov
dec
aas
ficomp
jne
enter
fsubr
leave
and
jle
jb
push
sub
inc
pop
loopne
cmps
xlat
or
ds
stos
push
cmps
mov
jmp
mov
add
cmp
loopne
mov
sub
or
mov
sub
test
fdivrp
cmps
xor
je
pop
xchg
out
push
jle
mov
data16
shr
inc
jbe
mov
jmp
push
mov
pop
ret
inc
sub
popa
popf
lods
daa
not
and
xchg
icebp
ja
add
test
xchg
aam
pop
pop
push
mov
push
retf
(bad)
sahf
push
call
adc
mov
mov
call
adc
sbb
sar
dec
aas
aam
adc
push
bound
loop
outs
sbb
jmp
dec
mov
sbb
mov
sbb
fs
test
lea
jg
adc
add
fld
sbb
xchg
push
es
jnp
and
or
repnz
icebp
sub
test
sub
(bad)
dec
lods
nop
push
push
int3
pop
fnstsw
sbb
leave
gs
loopne
adc
js
or
mov
(bad)
imul
arpl
out
(bad)
loopne
mov
stos
sbb
xor
push
cmc
add
int
lds
mov
aaa
mov
sub
adc
mov
dec
(bad)
xlat
popa
and
xchg
out
ss
imul
sub
lar
stos
sbb
idiv
cwde
inc
cmp
jo
neg
jbe
scas
cmps
mov
add
add
das
mov
jle
(bad)
mov
and
std
add
(bad)
or
mov
stos
cmp
and
inc
addr16
xor
cwde
jb
mov
(bad)
jnp
jmp
in
sub
inc
popf
ins
xchg
jecxz
dec
fcmove
leave
into
lds
pop
push
xor
or
push
mov
xchg
dec
in
jle
jae
dec
adc
cmp
lea
ja
test
movs
fisttp
fst
mov
popa
out
mov
imul
clc
or
scas
xor
mov
icebp
push
nop
mov
sub
in
leave
push
dec
(bad)
frstor
clc
pop
into
or
xchg
mov
call
rcr
lods
(bad)
mov
les
rol
lahf
sub
cdq
push
cmp
xchg
shl
out
retf
or
sub
pop
lods
jb
xor
jge
mov
push
sbb
call
cmp
and
cmps
cmp
sbb
ja
inc
test
mov
ins
mov
cmp
lock
(bad)
jmp
mov
adc
xchg
add
les
mov
lods
pop
pusha
dec
xor
in
ret
test
or
cdq
nop
adc
loopne
inc
pop
sbb
sub
add
mov
test
cmp
lods
xor
and
fs
or
outs
les
adc
test
dec
inc
ror
fs
lea
pop
dec
(bad)
outs
retf
dec
in
mov
inc
(bad)
sar
mov
test
std
xor
repnz
enter
mov
in
jp
rcr
or
push
jmp
cmp
jmp
fcom
sub
shr
dec
shl
call
mov
xchg
or
dec
enter
iret
pop
shl
mov
dec
test
cli
xchg
rcl
sbb
loope
ins
xchg
lock
repz
inc
push
(bad)
int3
jo
lea
loopne
cld
enter
(bad)
mov
fstp
push
or
add
dec
jp
imul
pusha
lds
jg
sbb
stos
stos
int
push
pop
xchg
mov
loop
div
test
jbe
out
int
dec
stc
or
push
xchg
xor
lea
pop
jb
(bad)
std
jle
mov
(bad)
rol
sbb
imul
sahf
pop
lods
iret
mov
jne
stos
push
cmps
jb
or
push
sar
add
inc
js
rcr
mov
dec
inc
rcr
sti
xor
mov
pop
sbb
int
adc
loopne
pop
icebp
cs
xor
ret
mov
sub
pop
mov
fmul
and
mov
pop
push
mov
hlt
cmp
popa
jp
push
sbb
pandn
js
call
hlt
jg
push
fdiv
jg
lods
movs
nop
pop
jmp
in
xlat
xor
lods
cdq
mov
cmp
rcr
or
mov
mov
mov
xlat
jae
daa
out
ins
(bad)
leave
into
mov
imul
pop
inc
int
mov
call
sbb
fdivr
and
fucomp
or
push
jbe
adc
fadd
out
fst
adc
xchg
or
jns
clc
inc
adc
push
daa
out
js
inc
sbb
push
or
enter
add
mov
lea
lahf
clc
inc
inc
lods
pop
iret
fbstp
add
fld
daa
mov
scas
ror
and
xchg
xor
jge
xchg
int3
xchg
ins
fist
mov
ins
rcr
xor
mov
jmp
jns
inc
ja
and
inc
xchg
int3
xchg
and
movs
shl
jmp
inc
mov
sub
add
pop
in
inc
(bad)
jno
cmps
mov
unpcklps
nop
mov
or
ja
(bad)
jae
add
imul
cmps
in
imul
inc
ds
xor
mov
les
add
xchg
inc
frstor
lods
mov
inc
in
scas
fprem
jmp
adc
lods
mov
mov
push
aas
push
dec
push
mov
ds
lods
arpl
mov
dec
jmp
pushf
les
pusha
mov
and
iret
call
push
scas
loope
adc
sbb
sti
jle
enter
adc
div
sub
push
fs
test
sti
fnstenv
(bad)
aam
test
outs
das
stc
dec
dec
mov
push
ja
daa
test
mov
jp
leave
sar
sbb
or
(bad)
mov
aas
outs
fdiv
out
or
sbb
jle
fsub
push
(bad)
ja
add
and
lods
ficom
les
into
mov
mov
pop
out
sbb
in
sti
xor
adc
(bad)
test
enter
iret
call
dec
sbb
repz
jbe
push
jge
call
fdiv
cmp
push
add
mov
lods
ja
pop
call
mov
mov
cmp
aas
mov
imul
arpl
cmp
(bad)
lods
lds
pop
push
jmp
sbb
jp
sub
idiv
sbb
rol
ins
mov
aad
imul
in
nop
sub
int
icebp
xor
movs
xchg
test
jmp
es
sub
mov
pop
in
sub
sbb
shr
dec
pop
movs
in
mov
inc
inc
stc
sbb
sbb
in
add
xor
sub
jbe
sbb
loop
mov
dec
iret
dec
jl
xchg
fmul
cmp
pop
push
mov
mov
or
dec
xor
push
pop
daa
sbb
sbb
dec
add
push
stos
enter
and
bswap
in
push
outs
adc
push
jl
inc
push
or
mov
pushf
(bad)
mov
test
jp
in
dec
dec
dec
leave
sbb
out
inc
gs
jo
lock
mov
es
xchg
adc
sbb
pop
daa
out
dec
dec
add
test
pushf
sti
out
xor
push
and
adc
aad
je
aas
inc
into
cdq
out
push
call
int
cmp
out
xor
int
lock
jns
ja
adc
add
add
rcr
push
dec
push
push
stos
lea
cmovae
(bad)
mov
enter
addr16
add
add
repnz
jb
cmp
xchg
mov
adc
scas
in
push
jp
popf
frstor
push
ds
adc
xchg
popa
pop
and
in
and
scas
and
stos
mov
cli
jb
xor
jge
inc
popa
iret
push
rcr
xor
pop
pusha
jmp
lds
sub
or
cs
ins
or
in
into
sbb
sub
xor
add
jb
jmp
out
cmps
or
push
bound
ins
and
rol
std
sub
or
jmp
popf
xor
pop
inc
fld
int
mov
xchg
xor
push
and
sti
sub
test
retf
out
cmps
sub
mov
sbb
pop
pop
fld
or
loope
jbe
pop
sar
popf
jnp
stos
push
nop
mov
into
test
pop
push
jnp
std
sub
inc
xor
mov
adc
nop
fdiv
and
scas
test
enter
dec
xchg
test
push
xor
retf
cmp
(bad)
mov
cmp
push
popf
sbb
jp
xchg
sub
sbb
pop
cmc
xchg
int
jbe
jne
imul
mov
ret
or
adc
mov
mov
push
push
cmc
mov
cdq
mov
sar
xor
enter
imul
imul
repz
inc
sub
mov
loopne
xchg
jbe
push
add
add
xor
mov
les
cdq
stos
ss
fidiv
push
push
dec
pop
adc
movs
stos
dec
mov
mov
lds
repz
stc
push
sbb
and
fisubr
pop
jmp
mov
adc
loop
jle
arpl
dec
or
mov
mov
(bad)
bswap
popf
or
sub
mov
jmp
push
jno
data16
jne
retf
sub
fdivrp
dec
push
xor
ja
idiv
push
scas
into
inc
mov
es
xor
push
sbb
sbb
push
xchg
repnz
push
sbb
cmp
jle
mov
stos
scas
lahf
in
mov
sbb
adc
arpl
movs
mov
ret
out
xchg
xor
xor
mov
int3
test
bound
jns
and
xor
add
out
xchg
mov
pop
add
jmp
sbb
(bad)
xor
int3
add
adc
inc
jp
pop
in
mov
scas
cmp
inc
movs
test
jge
shl
in
lods
or
rol
pop
test
mov
lahf
shr
add
fwait
pop
sub
push
outs
in
cmp
pop
mov
inc
inc
jl
(bad)
mov
clc
call
outs
bound
mov
cwde
or
dec
enter
push
ret
fsubr
pushf
sub
sbb
mov
aas
enter
mov
or
daa
fidiv
inc
clc
xchg
cmps
stc
fdiv
xchg
cmc
loop
(bad)
jl
push
sub
inc
cmp
xchg
cmc
jg
outs
out
ss
xor
jmp
in
xchg
(bad)
adc
rol
mov
dec
jmp
out
es
ins
scas
sub
mov
xchg
loopne
cmp
inc
dec
adc
pushf
push
push
repz
sub
pop
push
add
les
dec
jp
mov
loope
repnz
sbb
ins
xchg
pop
int3
and
push
pop
pop
adc
sahf
xor
push
xor
movs
test
jge
jb
mov
loope
pop
push
ror
ret
jo
dec
jmp
mov
cmc
jb
push
popa
test
inc
lods
add
cwde
cmp
outs
push
sub
test
lds
mov
mov
iret
xchg
mov
in
shr
sub
jns
cmps
mov
and
daa
popa
(bad)
cs
xchg
xor
and
std
and
pop
sub
out
push
cmp
add
pop
pushf
outs
in
test
ss
sbb
push
retf
mov
shl
or
adc
mov
ins
das
test
cmp
sub
pop
fabs
lea
sti
hlt
jne
adc
mov
adc
lds
fs
mov
ret
fs
pop
es
push
inc
je
xchg
ror
inc
mov
je
mov
rcl
push
leave
icebp
jmp
or
lods
test
jge
push
iret
(bad)
mov
fistp
(bad)
retf
fidivr
xchg
in
adc
cli
lds
movs
rcr
push
push
leave
daa
jl
ins
call
das
inc
aas
sahf
loop
pop
inc
mov
pop
hlt
adc
retf
dec
inc
or
mov
popa
mov
dec
das
(bad)
and
mov
ret
in
icebp
lahf
sub
dec
jmp
outs
fsub
movs
xor
test
in
jecxz
mov
sbb
push
cs
add
inc
mov
movs
out
daa
sbb
jbe
in
fbstp
xchg
xchg
mov
dec
leave
fsub
jne
stos
xor
data16
in
and
aas
jl
sbb
shl
jns
ds
and
and
mov
xor
sub
mov
jmp
push
adc
enter
jno
fcomp
mov
cld
mov
fsubrp
mov
mov
pop
jae
rcr
and
in
test
enter
mov
outs
loope
sub
pop
inc
add
jge
adc
shl
mov
into
xchg
pop
sbb
mov
adc
in
or
mov
push
cmps
(bad)
int
inc
idiv
ds
push
mov
les
lods
and
pop
mov
xlat
(bad)
out
pop
mov
sub
ret
ins
dec
ja
mov
pop
daa
scas
sbb
jecxz
mov
sahf
xchg
jmp
dec
ss
mov
mov
xor
addr16
mov
pop
xor
dec
cmps
in
shl
adc
sbb
xchg
cmp
clc
inc
ins
mov
or
jae
and
cmp
addr16
pop
sub
jle
push
test
inc
pop
jno
xchg
adc
push
sbb
mov
lock
daa
jmp
sub
sub
jnp
xor
fidivr
aad
psubb
addr16
fcmovb
inc
out
in
mov
sbb
or
cmp
ret
sti
push
test
mov
dec
cs
jmp
sbb
mov
mov
xor
cdq
mov
(bad)
ds
aad
sti
pmullw
ss
test
inc
shl
xor
repnz
dec
out
inc
test
int
lahf
xor
adc
jne
jb
jb
adc
(bad)
int
(bad)
xchg
xchg
sti
xchg
and
call
mov
rcr
in
mov
loopne
js
std
pop
jmp
jb
sbb
outs
mov
cmp
enter
sub
and
mov
add
adc
scas
mov
sub
pop
(bad)
mov
sti
pusha
loope
jb
fcomp
mov
ds
loopne
xor
imul
pop
inc
push
pop
dec
ins
shl
push
ror
sete
push
retf
stos
mov
ret
out
jmp
pop
jg
(bad)
xchg
lahf
cmp
xchg
bts
and
lea
data16
xchg
jnp
fsubp
data16
fldcw
jl
dec
outs
test
data16
add
xchg
sti
pop
mov
pop
out
shl
loopne
cmp
(bad)
out
add
pop
mov
call
or
cld
dec
push
and
ds
es
stos
loop
stos
fild
xchg
sbb
mov
(bad)
icebp
or
pop
pop
in
dec
or
retf
add
sar
push
inc
adc
dec
jo
ret
cmps
mov
lds
ja
or
aaa
jae
add
jle
add
push
inc
hlt
imul
rep
call
pop
or
aaa
imul
sar
ja
ins
push
sbb
movs
adc
inc
lds
div
mov
out
lds
ret
test
inc
arpl
inc
cs
test
call
push
iret
xchg
jno
inc
lods
xchg
jl
into
call
lahf
imul
xor
cmp
dec
retf
dec
jns
fst
sbb
cs
cmps
call
test
loope
jbe
xchg
out
aam
xchg
icebp
push
cwde
cmp
neg
cmp
adc
imul
sbb
inc
hlt
push
and
mov
push
scas
cmp
out
mov
push
push
stos
push
test
mov
xchg
int
adc
sbb
(bad)
cmp
jbe
cmp
mov
movs
mov
jl
sub
ret
mov
nop
sub
sbb
sbb
and
ror
call
cmps
mov
pop
leave
test
jmp
mov
mov
test
mov
dec
ds
push
dec
add
sub
shr
fidiv
dec
and
test
out
leave
lea
jb
pushf
mov
sub
sub
xor
int
xor
inc
sbb
icebp
ins
rcl
loopne
shl
xchg
pop
je
stos
adc
cmp
(bad)
punpcklbw
sub
shr
loope
aam
push
retf
adc
sar
xchg
(bad)
es
pop
xor
mov
popa
jbe
inc
int3
pop
jno
adc
or
(bad)
mov
mov
ror
das
jne
push
in
inc
xor
mov
imul
into
push
push
mov
inc
mov
scas
nop
nop
(bad)
sbb
popf
nop
xor
xchg
jne
repz
int3
out
push
push
or
push
jo
dec
and
js
mov
addr16
xor
mov
movs
(bad)
lock
push
push
mov
and
mov
sar
inc
bound
clc
fsub
pop
mov
cmp
mov
adc
scas
lods
cmps
out
scas
sub
adc
sbb
and
mov
push
ficom
in
jns
xor
xchg
dec
or
jo
mov
scas
jnp
inc
lea
pusha
cmp
jnp
jmp
sbb
movs
mov
cmp
fcom
xchg
lahf
or
outs
imul
sti
call
sub
out
fs
or
mov
adc
xor
shl
adc
daa
les
fs
fs
adc
mov
outs
adc
push
dec
jge
into
xchg
sub
popf
stos
movs
push
jecxz
mov
xchg
shl
dec
sub
dec
mov
stos
dec
shr
fisttp
mov
pop
stos
dec
pop
push
cmp
mov
or
enter
ret
sbb
and
sub
mov
mov
test
dec
adc
stc
fcmovu
cmps
icebp
mov
jg
popf
lods
push
dec
das
pop
mov
imul
leave
mov
and
stc
xchg
outs
enter
shr
jg
cs
dec
lahf
cmp
imul
mov
jae
sti
cmp
retf
inc
xchg
sbb
xlat
pop
dec
fstp
mov
mov
pop
jle
cmp
and
sub
jl
push
add
mov
xor
mov
test
daa
mov
jo
rol
adc
sbb
int3
retf
xlat
sahf
fcmovnu
sbb
fdivr
fld
pop
ss
jmp
mov
ds
or
js
data16
jne
adc
sahf
adc
addr16
popf
push
mov
and
mov
iret
mov
fidiv
push
adc
sub
push
mov
aad
int
jb
cli
sbb
sar
and
loope
je
sti
je
cmp
hlt
cmp
not
call
pop
cs
sub
push
cmp
ret
add
xchg
cmp
fs
ins
xchg
xchg
xchg
pop
jnp
inc
mov
sti
jecxz
push
push
daa
nop
or
push
in
xchg
mov
push
jb
retf
xchg
pop
inc
jno
sbb
call
jle
repz
sub
test
fimul
stc
(bad)
pop
out
jno
mov
xor
aam
aas
inc
push
and
mov
adc
mov
in
and
pop
jge
enter
pop
shl
xchg
sahf
test
mov
inc
push
pop
mov
test
mov
mov
mul
and
sahf
sbb
pusha
pop
mov
inc
paddusw
mov
(bad)
hlt
popa
mov
mov
push
xchg
push
xchg
xchg
lea
xlat
adc
lods
jns
lds
mov
ja
mov
xor
pusha
adc
in
mov
aad
or
sbb
mov
push
jl
push
and
sar
(bad)
and
add
lea
scas
or
adc
lds
push
dec
popf
test
ins
xchg
pop
stc
clc
cmps
sub
pop
lock
fmul
in
push
(bad)
cmp
or
push
add
and
mov
mov
cmp
clc
fisttp
(bad)
cmp
neg
cmp
xor
sub
and
dec
push
test
nop
adc
dec
out
outs
mov
arpl
lods
mov
retf
sub
in
xor
imul
and
push
clc
(bad)
fnstenv
mov
out
jne
sbb
mov
int3
out
fimul
(bad)
cmp
or
push
aas
int3
movs
retf
std
sahf
or
pop
outs
popa
mov
adc
dec
sub
call
cdq
or
and
inc
in
mov
sbb
in
mov
shl
xchg
pop
fnstcw
cwde
mov
mov
add
add
loope
sbb
aam
pusha
dec
inc
sbb
push
jecxz
fs
pop
popf
dec
movs
rol
call
(bad)
push
dec
mov
imul
jp
in
mov
ins
xchg
jmp
mov
stc
jns
push
(bad)
cmp
cs
pushf
push
inc
jge
mov
or
das
cmp
or
test
test
cmp
imul
sbb
hlt
push
retf
in
sub
xor
dec
es
(bad)
cld
adc
lds
or
mov
clc
mov
pop
cmc
outs
or
mov
lods
ret
xchg
xor
xor
imul
add
lods
add
xchg
in
pop
sub
add
xor
mov
pop
out
int3
in
inc
inc
es
mov
sbb
inc
pushf
push
jle
inc
call
sbb
xchg
fst
cdq
jl
xor
add
les
sub
pop
sahf
and
dec
push
(bad)
imul
je
call
pop
dec
out
fild
or
outs
push
es
push
test
es
int3
sbb
push
push
sub
test
dec
aaa
enter
sub
repnz
aad
cmovle
inc
sbb
jl
outs
push
add
cmps
or
ret
sahf
(bad)
pop
adc
pop
jnp
lahf
or
std
mov
or
aad
repnz
or
inc
sbb
test
cwde
js
sahf
(bad)
daa
jp
cmp
adc
push
imul
dec
fist
push
mov
(bad)
pop
pop
push
js
mov
cmps
mov
cmps
xor
pop
push
sub
or
jmp
cmp
push
ror
mov
sub
retf
cmp
xchg
sahf
sub
mov
imul
retf
mov
mov
and
outs
push
sbb
add
cli
daa
imul
sti
cwde
pop
pop
shl
fnstcw
mov
inc
clc
xchg
xor
mov
daa
mov
dec
sbb
ja
or
mov
inc
pop
loop
movs
enter
mov
jg
push
and
clc
sub
sbb
out
pop
mov
enter
cmp
inc
mov
mov
mov
adc
mov
push
test
push
jecxz
jb
dec
cmps
cmp
dec
add
mul
xor
js
aad
mov
add
xor
adc
stos
in
shl
push
mov
jae
pop
sub
jns
or
sub
mov
(bad)
lahf
lds
cld
mov
ins
push
jae
retf
jbe
arpl
add
clc
jae
gs
sbb
mov
call
outs
in
mov
cdq
fisubr
cmp
push
fucomip
fs
in
outs
and
adc
je
pop
and
inc
jg
into
sbb
jp
es
sbb
cmp
dec
push
mov
xor
cs
fdivrp
into
jne
mov
inc
loopne
xchg
stos
sbb
xchg
or
fs
fdivp
push
xchg
into
xchg
pop
jmp
clc
loope
scas
gs
jo
nop
mov
push
add
sub
add
add
mov
sar
fsub
jmp
add
out
enter
xchg
lods
movs
lea
xchg
ror
in
xor
ror
adc
cmp
adc
call
sar
cmp
cmp
and
dec
dec
xchg
jno
mov
mov
adc
jp
mov
xor
inc
add
inc
jo
sbb
test
test
xchg
push
imul
mov
enter
imul
adc
sahf
push
sbb
cmp
add
sub
pushf
mov
add
mov
sub
add
and
pop
mov
into
mov
scas
outs
test
lds
shl
loop
mov
in
int3
mov
(bad)
mov
adc
mov
icebp
fisttp
frstor
xchg
popf
xor
cli
xor
push
adc
mov
add
(bad)
out
data16
pop
popf
stos
cmps
jmp
mov
sbb
frstor
aam
int
jb
xor
xor
call
out
push
aas
sub
and
push
pusha
and
jecxz
nop
aas
add
mov
cmp
dec
mov
cmps
jae
sbb
(bad)
xchg
jle
xor
mov
nop
push
movs
sar
dec
jl
out
inc
adc
les
fs
aaa
ror
mov
ins
dec
push
lds
idiv
ja
sbb
les
dec
or
bswap
cs
fldcw
loopne
shr
cmp
aas
dec
icebp
or
sub
pusha
add
or
cmp
mov
std
jmp
imul
imul
sbb
ror
jmp
xchg
dec
mov
loopne
cwde
aam
jno
inc
mov
stos
pushf
aaa
sub
retf
pop
rcr
mov
fisub
xor
dec
fld
cmps
xlat
aaa
in
or
mov
pop
xor
add
mov
push
stos
cmp
pop
and
ja
push
mov
fst
adc
cmp
retf
and
mov
movs
sub
int
sub
cmp
aad
and
bound
mov
outs
mov
sar
lock
dec
ins
pop
xor
loop
sub
shl
mov
xchg
jmp
pop
fs
ja
out
mov
fstp
rcr
fcmovu
(bad)
cld
iret
ror
ja
pop
pop
pop
cmp
mov
popf
imul
fsubr
inc
fldenv
jae
xchg
int3
jbe
cmp
mov
call
jle
mov
scas
pop
mov
fwait
movs
in
pop
jg
cmps
shl
aaa
cmp
bnd
jns
xor
xchg
in
and
push
fs
nop
pushf
lahf
lea
fstp
xchg
inc
fsubr
out
pop
fimul
daa
fnsave
mov
xchg
inc
inc
mov
scas
push
add
cli
out
lods
jne
pop
adc
mov
sbb
inc
loopne
pop
ins
ins
nop
call
add
retf
or
rcr
loope
sar
mov
jnp
rcl
cmp
test
addr16
out
aaa
xlat
fcmovb
pop
dec
shr
repz
js
aaa
push
ret
mov
dec
popa
and
movs
or
cwde
cmp
sub
int3
mov
out
inc
xor
and
xor
ins
push
repnz
idiv
aas
pushf
mov
(bad)
popf
mov
and
cmp
ds
imul
ret
int
in
aam
jp
sub
mov
cmp
and
xchg
jae
mov
pop
ja
mov
addr16
or
xchg
adc
cmp
push
jno
in
sbb
fcom
loopne
sub
xchg
rcr
xchg
jne
cmp
lods
push
push
jg
sbb
les
fcomi
pop
cli
add
mov
out
retf
enter
retf
retf
lods
inc
in
lds
mov
lods
dec
inc
loope
das
add
xor
dec
loope
mov
xchg
ins
add
mov
aas
push
ret
iret
cdq
imul
dec
cld
inc
xchg
data16
push
adc
rol
or
mov
outs
pop
fdivrp
xor
or
lea
in
mov
xchg
push
cmp
xor
sub
pop
mov
xor
pop
cdq
sahf
out
cmps
iret
or
jb
(bad)
sbb
rcr
pop
shr
jae
mov
fisub
int
pop
jo
sbb
inc
push
in
fs
sub
rcr
(bad)
inc
xor
push
jnp
push
sub
cmp
or
sub
int
add
jg
add
and
xor
dec
mov
clc
inc
xchg
sahf
call
lahf
aaa
(bad)
add
and
pop
imul
clc
movs
call
sub
sub
popa
das
popa
daa
mov
ret
adc
xchg
jae
aaa
jns
xchg
dec
cmp
ds
mov
imul
out
gs
inc
mov
cmp
or
jmp
xchg
rcl
sub
test
int
aas
fdivp
push
adc
je
fwait
xlat
test
(bad)
add
pop
inc
shl
sti
sahf
mov
(bad)
int
cs
pop
or
aad
jno
mov
js
or
ds
call
jmp
jo
dec
rol
ds
sahf
adc
inc
mov
inc
es
mov
cmc
shl
pop
pop
mov
repnz
push
jge
mov
pop
xor
jo
mov
test
movs
mov
push
and
jmp
jmp
retf
mov
(bad)
adc
push
js
mov
cmc
ins
add
or
xor
dec
test
xchg
movs
jne
sub
movs
inc
inc
imul
cdq
pusha
(bad)
test
cli
xor
call
inc
and
push
dec
sub
cmp
mov
into
sbb
hlt
iret
ret
aam
aas
inc
jb
dec
dec
cld
cli
retf
cmc
sub
inc
sahf
stos
and
xchg
sbb
out
popa
fsubr
jne
ret
pop
xchg
mov
je
ret
and
mov
push
cld
mov
loop
fsub
add
push
xchg
push
fistp
xchg
sbb
lahf
loope
rcl
pop
int
daa
push
or
(bad)
out
movs
mov
push
or
mov
push
ins
inc
inc
aad
test
push
or
or
mov
sti
mov
mov
mov
das
adc
pop
cmc
push
mov
jno
adc
push
and
in
movs
add
mov
sti
cdq
jmp
pop
fnstcw
popa
aam
and
ficom
outs
adc
push
mov
arpl
call
mov
movs
sar
cmc
mov
mov
or
push
adc
mov
fbld
mov
imul
addr16
xchg
mov
jmp
xchg
test
xor
pop
xor
jg
cmp
pop
dec
sbb
adc
cs
out
lds
rol
icebp
push
aas
call
jl
jecxz
movs
gs
nop
fstp
add
aam
sbb
mov
pop
mov
push
push
sahf
aaa
mov
jg
mov
or
xchg
imul
inc
jns
mov
add
jne
jno
xchg
outs
mov
lods
stc
ficomp
test
jmp
cmp
ins
cmp
stc
loope
mov
mov
xchg
sahf
jne
out
or
jnp
stc
shl
(bad)
js
(bad)
loope
sbb
push
sbb
lods
les
dec
daa
into
loopne
push
jmp
test
ret
jns
ins
bound
shr
scas
and
lahf
cmp
push
cmp
retf
jae
mov
sbb
dec
push
mov
inc
mov
int
and
mov
push
and
into
xor
jl
ins
stos
std
movs
adc
popf
in
jo
xor
fisub
pop
pop
add
xor
movs
sbb
cmp
out
fdivp
mov
jg
push
aas
sub
nop
gs
pop
jecxz
sub
gs
or
sub
out
or
repz
aaa
fucom
inc
imul
lods
inc
nop
scas
mov
and
popa
pop
stos
pop
dec
(bad)
and
arpl
sbb
rcr
scas
scas
mov
inc
cwde
test
ds
repz
aaa
push
out
adc
and
sbb
test
dec
ret
adc
sub
mov
cmps
mov
ror
jp
jae
mov
xchg
out
ret
ret
test
jg
les
inc
cld
mov
pusha
test
aam
add
mov
pop
(bad)
out
jne
ss
je
loope
sti
mov
xor
cmp
push
pop
inc
ja
cwde
xchg
push
aaa
xchg
test
cmp
neg
scas
in
and
cmp
ins
cmovl
sub
out
or
fist
xchg
jne
icebp
mov
add
rcr
movs
xor
sub
mov
dec
xchg
aaa
jecxz
cmp
pop
adc
sahf
enter
add
std
inc
jbe
sahf
dec
jns
jae
call
popa
stos
scas
xchg
mov
int
(bad)
repz
sbb
icebp
out
loop
push
pop
jns
pop
bts
jno
xor
in
pop
daa
repz
cmp
lea
in
and
cdq
and
sbb
ret
dec
cmps
sti
hlt
in
repz
mov
clc
icebp
(bad)
lock
int
shl
ret
cs
fwait
call
rcr
out
shl
leave
out
mov
jle
cld
and
pop
or
mov
data16
push
daa
cs
ss
mov
xor
xor
mov
pop
adc
test
sub
clc
mov
sti
into
call
adc
psllq
push
mov
in
mov
mov
sbb
pop
inc
xor
cmp
imul
fidiv
dec
stos
xchg
xor
fisttp
fild
sub
jl
dec
stos
jmp
xchg
mov
sub
jmp
out
add
push
mov
pop
mov
xor
push
mov
(bad)
aam
inc
pop
inc
add
sbb
xchg
push
ins
sbb
outs
jno
push
sar
dec
arpl
sti
jg
pop
pop
loopne
cmp
enter
cmps
fistp
dec
xchg
es
jmp
sbb
lods
imul
mov
inc
aas
mov
je
imul
gs
pop
rol
scas
mov
sub
or
div
je
arpl
outs
(bad)
jmp
shr
rcr
sub
inc
dec
jae
dec
mov
pop
cmp
dec
and
sbb
out
popa
xor
mov
and
xor
test
loopne
jmp
jno
pop
sub
nop
mov
inc
cdq
dec
mov
(bad)
add
xor
pop
lods
imul
jmp
push
cdq
popf
mov
sti
and
sub
std
jp
jmp
mov
into
mov
or
add
stos
dec
shl
mov
movs
add
dec
inc
mov
or
loope
xor
cs
test
stos
jmp
sbb
(bad)
or
or
inc
cmp
or
push
add
stc
cmc
xor
scas
and
mov
aam
inc
dec
fs
jmp
in
xlat
jmp
stc
inc
cmps
pop
daa
sub
jne
xchg
ror
out
xor
call
xor
mov
dec
shl
sub
iret
in
ss
ret
push
sbb
lahf
sub
std
inc
cmc
or
sbb
sub
sahf
jns
jns
cli
cmps
push
movs
in
movs
loopne
adc
jmp
lahf
pop
in
or
out
retf
stos
nop
dec
test
mov
test
mov
jo
adc
mov
shr
adc
xor
fwait
jns
adc
inc
daa
xchg
cmp
bound
(bad)
dec
sub
loop
jl
shl
dec
(bad)
mov
jmp
test
in
xchg
js
fwait
leave
je
mov
mov
xor
adc
sbb
mov
mov
jg
and
jmp
jnp
ins
int3
icebp
inc
js
outs
jne
test
mov
retf
cmp
in
mov
sbb
pop
xor
inc
sbb
js
call
inc
or
or
iret
aam
out
xor
(bad)
(bad)
fld
(bad)
scas
not
int3
ret
sbb
add
push
fidiv
adc
movs
stos
inc
repnz
dec
jl
and
dec
retf
inc
popa
test
add
mov
mov
or
pop
jo
mov
stc
enter
and
or
or
or
nop
das
clc
scas
mov
mov
sub
xchg
mov
(bad)
mov
push
cmp
and
dec
pop
push
std
mov
jbe
or
dec
sbb
fwait
test
mov
push
rcl
cli
pusha
push
mov
icebp
rcl
and
push
out
(bad)
jecxz
mul
dec
mov
cli
jae
pop
out
add
retf
fimul
loop
sub
sub
xchg
and
call
push
stos
sub
mov
es
pcmpgtb
rol
push
das
adc
push
dec
add
dec
and
out
jnp
xor
jbe
and
ret
push
sub
jns
fst
jle
rcr
ins
mov
pop
int
mov
jge
sbb
jnp
ss
outs
dec
mov
sub
jp
dec
jecxz
jo
fmul
ja
pop
out
aaa
fdivr
and
bound
ror
retf
gs
mov
pop
daa
push
sbb
push
dec
or
add
out
cmp
(bad)
aam
ficom
(bad)
ja
xor
sar
jns
jge
pop
mov
or
sub
jb
(bad)
jnp
mov
xor
mov
ss
pop
jmp
xor
add
and
fdiv
mov
ret
mov
cmp
scas
lahf
in
sub
sbb
scas
and
sbb
push
fist
adc
xor
or
imul
das
cmp
sar
sahf
xor
movs
rcl
xchg
bound
push
in
or
js
shl
out
daa
xchg
push
fadd
pop
jnp
mov
mov
iret
(bad)
rol
pop
sub
(bad)
or
jp
pop
movs
sub
fild
adc
in
add
leave
test
dec
sub
mov
sahf
pop
and
push
ds
adc
pushf
sahf
jb
push
arpl
add
sbb
xor
out
scas
inc
rcr
shl
aaa
sub
or
std
and
data16
sbb
inc
cmp
mov
call
xchg
or
es
lds
xor
shr
fdivr
ss
ss
(bad)
stc
dec
das
push
stos
test
pop
ins
jb
addr16
aas
cld
dec
imul
les
xchg
ja
jmp
cmp
xor
mov
mov
mov
add
test
call
adc
mov
inc
out
mov
pushf
(bad)
mov
test
and
in
inc
shr
pop
inc
sbb
xchg
inc
daa
mov
xor
aas
xor
outs
into
and
mov
dec
arpl
mov
sub
and
sub
int3
xor
stos
or
fsub
adc
mov
or
xchg
add
cld
sub
adc
xchg
pop
cmps
imul
mov
jmp
add
lds
nop
push
nop
gs
loop
add
jns
lea
out
push
leave
xchg
call
inc
in
call
das
push
inc
ror
push
loope
es
xor
inc
fwait
push
rcr
pop
sub
lock
mov
xchg
mov
sub
and
mov
stc
jle
mov
jle
stc
int3
jno
rcr
popa
cwde
adc
stos
jmp
or
dec
(bad)
cmp
cmp
fist
aam
jb
iret
(bad)
pusha
cmps
push
jne
fdivr
movs
push
ins
push
jae
and
push
lods
repnz
mov
mov
inc
cmp
fcomp
cmp
hlt
enter
and
rol
sub
out
aaa
add
and
daa
nop
push
xchg
stc
jo
push
xchg
add
jne
push
xor
ins
stos
mov
dec
les
jnp
sub
(bad)
cmp
or
mov
ret
push
je
jg
call
push
inc
stos
inc
cmp
out
ins
dec
mov
jae
add
data16
xor
inc
outs
push
jl
movs
sbb
fmul
xor
shl
scas
inc
js
and
inc
pop
stos
sub
mov
sbb
cwde
xchg
add
cmps
hlt
xor
mov
or
mov
(bad)
mov
pop
and
adc
inc
or
sbb
call
retf
add
xchg
mov
loop
pop
or
jecxz
loop
xchg
clc
mov
add
push
loope
mov
adc
cmp
call
push
sbb
jge
add
mov
sub
push
ins
cmp
add
cmc
cmp
cmp
adc
stc
and
pop
arpl
pop
ror
mov
in
inc
mov
mov
sub
rcl
js
mov
ja
jecxz
jecxz
sbb
mov
adc
inc
push
push
xchg
fdiv
jb
or
les
enter
push
mov
adc
cli
retf
push
je
xchg
(bad)
scas
stos
jl
mov
xchg
sbb
mov
jecxz
iret
mov
cdq
movs
iret
bound
jl
mov
dec
xchg
(bad)
and
inc
xchg
lea
mov
push
cmps
jmp
adc
or
sub
aam
fild
or
in
xchg
mov
pop
idiv
or
(bad)
ins
adc
mov
leave
dec
inc
imul
stos
sti
mov
adc
stos
and
(bad)
ja
and
mov
ds
repnz
(bad)
in
cmps
out
sbb
jmp
mov
movs
jne
test
stos
call
les
cmp
icebp
test
iret
jp
stc
jns
fistp
pop
adc
sbb
mov
jne
xchg
mov
jl
or
cmc
adc
sub
pop
arpl
je
pop
or
xchg
cs
nop
push
xlat
icebp
and
add
sbb
cmp
data16
in
cmp
(bad)
int3
mov
adc
sahf
mov
jl
arpl
loope
js
xor
xor
and
jno
push
test
add
push
jmp
or
out
movs
mov
push
or
add
inc
scas
ds
cmp
mov
cmps
(bad)
iret
push
out
jne
mov
out
call
(bad)
xor
mov
add
(bad)
cmp
inc
xor
pop
pop
lods
xchg
mov
fisub
iret
(bad)
fistp
cdq
xor
mov
in
test
lods
fmul
mul
jmp
push
mov
sbb
es
sbb
jb
ret
adc
sbb
push
lock
mov
repz
cmps
and
jl
or
adc
adc
sub
push
cs
loopne
ds
loopne
leave
mov
in
mov
xchg
imul
test
xchg
lods
pop
std
loope
sbb
fs
cmc
(bad)
retf
inc
call
ja
loope
inc
jno
aad
lahf
cmp
retf
xor
jge
push
xchg
lods
or
loopne
push
mov
int
iret
call
cmp
outs
or
retf
int3
jmp
inc
cmc
leave
or
jle
popa
aaa
sbb
cmp
scas
push
push
outs
out
xor
out
scas
xlat
jmp
lds
je
jmp
sub
repz
out
shl
call
sub
cli
imul
adc
rol
arpl
mov
cmp
in
adc
retf
jb
fsub
xchg
lahf
aad
fisub
call
js
outs
mov
(bad)
je
aad
or
ds
sub
inc
mov
das
mov
jb
inc
dec
xchg
retf
fidiv
movs
sub
bound
(bad)
scas
sbb
mov
das
in
push
push
dec
xor
push
mov
and
push
pushf
mov
sub
cwde
pop
outs
neg
add
pop
add
pushf
pop
(bad)
mov
movs
dec
xlat
ja
inc
jno
(bad)
in
cmc
jmp
add
sub
nop
xchg
fst
out
adc
fisttp
cs
dec
sti
xchg
inc
sbb
mov
pusha
mov
imul
ret
dec
jecxz
and
sub
lds
(bad)
in
test
sbb
cmp
sbb
mov
call
and
sar
push
jns
(bad)
fcom
pextrw
das
pop
cmc
or
push
out
inc
aaa
and
sub
mov
shl
std
mov
and
sub
fistp
sbb
ror
jmp
in
ja
and
and
dec
mov
ins
js
out
aas
out
inc
outs
xor
pushf
adc
sbb
ror
mov
out
aad
mov
sbb
mov
jb
xchg
cmp
add
std
das
fidiv
test
sbb
aaa
and
dec
xchg
xchg
stc
or
call
mov
sub
nop
aam
ins
xchg
dec
mov
xor
(bad)
jge
mov
cmp
sahf
fnstsw
pop
cmp
int
sub
jbe
jno
and
pop
movs
jo
push
repnz
and
or
in
popf
xlat
xchg
nop
fimul
nop
bound
jecxz
dec
xchg
cld
mov
push
sbb
and
stc
test
(bad)
fld
add
inc
mov
xchg
pop
push
mov
mov
cmp
xchg
cmp
int3
push
add
vmread
mov
je
ret
call
aaa
xor
xchg
mov
into
lds
xor
mov
pop
jne
(bad)
jecxz
or
mov
inc
jb
popf
mov
xor
add
mov
nop
dec
jle
add
int
cmp
mov
dec
jmp
cmp
es
cmp
aas
cs
outs
ror
push
movs
mov
fcmove
arpl
pop
and
sub
rcl
pop
mov
aaa
adc
or
leave
(bad)
pop
inc
mov
ret
bound
inc
push
pop
sahf
ficomp
dec
mov
loope
punpcklwd
fldcw
mov
sbb
adc
stc
div
xchg
in
mov
(bad)
xchg
mov
cmp
adc
adc
out
daa
iret
sbb
shr
rcr
rcr
pop
mov
inc
push
(bad)
pop
inc
mov
(bad)
in
shl
sub
mov
pop
dec
loopne
jl
xor
iret
lods
imul
sahf
mov
xchg
movs
arpl
sbb
stc
fnsave
jne
mov
call
push
movs
sub
cmps
xchg
push
aas
add
push
dec
push
retf
mov
sbb
popf
hlt
ret
into
and
shl
lock
cdq
push
(bad)
jg
rcr
lods
ins
sar
data16
out
push
mov
int3
sbb
push
sub
aaa
inc
addr16
and
adc
loopne
add
stc
ds
aaa
loopne
cmp
pop
test
jecxz
out
mov
jae
and
ins
and
stos
sub
and
loopne
in
clc
add
push
jo
sbb
xchg
xchg
rol
mov
dec
sub
mov
sar
xor
(bad)
sub
dec
leave
xlat
cli
outs
data16
jb
enter
cmc
jbe
inc
and
ja
(bad)
xchg
mov
sub
ret
scas
nop
jb
scas
stos
or
inc
popa
push
cmp
and
mov
dec
mov
add
push
bt
or
repnz
pop
mov
mov
push
push
loope
mov
ret
push
jmp
add
in
mov
sub
fwait
aad
cmp
xchg
imul
call
push
shl
jae
mov
fwait
xlat
mov
dec
fld
es
fdiv
jns
es
sub
aam
mov
aad
dec
xchg
cs
inc
enter
out
gs
bound
scas
cmps
sti
pop
jp
in
add
xchg
sub
xchg
fsubr
and
dec
out
sbb
or
jno
adc
(bad)
or
jbe
jl
xchg
shl
dec
dec
dec
fucomip
and
dec
ret
rcl
mov
or
pop
mov
pop
cdq
fst
shl
mov
xchg
retf
push
clc
adc
test
ds
test
das
xchg
push
retf
retf
loope
mov
fisub
jmp
and
push
adc
pop
sbb
sti
inc
push
pop
repnz
xor
push
mov
das
xor
aaa
mov
mov
sbb
pop
ret
fwait
xchg
ins
adc
xchg
lahf
pusha
xchg
aad
mov
mov
(bad)
pop
sub
fwait
dec
jp
ins
test
jecxz
neg
add
xor
cbw
movs
inc
std
mov
pop
std
inc
lods
mov
or
dec
outs
rol
iret
cmp
adc
out
push
push
out
push
ja
inc
xchg
push
pop
callw
je
sbb
push
je
and
or
xchg
pop
sub
jge
sub
mov
test
sub
xchg
pop
pop
sub
retf
sbb
jae
aaa
push
shr
inc
not
mov
fnstenv
es
jnp
loope
add
sub
push
add
jo
mov
std
mov
icebp
int
jno
into
adc
(bad)
aam
cmp
ficom
imul
call
test
push
repnz
fnstsw
ror
xchg
aaa
lds
ins
fsubr
pop
xlat
cmp
and
(bad)
mov
lods
and
ret
and
cld
mov
push
fs
ds
pop
fstp
(bad)
scas
lahf
sbb
cmp
nop
daa
mov
arpl
cmp
xchg
inc
add
call
enter
retf
cs
in
imul
(bad)
ret
aad
dec
jns
inc
or
adc
in
test
ret
xchg
sub
stos
(bad)
adc
out
or
sar
sub
loop
mov
mov
fcom
ror
icebp
fimul
ins
ret
sub
addr16
adc
inc
shr
or
call
push
sar
movs
idiv
movs
retf
adc
rcl
sar
jecxz
imul
stos
jns
mov
in
cwde
xor
cmp
ss
jmp
pop
jbe
add
dec
mov
ror
call
and
jne
movs
nop
loopne
into
cmps
pushf
dec
aam
adc
pop
lods
jo
push
lods
data16
shr
clc
push
dec
mov
(bad)
ds
adc
xor
fwait
ret
in
jnp
pop
pop
jbe
sbb
call
push
dec
repz
push
or
ret
mov
test
push
rsm
pop
push
sub
adc
jecxz
sbb
je
dec
mov
dec
lahf
jo
mov
adc
jno
retf
mov
inc
jb
cwde
fisub
adc
xchg
sbb
sub
ret
xor
idiv
jp
repnz
lahf
pop
jl
inc
fmul
sar
add
sar
test
xchg
push
sub
mov
popf
sbb
retf
sbb
je
inc
idiv
lea
ins
mov
bound
jp
gs
xor
leave
mov
lds
lods
dec
ss
push
inc
repnz
fucom
stos
daa
dec
rol
or
int
ret
xor
stos
outs
dec
neg
xchg
mov
fld
fiadd
xor
dec
mov
in
mov
ins
loope
out
cmp
aas
mov
adc
lea
es
xchg
mov
shl
add
inc
int3
js
xor
je
ins
les
retf
sub
data16
adc
out
clc
jg
fstp
mov
xchg
je
fst
clc
cld
push
adc
les
mov
xchg
dec
je
mov
mov
pop
mov
in
pop
xchg
dec
ror
push
shl
dec
out
sbb
int3
jmp
lahf
mov
test
daa
nop
dec
ficomp
(bad)
fwait
sub
retf
leave
lea
test
pop
pop
mov
test
arpl
dec
cmp
std
sbb
sub
fnsave
out
mov
xchg
jns
add
or
mov
repnz
jns
pop
add
inc
dec
in
pop
and
jg
test
dec
xor
adc
add
ins
jbe
mov
retf
icebp
dec
lahf
xor
fiadd
xchg
jecxz
lock
sbb
gs
les
cmps
xchg
pop
fwait
push
ins
and
mov
and
stc
xchg
imul
pop
cmc
sbb
inc
cmc
push
pop
ror
pop
add
mov
into
mov
mov
jecxz
mov
jnp
pop
add
(bad)
stos
jno
icebp
lds
out
jle
ret
fbstp
pop
cwde
sti
sbb
mov
inc
xor
xchg
add
and
mov
sbb
cmp
(bad)
repz
mov
mov
and
cdq
xchg
and
push
out
in
mov
jb
cmp
mov
fdivr
outs
cmp
adc
mov
xchg
mov
into
fcom
es
dec
fstp
(bad)
lods
mov
sbb
out
xor
std
ss
and
pushf
jo
or
ret
fs
sub
stos
mov
pop
jno
fnstsw
push
fstp
adc
and
cli
out
js
mov
xchg
hlt
arpl
repz
push
ss
xchg
shr
retf
cmp
sbb
lods
pop
xchg
fiadd
cmp
dec
mov
repz
sub
or
add
push
out
bound
or
xchg
fnsave
ja
add
dec
jns
add
inc
sahf
ins
and
dec
std
les
call
or
(bad)
xchg
sbb
lahf
retf
sub
or
xchg
pop
mov
push
loopne
shl
inc
pop
ja
movs
es
les
repz
sub
aas
std
inc
jbe
int3
xor
mov
inc
sbb
in
pop
bound
ins
dec
jae
xor
and
cmp
push
jecxz
test
push
inc
xchg
jae
mov
or
jb
nop
add
mov
push
aaa
xchg
mov
or
push
mov
mov
cli
hlt
popa
push
mov
sti
jle
iret
into
push
call
xchg
mov
xchg
test
xchg
sub
stc
clc
xchg
rcl
(bad)
push
pop
popf
push
xchg
push
or
int3
inc
sar
mov
aas
lahf
dec
das
mov
xsha1
cmps
dec
jae
push
fmul
stos
retf
add
loopne
xchg
mov
fwait
retf
shl
xor
bound
rol
in
ss
cmp
xchg
jb
scas
jmp
pop
push
pop
push
mov
jp
inc
add
out
or
in
push
xchg
dec
iret
dec
push
fdivr
popa
stc
aad
dec
cmc
sar
dec
add
push
sbb
sbb
test
jne
fisttp
dec
div
mov
pop
cld
shl
inc
clc
je
pushf
add
dec
popa
hlt
fs
jecxz
mov
test
(bad)
cmp
push
arpl
push
push
dec
jbe
repnz
ja
cmp
xor
mov
add
mov
les
push
stc
xor
imul
and
add
ret
xchg
int
fidivr
mov
les
test
xchg
std
mov
pop
jg
xor
out
bnd
ficomp
cmp
retf
and
sbb
sub
retf
arpl
pop
dec
xor
out
mov
and
xchg
sbb
test
leave
xor
stc
adc
scas
mov
lock
(bad)
cmp
inc
push
mov
ret
dec
in
pushf
mov
mov
sbb
movs
ins
push
lods
pusha
out
mov
xor
lods
jmp
das
(bad)
jp
add
or
out
aaa
push
outs
sub
out
test
clc
hlt
ret
hlt
iret
push
ja
dec
adc
add
mov
push
dec
pusha
jae
ja
data16
packuswb
jne
inc
pop
popa
gs
adc
cs
sti
jno
dec
movs
adc
inc
jl
mov
and
add
sub
sahf
stos
mov
sti
in
hlt
sbb
jl
inc
dec
stos
jmp
pop
sub
inc
je
retf
push
dec
mov
and
inc
and
pop
out
loop
mov
add
adc
xchg
lods
jle
out
fnstcw
jmp
movs
icebp
inc
dec
test
out
pushf
sub
ss
push
xor
dec
loopne
mov
jb
fstp
icebp
or
out
sbb
pop
pop
jp
push
mov
popf
sub
int3
dec
add
mov
xchg
iret
xchg
fnstcw
push
scas
push
fwait
stos
xchg
cwde
cwde
retf
loop
add
xchg
add
nop
inc
xor
icebp
rcl
adc
test
jle
sub
dec
push
imul
ret
aaa
cmp
xchg
cmps
push
out
pop
jl
add
imul
jp
mov
push
mov
iret
xchg
loope
les
sbb
stos
jmp
dec
push
fmul
dec
call
jl
pop
push
clc
cmp
aas
mov
cmp
sbb
push
inc
movs
push
cmp
imul
push
clc
imul
sbb
xchg
xlat
fucomp
(bad)
pop
push
ins
popf
fsubr
jmp
sub
sub
idiv
bound
jecxz
mov
mov
test
pop
adc
inc
xchg
pop
sbb
sub
sub
enter
and
push
popf
rcr
push
sbb
shl
adc
sbb
mov
addr16
xor
dec
test
sti
or
cmp
rcl
aas
mov
(bad)
cmp
fs
mov
add
sar
in
cmp
sbb
push
jae
adc
(bad)
div
(bad)
push
inc
xor
sbb
imul
cli
les
xlat
and
and
xor
call
jae
repz
sbb
sbb
in
cmp
xchg
mov
xlat
shl
or
out
add
lea
(bad)
out
jecxz
addr16
in
int3
dec
adc
(bad)
jle
adc
iret
jnp
enter
xor
dec
lods
jbe
mov
push
pop
pop
mov
(bad)
mov
xor
mov
push
mov
push
mov
cmps
pop
call
imul
sti
jl
(bad)
(bad)
adc
sub
pop
jl
xor
cdq
arpl
ins
mov
mov
pushf
add
jmp
xchg
push
retf
or
nop
fstp
jnp
sbb
xchg
int
mov
popf
dec
mov
mov
jns
rol
dec
sbb
xchg
out
lahf
sbb
mov
aam
inc
into
les
mov
or
std
xor
(bad)
in
retf
test
xchg
sub
dec
xor
aas
out
out
add
bound
or
ret
inc
inc
inc
and
lods
call
sbb
daa
sti
jmp
and
xor
mov
je
cmp
mov
(bad)
adc
repz
jle
test
cmp
sbb
rcr
jp
outs
add
jb
test
and
aas
and
cmp
xor
sbb
sbb
movs
ficom
movs
jnp
imul
push
pop
push
in
test
mov
jecxz
jnp
ret
shl
outs
ss
call
xchg
xchg
fmul
and
sub
xor
mov
retf
dec
(bad)
inc
adc
(bad)
mov
fwait
std
inc
jne
enter
inc
aad
test
jge
push
sub
or
(bad)
xchg
sbb
dec
mov
(bad)
(bad)
adc
push
adc
aad
and
jo
hlt
inc
fistp
jmp
xor
in
sbb
mov
or
(bad)
fsubr
xor
xchg
mov
sbb
fs
sub
fnsave
mov
pop
jmp
cdq
mov
ds
stc
mov
and
rdtsc
push
fisttp
push
xchg
mov
add
imul
nop
test
sub
ror
das
and
adc
pop
jge
fisubr
mov
shl
ss
sbb
adc
or
mov
xchg
cmp
mov
stc
dec
jno
(bad)
scas
add
push
push
outs
push
adc
adc
fcom
mov
dec
adc
test
cmp
mov
scas
mov
push
mov
xchg
xchg
mov
pop
add
repnz
jae
xlat
dec
mov
pop
enter
lds
loope
je
sbb
jbe
int
jecxz
retf
jns
data16
cmp
repz
inc
xchg
and
cld
or
and
xchg
or
cli
mov
scas
dec
xchg
mov
ins
cmp
xor
mov
push
iret
stos
xchg
mov
aam
jns
fwait
out
retf
xor
fcmovnbe
xor
jae
outs
addr16
cmps
lahf
push
das
mov
pop
dec
inc
repnz
imul
int
bound
mov
adc
dec
mov
xor
iret
mov
push
sbb
mov
sbb
xchg
fcomp
lock
sar
cmc
push
jne
xor
jnp
arpl
(bad)
lods
fcomp
jb
test
imul
add
ret
psubusw
imul
xor
xchg
and
mov
inc
ja
sub
les
push
bound
sbb
(bad)
sti
or
mov
sbb
and
nop
clc
mov
fisttp
push
(bad)
pop
sbb
(bad)
push
push
dec
ins
das
sub
sahf
inc
cmps
inc
sar
adc
sbb
inc
pop
jns
repnz
cs
jo
inc
imul
pop
in
cmp
test
xor
push
aas
aas
shl
stos
call
xor
mov
mov
fcom
push
dec
mov
cmp
cmp
popf
mov
mov
xchg
pushf
pop
add
int
mov
mov
adc
sub
or
pop
and
add
js
rol
pop
adc
sub
jge
fbstp
and
fbld
sti
push
xor
cmps
xor
pop
xor
xor
sbb
sahf
inc
mov
daa
jb
stos
inc
adc
push
xchg
adc
push
add
push
test
imul
adc
jo
sub
jmp
jl
and
push
push
sahf
cli
int
sub
cwde
xor
sbb
inc
je
ds
adc
in
ffree
sahf
jge
adc
or
inc
fdivr
mov
add
loope
dec
push
stc
mov
fucomip
inc
mov
js
lea
adc
rcr
cmp
add
dec
lds
xor
sbb
mov
repz
push
jmp
sbb
xchg
leave
outs
pusha
loope
adc
and
dec
push
pop
fsubp
pop
mov
add
loope
cmp
mov
push
les
jae
cmp
sbb
cmps
xchg
add
cli
mov
je
sbb
(bad)
or
mov
push
pop
ja
loop
inc
sbb
jle
mov
movaps
popw
jecxz
loopne
pushf
mov
jne
adc
jmp
leave
enter
ja
data16
pop
leave
xor
into
aaa
add
sub
adc
ja
push
stos
push
addr16
xor
loopne
xor
shl
aad
ins
mov
and
cs
ret
sub
jne
sbb
sub
cld
cmp
push
push
sahf
leave
add
mov
into
lock
lock
sbb
ret
test
loope
push
std
cmp
out
dec
sbb
or
ror
sbb
int
lods
leavew
sbb
lea
mov
or
jne
push
movs
aaa
dec
out
stos
inc
inc
push
pusha
sbb
mov
mov
push
jbe
cld
ja
xor
mov
js
call
cmp
loope
arpl
shl
inc
fcmovbe
inc
pop
inc
imul
sub
push
push
mov
dec
and
and
mov
inc
(bad)
mov
in
push
loopne
mov
gs
xchg
popa
or
ins
jb
jmp
in
pop
aaa
xor
xor
adc
out
shr
(bad)
sub
ror
outs
mov
sar
(bad)
bswap
adc
into
xchg
cmp
add
xor
cmp
imul
in
mov
or
test
push
pop
rcl
imul
int
cmps
jmp
js
iret
jl
shl
or
or
in
es
lds
sbb
xor
cld
cdq
int
xlat
push
sub
mov
mov
adc
in
in
jne
out
sti
mov
pop
stc
rcr
mov
ret
lods
fincstp
cmp
push
and
sbb
pop
(bad)
mov
std
es
dec
ret
dec
add
int
test
cs
xchg
fcomp
mov
sbb
icebp
mov
sub
pop
aaa
sbb
fnstsw
push
add
xchg
rcl
(bad)
cmps
sub
or
xchg
js
jmp
cwde
xchg
mov
mov
xchg
mov
cld
cmp
frstor
adc
aaa
in
loopne
lahf
lods
cmc
xchg
xlat
sar
or
xchg
daa
(bad)
mov
imul
sbb
push
cmp
shl
and
sbb
sub
push
sub
in
mov
jmp
mov
mov
cmp
mov
rol
shl
mov
mov
mov
nop
shr
inc
pop
retf
icebp
retf
(bad)
fist
in
icebp
retf
pop
call
pop
pop
(bad)
push
fist
lds
mov
pushf
lods
(bad)
fadd
and
dec
out
cdq
jmp
push
gs
and
jmp
cmc
into
sbb
adc
out
jno
cli
jo
test
test
cmps
movs
pop
push
xor
mov
and
jg
(bad)
mov
sbb
ins
xchg
test
ret
out
lds
dec
cmc
cmp
mov
movs
mov
leave
jae
pop
ret
call
sub
cdq
clc
jge
je
jecxz
inc
push
mov
mov
fld
jecxz
cli
outs
ins
xchg
in
(bad)
xor
push
add
out
mov
push
scas
pop
popf
sub
sub
cmp
push
pop
fnstcw
sub
movs
jb
imul
mov
mov
(bad)
(bad)
xchg
mov
ror
adc
add
mov
pop
dec
mov
cld
push
test
push
sbb
or
xor
mov
dec
enter
or
cli
and
jne
pop
jp
(bad)
scas
dec
adc
je
xchg
push
daa
cmp
popa
jo
add
inc
sub
pop
mov
xor
stc
adc
pop
out
inc
mov
out
fstp
xor
ror
pop
rol
cld
push
inc
dec
rol
fisubr
test
int3
xchg
sub
dec
pop
mov
pushf
lock
cmp
in
xchg
push
jne
sar
stos
stos
jecxz
or
in
pop
add
call
gs
mov
mul
cmc
lds
daa
std
adc
push
ins
fld
dec
repnz
into
mov
cmps
inc
cmp
popa
popf
aaa
in
loopne
jb
and
push
jge
rol
std
mov
add
mov
ds
push
jbe
into
sbb
mov
ror
jp
inc
mov
in
jns
cmps
add
and
or
into
scas
push
sub
inc
imul
les
and
test
sbb
rcl
ror
ret
pop
adc
xor
dec
aam
push
lods
mov
rcr
xchg
int3
fmul
fild
int
fld
push
and
popf
sahf
cmc
pop
out
push
aam
out
stos
ret
in
adc
mov
inc
pop
ror
outs
pop
rcr
mov
dec
pop
jnp
sub
mov
sbb
push
shr
jnp
inc
mov
xor
retf
loope
bound
imul
adc
mov
or
mov
xor
mov
mov
jl
stos
push
adc
pop
in
cs
(bad)
push
push
sub
push
add
not
inc
add
push
sub
mov
ficom
xchg
dec
fstp
je
mov
test
lock
xor
inc
cmp
into
jp
sbb
pop
cs
outs
dec
cmp
cmp
sub
mov
out
shr
adc
neg
cwde
aad
pop
inc
imul
loope
adc
lds
add
(bad)
dec
inc
ja
sahf
nop
add
inc
mov
fwait
or
xor
inc
pusha
sbb
addr16
adc
dec
pop
push
into
pop
stc
xor
js
popf
and
mov
mov
push
scas
or
dec
scas
cmps
adc
aam
cmp
mov
sub
inc
jb
fdivr
loop
ror
xchg
or
add
std
retf
ret
rol
or
je
lods
or
adc
into
push
cmps
cmp
ret
or
cmp
add
jnp
js
add
lock
pop
cs
das
iret
jge
bound
gs
mov
mov
lods
sub
(bad)
xchg
repnz
mov
jb
stos
and
push
int
jae
mov
inc
jg
lahf
jle
stos
sbb
push
cmp
lods
inc
stc
inc
out
sub
movs
into
leave
and
int3
jp
push
out
jo
inc
hlt
push
aam
xor
inc
push
adc
pop
mov
stc
je
fisubr
and
popf
jle
test
cs
out
jecxz
test
cmp
cld
fstp
jbe
jl
mov
pop
jo
inc
jecxz
sahf
push
sub
in
push
cmp
mov
sbb
push
gs
loopne
sbb
jp
test
je
add
out
div
aas
push
sub
sbb
ret
cmp
sbb
cs
(bad)
lock
sub
or
ins
test
sub
ret
fnstsw
ins
lds
cmp
jne
jnp
jle
pop
pop
dec
cmp
pusha
shr
mov
jnp
in
add
mov
jae
mov
out
mov
rcl
pushf
call
cs
cdq
sbb
aad
inc
scas
pop
dec
pop
in
xchg
cmp
cwde
cmp
mov
inc
js
daa
mov
test
(bad)
push
jmp
sahf
cmp
movs
add
mov
or
mov
jmp
data16
jb
or
in
dec
call
enter
mov
mov
sbb
sub
call
cmc
adc
fwait
push
fnstenv
cli
lods
fdiv
cdq
retf
jmp
pop
adc
push
ins
mov
pushf
adc
retf
mov
into
inc
call
mov
xlat
(bad)
fst
mov
enter
pop
cmc
inc
cmp
retf
and
cmp
retf
movs
cmp
fild
dec
sar
stos
mov
(bad)
(bad)
ficomp
mov
pushf
pop
cld
mov
movs
cli
out
add
cmp
cmps
cmp
cmps
div
(bad)
into
cmp
sahf
dec
pop
push
imul
iret
lods
adc
xchg
push
ins
popa
jb
mov
xchg
inc
xchg
je
shl
or
add
(bad)
mov
sti
jns
xchg
mov
call
rcr
lahf
xchg
adc
xchg
push
mov
pushf
imul
fwait
push
pop
retf
or
cld
jnp
xchg
test
cmc
jecxz
mov
aaa
stos
outs
es
rcr
xor
ffree
mov
and
and
jb
jmp
mov
lock
fwait
test
enter
les
retf
pop
mov
and
cmp
dec
cdq
fwait
js
or
mov
add
nop
sbb
inc
in
imul
cs
ins
call
and
out
loopne
int
adc
adc
aas
mov
dec
test
nop
rcr
fist
push
mov
lds
sbb
mov
(bad)
retf
fisubr
push
mov
cmp
mov
es
cmp
xchg
call
mov
jge
out
in
sub
or
dec
je
mov
pop
lea
(bad)
cs
add
dec
mov
enter
or
and
repz
ret
bound
(bad)
cmp
mov
sbb
fs
jge
leave
sbb
(bad)
not
jno
arpl
ss
sub
sub
ja
imul
sbb
int3
or
push
xchg
js
cmc
dec
jmp
mov
sbb
in
pop
lock
add
inc
test
mov
or
retf
xor
fld
jbe
fisubr
xor
mov
neg
pop
add
lahf
mov
pushf
cli
inc
arpl
xor
push
cmp
push
add
cmc
out
test
adc
scas
jmp
xor
push
fistp
outs
xchg
outs
inc
dec
push
repz
push
(bad)
push
xlat
je
inc
mov
mov
(bad)
out
xor
popf
popf
(bad)
dec
repnz
add
mov
in
call
cmp
jno
mov
mov
push
jae
push
(bad)
xchg
sbb
pushf
sub
dec
xchg
leave
cwde
add
ins
in
cmps
aad
jl
jbe
xor
adc
xchg
pop
jge
mov
inc
add
data16
mov
aam
jge
mov
int
lea
pop
pushf
mov
sti
or
addr16
cmp
xchg
sbb
xchg
test
es
sbb
push
jmp
mov
pop
ins
jp
fisubr
pop
int
or
xor
jle
ins
adc
xor
xchg
sar
push
and
adc
xchg
out
sbb
movs
pop
sub
xchg
pusha
jmp
inc
pop
aam
jl
jg
fistp
and
mov
enter
mov
xor
push
retf
inc
fs
xchg
xchg
cli
icebp
test
mov
fisubr
inc
aam
mov
pop
and
and
sub
pop
adc
adc
in
pop
lfs
and
aam
dec
push
(bad)
jno
aas
cmp
lahf
pop
dec
es
mov
lahf
adc
sbb
ret
push
lock
sub
mov
pop
sub
or
les
dec
inc
retf
ins
xor
lock
inc
inc
mov
icebp
dec
(bad)
shr
fist
push
jmp
nop
mov
push
pop
bt
xlat
inc
adc
hlt
pop
add
push
fwait
(bad)
xchg
xchg
fwait
push
lods
imul
jb
mov
jecxz
rcl
xchg
push
dec
pop
cmp
aaa
gs
mov
jnp
test
mov
dec
not
xchg
mov
ss
inc
add
out
test
loope
mov
adc
scas
shr
push
(bad)
mov
call
out
sbb
xchg
enter
aad
inc
nop
mov
jle
jl
aam
inc
hlt
scas
std
adc
adc
hlt
ret
xchg
cs
sub
xor
mov
jg
in
test
fstp
or
push
fmul
push
xor
mov
push
jmp
mov
test
cdq
aad
aam
movups
std
sub
in
inc
ja
ds
fiadd
push
not
out
push
(bad)
ret
and
cs
or
push
stos
scas
outs
(bad)
mov
test
lahf
and
daa
inc
call
cmps
(bad)
adc
add
jnp
es
inc
je
test
js
enter
iret
call
inc
sbb
sbb
push
mov
sar
and
jl
or
out
lahf
mov
cmp
push
pusha
ds
add
ret
mov
mov
leave
push
jp
and
mov
mov
int
out
mov
mov
div
ins
rcr
sub
mov
push
aad
xor
lods
cmps
jmp
pop
xchg
pop
mov
sub
mov
dec
ds
scas
nop
gs
jmp
cmp
jmp
ret
je
jo
cmp
add
dec
lods
mov
jnp
ins
and
pusha
adc
rol
retf
inc
xor
push
int
bnd
addr16
push
inc
cmp
or
mov
jne
mov
mov
test
and
outs
fst
imul
rcl
or
fs
fcomp
xchg
(bad)
adc
imul
push
jge
aas
test
mov
jmp
adc
test
pop
call
pushf
dec
pop
or
data16
xor
dec
int3
enter
sub
push
rcl
jb
adc
outs
imul
pop
pop
push
push
or
mov
mov
jne
or
aam
out
jge
mov
movs
and
cmp
dec
imul
dec
sub
aam
fst
sti
add
add
dec
push
shl
sub
adc
mov
clc
mov
add
nop
push
xchg
lods
xchg
jle
test
dec
mov
dec
sub
jne
pushf
xchg
test
push
(bad)
sbb
adc
ins
add
pop
jno
jg
ret
jb
jp
ror
mov
jb
test
arpl
std
ret
or
je
repnz
(bad)
cmps
pop
xor
js
mov
xchg
test
rol
pop
sbb
pop
jae
sub
out
lahf
mov
push
jae
mov
xor
cmp
adc
xchg
jl
mov
lods
mov
lock
pop
outs
jl
int3
adc
push
fs
inc
cmp
push
rcr
sti
call
mov
mov
outs
or
(bad)
mov
mov
mov
adc
jle
sbb
cmp
push
sar
mov
cmp
loope
gs
pop
sahf
dec
cmp
mov
sub
div
xchg
sub
sbb
stos
or
and
push
ror
ficom
aam
cs
cmp
and
xchg
lahf
sbb
mov
add
and
sahf
inc
mov
retf
shl
jmp
push
outs
mov
inc
xor
(bad)
(bad)
adc
arpl
jne
cmp
aam
aas
div
jmp
push
jge
jmp
test
xchg
push
clc
jmp
jne
adc
xchg
cmps
add
out
movs
inc
dec
adc
xchg
in
and
int
data16
test
retf
push
inc
ror
sub
cwde
rol
hlt
ins
mov
add
pop
or
jge
outs
cmps
mov
popa
adc
es
nop
xor
mov
sbb
in
pop
and
(bad)
jbe
(bad)
outs
xchg
(bad)
sahf
cmp
int
out
hlt
ja
int3
mul
mov
sti
dec
jecxz
cmp
adc
and
jge
push
imul
xchg
fcomp
add
ror
jb
mov
scas
dec
mov
dec
dec
xchg
lock
cmp
add
int
loopne
adc
jp
les
gs
pop
retf
mov
lods
nop
cli
cmps
mov
xchg
(bad)
(bad)
jmp
xchg
sub
sbb
sub
mov
movs
dec
mov
jo
adc
sbb
scas
sbb
push
call
(bad)
jge
cdq
pushf
ret
cmc
sbb
fcomp
je
into
imul
stos
sub
mov
jno
add
xchg
sub
mov
xchg
jno
cld
sbb
out
repz
xlat
outs
loopne
ret
jo
nop
mov
mov
inc
or
dec
fcom
fnstenv
pop
inc
and
inc
ins
push
out
xor
or
cs
cmps
mov
mov
jle
js
push
mov
cmp
test
jmp
push
add
push
push
inc
test
xchg
cmp
or
mov
cld
sbb
dec
sub
aaa
shl
or
jmp
jle
pop
outs
imul
data16
jae
pop
mov
les
mov
ins
adc
sbb
pop
mov
or
or
cmp
stc
sub
add
js
mov
add
jnp
cmp
aam
jecxz
pop
inc
nop
test
sar
cmp
push
imul
jo
mov
lahf
cmc
movs
call
jl
call
xchg
ror
cmps
mov
adc
(bad)
mov
fist
js
mov
jo
call
xor
pop
pop
jb
aam
xchg
lea
and
xchg
pop
push
push
ja
or
ret
fld
add
push
scas
ds
pop
xor
addr16
xlat
aaa
fcom
daa
xchg
pop
cmp
ficom
outs
push
push
movs
inc
imul
sbb
sbb
pop
mov
adc
pop
jne
push
test
push
jb
or
into
int
xchg
fnstcw
out
arpl
hlt
mov
mov
popa
cmp
dec
loop
shr
ja
push
add
mov
arpl
pop
sbb
retf
(bad)
pushf
lock
adc
mov
fcmovnbe
popa
sahf
mov
xor
add
xor
mov
jge
jl
sti
adc
pop
loopne
mov
push
(bad)
adc
push
and
stos
aam
iret
enter
(bad)
in
mov
cli
add
push
cmp
out
add
das
test
fs
pushf
sbb
add
sbb
movs
in
mov
mov
add
mov
stos
cmp
mov
daa
sbb
ficomp
jg
nop
ja
sub
sbb
cwde
in
dec
fwait
jne
enter
fsub
(bad)
pop
jb
jg
jmp
push
mov
xchg
jno
int3
push
add
mov
in
sti
pop
ja
sbb
mov
add
in
sar
pop
sbb
out
adc
xor
ins
pop
add
stos
jno
xor
mov
mov
pop
shl
jae
or
and
add
fs
cmp
hlt
xchg
mov
push
fistp
outs
pushf
adc
xor
das
sahf
and
aam
sub
(bad)
mov
int
scas
pop
pop
and
mov
sbb
mov
sub
imul
fdivr
fisub
push
mov
pop
cmp
jne
push
jmp
inc
popf
mov
nop
pop
mov
pop
pop
std
dec
aam
mov
test
sar
jmp
(bad)
aaa
(bad)
stos
and
pop
test
cmp
mov
jmp
cdq
adc
cdq
test
popa
lock
test
repnz
add
sbb
pop
fadd
adc
mov
inc
sbb
ret
adc
xlat
mov
scas
cmp
nop
add
outs
mov
loope
lods
jmp
sti
push
jle
popf
and
push
jmp
cmps
scas
movs
sub
sub
loop
lods
ja
fadd
fild
cmp
inc
shr
dec
scas
imul
retf
xchg
stos
sub
mov
inc
test
ss
and
mov
mov
mov
sub
cmc
loop
in
rcl
in
pop
sahf
pop
add
jo
add
aaa
push
xlat
and
sahf
xchg
push
push
aaa
mov
and
lahf
pop
movs
iret
jmp
lock
push
ins
xchg
jp
aas
sahf
xor
mov
dec
mov
pop
loop
iret
popf
xchg
jns
and
jge
cdq
fcmovnu
mov
(bad)
hlt
cwde
shr
mov
ret
jbe
lock
mov
enter
scas
sbb
ret
daa
mov
aam
fwait
mov
push
jbe
or
jo
sub
and
bound
lods
test
cmp
add
mov
outs
fnstenv
push
stc
pop
add
sar
sahf
adc
sub
js
mov
mov
aam
adc
outs
lods
and
xor
push
ins
sbb
into
add
dec
mov
into
cmp
mov
into
mov
call
push
(bad)
cmc
push
fst
lock
sub
lea
sub
call
cmp
xchg
(bad)
xchg
sbb
jmp
mov
inc
ds
test
mov
pop
sbb
and
push
jmp
dec
sahf
ret
in
or
ret
pop
or
aad
test
(bad)
(bad)
cld
std
pop
test
sub
pop
loopne
nop
or
dec
jb
hlt
inc
jno
cli
fwait
jb
or
add
(bad)
fld
mov
shl
adc
mov
pushf
cmps
sbb
cmp
dec
(bad)
jnp
shr
pop
xchg
imul
xor
inc
xor
enter
arpl
or
lods
clc
sbb
cdq
sti
mov
xchg
xchg
jo
(bad)
cmp
imul
fwait
jno
(bad)
add
sar
stos
mov
add
and
arpl
leave
int
or
lods
addr16
int
mov
sub
dec
mov
inc
shr
push
adc
fwait
pop
pusha
cmp
and
jmp
outs
cmp
sti
cmc
push
loope
jbe
pop
xchg
fadd
adc
mov
add
ds
rol
inc
sbb
mov
imul
pushf
(bad)
cwde
shl
dec
mov
aad
add
mov
adc
add
mov
sub
int
add
sbb
jge
ficomp
adc
fwait
aas
or
jae
jae
ret
int
shl
clc
sub
sub
sbb
and
dec
sar
jecxz
jecxz
inc
outs
inc
out
adc
push
pop
neg
or
leave
lahf
mov
sub
pop
ja
in
add
call
inc
cmps
jle
push
scas
mov
inc
fcom
or
test
jp
aaa
mov
adc
mov
dec
aas
imul
mov
scas
dec
sbb
iret
test
xor
retf
lea
jae
jmp
sbb
out
inc
mov
pushf
(bad)
pop
or
call
or
pop
and
aaa
repz
gs
push
fs
jbe
sub
hlt
inc
sub
outs
add
movs
or
jge
jl
and
mov
sub
inc
fstp
cwde
stos
adc
cdq
mov
xchg
xchg
fsub
in
mov
push
add
(bad)
repz
es
sub
pop
adc
inc
add
fiadd
xchg
xor
inc
mov
xchg
ss
fldenv
adc
(bad)
aam
sub
sahf
jno
loope
leave
rcr
je
mov
pop
dec
dec
sti
xor
dec
nop
pop
push
add
mov
xchg
push
pusha
jo
cmps
jecxz
mov
jg
pop
sub
or
fwait
stos
popf
pop
rol
adc
adc
dec
xchg
xor
lds
lock
int3
jnp
imul
js
rol
and
int
mov
fistp
mov
fndisi(8087
pushw
sbb
(bad)
mov
dec
inc
mov
out
xor
ins
or
lods
jnp
and
push
loope
or
fcomp
push
pusha
inc
(bad)
push
pusha
mov
int
fwait
mov
movs
imul
nop
movs
dec
cmp
sbb
stos
js
push
arpl
iret
loopne
sub
sub
adc
cmc
xor
fbld
add
mov
stos
mov
lahf
dec
mov
retf
mov
jge
ja
(bad)
call
jne
sbb
in
add
inc
cwde
jb
les
(bad)
cmps
push
pop
pop
xchg
ret
in
pop
xlat
in
inc
pop
jle
mov
mov
push
cld
int
xchg
(bad)
call
adc
xor
sub
in
dec
cmps
and
ja
jno
ror
xchg
mov
jbe
popf
icebp
add
jle
cmps
cmp
pop
cmps
push
or
addr16
cmps
dec
paddw
leave
cmp
movs
and
retf
dec
icebp
in
pop
push
adc
xchg
xchg
or
xor
sbb
(bad)
push
cmp
mov
lahf
ja
ror
pop
ret
sar
jl
jle
push
xchg
jae
clc
xor
xor
add
bound
xor
sti
sbb
jmp
stos
pop
ror
xor
in
std
pop
sbb
adc
xchg
cmc
outs
das
ret
test
fs
lods
lods
cmp
jle
scas
cmp
das
lahf
aam
push
gs
dec
popf
(bad)
pop
jecxz
jno
or
stos
ror
xor
inc
xor
xchg
dec
push
(bad)
cdq
sbb
and
mov
ja
jae
in
cmps
cmp
lds
fnstcw
retf
xor
aaa
pusha
push
(bad)
dec
adc
test
or
jnp
dec
xor
ins
sti
iret
push
adc
scas
jo
cmps
dec
push
xchg
cwde
dec
in
ret
pop
ficomp
xchg
xchg
cmp
jge
in
xor
mov
movs
inc
dec
sub
dec
xor
xchg
adc
mov
pop
fisttp
dec
xlat
mov
and
jae
and
jno
sub
popa
or
rol
mov
mov
ins
mov
rol
jbe
xchg
icebp
add
dec
sbb
xchg
adc
in
mov
fs
or
mov
cli
outs
test
mov
dec
mov
or
cmp
out
push
sbb
ret
jb
mov
push
popa
inc
out
sub
add
inc
sti
pop
leave
out
(bad)
cmp
jl
leave
(bad)
push
xchg
repz
(bad)
add
cmp
xor
mov
jle
js
movs
or
test
dec
movs
lea
sbb
lahf
push
leave
inc
into
js
jb
sbb
xor
leave
inc
add
xlat
test
lea
push
call
(bad)
fbld
add
pop
lahf
jmp
sbb
pop
arpl
inc
fwait
pop
cmp
outs
xor
cs
dec
aam
aad
sub
cmc
test
sbb
xchg
stos
add
add
pop
fisttp
mov
push
sbb
or
xor
popa
inc
clc
push
iret
cmps
jmp
ins
ror
dec
aam
xor
enter
ss
fidiv
je
jp
pusha
movs
fisttp
mov
mov
call
push
sbb
jge
enter
jl
mov
test
lods
jno
sbb
cmp
fild
shr
ss
jmp
bnd
jne
mul
sub
add
xchg
(bad)
sbb
jo
cmc
and
pusha
dec
push
in
push
pop
or
pop
and
sub
cwde
add
pop
stos
test
shr
inc
xchg
retf
sub
ret
cwde
and
and
push
lock
xor
mov
les
(bad)
in
adc
xor
sbb
jo
call
mov
push
or
mov
aad
xor
out
lea
and
loope
pop
outs
imul
cmps
jnp
jbe
frstor
mov
fcomp
push
test
push
call
mov
int3
lahf
sahf
cmp
xor
adc
imul
cli
(bad)
int
ins
push
popa
push
pop
rol
ins
xlat
jnp
mov
aas
outs
cs
add
inc
add
add
and
lods
iret
nop
xor
cmps
icebp
sbb
test
sub
test
sti
stos
out
iret
jo
rcr
ja
mov
adc
jp
lahf
push
xchg
push
movs
push
call
lods
mov
clc
jg
mov
fwait
inc
pop
mov
inc
fstp
rcr
or
fnstenv
jo
imul
js
cmp
xor
add
mov
retf
stos
pop
mov
ins
mov
mov
call
rcr
push
xor
xchg
shl
je
xor
and
mov
sbb
jb
pop
pop
sbb
aam
daa
movs
f2xm1
xchg
xor
shl
out
(bad)
sbb
ror
xchg
fstp
dec
pushf
adc
mov
xor
mov
inc
push
es
popf
enter
mov
dec
inc
dec
xchg
pop
das
js
mov
push
movs
repz
and
leave
mov
cmp
inc
pop
mov
pop
cmps
in
es
mov
mov
cmp
pop
int3
or
bound
mov
out
push
inc
and
cmp
pop
cs
leave
cmp
pop
cs
les
shl
(bad)
ret
sbb
xchg
adc
(bad)
jnp
ret
fwait
icebp
dec
xchg
shr
cmp
lods
xor
cmp
rol
movs
xor
fdiv
push
je
je
cdq
jae
imul
and
(bad)
mov
inc
shl
mov
ss
xchg
fmul
mov
or
sbb
cmp
retf
xor
sub
dec
sub
cmps
and
mov
xchg
cmp
pop
mov
xor
and
mov
movs
(bad)
adc
or
pushf
sahf
inc
hlt
es
mov
push
and
xchg
scas
jne
loopne
ins
push
lods
dec
push
ret
jb
inc
mov
sahf
sub
mov
mov
ret
xchg
add
sub
loopne
xlat
cs
dec
loopne
inc
out
btc
add
adc
enter
int3
mov
xchg
push
hlt
sub
jmp
cmps
xor
adc
mov
sti
push
mov
or
fbstp
mov
les
mov
adc
std
or
cmp
pop
jge
push
and
arpl
test
fnstenv
iret
in
add
ja
jae
xor
bound
xor
push
not
fldenv
lods
add
push
std
xchg
mov
jnp
push
pop
ret
rcr
pop
push
sahf
dec
cwde
add
or
aaa
div
lahf
into
iret
stos
mov
push
les
mov
push
add
(bad)
fwait
jb
pop
cli
stos
je
ror
dec
(bad)
outs
push
cmp
add
pop
mov
xor
fbld
fiadd
pushf
or
lods
int3
hlt
mov
cmp
mov
ret
cmps
std
stos
cmp
xchg
mov
popf
div
and
sbb
ja
sbb
std
int
xchg
pop
ret
sub
ret
mov
popf
sahf
paddw
or
test
push
sub
icebp
jbe
xlat
imul
enter
mov
mov
push
push
aam
retf
test
stos
outs
dec
add
push
fidivr
mul
xchg
aam
call
outs
xchg
xchg
jne
pop
inc
jle
fdiv
mov
hlt
mov
xlat
mov
adc
aas
or
fimul
cmc
dec
add
jle
ret
push
js
jmp
push
push
or
jmp
push
cmp
lea
jle
mov
(bad)
pop
cwde
fstp
nop
xor
cmp
or
push
adc
push
xchg
or
xchg
xor
repz
jns
call
xchg
adc
or
mov
pop
sub
in
retf
xchg
test
adc
push
stos
jnp
aad
mov
hlt
jbe
or
cmp
movs
dec
adc
popf
and
sbb
xchg
gs
mov
sbb
out
pushf
les
pop
xlat
sbb
xor
imul
xor
mov
fcmovu
arpl
hlt
mov
fwait
cwde
adc
mov
stos
ss
inc
jbe
pop
fist
cmps
sbb
mov
aas
jmp
jge
dec
lea
and
arpl
les
pop
lock
and
fdivr
sub
push
cmc
movs
sub
scas
sbb
aas
push
enter
fadd
movs
inc
push
enter
inc
je
icebp
mov
mov
xlat
pop
popa
sub
fdivp
add
(bad)
jecxz
cli
or
sub
push
sub
dec
(bad)
(bad)
jecxz
jne
cmp
sub
mov
lock
pushf
mov
or
ret
mov
aaa
fdiv
aad
rcr
mov
lock
cmp
adc
nop
xchg
pop
push
fadd
xor
jge
leave
pop
push
pop
jecxz
test
fwait
mov
fs
mov
in
dec
mov
ds
js
jge
sub
or
repz
pop
pop
sbb
xchg
and
hlt
mov
mov
adc
mov
cwde
rol
mov
cld
or
clc
push
arpl
lahf
sub
and
mov
cdq
xchg
outs
xor
cmp
dec
mov
daa
out
in
cli
cmp
ss
xchg
bound
jg
cmp
stc
ins
enter
arpl
pop
neg
add
cwde
mov
add
jecxz
xlat
cmp
xchg
jno
test
ret
pop
je
cli
(bad)
push
in
bound
jge
xchg
pavgb
nop
mov
push
inc
cwde
sub
cmp
jle
pop
dec
mov
test
mov
mov
add
call
enter
cwde
js
mov
cmp
ja
inc
cmp
repz
sub
jno
out
and
sbb
adc
stos
ret
adc
xchg
cmp
mov
sbb
pusha
mov
push
int
inc
push
adc
fadd
in
jo
add
pop
mov
aad
sahf
iret
nop
inc
ins
fadd
dec
call
add
dec
imul
adc
sahf
xor
fst
inc
inc
or
mov
ret
es
stos
jmp
inc
neg
popf
test
test
(bad)
xor
loop
daa
jl
pop
lahf
(bad)
not
or
push
arpl
loopne
jmp
fld
mov
dec
xor
push
mov
mov
ja
movs
inc
outs
or
sbb
scas
repz
gs
scas
jb
inc
ret
add
cmp
(bad)
(bad)
mul
sub
dec
xor
sub
neg
and
push
push
cwde
cld
dec
adc
xor
push
rcl
fcmovb
mov
ror
sub
and
push
ds
mov
add
xchg
push
fstp
mov
cmp
dec
xchg
inc
repz
mov
rcl
pusha
pop
sar
mov
mov
fldcw
mov
shl
push
mov
fisub
mov
pop
clc
add
dec
push
add
and
ds
jns
pop
cli
or
jnp
fisub
fst
fcomp
lods
jp
lock
jo
fist
test
fwait
pop
les
mov
dec
push
sahf
and
and
push
dec
int
out
loop
stc
into
mov
adc
loopne
into
dec
ja
jg
mov
jge
jecxz
stos
frstor
jp
xchg
out
inc
cmp
lods
or
inc
pop
sub
push
hlt
movs
ss
sar
scas
jmp
dec
pop
sub
inc
call
stc
jmp
sahf
jne
das
xchg
sbb
lock
push
xor
ret
cli
inc
aas
pop
stos
mov
jo
xchg
and
test
dec
add
push
les
clc
dec
nop
fild
mov
out
jbe
adc
xor
add
sbb
adc
shl
inc
sbb
xor
rcl
push
shl
xchg
and
push
cmp
pop
xchg
push
cwde
(bad)
fdivr
inc
mov
hlt
and
retf
xlat
cmp
jns
outs
fstp
popa
jb
jge
les
cmc
test
adc
sti
je
inc
mov
test
sbb
xchg
loope
push
adc
jecxz
pop
xchg
dec
mov
mov
es
gs
(bad)
and
icebp
sub
or
sbb
fldcw
pop
jo
ja
stos
pop
test
leave
push
push
add
mov
in
inc
push
jl
outs
shr
pushf
mov
mov
ret
mov
sbb
(bad)
std
inc
inc
xacquire
in
(bad)
jb
fmul
xor
pop
stos
add
test
pop
xlat
pop
jle
mov
jecxz
add
pop
cmp
mov
sahf
sub
sbb
cld
jl
js
add
jb
outs
sbb
(bad)
aas
cli
jns
sbb
cmps
rcr
into
sbb
mov
dec
pop
lods
out
pop
push
inc
fimul
add
pop
loop
push
or
aas
push
jecxz
lods
(bad)
loope
test
or
leave
mov
or
dec
adc
call
jmp
(bad)
out
mov
ret
stc
int
xchg
ins
clc
dec
fwait
xor
add
sub
cld
sti
xchg
or
ss
and
cmps
mov
ret
retf
sub
dec
enter
mov
sub
dec
into
add
shl
loope
ret
mov
sub
loop
push
cmc
jge
loope
ja
pop
lods
jbe
lock
test
aaa
and
test
adc
dec
dec
nop
inc
push
pop
mov
or
or
in
pop
mov
cdq
xchg
imul
push
or
stc
mov
xor
stc
inc
jmp
dec
or
mov
shl
mov
out
push
sbb
lods
inc
sti
push
cwde
es
sbb
fld
add
inc
ffreep
sbb
mul
mov
xchg
sub
jo
dec
jmp
push
bound
and
jmp
ret
jns
jecxz
dec
mov
xchg
mov
sub
out
pop
pop
imul
repnz
push
div
int
xchg
or
jmp
or
hlt
xchg
or
int3
pop
test
push
or
and
inc
sub
pop
sbb
pop
dec
repnz
mov
xor
sbb
add
mov
enter
push
sub
jmp
(bad)
stos
jns
cs
xchg
inc
lods
ins
add
adc
jecxz
pushw
mul
push
jl
popf
push
int
ss
and
mov
loop
xchg
sbb
dec
fsub
mov
hlt
stos
xchg
das
sbb
inc
pusha
jnp
fwait
sbb
gs
movs
cld
js
xor
dec
push
out
xchg
pop
mov
xchg
mov
jmp
nop
jle
jmp
add
mov
mov
xchg
out
lahf
fs
sti
sub
adc
(bad)
xchg
xor
fild
add
dec
cs
pop
sbb
push
fwait
retf
cmp
jb
pop
dec
xlat
gs
xor
push
mov
push
push
call
push
in
xchg
push
mov
(bad)
mov
in
std
sub
xchg
mov
xor
add
adc
mov
std
(bad)
fstp
sub
cmp
sbb
aaa
adc
or
xchg
mov
sub
imul
ror
fcomp
xchg
jmp
int3
mov
and
and
arpl
mov
inc
fst
fdiv
ins
sbb
(bad)
cmps
in
jno
stos
pop
sub
mov
gs
jo
dec
sahf
jecxz
mov
lods
retf
std
adc
js
push
lock
mov
push
jmp
icebp
mov
mov
leave
inc
mov
mov
xchg
or
ja
xor
jmp
and
shl
imul
fiadd
adc
and
jae
fistp
div
sbb
lods
in
mov
sar
out
sub
jp
cmps
ins
scas
add
je
mov
xchg
push
in
cmp
cmps
pushf
in
sbb
jecxz
and
and
aaa
(bad)
aas
sbb
call
sub
test
xlat
out
stos
xor
mov
sbb
sub
mov
inc
mov
(bad)
dec
mov
fcomi
push
adc
add
push
and
ins
mov
dec
pop
addr16
sbb
or
push
or
mov
inc
imul
dec
clc
and
sub
mov
push
out
imul
aaa
rol
xor
jp
bound
mov
fadd
inc
inc
push
loope
test
mov
cmp
mov
out
mov
retf
ja
jg
adc
fild
jge
mov
aad
cmp
ror
into
dec
addr16
sub
fsubr
sub
jae
adc
adc
imul
arpl
daa
jnp
xchg
jp
cdq
mov
cmps
mov
ins
pushf
ins
ror
stc
adc
cmp
dec
jp
mov
cld
mov
inc
pop
cli
fst
pop
es
addr16
fwait
out
mov
add
cdq
push
adc
mov
mov
mov
sbb
push
cmp
loop
xchg
jecxz
loop
mov
inc
bound
shl
or
ss
cmps
in
rol
adc
pushf
xor
and
cmp
(bad)
dec
push
icebp
xchg
arpl
dec
fcmovnu
fnstsw
mov
push
div
cmc
jmp
cmps
addr16
xchg
test
sbb
clc
push
cmp
(bad)
ja
dec
jae
iret
mov
mov
mov
inc
aam
mov
mov
popa
cld
cwde
daa
xchg
adc
add
pop
fs
(bad)
iret
mov
fidivr
arpl
data16
icebp
adc
mov
sub
xchg
test
mov
mov
cmc
mov
xchg
mov
stos
sub
inc
enter
jmp
mov
dec
jae
jbe
fidivr
test
dec
xor
jo
sahf
push
fnstsw
xor
xor
ret
jmp
push
sub
xor
in
aam
push
out
movs
jecxz
out
hlt
ins
pop
ss
mov
mov
aas
sbb
mov
sub
and
pop
(bad)
stc
add
inc
test
lea
sbb
mov
nop
xchg
scas
js
rcr
sahf
jns
jbe
cmp
in
xchg
dec
imul
mov
sub
pop
push
pop
or
mov
loopne
mov
sub
stc
jne
dec
pop
mov
jnp
add
fcom
lock
sub
ss
jmp
or
jg
and
adc
aas
xchg
mov
xchg
pop
fadd
scas
sbb
cld
lahf
and
pop
repz
mov
cmp
and
jno
rcl
in
mov
int3
(bad)
cdq
push
test
jp
daa
mov
xchg
pop
scas
adc
add
movs
not
(bad)
sbb
xor
inc
clts
sub
push
mov
push
mov
(bad)
cmovne
dec
test
cld
jmp
sbb
mov
adc
inc
jge
pop
fld
fst
cmp
daa
xor
data16
xchg
xor
mov
mov
shl
cld
push
cmp
add
aas
jge
rcr
xchg
dec
nop
test
mov
cwde
push
and
inc
xlat
fstp
add
adc
fwait
jae
jecxz
xchg
rcl
push
sub
sub
xor
retf
fsin
fs
adc
push
fst
fcmovnu
sub
leave
aas
add
mov
nop
cmps
es
xchg
pop
imul
sub
lock
push
xlat
add
pop
push
sbb
mov
xor
out
xchg
jb
pop
in
dec
adc
sub
pop
sbb
sbb
xchg
jl
pop
push
xchg
repz
mov
mov
xchg
ret
popa
(bad)
cdq
and
sbb
mov
scas
call
pop
jge
outs
add
fisttp
rol
leave
imul
js
(bad)
mov
jo
add
mov
jns
cmps
inc
pop
dec
les
mov
cmp
lods
or
mov
xchg
mov
int3
or
fwait
xchg
jecxz
iret
fisubr
lock
pop
mov
aam
mov
inc
pop
xchg
push
lods
movs
inc
pop
push
call
mov
push
jo
dec
shr
test
sti
inc
jmp
sti
add
and
sbb
fwait
adc
ins
xchg
xor
imul
bound
test
(bad)
test
rcr
jnp
shl
loopne
push
out
cmps
xchg
mov
stos
popf
mov
mov
(bad)
cmps
mov
and
fwait
pop
and
cmp
ror
div
or
and
dec
adc
sub
lods
popa
ret
hlt
jo
cdq
jl
out
clc
stos
mov
movs
je
(bad)
push
scas
add
or
xchg
cmp
or
jb
jns
mov
es
mov
rcl
xchg
lods
sub
xor
push
inc
jmp
jmp
ja
mov
test
fisttp
or
lods
arpl
call
in
cs
push
icebp
ror
je
test
xchg
push
adc
jmp
gs
inc
mov
inc
mov
or
sbb
xor
rcr
test
fxch
xchg
ss
sub
xchg
mov
dec
lahf
pop
imul
xchg
jnp
pop
pop
mov
add
pop
lods
inc
dec
mov
mov
cld
mov
rcl
aas
das
call
xchg
retf
shl
imul
and
popa
in
loopne
add
adc
push
pushf
pop
sbb
test
mov
xchg
jae
or
or
out
test
cs
in
pop
outs
(bad)
je
adc
sub
not
add
ins
push
fbld
mov
cdq
mov
xchg
movs
xor
cmp
add
dec
sbb
addr16
mov
ss
dec
int3
pop
xchg
hlt
rol
outs
mov
add
in
lods
push
aam
and
cmps
dec
fcomp
repnz
inc
pop
(bad)
and
xchg
and
ficomp
ret
iret
push
mov
(bad)
retf
push
outs
mov
add
movs
adc
mov
jge
xlat
xchg
sbb
dec
(bad)
fstp
lea
mov
inc
mov
cmp
mov
mov
pushf
popa
jmp
fwait
aaa
jecxz
mov
ret
sub
hlt
in
xlat
movs
test
xor
push
push
mov
jp
lea
pop
xlat
ror
xchg
sub
scas
imul
cmps
nop
xchg
xchg
lods
call
cmps
xor
dec
out
xor
mov
aaa
fwait
repz
cmp
and
lds
lods
add
mul
(bad)
and
repnz
xor
popa
push
push
sti
jmp
(bad)
xor
nop
neg
or
shl
shl
ror
popf
jge
test
jge
mov
icebp
ins
cwde
push
fwait
mov
out
rol
inc
xchg
popa
cmp
aam
dec
mov
inc
mov
(bad)
js
mov
jne
jecxz
gs
hlt
xor
xor
imul
mov
ror
ror
xchg
cmp
ret
push
lds
les
cwde
cmp
(bad)
js
es
fwait
sbb
nop
add
or
aaa
cmp
test
std
jae
imul
xchg
int3
stos
popw
cld
or
sbb
cmp
push
(bad)
push
js
add
inc
ds
call
outs
or
enter
shl
pop
mov
jle
mov
xor
push
nop
xor
mov
sbb
movs
mov
sahf
or
or
mov
icebp
test
add
mov
or
pop
imul
retf
mov
xchg
inc
push
scas
mov
sahf
jge
pop
lock
mov
ins
lds
and
jae
dec
(bad)
ja
jge
les
and
lods
adc
imul
fst
out
imul
ins
dec
inc
aad
in
add
push
test
jmp
in
or
mov
xor
mul
js
xchg
sub
mov
es
xchg
sub
cmp
jecxz
(bad)
xchg
stos
dec
(bad)
pop
retf
lods
push
jne
js
adc
out
mov
inc
mov
xchg
adc
sub
push
jmp
call
xor
mov
jne
jns
cmp
sub
dec
jbe
jp
xor
mov
aas
xor
or
lock
push
push
repz
mov
jl
mov
mov
cmp
cld
pop
jmp
push
sub
jl
cmp
sbb
and
aam
jmp
jecxz
js
cli
xor
xor
(bad)
mov
jmp
add
jmp
mov
int
fistp
(bad)
push
sbb
ins
cwde
xor
or
xor
repnz
xchg
jae
jb
sub
or
add
adc
out
in
inc
cmp
mov
(bad)
cmp
add
bound
lods
pop
not
das
(bad)
mov
test
jp
mov
fsubr
pop
mov
dec
scas
xchg
jp
inc
ror
inc
mov
rcl
fidiv
lods
ret
stc
mov
pop
xchg
jmp
aaa
icebp
fimul
(bad)
jle
int
rol
js
not
cmp
xchg
mov
in
push
pop
cwde
ja
jmp
jmp
mov
repz
rol
dec
sbb
jne
into
mov
pop
cld
xchg
add
out
outs
icebp
mov
xchg
cmp
add
inc
push
and
into
dec
pop
sub
mov
mov
mul
sbb
jne
stos
js
push
push
jnp
or
jg
imul
pop
mov
push
jge
retf
int
dec
jg
mov
pushf
xchg
add
xchg
mov
push
int3
push
push
into
push
sbb
in
pushf
mov
fsubr
iret
sbb
mov
enter
jmp
mov
jp
rcl
push
and
xor
cmc
gs
sbb
out
cmp
dec
push
or
inc
inc
dec
outs
push
rcr
stc
fstp
dec
inc
imul
cmp
jmp
mov
xor
adc
mov
pop
jnp
mov
inc
and
adc
xor
pop
mov
xor
movs
pop
mov
mov
sti
xchg
arpl
gs
mov
shr
jns
cli
daa
not
(bad)
in
in
cmp
add
imul
mov
or
fdiv
cwde
scas
shr
or
xchg
ss
dec
add
sahf
int3
loopne
ds
mov
mov
or
pop
aam
cwde
js
push
cmp
mov
and
ins
out
sub
add
jmp
jae
xor
loop
pop
aas
adc
test
in
push
add
push
test
(bad)
cli
jmp
xor
pop
and
jns
push
or
mov
aad
sub
pop
xchg
ret
imul
ss
cmp
(bad)
pop
push
in
cwde
pop
ret
daa
bound
mov
(bad)
sbb
mov
cmp
rol
aam
stos
(bad)
repz
dec
push
mov
shl
scas
mov
cmps
mov
fwait
sar
mov
cmp
sub
adc
rcr
cld
fsubr
ret
dec
call
inc
fisub
dec
cmp
push
xchg
in
loop
mov
test
or
mov
cmps
hlt
aaa
hlt
pusha
or
dec
and
or
inc
push
sbb
clc
dec
push
iret
lea
jno
and
shl
or
push
xor
(bad)
rcl
push
out
push
dec
aam
in
dec
stos
(bad)
jo
jp
daa
in
sbb
lods
mov
push
je
das
xchg
outs
pop
sbb
xchg
clc
xor
pop
aas
clc
ins
mov
push
pop
jns
bswap
sub
mov
pop
jne
cmp
inc
pop
mov
mov
in
jns
(bad)
mov
mov
push
(bad)
fild
imul
sub
es
lea
repz
mov
test
call
sub
jbe
movs
mov
push
ret
push
out
arpl
ret
pushf
fsubr
sbb
fidiv
sbb
add
mov
cli
repnz
sub
sti
mov
jmp
or
jmp
or
push
sbb
push
stos
cli
loope
mov
inc
idiv
sbb
scas
push
inc
mov
(bad)
mov
push
sub
sub
adc
mov
imul
ins
in
sbb
inc
arpl
sbb
ret
and
(bad)
mov
ins
call
jle
stos
mov
jmp
adc
test
(bad)
and
push
push
pop
retf
push
mov
clc
inc
imul
pop
mov
mov
xlat
out
add
and
xchg
xchg
sti
push
add
add
jmp
push
call
cmp
mov
or
aaa
push
push
stos
out
adc
sub
out
rcr
mov
and
jb
or
int3
add
gs
sbb
fild
cmp
je
dec
jge
inc
mov
add
cmp
fcmovne
xchg
out
(bad)
xor
fimul
in
cli
xchg
test
xchg
out
and
cli
mov
(bad)
pop
sub
adc
inc
loop
push
iret
add
mov
imul
sbb
shr
mov
test
pusha
mov
xchg
dec
sub
lahf
daa
mov
pop
stc
aas
hlt
aam
xor
out
mov
cli
pop
movs
sar
or
addr16
jno
shr
aam
pop
jge
stc
xchg
cmp
dec
mov
out
(bad)
mov
ret
xchg
aam
arpl
push
and
pop
aam
sbb
bound
jo
cmps
push
pop
xchg
stos
in
mov
xchg
ret
push
inc
lock
pusha
add
inc
sub
pop
adc
push
dec
ret
or
ins
cmp
inc
std
jg
push
or
popa
push
cmp
cdq
(bad)
(bad)
push
(bad)
jmp
mov
sub
and
mov
es
lods
rol
and
es
movs
xchg
inc
shl
pop
(bad)
pop
aam
xchg
pusha
inc
mov
sub
sub
hlt
(bad)
scas
enter
pop
sub
retf
jb
pop
aam
fwait
(bad)
(bad)
mov
push
out
test
scas
lods
mov
and
push
push
(bad)
pop
leave
push
mov
dec
and
xchg
push
out
add
dec
(bad)
sbb
mov
add
cwde
fild
pop
cmps
pushf
repz
cmp
xchg
sbb
push
cmc
leave
cwde
pop
sahf
popf
dec
jo
retf
ja
retf
jecxz
or
lods
jmp
ds
sar
aaa
rol
lods
cli
inc
xchg
inc
push
popa
lock
or
and
out
repnz
inc
mov
(bad)
pop
mov
sahf
mov
test
dec
jo
jnp
mov
add
push
in
and
call
mov
stos
sbb
faddp
adc
push
in
and
and
gs
mov
loope
jnp
adc
mov
daa
jmp
dec
mov
xlat
out
sti
scas
pusha
hlt
outs
movs
clc
cwde
adc
cmp
or
call
popf
fdivr
jae
push
push
sbb
inc
xchg
movs
or
push
xor
dec
clc
jge
jmp
push
jmp
dec
(bad)
jmp
sub
sub
push
mov
in
fs
sub
xor
xrelease
push
(bad)
or
bnd
sbb
push
mov
push
mov
xchg
cdq
sbb
dec
cli
sub
lea
add
or
in
lds
cs
xor
push
push
fisub
jo
out
inc
(bad)
out
and
ret
adc
dec
adc
popa
mov
(bad)
je
adc
fnstsw
jnp
test
aas
cmp
mov
cmps
mov
(bad)
cs
dec
shl
pop
jno
xchg
clc
inc
inc
push
sbb
sub
xchg
cmp
loopne
sti
(bad)
or
fisub
les
call
sbb
jmp
and
(bad)
(bad)
out
iret
push
es
mov
in
cmc
or
test
sahf
sub
push
lahf
push
(bad)
pop
or
sbb
mov
in
push
dec
jle
dec
push
and
sbb
stos
int
js
mov
(bad)
inc
repnz
int
pop
inc
dec
push
rcr
dec
stc
retf
mov
stos
loopne
mov
out
cmp
rcl
inc
loope
fwait
mov
aaa
jge
aam
xchg
push
jnp
xlat
dec
inc
or
pop
fs
outs
cli
jne
mov
pop
nop
mov
pop
mov
out
dec
adc
xchg
shl
adc
and
pop
mov
retf
inc
ds
lods
aas
push
sub
nop
in
dec
mov
add
fld
in
inc
(bad)
into
fimul
fbld
into
push
outs
pop
ret
je
xor
mov
call
inc
pop
ins
fisttp
mov
mov
push
cdq
(bad)
jecxz
pushf
push
inc
push
cld
xchg
xor
mov
stos
aas
push
inc
push
(bad)
lods
add
adc
dec
cli
outs
clc
ds
fidivr
fs
dec
mov
jp
or
mov
ss
jmp
inc
cli
arpl
xchg
sub
(bad)
fs
mov
movs
cmp
ins
repnz
xchg
in
shl
mov
sahf
add
cwde
sbb
xchg
mov
test
add
xchg
jbe
push
iret
aam
cmp
and
jp
popa
ins
int3
push
out
mov
add
mov
sbb
pushf
jg
in
ins
xchg
fistp
cdq
jg
sub
sbb
jge
sbb
push
inc
aaa
push
pop
outs
psraw
pop
clc
sbb
pop
jge
iret
in
addr16
adc
sub
push
push
mov
inc
div
scas
xor
in
jg
adc
mov
faddp
scas
xor
lock
mov
stc
es
xor
mul
or
cmps
inc
and
pop
jnp
(bad)
lahf
repz
xor
jns
scas
inc
repnz
add
ins
cmp
jnp
or
and
pop
pop
mov
mov
(bad)
hlt
test
repnz
repnz
sbb
jb
leave
retf
pop
jl
adc
fs
inc
ret
xor
in
or
out
adc
cwde
idiv
cmp
sub
popa
mov
cmc
fisttp
(bad)
mov
daa
fimul
mov
or
outs
mov
mov
ret
imul
test
cmp
dec
xor
imul
mov
xor
pop
bound
out
pop
lods
aam
xchg
dec
inc
sub
cli
pop
dec
std
or
xchg
psraw
sub
mov
fild
(bad)
pop
test
out
mov
fild
lods
adc
cmp
repz
mov
aad
jnp
aas
add
sub
cmp
mov
fwait
test
dec
ins
push
call
inc
add
inc
and
scas
popf
(bad)
or
jae
pushf
cmp
cdq
lods
(bad)
xor
cld
fcomp
push
and
fcom
mov
gs
neg
cdq
int3
sbb
cmp
shr
loopne
adc
adc
mov
lea
jecxz
(bad)
shl
inc
daa
jle
std
dec
xor
jle
gs
(bad)
push
mov
mov
jecxz
call
fstp
in
dec
push
rcl
retf
stos
inc
fistp
pusha
shl
adc
mov
dec
sub
push
inc
and
xchg
or
imul
sbb
fdivr
dec
jg
jne
cs
std
rol
jbe
cld
jp
aas
mov
sbb
sbb
daa
jp
int3
xchg
(bad)
js
mov
cmc
mov
daa
retf
arpl
push
xor
and
(bad)
mov
jp
xlat
sub
cmps
xchg
mov
push
sbb
jo
jne
jg
leave
leave
(bad)
fucomp
mov
xor
jnp
sbb
jmp
fs
ret
stos
(bad)
stos
out
dec
xchg
imul
enter
mov
inc
outs
add
push
sub
add
dec
push
pop
push
loopne
jg
adc
sub
scas
(bad)
cmc
stos
in
mov
add
mov
xlat
lds
ins
add
push
and
inc
mul
sub
pop
loop
push
loop
xchg
push
in
dec
jmp
fiadd
push
test
and
ja
cdq
xlat
mov
sbb
call
and
movs
dec
jno
aam
mov
outs
dec
pop
sub
(bad)
enter
mov
fs
xor
jecxz
pop
out
mov
mov
push
fstp
mov
loopne
pushf
mov
fdivr
fcmovnb
or
xchg
(bad)
fldenv
dec
mov
adc
test
push
or
test
or
fnstenv
mov
daa
xchg
mov
test
sub
inc
add
test
retf
lds
xchg
cli
(bad)
(bad)
sets
jns
dec
or
xchg
or
imul
ss
jp
or
sahf
enter
cmp
xchg
sbb
inc
mov
fadd
and
mov
sbb
fs
jae
pop
dec
movs
mov
xor
push
xchg
sahf
rcr
jl
leave
sub
je
loope
mov
movs
lds
xchg
mov
xor
push
push
out
fnstcw
or
push
add
mov
mov
jae
xor
jb
jmp
pop
cmp
call
jno
aad
adc
nop
or
inc
ret
rol
pusha
add
xchg
lods
xchg
sub
test
dec
neg
pop
xchg
addr16
pop
or
popf
mov
jp
ret
ja
or
push
dec
pop
mov
in
clc
pop
mov
jmp
pop
test
jbe
cmp
inc
dec
test
mov
les
mov
fs
addps
xchg
xchg
das
add
(bad)
mov
(bad)
in
add
dec
jo
sbb
xchg
mov
pushf
in
cwde
inc
sbb
cmp
fs
lods
addr16
inc
or
ror
mov
cld
movs
jo
test
xor
cld
mov
ja
or
mov
fadd
xchg
mov
dec
cld
jmp
mov
jne
jo
inc
push
add
dec
inc
mov
mov
mov
inc
shl
fidiv
xor
and
(bad)
lods
pop
iret
cmps
xchg
and
mov
push
mov
dec
cmp
ja
popf
in
jp
sbb
rcr
pop
mov
mov
inc
test
rol
mov
or
icebp
jne
loope
or
lea
cmp
adc
pop
adc
sti
or
xchg
leave
cmp
loop
icebp
add
stos
repz
call
jns
push
clc
sbb
mov
je
adc
les
mov
pop
mov
mov
and
ficom
jnp
mov
mov
call
mov
jecxz
test
cmp
pop
lahf
dec
push
das
popa
cwde
push
mov
adc
icebp
iret
inc
pusha
mov
sub
jae
(bad)
xor
xlat
in
(bad)
xlat
or
aaa
pushf
dec
dec
mov
inc
arpl
xchg
pop
outs
lds
xchg
sti
retf
sub
adc
mov
add
dec
push
in
inc
int
cmp
and
clc
sub
(bad)
addr16
mov
xor
jb
push
mov
jecxz
daa
jl
retf
fimul
xor
sub
fidiv
lods
popa
movups
popw
add
clc
cmp
les
das
icebp
data16
stos
(bad)
scas
or
cmp
inc
jmp
stos
outs
mov
sub
mov
xor
rcl
jecxz
sub
rcl
cmp
dec
push
add
std
into
sub
mov
add
retf
int
push
(bad)
sti
or
xchg
shr
sbb
lea
outs
stc
pop
or
test
jp
(bad)
pop
adc
inc
jnp
(bad)
sti
mov
dec
push
jo
dec
inc
stos
mov
mov
jnp
outs
cmps
popa
sub
push
pop
sets
mov
movs
aas
pop
ins
les
ins
clc
cmp
pop
adc
pop
and
xor
cmp
inc
dec
lods
out
or
add
dec
dec
mov
ret
jmp
add
mov
fadd
fild
bound
ror
sub
rcr
xchg
jg
cwde
addr16
add
std
(bad)
enter
cmp
xchg
cmp
iret
pop
cs
popa
xor
bound
call
rol
or
sub
mov
and
lods
stc
mov
retf
sti
jge
gs
test
out
ja
xor
jp
and
add
cmps
xor
add
jbe
call
inc
icebp
push
sbb
pop
xor
retf
pushf
adc
pop
push
into
bound
std
add
int
push
ja
cdq
or
pop
lds
int3
xor
sbb
sti
cmp
cmc
adc
movs
ret
dec
mov
mov
sar
(bad)
repnz
das
cli
lods
(bad)
into
inc
and
inc
inc
mov
lods
mov
movs
std
loope
lea
icebp
add
xchg
jecxz
mov
outs
pusha
or
(bad)
out
xchg
xor
mov
mov
ja
push
and
cmp
sahf
iret
adc
repz
push
xor
je
cld
gs
pop
push
aaa
outs
shr
pop
stos
push
lods
push
scas
adc
fistp
or
or
cmp
cli
ss
in
pop
test
out
or
xchg
cmp
sub
lods
aad
lods
(bad)
movs
cmp
inc
aas
pop
inc
dec
in
push
and
sbb
loope
inc
out
bound
mov
into
pusha
or
in
push
ss
aad
push
ds
ret
call
test
cmp
out
(bad)
cmc
and
mov
mov
or
ret
add
add
mov
fnstsw
mov
shl
adc
mov
xor
cmp
lar
push
cwde
sub
add
sbb
gs
cmc
xor
xlat
add
retf
xchg
xor
or
push
out
in
mov
sbb
mov
xchg
dec
out
add
inc
dec
int
add
inc
mov
fisub
xchg
mov
std
mul
je
sub
cmp
cmps
iret
cmp
cmp
repnz
adc
mov
fcomip
sbb
and
or
push
mov
sbb
xor
inc
cmps
cs
aaa
xor
inc
fs
mov
leave
cmps
ss
mov
mov
cmps
daa
push
call
scas
mov
stos
loopne
cmp
push
sub
pop
int3
repnz
mov
gs
and
dec
sub
test
xor
and
mov
jecxz
fs
ins
push
inc
jns
scas
mov
push
add
pop
mov
inc
jno
aas
sub
cmp
sub
sti
sbb
rcl
cwde
xchg
and
add
mov
daa
pop
cs
adc
outs
cwde
jecxz
fwait
xor
test
sahf
popa
fwait
and
sbb
in
mov
xchg
popf
jmp
nop
retf
mov
into
add
push
adc
mov
je
jbe
sti
ja
mov
mov
jge
inc
and
dec
mov
push
or
rol
jl
and
adc
rcl
in
inc
and
std
mov
adc
mov
aas
pop
in
jne
xlat
jb
push
lods
dec
xchg
jmp
inc
vmptrst
repnz
cmps
mov
jne
pop
aas
call
xor
shl
(bad)
or
sbb
icebp
xchg
cdq
push
cmps
icebp
dec
mov
or
jp
mov
sub
iret
retf
shl
xor
inc
out
sahf
inc
ins
dec
stc
jp
lods
mov
cmp
mov
sbb
es
add
cmp
int
dec
je
or
jl
mov
(bad)
cmp
mov
ror
or
xchg
jmp
loopne
cmp
xchg
xor
pushf
xor
clc
pop
mov
cld
or
hlt
hlt
pushf
gs
cmp
in
arpl
cmp
fiadd
addr16
dec
mov
mov
push
test
jbe
push
into
and
or
cmc
das
cmp
test
xor
mul
push
shl
mov
sub
add
loope
cmp
imul
cmp
mov
jno
xor
pop
xchg
pusha
ja
das
and
fwait
jns
mov
and
mov
ds
sbb
das
add
and
jl
cmp
mov
imul
stc
mov
inc
jae
out
fwait
mov
stc
fimul
add
out
pop
dec
clc
fdiv
leave
iret
dec
(bad)
and
xchg
lahf
ret
mov
test
mov
popa
sbb
sub
movd
leave
fcomp
dec
mov
loop
imul
rol
add
addr16
pop
stos
or
or
das
stos
push
stc
ins
xor
icebp
loopne
lock
test
loope
inc
xor
iret
sar
inc
mov
push
mov
xchg
push
test
lods
mov
jnp
jnp
cwde
cmp
inc
sbb
outs
ins
stos
ret
dec
add
push
out
jnp
pop
adc
repz
int
out
jl
push
mov
inc
das
jmp
cmps
cmp
adc
into
mov
icebp
lea
out
shr
add
adc
jmp
jp
xor
xchg
cmp
xchg
cmc
imul
adc
pop
or
and
xor
jns
lea
in
jmp
imul
mov
push
je
ins
mov
scas
pop
daa
xchg
loope
mov
jnp
pop
cmps
and
fidiv
(bad)
and
add
dec
push
adc
inc
ret
sbb
inc
pop
mov
adc
loope
pop
push
shl
and
push
cmps
and
pop
mov
adc
leave
xchg
repz
loop
dec
mov
sub
and
xor
fwait
inc
jl
addr16
mov
iret
jmp
cs
inc
cli
iret
cs
stos
imul
mov
xchg
fs
je
add
push
es
popf
in
outs
push
add
xor
jecxz
fwait
mov
rol
or
cmp
sbb
movs
std
gs
adc
mov
int
dec
repz
mov
and
imul
ss
retf
push
imul
mov
arpl
jae
xor
cli
mov
cmps
ja
sub
test
in
mov
mov
pop
ja
adc
mov
push
cmps
fisub
sub
dec
adc
ins
shl
jns
xchg
pop
mov
and
inc
ds
push
outs
pop
push
jmp
fbld
mov
dec
dec
inc
js
cs
inc
sbb
inc
repz
leave
push
xchg
or
add
repnz
or
adc
mov
add
clc
pop
shr
leave
movhps
inc
mov
inc
jne
xchg
push
fwait
retf
je
aam
test
push
outs
mov
outs
pop
in
lock
arpl
ss
repnz
es
and
xchg
cli
cmp
add
dec
mov
out
cmp
mov
push
aad
lods
ror
mov
sbb
or
mov
dec
rcl
pop
loop
enter
fidiv
dec
lock
in
xor
sti
hlt
loope
out
mov
scas
fadd
daa
sub
pop
inc
or
mov
movs
mov
and
jge
fs
dec
int3
jne
cmp
mov
fwait
mov
or
add
out
(bad)
push
outs
and
ss
lahf
inc
xor
cmps
mov
inc
xor
add
mov
sbb
(bad)
jmp
adc
fnsave
pop
add
(bad)
in
js
loop
adc
xchg
sub
xor
outs
shr
xor
xor
mov
ret
dec
cmp
jecxz
push
fadd
and
add
dec
bound
out
push
iret
das
std
fcmovnu
jae
imul
cmp
mov
sti
add
inc
stos
inc
dec
outs
out
inc
lds
repz
dec
add
inc
push
popf
or
pop
xchg
add
pop
ret
dec
call
and
mov
aaa
pop
sbb
sti
loop
or
cli
out
push
ss
sbb
adc
mov
mov
sub
stos
fs
clc
add
mov
jne
xchg
jo
xor
test
pop
cmc
adc
and
int3
pop
mov
xor
push
mov
push
movs
add
imul
(bad)
lods
push
or
or
out
test
pop
(bad)
cdq
adc
add
enter
xor
and
dec
adc
fdivp
push
neg
lahf
mov
es
add
mov
aad
outs
je
les
data16
xchg
cmps
ret
xchg
push
dec
(bad)
das
mov
retf
sub
repnz
push
retf
mov
adc
dec
sbb
mov
mov
and
rcl
sbb
mov
(bad)
fcomi
cmp
sub
je
popa
cld
and
mov
hlt
sbb
addr16
jmp
mov
scas
xchg
fimul
loopne
push
test
jmp
addr16
ficomp
aaa
ret
pusha
sbb
jb
inc
add
(bad)
or
add
pop
inc
mov
push
add
sbb
inc
pushf
out
mov
repz
xchg
aad
push
icebp
cmp
pop
jg
lds
or
inc
and
in
add
jns
ror
jno
dec
fisubr
adc
imul
scas
outs
jmp
mov
dec
inc
in
mov
push
xchg
xchg
fwait
xchg
arpl
cmp
jb
or
xor
push
xchg
cmp
xor
mov
(bad)
adc
arpl
ins
inc
cwde
mov
jmp
inc
mov
adc
or
inc
cmp
movs
sbb
mov
jge
cmc
cs
xchg
call
pop
inc
call
bound
cmps
jns
push
mov
adc
xchg
arpl
(bad)
rcr
fdivr
jns
aas
sbb
retf
pop
test
call
add
das
add
es
inc
jns
jmp
dec
movs
frstor
ficomp
arpl
scas
movs
xchg
inc
jl
sbb
fisubr
xchg
addr16
dec
and
adc
rcl
(bad)
stc
cmp
adc
leave
fisub
xchg
pop
and
mov
add
movs
fidivr
ds
sub
jge
lock
in
fdivr
fistp
push
ret
mov
and
leave
in
test
lods
adc
daa
sub
mov
scas
clc
or
adc
mov
dec
mov
xor
sbb
mov
pop
fs
in
pop
mov
push
xchg
dec
mov
cld
sbb
sahf
or
jae
or
xchg
sbb
shl
fs
or
out
shr
loop
cmps
repz
imul
rcr
pop
je
xchg
cmps
and
push
lds
cmp
mov
jnp
dec
push
fst
jno
pop
sbb
daa
pop
ja
jo
jno
scas
test
hlt
jb
xor
test
sti
mov
jo
cmp
lods
push
push
push
xor
clc
loop
sub
inc
(bad)
(bad)
imul
dec
aad
(bad)
and
cld
and
int3
or
jecxz
scas
mov
xchg
imul
iret
pop
dec
(bad)
(bad)
ss
sub
mov
jbe
ret
cmp
cmp
cdq
sar
add
cmp
pop
cmp
pop
lea
scas
repnz
mov
xchg
fnstcw
pushf
push
fild
pop
dec
fisubr
call
in
inc
mov
pop
int3
popa
ror
pop
test
cmp
sub
adc
aam
pop
xchg
push
(bad)
dec
sub
cmc
mul
cwde
icebp
push
xor
nop
pop
jnp
cmp
add
sbb
or
jae
aad
lahf
sbb
mov
call
gs
sbb
dec
cmp
sbb
mov
or
loop
cmps
pushf
cmp
enter
sub
mov
jp
test
jne
imul
ins
sbb
and
inc
dec
(bad)
jmp
sbb
cmp
adc
scas
cmp
pop
scas
sub
xchg
pop
dec
xor
test
and
loop
or
mov
test
fdiv
dec
pop
add
mov
in
mov
dec
ins
xchg
pop
and
push
sub
adc
push
mov
aam
test
ret
test
imul
in
hlt
cmp
movs
in
in
sahf
or
jne
cmp
retf
lods
jmp
add
in
mov
mov
das
mov
lods
push
movs
movs
stc
pop
adc
je
jp
mov
pop
cvttps2pi
dec
ss
js
cdq
lds
mov
test
loop
(bad)
xor
cli
sbb
sahf
sbb
imul
movs
xor
leave
pop
mov
aaa
das
dec
push
or
xor
aam
jae
shl
sub
test
cmps
arpl
outs
std
dec
push
enter
test
ss
or
mov
xchg
pop
mov
cmp
pop
or
retf
lods
cwde
test
scas
lea
xlat
jbe
inc
in
add
loop
int
in
or
call
inc
call
and
(bad)
mov
shr
xchg
lahf
dec
retf
out
pop
cdq
lods
mov
xchg
inc
add
(bad)
daa
jecxz
mov
cmp
or
sub
add
and
add
xchg
xchg
scas
push
(bad)
out
adc
push
xlat
cdq
mov
popa
add
je
sbb
cmp
cmp
xchg
stos
mov
fdivr
(bad)
jbe
out
cmps
shl
adc
enter
icebp
and
out
lahf
and
pushf
leave
out
js
test
imul
pop
and
inc
in
das
or
sbb
lahf
out
dec
sbb
retf
outs
enter
inc
ret
add
stos
sbb
ja
ins
stos
ret
test
ds
xor
add
cmp
lock
sub
or
scas
sub
mov
fisubr
and
mov
push
gs
out
adc
outs
shl
mov
std
add
adc
inc
iret
jo
dec
ins
leave
sbb
mov
add
ds
xchg
daa
mov
cmp
xor
nop
cli
loop
lods
xor
fwait
push
and
sbb
mov
xor
jbe
jmp
sub
ss
scas
out
repz
int3
dec
pusha
lahf
ds
stc
sbb
pushf
mov
fwait
cli
pop
sbb
inc
add
push
test
jno
jle
push
sub
jp
mov
xchg
mov
xchg
lahf
ss
pushf
sbb
hlt
mov
or
mov
cmp
or
mov
cmps
popa
dec
push
scas
je
arpl
mov
leave
pop
(bad)
push
stos
idiv
xor
dec
aad
lock
ds
push
push
or
fld
ss
dec
pop
in
inc
push
data16
cmp
dec
js
pop
xor
xchg
pop
retf
cmps
call
cmp
xchg
dec
movs
jns
jp
or
inc
aam
add
xchg
jnp
outs
(bad)
(bad)
(bad)
xchg
cmps
adc
adc
xor
push
mov
mov
add
mov
mov
imul
into
mov
cmps
test
and
dec
(bad)
ror
cmps
in
pushf
out
xchg
inc
out
out
mov
xadd
scas
imul
repz
sub
xor
out
jae
dec
sbb
push
add
xchg
sahf
mov
outs
arpl
test
mul
mov
fisubr
jp
test
push
xchg
ds
sar
cwde
sbb
push
add
mov
imul
pop
movs
loope
aaa
or
and
adc
jg
pop
adc
inc
call
je
mov
add
or
fs
lods
jnp
dec
in
setne
mov
outs
xor
rol
push
imul
cs
adc
push
nop
cwde
mov
leave
push
xchg
inc
dec
ja
push
sub
dec
pop
mov
test
add
push
sbb
imul
pop
lods
test
imul
cmp
pop
pop
pop
rcr
stos
mov
inc
xor
hlt
adc
call
movs
push
mov
(bad)
repz
and
cmp
push
push
dec
hlt
enter
dec
scas
movs
adc
mov
fstp
pop
xchg
call
add
push
jmp
inc
push
enter
jns
imul
je
je
inc
inc
shl
adc
cmp
into
dec
ds
pop
mov
ins
and
lahf
mov
pushfw
push
mov
mov
jae
popa
push
mov
fisub
shl
dec
fadd
pop
(bad)
not
lods
leave
adc
dec
sbb
fwait
mov
dec
ret
clc
(bad)
xor
mov
push
and
(bad)
xor
pop
push
enter
jge
ret
adc
inc
int
leave
inc
sbb
(bad)
fnsave
sub
das
adc
cdq
mov
fldcw
xchg
(bad)
iret
shl
push
cs
push
xor
clc
sub
fs
das
adc
fs
push
shl
mul
add
mov
mov
shr
mov
mov
scas
sar
and
inc
dec
sbb
inc
scas
inc
sbb
pop
sti
xor
into
pop
fild
(bad)
stc
into
mov
not
cld
xchg
sub
inc
stos
mov
mov
mov
cmp
loopne
jne
pop
aam
sub
stc
push
xchg
adc
xchg
shl
(bad)
sub
ror
mov
adc
and
movq
or
loope
in
outs
adc
fisttp
sbb
repnz
adc
xor
stos
push
test
pop
popa
imul
int3
sahf
rcr
dec
repz
addr16
or
fst
ins
xor
(bad)
mov
loope
sbb
mov
xchg
in
cmovp
in
cmc
rcr
mov
out
arpl
push
mov
xor
adc
dec
sar
cwde
pop
fld
push
xchg
pop
movs
or
arpl
and
hlt
call
sbb
mov
mov
push
imul
and
int3
cmp
shl
scas
jecxz
lahf
cld
pop
fimul
arpl
sub
jmp
or
push
aam
sub
xchg
inc
inc
sbb
das
fisttp
pop
ins
and
adc
and
jmp
mov
fwait
movs
retf
aas
lea
and
jp
xor
jp
xchg
pop
sub
add
inc
mov
imul
xor
ficomp
in
sti
pop
adc
xchg
sub
loopne
and
xor
cli
repnz
(bad)
xor
hlt
jbe
(bad)
pavgw
push
xchg
add
hlt
mov
add
(bad)
je
jl
loope
jl
cs
cmp
fs
xor
inc
aad
test
mov
xchg
xchg
loop
popa
in
or
not
(bad)
lahf
test
xchg
sahf
jge
stc
int3
in
dec
mov
xchg
pop
(bad)
stos
test
add
mov
add
cmp
in
cwde
push
imul
jmp
xor
popa
push
add
push
sbb
jge
push
push
pop
cdq
add
and
xchg
dec
push
cmp
pop
dec
pop
into
fisttp
mov
bound
xchg
out
dec
mov
mov
in
xchg
addr16
imul
add
in
mov
inc
nop
es
ret
fs
xor
adc
pop
lahf
div
retf
fsub
rcr
jo
add
push
cwde
lahf
mov
mov
rol
inc
pusha
scas
pop
lods
cmp
mov
call
jecxz
adc
ret
push
adc
mov
lock
std
outs
jl
push
inc
inc
fdivp
pop
push
and
sbb
(bad)
dec
mov
sub
ret
stos
ret
or
dec
jb
mov
mov
mov
aaa
sbb
cmp
ins
fs
(bad)
mov
inc
fcompp
pop
popa
hlt
in
sub
stos
fnsave
jle
xlat
neg
inc
sbb
call
popf
sub
or
dec
lock
push
pop
je
rol
cmc
les
cmp
xlat
mov
dec
shl
sub
push
adc
jmp
in
mov
dec
je
add
cs
and
test
movs
dec
sbb
xchg
jno
cmp
sti
xor
adc
pop
jmp
xrelease
xchg
xchg
and
addr16
rol
repz
js
out
push
sti
(bad)
cld
mov
cdq
dec
mov
rcl
push
movs
int
sbb
jb
inc
neg
int3
sti
rcr
push
adc
and
mov
sub
mov
or
gs
cmp
pop
sbb
cmps
push
scas
mov
test
(bad)
dec
jp
daa
(bad)
mov
jbe
nop
(bad)
jnp
cld
ja
mov
inc
lock
mov
in
fsubr
sbb
ja
(bad)
hlt
arpl
xor
test
cli
in
aad
icebp
jmp
xor
xchg
adc
lds
mov
mov
out
pop
adc
in
(bad)
(bad)
xchg
or
stc
and
js
rcl
dec
das
mov
xchg
inc
repnz
cs
test
xor
pop
push
pusha
inc
push
cld
push
neg
ror
ret
sub
dec
push
or
mov
std
push
adc
cwde
ret
sti
or
out
xchg
das
fnstcw
out
int3
sbb
cs
adc
cs
cmps
sbb
shr
fwait
mov
rcl
out
setne
aas
push
enter
adc
cmps
hlt
(bad)
std
cmps
xor
imul
test
xchg
cmp
dec
push
mov
mov
xor
mov
(bad)
ror
aaa
jno
repz
dec
sbb
xor
imul
icebp
(bad)
sbb
and
xchg
ds
sub
pop
xlat
loopne
adc
fdiv
scas
popa
dec
out
call
pop
push
aam
mov
cdq
ror
and
cld
fadd
(bad)
stos
or
jmp
ret
sub
sbb
bswap
cli
ds
push
mov
pop
leave
retf
inc
dec
cmc
cmp
call
sbb
pop
jno
adc
jns
mov
xchg
gs
pop
enter
mov
and
repnz
xor
rcl
das
repnz
sub
out
and
shl
cmp
cmp
(bad)
and
sbb
xor
(bad)
or
mov
gs
mov
and
out
xlat
(bad)
imul
rcl
xor
dec
push
sbb
sti
arpl
xchg
les
pusha
aas
push
xchg
(bad)
pop
and
ret
dec
xor
adc
bound
cli
sahf
arpl
add
fcomp
retf
xchg
sub
jne
scas
sub
add
dec
xchg
(bad)
hlt
add
add
pop
ret
xchg
enter
sbb
movs
or
pop
retf
adc
inc
(bad)
pop
in
sbb
push
daa
mov
xor
lods
sub
pop
ror
push
(bad)
fidiv
imul
les
lock
jnp
inc
sub
ins
mov
loope
loope
popf
retf
cdq
jae
(bad)
jge
cmps
loop
or
add
sbb
mov
jbe
sbb
jmp
jp
add
dec
ss
cmp
sub
(bad)
mov
jge
lahf
add
cmp
shl
push
xchg
add
call
lds
pmulhw
mov
adc
movs
jnp
test
pop
hlt
pop
ret
dec
stos
inc
pushf
pop
stc
scas
jno
xchg
pushf
xor
adc
in
out
pop
jnp
test
jnp
and
repnz
dec
sbb
loop
xchg
xchg
xchg
(bad)
sti
inc
add
adc
adc
and
int3
addr16
loop
cmp
jae
or
mov
ds
adc
repnz
add
rcl
sub
lock
and
jae
push
dec
xor
pop
push
dec
jns
fwait
add
xchg
retf
xor
in
jae
rcl
push
mov
aaa
cmp
push
loop
loop
push
mov
xchg
sbb
xchg
jmp
mov
jle
int
out
fild
int3
sub
dec
fnstsw
sar
add
sub
dec
fucom
gs
fld
div
mov
xchg
cmp
push
xor
gs
dec
rcr
inc
(bad)
aaa
inc
mov
mov
fiadd
xor
into
div
sahf
and
mov
jecxz
es
into
fnstenv
lods
add
xchg
cmp
rcl
cdq
cli
fnop
jg
mov
ja
icebp
addr16
sub
fisttp
add
std
das
retf
xor
call
mov
and
es
pushf
aam
mov
adc
fsubr
dec
sbb
jmp
fcmove
xchg
lea
pop
cli
pop
(bad)
pop
mov
cwde
push
add
fsub
call
mov
cmp
and
cmp
imul
stos
cli
push
and
ds
mov
mov
or
(bad)
fisttp
repnz
xchg
push
fadd
adc
fmul
inc
sub
jo
jecxz
pop
sbb
dec
cmps
mov
(bad)
out
sbb
retf
xor
push
cmp
mov
mov
addr16
aaa
mov
movs
pop
pop
loop
jnp
rcl
jmp
cmps
push
mov
(bad)
dec
mov
pop
push
enter
mov
push
xchg
xchg
ss
mov
mov
ds
enter
cmps
push
xchg
jns
fstp
dec
stos
fs
add
push
or
mov
daa
nop
push
popa
daa
push
mov
push
sbb
in
fisttp
dec
addr16
and
mov
lods
scas
jne
std
and
int3
adc
xor
xor
xor
test
add
push
adc
cmp
int
mov
push
rcl
jbe
ins
xchg
mov
lds
sbb
push
sbb
jp
or
adc
cs
fwait
push
add
jl
and
fistp
jmp
jg
pop
out
icebp
xor
je
adc
gs
and
adc
cmp
sub
push
jbe
pop
jno
outs
adc
xlat
xchg
lods
mov
ins
enter
or
xchg
imul
ret
xchg
xchg
imul
sbb
or
jnp
rol
mov
mov
aas
dec
xor
sbb
cld
inc
dec
or
das
je
xor
pop
or
mov
sbb
adc
(bad)
push
into
test
pop
mov
(bad)
xchg
loope
cmp
push
arpl
es
push
hlt
dec
cs
retf
xchg
sbb
xlat
and
in
nop
les
adc
xchg
or
(bad)
aam
call
icebp
xchg
mov
or
dec
sub
jo
add
hlt
sub
sub
jle
fadd
jp
xor
push
xor
mov
sahf
jmp
or
mov
int3
test
retf
cmp
ret
inc
jg
ror
jecxz
outs
sub
daa
sti
sub
addr16
retf
inc
addr16
fwait
dec
aaa
lods
std
movs
mov
jnp
or
(bad)
pop
cld
rol
scas
sub
and
stc
arpl
mov
xor
jbe
test
mov
lock
out
(bad)
(bad)
gs
and
fcom
sub
pop
mov
les
les
das
jmp
mov
xor
aaa
cmps
adc
and
rcl
icebp
daa
mov
out
xor
lock
mov
outs
call
cs
sbb
sub
push
push
pop
lods
out
rcl
sbb
jmp
lods
cmp
xor
test
movs
cmp
movs
clc
lods
int
pushf
jl
push
xchg
call
les
jmp
mov
out
ror
mov
push
adc
icebp
call
dec
inc
inc
test
(bad)
repnz
mov
mov
ret
test
jg
test
ds
inc
cmps
push
aam
stos
sbb
add
(bad)
icebp
or
dec
cli
add
gs
sar
cld
cdq
mov
and
inc
bnd
cmp
sub
(bad)
xchg
cmp
pop
pushf
add
loopne
mov
cli
arpl
push
pusha
daa
cmp
xchg
movs
clc
and
jmp
sub
mov
adc
rol
xchg
or
adc
inc
or
dec
dec
clc
mov
mov
and
jl
xchg
enter
xor
mov
dec
popa
add
cmp
outs
fstp
fcmovnbe
inc
sbb
(bad)
mov
in
push
push
test
std
cli
sbb
adc
aaa
outs
and
ret
or
clc
std
mov
mov
or
jl
push
mov
int
pop
sub
add
mov
pop
jg
(bad)
xchg
stos
pop
adc
popf
mov
rcl
scas
or
stos
fiadd
(bad)
leave
dec
inc
das
sbb
sbb
es
mov
inc
shl
inc
or
std
lods
sub
dec
in
mov
inc
test
bound
sub
lods
and
xchg
xchg
jecxz
(bad)
inc
xchg
stc
pop
pusha
adc
xchg
enter
mov
ja
out
add
xchg
into
xor
xor
dec
xchg
mov
rcr
push
cmp
repz
fwait
imul
test
(bad)
nop
inc
popf
sti
jmp
mov
(bad)
push
sub
in
and
cld
mov
inc
(bad)
rcl
(bad)
mov
sub
cmc
test
cs
mov
dec
pop
push
dec
xchg
jmp
hlt
rcr
test
and
add
xchg
shl
(bad)
fstp
ins
outs
push
mov
movs
mov
sub
jbe
mov
xchg
pushf
test
jae
sub
bswap
mov
mov
cmps
pop
int3
push
push
and
inc
out
sbb
or
out
adc
sbb
es
adc
and
out
or
stos
int
pop
mov
aaa
xchg
fcom
nop
add
mov
pop
jne
retf
leave
dec
fstp
and
sbb
push
mov
cwde
loopne
xchg
sbb
sbb
jmp
fnstenvw
out
ins
retf
ret
ja
inc
movs
int
sbb
add
sub
dec
mov
loopne
(bad)
pop
stc
push
scas
nop
pop
mov
call
pop
imul
adc
loope
xor
adc
test
push
mov
movs
aam
mov
scas
retf
test
loopne
push
push
cmp
fwait
pop
sbb
in
test
out
lea
and
sahf
push
je
repz
daa
sub
or
push
xchg
fcomp
sub
sbb
sub
fcom
mov
push
jl
mov
cdq
imul
icebp
jb
pop
addr16
sahf
push
pop
mov
popf
or
push
out
sub
ja
in
sbb
js
sbb
addr16
test
sub
pushf
arpl
add
ss
cmc
inc
jno
pop
loopne
inc
loope
inc
dec
push
mov
movs
mov
jae
pop
or
repnz
and
xor
rcl
popa
add
ins
int3
imul
scas
or
lods
add
fistp
out
cmp
rcr
aam
push
popa
pop
out
inc
lea
int
test
xchg
sbb
cld
(bad)
in
mov
call
mov
mov
nop
xlat
test
and
enter
xchg
stc
pop
or
sbb
pop
adc
xor
inc
out
call
pop
mov
hlt
aas
xor
retf
adc
retf
imul
aas
jp
(bad)
in
cs
or
fst
bound
in
(bad)
jmp
in
lods
pop
jns
or
outs
xlat
xor
adc
les
gs
fcmovb
push
(bad)
nop
retf
sahf
xchg
in
xor
xchg
mov
mov
mov
pop
test
mov
leave
stos
mov
inc
pop
aam
std
shr
jecxz
mov
leave
ins
sbb
and
in
push
fild
hlt
rcr
and
shr
lahf
(bad)
mov
or
mov
jb
fild
jmp
push
sbb
push
dec
pop
add
sbb
xchg
ret
call
hlt
movs
jo
xor
dec
sub
sub
xchg
ret
inc
cmc
inc
mov
jns
dec
inc
sub
jb
jns
clc
jmp
push
fwait
test
sub
loopne
mov
lods
and
scas
pop
or
sub
dec
sbb
outs
and
test
inc
mov
jb
xor
jle
dec
test
sar
jl
jne
add
adc
dec
and
inc
pop
aam
push
and
push
xchg
call
mov
sub
fmul
mov
mov
mov
rcl
pop
jmp
xlat
xchg
test
(bad)
ja
adc
das
jno
cdq
enter
dec
xchg
test
(bad)
mov
imul
ret
out
or
aam
ss
sbb
cli
pop
sub
(bad)
sub
idiv
dec
aas
mov
sbb
mov
ficomp
inc
es
xor
sub
mov
mov
add
sbb
rol
mov
mov
imul
push
(bad)
xlat
sahf
(bad)
push
jmp
lods
jb
jmp
cli
test
outs
cmp
mov
push
xor
pop
jmp
xchg
mov
push
xor
int
pushf
cmp
pop
jbe
jecxz
mov
mov
sbb
jbe
mov
add
in
cmps
dec
cli
ins
jg
pop
mov
fcmovu
iret
mov
and
xor
push
adc
sbb
mov
outs
cmp
(bad)
scas
xchg
mov
clc
inc
std
dec
and
fsubr
pop
mov
adc
scas
jl
mov
pop
sub
inc
popf
pop
int
sub
enter
xor
xchg
pop
loope
mov
sbb
out
fist
pushf
fcmovu
ins
push
inc
call
sbb
test
mov
loop
test
sbb
mov
dec
xor
(bad)
in
adc
push
test
sub
dec
pop
sbb
scas
pop
cli
xchg
pop
adc
pop
dec
loop
mov
inc
mov
jns
adc
adc
cmp
fwait
test
xchg
push
in
repz
jno
lds
dec
scas
popf
inc
pop
fadd
pop
xchg
adc
fucomi
mov
pop
not
test
adc
dec
inc
stc
adc
mov
jg
les
sub
jp
lahf
inc
cmp
stos
retf
iret
ds
jno
mov
out
fmul
in
leave
sub
jmp
xchg
pop
sub
jno
enter
daa
and
clc
cmps
xchg
mov
sbb
inc
sub
inc
into
jg
(bad)
gs
push
outs
mov
into
hlt
stos
sub
cmp
adc
pop
(bad)
loopne
imul
xchg
adc
sti
hlt
push
mov
mov
test
mov
ss
in
mov
loopne
aam
jns
rcl
jl
add
scas
inc
loope
adc
fld
gs
or
js
call
xchg
sbb
inc
and
jns
pop
dec
sbb
mov
dec
jp
cwde
jae
(bad)
xchg
(bad)
lods
loopne
mov
push
mov
mov
xchg
dec
je
ins
dec
loop
add
xchg
std
int3
call
and
aaa
adc
sbb
cmp
mov
adc
adc
repz
sub
shl
lods
xlat
aas
retf
rol
xchg
xor
xchg
lahf
cmp
and
adc
sub
pushf
pop
mov
mul
sub
scas
xor
in
jmp
iret
arpl
and
sub
and
pop
jg
std
inc
inc
pop
push
fsubr
dec
push
int3
adc
(bad)
fisttp
sar
jg
sahf
sub
cmp
in
jmp
lock
mov
fdivr
adc
out
cmp
ret
popa
shl
les
dec
cmp
fist
movs
mov
(bad)
push
mov
jmp
and
and
xor
mov
mov
or
xor
loopne
out
outs
mov
mov
ficom
js
dec
cmp
xchg
in
add
ss
call
adc
sbb
sbb
adc
adc
test
leave
push
sub
inc
(bad)
push
pusha
mov
inc
or
in
in
pop
xor
and
adc
fwait
jp
add
scas
popf
pop
cwde
xchg
(bad)
sbb
scas
ret
fwait
mov
pop
jp
jle
inc
xor
aas
scas
movs
sbb
cwde
out
int
jl
dec
and
pop
jl
std
sbb
fs
stos
in
mov
or
das
or
and
jge
jmp
pop
mov
in
jp
nop
dec
stc
pop
cmps
jp
adc
xchg
or
sub
and
xlat
out
jo
sub
jns
mov
add
jmp
or
clc
lods
xor
test
cdq
fidiv
sub
enter
jbe
int3
adc
scas
sahf
cmp
and
jmp
out
in
nop
stos
adc
pop
popf
cmp
(bad)
fwait
adc
add
dec
ret
sbb
test
push
pop
adc
hlt
cmp
cwde
add
or
aam
ficom
shl
cmp
and
loope
fwait
push
loop
xor
neg
out
jle
outs
pop
mov
pop
add
push
push
in
pop
repz
xor
and
cmps
ret
dec
push
inc
lea
rol
test
pop
test
in
sub
int
stos
(bad)
pop
(bad)
mov
dec
jns
jbe
sbb
cmp
fbld
sub
test
fcmovb
xor
adc
and
test
test
or
movs
inc
mov
hlt
call
(bad)
sbb
shr
mov
jp
push
inc
jle
movs
add
sahf
dec
inc
movs
enter
retf
fistp
pop
or
dec
das
arpl
sbb
sbb
cmp
loopne
pop
sahf
mov
dec
mov
ja
in
aad
stos
cmp
iret
movs
fcom
dec
pop
and
push
cmp
stos
not
call
xor
pop
fs
add
call
pop
xor
jg
lahf
xchg
push
and
loope
jb
dec
xor
cwde
ret
add
xlat
in
lods
cmps
xchg
push
mov
xchg
or
dec
xchg
div
es
repz
mov
xchg
mov
and
and
push
mov
mov
repnz
(bad)
call
jae
popa
jns
fadd
cs
jg
sbb
pushf
pop
jecxz
xchg
popa
ja
xchg
fucomip
das
or
sub
mov
and
sbb
bound
lods
add
inc
mov
push
aam
jae
cld
mov
cmp
jbe
test
pop
outs
out
jl
mov
pop
out
(bad)
mov
mov
(bad)
bound
xchg
add
jno
popf
or
daa
fsubr
fild
stos
xlat
stc
pop
xchg
sub
push
std
cs
sbb
lds
call
adc
lea
movq
cmp
mov
rcl
xor
or
arpl
out
(bad)
mov
pop
jns
call
mov
out
add
or
mov
mov
dec
add
jnp
adc
repz
jl
jmp
mov
cld
adc
cmp
jl
cwde
pop
push
jecxz
push
and
call
rcl
jno
mov
mov
cmp
popf
and
push
pop
and
jl
pop
(bad)
fbld
push
jge
and
loopne
dec
fistp
cs
arpl
add
add
div
aad
pop
sub
neg
sbb
inc
xchg
dec
inc
xchg
mov
adc
fild
dec
sti
js
fist
aas
ss
or
xchg
test
xor
jns
xor
ret
int
or
push
jne
adc
rcr
push
mov
mov
popa
test
xlat
test
mov
icebp
cmps
(bad)
loopne
scas
outs
lods
std
dec
adc
xor
jecxz
lock
mov
jge
push
data16
mov
frstor
scas
je
fiadd
arpl
inc
loope
jnp
dec
cmp
into
cdq
xor
rcl
mov
mov
retf
aas
mov
inc
or
dec
adc
imul
inc
loop
fs
pushw
mov
stc
mov
clc
loopne
mov
xchg
adc
pop
data16
mov
in
les
jns
sbb
pop
retf
in
bound
jnp
mov
jo
push
or
outs
xchg
in
lea
and
and
and
jne
retf
sub
ficom
(bad)
cwde
cmc
and
ss
dec
dec
push
mov
ins
imul
addr16
vpshaq
lock
sar
ins
xor
push
test
mov
psllq
pop
mov
in
mov
in
mov
pop
out
push
or
(bad)
mul
push
or
bound
sbb
ffree
retf
cmps
dec
sub
das
jns
lods
fidivr
test
and
stos
pop
hlt
mov
sbb
loope
faddp
inc
fld
dec
pop
xor
sbb
push
adc
or
jne
popa
jmp
mov
adc
mov
jno
add
fucomp
sub
push
mov
adc
add
enter
push
aam
inc
(bad)
outs
fild
shl
cli
jmp
pop
push
push
mov
faddp
fimul
push
jle
inc
mov
jo
xchg
pusha
sahf
add
inc
cmp
and
push
jl
in
je
call
xor
jge
mov
dec
arpl
xchg
aad
das
fadd
in
cli
lds
fisttp
jmp
push
stc
stc
inc
jle
pop
enter
jl
js
pop
(bad)
and
adc
fimul
adc
sub
pop
push
test
or
mov
cmp
cmp
fsubrp
sar
adc
pop
pop
addr16
das
xor
push
push
sub
in
fmul
fwait
or
out
mov
jnp
jmp
in
dec
retf
aaa
cmp
fstp
int3
mov
or
sbb
test
into
test
xchg
adc
mov
les
hlt
mov
jmp
cdq
test
imul
setle
gs
nop
les
test
mov
fild
xor
mov
mul
pop
pop
jg
mov
sbb
or
(bad)
sar
(bad)
sub
stos
dec
fnstsw
dec
leave
pusha
js
dec
aad
imul
sbb
cmps
xor
cs
dec
imul
sbb
jnp
out
ret
ja
ins
fwait
mov
jns
je
scas
movs
mov
mov
ficomp
scas
sbb
repnz
mov
cmps
jnp
lock
xchg
fst
rcr
push
test
adc
and
pop
jmp
add
repz
mov
add
lock
aad
sbb
mov
retf
fmul
outs
jo
jle
in
sahf
ret
dec
daa
jecxz
mov
mov
lock
add
or
daa
mov
dec
test
sbb
dec
or
sub
inc
xchg
fnstsw
in
jne
daa
(bad)
in
adc
bound
add
lds
or
clc
mov
push
and
push
(bad)
add
mov
dec
mov
jp
cmp
movs
mov
mov
rcr
inc
jle
call
hlt
pop
mov
pop
add
in
imul
popf
inc
xchg
jge
stos
push
sub
mov
add
cmp
and
aaa
(bad)
popf
jbe
push
cmp
sub
xor
das
scas
inc
xchg
add
mov
in
or
addr16
adc
je
ds
fdivp
inc
outs
test
dec
clc
adc
cli
call
rcl
loopne
mov
jg
movs
bound
sbb
retf
hlt
and
fidivr
mov
es
ret
rcl
mov
inc
jl
addr16
mov
in
mov
out
xchg
inc
mov
nop
cmp
add
cdq
lea
sar
jp
mov
js
test
(bad)
cmp
or
shl
or
int
int3
neg
xchg
aad
jmp
daa
retf
mov
lods
cmp
push
fisttp
aam
int3
pop
pusha
cmp
mov
push
add
push
cmp
(bad)
das
ror
mov
jnp
test
fbstp
sub
fsubp
mov
adc
add
mov
ja
retf
lods
or
adc
leave
xchg
aaa
cmp
mov
in
mov
sbb
jns
and
push
lods
jg
int3
adc
mov
sti
mov
mov
mov
aaa
adc
pop
sbb
test
mov
repz
dec
xor
(bad)
mov
mov
inc
cmp
hlt
loopne
push
dec
add
push
and
xor
push
test
ds
cmp
jnp
cwde
(bad)
inc
and
sub
outs
and
or
loop
(bad)
lods
pop
adc
push
ins
push
fsub
mov
mov
cmps
and
xchg
in
sbb
movs
mov
mov
dec
adc
jnp
cmp
loopne
and
push
int
arpl
ds
test
cmp
fwait
cs
(bad)
mov
xor
aad
mov
ror
in
fld
outs
fsubr
sbb
test
or
test
mov
jmp
(bad)
fdiv
jecxz
ficom
adc
cli
and
push
retf
dec
std
into
pop
loope
arpl
mov
addr16
scas
dec
in
adc
inc
mul
ror
movs
inc
jg
mov
mov
xchg
outs
or
xchg
xchg
dec
call
pop
push
loope
sbb
jns
ja
adc
dec
mov
fisub
mov
xor
cmp
inc
in
mov
(bad)
xor
fwait
sub
fmul
inc
xor
mov
xchg
test
(bad)
das
cdq
mov
or
inc
and
push
jae
js
adc
cwde
loop
rcr
pop
dec
push
cdq
lock
dec
xchg
dec
mov
adc
sbb
xchg
xor
and
sbb
xor
adc
ret
(bad)
sahf
mov
mov
repz
mov
mov
push
push
in
adc
daa
stos
adc
outs
jns
cld
je
ja
mov
jo
jnp
ret
dec
xchg
sub
add
cmp
mov
lods
loopne
or
pop
daa
push
nop
pop
imul
mov
cmc
xlat
inc
add
cs
fist
in
sti
xchg
xor
outs
or
daa
lahf
mov
push
shl
aam
cmps
lds
out
cmp
jne
pop
(bad)
jmp
jg
(bad)
mov
dec
mov
pop
sub
push
cmp
pop
sbb
adc
hlt
mov
aad
dec
mov
mov
xor
(bad)
popf
rcr
push
outs
pop
dec
inc
arpl
clc
xchg
test
repz
movs
mov
sub
gs
imul
rol
test
cmp
jl
mov
adc
pusha
xor
sub
dec
mov
jmp
std
lahf
retf
fistp
xchg
sar
adc
sub
pushf
aam
jmp
call
or
mov
sub
sub
push
ret
mov
inc
fisub
fisttp
pushf
mov
cmp
mov
gs
jp
xlat
cmp
ds
jbe
ins
pop
push
shr
sti
push
push
lds
jg
dec
or
add
enter
add
or
movaps
cmc
call
ror
and
pushf
mov
ret
test
mov
dec
loop
jmp
jb
add
fld
cmp
sub
jg
cmovns
inc
inc
imul
sbb
pop
repnz
mov
lea
call
sbb
js
std
iret
mov
scas
loope
xor
push
loope
xsha256
cmps
(bad)
idiv
jmp
(bad)
int3
add
sub
cmp
jmp
cmp
(bad)
je
mov
stos
adc
imul
ss
aaa
imul
(bad)
fsub
mov
push
out
sbb
mov
out
iret
jnp
je
or
inc
xchg
add
pushf
or
pop
jbe
jp
les
clc
jne
pop
into
pop
dec
ftst
xchg
idiv
mov
jmp
mov
mov
cli
dec
ja
movs
add
jno
loopne
pop
lahf
mov
mov
mov
sbb
push
push
cwde
xchg
push
xor
dec
test
pop
add
in
jnp
pop
test
xor
sub
sbb
add
xchg
out
test
adc
ss
inc
add
shl
push
jl
aaa
test
mov
(bad)
dec
jb
xchg
push
push
mov
and
call
pop
or
out
sub
push
pusha
xchg
jge
add
jne
push
jns
ins
sub
out
sbb
sbb
or
test
mov
fsub
push
and
mov
fwait
pop
shl
cmp
xchg
dec
push
dec
stos
jecxz
iret
arpl
test
jmp
sti
loop
cli
jg
es
add
inc
cmp
dec
rcl
lea
outs
adc
adc
sbb
xchg
adc
push
sbb
pusha
cmc
and
or
push
cmp
dec
xlat
into
bnd
adc
push
cs
mov
xchg
jne
(bad)
push
mov
mov
xchg
sahf
xlat
inc
fstp
or
fs
out
jp
fwait
in
(bad)
lods
pop
push
mov
jge
pop
push
fcmovb
aad
push
aas
sbb
jo
dec
loope
sub
call
jae
pop
adc
ja
xchg
ss
(bad)
(bad)
mov
shl
sti
rcl
out
pusha
push
push
adc
sub
int3
mov
mov
cmp
mov
jp
test
int3
hlt
nop
inc
mov
cmp
mov
push
push
retf
mov
adc
adc
push
mov
imul
xchg
mov
test
es
ret
loopne
mov
movs
mov
pop
call
push
mov
pop
dec
cmp
arpl
jmp
fwait
loopne
pop
loope
jp
cmp
add
stos
int3
inc
dec
call
xchg
mov
adc
and
jmp
lahf
jnp
or
pushf
xchg
fwait
fs
mov
push
in
mov
outs
jno
inc
xlat
stc
cmp
jns
(bad)
out
in
sbb
push
call
fimul
inc
aas
in
icebp
enter
xchg
sbb
das
dec
inc
add
add
sub
jns
xchg
sub
jb
test
inc
sar
push
loope
add
call
push
(bad)
cs
das
dec
xchg
mov
imul
cs
retf
scas
out
sub
mov
sbb
enter
mov
cdq
sbb
rol
push
adc
add
xor
hlt
cmps
cmps
(bad)
sub
cmp
fwait
cld
dec
fcom
(bad)
ror
xor
or
or
adc
mul
add
mov
bound
sbb
rol
xor
push
hlt
mov
in
or
and
inc
mov
pop
pop
add
daa
xor
pop
mov
out
adc
and
sbb
pushf
xchg
bnd
scas
js
in
xor
lock
mov
adc
push
xor
inc
out
addr16
out
imul
pop
mov
(bad)
nop
sub
cmps
sub
jns
jl
ror
shl
jb
jle
sub
or
pop
jno
fs
in
xchg
lea
adc
(bad)
lds
pop
xchg
push
jbe
leave
pushaw
imul
mov
std
out
push
jno
inc
jbe
xor
in
arpl
into
adc
xor
sub
imul
inc
ss
movs
mov
pop
andps
jns
mov
gs
dec
and
dec
movs
pop
sbb
jo
jl
push
daa
stos
mov
(bad)
js
rol
inc
inc
clc
lds
mov
cmp
leave
dec
sbb
jl
sub
cmps
jae
retf
jg
xchg
cs
xchg
xor
sar
push
adc
lds
cmps
cdq
dec
aad
iret
push
aam
(bad)
sbb
xchg
in
aaa
push
add
mov
das
pop
cs
pop
std
mov
jo
popa
jnp
adc
ror
cdq
scas
push
in
adc
inc
sbb
rol
add
add
stc
addr16
aad
(bad)
pop
aaa
jo
ds
test
xor
out
add
add
mov
push
push
enter
sbb
nop
and
fs
sar
cmps
sbb
inc
icebp
imul
dec
cmps
inc
bound
cmp
aad
pop
outs
xchg
gs
or
jmp
repnz
cdq
out
add
mov
into
iret
pusha
call
add
out
in
test
aas
cmp
xor
xor
dec
adc
push
xor
icebp
cmp
sti
daa
push
into
cs
sbb
stc
loope
push
mov
fs
ins
dec
test
test
fild
sbb
mov
jmp
push
or
mov
mov
fwait
lods
out
idiv
ja
jns
add
retf
aaa
push
arpl
shl
push
push
or
iret
jle
frstor
adc
cdq
mov
mov
fwait
loop
sbb
dec
test
mov
cmps
ja
push
ds
mov
sti
or
mov
jae
scas
mov
aaa
test
dec
push
mov
lods
pop
push
test
test
fiadd
repz
or
sub
call
inc
rol
push
daa
ror
jg
shl
int3
jl
cmc
mov
sbb
iret
mov
xor
out
adc
sbb
add
mov
and
xor
push
mov
mov
ret
lahf
jae
lea
xchg
push
mov
sbb
mov
jle
jo
addr16
shr
outs
jmp
arpl
inc
jmp
sti
sub
aaa
cmp
and
fild
pop
in
adc
jge
mov
xrelease
ja
dec
mov
sbb
add
ins
lahf
jle
xchg
or
repnz
(bad)
jl
push
sbb
and
movs
pop
and
adc
jno
inc
mov
push
mov
pop
je
movs
cli
jl
and
stos
pop
jbe
dec
sar
sahf
mov
pop
pusha
mov
aas
outs
cmp
test
add
mov
jb
dec
fst
and
je
mov
mov
out
repnz
sbb
sar
fild
lods
leave
lods
mov
or
dec
gs
inc
cs
add
lea
and
into
rcr
push
inc
mov
and
mov
push
adc
mov
add
outs
push
in
into
sub
jno
in
and
or
and
out
out
aaa
js
shl
fist
fstp
lahf
adc
sbb
jae
xchg
arpl
mov
movs
(bad)
repz
xchg
push
ret
dec
mov
jb
loop
stos
cld
and
cmp
xor
fidiv
retf
and
std
icebp
rcl
mov
call
sub
outs
adc
dec
add
movs
mov
xchg
xchg
hlt
push
loope
pushf
jns
jecxz
movs
iret
ins
daa
(bad)
nop
ds
popa
fldenv
outs
mov
nop
push
ins
sar
scas
call
jge
pop
aad
ret
retf
pop
add
push
pop
retf
mov
and
dec
pop
xchg
adc
mov
xor
out
pop
sbb
out
push
jmp
and
or
leave
inc
stos
jge
outs
pop
dec
cmp
inc
pop
pop
in
movs
xchg
add
dec
das
dec
pushf
sub
xor
enter
cmp
jle
fwait
xlat
cmp
xchg
push
stos
retf
push
shl
dec
push
mov
mov
int
mov
enter
repnz
out
movs
jle
movs
daa
cmps
cmp
cwde
inc
pop
out
gs
jb
or
sbb
xor
arpl
dec
lahf
jmp
ins
jg
adc
jb
ror
inc
or
pusha
pop
mov
dec
dec
push
bound
dec
and
popf
dec
cmp
inc
add
(bad)
sbb
popa
ror
mov
and
mov
(bad)
mov
jle
or
jp
cli
or
mov
scas
ins
xchg
aas
mov
mov
pop
aad
dec
mov
aas
imul
adc
movs
xchg
fist
sbb
dec
cmp
pop
mov
arpl
in
inc
(bad)
in
imul
mov
xchg
mov
jae
xor
xrelease
dec
fwait
enter
xchg
and
dec
and
push
mov
outs
outs
jae
out
ja
lea
sbb
and
or
hlt
lea
sbb
pop
pop
stc
rcr
mov
pop
xchg
pop
mov
dec
jnp
xlat
out
or
dec
out
mov
push
mov
stos
dec
stc
ror
iret
push
lods
aaa
add
sub
pop
mov
enter
call
push
leave
int
and
push
push
xchg
fmul
retf
fucomip
inc
push
div
jb
xor
loope
sub
xchg
jns
aad
ret
jl
out
call
sub
pop
lahf
jecxz
jecxz
int
push
(bad)
scas
dec
jmp
cmp
inc
out
and
mov
pusha
or
(bad)
int3
or
aas
call
icebp
mov
cdq
and
and
mov
and
xor
add
cmp
sar
(bad)
ror
cmp
pop
pop
fisttp
cmps
jg
outs
je
lods
(bad)
sub
clc
enter
sar
retf
aam
cmp
pop
adc
daa
mov
push
sahf
fwait
mov
aad
ins
stc
daa
jo
xor
jbe
mov
in
sbb
repnz
push
xor
repnz
stc
outs
ffree
sbb
sbb
push
sub
cmp
dec
icebp
cmp
out
mov
push
addr16
test
and
imul
jb
out
ja
fcmovnb
dec
stos
adc
(bad)
aam
mov
data16
push
test
cdq
leave
out
mov
push
out
push
add
(bad)
mov
test
cli
out
xchg
test
cmp
fisub
mov
xlat
add
or
cmps
retf
mul
push
stc
jbe
mov
sub
mov
mov
jno
imul
mov
cmp
ins
mov
or
aas
ret
into
or
je
mov
push
jne
sbb
aas
sbb
fild
push
movs
mov
cmp
push
or
ins
(bad)
enter
sbb
test
pop
mov
out
xchg
inc
outs
cmp
push
icebp
out
lods
outs
mov
outs
mov
mov
jns
adc
or
hlt
fsub
mov
adc
cbw
and
int3
sub
inc
push
jo
jae
jle
mov
ds
hlt
ret
jae
outs
dec
mov
popa
dec
movs
(bad)
hlt
popa
(bad)
push
lods
push
cmp
leave
inc
cmp
xchg
ret
jmp
out
loopne
bound
dec
int3
ret
xor
xchg
or
movs
dec
leave
dec
(bad)
std
xchg
mov
add
stos
dec
xchg
movs
pop
xor
mov
popa
(bad)
jbe
ficomp
fidivr
cmp
cmps
and
cwde
lods
adc
lds
push
dec
fwait
pop
dec
dec
int
mov
gs
dec
pop
shr
push
fsub
fst
mov
mov
aam
cld
fstp
fdiv
pop
stc
xchg
sub
test
gs
test
aam
ins
add
fsub
imul
imul
and
dec
or
mov
jb
mov
sbb
or
xchg
sub
movs
fisub
inc
push
gs
in
ss
movs
test
loop
shr
xchg
xchg
mov
jne
(bad)
int
leave
sbb
aad
inc
mov
lea
pushw
es
push
and
and
jb
add
mov
test
not
or
aas
stos
mov
repz
into
add
jns
inc
mov
movs
ss
xchg
cmps
das
fwait
or
cmp
push
test
ret
fmul
lea
imul
cmp
cmps
sub
push
mov
jne
neg
aad
lahf
dec
out
js
xchg
outs
xor
loopne
add
mov
push
push
movs
xchg
jo
dec
cmp
ja
call
inc
popf
add
sub
shl
jp
dec
jno
xor
jno
fdiv
and
mov
out
out
push
jge
aas
neg
out
xchg
push
fidiv
push
popf
ror
dec
iret
dec
loope
push
push
sub
popf
sar
mov
loope
add
aas
nop
outs
sbb
dec
loope
jnp
mov
dec
mov
jle
pop
sbb
lahf
push
repnz
movs
xchg
or
dec
shrd
push
fist
mov
ins
mov
push
xor
cs
xchg
push
stos
fcomp
aas
scas
cs
(bad)
push
jle
retf
jge
scas
test
jnp
(bad)
daa
sbb
fst
xchg
retf
mov
sbb
push
int
add
lods
or
mov
add
retf
das
dec
mov
lods
cmp
in
sub
inc
sbb
int3
in
mov
jbe
adc
sbb
iret
cmps
scas
movsx
add
and
cmp
adc
cwde
inc
hlt
mov
dec
ins
mov
fidivr
jae
lods
jo
fidiv
daa
fbstp
ret
into
mov
lods
cli
jp
lds
fwait
imul
push
xor
popf
in
add
aad
cld
push
mov
daa
sbb
xor
or
add
dec
iret
or
iret
jl
cmp
cld
adc
xchg
fisttp
xchg
sar
into
stos
(bad)
pusha
call
leave
cwde
mov
inc
test
adc
inc
fild
mov
in
cmc
pop
inc
mov
std
(bad)
lahf
movs
into
cmp
shl
movs
loope
xchg
xchg
repz
outs
xchg
jne
xchg
xchg
out
lahf
xor
iret
jnp
mov
scas
push
add
hlt
add
xchg
mov
cmps
cmp
out
mov
pop
into
jp
(bad)
loop
sti
mov
mov
into
cli
bound
sub
jle
lods
or
push
jae
scas
xor
adc
scas
movs
dec
push
imul
mov
mov
(bad)
(bad)
mov
and
sub
adc
xchg
cmp
cmp
push
fbstp
mov
push
mov
not
push
jns
fnstenv
retf
arpl
into
dec
xchg
inc
(bad)
sbb
push
xchg
test
(bad)
and
loopne
and
call
jb
pop
add
jp
xchg
inc
mov
fcmovbe
add
sbb
test
jae
sub
popf
xor
clc
xchg
hlt
mov
call
mov
fadd
punpckhbw
push
xor
adc
sub
push
pop
push
dec
cmp
lods
nop
hlt
in
popa
int
mov
popf
cmc
dec
dec
es
mov
add
sbb
mov
outs
xchg
fnstenv
add
sbb
enter
and
pushf
jg
cmc
daa
xchg
mov
lock
xchg
loop
add
push
bound
jmp
mov
sbb
sbb
push
(bad)
ret
pop
test
cmps
xchg
sub
mov
mov
jb
ret
add
jecxz
outs
and
dec
mov
in
xor
inc
lea
mov
inc
scas
sbb
addr16
pop
sub
loop
xor
add
sbb
(bad)
push
loopne
push
or
adc
sub
inc
mov
jle
(bad)
cdq
push
sub
fsubr
and
shl
push
nop
pop
xchg
adc
and
pop
cmps
push
fdiv
das
push
cdq
push
or
push
or
popf
xor
stos
sbb
push
jb
inc
cmp
out
inc
stc
neg
xchg
(bad)
xchg
dec
mov
dec
arpl
sbb
test
adc
cmp
fs
ins
pusha
out
fidivr
in
in
mov
jae
or
in
cdq
aas
pop
push
xchg
stos
inc
mov
call
inc
add
icebp
mov
popa
sbb
inc
pushw
mov
das
and
push
aaa
push
movs
mov
mov
mov
xlat
hlt
pop
xchg
mov
retf
inc
and
popf
inc
mov
xchg
xor
or
jns
lea
xchg
arpl
inc
movs
test
xchg
pushf
std
(bad)
pop
and
(bad)
stos
imul
or
xchg
push
cmps
inc
jmp
int3
rol
xchg
bound
fsub
add
ret
loope
inc
cld
aas
test
and
cdq
test
sbb
out
popa
mov
xor
inc
dec
(bad)
pop
and
out
cs
ss
lods
mov
pop
mov
pop
jmp
sbb
mov
pop
ins
outs
lock
pop
out
js
xchg
sar
push
cmps
xchg
fisttp
lods
loope
movs
push
stc
sahf
sbb
mov
and
cli
sar
dec
cmp
dec
xor
add
mov
cwde
add
out
add
jne
nop
cmp
scas
out
xor
xchg
xchg
mov
loopne
mov
outs
adc
sbb
(bad)
and
lods
inc
mov
sbb
sub
rol
mov
mov
ret
cmps
rcl
cmps
jns
fistp
imul
je
(bad)
cmp
cmps
add
and
jp
ins
call
sub
fwait
mov
cmp
pop
adc
lock
mov
jmp
lods
out
aad
and
adc
clc
inc
push
push
push
ins
scas
imul
pop
fwait
mov
add
pop
addr16
jno
jno
mov
pop
or
out
xchg
adc
jno
sbb
retf
stos
jl
xchg
fadd
xlat
mov
add
aaa
sbb
jecxz
pushf
xor
sub
jecxz
xchg
inc
ror
in
int3
into
add
push
fwait
out
out
jb
jmp
jle
jno
retf
retf
lods
inc
imul
push
sub
xchg
add
xor
push
inc
inc
push
retf
pop
mov
dec
mov
pop
test
jnp
mov
out
dec
pushf
clc
mov
sbb
mov
fwait
sbb
jge
inc
cmp
lods
pop
add
(bad)
retf
xchg
ss
cmc
jns
std
sahf
out
repnz
pushf
movs
popf
stos
sbb
aaa
repz
dec
scas
sub
dec
cmp
sub
aas
or
cs
leave
add
ins
fbstp
(bad)
mov
adc
fild
sbb
mov
pop
and
push
scas
(bad)
movs
imul
inc
stos
dec
mov
repz
fstp
aaa
clc
pop
loope
dec
jnp
nop
sbb
pop
outs
aas
adc
gs
repz
dec
xlat
(bad)
sti
push
clc
(bad)
mov
xchg
push
dec
jg
imul
repnz
mov
mov
ja
iret
lods
jge
aaa
arpl
sub
or
and
dec
xchg
jb
leave
aaa
es
scas
ret
out
fimul
pop
das
mov
aam
retf
jge
call
push
inc
xchg
mov
(bad)
sti
cwde
add
rcl
inc
push
cmc
xor
push
sub
bndstx
call
push
mov
xor
lock
neg
or
xor
fistp
fisub
stos
dec
daa
int3
aad
sar
jg
vpcmpeqw
sbb
mov
push
std
push
and
mov
sbb
lods
imul
sub
fwait
add
xchg
shrd
popf
xchg
shr
or
xor
jb
mov
stos
aad
add
mov
mov
add
jae
fisttp
(bad)
out
pusha
cli
or
xor
imul
mov
imul
mov
jno
jg
mov
lahf
sub
call
adc
xlat
jle
mov
(bad)
aad
or
pop
lods
jb
push
leave
js
and
jne
iret
sbb
lea
ret
dec
dec
test
add
pop
adc
sbb
cmp
or
out
inc
dec
int3
mov
xchg
inc
outs
xor
shl
push
repz
push
xchg
aaa
sbb
ret
daa
inc
cmps
xchg
stc
dec
xchg
in
pop
bound
(bad)
add
or
xchg
loop
sub
stos
jne
jns
mov
mov
mov
mov
mov
repz
sub
jae
(bad)
out
pop
jmp
(bad)
test
xor
pop
fcomi
movs
pushf
cdq
cmp
ins
fcmovu
pusha
sub
sbb
in
xchg
aam
sbb
mov
imul
cmps
mov
(bad)
or
in
rol
inc
fcom
js
ja
out
mov
xor
mov
jle
inc
fmul
pop
sub
test
cmp
(bad)
jno
mov
xchg
xor
retf
lods
test
test
lahf
pop
dec
mov
push
inc
(bad)
in
mov
xchg
add
cli
cmps
sahf
arpl
fdivr
and
xor
out
adc
fs
jo
ins
or
jne
aam
int
dec
std
jnp
mov
xchg
out
jbe
sub
inc
int3
inc
scas
or
dec
fs
push
adc
push
rcr
adc
dec
add
push
repnz
ret
xlat
enter
ins
aaa
mov
cwde
jnp
push
jge
lahf
clc
cmps
jle
cmp
inc
or
scas
mov
in
sub
stos
movs
and
lahf
xchg
sbb
xchg
popa
arpl
ins
jne
pop
aas
cmp
sub
sub
mov
les
pop
(bad)
lods
movs
(bad)
xchg
pop
and
loop
enter
ror
jns
fild
fwait
sbb
push
xor
jmp
cmp
adc
leave
inc
or
rcl
or
(bad)
rol
add
das
rol
xor
in
loop
fidiv
cmp
sub
test
dec
jne
pop
cmps
push
popf
fwait
adc
push
fimul
cdq
mov
jle
inc
in
jmp
retf
imul
outs
mov
dec
or
mov
dec
(bad)
scas
sub
inc
adc
(bad)
xor
cld
jnp
sbb
xor
iret
test
in
push
xor
adc
dec
inc
pop
inc
mov
repnz
and
cld
jo
cli
call
fidiv
(bad)
stc
aam
cmps
outs
pop
bnd
fisub
test
retf
push
fsubr
call
jae
dec
mov
sbb
jno
and
mov
les
fisub
add
clc
out
xchg
inc
ror
or
movs
aaa
out
shl
ret
shl
pop
dec
xchg
jne
js
es
sub
ins
push
jb
mov
jbe
arpl
in
xchg
mov
push
int
inc
into
cmp
arpl
enter
(bad)
jbe
loopne
sub
adc
and
retf
xchg
(bad)
neg
xchg
retf
pop
hlt
pop
inc
mov
sbb
sub
fwait
jmp
(bad)
lods
ror
and
out
mov
xor
enter
push
adc
inc
imul
xchg
ds
inc
jp
dec
hlt
sub
jne
add
es
dec
xchg
push
jae
pusha
push
push
fidivr
retf
push
inc
add
jecxz
adc
js
jcxz
fidiv
cmp
jno
lods
pop
xchg
ins
mov
sbb
adc
jns
or
xor
xchg
js
pop
test
mov
out
adc
repz
out
jo
adc
(bad)
ds
xchg
dec
sbb
ds
jo
out
jo
jmp
les
cmp
adc
xor
adc
aam
sbb
outs
push
xlat
popf
jae
imul
popa
jb
inc
(bad)
(bad)
jg
jmp
and
(bad)
lea
stos
fistp
retf
icebp
shl
mov
enter
and
jb
cmp
aam
sbb
stos
imul
test
sub
sbb
jge
shl
xchg
nop
test
dec
lods
and
retf
mov
push
pop
imul
in
sbb
dec
fwait
sbb
fiadd
mov
sub
mov
mov
scas
adc
mov
enter
add
xor
rcl
mov
inc
dec
ficom
scas
adc
mov
add
cmp
fwait
mov
mov
jo
pop
push
ja
in
dec
data16
leave
mov
mov
aam
fsubr
pushf
or
cmp
jae
dec
push
aam
add
(bad)
std
pop
in
push
lods
inc
xor
mov
pop
jle
push
shl
aam
lahf
adc
xchg
shr
ins
and
cmps
or
test
out
inc
rol
shl
cs
push
(bad)
sbb
pop
and
sub
cld
and
fwait
imul
sub
bound
jbe
dec
lahf
dec
(bad)
leave
(bad)
add
fs
xchg
retf
fidiv
gs
pop
mov
xchg
pop
shl
xchg
push
sub
jmp
inc
ret
nop
test
test
ins
inc
mov
sub
out
jo
pop
and
jbe
adc
add
jmp
or
push
or
adc
jno
push
inc
mov
mov
fcomp
out
shl
sbb
shl
dec
jg
inc
outs
mov
or
dec
mov
loop
and
pop
in
mov
enter
loope
mov
cmp
or
cmp
mov
or
push
jno
jmp
add
add
pushf
adc
lahf
loopne
xor
clc
hlt
fild
add
aam
(bad)
xchg
int3
cs
jmp
dec
pop
inc
pop
and
xchg
daa
ret
fst
sbb
or
xor
cmp
lea
fistp
xor
mov
dec
jbe
fbstp
inc
movs
retf
outs
(bad)
jno
inc
lahf
xchg
inc
or
push
mov
inc
mov
push
adc
clc
sbb
pop
jns
xor
push
pop
repnz
loop
xor
retf
retf
cmps
and
int3
stos
push
dec
pusha
sub
mov
jno
push
mov
outs
pushf
shl
movs
out
ret
adc
push
call
add
les
mov
and
cmps
repz
sbb
jae
jnp
setb
fwait
movs
ja
xchg
mov
cmp
jg
xlat
push
repz
mov
stc
sar
mov
add
xor
out
cmp
mov
pushf
lods
adc
das
aam
les
adc
call
mul
lods
mov
cwde
or
push
mov
mov
mov
xchg
out
mov
shr
or
in
pop
push
pop
fidiv
and
push
icebp
shl
(bad)
(bad)
pop
call
and
shl
mov
ret
jne
pop
pop
mov
lahf
push
outs
fistp
(bad)
movs
sbb
add
mov
daa
dec
pop
repnz
cmp
outs
dec
push
jg
popf
popa
jnp
lods
aaa
xchg
call
push
push
cs
push
into
retf
dec
aaa
adc
popa
sbb
dec
sub
ins
and
jbe
in
xor
xchg
in
mov
retf
gs
(bad)
dec
pusha
adc
repnz
int3
loopne
sub
dec
xlat
fucomip
xchg
div
repnz
pop
inc
imul
std
in
(bad)
inc
jbe
jmp
je
hlt
cs
pop
cli
sub
jle
cmc
rcr
cmps
or
test
test
adc
ins
fwait
pop
push
(bad)
retf
mov
cmp
cmps
mov
jb
test
push
call
mov
dec
scas
sti
fcmovne
fwait
or
mov
jo
test
jae
jo
rcl
inc
call
retf
inc
imul
je
sbb
or
sub
cmps
std
cld
pushf
iret
mov
cld
xchg
cdq
bound
lock
mov
mov
fdiv
gs
test
push
mov
sbb
je
jno
scas
jb
fadd
mov
fcomp
add
push
cld
dec
inc
pop
icebp
(bad)
or
sbb
mov
sub
inc
fnstcw
sub
sub
and
ins
test
inc
cmps
mov
sbb
ror
fmul
test
aad
movs
mov
retf
enter
mov
pop
enter
xchg
xchg
retf
out
call
jg
clc
push
les
fimul
imul
xor
dec
dec
pop
imul
lea
pushf
pcmpeqw
add
pop
inc
das
das
inc
popa
sbb
test
pop
pop
test
xlat
and
sar
xchg
add
inc
inc
mov
sbb
xor
aaa
mov
xor
sti
xor
mov
nop
push
push
call
xchg
dec
mov
cmp
mov
loopne
jg
mov
mov
pop
inc
inc
pop
out
scas
in
fsubr
or
(bad)
ins
add
dec
adc
ins
push
xchg
pusha
es
adc
pushaw
xchg
sub
xor
aaa
pop
into
xchg
dec
call
cmp
test
cmp
cwde
push
ins
nop
cmp
mov
jnp
mov
sub
cmp
push
sbb
pop
pop
jmp
outs
xchg
loopne
pop
sbb
sub
push
push
sbb
bound
jge
in
mov
daa
dec
retf
not
fimul
cmps
push
idiv
xchg
or
loope
test
jmp
std
ficomp
mov
add
idiv
outs
mov
cmp
loopne
pop
jecxz
fbld
cdq
jmp
mov
sub
sub
and
enter
aas
mov
cmp
jns
nop
cdq
add
leavew
icebp
push
dec
and
xchg
dec
add
rcl
sbb
add
and
mov
sub
data16
dec
mov
(bad)
ins
and
pop
jp
xchg
mov
sub
cld
and
call
loopne
icebp
or
or
test
jmp
jbe
mov
je
iret
stos
lahf
mov
ins
mov
ds
ins
idiv
xor
fisub
aam
mov
jno
pop
cs
xchg
xor
xchg
call
rcl
xor
in
cmp
dec
popf
adc
(bad)
jb
leave
cmc
les
fld
mov
iret
push
sbb
sbb
push
scas
lahf
(bad)
adc
xchg
popf
add
repnz
stos
div
inc
xor
pop
inc
mov
loopne
cmps
push
pop
cwde
xchg
inc
adc
cld
int
in
xchg
pop
pop
push
pop
push
rcr
xchg
test
dec
aas
push
mov
jmp
out
aam
retf
mov
out
div
push
and
ret
push
mov
(bad)
sti
aad
arpl
retf
and
inc
push
out
in
ret
push
fst
pop
jge
sbb
sbb
cmp
sub
inc
dec
jno
mov
ins
mov
ret
xchg
adc
out
leave
mov
call
retf
sub
iret
punpcklwd
push
jb
xchg
test
rcl
dec
call
xchg
int3
nop
shl
jmp
jge
xor
xchg
mov
(bad)
pusha
and
push
xor
cli
xchg
test
dec
mov
loopne
add
mov
popf
inc
test
loopne
jecxz
imul
ret
ret
test
cmp
inc
std
stos
and
sbb
cmc
lea
das
inc
pop
mov
dec
outs
ret
mov
popf
ss
cmp
mov
in
mov
pop
aam
rcl
scas
jbe
or
add
xchg
cmc
int
retf
xor
push
(bad)
push
or
test
xor
je
call
add
jb
cmp
fdiv
movs
mov
jnp
loopne
push
and
adc
push
add
xlat
push
mov
lods
push
sbb
mov
push
and
inc
(bad)
dec
dec
pusha
lods
lods
mov
sar
sbb
sub
mov
les
mov
shr
push
pop
mov
and
mov
out
data16
adc
fadd
jns
mov
pop
pop
push
cli
loopne
fild
stos
sub
xchg
adc
je
fwait
sub
cmp
pop
mul
(bad)
sbb
adc
or
add
dec
outs
repnz
jle
xor
jp
push
xchg
sub
cmp
rcr
(bad)
call
jnp
std
mov
vorps
or
cmovb
rcl
jle
or
iret
mov
ror
imul
inc
pop
call
inc
out
push
or
jbe
jo
leave
data16
in
cmp
loope
test
gs
mov
xchg
std
fwait
jb
adc
ss
push
mov
mov
(bad)
call
dec
cmps
sub
loope
clc
je
ja
inc
popf
xchg
push
cld
cs
test
daa
in
fld
xor
mov
push
cmp
mov
push
das
dec
repnz
jl
sti
movaps
stc
jp
pushf
sbb
push
pop
test
stos
sbb
jl
(bad)
jecxz
lods
pop
mov
mov
add
es
xchg
js
mov
mov
inc
stos
jo
mov
cwde
and
lods
in
imul
adc
leave
mov
stos
pushf
mov
call
pop
loope
pand
xor
adc
jg
lods
imul
in
or
sbb
xor
int
mov
jl
sbb
jp
pop
pop
ret
push
push
dec
movs
cmp
mov
pusha
ja
xchg
test
inc
sub
mov
std
clc
cmp
jp
pop
std
call
ins
mov
cld
movs
jne
and
out
ret
stc
xlat
cmp
in
jbe
scas
or
mov
jmp
mov
retf
xchg
inc
sub
jmp
dec
xor
xor
hlt
jmp
xlat
cs
cdq
movs
xchg
or
into
outs
(bad)
ror
fdivr
test
pusha
cmp
jg
cwde
mov
loopne
sbb
das
stos
cmp
cmp
in
inc
cld
add
xlat
int3
cld
mov
jg
cmc
sub
mov
mov
daa
push
xchg
popa
not
sub
das
xor
retf
pop
popa
test
pop
mov
aaa
and
lods
fdivr
sbb
dec
cld
dec
cmp
aas
imul
shr
sub
mov
fcomp
sbb
push
dec
pop
shl
jmp
enter
xchg
add
leave
jae
or
fisttp
std
jae
mov
dec
mov
je
mov
idiv
push
mov
sti
call
pop
fld
jns
fsubr
jge
jns
mov
xor
call
push
ins
repz
pop
mov
ds
xchg
int
add
or
cmp
mov
jp
test
jle
cmp
or
push
xor
(bad)
jge
pop
lea
jnp
arpl
movs
lods
aad
fsubr
fimul
aas
cmps
in
and
repnz
cmp
test
call
or
ins
jb
ret
xor
out
(bad)
loop
pop
pop
outs
imul
jne
dec
out
and
arpl
xchg
stc
cmc
push
int
scas
sub
jle
mov
push
xor
push
jae
push
and
cwde
inc
adc
mov
sahf
add
add
jge
xchg
xor
push
or
sbb
lock
xlat
jne
popa
fnsave
rcr
pop
test
cdq
and
cmps
sar
xchg
shl
mov
and
mov
or
mov
out
add
inc
inc
jp
(bad)
mov
mov
or
sub
jnp
loope
sti
test
push
loopne
aam
push
rcr
fnstsw
rcl
jmp
lds
ds
sbb
call
lea
push
add
sub
outs
add
sub
js
push
jb
pop
pop
movs
cld
pop
enter
push
stc
cwde
out
mov
push
call
adc
or
rcr
(bad)
scas
call
push
mov
leave
mov
push
(bad)
and
mov
loope
test
push
push
mov
mov
arpl
pushf
cmps
test
rol
(bad)
clc
and
adc
fisttp
sub
xchg
cmc
ret
xlat
push
cmp
xchg
cmp
scas
mov
sbb
lods
inc
les
xchg
inc
cmp
js
test
mov
jp
iret
or
leave
or
jbe
pop
push
jg
rcl
sbb
xchg
imul
js
repnz
mov
in
pop
inc
rol
cli
mov
sub
dec
loop
jg
or
cmps
jno
mul
mov
addr16
lods
leave
add
mov
cmp
ins
mov
sbb
test
jecxz
ja
push
pop
cs
push
xor
pushf
dec
inc
pop
push
mov
pop
(bad)
icebp
cmps
iret
repnz
mov
enter
iret
mov
out
std
out
xchg
ds
adc
push
ret
ja
or
loopne
dec
and
call
ror
data16
pop
mov
in
retf
mov
loope
mov
mov
add
(bad)
sub
lahf
gs
adc
jle
mov
fisttp
inc
xor
xchg
test
adc
pushf
mov
jbe
cwde
jne
cld
je
stos
lea
xor
(bad)
cmp
dec
pop
inc
adc
das
mov
in
into
jl
rcr
fistp
sub
enter
lahf
popa
std
inc
pop
adc
test
ja
push
arpl
and
sbb
and
dec
jns
and
fild
dec
or
mov
cs
aas
out
jmp
(bad)
neg
es
xchg
jns
pop
fisttp
fcmovu
rcr
neg
mov
sub
arpl
sbb
jne
mov
push
aaa
loopne
arpl
jecxz
arpl
sbb
(bad)
jmp
clc
repnz
cwde
ret
xchg
js
loopne
popf
dec
push
rcr
in
sbb
push
mov
or
call
(bad)
out
loopne
fwait
ins
sbb
adc
jbe
test
(bad)
(bad)
call
(bad)
pop
or
cmp
call
jnp
push
out
dec
popa
mov
jnp
mov
cdq
sub
shl
scas
and
(bad)
sti
or
cmc
data16
mov
mov
fs
(bad)
in
outs
cmovg
adc
mov
xchg
dec
jp
push
sub
dec
clc
outs
imul
(bad)
dec
and
mov
(bad)
popf
cmp
xor
outs
pop
ja
leave
xor
push
xchg
outs
shr
add
and
fidiv
and
jg
outs
iret
xchg
test
dec
fisttp
and
or
lock
lds
scas
scas
neg
push
sub
aad
xchg
aas
loope
repnz
ins
adc
int
loop
jl
xchg
int3
popa
popf
and
mov
cwde
xor
push
adc
cmp
pop
jns
lea
sbb
cli
shr
inc
lds
pop
xchg
pop
ds
adc
and
mov
add
add
out
test
daa
xchg
sbb
(bad)
cld
adc
push
fcomp
ja
fadd
add
add
push
xchg
jle
jge
and
and
xor
pusha
push
fcomp
jle
xchg
(bad)
icebp
add
dec
mov
iret
inc
sbb
pushf
(bad)
xor
pop
out
dec
mov
add
mov
lock
aad
fistp
and
fadd
iret
xchg
call
std
xor
cmps
push
es
ficom
adc
rol
adc
mov
and
pop
enter
push
fdivr
jmp
cdq
fisttp
fucom
jmp
mov
xor
inc
pop
std
mov
(bad)
sub
fidiv
inc
or
mov
ja
cmps
arpl
fs
xchg
pop
xor
loopne
mov
push
in
jae
push
sub
or
call
shl
push
ror
push
movs
or
pop
leave
pop
sbb
and
push
(bad)
fstp
jge
xchg
lock
sbb
xchg
sub
mov
add
xlat
mov
xchg
inc
dec
or
lods
repnz
mov
push
(bad)
fcmovnu
jge
xor
int
dec
push
stos
mov
enter
imul
xchg
mov
adc
cmps
pop
es
xchg
frstor
mov
stos
push
push
cmp
pop
ins
rcr
push
sbb
pop
popf
xchg
ds
inc
or
inc
jnp
les
pop
nop
(bad)
pop
ins
movs
add
ja
or
fadd
fnstenv
(bad)
jmp
xor
int3
pop
and
sbb
xchg
in
sbb
popa
push
icebp
and
push
sbb
inc
xchg
aam
enter
cmp
lods
push
scas
pop
jb
mov
pop
cmp
repz
push
call
cdq
pop
jbe
in
test
(bad)
mov
cmp
out
dec
adc
cmps
push
pcmpeqb
stos
and
mov
inc
pop
into
imul
ins
mov
icebp
mov
fs
ret
jmp
dec
fidivr
ds
mov
lods
fld
sbb
not
adc
(bad)
dec
jnp
dec
in
mov
arpl
inc
inc
xchg
das
mov
push
pop
sub
push
dec
clc
cwde
sbb
not
call
push
mov
in
fld
imul
leave
scas
ins
mov
js
test
pop
sub
repnz
das
mov
pop
cmc
fdivr
nop
xor
loopne
or
in
sub
jbe
daa
loopne
daa
jmp
pop
leave
mov
xchg
retf
fwait
or
or
dec
sbb
clc
(bad)
in
(bad)
xchg
or
mov
push
inc
add
mov
(bad)
sub
leave
mov
and
daa
sbb
pop
daa
scas
inc
rol
out
add
sbb
in
loop
inc
(bad)
pusha
out
mov
sub
adc
repnz
out
sbb
push
push
or
sub
popf
cs
aam
js
daa
jp
pop
lahf
mov
dec
sbb
jae
sub
and
lds
retf
leave
pop
dec
add
jge
dec
jg
push
ficom
fadd
pushaw
push
test
popf
int
les
dec
(bad)
stc
(bad)
sbb
(bad)
sti
cwd
test
xor
(bad)
es
push
inc
mov
int3
jbe
popa
clc
push
or
imul
stos
cmp
lock
lock
(bad)
in
jo
(bad)
fisub
lahf
jbe
(bad)
in
xor
call
ins
xor
mov
fcmovu
bound
imul
arpl
mov
icebp
push
xchg
cmps
ja
lahf
(bad)
mov
xchg
and
and
jmp
xor
sbb
push
inc
addr16
jle
sbb
loop
ja
sahf
inc
dec
or
xrelease
sub
add
sub
sbb
repz
jl
pop
adc
dec
jmp
xchg
popa
jmp
ret
imul
mov
(bad)
jno
xlat
adc
mov
xor
cmp
xor
cs
xchg
inc
adc
lds
bound
les
cmps
jmp
and
mov
pop
(bad)
out
push
dec
lock
aam
jg
sub
push
jbe
mov
cmp
xor
int
sti
mov
test
out
ret
movs
jmp
jecxz
xor
mov
sbb
jmp
call
push
mov
mov
sbb
mov
pop
sbb
mov
je
fild
and
(bad)
std
loop
in
lock
inc
pop
sub
pop
xor
jbe
push
stc
inc
pushf
ja
(bad)
enter
cmp
repnz
or
test
xor
fisttp
shr
loop
inc
add
gs
inc
test
fadd
out
inc
retf
cmps
loop
ja
in
mov
sub
push
pop
and
add
push
ja
les
xchg
aad
sbb
mov
cmp
dec
aad
adc
lahf
xor
test
xchg
and
cmp
loop
dec
int3
dec
mov
aas
jmp
xor
ror
jnp
dec
push
movs
cld
shl
outs
icebp
stos
retf
js
leave
cmps
movs
jmp
rcl
or
cmps
dec
ds
cdq
lods
pop
cmp
jmp
push
inc
pop
mov
dec
in
cli
mov
mov
and
stos
xor
xlat
outs
sar
fimul
pop
mov
mov
(bad)
fisub
mov
adc
inc
cmps
dec
inc
pop
jmp
into
sbb
mov
icebp
into
push
jmp
in
in
push
pop
ja
sub
mov
jl
mov
fs
add
ficomp
mov
inc
cdq
hlt
jmp
mov
imul
mov
test
aad
xlat
and
lds
push
pop
stos
sub
cmps
ja
(bad)
pop
les
dec
or
out
in
adc
out
in
inc
in
es
cmp
cmc
imul
stos
xchg
fcom
enter
pop
jo
(bad)
xchg
mov
xor
mov
lea
dec
and
mov
ret
push
outs
out
push
jns
mov
mov
push
add
jo
into
and
imul
dec
imul
mov
jne
pop
loop
xchg
xor
bound
jmp
push
rcr
xchg
retf
vprotw
dec
push
fdiv
(bad)
sti
mov
pop
jno
lods
mov
xchg
pop
pop
ror
ss
cmp
inc
pop
arpl
fmul
pusha
mov
(bad)
mov
cmp
push
cdq
mov
cmps
imul
scas
mov
imul
(bad)
ja
lock
push
xchg
ins
jp
dec
or
outs
test
adc
in
retf
cmc
test
pop
xchg
xor
scas
xchg
loopne
pop
pop
add
mov
aam
jo
adc
adc
scas
pop
sahf
push
mov
push
pushf
cmps
xor
xor
xlat
imul
movs
rol
cmp
push
sbb
pop
(bad)
cli
mov
scas
push
int
push
xchg
out
mov
add
xor
aaa
dec
mov
sub
xor
test
popf
push
std
push
cmps
mov
push
xchg
xor
fs
(bad)
pop
cmp
stos
repz
daa
jmp
in
sub
sub
into
aaa
mov
jle
call
adc
mov
mov
scas
mov
inc
retf
cmp
xchg
push
out
pop
xchg
ror
sbb
gs
mov
pop
and
in
adc
or
and
mov
sahf
(bad)
mov
xchg
ds
mov
add
jecxz
js
test
inc
retf
jg
or
scas
sub
mov
ds
sub
cwde
lods
or
jae
xor
out
mov
arpl
mov
(bad)
dec
mov
lock
cmps
imul
out
jmp
icebp
ret
scas
pop
xor
sub
pop
fs
push
test
cmp
xchg
jb
out
mov
scas
jmp
ins
(bad)
and
jb
jnp
jno
(bad)
xchg
adc
cmp
cmp
sbb
fs
aaa
pop
push
(bad)
arpl
fmul
cmp
xor
nop
mov
mov
pop
xor
and
into
fsubr
adc
xchg
pop
outs
mov
(bad)
xor
jns
fsubp
jge
xchg
loopne
jp
out
jo
sub
fidivr
arpl
push
mov
xor
inc
test
jg
mov
push
and
out
mov
xor
mov
loope
add
inc
ds
arpl
imul
pop
adc
pop
cmp
lods
mov
and
div
icebp
sahf
mov
push
ss
pop
or
cwde
sub
cli
jno
and
call
and
mov
fwait
nop
fldcw
dec
jnp
cli
inc
pop
inc
stos
push
xchg
jbe
in
movs
movs
xchg
dec
push
dec
les
add
pusha
bound
xchg
ds
inc
imul
cmp
xchg
pop
push
popa
jbe
nop
push
sahf
jg
or
ds
movs
mov
push
push
addr16
movs
sar
das
fild
enter
sub
xchg
test
call
das
pop
mov
movs
test
(bad)
jnp
mov
or
sub
aaa
mov
xchg
test
call
aam
(bad)
(bad)
push
daa
int3
popf
pop
mov
hlt
inc
xchg
and
mov
jo
jo
xor
jmp
pop
mov
xchg
test
aam
dec
jmp
and
or
and
mov
and
repz
sub
mov
cmps
out
jbe
add
sahf
popf
push
jns
fs
lock
mov
cli
shl
jns
cmps
shr
cli
push
lfs
cmp
clc
xchg
rcr
lock
mov
xor
imul
loopne
ss
xchg
or
mov
outs
and
mov
ror
inc
jmp
retf
or
imul
sahf
jb
outs
xor
icebp
xlat
ret
xor
mov
outs
dec
xor
idiv
xchg
mov
sbb
movs
dec
xchg
ins
fwait
mov
xor
mov
sbb
icebp
out
lock
addps
mov
(bad)
jae
lods
inc
mov
jle
fwait
inc
test
add
ins
test
outs
clc
jp
cwde
jbe
xor
outs
dec
sub
cmp
test
add
sbb
sub
ss
ret
ror
test
aas
and
add
fnstenv
fbstp
fiadd
ss
add
and
add
call
lock
rol
inc
and
dec
sahf
cmp
jle
test
sub
push
repnz
mov
mov
sbb
data16
test
xor
leave
sub
outs
lods
popf
lock
pusha
adc
pop
add
mov
lock
xchg
call
jl
mov
retf
(bad)
enter
pop
lds
pop
out
jae
pop
jbe
loop
pop
ins
push
jmp
sbb
jne
push
jg
cld
xchg
mov
retf
rcl
ss
retf
les
data16
out
adc
fs
jnp
call
push
pop
pop
sbb
call
adc
popa
sub
add
ror
rol
pop
cmc
mov
push
sbb
daa
cwde
rep
cli
or
mov
shl
jmp
lock
rcr
xor
jns
lods
inc
dec
xchg
inc
mov
mov
adc
cmp
inc
adc
js
clc
cmp
cmp
mov
loopne
jne
jo
retf
rol
iret
mov
jmp
cmp
inc
and
fld
cmp
lods
popa
sub
push
pop
data16
push
cwde
xchg
fwait
cmp
and
jp
pop
in
(bad)
jae
push
(bad)
cmp
mov
cmps
bound
mov
loopne
fdivrp
xor
xchg
shr
test
fst
sti
or
call
sar
sbb
jg
retf
mov
lahf
ja
pop
inc
imul
loop
jmp
mov
xor
cmc
mov
mov
mov
dec
mov
cs
out
sar
int
pop
aam
(bad)
dec
(bad)
into
arpl
mul
push
cmp
repnz
xchg
sbb
dec
in
sar
outs
mov
mov
xor
sub
ds
ins
jl
outs
ins
div
nop
xor
pop
xchg
xor
outs
pop
(bad)
jb
mov
xor
data16
stc
jg
sub
adc
pop
hlt
hlt
mov
jl
pop
adc
sbb
pop
cs
adc
mov
call
outs
mov
nop
inc
mov
(bad)
pop
jmp
or
lods
int3
(bad)
jmp
out
cld
cwde
xor
sub
imul
pop
push
nop
inc
or
or
fisub
imul
std
cmp
imul
jmp
psllw
inc
aam
and
test
jnp
mov
jae
aaa
sbb
push
jge
push
stos
lock
scas
in
jle
xor
(bad)
push
pextrw
dec
dec
fadd
inc
push
(bad)
in
mov
std
dec
mov
mov
jmp
cmp
dec
fidivr
ins
or
cmp
cmc
scas
dec
dec
imul
iret
ret
xor
rcr
ss
sbb
bound
xchg
push
call
icebp
cs
add
repz
or
scas
adc
adc
aam
ret
xchg
lods
loop
xchg
push
int3
or
sbb
mov
out
bound
mov
loope
je
cs
(bad)
ins
std
lods
mov
cld
jb
xchg
mov
dec
mov
ins
mov
test
cmp
clc
fsub
ror
test
(bad)
sbb
pop
push
jg
push
lea
push
(bad)
(bad)
jbe
outs
int3
sub
xchg
sub
dec
icebp
sub
rcr
jae
sti
movs
scas
cmp
push
sub
and
add
mov
sbb
clc
ret
imul
add
rcl
add
inc
(bad)
jg
push
sub
repz
inc
sbb
test
mov
inc
sar
mov
or
cs
cmp
push
cmp
(bad)
(bad)
dec
lock
xchg
test
cwde
jbe
shl
scas
xlat
out
push
push
shl
adc
pop
aad
mov
test
pop
cli
psubsw
gs
mov
or
repz
ret
adc
or
fcmovbe
movs
sub
jmp
sbb
sbb
das
pop
addr16
inc
or
mov
pusha
fcmovbe
jmp
enter
and
push
neg
imul
and
retf
push
jg
xchg
dec
mov
pushf
mov
arpl
out
jne
push
mov
out
cmps
out
loope
cs
dec
xchg
mov
jb
push
jle
cmp
nop
xor
daa
jmp
int3
pusha
(bad)
sub
inc
into
add
frstor
hlt
stos
movs
js
jbe
movs
mov
jo
pop
xchg
jnp
cmc
in
dec
and
lods
fs
outs
dec
cmp
xchg
repz
enter
adc
sub
stc
push
mov
pushf
lock
data16
mov
mov
push
aam
lods
xor
inc
inc
xor
or
xchg
mov
pop
sti
test
and
mov
mov
xor
inc
loopne
cmp
cmp
test
and
xchg
das
and
mov
lahf
push
arpl
cmp
pop
xchg
and
in
enter
push
mov
shr
fs
or
mov
xsha1
cmps
dec
xor
add
mov
les
ss
dec
mov
(bad)
cmp
bnd
fadd
cmc
mov
aad
stos
popa
cli
push
jle
lock
pop
in
sbb
bound
loope
(bad)
repz
ss
retf
data16
or
cmp
xor
adc
inc
cmp
mov
lods
les
xchg
or
push
push
cmp
mov
ins
jg
mov
pushf
push
lahf
adc
push
or
sti
pop
and
mov
es
ror
cmp
lahf
mov
pop
sar
cmc
pop
pop
jmp
iret
stos
gs
imul
cmp
mov
xlat
ret
xor
shl
(bad)
dec
fild
dec
out
fsub
loope
cs
mov
ror
push
(bad)
jo
or
in
mov
mov
mov
scas
jle
dec
daa
mov
stos
sbb
cmp
in
fst
cld
or
add
mov
dec
(bad)
stc
pushf
scas
dec
call
scas
or
xchg
xor
scas
cmps
lock
in
sbb
mov
jg
xchg
inc
aaa
arpl
int
fild
mov
scas
movs
je
dec
inc
and
fist
scas
ins
imul
mov
sbb
sub
frstor
xchg
xor
cmp
adc
pop
cmp
sbb
out
push
cmp
adc
gs
cmp
pop
cmps
mov
jo
jae
mov
xor
jae
mov
or
cs
cmc
xchg
or
xor
push
dec
cdq
ja
cmp
mov
addr16
test
scas
jmp
(bad)
aad
and
div
dec
sbb
cmp
jne
leave
sub
sbb
sbb
fst
cs
mov
jge
loopne
cld
xor
sbb
pop
xor
xchg
xor
mov
div
push
loop
leave
fstp
fnsave
mov
jno
mov
lock
adc
xor
cmp
add
xchg
lea
mov
and
in
int3
mov
nop
icebp
into
push
or
jle
sbb
scas
dec
(bad)
mov
mov
sbb
mov
dec
sar
cwde
xchg
shr
push
test
mov
mov
scas
add
bound
xor
pop
cmp
je
mov
push
mov
(bad)
cmp
sbb
aad
xchg
xchg
xchg
pop
out
mov
jnp
jb
add
les
pusha
(bad)
hlt
out
add
mov
lods
jge
adc
pop
fdivr
pop
nop
in
push
jne
aad
and
aas
sub
test
fimul
sub
test
sbb
add
jp
aas
fisub
xchg
push
out
cmp
sbb
lock
shl
adc
retf
dec
ret
call
sbb
adc
cmp
mov
sub
sub
dec
imul
xchg
call
scas
pop
test
inc
sub
clc
or
push
call
cmp
lahf
adc
repnz
mov
sub
es
lds
es
inc
aaa
push
sbb
fs
stos
scas
addr16
into
outs
aaa
mov
xchg
and
cmp
ds
pop
test
xor
adc
xchg
in
adc
(bad)
pop
cmps
cmps
push
add
xchg
xchg
push
fdiv
and
or
mov
mov
fcomp
inc
jg
xchg
fiadd
mov
push
jmp
xor
stos
cwde
push
leave
xchg
sub
(bad)
xor
jmp
sti
xchg
stos
lahf
mov
out
jbe
fwait
ror
push
xlat
loope
jg
cmp
aam
push
sub
iret
push
jg
pop
sub
call
aaa
inc
jmp
xchg
pop
aaa
cdq
pop
mov
sub
cmp
sub
into
push
fmul
fwait
mov
inc
jnp
pushf
das
sahf
mov
sbb
outs
pushf
(bad)
cld
sbb
adc
popf
push
adc
or
idiv
and
ss
add
aaa
ret
inc
loope
idiv
cmp
mov
lock
adc
add
les
pop
jno
(bad)
rol
adc
push
rcl
xchg
add
mov
sub
push
in
rcr
fcmovnb
xchg
(bad)
adc
fidivr
jae
cmp
std
adc
retf
popf
mov
in
cmp
dec
cdq
push
xchg
add
push
pusha
add
out
popf
and
(bad)
fild
dec
popf
mov
mov
add
data16
push
mov
sub
mul
retf
and
pop
fstp
mov
lods
das
test
out
adc
cmp
pop
jae
cld
test
inc
bnd
add
sub
scas
mov
test
and
xchg
mov
fs
fstp
xchg
or
mov
mov
pop
mov
cmp
push
or
add
and
and
mov
cmp
pop
cmp
xor
fucomp
ret
sub
xchg
xor
add
jp
pusha
fucomp
ret
mov
fs
retf
add
leave
call
xchg
mov
and
mov
test
sub
fadd
push
push
scas
add
or
inc
cmp
adc
fldcw
popa
jle
shr
pop
ret
push
fist
jnp
fadd
cli
mov
mov
ret
jp
call
js
add
cmp
pop
mov
dec
mov
pop
stc
add
aaa
(bad)
xchg
and
retf
cmp
jg
xor
adc
push
adc
pop
mov
paddusb
pop
cld
mov
shr
mov
bound
in
and
or
ins
ins
xchg
fnstsw
rol
or
xchg
or
jg
outs
jae
mov
(bad)
sub
out
sbb
pushf
mov
push
cmps
es
or
in
or
push
cwde
rcl
jp
cmp
ins
dec
pop
dec
push
lock
mov
sub
adc
lods
push
shr
inc
in
or
sbb
in
retf
idiv
push
out
(bad)
jo
sub
int3
cmp
jp
push
addr16
xchg
ss
cmp
and
fsubr
mov
add
repz
call
pop
(bad)
gs
ror
fsub
xlat
fdivr
pushf
push
mov
and
rcl
cmp
rol
gs
xor
dec
rol
xchg
aaa
pop
movs
test
into
push
push
fidivr
push
or
pushf
fsub
mov
popa
mov
sti
sbb
cmp
and
or
xchg
jno
and
sbb
iret
jp
pop
push
jno
xor
jno
loop
push
(bad)
test
pop
aad
and
fild
rcl
mov
mov
out
ficom
mov
xor
imul
mov
pop
cmp
push
xchg
and
jmp
popa
aam
outs
(bad)
lea
cmp
out
pop
mov
fld
shr
mov
and
pusha
mov
cmc
gs
fisub
cmp
aam
xchg
pop
movs
xor
add
fwait
jp
fbstp
jl
retf
mov
xor
dec
ficom
lea
cmp
imul
clc
lods
xchg
or
push
dec
pop
cwde
ret
sti
aaa
leave
xor
loopne
repz
jle
adc
jno
cmp
gs
mov
pushf
cmp
inc
mov
je
retf
out
pop
cld
pop
mov
test
retf
push
inc
(bad)
pop
adc
jmp
rcl
fld
jecxz
push
or
imul
int3
mov
dec
not
cmc
jge
aaa
inc
jle
int
mov
mov
and
mov
sub
loope
loop
enter
pop
push
xor
add
inc
and
sbb
inc
jmp
rcl
inc
popa
adc
or
mov
inc
lds
dec
push
sbb
add
dec
das
test
sbb
cmp
sub
mov
jge
jp
jnp
add
in
add
call
dec
test
mov
in
(bad)
imul
xchg
(bad)
jmp
test
repz
xchg
ror
cld
aad
push
jge
push
pop
and
fdivr
xchg
in
test
xor
daa
sub
dec
dec
inc
ret
add
pop
pop
inc
xor
add
push
sub
jmp
(bad)
popf
and
out
mov
(bad)
pop
rcr
std
mov
ret
sub
test
ins
ins
lea
cmp
xchg
xchg
je
in
fs
jo
std
adc
xor
(bad)
cli
push
retf
cmova
movs
dec
loop
hlt
jnp
mov
aas
cs
icebp
or
scas
cdq
push
xchg
loope
stc
stos
fstp
xchg
pop
icebp
inc
push
xor
inc
jns
loope
pop
push
dec
inc
adc
mov
stc
cli
lods
xor
clc
mov
mov
ds
and
test
push
inc
push
jecxz
mov
movs
pop
fwait
add
hlt
push
test
jno
mov
pop
leave
rcr
sti
cmp
scas
stos
jp
jns
xchg
and
ret
int
test
adc
arpl
sahf
push
les
pop
add
pop
mov
popa
or
mov
loope
ficom
jne
inc
sub
jecxz
bound
mov
inc
pusha
test
and
aam
mov
(bad)
js
dec
cmp
stc
adc
lods
cmp
push
(bad)
mov
shl
mov
and
inc
dec
js
cmp
sti
ds
adc
es
push
sbb
dec
push
sar
mov
push
out
stos
mov
sub
outs
ror
(bad)
fistp
inc
imul
xor
jl
pop
pusha
(bad)
push
inc
jae
test
mov
push
stc
addr16
imul
add
dec
fwait
adc
daa
and
xlat
add
loope
or
ret
mov
loope
jno
cmp
xor
mov
pop
or
and
repnz
sub
or
cmps
xor
jle
inc
ror
(bad)
or
sub
cmp
adc
pop
dec
cli
je
adc
adc
push
xchg
pop
jae
test
or
mov
adc
stos
xchg
and
or
xor
xchg
mov
ins
aam
jne
lock
fwait
icebp
and
in
cmp
add
sbb
jge
push
nop
jae
pop
cmp
shl
push
inc
push
or
fcomp
shr
scas
inc
xor
sbb
mov
and
or
or
stos
mov
xor
mov
inc
mov
mov
sbb
test
js
loopne
or
mov
aam
sti
and
sub
jecxz
sbb
outs
cmp
sbb
enter
gs
mov
jg
xor
or
in
cmps
sbb
cmp
aas
adc
sbb
imul
ja
sub
mov
mov
jmp
jbe
call
out
jl
ins
pop
mov
gs
and
and
adc
clc
shl
stos
fbld
and
inc
(bad)
(bad)
push
push
inc
sub
out
int3
cmp
fsubr
xchg
pop
jge
cwde
xor
repz
fld
outs
fdivr
jns
mov
xchg
xchg
mov
mov
arpl
pushf
xlat
pop
cmps
jns
scas
cmp
aaa
inc
or
clc
out
lds
in
cmps
adc
outs
(bad)
add
mov
daa
shl
adc
jb
shufps
xor
cmp
repz
(bad)
or
ficom
or
xchg
sub
cmp
(bad)
repz
xor
mov
push
mov
std
dec
ins
cmp
mov
inc
fmul
mov
xchg
bound
fsub
xchg
pop
mov
xor
cwde
sbb
cmp
jbe
dec
adc
test
rcl
mov
jle
jg
rcr
pop
jmp
xchg
sbb
movs
or
push
sub
icebp
push
call
add
mov
adc
inc
and
daa
xchg
sub
or
mov
lods
mov
fs
dec
and
jmp
gs
jne
jae
stos
push
cwde
adc
pop
scas
dec
dec
sahf
in
aad
fsubr
scas
or
add
in
je
rol
and
jmp
inc
jbe
cdq
aad
repnz
(bad)
xchg
dec
shr
sahf
addr16
movs
pop
stc
pop
inc
ins
xor
mov
hlt
push
adc
jns
sbb
xor
fucomp
ficom
les
sub
adc
cs
mov
push
iret
out
xchg
(bad)
mov
sbb
lods
popa
push
jbe
mov
xchg
mov
loop
pop
in
stos
sbb
dec
xchg
or
or
jmp
fsub
cmp
or
add
addr16
push
push
push
sbb
jne
pop
mov
push
add
cs
arpl
(bad)
push
mov
xor
jl
jmp
into
mov
cmp
xor
ja
fiadd
adc
retf
pop
push
repz
xor
ins
int3
add
push
add
and
and
push
push
dec
add
sub
xchg
imul
dec
std
int
xchg
push
push
ja
dec
add
in
xchg
das
dec
cmp
sti
mov
(bad)
push
enter
inc
sub
cdq
and
cmp
dec
add
and
ss
mov
test
dec
ins
ret
(bad)
jg
retf
mov
xchg
sub
jae
sbb
adc
xor
jne
sub
mov
in
fwait
cmp
sub
jae
stc
adc
fisubr
cdq
popa
sbb
movs
(bad)
div
xchg
xor
cmp
sub
inc
in
in
xor
shl
cs
ins
or
dec
sub
popa
sub
sbb
mov
inc
outs
mov
push
fcomp
push
or
inc
push
push
in
addr16
pop
push
mov
or
cmc
pushf
mov
pop
(bad)
out
pop
add
movs
dec
pop
shr
inc
bound
cs
je
mov
gs
sub
xchg
xchg
and
xor
cs
jne
inc
es
mov
test
bound
pop
ds
cmp
inc
or
imul
in
ins
aas
adc
test
cs
and
stc
jg
aad
inc
mov
xchg
test
(bad)
sbb
int3
test
sbb
lahf
rol
xrelease
inc
jl
xchg
xchg
or
clc
xchg
icebp
scas
loopne
or
inc
xchg
pop
popf
test
push
out
sbb
pop
push
in
test
pop
mov
scas
(bad)
pop
xor
mov
loope
pop
mov
jmp
and
movs
test
mov
jp
inc
xchg
xor
push
scas
add
mov
out
(bad)
ds
(bad)
shr
xor
scas
es
xchg
or
push
(bad)
test
mov
or
inc
dec
and
das
or
xchg
jle
add
(bad)
outs
jl
retf
mov
xor
fsubrp
lods
es
mov
xor
push
add
lds
das
not
xchg
dec
jae
and
int
daa
push
stos
pop
out
(bad)
out
outs
push
and
push
push
xchg
add
mov
and
aas
call
call
ror
adc
sub
fwait
mov
adc
and
add
sbb
xor
sar
scas
mov
scas
ret
sbb
jecxz
test
aaa
ja
inc
(bad)
xor
adc
test
sbb
dec
inc
and
test
clc
mov
test
push
je
sbb
sbb
inc
mov
imul
inc
je
cmc
push
mov
cdq
inc
or
data16
cmp
or
cmp
push
xchg
pop
add
push
xor
sahf
xor
pop
cmc
bound
ins
cmp
xor
outs
push
fnsave
adc
push
shr
inc
mov
xchg
mov
shl
push
xor
cli
lock
sbb
call
into
es
std
popf
mov
mov
stos
xchg
sbb
mov
adc
daa
popa
cmp
jmp
sub
daa
scas
inc
mov
ja
or
adc
fnstcw
xor
mov
movs
sbb
jmp
bound
out
add
xchg
lahf
dec
ja
dec
sbb
mov
xchg
popa
add
xchg
mov
inc
cmps
add
aaa
aaa
rcl
cli
fdiv
lods
cmp
not
movs
ins
ins
push
movsx
jle
ror
sub
add
stos
das
arpl
push
(bad)
int
adc
push
inc
adc
idiv
inc
add
jns
scas
sbb
fnstcw
jnp
les
(bad)
rol
sub
mov
push
mov
and
and
inc
cmp
dec
cmp
rol
leave
xchg
mov
jle
sbb
retf
mov
push
inc
retf
inc
lea
pop
lea
lods
outs
bound
retf
inc
inc
mov
fbld
jmp
fst
jmp
push
call
ret
sub
mov
test
sbb
pop
icebp
repz
shl
fsubr
mov
jle
lods
xor
ficom
loope
sbb
imul
sti
fidivr
lods
out
add
into
and
shr
lock
or
mov
sbb
xlat
arpl
call
shr
rol
or
imul
pop
fmulp
das
push
jne
cwde
mov
jb
int3
lods
or
jne
sbb
or
xchg
xchg
push
pop
adc
pop
jle
pop
test
push
retf
cmps
push
sub
inc
ret
pop
fdiv
mov
jne
xor
cwde
push
lods
xchg
icebp
dec
sub
pop
mov
sbb
push
dec
and
sub
mov
aad
call
sub
dec
dec
call
ds
ret
aaa
inc
mov
sub
mov
mov
sbb
rol
cdq
dec
(bad)
in
sahf
and
adc
lds
xchg
aam
test
inc
mov
add
mov
fcmovnu
xchg
or
inc
rcl
push
pop
lds
mov
inc
scas
sbb
adc
outs
cmps
jg
bswap
loop
mov
aas
push
fldenv
pop
add
push
dec
xchg
movs
mov
push
xchg
ds
fsub
je
stc
mov
(bad)
in
jnp
imul
adc
cmp
xor
push
mov
and
sbb
je
mov
sti
xchg
out
ins
ss
fwait
xchg
test
jb
rol
aas
cmp
mov
cli
add
scas
dec
in
and
and
sti
inc
fst
fnop
xor
cld
leave
xchg
jae
mov
ins
popa
js
fsubr
cdq
jmp
and
in
push
jecxz
jo
pop
test
fstp
sar
test
aam
push
cmps
pop
cdq
lea
jbe
xchg
or
dec
sbb
daa
and
mov
das
rcr
dec
fucom
bound
data16
lock
mov
vmovups
mov
and
cmp
scas
(bad)
mov
jl
cmps
ins
mov
sbb
in
cmp
in
(bad)
cmp
sbb
and
mov
sub
jno
jne
inc
sub
inc
icebp
pop
hlt
int
rcl
int3
push
dec
hlt
ret
ins
invd
leave
jno
mov
and
ins
push
ja
push
aam
in
bound
xor
ret
push
movs
inc
out
pop
inc
retf
xor
lea
pusha
aam
ret
clc
iret
xor
adc
imul
xor
cli
push
leave
(bad)
fmul
outs
xchg
or
es
sti
prefetcht1
loope
jp
loopne
loopne
mov
xor
je
pop
push
ins
repnz
push
pop
pop
inc
jno
dec
jo
movs
aas
xor
and
fsubr
scas
inc
add
and
pop
sub
icebp
jns
ss
inc
push
inc
or
inc
cwde
mov
pop
dec
pop
popf
dec
mov
imul
mov
jnp
push
push
scas
das
nop
ss
ret
xlat
lods
jg
lods
push
lea
sbb
not
push
inc
clc
mov
imul
loopne
ds
cli
(bad)
mov
adc
xchg
adc
xor
push
mov
cmp
and
sub
adc
in
xchg
and
jmp
and
push
mov
push
jbe
mov
jg
cdq
call
cs
icebp
mov
dec
cmp
push
les
inc
push
push
dec
lds
sbb
sahf
xor
inc
shl
xchg
rep
pop
jo
aas
sbb
not
nop
jo
jmp
or
loope
fstp
push
pop
in
popf
add
(bad)
inc
test
push
cdq
and
pop
(bad)
call
push
mov
dec
ret
clc
fimul
aam
cs
imul
cmp
cmp
inc
add
pop
mov
es
mov
icebp
(bad)
fisttp
inc
ins
jns
xchg
fisubr
std
and
sub
push
pop
or
fstp
mov
cmc
shl
das
dec
jo
jmp
push
add
dec
xor
add
jnp
shr
and
stos
pop
xlat
jno
les
push
mov
std
dec
dec
pop
add
sbb
mov
pop
jo
sbb
fwait
push
xor
movs
je
push
lds
aaa
add
mov
call
clc
sbb
mov
dec
and
ror
lods
mov
lock
sbb
mov
pop
sub
fisubr
adc
(bad)
xor
repz
mov
nop
hlt
out
push
cli
fsub
daa
call
pushf
pop
in
sbb
adc
in
push
add
xor
cmps
std
iret
pop
fcmovbe
fsubr
and
inc
std
push
es
dec
pop
int3
mov
xor
lock
lock
repnz
sbb
mov
rcr
cmp
jecxz
xchg
lods
popa
mov
addr16
xchg
scas
cmp
ja
inc
sar
jg
faddp
gs
pushf
push
cmp
loopne
dec
ss
adc
ror
in
xchg
enter
jmp
mov
jo
clc
add
push
push
xchg
fwait
cmp
cld
inc
jecxz
fidivr
push
pcmpgtw
in
mov
stos
call
xchg
rcl
cmps
mov
cmp
fstp
cmp
les
jo
rcl
jecxz
xchg
out
push
dec
mov
or
bound
out
dec
sub
xchg
fidivr
cmp
lods
mov
(bad)
xlat
js
movs
iret
jb
push
cmp
inc
test
adc
cmp
call
cld
out
mov
pushf
addr16
mov
mov
ins
sbb
(bad)
popa
ds
add
nop
jle
mov
xchg
add
lock
or
mov
in
xchg
push
mov
adc
loope
fsubr
xor
ret
dec
dec
cmp
xor
sahf
aam
mov
jecxz
jno
dec
jle
or
mov
pop
mov
mov
mov
pusha
out
sbb
mov
sub
cmp
mov
hlt
sub
call
daa
imul
mov
fild
arpl
pushw
cmp
ret
mov
out
dec
dec
test
jle
sub
cdq
mov
add
ds
mov
mov
test
jge
adc
rcr
add
jge
not
sub
dec
inc
mov
rol
stc
mov
cdq
cmps
mov
fsub
mov
mov
mov
fsubp
popa
aaa
(bad)
lahf
xchg
test
sub
mov
fiadd
repz
sub
mov
test
xor
rol
dec
je
jg
jmp
dec
mov
inc
jmp
jns
adc
daa
aad
mov
push
xchg
mov
test
mov
mov
xor
pop
test
dec
add
in
jle
fistp
inc
xlat
data16
or
push
fucomip
arpl
xchg
aaa
mov
mov
outs
push
mov
pop
ins
jmp
fs
aaa
sti
dec
xlat
add
cmp
xchg
das
out
(bad)
xor
cli
shl
aaa
inc
(bad)
jg
repnz
add
out
mov
push
jns
fs
dec
cmp
in
inc
and
(bad)
pop
pop
leave
popf
mov
es
or
leave
aam
jno
rcr
loopne
ja
adc
mov
mov
sbb
cmps
or
loopne
and
adc
mov
xchg
mov
jns
pop
jae
jns
test
shr
adc
push
dec
pop
xor
sbb
mov
adc
cwde
nop
adc
jp
inc
sbb
leave
dec
mov
and
jbe
push
(bad)
fwait
mov
aad
mov
repz
ja
std
mov
jns
adc
dec
fs
es
aas
gs
cwde
sbb
cs
pushf
repz
mov
inc
mov
je
ret
jg
mov
mov
push
(bad)
shl
mov
fld
or
sbb
push
cdq
leave
out
and
push
fsub
inc
data16
dec
push
mov
mov
add
mov
hlt
xchg
pop
dec
iret
fadd
push
adc
retf
imul
pop
xchg
cmps
mov
jae
les
loopne
add
ficom
xor
push
ret
pop
rcr
gs
repz
fdiv
cli
jmp
mov
lock
into
cmp
cwde
mov
rol
lds
cmps
jge
dec
inc
(bad)
in
rol
xor
lock
add
mov
mov
in
pop
aaa
clc
(bad)
fimul
sbb
imul
xor
push
mov
pop
xchg
mov
rol
dec
out
ins
add
xor
mov
shl
pop
icebp
cmps
dec
sbb
pop
cmps
add
repz
mov
ss
fcomp
mov
fimul
(bad)
mov
fist
sahf
jle
inc
or
iret
retf
push
fdiv
pop
imul
retf
mov
inc
push
int3
or
js
cld
mov
mov
cld
sbb
mov
pop
sar
dec
xchg
jae
adc
test
cmp
add
mov
mov
fs
pushf
icebp
mov
pop
inc
pop
mov
pop
std
aas
cmp
out
cmp
mov
sahf
pop
data16
inc
fadd
jo
mov
add
rcr
inc
pop
pusha
sbb
dec
std
cmp
call
cmc
cmp
inc
(bad)
mov
or
or
mov
and
(bad)
aam
inc
std
arpl
jle
jo
ror
and
(bad)
dec
pushf
fs
sub
pop
call
xor
sub
call
lds
push
retf
xchg
test
stos
shl
sub
pop
(bad)
jae
mov
push
(bad)
cmp
dec
imul
fild
aas
push
inc
repz
add
test
xchg
adc
push
push
call
jmp
in
stos
push
cmp
sbb
xchg
sahf
push
dec
cwde
pushf
mov
inc
cmps
imul
mov
add
mov
in
fwait
(bad)
ror
outs
inc
inc
pop
rcl
push
mov
push
ds
fdivr
cmc
push
mov
dec
xchg
mov
inc
adc
call
inc
outs
pop
or
push
mov
ja
call
int3
and
xor
xchg
repnz
jne
or
add
js
(bad)
ins
cmp
hlt
dec
retf
sub
jae
stos
(bad)
xchg
loopne
xor
outs
sti
mov
fsub
mov
lds
sub
cwde
sbb
(bad)
cmp
scas
out
out
push
fiadd
sbb
push
nop
add
and
scas
mov
out
lea
imul
(bad)
loop
sub
push
fisttp
mov
mov
jns
div
popf
in
mov
mov
mov
pop
pop
jb
outs
sbb
lahf
inc
jle
adc
inc
and
fisttp
sbb
fadd
js
ret
mov
mov
outs
scas
inc
arpl
mov
pop
mov
pop
adc
pop
test
dec
aas
aad
or
adc
les
mov
out
jno
mov
pop
jecxz
ret
sub
mov
push
cmp
dec
mov
(bad)
sub
dec
jge
stos
and
and
jl
add
shl
pop
(bad)
adc
les
fmul
pop
sbb
mov
mov
push
sar
imul
aaa
data16
and
test
ins
xchg
or
scas
aad
les
sbb
aas
jecxz
pushf
fs
das
cs
xor
loop
data16
mov
sub
push
xor
loop
test
stos
(bad)
and
xor
ins
xor
jno
jg
shl
dec
inc
push
jmp
mov
cli
hlt
(bad)
cmp
or
xchg
dec
movs
adc
jbe
(bad)
mov
jecxz
out
std
jnp
sub
ret
add
sub
pop
xchg
jecxz
mov
jmp
lea
cmp
push
dec
aas
fmul
pop
fs
xchg
gs
test
scas
sub
cdq
sbb
cmp
aaa
inc
mov
ficom
lods
mov
fcom
js
jne
cmp
daa
add
ret
push
and
adc
push
mov
sbb
push
idiv
mov
scas
jno
adc
test
retf
sar
push
push
push
imul
push
cmp
xchg
es
add
push
lods
outs
stc
test
loopne
inc
mov
arpl
mov
xor
jle
sub
or
sub
jmp
push
ins
cmp
test
dec
loope
nop
out
fcom
rcr
push
test
pop
push
repnz
call
cmc
pop
dec
sub
loop
fdiv
jmp
popa
mov
inc
xchg
in
and
(bad)
in
add
pop
mov
(bad)
movs
push
cmps
adc
xchg
cmps
dec
sbb
hlt
and
fild
or
xor
xchg
dec
mov
sub
mov
jecxz
pop
(bad)
and
jmp
lods
inc
in
(bad)
std
test
cmp
inc
popf
pop
bound
mov
(bad)
cld
or
jecxz
jbe
loope
xchg
mov
in
cli
lock
not
inc
int
mov
dec
call
out
call
jmp
jmp
jnp
pop
and
inc
dec
les
repz
mov
out
cmps
mov
sbb
add
fld
fwait
repnz
aas
out
das
mov
jmp
inc
cmps
ins
push
sub
cmp
cli
add
ret
and
jp
push
sub
inc
dec
push
xor
mov
popf
xor
int3
out
repnz
out
ds
test
cdq
in
pop
push
cmp
imul
outs
fwait
mov
or
dec
pop
cmp
add
aam
dec
fwait
inc
faddp
mov
or
data16
jmp
push
push
clc
mov
loopne
or
(bad)
mov
in
push
repnz
retf
in
out
jge
fs
add
retfw
into
mov
aad
and
or
in
mov
push
xchg
add
jae
pop
cs
repz
inc
scas
xchg
adc
jns
fdivrp
cmp
mov
fsubr
je
lahf
aam
ins
xchg
add
push
pop
rol
sub
fmul
push
scas
mov
in
rol
pop
lahf
sahf
daa
aaa
adc
out
lods
fsub
add
mov
jns
(bad)
sub
xor
or
aas
dec
cdq
into
mov
jle
in
fidiv
pushf
mov
adc
ret
dec
mov
popa
add
pop
inc
imul
pop
or
leave
ss
inc
and
mov
aad
jb
aam
loopne
jb
dec
je
xor
jo
repz
xlat
es
sti
fucomi
adc
shl
pushf
jmp
lods
idiv
neg
fprem1
add
daa
repnz
jl
retf
adc
test
mov
inc
mov
lahf
ret
test
gs
dec
push
imul
stos
xchg
ficom
cmp
xlat
pop
sub
shl
pop
popf
cld
and
mov
dec
imul
push
adc
mov
fnsave
pop
or
aam
add
and
add
mov
cmp
cmp
mov
cmp
mov
retf
loopne
shl
pop
cld
cmp
mov
jle
jge
inc
scas
(bad)
jmp
iret
dec
leave
in
int
out
push
push
repz
fwait
adc
jbe
or
(bad)
adc
repz
pop
adc
push
push
sub
int
jae
rcl
ret
(bad)
aad
mov
jo
(bad)
mov
popa
ja
test
mov
cmp
sbb
dec
pop
je
fcmovne
pop
out
(bad)
(bad)
or
inc
ror
stos
test
je
aam
or
retf
add
mov
call
add
or
mov
call
add
xor
cmp
neg
dec
sub
pop
enter
mov
stos
dec
xor
shl
call
cwde
ret
sub
or
pop
inc
movs
add
cmp
cmps
sbb
and
inc
sub
sub
xor
not
cmc
inc
dec
loopne
call
hlt
cmc
inc
aad
dec
ret
lods
cwde
loope
pop
fcomip
mov
iret
out
mov
fbstp
cmp
pop
ja
add
dec
out
vpsrad
cmp
dec
xchg
and
jo
(bad)
fld
loopne
adc
out
and
dec
mov
out
pop
inc
repz
jl
xchg
repnz
cmp
mov
dec
rcl
mov
in
adc
add
jle
add
mov
xor
fmul
push
push
xlat
ror
loopne
das
push
ja
mov
add
test
fwait
mov
pop
das
in
les
clc
imul
mov
cmps
cmp
pop
xchg
xchg
dec
adc
rcr
jb
div
sub
out
dec
jmp
ja
fwait
cmp
cmc
mov
sbb
cli
sub
pcmpeqw
test
pushf
mov
pop
movs
mov
test
jl
adc
mov
and
cmp
xchg
pop
test
push
into
popa
fmul
dec
ret
ins
das
or
ror
inc
test
xchg
sbb
pop
clc
stos
sub
(bad)
repnz
stos
push
sbb
hlt
mov
push
and
rcr
pop
inc
je
xchg
fadd
fidivr
pop
scas
ins
jle
aad
dec
inc
outs
rcl
xchg
and
pop
xchg
add
cmp
(bad)
fistp
jl
movs
push
pop
outs
lock
fnstenv
push
int3
aas
test
ins
shl
mov
cmps
mov
test
and
(bad)
aaa
inc
les
dec
mov
fsub
mov
or
xor
lock
dec
shl
repz
mov
pop
cs
push
pop
ret
inc
ret
inc
dec
jno
adc
add
inc
shl
imul
stos
fwait
mov
pusha
mov
jp
ret
addr16
add
pop
sahf
jmp
ins
pop
inc
push
push
in
int
adc
mov
mov
test
aas
cmp
push
nop
mov
dec
out
pop
dec
mov
in
mov
arpl
stos
in
mov
xor
dec
push
jge
pop
in
add
jb
inc
iret
pop
shl
mov
pop
jno
mov
cmp
push
lea
xor
std
xor
xchg
ds
jo
jmp
(bad)
neg
(bad)
and
dec
out
clc
pop
fldenv
into
xchg
icebp
lods
retf
push
into
iret
mov
jle
sub
xchg
jl
or
lods
pop
rol
stc
int3
int
call
sub
lahf
sbb
fisttp
push
sbb
ror
sbb
repz
out
fidivr
fwait
push
leave
and
pusha
lods
cli
mov
fwait
ss
ins
retf
data16
mov
mov
loopne
popf
mov
mov
dec
(bad)
xchg
lods
fsubp
jmp
mov
popf
imul
dec
outs
xor
scas
dec
adc
repz
dec
rcr
icebp
mov
mov
inc
out
shl
test
das
and
inc
mov
inc
adc
test
push
ins
pop
std
dec
inc
inc
mov
dec
scas
addr16
iret
pop
sbb
out
xchg
jne
adc
push
test
mov
int
pop
xlat
test
jge
lock
cmp
cmps
outs
pusha
test
stos
dec
in
std
out
loop
test
je
js
shr
mov
aam
fist
xor
out
adc
cmp
mov
ins
inc
push
add
inc
sbb
sub
and
test
inc
imul
int
lds
iret
mov
mov
pop
iret
sahf
pop
repnz
pop
xchg
imul
daa
pop
retf
xchg
push
test
loop
hlt
rcr
add
and
sahf
sbb
jb
xchg
loopne
sbb
and
sbb
xor
out
shl
mov
push
mov
pop
test
push
ins
sub
rcl
lds
jmp
ins
sub
lahf
xchg
imul
mov
xchg
cmp
int
sbb
cmp
inc
jle
xchg
mov
movs
cmp
dec
test
rcl
push
jmp
jl
loope
pop
loope
xchg
cmp
or
les
stos
xor
mov
fcmovb
pop
mov
(bad)
mov
mov
or
jg
sub
repz
inc
retf
lea
adc
xchg
mov
xchg
push
test
xchg
sahf
add
ins
fiadd
pop
dec
jbe
pop
add
mov
xor
jge
fisub
add
inc
addr16
retf
xor
sub
mov
nop
repnz
ret
xor
xchg
push
lods
jl
jmp
or
cmp
fs
add
or
sub
cmp
fisttp
xor
sbb
(bad)
popa
in
jg
pop
ds
ds
sub
dec
xchg
jmp
retf
(bad)
dec
(bad)
lock
mov
fs
in
push
leave
sub
mov
(bad)
(bad)
and
mov
addr16
dec
jb
(bad)
stc
cmp
mov
shl
jg
dec
add
adc
pop
rol
out
ret
stos
push
inc
out
push
pop
add
sub
add
push
cmp
popa
adc
xor
mov
sbb
cmps
test
inc
jbe
outs
mov
sbb
xchg
jp
pextrw
sbb
in
and
shl
jb
lods
mov
pop
jmp
pop
inc
lods
pop
lds
repz
push
(bad)
pop
mov
cmp
movs
jno
sbb
pop
test
push
in
test
inc
and
rcr
loope
iret
stc
and
xchg
mov
adc
jne
out
idiv
cmc
movs
inc
adc
mov
retf
ins
cmp
call
push
rol
lea
sbb
cli
out
jp
sbb
mov
in
imul
mov
mov
mov
test
mov
les
or
rol
daa
hlt
sub
jbe
mov
aas
repz
pop
arpl
jp
stos
(bad)
fisubr
les
and
dec
das
clc
call
inc
cmp
scas
add
cmps
ret
sbb
test
js
and
jb
ret
(bad)
xor
pop
aas
nop
adc
retf
mov
pop
mov
fdivr
push
jb
xchg
aad
call
sbb
adc
ret
mov
inc
adc
idiv
je
int3
jle
cmp
(bad)
and
xor
enter
stc
stc
fbld
push
xor
inc
popf
jno
fucomip
fisubr
out
adc
loopne
add
std
ror
mov
sbb
addr16
pop
push
pop
adc
jmp
jo
or
and
in
retf
stos
(bad)
jge
into
xchg
push
jne
pusha
(bad)
lahf
data16
test
ficomp
xchg
sub
add
stos
mov
push
enter
inc
mov
aad
rol
and
mov
jp
inc
cmp
mov
jmp
fwait
mov
neg
lea
les
pop
mov
inc
xor
jne
sbb
or
sbb
xor
shl
mov
loop
scas
fst
xchg
sbb
or
outs
leave
adc
out
add
retf
mov
jno
inc
fild
daa
fwait
cli
ror
mov
pop
in
cmps
dec
pop
pop
push
push
out
je
cli
rol
pop
shr
add
push
std
inc
in
movs
popf
mov
pop
mov
lods
mov
cdq
and
pop
adc
inc
dec
xor
mov
sub
xchg
xor
mov
in
test
pushf
xor
rol
or
push
retf
cdq
add
push
sub
push
rsqrtps
(bad)
ret
sbb
fld
cmc
mov
sub
dec
imul
lgs
pop
mov
and
fmul
mov
icebp
mov
or
adc
lds
sbb
jg
jne
or
xor
sbb
jg
lods
in
aad
pop
dec
arpl
into
xchg
movs
dec
jbe
loopne
jl
mov
add
loop
call
out
and
cld
cli
and
ins
sbb
sbb
pusha
inc
adc
test
cmp
add
sub
out
int
lods
inc
(bad)
adc
pop
jmp
cmp
popa
mov
pushf
mov
mov
lods
mov
data16
aad
dec
adc
and
pop
mov
mov
inc
xchg
pusha
(bad)
stc
aas
bound
dec
and
mov
loop
vpsubd
push
adc
or
pop
push
nop
into
cmp
in
sub
inc
xor
cmp
mov
xor
cs
push
cmp
push
inc
sbb
lods
fwait
es
leave
(bad)
jecxz
hlt
add
mov
(bad)
jnp
pop
addr16
cmp
and
push
aas
retf
pop
je
mov
pop
ret
adc
push
push
test
jp
in
push
retf
sbb
jmp
aad
push
jns
(bad)
adc
jno
pop
xor
inc
mov
cmp
mov
cmc
outs
mov
inc
cmp
jp
rcl
ja
enter
jle
rcr
push
cdq
xchg
add
dec
scas
push
mov
push
xlat
pop
les
pop
ss
rcr
lea
sbb
(bad)
stos
mov
or
(bad)
std
int3
dec
aas
push
shr
in
vmulpd
out
in
push
not
sbb
shl
adc
scas
xlat
jno
test
push
inc
sub
adc
leave
ins
pop
in
in
sahf
mov
mov
push
inc
lahf
or
enter
retf
push
cdq
test
push
(bad)
and
or
int
cmp
add
pop
pop
bound
adc
add
xchg
add
aad
mov
(bad)
pop
sub
pop
jbe
mov
bound
cli
lds
in
adc
leave
xchg
sub
sahf
push
push
shl
add
cli
int3
pop
push
stc
cld
lock
mov
cmp
int3
bound
mov
xor
repz
mov
daa
repnz
into
or
ja
dec
mov
pop
dec
push
sub
hlt
sti
jne
cmps
xchg
ret
push
cwde
jmp
data16
std
repz
call
cdq
dec
fist
cmc
mov
dec
stos
rcr
sbb
cld
out
mov
adc
mov
and
fsubrp
mov
jo
jb
pop
xchg
mov
sub
(bad)
lds
div
mov
cdq
sbb
push
sbb
daa
sbb
clc
cmps
dec
adc
add
xor
lods
bound
sbb
dec
and
sub
shl
fsub
and
sub
sub
ds
inc
ds
sub
and
stos
cmp
pop
cli
mov
and
popf
clc
add
pop
pop
cdq
fwait
out
test
adc
sub
mov
pop
sbb
jns
mov
inc
fstp
adc
dec
in
mov
xchg
push
push
out
xchg
add
jmp
sbb
inc
sbb
es
imul
jne
ds
fistp
fstp
push
jle
les
aas
out
xchg
inc
test
(bad)
stc
jecxz
sub
push
mov
out
mov
daa
and
sahf
xchg
push
shr
repnz
jo
xor
sti
xchg
pop
jg
int
sub
sbb
adc
push
inc
xchg
fadd
sbb
cmp
outs
sti
cmovs
and
aad
dec
xchg
out
xchg
and
mov
and
loop
xor
or
push
aaa
popf
adc
nop
mov
push
mov
jle
test
sbb
mov
int
mov
movntq
out
imul
and
nop
sar
xor
xor
mov
mov
lods
fdivr
cli
mov
aaa
cli
cmp
mov
call
mov
inc
add
aaa
in
retf
call
(bad)
inc
icebp
ror
popf
shr
sub
cs
cmp
retf
mov
sbb
std
shl
mov
jecxz
movs
test
add
lar
sbb
push
inc
data16
adc
pop
ror
call
leave
pop
pop
jbe
clc
addr16
sub
ret
and
iret
ret
add
inc
sti
xchg
inc
cld
cmp
cli
mov
imul
mov
(bad)
jnp
inc
push
mov
fimul
sbb
sahf
or
pop
jecxz
mov
bound
and
or
or
nop
in
jmp
test
je
push
repnz
idiv
in
out
dec
add
mov
pop
stc
cmc
mov
push
mov
dec
es
push
inc
mov
cmp
sub
icebp
test
push
call
fistp
scas
xlat
xchg
push
inc
adc
aad
pop
push
in
jnp
dec
test
les
push
jg
rcr
aas
sbb
mov
ins
jmp
jbe
sbb
lahf
pop
out
add
jge
sbb
ret
lds
push
sbb
inc
sbb
imul
addr16
out
sbb
leave
lahf
push
popf
pusha
inc
repz
lahf
(bad)
fucomp
and
mov
pushf
sti
mov
es
xor
int3
dec
outs
dec
sbb
call
(bad)
adc
js
push
add
popf
hlt
scas
add
repz
xlat
or
enter
pop
push
sub
xor
and
mov
ror
in
test
pushf
inc
xor
icebp
mov
pushf
(bad)
ss
or
inc
cmps
adc
push
rcr
icebp
pop
add
or
cmp
fs
xchg
push
sub
xor
add
fdiv
inc
jbe
adc
std
std
cmps
int
sti
cmp
pusha
xchg
shl
and
popf
sub
push
outs
xchg
add
xchg
adc
inc
inc
push
push
mov
mov
sahf
jmp
hlt
repnz
cwde
jmp
mov
jg
inc
add
inc
(bad)
pusha
ins
add
enter
mov
xor
mov
fst
sub
les
pop
dec
adc
xchg
and
les
xchg
stos
jne
xchg
ss
dec
fimul
mov
push
mov
add
fisub
pushf
loop
and
test
dec
lock
push
cmp
sbb
retf
cld
xchg
sub
loop
xor
nop
or
jb
ss
shl
or
(bad)
retf
sub
loop
xor
mov
mov
call
and
sbb
movs
in
mov
cs
nop
cwde
fisttp
ins
int
retf
sub
stos
add
leave
in
(bad)
icebp
sbb
inc
pop
out
je
mov
retf
fcom
cmc
and
fwait
jmp
daa
jge
inc
mov
dec
push
mov
or
fld
cmp
loopne
jmp
sbb
shr
int3
jg
or
and
push
out
or
dec
aas
cmps
imul
push
mov
mov
push
sub
cmps
ror
jg
cmp
ja
inc
mov
mov
or
mov
cmp
adc
je
inc
ins
ror
repnz
dec
std
popf
adc
aam
ins
shl
dec
out
cmp
aam
rcr
dec
ret
jnp
jp
in
jecxz
jae
out
out
jnp
cmps
dec
add
jne
jmp
jecxz
and
loope
sbb
pop
xor
out
dec
inc
sbb
cwde
or
add
mov
out
inc
sar
jo
xchg
sbb
xlat
stc
out
push
jnp
xor
aad
and
or
xchg
dec
leave
pusha
add
arpl
mov
out
popa
btr
pop
jb
inc
xor
sub
mov
popa
mov
xlat
push
pop
mov
rol
cmp
push
xchg
cmp
arpl
fidivr
test
outs
adc
loopne
push
popa
stos
and
mov
ins
jge
mov
cmps
shl
pop
or
jnp
sti
xchg
adc
in
sub
cli
hlt
imul
mov
clc
stos
xchg
test
into
mov
pop
mov
jno
mov
int
jno
push
push
(bad)
call
cld
pop
push
test
dec
sub
or
jle
adc
pushf
sub
add
movs
(bad)
cmp
xor
retf
xor
int
or
push
repz
cmp
pop
cli
enter
or
add
inc
jle
fistp
ins
cmp
cmp
inc
jns
call
dec
leave
lods
add
mov
in
cmp
jbe
fnsave
dec
mov
dec
in
sbb
shl
fld
call
loop
mov
and
(bad)
mov
push
jb
sub
mov
and
fild
mov
ins
push
inc
daa
je
dec
sub
sbb
scas
xchg
pop
test
dec
and
mov
dec
rol
xchg
in
test
cmp
retf
in
loop
enter
xchg
xchg
cmp
vmread
sub
aam
aad
(bad)
sahf
enter
in
push
push
xchg
aam
jbe
aad
(bad)
sub
xchg
je
and
mov
xchg
stc
cli
aaa
or
inc
(bad)
cli
jp
dec
and
pop
jmp
sti
pop
mov
push
mov
mov
ins
stc
mov
jo
out
lods
aaa
mov
adc
mov
out
xchg
mov
mov
int3
jno
lahf
mov
dec
(bad)
test
xchg
(bad)
inc
iret
fs
mov
push
pop
ror
loop
cs
cmp
jno
retf
sbb
outs
push
hlt
cmps
lock
push
add
call
nop
daa
not
push
cmp
dec
lahf
mov
cdq
cmp
int3
jbe
(bad)
pop
inc
adc
js
sub
test
mov
stos
ins
mov
fistp
mov
mov
ins
in
int3
adc
pop
jnp
nop
js
pop
cmp
cmps
div
aad
push
dec
and
adc
scas
sub
test
fistp
std
loope
push
xor
fnstcw
ret
mov
in
jmp
aam
imul
js
xchg
test
fisttp
popa
ss
jge
jp
lds
jl
pop
lahf
and
push
test
cmps
imul
sub
je
push
xor
push
in
dec
sbb
fcmovu
mov
bnd
push
mov
arpl
push
mov
std
pop
rcl
cmp
sub
imul
adc
sub
(bad)
mov
jecxz
mov
cmps
xchg
jp
dec
xor
lea
sahf
push
pop
pop
inc
mov
in
or
fsub
xchg
dec
push
push
and
inc
fwait
sbb
push
inc
or
je
rcl
ret
or
mov
cmp
rcr
(bad)
lldt
aam
mov
out
in
sti
test
ja
test
inc
call
fwait
inc
outs
push
enter
(bad)
aaa
pop
sti
mov
inc
mov
mov
(bad)
jmp
movs
cs
rcl
inc
pop
dec
mov
add
int3
in
icebp
mov
mov
imul
out
push
or
sbb
mov
loop
stos
sub
mov
add
push
add
adc
pop
cmp
and
jecxz
movs
xor
jnp
fmul
jns
xor
cmp
daa
sbb
ficom
xor
xor
pop
pop
in
mul
sub
mov
shl
jp
cld
aaa
mov
add
push
fcmovnbe
mov
push
mov
sti
(bad)
adc
jecxz
out
cmc
mov
sbb
push
icebp
mov
mul
test
stos
mov
sbb
cmp
std
shl
jbe
enter
mov
add
push
not
fimul
sbb
lods
cmp
sub
bnd
sbb
lock
out
les
xchg
loopne
test
test
shr
mov
stos
(bad)
sbb
sbb
sub
dec
packssdw
add
cdq
pop
push
mov
das
ret
lea
imul
sub
push
cmp
push
sub
dec
cmp
jg
pop
les
push
dec
dec
adc
mov
sbb
inc
inc
vorps
sub
push
lods
stc
mov
int3
fnstsw
retf
int3
mov
(bad)
xchg
iret
xchg
adc
movs
out
and
sub
cmps
fs
ror
inc
xchg
ds
out
push
fnstenv
(bad)
ins
sub
pop
sbb
in
cmps
or
clc
mov
dec
cmps
mov
or
loopne
pop
push
jbe
pop
xor
mov
xor
push
xor
ins
pop
push
mov
jnp
scas
pushf
std
adc
mov
add
fld
outs
xchg
(bad)
out
dec
fchs
sbb
inc
jg
cmp
mov
add
pop
xor
jne
mov
jle
and
retf
jo
(bad)
sub
ficomp
mov
jne
loopne
mov
or
nop
sub
out
or
sar
add
push
mov
jne
sub
xor
mov
mov
xchg
xchg
dec
popf
xchg
lahf
sub
test
jo
sub
inc
mov
daa
mov
retf
in
jnp
rcl
ret
add
ret
push
sub
sub
push
nop
(bad)
sub
sbb
adc
jb
shl
popf
aaa
jb
push
popa
inc
pop
push
call
(bad)
ficomp
add
add
daa
mov
jnp
push
in
stos
leave
sbb
cli
or
cmp
and
mov
push
sbb
jp
dec
mov
mov
xchg
push
pop
cmp
in
sub
repz
fwait
(bad)
push
mov
scas
mov
daa
aas
ret
dec
cmp
lock
nop
sbb
enter
fwait
repz
ins
loopne
xchg
jbe
rcr
adc
and
in
mov
stc
bound
xor
inc
adc
loopne
arpl
jmp
retf
dec
sbb
cmc
sub
jnp
push
mov
sbb
cmp
pushf
jb
cwde
xor
inc
pusha
out
xchg
repz
dec
int3
mov
cmps
xlat
(bad)
iret
mov
unpckhps
mov
call
push
int3
das
adc
xor
push
cs
cwde
les
imul
in
outs
xchg
fcomp
jg
fcmovnb
outs
inc
arpl
retf
xchg
in
inc
pop
cli
in
clc
rol
jge
dec
jmp
mov
push
jle
imul
dec
adc
jmp
mov
shl
push
pop
xor
inc
(bad)
imul
cmps
cmp
mov
mov
fadd
jbe
push
cmp
out
pop
jp
pop
or
inc
cwde
push
inc
inc
mov
xchg
test
fisttp
cmp
xor
popa
mov
inc
or
jmp
nop
jg
or
ja
dec
les
pop
sbb
cwde
or
adc
bound
jecxz
pop
loope
mov
loopne
retf
frstor
bound
adc
sbb
xchg
sahf
xor
imul
push
es
test
out
aad
and
and
aam
mov
sub
pop
xor
(bad)
out
or
push
mov
fst
lock
in
mov
ror
or
(bad)
push
or
fcomp
inc
hlt
inc
aas
fisubr
sub
pop
inc
addr16
test
in
and
sar
pop
mov
dec
jmp
add
mov
pop
sbb
or
jl
aaa
lea
cmp
es
lock
cwde
clc
sub
js
ret
ins
or
fisttp
cmps
imul
js
mov
add
mov
call
popa
sub
sti
inc
ret
cli
div
loopne
push
cwde
cmps
adc
xchg
mov
cmc
call
jnp
lods
add
loope
xchg
dec
jbe
mov
sub
ret
dec
fcomi
in
shl
jle
data16
lahf
gs
jge
mov
jbe
into
sub
fadd
test
popf
inc
pop
sbb
pop
push
xor
rol
lods
gs
dec
cwde
rcr
mov
dec
xor
mov
and
int3
sbb
pop
push
push
repnz
sbb
dec
mov
jbe
out
push
sub
test
aas
xor
inc
xchg
dec
cmp
gs
adc
or
aam
and
or
pop
mov
xchg
loop
add
pushf
ins
iret
shl
push
push
movs
xor
rcl
dec
pop
pop
ret
in
or
inc
stos
dec
pop
cmp
ins
xor
out
stos
sbb
(bad)
sub
clc
(bad)
add
popa
cmp
sub
enter
popf
inc
adc
inc
daa
cld
ds
bound
jl
loopne
cmc
ficom
xchg
sar
push
scas
shl
dec
pop
dec
lods
jge
cli
ins
bound
mov
std
and
fisub
repz
clc
ins
inc
in
cdq
repnz
mov
lds
sub
mov
lock
shl
xlat
pop
dec
dec
mov
(bad)
sbb
out
cld
jbe
repnz
and
not
or
pop
leave
fst
mov
pop
outs
sbb
retf
or
cmp
in
adc
jne
lea
jnp
jecxz
paddd
or
js
scas
mov
cld
test
inc
or
aas
or
adc
push
jo
enter
daa
(bad)
(bad)
jbe
and
fisub
out
scas
fisttp
sub
dec
(bad)
sbb
add
mov
outs
mov
sbb
jmp
and
je
jne
sahf
shr
pop
xor
mov
xchg
shr
jmp
xchg
aad
fldcw
ja
repz
push
(bad)
in
shl
icebp
add
adc
pop
(bad)
cmps
dec
aaa
movs
xor
cmc
jmp
add
jl
push
ins
pushf
int
sbb
mov
les
into
test
shr
sub
adc
jno
in
mov
push
add
aam
fs
mov
xchg
std
jl
inc
or
(bad)
fild
mov
xor
jnp
dec
sbb
pop
cdq
xchg
or
xchg
jb
(bad)
and
popa
pop
bound
jecxz
test
cwde
(bad)
jmp
sbb
mov
adc
(bad)
push
inc
mov
jge
pop
lds
mov
aaa
movs
out
ret
xor
mov
sbb
call
rol
adc
femms
loopne
mov
(bad)
pop
mov
jbe
scas
std
dec
xlat
xchg
mov
lds
aam
mov
xchg
jecxz
or
jns
pop
retf
leave
out
fmul
ds
jb
fisub
xchg
(bad)
xchg
(bad)
xor
scas
cdq
jne
in
xor
mov
xor
fmulp
or
pop
sti
sar
aas
mov
loope
and
adc
jge
fbld
jbe
pop
fs
sar
pop
mov
jecxz
out
jle
adc
mov
inc
imul
and
jg
arpl
push
fabs
int3
push
addr16
fcmovne
in
outs
fbstp
std
xor
imul
aas
mov
or
sub
shl
sub
adc
call
jg
or
sbb
call
lds
ins
and
movs
mov
pop
mov
out
(bad)
push
inc
and
icebp
adc
(bad)
ss
inc
mov
adc
fdivrp
into
push
mov
jle
add
jno
iret
xchg
enter
mov
add
push
push
daa
not
adc
leave
leave
jl
dec
icebp
add
and
stos
ins
out
popa
in
in
jb
push
nop
popa
jae
movs
js
or
iret
xchg
cmp
call
scas
dec
movs
rcr
xchg
stos
inc
xchg
data16
test
aam
test
mov
(bad)
or
out
or
(bad)
sub
cmp
push
pop
xor
mov
adc
xchg
leave
outs
inc
idiv
call
xor
mov
stc
mov
jnp
adc
iret
je
sbb
push
or
ins
push
inc
cmp
jo
dec
mov
mov
popa
mov
lock
sar
addr16
jbe
xor
xchg
gs
mov
loopne
addr16
cmp
sbb
sbb
ja
pop
or
add
scas
scas
jnp
std
jae
in
loopne
lock
xor
repz
push
test
mov
jp
jmp
or
enter
not
sar
imul
or
pop
jae
leave
or
nop
fbstp
in
out
pop
in
sbb
jns
jno
jae
adc
sti
push
stc
neg
and
cli
cdq
shl
and
jb
js
sbb
and
inc
mov
cli
outs
rcr
jns
into
hlt
pop
sub
scas
mov
sahf
in
loope
(bad)
xor
push
jne
retf
pop
sub
movs
cmps
pop
pop
pop
addr16
lds
and
or
dec
mov
jb
pop
ss
dec
mov
xchg
cmp
inc
jo
xor
aad
xchg
daa
dec
js
jg
jns
dec
lahf
movs
lock
cmp
nop
movs
inc
test
xor
(bad)
repz
pop
arpl
adc
data16
lods
(bad)
sbb
xlat
xor
jmp
xchg
push
ficom
in
lds
lea
dec
xor
lds
pop
call
mov
push
and
fistp
in
sbb
ins
out
jmp
adc
shl
popa
not
scas
inc
pop
mov
(bad)
mov
sub
cmp
aas
jnp
cmp
js
mov
and
in
scas
(bad)
xor
push
shl
in
pop
inc
dec
add
push
sub
sub
mov
popa
sbb
mov
mov
stc
neg
sub
loopne
stos
sbb
xor
mov
pop
dec
jnp
addr16
and
fimul
mov
xchg
retf
sti
outs
mov
fisub
(bad)
in
paddw
test
mov
movs
xchg
jmp
imul
aam
fsubrp
test
adc
jns
sti
jnp
shl
sub
cwde
or
fstp
fldcw
inc
jle
jp
add
test
adc
mov
xchg
inc
add
or
jl
xchg
sub
inc
inc
mov
scas
jo
ret
push
xchg
xchg
mov
ja
cmc
xchg
dec
fsubr
fiadd
and
dec
sub
mov
sbb
push
pop
std
sub
popa
fistp
push
mov
xchg
and
xchg
int
sbb
cmp
dec
je
call
loope
sbb
or
adc
fwait
mov
leave
cmp
es
mov
cld
dec
movs
xor
push
xchg
jns
repnz
jg
xchg
xchg
sbb
lods
ds
lods
frndint
(bad)
mov
push
test
aad
clc
and
pop
fldcw
mov
pop
pop
xor
jno
inc
xchg
sub
push
jno
xchg
mov
(bad)
pop
retf
jmp
call
pop
cmc
pop
or
pop
xlat
sbb
mov
data16
or
(bad)
loop
push
jno
adc
scas
int3
mov
aaa
ficom
dec
(bad)
pop
and
retf
scas
int
sahf
sahf
out
int
call
in
inc
in
aas
outs
hlt
mov
int3
mov
pop
and
cmp
mov
jns
int
in
push
jb
hlt
mov
adc
xchg
stos
pop
mov
les
adc
pop
mov
repnz
sahf
fisubr
cli
stos
mov
cli
jnp
cmp
pop
mov
out
je
loop
add
les
cmp
aad
mov
dec
pop
test
xor
arpl
lods
sbb
(bad)
int3
inc
pop
fistp
sbb
sub
hlt
push
in
xor
ret
inc
or
lods
inc
or
or
pop
call
into
mov
sub
nop
pop
jno
ja
xor
inc
dec
dec
jo
xor
hlt
in
int3
retf
pop
aad
push
daa
cmps
std
imul
enter
repz
sti
xchg
aad
leave
add
sub
push
push
shl
jno
out
mov
push
xchg
and
je
(bad)
pusha
push
jle
adc
inc
je
mov
pushf
adc
mov
fild
add
jmp
ins
outs
lahf
cmp
test
div
shr
jo
xlat
popf
push
(bad)
int
and
loop
mov
aaa
outs
add
cli
retf
push
(bad)
fsubr
or
mov
add
je
mov
or
cdq
jns
ins
(bad)
xor
hlt
rcl
movs
jmp
aaa
or
pop
mov
xor
daa
jae
push
fld
push
shr
ins
mov
stos
cmp
xchg
mov
mov
xchg
int
into
mov
call
inc
mov
dec
inc
xlat
jmp
js
push
out
mul
fcmovb
mov
mov
xor
xchg
lods
sar
in
mov
pop
ss
pusha
xchg
addr16
outs
in
jb
adc
out
repz
mov
xchg
jnp
into
jae
dec
movs
or
sbb
call
add
cmps
adc
data16
clc
pop
inc
adc
mov
or
pop
(bad)
mov
sbb
xor
cmp
cli
cmp
mov
xchg
test
ins
push
jge
fwait
push
cmps
fimul
nop
dec
mov
sub
mov
outs
mov
and
dec
adc
pop
mov
jns
add
into
push
pop
ds
aaa
jg
and
mov
les
fwait
inc
clc
adc
pushf
xlat
scas
repnz
sbb
mov
cmp
jl
jns
ret
(bad)
mov
movs
ret
adc
sbb
jg
mov
add
addr16
out
push
test
leave
clc
ja
mov
daa
cmc
jmp
push
push
daa
leave
add
push
iret
stc
(bad)
clc
fistp
xor
jnp
mov
mov
adc
sbb
ins
push
xchg
out
aas
jecxz
mov
shl
lock
cld
out
jb
sub
or
test
mov
call
cli
pop
mov
daa
dec
stc
dec
xchg
mov
ss
ja
cmps
sub
add
sahf
mov
outs
add
mov
mov
pop
xchg
xchg
sub
fnstsw
push
ret
imul
inc
mov
or
jle
xchg
in
mov
or
repz
ins
sbb
add
mov
or
mov
add
pop
pop
movs
dec
cld
cs
loope
pusha
cli
das
adc
fild
add
or
std
(bad)
sub
sub
mov
push
mov
sub
inc
push
push
adc
and
sbb
int
xchg
sub
jmp
stc
mov
enter
pop
inc
lods
pop
cmp
out
aaa
push
pop
leave
add
or
dec
pushf
add
dec
dec
div
cmps
and
lods
repnz
push
mov
sub
loop
and
ret
sub
inc
repnz
push
enter
jns
cmp
stc
pop
stos
fs
sub
push
jnp
fldenv
pop
bnd
push
mov
cmc
xor
mov
pop
sbb
cmp
xor
adc
push
mov
inc
call
les
sub
ins
daa
add
inc
rol
pop
cld
in
jmp
adc
sbb
pop
rcr
pop
in
jnp
or
lods
push
jl
movs
fwait
xchg
sbb
sbb
and
cmps
mov
mov
lock
js
imul
xor
push
or
or
adc
mov
cmp
(bad)
fcomp
and
les
mov
mov
(bad)
dec
jns
inc
movs
jp
mov
jge
retfw
aas
mov
inc
inc
push
xchg
(bad)
mov
push
fldenv
dec
mov
xchg
xchg
test
out
loopne
jns
push
scas
push
jecxz
enter
fisubr
std
sahf
test
(bad)
scas
jb
mov
outs
push
pusha
mov
std
inc
in
adc
mov
rcr
and
aam
cmp
push
ds
in
icebp
adc
push
xchg
push
add
and
jg
push
test
sub
(bad)
loop
loope
xor
int
inc
push
or
test
xor
cs
inc
enter
adc
retf
sub
cmp
and
push
ss
jo
mov
pop
movs
test
addr16
or
call
add
push
xchg
adc
pop
ret
jle
lock
sbb
jmp
push
push
js
movs
mov
int
and
mov
imul
mov
and
mov
adc
pop
dec
cwde
test
mov
repnz
inc
adc
pop
pop
mov
push
arpl
aaa
add
popf
repz
sub
mov
and
inc
daa
rcr
xor
cmp
inc
mov
cmp
mov
clc
cmp
gs
adc
jne
add
fs
fmulp
push
cmp
push
sub
setge
std
inc
xchg
loopne
(bad)
sub
data16
sub
retf
xchg
inc
punpckhdq
ins
push
repz
ror
test
sbb
fistp
cmp
sar
xor
mov
push
jno
or
lods
fld
pop
sar
fidiv
pop
dec
popa
popf
adc
cmp
(bad)
dec
repnz
mov
dec
sbb
xchg
(bad)
push
out
cmps
repnz
jne
mov
xor
addr16
cli
int
test
sbb
scas
lods
loop
ds
mov
push
xchg
mov
sbb
pop
mov
int3
rol
fmul
mov
sbb
loop
mov
mov
and
and
outs
dec
leave
(bad)
in
js
pop
sbb
push
mov
inc
inc
push
lahf
and
div
dec
cmp
dec
jge
add
xchg
sub
dec
sbb
pop
loope
dec
icebp
movs
push
fs
xor
cmp
jecxz
sar
nop
shl
ss
and
(bad)
(bad)
rcr
movs
mov
(bad)
push
mov
shr
mov
and
adc
lods
sbb
push
aam
push
push
(bad)
jmp
rcl
jl
cmp
jae
xchg
push
lahf
pusha
adc
adc
inc
stos
movhlps
jmp
push
pop
jmp
adc
inc
movs
jnp
xor
mov
cmps
jle
inc
ss
std
xchg
pusha
icebp
xchg
fdivr
sub
test
xchg
call
ins
xchg
mov
out
cmp
mov
idiv
sti
ins
call
imul
pop
xchg
rol
push
pop
lahf
cmp
pop
pushf
aam
xchg
mov
mov
ja
xchg
pusha
fstp
sbb
pop
pop
xchg
lods
and
(bad)
dec
cmp
fcmove
push
movs
fist
mov
(bad)
mov
shr
bound
xor
jo
pop
jo
dec
jnp
jecxz
sbb
or
mov
dec
cli
iret
repz
inc
inc
js
push
enter
inc
nop
(bad)
out
mov
sub
punpckhbw
mov
mov
xchg
add
arpl
nop
lea
fcmove
shr
pop
and
push
pusha
jmp
and
rol
jge
bound
movs
pop
test
int3
aas
fbld
call
ror
mov
inc
and
(bad)
arpl
enter
adc
mov
clc
mov
loopne
push
ins
and
pop
and
cmc
sub
mov
push
fcom
retf
retf
xchg
scas
jl
(bad)
ds
ficomp
fld
test
jecxz
aam
sbb
inc
pmullw
sahf
pushf
stc
pusha
loopne
dec
add
jbe
pop
mov
push
xor
repz
cmps
ret
das
cmp
lock
jbe
sub
addr16
inc
call
rol
xchg
call
sbb
sbb
jbe
dec
fs
and
mov
pop
jb
sbb
pusha
jne
mov
stos
sbb
adc
mov
stos
or
inc
je
fwait
xchg
clc
mov
js
cmp
sbb
push
cld
push
jnp
or
and
and
or
mov
cmp
shr
fbld
dec
or
and
adc
test
jp
push
clc
shl
xor
ins
movs
call
pop
shl
repnz
gs
inc
mov
lock
ins
test
inc
cmps
xchg
pop
push
and
and
mov
into
fidiv
sub
int3
lds
lock
cmps
jmp
into
sbb
push
jb
movs
cs
mov
jnp
pop
sbb
push
fsubr
cmp
jp
lahf
dec
sbb
inc
xor
fs
or
mov
dec
in
mov
add
xor
into
je
rcl
test
popa
pop
pop
scas
xor
test
cmp
stc
sub
jns
xor
and
lds
out
fwait
hlt
std
shl
inc
fisttp
scas
pop
enter
push
jp
mov
add
sub
sahf
movs
sbb
imul
hlt
addr16
sub
lea
add
dec
jge
mov
mov
mov
int3
adc
inc
push
fxch
cmps
cmp
jp
call
leave
cmp
add
dec
retf
push
scas
out
pop
add
dec
jmp
sti
jp
fst
clc
popa
mov
movs
retf
add
push
mov
push
sub
cld
jne
mov
cwde
pop
inc
jno
sbb
sti
mov
cli
mov
xchg
mov
ins
xchg
or
cmps
and
ja
(bad)
cmc
or
jmp
jl
inc
gs
hlt
adc
lods
add
mov
scas
or
mov
fld
push
repz
pop
sbb
jns
ins
mov
test
and
sbb
cmp
push
gs
stos
icebp
(bad)
loopne
pop
xlat
pop
clc
jecxz
pushf
sub
xchg
inc
jge
push
push
retf
stc
or
fmulp
pop
mov
pop
(bad)
mov
mul
pop
fist
add
pusha
jne
mov
mov
call
sti
xchg
sbb
mov
ins
(bad)
and
jp
and
inc
cmp
dec
fist
mov
mov
test
add
dec
data16
int3
(bad)
mov
arpl
xchg
scas
mov
mov
and
call
xchg
mov
sub
push
in
(bad)
mov
adc
shl
ins
push
push
mov
(bad)
jnp
clc
mov
cmp
push
mov
add
outs
sbb
mov
iret
ins
jg
(bad)
mov
ret
jp
out
inc
repnz
ins
js
xchg
jle
push
sar
jp
mov
sub
jns
scas
or
xchg
inc
jl
nop
lods
inc
fadd
(bad)
dec
mov
ret
std
inc
xchg
sbb
stos
out
sbb
inc
dec
pop
mov
pop
rol
or
mov
and
xor
sbb
repnz
sub
cmp
out
jne
cwde
sub
push
inc
in
push
ret
shl
cmc
push
add
jne
in
mov
mov
je
test
xor
das
popa
mov
adc
cdq
scas
aam
sub
pop
push
je
mov
xor
fdiv
add
movs
ss
out
adc
and
cmp
lea
shl
pop
sar
dec
pop
(bad)
mov
jnp
mov
sti
xchg
aaa
bound
xor
pop
jp
pop
rcl
lock
adc
lds
movs
test
pop
in
test
mov
pop
cmps
mov
inc
and
fwait
lahf
div
push
xchg
inc
cs
mov
cmp
pop
and
push
xchg
cmp
cs
xchg
jno
loopne
pop
dec
js
fbstp
xchg
cmps
jmp
jmp
lds
pop
cld
movd
fild
(bad)
jae
pop
mov
adc
mov
xlat
xchg
(bad)
int3
scas
icebp
movs
jmp
mov
div
es
pop
add
dec
jne
cmp
mov
dec
ins
xor
ret
(bad)
jns
fsubr
psrld
xchg
add
clc
mov
jmp
sub
mov
add
jmp
push
iret
inc
mov
stos
mov
loope
inc
test
inc
pop
xlat
mov
mov
xchg
lods
inc
cmp
and
std
in
shl
inc
xor
inc
std
dec
and
repz
fcmovbe
jnp
rcl
fdivr
popa
ja
aam
fst
mov
test
push
push
cmp
push
dec
lea
cmp
push
push
add
call
stos
cli
fistp
push
nop
jb
je
xor
fld
jnp
jl
int
rol
repnz
mov
pop
push
xchg
popf
test
sbb
call
push
repnz
mov
call
and
ficomp
push
mov
dec
imul
mov
xor
cmp
dec
sahf
push
xor
pushf
(bad)
fidivr
push
pop
adc
aad
enter
xchg
pop
adc
push
fs
ja
sub
xor
adc
jl
push
jg
sti
sub
stos
sub
xchg
scas
xchg
push
sbb
clc
ret
mov
xchg
(bad)
into
icebp
mov
cmp
and
out
call
jb
push
ins
mov
enter
pop
jb
into
sub
sub
mov
cmp
adc
jmp
imul
inc
stos
or
das
add
retf
lea
mov
(bad)
sbb
pop
f2xm1
nop
add
aad
je
les
fldcw
popa
mov
jge
rcl
rcr
sbb
div
call
dec
out
test
pushf
jns
dec
sbb
leave
stos
xchg
in
pop
lahf
fnsave
inc
sub
sbb
add
push
sub
jge
inc
jp
jns
hlt
pop
xchg
jl
inc
mov
(bad)
and
iret
mov
or
mov
or
sahf
bound
adc
mov
lea
pop
push
jle
pop
xchg
add
into
sub
and
ins
lods
jge
cmp
dec
pop
xor
dec
shl
pmullw
dec
jb
mov
xchg
or
iret
dec
xor
das
ds
shl
js
or
fisttp
out
push
xor
jp
dec
test
xor
test
cmp
add
mov
add
shl
adc
push
mov
mov
pop
inc
inc
jecxz
sub
cwde
mov
mov
push
adc
ffreep
pop
je
ret
je
call
mov
sbb
mov
and
jmp
jp
cld
(bad)
cld
(bad)
loope
dec
jb
sbb
lock
ins
mov
xor
lahf
popf
mov
dec
cmp
pop
out
xchg
lock
mov
rcr
dec
dec
aam
call
xor
mov
add
fsub
in
inc
movups
loope
lods
repnz
rcr
and
sub
stos
fnstcw
pop
into
or
xchg
out
(bad)
cmp
push
rol
ret
adc
arpl
ds
push
out
jno
jno
jae
sbb
adc
mov
or
cld
es
pushf
add
test
enter
push
sub
js
imul
scas
outs
dec
or
adc
mov
lods
mov
lahf
repz
xor
(bad)
outs
cmp
sub
out
clc
xchg
or
or
das
xchg
repz
xchg
mov
dec
mov
jmp
jae
push
retf
pop
aaa
les
imul
lock
pusha
sbb
and
(bad)
js
inc
ja
lahf
xor
adc
in
fdiv
mov
add
mov
outs
dec
jmp
mov
pop
sub
xor
fadd
inc
loopne
stos
adc
mov
xor
jle
data16
mov
nop
nop
je
lods
int
in
pusha
jo
out
outs
rcr
jle
arpl
mov
jle
jb
add
mov
into
ins
xor
jge
stc
or
and
into
xchg
test
dec
jns
bound
sub
and
xor
push
retf
lods
test
dec
aas
cmp
popf
lock
push
cmp
adc
popa
sub
xlat
cld
sbb
xchg
xchg
xchg
(bad)
and
push
shr
fistp
mov
dec
cmc
mov
mov
pop
iret
dec
sbb
xor
mov
push
sub
scas
je
cmp
mov
jl
scas
stos
les
cmps
cmp
cmp
inc
pop
aam
push
and
fisubr
ins
movs
add
push
stos
or
push
inc
xchg
sbb
dec
sub
aas
xchg
jo
add
into
mov
and
ret
into
stos
push
lods
xor
dec
jae
push
stos
popf
pop
inc
div
dec
xchg
movs
jg
sbb
mov
cmc
popa
cli
icebp
and
push
rol
daa
cwde
and
js
push
jne
(bad)
sub
(bad)
lea
inc
outs
sub
icebp
call
rol
xchg
and
and
aas
push
inc
jp
loopne
xor
std
cmp
mov
pop
xlat
lods
shl
mov
pusha
push
xor
out
test
scas
or
idiv
add
xchg
add
(bad)
xor
pop
cdq
cmc
jns
rol
xor
mov
ret
call
mov
fidiv
clc
inc
aam
addr16
sbb
mov
jno
outs
mov
cwde
adc
mov
(bad)
sti
shr
(bad)
adc
fs
stc
add
fcomp
xchg
fist
xchg
mov
or
push
enter
call
jmp
pop
cmp
jp
out
lahf
mov
add
xchg
ror
scas
sti
in
cdq
mov
mov
fild
inc
popf
and
dec
aam
fcmovbe
and
push
mov
cmp
jne
mov
xchg
mov
push
mov
(bad)
xor
out
int
sbb
aas
shl
gs
mov
add
pop
nop
jns
xor
mov
jecxz
in
xchg
jno
scas
mov
jecxz
jbe
adc
add
jp
das
cdq
sub
int
cli
pop
push
enter
ret
and
pop
je
pop
call
cmp
or
mov
std
cmp
stc
push
test
cmp
ss
or
xlat
out
ret
xchg
out
or
lea
pop
add
adc
pop
jnp
xor
scas
xor
stc
es
cmp
fiadd
jne
popf
cmps
inc
out
mov
iret
push
sti
addr16
cmp
movs
or
cdq
mov
pop
(bad)
pop
inc
push
fwait
or
retf
mov
es
mov
jmp
fisubr
test
aaa
pop
stc
in
rol
test
pop
mov
cs
movs
loop
int
or
push
imul
aaa
dec
inc
and
pop
data16
mov
loope
mov
xchg
jecxz
xor
shl
or
jo
stos
dec
mov
or
push
ret
jns
and
xor
dec
fdiv
push
outs
mov
push
lock
add
xchg
lock
mov
fiadd
pop
sbb
adc
aaa
mov
jp
and
lods
pop
pop
test
jne
test
xor
inc
popf
icebp
or
add
push
mov
mov
inc
xchg
xchg
cmps
cmp
shr
add
ja
out
add
push
xor
mov
xchg
nop
inc
das
inc
in
xchg
inc
pop
add
rcl
add
loopne
les
add
mov
xor
cwde
cmp
xor
int
sbb
dec
test
jecxz
push
push
es
jg
xor
mov
cmps
fs
push
push
jle
push
mov
clc
adc
test
fstp
sti
fild
pop
adc
out
push
(bad)
jp
xor
pusha
fstp
fild
gs
ja
jae
aaa
mov
ds
je
and
popa
repnz
pop
fidiv
shr
enter
ss
lds
(bad)
xchg
stc
(bad)
mov
repz
sbb
jnp
sbb
or
push
aam
sbb
jle
xchg
sub
inc
push
pop
cmps
sbb
shl
push
mov
popa
je
ja
(bad)
sar
(bad)
mov
(bad)
adc
movs
push
adc
ins
push
mov
in
jp
inc
or
mov
xlat
pop
xor
call
jl
imul
xlat
sar
sub
pop
ja
in
aam
enter
push
lods
cmc
dec
retf
scas
push
rol
pop
fs
push
aad
leave
inc
xlat
push
mov
movs
scas
jno
aam
xor
int
push
xchg
inc
mov
add
out
ret
into
and
dec
or
scas
sbb
fldcw
sbb
dec
outs
or
inc
shl
mov
adc
xor
or
es
mov
sub
(bad)
inc
adc
or
loope
pop
retf
ja
or
(bad)
and
out
and
mov
aas
adc
shl
jg
not
mov
mov
loop
adc
adc
dec
jae
cmp
mov
and
ror
sbb
push
pop
fisubr
icebp
dec
inc
adc
cmps
pop
sbb
mov
sub
fist
push
fldenv
cmp
dec
(bad)
ins
mov
cmp
add
xlat
push
clc
inc
loopne
jne
mov
sub
adc
test
in
popf
dec
cmc
iret
mov
mul
aaa
rol
ins
jo
xor
adc
sbb
xchg
jns
inc
push
movs
mov
leave
lds
xor
jecxz
and
inc
mov
cwde
ss
out
pop
mov
cwde
dec
inc
sub
mov
xor
lahf
out
sbb
dec
jecxz
cmp
pusha
add
mov
cmc
xchg
pop
in
mov
das
leave
mov
fstp
dec
mov
aam
or
mov
int
and
daa
jecxz
movs
push
movs
xlat
lahf
mov
aas
adc
ror
imul
aas
jl
or
int3
jp
imul
dec
sub
mov
add
outs
lods
jmp
bound
add
pusha
mov
dec
movs
push
in
and
rol
push
pop
repz
cdq
les
lds
mov
pop
cmps
and
sahf
mov
xor
cmp
inc
ret
pop
imul
fidivr
mov
aam
sbb
test
mov
stos
ja
out
or
rol
cmp
ins
and
mov
mov
cli
and
xchg
cli
or
mov
retf
xchg
add
adc
iret
call
xchg
add
(bad)
ins
mov
xlat
pop
pop
cmps
mov
enter
(bad)
jnp
es
push
(bad)
dec
xor
sub
jmp
cwde
retf
sub
sbb
repnz
add
outs
cwde
cmp
add
dec
or
jmp
(bad)
dec
jnp
(bad)
mov
imul
(bad)
sub
fs
popf
dec
rcl
or
leave
(bad)
dec
iret
jo
loop
(bad)
in
jbe
inc
push
xchg
fcom
sbb
dec
jne
sub
dec
mov
lds
jg
push
rcl
fdivr
iret
pop
mov
pop
xchg
scas
repz
je
out
in
cmp
out
pusha
and
cmc
ss
pop
adc
push
arpl
add
in
pop
iret
js
hlt
or
inc
sar
or
nop
xor
(bad)
fsub
ja
inc
lods
mov
ja
jmp
test
out
sub
in
pop
cwde
xchg
scas
add
xchg
pop
inc
test
push
sti
out
sahf
cmp
data16
xor
cmp
addr16
xchg
fsub
cmp
or
jle
mov
inc
cli
push
out
fmul
scas
add
mov
pop
push
icebp
pop
add
sbb
loopne
pop
push
(bad)
jge
sbb
fisub
iret
hlt
adc
test
test
out
and
xchg
mov
cmp
xchg
cmps
mov
inc
stos
sub
xor
mov
push
inc
xlat
lods
shl
adc
mov
shl
pop
push
cmp
inc
and
mov
mov
cmp
jb
retf
cli
inc
adc
mov
clc
jb
sbb
cmps
jge
repnz
bound
add
sbb
in
or
push
push
(bad)
jmp
mov
fidivr
imul
sahf
push
test
fwait
jns
pop
jmp
fwait
mov
mov
jle
pop
outs
mov
shl
push
xchg
pop
in
jae
jb
mov
retf
cmc
shl
dec
pushf
nop
iret
push
loopne
fcomip
(bad)
out
sub
rcr
dec
arpl
mov
or
call
mov
adc
test
scas
jns
jmp
jecxz
retf
aad
sub
dec
retf
js
ja
sbb
jmp
retf
pop
fmul
hlt
mov
push
fistp
lods
mov
rcr
sbb
sub
or
fnsave
sar
outs
call
pushf
or
or
mov
pop
fs
ja
cmp
scas
sbb
dec
das
arpl
pop
leave
jae
sbb
push
pop
push
jecxz
push
and
out
sbb
jnp
in
xlat
(bad)
jae
jmp
mov
or
psrlw
ror
xor
(bad)
cvtdq2ps
jle
pop
rol
cmc
and
mov
jg
lods
lea
mov
mov
inc
bound
sbb
ins
inc
or
cmp
stos
cwde
ret
jge
xchg
or
xor
adc
inc
pop
nop
rcl
sub
mov
xchg
fisttp
data16
lods
pop
push
addr16
pop
push
scas
fimul
dec
xor
mov
jle
js
leave
lahf
pop
ficomp
int
fwait
das
iret
or
push
cwde
cmp
sub
jp
add
pusha
ss
cmp
inc
ins
add
jnp
sbb
adc
dec
dec
call
aam
xor
sti
pop
or
cmp
gs
sub
fld
or
mov
or
jns
add
push
stos
cmp
mov
mov
rol
dec
mov
sahf
and
sbb
jp
cwde
push
call
jo
push
ss
pop
push
aas
dec
push
int3
imul
sbb
call
aad
ret
repnz
xor
test
out
mov
mov
and
lock
jge
or
stos
cmp
jae
dec
dec
push
fadd
out
mov
fbstp
push
mov
cmp
jnp
jnp
dec
jne
and
in
add
or
inc
mul
mov
xchg
xor
mov
xchg
xchg
cmps
lods
pop
scas
addr16
push
xchg
loopne
add
add
cmp
in
jno
and
scas
(bad)
dec
int
inc
bound
test
out
fcom
dec
cmp
push
adc
pop
je
in
inc
movs
push
jp
outs
adc
mov
daa
(bad)
loopne
and
or
mov
push
je
xchg
call
cmp
retf
mov
mov
(bad)
(bad)
xchg
fs
lock
call
data16
data16
pop
mov
xchg
shr
pop
sbb
xchg
popa
xchg
pop
cmp
cmc
aad
pop
pop
push
push
mov
ret
fsubr
cwde
retf
shl
cs
inc
sbb
test
popf
ror
pop
sub
mov
xor
js
stos
jbe
cmp
stos
fs
mov
pop
jnp
push
jb
dec
jbe
adc
mov
pop
add
xor
xchg
aam
and
cmp
sub
adc
movs
call
cmps
dec
mov
test
adc
(bad)
dec
in
jg
daa
xor
push
ins
or
mov
push
cmp
iret
xchg
lds
mov
xchg
mov
add
icebp
iret
and
push
or
imul
dec
std
test
sub
mov
icebp
inc
mov
pusha
je
pop
inc
xor
xchg
sub
je
ins
xor
retf
mov
das
movs
(bad)
adc
inc
dec
mov
int3
aad
in
ja
add
jae
xchg
push
aam
mov
call
pop
into
jb
outs
inc
movs
xchg
ss
div
clc
push
out
shl
into
add
or
or
mov
inc
lods
cmp
jg
iret
sysenter
add
ss
sub
retf
mov
add
js
movs
cmc
fimul
mov
inc
cwde
lods
jmp
and
sbb
test
or
and
mov
test
aad
mov
pushf
mov
sti
xor
add
out
cwde
sbb
mov
push
(bad)
data16
pop
or
je
iret
mov
dec
in
or
leave
push
fst
sahf
mov
pop
movs
out
mov
jmp
fdivr
je
das
jns
mov
dec
mov
adc
enter
cmp
outs
(bad)
cmp
mov
cmp
xchg
mov
xchg
jge
mov
cmp
jno
jb
enter
jge
mov
xchg
xor
addr16
jecxz
ret
and
pop
sti
ja
int3
fistp
xor
xlat
into
xchg
or
enter
cmp
dec
pop
(bad)
pop
ja
js
xchg
jmp
push
pop
and
jno
adc
sbb
mov
int3
out
mov
cs
mov
push
xchg
jp
xor
mov
jle
(bad)
xor
inc
test
and
enter
push
iret
pop
call
lds
dec
aaa
mov
mov
out
sbb
mov
adc
dec
mov
fwait
xor
inc
xchg
mov
scas
inc
imul
cwde
sti
iret
inc
jmp
mov
jnp
dec
pusha
pop
int
jns
xchg
scas
mov
iret
test
in
mov
mov
sub
jle
cmps
popf
adc
stc
xchg
xor
inc
arpl
daa
arpl
mov
les
sub
pusha
int
adc
aaa
mov
lods
in
repz
or
js
adc
mov
hlt
mov
gs
dec
ins
call
cwde
clc
add
shl
push
test
cs
pop
imul
sbb
out
jecxz
aas
das
or
out
es
mov
or
jl
mov
cmp
daa
aaa
mov
jno
pop
enter
xor
jmp
xchg
jae
div
cld
push
lods
jnp
dec
xchg
push
jne
pop
pop
or
adc
cld
daa
pop
fisubr
fbstp
stos
dec
test
add
or
add
mov
jp
mov
sti
(bad)
out
xchg
or
inc
mov
nop
dec
push
adc
ss
add
mov
push
dec
jae
add
std
aas
aad
std
sbb
cld
fwait
cmp
cs
adc
out
pop
mov
pop
int3
mov
push
jg
jle
xor
inc
or
push
pop
push
cdq
cmp
xor
cmp
mov
inc
scas
pop
cmp
mov
cmps
xor
je
xchg
test
ins
cmp
sbb
mov
sub
jmp
rol
lods
xor
push
add
test
xor
outs
inc
pop
push
(bad)
add
and
loope
out
mov
retf
mov
mov
jns
sar
icebp
int
in
sbb
out
or
jae
xor
sbb
inc
lods
sbb
retf
stos
xor
dec
and
pop
xchg
or
xchg
clc
add
and
lahf
dec
fmul
cld
cmc
mov
ret
inc
jp
(bad)
cmp
loop
xor
pushf
mov
push
iret
xchg
pop
movs
pop
out
fmul
rcl
mov
dec
rcl
rol
gs
ins
in
imul
fwait
xchg
pusha
mov
nop
mov
dec
ja
jmp
call
test
loope
push
mov
stc
imul
pop
adc
in
iret
repz
xchg
dec
sub
(bad)
push
ret
or
lock
inc
data16
or
sub
test
clc
into
inc
sbb
and
sbb
aaa
aas
jmp
mov
hlt
or
addr16
bound
int3
pop
es
mov
and
pop
mov
xchg
adc
push
lods
sbb
es
ds
je
push
call
cmp
xor
gs
and
outs
movs
mov
nop
jnp
pop
in
rcr
push
mov
popf
fnstsw
pop
fs
jge
cld
dec
add
sub
mov
cmp
js
pop
jmp
popf
or
jl
(bad)
aam
xchg
and
repz
sti
pop
call
sub
lods
jo
or
mov
mov
mov
inc
xor
push
inc
ja
mov
fnstenv
sub
mov
pop
in
mov
icebp
push
sub
test
cmp
and
cmp
ret
retf
addr16
cwde
cmps
out
in
push
inc
fwait
or
pushf
stos
loope
test
(bad)
cld
loope
pop
or
leave
int3
inc
inc
imul
xchg
add
ja
das
arpl
stos
int
mov
or
mov
or
push
sbb
adc
push
in
outs
mov
int
or
in
xchg
mov
call
mov
addr16
fld
rcr
mov
inc
lods
mov
sub
sbb
icebp
adc
sub
pop
jp
gs
pop
sti
jg
or
rcr
scas
jl
pop
cld
mov
cdq
mov
or
xor
(bad)
out
dec
dec
xchg
or
test
loopne
movs
bound
dec
in
pop
das
xor
scas
(bad)
fcmovb
mov
clc
mov
outs
adc
fldenv
data16
ret
imul
jg
xchg
(bad)
ins
sbb
stos
xor
mov
dec
ins
xor
xchg
add
dec
mov
xor
(bad)
mov
add
mov
push
sahf
gs
inc
xor
repnz
mov
psubd
aas
jno
ret
je
push
mov
and
in
call
pop
jmp
cld
mov
nop
call
xor
in
push
addr16
mov
inc
hlt
aad
xor
(bad)
aam
pop
ins
lahf
jp
xchg
push
mov
fwait
mov
std
scas
and
cmp
inc
mov
test
push
cmps
pop
ret
jmp
jae
lahf
add
loopne
scas
je
(bad)
outs
movs
adc
add
xor
add
mov
pop
mov
jl
cmc
movs
lds
cmp
mov
pusha
ins
faddp
test
in
fwait
sub
sub
retf
jge
jg
push
(bad)
mul
into
cmp
es
jne
int3
ret
movs
inc
das
push
out
in
ins
mov
cmp
inc
mov
mov
mov
cld
mov
rcl
xchg
jns
fwait
cmc
icebp
or
jnp
fwait
mov
sar
jg
xchg
inc
add
rcr
cmps
pop
or
dec
sahf
(bad)
scas
xchg
mov
loop
sub
or
and
xchg
or
ds
inc
test
sub
test
dec
pop
in
mov
(bad)
jp
or
ret
cmp
add
mov
mov
push
mov
adc
and
inc
xchg
scas
popf
cmps
arpl
adc
sar
adc
iret
xchg
sbb
jl
ficomp
popa
or
sbb
dec
or
sub
std
cs
sub
aam
scas
xchg
fwait
adc
xchg
mov
jle
js
push
or
cmc
fld
retf
inc
dec
mov
and
xchg
mov
aam
popa
jmp
fcmovnb
test
loopne
and
jo
dec
out
jb
xchg
mov
out
in
or
imul
div
pop
sahf
xchg
nop
das
mov
lock
adc
pop
adc
cld
xor
aad
jmp
mov
ins
or
sub
inc
scas
cld
imul
cwde
fcom
daa
loope
bound
xchg
les
ins
out
loop
inc
jnp
gs
pop
mov
adc
pop
loope
repnz
fimul
pop
daa
in
pusha
mov
push
inc
test
pop
mov
test
imul
jmp
push
loopne
mov
fdiv
idiv
mov
je
mov
lods
mov
fbstp
loope
sbb
das
imul
jp
and
pop
mov
xor
mov
jae
or
xor
das
or
ror
jmp
xor
jp
pop
or
and
bound
dec
push
retf
mov
or
addr16
mov
cs
ret
inc
(bad)
aam
sub
add
xor
aad
repz
out
out
aaa
mov
shl
sbb
xor
cwde
or
test
test
nop
rcr
into
pop
stos
nop
shl
out
sub
shr
and
cmp
aaa
out
xchg
add
add
push
pop
and
(bad)
rcl
xchg
(bad)
sub
mov
mov
fcomp
push
cmps
cs
adc
jmp
xchg
pop
or
enter
cmps
inc
pop
cmp
out
inc
daa
dec
call
call
jmp
aam
jmp
(bad)
retf
jns
loop
dec
or
out
mov
push
loopne
cmc
sub
jb
mov
mov
ret
jnp
shl
loope
loope
ins
call
jae
ss
out
push
loopne
aaa
jns
std
inc
mov
dec
add
jmp
rol
mov
jg
and
xchg
mov
pop
(bad)
scas
rcl
out
sbb
jae
mov
inc
ins
ret
cld
pop
jecxz
fcomp
loope
jne
in
mov
fnsave
mov
enter
xor
mov
sub
nop
cwde
sub
xlat
jns
inc
fisttp
dec
adc
enter
sahf
repnz
dec
loope
cdq
sahf
pop
outs
shl
setp
cmps
sar
dec
sub
(bad)
in
call
aaa
cld
dec
dec
repz
sti
(bad)
addr16
jmp
rcl
popa
or
addr16
imul
mov
stos
jg
movs
outs
cmc
mov
inc
sbb
frstor
inc
cmp
pop
add
jge
stc
ins
add
push
ficomp
pop
pusha
stc
adc
jae
xor
mov
sar
(bad)
js
inc
or
bound
cmp
adc
sbb
imul
in
sbb
js
(bad)
dec
add
enter
sub
mov
sbb
gs
popf
xchg
cmp
fwait
xchg
fwait
imul
enter
test
pop
int
fild
cmc
push
and
(bad)
fist
and
mov
jp
jo
adc
in
out
dec
fwait
(bad)
mov
aad
jmp
js
xor
repz
jae
mov
and
jbe
mov
std
icebp
sub
jecxz
shr
aad
mov
sub
ins
jp
(bad)
jno
and
clc
cmp
in
repz
mov
out
jnp
cmp
lahf
out
add
out
ds
loopne
ja
xlat
pop
int
fst
mov
mov
aaa
mov
dec
and
les
aaa
inc
jns
fs
dec
sbb
xchg
dec
ins
shl
fistp
cld
sbb
(bad)
aad
call
jp
jmp
inc
(bad)
int3
mov
lds
aam
popf
sub
cmp
pusha
call
mov
loop
pushf
cmp
sbb
xchg
xor
les
adc
add
pop
arpl
mov
mov
and
(bad)
pop
or
fst
cmp
arpl
jns
xor
adc
push
int
out
sub
(bad)
adc
mov
icebp
inc
push
cmp
clc
fstp
sub
data16
xchg
daa
and
sub
mov
pand
sub
mov
xor
xchg
inc
and
div
aam
cwde
sbb
test
pushw
cmc
push
push
xor
pop
movs
loope
stos
and
in
xchg
fadd
scas
push
mov
movs
cwde
test
imul
push
sbb
inc
xor
aaa
add
sbb
fwait
xchg
pop
jmp
hlt
push
pop
adc
aaa
dec
push
push
sbb
push
nop
jns
ins
xchg
xor
out
and
xchg
or
push
adc
pushf
xlat
les
cmp
xchg
call
sub
es
in
mov
jno
into
and
xor
push
and
or
pusha
rol
inc
jg
pop
(bad)
out
mov
scas
movs
in
dec
mov
pop
outs
cwde
push
add
and
daa
xchg
cmc
vmovntpd
retf
test
icebp
or
adc
push
mov
or
ror
jbe
jmp
sub
fstp
movs
addr16
shr
test
int
jb
mov
sbb
and
mov
stc
dec
sahf
cmc
(bad)
call
push
shl
add
fcom
and
lock
iret
imul
sub
bound
in
jmp
mov
pop
sub
les
cmp
es
inc
lods
inc
retf
and
hlt
dec
xchg
dec
test
pop
jne
into
cmc
test
jne
push
mov
outs
push
inc
leave
mov
pop
clc
mov
cmps
inc
inc
repz
int
add
les
lea
(bad)
xchg
xchg
xchg
or
xlat
add
mov
push
sar
inc
les
xor
jecxz
dec
sbb
push
xlat
sbb
jae
add
nop
sub
sub
and
cwde
sub
into
cmp
cmp
xor
inc
fs
(bad)
aaa
shr
movs
cwde
mov
and
ins
ds
jecxz
adc
push
fidiv
pop
jo
loop
jae
adc
lock
push
lods
sbb
(bad)
hlt
daa
mov
retf
(bad)
std
pop
inc
dec
aas
inc
dec
jmp
stos
sbb
sub
jo
movs
fstp
in
je
or
ins
dec
cmp
fnstenv
sbb
cmp
pop
xor
popa
add
xor
sbb
mov
cld
sub
pop
mov
sub
mov
inc
mov
fmul
cmp
mov
cld
mov
leave
loope
repnz
call
xor
rcl
lods
sub
aad
mov
in
push
xor
and
or
out
(bad)
mov
stos
(bad)
jle
cmp
xchg
test
mov
out
inc
adc
ror
pop
mov
hlt
imul
out
sar
arpl
lds
adc
mov
mov
ss
jb
in
mov
xor
pop
add
and
xchg
stc
js
push
(bad)
test
(bad)
fcmovbe
loope
std
pushf
ins
sub
aas
push
stos
mov
mov
loope
xchg
jns
xor
sub
and
lods
dec
call
aas
hlt
test
mov
hlt
in
adc
jg
and
add
jg
ror
add
inc
fistp
pop
retf
ins
cmp
xchg
imul
xor
mov
mov
into
(bad)
arpl
inc
fisub
cwde
call
leave
fs
mov
pusha
loop
jmp
and
ret
push
mov
das
inc
or
lock
dec
lahf
nop
push
mov
fadd
addr16
(bad)
js
add
mov
lahf
pop
mov
inc
xor
jns
mov
lds
lds
push
pop
cli
inc
imul
xor
mov
ror
add
mov
retf
dec
mov
iret
cmp
rcr
mov
div
sbb
push
dec
fst
scas
xor
mov
fcom
dec
sub
int
fs
mov
xlat
das
sub
mov
mov
push
push
ret
add
int
imul
mov
add
ficom
mov
daa
imul
jmp
mov
sbb
and
sbb
mov
adc
iret
les
jmp
push
hlt
dec
cmp
out
jae
stos
or
xor
sbb
popf
repnz
mov
cmp
xor
dec
loopne
movs
ins
add
jnp
adc
mov
test
test
fdivr
loope
pop
add
mov
sub
retf
mov
cmps
push
mov
fmul
cmp
lahf
mov
call
and
sbb
dec
dec
aam
and
inc
lea
repz
cmp
sub
push
cmp
mov
movs
repnz
mov
inc
jmp
jnp
out
aam
int3
in
push
stos
clc
mov
mov
stc
or
add
xor
dec
int
int3
repnz
jb
js
jl
dec
mov
xor
aas
xchg
lea
sub
cmp
inc
cdq
xchg
in
stos
cld
dec
pop
shl
imul
sub
das
jmp
mov
ins
out
bound
loope
ret
cli
sbb
xchg
ret
fwait
ret
jmp
cmp
cmp
into
(bad)
adc
and
push
std
add
sub
fbld
adc
jno
jns
out
popa
jle
add
jns
mov
shl
mov
lods
inc
movs
or
lea
push
cmc
sbb
mov
pusha
xor
das
sbb
or
push
test
ret
sbb
retf
pop
push
push
pop
(bad)
mov
bound
inc
xor
mov
repz
sahf
(bad)
in
leave
jecxz
(bad)
fadd
sub
pop
(bad)
ja
push
ins
fstp
push
(bad)
test
jmp
enter
sub
call
out
dec
cmps
sub
test
aaa
shr
stc
hlt
sub
jae
pop
jns
cmc
jmp
xor
push
dec
cld
ret
xchg
out
lock
mov
jo
and
xchg
jmp
call
mov
mov
mov
or
mov
pop
add
pop
push
pop
push
dec
fisttp
fdivr
ins
js
call
jae
mov
(bad)
mov
or
arpl
test
out
arpl
leave
mov
in
stc
and
pop
sub
mov
outs
call
pop
mov
push
neg
jno
stc
xchg
out
ret
gs
jb
es
ret
ficom
push
scas
sbb
push
push
inc
jno
sub
add
aad
lds
push
mov
pusha
lods
add
sub
popa
(bad)
adc
mov
cdq
jp
enter
jl
push
push
aad
mov
mov
xor
jne
gs
je
inc
shl
jmp
add
and
dec
xor
mov
into
fsub
mov
stc
movs
test
cmp
mov
ja
xchg
rcl
xchg
daa
push
cli
cmp
jne
movs
das
xchg
fwait
lods
fistp
div
cmp
out
mov
es
mov
sahf
js
imul
pop
stos
dec
mov
ja
mov
sahf
int
ja
movs
jmp
test
cld
mov
aam
sbb
add
loopne
in
cmp
imul
bound
test
and
jo
jle
out
jmp
or
cwde
pop
pop
movs
pop
mov
inc
les
lds
mov
or
pop
jmp
and
loope
call
dec
mov
cmp
sahf
sbb
lea
cli
push
add
mov
or
popf
pop
dec
lds
dec
or
xchg
inc
outs
pop
cli
inc
data16
dec
hlt
int
dec
xchg
mov
dec
dec
push
add
dec
mov
cs
fwait
cmps
fdivr
in
jmp
cmp
sub
add
inc
gs
jp
repnz
pusha
sbb
mov
lods
clc
pop
pop
mov
ins
dec
je
es
mov
sbb
movs
xor
and
jns
ss
mov
std
les
pop
adc
daa
cmps
scas
adc
or
or
pop
or
stc
cld
cdq
call
or
stos
jl
add
cmp
dec
cmp
mov
movs
sub
inc
or
jno
cmp
jge
add
(bad)
cmp
jmp
xchg
or
pushf
push
inc
sbb
fnstsw
add
or
aaa
aad
xor
dec
mov
int
push
xchg
retf
adc
xor
lea
ja
mov
(bad)
sti
stc
jle
jmp
mov
mov
sti
sti
xchg
lahf
or
or
jno
jae
sub
nop
(bad)
or
repnz
scas
out
data16
enter
cmp
or
or
daa
sti
sar
sbb
mov
adc
push
dec
(bad)
or
cmc
imul
or
lahf
cli
jno
call
mov
mov
push
xchg
or
inc
sbb
gs
sbb
scas
(bad)
in
pop
pusha
repnz
loop
test
mov
push
cli
mov
dec
stos
adc
inc
mov
int3
add
test
pop
push
mov
or
and
in
dec
add
cli
cmp
mov
lds
call
sub
push
ins
(bad)
jno
mov
pmullw
retf
clc
and
pop
mov
and
dec
and
mov
daa
dec
cs
fs
out
bound
call
xchg
sub
repnz
pop
push
pop
neg
cmp
sbb
scas
fdivr
dec
push
int
ds
jns
jb
jnp
xor
push
rol
sar
sub
imul
xor
dec
push
sub
outs
add
dec
lods
(bad)
push
jmp
jmp
nop
mov
popf
into
mov
push
retf
xchg
outs
sbb
arpl
mov
jecxz
sbb
stos
movs
dec
sbb
leave
jae
aas
(bad)
cmp
pop
xchg
adc
cld
jmp
inc
les
or
mov
into
retf
cmp
push
sub
or
pop
or
stos
loope
rcr
push
es
jp
jg
add
cmp
inc
add
or
xchg
cmp
jns
mov
ss
mov
out
add
aas
xchg
adc
jae
(bad)
in
jmp
arpl
ret
inc
pop
xchg
test
or
repz
(bad)
aad
sahf
mov
retf
sar
sahf
scas
sbb
cwde
imul
add
cld
pop
jns
inc
test
pop
jle
rcl
xchg
sub
push
dec
mov
mov
out
xor
(bad)
lods
mov
and
xlat
push
xor
mov
nop
jb
jbe
dec
ret
mov
cmp
push
frstor
mov
mov
int3
mov
xchg
pop
inc
add
xchg
ficomp
mov
enter
xchg
dec
js
sbb
imul
mov
and
xlat
cmps
mov
lea
or
into
add
cs
add
xchg
mov
cmc
leave
in
sbb
jmp
and
out
or
hlt
ret
mov
mov
sbb
(bad)
mov
jge
mov
mov
pop
rol
mov
fwait
adc
fimul
xor
sbb
ret
and
inc
fxch
pop
mov
ja
mov
stos
(bad)
pop
mov
lahf
cli
in
(bad)
push
das
jmp
sbb
cli
or
dec
push
and
mov
push
rcr
call
popf
cmps
jo
sub
cwd
icebp
out
movs
fild
fwait
ss
bound
(bad)
xchg
(bad)
js
notrack
leave
iret
clc
fstp
pop
fild
(bad)
inc
dec
inc
push
jle
xchg
arpl
jns
(bad)
int
aad
pop
ret
addr16
enter
data16
movs
loopne
jge
dec
loop
xchg
adc
sub
loopne
(bad)
std
and
out
add
mov
sub
jle
pop
or
loopne
jno
das
ins
cmp
ficom
out
mov
adc
mov
loop
add
sub
xchg
pop
push
and
inc
and
inc
shl
cmps
inc
aaa
sbb
in
hlt
hlt
sub
lea
push
sti
ficomp
push
inc
movs
(bad)
shl
xchg
cmp
push
xor
out
mov
popa
ror
cmps
mov
mov
stos
cwde
(bad)
sbb
das
xchg
cli
aaa
mov
sbb
and
mov
sub
jmp
cmp
ss
mov
pop
stc
ss
mov
jg
fs
dec
enter
push
xor
sbb
mov
push
jb
pop
mov
in
out
pop
xchg
dec
in
push
mov
fsub
sub
fxtract
mov
clc
dec
inc
xlat
ror
sub
sub
test
frstor
sub
sbb
cs
jb
pop
inc
push
std
lds
dec
clc
or
mov
mov
mov
sbb
(bad)
rcr
cs
call
add
xchg
aam
shr
movs
aad
push
cmc
push
ss
pop
sti
out
sub
retf
pop
or
div
xor
jno
pop
dec
pop
xchg
and
loop
loopne
mov
enter
jno
out
xor
lds
add
jecxz
pop
mov
jp
int3
jae
imul
rcr
lods
sti
ficomp
dec
stos
js
inc
enter
ds
call
test
mov
adc
mov
movs
fwait
push
mov
mov
sbb
xor
xlat
jns
in
push
sbb
imul
out
push
jo
cmps
jge
ror
(bad)
lods
xchg
mov
xchg
and
call
push
sub
pop
ror
xchg
sti
loop
lea
add
xchg
push
test
xor
cli
or
dec
xchg
hlt
jno
xor
and
std
mov
movs
dec
dec
push
pusha
rol
sbb
fsqrt
rcr
call
pushf
or
push
sbb
xor
mov
mov
sub
movs
sbb
ror
loop
add
mov
mov
and
pusha
cmp
dec
mov
adc
pop
sub
xchg
scas
pop
pop
movs
inc
sbb
rcr
out
(bad)
jae
dec
mov
cmps
shr
pop
pusha
in
loopne
sub
inc
xor
out
div
mov
lock
pop
jl
jno
call
or
mov
pop
repnz
in
cmp
dec
cmp
cmp
addr16
push
cmp
push
fwait
inc
inc
adc
aad
fwait
std
test
push
imul
xor
jecxz
push
jno
mov
jle
call
mov
pop
sub
stos
pop
arpl
repnz
mov
jecxz
in
nop
in
aad
daa
sbb
js
mov
or
aam
fidivr
rol
fild
mov
sub
stos
int
int
jecxz
mov
cmps
mov
iret
xchg
fld
lock
cmc
or
sbb
(bad)
and
jb
imul
sub
push
jo
lods
xchg
sbb
dec
leave
int3
stos
ret
mov
es
cmp
addr16
fnsave
inc
scas
fwait
push
or
xchg
shr
cwde
mov
xchg
cmps
mov
or
mov
loope
sub
jg
in
fld
and
repz
xchg
gs
sbb
jmp
fsub
(bad)
sub
cmp
fadd
adc
jns
mov
js
mov
js
shl
cmp
fdiv
jmp
dec
or
push
add
(bad)
test
and
call
shl
lods
stos
cmp
mov
sbb
mov
mov
cmps
or
sub
imul
push
and
call
in
pop
push
mov
out
push
fimul
arpl
pop
(bad)
adc
xor
xor
cmps
xchg
nop
xchg
push
mov
aaa
cmp
in
pushf
movs
add
out
push
arpl
out
push
daa
jae
test
push
xor
lea
lock
add
mov
sbb
push
xor
push
loope
adc
arpl
int3
push
jp
jb
int
ret
adc
dec
(bad)
push
sbb
jecxz
mov
repnz
mov
sub
aam
fwait
mov
dec
mov
ror
in
push
stos
test
dec
mov
sbb
(bad)
int
ret
sub
imul
js
xlat
jmp
les
mov
fisttp
dec
mov
out
rcl
fisubr
dec
and
in
mov
gs
add
or
and
pop
add
retf
sub
xchg
outs
xchg
loope
out
call
adc
pushf
cwde
je
sar
pop
sub
leave
xor
test
dec
dec
lods
loope
in
and
cmp
imul
test
(bad)
icebp
xlat
push
inc
lea
rcl
xchg
xor
scas
retf
jo
rol
jmp
mov
sbb
call
adc
xchg
or
aad
mov
clc
cmp
adc
aas
std
out
mov
push
imul
out
test
sbb
add
repz
jmp
cmp
ins
fbstp
mov
pop
push
jae
loope
adc
stos
adc
out
ret
cwde
in
jl
scas
(bad)
sti
xchg
fild
ds
pusha
bound
push
add
test
inc
(bad)
jmp
jmp
pop
jg
outs
loopne
pop
xchg
jmp
fist
fld1
mov
or
push
cmc
xchg
out
inc
retf
cld
xlat
pop
addr16
shl
jle
pop
movs
add
dec
xor
lea
or
or
dec
in
xchg
and
fs
inc
mov
xlat
xor
mov
call
xor
(bad)
les
bound
ins
mov
ds
jno
cmc
shr
pop
into
mov
add
xor
xor
out
fsub
test
dec
mov
jecxz
xchg
in
push
test
and
movs
xchg
nop
pop
dec
ins
push
xor
mov
mov
inc
gs
jl
adc
xchg
pusha
push
mov
outs
adc
jns
sub
fucomip
inc
scas
fnstsw
icebp
sahf
or
cld
pushf
xor
mov
in
daa
cli
movs
cs
pop
xlat
or
mov
ffreep
cdq
idiv
ins
aaa
pop
mov
fisubr
mov
shr
scas
pop
inc
aaa
cmps
in
cld
es
push
test
(bad)
clc
pmaxub
and
sbb
add
test
cmp
sahf
repnz
add
lahf
fstp
or
sbb
idiv
push
je
cdq
dec
sub
dec
dec
mov
jp
cmp
call
cmp
fst
dec
ins
(bad)
nop
dec
or
dec
ja
sbb
out
sbb
out
repnz
xor
jecxz
or
fcom
adc
stos
mov
rol
mov
or
xchg
xchg
popa
jmp
sahf
pop
loopne
fcmovu
mov
test
and
jp
and
dec
rol
and
cli
push
and
pop
rol
stos
xchg
stos
cwde
imul
push
sub
outs
lods
loope
mov
js
push
stc
idiv
mov
mov
scas
xor
hlt
pop
aas
xchg
test
sbb
loopne
add
clc
mov
push
xor
jne
xor
call
xchg
gs
loop
fdiv
mov
out
xchg
data16
js
imul
push
xchg
rcr
cwde
or
or
daa
(bad)
sar
dec
adc
rcr
cmps
stos
shl
mov
dec
mov
mov
mov
outs
or
aam
mov
repz
stos
stos
fdiv
movs
popf
inc
(bad)
iret
inc
jno
int
lahf
sbb
push
retf
inc
jle
cmp
bnd
sub
add
cdq
test
sub
add
imul
push
je
push
pop
shl
test
and
adc
mov
adc
rol
ins
outs
loopne
mov
aaa
fidivr
push
mov
inc
into
xchg
push
xchg
imul
in
clc
push
sar
push
xor
sub
mov
inc
mov
frstor
mov
ret
xchg
bound
adc
ret
adc
inc
inc
jecxz
push
xor
arpl
inc
int
stc
push
mov
add
pop
ret
push
xor
pop
xchg
jmp
cwde
jge
imul
xor
cdq
xchg
adc
xchg
push
inc
fadd
push
mov
jo
ins
cmps
btc
leavew
lods
push
add
mov
call
sub
mov
sbb
mov
test
bound
inc
dec
jp
and
push
mov
js
pop
xor
call
sub
pop
cli
jae
jmp
cmp
int
rep
jmp
ret
or
ja
(bad)
(bad)
pop
mov
mov
xchg
test
sub
bound
add
mov
jmp
mul
leave
sub
xor
or
mov
pop
xor
fwait
imul
jne
popa
sbb
out
cmp
add
jb
(bad)
mov
gs
pop
sub
jl
mov
aas
dec
pop
jge
xchg
inc
xchg
pop
mov
jno
mov
xchg
scas
xlat
hlt
add
xchg
fbstp
xchg
scas
jnp
push
push
sub
arpl
pop
jmp
pop
xor
cdq
cdq
test
stos
sub
test
outs
in
cmps
scas
jl
xchg
jp
sub
test
mov
mov
inc
pxor
stos
sub
sbb
sub
lahf
and
scas
push
pop
pop
mov
adc
movs
inc
cmp
ret
dec
sbb
cmp
jmp
push
adc
js
dec
mov
mov
shl
push
clc
fimul
jmp
xchg
dec
pop
loope
inc
sub
(bad)
and
jge
int
mov
test
dec
loope
bound
mov
pop
loope
sub
ret
inc
in
and
mov
pop
out
iret
jecxz
dec
mov
jg
inc
clc
mov
jnp
mov
jns
stc
into
push
or
jp
(bad)
inc
adc
leave
mov
(bad)
fcomp
arpl
ret
pop
jmp
leave
push
loope
ins
mov
inc
xor
cmps
out
inc
in
jb
clc
sbb
jmp
jmp
push
or
add
xor
in
sub
retf
sbb
mov
mov
fbstp
mov
inc
mov
adc
inc
bound
xchg
test
sar
pop
cmp
fsub
sub
jno
sub
cmp
xchg
test
mov
fmul
mov
test
jo
out
fcmovne
test
pop
xchg
jnp
and
hlt
rcl
cmp
xor
jne
dec
add
ins
xchg
mov
and
xchg
lahf
adc
push
repnz
jp
cwde
int3
movs
lahf
dec
xchg
cmp
and
and
ja
mov
les
lock
aas
std
ret
fild
ja
aam
fsub
data16
pop
clc
sbb
loopne
mov
mov
das
mov
cmp
popf
out
mov
pop
cmp
pop
outs
lods
inc
mov
and
dec
ror
jle
in
shr
in
outs
adc
jl
es
jl
mov
out
xchg
call
popf
cdq
jecxz
(bad)
movs
mov
stc
xchg
cmps
sub
outs
aad
imul
xor
push
out
sub
aaa
dec
dec
sbb
in
jnp
and
ror
cmc
jle
jbe
mov
imul
std
pop
in
rcr
rcr
inc
js
or
in
call
adc
jbe
mov
aam
push
jg
xchg
test
xor
or
sub
pop
sub
sbb
cmc
mov
adc
adc
xor
test
adc
xchg
mov
xchg
cs
jle
outs
movs
std
inc
cmp
idiv
cmp
sbb
mov
cdq
ret
dec
push
push
add
neg
mov
out
xchg
pop
sub
xchg
xchg
stos
adc
loop
jle
shl
out
xor
push
cdq
sub
ror
sbb
pop
(bad)
mov
push
fild
mov
dec
dec
sub
sbb
out
sub
imul
std
mov
retf
jg
sub
sahf
in
and
mov
xlat
sbb
mov
in
push
xlat
xchg
xchg
jp
test
push
sub
push
call
xchg
pop
fldcw
nop
mov
test
hlt
outs
dec
les
fwait
icebp
imul
into
fidivr
loopne
push
(bad)
or
stc
js
(bad)
push
mov
addr16
pop
scas
jle
movs
jmp
fwait
and
mov
sbb
into
imul
ins
call
int
sbb
sub
xor
mov
adc
aas
call
out
dec
mov
shr
inc
cmp
or
pop
and
push
add
lods
out
mov
sbb
pushf
dec
aas
std
aas
adc
cmps
test
mov
dec
pop
dec
je
inc
inc
gs
xor
xor
push
popf
test
mov
popa
lea
popa
aas
ds
and
or
aad
sub
imul
aad
and
jns
fninit
pop
pop
xchg
test
mov
inc
pop
jne
dec
add
stc
dec
dec
xchg
adc
cmp
mov
in
push
mov
mov
scas
mov
dec
int3
and
cli
push
mov
xor
xlat
pop
pop
adc
outs
or
mov
iret
or
fsubr
pop
sub
shl
push
and
and
cmp
fneni(8087
sub
add
retf
dec
int3
cld
sti
sbb
(bad)
mov
ds
aad
push
inc
lods
je
push
stos
adc
jb
ror
int3
sub
sub
push
pop
sub
fisttp
js
mov
aaa
gs
jno
out
push
add
rcr
loope
das
outs
inc
fmul
test
(bad)
mov
mov
sti
lock
rcl
bound
mov
lock
scas
adc
popa
mov
stc
and
es
pusha
out
inc
aaa
fidiv
sbb
cli
test
test
pop
dec
inc
test
jmp
std
jmp
rol
stos
mov
iret
scas
pushf
sti
adc
push
or
mov
ret
fcmovnb
pop
xchg
push
adc
push
sub
daa
sub
xchg
sub
xchg
jle
cmc
mov
arpl
rcr
add
shl
pop
test
aaa
test
pop
fbstp
fld
test
mov
fbstp
and
ret
and
mov
push
dec
scas
ins
jne
imul
jmp
loope
jp
mov
mov
adc
fidiv
add
jns
xchg
fwait
das
dec
dec
pop
les
cmp
or
sbb
cmps
shr
jp
xchg
pop
mov
sti
xor
xchg
adc
cmp
in
mov
or
(bad)
xor
pop
cmp
fld
stc
mov
mov
mov
in
jbe
and
or
pushf
out
jp
ret
or
add
(bad)
cs
xor
(bad)
imul
gs
lock
dec
push
jg
outs
(bad)
gs
and
or
xor
add
inc
cmps
int3
hlt
in
shr
adc
push
clc
sub
inc
das
pop
add
fldenv
mov
sti
mov
into
lock
push
and
jns
loopne
and
int3
dec
inc
or
pop
imul
mov
push
(bad)
daa
iret
jle
shl
push
test
xlat
cs
mov
jg
mov
push
cwde
out
sbb
loopne
je
in
xchg
xchg
jmp
lea
into
nop
pop
or
xchg
dec
xchg
je
cmps
mov
and
xor
dec
mov
mov
inc
mov
mov
ja
or
stos
and
pop
aas
leave
xor
mov
inc
sti
rcr
jmp
pop
les
mov
pop
ret
dec
scas
sbb
in
aaa
xor
mov
jp
iret
jp
xor
push
push
sub
(bad)
and
fsubr
shl
icebp
and
out
xlat
imul
pushf
std
push
and
xchg
sub
test
int
pushf
pop
inc
mov
test
mov
rol
sub
cwde
aam
inc
mov
imul
jo
bound
arpl
add
int3
pop
pop
aam
imul
movs
xor
mov
push
push
inc
and
add
(bad)
aas
inc
cli
mov
push
clc
cmc
xchg
pop
(bad)
cli
jp
push
arpl
rcr
xchg
xchg
ret
sub
inc
push
inc
pop
je
mov
xor
repz
je
loop
imul
mov
lock
(bad)
and
jecxz
imul
jecxz
inc
jbe
adc
sbb
cmp
fisttp
cwde
cmp
(bad)
(bad)
popa
lds
clc
cli
mov
cmp
jb
adc
push
fdivr
mov
jne
fadd
adc
leave
shl
test
ja
shl
outs
xchg
enter
test
cmp
push
mov
aad
test
inc
imul
pushf
retf
pop
push
and
cmp
enter
daa
xchg
adc
mov
xchg
mov
dec
jmp
mov
push
push
mov
or
or
pop
retf
inc
gs
sub
push
adc
xchg
cmp
mov
iret
push
adc
hlt
int
out
or
fnstsw
das
or
xor
sahf
xchg
cli
add
(bad)
xchg
ret
into
gs
pop
or
push
xor
into
sahf
es
pop
in
or
mul
enter
hlt
cmps
push
repz
push
xor
xor
adc
fstp
pop
out
xlat
jle
shl
aas
ja
or
jmp
xchg
popa
loope
cwde
jmp
rol
ins
cmp
popa
repz
xchg
sub
sub
inc
jp
adc
in
repnz
mov
daa
jmp
fwait
or
inc
add
out
lods
add
imul
adc
push
fcmovu
dec
(bad)
into
mov
out
dec
push
out
jmp
std
xor
fiadd
inc
xor
mov
or
pop
data16
inc
imul
imul
les
leave
(bad)
mov
dec
mov
test
data16
lea
fisubr
jle
inc
cdq
inc
and
sbb
in
les
add
sahf
sbb
push
pop
repz
inc
sub
ins
ror
fisub
pop
inc
pop
cmp
sub
inc
sbb
mov
arpl
loop
push
jmp
xor
ret
repz
bound
das
mov
neg
je
retf
aas
fmul
(bad)
(bad)
std
add
pop
in
icebp
retf
xchg
push
call
(bad)
out
push
dec
dec
xchg
scas
or
test
jl
push
xchg
mov
loope
add
(bad)
mov
(bad)
jb
ret
fcom
push
jge
cmp
cs
dec
ret
dec
int3
frstor
jns
cmps
ficomp
or
xor
mov
lds
leave
sbb
push
cli
pop
dec
sub
push
inc
inc
mov
pop
std
fsubr
mov
cmc
outs
sub
int
xchg
pusha
sbb
jae
lods
xor
ins
ret
mov
pop
jg
inc
fldenv
and
test
jae
shr
dec
daa
mov
mov
jp
push
aaa
and
xchg
or
adc
mov
call
(bad)
xacquire
adc
popf
jne
cs
pop
add
jno
or
out
aas
sub
mov
sbb
retf
repnz
js
sbb
imul
and
shl
jno
or
push
test
daa
mul
dec
xor
cmp
add
cmp
mov
(bad)
inc
cmp
retf
xor
mov
out
inc
(bad)
fld
mov
movs
xchg
(bad)
pop
test
add
ds
jl
or
sahf
sbb
cmps
pop
pop
cli
xor
shl
mov
mov
rol
xor
xor
push
push
aas
mov
rcl
cld
mov
aam
dec
push
rcr
and
xlat
inc
pop
inc
cli
popa
jnp
mov
data16
ins
jge
jle
(bad)
gs
or
leave
inc
dec
and
or
ud2
aaa
adc
idiv
sub
mov
iret
cwde
xchg
mov
jmp
cmps
jle
dec
rcl
sub
ds
in
mov
(bad)
push
inc
jne
jmp
sub
adc
div
(bad)
pop
lea
in
ret
xor
dec
xchg
push
adc
and
lahf
mov
jg
jl
push
mov
sbb
jns
pop
pushf
pop
fsubr
inc
movs
and
imul
das
mov
sbb
in
inc
jmp
imul
jg
xchg
lahf
xchg
dec
arpl
or
and
ret
pop
enter
jns
xchg
push
out
mov
ficom
add
in
ret
test
inc
or
adc
repnz
(bad)
je
push
stos
cmps
cmp
adc
mov
out
pop
loop
cwde
push
jbe
fbld
push
inc
pop
or
mov
repnz
xchg
pushf
mov
test
retf
or
xor
mov
pop
sahf
ss
(bad)
xor
imul
int
retf
aam
jae
nop
sbb
sub
sub
out
and
jle
jo
call
mov
push
fild
ja
mov
(bad)
mov
sub
dec
out
mov
imul
inc
cli
inc
mov
jmp
xlat
enter
adc
and
loope
das
cmp
cs
mov
mov
(bad)
jg
std
mov
inc
loope
mov
rol
push
adc
outs
cmp
jne
test
push
(bad)
std
xor
repz
add
loopne
xchg
pop
jns
ins
repnz
inc
sub
mov
call
stos
repz
out
jg
xor
mov
repz
dec
arpl
cmp
xor
push
jge
ins
jbe
xchg
scas
jle
ins
mov
nop
test
jecxz
call
push
xchg
jmp
cmp
js
cmps
pop
xor
loopne
or
test
mov
fisub
in
inc
sbb
int
sti
cmp
cmp
jb
inc
mov
xlat
mov
fist
and
xor
scas
xchg
mov
sbb
sbb
lds
sbb
ins
lea
push
xchg
adc
out
and
mov
jbe
movs
cmp
adc
inc
or
mov
cdq
jmp
and
pop
pop
repz
mov
mov
adc
aaa
cmp
das
jge
mov
(bad)
popf
sub
nop
fisub
shr
dec
inc
das
mov
push
mov
sub
out
pop
div
sub
fs
jns
hlt
inc
pop
and
add
cs
push
cmp
jmp
xor
mov
stos
aam
or
jl
and
popa
call
cmp
je
ja
pop
(bad)
(bad)
cdq
call
mov
add
mov
test
xchg
retf
ret
xor
push
adc
pushf
mov
mov
sti
xchg
mov
adc
jge
leave
idiv
fmulp
imul
xchg
dec
movs
cdq
mov
fldcw
push
cmp
loopne
and
or
inc
or
push
mov
xchg
cmps
imul
pop
ss
pop
stos
push
push
jle
pop
inc
jg
xchg
loope
sbb
(bad)
push
inc
adc
sbb
(bad)
jmp
pop
add
add
jp
adc
jecxz
test
addr16
mov
jge
jmp
(bad)
cwde
dec
aaa
pop
test
and
sti
cmp
imul
mov
in
cmp
xchg
add
fiadd
xchg
pop
fnsave
xchg
cs
push
push
movs
js
sub
fbstp
aam
dec
fsub
xchg
push
mov
int
or
call
lods
subps
scas
lods
or
adc
mul
neg
push
inc
je
out
pop
arpl
mov
(bad)
or
jne
cdq
cmp
xor
ret
sub
mov
mov
jg
outs
jnp
sub
ja
xor
ficom
xor
iret
and
push
shl
(bad)
pop
sub
outs
pop
inc
xlat
por
fs
dec
test
adc
pop
inc
push
pushf
mov
add
retf
xor
push
push
and
cmp
or
add
cdq
push
push
adc
jp
jle
movs
jl
adc
(bad)
outs
out
bound
mov
rcl
jmp
xor
shr
mov
sbb
popa
popa
pop
mov
in
mov
(bad)
les
pop
and
pop
call
in
mov
inc
shl
push
test
enter
inc
dec
push
and
mov
cmps
test
jmp
sub
ja
inc
sti
mov
push
adc
inc
mov
jge
pusha
mov
jmp
movs
add
ret
arpl
sub
mov
int3
xor
jge
adc
cmps
inc
cmp
jmp
mov
adc
sub
mov
mov
add
push
retf
fisub
inc
xor
or
push
in
cld
jns
shr
or
cld
mov
or
pop
mov
sub
ror
push
xchg
and
sub
dec
stc
rcr
pop
lock
ins
inc
jns
and
icebp
jge
xor
xchg
inc
dec
test
(bad)
mov
stos
jns
mov
adc
outs
pop
cmp
fcomp
add
das
xor
and
cs
xor
mov
xor
mov
scas
add
loope
push
inc
pop
lock
test
scas
out
push
add
iret
mul
pop
and
imul
test
aas
aaa
jmp
cli
xchg
sbb
mov
mov
int
lock
dec
(bad)
aad
mov
not
xor
aad
test
add
sar
aad
push
mov
mov
push
imul
mov
jnp
aas
dec
repnz
movs
mov
sahf
mov
or
stos
sti
retf
cli
hlt
cmp
mov
mov
dec
mov
frstor
ret
jno
push
adc
add
pop
sbb
imul
xchg
cmp
lods
pop
jbe
aaa
xchg
jbe
push
enter
pusha
rcl
jo
inc
ret
pop
test
push
test
stos
and
dec
mov
fsub
jle
int
mov
push
fdivr
imul
(bad)
cmp
pop
pop
mov
sub
or
cmp
shr
(bad)
int
sahf
push
es
add
popf
out
mov
jae
rep
out
dec
(bad)
out
adc
fwait
sbb
in
test
fdivr
ja
repnz
cmp
push
pop
lock
out
add
shl
pop
inc
enter
jecxz
mov
jns
shl
nop
stos
shl
stos
ror
icebp
or
fwait
test
ds
stc
out
repnz
xor
ja
rcl
into
call
mov
test
dec
pop
sti
push
cld
cdq
es
cmps
lahf
cmp
adc
dec
cmps
js
sti
rcr
cmp
push
retf
mov
in
fist
icebp
push
pop
out
fidivr
(bad)
clc
aam
sbb
inc
mov
xor
add
inc
(bad)
(bad)
loop
stos
inc
push
arpl
outs
mov
in
xlat
jg
push
stc
test
fcom
inc
in
inc
movs
push
pop
(bad)
aam
xchg
pop
lock
imul
add
dec
xor
js
or
pop
pop
test
mov
scas
sub
ror
lods
scas
sub
push
jbe
mov
lock
ret
icebp
dec
inc
popa
rcl
call
cmp
xchg
pop
test
fs
sti
sar
shr
dec
mov
push
pop
imul
pusha
das
or
xchg
cmps
imul
in
fwait
repz
fimul
popa
or
ret
dec
arpl
mov
in
sbb
cmp
push
and
pop
pushf
fsub
dec
in
or
pop
xor
cdq
(bad)
imul
adc
push
jle
adc
adc
mov
or
push
in
(bad)
addr16
gs
inc
xchg
pop
fdiv
je
and
enter
ja
mov
mov
retf
cli
ins
sar
mov
repz
xor
push
fidiv
jnp
push
pop
mov
cs
pop
sbb
sahf
inc
not
dec
pop
dec
bt
add
movs
or
gs
jmp
mov
dec
xlat
xchg
sub
mov
aad
mov
out
stos
add
xchg
and
push
jmp
int3
(bad)
jmp
push
push
and
movs
into
jno
xor
mov
add
pop
add
pop
es
scas
inc
mov
mov
iret
push
clc
ds
jne
and
stc
pop
adc
adc
in
lock
sbb
cdq
jge
bound
adc
gs
and
add
mov
test
mov
xor
or
dec
loopne
(bad)
pop
and
adc
inc
xor
aam
inc
imul
lahf
fistp
cmc
into
pushf
jle
inc
push
cmp
push
gs
mov
arpl
or
movs
adc
add
jae
inc
pop
sbb
jbe
(bad)
sub
adc
push
cmp
xor
dec
dec
sub
push
lea
cld
mov
pop
aaa
out
outs
out
(bad)
popa
mov
mov
outs
cmps
mov
pop
mov
ja
mov
fnstsw
ins
dec
into
sbb
not
adc
jle
bound
add
jo
inc
cmp
mov
and
jnp
bnd
call
inc
jne
cld
js
sti
or
mov
sti
pop
sahf
jle
jae
pop
test
outs
fsub
fs
fsubp
rol
mov
icebp
jecxz
movs
or
sub
icebp
dec
or
adc
sbb
addr16
adc
mov
or
fbld
xor
xchg
ds
leave
(bad)
push
push
mov
int
mov
int3
inc
xor
push
jno
retf
hlt
xchg
iret
ror
xor
xchg
mov
aad
sub
stos
in
mov
mov
sub
xor
repz
leave
xlat
rcr
in
(bad)
test
push
cmp
addr16
jmp
movs
push
pop
xor
push
stc
jecxz
xor
jo
mov
and
mov
(bad)
out
push
cmp
not
adc
stos
jecxz
lea
sti
add
mov
add
mov
push
popf
js
jnp
ror
xlat
jnp
mov
bound
cmp
inc
inc
add
in
cmp
jne
cli
lock
push
lds
push
inc
mov
sub
popf
cs
div
sbb
mov
lds
and
(bad)
(bad)
aaa
jp
loopne
idiv
test
add
mov
mov
mov
ss
ins
lock
push
mov
inc
test
dec
repz
xchg
cmp
aaa
xor
push
(bad)
cmp
out
adc
mov
outs
add
cdq
outs
(bad)
lods
mul
push
xchg
ficom
lea
fyl2x
je
int
or
xchg
cli
jmp
and
fadd
xchg
fisub
or
and
pop
push
repz
stc
ror
add
adc
or
dec
mov
sar
ret
inc
mov
mov
inc
or
pop
mov
ja
xchg
push
add
adc
and
je
shl
test
int
and
jo
mov
jp
sub
add
fidiv
pop
push
xchg
jbe
arpl
xor
push
mov
sub
movs
je
out
or
xchg
mov
jecxz
mov
xchg
xor
or
aaa
rol
in
int3
fs
or
push
das
cmc
repz
xor
inc
cwde
push
xor
idiv
out
(bad)
loop
mov
(bad)
pop
add
inc
add
icebp
or
push
mov
(bad)
mov
ficomp
xor
cmp
pop
stc
pop
adc
dec
xor
jmp
neg
rcl
fwait
push
fscale
out
in
inc
add
ss
push
cmp
pop
or
fld
adc
sbb
movs
sbb
mov
fild
cmp
mov
out
dec
and
call
fst
scas
jbe
in
mov
cmp
mov
push
pop
xor
dec
pop
retf
loope
sbb
dec
data16
mov
(bad)
cld
dec
xlat
mov
push
jne
dec
dec
adc
and
mov
or
add
adc
cmp
lahf
arpl
push
sub
mov
loope
pop
inc
jns
lahf
pop
dec
mov
mov
and
jne
and
xor
xchg
mov
out
ret
push
jge
xchg
inc
movs
ds
cmc
cmp
adc
and
cmp
outs
mov
das
sahf
cmp
adc
ror
ja
dec
in
inc
dec
test
leave
sahf
push
scas
fs
add
fdiv
push
cmps
jmp
loopne
or
cmp
sbb
sbb
pusha
jmp
pop
shl
jb
lock
dec
cwde
add
pop
mov
shl
or
and
adc
jbe
sbb
sahf
scas
test
mov
punpckhwd
inc
and
(bad)
mov
dec
jl
jg
push
in
push
adc
mov
sbb
mov
push
xlat
out
push
mov
cmp
dec
es
ja
gs
xchg
xchg
add
mov
nop
stos
push
sub
pop
sbb
pop
leave
clc
push
jno
sub
rol
jmp
mov
jp
cmp
sbb
pop
xchg
xchg
mov
enter
test
shr
pusha
pop
or
fs
movs
mov
(bad)
dec
and
mov
push
mov
add
in
sbb
lods
add
popf
jmp
cmp
add
and
inc
in
mov
jle
lds
jo
fdiv
and
sub
sub
js
shl
icebp
popf
ror
pop
mov
loope
daa
outs
dec
daa
cmp
popf
pop
or
mov
or
xchg
(bad)
int
cmp
(bad)
add
adc
(bad)
cmp
fsub
mov
pop
xchg
dec
jno
and
adc
out
je
jne
out
push
test
aaa
pop
repnz
mov
mov
sub
icebp
mov
dec
inc
ss
jns
or
mov
or
loopne
pop
mov
sub
sub
(bad)
lock
sbb
mov
lods
(bad)
mov
inc
loop
std
mov
mov
xchg
test
dec
xchg
punpckhdq
fisttp
movs
and
test
outs
inc
mov
pop
push
popa
lods
repnz
in
mov
jb
repnz
mov
adc
fild
movs
push
cli
pop
lods
cmp
icebp
xor
clc
jbe
mov
(bad)
mov
mov
imul
xor
mov
fs
mov
push
(bad)
mov
pop
and
jbe
lahf
mov
addr16
xchg
adc
push
xchg
ss
imul
icebp
movs
mov
xchg
mov
pop
lods
ins
outs
test
clc
outs
cmp
(bad)
push
jp
into
shl
pop
mov
stos
push
mov
mov
addr16
mov
add
addr16
inc
mov
pop
sub
mov
mov
lods
scas
jns
mov
mov
cmp
inc
(bad)
fisttp
sub
sbb
pop
jle
cs
xchg
pop
pop
cs
fcomip
pop
sbb
mov
add
mov
cmps
and
test
pop
xor
lods
and
dec
push
jns
cmp
sbb
push
jno
cwde
imul
pop
or
lods
arpl
mov
push
dec
cmp
dec
pop
fbstp
and
outs
cli
shl
jl
sbb
mov
stc
adc
push
loop
sbb
mov
dec
jmp
dec
xchg
test
jne
sub
jp
cdq
sub
cwde
repz
call
add
clc
ja
xor
dec
in
test
cmps
popf
xchg
into
push
cwde
or
loope
mov
mov
out
loope
aad
lds
xchg
add
sti
stos
sar
sub
inc
cli
mov
fimul
sar
pop
sbb
jmp
jns
int
dec
add
mov
mov
fwait
test
mov
(bad)
out
xchg
cmp
loope
add
mov
adc
sahf
ds
popa
pop
out
xor
lahf
jge
dec
mov
jns
mov
inc
ret
and
inc
fs
sub
ror
(bad)
movs
daa
enter
shr
data16
add
ss
sub
pop
push
mov
jb
dec
vucomisd
cs
or
fimul
adc
retf
cs
jo
sar
push
xlat
inc
inc
dec
loopne
push
cmc
pop
ins
pop
adc
ret
inc
mov
outs
cdq
ja
ror
pop
retf
and
or
mov
cwde
not
jns
sbb
pop
data16
xchg
dec
push
jno
mov
aam
(bad)
xchg
xor
int3
out
fbld
popa
mov
cwde
add
cmp
shl
inc
jnp
jle
adc
sbb
or
and
arpl
test
jne
test
jle
pusha
mov
add
repz
arpl
out
test
mov
ss
jb
xchg
call
pop
add
loopne
push
cmps
repnz
and
aaa
pop
out
ret
frstor
leave
sub
add
xor
sti
fst
lahf
jnp
or
mov
mov
movs
push
retf
or
jg
int
loop
popf
inc
dec
ret
or
sbb
sar
das
call
ds
add
enter
pusha
stos
xor
retf
inc
fadd
lahf
fwait
push
ds
fwait
add
sub
add
ror
pushf
int
push
mov
xchg
xchg
jmp
mov
mov
dec
push
adc
mov
jbe
leave
or
mov
aas
sbb
and
pop
arpl
and
mov
xor
and
mov
call
ret
adc
ja
imul
neg
inc
imul
fwait
lods
repnz
inc
sub
dec
out
ret
(bad)
lods
push
(bad)
in
adc
gs
dec
das
rcl
shr
out
jecxz
pop
nop
mov
xchg
jmp
in
xchg
movs
dec
fdiv
repnz
push
cmp
sbb
pop
mov
lds
gs
cmp
jp
(bad)
retf
mov
imul
adc
vmread
mov
jb
imul
adc
push
movs
mov
pushf
xchg
mov
jns
in
cmp
cmps
xchg
outs
dec
mov
jno
jg
add
lock
add
or
xchg
jnp
add
data16
jge
push
stc
rcr
popa
es
sbb
clc
popf
cs
loope
int
cmp
or
arpl
xor
jecxz
sub
scas
mov
xchg
inc
mov
mov
dec
pop
mov
pop
sbb
or
pop
(bad)
pusha
arpl
lea
aas
mov
neg
cld
cli
test
inc
adc
mov
data16
inc
dec
(bad)
repnz
mov
jnp
retf
enter
xchg
mov
xchg
mov
shl
shl
je
inc
and
xor
mov
xchg
jns
jo
ror
mov
outs
neg
jae
fdivr
xchg
movs
retf
call
pop
(bad)
or
cwde
sbb
adc
sbb
mov
call
or
rcr
cmps
outs
push
add
sub
(bad)
bound
sbb
pop
mov
xlat
aam
out
in
mov
mov
bound
sti
test
mov
in
ss
inc
es
outs
adc
and
sub
sbb
enter
jmp
sahf
cmp
mov
pop
xchg
dec
mov
adc
shr
retf
cwde
int
daa
ja
sub
xchg
mov
mov
jb
xor
das
sub
add
adc
jmp
sbb
mov
sbb
jl
xchg
sahf
push
xor
fimul
outs
adc
aas
push
sub
jle
icebp
in
jl
jae
xchg
(bad)
mov
repnz
xor
out
adc
les
inc
sbb
mov
mov
lock
jbe
pop
sub
ss
push
push
and
les
sbb
rcl
in
sbb
sbb
out
xor
push
pop
dec
jge
(bad)
enter
add
sub
pop
mov
sub
ss
into
aas
or
repnz
inc
inc
adc
adc
xor
mov
or
jno
aas
icebp
sbb
mov
imul
push
mov
aaa
xchg
sub
xchg
jp
je
push
ins
jl
or
pop
dec
dec
sbb
nop
scas
js
fstp
pushf
push
jno
cmp
sbb
(bad)
mov
or
es
xchg
inc
ins
int
dec
jg
mov
mov
adc
push
push
lods
xchg
add
jp
sti
adc
movs
jne
icebp
mov
(bad)
xlat
in
adc
xchg
dec
stos
sbb
push
imul
add
jns
mov
mov
je
push
pop
xor
arpl
jns
add
data16
into
sub
xchg
sub
sub
fcomi
dec
cmp
add
div
arpl
fld
shl
jge
ret
jns
add
jmp
jp
stos
rcl
push
adc
or
xor
add
mov
xor
mov
xor
jbe
mov
jns
pop
cmps
and
call
pop
aaa
xor
ret
mov
fiadd
push
sahf
xor
ja
push
xor
cmp
sbb
(bad)
jl
jae
retf
cli
mov
mov
neg
aaa
xor
out
sub
mov
sub
shl
outs
mov
push
cli
push
cmps
push
rcr
(bad)
imul
addr16
fstp
jne
mov
jecxz
jo
fwait
jnp
popa
retf
mov
out
rcl
iret
call
loope
cs
push
xlat
(bad)
mov
pop
loop
fisttp
shl
adc
mov
jb
pusha
adc
pop
and
ins
stc
and
mov
test
sahf
sbb
mov
daa
cmps
mov
int
aaa
jge
xchg
in
dec
iret
push
mov
call
mov
movs
add
sub
cmc
enter
adc
fstp
pushf
push
mov
jae
test
mov
pop
mov
loopne
mov
scas
pop
adc
pop
and
(bad)
push
sub
jmp
jp
add
stos
xor
and
pop
inc
jle
inc
jge
push
aad
sahf
pop
(bad)
popf
nop
lods
out
pop
mov
add
shl
xor
mov
sub
sub
test
dec
push
add
shl
jecxz
pop
(bad)
xchg
push
ins
sbb
inc
stos
pusha
loope
push
jecxz
sar
aam
push
adc
fstp
loop
cmp
aad
mul
scas
sbb
push
push
(bad)
mov
xor
ror
movs
in
movs
dec
dec
aas
sahf
mov
jg
stos
dec
pop
ret
pop
and
xchg
and
stc
add
in
pushf
mov
add
xor
or
fbld
push
ret
pop
xor
mov
push
sti
xor
push
out
sbb
shl
push
shr
add
js
imul
pop
or
mov
fs
add
or
dec
add
or
push
pop
jl
(bad)
cwde
gs
pop
jl
mov
dec
into
shl
xor
fmul
sbb
adc
cli
imul
out
ja
js
mov
xor
and
xor
fild
repnz
pop
pop
or
dec
cmp
dec
cmp
in
sbb
test
ss
out
mov
adc
(bad)
push
ins
call
imul
aam
in
imul
push
scas
pop
inc
or
(bad)
repz
ror
pop
push
jns
enter
movq
dec
jmp
into
out
mov
fisttp
nop
mov
sub
jmp
pop
mov
xchg
(bad)
std
imul
pop
mov
or
jg
scas
js
xlat
mov
push
shl
cmp
call
inc
in
out
es
add
mov
jmp
or
xchg
push
and
mov
popf
mov
ss
retf
mov
movzx
dec
loope
dec
mov
inc
ficomp
int3
sub
xor
jmp
gs
sbb
dec
dec
int
adc
clc
call
pop
hlt
(bad)
les
loope
aas
xlat
repnz
leave
hlt
jp
mov
jle
(bad)
lahf
mov
mov
ins
or
mov
in
fldenv
mov
js
das
inc
mov
out
inc
ret
fadd
inc
adc
fsubrp
lods
outs
mov
fld
cmps
inc
in
sub
mov
push
sub
cmc
cmps
test
adc
fwait
mov
jb
jle
scas
mov
retf
adc
ret
inc
js
mov
mov
jmp
cmp
mov
call
or
jae
adc
retf
movs
ror
inc
or
mov
ins
std
mov
ss
xchg
iret
add
(bad)
lods
xor
addr16
mov
pushf
scas
mov
loope
mov
mov
lods
xchg
adc
adc
fild
mov
popa
sbb
mov
shr
sbb
addr16
mov
imul
cmp
sub
xchg
sbb
pop
mov
add
jbe
xor
cmp
mov
jmp
mov
fbld
leave
xor
and
sub
mov
dec
(bad)
in
or
xor
cmp
gs
les
sbb
aad
push
sbb
movs
dec
pop
adc
mov
sti
mov
sbb
pop
pop
or
jl
jb
add
std
fdivr
cld
xor
push
daa
mov
mov
sub
stos
sbb
cwde
stc
jno
pop
in
pop
ficom
int3
stos
imul
mov
fcomp
dec
lock
sbb
ja
ins
mov
add
sbb
stos
sbb
add
pusha
add
sar
sbb
stc
pop
cmovns
mov
call
sub
ss
repz
cmp
out
rcl
xchg
and
or
jmp
cmps
xor
das
xchg
retf
jbe
rcr
xchg
sbb
mov
aad
add
push
xchg
add
icebp
mov
loop
or
call
and
outs
(bad)
out
cdq
adc
(bad)
add
sub
sbb
loop
imul
cmp
mov
sub
jne
add
mov
fs
fld
sub
sub
dec
daa
nop
dec
test
sbb
mov
jge
call
sar
scas
jp
lock
mov
push
xor
mov
je
mov
and
int
pusha
inc
mov
adc
out
inc
and
jo
int3
retf
inc
add
xor
jmp
stos
movs
test
dec
push
sbb
outs
pop
adc
cmp
mov
push
jb
inc
xchg
adc
adc
ret
cmc
push
sub
mov
jge
jns
(bad)
ret
push
gs
pop
outs
ds
fsubp
dec
pop
push
and
call
cdq
loopne
pop
je
cmps
jo
mov
xchg
push
xor
(bad)
fwait
lock
ins
adc
mov
(bad)
cld
cmp
into
fcomp
mov
fldz
test
lahf
adc
lds
and
scas
sbb
int
rcl
cmp
lock
cmp
inc
inc
cmps
sub
push
inc
jb
pop
jo
aad
xor
mov
add
adc
sbb
jns
sahf
imul
int3
mov
in
sbb
scas
cmc
clc
xor
retf
xor
adc
mov
mov
loopne
push
mov
push
sbb
and
and
push
call
ds
aas
and
push
outs
stos
dec
cmp
lock
mov
xor
imul
in
adc
int
jne
add
aam
pop
cmp
xchg
fisubr
outs
pop
lea
mov
mov
xor
push
js
pop
adc
les
add
enter
and
mov
test
add
es
dec
data16
shl
dec
arpl
rol
sahf
ret
adc
jmp
shr
push
jmp
int
in
(bad)
call
or
lock
and
pusha
call
mov
neg
xlat
fucomi
fsub
je
dec
lahf
je
outs
adc
(bad)
jbe
or
sub
push
jnp
mov
lock
lahf
popa
rol
pop
or
push
pushf
outs
movs
aad
mov
pop
(bad)
and
jne
xchg
mov
scas
and
pop
shr
jo
(bad)
leave
sar
dec
push
push
xchg
addr16
stc
lock
das
loope
adc
ficom
inc
jnp
jl
out
jg
popf
dec
and
jmp
aas
dec
mov
push
lock
movs
sbb
push
jb
int
das
retf
test
inc
(bad)
or
jl
stos
rol
retf
icebp
cmp
fdivr
cli
or
pop
cmps
cli
xchg
jmp
xor
jb
dec
pop
(bad)
xor
dec
inc
mov
ds
stc
and
dec
jo
adc
pop
test
xchg
cmps
ror
adc
outs
and
push
pop
sbb
fwait
add
jbe
lahf
jae
call
loope
sbb
mov
cli
add
sahf
dec
iret
inc
dec
cmps
out
dec
gs
call
inc
or
aas
push
lods
dec
mov
inc
retf
inc
loopne
pop
inc
add
ds
add
inc
add
push
mov
arpl
clc
add
push
popa
cmps
mov
movs
dec
sub
int3
out
cmps
xor
jne
xchg
iret
pop
test
dec
lahf
pusha
nop
push
dec
inc
inc
xchg
pop
test
mov
adc
ja
add
mov
and
out
in
int
sar
add
xchg
inc
pop
dec
popf
or
test
setl
rol
xchg
imul
and
adc
inc
dec
vsubpd
outs
or
scas
cmp
popf
cli
ins
push
mov
xchg
stos
lods
data16
test
cwde
mov
xor
xor
push
repnz
int3
pop
or
inc
sub
cmp
sub
hlt
pop
in
cli
xchg
jbe
scas
outs
es
push
cmps
sub
cmc
push
mov
outs
sahf
popf
jmp
popa
aad
jno
jns
mov
or
cmp
(bad)
jo
das
add
pop
or
push
jmp
jle
movs
sti
adc
(bad)
pop
inc
sub
outs
ins
mov
xor
das
lea
fs
mov
cs
bound
pop
mov
add
jo
mov
jne
cmps
loopne
nop
adc
les
jg
in
sbb
je
push
(bad)
sub
jle
data16
sub
add
xor
jne
arpl
xchg
pop
dec
or
test
push
in
pop
jl
mov
ins
mov
pop
jns
out
push
cmp
xor
inc
iret
dec
lahf
ins
cmps
fild
pop
xchg
push
sub
fimul
je
imul
scas
dec
mov
jg
or
push
inc
cwde
(bad)
mov
dec
bound
dec
mov
stos
cdq
cwde
jno
or
push
cmp
cmp
mov
push
cmps
pop
sti
fwait
push
and
(bad)
dec
cs
push
or
fist
xchg
inc
mov
hlt
xor
fwait
and
out
xor
push
adc
cs
stos
xchg
sub
not
push
lea
xchg
mov
xor
mov
or
push
arpl
inc
cmp
cmp
mov
dec
mov
sbb
test
inc
xchg
fdivr
aad
dec
cmp
and
inc
xor
movs
ja
jmp
adc
cli
cmp
jns
mov
sub
mov
or
push
mov
lds
mov
push
mov
adc
ja
mov
icebp
cmp
or
push
out
in
(bad)
cmp
xor
xchg
leave
jnp
push
cmp
mov
shl
sahf
fcom
sti
stos
sbb
out
aad
xchg
add
sar
jae
outs
rol
icebp
sub
lds
or
mov
rol
push
out
mov
test
cmp
ds
jecxz
test
add
mov
mov
adc
jmp
(bad)
pusha
inc
mov
sbb
outs
sub
push
pop
xchg
int
les
int
and
xchg
shr
(bad)
mov
arpl
and
test
sub
sar
ss
fisubr
lock
int3
and
nop
aad
and
mov
jmp
add
xchg
mov
in
mov
mov
xchg
call
dec
outs
idiv
pextrw
adc
lock
test
cmp
inc
xchg
mov
dec
xchg
mov
or
xchg
cli
or
sbb
lahf
pop
out
cmp
mov
pop
scas
fistp
jmp
ret
cmp
fistp
scas
out
lahf
pop
pusha
aad
cs
lds
jmp
jecxz
jbe
mov
movs
cmp
mov
mov
cmp
int3
pop
jmp
mov
or
retf
lahf
jle
lods
aas
jmp
mov
jmp
cs
pop
sar
jnp
mov
cmp
dec
(bad)
aas
ficomp
sbb
stos
jmp
loope
mov
sbb
push
adc
stos
lock
lds
movs
push
push
jle
outs
mov
sbb
dec
jmp
and
pop
mov
pusha
fsub
test
outs
pop
movs
mov
ins
outs
mov
in
pop
test
mov
xchg
inc
mov
push
data16
mov
pop
stc
inc
dec
adc
push
loope
sub
into
or
inc
mov
(bad)
ds
shl
(bad)
ins
loopne
in
dec
mov
and
sub
pop
mov
stos
fucomi
sub
xor
add
ins
loopne
std
sub
xchg
mov
jp
in
mov
xchg
push
pop
jbe
mov
in
mov
lock
or
pop
ins
or
test
or
stos
jo
xlat
scas
mov
sbb
push
dec
mov
xlat
(bad)
(bad)
mov
pop
fcomp
mov
adc
adc
fdivr
inc
mov
mov
inc
jnp
xor
(bad)
mov
je
cld
call
and
sbb
pop
fisubr
jnp
xor
jbe
inc
fsub
outs
push
dec
imul
xchg
adc
xor
xchg
mov
jo
inc
sahf
scas
add
(bad)
scas
add
jne
je
xchg
push
add
push
jg
add
cld
cld
iret
pop
out
iret
sub
stos
ret
lahf
mov
push
mov
jo
ret
dec
pop
cli
pusha
arpl
xor
ret
pop
jmp
jae
lea
mov
cmove
xchg
pop
sbb
add
scas
inc
test
out
pop
push
cmp
stos
scas
or
stos
aam
pusha
jae
fidiv
or
mov
int
mov
mov
call
js
mov
mov
inc
(bad)
and
fistp
enter
push
pushf
and
dec
cmp
mov
in
js
sbb
adc
iret
aad
sbb
xlat
iret
repnz
mov
adc
call
lock
ret
sbb
cmps
les
mov
outs
inc
push
or
aam
jb
popa
or
test
mov
int
in
mov
enter
xor
imul
ret
ret
dec
cmp
iret
gs
dec
inc
xor
xor
das
jecxz
ret
mov
pop
add
or
jne
add
fsubr
jnp
int
jp
sub
iret
lea
(bad)
sub
(bad)
repz
pop
(bad)
aaa
shl
cmp
sbb
call
jl
inc
aaa
addr16
test
xor
cmps
(bad)
lock
jp
jg
pop
enter
add
xchg
movs
nop
push
jl
mov
mov
pop
xlat
(bad)
mov
shr
jecxz
dec
mov
shr
and
lock
scas
cdq
fld
mov
je
mov
sbb
(bad)
sti
and
push
xchg
fild
push
xlat
cmp
xchg
pop
push
adc
cmps
sar
dec
inc
sub
aad
les
push
or
ds
movs
add
dec
push
loop
push
repnz
xor
cld
sub
aam
xchg
aaa
out
inc
xor
mov
movs
adc
lock
stc
sub
dec
pop
and
xchg
(bad)
mov
sbb
xchg
cmp
not
shr
loopne
ss
push
xchg
fsubrp
adc
out
mov
repz
sbb
mov
inc
ret
shl
jl
movs
fild
int
sbb
ficomp
mov
jns
xor
push
jl
mov
ret
adc
and
or
or
fimul
push
out
jb
add
test
xor
jbe
inc
(bad)
cld
aas
mov
mov
pop
mov
cmp
mov
mov
cmp
mov
rcl
rcl
leave
aas
push
call
mov
cmps
push
pop
subps
stc
xchg
mov
shl
push
xor
jp
xchg
ror
dec
jmp
(bad)
outs
jmp
push
and
cmps
imul
mov
fbstp
lds
pushf
ins
xchg
retf
addr16
(bad)
xor
pop
mov
adc
imul
imul
adc
xchg
or
(bad)
sbb
add
mov
inc
sub
hlt
cmp
lahf
out
aaa
into
int
xor
je
push
lahf
arpl
ret
data16
sub
sbb
mov
dec
das
adc
pushf
(bad)
cmps
je
push
cwde
sbb
les
and
shl
jne
arpl
sbb
es
icebp
ins
xor
mov
shl
lds
lods
(bad)
retf
in
cmp
mov
xor
loope
push
jns
mov
bound
push
out
out
rol
sbb
(bad)
push
or
bound
mov
lock
pop
sahf
retf
pop
pop
in
jb
adc
out
cmp
arpl
push
out
fidivr
cmp
out
outs
cmp
jns
test
xor
fucomi
stos
fwait
movs
xor
js
arpl
bswap
(bad)
gs
ds
ss
push
lods
adc
cmp
jbe
jle
dec
addr16
jl
cmps
stos
aas
inc
jecxz
test
test
mov
xchg
cs
test
dec
xor
ja
retf
sub
add
push
mov
test
in
popa
adc
movs
jmp
jb
inc
push
adc
std
and
movs
xchg
iret
sub
cmp
cmc
leave
in
(bad)
ficom
push
push
inc
leave
or
jnp
test
dec
ins
les
mov
popa
or
pop
pop
es
ror
inc
mov
push
and
adc
addr16
dec
inc
add
cmp
xor
aaa
mov
fidivr
neg
fisub
mov
(bad)
aad
idiv
or
add
xchg
xchg
(bad)
xchg
stos
scas
(bad)
pop
and
mov
ja
call
pop
bound
rcr
jl
cli
jmp
pop
mov
push
add
imul
mov
mov
outs
xor
adc
lds
sbb
or
nop
cmp
push
data16
pop
push
dec
mov
scas
std
inc
push
adc
mov
mov
cmps
sahf
xchg
push
cmp
pushf
ds
repz
mov
mov
mov
(bad)
jb
jmp
hlt
pusha
jg
mov
movs
ds
rol
and
pop
push
fcom
pop
or
mov
into
stos
js
ss
push
pop
add
jle
sub
jo
push
mov
clc
mov
and
icebp
jae
shr
push
jno
test
(bad)
xor
imul
aad
ret
mov
fwait
ss
xchg
repnz
cld
retf
mov
hlt
push
es
push
not
fild
add
pop
scas
pop
jnp
inc
hlt
pop
and
test
xchg
adc
hlt
inc
repnz
dec
push
out
add
retf
cmp
xchg
dec
(bad)
jmp
mov
ja
arpl
mov
scas
aaa
mov
shl
push
xor
sbb
and
sub
retf
push
shl
repz
cmps
addr16
sbb
mov
xor
retf
mov
scas
retf
and
call
bswap
dec
pop
std
sub
call
or
or
pop
test
push
dec
scas
fidivr
scas
push
arpl
mov
retf
inc
loope
les
(bad)
cmp
call
ins
ror
popa
add
movs
fwait
push
retf
ror
outs
pop
(bad)
xchg
call
jg
inc
test
add
sbb
test
mov
mov
mov
and
dec
xchg
(bad)
cmp
adc
call
mov
outs
ins
inc
in
(bad)
(bad)
test
fidiv
mov
ss
push
div
and
mov
movs
mov
out
or
lock
lea
xor
out
cmp
outs
aad
daa
dec
clc
test
sbb
outs
std
sub
rcr
mov
mov
inc
cmps
jmp
inc
aas
and
rcr
adc
cmp
popf
retf
sahf
aad
rcl
test
or
mov
ret
jno
dec
push
fneni(8087
and
mov
mov
lods
push
pop
(bad)
ret
jle
cmp
loopne
lds
jo
fucomp
pop
and
inc
mov
mov
in
test
sub
(bad)
std
sbb
push
fwait
ins
pop
or
(bad)
aad
icebp
push
ret
pop
sub
mov
fsubr
lods
outs
daa
mov
ficomp
sub
pop
pushf
outs
or
mov
aaa
rcr
dec
jo
pop
mov
test
sub
ds
mov
loopne
dec
movs
xor
std
mov
pop
dec
add
push
mov
push
jle
dec
in
inc
push
mov
sbb
sub
(bad)
push
cdq
pop
aam
mov
jp
mov
test
pop
inc
(bad)
leave
xchg
and
cmc
xchg
imul
outs
mov
lahf
dec
add
aad
icebp
or
scas
cmp
mov
inc
xchg
cld
jnp
gs
xor
lods
mov
nop
loopne
test
and
sbb
or
sub
mov
sbb
jecxz
sbb
jge
xor
neg
and
mov
je
mov
ja
jecxz
xlat
mov
cmp
inc
out
sbb
stos
ficomp
nop
xchg
ror
popf
sbb
sbb
stos
mov
pop
stc
pusha
sbb
cmps
cli
sar
sub
xchg
pop
and
xchg
dec
(bad)
lds
lock
push
fwait
aam
addr16
xchg
movs
imul
jo
mov
jbe
jo
aad
in
jg
adc
pop
(bad)
xchg
sub
lahf
gs
pop
aam
jno
stc
pusha
xchg
je
nop
mov
imul
sbb
mov
inc
stc
sar
xchg
das
jmp
mov
mov
pusha
push
lods
sbb
mov
mov
lea
cmp
out
loopne
sbb
mov
ins
or
hlt
hlt
mov
mov
mov
arpl
jb
xchg
cmp
iret
and
stos
mov
jl
mov
enter
int
push
mov
xchg
imul
rol
outs
out
mov
stos
inc
mov
push
ret
test
and
aad
popa
aaa
push
cwde
fsubr
lea
retf
sub
mov
test
cld
mov
jmp
int
dec
pop
stc
fwait
cmp
adc
mov
test
shl
cdq
cmp
enter
scas
push
jge
mov
adc
jp
pop
lock
cs
add
dec
popa
and
or
fbstp
xchg
adc
rol
xor
mov
test
jae
sbb
push
push
les
inc
jno
push
ror
or
bound
pushf
sub
xchg
and
add
sbb
or
jne
and
cld
xor
or
ja
outs
add
or
(bad)
or
ja
xchg
jns
and
sahf
add
fs
xchg
ins
retf
aam
pop
aas
mov
jno
or
imul
jecxz
jg
sar
std
fdiv
mov
push
push
rol
cmps
jmp
js
xchg
idiv
pop
cdq
daa
aad
retf
js
mov
in
jae
mov
push
sub
or
into
pop
mov
int3
sti
pop
out
dec
sbb
xchg
xchg
sub
jno
jnp
call
pop
out
adc
je
sbb
dec
dec
and
stos
jmp
ja
pop
pop
xchg
iret
jnp
mov
or
xchg
and
or
and
fild
(bad)
cld
clc
sub
outs
and
mov
mov
enter
adc
or
in
rcl
xlat
aam
mov
jmp
fmulp
test
rcr
imul
inc
jmp
icebp
or
mov
fsubr
mov
jb
mov
adc
int3
sbb
push
and
cld
dec
aam
or
dec
in
mov
push
add
sbb
pop
ins
out
out
jmp
je
out
inc
mov
fstp
mov
shl
movs
neg
sub
daa
out
cmps
sti
add
pop
or
mov
call
inc
jg
aam
sub
add
addr16
dec
scas
int
jb
repz
(bad)
add
ds
inc
punpcklbw
outs
push
(bad)
mov
shl
xlat
psadbw
mov
mov
out
push
icebp
rcr
ret
arpl
dec
mov
mov
jmp
sbb
lods
shl
dec
mov
add
adc
idiv
or
mul
pop
adc
int3
aas
fcomp
es
cmp
xor
jecxz
clgi
enter
cmp
aas
stos
nop
or
outs
dec
imul
and
(bad)
movs
cld
sbb
sahf
pop
movntps
imul
inc
sbb
scas
jbe
loope
inc
scas
mov
cld
lahf
mov
in
dec
or
jo
xor
mov
pushf
cmp
ds
mov
jae
inc
cld
arpl
jae
pusha
and
mov
retf
adc
das
cdq
cmp
iret
mov
inc
lock
lods
cmp
and
ja
leave
jle
mov
gs
adc
idiv
outs
adc
lea
sub
mov
pop
mov
out
jnp
cdq
arpl
(bad)
pop
test
mov
or
in
nop
adc
loop
inc
adc
dec
adc
sub
mov
jmp
repnz
mov
in
sbb
xchg
mov
jbe
jmp
sbb
inc
int
pop
and
test
imul
mov
cmp
mov
fcom
idiv
sub
pop
xor
mov
mov
aad
fwait
popf
sub
dec
mov
test
inc
or
lahf
xor
mov
and
jp
push
sbb
lahf
aaa
mov
adc
std
in
and
dec
sar
mov
jb
pop
(bad)
es
test
cmc
and
addr16
mov
jmp
test
fcom
adc
fisttp
cld
jle
(bad)
inc
push
test
stos
xchg
pop
lods
pop
sub
mov
jp
movs
stc
sti
or
cmp
mov
and
aas
adc
loope
imul
out
or
in
arpl
rcl
sbb
cmps
mov
xor
test
cmp
and
mov
adc
inc
mov
out
push
push
jg
push
mov
adc
push
sub
push
jge
cmps
pop
cmp
mov
leave
adc
in
stos
cs
lea
shr
sub
mov
dec
adc
ror
pop
push
fcmovbe
and
pop
dec
add
loop
les
dec
in
ins
pop
push
jb
jb
mov
mov
push
inc
lock
and
bound
jmp
jmp
leave
movs
daa
xor
mov
or
out
lock
xor
iret
inc
xor
iret
push
int
add
and
mov
jge
mov
push
lock
cmps
mov
stc
add
lods
sbb
stos
pusha
pop
scas
in
popa
pop
mov
cmp
add
arpl
adc
adc
and
and
pop
call
cdq
aam
sar
xchg
sahf
lods
mov
bound
icebp
mov
dec
pop
aam
into
or
sbb
mov
cmps
outs
sub
jo
addr16
inc
pcmpeqw
sub
mov
mov
sbb
jge
int3
sbb
lds
imul
push
or
pushf
call
push
call
rol
adc
jle
fdivr
(bad)
xchg
dec
mov
cmp
push
sti
and
test
xor
in
jl
fldpi
ja
dec
push
ret
fadd
in
jb
div
fsubr
jns
xchg
sub
mov
popa
sub
push
inc
mov
sti
cld
cmp
hlt
xor
imul
sub
shr
in
test
inc
adc
cmp
mov
push
jge
xchg
dec
push
call
push
inc
sbb
into
jbe
fdiv
xchg
cwde
(bad)
cld
test
mov
in
or
mov
iret
je
in
inc
xlat
ffreep
movs
fsub
cs
js
mov
mov
adc
xor
je
cmp
and
retf
fist
sub
cmp
rol
adc
jl
shr
fdivp
add
fnstcw
xor
pop
mov
daa
sti
iret
xchg
loopne
or
loop
xchg
loopne
retf
sbb
mov
stos
movs
inc
stc
xor
iret
push
sbb
loope
fdivr
jecxz
xor
cmp
or
in
test
sbb
inc
cmp
xor
fldenv
mov
inc
pop
jl
mov
pop
cmp
icebp
fwait
dec
or
push
push
add
gs
mov
jmp
shl
pop
movs
lods
adc
aas
nop
mov
jae
(bad)
shr
fisttp
cdq
ins
inc
cmp
mov
dec
inc
dec
xchg
inc
fwait
lods
test
cmp
sub
popf
inc
cli
(bad)
dec
test
or
cld
fild
cmps
jb
fdivr
icebp
and
sub
es
mov
add
lods
push
jecxz
in
mov
fcmovne
fdiv
mov
cmp
rcr
test
xlat
cmc
cmp
jnp
pop
xchg
out
icebp
into
pop
push
out
ds
and
jnp
pop
mov
in
push
in
inc
cmp
or
in
outs
sub
jns
xchg
mov
sub
sbb
mov
sub
jbe
cmp
pushf
movs
imul
cmp
fild
dec
sub
adc
xchg
shr
inc
jne
xchg
cmp
or
stos
es
xor
push
mov
imul
(bad)
lahf
or
lods
lock
nop
inc
xor
jno
ja
sti
sbb
push
dec
in
pop
push
mov
push
mov
bnd
jp
aaa
arpl
ja
sbb
push
shl
push
scas
lahf
(bad)
push
lahf
scas
imul
mov
shl
sbb
and
inc
cmc
(bad)
fwait
pop
pop
(bad)
push
out
jmp
jno
cld
fwait
mov
xchg
loop
ret
add
sbb
dec
rcr
sqrtps
cmps
xchg
pusha
and
test
(bad)
pop
cmp
dec
mov
adc
out
imul
jae
ret
sub
stos
jnp
stos
js
call
das
ins
pusha
arpl
xchg
adc
jl
sub
jno
mov
mov
loope
repnz
jmp
fdivr
dec
mov
sbb
scas
mov
mov
mov
sub
in
sahf
inc
imul
jb
sbb
(bad)
xor
ins
leave
imul
outs
sti
fst
ja
mov
adc
sbb
mov
frstor
ficomp
test
movs
pop
inc
mov
repz
dec
xchg
ficomp
mov
xchg
and
add
daa
cmovbe
js
out
aaa
cmc
les
jne
mov
sbb
xchg
mov
sbb
sbb
xor
popa
mov
sub
in
call
in
add
sti
int3
inc
or
or
mov
push
mov
push
pop
fst
sbb
or
pop
ror
jmp
xchg
xchg
inc
dec
or
ror
inc
faddp
push
ror
add
nop
stos
xor
and
dec
or
push
in
int3
(bad)
loop
test
mov
mov
out
cmp
fstp
cmps
test
cmps
xor
dec
pop
adc
inc
xchg
outs
dec
sti
and
sbb
fcmovu
or
adc
dec
jbe
jmp
fist
inc
cwde
jno
out
push
std
dec
xchg
mov
inc
out
imul
lea
mov
dec
pop
sbb
push
fadd
add
sub
cli
test
xchg
repz
rcl
or
jge
cmps
cmp
jecxz
xchg
out
jbe
test
sub
push
jb
xchg
dec
loope
lods
mov
call
sbb
inc
or
adc
or
mov
(bad)
cli
mov
imul
popa
pop
lds
pop
(bad)
or
test
mov
mov
jmp
sub
jecxz
pop
fcom
jl
jnp
and
scas
jge
dec
adc
push
sbb
into
enter
popa
xlat
cld
fdiv
pop
lea
aad
sahf
test
inc
repz
pop
scas
ret
push
xchg
adc
xor
lods
ror
pop
add
popf
repnz
bound
(bad)
popa
xchg
or
icebp
mov
imul
xchg
loop
fnstenv
retf
cmp
inc
sbb
jns
fist
(bad)
adc
(bad)
fisttp
pop
mov
xchg
aaa
cli
ror
cwde
call
test
rcr
call
(bad)
mov
out
lods
add
cmps
mov
or
addr16
leave
in
xchg
jmp
sbb
fcmovnu
stc
inc
stc
cdq
mov
pop
push
adc
sahf
and
add
xor
icebp
xchg
iret
repnz
xor
xchg
and
popf
mov
repnz
dec
fadd
call
enter
out
jmp
lock
push
pop
cmc
sub
sbb
push
jg
add
xchg
retf
fwait
fwait
push
out
movs
pop
jmp
adc
ficom
sub
xchg
les
jne
push
mov
jne
std
sub
jae
mov
addr16
fdivp
fsub
jbe
xlat
dec
adc
(bad)
aaa
out
les
ficomp
pop
aaa
sub
inc
lods
sub
adc
jmp
outs
ret
ficomp
and
mov
and
ds
mov
pop
lods
sbb
inc
xchg
(bad)
push
sub
popf
test
add
not
fadd
ret
mov
or
pop
push
leave
cwde
xchg
mov
sub
push
mov
inc
repnz
lds
lock
fs
pop
(bad)
jo
jmp
add
icebp
dec
adc
jp
or
popa
dec
sahf
sahf
leave
dec
out
and
stc
and
push
jne
outs
jnp
fs
ds
ret
lods
loope
add
pop
fmul
jmp
cmp
xor
test
std
xor
jmp
and
mov
sub
adc
in
outs
clc
ror
xlat
pushf
xchg
pop
jne
push
fld
repnz
push
jne
sbb
(bad)
or
fcomi
cmp
inc
sub
fld
push
add
std
dec
test
or
cmps
(bad)
stos
clc
in
inc
cmp
js
xchg
sbb
and
sub
addr16
pushf
test
out
sub
mov
sbb
inc
adc
mov
jmp
ret
inc
or
mov
fcomp
xor
mov
inc
cmp
adc
jl
mov
sub
iret
and
fsubr
or
daa
nop
loop
ror
xor
sar
dec
or
inc
retf
jp
cmp
clc
jnp
add
ins
adc
cmps
push
std
mov
aaa
cmp
inc
test
fs
ret
xchg
add
dec
clc
or
sub
push
(bad)
sub
push
pop
mov
mov
dec
and
(bad)
out
aas
or
repz
pop
mov
cmp
enter
xchg
mov
rol
inc
jb
and
(bad)
xor
push
xchg
dec
movs
mov
push
inc
xor
sbb
(bad)
imul
(bad)
push
div
sahf
clc
sbb
xchg
jns
adc
lock
lds
adc
cmp
xor
lea
movs
ffreep
mov
mov
mov
dec
push
das
pop
ror
xchg
sbb
jge
sbb
iret
mov
popa
xchg
lds
fistp
push
repz
dec
rcl
dec
repnz
pop
and
dec
ins
pop
fadd
adc
add
ds
xlat
pop
das
jns
mov
sub
xor
xchg
cmc
pop
or
ja
push
adc
lock
(bad)
add
(bad)
push
addr16
mov
cmps
lock
int3
mov
call
test
jnp
push
bound
push
push
mov
ja
push
(bad)
std
movs
(bad)
pop
push
rol
and
cld
(bad)
shl
ss
jnp
test
lock
xchg
rcl
and
into
enter
inc
dec
jne
mov
sbb
aam
and
mov
cli
or
push
cmp
retf
adc
and
inc
leave
inc
pop
and
lock
pusha
inc
inc
and
imul
mov
loop
test
iret
out
dec
sub
add
enter
in
in
inc
stos
in
inc
or
repz
and
dec
adc
pop
push
adc
popf
xor
out
xchg
jp
es
sbb
leave
pop
(bad)
dec
clc
dec
jmp
cmp
push
or
xchg
adc
xchg
add
mov
in
cmp
movs
add
jmp
mov
lods
mov
mov
mov
add
(bad)
jo
sub
cdq
add
cdq
mov
jmp
in
inc
or
xlat
lods
cmc
test
cmc
xor
xchg
jl
push
pop
pushf
or
fnstenv
mov
push
(bad)
retf
cmps
jle
jo
push
push
and
dec
call
mov
popf
loopne
(bad)
cld
cmps
je
pop
cli
dec
gs
mov
clc
imul
rol
jae
sbb
es
(bad)
(bad)
jmp
and
fadd
repz
loopne
push
ins
(bad)
mov
cmp
stc
jae
jne
ret
xchg
jmp
mov
jne
addr16
lock
aaa
aaa
jp
lods
and
jp
jns
fwait
pop
jbe
mov
cwde
in
sub
(bad)
cmp
xchg
pop
cmp
xchg
cmps
fild
test
dec
or
(bad)
in
js
pop
jg
fs
jbe
int3
inc
fsubr
lock
inc
jae
push
dec
fmul
mov
rcr
(bad)
add
sbb
inc
cmp
xchg
dec
leave
add
call
adc
cdq
mov
mov
push
repnz
and
push
mov
sub
fnstcw
sti
push
and
push
dec
fisub
or
add
test
inc
lock
fcomp
ds
mov
sbb
imul
stos
inc
jmp
xchg
jbe
rcl
mov
xor
jnp
xchg
and
xlat
pop
fistp
mov
std
mov
jge
lods
icebp
out
in
sbb
pushf
clc
ins
cmps
icebp
sahf
mov
aad
popa
add
daa
hlt
cld
pusha
jmp
in
inc
int3
pusha
mov
aas
or
lds
stos
test
adc
outs
or
or
repz
imul
inc
mov
inc
pushf
dec
enter
jecxz
dec
cmp
imul
and
das
mov
das
aad
sahf
cwde
aad
outs
icebp
test
xchg
mov
cli
cwde
out
dec
xchg
cmc
add
pop
jno
aam
dec
adc
addr16
mov
lds
xchg
lds
push
out
add
mov
mov
mov
push
into
mov
pushf
sbb
inc
mov
dec
mov
dec
fs
(bad)
imul
jmp
imul
(bad)
sti
and
sar
scas
pop
sbb
dec
dec
and
ret
test
sbb
loop
xchg
ds
jmp
pop
test
push
clc
(bad)
mov
push
(bad)
mov
jb
cmp
nop
ret
or
ds
ret
jge
fcmove
or
int3
xor
pop
sub
mul
and
movs
mov
jae
jmp
mov
sub
push
add
xchg
xor
dec
and
dec
aam
jmp
ror
mov
std
inc
shl
into
jge
repz
inc
arpl
add
and
add
push
lods
jl
bound
arpl
dec
bound
sub
sbb
(bad)
add
push
and
and
push
test
lahf
or
jo
mov
das
pop
mov
sub
xor
out
mov
add
mov
adc
imul
dec
push
jo
xchg
push
(bad)
shr
adc
push
add
call
or
push
popa
scas
cmp
xchg
cli
gs
and
sbb
mov
jmp
xchg
int
xchg
pop
sbb
repz
xchg
jle
mov
and
retf
shl
sbb
xchg
imul
loope
test
out
lahf
inc
loopne
ds
jp
imul
scas
retf
or
push
addr16
pop
cmp
dec
dec
xchg
sar
push
mov
pop
inc
dec
push
lods
(bad)
loopne
pop
in
scas
push
jbe
sbb
inc
jne
shufps
shl
or
dec
ret
jp
je
popa
daa
mov
and
push
inc
imul
cmps
mov
gs
sbb
dec
scas
rcl
div
dec
loope
push
push
stc
pop
adc
cmc
cmp
ror
jl
push
xchg
pop
cmp
es
paddw
pop
xchg
outs
sbb
lods
(bad)
mov
test
les
push
sub
iret
cmp
cs
(bad)
fimul
add
ret
movs
push
adc
retf
in
adc
aad
and
rcl
pop
das
jae
inc
(bad)
xlat
jge
out
jnp
addr16
xchg
push
inc
or
dec
les
dec
push
fmul
add
cmp
into
mov
pusha
push
in
(bad)
mov
cli
xor
icebp
in
cdq
push
je
shl
pusha
mov
popa
out
in
popa
mov
push
arpl
mov
lahf
lods
xor
mov
cmc
je
pop
clc
int3
fcom
xchg
pop
(bad)
xchg
ret
retf
adc
fiadd
(bad)
lahf
movs
cli
mov
xchg
mov
push
ror
push
xlat
scas
arpl
xor
or
daa
dec
(bad)
sbb
sbb
xor
into
inc
sbb
mov
xlat
scas
sub
mov
das
outs
and
mov
xchg
xchg
xchg
and
outs
mov
add
leave
leave
repz
lahf
out
adc
cmp
enter
fstp
ds
retf
rcl
sub
jnp
jo
jno
sti
xor
jb
inc
bound
(bad)
add
movs
cmp
scas
adc
push
dec
iret
jbe
je
ja
xlat
imul
sub
es
push
in
loop
jno
and
call
in
ret
enter
inc
sbb
cli
or
leave
out
and
movs
inc
mov
arpl
cmp
sbb
ret
in
icebp
das
mov
test
imul
inc
xor
cld
mov
cmp
sub
leave
ror
or
lea
sbb
sti
adc
and
push
xchg
into
adc
cmp
lods
aaa
out
in
adc
pop
mov
jb
stos
cmp
out
icebp
or
mov
popf
mov
sahf
(bad)
push
mov
fiadd
xor
mov
pushf
test
(bad)
and
lock
stos
cmp
mov
and
mov
ret
shr
push
mov
push
mov
adc
push
inc
pop
cmps
push
xchg
add
nop
or
fwait
mov
jno
mov
jmp
push
in
pop
aaa
sbb
jo
test
jge
out
mov
dec
fidiv
sub
xor
xchg
je
mov
push
ss
push
mov
sub
mov
pushf
pop
and
or
scas
daa
inc
xor
neg
aam
lahf
pop
push
loopne
inc
mov
jmp
and
pop
cmp
cmp
sti
cmp
push
aad
call
cmps
clc
and
jmp
rcl
int
nop
repnz
push
imul
push
add
sub
pop
cs
pop
and
adc
ret
popf
xchg
pop
cs
mov
fild
xlat
mov
std
imul
int3
pusha
ins
push
mov
xor
mov
int
pop
cmps
mov
cmp
pop
xlat
inc
mov
pop
jae
and
out
cmps
retf
popa
and
sbb
and
lea
jns
vsubss
cwde
adc
push
dec
add
popa
and
das
imul
aam
add
sahf
jo
test
adc
adc
test
mov
dec
repz
push
xor
clc
push
mov
adc
(bad)
cmp
(bad)
and
fst
jge
cli
jmp
das
jg
loop
stc
pushf
(bad)
loop
scas
out
and
mov
sbb
pop
sar
dec
pop
mov
test
cmp
test
imul
shl
jl
mov
push
adc
lahf
push
jb
outs
test
xor
xchg
fsubr
call
nop
cwde
in
retf
mov
ja
enter
lahf
stc
fcom
mov
jl
xor
push
pusha
dec
out
je
shl
cmps
stc
mov
in
adc
and
add
into
mov
ret
xor
int3
es
cmc
inc
stc
loope
test
call
aam
xchg
pop
scas
or
xchg
cmp
sub
test
gs
or
or
mov
lods
jp
inc
and
or
shr
jmp
push
sti
out
push
push
dec
sub
mov
inc
pusha
inc
js
jge
mov
sti
push
aaa
int3
sub
pop
ss
cli
or
mov
ss
dec
cmps
xchg
inc
popf
retf
sub
in
push
iret
adc
adc
imul
clc
cwde
sbb
loopne
fiadd
loope
or
push
cmc
jge
mov
std
jbe
inc
retf
jl
sti
xor
push
lahf
(bad)
out
call
mov
iret
loope
mov
adc
and
out
or
inc
dec
or
jmp
ds
fldcw
xchg
mov
jge
xlat
mov
neg
add
loopne
dec
push
mov
jl
xor
mov
and
or
in
cmp
(bad)
(bad)
cmp
jmp
repnz
or
or
mov
jmp
push
pop
repz
test
xchg
sar
push
cld
adc
(bad)
cmp
cld
ins
adc
push
xor
pop
xchg
cmc
pop
outs
mov
dec
or
outs
fldpi
fisttp
movs
mov
add
aad
ret
inc
pusha
popf
dec
jo
jo
std
cmp
add
leave
inc
(bad)
int3
mov
inc
xor
test
adc
and
jecxz
(bad)
cmp
pop
aas
stc
ret
mov
stos
shl
cmps
dec
(bad)
xlat
fwait
mov
icebp
ins
jmp
ror
stc
adc
xchg
data16
lods
inc
or
test
sub
sti
ret
movs
mov
cmps
and
pop
xor
shl
cmp
shl
retf
fwait
push
dec
ret
add
push
add
inc
bound
sbb
nop
ss
xchg
bound
in
aad
mov
cmp
mov
xor
cs
mov
xlat
pop
retf
adc
xor
inc
ror
xchg
push
movs
les
test
and
es
inc
ins
jg
cld
xor
mov
jmp
test
in
xchg
in
lock
pop
rcl
pop
loope
or
out
sbb
jns
pop
dec
mov
push
sti
or
lahf
push
and
push
push
popf
xor
and
sub
dec
rol
dec
scas
ss
inc
inc
nop
mov
sub
pop
adc
ficom
(bad)
adc
inc
movs
ds
stos
(bad)
pop
xor
or
push
jbe
jp
pop
movs
xor
loopne
cmp
xor
(bad)
mov
adc
jns
movs
dec
fcmovu
test
call
add
mov
mov
fadd
outs
jb
ins
(bad)
inc
fsubr
xchg
xor
mov
inc
enter
jg
out
jg
inc
mov
aas
js
mov
sbb
icebp
mov
jno
dec
push
pop
pop
lods
popf
cli
leave
loope
lods
ficom
pusha
rcr
loop
sub
idiv
daa
push
loopne
dec
jp
hlt
(bad)
out
pop
adc
mov
jno
mov
jl
setb
imul
stc
sti
cmc
or
out
and
add
mov
push
add
icebp
nop
cs
repz
in
fcom
inc
or
into
adc
jae
aaa
js
adc
repz
inc
adc
sub
or
sbb
push
fdivrp
jb
mov
add
pop
ins
and
das
and
jg
cmp
popa
adc
ficom
xchg
or
push
dec
es
pop
(bad)
shr
add
mov
fldcw
adc
cli
mov
and
sbb
mov
lahf
push
(bad)
mov
xor
lods
xlat
xor
(bad)
mov
std
dec
cmp
sbb
bound
mov
cli
dec
fs
inc
lds
mov
aaa
popf
mov
mov
inc
xchg
adc
leave
push
out
dec
add
add
popa
ror
push
cdq
inc
add
jne
cdq
sub
repz
mov
jl
mov
lods
outs
(bad)
push
cli
loopne
mov
mov
jae
lahf
loope
enter
hlt
ins
mov
xor
mov
cmp
or
xor
sysret
shr
es
int
mov
xor
shr
mov
aas
fcom
sbb
xor
xchg
das
movs
outs
out
xchg
push
inc
fsubp
into
arpl
mov
push
pop
enter
inc
xchg
aad
div
adc
pop
lahf
hlt
movs
pop
loope
test
shr
mov
sub
pop
(bad)
pop
mov
lea
(bad)
cdq
call
lds
hlt
and
push
push
jp
jo
xchg
stos
stc
call
xchg
rcl
or
inc
outs
sbb
jns
repnz
je
pop
into
loope
sub
lds
cwde
repnz
xchg
adc
sub
dec
cmp
adc
out
test
(bad)
mov
pop
add
mov
xor
adc
or
in
push
mov
nop
leave
ins
xchg
gs
outs
sbb
jae
in
or
inc
das
mov
lods
rcr
hlt
mov
or
or
pop
pop
mov
sti
lea
mov
int
jl
iret
cld
pop
mov
jb
fidiv
and
or
in
stos
fwait
pop
sbb
sbb
sub
jmp
pop
rcl
push
mov
jb
add
adc
aaa
push
jp
std
cmp
xor
inc
pushf
imul
jb
call
mov
aas
cld
scas
cli
dec
leave
daa
mov
mov
dec
jl
pop
lea
cmp
push
cdq
add
mov
jmp
mov
xchg
cdq
sub
mov
or
sbb
inc
mov
cdq
xchg
repnz
jns
sbb
mov
cmp
int3
xlat
push
imul
sbb
(bad)
ss
rcl
pop
and
mov
cmp
rcl
std
mov
push
(bad)
rcr
outs
retf
mov
aam
into
fisubr
stc
loopne
xor
jb
ret
(bad)
shl
int
and
inc
mov
icebp
loopne
fmul
jmp
inc
aas
mov
jmp
mov
outs
mov
inc
mov
dec
fisttp
lea
jae
inc
outs
inc
jnp
dec
loope
cli
pop
loopne
xchg
xor
bound
adc
cmp
pop
data16
test
movs
push
into
fwait
mov
or
es
cmp
mov
lods
es
sbb
mov
stc
push
test
dec
mov
jle
dec
jo
dec
imul
loope
fdiv
jne
or
neg
adc
out
dec
fsub
pop
cmps
sub
cs
push
jp
jmp
push
mov
mov
sub
sub
mov
pop
sub
lea
mov
push
scas
das
movs
xor
(bad)
cdq
mov
sub
mov
test
add
jo
jo
mov
es
fs
inc
rcr
xchg
lock
and
mov
mov
ror
scas
lock
jecxz
(bad)
xchg
dec
pop
fsubr
fwait
sbb
adc
mov
sahf
fs
repnz
sbb
jae
popa
mov
mov
adc
ficom
sbb
dec
mov
adc
or
not
stos
mov
jmp
pusha
push
shl
cli
inc
mov
mov
mov
push
outs
les
xor
and
xchg
adc
adc
lock
mov
test
or
adc
cmp
jle
jns
(bad)
idiv
popa
xchg
cld
sub
mov
jg
pop
adc
aas
push
inc
test
es
add
fst
push
dec
pop
pop
and
loope
and
shr
push
ror
popa
and
ins
mov
jp
pop
mov
jp
pop
in
mov
(bad)
xchg
das
fnstenv
dec
xchg
inc
stc
xchg
dec
push
aas
rcl
ffreep
popa
sahf
jmp
pusha
into
in
jmp
aaa
mov
stc
out
xchg
mov
mov
add
mov
dec
movs
and
fcmovnu
imul
push
adc
in
xchg
ret
test
xchg
push
or
sar
into
iret
push
sbb
mov
or
mov
call
aam
mov
jbe
les
and
and
sbb
push
scas
xchg
das
or
iret
jno
lods
fstp
xchg
push
xor
adc
retf
push
iret
test
retf
test
fs
fist
adc
aam
dec
retf
xchg
xchg
or
mov
and
cmps
or
push
dec
ins
test
mov
(bad)
repz
xchg
xchg
mov
movs
(bad)
dec
pop
sbb
and
das
(bad)
jno
xor
mov
push
jmp
cmp
scas
jb
rol
fs
jnp
inc
ret
inc
mov
inc
out
dec
jne
pop
arpl
push
push
push
mov
cmp
cwde
std
mov
out
and
sbb
cmp
rol
cmc
sbb
mov
mov
mov
retf
arpl
pop
push
fcomp
lds
dec
cmp
icebp
lea
or
mov
add
in
nop
div
ret
jmp
mov
push
cmps
fwait
fwait
add
adc
cmc
jg
outs
iretw
retf
add
popf
xor
rcr
cmp
les
imul
jnp
xchg
sub
ror
shl
pop
scas
mov
mov
push
cmp
test
sub
test
shl
sti
pop
(bad)
xor
mov
out
aam
fldenv
loope
in
out
push
ins
and
mov
shl
retf
pop
xchg
cli
xlat
lock
das
mov
scas
aaa
sahf
jle
add
imul
(bad)
nop
xchg
fidiv
icebp
or
in
mov
push
mov
loop
(bad)
jae
dec
mov
dec
mov
stos
xor
pop
xchg
push
in
jmp
dec
sets
hlt
cmp
test
das
out
(bad)
icebp
mov
in
std
jge
jmp
adc
test
mov
push
js
pusha
or
(bad)
mov
cmps
pop
movs
fstp
fs
arpl
xchg
xchg
dec
neg
push
dec
cdq
pop
jno
retf
aad
mov
or
test
add
mov
mov
xchg
xchg
mov
pop
mov
cld
out
mov
fwait
out
les
mov
je
test
dec
or
sub
nop
jmp
fisub
(bad)
xor
call
add
inc
test
and
add
jns
mov
out
mov
push
out
pcmpeqd
mov
in
sbb
pop
dec
dec
je
in
jne
push
mov
repz
inc
or
cld
cmps
pop
lahf
nop
sub
nop
adc
loope
leave
push
push
mov
ins
rcr
sub
frstor
mov
add
jp
xor
outs
cmp
pop
jb
sbb
and
dec
and
push
dec
mov
imul
dec
loopne
inc
jg
pop
ds
push
loope
in
mov
mov
retf
ror
pop
out
inc
fisub
push
test
push
cmp
mov
mov
or
adc
jp
mov
lock
add
pop
test
(bad)
mov
inc
dec
xor
jo
mul
and
pop
jo
daa
adc
dec
aad
jg
sub
es
pause
jmp
mov
inc
(bad)
push
call
adc
and
sub
into
xor
adc
cld
push
lods
mov
add
inc
retf
cmp
mov
out
inc
ja
mov
enter
sub
or
ja
sbb
mul
mov
xchg
sbb
stc
inc
dec
test
dec
bound
ret
add
mov
cmp
and
ret
jmp
jge
and
dec
(bad)
xchg
ins
jmp
and
dec
cli
imul
push
cmp
je
sub
sub
adc
push
pop
jmp
test
pop
ins
mov
icebp
lock
scas
(bad)
aam
jae
pop
mov
xchg
out
lahf
ins
xor
sbb
bound
jp
jbe
add
push
or
iret
pop
dec
(bad)
xchg
mov
or
stos
cdq
pop
mov
jecxz
aam
dec
cmc
in
icebp
scas
jecxz
lods
or
cmp
push
sub
test
call
cmp
clc
jmp
fst
dec
stos
sub
out
(bad)
(bad)
inc
inc
leave
mov
or
fsubr
(bad)
lods
cs
cmp
ficomp
mov
cli
cmp
pop
xor
xor
adc
or
and
lods
loopne
and
xor
fcom
and
and
ret
push
imul
cmc
arpl
xchg
(bad)
pop
mov
cmp
in
jne
jge
sbb
mov
mov
cwde
inc
loopne
mov
jbe
sub
and
dec
mov
daa
int3
aad
xchg
and
inc
adc
push
pop
test
shr
mov
stos
cli
lods
xchg
test
ret
stos
pop
stc
adc
frstor
cmp
add
outs
lods
rep
clc
cmp
dec
pop
mov
adc
dec
pop
mov
jmp
dec
pop
ja
jmp
pop
push
push
movs
popf
loopne
ret
pop
xor
fcomp
test
pop
(bad)
mov
test
sbb
std
pop
pop
iret
pop
mov
sbb
mov
(bad)
push
mov
xor
push
movs
test
dec
out
xchg
out
sti
inc
sub
retf
jge
jg
jnp
out
test
jb
pop
sbb
jge
inc
cs
pop
pop
sbb
or
xor
and
xchg
sub
mov
cmp
dec
add
cmp
stc
shl
jb
push
push
cmp
xchg
aam
sub
cmc
fwait
pushf
leave
stc
jle
xchg
push
into
mov
ins
xchg
dec
adc
dec
xchg
ins
push
mov
test
aaa
pop
add
(bad)
fstp
inc
sahf
jns
push
push
push
inc
into
aas
aad
shr
sbb
pusha
adc
enter
les
sub
push
pop
jp
sub
cmp
retf
cwde
ret
xchg
xor
jle
mov
push
addr16
xor
cs
xor
std
adc
data16
outs
addr16
out
sbb
mov
aaa
fbstp
das
add
icebp
mov
xchg
sbb
retf
cmp
out
lods
mov
cmp
shr
push
icebp
mov
sbb
out
cmp
test
pop
cdq
mov
add
stos
push
jge
js
or
jmp
sbb
and
(bad)
and
hlt
jno
mov
mov
pop
out
xchg
adc
adc
mov
or
push
push
ss
les
movs
and
cmp
fs
mov
movntq
loop
pop
mov
jmp
stos
icebp
jnp
pushf
popf
pushf
pop
mov
(bad)
scas
push
js
dec
jae
pop
stos
mov
test
cdq
popa
call
(bad)
jbe
pop
into
test
fisub
ret
or
jae
jno
pop
outs
dec
popa
mov
test
pop
jle
pop
stos
fisttp
fucomi
mov
pop
cld
sbb
xor
test
enter
leave
jns
or
fst
mov
sbb
call
dec
adc
xor
sub
xchg
mov
xchg
fdiv
or
aam
push
js
xor
xchg
inc
pop
ds
fcomp
lods
cwde
je
adc
scas
mov
jg
and
dec
test
js
cmps
std
shl
jno
retf
mov
xor
sbb
rcr
pop
inc
movs
add
inc
fidiv
xor
sub
sbb
rcl
movs
sub
es
cmps
xchg
push
lods
cli
les
fld
test
inc
stos
inc
mov
mov
loop
idiv
xor
call
fsub
lds
ins
jo
mov
test
jge
mov
in
(bad)
mov
bound
test
or
adc
cli
loope
jne
lea
stc
iret
(bad)
or
sar
in
iret
sub
adc
or
fisubr
shr
fld
push
out
xor
push
xchg
push
jmp
sbb
ret
inc
imul
push
jecxz
loop
push
push
outs
push
push
inc
fwait
or
(bad)
cld
pop
scas
adc
jb
sub
imul
cld
add
in
retf
in
jmp
retf
fcomp
sar
lahf
call
xor
scas
inc
push
(bad)
repnz
call
xchg
test
mov
xor
outs
mul
jb
dec
or
ja
call
inc
mov
adc
jmp
adc
frstor
(bad)
repz
mov
retf
lahf
xchg
pushf
fucom
test
dec
clc
mov
xor
lods
pop
sbb
psllq
or
scas
inc
loop
mov
sbb
and
scas
mov
xor
in
mov
jp
in
loop
jmp
movs
dec
std
test
xchg
xor
mov
inc
jmp
push
sbb
adc
pop
mov
inc
mov
jg
sbb
out
rol
jae
dec
out
jns
jno
jae
mov
imul
dec
sbb
jns
mov
inc
aad
gs
cmps
aaa
mov
sub
jbe
sbb
jp
(bad)
cld
push
test
mov
test
xchg
jnp
iret
arpl
mov
pop
jo
call
enter
call
stc
cld
dec
movs
xchg
mov
sbb
pop
pop
stos
popf
out
mov
xor
dec
les
adc
pop
cmc
pop
fidiv
dec
out
mov
lods
inc
sub
mov
out
mov
dec
fnstenv
jg
push
xor
add
pop
outs
mov
and
test
test
lahf
pop
fbstp
mov
dec
xor
jnp
ss
mov
mov
in
sub
aad
mov
jp
pusha
ficom
cmp
xor
arpl
repnz
add
cs
push
cli
ins
or
pushf
xchg
jp
and
jmp
and
pop
xchg
data16
ror
push
push
xchg
jne
mov
push
xlat
out
fucomi
fdiv
dec
icebp
sbb
lds
xlat
cdq
xchg
or
icebp
dec
jno
inc
out
inc
or
mov
retf
aaa
ins
pop
ret
sahf
sbb
add
or
push
scas
(bad)
mov
sub
jecxz
dec
ret
dec
xchg
xor
dec
mov
adc
sbb
or
jne
jae
mov
pop
adc
retf
loop
ret
jg
add
test
push
adc
mov
repz
jecxz
sub
sbb
mov
shl
dec
adc
lods
mov
js
pop
loope
mov
cmp
retf
stos
or
push
call
sbb
adc
mov
sub
jmp
sbb
xor
repz
adc
push
mov
pop
fisub
and
sbb
scas
jno
sbb
leave
jo
test
add
mov
cld
out
shl
or
mov
jnp
cmps
push
xor
ins
out
sub
push
pop
fwait
dec
push
xor
push
adc
fisttp
add
and
xchg
js
and
sub
lods
jo
cmps
jmp
aad
retf
pushf
loopne
imul
in
xor
mov
xor
sbb
adc
push
imul
jg
mov
or
cmc
jl
leave
jg
push
xchg
loop
mov
ret
neg
icebp
mov
cmc
push
jb
nop
jb
pop
adc
jne
or
loopne
mov
int
jg
(bad)
rcr
in
sbb
retf
push
push
imul
fdivr
cmc
dec
pop
jmp
xchg
xchg
imul
fild
sbb
and
jmp
repnz
cld
data16
lock
loopne
push
mov
int
adc
push
outs
out
ins
test
push
pusha
inc
sbb
jge
and
sbb
xchg
(bad)
mov
test
ret
fidiv
jne
mov
test
sti
adc
int3
and
push
sbb
dec
jmp
sbb
add
or
int3
add
dec
ja
imul
popw
(bad)
xchg
loopne
pop
arpl
mov
sahf
push
ficomp
push
add
add
stc
retf
jl
dec
shl
popf
mov
push
inc
rol
mov
fmulp
xor
inc
xor
xor
das
test
and
jmp
cmps
loop
add
cmp
mov
dec
inc
scas
xchg
xchg
add
sbb
mov
es
mov
adc
adc
stos
jmp
push
mov
fisttp
sub
add
mov
fdiv
mov
inc
pop
sbb
cwde
ss
repz
test
in
jmp
cs
stc
mov
and
mov
inc
xchg
adc
lahf
xor
sbb
cmp
mov
pusha
outs
xchg
idiv
dec
call
mov
inc
xor
jmp
pusha
movs
xor
enter
in
xchg
test
add
add
(bad)
in
adc
cmp
adc
addr16
mov
aas
jp
and
out
bnd
add
mov
enter
neg
push
aam
retf
rol
les
pop
inc
add
adc
cdq
sub
xor
inc
lds
push
xchg
cs
mov
jp
stos
pop
jbe
(bad)
stc
bound
in
sbb
push
fsub
mov
xor
je
add
adc
ss
out
aaa
mov
pop
jl
xor
cmps
stos
data16
stc
das
adc
xor
jmp
xchg
mov
pop
rcl
retf
repnz
push
aad
xor
dec
adc
xor
xor
xor
stos
shr
nop
sti
jl
in
sub
adc
rcr
add
and
ins
pushf
mov
movs
mov
jmp
and
or
ds
mov
mov
outs
fiadd
xchg
rol
adc
push
mov
js
enter
and
add
pop
addr16
sub
das
add
inc
(bad)
mov
add
push
xchg
dec
addr16
push
(bad)
outs
shl
mov
xchg
sbb
mov
lds
or
stos
adc
retf
loope
pop
push
out
hlt
(bad)
xlat
cmp
mov
mov
lods
mov
mov
sub
mov
in
add
cmps
loop
lahf
pusha
in
test
add
add
pop
mov
fild
sub
pop
add
or
dec
clc
popa
fmul
lock
jg
in
(bad)
xchg
iret
adc
jge
fimul
imul
push
mov
(bad)
jmp
aam
push
push
cmp
lods
lock
imul
adc
push
cmp
in
xchg
jp
arpl
sub
outs
jo
aas
cli
pop
in
or
(bad)
cmp
adc
pop
stos
sbb
cli
dec
shr
test
push
pop
and
jmp
or
mov
mov
(bad)
pop
mov
inc
xchg
retf
retf
mov
cmps
xchg
push
pop
mov
(bad)
mov
sbb
mov
test
xchg
mov
mov
adc
arpl
repnz
adc
mov
jp
add
(bad)
mov
in
lahf
xor
test
mov
pop
stc
mov
and
xor
xchg
(bad)
sub
pop
and
and
mov
ret
sbb
gs
push
lods
cli
mov
sti
mov
and
je
or
xchg
aaa
push
jl
test
data16
xor
push
and
inc
aam
inc
mov
dec
pop
aaa
in
or
xor
js
dec
test
int3
pop
add
mov
jo
stc
pop
imul
iret
and
scas
lods
push
aas
inc
jle
lods
lgs
lock
xor
sahf
cmc
fnstsw
jmp
pushf
dec
imul
dec
mov
movs
xlat
cmp
repnz
mov
fsubr
add
(bad)
aam
fiadd
and
dec
out
ds
jp
jno
aas
xor
ins
dec
add
jmp
dec
rol
cmp
(bad)
and
js
push
jl
(bad)
xchg
xor
pusha
cld
cmp
out
mov
adc
cli
mov
aam
mov
cmc
nop
fstp
inc
push
ja
scas
int3
pop
dec
mov
add
sub
dec
mov
xor
and
sub
xor
fimul
xchg
lea
aas
push
sbb
in
inc
mov
mov
loop
fisttp
mov
(bad)
cli
loope
xchg
outs
(bad)
jns
and
imul
gs
sub
rol
or
inc
mov
adc
iret
push
mov
mov
push
lods
jo
addr16
rol
scas
pop
jo
sbb
in
pushf
sbb
mov
cmp
rol
xchg
or
jae
and
ja
retf
sbb
mov
and
inc
push
iret
icebp
cmps
call
mov
sub
repz
inc
loopne
xlat
pop
mov
jmp
or
popf
jns
fldenv
jp
mov
into
into
or
xchg
jae
xchg
(bad)
(bad)
and
ins
test
aam
pop
xor
ss
lods
aad
push
jb
xor
inc
push
push
xchg
jno
xchg
add
(bad)
or
pushf
ss
lods
sbb
inc
inc
in
or
call
push
loope
call
ror
mov
sbb
or
in
xchg
movs
cdq
test
fldcw
inc
xlat
and
pop
adc
in
adc
fild
int
mov
and
mov
fstp
and
and
mov
push
cli
ja
(bad)
mov
cdq
push
pushf
mov
ss
cld
mov
push
icebp
adc
cdq
mov
int3
and
mov
out
xchg
fist
out
jmp
dec
push
push
fild
or
cwde
xchg
inc
ins
repz
push
sbb
xor
adc
mov
push
mov
pop
mov
int
aam
cdq
lds
sahf
shr
xchg
cmps
dec
nop
pushf
dec
loop
mov
popfw
aas
popa
idiv
mov
rdpmc
jmp
jmp
addr16
cmp
in
sub
mov
xchg
in
mov
cmp
jle
mov
mov
clc
in
in
lods
mov
into
sbb
scas
(bad)
mov
bound
mov
inc
mov
(bad)
into
cmc
inc
rol
in
push
pusha
sahf
ins
xchg
out
sub
sbb
pop
or
add
inc
cmp
int3
sti
ror
(bad)
call
inc
add
loop
pop
jge
mov
mov
ins
sbb
push
cmp
jmp
call
in
icebp
cmp
hlt
aaa
adc
inc
xchg
mov
sub
dec
call
add
mov
in
out
sub
xor
lods
cmp
sbb
or
or
jnp
pushf
scas
lea
or
sub
pop
dec
jne
jb
bound
add
xchg
repnz
ja
dec
mov
outs
sysret
xchg
jg
aas
cmp
pop
mov
or
sbb
in
push
mov
push
inc
(bad)
mov
gs
pop
lock
test
mov
imul
bnd
push
push
cwde
sbb
es
cmps
pop
jle
daa
adc
inc
ret
mov
sub
dec
mov
cmps
jae
popf
push
dec
pop
mov
cmps
js
ins
mov
lods
push
jns
(bad)
or
mov
cmc
(bad)
aaa
xor
push
std
cwde
sub
scas
and
shl
fwait
push
mov
fs
test
pop
and
xchg
xchg
sub
in
jecxz
inc
push
adc
or
mov
mov
clc
std
ja
cld
sub
in
dec
stos
sbb
clc
leave
sub
pop
jg
adc
cmp
(bad)
xchg
stos
(bad)
out
ret
xchg
jmp
add
in
jns
add
xchg
mov
xor
retf
mov
out
or
idiv
cmp
fwait
xor
adc
xchg
xor
mov
or
cmps
sub
das
inc
xor
push
sbb
daa
mov
ins
xchg
inc
adc
push
sbb
sbb
lods
mov
sub
xchg
and
jns
push
cmc
repnz
in
or
in
push
lea
adc
dec
clc
pop
push
jp
push
or
jl
cmp
dec
aam
fbstp
rep
inc
jo
(bad)
movs
jo
pop
xchg
fs
xchg
jmp
sub
loop
cdq
add
lods
jno
xchg
mov
push
arpl
mov
inc
pop
xor
in
xchg
shl
dec
push
mov
leave
fld
fiadd
ret
jae
mov
push
jno
jmp
in
sbb
ja
cwde
arpl
mov
dec
sub
repz
jno
das
push
mov
sub
and
xchg
cmps
xor
jp
loopne
cli
or
mov
dec
dec
sub
neg
sub
std
shr
mov
xchg
pop
in
push
pop
xor
out
test
push
jl
cmp
(bad)
int3
call
jmp
adc
pop
cmps
sub
inc
pop
pop
mov
push
ja
cmp
nop
jl
test
xchg
cmp
sub
mov
or
(bad)
add
retf
cld
pop
mov
lahf
fiadd
lods
nop
sub
mov
pushf
adc
ret
or
mov
call
push
adc
xor
inc
push
cmc
movs
lods
(bad)
pop
mov
dec
and
movs
repnz
dec
jbe
cmp
or
and
adc
data16
jmp
(bad)
sti
jb
sbb
outs
sahf
push
dec
xchg
das
cmps
pop
mov
sbb
jmp
pusha
add
fimul
push
std
push
sub
jl
dec
mov
js
cmp
pop
dec
repz
jmp
mov
sti
jmp
mov
into
cwde
rcl
dec
mov
xchg
dec
ret
sub
jp
(bad)
out
sti
mov
mov
adc
or
cli
xchg
ja
outs
xchg
dec
addr16
dec
cmp
inc
mov
sub
sbb
(bad)
repz
dec
fs
addr16
mov
cmp
arpl
enter
mov
js
out
mov
dec
out
add
cmp
or
(bad)
sahf
sub
or
sub
jl
push
daa
add
fidiv
pop
push
push
mov
rcr
dec
repnz
dec
pop
cmp
pusha
jbe
xchg
outs
out
arpl
xchg
rol
jle
outs
push
std
call
jns
stos
(bad)
pusha
cmps
addr16
cmps
cmp
mov
(bad)
ss
dec
test
call
cwde
xlat
pop
xlat
call
(bad)
sbb
aaa
mov
enter
xor
pop
loope
and
inc
add
(bad)
mov
jecxz
ficomp
and
mov
(bad)
cmp
rep
loopne
(bad)
ins
or
dec
add
dec
ficomp
cmp
pop
stc
div
dec
std
mov
loopne
xchg
fidiv
cmp
outs
ins
ret
test
call
jnp
xchg
pop
shl
xchg
cmp
shl
sahf
jns
jle
mov
mov
xor
pop
and
inc
add
jp
adc
sbb
or
sub
jnp
mov
data16
xchg
sahf
mov
imul
(bad)
out
sbb
out
mov
cmp
out
bound
push
scas
sbb
pop
jmp
in
out
xor
sbb
ins
das
into
mov
lods
cld
das
pop
adc
mov
adc
dec
and
rcl
outs
dec
xlat
jg
sahf
sub
stos
scas
xor
mov
outs
sbb
cmps
sbb
xor
xchg
mov
jo
imul
cmp
mov
xor
adc
retf
jmp
jge
dec
(bad)
sub
and
out
cmp
push
ret
mov
fs
loope
or
ins
add
aad
dec
inc
xor
push
xor
mov
ins
pop
stos
lods
ret
adc
sub
in
mov
and
adc
fs
mov
mov
bound
pop
dec
xchg
xor
lahf
dec
sub
push
btc
xchg
or
cmc
add
stos
push
iret
(bad)
cdq
rcr
or
fsub
test
icebp
jecxz
ja
aad
jge
xor
add
imul
mov
ja
frstor
dec
(bad)
sbb
sti
dec
in
scas
icebp
icebp
ds
xchg
fnstenv
or
sahf
mov
dec
jge
mov
stos
or
sub
xchg
rcr
cmc
sbb
iret
sub
jle
aas
adc
mov
outs
push
adc
pop
dec
(bad)
test
inc
test
neg
(bad)
iret
popa
lds
rol
in
mov
mov
test
mov
pop
dec
call
sbb
in
sub
jmp
xchg
arpl
xchg
cmc
or
dec
call
push
ja
push
jo
sub
call
mov
jl
inc
jle
data16
test
jb
cwde
pop
cwde
cmp
mov
push
pop
mov
inc
jo
fadd
mov
mov
stos
dec
dec
cmc
pop
mov
mov
push
(bad)
push
dec
mov
inc
bound
sub
mov
repnz
cs
or
sbb
dec
inc
push
xchg
aaa
retf
cmp
ret
jne
xor
in
call
das
add
out
pop
jp
rcr
rcr
xchg
adc
sub
xchg
aam
jmp
adc
dec
cs
mov
mov
fadd
int
pop
mov
sti
call
jg
xchg
xchg
aad
mov
and
mov
test
lock
repz
fisubr
pop
int
lea
adc
stos
jmp
jp
dec
jmp
pop
(bad)
mov
xchg
xchg
dec
pop
dec
fadd
xchg
xor
push
test
in
add
pop
mul
xor
xchg
xchg
arpl
xchg
inc
add
xchg
fsub
gs
xchg
mov
sub
std
sbb
mov
push
sti
adc
sub
sub
pop
iret
inc
jg
sbb
add
icebp
(bad)
daa
gs
jle
mov
sti
push
mov
mov
mov
dec
(bad)
aaa
xchg
mov
dec
push
mov
jl
sub
add
and
imul
movs
inc
adc
and
mov
imul
std
mulps
pushf
ins
and
lahf
(bad)
inc
(bad)
jns
imul
fnstsw
xchg
mov
push
test
push
sub
add
out
mov
sub
leave
sub
sbb
add
lods
mov
scas
dec
jl
pop
fs
and
maskmovq
idiv
lods
pusha
test
cmps
sub
mov
cwde
cmp
mov
stos
pop
aad
dec
mov
adc
xchg
pop
cmc
inc
pop
call
outs
pop
pushf
outs
leave
pop
rcr
cmp
sbb
or
(bad)
xchg
dec
add
cmps
xchg
sub
pop
jmp
in
mov
mov
push
loopne
movs
dec
dec
in
xchg
cmp
rol
stc
inc
sub
das
mov
mov
xchg
jp
inc
jg
lahf
dec
hlt
xchg
cmp
daa
(bad)
jle
adc
lods
mov
mov
and
dec
(bad)
xchg
test
sbb
lea
xchg
cmp
push
sbb
test
cmp
mov
xor
and
push
jbe
outs
fld
loop
push
ficom
mov
adc
add
xchg
or
adc
mov
fsub
clc
imul
dec
push
push
nop
jo
xlat
(bad)
mov
fidiv
pushf
shl
push
adc
add
(bad)
loop
lods
mov
inc
cmps
dec
mov
(bad)
cmp
das
inc
mov
add
sbb
mov
in
add
test
cs
push
push
push
mov
or
sbb
inc
dec
xchg
inc
sub
adc
(bad)
and
or
xchg
inc
mov
pop
sub
inc
mov
mov
shl
add
arpl
das
test
sub
in
adc
jle
shl
push
jp
xchg
xchg
mov
sub
xchg
fucomip
in
and
cld
imul
jge
jb
(bad)
xchg
cmp
in
inc
pop
mov
push
shl
cmp
jae
push
cmp
pop
xlat
daa
ds
xchg
stos
mov
stos
je
je
inc
mov
les
(bad)
mov
das
dec
gs
and
sbb
pop
xor
jo
fiadd
loopne
test
jmp
cs
xor
xchg
sahf
sub
sbb
retf
into
cld
xor
data16
ret
imul
je
out
loope
movs
xor
jae
jle
mov
loop
gs
clc
mov
xor
cs
xchg
push
xchg
in
mov
nop
add
or
dec
rcl
xchg
push
xor
pop
hlt
lahf
outs
ror
xlat
and
pop
lods
mov
xor
je
jns
leave
in
imul
(bad)
out
ss
aaa
xchg
and
ins
retf
lods
retf
sar
push
sbb
in
push
dec
les
pop
shl
clc
xor
pusha
mov
shl
sahf
fistp
mov
pop
push
xor
pop
mov
call
push
push
push
and
rol
sub
enter
push
rol
push
xchg
repz
mov
push
push
and
mov
push
xor
cmc
mov
sbb
or
(bad)
sub
cs
(bad)
movs
inc
adc
mov
and
and
in
add
pusha
dec
adc
stc
fadd
inc
imul
gs
pop
mov
xor
and
pop
faddp
push
dec
aad
jns
push
enter
loop
or
fwait
and
cmp
dec
cwde
inc
ss
jb
out
std
dec
sbb
in
push
mov
ins
int
iret
and
xor
inc
add
aam
mov
mov
int
and
or
pushf
je
(bad)
out
call
in
add
lea
sub
jmp
inc
pop
mov
(bad)
sub
xor
push
ficom
rcr
xchg
inc
in
mov
mov
mov
inc
and
stos
xor
lahf
adc
ss
enter
push
push
sbb
mov
pushf
adc
retf
aad
clc
gs
and
pop
push
daa
shr
xchg
push
outs
not
ror
movs
dec
push
daa
leave
mov
retf
add
test
add
and
push
pop
or
or
out
call
xchg
cmp
out
push
xor
xchg
sbb
jbe
xchg
in
imul
mov
mov
fild
inc
gs
adc
and
cmp
stos
pop
fs
ret
jg
jl
inc
pop
arpl
sub
std
into
push
ins
push
xchg
cdq
jecxz
shl
or
pop
pop
lock
jmp
int3
leave
mov
jbe
push
fld
inc
mov
fiadd
icebp
mov
cld
pop
mov
pop
in
rcl
inc
sbb
in
add
push
ror
mov
sbb
xor
jmp
test
and
mov
not
imul
repnz
ret
xor
into
sbb
dec
mov
inc
lds
lock
movs
movs
lods
mov
mov
ss
mov
scas
js
pop
ds
push
popf
jbe
fiadd
jmp
out
pop
mov
mov
out
imul
xor
imul
adc
jmpw
xor
push
sub
into
xor
add
(bad)
adc
and
(bad)
mov
dec
into
ss
ss
or
loope
and
mov
adc
mov
pushf
add
xlat
inc
cli
ds
pushf
sub
mov
fsub
jns
add
or
iret
vmread
mov
in
adc
sti
mov
mov
shl
xchg
jne
ins
aad
mov
xor
pop
std
ss
cmp
mov
movs
and
cmp
sub
clc
stc
add
loopne
test
sbb
push
cmp
outs
out
cmp
jecxz
and
push
into
xchg
mov
cmp
jmp
lea
hlt
pop
jbe
scas
push
call
pop
mov
cmp
sub
push
jmp
inc
push
pop
xor
xchg
scas
(bad)
out
mov
iret
data16
mov
sub
pop
test
mov
pop
iret
lahf
cmc
loope
push
xlat
or
leave
pop
out
test
and
ds
and
std
dec
fwait
(bad)
fistp
inc
test
dec
jg
sahf
lods
scas
or
inc
mov
ds
iret
sub
cwde
xor
mov
add
clc
adc
jl
and
addr16
pop
std
add
push
pusha
in
mov
jmp
loopne
not
mov
pushf
lods
mov
xchg
push
and
fild
add
cmps
dec
adc
sbb
sub
mov
sub
pop
add
popf
push
and
add
cmps
jne
or
aam
push
shr
jb
(bad)
xchg
push
or
mov
xchg
mov
mov
xchg
pop
movs
fmul
imul
jno
or
sub
mov
mov
outs
stc
sub
mov
jb
test
movs
mov
or
dec
mov
popa
mov
rcr
xor
gs
pop
les
in
pop
mov
aad
retf
xchg
popa
sub
imul
jecxz
mov
ds
adc
push
lock
sbb
jmp
inc
push
ins
movs
push
dec
into
retf
jns
outs
movs
jnp
and
lds
sub
jae
out
(bad)
xchg
inc
mov
mov
js
sub
(bad)
mov
jle
pop
adc
cmp
popa
aaa
mov
mov
mov
xor
pop
jg
and
mov
xchg
je
popf
or
sub
pop
movs
fs
ins
jmp
dec
not
rcr
adc
stos
inc
mov
jp
jbe
ss
push
das
jbe
push
lods
adc
pop
rcl
pop
lock
aam
lds
push
in
popf
dec
clc
pop
jmp
adc
out
das
jp
or
and
mov
not
fidiv
jns
ins
jae
aad
push
add
push
adc
repnz
fdivr
stc
adc
mov
iret
mov
ins
rcr
or
mov
sub
push
ret
(bad)
adc
movs
xchg
pop
sub
lock
adc
sbb
popa
xchg
xchg
pushf
xchg
push
mov
rol
sub
jno
dec
adc
or
out
xrelease
aad
cwde
scas
push
ins
push
dec
(bad)
(bad)
mul
mov
and
repnz
dec
sbb
mov
fmul
stc
cmp
lahf
in
xor
inc
and
fdivr
or
jmp
push
adc
xlat
dec
push
pop
into
lea
dec
jg
rol
jbe
or
push
bound
jbe
sbb
imul
in
loope
mov
clc
and
icebp
iret
jo
scas
cmps
sub
leave
shr
adc
fwait
mov
push
sbb
mul
pop
and
inc
sbb
(bad)
in
adc
(bad)
mov
lods
sbb
jns
cwde
ja
(bad)
idiv
xchg
jnp
sub
xor
jmp
lods
in
push
or
jmp
stc
stos
xchg
mov
dec
add
mov
not
push
std
dec
(bad)
pop
fwait
enter
sub
mov
test
jae
lds
cmp
sub
jne
mov
mov
lods
mov
dec
push
(bad)
xor
fadd
(bad)
in
jle
sar
pop
popf
cdq
push
icebp
push
mov
nop
xlat
(bad)
mov
shl
and
or
(bad)
mov
push
jmp
adc
push
or
out
sub
xchg
nop
push
xchg
xchg
mov
xchg
or
int3
popf
pop
sbb
mov
xchg
xchg
(bad)
sbb
test
dec
fstp
lock
jo
sub
fstp
ret
inc
stc
xchg
jnp
xor
nop
bound
leave
repz
push
shr
fs
mov
pop
pop
dec
repz
sar
mov
mov
adc
sub
sub
jle
sahf
push
aad
adc
adc
dec
dec
mov
lahf
push
repnz
push
dec
add
outs
(bad)
int
pop
sti
jp
adc
cmp
xchg
popf
mov
adc
sbb
test
mov
(bad)
xlat
adc
mov
imul
jae
push
and
arpl
pop
ret
mov
pop
lahf
jg
adc
pushf
jecxz
pusha
mov
jo
outs
mov
mov
jp
mov
(bad)
rcr
xor
adc
int
lahf
addr16
sbb
dec
repz
nop
cmp
cmp
in
mov
push
mov
les
cmp
push
push
push
or
push
out
mov
jno
jae
push
or
push
mov
mov
cdq
(bad)
in
je
nop
pop
pop
push
sub
aaa
mov
daa
mov
cmp
sub
mov
dec
int3
leave
sbb
iret
mov
xor
add
mov
in
jge
in
(bad)
clc
lods
retf
loopne
leave
cdq
pop
sub
dec
jo
fdivr
imul
push
not
mov
xchg
sbb
mov
sub
arpl
aam
outs
cli
or
pop
shl
sub
push
cmp
cld
jge
push
mov
jmp
movs
jns
pop
cli
cli
les
nop
das
push
push
push
(bad)
enter
test
sbb
popa
mov
retf
jnp
js
push
aad
pop
mov
mov
inc
fiadd
jbe
in
(bad)
pop
sbb
popa
fild
and
mov
inc
mov
pop
shr
sub
inc
mov
rol
cs
aaa
repnz
in
dec
mov
adc
data16
je
inc
jle
aaa
cmc
ret
enter
sub
test
sub
push
mov
rcl
adc
pop
mov
adc
xor
shl
ret
add
add
adc
test
pop
cwde
clc
xor
mov
daa
in
push
mov
ins
sbb
sbb
cmp
cwde
cmp
push
pop
aaa
(bad)
rcl
imul
mov
ins
adc
pop
sbb
mov
mov
mov
sahf
mov
mov
cmc
cmps
add
call
push
push
mov
fwait
adc
cmp
fstp
fnsave
fisttp
and
push
mov
dec
mov
jmp
ret
jecxz
in
dec
cmps
or
or
(bad)
scas
loope
sti
jae
push
in
ret
cmp
movs
das
mov
out
xchg
sub
mov
inc
cmp
iret
sbb
cwde
leave
in
mov
pop
jl
jb
inc
mov
xchg
xchg
inc
push
or
and
xor
aam
or
(bad)
xchg
jmp
add
daa
mov
ss
lea
push
in
adc
(bad)
iret
cs
les
push
call
out
cmps
fdivrp
out
ja
mov
sar
inc
xor
push
mov
fdiv
rol
rol
sbb
mov
xor
jbe
dec
out
add
aas
js
clc
aas
fwait
cmps
jno
sbb
cmp
xchg
xchg
mov
js
aas
pop
repnz
call
daa
imul
popa
pop
push
xchg
es
mov
arpl
or
jmp
xor
sti
and
xchg
mov
xchg
sub
and
push
test
xchg
pop
xor
mov
xchg
cmp
mov
popf
daa
das
dec
sub
in
mov
dec
out
mov
pop
xor
cdq
pop
or
and
in
mov
and
adc
fstp
add
mov
push
or
sahf
mov
in
xor
push
and
cmps
sub
(bad)
loopne
(bad)
in
or
popf
mov
pushf
mov
fist
shld
gs
jnp
inc
gs
rcr
mov
fwait
daa
lea
mov
fld
pop
mov
jmp
xchg
or
popa
inc
movs
dec
and
xchg
xchg
xacquire
cwde
and
fs
mov
ja
and
push
dec
and
int
mov
js
pop
int3
lds
mov
in
mov
lea
fimul
movs
daa
dec
xchg
cmp
je
and
inc
jno
fsubr
rcr
or
out
int
cmp
movs
or
test
jge
es
sub
enter
ss
mov
mov
adc
pop
xchg
push
(bad)
xchg
adc
mov
pop
push
lds
lahf
ins
push
cli
inc
test
adc
push
stc
sbb
cwde
aad
les
push
pop
inc
push
out
adc
cs
cmps
add
loop
or
out
call
push
sub
aas
out
or
mov
ss
sbb
ja
push
sar
lods
cmp
mov
mov
ja
je
sub
sbb
sbb
adc
push
lods
sar
sbb
pusha
fisubr
ror
and
add
(bad)
and
das
dec
or
fsub
sub
mov
lock
mov
mov
int3
mov
(bad)
nop
sbb
fcomp
retf
loope
ret
repz
pop
daa
jne
pop
out
jno
sub
fldcw
sub
xor
clc
inc
cli
in
mov
cmp
rcl
push
dec
cmp
dec
daa
(bad)
push
mov
shr
sub
loope
enter
jl
mul
lahf
adc
adc
pop
cs
xor
arpl
push
mov
pop
pop
mov
xchg
mov
repnz
std
(bad)
cmp
dec
addr16
push
fild
loope
cdq
mov
bound
xor
dec
push
fistp
bnd
out
cld
lods
ds
push
inc
ss
mov
fst
je
xlat
sub
push
mov
mov
sbb
add
aad
sub
inc
data16
mov
cmc
push
sub
adc
add
xor
xlat
out
fisub
in
jmp
and
scas
ins
hlt
lock
es
add
cmp
xchg
xor
int3
lods
inc
sbb
inc
loop
mov
movs
pop
xor
jmp
mov
repnz
(bad)
jmp
push
les
cmc
inc
stos
push
(bad)
adc
sub
sub
loop
stos
sbb
xor
inc
mov
ret
inc
xlat
add
stos
das
mov
int
arpl
pop
push
daa
jg
or
pushf
fcomip
jmp
fild
imul
test
cs
fs
pop
push
mov
int
jo
ret
xchg
mov
aas
xor
pushf
mov
pop
jle
(bad)
test
push
sub
(bad)
cmp
std
cs
inc
out
fisttp
aas
shr
les
sub
imul
sbb
daa
rcl
dec
lds
adc
sbb
push
(bad)
loope
xor
xor
aas
pop
sub
(bad)
ja
sbb
icebp
add
enter
cmps
sub
in
ret
and
call
ds
push
in
xchg
jl
js
pop
call
(bad)
mov
retf
jb
arpl
leave
jno
pop
arpl
adc
mov
inc
cmps
jmp
cmps
push
and
mov
rcl
push
ins
test
cs
fucompp
inc
jno
xchg
lds
fiadd
fs
out
outs
xor
and
lds
or
icebp
pusha
cmp
rcl
mov
pop
ja
xchg
fcomip
data16
lahf
cmps
jge
xchg
shr
cmp
(bad)
enter
in
cs
aas
add
mov
pop
je
lods
repnz
adc
push
mov
xor
and
lea
cdq
outs
sar
lods
dec
inc
cli
into
lock
rcr
and
arpl
gs
mov
inc
ds
xor
aam
and
cmps
pop
sbb
sbb
adc
or
and
lods
mov
pushf
jg
pushf
push
outs
xor
mov
dec
jg
dec
mov
or
dec
in
lds
sub
xor
pop
pop
push
jns
sbb
ffreep
int
jecxz
mov
fucom
aam
and
pop
std
or
jmp
aaa
stos
sbb
jecxz
mov
shl
ins
xor
into
mov
ficom
jecxz
mov
sbb
retf
and
movs
outs
ret
pop
call
test
loope
or
(bad)
data16
mov
js
fs
icebp
lods
lds
pop
sbb
mov
sbb
int3
inc
sbb
jnp
adc
sbb
mov
mov
jmp
dec
fisubr
sub
test
(bad)
adc
dec
daa
xlat
cwde
mul
cwde
xchg
aaa
jecxz
bnd
sbb
retf
jne
jecxz
xchg
pop
mov
sar
mov
cmp
xor
xor
pop
cmp
sub
ins
fwait
ins
sahf
out
sub
fiadd
retf
adc
outs
xchg
aad
adc
xchg
pop
push
push
loopne
fsubr
fld
mov
in
sti
stc
mov
sahf
call
xor
ss
xchg
lods
and
push
mov
rol
add
(bad)
and
iret
push
mov
nop
dec
cmp
outs
mov
pop
mov
mov
sbb
daa
fs
mov
jg
dec
cmps
sbb
lods
inc
ficomp
ficomp
push
pop
call
mov
or
jo
jbe
enter
cwde
adc
or
nop
cmp
xor
sub
mov
cmp
mov
test
enter
popf
xor
inc
in
sub
cmp
lods
movs
lock
dec
mov
loopne
fisubr
pop
xor
inc
cmp
dec
cmp
dec
sahf
add
inc
xchg
push
and
daa
cmps
imul
xchg
adc
mov
mov
adc
inc
jp
or
xor
arpl
sub
vpsllw
out
daa
mov
fldcw
mov
lock
mov
je
mov
enter
sub
add
shr
cs
int3
sbb
push
and
ret
jne
mov
sbb
scas
clc
stos
sub
daa
in
fmul
jbe
pop
push
outs
ins
sti
popf
sub
jl
mov
cmc
mov
inc
fstp
or
in
jge
push
sti
push
in
je
mov
fsub
xchg
adc
(bad)
shr
xchg
inc
cli
cmp
push
pop
jns
mov
(bad)
jge
xchg
mov
iret
cmp
sbb
daa
mov
scas
push
fistp
in
outs
pushf
and
xor
(bad)
out
call
sub
inc
inc
jns
cdq
(bad)
pop
add
cmps
adc
mov
pop
arpl
mov
int
fst
test
mov
push
ret
movs
jg
test
mov
cmps
cmp
call
shr
into
loopne
xor
faddp
cmp
jge
jae
lods
fidivr
sub
neg
mul
xchg
inc
add
add
adc
sbb
sub
push
mov
jnp
xchg
mov
inc
inc
jecxz
sbb
adc
leave
stos
or
pop
dec
push
lea
fdiv
movs
push
jne
xchg
cmp
sbb
mov
pop
adc
push
xor
or
push
mov
pop
xchg
mov
test
push
and
adc
leave
inc
ja
adc
fucom
xor
ret
or
and
push
push
add
jg
aam
push
xor
leave
js
ins
adc
pushf
xchg
aas
jmp
ss
js
inc
in
push
cwde
fisub
pop
jb
loope
xchg
ss
stos
or
xchg
(bad)
cmc
xchg
inc
scas
lahf
xchg
(bad)
mov
pop
(bad)
sbb
mov
and
sahf
mov
cmps
aad
loope
xlat
push
sbb
ins
mov
loopne
add
jmp
sbb
mov
jae
xchg
jo
or
mov
dec
add
mov
test
xchg
dec
std
(bad)
and
and
ins
sub
in
loopne
sub
(bad)
out
test
pxor
int
cmp
popf
scas
fwait
lds
retf
cmps
imul
dec
jb
out
inc
add
jmp
shl
sbb
cmp
cmp
in
test
dec
(bad)
xor
(bad)
out
iret
test
idiv
pop
pop
mov
and
outs
mov
xchg
mov
ins
sub
jl
push
lock
arpl
push
jno
pusha
jg
inc
mov
xchg
and
cmp
sub
jge
jne
mov
lock
fadd
icebp
pop
dec
adc
ja
int3
adc
cmps
dec
inc
mov
nop
add
mov
out
or
out
retf
pop
add
or
mov
fld
fimul
jbe
rol
leave
xchg
mov
xchg
in
sbb
add
sub
jp
pop
nop
and
mov
int3
fidiv
jge
inc
add
fst
ins
add
(bad)
arpl
xor
fstp
aad
add
test
lods
(bad)
retf
jle
sti
and
je
sub
outs
dec
xlat
sbb
cmp
add
std
retf
mov
ret
std
and
fisttp
sub
pop
or
dec
movs
cmp
jge
ds
sar
sbb
sub
inc
call
jge
mov
pop
pop
retf
in
mov
cmp
std
pop
pop
adc
mov
jmp
fadd
mov
jne
outs
mov
xor
and
jae
in
pushf
xchg
xchg
shr
mov
aam
mov
push
mov
and
and
push
mov
sub
or
(bad)
gs
mov
jge
es
xor
rol
sub
movs
add
ret
dec
test
cli
leave
jne
enter
xor
mov
imul
mov
dec
push
je
mov
pop
(bad)
dec
ins
imul
(bad)
in
mov
adc
aam
and
lods
inc
jp
jb
aam
cmp
mov
stc
xchg
arpl
jle
fidiv
mov
mov
rcl
adc
dec
mov
outs
inc
inc
imul
pop
mov
pop
aam
scas
xor
icebp
xor
inc
inc
and
in
mov
mov
dec
push
xlat
loope
xor
lock
xlat
out
inc
pusha
je
add
jecxz
ret
cmp
inc
fadd
xor
push
mov
addr16
and
mov
ins
sub
sub
clc
inc
dec
stos
icebp
pop
sbb
test
int3
imul
push
mov
out
adc
jne
mov
(bad)
shl
cmp
mov
call
pop
not
xor
cmc
adc
or
scas
test
movs
xchg
sub
(bad)
sti
aad
test
js
jbe
xchg
mov
ss
movs
movs
in
icebp
lock
jb
cmps
inc
sahf
xor
adc
nop
shr
or
in
repz
cmps
sbb
mov
xchg
inc
(bad)
jmp
push
or
pop
adc
ds
dec
adc
out
cdq
(bad)
repnz
add
xlat
fs
push
mov
pushf
ds
daa
cmp
add
arpl
mov
jno
push
cmp
ds
out
repnz
stos
stos
dec
mov
popa
loop
cld
cmps
int3
push
fnsave
adc
sar
xchg
es
sub
dec
repz
scas
push
adc
out
cmp
add
clc
cmp
retf
out
daa
retf
ja
adc
aaa
push
mov
xchg
leave
outs
and
and
mov
pop
push
push
xor
(bad)
pop
cmps
cld
mov
daa
out
test
gs
cmp
call
xor
and
mov
dec
push
hlt
jmp
and
fwait
dec
push
mov
cld
jg
rcr
cmc
or
mov
(bad)
and
inc
and
cli
ss
cli
adc
cmp
ret
mov
xchg
test
or
cmp
mov
sub
pop
xor
sbb
cmp
loope
lock
inc
stos
loope
jle
mov
ja
or
aaa
test
cli
cmp
icebp
sub
test
adc
add
lods
sub
pop
mov
xchg
xchg
pushf
inc
stc
out
dec
mov
cwde
add
cmps
bound
and
stos
xchg
out
sbb
ja
sub
pop
(bad)
pop
std
movs
xchg
mov
jl
mov
jle
shl
mov
jmp
sbb
loopne
mov
ins
push
scas
cs
dec
shl
lahf
out
or
ins
test
adc
(bad)
pop
sub
or
neg
es
mov
mov
sbb
fcmovne
cmovl
into
repnz
push
jmp
ins
pop
mov
mov
sub
loop
bound
jns
mov
fisub
arpl
cmps
es
dec
mov
xor
pop
mov
pushf
inc
lds
add
loop
and
sub
rcl
sub
push
aad
mov
dec
mov
cmp
inc
arpl
mov
mov
adc
inc
push
out
push
pop
jo
add
or
in
jmp
jmp
add
out
mov
xchg
dec
cmp
ret
sub
stos
xchg
mov
push
push
sti
add
push
loopne
and
ss
stc
fidiv
shr
jmp
xor
fild
mov
lods
in
sub
in
outs
sub
or
fnstcw
add
out
mov
or
mov
gs
push
mov
push
popf
pop
enter
mov
or
pop
mov
aaa
mov
or
dec
add
icebp
dec
sbb
add
pop
(bad)
int3
fidivr
sahf
mov
mov
dec
cmp
and
test
xchg
fiadd
fisttp
lds
jnp
aaa
cmp
jnp
add
mov
and
jl
ins
out
shl
jmp
cmc
push
pop
les
pop
sub
sbb
add
std
pop
aam
retf
adc
mov
xor
call
cdq
xchg
mov
ins
xchg
jmp
push
or
aas
int
lock
cdq
cli
xchg
ins
je
fidivr
push
mov
pop
mov
mov
leave
pushf
in
stos
xlat
call
fcmovb
pop
mov
push
in
push
lock
or
add
das
jmp
aas
and
pushf
es
mov
aaa
xchg
mov
adc
adc
add
dec
push
aam
add
ds
cmp
(bad)
push
jne
mov
pop
in
cli
add
call
jbe
ins
dec
and
loope
int
popf
mov
dec
sar
push
fistp
mov
sbb
retf
add
jl
mov
pop
add
xchg
dec
sub
sar
arpl
mov
repnz
lahf
mov
(bad)
xchg
outs
stos
cmps
adc
or
dec
jbe
xlat
(bad)
and
adc
mov
xchg
cmp
add
aas
icebp
adc
or
mov
dec
mov
inc
int3
call
jmp
out
dec
add
test
cmp
vmread
bnd
dec
fisttp
cmp
mov
cmp
sbb
ds
cs
push
imul
cli
test
scas
mov
into
mov
xchg
fadd
mov
arpl
mov
sub
mov
out
xchg
mov
pushf
jge
call
mov
movs
cmp
std
mov
bswap
mov
cld
mov
xor
mov
fstp
sub
push
addr16
cmp
pop
int3
les
js
loopne
add
int
xor
enter
sub
cmp
adc
push
and
mov
(bad)
lods
les
or
paddusw
mov
(bad)
movs
out
test
and
sbb
mov
jg
xor
bound
icebp
(bad)
xchg
mov
push
scas
je
xor
push
jbe
jmp
adc
cmp
add
inc
ja
inc
fcom
(bad)
xor
add
dec
fs
dec
fwait
cdq
xchg
dec
jnp
je
adc
cdq
stc
cld
inc
mov
mov
fbstp
adc
pop
cmps
and
pop
xchg
fisttp
fldenv
cwde
mov
and
inc
lea
sub
clc
xchg
lds
in
jno
sbb
movs
mov
xor
not
jle
loope
xchg
mov
dec
mov
lock
jp
popf
movs
sbb
mov
jnp
inc
sbb
scas
test
fdivr
clc
jb
mov
ins
mov
je
cli
jbe
add
(bad)
jo
not
fistp
cmp
push
add
mov
pop
pop
ins
mov
ins
mov
cmp
jnp
in
mov
lods
fld
push
ja
cmps
ja
sbb
(bad)
out
push
xchg
test
add
mov
retf
fst
adc
bnd
or
mov
cmps
mov
clc
ret
add
loope
mov
sar
retf
jo
outs
dec
popf
ja
mov
add
(bad)
rcl
lea
pop
pusha
mov
push
addr16
outs
(bad)
in
ror
cmp
cmp
xchg
movs
add
inc
pop
loop
jl
cmp
cli
xchg
inc
pop
cmp
cmp
scas
adc
pop
inc
add
mov
(bad)
mov
je
fdivp
icebp
jl
and
push
out
lahf
adc
out
mov
in
sbb
popf
mov
cmp
out
push
mov
cmp
push
dec
test
xchg
shr
cdq
adc
lods
(bad)
mov
jnp
cmp
xchg
push
rcr
in
call
sbb
push
stos
(bad)
xor
mov
or
adc
out
fwait
repz
stc
sti
das
mov
sbb
aad
xor
stc
arpl
lock
jmp
sbb
add
xor
lahf
and
ins
xor
out
pop
es
out
sub
jae
add
ror
xor
enter
xor
add
or
sahf
mov
les
push
bound
pusha
add
shl
adc
ins
in
pop
push
dec
(bad)
sub
je
neg
pop
sbb
loope
pop
cmp
inc
jo
iret
xchg
or
push
or
jnp
jno
lock
loop
call
scas
neg
jne
sub
and
fdivr
dec
mov
retf
ja
mov
shl
adc
aaa
loope
das
pop
arpl
iret
mov
les
(bad)
jmp
lods
push
out
inc
je
adc
push
das
test
xor
sbb
jmp
mov
hlt
cli
pop
jo
je
mov
add
ds
pushf
cmp
sar
shr
mov
jmp
mov
out
inc
push
mov
repnz
fsubr
push
scas
and
fsubr
jb
xlat
sbb
pop
sbb
gs
lahf
ja
dec
jne
movs
or
jl
add
xchg
std
xor
jns
fldcw
cmp
add
in
cmps
rcl
jecxz
or
push
jmp
fdivr
or
pushf
in
mov
dec
adc
sbb
jecxz
mov
test
imul
mov
pop
adc
out
adc
(bad)
stc
lock
and
aam
dec
stos
pushf
mov
sub
das
repnz
xchg
gs
std
jmp
jecxz
jmp
stc
inc
sbb
in
inc
inc
mov
(bad)
pop
cli
outs
lods
mov
cmp
inc
push
pop
fisttp
cmp
and
mov
imul
and
pop
rcl
scas
std
inc
sbb
bound
push
call
fdivr
add
out
jg
sti
(bad)
fcomp
inc
fisub
(bad)
add
arpl
sub
test
es
cs
gs
cwde
call
out
jbe
cvtps2pi
pop
das
jns
jecxz
aam
data16
jmp
rcl
jae
fsubr
pushf
aaa
push
and
pop
push
cld
nop
jne
cdq
dec
mov
inc
popa
xchg
mov
add
loopne
sti
leave
ret
call
popa
repz
xor
jae
push
sbb
js
pop
iret
lahf
inc
(bad)
cld
aad
sbb
rol
add
outs
icebp
test
mov
aad
xchg
pop
out
or
cmps
pop
movs
or
lods
mov
call
repnz
xchg
lea
dec
loope
hlt
cld
and
call
push
loop
popa
neg
in
dec
out
jbe
popa
cmp
mov
xor
xchg
sar
sar
pop
cmp
js
and
mov
popf
pop
mov
cli
hlt
mov
pop
mov
adc
popa
sub
in
push
in
out
pop
xor
add
lea
addr16
test
aam
jns
adc
enter
cli
ja
xor
les
hlt
sub
jno
sahf
add
push
dec
add
mov
repnz
loope
mov
jecxz
es
fdiv
inc
cmp
dec
out
add
dec
sbb
iret
mov
inc
retf
xchg
cdq
pop
daa
fild
inc
aaa
call
mov
or
xor
sub
or
fwait
dec
jp
jecxz
jmp
cld
fcom
sub
xchg
jno
xor
or
cwde
mov
sub
daa
add
dec
mov
cmp
jecxz
or
fisub
outs
xchg
mov
repnz
jno
out
mov
jmp
js
sbb
repnz
aas
lahf
xchg
loopne
cmp
in
sbb
push
call
jne
adc
div
xchg
stc
shl
xchg
inc
in
icebp
xchg
or
dec
cmps
std
add
mov
cmp
adc
pop
mov
imul
cmp
adc
retf
adc
sbb
imul
out
inc
pop
xchg
daa
push
repnz
dec
inc
mov
in
cwde
idiv
or
fadd
icebp
adc
cld
les
mov
aaa
sbb
mov
or
add
jl
adc
aam
mul
rcr
sub
fisttp
mov
idiv
push
xor
pop
call
fld
cld
cvtps2pi
mov
cs
dec
lea
pop
sub
jne
and
xchg
(bad)
dec
cmp
mov
scas
and
xchg
jmp
inc
outs
xchg
nop
dec
dec
cmps
pop
xchg
(bad)
pop
mov
dec
lods
xor
ss
loopne
scas
ins
js
add
push
pop
push
adc
in
aad
xchg
xor
test
ins
or
mov
push
pushf
(bad)
outs
push
das
xlat
jne
ret
cwde
inc
ja
leave
movs
retf
int
mov
rcl
movs
cwde
repnz
cmp
mov
enter
mov
adc
fisttp
push
(bad)
xor
inc
add
pushf
dec
in
pop
adc
je
icebp
call
dec
push
dec
jno
cli
cli
push
adc
dec
repnz
icebp
jne
xchg
push
jb
push
cmp
out
pop
(bad)
sub
aas
and
mov
out
test
add
mov
test
movs
out
test
or
fistp
mov
xchg
outs
or
jne
lea
aas
pop
out
add
es
fnstenv
lahf
jno
push
add
sub
addr16
sub
rcr
inc
and
xor
test
pop
pop
xchg
lds
inc
jg
dec
ret
shr
aam
xchg
inc
ss
(bad)
cli
(bad)
mov
mov
leave
ds
mov
es
dec
mov
js
(bad)
bound
es
shr
mov
mov
sub
dec
adc
adc
mov
repnz
xor
dec
fadd
shl
aaa
jl
inc
aas
ror
cli
add
mov
test
sbb
ja
gs
int
xchg
pop
shl
hlt
enter
sub
pop
cmp
add
mov
arpl
nop
add
fwait
xor
add
pop
dec
fnstsw
pusha
movs
aam
test
sbb
cmp
inc
scas
sub
mov
aaa
jl
aaa
xchg
aaa
lea
addr16
inc
jb
loop
movs
not
jno
jecxz
pop
popf
jge
inc
xchg
push
cmp
imul
sahf
add
xchg
test
out
mov
xchg
mov
xchg
test
(bad)
cmc
mov
ret
pushf
(bad)
loopne
jns
mov
adc
mov
(bad)
and
ret
sbb
pop
cli
adc
out
jnp
retf
outs
add
sbb
cmp
push
stos
scas
ins
outs
arpl
cmc
sbb
popa
dec
icebp
sbb
or
ins
(bad)
iret
nop
ret
jnp
imul
dec
mov
nop
scas
cwde
sbb
inc
daa
cmp
push
ja
shl
out
xchg
dec
int
push
xor
out
lods
lea
cmp
daa
loop
inc
fwait
adc
sub
push
xchg
push
cmp
popf
or
aaa
mov
jmp
(bad)
add
sbb
and
enter
and
(bad)
xor
out
mov
and
push
popf
repnz
scas
je
aam
mov
in
inc
fnsave
sub
lea
and
and
or
xor
fidiv
in
gs
adc
arpl
mov
stos
ficom
in
xchg
js
mov
jl
je
or
mov
and
cs
popf
xchg
dec
lock
scas
mov
push
cmc
adc
call
jl
stos
inc
xchg
dec
mov
pop
jle
jmp
and
jmp
ret
sbb
hlt
stos
jecxz
jle
int3
sub
dec
retf
lahf
cld
iret
outs
inc
adc
in
std
pop
lahf
xchg
add
adc
mov
or
ins
es
scas
push
inc
add
clc
push
ja
mov
cmps
inc
jmp
shr
mov
mov
ror
pop
xor
mov
jmp
sub
push
push
inc
jecxz
dec
xor
jp
jbe
push
pop
adc
jl
dec
push
mov
std
xor
lods
sub
pop
mov
xchg
es
jnp
adc
movs
jne
add
inc
xchg
loop
jp
push
ret
call
cmp
cmp
xor
sub
cmp
adc
out
arpl
icebp
xchg
cdq
test
call
cs
out
sub
dec
call
and
idiv
scas
or
cmp
cmps
xchg
daa
add
xchg
jge
push
outs
fprem
ret
cmp
pop
js
lock
mov
daa
jecxz
push
lahf
aam
ins
les
adc
cmp
les
mov
mov
add
jbe
leave
mov
jmp
add
repz
pop
or
pop
shl
es
cli
xchg
xchg
push
xor
(bad)
retf
jne
out
pop
push
out
fsubr
(bad)
fisub
popf
das
fidivr
div
mov
ss
jo
hlt
ja
call
fmul
sub
lds
mov
aam
sub
stos
imul
xor
mov
jo
sub
push
xchg
ja
aad
jecxz
(bad)
gs
or
xor
push
fcmove
aam
mov
into
mov
retf
sbb
inc
retf
xlat
jle
mov
fmul
xchg
rcl
loop
add
sub
ins
loop
out
inc
(bad)
fmul
shl
(bad)
mov
pop
sar
jmp
inc
loope
push
call
movs
shr
jae
add
shr
xchg
popa
call
mov
das
xor
pop
stos
(bad)
stc
dec
nop
clc
data16
mov
sub
fadd
sbb
sar
add
fimul
test
inc
test
mov
add
ret
xchg
xchg
cmc
(bad)
xchg
sbb
adc
pushf
and
xor
cli
pushf
xor
pop
push
jo
shr
xor
retf
leave
neg
call
test
outs
and
jno
xor
int3
xchg
jp
test
mov
push
sbb
pop
xor
test
xor
jnp
pop
xor
repnz
pop
iret
push
and
inc
outs
ror
clc
jno
jmp
add
call
outs
mov
(bad)
popf
fstp
rcl
icebp
out
inc
push
retf
or
adc
mov
mov
(bad)
int3
ins
adc
arpl
cmc
mov
data16
jno
fcmovbe
add
jae
std
movs
loope
and
dec
fisttp
cmp
sbb
js
mov
sbb
push
push
sub
cmp
inc
inc
int
cld
xchg
imul
add
data16
dec
cmp
div
mov
mov
dec
jo
jae
out
ins
sub
rcl
addr16
(bad)
movs
mov
jb
xor
in
adc
mov
dec
pop
rol
(bad)
(bad)
pop
dec
ins
jmp
xchg
outs
pop
jg
out
jns
sbb
ds
or
fidiv
add
adc
add
es
neg
into
dec
je
mov
int3
adc
repnz
scas
ret
cmps
jmp
or
int3
mov
jge
adc
mov
and
mov
jns
pop
sbb
push
adc
mov
(bad)
pop
loope
lea
xor
and
push
fcom
xor
mov
mov
add
xchg
add
ret
test
jno
pop
test
les
cmp
aam
push
push
jge
aas
popa
imul
push
jmp
jp
jmp
rcr
stc
in
loope
lds
or
fstp
js
fcomp
mov
push
cmp
and
iret
inc
fild
jl
push
hlt
dec
fwait
lock
pop
scas
sbb
xchg
(bad)
xor
and
std
add
and
sahf
(bad)
icebp
std
into
leave
inc
or
imul
or
dec
ds
jnp
mov
jne
jp
sti
js
lock
xchg
fisttp
call
dec
test
inc
lds
xchg
dec
xchg
jo
rol
clc
ficomp
test
jbe
fistp
test
shr
fwait
std
dec
iret
mov
in
cmps
mov
cmps
pop
enter
(bad)
cmp
fcom
mov
aaa
mov
jb
jmp
mov
xchg
and
lds
adc
enter
popf
bound
pop
mov
pop
mov
xor
pop
mov
dec
repz
daa
into
ja
loope
gs
dec
(bad)
inc
adc
popf
fdivr
jbe
aas
pusha
dec
and
mov
aam
dec
test
jno
dec
lds
sbb
shr
pop
daa
fadd
test
rol
lea
push
dec
add
lock
clc
in
dec
push
loope
ins
cmp
adc
push
mov
je
sub
and
outs
sbb
out
add
mov
push
cmp
sub
nop
or
jg
jp
mov
push
(bad)
pop
fwait
mov
bound
movs
adc
nop
mov
lods
lahf
pushf
rcl
aam
sub
out
mov
and
mov
pushf
add
pop
(bad)
adc
mov
stc
fld
or
xor
sbb
leave
mov
or
test
mov
aam
hlt
or
popf
shufps
add
imul
arpl
mov
ins
sbb
jns
inc
(bad)
cmp
push
inc
popa
jecxz
sbb
out
(bad)
iret
loop
xor
retf
cmp
rcl
(bad)
lea
jl
adc
xlat
push
adc
fst
pop
rcr
not
sub
dec
inc
jge
jmp
jae
or
mov
mov
cld
xchg
dec
inc
or
jae
jmp
aam
push
pushf
icebp
mov
push
dec
pop
clc
jp
adc
jp
arpl
push
sbb
stos
lea
jmp
mov
jge
imul
mov
in
aaa
dec
mov
fcomi
(bad)
xchg
sbb
data16
cmp
bound
ret
outs
loope
ror
lea
or
push
pop
xchg
rcl
jae
mov
int3
ret
adc
lods
xor
mov
(bad)
pop
dec
cmp
inc
out
pop
sub
pusha
aad
in
fnstcw
dec
adc
cmp
out
fwait
push
fidivr
ins
data16
dec
pop
movs
rcr
or
pop
sbb
cli
shr
lods
xor
mov
jecxz
ror
out
xlat
loopne
repnz
or
or
mov
fild
adc
(bad)
lock
xchg
daa
(bad)
fmulp
jae
out
mov
cwde
push
xchg
popf
icebp
pop
das
out
adc
pop
movs
movs
les
pop
stos
shl
or
push
repnz
cmp
jb
pop
mov
in
jmp
push
test
dec
(bad)
lods
push
test
and
adc
call
leave
addr16
mov
vaddsubps
(bad)
ror
fisubr
cmp
pop
xor
lock
mov
or
adc
movs
in
adc
out
pop
mov
mov
fs
popf
stos
fidivr
inc
add
movs
je
jmp
into
inc
mov
jg
out
cmp
hlt
call
cmp
dec
lahf
outs
sar
clc
pop
pop
dec
movs
or
cli
js
vpminsb
movs
ss
dec
repnz
xchg
ret
into
or
es
inc
div
jo
jb
sbb
push
mov
movs
jmpw
enter
push
jbe
fs
out
inc
xor
xchg
popa
push
test
mov
rol
not
in
sbb
pop
adc
movs
ds
stc
outs
icebp
xchg
cmp
sbb
les
aam
cmp
loope
in
aaa
mov
gs
adc
pop
dec
jo
dec
int3
(bad)
int
jmp
call
inc
imul
mov
repnz
in
popf
push
jp
ins
xor
mov
cmp
add
inc
in
int
clc
add
ror
push
icebp
cld
arpl
in
ins
leave
movs
push
adc
(bad)
fiadd
mov
xchg
es
mov
das
stc
sbb
push
pop
in
pop
mov
jne
fwait
sbb
add
daa
cwde
loopne
pop
mov
or
cmps
loop
mov
lods
push
pop
not
icebp
add
(bad)
mov
mov
aaa
push
mov
adc
xor
inc
dec
sub
mov
int
adc
push
sub
or
inc
iret
inc
aam
push
mov
push
xor
add
push
dec
rcr
mov
sahf
mov
cmp
out
in
mov
push
sahf
or
inc
pop
or
jmp
je
imul
inc
or
dec
fst
fwait
sysexit
cmp
push
out
rcr
or
jecxz
fisub
sbb
stc
jmp
cmp
loop
imul
inc
(bad)
jmp
xor
repz
stc
add
mov
scas
pusha
ins
int
push
pop
mov
mov
cmp
sbb
dec
mov
movs
pop
cmc
(bad)
lods
mov
jo
jge
arpl
pop
ror
nop
cmc
dec
jnp
and
sub
xchg
pop
push
fistp
jecxz
int
mov
mov
not
push
inc
xor
xchg
xchg
in
(bad)
push
lods
call
adc
call
push
repz
int
sub
mov
mov
jo
jns
xchg
mov
shr
xlat
fisubr
push
jbe
xchg
add
inc
inc
out
jnp
adc
dec
sub
jmp
dec
xlat
pop
mov
lock
push
pop
adc
xor
and
pop
lock
jmp
sbb
add
push
fild
out
mov
mov
hlt
cmp
sub
adc
aaa
cmc
push
rcr
addr16
or
and
aad
call
mov
jmp
and
into
retf
out
push
adc
pop
mov
inc
setne
inc
adc
cmp
jbe
jns
inc
shl
lea
dec
mov
fs
test
pop
sub
fdiv
mov
jg
mov
xor
mov
mov
(bad)
push
xor
push
stos
inc
adc
idiv
push
inc
shl
fldcw
jbe
(bad)
mov
mov
mov
jno
ret
push
(bad)
pop
xchg
int3
or
das
imul
push
or
jle
jo
add
pop
mov
ins
mov
arpl
test
mov
out
pop
loop
or
(bad)
and
jns
out
push
fdiv
cmps
mov
int
shl
fwait
mov
cmps
or
inc
sub
xchg
inc
inc
sbb
or
mov
or
inc
xor
clc
out
dec
or
mov
bound
cmp
daa
mov
mov
adc
pop
add
xchg
add
mov
xor
jge
cmp
pop
inc
push
mov
xlat
jno
sub
push
mov
push
mov
ret
inc
adc
mov
and
xlat
xchg
xchg
adc
xor
push
mov
ss
les
mov
je
push
lods
xchg
and
mov
xchg
xchg
scas
inc
aaa
xchg
shl
xor
ficom
mov
xchg
fst
jae
stos
lahf
pop
push
in
mov
mov
pop
add
cmp
cmp
jp
js
fadd
fisttp
jb
push
scas
outs
cmp
neg
int
(bad)
mov
cmp
stos
add
sub
lahf
fimul
push
and
pop
inc
popf
jmp
push
or
sti
rol
pop
rcl
dec
scas
xor
lods
push
mov
fs
cdq
dec
shr
xlat
in
call
int
push
jcxz
imul
and
push
mov
shl
xor
cmp
lds
test
popf
aad
cmp
imul
in
xor
adc
xchg
pop
scas
xor
sub
ds
sbb
cdq
push
mov
out
mov
or
mov
sbb
imul
jbe
int
ret
(bad)
xchg
in
into
rcl
cmp
xchg
call
ins
outs
dec
sti
lahf
movs
repnz
dec
ret
retf
mov
scas
icebp
loop
xor
movs
sbb
stc
in
jnp
ja
sti
pop
mov
stos
lahf
lods
mov
js
iret
jae
or
fsubr
cmp
push
sar
cmp
enter
push
out
fild
dec
push
mov
push
inc
and
mov
shl
imul
mov
mov
jnp
call
mov
lahf
leave
adc
pop
mov
fstp
in
mov
out
sbb
outs
fld
push
add
sbb
mov
das
push
sbb
aad
xchg
cmp
xor
or
or
pushf
jle
xchg
jnp
xchg
cwde
mov
inc
jae
loope
mov
pop
std
xor
movs
ret
les
test
jg
stc
adc
in
dec
es
jno
dec
xchg
ss
push
jns
mov
call
sbb
xchg
add
adc
pop
clc
nop
mov
test
add
rcr
(bad)
lock
xchg
test
out
retf
retf
mov
or
lods
fidivr
in
adc
xor
adc
push
test
adc
call
cmp
fcom
test
and
dec
or
mov
jns
out
mov
(bad)
je
jl
fstp
inc
sub
and
enter
adc
cmc
lods
arpl
dec
jnp
bound
mov
xlat
sub
leave
shl
sub
loope
or
loopne
jne
mov
ret
fiadd
sbb
clc
je
dec
jg
add
xchg
sbb
xchg
test
cwde
xchg
xchg
out
lds
and
js
push
loopne
dec
out
mov
dec
ss
lock
mov
repz
add
pop
lock
xor
mov
and
dec
pop
pop
inc
mov
clc
ffree
sub
lds
push
outs
adc
retf
stc
jae
push
sbb
mov
add
sbb
pop
dec
xchg
cmp
sub
stos
shl
fcomp
addr16
jmp
nop
mov
imul
jne
out
pop
loope
fcom
movs
mov
fisttp
adc
and
lock
adc
add
inc
stos
jb
(bad)
retf
sbb
mov
xor
sar
cmp
ins
mov
xor
mov
aaa
jnp
popa
std
jmp
(bad)
clc
xchg
sub
push
test
sbb
pop
frstor
mov
jno
out
mov
imul
sub
test
div
ret
call
mov
cmps
je
xchg
ins
lds
adc
mov
jg
pop
ffree
jno
add
pop
mov
jno
jae
movs
mov
in
xchg
jb
push
mov
mov
(bad)
mov
cmps
outs
(bad)
pop
xor
rcr
fidiv
out
fdivrp
jg
test
inc
xchg
outs
add
xor
push
inc
mov
scas
dec
xchg
inc
(bad)
jle
adc
add
push
nop
mov
adc
(bad)
lock
rol
fst
push
dec
retf
adc
ret
xchg
test
jle
inc
mov
out
xor
dec
add
inc
mov
adc
psubw
test
cmp
ins
pop
in
mov
mov
stc
repnz
lahf
xor
out
xor
pushf
popa
ja
sub
sub
adc
add
data16
inc
into
inc
sub
sbb
and
cmps
lods
stos
mov
pop
inc
(bad)
mov
(bad)
xchg
push
stc
mov
jno
je
fwait
pop
xor
sub
add
test
sub
or
sbb
push
out
sbb
arpl
retf
sbb
aaa
pop
ins
push
sbb
mov
xor
jae
out
push
push
shr
test
test
push
xchg
(bad)
shl
push
enter
(bad)
xor
shl
xchg
mov
loop
ja
int3
sbb
cmp
inc
mov
pop
sbb
mov
mov
fwait
rol
jo
sbb
adc
movs
add
adc
stc
in
push
fnsave
mov
or
shl
mov
sahf
fmul
mov
push
xchg
neg
cmp
add
aam
addr16
xor
push
xchg
ja
inc
ins
mov
push
jmp
mov
pop
xchg
sub
push
mov
je
mov
push
push
mov
and
and
inc
lock
loopne
cmps
std
push
ret
jmp
mov
fsub
cmps
popf
cmps
aam
mov
pop
xchg
ss
inc
mov
dec
add
je
mov
jnp
ss
dec
mov
js
into
cs
pop
mov
lock
inc
popf
dec
push
sti
mov
scas
adc
std
aas
shl
repnz
sbb
push
sbb
xchg
fist
add
test
add
ja
call
and
add
or
shl
scas
in
repz
xchg
push
jmp
cdq
cmps
shl
imul
jmp
loope
cmp
adc
pop
fwait
enter
ins
sub
jge
dec
push
call
push
fldcw
bound
or
mov
int3
or
bound
stos
popa
nop
add
xor
sub
enter
aad
ins
pop
test
ss
add
stos
into
lods
push
es
mov
add
ins
xchg
mov
hlt
mov
stos
movs
pop
push
add
fs
in
sub
push
leave
pusha
ficom
or
cmp
mov
xchg
mov
mov
daa
aaa
test
add
out
xlat
lock
pop
mov
mov
fwait
sub
int
retf
je
lds
cmps
dec
retf
in
stos
in
cmp
fcmovne
test
sub
mov
iret
pop
and
or
fwait
xchg
mov
push
jmp
add
jp
pop
mov
(bad)
push
add
inc
pushf
and
popa
(bad)
or
fmul
cld
jl
loopne
jecxz
out
repnz
mov
stc
jae
xor
and
retf
lds
gs
xor
pop
cs
or
es
icebp
mov
js
jns
into
addr16
or
adc
ret
push
hlt
retf
xor
je
mov
sbb
dec
stc
aas
pushf
mov
ret
lods
mov
push
ret
mov
scas
cmp
ret
sub
sbb
hlt
iret
jg
cld
outs
push
js
dec
cld
sbb
dec
imul
aad
jmp
mov
dec
outs
pop
fwait
ret
fs
mov
inc
xor
pop
test
in
lea
rcr
jg
(bad)
in
and
int3
pop
rcr
and
clc
jo
(bad)
or
xchg
jmp
mov
and
adc
lahf
lahf
mov
in
jge
mov
adc
add
js
jl
push
push
aam
fs
mov
adc
mov
int3
lock
xchg
xchg
mov
mov
xchg
loop
repz
pushf
aas
enter
fwait
and
mov
push
push
or
mov
mov
xchg
ror
dec
mov
sbb
iret
mov
in
ins
rcr
mov
mov
bound
dec
dec
mov
bound
retf
jmp
call
push
mov
mov
fistp
jnp
inc
sub
adc
add
mov
pop
pop
sub
aas
pop
pushf
aas
cmps
cwde
or
push
mov
jb
pushf
ficomp
pop
inc
cmc
push
pop
pusha
sti
xor
sub
sub
loope
and
(bad)
(bad)
scas
jb
add
mov
adc
push
pop
out
sub
ror
push
xchg
dec
retf
stos
daa
push
repnz
add
pop
add
in
nop
(bad)
xchg
fcmovbe
xchg
shr
lds
jne
push
retf
cmp
sahf
int3
mov
push
mov
and
aaa
cmp
push
bound
pop
pop
cmp
inc
mov
pop
mov
(bad)
out
and
cmp
into
add
pop
or
neg
mov
in
outs
cmp
(bad)
scas
int
mov
fsub
or
inc
das
mov
mov
jmp
popf
cmp
data16
push
sbb
pop
dec
and
dec
ins
mov
inc
jbe
inc
sub
shl
jne
in
in
mov
movs
jge
iret
test
xchg
sub
and
fwait
dec
xchg
gs
popa
dec
cmc
mov
add
ja
dec
sub
shr
add
dec
mov
imul
retf
fistp
dec
pop
adc
loopne
les
xor
xor
fidivr
sbb
cs
pop
mov
sub
(bad)
repnz
dec
adc
jmp
adc
mov
(bad)
ds
es
dec
or
push
push
aas
ror
adc
add
mov
pop
jno
add
xor
cmp
sub
out
jecxz
sar
into
jmp
test
fcomp
pop
mov
sar
push
(bad)
jae
xor
cmp
add
and
push
mov
fisttp
out
sti
inc
lock
or
mov
mov
cmps
sub
pop
es
push
sub
repnz
sub
pop
cli
js
retf
in
pusha
stc
popf
jg
xlat
out
mov
add
mov
sbb
popa
sub
sbb
xor
sbb
sahf
sbb
test
call
fadd
or
mov
and
daa
popa
and
gs
fisttp
cs
dec
cmps
inc
les
inc
bound
clc
(bad)
sub
sbb
xchg
or
xor
or
dec
dec
mov
les
pop
mov
movs
mov
mov
dec
mov
ror
sti
sbb
iret
ins
push
inc
fucomi
xchg
adc
adc
stos
sbb
movs
sub
fist
lods
mov
into
cmc
lds
add
xor
out
fisttp
imul
or
xchg
ins
inc
jne
lahf
loop
mov
out
vmwrite
lea
mov
ficom
in
outs
pushf
sbb
bound
mov
lods
dec
in
ins
popa
pop
xchg
jae
cwde
sbb
cmp
pop
mov
(bad)
out
jbe
gs
out
aad
popf
jnp
mov
setae
ins
sahf
jmp
fmul
outs
mov
std
lods
and
stos
(bad)
xchg
mov
aas
push
fild
xor
cmps
mov
mov
mov
js
(bad)
mul
xchg
fistp
inc
call
dec
jecxz
jb
shl
rep
call
mov
add
(bad)
cli
(bad)
push
xchg
xchg
mov
loope
ins
or
in
arpl
cdq
lods
fwait
shl
in
push
pop
pop
dec
lahf
repz
je
fcmovnb
lock
jmp
jl
xchg
push
retf
out
repz
popf
add
jns
adc
int3
add
repz
call
into
outs
push
mov
ror
dec
test
xor
int3
in
mov
push
js
pop
or
xchg
shr
shr
xchg
sub
lahf
ins
pop
xlat
test
lods
jb
push
xchg
add
sbb
mov
in
cld
push
test
stc
adc
push
mov
out
retf
xchg
repz
in
pop
push
int3
mov
outs
mov
adc
hlt
push
cwde
jge
je
sti
sub
into
stos
ins
or
or
test
clc
test
jg
pop
pop
or
das
imul
js
push
adc
xchg
cmps
rol
adc
or
adc
and
imul
call
ja
std
sti
call
shl
fcompp
stc
jmp
push
mov
test
cmps
pop
fdivp
out
xchg
ret
scas
pop
cmp
leave
jne
inc
adc
mov
or
push
dec
ja
scas
push
pop
jmp
jnp
push
mov
ds
push
(bad)
sub
popf
mov
sbb
adc
mov
cmp
jno
test
call
in
ss
leave
dec
add
mov
mov
pop
push
adc
adc
repnz
cli
add
jno
dec
outs
jmp
jge
cmp
mov
xlat
lahf
arpl
push
pop
repz
sub
clc
sub
stc
cli
add
xadd
lea
fisttp
call
(bad)
stos
mov
add
xor
cmp
mov
imul
nop
mov
or
(bad)
aam
sub
cmps
sbb
or
cmps
stos
int3
mov
dec
cmp
mov
pop
mov
je
xor
aad
cmp
mov
push
inc
outs
and
adc
mov
cmps
rol
imul
aam
imul
test
mov
jp
into
(bad)
lds
nop
ins
jle
xor
add
adc
sub
outs
stc
fcom
push
outs
not
mov
dec
out
jbe
add
ins
pop
xor
ja
mov
jge
mov
fnsave
jnp
pusha
aas
imul
test
cmp
xchg
xor
push
lds
adc
push
retf
sub
addr16
sub
push
pushf
call
int3
fsub
lods
adc
ss
int
(bad)
ror
lea
sti
mov
iret
mov
es
jns
cmps
shl
adc
cld
and
sub
int
fnop
fadd
push
pop
mov
mov
cmc
or
daa
iret
inc
inc
daa
or
xor
cmc
mov
push
in
bound
std
fst
loopne
dec
cmp
cmp
jbe
pop
not
cmp
adc
dec
shl
loopne
and
pop
mov
test
dec
retf
inc
es
mov
fnstsw
inc
retf
xchg
test
rol
mov
movs
add
and
icebp
leave
dec
(bad)
cmp
scas
mov
fild
xchg
and
sti
not
mov
pop
enter
and
fs
xchg
inc
ja
(bad)
push
xor
or
fwait
loop
fstp
push
dec
mov
xor
inc
cmp
mov
or
adc
inc
fmul
mov
and
push
retf
jno
jne
cmps
out
call
stos
inc
pop
pop
outs
fs
iret
push
cmc
jp
pop
dec
adc
add
inc
ja
(bad)
fdivr
cld
movs
frstor
jne
cmps
xor
inc
xor
xor
fisub
ret
neg
popf
cld
mov
fld
push
cmp
xchg
loop
fidivr
dec
push
test
add
sti
ja
jo
mov
jmp
sbb
int
mov
aam
pop
ror
xor
adc
xchg
push
cmp
xchg
int3
ss
mov
xor
setns
in
adc
fdivp
dec
fistp
ret
xor
ds
hlt
shl
xchg
jae
lods
movs
add
movs
and
cmp
sti
pop
xchg
imul
lahf
int
xchg
imul
not
mov
lea
imul
sub
cmps
xchg
cmps
jbe
ja
dec
scas
cmc
cmp
mul
call
mov
adc
into
pop
or
outs
sub
jp
and
mov
push
push
mov
call
and
mov
aaa
pop
lock
int3
cmp
(bad)
iret
push
pusha
aaa
je
retf
mov
push
dec
sbb
push
sub
dec
mov
aas
mov
bound
sub
add
out
aaa
(bad)
pop
xlat
into
push
not
aas
dec
test
test
add
mov
shl
jg
je
in
fadd
leave
inc
mov
mov
or
(bad)
push
arpl
cmps
push
mov
sbb
mov
stos
in
jae
lds
xchg
mov
mov
das
mov
inc
jno
pop
int
hlt
push
sbb
ror
pop
add
shr
cmp
adc
cmp
aas
cmps
imul
sub
test
cmps
add
add
adc
and
retf
and
mov
int
jb
in
in
fsubp
and
xchg
in
mov
outs
fiadd
push
mov
ror
fstp
xchg
adc
shl
xchg
push
cmp
fild
repz
retf
cmp
and
test
out
nop
das
jne
das
jae
jo
je
call
sbb
push
pop
jle
xor
sti
pop
data16
jns
pop
dec
rcl
cmp
loop
(bad)
rcr
mov
test
and
int3
sub
imul
sti
adc
xchg
push
lods
pop
add
repnz
adc
xchg
(bad)
jl
xor
add
fnsave
mov
inc
pop
push
movs
inc
in
cmp
aaa
jae
call
scas
es
sub
sub
push
cmp
xchg
test
add
dec
enter
push
call
add
loope
(bad)
or
sbb
jno
push
mov
sbb
adc
push
jecxz
jbe
cmp
mov
mov
jmp
pop
mov
leave
pushf
mov
xlat
inc
(bad)
jmp
cmp
pop
fisttp
mov
pop
and
add
inc
xchg
bnd
dec
in
movs
out
cmc
popf
and
xchg
pop
push
leave
xchg
ds
cmp
dec
xchg
push
add
cmps
cmc
add
daa
jl
jecxz
iret
jmp
pop
pop
mov
dec
inc
push
inc
(bad)
mov
mov
ror
stc
imul
jbe
mov
repz
mul
loope
(bad)
lea
std
xchg
sbb
mov
or
mov
push
fmul
push
fldenv
cmps
add
(bad)
call
pop
mov
cmp
sub
sbb
or
leave
xchg
loope
mov
cdq
jnp
pop
out
xor
mov
cmc
fcom
sbb
inc
(bad)
aam
jmp
dec
cmp
inc
andnps
cmp
bound
xchg
xor
dec
lock
xor
adc
mov
test
xchg
cmp
ja
pushf
pusha
cwde
xlat
sub
pop
into
add
pushf
add
frstor
xchg
adc
test
inc
xchg
daa
aam
pop
fcom
shl
mov
loop
in
cli
out
mov
or
jle
inc
rcl
ins
leave
mov
inc
out
std
jle
push
xchg
mov
push
test
xchg
test
xchg
fcom
push
call
jmp
adc
fisubr
jmp
xor
int
(bad)
mov
add
outs
nop
cmp
push
push
xchg
push
test
test
out
dec
add
or
idiv
xchg
aam
and
push
push
fsubr
mov
aad
add
push
dec
push
stc
(bad)
int3
or
das
push
xchg
pop
cmp
cmc
mov
dec
xchg
ja
cld
aas
repnz
(bad)
cmps
outs
push
cwde
ss
aam
jmp
pop
inc
adc
out
inc
sar
int
cs
shr
popf
movs
scas
popa
xchg
sahf
movs
adc
stos
mov
inc
add
cmp
sbb
hlt
cmps
dec
inc
mov
mov
and
cmp
pop
xchg
jg
or
movs
ret
jbe
inc
stos
mov
fisub
push
or
sub
and
mov
test
lea
sub
and
pop
jnp
lds
ror
push
rol
jbe
(bad)
jne
bound
xor
(bad)
push
mul
(bad)
out
movs
mov
mov
fsubrp
(bad)
push
and
xor
mov
push
test
aaa
pop
dec
lods
push
xchg
cld
cli
pop
int3
arpl
and
mov
cmp
push
stos
pop
imul
pop
add
adc
in
(bad)
lods
add
in
fidivr
rcr
add
retf
cld
pop
rcr
loopne
push
push
mov
cmps
mov
lea
mov
inc
mov
lock
leave
cwde
les
dec
push
movs
ja
repnz
xchg
dec
or
jge
inc
xchg
arpl
dec
std
cmp
or
pcmpeqb
repz
rcr
cmps
push
ja
in
push
inc
iret
inc
fmul
jl
jbe
cmp
test
mov
inc
mov
enter
xchg
ins
movs
cwde
in
adc
call
dec
xchg
(bad)
repnz
cmc
add
retf
jp
jle
repz
retf
mov
add
mov
xor
jmp
scas
imul
xchg
dec
shr
gs
outs
les
push
jae
mov
call
cld
lods
cli
xchg
shr
in
ret
jmp
and
out
popf
inc
jmp
test
loop
test
sbb
sub
mov
and
icebp
and
cmp
jns
repnz
mov
and
lea
pop
pop
jle
pop
jl
mov
loopne
add
stc
pop
in
fld
test
cmps
and
push
mov
iret
dec
mov
sub
movs
retf
xlat
inc
call
jle
adc
pop
out
xchg
mov
addr16
and
dec
out
les
lahf
pushf
repz
mov
fst
pop
shl
not
out
int3
je
or
xor
jl
xchg
pop
jae
lods
enter
sub
into
mov
xchg
sbb
push
(bad)
mov
mov
lds
ja
adc
in
or
inc
mov
shl
jl
jo
xlat
out
xor
push
test
xchg
pop
out
add
pop
add
mov
out
cli
mov
jle
call
jb
jbe
jl
push
cmps
or
mov
and
pop
es
cdq
iret
mov
push
cwde
pop
dec
and
mov
jg
test
(bad)
push
outs
addr16
cld
pop
and
stc
jo
inc
mov
jmp
std
test
pop
sahf
loope
push
mov
fistp
rol
sub
sub
repz
pushf
mov
loopne
cmc
scas
retf
cli
pop
mov
jmp
ror
cmps
std
push
cmp
or
test
xchg
pop
dec
push
outs
xchg
(bad)
lds
push
mov
adc
imul
inc
ret
sar
add
mov
xor
sbb
xchg
adc
mov
mov
pop
data16
cmps
pop
sahf
test
add
jno
rcr
cmc
clc
cmps
ins
dec
pause
mov
in
fistp
loope
fdiv
sub
je
not
arpl
ja
(bad)
out
push
cmc
mov
inc
int3
push
sub
hlt
js
ja
lods
(bad)
dec
lods
imul
or
mov
data16
(bad)
mov
(bad)
repz
xor
loopne
ins
sbb
push
jne
ret
xchg
js
push
(bad)
aam
aas
ret
fwait
xchg
mov
sbb
mov
cdq
test
push
pop
push
xchg
test
xchg
sub
outs
daa
js
or
scas
ret
or
adc
int
aaa
das
push
add
rcl
dec
push
inc
rol
ret
pop
inc
jmp
clc
cmps
adc
sbb
inc
fstp
retf
add
mov
mov
(bad)
daa
hlt
ja
push
(bad)
int
xchg
mov
dec
ss
in
inc
dec
mov
stc
pop
out
daa
in
sar
xchg
lahf
inc
aas
mov
push
into
aam
xor
fs
sub
mov
or
out
movs
into
(bad)
aam
xchg
sub
bound
gs
imul
hlt
add
fcomp
push
repz
mov
sbb
or
repnz
mov
fwait
jle
jae
daa
aam
outs
sbb
ret
test
(bad)
jnp
inc
in
(bad)
push
or
dec
je
sbb
movs
push
pop
dec
sbb
scas
cli
push
cs
xor
mov
inc
loope
lock
sub
dec
stc
adc
sbb
jmp
mov
pushfw
push
mov
call
xor
stos
mov
popf
cmps
stc
xchg
fwait
dec
jns
and
nop
pop
and
(bad)
(bad)
sbb
jl
stos
adc
sbb
cs
xor
pop
in
sub
cdq
ja
mov
retf
sub
sub
mov
jg
xchg
xchg
cmp
dec
xchg
adc
push
jp
mov
mov
hlt
in
shl
in
ds
cmp
(bad)
jbe
jl
call
cmps
fisttp
(bad)
add
mov
inc
fdivrp
cmp
imul
int3
adc
dec
mov
sti
pushf
xchg
mov
inc
push
and
out
loope
xchg
adc
xchg
loope
mov
(bad)
inc
pop
mov
mov
fiadd
pop
and
jbe
jg
dec
mov
outs
scas
pop
cmps
add
sbb
jmp
jae
dec
jne
cmc
cmp
cmps
jmp
fwait
push
lds
lds
test
and
in
add
jecxz
ror
xchg
inc
mov
lods
inc
ret
(bad)
dec
repnz
enter
rol
(bad)
jne
(bad)
cmps
cs
aaa
mov
jle
clc
xchg
jae
adc
daa
inc
bound
mov
cdq
jg
dec
sub
jmp
sbb
sbb
rol
scas
jb
ret
bnd
test
xchg
ror
xchg
icebp
sub
out
add
cmps
sbb
popf
adc
dec
and
add
add
push
int
push
hlt
dec
test
sbb
jb
inc
(bad)
jmp
ins
xor
retf
xor
dec
cld
cmc
xor
lods
jecxz
(bad)
sbb
push
mov
xchg
adc
dec
adc
sti
out
iret
frndint
adc
jb
xor
sbb
out
stc
fidiv
xchg
sub
dec
movs
test
cmp
and
sub
hlt
mov
je
ror
cdq
xchg
adc
icebp
mov
sar
xchg
cdq
les
outs
popa
push
mov
mov
movs
scas
stos
mov
aas
mov
dec
mov
add
ja
add
or
sub
xor
jb
inc
scas
cs
inc
ret
pop
cli
cs
adc
or
in
inc
xchg
ret
ret
lods
inc
shl
enter
das
ins
pop
inc
or
icebp
fwait
mov
sub
daa
xchg
jmp
mov
cmp
mov
xlat
mov
add
xor
fnstenv
xchg
push
push
push
lea
push
or
aas
adc
cmp
add
xor
inc
out
daa
dec
retf
cmp
inc
xchg
mov
dec
xchg
ss
jne
sbb
jge
or
jle
sbb
scas
jns
mov
jae
outs
inc
cmp
mov
in
mov
data16
add
mov
cmp
sbb
pop
adc
lock
inc
mov
outs
mov
(bad)
lock
jbe
je
pop
(bad)
dec
push
cmc
dec
jmp
adc
cmp
(bad)
or
inc
aaa
ins
lds
sbb
pop
mov
iret
inc
or
(bad)
in
retf
inc
cmp
push
pop
cmp
push
inc
je
pop
movs
into
add
fwait
sub
addr16
sbb
push
(bad)
mov
std
shl
test
mov
jne
enter
mov
sub
xchg
xor
aaa
and
mov
inc
push
(bad)
push
jmp
in
cs
sbb
jmp
outs
pop
mov
in
add
int
dec
dec
loope
xor
fnstcw
xchg
ret
xchg
push
push
pop
adc
xchg
sub
jecxz
jge
shl
jnp
mov
jne
das
xor
cmp
stos
dec
dec
cli
or
jmp
mov
imul
outs
out
ins
inc
sub
or
sbb
hlt
mov
mov
fiadd
mov
pop
(bad)
sbb
pop
and
cwde
rol
mov
ds
and
iret
xchg
test
sub
(bad)
jbe
sub
xor
mov
xchg
sar
in
out
fwait
ds
lea
jae
les
popw
push
jecxz
cld
dec
sbb
adc
mov
clc
imul
xor
add
cwde
jmp
adc
ins
in
mov
fwait
aam
push
or
xchg
and
mov
retf
push
bound
pop
jae
call
sbb
sub
or
mov
ret
inc
cdq
(bad)
push
add
mov
sub
icebp
or
cdq
sub
push
cwde
mov
fstp
pop
push
outs
into
dec
dec
popf
aaa
push
inc
stc
cmp
in
and
int
xchg
jge
xchg
ins
sub
pop
mov
les
cmps
push
enter
in
jo
dec
push
cs
inc
xor
out
out
xchg
les
in
clc
jmp
shld
mov
xor
add
not
pusha
lea
stos
cli
jbe
jno
mov
mov
jo
gs
cmp
sbb
out
cwde
lods
cmp
mov
(bad)
mov
add
bound
xor
cmp
jb
mov
sahf
(bad)
push
and
pop
pop
push
call
cmp
add
rcr
pop
sub
cmp
leave
pushf
mov
les
repz
dec
cmp
jg
cs
icebp
push
add
push
test
loop
retf
imul
rol
out
xchg
sbb
sub
iret
gs
in
sub
sbb
sbb
cmp
and
lods
shr
and
in
stos
fwait
inc
out
(bad)
xor
fdivp
push
dec
in
movs
cmp
popa
sbb
ja
cdq
loop
cli
dec
xor
aas
sbb
sub
dec
lds
sub
ins
adc
call
clc
cs
xchg
or
sub
pop
repz
jo
xor
stos
push
scas
pusha
fucomi
sbb
call
popa
sbb
push
jl
jmp
fiadd
(bad)
arpl
(bad)
jns
test
sbb
mov
or
fiadd
lds
outs
or
retf
mov
or
cdq
jb
sub
adc
jg
mov
jecxz
mov
sar
in
xchg
sbb
std
jb
mov
and
scas
hlt
inc
mov
mov
sahf
movs
shl
retf
mov
push
imul
inc
out
(bad)
inc
mov
retf
mov
jmp
inc
xchg
pop
(bad)
rol
mov
std
test
in
in
cli
and
imul
pop
daa
dec
add
mov
sbb
dec
cs
popa
call
stc
lods
int3
adc
lods
dec
xchg
jl
arpl
or
xlat
dec
repz
push
popf
xor
pop
mov
(bad)
les
fild
mov
rcr
cmp
mul
stc
mov
and
bound
jmp
sbb
pop
fmulp
xchg
pop
jno
je
dec
ret
and
das
out
add
pop
sub
cs
mov
clc
jbe
and
pop
pop
(bad)
je
clc
xchg
adc
push
sar
and
inc
jmp
or
dec
jge
mov
xor
xchg
dec
mov
sub
icebp
xchg
(bad)
xchg
push
mov
popf
xchg
ins
adc
sbb
loopne
pop
jle
pop
mov
sbb
in
jne
push
movs
int
xlat
out
push
mov
in
data16
and
cdq
stos
cmp
sub
rcr
sub
jo
push
in
push
jl
xadd
ror
fild
inc
sub
loop
mov
and
mov
jno
pushf
fisub
fild
or
sub
call
ins
je
inc
bound
cmp
or
scas
enter
xchg
mov
sahf
pop
jbe
jmp
hlt
push
mov
int
mov
pop
jb
adc
jmp
dec
xchg
data16
sub
call
fisttp
jns
cmp
loop
cwde
adc
lahf
adc
sahf
or
push
ret
push
pop
repnz
sbb
add
rcr
jl
in
cmp
daa
pop
imul
adc
cwde
mov
sbb
and
out
mov
sub
sbb
sub
xchg
fist
pusha
out
scas
sbb
rol
js
movq
inc
ja
mov
sar
sbb
es
mov
pop
jno
jl
dec
pop
mov
addr16
out
or
call
mov
sub
cli
mov
lea
fisttp
inc
adc
imul
mov
xchg
mov
mov
xor
pushf
fdiv
in
inc
xchg
or
xchg
dec
adc
int
sbb
mov
repnz
(bad)
mov
popf
(bad)
dec
les
or
add
inc
aam
inc
jbe
(bad)
cwde
outs
scas
inc
and
lock
mov
pushf
lods
loop
sbb
retf
ins
jbe
shl
mov
jo
stos
mov
mov
test
cmp
int
ret
adc
sahf
sbb
xlat
cld
lahf
in
ss
adc
xor
pop
push
push
and
push
in
jg
pop
xchg
cmc
lods
pop
jg
js
out
and
jbe
push
xor
pop
cmp
xchg
fsubr
sbb
mov
out
xchg
movs
ds
mov
fs
cmc
nop
mov
mov
jg
or
jge
cmps
cmp
pusha
ror
fistp
add
sbb
sub
jle
ins
adc
jb
aam
add
ror
xor
loopne
dec
inc
xor
movs
add
test
hlt
push
dec
jmp
mov
pop
rcr
test
cmp
jb
cmps
int
mov
jb
or
scas
mov
adc
and
add
jl
push
sbb
or
or
xchg
cdq
xchg
mov
div
nop
mov
not
jbe
fsub
adc
and
addr16
cmps
sub
xchg
popf
ror
test
mov
add
(bad)
jmp
jp
out
inc
or
jmp
or
movs
scas
push
es
icebp
clc
daa
ss
xchg
cmp
push
xor
lods
jmp
adc
jmp
adc
in
addr16
addr16
add
dec
cwde
dec
mov
test
loopne
dec
aad
jb
cmp
es
pop
push
jg
pushf
shl
push
mov
add
jp
xor
(bad)
int3
sub
add
mov
and
xchg
mov
lods
shl
mov
lods
xchg
push
fmul
shl
cmp
jae
leave
in
pop
call
nop
jmp
push
push
inc
lods
stos
sar
popa
mov
gs
jmp
int3
mov
sbb
jo
mov
add
cmps
loop
ss
dec
xor
sahf
sbb
jecxz
sbb
sbb
fadd
enter
cdq
out
test
inc
or
outs
or
jl
pop
inc
jne
jmp
mov
adc
add
or
ins
xchg
jnp
in
imul
sbb
(bad)
and
cmp
adc
je
xchg
jb
bound
mov
out
pop
push
test
jecxz
frstor
je
scas
inc
mov
shl
adc
adc
pop
ret
mov
sbb
mov
push
cmp
inc
push
push
mov
add
imul
adc
mov
cli
fild
jp
pushf
jno
lods
sahf
sub
rcl
mov
cmp
cmps
(bad)
daa
pop
fmul
arpl
dec
shr
das
test
xchg
pop
mov
mov
cmps
inc
dec
xchg
mov
pop
fcmovnu
loope
jmp
and
stc
das
outs
or
fdivr
mov
add
iret
or
dec
outs
fucom
or
ds
pop
retf
aas
aad
stc
iret
loopne
loop
inc
int3
dec
test
fwait
lahf
push
(bad)
push
in
jl
lods
xchg
cmc
or
sub
stos
inc
mov
shr
je
call
fidivr
pop
and
lahf
sbb
popa
push
sti
das
nop
es
jmp
push
mov
into
inc
add
add
ret
repz
push
call
adc
retf
(bad)
mov
sbb
iret
sbb
(bad)
in
inc
xor
div
mov
jbe
dec
adc
jl
scas
inc
imul
fs
mov
data16
jmp
in
jo
cmp
push
loopne
mov
mov
mov
xor
stos
and
or
xchg
inc
stc
loop
adc
inc
pop
mov
movs
aas
adc
sub
(bad)
jbe
hlt
je
cmp
mov
fsubr
cmp
or
sub
jno
inc
adc
imul
sbb
out
dec
pop
repnz
jbe
bound
js
xchg
jg
pop
scas
push
call
loop
test
xor
mov
arpl
(bad)
jmp
mov
mov
pop
pop
and
dec
add
inc
xchg
xchg
xchg
mov
jbe
rol
in
and
adc
int
xor
cmp
and
xchg
mov
sbb
pop
mov
or
xchg
les
lea
push
pop
repnz
inc
sti
mov
leave
repnz
mov
xchg
addr16
rcl
mov
jae
adc
shl
xchg
arpl
jae
dec
and
inc
movs
rcl
pop
imul
mov
shr
sbb
pop
and
push
push
movs
mov
pop
lock
jge
or
cwde
in
jp
jp
pop
pop
ins
cmps
(bad)
cmp
xchg
cli
adc
and
push
adc
mov
cwde
ret
xor
div
cmps
sbb
scas
cld
out
sub
ds
and
inc
add
sbb
xchg
in
je
scas
outs
mov
retw
mov
push
scas
jb
lea
cmp
inc
add
(bad)
xchg
inc
mov
aad
std
adc
out
jl
mov
aam
aas
jae
push
sbb
mov
stos
iret
lods
scas
std
push
jmp
aad
mov
add
xor
clc
out
dec
mov
mov
or
mov
pop
cs
mov
sbb
lods
mov
xchg
and
into
add
pop
dec
shr
mov
pop
dec
scas
(bad)
sub
cmp
jle
or
xchg
dec
push
jecxz
jg
pop
loopne
js
mov
sub
(bad)
push
cmc
pop
mov
pop
cmp
outs
pushf
fcom
mov
pop
push
pop
das
in
out
push
pop
jle
sbb
xchg
and
cwde
mov
(bad)
loop
mov
cmps
jno
in
(bad)
cld
mov
pushf
repz
jle
ins
pop
imul
leave
icebp
push
pop
jg
jns
cmp
or
cdq
dec
pop
push
adc
push
ja
fninit
test
xchg
js
jecxz
fcomp
inc
cmc
xchg
push
xor
test
mov
clc
xchg
dec
(bad)
(bad)
call
les
int
pop
arpl
mov
xor
out
jno
cdq
mov
inc
mov
pop
inc
dec
loop
and
jne
or
push
pop
call
ror
jge
mov
fild
rcl
sub
cld
loopne
and
mov
push
push
in
mov
and
ss
sbb
and
push
or
cmp
stc
fidivr
sub
imul
pusha
cdq
das
sbb
sub
je
mov
movs
inc
dec
les
xor
jo
xor
mov
rcr
test
dec
sar
add
inc
push
mov
ds
popf
jle
in
mov
imul
pop
sahf
jecxz
mov
inc
loopne
test
fwait
call
ins
mov
aad
ret
sbb
les
movs
fcom
xchg
in
jl
sub
xlat
mov
std
(bad)
cli
aad
fs
or
jecxz
mov
jmp
loopne
(bad)
(bad)
add
je
call
dec
sbb
sahf
in
ror
pop
into
je
cmp
add
and
cmps
ret
iret
sub
xchg
outs
dec
dec
fisub
mov
mov
jmp
add
jl
cmp
pop
add
test
nop
push
dec
cmps
mov
or
and
cs
mov
int
jg
outs
call
lds
dec
(bad)
push
dec
rcr
xchg
push
or
xlat
cmp
inc
inc
jge
add
xor
daa
inc
aam
xchg
or
dec
inc
inc
add
mov
mov
dec
aaa
jbe
push
bound
dec
cmp
out
(bad)
stos
inc
(bad)
jmp
add
push
dec
mov
sub
aad
sbb
jmp
and
retf
adc
xchg
in
pop
or
xchg
push
(bad)
lock
mov
jnp
xchg
cmps
sub
pusha
sbb
xchg
or
dec
idiv
out
out
push
cmp
jbe
cmp
dec
std
sti
ins
shl
and
out
rcl
xor
pop
das
xchg
cdq
dec
aaa
imul
fcomp
adc
sbb
fcmovne
std
mov
inc
xor
sbb
sub
aaa
dec
mov
push
popa
rcl
dec
xchg
jp
repnz
sub
cmp
ret
add
cmp
sbb
daa
pop
movs
jb
jb
mov
ror
mov
stc
fnstenv
dec
jl
add
(bad)
lea
pop
test
imul
jbe
shl
sub
pop
dec
aaa
add
dec
xchg
std
movs
jae
sub
pop
retf
push
xchg
dec
fdiv
(bad)
cld
xchg
inc
mov
push
lahf
pop
adc
mov
repz
pop
dec
movs
jne
sbb
fnstsw
popf
lods
pushf
or
jb
add
inc
in
loope
out
sbb
xchg
aam
xor
adc
ret
push
out
std
pop
jae
mov
dec
leave
xor
adc
gs
adc
repz
in
(bad)
popa
mov
mov
mov
xor
rol
and
xchg
das
sar
mov
mul
mov
xor
push
je
pop
retf
pop
mov
pusha
cli
pushf
sti
xchg
sbb
jns
sub
fxch
pop
test
and
mov
cmp
push
mov
mov
mov
adc
sahf
cmc
cld
mov
test
jne
mov
sub
std
rdtsc
scas
mov
mov
cdq
push
inc
lods
and
mov
in
mov
sbb
hlt
cld
and
cmps
push
stos
xchg
test
test
pop
out
lea
and
sbb
mov
das
nop
mov
in
ss
mov
or
imul
shl
cmp
jp
xchg
bound
mov
in
outs
shl
aaa
ficom
pop
scas
dec
bound
in
fimul
mov
push
psubsw
fs
xchg
pop
mov
popf
and
inc
xor
xchg
outs
lds
stc
aam
jp
jp
mov
sahf
test
dec
jns
shl
(bad)
imul
mov
(bad)
xchg
fmul
mov
adc
(bad)
push
test
ror
loope
cmp
inc
mov
mov
sbb
gs
popa
xchg
rcr
dec
sbb
rcr
icebp
jae
rcl
xchg
pop
jns
mov
nop
xor
lods
and
outs
fmulp
jecxz
loopne
adc
aam
popf
sbb
push
xchg
es
rcl
adc
pop
out
sub
inc
stos
(bad)
stc
inc
and
call
jecxz
mov
sub
(bad)
sti
xchg
sbb
or
mov
or
jnp
mov
inc
fstp
(bad)
fsub
jg
out
and
imul
push
cdq
cmp
jge
sbb
xchg
pop
js
dec
inc
mov
pop
cmp
mov
ret
ror
xor
and
xchg
in
pushf
fnsave
xchg
push
fwait
cmps
dec
mov
xor
xlat
ins
jno
xor
sub
ds
add
in
mov
push
mov
jp
aam
pop
mov
pop
std
dec
pop
sub
sbb
and
cli
fst
nop
repz
adc
dec
dec
mov
movs
mov
pop
push
loop
addr16
scas
mov
xor
xchg
mov
add
push
add
mov
jb
cmps
imul
aam
outs
sub
(bad)
xchg
shl
fidivr
pop
pop
ds
inc
mov
daa
loopne
dec
inc
dec
stos
arpl
or
inc
stc
pushf
mov
mov
test
jbe
out
imul
xor
and
loop
imul
cs
ror
sub
adc
movs
scas
jae
mov
popa
sbb
sub
and
cld
or
iret
dec
fcomp
mov
rcr
fld
dec
push
fs
jg
jnp
cmp
xchg
or
xchg
add
(bad)
repnz
aaa
dec
fisubr
fmulp
jns
sub
lds
xchg
hlt
call
add
mov
stc
jl
fdiv
sbb
std
and
dec
loope
das
or
cmps
push
xchg
outs
add
jns
dec
add
inc
and
mov
xchg
cs
in
jle
cwde
(bad)
mov
jg
and
mov
pop
and
cmp
mov
pop
or
mov
pop
lahf
fisubr
jecxz
push
lock
clc
je
cmps
jo
add
adc
repnz
xchg
ss
push
cwde
(bad)
cmp
cmp
mov
in
xchg
and
fwait
adc
and
jge
lock
pushf
cmps
mov
btc
jmp
jnp
cwde
inc
inc
xchg
aam
movs
(bad)
pop
test
jne
mov
aad
xchg
or
dec
mov
into
popf
(bad)
popf
bound
sub
movs
aas
gs
cmp
mov
mov
leave
push
popf
cmc
lahf
mov
aaa
cdq
xor
or
jo
or
sbb
push
loop
lock
imul
push
or
pop
retf
sub
std
les
mov
xchg
ins
sbb
mov
sbb
or
jae
cmp
popf
arpl
jnp
mov
adc
and
add
cwde
push
jo
das
fwait
in
lods
jbe
push
push
pop
jl
push
mov
xor
in
repz
lods
mov
pop
std
mov
sub
inc
xor
xor
(bad)
xlat
mov
ret
inc
xchg
inc
adc
pusha
mov
and
mov
pop
pop
pop
adc
mov
inc
mov
pop
sti
push
aam
stos
lds
out
daa
clc
jl
xchg
mov
mov
shl
add
xor
dec
sbb
lods
cmc
pop
enter
jb
xor
xchg
lahf
mov
scas
aad
imul
scas
mov
mov
scas
inc
fist
int
aam
in
xchg
test
mov
fld
push
lds
(bad)
adc
neg
mov
mov
jo
dec
or
js
test
test
sub
repz
xchg
jmp
call
cld
cdq
pop
out
ficom
xchg
jmp
xchg
adc
mov
xchg
add
gs
xor
sub
stc
iret
sbb
bound
mov
call
or
ret
mov
mov
mov
push
push
ja
enter
dec
lds
fwait
jmp
shl
loop
add
(bad)
sbb
or
pop
fsubr
adc
jns
(bad)
push
pop
pop
imul
daa
push
mov
cmp
sub
movs
jbe
in
xor
mov
fbstp
in
es
iret
es
icebp
into
adc
mov
aam
inc
or
fild
iret
test
pusha
lahf
movs
xchg
data16
and
adc
mov
fcomp
add
pop
cmp
sahf
push
lea
inc
jmp
out
adc
mov
aas
dec
push
push
push
out
push
pop
dec
inc
mov
das
mov
loop
mov
sub
xchg
in
xchg
mov
push
add
mov
les
mov
cdq
pop
shr
push
bound
push
jb
icebp
pop
add
sub
add
ret
push
or
scas
jle
sahf
rcr
(bad)
adc
push
mov
lds
sar
inc
sub
pop
cmps
ret
mov
mov
nop
mov
push
es
mov
adc
ret
ret
pop
adc
push
or
shr
jno
add
add
jg
fadd
mov
and
clc
shl
push
xchg
jno
test
sub
mov
pop
mov
adc
mov
push
jmp
mov
call
inc
inc
in
jg
sub
xor
sti
scas
mov
xchg
adc
xor
cmp
ret
fidiv
inc
mov
ss
aas
icebp
gs
cdq
fisub
dec
jmp
aad
mov
push
out
or
sbb
ficomp
pop
add
and
ficomp
imul
call
or
add
inc
imul
(bad)
movs
mov
imul
sbb
xor
icebp
dec
mov
add
adc
sbb
(bad)
enter
push
inc
sbb
xchg
push
pop
cld
imul
repnz
adc
gs
push
mov
jl
mov
push
add
and
add
popf
mov
fstp
rol
cld
stos
leave
xchg
push
push
dec
sub
rcl
dec
xor
test
test
cli
aas
aad
mov
stos
das
mov
jecxz
xlat
sub
xchg
hlt
jl
push
aaa
cli
loopne
lea
cmp
jae
sbb
sbb
mov
je
dec
or
inc
sub
lea
mov
jb
xchg
cmp
mov
sub
jo
retf
dec
sti
jne
adc
stc
mov
inc
mov
fstp
hlt
sub
sub
pop
arpl
sbb
cld
ror
fwait
out
ret
and
mov
or
out
ins
adc
xchg
repnz
imul
adc
std
in
call
(bad)
xchg
dec
addr16
sbb
fimul
popf
int3
inc
inc
pop
sub
mov
icebp
(bad)
es
retf
push
mov
lods
outs
mov
add
xlat
sub
mov
(bad)
or
imul
mov
cmp
mov
(bad)
jg
ins
mov
add
and
push
pop
jge
sbb
pusha
cdq
inc
dec
jbe
sub
push
aas
cmps
(bad)
scas
cmps
fmul
shl
das
jmp
je
jbe
out
push
iret
dec
dec
jae
ins
pop
(bad)
aam
inc
fisttp
ja
(bad)
in
jl
out
xchg
sbb
(bad)
addr16
mov
sub
sahf
mov
or
clc
mov
xor
popf
in
clc
in
jmp
inc
and
pusha
inc
dec
mov
loopne
or
ins
add
or
retf
nop
aas
adc
imul
mov
inc
adc
bound
mov
inc
dec
shl
imul
cld
push
sti
jl
je
mov
sub
retf
cmp
mov
lods
fwait
in
or
pop
mov
dec
mov
fisubr
pushf
loopne
xor
xchg
cmp
push
mov
ins
inc
mov
dec
ja
stc
dec
jg
sbb
mov
shl
(bad)
pop
mov
sub
outs
loop
jmp
sar
push
scas
dec
je
inc
push
lods
div
hlt
mov
pop
test
cmp
add
push
fs
jg
jb
mov
xor
iret
push
ja
mov
fabs
mov
ret
frstor
lahf
out
scas
or
fsubr
test
pop
push
dec
inc
ret
xchg
mov
neg
pusha
out
into
lock
pop
(bad)
mov
repz
test
jb
adc
mov
inc
jns
scas
les
ins
and
dec
xchg
jle
call
xor
rol
pop
(bad)
xlat
jmp
sub
jle
fs
call
inc
pop
rcl
cmps
stos
cmp
int3
adc
sub
retf
popa
and
fcomp
in
dec
dec
icebp
rcl
mov
sahf
cdq
outs
adc
scas
cmp
shl
and
mov
cmps
inc
jmp
mov
es
cmp
mov
mov
pop
jp
cmp
nop
and
and
imul
jmp
xor
xor
in
push
fidiv
outs
loope
dec
dec
in
pop
or
xchg
push
mul
cmps
push
mov
std
xor
pop
loop
shr
push
cmps
cmps
lods
je
or
retf
mov
in
dec
add
xor
jmp
push
repz
clc
ins
mov
pop
pop
fwait
sub
push
mov
mov
cmp
dec
iret
push
cli
cld
jne
add
dec
and
mov
inc
fadd
dec
pop
add
fisttp
push
push
jle
ret
or
xchg
mov
or
xchg
addr16
not
jae
xchg
push
jmp
pushf
push
pusha
mov
cmp
jl
mov
cmp
dec
movs
mov
in
mov
push
aas
jnp
xor
std
pusha
in
dec
push
sbb
xor
es
out
xchg
fst
pop
mov
mov
loop
cmps
es
rcr
shrd
push
dec
push
loopne
repnz
cwde
loopne
xor
push
cmps
stc
add
repnz
xor
and
mov
adc
lods
xlat
sti
mov
push
push
movs
mov
xor
aaa
jno
jmp
jb
rcl
push
mov
mov
es
jno
leave
ja
pop
test
fisub
fcmovnu
outs
jp
aaa
scas
mov
dec
or
shr
push
aam
shl
add
clc
mov
push
pusha
int
hlt
std
pusha
and
ss
mov
sub
xor
aam
adc
cmp
push
pop
mov
int3
and
ret
mov
psraw
cli
cmps
inc
push
ins
mov
(bad)
mov
ret
add
arpl
push
in
out
call
or
out
or
mov
movs
dec
test
mov
add
out
adc
mov
xchg
cs
sahf
inc
outs
mov
pop
js
adc
ins
inc
es
fadd
xchg
das
dec
jb
test
mov
lock
outs
fcomip
daa
mov
mov
and
cmp
iret
call
out
sar
lock
adc
mov
cmp
sub
mov
loop
aas
pop
push
xor
mov
or
mov
pop
movs
(bad)
std
sbb
in
pop
add
push
jb
stos
retf
cmp
idiv
imul
in
jns
adc
sbb
xchg
mov
add
sub
in
push
mov
mov
mov
and
add
sub
and
or
and
dec
push
and
and
mov
or
in
mov
rcl
call
sbb
sbb
imul
xlat
or
mov
stc
mov
nop
ins
sbb
sar
sub
je
mov
fsubr
movs
sub
push
sub
pop
int
mov
adc
mov
sub
iret
dec
mov
jecxz
mov
xchg
lods
dec
mov
lods
or
mov
stc
adc
(bad)
mov
add
(bad)
mov
fisttp
out
sub
repnz
jae
pop
and
int3
jle
in
jno
and
sub
adc
data16
pop
mov
(bad)
call
dec
nop
(bad)
fcomp
iret
sub
sbb
je
test
outs
push
call
mov
pop
push
adc
mov
jne
inc
sar
add
xor
fidivr
jbe
fdivr
daa
sbb
push
cmp
mov
scas
mov
popa
cmp
add
jo
cs
int
fcmovnb
mov
mov
jns
inc
pusha
nop
dec
loopne
loop
mov
int
fmul
inc
fsub
imul
xchg
jne
dec
jg
pop
pop
stos
dec
mov
xor
add
and
dec
stos
frstor
add
ss
cmp
sahf
pop
xchg
mov
sbb
push
ja
lea
cmp
mov
xchg
js
div
dec
cwde
jg
out
fs
and
out
sbb
or
mov
and
dec
push
adc
push
and
popa
and
fsubr
xor
pop
lds
xchg
gs
sti
cmp
mov
jno
fld
into
(bad)
lds
pop
data16
and
inc
cwde
push
(bad)
xchg
and
js
stos
int3
or
xchg
push
jns
mov
inc
sbb
xor
outs
pop
jle
stc
nop
mov
and
sub
idiv
jl
sub
and
lods
or
js
mov
loope
cmc
xor
xchg
jne
cmps
ret
pop
xchg
iret
sbb
jno
sub
retf
dec
jbe
mov
fs
dec
(bad)
xor
sbb
jg
mov
adc
lds
add
call
or
(bad)
jo
adc
pushf
or
sbb
inc
inc
mov
stc
lods
fdivr
push
cmps
sub
or
xchg
add
add
cs
cwde
push
ror
cwde
iret
lock
push
push
mov
repnz
add
stos
into
pop
jmp
mov
movs
adc
cmp
data16
pusha
push
pop
retf
mov
fisub
adc
out
test
mov
cmp
lds
nop
push
int
add
ds
or
sub
push
push
mov
dec
fdiv
cmps
mov
test
push
lea
scas
cmp
mov
sub
ins
sbb
xchg
pop
in
jmp
dec
aam
xor
push
or
or
push
pop
dec
push
jmp
stos
push
sub
pop
loope
enter
xor
outs
xchg
jae
inc
jg
mov
gs
pop
sub
jecxz
xchg
(bad)
int3
lahf
out
call
mov
loop
call
xchg
push
in
jne
aad
ds
push
cmp
pop
fisttp
dec
aas
add
jno
pop
jne
sbb
cs
lahf
in
dec
mov
sub
ret
jae
add
lds
jb
xor
and
pop
hlt
pop
mov
dec
sub
add
or
(bad)
add
and
lahf
out
stos
sub
pop
aam
in
jmp
fbstp
push
jno
fnstcw
call
fiadd
mov
jno
cmp
movs
and
dec
pushf
jns
addr16
sub
in
nop
dec
and
pop
add
das
sub
jl
xor
push
sbb
sub
mov
pop
push
xor
jo
push
cmp
add
mov
imul
lds
mov
mov
sub
and
lock
test
mov
shr
mov
ds
pop
fbstp
stos
stc
sub
add
mov
in
mov
xor
cdq
add
aam
cld
stos
cmp
inc
or
inc
sub
cmp
stc
test
pushf
ins
inc
sbb
addr16
mov
adc
mov
adc
cmp
out
add
les
add
clc
repnz
sbb
rol
xchg
xor
and
push
pop
or
retf
adc
sub
jae
loopne
test
outs
fisub
idiv
add
or
in
ss
imul
lock
adc
stos
xor
daa
inc
adc
and
ret
fldcw
idiv
pop
pop
test
mov
stos
dec
push
cwde
xchg
imul
add
fadd
aas
xchg
retf
pop
jle
adc
leave
mov
mov
(bad)
pop
jmp
inc
outs
in
call
adc
lea
push
sub
mov
neg
ss
cwde
inc
pop
repnz
rcl
loop
mov
xchg
(bad)
dec
jae
add
and
mov
inc
in
fst
jnp
push
lahf
rcl
push
ins
xchg
xor
gs
(bad)
cld
sub
sub
xchg
mov
rcr
mul
xor
add
imul
inc
fcomp
jge
add
sbb
mov
int
je
div
pop
sbb
pop
mov
mov
xchg
jmp
aad
inc
mov
mov
and
xor
pop
pop
addr16
cwde
fwait
into
std
dec
push
xor
loop
in
xchg
adc
dec
xchg
sahf
jecxz
mov
push
jbe
fst
mov
aaa
dec
lock
pushf
(bad)
jecxz
xchg
pop
cwde
loope
enter
pop
or
and
bound
and
jns
(bad)
(bad)
fcomip
jmp
lock
gs
add
lock
fdiv
(bad)
pop
shl
inc
cmp
cmp
sub
call
mov
sbb
pusha
adc
mov
pop
jg
rol
mov
push
mov
and
xor
outs
adc
fnstcw
mov
in
and
or
adc
jmp
(bad)
ss
je
loope
and
fbstp
adc
sub
jne
jmp
or
retf
adc
fwait
movs
xor
cmp
aam
fisttp
add
(bad)
(bad)
mov
inc
in
sbb
cmp
ret
inc
jb
push
mov
pop
aaa
xlat
jo
sub
push
push
xchg
mov
sub
ror
xor
cmps
daa
(bad)
xchg
(bad)
jle
pop
add
add
int
push
cmp
push
cs
mul
mov
sub
ja
jbe
jne
inc
je
aaa
ins
daa
lock
in
sub
adc
jecxz
jg
add
rcr
jmp
scas
jg
in
add
lods
cmps
add
push
ret
mov
jo
inc
ins
jne
jmp
arpl
sbb
jecxz
adc
popa
dec
cmc
sbb
pop
cwde
loopne
shr
dec
aaa
rol
ins
push
add
(bad)
fwait
jo
inc
jle
int
adc
vprotd
and
ja
sahf
jmp
leave
imul
mov
popf
jg
cmp
std
and
retf
enter
push
adc
adc
push
push
or
aas
lods
adc
aam
bound
dec
dec
sub
outs
mov
mov
(bad)
int3
int
lea
xchg
xchg
add
es
inc
bound
xor
mov
mov
fcom
adc
and
inc
sub
lahf
xor
es
jge
sbb
mov
in
(bad)
js
sbb
es
rcr
and
sbb
mov
cmps
xor
xchg
test
outs
enter
mov
cmp
call
popa
jl
add
ins
ret
add
je
clc
adc
dec
adc
mov
xchg
test
or
bound
sete
out
int3
scas
push
cs
push
pop
test
xchg
loope
hlt
xchg
mov
movs
loop
mov
pop
inc
mov
pop
imul
push
pop
fadd
fisttp
test
cmp
dec
in
inc
xchg
cmp
fwait
stos
cmp
(bad)
sbb
loopne
inc
std
not
fdiv
mov
out
jbe
mov
pop
in
pop
leave
mov
pop
add
daa
shl
movs
mov
lds
jmp
push
jmp
aad
pop
into
jecxz
add
xlat
ins
cs
outs
icebp
js
mov
ud2
aaa
mov
adc
inc
mov
jmp
pop
fisttp
lds
pop
xor
lods
fucomp
loopne
push
aad
mov
in
pop
outs
cmc
jmp
xchg
retf
lahf
outs
(bad)
scas
in
or
sbb
out
mov
mov
imul
sbb
sbb
xlat
mov
mov
scas
add
pop
inc
arpl
retf
(bad)
mul
aad
imul
pop
aad
ss
out
popf
retf
ds
btr
aaa
jmp
jmp
outs
hlt
fwait
mov
xor
aam
imul
jno
(bad)
jmp
mov
jnp
dec
cs
push
push
mov
push
xchg
loope
xlat
pushf
call
inc
aas
dec
popa
sbb
aas
cs
or
adc
xchg
push
adc
pop
ja
mov
fisub
lds
xchg
(bad)
(bad)
fadd
pusha
mov
add
cmp
jnp
mov
div
push
add
xor
or
and
arpl
cmp
int
add
push
outs
push
stos
and
rol
fisub
lea
xchg
sub
lock
cmp
sti
into
je
pushf
sbb
int
adc
mov
adc
mov
pop
int
pop
jmp
xchg
push
add
inc
jl
test
out
push
adc
mov
and
pop
cmp
pop
jnp
xor
in
cs
inc
shl
push
clc
imul
leavew
nop
cmp
sub
push
xchg
loope
test
idiv
mov
and
jmp
pop
xchg
lock
inc
xchg
arpl
iret
hlt
sti
aas
cmc
mov
shr
stc
(bad)
jecxz
adc
xchg
mov
sbb
jge
jae
xor
mov
loopne
test
or
cmp
cmp
mul
push
fwait
addr16
aam
bound
shr
ret
cmp
sub
jmp
or
mov
and
or
jae
(bad)
loope
mov
int3
aam
sub
xor
pushf
int
rol
ror
mov
cmps
scas
icebp
js
ror
dec
push
cwde
mov
in
jnp
pop
xor
cmp
js
outs
push
jns
xchg
in
inc
lahf
sar
xchg
mov
aam
dec
pop
sub
inc
cli
push
(bad)
pop
mov
mov
sbb
jbe
xchg
push
xlat
stos
popa
popa
add
push
pop
scas
call
icebp
add
(bad)
aas
xchg
sbb
test
ret
aad
in
mov
pop
imul
test
inc
(bad)
pause
(bad)
mov
cwde
jmp
mov
loop
ret
sbb
or
enter
es
add
xor
cmp
and
or
and
ins
xor
in
idiv
cmps
and
cmp
loop
arpl
gs
xchg
mov
jmp
fld
retf
out
pop
inc
dec
sub
pop
in
popf
sub
in
repz
jle
jle
cmovb
or
or
jno
xlat
pusha
inc
daa
cwde
mov
ror
xlat
out
movs
push
mov
sbb
aas
push
inc
inc
cmp
xchg
je
fst
in
(bad)
out
bound
cmp
out
not
ins
cmp
or
into
cld
ret
out
outs
jg
cmp
pop
icebp
pop
ror
inc
add
cmp
mov
outs
dec
sbb
push
add
aas
in
call
add
sbb
mov
pop
pop
add
and
aas
imul
outs
fmul
popf
inc
and
and
dec
ja
cmp
and
movs
mov
mov
nop
cli
adc
dec
mov
mov
sub
int
cld
fcom
add
pushf
and
scas
call
outs
loop
mov
out
xchg
jo
or
and
pop
cmp
push
movs
ror
jecxz
push
scas
test
mov
jmp
in
pop
fs
rol
(bad)
pop
mov
sub
test
jle
sbb
mov
mov
mov
pop
ins
idiv
fcmovb
dec
adc
retf
mov
dec
pop
mov
jecxz
leave
mov
adc
ror
sub
inc
jbe
stc
(bad)
icebp
test
out
mov
hlt
inc
ins
call
ror
leave
lods
pop
sub
sahf
add
sub
pop
dec
scas
mov
inc
sbb
stc
cmp
adc
sbb
xlat
aam
popf
aam
dec
push
mov
sti
(bad)
fs
cmp
adc
lock
xchg
pusha
jb
dec
scas
xchg
inc
fwait
scas
es
pop
inc
inc
loop
(bad)
xor
jb
outs
sub
fst
inc
lea
stos
dec
add
sti
stos
sbb
nop
movs
or
ins
mov
nop
dec
rcl
cs
cmps
fwait
cdq
dec
push
cmp
dec
(bad)
jbe
dec
and
mov
mov
push
sbb
cmps
xchg
cwde
sbb
xor
mov
in
jns
out
sub
into
loope
xchg
jle
xchg
loope
mov
mov
das
nop
inc
outs
cli
adc
sbb
inc
(bad)
aad
mul
cmps
rcr
shl
ret
sbb
jnp
sbb
repnz
jns
and
inc
jb
sbb
out
repnz
and
dec
xchg
in
adc
stc
loopne
inc
test
jnp
sbb
repnz
sbb
jp
ret
dec
ins
aas
dec
ret
mov
lds
dec
arpl
sub
xor
popf
jle
or
mov
hlt
xchg
pop
enter
push
daa
and
imul
inc
shr
rcr
mov
and
pop
sub
jbe
(bad)
pop
jmp
jb
lea
mov
cmp
ja
fnstsw
es
inc
xchg
imul
jge
sub
and
mov
push
inc
mov
scas
adc
mov
scas
push
xchg
cwde
je
scas
sbb
jnp
or
mov
loop
mov
imul
xchg
sub
pusha
jge
cmp
mov
test
mov
pusha
sbb
jae
iret
pop
pushf
xchg
add
xchg
fcmovne
sub
xchg
cwde
mov
add
inc
movs
aas
loop
rol
(bad)
jl
shl
xor
das
mov
xchg
rol
or
mov
push
cld
jle
test
sar
or
cmp
jmp
adc
mov
rol
mov
sub
jmp
popf
cmp
and
jmp
int
push
pop
jp
mov
call
adc
(bad)
pop
fwait
add
stc
jae
ins
cmp
mov
add
add
bound
call
popf
ret
outs
sahf
loopne
call
sub
adc
mov
test
fdiv
dec
iret
in
into
mov
inc
int3
xchg
cld
sbb
jae
test
test
adc
int3
fs
or
inc
fnstenv
repnz
stos
(bad)
(bad)
frstor
loope
cs
cld
push
cli
aam
push
push
inc
jo
leave
mov
in
xchg
cmp
mov
ins
mov
jb
sub
cwde
or
mov
stc
pop
mov
stos
mov
adc
xchg
pop
inc
ror
cmps
dec
enter
ret
cmp
cmp
imul
add
jg
fimul
mov
mov
movs
and
or
and
mov
lahf
add
sti
push
(bad)
cdq
dec
lds
push
lahf
sbb
in
dec
imul
mov
outs
push
pop
xor
imul
jecxz
xor
cmp
shl
adc
es
rcr
dec
mov
popf
add
out
xchg
pushf
sbb
sbb
and
sbb
xchg
fbld
call
jmp
mov
jno
in
jl
test
mov
(bad)
pop
pop
ds
cmp
out
ss
adc
scas
test
loop
pushf
call
test
cld
je
or
cmp
pop
mov
daa
mov
pushf
and
adc
int3
loopne
mov
out
adc
xchg
sub
inc
adc
lea
jg
fdivr
add
sbb
retf
push
inc
cmp
call
mov
push
jno
pop
fnstenv
cs
sti
fdiv
in
mov
push
icebp
and
sub
push
push
pop
and
stos
push
enter
popf
mov
nop
mov
adc
push
loopne
or
mov
test
push
test
xchg
jne
movs
push
cmp
adc
cmp
lea
push
mov
repz
cmp
int
retf
jae
dec
loopne
xchg
add
ss
jmp
inc
add
rol
mov
dec
leave
dec
sub
js
ds
jno
dec
clc
add
(bad)
lods
(bad)
sub
clc
pushf
fimul
(bad)
aad
or
movs
mov
test
iret
adc
mov
or
std
push
dec
and
add
gs
ss
and
sbb
jnp
mov
jecxz
inc
data16
out
stc
cmp
bound
sbb
test
ja
in
push
adc
inc
mov
(bad)
iret
pop
dec
adc
repz
inc
mov
test
jne
out
mov
fs
sbb
push
in
jne
mov
xchg
jno
rcl
push
mov
mov
mov
xchg
xchg
xchg
scas
push
push
mov
je
out
and
int
pushf
jmp
cmp
or
dec
or
push
mov
fisttp
inc
lea
movs
inc
les
loopne
(bad)
(bad)
sbb
push
cs
pop
xor
dec
inc
std
ds
pushf
or
pushf
hlt
sbb
fiadd
loop
dec
sbb
cmps
cmc
mov
jo
test
jge
lods
jbe
add
into
(bad)
mov
fild
sbb
adc
mov
or
adc
test
cmp
mov
add
or
ret
cmp
(bad)
pop
inc
xchg
inc
mov
test
aas
cmp
push
mov
popf
add
jge
in
test
cli
add
lods
jp
(bad)
scas
push
test
scas
jo
mov
mov
ds
lock
mov
fcomp
jne
inc
and
dec
push
(bad)
call
and
fnstcw
xor
mov
and
shr
pop
mov
xchg
(bad)
cmp
jb
aaa
add
stos
add
or
int
cmp
loopne
xchg
jecxz
clc
sar
adc
lock
in
das
iret
mov
cmp
lahf
pop
es
scas
pop
xor
cmps
xchg
sub
cs
push
jge
jp
pop
sbb
ror
mov
out
sub
push
repnz
and
sbb
adc
xor
or
push
test
dec
cli
mov
push
dec
or
fimul
jge
test
std
dec
jo
popa
(bad)
and
jmp
jecxz
adc
ins
jno
fldenv
jl
jno
jo
cmc
cmc
mov
cmps
dec
test
mov
fs
pop
mov
sbb
push
ins
cwde
cmc
or
push
je
out
xchg
sbb
lods
call
xlat
add
mov
out
or
sahf
sbb
xchg
add
int
mov
xor
mov
jo
push
sti
(bad)
neg
push
xor
xchg
dec
sbb
mov
push
es
sti
push
or
push
das
xchg
shr
push
mov
cwde
jbe
mov
add
cwde
sbb
push
aaa
mov
cmp
dec
add
aad
(bad)
(bad)
pop
pop
xchg
mov
rcl
out
mov
mov
sbb
jno
jg
dec
cmps
xchg
test
retf
or
add
enter
ja
sub
and
mov
cs
mov
mov
jbe
push
jecxz
pusha
push
inc
xchg
out
inc
mov
rcr
adc
in
loope
pusha
mov
xor
add
cs
push
(bad)
cmps
ds
jle
fcomi
sub
jmp
cmp
das
mov
sub
push
jo
adc
stc
jmp
movs
enter
mov
js
or
scas
push
arpl
rol
sub
out
and
cs
push
sub
xor
mov
dec
push
(bad)
rcl
daa
add
sar
sbb
out
cmp
es
iret
push
(bad)
repz
popf
arpl
cwde
add
adc
aam
imul
rcr
xchg
push
push
cmp
leave
jecxz
jae
mov
and
sar
cdq
fld
sbb
push
mov
fmul
mov
add
pop
push
sti
xlat
mov
clc
jmp
jne
adc
enter
(bad)
xor
data16
stc
repnz
loopne
dec
sub
fadd
std
jbe
test
push
retf
das
add
inc
and
lock
gs
fld
or
sbb
sub
mov
sbb
jmp
mov
pop
xor
jle
xchg
inc
movs
xchg
repnz
add
bound
cmp
shl
or
mov
test
fstp
cmp
adc
xor
push
(bad)
push
test
or
mov
setge
xchg
fs
jp
int3
jge
leave
icebp
mov
mov
mov
lock
sub
dec
arpl
pushf
addr16
push
in
mov
enter
sub
jnp
inc
(bad)
cmps
test
mov
(bad)
test
les
adc
and
xchg
ret
or
or
sub
or
aas
dec
movs
(bad)
in
cwde
and
cmp
aad
and
jmp
cld
mov
xchg
pop
mov
and
xor
leave
cmp
adc
push
ins
call
stc
sub
daa
repnz
out
inc
cmp
jl
dec
mov
sbb
in
call
cdq
xor
fdivr
mov
inc
clc
and
xor
jmp
mov
into
out
cmp
mov
cmc
nop
mov
adc
sub
pop
mov
xor
jb
out
xchg
jl
cdq
push
sub
push
retf
out
add
cmps
push
(bad)
dec
sub
mov
movs
ja
adc
adc
adc
push
jecxz
push
retf
std
cmp
mov
cmp
movs
add
inc
jg
pop
mov
push
push
mov
push
pop
lds
jp
cld
mov
or
cli
stc
jge
push
jg
xchg
dec
ret
ds
add
xchg
movs
call
leave
pop
mov
test
mov
jge
cmp
shufps
mov
shr
mov
pop
int
cmp
mov
jbe
ins
rol
mov
jno
adc
inc
add
nop
retf
shl
jp
stos
sbb
mov
repnz
loopne
xchg
js
es
push
enter
inc
inc
and
cmp
mov
cwde
adc
mov
xor
imul
sub
pushf
sub
adc
add
sub
inc
clc
mov
or
in
jnp
shr
repnz
adc
test
das
in
xchg
jg
ja
mov
mov
mov
cwde
pop
jne
mov
cmps
bound
xchg
imul
mov
and
jno
pop
je
mov
mov
pop
sbb
mov
xchg
or
test
xchg
es
mov
fmul
jnp
(bad)
mov
ja
inc
jl
ret
push
sbb
mov
sbb
repnz
data16
jg
mov
(bad)
ret
pop
inc
arpl
data16
cmps
mov
pusha
mov
jno
ds
jmp
sub
fstp
sbb
mov
push
inc
loope
test
push
das
mov
sbb
adc
xor
add
shl
scas
rcr
je
mov
push
mov
or
mov
mov
ins
jns
fstp
add
pop
arpl
pushf
fnstsw
cmp
or
gs
pop
jmp
adc
loop
ja
mov
xchg
shr
add
add
mov
dec
das
das
bound
iret
add
call
enter
xchg
mov
sub
cdq
in
scas
mov
jo
mov
cmc
sub
jbe
inc
out
xor
sbb
shl
stos
rol
stos
pop
pop
mov
jno
jecxz
into
test
xor
sbb
xor
lea
cdq
xor
cmc
out
push
int
cdq
or
dec
test
dec
cmp
adc
bnd
mov
inc
je
js
imul
inc
and
dec
dec
cdq
or
sub
shl
cmps
jb
mov
ja
out
jle
(bad)
test
ret
ret
add
in
shl
inc
in
dec
rcl
jle
ds
sbb
pop
pop
(bad)
push
sub
mov
push
add
cs
mov
push
int
(bad)
adc
movs
aad
(bad)
mov
push
mov
mov
repz
mov
pushw
lahf
pop
loop
cmp
xor
cmp
xor
lods
es
out
imul
rcr
mov
jg
retf
movs
xor
xor
cmp
(bad)
into
test
pop
xchg
xchg
(bad)
jns
xor
lahf
xchg
dec
jecxz
in
adc
sbb
xchg
and
mov
mov
aam
(bad)
cmp
nop
sub
mov
inc
mov
daa
loope
inc
outs
cmps
das
in
or
fxch
btr
aaa
jmp
mov
adc
das
fwait
ins
cmp
push
jo
imul
loopne
jns
sar
sub
cwde
(bad)
jp
mov
pop
fucomp
ss
loope
cmp
jb
test
inc
inc
and
dec
iret
call
sti
xchg
repz
test
mov
scas
js
repz
aam
call
ror
fcom
jmp
inc
rol
rcr
pop
lods
std
adc
(bad)
pop
jecxz
test
jmp
movs
xor
mov
call
dec
pop
stos
xor
shl
lods
popf
xor
(bad)
inc
sbb
lods
pop
xchg
or
mov
out
jmp
dec
inc
jle
arpl
not
pop
mov
out
lea
nop
mov
inc
jl
shr
push
xchg
push
or
inc
ror
jb
call
(bad)
xor
mov
mov
pop
or
cmps
ror
sar
das
popf
in
pop
push
fidiv
mov
mov
pop
add
sbb
je
cdq
ficomp
jns
pop
cmc
cmp
add
shl
mov
mov
rcr
or
mov
mov
pop
push
sbb
xor
lods
and
shr
jne
adc
dec
lods
cmps
imul
xchg
hlt
dec
xor
shl
mov
mov
scas
pop
test
xchg
push
sbb
(bad)
jmp
mov
in
in
fist
outs
or
sti
jae
and
jns
fiadd
dec
xor
retf
inc
pop
add
inc
push
xchg
nop
ror
push
cld
and
retf
int3
inc
inc
in
test
push
and
jbe
(bad)
jg
test
cld
add
push
inc
xor
sbb
add
enter
aad
xlat
mov
xchg
daa
adc
push
test
cs
dec
push
push
sahf
lods
adc
lock
outs
jne
push
(bad)
lea
dec
dec
dec
cmc
dec
push
cdq
mov
dec
shl
dec
cli
cmc
cmp
adc
sbb
js
dec
push
xchg
sahf
dec
cmps
ja
(bad)
dec
sub
lock
popf
and
xchg
lock
xchg
pop
in
imul
fwait
push
jmp
ret
add
fwait
loopne
hlt
adc
mov
pop
aaa
jmp
stc
imul
in
xchg
lock
aas
ins
ficom
sub
cmp
(bad)
pop
and
inc
imul
ja
ins
inc
jge
jmp
xchg
sbb
les
cmp
xor
lods
test
loop
sub
int
inc
jb
dec
repz
mov
out
bound
or
push
push
sub
inc
mov
xchg
ret
iret
dec
and
add
mov
or
mov
test
and
inc
adc
mov
pushf
pusha
sbb
clc
inc
xchg
(bad)
call
adc
mov
dec
or
inc
mov
icebp
mov
sub
(bad)
cmp
cmc
cmp
mov
call
xlat
outs
jmp
nop
pop
shr
jb
lock
bound
jle
repz
and
dec
ret
int
pop
ja
xor
sti
jno
lods
mov
jo
test
xor
fst
xchg
cld
jmp
mov
out
ins
cmc
cmc
push
iret
scas
or
(bad)
sbb
adc
enter
pop
push
sbb
in
hlt
(bad)
jns
add
scas
pushf
sbb
push
add
mov
dec
mov
or
xchg
movs
xor
xor
sub
mov
pop
xlat
xor
(bad)
cmps
or
jae
xchg
dec
loop
cmp
push
mov
repnz
ins
imul
hlt
cli
and
retf
jl
xor
xor
les
xchg
push
mov
pop
stos
pop
dec
mov
(bad)
test
xor
outs
movs
test
pop
int
shl
add
inc
ret
push
pop
sub
ror
in
sahf
out
int3
aam
and
xor
adc
cld
cdq
fnclex
add
call
or
cdq
outs
add
sub
xor
pop
add
add
test
push
icebp
ins
movs
fs
cdq
int3
fstp
mul
test
enter
dec
imul
or
jae
imul
sbb
or
pop
jae
es
push
lahf
push
jecxz
dec
pop
push
ret
test
or
mov
mov
repz
movs
stos
adc
pop
int3
scas
xchg
push
mov
adc
push
int3
popf
sbb
cmp
or
xchg
xchg
outs
or
lahf
sub
popa
mov
pop
ficomp
repz
int
mov
adc
dec
cld
sub
xchg
mov
idiv
call
push
push
fcomp
cmp
mov
scas
inc
mov
and
sahf
inc
test
gs
int
icebp
cs
cmps
mov
div
pop
xchg
xchg
movs
inc
sub
stos
cmp
push
inc
fchs
arpl
stc
and
push
mov
mov
xchg
xchg
sub
dec
mov
mov
mov
scas
into
inc
shl
or
stc
sbb
push
fdivrp
clc
and
fdivr
fist
fdivr
xor
mov
mov
jbe
in
add
pop
cmp
sub
sahf
mov
cs
pop
push
inc
jmp
mov
adc
jecxz
dec
jae
test
stos
dec
cmp
std
sti
or
pop
sbb
jmp
js
push
mov
xchg
stc
and
or
es
iret
aam
sub
add
nop
int3
int3
in
iret
leave
nop
cmovl
mov
xor
out
scas
movs
loope
das
inc
dec
test
loope
(bad)
sub
mov
sbb
push
aaa
mov
mov
mov
imul
sbb
push
sub
xchg
mov
lds
adc
retf
leave
push
ins
mov
daa
pop
cs
fsubr
int3
sar
aad
mov
jnp
adc
outs
std
xchg
ins
test
out
(bad)
jae
loop
pop
scas
lea
gs
adc
fcmovne
sbb
cmp
xlat
out
call
rcr
call
lods
mov
das
imul
cmp
jb
lods
test
cmp
loop
sbb
xor
mov
arpl
test
inc
jge
inc
gs
pop
dec
cmp
ins
add
out
xor
out
nop
xor
inc
jnp
shr
xchg
pop
sub
sbb
popa
adc
cmc
aad
das
lods
pop
or
scas
push
inc
push
imul
dec
pop
ja
pop
and
retf
xchg
int3
jb
rcl
pop
bound
inc
add
out
out
mov
mov
add
push
cmp
and
mov
jbe
jno
xchg
xchg
fnstcw
les
lds
mov
stc
inc
aaa
aam
lock
pop
inc
mov
ds
sub
fwait
inc
rcl
jmp
aam
mov
add
xor
push
stos
xor
add
xlat
xlat
(bad)
mov
push
dec
arpl
aam
and
call
jno
scas
fidiv
pop
dec
fidivr
in
call
sbb
push
mov
addr16
xor
repz
push
pop
ins
fsub
sbb
adc
enter
shr
pop
in
cmps
push
push
cdq
dec
inc
clc
repnz
cmp
inc
(bad)
lds
and
out
hlt
bound
loopne
mov
xchg
test
xchg
xchg
jb
inc
dec
push
fidivr
dec
pop
outs
inc
stos
add
retf
mov
sub
xchg
call
push
xchg
fisub
cmp
iret
pop
mov
xchg
xor
in
and
(bad)
imul
add
pop
add
and
and
or
sub
int
xchg
mov
(bad)
aad
push
ret
push
inc
fst
inc
ins
xchg
sbb
clc
pop
outs
adc
jne
(bad)
sbb
or
cmp
pop
inc
xchg
cmp
adc
adc
in
retf
(bad)
retf
xchg
or
mov
pop
dec
out
sar
cmc
out
mov
mov
or
push
add
arpl
fadd
bound
aam
cmp
dec
pop
scas
and
es
dec
jecxz
ror
idiv
dec
mov
sbb
lock
push
call
xchg
pop
mov
mov
int3
xor
sahf
sbb
adc
cmp
cmps
shr
(bad)
outs
(bad)
rol
jo
sti
mov
std
fsub
xchg
cld
movs
shl
add
dec
sub
mov
lds
clc
and
cmc
xchg
ficom
pop
adc
leave
scas
and
and
lds
cmp
dec
jmp
icebp
aam
daa
bound
out
sbb
push
(bad)
mov
inc
jl
sar
or
jge
mov
test
xchg
dec
frstor
and
pop
sbb
imul
jmp
and
inc
jmp
gs
dec
retf
jmp
gs
popa
pop
fs
xchg
aas
cmp
nop
pop
aaa
js
xchg
mov
enter
int3
movs
push
push
and
imul
fwait
cmps
ficomp
sub
(bad)
outs
(bad)
mov
lock
pop
mov
mov
and
sub
sbb
inc
push
in
push
sub
std
pop
or
pop
out
dec
test
pop
inc
mov
xchg
loopne
pop
ss
lds
jecxz
dec
mov
mov
(bad)
sbb
sub
pop
fs
(bad)
sbb
jno
inc
adc
fdiv
sub
mov
inc
xor
jecxz
ins
out
pop
mov
cmps
repz
imul
push
inc
(bad)
sbb
or
shl
or
(bad)
aaa
in
push
cmp
dec
sub
stc
imul
or
and
xlat
dec
mov
into
cmp
mov
add
xchg
mov
shl
xchg
mov
cmp
repz
stos
mov
cmp
cmps
push
(bad)
movs
and
es
rep
mov
movs
jno
sub
pop
test
lahf
pmulhuw
xor
test
mov
pop
stc
das
xchg
sbb
(bad)
add
in
push
sbb
jae
cmp
pop
ret
mov
jbe
mov
mov
and
int3
dec
adc
out
fdiv
loopne
jecxz
and
(bad)
icebp
shl
xchg
jbe
jo
and
xchg
call
pop
and
pop
iret
dec
jp
pop
xchg
xchg
js
ins
cmp
adc
stos
push
retf
and
push
lea
out
pop
pusha
repz
js
push
pop
loope
pop
sbb
xor
int3
pop
mov
pop
push
xchg
inc
adc
loope
pop
test
mov
push
adc
gs
test
inc
idiv
retf
ret
leave
lahf
jg
push
jno
mov
mov
add
cmp
gs
into
mov
push
pop
js
bound
ins
cmp
cdq
mov
jno
fsub
ret
pop
inc
ins
mov
call
cmps
mov
mov
mov
fwait
dec
in
fs
fld
pop
rol
adc
dec
pop
or
xor
and
xor
cld
xor
arpl
sub
repnz
cli
into
add
retf
jae
ss
int3
and
mov
outs
cmc
stc
inc
dec
stos
retf
jne
or
mov
mov
out
mov
pop
add
cmp
push
popf
test
add
cmp
int3
pushf
pop
mov
adc
sbb
(bad)
loopne
or
gs
sahf
push
add
mov
cmp
mov
aam
adc
pop
jmp
mov
shl
retf
sub
jae
add
mov
jns
xchg
lds
outs
jbe
xor
cwde
loope
stc
in
stc
call
not
cmp
or
or
mov
xor
stc
arpl
mov
xchg
leave
jnp
xor
hlt
dec
call
sahf
mov
mov
jl
leave
push
ficomp
add
cdq
inc
inc
or
mov
jp
enter
mov
sub
cmc
lods
imul
cwde
jmp
sbb
retf
sub
push
call
ss
mov
fnsave
pop
pushf
aas
popa
mov
jno
sbb
push
or
fist
fld
inc
or
test
mov
cmps
arpl
add
in
pop
hlt
cmp
mov
push
mov
jo
jne
cmp
imul
pusha
add
sbb
add
cli
jo
cmc
aas
shr
les
imul
jmp
add
repnz
idiv
mov
push
push
iret
adc
pop
fild
aaa
jnp
jbe
repz
(bad)
hlt
cmp
push
xchg
xchg
test
adc
stos
aaa
cmc
rcl
add
and
sub
push
cwde
sbb
xor
retf
test
(bad)
out
(bad)
in
xchg
jae
xchg
xchg
mov
test
fsubr
hlt
aad
pop
fisttp
mov
lock
inc
cwde
add
rol
pop
cdq
into
dec
out
sbb
stos
fistp
xchg
int3
mov
aad
jg
(bad)
cmps
jl
jecxz
test
not
sahf
adc
xchg
test
or
(bad)
(bad)
aaa
movs
cld
add
in
sub
loope
cmps
call
cmc
ficom
imul
add
lods
call
cmp
adc
js
aam
pop
xor
fstp
jecxz
mov
(bad)
loopne
psubusb
mov
out
adc
(bad)
push
call
push
inc
or
pusha
ficomp
cmp
ret
shl
pop
retf
daa
sub
(bad)
(bad)
aad
push
(bad)
jne
xchg
mov
push
ins
outs
sub
sahf
out
xchg
(bad)
sub
icebp
ficomp
stos
imul
pop
and
loope
pop
out
add
xchg
mov
sbb
pop
xor
fiadd
add
mov
sahf
test
repnz
push
std
out
mov
stos
fsub
bound
adc
jl
pop
repz
enter
mov
mov
push
int
mov
stos
das
mov
bound
shl
sub
in
and
sub
test
mov
cdq
xchg
mov
mov
push
adc
sub
outs
mov
cwde
sti
xor
fstp
arpl
jmp
adc
test
loope
stc
pop
push
out
mov
movs
mov
std
xor
out
cmp
sbb
ds
add
inc
sub
lods
pop
dec
outs
popa
leave
stos
jo
push
mov
cld
sub
mov
retf
out
and
sbb
push
cmp
or
adc
dec
gs
ficom
cdq
xor
test
sahf
in
xchg
xlat
jmp
ds
in
jo
vpaddsb
sbb
pushf
out
push
xchg
ret
loop
stos
add
stos
shr
fidiv
cld
xchg
sub
in
xor
test
jp
mov
movs
lahf
je
sub
cmp
mov
outs
or
imul
push
ret
cmp
mov
push
xchg
loope
cwde
imul
lods
cmp
(bad)
popa
mov
xor
in
xor
xchg
push
std
jbe
xor
push
xor
jp
inc
aaa
jnp
adc
cmps
dec
add
popa
add
dec
pop
hlt
xor
xchg
xor
scas
mov
aaa
xchg
dec
inc
ret
sar
pop
xor
(bad)
jl
xor
out
(bad)
cdq
loope
lods
pop
or
jle
icebp
fstp
jo
or
sti
fwait
add
pushf
inc
adc
ror
loope
sbb
das
test
enter
mov
push
and
es
jnp
mov
stos
neg
mov
lea
sub
xor
cmp
or
in
stc
push
frstor
mov
xor
adc
add
bsr
lods
stos
int
and
ret
vpmovzxbq
mov
push
(bad)
shl
scas
(bad)
jns
jns
pop
sbb
adc
outs
pop
js
jmp
cld
idiv
mov
arpl
jl
pop
cmp
push
test
jno
adc
pusha
stc
jns
les
lahf
xor
fdiv
imul
or
pop
sbb
aam
inc
stc
rol
cmp
outs
cmc
(bad)
(bad)
mov
sbb
xor
jmp
ss
or
xchg
pop
inc
jno
add
mov
xchg
in
dec
xor
pop
add
mov
js
cmp
stc
in
mov
pop
das
dec
mov
adc
lods
sahf
mov
push
aaa
pushf
out
nop
mov
pop
es
(bad)
lods
addr16
xor
pop
xor
adc
loope
push
daa
add
mov
mov
inc
add
ins
outs
adc
pushf
sub
inc
jae
repz
rcr
xor
sbb
fisttp
inc
adc
xchg
and
retf
mov
add
inc
jge
mov
inc
imul
out
outs
aas
sbb
scas
jae
jne
pop
out
sub
or
js
add
jl
stc
push
retf
inc
push
or
push
sub
mov
xchg
loopne
jo
mov
xchg
push
fmul
int
add
pusha
(bad)
jnp
jo
mov
shl
out
mov
lock
dec
sub
adc
(bad)
jb
es
rol
into
aad
call
je
lahf
iret
push
pop
lods
mov
sbb
cmp
out
sahf
mov
movs
add
sub
xor
xchg
icebp
iret
nop
mov
lahf
les
das
(bad)
repnz
xchg
loope
cli
push
cli
popa
xchg
mov
jb
fadd
mov
sbb
sub
cld
jl
and
mov
cld
sbb
sbb
(bad)
and
jne
mov
xor
cli
push
aad
mov
rcr
dec
cwde
mov
add
xor
add
adc
mov
call
inc
test
sub
jno
sahf
pop
jne
or
mov
inc
mov
add
jae
mov
and
xor
out
mov
dec
in
adc
mov
xor
std
retf
(bad)
and
(bad)
ficomp
cmps
jmp
xor
mov
push
lock
mov
sbb
inc
sub
fild
gs
pop
and
icebp
dec
in
out
xor
call
push
push
xor
bound
jmp
es
bound
ja
jg
sbb
pop
jae
leave
and
xchg
adc
mov
xlat
and
(bad)
jmp
pop
ret
pop
dec
mov
or
test
add
call
and
adc
mov
repnz
ins
lahf
mov
adc
push
cmps
movs
dec
jb
mov
push
dec
mov
call
mov
mov
or
scas
fnstcw
pop
inc
dec
ja
xor
ds
cli
sub
aas
sub
fnsave
and
dec
and
loop
rcl
add
test
mov
iret
push
mov
cli
sbb
cmp
push
add
mov
mov
sbb
pop
pop
and
add
fidivr
hlt
fwait
mov
jle
hlt
xchg
jle
xchg
mov
cmps
push
xchg
jo
ror
jns
sub
hlt
jmp
mov
stos
mov
xchg
sub
loope
gs
js
mov
(bad)
(bad)
into
sbb
call
fnstcw
pop
cmp
xor
sub
mov
ss
ficom
cli
mov
pop
sub
mov
cli
pop
and
mov
stos
cli
ss
pop
repz
jne
out
push
pop
ret
jg
xlat
and
aam
dec
out
inc
test
mov
jns
adc
jmp
mov
movs
daa
add
xor
ror
nop
jmp
fldenv
pop
mov
and
mov
pop
fs
dec
pop
les
nop
inc
fwait
in
adc
mov
jns
inc
mov
pop
fmul
sub
mov
mov
sbb
and
add
repnz
fcom
(bad)
retf
push
mov
repz
daa
jmp
hlt
punpckhbw
mov
sbb
dec
ss
je
fs
mov
fdiv
xchg
rep
mov
push
dec
jno
lods
ja
xor
sti
mov
and
adc
stos
jg
in
jbe
pop
movs
xor
aam
jbe
xchg
inc
(bad)
sbb
pop
mov
ds
sub
adc
movs
inc
xor
nop
inc
ins
jle
into
test
xor
fs
inc
out
fisttp
or
cmc
fsubr
sar
or
or
cwde
stos
rcr
mov
iret
cmp
xor
(bad)
out
cmp
movs
loop
adc
test
pop
lock
push
jmp
into
mov
imul
ins
rcr
xchg
sbb
ror
and
ret
sub
popa
adc
daa
inc
mov
sub
xchg
inc
push
and
jno
in
jle
int3
sub
push
(bad)
mov
push
and
mov
nop
inc
cmc
mov
jmp
and
mov
test
push
jge
das
jle
pop
add
gs
cmc
int
mov
cld
xor
aam
sti
jmp
int3
pop
sub
sar
xchg
ret
xor
pop
stc
add
adc
test
dec
mov
(bad)
pop
pop
int3
scas
popa
icebp
sub
shl
and
lds
daa
pop
cmps
or
pop
and
loop
fnsave
sbb
add
mov
and
call
iret
(bad)
push
(bad)
and
pxor
aas
in
pushf
ret
push
addr16
sub
(bad)
in
aaa
imul
pop
adc
jl
xchg
repz
loopne
int3
inc
nop
mov
call
in
cmp
js
xor
test
jmp
stc
mov
cmp
outs
dec
inc
test
imul
xor
add
rcl
push
ss
mov
inc
dec
adc
shl
xchg
pop
addr16
mov
adc
mov
leave
dec
(bad)
cmp
sub
hlt
sub
inc
(bad)
rcr
cmps
std
sbb
lods
clc
inc
add
adc
xlat
xchg
repnz
popa
imul
call
std
pop
mov
(bad)
dec
push
cmp
fdiv
movs
adc
icebp
jb
inc
shl
mov
fidiv
mov
mov
push
sahf
and
inc
push
test
and
push
rcl
and
mov
inc
data16
leave
sub
sbb
xor
jg
jmp
jns
cmps
add
jbe
sub
mov
inc
sub
or
dec
aas
dec
repz
cmp
movs
mov
mov
mov
(bad)
adc
push
dec
pop
ds
cld
(bad)
cmps
(bad)
mov
ror
sbb
aas
std
inc
xchg
jo
adc
out
fimul
mov
inc
xchg
arpl
xchg
popa
scas
mul
add
jp
xchg
jmp
rol
mov
mov
mov
mov
std
movs
stos
(bad)
out
cmp
jle
pop
imul
ins
and
cmps
mov
movs
cdq
stos
dec
mov
or
mov
push
movs
or
fisttp
pop
cmp
jae
xchg
ins
out
shl
cmps
xchg
retf
or
les
rcr
aas
(bad)
movs
imul
inc
in
inc
(bad)
stc
push
(bad)
jo
adc
or
pop
retf
das
ret
pop
(bad)
ss
jmp
out
js
stos
xlat
cmp
out
mov
mov
adc
xor
and
das
nop
ficom
fcmovnbe
sbb
push
jecxz
fadd
leave
stc
jae
das
mov
addr16
ds
pop
hlt
jb
cdq
mov
or
sbb
jmp
ins
push
sbb
pop
sub
cld
mov
out
(bad)
test
call
fiadd
xchg
cld
aam
cmp
mov
adc
loopne
adc
mov
lahf
daa
jnp
ret
xchg
ffree
pop
pop
jmp
repnz
jbe
inc
int
cs
jl
ins
mov
inc
xor
jmp
rcr
ror
cmp
sub
xor
ja
pop
or
and
ins
dec
cmp
daa
xchg
jmp
add
test
xor
xor
sub
(bad)
jns
jge
inc
pop
rcl
add
pop
inc
dec
call
pop
cmps
paddq
aad
int3
pop
cmc
and
sub
call
mov
aaa
leave
fidiv
stos
jo
hlt
xchg
scas
sbb
jnp
xlat
repnz
lds
test
adc
gs
xchg
push
add
sti
cmps
pop
and
popf
dec
sbb
jmp
fxch
int
add
int3
in
mov
mov
mov
aas
test
retf
push
xchg
xor
jb
mov
out
mov
xor
mov
mov
and
pop
dec
adc
call
inc
adc
pop
xor
out
jmp
shr
pop
dec
adc
outs
sub
add
pop
retf
xor
sar
cmp
adc
(bad)
(bad)
push
clc
cwde
sub
xchg
ret
xchg
mov
js
adc
psrad
popf
adc
pop
ins
xlat
(bad)
lds
scas
or
retf
push
ins
adc
(bad)
pop
shl
push
mov
xor
mov
out
add
fwait
sahf
xchg
lods
push
rep
jmp
fcomp
(bad)
xlat
hlt
popf
in
aas
xchg
mov
dec
nop
add
lea
(bad)
fld
mov
daa
adc
stc
sbb
and
and
add
out
sbb
xchg
push
sbb
aaa
pushf
loop
dec
add
ss
test
sbb
cmp
pop
iret
or
jbe
and
mov
pop
mov
xchg
inc
sub
stc
push
or
enter
sub
cmovne
(bad)
js
lods
jbe
mov
pop
mov
jne
clc
inc
cmp
and
mov
outs
xor
nop
int
cwde
add
test
cmp
aad
sub
jmp
mov
sbb
pop
sub
push
push
in
adc
sub
popf
aaa
jns
adc
fisub
dec
out
or
push
inc
cli
das
(bad)
out
fistp
js
(bad)
jge
add
jns
imul
xor
popa
(bad)
or
jb
gs
je
and
lds
scas
cs
fld
sub
fdivr
ds
jge
sub
fnsave
inc
in
xor
sub
mov
scas
test
repnz
nop
(bad)
mov
push
(bad)
cmc
in
xchg
mov
mul
dec
cmp
jno
in
mov
mov
push
push
mov
adc
lods
dec
jmp
mov
mov
mov
adc
outs
pop
adc
sub
ins
inc
inc
shl
mov
inc
jnp
movs
xchg
(bad)
cmps
add
inc
and
aas
push
ror
inc
imul
imul
enter
inc
sbb
or
cs
mov
mov
cmovae
clc
fwait
std
mov
stc
test
leave
mov
mov
mov
jle
inc
push
mov
repz
repz
add
sbb
dec
stc
movs
lods
(bad)
push
scas
push
or
(bad)
stos
push
out
dec
repz
pop
ds
sub
cmp
inc
sbb
push
jae
lea
push
movs
lahf
pop
jl
(bad)
mov
adc
cmp
sub
sbb
mov
ffree
sti
sub
sbb
call
dec
pop
push
sub
test
jmp
push
test
sbb
loopne
leave
sbb
or
xor
(bad)
mov
and
mov
jmp
mov
sbb
jle
xchg
aas
out
stc
mov
in
push
ss
mov
jnp
and
daa
cld
outs
cdq
push
xor
pop
jge
mov
pop
ins
xchg
dec
sahf
sbb
sahf
sub
outs
jmp
iret
xor
movs
retf
icebp
leave
out
inc
lock
scas
jl
stc
fist
xchg
lods
push
dec
data16
sub
cwde
xchg
fld
push
pusha
mov
sub
xchg
bswap
into
lods
fs
iret
iret
in
sbb
rcr
inc
cmps
repnz
sbb
sbb
std
(bad)
shl
adc
call
ins
retf
or
fld
and
push
ss
lds
xchg
sahf
out
aas
repz
pop
pop
sahf
mov
inc
jnp
cmp
pusha
rcl
dec
leave
push
push
out
pop
dec
sbb
jae
mov
and
mov
adc
mov
jo
pop
int3
stos
push
xchg
mov
mov
arpl
dec
cmp
addr16
sub
jbe
arpl
xchg
xor
push
fldenv
inc
xor
or
cwde
fpatan
sbb
dec
es
addr16
push
outs
inc
fwait
cmp
or
xchg
rcr
dec
shl
test
dec
loope
push
inc
xchg
aam
pop
(bad)
xchg
loop
ret
out
cs
jae
ret
push
mov
or
sti
frstor
dec
push
movs
sbb
pop
cmps
xchg
add
nop
push
test
into
mov
stos
cmp
nop
pop
in
or
jo
jmp
repz
lods
inc
mov
retf
pop
repz
adc
and
gs
cmps
retf
fdivr
adc
dec
mov
sbb
sub
sbb
pop
pop
sbb
xor
dec
sbb
jbe
inc
leave
ja
out
push
out
in
pop
dec
(bad)
into
cmp
mov
dec
shr
in
and
push
rol
push
icebp
fimul
aam
fnstcw
test
shr
lea
adc
in
cdq
sbb
cmp
int
mov
pop
mov
and
retf
imul
sbb
xchg
enter
sbb
mov
xor
push
out
iret
fild
dec
jg
push
test
sub
xor
jp
push
inc
xchg
mov
repnz
jl
or
daa
and
(bad)
pop
inc
fdivr
outs
sar
push
pop
mov
push
pop
scas
and
daa
lods
popa
ret
mov
adc
push
stc
jg
dec
dec
push
inc
and
mov
(bad)
daa
add
sub
movs
test
stos
call
test
(bad)
mov
cmp
pop
mov
fwait
mov
test
cmp
imul
mov
(bad)
add
ins
pop
stos
fstp
inc
sub
adc
test
cmp
fadd
xor
ins
mov
xor
jmp
cld
add
aaa
push
lock
jnp
cld
(bad)
int3
call
pop
into
nop
(bad)
rcl
shl
fld
out
out
mov
mov
xor
test
cwde
ds
push
cmp
dec
or
imul
xchg
or
aam
jae
dec
add
call
sbb
mov
arpl
mov
cmp
mov
push
jae
lds
jl
ins
sbb
sbb
inc
cs
mov
ret
ret
xchg
lahf
cwde
out
cwde
call
xor
enter
add
dec
fnstcw
mov
retf
jnp
and
mov
dec
pop
push
sti
jb
push
jle
xor
imul
inc
xchg
or
mov
mov
adc
rcr
daa
int3
dec
icebp
dec
loop
rcl
mov
and
jno
pop
jmp
mov
stos
xchg
xor
in
cmp
and
jno
sub
scas
je
jmp
mov
cdq
ret
cmp
je
push
retf
mov
xlat
repz
and
imul
fisubr
fcomp
cld
adc
aad
outs
jecxz
mov
and
mov
std
or
xchg
mov
jmp
dec
aaa
pusha
fxch
jb
mov
test
mov
imul
mul
adc
cmp
daa
xor
jg
and
mov
jge
adc
push
test
lea
cmp
push
cmp
mov
out
retf
test
push
aas
lock
jo
jmp
mov
adc
dec
es
aas
push
dec
jmp
popa
pop
in
cmp
dec
jle
outs
fistp
mov
retf
sub
shl
or
retf
pop
ins
mov
aam
mov
push
loopne
jecxz
inc
dec
push
and
imul
xchg
xor
cmp
mov
repz
out
mov
inc
mov
xchg
sbb
dec
arpl
cmp
(bad)
sub
mov
shl
push
pop
rcl
sub
imul
fisubr
pushf
arpl
hlt
sub
pop
add
jae
mov
movs
(bad)
or
gs
lock
rol
adc
pop
mov
mov
jmp
xor
vmread
mov
inc
adc
push
xor
leave
mov
(bad)
jmp
jo
adc
js
stc
pop
push
(bad)
icebp
cdq
xchg
sbb
push
push
and
call
xor
cmp
adc
pop
xchg
mov
jg
fwait
xchg
js
mov
cmc
out
sub
adc
sub
and
retf
add
lods
mov
lahf
cwde
add
jge
mov
or
mov
shr
mov
int3
ja
cmp
daa
and
inc
sti
clc
pop
in
jecxz
test
popf
outs
inc
popa
sub
int
cdq
push
and
sahf
xor
jmp
sti
mov
scas
adc
outs
inc
int3
mov
mov
shr
and
loop
mov
ins
popa
xchg
sub
enter
mov
and
mov
mov
adc
std
(bad)
shl
add
fisttp
jae
sub
data16
or
adc
mov
stc
gs
mov
je
and
cdq
pop
(bad)
in
sti
stc
test
and
lahf
pop
mov
fidivr
test
pop
jle
loope
xor
fs
retf
retf
mov
dec
cmp
sub
imul
and
push
imul
lock
(bad)
mov
std
fistp
cld
movs
dec
jmp
sbb
pusha
pop
and
shl
sub
dec
sub
mov
sti
movs
add
nop
test
call
cmp
je
mov
jge
pop
ret
dec
aaa
mov
pop
(bad)
jns
mov
clc
pop
inc
xor
test
mov
xor
pop
inc
lds
popa
xchg
fwait
and
xlat
xchg
add
ret
xchg
leave
or
test
ds
or
test
idiv
in
stos
and
dec
repnz
sti
add
mov
ficomp
add
leave
fdivr
clc
jmp
jle
sbb
test
les
sub
std
(bad)
jp
das
lods
push
test
mov
icebp
lds
ins
fs
mov
cmp
movs
push
clc
fwait
imul
pop
push
ins
mov
sbb
sub
mov
stos
ja
fsubr
paddb
and
mov
ins
bound
cmp
adc
ja
mov
arpl
mov
jo
push
push
jl
in
xchg
outs
popa
iret
je
mov
in
mov
sbb
popa
xor
arpl
and
push
lds
scas
rol
or
add
or
cmp
cmp
mov
cli
ret
in
jecxz
retf
push
pusha
jmp
inc
sahf
fild
and
push
iret
pop
shl
stos
mov
pushf
cmp
inc
adc
cli
push
fmul
out
scas
movs
adc
stos
je
(bad)
fld
mov
inc
jmp
std
int
add
push
inc
ss
cmp
xor
and
movs
mov
adc
mov
stc
ins
out
mov
mov
test
scas
scas
scas
mov
and
test
cmc
pop
stc
popa
push
mov
cmp
xchg
iret
xchg
xchg
out
adc
mov
cld
xor
xor
push
fild
lods
pop
cmc
idiv
push
ss
pop
mov
lock
into
jnp
lods
cmp
into
push
add
aad
jnp
and
outs
fild
and
add
inc
ret
sbb
or
sub
or
jp
push
sub
push
popa
adc
xchg
ret
int3
inc
and
rcl
push
inc
jle
mov
or
(bad)
sub
stos
lods
jge
mov
(bad)
cmp
dec
lea
mov
pop
cmps
push
cmps
xchg
es
setno
test
xor
and
ret
sub
add
cli
sti
aam
sbb
mov
out
push
test
sbb
call
addr16
pop
ss
shl
xor
pop
je
sbb
mov
sub
jmp
jno
xchg
and
cmp
inc
push
sbb
mov
pop
push
push
adc
stos
imul
sbb
movs
mov
push
pushf
sub
pop
xlat
pop
repz
das
lock
push
sbb
mov
jmp
aad
sub
cmps
xchg
jge
sbb
and
pop
mov
cmp
movs
push
xchg
das
sbb
add
retf
popa
jo
xchg
fldenv
cwde
gs
push
ret
inc
mov
ja
cmc
push
jns
pop
pop
sahf
es
mov
ficomp
int3
dec
sbb
inc
cdq
jne
ret
xor
bound
and
mov
cmps
push
jl
adc
jnp
fiadd
loope
retf
and
dec
bnd
sub
adc
xor
pop
cld
movs
ror
pop
mov
xchg
jmp
ins
outs
add
add
dec
xor
mov
pop
fdivp
shl
mov
fidivr
push
or
dec
push
popa
je
dec
add
push
test
jle
rcl
adc
mov
jp
hlt
mov
xor
movs
icebp
sti
mov
icebp
pop
pop
lds
leave
push
lods
ret
mov
std
jg
(bad)
leave
dec
jg
mov
adc
retf
sbb
loopne
data16
cmp
xchg
clc
and
sbb
xor
mov
iret
in
or
lea
dec
inc
or
scas
sub
jl
xchg
mov
cmp
add
xchg
out
adc
xchg
push
ja
addr16
pop
or
inc
mov
mov
jbe
push
dec
inc
xchg
cmp
in
push
dec
jbe
xchg
clc
mov
mov
pop
dec
cmc
(bad)
dec
(bad)
test
inc
dec
outs
push
add
mov
xchg
xchg
(bad)
fldl2e
stos
pop
sub
scas
add
sub
jg
fs
js
addr16
(bad)
cmp
cmc
clc
push
adc
mov
inc
xlat
and
jnp
and
leave
fcos
inc
inc
sbb
pop
test
icebp
or
fsubr
pop
adc
push
and
xchg
fcomp
push
adc
fs
ins
xchg
sbb
inc
ret
and
xchg
adc
mov
sahf
dec
addr16
push
int
xlat
mov
nop
sbb
punpckhbw
cmp
and
push
mov
jmp
in
or
sub
rcr
addr16
test
loopne
imul
or
pusha
push
ja
test
add
pop
lods
mov
loope
adc
sbb
scas
iret
jge
adc
dec
je
call
outs
push
stos
xchg
bnd
and
int3
jge
lock
sub
cmps
das
and
(bad)
mov
adc
mov
fcomp
push
cmp
pusha
sbb
int
jae
push
pushf
cdq
xor
in
lds
(bad)
mov
js
and
shl
in
jmp
fcom
adc
add
fcomp
cmp
cmp
inc
fnsave
imul
or
push
ja
ins
ret
in
jne
push
push
fwait
cs
cmp
or
add
in
(bad)
stos
lock
push
add
adc
or
fild
pop
xchg
dec
aam
(bad)
and
pop
bound
fisub
push
rol
movs
loope
mov
and
lods
enter
dec
add
add
mov
dec
pop
addr16
mov
ret
dec
adc
movs
push
aas
fisttp
cmc
sbb
pop
mov
dec
retf
sub
xchg
sbb
jb
ret
mov
stos
xor
out
gs
test
dec
xor
ins
jmp
adc
sub
test
pop
iret
sub
sahf
jmp
jno
ds
test
cmp
stos
sub
popa
pusha
mov
adc
sub
push
ds
lock
inc
dec
xchg
pop
adc
lods
or
sbb
dec
adc
xchg
jo
and
cld
test
mov
dec
and
outs
mov
fist
repnz
or
bound
test
retf
push
lods
mov
dec
jmp
cmc
int
outs
push
test
and
sbb
sub
scas
pop
inc
nop
fcmovb
mov
ins
mov
inc
sub
mov
add
jge
fmul
mov
jb
ins
je
cwde
push
dec
shl
mov
addr16
adc
adc
shl
int
les
dec
ins
push
inc
dec
adc
push
hlt
xchg
inc
add
sbb
ins
cmp
mov
fistp
(bad)
push
cli
mov
out
pop
loope
mov
cmovb
loop
nop
jecxz
xchg
(bad)
pop
(bad)
clc
mov
jmp
call
ret
cmp
aam
aaa
push
repnz
xor
fbstp
mov
jge
mov
test
jae
jae
push
jo
sub
(bad)
push
jb
bound
sbb
sar
fnsave
inc
or
loope
mov
pop
inc
call
retf
popf
ror
lods
stc
lods
adc
or
scas
dec
cmp
(bad)
loopne
je
sbb
imul
in
mov
lds
mov
add
data16
mov
ins
pop
pop
stos
dec
(bad)
sar
cmp
pop
jns
adc
test
movs
loopne
mov
jmp
cmc
and
dec
mov
sub
std
xor
shl
test
and
sub
xor
sti
fidivr
dec
sbb
(bad)
jmp
pop
(bad)
cli
xchg
in
out
sar
cmp
or
ret
int3
popf
mov
leave
sbb
test
leave
dec
cmp
and
hlt
enter
cmp
mov
xchg
(bad)
fnstcw
jnp
fidivr
inc
pop
add
loop
pop
mov
dec
adc
in
and
cmp
lods
addr16
mov
arpl
and
xchg
xor
or
je
jno
sub
cs
repnz
bound
jae
stc
inc
inc
aas
xor
in
pop
cld
rcl
hlt
cld
pop
shl
push
push
in
pop
test
jl
das
aam
mov
jae
std
cmps
add
call
or
push
mov
les
sub
push
mov
cld
xor
nop
sub
sbb
sbb
cmp
lds
lods
xchg
jno
and
mov
in
hlt
push
cmp
cmps
leave
pop
sysret
mov
fidiv
dec
hlt
fild
test
mov
sbb
dec
mov
popa
pop
je
pop
inc
xor
aas
mov
mov
adc
sub
int3
scas
xchg
gs
rcr
mov
xor
push
mov
and
rcr
in
push
mov
add
add
repnz
pop
call
xchg
ins
sbb
ror
mov
nop
shl
adc
mov
add
inc
dec
sti
icebp
popf
scas
mov
scas
sbb
inc
ins
push
xlat
push
sti
jmp
sti
addr16
sub
ffree
mov
cmc
(bad)
jecxz
mov
movs
in
mov
jmp
adc
mov
sbb
(bad)
popa
not
cld
mov
cwde
pop
aaa
jae
call
jecxz
sbb
lahf
fcmovnbe
dec
add
rcr
push
jnp
pusha
scas
movs
mov
mov
dec
mov
aad
(bad)
push
and
call
or
xor
imul
scas
imul
cli
mov
out
dec
mov
xchg
mov
or
scas
lock
in
sbb
movs
es
push
ror
sub
fcomp
das
lahf
loop
dec
push
loopne
or
fwait
xchg
mov
jp
ins
or
cmp
repnz
retf
jl
sub
stos
aas
das
adc
jae
or
(bad)
ss
xor
out
or
out
pusha
push
xor
aad
mov
stos
mov
push
out
mov
stc
jo
cmp
in
call
aad
jb
clc
xchg
sub
stc
xchg
movs
jb
fcom
pop
mov
cmp
in
icebp
aas
ja
add
xchg
out
mov
or
jmp
iret
jmp
mov
(bad)
retf
das
mov
stc
jmp
sub
sub
into
cmp
mov
popf
adc
and
push
(bad)
cmp
dec
jg
push
sar
xor
into
xchg
xchg
xchg
cmp
mov
(bad)
mov
pop
jnp
mov
jl
xor
jne
inc
test
push
push
xchg
lods
push
je
ror
call
mov
(bad)
xchg
pushf
sbb
xor
out
packssdw
mov
add
jne
dec
mov
lock
popa
inc
rcr
xchg
mov
lods
mov
jmp
fisubr
cmp
or
arpl
xchg
fisub
das
pop
jmp
xchg
sbb
add
(bad)
jecxz
call
arpl
mov
int
xchg
xor
clc
ret
out
nop
cld
jmp
mov
rcl
add
sti
sub
cmp
adc
adc
jbe
push
mov
xor
in
cmp
jmp
sub
test
pop
mov
fimul
adc
repz
loope
outs
xor
inc
pop
add
pusha
xor
pop
(bad)
cmp
ja
rep
outs
mov
sbb
mov
in
inc
fadd
ret
jle
out
adc
xor
es
push
mov
add
sub
aam
pushf
or
jbe
xchg
ror
stos
ret
mov
or
fmul
or
and
or
clc
std
mov
sbb
repnz
lea
push
xchg
inc
sti
arpl
cmp
lahf
inc
pop
mov
nop
push
ja
outs
xor
retf
xor
in
outs
jb
sub
addr16
loope
loopne
lea
push
xchg
xor
stos
mov
(bad)
out
hlt
inc
jne
jg
mov
ins
jb
iret
fcomp
dec
pop
adc
cwde
fdivr
sub
mov
(bad)
fiadd
jae
xor
jns
idiv
xor
add
fbstp
ss
xor
sbb
test
pop
ds
cmp
inc
pop
out
ins
and
and
pop
jmp
fs
cmps
add
into
repnz
jmp
push
mov
push
cmc
cmp
stc
inc
mov
fstp
enter
out
dec
mov
fbld
push
out
mov
cmp
jno
jb
je
loopne
sub
or
add
or
enter
ror
push
retf
jecxz
ja
pop
lods
rcl
mov
or
in
lods
xchg
popa
adc
add
ss
ss
jo
dec
mov
adc
cli
loopne
cmp
mov
mov
mov
and
jno
shl
mov
xchg
cmps
push
stos
std
frstor
jbe
pop
mov
jp
fld
into
dec
aam
sbb
mov
(bad)
lea
pop
retf
sbb
push
fs
ins
mov
and
cmc
or
dec
xor
int
shl
cmp
mov
inc
sbb
ins
dec
add
mov
jl
std
(bad)
cmp
dec
cmps
pop
adc
xor
inc
sub
push
imul
out
(bad)
fbld
push
stc
mov
xchg
jle
jbe
(bad)
xor
mov
mov
jns
mov
mov
xchg
dec
mov
xor
mov
in
(bad)
inc
push
jb
das
jno
dec
mov
gs
and
push
imul
jecxz
sbb
lods
sbb
jge
sar
fdivrp
xchg
pop
add
bswap
fstp
iret
and
mov
fbstp
cmp
mov
(bad)
adc
lock
mov
and
jns
dec
sbb
sbb
dec
mov
popf
cwde
adc
icebp
or
mov
and
repnz
sub
jo
fidiv
int
jmp
loop
pop
push
ret
pop
or
inc
es
cmp
push
bound
mov
lods
adc
or
fbstp
mov
pop
(bad)
pop
dec
(bad)
pushf
ror
lahf
call
dec
inc
inc
mov
mov
ss
mov
in
mov
and
mov
mov
cmp
stos
adc
or
xchg
popf
imul
mov
adc
(bad)
pop
adc
push
aad
test
mov
and
mov
inc
out
ror
inc
push
jnp
lahf
mov
sub
cmp
je
(bad)
clc
(bad)
fs
adc
lods
mov
push
(bad)
ins
aas
movs
inc
in
cdq
mov
imul
push
lea
mov
sbb
adc
pop
adc
dec
js
pop
inc
mov
jns
retf
test
(bad)
inc
adc
fmulp
rol
retf
aam
jmp
cmp
pusha
movs
stc
test
xor
jge
repnz
add
mov
fstp
out
pop
sub
jo
xchg
stos
jb
retf
lods
or
pop
mov
pusha
mov
clc
sbb
cmc
push
fldenv
in
xchg
xchg
mov
adc
test
push
cs
push
(bad)
cmc
aaa
mov
out
lahf
and
mov
adc
imul
cmps
xor
or
lds
loope
add
(bad)
shl
mov
cdq
adc
pop
mov
aas
jns
inc
jmp
adc
loopne
arpl
nop
jle
mov
jnp
jno
xchg
fst
pop
jle
loop
inc
ds
xor
in
jge
jmp
fs
das
test
repnz
dec
mov
out
cmp
(bad)
(bad)
and
sub
cmps
fwait
mov
test
aam
xor
psubw
ja
sbb
fimul
lds
add
xor
popa
clc
inc
mov
mov
mov
out
(bad)
out
shl
cld
mov
shl
push
je
mov
and
arpl
add
xchg
mov
push
inc
pop
push
adc
daa
cdq
clc
into
fwait
enter
add
cmp
mov
adc
lods
jmp
or
or
push
jg
pop
sbb
std
mov
jl
cmp
in
repnz
ret
bnd
mov
mov
aas
xlat
xor
outs
push
cmp
dec
rcr
inc
outs
ins
jmp
inc
jne
push
out
jno
push
jne
xchg
jg
addr16
fimul
arpl
and
pop
pusha
adc
jg
icebp
gs
jg
imul
xor
jno
xchg
out
mov
xchg
pop
in
sbb
test
mov
push
pop
and
add
cli
(bad)
jecxz
pop
out
gs
call
mov
xchg
jge
or
sub
add
add
and
adc
xchg
ds
xchg
and
mov
ss
pusha
clc
dec
(bad)
cmp
add
mov
(bad)
push
les
sti
popa
xor
lods
lods
cmp
sbb
mov
pop
jecxz
in
js
ss
outs
repz
xchg
das
pop
push
gs
sub
in
(bad)
xor
stos
xchg
ss
xor
js
ins
aas
inc
pop
jl
jne
aaa
in
lahf
xchg
push
sbb
dec
out
fist
push
xchg
inc
sahf
rcr
add
scas
shr
jp
and
mov
cmp
xor
sbb
retf
ins
js
rol
sbb
test
inc
mov
sub
sbb
(bad)
mov
xor
inc
jae
cmps
(bad)
mov
xor
lods
movsx
cmps
popa
in
mov
pop
(bad)
mov
test
xchg
es
jg
fcmovbe
mov
fld
sub
mov
mov
dec
into
sub
aaa
jno
push
sbb
xor
xlat
jmp
mov
test
pop
mov
stos
xlat
xchg
jl
retf
retf
xor
(bad)
es
sbb
cmc
out
(bad)
cmps
inc
xchg
add
xchg
cli
cmp
push
xor
fild
xchg
cmc
mov
pusha
in
in
shl
das
and
or
pop
out
lea
repnz
ja
out
aam
mov
jmp
mov
cwde
outs
lahf
(bad)
inc
push
adc
jo
mov
jae
jb
dec
or
stos
(bad)
imul
xchg
cld
iret
xor
mov
pushf
inc
ficomp
cmp
rol
fisubr
cmps
leave
adc
push
push
jmp
repz
fidiv
loopne
test
push
xchg
cld
dec
jno
xor
hlt
pop
and
shl
sub
pushf
out
aam
pop
arpl
pop
add
rol
sbb
mov
dec
fbstp
dec
jg
and
inc
mov
sub
xchg
inc
mov
mov
xor
ret
and
paddsw
jb
(bad)
and
jnp
fisubr
repnz
mov
jmp
sbb
and
pop
cmc
push
add
push
dec
cmps
(bad)
loopne
sub
retf
stc
sub
fcmove
mov
lock
xchg
dec
ja
push
out
dec
shr
add
mov
jmp
cmp
jmp
lds
pop
in
jae
push
xor
xlat
push
cmp
adc
xlat
outs
rcl
retf
mov
lds
xchg
repz
and
jmp
iret
fsubp
or
sar
aaa
in
cmp
or
ds
cwde
mov
fidiv
push
dec
call
inc
xchg
stos
js
repz
jle
sub
add
pushf
aas
fidiv
cmps
jg
fs
ret
lds
push
cdq
cmps
push
ja
add
leave
adc
retf
push
jmp
mov
mov
stc
int3
pusha
das
pop
mov
addr16
data16
mov
xchg
sub
pop
div
loopne
test
dec
lds
and
hlt
xlat
mov
pop
sbb
xor
push
dec
pop
adc
adc
inc
mov
add
adc
xchg
stos
cmp
or
test
int
xor
inc
cwde
and
mov
daa
popa
push
xor
or
xchg
push
add
mov
inc
movs
lods
adc
jl
cld
call
movs
int
sub
xchg
mov
jge
stos
leave
pop
adc
jmp
arpl
pusha
pop
xor
bound
jnp
and
loope
popa
stos
retf
fsubr
inc
mov
mov
adc
ror
jne
stos
push
imul
jnp
ret
cmp
(bad)
in
sahf
adc
call
push
cli
jecxz
out
ja
adc
mov
jo
std
jecxz
add
dec
icebp
pop
lods
sbb
aam
movs
pop
(bad)
and
sahf
fs
jne
mov
popf
fstp
mov
jmp
mov
pusha
pop
pop
leave
mov
icebp
jo
mov
(bad)
mov
ss
repz
mov
add
sub
sbb
sbb
hlt
and
jne
add
add
inc
push
call
ins
push
fwait
mov
out
push
fsub
mov
push
jmp
addr16
xchg
jbe
cmp
repnz
retf
mov
cli
add
dec
dec
push
fidivr
test
pop
out
mov
add
mov
fadd
mov
fucomip
lea
mov
scas
xor
xchg
mov
aam
mov
out
jecxz
outs
out
js
sbb
push
in
call
inc
jb
repnz
ror
in
daa
test
sbb
lea
movs
retf
clc
loop
out
pop
fs
xor
jle
leave
dec
inc
adc
das
or
call
xchg
inc
fs
in
inc
cmp
je
push
push
sub
aas
out
js
cmp
xchg
add
mov
sub
mov
push
and
xor
mov
and
repz
out
mov
fisub
xchg
mov
out
stos
mov
push
xchg
cmpxchg
arpl
or
inc
pop
xor
xchg
retf
sahf
rol
pop
or
jmp
jae
adc
sub
jle
adc
adc
push
push
push
pop
mov
aad
psllw
cmc
and
hlt
movs
jns
ret
jmp
cmps
xor
hlt
cmp
dec
pop
fcom
(bad)
push
stos
inc
stc
push
inc
and
pop
addr16
sub
int3
cmovle
jmp
xor
in
xchg
jl
push
dec
jo
leave
nop
mov
out
push
sbb
int
xchg
(bad)
ret
rcl
push
push
pop
int
cmc
jl
push
ret
cs
gs
into
cmps
jae
int
add
sbb
mov
sar
dec
mov
add
fmul
icebp
fild
(bad)
mov
adc
adc
jb
loopne
stc
cs
mov
and
jns
mov
lods
call
call
push
stc
(bad)
retf
push
pusha
sub
aaa
jns
fild
scas
push
fiadd
mov
mov
aam
mov
(bad)
rcl
jmp
push
add
adc
repnz
mov
imul
sbb
pop
cmp
arpl
xor
clc
jle
mov
xor
cld
cdq
dec
ins
and
cmp
cmp
cmp
adc
fdiv
iret
mov
fistp
loopne
hlt
fidivr
xor
mov
cmp
pop
cmp
jmp
mov
mov
mov
cdq
les
cmp
push
test
xchg
jnp
xchg
ror
add
inc
gs
add
pop
and
(bad)
aam
(bad)
sub
inc
loope
dec
push
jmp
adc
mov
jg
jae
fsub
daa
cdq
lahf
dec
mov
mov
ror
imul
ficom
cli
in
ss
push
mov
rcr
mov
inc
cld
push
mov
mov
cmp
lock
xor
mov
clc
(bad)
js
int3
iret
nop
retf
enter
addr16
cmps
and
popf
xchg
outs
push
mov
inc
call
fwait
stos
add
push
es
ret
popa
xchg
jl
cmp
fisubr
ret
add
mov
cmps
cmps
fstp
(bad)
and
stos
fstp
aad
fldcw
cmp
out
imul
xchg
ret
hlt
push
dec
repz
ins
rol
and
not
mov
mov
ds
ss
pop
js
inc
pop
outs
xchg
(bad)
ucomiss
enter
stos
jmp
or
mov
jae
out
sub
inc
mov
hlt
jecxz
mov
adc
dec
shl
sbb
add
or
xor
es
and
dec
sub
jbe
data16
sbb
xchg
mov
iret
adc
fisttp
jbe
or
sub
push
push
jle
pop
inc
and
jecxz
movs
pop
mov
fisub
jbe
lods
pop
mov
imul
cmp
sbb
xchg
inc
cli
sub
fist
sahf
stc
cld
rol
rcl
popf
xor
push
mov
inc
xor
retf
mov
jno
push
je
and
push
and
pop
pop
pop
mov
jns
(bad)
call
pop
orps
mov
enter
cmp
xchg
xchg
shl
cs
cs
ret
nop
mov
pop
cmp
cld
add
das
sar
or
into
fcom
(bad)
into
in
loopne
push
shl
cmp
inc
mov
adc
inc
in
add
pop
pop
inc
js
cmp
add
push
lods
cmps
cs
push
aad
push
std
movs
cmp
push
xchg
ins
and
jl
and
inc
int
ins
xlat
cmp
imul
add
retf
jmp
xor
repz
inc
movs
mov
add
pop
nop
movs
rcpps
(bad)
fcmovnb
mov
mov
fldcw
mov
sub
fist
fcomip
(bad)
or
jb
or
retf
ret
add
imul
fsubr
outs
(bad)
aad
sti
mov
rol
outs
fdiv
iret
stos
add
mov
(bad)
dec
xchg
and
mov
ds
cs
mov
bound
neg
lods
cli
pusha
xchg
pop
imul
arpl
(bad)
mov
test
repnz
(bad)
cld
js
sub
shr
dec
sbb
fld
std
cmp
inc
es
xor
jns
cmp
daa
push
in
shl
cmp
loopne
sbb
sub
and
xor
add
iret
cmp
imul
popa
mov
out
lahf
aaa
adc
push
sub
adc
cli
out
arpl
xchg
sti
out
div
test
fld
push
rcl
lock
mov
lock
fdiv
lock
mov
and
clc
test
cmp
cwde
or
adc
sbb
cmps
and
jne
push
and
pop
mov
push
ins
arpl
dec
or
sub
xor
mov
mov
dec
test
inc
sbb
lods
daa
les
xor
lea
cmp
fcom
fs
cli
outs
or
and
loope
dec
or
out
pop
sahf
retf
push
pop
jo
sub
mov
iret
(bad)
mov
mov
sub
xor
cmps
or
loop
bound
shl
stos
push
ss
ret
adc
jmp
push
mov
hlt
inc
cmps
mov
sub
mov
aaa
add
pop
sbb
and
out
nop
adc
aas
rcr
sub
sub
or
xchg
out
(bad)
fiadd
repnz
(bad)
sbb
inc
(bad)
cmps
(bad)
scas
pusha
std
shl
pop
add
lock
jg
stc
jnp
loopne
call
fsubr
pop
test
retf
in
lods
xchg
jge
pop
mov
pop
lds
retf
test
imul
loopne
mov
add
sub
push
scas
mov
mov
repnz
pop
enter
fsubp
mov
in
inc
adc
dec
push
aam
pop
lock
xchg
pushf
pop
inc
jl
ret
fistp
cld
loope
cmp
mov
dec
mov
in
xchg
xchg
xchg
xor
mov
pop
ins
lock
div
es
out
xchg
lods
inc
mov
pop
mov
out
(bad)
ds
jbe
(bad)
jmp
xlat
jge
adc
imul
(bad)
loope
add
ins
xor
in
mov
jmp
nop
mov
call
cdq
test
cmp
jns
fs
and
xchg
enter
aam
cwde
idiv
mov
mov
cmp
push
add
sub
inc
mov
jg
sar
mov
xchg
sti
(bad)
into
imul
cdq
push
dec
(bad)
out
sbb
jno
fsubr
adc
mov
das
lea
lahf
bound
int3
call
mov
(bad)
mov
cmc
ret
mov
rcr
int3
shl
lock
pop
cmp
ret
sub
hlt
pop
inc
stos
sub
enter
jge
call
and
outs
mov
movs
imul
cwde
ja
not
inc
bound
rcl
daa
dec
mov
sbb
repz
mov
pushf
pop
pop
lea
aaa
test
pop
jmp
(bad)
and
arpl
cld
jmp
daa
xchg
lahf
sub
lock
int
lods
std
push
push
jmp
adc
or
pop
cmp
test
pop
mov
adc
jp
outs
popa
arpl
jbe
or
out
retf
enter
jno
sub
cmps
cmp
adc
sbb
inc
dec
cdq
mov
cwde
sbb
(bad)
push
scas
dec
jle
jp
cld
cmp
dec
or
rcl
ja
pop
fimul
inc
leave
outs
dec
jmp
mov
es
jbe
addr16
inc
mov
push
sbb
aaa
push
jo
push
inc
xor
pusha
lock
mov
ret
adc
call
mov
jmp
push
imul
retf
mov
jbe
das
aaa
jmp
jne
stos
loop
cmp
js
leave
xchg
add
mov
fs
scas
addr16
pushf
pop
out
ins
sar
cld
mov
adc
stos
cs
inc
inc
dec
jl
sub
inc
cmps
adc
dec
xchg
aaa
ret
arpl
cdq
cs
in
add
ror
or
in
add
fdivr
sbb
adc
jno
pop
sub
bound
mov
or
enter
lahf
pop
and
icebp
inc
sbb
out
ret
dec
xchg
test
retf
mov
jo
outs
mov
mov
sub
and
mov
xchg
mov
ins
(bad)
fist
xchg
ins
mov
dec
arpl
scas
sbb
inc
pushf
mov
push
sub
in
sbb
jl
mov
pop
outs
rcl
ss
data16
or
mov
scas
add
mov
ret
rcr
pop
lock
fwait
pop
dec
ins
dec
call
retf
test
push
or
stos
fstp
adc
fld
dec
int3
jmp
ins
or
or
aam
inc
push
cmp
fcomp
xchg
or
scas
inc
mov
cmp
push
aam
fnstsw
jg
aas
js
xlat
aad
push
adc
xchg
adc
gs
xor
xchg
outs
int3
(bad)
in
leave
xlat
jb
sub
cmps
fs
neg
mov
in
pusha
popa
mov
xchg
sub
idiv
ins
loop
inc
mov
ss
scas
mov
and
sahf
popa
cwde
adc
outs
es
in
cld
xchg
(bad)
ja
jmp
std
rol
inc
inc
inc
or
inc
enter
(bad)
arpl
add
jecxz
jnp
dec
sub
test
mov
rol
mov
dec
in
popf
mov
mov
or
and
mov
cli
inc
push
ret
push
sub
imul
and
movs
add
mov
pushf
out
dec
mov
sbb
mov
ss
push
cmp
xchg
movs
ficom
pop
pop
pusha
mov
cmp
cmp
aad
cmp
and
rcr
adc
pop
movs
imul
cmp
les
jp
add
or
sbb
sub
push
adc
ins
push
popa
mov
dec
outs
inc
push
adc
inc
ret
es
add
fld
std
pop
cmp
nop
adc
rol
stos
les
mov
mov
leave
fld
sub
pop
(bad)
shr
sub
jmp
push
jne
mov
pop
dec
sub
mov
ja
mov
push
cmps
in
shl
fidiv
idiv
ret
push
mov
test
ret
sbb
push
js
jmp
cmc
movs
ins
jmp
mov
in
in
dec
mov
mov
cmc
retf
cmp
add
adc
jg
inc
and
push
sar
jne
adc
sbb
mov
dec
sahf
and
pop
and
mov
(bad)
xor
(bad)
jp
inc
and
jnp
mov
clc
jge
in
repz
cmp
sbb
iret
dec
adc
xor
mov
and
test
xor
pop
ja
cs
or
cdq
test
ds
mov
pop
sub
xor
xchg
mov
dec
(bad)
ja
pop
in
sub
sub
mov
mov
xchg
iret
cmp
sbb
xchg
xlat
cmp
stos
jns
pop
psubsw
imul
mov
push
je
int
pop
mov
dec
sub
cmc
adc
pop
xor
add
jmp
pop
jns
mov
icebp
mov
cwde
fidivr
mov
xchg
test
mov
bound
sbb
popf
mov
jne
jns
retf
adc
push
mov
cmps
inc
mov
popf
cmp
test
mov
and
jnp
jbe
pop
mov
adc
or
mov
push
ja
iret
adc
nop
cmp
mov
sub
sbb
icebp
loope
(bad)
push
outs
push
pusha
std
jmp
aas
sbb
adc
icebp
sbb
dec
imul
scas
stc
mov
stos
and
add
lods
inc
fadd
or
push
(bad)
adc
inc
sub
xchg
inc
jecxz
ins
(bad)
cdq
ret
push
ds
fcomp
pop
and
sahf
pop
add
retf
aas
push
mov
add
jecxz
dec
pop
jo
xor
retf
(bad)
jg
mov
popf
popa
sbb
cmp
inc
inc
pop
mov
ds
or
in
addr16
xor
xchg
sti
test
mov
je
xchg
dec
add
ins
stc
lock
jl
out
dec
sub
inc
pop
fsubr
stc
int
jmp
fst
aam
xor
push
push
dec
adc
cmpps
dec
push
and
pop
xlat
sbb
cmp
pop
fs
iret
adc
in
js
das
cmc
add
cld
je
cs
in
add
fisubr
rcl
add
xchg
(bad)
cli
es
mov
jns
sub
cmp
sbb
push
fcomp
into
xchg
repnz
cmps
aaa
addr16
loop
leave
cmps
(bad)
lods
push
out
sbb
icebp
jecxz
(bad)
bound
mov
or
xchg
or
dec
shl
cmps
or
repz
fmul
mul
jnp
add
mov
dec
mov
fnsave
cli
scas
fimul
mov
sub
and
xor
repz
jno
mov
add
fcomp
leave
sbb
ret
mov
push
jno
inc
jmp
arpl
lods
mov
fwait
pop
icebp
outs
cdq
push
or
movs
add
in
add
ror
mov
inc
loope
pop
sahf
stos
push
pop
mov
iret
jbe
arpl
and
and
ss
pop
inc
or
imul
outs
addr16
cmp
or
add
addr16
cmp
enter
movs
ds
inc
test
pop
setae
rcl
inc
pop
or
fs
test
mov
loop
jmp
test
inc
mov
shl
push
mov
mov
loope
(bad)
out
jnp
sbb
dec
je
cmp
inc
sbb
mov
mov
retf
lds
clc
sbb
movs
push
sbb
push
loopne
mov
mov
sbb
sub
dec
mov
push
sbb
sub
cmp
int
xor
popa
shl
dec
mov
movs
sub
mov
dec
mov
jecxz
mov
(bad)
push
test
inc
mov
mov
(bad)
in
sti
in
jo
sets
ficom
sbb
movs
xchg
iret
jbe
mov
add
or
stos
pop
cwde
inc
mov
jo
xchg
add
imul
loop
mov
into
or
inc
pusha
test
lahf
adc
jecxz
mov
in
pop
sub
pop
jbe
jmp
cli
mov
scas
mov
(bad)
fisttp
dec
call
pop
(bad)
mov
xchg
fsubr
je
push
push
xchg
xor
xchg
inc
or
sub
mov
pusha
sbb
mov
test
mov
das
cmps
das
fnstenv
jb
into
inc
mov
jmp
popf
jb
addr16
out
adc
iret
cld
dec
test
movs
mov
dec
retf
test
add
sar
rol
mov
clc
mov
xor
mov
jg
pop
and
add
sbb
std
sar
push
jmp
push
mov
mov
pusha
div
jae
fwait
popf
jge
dec
repnz
push
shr
neg
mov
xchg
clc
in
ja
mov
add
pushf
enter
imul
jmp
test
inc
aaa
outs
pop
std
repz
movs
pop
mov
xlat
fstp
mov
pop
cmp
daa
int3
adc
mov
jnp
push
cmp
into
call
mov
sbb
cmp
push
xor
in
and
mov
inc
out
test
sbb
xor
adc
leave
ins
sub
into
pop
sub
or
fldcw
mov
add
adc
cmp
or
adc
(bad)
hlt
arpl
adc
adc
and
rcl
adc
sbb
and
pop
in
inc
shr
pop
cmp
mov
enter
mov
call
movs
out
and
in
call
fdiv
inc
adc
lods
mov
push
xor
popf
pop
cmp
std
xchg
mov
jns
cwde
cwde
inc
or
scas
stos
fwait
test
into
retf
repz
call
push
mov
cmps
and
jmp
popf
mov
jmp
ret
imul
and
cld
test
(bad)
cld
mov
add
adc
pusha
dec
dec
lock
mov
popf
push
or
xchg
mov
cs
lock
pmaxsw
add
add
loop
stos
push
fwait
push
xchg
out
aam
jmp
(bad)
fcmovbe
mov
call
out
icebp
sti
(bad)
repnz
add
mov
loopne
mov
pusha
int
lea
xchg
das
(bad)
enter
mov
mov
pop
jb
test
cwde
dec
sbb
xchg
aas
mov
in
loopne
inc
test
add
and
jbe
sbb
xor
and
xor
movs
cmp
cmp
movs
cmp
ja
push
dec
add
mov
cmps
pop
dec
aaa
sub
jp
push
imul
lock
call
and
or
mov
nop
mov
sub
bound
push
inc
adc
mov
cmp
xchg
adc
mov
add
adc
dec
gs
or
pop
add
or
ins
arpl
clc
add
add
scas
out
jecxz
ins
mov
inc
pop
mov
add
pop
cmp
cmp
xor
xor
js
in
adc
in
rcr
xchg
inc
xchg
push
xor
pop
mov
call
push
mov
test
les
js
sbb
jmp
cmps
push
mov
scas
inc
aam
loope
mov
push
jecxz
nop
inc
icebp
sbb
les
mov
dec
scas
or
push
dec
out
cmp
add
and
bound
test
in
push
xchg
mov
adc
mov
fwait
ror
les
cmp
push
gs
inc
sbb
xor
xchg
les
shl
adc
sub
push
add
das
jne
lahf
add
dec
adc
jle
shl
inc
je
jno
mov
or
xor
dec
push
je
jno
add
cmp
div
jp
leave
jne
or
mov
aaa
stos
push
mov
sbb
lods
cs
lahf
push
mov
add
ror
inc
mov
stc
mov
xor
lock
repz
aas
sbb
jae
mov
leave
mov
adc
jle
jno
or
mov
adc
pusha
pop
fld
das
sbb
push
aaa
fldenv
add
push
and
mov
cmp
stos
jns
pushf
xchg
mov
inc
pop
mov
cwde
xchg
xchg
mov
mov
js
sub
fbstp
fisub
sbb
adc
fdiv
mov
les
fsubr
adc
jmp
shr
mov
out
std
xor
fsubr
imul
adc
sbb
xor
ficom
int3
mov
stc
shl
mov
adc
jmp
(bad)
sub
ret
and
test
push
div
test
ror
mov
push
repnz
cwde
mov
inc
mov
stos
je
jnp
scas
fistp
fsubr
mov
clc
mov
cdq
js
pop
std
mov
ja
mov
les
and
add
cmp
add
adc
mov
xchg
shl
clc
pop
jbe
stos
cwde
or
ss
cmp
add
xchg
js
aaa
push
mov
in
mov
or
mov
mov
push
ret
pop
bound
(bad)
hlt
adc
call
pop
xor
out
mov
jo
adc
ss
xor
int3
in
sub
inc
enter
cmp
jl
jmp
arpl
das
mov
outs
jmp
sbb
(bad)
cdq
jne
jp
push
pop
fs
dec
sar
rol
mov
int
inc
xchg
es
mov
adc
mov
(bad)
pop
mov
mov
sbb
stos
in
mov
shl
xor
test
or
lahf
add
cmp
clc
push
pop
push
sbb
out
imul
jnp
lods
mov
pop
(bad)
out
leave
dec
fwait
jno
pop
(bad)
cmp
inc
push
(bad)
sbb
test
sahf
pushf
xchg
add
xor
pushf
jmp
push
and
sbb
and
inc
pop
lea
imul
(bad)
jecxz
stos
or
xlat
in
push
mov
mov
push
shl
lahf
gs
inc
or
jg
inc
outs
adc
test
inc
jb
xchg
loope
mov
mov
lds
jbe
lods
mov
jecxz
and
mov
repz
test
retf
iret
add
cmps
jp
jno
(bad)
aam
xor
xor
call
(bad)
pop
js
and
ja
jae
mov
pop
xor
sbb
cli
aad
out
pop
xor
test
hlt
mov
in
retf
(bad)
mov
or
mov
call
in
xchg
cmp
ja
pushf
adc
mov
inc
ins
inc
das
mov
pop
pop
and
xchg
loop
aas
xchg
push
test
cmp
inc
pusha
push
jo
ret
movs
mov
push
jnp
loopne
mov
lock
jmp
sub
pushf
jo
inc
jae
and
mov
imul
sbb
and
mov
adc
and
ss
dec
jb
sahf
cwde
dec
pop
mov
inc
clc
in
push
push
in
inc
test
inc
cmp
(bad)
shl
and
sub
push
xchg
loopne
cmp
sbb
sbb
stos
dec
in
mov
add
in
aaa
cdq
adc
aam
mov
pop
fs
scas
inc
sbb
xor
xor
push
adc
(bad)
bnd
jb
adc
stos
inc
and
sub
test
out
cmc
xchg
and
pop
lock
js
in
add
outs
(bad)
imul
mov
(bad)
rol
inc
inc
mov
or
fwait
or
fwait
out
pusha
jmp
mov
repnz
cmps
ret
out
sar
and
and
xchg
mov
cmc
pop
mov
out
pop
inc
push
(bad)
sti
xor
repnz
stc
dec
jae
sahf
out
mov
push
sbb
cmp
cmp
jecxz
xchg
jmp
sbb
cs
adc
dec
inc
test
dec
inc
or
push
iret
xchg
scas
adc
movs
js
sub
je
sub
sti
aam
pop
mov
xchg
int
xchg
xchg
popf
inc
loopne
and
ret
dec
sbb
and
hlt
fs
ja
(bad)
out
bound
call
jb
lods
loopne
lds
push
push
repz
cmp
mov
lds
daa
sbb
mov
dec
fisttp
mov
jl
pop
(bad)
ret
popf
xor
arpl
ds
bound
cmp
mov
xor
fmulp
push
hlt
and
mov
and
jnp
push
xchg
inc
leave
shl
sbb
mov
jne
(bad)
nop
aaa
cmps
cdq
ficom
cli
lock
(bad)
jb
push
xchg
jbe
test
xchg
lods
adc
adc
jmp
xchg
fs
mov
cld
cmp
pop
call
rcl
sub
and
(bad)
into
mov
mov
sbb
ror
loopne
call
cmp
test
lods
or
aas
lods
jae
imul
jae
ja
push
add
cmp
ins
aas
lea
bound
mov
icebp
int3
test
rcr
cs
add
xor
pushf
paddusb
fldz
fcomp
test
sbb
mov
push
inc
fs
mov
icebp
pop
jl
and
sub
inc
add
jle
xchg
lea
ins
daa
rol
inc
mov
ret
push
push
jo
cmp
push
pop
ror
inc
mov
rcl
xor
jae
call
jo
bound
loope
lock
test
test
push
push
ins
sbb
loopne
loope
jmp
sti
xlat
jmp
das
and
loopne
push
and
ret
mov
xor
pop
ja
and
in
hlt
sub
lods
addr16
and
lods
nop
idiv
fsubr
fwait
out
jg
mov
(bad)
pop
jb
aas
cmp
sbb
loopne
jl
hlt
shr
xor
adc
push
push
sub
ds
jmp
fistp
push
jge
push
and
mov
mov
lods
fisub
mov
mov
jle
cld
lock
and
push
pop
bound
in
in
and
addr16
sbb
push
xchg
pushf
push
dec
jl
shr
(bad)
retf
mov
stos
outs
lahf
sbb
outs
adc
popf
and
mov
mov
int
icebp
gs
cs
int
sub
loope
mov
loopne
sub
into
cmp
mov
stos
push
sub
or
pushf
int
mov
adc
or
nop
mov
push
push
adc
arpl
pop
or
pushf
push
dec
ror
ret
sti
fmul
sub
xchg
out
addr16
pop
inc
sub
sbb
pop
xor
xor
mov
addr16
out
stc
sti
adc
enter
sub
sub
and
movs
jl
scas
loop
rcl
addr16
les
ret
mov
arpl
js
enter
cmp
or
retf
inc
(bad)
out
inc
mov
in
mov
ret
xchg
imul
or
fmul
push
jge
mov
xor
mov
pop
aam
xchg
mov
shl
fnstsw
pushf
mov
std
mov
sub
mov
pop
jmp
jns
add
into
in
ins
fadd
setge
mov
sti
not
and
jne
xchg
dec
mov
aas
stc
rol
leave
cmps
adc
jge
cmc
and
xchg
gs
lahf
std
or
bound
xchg
sar
aad
mov
push
idiv
dec
fcmove
adc
dec
je
push
push
mov
adc
sbb
inc
or
das
mov
call
data16
pop
lods
and
imul
or
jg
inc
lea
pop
mov
cs
cmp
mov
imul
out
fisttp
and
ja
loop
sub
out
jge
mov
adc
adc
xor
xor
test
mov
jno
add
cmc
(bad)
cmc
rcr
outs
aaa
jmp
fadd
push
retf
mov
sbb
sbb
add
mov
pop
sub
inc
shl
inc
sub
pushf
rcr
aas
push
int
dec
adc
xor
(bad)
stos
pop
and
test
into
and
lock
sbb
push
stc
test
mov
jl
pop
(bad)
repnz
cwde
add
clc
(bad)
in
ffree
mov
cwde
push
leave
adc
xchg
pop
js
sbb
dec
cmp
mov
cmp
loopne
mov
into
mov
leave
add
pop
and
push
add
or
pop
mov
add
jbe
in
cmps
xor
jg
(bad)
scas
mov
cmps
jge
add
dec
dec
pop
fadd
dec
shl
iret
sbb
inc
inc
ret
neg
loopne
or
out
pushf
or
aam
jmp
fs
cmps
mov
popa
sub
dec
add
sub
ficomp
stos
push
adc
mov
xor
xchg
(bad)
sahf
jmp
ja
cmc
mov
adc
xchg
fs
xchg
das
pop
mov
pop
sahf
dec
outs
pop
sahf
popa
retf
cmp
mov
addr16
mov
pop
shl
cmc
add
aas
jne
(bad)
test
nop
ja
cmp
in
or
sahf
inc
dec
out
arpl
je
test
(bad)
push
add
loopne
movs
ret
push
fnstsw
xchg
adc
sbb
inc
xchg
scas
mov
adc
sbb
repnz
xor
(bad)
jmp
xor
and
add
jp
fnstcw
imul
adc
fs
dec
or
aas
lock
fsubr
cld
jns
ficomp
add
mov
cmps
xor
std
scas
jbe
es
loopne
inc
pop
div
mov
dec
lods
sar
sar
lods
sti
scas
stos
scas
fimul
aam
mov
adc
jecxz
inc
in
hlt
test
aaa
pop
xlat
scas
test
in
sahf
jmp
(bad)
jl
push
lods
fucomp
mov
or
push
mov
sbb
xor
ficom
add
fs
mov
lahf
jmp
pop
repz
fmul
xor
pop
jne
sbb
ret
retf
push
out
out
pop
data16
push
or
lods
sub
in
mov
into
sti
cmc
xchg
sub
ins
dec
fwait
(bad)
push
fwait
push
rcr
push
popa
stos
dec
push
push
es
out
clc
fdiv
int3
es
daa
sbb
mov
das
loop
in
out
push
jnp
or
sbb
pushf
fnstsw
mov
cdq
xlat
mov
rol
cmc
jno
mov
nop
mov
cmp
cli
push
bound
adc
push
inc
call
retf
jp
inc
ror
lock
sbb
mov
add
mov
bound
das
pop
cli
mov
xor
mov
jb
inc
cmc
xor
movs
add
test
jo
mov
adc
mov
mov
mov
js
jns
int3
imul
cmps
mov
jo
cmps
mov
push
xor
mov
jno
mov
jne
jb
test
pushw
int
cmp
mov
sub
pop
cmp
gs
icebp
add
cmp
(bad)
in
fwait
cmp
push
retf
out
imul
hlt
(bad)
xor
mov
inc
xchg
xor
in
mov
outs
jne
dec
daa
or
inc
sub
test
(bad)
neg
icebp
or
pop
mov
push
test
ror
adc
xchg
mov
add
ds
mov
aaa
sti
arpl
pop
loop
pop
sub
sbb
add
inc
ret
data16
or
retf
test
adc
les
ficom
jae
bound
ja
test
adc
sbb
dec
or
out
mov
dec
add
mov
in
dec
ins
and
and
dec
je
mov
or
push
mov
stos
dec
scas
mov
and
mov
mov
ret
in
dec
repz
retf
xchg
or
rcr
mov
jl
cmc
aaa
xchg
cmp
aad
enter
push
jmp
push
cdq
pop
push
arpl
mov
or
dec
lock
cli
push
dec
lds
test
pop
retf
arpl
lea
pop
aas
popa
dec
sub
and
fstp
adc
cwde
outs
cs
scas
aaa
fst
cmps
movs
fisttp
sbb
xchg
xor
mov
jae
jmp
mov
cdq
mov
sbb
jecxz
dec
movs
cwde
adc
adc
xor
nop
jge
out
xchg
xchg
rol
mov
inc
inc
out
sbb
ret
cs
mov
(bad)
jmp
xchg
ret
xchg
les
inc
call
shl
leave
mov
sar
scas
fmul
movs
stos
dec
mov
or
mov
mov
or
jg
repz
sbb
and
sbb
dec
(bad)
int3
xor
pop
cmp
gs
inc
test
hlt
shl
aam
gs
add
mov
fidivr
mov
inc
jno
cmp
push
push
sahf
adc
add
xlat
pop
(bad)
out
dec
inc
stos
loop
xor
(bad)
xor
sub
fiadd
call
push
xor
ds
inc
ret
retf
xor
jp
xchg
cmp
js
jae
in
(bad)
dec
test
pop
gs
sub
iret
sti
cmp
retf
cs
shl
lods
aam
call
(bad)
shl
imul
xor
hlt
ja
push
gs
inc
pop
out
push
or
adc
cdq
jns
shl
xchg
pushf
test
jecxz
mov
jo
xchg
adc
imul
pop
mov
cli
adc
or
sub
mov
cmp
mov
mov
movs
ja
adc
les
cmps
mov
outs
mov
mov
mov
popf
test
dec
cmp
mov
add
mov
dec
mov
sub
les
dec
xchg
jno
sbb
in
push
jb
pop
scas
mov
jl
push
ja
shl
push
fdiv
jmp
dec
add
out
in
leave
std
sbb
xchg
mov
xchg
int3
fucomi
xor
je
add
scas
sbb
sbb
xor
add
(bad)
mov
xchg
mov
adc
mov
mov
dec
movs
ss
(bad)
ret
fnsave
pop
daa
and
push
retf
fild
jp
hlt
pop
stc
out
or
leave
pop
dec
inc
mov
pop
scas
call
fbstp
(bad)
cmp
(bad)
jg
lahf
jle
(bad)
sbb
jecxz
rol
and
leave
aaa
pop
and
sbb
push
popa
xor
test
aad
cmp
int
dec
popf
pushf
cmp
jecxz
pusha
jmp
xlat
xchg
dec
sbb
in
nop
jnp
add
jmp
es
iret
inc
xor
iret
in
or
ret
test
pop
add
in
movs
pop
int3
cmp
cmp
adc
sub
loopne
fcomp
cmp
mov
jnp
jle
adc
xor
int3
pop
inc
in
add
fnstcw
xchg
stos
in
jle
cmps
xchg
pop
hlt
(bad)
cmp
jo
adc
repnz
mov
xor
fs
call
call
cmps
mov
cmp
sub
das
jo
or
pop
neg
pop
inc
dec
sbb
jae
inc
out
lds
mov
xchg
das
shl
sub
aas
pop
stos
repz
cmp
jnp
in
out
push
cmp
std
and
lods
sbb
pop
xor
pop
aam
movs
mov
int3
addr16
cwde
lahf
inc
jg
xor
push
sub
mov
jmp
lods
xchg
(bad)
adc
dec
jbe
jmp
push
mov
sub
lahf
mov
out
lods
movs
and
(bad)
jnp
int
sub
jge
xchg
(bad)
push
jle
call
mov
pop
(bad)
pop
cmp
in
retf
jbe
mov
lock
out
fiadd
jnp
and
add
pop
popf
xlat
sub
ins
add
xchg
push
in
sub
(bad)
mov
mov
out
inc
ins
push
xor
xchg
in
icebp
fisttp
push
push
(bad)
jae
and
cmp
int3
pop
and
adc
es
jmp
mov
outs
cld
repnz
ins
push
ror
cmp
sbb
jl
add
xor
out
scas
dec
inc
inc
neg
sub
cmps
pop
jns
push
sbb
xchg
scas
jae
popa
ins
shl
pushf
inc
cdq
pop
xor
xchg
mov
imul
mov
cmps
inc
dec
adc
imul
jle
mov
mov
test
sbb
lock
push
push
shl
xor
std
in
stc
dec
das
int3
mov
dec
jl
stc
inc
pusha
sub
cmp
dec
xor
imul
pop
outs
mov
mov
mov
sahf
int3
dec
int3
mov
imul
cwde
xchg
out
mov
fs
add
cmps
in
(bad)
sub
jno
dec
ja
lods
jl
dec
test
sbb
pop
das
(bad)
mov
xor
iret
(bad)
not
fimul
aad
lods
fisub
nop
(bad)
jmp
pop
enter
scas
and
(bad)
pusha
add
adc
test
or
sahf
mov
inc
cmp
push
jno
cmp
mov
and
mov
lods
fldenv
mov
push
outs
mov
mov
cmps
xor
ret
xchg
es
fwait
mov
pop
nop
sub
jb
(bad)
mov
out
cdq
rcr
cmp
out
jae
xchg
lock
out
xchg
adc
add
or
loopne
jecxz
mov
push
jecxz
das
int
jns
add
cmp
in
inc
js
xchg
(bad)
dec
or
ins
test
in
cmp
ins
inc
ror
aas
cmp
mov
fcomp
out
iret
adc
sub
cmp
out
ins
mov
dec
xor
shl
pop
push
aaa
not
add
pop
retf
mov
aad
mov
call
mov
sbb
xchg
test
in
add
dec
push
iret
lds
lds
mov
lock
pop
or
mov
and
fs
xchg
cwde
fcomp
mov
pusha
mov
push
(bad)
mov
popa
fbld
push
jp
adc
dec
and
cmps
adc
xchg
popf
int3
xor
(bad)
out
jecxz
dec
in
mov
mov
jb
das
loopne
test
or
cwde
xchg
or
in
or
std
and
fwait
shr
cmp
mov
and
pusha
das
and
pop
jmp
sbb
add
xor
xchg
adc
sub
xor
jno
mov
rcl
pop
push
push
mov
mov
xchg
das
push
push
(bad)
and
push
jne
dec
(bad)
outs
adc
jo
idiv
mov
lods
fs
int3
push
hlt
movs
sub
test
inc
adc
mov
loope
xchg
or
cdq
movs
mov
push
nop
popf
je
dec
push
mov
int
mov
mov
add
(bad)
mov
dec
aas
retf
dec
push
sub
mov
cmp
fcomi
or
xor
pop
jmp
(bad)
sbb
mov
cld
xchg
inc
pop
cli
sub
pop
jge
and
adc
mov
mov
jne
outs
cdq
cdq
or
jbe
(bad)
add
sar
lds
inc
dec
sbb
jl
jecxz
sub
and
test
aas
pushf
std
out
cld
sub
mov
xchg
jl
cmp
ja
or
fdiv
xchg
adc
nop
int3
fwait
retf
bound
(bad)
lods
push
stc
add
xchg
xchg
retf
mov
mov
adc
add
sub
movs
mov
mov
gs
fs
aas
adc
inc
idiv
test
sbb
jmp
inc
push
ss
(bad)
cmc
aas
sbb
pushf
stos
shl
jb
nop
sar
push
push
jge
push
jge
popa
add
(bad)
rcr
mov
pop
sbb
imul
sbb
sbb
std
jns
push
dec
test
mov
xchg
imul
mov
add
ror
cli
and
pop
xor
or
pop
xchg
ret
jne
dec
movs
fsub
sahf
ins
fs
dec
add
mov
push
adc
inc
(bad)
pop
adc
faddp
cmp
push
xor
pop
mov
xchg
addr16
test
mov
cmc
jbe
jbe
push
xor
std
out
push
jp
xcrypt-ecb
cmps
leave
test
js
dec
push
push
xor
pop
daa
lea
inc
sbb
pop
ret
fist
scas
scas
mov
adc
pop
push
sbb
pusha
cli
cmp
sahf
push
jo
dec
or
(bad)
in
pop
test
bound
jbe
xchg
sub
pop
jge
(bad)
cmp
ins
popf
jle
and
(bad)
frstor
jmp
mov
nop
jmp
loop
nop
dec
(bad)
stc
(bad)
jg
fadd
ror
pop
scas
in
scas
add
test
loop
daa
test
std
adc
stos
jp
leave
sbb
cmp
pop
imul
or
movs
inc
xchg
mov
retf
adc
push
mov
test
inc
cmp
cmp
jmp
sub
fidivr
leave
add
adc
push
mov
mov
mov
jmp
arpl
fbstp
or
(bad)
push
lods
jb
lds
pop
rcr
stc
test
cmp
daa
pop
mov
dec
and
int3
pushf
movs
xchg
pop
mov
inc
jnp
fnstcw
ret
test
dec
jle
test
shl
push
push
adc
jbe
adc
lds
ds
fdiv
repz
(bad)
fnstcw
js
jns
(bad)
sbb
dec
and
scas
sub
pop
aad
cmp
xchg
mov
and
jo
mov
and
jno
dec
call
or
fldenv
js
add
mov
and
push
mov
pop
and
ins
repz
jne
ret
aad
cmp
scas
neg
aam
xchg
ds
retf
je
in
pop
jbe
add
push
sbb
retf
mov
add
sbb
and
xlat
dec
push
adc
xchg
mov
int
sbb
icebp
mov
iret
test
sub
jo
out
es
les
ins
mov
retf
lds
mov
fwait
inc
adc
stc
xchg
xor
cmp
sti
jmp
sahf
xlat
aam
xor
mov
pop
inc
mov
jno
lock
mov
pusha
mov
aas
xor
push
pop
xor
fisubr
ja
fisttp
mov
in
add
inc
inc
fwait
sar
fisttp
jg
or
xchg
sbb
pop
stos
xlat
je
cmp
fisubr
in
shl
loopne
mov
sub
enter
xor
xor
jle
jecxz
fisubr
fstp
fistp
jmp
movs
inc
cmp
pop
xor
ins
xchg
xor
int3
imul
in
shl
in
lds
mov
push
or
pop
adc
pusha
dec
or
(bad)
fisubr
or
repz
sub
mov
xchg
out
daa
rcl
stos
mov
das
xor
repz
or
loop
repnz
iret
and
int3
movs
mov
jmp
icebp
rol
repnz
rol
jbe
cld
pushf
mov
mov
jb
iret
aaa
les
fisttp
test
mov
adc
nop
adc
out
clc
xchg
add
push
aad
aaa
jne
fdivr
push
scas
xor
mov
or
popf
(bad)
out
xlat
popf
test
outs
aad
or
jbe
adc
sub
popf
movs
test
sbb
cmp
test
in
or
leave
gs
xchg
inc
jecxz
mov
mov
jae
lods
stc
arpl
mov
in
gs
sar
imul
loope
stos
mov
call
cmc
das
dec
rcl
and
pop
or
mov
imul
retf
dec
leave
stos
sub
add
adc
inc
xchg
idiv
sub
pop
scas
sti
sub
adc
sar
add
jecxz
aam
or
lods
dec
sahf
mov
repnz
xchg
cmp
sub
nop
call
jp
sbb
xchg
shl
loop
sbb
and
mov
aaa
xlat
jns
pushf
inc
ret
fidiv
add
inc
adc
pop
add
cmp
dec
imul
in
lods
sub
repz
int3
(bad)
fisttp
and
xchg
sub
mov
mov
jecxz
push
sub
mov
pushf
lea
cli
sub
pop
add
fwait
mov
mov
call
push
mov
mov
mov
sbb
scas
sbb
or
fs
cwde
and
gs
dec
xor
mov
sbb
push
sbb
pop
push
push
push
int3
dec
push
xor
addr16
in
jmp
xchg
adc
mov
enter
add
fld
pop
mov
icebp
inc
scas
(bad)
jecxz
or
daa
mov
and
call
movs
call
mov
stos
adc
adc
dec
ins
inc
or
inc
mov
pop
into
xlat
adc
popf
rcl
movs
dec
popa
outs
das
xchg
or
push
push
scas
scas
sbb
popa
xchg
add
jmp
mov
pop
and
fwait
retf
push
mov
int3
fmul
pop
dec
and
stc
(bad)
or
add
jl
and
fld
inc
push
in
xchg
ss
icebp
jb
mov
dec
retf
shl
outs
sbb
xor
fdivr
leave
inc
out
mov
pop
xchg
ret
loope
or
es
test
sbb
cmp
cs
iret
pop
je
and
rcl
aas
xchg
sub
jle
retf
dec
sub
retf
movs
aas
jno
jno
and
jbe
inc
neg
add
popa
lods
pop
jo
call
imul
cmp
dec
xchg
sahf
out
dec
mov
inc
(bad)
cdq
pop
in
repz
fld
aaa
lea
ret
mov
int
(bad)
jnp
jle
push
mov
jp
and
loope
jno
inc
in
lock
xor
mov
jnp
outs
mov
dec
adc
lahf
mov
stos
mov
xor
xor
test
ss
or
test
cmp
mov
pop
pop
rol
push
outs
jmp
shr
adc
push
aaa
mov
cmps
cmp
mov
or
fwait
aaa
ret
out
ret
push
push
lahf
sbb
push
iret
scas
imul
sti
ret
sbb
sbb
cmp
int3
hlt
sbb
jmp
leave
pop
xor
sbb
cmp
leave
les
mov
jne
int3
fbld
xchg
xor
shl
aaa
(bad)
test
in
mov
cmp
and
cmps
arpl
stc
jg
out
sar
jge
sub
(bad)
jl
fdiv
and
fwait
rcl
or
pop
push
outs
fsubrp
jae
mov
or
dec
aaa
xchg
hlt
outs
jl
(bad)
mov
dec
outs
push
(bad)
inc
mov
ja
dec
sub
call
out
and
popf
leave
cwde
sahf
add
in
pop
mov
inc
retf
mov
inc
inc
dec
out
push
mov
popf
push
test
sbb
inc
je
jbe
sub
rol
ins
inc
pop
retf
inc
pop
sub
dec
mov
xchg
mov
push
cmps
fadd
repz
inc
adc
aam
sub
repnz
mov
xchg
outs
adc
push
(bad)
sahf
push
out
sub
pusha
lea
stc
and
dec
add
stos
sbb
xlat
xchg
(bad)
or
hlt
sbb
and
scas
lea
push
iret
xchg
pop
mov
and
add
dec
enter
icebp
pop
jne
xchg
jecxz
pop
dec
ret
dec
test
inc
add
out
pop
push
scas
add
xor
aaa
bound
mov
pop
inc
lods
fld
or
ficomp
or
mov
sub
mov
sub
aaa
or
inc
lds
mov
mov
xor
xchg
sti
mov
mov
shl
mov
lods
outs
cmps
sbb
les
and
sbb
mov
xchg
pop
pop
adc
scas
push
mov
out
add
sub
jno
jle
stc
dec
ja
jp
je
pop
pop
inc
fisub
cmp
jg
mov
sub
leave
dec
jmp
xlat
loopne
or
mov
sub
fldcw
rcr
sar
pop
outs
sub
jae
loopne
call
outs
jbe
push
sbb
ficom
out
imul
clc
adc
cmc
cmps
jmp
push
clc
out
int
pusha
out
in
test
xor
jle
test
push
and
(bad)
pop
ss
loope
jae
xor
cmps
and
xor
mov
ja
inc
sbb
xchg
or
enter
cmp
movs
outs
in
jge
imul
das
xchg
sbb
and
jmp
fwait
rol
cmp
adc
xchg
popf
push
cmp
sbb
inc
adc
push
lds
xor
cdq
inc
xchg
loope
xchg
int
and
xchg
fisttp
scas
dec
outs
cld
pop
or
xchg
jl
sbb
xchg
div
int
in
in
ds
mov
gs
adc
or
adc
ja
rcl
and
adc
data16
sub
retf
imul
ins
pop
aam
ins
jo
add
inc
xor
call
hlt
dec
lods
(bad)
mov
jl
mov
mov
mov
imul
ja
lock
stos
fs
es
adc
ret
aam
shl
pop
nop
aad
mul
cwde
xchg
inc
mov
and
out
test
inc
test
fistp
test
or
cmps
cmps
dec
fild
es
sub
and
mov
and
adc
sar
adc
sub
fstp
ds
sar
mov
jl
dec
mov
push
or
xor
sub
dec
ret
jle
daa
mov
loope
out
(bad)
popf
hlt
sub
push
sar
dec
mov
inc
ffreep
inc
adc
xchg
dec
sub
outs
test
pop
shl
sbb
(bad)
cs
aas
repz
inc
pop
add
ret
std
dec
(bad)
retf
lds
jle
add
sbb
cli
xchg
push
jbe
in
xlat
movs
xchg
xchg
mov
rcl
dec
ja
mov
aad
aas
mov
in
inc
fcmovb
add
push
fcomp
(bad)
ret
test
lds
sub
icebp
out
cmc
mov
push
mov
test
mov
popf
and
ss
sub
call
stos
and
jne
adc
cli
ds
adc
adc
(bad)
fdiv
push
lock
out
pushf
shr
dec
push
(bad)
xor
dec
pop
clc
sbb
cmps
xor
inc
neg
loop
cld
daa
scas
push
sbb
test
test
mov
jp
imul
jo
jecxz
inc
test
mov
gs
push
add
repnz
add
ret
mov
adc
sbb
(bad)
mov
adc
mov
xchg
sahf
adc
push
mov
xor
test
div
(bad)
jge
(bad)
in
out
lds
jnp
cmp
dec
imul
in
prefetchw
pop
mov
jae
sbb
sub
pop
or
cmp
xor
and
push
shl
adc
jmp
push
push
and
div
mov
ret
sub
loopne
clc
add
rcr
call
sbb
dec
push
iret
inc
mov
jae
stc
jns
lahf
out
push
shl
inc
fnstsw
lahf
xchg
out
cmp
sub
repz
pop
in
lods
int
cwde
mov
sub
mov
add
shl
leave
das
jmp
repz
xchg
sub
xchg
push
adc
mov
jae
pop
jo
sbb
cmps
xor
jecxz
clc
inc
jnp
push
sub
xchg
iret
jl
bound
inc
fdivr
stos
push
sbb
and
cmps
movs
xor
stos
shr
daa
loope
icebp
in
ficomp
out
mov
je
xor
mov
(bad)
fstp
dec
and
sbb
mov
sbb
dec
xchg
stos
xchg
sar
cwde
ins
mov
pop
imul
jo
and
les
shl
jbe
icebp
rcl
xor
xor
pop
(bad)
push
call
test
adc
and
lahf
and
xchg
pushf
mov
add
mov
inc
lds
(bad)
icebp
scas
(bad)
jecxz
ins
rcl
in
idiv
shufps
sub
enter
test
and
cmps
mov
cmp
mov
pop
mov
mul
iret
sub
push
ds
scas
jecxz
dec
inc
inc
cmps
xchg
mov
mov
fistp
test
push
icebp
or
jne
(bad)
in
pusha
mov
cs
stos
xor
inc
dec
pusha
ret
pushf
cmps
dec
clc
or
pop
inc
call
or
mov
cmc
imul
add
repz
cmp
clc
pop
sub
jge
dec
or
ins
jmp
sub
and
jge
mov
pop
jp
xchg
movs
lods
fidivr
push
scas
adc
repz
adc
addr16
test
cmps
int3
mov
sbb
xchg
pop
push
pop
imul
mov
cs
adc
pop
mov
iret
push
pop
mov
mov
add
ja
cmp
jg
mov
bound
xchg
mov
fcmovnu
out
clc
out
cmp
and
inc
clc
xchg
jns
push
push
mov
leave
pusha
xchg
ret
sbb
ret
dec
mov
cli
sub
rol
inc
cmp
fldenv
repz
mov
aam
mov
mov
std
test
dec
jle
sbb
jge
sbb
call
loope
mov
daa
xlat
fsubr
adc
retf
loop
dec
add
call
adc
rol
cmp
xor
jg
push
cmp
shr
leave
cmps
cld
mov
cmps
mov
(bad)
out
sti
add
int
scas
enter
or
pop
mov
xor
inc
cs
ret
add
mov
mov
mov
and
out
pop
adc
and
jb
and
popa
dec
mov
mov
mov
xchg
bound
out
sub
push
xor
test
out
or
imul
clc
out
adc
call
(bad)
jg
jmp
jns
(bad)
inc
jle
retf
ja
(bad)
mov
add
aam
push
push
push
xchg
jnp
cmp
pop
pushf
sbb
mov
cmc
sbb
push
sub
cbw
in
mov
cmp
jmp
(bad)
mov
xor
cs
lds
or
ficom
pop
shr
bound
cmps
pop
fwait
fwait
sub
pop
fld
jmp
jbe
enter
or
stos
popa
fisub
inc
aam
scas
stos
adc
in
sub
mov
pusha
inc
push
fs
or
and
mov
jo
sbb
mov
scas
mov
mov
scas
or
jno
adc
cli
sbb
test
add
xchg
fbld
ins
(bad)
(bad)
push
add
push
or
call
xchg
sub
and
test
icebp
iret
sub
xchg
aas
jbe
pop
loope
retf
jns
movs
aad
mov
pop
mov
fld
jmp
mov
add
sub
push
and
popf
mov
dec
leave
jp
xor
inc
je
inc
pushf
popa
and
inc
pop
mov
mov
xchg
mov
pop
sbb
gs
sbb
int3
xor
xor
leave
aam
jae
sbb
aas
cmps
out
pop
mov
lds
jno
jno
inc
and
scas
jb
in
rcl
jbe
cmp
cmp
mov
and
aad
shl
sbb
dec
ror
adc
sbb
pop
retf
pop
fs
add
sub
push
sbb
stos
cli
inc
xor
cs
mov
jb
xor
cmp
sbb
push
adc
mov
into
xor
loope
cmp
jno
call
cmp
mov
mov
and
adc
stos
or
pop
dec
jo
cld
lahf
lods
nop
test
je
icebp
in
scas
scas
out
xchg
and
pop
in
fldl2e
outs
frstpm(287
mov
sbb
sub
in
nop
push
scas
(bad)
adc
and
push
sub
scas
push
or
push
pop
out
add
push
sub
and
popa
pusha
sub
xchg
xchg
nop
cmp
inc
push
push
pop
cmp
add
xchg
add
in
(bad)
gs
mov
imul
(bad)
cs
xor
sti
jns
pop
pop
mov
movs
sahf
inc
push
aam
daa
or
push
(bad)
out
mov
ja
push
nop
push
mov
cld
data16
jo
jge
lods
movs
mov
out
xor
cmp
and
xor
call
inc
(bad)
jmp
mov
lea
cli
push
shl
idiv
add
addr16
pop
sbb
pop
(bad)
push
fild
mov
xchg
(bad)
mov
test
lds
pop
dec
test
std
ins
xor
jns
out
shl
stos
outs
not
push
(bad)
outs
scas
loope
inc
pop
jp
adc
out
sub
mov
mov
dec
fisttp
xor
js
xchg
xor
push
or
mov
aas
push
pusha
sahf
fcom
jne
aam
jmp
dec
adc
jg
mov
pop
xchg
cmp
pop
fidivr
jns
ins
sbb
pop
cwde
xlat
mov
xchg
jmp
jne
hlt
cdq
or
popa
int
mov
dec
sub
adc
int
xchg
mov
imul
out
sub
adc
sti
mov
xchg
or
cmp
ds
mov
imul
bound
inc
pop
retf
es
jl
stos
sbb
xchg
xchg
movs
dec
or
repz
stos
jle
outs
adc
sub
push
push
sbb
clc
arpl
and
int3
lahf
repnz
aas
data16
xchg
test
in
repnz
xchg
fwait
dec
dec
pop
mov
xchg
inc
dec
out
add
scas
adc
xor
cmp
pop
jmp
xchg
add
mov
shr
jno
cdq
cmc
loope
shl
iret
test
mov
jne
and
fild
mov
nop
nop
or
push
mov
cmps
mov
lods
mov
pushf
mov
pop
xor
loope
xchg
push
mov
dec
push
xor
imul
jmp
das
sub
stos
add
mov
inc
jns
adc
xchg
in
or
pop
pushf
retf
test
mov
dec
ret
arpl
mov
sbb
pop
clc
xchg
lahf
enter
jp
sbb
pop
adc
inc
enter
sub
mov
int
ja
xor
sbb
cwde
cwde
inc
or
mov
mov
mov
mov
ins
or
mov
fdivr
push
xchg
stc
cmp
mov
fisttp
add
push
pop
dec
mov
inc
sub
inc
scas
shl
fisubr
pushf
jle
mov
pop
jmp
xor
jmp
loopne
ds
mov
stos
dec
stc
das
jb
push
stos
pop
xchg
sub
or
scas
jmp
outs
push
and
jmp
adc
icebp
cmp
retf
xchg
xor
test
imul
movs
lods
fld
xchg
aas
ret
xchg
push
mov
out
cmp
xor
and
stc
div
jmp
cli
rcr
scas
mov
dec
fild
lods
inc
out
ret
pop
xchg
pop
xor
popf
dec
ror
loopne
jg
retf
inc
mov
mov
jmp
cli
push
iret
xor
mov
jl
xor
sahf
cmps
push
ss
xor
(bad)
hlt
pusha
inc
sbb
retf
or
cli
(bad)
out
mov
xor
data16
in
push
fld
jo
pop
repnz
jge
fimul
call
jnp
out
in
dec
cli
inc
nop
in
popa
sar
sahf
mov
add
fs
adc
push
ins
jnp
mov
jae
test
cmp
outs
inc
jmp
xor
cmc
dec
xchg
imul
and
xor
xor
fcomp
push
xchg
mov
add
xchg
and
fdivrp
shr
test
out
into
in
test
inc
cmp
jnp
call
out
inc
sar
(bad)
fstp
jnp
int
lock
js
and
inc
outs
add
dec
add
stos
push
loop
sub
xchg
inc
xor
mov
sub
or
paddw
(bad)
xlat
call
xchg
ja
mov
add
ins
xor
frstor
adc
jmp
ins
leave
ror
in
push
dec
stc
mov
xor
sbb
(bad)
std
jmp
inc
es
addr16
push
rcl
xchg
inc
or
repz
stos
or
mov
scas
jae
gs
fistp
sbb
imul
lock
loope
arpl
stc
dec
mov
lock
mov
repz
imul
xchg
out
std
dec
out
cmp
data16
mov
push
movs
cmp
movs
(bad)
jge
inc
pop
jae
out
and
retf
xchg
rcr
mov
jnp
jmp
dec
test
cld
cmp
js
les
push
fst
or
cwde
jle
jp
mov
and
daa
(bad)
pop
mov
cld
inc
icebp
pop
xchg
inc
test
dec
addr16
pop
jno
inc
jecxz
sbb
fst
je
push
dec
add
mov
inc
in
pop
sub
loop
aad
xlat
xchg
lds
add
dec
repz
xchg
movs
inc
adc
pop
push
test
das
dec
scas
jns
push
test
xlat
test
movs
dec
push
xlat
cli
inc
dec
mov
push
cmp
dec
xchg
jl
push
inc
sbb
sub
aas
and
jl
mov
ss
cmps
xor
lock
out
and
shl
(bad)
xor
or
mul
imul
outs
mov
push
xchg
js
add
lods
xor
mov
fldenv
test
leave
push
sahf
xor
sub
adc
stc
int3
cmp
fcomp
mov
stos
adc
and
out
cs
retf
pop
cmp
and
inc
ret
pop
loope
mov
push
mov
xor
mov
adc
add
adc
dec
mov
inc
cmp
fmul
repz
ins
mov
mov
out
mov
ss
ds
dec
repz
or
out
sub
icebp
aam
cli
jecxz
cld
mov
and
or
into
jbe
adc
cs
pop
mov
or
sbb
jecxz
ins
sub
push
ret
xor
push
and
scas
and
movs
mov
xor
imul
sbb
mov
adc
in
lods
pop
jno
xchg
jo
fs
dec
inc
pop
sub
test
xor
dec
lds
mov
call
pop
jmp
hlt
inc
jno
lahf
pop
xor
xor
cdq
add
in
jo
sbb
int
sbb
inc
dec
jmp
push
push
xchg
loop
mov
inc
cmc
mov
push
cli
daa
push
pop
or
inc
outs
call
inc
test
adc
in
and
inc
cmp
aaa
out
gs
sub
jle
(bad)
jmp
iret
sub
jecxz
add
mov
ins
inc
int3
mov
lds
aam
int3
inc
leave
xor
out
mov
inc
fild
and
repnz
dec
push
mov
mov
leave
movs
jnp
add
push
(bad)
ss
(bad)
sub
idiv
jae
pop
and
mov
mov
loop
faddp
ret
jmp
test
ficomp
mov
call
mov
push
enter
jle
imul
icebp
dec
dec
call
stc
sub
xchg
retf
ret
mov
jns
push
es
call
dec
in
dec
xor
sub
xlat
pushf
movs
dec
pop
aam
out
push
push
mov
push
adc
rcl
inc
movs
scas
push
push
xor
jge
rcl
out
in
aaa
mov
xchg
pop
inc
outs
sub
lock
sbb
(bad)
retf
inc
xor
push
push
rcl
pop
(bad)
sbb
or
xchg
das
aam
jmp
xor
fld
dec
cmc
mov
retf
mov
cmps
adc
ja
arpl
push
addr16
stos
dec
push
sub
lahf
mul
ror
mov
xor
lds
push
fistp
movs
inc
(bad)
jle
test
cmps
jge
in
scas
adc
add
inc
icebp
dec
or
out
mov
out
cmp
lods
sub
xchg
fs
imul
mov
outs
clc
fmul
push
cdq
dec
dec
lds
ror
outs
xlat
out
iret
pop
or
xor
mov
mov
pop
xchg
xchg
and
iret
ja
cmps
jg
push
mov
out
mov
arpl
(bad)
(bad)
xor
push
fild
sbb
mov
add
inc
push
or
js
adc
adc
pop
pop
mov
loop
jo
out
mov
ror
fs
or
or
daa
xor
fistp
icebp
loop
shl
loope
add
xchg
adc
(bad)
pop
jae
sbb
cmps
cmp
and
fisttp
lea
mov
jae
sbb
xor
cmc
daa
je
mov
ss
or
jecxz
jp
mov
les
imul
cmp
mov
jmp
add
inc
lods
push
mov
mov
sbb
cmp
add
dec
mov
icebp
push
and
jmp
jnp
inc
inc
call
dec
inc
jl
dec
pop
aaa
mov
mov
pop
shr
es
fisttp
adc
mov
outs
push
adc
pushf
hlt
inc
push
lds
std
pusha
fst
push
xchg
jmp
je
xchg
sbb
std
shl
aad
loope
push
inc
jecxz
push
push
xchg
ja
mov
es
mov
inc
inc
cli
inc
(bad)
pop
push
adc
(bad)
fild
and
cs
jnp
pop
scas
mov
cmp
push
adc
sub
dec
cdq
lds
sub
mov
inc
nop
scas
xchg
mov
popa
(bad)
in
cmp
and
cmp
xchg
sbb
mov
xchg
aam
xlat
fdivr
test
stc
or
jne
pop
fdivp
rcl
shl
fistp
jnp
and
outs
sub
pop
adc
in
sub
mov
xchg
lods
or
or
xchg
test
push
add
fs
mov
jne
icebp
sar
cli
pop
xchg
rol
call
adc
inc
or
add
dec
jno
add
sbb
clc
rcr
sar
mov
popa
push
int3
push
sti
inc
inc
cmc
pop
in
or
(bad)
retf
(bad)
out
fdiv
mov
push
jae
dec
(bad)
xlat
sbb
push
out
les
rol
and
rcr
xor
leave
mov
add
lods
imul
and
leave
mov
sub
pop
push
mov
out
or
cmp
inc
xor
rol
sti
outs
call
loope
add
je
inc
stos
cmp
pop
retf
hlt
sbb
mov
in
clc
mov
and
dec
in
mov
cs
das
pop
add
jmp
test
popa
xor
fldenv
jno
jb
shl
jle
shr
push
shr
in
ds
and
out
ret
inc
push
test
retf
scas
es
out
sbb
dec
ss
(bad)
ja
xchg
pop
(bad)
sub
xchg
and
fadd
xor
mov
(bad)
fld
arpl
and
shr
out
jnp
rcr
jp
sub
fisubr
rcl
pusha
jne
xchg
mov
stos
xchg
adc
sub
or
xchg
or
cmp
and
and
xchg
call
sub
cli
add
xchg
imul
jmp
repz
ret
lahf
cmps
lds
call
and
pop
xchg
xor
movs
dec
(bad)
sbb
outs
adc
mov
test
cmp
outs
dec
mov
in
inc
jmp
movs
das
dec
dec
aam
mov
xor
mov
xchg
pop
in
std
mov
pop
aad
fldpi
call
dec
mov
pop
xchg
inc
mov
aad
call
add
fwait
sbb
stos
and
inc
enter
in
out
mov
xchg
mov
sub
jmp
lock
stc
pop
xor
cmps
pop
cwde
mov
(bad)
fimul
jo
shl
(bad)
xor
ss
ret
or
loop
std
add
mov
push
aas
pop
mov
fild
inc
mov
(bad)
shr
popa
lods
aaa
test
in
push
or
cs
leave
cdq
add
aas
sti
jnp
mul
movs
arpl
push
mov
xchg
jmp
mov
pushf
in
scas
cld
push
imul
iret
adc
mov
(bad)
pop
xchg
aas
je
cmp
adc
pop
loop
dec
ins
jge
or
movs
cmc
jecxz
push
inc
jecxz
and
ror
call
sbb
sbb
pop
shl
pop
dec
pop
or
sub
lea
lock
pusha
outs
in
(bad)
xchg
sti
jle
and
push
or
cmp
loopne
and
not
and
(bad)
and
dec
mov
sbb
movs
adc
sbb
outs
jmp
push
ds
popa
ins
push
inc
mov
call
test
xchg
popa
std
xchg
pop
stos
dec
and
xchg
adc
outs
icebp
mov
mov
out
mov
jp
ins
or
(bad)
push
xor
sbb
(bad)
test
in
mov
outs
adc
jl
inc
call
pop
mov
scas
push
push
popa
les
test
ins
imul
pop
xor
bound
js
or
mov
fwait
mov
clc
adc
and
in
ss
and
inc
call
aaa
mov
cld
sti
(bad)
das
adc
das
adc
ror
std
shr
fcmovne
loopne
xchg
in
lahf
mov
test
sahf
mul
mov
pop
call
push
jl
stc
xchg
mov
adc
je
es
int3
inc
ds
pusha
mov
cs
pmaddwd
push
stc
mov
xchg
mov
sub
in
add
inc
fisttp
cmp
ins
mov
adc
dec
clc
data16
inc
rcl
or
and
jmp
inc
cmp
push
inc
scas
or
cld
inc
scas
mov
inc
xor
mov
scas
aas
mov
ret
cmp
xor
fscale
mov
pop
jmp
dec
jp
jle
xlat
lds
stc
sub
jno
adc
fwait
xchg
ret
inc
in
sbb
and
xchg
mov
push
sub
into
cmps
dec
test
pop
call
and
sbb
adc
ja
pop
aad
pusha
mov
jg
scas
push
cs
xchg
pop
cli
mov
js
jbe
stos
sub
mov
je
sub
outs
cmps
(bad)
hlt
enter
imul
lds
pop
hlt
iret
inc
scas
(bad)
cmp
mov
sub
xor
jo
push
ror
and
add
adc
inc
pop
out
js
xchg
or
and
cmp
test
xchg
jg
add
fs
mov
mov
sub
in
data16
sti
push
sti
out
pop
enter
and
mov
jbe
ins
mov
scas
mov
loop
fldenv
cld
mov
das
xchg
xchg
jns
mov
hlt
cmps
popa
xor
retf
out
shl
cli
fadd
xor
xchg
pop
sub
cmps
rcl
rcr
outs
pushf
fcomp
mov
jae
call
pusha
retf
mov
mov
sbb
scas
xor
xor
in
cmp
std
bound
pop
cmp
aas
mov
xor
lods
inc
shr
shr
add
dec
loope
loope
pop
mov
xor
ja
fmul
push
scas
inc
or
mov
xor
inc
mov
pop
cmp
out
xor
jl
push
cmovns
rol
jl
popw
sbb
push
cli
icebp
gs
mov
mov
push
inc
ja
xor
cmp
pop
aam
fsubr
jno
addr16
dec
(bad)
addr16
mov
imul
lds
dec
shl
xor
mov
mov
xchg
fist
xchg
stos
out
test
push
bound
sbb
sar
mov
aad
mov
fadd
enter
mov
in
sbb
inc
call
mov
aam
sub
add
add
mov
jae
shl
mov
push
fstp
add
pop
pop
stos
cld
mov
test
movs
xchg
cmp
pop
shl
jbe
std
sbb
ja
das
sub
ror
cmp
add
(bad)
(bad)
dec
inc
ret
(bad)
dec
shl
lock
mov
dec
fidivr
cmps
sbb
loope
das
mov
loopne
arpl
jmp
jge
loope
and
jp
popa
push
sbb
fld
add
mov
repnz
pop
xor
mov
mov
xchg
les
mov
dec
sbb
mov
xchg
sbb
jne
mov
sub
(bad)
retf
jne
shr
data16
loopne
sti
icebp
or
lahf
jmp
mov
leave
stos
add
into
and
(bad)
outs
es
je
shl
xchg
test
jle
es
jecxz
test
int3
xchg
shr
fcmovnu
add
dec
ds
rcr
ja
nop
adc
pushf
stc
push
cmp
in
inc
enter
jge
xor
or
mov
adc
mov
fadd
ins
xor
cwde
loop
adc
aad
cmp
in
jle
xchg
fiadd
push
fstp
sub
cmc
pop
jg
in
ds
mov
xchg
jmp
jmp
and
push
pusha
out
out
or
ins
loop
xor
call
add
pop
leave
add
rcr
and
push
jmp
loope
data16
jle
mov
cli
xchg
jecxz
dec
ret
aaa
xor
bound
jne
lods
or
mov
das
mov
push
into
jp
ror
clc
jno
push
ins
mul
je
xchg
push
mov
adc
jecxz
movs
lahf
clc
mov
out
(bad)
or
xor
popf
(bad)
lock
jp
in
adc
push
hlt
mov
dec
and
pop
or
sub
sub
mov
sahf
adc
(bad)
fld
adc
in
xchg
mov
jae
aaa
jmp
mov
fcom
(bad)
jmp
in
in
mov
sub
pop
(bad)
mov
ja
pop
push
sub
int3
adc
xor
inc
cld
outs
loopne
dec
xor
and
or
js
pop
push
les
sar
fld
jnp
push
mov
cmp
test
mov
mov
leave
out
xor
call
femms
xor
add
push
mov
(bad)
movs
outs
jae
imul
sub
sub
xor
sub
(bad)
dec
arpl
jne
xor
ins
add
jmp
imul
push
jnp
ja
rcr
out
test
clc
ja
ins
push
fcomp
movs
and
jg
outs
cwde
pushf
sbb
push
pop
pop
xor
stos
(bad)
or
retf
adc
xchg
sbb
mov
(bad)
fwait
sbb
mov
dec
mov
add
fnstenv
(bad)
cmc
out
daa
xlat
retf
lods
or
xchg
mov
das
add
pop
inc
jp
out
cdq
mov
out
mov
enter
aad
jne
das
cmp
je
clc
enter
mov
mov
lods
adc
mov
adc
ins
sahf
in
(bad)
mov
or
fidivr
add
enter
cmp
inc
ret
xor
cmps
mov
or
ins
sti
sbb
and
mov
daa
pop
daa
xchg
or
push
cmp
bound
in
popf
inc
sbb
push
test
test
dec
addr16
mov
movs
inc
pop
test
call
rdmsr
mov
loope
xchg
push
cmps
mov
test
ret
xchg
dec
pop
dec
jae
or
fcomp
adc
or
jo
mov
xchg
call
mov
call
mov
adc
cmp
inc
ins
cs
hlt
fsubr
stc
xor
addps
jne
mov
mov
test
call
mov
adc
pop
mov
scas
fdiv
daa
sub
int
dec
xlat
or
fsubr
ret
pop
mov
ret
sub
xor
mov
sub
jb
iret
dec
adc
xor
cmp
jle
iret
popf
movs
hlt
add
mov
jecxz
div
fst
adc
mov
sbb
adc
lods
or
push
jo
push
hlt
adc
add
in
js
stos
sqrtps
mov
add
cmps
jne
arpl
aam
std
mov
dec
sub
or
push
imul
dec
stos
mov
stos
jl
sub
std
push
dec
shl
pop
lods
adc
or
pop
mov
cmp
inc
mov
cld
dec
sub
xlat
in
je
leave
pop
sub
lods
lods
pop
pop
js
add
in
and
inc
data16
ds
cmps
(bad)
(bad)
stos
mov
out
push
cmp
xchg
xor
jb
dec
push
leave
push
jo
in
jge
and
arpl
push
xchg
jmp
mov
and
jne
call
cmp
sbb
mov
retf
ja
push
or
sub
mov
outs
cmp
pop
jno
jmp
es
cmp
pop
push
inc
sbb
or
mov
mov
pop
adc
arpl
outs
mov
cmp
test
retf
stc
add
and
pop
dec
mov
jmp
cdq
in
jns
jl
fwait
int
mov
mov
or
shl
and
daa
mov
nop
pop
jo
popf
call
mov
rcr
mov
lods
push
clc
(bad)
popa
les
push
jge
mov
pop
jb
xchg
fild
test
sbb
inc
xchg
in
xor
scas
lods
push
aam
and
sub
push
je
add
cmp
inc
call
xchg
dec
jb
es
xor
mov
push
jnp
lock
cmps
or
shr
test
pop
shl
outs
or
out
jge
mov
inc
mov
stos
inc
mov
aaa
call
retf
adc
(bad)
jle
cmp
js
int3
sub
cmp
sbb
jae
xor
ins
retf
adc
hlt
mov
fistp
sar
fstp
int3
ja
outs
xchg
push
aas
push
out
sbb
les
pop
mov
push
add
out
aaa
jb
aas
xchg
xchg
push
xchg
and
(bad)
mov
jno
int3
daa
pop
pop
mov
imul
aad
add
loop
popa
dec
xchg
xor
pop
mov
fistp
push
sar
xor
sbb
sahf
test
mov
retf
xor
dec
jge
jge
mov
fwait
das
and
imul
hlt
jnp
jnp
setno
xor
fbstp
and
imul
add
mov
dec
fcmove
pop
ja
mov
sbb
test
push
add
jne
lods
call
or
int3
pop
add
lock
sub
mov
dec
loopne
pusha
inc
ja
fldcw
pop
mov
leave
ja
int
shl
and
inc
loop
push
out
pop
sub
cmp
fidiv
dec
mov
inc
jbe
jg
push
mov
stos
test
mov
aaa
pop
mov
xchg
popa
out
mov
aaa
aad
and
push
je
add
inc
bound
dec
clc
popf
icebp
cli
popa
mov
fs
lea
push
jnp
ss
mov
and
or
pop
sbb
daa
xchg
rcl
mov
xor
out
std
mov
shr
dec
sar
adc
adc
inc
dec
mov
mov
sbb
in
pavgb
jge
cdq
sub
mov
jo
clc
adc
sar
pop
call
icebp
xlat
adc
stos
mov
push
sbb
cmps
and
cli
(bad)
jne
fstp
sbb
hlt
xor
repnz
xchg
sub
push
ins
push
stos
(bad)
dec
test
inc
push
fs
jmp
cmp
dec
dec
and
mov
push
aaa
not
pop
data16
push
ins
jge
cmp
fstp
jo
enter
inc
imul
mov
xchg
xor
or
inc
and
in
jb
retf
and
push
imul
shl
xchg
fisubr
add
fisub
push
xor
jae
loope
into
cmc
cli
repz
jmp
jge
jbe
push
inc
mov
aad
xor
cmp
dec
pop
xor
cmp
sub
dec
add
mov
push
out
jmp
jnp
shl
cmc
pcmpeqb
das
sub
sti
cmps
test
in
mov
mov
mov
sbb
or
and
sbb
push
mov
aas
sbb
adc
push
inc
pop
les
inc
mov
cdq
lods
nop
mov
xchg
dec
mov
or
leave
sbb
cmp
(bad)
xchg
rol
int
sub
ins
outs
jl
sub
fadd
jle
jmp
fldenv
es
sti
inc
mov
push
or
sub
jg
sub
stos
xchg
(bad)
fs
mov
mov
scas
pop
sbb
jmp
jns
daa
test
das
retf
mov
(bad)
out
in
iret
fcom
xchg
and
jmp
fmul
sub
mov
ret
push
shl
aas
jae
ja
addr16
lods
dec
(bad)
lds
cdq
imul
mov
sub
xor
popf
inc
xor
jo
arpl
push
dec
ror
shr
in
in
adc
sub
lea
stc
xor
lock
outs
lds
jge
movs
push
bound
sbb
ret
xor
xlat
in
xchg
adc
(bad)
sub
test
mov
loop
add
dec
je
xor
mov
outs
fdivrp
push
mov
icebp
jmp
(bad)
xlat
cmp
mov
in
jo
ins
ret
cmps
dec
mov
(bad)
jmp
sti
or
dec
cli
sahf
(bad)
fadd
mov
ins
mov
xor
mov
mov
lods
dec
mov
xchg
pop
stc
dec
xlat
ret
adc
xor
cmc
cmp
mov
pop
imul
in
push
add
call
and
sub
lods
jecxz
dec
dec
cmp
imul
sbb
xchg
rcr
inc
push
mov
mov
jmp
lods
(bad)
ins
ror
mov
ret
sub
imul
jns
mov
psrld
adc
push
in
dec
mov
or
jge
sbb
fisttp
jne
arpl
mov
retf
fldenv
xchg
data16
fcomp
lahf
mov
push
cmp
lahf
and
scas
inc
mov
sbb
neg
out
or
cmp
fld
cmp
mov
xor
push
ins
fcomp
rcr
(bad)
arpl
(bad)
dec
fdivr
test
mov
sar
(bad)
stos
cmp
inc
adc
xor
sub
fdivr
leave
cmp
push
push
mov
(bad)
pop
xchg
jns
push
lahf
pop
push
ror
dec
fcom
fiadd
xchg
inc
mov
sbb
js
imul
jns
or
push
std
repnz
test
jne
aam
and
mov
pop
je
pop
jne
fnstenv
push
mov
js
sbb
and
add
jnp
jb
xor
mov
lds
jp
mov
sbb
inc
cmc
lds
(bad)
fst
jnp
jmp
xlat
mov
cmp
test
cmp
rol
jp
cmp
push
xor
mov
mov
pop
test
pop
jg
xor
cdq
scas
dec
or
xor
fiadd
push
push
rol
test
cmp
lods
mov
pop
clc
inc
push
fdivr
cmc
add
xor
pop
mov
ja
push
movs
mov
cmp
outs
push
inc
cmp
fst
test
cmp
int
enter
mov
add
mov
add
xor
inc
dec
leave
js
and
dec
aas
mov
jecxz
jne
repnz
adc
jne
loop
clc
loope
ret
jne
mov
(bad)
(bad)
clc
mov
shl
shr
outs
ja
xchg
add
adc
cmp
jb
or
mov
sub
mov
dec
cmp
or
sbb
add
fnstenv
xchg
pop
jo
mov
iret
(bad)
mov
pop
pop
test
mov
cs
push
scas
and
mov
cmps
std
jecxz
push
retf
xchg
sbb
mov
cs
iret
mov
add
pop
jl
dec
push
sbb
repnz
cwde
dec
fcmovu
add
int
mov
dec
adc
cmp
inc
sbb
mov
mov
in
pop
adc
ror
xchg
test
xor
std
ss
jno
arpl
std
ret
pop
das
imul
push
pop
js
dec
loopne
mov
leave
push
das
sbb
cmp
push
test
and
int
jecxz
jecxz
shr
mov
mov
call
out
xchg
sub
pop
mov
sbb
mov
inc
ret
fild
out
cmp
int3
mov
popf
push
xchg
pop
lock
sar
stc
cmps
add
repz
ja
fwait
daa
jg
ds
es
sub
mov
retf
or
inc
popf
push
cmp
mov
or
(bad)
stos
call
fild
or
stc
test
rcr
cld
repnz
test
pop
stos
sbb
inc
das
adc
cli
or
add
shr
ror
fs
and
mov
out
retf
cmc
inc
cmc
fistp
xor
xchg
mov
inc
scas
(bad)
adc
fidiv
mov
push
clc
adc
mov
mov
enter
sub
(bad)
lods
les
or
ins
ins
inc
fistp
mov
mov
ss
scas
jmp
push
in
xchg
or
jg
sub
ficomp
fisttp
inc
sbb
inc
ret
push
push
lock
cmp
lods
xor
xor
std
js
push
movs
lea
daa
rcl
fild
(bad)
sbb
push
mov
aam
gs
cli
ret
retf
xchg
sar
sbb
lock
mov
and
retf
mov
mov
aad
repz
cs
push
das
ror
cmp
push
ja
pop
pop
gs
mov
pop
push
inc
leave
xor
push
out
aam
xlat
adc
cwde
pop
hlt
(bad)
enter
loopne
xchg
mov
in
scas
mov
test
dec
push
cli
loope
imul
mov
or
cmp
test
(bad)
fist
pop
or
adc
leave
mov
and
dec
xchg
in
and
test
dec
xchg
sti
inc
ret
retf
cmp
sbb
xchg
dec
lods
push
mov
inc
inc
push
cwde
js
fld
hlt
stos
ins
cmp
daa
sub
aam
sbb
lea
xor
pusha
adc
and
(bad)
or
cmp
push
inc
and
mov
fidiv
jns
mov
xchg
xchg
sbb
mov
fisttp
push
stos
imul
ret
mov
test
inc
xchg
cmps
cli
xor
add
es
dec
iret
mov
lods
pop
mov
sub
mov
and
sub
fldcw
sub
sahf
outs
lock
and
sbb
nop
movs
(bad)
pop
sahf
adc
out
das
fcmove
rcl
pusha
dec
adc
int3
xchg
sti
pop
arpl
sub
test
and
retf
or
jp
dec
sti
sub
outs
mov
loope
and
xor
jp
out
cwde
mov
stos
aam
outs
inc
iret
dec
mov
xchg
mov
lds
xor
push
out
aam
sahf
mov
aas
pop
jmp
retf
cdq
stos
out
or
sub
clc
fwait
inc
retf
clc
(bad)
imul
sub
push
and
fidivr
cli
loope
mov
sub
xor
rcr
push
hlt
outs
arpl
pop
sub
mov
js
ins
add
mov
ds
mov
(bad)
lock
pusha
jg
out
bound
retf
jns
loop
dec
loop
pushf
mov
cli
ficom
stc
lock
sub
adc
mov
fadd
xor
and
nop
je
push
pop
(bad)
out
aas
pop
addr16
sub
cmp
xor
pushf
push
push
retf
mov
jae
sbb
popf
ret
cmc
jl
sbb
cmp
xchg
push
or
adc
int
jb
fwait
jne
xor
sub
or
pop
int
or
test
scas
aad
repnz
xchg
shl
mov
fmul
lods
jecxz
cmp
lahf
lea
mov
mov
sub
and
sbb
(bad)
pusha
int3
retf
and
repnz
add
sub
hlt
mov
xchg
push
(bad)
pop
xchg
mov
js
cmp
sti
f2xm1
lahf
push
lds
xlat
out
pop
nop
aad
aas
in
fdiv
out
sbb
xor
sbb
dec
jle
int
call
add
mov
ror
js
jne
sbb
ror
dec
push
leave
sub
lods
or
push
or
movs
scas
sbb
pop
mov
sub
pop
jmp
inc
shl
push
lods
aad
and
hlt
or
aam
jmp
icebp
cmp
mov
adc
and
clc
jg
or
dec
fistp
mov
in
inc
xor
or
jp
rcr
pop
sbb
or
and
jne
xchg
sub
or
arpl
scas
mov
sbb
ror
or
sahf
popf
and
imul
xor
add
mov
push
lods
popf
sti
or
(bad)
push
push
ja
cmp
xchg
fdivp
cmp
scas
add
mov
ss
retf
and
aaa
dec
sbb
dec
push
push
cmp
aad
cmp
add
and
or
loop
sbb
xchg
cwde
retf
add
add
push
in
pop
inc
mov
xlat
or
push
xor
nop
leave
xor
iret
cmps
das
idiv
adc
imul
cmps
icebp
pop
movs
dec
int3
cmp
ins
xor
xor
and
out
pushf
mov
aas
push
rcr
sub
stc
out
(bad)
xchg
dec
and
xchg
popa
repz
or
jmp
test
push
adc
cmps
movs
ret
inc
pop
lea
push
pop
add
pop
pop
outs
out
(bad)
xlat
jmp
sub
mov
sahf
into
mov
pop
ret
push
les
lock
or
lods
mov
xor
adc
test
ins
jne
mov
(bad)
mov
inc
in
jbe
int
adc
or
mov
arpl
sti
aaa
xlat
fwait
call
daa
fs
jo
pop
or
cmp
jp
call
out
ins
mov
cmp
(bad)
jp
dec
fistp
pop
pop
cdq
mov
fbstp
ret
fsubr
rcr
das
movs
xchg
inc
pop
jns
aad
stos
imul
xor
jno
inc
imul
push
loope
jne
sub
cs
(bad)
sub
je
fisub
mov
ins
and
and
rcr
mov
pop
push
jnp
sub
sub
jmp
into
(bad)
mov
into
cmp
mov
shr
std
jnp
xlat
dec
cmp
push
mov
sbb
movs
icebp
sbb
cdq
mov
scas
(bad)
mov
or
das
in
lea
cmp
enter
dec
je
arpl
ja
fadd
cmps
push
cmp
and
rcr
mov
ins
movs
add
push
leave
push
xor
mov
ins
rol
and
sbb
fmul
add
in
push
or
mul
hlt
enter
push
cmp
and
cmp
add
es
xchg
push
pop
lods
test
adc
sbb
into
pop
and
mov
out
(bad)
es
(bad)
in
aas
in
das
xor
jge
push
out
out
adc
mov
ret
clc
push
pop
scas
xor
cmp
gs
adc
cld
push
nop
sbb
into
mov
and
and
sbb
mov
pop
sub
pop
shr
and
xchg
push
leave
scas
fstp
arpl
pop
mov
je
fidiv
xchg
jne
and
or
popf
rcl
xor
jle
inc
mov
cmps
pop
inc
out
ret
psllq
xchg
and
mov
sub
sbb
dec
hlt
mov
fs
les
stos
aad
loopne
lods
pop
call
add
mov
xor
frstor
(bad)
(bad)
and
popa
sbb
mov
adc
dec
inc
inc
mov
shr
fdivr
int3
retf
push
sar
sub
push
test
xor
cmps
retf
rcr
outs
std
imul
clc
inc
push
in
jns
xchg
adc
in
ds
fstp
mov
xor
mov
push
xchg
push
shr
add
ficom
adc
test
add
push
add
out
or
test
dec
nop
ja
push
scas
xlat
fdivr
adc
icebp
mov
or
jl
mov
idiv
add
dec
mov
sub
xchg
mov
or
jp
adc
repz
mov
add
and
arpl
jp
movs
retf
loope
pop
and
repnz
push
cmp
xchg
popf
jp
add
push
inc
es
jae
adc
pop
and
aas
xor
push
pop
fs
and
xchg
add
pop
ja
dec
scas
push
jmp
xchg
loop
dec
sub
addr16
pop
sub
inc
mov
cmp
ja
or
test
hlt
sbb
lods
dec
icebp
cmp
popa
xor
adc
xchg
sub
gs
scas
or
rcl
out
pop
xchg
mov
xchg
(bad)
xchg
icebp
adc
das
push
out
push
pop
repz
push
cdq
mov
push
jle
in
dec
ficomp
or
cld
repnz
daa
out
inc
push
aam
adc
jb
les
pop
jns
push
adc
cmps
push
mov
loopne
retf
cs
cdq
jne
cmp
pop
mov
arpl
(bad)
xor
and
push
rol
jmp
int3
fld
or
bound
sbb
fimul
aaa
xchg
mov
jns
mov
fwait
jmp
bnd
rol
js
add
aam
stc
fadd
dec
mov
shl
mov
call
jnp
xchg
rcl
daa
mov
outs
sti
retf
sti
add
ins
or
push
or
sbb
loopne
les
mov
mov
adc
mov
fwait
and
aaa
mov
addr16
mov
lods
xchg
sub
sbb
stos
xor
aaa
pop
xor
adc
call
stos
jmp
push
test
pop
pop
inc
or
push
dec
inc
mov
lahf
dec
fwait
ss
xchg
cmps
cmp
aas
inc
cmps
or
push
or
mov
inc
or
in
inc
jle
test
test
fstp
rcr
stos
and
push
xchg
addr16
cmc
punpckhwd
lea
sbb
and
mov
(bad)
sbb
xchg
adc
out
push
jecxz
(bad)
or
or
adc
neg
icebp
xchg
pop
icebp
lahf
jae
pop
stos
jno
sub
xchg
arpl
push
mov
xchg
mov
xchg
leave
push
lea
push
add
dec
ja
mov
xor
stos
sub
outs
retf
inc
movs
cmp
arpl
sub
pop
pop
adc
pop
scas
cmp
bound
inc
aaa
in
scas
mov
xlat
in
push
fwait
ret
or
ins
ret
sbb
lea
outs
xor
jmp
dec
push
idiv
mov
push
lods
(bad)
cmp
jns
enter
inc
stc
ror
(bad)
cwde
retf
in
pop
lods
inc
test
mov
retf
xor
test
jmp
push
(bad)
fisttp
push
dec
mov
push
out
push
pop
mov
lea
cld
cmp
lock
addr16
cmp
retf
outs
mov
mov
mov
aam
inc
xchg
sub
push
pushf
pop
je
xchg
and
jo
ror
dec
cdq
mov
sub
pop
pop
int3
fdivr
cld
cmp
cmps
sbb
pusha
xor
fwait
jbe
test
imul
outs
loop
cmp
xor
mov
stc
retf
jge
out
ss
test
cdq
sub
mov
cwde
lahf
and
dec
iret
inc
sub
mov
jmp
mov
push
jae
int
rcr
in
push
and
cmp
mov
xor
ss
sbb
and
sar
mov
mov
aad
test
or
pop
outs
lea
mov
lahf
push
jmp
or
adc
xchg
arpl
dec
cmp
sub
push
jbe
mov
mov
jnp
cmp
inc
retf
mov
sub
fdiv
int
mov
sbb
inc
jb
sub
pop
add
ins
or
(bad)
jnp
je
repnz
aam
push
mov
lods
scas
aad
mov
ins
rcl
lods
mov
mov
cmps
pop
adc
add
int3
stos
adc
lds
mov
jg
xor
outs
adc
push
push
sbb
pop
je
data16
imul
inc
(bad)
addr16
repnz
scas
mov
lods
ins
xor
popf
cmp
mov
cmp
push
cli
fstp
push
mov
cld
dec
adc
ret
pop
inc
loop
jle
ins
adc
call
push
loop
pop
adc
(bad)
xor
fcom
stc
ret
mov
add
aas
arpl
sub
(bad)
cmps
(bad)
push
and
xor
cmp
mov
repz
(bad)
int3
pushf
adc
add
push
stos
cmp
leave
add
adc
pop
add
and
pop
mov
mov
xchg
dec
adc
inc
(bad)
(bad)
retf
mov
lahf
lods
cmp
sbb
add
mov
lahf
cmp
fld
xchg
sbb
mov
cmc
sahf
jne
in
int3
mov
or
cmp
test
and
pop
pushf
jmp
mov
icebp
lods
call
dec
add
cdq
scas
mov
cmps
ins
sub
ja
sar
push
loop
icebp
clc
pop
aam
and
in
(bad)
and
loop
push
and
inc
ja
inc
mov
inc
inc
in
jnp
jmp
and
inc
dec
call
xchg
jbe
push
mov
push
xchg
jno
mul
scas
or
(bad)
sub
mov
or
push
in
fs
sub
callw
add
jecxz
dec
pop
push
or
sbb
push
jecxz
jmp
cmc
mov
lahf
pop
jl
aam
pusha
cs
xchg
fst
pop
scas
lahf
cmp
inc
mov
daa
shl
int
jmp
jle
and
dec
push
icebp
dec
(bad)
mov
push
fst
std
xor
aad
mov
aaa
jecxz
lods
ror
dec
jg
(bad)
mov
scas
add
fdiv
rcr
(bad)
jns
fwait
adc
loop
test
(bad)
clc
fldenv
sub
and
stos
push
fnstsw
aas
adc
(bad)
and
fst
sub
mov
scas
js
data16
mov
adc
mov
pop
nop
mov
stos
push
mov
pusha
js
mov
xor
and
cld
lods
lods
pop
into
lods
popf
sbb
or
sbb
jno
imul
aas
adc
xor
loop
pop
pop
ins
shl
sbb
add
push
add
jb
loopne
mov
lea
(bad)
cmp
push
and
popf
(bad)
sub
es
in
sub
adc
mov
movs
push
popa
inc
mov
bnd
cmp
cmp
inc
sub
mov
jge
and
mov
movs
es
mov
add
xchg
lock
mov
data16
mov
mul
push
inc
out
xchg
call
cmc
xor
adc
jb
mov
rcl
lea
cmps
dec
sub
lods
loop
cs
mov
add
xor
pushf
(bad)
jg
mov
ins
fstp
add
ds
iret
mov
loope
adc
inc
es
inc
out
jns
rcr
push
xchg
std
jmp
cwde
punpckldq
mov
test
shr
rcl
xor
sub
mov
add
(bad)
xor
mov
mov
push
xchg
rol
push
jmp
sub
je
and
dec
jecxz
add
add
popa
fistp
adc
call
xlat
push
sbb
in
mov
mul
frstor
ss
sub
add
dec
scas
jmp
xor
scas
fimul
mov
push
mov
dec
mov
jecxz
inc
adc
inc
aam
es
sbb
sbb
jge
leave
iret
and
xor
mov
xchg
sub
loopne
ret
inc
aas
ins
push
aaa
dec
cmp
rcl
out
xlat
jecxz
xlat
add
mov
adc
xchg
xchg
bndldx
dec
outs
iret
dec
sub
jmp
sbb
add
sbb
mov
mov
stos
pushf
sub
xchg
aaa
cwde
rcr
mov
lea
adc
sti
ins
mov
jecxz
mov
push
enter
jg
xchg
movs
sub
xor
pop
(bad)
cmp
mov
repz
and
(bad)
loopne
push
xor
pop
scas
inc
cmps
std
fidivr
sub
xchg
push
push
and
out
rcl
outs
hlt
mov
mov
dec
jl
rcl
push
out
lea
or
inc
pushf
sub
sbb
xchg
mov
std
xchg
sar
shr
sbb
outs
out
xor
mov
mov
cdq
jbe
out
inc
mov
rcl
ins
inc
fmul
sbb
cmps
jle
out
xchg
cmps
sbb
mov
test
fld
mov
bound
leave
retf
xor
into
nop
mov
outs
(bad)
cli
cmp
inc
sub
mov
jo
sbb
pop
add
sbb
push
cdq
xchg
dec
stos
outs
lea
mov
dec
icebp
bound
mov
cmp
pop
pop
jns
aam
into
fwait
inc
jmp
int3
out
hlt
mov
cmp
into
cmp
call
inc
adc
ins
inc
scas
pop
or
sub
sbb
or
or
xor
mov
jnp
add
push
sti
jnp
stos
fs
icebp
jle
sar
xchg
sbb
push
sub
mov
inc
mov
mov
stos
and
ds
cmp
(bad)
mov
mov
mov
or
sbb
adc
jne
sti
mov
mov
jle
add
jl
aas
adc
push
shl
jo
mov
push
add
cmps
mov
std
and
inc
movs
fdivr
lods
popf
push
cmps
adc
dec
xchg
cld
xor
imul
aad
sbb
scas
dec
push
pop
or
sbb
push
loopne
lds
dec
push
movs
xor
sbb
ret
int
les
aas
mov
sar
hlt
das
call
mov
push
push
adc
mov
or
ss
shr
aad
nop
popf
scas
clc
inc
es
sbb
fbld
mov
ret
fs
loopne
call
jb
out
jne
xchg
std
popf
gs
dec
xor
div
ds
jle
out
or
mov
mov
push
push
mov
mov
inc
retf
pop
(bad)
jmp
mov
sbb
adc
mov
jl
mov
pop
rol
pusha
outs
aam
dec
dec
imul
push
fcom
xchg
rol
or
arpl
retf
sub
pop
mov
xor
dec
rcl
(bad)
sub
mov
cmp
arpl
pop
test
cld
(bad)
arpl
xchg
stos
cmps
inc
cs
arpl
mov
jecxz
rcr
scas
push
lahf
pushf
mov
pop
cdq
fwait
das
and
mov
mov
ror
xchg
ins
push
pop
out
pop
jns
in
sar
(bad)
ins
bound
call
ja
xlat
test
adc
ds
push
sbb
retf
xor
aas
add
and
aas
push
idiv
enter
imul
xchg
sbb
xor
ins
cmp
test
sbb
stos
fidiv
stc
pop
mov
or
push
stc
mov
rcr
xchg
dec
mov
cmp
aad
in
rcl
jne
loopne
adc
dec
fild
push
mov
mov
and
mov
xor
inc
out
cmp
xlat
mov
mov
inc
sub
cmp
aam
setle
mov
pop
push
pop
adc
shl
dec
retf
(bad)
movs
ret
and
cmps
test
in
adc
icebp
test
adc
push
(bad)
aas
ins
xchg
pop
(bad)
pop
and
xor
ret
cmc
into
dec
sub
mov
fst
xchg
jl
mov
or
add
ror
mov
cmp
jb
adc
cwde
jnp
aam
ins
mov
mov
stc
push
ret
jecxz
outs
enter
add
loopne
aad
xchg
cli
mov
jl
aad
lahf
inc
push
addr16
mov
popf
mov
jmp
fcmovnbe
ret
sub
mov
add
push
daa
shr
pop
scas
rcl
add
mov
mov
or
retf
xchg
xchg
inc
retf
lock
(bad)
jbe
(bad)
(bad)
cmp
(bad)
mov
dec
adc
cmc
(bad)
dec
pop
mov
loopne
call
xchg
push
xchg
fnstenv
das
test
pop
mov
mov
xor
jg
pop
pushf
cs
jle
xchg
mov
cmp
push
jnp
mov
and
imul
mov
mov
or
aam
inc
mov
and
fxtract
cmp
cmp
lods
xchg
sbb
inc
pop
js
xchg
cmp
xchg
retf
shr
ins
push
mov
fmul
push
jle
mov
and
mov
pop
in
imul
mov
mov
dec
nop
test
iret
dec
js
sbb
repz
fnsave
jae
jno
ds
or
or
xor
enter
out
addr16
mov
adc
push
jg
ja
xor
gs
loope
enter
lock
scas
pop
mov
cmp
sti
jno
popf
cmp
iret
inc
add
jb
xlat
fnsave
jno
neg
sbb
or
hlt
enter
clc
lock
test
leave
push
and
xchg
or
and
mov
dec
sbb
into
add
sbb
and
mov
add
outs
pop
cmp
cmc
out
popf
aas
add
pop
pop
mov
pop
fdiv
and
jle
jge
pop
cmps
or
aad
outs
jbe
xor
add
push
(bad)
xor
or
adc
mov
and
xchg
jne
ss
sub
or
test
gs
lds
lods
or
leave
push
dec
out
xchg
ds
sbb
fiadd
xor
sbb
inc
loop
jns
add
adc
inc
push
add
dec
mov
xlat
xchg
aad
(bad)
vcvtpd2dq
xchg
out
int3
call
jnp
mov
sub
jl
inc
xchg
ja
mov
pop
mov
adc
xor
movs
cmp
sbb
fcomp
arpl
cs
inc
je
add
mov
cwde
or
jne
bound
sbb
(bad)
fst
ins
cmp
pop
add
bound
daa
out
xor
add
add
dec
les
cmp
loope
js
rcl
and
ja
leave
push
jne
fadd
push
fwait
mov
mov
mov
mov
mov
mov
mov
popa
mov
and
sahf
jg
sub
mov
lock
test
jmp
imul
(bad)
iret
repz
jge
pop
pushf
adc
popa
pop
inc
dec
inc
add
aas
inc
jmp
mov
dec
dec
bound
and
dec
push
dec
mov
(bad)
xchg
adc
sbb
fcmovnb
push
mov
(bad)
or
nop
(bad)
cmp
and
mov
repz
adc
adc
push
outs
popa
test
dec
sub
icebp
jmp
sub
sti
daa
pop
jmp
cmp
ret
jecxz
jmp
xor
loopne
xor
retf
jp
pop
xchg
sub
stos
fwait
ss
jno
push
push
(bad)
push
(bad)
mov
mov
fcom
js
test
lock
lea
cld
or
pop
pop
cdq
or
loop
jge
stc
outs
addr16
mov
or
rol
jge
jmp
sub
arpl
imul
or
sahf
(bad)
dec
dec
cmps
imul
cli
and
repnz
in
jne
sbb
aaa
mov
add
xchg
xor
nop
out
ret
ins
dec
clc
or
call
sbb
imul
jmp
xchg
(bad)
test
stc
sbb
cmps
div
xchg
daa
lds
bnd
fucomp
mov
lea
rol
fimul
jae
mov
mov
inc
ror
xchg
xchg
ins
retf
jge
cwde
inc
xchg
mov
cmp
test
lods
ja
sub
push
xchg
pop
mov
jae
sti
dec
movs
loope
hlt
icebp
mov
ins
pop
sub
fld
bswap
shl
mov
cmp
cmp
and
jecxz
push
xchg
jmp
jns
xchg
mov
cwde
std
cmps
or
add
jg
out
sbb
dec
sbb
inc
sub
cmp
js
imul
sub
jb
jmp
lock
mov
ret
jne
dec
xchg
xchg
sub
nop
push
ins
mov
inc
xor
mov
les
jbe
inc
in
out
call
mov
xchg
and
mov
int
jae
(bad)
sbb
sbb
stos
push
lods
movs
pushf
idiv
out
adc
aas
pusha
into
add
je
push
dec
cs
xchg
cmp
mov
inc
sub
mov
bswap
sub
xor
push
adc
(bad)
scas
mov
mov
or
or
pop
cmps
xor
xchg
or
and
cmp
movs
push
mov
rol
les
add
xchg
iret
sub
jp
mov
jae
jno
es
sbb
sahf
adc
mov
dec
not
pop
mov
rcl
inc
out
mov
fild
fnstsw
fadd
jnp
jno
adc
mov
add
push
inc
or
jo
xor
jbe
in
loop
adc
push
push
push
add
repnz
repz
in
sbb
in
(bad)
cmp
add
pop
dec
pop
in
in
idiv
scas
add
leave
shl
cmp
gs
mov
std
enter
pop
dec
or
xor
mov
cmp
fstp
xchg
loopne
inc
xor
mov
push
cmc
jle
jnp
cld
xchg
bnd
or
xor
inc
in
test
mov
dec
sbb
imul
call
pop
jp
movs
ds
push
adc
cli
jecxz
jnp
mov
test
add
out
aas
shl
push
test
pop
mov
aam
sbb
ret
sar
push
xor
aam
leave
addr16
lahf
arpl
adc
mov
inc
aas
fld
mov
aad
rcr
pusha
xor
jecxz
inc
pop
ins
jle
sub
repnz
mov
lock
and
cmps
aam
bound
xor
or
push
push
(bad)
or
movs
(bad)
jns
push
mov
push
bswap
pop
sbb
movs
xchg
aad
ret
jno
jae
jmp
xor
xor
push
inc
cld
stc
mov
sub
mov
jg
adc
loopne
push
push
xchg
fdivr
mov
pop
shr
adc
dec
mov
pop
jo
movs
into
(bad)
pop
fmul
sahf
mov
pop
icebp
xor
movs
and
sub
push
mov
inc
int
mov
inc
sahf
cli
sbb
sbb
inc
(bad)
out
mov
icebp
scas
out
mov
fs
loop
cli
es
fwait
ja
sti
outs
xor
pop
xchg
xor
je
popa
lds
mov
ret
ins
bound
inc
loope
dec
xchg
or
daa
lds
das
push
push
aas
outs
daa
popa
xchg
mov
adc
sub
fld
push
data16
pop
xchg
stos
xchg
imul
(bad)
mov
ret
jecxz
inc
pop
jmp
push
fild
or
popf
adc
stos
fistp
dec
out
and
adc
dec
pop
sahf
shl
pushf
xchg
sbb
add
sub
pushf
jns
test
dec
add
in
int3
push
aam
mov
push
cli
movs
(bad)
out
mov
push
mov
mov
inc
cmps
push
leave
mov
lock
inc
in
iret
rol
(bad)
out
mov
cdq
mov
jno
mov
xchg
data16
outs
or
jle
test
mov
sahf
aam
pop
push
popf
test
shl
rcl
xchg
pop
fld
(bad)
push
sbb
lods
or
push
call
pop
pop
cmc
stos
push
ins
dec
es
icebp
imul
das
aam
adc
sub
adc
mov
mov
xchg
stos
shl
repnz
xchg
cmp
imul
inc
and
sahf
cmps
(bad)
lods
popf
mov
enter
repz
mov
movs
adc
cmps
cwde
jp
mov
push
adc
lods
iret
outs
xchg
adc
ins
cmp
pop
xor
and
lea
or
pop
xchg
or
loopne
mov
test
das
ins
je
loop
das
rcr
(bad)
jnp
leave
loop
ins
call
xor
ins
ficom
mov
scas
test
fdivr
enter
(bad)
pop
sahf
or
cmps
test
push
xchg
ret
pop
pop
mov
xor
sbb
jmp
clc
aad
jmp
ins
psubd
inc
pop
or
mov
(bad)
repz
cmp
fimul
(bad)
cmc
repnz
and
rcr
fld
out
xchg
sub
push
or
xor
or
push
lods
or
and
pop
sti
mov
cdq
mov
jnp
scas
test
mov
lods
out
mov
mov
mov
sub
dec
inc
cmp
fdiv
shl
call
dec
cmc
sbb
mov
xchg
sti
mov
cdq
stos
enter
lds
push
mov
and
shl
nop
add
or
cmp
(bad)
popa
movaps
adc
mov
pop
loop
add
ret
sahf
inc
ins
jmp
cs
lods
mov
jns
xor
xchg
xlat
sbb
mov
xchg
clc
xlat
lea
sub
lock
sbb
retf
clc
sahf
xchg
cs
aaa
imul
lea
test
sbb
adc
arpl
inc
loope
mov
sub
jl
mov
movs
data16
iret
movs
xchg
out
and
mov
mov
dec
jg
in
xor
fcomp
mov
cli
pop
inc
fbstp
jno
inc
inc
or
scas
and
stc
dec
aad
add
dec
xchg
inc
sar
jo
sar
push
iret
repz
dec
cmp
jmp
pop
push
jmp
movs
popa
retf
adc
xchg
ficom
out
scas
inc
das
loope
xchg
xor
fsubrp
mov
sbb
pop
popa
out
stos
(bad)
jns
mov
out
inc
pop
xchg
test
jmp
jmp
xor
mov
mov
or
leave
jp
lahf
jb
data16
shl
mov
xchg
xchg
xchg
mov
pusha
xor
dec
sar
aad
test
bound
mov
add
xchg
cld
xchg
(bad)
xlat
mov
add
cmc
inc
and
data16
mov
add
jmp
jae
adc
stos
and
movs
push
jne
daa
jge
lock
mov
mov
add
lods
rep
xchg
mov
inc
mov
loopne
(bad)
das
sbb
jae
dec
xchg
and
sub
mov
mov
cmps
outs
jle
cmp
adc
pop
into
scas
inc
popf
idiv
je
mov
push
lahf
test
scas
dec
enter
pop
sub
mov
mov
sub
cmp
jno
pavgb
and
out
inc
xchg
cmp
jp
dec
jmp
and
enter
sbb
sub
out
jb
pop
mov
retf
cmps
(bad)
push
lahf
jnp
xor
aam
(bad)
sar
jno
cdq
mov
(bad)
xchg
or
xor
and
jle
sub
mov
xchg
(bad)
jns
loope
or
cmps
or
(bad)
movs
ins
jmp
out
(bad)
mov
pusha
and
sbb
xor
hlt
cmp
popf
jle
xlat
arpl
stc
push
dec
test
call
cmc
xchg
imul
cmp
in
add
inc
sti
(bad)
sub
cmp
(bad)
cmp
xor
gs
aas
sti
hlt
aaa
sub
and
add
inc
shl
xchg
adc
(bad)
shl
mov
jno
mov
sbb
pusha
xchg
mov
in
rcr
daa
rcl
lea
adc
push
aad
dec
sar
in
dec
adc
pop
int
add
sahf
jo
pop
sar
rcl
loope
(bad)
ins
xchg
shr
enter
push
dec
mov
push
sbb
mov
or
inc
push
sbb
push
ror
call
test
or
retf
scas
jb
in
inc
add
repz
or
fwait
add
pop
je
sbb
add
jg
mov
popf
xor
add
jno
fdiv
dec
xor
imul
push
in
movs
mov
enter
sbb
inc
sahf
push
xor
mov
cdq
adc
adc
lock
cmp
xchg
add
jecxz
adc
inc
(bad)
mov
(bad)
std
movs
push
repz
rcr
cmp
stos
imul
clc
js
add
cmp
xor
add
push
jg
aad
add
push
ret
add
mov
mov
in
je
and
aas
dec
stos
mov
push
mov
push
xchg
fstp
dec
jmp
pop
pop
mov
imul
sahf
mov
shr
popa
and
les
pushf
or
jno
sub
imul
imul
fist
std
adc
sub
cmp
test
ins
pop
in
into
cmps
mov
mov
inc
shr
out
out
out
or
cdq
mov
gs
sub
jbe
leave
(bad)
adc
cmp
mov
jp
or
inc
hlt
les
sbb
jle
aaa
mov
cs
pop
adc
sbb
mov
mov
or
adc
dec
pop
in
pop
fdivr
sub
sbb
repnz
inc
push
push
jno
test
js
in
bound
sub
lock
xchg
(bad)
fcom
(bad)
ins
cmp
add
retf
jmp
dec
add
xchg
stos
mov
pop
ret
and
cmp
dec
addr16
xchg
lods
imul
or
mov
das
fsub
mov
jno
rcl
in
mov
aad
cmp
sub
leave
test
int
std
jns
cmp
lods
ss
loopne
or
pop
shl
iret
push
arpl
dec
aam
pop
movs
sub
scas
push
pop
jmp
loopne
inc
(bad)
mov
rol
dec
icebp
mov
imul
push
mov
in
call
repz
cmp
imul
cmp
or
dec
jmp
push
xor
ss
test
les
fdivr
sbb
cmp
and
in
loope
jns
mov
add
stos
in
mov
stc
cmps
or
test
cmp
fidiv
ret
push
movs
stos
imul
push
pop
xchg
cmp
fisttp
sahf
mov
in
adc
ins
mov
popf
test
mov
mov
into
cmc
out
xchg
dec
dec
mov
call
or
fadd
clc
dec
xchg
adc
lahf
idiv
das
lods
dec
push
lds
jge
cld
push
in
pop
into
mov
sbb
and
and
mov
add
in
jl
mov
leave
les
adc
push
imul
sub
iret
fadd
xor
sub
cmp
mov
push
mov
(bad)
(bad)
push
call
(bad)
hlt
push
in
xchg
das
mov
cmp
push
aad
popa
inc
dec
mov
and
bound
sub
std
bound
pop
loop
lds
sub
lods
outs
jae
inc
jp
popa
jne
dec
inc
(bad)
sbb
sbb
xor
push
cdq
repnz
dec
movs
adc
and
sub
xchg
pop
shr
iret
adc
aam
push
pop
dec
pop
mov
lea
push
jmp
data16
xchg
enter
jbe
xchg
(bad)
ficom
sbb
xor
sub
daa
jle
adc
sahf
std
(bad)
leave
inc
icebp
jmp
inc
mov
or
xchg
fld
mov
sbb
mov
mov
fsubr
cld
xor
push
cld
cmp
and
mov
sub
push
call
push
add
or
jmp
repz
inc
mov
jns
popf
cmp
cmp
mov
std
cmp
sahf
inc
xchg
loop
jnp
test
ins
aas
pop
mov
pop
add
pusha
pop
in
pop
je
daa
jge
sbb
aad
or
mov
inc
pop
jmp
mov
xor
xchg
jmp
(bad)
repnz
cmp
hlt
jno
test
call
daa
inc
push
or
sub
(bad)
bound
mov
rcr
add
lods
xchg
mov
lock
add
mov
loop
sub
xor
mov
sub
out
in
or
and
and
cmp
imul
dec
mov
jbe
aaa
cmp
push
push
ss
xchg
push
cmc
push
jo
fisub
gs
push
xor
inc
or
pop
aaa
pop
lock
pop
daa
mov
and
adc
cld
jmp
dec
mov
and
ror
dec
(bad)
mov
(bad)
jae
xor
neg
mov
inc
pop
mov
add
inc
mov
xchg
call
retf
mov
ins
inc
pusha
and
fist
inc
and
sub
scas
sub
ja
lods
ds
mov
lahf
add
xor
pusha
jmp
adc
adc
pop
rcr
dec
jnp
push
nop
test
mov
pop
xor
jae
cwde
data16
mov
cmp
jle
push
xor
fcomp
mov
mov
pop
mov
push
and
dec
push
mov
ins
dec
jo
fs
xor
push
or
sub
or
mov
inc
dec
out
(bad)
imul
out
push
ins
call
jge
sbb
jg
ds
stos
pop
adc
or
ret
and
(bad)
sub
or
inc
xchg
cmps
xchg
or
cs
dec
xchg
mov
mov
(bad)
push
sbb
xchg
sub
arpl
mov
stos
scas
loopne
(bad)
sbb
xchg
cmc
xor
sub
inc
(bad)
loop
movs
mov
xchg
out
sub
mov
cmp
fs
stos
push
loopne
cmp
push
stc
add
mov
scas
or
(bad)
pop
dec
mov
test
mov
mov
loopne
test
inc
inc
cs
cmc
movs
sub
cmc
push
adc
mov
push
xchg
test
stos
push
fldcw
popf
mov
and
ins
int3
xor
inc
add
dec
call
add
or
or
retf
dec
popf
jo
in
sub
lahf
fisub
sar
fsubr
push
dec
int
aas
adc
sbb
dec
cmp
or
inc
dec
(bad)
int
xchg
aad
ja
dec
gs
inc
jns
leave
xchg
nop
push
in
outs
jbe
mov
adc
fcomp
popa
(bad)
mov
loop
imul
pop
pop
mov
scas
mov
mov
iret
in
jo
push
ffreep
je
int3
les
add
dec
in
xchg
cld
dec
ficom
cmp
sbb
loop
or
mov
mov
dec
mov
movs
ja
jo
sub
mov
scas
out
and
dec
int3
call
gs
(bad)
ret
or
test
mov
jp
add
imul
pusha
nop
or
pusha
or
mov
cmc
mov
mov
ss
in
jo
retf
mov
loop
jb
cmp
push
cmp
mov
xchg
and
pop
jge
pop
fisttp
sbb
out
push
loop
ins
cmp
add
cmc
adc
dec
aad
mov
add
push
push
fldenv
push
mov
stc
push
popa
stos
xlat
sbb
fxch
sub
adc
ss
iret
mov
popa
push
pushf
movs
push
in
jno
dec
mov
add
inc
out
les
addr16
xchg
add
xchg
retf
jno
pop
xlat
in
cmp
ins
add
jnp
cmp
test
outs
movs
call
shl
dec
enter
stos
add
jmp
fadd
xchg
and
add
mov
je
cmp
or
jmp
fisub
jae
in
ins
dec
xchg
mov
sub
mov
mov
xchg
inc
jns
fld
or
sub
adc
sub
rol
sub
cmp
nop
pop
mov
mov
mov
mov
sbb
pusha
out
sbb
mov
fucomi
mov
sub
pop
push
lods
in
mov
jo
and
aaa
stos
inc
fisttp
(bad)
retf
imul
and
out
or
in
cld
ret
and
mov
mov
mov
push
add
jmp
and
hlt
aaa
adc
xchg
cdq
jge
adc
xor
sbb
sbb
or
imul
xor
mov
jae
push
stc
xchg
lahf
stos
in
jb
lods
push
inc
pop
sbb
pusha
ret
inc
fsub
sti
jae
std
stos
sbb
mov
ins
pop
jl
inc
push
and
repnz
call
xchg
mov
shl
dec
jl
shr
cmc
mov
or
ret
add
push
clc
outs
cmp
cmps
test
in
enter
jno
sti
test
fdivr
cmp
les
dec
jnp
push
mov
jmp
pop
ror
ja
mov
dec
in
xor
int3
arpl
rep
inc
lods
or
cwde
push
mov
pminub
add
xlat
mov
mov
xchg
add
jnp
cmp
repz
je
test
jnp
mov
outs
push
retf
aaa
cmp
std
inc
xor
dec
fcom
dec
sub
adc
scas
in
xchg
dec
or
cmp
into
dec
int3
adc
jecxz
test
ds
pop
les
mov
xor
test
test
(bad)
jne
ins
pushf
and
aaa
cld
ja
enter
xor
adc
test
push
out
and
inc
and
pop
xchg
and
or
(bad)
cld
jle
mov
or
cmc
bound
lods
jle
sub
jle
add
jnp
adc
and
mov
dec
js
aad
imul
daa
outs
cld
xlat
cmc
cmp
test
xor
jae
scas
ds
push
mov
retf
push
(bad)
mov
loope
test
pop
movs
ins
push
jle
mov
icebp
or
in
lods
(bad)
in
xor
and
xor
mov
mov
or
jle
jl
xchg
sbb
xor
sub
dec
sub
in
xchg
idiv
js
clc
icebp
sbb
jmp
addr16
mov
or
dec
jmp
popa
sbb
mov
jbe
cmps
dec
add
fimul
or
sub
lods
inc
add
sbb
cld
mov
cmps
and
xchg
mov
clc
dec
popf
in
imul
mov
in
or
leave
shl
lea
test
dec
ja
dec
sub
lds
and
sbb
scas
and
and
sbb
daa
in
icebp
adc
jb
jle
test
sbb
mov
mov
dec
sar
sub
pop
xor
(bad)
(bad)
fsub
fmulp
mov
jle
xor
pusha
jmp
xor
aam
mov
test
mov
pop
pop
xor
shl
fs
fsub
imul
jle
xor
mov
arpl
push
pop
mov
mov
mov
mov
ja
popf
(bad)
push
xchg
dec
in
lds
push
xchg
jecxz
mov
data16
mov
retf
outs
dec
dec
arpl
xchg
dec
daa
aaa
ins
(bad)
aad
mov
gs
push
push
int
rcr
cmp
pop
mov
mov
push
movs
cdq
inc
jae
lods
add
sub
jns
pop
test
gs
gs
retf
ret
and
daa
out
les
lods
or
pop
xor
popf
adc
xor
pop
dec
mov
dec
jge
or
test
jmp
bnd
push
cwde
sub
jns
in
shr
daa
data16
and
mov
outs
stos
dec
pop
dec
fldl2t
fst
ja
shr
and
push
fisubr
icebp
test
arpl
xchg
or
mov
(bad)
mov
sbb
jecxz
xor
nop
stc
sbb
push
pop
xchg
(bad)
xor
stos
ins
lds
ds
mov
mov
test
or
fistp
adc
dec
in
mov
cli
call
lds
xchg
hlt
push
or
xor
sub
dec
push
jnp
inc
and
mov
mov
jbe
dec
cmps
nop
test
mov
fisub
dec
dec
rcr
adc
shl
jmp
ret
shld
xor
dec
cs
out
das
shl
(bad)
es
sub
neg
mov
pusha
out
sbb
fild
das
dec
inc
xor
push
or
ins
mov
inc
dec
jecxz
(bad)
jl
pop
mov
sub
fdivp
push
fild
adc
je
mov
mov
and
add
stos
(bad)
call
add
or
shl
xchg
loopne
in
mov
inc
pop
shl
cmp
scas
jae
fadd
and
data16
in
adc
mov
push
aas
in
clc
cdq
xchg
adc
enter
sub
push
xlat
pusha
fbstp
jmp
cwde
sbb
bound
mov
push
jnp
dec
dec
movs
xchg
inc
adc
cld
std
shl
imul
data16
pop
jmp
jp
inc
xor
mov
mov
mov
call
scas
sbb
add
stc
movs
inc
adc
cmp
cwde
scas
adc
mov
cmp
repnz
movs
jge
popa
std
dec
or
pushf
dec
push
dec
push
retf
or
ins
test
sbb
and
lds
aad
adc
inc
jmp
xchg
xor
xor
out
retf
mov
punpckhbw
or
(bad)
vpsraw
int3
into
cmp
xchg
neg
mov
push
fwait
mov
retf
mov
retf
add
xor
imul
and
adc
cmp
sbb
mov
mov
pop
or
mov
add
movs
mov
sbb
adc
les
cwde
mov
sbb
lock
push
aaa
out
add
imul
cli
inc
sub
mov
adc
fld
fisubr
pusha
inc
and
(bad)
ret
clc
jns
mov
cwde
shl
inc
stos
jns
mov
loop
sub
adc
push
jecxz
adc
adc
cmc
or
dec
dec
inc
lods
cs
jb
xchg
shl
sar
and
iret
jb
push
sti
xchg
sub
xchg
(bad)
imul
retf
(bad)
icebp
int3
cmp
cmps
dec
jns
ss
in
dec
shl
sahf
cmp
mov
lea
sti
hlt
push
xor
loope
in
xor
je
gs
ins
lods
mov
pop
out
jo
out
inc
add
out
mov
xor
int
push
stos
iret
push
mov
inc
arpl
out
mov
xor
add
shr
dec
or
cs
cld
push
jae
scas
or
pop
push
fbld
cdq
xchg
pop
pop
mov
shl
scas
idiv
sbb
rcr
iret
addr16
or
cli
adc
mov
mov
into
lock
mov
mov
les
icebp
mov
movs
inc
jle
sar
mov
and
add
dec
out
test
xor
jnp
mov
lods
or
jmp
fisttp
mov
or
loopne
mov
dec
clc
loopne
xchg
daa
xor
adc
xchg
mov
fmul
or
pop
mov
cmp
aas
xor
xchg
cmps
jecxz
std
loop
arpl
out
or
into
xchg
push
aas
jno
inc
into
xchg
rol
ds
movs
clc
push
xor
jnp
loopne
add
mov
adc
push
fadd
ss
je
mov
movs
repz
je
iret
jne
inc
dec
fild
add
cmc
fisttp
je
shr
push
jno
ins
das
sub
add
push
in
lock
fidivr
dec
ficomp
and
push
push
out
inc
lar
in
pop
xor
sbb
les
pusha
pop
js
lea
adc
mov
inc
nop
push
iret
cmp
add
cmps
sbb
inc
dec
sub
sbb
cwde
pushf
add
or
out
sbb
inc
fsub
sti
rcl
sar
clc
(bad)
ins
or
pop
dec
ret
ja
mov
sbb
stc
mov
test
addr16
leave
adc
out
lods
cli
cwde
mov
popa
mov
mov
or
loopne
pop
push
std
imul
rcl
mov
inc
mov
lods
(bad)
xor
test
sbb
fisttp
ficom
cmp
add
dec
inc
bound
jge
cmps
stos
push
movs
cmp
and
mov
adc
mov
nop
arpl
addr16
jo
dec
pop
je
ret
xor
mov
lods
shr
in
jmp
ficomp
pop
mov
push
and
adc
or
cmp
push
pop
push
lock
jno
iret
call
in
mov
retf
lea
adc
add
sbb
push
sbb
jb
lods
(bad)
(bad)
dec
in
inc
out
sub
xchg
jmp
in
inc
pop
mov
test
adc
mov
jl
leave
xor
and
stc
xchg
in
xchg
iret
push
ins
jbe
xchg
aas
(bad)
jbe
mov
mov
inc
pusha
sub
push
pop
jmp
imul
in
mov
push
bound
cli
(bad)
sub
loop
pop
add
mov
sub
inc
call
add
cli
inc
cmp
cmp
aam
rol
mov
ss
jg
pop
arpl
popa
cwde
mov
mov
push
jne
sub
jo
(bad)
sub
repz
sahf
test
push
icebp
repnz
push
iret
test
sub
ss
out
pushf
jmp
imul
fwait
jge
push
or
mov
or
xchg
call
mov
xlat
inc
call
daa
pop
stc
in
pop
in
or
mov
call
push
sub
out
pop
push
pop
mov
sbb
aad
add
aas
mov
cs
(bad)
scas
ds
mov
fldcw
jbe
xor
lods
js
in
cmp
and
jbe
fadd
(bad)
and
daa
dec
mov
(bad)
js
push
popa
pop
stos
xchg
cmp
ret
mov
mov
or
xor
fbld
adc
mov
xor
nop
scas
mov
into
lea
add
icebp
int3
and
jle
push
mov
dec
mov
cmp
sbb
ss
and
sub
mov
sub
outs
sbb
jg
pop
push
xchg
sub
cwde
imul
test
jp
jo
jne
push
fs
cmp
out
call
add
cmps
mov
ins
retf
and
lds
xchg
test
adc
nop
(bad)
push
rcr
inc
sub
jp
sub
loope
ss
cwde
jno
movs
pop
or
dec
cli
xor
cmp
imul
sub
push
bndldx
je
ds
jb
add
out
rcl
push
sti
mov
xchg
inc
lea
xchg
daa
lock
(bad)
lods
jmp
fnsave
or
push
adc
je
sub
(bad)
ins
and
add
sbb
sub
mov
or
test
sub
cld
pusha
push
dec
mov
mov
call
test
aas
or
adc
out
test
pop
xor
cmp
xchg
sub
and
fstp
jg
inc
sub
adc
pop
iret
das
cmp
xor
mov
jb
cmp
adc
(bad)
gs
jbe
pop
rol
test
sub
mov
(bad)
fwait
push
fwait
and
push
jo
dec
push
cld
bound
sbb
fisttp
sub
mov
add
add
cli
mov
pop
aad
xor
adc
nop
sbb
in
inc
in
add
xchg
sub
repnz
leave
xchg
fcom
xor
pusha
retf
adc
in
pop
popf
and
xor
mov
xor
mov
addr16
jmp
pop
in
mov
cld
shl
xor
push
mov
xchg
arpl
gs
dec
adc
rol
jae
and
(bad)
xlat
cwde
jl
xor
and
out
retf
cmp
sbb
cmps
sbb
daa
shr
out
jp
std
cmp
fidiv
mov
xchg
movs
inc
scas
addr16
xor
dec
adc
or
or
int
and
xor
add
(bad)
repz
popf
shl
or
int3
push
cmc
dec
fxch
fist
push
scas
shr
push
mov
push
or
sti
fnclex
sahf
push
adc
(bad)
gs
sbb
fidivr
mov
(bad)
test
inc
and
sub
xchg
test
sbb
jle
xor
push
and
mov
and
cmp
add
ret
cwde
call
scas
mov
push
adc
fidiv
cmp
(bad)
repnz
adc
js
cmp
push
ror
sbb
cld
pop
inc
test
stos
popf
call
mov
lods
ins
and
fldenv
call
xchg
loop
push
stc
cwde
cli
out
add
pusha
inc
xchg
pop
jle
xor
icebp
mov
or
push
inc
pop
movs
pop
lock
jbe
xor
ret
and
mov
sub
cmp
pop
das
sahf
inc
mov
imul
in
pavgb
repz
add
sbb
jp
imul
sub
inc
mov
ins
gs
mov
inc
jns
int3
sub
bound
sbb
push
mov
dec
adc
dec
std
retf
mov
aas
jp
xor
test
scas
aam
sub
inc
cmp
ins
sbb
int
cdq
fiadd
push
pop
jbe
sbb
mov
sti
imul
repnz
add
xchg
daa
xor
test
xor
add
inc
dec
ins
pop
pop
test
and
sub
push
cs
jmp
in
cmp
add
stos
push
inc
inc
dec
out
ret
int3
in
or
shl
adc
jmp
inc
mov
xchg
mov
pop
pop
dec
pop
jmp
retf
aaa
scas
xchg
repz
inc
cli
mov
shr
jmp
push
push
ins
ja
imul
call
aaa
nop
test
pop
cli
js
dec
cli
arpl
cmps
loop
or
ds
push
and
jmp
and
dec
nop
retf
dec
dec
fwait
test
rcr
jo
loopne
std
ret
cli
mov
test
retf
(bad)
fsubr
fimul
icebp
sub
inc
or
mov
daa
push
jmp
repnz
sub
or
pop
jb
mov
outs
icebp
push
gs
gs
out
mov
test
lods
pop
xchg
inc
std
cmp
xor
jge
divps
fstp
xchg
push
retf
push
loope
ret
xor
fidivr
es
int
(bad)
pop
sbb
xor
aaa
sar
movs
inc
xchg
adc
xchg
and
sbb
xchg
sbb
push
and
repnz
test
jmp
sbb
mov
sbb
or
push
sahf
mov
mov
inc
push
sbb
aas
adc
xor
sti
aas
xchg
aad
mov
out
lods
mov
ja
leave
jb
mov
add
dec
mov
retf
xchg
lahf
mov
movs
mov
jno
pop
(bad)
mov
lock
push
dec
call
cmp
out
ins
mov
das
fistp
mov
xlat
movs
(bad)
push
(bad)
mov
xor
sbb
mov
loopne
fldenv
ins
pop
jae
scas
in
pusha
sub
fisub
lea
add
mov
adc
mov
mov
jb
stc
xchg
pop
mov
pop
shl
mov
mov
mov
pop
xchg
es
bound
dec
mov
seto
sbb
or
iret
xor
iret
sub
and
int3
jne
mov
sbb
pop
(bad)
fimul
inc
or
(bad)
cmc
xor
mov
mul
push
dec
dec
nop
loope
pusha
cdq
enter
inc
mov
xor
call
in
add
cs
sbb
jns
lahf
fcmovb
pushf
gs
shl
mov
hlt
mov
ins
imul
je
jb
popa
nop
mov
out
jmp
inc
cmp
inc
out
das
mov
leave
js
mov
ficomp
loope
imul
xchg
xor
inc
popa
lea
loope
add
add
outs
inc
hlt
xchg
js
inc
sbb
jge
(bad)
pop
or
pop
pop
mov
mov
adc
push
lock
sub
jg
xor
push
add
cdq
fldcw
shl
arpl
cmps
stos
fist
or
dec
mov
add
fist
cli
test
adc
add
adc
add
mov
sub
idiv
int
shl
js
ret
mov
jecxz
cmc
or
or
cmps
or
pop
inc
jecxz
or
syscall
and
cs
call
dec
lods
xchg
or
pop
rol
into
(bad)
push
lea
xor
jae
inc
leave
and
out
bound
pop
mov
jo
inc
push
push
jmp
mov
data16
lods
mov
mov
add
lods
cmp
jae
cmc
mov
dec
xor
dec
punpcklbw
ins
lea
sbb
and
cmp
dec
mov
mov
push
hlt
fsubr
xchg
or
xchg
jo
mov
leave
lahf
pop
and
jbe
retf
xor
xchg
icebp
pop
adc
rcl
in
ret
ds
cli
imul
popf
lods
stos
mov
sbb
push
pop
cmp
fdivp
test
push
out
rcl
xor
outs
(bad)
sub
adc
or
adc
mov
push
std
cmp
fcomp
(bad)
stc
add
iret
push
iret
xlat
push
imul
aam
es
push
scas
aam
fnstsw
xchg
mov
lea
test
inc
jns
jno
ret
dec
cdq
sbb
jbe
pop
es
sbb
jns
inc
fwait
not
pop
or
jae
arpl
push
and
pop
cmp
inc
adc
(bad)
out
fdiv
movs
push
sbb
pop
bound
xchg
aas
inc
lds
outs
and
out
pop
add
mov
jecxz
retf
nop
jl
xchg
(bad)
sub
fisub
inc
outs
mov
pop
out
fdiv
xor
push
xor
es
out
jb
jmp
xor
and
sbb
adc
stos
shr
in
mov
sub
push
retf
test
xchg
mov
outs
jae
adc
jg
rcr
mov
inc
sub
shr
jmp
xchg
cmp
int3
(bad)
dec
fnstenv
add
sub
xor
sbb
in
iret
push
popa
jle
call
mov
mov
cld
fdivr
enter
add
out
push
fldenv
add
pushf
xchg
stos
sahf
cmp
jo
add
mov
jb
in
sub
inc
in
pop
cmps
test
sbb
fisubr
xchg
add
mov
jae
pop
pusha
out
stos
mov
sbb
fwait
jg
ret
das
ror
mov
fs
and
ins
cmp
add
dec
jmp
leave
ins
mov
xrelease
jecxz
xchg
jmp
mov
pop
sbb
jae
ins
adc
mov
xchg
mov
imul
fistp
mov
loope
mov
enter
push
push
dec
call
out
inc
stos
mov
addr16
jle
pop
dec
call
mov
pop
and
ror
nop
das
in
(bad)
xchg
xchg
xor
jnp
sub
mul
pop
or
xor
cs
pop
popa
mov
sub
push
cmp
xor
cmp
fild
jo
mov
daa
push
add
fidiv
or
(bad)
and
fs
push
nop
fidiv
cmp
out
in
test
pushf
test
cmc
xor
mov
and
test
sbb
in
push
sbb
retf
mov
xor
mov
shr
mov
lods
es
leave
popa
shl
push
ds
inc
fs
xchg
xchg
jecxz
fild
popf
loopne
cmp
clc
mov
test
cmps
xchg
or
and
pop
xchg
lods
dec
pop
add
sub
pop
mov
fild
mov
retf
xchg
stc
aas
movs
cmp
std
push
cmp
out
xchg
jmp
or
mov
iret
aas
out
inc
adc
int
call
std
pop
icebp
loop
gs
int
xor
xor
pop
es
or
pop
jle
jl
sti
std
cdq
adc
sub
imul
sub
fidivr
rcl
gs
fisubr
mov
cmp
jnp
loopne
addr16
push
push
fdiv
mov
call
xor
pop
ins
in
fidiv
or
push
cwde
mov
jmp
jle
sbb
inc
dec
enter
xchg
mov
mov
cwde
mov
into
fdivrp
iret
dec
dec
push
pop
mov
outs
stos
jmp
add
nop
inc
retf
xor
gs
cli
js
xor
push
fistp
pop
mov
lods
in
jns
adc
fidivr
mov
add
push
cs
jbe
mov
fwait
shl
aaa
push
push
(bad)
loope
ret
int
inc
call
jb
inc
call
dec
push
cdq
cmp
push
gs
call
sub
cmp
inc
jecxz
(bad)
fwait
and
inc
ins
mov
jecxz
cs
scas
xchg
imul
out
call
outs
hlt
pop
call
in
add
xor
fsubr
fnstenv
neg
mov
fwait
push
jno
ret
lds
js
pop
add
lods
stc
mov
dec
scas
fstp
out
popf
aam
pop
push
push
cmp
jnp
add
sub
gs
lea
inc
loope
and
fwait
jmp
xchg
push
test
cmps
adc
out
mul
out
icebp
imul
cmp
icebp
movs
nop
xor
aam
dec
(bad)
mov
retf
mov
adc
cld
sbb
push
cmp
xor
lock
dec
imul
test
adc
sbb
inc
jb
add
pushw
ins
inc
es
push
xchg
xchg
movs
mov
or
and
imul
mov
cmps
sub
mov
ficomp
inc
cmp
inc
mov
jge
in
cmp
aad
or
popf
xor
retf
test
mov
inc
test
es
mov
cwde
inc
repnz
imul
sbb
inc
rcl
rcl
retf
call
into
dec
clc
call
jg
jno
jmp
das
inc
mov
cmp
iret
xchg
adc
mov
daa
jbe
sbb
jg
in
fst
inc
adc
repz
icebp
and
lods
jnp
add
pop
pop
lahf
cld
int
jb
je
loopne
cmp
loope
mov
xchg
mov
sub
addr16
icebp
push
or
gs
(bad)
mov
lods
lods
or
sti
push
sub
xor
or
or
stos
jb
sub
adc
fild
retf
cmp
mov
aad
add
(bad)
push
jmp
mov
xor
jmp
int3
xor
pop
or
ror
xchg
cmps
cmp
mov
or
icebp
mov
dec
inc
call
out
sbb
dec
aaa
retf
add
int3
sub
jbe
pusha
repz
xor
dec
push
adc
shl
sub
retf
dec
fdivr
cmp
dec
push
loopne
mov
mov
cmp
jno
retf
xor
inc
or
pop
inc
mov
xchg
or
pop
shl
rcl
xor
shl
aaa
lds
imul
test
push
adc
mov
xchg
iret
adc
cmps
cmps
xor
imul
lea
loop
addr16
push
mov
lods
(bad)
fwait
mov
loope
or
add
sbb
or
sbb
pop
push
sub
dec
gs
js
or
scas
stos
sar
aaa
retf
loop
jp
pop
fadd
inc
std
cld
fisttp
aad
pop
pop
mov
(bad)
mov
ds
push
mov
or
push
adc
push
rcr
(bad)
sbb
rcr
mov
jg
add
sub
in
stos
xchg
lods
adc
cmp
loope
push
js
sbb
dec
mov
mov
jle
mov
lock
and
or
pop
pop
int
icebp
retf
mov
call
inc
jo
call
call
scas
(bad)
cmps
pop
mov
into
repnz
cmp
adc
jmp
call
int3
push
mov
setl
loope
sahf
scas
in
loope
pop
adc
lahf
mov
push
test
dec
rcl
es
or
(bad)
mov
call
jg
lods
outs
bound
pop
js
(bad)
pop
adc
gs
sub
xchg
jecxz
int
jmp
push
and
clc
mov
test
test
out
jg
jns
mov
pop
jg
push
loopne
pmullw
pop
jae
mov
icebp
pop
dec
mov
push
ret
or
pop
sub
cs
mov
loopne
(bad)
leave
ss
mov
push
mov
fisubr
rol
call
es
mov
in
pop
dec
adc
xor
xchg
arpl
mov
iret
cs
movs
pop
ja
popf
(bad)
sub
jnp
or
push
test
lods
jl
or
xchg
dec
mov
sub
mov
das
dec
jnp
das
or
into
jmp
mov
test
sub
dec
mov
adc
push
dec
lea
ret
pop
xchg
retf
(bad)
lods
add
inc
cmp
fidivr
adc
fcmovne
push
jl
test
pop
dec
fxch
add
mov
add
in
lods
mov
ss
cmp
cmp
ja
mov
mov
dec
leave
test
retf
xor
add
dec
dec
mov
mov
xchg
push
int3
ds
rcr
xlat
pop
inc
call
retf
xchg
lock
pop
out
push
clc
int
cmp
cld
sbb
arpl
imul
ins
xchg
jecxz
xor
not
hlt
dec
push
cli
xor
push
push
cs
adc
cmps
fsub
lock
cmp
dec
xor
mov
push
loop
xor
inc
sub
adc
xor
cmp
and
inc
test
sub
lods
int
lock
imul
dec
xchg
pop
mov
pop
ja
lea
out
pusha
push
outs
(bad)
out
jge
out
pop
jbe
test
cmp
aaa
js
inc
movzx
add
popf
mov
fiadd
aas
ret
sub
pop
in
adc
aam
ret
leave
in
std
repnz
call
jg
sbb
sub
das
and
jbe
sub
and
lods
sar
std
cmp
or
pusha
push
cwde
outs
ror
adc
xor
and
sub
icebp
adc
std
cmp
xor
mov
out
outs
in
and
movs
(bad)
jle
fidivr
popa
inc
jne
add
sar
ins
(bad)
(bad)
and
add
add
enter
(bad)
shl
inc
jne
xor
jle
jmp
fild
pushw
icebp
mov
xchg
int3
jl
jb
add
pop
jns
sub
jmp
xor
test
adc
jg
(bad)
mov
mov
jae
jecxz
jp
sub
jmp
repz
ins
mov
cwde
lahf
stc
and
jae
and
xor
or
cmps
inc
pop
mov
and
(bad)
test
or
loope
push
int
jne
mov
cld
jne
inc
inc
mov
add
add
outs
push
leave
jp
pop
jle
mov
or
enter
xchg
leave
pop
iret
test
adc
sbb
add
mov
mov
fcmovnb
push
sub
fcmovnu
sub
or
scas
rcr
fs
(bad)
icebp
out
(bad)
sbb
cld
inc
cmps
inc
std
cmp
hlt
jp
xor
xchg
and
cmp
lds
dec
add
jle
jns
jno
inc
add
sbb
ficomp
jg
inc
fstp
xchg
mov
mov
adc
cmps
sahf
hlt
or
sahf
adc
push
add
pop
jbe
(bad)
into
sub
adc
sahf
ins
dec
mov
fnstsw
ficomp
call
(bad)
shl
pop
jmp
xor
lahf
add
push
pop
xor
test
xor
cmp
mov
xchg
jae
jnp
cdq
jnp
sar
pusha
xchg
stc
sbb
rol
hlt
rep
jne
xlat
xlat
shr
leave
lds
sub
mov
cmp
xchg
xchg
xchg
inc
out
add
mov
aad
or
hlt
add
jmp
dec
push
retf
int
jg
and
outs
ss
cmp
or
mov
push
jmp
int
push
sbb
xor
dec
loopne
inc
retf
imul
fmul
sub
fcomp
das
adc
xlat
test
add
popa
add
hlt
xchg
inc
add
and
pop
jge
jb
cld
dec
jge
loop
inc
outs
aam
stos
gs
add
inc
vpinsrw
xchg
jo
ficomp
cmc
mov
xor
pop
mov
and
loop
inc
and
js
test
jmp
das
shl
inc
stos
movs
jge
pop
aas
jno
div
cmp
test
ins
fadd
ds
iret
sbb
mov
add
push
cmp
mov
gs
cli
sub
or
enter
ja
shl
push
push
and
jmp
loop
ret
fs
mov
and
popa
or
push
xor
xor
gs
lea
retf
int
and
repnz
imul
hlt
movs
mov
push
sub
and
les
cmp
fisttp
cmp
push
pop
lock
or
push
not
xor
mov
pop
mov
and
sub
jmp
inc
pop
lahf
push
fcomip
ins
mov
imul
into
(bad)
clc
and
cwde
test
jne
cs
es
xor
cmc
add
jmp
pushf
(bad)
sti
fdivp
cdq
pop
or
jae
sahf
mov
lods
dec
pop
jnp
test
xchg
adc
stos
cdq
cmp
aas
popa
pop
ins
or
shl
out
mov
cli
push
push
ret
jle
pop
push
loop
sbb
mov
lods
push
add
mov
movs
inc
ret
cmp
loop
movs
add
(bad)
lds
adc
mov
imul
xor
adc
test
jae
cmps
cmc
push
cmovo
pop
pop
movs
xor
sub
clc
inc
outs
and
xchg
pop
mov
cmc
xchg
xor
movs
push
cdq
xchg
aas
or
(bad)
push
fdivp
xchg
(bad)
cs
xor
test
cmps
(bad)
or
pop
cli
popf
retf
test
cmp
pop
pop
mov
es
inc
mov
sub
mov
cli
push
and
mov
mov
sahf
cld
add
mov
loope
inc
shr
inc
and
loope
pop
dec
pop
retf
in
or
push
test
(bad)
inc
push
or
xor
mov
dec
lock
add
pop
in
lods
sub
cmps
xor
int3
in
push
add
pop
xor
(bad)
pop
xor
push
aad
xchg
dec
ins
ja
xor
push
cmp
mov
pop
jl
jmp
jmp
fsubr
ja
pusha
(bad)
out
dec
mov
popf
mov
adc
dec
jb
mov
dec
aam
je
or
dec
rol
pop
add
popf
inc
movs
jno
pop
pop
xchg
fisttp
shl
outs
mov
loopne
dec
xor
arpl
dec
jg
leave
jno
inc
inc
mov
inc
push
popa
sbb
adc
xor
xchg
mov
fild
push
sub
jmp
add
cmp
xchg
adc
pop
jnp
and
in
ins
shl
test
add
(bad)
arpl
xor
jne
nop
sbb
mov
stos
mov
adc
and
jg
xor
inc
and
(bad)
icebp
bound
push
ins
ins
or
xchg
test
cmp
jle
arpl
loop
xor
xor
mov
or
int3
retf
adc
jno
push
loopne
push
test
repz
mov
sub
outs
pop
xchg
cwde
add
lds
fsub
xor
pop
push
callw
out
mov
sbb
adc
pop
xchg
pop
je
aas
mov
dec
inc
add
pop
shr
jmp
sub
outs
and
leave
mov
xchg
les
jb
imul
inc
jns
out
adc
sbb
cld
pop
jbe
xchg
dec
arpl
inc
push
pop
sbb
sub
xchg
enter
test
repnz
(bad)
pop
addr16
in
rcr
sbb
in
or
push
outs
(bad)
je
mov
xor
lea
(bad)
sub
xor
and
dec
in
ds
sub
add
xchg
inc
div
cmp
xor
pop
cld
test
(bad)
std
aas
push
loopne
or
fs
inc
xchg
retf
retf
adc
in
lods
enter
pop
repz
pop
ret
sahf
shr
dec
in
and
push
mov
scas
adc
pop
outs
mov
xor
xor
out
retf
outs
js
ret
repnz
adc
inc
bound
and
cmps
sub
xlat
fldenv
sub
icebp
push
and
mov
and
add
dec
mov
dec
push
ret
and
mov
push
sbb
popa
adc
pop
stos
dec
xchg
mov
out
cmp
pop
or
call
jl
xchg
sub
xor
or
push
sub
pop
dec
cmp
jecxz
pop
jbe
adc
mov
xchg
imul
sahf
pop
div
adc
cmp
pop
pop
sbb
push
adc
(bad)
mov
sbb
pushf
and
test
sub
adc
pusha
jmp
shl
sar
push
mov
inc
outs
in
out
xor
(bad)
sub
idiv
out
fsubr
fucomip
(bad)
jb
(bad)
pushf
xor
shl
add
outs
out
data16
into
(bad)
push
adc
push
out
pop
data16
mov
pop
data16
movs
imul
add
hlt
mov
aas
pop
add
push
jmp
push
lods
into
jp
add
pop
in
push
jp
scas
bound
stos
and
ss
loopne
fcmovnbe
movs
fisttp
inc
xchg
cli
or
fmul
es
mov
mov
lods
jmp
shr
pop
test
sub
icebp
xchg
aam
jl
scas
mov
jmp
(bad)
adc
mov
mov
add
fs
nop
adc
mov
inc
sbb
lea
dec
xchg
jo
push
inc
movs
mov
daa
and
aad
cmp
fild
sbb
shl
dec
or
scas
jne
cld
dec
sub
push
inc
pop
jae
mov
ins
jecxz
addr16
out
inc
outs
jmp
sub
aad
mov
inc
cmp
int
in
cs
js
mov
aaa
test
in
in
movs
push
data16
sbb
(bad)
leave
test
(bad)
sbb
jno
clc
or
or
xor
mov
arpl
push
retf
cmp
retf
mul
sbb
cli
xlat
or
pop
mov
sub
adc
ds
leave
cwde
retf
out
lds
mov
and
mov
mov
sub
in
clc
xchg
adc
int
scas
fst
ja
icebp
or
add
sbb
push
loope
dec
es
call
and
(bad)
daa
xchg
ds
add
lahf
jg
test
mov
pop
test
sti
push
sbb
and
mov
xor
loopne
mov
cmp
jecxz
dec
cmp
outs
out
js
das
bound
(bad)
xchg
(bad)
pushf
nop
push
jmp
addr16
xor
pop
mov
pop
cmp
adc
not
push
or
pop
xor
jae
push
cmp
lahf
daa
nop
int
loopne
test
cmp
xchg
push
sar
loop
sub
inc
and
or
ds
mov
sti
dec
and
neg
popa
imul
xor
inc
in
outs
hlt
mov
ret
xchg
loopne
int
retf
pop
mov
cwde
pop
retf
jmp
xchg
leave
add
arpl
dec
aaa
je
xlat
dec
and
inc
out
rol
jb
push
or
fidiv
pop
mov
lods
stc
sub
mov
dec
pushf
cdq
repz
icebp
clc
mov
mov
adc
out
ins
mov
popa
(bad)
adc
sbb
fidivr
cld
sub
jae
mov
jnp
push
mov
dec
neg
pop
pop
inc
repnz
push
pop
adc
in
pushf
xchg
xchg
add
and
mov
dec
out
stos
mov
in
pop
fdivr
jmp
iret
mov
(bad)
not
dec
inc
leave
stos
lock
push
xchg
and
cdq
mov
stos
sub
inc
mov
and
jmp
adc
iret
int3
repnz
inc
pusha
xor
xor
mov
shl
mov
xchg
sbb
shr
inc
imul
data16
movs
lahf
jg
mov
jnp
xchg
xor
out
mov
lods
fsub
rcr
out
test
and
movs
ret
ins
out
sub
(bad)
mov
mov
xlat
and
sub
es
js
adc
rol
mov
sbb
aas
xchg
xchg
adc
outs
xor
loopne
inc
rol
adc
inc
retf
cmps
in
mov
mov
(bad)
jge
xor
mov
ins
adc
ffree
ror
mov
ss
les
mov
jecxz
imul
mov
mov
in
ja
and
push
cdq
sub
add
adc
dec
repnz
dec
or
or
cmp
test
repz
dec
cmp
jl
push
sub
imul
fsubp
add
imul
pushf
xor
add
mov
clc
(bad)
fldcw
xchg
and
jo
add
dec
xchg
hlt
pop
inc
or
sbb
pop
mov
mov
or
dec
loopne
inc
fst
mov
jb
cmp
inc
sbb
retf
sub
mov
push
cmp
mov
or
sub
icebp
jp
into
dec
je
movs
loopne
enter
sbb
outs
sbb
sbb
arpl
mov
ds
adc
jo
sub
jmp
ss
push
xchg
out
mov
xor
movs
adc
xor
xchg
and
push
dec
outs
jb
xchg
in
movs
pushf
xchg
add
xor
(bad)
xor
data16
(bad)
call
and
cmps
xchg
clc
shl
das
fdivr
cs
fimul
mov
inc
xor
push
movs
fs
jecxz
cmc
fcomp
es
pop
or
pop
inc
nop
mov
les
out
xlat
adc
imul
add
dec
gs
shl
ficom
or
xchg
mov
jmp
lahf
dec
pop
and
pop
xor
lods
inc
popf
xchg
fsub
aad
jg
cld
leave
rcl
(bad)
jne
xlat
in
fs
pop
pop
mov
sub
mov
cmp
sbb
dec
xor
gs
jb
cmp
pop
fwait
inc
add
int3
add
imul
mov
add
fisubr
pop
pop
push
xchg
xchg
lea
mov
cwde
mov
mov
dec
mov
pop
mov
mov
pop
loop
and
cmc
mov
or
mov
(bad)
ins
jae
mov
cmps
and
cmp
jge
call
ins
leave
in
out
sbb
xchg
mov
mov
hlt
mov
cmps
retf
or
fsub
call
call
jne
xor
mov
ins
push
mov
pop
cli
push
or
nop
in
pop
popa
iret
jnp
push
test
push
mov
adc
jle
ds
in
std
into
and
dec
pop
pop
es
ret
ja
pop
imul
lods
stos
mov
sub
retf
sub
pop
ins
push
mov
adc
cmps
bsf
mov
or
in
(bad)
cmp
xchg
mov
cmp
xor
jne
mov
xchg
in
shl
ss
xor
mov
or
inc
in
loope
push
jge
les
mov
xor
(bad)
shl
inc
pop
fidivr
and
mov
sbb
mov
ds
add
sti
aaa
jecxz
lods
fst
int3
fcomip
xchg
add
jo
ins
push
lds
loopne
push
xchg
out
fstp
rcl
(bad)
sbb
xchg
cs
and
cmp
and
jae
mov
les
bound
and
inc
inc
shl
cmp
push
or
add
jno
mov
cmps
dec
sbb
jmp
cmps
xchg
jns
jae
add
jmp
fs
adc
mov
(bad)
mov
out
(bad)
outs
push
je
in
test
ja
pop
popa
sbb
pop
adc
pop
xchg
jmp
jmp
mov
das
and
mov
adc
sahf
outs
repnz
sbb
xor
test
inc
ins
jp
out
cmp
fsubrp
ss
sub
sbb
jno
in
adc
loope
int3
fcmovb
xor
sub
stos
xchg
inc
pop
jmp
mov
out
shl
push
into
mov
jbe
ss
adc
push
sub
in
dec
push
mov
push
rol
push
cli
movs
(bad)
(bad)
ins
adc
pop
fistp
in
aas
mov
push
sar
xchg
push
mov
loopne
sub
mov
jno
xor
jb
dec
cmp
push
jecxz
cdq
repz
(bad)
out
push
adc
fidivr
loop
repz
jae
mov
test
jae
jecxz
loop
or
test
scas
add
and
mov
pop
mov
cmp
mov
adc
dec
xor
fiadd
jl
(bad)
cli
pushf
test
icebp
test
xchg
sti
mov
mov
ret
xor
outs
popf
and
data16
sub
push
or
mov
arpl
xchg
scas
cmp
aam
add
xor
inc
call
je
inc
jl
inc
sahf
mov
prefetch
jl
das
mov
cwde
adc
xchg
xchg
cmc
dec
aaa
push
test
and
outs
sbb
sub
stos
and
mov
xchg
dec
popf
int3
mov
pop
mov
cmps
jecxz
fisttp
jno
daa
xchg
in
outs
out
pop
mov
jbe
xchg
mov
leave
sbb
dec
nop
in
(bad)
cmps
inc
imul
mov
cwde
scas
inc
xor
xchg
inc
mov
loopne
js
mov
or
mov
sahf
pop
(bad)
mov
stos
sub
dec
push
pop
rcl
adc
mov
cmps
(bad)
fisub
mov
push
test
mov
sbb
jno
adc
aam
outs
repz
nop
retf
or
jbe
icebp
es
fidivr
ja
pop
xchg
out
bound
push
sub
jb
jmp
push
cmp
and
and
sbb
test
call
mov
aam
xor
xor
add
in
xchg
cmc
jge
jl
mov
push
(bad)
das
int3
pop
pop
mov
std
mov
mov
pop
add
adc
mov
sahf
ficom
xchg
push
cmp
adc
jo
sub
or
into
sub
push
jo
outs
call
jmp
mov
mov
mov
xchg
xor
jmp
loop
jne
(bad)
and
les
not
xlat
popf
xlat
scas
dec
daa
fist
sub
add
or
fiadd
test
mov
push
mov
xchg
adc
stc
xor
dec
movs
popa
icebp
ss
stos
xor
pop
mov
mov
ja
dec
popa
sub
popf
(bad)
mov
fdivr
dec
(bad)
xchg
mov
fnstsw
xor
loop
or
clc
loop
push
aam
aam
jmp
add
dec
xor
ret
and
sbb
hlt
sub
push
mov
xchg
and
jp
repz
mov
icebp
mov
inc
pusha
xchg
add
sbb
bound
xor
jb
std
add
retf
xor
test
fwait
into
adc
outs
mov
jge
pop
xchg
pop
mov
lods
cs
sub
push
loop
mov
jns
mov
mov
in
mov
push
(bad)
cli
stos
push
std
ret
jo
imul
sbb
mov
mov
dec
cmp
loope
fistp
aad
jmp
icebp
mov
xchg
cwde
in
push
sub
adc
pop
cmp
sbb
or
jg
mov
inc
lods
call
xchg
loope
jnp
(bad)
daa
and
fstp
mov
mov
rcl
cld
cmps
lods
inc
rcr
out
popa
in
mov
and
mov
jo
ds
or
jbe
sub
mov
jmp
mov
out
and
dec
adc
mov
inc
fisubr
leave
test
mov
ins
and
imul
in
(bad)
jp
std
push
int
cmp
in
mov
aad
idiv
outs
hlt
mov
das
sub
call
pop
mov
cmp
(bad)
repnz
das
sar
mov
stos
adc
push
cwde
mov
mov
mov
mov
jae
and
cmc
fadd
aaa
push
imul
cmps
and
mov
in
jmp
fsubrp
jmp
lea
adc
test
aas
jp
popa
sub
js
and
out
out
add
adc
pop
xchg
aam
mov
inc
push
inc
es
add
push
loopne
retf
jge
push
pop
mov
xchg
inc
cmp
dec
sahf
add
adc
stos
mov
inc
ins
xchg
(bad)
popf
push
sub
call
jmp
mov
jle
jecxz
dec
and
arpl
xchg
dec
xor
jle
adc
fisubr
push
pop
inc
test
(bad)
mov
sub
xlat
jge
dec
fisubr
movs
test
push
jno
call
inc
inc
loopne
fmul
xchg
push
loope
jbe
inc
sbb
frstor
call
inc
ficom
sbb
stos
jbe
cwde
jl
ret
or
cwde
arpl
xor
neg
pop
jg
retf
inc
das
fdivr
test
retf
pop
add
sub
sub
loopne
xchg
mov
ins
xchg
or
adc
(bad)
(bad)
push
test
adc
mov
pop
and
inc
fsub
es
pop
cmp
ins
jbe
jge
push
inc
add
(bad)
sbb
aam
jns
clc
scas
lods
bound
call
cmp
pop
mov
cmc
push
in
cmp
cli
inc
fwait
aam
scas
adc
pop
cwde
lods
scas
adc
push
inc
or
call
ja
xor
je
scas
ret
movs
vdivpd
cmps
mov
or
mov
ins
or
jge
inc
ret
pop
das
or
add
sub
adc
adc
push
out
sbb
ins
out
sar
mov
dec
(bad)
sti
sbb
in
inc
push
lods
call
js
push
hlt
stos
pop
sti
in
in
xor
jle
dec
out
cli
sbb
out
add
loop
loop
or
xor
addr16
mov
popf
sbb
jbe
mov
lods
sbb
aas
sbb
xchg
inc
div
sti
scas
xchg
add
sub
or
imul
push
mov
xchg
aaa
jns
cmp
dec
push
outs
xchg
pop
adc
pop
dec
pop
xor
div
call
mov
sub
or
mov
ins
or
ss
ins
movs
jmp
pusha
mov
std
(bad)
retf
or
(bad)
pushf
jno
cld
test
or
or
mov
js
sub
inc
cli
xchg
mov
jno
out
sub
inc
iret
push
adc
dec
movs
mov
mov
jg
and
clc
(bad)
inc
fisttp
ret
mov
push
shr
push
movs
cld
fwait
and
pop
jnp
xchg
jg
or
mov
sub
push
test
aaa
mov
inc
jl
enter
add
sbb
push
lods
add
ins
or
loope
and
adc
sti
aad
mov
js
daa
js
and
or
ret
xor
add
cmc
adc
imul
dec
imul
mov
fisttp
push
pop
jge
mov
ins
add
pushf
sbb
xchg
xor
imul
or
mov
and
pop
add
scas
jb
inc
add
ja
fild
add
pop
inc
or
jb
mov
push
xor
cs
mov
mov
jo
adc
or
jmp
push
cmps
pusha
pop
je
fisttp
out
lock
add
xor
jnp
test
sar
call
(bad)
pushf
(bad)
fs
ss
fs
out
inc
adc
mov
shl
dec
addr16
imul
(bad)
fsubp
jmp
dec
lahf
cmp
jg
retf
fs
ja
inc
mov
dec
rcr
xchg
fucomp
in
sub
and
stos
sub
xor
mov
jl
mov
outs
ja
stc
lods
imul
jae
(bad)
mov
scas
mov
data16
inc
adc
test
add
xchg
sbb
adc
cmps
jp
icebp
fsub
ds
xor
shl
ss
ds
cli
xchg
(bad)
lock
inc
seto
mov
aas
sbb
ror
push
jmp
sar
pop
test
mov
xchg
les
daa
inc
std
popf
xchg
frstor
addr16
rcl
arpl
sbb
ret
add
jmp
(bad)
add
pop
sahf
cmp
push
mov
call
jecxz
xchg
std
fcom
je
in
mov
ficomp
repz
repz
mov
aam
and
inc
cli
dec
fstp
popf
popa
mov
push
aam
ds
in
and
jae
ins
imul
jns
retf
mov
cmp
dec
pop
jl
dec
movs
rcl
cmp
aam
sub
xor
push
cld
enter
in
dec
lods
test
shl
pop
scas
push
neg
xchg
mov
or
and
cmps
loope
out
data16
jb
push
push
dec
add
inc
jmp
pop
mov
push
neg
xchg
push
cmps
xchg
sub
mov
xor
scas
cmc
xchg
mov
and
call
addr16
je
sbb
xor
pop
xacquire
stc
loop
jbe
or
(bad)
ficomp
xor
daa
gs
adc
bound
daa
dec
pusha
mov
loopne
adc
fs
movs
shl
cli
cmp
and
adc
inc
mov
mov
mov
loopne
adc
loopne
in
mul
fs
fistp
add
and
fwait
(bad)
cmp
pop
pusha
loop
ds
stos
dec
cmp
fnstcw
rcl
jmp
jbe
sub
mov
cmp
icebp
clc
push
clc
jmp
jbe
cmp
test
pop
inc
int
inc
dec
mov
sub
sbb
push
scas
mov
jle
outs
xor
cli
ss
add
(bad)
cmc
cwde
inc
xor
(bad)
adc
dec
in
lds
jl
xor
mov
(bad)
xchg
and
dec
shl
xchg
outs
loope
hlt
arpl
xor
push
mov
pop
xor
mov
test
(bad)
(bad)
cs
mov
in
mov
xchg
leave
arpl
mov
mov
sbb
nop
mov
fs
test
pop
push
jns
jge
xor
scas
jmp
cli
ror
ins
loop
inc
cwde
xchg
jge
jmp
aas
add
inc
iret
xchg
imul
(bad)
fiadd
pand
popf
dec
das
dec
push
fiadd
scas
pop
xchg
sbb
mov
xor
mov
icebp
fs
mul
cwde
imul
xor
jl
and
enter
or
data16
cdq
cdq
push
mov
outs
push
xchg
sub
jp
mov
push
aad
retf
cwde
cmp
push
rol
jnp
loopne
add
push
sbb
pop
jl
ret
pop
and
int3
call
mov
rol
mov
js
adc
dec
mov
(bad)
and
pop
push
pop
add
xchg
xor
int
push
dec
pushf
fidiv
xlat
cli
loop
cld
(bad)
test
jno
retf
movs
xchg
xor
gs
xchg
and
jge
test
inc
mov
inc
push
sbb
and
xchg
mov
mov
cmp
add
jmp
cmps
fimul
pop
in
lods
mov
mov
mov
shl
hlt
data16
inc
add
mov
xchg
call
sub
push
jecxz
or
inc
call
mov
stos
fwait
mov
cmp
addr16
push
adc
fnstcw
push
xor
fistp
imul
shl
clc
pop
cli
pop
rol
lahf
push
sbb
repz
dec
fdivr
cs
cmp
ss
inc
mov
sbb
int3
aam
cmps
and
and
test
xchg
mov
std
xchg
fstp
(bad)
and
inc
sbb
jle
lods
pusha
ins
stos
inc
retf
jp
icebp
dec
mov
push
xor
mov
push
in
lds
cmps
cwde
sub
mov
scas
pop
jae
and
fwait
in
out
add
loop
push
pop
sub
push
outs
mov
sar
popf
shl
push
sbb
dec
add
inc
popf
or
push
xchg
dec
sub
jbe
leave
aam
das
push
mov
mov
test
mov
outs
cmps
push
test
stos
loope
mov
cmp
mov
jbe
mov
popf
xchg
xchg
or
dec
test
pop
or
mov
(bad)
mov
stos
call
mov
sub
mov
pop
and
or
aam
push
mov
pop
add
xor
jno
jle
xor
clc
(bad)
mov
cli
in
xor
rcr
stos
fldl2t
push
or
jbe
in
xchg
ins
sub
mov
out
inc
mov
xchg
mov
xor
loopne
bound
hlt
mov
cld
sub
ret
pop
push
jno
popf
inc
mov
mov
(bad)
fsubr
mov
imul
call
push
sub
adc
stos
pop
repnz
sbb
(bad)
(bad)
rcl
mov
dec
jns
ins
fisubr
and
pop
mov
lahf
jne
jnp
sbb
(bad)
mov
lahf
repnz
fsub
inc
pushf
stos
retf
mov
test
mov
(bad)
inc
call
add
push
and
adc
and
jbe
xor
inc
repz
test
dec
lea
cmp
lea
pop
mov
mov
adc
xchg
cmp
push
inc
fdivr
aad
cmp
add
mov
nop
test
lea
pop
(bad)
std
jbe
mov
jo
movs
pop
add
inc
xchg
mov
inc
clc
into
shl
ins
push
stos
fcmovu
jbe
or
fidivr
jp
cmps
add
cwde
fdiv
adc
xchg
xlat
jmp
lea
adc
int
(bad)
push
aas
popf
sbb
fadd
das
outs
stos
cmp
outs
(bad)
stos
xchg
sub
arpl
movs
imul
mov
int3
mov
push
mov
cmp
movs
jne
cdq
rol
push
or
sub
rol
fucomip
hlt
push
and
rcr
push
retf
mov
cmp
mov
sub
aas
(bad)
jle
mov
adc
lods
bound
xchg
pop
mov
dec
mov
mov
clc
xchg
jmp
icebp
mov
pop
cmp
pop
pop
sbb
scas
rcr
sub
push
pop
jge
mov
mov
add
shr
push
nop
inc
sub
(bad)
push
sub
xchg
pop
push
lahf
lods
std
sbb
dec
xor
(bad)
jb
inc
push
pop
sub
or
popa
jno
addr16
shl
cmp
mov
in
sbb
xchg
jg
(bad)
sub
cld
fbstp
lods
and
cmps
jl
mov
sub
out
sbb
jg
inc
push
cmps
xchg
les
jno
add
xchg
mov
mov
sub
iret
xor
sti
xor
popa
jle
movs
cmps
jae
scas
(bad)
mov
xor
inc
sbb
push
cmps
fadd
sar
test
stc
sub
push
outs
pop
jmp
push
les
mov
out
cmp
sub
ins
fist
jnp
test
out
sahf
pop
or
out
push
lods
stos
fst
jecxz
jne
mov
mov
pop
push
add
sub
sub
dec
fistp
cmp
ds
adc
xchg
push
sbb
and
aam
add
cwde
sub
lods
push
add
popa
ror
in
addr16
(bad)
loope
sub
and
shl
lea
inc
or
popf
addr16
(bad)
mov
sbb
sub
mov
sbb
xchg
nop
inc
jl
bound
jnp
shl
icebp
and
mov
pop
loop
and
dec
and
dec
cmp
ret
lock
mov
or
add
adc
imul
push
fsub
push
in
mov
cmps
(bad)
ja
out
test
clc
mov
xor
leave
pop
fs
stc
inc
mov
(bad)
enter
adc
repnz
mov
and
ret
pop
inc
mov
or
lock
sbb
cmp
cmps
jl
jmp
pop
mov
dec
cmps
xor
mov
cmp
hlt
bound
je
cmp
jge
std
mov
out
ins
mov
adc
sbb
int3
mov
mov
push
cmp
sbb
or
pushf
stos
in
dec
mov
repnz
pop
dec
imul
sub
daa
call
out
test
outs
movs
mov
pop
ret
mov
loopne
int3
rcr
je
addr16
(bad)
sub
fs
lds
rcl
inc
mov
push
push
ret
jge
(bad)
stos
nop
push
ret
lods
pcmpeqw
jle
arpl
cmp
sbb
pop
movq
mov
ins
jmp
arpl
loopne
fimul
and
out
sbb
sbb
fadd
and
lods
pop
mov
out
shr
(bad)
push
sub
in
loope
cmp
es
arpl
xchg
adc
scas
jecxz
jle
sub
mov
or
cmp
int
and
cmp
pop
fldenv
movs
push
fadd
pop
jle
dec
or
in
and
retf
loopne
mov
dec
dec
dec
pop
(bad)
mov
mov
push
movs
sub
bound
mov
cmps
jle
in
adc
fcom
jns
push
(bad)
or
inc
mov
popa
dec
es
adc
inc
mov
sahf
ret
js
inc
mov
mov
pusha
imul
mov
sbb
push
push
retf
mov
xchg
mov
sub
int3
pop
xor
pushf
out
ret
cmp
cmc
mov
leave
or
stc
or
push
push
lds
and
push
sub
jmp
add
lea
pop
mov
aad
mov
push
mov
fisub
(bad)
fild
cdq
mov
nop
dec
sbb
mov
push
jmp
std
mov
pushf
test
(bad)
push
pop
les
cmc
das
clc
mov
or
icebp
sbb
add
sbb
aaa
jo
xor
push
mov
in
mul
xor
jo
push
sub
cs
sbb
mov
mov
out
jb
mov
enter
cwde
adc
outs
cli
adc
cld
or
fdivr
and
inc
cdq
mov
adc
adc
sbb
push
fbstp
icebp
sbb
fild
test
adc
ret
ins
lods
shl
popa
shl
int
sbb
faddp
call
mov
jp
push
in
test
addr16
mov
outs
ret
test
xor
stc
out
int3
and
or
and
xor
es
clc
xchg
add
xor
and
cld
push
xor
pop
mov
jl
jo
dec
in
das
fstp
add
clc
sbb
jmp
push
mov
test
(bad)
arpl
fisttp
xor
dec
mov
jmp
xlat
call
dec
lods
sub
popf
mov
(bad)
cli
mov
outs
or
sub
dec
ds
movs
and
or
cmps
mov
enter
stos
pop
inc
cmp
test
ficomp
loope
sub
or
daa
fdiv
or
call
pop
xchg
call
mov
(bad)
movs
mov
sahf
ret
les
out
sbb
mov
add
stc
icebp
addr16
es
ret
pop
pop
mov
dec
jmp
pop
stos
shl
jmp
fadd
cdq
ja
das
xchg
fstp
add
jmp
xlat
retf
sbb
aas
jle
(bad)
ror
pop
add
jnp
test
cld
cmps
push
cld
xor
frstor
scas
lods
lods
in
imul
mov
(bad)
ins
or
or
sbb
fcom
cdq
add
mov
(bad)
sbb
pop
sbb
adc
lods
push
push
mov
mov
popa
mov
adc
dec
sti
inc
push
cmps
out
retf
and
fstp
not
cli
call
stos
mov
xor
stos
sub
jbe
dec
inc
add
mov
add
xlat
mov
add
jle
aas
cli
and
cmp
jge
pop
add
movs
imul
jle
cmps
ffreep
jmp
pop
ret
jl
leave
imul
les
mov
mov
iret
movs
or
fisubr
rcr
jns
scas
pop
(bad)
popa
ins
cli
repnz
or
ret
jnp
or
call
push
nop
cmp
push
bound
(bad)
sub
sbb
hlt
icebp
mov
fsubrp
sbb
aaa
scas
cmc
jge
(bad)
xchg
xor
mov
imul
mov
cmps
rcl
mov
mov
(bad)
push
mov
inc
xor
(bad)
xchg
pop
add
ja
lock
hlt
ss
into
in
push
xor
popa
jno
xor
and
xor
xlat
outs
mov
dec
loope
mov
stos
xor
add
dec
mov
push
pop
mov
adc
adc
scas
mov
jno
stos
jle
xchg
inc
in
clc
dec
dec
js
jle
jnp
mov
mov
fst
pop
sbb
(bad)
icebp
int3
cmp
mov
jns
push
mov
pop
and
fiadd
push
cmp
sbb
cmpxchg
test
ret
imul
mov
mov
repnz
pop
movs
cmp
fadd
and
pop
sub
dec
mov
xor
int
sub
sbb
push
pushf
adc
dec
pushf
and
imul
mov
pop
test
clc
push
push
jb
push
pop
pop
lods
clc
mov
dec
repnz
retf
popa
push
mov
pop
je
pop
into
add
add
jmp
repz
adc
adc
(bad)
retf
xor
inc
xchg
ins
push
adc
pop
pushf
mov
scas
mov
adc
loope
ss
outs
int
bound
push
(bad)
add
adc
test
jmp
inc
scas
jmp
shl
cdq
mov
inc
mov
cli
(bad)
xor
mov
and
and
sub
sbb
ins
clc
mov
enter
pop
mov
cmp
push
jbe
pop
adc
loope
fbld
popa
mov
lock
inc
mov
xchg
mov
pop
iret
loop
sub
push
jne
jo
arpl
arpl
dec
xchg
jp
mov
(bad)
ret
fadd
icebp
mov
xchg
mov
cmp
ret
fiadd
call
mov
push
int3
aas
fs
popa
jnp
dec
ins
pop
retf
test
test
lock
loop
dec
and
adc
mov
jmp
arpl
aaa
in
sbb
adc
call
jmp
das
leave
cmp
dec
or
repnz
mov
mov
xor
ds
js
push
mov
sub
(bad)
(bad)
scas
ja
jmp
gs
stos
adc
push
call
pop
test
xlat
outs
(bad)
jno
loopne
ss
or
mov
add
xchg
lds
push
mov
mov
dec
pop
and
xchg
pop
int
cdq
enter
push
and
sti
jl
or
jo
push
mov
movs
mov
call
iret
in
pop
mov
(bad)
sbb
sub
bound
and
adc
cwde
xchg
and
rol
sbb
cmps
cld
pop
rol
adc
xchg
stc
and
push
aad
sub
sub
fldenv
jmp
(bad)
rol
sbb
mov
mov
xchg
inc
(bad)
fwait
ins
xchg
imul
mov
(bad)
sbb
repz
pop
in
push
stc
push
lock
xor
inc
mov
sub
xlat
scas
mov
xor
stc
inc
push
cli
cmps
adc
(bad)
push
sbb
cmp
(bad)
into
mov
hlt
mov
push
add
mov
sub
mov
and
sub
imul
pop
test
hlt
inc
adc
lods
in
cmps
pop
int
pop
mov
scas
fld
pop
push
sbb
dec
inc
iret
mov
push
sub
mov
mov
inc
lock
xchg
pop
mov
(bad)
mov
int3
xlat
jmp
retf
xchg
adc
xor
stos
jle
jle
rcl
add
mov
sbb
ror
mov
mov
fisttp
add
mov
test
fwait
arpl
pop
mov
out
popf
pop
rol
mov
(bad)
sbb
into
dec
retf
push
adc
leave
repz
mov
movs
lods
adc
pop
out
int3
pop
icebp
cmps
and
movs
jecxz
icebp
push
fwait
inc
cmp
sbb
mov
mov
call
mov
adc
cmp
ret
and
sbb
test
test
jg
outs
push
lahf
aas
pop
xor
rol
lods
jno
cld
and
(bad)
(bad)
xchg
adc
sti
jmp
retf
mov
sub
data16
lahf
pop
pop
aas
push
fsubr
mov
push
jle
loope
mov
mov
test
mov
loopne
sar
jb
fs
cld
xlat
xchg
mov
mov
iret
xlat
fdivr
adc
das
xchg
popf
or
mov
pusha
shl
add
ins
lock
xchg
add
dec
nop
cmps
xchg
adc
xlat
mov
sbb
xchg
mov
adc
inc
inc
mov
add
xor
mov
xor
mov
push
stos
cmps
jg
enter
jle
test
add
repnz
adc
fxch
jp
mov
outs
popa
repz
aaa
sub
popf
out
xchg
sub
sbb
rol
test
inc
xor
or
neg
and
lds
mov
popa
adc
mov
sbb
scas
mov
popa
popf
jno
sub
add
push
add
sbb
xor
cmps
stos
test
sbb
out
jnp
dec
pop
xchg
dec
shl
jmp
sti
int3
jo
(bad)
pop
repz
ret
or
out
xchg
xchg
mov
or
jns
cmp
sub
jns
xlat
out
dec
xor
aad
inc
sbb
es
push
hlt
mov
cli
test
ficomp
pop
mov
cmc
jne
jecxz
sbb
in
lahf
retf
dec
jmp
dec
pop
jo
mov
pop
fimul
adc
jo
mov
sti
out
and
inc
call
retf
sub
xchg
mov
popf
gs
mov
xchg
xchg
rol
cmovne
or
push
leave
jbe
ja
jno
(bad)
jns
mov
mov
or
in
pop
pop
mov
or
pop
(bad)
cld
jl
stc
cmps
mov
pop
aas
ret
dec
jmp
cs
popa
xor
mul
shl
test
dec
int3
loop
pop
mov
pop
mov
cwde
lea
adc
sbb
cmps
pop
repnz
lds
sbb
icebp
push
inc
in
inc
int
mov
lods
push
sub
jnp
into
int3
mov
mov
mov
xchg
(bad)
adc
inc
leave
repnz
xchg
cmp
call
sub
enter
lea
inc
cmp
push
inc
dec
out
mov
inc
and
push
shr
pmaxub
cmp
cld
pop
jecxz
imul
and
popa
inc
inc
mov
mov
jb
xlat
enter
loopne
clc
cmp
repz
in
out
and
sub
popf
(bad)
jno
(bad)
shl
cld
sar
mov
sar
pop
or
xor
cmps
fidivr
xor
sbb
das
cmc
lea
outs
movs
inc
add
ret
inc
sub
jno
ss
mov
arpl
(bad)
popa
sub
adc
pop
fbstp
and
ret
cld
stc
push
mov
fiadd
mov
push
adc
call
iret
push
xchg
sbb
nop
sub
movs
gs
stc
adc
pop
mov
cmp
or
mov
or
fwait
adc
out
add
xchg
inc
add
and
es
inc
ret
pop
lods
mov
mov
dec
pop
jle
and
and
xchg
and
xor
leave
arpl
je
mov
mov
dec
outs
mov
lock
cli
jle
shr
jo
cmps
mov
inc
xor
movd
or
cmp
into
jmp
daa
xchg
aam
imul
je
das
sti
ss
(bad)
fild
int3
aam
sti
pop
add
and
ja
movs
jle
jp
push
dec
xchg
nop
enter
adc
lahf
cmp
pop
push
jmp
movs
fisttp
xchg
add
adc
(bad)
aam
out
or
dec
(bad)
add
mov
sbb
fucomip
cmp
bound
or
ins
outs
int3
in
movs
aam
int3
dec
pop
lds
sahf
jb
adc
loop
cs
add
mov
repz
push
mov
add
(bad)
ret
stc
adc
sub
popf
loop
cmp
mov
retf
enter
test
adc
sbb
dec
je
ds
mov
fstp
xchg
dec
mov
xor
sti
(bad)
inc
dec
or
cmp
div
out
movs
dec
(bad)
xchg
xor
repz
ins
cmp
ins
jle
mov
out
xchg
sbb
xor
addr16
rol
(bad)
push
mov
loopne
jo
popa
xor
scas
retf
sbb
inc
dec
test
adc
fcomp
jmp
push
nop
test
mov
jmp
inc
or
clc
xchg
ds
mov
cld
imul
add
xchg
sahf
mov
and
cmps
push
mov
ds
(bad)
sahf
jbe
mov
and
cmp
and
(bad)
in
icebp
jle
inc
or
mov
inc
xor
ins
mov
pop
add
mov
mov
ret
pop
ins
dec
call
aaa
jne
outs
nop
leave
sub
(bad)
loop
fcomp
call
lods
push
mov
xchg
jb
repnz
rcr
loopne
pushf
mov
mov
in
mov
push
out
mov
push
in
pop
push
sbb
cs
jnp
and
out
sub
dec
ret
xchg
cmps
dec
cmps
fisubr
push
cs
pop
cmps
fs
fcom
call
jecxz
inc
test
in
fsub
xchg
mov
test
fidivr
pop
sub
and
xchg
test
enter
daa
add
xor
fdiv
lds
mov
and
stc
fst
mov
sahf
jmp
stos
ins
aam
inc
xor
fs
add
sbb
inc
xchg
xor
rcr
test
shl
rcl
push
inc
xchg
gs
inc
dec
leave
or
stc
sahf
enter
inc
cmp
imul
fidiv
jge
shr
call
imul
adc
stos
push
or
ja
dec
inc
je
mov
loopne
fidivr
call
pop
xor
repnz
out
test
out
mov
push
push
xlat
cmps
inc
add
push
daa
cmp
mov
inc
(bad)
mov
adc
lock
jge
call
push
ror
xor
xchg
jo
fmul
push
stc
fidivr
es
cmc
jo
xor
jb
outs
push
and
inc
sbb
jge
jl
jo
mov
mov
imul
cli
push
lock
fstp
les
fxch
mov
cmps
retf
inc
push
mov
fcom
xor
inc
ror
gs
js
in
movs
add
mov
cli
cld
arpl
test
rcr
xor
push
shl
(bad)
or
pop
inc
mov
shr
inc
sar
push
push
test
enter
repz
jo
es
pop
pop
mov
(bad)
ret
and
stos
scas
pop
push
hlt
cwde
push
scas
mov
sub
fisttp
cmp
and
and
push
xor
cmps
(bad)
cmps
addr16
movs
xor
arpl
arpl
mov
jg
adc
movs
push
icebp
retf
icebp
xchg
or
sar
adc
mov
jbe
dec
or
jmp
test
popa
mov
adc
fs
xor
iret
add
mov
jb
sar
cmp
cmp
add
imul
loopne
sub
in
jmp
shl
pop
leave
mov
xchg
cli
cs
cmp
and
or
xchg
dec
sub
std
mov
xor
inc
(bad)
fisttp
shl
repz
push
aas
pop
test
cmps
popa
cs
movs
or
popa
popa
mov
inc
adc
lock
fsub
pop
inc
(bad)
jge
outs
sar
in
das
das
push
ins
pop
mov
xchg
sahf
mov
shl
mov
jmp
ret
in
or
arpl
mov
adc
ja
retf
aad
mov
jmp
test
stos
jb
lods
push
fnsave
fucom
aad
jbe
sbb
das
xchg
sub
call
dec
repz
popa
imul
cmp
jno
ins
stos
pop
aaa
sbb
inc
xor
pop
add
xor
(bad)
sub
cmp
ret
pop
aaa
pop
mov
cdq
int3
or
movs
cmp
dec
outs
mov
push
(bad)
icebp
cmp
inc
and
jp
arpl
fwait
mov
(bad)
sbb
pop
mov
fisubr
mov
dec
mov
add
xor
xor
inc
push
rcl
jne
adc
xor
ins
mov
jo
jns
cdq
mov
repz
lods
repnz
push
inc
or
pop
mov
sub
push
fiadd
out
fwait
js
pop
retf
nop
xchg
movs
ins
cmps
add
call
and
cmps
bnd
ret
dec
fadd
in
jecxz
aam
xchg
(bad)
jae
adc
call
jne
push
push
ins
mov
or
push
(bad)
stos
pop
pop
rcl
inc
call
fs
popa
ret
or
in
in
cmp
add
mov
fst
push
add
stos
xor
hlt
xlat
adc
mov
in
out
lods
dec
dec
cmps
jae
mov
xor
lods
sbb
loope
fistp
iret
aad
ins
in
add
push
sub
xor
fsubr
push
cmc
ret
mov
sub
in
(bad)
pop
add
mov
mov
pop
inc
inc
jo
and
(bad)
retf
jmp
mov
pop
js
clc
xchg
clc
aad
xchg
pusha
mov
push
jnp
sbb
aaa
or
pop
mov
fnstenv
dec
cmp
sbb
dec
jmp
mov
xor
adc
lods
ja
jb
jo
jle
enter
sbb
mov
xchg
cmps
cmps
mov
cmp
mov
adc
xchg
push
cmp
xor
jb
icebp
mov
out
push
mov
push
jmp
ret
jb
push
jmp
icebp
xor
adc
inc
jbe
inc
movs
in
ror
mov
adc
ds
adc
(bad)
dec
(bad)
jne
shl
pop
(bad)
pop
jmp
push
xchg
sar
(bad)
in
pop
xor
imul
ret
das
jae
in
sbb
fild
iret
clc
loopne
leave
and
xor
mov
dec
cmp
arpl
scas
or
pop
add
outs
jno
sbb
loope
test
ins
xchg
sbb
inc
test
adc
jl
or
fstp
dec
and
jbe
cwde
mov
pop
jno
clc
in
shr
jns
sbb
mov
inc
add
sub
xor
and
mov
jle
push
mov
sahf
adc
adc
jo
ja
sub
or
fdivrp
adc
rcl
test
je
fisttp
fsub
inc
pop
mov
cmp
xchg
mov
cwde
cmps
call
shr
xchg
sub
and
iret
jb
push
pop
dec
ror
shl
inc
lock
lock
js
das
ss
inc
cmp
add
mov
adc
in
push
pop
cmp
jle
loope
mov
push
add
or
dec
in
dec
cmp
into
cli
fdivr
and
cmp
xor
mov
cs
std
jp
aad
cmps
sub
xchg
pop
adc
int3
push
pop
mov
stos
push
xchg
out
fs
inc
xchg
aad
xor
dec
mov
inc
in
jno
xchg
mov
inc
sahf
mov
cmp
dec
cmc
and
inc
test
dec
out
and
cli
mov
inc
movs
popa
mov
repz
stos
mov
jb
dec
xor
pop
outs
test
adc
ja
inc
movs
and
loopne
push
xchg
jno
or
pop
add
lahf
mov
popf
xor
cwde
jmp
aam
push
push
jns
xchg
push
xlat
mov
adc
and
stos
xlat
pusha
daa
adc
and
push
ret
xchg
cmp
int3
jae
ss
retf
cmc
shl
xchg
sbb
push
cmp
push
xor
inc
adc
(bad)
in
stc
sub
jae
add
inc
adc
stos
out
int3
mov
daa
mov
fstp
or
sub
push
jp
sahf
stos
mov
jp
(bad)
cmp
out
ds
imul
add
imul
dec
sbb
sbb
dec
test
dec
lods
pop
mov
int
(bad)
les
pusha
lods
and
jmp
fsub
push
cs
mov
nop
mov
adc
add
fwait
gs
cmc
dec
mov
ret
push
cwde
jbe
rcl
aad
adc
push
mov
xor
fst
cmps
push
in
js
inc
cmp
pop
fimul
pop
mov
adc
ins
jmp
xchg
jmp
adc
jmp
sbb
and
mov
add
cs
mov
stos
lea
inc
outs
out
loope
mov
sub
es
mov
xchg
test
xor
shr
and
mov
arpl
test
into
jae
sar
in
mov
pop
stc
inc
rcl
(bad)
aam
mov
ficom
push
in
jmp
jno
pop
sub
mov
and
mov
or
jno
and
inc
or
(bad)
xchg
push
cdq
mov
fs
adc
pop
adc
(bad)
dec
or
mov
je
jmp
or
lea
dec
push
pushf
cld
cwde
sub
xchg
mov
cmps
jl
test
in
xor
xor
sbb
ja
in
int3
xchg
mov
test
jecxz
clc
ret
mov
inc
push
pushf
outs
pop
mov
pop
cmps
dec
sbb
add
jae
jae
loop
rol
mov
dec
mov
gs
sar
retf
push
xor
ins
pop
cmp
xchg
bound
cli
in
cmp
retf
push
stc
dec
arpl
push
jb
jns
les
jge
xor
or
pop
lods
cwde
out
call
in
mov
and
and
xor
call
test
mov
mov
sti
inc
leave
imul
and
push
jmp
or
clc
jmp
fist
into
adc
shl
rol
mov
lea
dec
sti
cmps
cld
adc
ret
and
lock
push
fcmove
es
into
mov
adc
jecxz
push
iret
jo
mov
mov
rcl
xor
adc
fbld
rol
scas
mov
inc
pop
pop
inc
fmul
pop
pop
inc
stos
sub
pop
fisttp
cmp
sar
xchg
repz
mov
sub
push
sub
jmp
mov
cwde
sbb
jne
out
jb
push
cmp
adc
jmp
xchg
mov
mov
jo
out
sub
in
movs
idiv
(bad)
int
fcomp
xor
push
cmp
dec
sbb
mov
ins
out
lahf
inc
leave
dec
jl
aas
xchg
mov
jecxz
fldcw
jl
inc
adc
sbb
pop
data16
aas
add
(bad)
sahf
add
jne
popa
add
repnz
lds
cmp
pusha
xor
in
jnp
popf
mov
in
cmp
xchg
or
dec
cmp
jmp
movs
adc
inc
xlat
sub
xchg
dec
jae
mov
out
aaa
jmp
rcr
mov
pop
xchg
or
inc
into
inc
sbb
xor
mov
addr16
sbb
fsub
sub
jle
and
adc
inc
mov
pop
sahf
mov
adc
addr16
test
jb
test
cmp
adc
mov
les
pop
loopne
mov
aas
int
mov
cli
icebp
clc
je
ss
aam
inc
jge
jecxz
add
div
rcl
and
out
sub
jge
cmc
popf
jmp
inc
jb
sbb
mov
stos
and
sti
mov
push
add
(bad)
xor
jmp
or
xlat
push
and
xor
je
xor
sbb
jmp
or
fdiv
mov
push
adc
mov
cmp
adc
xchg
aad
mov
and
xor
push
mov
mov
setnp
jge
cdq
xchg
pop
cmps
and
or
loope
cmp
mov
adc
dec
add
push
push
mov
mov
cli
xor
mov
xor
or
rcl
dec
sub
mov
and
popf
or
scas
dec
xor
jae
popa
mov
call
imul
test
test
bsf
mov
aas
add
or
mov
jno
jb
in
inc
inc
dec
icebp
ret
jecxz
test
push
(bad)
mov
adc
mov
sahf
or
add
outs
stc
jne
or
cmps
pop
stos
je
mov
pushf
or
xor
inc
or
push
push
or
jecxz
test
sub
lods
jo
das
adc
(bad)
pop
cmp
ss
push
stos
mov
mov
into
das
pushf
ror
rcl
pop
jmp
out
and
dec
and
pop
mov
xchg
jae
mov
fucomp
je
pop
popa
sbb
lods
in
sub
pop
fidiv
retf
mov
(bad)
xchg
imul
push
cmp
sub
dec
dec
jmp
sub
fwait
(bad)
dec
pop
daa
out
add
sub
mov
stos
fxch
ja
xchg
dec
out
icebp
loop
repz
aam
jne
mov
push
lods
mov
dec
mov
(bad)
lods
sbb
pop
outs
mov
and
jmp
xchg
jns
adc
and
cmps
cs
das
dec
jg
jns
jo
mov
mov
adc
rcr
push
loopne
xor
mov
idiv
imul
mov
(bad)
push
add
dec
jmp
mov
sub
xor
neg
add
mov
pusha
push
lahf
test
sbb
inc
popa
test
addr16
aas
mov
xchg
jg
sti
adc
(bad)
retf
mov
fld
sub
dec
adc
mov
dec
mov
cli
adc
call
pop
mov
push
jns
xchg
adc
mov
aaa
pusha
cli
out
and
aas
(bad)
inc
xor
sbb
(bad)
leave
lods
xchg
fwait
int3
stos
jmp
div
mov
mov
cmovne
or
mov
mov
push
mov
or
ja
push
xlat
sbb
sub
es
mov
imul
fisttp
cmc
fwait
mov
mov
xchg
xor
into
adc
xchg
mov
or
(bad)
enter
mov
dec
push
stos
cmp
xchg
xchg
lea
mov
cmp
pop
lock
dec
lods
inc
(bad)
icebp
out
push
xchg
push
in
(bad)
mov
mov
fnstcw
sbb
pop
jno
sahf
int3
repnz
cs
push
mov
cmp
je
mov
outs
sbb
aaa
inc
cli
pop
bound
data16
aam
sub
xchg
sub
leave
xor
ja
imul
jl
pop
inc
(bad)
(bad)
dec
or
pop
icebp
lock
inc
out
push
mov
test
cmp
mov
es
in
cdq
(bad)
call
jge
rcl
lds
or
jae
jmp
xchg
pop
les
fadd
repz
sub
rcl
scas
lea
cmp
(bad)
inc
loope
cmp
leave
leave
out
gs
xchg
test
jg
pop
jge
add
pop
mov
js
sahf
jae
push
dec
push
jmp
pushf
rol
dec
daa
jge
jecxz
pop
sub
cli
add
jp
fisttp
iret
jae
mov
jg
fmul
cmc
xlat
xor
out
test
xchg
aas
cmp
fwait
dec
fld
shl
out
dec
cmp
and
movs
jl
mov
retf
xchg
jae
pcmpgtb
xchg
mov
jnp
clc
movs
sar
dec
push
adc
push
mov
mov
scas
aam
ja
in
mov
rcr
and
push
add
mov
loopne
dec
xor
mov
mov
out
inc
jo
add
push
jb
mov
out
loopne
out
xor
or
sti
or
ins
push
ret
enter
inc
add
(bad)
mov
mul
cwde
xor
clc
add
shr
std
jle
cmp
inc
ins
sbb
add
gs
lea
and
adc
repnz
jae
test
loopne
xor
and
dec
pop
stos
ret
jns
or
int
push
adc
sub
mov
and
int
sub
ficomp
sub
das
mov
outs
jmp
inc
dec
inc
cmp
push
ss
xchg
jge
or
std
jae
dec
jae
cwde
xchg
dec
cmp
inc
addr16
leave
cmp
ins
and
loopne
cmp
mov
xchg
(bad)
aam
data16
inc
jecxz
push
push
xchg
mov
rcr
xchg
pop
inc
xchg
loope
dec
es
cwde
push
gs
cld
pop
scas
add
xchg
cs
adc
into
mov
pop
mov
icebp
mov
push
fcomip
xchg
cld
cli
jae
xchg
inc
xchg
rol
mov
call
cld
push
lea
sbb
mov
(bad)
mov
fisub
xor
adc
mov
test
dec
mov
jge
xor
leave
ins
call
inc
cs
dec
push
push
call
push
push
js
ja
jle
inc
push
xchg
jb
cmps
mov
add
std
call
xchg
xchg
dec
rol
xor
inc
jne
mov
jl
xchg
rcr
mov
sbb
mov
ret
test
and
test
loop
dec
sub
daa
(bad)
jmp
inc
mov
add
cmp
xor
ffreep
std
fsubr
adc
loopne
leave
push
jg
mov
inc
inc
push
mov
push
mov
pusha
rcr
adc
shl
lods
jp
sahf
pop
add
mov
sbb
mov
push
retf
ins
mov
pushf
mov
dec
ins
cmps
jnp
std
cmp
mov
test
cmp
(bad)
and
lods
xor
xchg
jne
mov
or
aad
push
xchg
mov
adc
jl
aaa
pop
popf
test
xchg
gs
cmp
and
adc
das
dec
aad
js
sub
pop
cmp
cmps
mov
scas
test
in
push
pop
adc
pushf
inc
sti
aas
outs
scas
jne
ret
out
lea
dec
ret
jno
inc
dec
(bad)
(bad)
mov
cmc
sub
push
dec
jmp
adc
adc
mov
dec
xor
xchg
dec
xchg
xor
jb
(bad)
retf
or
out
cmp
outs
cld
cs
cmps
cli
jle
sub
pop
retf
sbb
adc
fmul
(bad)
sti
jnp
add
xchg
pop
fdiv
out
sub
ret
add
and
mov
mov
bound
dec
dec
and
mov
(bad)
mov
mov
or
(bad)
out
push
(bad)
into
out
and
or
and
cli
push
std
cmp
loope
repz
lods
aaa
leave
jge
lahf
pop
frstpm(287
sub
(bad)
stc
iret
fstp
xchg
adc
movs
push
mov
aas
push
test
mov
xchg
popa
dec
xchg
stos
mov
scas
mov
out
adc
mov
mov
cld
fstp
fisubr
xchg
leave
push
aaa
retf
data16
loope
sahf
xlat
outs
enter
addr16
loopne
repz
and
daa
aaa
and
jmp
arpl
mov
test
adc
sbb
add
sti
mov
test
scas
retf
xor
xchg
sbb
xor
enter
push
test
ret
mov
pop
push
retf
fs
cmp
inc
mov
bnd
aad
add
mov
or
push
dec
imul
add
movntq
out
mov
xlat
sub
repnz
mov
pop
mov
push
cmp
dec
xchg
test
iret
popa
mov
addr16
in
in
jmp
mov
call
jg
gs
or
jbe
jmp
jae
dec
dec
jb
nop
xlat
(bad)
sbb
cmp
(bad)
push
cdq
xor
or
ror
ss
sbb
cld
push
outs
xchg
jmp
xchg
sub
mov
or
out
xchg
iret
dec
cmp
std
scas
pop
jle
fidivr
scas
adc
xchg
(bad)
lods
lea
adc
pop
jns
cmp
inc
pop
mov
lock
lods
jge
cmp
push
pop
inc
es
xor
fmul
jge
cdq
rcl
ficom
stos
cmp
push
mov
mov
adc
mov
jecxz
pusha
das
int
sbb
dec
out
xlat
cmpxchg
add
out
popa
sbb
fdiv
jmp
iret
xor
ja
nop
ss
rcl
xchg
push
into
jo
call
cmp
and
repnz
mov
mov
test
sub
xchg
imul
loopne
dec
(bad)
out
popa
mov
mov
jnp
pop
and
js
add
sti
icebp
leave
mul
xor
dec
cmp
push
add
and
add
mov
dec
jb
xchg
sub
mov
out
sbb
sbb
or
dec
lea
mov
stos
into
or
mov
jae
inc
or
inc
lds
fcom
adc
xor
iret
mov
mov
push
pop
ins
xlat
test
push
dec
xchg
out
inc
gs
push
xchg
xlat
add
repz
data16
ins
sar
adc
pop
inc
test
push
xor
addr16
sbb
loopne
push
test
test
fsubrp
dec
fdivr
cli
jle
les
mov
dec
dec
(bad)
mov
fwait
cdq
jb
xor
cld
push
pop
aas
icebp
or
sbb
xchg
xchg
stos
fs
out
cmp
test
or
popa
jle
loope
lock
mov
push
aam
repnz
or
mov
push
dec
cmps
jmp
ins
aaa
jns
dec
aad
call
jne
adc
mov
mov
and
pop
jne
popf
pop
adc
lock
inc
sub
neg
aad
ror
pushf
loopne
push
(bad)
and
or
xor
rol
pop
mov
pop
mov
jns
lds
pop
and
dec
rol
mov
sbb
cdq
jnp
xchg
mov
inc
(bad)
pop
cli
jg
dec
ret
into
cmps
jnp
outs
les
xchg
xchg
addr16
and
clc
jae
scas
add
pop
aad
lods
and
mov
mov
sbb
or
dec
cdq
mov
xchg
pop
pop
loope
sar
lods
mov
ficomp
sbb
stc
mov
mov
and
loop
pop
pop
mov
pop
scas
pop
sar
call
adc
retf
sub
pop
pop
rcr
mov
fdiv
push
ficomp
jp
jo
sbb
bnd
mov
inc
sub
pop
sbb
loope
xchg
lea
sub
cs
enter
sti
outs
repnz
mov
adc
(bad)
inc
inc
adc
outs
xor
sbb
fdivr
retf
or
mov
in
ss
inc
jl
idiv
cdq
mov
popa
inc
inc
es
lahf
js
lods
stc
mov
out
xchg
dec
cwde
inc
push
aam
mov
mov
std
pop
mov
dec
(bad)
or
jno
add
jnp
aad
adc
mov
rcr
hlt
not
inc
mov
int3
ror
inc
cdq
push
sub
push
lods
clc
cmp
mov
dec
sar
push
push
xor
lahf
and
sti
frstor
mov
scas
xor
jge
call
sub
mov
xchg
sti
aas
dec
shl
cmp
arpl
mov
adc
mov
mov
(bad)
mov
ret
jae
repnz
cli
enter
ret
mov
leave
pop
xor
ret
sub
cli
sub
sub
movs
pushf
mov
or
sbb
in
cmp
fiadd
pop
mov
jge
outs
jne
in
(bad)
mov
addr16
in
cmp
stos
bound
xor
scas
fnstsw
add
lods
fdiv
xor
xor
mov
push
je
xor
jmp
sbb
mov
or
cmps
inc
jmp
xchg
out
and
jg
out
stos
inc
bound
mov
jb
enter
popa
je
sti
xchg
nop
ins
jns
cld
inc
cmps
daa
add
jne
imul
and
std
mov
in
mov
xor
mov
push
sub
retf
pop
shl
cdq
movs
stos
fwait
(bad)
fldcw
int
popa
cmp
aaa
es
adc
cmp
in
and
or
cmp
repnz
push
or
jae
mov
dec
aas
push
mov
or
leave
dec
daa
dec
cli
lods
mov
les
cdq
pop
pop
or
lods
retf
sub
cmp
enter
xchg
fs
fistp
in
mov
pop
clc
cmp
xor
cmp
adc
push
mov
sahf
cld
mov
fadd
fs
test
xor
(bad)
jl
jne
or
mov
xor
xchg
cmp
xchg
ficom
ja
dec
xchg
ja
pusha
jg
jno
ja
sbb
repz
stos
cmp
mov
add
out
mov
and
dec
hlt
xchg
pop
jmp
mov
(bad)
add
(bad)
cmps
or
mov
xor
pop
ret
xchg
lea
(bad)
adc
adc
aam
stos
shr
shl
sbb
aam
enter
sbb
enter
jnp
shr
clc
dec
jp
inc
fsub
test
and
lock
retf
mov
fiadd
sti
sbb
(bad)
mov
xchg
popa
stos
(bad)
xchg
repz
nop
xchg
xchg
in
mov
out
pop
aaa
sub
gs
mov
jno
xchg
movs
sbb
fsubr
enter
add
dec
push
fs
xchg
(bad)
cwde
mov
pop
mov
fild
sub
push
jmp
or
mov
das
dec
es
adc
hlt
aad
loop
sub
xor
inc
adc
cdq
push
cdq
out
cld
(bad)
or
int
mov
push
in
inc
dec
aam
xor
sbb
(bad)
cld
jae
sbb
pop
repz
mov
ins
cwde
fwait
pusha
scas
cli
aas
test
ret
pop
in
ins
movs
jmp
cdq
in
pusha
pop
lods
stos
fsubr
imul
imul
add
cmp
add
aam
std
out
out
mov
xor
(bad)
fistp
mov
mov
push
push
rcr
loope
pop
test
jbe
and
das
cdq
add
mov
cmp
loopne
jo
cmps
lods
jnp
shr
pop
jne
popf
xor
mov
pop
rcl
mov
idiv
dec
pop
mov
xchg
mov
call
js
sub
jge
das
out
in
test
lods
pop
push
cmp
(bad)
pop
aam
mov
push
mov
inc
add
hlt
jae
and
in
call
mov
xchg
jno
dec
loope
mul
fs
cdq
test
mov
push
je
push
leave
fwait
adc
addr16
stc
xlat
sbb
cmp
dec
lea
xchg
outs
jmp
mov
adc
aas
cdq
fidiv
push
or
add
push
mov
adc
rcl
std
jmp
outs
(bad)
in
mov
std
pop
rol
push
ins
push
sub
sar
mov
mov
ins
mov
xor
clc
xor
das
daa
inc
lahf
mov
fbld
add
enter
inc
push
ja
cdq
xor
jmp
icebp
int
cwde
fld
push
sub
jp
inc
inc
xchg
les
mov
push
xor
outs
sbb
jmp
ss
jno
out
sub
push
mov
jbe
int
or
stos
outs
cmps
out
clc
iret
push
xor
xchg
out
mov
push
cmp
cmps
mov
jno
jmp
adc
(bad)
jnp
pop
or
popa
fdivr
hlt
cld
fild
dec
add
jbe
repnz
stos
pop
loopne
push
into
jo
adc
push
add
loopne
fimul
std
mov
dec
icebp
sbb
out
mov
or
jne
mov
pushf
bnd
dec
cmc
das
mov
pop
rol
arpl
(bad)
mov
jno
jnp
push
je
inc
sub
cmp
movs
and
add
jge
retf
push
cwde
(bad)
pushf
fs
rcl
pop
cli
mov
into
ja
cmp
movs
jecxz
jnp
stc
and
mov
mov
or
sub
neg
enter
xchg
call
jae
lea
ds
inc
push
into
mov
outs
addr16
mov
jl
mov
sbb
cmp
pusha
sbb
into
inc
or
in
mov
cmps
ins
mov
pop
mul
adc
inc
mov
mov
dec
out
xchg
scas
scas
cli
mov
xor
push
jmp
ficomp
cmps
stos
cmc
pusha
out
mov
ja
xlat
add
jb
add
inc
enter
mov
test
stos
mov
int3
outs
mov
and
mov
mov
mov
fisubr
in
loopne
retf
aas
xor
retf
xor
pop
pushf
mov
push
push
add
dec
and
jbe
sar
(bad)
imul
das
ror
shr
mov
cmp
lds
jle
daa
(bad)
(bad)
in
out
rcl
(bad)
mov
push
mov
fsubr
nop
add
dec
mov
loop
fcmovne
cli
pop
jmp
int3
cmps
push
mov
icebp
jecxz
es
movs
lds
in
push
repz
push
leave
mov
stc
pop
das
sbb
xchg
mov
push
fisub
repz
inc
mov
rcr
loopne
xchg
lock
or
inc
xor
mov
xor
fisttp
xchg
(bad)
outs
hlt
retf
dec
jmp
mov
pushf
sbb
add
dec
scas
test
in
sti
push
int
data16
ss
sub
in
imul
test
mov
sbb
shl
cmc
lea
pop
jmp
jg
lds
sub
mov
jg
xchg
push
mov
xchg
xchg
in
mov
das
xor
dec
sub
dec
inc
sub
aaa
shr
mov
(bad)
in
xor
pushf
in
sbb
loop
add
or
mul
iret
or
out
int3
or
sbb
mov
xchg
mov
xchg
cmps
in
fld
mov
inc
int
pusha
adc
push
cmp
das
clc
or
pop
xor
inc
inc
dec
push
jp
(bad)
mov
xor
mov
cwde
aaa
mov
inc
into
pop
dec
out
or
mov
and
push
fs
xor
clc
pop
or
shl
mov
or
or
retf
shl
pop
sbb
mov
fs
aad
stos
inc
jmp
neg
out
in
push
xchg
add
imul
fild
lods
xor
cmps
sbb
movs
xlat
sbb
inc
fidivr
sub
fdiv
retf
enter
daa
lods
stc
dec
shl
fdivrp
call
mov
fist
xchg
fsub
shr
mov
and
fs
bound
cmp
iret
loop
in
fs
mov
ror
adc
sub
inc
fs
jge
loopne
ds
mov
(bad)
mov
jle
fucom
xor
or
enter
imul
inc
movs
loop
fwait
ss
xchg
pop
lock
enter
mov
and
movs
ret
pop
pop
adc
sub
scas
lahf
(bad)
push
lock
xchg
or
xchg
cmp
cld
pop
sub
(bad)
pushw
mov
and
sbb
mov
mov
or
mov
(bad)
jb
ins
pusha
call
xor
dec
aaa
lea
dec
in
ss
push
test
and
in
pmulhw
inc
sbb
pop
stc
pop
js
ins
xor
xchg
fiadd
jge
pop
lahf
retf
test
xchg
push
mov
sub
(bad)
nop
mov
dec
lahf
stos
sbb
imul
push
pop
cmp
out
sbb
adc
retf
pop
xor
mov
cmp
jnp
and
pushf
icebp
aad
push
mov
enter
inc
mov
push
stos
or
dec
mov
leave
dec
dec
dec
imul
mov
imul
add
mov
imul
(bad)
xchg
int
in
inc
pop
fiadd
xor
test
lahf
sbb
cli
repz
mov
mov
stos
clc
push
mov
mov
jns
adc
aas
lods
xor
add
in
dec
mov
mov
push
or
xor
icebp
sbb
cmp
fdivr
call
sbb
addr16
sbb
dec
sub
mov
lds
mov
call
push
push
or
mov
scas
jmp
mov
lahf
jbe
mov
ret
fsub
and
(bad)
fist
clc
xchg
ror
push
pushf
popa
xor
into
mov
pop
cmps
js
xor
shl
push
adc
pushf
inc
test
bound
es
xchg
jle
jae
in
adc
xor
add
mov
pop
xchg
arpl
or
sbb
bound
pop
pop
xchg
jecxz
repz
push
mov
xchg
in
in
iret
out
retf
pop
mov
fiadd
xchg
mov
das
jg
or
stos
dec
call
iret
jae
movs
(bad)
or
xor
and
add
xchg
out
js
lds
cmp
mov
js
sbb
xchg
push
ret
xchg
jecxz
mov
mov
lods
out
dec
rcr
adc
inc
(bad)
int
ret
xchg
mov
push
stos
(bad)
call
ja
inc
inc
add
jmp
addr16
bound
mov
(bad)
jo
sub
inc
inc
sar
call
jo
mov
rol
inc
lock
or
stos
nop
sub
lock
imul
pop
shr
stos
mov
pop
leave
fnsave
fdiv
mov
xchg
push
ins
push
arpl
jle
rcr
jnp
ins
or
add
jb
stos
mov
mov
xchg
xchg
pop
movs
sahf
xor
js
dec
mov
jae
jg
add
bound
retf
add
cs
xchg
pop
jnp
inc
and
iret
sbb
xchg
fdivr
int3
pop
push
cmp
cmps
adc
adc
fisub
jl
ror
pop
in
iret
jbe
cmp
in
sbb
into
add
jmp
lods
sahf
sbb
bnd
cmps
mov
retf
lods
lahf
in
repz
dec
jb
test
xchg
lods
dec
jmp
(bad)
and
xor
push
cmp
sbb
in
fisubr
xchg
pop
xchg
jo
cmp
ss
pop
push
iret
sti
push
xchg
xchg
adc
xor
out
mov
(bad)
dec
mov
add
(bad)
sti
test
inc
aaa
inc
std
test
dec
clc
mov
adc
cdq
ja
sub
pop
add
lock
push
pop
inc
lods
fisubr
sbb
xchg
les
shl
loope
movs
xchg
aaa
in
into
jp
jmp
mov
push
pop
stos
(bad)
(bad)
popa
mov
(bad)
out
nop
push
mov
(bad)
fiadd
mov
sbb
iret
sub
or
push
fisttp
sub
xacquire
dec
(bad)
mov
or
in
mov
sbb
push
(bad)
dec
imul
stc
lea
ss
add
inc
cs
es
or
sysexit
jecxz
call
movs
retf
(bad)
(bad)
pop
out
test
cmps
jmp
mov
mov
pop
jns
pop
or
stos
xor
dec
jle
mov
mov
je
jge
sbb
dec
arpl
adc
mov
loopne
mov
cmps
jge
fnsave
inc
popa
add
push
adc
push
retf
outs
xchg
cmps
push
xchg
dec
dec
outs
(bad)
jbe
ins
add
leave
int
ror
jp
cld
mov
test
ins
lock
add
sbb
lahf
mov
pop
je
and
sub
sbb
push
push
retf
ror
std
jle
xchg
scas
jle
dec
mov
xor
test
dec
pop
adc
cwde
inc
mov
mov
jp
cmp
xchg
and
cmps
mov
pushf
pop
(bad)
loop
je
xchg
jno
call
add
dec
sub
xchg
push
sbb
mov
cmps
aaa
pop
and
jl
pop
inc
and
out
scas
mov
scas
inc
adc
pop
clc
fldcw
pop
fild
es
ficom
fist
sub
add
inc
outs
mov
jns
jo
jnp
ret
mov
mov
add
adc
jl
and
dec
and
call
(bad)
inc
int
xchg
call
cmp
jecxz
mov
loopne
push
(bad)
(bad)
cld
add
ds
(bad)
fidiv
ins
xchg
mov
stos
mov
mov
xor
in
xchg
xor
push
in
dec
push
imul
out
sti
pop
icebp
push
inc
int3
lahf
jae
and
push
mov
push
xor
inc
xchg
and
cld
sub
ins
bound
mov
pop
or
pop
add
mov
jmp
push
xchg
sahf
test
out
aaa
js
jl
pushf
mov
cmps
mov
stos
sar
icebp
jnp
push
das
xchg
ret
out
inc
jmp
pop
(bad)
jmp
inc
out
hlt
ds
dec
xor
xor
sti
repz
sbb
jne
scas
test
pushw
shl
jbe
dec
jns
sbb
or
call
pop
sbb
mov
js
adc
sub
rcr
mov
and
pop
test
cmp
into
push
inc
or
jp
lods
push
jns
push
int3
retf
ds
fmul
or
mov
shr
xlat
data16
and
and
mov
fistp
xor
bound
pop
daa
xor
loop
xchg
cli
int
in
bound
pop
mov
stc
fdivr
es
xchg
(bad)
ja
shl
mov
mov
jge
push
xor
jne
aas
(bad)
stc
pop
fidivr
aad
push
lea
fistp
movs
xchg
jmp
aaa
and
sbb
fisttp
imul
or
add
add
je
sbb
cmps
ret
out
mov
dec
loop
ret
sbb
aaa
and
mov
aam
out
mov
stos
inc
movs
inc
out
sbb
pop
sbb
jecxz
(bad)
mov
inc
popf
in
add
jb
fcmove
push
push
jmp
in
or
jmp
dec
inc
jmp
mov
mov
out
in
test
addr16
hlt
fadd
das
sbb
jae
sbb
or
leave
outs
out
(bad)
jb
xlat
push
inc
or
fdivr
cwde
xor
mov
xor
jbe
xchg
and
(bad)
xchg
xchg
out
stos
pushf
mov
aad
push
repnz
lock
push
arpl
jmp
mov
sti
mov
lock
mov
cmps
adc
(bad)
adc
mov
mov
and
jne
adc
mov
xor
xadd
push
lods
push
lock
sbb
mov
lock
int3
mov
stos
cmps
push
or
lds
jb
xchg
mov
cmp
enter
div
pop
and
clc
loop
inc
add
push
xchg
lods
sbb
out
std
jmp
test
aaa
ds
sbb
int3
icebp
and
jae
mov
scas
scas
mov
in
lods
aas
inc
cmp
stos
xor
test
push
bound
cli
(bad)
scas
push
test
test
push
cmp
sub
or
ins
mov
test
fsubr
sti
sbb
iret
daa
fistp
push
or
pop
push
sahf
add
sahf
mov
jp
sub
das
xor
aaa
fimul
mov
lock
xchg
or
mov
test
sub
add
mov
inc
pop
xlat
pop
retf
cmp
xchg
aam
dec
cmp
or
mov
push
inc
xlat
mov
arpl
fistp
fs
adc
dec
push
or
sbb
xor
mov
mov
ds
sub
pusha
push
in
(bad)
shl
cmps
push
movs
int
div
push
sub
rcr
xlat
and
or
ss
jmp
dec
fsubrp
pop
cmp
cmp
xor
nop
jae
shr
jb
(bad)
push
push
loop
enter
jns
das
inc
mov
sahf
sub
enter
sbb
jmp
out
or
jg
mov
movs
(bad)
cmp
and
into
jns
outs
push
mov
mov
mov
(bad)
jmp
movs
dec
es
iret
cwd
sar
adc
mov
mov
add
movs
sbb
cmp
popa
imul
jae
loope
repz
and
sti
cli
movs
test
movs
mov
aaa
leave
rcr
inc
jne
stc
sbb
enter
jno
xchg
std
stos
dec
call
stos
les
push
xchg
imul
push
adc
jmp
cmc
ret
push
xor
retf
sub
in
jge
sbb
aad
mov
xor
xor
inc
jg
sbb
xor
cmp
push
dec
mov
sub
add
pop
mov
or
adc
cmp
(bad)
mov
fisub
jecxz
pop
xchg
lahf
imul
mov
inc
sbb
mov
adc
xchg
(bad)
or
arpl
sbb
(bad)
rcr
and
ucomiss
adc
xlat
fst
arpl
loop
push
mov
dec
sub
adc
inc
push
fistp
rcr
or
sub
pop
retf
mov
lds
jg
scas
mov
or
cmc
sahf
outs
inc
mov
jb
xchg
in
fisub
push
mov
in
adc
adc
add
jbe
in
sti
pop
cmp
cs
pop
mov
btc
cmp
jge
aaa
mov
jl
add
sub
dec
jae
enter
pusha
mov
jg
pop
leave
xchg
jne
and
shl
adc
xchg
mov
push
adc
(bad)
stos
fcmovne
sbb
mov
mov
imul
sbb
ins
cmc
leave
pop
not
inc
dec
bnd
jecxz
inc
xchg
test
fs
test
mov
sub
rol
xchg
stos
push
sub
in
mul
aad
mov
sub
mov
sub
stos
sub
movs
pop
pop
mov
add
pop
xor
scas
cmp
movs
in
std
mov
(bad)
cli
jge
aas
sti
add
ja
hlt
push
xor
sub
lods
push
mov
data16
mov
mov
mov
test
out
or
mov
cmp
cmp
or
(bad)
loopne
rcr
jno
mov
div
sbb
aad
and
mov
popa
cmc
mov
push
push
test
xchg
daa
jne
test
out
(bad)
jmp
mov
data16
pop
sub
pop
or
inc
push
pushf
pusha
jae
bound
adc
jg
rcr
xor
sbb
(bad)
vmread
dec
outs
sahf
sbb
pop
xor
loop
cmp
mov
psubsw
fst
fs
jnp
fnstenv
pop
adc
loopne
jmp
stc
push
mov
cmp
shr
imul
popf
mov
xor
mov
sbb
mov
movs
stc
movs
outs
inc
mov
xchg
mov
mov
inc
push
out
mov
clc
loope
lods
fcmovu
jb
xchg
xor
sbb
or
or
ins
or
repnz
xor
les
xor
(bad)
out
sbb
xchg
leave
inc
cmc
jnp
pop
mov
xor
outs
lods
hlt
not
lds
and
inc
(bad)
jmp
imul
(bad)
xlat
mov
mov
scas
cmp
mul
dec
movs
in
mov
add
lea
inc
pop
mov
inc
imul
cmp
popa
addr16
(bad)
cmp
cmp
mov
xchg
enterw
push
pop
iret
and
jle
gs
jbe
lea
xchg
test
mov
lea
inc
clc
cld
or
mov
iret
std
dec
aad
test
jns
add
jle
rol
pop
mov
pushf
sbb
adc
adc
pop
aaa
jae
mov
jbe
push
ins
aam
add
add
sbb
sub
jg
mov
(bad)
or
adc
test
push
pop
ss
fild
jmp
arpl
ja
add
jg
inc
and
push
mov
std
xor
js
mov
xor
aaa
push
adc
xchg
push
push
daa
adc
xor
test
cwde
cli
lods
cmps
test
sub
js
into
mov
aaa
fsubr
and
into
ss
dec
jp
or
in
fild
fldenv
ins
sub
xor
and
push
and
pop
xchg
inc
mov
add
dec
daa
mov
pop
icebp
sub
push
mov
adc
mov
dec
add
adc
gs
test
inc
mov
test
ins
mov
sub
mov
or
inc
inc
out
pop
lods
push
fdivr
in
shl
daa
or
call
mov
xor
jbe
sar
ss
loopne
addr16
xor
test
cmps
iret
sbb
sub
cmc
jnp
mov
jecxz
mov
hlt
in
in
inc
push
ss
scas
data16
xchg
inc
dec
xor
mov
leave
pop
sub
cmp
sbb
sub
mov
aaa
clc
xchg
ret
mov
test
jo
cmp
and
mov
mov
aam
adc
int
sahf
xchg
cmp
mov
push
mov
loopne
retf
xchg
cmps
fdiv
xchg
retf
mov
test
js
push
pop
loopne
mov
ins
mov
popa
in
stos
aas
gs
out
leave
push
cwde
push
jns
aaa
and
ds
sbb
stc
cmp
push
imul
push
out
aas
sub
jbe
push
or
icebp
repz
enter
sub
dec
jbe
sub
je
xchg
repnz
push
ds
out
cmp
sbb
cmps
mov
inc
jmp
lock
jo
jle
enter
mov
mov
dec
mov
xchg
int
jb
ja
mov
mov
scas
mov
or
rcl
cs
sub
(bad)
in
xlat
mov
imul
repnz
mov
mov
jp
add
dec
mov
outs
cwde
ins
xor
push
pop
and
inc
mov
fnstsw
int3
mov
inc
movs
pop
mov
add
xor
shl
shr
cmp
xlat
out
sar
mov
push
aaa
lods
cld
scas
add
(bad)
sub
lahf
imul
into
add
out
cld
inc
xchg
int
dec
ficom
push
sbb
cwde
mov
inc
mov
call
add
pop
(bad)
or
cmc
or
mov
aam
adc
jmp
xor
push
push
sub
adc
inc
out
or
push
lods
fsubr
test
mov
(bad)
arpl
dec
ret
jne
nop
fistp
bound
cwde
xor
fwait
mov
jle
mov
cmp
fucomi
fld
push
xchg
outs
dec
jae
push
nop
icebp
stc
jmp
adc
push
fsubr
cmp
icebp
push
jmp
scas
cmp
mov
jnp
jg
mov
outs
mov
fs
xchg
gs
pushf
hlt
popf
mov
or
lock
add
xor
mov
mov
shl
push
dec
and
ret
sar
into
jle
sub
shl
idiv
xor
ins
xor
retf
(bad)
js
dec
sahf
or
pop
or
mov
xchg
pop
jb
add
loope
mov
lods
jo
mov
pop
sub
movs
cmp
popa
retf
adc
push
outs
or
xor
fdivr
jb
push
pop
ins
lods
pop
xor
in
in
or
and
test
iret
pop
cmp
in
cmp
and
popf
xor
xchg
pop
mov
ficom
cmp
js
mov
(bad)
push
je
sbb
dec
push
pop
cld
out
jp
sub
cmc
call
mov
(bad)
sbb
aam
inc
sub
jg
cdq
and
hlt
dec
pop
pop
xor
add
cmps
or
scas
int3
gs
push
adc
pop
pop
gs
push
xchg
bound
std
ret
and
ret
rol
sbb
or
fsubr
stc
jo
or
cmp
lods
repnz
std
xchg
adc
data16
(bad)
aaa
pop
ficom
mov
push
loope
adc
or
push
mov
mul
mov
inc
mov
sbb
xchg
ins
rcl
addr16
ficom
(bad)
outs
sahf
mov
dec
xchg
sub
push
dec
pop
dec
pusha
icebp
xor
pop
adc
xchg
xchg
or
rcr
jle
push
push
jge
shr
mov
hlt
stc
mov
(bad)
mov
(bad)
xor
(bad)
cmp
lods
outs
ret
retf
ins
fldl2e
xchg
sti
gs
inc
mov
imul
inc
cld
inc
adc
and
stos
cmp
mov
xor
imul
cmps
and
call
jns
test
into
aas
nop
xchg
aam
repz
(bad)
movs
hlt
neg
or
cmp
mov
movs
rcr
lods
into
cmp
cli
and
and
test
adc
push
push
jp
or
adc
in
mov
jmp
pop
test
cmp
icebp
sub
sub
mov
es
mov
sub
jbe
fwait
mov
xor
mov
fs
xor
adc
dec
add
rcl
imul
mov
lahf
call
add
icebp
xor
or
iret
pop
ss
out
or
add
or
call
ins
mov
out
sub
sub
xor
push
xchg
(bad)
cmp
es
loope
push
push
mov
das
fadd
fcmovne
adc
mov
mov
mov
mov
dec
in
ret
sahf
sbb
add
inc
and
push
and
js
mov
cmp
adc
mov
mov
sbb
xor
lahf
stos
les
pop
inc
or
sbb
sbb
jns
mov
jp
rol
ja
add
pop
jns
out
data16
mov
outs
iret
or
add
or
arpl
mov
dec
xor
mov
jno
jo
dec
fmul
loopne
xchg
and
mov
inc
stos
lahf
push
(bad)
mov
lea
sti
or
dec
in
ds
jno
mov
scas
ja
jns
add
movs
pop
add
mov
pop
test
push
ret
or
movs
or
repnz
pop
xor
test
aas
jmp
daa
xor
add
mov
test
and
sar
fst
imul
shl
inc
neg
and
hlt
in
mov
inc
ins
push
sbb
inc
cmp
dec
test
mov
loop
add
movs
mov
push
jne
push
push
(bad)
js
gs
dec
cmp
sar
inc
scas
xor
or
repnz
test
adc
fnstcw
dec
aad
popa
cmp
mov
pushf
mov
inc
lods
inc
xor
push
cmp
adc
mov
ins
jno
sbb
jns
test
push
sub
sub
xchg
ja
loopne
sub
test
adc
ret
xchg
leave
mov
jbe
and
pushf
popf
sbb
(bad)
out
lock
clc
pusha
into
movs
inc
scas
mov
in
and
mov
sub
jno
mov
and
pop
and
xor
pushf
dec
or
push
sbb
mov
repz
xor
sbb
jno
and
js
jecxz
jmp
mov
ss
jg
inc
jmp
pand
lea
or
pop
inc
cwde
jmp
ret
and
or
outs
or
push
inc
bswap
push
push
xchg
ins
sub
iretw
(bad)
clc
push
imul
les
mov
dec
dec
shl
push
adc
cmps
inc
inc
push
or
out
shl
cmps
adc
mov
push
cmps
cmps
lock
jae
and
pop
in
jns
rcl
cmps
pop
(bad)
je
inc
pop
mov
(bad)
fisubr
lods
call
sub
into
fld
or
sub
iret
or
mov
(bad)
or
add
(bad)
and
sbb
push
push
xlat
jge
ds
pop
adc
jecxz
ret
push
jb
ja
or
jo
fs
(bad)
push
test
adc
jmp
jmp
cmp
xor
in
push
clc
mov
push
push
mov
adc
mov
mov
or
cmp
int
in
xchg
mov
dec
shr
or
ds
lods
mov
dec
hlt
pop
aaa
xlat
pop
or
lods
enter
mov
movs
ds
js
(bad)
out
adc
(bad)
lock
popa
pop
dec
loopne
jns
and
sub
sbb
leave
push
cmc
outs
retf
jp
nop
xchg
pop
iret
dec
jnp
jmp
int3
retf
mov
hlt
mov
jecxz
pop
ja
into
ja
pop
push
(bad)
retf
shl
and
test
pop
ret
aaa
fxch
and
ret
std
cmp
and
cmc
ror
fisubr
cmp
push
pushf
inc
aam
and
cmps
repnz
das
ret
stos
mov
add
cdq
cmp
into
push
jno
aas
or
add
loop
(bad)
adc
jmp
pop
imul
dec
jle
(bad)
cwde
xor
xchg
adc
retf
daa
cmps
in
inc
pop
loope
jbe
adc
(bad)
aad
mov
jne
sub
xchg
and
mov
adc
test
mov
mov
cmps
je
jl
movs
lea
retf
dec
dec
pop
ror
sub
mov
sbb
jbe
push
jmp
popf
cmps
cmp
nop
xchg
(bad)
mov
test
pusha
or
adc
xchg
mov
push
push
aas
lds
inc
dec
and
retf
fwait
das
mov
into
inc
ret
or
outs
sub
cs
cmps
jg
std
stos
mov
mov
cmp
div
adc
dec
cwde
dec
lock
mov
in
adc
aam
push
sub
inc
in
jecxz
push
test
cmp
cs
call
and
sub
ja
adc
aaa
jae
push
cld
cmp
sub
adc
mov
dec
aad
jno
inc
fs
(bad)
outs
(bad)
mov
jl
jb
out
setns
inc
shr
je
inc
aad
or
daa
mov
jecxz
sahf
ds
xchg
sbb
arpl
jno
retf
dec
mov
adc
inc
mov
es
add
mov
xlat
xchg
mov
inc
sbb
in
test
in
jns
mov
out
retf
call
(bad)
pop
retf
dec
dec
test
addr16
or
add
sub
and
imul
ss
repnz
push
mov
mov
(bad)
push
dec
xor
sub
pop
cmp
pop
loop
jp
add
push
adc
and
test
cmp
pop
jmp
imul
in
ror
inc
xor
dec
mov
lea
ja
jge
sbb
daa
ja
inc
mov
into
or
fisttp
mov
fidivr
mov
push
dec
push
xchg
mov
das
adc
fdivr
iret
cld
pusha
shr
int3
stos
dec
mov
adc
popf
inc
push
nop
addr16
(bad)
sub
shl
inc
das
cs
das
or
inc
ror
pop
shr
push
and
sub
mov
and
and
xchg
and
outs
je
hlt
mov
xchg
jg
xchg
add
daa
test
mov
pop
std
jge
xlat
mov
mov
mov
es
inc
test
mov
xchg
stos
in
es
retf
mov
xchg
push
xchg
loopne
cmps
nop
cs
sub
xor
dec
mov
jp
jmp
cmc
dec
or
jge
and
lahf
inc
(bad)
jp
add
push
push
aam
mov
xlat
inc
pop
imul
iret
sbb
test
jae
mov
xor
mov
mov
cmps
add
push
or
int3
mov
sub
xchg
pop
pop
jecxz
(bad)
aam
mov
daa
sub
cmps
adc
cld
out
xchg
hlt
and
add
push
jb
adc
into
mov
xchg
xchg
addr16
idiv
scas
sbb
mov
std
xor
jbe
out
mov
int3
mov
xchg
retf
pop
pop
sub
cmp
cmp
mov
push
push
sbb
dec
pop
js
pop
xor
mov
and
fs
or
fld
nop
and
loope
or
iret
jo
fiadd
shl
(bad)
xchg
ret
push
das
(bad)
sub
in
lods
adc
mov
and
test
dec
cmp
push
push
mov
movs
push
in
and
popf
inc
inc
dec
and
inc
stc
push
es
mov
sub
jle
call
dec
xchg
fs
scas
xor
inc
retf
test
retf
aad
mov
lods
popa
mov
add
imul
sub
loopne
loope
sub
lock
stos
lock
adc
pop
test
fadd
xor
mov
push
ficomp
mov
xchg
xor
jne
push
xchg
lods
popf
inc
mov
ja
xchg
ja
(bad)
shl
loop
ja
mov
adc
jo
jnp
push
xchg
out
dec
mov
jmp
xor
in
push
xor
(bad)
iret
and
sbb
lds
in
xchg
std
sbb
inc
int3
ja
repnz
push
mov
fild
mov
sbb
jp
xor
mov
cdq
cmps
push
inc
sub
inc
jle
fcomp
clc
mov
mov
mov
fstp
sbb
mov
fisub
(bad)
jl
dec
adc
(bad)
repnz
retf
cmps
jno
and
or
mov
cmps
bound
es
retf
adc
fisttp
pop
sti
adc
outs
xchg
daa
ja
mov
cli
xlat
fsub
xchg
cmp
sbb
sbb
outs
sub
out
into
mov
fld
aam
push
cwde
xor
adc
mov
shr
inc
jmp
out
inc
shl
sub
ret
pop
inc
iret
leave
aaa
xor
xor
(bad)
cmp
ins
loope
mov
pop
xchg
xor
add
push
pop
arpl
nop
pop
add
mov
or
(bad)
loopne
cmp
jge
jle
(bad)
push
mov
adc
cwde
mov
xor
add
cs
cs
cli
ror
lahf
mov
shl
xor
cmc
sbb
(bad)
lahf
mov
pop
(bad)
pop
shl
and
sbb
clc
int3
cmp
dec
lods
rcl
or
ret
sub
mov
xchg
mov
xor
sahf
cld
ret
ret
mov
xchg
xchg
stos
dec
pop
imul
pop
outs
mov
loop
loopne
cmp
push
mov
add
scas
out
mov
and
push
lds
dec
xchg
pop
xor
aas
lods
adc
stos
lods
mov
xchg
imul
leave
mov
test
imul
mov
or
mov
es
pop
dec
pop
xor
cmps
adc
ja
push
and
mov
jns
and
mov
clc
cmovbe
sbb
and
mov
fnstenv
movs
outs
xlat
pop
adc
push
mov
mov
test
adc
loope
test
les
pop
mul
aas
ror
fcom
sar
and
adc
arpl
mov
xor
mov
mov
jl
pop
inc
dec
mul
mov
out
scas
sahf
jge
pop
lock
cdq
dec
fdivr
retf
arpl
dec
inc
sub
jecxz
fisub
imul
mov
aaa
xchg
aam
adc
push
fld
sub
inc
mov
fs
cmps
inc
adc
cmp
data16
fsubr
pusha
ss
push
popa
icebp
mov
mov
sahf
and
rol
dec
sub
xor
jbe
jns
jb
jmp
mov
fidivr
cmp
bound
movs
mov
in
or
test
call
pop
add
pop
sbb
std
push
or
pop
and
sub
out
popa
mov
pushf
enter
inc
sbb
fnstcw
cmp
cmp
daa
pushf
rol
ja
jg
daa
cmps
sbb
xchg
push
es
adc
mov
retf
mov
xchg
and
xchg
xlat
adc
mov
outs
cmp
ficomp
cdq
adc
xchg
int3
out
int
mov
mov
xchg
pop
xchg
es
mov
mov
lahf
mov
xor
inc
(bad)
sti
mov
cwde
test
in
leave
pop
mov
pop
imul
push
push
imul
inc
mov
cmp
adc
push
ja
dec
push
data16
mov
jmp
xor
addr16
cmps
lea
mov
cmp
push
icebp
rcr
add
pop
add
fwait
test
enter
out
repnz
icebp
cwde
dec
xlat
and
pop
xor
scas
adc
retf
int3
std
adc
or
not
ret
pushf
stos
repnz
idiv
jecxz
mov
mov
xchg
cwde
sub
popa
jb
shl
sub
clc
pop
cmps
jmp
cdq
push
test
xor
popf
in
std
das
jmp
pop
mov
out
cmc
iret
call
leave
adc
xchg
shl
fist
stc
popa
bound
fs
xchg
dec
push
sub
mov
cli
gs
mov
dec
setne
jmp
dec
xchg
ret
jne
add
ret
ds
mov
push
xlat
loope
pop
sbb
sbb
mov
mov
or
sub
sub
fidiv
cmp
int3
pop
pop
inc
xchg
inc
inc
rol
sub
xchg
cmps
and
xchg
pop
mov
mov
lods
push
xlat
mov
pusha
xor
(bad)
jmp
es
push
fcomp
add
push
inc
inc
lahf
cmp
mov
cli
adc
jae
mov
rol
(bad)
jmp
xor
mov
ret
push
ins
mov
out
jae
and
xchg
mov
adc
outs
clc
dec
das
fbstp
ret
imul
js
retf
pop
pop
adc
in
lods
mov
pop
sahf
cmp
fild
outs
mov
sub
cmps
and
or
movs
mov
shl
mov
int3
scas
push
(bad)
pop
xor
add
push
leave
scas
mov
xor
and
test
sbb
mov
jmp
jns
cwde
adc
ja
in
mov
nop
dec
push
mov
rcr
push
jl
lahf
call
pop
mov
test
pop
sub
xchg
xchg
push
pop
push
into
dec
or
cmp
into
sub
dec
popa
sub
or
fmul
daa
pop
enter
jmp
inc
popa
(bad)
add
jge
add
jno
cmp
lahf
inc
cwde
idiv
ret
ficom
fidivr
jmp
pop
js
dec
inc
jne
daa
imul
mov
jp
or
ins
lods
imul
in
gs
cs
jmp
movs
pop
(bad)
cdq
or
sub
fdiv
ins
xchg
and
test
je
movs
lods
or
mov
or
pop
popa
add
mov
xor
xor
fdivr
xor
loop
loopne
into
jmp
jnp
jle
cmp
les
fsubr
aaa
cmp
cmp
or
mov
inc
dec
js
mov
ja
cmp
popa
les
adc
out
pop
adc
fs
scas
push
aaa
push
mov
ins
les
push
push
les
lods
dec
or
jle
mov
shl
es
mov
ret
sbb
sbb
mov
inc
push
mov
xor
mov
hlt
ror
cli
faddp
jmp
mov
sahf
xchg
aas
ins
sahf
aas
mov
jmp
mov
sub
lea
inc
mov
xchg
inc
push
hlt
and
cmp
push
dec
(bad)
pop
inc
xchg
(bad)
scas
ret
cmp
jne
pop
mov
jno
call
sub
pop
sbb
adc
jg
and
xchg
push
retf
sub
movs
add
in
daa
rol
or
mov
loope
out
push
or
loope
cmp
repz
outs
(bad)
arpl
outs
mov
nop
stos
cld
mov
jns
push
add
and
jmp
pop
sar
mov
call
xlat
call
mov
cdq
js
xchg
add
mov
call
out
mov
sub
cs
sbb
or
or
in
jge
adc
pop
push
inc
out
mov
popa
cld
fimul
mov
gs
in
mov
sbb
ss
nop
or
aam
jmp
sub
fs
cmp
enter
inc
jmp
fldenv
scas
inc
outs
arpl
cmps
packssdw
int
not
and
mov
adc
sbb
shl
sbb
add
push
mov
leave
cmp
dec
aam
out
movs
ret
adc
retf
and
outs
dec
adc
jmp
pop
call
jmp
outs
mov
inc
add
popf
or
sbb
cmp
je
xor
xchg
xchg
data16
or
and
xchg
mov
cmp
fdivr
cli
xchg
sbb
adc
push
scas
(bad)
imul
xchg
xchg
fs
or
add
enter
mov
mov
nop
pop
pop
loope
(bad)
loop
je
add
xchg
shr
imul
lods
jmp
sti
sbb
pop
in
stc
and
pop
jmp
pushf
mov
or
inc
scas
cmp
in
lods
enter
push
(bad)
(bad)
mov
sub
push
sbb
sub
mov
sbb
inc
jmp
imul
mov
dec
push
pop
test
dec
pop
xchg
xchg
mov
mov
pop
out
add
iret
cmc
repnz
xchg
jg
pop
in
test
pop
jp
cs
push
fwait
xlat
mov
jmp
and
sbb
push
fcmove
pop
test
push
pop
rol
pop
mov
pop
jmp
mov
retf
enter
sub
fld
mul
call
xchg
iret
sar
std
jg
or
jl
jmp
or
sub
scas
test
pop
loopne
mov
aas
or
outs
and
sub
push
dec
enter
pop
mov
rol
push
or
arpl
fst
cdq
cdq
iret
mov
in
pop
dec
sub
out
int
pop
popf
cld
mov
push
sbb
loopne
fidivr
mov
lahf
mov
(bad)
out
rcl
dec
mov
outs
ret
ins
sbb
xchg
fisub
aad
push
popa
test
int3
sub
dec
jge
aam
lahf
retf
and
inc
js
enter
add
pop
xor
mov
xchg
mov
es
(bad)
jecxz
or
retf
rcl
setns
dec
push
adc
xchg
lods
jle
xor
mov
xor
mov
push
mov
xchg
movs
retf
and
xchg
mov
lahf
jle
movs
mov
push
outs
and
ret
push
push
shr
(bad)
enter
push
hlt
rol
mov
jnp
mov
sub
aas
jo
jl
sbb
out
inc
in
aam
add
mov
iret
inc
dec
lahf
xchg
pushf
rol
test
(bad)
scas
pop
daa
es
lock
pop
sbb
sbb
mov
jecxz
sub
movs
xor
jo
hlt
jb
mov
rcr
jecxz
pop
clc
neg
pop
ds
inc
mov
and
cmc
adc
jns
push
aas
sub
bound
js
cmp
cmp
movs
adc
cmp
imul
hlt
fisttp
sub
call
test
lea
std
cmp
or
test
aad
jnp
pop
jns
hlt
ins
popa
test
dec
xor
add
aaa
mov
int3
pop
sub
jmp
test
cmp
push
fcom
loope
loope
jge
imul
jns
jl
xchg
pop
bound
(bad)
in
imul
div
popa
sbb
sub
or
push
jb
pushf
jne
pop
sbb
adc
sbb
inc
retf
xor
movs
mov
div
pop
or
xor
inc
inc
cmp
test
loopne
xchg
sbb
or
mov
xor
int
jno
cmp
int3
and
fdivr
(bad)
movs
pop
mov
call
bound
push
jge
sub
push
je
push
in
dec
hlt
test
xchg
jle
loope
mov
mov
add
aam
sahf
sbb
or
popa
push
pop
bound
lods
adc
lea
push
mov
pop
popf
sti
out
ret
and
das
out
popf
outs
mov
popa
push
dec
ror
lahf
pop
ret
(bad)
fimul
mov
ret
mov
cmp
adc
(bad)
xchg
jnp
pop
and
ds
sub
sub
enter
mov
(bad)
or
adc
jnp
std
pop
fst
(bad)
mul
sar
dec
mov
xchg
push
sub
ja
cli
xchg
pop
sub
pop
pop
sbb
pop
ret
xor
mov
arpl
jno
clc
jp
jbe
aas
les
push
inc
jo
xchg
pop
lock
xchg
addr16
inc
out
mov
sbb
add
sub
mov
add
mov
ror
js
dec
xchg
adc
push
into
aam
mov
pop
add
or
rcr
stos
loopne
sti
loope
mul
call
push
mov
jmp
jp
sbb
stos
mov
ret
dec
mov
loop
sub
dec
mov
xor
ret
xchg
movs
mov
hlt
out
leave
push
mov
add
sub
shl
repz
cmc
loop
cmps
pop
adc
and
add
dec
jns
xor
(bad)
add
xchg
jp
(bad)
popf
mov
adc
mov
push
or
add
div
mov
std
jbe
jle
push
inc
addr16
pop
fwait
into
and
sbb
loopne
pop
(bad)
adc
push
cmps
cdq
nop
and
adc
mov
and
mov
mov
(bad)
xchg
(bad)
aas
std
push
in
jecxz
test
sub
loopne
or
jmp
push
xchg
push
sub
push
dec
xlat
scas
daa
mov
jmp
pop
ret
ja
loope
mov
es
mov
sub
and
inc
ins
jns
out
(bad)
cdq
fld
fs
jbe
jge
and
or
push
rcl
adc
jle
cwde
pop
pop
push
add
cmp
jno
pop
(bad)
mov
retf
add
cld
add
aad
and
xchg
leave
sbb
mov
inc
cmp
pop
test
mov
out
(bad)
mov
inc
lods
retf
jp
sub
into
pop
pop
imul
sub
popa
push
sub
es
and
popf
movs
mov
dec
dec
rcl
je
leave
rcl
xchg
and
jecxz
add
ins
das
call
mov
inc
lods
xchg
add
test
test
mov
mov
mov
sbb
dec
push
mov
outs
push
imul
in
mov
xchg
cmp
cmps
and
mov
push
pop
add
and
push
inc
add
dec
mov
cli
or
(bad)
mov
mov
or
std
mov
or
mov
std
dec
sar
inc
mov
out
jb
into
xchg
ucomiss
stos
loop
rol
add
mov
mov
pop
add
jmp
ficom
in
sub
fucomip
mov
push
icebp
pushf
ss
jle
into
aaa
mov
push
repz
loopne
mov
mov
pusha
pop
movups
icebp
je
nop
and
lahf
enter
sbb
scas
cmc
mov
push
scas
inc
xchg
arpl
imul
ret
and
ret
popa
sbb
mov
inc
test
cli
xor
fwait
outs
xor
xchg
xchg
dec
(bad)
mov
add
jmp
sar
enter
adc
or
into
pop
pop
ins
inc
push
aad
jnp
mov
loope
push
dec
dec
sub
and
mov
mov
fadd
sbb
inc
inc
ja
ror
push
mov
sub
(bad)
cmovl
jl
imul
pop
or
push
xchg
je
inc
in
adc
mov
cmp
(bad)
cli
popa
jge
jp
xchg
fstp
into
push
mov
mov
pop
push
dec
sbb
jne
jg
cli
cmps
jnp
lea
mov
scas
test
jns
cmp
xor
lea
xlat
mov
add
mov
not
push
ins
shl
add
xchg
ret
xchg
xchg
stc
mov
xor
pushf
or
xor
mov
push
aas
lea
les
fild
ins
add
push
out
(bad)
fist
push
inc
loop
loope
cli
mov
add
(bad)
mov
cld
cmp
aam
or
cmp
ret
cli
sub
mov
push
pop
mov
lock
rol
jno
push
test
fistp
adc
cli
jl
(bad)
mov
xchg
lods
xchg
xor
retf
adc
add
xor
lods
ret
jecxz
pop
stos
imul
push
sub
xor
(bad)
sub
jecxz
pushf
xchg
sub
mov
rcl
mov
loopne
aam
and
jmp
and
sti
fnstsw
out
fcom
mov
je
dec
xchg
jb
cmp
xor
mov
popa
xchg
mov
xor
pop
icebp
jge
mov
scas
cmp
enter
int
std
mov
xchg
and
push
aad
aas
jl
aam
stos
inc
test
and
jmp
dec
movs
cmps
ss
call
std
movs
adc
sub
sub
push
mov
(bad)
sahf
data16
nop
dec
inc
push
inc
push
ja
xchg
mov
mov
xchg
pusha
push
sbb
xlat
jmp
imul
fs
xor
ror
jge
or
add
jl
outs
sub
pop
aad
add
je
daa
data16
loop
inc
int
shl
popa
pop
and
sub
sahf
out
call
inc
movs
mov
adc
gs
leave
inc
jg
xchg
jns
push
cmps
push
movs
sbb
jmp
(bad)
cmp
aam
rep
pop
mov
mov
cmps
cmps
inc
popf
pop
call
add
ror
inc
mov
adc
mov
mov
rcr
xlat
pop
jmp
push
cmps
push
sub
cmp
aaa
adc
dec
dec
and
aam
push
test
ins
xchg
test
sub
inc
div
jnp
popa
jmp
jb
in
jle
cmps
stos
pop
ss
call
mov
retf
lods
movs
loop
aas
cwde
mov
mov
dec
cwde
push
lods
adc
out
dec
in
inc
jmp
cmp
xor
fsub
sub
repz
add
xchg
shl
sbb
pop
add
into
ss
or
std
mov
lock
fisttp
test
rcr
bndldx
pop
push
aam
lahf
pop
xor
xor
xchg
or
xor
(bad)
js
push
lahf
dec
call
mov
jae
xor
sbb
(bad)
sar
inc
rcr
in
jo
xor
cmp
in
sahf
adc
pop
mov
sub
sbb
and
ret
dec
or
cmp
xchg
xor
(bad)
mov
loopne
jno
jne
(bad)
cwde
inc
jne
movs
shr
bound
cmp
dec
out
cli
xchg
and
cmp
inc
fnstenv
call
pop
push
add
pusha
cld
ficomp
fnsave
jmp
mov
and
loop
gs
or
data16
outs
jge
sahf
push
mov
mul
ror
xchg
pop
cmc
add
inc
inc
mov
mov
xor
clc
jne
repz
lahf
dec
sbb
aam
sub
daa
xlat
push
fidiv
out
data16
popa
retf
mov
rol
dec
sbb
test
mov
and
lea
dec
mov
popf
xchg
out
or
or
scas
pushf
fnstenv
and
mov
sbb
popa
adc
jge
(bad)
les
loope
in
push
mov
in
ds
in
loop
xor
rcl
push
pop
push
jmp
mov
mov
adc
repnz
pop
in
pop
sbb
mov
xor
push
mov
popa
fdiv
pop
add
or
add
into
aaa
and
jmp
icebp
loop
ror
push
imul
imul
fsub
dec
and
dec
jns
fadd
out
xchg
outs
sbb
mov
or
or
(bad)
xchg
out
out
inc
mov
aaa
popf
punpckhwd
std
xor
jl
movs
mov
mov
icebp
mov
sbb
push
push
push
shl
mov
lods
(bad)
leave
adc
test
popf
fidivr
and
inc
xchg
addr16
je
(bad)
std
sub
jne
jecxz
fidiv
dec
clc
dec
in
imul
or
jne
push
sar
ins
dec
iret
pusha
loopne
aad
xchg
add
(bad)
fs
retf
lock
xchg
cmps
xor
pop
mov
jb
dec
push
push
mov
cmp
inc
cmps
repz
stc
ror
lea
xor
fnsave
div
pop
push
sbb
push
mov
movs
xchg
and
scas
push
and
cmp
outs
(bad)
in
je
cmps
nop
data16
into
sbb
int3
add
push
inc
les
xchg
stos
inc
(bad)
sbb
fcomp
mov
cmp
mov
xor
(bad)
fcmovu
dec
and
imul
dec
test
jle
mov
ins
jg
pop
push
clc
add
(bad)
mov
inc
mov
jge
mov
mov
mov
sti
retf
arpl
jmp
icebp
add
push
stos
adc
aaa
or
push
cwde
ja
and
(bad)
jmp
retf
inc
les
dec
shl
adc
or
and
sbb
data16
retf
push
sbb
je
stc
int
outs
xchg
inc
ins
xchg
(bad)
xor
push
sbb
cmp
pop
fist
xchg
ins
mov
cli
fcmovb
nop
fisttp
or
test
push
push
nop
pop
scas
aas
cmp
cmp
(bad)
cvtps2pi
pusha
dec
je
std
jecxz
mov
shl
sub
and
nop
adc
inc
cdq
scas
mov
mov
(bad)
mov
test
lods
xchg
jecxz
fwait
clc
outs
loopne
fs
sti
or
hlt
in
xlat
and
or
mov
inc
jnp
stos
addr16
ror
jl
jo
jo
pusha
mov
mov
cmps
shl
fnstenv
lea
xchg
fcomp
inc
jnp
imul
adc
(bad)
xor
dec
(bad)
push
push
xor
dec
sbb
popa
nop
sbb
jle
and
xor
aam
dec
scas
adc
and
(bad)
jl
aas
sbb
stos
push
mov
cld
dec
and
inc
aam
jle
stos
jp
sub
mov
mov
mov
mov
fimul
call
sbb
shl
mov
adc
sub
and
jno
cdq
push
out
xor
or
mov
shl
sub
sub
popf
fist
imul
aaa
hlt
in
jo
sbb
sbb
es
jne
ror
push
push
xor
push
mov
packuswb
pop
dec
mov
push
nop
add
dec
fcmovu
or
ja
pop
pop
xchg
cmp
pop
adc
into
data16
push
jmp
xor
inc
addr16
popf
pop
dec
(bad)
jl
aad
ja
jp
jno
mov
call
cmp
xchg
xor
sahf
add
jno
pop
fistp
das
xor
shr
xchg
or
std
xor
adc
push
cdq
imul
ins
fmul
es
sahf
push
dec
adc
lds
pop
jnp
mov
mov
ss
ds
(bad)
in
mov
ss
fwait
pop
xlat
aaa
inc
cmc
sub
nop
mov
jmp
pop
fwait
push
(bad)
pushf
popa
in
leave
iret
jge
ja
mov
pop
loope
scas
repnz
mov
mov
xlat
loope
gs
jns
cmp
cmp
mov
and
outs
inc
pushf
jbe
push
dec
retf
push
in
sbb
xchg
aad
ins
adc
inc
cmp
nop
xchg
fld
inc
iret
aas
jae
adc
ret
aam
inc
movs
and
adc
sub
mov
in
repnz
add
call
or
add
jb
pop
xor
sti
mov
or
cs
inc
mov
cld
xchg
(bad)
jmp
pop
add
adc
sbb
sahf
outs
pop
out
repnz
sbb
sahf
neg
inc
dec
retf
aam
dec
cmc
jnp
sti
fisub
xor
not
fdiv
mov
loope
sbb
mov
sub
dec
pop
push
sub
xor
push
sub
popa
rol
mov
xchg
in
cwde
adc
mov
mov
imul
iret
cdq
iret
cmc
mov
into
dec
dec
sahf
sub
jl
mov
dec
push
mov
jl
and
sbb
jb
and
in
mov
mov
add
and
mov
or
mov
popf
pop
pusha
cmc
and
mov
shr
xor
fdivp
stc
out
adc
loope
dec
mov
pop
aam
and
mov
adc
shl
sub
icebp
mov
push
mov
loopne
movs
jbe
outs
pop
in
shr
loop
mov
test
xor
call
pop
rol
add
jecxz
(bad)
in
sbb
das
(bad)
inc
add
aas
mov
mov
dec
mov
or
stos
cmp
and
(bad)
fld
jbe
cmps
popa
aas
push
inc
sbb
gs
mov
mov
mov
fldcw
and
stc
iret
push
cwde
cmp
inc
adc
adc
test
das
push
jo
mov
pop
sub
jmp
and
xchg
mov
sahf
adc
adc
std
leave
adc
jbe
mov
push
pop
mov
cmps
dec
jnp
sbb
rol
js
ds
cld
imul
and
adc
mov
cmp
retf
xor
and
outs
cmp
push
and
test
jecxz
xlat
(bad)
xor
and
(bad)
adc
jbe
mov
bound
fld
xchg
out
inc
loopne
cmp
inc
ins
popa
ins
and
pop
pop
cmp
pop
inc
popf
lahf
sbb
sbb
aas
pcmpgtb
jns
movs
cdq
jmp
out
cmp
dec
dec
or
aas
(bad)
dec
add
retf
ja
cmp
mov
in
and
inc
(bad)
repnz
icebp
mov
aad
push
push
sub
js
cmp
in
push
outs
sub
mov
adc
movs
add
push
dec
mov
loope
push
ins
mov
std
scas
jl
sbb
lods
dec
jp
jb
js
xchg
add
(bad)
call
sub
pusha
adc
faddp
and
add
pop
sar
mov
hlt
push
in
cmp
sub
mov
xchg
push
cmp
push
(bad)
out
push
dec
mov
popf
inc
and
mov
and
add
scas
out
movs
ins
jno
xchg
pop
sub
les
ds
inc
retf
pop
cmp
test
mov
neg
cdq
and
sub
cdq
inc
jns
inc
lods
scas
in
xor
jb
dec
mov
(bad)
in
call
mov
sbb
fsub
pop
cmp
cmp
push
mov
nop
and
xchg
mov
daa
pushf
add
mov
mov
push
or
inc
pop
clc
cmp
fdiv
or
mov
fstp
into
stos
pop
popf
arpl
mov
or
gs
dec
icebp
mov
ficom
cs
lods
ss
push
fcomp
addr16
fs
sub
(bad)
in
xchg
mov
inc
mov
mov
xchg
aas
xor
fldcw
je
ins
adc
jmp
dec
and
adc
ret
leave
hlt
fcmovnbe
call
cli
sar
sbb
lods
mov
jb
mov
add
fst
or
push
or
xor
and
cmp
mov
jno
call
jne
and
and
scas
inc
stos
dec
test
stos
pop
bound
inc
add
and
dec
aaa
xor
call
sti
push
scas
fisttp
out
jmp
and
jns
out
and
or
nop
icebp
out
and
jbe
bound
es
stos
stos
cmp
scas
clc
and
(bad)
in
cmp
leave
int
xchg
adc
dec
fst
fwait
in
sub
mov
cmp
arpl
bound
int3
cmps
sti
inc
shl
or
sbb
and
sbb
fidivr
inc
xor
inc
daa
ins
inc
jp
mov
mov
in
push
mov
fdivr
lods
xchg
mov
mov
or
dec
bound
xchg
fs
xchg
inc
outs
push
jne
ds
or
sub
shl
mov
adc
dec
pop
push
jne
sti
xchg
mov
jns
retf
xor
cmp
repz
jecxz
(bad)
aam
push
push
repnz
btr
cmp
pop
adc
dec
mov
mov
outs
xchg
sti
stc
inc
mov
or
pop
jmp
out
(bad)
pop
imul
add
mov
out
ins
cdq
(bad)
xchg
push
or
push
scas
mov
pop
xchg
sbb
call
enter
mov
pop
int3
jle
push
sbb
ror
pop
xchg
mov
int
adc
fsub
dec
je
out
cmp
(bad)
cmp
push
push
movups
pop
mov
mov
rol
xor
inc
(bad)
fbld
push
test
cwde
test
push
je
cs
ret
outs
xor
sbb
cmp
ret
pusha
push
or
mov
test
daa
inc
cld
fsub
nop
sub
das
ret
sub
sbb
mov
jne
adc
sub
int3
jge
mov
into
lahf
push
mov
adc
add
shl
je
pop
outs
mov
xlat
dec
out
loope
repnz
sbb
cmp
gs
sahf
cmps
jns
cmp
(bad)
pop
add
mov
outs
jne
loopne
ret
or
dec
leave
les
xor
adc
cmc
(bad)
out
xchg
(bad)
movs
out
adc
enter
inc
inc
xchg
adc
je
jp
mov
inc
cs
or
jmp
add
shl
xchg
and
pop
retf
dec
daa
xchg
aaa
ins
cmp
xchg
xchg
and
mov
mov
call
cs
rol
jl
fsub
jb
(bad)
jno
xchg
mov
inc
or
or
inc
idiv
cld
fcmovb
fild
cmps
xchg
inc
jge
aaa
aas
push
lock
sbb
and
jb
out
xchg
inc
imul
jnp
aam
mov
popa
mov
dec
jo
nop
es
add
les
or
mov
sahf
mov
das
es
adc
leave
fisub
mov
je
jecxz
inc
arpl
test
outs
or
add
mov
jge
jb
jbe
and
loop
jmp
adc
nop
(bad)
mov
in
fwait
leave
mov
cwde
sub
movs
add
(bad)
mov
mov
mov
sar
lock
and
imul
ins
mov
pop
pop
xor
adc
shr
sub
cmp
out
or
xchg
inc
cdq
mov
bound
cmp
or
jg
mov
out
xor
cmp
and
and
in
xchg
pop
sbb
sub
stos
in
dec
popa
shl
mov
rcl
push
xchg
dec
int3
scas
aas
mov
sub
loope
fwait
aaa
shr
(bad)
xchg
inc
ins
in
xchg
cmps
or
movs
dec
adc
xor
jo
stos
inc
xor
addr16
lods
cmp
cmp
or
sbb
jmp
push
ret
adc
and
and
push
clc
jp
or
and
mov
fidivr
push
mov
mov
mov
fidiv
fidivr
pop
shl
aad
jbe
xchg
jle
pop
cld
es
imul
cli
leave
ret
and
cmp
out
cld
adc
cld
lock
lods
push
or
fldcw
sub
push
lahf
test
call
loop
sub
imul
push
sbb
inc
adc
sbb
lahf
outs
ror
push
dec
sub
out
dec
scas
stc
(bad)
or
loopne
icebp
fidivr
sbb
das
icebp
(bad)
cmp
push
cmp
rol
out
and
adc
fidiv
mov
lahf
pop
js
fist
mov
sti
and
sbb
call
test
cmps
jnp
mov
mov
mov
or
dec
push
push
sub
mov
mov
and
js
or
dec
cli
dec
clc
dec
inc
pop
jnp
test
scas
jl
rcr
daa
mov
outs
(bad)
cli
and
pop
sub
arpl
and
inc
jle
ret
jle
mov
stos
cmc
sar
dec
in
popf
(bad)
call
sbb
popa
xchg
in
adc
jp
pop
addr16
add
pop
js
dec
js
push
inc
pop
adc
pop
cmp
push
push
or
adc
test
shr
inc
jbe
iret
cwde
jbe
pop
and
rol
adc
(bad)
jmp
call
add
lahf
stos
imul
fadd
mov
ins
cmp
add
dec
xor
je
push
idiv
ret
rcl
stc
(bad)
mov
cs
jo
sub
jmp
aaa
prefetch
or
pop
data16
jns
and
inc
aad
dec
scas
fidivr
mov
cmp
cmp
arpl
js
shr
pop
cs
fstp
jno
mov
bound
and
imul
xor
lea
xchg
aam
lahf
nop
push
test
pop
mov
inc
adc
ss
xchg
ss
inc
pop
xor
and
fwait
sub
pop
cmps
cld
cmp
and
dec
pop
ret
repz
mov
aaa
mov
sbb
dec
aad
repnz
movs
fiadd
xchg
out
inc
mov
dec
mov
int
in
es
stos
push
dec
cmp
outs
dec
out
out
lea
sbb
sub
xor
adc
push
test
jp
xor
and
mov
jnp
pop
jmp
sub
xchg
lahf
cvtdq2ps
adc
dec
das
fsubp
sbb
adc
ficomp
push
jmp
xor
sub
jmp
popf
popf
xchg
push
and
call
(bad)
pop
adc
and
mov
popf
push
sub
cmps
stc
xor
or
jp
or
pop
pop
arpl
push
stos
frstor
xrelease
cmps
add
ss
dec
push
lods
bound
xchg
sub
jge
jmp
pop
and
ds
or
jno
loop
stos
repz
pop
lock
and
mov
jbe
push
sbb
lds
dec
inc
xchg
cmp
inc
or
inc
xchg
push
(bad)
(bad)
pop
ret
into
jnp
cmp
fisttp
cmp
push
es
pop
aas
push
push
inc
sub
inc
and
jle
lods
retf
ss
xor
imul
sahf
sbb
arpl
lds
jle
xchg
call
jo
sahf
sub
push
movs
xlat
call
jp
fadd
xchg
lock
(bad)
int3
movs
or
setle
mov
mov
mov
test
jmp
fs
retf
cli
cmp
fisttp
inc
daa
sbb
jge
sbb
or
jmp
mov
ret
xor
ins
fsub
or
pop
ret
jp
fiadd
cmp
retf
pop
aam
inc
and
movs
retf
or
mov
inc
ret
inc
push
jle
mov
add
psubusb
in
cmc
fiadd
xchg
pop
aam
out
mov
nop
jge
mov
imul
sbb
cmp
shl
movs
shl
pusha
(bad)
xor
xlat
or
push
das
pop
rcl
mov
add
scas
push
cmps
jge
(bad)
mov
or
leave
pop
mov
jbe
or
or
jp
cs
call
cwde
cmp
add
mov
push
jmp
mov
jp
mov
mov
sbb
pop
push
dec
mov
mov
sbb
cmp
or
ss
fs
or
add
jge
xchg
pop
mov
aad
stc
imul
(bad)
add
jbe
cld
ret
lock
out
imul
imul
add
les
adc
xchg
out
int
sbb
imul
inc
scas
or
pusha
out
test
xacquire
add
mov
sbb
js
fs
jg
into
pop
mov
cld
sub
xor
(bad)
dec
jns
sbb
dec
pop
push
sbb
(bad)
in
jl
mov
and
pop
inc
and
inc
lahf
into
dec
inc
and
dec
cdq
pop
sahf
outs
fwait
sbb
test
ds
fs
xchg
inc
push
pop
mov
mov
jne
mov
js
movs
call
out
pop
fild
cmp
adc
fmulp
push
mov
popa
into
xchg
in
and
aaa
inc
pop
add
mov
pop
cwde
jb
mov
sahf
lea
sbb
loope
xchg
mov
sbb
push
shl
and
dec
outs
adc
fstp
fwait
clc
cmp
push
and
and
inc
in
ss
inc
test
jl
adc
ja
hlt
lock
test
or
xchg
aam
aam
outs
cmp
lds
add
gs
addr16
and
ins
inc
dec
adc
daa
sar
add
sub
out
inc
sub
in
outs
out
xchg
jle
push
pop
pushf
loop
adc
(bad)
rcl
out
push
pop
mov
sub
pushf
repz
jno
sbb
sub
shl
xchg
into
shl
mov
retf
pop
inc
mov
sti
js
cwde
into
jmp
ffreep
lahf
xor
ret
repz
push
xor
cld
add
mov
mov
rcr
push
mov
adc
xlat
pop
(bad)
dec
push
std
jne
jecxz
fwait
enter
mov
in
mov
cmps
pop
mov
add
jge
xor
aad
push
loop
mov
arpl
mov
mov
jae
or
ffree
adc
push
out
sub
int
adc
aad
or
movs
outs
inc
or
pop
xor
lea
adc
xchg
jmp
cld
stc
nop
scas
out
cmp
xor
mov
ins
shr
dec
push
mov
xchg
nop
cmps
mov
pop
int3
mov
mov
neg
jmp
mov
dec
or
cmp
sub
cmp
and
(bad)
fcom
iret
fidivr
sub
dec
mov
test
(bad)
lods
sahf
ds
fdivr
je
mov
sub
(bad)
sbb
ja
dec
aas
push
loope
sar
mov
cmp
xchg
fadd
mov
add
dec
mov
outs
mov
mov
dec
(bad)
addr16
add
xchg
(bad)
cmp
jecxz
mov
icebp
push
repnz
imul
dec
push
retf
mov
dec
and
ficomp
mov
xchg
ins
(bad)
sbb
mov
mov
call
stos
pop
adc
mov
mov
inc
pop
aas
pop
addr16
stos
or
aas
jns
dec
stos
out
jbe
ret
stos
sub
imul
sbb
int
jmp
test
iret
mov
xor
sbb
xor
mov
push
sub
cmps
das
dec
popf
arpl
mov
test
lea
scas
mov
adc
push
scas
test
cmp
cmps
xchg
movs
jns
adc
and
inc
xchg
cli
jno
jg
dec
mov
and
popa
sbb
(bad)
ds
jo
push
cmp
or
push
pop
adc
inc
sub
nop
push
jb
ret
loop
aad
out
xchg
call
or
or
sub
mov
aaa
jae
js
in
shr
xor
mul
xchg
xchg
(bad)
dec
or
jmp
cmp
mov
pop
inc
loop
ins
retf
test
mov
pop
call
(bad)
(bad)
inc
cmp
add
test
mov
push
add
xchg
xchg
int
sahf
push
sar
adc
outs
cld
add
and
ficomp
outs
push
xlat
and
mov
pushf
in
mov
dec
mov
jecxz
movs
jge
and
outs
sbb
lods
pop
xor
frstor
cmp
push
adc
fidivr
add
adc
dec
iret
cdq
xchg
mov
pmaxsw
jmp
mov
add
adc
dec
jbe
sbb
std
cli
sbb
scas
retf
int
inc
push
jno
sbb
jmp
data16
aam
xor
sub
lahf
mov
das
inc
inc
cmp
cmps
scas
pop
ror
sub
addr16
pop
cmp
lea
and
cmp
xor
inc
sub
int
fist
pop
hlt
je
xchg
movs
sub
push
and
push
test
test
cmc
cmovl
test
out
sar
sub
in
pop
pop
in
call
sbb
pop
jmp
call
ret
cmc
inc
fadd
movs
lock
fs
mov
mov
or
movs
mov
ins
jbe
or
ficomp
add
adc
shl
ficom
sbb
lds
call
jmp
dec
(bad)
cmp
inc
(bad)
mov
imul
fadd
jmp
cli
adc
add
cmp
lahf
js
jl
mov
or
cmp
fcmovbe
sub
(bad)
mov
jp
inc
cmp
jne
mov
arpl
ret
jl
sub
add
ret
mov
clc
and
jle
or
fsubr
add
dec
dec
cdq
mov
out
repnz
test
lods
or
sahf
mov
push
mov
xchg
dec
inc
stos
out
daa
dec
retf
aaa
xchg
inc
pop
jmp
cmps
cmp
aaa
aad
rcl
jbe
fiadd
popa
imul
and
popf
into
dec
ret
test
add
or
call
fcomp
je
fadd
jno
sbb
xchg
xchg
cmp
fcomp
das
pushf
fild
and
xchg
sbb
inc
rol
fs
repz
sbb
jmp
jns
ins
mov
sub
(bad)
bound
pop
sahf
xchg
and
mov
xchg
pop
fs
sbb
inc
addr16
jno
in
push
xchg
or
sbb
pop
out
in
div
repnz
ror
test
mov
pop
mov
add
xor
mov
scas
loope
je
and
(bad)
les
icebp
sub
mov
scas
les
retf
in
js
fidivr
xchg
test
mov
mov
sbb
shl
popa
mov
push
ds
inc
push
xchg
test
jg
aaa
int3
iret
xchg
push
(bad)
int
jno
shr
das
ins
jne
mov
or
sub
outs
sbb
(bad)
js
add
xor
push
aaa
push
call
and
inc
cmc
cld
cmp
add
mov
mov
cdq
(bad)
into
xor
pop
push
enter
jnp
int
pop
nop
mov
dec
lahf
inc
aad
(bad)
in
jmp
push
mov
ins
rol
and
in
mov
pop
cmp
pop
ret
ror
jnp
push
and
push
jnp
in
mov
xor
aam
inc
xchg
mov
std
cmp
retf
cmovs
(bad)
mov
sbb
add
sub
pop
dec
mov
xor
inc
imul
adc
adc
sti
push
clc
loop
add
cmps
add
xor
cmp
jmp
mov
lods
sub
dec
push
dec
lods
mov
mov
jns
mov
gs
xor
lods
dec
in
adc
xchg
sbb
inc
jecxz
out
(bad)
sbb
sub
mov
jmp
adc
hlt
dec
rcl
pop
push
in
hlt
test
hlt
jmp
or
aad
xchg
fisttp
pusha
mov
test
xor
jns
imul
xchg
mov
in
xor
gs
inc
cmp
ss
dec
inc
xchg
xchg
dec
sub
test
xchg
dec
xchg
ret
and
cld
sub
sahf
xor
imul
mov
xchg
mov
pop
push
nop
cmp
movs
(bad)
clc
jns
dec
and
mov
adc
adc
into
dec
shr
sbb
icebp
and
sbb
pop
dec
add
test
xchg
shl
cmc
sbb
js
imul
pop
sbb
sub
xor
cmps
(bad)
lock
cmp
mov
test
retf
popa
lock
ret
mov
fiadd
aad
fwait
mov
(bad)
adc
fcomp
cmp
jg
imul
in
pop
push
mov
cmp
scas
bound
fwait
or
out
repnz
cmp
mov
xchg
rol
cmp
sbb
xchg
xor
mov
aad
mov
movs
jnp
stos
xor
in
push
hlt
jns
jno
mov
sub
cdq
ins
retf
and
cmps
fcomp
mov
(bad)
or
xchg
retf
dec
jb
xor
bound
or
in
fucomip
in
pop
aad
loope
sbb
sbb
iret
ret
xchg
add
jle
xor
inc
(bad)
repnz
ins
mov
push
push
les
ret
pop
int
mov
aad
call
jmp
in
call
xchg
cmps
sbb
loope
repnz
test
xchg
inc
out
jmp
outs
and
std
fwait
jg
imul
imul
jg
jg
xchg
sub
adc
push
jg
scas
mov
fwait
mov
in
js
scas
sub
or
test
test
outs
lea
mov
jle
mov
sbb
(bad)
loopne
mov
xchg
mov
stos
xchg
and
pop
cmp
mov
pushf
mov
mov
movs
add
add
inc
mov
cmp
and
push
in
sbb
or
outs
sbb
(bad)
(bad)
lock
scas
sbb
in
fwait
pop
xchg
test
inc
ret
or
test
movs
xchg
arpl
dec
push
test
aad
dec
imul
jge
bound
mov
mov
adc
fsubr
aad
nop
gs
push
popa
lea
dec
jo
inc
test
mov
test
enter
scas
inc
cwde
add
jmp
adc
push
adc
dec
adc
xchg
lds
ja
mov
cwde
leave
imul
js
mov
xchg
mov
xor
mov
xor
dec
lea
inc
adc
xchg
mov
sub
mov
adc
adc
fadd
ret
inc
mov
into
sbb
fcmovbe
test
push
les
shl
(bad)
xlat
xchg
cmp
fiadd
xor
push
mov
nop
in
and
pop
stos
jge
xchg
xor
scas
pop
cmp
mov
imul
mov
fucomp
push
mov
shr
test
js
loop
fwait
cld
pop
(bad)
out
jmp
adc
sahf
cmp
repnz
scas
push
icebp
jl
dec
and
gs
nop
imul
adc
jae
ficom
cmps
jne
call
lods
mov
icebp
out
into
pop
pop
mov
mov
cmp
(bad)
pop
ds
pop
jg
mov
mov
loopne
(bad)
fucom
cmp
test
test
cmp
mov
cmp
cmp
ret
cmc
cdq
xlat
iret
stos
pop
or
jmp
push
xor
jmp
xchg
call
out
cmp
xor
cli
shl
jmp
inc
fist
out
xchg
addr16
ds
cld
icebp
dec
cmc
les
push
xchg
or
pop
push
ss
test
jecxz
ds
cmc
out
out
ret
test
inc
cmp
ja
ret
dec
shl
or
sar
jl
or
pusha
cld
ds
ret
(bad)
push
xor
scas
ror
push
and
mov
repnz
dec
je
inc
fdivr
(bad)
xor
sar
popf
or
jmp
sbb
push
mov
in
pusha
cmp
jge
jbe
pop
pop
sbb
call
push
int
mov
jle
ror
ret
or
or
ins
test
ret
(bad)
movs
cdq
or
push
inc
ins
fisubr
pop
push
pop
(bad)
fsub
add
stc
lea
addr16
int3
mov
push
pushf
add
test
jno
pop
ds
dec
outs
in
dec
arpl
or
call
and
pop
dec
sbb
mov
jbe
lahf
jmp
pop
cmp
sub
adc
pop
inc
jbe
cmc
cdq
dec
fs
in
push
imul
call
(bad)
jle
(bad)
shl
push
inc
mov
les
rol
stos
mov
xchg
xchg
(bad)
push
inc
rcl
xchg
mov
mov
fadd
mov
dec
cld
loope
or
shl
data16
mov
add
jle
or
fwait
scas
jno
clc
add
pop
in
inc
pusha
jnp
mov
or
jns
push
pop
fwait
lds
out
adc
lea
stos
jne
in
repz
sahf
mov
lods
in
mov
or
arpl
shr
cdq
fdiv
adc
jle
xor
cli
stos
jecxz
pop
or
(bad)
jp
call
and
lods
or
outs
push
mov
pop
stc
mov
mov
test
jmp
sub
add
call
fstp
iret
sti
xor
imul
sub
cs
imul
adc
ja
les
rcl
push
or
push
jo
dec
inc
dec
and
cdq
jmp
xor
data16
dec
xchg
loopne
inc
dec
or
inc
xchg
xchg
hlt
enter
(bad)
(bad)
call
enter
jo
fisubr
lods
or
ins
adc
pop
or
fcompp
mov
push
pushf
ss
sahf
xchg
xchg
mov
inc
loop
scas
xchg
dec
pop
popa
popf
pop
dec
jge
ret
imul
xor
mov
stos
ret
lahf
loopne
je
stc
das
leave
cmp
je
jns
pop
sbb
cs
sub
nop
adc
in
and
mov
pop
dec
pop
dec
add
clc
(bad)
imul
ret
add
dec
inc
(bad)
scas
js
jo
dec
mov
movs
add
call
xor
sbb
jl
std
je
cs
mov
or
mov
cwde
add
aaa
push
hlt
ss
xor
lods
jae
mov
movs
repnz
mov
out
jae
sbb
lods
adc
cmp
jae
adc
rol
lods
adc
jecxz
xor
sub
jmp
pop
icebp
or
xchg
and
sar
mul
dec
and
adc
sub
mov
push
adc
cli
mov
ret
cmps
in
xor
xor
sbb
fisub
adc
inc
sbb
push
mov
xor
jne
push
push
push
add
sbb
test
sub
pop
mov
jb
or
adc
mov
or
pushf
in
(bad)
call
test
mov
ss
lea
jecxz
dec
ins
xchg
push
xor
cmp
adc
movs
aaa
push
mov
(bad)
imul
jns
pop
push
lods
out
push
lahf
dec
pushf
pop
fld
js
repz
mov
ja
push
into
rcl
xchg
and
fmul
test
repz
or
in
mov
push
sub
fwait
xchg
sbb
cmp
test
popf
repnz
xchg
shr
xchg
xchg
push
jge
pop
aam
ins
fidiv
add
ds
shl
(bad)
fnstenv
dec
test
retf
in
std
mov
iret
ret
add
jmp
pop
sbb
xchg
pop
xor
shl
retf
xlat
jl
xchg
push
in
push
dec
push
mov
and
fisttp
arpl
int3
lahf
(bad)
and
test
mov
dec
lea
inc
sub
pop
out
xchg
pop
xor
(bad)
fldcw
imul
push
jno
cmps
test
ror
mov
movs
xor
pop
retf
mov
test
std
lock
cli
mov
out
jb
and
and
pop
and
dec
loope
frstor
and
outs
ins
jne
jne
sbb
call
enter
add
xor
add
adc
adc
fld
sub
dec
adc
push
es
cmp
not
js
add
or
leave
addr16
cs
ins
add
xor
dec
mov
jge
fisubr
inc
jmp
xor
add
or
rol
ret
jl
add
xchg
xchg
shl
push
cmp
call
push
mov
(bad)
pop
xor
xor
and
jb
inc
retf
sbb
shl
cmc
pusha
pop
adc
adc
popf
je
rcl
mov
addr16
lahf
mov
and
btc
sahf
aam
je
adc
and
imul
lock
mov
and
pop
jmp
cmp
mov
sub
(bad)
retf
pop
dec
push
xchg
add
gs
in
dec
pushf
rol
adc
mov
aas
xor
mov
mov
ret
daa
xor
out
xchg
add
push
sti
inc
loop
mov
sbb
lahf
test
mov
mov
sbb
repnz
xor
or
(bad)
test
pop
das
inc
xchg
inc
popa
aam
rep
in
icebp
or
call
add
xchg
mov
(bad)
push
jbe
icebp
jno
stos
push
mov
mov
mov
cmp
pop
mov
call
jmp
push
pop
cmp
push
mov
inc
sub
inc
dec
je
adc
sahf
mov
add
leave
or
(bad)
std
(bad)
stc
sbb
mov
inc
xor
push
jle
push
mov
pop
je
add
inc
jb
xor
adc
mov
pop
push
das
(bad)
fisttp
cmp
jb
jnp
push
inc
imul
adc
addr16
sbb
scas
sub
out
lds
jbe
jge
ja
xchg
mov
jmp
mov
popa
imul
dec
cmc
iret
nop
aaa
leave
ss
mov
and
sbb
push
jle
lods
loop
jle
out
out
pop
inc
aad
mov
xchg
fwait
mov
xchg
ins
sub
enter
jno
cmp
inc
(bad)
xchg
and
push
cmps
ffree
xor
sbb
ret
xchg
aam
(bad)
push
mov
sahf
cmp
jmp
and
sbb
in
out
push
xor
addr16
popa
xchg
test
pop
or
add
mov
xchg
(bad)
xor
daa
add
inc
mov
sub
dec
daa
and
xchg
inc
int
out
js
lahf
adc
sub
out
cli
or
cmp
fcomip
clc
xlat
dec
mov
outs
clc
stc
idiv
fsub
fadd
mov
mov
(bad)
dec
push
sub
adc
and
ss
pop
push
cmp
outs
sbb
xchg
jb
aaa
and
jg
cwde
not
mov
das
pop
mov
daa
xchg
fucomip
xchg
add
mov
sub
test
scas
and
mov
adc
cmps
mov
sub
enter
mov
retf
jl
aam
in
ss
mov
pop
cmp
ret
jnp
shr
jmp
jnp
mov
cld
call
ficom
dec
dec
jnp
ret
jg
xchg
mov
jp
mov
stos
xchg
test
sub
ins
mov
inc
outs
sbb
mov
jl
mov
mov
push
popf
pop
lods
cmp
and
mov
mul
and
cmp
pushf
or
xlat
xor
mov
jmp
int3
(bad)
mov
in
dec
adc
fnsave
jo
mov
or
push
mov
hlt
data16
sahf
push
cmps
icebp
fstp
repnz
add
mov
arpl
cmps
mov
inc
and
js
add
ficom
add
clts
data16
dec
inc
ins
retf
pop
(bad)
xor
xchg
ret
mov
(bad)
adc
pop
cs
xor
clc
xchg
(bad)
adc
or
int3
call
sar
jb
push
mov
test
lods
or
dec
xlat
dec
mov
jl
popf
or
test
inc
or
or
mov
inc
inc
ss
push
add
sub
imul
xor
test
and
not
adc
(bad)
mov
mov
inc
push
daa
cs
pop
adc
gs
or
jo
and
sti
int
sub
xchg
mov
lahf
mul
arpl
pop
ss
or
jmp
(bad)
pop
mov
test
xor
popf
push
dec
jbe
mov
addr16
inc
ret
mov
dec
mov
xor
test
iret
scas
out
lahf
mov
out
sar
jecxz
jle
in
jmp
sub
or
xchg
and
in
ins
mov
xchg
cld
push
mov
(bad)
in
enter
and
sub
inc
mov
lock
ins
push
ret
shr
inc
adc
movs
into
add
ffreep
iret
mov
retf
lods
add
cdq
mov
pop
faddp
and
mov
pushf
popa
arpl
retf
pop
inc
xchg
and
sub
mov
inc
and
mov
sub
jo
xor
shr
push
mov
jb
and
std
int3
inc
in
jp
mov
inc
pop
outs
push
cdq
loop
push
fbld
xchg
push
mov
mov
or
mov
in
mov
(bad)
xchg
fisub
cmp
cmp
adc
push
out
test
xor
std
loope
pop
add
pusha
loopne
fstp
inc
pop
test
pushf
adc
push
inc
mov
inc
imul
enter
fmulp
fadd
mov
(bad)
lods
push
mov
pop
xor
adc
out
sub
dec
and
xchg
mov
add
sbb
jnp
fbld
pop
mov
jg
jns
stos
push
jg
push
sbb
enter
enter
loopne
pushf
fstp
cmp
cmp
aaa
cwde
inc
popf
das
cmp
loop
stc
sbb
cwde
push
rol
int
cdq
push
mov
adc
sub
sub
push
lahf
mov
jno
adc
inc
mov
inc
push
mov
shl
test
aas
(bad)
cld
cs
ins
jno
fsub
fdiv
sbb
mov
mov
pop
ficomp
pop
push
xor
stc
or
jp
pusha
jle
add
jg
adc
adc
test
inc
out
loope
fdiv
push
inc
retf
jecxz
jp
dec
mov
scas
adc
les
dec
sbb
xor
jnp
adc
outs
leave
cs
cmp
lods
dec
je
int3
mov
pop
std
xor
xor
inc
mov
dec
mov
repnz
push
xor
sub
xchg
push
mov
dec
mov
add
ds
hlt
mov
or
cmp
loope
(bad)
enter
out
shr
pop
jl
xor
(bad)
fisubr
mov
inc
cmc
imul
and
fadd
xchg
in
push
lock
cwde
push
rcr
push
pop
mov
jmp
or
ror
xor
add
or
dec
pop
fimul
xchg
and
inc
pop
es
pushf
retf
push
sbb
push
fimul
arpl
lea
xchg
ss
xchg
dec
xlat
or
inc
dec
xor
mov
pushf
xchg
in
lods
int3
ss
adc
xchg
sbb
mov
js
jecxz
data16
xchg
(bad)
xlat
xor
add
fdiv
aad
jns
sub
test
pop
dec
retf
ins
pop
xor
loopne
jo
pop
imul
andpd
mov
xchg
cdq
push
fs
stc
pop
pop
xchg
out
inc
mov
fadd
shr
jno
jg
into
push
xor
cdq
inc
inc
int3
mov
push
inc
das
(bad)
imul
pop
jecxz
lock
movs
(bad)
(bad)
lock
jmp
mov
jecxz
push
dec
sub
cs
ja
imul
inc
lods
imul
xchg
jmp
jp
pop
call
sub
push
add
pop
sbb
sbb
cmps
mov
mov
into
adc
push
lods
xchg
cmp
xor
ret
pop
and
aaa
dec
sbb
loopne
push
ja
(bad)
sub
mov
stc
sub
jnp
fcom
es
xchg
outs
sub
dec
cmp
mov
das
shl
je
and
xor
push
shl
test
or
call
mov
enter
cld
test
and
scas
add
mov
dec
call
push
stos
cmps
xor
ins
mov
jmp
cmp
dec
mov
test
(bad)
dec
pop
dec
cmp
and
adc
lahf
loopne
adc
xchg
jecxz
(bad)
mov
mov
and
cs
cmp
stos
(bad)
ret
std
add
jmp
and
scas
in
shl
lods
aad
cmp
xrelease
pop
inc
fld
pusha
cs
inc
popa
or
mov
dec
mov
vcvttps2dq
push
movs
mov
jns
dec
push
mov
sub
cmp
and
in
mov
(bad)
icebp
into
pop
lods
outs
push
(bad)
mov
scas
clc
inc
outs
add
repz
call
inc
xchg
pop
ret
inc
add
xchg
test
pop
scas
icebp
cmp
push
jp
(bad)
mov
sbb
lea
rcr
cmp
and
xor
jne
imul
mov
shl
test
push
push
icebp
js
pop
(bad)
xor
(bad)
outs
in
pop
fistp
ja
jmp
movs
call
(bad)
and
aas
iret
jp
add
iret
jae
dec
push
pop
jge
or
mov
push
and
les
idiv
cmp
in
out
jne
jmp
loopne
jae
imul
cmp
pop
call
push
jnp
dec
sbb
ror
mov
fldcw
sbb
cmps
mov
popf
xor
das
ror
daa
xchg
pop
retf
popf
add
out
push
jmp
test
mov
imul
test
or
inc
inc
mov
cld
stos
cmp
imul
fcom
mov
test
in
mov
cdq
mov
add
adc
xchg
inc
xchg
or
mov
mov
mov
mov
cmc
or
or
inc
rol
test
popf
cmps
push
aad
jle
sbb
pop
dec
adc
int3
ret
cmp
inc
mov
cmp
loop
mov
push
cmp
scas
xchg
(bad)
xlat
add
jne
add
retf
mov
cmp
pop
outs
clc
lahf
xchg
xchg
sar
loop
ds
rcr
jns
push
mov
(bad)
outs
lock
cmp
jge
mov
(bad)
(bad)
ins
addr16
xchg
or
stc
push
pop
int3
pushf
mov
bound
add
cmp
dec
or
push
(bad)
mov
xor
fpatan
cmp
nop
bound
outs
xlat
inc
cli
fdivr
xlat
test
ja
stos
push
fwait
inc
dec
and
test
aaa
iret
fistp
test
fwait
cmps
xor
hlt
ins
out
pop
into
icebp
ficom
loope
stos
push
dec
jae
movs
nop
inc
dec
mov
lock
or
inc
pop
popf
movs
push
or
(bad)
mov
mov
rol
loope
jbe
inc
les
and
pop
jmp
les
sahf
jne
push
lahf
adc
hlt
xchg
mov
shl
ds
inc
scas
(bad)
aas
pop
cli
dec
arpl
dec
rol
sub
add
aad
stos
pop
cwde
outs
sub
das
add
pop
xchg
sbb
aam
mov
pop
and
scas
repnz
push
test
fiadd
fstp
add
push
lea
push
xchg
repnz
cli
jb
mov
mov
fstp
int
sti
push
(bad)
pop
mov
and
fisubr
sar
fnstenv
(bad)
in
data16
or
ror
push
in
add
sti
xchg
inc
push
inc
dec
xchg
mov
add
mov
jge
daa
cmp
popa
rcl
adc
popa
pop
dec
cmp
outs
sub
and
mov
cld
mov
mov
or
push
or
mov
fist
movs
adc
adc
mov
repnz
fsub
(bad)
out
out
jmp
aaa
xchg
scas
fdivr
movs
sbb
mov
mov
shl
adc
movs
jne
sbb
pusha
mov
lods
(bad)
in
or
movs
sub
out
mov
jg
dec
and
inc
mov
mov
aam
dec
or
das
mov
cmp
pop
call
out
pop
sbb
add
push
cwde
addr16
sbb
mov
mul
mov
mov
pop
ret
push
hlt
jbe
push
repz
adc
jge
push
das
lods
ins
or
xor
(bad)
in
push
mov
test
loopne
data16
xor
mov
jg
pop
push
ret
push
jg
pusha
les
xchg
or
addr16
pusha
push
icebp
arpl
ss
mov
and
ss
inc
or
cmp
inc
adc
jmp
dec
inc
xor
xchg
xor
movs
outs
ror
mov
xor
jmp
dec
jno
push
test
push
inc
dec
dec
mov
pop
adc
pop
(bad)
inc
push
outs
add
fldenv
test
jle
dec
mov
or
mov
mov
(bad)
call
or
inc
pusha
mov
pop
jae
inc
retf
adc
xor
mov
push
add
adc
inc
in
mov
add
jle
and
loop
xchg
loopne
mov
jmp
in
add
adc
xchg
and
push
sbb
sti
push
int
in
cld
push
lock
inc
mov
dec
jmp
rol
xchg
fcom
push
cmp
or
sub
popf
mov
std
das
sub
adc
in
(bad)
push
loop
sbb
push
jns
sbb
data16
mov
call
sub
sub
mov
xchg
fnstsw
adc
sub
pop
mul
inc
sti
push
push
sar
xchg
loopne
(bad)
in
rcr
jg
out
nop
sti
adc
mov
push
inc
sub
jb
mov
jmp
out
add
inc
mov
mov
mov
aas
call
fild
jb
cmp
dec
xor
xchg
inc
not
shl
xchg
xor
data16
dec
retf
cmp
das
pop
mov
add
into
test
int3
jnp
cmp
cld
popa
jmp
outs
in
dec
add
(bad)
aad
push
jmp
fbld
cmc
pop
sub
adc
adc
sub
movs
mov
aaa
inc
callw
in
imul
ror
ror
xchg
sbb
lds
add
fs
(bad)
addr16
ficomp
inc
push
repnz
xchg
in
(bad)
mov
(bad)
pop
sub
dec
inc
lds
stos
ja
jmp
mov
inc
out
dec
sbb
jecxz
das
dec
lea
mov
xor
mov
mov
xchg
inc
jb
pop
lahf
fldlg2
fisttp
push
nop
jmp
shl
loopne
iret
pop
das
sbb
push
mov
add
xor
outs
jmp
pop
mov
push
fdiv
push
lds
sbb
sub
sub
mov
in
mov
out
mov
shl
pop
ds
or
clc
test
inc
adc
or
cmp
outs
xor
sar
xor
jmp
in
mov
add
loope
inc
imul
movs
fcomp
mov
sbb
and
loop
sar
jae
mov
fcom
ds
shl
xor
(bad)
retf
arpl
fnstcw
jl
cmp
retf
jno
adc
scas
fwait
popa
call
icebp
pop
xchg
dec
ja
adc
(bad)
imul
xor
mov
sub
jle
cmp
or
jg
ja
loop
dec
mov
test
pop
das
idiv
mov
pop
(bad)
std
or
rcl
xchg
xor
pop
mov
loop
into
mov
mov
out
or
add
sub
retf
mov
push
into
or
fcomp
int
dec
and
jnp
cmp
out
inc
mov
push
aad
cwde
call
mov
in
repz
cwde
jmp
gs
in
adc
push
xchg
jo
dec
push
out
adc
pop
add
loope
stc
scas
hlt
outs
mov
aaa
pop
pop
xchg
clc
xor
loopne
popa
repnz
pop
jb
repnz
pop
and
add
cmp
mov
adc
test
dec
cmp
mov
test
stc
or
push
(bad)
(bad)
lahf
mov
add
dec
pop
mov
fwait
or
shr
mov
push
push
mov
stc
cwde
cmps
into
aad
std
xchg
ins
out
xchg
adc
addr16
add
frstpm(287
and
jge
inc
pop
fwait
mov
movs
div
push
cmp
pusha
rcl
xchg
inc
xor
imul
pushf
push
ins
repnz
mov
pop
aaa
mov
nop
push
add
or
dec
push
xlat
fmul
(bad)
jg
push
adc
aas
loopne
mov
sti
nop
push
jnp
in
fdivr
xchg
ss
int3
fisubr
bnd
mov
nop
jns
mov
dec
mov
loopne
adc
(bad)
in
ficom
sub
adc
cmp
push
sub
pushf
mov
cld
iret
and
cmp
daa
into
mov
mov
push
xor
mov
or
rol
mul
fwait
hlt
inc
xchg
arpl
sahf
icebp
add
sbb
dec
inc
adc
stos
inc
les
ja
cmps
pop
mov
pusha
xor
mov
cld
xor
fld
jmp
frstor
leave
arpl
sbb
fisub
cmps
inc
and
cmps
(bad)
jo
sub
iret
pop
jmp
(bad)
lock
cld
push
xor
or
int
adc
xlat
dec
loope
push
pop
into
je
icebp
mov
cli
bound
test
pop
bound
cmp
or
div
adc
retf
jecxz
xchg
fdiv
cli
das
mov
lods
pop
jge
mov
ins
leave
fs
mov
leave
inc
xor
cmps
jo
xor
clc
sub
mov
sub
mov
push
and
pusha
sbb
(bad)
cmc
stos
scas
xchg
cmp
inc
in
leave
ja
xchg
fld
or
inc
jae
xchg
xchg
int3
cmp
das
mov
ins
pusha
in
or
sbb
outs
mov
push
lods
push
mov
lods
call
push
and
inc
lahf
rol
mov
stos
xchg
jo
daa
idiv
xchg
iret
ss
mov
cmps
sti
jne
jle
add
mov
mov
sti
fidivr
lahf
js
mov
rol
sbb
dec
aam
dec
out
push
cmps
sti
(bad)
mov
dec
jns
jl
fmulp
sbb
hlt
and
scas
sbb
pusha
ja
add
bound
pop
mov
xor
ins
cdq
mov
pop
jecxz
ffree
adc
ret
les
jle
cld
push
stos
and
lods
cwde
neg
add
xchg
xchg
pop
mov
mov
mov
rcl
aas
and
dec
std
dec
stc
jno
repnz
repnz
(bad)
xor
es
(bad)
mov
jbe
push
loop
nop
inc
scas
mov
ja
scas
adc
call
fld
leave
(bad)
push
cmp
dec
jmp
or
push
lock
cmp
repz
jns
mov
pop
movs
scas
rol
loope
or
data16
ss
sbb
cmp
dec
movs
xlat
or
clc
cmp
or
sub
mov
push
in
adc
add
repnz
and
inc
aad
mov
add
and
iret
scas
(bad)
jmp
fild
ret
jp
or
addr16
pop
xchg
repnz
test
or
cmps
xchg
out
clc
jne
leave
ret
sbb
lock
xchg
xchg
(bad)
in
inc
xchg
jb
inc
movs
pop
leave
mov
mov
mov
out
jo
out
and
cmp
addr16
jle
jmp
in
shl
outs
mov
inc
dec
add
mov
mov
push
loope
push
cmp
es
and
inc
mov
iret
rol
ds
push
aaa
push
push
(bad)
add
mov
adc
sub
(bad)
enter
stos
add
push
mov
pop
cdq
add
pushf
mov
ja
and
cli
jecxz
mov
xchg
jbe
sti
dec
mov
lods
mov
sub
add
inc
aad
fidivr
pop
and
push
add
sub
cmp
add
bound
jbe
int
inc
jg
sbb
jmp
dec
mov
xor
pop
sbb
pop
test
retf
inc
mov
and
sub
xchg
scas
aaa
retf
push
and
add
aaa
popw
sub
add
xchg
js
movs
test
sar
test
retf
stc
dec
aam
addr16
imul
xlat
fcmovbe
push
jl
xchg
xlat
hlt
fs
adc
sub
pop
push
xlat
icebp
adc
test
dec
inc
stos
(bad)
fdiv
jecxz
jmp
(bad)
into
shl
fsubr
mov
mov
cmps
stos
sub
push
ss
les
scas
add
xchg
pop
cmp
xor
movs
or
cmp
push
sbb
adc
jns
std
push
out
or
test
push
inc
xor
xchg
jbe
push
fisub
stc
and
in
or
mov
sub
aaa
inc
repz
xor
cmp
int
jl
or
xchg
or
push
push
rcr
mov
cwde
jo
test
jb
in
test
rcl
dec
and
movs
retf
push
mov
out
xor
fld
xchg
mov
shl
pop
xor
xchg
jmp
scas
loope
jbe
cmp
push
inc
push
jne
fstp
dec
push
xor
loope
xor
sar
inc
add
sbb
adc
mov
pop
les
add
pop
pushf
fst
or
bound
js
pop
sbb
enter
loop
jnp
mov
jne
inc
bound
xchg
dec
mov
push
jp
and
sbb
mul
jnp
push
add
push
sbb
or
sub
cdq
mov
adc
adc
mov
fwait
out
inc
mov
lods
scas
movs
nop
add
and
xlat
push
test
test
sub
inc
in
or
lahf
ins
bound
xor
loopne
pop
lods
lods
sub
push
cdq
(bad)
das
pop
push
sub
jmp
pop
arpl
int3
jmp
mov
xor
mov
dec
adc
or
push
sbb
jns
xor
cmps
imul
adc
or
outs
rol
xchg
sbb
and
pop
push
add
push
fst
mov
retf
aad
add
jae
hlt
xor
add
adc
fimul
test
retf
popf
sbb
enter
rcr
and
repnz
mov
mov
es
call
test
mov
cmp
div
sti
jnp
xchg
inc
mov
frstor
ja
call
test
and
psllq
pusha
scas
div
rcr
mul
push
ror
fisttp
or
add
push
cmc
add
jns
repz
xor
cmp
add
mov
or
pop
cmp
ds
sub
pop
int
ds
gs
sub
add
push
cwde
addr16
add
loopne
cld
xchg
mov
or
ja
rcl
mov
jle
jmp
dec
xchg
out
cmp
into
ds
ds
imul
mov
je
add
adc
inc
fs
inc
mov
(bad)
push
or
xchg
scas
xchg
or
in
push
mov
and
cmp
push
repnz
in
iret
loopne
dec
cld
fisttp
inc
nop
ret
or
mov
xchg
mov
lds
seta
adc
aaa
and
jbe
jne
gs
scas
adc
mov
into
jmp
cdq
and
adc
mov
dec
imul
icebp
ror
push
shl
mov
pop
pop
mov
sbb
mov
sbb
loopne
add
and
lds
mov
jg
xchg
cmps
sar
pusha
adc
mov
xor
test
jmp
xchg
add
jp
and
out
pushf
mov
mov
(bad)
hlt
xchg
pop
fist
inc
pop
stos
ret
fsubr
fidiv
and
inc
inc
or
in
ds
and
adc
cmps
inc
fdiv
pusha
xor
push
push
fisub
fild
cmps
int
ss
mov
(bad)
sbb
xchg
fwait
into
adc
mov
lahf
test
mov
cmps
retf
mov
fiadd
adc
pop
pop
loopne
add
outs
mov
jmp
xchg
pop
nop
xor
mov
cmp
mov
lods
mov
(bad)
pop
jg
call
sub
sub
sub
arpl
dec
sar
in
aaa
rol
rcr
adc
cmp
lahf
xor
rol
or
(bad)
test
mov
mov
inc
div
test
(bad)
jl
add
ja
pop
push
ret
xlat
imul
(bad)
aam
dec
popf
mov
in
jae
scas
jo
loopne
jmp
(bad)
pop
and
rcr
xchg
inc
lahf
rcl
cld
jmp
push
maxps
test
and
sub
imul
ins
sar
sub
jnp
and
retf
idiv
mov
and
retf
sub
sub
pop
scas
rol
dec
mov
in
es
mov
(bad)
xchg
dec
mov
dec
int
xchg
xchg
cmps
lahf
mov
mov
adc
xchg
sbb
lods
repz
dec
pop
call
cdq
adc
scas
aam
das
mov
and
neg
mov
inc
aas
addr16
xchg
sbb
jno
mov
arpl
mov
into
add
fild
into
push
xchg
add
ret
or
or
mov
xor
stos
pop
(bad)
cdq
cmp
into
cmp
dec
ins
and
lods
jnp
ss
pop
jne
push
scas
pop
mov
mov
out
push
sub
sub
adc
sbb
loope
mul
lods
aas
and
jmp
nop
ds
mov
rol
(bad)
stos
inc
and
imul
jl
ins
lods
fiadd
jecxz
jmp
pop
fs
mov
xchg
add
push
cwde
loope
jge
dec
mov
shr
ins
(bad)
repz
mov
aad
jle
xor
jo
popf
loopne
sbb
lahf
cmc
leave
mov
xchg
cwde
push
cmps
mov
sub
ret
shl
(bad)
cmp
pop
dec
mov
mov
jne
cwde
push
(bad)
cdq
jno
mov
jmp
cmp
sub
adc
pop
sub
xor
cmc
pop
inc
sub
or
cmp
xchg
push
jle
dec
enter
mov
inc
(bad)
movs
xchg
cmp
addr16
add
mov
xchg
call
cmc
jmp
sub
push
mov
xchg
or
fninit
jmp
clc
nop
dec
add
fucomi
push
imul
shr
pop
fsubr
out
sub
xor
jns
shl
jecxz
mov
cmp
push
sbb
sub
xchg
mov
dec
push
adc
ud1
shr
fcmovnu
cmp
into
retf
(bad)
jge
cmc
jb
mov
clc
je
inc
mov
in
add
cmps
(bad)
cmp
icebp
aad
(bad)
mov
jmp
dec
push
pop
mov
jb
jne
jne
xchg
shl
push
inc
mov
xlat
sbb
(bad)
into
scas
cmp
add
movs
xchg
cmps
xor
dec
ins
scas
(bad)
(bad)
jge
int
stos
ds
fwait
mov
adc
adc
sar
xchg
sbb
add
sub
jbe
fmul
mov
pop
xchg
push
in
cmps
fistp
les
jmp
pop
cmps
xor
pushf
(bad)
es
rcl
mov
fstp
ins
in
clc
stos
and
push
adc
dec
mov
repz
stos
xor
mov
mov
mov
pop
cmp
(bad)
cli
dec
add
push
and
mov
mov
jp
repnz
js
int
test
push
sbb
and
les
fs
jle
mov
mov
cld
push
pusha
lea
push
daa
sub
pop
fucomi
xchg
or
data16
fucom
cdq
or
(bad)
movs
and
add
push
daa
inc
inc
mov
int3
pusha
pusha
adc
ja
push
fs
lea
mov
out
cmps
movzx
jmp
call
or
cmps
pop
jge
ja
stos
adc
loopne
ins
fs
fs
popa
ds
pusha
pop
adc
adc
dec
shr
ins
repz
sub
lahf
and
fsub
mov
cs
pop
push
cmp
es
out
xchg
adc
je
hlt
lea
fincstp
mov
pop
xchg
cmp
add
stos
and
dec
push
mov
fsub
stos
mov
and
cmc
push
sub
imul
jno
aam
xor
jmp
jo
mov
(bad)
adc
adc
cwde
mov
mul
xchg
int
out
push
adc
mul
add
xchg
fwait
pop
jmp
outs
inc
into
dec
cli
xchg
xchg
das
out
icebp
inc
push
push
mov
lock
addr16
mov
lods
loopne
dec
jmp
bound
fcmovb
or
xlat
push
std
fimul
(bad)
popf
sti
jmp
stc
in
pushf
ja
mov
xchg
int3
sub
add
add
ds
test
pop
addr16
jge
lods
push
std
inc
cmp
dec
jge
push
mul
inc
mov
test
push
outs
mov
call
mov
sar
inc
jae
adc
lds
adc
test
ins
repnz
in
into
inc
lods
movs
dec
mov
mov
out
sbb
cmp
xchg
enter
inc
cdq
mov
call
xlat
test
jl
add
jnp
mov
jo
and
jae
mov
mov
jno
or
mov
adc
mov
inc
xlat
aaa
into
arpl
test
mov
add
cdq
retf
out
jo
shl
hlt
div
bound
pop
pop
and
add
movs
or
cmps
popa
mov
or
je
mov
call
lea
aam
arpl
xor
xchg
nop
and
cmp
jp
or
fdiv
mov
imul
in
(bad)
out
inc
jmp
inc
adc
(bad)
fnstcw
ret
sahf
mov
mov
fnstenv
mov
jmp
inc
pop
sbb
imul
(bad)
adc
ret
jmp
mov
jp
fmul
adc
and
scas
jecxz
call
cs
popa
(bad)
xchg
add
push
sbb
mov
dec
dec
sbb
loopne
cld
sahf
call
push
ror
in
dec
les
out
and
aad
fisub
rcr
jmp
cmps
daa
test
push
xchg
xchg
popa
aad
fsubr
rcl
adc
pop
push
inc
mov
push
xor
jo
pop
fdivr
jb
shr
je
(bad)
cmp
pop
pop
jae
mov
int3
sahf
in
push
cdq
aas
or
lock
call
ror
xor
adc
jb
repnz
mov
loopne
mov
push
adc
fidiv
push
sub
and
mov
lods
loop
lds
jp
push
cmps
sub
es
sbb
inc
pop
gs
mov
fwait
mov
mov
fcom
int
popf
in
mov
(bad)
out
sub
jo
add
sub
test
rol
xor
cmc
mov
hlt
inc
cdq
jp
sbb
pop
jl
out
pop
xchg
in
out
es
mov
fwait
mov
outs
mov
sub
mov
or
int
xor
add
pop
pop
popf
das
pop
in
pop
xchg
sbb
ret
ins
lods
fucomip
and
add
in
xor
mov
mov
add
jg
mov
fiadd
jnp
movs
sub
stos
enter
jmp
cmp
les
push
(bad)
in
cmc
push
iret
push
and
cli
add
and
pop
mov
mov
outs
xchg
mov
or
stos
(bad)
adc
bound
add
cmps
neg
xchg
sub
dec
je
adc
outs
rcr
mov
ret
mov
xor
xor
lahf
cli
jno
xor
and
lock
cmps
inc
xchg
ret
jns
xchg
repz
mov
clc
cmp
fmul
jg
in
add
cld
retf
pop
jns
mov
jmp
fst
sub
jno
js
jge
lea
stos
js
adc
movs
xchg
mov
lds
dec
jne
pop
test
call
jb
adc
lods
pop
mov
inc
jp
lds
mov
loop
rcl
cmp
scas
jnp
fmul
dec
dec
dec
cmc
in
(bad)
cmps
and
mov
rcr
ja
sub
or
or
sub
dec
inc
hlt
fistp
in
dec
ret
loope
hlt
shl
jge
or
sub
add
fmulp
shl
mov
or
cmps
cwde
inc
jb
call
xor
(bad)
push
jo
dec
call
xchg
mov
daa
sub
pop
sar
scas
sbb
out
(bad)
jg
(bad)
iret
shl
lds
sub
outs
mov
xlat
xor
repnz
clc
xchg
sahf
pop
add
inc
repz
cwde
lods
scas
xchg
xchg
and
or
inc
test
test
mov
in
push
mov
call
cmp
fild
and
push
jmp
mov
and
adc
test
cmp
or
leave
mov
ret
inc
mov
push
nop
(bad)
imul
jg
test
fmul
xchg
sub
lods
mov
(bad)
ret
rol
pop
mov
or
dec
push
shr
cmc
xor
mov
mov
dec
adc
xor
shl
mov
repz
pop
in
aaa
sbb
call
mov
arpl
inc
outs
mov
or
cmp
popa
in
pop
into
ffree
or
lea
imul
xchg
mov
mov
push
fldln2
adc
(bad)
mov
mov
push
cmps
adc
vpacksswb
in
jo
(bad)
out
xor
jns
dec
sub
fwait
mov
lahf
scas
push
test
adc
sar
outs
add
mov
dec
push
jl
or
jg
sbb
jl
shl
out
xchg
outs
inc
ret
push
(bad)
idiv
mov
xor
push
in
sbb
lahf
jle
fimul
jb
push
pop
fmul
sub
call
cwde
xchg
pop
aas
mov
clc
pushf
xor
mov
inc
ja
xchg
sbb
dec
retf
lds
jns
mov
lds
sub
leave
out
pop
mov
iret
xlat
sub
pop
(bad)
push
xor
mov
lock
cdq
mov
sbb
out
test
jle
inc
xchg
sub
push
mov
mov
pusha
xlat
adc
fwait
sub
xor
ins
mov
pop
mov
cmp
in
xchg
fcmovnb
fisttp
and
push
bound
sti
fdivrp
(bad)
lds
jle
and
fcmovnu
jno
add
call
pop
pop
mov
enter
jmp
sub
daa
fidiv
pushf
ins
pop
lods
and
aas
xor
dec
ins
pop
xchg
sub
mov
pop
xchg
push
jecxz
sub
jae
xor
inc
sub
hlt
rcl
jg
and
inc
mov
mov
imul
in
movs
fs
stos
cwde
fs
test
push
stos
push
test
movzx
int3
repnz
mov
add
ins
aam
in
adc
jne
nop
xlat
inc
pop
jl
mov
mov
cmp
ins
dec
cld
adc
adc
sbb
ret
jmp
xchg
dec
pop
int3
(bad)
aad
aad
sub
adc
fcom
cmp
xor
inc
test
(bad)
jl
inc
aad
call
mul
xchg
ss
mov
test
outs
dec
sbb
and
xor
dec
xor
sbb
call
mov
add
daa
loop
jmp
test
push
std
rcl
sbb
mov
or
push
in
xchg
and
loopne
or
jbe
xchg
test
push
push
xlat
icebp
inc
repnz
pop
std
pop
hlt
cdq
pop
movs
mov
sbb
clc
neg
dec
mov
ret
mov
jle
add
push
mov
adc
jne
fisttp
les
jle
es
ret
xchg
(bad)
in
push
out
sbb
nop
push
mov
stc
inc
pop
cmp
jo
test
int3
sti
jo
push
scas
mov
fcom
loop
ror
ss
outs
cs
add
add
icebp
fldenv
jg
cli
movs
mov
cmps
aaa
imul
and
mov
mov
dec
sbb
or
into
(bad)
data16
cmc
inc
sar
fstp
ins
mov
or
out
cmp
push
addr16
nop
ins
and
lds
leave
(bad)
scas
test
test
pop
in
shl
pop
(bad)
cmc
ror
clc
iret
daa
pop
test
inc
fbld
adc
adc
scas
sbb
pop
mov
xor
nop
in
xlat
(bad)
out
int3
inc
icebp
aas
daa
hlt
add
sbb
cmps
in
(bad)
pop
jmp
adc
(bad)
sti
add
aaa
xor
cmc
test
pop
xor
cmp
mov
call
jbe
sti
mov
fisubr
test
popf
or
fimul
fwait
dec
hlt
add
outs
ret
test
pop
push
popf
loope
rcl
gs
(bad)
jns
aam
rcr
shl
cs
fdiv
xchg
ss
stos
retf
shl
sub
sub
pop
adc
add
pop
div
sbb
iret
in
fs
push
nop
add
(bad)
jg
jns
lods
jmp
ds
in
mov
jmp
mov
fmul
mov
das
fnstsw
cwde
retf
dec
aam
jmp
adc
mov
fistp
inc
add
mov
or
je
out
push
sub
fild
push
sub
xchg
jle
inc
int
xchg
sub
mov
mov
loop
xchg
sub
add
shl
ins
scas
cmp
es
mov
daa
stc
(bad)
sub
sub
aaa
int3
or
mov
adc
pop
jae
jl
inc
outs
je
loop
retf
icebp
rcr
ss
and
mov
jecxz
pop
add
mov
stos
adc
jbe
cli
mov
mov
jge
leave
call
mov
sbb
hlt
add
mov
popf
pop
jmp
jns
xlat
ins
mov
jle
das
cld
pop
lds
jl
push
cld
adc
sbb
addr16
mov
in
sbb
mov
sub
jnp
xor
or
mov
test
retf
xchg
test
nop
or
mov
mov
pushf
push
and
xchg
xchg
fwait
xor
cmp
dec
aaa
mov
push
icebp
jno
mov
repz
adc
fcmovbe
in
mov
xor
pop
mov
lock
cmp
retf
mov
add
jb
fs
mov
loop
mov
(bad)
cdq
shl
call
mov
dec
shl
pushf
sahf
push
dec
mov
pop
push
mov
icebp
sub
inc
or
adc
rcl
dec
cwde
or
pushf
imul
ret
mov
pop
adc
pop
imul
cli
dec
stc
push
add
mov
pop
sbb
jge
test
cmp
clc
pop
sti
loop
lahf
mov
sbb
sahf
out
pop
and
cmc
adc
call
(bad)
push
lds
mov
mov
(bad)
mov
repnz
inc
sbb
into
inc
and
add
cmc
lods
(bad)
dec
sub
(bad)
in
jns
(bad)
ret
push
aad
mov
inc
shl
xor
dec
xchg
jnp
dec
test
punpckhwd
pop
test
jb
rol
pop
rcl
mov
dec
push
je
mov
mov
in
outs
in
cld
ret
push
dec
add
rol
adc
adc
xor
adc
popa
push
ds
scas
push
lds
imul
xor
push
sub
jmp
xor
jo
jno
jae
xchg
imul
cmp
xor
jle
inc
(bad)
rcr
cmp
pop
fnstsw
repz
push
add
cli
jnp
test
(bad)
pop
je
pop
stos
or
xlat
(bad)
sub
aad
cs
pop
mov
jnp
push
dec
mov
nop
mov
mov
mov
or
jge
mov
sar
xchg
shl
mov
xchg
ret
dec
jmp
shr
adc
test
(bad)
popf
push
test
xchg
imul
ficomp
loop
cld
shr
mov
mov
jmp
into
(bad)
cmp
push
sub
xor
lahf
sub
iret
sti
or
out
icebp
popf
and
aaa
mov
lods
lahf
fiadd
or
mov
ins
sar
cdq
cmp
and
jne
lods
push
mov
cmp
mov
cmp
inc
xor
shr
pusha
dec
pop
inc
je
cmp
fcom
mov
(bad)
and
(bad)
iret
cwde
add
ss
jbe
pop
push
retf
outs
(bad)
in
sahf
mov
das
dec
ja
pop
mov
xchg
imul
mov
shr
rcr
mov
xchg
add
jnp
rcr
fcmovnbe
mov
or
add
push
shl
fwait
jbe
jmp
lahf
adc
fcomp
fwait
mov
sti
push
es
add
outs
jns
arpl
add
pop
ror
pop
inc
jmp
and
mov
cwde
jno
cmc
sbb
or
ret
mov
xlat
fisub
mov
jae
push
leave
push
stos
sti
jne
pop
push
jbe
dec
mov
cmp
imul
stos
sub
mov
and
out
mov
jmp
dec
sbb
xchg
fucomip
jnp
push
je
cli
cdq
adc
repz
adc
dec
idiv
stos
mov
popf
sub
and
sub
or
xchg
push
or
out
cwde
jae
add
test
in
pop
cmp
inc
pop
aad
ret
loop
inc
je
mov
push
fnstsw
jg
fwait
sbb
scas
fisub
xchg
scas
adc
fstp
and
cwde
cmp
ret
add
dec
ja
repz
ins
ror
sub
xor
fisub
ins
cmp
stos
(bad)
call
pop
into
mov
xchg
shl
(bad)
or
sbb
aaa
clc
add
ds
jle
mov
xor
cmp
xchg
ror
add
mov
xchg
pop
pop
call
repz
inc
addr16
outs
in
bound
mov
aaa
pusha
retf
xchg
mov
mov
sar
add
shl
lahf
popa
push
pop
imul
jmp
mov
cmp
loopne
cmp
(bad)
sub
cmp
scas
rcl
mov
inc
xor
mov
fadd
adc
test
addr16
or
adc
ror
addr16
bound
movs
jnp
xlat
lods
inc
bound
imul
mov
inc
in
inc
mov
(bad)
or
mov
mov
mov
xchg
jnp
ins
cmp
leave
jae
xchg
out
sbb
sub
add
inc
test
loop
xchg
in
adc
sar
pusha
(bad)
jnp
jle
repnz
adc
adc
jno
dec
inc
popf
retf
push
retf
popa
add
sub
dec
imul
and
loopne
sbb
sbb
das
movs
and
mov
mov
xchg
lea
dec
xor
in
pop
or
cld
xor
inc
in
mov
setge
outs
sbb
dec
mov
inc
lock
ja
int
push
cmp
repz
shl
push
add
(bad)
in
je
sahf
xchg
add
adc
ret
cdq
xchg
cmp
jg
test
push
and
cli
mov
xor
pusha
push
scas
in
jne
jo
stos
xchg
pop
repnz
fwait
and
mov
or
ret
pop
inc
repnz
mov
(bad)
jae
shl
sub
mov
enter
push
jmp
rcl
pop
lahf
jmp
mov
cmp
ds
jmp
add
stos
cmps
pusha
push
out
mov
xchg
xor
jmp
fld
sahf
mov
jbe
pusha
retf
icebp
mov
push
stc
nop
mov
or
aam
add
pop
push
iret
fs
in
popf
jae
sahf
pop
das
cmp
ins
cmc
jge
and
lods
(bad)
imul
mov
(bad)
and
in
ret
dec
test
popa
scas
mov
mov
fmul
call
sti
and
pop
dec
hlt
retf
fwait
add
adc
xlat
add
xor
jg
xor
pop
stos
ficom
sub
fs
mov
inc
dec
enter
icebp
call
hlt
cs
out
retf
int
loop
aam
ins
(bad)
cmp
and
sub
scas
cmp
dec
cmp
mov
mov
push
mov
sbb
aas
hlt
fisubr
sbb
or
nop
sar
test
xor
leave
and
rcr
dec
gs
inc
xor
fnstenv
push
cmp
mov
fist
mov
enter
add
stc
setle
push
mov
ins
jno
retf
sub
aas
mov
lock
jnp
and
inc
je
sbb
push
in
pop
repnz
mov
and
repnz
xchg
jnp
icebp
dec
push
cmp
xchg
jno
fild
inc
and
leave
sub
int
sbb
loop
icebp
std
and
sbb
add
imul
inc
sbb
fdivr
sbb
mov
push
rol
enter
and
movs
in
add
ins
xor
loop
adc
gs
xor
popf
xor
(bad)
mov
cli
aam
das
popa
outs
pop
lahf
mov
pop
movs
jb
jge
mov
arpl
or
shl
push
popf
mov
test
push
imul
fist
retf
add
adc
fisttp
pop
xchg
inc
fild
adc
xchg
sbb
fwait
ins
in
mov
cdq
jnp
in
xchg
mov
add
push
push
icebp
xor
loop
stc
std
cwde
lea
adc
hlt
loop
jl
sar
push
les
lock
mov
fucomip
sbb
jmp
cmc
rol
jmp
into
and
xor
rcr
sub
pop
in
in
mov
push
leave
jmp
dec
xor
pop
sbb
rcr
xchg
jmp
enter
test
jbe
inc
ins
iret
test
mov
(bad)
sti
into
or
mov
imul
push
jae
jle
cmp
adc
adc
push
ja
ins
cmp
aas
fs
push
or
mov
push
mov
and
sbb
dec
aaa
pop
add
call
aas
jno
pushf
add
mov
test
in
xchg
pop
test
cwde
sub
clc
or
jnp
mov
or
dec
push
fld
or
cmp
lock
xchg
retfw
mov
fwait
adc
mov
cmp
(bad)
sbb
pop
mov
xrelease
sub
pusha
and
mov
xor
lock
mov
aad
and
pop
outs
daa
into
ret
aas
sub
jg
inc
sub
out
or
xor
mov
in
fdivr
xchg
xchg
ss
ficomp
movs
shl
fsub
std
aam
pop
inc
repnz
mov
sub
push
bound
mov
sbb
out
adc
fistp
addr16
je
in
retf
sub
dec
xchg
adc
dec
push
and
setge
jbe
int
ret
xchg
jne
xlat
arpl
xor
xlat
outs
sub
xchg
sbb
add
clc
sti
jp
dec
jbe
retf
jne
push
push
sbb
dec
test
and
mov
and
xchg
jecxz
cmc
mov
sub
jecxz
mov
imul
inc
sub
xor
cdq
cwde
cmps
dec
(bad)
fs
xchg
pushf
mov
fsubrp
ja
(bad)
push
fisttp
fcmovnu
push
fadd
jmp
pop
scas
out
(bad)
mov
std
fistp
push
test
push
xor
iret
loopne
add
push
(bad)
sti
fnstcw
outs
(bad)
fwait
loopne
repz
xor
aaa
and
pusha
fwait
lock
cli
outs
test
rcl
sub
mov
inc
clc
icebp
in
int
pop
mov
aad
cmp
lahf
push
imul
bnd
in
push
sar
gs
sub
into
pop
fistp
jae
and
(bad)
mov
or
add
shr
stos
adc
cdq
int3
lods
mul
pop
or
sub
add
xchg
mov
or
xchg
mov
pop
repz
sbb
cld
mov
or
push
mov
mov
mov
neg
dec
loop
dec
mov
adc
nop
dec
hlt
add
loop
je
pop
out
xchg
lahf
inc
xchg
adc
scas
xchg
repnz
out
push
mov
and
jp
mov
iret
aas
call
ss
adc
imul
jno
lods
adc
sbb
mov
mov
and
jmp
jbe
loopne
cmps
lods
outs
icebp
fcomp
(bad)
rcl
cmps
dec
push
add
test
push
adc
cli
jbe
or
test
sbb
gs
int
cmps
cbw
mov
stos
cmp
adc
scas
aad
ja
and
aas
lods
fsubr
xor
jbe
fnsave
js
ins
dec
js
xchg
les
jmp
call
(bad)
(bad)
jg
jmp
maskmovq
pop
push
jae
dec
imul
loope
leave
and
in
cmp
jns
sbb
push
or
popa
scas
pop
daa
pop
cmp
call
sub
mov
dec
mov
and
push
dec
ror
or
and
popf
js
and
xor
fs
test
call
popa
repz
mov
lea
xor
test
aaa
fistp
cmp
das
out
mov
mov
cmp
push
xchg
push
sub
stos
mov
test
xor
mov
clc
sbb
ds
add
mov
dec
push
aas
loope
inc
cli
dec
cmp
outs
and
pop
xchg
pop
add
mov
call
xor
adc
cmc
mov
les
jle
fisttp
or
retf
into
pop
inc
add
(bad)
icebp
jo
sub
push
out
cs
inc
mov
add
repz
inc
jg
push
inc
xchg
out
hlt
imul
adc
shl
pop
pop
adc
imul
adc
icebp
xchg
cmc
mov
mov
cmps
pusha
repz
push
dec
adc
ins
mov
xor
iret
ins
mov
sbb
pop
fs
cli
and
lds
out
sbb
mov
sar
movdqa
sub
rcr
data16
ror
mov
mov
pop
hlt
loope
leave
int3
test
rol
dec
lahf
pop
(bad)
jl
(bad)
push
iret
dec
or
mov
mov
xchg
movs
push
push
jb
lods
call
sub
(bad)
xor
rep
push
outs
in
out
mov
push
arpl
add
inc
cmc
mov
cmc
popf
xor
(bad)
ins
call
push
mov
xchg
(bad)
adc
std
cs
lods
(bad)
jmp
in
inc
stos
sbb
sub
xchg
cmp
or
int
add
jecxz
jae
mov
out
fmul
dec
xor
scas
cmps
mov
and
sbb
out
sbb
cld
cwde
div
test
imul
pop
loopne
not
adc
hlt
out
cmp
mov
ror
(bad)
mov
add
lahf
mov
pop
dec
mov
xlat
or
cmp
sti
dec
push
sar
test
in
xchg
in
ret
and
adc
aaa
(bad)
aas
pop
cdq
sub
psubw
mov
or
jmp
ins
cmc
mov
das
mov
fwait
std
mov
or
pop
adc
rcr
out
leave
cdq
xchg
push
xor
jecxz
scas
rcr
or
dec
push
imul
movs
sbb
out
jno
mov
leave
enter
jecxz
fwait
xchg
arpl
sub
jp
inc
loopne
or
neg
cmp
dec
mov
ret
in
mov
jmp
(bad)
call
dec
push
inc
shr
test
or
shr
mov
data16
sar
jb
in
cmp
aaa
and
repnz
sub
retf
push
mov
cmp
cmc
outs
mov
push
test
adc
int3
jae
ret
lods
jbe
mov
sti
xchg
xchg
imul
ror
or
jno
stos
cmp
in
inc
pop
sbb
push
lahf
dec
sbb
push
mov
jp
and
je
adc
and
nop
adc
fsub
mov
out
mov
mov
nop
loope
xor
xor
pop
cdq
fimul
stc
imul
sbb
or
jge
ja
dec
test
and
pop
out
fs
aaa
stc
mov
dec
mov
mul
mov
dec
fsincos
cmp
ret
mov
mov
fsubrp
cmp
aad
pop
and
inc
in
test
das
repnz
rcr
dec
and
inc
sahf
sbb
or
enter
xchg
pusha
jo
cmc
and
cmp
cld
int3
scas
add
movs
(bad)
test
pop
and
cmp
cmp
ss
cld
jno
add
movs
xchg
ror
xor
aam
jmp
pop
movs
into
inc
(bad)
icebp
cmp
out
and
setp
std
push
fcmovnbe
dec
mov
or
(bad)
jp
lahf
jl
movs
das
shl
sbb
int
test
aas
dec
(bad)
gs
dec
movs
push
js
dec
das
jecxz
push
or
dec
mov
loopne
fwait
pop
adc
test
cs
lock
xchg
stos
mov
cmp
adc
mov
neg
outs
fstp
sub
mov
arpl
lds
adc
sbb
js
fsubr
(bad)
std
enter
idiv
push
push
jno
out
sbb
popf
in
fidivr
mov
in
mov
sahf
dec
sbb
and
sti
aam
outs
push
in
push
mov
jp
js
loope
inc
into
pop
loopne
push
pop
add
aad
pop
fisttp
pushf
retf
cmp
sub
xchg
jecxz
pop
dec
mov
push
jge
pusha
sub
(bad)
test
fdivr
adc
mulps
mov
outs
cmp
lods
add
out
pop
sub
test
outs
sar
mov
fiadd
(bad)
in
mov
div
jns
lods
dec
int
cld
jno
push
div
je
mov
mov
push
fisubr
pop
fisttp
ds
jb
and
jecxz
retf
daa
and
and
test
mov
stos
inc
(bad)
(bad)
cli
xlat
pop
xchg
mov
pop
ins
ja
mov
gs
sub
push
sbb
xchg
(bad)
shl
imul
movs
mov
dec
push
and
ins
ss
neg
out
fldenv
jne
dec
xchg
or
ror
sti
add
movs
daa
push
dec
mov
and
mov
lea
test
je
loope
mov
jg
mov
sbb
iret
xlat
xor
ficomp
push
loop
pop
loop
sbb
shl
jmp
rcl
xor
mov
rol
lahf
retf
mov
lods
xor
adc
xchg
das
and
cmp
mov
xchg
les
xchg
retf
cdq
dec
jmp
sub
mov
add
pop
lds
jmp
rcl
(bad)
cmc
or
xchg
cmp
fldenv
cmp
mov
in
xor
inc
dec
sbb
mov
sub
dec
clc
bound
loop
fisub
push
lods
mov
cs
adc
jbe
or
and
jge
(bad)
int3
ins
and
pushf
imul
push
ret
jnp
ds
jae
cmps
xchg
sbb
les
mov
lahf
inc
scas
xor
or
xchg
pop
call
mov
(bad)
push
test
dec
mov
ja
xchg
retf
outs
pop
mov
and
movs
inc
scas
pop
icebp
rcr
xor
out
out
lods
movs
ret
jo
sbb
fs
cwde
in
sbb
mov
push
xchg
(bad)
dec
js
and
cmp
cdq
dec
rcl
daa
std
push
mov
push
pop
popf
sbb
outs
mov
inc
adc
mov
movs
push
mov
jl
out
(bad)
outs
sar
or
shl
cld
inc
hlt
arpl
bnd
sti
sbb
rcr
push
xchg
dec
sub
sti
or
cld
std
in
bound
jecxz
repz
int3
bound
mov
mov
fidiv
ret
stc
inc
push
mov
add
mov
js
hlt
mov
out
mov
stos
pop
rol
xor
movs
inc
sbb
scas
popa
fmul
push
shl
mov
xchg
daa
sahf
in
jno
mov
mov
das
addr16
xor
aaa
sti
cmp
jno
mov
and
outs
aaa
cmp
mov
xor
sbb
mov
and
add
rol
icebp
cmp
xchg
pop
xchg
pop
aaa
cmp
mov
or
outs
jb
das
iret
sbb
push
xchg
mov
nop
out
frstor
jb
mov
pop
cdq
int
jbe
das
xchg
loop
das
add
xor
in
jmp
std
mov
rol
lods
inc
mov
add
sbb
mov
jae
imul
fnsave
in
in
sbb
lods
imul
out
test
fucomp
pop
jb
jg
fidiv
mov
or
(bad)
xlat
not
add
iret
sub
pop
aas
in
pop
sbb
out
fist
jge
out
jecxz
sbb
inc
add
mov
dec
jo
dec
adc
sub
int3
push
and
data16
pop
mov
pushf
repnz
cmp
pop
(bad)
add
fst
push
sub
xchg
arpl
fisub
shl
mov
xor
or
or
push
scas
sbb
inc
sar
jne
das
adc
and
adc
cld
and
in
sti
sti
retw
and
jl
inc
mov
and
fsub
add
rcr
not
mov
cmp
imul
fldcw
loopne
cmp
ja
ss
mov
call
(bad)
lock
or
test
sub
mov
pop
ins
mul
enter
out
or
bound
jp
in
cs
cld
sbb
nop
add
les
imul
and
inc
fldenv
cwde
jle
pop
mov
retf
xor
sub
aas
inc
fcom
test
pop
inc
xor
nop
push
push
xchg
repnz
add
pop
xchg
ss
sbb
lock
xor
mov
lahf
repz
out
sysexit
mov
mov
dec
fisubr
pop
iret
sub
xchg
or
out
add
les
pop
ds
(bad)
push
fdivrp
imul
mov
cli
adc
add
jnp
xor
mov
std
xor
ja
push
mov
push
ficomp
in
mov
cs
xor
outs
std
push
imul
jne
int
movs
fsub
test
sar
xor
jne
stos
aas
push
add
dec
inc
sub
jbe
and
and
aas
loop
add
inc
fld
and
(bad)
adc
pop
dec
stc
jp
sub
ret
mov
shl
and
jne
mov
adc
loope
mov
mov
(bad)
push
cmp
pop
imul
retf
push
sub
mov
jbe
push
sub
push
adc
sbb
push
(bad)
ret
jmp
jge
cli
pop
pusha
shl
call
mov
popf
push
daa
fmul
jge
cdq
popf
retf
loope
pop
out
cdq
clc
push
test
push
mov
adc
cli
neg
movs
adc
mov
call
inc
ds
jl
outs
pop
fsub
sbb
test
rol
sar
or
add
loop
mov
dec
sar
jmp
jge
in
cdq
or
les
mov
xor
mov
lea
daa
repz
push
sub
nop
rol
mov
xchg
xor
sbb
jecxz
jnp
or
jecxz
xor
sbb
repz
aaa
and
mov
jge
mov
iret
xchg
pop
sti
sub
pop
xor
dec
pop
(bad)
sbb
inc
pop
mov
xor
inc
pop
xor
popf
adc
cmp
pop
pop
rcr
fimul
dec
fld
mov
sub
sub
pop
adc
cmp
push
sbb
retf
add
mov
mul
dec
mov
imul
iret
cmc
arpl
xor
or
jl
hlt
scas
retf
dec
add
mov
push
sub
mov
sub
(bad)
cmp
fadd
push
mov
ret
push
enter
xchg
lods
out
or
pop
mov
pop
into
(bad)
mov
mov
pop
lods
dec
sbb
daa
add
jno
pop
out
clc
or
adc
aaa
mov
stc
mov
iret
sahf
and
ret
sub
sub
call
sbb
out
or
fucom
mov
sub
or
mov
(bad)
and
adc
push
jmp
fsub
rcl
hlt
jne
in
pop
mov
es
lea
sub
hlt
(bad)
mov
ds
and
enter
mov
cmp
test
and
sbb
in
xchg
loope
mov
js
enter
mov
pop
push
out
sub
mov
pusha
call
in
cwde
mov
js
(bad)
or
cmp
ins
jbe
adc
ficom
es
and
jmp
js
push
dec
loopne
cmc
fldenv
out
and
in
lock
out
sar
pop
xchg
retf
pop
mov
and
xchg
scas
clc
xchg
push
and
adc
xchg
imul
xor
cmps
add
fsubr
cmps
test
in
test
lods
std
mov
mov
mov
push
sbb
jmp
out
cs
sbb
lods
ins
adc
rcpps
ins
dec
xor
sbb
sub
or
std
popf
cmp
in
xor
sbb
inc
cld
and
mov
mov
mov
(bad)
push
inc
jmp
fdiv
je
in
shr
movs
out
mov
xchg
mov
clc
out
inc
and
fidivr
dec
xchg
out
or
pusha
repz
pop
xchg
dec
test
fldcw
push
and
adc
inc
mov
xor
push
sbb
scas
int3
mov
cmps
shr
shl
sbb
cmp
clc
push
imul
cmp
ret
inc
inc
out
repnz
adc
mov
dec
pop
lods
(bad)
fidivr
div
test
pusha
mov
xchg
das
imul
cmp
or
mov
and
inc
nop
ret
fdivr
mov
sbb
xchg
movsx
test
xchg
sbb
or
gs
lods
ja
pop
jns
(bad)
or
mov
xchg
jmp
popf
dec
jmp
mov
jo
or
repnz
fisub
cmps
pop
setle
sub
push
jae
sti
hlt
mov
mov
dec
pusha
and
or
out
hlt
mov
push
mov
dec
sub
push
mov
xchg
in
repz
int
adc
cmp
popf
lock
xor
or
stc
jae
dec
leave
fwait
scas
shl
xor
div
psubb
dec
mov
stc
les
jae
pop
sbb
lds
mov
pop
shr
mov
rcl
pop
int3
xchg
fs
out
in
inc
push
les
neg
mov
fnstenv
pop
int3
test
cmp
loopne
push
inc
jmp
popa
mov
push
imul
in
mov
or
loopne
pop
push
sub
sahf
push
mov
dec
call
dec
cmp
in
cs
xchg
sahf
cli
arpl
out
and
fiadd
xchg
cmp
mov
mov
xchg
push
inc
push
jl
sbb
jg
push
pop
bound
xor
push
lock
sbb
and
xor
mov
and
les
lock
dec
ds
stos
int3
es
adc
js
mov
dec
xchg
outs
mov
lods
test
clc
xchg
pop
sar
movs
mov
dec
add
retf
sub
mov
repz
mov
adc
mov
cld
xchg
test
retf
inc
out
outs
in
fcom
xchg
and
in
or
push
jp
aad
imul
cli
pop
stc
xchg
jg
xor
jg
xor
dec
out
in
stos
ss
mov
cdq
std
in
stc
ins
or
push
int
sahf
jmp
mov
loop
jge
mov
fild
push
sbb
inc
mov
and
mov
scas
sti
dec
popf
cwde
pmulhw
sti
loop
push
push
pop
cmp
ret
inc
add
pop
data16
inc
outs
lods
sub
imul
fucomi
test
and
xchg
dec
leave
arpl
jecxz
mov
sbb
(bad)
in
fwait
rcl
inc
test
push
xadd
xor
inc
dec
mov
pop
dec
nop
jbe
movups
fs
mov
xchg
xor
imul
cmps
mov
sbb
test
and
icebp
xchg
push
mov
jnp
int
inc
fs
jns
xor
and
sbb
call
dec
cmp
and
lds
dec
inc
out
in
sar
(bad)
stc
pop
or
stos
in
jo
jns
aaa
push
and
mov
in
scas
ret
aaa
push
add
jo
outs
lea
xchg
aad
rcr
mov
push
cmps
xchg
jb
sbb
rol
add
pop
sub
(bad)
mov
in
xor
mov
rcl
mov
sub
das
add
or
adc
sub
push
xchg
sbb
nop
popw
sub
loop
cwde
das
push
lods
loopne
pop
pop
outs
push
ficomp
int
stc
cmp
dec
in
(bad)
daa
mov
sti
xchg
aaa
jecxz
out
cmp
rcr
scas
bnd
jmp
movs
ins
sbb
dec
sub
shr
cld
int
dec
outs
adc
out
shl
and
mov
pusha
aaa
movs
in
sbb
mov
fs
push
mov
inc
nop
cli
jbe
jno
inc
or
jo
adc
int
push
leave
push
adc
sub
sub
mov
rcr
mov
int3
add
ret
pusha
mov
lods
push
inc
cmc
xor
lahf
mov
in
inc
sub
and
hlt
dec
jmp
pop
out
faddp
lods
xor
scas
inc
mov
add
call
in
fwait
stos
sbb
cmp
push
adc
and
nop
pop
jecxz
fistp
xchg
mov
dec
mov
out
adc
rcl
cmps
jo
sbb
fbld
sbb
cdq
popa
sti
sar
jecxz
gs
mov
adc
sbb
cmp
mov
jb
jns
lock
call
jnp
loope
push
and
add
mov
jno
stc
lock
cmp
repnz
test
push
adc
jno
dec
leave
jl
jbe
iret
push
inc
lahf
jecxz
sbb
int3
xchg
fwait
sti
das
aam
mov
movs
jnp
test
jae
shl
ins
fst
cwde
jmp
addr16
cmc
sub
or
mov
dec
xchg
data16
pusha
pop
dec
test
or
or
or
hlt
sbb
test
in
xor
mov
lods
mov
sbb
push
(bad)
out
dec
mov
dec
or
int
pop
push
mov
add
pusha
add
in
adc
inc
test
pcmpgtw
push
movs
and
cmc
xchg
push
sbb
dec
fdiv
jbe
jge
and
mov
push
mov
cld
push
xchg
or
sbb
dec
movs
bound
call
out
out
mov
sub
mov
idiv
cmp
cmp
(bad)
loope
arpl
pop
add
or
jle
repnz
stc
push
test
sbb
mov
inc
addr16
aad
into
inc
in
jb
aas
dec
xor
out
js
es
or
shl
inc
sbb
inc
jl
and
bound
das
aaa
loope
call
repz
in
test
sar
repnz
mov
push
xor
fidivr
dec
push
stc
(bad)
sbb
repz
add
test
in
push
lds
inc
cs
mov
mov
fiadd
or
rol
mov
test
xchg
fdiv
ret
inc
lock
xor
test
and
pop
jnp
xor
fidiv
jo
xor
ds
int3
adc
mov
sub
movs
dec
icebp
jle
fldcw
cwde
out
dec
dec
loop
mov
fs
push
pop
pop
outs
sbb
xor
(bad)
loope
mov
xlat
lods
sub
mov
add
ret
stos
popf
cmp
dec
lahf
outs
cmp
(bad)
adc
shl
imul
int3
ret
fs
ds
mov
add
or
(bad)
ss
aaa
jmp
jno
sub
add
mov
repnz
pop
cwde
sub
mov
fs
cmps
mov
ror
nop
sub
mov
push
or
dec
stos
into
ja
cld
fist
xchg
xor
sbb
and
jmp
push
stos
jno
(bad)
in
lahf
mov
xchg
jmp
in
or
popa
mov
push
sar
sbb
push
jl
pop
push
mov
cmp
les
xlat
rcr
lods
dec
pop
into
cmp
push
test
mov
push
or
xchg
cmp
in
div
call
(bad)
in
gs
pushf
repz
pop
rcl
sbb
test
call
(bad)
or
and
xchg
call
add
cmps
icebp
dec
dec
jbe
pop
jne
icebp
outs
push
push
out
ret
push
repnz
mov
rcr
je
sub
jge
pop
mov
jecxz
iret
ja
jle
outs
sbb
pusha
inc
cmps
sar
xor
pop
popa
mov
das
cmps
call
sub
out
cld
pop
pop
cmps
cmp
daa
add
jne
xor
jae
outs
das
int3
dec
test
push
movs
repnz
or
xchg
mov
or
or
lahf
fs
daa
or
fwait
mov
push
aam
out
int3
enter
cmp
lea
je
rcl
dec
popf
mov
mov
xor
push
jns
mov
or
jnp
ret
stc
hlt
adc
jg
add
dec
add
gs
sbb
div
add
mov
cli
add
and
(bad)
je
push
adc
fwait
rcl
sbb
inc
syscall
jne
adc
or
mov
sub
scas
aam
mov
sub
and
cmps
inc
js
push
pop
mov
and
addr16
les
push
push
ins
dec
jns
hlt
jp
fadd
cld
mov
cmp
call
out
mov
xchg
test
pop
jecxz
iret
out
xchg
pusha
jp
fidivr
cld
je
repnz
addr16
xor
cmps
cli
push
inc
and
mov
mul
outs
dec
jnp
popa
jmp
outs
test
test
cmp
inc
test
jge
sar
xchg
sahf
aam
fst
retf
leave
adc
into
(bad)
lods
sbb
jge
movs
arpl
pop
mov
and
pop
mov
adc
lahf
adc
(bad)
rcl
nop
inc
int3
mov
popf
xchg
xchg
mov
(bad)
movs
jp
popa
(bad)
push
in
inc
jno
fcomp
adc
ins
mov
ret
mov
jl
sub
rcr
xchg
sub
add
mov
repz
loopne
xor
lahf
dec
lods
cld
mov
mov
push
(bad)
in
xlat
lea
repnz
int3
mov
push
fldenv
cmp
push
or
aas
outs
mov
aaa
cmp
daa
cmps
xchg
shl
fadd
mov
ja
push
and
push
loopne
xlat
adc
and
daa
mov
lods
enter
inc
adc
sbb
and
cdq
xlat
pop
popa
and
fiadd
jle
sub
mov
leave
das
pop
jo
adc
dec
lock
inc
(bad)
ss
or
scas
(bad)
xchg
retf
nop
adc
dec
pop
adc
cmp
hlt
out
xor
jle
mov
lods
clc
inc
pop
mov
outs
or
push
pop
bound
rol
push
repz
cmp
inc
add
ror
and
pop
iret
and
or
loop
les
cmp
mov
aas
and
inc
mov
mov
push
int3
adc
fidivr
mov
cld
xor
push
addr16
mov
jns
push
sbb
inc
popa
mov
cli
imul
mov
iret
add
test
imul
(bad)
nop
mov
js
shl
xchg
call
xchg
mov
push
stos
cmp
nop
xchg
or
xlat
repz
or
(bad)
hlt
retf
mov
outs
xlat
jbe
movs
das
rol
cmc
mov
test
dec
xor
xchg
mov
push
mov
gs
retf
pop
mov
mov
sar
cmp
fs
jo
call
hlt
add
dec
dec
xchg
imul
adc
imul
add
in
(bad)
push
adc
cld
shl
es
std
ins
scas
adc
mov
aad
sti
push
outs
jmp
jns
push
add
int
xor
aaa
add
out
cwde
cmp
pop
leave
leave
aas
jmp
push
sar
jle
enter
scas
les
dec
cmp
pushf
jle
push
push
ja
in
inc
pop
dec
fild
xchg
iret
mov
outs
jae
retf
cs
add
loop
sbb
and
or
push
hlt
ja
or
adc
pusha
sti
dec
(bad)
ins
sub
inc
mov
repnz
loopne
or
data16
or
test
push
jns
mov
ret
sbb
test
xchg
cmp
test
jbe
pop
lods
add
xchg
mov
or
push
and
fldenv
xchg
int
and
sub
mov
dec
fnstsw
sbb
stos
pusha
and
outs
clc
inc
sub
cmp
and
dec
add
add
jae
int
repnz
cdq
mov
stos
cmps
icebp
mov
inc
imul
shl
ret
clc
lods
pop
or
pushf
outs
in
push
and
movs
enter
hlt
movs
aas
into
(bad)
loopne
lahf
lahf
add
jmp
addr16
out
fchs
mov
xor
jmp
mov
inc
cwde
scas
xor
xchg
pop
xchg
test
jg
xchg
jns
adc
in
(bad)
std
and
test
sub
loope
push
xor
push
and
es
add
jmp
jo
into
push
es
add
pop
push
js
push
repnz
adc
mov
dec
jo
(bad)
push
mov
mov
sbb
jo
ja
xchg
dec
add
and
xchg
pop
hlt
fs
sbb
hlt
(bad)
dec
loopne
aad
adc
or
stc
pop
cli
adc
scas
xchg
dec
and
mov
mov
mov
das
xor
cmps
or
add
add
and
cmp
cmp
mov
mov
jb
pop
and
xor
lods
inc
adc
mov
fs
jecxz
jp
test
sbb
iret
retf
dec
mov
out
(bad)
das
aas
jle
or
aas
dec
inc
ds
pusha
mov
clc
daa
jnp
imul
mov
bound
jno
outs
or
unpckhps
sti
mov
and
sub
add
pop
out
fidiv
cmp
out
cmps
dec
outs
or
ds
adc
mov
or
xor
jnp
jns
mov
jge
lahf
mov
cvtps2pd
in
mov
(bad)
ins
mov
in
lods
sub
dec
out
ss
rcl
sub
pop
out
fcom
movs
jbe
nop
out
jae
icebp
xor
mov
jmp
iret
jecxz
movs
inc
and
das
mov
xchg
scas
daa
push
and
je
xor
fdivr
dec
adc
imul
sub
or
stos
cmp
cmps
mov
mov
cs
pop
loope
xor
arpl
cmp
push
dec
rcr
movs
inc
ret
icebp
and
inc
(bad)
not
loopne
mov
(bad)
shl
push
retf
cmp
test
pop
mov
sub
ins
fidivr
ins
neg
inc
xor
fsubr
hlt
mov
sub
nop
scas
ret
xor
std
mov
or
cmps
and
rcr
add
cld
pop
repnz
mov
adc
fidivr
mov
mov
mul
and
push
in
pop
fcmovb
sti
cmp
stos
test
cmps
out
call
fstp
push
jecxz
outs
and
ja
rcl
(bad)
fdivrp
lods
into
cmc
scas
cmp
pop
call
jmp
xor
add
int
addr16
fs
adc
sar
cmp
pop
(bad)
out
stc
test
stc
jl
pushf
es
mov
push
sub
xor
jecxz
xor
jmp
push
cmp
mov
scas
leave
sbb
pop
test
inc
fcmovb
xchg
add
shl
mov
jns
pop
add
sahf
or
and
addr16
mov
fbstp
loope
test
mov
inc
push
pushf
cs
jle
mov
inc
lock
dec
cdq
sub
aaa
mov
cmp
repz
pop
js
xchg
mov
repz
mov
int
sub
retf
(bad)
sbb
jecxz
or
xor
gs
pop
lods
mov
stos
push
(bad)
in
and
sub
lods
mov
jg
mov
cli
ja
loopne
pop
push
fs
cmp
xchg
mov
pop
and
leave
iret
mov
mov
cdq
dec
js
je
sub
lods
shl
shl
pop
lea
enter
sbb
pop
lea
icebp
dec
sbb
bound
int
std
outs
imul
xor
push
pop
rol
in
sub
dec
and
adc
jmp
jg
and
dec
ror
movs
push
sahf
ds
aad
cmp
push
popa
js
jle
sti
mov
sub
ret
popf
cmp
or
(bad)
cmc
or
dec
fisttp
test
sub
mov
sbb
movs
mov
enter
sbb
in
or
or
and
mov
cmp
xchg
shl
cmps
xchg
(bad)
adc
or
mov
jmp
dec
shl
mov
add
outs
mov
jl
sbb
in
aam
add
stos
jmp
pop
ror
jne
sbb
jl
mov
and
sub
cmp
sti
popa
sbb
jb
shr
ret
dec
cmp
dec
das
(bad)
sub
stc
sahf
add
leave
lods
out
xlat
sbb
je
mov
and
in
jmp
mov
cmp
dec
lods
xor
pop
jno
pusha
cmp
push
mov
inc
les
mov
loop
or
xchg
dec
dec
adc
movs
push
xor
stos
stos
ss
pop
les
out
add
aam
fisubr
ins
mov
imul
es
call
or
dec
out
mov
jmp
or
movs
js
xor
jb
sti
int3
jns
cmp
cmp
jecxz
ret
adc
push
cli
lea
(bad)
fisub
jle
add
fs
inc
call
pop
mov
fadd
push
test
mov
scas
fldcw
scas
push
sahf
xor
add
jmp
sar
jnp
push
movs
fmul
arpl
sbb
jne
aaa
(bad)
hlt
cli
inc
nop
jecxz
cmp
mov
dec
sub
(bad)
in
or
pop
ror
cmp
xor
jno
push
dec
fnstenv
sub
das
imul
dec
add
test
dec
xor
or
imul
xor
test
fwait
fs
test
lds
pop
ins
ss
imul
mov
pop
mov
sub
in
(bad)
enter
data16
stos
jno
icebp
xchg
xor
dec
mov
dec
dec
loope
xchg
sub
out
and
mov
or
push
xchg
aaa
mov
and
adc
inc
(bad)
xchg
shl
jne
push
jle
add
pop
mov
xchg
enter
outs
xchg
test
into
test
icebp
sub
push
cmps
jae
cmp
out
(bad)
iret
and
push
mov
repz
test
sbb
dec
(bad)
scas
push
fisub
fsub
out
xor
and
ret
or
pop
mov
xabort
sti
xchg
xor
xchg
mov
in
lea
mov
ret
jmp
or
pop
and
sub
ss
mov
lods
xchg
push
xchg
push
cwde
jecxz
rcr
stc
or
add
js
jnp
and
sbb
in
jge
mov
data16
ror
test
(bad)
retf
popf
xchg
cmp
lds
imul
stos
iret
mul
and
add
xor
test
cld
sti
icebp
cdq
pop
jnp
out
dec
mov
jne
int3
inc
mov
ficomp
sbb
mov
cmps
lock
adc
int
(bad)
mov
scas
sbb
popf
pop
gs
push
scas
out
out
cmp
add
inc
stc
cli
mov
mov
icebp
shr
adc
fs
inc
jns
sbb
sbb
lahf
jmp
xor
iret
enter
xlat
mov
(bad)
js
call
add
sub
stc
fidiv
enter
mov
xchg
out
mov
test
and
lahf
das
rol
adc
repnz
lods
pop
jo
or
sbb
gs
sbb
inc
jno
cld
in
and
(bad)
shl
sub
loop
enter
mov
jle
jmp
mov
in
psllq
adc
pop
test
or
add
push
inc
mov
shl
out
(bad)
jge
adc
imul
push
fidivr
iret
sbb
shr
leave
pusha
inc
fsubr
mov
sub
jns
jge
mov
cmp
add
fidivr
sub
gs
pop
xchg
sbb
sub
sbb
cwde
add
jne
adc
dec
dec
(bad)
sti
scas
jg
fadd
lods
jb
add
xor
cmp
pop
sbb
retf
cmc
push
push
outs
mov
xchg
dec
push
test
cld
popf
fs
and
inc
pop
jecxz
gs
or
std
jne
and
cmp
fucomip
pusha
cmp
jl
data16
test
sub
add
jnp
adc
dec
jmp
cdq
push
and
mov
sar
jmp
imul
ret
in
in
lods
jmp
mov
out
and
retf
jl
mov
fsub
jg
addr16
and
call
movs
xor
leave
fs
dec
adc
push
cwde
out
arpl
adc
jmp
pop
or
cmp
cmp
push
in
inc
retf
inc
or
(bad)
repnz
adc
cdq
mov
in
jnp
sbb
mov
popf
imul
ror
or
and
xchg
icebp
mov
mov
jmp
out
add
scas
xchg
fisttp
pop
test
jg
das
movs
ror
and
pop
stc
js
sar
mov
gs
xor
xor
cmp
fisub
add
test
ja
mov
je
(bad)
pop
in
push
lea
ret
in
aad
mov
lods
je
jecxz
push
push
or
retf
dec
adc
call
les
(bad)
adc
mov
(bad)
stos
add
add
fimul
inc
pop
xchg
cdq
dec
loopne
fmul
sbb
iret
shl
ja
or
mov
sar
int3
in
movs
or
xor
test
xchg
bound
mov
pushf
jp
jnp
ds
pop
out
int
sub
in
fs
lock
and
xor
in
fadd
daa
sub
ds
sbb
icebp
fst
fcom
lods
push
gs
lahf
out
xchg
push
dec
cmp
mov
inc
ins
add
or
fwait
cmps
movs
inc
stos
mov
push
xchg
daa
sub
add
scas
test
cli
retf
mov
push
int
cdq
mov
push
xor
scas
fstp
lds
(bad)
mov
loop
repnz
mov
pop
dec
lock
dec
aam
inc
mov
push
push
xor
fwait
loop
js
adc
mov
inc
aam
and
mov
jne
add
cli
push
pushf
push
push
mov
push
fndisi(8087
and
mov
mov
call
xchg
mov
out
shr
add
in
mov
cmps
popa
pop
pop
(bad)
push
lods
(bad)
adc
pop
mov
mov
adc
(bad)
int
mov
fwait
jmp
popa
add
das
fs
std
pop
push
ss
cmps
dec
inc
xchg
mov
mov
xchg
add
sub
(bad)
popf
retf
loop
nop
xchg
or
and
push
and
mov
inc
iret
inc
pop
repnz
sbb
sbb
mov
cmp
repz
(bad)
xor
mov
push
into
jmp
pop
addr16
push
jne
jb
mov
ins
push
repnz
cmp
js
in
or
stc
popa
enter
jmp
mov
popf
rol
pop
lea
xchg
and
xchg
cmp
pop
adc
retf
mov
lahf
add
inc
retf
aas
sbb
sbb
and
pop
lods
xor
popf
call
mov
leave
jmp
mov
clc
jmp
sub
fild
daa
dec
sbb
dec
leave
jle
pop
or
lods
test
or
loop
packssdw
jecxz
retf
icebp
jle
stc
jp
popf
jo
push
lods
outs
mov
pop
push
call
bound
pop
cwde
in
lock
scas
cmps
and
push
xor
xor
mov
(bad)
and
mov
ins
add
nop
adc
idiv
mov
jmp
pusha
cli
pop
jl
jbe
xor
(bad)
rol
lods
inc
sbb
sbb
std
jl
mov
pusha
popf
data16
push
mul
cmps
lock
xor
xor
mov
shl
xor
(bad)
scas
add
cwde
push
xor
push
push
mov
ds
sbb
mov
mov
pop
jbe
inc
outs
mov
fnstsw
ja
fst
and
addr16
mov
addr16
pop
push
pushf
pop
adc
test
call
out
pop
(bad)
mov
inc
sar
hlt
mov
out
cmp
(bad)
pop
fdivr
jmp
mov
cmp
push
jmp
je
cmp
mov
std
iret
jnp
loopne
jmp
in
xor
sub
xchg
into
xchg
int
push
sbb
mov
shl
ror
xchg
cmp
ds
jl
popa
in
dec
leave
cmc
fnstcw
rcr
xor
loope
jns
std
in
dec
add
lods
std
mov
push
dec
or
adc
outs
popa
das
inc
inc
inc
pop
cld
and
cmc
and
mov
dec
push
pop
sbb
repz
sub
fadd
js
and
cmovle
adc
scas
xchg
jns
fistp
sahf
xor
ds
sub
fisttp
push
add
stos
mov
dec
dec
push
fldcw
jae
mov
scas
in
data16
cmp
adc
pop
idiv
pop
or
xchg
cmc
mov
mov
lea
in
dec
ins
jg
add
push
mov
imul
(bad)
push
sar
cmps
push
bound
pop
cmp
push
sub
or
mov
add
rol
aas
xlat
test
arpl
jmp
mov
push
repz
fisubr
mov
int
test
(bad)
lock
cmp
ror
popa
stos
test
daa
pop
add
inc
aam
sub
and
jnp
add
test
test
in
retf
jns
ret
sub
mov
push
ins
cmp
inc
dec
imul
jge
clc
cwde
mov
xchg
mov
cdq
aad
jbe
cmps
js
scas
loop
add
or
aas
mov
push
push
xor
xor
imul
jne
pushf
ins
lods
push
retf
sub
movs
rol
cwde
mov
sub
cld
test
arpl
repz
jp
out
xor
lods
ds
ins
push
nop
mov
dec
jle
xlat
push
pop
lds
dec
js
jg
fisttp
adc
pop
jb
xchg
in
mov
or
clc
fsub
pop
iret
adc
sbb
arpl
mov
xchg
xor
mov
mov
mov
or
dec
lods
jge
shr
retf
in
xchg
pop
cmp
jno
dec
shr
stos
(bad)
aaa
loope
jle
in
ss
pushw
add
ret
mul
(bad)
sti
and
loop
pop
mov
mov
gs
jae
rcl
scas
mov
stos
sar
push
mov
(bad)
mov
add
(bad)
fnstcw
and
dec
(bad)
sub
dec
sbb
test
jmp
jb
mov
fwait
push
inc
mov
fstp
adc
stos
sub
jbe
pop
aad
and
and
jb
popa
mov
ins
cmc
pop
out
inc
adc
and
cmp
rcl
(bad)
icebp
inc
dec
(bad)
xchg
cmp
xlat
scas
call
inc
mov
cmp
xlat
push
(bad)
cmp
in
sub
nop
test
sbb
jg
and
into
pop
(bad)
mov
cmp
mov
not
jmp
jne
mov
mov
sbb
dec
(bad)
fstp
mov
imul
inc
int
movs
sbb
xchg
sub
sti
arpl
(bad)
and
cmp
lea
mov
jp
cmp
jmp
iret
mov
xchg
or
adc
popf
xor
out
push
adc
ror
out
in
pop
ret
js
mov
xchg
das
dec
mov
push
cli
or
sbb
mov
das
and
pop
loop
(bad)
jmp
push
xchg
retf
jmp
jmp
jp
xchg
jnp
cmp
neg
mov
mov
sub
and
scas
mov
inc
stos
pop
ins
je
pop
cmp
scas
outs
std
bound
sbb
mov
sub
or
call
adc
mov
jmp
inc
stos
ins
cmc
pop
add
(bad)
sbb
adc
mov
and
xchg
mov
stos
cmp
cmp
push
push
cmp
int
mov
xor
xor
adc
mov
das
ins
jle
jecxz
in
mov
pop
dec
stos
pop
aad
inc
out
and
jmp
div
adc
inc
sar
stc
or
test
int
popf
inc
(bad)
rcr
pop
(bad)
rcl
inc
aas
rol
aas
mov
(bad)
inc
mov
rcr
mov
add
das
dec
nop
dec
ja
call
dec
cmp
dec
lahf
popf
xor
push
arpl
and
out
inc
dec
cld
jecxz
dec
inc
inc
mov
stos
pop
xor
outs
inc
push
and
aaa
sbb
mov
movs
mov
pop
xor
fild
or
stos
pop
std
sbb
pop
clc
not
cwde
inc
adc
sub
adc
adc
fdiv
jmp
and
(bad)
pusha
test
dec
imul
les
pop
and
int
(bad)
jge
sub
push
push
loope
cdq
int
sbb
aaa
aad
fst
mov
jbe
popa
mov
xor
mov
cmps
mov
add
mov
ficom
sub
push
jl
aam
mov
and
sub
push
mov
scas
in
mov
stos
sbb
pop
pop
frstor
js
stos
sub
sti
sub
shl
pusha
dec
test
jb
mov
pop
(bad)
shl
jb
cdq
sbb
mov
ins
sbb
rcr
fidivr
sti
leave
pop
mov
fistp
xchg
sub
pop
loop
daa
clc
push
movs
fdivp
and
pop
inc
test
mov
stos
shl
aad
jo
or
sbb
mov
ret
data16
mov
test
div
jne
cmps
cld
loope
mov
sub
es
sti
retf
mov
pop
scas
pop
sub
push
inc
in
fidiv
dec
dec
addr16
add
lahf
sbb
fisttp
retf
xchg
int
imul
fwait
adc
lds
add
sub
inc
push
jg
jns
sbb
dec
mov
sbb
add
iret
int
cli
pop
or
xchg
clc
mov
cs
clc
iret
cmp
sub
lea
adc
mov
sub
not
rcl
ins
pop
push
dec
sub
clc
addr16
jmp
nop
pop
and
mov
xlat
sub
in
ror
shl
mov
ret
stc
lock
mov
mov
stc
xor
cli
test
neg
mov
dec
ret
add
shr
push
xor
fimul
in
sbb
push
xchg
cmp
pop
dec
test
cdq
jns
sti
xor
aad
jnp
mov
aam
dec
(bad)
in
data16
inc
mov
xor
mov
mov
cmps
rcr
mov
(bad)
movs
xchg
xchg
mov
ror
test
aam
stc
and
sbb
inc
into
imul
jae
mov
scas
sbb
fistp
enter
sub
and
test
js
lahf
fdecstp
popf
lahf
mov
pusha
imul
jno
stos
fisttp
dec
xor
xchg
push
adc
jecxz
adc
push
push
ins
mov
popfw
test
and
or
fsubr
retf
imul
cli
pop
lods
out
cmp
mov
stos
push
sbb
xor
push
dec
xor
add
cs
xor
mov
push
mov
sbb
cmp
mov
inc
ds
add
ins
repz
add
cmps
int3
mov
mov
ss
mov
mov
fsubr
retf
fistp
fidivr
mov
(bad)
or
xor
(bad)
cmc
ret
sub
sahf
pop
jno
test
out
mov
sub
call
es
movs
retf
sar
mov
cmp
mov
sub
mov
shl
adc
lods
xchg
jo
or
cdq
sub
xchg
and
add
jle
sbb
xlat
xchg
mov
sub
ja
neg
xchg
cmp
leave
retf
(bad)
fild
int3
aaa
push
add
(bad)
xchg
pop
enter
lods
aam
fsubr
push
outs
mov
in
lods
adc
sar
sbb
mov
retf
fdecstp
aas
inc
retf
adc
(bad)
aam
leave
lea
mov
movs
lods
stos
or
ret
mov
stos
jo
xchg
dec
push
jno
ret
je
dec
lahf
cwde
stc
cmp
mov
retf
int3
mov
mov
mov
mov
mov
aaa
outs
pop
(bad)
shl
mov
or
fcomip
cmp
mov
cwde
mov
mov
adc
cld
aam
pop
nop
int
jmp
cmp
or
push
out
push
ja
pusha
jbe
inc
loop
dec
js
pushf
xchg
jg
adc
scas
mov
lods
and
je
je
cwde
sub
mov
cmc
imul
and
xor
shl
call
push
push
and
clc
push
or
or
ins
mov
add
es
retf
or
cmp
ret
retf
sub
ret
aad
mov
retf
or
push
pop
(bad)
std
add
adc
scas
fisubr
sbb
out
lea
lods
ja
sub
or
ficomp
retf
nop
in
les
ins
imul
xchg
mov
dec
test
push
xor
lods
cmp
retf
nop
je
push
stos
adc
mov
mov
ins
les
(bad)
div
icebp
jg
iret
addr16
dec
jb
add
adc
test
mov
xlat
rol
mov
xchg
mov
and
in
xchg
inc
imul
movs
mov
cmp
mov
mov
inc
enter
test
rcl
aam
outs
xor
into
mov
and
sub
lds
mov
idiv
and
outs
fbld
loop
int
pop
push
push
pusha
pop
mov
or
das
stc
xor
sub
sub
jbe
cmp
dec
adc
pop
jg
adc
pop
mov
cmp
cmp
(bad)
jno
mov
scas
outs
mov
jecxz
call
and
dec
aam
mov
jno
mov
sub
add
adc
mul
xor
cmp
add
xor
pop
dec
das
push
jmp
push
xchg
(bad)
iret
out
sahf
test
jmp
in
(bad)
sahf
iret
int
xchg
test
aad
mov
fisttp
sbb
gs
gs
aaa
out
xchg
sar
dec
stos
punpckhdq
imul
sbb
out
push
loop
rcr
leave
aas
mov
or
mov
stos
xchg
loop
inc
mov
mov
lods
jge
data16
add
push
sbb
mov
xor
(bad)
cmp
(bad)
cld
xor
xchg
imul
and
loop
pop
mov
jl
lods
mov
popf
inc
popf
dec
out
icebp
hlt
ds
mov
pop
in
jae
(bad)
call
or
hlt
dec
dec
xchg
cld
jno
aaa
mov
push
xchg
ds
fwait
pop
shl
fisub
outs
xchg
test
rcl
stos
pop
shl
ret
les
push
les
cmp
(bad)
out
mov
cdq
mov
inc
mov
leave
fisubr
add
lds
dec
sbb
in
xchg
add
mov
out
imul
adc
xchg
ins
idiv
push
imul
loop
mov
adc
fnsave
xchg
scas
sahf
cmc
cmp
lea
outs
popf
cmp
dec
add
mov
xor
nop
or
sbb
les
ins
xor
xchg
inc
add
push
movs
dec
lods
xor
jo
(bad)
sub
adc
push
xchg
mov
mov
jl
stos
push
mov
mov
data16
jmp
pop
stos
push
jbe
fs
repz
cdq
jo
repnz
xlat
loopne
fild
scas
movs
xor
hlt
adc
inc
shl
sub
jmp
int3
ins
call
mov
retf
das
retf
jle
add
test
mov
retf
(bad)
mov
jg
mov
pop
retf
imul
jns
dec
jns
or
pop
cmc
test
nop
adc
shl
sbb
int3
cmps
and
jnp
movs
and
cmp
dec
ins
jle
sbb
jl
xchg
jns
ins
loope
mov
adc
(bad)
imul
pop
jg
stos
pop
test
pop
lods
push
push
data16
dec
lods
fst
popf
cdq
mov
mov
ss
int3
into
mov
and
dec
jle
mov
push
sbb
jle
aaa
add
std
daa
icebp
sti
jmp
sub
or
in
xchg
jge
popf
out
add
scas
dec
cmp
sbb
push
loope
mov
mov
inc
jae
adc
jno
call
add
clc
call
sbb
cmps
in
in
inc
movs
sbb
xlat
inc
clc
fstp
and
mov
shr
test
leave
pop
pop
jns
jne
out
mov
rcr
jb
and
inc
sbb
dec
bound
dec
fldcw
cmp
adc
daa
mov
cmp
mov
mov
or
(bad)
(bad)
adc
inc
(bad)
push
and
xor
xor
jo
pop
(bad)
in
in
imul
js
fdivr
imul
mov
xor
cmc
mov
ins
dec
inc
or
mov
ror
ds
add
mov
pop
cmp
push
inc
cld
push
(bad)
fstp
mov
out
test
xor
add
push
mov
cld
(bad)
call
js
jge
(bad)
shr
(bad)
js
mov
xor
xchg
mov
repnz
push
add
dec
and
mov
dec
xchg
xchg
xchg
test
std
xchg
arpl
fs
imul
pop
lods
ss
std
mov
loopne
shr
xlat
mov
inc
fidiv
clc
cli
add
(bad)
or
hlt
cs
scas
cld
call
and
mov
add
xchg
retf
clc
retf
fcom
lods
in
mov
dec
xor
loopne
mov
jle
out
lock
adc
fwait
cmp
(bad)
mov
shr
mov
dec
es
cmp
nop
or
xchg
cli
int3
retf
mov
add
and
push
xor
loop
sub
hlt
add
jle
(bad)
loop
pop
das
stos
add
in
cli
inc
xor
jno
mov
ins
es
retf
dec
in
aas
pop
mov
push
loopne
enter
xchg
cmp
data16
outs
loop
(bad)
mov
mov
cdq
mov
nop
sbb
aam
and
rol
add
std
cli
xor
js
movs
dec
mov
pop
mov
or
sub
xchg
xchg
sbb
stos
xchg
dec
xor
jbe
sbb
dec
lds
int
fistp
stos
cmc
sar
data16
adc
inc
enter
xor
in
mov
cmp
cli
dec
pop
stos
in
cmp
lahf
mov
cmc
dec
jb
rol
dec
out
add
dec
inc
pop
xchg
popf
xor
sub
je
dec
cmp
jmp
add
pop
cmp
add
nop
mov
mov
addr16
rcr
fs
rcl
or
shl
push
mov
addr16
add
ss
mov
or
popf
and
xchg
mov
cs
ins
dec
sbb
outs
es
pop
add
call
shr
cmp
mov
dec
xchg
jnp
es
sbb
jmp
sahf
jnp
loopne
mov
mov
cli
stos
cmp
repnz
cmp
jb
inc
test
les
inc
imul
cmp
pop
dec
push
dec
cmp
je
test
icebp
lahf
inc
nop
cdq
popa
jecxz
in
jns
shr
repnz
retf
nop
out
stos
add
(bad)
add
popa
jo
ror
xchg
push
call
outs
pop
scas
push
stos
ret
stos
sub
in
stc
cmp
adc
pusha
add
cmc
xor
mov
or
jne
xchg
lds
xchg
stos
mov
sbb
pop
sbb
jo
mov
(bad)
jae
adc
mov
icebp
neg
pop
cmps
ret
stc
(bad)
jge
sbb
inc
push
(bad)
jg
push
jg
in
mov
(bad)
in
out
js
mov
in
dec
lods
cmps
test
inc
mov
push
(bad)
cs
(bad)
frstor
pop
add
add
dec
pop
pop
pop
cmp
add
add
mov
jecxz
pop
or
xchg
cmp
sbb
mov
and
stos
cmps
lea
or
xchg
clc
scas
xor
dec
add
adc
push
ja
movs
mov
(bad)
movs
xchg
lea
ja
pop
jns
bound
add
je
loop
inc
bound
jae
push
sbb
in
outs
mov
loope
sbb
cmp
jno
dec
and
lds
ss
(bad)
dec
(bad)
pop
daa
imul
mov
fwait
adc
nop
inc
ds
outs
enter
aad
ss
push
xor
outs
out
mov
and
mov
arpl
inc
fdivp
push
test
cmp
out
xchg
lea
(bad)
movs
and
mov
mov
pop
es
push
pop
movs
icebp
cld
jnp
push
in
outs
arpl
jmp
mov
push
xor
pop
mov
test
xor
lods
inc
adc
or
dec
sub
adc
pop
mov
(bad)
mov
lods
push
in
(bad)
pop
stc
inc
clc
outs
add
push
xlat
push
pop
iret
mov
lds
xchg
sbb
and
xchg
loop
lock
cmp
mov
mov
fwait
mov
mov
in
lea
jbe
fucom
and
mov
iret
sub
test
daa
add
adc
or
dec
xor
sub
mov
test
cmp
jmp
lea
fwait
daa
push
add
xor
jg
mov
in
test
stos
(bad)
ror
out
hlt
jge
call
cwde
cdq
mov
(bad)
fisttp
cmps
lfs
add
or
adc
xor
jg
stos
push
xor
cmc
or
hlt
cmc
xlat
imul
stos
cmp
scas
ror
retf
pop
add
shr
out
pop
jp
aam
xor
aas
ja
loope
out
addr16
jne
inc
dec
fdiv
scas
push
sar
scas
sbb
retf
and
js
pushf
ja
nop
xchg
fcom
push
call
sub
cmc
out
jp
xor
in
pop
retf
aaa
loope
or
or
stos
fcmovb
stos
loop
push
and
hlt
dec
jmp
repnz
fcompp
sbb
mov
lds
jno
popf
add
cmp
mov
clc
pop
repnz
ja
xor
lods
fimul
cmp
push
cmp
dec
fisttp
data16
mov
or
lods
push
test
fst
ret
adc
rcl
aas
repz
cmp
fnstcw
popf
and
and
add
add
sti
outs
and
js
cmps
fcomp
jge
push
call
jg
mov
adc
and
mov
adc
jb
mov
jecxz
icebp
fldcw
outs
push
fadd
dec
and
adc
sub
loope
jb
pusha
cmp
out
les
aas
mov
sub
rcl
inc
lock
dec
inc
int
xor
cli
sbb
(bad)
(bad)
fcomp
arpl
test
icebp
js
and
iret
mov
lahf
aas
pand
rol
dec
ret
push
outs
ds
mov
pop
sub
das
mov
mov
dec
call
hlt
jbe
int
mov
inc
fcomp
mov
add
xchg
xchg
or
aas
jno
in
inc
imul
dec
xor
cwde
jb
adc
cdq
addr16
wbinvd
div
xchg
add
mov
cmc
add
cmp
adc
loop
bound
xor
dec
pushf
in
pop
inc
and
sub
and
(bad)
or
ins
fdivr
push
xchg
sub
popf
ret
repnz
pop
ins
and
xchg
add
aaa
jno
gs
fdiv
sbb
and
mov
mov
outs
mov
das
int3
repnz
fs
dec
cld
mov
test
nop
bnd
fsubr
xchg
add
add
mov
mov
fdivr
xchg
and
in
imul
or
mov
push
addr16
fs
loopne
loope
inc
cmp
in
out
ins
loopne
mov
sub
push
sbb
sub
mov
mov
mov
mov
inc
or
add
or
fimul
in
and
sub
sub
mov
fild
mov
add
push
push
cli
pop
dec
ja
dec
pop
xor
or
jno
or
inc
xchg
cmc
inc
mov
stc
mov
xchg
and
loopne
jo
xor
fnstsw
dec
pop
mov
jmp
call
cmp
mov
pop
ja
mov
(bad)
xchg
or
inc
imul
stos
inc
fxch
jge
jg
sub
mov
jecxz
push
sbb
adc
loope
test
dec
loopne
lods
pop
imul
scas
(bad)
inc
and
fcom
scas
xor
call
cmps
inc
ins
adc
add
enter
push
fsubr
pushf
test
ja
mov
mov
call
(bad)
fmul
pop
mov
cli
shl
jmp
or
enter
push
popa
or
sbb
mov
cwde
push
adc
dec
aas
mov
mov
aas
rcr
mov
pop
dec
and
cmp
inc
inc
add
cmp
fisttp
cmp
aas
push
adc
clc
jno
push
cli
add
or
push
sti
or
push
ret
cmps
cli
icebp
stos
or
add
std
xor
jno
enter
shl
sbb
sub
adc
dec
cmps
stc
ins
jl
sub
das
jo
imul
adc
push
mov
sbb
shrd
mov
test
sub
imul
imul
cmp
cmp
rol
jo
jns
xchg
mov
and
xchg
iret
mov
lods
mov
inc
add
mov
imul
pop
mov
out
stos
sub
scas
lods
shl
test
mov
sahf
stos
pop
fcom
fsub
mov
popf
leave
cmps
int
div
sub
aaa
fwait
xor
push
popf
dec
out
xchg
repnz
fwait
lds
cdq
nop
pop
dec
dec
clc
add
cmps
sub
cmp
and
fsub
sub
add
dec
push
clc
lods
or
sbb
scas
adc
mov
push
pavgw
fs
mov
push
pusha
int
xchg
movs
ret
shl
inc
ret
pop
sbb
cmp
outs
push
inc
loop
test
push
dec
neg
outs
sar
test
or
fld
test
push
fwait
mov
mov
inc
push
rol
das
retf
fs
cmp
push
iret
jbe
in
ins
jo
xor
pop
push
(bad)
mov
icebp
lahf
pop
dec
div
add
mov
leave
pop
and
and
mov
jne
shl
push
lahf
cmps
imul
dec
jne
jge
mov
sbb
pop
in
cmp
aaa
inc
inc
cmp
mov
clc
lea
push
mov
mov
mov
xor
loopne
mov
sub
cli
mov
cmps
lock
sbb
push
xchg
cld
or
ret
mov
out
cmp
push
aam
in
jp
ins
jecxz
outs
mov
add
stos
in
es
push
xchg
inc
cmp
adc
lods
dec
scas
daa
inc
test
pushaw
pop
(bad)
out
out
jns
push
jmp
push
retf
push
mov
add
mov
(bad)
cmp
inc
outs
fisttp
frstor
pop
add
std
lds
adc
inc
or
cdq
and
sub
dec
mov
or
pop
jl
dec
add
push
ja
mov
xchg
movs
xchg
cdq
inc
sahf
cmp
je
mov
imul
and
mov
nop
icebp
fld
cmps
jmp
cmp
push
add
icebp
movups
jo
xchg
je
push
std
call
es
repnz
pop
pop
xchg
out
add
sub
mov
add
add
sub
mov
scas
aas
jne
and
stos
sub
pop
ja
fldcw
ins
xchg
cld
dec
sub
xor
shl
cdq
mov
pop
data16
adc
adc
aam
inc
mov
mov
lods
idiv
in
out
mov
xchg
push
aam
arpl
adc
jmp
mov
cmps
mov
movs
test
repnz
popa
xor
(bad)
jne
cmp
jo
repnz
inc
jnp
mov
and
ss
loopne
sbb
mov
ja
out
test
mov
inc
daa
dec
out
xchg
push
pop
sub
mov
sub
aam
movs
mov
xchg
cmp
inc
in
ror
and
inc
test
cmp
jne
push
ror
lods
push
test
ins
int
sbb
xor
ret
inc
adc
mov
xchg
jecxz
outs
xchg
stos
daa
inc
pop
pop
add
iret
dec
xchg
mov
push
(bad)
fcom
jmp
mov
(bad)
cdq
mov
cwde
sub
outs
bnd
out
call
(bad)
dec
xor
sbb
or
std
mul
sub
fisubr
mov
fstp
jo
test
inc
jl
cmp
lahf
xor
add
ins
mov
adc
jo
lahf
adc
movs
jb
push
add
inc
out
div
sqrtps
mov
sbb
sti
(bad)
aam
mov
mov
sub
cs
pop
aam
loopne
pop
push
pushf
mov
or
sub
(bad)
loopne
scas
hlt
ret
repz
call
jge
ins
popa
sub
pop
sbb
hlt
sbb
adc
iret
mov
xor
lock
sbb
scas
push
leave
sbb
cmp
scas
cmp
pop
xor
push
sub
or
fsubr
fwait
add
in
je
jae
mov
lods
mov
pop
pop
add
push
add
movs
data16
xlat
movs
sbb
push
xchg
lock
int3
add
dec
push
mov
pop
gs
xchg
jne
sub
mov
into
sbb
xchg
enter
and
add
add
sti
pop
clc
jl
enter
fld
stos
dec
imul
sbb
push
std
stos
std
lea
pop
xor
sbb
out
or
test
repz
into
xlat
pushf
fwait
jecxz
jns
push
loop
adc
push
push
rcl
mov
or
retf
loop
add
shr
daa
mov
sbb
sub
ret
jg
jae
adc
out
pop
inc
cmp
mov
or
fdiv
push
inc
fiadd
fld
cdq
sbb
mov
jns
gs
or
inc
outs
push
les
popf
fsub
jmp
shr
out
imul
cli
cmps
mov
fsub
ins
fwait
mov
sar
stos
xchg
xor
(bad)
jae
or
pop
jmp
mov
xor
pop
es
clc
movs
push
cli
adc
lods
dec
push
xchg
es
pop
cs
out
xor
jp
test
rol
jne
jne
loope
inc
cwde
stos
push
mov
addr16
adc
(bad)
loopne
shl
xchg
dec
movs
sub
mov
mov
ins
rcr
jne
push
cmc
xchg
aam
loope
adc
scas
jae
jp
xchg
ret
adc
int
scas
cmp
mov
outs
movs
outs
shl
jp
pop
rcr
xchg
sbb
and
or
pop
or
or
jp
cmp
xor
dec
shl
dec
mov
and
pop
xchg
out
shl
push
xor
test
ss
jo
nop
push
les
(bad)
xchg
pop
mov
jp
pop
xor
sti
jo
jp
int3
jecxz
inc
dec
mov
rcl
xchg
scas
and
push
imul
daa
inc
sub
xor
add
dec
fcom
dec
scas
ss
cmp
sahf
add
outs
es
ins
in
adc
out
daa
jnp
and
sub
mov
stos
loopne
mov
imul
mov
mov
std
jle
dec
test
shr
ds
adc
add
cmp
mov
push
std
in
aaa
out
pusha
inc
mov
dec
sub
pop
push
in
es
sbb
sub
mov
(bad)
mov
cmp
ins
add
cdq
loop
div
(bad)
pop
mov
or
push
icebp
std
adc
inc
adc
inc
sbb
lods
sub
js
jae
add
mov
and
jbe
jne
cmc
and
aad
add
sar
repz
push
jle
mov
test
dec
sub
add
bound
mov
pop
mov
pop
pop
loope
ror
xchg
sti
rep
adc
jnp
enter
fldcw
ja
pop
or
sbb
cdq
clc
or
mov
xchg
les
das
add
repnz
push
mov
arpl
mov
adc
xor
das
and
ins
jle
call
mov
xor
mov
mov
jp
mov
shl
fnstcw
inc
jmp
push
(bad)
push
add
mov
push
push
lahf
cwde
js
xor
and
(bad)
mov
(bad)
nop
inc
adc
out
or
pop
dec
ror
inc
cmp
in
cmp
stc
dec
dec
loop
push
and
and
aaa
js
inc
adc
rcl
and
sub
and
pop
jne
push
xor
mov
sbb
lods
mov
in
pop
in
iret
dec
mov
bound
js
aas
fld
scas
and
xor
sub
and
add
fist
nop
sbb
sbb
(bad)
sbb
cwde
loope
sbb
addr16
mov
pop
and
push
sbb
(bad)
cmp
not
and
lahf
xor
mov
retf
mov
movs
jge
rcl
sub
inc
xchg
dec
sub
dec
mov
push
call
dec
cmps
pushf
pusha
clc
inc
mov
and
pop
add
aam
fist
out
mov
lds
inc
mov
aas
push
leave
cmp
sbb
loopne
fnstsw
mov
and
into
add
adc
jmp
mov
shl
ja
pop
xchg
inc
dec
aas
hlt
leave
sub
clc
xor
cmp
stc
retf
inc
push
test
xor
or
push
add
mov
inc
loop
jo
sbb
das
mov
fisub
add
xor
fild
and
outs
in
fdivr
lods
test
ret
cmps
adc
ja
inc
fadd
loop
out
mov
xchg
in
mov
sbb
(bad)
(bad)
repz
bound
xor
je
in
dec
and
(bad)
(bad)
push
imul
mov
adc
loopne
jl
cmp
xchg
and
jb
je
repz
or
iret
jmp
call
ins
aaa
stos
add
mov
jl
lahf
mov
int3
cmp
lods
call
out
adc
jmp
pop
loopne
xchg
cmp
inc
aas
jp
sbb
or
(bad)
stos
add
push
jg
das
fld
and
scas
fs
(bad)
imul
jle
cmps
adc
and
cmp
push
pop
and
jno
out
pusha
inc
adc
cli
ss
gs
xor
imul
or
ret
and
push
das
dec
sahf
ficomp
sub
(bad)
xor
das
daa
pop
test
ins
jo
inc
jl
nop
popa
add
xlat
test
mov
mov
mov
cli
xor
(bad)
cmp
call
or
mul
xchg
xchg
shr
ror
cmps
(bad)
leave
mov
lods
mov
movs
pop
enter
lods
push
jle
dec
int
es
adc
inc
jg
mov
js
pop
aam
mov
adc
mov
call
test
sub
xchg
bnd
and
inc
int3
aad
es
fadd
seta
fdiv
sub
retf
add
sub
test
push
jne
xchg
push
test
loope
stos
shl
(bad)
std
lahf
sbb
adc
rol
adc
and
mov
cld
fldenv
and
aaa
retf
cdq
ret
clc
dec
iret
pop
push
push
inc
xor
fmul
push
xor
mov
data16
adc
xor
lea
mov
enter
cmps
pop
and
loope
(bad)
fdivr
and
test
mov
mov
stc
mov
mov
retf
bound
jb
movs
ficomp
fild
push
sub
xor
sub
sub
xor
lds
pop
and
mov
fild
retf
daa
pop
sbb
outs
cwde
mov
shr
push
push
dec
inc
mov
pop
sbb
mov
into
cmp
test
(bad)
jne
xchg
xchg
pop
stos
dec
add
(bad)
mov
add
sbb
sti
push
popf
mov
cmps
or
stos
shl
mov
pusha
ss
dec
cmp
sbb
jecxz
mov
pop
xchg
stc
or
imul
push
cmp
sub
fidivr
pop
test
cs
neg
int
or
pop
mov
fadd
jge
cmp
mov
or
call
cdq
daa
sub
mov
ret
ja
js
dec
push
popf
push
dec
push
mov
inc
add
cld
and
(bad)
or
add
sub
cld
and
(bad)
mov
sti
sar
in
fidivr
fst
push
or
fadd
cdq
leave
ins
test
test
repz
cdq
mov
lahf
stc
sbb
adc
xchg
bound
jge
or
or
lds
call
das
jne
unpcklps
ja
and
push
jge
sar
stos
loopne
xlat
and
pushf
add
or
sub
(bad)
loopne
sbb
retf
not
ja
out
aaa
adc
mov
or
dec
xchg
adc
dec
or
data16
sub
lods
lods
mov
adc
fiadd
push
aas
sub
mov
and
pop
in
out
iret
pop
fdivr
test
repz
in
mov
(bad)
cmp
daa
push
ja
cmp
mov
rcr
cmp
shl
jo
retf
out
adc
xor
push
inc
dec
add
sbb
add
scas
mov
add
shr
popa
mov
(bad)
(bad)
ds
xor
shl
in
and
jne
scas
add
xor
push
gs
movs
or
xor
cmps
cmps
bound
mov
push
ret
in
lods
test
push
xchg
mov
inc
jmp
(bad)
cmp
aaa
call
mov
test
push
fst
mov
push
adc
imul
push
movs
(bad)
aad
and
sub
mov
add
sbb
sbb
inc
jne
(bad)
fisub
jg
scas
(bad)
fcom
call
cmp
lock
movs
in
adc
add
jle
icebp
fwait
push
add
pop
sub
push
enter
jecxz
popf
jg
fwait
pusha
stos
aaa
imul
in
xor
jmp
jp
push
addr16
mov
int
inc
cmp
jno
inc
cdq
es
arpl
jge
(bad)
pop
pop
inc
xchg
mov
(bad)
shl
int
jl
ret
sub
xchg
iret
cdq
aas
scas
fdivr
dec
(bad)
inc
lds
fwait
mov
cli
test
add
out
cmp
cmp
jns
push
cmps
xor
arpl
xchg
inc
lds
push
cli
imul
push
test
pop
xor
scas
and
mov
jbe
inc
xchg
ja
daa
inc
jg
mov
into
jnp
push
xchg
pop
and
and
xchg
test
(bad)
cmp
push
scas
add
hlt
sub
pop
mov
in
add
out
xchg
jne
dec
ins
(bad)
push
aam
mov
inc
pop
or
or
icebp
sbb
cdq
and
mov
es
xor
(bad)
adc
xchg
sub
mov
(bad)
push
xor
or
in
xor
cmp
loop
pop
call
inc
and
push
cmps
pop
xchg
dec
pusha
inc
test
sub
xchg
ror
jmp
(bad)
pop
xlat
adc
(bad)
pusha
xchg
fcom
cmps
ficom
mov
inc
bnd
add
ins
in
cmc
jl
ret
add
dec
out
fisttp
cmp
sbb
cdq
out
add
in
mov
or
pop
add
push
xor
fs
int3
pushf
or
rcl
(bad)
mov
retf
sar
jnp
sbb
mov
lds
inc
sbb
inc
test
mov
int
jne
ror
and
pop
push
jp
cwde
pop
bnd
jbe
test
lock
pop
inc
stc
pop
ja
inc
add
mov
xor
sbb
push
ja
(bad)
mov
pop
imul
cdq
(bad)
sub
fistp
xchg
sub
sbb
rcl
adc
sbb
jge
add
inc
call
cwde
pop
and
cwde
push
pop
out
loop
jl
jns
adc
push
stos
pop
or
not
enter
cmc
mov
imul
popf
push
mov
push
hlt
sti
and
push
call
pop
not
out
dec
pop
into
iret
mov
dec
mov
xor
pop
mov
leave
stos
je
icebp
jmp
int
out
mov
sbb
lods
xor
test
xchg
mov
xchg
jae
sub
mov
xlat
cmc
(bad)
repnz
lock
pop
(bad)
ffreep
cs
mov
push
inc
dec
shr
(bad)
add
test
ja
fcmovb
and
push
std
inc
mov
std
sti
mov
ins
dec
push
cwde
push
jg
mov
mov
lea
(bad)
inc
and
xchg
je
dec
mov
pop
dec
xor
call
mov
test
(bad)
adc
sub
gs
and
add
fmul
mov
test
out
adc
mov
and
rcl
mul
xor
into
mov
adc
stos
in
mov
add
(bad)
ret
inc
xor
jnp
fisttp
or
xchg
retf
push
mov
pop
mov
shl
lock
mov
icebp
or
loope
in
inc
stc
xchg
xor
dec
pop
cmp
test
add
xchg
jno
(bad)
repz
(bad)
sti
test
or
mov
fsubr
movs
mov
in
leave
xor
and
jne
cmp
adc
add
dec
pusha
xchg
and
pop
cs
jno
push
sub
mov
mov
popa
nop
loope
ror
rol
dec
(bad)
test
push
inc
mov
pop
sub
add
arpl
call
rcl
sbb
mov
mov
mov
lahf
mov
ret
ja
sub
ror
cmc
xchg
out
call
add
inc
sbb
push
js
retf
pop
pop
fs
xor
idiv
dec
jge
push
dec
adc
sbb
loope
repz
cmp
scas
cwde
push
pop
mov
add
sub
jecxz
and
popf
push
shl
in
retf
cs
mov
mov
jns
repnz
int
inc
ins
in
jb
out
and
call
test
shr
sub
mov
cli
jle
out
aad
test
mov
add
imul
sbb
dec
sbb
cdq
test
out
mov
nop
pusha
jnp
hlt
ins
mov
shl
fdiv
cwde
outs
daa
mov
loopne
push
sbb
dec
clc
dec
sbb
xor
jne
push
mov
fs
mov
(bad)
cld
mov
jle
mov
inc
sar
sub
in
dec
lods
mov
stos
add
dec
and
and
jo
fs
test
out
and
pop
inc
test
cmps
dec
add
xchg
rcr
dec
cdq
(bad)
sbb
stos
pop
xchg
adc
movs
daa
or
(bad)
cld
out
into
mov
ret
js
push
mov
add
cmp
mov
retf
xchg
sbb
push
fs
cmp
sub
shl
pusha
leave
inc
popf
dec
pop
cmp
cli
mov
cmp
fcomp
cmp
imul
mov
fmul
xlat
cmp
cmp
das
ror
mov
in
sbb
addr16
push
test
xchg
int3
sti
dec
sbb
cmps
std
(bad)
mov
aam
pop
scas
into
push
push
jae
lds
sbb
ret
fcom
in
(bad)
addr16
cmc
arpl
mov
scas
pop
mov
xchg
pop
and
push
(bad)
push
sub
std
imul
push
inc
mov
inc
mov
ds
outs
inc
lock
scas
mov
pop
(bad)
sbb
scas
jb
push
sub
lahf
(bad)
bound
cmps
fld
or
dec
into
inc
mov
fstp
xlat
test
js
jns
pop
push
mov
pop
push
rol
aam
pop
shr
sub
and
imul
mov
fstp
add
outs
mov
fnstenv
inc
test
daa
in
mov
test
jmp
add
rol
in
idiv
ja
jne
and
imul
or
cs
add
dec
icebp
data16
enter
loope
sub
or
lods
dec
mov
push
xchg
mov
xchg
in
fcmovne
inc
mov
xor
and
push
dec
xchg
add
frndint
and
xchg
icebp
repnz
inc
aam
mov
cmp
clc
pop
jno
scas
int
or
inc
in
repnz
adc
sub
cdq
loop
or
xchg
mov
adc
jne
stos
das
xor
sti
xchg
or
jge
test
movs
dec
fst
cld
mov
mov
adc
rcr
fidiv
fcom
pop
xor
xor
js
outs
fidivr
xchg
inc
cwde
cmp
sbb
add
cmp
xchg
xchg
ja
sbb
sbb
cli
out
ret
les
add
inc
nop
sub
push
test
add
and
call
push
(bad)
std
pop
das
fimul
(bad)
retf
xlat
cmp
scas
inc
call
jmp
fbstp
pop
lds
or
sahf
push
not
jns
xchg
sbb
mov
(bad)
imul
mov
push
pop
js
(bad)
mov
dec
or
js
in
mov
xchg
out
ins
movs
dec
inc
(bad)
fcom
or
lods
jg
push
in
jb
nop
hlt
push
cmp
push
adc
or
sub
push
stc
in
cmp
pop
mov
(bad)
lds
or
adc
jbe
mov
mov
shl
mov
ret
stc
(bad)
push
sbb
sub
cmps
jne
(bad)
movs
mov
and
mov
push
jae
imul
mov
cmp
push
mov
repnz
pop
sub
jo
(bad)
mov
xchg
and
cwde
sub
fidiv
stos
and
xchg
push
dec
adc
(bad)
loopne
mov
test
jae
and
mov
push
ins
push
xor
xchg
pushf
inc
mov
cmp
and
xchg
cmp
lea
movs
imul
push
and
adc
xor
push
jg
lods
cmps
test
cmc
push
push
fadd
pop
hlt
out
je
lahf
loopne
out
imul
xchg
push
pusha
shl
mov
mov
cmc
pop
loopne
lds
sub
sbb
mov
mov
in
repnz
pushf
pop
or
mov
movs
add
jle
and
jp
add
lds
pop
add
push
dec
loope
xchg
dec
ffreep
mov
lahf
inc
mov
or
ret
mov
test
lea
push
pop
ds
test
inc
cmp
(bad)
fild
addr16
cdq
pop
dec
pause
pmullw
mov
fcmovnu
sbb
sbb
enter
jae
in
das
mov
or
call
jne
in
jae
and
jbe
xchg
xlat
mov
and
pop
out
mov
popa
int3
loope
xchg
in
call
xor
mov
xchg
(bad)
aas
push
sub
jb
inc
pop
xchg
icebp
call
dec
imul
lahf
inc
fldenv
cmp
mov
mov
jno
dec
stos
fisubr
sahf
or
cmp
xor
(bad)
jg
mov
out
push
pop
repnz
outs
std
pop
jmp
mov
cld
rcr
out
shl
(bad)
outs
fsub
dec
xor
pop
into
ret
push
cmp
push
cmps
xor
pusha
mov
and
mov
fsubr
lds
push
dec
pop
xchg
cmp
movs
sub
dec
icebp
test
inc
sub
out
jns
enter
fist
rep
test
and
add
fild
gs
fnstenv
clc
js
leave
sbb
nop
jp
cmp
add
xor
xor
pop
add
jp
xor
sub
mov
adc
lea
fsub
popf
cmps
push
push
gs
fsubr
jo
jmp
sub
mul
or
cmp
jp
shr
movs
hlt
retf
jns
xchg
dec
cmp
sbb
in
xchg
pop
mov
inc
stc
sub
std
push
mov
inc
in
pushf
outs
cli
sub
dec
pop
mov
mov
out
(bad)
(bad)
mov
jo
ins
jne
push
cmp
xor
pop
xor
xchg
adc
fisttp
mov
imul
mov
aaa
cmp
sbb
dec
inc
mov
inc
sub
and
and
push
retf
cmc
fsub
aam
bound
mov
call
lea
mov
sub
fidivr
cmps
lahf
stos
out
push
mov
packuswb
cmp
adc
shl
(bad)
rcr
(bad)
call
mov
out
mov
movs
rcl
dec
out
fcom
mov
xchg
sub
fnsave
(bad)
popa
jmp
add
xor
sub
aas
sbb
repnz
int
(bad)
fcmovbe
clc
sbb
pop
sbb
xchg
adc
sub
sub
call
jnp
inc
jnp
stos
or
jne
pop
pop
ficomp
mov
imul
inc
add
adc
jmp
ror
outs
fs
push
inc
xor
add
mov
mov
mov
jl
fstp
out
test
push
aas
sar
cli
or
scas
fnsave
cmp
out
mov
inc
sub
push
sar
adc
inc
ss
pop
inc
push
sub
inc
call
or
scas
pop
jb
out
fistp
into
inc
stc
fdiv
jmp
xchg
and
jnp
xor
inc
jecxz
inc
add
aaa
push
test
sbb
xchg
cmp
adc
scas
sub
loopne
fcom
sbb
mov
scas
lea
and
movlps
sahf
dec
xor
scas
xchg
mov
push
scas
icebp
jne
movs
cmc
and
test
dec
xchg
(bad)
ss
inc
pop
movs
add
jg
pop
rcr
cmp
out
hlt
adc
cmps
int
icebp
mov
sti
sar
fs
movs
loope
pushf
mov
xor
inc
movs
mov
cmc
xchg
outs
das
sbb
mov
push
mul
xchg
pop
dec
xchg
add
push
pushf
sbb
retf
int3
jb
dec
ja
sbb
add
cmp
xor
ins
icebp
push
xchg
sbb
mov
cmc
pop
cwde
imul
or
hlt
mov
in
repnz
sbb
arpl
ss
or
xchg
clc
int3
fadd
in
(bad)
repnz
or
stos
scas
push
mov
cmp
lea
scas
sbb
jbe
fdivr
das
sbb
scas
mov
hlt
nop
mov
pop
sbb
test
in
fstp
fdiv
addr16
mov
mov
sbb
jl
dec
xor
imul
mov
jbe
pop
add
mov
fsub
sbb
pop
mov
in
nop
or
cmc
sbb
push
or
add
mov
aad
je
fimul
test
jbe
mov
gs
mov
pop
xor
sti
les
mov
cmp
dec
daa
(bad)
call
popa
frstor
inc
outs
jb
inc
sbb
push
push
in
push
mov
add
push
pop
repz
cmc
sub
setl
mov
sbb
es
fsub
ret
fidivr
(bad)
out
xchg
and
fiadd
xor
fdivr
sbb
sub
leave
and
inc
mov
push
aaa
mov
pop
iret
(bad)
mov
sub
inc
loop
call
retf
pop
(bad)
fstp
ins
leave
retf
iret
sub
fs
fiadd
xchg
pusha
mov
or
enter
pop
mov
xchg
xor
sub
sub
loop
mov
xlat
lock
mov
jo
pop
sub
in
aad
pop
daa
jle
mov
mov
xor
mov
int3
jmp
int
aad
lea
xlat
cmp
rol
add
cmps
imul
cmp
test
sbb
cdq
les
ret
pop
aad
mov
stc
sbb
and
in
sbb
out
cs
in
cmp
test
jb
mov
pop
jo
das
pop
scas
fidivr
fs
das
add
not
pop
push
lock
xlat
pop
or
(bad)
sbb
add
arpl
out
xchg
sub
cmp
les
push
xchg
pop
mov
das
(bad)
(bad)
inc
mov
or
std
movs
mov
jnp
pop
outs
sbb
enter
lahf
push
xchg
mov
ins
(bad)
mov
shl
movs
enter
pop
inc
loopne
fstp
adc
(bad)
push
es
les
adc
movs
mov
cmp
(bad)
(bad)
jl
das
ret
inc
std
xor
cmp
or
pop
aas
inc
inc
pop
nop
push
adc
dec
movs
jne
fldenv
call
fldenv
or
cld
push
ficom
push
mov
addr16
sbb
push
iret
cwde
bound
adc
mov
adc
cmp
mov
sub
aas
cld
pop
jno
fimul
int3
inc
outs
les
mov
fs
sub
xlat
mov
adc
dec
mov
sub
xor
fs
push
or
jae
shl
je
(bad)
into
addr16
jp
fwait
xchg
jmp
jnp
popf
mov
jmp
enter
retf
and
fisttp
jbe
cmp
aam
scas
fwait
jns
xor
mov
mov
add
iret
xchg
popf
mov
pop
clc
icebp
push
mov
xchg
fwait
cmp
std
xchg
into
shl
mov
jbe
icebp
inc
sub
xchg
(bad)
pop
out
pop
dec
inc
rcr
test
xchg
imul
sub
les
jl
movs
int3
fnstsw
add
fisub
inc
enter
pop
xor
adc
mov
in
aam
(bad)
push
idiv
mov
xchg
dec
mov
cmps
aas
pop
pop
sub
jmp
cmc
or
shr
add
repnz
nop
out
cmp
push
xchg
retf
jne
jne
mov
jg
dec
jl
jecxz
cmp
call
inc
in
loop
push
stos
and
add
fcomi
xchg
pop
push
xor
aaa
mov
cmc
jg
into
imul
mov
fs
stos
or
gs
mov
rol
mov
in
fnstsw
xor
pop
cli
test
mov
(bad)
push
pop
sbb
jae
push
in
adc
retf
js
mov
push
retf
mov
in
sub
and
call
cmp
mov
sub
inc
pusha
jecxz
retf
or
adc
icebp
bound
int
mov
xor
xchg
jns
push
or
mov
cwde
add
sbb
jle
jecxz
mov
std
xlat
hlt
sbb
jbe
dec
test
cmp
pop
pushf
ja
and
push
jo
clc
jecxz
inc
add
mov
mov
loop
dec
xor
push
inc
inc
pop
(bad)
dec
sbb
jle
mov
(bad)
lods
push
cmps
sub
clc
outs
mov
jb
and
push
mov
cmp
sbb
cs
daa
rcr
in
sti
dec
(bad)
dec
mov
xor
popa
out
loop
jmp
test
repz
mov
sub
inc
xchg
cmp
xchg
cmp
bound
push
and
inc
sbb
mov
dec
mov
pop
stos
sub
retf
fsubr
mov
cld
out
into
fisubr
test
aad
sar
fild
mov
shl
repnz
ror
push
jnp
mov
scas
and
shl
push
mov
mov
shr
cmp
adc
js
dec
mov
movs
lea
cdq
xchg
imul
pop
jnp
aaa
jne
cmp
test
loope
(bad)
push
in
ss
inc
hlt
test
sub
add
lods
cld
mov
mov
lock
hlt
out
adc
imul
cli
test
cmps
mov
jge
(bad)
aaa
fwait
push
xchg
xchg
mov
sti
imul
mov
cmp
dec
adc
jb
out
add
xchg
cmps
mov
fst
jmp
shl
stos
(bad)
cdq
repnz
mov
lea
xchg
jge
dec
js
add
xor
and
pop
shl
sub
arpl
mov
xchg
jns
sub
adc
mov
cmp
dec
sbb
cwde
push
push
pop
out
hlt
jecxz
mov
cmp
cmp
mov
es
call
mov
fst
mov
stc
inc
hlt
popf
fwait
stc
arpl
aaa
sbb
rcl
cmp
frstor
arpl
fld
or
das
or
adc
inc
popa
int3
xor
or
(bad)
out
arpl
loop
mov
jg
mov
test
jmp
jns
lods
pop
add
or
or
inc
out
ja
(bad)
pop
lahf
mov
les
inc
jmp
push
add
cld
enter
jge
push
aaa
inc
xchg
arpl
pop
or
fs
mov
pop
inc
shr
jns
hlt
dec
addr16
xlat
ss
sub
aas
add
push
(bad)
sbb
pop
jo
adc
dec
rol
mov
inc
movs
fidiv
fiadd
mov
jmp
mov
(bad)
imul
pop
or
push
clc
sub
jns
mov
mov
aad
aam
pop
call
jge
mov
(bad)
lock
mov
sub
mov
cdq
sub
ret
ficomp
aaa
inc
sbb
lods
cs
mov
or
mov
scas
lods
bnd
movs
mov
mov
clc
mov
mov
adc
mov
pushf
jecxz
sar
cmp
and
mov
in
dec
sub
lea
jmp
stos
cmp
mov
dec
or
xor
not
pop
call
inc
jp
inc
out
adc
ret
stos
(bad)
jo
add
push
int3
inc
add
push
mov
pop
adc
sbb
js
push
pop
jbe
and
mov
dec
mov
repz
mov
sbb
mov
xor
mov
iret
mov
xchg
inc
daa
mov
scas
xlat
imul
hlt
ficomp
mov
das
mov
mov
dec
inc
mov
pop
popa
mov
push
push
push
push
pushf
pusha
mov
pop
xchg
pop
mov
add
pop
in
nop
xchg
ret
mov
call
loopne
adc
call
sbb
pushf
addr16
cmp
inc
popf
into
dec
mov
ror
jg
imul
mov
cmps
nop
sbb
sbb
inc
pop
dec
xor
inc
or
pop
jg
cli
xchg
fs
sbb
sbb
adc
pop
inc
sar
xor
cmp
fld
and
test
push
mov
add
xchg
or
pusha
stos
sbb
mov
ret
ins
add
push
sahf
scas
ret
iret
mov
into
xor
cli
lods
stos
cmps
sbb
or
and
int
repnz
inc
sub
das
pop
cdq
add
dec
xchg
fld
out
mov
aaa
push
push
clc
icebp
sbb
sub
add
pop
cs
lea
sbb
lds
sub
in
gs
mov
out
in
sub
out
add
loop
xchg
lahf
mov
or
dec
mov
and
dec
fcmovbe
add
sub
add
hlt
push
mov
or
push
cdq
dec
jge
(bad)
sbb
sbb
push
dec
inc
loopne
ins
or
ja
inc
(bad)
pop
cmp
adc
lods
mov
or
push
fnsave
fnstenv
pop
(bad)
push
mov
or
je
add
inc
sub
pop
sbb
nop
aaa
dec
lods
sar
mov
sub
push
add
sbb
sub
call
hlt
shr
out
stos
ins
xor
cli
cli
jle
cmps
(bad)
idiv
cmps
(bad)
xchg
xchg
cmp
fs
stos
jns
out
das
mov
out
pop
sbb
xchg
or
loope
movs
adc
mov
xlat
mov
inc
out
ja
std
jae
xor
imul
push
cmp
mov
outs
mov
lds
in
pop
jne
in
or
out
push
iret
cmp
adc
mov
daa
push
ret
es
push
jb
jne
(bad)
adc
jecxz
xor
fwait
mov
rcr
or
inc
mov
in
xchg
xchg
dec
test
pop
xchg
fadd
mov
inc
ret
jge
add
jp
adc
ret
repz
mov
daa
adc
loopne
in
xchg
dec
sti
mul
ins
retf
jl
sub
dec
jle
xor
xchg
pop
sbb
int
sbb
mul
jb
jmp
pop
push
mov
test
mov
cmps
sbb
add
and
fmul
add
gs
fadd
es
jbe
or
or
cmovbe
mov
cmc
inc
inc
adc
call
dec
mov
adc
inc
rol
loopne
inc
and
xchg
mov
mov
pop
imul
sub
and
sbb
ins
mov
(bad)
icebp
dec
mov
or
jle
adc
movs
ins
or
inc
mov
cmp
(bad)
gs
ja
xchg
and
and
jle
(bad)
and
out
stc
dec
and
jae
pusha
stos
pop
popa
or
sbb
xchg
push
adc
push
icebp
jo
xchg
xchg
test
ror
jge
mov
(bad)
push
inc
add
xchg
sub
and
or
cmp
pop
sub
mov
addr16
imul
loopne
mov
or
(bad)
mov
or
dec
ret
movs
xchg
jmp
pop
(bad)
fdiv
xor
lea
scas
add
div
aad
in
mov
mov
stos
fwait
loop
fisubr
mov
jmp
retw
not
xor
mov
and
enter
inc
imul
xchg
and
ins
inc
lahf
fistp
add
mov
jns
aam
fmul
mov
adc
add
outs
ret
ret
leave
bound
shrd
mov
xchg
out
daa
xor
push
add
add
jp
in
xor
xor
cdq
imul
sub
int3
mov
(bad)
int3
push
stos
mov
mov
(bad)
dec
adc
lahf
add
sub
xor
jmp
jecxz
cmp
ret
jnp
sub
icebp
out
data16
cwde
sahf
in
loop
add
push
(bad)
xchg
aam
or
jae
cmc
addr16
inc
je
fsub
in
int3
lods
sti
xchg
jne
inc
and
call
outs
mov
xchg
push
pushf
rcr
push
fstp
ror
ins
dec
push
stos
jmp
or
ds
stos
call
in
push
mov
lds
jl
imul
out
rcl
jmp
adc
fiadd
int3
xor
mov
iret
mov
call
jg
imul
cmp
fist
add
ss
xor
out
sti
and
pop
mov
jae
cmp
cld
pop
je
jne
jne
out
pop
imul
arpl
push
mov
pop
and
jno
cmps
mov
mov
jo
sbb
jg
fst
pop
pop
shl
push
jno
push
sub
and
jae
test
rol
sbb
nop
es
sub
xor
ja
xchg
imul
cmp
cld
jge
ins
fucomp
pop
cmp
cmp
div
sub
add
jp
arpl
data16
outs
in
mov
fcomp
sbb
shl
jmp
popa
cmovns
into
mov
addr16
sub
fistp
adc
push
jb
adc
mov
int
xchg
inc
jno
ds
sbb
push
fstp
int
psllq
lea
or
inc
add
dec
enter
and
and
test
in
xchg
sbb
aam
cmp
push
jmp
neg
pop
shl
movs
xchg
popf
retf
jg
loop
out
ins
or
stos
xchg
add
in
retf
in
(bad)
inc
loopne
lea
je
xor
xchg
stc
call
push
xor
dec
aas
cs
out
cmps
icebp
fdivr
iret
pop
jmp
ffreep
out
dec
ret
daa
xlat
icebp
dec
dec
test
push
loopne
lea
mov
das
xchg
dec
cmp
or
sbb
dec
jmp
sub
retf
add
arpl
inc
push
in
xlat
in
pop
xchg
and
(bad)
adc
pushf
jb
pop
je
cli
fnstenv
(bad)
mul
adc
into
sub
dec
xor
outs
loope
(bad)
xor
ret
adc
jl
bound
push
jle
and
(bad)
adc
sti
ds
add
movs
sti
or
frstor
push
repz
cmp
out
pop
in
jl
pop
or
inc
dec
iret
cmp
or
sbb
int3
in
cmp
imul
nop
xchg
mov
jne
inc
sub
inc
jae
inc
xchg
enter
push
rcl
jge
rol
xlat
cmp
sub
jno
xchg
(bad)
xchg
sbb
sti
sbb
xchg
jns
rcr
push
sub
in
push
daa
je
aam
pop
push
or
mov
pop
cwde
push
(bad)
and
xchg
scas
xor
outs
ret
cmp
les
add
xor
sbb
mov
sub
and
adc
std
data16
rcr
das
fwait
push
rcl
jae
pop
hlt
popa
xchg
and
mov
shr
xchg
rcr
in
xchg
sbb
push
xor
pop
cmp
fs
sub
add
ds
shl
(bad)
repz
lods
mov
cmc
jmp
cmp
xor
xchg
das
ss
inc
jnp
or
jg
sbb
dec
jg
adc
jno
and
sub
add
or
dec
addr16
inc
push
mov
jnp
pop
(bad)
std
mov
icebp
inc
imul
retf
iret
push
dec
xchg
xchg
(bad)
das
repnz
in
sub
in
int
add
dec
mov
mov
sbb
xor
ins
loop
imul
cmp
push
pop
push
loopne
mov
pop
stos
jg
mov
(bad)
not
xchg
xor
and
ins
lods
hlt
xor
inc
and
cld
test
mov
in
jae
add
add
outs
push
sub
imul
jnp
cdq
test
out
and
icebp
inc
cmps
mov
je
pusha
dec
jae
add
scas
and
loopne
or
daa
dec
adc
imul
js
mov
fistp
rcl
mov
jbe
fidiv
dec
ins
outs
mov
(bad)
das
inc
inc
fldcw
add
or
imul
mov
add
cs
inc
ret
(bad)
int
jno
in
rol
loope
xor
or
nop
popa
cld
xlat
cmp
mov
mov
movs
gs
ja
repz
sub
aaa
mov
in
mov
mov
push
inc
ins
inc
sahf
xchg
or
sahf
out
cwde
cmps
das
pop
xor
data16
mov
es
shr
fcomp
and
and
fpatan
or
in
jne
(bad)
popf
and
out
pop
dec
stos
dec
repnz
gs
leave
push
dec
test
les
sets
adc
jb
aad
sub
lock
cdq
test
mov
mov
(bad)
fidiv
inc
test
push
push
inc
xor
dec
mov
and
ja
repnz
cs
or
push
or
xchg
jl
sub
fwait
lods
jmp
push
into
movs
adc
sar
mov
dec
jl
adc
fcmove
jp
sub
inc
mov
rcr
not
pop
loop
xlat
push
daa
fdiv
or
mov
or
lahf
mov
add
inc
enter
or
xor
sar
push
ja
xor
jns
sub
cmp
cld
mov
jo
xchg
in
data16
lahf
inc
ret
push
fld
(bad)
push
es
xor
imul
inc
jg
cmc
and
jno
jge
mov
cmp
mov
clc
dec
add
rol
test
push
loope
repz
add
adc
lahf
mov
mov
les
cmps
mov
cvtps2pd
mov
out
in
xor
mov
fdiv
mov
and
das
addr16
pop
repnz
es
jmp
imul
clc
jmp
mov
not
shl
xchg
add
sub
ret
pop
mov
push
add
call
push
inc
push
loop
sbb
jmp
mov
scas
pop
jne
dec
fmulp
push
mov
or
or
stos
jge
retf
sbb
js
add
dec
fsub
jb
and
push
outs
in
mov
ds
and
in
cmp
or
retf
pop
daa
jmp
pop
adc
sbb
or
test
pop
mov
fisub
test
jmp
xchg
out
cmps
mov
call
or
in
dec
in
enter
cmp
repz
inc
js
aam
int3
imul
add
addr16
fdiv
jnp
lahf
and
popa
lods
push
sub
test
push
scas
popf
hlt
leave
sub
in
and
or
je
push
and
inc
mov
inc
pop
fisubr
and
loopne
adc
mov
sbb
movs
dec
repz
dec
ja
or
mov
rol
call
loope
sti
pop
fs
out
mov
push
sti
adc
push
test
mov
jecxz
cmp
lea
not
adc
pop
jmp
xchg
sub
inc
addr16
push
dec
sbb
sub
inc
inc
fs
mov
iret
dec
lea
(bad)
mov
cmp
(bad)
mov
cwde
sti
sub
push
or
ins
into
and
scas
mov
sbb
addr16
idiv
push
cmp
or
cmps
mov
cld
mov
int3
push
and
adc
sar
pop
lea
nop
js
xchg
retf
(bad)
push
ins
xchg
push
cmp
retf
cmps
ss
xchg
push
xchg
ds
cmp
(bad)
push
push
je
js
cwde
jnp
popa
fcmovbe
jb
outs
stos
ins
push
outs
jl
mov
out
out
xchg
push
mov
add
nop
cmps
pop
mov
fwait
inc
or
sub
pop
xchg
dec
jle
jecxz
(bad)
outs
sar
jmp
(bad)
jno
fdivr
push
in
jno
ficomp
push
dec
push
and
xchg
int
pop
inc
loopne
xchg
nop
mov
fdivr
add
sbb
enter
mov
sbb
outs
xchg
test
or
cwde
cwde
sbb
inc
cmps
mov
mov
ins
cmp
hlt
lock
jmp
push
jo
push
or
dec
fwait
sbb
add
shr
cmc
pop
sbb
(bad)
aam
cmp
sbb
adc
stos
pusha
jbe
retf
xor
cmp
mov
and
lods
or
cmp
inc
js
sub
ret
aaa
push
push
idiv
ds
inc
lds
push
inc
pop
or
jmp
xchg
add
stc
jo
xor
mov
add
mov
jecxz
jo
(bad)
loope
shl
hlt
pusha
inc
push
xchg
and
gs
out
cmp
je
adc
xor
cmp
arpl
adc
add
out
in
not
aad
pop
loope
mov
movs
inc
ins
pusha
(bad)
mov
pop
sbb
xchg
pop
xchg
pop
fld
cmp
xchg
mov
jge
push
xchg
in
cld
imul
cmp
mov
adc
inc
imul
adc
pop
(bad)
fstp
dec
xor
xor
mov
pop
std
xor
or
jns
pop
ret
sub
inc
test
out
jecxz
add
in
sbb
dec
lods
push
cli
test
mov
iret
fild
mov
inc
arpl
inc
call
mov
hlt
xlat
sbb
mov
retf
out
or
jmp
add
mov
fadd
call
in
dec
mov
cdq
cmp
cmp
pop
mov
jbe
add
ret
cmp
sub
in
xchg
rol
ins
push
mov
add
cmps
push
leave
mov
das
pop
sub
pushf
fs
cmp
push
push
mov
pop
sub
imul
neg
fwait
sbb
loopne
mov
cli
js
into
int3
js
mov
fist
ds
jne
mov
je
fcom
pop
and
and
mov
xchg
mov
clc
(bad)
mov
add
(bad)
sub
std
ror
jle
xor
stos
or
mov
dec
or
cmp
addr16
mov
cdq
aam
in
add
xchg
xchg
fisubr
cmp
fst
outs
and
dec
js
xchg
test
test
xchg
shl
cmp
mov
push
push
jg
pop
xor
dec
xchg
stos
dec
jl
add
scas
je
mov
test
inc
test
push
les
fs
xchg
sar
addr16
cli
jne
inc
jno
scas
pop
push
xor
add
test
add
xchg
jmp
dec
ret
es
add
add
mov
call
mov
out
jg
or
cmp
xchg
jge
push
cmps
mov
scas
mov
mov
sub
into
cli
mov
fs
not
and
call
aas
xchg
bound
ret
mov
mov
mov
cmp
add
pop
(bad)
je
jmp
cmp
dec
fild
cmp
xor
push
or
and
mov
loop
lods
jl
sbb
push
cmp
mov
into
call
mov
cmp
jg
fwait
inc
inc
outs
lods
ror
dec
add
mov
pusha
popf
xor
push
pop
in
jp
aad
xlat
mov
call
xor
mov
mov
in
push
stc
add
scas
pop
pop
mov
(bad)
push
div
in
xchg
push
cmps
adc
adc
pop
xlat
cmps
(bad)
repz
push
inc
repnz
enter
push
lods
jl
sbb
pop
add
cdq
mov
sbb
or
push
inc
inc
sbb
popf
pop
jbe
or
loope
int
dec
jnp
xor
pop
xor
jb
test
pop
adc
xchg
xchg
cmc
sar
jl
rol
fisubr
mov
pop
jae
int
mov
pop
getsec
fcmovnb
lods
pushf
cmp
rcr
or
(bad)
aam
lea
pop
fst
jecxz
cmc
push
jecxz
cmc
inc
int
dec
pop
dec
fstp
out
(bad)
scas
lods
sbb
push
shl
dec
or
sbb
dec
scas
(bad)
xchg
iret
push
ds
xor
mov
jge
jbe
xor
js
cld
cmp
xchg
outs
or
mov
cmps
loopne
mov
outs
pop
scas
jge
cmps
leave
pop
xor
pusha
add
ins
cmps
retf
jo
lahf
push
call
fadd
in
push
mov
mov
and
test
inc
mov
pop
mov
mov
aaa
mov
retf
fwait
push
jmp
push
adc
inc
mov
adc
in
sbb
cwde
rol
pusha
xchg
gs
hlt
xor
xor
xor
dec
sahf
cmp
add
div
jg
mov
mov
in
loope
rol
or
(bad)
jo
je
out
sub
(bad)
push
push
pop
push
inc
sub
(bad)
jmp
(bad)
shl
sub
fnsave
out
aas
adc
(bad)
mov
push
fsub
dec
jns
stos
lds
jmp
inc
xor
cmc
or
and
push
iret
rcpps
lock
in
arpl
aas
xor
clc
push
in
pusha
xchg
and
arpl
mov
fst
repz
shl
xchg
cmps
ror
scas
test
(bad)
(bad)
clc
pop
outs
dec
out
ss
mov
test
std
xlat
pop
mov
das
imul
mov
inc
sahf
fbstp
xchg
lods
jmp
outs
mov
pop
push
jmp
xchg
test
pop
sub
ficom
retf
das
lea
xchg
loope
jp
int
js
xchg
and
fbld
stos
shl
mov
pop
popf
or
mov
std
ja
shl
pushf
dec
cmp
rol
adc
fild
inc
pop
mov
push
scas
gs
sub
or
clc
cwde
inc
(bad)
inc
popf
jle
sbb
push
jno
add
mov
mov
loop
jmp
jne
dec
pusha
xchg
add
inc
pop
jbe
out
jl
adc
test
and
ss
push
fxch
dec
es
sub
add
jecxz
inc
push
inc
xchg
cmp
inc
dec
cmc
and
mov
adc
in
lds
jmp
mov
xchg
xor
sbb
push
sub
jns
lahf
jo
jmp
lock
add
mov
lock
ficomp
lea
cmp
xchg
cmp
jo
cmp
mov
xchg
fwait
pop
imul
mov
scas
dec
dec
les
push
outs
fs
mov
out
aaa
push
sub
js
or
mov
xor
je
add
in
sahf
lock
out
test
xor
call
mov
shufps
cwde
nop
sub
movs
aam
test
add
inc
push
aad
or
inc
jae
fld
imul
ins
repz
sub
pop
scas
shl
xchg
bound
ins
fmul
cs
idiv
sbb
inc
jne
jns
push
stos
inc
lods
(bad)
mov
xor
scas
mov
jnp
cmp
std
mov
rcl
inc
ss
jp
mov
je
cmc
jb
cdq
xchg
cmc
(bad)
mov
fld
adc
xchg
pusha
add
mov
ins
push
into
inc
cmc
popa
daa
in
in
xor
push
ficomp
inc
fild
and
lahf
sbb
ds
dec
jae
dec
or
aam
in
movs
mov
xor
cmp
push
fist
pop
setns
ins
arpl
jns
repz
inc
aaa
das
sub
dec
pop
and
or
push
inc
retf
mov
enter
jae
ja
mov
sbb
sub
in
and
rcl
dec
mov
sub
sub
popf
iret
call
xchg
sub
in
(bad)
sti
ins
pusha
les
inc
shrd
push
sub
aaa
sbb
jns
jmp
or
pop
mov
or
sub
add
aad
popf
ret
cmps
lods
mov
scas
add
pop
pop
mov
das
dec
add
mov
and
push
ins
inc
lock
loope
ins
push
imul
push
add
xor
outs
test
enter
mov
adc
xchg
ror
cmp
scas
loope
scas
(bad)
cmp
cdq
or
add
sar
shr
cmps
push
jno
mov
xchg
outs
addr16
jge
xchg
jne
ror
rcr
mov
pop
outs
rol
jecxz
inc
mov
das
data16
xchg
loope
push
adc
dec
iret
and
mov
inc
dec
test
xor
out
sbb
or
dec
xchg
rcr
into
arpl
inc
(bad)
sub
scas
(bad)
sbb
ret
in
enter
xor
pop
or
cdq
mov
adc
leave
xchg
fimul
sub
ins
sti
jg
sbb
repz
shr
xor
or
jg
xchg
jle
xor
pop
cmp
js
mov
daa
daa
movs
add
in
fstp
setae
lock
lds
int3
or
rcl
inc
mov
out
iret
mov
push
dec
(bad)
jbe
in
pop
push
fs
xchg
cmp
xchg
addr16
push
jae
pop
pop
in
sbb
xor
lods
ds
jmp
push
cmp
pop
and
scas
fistp
sar
iret
push
mov
jns
jmp
imul
sub
inc
fdivr
xor
daa
push
fidivr
es
fidiv
push
(bad)
jo
cmp
dec
or
add
lods
test
test
loopne
jbe
in
repz
push
enter
dec
or
es
repnz
dec
mov
mov
call
std
add
out
pop
mov
jae
rol
mov
push
iret
outs
or
adc
push
lock
jl
or
mov
pop
sub
jl
call
sbb
add
jb
mov
sbb
mov
pop
pop
jns
jecxz
stos
inc
mov
or
cs
push
add
mov
dec
push
xor
fcomp
jecxz
rcl
sbb
loopne
sbb
(bad)
(bad)
jecxz
xchg
inc
sbb
sbb
sub
mov
xchg
outs
je
movs
jmp
std
cli
loop
push
xor
jmp
imul
lds
inc
shl
int3
lods
adc
enter
inc
clc
test
rcr
xchg
xor
mov
fmul
in
repz
sub
out
test
mov
mov
rcr
test
and
dec
outs
mov
(bad)
je
xchg
aaa
xor
inc
or
mov
mov
aam
ins
addr16
or
int
mov
mov
inc
into
in
xor
std
mov
adc
push
adc
push
mov
push
mov
xor
out
mov
mov
aam
jecxz
stc
mov
dec
sbb
adc
xor
cwde
xchg
cli
movs
add
inc
test
(bad)
js
clc
mov
jbe
stc
fwait
dec
(bad)
(bad)
mov
sub
mov
int
jl
mov
sub
or
xlat
popa
test
jg
and
les
add
es
mov
in
inc
mov
test
pop
jns
mov
sub
adc
and
out
ds
neg
loopne
xchg
sub
sbb
or
push
mov
shr
pop
stos
pop
xchg
iret
lds
inc
iretw
jns
imul
xor
and
es
or
ret
push
jnp
ins
xor
push
inc
xor
xor
in
imul
fcmove
mov
pop
jnp
jecxz
dec
test
loope
pop
sti
cmp
fs
adc
das
nop
push
loope
jp
outs
cwde
sar
add
jecxz
sbb
not
inc
add
add
and
sahf
mov
and
pop
sbb
call
or
jmp
ret
daa
pop
dec
popf
ss
imul
sar
jnp
xor
sub
mov
inc
push
sbb
mov
popa
bound
mov
lds
sub
jmp
dec
sub
add
mov
and
scas
and
scas
cmp
fdivr
enter
push
fnsave
and
outs
lods
push
(bad)
cmp
pop
jge
mov
clc
(bad)
(bad)
and
push
call
or
pop
mov
jne
div
shl
and
push
int
sub
repz
jo
mov
arpl
cmp
jecxz
adc
sub
sbb
(bad)
or
or
dec
mov
nop
mov
push
sub
xchg
inc
push
rcl
and
sub
add
in
cmovne
in
jl
mov
dec
or
add
jl
add
or
cmp
clc
mov
and
xchg
or
gs
jmp
add
sbb
and
jno
rcl
call
jbe
dec
inc
mov
daa
aas
loop
add
or
mov
jmp
out
pop
dec
inc
sub
push
mov
cmp
(bad)
cli
test
rol
lock
(bad)
push
rcl
mov
or
dec
cmp
imul
jmp
fnstenv
jge
mov
aaa
sub
in
out
sbb
out
xor
cmp
enter
call
jnp
dec
dec
(bad)
shr
pop
jno
gs
jnp
imul
loop
in
movs
xchg
call
jns
int3
mov
icebp
add
aaa
leave
pop
mov
push
popf
cmps
leave
jmp
into
mov
out
and
push
std
lea
mov
pop
lods
sbb
mov
mov
mov
push
mov
ja
cdq
(bad)
adc
push
mov
dec
inc
add
push
xchg
js
fld
mov
mov
push
pand
int
cld
push
retf
push
mov
xor
mov
popa
cmp
xchg
ret
inc
(bad)
hlt
jae
imul
push
push
push
adc
or
test
lds
or
xor
dec
adc
ins
sub
enter
ins
and
adc
push
or
sahf
cld
jae
lahf
call
test
(bad)
in
xor
call
fisub
inc
inc
es
add
mov
jecxz
mov
mov
out
cs
mov
push
lods
dec
adc
jmp
movs
xlat
and
aad
aam
inc
dec
dec
sti
pusha
ficom
cmp
or
inc
shl
pop
fxch
adc
mov
mov
mov
and
push
cwde
or
xchg
jg
xor
aaa
pop
imul
out
xor
or
lea
jle
sub
mov
out
mov
jp
xor
popa
shl
cmp
adc
(bad)
xor
cdq
clc
shl
call
add
ja
pop
nop
cmp
nop
sbb
mov
cmp
dec
neg
loop
or
ficom
mov
lods
ret
jae
ins
inc
adc
inc
lods
mov
cmp
add
(bad)
mov
ja
xor
lahf
stos
jno
jnp
mov
cmc
jge
xchg
dec
mov
movs
push
push
adc
cli
add
int3
inc
push
add
dec
pop
add
xchg
lods
or
or
cli
clc
adc
pop
imul
sbb
mov
aam
mov
stos
ror
sbb
jmp
add
sti
in
or
xlat
cmc
mov
scas
sahf
dec
cdq
shl
aad
mov
ja
icebp
mov
test
mov
mov
inc
mov
jle
and
test
dec
inc
ins
jns
fcmove
mov
xor
mov
popa
or
and
inc
adc
sbb
or
xor
cwde
add
es
in
gs
mov
scas
out
mov
add
test
add
outs
pop
cmp
ja
push
std
add
ret
popf
and
and
ret
add
add
(bad)
and
out
mov
adc
das
fcmove
aad
mov
sbb
enter
mov
mov
xor
leave
pop
xchg
mov
push
sub
sti
mov
mov
add
enter
jne
dec
jge
push
adc
cmp
pop
daa
js
lock
mov
test
cmp
ins
mov
sbb
xor
adc
fs
xchg
pop
sbb
xlat
into
sub
push
retf
jg
imul
aaa
add
in
dec
and
js
pop
xchg
rcl
stc
clc
scas
aas
ins
out
jbe
push
fidivr
out
es
adc
bound
adc
adc
cs
repnz
fnstenv
bnd
mov
imul
xchg
lods
not
repnz
iret
dec
movs
imul
out
into
in
mov
es
sub
retf
les
cmp
push
dec
jmp
or
push
adc
call
jl
addr16
fisub
jge
(bad)
xchg
cmp
push
sub
mov
xchg
fs
mov
in
jmp
adc
mov
cmp
enter
cmovs
pop
mov
pop
cmp
mov
push
mov
jmp
lahf
sub
sub
in
ret
inc
sbb
xlat
or
retf
enter
repz
inc
in
in
or
call
stc
rol
xor
out
(bad)
clc
bound
jle
xor
ret
or
retf
jge
imul
jno
sar
pop
nop
xor
ss
jmp
scas
mov
add
call
ins
sub
cdq
adc
mov
out
jle
jl
mov
pop
and
push
(bad)
cmps
les
adc
pop
mov
inc
inc
jnp
out
or
clc
rcl
aaa
jecxz
mov
jge
popf
ret
and
test
es
sbb
ss
ror
fcmovu
inc
sbb
push
jmp
ss
(bad)
cmps
push
sbb
push
mov
adc
inc
fadd
rcl
add
cmp
xor
in
fnstenv
sbb
setl
jmp
push
mov
scas
call
jb
aam
jmp
dec
mov
les
je
dec
fisttp
jns
inc
sti
pop
or
les
mov
mov
jb
enter
data16
fidiv
jns
push
jmp
cmp
cld
sbb
jp
sub
push
into
cmc
scas
rcl
call
call
(bad)
fwait
or
sub
lock
sbb
aas
add
jno
es
das
ins
jmp
into
(bad)
shl
aam
pop
mov
in
or
mov
outs
fst
bound
jle
cdq
(bad)
idiv
push
inc
sbb
adc
dec
jno
ror
jo
add
mov
mov
movs
cmp
arpl
rcr
jle
pop
jle
jo
rol
and
jno
cmps
out
xor
cmps
jle
push
adc
push
fadd
push
mov
jl
(bad)
pusha
cmps
ret
js
push
div
mov
push
ins
scas
pop
and
lfs
je
xor
test
push
pop
loopne
push
jge
xor
pop
jbe
sbb
std
push
mov
cli
sub
stc
cli
(bad)
sbb
leave
push
xor
dec
jo
add
hlt
or
xor
sbb
in
mov
sbb
loop
jl
cwde
xor
rol
sub
xchg
mov
adc
inc
aas
mov
fsubr
xchg
int3
mov
in
or
dec
lahf
or
jo
test
mov
(bad)
sub
cmp
adc
outs
shr
(bad)
iret
dec
lahf
out
imul
push
and
stos
daa
mov
(bad)
(bad)
adc
ret
(bad)
dec
push
stos
sub
hlt
pop
pop
outs
jl
cmp
cwde
mov
push
adc
pop
fcom
popa
or
data16
and
push
push
xor
jno
sti
js
inc
or
mov
xchg
or
mov
cmp
sub
sti
mov
les
mov
mov
xlat
ret
jnp
shl
cwde
into
sub
inc
dec
in
add
xchg
pop
mov
mov
shl
inc
inc
xor
inc
rol
call
cmp
popa
clc
data16
dec
jno
dec
test
mov
call
pop
jo
dec
fmul
out
int
ins
cs
cmp
xchg
movs
lds
sub
lods
add
mov
scas
xor
adc
lods
adc
popf
je
and
(bad)
aad
mov
add
hlt
xchg
lock
sbb
stos
push
push
(bad)
dec
inc
aad
lea
add
out
scas
xchg
ins
and
(bad)
push
dec
mov
(bad)
out
ror
sti
adc
retf
shl
repnz
cdq
test
cmps
lods
repnz
retf
das
and
imul
mov
in
sbb
fs
mov
dec
sub
mov
sbb
loopne
frstor
mov
xchg
js
sub
pop
sub
dec
sbb
sti
sahf
fist
retf
pop
ret
add
inc
lea
adc
mov
test
and
data16
mov
dec
in
hlt
daa
pop
dec
sbb
inc
adc
inc
fdiv
xlat
inc
out
pushf
add
inc
das
es
dec
inc
pop
neg
dec
lsl
(bad)
(bad)
mul
xchg
jb
out
inc
mov
sbb
cmp
jne
and
cmp
das
adc
mov
sub
repnz
daa
and
inc
push
hlt
ror
ficomp
inc
mov
adc
nop
and
or
dec
jecxz
loope
ds
stos
mov
fstp
stos
mov
shl
out
inc
clc
pop
lock
(bad)
addr16
and
call
xor
or
repz
xor
jne
sbb
sub
popf
frstor
xchg
loop
cmp
fcmovnb
and
jp
mov
add
jle
push
ficom
push
xchg
adc
adc
les
popa
popa
aaa
add
jmp
mov
adc
inc
fs
mov
mov
sbb
test
sbb
sub
mov
cmp
cdq
mov
mov
mov
js
(bad)
gs
mov
xor
gs
sahf
ds
lahf
rcl
mov
cmp
lods
rcl
cmp
sbb
pop
jle
push
repz
mov
sahf
loop
mov
dec
mov
aaa
add
ud0
pushf
dec
sub
xlat
lahf
retf
add
imul
dec
pusha
and
xlat
arpl
clc
pop
in
or
test
lods
adc
inc
cld
cld
dec
sub
cmps
sub
rcl
add
sub
hlt
sub
imul
mov
adc
jge
popf
jle
xchg
mov
js
mov
lds
dec
xor
pop
shr
(bad)
xchg
push
mov
sti
je
sar
ret
inc
adc
xchg
and
lea
aad
inc
adc
pop
cmps
lahf
scas
cmp
sub
fdiv
into
cld
mov
push
xor
or
and
jp
jl
sbb
mov
sbb
addr16
sub
adc
mov
inc
add
imul
ja
push
add
inc
(bad)
or
outs
stc
dec
sub
push
push
loopne
or
imul
shl
aaa
inc
mov
(bad)
mov
shr
lods
stos
gs
jns
das
gs
scas
adc
cld
add
add
xchg
adc
stos
test
inc
lods
push
pop
loop
inc
xchg
stos
movs
fcom
push
jb
sbb
addr16
fwait
push
jmp
sbb
hlt
pop
dec
adc
xor
and
icebp
xchg
adc
cwde
mov
mov
add
fcmovnb
push
jge
ja
add
dec
mov
fstp
xchg
ins
out
push
mov
jo
cmp
leave
xchg
add
in
jge
pusha
cmp
retf
pop
push
ja
xchg
ins
enter
xchg
or
push
cld
pop
inc
sar
pop
scas
jno
cs
add
sbb
movs
pop
jg
out
sub
popa
sti
mov
leave
jge
xor
dec
jmp
ret
adc
mov
add
pushf
or
and
mov
push
shr
push
cmp
sbb
adc
aaa
repnz
push
int
jmp
pop
dec
cmp
out
xor
xchg
cwde
or
(bad)
mov
ret
fwait
in
xchg
mov
mov
fmul
fisubr
jg
nop
sub
rcr
pop
or
repz
sub
inc
xchg
mov
mov
adc
add
cmp
adc
push
nop
ds
push
mov
cli
cli
xchg
sbb
shl
pop
mov
in
ds
repnz
in
pop
lds
sbb
add
push
inc
add
cmp
dec
jp
cmp
xchg
push
xchg
pop
fs
arpl
sar
retf
adc
cs
xor
cli
(bad)
movs
mov
rcl
adc
stc
jae
leave
lods
(bad)
std
sti
fisttp
inc
xor
repz
or
mov
jb
cmp
lock
and
mov
push
ret
mov
mov
mov
pop
dec
mov
add
and
cli
mov
aam
stos
inc
xchg
ins
sbb
clc
jmp
push
and
push
pcmpgtd
aas
sbb
mov
sbb
lods
lea
in
xchg
cwde
movs
mov
sahf
and
cmc
xor
(bad)
movs
(bad)
scas
int
mov
(bad)
mov
jo
cld
test
scas
push
ss
mov
lea
xor
lds
fidivr
sub
loop
popf
pop
cli
int3
add
in
enter
aam
cmps
add
push
nop
(bad)
inc
pop
scas
test
adc
int3
inc
mov
push
inc
pusha
pop
imul
and
adc
mov
push
pop
mov
xchg
in
mov
sahf
sbb
xor
add
and
jnp
test
shr
ret
dec
mov
pop
cdq
pop
ficom
ja
xchg
pushf
scas
sahf
test
xor
lds
sbb
mov
jno
cmps
fdiv
cwde
inc
ja
stc
mov
test
or
mov
mov
in
imul
mov
cwde
mov
jns
push
call
test
xchg
sahf
and
(bad)
jno
cmps
loop
repz
mov
ret
hlt
xchg
pushf
in
push
lds
xor
les
pop
ror
icebp
mov
cmp
dec
dec
pop
jb
push
daa
bound
adc
outs
mov
call
pushf
ja
stc
jg
cmps
xor
xor
jns
pop
adc
and
mov
mov
inc
mov
mov
rcr
inc
mov
das
jnp
cli
mov
dec
into
sub
jge
jecxz
pop
fcmovnbe
loop
dec
dec
mov
outs
dec
das
loopne
xchg
or
xchg
jp
fbstp
imul
imul
jl
jmp
sbb
mov
push
and
dec
sbb
sub
or
mov
xchg
inc
aas
jmp
adc
int
shl
adc
cmp
repz
add
pop
cmps
into
xchg
jnp
mul
test
rol
das
lods
mov
adc
xchg
shl
lea
inc
jmp
dec
inc
add
sbb
cmp
lahf
out
pop
jl
fs
push
mov
(bad)
cmc
test
pop
scas
and
mov
outs
mov
sbb
push
pslld
sub
leave
pusha
sub
inc
enter
push
imul
add
shl
adc
les
scas
hlt
outs
inc
mov
mov
push
not
or
push
mov
lods
pop
outs
mov
sahf
jle
imul
lea
cwde
iret
(bad)
enter
mov
mov
dec
jmp
in
hlt
mov
cli
adc
dec
mov
jo
fld
xlat
fcmovbe
sbb
jg
pop
inc
loop
cmp
scas
mov
jge
push
stos
sar
shr
fcom
mov
mov
lods
sti
xchg
and
push
jp
cmp
rcr
cmp
mov
mov
scas
mov
not
icebp
dec
cmps
dec
push
(bad)
xchg
pop
dec
or
test
jno
stc
mov
sub
and
retf
addr16
mov
aad
jb
and
arpl
ror
mov
outs
add
int3
adc
mov
dec
(bad)
(bad)
mov
ins
xor
imul
mov
cmp
pop
and
imul
je
mov
or
xlat
add
mov
rol
cs
out
xchg
stos
out
mov
xchg
adc
mov
rol
or
pop
jmp
xor
inc
fild
jecxz
movs
(bad)
sub
push
mov
sbb
xor
or
aaa
divps
xor
aaa
test
out
aad
inc
cmp
mov
movs
cmc
out
xchg
pop
les
stos
pusha
sub
push
push
leave
adc
outs
cs
push
cld
jmp
push
nop
stos
fstp
xor
mov
dec
adc
dec
push
je
xchg
xchg
push
push
hlt
and
add
repnz
adc
sahf
lods
out
scas
xchg
ror
lods
adc
sub
out
clc
add
dec
adc
retf
nop
jl
mov
outs
stos
gs
call
adc
jbe
cli
ds
inc
push
retf
(bad)
cmc
lods
stos
jno
mov
and
jnp
(bad)
jg
xor
and
cmp
shl
enter
jo
call
nop
lock
jb
sub
or
cmp
call
push
mov
std
adc
lock
inc
add
es
push
mov
mov
leave
sbb
pop
test
xchg
add
jne
div
cmp
mov
loop
cmp
nop
aas
fs
inc
std
add
mov
mov
dec
mul
dec
mov
jbe
or
out
sub
xor
call
xchg
jecxz
push
out
out
add
pop
repz
int
inc
rol
jae
jae
sbb
lods
(bad)
enter
jmp
test
pop
rcr
pusha
cmps
scas
fcomip
movs
sub
fnstenv
add
in
or
mov
push
mov
cmp
add
out
sar
in
cmp
xchg
cmp
jb
stos
xor
adc
scas
push
cs
repz
or
in
sti
dec
jp
sbb
push
jne
rcr
es
les
xchg
add
shl
and
repnz
clc
push
addr16
dec
jns
(bad)
xchg
and
push
push
xchg
sti
pop
xor
fwait
stos
scas
out
push
fild
jp
and
mov
xchg
cmps
mov
mov
jecxz
sar
cs
cmp
(bad)
sahf
ret
inc
lea
into
nop
je
sbb
sahf
in
or
jno
js
adc
or
xor
cs
cli
adc
or
data16
and
inc
fbstp
pusha
xchg
bound
je
and
fs
scas
mov
dec
sbb
adc
or
inc
push
into
add
push
fisubr
lds
test
bound
loopne
and
adc
add
adc
jb
push
daa
xor
mov
jmp
out
fcmovne
div
jnp
adc
pop
jmp
mov
pusha
mov
jmp
mov
inc
retf
add
and
clc
cmp
pop
add
xchg
movs
inc
or
ss
iret
mov
ret
bound
mov
mov
jge
loopne
mov
mov
lock
jno
adc
std
or
mov
stos
dec
aaa
ror
pop
scas
jns
mov
lahf
push
enter
mov
nop
mov
inc
jle
aas
adc
pop
popf
and
add
xchg
xchg
pushf
jae
sub
cmp
push
leave
xor
pop
int3
shl
sbb
aam
xchg
movs
stos
pop
sbb
dec
adc
push
push
ins
out
in
cmp
ds
xchg
in
or
fsubr
jecxz
(bad)
pop
pop
loop
call
ds
(bad)
mov
jno
and
js
push
dec
pop
xor
dec
movs
mov
or
fdiv
out
or
rol
es
std
xchg
mov
xlat
sub
push
mov
dec
jo
test
dec
add
ficomp
movs
push
xchg
in
mov
fdiv
cmps
jecxz
ss
xor
repz
ds
mov
sub
cwde
mov
stos
cdq
out
cmp
mov
push
push
xchg
push
in
cmp
mov
cmps
cli
std
inc
loope
lock
movs
and
into
push
adc
inc
mov
mov
adc
dec
int3
movs
fadd
scas
xchg
(bad)
jmp
gs
jmp
adc
sub
inc
push
test
jno
loope
pushf
test
rcl
mov
pop
leave
pop
xor
add
mov
(bad)
nop
xchg
stc
and
push
xchg
fist
dec
in
mov
push
repz
mov
ret
mov
adc
or
ror
mul
mov
mul
cwde
fwait
ss
dec
xchg
lods
adc
push
imul
and
test
xor
and
ret
adc
in
sub
cli
repnz
pop
ror
dec
sbb
push
cmp
mov
nop
or
push
push
(bad)
jmp
imul
dec
into
xchg
inc
inc
mov
pop
mov
shr
sbb
repz
pop
push
int
das
fst
movs
fstp
dec
mov
inc
add
or
lea
sti
cs
push
stos
(bad)
lock
scas
shl
(bad)
jge
inc
mov
jbe
adc
xlat
enter
outs
ja
mov
jae
(bad)
aaa
cld
lods
mov
fisttp
ret
ret
and
call
call
dec
addr16
cmp
adc
ins
scas
(bad)
dec
sub
jb
pop
jns
test
(bad)
xor
repnz
stos
nop
cmps
into
mov
test
cs
jns
es
call
cdq
pop
mov
mov
and
mov
push
sbb
int
sbb
xchg
sti
add
pop
push
pop
adc
sbb
jae
stc
sti
mov
lock
movs
outs
fsubr
lods
aas
stos
pop
jo
stos
push
or
sub
or
mov
sub
icebp
and
jmp
jo
dec
mov
(bad)
jnp
movs
sub
loopne
jp
jnp
(bad)
out
sahf
xchg
sub
in
cmc
jg
nop
push
xor
push
sti
jbe
sar
out
mov
xor
cmps
xchg
daa
cmp
outs
and
out
push
fidiv
(bad)
outs
or
inc
adc
push
jns
daa
xchg
xlat
mov
xor
pop
xor
fcmovb
inc
fld
loopne
imul
loop
es
and
shr
push
pop
or
push
jmp
sbb
es
cmp
mov
out
out
push
icebp
mov
or
pop
fcmovb
imul
test
das
pop
sbb
lods
(bad)
adc
cmps
adc
mov
int
pop
add
(bad)
mov
aaa
dec
or
mov
mov
fdiv
mov
(bad)
push
ja
mov
mov
or
xor
xchg
aad
jmp
add
retf
rol
cmps
cmp
rcl
or
mov
or
jmp
fimul
retf
movs
dec
xchg
dec
jns
jge
cmp
retf
repnz
idiv
ss
and
outs
sub
and
and
fsub
jbe
pop
scas
(bad)
push
cld
stos
mov
fadd
shl
ds
fwait
and
xor
test
jbe
xor
pop
es
ds
stos
pushf
dec
dec
mov
adc
mov
dec
xor
por
(bad)
movs
sub
push
les
iret
dec
test
mov
(bad)
call
sqrtps
push
stos
jnp
jo
xchg
int3
jl
gs
stos
sbb
imul
xchg
adc
add
rcr
(bad)
fsubr
inc
xchg
jnp
loope
add
loop
cs
or
and
and
add
inc
dec
push
and
or
in
push
repnz
or
pop
push
dec
sbb
jae
cmc
push
fxch
inc
hlt
sbb
jo
dec
mov
jmp
sub
mov
arpl
bound
cmp
pop
xchg
push
inc
cmp
hlt
xchg
sub
mov
inc
sbb
cmp
xchg
mov
ds
pop
dec
stos
pop
xchg
nop
fs
(bad)
lock
adc
mov
push
stos
mov
jmp
push
int3
add
das
lods
imul
inc
jle
push
loope
cmc
add
pushf
jno
mov
ins
imul
mov
jns
jg
sub
jno
bound
stc
mov
dec
mov
mov
out
lahf
add
jo
and
inc
in
cmps
dec
shl
or
retf
and
cmp
fdivr
mov
ja
and
mov
fld
fmul
in
loope
ret
xor
and
xchg
in
xchg
cmc
fist
or
pusha
and
lds
pusha
mov
retf
and
(bad)
(bad)
aas
add
sbb
adc
mov
mov
mov
sub
mov
cmp
arpl
mov
mov
and
jp
call
cmp
gs
adc
dec
enter
fcomp
or
cmps
or
jle
(bad)
dec
sbb
adc
pop
cmps
outs
jns
push
(bad)
daa
xchg
nop
mov
fdivr
call
cdq
xlat
iret
adc
stos
jg
loope
or
sti
jmp
jns
mov
(bad)
adc
mov
xor
mov
or
sub
and
mov
push
sub
arpl
xor
call
mov
mov
push
in
and
dec
pop
fidivr
dec
sti
gs
adc
pusha
jge
sbb
scas
aas
adc
adc
call
rol
loopne
xor
movs
sub
repz
ficom
xchg
inc
daa
mov
ins
stos
xchg
test
push
imul
lods
out
sub
retf
push
jle
adc
add
adc
dec
xchg
ds
retf
mov
dec
in
push
jmp
push
cmp
ret
mov
dec
aam
aaa
lods
aam
mov
and
fadd
ja
mov
sbb
jge
out
pop
dec
das
mov
(bad)
push
inc
arpl
add
fs
shr
mov
add
adc
xchg
mov
data16
cdq
push
mov
test
(bad)
pop
js
pusha
enter
mov
data16
sahf
jo
xchg
or
aam
jg
jns
jns
adc
fisttp
call
ret
daa
add
pop
stc
xchg
lea
fadd
mov
out
imul
push
scas
aad
pushf
ffree
or
jns
fisttp
in
jne
and
xacquire
xchg
cli
out
leave
pushw
loope
aad
adc
and
mov
xchg
adc
pop
adc
js
jns
mov
ins
stos
jge
jmp
neg
mov
fst
scas
pop
xlat
jl
(bad)
jp
pop
gs
dec
cs
es
loopne
xchg
test
dec
lea
cli
pop
sbb
enter
loope
clc
push
sbb
add
and
dec
jge
popf
jge
icebp
leavew
mov
cmp
gs
mov
scas
fisubr
and
fs
das
cwde
loop
mov
or
les
retf
loop
popa
lahf
test
loopne
jp
and
(bad)
jl
sub
movs
mov
fidivr
jo
pushfw
je
dec
lods
rcl
mov
lods
movs
or
pop
dec
or
out
mov
dec
sub
jl
mov
lock
mov
jnp
mov
mov
fwait
call
fisttp
or
cmp
and
js
out
cmp
sbb
leave
mov
or
cmp
mov
dec
ret
mov
loop
pushf
fisubr
stc
push
push
add
cmps
jo
pop
push
test
pop
int
nop
je
aam
add
fst
cmc
jns
and
jmp
lods
bound
xchg
inc
cmp
inc
outs
adc
adc
cmp
outs
ret
int3
add
mov
inc
retf
lock
add
lods
xor
arpl
iret
out
ins
cmp
or
mov
gs
ficomp
cmp
jno
mov
xor
adc
lock
mov
(bad)
xchg
mov
adc
add
sub
test
sub
push
push
js
and
mov
ss
sar
and
test
and
pop
xor
imul
test
mov
add
pop
iret
mov
or
stos
jne
lea
fxch
add
imul
sub
and
add
jmp
mov
sar
adc
leave
mov
xor
mov
dec
cld
(bad)
jmp
jae
stos
js
fisub
xchg
mov
mov
mov
mul
mov
in
adc
fst
bound
jge
out
imul
dec
pushf
pop
sub
or
jl
fcmove
dec
pop
daa
jl
xor
stos
xchg
bound
mov
mov
xchg
cld
enter
in
repnz
jecxz
rol
inc
xor
ja
push
out
mov
push
rcr
mov
pop
aad
pusha
jnp
addr16
mov
call
cdq
jnp
pusha
mov
and
(bad)
mov
jnp
push
adc
sbb
out
daa
xchg
data16
repz
repnz
je
push
jb
in
push
pop
add
add
retf
sbb
iret
aaa
or
xor
sar
mov
pop
fsub
mov
or
dec
fisttp
sub
lea
jnp
test
movs
leave
aam
retf
xor
and
jmp
and
mov
movs
stc
mov
xlat
mov
fmul
mov
cmp
adc
stc
inc
les
js
hlt
iret
aam
pop
push
int
mov
repnz
cld
repnz
adc
sbb
js
lahf
icebp
inc
push
stos
lds
mov
jle
xor
lods
xchg
xchg
hlt
push
lods
inc
xchg
jg
scas
stc
add
mov
std
les
xor
leave
out
add
out
loop
adc
aaa
and
jne
sbb
fcmovnbe
cwde
cld
mov
movups
add
data16
jne
test
jmp
(bad)
jmp
scas
xor
imul
pop
pop
retf
jmp
lahf
ss
ret
adc
inc
jp
and
xor
xchg
ds
dec
ret
fistp
mov
addr16
cs
jo
es
mov
mov
inc
mov
mov
pop
mov
(bad)
cmp
jo
fisubr
jecxz
inc
xor
hlt
add
imul
pop
aaa
(bad)
dec
push
adc
(bad)
dec
mov
(bad)
mov
int3
sub
pop
and
adc
cmps
dec
jle
ins
mov
daa
cmps
cwde
push
cwde
test
push
rol
push
pop
retf
mov
jae
or
and
xor
dec
aas
fwait
js
pop
in
mov
aam
jp
jge
mov
mov
lods
in
lods
xchg
cwde
or
imul
jae
jmp
sbb
or
mul
pop
daa
arpl
aas
xor
push
imul
dec
dec
mov
sti
push
shr
fs
cmp
mul
add
mov
stos
lds
jbe
push
ins
jg
cmc
jns
(bad)
xchg
jg
lea
ins
sbb
jmp
pop
daa
lahf
fidivr
dec
cmp
stos
dec
mov
call
loop
jecxz
jge
cmp
push
add
inc
cmc
jmp
xor
int
push
clc
push
icebp
add
and
test
inc
push
jmp
push
mov
pusha
rol
lds
cli
inc
inc
adc
fistp
ins
mov
lahf
push
movs
push
das
push
pop
pop
jge
or
mov
inc
and
push
cmc
mov
sub
out
push
mov
cli
mov
inc
pop
retf
mov
jo
mov
mov
add
test
mov
mov
jbe
jb
push
inc
jg
pop
repnz
add
or
shl
push
out
movs
mov
mov
call
push
es
jmp
push
add
jbe
cmc
scas
add
xchg
jecxz
cwde
inc
push
aas
pop
mov
ret
in
ja
adc
popa
outs
call
and
ret
mov
sub
or
(bad)
and
fnstenv
jae
inc
jno
xchg
push
(bad)
mov
inc
cli
inc
movs
adc
sub
fld
push
push
repz
iret
int3
lods
jo
aas
mov
sub
inc
je
jmp
pop
mov
cdq
arpl
dec
sbb
dec
fisub
in
dec
cwde
(bad)
arpl
(bad)
and
xor
jp
cmp
retf
cmps
repnz
shr
lods
sub
loop
out
xchg
cmp
jnp
icebp
test
mov
cmp
cld
jns
and
push
cmp
test
mov
or
or
lds
fstp
js
pop
icebp
mov
mov
out
in
jne
push
pop
mov
sbb
push
mov
jo
fs
clc
push
fsubr
sbb
push
rcr
push
inc
leave
cmp
and
pop
cmp
mov
or
pop
mov
fs
ins
ds
and
xor
rcr
ins
mov
xchg
xor
jmp
cmp
clc
lahf
idiv
inc
inc
ss
pusha
inc
add
gs
add
xor
or
sbb
rol
scas
movs
leave
pop
(bad)
lods
add
xchg
push
hlt
mov
xor
popf
fidivr
or
cmp
push
fst
loop
lods
push
mov
xor
xchg
and
jl
pop
mov
ss
mov
(bad)
aad
fisttp
sub
mov
ficom
xor
shr
daa
dec
mov
(bad)
repnz
cmc
or
stos
jecxz
xor
or
sbb
jne
mov
enter
mov
mov
repz
push
jno
(bad)
movs
push
les
aaa
sub
out
int3
xchg
jl
mov
sub
push
test
pop
ja
iret
mov
fild
lahf
jecxz
sub
cmp
std
in
fadd
sub
cmps
xor
loop
jns
movs
cmps
in
enter
xor
mov
les
sbb
adc
push
scas
or
inc
arpl
fwait
mov
inc
xchg
and
dec
test
mov
cmc
test
pop
xor
xchg
outs
mov
xchg
xor
fistp
dec
int
pusha
lock
adc
adc
inc
loope
shl
shr
stos
lea
adc
aad
and
sbb
fcom
sub
hlt
xchg
pop
mov
popa
add
call
enter
xor
call
outs
in
jo
(bad)
or
ins
jbe
pop
mov
xlat
mov
mov
mov
adc
lods
loope
imul
push
bound
pop
jp
mov
imul
outs
mov
xor
cmp
retf
mov
inc
push
jmp
mov
jns
sub
jnp
mov
and
repnz
addr16
popf
mov
out
cwde
loop
xor
pop
mov
sub
icebp
enter
mov
mov
lds
je
into
jecxz
push
outs
test
mov
aam
pop
push
sub
movs
loope
test
cmc
aam
xor
(bad)
into
in
xchg
push
push
add
xchg
and
test
dec
nop
push
sbb
(bad)
mov
clc
push
dec
sub
xchg
push
fisttp
aad
jbe
and
pop
and
int3
inc
lea
in
int3
dec
shr
xchg
jmp
movs
mov
or
test
xor
inc
sbb
push
push
cmp
arpl
popf
pop
xor
mov
pop
ror
sbb
adc
xchg
mov
dec
loop
jno
xchg
sbb
(bad)
sti
mov
sub
dec
add
cmp
aam
imul
adc
or
loop
xchg
add
inc
(bad)
mov
jle
pop
push
cmp
pop
pop
mov
lock
adc
lock
mov
xor
dec
push
inc
xchg
adc
dec
in
push
fwait
cmp
mov
pop
push
sar
hlt
pop
mov
fwait
rsm
adc
sub
lods
mov
jo
loopne
bound
repz
xor
jb
jecxz
mov
jnp
jae
clc
or
mov
or
jne
mov
dec
xor
jo
cmp
jp
mov
xor
mov
gs
push
pop
push
aad
adc
mov
push
bound
sbb
dec
xchg
sbb
and
or
ret
ss
lods
adc
clc
fcmovnb
in
cmp
dec
clc
rcr
add
pop
js
mov
mov
or
mov
add
jo
jb
and
inc
xor
lea
ror
clc
mov
(bad)
int3
sub
jp
push
sbb
mov
sub
xchg
push
(bad)
and
adc
std
inc
cwde
out
scas
sbb
js
lahf
sbb
test
icebp
jecxz
das
ins
je
iret
jo
in
outs
cmps
jecxz
jns
mov
push
pusha
mov
inc
lods
sbb
out
scas
sub
sbb
inc
and
mov
fcomp
cmp
fmulp
jge
sub
inc
add
mov
adc
in
lds
adc
dec
test
retf
(bad)
lahf
push
mov
cmps
data16
push
leave
xchg
addr16
jae
ror
fnsave
enter
dec
fnstcw
sub
xchg
jmp
inc
jg
jl
hlt
js
repz
adc
ins
pop
(bad)
nop
cmps
js
and
sbb
pusha
ins
adc
(bad)
sti
push
stos
outs
mov
(bad)
lock
sub
jmp
xchg
mov
mov
mov
sbb
(bad)
or
(bad)
fsubrp
mov
retf
mov
repnz
jge
xchg
xor
popf
jl
stos
das
adc
xor
mov
inc
sbb
mov
ret
jmp
mov
inc
out
stos
mul
pusha
std
pop
jp
add
push
cmp
in
rcr
inc
lods
(bad)
outs
out
jno
icebp
pop
jmp
adc
xchg
mov
cmp
cli
jle
mov
dec
or
cmps
(bad)
stc
push
ins
shl
push
jno
sub
push
cmps
test
push
inc
int
leave
dec
xchg
test
mov
call
cdq
or
clc
call
adc
call
mov
and
push
xchg
adc
and
mov
ins
shl
rcl
iret
jbe
cdq
pop
mov
xchg
xor
push
cmp
or
pop
jge
call
jnp
int3
xchg
in
lahf
mov
repnz
and
ret
cmps
rol
xchg
cmp
popf
xchg
pushf
push
push
mov
xchg
cs
push
jp
daa
add
or
fnstsw
xchg
jnp
(bad)
xchg
cmp
inc
push
lock
fst
stos
add
pop
jnp
adc
sbb
cmp
adc
arpl
push
sub
mov
ins
mov
idiv
add
sub
outs
out
cs
xchg
inc
scas
xor
int3
(bad)
sub
mov
stos
cmp
dec
mov
pop
sahf
int
jl
outs
jno
mov
and
dec
dec
mov
jmp
cmp
lock
xor
add
jg
in
enter
xor
test
(bad)
dec
into
dec
int3
ret
stc
sbb
jge
mov
call
mov
out
cli
int
mov
gs
mov
and
jle
lods
xlat
ss
jg
sar
std
cmp
mov
sbb
jle
push
ins
sub
sbb
inc
inc
push
icebp
ror
and
sbb
out
pushf
inc
mov
mov
movs
and
pop
das
inc
cmp
ds
stos
pop
push
iret
dec
push
push
in
sbb
(bad)
leave
and
pop
xor
mov
rcr
sub
adc
fdivr
test
cmp
xor
xchg
jg
pop
out
into
into
out
inc
sbb
std
popa
pop
mov
sbb
js
mov
sub
pop
retf
jbe
pop
cmp
stc
retf
rcr
push
sbb
and
dec
jmp
cmp
jmp
cmp
jo
lods
cmc
fnstsw
jp
xchg
in
dec
sbb
xchg
adc
das
cwde
dec
xchg
inc
aas
jecxz
fmul
movs
inc
movs
cmp
cs
mov
mov
loope
add
mov
scas
leave
adc
mov
inc
jle
scas
nop
movs
jne
inc
xor
les
xchg
dec
idiv
dec
cdq
push
xor
pop
mov
fwait
hlt
cwde
sbb
xor
xor
imul
xchg
jmp
stc
adc
stos
test
cmps
xor
add
fidiv
fcmovnu
lahf
sti
cmp
repnz
xchg
sbb
xlat
pop
scas
or
mov
jb
jnp
cmp
cmp
dec
or
jb
mov
inc
(bad)
mov
pop
(bad)
adc
xor
fs
sub
mov
inc
mov
cmp
and
jp
paddusw
xchg
loop
int3
sub
js
inc
inc
ins
repnz
cmp
retf
sahf
data16
aad
in
stos
cmp
adc
(bad)
fwait
dec
rol
or
mov
dec
hlt
int3
push
and
in
cli
jg
xor
(bad)
add
aaa
push
inc
mov
nop
sub
js
sub
or
mov
frstpm(287
aam
loopne
es
cmp
inc
push
pusha
mov
cmps
xlat
out
loope
pushf
ja
xchg
xchg
push
movs
pop
bound
jmp
and
pop
mov
adc
das
sub
lods
mov
mov
mov
mov
test
jp
sbb
(bad)
jmp
xlat
cmp
and
rcr
imul
int
push
xchg
cmp
ins
adc
and
mov
clc
or
jmp
fadd
pop
push
movs
push
mov
cmp
and
jae
retf
xor
inc
and
push
and
in
shl
push
push
scas
pop
jae
mov
cmps
ret
in
popa
test
cld
pop
jmp
adc
and
inc
pop
adc
sub
pusha
dec
jmp
mov
js
sub
inc
mov
jl
stc
das
aam
pusha
jmp
lahf
inc
add
push
leave
lods
or
retf
push
ja
push
jo
sar
xchg
(bad)
cli
jo
jo
out
adc
lods
sbb
(bad)
lds
mov
gs
mul
imul
repnz
xor
cmp
sbb
ret
mov
ret
in
mov
arpl
jns
xchg
xor
xchg
xchg
mov
inc
push
fcmovne
std
lea
push
leave
pop
jo
fld
mov
push
mov
lock
pop
fisttp
loop
and
jb
mov
in
mov
xchg
jp
jno
inc
and
div
mov
dec
enter
and
cmp
push
movs
xor
jmp
sub
jnp
jg
xor
stos
push
sti
scas
mov
push
xor
icebp
dec
jno
repnz
sti
push
hlt
nop
icebp
push
nop
jge
mov
ret
movs
mov
inc
add
lods
pop
mov
js
das
lea
and
and
imul
enter
mov
loop
sub
pop
pop
sahf
mov
sub
or
mov
mov
or
mov
pop
jns
cmps
dec
xor
das
je
repnz
xchg
out
jnp
mov
dec
addr16
mov
stos
mov
adc
aas
shl
out
out
stos
adc
xchg
retf
idiv
je
inc
pop
pop
sti
adc
pop
gs
test
call
jbe
sbb
push
mov
mov
inc
inc
imul
adc
jge
inc
add
inc
loope
xor
xchg
dec
mov
imul
or
sbb
pop
inc
(bad)
mov
push
pop
jnp
rol
(bad)
repz
add
sti
fs
loopne
clc
bound
loop
int3
loop
loop
mov
fcmove
sub
push
or
and
mov
xor
pop
imul
aam
aas
mov
cmps
add
xchg
mov
or
stos
push
adc
rcr
mov
aas
sbb
jle
mov
loope
mov
fwait
clc
fcom
jmp
mov
adc
jne
xchg
std
fdivr
nop
mov
jl
rcl
js
adc
ja
jle
dec
jnp
add
adc
cwde
add
push
nop
shl
push
add
sbb
jns
jne
mov
cmp
jl
or
icebp
ss
mov
xchg
(bad)
outs
sbb
arpl
movsx
jbe
(bad)
fiadd
mov
mov
xchg
xchg
je
aas
dec
cmps
pop
scas
cmps
sti
ror
sbb
adc
dec
mov
enter
scas
jecxz
sbb
xchg
xchg
cdq
gs
repz
pop
dec
out
repz
jecxz
fld
xor
scas
mov
fbld
adc
icebp
(bad)
xor
(bad)
(bad)
pop
test
test
mov
imul
mov
addr16
movs
icebp
push
repnz
popf
push
jg
cli
pushf
hlt
jle
inc
xchg
bound
add
mov
xchg
popa
out
dec
js
test
cdq
pop
test
cmc
sub
pop
push
lea
xor
leave
xor
lock
mov
fcomp
cmp
xchg
add
cmp
das
or
int
cmps
jo
cdq
shr
(bad)
jb
imul
sub
mov
dec
dec
pop
mov
pushf
ja
sub
mov
jns
push
fst
leave
or
test
data16
and
jecxz
movs
sti
add
rcl
adc
leave
jl
sub
jae
push
jge
inc
div
xchg
test
sub
cmp
jmp
repnz
mov
nop
aaa
imul
adc
push
rcr
inc
push
shr
mul
add
sub
xchg
jae
fld
aad
xchg
test
popa
add
pop
mov
outs
xor
push
add
inc
inc
mov
cmps
cs
push
pop
adc
mov
popa
sbb
loop
int3
cmp
pop
push
out
mov
ins
push
dec
gs
and
push
adc
bound
dec
aad
ret
leave
test
cld
mov
inc
and
sar
or
cvtdq2ps
xchg
outs
fst
pop
jg
mov
repz
and
jp
jns
mov
add
ja
push
sbb
dec
sub
push
cmp
jle
popa
shr
push
dec
cmps
ret
retf
imul
mov
lods
pop
push
push
adc
les
outs
in
inc
cmp
into
mov
rcr
or
xor
jecxz
xor
xchg
add
(bad)
sub
sbb
mov
mov
xchg
mov
dec
adc
sbb
ret
pop
push
and
(bad)
xchg
arpl
cmp
sub
mov
and
shr
sar
out
mov
xchg
push
push
and
inc
iret
cdq
mov
mov
push
mov
push
popa
das
inc
push
xchg
int
loopne
pop
in
aaa
pop
sbb
test
ss
cmp
sti
es
scas
dec
pop
dec
dec
mov
and
test
es
shl
popa
stos
adc
dec
xchg
push
in
test
out
test
fsub
scas
cli
stos
cmp
pop
and
and
call
mov
ret
outs
xcrypt-cfb
cmps
loope
sub
sub
cmp
lahf
or
ss
mov
aas
cwde
stos
jne
cli
ja
mov
add
and
repnz
inc
mov
jne
sahf
dec
xchg
mov
cmps
sbb
jg
dec
adc
out
(bad)
cmp
loopne
rcl
adc
cld
dec
jg
xor
sbb
inc
loopne
mov
adc
test
fwait
ins
neg
push
mov
nop
(bad)
inc
popa
out
out
xchg
push
dec
or
add
inc
dec
(bad)
adc
(bad)
shl
fld
(bad)
into
mov
rcr
lods
or
and
cmps
lods
pop
ja
enter
push
xor
xchg
es
aaa
sub
ja
push
fcom
sub
mov
hlt
mov
sahf
jae
data16
rcr
arpl
push
add
mov
lds
shr
mov
loop
out
enter
jge
div
sub
cdq
jb
pop
cmps
adc
fild
mov
xchg
xor
addr16
adc
iret
lds
dec
adc
stos
cmp
test
push
push
cmp
xor
or
lds
stc
pop
pushf
mov
jnp
pop
ss
les
cmps
xor
ins
and
sti
cli
repz
dec
ret
dec
add
movs
jne
sahf
data16
jne
leave
sub
pop
xchg
adc
cmp
sbb
jl
mov
or
repnz
cmp
aad
mov
mov
push
push
push
call
fcmovnb
xchg
sub
(bad)
pop
add
ins
test
dec
add
xchg
xor
leave
add
xchg
pop
sub
jl
xchg
(bad)
mov
xchg
xchg
pop
out
xchg
sub
jo
dec
dec
out
push
aaa
and
xor
daa
out
xchg
adc
stos
sub
jecxz
jb
sbb
dec
cmp
imul
or
mov
fsubr
sbb
std
xchg
cdq
outs
push
sbb
or
inc
push
aad
or
cwde
fdiv
adc
and
stos
fwait
sar
cmp
in
bnd
bound
loopne
pop
dec
imul
xor
je
test
sbb
adc
jo
sub
rol
dec
xor
xor
xor
in
xor
adc
bound
shl
das
fcmovbe
push
scas
add
mov
and
out
std
cmp
mov
lods
out
cmc
pop
ins
bound
fs
imul
mov
add
es
sub
pusha
xor
(bad)
push
add
mov
dec
fwait
int3
cmc
call
sar
in
jecxz
imul
in
lods
test
xchg
adc
inc
loopne
(bad)
mov
push
ficom
xor
pusha
jle
push
call
outs
test
test
hlt
and
jb
pop
mov
mov
push
bound
fisub
xor
enter
push
push
or
pop
or
sub
popf
fsubr
xchg
retf
push
int
sub
cmp
mov
ins
(bad)
push
into
push
mov
pop
sbb
xlat
mov
jns
icebp
mov
or
sub
mov
and
push
and
inc
jns
xchg
xchg
sti
stos
and
(bad)
retf
xchg
lods
sub
jle
mov
in
xchg
mov
cmp
jl
inc
cdq
pop
sbb
sbb
(bad)
pop
jo
movs
into
in
je
out
(bad)
mov
gs
repnz
jecxz
cdq
popf
mov
into
adc
fs
mov
mov
xchg
cmp
lahf
sbb
jg
retf
pop
mov
dec
jbe
pop
mov
call
jne
out
pop
stc
ret
adc
and
movs
mov
sbb
push
push
xchg
outs
jo
inc
das
in
dec
js
mov
into
outs
shr
push
jb
push
pop
sti
add
shr
gs
dec
sbb
out
add
int3
pusha
ret
sbb
push
mov
enter
jge
adc
pop
inc
loop
mov
fcom
popf
fstp
into
or
int
adc
call
aam
or
and
and
adc
call
ja
push
icebp
mov
sub
xor
out
je
dec
test
cli
sbb
pop
movs
xchg
push
push
jno
rcl
sbb
cmp
adc
gs
int3
xor
mov
aad
into
mov
fs
or
mov
jg
sub
sbb
repnz
int
ret
ror
jge
sub
outs
adc
out
mov
inc
mov
sub
popf
inc
pop
aas
popa
repnz
inc
pusha
out
lss
repz
dec
jg
fs
xchg
lock
mov
dec
jbe
mov
adc
lds
inc
pop
(bad)
adc
and
daa
mov
sbb
pop
stc
out
push
sub
jnp
call
xor
aam
push
fisttp
pop
fucomip
or
jle
mov
lods
cli
shl
adc
mov
lea
lods
fldln2
aad
or
inc
(bad)
or
pop
sub
movq
movs
mov
adc
cmp
cmp
cmp
jae
push
loop
inc
lock
mov
or
sbb
int
or
es
test
inc
pop
xor
fwait
xchg
test
mov
cmps
inc
movq
sbb
adc
bound
inc
ins
test
and
or
mov
nop
daa
sbb
call
mov
or
or
clc
adc
and
mov
add
and
pop
dec
test
mov
adc
pop
(bad)
mov
mov
pop
stc
sub
fcomp
fcom
mov
cli
push
adc
sbb
mov
push
cmp
leave
pop
loopne
nop
xor
mov
retf
fbld
or
mov
mov
cmp
(bad)
fwait
mov
hlt
cmp
or
pop
cli
push
cmp
outs
add
adc
inc
add
cmp
enter
sbb
push
adc
mov
nop
cmp
retf
lea
mov
arpl
popa
sub
loopne
jle
pop
lods
cmp
repz
mov
je
out
aas
sbb
cwde
push
les
mov
jno
cmps
movs
data16
cs
mov
ficomp
dec
and
jmp
jle
and
push
enter
sbb
neg
pop
jbe
inc
mov
dec
or
mov
outs
stos
jae
aas
and
xchg
cmps
mov
loope
popf
xor
xor
mov
adc
mov
xchg
(bad)
js
jo
inc
adc
test
movs
mov
pop
mov
inc
mov
sub
retf
mov
mov
cs
int3
aaa
jl
movs
xchg
clc
mov
pop
jo
mov
ja
cmp
jo
js
call
xchg
mov
out
xor
push
xchg
ret
xor
(bad)
sti
dec
stos
sbb
hlt
cli
push
mov
jle
or
pop
xor
mov
call
cmp
xchg
popf
mov
push
push
sbb
sbb
fsubr
ss
xor
dec
lods
mov
retf
mov
fwait
hlt
mov
cmps
es
add
cmp
xchg
aaa
jnp
outs
iret
ins
inc
pop
fiadd
arpl
lea
cdq
cld
dec
(bad)
push
(bad)
test
and
outs
cmc
mov
and
sti
dec
mov
ds
sub
(bad)
pusha
push
jmp
inc
dec
mov
xor
cmc
and
xchg
addr16
jae
test
ja
pop
sub
ins
jg
test
test
out
inc
mov
in
std
sbb
repnz
add
jb
pushf
xchg
rcl
cmps
add
test
test
push
and
call
mov
in
xor
or
cld
call
stos
adc
aas
cld
or
mov
xchg
and
or
repz
inc
in
cmp
jb
loop
mov
jmp
imul
test
aam
inc
dec
push
daa
pop
push
ror
ins
iret
scas
fsub
je
push
stos
pop
repz
scas
or
or
xchg
pusha
jle
test
ret
jmp
(bad)
adc
pop
cmps
lods
clc
push
mov
pop
(bad)
out
push
repnz
imul
sbb
popa
test
sahf
cmp
sbb
push
mov
movs
jns
cli
or
cdq
fadd
ror
jge
nop
jno
das
daa
imul
shl
add
adc
loopne
test
push
mov
bound
mov
push
inc
and
sbb
movs
sbb
movs
mov
fcmove
mov
xor
jmp
not
in
test
cwde
inc
jae
(bad)
cmp
lahf
dec
pop
ds
test
mov
jne
les
add
pop
sub
push
aad
xor
pushf
jbe
les
pop
xchg
or
push
das
ja
mov
mov
adc
xchg
jp
sub
mov
xchg
mov
add
into
rol
xchg
daa
aam
sub
outs
js
push
leave
stos
sub
mov
pop
pop
sbb
push
(bad)
xor
jns
dec
shl
xchg
outs
sbb
jno
dec
sbb
into
shl
dec
mov
ficomp
clc
xchg
xchg
mov
xor
adc
repnz
retf
add
test
ja
add
xchg
shl
jnp
inc
and
mov
mov
js
in
in
dec
adc
ds
mov
cmp
xor
pop
inc
push
and
and
stos
out
xchg
dec
sar
sub
das
std
xor
jnp
xor
in
mov
mov
jp
adc
add
lock
test
or
cmp
mov
mov
ins
xchg
pop
test
inc
or
ins
out
(bad)
daa
(bad)
out
test
data16
lahf
icebp
sub
es
outs
cmps
push
cwde
imul
mov
test
inc
or
sbb
pop
or
jmp
clc
nop
cmps
arpl
mov
push
xor
data16
(bad)
mov
mov
mov
mov
sub
xchg
stc
lds
ins
dec
xlat
lods
mov
mov
rol
aam
push
jge
clc
jns
pushf
in
xchg
aas
xlat
sub
jle
and
sbb
cmp
dec
lds
retf
imul
mov
mov
fcom
jns
or
push
popa
xlat
not
pop
out
sbb
jmp
xchg
jns
push
int3
neg
xchg
popa
movs
pop
xor
dec
repnz
inc
dec
pop
pop
sbb
push
mov
add
outs
les
push
sahf
xor
rcr
nop
enter
mov
sub
ret
jg
rol
dec
(bad)
in
iret
movs
cmp
jae
repz
inc
cmp
loopne
mov
mov
lea
out
cmp
mov
pop
push
mov
nop
mov
aas
push
retf
ja
imul
test
ja
sub
mov
sti
mov
add
dec
es
mov
cmp
pushf
mov
xor
mov
fidivr
and
das
aas
pop
cmp
pop
dec
push
dec
adc
sub
repnz
test
std
in
xlat
ss
stos
popa
mov
cwde
gs
lea
out
cli
add
cmp
fdiv
scas
and
mov
mov
(bad)
jg
cld
mov
mov
cmp
dec
imul
xor
push
sbb
jge
sbb
pop
in
popa
jbe
sbb
mov
push
jl
mov
adc
lods
inc
and
in
and
ficom
fwait
sar
inc
mov
lock
dec
loope
mov
inc
sbb
lods
mov
loope
(bad)
sub
mov
sbb
lods
mov
sub
dec
pop
scas
jp
add
or
inc
xchg
scas
cmp
retf
push
cmps
cmp
cmps
(bad)
dec
iret
or
sbb
add
inc
cmovl
int3
movsx
icebp
mov
xchg
loopne
mov
stos
inc
jmp
xchg
arpl
loopne
inc
popa
in
mov
push
or
add
loop
push
mov
ror
sti
xchg
sub
scas
pop
mov
xlat
mov
outs
scas
sbb
sbb
ds
sbb
mov
cmps
fisttp
mov
outs
out
xchg
jne
mov
push
mov
adc
in
push
shr
retf
adc
ficom
fimul
pop
jmp
popa
sbb
mov
pop
fstp
pop
lahf
fild
div
iret
push
fnstcw
jge
xchg
(bad)
cld
mov
loope
mov
jae
sbb
jg
push
cmc
ja
test
fld
push
icebp
mov
mov
or
sbb
pop
xlat
sub
std
jecxz
pop
stos
scas
mov
xor
xchg
jo
stos
repnz
xor
ret
cmp
(bad)
pop
les
retf
mov
and
xchg
sub
mov
sbb
jmp
pop
push
(bad)
xchg
out
pop
push
mov
cmps
movs
retf
mov
xchg
push
jo
add
or
and
dec
cmp
xchg
xchg
call
cmps
nop
jae
shl
mov
dec
aam
mov
cld
jnp
adc
jno
std
jg
cmp
inc
mov
mov
sub
mov
push
outs
mov
test
cli
scas
out
pusha
mov
or
mov
push
xor
mov
inc
jmp
mov
sbb
mov
push
les
sbb
xlat
js
pop
iret
shl
xchg
sbb
int3
iret
cmp
mov
out
imul
sbb
and
arpl
push
dec
mov
sbb
inc
cmps
mov
sbb
sub
ret
(bad)
movs
xor
mov
xchg
(bad)
xor
lods
pop
in
pusha
push
pop
fnstcw
mov
mov
pushf
sub
gs
xrelease
sbb
add
xor
or
vpshufd
test
sahf
xchg
outs
and
pusha
dec
cmps
and
loop
es
mov
jnp
push
ins
out
push
ss
mov
sbb
shl
mov
pusha
dec
stc
mov
shl
sub
imul
rcr
mov
pop
dec
sub
mov
std
push
sahf
pop
xchg
or
js
or
sahf
sbb
leave
mov
sbb
addr16
and
or
sbb
add
repnz
push
mov
fidiv
out
(bad)
and
iret
cdq
push
(bad)
xor
dec
adc
adc
pop
call
and
jge
ins
pop
dec
call
test
sub
xor
jo
xor
fwait
xor
leave
ret
jmp
sbb
mov
repnz
rcl
xchg
mov
sub
pop
inc
inc
pop
js
mov
ret
hlt
jmp
std
xor
out
push
adc
add
enter
(bad)
push
or
dec
and
in
mov
cmps
or
jmp
loop
repz
ret
dec
cmp
fbld
mov
mov
push
repz
fwait
arpl
stos
add
mov
loopne
mov
cmp
popa
mov
adc
xchg
cmps
dec
xor
add
or
cdq
add
xchg
fbstp
int
or
sub
jo
mov
cmps
imul
xor
mov
aaa
pop
or
outs
or
xor
outs
sbb
lock
jbe
sahf
mov
popa
bnd
rcr
popf
dec
xchg
out
test
push
mov
aam
inc
call
cmp
std
xor
pop
mov
sbb
adc
jb
in
add
loope
int
mov
xchg
xor
inc
xor
out
cmps
adc
lds
nop
ins
or
pop
adc
pop
fst
pop
jns
addr16
jmp
fwait
sub
nop
mov
aam
(bad)
pop
out
fidivr
jne
test
fbstp
mov
xor
div
int3
neg
stos
lds
pop
frstor
mov
(bad)
(bad)
cmp
jmp
xor
and
aaa
push
mov
mov
or
xor
fcom
movs
repz
mov
movs
mov
fnstcw
adc
push
cmc
getsec
ret
and
push
push
pop
(bad)
jl
add
jmp
imul
dec
in
adc
mov
and
sub
iret
fsubr
popa
mov
popf
xchg
push
ja
aam
xor
retf
xchg
test
movs
cmp
test
push
pop
or
cwde
mov
in
add
pop
dec
test
(bad)
jg
ffree
gs
jmp
add
xchg
pop
xor
cmp
push
out
in
call
lds
dec
adc
push
out
test
sub
pushf
pop
cs
lods
jae
sbb
dec
jecxz
std
xor
xor
test
and
pop
fwait
pop
cmps
jbe
xor
dec
mov
jbe
repnz
in
repnz
pop
push
dec
xor
mov
or
aas
clc
sbb
fiadd
inc
adc
jge
iret
cmp
push
xor
push
popa
push
add
cmps
ret
jl
mov
pop
cmp
ds
mov
xchg
push
jp
test
dec
out
es
jle
mov
xor
jmp
push
aam
in
mov
xchg
sbb
dec
out
jno
push
rol
call
adc
repnz
pop
loopne
cmps
mov
or
pop
iret
fcomp
sub
imul
loope
xchg
sbb
inc
mov
and
or
xor
nop
sbb
cmp
out
mov
sub
jno
cwde
mov
aas
popa
imul
inc
jmp
dec
xor
dec
inc
sub
add
xchg
xchg
or
mov
mov
jb
ins
sahf
push
add
or
addr16
ffreep
inc
mov
xlat
fcmove
adc
repnz
or
xchg
scas
inc
loope
ja
inc
sub
inc
dec
cs
sub
jmp
xor
dec
aas
push
das
dec
retf
dec
inc
sahf
loope
stc
jle
pop
fadd
xor
mov
xchg
lods
lock
rol
jmp
int
repz
int3
cdq
add
adc
lock
pop
jg
jo
xchg
fstp
mov
cmc
jmp
jmp
icebp
cmp
aad
mov
popa
jns
sbb
mov
mov
and
je
cwde
retf
ja
lds
sub
sub
add
mov
xlat
pop
adc
mov
dec
jnp
div
cmp
cmp
cmps
push
xchg
ret
(bad)
lahf
mov
inc
imul
hlt
jno
addr16
in
xchg
sub
std
rol
adc
stc
mov
fdivp
pop
in
adc
add
(bad)
jo
and
mov
stos
cmp
and
fistp
mov
movs
lods
adc
mov
pop
jg
leave
movs
shl
sar
icebp
data16
hlt
jmp
fadd
inc
cmps
sahf
mov
stc
pop
xchg
inc
movs
cld
adc
xlat
sbb
jl
outs
xchg
cli
mov
inc
out
imul
pusha
sbb
dec
out
jbe
dec
into
xlat
adc
(bad)
adc
adc
pop
mov
ins
outs
dec
ret
xchg
push
mov
jmp
daa
xor
mov
cdq
fwait
lds
cmp
sub
mov
je
pop
push
sbb
popf
out
adc
push
cld
sbb
shl
dec
add
call
xor
call
cld
and
jae
adc
rcr
aad
mov
js
jp
inc
(bad)
or
ffreep
cld
adc
xor
push
cmp
ret
jecxz
add
pop
mov
mov
pop
in
mov
les
cmovno
loop
rcr
(bad)
dec
daa
push
sbb
sub
ins
jmp
mov
xchg
xchg
movs
push
pop
cwde
xor
les
push
xor
sbb
cmp
cmp
call
push
scas
add
xchg
aas
bound
mov
cli
inc
and
mov
cmp
adc
cmp
jne
test
in
xchg
out
imul
stos
and
rcr
je
add
pop
jbe
in
and
mov
dec
sar
lock
lock
mov
in
pop
jne
test
or
out
mov
sub
mov
imul
pop
dec
mov
fld
and
jne
jle
loop
xchg
loopne
jmp
out
add
add
push
mov
in
cmp
dec
test
cs
mov
or
jmp
sar
push
test
dec
dec
mov
dec
fcom
add
(bad)
aad
jge
sub
cmc
(bad)
cdq
mov
lods
pop
ror
sub
add
sahf
pop
dec
mov
data16
ficomp
outs
push
stc
in
mov
fstp
frstor
pop
pop
(bad)
jl
jmp
mov
dec
xchg
test
int
jbe
push
cld
mov
push
pop
cmp
popa
pop
mov
push
or
jo
adc
and
jge
pop
ror
fld
(bad)
ds
cmps
xor
jae
call
fldcw
jmp
out
popa
xchg
sub
test
sub
dec
les
fisubr
dec
sub
or
pushf
dec
call
sti
cmp
mov
mov
mov
aam
fcmovu
and
pop
and
push
sti
mov
lahf
jns
lahf
aad
dec
push
movs
je
int3
jge
push
sub
cdq
add
push
push
xor
daa
and
mov
push
mov
and
xchg
xor
loopne
loopne
push
cmps
push
push
int3
fisttp
jmp
dec
in
aaa
lods
das
add
rcr
icebp
sbb
nop
loopne
add
ror
loope
jp
inc
adc
std
cmc
rcr
fisttp
mov
out
call
call
lahf
sbb
aam
mov
or
mov
sub
pop
xchg
inc
pop
or
jge
or
add
popf
dec
lods
arpl
mov
out
inc
cmp
hlt
das
add
pop
and
xor
adc
out
aad
ret
mov
retf
push
imul
enter
push
mov
stos
int3
aam
lock
push
repnz
cli
cwde
inc
adc
lods
add
or
mov
cmp
ins
test
in
dec
test
fcom
inc
push
jmp
jae
xchg
enter
cli
sub
push
inc
dec
xor
cmps
fnstenv
pop
scas
pop
lea
and
aaa
pop
es
lahf
mov
pop
cmps
popa
or
and
stos
movs
ja
add
adc
lods
or
scas
popf
mov
pop
cmps
and
frstor
xor
inc
enter
pop
push
dec
test
xchg
sbb
inc
aam
inc
inc
repnz
mov
lods
and
iret
jbe
into
pop
cmp
and
popa
or
shr
das
xor
xor
lock
push
add
mov
(bad)
loopne
xor
popa
div
fstp
into
repz
adc
sti
mov
adc
dec
dec
cld
jg
pop
and
push
cs
(bad)
push
stc
fwait
adc
inc
inc
shld
cmp
dec
test
xchg
out
call
into
adc
jmp
jecxz
lods
lock
jp
enter
xchg
fmul
neg
mov
test
movs
aam
lock
add
cld
call
push
popa
xchg
ret
xlat
in
dec
xchg
sbb
jmp
mov
push
push
jbe
push
cmp
mov
into
mov
dec
push
xchg
sti
mov
das
jl
mov
call
(bad)
adc
jnp
lds
call
push
jae
mov
clc
mov
dec
pop
out
jb
jg
cli
ins
and
repnz
jbe
es
xchg
inc
in
push
xor
adc
cmp
adc
push
(bad)
int3
sub
stos
inc
push
or
daa
or
lods
sbb
adc
(bad)
and
ss
adc
stc
sbb
mov
jns
lods
inc
neg
dec
outs
dec
imul
lds
add
fwait
pop
and
mov
hlt
fcomp
in
jne
add
bound
add
loopne
mov
cs
sbb
enter
test
test
shl
mov
xchg
fisttp
xchg
jne
cmc
fld
xor
test
and
int
adc
sub
pop
jmp
and
xor
xor
sub
shl
cli
add
and
movs
or
out
fbstp
popa
out
aam
shr
jecxz
(bad)
push
retf
mov
dec
push
pop
ror
test
(bad)
fidiv
call
adc
out
pop
xchg
nop
cs
xor
rol
inc
aad
mov
test
cmps
into
sbb
rcr
xchg
fsub
inc
adc
mov
shl
movs
cmc
pop
xchg
imul
sbb
fucomi
push
mov
pop
retf
out
mov
mov
icebp
jp
jmp
enter
mov
cmp
push
sub
movs
in
or
int
(bad)
loopne
or
aas
in
pop
(bad)
jge
add
mov
pop
cwde
jae
sbb
pop
sbb
sub
sub
outs
and
jnp
add
dec
clc
and
or
icebp
sar
add
(bad)
sub
pop
movs
mov
push
and
mov
fdivr
add
scas
retf
sub
leave
outs
sahf
jae
mov
aad
les
cli
push
loope
push
mov
outs
jmp
mov
dec
dec
fdiv
xor
movs
xchg
sar
lds
rcl
and
hlt
loope
cmp
aaa
sbb
ins
xchg
jo
mov
pop
loop
inc
enter
repz
pusha
inc
inc
sub
stos
ret
in
mov
mov
adc
mov
daa
jb
lds
or
push
mov
inc
inc
idiv
lock
data16
nop
ret
or
mov
mov
cmp
aas
mov
sti
(bad)
ins
adc
test
daa
mov
or
es
(bad)
mov
lock
lods
sub
aas
dec
sub
lahf
sub
xor
pushf
jno
out
jmp
jg
cmc
pop
js
sar
push
call
push
jnp
repz
xor
ss
push
push
jge
(bad)
arpl
mov
enter
(bad)
cmps
xor
int3
sub
aad
mov
clc
retf
movs
inc
sbb
fisttp
pusha
sahf
shr
inc
pop
pushf
aaa
dec
mov
jbe
out
sbb
and
and
loopne
fldcw
add
dec
and
sahf
add
pop
std
pop
sahf
test
cwde
push
lods
mov
in
and
stos
in
sub
outs
popf
pusha
pusha
and
xor
push
es
mov
cmps
sahf
push
enter
(bad)
rol
add
sbb
push
fwait
cwde
ja
pop
sbb
out
daa
push
call
leave
leave
jae
outs
pop
adc
gs
and
xchg
sub
jg
(bad)
lahf
lock
cmc
mov
imul
add
xor
jbe
inc
or
mov
sub
cs
dec
xchg
mov
push
in
loopne
in
mov
xchg
test
sub
or
mov
pop
adc
popf
jbe
jecxz
cmp
in
in
mov
dec
adc
stc
dec
fstp
(bad)
jecxz
loop
inc
inc
sbb
push
sub
cmp
push
clc
out
das
xchg
push
push
xor
lea
cld
aad
pop
dec
xor
cmp
sub
sub
mov
ds
pop
mov
out
call
jge
add
fsub
or
pop
aam
jp
inc
jmp
mov
repz
out
add
imul
mov
push
stc
rcr
push
pop
nop
lods
and
sbb
or
call
sbb
fs
ins
cdq
push
push
imul
call
inc
pusha
xchg
or
rcl
mov
mov
sub
dec
xor
adc
add
loope
gs
sub
inc
inc
aas
and
and
cmps
out
nop
ins
pop
cmp
clc
add
aad
or
xchg
xchg
dec
hlt
movs
xor
adc
cwde
jecxz
mov
std
sar
sub
sbb
inc
push
or
aam
and
sub
jno
push
mov
pop
mov
and
sti
sbb
ja
movs
ja
fxam
push
ds
mov
out
push
push
pop
imul
jae
rcr
push
imul
call
sbb
das
cmc
stos
xor
test
addr16
int
dec
adc
sub
fidiv
push
jecxz
cmps
movs
fwait
jb
dec
pop
test
iret
aas
adc
dec
and
push
fsubr
js
(bad)
jmp
popa
and
adc
aad
mov
push
clc
pop
(bad)
xlat
sub
xlat
aas
mov
(bad)
mov
test
movs
cmp
cmp
fnstcw
jno
push
mov
or
and
mov
cmc
fnstsw
icebp
sbb
(bad)
dec
jg
mov
inc
jne
mov
and
pusha
retf
mov
mov
or
data16
xchg
int3
in
ins
mov
add
cmp
retf
pushf
fmul
xor
or
inc
mov
mov
(bad)
sbb
cmp
repz
xor
jecxz
shl
cmp
mov
push
xchg
ins
cmps
pusha
xor
jle
and
cmp
mov
shl
push
push
in
mov
mov
sti
test
xchg
ficom
mov
call
jb
je
mov
out
pushf
sub
mov
xchg
clc
xchg
push
dec
mov
in
jnp
(bad)
xchg
lock
xchg
mul
and
dec
jmp
fcomp
test
fmul
or
and
jmp
xchg
dec
or
pop
pop
push
adc
lock
test
sub
(bad)
imul
mov
mov
outs
mov
cmc
mov
retf
ds
movs
xor
iret
ret
and
mov
sbb
push
pop
dec
cmp
imul
jns
mov
xor
shr
and
xchg
push
sti
aas
dec
jle
int3
loope
push
ds
pop
out
dec
pop
inc
mov
arpl
sbb
pop
push
out
jb
fwait
sbb
adc
mov
icebp
popw
mov
jmp
adc
add
(bad)
mov
sbb
nop
js
lods
imul
pop
(bad)
lahf
dec
mov
ror
add
lods
sub
push
jp
push
mov
mov
and
push
std
jecxz
add
dec
push
push
mov
add
add
adc
xchg
dec
lds
shl
dec
lea
dec
jecxz
retf
xchg
adc
pop
mov
(bad)
fld
(bad)
stos
lds
sub
xchg
icebp
scas
repz
jb
test
(bad)
sub
test
jp
jmp
inc
ret
pcmpeqd
and
cli
outs
pop
stos
push
test
push
inc
xor
jns
mov
mov
mov
and
sbb
ins
mov
cmp
fldcw
pop
fisubr
push
jae
xor
mov
scas
imul
sub
lock
inc
inc
xlat
mov
retf
jnp
jge
push
jl
and
(bad)
in
mov
imul
or
fcom
pop
pusha
stos
bound
ins
bound
xor
retf
or
nop
push
sahf
and
push
jno
xchg
mov
call
mov
dec
mov
std
inc
dec
fs
xchg
data16
push
mov
iret
jae
cld
fmulp
mov
inc
mov
nop
call
sub
cmp
ret
mov
out
inc
push
jbe
pop
test
ja
fst
hlt
or
xor
dec
jle
mov
pop
dec
(bad)
cmp
lods
push
xchg
fisub
or
loop
scas
stc
mov
in
arpl
adc
jmp
mov
mov
jl
mov
pop
jbe
daa
movs
cmps
lods
dec
or
repnz
mov
pop
mov
outs
mov
mov
in
dec
mov
or
jle
es
mov
stos
pop
adc
sbb
sub
inc
(bad)
repnz
jp
sub
movs
fadd
call
in
mov
call
cmp
mov
loop
in
fstp
push
nop
mov
cmp
xor
daa
dec
jl
in
xor
lods
sti
xchg
(bad)
push
cmps
fsubr
sar
mov
inc
sahf
pushf
and
or
dec
add
test
xor
stos
mov
ss
mov
xchg
cvttps2pi
iret
lods
in
inc
mov
jns
out
mov
ret
je
mov
dec
mov
into
xchg
test
pop
xchg
cdq
pcmpgtw
into
or
stc
fistp
sti
xchg
push
pop
movs
cs
mov
push
fnstsw
mov
add
xchg
xchg
fidiv
hlt
mov
xchg
pop
inc
adc
mov
sbb
pop
pop
xchg
test
jno
or
adc
jne
jecxz
mov
sub
clc
fnstenv
cmp
sub
inc
mov
dec
mov
mov
inc
cmp
and
inc
jno
push
add
daa
and
loopne
jne
pop
mov
sahf
jmp
jbe
mov
sbb
mov
cmp
stc
push
sub
fdivr
pop
or
jmp
mov
cmp
loope
fldenv
or
jae
cmp
in
cmp
out
jb
out
dec
or
fidivr
cs
arpl
jae
aam
or
daa
call
cs
nop
cmp
mov
iret
mov
ss
or
(bad)
lods
scas
jno
lock
push
xchg
dec
xchg
mov
outs
or
aad
push
stos
fld
(bad)
cmp
mov
cmp
sub
cli
leave
ret
cmps
inc
sti
and
inc
mov
mov
retf
bound
lods
sbb
(bad)
jmp
jns
cmp
cs
(bad)
and
into
out
(bad)
fcom
repnz
and
add
dec
loop
inc
call
jl
sbb
into
inc
addr16
dec
iret
bnd
mov
adc
sti
pop
push
mov
cld
in
fdiv
sbb
sbb
and
dec
and
jmp
stos
fild
frstor
jp
and
jbe
jo
leave
inc
shl
add
mov
mov
movs
mov
je
pop
fwait
repnz
sub
and
dec
adc
in
adc
movs
sbb
hlt
or
div
nop
inc
mov
mov
xchg
mov
add
dec
or
dec
std
leave
mov
xlat
movs
outs
fs
dec
stc
add
xor
loopne
pop
lahf
lock
xchg
mov
aad
mov
(bad)
pop
idiv
stc
pop
aaa
mov
fcomp
scas
pop
arpl
push
cmc
sub
sub
stos
mul
lahf
mov
and
and
jne
psubq
call
mov
cld
mov
jno
or
fmul
out
and
cmp
lea
add
lea
cmp
xchg
and
mov
xchg
add
mov
xchg
pop
sbb
mov
add
jl
rcr
jmp
popa
es
fmul
dec
adc
pop
mov
test
lds
dec
xchg
sbb
ds
ins
pop
jae
inc
add
mov
call
lds
pushf
cli
fidiv
daa
nop
cmp
test
cmp
and
xor
ror
pop
cwde
les
fild
lahf
fisub
dec
mov
inc
mov
shl
cs
pop
imul
adc
push
jne
dec
outs
xchg
sbb
pop
stos
les
dec
shr
push
jecxz
push
mov
dec
or
ret
mov
xchg
dec
mov
cmps
out
jl
retf
int
pop
mov
mov
fwait
dec
inc
rcl
call
dec
xor
imul
(bad)
jge
aaa
lods
fstp
(bad)
jmp
pop
jmp
cs
in
jp
mov
test
arpl
sub
ror
cdq
(bad)
cmp
mov
mov
cmp
cmps
(bad)
cmp
shl
gs
jmp
ret
sub
test
jmp
add
or
xchg
mov
pop
popf
adc
cmps
test
(bad)
cld
xor
push
dec
xchg
dec
add
mov
adc
mov
aas
and
pop
and
call
xor
lods
cmp
xchg
loope
mov
call
xchg
push
and
(bad)
icebp
xchg
lahf
or
out
mov
stos
or
mov
add
js
mov
inc
cmp
xor
mov
loopne
add
outs
mov
adc
loopne
push
cmps
jge
jae
mov
sbb
inc
and
push
mov
mov
in
out
mov
dec
push
xlat
add
xchg
jg
xor
test
xchg
jno
enter
mov
pushf
push
add
jle
xchg
retf
data16
(bad)
and
lock
push
movs
xlat
popf
test
inc
je
ss
scas
retf
cdq
js
inc
add
cmp
jnp
(bad)
mov
xor
add
mov
lods
add
xor
and
call
sbb
xchg
xchg
ret
add
addr16
mov
mov
or
pop
test
mov
dec
fsubr
ds
jns
dec
sbb
sar
pop
mov
xor
adc
test
adc
(bad)
(bad)
sbb
outs
mov
(bad)
imul
sub
inc
fdivr
jle
mov
mov
lahf
lods
add
sub
js
sub
int
lahf
test
mov
cmp
adc
cdq
imul
fisttp
dec
pop
mov
dec
and
loope
inc
jl
popa
mov
push
sbb
pusha
dec
inc
adc
adc
in
mov
jb
fdivr
pushf
pop
ret
pop
or
fs
(bad)
cwde
imul
xor
cli
test
and
push
(bad)
adc
data16
inc
cmp
pusha
and
adc
pop
jae
aam
sub
in
cmp
push
and
arpl
sub
dec
leave
jle
mov
mov
jle
int3
add
adc
cmp
push
xchg
aam
mov
js
cmp
add
mov
sbb
jmp
iret
jne
pushf
repz
(bad)
loop
lds
stos
or
xchg
mov
fs
mov
shr
(bad)
popa
nop
adc
mov
push
cdq
dec
sub
inc
inc
add
aad
ret
ins
xchg
mov
shl
(bad)
div
adc
jge
add
cwde
add
cmp
add
mov
data16
mov
pop
popa
(bad)
in
test
repnz
cmp
js
out
dec
jns
ins
(bad)
sub
(bad)
sti
ins
imul
push
in
(bad)
pushf
jp
xchg
jbe
xor
pop
xchg
sub
xchg
iret
and
nop
(bad)
pop
arpl
pop
ds
loop
nop
loop
jb
xchg
pop
sbb
add
pop
and
lahf
icebp
outs
es
cmc
test
cmps
loope
das
mov
dec
sub
(bad)
sbb
lea
das
sbb
repz
aam
mov
(bad)
dec
xchg
loopne
push
mov
add
sbb
mov
js
jb
aas
xchg
in
(bad)
pop
lods
dec
outs
jmp
push
push
pop
adc
lods
sub
and
fs
stc
(bad)
aas
cmps
xchg
xchg
gs
dec
or
adc
and
inc
das
xor
push
adc
pop
pushf
inc
std
push
mov
xor
jmp
xor
dec
pop
aad
ja
add
call
sbb
jmp
xchg
xlat
icebp
mov
nop
mov
adc
sbb
icebp
sbb
int3
sbb
adc
out
das
adc
xor
pop
pushf
rcr
call
sub
pop
ins
mov
ss
xor
mov
mov
arpl
jmp
imul
outs
xor
hlt
shr
pop
push
jecxz
imul
xchg
ficomp
jns
jo
gs
mov
jle
push
idiv
push
scas
(bad)
repz
(bad)
cld
aad
fdiv
cmps
mov
sbb
out
adc
push
jno
sub
xchg
jnp
cdq
mov
test
data16
test
inc
cld
stc
xor
cmp
lock
sub
(bad)
clc
adc
xor
mov
sbb
(bad)
mov
addr16
nop
test
inc
pop
mov
push
xor
ret
mov
jecxz
add
mov
arpl
hlt
addr16
xchg
and
jmp
call
and
pop
bnd
nop
(bad)
cmp
add
mov
daa
in
cmp
(bad)
int3
adc
pop
loopne
inc
jns
cmp
retf
cwde
mov
loope
push
cmp
xchg
fs
fidiv
cs
retf
hlt
push
dec
aam
sub
jge
mov
mov
repz
sub
out
dec
inc
nop
shr
cmp
ror
add
retf
ja
pusha
sub
jl
mov
and
sub
das
out
jge
pop
es
add
add
xor
repz
pop
and
xchg
push
aad
pop
cmp
pop
fcomp
inc
push
stc
out
push
(bad)
test
jo
enter
pop
cmp
and
std
jo
and
jno
out
movs
rcl
rol
not
mov
push
movs
and
jnp
push
ror
jbe
adc
sub
clc
adc
mov
jecxz
call
rol
loop
sub
pop
push
xor
sahf
scas
sub
mov
aad
push
push
mov
xchg
cmps
sbb
push
sbb
or
push
or
push
out
cmp
add
pushf
xor
pop
aad
cmp
(bad)
ja
outs
(bad)
mov
call
and
or
popa
sub
mov
inc
or
aam
jmp
jmp
cdq
or
add
mov
repnz
mov
out
cwde
addr16
adc
mov
stos
mov
sbb
sahf
mov
repz
push
dec
retf
xchg
pop
mov
adc
dec
jo
imul
xchg
cmp
sbb
mov
push
out
and
dec
pop
inc
mov
enter
push
xchg
outs
imul
jns
std
popf
pushf
les
es
sahf
call
lea
mov
pop
add
rcr
pop
cmp
mov
mov
jp
repnz
add
iret
dec
push
data16
jmp
sub
push
jb
jmp
das
into
test
daa
cmps
cdq
xchg
fs
cmc
lock
add
pop
es
jl
xor
out
xlat
pmulhw
pop
leave
inc
mov
es
inc
add
(bad)
data16
lea
lods
add
mov
lahf
inc
mov
or
pop
test
xchg
pushf
movs
loop
pop
inc
stc
add
dec
cmp
xchg
adc
in
and
ins
(bad)
fld
dec
jp
retf
cs
cmc
cs
rcr
push
imul
push
pop
mov
and
pusha
mov
xchg
cmp
hlt
mov
xchg
neg
ror
adc
leave
hlt
(bad)
lock
fwait
mov
test
sub
pushf
mov
nop
pushf
adc
ins
das
scas
in
mov
sbb
xchg
sti
jbe
neg
mov
icebp
and
sar
(bad)
rcr
pop
into
in
xor
out
imul
pop
ins
(bad)
sub
ror
or
dec
out
aaa
movs
jge
pop
xchg
pop
or
lods
dec
gs
ins
dec
push
xchg
scas
retf
ficom
jp
cli
pop
pop
mov
(bad)
test
jmp
sub
jl
icebp
xlat
jge
mov
cs
adc
inc
repnz
xor
loop
loopne
push
les
xlat
(bad)
sbb
lock
mov
jns
out
cmp
dec
(bad)
or
mov
aaa
xchg
cmp
inc
outs
sbb
shl
ss
mov
jns
out
ret
(bad)
pop
push
xor
lds
adc
fsubp
sub
cmp
div
fmul
ja
test
pop
add
adc
leave
pop
aas
xchg
ins
daa
mov
mov
pop
jae
push
out
xor
leave
jb
gs
mov
mov
ja
push
lock
ret
bound
adc
loop
mov
sbb
xchg
sbb
test
mov
outs
das
popf
gs
iret
rcl
jne
or
pop
inc
sahf
xchg
outs
mov
sub
fmul
mov
aam
cld
cwde
sbb
sbb
das
mov
std
dec
xor
inc
fmul
cdq
or
out
aad
xchg
dec
rcr
(bad)
sub
xor
sahf
jmp
les
aas
pop
pushf
inc
add
test
cli
add
mov
daa
imul
leave
stc
push
ret
mov
fnstsw
jns
pop
aam
sub
mov
and
push
dec
call
js
add
test
test
inc
and
jnp
dec
ins
pop
push
push
xor
in
mov
sub
push
and
lock
jnp
out
push
push
ins
push
mov
imul
(bad)
retf
inc
loopne
sub
cmp
push
mov
js
ja
sub
shr
test
mov
sub
dec
push
lods
sbb
pop
add
xlat
dec
push
mov
xchg
shl
add
cdq
add
test
mov
je
or
pop
xor
mov
cmc
ss
sar
push
or
fwait
stc
out
push
mov
sub
or
cmp
shr
cmp
nop
sbb
push
aad
ins
dec
retf
cwde
ror
sahf
xchg
push
pop
stos
mov
cmp
cmp
mov
or
add
and
jo
lods
sar
movs
dec
sub
mov
scas
dec
arpl
jne
lock
lds
shl
mov
push
jecxz
outs
popf
mov
movs
fmul
push
cs
or
jp
(bad)
mov
popf
cld
add
(bad)
mov
sub
retf
push
idiv
push
push
ret
sar
repnz
retf
or
mov
shl
adc
or
inc
sbb
mov
sbb
push
inc
mov
mov
push
jmp
int3
loop
mov
push
test
ins
cs
xlat
in
jp
mov
jbe
(bad)
fst
retf
addr16
stos
mov
in
rol
xchg
sbb
(bad)
dec
cwde
dec
adc
mov
stos
inc
stc
cs
sahf
sbb
cmp
into
cmp
jmp
pop
inc
mov
test
js
and
ficom
dec
push
aas
imul
addr16
mov
push
sbb
js
cwde
xor
xor
xchg
stos
data16
ds
push
push
pop
inc
pop
xor
cdq
mov
outs
cmp
repnz
pop
sub
in
and
sar
ror
lahf
dec
jmp
or
outs
inc
mov
ds
ret
nop
std
test
cmc
pop
push
adc
sbb
int
sti
call
cmp
push
(bad)
push
push
sbb
dec
scas
ret
dec
mov
mov
lds
out
je
or
adc
jae
xchg
push
sar
mov
push
(bad)
scas
mov
xchg
xor
push
xor
and
repnz
jmp
in
sbb
dec
sub
inc
into
out
pop
aam
adc
mov
inc
lds
pop
aad
addr16
inc
mov
dec
(bad)
dec
pusha
ror
jne
or
cli
push
movs
or
push
(bad)
test
(bad)
popa
xor
repz
sub
ins
xchg
xor
jbe
mov
sti
sub
pop
out
inc
cmp
inc
add
jns
mov
sub
xlat
cs
mov
in
ficom
xchg
stos
movs
and
mov
pushf
pop
loopne
dec
add
call
adc
stc
cmp
jb
mov
dec
repnz
enter
xchg
retf
and
enter
sbb
into
push
sbb
call
cmp
dec
jl
xchg
and
mov
add
cmps
jg
packssdw
repz
into
xchg
mov
jp
sbb
mov
push
mov
scas
dec
jmp
inc
ss
dec
daa
test
lods
or
xlat
push
jne
leave
(bad)
lock
lss
daa
cli
scas
ret
lods
jle
mov
jp
sbb
adc
push
pop
in
bound
adc
xchg
add
ins
out
cli
pusha
xor
mov
lds
call
stos
int
test
cs
push
or
pop
(bad)
scas
pop
adc
ss
sub
std
les
pop
or
es
pop
dec
repz
xchg
adc
stos
call
fidivr
cmp
sbb
xchg
jne
jl
ins
jmp
and
fnstsw
jl
and
xchg
shr
xor
mov
imul
xchg
mov
sbb
std
cmp
add
popf
sub
and
ins
mov
inc
lods
cdq
add
stos
or
clc
mov
sub
sbb
cmp
mov
or
retf
enter
ficom
push
lds
rol
or
js
out
ins
out
int3
pop
fistp
xchg
mov
out
xchg
and
enter
push
test
data16
or
jle
into
mov
loope
test
std
(bad)
out
pop
xchg
or
sub
fs
aam
mov
jl
idiv
cmp
mov
jns
mov
adc
mov
sbb
(bad)
call
pusha
ss
mov
push
mov
xchg
dec
pop
jmp
xchg
sub
outs
pop
or
push
inc
sub
sar
xchg
jns
fistp
movs
mov
fbld
push
sub
(bad)
and
es
ins
push
mov
jno
pushf
dec
and
arpl
cmc
and
mov
pop
push
aas
cmp
fsub
scas
jb
popa
jmp
ficomp
cdq
enter
cdq
cwde
inc
xlat
cmps
fwait
add
push
sar
xor
dec
test
lea
cs
dec
stc
sti
jae
cmp
into
dec
sbb
push
adc
dec
push
in
inc
test
xor
sub
aas
loopne
out
test
xor
mov
(bad)
(bad)
in
jmp
in
sub
stos
in
sub
fadd
outs
ss
and
dec
aaa
cli
in
push
mov
loop
xor
add
pop
push
(bad)
jl
mov
test
lock
in
mov
call
sar
or
sub
push
xchg
and
rcl
and
test
sahf
cmps
retf
fucomip
les
xchg
mov
sahf
adc
in
and
add
add
and
cmp
and
jmp
jns
and
xchg
mov
cmp
out
inc
repz
pop
shr
inc
shl
ds
daa
jae
mov
retw
cmp
add
out
or
out
mov
xor
pop
mov
loop
gs
dec
stc
mov
lock
lds
out
cld
ret
ret
xchg
cdq
repz
mov
adc
cmp
paddd
jbe
lods
sub
lds
and
pop
push
jb
pop
das
mov
mov
nop
add
retf
mov
push
jmp
adc
out
xlat
mov
cmps
pop
in
mov
push
push
jnp
addr16
pop
call
div
lods
test
sahf
dec
aam
out
les
lods
cdq
and
test
(bad)
sbb
cmc
loopne
push
and
xchg
jne
and
rcl
adc
pop
in
fld
retf
call
aad
shr
or
sub
push
push
jbe
fstp
mov
mov
into
nop
loope
inc
adc
retf
and
sbb
mov
ja
cmp
ror
mov
jns
adc
clc
jge
cmp
in
mov
add
mov
jge
push
not
jp
jno
cmp
out
push
out
repz
and
cmp
xchg
inc
out
inc
cs
pop
dec
or
jl
int3
fsubr
jae
pop
bound
dec
in
popf
stos
call
outs
fbstp
(bad)
dec
sub
mov
cmp
stos
or
and
enter
fild
mov
iret
clc
into
rcr
les
adc
popa
mov
test
dec
adc
inc
in
loope
pop
xchg
push
dec
xchg
cmps
mov
sub
mov
mov
ds
inc
jnp
ins
icebp
not
rol
stos
clc
outs
sar
push
fcmove
and
xchg
or
or
jne
ins
popf
std
(bad)
(bad)
sub
lods
mov
rol
out
pop
inc
mov
lock
or
ror
mov
push
add
mov
clc
cmp
aad
and
dec
xchg
inc
bound
jbe
dec
jns
test
pop
retf
xabort
mov
lods
jl
retf
dec
cmp
xor
je
das
add
loopne
jb
(bad)
and
push
xchg
scas
ret
xchg
mov
cli
cmp
adc
mov
inc
jne
adc
enter
inc
mov
xor
sub
mov
push
push
pusha
mov
test
xchg
add
mov
mov
push
call
lea
cmps
jmp
xor
add
dec
jmp
cmps
mov
fs
sbb
mov
test
rol
dec
jo
test
push
imul
and
shr
xchg
js
pextrw
push
addr16
sbb
pop
or
test
or
push
out
ss
or
dec
push
dec
pop
pop
mov
push
gs
mov
cli
xor
mov
(bad)
scas
cmp
xor
sub
or
dec
and
and
rcl
jecxz
call
xor
mov
xor
mov
adc
pushf
leave
repnz
fimul
cmp
mov
imul
xchg
cmp
(bad)
stos
xor
js
mov
inc
rol
ds
push
aad
bnd
mov
out
aas
fadd
cs
xlat
xchg
and
or
retf
and
or
jle
adc
add
stos
inc
jp
and
in
push
ins
jb
jge
sub
cmp
pop
xchg
(bad)
add
rcr
mov
stos
mov
and
mov
ret
mov
jmp
jecxz
xlat
mov
std
mov
adc
adc
mov
out
popf
fnsetpm(287
fwait
push
mov
add
lods
gs
gs
xchg
add
test
ror
js
mov
(bad)
mov
sbb
icebp
out
push
icebp
mov
mov
imul
adc
or
sbb
stc
mov
pushf
rep
(bad)
call
and
jle
lock
nop
pop
pop
test
iret
mov
shr
stc
cmps
dec
add
pop
cwde
sar
jae
out
ss
div
add
or
stos
ins
outs
gs
cmp
loope
out
pop
out
dec
je
repnz
mov
stos
sbb
adc
cmp
mov
repnz
mov
jmp
repz
cmp
mov
inc
(bad)
test
mov
call
mov
jns
add
enter
mov
jg
adc
dec
movs
cmp
and
inc
push
and
dec
test
out
cdq
mov
leave
repnz
cmp
xchg
std
mov
and
in
repnz
imul
dec
inc
dec
into
adc
popf
push
inc
dec
cmps
call
lea
mov
inc
lds
push
adc
push
jo
stos
add
sbb
push
add
mov
jecxz
je
dec
inc
mov
arpl
(bad)
mov
cwde
out
adc
pop
mov
push
inc
add
fidiv
mov
pop
loopne
imul
cmp
clc
or
movs
out
popf
frstor
jecxz
lahf
jl
fbld
fist
mov
dec
jb
sub
mov
and
jmp
stc
mov
sbb
test
dec
movs
iret
repnz
out
xchg
pop
adc
mov
xchg
je
sbb
cmp
(bad)
jg
or
jge
lahf
adc
sub
xchg
je
mov
cmp
sti
sbb
(bad)
cdq
rcl
and
adc
dec
mov
in
and
adc
dec
cwde
imul
sbb
sub
je
rcr
push
stc
xor
cmc
in
jl
adc
adc
dec
xchg
sar
aad
pop
(bad)
dec
adc
js
or
adc
sub
push
or
push
jle
add
cmp
mov
mov
cwde
cmps
test
mov
stos
loope
push
and
sbb
fnstcw
mov
repz
mov
pusha
shl
test
xor
rcl
(bad)
clc
iret
cld
xor
stos
adc
inc
adc
je
push
mov
(bad)
js
sbb
fcmovb
xchg
daa
sub
adc
xor
pop
mov
(bad)
push
(bad)
jp
mov
jae
xor
call
dec
int3
shl
push
xor
daa
push
jbe
retf
les
and
jmp
scas
add
push
aad
sub
int
stc
fst
sbb
test
test
mov
inc
push
mov
sar
mov
shr
inc
adc
stos
stos
gs
rol
aas
mov
sub
add
jmp
mov
push
push
out
adc
mov
daa
inc
push
sbb
xor
cmp
pop
rol
das
in
cli
pop
dec
cmc
cmp
in
test
fsubr
cmps
inc
xchg
add
or
cmp
fiadd
rcl
xchg
inc
imul
jge
lds
xchg
push
pusha
daa
jmp
stos
xchg
aas
xchg
cmp
adc
xor
mov
lahf
mov
enter
(bad)
pop
(bad)
fbld
xchg
mov
inc
mov
mov
dec
lods
jecxz
jl
les
dec
jecxz
or
mov
dec
lds
imul
shr
pop
fld
or
shl
dec
cmp
(bad)
sar
and
outs
cwde
ins
lods
cli
sbb
leave
loop
and
pop
scas
(bad)
outs
pop
inc
sub
repz
mov
adc
xrelease
loope
sbb
movs
mov
jle
das
xchg
pop
xchg
enter
lock
cmp
dec
ror
add
sbb
sbb
das
ror
nop
mov
fdiv
cdq
cmps
cmp
mov
sbb
mov
and
push
mov
mov
inc
adc
push
(bad)
and
mov
popa
inc
std
mov
call
dec
ins
imul
mov
pop
iret
mov
xlat
ds
(bad)
out
push
cli
ss
mov
pop
ss
cwde
dec
fsub
std
data16
fld
lods
jne
cs
pop
retf
xchg
repnz
sbb
pop
jb
xor
mov
jae
imul
int
push
cwde
add
mov
lds
clc
push
xor
pop
or
mov
das
lods
pop
add
les
dec
mov
xchg
stos
xchg
mov
lods
jnp
jne
mov
mov
stos
add
(bad)
push
sub
mov
(bad)
movs
pop
xchg
jg
sbb
sub
rcl
in
outs
pop
mov
xor
sub
mov
mov
(bad)
jmp
mov
fs
xchg
pusha
inc
inc
mov
add
sbb
lea
movs
loopne
mov
(bad)
div
mov
pop
loope
into
cld
je
and
mov
lock
out
push
out
push
ss
push
mov
push
rcl
aaa
push
cmp
mov
test
out
lds
sub
xlat
and
inc
mov
jl
into
jns
shld
(bad)
jne
mov
add
dec
xor
pop
cmp
and
xchg
jnp
push
jmp
xor
adc
jbe
sub
stos
adc
jl
add
sub
enter
lsl
adc
mov
cmp
sub
lea
push
pop
sbb
sub
mov
ja
sub
pop
push
or
leave
retf
dec
mov
jecxz
ret
enter
jmp
mov
out
loope
ret
ror
xchg
aad
adc
xchg
je
jne
pop
jns
and
into
inc
mov
xor
cdq
ds
mov
ds
mov
and
mov
mov
inc
sub
sti
in
mov
and
mov
sar
or
lea
pop
stos
inc
jae
int3
dec
pusha
cmc
pop
bound
pushf
jae
imul
xor
add
mov
push
jg
push
cmp
add
mov
mov
(bad)
test
pushf
movs
call
into
fwait
and
mov
cmp
scas
pop
lea
fs
ffree
jle
mov
repnz
jae
and
repz
aas
mov
pop
in
push
pop
sbb
jg
test
loope
sbb
fs
jmp
cmps
xlat
imul
cdq
enter
fadd
xchg
aam
call
mov
fnstcw
sub
jno
sbb
mov
sub
sbb
repz
push
pop
fiadd
sub
cmp
pop
cdq
adc
dec
add
pusha
enter
cmc
retf
scas
push
das
mov
mov
jecxz
inc
jmp
shl
pusha
retf
push
cmovo
mov
aas
xchg
repz
sub
mov
sahf
iret
scas
xchg
arpl
cwde
xchg
dec
sub
repz
rcl
ins
clc
mov
dec
out
xchg
jno
fcmove
aam
mov
and
mov
scas
fdiv
arpl
sahf
mov
call
(bad)
call
sbb
popa
push
jno
cli
and
jle
sbb
jb
daa
aad
cmp
add
push
mov
jp
ins
inc
js
popa
xchg
icebp
jmp
mov
and
mov
popf
not
and
cmps
pop
sub
std
xor
test
and
cmps
lea
aas
sub
cmp
ror
cmc
(bad)
clc
outs
mov
into
test
out
mov
dec
ret
and
xor
xchg
mov
ret
scas
or
repnz
dec
cmp
push
mov
and
mov
jecxz
shl
push
sub
add
pop
cdq
bound
(bad)
cmp
pusha
enter
dec
loope
call
mov
mov
in
jo
push
test
inc
es
mov
movs
test
leave
lahf
ret
test
cld
adc
test
lods
cmps
adc
or
lods
out
cmps
xor
pop
div
ret
xor
idiv
mov
jne
outs
lds
or
mov
stos
test
jmp
jns
ret
and
aaa
jmp
mov
stc
lods
jb
call
pop
pop
rcl
mov
pop
xchg
jno
pop
mov
or
rcr
jb
cs
mov
push
or
cmps
leave
add
jecxz
xchg
(bad)
popa
out
mov
in
xor
jbe
inc
inc
sub
and
xchg
cmc
xor
sub
fidiv
rcr
mov
std
scas
sub
ins
dec
loope
dec
sahf
retf
mov
mov
cmp
mov
inc
mov
cmc
inc
push
inc
mov
dec
sub
out
ins
cmps
test
push
xchg
cmp
jo
lds
push
jg
scas
outs
mov
loop
xor
inc
mov
rcl
cmp
(bad)
cdq
xlat
mov
push
movs
dec
into
mov
retf
das
ins
push
cmps
and
push
mov
adc
or
or
sti
push
pop
dec
out
retf
out
sub
pop
dec
aaa
aaa
mov
jae
cmp
lods
mov
mov
das
xchg
jo
adc
push
repz
and
sub
mov
ins
sar
sub
rol
in
sub
add
dec
pop
dec
sar
pop
fisttp
jbe
(bad)
std
in
imul
fwait
mov
cmp
ja
icebp
fucom
or
fsub
inc
jbe
cmp
mul
fsub
cmp
leave
das
sbb
add
(bad)
call
imul
jno
lods
sbb
daa
sub
jle
mov
int3
ss
js
push
jecxz
not
int3
jl
pushf
push
mov
pop
mov
sti
mov
fdivr
pop
sbb
adc
pop
ja
and
pop
jns
push
xchg
out
cld
int3
mov
push
icebp
outs
add
mov
mov
rcl
sub
jmp
adc
mov
mov
or
rol
sub
mov
xor
jb
adc
and
sub
test
retf
mov
jmp
int3
inc
loope
scas
inc
jnp
clc
imul
movs
cmp
and
aas
shl
jne
movs
jns
mov
xchg
mov
int
inc
fistp
lock
dec
dec
add
or
xor
sub
add
lods
mov
popa
mov
pop
pop
mov
out
fwait
movs
enter
jno
test
jmp
imul
mov
cmp
sar
dec
ins
and
pop
sub
and
push
outs
aas
into
pop
sbb
adc
dec
mov
in
pop
fcomp
mul
push
mov
cdq
ret
sar
ins
mov
fist
ins
call
les
movs
mov
out
int3
imul
mov
hlt
and
test
xchg
or
xchg
es
sbb
(bad)
pop
cmp
call
sbb
rcr
scas
addr16
ror
rcr
add
lods
jnp
adc
cs
cmp
mov
sub
test
and
inc
in
mov
outs
cmc
add
outs
rcl
fstp
pop
ds
rcl
adc
push
adc
ror
or
mov
mov
repnz
movs
fld
push
push
mov
daa
push
pop
jp
cdq
dec
loopne
out
ins
mov
push
push
sub
cmp
and
xchg
xchg
mov
mov
and
jnp
mov
div
dec
push
inc
stc
out
push
fidivr
xor
call
inc
arpl
sbb
dec
repz
jl
add
push
inc
sar
mov
mov
scas
mov
int
push
mov
pop
loop
jp
stos
or
andnps
sahf
mov
mov
dec
cli
mov
jge
dec
sbb
das
loopne
mov
push
mov
stos
out
and
mov
ficomp
lahf
pop
mov
fnsave
mov
adc
rcl
fdivr
push
imul
(bad)
adc
xor
idiv
loope
cdq
adc
mov
adc
sub
(bad)
push
cwde
and
retf
jmp
sti
add
mov
aam
fisttp
jge
repnz
and
pop
popw
and
cmp
adc
imul
mov
test
mov
jae
sub
cmp
jne
sbb
push
in
sub
pop
pop
adc
dec
jge
xor
mov
sbb
mov
mov
gs
pop
and
or
lods
int
clc
cmp
mov
cwde
xor
push
mov
dec
mov
xchg
in
xchg
mov
mov
rol
out
fldenv
fdiv
daa
jmp
retf
inc
inc
dec
push
retf
adc
mov
jae
and
cmp
push
sub
fild
mov
dec
sbb
inc
dec
fcom
push
mov
xor
inc
pop
mov
mov
inc
jae
pop
add
mov
arpl
mov
and
pop
std
xchg
cmps
add
jns
sbb
(bad)
sbb
mov
inc
xor
sub
scas
call
scas
in
ss
pop
mov
mov
xor
inc
adc
call
sub
add
jge
mov
imul
or
mov
mov
pop
cmp
ficomp
vmwrite
pop
mov
(bad)
sbb
stos
fsub
fsub
mov
sbb
(bad)
pop
ret
mov
fdivr
repnz
out
pop
retf
xchg
jae
das
dec
or
add
or
dec
xchg
in
dec
pop
pop
xchg
les
pop
xchg
test
mov
xchg
inc
test
scas
movs
sbb
outs
jo
test
int3
mov
jp
test
cmp
loopne
jbe
pop
cmp
sub
dec
xchg
pop
(bad)
out
retf
sub
outs
cmp
rcl
xchg
mov
sub
xchg
dec
inc
(bad)
fisttp
pushw
xchg
jno
idiv
jp
cwde
imul
sub
mov
jno
inc
pop
scas
popa
call
xor
aas
test
rol
repnz
inc
push
cdq
jae
xchg
or
out
sbb
inc
push
jo
mov
arpl
rcl
add
jle
pop
push
jno
mov
mov
pop
call
mov
test
pop
sbb
adc
jle
movs
add
adc
push
adc
push
mov
(bad)
cld
sbb
or
mov
clc
pop
ja
push
jecxz
test
addr16
mov
push
adc
xlat
push
mov
add
nop
pop
adc
mov
mov
cli
or
adc
mov
(bad)
lock
xchg
push
(bad)
hlt
cs
inc
in
fwait
or
aas
add
add
dec
jbe
lahf
mov
xor
aaa
push
cwde
sub
push
bound
out
sti
fld
retf
and
adc
outs
ins
inc
or
xchg
inc
stos
popf
icebp
push
lahf
repnz
pop
or
sbb
movs
fisub
pop
push
arpl
adc
shr
inc
rcl
push
fcomp
inc
lock
xchg
and
bound
shr
jnp
mov
shl
in
xor
pop
dec
iret
hlt
xor
(bad)
fisubr
ficom
jns
inc
fcomp
xor
or
jnp
sbb
xchg
adc
add
in
and
lock
sub
inc
adc
ret
int3
neg
adc
and
jle
fwait
mov
mov
pop
push
nop
shl
sub
ins
stc
pop
stos
fild
or
cmp
adc
push
retf
(bad)
mov
jae
aam
popa
mov
xchg
mov
test
pop
fwait
xor
xchg
rol
stos
movs
jecxz
inc
inc
sub
jp
stos
call
mov
xor
stos
lock
sbb
jmp
pop
rcr
pushf
mov
add
push
fidivr
movs
ins
xor
out
test
leave
sub
stos
xor
pop
aaa
(bad)
xchg
xor
repz
jne
jo
ss
outs
out
jecxz
mov
xchg
push
or
nop
mov
or
dec
out
adc
ins
jecxz
and
test
lods
shl
adc
aad
shl
sub
aaa
mov
sub
dec
mov
xchg
fstp
dec
repz
add
ror
sar
cs
inc
cmp
xchg
adc
out
jno
mov
and
sub
mov
mov
xchg
xor
idiv
ror
ror
mov
add
mov
in
loopne
inc
jo
paddusb
js
shl
dec
gs
mov
pop
mov
test
mov
adc
mov
retf
dec
xor
sbb
adc
test
push
mov
test
cmp
jl
jae
fild
add
cli
movs
add
mov
ror
jo
cmp
fst
cmp
inc
lock
jo
popf
fadd
mov
pop
ss
outs
out
pop
ds
pop
sub
js
fwait
dec
div
ret
cmp
mov
aas
push
add
test
push
push
es
loope
enter
xchg
loop
imul
les
add
or
and
xchg
xchg
nop
inc
push
loop
loop
push
or
inc
shl
out
aaa
jg
mov
repnz
xchg
pop
mul
cmps
xchg
mov
pop
cdq
aam
mov
ins
daa
mov
mov
in
dec
data16
bound
jg
push
sbb
pop
fist
in
adc
icebp
scas
mov
xchg
jmp
pop
and
movs
gs
xchg
jmp
test
pop
adc
aaa
mov
ret
hlt
arpl
jmp
imul
out
retf
cmc
mov
dec
sub
inc
icebp
push
pop
icebp
out
push
dec
xor
pop
push
jmp
loope
jbe
push
cmp
cs
out
push
fs
sbb
gs
sbb
sub
out
and
dec
mov
out
add
jmp
mov
jnp
sbb
mov
inc
in
mov
addr16
add
dec
xor
idiv
fs
cwde
sub
(bad)
cmp
adc
mov
fs
out
sub
inc
iret
jl
cmps
jg
aam
jg
addr16
pop
mov
jle
mov
push
mov
in
fcomp
stos
movs
ss
xchg
nop
mov
scas
mov
sub
dec
mov
jo
sbb
mov
(bad)
jbe
xchg
(bad)
jmp
dec
adc
jle
cs
fsubr
or
mov
rcr
jbe
mov
rol
and
add
not
jl
enter
ins
cmp
pop
mov
add
xchg
push
mov
sub
or
mov
inc
lods
je
in
mov
and
add
inc
mov
xchg
out
pop
(bad)
pop
jne
push
xchg
mov
adc
fiadd
add
in
fsubr
adc
(bad)
jle
add
mov
dec
jno
call
adc
lods
loope
add
pop
sub
mov
rcr
add
shl
add
add
cmp
retf
cli
fst
imul
push
shl
in
in
push
add
test
mov
xchg
jo
mov
mov
ud1
adc
jbe
xor
mov
enter
ds
lods
pop
jne
test
ds
stc
pop
jns
aas
and
jmp
jno
aad
or
or
inc
jo
inc
pop
or
jb
mov
mov
ret
out
xor
mov
test
inc
push
outs
or
(bad)
addr16
cmp
and
mov
push
in
push
sub
aaa
pop
sub
jl
cmp
dec
popf
scas
push
cmp
and
loopne
stc
xor
repnz
sbb
pushf
lods
dec
mov
leave
xor
aam
test
jno
and
or
inc
cmp
push
mov
popf
mov
cdq
adc
add
add
and
ss
mov
das
xchg
das
cld
adc
and
cmps
adc
stos
cs
jae
inc
in
sti
mov
xor
cmp
aad
icebp
xor
out
cs
adc
xchg
rcr
in
and
fwait
or
jmp
sbb
pop
mov
ss
lds
stos
push
(bad)
in
int3
jp
or
hlt
cli
mov
std
add
scas
inc
test
mov
inc
xor
cli
jecxz
jle
sub
xchg
add
shr
sub
push
pop
aaa
fidivr
mov
adc
and
mov
cmp
or
rcr
mov
mov
int3
scas
xchg
xchg
sbb
call
iret
dec
xchg
jmp
mov
mov
icebp
adc
in
mov
dec
mov
xor
adc
mov
icebp
stos
jmp
sbb
add
shr
inc
mov
sub
popf
pop
pushf
aam
push
mov
add
fwait
mov
jnp
xor
arpl
je
lahf
or
stos
pop
xchg
xor
lahf
sbb
add
ins
xor
jb
inc
push
cwde
dec
inc
out
pop
shr
xchg
cwde
int
ror
dec
inc
or
(bad)
popf
push
jno
and
xchg
mov
xor
cli
rol
ret
ins
out
jnp
in
movs
scas
fidiv
cdq
and
mov
xchg
xchg
ins
mov
pop
sbb
inc
inc
and
mov
aaa
jns
adc
jns
push
jp
inc
popf
sahf
dec
test
(bad)
mov
js
hlt
xchg
cmps
shl
outs
xlat
add
jl
xchg
rcl
or
xlat
stos
or
push
pop
jl
pop
add
dec
mov
push
stos
movs
addr16
xlat
cmp
and
(bad)
or
adc
push
sbb
ret
dec
(bad)
mov
cmp
mov
push
scas
mov
jl
jns
mov
inc
push
aaa
pop
mov
into
repz
out
push
ficomp
cmps
xchg
or
(bad)
das
and
xchg
adc
adc
lods
dec
jne
stos
(bad)
pop
xchg
test
pop
xchg
icebp
pop
jp
mov
test
dec
sub
cmps
ins
xchg
frstor
cmp
mov
arpl
retf
loop
sbb
sub
add
mov
mov
add
sub
or
jnp
inc
jne
xchg
or
jle
ror
or
xor
imul
fsubrp
rcr
mov
xor
mov
pop
mov
jnp
add
or
push
pop
cdq
jmp
push
push
inc
mov
dec
add
or
out
loope
pop
in
mov
jge
ja
std
hlt
push
std
lahf
inc
adc
mov
lea
mov
sub
inc
ret
inc
retf
sub
fld
(bad)
jno
push
pop
inc
add
test
adc
sub
xor
jmp
in
jg
jge
xor
movs
sbb
jge
imul
(bad)
enter
mov
cmp
aad
sbb
int3
adc
test
push
test
or
mov
jmp
inc
mov
xor
xchg
shl
lock
dec
retf
js
jg
xchg
sar
and
std
cmc
popf
mov
loop
(bad)
sbb
bound
xchg
sbb
loopne
dec
rcr
inc
aaa
mov
std
inc
push
sub
test
cmp
dec
inc
inc
inc
daa
cmp
mov
ret
iretw
or
shr
inc
ret
mov
and
push
out
out
mov
sbb
int
push
jmp
aas
int3
dec
mov
cmp
push
out
add
lods
into
icebp
pop
out
add
pop
mov
ins
sub
pop
dec
popf
or
sub
popf
ins
mov
xchg
ds
sbb
mov
cmps
and
and
addr16
or
xchg
popf
cmp
xor
pop
xor
ds
arpl
add
push
clc
push
or
inc
sbb
mov
sub
xor
fldpi
add
jmp
dec
mov
inc
into
push
xchg
cvtdq2ps
cmp
mov
xchg
adc
push
mov
xlat
repz
pop
xor
jge
mov
xchg
cmp
ror
rcr
imul
test
mov
ja
and
aas
scas
retf
sbb
push
in
mov
inc
jp
cli
loope
loopne
mov
jmp
pop
sbb
xor
push
jle
jmp
(bad)
xor
lock
icebp
(bad)
and
jl
es
mov
and
neg
add
pop
push
icebp
and
shl
pop
mov
inc
mov
cmovae
arpl
mov
sub
cwde
mov
sbb
movs
push
xchg
sbb
inc
sub
xor
mov
mov
mov
cmp
jle
repnz
cmps
dec
sbb
or
pop
mov
jbe
loop
mov
sub
shl
and
xor
pusha
pushf
in
push
ret
and
loope
call
sar
xchg
ss
pop
pop
cmp
push
out
mov
rcl
sbb
push
iret
mov
popf
imul
stos
dec
mov
cld
xchg
mov
cmps
leave
dec
in
ins
pop
add
xchg
ss
std
dec
call
mov
mov
pop
movs
mov
out
fadd
or
fsubr
mov
mov
leave
xor
cmp
push
dec
mov
and
sbb
and
into
jmp
mov
rcr
xchg
mov
(bad)
ins
jo
aaa
jns
and
xchg
jns
ror
jmp
jne
div
inc
out
je
call
dec
call
outs
xor
mov
pop
push
pop
push
mov
inc
cmps
popf
cmp
pop
in
(bad)
add
call
aaa
mov
sbb
fnstcw
(bad)
imul
inc
sub
idiv
aad
sub
lahf
mov
retf
push
xchg
xor
dec
sub
sti
out
push
mov
and
mov
jmp
adc
dec
xchg
aam
arpl
call
lahf
icebp
sub
push
rcl
pop
or
mov
fistp
mov
jnp
add
mov
std
mov
xchg
xchg
adc
or
inc
mov
hlt
inc
repz
mov
aad
fnstsw
loopne
lds
cmp
fcom
adc
outs
dec
pop
lods
rcr
enter
jb
dec
adc
scas
add
jbe
inc
retf
sbb
cmps
popa
and
cmp
mov
cmc
or
int
test
mov
nop
pop
sbb
ins
inc
sbb
retf
jno
dec
fst
pop
xor
loope
shl
mov
repz
jb
jae
imul
ss
pop
inc
pop
imul
lods
mov
jae
stos
repz
in
ins
sbb
not
xchg
inc
in
aad
daa
pop
dec
dec
and
sbb
shl
cmp
test
pop
jae
jnp
inc
sub
mov
popf
lds
add
ffree
sbb
xchg
push
jo
call
outs
mov
icebp
retf
in
sub
int3
das
sbb
sbb
mov
push
sub
add
mov
in
push
test
hlt
dec
stc
in
test
cmp
cmp
jne
or
mov
add
inc
dec
pop
mov
jg
shl
dec
inc
pop
inc
sbb
mov
leave
and
dec
scas
fmul
aaa
jmp
call
mov
pop
push
mov
lahf
cli
mov
clc
add
and
mov
rcl
sahf
jns
cmp
rcr
sub
aaa
jbe
outs
xor
adc
sub
stos
shl
(bad)
jle
inc
inc
jns
jbe
imul
mov
inc
(bad)
jo
repz
xor
shl
mov
rcr
popa
adc
jl
push
push
and
in
sub
jno
xor
rcl
pop
cmp
sub
clc
popf
jae
adc
push
(bad)
dec
inc
call
jmp
jae
mov
std
bound
add
loopne
div
push
out
xchg
(bad)
je
adc
outs
fldenv
loopne
(bad)
sub
inc
sub
mul
sbb
pop
in
lea
into
cld
cmp
sbb
shl
pop
neg
mov
jp
sbb
xor
xchg
mov
outs
(bad)
icebp
sub
enter
push
outs
mov
rcl
push
xchg
sti
rol
int3
xor
sbb
sbb
jmp
or
xor
stos
lds
push
sbb
jecxz
shl
cmp
ficomp
sbb
pop
add
cmps
fsub
pop
sbb
das
mov
loopne
xor
std
fwait
sysret
sahf
adc
stos
std
cwde
sbb
adc
pusha
jne
movs
aaa
popf
xor
mov
jle
add
jg
pop
inc
aas
cs
sahf
xchg
mul
mov
retf
pop
and
inc
mov
enter
ss
mov
hlt
ss
loopne
pop
not
sub
dec
das
std
add
pop
repz
mov
iret
xchg
cs
inc
inc
mov
inc
lock
jmp
jo
inc
xor
ins
pop
jecxz
cmp
rcr
add
loop
mov
stc
cdq
fiadd
sub
pusha
xor
fdiv
push
add
bnd
je
rcr
mov
push
ins
imul
test
imul
inc
inc
pmullw
mov
and
push
jmp
push
sbb
push
call
ret
cmc
sbb
xor
inc
lahf
pop
cli
mov
(bad)
ins
push
ins
mov
in
push
or
mov
lods
dec
add
add
jae
(bad)
cli
dec
neg
pushf
fwait
loope
push
dec
pop
test
cmc
mov
js
xchg
xor
jl
add
loopne
mov
std
call
xor
popa
scas
ins
xchg
test
adc
cmc
sbb
sti
(bad)
push
mov
add
mov
jne
cmp
jge
cmp
jp
rol
add
mov
dec
xor
mov
mov
movs
(bad)
mov
mov
pop
mov
push
cmp
nop
std
push
mov
push
test
jmp
hlt
or
dec
xchg
ror
inc
or
inc
adc
cmp
fwait
dec
and
or
adc
cmp
(bad)
sub
jmp
or
add
into
ins
sbb
into
cmp
mov
jno
xchg
scas
and
cmp
push
pop
out
add
stc
movs
mov
or
push
adc
pop
loope
adc
sbb
adc
pop
adc
aaa
ret
test
cmp
out
xor
sub
dec
bound
sub
pop
cmp
rcr
mov
sti
or
and
adc
dec
add
cmp
inc
rcr
pop
loopne
cmps
pop
mov
pop
bound
aad
jnp
clc
xchg
push
loopne
and
loopne
lock
xlat
scas
push
pushf
or
sar
xchg
or
pop
and
stos
pop
adc
loop
push
mov
jbe
jmp
cmp
push
dec
push
xor
in
fmulp
inc
mov
sub
(bad)
add
jmp
lods
cmps
enter
pop
sbb
in
shr
lds
mov
xchg
fsub
adc
outs
cmp
pop
push
cmp
mov
jge
mov
pop
push
out
xor
nop
xchg
jns
pushf
push
pop
(bad)
mov
xor
mov
fwait
sbb
cmp
retf
inc
push
call
or
xchg
sti
mov
add
shl
push
fldenv
push
dec
jp
and
jmp
inc
sahf
xor
or
fcomp
hlt
inc
clc
call
mov
lea
je
movs
cdq
pop
mov
jecxz
xchg
call
and
repz
(bad)
jne
inc
(bad)
sbb
jmp
xchg
push
call
rol
dec
jl
idiv
in
repz
push
lods
mov
cdq
imul
pop
lock
xor
lods
lock
mov
iret
ins
mov
mov
mov
(bad)
fcmovne
mov
or
mov
dec
fsub
int
ss
pop
xlat
and
push
pop
inc
pop
ds
ret
retf
dec
or
pop
pmullw
cld
fistp
jbe
dec
mov
jl
fbld
fs
movs
jle
rcr
sti
fstp
add
add
and
dec
retf
mov
sbb
pop
cmp
mov
call
daa
sar
mov
xlat
inc
fs
inc
sbb
push
dec
xchg
into
neg
fisttp
jb
movs
adc
shl
scas
out
mov
into
inc
jb
mov
dec
mov
mov
adc
push
jo
and
cs
adc
test
or
push
cmp
mov
sbb
adc
or
sbb
scas
mov
mov
stos
pop
and
mov
fnsave
adc
xchg
mov
enter
jno
int3
fdiv
or
imul
xchg
inc
pop
add
call
repz
sbb
pop
adc
sub
icebp
aas
daa
mov
movs
scas
std
(bad)
js
repnz
and
dec
inc
stc
repnz
mov
sub
xor
sbb
mov
xchg
jno
jp
xchg
dec
push
push
lds
pop
outs
pop
cli
xchg
ja
addr16
mov
cmps
not
adc
push
pop
outs
sub
sahf
icebp
cmp
shr
adc
into
fwait
mov
and
sub
int
sub
mov
sbb
nop
jle
dec
and
push
jne
mov
mov
or
gs
dec
add
sbb
ficomp
test
and
les
aam
adc
in
xor
sbb
call
in
lods
push
movs
jno
xchg
xchg
std
and
mov
mov
into
mov
lea
adc
add
cmp
dec
xor
stos
dec
icebp
cmps
push
dec
or
mov
inc
popf
nop
pusha
jge
or
add
sahf
fidiv
repz
jbe
mov
mov
jno
popf
mov
fst
pop
gs
test
xor
ja
arpl
sub
mov
aad
dec
inc
repz
cmc
ins
les
or
dec
retf
sbb
jecxz
xlat
sbb
out
add
mov
arpl
push
cmc
aaa
imul
or
pop
xlat
dec
mov
test
xchg
cmp
scas
pop
and
stos
loop
mov
into
xor
xchg
(bad)
cmc
pop
and
xor
push
loope
or
mov
into
je
jo
mov
or
add
mov
icebp
retf
mov
mov
dec
fistp
ret
mov
in
adc
dec
sbb
lods
sbb
inc
ret
add
mov
addr16
cld
aaa
out
ret
mov
test
add
(bad)
scas
mov
xor
in
aas
repnz
push
js
add
fcmovu
jns
xchg
ss
push
retf
loope
icebp
int
or
mov
xchg
add
arpl
fstp
push
sub
pop
and
and
push
xchg
stos
dec
xor
jo
cwde
retf
(bad)
sbb
add
add
test
fimul
rcr
mov
lds
(bad)
xor
(bad)
shl
dec
or
cli
clc
dec
mov
enter
mov
lahf
or
fdiv
rcl
retf
inc
out
jmp
fwait
inc
popw
mov
aad
mov
mov
adc
ror
xchg
pushf
pop
les
cmp
ds
mov
imul
and
pop
clc
dec
jge
mov
pusha
pop
inc
inc
pop
cs
sbb
aaa
call
mov
push
xchg
hlt
rcl
cmp
mov
cmp
cmp
push
mov
dec
xor
mov
movs
adc
addr16
sub
aaa
mov
popa
jnp
adc
je
leave
(bad)
jmp
xchg
mov
push
out
push
fld
xor
arpl
fild
rol
out
sub
rcl
jae
bound
dec
mov
cld
pop
jmp
push
loope
cmp
xor
dec
mov
pop
enter
dec
call
add
mov
nop
dec
lds
add
adc
lahf
dec
inc
test
push
mov
aas
push
enter
adc
add
sbb
push
outs
push
icebp
dec
mov
repz
and
xchg
imul
cmp
mov
lds
inc
pop
adc
adc
mov
scas
jmp
lock
jae
addr16
mov
inc
xor
fisttp
mov
adc
xchg
lock
icebp
pop
push
mov
jmp
pop
jb
xor
or
push
push
movs
fild
sbb
mov
(bad)
out
int3
mov
and
inc
mov
imul
call
sti
inc
mov
shl
test
jecxz
adc
nop
xor
leave
sub
cld
jecxz
pop
inc
out
dec
aam
mov
les
rcl
ror
inc
cmp
sahf
jle
hlt
xor
mov
popf
in
ds
push
stos
dec
push
mov
je
sbb
(bad)
add
mov
lea
jo
add
push
jmp
push
out
sahf
(bad)
sub
outs
dec
(bad)
and
xchg
sub
jecxz
push
idiv
inc
mov
lods
lahf
cld
cmp
in
movs
mov
shl
mov
call
fs
fisttp
retf
cmp
stc
cli
sti
push
push
cmp
ror
cmp
iret
iret
xchg
test
lea
retf
push
xchg
lahf
and
call
jmp
inc
mov
cmp
add
jae
inc
or
add
push
or
and
cmps
call
push
scas
adc
loopne
into
push
jne
sub
not
aaa
adc
loop
mov
das
mov
dec
dec
clc
je
lock
cmps
cdq
gs
mov
icebp
mov
jmp
rcl
mov
xchg
enter
mov
in
addr16
jecxz
shr
mov
mov
std
adc
out
xchg
fst
scas
jno
das
jae
sar
leave
arpl
mov
push
addr16
lds
sbb
int3
add
jbe
and
aad
push
cmps
pushf
xor
xchg
pop
cli
shl
cdq
jg
and
arpl
and
mov
cmp
call
adc
inc
dec
imul
aas
ror
movs
dec
push
mov
cli
std
lods
xor
popf
sub
jo
std
in
gs
push
das
iret
sub
push
and
and
xchg
in
not
push
(bad)
movs
mov
enter
mov
test
sbb
dec
lods
xchg
loop
(bad)
sbb
dec
ror
mov
popf
jno
push
mov
(bad)
mov
xchg
arpl
outs
(bad)
sti
mov
ficom
mov
add
aam
inc
stos
out
pop
daa
push
sbb
or
inc
add
sub
jge
call
mov
sbb
or
(bad)
inc
fs
sbb
dec
ins
jb
ins
in
test
enter
jno
push
test
push
sub
cmp
daa
xor
out
and
push
jge
dec
mov
cmp
test
xor
and
xor
pop
enter
gs
or
push
pop
mov
sbb
fldenv
retf
jl
mov
jmp
dec
out
add
pop
pusha
sub
out
adc
leave
out
loopne
dec
mov
push
jecxz
test
aaa
gs
mov
or
je
jb
add
dec
ins
push
nop
in
push
stos
fsubr
jmp
xchg
mov
sub
cmps
out
mov
or
lea
mov
sbb
test
sti
aas
loop
xor
push
fdivr
aaa
or
and
or
test
mov
mov
pushf
mov
dec
jae
in
or
dec
out
xchg
xchg
(bad)
mov
mov
ins
sbb
sar
andnps
jl
inc
cwde
sub
ds
cmp
gs
in
int3
xchg
sbb
and
int3
cmps
push
dec
jmp
int
jg
rcl
push
out
pop
movs
mov
stos
push
stos
push
std
push
inc
fdivr
les
aam
int
jnp
jmp
cmp
pop
dec
push
adc
push
nop
inc
add
jle
adc
pop
jg
popa
adc
cmp
mov
outs
les
popf
cmp
xor
dec
mov
add
gs
mov
or
into
clc
adc
shr
arpl
jmp
or
in
pushf
pop
mov
daa
nop
test
shl
add
scas
xchg
jae
or
push
adc
retf
and
mov
imul
sbb
and
fld
xor
pop
adc
sub
jne
xchg
clc
xor
and
jo
mov
jbe
add
push
popf
(bad)
loop
push
adc
mov
int
aas
ret
mov
xchg
lds
or
jbe
(bad)
cli
or
and
sub
pop
shl
xchg
or
mov
aaa
(bad)
loopne
bound
mov
int
fwait
mov
in
fwait
adc
or
sbb
inc
je
mov
(bad)
fiadd
retf
dec
sbb
lahf
rcl
mov
ret
and
xchg
mov
ficomp
jl
add
jnp
lods
adc
call
pop
dec
jl
push
adc
push
add
das
or
adc
dec
jle
pop
mov
fimul
adc
gs
or
sti
and
repz
imul
and
int
mov
(bad)
imul
mov
push
sbb
xchg
scas
pop
int3
dec
cmc
std
xor
mov
pusha
loopne
push
add
mov
xchg
mov
adc
and
cwde
xchg
iret
push
add
cmp
icebp
unpcklps
adc
retf
push
ss
out
lods
retf
pushf
mov
into
or
pop
(bad)
jmp
or
inc
add
sahf
or
cdq
(bad)
jne
shl
inc
pop
pop
call
sbb
push
mov
and
sbb
pop
push
imul
cmp
sub
div
sub
jmp
sub
(bad)
fstp
jmp
lods
cmp
cmp
arpl
sub
mov
xchg
das
ins
dec
sbb
(bad)
psubsb
inc
movs
bound
idiv
cmp
push
inc
xor
pusha
pop
sub
pusha
test
jp
inc
(bad)
das
repz
add
cwde
sub
pusha
adc
cs
jb
xchg
and
hlt
and
shr
in
sub
cli
dec
push
and
ret
daa
stc
jae
xchg
mov
outs
sub
loop
cwde
pusha
loopne
icebp
loope
clc
or
mov
div
in
(bad)
(bad)
mov
mov
push
rcr
mov
xor
sbb
ss
jns
enter
mov
push
data16
fs
call
cmp
dec
sti
in
int
das
jl
arpl
scas
clc
aad
dec
(bad)
jae
cwde
sub
lds
hlt
test
push
jbe
(bad)
add
in
cmps
(bad)
lock
dec
inc
jae
ret
sbb
xchg
daa
fiadd
xlat
fisub
cmc
push
jae
jne
xchg
repnz
adc
and
dec
dec
imul
mov
sbb
pop
dec
ins
fwait
out
adc
adc
sti
cmp
or
jo
push
mov
sbb
push
pusha
cmp
mov
adc
(bad)
aad
aam
scas
jae
pop
adc
mov
ror
mov
clts
xor
in
cwde
enter
lock
mov
xor
mov
push
mov
ret
add
adc
and
rcr
dec
add
div
xchg
mov
jmp
add
and
push
mov
cmp
xor
dec
mov
div
iret
sbb
xchg
pushaw
or
sub
add
mov
out
jle
mov
xor
adc
xlat
inc
rcl
in
out
adc
dec
rol
pop
and
xchg
push
sbb
into
les
inc
mov
icebp
sub
pop
fsubr
add
cmp
cli
call
inc
stos
sub
(bad)
push
and
or
jge
mov
inc
shl
cdq
push
int3
mov
adc
outs
sub
jmp
das
fimul
push
stos
ror
push
xor
dec
add
bnd
sub
cmp
push
lods
add
adc
jle
fs
and
or
and
inc
aad
loop
adc
cmp
lock
sub
out
mov
sbb
jb
imul
or
loop
inc
stc
aas
inc
dec
jne
mov
scas
ins
out
and
fs
xchg
cmp
jg
mov
(bad)
repnz
jle
xor
data16
jge
jle
ss
in
adc
mov
sbb
inc
cli
xchg
dec
sbb
fadd
ins
xor
stc
inc
leave
mov
xor
mov
mov
leave
outs
aad
inc
add
repnz
jnp
adc
fcmovb
pop
loopne
and
test
jg
sbb
ret
clc
retf
push
data16
jge
ret
cmc
pop
xchg
jne
sbb
mov
mov
cmp
inc
push
mov
ficomp
xor
mov
stos
retf
mov
xchg
into
std
int3
dec
(bad)
test
leave
cmp
add
pop
sar
jmp
sub
movs
repz
jbe
ret
leave
outs
xlat
call
out
xchg
xor
scas
in
dec
push
push
or
sub
xchg
xor
lahf
int
dec
jmp
leave
push
call
jge
pushf
imul
and
or
adc
loop
mov
jne
test
sbb
jnp
les
xlat
pop
retf
imul
dec
add
sbb
popa
(bad)
shl
in
dec
xor
or
imul
test
jmp
jae
inc
inc
aad
aaa
rcl
xchg
sub
ins
add
icebp
mov
inc
inc
mov
ss
sbb
add
mov
cmp
call
das
les
dec
cmps
push
loopne
cmps
jmp
mov
das
or
adc
cli
fadd
leave
xor
addr16
mov
aam
mov
pop
(bad)
imul
cwde
sub
out
xchg
cdq
xchg
into
ja
idiv
(bad)
jmp
retf
cmps
xchg
cmps
repz
cwde
cmp
sub
dec
cmp
fs
sub
adc
cli
sbb
inc
add
in
es
jne
lea
daa
icebp
jge
mov
dec
cld
loopne
in
pop
fs
or
(bad)
pmaxub
pop
adc
pushf
in
mov
push
push
aaa
adc
out
mov
mov
mov
pop
jbe
loop
push
push
mov
(bad)
push
sub
mov
xchg
sti
dec
mov
sbb
pop
mov
aad
mov
or
fcom
sub
mov
enter
enter
mov
inc
cmps
aad
cmp
cmp
data16
ror
pop
cs
add
mov
sbb
stos
test
in
mov
fs
popf
pop
mov
xchg
push
lock
das
sbb
xchg
cmc
fwait
push
xchg
fwait
cld
ficom
sbb
js
pushf
pushf
sub
cmp
jge
adc
add
rcr
jmp
(bad)
mov
mov
div
rcl
icebp
fs
jne
cmc
fld
aam
mov
mov
test
adc
ins
popa
hlt
fld
sub
(bad)
jge
jo
mov
shr
push
or
add
pop
dec
retf
jo
gs
mov
dec
mov
out
xchg
sub
mov
xchg
inc
or
data16
(bad)
test
xor
mov
cdq
push
int
inc
and
mov
mov
mov
xchg
lahf
fld
into
clc
das
out
imul
and
add
mov
(bad)
out
cmovl
jg
adc
or
dec
xor
inc
lock
sbb
or
add
(bad)
mov
sub
(bad)
cmp
or
mov
call
aaa
daa
xchg
add
or
getsec
pop
ins
dec
or
jbe
je
mov
push
add
or
cmp
and
test
les
aad
into
lock
or
xor
jp
in
lods
or
imul
or
adc
xor
ret
and
mov
and
test
jp
xor
sbb
fs
ret
cmp
xchg
cld
inc
mov
jmp
xlat
or
sub
add
dec
push
out
outs
icebp
sbb
dec
je
add
mov
jnp
cmp
imul
and
dec
sti
rol
or
in
mov
fstp
into
inc
adc
aas
fld
add
push
mov
mov
xchg
push
pop
sbb
xchg
(bad)
cmps
enter
jns
daa
and
mov
ins
dec
outs
push
push
push
loop
jle
mov
mov
add
out
cld
ret
mov
xor
(bad)
dec
imul
mov
and
or
xchg
pop
jp
std
sbb
(bad)
fdiv
and
sar
or
add
sti
mov
(bad)
movs
adc
ds
stos
push
dec
ds
adc
arpl
or
shl
and
lea
jl
jne
inc
and
lahf
or
and
jp
in
inc
in
push
sub
shl
jmp
ja
adc
std
mov
pop
jns
das
int3
scas
enter
xchg
in
stc
jno
loopne
jle
mov
(bad)
in
fsub
push
or
jge
mov
fninit
ret
sbb
or
push
lds
out
adc
pop
jbe
xchg
push
push
xchg
mov
adc
fs
out
fisttp
pop
and
lods
enter
je
dec
jmp
mov
inc
loope
popa
inc
mov
mov
bound
daa
out
mov
adc
adc
mov
and
jo
outs
(bad)
enter
cdq
ja
cmp
fsub
adc
adc
push
ret
mov
push
movs
or
(bad)
loop
fadd
jo
retf
sti
scas
pop
adc
lock
rcr
sbb
aam
mov
and
movs
pop
retf
lock
sar
(bad)
cmp
and
sahf
dec
fisubr
dec
aad
ins
pop
std
xor
push
cli
adc
mov
imul
add
inc
pop
mov
(bad)
cs
sbb
pop
add
sti
stc
pop
xchg
mov
cmps
pop
sub
out
or
pop
mov
ds
add
jns
jle
mov
xlat
mov
xchg
inc
cmovo
mov
mov
(bad)
es
or
dec
dec
cmc
push
inc
dec
mov
popa
int3
sub
in
add
adc
and
jecxz
push
inc
fs
test
and
out
mov
push
sar
lods
outs
outs
std
imul
outs
jno
push
loope
xchg
mov
mov
pop
dec
nop
cmps
div
sub
inc
sbb
in
fsub
enter
xor
adc
sbb
mov
xchg
adc
dec
sbb
push
inc
pushf
push
icebp
and
cmp
and
cmp
ret
or
push
fisub
imul
mov
in
lea
xchg
jge
sti
jle
mov
mov
xor
mov
jge
push
in
test
sbb
xchg
inc
push
dec
inc
cmc
shr
pop
pop
xor
stc
jmp
hlt
lahf
mov
push
dec
mov
imul
sub
cwde
jno
pop
cmp
cmc
jp
(bad)
out
pop
mov
loopne
xchg
lock
pop
xchg
pop
jmp
xchg
inc
shl
or
test
or
bound
xor
inc
jmp
lds
xchg
xor
movs
xor
call
imul
mov
cmp
cmp
rcl
mov
inc
push
sbb
xor
je
jg
movs
inc
std
loop
in
mov
xor
data16
fist
fisttp
add
pusha
push
movs
out
mov
cmc
and
pop
imul
ret
rcl
test
mov
xchg
in
sub
jb
cwde
je
out
xor
cmp
cmp
repz
adc
mov
inc
div
or
fisub
test
dec
inc
dec
jns
ins
pop
and
xchg
and
add
outs
pop
call
jnp
pop
inc
mov
inc
push
push
push
stos
sbb
cmc
jo
pop
fisubr
ret
inc
or
test
dec
ret
ror
xor
outs
das
jb
lods
rcr
pop
jb
imul
inc
popa
jg
aam
fwait
dec
(bad)
sbb
fwait
mov
imul
jmp
sbb
mov
imul
inc
arpl
cmc
out
pop
push
pop
ja
dec
iret
and
pop
data16
lock
shl
push
cmp
mov
mov
cmp
lea
hlt
iret
in
pop
dec
(bad)
stos
cmp
jmp
jg
into
xchg
test
and
fwait
sbb
out
jbe
mov
xchg
pop
test
lds
inc
not
sar
mov
mov
loopne
dec
ret
xor
xor
pop
mov
lahf
mov
out
ins
data16
rcl
sub
or
mov
test
into
retf
push
push
(bad)
mov
gs
fcmovne
mov
mov
mov
sub
movs
and
or
cmp
ret
out
icebp
mov
loop
addr16
in
xchg
mov
or
add
stc
dec
mov
xchg
stos
mov
mov
jp
push
leave
inc
ja
adc
movs
and
iret
popa
repnz
and
das
mov
xor
ins
int3
xor
int
add
fnstcw
mov
aas
fwait
lea
jae
and
cmps
loopne
in
jp
imul
sbb
sbb
data16
dec
mov
rcr
xchg
mov
inc
ret
aam
les
push
xchg
inc
stos
fsubr
and
repnz
int
les
pop
mov
inc
call
retf
cld
mov
(bad)
add
psrlw
jg
pop
dec
push
push
scas
cmc
test
inc
xchg
scas
jmp
pop
dec
sbb
int
loopne
cmp
sub
repnz
gs
add
retf
push
retf
mov
iret
call
cs
inc
mov
rcr
add
pop
mov
repnz
push
adc
mov
xchg
jmp
inc
inc
ret
cmps
in
cmp
pop
sbb
ja
jb
sbb
mov
push
dec
mov
fsubr
out
inc
dec
and
cmp
das
aas
lds
neg
sub
std
mov
mov
adc
int3
lea
pop
rol
repnz
inc
jp
mov
movs
xchg
retf
loop
pop
ins
adc
xchg
xchg
(bad)
and
jl
ror
mov
stc
jno
(bad)
icebp
jns
adc
call
ficomp
mov
ins
enter
les
ds
shr
call
inc
xchg
add
aam
(bad)
mov
nop
(bad)
cld
test
and
xchg
sub
dec
cmp
shl
mov
in
(bad)
in
xor
aaa
std
push
jo
ficom
popa
lods
inc
cdq
scas
push
mov
mov
push
mov
and
jo
aaa
jo
push
push
icebp
call
and
mov
or
jne
jge
scas
and
ins
jnp
mov
or
call
cdq
scas
mov
jmp
aam
push
loopne
outs
xchg
xor
in
stos
cld
(bad)
loopne
and
cmps
jmp
retf
div
in
xor
mov
pop
cmp
dec
sar
add
hlt
pop
xchg
loopne
push
ret
dec
xchg
inc
out
cmc
xchg
stos
inc
mov
shl
shl
mov
fidiv
(bad)
cwde
inc
xchg
inc
fisubr
ja
stc
lahf
xchg
stc
adc
repz
cmps
call
and
fist
fndisi(8087
mov
ja
xchg
sub
je
pop
fist
jmp
xchg
mov
pop
inc
outs
xor
mov
ret
out
ror
pushf
dec
or
jae
outs
push
adc
push
sahf
pop
mov
jle
sub
sbb
aas
in
aad
call
push
or
popa
popa
dec
adc
shl
push
dec
cmp
out
fcos
sbb
(bad)
push
mov
ret
jbe
clc
jns
xor
adc
sub
jne
mov
sub
shl
clc
sub
daa
out
inc
mov
xlat
syscall
jg
xchg
out
ss
in
ss
cld
in
ret
repnz
sar
fsubr
jge
inc
jmp
dec
inc
(bad)
pop
and
retf
dec
add
mul
xchg
pop
push
mov
dec
rcl
clc
adc
mov
jbe
xor
xchg
dec
daa
clc
sahf
add
aam
xor
xlat
aas
xchg
call
call
fiadd
jle
dec
xchg
dec
jp
push
pop
xor
mov
add
mov
adc
mov
inc
mov
(bad)
add
jge
inc
jecxz
mov
cwde
mov
push
loop
xchg
xchg
add
jecxz
xchg
stc
popf
stos
(bad)
push
mov
xor
cmp
sub
sbb
ss
loope
mov
xlat
(bad)
cli
into
add
jmp
mov
hlt
cmp
cmps
in
cmovge
inc
into
sahf
jp
aaa
mov
sbb
lods
jb
js
popf
inc
sar
popf
js
push
and
mov
pop
inc
jo
popf
xor
or
inc
iret
xchg
pop
adc
and
fnsave
ror
adc
scas
cdq
imul
adc
call
icebp
xor
add
inc
stos
pop
fimul
aaa
push
iret
mov
rcl
scas
mov
fwait
cmp
hlt
xor
mov
ret
pop
repz
or
in
push
pop
mov
or
mov
in
push
push
add
or
cld
pop
adc
mov
jge
jle
push
mov
test
dec
je
cmp
jo
leave
lods
frndint
dec
or
data16
out
in
iret
mov
out
push
sub
in
inc
ins
(bad)
mov
sbb
mov
rcl
push
mov
jo
aaa
dec
sub
fisubr
adc
mov
retf
iret
fwait
mov
inc
and
xchg
cs
cmp
dec
mov
ins
dec
cmp
je
shr
pop
add
imul
adc
or
ins
jmp
ins
push
adc
pop
loope
dec
mov
adc
dec
mov
mov
adc
mov
mov
inc
aad
inc
icebp
mov
and
ds
push
aaa
push
sbb
and
add
adc
jmp
mov
mov
stos
sahf
fild
xchg
popa
sahf
arpl
not
pop
add
sti
imul
push
(bad)
in
iret
fwait
in
scas
xor
enter
xchg
retf
std
sbb
sub
lock
ins
dec
shl
mov
mov
mov
int
xor
inc
mov
fcomi
and
stos
mov
data16
inc
mov
inc
sub
dec
gs
xor
out
mov
pop
daa
fiadd
repnz
retf
xchg
sbb
push
push
inc
fstp
test
fs
lock
ja
inc
inc
mov
arpl
mov
rcl
sub
adc
fwait
push
and
adc
ins
push
das
outs
or
pusha
aaa
jecxz
cmp
push
or
sahf
mov
mov
jl
push
int
mov
mov
imul
mov
dec
dec
sub
mov
sub
stos
(bad)
sub
adc
dec
dec
dec
loop
in
and
xchg
dec
scas
adc
and
shr
lea
pushf
sbb
dec
add
xlat
xchg
xor
mov
or
mov
lods
imul
mov
cli
adc
mov
pop
sub
xor
xchg
mov
out
pop
mov
mov
pop
add
stos
in
or
xor
pop
mov
add
mov
jle
sbb
icebp
mov
(bad)
pop
xchg
in
data16
jecxz
fmul
lods
xchg
or
sti
call
mov
cmps
mov
adc
inc
in
jns
dec
or
idiv
out
jne
or
fcom
aad
adc
fadd
inc
inc
dec
jns
icebp
push
call
xor
call
jmp
mov
add
cli
bound
jns
iret
xchg
pop
fsub
push
push
sub
shl
jb
ins
mov
mov
add
push
push
jmp
mov
cmp
jg
adc
lahf
or
sbb
jno
aaa
mov
int
js
cmp
out
cs
retf
jl
repnz
retf
outs
sbb
pushf
sbb
mov
sbb
loop
jmp
and
fldcw
lea
fsubr
mov
int
pop
lahf
sti
inc
xchg
inc
loope
repnz
test
sbb
nop
repnz
cmp
popf
int3
cmp
xchg
xchg
cli
iret
adc
int
test
cdq
add
arpl
push
or
pusha
and
mov
xchg
ja
mov
mov
sbb
push
int3
test
std
mov
sbb
add
mov
test
jmp
or
sar
js
jnp
movs
(bad)
xor
pop
mov
ds
clc
mov
ret
int3
ja
(bad)
and
shr
inc
stc
gs
sahf
adc
jae
(bad)
movs
sbb
mov
lods
cld
cwde
and
in
and
js
movs
ins
pop
movs
sbb
xchg
les
dec
pop
retf
jle
mul
mov
jge
adc
xchg
stos
jmp
mov
int
lods
sbb
inc
and
and
popf
enter
rcl
fldenv
test
mov
cmp
push
fwait
jae
sbb
shr
daa
sbb
pop
xchg
popf
mov
mov
inc
xor
mov
jg
pop
stc
iret
xchg
jl
popa
dec
pop
or
push
xor
cmps
add
push
nop
dec
or
xchg
xchg
sbb
fld
push
pop
xchg
leave
fwait
loope
xchg
jbe
xchg
test
jns
adc
cwde
(bad)
pop
add
enter
outs
lods
xor
xchg
xor
(bad)
push
je
push
pushf
les
push
shl
dec
jl
mov
call
loope
pop
les
es
mov
je
clc
movs
and
xor
jns
rcl
and
jl
(bad)
ss
stos
sub
iret
ret
cld
ret
das
and
(bad)
daa
pop
jl
xor
out
push
mov
mov
enter
and
int
das
xchg
inc
mov
or
mov
and
cmp
(bad)
mov
inc
out
push
in
into
jae
inc
and
inc
stos
fsubr
pop
xchg
sbb
sub
and
mov
xchg
push
pusha
ja
jge
jns
loopne
inc
sub
mov
aam
mov
mov
mov
mov
xor
hlt
mov
(bad)
popa
add
enter
and
sbb
fwait
outs
stos
or
inc
jnp
jo
loop
mov
lahf
inc
addr16
mov
aam
pop
adc
xchg
mov
pop
fmul
aad
loopne
rol
push
loopne
push
fisub
adc
mov
sbb
and
in
arpl
xchg
sbb
add
cwde
mov
pop
jmp
loop
mov
out
lods
daa
repnz
inc
adc
mov
mov
fwait
dec
mov
jae
rcl
rol
push
enter
push
jge
mul
sub
fcom
sub
(bad)
int
jo
mov
push
icebp
inc
sbb
dec
pop
test
or
loopne
lods
nop
leave
jb
aas
ins
aad
push
xlat
scas
inc
out
test
loope
mov
js
cld
dec
cmc
cli
pop
call
(bad)
sar
in
std
enter
cld
add
leave
mov
ret
mov
fdiv
xor
inc
(bad)
adc
add
dec
inc
mov
sbb
pop
(bad)
mov
rol
jle
jle
int
xchg
call
enter
fsubr
jne
ss
sub
mov
cli
stc
mov
cwde
mov
fdivr
repz
(bad)
in
adc
mov
mov
or
fstp
sub
pop
es
jecxz
test
(bad)
hlt
push
push
mov
sub
sub
mov
cmp
fwait
pop
ret
lock
rcr
add
out
adc
sar
aam
mov
rcl
fcom
lock
lock
mov
jmp
cmp
pop
scas
sbb
scas
fistp
xor
pop
dec
jb
or
sbb
push
ss
(bad)
(bad)
mov
repnz
push
xchg
test
ret
xor
pop
repnz
mov
jge
pop
mov
and
xchg
sbb
add
ficomp
cmp
mov
iret
jge
ror
out
jns
sahf
mov
xor
rcl
cmp
pop
test
and
mov
call
jae
int3
fist
mov
adc
cmp
xor
cs
in
pop
dec
idiv
cmp
fsub
into
popa
jmp
jno
jge
mov
mov
shl
jge
dec
rol
sbb
test
inc
inc
fisub
sub
leave
pop
scas
add
ret
xchg
mov
xor
mov
(bad)
and
gs
div
adc
inc
or
xchg
nop
cld
sbb
pop
jp
imul
ja
jmp
in
in
(bad)
int3
fdiv
lea
and
stos
xchg
jne
mov
test
and
fldenv
push
ss
cmp
xchg
sub
imul
(bad)
fld
dec
xor
xchg
gs
mov
cmps
or
shl
xor
add
std
pushf
mov
daa
mov
aad
inc
pop
dec
jmp
adc
inc
std
loope
jg
xlat
daa
mov
mov
popf
mov
rcr
call
push
push
pop
out
retf
ja
sbb
ds
pop
stc
(bad)
jnp
sbb
add
and
(bad)
lea
fsubr
adc
aaa
push
out
xor
sbb
ss
and
jmp
arpl
or
test
push
dec
arpl
or
pop
push
sti
das
leave
xor
outs
jg
in
dec
push
sbb
jg
sti
fdivr
sbb
mov
mov
out
push
dec
sub
mov
sbb
or
out
(bad)
cmp
mov
mov
add
test
lock
mov
ja
xor
inc
ret
test
push
sub
xchg
dec
cli
mov
adc
ja
xchg
fcomp
ja
(bad)
jbe
mov
mov
jge
aaa
mov
in
loope
loop
jecxz
lahf
xchg
mov
jno
movs
aaa
jo
cmc
sbb
call
dec
inc
jo
adc
and
lahf
jno
cmp
add
shr
cmp
or
fwait
inc
jb
sbb
imul
shl
push
sub
scas
dec
push
xor
mov
fild
jns
test
mov
js
(bad)
cmp
pop
movs
sub
xchg
sub
enter
repz
imul
shl
xchg
inc
xor
mov
jl
fs
sbb
sub
sub
bound
inc
or
or
dec
sub
xor
ret
rcl
cli
xchg
or
dec
js
add
push
in
pop
cli
cmp
iret
xchg
adc
arpl
push
(bad)
icebp
jmp
jmp
jmp
xor
mov
and
cmp
mov
stos
into
push
inc
and
xchg
fcomp
iret
and
call
sbb
cli
push
sbb
inc
pop
ret
xchg
pushf
sub
out
rcr
shl
scas
fidiv
shl
mov
sbb
mov
imul
inc
outs
cdq
dec
cld
arpl
jbe
mov
inc
mov
(bad)
jmp
neg
sahf
shl
dec
jl
(bad)
scas
shl
shl
push
fcmovb
and
sub
nop
xor
adc
add
movs
retf
aas
lea
addr16
enter
mov
mov
stos
imul
jg
sbb
push
inc
dec
mov
add
loopne
push
outs
jge
push
stos
mov
fsubr
das
xlat
jle
cmp
mov
clc
dec
aam
jnp
xor
in
pop
stos
ins
pop
cld
movs
xchg
sub
or
mov
add
sbb
sub
scas
mov
add
hlt
inc
fisttp
add
les
jo
in
fdiv
test
ret
and
aam
push
fwait
(bad)
fimul
retf
outs
push
fiadd
fcomip
xchg
mov
xor
sar
fwait
xchg
add
adc
adc
pop
iret
(bad)
jmp
lea
jle
xor
retf
fist
mov
cwde
inc
jns
cmp
jle
pop
fld
inc
sub
adc
les
cmps
jns
gs
cmps
adc
jno
outs
xor
xchg
hlt
mov
out
cs
aam
mov
jmp
loop
cwde
out
(bad)
adc
inc
xor
imul
pushf
xor
inc
sub
add
dec
mov
and
dec
je
das
and
jbe
push
hlt
clc
cmps
scas
mov
sti
pop
push
xor
jno
jg
lods
push
(bad)
sub
cmp
(bad)
test
jp
xor
or
sbb
sbb
cld
addr16
bound
ret
pop
nop
or
sahf
xchg
xor
cwde
adc
test
in
pop
aad
adc
jb
pop
test
push
xchg
rcr
(bad)
jnp
stos
jns
pop
fdiv
xchg
(bad)
sub
repnz
adc
fisubr
mov
mov
pop
xor
mov
pop
mov
push
stc
pop
addr16
add
sbb
mov
(bad)
dec
out
cmp
retf
push
jmp
je
xor
stos
call
fist
loope
shr
ror
adc
xlat
push
popf
mov
les
int3
xchg
outs
cmp
enter
inc
les
jne
sbb
dec
sbb
mov
in
xchg
pop
mov
inc
cli
stos
sbb
ret
imul
mov
pop
pop
push
mov
clc
mov
neg
mov
cmps
pop
das
sub
or
pop
sbb
add
out
cld
pop
dec
xor
xchg
mov
(bad)
mov
or
and
mov
imul
outs
fwait
jns
div
mov
jg
imul
test
xor
sub
popa
xor
loope
mov
mov
cmps
mov
out
out
data16
mov
dec
imul
mov
fidiv
or
add
aaa
mov
imul
mov
xor
popf
mov
popf
call
aas
loop
push
jle
sbb
cwde
dec
sahf
xchg
jmp
inc
mov
inc
jbe
push
aaa
imul
fstp
shr
ret
or
dec
or
adc
push
mov
rcl
cwde
adc
mov
sub
in
sbb
jle
mov
stos
cwde
scas
push
adc
xor
push
leave
sbb
push
outs
push
cmp
aam
ins
mov
popa
ins
add
das
addr16
cmps
repz
xor
call
cmp
push
lea
mov
mov
pop
sub
out
imul
inc
cmps
pop
dec
cmp
nop
dec
ins
or
jge
cmp
icebp
and
sub
sbb
add
and
les
adc
cmp
xor
movs
sbb
add
jmp
mov
cmp
shl
or
mov
mov
push
imul
mov
jle
sbb
mov
jo
or
inc
scas
mov
jmp
dec
or
push
xchg
pop
jno
xchg
imul
mov
push
jl
in
retf
clc
cmps
jecxz
arpl
std
mov
adc
dec
mov
pop
stos
or
icebp
mov
into
dec
sub
pop
ss
xlat
and
pop
dec
sahf
dec
orps
loopne
sub
dec
daa
mov
jns
jecxz
pop
and
je
jne
push
dec
pop
shl
cli
mov
sub
daa
out
adc
or
arpl
inc
leave
xchg
and
and
arpl
inc
inc
popf
jmp
aaa
sti
adc
sti
and
in
clc
frstor
xlat
mov
aas
pop
in
push
push
in
and
loop
pop
push
(bad)
jae
adc
lods
or
loop
imul
xchg
daa
cmp
out
into
fmulp
lock
(bad)
fistp
(bad)
cld
icebp
aad
das
inc
cwde
cld
loope
push
jg
pop
add
xchg
mov
pusha
or
dec
sub
and
ret
lods
loope
js
jmp
cld
and
call
push
test
ss
jo
mov
mov
int3
retf
adc
loope
or
mov
fsubr
outs
and
das
cmps
xor
ret
or
jmp
push
inc
int
icebp
push
push
pop
cld
xchg
mov
fs
test
mov
stc
lock
push
sub
and
cmp
mov
xchg
sbb
sbb
xchg
sbb
scas
sbb
mov
mov
movs
and
cmc
sub
jno
jg
mov
lods
cmc
sub
mov
sub
push
xchg
aaa
and
inc
xor
push
shl
jo
neg
inc
pop
or
jmp
addr16
popa
mov
(bad)
stos
test
mov
mul
sub
int3
fcom
lods
xchg
mov
into
pop
das
push
xor
cmp
nop
push
mov
sbb
fisubr
and
out
xor
outs
(bad)
or
adc
(bad)
jle
xchg
leave
mov
in
cdq
sar
cwde
popa
shr
dec
sub
mov
dec
xchg
scas
addr16
and
mov
int3
add
ja
xchg
sub
jbe
and
sti
mov
sub
es
mov
jmp
lock
mov
jecxz
xor
xchg
push
ss
xor
iret
scas
clc
xor
icebp
xchg
cmp
leave
pop
cmp
punpckldq
jne
add
outs
aaa
sar
or
in
add
adc
iret
js
add
and
push
or
mov
inc
pop
outs
call
mov
sub
pop
loope
(bad)
ret
aas
fidiv
pusha
popf
dec
pushf
and
lds
aad
movs
xchg
(bad)
jl
stos
das
arpl
mov
mov
ret
fsub
hlt
xor
jnp
xor
dec
stos
mov
sub
aaa
dec
loope
adc
fwait
add
or
mov
retf
xchg
adc
div
push
leave
jge
shl
cmp
inc
push
arpl
mov
movs
retf
outs
rol
shr
gs
push
jae
dec
rol
fdivr
fistp
jbe
and
(bad)
and
or
push
pop
jg
cmp
dec
aad
pop
push
clc
test
sbb
xor
dec
and
sub
hlt
inc
add
faddp
pop
sahf
adc
and
add
rol
sub
fisttp
scas
jae
cmp
or
pop
mov
mov
pop
aam
pop
daa
gs
mov
xchg
movs
cmp
pop
out
in
fistp
aad
jmp
jl
mov
ins
adc
jecxz
mov
ins
dec
data16
inc
push
adc
adc
aam
test
in
adc
sbb
and
fdiv
fbld
inc
fnstcw
call
inc
sub
jbe
adc
adc
mov
add
sbb
ret
adc
stos
add
clc
xlat
and
adc
daa
ins
bound
ins
rol
jbe
ret
mov
mov
shl
mov
pusha
inc
mov
(bad)
leave
jne
mov
js
dec
jmp
shl
push
test
ja
jmp
ds
dec
or
test
loop
stos
fs
or
pop
ficom
cmp
ja
js
loop
xchg
mov
shl
cwde
add
xchg
je
xchg
mov
jg
or
inc
mov
fs
test
bound
enter
mov
ins
push
js
and
jns
test
cmps
jnp
dec
pop
je
mov
aaa
fucomp
stos
in
xor
jle
lahf
outs
mov
push
popa
rcl
iret
and
lds
mov
mov
mov
xor
and
pop
mov
pushf
enter
outs
dec
loop
rcl
and
(bad)
jbe
es
mov
aas
mov
fstp
inc
push
daa
adc
ja
mov
sub
pop
js
inc
bound
sub
je
jge
in
pop
movs
fs
inc
pop
inc
and
aaa
xor
hlt
push
in
inc
cmc
jne
or
mov
cmps
inc
xor
out
hlt
test
pop
sbb
cdq
xchg
sbb
sbb
adc
mov
retf
pop
mov
sbb
sbb
jge
aaa
mov
mov
xor
pop
inc
fs
or
adc
cmp
xlat
jmp
sbb
mov
xor
hlt
ret
jp
jecxz
jne
dec
lods
lods
lods
dec
or
repz
adc
aas
mov
pop
jne
mov
cmp
adc
mov
inc
mov
(bad)
sti
retf
push
shl
aas
add
pop
test
push
and
xor
and
sub
jo
jmp
sbb
sub
iret
sbb
fiadd
mov
in
ins
sub
out
aad
mov
inc
cmp
cdq
rcl
lock
bound
jp
not
jns
pop
inc
cmps
or
popa
xlat
ror
(bad)
lds
dec
pop
push
fld
sub
jmp
mov
ror
jb
mov
lock
mov
mov
mov
in
jmp
mov
icebp
test
xchg
stos
daa
test
xor
sbb
mov
std
mov
outs
pop
dec
mov
xchg
adc
hlt
push
mov
movs
push
clc
mov
lods
mov
ja
jl
push
rcr
(bad)
jbe
ret
imul
(bad)
jmp
test
das
icebp
mov
rol
popa
mov
pop
xor
adc
sub
fwait
ins
fist
int
sahf
scas
jmp
and
stc
aaa
mov
imul
bound
or
dec
pusha
pop
retf
rol
movs
cli
and
add
push
in
out
movs
(bad)
mov
jns
sbb
cmp
sbb
test
jae
jmp
xchg
mov
cmp
jno
sub
push
mov
pushf
imul
in
push
repnz
or
mov
out
int
adc
mov
addr16
stos
out
cs
push
test
sub
ficom
mov
sahf
inc
and
outs
xor
cmp
int3
repnz
pop
cmp
ja
push
jo
mov
cmp
sbb
retf
(bad)
test
(bad)
outs
jmp
pop
test
push
lea
xchg
cmps
(bad)
push
mov
adc
dec
mov
dec
pop
jle
in
pop
std
pop
push
dec
push
lea
out
and
addr16
push
inc
sub
lahf
inc
adc
push
ins
push
(bad)
mul
fistp
sbb
imul
out
mov
frstor
jne
nop
jp
ins
inc
dec
into
loopne
lahf
mov
dec
cmp
shl
pop
inc
lahf
scas
cmp
jg
scas
adc
arpl
push
jmp
lds
mov
or
xor
add
jecxz
(bad)
adc
aaa
cmps
add
neg
call
push
xor
mov
sbb
mov
jge
jecxz
push
icebp
ror
stos
add
les
fsub
sub
das
mov
in
jg
cmps
mov
pop
push
dec
inc
jecxz
(bad)
cmp
push
mov
mov
push
pusha
bound
ficom
mov
cwde
push
ror
in
cmc
pop
enter
inc
xlat
jmp
movs
or
push
push
xor
cwde
in
imul
gs
clc
les
xchg
jecxz
cmp
int
push
push
ja
xlat
mov
cwde
and
scas
ins
ss
sub
repnz
lahf
popf
or
lods
dec
cmc
les
clc
sbb
dec
jno
pop
inc
mov
push
xor
jmp
pop
push
jecxz
cmp
aas
fnstsw
mov
sbb
jl
(bad)
xchg
sbb
or
(bad)
test
inc
jl
lods
std
and
loop
cmp
inc
in
iret
inc
sbb
adc
push
push
mov
aas
aas
cdq
iret
add
mov
xadd
in
jle
add
sbb
retf
das
pop
adc
mov
out
aas
xlat
les
enter
xor
call
sbb
mov
mov
arpl
inc
loop
cld
mov
mov
imul
aas
fbld
sub
jno
add
data16
or
or
(bad)
dec
rol
outs
call
sub
cld
gs
cmc
out
nop
in
(bad)
sahf
ror
push
jmp
xchg
lock
pusha
mov
lods
loope
mov
sti
sub
dec
push
pop
dec
cwde
(bad)
xor
nop
xor
not
adc
pushf
xchg
fdiv
(bad)
mov
add
mov
pusha
push
or
adc
or
mov
cmp
mov
(bad)
aaa
and
lods
out
mov
mov
outs
mov
les
pop
add
stos
ror
push
iret
sub
ror
jle
cs
sub
in
(bad)
stos
fld
jmp
adc
repz
shld
sub
inc
xchg
fs
inc
add
mov
mov
push
neg
cmps
jnp
mov
call
cmps
jbe
add
mov
ins
les
bound
movs
cmps
mov
loope
mov
test
push
add
mov
mov
xchg
cmps
pop
or
pop
(bad)
rcr
xchg
adc
mov
repnz
enter
imul
ins
push
jmp
mov
jmp
stc
dec
push
xchg
cmp
out
xchg
mov
fdivr
data16
inc
jmp
test
pop
retf
mov
jmp
aas
dec
bound
enter
out
jg
mov
mov
arpl
xchg
fwait
jb
daa
iret
push
and
adc
enter
inc
xor
jne
sub
cmp
pop
in
dec
into
lds
ret
cmp
xor
loope
ds
or
into
add
(bad)
jne
test
enter
inc
jno
sti
push
ror
xchg
test
test
jb
cwde
fisub
jb
(bad)
fdiv
outs
repz
sub
jge
jle
inc
or
ds
popf
adc
push
mov
loopne
and
mov
xor
xlat
mov
shl
xchg
or
and
test
lds
jmp
mov
sub
popa
nop
retf
add
cs
push
add
or
inc
and
(bad)
test
loopne
out
or
sub
sbb
cmp
jnp
cmp
or
pop
cli
sub
pop
aaa
loope
fcom
xchg
xlat
mov
nop
call
out
test
push
(bad)
lahf
mov
or
mov
das
inc
pushf
push
(bad)
cs
jmp
adc
mov
push
cmp
popa
mov
push
inc
cmp
dec
in
in
in
movs
or
xor
mov
fwait
push
ret
cs
push
or
shr
test
xchg
pop
inc
add
(bad)
mov
jne
jg
xchg
retf
ficomp
pop
aaa
jnp
pop
fcmovne
imul
pop
outs
movs
ja
mov
enter
test
out
movs
push
(bad)
xor
jo
xchg
sti
push
ror
xchg
add
movs
retf
dec
push
mov
bound
sti
add
imul
(bad)
push
call
jl
in
out
call
jae
sbb
cld
rcl
push
mov
jl
pop
cld
fwait
sub
call
pop
in
mov
cs
clc
bound
pop
retf
push
int3
stos
push
aaa
dec
pop
or
call
clc
jb
xor
pop
addr16
daa
js
inc
mov
pushf
xor
xchg
nop
push
cld
pop
jge
test
js
add
dec
ja
enter
mov
ret
push
adc
in
aas
loop
shl
dec
mov
mov
mov
push
push
push
mov
mov
mov
aaa
add
mov
inc
fnstsw
dec
dec
movups
mov
cld
fwait
hlt
or
or
xor
pop
sbb
push
sbb
sar
dec
push
arpl
jecxz
jmp
xchg
or
in
inc
add
pop
stos
mov
lock
outs
mov
or
add
push
or
pop
mov
loop
mov
cld
and
push
sub
test
push
sbb
out
test
not
or
cdq
mov
inc
aaa
push
push
and
fist
test
scas
lahf
sti
xchg
sub
dec
jl
adc
aad
or
jbe
jo
popf
pusha
add
mov
icebp
enter
and
xchg
scas
fild
mov
jge
pop
mul
sbb
and
push
scas
add
add
cmps
out
jnp
add
fs
repz
repz
xchg
add
movs
xchg
in
inc
pop
shl
jp
mov
hlt
jne
mov
dec
bound
loopne
mov
mov
lock
inc
pop
movs
mov
ret
inc
int
imul
cmp
or
push
cmp
iret
push
(bad)
xchg
jmp
or
cld
sub
out
inc
sub
sbb
shl
rcr
xor
mov
pop
and
in
jae
cmps
in
or
jae
cld
sbb
retf
cwde
xchg
jle
ins
ret
jbe
sub
gs
test
add
leave
mov
push
sbb
jb
cdq
dec
shl
daa
cmp
pop
jno
jge
loop
es
hlt
dec
(bad)
sub
lods
or
jne
inc
cmp
fisttp
pop
lods
push
jmp
sbb
mov
pop
jno
mov
inc
and
ds
shl
sub
and
test
bound
fyl2x
xor
ja
jle
mov
and
mov
xchg
push
js
aam
or
or
(bad)
sub
pushf
es
or
push
in
mov
jl
enter
mov
shr
adc
sbb
test
sbb
imul
jp
cmp
js
idiv
jns
test
and
jmp
dec
sbb
bts
cmp
pop
and
lahf
in
xor
popa
pop
(bad)
mov
ja
ins
adc
sbb
and
jp
in
(bad)
loope
fadd
ret
ds
jmp
js
mov
xchg
jmp
neg
mov
fild
sub
movs
adc
and
pusha
add
or
add
mov
in
scas
dec
dec
(bad)
rcl
xchg
int3
movs
je
or
mov
mov
push
dec
push
mov
mov
lds
add
jo
sahf
leave
mov
adc
repz
dec
loop
not
or
idiv
cdq
xchg
out
inc
cmp
sbb
inc
test
call
mov
data16
pusha
adc
fcomi
sub
adc
dec
ins
test
dec
inc
cmp
les
sub
fs
cmps
pop
sbb
jnp
loopne
repz
inc
xlat
ja
sbb
add
lahf
into
sar
sub
and
cmp
dec
inc
popf
js
xchg
push
(bad)
outs
sbb
ror
jecxz
and
les
add
or
xor
and
xor
push
mov
xchg
add
fucomip
nop
adc
fdiv
fwait
jle
and
ss
mov
jle
dec
jbe
jae
cdq
mov
jg
pushf
xchg
jno
(bad)
into
or
cwde
add
cmp
(bad)
sahf
ror
in
ja
ja
mov
retf
fwait
js
retf
sbb
movs
lds
jl
sbb
xor
aam
test
jp
mov
add
and
fdivr
mov
xor
push
dec
pop
and
stos
cs
xchg
test
out
js
inc
aas
xchg
repnz
loopne
repz
xchg
mov
repnz
sbb
popf
lock
(bad)
jo
xor
test
leave
push
pop
push
pop
jmp
cwde
fwait
cmps
loopne
test
retf
inc
xlat
in
dec
daa
and
jmp
mov
dec
pop
pop
std
push
adc
addr16
pop
aad
ret
imul
in
sub
dec
or
adc
pop
mov
add
(bad)
xchg
mov
xor
outs
mov
div
sbb
enter
mov
out
push
bound
fidiv
ins
mov
mov
xor
dec
cmp
cmps
fistp
ret
mov
or
push
dec
xor
rcl
out
out
cmp
mov
pop
les
mov
add
mov
push
cli
aam
mov
pop
retf
cmp
xor
pop
xchg
or
int3
add
cdq
mov
or
(bad)
les
mov
cld
(bad)
ds
jmp
mov
into
cmp
mov
and
test
mov
sbb
sbb
xchg
leave
popf
pop
lods
cmp
js
adc
pop
ds
shl
pop
stos
mov
dec
sti
xchg
xor
cmp
jg
add
pop
and
sbb
mov
jge
add
mov
cmc
xchg
pop
sub
or
in
mov
fxam
or
retf
jmp
hlt
push
sti
push
rol
lods
cli
mov
or
les
push
lahf
mov
cmp
das
xchg
pop
cmps
into
mov
xor
(bad)
xor
not
imul
jnp
into
das
dec
popa
cmp
cmp
sub
ins
stc
stc
(bad)
call
test
jnp
or
push
pop
pop
xor
sub
neg
ja
clc
daa
cmps
stos
aas
or
xchg
sbb
cmps
jle
data16
pop
sahf
retf
(bad)
dec
cmp
jp
movs
and
test
lahf
inc
js
xlat
pop
cmp
or
test
(bad)
clc
js
lods
jo
cmp
loope
jbe
sbb
lahf
push
fimul
add
pusha
inc
aam
xchg
mov
dec
in
xchg
sbb
jle
cmp
or
add
mov
sahf
mov
xchg
adc
mov
into
retf
sbb
xchg
and
lods
std
mov
mov
into
add
ins
mov
sbb
mov
sbb
rcr
xchg
bound
and
sahf
imul
imul
xchg
lods
arpl
add
or
int3
cmps
mov
inc
jnp
add
mov
and
imul
ds
mov
sbb
sub
mov
sub
repz
push
sub
out
and
jmp
(bad)
leave
dec
rcl
sti
xchg
nop
ss
mov
cmp
aaa
xchg
xchg
xor
mov
loope
cmps
fmul
sub
test
ret
sub
imul
repz
icebp
shl
fist
ror
cmp
jmp
jnp
xchg
mov
es
das
pop
ins
dec
jmp
pop
jne
mov
add
sub
lods
jns
xchg
hlt
adc
push
ds
pop
add
ss
jae
out
or
xchg
jnp
xor
cmps
add
dec
sahf
mov
in
mov
pop
ror
sub
push
(bad)
pushf
or
mov
repnz
and
push
repz
xor
push
rol
retf
cli
or
or
mov
(bad)
and
xchg
adc
addr16
shr
cmc
adc
jmp
sar
xchg
and
and
(bad)
xlat
sbb
test
sub
xor
ja
push
sub
sar
cli
push
das
add
fsub
dec
popa
mov
invd
in
retf
popf
in
shr
push
cdq
cmps
rcr
mov
pop
pop
ins
into
sbb
js
jge
push
jmp
lods
rcr
jnp
lods
xchg
ins
fwait
sbb
lahf
(bad)
sbb
pop
cmps
mov
mov
mov
adc
pop
dec
jg
test
sbb
movs
xor
out
mov
mov
imul
xchg
jp
adc
jmp
pop
icebp
mov
sar
sub
mov
imul
xchg
and
sti
and
sbb
dec
add
or
inc
inc
jns
stos
loopne
jbe
cmps
pop
xor
pop
mov
inc
cdq
imul
mov
mov
jg
ror
scas
jmp
retf
add
je
ret
(bad)
fcomip
mov
sti
adc
aas
mov
add
add
(bad)
sbb
ficom
icebp
mov
xchg
rol
outs
jmp
jns
nop
inc
dec
imul
jbe
sbb
add
out
test
jne
push
iret
cs
das
push
aad
enter
out
into
pop
int
pop
mov
out
pop
cmp
jg
and
jb
inc
cmp
std
and
lock
xchg
enter
imul
add
xchg
test
pop
cmp
cdq
jmp
popf
mov
lds
mov
ss
pop
and
sar
and
xor
(bad)
and
pop
enter
mov
fcomp
stos
sub
inc
aaa
push
sub
in
jmp
bound
jmp
jge
mov
push
jae
ficom
xor
dec
jg
dec
into
and
ds
call
lea
sbb
lods
jnp
and
adc
push
xchg
pop
push
inc
xchg
scas
iret
pop
mov
inc
push
iret
push
fwait
mov
pop
ins
sahf
mov
shl
call
pusha
and
je
pop
aaa
lods
xor
mov
xor
inc
lea
clc
dec
scas
fwait
mov
dec
lds
and
inc
cmp
(bad)
xor
jbe
lock
mov
les
and
ins
dec
pop
and
not
lock
inc
or
xchg
cmps
pop
mov
and
(bad)
in
xlat
fisub
cmp
xor
or
jge
jmp
(bad)
imul
inc
pusha
or
test
mov
mov
mov
in
or
fst
les
(bad)
(bad)
fmul
(bad)
jge
sub
stos
imul
ret
ds
cli
mov
hlt
push
call
dec
adc
mov
mov
ror
test
fisttp
xchg
mov
or
xor
shr
cmp
mov
xchg
jbe
mov
jnp
nop
and
pushf
out
leave
cmps
int
lahf
xchg
(bad)
mov
clc
dec
fnstcw
sbb
mov
adc
jge
jae
(bad)
imul
inc
int3
push
xor
int3
dec
cmp
retf
adc
and
rcl
ins
or
ret
(bad)
mov
jb
in
in
adc
movs
sub
jo
jle
inc
or
out
ror
icebp
(bad)
cmp
(bad)
ror
imul
retf
fwait
jae
push
scas
mov
push
inc
inc
ret
retf
pop
ja
mov
mov
cli
xor
sub
mov
jle
test
test
sub
dec
div
add
lods
jnp
push
aas
dec
add
jle
and
cmp
cmp
inc
inc
add
cmp
add
fidivr
inc
xchg
rol
add
into
jl
jno
and
out
ret
sub
int
les
jmp
add
mov
xor
jns
xchg
sub
push
popa
dec
adc
mov
mov
mov
das
pop
imul
scas
cmp
shl
sub
test
dec
(bad)
cli
stc
adc
out
lds
and
fisub
xchg
dec
sti
mov
icebp
jbe
lock
and
or
mov
push
icebp
xchg
add
(bad)
lds
jle
sbb
pop
into
push
stos
mov
addr16
rol
ret
xor
push
xchg
and
daa
push
jmp
push
cmp
and
jle
add
dec
sti
imul
ins
jb
loope
pop
sub
rcl
sub
nop
pop
(bad)
imul
sub
sbb
out
addr16
nop
add
pop
(bad)
(bad)
mov
leave
retf
inc
adc
or
add
sub
aad
fcmovne
jl
in
sbb
rcr
mov
das
repz
mov
sub
loopne
test
or
cmps
push
dec
ds
movs
mov
mov
out
cmp
adc
mov
test
retf
mov
cmp
movs
pop
sub
pop
jno
mov
sti
movs
jb
pop
cmps
psubsw
inc
ins
cmc
fdiv
xor
lods
js
xchg
lea
mov
add
add
mov
stos
jno
add
out
cmc
call
repz
adc
mov
ja
push
test
aam
mov
inc
sbb
adc
sub
mov
call
in
fidivr
dec
sub
xchg
sahf
les
dec
dec
jae
and
push
lea
stos
jmp
enter
jno
cli
lea
inc
mov
mov
test
div
add
inc
jge
cmc
sbb
and
lods
jmp
stos
pop
pushf
pop
scas
dec
jno
repnz
imul
leave
movs
cmp
mov
adc
xchg
das
pop
fwait
pop
test
push
aaa
jge
cmp
jmp
inc
nop
mov
hlt
cmp
push
mul
lods
push
pop
xlat
sbb
(bad)
dec
ins
sbb
dec
inc
jno
arpl
aad
inc
test
mov
or
jmp
add
ret
adc
mov
add
adc
and
jmp
adc
sub
leave
push
mov
xchg
cmc
inc
retf
add
int3
inc
dec
scas
(bad)
fisttp
sub
cmp
movs
add
popf
out
pop
adc
mov
in
add
jbe
fistp
cmp
mov
repnz
jge
fst
sub
mov
fdivr
sar
and
pop
aam
pop
les
mov
inc
xor
ja
mov
jp
xchg
jne
push
jbe
cmps
rcr
imul
mov
scas
or
dec
adc
jecxz
test
jns
dec
int
adc
lds
or
dec
stos
mov
sti
mul
dec
push
ja
mov
mov
leave
adc
push
add
loope
xchg
jb
jo
inc
shl
xor
sar
xchg
int
out
xchg
inc
les
jmp
nop
rol
ins
loope
mov
inc
movs
sub
fst
inc
fs
sub
out
mov
ret
mov
aad
or
in
push
bound
mov
sub
add
(bad)
mov
inc
xor
rol
(bad)
test
push
test
push
mov
add
dec
dec
cld
dec
pop
sbb
mov
mov
jbe
and
es
push
data16
adc
movs
push
fld
(bad)
mov
inc
dec
mov
into
cli
mov
sbb
call
jge
inc
ss
xor
pop
int
lea
dec
cmps
xor
cwde
cdq
mov
dec
mov
push
mov
int3
(bad)
cmp
icebp
lods
es
sbb
call
iret
repz
xchg
adc
les
lahf
adc
xchg
fst
dec
lahf
add
int
into
int
mov
mov
stc
cwde
xchg
call
adc
adc
push
xor
ret
sub
retf
sti
push
mov
out
lods
dec
fadd
fisub
mov
or
fisubr
inc
imul
out
in
es
mov
in
mov
inc
into
xchg
add
nop
inc
lods
jbe
je
adc
ins
iret
adc
aam
xchg
ss
adc
loop
fdivr
frstor
jge
jp
mov
lahf
pop
inc
inc
sbb
push
movs
ins
jb
ins
loope
jl
addr16
les
xlat
sub
push
movs
inc
aas
out
repz
dec
mov
aad
mov
gs
ins
pop
inc
push
mov
aam
pop
jnp
aas
xor
cmp
(bad)
repz
out
fs
mov
push
pop
repz
xor
fcom
sub
cmp
dec
inc
sbb
and
(bad)
lahf
mov
sahf
fisub
in
jmp
fwait
arpl
jo
and
add
pop
fild
lods
sbb
lods
adc
ret
adc
push
mov
dec
and
xchg
mov
lds
out
ret
aam
sub
js
in
sbb
inc
(bad)
jo
cmp
pop
jb
arpl
xchg
data16
or
fstp
out
xchg
add
mov
aad
imul
jl
pop
inc
xor
mov
aaa
stos
js
loope
dec
stos
or
(bad)
addr16
sub
js
test
sub
sbb
or
dec
or
repz
xchg
jl
pushf
clc
sahf
scas
cmp
inc
pop
add
mov
hlt
shl
mov
cmp
mov
sbb
inc
jmp
xchg
mov
ret
nop
fwait
mov
fild
(bad)
cld
cmc
jg
inc
(bad)
nop
fnsave
xchg
rcr
jmp
and
int
sub
and
sub
aam
in
loop
pusha
test
inc
dec
shl
xor
aas
gs
and
rol
ret
shl
into
sub
repz
or
or
imul
dec
cli
xchg
mov
and
cmps
add
stc
js
test
mov
mov
cmp
cs
sbb
stc
jne
adc
add
inc
and
sbb
mov
out
add
daa
push
adc
mov
jo
xchg
mov
shl
pop
loope
int3
sub
or
inc
outs
jmp
mov
imul
jl
or
clc
mov
mov
sub
pop
sti
aaa
add
xor
mov
imul
movs
push
inc
jmp
dec
pop
adc
adc
push
mov
xor
dec
gs
test
inc
jmp
pop
or
mov
adc
push
add
data16
(bad)
stc
das
sub
loopne
nop
aas
xor
push
fs
dec
aas
fidivr
sbb
sti
cmp
retf
xor
xchg
or
mov
scas
inc
das
fsubp
inc
ficom
in
(bad)
xor
mov
pushf
xchg
mov
or
lods
leave
xchg
xchg
sub
pop
push
xor
add
sbb
neg
add
add
data16
and
es
cmp
mov
aam
xchg
das
cwde
cmps
sbb
aas
mov
and
pushf
lock
and
ss
sub
in
cmps
or
test
in
dec
sub
popa
pop
sub
mov
push
inc
rol
mov
bound
aaa
idiv
cmc
inc
gs
xor
dec
cdq
cmp
jmp
adc
ror
add
repz
lock
inc
cmp
inc
ret
and
bound
repnz
test
dec
sbb
daa
jg
nop
test
sub
pop
xchg
mov
enter
loopne
pusha
sbb
popa
inc
and
sub
nop
popa
imul
mov
pop
jo
sbb
push
jmp
fwait
lock
xchg
mov
mov
sbb
call
cmp
aaa
out
outs
lds
mov
out
pop
mov
lock
mov
sbb
xchg
stos
shl
inc
dec
in
mov
inc
mov
jl
sub
mov
mov
cmps
inc
dec
aaa
(bad)
push
es
pop
add
fbld
das
dec
std
dec
mov
pop
jmp
cmp
or
cmp
mov
mov
cmc
(bad)
mov
sub
mov
or
xor
inc
out
pop
test
loopne
or
mov
cmp
cmp
sub
popf
jmp
push
test
mov
mov
je
adc
pop
iret
in
cmp
call
push
sub
mov
inc
inc
mov
out
pop
jne
push
mov
and
mov
jns
push
sbb
mov
adc
xchg
fist
jmp
cs
jmp
pop
xchg
inc
mov
shl
sub
pop
add
int3
outs
sub
repnz
test
jmp
xchg
shr
cdq
sub
pop
sbb
xchg
mov
jns
movs
loop
mov
sbb
mov
mov
ins
xor
sub
lahf
mov
lea
stos
mov
or
mov
pop
popf
repz
jae
nop
pushf
pop
clc
jge
mov
ss
mov
jecxz
movs
adc
mov
jle
fistp
in
out
mov
es
out
sub
int3
loope
stos
push
and
iret
popa
dec
jmp
inc
ss
cli
loope
mov
push
inc
inc
pop
bound
mov
ja
add
gs
sub
das
inc
cmps
sub
push
and
stos
or
fidiv
loopne
xlat
xchg
mov
sbb
pop
cdq
cwde
and
ror
adc
enter
push
int3
test
pop
in
xor
daa
mov
mov
lock
fidivr
out
inc
jns
xchg
retf
inc
mov
sub
or
call
xor
ins
cmp
test
fsubr
test
data16
(bad)
mov
rol
les
inc
sbb
mov
dec
or
push
jae
loop
adc
pop
jmp
cs
cmp
or
xchg
arpl
ror
popa
push
adc
hlt
or
les
inc
jno
cdq
ins
and
icebp
repz
lds
sar
or
push
mov
push
shr
cmp
pop
pop
xchg
dec
out
call
mov
push
mov
retf
scas
sub
jne
movs
int3
push
add
js
push
pop
jg
push
je
out
out
inc
dec
pop
arpl
mov
mov
movs
rcl
jmp
ret
bound
(bad)
loope
push
sbb
pop
add
lds
ficom
int3
retf
jl
xor
jp
dec
pop
inc
xchg
ret
bnd
dec
fadd
mov
rcr
(bad)
adc
sbb
loop
into
or
movs
outs
inc
dec
test
sbb
dec
adc
or
jae
xor
je
push
mov
cli
mov
imul
ss
std
(bad)
ror
leave
mov
jae
mov
jge
fbstp
xor
es
test
rcl
sub
mov
stos
push
in
out
jecxz
xor
inc
push
mov
stos
push
lea
mov
gs
mov
and
adc
mov
aas
mov
add
push
push
pop
scas
mov
and
sub
jle
mov
mov
cmp
mov
aaa
fstp
dec
add
sti
push
(bad)
mov
mov
sbb
mov
enter
dec
popa
mov
loop
test
xor
mov
sahf
fisub
push
mov
fdiv
or
aam
jl
push
mov
pop
jg
fs
xor
cmps
push
scas
mov
jns
mov
pop
inc
pop
xor
addr16
push
aad
(bad)
or
lock
fbld
lock
mov
push
pop
xor
sub
xor
add
sub
add
xchg
ds
push
in
bound
fcmovb
repz
cmp
call
inc
or
cmp
mov
sub
pop
pop
lds
loope
enter
push
in
fldln2
(bad)
popf
adc
(bad)
fsubr
xchg
or
pextrw
data16
fimul
lea
(bad)
xchg
out
sbb
xchg
sub
mov
adc
aam
sub
(bad)
shl
js
aaa
icebp
inc
mov
fimul
push
jg
dec
fldenv
fdiv
push
sti
shr
retf
pop
lock
out
in
inc
pop
aad
bound
leave
es
scas
mov
sub
cld
cdq
test
xor
adc
xor
xchg
fmul
add
sbb
(bad)
or
out
retf
and
test
or
xchg
and
inc
cmp
jb
add
push
sbb
call
add
or
mov
add
nop
pop
mov
mov
int3
and
test
ins
mov
cmp
pop
fwait
loop
mov
inc
mov
rcl
inc
cwde
and
add
rcl
jmp
push
out
(bad)
cmc
adc
mov
cs
mov
sbb
add
mov
out
jg
or
inc
or
call
pop
(bad)
jge
(bad)
das
xchg
or
out
lahf
ins
outs
or
pop
jb
test
jg
mov
mov
enter
iret
and
cld
call
or
repz
or
leave
mov
dec
loopne
cmp
outs
cmps
shl
mov
cli
cmp
lds
mov
(bad)
int
mov
sahf
int
fcomip
mov
clc
repz
and
(bad)
push
push
enter
test
mov
jns
sub
mov
push
imul
sbb
dec
inc
ficomp
mov
mov
pop
(bad)
xchg
push
sub
push
mov
iret
mov
mov
mov
movs
es
xor
scas
xchg
neg
add
xor
dec
adc
cmp
jp
lods
sub
dec
dec
fucomp
enter
stc
gs
add
repz
or
xor
pusha
add
fs
ret
int3
or
mov
cli
dec
outs
aas
jmp
cmp
cli
cmp
push
lds
or
mov
cli
mov
pop
cmp
fucom
shr
in
push
xchg
cmp
push
and
loopne
push
mov
(bad)
int
mov
sbb
xchg
repz
pop
dec
pop
pop
and
sub
xor
fidiv
std
mov
mov
push
cmp
mov
sub
fdiv
mov
pandn
(bad)
pop
pop
test
and
mov
loope
cmp
sub
jmp
std
push
and
mov
(bad)
pop
pop
loop
mov
loope
mov
(bad)
popf
ins
mov
in
aad
lds
dec
mov
xchg
or
call
cmp
out
cmc
rol
mov
in
in
xor
mov
inc
push
xchg
adc
cmp
imul
jne
and
iret
jns
mov
aas
xor
gs
inc
pop
(bad)
jns
lds
loopne
out
dec
inc
je
adc
mov
shl
mov
cs
sbb
retf
sahf
test
sub
xchg
repz
bound
daa
call
in
add
and
mov
xor
xchg
push
test
add
jmp
push
dec
test
outs
(bad)
aam
loopne
cmp
and
fldenv
mov
mov
xchg
pop
xor
sub
loopne
jnp
adc
jae
call
xchg
int3
push
aad
call
aad
icebp
mov
popf
bound
addr16
mov
out
cmp
sbb
or
adc
iret
fcom
aad
pusha
enter
cmc
arpl
ret
fs
cmc
shl
ja
stos
imul
mov
cmp
bnd
cmp
and
pop
adc
add
push
outs
shr
mov
and
xchg
mov
push
in
bound
mov
je
mov
mov
push
cmp
and
cdq
shl
pushf
add
mov
xchg
inc
pop
xlat
jnp
sbb
jns
sahf
and
(bad)
iret
ins
mov
addr16
push
enter
shl
push
push
fimul
inc
mov
sub
xor
call
pop
pop
les
push
jge
add
mov
ror
jle
cdq
mov
cmps
push
cmc
fisttp
xchg
outs
inc
dec
adc
gs
(bad)
sub
mov
aaa
sbb
push
fld
cmps
aad
lods
shl
cwde
add
pop
mov
cmc
(bad)
fld
pop
inc
mov
out
sub
scas
leave
adc
dec
mov
shr
sub
cmp
ss
pop
and
pop
inc
aas
pop
mov
lods
stc
mov
adc
repnz
sbb
aaa
inc
add
xor
outs
clc
adc
icebp
(bad)
int3
loopne
cmp
cmps
pushf
imul
popa
popf
pop
jbe
and
and
and
add
pushf
mov
retf
cs
test
xor
push
lods
(bad)
cs
xor
mov
clc
js
aam
cmp
xchg
xchg
and
mov
and
icebp
mov
call
push
jmp
jp
cmp
dec
jmp
mov
fst
pop
pusha
in
lea
imul
inc
pop
out
out
hlt
mov
mov
mov
mov
push
sbb
jae
adc
loop
sahf
cwde
mov
ins
cs
add
jl
retw
rcl
xchg
aas
in
das
cmp
mov
cmps
mov
jecxz
mov
ret
and
jp
stos
push
and
out
scas
shl
in
cmp
jnp
aas
adc
or
movs
pop
inc
sbb
jmp
xor
inc
mov
ret
shl
push
cs
or
jg
mov
xchg
leave
adc
inc
iret
xor
xchg
fwait
imul
scas
stos
jp
pop
xor
sti
aad
ficomp
push
xchg
inc
int
rcl
ja
pop
jae
pop
(bad)
push
mov
out
mov
fstp
outs
test
mov
jle
mov
imul
mov
std
cs
push
xchg
xor
shr
daa
pusha
test
lods
out
lds
test
xchg
sahf
loopne
mov
fs
movs
push
inc
addr16
fldcw
push
dec
rcr
xlat
scas
push
repnz
add
(bad)
scas
cmp
mov
jg
ret
push
push
ret
mov
mov
mov
jge
hlt
scas
inc
int
shr
in
arpl
push
rcl
faddp
fld
(bad)
xchg
dec
fs
clc
punpcklwd
push
lods
enter
push
cwde
in
pop
aaa
push
mov
ds
sbb
ss
jns
iret
add
ret
or
sahf
in
jno
jae
mov
imul
hlt
pop
dec
mov
out
ret
(bad)
jo
(bad)
pop
out
and
jmp
hlt
add
jle
dec
jl
(bad)
cmp
das
jle
adc
jmp
cwde
push
outs
and
xor
ret
pop
add
into
shl
fs
mov
repnz
jno
pushf
jecxz
pop
nop
add
mov
sub
mov
std
outs
jl
mov
fst
lea
jbe
adc
loopne
loopne
and
das
ds
mov
fwait
pop
push
ret
cli
test
mov
pop
cwde
js
dec
xor
mov
faddp
mov
adc
jnp
and
cwde
aad
mov
fdiv
adc
xchg
pop
add
outs
cmp
aas
pop
push
lock
xchg
dec
popa
and
pop
imul
mov
mov
mov
dec
loop
pop
jae
dec
jb
std
lods
add
push
rcl
mov
mov
pop
fisttp
stc
gs
mov
out
push
test
fld
dec
lahf
dec
and
xor
cdq
ss
jne
(bad)
xlat
outs
xor
sbb
ret
(bad)
cmp
pmaxsw
and
es
sub
in
imul
arpl
int3
pop
push
pushf
lea
jo
mov
xchg
ja
mov
jle
mov
pusha
cmp
fidivr
call
in
mov
or
inc
add
jle
jnp
dec
test
and
and
lock
(bad)
enter
sub
in
mov
js
lods
cli
les
mov
cmp
movs
mov
movs
dec
not
mov
dec
adc
clc
fwait
or
push
(bad)
jno
sub
cdq
ss
rcr
clc
push
sahf
sub
mov
jnp
sti
mov
pop
cld
ds
movs
(bad)
mov
(bad)
icebp
je
ins
mov
xchg
retf
pop
repz
xchg
or
jmp
sbb
or
aaa
sub
int3
pusha
stos
shl
mov
int3
je
jg
rcl
mov
or
stos
push
sbb
add
cli
xchg
dec
(bad)
fwait
jbe
loopne
imul
test
hlt
xor
(bad)
in
sub
into
add
xchg
mov
inc
dec
cmp
fbstp
inc
mov
xchg
test
je
push
out
stos
xor
inc
mov
mov
(bad)
sbb
jno
(bad)
mov
add
add
ins
addr16
adc
dec
ror
xchg
call
fstp
push
pop
jle
movs
adc
push
loop
cmp
iret
sbb
and
mov
push
out
les
out
test
sub
adc
loopne
push
push
(bad)
cld
push
fwait
push
shl
and
pop
rcr
add
xchg
in
test
jg
bound
sub
aam
aas
push
mov
iret
jg
and
xchg
cmps
or
loopne
push
add
int
inc
(bad)
in
mov
inc
loopne
cwde
test
or
mov
jns
loope
mov
or
sub
test
or
aaa
mov
pop
scas
inc
mov
out
test
jno
jns
(bad)
out
or
jb
cmp
ins
jecxz
inc
mov
into
inc
jle
daa
mov
or
imul
fwait
jnp
ins
pushf
pusha
inc
sbb
push
mov
adc
push
(bad)
xor
test
mov
and
mov
ror
pop
or
cmps
mov
or
cdq
and
mov
ins
cmps
test
pcmpgtd
xchg
imul
jmp
out
jae
in
stos
fadd
inc
gs
pop
mov
mov
(bad)
and
jl
hlt
gs
push
cdq
sub
push
dec
dec
scas
psubd
mov
xor
lods
mov
call
push
inc
sbb
inc
ins
into
mov
jecxz
inc
dec
lock
addr16
inc
cmps
jle
pusha
or
mov
push
mov
push
fcom
pop
repnz
xchg
adc
cdq
retf
lods
mov
cld
dec
les
icebp
and
out
mov
mov
pop
jmp
add
add
pop
lods
enter
nop
jb
fs
int
sub
sbb
cld
xchg
iret
lds
sbb
lods
ins
xchg
sub
sbb
xor
dec
push
push
push
sub
clc
xchg
or
jmp
les
psadbw
sbb
push
mov
mov
ror
mov
push
stos
cmp
jo
jo
cmps
out
sbb
adc
shl
enter
adc
cs
outs
in
xchg
xor
mov
add
test
jnp
dec
in
mov
(bad)
std
fcomip
adc
mov
icebp
(bad)
and
mov
sub
add
dec
daa
dec
imul
ja
dec
xchg
fistp
inc
pop
push
iret
rcr
test
stc
scas
add
js
lods
fdecstp
jmp
pushf
sti
jecxz
xchg
imul
loope
outs
icebp
out
test
xchg
push
dec
mov
loope
fist
ror
into
or
cli
pop
lods
push
out
imul
outs
dec
mov
add
(bad)
mov
or
jg
scas
sub
cmp
push
fiadd
loop
js
adc
mov
jno
sub
jg
dec
test
push
icebp
scas
out
mov
(bad)
sbb
bound
or
mov
xchg
scas
scas
xor
jmp
(bad)
jno
add
into
push
call
pushf
int
cld
(bad)
enter
(bad)
test
mov
dec
in
ret
les
adc
cli
xor
xor
fxch
xor
mov
retf
rol
jae
ret
ds
inc
das
cli
pop
sbb
int
xchg
jle
add
cmp
pop
jnp
push
aad
pop
rcr
push
or
or
xchg
repz
imul
or
pusha
xor
inc
push
pop
add
mov
ret
rcl
imul
mov
mov
mov
aas
hlt
pop
lahf
adc
and
loopne
xor
mov
xchg
cmps
xor
pushf
retf
mov
push
lds
into
pop
adc
ss
sti
xchg
jne
mov
fisub
pop
pop
push
loop
lds
and
inc
push
inc
scas
xchg
aad
sub
push
inc
sets
pop
int
test
outs
leave
test
pop
jb
xor
mov
mov
popa
adc
xlat
mov
fild
mov
adc
jle
call
pop
inc
mov
clc
bound
inc
xchg
sar
rcr
cmc
mov
adc
sub
js
hlt
test
ja
(bad)
in
aas
xchg
(bad)
cdq
imul
jge
lock
rcr
jo
dec
mov
xchg
xor
add
sar
add
dec
gs
lds
xchg
iret
push
sub
sbb
leave
(bad)
clc
inc
out
xchg
stc
mov
js
test
rcr
xor
inc
mov
(bad)
hlt
stos
push
fs
(bad)
xlat
fwait
mov
adc
push
outs
jmp
cs
fsub
aaa
outs
fiadd
mov
inc
push
and
jno
test
mov
(bad)
sub
into
add
push
push
ficomp
push
mov
ret
xchg
ins
fwait
in
imul
sub
cmp
ds
inc
ror
xor
or
sahf
jbe
test
xchg
xchg
dec
jbe
jno
push
enter
xchg
push
sbb
dec
jae
fs
inc
lods
mov
mov
cli
xchg
xor
aas
dec
mov
or
out
lea
cld
mov
(bad)
popa
movs
inc
sbb
shl
(bad)
and
cmp
pop
jnp
jbe
pop
sti
jge
enter
out
ss
imul
xchg
pop
aas
add
jl
aam
dec
imul
int3
or
(bad)
popa
scas
and
out
cmp
dec
jbe
cmps
push
outs
inc
fisub
(bad)
push
mov
and
jne
(bad)
dec
jns
fsub
cmp
(bad)
(bad)
dec
call
mov
ret
pop
adc
ss
mov
out
in
mov
je
bound
mov
enter
pop
push
es
scas
enter
dec
mov
mov
fimul
mov
dec
or
out
xor
dec
xor
dec
outs
not
push
xor
nop
mov
outs
xchg
sti
mov
pop
js
pushf
(bad)
xor
imul
clc
mov
mov
int3
leave
mov
ja
jae
addr16
xor
clc
in
and
(bad)
fist
or
call
scas
jl
sbb
add
mov
cmp
xor
iret
scas
adc
inc
jp
jae
arpl
pop
or
aas
lds
jns
scas
fwait
push
cmps
loope
sub
push
aaa
xor
retf
push
mov
adc
lds
int
js
mov
sbb
mov
pop
xlat
adc
sahf
das
rcl
cmc
pop
pushf
fistp
xchg
loopne
mov
add
pop
push
popa
jge
push
pop
mov
cmps
cdq
push
fisub
pop
popf
inc
cwde
(bad)
mov
pop
ss
aas
dec
jno
mov
not
xor
add
mov
ror
cmps
push
xor
and
or
addr16
sbb
pop
push
xchg
popa
lahf
cmps
mov
pop
div
out
icebp
mov
jnp
cli
and
shl
inc
(bad)
xchg
or
ror
nop
pop
and
call
jmp
dec
fcomp
xchg
ror
repz
dec
xor
stos
fisubr
retf
or
pop
and
das
loope
sub
rol
iret
xor
call
add
pop
xchg
dec
add
out
shl
dec
dec
jmp
stc
or
out
scas
jo
popf
out
sub
or
mov
(bad)
mov
mov
lds
jo
inc
add
jg
loope
mov
xchg
out
(bad)
or
push
bound
xchg
lahf
dec
loopne
rcl
push
fwait
aad
push
ds
adc
xor
pop
je
jp
out
adc
xlat
ja
les
loop
sahf
push
jp
pop
mov
sub
je
(bad)
lods
and
out
sar
add
sbb
lods
aam
jae
and
pusha
clc
stos
dec
out
and
sub
(bad)
cmps
retf
call
je
mov
(bad)
in
rcl
dec
mov
jmp
adc
call
cmp
(bad)
and
stos
pop
sub
mov
test
mov
mov
pop
inc
mov
and
sub
mov
inc
push
and
inc
aad
pusha
dec
inc
and
movs
and
xor
pop
or
sub
jbe
xchg
jo
jae
inc
fcomip
movs
mov
bound
icebp
imul
repz
adc
into
shl
add
or
cmp
sub
or
arpl
xchg
out
add
add
aam
xchg
add
imul
je
and
jmp
(bad)
adc
int
fs
add
push
push
mov
inc
push
mov
or
jge
jae
aam
iret
rcr
cs
js
es
fist
cmp
jg
cmp
stos
int3
js
inc
je
push
cmps
add
daa
(bad)
or
xlat
fwait
add
mov
mov
jle
sbb
xlat
push
xor
ss
fsubrp
imul
imul
pushf
adc
mov
cmp
mov
mov
jmp
inc
jnp
add
retf
fidiv
mov
in
into
mov
cmps
fdiv
xchg
test
test
pusha
out
int
fmul
mov
leave
cld
xchg
lods
mov
mov
jnp
push
sahf
mov
and
pop
int
pusha
pop
dec
hlt
pop
bnd
inc
push
inc
addr16
popa
xlat
lea
mov
cmc
inc
xor
pop
or
repz
and
popf
mov
mov
push
jo
(bad)
inc
fwait
loopne
enter
cli
jnp
in
sti
adc
in
or
test
mov
sbb
in
mov
fwait
scas
or
mov
stc
mov
xor
push
aas
shr
ins
loop
ins
or
imul
(bad)
cmp
nop
mov
add
push
fwait
adc
jne
add
enter
add
add
lock
mov
xchg
int3
sub
stos
xchg
cld
sub
rcr
lea
adc
ins
add
xchg
popa
lods
cmps
push
mov
pusha
cmp
(bad)
int3
xor
jne
outs
adc
call
sahf
test
jg
push
mov
cmps
div
adc
pop
and
test
jmp
mov
mov
add
mov
pop
inc
dec
ds
fadd
mov
jp
pop
mov
mov
jmp
mov
mov
jg
cmp
cmps
outs
loopne
jne
push
add
test
fs
cwde
sub
push
and
sbb
ss
push
pop
sub
rol
inc
rcr
loope
add
scas
fcom
sub
js
jbe
xchg
fild
inc
test
scas
add
mov
sub
pop
push
add
lds
dec
pop
add
pusha
dec
jmp
sub
int3
aam
es
mov
sbb
(bad)
cmp
adc
sti
or
cli
lahf
jne
sbb
xchg
inc
xor
jge
sbb
ins
jmp
xchg
sahf
dec
imul
mov
addr16
add
lahf
xor
push
in
mov
adc
leave
or
shl
or
stos
cmp
sbb
or
mov
add
ins
call
inc
popf
aaa
loopne
int3
inc
das
aad
mov
std
test
(bad)
sub
inc
sbb
retf
cmps
dec
lahf
or
jl
mov
push
pop
sar
mov
mov
push
lds
mov
sbb
pusha
inc
pop
loop
or
mov
dec
jle
popa
xor
sbb
cmpxchg
je
inc
in
je
clc
xchg
loop
cmps
sti
xor
call
mov
xor
(bad)
pop
dec
inc
loop
jae
xchg
cmp
fimul
fs
xor
dec
jbe
shl
sti
push
lahf
mov
push
das
push
mov
dec
test
fistp
fdiv
call
out
xchg
(bad)
into
dec
(bad)
xor
inc
std
pop
jle
sub
adc
test
adc
xchg
mov
push
aas
dec
mov
mov
sbb
mov
test
adc
cdq
jb
ret
cmp
push
xor
xor
jo
cmc
cmp
jecxz
xchg
push
dec
dec
xchg
inc
outs
ret
sub
fwait
dec
mov
mov
xchg
lds
imul
shl
xor
mov
sbb
sub
add
mov
test
les
dec
clc
or
test
out
movs
imul
mov
cmp
repz
pop
add
add
retf
in
pusha
add
sbb
pop
dec
push
in
sbb
jo
adc
test
jns
gs
iret
pop
cmp
and
out
and
or
push
xchg
sub
test
out
jle
or
in
fld
jo
add
mov
rol
inc
pop
adc
jecxz
xor
rol
jnp
addr16
(bad)
aad
xor
dec
fs
mov
lock
rol
jl
xlat
xor
ficomp
and
lds
mov
hlt
push
jg
fist
dec
pop
and
sub
sti
add
retf
in
out
or
inc
xor
mov
xor
std
shl
adc
repnz
fimul
aaa
add
or
(bad)
cmc
jle
adc
sbb
cmps
stos
leave
shl
bound
inc
int3
and
mov
xor
rcr
adc
movs
not
arpl
push
add
pop
and
stc
cdq
dec
lock
or
jg
inc
ins
pusha
stos
lea
ret
jb
das
adc
add
sbb
add
jle
out
pop
mov
lds
(bad)
cmps
dec
es
aas
in
out
sahf
cmc
and
push
imul
xchg
cwde
sub
sbb
pop
jbe
mov
jl
adc
stos
imul
pop
fsubr
jmp
sub
sahf
sahf
xchg
imul
retf
faddp
adc
push
aaa
sub
imul
ret
sti
(bad)
xchg
adc
jno
aaa
or
mov
mov
call
adc
push
aam
jle
xchg
cmp
cmp
push
push
ins
inc
sbb
test
pop
push
mov
or
cld
push
jns
sbb
das
inc
ficom
in
jbe
mov
sub
call
xchg
jmp
or
sbb
in
pop
(bad)
inc
and
jmp
pop
push
xor
in
lods
fistp
ds
in
add
(bad)
ret
fwait
add
xchg
mov
pop
pop
call
jns
out
test
neg
inc
es
sub
mov
jg
enter
dec
jnp
xor
xor
pop
pushf
mov
stos
mov
mov
add
xor
cmovo
inc
xchg
sbb
daa
sbb
cld
adc
pop
pop
jnp
xor
mov
xchg
lods
or
sbb
dec
jb
push
cmp
in
cmp
cmp
cld
xchg
mov
cdq
sbb
shl
and
cmp
mov
push
xor
sbb
fidivr
call
adc
dec
loope
cmps
inc
outs
daa
xchg
cli
xor
in
mov
jb
and
mov
out
mov
or
push
push
mov
fstp
push
jge
pop
out
cmp
xchg
xor
cmp
mov
out
jbe
movs
jb
in
imul
jno
push
mov
int3
mov
out
(bad)
lods
cwde
(bad)
lods
jmp
test
and
sbb
push
mov
iret
mov
xchg
fisttp
cmp
rol
add
leave
pusha
test
int3
ins
adc
aad
icebp
in
sahf
les
jge
xor
jbe
lahf
aaa
ret
fisttp
mov
pusha
adc
mov
dec
inc
add
or
sbb
adc
cmp
push
mov
mov
sub
inc
pop
cmps
cwde
sbb
out
xor
cli
mov
lds
outs
loope
lahf
lahf
mov
sub
mov
out
push
sub
jle
and
push
add
in
xchg
jno
jnp
stc
in
xor
aaa
movs
pop
std
xchg
out
jno
or
(bad)
jmp
sub
test
mov
std
dec
mov
jmp
out
ins
mov
loopne
mov
ret
movs
fmul
pop
jl
cmps
call
movs
aaa
push
out
test
xchg
jecxz
ja
movs
pop
loope
(bad)
test
ins
mov
push
ror
sbb
fcomp
push
call
js
leave
je
cwde
call
push
add
cmp
jo
in
movs
ret
push
dec
dec
mov
imul
loopne
call
push
mov
ins
(bad)
jno
test
mov
adc
mov
cdq
js
dec
jmp
or
mov
test
mov
ins
jp
push
and
mov
mov
mov
jno
outs
xchg
mov
adc
jbe
rcl
jmp
aas
shl
add
mov
inc
fcomp
pop
out
and
xor
adc
ds
loope
mov
mov
mov
stos
dec
popf
aad
cmp
push
pop
sub
ret
out
sahf
dec
bound
jge
dec
pop
mov
out
fist
cmp
test
rcl
sahf
inc
xor
cmp
(bad)
js
pop
je
push
push
stos
xlat
inc
inc
neg
mov
xor
xor
dec
rcl
out
sub
fstp
xchg
xchg
nop
or
jmp
jae
(bad)
inc
push
ins
jo
cwde
je
push
mov
arpl
mov
jecxz
push
fcom
jns
stos
js
fbld
scas
add
stos
jmp
cmp
dec
push
call
sti
mov
pop
xor
(bad)
jae
test
pop
xchg
mov
call
pop
pop
mov
and
pop
lock
jo
lods
jle
stos
mov
push
int3
(bad)
xlat
jmp
retf
out
mov
sar
pushf
jecxz
clc
fimul
addr16
inc
mov
pop
test
call
bound
push
mov
retf
sub
mov
xchg
icebp
cwde
sbb
jo
sub
sub
ins
ds
out
add
std
jmp
mov
pop
mov
int
shr
jns
sahf
out
scas
in
add
mov
int3
sbb
mov
and
lods
(bad)
push
or
xor
pusha
cmp
ins
inc
call
pop
cmp
(bad)
clc
jbe
mov
ror
stc
xchg
(bad)
(bad)
cvtdq2ps
jmp
ins
pop
pop
xor
push
xor
adc
mov
mov
lahf
and
adc
sub
adc
push
repz
loopne
pop
sub
int
cmp
aaa
test
sub
adc
push
clc
and
aaa
mov
sub
mov
inc
fadd
out
call
aad
push
lods
dec
test
ds
in
sub
adc
loope
(bad)
pop
std
or
fidivr
arpl
ds
mov
fiadd
call
jnp
and
sbb
and
mov
fcmovu
jmp
fs
push
xor
push
inc
or
cmp
(bad)
jnp
fwait
cmp
int3
push
inc
pop
dec
pop
dec
cmps
add
in
mov
inc
xchg
cmp
out
pop
jns
cmp
les
jne
jne
(bad)
pop
and
mov
and
bound
or
dec
or
mov
mov
icebp
std
dec
mov
mov
xchg
pop
dec
ds
inc
mov
(bad)
pop
pop
mov
pop
outs
and
push
xchg
inc
(bad)
aam
push
adc
stos
mov
cmps
mov
pop
popa
add
repz
inc
es
dec
xlat
sub
(bad)
pop
iret
fdiv
fs
cmp
shl
xor
xchg
sub
jmp
retf
scas
add
push
mov
jge
dec
sbb
test
inc
sbb
dec
push
mov
mov
sbb
sub
and
neg
ffreep
jmp
xchg
sbb
push
sbb
lds
fisttp
and
int3
push
nop
outs
mov
dec
cmp
jl
jmp
adc
xchg
lock
das
outs
rcr
cwde
int3
jg
pop
sub
cmp
pop
dec
loopne
hlt
(bad)
mov
pop
enter
popf
jge
es
adc
jle
(bad)
mov
in
pop
jecxz
shr
add
(bad)
jp
jp
or
mov
mov
inc
popa
lock
addr16
(bad)
push
retf
and
mov
mov
adc
enter
and
mov
enter
push
mov
sbb
jns
xchg
xchg
retf
rcl
fucomi
mov
sbb
sahf
int
jmp
ins
nop
push
aas
loop
jp
lds
leave
mov
inc
fsubr
stc
dec
in
cld
loop
xchg
stos
(bad)
adc
lods
test
repnz
xchg
mov
scas
retf
out
mov
and
cli
cwde
lds
mov
pop
mov
pop
add
mov
cmp
icebp
sbb
sbb
and
xor
jecxz
push
adc
aam
mov
xor
mov
test
mov
cmps
jb
pop
int
xor
push
popa
inc
pusha
pop
add
jmp
outs
mov
and
stos
aam
jb
or
xchg
and
retf
add
dec
xor
cmp
mov
lock
sbb
test
popa
xor
popf
or
dec
and
cwde
aaa
loopne
cmp
xchg
nop
mov
neg
pop
push
adc
pop
mov
mov
out
add
push
rcl
inc
or
jecxz
fisub
mov
or
mov
pop
jo
cwde
call
sbb
lahf
or
int
ret
cwde
or
imul
mov
out
push
gs
push
push
(bad)
mov
jmp
jnp
fstp
and
ins
pop
push
xchg
jb
int
das
aad
xchg
iret
mov
sbb
pop
loope
cld
and
adc
jns
ss
sub
inc
stc
(bad)
daa
in
push
mov
xor
add
aam
sar
pop
pushf
dec
dec
imul
mov
mov
call
inc
sbb
push
repnz
test
dec
popa
and
sbb
xchg
mov
iret
mov
xor
cdq
cmp
sub
lock
sbb
sub
cmp
xchg
jo
cmp
loop
dec
cmp
cmc
pop
add
std
pop
fsubr
daa
(bad)
xchg
or
lods
retf
sbb
mov
xlat
and
jmp
stc
ins
sbb
adc
xchg
or
loop
mov
scas
scas
cmps
adc
mov
sbb
jecxz
sub
fs
cmp
add
out
fwait
adc
jl
add
sub
aaa
push
pop
mov
sbb
cmp
ja
jmp
sub
cld
arpl
ins
pusha
mul
sar
xor
mov
or
neg
mov
push
pop
sub
or
fs
push
nop
and
sub
mov
popa
(bad)
cdq
sub
mov
(bad)
push
push
jbe
jo
fcomp
cmps
dec
loopne
out
ja
inc
pushf
adc
int3
neg
(bad)
out
lahf
sbb
xor
mov
or
mov
xchg
dec
or
push
dec
dec
add
sub
dec
dec
xchg
inc
mov
mov
and
fxch
out
ret
or
jecxz
sub
cmp
shr
dec
popf
adc
adc
lea
shl
out
jnp
aam
inc
push
je
(bad)
adc
pop
mov
enter
jge
xchg
aaa
das
dec
xchg
in
cdq
lds
cmps
test
ss
rep
sbb
pusha
aam
mov
pusha
inc
mov
lds
call
(bad)
popf
mov
xchg
repnz
ja
pop
mov
xchg
sub
shl
fwait
xor
dec
mov
iret
inc
sbb
adc
push
imul
ffreep
or
pusha
jmp
mov
cmp
enter
out
outs
or
xor
xchg
fld
pop
bound
xlat
cmp
je
aaa
add
mov
mov
iret
hlt
ins
mov
sar
jecxz
aaa
cmp
sub
pushf
cdq
cmp
inc
or
dec
ja
cmp
hlt
ficomp
xor
or
sbb
mov
into
cmps
scas
push
or
popa
push
(bad)
or
movs
js
dec
neg
mov
add
std
and
shr
dec
lock
jnp
dec
sub
cli
fild
ds
or
push
sysexit
int
int3
inc
xchg
scas
add
bound
js
fs
ja
js
je
sahf
aaa
pop
cmp
ret
or
aam
cmp
out
or
xchg
call
inc
pop
popf
bound
aaa
or
mov
mov
inc
enter
push
or
arpl
dec
ja
xchg
push
jg
ds
rcl
xor
push
adc
add
push
(bad)
dec
loope
and
mov
(bad)
push
cmp
loope
inc
mov
xchg
adc
in
cmp
sbb
mov
and
icebp
popf
pop
iret
adc
clc
mov
mov
xor
pop
sub
dec
stos
mov
cs
mov
mov
(bad)
xchg
inc
dec
dec
inc
push
ret
shl
movs
mov
test
ja
xor
call
daa
sub
xchg
(bad)
pop
sbb
pop
push
aaa
call
pop
cmp
mov
and
pop
aaa
bound
xchg
mov
mov
sar
leave
xchg
mov
arpl
add
and
mov
shl
add
js
cmp
jmp
pop
xor
push
xchg
or
mov
jno
pushf
gs
ins
shr
loope
push
pop
mov
stos
add
xor
mov
adc
mov
push
enter
mov
int3
mov
int3
fst
push
jo
cld
sub
xchg
ja
and
stos
retf
out
call
pavgb
jmp
xor
adc
add
and
lods
fild
bound
add
and
sub
fs
call
imul
aas
fisubr
(bad)
int3
cmps
ins
sbb
popa
xor
inc
(bad)
inc
inc
retf
lahf
in
test
or
shl
lock
xor
in
in
mov
mov
cmp
jg
cmp
scas
xchg
rcl
sub
add
or
fwait
push
adc
jns
cmp
or
fcmovb
xor
cmp
fsub
pusha
ss
sti
xchg
add
mov
shl
inc
and
jae
jae
push
out
or
push
inc
xor
inc
pop
xlat
sahf
pop
sahf
adc
ds
mov
outs
or
addr16
(bad)
jle
ror
ja
stos
and
xchg
imul
inc
aas
les
retf
(bad)
popf
sub
icebp
xchg
mov
jmp
cmc
xor
out
pop
in
sbb
cld
fdivr
hlt
xor
jle
push
(bad)
fmul
xchg
mov
add
jne
pop
idiv
lds
pop
xor
out
ins
arpl
jne
dec
movs
ret
cwde
lods
or
dec
mov
pop
dec
es
gs
inc
mov
sbb
xor
add
mov
jmp
stc
xor
scas
and
mov
ja
adc
adc
cmp
or
in
xchg
mov
jp
(bad)
push
xchg
in
cmp
push
or
adc
pop
xor
mov
out
inc
call
fldenv
cmp
mov
pop
daa
adc
aaa
(bad)
lahf
sbb
mov
push
fild
add
les
xchg
sub
xchg
add
mov
(bad)
cmp
retf
lods
or
xchg
cli
mov
push
add
cwde
xor
jl
mov
jb
icebp
lods
movs
dec
mov
and
movs
cli
loopne
test
fisubr
and
in
cmps
scas
lods
jecxz
js
jmp
sti
inc
jg
push
shl
sub
mov
fdivr
out
add
push
sub
ja
xchg
(bad)
cld
cs
lock
retf
call
(bad)
fidiv
pusha
das
adc
inc
mov
pop
mov
xchg
mov
pop
xchg
syscall
addr16
add
cwde
push
popf
jbe
pop
mov
dec
cmc
push
int3
sub
icebp
xor
adc
mov
js
add
jnp
cdq
mov
scas
rol
out
daa
xor
repz
movs
inc
repz
(bad)
xor
sub
mov
stos
arpl
rcl
mov
xor
sbb
std
fs
cld
(bad)
int3
sar
std
out
pop
pop
mov
pop
mov
add
or
nop
retf
inc
mov
addr16
ror
and
add
jbe
pop
stc
xor
into
sub
pop
jnp
adc
lods
and
es
xchg
sub
mov
fisub
cli
xchg
adc
int
jae
mov
push
mov
sbb
movs
cmp
js
sbb
enter
loopne
sub
sub
lods
jnp
jge
je
movs
ret
neg
(bad)
mov
jg
and
leave
pusha
push
mov
inc
test
mov
ror
mov
sbb
sub
fcom
sbb
add
push
std
sub
sahf
and
xchg
movs
aad
in
repz
rol
fsub
sbb
icebp
mov
pop
cld
pmulhuw
adc
inc
outs
jne
cmps
inc
or
leave
inc
xchg
jae
jno
or
movs
jecxz
jne
xor
retf
hlt
lods
cwde
pop
xor
lods
jb
mov
adc
jmp
xor
sahf
ins
jae
fstp
gs
repz
in
push
pop
loope
cmc
xchg
fisttp
jle
mov
fsub
and
add
cmp
push
inc
mov
add
sahf
add
test
pop
and
xchg
mov
jecxz
mov
ret
sbb
sbb
cdq
test
imul
cmp
cmp
movs
sub
mov
jg
add
(bad)
jnp
stos
and
push
lods
pushf
jl
mov
push
movs
inc
(bad)
enter
mov
mov
cli
cld
add
pop
aaa
adc
pop
fwait
dec
sbb
adc
call
pop
lods
lahf
ds
or
into
add
mov
xchg
sub
fsubr
mov
mov
call
xor
pop
in
outs
lock
push
push
add
je
push
mov
cmp
push
mov
inc
rcr
fcomip
mov
push
popf
iret
adc
imul
dec
test
or
mov
arpl
in
push
in
cmps
imul
xchg
ret
push
nop
inc
add
dec
xchg
icebp
pop
retf
inc
mov
mov
neg
xchg
pop
imul
mov
mov
xchg
nop
mov
ret
ins
or
fistp
sub
cmp
test
mov
aam
sub
sti
pop
daa
adc
mov
mov
(bad)
lods
push
je
mov
sbb
fcmovb
das
(bad)
xchg
adc
or
clc
add
xchg
xchg
aaa
stos
xor
mov
mov
add
outs
xor
sahf
pop
lahf
es
push
or
in
sahf
jmp
sbb
mov
imul
out
or
mov
outs
jmp
mov
shr
fidiv
xor
and
nop
fst
lahf
or
int3
aad
or
sub
xchg
pop
pop
and
movs
pop
sbb
(bad)
adc
inc
adc
nop
sbb
and
imul
test
fild
lock
inc
add
mov
fsubr
icebp
mov
or
and
mov
mov
inc
xor
cmp
scas
arpl
dec
inc
test
sbb
int3
fadd
push
xchg
shl
mov
push
or
push
xchg
add
pop
int3
int3
cmp
push
sbb
sub
and
inc
xor
cli
mov
sbb
inc
addr16
lods
cmp
push
mov
aaa
jmp
repnz
sahf
jp
fld
adc
push
push
mov
cli
not
(bad)
rcr
pop
jmp
mov
fdivr
or
dec
ss
jno
dec
add
(bad)
in
pop
cmp
push
jmp
pop
push
and
push
test
push
jecxz
imul
sub
push
jge
aam
mov
jg
imul
mov
dec
call
dec
sub
aas
add
int
(bad)
stc
pop
sub
xchg
sub
jecxz
scas
xchg
in
aam
jne
sbb
inc
enter
cmp
inc
ficom
jmp
retf
mov
jae
mov
inc
out
pop
jne
test
movs
cmps
aam
hlt
(bad)
pop
mov
mov
push
ret
fmul
rcr
scas
aaa
sub
mov
data16
jo
add
aaa
imul
out
inc
cdq
adc
or
cmc
gs
sub
adc
cmp
add
cmp
xor
mov
imul
shl
add
out
inc
stos
mov
add
(bad)
cmps
xchg
cmp
sub
push
sbb
xchg
xchg
dec
pop
sub
or
leave
sbb
push
icebp
mov
mov
mov
cmps
sub
sbb
enter
cmp
loop
lods
loopne
popa
jne
retf
cli
jecxz
hlt
cmp
push
adc
test
xchg
sbb
pop
leave
cs
xor
cmp
xor
and
call
pop
test
stos
rol
mov
rol
push
dec
push
jne
data16
add
jnp
outs
jb
popa
shl
outs
add
lds
pop
(bad)
in
into
js
inc
xchg
inc
jnp
cmps
adc
mov
fimul
dec
div
sub
dec
or
jle
sub
mov
mov
push
add
dec
xchg
cmps
in
outs
jnp
fwait
jo
(bad)
xchg
xor
rol
adc
fldcw
xchg
xchg
adc
adc
ds
mov
arpl
dec
sbb
mov
jl
jmp
mov
aam
push
add
sub
dec
jae
pop
push
mov
ins
push
mov
out
sub
add
mov
(bad)
jnp
push
push
mov
or
push
pop
sub
mov
cmp
cmp
jg
mov
push
xlat
push
arpl
cdq
cmps
mov
push
fidiv
push
psubusw
pcmpgtw
hlt
adc
push
mov
inc
dec
mov
jmp
mov
xchg
dec
pop
push
int3
int
clc
add
test
test
(bad)
mov
add
sbb
or
add
mov
xchg
clc
repz
into
fld
inc
scas
out
ret
scas
daa
sbb
push
xor
call
das
test
mov
pop
ror
call
ret
fst
pop
and
dec
scas
das
dec
gs
jo
xchg
es
add
mov
mov
add
mov
aaa
adc
fstp
cwde
dec
test
call
fcmovbe
add
(bad)
fstp
js
movs
enter
cmc
stc
ret
ret
daa
cld
aaa
fldcw
in
adc
mov
bound
sub
mov
jp
sbb
dec
jecxz
stos
jb
dec
popf
leave
std
stc
lahf
jb
gs
dec
stc
jecxz
jae
xchg
push
sbb
fmul
jne
dec
jmp
dec
cmp
mov
sub
rol
pop
loope
add
dec
mov
mul
push
xor
cmp
adc
(bad)
jne
or
jmp
mov
dec
das
sub
sub
pop
repz
lea
or
div
out
(bad)
mov
push
push
mov
es
push
cmp
je
xchg
mov
pop
cmp
jl
mov
push
pushf
and
in
sbb
test
gs
or
sar
inc
or
sahf
cmp
cmp
pop
jp
jl
and
or
ret
scas
lds
jmp
mov
fnsave
cwde
mov
das
xchg
push
shl
lods
xchg
cmc
mov
rcl
pop
out
rcr
lods
inc
xchg
sub
cmp
ret
xor
xchg
imul
sbb
mov
stos
iret
adc
mov
pop
mov
mov
mov
push
inc
lods
xchg
scas
sahf
xor
pop
pop
loop
loopne
xchg
(bad)
sti
xor
shr
dec
arpl
add
int
xor
sahf
xor
mov
mov
dec
movs
movs
iret
xor
(bad)
push
sub
fnstenv
cwde
scas
add
es
inc
adc
imul
add
or
mov
mov
cmp
xor
xchg
xchg
mov
cmp
inc
clc
fwait
xor
bound
pop
xchg
pop
xor
fisttp
(bad)
push
lea
sbb
bound
shl
retf
jecxz
retf
mov
rol
test
(bad)
push
push
inc
vpmacsdqh
xor
sbb
push
mov
ret
lods
or
mov
push
push
jbe
leave
ret
sbb
lods
mov
mov
mov
inc
test
jp
push
fs
mov
pop
xor
outs
add
pushf
(bad)
sub
dec
mov
adc
xchg
sub
lahf
dec
jmp
ds
inc
aas
jl
retf
pop
call
dec
fs
fwait
aam
outs
hlt
jp
shl
sub
add
enter
and
or
loop
jle
sbb
ja
jle
pop
in
out
in
aaa
(bad)
or
add
pop
shl
and
clc
enter
mov
cmp
fnstcw
icebp
std
push
sub
sbb
pop
call
jecxz
jge
or
cld
ds
aam
add
int3
jne
pop
pop
inc
pushf
cmps
xchg
mov
pop
cmp
mov
fstp
jo
cs
fsubr
adc
push
jno
int
cmp
cmc
popf
dec
sub
dec
jge
pop
mov
xchg
dec
dec
mov
mov
push
jg
call
xchg
pop
and
icebp
ds
out
push
clc
ret
aad
outs
push
jns
out
mov
enter
pop
mov
js
stos
jg
inc
mov
daa
mov
dec
into
(bad)
(bad)
in
mov
bound
call
sti
mov
mov
sbb
dec
xchg
inc
movs
xor
cdq
jl
mov
xor
or
test
cmp
sti
repz
lods
js
or
nop
imul
adc
cwde
mov
lds
inc
repnz
sahf
mov
lods
xor
add
or
and
and
lods
or
and
sub
icebp
sbb
mov
add
xchg
fsubr
loope
aad
or
popa
dec
xor
inc
mov
ret
cmc
adc
inc
jb
add
adc
dec
mov
cs
add
lahf
mov
mov
mov
outs
pusha
sbb
fcmovbe
stos
test
loop
pushf
jl
fild
jbe
dec
int3
out
xchg
shl
push
(bad)
in
mov
pop
dec
pushf
mov
sub
ja
jl
or
mov
imul
mov
in
retf
outs
or
cwde
and
stos
mov
(bad)
(bad)
lods
stos
inc
dec
int
clc
sub
add
retf
lods
jne
mov
sub
mov
adc
pop
xlat
hlt
(bad)
jb
xchg
sti
push
adc
enter
push
jmp
mov
jne
xlat
lds
xchg
cdq
mov
jbe
ss
jg
cld
mov
cdq
mov
call
sub
add
xor
mov
xchg
jl
in
call
or
sbb
xchg
xor
push
dec
push
mov
adc
dec
test
fdivr
bound
scas
nop
lea
es
sahf
js
dec
scas
mov
sub
pop
pop
leave
addr16
sub
and
ret
clc
inc
popf
std
sub
ins
mov
pop
and
mov
fsubrp
stos
jb
dec
lods
outs
jnp
es
mov
(bad)
or
xor
add
or
xor
or
pop
in
xchg
or
imul
sub
call
les
xchg
leave
mov
ror
scas
call
std
repnz
sbb
xor
and
movs
(bad)
cmp
retf
into
and
repz
mov
repz
sahf
adc
pop
aam
push
pop
adc
jns
aaa
sbb
push
xchg
dec
repnz
mov
or
out
clc
dec
das
aas
xor
sub
and
(bad)
push
xchg
inc
inc
cs
push
sub
lock
pop
or
jbe
pop
sub
mov
aas
pop
push
aam
lock
neg
inc
lods
pop
push
std
(bad)
sbb
scas
mov
or
fimul
fwait
test
jae
ret
dec
adc
in
dec
ret
pusha
inc
sbb
xchg
outs
daa
in
add
or
clc
mov
push
dec
sub
adc
dec
add
jmp
pop
xor
jmp
sar
dec
(bad)
jecxz
lds
popa
ds
xor
outs
xchg
aam
lods
jle
fld
mov
sub
scas
loop
hlt
pop
aaa
xchg
in
test
cs
jb
xchg
jp
add
sub
xchg
cmp
in
push
sub
mov
pop
(bad)
fwait
in
mov
sbb
xor
call
rcr
dec
imul
in
sbb
enter
mov
xor
ds
movs
lea
xchg
fwait
xacquire
cmp
xor
cmp
leave
test
nop
sub
fisub
mov
js
xor
pop
sub
xor
inc
mov
sbb
lods
retf
icebp
inc
add
aad
pusha
dec
add
inc
and
xor
cmp
cmp
nop
pop
mov
cdq
mov
mov
push
loop
out
sub
push
and
mov
mov
pop
test
mov
adc
fs
repz
dec
in
test
iret
fistp
cmp
mov
cmps
mov
mov
aad
aas
or
lods
sub
nop
loop
pop
out
clc
fs
mov
lods
add
push
add
cli
and
in
push
adc
sbb
cli
cs
dec
stos
mov
out
adc
loope
mov
sti
and
mov
cli
test
inc
call
mov
pusha
mov
pop
call
sbb
rol
mov
rol
nop
pop
test
scas
cmps
ja
dec
sub
xor
cli
add
cmp
xor
(bad)
jg
pop
stc
repz
xchg
or
jae
xchg
mov
das
out
shr
sub
cmp
mov
in
inc
cmp
xchg
movs
sbb
pop
inc
int
xor
les
cs
jns
pop
push
cdq
test
sahf
rol
inc
fisttp
dec
sub
jmp
data16
stc
cld
jno
ret
arpl
mov
push
pop
aad
addr16
add
and
in
enter
push
jmp
inc
rol
xchg
add
adc
pop
out
imul
dec
add
enter
in
shr
sbb
fwait
rol
mov
int
mov
in
add
mov
sub
adc
xchg
shl
sub
rcl
into
mov
jnp
and
sub
retf
ret
mov
push
jnp
imul
pusha
pop
pop
mov
sahf
dec
das
pop
xor
clc
adc
mov
sbb
push
test
pop
lods
cs
scas
pop
lea
sbb
sbb
sar
retf
add
shr
es
and
push
xchg
mov
inc
in
pop
popa
stos
retf
(bad)
pusha
add
inc
popa
(bad)
scas
scas
adc
add
add
push
dec
ret
sub
int
popf
out
inc
mov
dec
pop
xor
imul
xchg
push
xor
out
and
xor
lods
(bad)
xor
mov
fidivr
fiadd
jl
dec
pusha
test
mov
out
mov
sbb
retf
je
dec
adc
stc
or
fsubr
icebp
pop
add
jmp
dec
jb
lock
shl
(bad)
xchg
aam
cmp
cmp
ret
inc
sbb
retf
sbb
xor
sub
lds
xchg
mov
push
cdq
sbb
imul
or
inc
sbb
adc
mov
arpl
sub
das
dec
imul
ins
call
jo
pop
xchg
mov
xchg
cmp
jo
(bad)
cli
adc
push
shl
inc
xor
pop
pop
movs
sbb
add
pop
popf
stc
retf
ins
cwde
jle
adc
movs
rol
in
das
das
and
into
cmp
mov
sub
es
(bad)
or
stos
shr
btc
cmp
mov
xchg
sahf
cs
test
sar
lahf
pop
shl
cmp
stc
les
push
and
out
movs
pop
mov
sub
add
sub
cmp
call
mov
mov
into
mov
movs
retf
inc
out
lahf
sbb
imul
cmp
outs
cmps
out
ret
sbb
xchg
add
das
inc
mov
sub
xchg
push
sbb
xor
imul
add
iret
mov
bound
ins
imul
aas
pop
dec
mov
test
imul
sub
clc
(bad)
xor
scas
and
addr16
inc
(bad)
retf
xchg
pop
jecxz
jecxz
repnz
sti
scas
aas
in
stc
mov
stos
sub
or
xor
int3
sar
jecxz
(bad)
cs
adc
jns
pop
push
push
sub
or
dec
push
push
sbb
mov
mov
sti
leave
stos
jmp
sub
sub
push
jp
pop
in
call
xchg
add
nop
sub
fadd
xchg
cmp
sbb
js
xchg
add
jmp
mov
mov
or
int
xor
in
sti
and
cwde
sub
push
test
scas
xchg
mov
mov
jbe
mov
pop
xor
jb
jg
imul
mov
mov
call
in
xor
pop
movs
out
out
stc
mov
sub
(bad)
(bad)
lfs
cmp
cmp
imul
stc
and
inc
jecxz
mov
rcr
sbb
stc
std
mov
inc
std
in
pop
repz
stos
nop
pop
js
xchg
cdq
int
hlt
inc
sub
inc
xor
xchg
jb
ds
inc
cld
data16
pop
fwait
clc
xor
test
cmp
mov
push
imul
jo
cmp
and
fwait
mov
push
dec
shl
lods
unpcklps
sbb
pop
cmp
call
pop
cmp
je
sub
add
into
mov
js
mov
push
mov
or
js
icebp
dec
mov
inc
out
ja
fisubr
outs
cld
sbb
rol
mov
(bad)
shl
adc
ja
cmp
bound
jns
jns
cmp
mov
js
dec
push
xor
dec
test
xchg
mov
sti
popf
inc
adc
sbb
add
jb
(bad)
xor
add
pushf
fcom
cmps
in
dec
addr16
add
loopne
push
sbb
cs
in
and
mov
mov
jb
add
mov
sahf
adc
test
xor
cmp
lock
sar
add
xchg
and
out
push
out
pop
mov
(bad)
or
hlt
push
std
enter
es
mov
or
or
sbb
aaa
dec
test
ss
mov
mov
dec
push
adc
fs
movs
fisubr
loop
out
clc
inc
inc
jmp
inc
add
cmp
jnp
jno
jmp
movs
in
call
mov
les
and
push
or
pusha
adc
mov
adc
in
xchg
out
mov
stc
adc
nop
adc
jno
mov
push
pop
mov
test
test
or
fmulp
xor
xchg
fisub
dec
adc
pop
add
inc
arpl
mov
mov
add
fistp
mov
pop
xchg
pop
push
dec
(bad)
lods
into
ss
repz
adc
das
xor
loop
in
xchg
and
loope
jmp
int3
imul
addr16
push
xchg
pop
jge
xor
nop
mov
adc
jne
frstor
(bad)
dec
pop
xchg
sub
mov
ins
adc
cmp
push
retf
pop
xchg
sub
jnp
pop
push
adc
ins
ret
fcom
push
xchg
dec
ins
jnp
(bad)
cwde
or
sbb
and
xor
inc
or
aam
cmp
imul
std
mov
mov
cld
mov
cwde
sub
in
sub
loop
push
mov
xor
xlat
pusha
adc
jle
push
jle
jns
(bad)
jl
std
pop
mov
mov
std
(bad)
sti
in
nop
xor
(bad)
int3
test
inc
fucomip
je
movs
neg
inc
pop
inc
in
push
mov
outs
lahf
cld
dec
or
cmp
add
cs
pop
(bad)
sbb
dec
adc
mov
loope
sbb
cmp
outs
mov
aad
cli
sbb
shl
push
enter
sbb
cmp
mov
mov
stc
jge
xchg
jns
es
mov
call
mov
mov
(bad)
or
cmp
push
jmp
mov
add
aaa
add
enter
mov
scas
push
(bad)
dec
dec
or
mov
lock
mov
out
test
sub
jp
sbb
jmp
jne
mov
les
loop
xor
into
aad
in
dec
das
push
mov
test
scas
pop
lock
stos
lods
std
pop
mov
clc
mov
push
sar
or
fisubr
adc
cld
pop
mov
stc
mov
loop
loop
push
call
loop
loope
or
sub
jmp
fstp
into
sub
xchg
nop
sbb
add
mov
push
loop
aas
cs
fst
sub
push
xor
and
or
mov
mov
sub
sbb
or
cmp
leave
mov
sbb
jbe
pop
add
xchg
cmp
cmp
inc
fdivr
pop
retf
rcl
(bad)
xor
call
mov
imul
in
add
sub
push
add
lock
cdq
lahf
outs
(bad)
fwait
push
jmp
cwde
cmp
inc
push
mov
push
xchg
stos
pop
xor
inc
xchg
fwait
mov
xchg
call
int
dec
add
push
sub
inc
mov
stos
and
mov
inc
js
in
xchg
push
xchg
push
xchg
aam
cwde
sar
dec
xchg
in
and
jno
fstp
mov
push
push
sbb
jecxz
ds
leave
cmp
add
pop
test
jl
inc
push
sbb
push
movs
test
shl
xchg
xchg
xchg
ja
ja
daa
jb
mov
ins
add
cmp
adc
mov
dec
bound
or
lods
nop
(bad)
mov
call
mov
mov
imul
or
xchg
retf
mov
cmp
cmp
ja
lea
jo
jmp
out
mul
test
cli
int
ja
mov
cmp
fadd
popf
pop
and
cmp
push
popa
xchg
sub
mov
cli
ficom
jecxz
mov
jno
repnz
jg
popa
cwde
sub
push
(bad)
adc
ja
mov
mov
je
jns
inc
sahf
and
call
push
mov
jge
fdiv
cld
sub
pop
sar
push
jecxz
pop
push
ret
mov
jp
pop
imul
ss
out
add
fwait
and
ja
mov
xor
jbe
or
(bad)
mov
dec
sbb
push
inc
lock
add
xchg
inc
ins
mov
cmc
daa
or
loope
dec
ret
xchg
dec
push
retf
pop
mov
movs
(bad)
push
shr
mov
inc
and
jb
fs
out
add
repnz
sub
js
es
fs
xchg
cmp
bound
inc
add
or
mov
div
cwde
xor
mov
or
and
sbb
mov
movs
jmp
mov
or
call
mov
jbe
jno
stos
mov
pop
jl
cmps
sub
push
sub
cli
fucom
hlt
icebp
pop
fs
jge
pop
daa
mov
xchg
cmp
mov
in
out
sahf
fidivr
call
dec
pop
(bad)
stc
jecxz
sbb
or
inc
mov
jno
lds
dec
add
das
mov
jae
or
push
je
jns
pop
mov
leave
jl
inc
add
sahf
lds
call
rcr
dec
retf
sub
mov
fisub
dec
mov
lods
xor
add
outs
sbb
stos
xchg
ins
pop
out
jecxz
sub
add
mov
dec
dec
mov
out
es
movs
fs
jmp
clc
int
(bad)
mov
jmp
mov
iret
cli
mov
pop
and
out
fnsave
pusha
mov
lahf
dec
neg
addr16
push
lahf
cdq
out
pop
jb
sbb
dec
jnp
inc
add
mov
sbb
mov
dec
test
add
dec
fst
mov
sub
inc
xchg
xor
pop
or
aas
push
(bad)
mov
push
fbstp
ret
(bad)
sub
mov
pushf
dec
mov
mov
cs
add
mov
std
stos
xor
lahf
pop
push
fidiv
lea
pop
(bad)
out
out
ss
imul
rol
scas
cmps
out
jae
cmp
das
pop
(bad)
(bad)
mov
clc
and
inc
push
js
push
add
repnz
sub
jl
sbb
ins
or
ss
mov
pop
xor
movs
aas
xchg
or
sbb
sub
inc
cmp
enter
dec
arpl
push
mov
xchg
xlat
out
loope
out
cdq
je
jmp
jae
sbb
mov
and
mov
shr
icebp
lock
out
pop
mov
add
xchg
stos
mov
lahf
arpl
add
ins
enter
mov
cmp
cdq
in
enter
jge
enter
or
inc
inc
mov
push
arpl
cmp
mov
adc
popf
aas
dec
pop
mov
or
fcomp
cs
cmp
aaa
pushf
sub
jb
sub
fbstp
ss
pop
xchg
retf
in
sahf
jle
add
jge
fisubr
in
push
xor
out
adc
aad
dec
sbb
cmp
les
aas
arpl
pushf
addr16
pop
mov
dec
mov
jmp
mov
push
sub
rcr
int3
mov
into
stos
ins
mov
div
in
sub
push
sub
mov
adc
enter
xor
in
test
xor
or
repz
or
mov
fild
aas
lea
and
ret
fucom
sahf
push
inc
and
in
(bad)
icebp
aam
mov
fs
jbe
and
lea
cli
call
adc
cmp
mov
test
xor
add
mov
call
or
and
inc
out
fisttp
mov
adc
mov
pop
mov
pop
xor
(bad)
enter
sub
mov
inc
add
push
femms
sar
adc
(bad)
cld
test
pop
xor
mov
mov
mov
movs
pop
adc
les
jbe
mov
pop
call
leave
loope
enter
mov
push
aad
sub
std
mov
cmc
jne
push
mov
les
mov
(bad)
retf
test
inc
adc
jl
push
or
pop
jns
fbstp
js
pop
push
sub
inc
cdq
fldenv
aam
shl
dec
in
dec
ds
ficomp
in
cmp
repnz
cmps
cmp
hlt
in
(bad)
push
pop
adc
ror
push
retf
inc
push
add
dec
jns
mov
pop
popf
aaa
sub
daa
(bad)
xchg
not
test
and
cmp
shl
sar
fs
push
fdivr
xor
js
add
fldenv
test
clc
enter
shl
push
js
ins
sub
push
clc
lods
or
cmps
pop
outs
cli
test
imul
sbb
inc
fistp
stos
clc
push
adc
xor
dec
xchg
(bad)
pop
stos
push
stos
sbb
sub
add
mov
sbb
shl
mov
(bad)
mov
mov
pop
ret
std
movs
in
push
sbb
adc
add
cs
add
and
or
dec
or
or
jge
les
push
xchg
(bad)
xor
movs
dec
retf
cmps
push
imul
dec
xlat
or
mov
jns
pop
fs
inc
xchg
mov
xchg
mov
sub
aaa
mov
out
xor
int3
(bad)
mov
cmp
inc
inc
lea
(bad)
fimul
or
cmps
sbb
push
add
imul
push
cdq
or
loope
xchg
iret
call
xor
xchg
push
cmp
stos
jle
add
xchg
mov
dec
loope
movs
push
push
xor
xlat
les
sub
cwde
jle
iret
fsubr
xor
push
(bad)
mov
push
pop
cwde
repz
jmp
mov
mov
jl
pop
add
xor
jnp
int
pop
sub
test
pop
(bad)
pop
fwait
xchg
push
adc
push
xchg
dec
fst
mov
jbe
jmp
mov
push
adc
mov
jbe
(bad)
sbb
xor
scas
cmp
mov
mov
push
dec
hlt
into
jg
int3
inc
(bad)
lock
ins
out
cmp
cld
movs
or
sbb
into
jnp
js
jbe
in
cmp
ins
add
ror
cmps
in
neg
js
fstp
or
stos
movs
dec
ins
sti
out
ret
mov
int3
cmp
pushf
jae
jp
inc
dec
or
ins
push
addr16
stos
mov
push
push
dec
jb
inc
mul
test
sub
lods
xchg
ror
mov
arpl
(bad)
push
push
add
int3
into
(bad)
lock
cld
jg
or
mov
loop
pop
mov
sub
popa
enter
jle
out
dec
sub
cwde
fidivr
aaa
jb
mov
xchg
inc
js
imul
mov
cmps
dec
mov
xchg
lea
jne
xchg
outs
inc
loope
enter
push
cdq
pop
loope
aas
aad
sbb
inc
(bad)
pop
retf
mov
adc
push
xchg
cld
xor
inc
aaa
pusha
adc
movs
out
mov
mov
or
out
fcmovnu
mov
inc
push
into
xchg
mov
jns
pop
sub
out
jecxz
loopne
push
cmp
mov
push
inc
(bad)
push
gs
mov
test
sar
mul
xchg
aad
xchg
and
mov
pop
cmp
push
sub
neg
cmps
mov
jbe
inc
aam
(bad)
call
les
dec
push
push
stos
pop
push
std
mov
dec
leave
psubd
popa
xor
(bad)
pop
xor
mov
sub
jmp
dec
cmp
cmp
sbb
call
mov
les
add
out
sbb
pop
pop
outs
sbb
push
push
lea
inc
cmp
inc
and
and
pop
mov
fadd
arpl
dec
mov
aad
mov
jl
int3
stos
push
movs
mov
hlt
mov
jmp
mov
in
pushf
mov
xor
lds
or
cmp
imul
add
cs
inc
shl
push
fcmovb
stos
in
and
fnstsw
ss
sub
jmp
push
out
xor
sub
pop
clc
xor
or
mov
adc
mov
test
in
or
push
arpl
js
pusha
push
xor
cs
je
ret
jecxz
jge
call
jecxz
mov
push
js
fwait
(bad)
sub
push
or
push
push
jns
sbb
ins
mov
add
test
outs
jbe
fidivr
stos
push
add
out
repz
lods
add
pop
or
add
ficom
or
(bad)
mov
ins
test
xchg
jns
adc
inc
pushw
das
shl
enter
(bad)
stc
sub
ds
scas
push
xor
add
sbb
mov
stos
test
out
icebp
mov
in
ja
jmp
retf
xchg
sahf
inc
in
add
mov
xchg
enter
push
inc
ja
cld
popa
jbe
pusha
and
test
das
pop
nop
xchg
scas
jl
repz
sbb
call
loopne
sub
mov
cmps
push
jne
mov
adc
adc
ror
xchg
jmp
leave
add
add
cwde
mov
add
mov
fs
ja
add
inc
aad
lds
popa
sbb
push
pop
mov
pushf
mov
fistp
cwde
xchg
add
mov
ror
mov
cmp
dec
xor
mov
pop
jnp
jmp
cwde
out
add
hlt
iret
rcl
push
push
or
jmp
icebp
mov
and
xor
sub
push
call
jecxz
imul
arpl
adc
arpl
call
xchg
mov
lods
ret
xor
imul
mov
mul
or
lods
xor
out
nop
pusha
jmp
mov
jb
inc
push
cmps
jo
mov
and
out
out
cmp
push
sti
ffreep
nop
cld
pushf
out
stos
push
arpl
ret
mov
in
mov
cmp
lds
mov
inc
in
pop
sti
push
ffreep
sub
movs
inc
xor
sub
cli
outs
test
dec
dec
push
mov
(bad)
pop
mul
mov
push
xchg
xchg
xlat
and
pop
fbstp
add
pop
or
add
mov
popa
xlat
cdq
xor
cmc
mov
lods
outs
(bad)
cmps
test
or
fisubr
test
test
mov
mov
inc
aas
dec
pop
ud2
aaa
repnz
gs
bound
xchg
and
shl
and
outs
or
mov
add
inc
arpl
call
ins
mov
enter
aaa
imul
push
jecxz
gs
push
lock
push
xor
add
pop
sub
mov
addr16
iret
stc
data16
sub
mov
mov
daa
sbb
iret
loope
adc
inc
push
pop
pusha
stos
mov
lds
pusha
enter
dec
mov
xchg
ds
add
es
adc
retf
stos
push
push
mov
sbb
fstp
mov
js
or
mov
iret
pushf
cmp
push
and
es
clc
mov
cmp
sub
repz
jmp
mov
add
cmc
call
out
bound
sub
pop
call
cmp
jne
frstor
xchg
or
ss
add
mov
cmc
dec
pop
js
scas
inc
iret
jmp
inc
ret
mov
enter
and
sbb
stos
cmp
and
enter
and
xor
stos
dec
sub
addr16
call
mov
iret
cmp
jmp
pop
icebp
pop
(bad)
jnp
iret
cwde
iret
shl
inc
dec
dec
daa
pop
mov
xchg
popf
inc
push
shl
sub
pusha
loope
add
call
mov
jbe
mov
lock
cmc
xor
sbb
xchg
sar
add
scas
or
out
cmps
ret
loopne
and
and
icebp
xchg
and
dec
imul
push
push
mov
in
stc
out
repz
sub
aas
movs
add
cwde
ror
sub
or
inc
mov
into
cwde
(bad)
retf
add
xor
movs
dec
or
sbb
movs
inc
xchg
inc
push
jae
pop
jbe
jb
popa
xchg
lahf
pop
pop
int
lods
mov
push
mov
dec
or
lock
xchg
out
inc
sbb
add
dec
retf
pop
pop
arpl
cmps
mov
sbb
imul
es
data16
mov
stos
(bad)
mov
jno
or
bound
mov
fcomp
cmp
sahf
ficomp
jae
iret
dec
imul
inc
pop
mov
hlt
or
lock
aam
jmp
adc
jns
ret
xchg
scas
xlat
sbb
cmps
and
and
mov
push
push
and
lahf
(bad)
pusha
mov
movs
stc
jge
ins
movs
js
jno
ret
jle
in
movs
mov
stos
or
int
in
inc
cdq
in
add
fwait
loopne
push
pop
cmp
loop
fwait
add
je
or
fild
ins
add
adc
mov
iret
mov
int3
jle
pop
fiadd
push
fnstcw
dec
push
dec
cmps
mov
jns
pop
and
das
xchg
inc
int3
movs
adc
push
inc
int
stc
xor
and
jl
mov
and
pop
jnp
push
(bad)
popa
xchg
xor
retf
in
movs
fwait
xchg
mov
sub
jmp
js
adc
xchg
sbb
fs
jg
cmp
adc
inc
push
or
scas
fisub
lds
fsub
adc
idiv
ins
jp
(bad)
jmp
call
push
mov
push
xchg
cmc
mov
sub
ja
jbe
xchg
sbb
test
ret
add
mov
pop
jge
jns
bnd
shl
stos
mov
mov
mov
inc
mov
cli
cdq
ins
pop
iret
int
popa
sbb
test
inc
mov
add
add
dec
add
mov
jbe
ret
jge
out
sub
call
or
clc
cs
call
fidiv
mov
js
leave
xchg
jl
dec
ret
jnp
push
out
fidiv
xchg
or
rcr
jp
iret
fcmovbe
mov
sub
cdq
lods
xchg
xchg
and
adc
idiv
cdq
pop
sbb
outs
iret
adc
xchg
ss
cmp
sub
out
fwait
aam
mov
test
outs
rcr
mov
adc
sbb
jmp
jge
mov
push
push
inc
enter
cmp
fld
mov
(bad)
mov
je
mov
or
idiv
ror
push
push
in
mov
pop
xchg
dec
mov
xchg
mov
movs
outs
push
out
ds
xchg
push
test
outs
rol
aam
mov
ficomp
sar
adc
jnp
retf
outs
xor
movs
repz
pop
inc
loop
and
hlt
fs
mov
cmc
cmp
aas
push
sbb
jne
aaa
dec
mov
cmp
jecxz
push
or
adc
push
mov
mov
mov
xor
adc
cwde
jnp
ins
push
and
fimul
fidivr
mov
add
(bad)
sub
jne
and
pop
sub
retf
adc
jl
dec
pop
sbb
call
cmp
int
mov
test
mov
sti
sahf
in
sub
inc
ins
and
jno
(bad)
and
pop
push
arpl
sub
stc
jg
daa
inc
pop
dec
jp
je
inc
ins
je
dec
test
mov
or
aaa
or
mov
or
cmp
rcl
popa
pop
loop
int3
test
mov
inc
test
clc
jno
adc
fsub
mov
icebp
repz
inc
xchg
ret
sbb
push
shl
clc
and
sub
mov
dec
pop
push
cmp
pushf
dec
(bad)
push
push
pop
(bad)
int
and
push
lea
or
cld
xlat
dec
and
lods
pop
add
das
pusha
dec
dec
cwde
or
rcr
(bad)
push
cwde
les
aad
int3
mov
pop
and
mov
out
jae
lahf
inc
(bad)
cmp
sbb
pushf
movs
xchg
lahf
xor
adc
mov
xor
jmp
enter
mov
imul
dec
mov
push
and
xchg
out
adc
push
clc
sub
mov
xor
ss
ja
adc
test
sbb
xchg
xchg
enter
sub
fs
add
pusha
pushf
sbb
jo
pop
xchg
cdq
test
call
adc
rcr
push
push
jl
(bad)
test
ret
sub
adc
out
and
outs
adc
xchg
or
dec
scas
push
movs
add
sbb
retf
push
mov
fdivr
or
and
loopne
jl
movs
mov
xchg
mov
sub
add
inc
cld
push
ret
dec
mov
daa
leave
mov
pop
pop
pop
movs
push
sub
lods
test
dec
mov
leave
mov
jle
mov
push
loopne
push
cmps
shl
shl
int
xor
hlt
xchg
add
cld
mov
xchg
dec
xor
or
mov
xchg
cmp
push
fcmovne
and
sub
test
sbb
and
enter
and
jb
xor
fstp
sub
mov
and
std
nop
not
mov
pusha
fsub
sbb
movs
fist
ds
sar
jle
cmp
ds
loope
lock
push
pop
test
mov
xchg
or
outs
mov
adc
sbb
ss
xor
fistp
mov
xor
and
or
adc
xchg
sbb
rol
mov
lock
jp
cdq
aas
bound
cld
aaa
scas
pop
xchg
ins
mov
mov
mov
out
add
adc
jo
ret
repz
mov
jmp
in
adc
sub
mov
arpl
lahf
push
and
adc
lock
je
mov
movs
and
jo
dec
retf
push
movs
stc
jne
mov
les
push
jno
dec
imul
test
dec
sbb
loop
add
je
and
jp
rep
adc
cmp
cli
cld
add
movs
xchg
jb
les
and
leave
gs
imul
and
pop
ja
ss
push
pop
push
cld
leave
rcr
xor
fwait
push
repnz
pop
dec
or
sbb
sbb
or
xor
jle
mov
adc
lods
push
cdq
in
mov
cmps
sub
sub
xor
(bad)
dec
repnz
adc
in
inc
je
adc
inc
inc
retf
cmc
aam
mov
xchg
add
push
push
cmp
xchg
sahf
jno
pop
fmulp
fsubr
fwait
xchg
(bad)
jp
sub
fcmovnb
xor
sbb
dec
aad
sbb
pop
jmp
ds
xchg
js
ret
and
cmp
mov
cmps
xor
imul
cmp
pop
mov
dec
fcom
mov
data16
dec
xor
add
fild
mov
in
cmp
sub
les
jge
movs
idiv
sub
test
jbe
mov
in
sbb
adc
add
sbb
outs
outs
add
mov
mov
dec
mov
aaa
xor
mov
jnp
xchg
or
mov
sbb
jmp
addr16
mov
(bad)
imul
icebp
inc
xchg
push
add
add
test
cdq
xchg
rol
mov
mov
ret
mov
or
inc
sub
and
mov
cmps
std
das
test
push
imul
pop
lahf
jg
xlat
int
cmp
mov
test
xchg
add
out
inc
pop
fisub
xlat
xor
movs
jge
(bad)
jnp
inc
iret
add
mov
xchg
test
test
in
mov
jb
clc
xchg
call
jp
leave
cmp
xchg
and
adc
movups
scas
mov
rcl
ja
ror
in
push
and
test
and
pop
mov
or
rcl
push
movs
les
repz
inc
fnsave
and
mul
int
mov
adc
jns
inc
scas
jmp
add
adc
sti
retf
(bad)
or
pop
sbb
or
outs
jnp
dec
repz
xor
jns
dec
cmc
aas
push
int3
xor
jl
pop
inc
push
jmp
movs
or
inc
daa
push
mov
push
and
inc
ins
cmps
and
push
push
sub
lahf
hlt
push
xchg
pop
push
cs
or
and
mov
(bad)
(bad)
shr
shr
dec
add
or
xor
dec
loope
sub
and
inc
lods
add
adc
push
jno
out
inc
jne
aas
(bad)
inc
out
ins
enter
pushf
mov
jne
pop
adc
push
fisttp
rcl
mov
(bad)
test
das
mov
dec
lahf
or
push
xchg
outs
xor
(bad)
je
in
mov
xor
jns
xor
mov
pop
call
lds
fisub
call
test
push
push
push
aas
fsub
pop
pop
mov
cmp
or
daa
inc
push
daa
test
les
or
adc
mov
mov
fiadd
cmp
fdivr
(bad)
call
mov
push
stos
test
stos
(bad)
mov
mov
mov
sar
mov
aaa
jno
jno
or
and
jl
sbb
loopne
aam
mov
imul
ins
inc
stos
jge
rol
and
adc
pop
xchg
xchg
or
pop
push
adc
mov
cli
(bad)
xor
mov
xlat
iret
or
cmc
enter
sbb
jecxz
loopne
or
aam
xor
and
pushf
stos
fisttp
cwde
dec
add
les
aas
cmp
stos
popf
dec
inc
lea
sbb
(bad)
(bad)
cmc
xor
mov
mov
in
inc
data16
xor
mov
mov
hlt
push
std
xor
addr16
mov
aad
hlt
pop
or
adc
push
ret
mov
xchg
dec
mov
scas
call
xchg
mov
fbld
ds
cmp
jnp
fstp
bound
and
fadd
cmp
ss
sar
out
shl
mov
xchg
jb
movs
test
mov
cmp
iret
lds
stos
mov
ins
int
loope
int3
stos
ror
lods
rcr
fucomp
pop
sub
dec
cmp
add
jb
pop
mov
sub
out
jo
cs
xor
fstp
adc
xor
sub
add
std
lods
mov
sar
sar
push
ror
jle
fs
dec
or
in
out
retf
neg
dec
fs
(bad)
push
mov
fsub
call
add
push
mov
dec
push
daa
rcr
sahf
fstp
dec
or
ja
out
in
inc
test
mov
pushf
lods
xchg
push
addr16
or
mov
or
mov
jle
jge
std
sub
mov
push
sbb
mov
loope
inc
ins
mov
and
loop
mov
(bad)
test
mov
mov
popf
add
call
mov
call
and
pop
adc
mov
retf
xchg
cmps
xchg
jmp
sahf
lahf
les
mov
push
ret
ret
(bad)
mov
jmp
push
in
push
and
ss
pop
rol
pop
pop
xchg
cwde
jae
aam
jo
imul
xor
or
(bad)
and
xor
lds
lock
or
sti
jmp
lock
es
in
test
mov
xor
sbb
sbb
inc
pop
adc
dec
fsubrp
jle
imul
int3
fidiv
mov
push
xchg
aas
pop
cmp
inc
jge
ffreep
fisubr
jmp
icebp
shr
jbe
mul
add
cli
mov
adc
jecxz
dec
or
or
add
add
popf
(bad)
jnp
pop
or
adc
pop
movs
dec
inc
movs
stos
inc
aam
xlat
lahf
ja
(bad)
cmp
aas
lahf
movs
jg
xlat
sub
ss
mov
jns
sub
inc
push
push
push
dec
daa
jnp
repnz
retf
and
sub
dec
int3
mov
sub
sbb
add
cld
mov
mov
fidivr
fwait
push
rcl
push
retf
push
call
pop
mov
mov
adc
outs
in
jno
adc
sub
pop
inc
movs
dec
imul
pop
pop
sub
mov
out
pop
repz
hlt
xchg
xor
retf
sub
xchg
push
in
dec
inc
adc
mov
add
popf
sub
cmc
jb
enter
lock
cmp
mov
gs
fisub
addr16
(bad)
pop
(bad)
add
xchg
stos
push
xchg
cld
jg
mov
sub
retf
mov
xor
or
mov
fldenv
dec
(bad)
jl
pop
cmps
mov
cwde
pop
inc
adc
push
loop
mov
stos
data16
adc
frstpm(287
sub
out
adc
mov
sysenter
pop
pop
cli
fst
pop
cli
pop
js
jecxz
fsub
jg
and
xchg
or
jno
inc
jno
xor
push
and
cmps
xchg
inc
mov
movs
push
ins
mov
add
xchg
push
nop
sub
pop
push
cs
sti
jb
or
lods
dec
out
addr16
lock
test
data16
call
sub
es
xchg
adc
dec
inc
mov
call
mov
jg
xor
cmps
lea
ins
jbe
sbb
xchg
xor
xchg
mov
leave
and
xchg
lods
cmc
mov
cmc
push
inc
dec
dec
jg
out
mov
push
call
ret
clc
cmp
in
and
(bad)
outs
and
retf
imul
and
lods
and
and
pop
xlat
xchg
mov
or
aam
pop
and
(bad)
rol
cmps
adc
inc
mul
cdq
jns
lds
cs
xchg
dec
and
sub
sbb
rol
xchg
xchg
or
hlt
cmp
dec
jle
loop
psubusw
xchg
sbb
jge
dec
cmp
jle
mov
movs
sar
bndldx
les
jp
mov
jnp
fdivr
leave
sub
push
shr
sbb
mov
fwait
cmp
cs
jle
jge
dec
pop
pushfw
pop
ins
ins
mov
add
jge
stos
retf
pop
push
pop
cli
xor
cmp
arpl
mov
cmc
push
push
xchg
int
das
retf
sbb
daa
xor
and
and
push
arpl
clc
mov
adc
aas
mov
cli
mov
pop
loope
clc
in
mov
cmp
inc
imul
xlat
imul
dec
mov
fistp
mov
das
in
(bad)
out
jo
fiadd
jbe
sbb
aas
fs
jmp
aaa
fist
neg
(bad)
shl
ds
jmp
test
pushf
(bad)
outs
jmp
aad
hlt
jecxz
xchg
inc
hlt
arpl
out
dec
inc
out
inc
inc
fbstp
lea
mov
(bad)
out
push
rcr
or
pop
dec
sbb
cwde
dec
aaa
mov
inc
push
or
shl
imul
retf
cwde
enter
jne
sar
retf
ins
pop
jns
lea
jae
das
pop
popf
out
cli
adc
(bad)
jno
test
xor
cmc
ret
push
arpl
rcl
(bad)
or
mov
ja
or
adc
xchg
daa
push
jg
pusha
fdiv
movs
jnp
xor
aam
ins
sbb
rol
stc
(bad)
push
out
jle
mov
sbb
xor
xchg
jae
and
xchg
sbb
sbb
jmp
or
push
and
pop
pop
sbb
xor
ja
xchg
ret
inc
xor
fs
inc
loop
lds
rcl
out
xor
retf
adc
mov
and
xor
sub
jnp
jae
call
movs
into
inc
es
leave
aad
out
jmp
inc
shr
pusha
xchg
cmp
pop
or
clc
jb
aam
sar
ins
gs
outs
call
in
neg
stc
shl
lds
cdq
jp
jecxz
into
aaa
jno
fcom
mov
xor
repnz
mov
push
inc
out
int3
adc
adc
adc
push
ret
or
push
dec
repnz
push
push
outs
ss
outs
(bad)
jmp
lds
daa
push
xor
pop
in
pushf
sbb
int3
dec
jmp
cmc
inc
es
cld
xor
xchg
out
jno
adc
lds
jno
mov
adc
mov
fst
(bad)
adc
sbb
xor
and
cwde
mov
(bad)
in
imul
inc
or
cdq
(bad)
fdiv
aam
test
je
sub
and
xor
push
daa
mov
xchg
clc
shr
ja
jmp
in
enter
stos
fucomi
shl
pop
dec
cmp
movs
mov
xor
push
popa
inc
mov
mov
fimul
ds
add
mov
leave
xchg
pop
xchg
mov
cmp
adc
dec
call
mov
xor
cs
mov
ret
lods
movs
jp
mov
xchg
sbb
ins
or
shr
inc
iret
ss
pop
sbb
adc
xor
mov
pop
xchg
ret
pushf
fsubr
adc
repz
pop
les
hlt
jge
xor
outs
push
pop
jg
xlat
mov
arpl
push
and
mov
pop
jne
jns
data16
inc
push
dec
jmp
mov
cmp
fdiv
dec
add
cli
icebp
inc
or
jbe
jecxz
jmp
adc
mov
xor
lods
or
push
pop
push
pushf
cdq
(bad)
pop
jp
adc
test
cmps
mov
movs
jne
mov
daa
(bad)
leave
iret
gs
sahf
jl
sub
shr
and
sahf
dec
sbb
add
and
cmps
jge
cwde
sbb
scas
add
mov
daa
out
call
(bad)
fdivr
movzx
pop
add
sbb
mov
ja
pop
loopne
scas
ins
fimul
(bad)
mov
pop
mov
cmp
sbb
scas
call
jbe
sahf
(bad)
adc
and
sbb
(bad)
scas
inc
adc
je
and
mov
test
ret
inc
pop
cmc
in
jno
shr
xor
and
sbb
dec
xchg
or
pop
xor
sub
pusha
sub
xchg
sbb
ss
inc
in
imul
loopne
icebp
fdiv
jns
sbb
fsub
pop
jmp
sub
cmp
fsub
or
scas
inc
mov
outs
mov
mov
sbb
pop
pop
inc
jno
dec
jbe
mov
shl
lods
sti
push
dec
jo
movs
mov
cld
cmc
test
stos
jmp
mov
jnp
frstor
jge
sub
adc
enter
mov
(bad)
stos
cmps
or
in
es
sbb
pop
jl
sub
cld
iret
std
cmp
rcl
out
xchg
push
jns
daa
dec
cmp
repnz
jp
(bad)
into
add
pop
jecxz
xor
jmp
sbb
mov
cld
mov
leave
loop
pushf
movs
ins
test
dec
adc
push
mov
mov
sub
loopne
ror
mov
sub
xchg
lahf
movs
outs
push
add
adc
mov
jl
fsub
inc
js
mov
cs
sbb
lods
push
lock
adc
lods
mov
cmp
in
pop
inc
xor
fisub
mov
rol
xchg
add
xchg
ins
jg
cdq
pop
xchg
out
in
push
sbb
(bad)
cld
push
jge
test
out
hlt
cmp
cld
cmp
dec
mov
dec
add
clc
sub
in
lea
pusha
fmul
movs
call
dec
sbb
jns
test
ins
imul
push
dec
dec
into
xor
xor
addr16
fstcw
ds
repnz
jp
xor
gs
sar
mov
inc
and
mov
cwde
pop
mov
enter
inc
loopne
mov
mov
pop
xor
push
add
cdq
xchg
aas
cmps
mov
mov
(bad)
xor
cwde
out
add
cmps
xchg
out
mov
jl
jae
bound
jnp
stos
xlat
add
retf
lock
mov
repz
add
xor
ss
fs
enter
sub
test
xchg
stos
push
xor
fsubr
push
clc
scas
cdq
inc
call
jg
sbb
popf
inc
popf
out
adc
add
mov
call
ins
xchg
and
shl
xor
out
sub
int
sbb
outs
jae
add
jne
mov
xor
ret
push
mov
mov
enter
inc
pop
sbb
cmp
push
fnstsw
sbb
and
inc
push
jb
data16
dec
js
sahf
xor
jmp
neg
push
pop
int
inc
ss
pop
xchg
inc
or
sbb
shr
(bad)
and
ret
fld
pushf
loope
dec
cmp
(bad)
add
fnstsw
or
pushf
cli
pop
xchg
fldcw
outs
fld
jle
test
popf
inc
shl
pop
das
sub
sbb
or
enter
aad
sbb
ret
sbb
in
sbb
dec
cmp
mov
ins
ss
sbb
adc
lahf
mov
mov
add
cmps
push
adc
jno
or
jge
sub
push
fdivr
outs
sub
lds
pop
scas
pop
inc
mov
les
dec
or
cmp
lods
ret
pop
push
cmp
mov
xor
and
pop
mov
fst
push
lods
aas
dec
out
jbe
push
pop
mov
aam
mov
xor
ins
xor
push
mov
sar
popa
dec
in
mov
int
add
xchg
or
outs
pop
mov
xlat
or
sub
mov
cmp
pop
jmp
scas
icebp
gs
pushf
mov
pop
add
xchg
inc
fwait
xchg
and
and
lods
jmp
pop
push
jnp
pop
mov
and
jmp
icebp
clc
daa
pop
sub
sbb
jl
fwait
stos
mov
cli
jmp
ret
push
cmps
cmps
out
jnp
outs
pushf
jmp
lock
cld
mov
and
push
xchg
mov
push
xor
arpl
clc
cmp
mov
or
imul
ret
jp
nop
mov
addr16
push
sub
in
je
pop
shl
cmp
fistp
pop
mov
mov
lahf
scas
inc
mov
jmp
pop
int3
ins
mov
rcl
lods
bound
sbb
xor
shl
femms
(bad)
add
call
scas
lods
cmp
gs
xlat
xchg
shl
rcr
fild
mov
cdq
(bad)
cmp
dec
call
xlat
mov
mov
jge
test
mov
ds
pop
mov
inc
retf
pop
sub
popa
es
(bad)
out
test
std
je
sub
mov
icebp
outs
pop
sub
cwde
scas
in
jge
das
movs
pop
sbb
and
ds
or
mov
mov
ins
dec
in
enterw
xchg
jg
or
fucomip
fwait
stos
repnz
icebp
fwait
mov
add
pop
(bad)
mov
sub
inc
int3
mov
jl
jne
push
mov
mov
jge
pop
stos
adc
xor
(bad)
dec
jno
jns
in
add
or
jno
in
call
dec
pop
sar
inc
repz
adc
ror
and
enter
adc
pop
pop
jecxz
inc
(bad)
lods
lea
js
mov
sbb
pop
cli
and
mov
ins
lock
add
xlat
dec
in
std
es
iret
in
loopne
inc
dec
inc
clc
cmp
or
jp
stos
fldenv
in
jns
iret
fbld
jns
call
xchg
cmp
retf
shl
mul
aam
cmp
leave
(bad)
xchg
mov
lods
adc
xchg
xor
stos
ret
xor
test
and
jnp
out
les
popa
(bad)
nop
cmp
xchg
or
xor
sbb
jno
div
cmc
test
xor
ja
into
dec
push
ins
mov
sbb
retf
lods
dec
dec
aad
inc
ja
js
pop
and
(bad)
pushf
test
lds
lahf
outs
in
jae
jo
mov
shl
repnz
test
mov
dec
xchg
dec
dec
lahf
mov
aad
jg
test
stos
or
cmp
test
cmps
sub
add
(bad)
aad
dec
neg
mov
sbb
jo
movs
out
push
sbb
mov
inc
xchg
mov
or
retf
mov
aas
cmp
xchg
jecxz
or
ja
test
add
gs
lods
repz
or
aas
or
pop
cmps
imul
aas
push
xchg
dec
sahf
outs
(bad)
mov
mov
xor
jg
out
sti
ds
pop
test
push
pusha
and
retf
xabort
add
inc
and
xchg
mov
pop
push
sbb
fwait
stos
out
sub
push
push
int
dec
in
or
sub
je
ds
in
mov
out
test
mov
lds
aam
mov
mov
mov
ja
popa
(bad)
clc
sub
mov
xchg
stc
les
cdq
dec
loopne
or
add
jnp
aam
cmps
sub
fldenv
loope
jns
sub
lea
or
addr16
jbe
sub
je
fs
cmp
rcr
add
into
mov
stos
mov
inc
out
sub
adc
sub
loop
xchg
stc
lods
dec
push
ja
cmp
or
ror
idiv
cmp
cmc
mov
mov
scas
rcl
mov
imul
jns
xchg
aad
les
jge
fdiv
cmp
jae
out
ins
(bad)
sbb
out
test
push
loopne
jmp
or
mov
mov
xor
rcl
(bad)
(bad)
int
popa
xor
(bad)
aaa
push
add
adc
retf
push
retf
sahf
mov
lock
mov
cli
dec
(bad)
mov
mov
test
add
dec
mov
mov
fwait
enter
push
mov
mov
aam
ficomp
mov
jne
ficomp
add
in
ret
ret
push
je
repz
inc
jmp
cmps
jp
and
add
add
or
add
xchg
in
push
fild
fwait
inc
(bad)
stos
fisubr
stc
adc
imul
jecxz
xchg
lahf
inc
lods
sub
aaa
inc
fld
mov
(bad)
sahf
iret
loopne
fist
out
dec
xlat
pop
pop
test
aad
pop
xchg
sbb
xchg
in
mov
inc
cli
xor
lods
pop
jmp
cmp
pop
test
fsubr
(bad)
test
(bad)
mov
retf
xor
xor
push
pop
cmp
rol
mov
(bad)
lods
push
jle
test
mov
mov
pop
les
das
jle
cwde
ret
shl
popa
call
adc
pusha
test
test
mov
(bad)
fdiv
or
sbb
scas
push
fidivr
jae
fisttp
sub
mov
push
(bad)
aas
(bad)
push
fsubr
adc
sbb
pop
or
pop
or
ds
mov
xchg
dec
xchg
add
or
stc
sahf
enter
push
cmc
cdq
and
(bad)
cmc
xor
push
test
mov
mov
adc
cmc
dec
in
pop
sub
scas
fistp
stc
hlt
sub
push
push
xchg
mov
loop
gs
and
adc
inc
into
cwde
xor
(bad)
jl
aas
dec
add
aas
add
fisubr
int3
adc
xchg
adc
mul
jecxz
push
aaa
mov
add
jmp
mov
or
push
cmp
rcr
loopne
je
fld
addr16
imul
jmp
cmp
sbb
sbb
dec
mov
fidivr
scas
int
adc
int3
dec
pop
push
(bad)
call
pusha
mov
or
mov
outs
xchg
daa
sub
outs
pop
sbb
pop
jmp
jo
jecxz
jl
les
(bad)
loopne
dec
sbb
ret
jo
sar
lods
xchg
mul
cld
mov
and
mov
in
push
dec
and
(bad)
icebp
xchg
and
adc
ror
xchg
or
out
jmp
fld
xor
inc
pop
mov
xor
cs
sbb
cs
dec
jmp
out
mov
idiv
dec
dec
lods
cmp
and
or
out
push
fcomp
pusha
maxps
mov
sar
mov
fisttp
mov
mov
dec
inc
shr
add
lods
or
xor
xchg
add
dec
int3
xor
outs
cmps
retf
pop
cmp
int
ja
push
add
push
inc
es
pop
push
push
jne
push
xchg
mov
ins
sbb
sub
(bad)
push
add
in
les
dec
mov
dec
cmp
lock
mov
mov
xchg
out
sbb
pop
shl
leave
ficomp
movs
stc
push
sbb
mov
dec
int3
movs
ror
cdq
cmp
cmp
or
daa
das
sbb
push
aas
jo
dec
ror
outs
lahf
sbb
xor
dec
fstp
mov
mov
imul
mov
push
cdq
xchg
push
scas
adc
jb
call
push
int3
inc
aaa
pop
or
xchg
push
add
int
pop
xor
outs
aas
aas
xchg
call
mov
cs
jno
add
fild
leave
push
les
sbb
sbb
dec
mov
mov
cmp
loopne
data16
test
pop
data16
test
sar
pusha
jne
cmps
aam
loopne
hlt
cli
pusha
xchg
mov
ds
jp
fld
mov
push
mov
sbb
cmp
scas
fbld
xchg
xchg
cmp
adc
xor
movs
lock
cmc
dec
or
adc
xor
mov
xor
pop
jl
pop
stos
mov
jp
arpl
mov
cmps
sti
sub
push
mov
sub
dec
push
ss
pop
pop
sub
pop
sti
je
mov
inc
pop
test
cdq
dec
xchg
xlat
fucom
test
cmc
mov
xchg
xor
adc
imul
movs
ret
push
inc
cmp
cdq
rcl
call
push
adc
js
mov
cmp
ins
inc
mov
sbb
fadd
jl
push
sahf
or
jecxz
mov
jmp
mov
call
out
fwait
mov
dec
es
(bad)
jg
shr
dec
sbb
or
jp
push
ins
mov
test
shr
test
outs
(bad)
xchg
jbe
mov
jne
fisubr
fwait
dec
ds
inc
call
adc
pushf
mov
imul
or
int
add
or
sbb
or
aam
cmp
div
adc
jbe
mov
cdq
movs
out
adc
outs
pop
fld
mul
xchg
cmp
int
adc
lock
and
out
cdq
push
sahf
js
cmp
jnp
mov
inc
shl
ja
aam
in
mov
mov
hlt
test
jb
sub
push
hlt
stos
mov
push
push
push
xchg
movs
mov
call
icebp
cdq
inc
loopne
xor
push
jmp
cld
call
xchg
push
mov
(bad)
cmps
or
nop
xchg
in
push
xor
jle
imul
cmp
cmp
push
mul
xchg
sti
out
sub
or
cmps
cmps
aam
jb
loope
call
pop
sub
cdq
cmp
loop
jno
jmp
out
(bad)
xor
scas
mov
xor
push
rol
push
dec
push
(bad)
ror
adc
jns
pop
aam
sbb
jmp
cmp
fldcw
add
ret
sub
arpl
ins
mov
pop
pop
loopne
mov
scas
and
sbb
push
mov
jmp
push
mov
jle
lahf
jl
mov
int
popf
clc
mov
lds
fist
push
into
xchg
adc
scas
sub
sbb
cmp
(bad)
cmp
sti
leave
xchg
(bad)
xchg
cmps
jbe
add
outs
xlat
es
xchg
(bad)
cmc
outs
add
ret
add
mov
(bad)
xor
test
xchg
mov
mov
sub
xor
sub
stos
mov
popa
and
xor
dec
sub
loopne
popf
shr
pop
enter
int3
aas
inc
arpl
lods
push
es
xchg
cmp
mov
ror
fcom
imul
fs
adc
retf
aam
inc
jne
out
adc
pop
mov
or
pop
lea
or
lods
call
das
out
test
lods
xor
pop
in
sub
or
imul
xor
mov
(bad)
shr
mov
xchg
hlt
dec
in
jnp
cmp
mov
and
xor
jmp
mov
or
js
cmp
(bad)
fist
cmp
push
loope
inc
mov
rcl
bound
fwait
scas
ror
js
jns
xchg
push
aaa
pushf
fisubr
dec
mov
aam
ret
fwait
scas
add
lock
inc
je
dec
bound
cs
hlt
into
repz
jne
das
mov
call
or
jg
cwde
test
and
mov
sbb
mov
inc
xor
fidiv
cmp
hlt
jns
pop
pop
aas
add
or
out
push
add
mov
mov
pop
call
mov
out
sbb
rcl
cmc
sub
xchg
mov
mov
jnp
(bad)
repz
stos
dec
xchg
repz
pop
push
cmp
jae
dec
lock
inc
test
add
inc
rcr
lahf
(bad)
sbb
ins
ja
xlat
pushf
xchg
stos
(bad)
cli
mov
cwde
cli
adc
push
fucomi
mov
sub
xchg
pop
or
dec
fimul
movs
adc
fmul
push
push
and
gs
call
push
and
out
outs
mov
sahf
push
pop
leave
fdiv
add
pop
push
cmc
sbb
mov
jmp
cmp
fdivr
movs
xchg
cmp
inc
(bad)
test
push
jg
xchg
les
(bad)
lahf
pop
outs
fisubr
scas
inc
gs
push
jmp
cld
stos
mov
retf
imul
mov
mov
dec
loope
sbb
clc
mov
leave
pop
jmp
or
retf
call
popf
dec
mov
out
push
repnz
cwde
(bad)
(bad)
in
fdivp
or
or
xchg
in
cmp
and
ins
les
(bad)
adc
cld
cmp
in
mov
or
mov
ds
cmc
in
stos
fldcw
jnp
or
je
fidivr
mov
xchg
shr
or
retf
popa
cmp
test
xchg
inc
or
cwde
sbb
push
das
pop
or
movs
lds
cmp
xor
mov
inc
fadd
fsub
js
in
loop
dec
add
mov
jbe
fisttp
push
js
or
retf
stos
out
mov
aad
jo
xchg
rcl
test
(bad)
cmps
cmc
ja
push
inc
adc
jbe
pushf
retf
ret
push
dec
pop
int
jo
push
cmps
add
arpl
cdq
(bad)
sahf
inc
es
loope
cs
cmp
dec
retf
std
por
out
cmp
inc
pop
(bad)
call
pop
in
lock
xor
iret
hlt
push
out
add
push
push
das
and
sub
popa
cmp
fsubr
adc
mov
pop
(bad)
push
aad
xchg
push
dec
xchg
mov
dec
inc
(bad)
xchg
xor
xor
out
aam
push
sub
xor
xchg
adc
stos
mov
mov
xor
daa
inc
inc
push
mov
outs
ss
mov
adc
aas
dec
fs
loop
les
sub
dec
push
sub
pop
call
push
lock
(bad)
adc
sti
xchg
ret
fdiv
push
out
xor
dec
xor
in
xor
out
xor
imul
mov
or
mov
or
sbb
inc
jmp
mov
mov
pusha
sub
fcmovu
push
dec
push
mov
scas
and
inc
or
movs
dec
push
mov
xchg
xchg
jmp
popa
outs
push
pop
loopne
mov
cdq
add
stos
fist
cmps
(bad)
scas
mov
push
leave
jmp
xchg
or
add
add
hlt
push
pop
stc
retf
je
lods
add
test
xchg
push
adc
fdiv
and
daa
and
pop
(bad)
cld
dec
mov
xor
sti
sub
pop
das
cmps
inc
das
imul
popa
fucomp
retf
pop
sub
push
sbb
cmp
add
out
in
pop
hlt
retf
jl
in
out
pop
outs
mul
sbb
lea
mov
aaa
sti
cmp
out
popf
add
imul
pop
inc
pop
push
sbb
int3
daa
xchg
push
push
push
lods
mov
xor
xor
test
sbb
adc
fimul
(bad)
jl
sbb
jge
je
cmp
bnd
cmps
xchg
jecxz
jmp
mov
cld
sbb
xor
fdiv
pop
mov
jl
fwait
test
scas
in
icebp
pop
xor
xlat
clc
pop
cli
(bad)
dec
sub
jbe
push
add
lods
sti
sub
pushf
in
js
xor
aam
xchg
sub
pushf
dec
push
aam
ss
and
ins
pop
hlt
cli
and
adc
inc
xchg
push
and
push
adc
add
ins
add
sbb
push
jl
xor
push
(bad)
cmc
scas
cld
loopne
lock
int3
call
lea
clc
sar
dec
daa
in
test
adc
push
aad
jge
scas
out
push
(bad)
cli
push
pop
mov
mov
(bad)
mov
shr
cmp
je
and
data16
mov
jmp
jle
add
in
mov
ss
in
sbb
mov
sti
loop
addr16
(bad)
gs
cmc
mov
cmps
xchg
test
not
add
out
test
sbb
cmp
xchg
pop
cdq
fst
adc
cmp
dec
cmp
push
and
jg
dec
jo
inc
xor
fbstp
lods
test
aad
jnp
jle
or
sub
mov
aas
ins
jnp
xchg
jge
loopne
movs
jp
pushf
ins
sbb
push
pcmpeqw
fincstp
pop
jle
xor
std
out
movs
pushf
icebp
ja
cmp
sub
inc
ret
adc
(bad)
sub
push
xor
cwde
push
push
call
sub
xor
push
ds
and
imul
dec
push
or
outs
and
pop
jne
movs
jp
or
scas
ds
push
push
daa
ins
in
sbb
push
push
xchg
pop
xlat
popf
mov
stc
adc
fsub
sbb
test
and
mov
pop
aad
movs
jecxz
sbb
dec
cmp
(bad)
repz
push
pop
dec
sub
mov
pop
sti
loop
movs
mov
daa
stos
retf
sbb
outs
call
popf
mov
cli
cmp
inc
ins
push
jne
jnp
int
repz
sar
inc
out
out
mov
test
sub
mov
mov
imul
(bad)
pop
dec
(bad)
mov
mov
cmp
hlt
xchg
mov
and
jge
adc
push
cmp
fsubr
test
int
rol
adc
and
mov
mov
cmp
jns
mov
push
mov
jle
sbb
movs
sub
sub
leave
lods
jg
push
jne
out
push
in
dec
and
mov
cmps
ret
dec
mov
jp
or
mov
cmc
adc
outs
xor
cdq
cli
xchg
retf
or
mov
rcl
pop
or
pop
jns
retf
dec
add
dec
fcmovnb
or
mov
aaa
inc
pop
loopne
imul
daa
rcr
retf
adc
hlt
jg
mov
cmp
cmp
test
sub
out
mov
(bad)
jp
imul
outs
shl
xchg
in
in
icebp
dec
mov
jbe
enter
and
loope
dec
jmp
mov
adc
(bad)
push
push
sahf
mov
dec
mov
add
pop
add
movs
adc
add
bound
adc
mov
pushf
(bad)
inc
movs
pop
sub
movs
adc
push
xchg
sbb
cwde
loopne
or
clc
lea
fdivr
div
fs
fucomi
stos
sahf
inc
xor
or
inc
add
mov
sahf
ds
mov
cwde
push
fs
hlt
pop
cwde
lods
xor
outs
push
shl
pop
sub
sbb
mov
outs
stos
frstor
xchg
push
dec
mov
adc
jne
out
dec
push
nop
fs
push
push
mov
pop
push
mul
cmps
mov
loope
and
sub
nop
or
inc
mov
cs
cwde
and
loop
push
adc
ss
cld
out
push
lock
jnp
fwait
es
gs
mov
mov
jbe
out
pusha
adc
mov
scas
lods
and
repnz
inc
sub
pop
push
inc
and
jg
cmp
aad
sbb
imul
lock
push
sub
fwait
push
out
test
gs
jo
jno
xchg
sub
ds
jp
dec
add
sahf
xchg
push
sub
xchg
jns
xchg
xor
sub
and
scas
push
and
test
cmps
sbb
neg
test
mov
(bad)
mov
mov
(bad)
pop
mov
jbe
ss
into
sbb
sub
lds
(bad)
mov
fadd
mov
sub
mov
add
and
jp
and
(bad)
loope
fcomip
dec
lds
loop
nop
xchg
div
mov
pop
loope
cmp
outs
aam
push
and
mov
sbb
(bad)
jp
std
gs
sub
jbe
mov
sahf
xchg
movs
xor
mov
les
ins
mov
(bad)
clc
mov
pop
dec
sub
mov
xchg
dec
or
jmp
pop
xchg
test
popf
adc
fisttp
fsub
xor
push
popa
mov
adc
add
cmp
jne
fsubr
gs
xlat
data16
in
pop
sub
mov
(bad)
ins
test
add
popf
enter
inc
sub
stos
cmp
loope
inc
jg
stos
fcmovnbe
loop
loopne
cld
popa
pop
pop
cmp
in
mov
fisubr
out
fwait
scas
push
(bad)
and
mov
out
mov
cmp
cld
retf
mov
and
mov
les
sti
mov
out
dec
retf
xchg
mov
cmp
sahf
cdq
ss
add
jb
sbb
sbb
mov
add
int3
xchg
mov
inc
ins
iret
add
sub
icebp
(bad)
dec
and
imul
jg
jb
gs
xor
(bad)
and
jmp
sbb
push
inc
cmp
inc
mov
inc
es
aaa
sahf
add
in
mov
push
lds
test
pop
bound
lods
dec
xchg
jnp
dec
lods
sub
arpl
sti
retf
inc
aas
out
adc
ds
in
push
pusha
daa
sub
or
ss
mov
sbb
retf
jbe
pop
bound
mov
xchg
dec
cld
repnz
xor
jmp
sub
push
or
fs
inc
dec
mov
dec
mov
sbb
xor
test
fdiv
iret
sub
loopne
cmps
push
push
shl
gs
xor
sbb
mov
pushf
int
xchg
sub
jmp
cmp
push
jnp
neg
jnp
dec
sahf
fisub
repnz
stos
push
push
jbe
mov
push
addr16
iret
aam
jnp
movs
in
push
test
clc
cli
(bad)
push
mov
inc
test
mov
mov
call
fidivr
inc
test
sbb
xchg
pop
lds
jmp
pop
(bad)
xchg
push
xor
int
js
mov
mov
neg
and
pop
cmps
push
rol
call
lods
dec
es
xchg
pop
dec
add
inc
js
call
mov
js
xchg
cmp
out
mov
int3
mov
sub
es
(bad)
in
in
sbb
mov
push
cmc
int3
jb
scas
pushf
and
add
push
sbb
inc
adc
xchg
(bad)
call
sbb
mov
jne
xor
sbb
xchg
pop
xor
xchg
loope
cmps
aaa
adc
(bad)
stos
jmp
cmp
call
xchg
out
ret
cmp
ret
pop
das
jmp
and
sub
dec
pop
sbb
lock
loop
ret
pop
adc
mov
leave
(bad)
fcomp
xor
adc
jg
jae
and
loopne
mov
or
in
dec
retf
sub
ins
mov
fnsave
(bad)
dec
test
std
das
jb
std
aad
xchg
fwait
iret
mov
das
or
dec
xor
movs
into
add
fadd
pop
inc
push
sub
and
aaa
je
cmc
cmp
mov
sub
mov
push
mov
shr
cmp
mov
push
sub
ret
in
xor
jno
je
popf
mov
punpcklwd
jle
sbb
xor
mov
cli
adc
or
pop
ja
xchg
or
lea
add
mov
inc
js
out
push
pushf
pop
pop
pop
inc
dec
fs
out
outs
stos
pop
sbb
mov
cwde
addr16
(bad)
mov
js
adc
add
mov
adc
pop
dec
xchg
add
jae
mov
test
inc
int
(bad)
test
cli
call
cmp
xchg
xchg
cmp
and
sbb
mov
or
scas
test
scas
ret
repz
dec
push
sbb
mov
xor
retf
inc
movs
push
mov
push
sbb
sbb
in
loope
pop
cmp
jne
sahf
sbb
and
shr
movs
fcmovbe
shl
dec
fdiv
lahf
rol
and
das
repz
loop
cmp
jb
push
mov
jg
inc
scas
mov
xor
sbb
iret
pop
mov
and
mov
xchg
(bad)
jae
inc
jecxz
je
std
rcl
inc
(bad)
lock
mov
xchg
inc
mov
aaa
add
mov
pop
cmp
mov
or
pop
push
mov
ror
xor
xor
mov
push
aad
push
lock
mov
outs
mov
mov
(bad)
mov
mov
retf
xrelease
lock
jl
mov
shl
push
mov
jne
cdq
push
dec
fcmove
out
jb
(bad)
data16
ja
call
dec
mov
outs
cmp
pop
scas
pop
int
mov
ins
mov
sub
push
js
cmp
imul
stos
mov
or
push
psubb
mov
dec
pop
clc
cmp
dec
jecxz
mov
push
adc
xchg
pop
mov
aas
scas
lea
mov
fcom
sbb
mov
push
(bad)
cld
mov
ret
fiadd
push
or
icebp
gs
add
fistp
xchg
jge
push
in
ret
xor
or
pop
mov
hlt
jp
test
inc
rol
cmp
in
lods
jmp
popa
call
fld
ficom
pop
jmp
mov
push
aas
ret
popf
mov
mov
cdq
xchg
cwde
sub
dec
jmp
aaa
push
daa
retf
push
jb
pop
hlt
fstp
cli
mov
out
xchg
mov
jo
xchg
cwde
les
stc
cld
pop
fiadd
mov
repz
pusha
popa
adc
retf
repz
sub
mov
ds
and
mov
int3
push
dec
push
repnz
fdiv
aas
jbe
pusha
xor
jp
add
fsub
ja
aaa
(bad)
(bad)
dec
test
(bad)
ins
mov
fist
in
mov
jl
imul
inc
cmp
imul
(bad)
into
call
xor
mov
jmp
push
dec
inc
std
xchg
(bad)
mov
xchg
push
mov
sti
in
mov
mov
ret
push
sub
mov
jns
cmp
clc
mov
lahf
and
xlat
mov
xchg
jmp
cdq
imul
fst
and
push
in
cwde
rcr
and
adc
pop
or
xchg
call
and
jmp
(bad)
cli
xchg
jmp
neg
xor
sub
lods
inc
outs
dec
add
pop
cvtpi2ps
popa
fs
enter
cli
jns
out
push
dec
mov
neg
arpl
fwait
adc
cs
mov
in
sub
xchg
mov
adc
loop
in
sbb
inc
mov
mov
scas
cs
cdq
jp
mov
xchg
xchg
mov
pop
div
push
rol
cmp
arpl
adc
mov
scas
add
mov
stos
pop
and
mov
pop
vmovdqu
lods
aaa
mov
daa
inc
or
ror
inc
xor
cmp
mov
sbb
fist
or
dec
mov
mov
movs
push
xchg
popf
(bad)
sti
fcmovnu
pop
adc
pop
xchg
xchg
add
aam
xor
xlat
repz
leave
in
inc
mov
or
mov
test
mov
fisubr
shl
(bad)
mov
dec
in
jne
sbb
xor
jmp
mov
ret
ffreep
add
out
push
sub
loope
int3
jecxz
jbe
movs
pop
and
cmp
cld
mov
jbe
push
xor
call
mov
add
bound
loope
stos
jg
data16
pop
fdivr
inc
xor
xchg
dec
and
cmp
cmp
retf
repz
mov
mov
addr16
push
outs
mov
mov
mov
jb
mov
sahf
sbb
mov
std
sbb
pop
ret
push
loop
xchg
xchg
(bad)
loop
mov
xchg
or
mov
in
cwde
pop
add
pop
push
dec
fwait
gs
pop
loop
push
(bad)
in
(bad)
push
ja
sub
jo
ins
adc
jmp
xor
dec
std
xchg
mov
jno
and
into
mov
loop
sbb
inc
push
dec
in
push
dec
ficomp
test
push
iret
pop
xor
or
pop
js
add
push
repz
popf
jp
out
mov
(bad)
pop
mov
pop
inc
adc
lods
scas
jmp
inc
dec
mov
retf
mov
shr
xlat
bound
inc
jmp
adc
stos
or
xchg
aaa
inc
cmc
push
pop
sub
(bad)
xor
shr
pop
aas
push
pop
cwde
lods
jmp
aaa
sub
test
mov
ins
leave
(bad)
hlt
adc
(bad)
sbb
ja
mov
push
lods
(bad)
(bad)
cli
push
(bad)
cli
dec
sub
nop
repz
stos
in
ja
jo
sub
dec
(bad)
outs
fild
inc
adc
cmp
stc
sti
mov
jne
inc
dec
pop
cmp
cdq
(bad)
push
xor
adc
pop
ficom
push
cmp
jmp
cmp
xchg
pop
pop
ds
fcmovne
and
add
xchg
cs
popf
and
mov
xchg
dec
cdq
cli
mov
retf
push
daa
cmp
pop
adc
inc
mov
mov
mov
or
arpl
and
sar
jno
icebp
jae
add
cs
mov
in
fild
int3
pop
jbe
sti
dec
dec
clc
add
dec
mov
mov
push
das
jmp
lods
fmul
out
cld
fild
jmp
ret
xlat
dec
mul
dec
(bad)
or
adc
sbb
xchg
fiadd
out
inc
ss
mov
mov
sbb
adc
xchg
xchg
div
and
push
cmps
xchg
add
fst
sbb
es
dec
sar
inc
scas
call
or
loop
fcomp
adc
push
push
ror
cmps
jo
out
and
aad
pop
test
aaa
aad
popf
shr
mov
xor
add
popf
sti
mov
inc
dec
cmp
fs
cdq
ficomp
repnz
add
or
mov
or
sub
clc
add
mov
pop
mov
(bad)
and
and
or
sbb
xchg
in
pop
mov
test
mov
or
jle
push
call
sub
test
sbb
sbb
fsubr
xor
mov
inc
and
nop
cmp
(bad)
jnp
cdq
test
movs
lea
inc
mov
in
fdivr
mov
adc
lock
cmp
nop
in
pop
cmps
push
fwait
add
mov
cmp
mov
and
push
ss
jns
xlat
xor
inc
dec
mov
xor
ins
or
call
daa
sub
adc
jle
mov
mov
inc
and
push
sbb
rcr
jo
mov
scas
pop
shr
test
sbb
pusha
aad
pop
cmp
(bad)
ss
xlat
data16
xchg
add
and
cmp
and
mov
test
xchg
jo
hlt
sbb
sbb
pop
imul
mov
xor
aas
cmps
stc
xchg
shl
in
push
mov
dec
ins
sbb
sub
inc
and
std
pusha
and
xchg
nop
pop
sub
or
(bad)
mov
push
adc
xchg
int
dec
dec
scas
bound
cwde
cmp
mov
xchg
in
mov
popa
sub
mov
xor
int
bound
xchg
inc
js
test
add
das
lods
jno
xor
cmc
in
add
cli
and
cmps
dec
fs
inc
dec
jno
nop
rcr
mov
fwait
adc
test
xor
jl
cmps
inc
rcr
test
sti
or
cwde
cmps
sub
xchg
or
in
imul
ss
mov
xchg
jp
pop
push
jl
(bad)
retf
sub
cmc
test
and
add
nop
inc
jmp
add
xor
loop
pop
arpl
in
adc
pusha
mov
call
add
add
cmp
cmp
test
inc
repnz
and
push
addr16
inc
jl
mov
jge
imul
cli
add
pop
not
dec
test
scas
jo
aas
and
sahf
add
clc
push
pop
test
push
test
pop
mov
dec
mov
mov
dec
in
rol
ins
cmp
or
and
jmp
stos
sbb
xchg
cmp
push
jno
cs
mov
pop
shl
xor
je
das
ins
jnp
lahf
sbb
(bad)
push
scas
jl
jge
mov
mov
xor
loop
iret
pop
dec
(bad)
mov
mov
iret
dec
inc
xchg
mov
aaa
and
les
inc
jmp
shr
das
lods
scas
and
cmc
mov
pop
push
add
(bad)
in
pushf
and
inc
push
mov
and
xor
pushw
ror
jg
out
push
adc
int3
push
pop
cmc
ror
jne
pop
out
stos
dec
cdq
inc
stc
stos
push
punpckhbw
icebp
adc
ds
(bad)
cli
jnp
hlt
add
(bad)
jmp
outs
push
call
outs
stos
div
stos
ins
stc
scas
pop
push
fcom
jb
push
push
cwde
adc
(bad)
retf
inc
mov
(bad)
movs
jb
push
jle
(bad)
enter
retf
mov
jno
hlt
xchg
push
in
mov
push
arpl
mov
call
mov
test
out
adc
mov
pushf
dec
jge
test
fdivp
jle
inc
sar
xchg
xor
je
nop
outs
xchg
push
adc
es
mov
push
cmp
int3
mov
iret
jne
aad
mov
lods
je
mov
jmp
push
push
inc
jns
fisub
bswap
dec
push
inc
pop
in
repz
or
mov
cmp
call
imul
pop
es
bound
aaa
dec
jb
sti
pop
adc
add
fst
push
aam
ficom
lods
inc
sub
clc
add
lods
into
fs
push
dec
mov
mov
popa
add
pop
cs
xor
jg
jecxz
out
test
jae
or
rcl
mov
mov
fld
mov
out
sahf
(bad)
test
sbb
jle
ss
push
push
xchg
mov
cmc
sbb
repnz
mov
or
cmp
ret
in
jno
(bad)
cs
stos
(bad)
mov
ins
out
mov
retf
mov
movs
mov
pop
inc
jecxz
fistp
mov
ins
xor
loopne
jo
push
je
shl
fs
pop
inc
loop
sub
pop
out
in
xor
cmp
mov
sti
gs
pop
and
jae
sbb
xchg
out
movs
outs
pop
out
sar
ficom
mov
or
aam
or
or
push
ret
dec
out
ss
xchg
adc
and
mov
retf
ins
es
ret
xlat
(bad)
sahf
cmp
lock
(bad)
sti
pop
scas
pusha
xor
push
push
mov
sbb
sar
movs
sub
leave
dec
and
adc
dec
add
push
mov
imul
cli
outs
sub
push
fiadd
add
ret
fucomip
sub
adc
adc
mov
add
mov
mov
mov
pop
in
and
mov
xchg
out
sbb
jns
and
adc
jp
sub
in
inc
in
(bad)
mov
loop
jnp
dec
popf
jl
xchg
jmp
pusha
cmps
pop
pop
fcmove
sbb
mov
fidiv
push
add
in
push
aad
dec
lds
aaa
repnz
out
xchg
enter
inc
out
mov
jl
fisub
scas
sar
inc
or
add
dec
jmp
mov
inc
dec
lea
sub
xor
push
ret
cld
xchg
push
(bad)
sbb
stc
es
jl
xchg
loope
ror
add
mov
inc
sub
sbb
arpl
(bad)
lock
mov
xchg
lds
iret
mov
add
pop
es
lods
pop
pop
sub
out
nop
jb
aam
lahf
mov
cmp
lods
outs
cmp
push
sti
and
xchg
fs
mov
mov
jae
xchg
mov
std
and
add
test
ins
test
pop
mov
mov
rcl
jo
(bad)
push
das
cdq
mov
inc
sbb
fs
jmp
or
cmc
jmp
cs
dec
push
clc
mov
sets
jb
or
in
call
push
mov
retf
dec
mov
icebp
call
shl
jb
mov
and
mov
imul
loopne
repnz
mov
adc
(bad)
adc
fwait
ror
sahf
fcom
mov
add
jbe
cmp
(bad)
xchg
jle
loopne
(bad)
dec
mov
sub
loope
mov
movs
mov
and
xor
xor
add
fidiv
and
inc
cmp
push
xchg
test
imul
dec
inc
adc
mov
cmps
mov
arpl
jb
cmps
xchg
ret
dec
outs
sub
out
mov
popa
mov
jns
clc
movs
jns
dec
(bad)
jmp
aam
aaa
cld
scas
stc
(bad)
sti
mov
cdq
icebp
pop
jecxz
inc
inc
push
push
aad
loope
xor
addr16
fcom
sub
or
jbe
adc
stos
push
loope
ins
jb
mov
inc
test
fnsave
jb
sbb
loopne
out
mov
mov
hlt
std
lods
push
pop
push
mov
mov
test
mov
mov
mov
jmp
or
xchg
in
lea
call
mov
sahf
je
movs
cwde
into
mov
adc
mov
int
and
inc
jb
rol
xchg
dec
out
mov
clc
loope
xchg
cmc
pop
(bad)
sbb
retf
jecxz
push
repz
add
pop
add
rol
xchg
ret
iret
div
lods
inc
xor
push
ins
push
shl
ins
div
nop
movs
push
and
in
add
jbe
pusha
or
jmp
es
adc
jg
adc
(bad)
pop
sub
sub
add
mov
popa
loop
dec
test
cmp
sbb
outs
fisubr
sbb
dec
and
add
xor
sub
fdiv
outs
out
arpl
test
mov
lods
jl
mov
cmp
ds
cmps
js
(bad)
sbb
xchg
dec
dec
cmc
(bad)
dec
std
adc
sub
push
aaa
dec
lahf
sub
loop
loopne
adc
enter
rol
add
cmp
lods
cmp
in
adc
jb
repz
ss
stos
and
sub
mov
call
ss
mov
dec
xor
mov
gs
and
retf
or
sbb
sub
mov
bound
stc
xchg
pop
lods
bound
lods
pusha
jmp
and
int3
jbe
pmuludq
and
and
bound
xchg
jae
jnp
out
aad
push
xor
pushf
(bad)
inc
sub
bound
mov
cmps
out
das
in
jmp
pop
sub
push
xor
jg
push
fnsave
ins
mov
call
stc
sar
mov
mov
mov
dec
push
stos
lods
stos
push
fiadd
sbb
shl
inc
add
cli
bound
mov
cmp
in
out
mov
and
xchg
inc
cmp
scas
inc
scas
in
dec
xchg
movs
mov
sahf
xchg
movs
shl
or
dec
xchg
xchg
jbe
mov
shl
xchg
aad
dec
shr
repz
(bad)
pop
test
sub
inc
push
mov
push
cld
(bad)
adc
out
lahf
mov
dec
call
daa
stc
adc
xor
jl
adc
jl
add
cmp
fst
cmps
jno
mov
push
xchg
out
in
test
stc
mov
sub
out
aad
and
outs
mov
stc
aad
mov
sub
mov
add
mov
mov
add
movs
inc
(bad)
std
cmp
mov
mov
xor
dec
xor
call
jns
and
mov
xor
imul
lock
jno
cld
les
push
mov
(bad)
and
out
sub
sub
cmp
jg
xor
fidivr
push
(bad)
jae
jb
push
mov
sub
pop
sub
mov
loope
fwait
xchg
mul
xchg
test
xor
loopne
cld
cs
ins
dec
xchg
cmp
into
and
inc
mov
outs
aaa
jl
out
fidiv
js
aam
stos
jo
xchg
push
xchg
outs
ss
popa
and
adc
mov
mov
push
rcl
icebp
in
mov
std
ret
bound
sub
or
pop
mov
xchg
out
mov
dec
dec
inc
sbb
jnp
aaa
fyl2xp1
push
pop
lock
mov
xchg
repnz
pop
xchg
std
lahf
dec
imul
mov
sti
dec
cld
out
xor
mov
mov
adc
add
iret
jno
xlat
fild
pop
jle
scas
mov
pop
add
test
scas
mov
fdiv
or
leave
inc
adc
add
sub
jmp
movs
mov
movs
fs
mov
xlat
pusha
cmp
das
test
inc
push
mov
pop
mov
ins
scas
cmps
sub
add
dec
out
and
fdivr
pop
and
clc
stos
pop
pop
outs
dec
in
cs
div
jge
jne
icebp
add
pop
mov
ret
or
int3
xor
shl
xchg
pop
ss
leave
movs
inc
dec
mov
call
sub
mov
inc
dec
retf
cmp
lods
hlt
jmp
cmp
inc
lea
pop
cdq
lock
stc
stc
imul
call
into
sub
sbb
mov
stos
js
mov
mov
add
ret
movs
sub
js
sar
sbb
inc
out
xor
popa
or
ss
mov
sbb
mov
mov
inc
dec
xor
movs
mov
aas
repnz
cmps
sub
push
lahf
mov
cmps
push
mov
cmp
jmp
push
(bad)
lods
xchg
fdiv
cmps
sbb
aam
out
ret
cld
mov
jno
push
cmp
hlt
not
mov
jl
rcr
retf
sbb
call
jnp
dec
popf
push
or
inc
test
rol
add
fs
pushf
pop
lods
xchg
push
add
gs
cli
adc
cmps
out
(bad)
fnstsw
js
clc
shr
and
outs
cmovae
dec
push
mov
aam
ja
or
aaa
mov
shl
rdpmc
xchg
sahf
stc
call
fnstenv
movs
or
ja
inc
mov
lods
dec
and
fadd
sub
test
fidivr
jmp
mov
aam
ds
pusha
or
enter
cmp
dec
adc
cmp
sub
js
adc
aaa
xor
mov
adc
sub
push
pop
loope
cdq
or
sub
sbb
loop
sbb
push
(bad)
push
and
shl
adc
sub
or
push
inc
mov
cmove
mov
xor
jb
fimul
xchg
dec
sbb
rcl
adc
pop
leave
add
jne
in
inc
arpl
xchg
push
icebp
push
or
push
mov
inc
or
(bad)
inc
out
jne
and
rcl
and
repz
shr
imul
cmp
jae
add
and
jp
arpl
imul
mov
movs
dec
(bad)
retf
(bad)
int3
mov
scas
outs
leave
into
int
add
stos
mov
ret
ss
cmp
push
(bad)
dec
pop
mov
mov
retf
add
xor
xor
mov
xchg
mov
ss
(bad)
rcl
adc
leave
gs
cwde
xchg
xlat
jle
sub
cld
dec
jmp
ins
inc
jmp
mov
(bad)
cmp
sbb
inc
retf
outs
adc
retf
sub
mov
mov
dec
rol
cmp
and
push
cmp
and
movs
jge
cmc
cmp
sbb
rcl
xchg
inc
jmp
nop
mov
test
(bad)
push
outs
cmps
pusha
push
lea
push
repz
addr16
xchg
mov
pop
dec
scas
xchg
sbb
push
scas
add
outs
adc
jb
je
gs
out
(bad)
lds
mov
or
fwait
dec
push
ds
in
mov
in
clc
rcr
push
imul
mov
mov
xchg
dec
xchg
xchg
inc
inc
mov
adc
sbb
push
jo
pop
cmp
and
jg
or
aaa
cmps
or
pop
ss
cmp
shl
push
fisttp
cbw
and
ins
in
inc
imul
idiv
in
cmp
cmp
enter
aad
mov
or
jmp
or
fiadd
sub
pushf
das
ja
call
push
test
push
sbb
add
xchg
in
outs
int
sub
xlat
fcom
inc
and
std
ins
sbb
(bad)
aam
mov
push
dec
and
imul
pop
pop
lahf
add
stos
movs
jmp
mov
pop
iret
es
xchg
lods
arpl
jns
adc
xor
in
cmp
mov
mov
add
test
push
dec
in
xor
rcr
sub
and
icebp
scas
push
jno
clc
es
mov
push
jg
daa
ret
nop
iret
sbb
dec
cld
jg
js
jmp
xchg
int
out
fdivr
cmps
out
outs
cld
(bad)
hlt
pop
xchg
icebp
div
mov
sbb
movs
add
repz
div
sahf
scas
mov
xchg
xlat
out
cmp
and
call
adc
lfs
xchg
cmp
cdq
fwait
ds
popf
xor
mov
push
jne
pop
outs
ret
lods
dec
jmp
int3
sbb
addr16
les
aam
mov
mov
fwait
cwde
push
sbb
dec
jge
xor
dec
aam
mov
gs
bound
sti
out
das
test
mov
adc
add
lock
mov
outs
mov
xor
shr
pop
jg
sub
adc
(bad)
jne
ins
shl
scas
aaa
xlat
and
and
mov
daa
mov
mov
mov
push
xchg
inc
push
cld
call
repz
xlat
jnp
cmp
pop
sti
sbb
sub
aam
lahf
sub
(bad)
ror
test
push
xlat
loopne
ins
pop
lahf
inc
outs
data16
das
sbb
cmp
mov
cmp
mov
jmp
(bad)
out
jo
ss
(bad)
(bad)
xchg
popa
das
push
or
les
xchg
(bad)
(bad)
je
test
xor
mov
stc
mov
mov
xchg
cmp
mov
cwde
mov
add
jecxz
push
add
jmp
mov
and
xchg
scas
mov
jo
jae
outs
mov
jp
mov
xlat
sbb
xchg
jmp
stos
mov
scas
ret
push
je
sbb
or
pop
mov
pop
inc
into
test
in
pop
int
cs
fbstp
imul
xor
or
scas
ins
and
icebp
fcomp
iret
scas
out
iret
call
outs
inc
retf
icebp
fwait
jl
clc
mov
push
cld
dec
out
jb
ja
and
clc
cmps
outs
dec
xor
mov
pop
test
mov
xlat
rol
(bad)
adc
fcmove
mov
cmps
jae
jae
mov
xchg
adc
adc
pushw
lock
pop
inc
sub
fs
shl
rcr
stos
fdivr
dec
pop
sub
into
iret
outs
test
mov
stos
ret
inc
sub
das
xchg
xor
xor
call
dec
out
in
fwait
jo
jbe
lods
pop
jns
sbb
inc
or
(bad)
dec
jmp
aad
sbb
mov
dec
push
xchg
jmp
jecxz
pop
add
imul
std
(bad)
pop
push
(bad)
fild
dec
mov
xchg
fdiv
push
lods
add
mov
cmps
or
fsubr
movs
sbb
outs
or
aas
inc
lahf
cmp
mov
xchg
xor
fmul
sub
xchg
dec
xor
add
lea
rcl
scas
sbb
mov
and
inc
adc
cs
popf
iret
mov
add
call
jae
pop
lds
data16
fwait
add
push
pop
sbb
loopne
inc
adc
test
or
xchg
push
cdq
imul
lock
cmp
mov
or
jbe
cld
in
mov
dec
fld
or
stc
lahf
sub
pusha
jo
fldenv
mov
xor
mov
jge
outs
cs
xchg
int3
stos
bound
or
cwde
addr16
fcmovbe
gs
aas
movs
idiv
shl
xlat
jbe
sub
adc
mov
retf
arpl
aad
cmp
mov
stc
ja
leave
pop
popa
nop
pop
push
pop
jbe
xchg
push
push
lock
out
add
mov
into
ins
fdivr
fs
jmp
cmp
fidiv
push
out
outs
cs
icebp
or
mov
pusha
icebp
test
lds
popa
cmps
inc
aas
xor
jmp
or
or
(bad)
lds
hlt
mov
sbb
stos
xchg
clc
popa
sub
xchg
xor
xor
inc
movs
push
fmul
scas
popf
ds
push
sbb
ja
sbb
lahf
or
or
xlat
inc
adc
ror
mov
xor
lock
ins
sub
push
xchg
pop
enter
xchg
push
adc
xor
(bad)
ins
sub
das
adc
mov
xor
mov
xchg
cdq
cmc
fsubr
loope
xor
pop
xlat
inc
(bad)
and
(bad)
inc
pushf
into
int
and
add
ins
mov
test
(bad)
sbb
xor
pop
adc
mov
arpl
retf
fmul
jno
pop
test
push
xor
popa
pop
loop
daa
pop
jmp
xchg
cmp
fs
mov
fcmove
sub
mov
loop
leave
frstor
aad
ret
lea
cwde
idiv
retf
(bad)
fst
xchg
mov
mov
or
sub
inc
out
sbb
(bad)
in
mov
fsub
daa
imul
dec
xchg
push
xchg
xchg
movs
pop
loop
sahf
mov
loope
jl
enter
or
mov
push
addr16
rol
xchg
xchg
mov
pop
in
sub
sbb
jb
test
aas
xor
aas
in
adc
cmc
jmp
test
(bad)
fwait
scas
pop
mov
adc
mov
cmp
pop
mov
leave
inc
xchg
lods
inc
int3
imul
cmp
pop
mov
mov
or
in
jo
outs
xlat
retf
hlt
shr
push
cmps
xor
loope
jg
popf
push
(bad)
cmc
lods
out
pop
xor
ror
in
pop
mov
jp
dec
mov
adc
test
or
or
(bad)
mov
push
or
dec
sbb
push
outs
ret
fdivrp
leave
dec
jne
in
clc
scas
cs
popf
mov
stc
or
push
jbe
jg
test
mov
and
sbb
out
rol
arpl
mov
imul
dec
jp
xor
sub
jge
(bad)
outs
mul
das
sub
push
push
or
adc
imul
pop
adc
inc
inc
sub
dec
mov
add
(bad)
mov
imul
cwde
xchg
sub
dec
push
fwait
mov
xor
xchg
call
cmps
mov
add
sub
xchg
pop
int
cdq
loope
in
xchg
movs
stos
shl
pop
xor
aaa
pushf
or
sbb
mov
xor
sub
xchg
or
and
mov
gs
push
fistp
mov
inc
inc
in
sti
ret
and
inc
movs
sbb
outs
mov
inc
sub
and
jl
jb
in
jge
mov
int3
xchg
retf
je
dec
mov
jg
dec
jmp
pcmpeqw
add
std
cwde
add
cmc
inc
int
scas
pop
pop
pop
data16
xor
add
push
pushf
cld
xchg
jl
inc
int3
loop
scas
sub
shr
mov
mov
pop
lock
cwde
daa
outs
ins
out
(bad)
mov
outs
sahf
outs
sbb
shr
outs
push
(bad)
mov
test
icebp
cld
iret
imul
(bad)
leave
nop
repnz
cwde
out
lds
call
aas
inc
mov
ss
stos
aam
xchg
sub
ret
or
xchg
pop
into
mov
ret
ror
xor
xchg
dec
push
jb
and
jb
je
adc
cmp
dec
je
xchg
jl
cmp
test
push
retf
dec
arpl
mov
pushf
push
push
pop
das
sbb
cwde
mov
lods
xchg
or
xor
imul
dec
jl
(bad)
(bad)
add
pop
xchg
adc
add
mov
test
fiadd
(bad)
adc
js
mov
loope
add
pop
mov
pop
dec
ret
pop
inc
pop
jbe
in
cmps
mov
in
(bad)
das
pusha
cmp
cmp
daa
pop
lods
aaa
dec
in
or
push
xor
dec
jle
adc
in
inc
push
ficomp
xlat
jnp
in
push
pop
cmp
and
or
enter
mov
clc
xor
ds
call
inc
icebp
fwait
sub
test
and
shl
bound
cmp
mov
sti
inc
pop
mov
inc
or
jo
pop
adc
dec
mov
xchg
dec
je
fisub
push
fisubr
pop
sahf
lods
call
mov
sub
mov
loopne
fdiv
cmp
and
ret
es
(bad)
xchg
ja
pop
jmp
dec
retf
jbe
dec
push
fld
jns
fs
test
pushf
mov
mov
repz
sub
xor
mov
rcl
aaa
outs
repz
test
fst
mov
jbe
inc
cs
lahf
add
jnp
jl
xor
jge
sub
shr
retf
div
into
mov
mov
ret
pop
pop
sub
movs
pop
jp
imul
test
les
jo
push
push
sbb
cld
push
les
xor
gs
push
ins
dec
inc
movs
mov
sbb
ss
lea
stos
push
pushf
mov
push
scas
mul
ret
aad
push
imul
sbb
mov
lods
fs
fdiv
xchg
pop
adc
or
daa
pop
enter
xor
pop
in
inc
aaa
cld
in
cwde
es
sub
das
dec
jle
fmul
mov
ins
mov
pusha
int3
pop
jl
sbb
sahf
push
adc
scas
sbb
(bad)
lods
fsubr
popa
cmp
out
add
dec
sbb
cmp
int
xchg
cmc
push
mov
or
sub
inc
retf
data16
pop
cmp
adc
fimul
js
inc
(bad)
int
xchg
xchg
fild
push
movs
idiv
scas
fsubr
or
sbb
push
and
add
mov
and
push
mov
push
mov
mov
mov
pop
arpl
mov
cmps
xchg
test
out
enter
mov
ficom
repz
call
jp
ins
add
cwde
and
inc
and
mov
sti
hlt
outs
out
test
cmc
rcl
cmc
add
daa
cmc
cs
call
ror
(bad)
movs
clc
ss
in
test
mov
jnp
push
fcom
aas
ins
outs
add
and
mov
cmc
add
popf
das
popa
rcl
(bad)
mov
jo
sub
ins
adc
rcr
(bad)
cld
ret
fbld
jne
jle
mov
shl
daa
addr16
fadd
or
cmp
push
add
stos
pop
add
int3
out
fs
xor
add
popa
enter
mov
inc
jae
imul
sub
je
push
rol
test
in
std
sahf
and
jb
pushf
mov
movs
pop
jno
ins
push
lea
mov
(bad)
jmp
adc
(bad)
push
jne
add
enter
stc
xchg
fcmovb
leave
in
inc
inc
lea
cmp
sahf
cmps
mov
mov
lahf
popf
cmp
push
les
dec
mov
loope
pop
add
pop
pop
mov
sti
and
dec
add
inc
icebp
fcmovnu
add
stc
aaa
push
fild
jg
bnd
loop
inc
sbb
push
call
dec
or
mov
fmul
jo
sahf
lds
popf
sbb
jne
and
and
ror
sbb
aas
sahf
mov
jbe
jmp
push
mov
jecxz
adc
ror
bound
pop
popa
daa
add
adc
dec
dec
enter
lea
cmp
jp
cwde
or
lods
and
enter
lods
fwait
stos
fcmovnbe
mov
fimul
aaa
mov
add
nop
mov
fcomp
scas
cs
inc
cs
in
mov
(bad)
cli
pop
ins
dec
(bad)
test
out
movs
les
loope
lds
inc
gs
jb
mov
mov
popf
(bad)
jb
int
test
popf
(bad)
out
scas
push
es
add
pusha
mov
test
and
mov
push
jg
test
fisttp
sti
jbe
repnz
jp
add
test
cmps
pop
dec
rol
mov
sahf
add
cmps
add
ins
jge
dec
shr
jl
add
and
sub
cmps
adc
(bad)
mov
jo
pop
jmp
push
dec
inc
dec
sub
dec
fcom
cmc
imul
inc
retw
dec
test
jae
dec
fsin
cmp
movs
xor
fld
xor
mov
xor
dec
ss
movs
iret
les
adc
sbb
ja
popa
stos
mul
out
and
mov
mov
cwde
add
xchg
cmp
clc
xchg
jnp
fcomip
adc
push
fsub
pop
cmp
enter
fist
call
adc
xlat
sbb
push
push
sar
mov
pop
cdq
mov
in
and
movs
sti
or
and
stos
jg
jno
xor
pop
ret
pop
(bad)
fcomp
fcomp
orps
jns
pushf
int3
(bad)
mov
in
sbb
mov
add
sbb
dec
loopne
pop
sbb
mov
pop
cmp
fbld
inc
inc
mov
pop
ja
in
dec
mov
inc
xor
mov
cmp
repz
dec
pop
in
jecxz
dec
mov
lds
call
test
shr
jno
jmp
and
test
jge
js
xchg
ret
cmp
dec
scas
movs
jnp
cli
mov
(bad)
fstp
adc
and
mov
repnz
fnsave
dec
test
mov
push
jns
jg
jbe
mov
and
loope
mov
adc
pop
push
ret
jl
mov
icebp
(bad)
pop
outs
sub
adc
jb
(bad)
aas
ds
retf
in
dec
adc
xchg
inc
fcomp
pushf
ss
pop
add
ja
mov
jns
xor
shr
ret
adc
test
dec
fcmovne
lds
fld
jb
mov
sub
(bad)
push
xor
cmp
les
push
pop
mov
sub
mov
xor
or
dec
cli
xchg
sub
lock
jb
ss
mov
loop
repnz
in
mov
nop
inc
xchg
and
mov
lds
or
test
jbe
jecxz
add
and
and
sbb
sahf
retf
out
or
dec
inc
aad
xchg
add
repz
push
jge
pop
jl
pushw
cmps
push
dec
xor
add
mov
fistp
dec
inc
sbb
addr16
pop
cmp
nop
or
dec
test
out
call
dec
adc
jge
loope
(bad)
sahf
loop
fistp
mov
retf
repnz
aad
mov
mov
sub
jmp
enter
adc
stos
stos
retf
mov
jnp
lds
sar
int3
dec
sbb
and
pop
ja
sbb
sar
outs
pushf
(bad)
into
sbb
add
mov
or
sbb
test
mov
push
cmc
jae
ficom
mov
cwde
inc
jns
or
loope
test
push
rcl
fwait
repnz
in
push
aad
fst
fdivr
and
inc
mov
xlat
pop
or
sbb
cmp
jne
sbb
pop
(bad)
mov
cmp
in
dec
fcomp
cmp
dec
inc
mov
push
inc
cmps
lods
mov
lods
sub
imul
pop
inc
mov
xlat
fisubr
movs
sbb
cs
xor
repz
mov
mov
fwait
jl
and
push
imul
cmp
mov
dec
push
ret
fistp
cmp
ins
mov
cld
and
dec
pop
cmp
ins
test
push
jae
inc
sub
jae
fidivr
popa
push
pushf
and
pop
mov
inc
push
out
lahf
lods
inc
scas
cmp
mov
(bad)
out
lea
fwait
icebp
(bad)
mov
lods
cmc
xor
call
mov
pop
shl
pusha
mov
call
adc
ins
imul
out
dec
ret
pop
push
push
out
aam
cdq
and
pop
cdq
loopne
aas
das
push
scas
mov
jb
xor
cmps
or
and
icebp
cli
jnp
xor
loope
add
stos
add
scas
jbe
mov
(bad)
mov
inc
call
lahf
in
lahf
inc
(bad)
fsubr
outs
test
std
clc
xchg
xchg
pop
ja
fidiv
add
sti
sbb
dec
lock
mov
cmps
leave
loope
cld
or
pop
lock
inc
xchg
lods
imul
fwait
push
jl
ficomp
dec
cmp
pop
jg
xlat
xchg
aaa
inc
rcr
jg
stc
mov
inc
sahf
sub
and
in
fisttp
xchg
pushf
cmp
outs
out
test
fs
sahf
sar
cmps
repz
or
pop
xor
jo
imul
(bad)
fisubr
movs
aaa
retf
xchg
jnp
std
adc
arpl
push
iret
push
lods
and
ins
adc
inc
push
test
inc
retf
inc
push
mov
cwde
daa
ja
dec
push
outs
mov
mov
out
repnz
add
ins
das
or
inc
xor
lods
imul
or
xlat
mov
and
cmp
stos
cmps
sub
popf
cmc
xor
push
test
aam
jbe
mov
adc
(bad)
xor
sub
pop
gs
mov
addr16
and
outs
test
push
dec
push
div
movaps
gs
add
adc
movs
cmps
xor
dec
aaa
bound
aas
mov
push
pop
test
cmps
pop
xor
mov
jae
or
dec
cdq
loopne
(bad)
xchg
scas
out
push
add
mov
test
mov
xchg
rcl
add
std
mov
add
and
mov
push
aaa
sbb
mov
test
push
rcr
mov
sbb
jno
fbld
xchg
dec
sar
outs
test
retf
or
and
mov
stos
lea
scas
lahf
aaa
movs
sbb
adc
into
out
ins
jmp
mov
xchg
jno
pop
loope
dec
daa
inc
repnz
out
mov
fmul
jo
jns
fs
(bad)
rol
das
mov
cwde
xor
retf
rcr
rol
shl
test
dec
pop
(bad)
ficom
inc
or
cmp
inc
ins
lahf
sbb
or
cmp
pop
sti
or
rol
fmul
dec
loope
gs
outs
repnz
sbb
je
push
or
xchg
mov
mov
jecxz
dec
push
call
cld
paddusb
loopne
add
push
xlat
out
fwait
and
xchg
adc
adc
pop
sbb
push
call
xchg
pop
ins
lea
enter
(bad)
mov
imul
cmc
jo
mov
xchg
aaa
mov
daa
ds
sbb
xor
ret
in
imul
inc
cmps
jbe
pop
iret
add
mov
jmp
setns
fdivr
outs
(bad)
in
into
outs
fisub
sub
pop
loope
lods
pop
lods
retf
cmps
lock
sbb
push
mov
sbb
jmp
fistp
xchg
push
bound
jno
push
or
mov
lods
gs
mov
or
cmps
mov
fistp
mov
mov
sbb
mov
test
lea
cmp
cmp
jne
sub
loope
das
fst
stc
xchg
dec
cmp
movs
cmp
loopne
mov
xchg
or
fisubr
in
lods
popa
stc
push
sti
adc
sub
cli
inc
cmp
sbb
shl
and
mov
rcr
outs
jmp
mov
xor
push
int3
pushf
test
(bad)
mov
inc
mov
push
ds
out
in
(bad)
ja
xchg
jl
add
jne
pop
(bad)
cmp
rcl
or
outs
jb
ror
ret
call
adc
pop
sahf
jbe
and
jns
mov
scas
clc
jbe
inc
outs
fisub
inc
js
jmp
push
movs
sub
jl
out
ret
out
jp
les
jns
dec
jp
jge
sub
push
inc
jmp
xlat
(bad)
sti
or
fwait
out
addr16
outs
mov
sub
sbb
and
pop
mov
aad
and
into
mul
sub
xchg
and
mov
cli
aaa
aam
mov
loope
and
add
add
jno
cli
cmp
es
imul
out
mov
jge
jmp
or
push
mov
mov
jae
repnz
mov
sbb
mov
movs
pushf
mov
scas
es
mov
dec
dec
inc
scas
push
jne
js
pop
inc
dec
xor
push
dec
sbb
jp
pusha
push
fs
adc
jmp
mov
push
enter
je
hlt
out
pop
fdiv
xchg
cmp
dec
fmul
(bad)
add
cdq
xchg
je
xlat
call
mov
test
pop
mov
sahf
mov
jge
mov
retf
pop
mov
leave
retf
fistp
lods
dec
cld
dec
popf
lods
popf
mov
(bad)
mov
jp
movs
xchg
push
xchg
ret
push
push
pop
aas
lods
and
cmps
mov
push
xchg
cdq
pop
(bad)
movs
mov
inc
mov
and
inc
push
icebp
pop
and
imul
push
js
sahf
mov
test
icebp
nop
xor
push
jns
xchg
mov
xor
pop
add
loop
cmp
leave
xlat
adc
cmp
sbb
repnz
fbstp
retf
cdq
test
push
sub
enter
mov
pop
repnz
and
leave
sti
(bad)
jb
mov
iret
dec
jb
and
scas
pushf
out
add
jae
mov
rcr
adc
cwde
ds
pop
xchg
(bad)
cmc
xchg
sbb
pop
push
pop
mov
js
dec
pop
popf
mov
mov
mov
(bad)
mov
mov
out
lods
(bad)
jg
sbb
jmp
jne
pop
pop
int3
shr
adc
jecxz
ja
cmps
xchg
test
sub
fmul
ins
std
mov
popa
adc
outs
not
jb
add
adc
xor
dec
push
sbb
stos
inc
repnz
aam
and
and
jbe
inc
jl
clc
repnz
inc
add
add
ja
rcr
adc
pop
test
or
out
mov
dec
pop
xchg
mov
and
inc
out
loope
dec
in
sub
push
mov
cli
aaa
or
adc
xor
mov
repnz
retf
mov
jge
ret
add
push
test
sbb
es
dec
loopne
mov
push
sar
xchg
xchg
mov
cdq
gs
jae
push
pop
in
cmp
sbb
mov
test
shr
(bad)
xchg
pop
shl
stos
dec
mov
out
cmp
aaa
cli
pop
or
push
mov
cmps
jno
fistp
retf
mov
add
mov
cmps
(bad)
xor
xchg
(bad)
mov
and
sbb
xchg
add
(bad)
stos
pop
aaa
adc
sbb
lods
jne
out
xchg
aas
jmp
rcr
in
mov
adc
cmp
cmps
cmc
ins
mov
ret
repz
mov
mov
nop
outs
inc
push
fcom
in
pop
sbb
(bad)
call
pop
jb
sub
mov
sub
xchg
adc
popf
xchg
push
xor
aad
(bad)
js
or
or
mov
xchg
icebp
mov
inc
sti
cmp
mov
fcomp
gs
pop
inc
cmp
test
mov
xor
ins
sbb
stc
aas
cmp
mov
cmp
mov
xchg
cmovne
ror
ror
ss
ins
aas
rcr
enter
mov
inc
sub
jl
pop
cmp
xor
int
and
dec
jl
cld
jno
inc
test
jmp
or
sbb
and
cmc
ror
fsub
jne
jo
xor
repz
xchg
or
popa
in
pop
aaa
js
shl
(bad)
sbb
dec
push
mov
xchg
cmp
cmp
or
pop
leave
xor
shl
pop
(bad)
nop
repnz
dec
or
ss
mov
pop
mov
or
push
sbb
cmp
sub
and
or
xchg
popa
mov
xlat
(bad)
mov
cmp
cmps
rcl
push
mov
rcl
mov
fld
out
retf
loopne
xor
cli
int
or
pushf
aas
add
inc
or
pop
jae
pop
dec
popfw
jns
das
and
(bad)
aaa
mov
aad
(bad)
sub
mov
mov
call
jmp
jl
xchg
pushf
add
cmp
xor
inc
fistp
icebp
ret
into
add
sub
fldln2
sbb
outs
pop
(bad)
xlat
sub
mov
popf
pusha
adc
dec
pop
adc
xlat
imul
push
add
and
icebp
adc
mov
sbb
movs
pop
mov
adc
popa
sub
lock
imul
add
xchg
mov
xchg
sbb
and
or
push
add
shl
pop
cwde
ja
pop
push
mov
pop
es
nop
test
adc
add
jb
inc
nop
fstp
out
add
not
cmps
retf
pop
sub
into
rol
hlt
mov
sbb
enter
cwde
cmp
push
jmp
call
std
and
inc
cmp
ins
cli
fst
add
xchg
xor
inc
sti
or
shr
pop
jp
not
jmp
and
dec
mov
cdq
les
leave
in
add
faddp
outs
out
icebp
cmps
sub
loope
jbe
popa
cld
push
cld
push
jmp
xor
loopne
or
cmps
push
cmp
stos
mov
xchg
stos
cmps
push
push
int3
mov
pushf
dec
sub
jmp
bnd
xor
dec
iret
dec
in
test
cmp
or
adc
sbb
xor
dec
nop
sub
bnd
cli
push
pop
mov
test
and
push
mov
fst
jmp
je
sub
jns
mov
sbb
scas
adc
sbb
pop
std
push
retf
sub
pop
shr
fdiv
inc
cmp
push
aas
mov
pop
(bad)
fidivr
mov
cwde
enter
or
add
and
cmps
ins
mov
mov
fcmovb
fild
scas
mov
aam
jle
or
and
xor
cwde
mov
dec
mov
mov
jb
pop
enter
pop
push
jae
mov
mov
ja
(bad)
icebp
scas
inc
push
mov
lea
mov
(bad)
das
aas
lea
stos
out
ficomp
and
mov
call
cld
inc
xor
popf
(bad)
fst
aas
jmp
arpl
in
xchg
ins
pop
and
adc
sbb
inc
add
stos
adc
dec
sub
adc
and
pop
jae
push
movs
mov
inc
push
ret
nop
(bad)
movs
aaa
cmp
loopne
cli
xlat
dec
jae
fcom
ret
arpl
shl
xchg
pop
sbb
in
in
mov
repnz
dec
bound
pop
pop
push
sbb
daa
into
jno
ja
xchg
rcl
and
sub
push
pop
push
cmp
out
and
hlt
aas
add
lds
jns
shr
cmp
ss
adc
or
inc
aad
inc
inc
adc
push
jge
or
retf
icebp
ror
js
call
jle
outs
sbb
gs
push
or
mov
inc
mov
and
stos
jno
jp
nop
jb
aaa
jbe
push
retf
das
sub
and
movaps
inc
add
pop
aad
pop
fiadd
aam
cli
pop
ja
push
cli
mov
mov
int
or
sbb
shl
pop
adc
je
fstp
or
cdq
fistp
ret
push
not
sub
jge
sub
sbb
in
test
mov
repz
xor
jl
in
jae
adc
scas
or
push
ds
push
mov
dec
loopne
add
cmp
pop
jp
and
and
adc
iret
xchg
test
movs
retf
add
cmp
fisttp
js
rol
(bad)
fst
pop
mov
adc
jns
push
push
outs
push
out
das
ret
add
pop
idiv
test
ja
sub
jbe
dec
push
jge
add
out
and
enter
and
dec
clc
cs
sbb
adc
add
iret
fmul
sub
push
ins
div
mov
inc
push
jns
imul
push
mov
test
mov
ins
loope
and
push
inc
repnz
push
mov
jmp
add
(bad)
imul
mov
xor
repz
imul
xlat
push
(bad)
mov
cwde
lahf
outs
into
add
mov
outs
jmp
mov
repz
stos
inc
add
sahf
cli
jmp
jae
add
mov
cmp
loopne
or
jge
outs
and
(bad)
or
ins
into
sub
ror
inc
out
mov
adc
sbb
test
loop
jle
lds
retf
cmp
fimul
pop
jmp
mul
mov
mov
mov
movs
mov
mov
hlt
or
cmp
inc
in
cmp
movs
aam
sti
shl
xchg
hlt
js
rcr
push
repnz
imul
push
push
cmc
pop
aas
push
imul
cmps
sub
out
mov
lods
adc
sbb
dec
inc
call
jno
cmp
push
rcr
cmp
pop
pop
pushf
add
ror
(bad)
push
adc
dec
sbb
dec
mov
or
dec
lods
std
(bad)
xor
add
jno
cmp
or
pop
jmp
mov
xor
pop
xchg
mov
inc
pop
enter
cmc
xchg
outs
int
loope
xchg
imul
mov
retf
adc
pop
jbe
into
push
mov
jp
jmp
add
inc
pop
or
pop
fmul
mov
sbb
(bad)
lds
pmovmskb
sti
xchg
push
(bad)
pop
mov
jp
into
test
fidivr
int
mov
je
mov
mov
or
xchg
sahf
xchg
jbe
inc
pop
pop
mov
jb
cmovs
je
jo
aaa
sub
adc
(bad)
fistp
cmp
call
and
cmps
rol
bnd
xlat
pop
or
repz
jo
xor
mov
fild
cmp
imul
mov
(bad)
jo
es
sub
push
pop
and
enter
mov
inc
dec
push
cmp
les
mov
adc
fsub
shr
inc
jp
cmp
xlat
movs
and
das
inc
call
lea
xchg
loopne
pop
xchg
test
push
mov
pop
mov
add
xor
jg
and
leave
(bad)
arpl
xchg
or
sub
mov
movs
sbb
not
push
ins
pop
dec
bound
sub
popf
push
fbstp
repz
and
shr
push
out
mov
pop
retf
sub
xor
stos
fisubr
add
in
mov
fcom
cmp
cmps
xor
stc
adc
mov
ins
push
ror
jbe
outs
arpl
mov
mov
push
div
pop
mov
mov
imul
push
aaa
fistp
lea
inc
fstp
in
inc
aaa
dec
pop
pop
adc
lods
out
cmp
das
mov
jge
test
cli
shr
scas
sbb
scas
cmp
xchg
or
shr
adc
push
or
jae
das
mov
dec
or
or
shl
movs
mov
ret
cmps
es
idiv
or
vmovaps
scas
stos
xchg
cld
jbe
mov
mov
data16
cmc
xor
out
pushf
mov
and
adc
jmp
sub
sub
jno
push
mov
push
sahf
add
lock
sub
cmp
sub
test
sub
push
ficomp
dec
scas
push
fdivr
pop
dec
fcmovnb
push
fbld
pop
pop
clc
out
(bad)
aam
fstp
push
pop
push
mov
and
jb
pop
lahf
push
hlt
sub
ret
(bad)
push
ins
jmp
outs
mov
gs
pop
jb
jmp
mov
retf
xchg
or
in
mov
fld
xchg
shl
dec
loope
jmp
fsubr
push
xchg
or
sti
push
or
add
pop
fwait
push
add
mov
rcl
mov
inc
dec
xor
ja
or
aam
out
add
inc
(bad)
xchg
int
inc
and
aam
(bad)
enter
lock
jge
sar
nop
popa
jge
sub
push
sbb
lahf
mov
scas
mov
cdq
pop
out
fdivr
dec
(bad)
jmp
scas
xlat
add
add
in
test
mov
popf
scas
xchg
cmp
fist
cmp
jnp
mov
adc
pop
jg
or
mov
inc
mov
pop
(bad)
xchg
jmp
shl
nop
dec
mov
rcl
sub
ja
fidiv
(bad)
fistp
lock
mov
nop
and
pushf
cmp
sbb
and
and
pop
xchg
lock
(bad)
and
sbb
hlt
retf
jo
mov
mov
or
data16
mov
dec
sar
mov
std
loopne
jl
mov
scas
ret
mov
and
adc
push
rol
ret
pop
and
mov
daa
xor
hlt
push
push
(bad)
jmp
neg
cmp
jge
pop
rcl
mov
outs
dec
pop
sbb
push
sub
mov
sbb
les
arpl
shl
lds
adc
inc
(bad)
adc
jecxz
out
mov
cdq
jmp
movs
mov
xor
js
ret
xchg
cld
cld
mov
inc
xchg
out
mov
lods
test
add
ficom
xchg
xor
mov
dec
xchg
cs
cmp
cld
in
xor
mov
xchg
lds
loop
out
fild
scas
mov
mov
lea
aas
add
fcomip
ret
test
stos
les
sbb
pop
push
xor
inc
mov
sahf
les
mov
call
shl
mov
shl
push
mov
test
mov
push
pop
std
mov
fldenv
in
rcr
in
or
idiv
jb
pop
jne
pop
push
fstp
mov
jns
pop
repnz
mov
jmp
lods
mov
push
cli
hlt
imul
aas
cmc
outs
pop
xchg
fwait
out
bound
sub
inc
mov
pusha
loope
les
dec
inc
jle
cmps
mov
inc
nop
dec
add
loop
(bad)
jb
cli
sbb
xor
and
mov
shl
jbe
xor
xchg
scas
inc
(bad)
shr
and
dec
stos
das
mov
jp
dec
lock
mov
stos
jecxz
enter
push
jb
sub
cmp
aad
pop
sar
fdivp
jp
stc
nop
scas
inc
push
movs
pop
jecxz
mov
lock
shl
rcr
(bad)
repnz
jle
sar
daa
shl
ja
sti
aam
test
push
mov
jl
sbb
jp
in
xlat
xor
imul
push
jmp
outs
cld
sub
push
test
jg
mov
mov
jo
fisttp
dec
add
(bad)
and
dec
sub
aaa
fwait
push
sbb
push
in
(bad)
sub
rol
fidivr
arpl
frstor
xchg
into
dec
(bad)
sar
stc
and
rol
mov
rcl
das
cdq
pop
inc
push
mov
and
popf
ret
out
cld
fsincos
and
dec
das
dec
retf
or
adc
add
cs
out
scas
sub
lods
mov
add
mov
xor
jb
fwait
pop
js
ret
cmp
sub
xchg
rcr
in
retf
add
(bad)
les
xchg
mov
in
mov
dec
push
stc
ins
push
dec
lock
sti
mov
xchg
pop
pop
mov
sub
adc
rcl
out
sbb
and
mul
jo
mov
iret
mov
jmp
loop
aad
adc
cmps
adc
xor
jbe
or
mov
ror
add
pop
cmp
xor
push
dec
xchg
paddsw
push
jp
stos
add
cdq
fst
data16
push
lahf
jl
test
jae
sbb
fsubr
test
push
mov
add
mov
arpl
dec
stos
aam
jle
pop
mov
adc
and
data16
stc
add
retf
inc
enter
cmp
out
adc
push
ins
imul
rcl
out
ror
popf
addr16
fiadd
loop
push
mov
pop
ins
sbb
in
dec
loope
imul
sub
mov
movs
mov
fsub
xchg
test
stc
int
pop
push
sar
call
aam
sar
lods
jnp
shr
inc
pop
sbb
cld
addr16
mov
mov
cld
aaa
or
dec
adc
repnz
sub
sbb
add
mov
dec
push
pop
mov
ret
into
and
and
push
retf
mov
push
into
push
ss
fdivr
xchg
and
rol
and
pop
and
je
xor
and
mov
xchg
loop
mov
and
(bad)
leave
enter
dec
mov
int3
mov
mov
pop
leave
fidiv
jo
add
push
retf
data16
add
fs
and
rcl
shl
jns
or
gs
loop
xlat
pushf
pop
test
imul
mov
jecxz
inc
adc
adc
sbb
stos
fldcw
leave
mov
pop
fdivr
int3
iret
xor
mov
inc
out
cwde
add
xchg
loopne
cmps
(bad)
cli
cli
dec
nop
daa
hlt
pusha
rcr
jmp
dec
inc
movs
sbb
or
cmp
stos
mov
push
or
push
rol
pop
mov
aas
push
or
repz
fstp
xchg
retf
sbb
inc
push
adc
fcmovbe
pusha
cwde
adc
inc
jmp
cmp
aam
mov
or
das
dec
adc
arpl
pop
stos
fst
aad
lods
inc
jbe
je
dec
inc
jno
push
ins
mov
push
pop
mov
test
push
stos
inc
lea
fidivr
jae
sti
int3
push
ins
scas
jmp
(bad)
xor
push
jmp
repz
(bad)
lods
cmps
mov
addr16
xchg
pop
in
adc
movs
ja
inc
ss
imul
dec
jmp
fsubp
jl
pusha
les
lea
mov
imul
dec
adc
jge
xor
aas
xor
cmps
loopne
jmp
loope
xor
out
dec
mov
sti
test
inc
mov
push
loopne
xchg
lock
jbe
pop
push
fdivr
dec
pop
ja
sub
push
add
movs
nop
push
dec
push
cmp
lock
push
sbb
push
frstor
add
inc
ror
test
jo
cdq
push
lea
push
fbld
adc
std
jnp
or
push
scas
mov
add
clc
pop
scas
sbb
int
push
adc
out
dec
retf
and
sub
(bad)
xchg
not
in
inc
mov
sbb
es
fistp
outs
mov
cld
scas
stc
movs
xor
shl
dec
pop
mov
sub
xchg
cmp
mov
jmp
jo
pop
dec
xchg
sub
pcmpeqw
cmp
or
sbb
dec
mov
jecxz
aas
lahf
adc
retf
ret
sub
adc
cmp
not
mov
(bad)
stc
add
jb
xor
loope
aas
cld
(bad)
sbb
cmp
pop
pop
dec
xor
mov
imul
mov
out
cmp
inc
mul
imul
or
into
pop
or
mov
loopne
pop
lds
lods
cmp
lds
retf
push
xchg
test
sbb
xchg
mov
int3
data16
xor
ss
cli
adc
fcomp
sbb
ss
loop
cmp
jp
dec
sub
cmp
sub
shl
sub
jg
test
mov
dec
mov
cvtdq2ps
push
cmp
int3
cmp
int3
outs
mov
xchg
or
pusha
or
aad
inc
(bad)
repnz
sub
adc
jne
jnp
push
push
out
sbb
in
je
movs
pushf
dec
sbb
ins
je
aad
xor
pop
test
fistp
movs
jae
mov
dec
jae
scas
and
test
pop
fnstsw
nop
or
and
sbb
mov
xlat
outs
ret
add
test
inc
pop
sbb
hlt
cmp
push
add
and
mov
pop
mov
adc
jmp
lea
xchg
or
xchg
push
xor
(bad)
pop
test
or
push
sbb
popf
fdivr
mov
xor
mov
out
push
sub
aas
push
(bad)
test
in
call
jmp
lahf
mov
out
addr16
loop
pop
into
xchg
(bad)
pop
jmp
or
mov
mov
push
sbb
jg
push
mov
imul
jns
fld
addr16
daa
imul
mov
ins
ror
out
jns
cmp
fcomp
pop
and
jmp
data16
ss
idiv
fwait
mov
xchg
ins
dec
pop
sub
xor
js
in
pop
and
mov
adc
in
jg
mov
xchg
push
test
popf
fisttp
loope
loopne
and
cmp
lods
imul
das
(bad)
jmp
out
mov
or
xlat
dec
or
movs
jecxz
push
jle
xchg
sbb
les
mov
mov
outs
pop
jns
sbb
or
(bad)
and
ss
mov
ja
xchg
pop
push
or
cmp
mov
jl
out
mov
sbb
hlt
ja
ds
outs
loop
jecxz
push
sti
mov
xor
or
sbb
retf
pop
mov
movs
jb
lds
(bad)
fild
das
add
mov
icebp
test
or
outs
(bad)
push
mov
mov
xlat
push
cmp
xor
pushf
mov
mov
mov
xor
mov
sbb
hlt
jl
push
pop
xchg
lods
stos
mov
rcr
pushf
adc
mov
mov
out
pop
and
mov
dec
fmul
push
idiv
mov
int
enter
add
push
retf
es
pop
popf
xchg
(bad)
out
movs
scas
push
nop
fistp
fs
jmp
inc
std
call
mov
(bad)
xchg
rol
daa
in
inc
mov
or
mov
shl
jno
xor
out
or
jmp
jl
or
stc
push
dec
(bad)
cmp
sub
mov
aaa
push
lods
xchg
pop
jmp
mov
lahf
pop
leave
loopne
out
and
and
add
xor
xchg
jecxz
inc
xor
jmp
cdq
push
dec
movs
mov
push
hlt
stos
gs
push
cmc
add
mov
adc
addr16
aas
movs
adc
mov
popa
jno
in
retf
shr
add
dec
pop
outs
push
fdiv
ret
xchg
lahf
xchg
pusha
mov
jne
and
lahf
popa
adc
or
shl
in
dec
fst
ss
les
jmp
pop
mov
ds
sbb
jmp
cdq
in
inc
shr
mov
imul
sbb
es
fsub
rcr
mov
enter
cmp
sbb
in
inc
cmps
push
test
aad
add
ror
push
retf
das
and
(bad)
rcl
or
test
dec
add
push
sbb
pop
lea
mov
les
mov
pop
inc
inc
dec
sar
rcr
push
sti
movs
int3
or
inc
jno
pop
mov
into
popf
aad
call
outs
test
add
scas
repnz
frstor
ficomp
pop
test
and
in
xor
les
hlt
ret
xor
scas
pop
push
and
push
add
cdq
mov
push
dec
outs
fistp
push
clc
mov
loope
cmp
out
mov
dec
pop
cmp
push
ja
mov
sti
inc
(bad)
sub
aaa
daa
xor
icebp
retf
cmp
leave
xlat
stos
rcl
(bad)
adc
adc
(bad)
pop
pop
imul
add
(bad)
jns
mov
or
cmp
jmp
pop
push
(bad)
js
xchg
cmp
cmp
push
add
jbe
pop
pop
mov
add
mov
frstor
mov
test
push
push
jp
cmp
(bad)
pushf
sbb
(bad)
jns
dec
sbb
enter
xor
outs
popf
fidivr
dec
(bad)
cld
fst
sbb
jmp
mov
das
dec
sub
mov
sub
mov
inc
mov
or
sbb
mov
xchg
sub
cmps
mov
sbb
imul
mul
js
movs
mov
call
arpl
inc
(bad)
cdq
jno
mov
dec
push
add
repnz
xor
mov
push
xor
jb
cmp
adc
(bad)
fsubr
ret
or
cmp
xchg
inc
fmul
test
add
mov
das
cdq
nop
push
into
ins
adc
fwait
xor
inc
dec
je
ds
jae
and
and
(bad)
sub
jmp
mov
mov
int
sbb
ret
add
jle
and
adc
sub
add
mov
or
mov
call
cwde
arpl
lods
push
lods
inc
sbb
xor
repnz
mov
out
call
inc
clc
cld
pop
sar
jns
pop
daa
call
dec
rcl
and
(bad)
xchg
pushf
sub
cmp
jge
lahf
cdq
es
pop
(bad)
enter
rcl
leave
mov
jne
aas
sub
pop
xchg
add
push
push
iret
hlt
cmps
mov
out
mov
cs
cmps
xchg
cmp
push
sti
(bad)
fdiv
mov
pop
ret
lock
test
cmp
stos
pop
les
pop
jmp
xchg
add
inc
push
ins
aas
inc
icebp
dec
(bad)
scas
movs
sbb
retf
imul
shl
scas
fistp
sbb
sbb
push
fwait
inc
shr
adc
adc
inc
int
call
dec
adc
lahf
adc
shl
jmp
pop
cs
cwde
push
dec
js
das
push
cmp
xor
inc
sbb
icebp
fwait
cwde
sub
or
out
add
sahf
ror
test
pop
clc
jg
sub
iret
inc
or
iret
add
aad
ds
dec
lds
mov
xor
test
fistp
jmp
ret
test
repz
aam
adc
mov
xor
shr
xchg
sbb
inc
aas
push
sbb
rcl
cmps
popf
dec
cld
in
imul
enter
je
push
cmp
test
jb
adc
add
int
mov
and
pop
sbb
pop
add
les
xchg
ja
push
mov
xlat
enter
mov
xchg
add
or
test
jno
loopne
jl
in
dec
and
sbb
xchg
and
daa
sub
adc
mov
test
je
mov
ret
xor
lea
jae
in
sbb
pop
cmp
leave
lock
cmps
in
call
mov
xchg
push
mov
mov
das
xchg
dec
fwait
bound
xor
push
sub
in
mov
add
movs
dec
jnp
cld
jmp
retf
pushf
fcomp
sub
and
(bad)
inc
popa
stc
jb
add
fdiv
jns
push
and
out
fist
pop
pop
xor
mov
push
sub
sbb
mov
(bad)
cmc
movs
jne
xor
mov
data16
cmps
dec
loope
cmp
jno
xchg
and
jbe
xchg
dec
(bad)
mov
cmp
inc
sbb
scas
and
mov
stos
inc
mov
push
sub
mov
push
xchg
inc
sub
ds
jl
xchg
retf
xchg
sti
xchg
adc
mov
rcr
or
adc
sbb
aam
xchg
dec
and
(bad)
lods
pop
bound
pop
xor
enter
dec
fcmovnbe
lock
and
ins
mov
fld
outs
lds
popa
add
shl
les
std
dec
sbb
or
das
aaa
xor
mov
jno
aaa
mov
ja
pop
addr16
(bad)
sti
mov
or
fiadd
xor
push
mov
mov
cld
popa
div
repz
xchg
outs
push
mov
nop
xor
mov
rcr
(bad)
push
mov
xor
ret
sub
cmps
test
xchg
pusha
or
repz
mov
xor
jmp
adc
cmps
mov
push
ret
ja
mov
mov
setbe
repnz
retf
into
stos
add
repnz
dec
paddusw
push
rcl
xor
sbb
mov
pop
xchg
iret
xchg
and
pop
cmp
call
mov
jb
pop
test
loop
jg
retf
std
sbb
jmp
out
mov
jno
fisttp
mov
cmp
stos
mov
xor
sbb
dec
dec
stc
pop
jp
les
rcl
ret
xchg
mov
scas
inc
xchg
adc
push
add
call
and
(bad)
pop
loop
dec
dec
jmp
in
mov
int3
(bad)
ss
shl
retf
pop
dec
outs
or
(bad)
mov
jbe
mov
in
cmp
retf
push
cld
fcmovb
stos
or
out
das
in
pop
iret
test
sbb
jp
fdivr
adc
in
fstp
out
sahf
xor
inc
and
(bad)
in
or
add
lock
lods
cwde
es
test
inc
in
inc
xor
xor
shl
clc
cmps
pop
jmp
mov
cmp
cmp
gs
jne
imul
test
add
mov
mov
pop
inc
ins
lock
ret
retf
sub
cld
test
out
mov
xchg
cmp
and
mov
gs
xchg
add
sbb
in
mov
inc
add
fild
pop
fstp
jne
inc
sbb
xlat
(bad)
push
xchg
mov
test
fwait
push
adc
stos
mov
mov
in
repz
mov
mov
fcmove
xchg
sbb
mov
and
and
dec
dec
push
(bad)
in
jecxz
ds
hlt
cmp
stos
jnp
add
mov
dec
clc
fwait
mov
fcomi
cmp
or
mov
ror
(bad)
inc
pop
loop
sub
fidivr
in
add
push
inc
pop
xchg
dec
mov
cmp
gs
test
sbb
mov
rcr
mov
cli
mov
out
jne
mov
push
scas
retf
es
and
mov
xor
vmwrite
(bad)
mov
data16
dec
shl
(bad)
cmp
sbb
pusha
rcl
sbb
pop
dec
jne
jecxz
addr16
hlt
iret
jmp
loopne
mov
pushf
cmps
in
xchg
jo
stc
fsubr
iret
mov
xchg
dec
add
ret
rcr
mov
int
jp
dec
ret
sahf
sar
mov
jmp
retf
cwde
outs
cmp
sbb
mov
jecxz
bound
ja
das
rcl
jmp
in
push
fnstenv
cmp
lock
mov
pop
and
retf
jbe
push
scas
jne
sbb
sub
adc
ds
adc
arpl
add
xor
ins
fsub
out
adc
push
push
fistp
repz
int3
push
jbe
adc
cmp
mov
imul
hlt
pusha
leave
(bad)
cmc
cs
test
xchg
jb
in
scas
xor
dec
jp
jae
inc
out
add
or
add
xchg
inc
cdq
sti
movs
enter
in
repnz
out
out
mov
xor
sti
lea
std
mov
lahf
cld
sbb
jns
adc
int3
sub
mov
mov
cld
sti
cmp
fnstenv
ss
cmp
movs
mov
cs
sub
pusha
inc
(bad)
enter
mov
jecxz
mov
add
aam
in
xlat
or
xchg
int3
pop
sub
imul
mov
xor
pushf
fidiv
test
dec
push
inc
ret
lods
sahf
stos
js
sub
xchg
pop
mov
out
out
fnstsw
pop
enter
fsubr
inc
xlat
jne
fs
and
inc
outs
dec
ss
mov
mov
sbb
aad
les
mov
sahf
mov
mov
loope
out
or
stos
jns
fdiv
jae
mov
mov
ja
inc
dec
mov
dec
pop
pop
push
ins
cmp
arpl
add
in
rol
cmc
add
nop
js
test
leave
push
xor
adc
ret
ss
sub
sahf
mov
add
sub
mov
jo
retf
jae
aaa
pop
add
push
lods
mov
lea
cwde
stos
inc
xchg
sbb
push
jnp
in
out
or
xchg
ja
sbb
mov
out
nop
or
inc
aas
outs
stos
es
ret
xor
test
ficomp
pop
lods
(bad)
(bad)
cmp
fiadd
(bad)
ins
ror
xchg
jecxz
xor
mov
sbb
jae
xor
xor
dec
cmp
cdq
test
arpl
ror
fldcw
jbe
enter
sub
fisubr
aam
jmp
fwait
lods
push
stos
hlt
jae
ret
push
inc
test
stos
repz
xchg
jb
cwde
cmp
fs
(bad)
xchg
(bad)
sbb
sar
popa
mov
stos
xchg
mov
in
pop
xlat
and
pop
cmp
sub
les
std
pop
sbb
std
shl
sub
mov
add
lock
push
push
mov
mov
sbb
sub
xchg
leave
cdq
test
les
jno
jnp
cmp
push
sbb
inc
aam
in
or
pop
mov
dec
sub
add
imul
or
out
jl
xor
outs
and
and
(bad)
jne
xor
imul
and
xor
popf
shl
mov
bound
mov
jecxz
dec
cmp
jge
cmp
je
imul
add
lea
loop
mov
add
retf
lds
es
stos
aad
or
fcom
dec
fbld
sub
dec
rcr
dec
mov
mov
sahf
das
mov
bound
iret
push
mov
xchg
xchg
jp
mov
cmp
jg
fstp
and
cmp
int3
int3
int3
icebp
ficom
jge
pop
push
cmp
jmp
inc
sbb
push
(bad)
into
cli
test
push
sub
pop
ret
stc
aaa
adc
sub
pusha
xchg
inc
sub
outs
sti
pusha
ins
mov
add
retf
sub
fmul
sbb
mov
add
les
fmul
pop
ror
retf
dec
xor
xor
rcr
jnp
shr
inc
shl
dec
mov
hlt
adc
repnz
pusha
gs
je
pop
add
arpl
das
pop
cmps
mov
dec
fstp
cmp
jb
stos
scas
or
sbb
or
sub
or
adc
mov
cmp
ror
scas
and
cmp
xor
mov
pop
inc
nop
mov
sahf
pop
sbb
dec
pop
sub
test
xchg
sar
sbb
cmp
bnd
ds
pop
loop
mov
(bad)
popa
and
inc
mov
in
sub
sub
xchg
movs
ret
push
loop
movs
jmp
sahf
dec
adc
mov
adc
pop
mov
mov
mov
push
cs
fistp
movs
in
mov
push
push
mov
fwait
mov
jmp
cmc
pop
ins
mov
dec
or
add
jbe
out
xchg
xchg
call
(bad)
es
adc
fild
icebp
int3
movs
mov
pop
ins
sbb
push
jl
ret
jmp
imul
pop
sub
sbb
adc
pop
pop
es
stc
push
mov
cmp
test
push
dec
ja
mov
lock
call
js
call
push
cmps
jmp
es
add
xor
dec
or
push
ret
mov
sub
mov
arpl
inc
pop
(bad)
loopne
add
popa
sbb
rol
adc
sbb
call
inc
out
(bad)
repz
jg
out
jne
pusha
test
pop
js
(bad)
or
push
into
mov
imul
push
retf
mov
sub
movs
sub
jge
sbb
or
add
movs
into
mov
sub
or
clc
shr
push
cmp
push
add
in
pop
cmps
(bad)
mov
test
dec
mov
xchg
jae
scas
sahf
mov
xor
push
mov
fxch
cld
test
jbe
dec
dec
call
and
xchg
sub
xchg
mov
cld
push
lds
add
jb
jle
mov
shl
cmp
cmp
mov
mov
sbb
xor
repnz
sub
fisttp
jl
in
ins
cmp
inc
jmp
not
pop
cdq
das
inc
sub
ss
stos
push
test
mov
jecxz
out
pushf
shl
or
das
add
and
sub
push
jbe
iret
mov
lds
je
jle
aam
test
test
setg
not
fdivr
add
sbb
int
mov
push
movs
mov
push
dec
mov
inc
cmp
inc
push
inc
fwait
shl
push
add
out
sub
pusha
rol
xchg
stc
call
ss
inc
loopne
cmp
push
jecxz
leave
neg
cmp
loopne
loopne
sub
repz
xor
frstpm(287
mov
xor
push
sub
mov
and
inc
repnz
addr16
xchg
dec
and
and
lods
and
adc
mov
pusha
lods
sar
es
and
pop
mov
cmp
mov
adc
test
push
cmps
mov
cli
add
and
in
clc
push
hlt
lock
popf
push
adc
push
xchg
stc
mov
pusha
cmp
ret
pop
pop
jae
scas
ret
addr16
sti
fs
(bad)
out
pop
gs
cmps
push
pop
cmp
mov
test
push
out
cmps
inc
cmp
pop
cmp
dec
jl
leave
push
inc
leave
pop
inc
cld
js
jle
ins
(bad)
les
in
pop
mov
outs
(bad)
jmp
loope
or
fstp
clc
mov
ss
(bad)
sub
cs
mov
inc
retf
jnp
xor
inc
jle
push
aas
sar
pop
mul
add
inc
sub
in
pop
popf
dec
cmp
cmp
lods
cmps
lahf
call
imul
popa
and
das
add
add
(bad)
test
jno
jecxz
push
dec
adc
sbb
adc
push
loope
jae
jnp
sar
imul
mov
push
in
mov
and
stos
fstp
nop
aad
xchg
pusha
pop
dec
mov
push
data16
mov
push
test
leave
sub
cmp
dec
fwait
mov
int3
mov
jp
je
fidiv
shl
inc
shl
jno
(bad)
inc
jno
mov
push
mov
and
xlat
mov
hlt
js
dec
push
ins
sub
sbb
out
push
xor
mov
inc
jl
sbb
scas
repnz
pusha
(bad)
hlt
xor
scas
test
pop
xchg
fnstsw
cmp
int
inc
test
cmp
ficom
push
xchg
aam
out
sti
sbb
inc
xchg
lea
sub
jae
cmc
or
fwait
and
mov
pusha
test
add
cmp
out
bound
pop
sbb
ficomp
ret
mov
out
pop
dec
or
or
jmp
(bad)
aas
adc
and
retf
jp
retf
lds
clc
cmps
das
or
sbb
test
jecxz
xchg
stos
mov
or
in
jle
push
sbb
loop
and
push
and
inc
aas
mov
jecxz
mov
loop
jge
lea
push
pop
pop
into
xchg
adc
xchg
aam
out
jno
and
sub
inc
pop
mov
out
jge
(bad)
mov
pop
xchg
mov
out
aad
cmp
mov
outs
mov
pop
mov
cmp
or
test
push
mov
data16
inc
jo
dec
sub
popf
arpl
fstp
mov
or
sub
and
ins
outs
outs
imul
call
xchg
loope
mov
dec
aad
sub
pop
mov
sub
outs
mov
push
retf
enter
icebp
cmp
fadd
inc
enter
mov
cmp
sub
or
retf
in
jne
adc
cwde
test
aaa
inc
cdq
cmp
xchg
fmul
push
in
cmp
dec
out
or
aaa
jno
xchg
xor
call
push
jne
jecxz
movs
cmp
enter
inc
les
xlat
stc
jnp
sub
push
je
and
mov
mov
jnp
rcr
xchg
das
pop
push
sbb
mov
bound
out
add
cmp
scas
xchg
scas
inc
jmp
pop
inc
stc
jp
mov
jecxz
(bad)
xchg
call
sub
jp
sahf
push
cmp
(bad)
cmp
and
stos
in
out
push
jo
mov
fbld
push
mov
and
daa
sbb
jl
sub
adc
loope
es
push
adc
aad
and
cmp
imul
push
fsub
dec
test
sbb
push
sbb
and
jae
inc
mov
mov
sahf
ror
pusha
cmp
and
popa
lock
xor
int3
test
icebp
daa
mov
stc
fldenv
mov
inc
inc
loop
mov
jg
push
inc
mov
nop
std
mov
cmp
shl
xor
cmp
stc
inc
dec
xchg
(bad)
cmp
ins
sbb
into
dec
lahf
pop
pop
nop
hlt
iret
push
cmp
or
inc
sbb
imul
data16
fisubr
add
leave
cmp
pop
add
pop
jp
mov
fstp
push
mov
xchg
inc
das
gs
cdq
das
jl
fild
add
std
adc
lea
arpl
sar
pop
loop
xchg
dec
std
ret
sbb
cs
or
sub
aas
adc
cli
adc
pop
sbb
push
bound
mov
jle
sysret
jb
mov
dec
and
cld
xor
xchg
out
mov
movs
retf
mov
mov
repnz
jp
adc
xor
aam
pop
pop
jmp
ss
mov
(bad)
sub
js
cld
ss
pop
jmp
arpl
lahf
(bad)
mov
mov
cmps
xlat
xor
jmp
hlt
jb
jg
jo
xchg
inc
jns
aas
aam
add
int
sub
test
push
lea
mov
xchg
sar
jae
popf
mov
mul
push
aaa
retf
shl
xor
and
xlat
cmp
xlat
mov
cs
jb
sahf
mov
fstp
add
dec
pop
fs
outs
jb
fist
imul
xchg
push
mov
jp
and
xor
jae
jecxz
adc
push
pop
call
mov
nop
icebp
jecxz
mov
xor
ja
data16
js
pusha
imul
sar
and
mov
cmp
xchg
int3
out
icebp
mov
cli
je
sub
(bad)
mul
xor
out
test
stos
loop
mov
clc
nop
dec
inc
sub
cmps
adc
xor
mov
fcmovne
cmp
xchg
int3
cwde
das
sub
test
mov
sbb
call
xor
add
add
jge
aas
mov
or
hlt
push
xor
mov
inc
neg
out
mov
pop
xchg
pushf
jp
or
repz
test
in
loope
sti
movs
icebp
jo
mov
sbb
(bad)
jp
stc
mov
fs
mov
mov
sbb
cmp
call
shr
imul
mov
add
xor
sub
jecxz
dec
sahf
or
push
cmp
scas
inc
stos
mov
sub
adc
jl
in
push
nop
jne
leave
(bad)
(bad)
fld
rol
mov
into
lods
les
jmp
jle
or
mov
inc
leave
data16
cmps
test
mov
push
push
cmp
fistp
push
sbb
fnstenv
pop
(bad)
call
es
jge
sub
ret
(bad)
fcomp
fist
or
push
adc
out
sub
sub
loope
dec
mov
add
inc
pop
pushf
mov
sbb
jns
mov
(bad)
test
xor
ds
push
test
jnp
xchg
call
rol
or
push
pop
ret
(bad)
scas
pop
cmp
mov
mov
sbb
shr
xlat
clc
js
ins
pushf
xchg
add
and
mul
or
cmp
mov
add
ins
out
test
in
mov
push
ret
sub
sbb
push
jae
mov
loop
mov
rcr
pop
jle
dec
jl
or
jo
mov
jae
adc
jg
stc
enter
je
aad
repnz
and
adc
pop
or
cwde
jno
je
test
imul
fcmovbe
dec
les
push
inc
mov
cmp
bound
or
(bad)
add
add
sbb
(bad)
xor
leave
push
push
jae
pop
inc
lods
aam
inc
cmps
addr16
popf
popf
cli
cmp
mov
mov
push
or
adc
push
pop
fsubr
jge
aas
(bad)
and
pop
pop
cmp
retf
paddd
xor
je
dec
mov
imul
mov
imul
call
pop
std
xchg
xchg
pusha
push
xchg
push
inc
xor
rcl
push
repz
mov
and
mov
addr16
jle
iret
jb
aam
imul
push
loopne
push
pop
movs
adc
aam
lea
mov
ds
jo
pop
lods
pop
shl
ss
aas
jp
js
std
fnstsw
test
cld
mov
push
jns
inc
arpl
push
outs
or
les
mov
inc
jge
repnz
xchg
pop
push
mov
stos
loopne
fsubr
(bad)
js
xchg
pop
inc
sub
jmp
fadd
add
out
mov
cmp
les
inc
stos
jb
add
or
fild
sub
aam
jne
xor
mov
pop
and
sar
jmp
xchg
dec
out
push
int
jle
not
cmps
jecxz
mov
dec
je
mov
inc
sub
xchg
mov
inc
add
dec
loope
sbb
aaa
pusha
das
mov
imul
xor
sbb
ins
repnz
hlt
cld
pop
jb
addr16
ret
dec
xor
test
dec
cmp
xchg
or
mov
mov
ins
in
scas
sub
xchg
es
jae
jmp
cmps
and
add
mov
add
cs
sbb
imul
popa
int3
sub
(bad)
cmp
mov
jmp
xchg
and
aad
neg
cmp
call
jmp
in
(bad)
stos
xchg
and
popa
fiadd
test
xlat
call
xlat
inc
jge
jle
jge
jmp
clc
nop
aam
or
or
push
jecxz
retf
push
out
pop
inc
les
js
int
sub
ficomp
js
push
sbb
test
loopne
or
adc
cli
xor
mov
test
fld
sub
cmp
daa
xchg
mov
adc
mov
sub
out
inc
or
dec
pop
jecxz
and
rcr
aaa
push
fistp
shl
pushf
sbb
lds
add
sar
push
xchg
add
pop
out
sbb
jbe
add
repnz
cwde
pop
jnp
xor
sub
mov
mov
jp
rcl
ss
(bad)
and
aam
mov
pop
or
jg
retf
enter
xchg
mov
out
imul
(bad)
xor
outs
inc
movs
xchg
cmps
jns
pop
push
in
shr
clc
mov
out
aas
cmps
mov
xchg
xchg
jp
fnstenv
iret
call
int
scas
dec
fs
call
mov
loope
mov
scas
xchg
jbe
ror
inc
sub
push
mov
mov
mov
mov
pushf
or
lds
inc
mov
nop
cli
sbb
popa
adc
inc
jecxz
dec
jge
out
loope
jmp
test
push
fistp
ror
aas
mov
hlt
and
xchg
pop
in
inc
xchg
int
test
scas
mov
jnp
push
xchg
mov
scas
pushf
cmp
cli
ds
mov
mov
jge
fcom
pop
cmp
xor
inc
pop
mov
pop
arpl
int
jmp
sbb
fwait
cmp
outs
ds
mov
int3
sahf
outs
pop
xor
dec
jmp
and
dec
mov
not
pop
sbb
mul
and
add
add
movs
cmp
imul
shr
xor
(bad)
fsub
mov
cmp
cmp
and
xchg
jp
dec
xor
sbb
fsubr
shl
inc
jno
mul
stos
mov
sub
jcxz
xor
fwait
sahf
jns
mov
jge
ficom
out
stos
test
push
cmp
call
inc
ds
adc
out
add
adc
adc
rcr
retf
fs
cmp
test
jecxz
scas
mov
into
retf
jno
or
cmps
sar
out
mov
int3
in
pop
inc
stos
mov
add
push
in
sbb
cs
sar
inc
dec
or
jg
xchg
popf
push
xchg
ins
pop
mov
cmp
(bad)
inc
inc
std
ret
div
push
adc
out
out
cmp
pusha
inc
popf
push
mov
sbb
movs
pop
cld
xchg
ins
jg
iret
xchg
shr
push
ins
mov
(bad)
pop
dec
ret
retf
cmp
imul
jp
outs
lods
std
sub
test
es
dec
test
sbb
lahf
jbe
ret
dec
jb
ja
shl
(bad)
adc
pop
jno
stc
outs
mov
movs
stc
jbe
mov
cli
mov
add
mov
out
call
mov
add
pop
cwde
addr16
mov
dec
sbb
mov
cmp
xor
add
cs
pop
jae
test
call
adc
popf
lods
xor
rcr
mov
(bad)
dec
and
cmp
leave
cs
fmul
iret
adc
jge
mov
rol
daa
add
ret
imul
std
push
sbb
loope
stos
jns
ss
iret
cmp
ja
inc
mov
pop
cmc
je
scas
pop
retf
mov
sbb
cdq
fbstp
mov
outs
cdq
js
movs
lahf
std
jle
mov
add
jne
pop
dec
retf
xor
sub
or
(bad)
loope
fld
sahf
push
pop
daa
mov
push
mov
adc
into
lods
push
mov
adc
iret
and
int3
lods
enter
xchg
ss
or
repnz
push
or
loope
(bad)
jg
sti
push
retf
call
ins
inc
jb
inc
cld
in
pop
(bad)
ret
daa
popf
mov
mov
jne
enter
cmp
ja
int
mov
pop
cli
adc
fs
ins
push
push
or
(bad)
push
fbld
push
jnp
fwait
sub
push
jno
xor
and
movs
push
ins
inc
mov
jno
daa
es
dec
push
jge
scas
aaa
and
adc
adc
shr
or
movs
and
pop
cmps
dec
cwde
mov
ja
sub
sbb
and
dec
add
stos
mov
jb
scas
or
in
into
inc
in
call
jnp
mov
push
inc
fidiv
pop
ret
fadd
mov
push
imul
jp
shl
mov
adc
dec
sbb
in
call
bound
outs
mov
test
scas
push
aaa
xor
xlat
leave
and
sbb
xchg
arpl
or
test
mov
sbb
pop
push
sahf
js
and
mov
cmc
gs
test
jge
xchg
jne
shr
push
cmc
into
jno
cmp
test
enter
sahf
jecxz
and
retf
push
jl
bnd
lea
inc
stos
mov
fnsave
dec
adc
dec
mov
lds
jle
adc
jb
adc
xor
jb
mov
xchg
sbb
aad
mov
pop
neg
sbb
sti
push
mov
leave
mov
pop
or
sbb
xor
in
and
cwde
sar
mov
imul
push
stc
ficomp
stos
jnp
mov
push
push
lahf
push
sbb
mov
popf
sbb
repnz
push
std
xchg
xchg
ret
jno
and
dec
inc
(bad)
add
pop
call
loop
adc
popa
xor
das
mov
leave
test
sbb
adc
loopne
xchg
leave
inc
in
mov
add
jbe
add
add
(bad)
(bad)
arpl
xchg
(bad)
fst
jo
mov
xchg
pusha
shl
mov
popa
ror
movups
lahf
and
add
enter
ins
inc
mov
or
xor
xchg
sub
jmp
(bad)
mov
or
aaa
add
or
jp
xor
jae
cmp
fdivr
push
and
cmp
test
pop
sbb
cmp
jno
xor
cmp
mov
retfw
dec
test
movs
or
mov
xchg
adc
mov
xchg
or
add
pop
cmp
cld
fs
sbb
mov
movs
test
mov
mov
dec
popa
push
mov
jge
add
xchg
rol
mov
jp
sbb
cmp
clc
add
outs
adc
mov
repnz
inc
call
popa
int3
jp
push
es
int3
cmp
aam
sub
dec
dec
adc
push
das
fcmovnbe
sub
xchg
call
hlt
mov
clc
scas
sbb
add
xor
add
dec
pop
mov
xchg
cmps
test
or
ficomp
jge
call
rcl
sbb
in
out
mov
in
xchg
pop
inc
sbb
adc
xchg
push
fisttp
add
add
inc
sbb
js
or
rcl
shl
adc
bound
ins
out
adc
ror
inc
and
mov
sub
xchg
mov
mov
sub
jb
movs
in
mov
push
sbb
mov
les
pop
mov
fdivr
pop
das
(bad)
(bad)
out
cmp
jae
dec
out
cdq
(bad)
xor
add
lods
ins
jp
jb
cmp
or
mov
int3
push
cmp
or
dec
ror
fs
sbb
xor
dec
sbb
ror
loopne
out
ins
jge
add
mov
sbb
mov
in
mov
add
cs
adc
nop
sub
mov
(bad)
xchg
shl
add
out
into
sbb
lds
rcr
jge
sbb
stos
jp
pusha
sub
sub
mov
inc
adc
outs
outs
(bad)
fsubr
jo
mov
jl
push
adc
sbb
inc
stos
pusha
sbb
lods
cdq
(bad)
pop
outs
sub
ds
sbb
jb
pop
cld
int
cwde
in
rcr
ds
xchg
cmps
mul
add
mov
rcl
mov
test
mov
push
out
hlt
mov
stos
adc
dec
ret
and
mov
push
scas
int
jnp
pop
retf
dec
pop
adc
inc
or
cmps
pop
inc
out
xchg
stc
call
arpl
lock
outs
mov
cwde
pushf
pop
daa
ror
xchg
cwde
repnz
(bad)
sbb
inc
es
retf
(bad)
cmp
and
rcl
adc
sbb
dec
inc
(bad)
clc
bound
arpl
jmp
call
lahf
inc
dec
rol
push
test
add
or
cmps
pop
jnp
push
scas
push
cmp
xchg
enter
mov
(bad)
iret
lea
add
in
add
das
das
outs
repz
data16
and
push
shl
lods
fsub
das
bound
(bad)
mov
jecxz
fisttp
mov
mov
test
sbb
out
arpl
mov
jns
daa
sub
pop
pop
imul
mov
sbb
dec
cld
fistp
inc
sbb
or
cmp
add
add
popa
rcl
test
cmp
pop
out
cmps
addr16
xchg
cmp
cmp
fld
sub
sbb
in
sbb
stos
xor
mov
jbe
xor
and
retf
stos
inc
cmp
xor
and
imul
imul
test
or
call
fld
adc
cld
and
push
push
mov
scas
retf
xchg
mov
sti
jb
aaa
es
pop
and
stos
inc
mov
sub
ds
pop
or
mov
repz
pop
sbb
icebp
push
(bad)
les
sub
repz
int3
addr16
add
sbb
sub
pop
sub
push
adc
arpl
jnp
or
call
lods
hlt
push
jmp
xor
out
push
jo
sub
jno
xchg
add
lahf
pop
cs
sahf
pop
inc
je
fdivr
push
dec
adc
xchg
sub
ror
retf
div
mov
adc
nop
pop
js
(bad)
and
add
loope
movs
sbb
pop
dec
ret
inc
sbb
mov
xor
shl
sbb
jmp
adc
scas
out
out
loop
jne
jg
aad
ja
jp
test
inc
int
pushf
cwde
fsub
cmp
call
clc
jg
hlt
sub
fs
sub
pop
sbb
(bad)
adc
jnp
rol
pop
mov
sbb
pop
pop
xor
sbb
or
outs
movs
test
imul
stos
outs
loop
jl
inc
popa
xchg
in
icebp
add
xor
and
jbe
(bad)
adc
add
push
(bad)
jne
icebp
add
xchg
cwde
or
(bad)
sbb
dec
mov
xchg
leave
fild
scas
rcr
jmp
lods
adc
push
xchg
xchg
lock
in
mov
xchg
pop
ret
fst
or
push
jmp
das
stos
pop
dec
mov
ja
jbe
sub
pop
cmp
jg
pop
imul
mov
pop
lods
mov
test
or
sub
int3
dec
pusha
dec
inc
xchg
mov
mov
test
scas
pop
jg
cmps
or
cmp
lods
mov
fild
pop
xchg
cmp
fadd
shl
cmp
inc
xchg
addr16
xor
aas
test
mov
jle
pop
cli
and
sbb
push
sar
pop
xchg
xchg
(bad)
nop
popf
sahf
push
adc
rol
adc
stos
rol
popf
and
call
xor
retf
xchg
mov
lods
hlt
lods
cmp
push
mov
or
fcom
jae
inc
jmp
adc
into
sbb
push
and
push
adc
adc
out
(bad)
repz
push
in
add
sub
jg
ret
inc
mov
(bad)
mov
xlat
imul
jle
mov
dec
out
sahf
(bad)
les
aaa
xlat
pop
mov
cdq
not
enter
(bad)
jnp
and
(bad)
sti
xchg
ret
adc
push
lds
push
test
xchg
pop
mov
call
and
xchg
pop
(bad)
cmc
daa
int3
sub
and
test
pop
xor
push
inc
aam
push
jno
cs
inc
add
fdiv
pop
inc
xchg
sti
(bad)
jg
shr
arpl
sti
adc
and
jg
pop
imul
repz
and
xor
enter
pop
movs
rcl
adc
mov
jo
xor
loopne
cmp
mov
(bad)
mov
push
stos
pushf
adc
push
iret
sub
pop
sti
idiv
jmp
ins
push
add
adc
in
and
mov
mov
sar
out
cli
fstp
mov
call
test
push
fistp
int3
jns
nop
in
(bad)
mov
in
das
jecxz
bound
dec
push
xchg
add
jnp
cwde
out
sbb
nop
or
inc
fdiv
add
jne
jb
rol
sbb
mov
sub
sub
(bad)
jmp
dec
je
repz
lds
mov
jnp
in
push
in
icebp
mov
cmc
pop
mov
dec
cmp
push
adc
xchg
inc
inc
xchg
ja
cmp
(bad)
push
daa
push
push
in
or
cmps
or
lods
(bad)
fist
inc
add
scas
jmp
cs
shl
push
push
ins
jge
ror
ds
mov
mov
and
mov
loopne
xchg
and
test
jno
adc
pop
add
sbb
xchg
aas
bound
inc
out
or
mov
xchg
data16
inc
jae
pop
test
and
ret
inc
add
sub
push
aaa
(bad)
shr
adc
in
mov
sbb
mov
lods
xchg
dec
add
jbe
jb
into
xchg
das
nop
fs
dec
xchg
add
push
jno
mov
js
push
out
dec
xchg
inc
imul
mov
scas
jns
stos
shr
push
dec
pop
les
out
add
lahf
jmp
ret
lock
adc
inc
dec
sbb
shl
add
mov
or
mov
inc
sbb
das
ret
test
inc
pop
ss
push
sbb
dec
sub
call
dec
and
ins
push
arpl
push
push
xor
jae
jae
cmp
inc
add
mov
loope
pop
and
pop
ins
loop
call
push
das
dec
jecxz
mov
cs
clc
adc
pop
and
inc
scas
xchg
lock
sar
out
dec
fld
adc
or
xchg
mov
test
(bad)
add
fstp
lahf
sbb
pusha
test
add
test
mov
mov
data16
popa
shl
sbb
dec
js
jno
mul
neg
les
je
in
xchg
ja
add
and
or
pop
adc
add
fdivr
inc
pop
jmp
movs
cmp
hlt
add
fcmove
aas
xchg
adc
and
ret
js
ss
inc
mov
enter
sti
outs
dec
sub
fcom
test
xor
and
adc
jns
call
aam
fstp
in
xchg
leave
in
std
pop
ror
sub
rol
mov
jmp
dec
mov
push
push
push
(bad)
bound
(bad)
jge
wbinvd
sbb
(bad)
jb
cmp
xor
ja
jecxz
scas
ds
cmp
mov
mov
lea
jmp
add
test
fwait
or
xor
ret
mov
mov
mov
adc
movlps
stc
jbe
cmp
mov
sub
jmp
mov
cmp
inc
xchg
leave
retf
mov
pop
lods
sub
mov
sub
push
adc
adc
add
jle
push
or
dec
mov
jo
icebp
add
je
icebp
sbb
gs
pop
and
pop
retf
jo
pop
mov
and
addr16
sub
(bad)
bound
or
in
int3
xchg
sbb
inc
aaa
call
xor
and
push
js
jge
and
xchg
and
push
jbe
movs
push
mov
mov
cdq
fdiv
mov
xchg
or
je
xor
add
aas
pop
mov
rol
lea
ja
mov
fsub
or
cmp
xlat
cld
rcl
(bad)
cwde
popa
mov
les
and
je
dec
xchg
(bad)
in
mov
xchg
lods
cli
xchg
and
inc
inc
das
ins
push
mov
int
(bad)
out
inc
fwait
inc
xor
movs
pop
add
sbb
sbb
lea
ins
sar
inc
add
dec
inc
lock
clc
mov
(bad)
dec
rol
aam
mov
shl
add
out
jl
js
jecxz
and
rol
rcr
adc
push
sar
mov
das
cmp
repz
hlt
fisub
pop
outs
loopne
dec
pop
jp
adc
rol
js
sbb
push
imul
ret
rol
xchg
retf
lods
int
cli
xchg
lea
add
or
mov
inc
jns
and
popf
mov
inc
push
out
sub
push
pop
jmp
jae
pop
dec
mov
popa
imul
inc
jg
or
call
xchg
out
and
movs
mov
mov
sub
std
jmp
inc
in
xchg
inc
mul
mov
sbb
neg
jl
lock
imul
mov
adc
and
std
lea
or
or
add
daa
adc
icebp
adc
sbb
test
jo
pushf
mov
loopne
(bad)
xor
popf
mov
int
sub
imul
je
adc
or
fwait
push
bound
mov
mov
mov
gs
adc
jns
cli
in
sub
idiv
sbb
or
ja
int3
dec
mov
sbb
and
int
dec
mov
inc
pop
xor
cld
dec
adc
jo
cwde
pop
cmp
rcr
inc
arpl
xor
ds
inc
(bad)
jp
popa
and
por
push
push
cmp
adc
rol
cmp
dec
jmp
mov
(bad)
pop
leave
ds
lahf
mov
mov
sbb
jo
pmulhw
daa
mov
xor
not
sbb
xor
pop
xor
out
fisub
and
jmp
js
lods
(bad)
rol
add
sbb
inc
adc
mov
push
fsubr
xor
cmp
xchg
push
int3
mov
scas
aam
and
mov
xchg
imul
lods
les
ficom
out
dec
sbb
add
aas
pushf
movs
enter
(bad)
sbb
lock
test
imul
xchg
push
out
and
std
mov
mov
(bad)
mov
inc
jmp
mov
inc
adc
cli
jp
and
cmps
cmp
jo
test
jg
adc
xchg
add
sbb
mov
ins
pop
push
mov
mov
mov
hlt
imul
mov
fidiv
adc
out
cmp
fbstp
scas
sub
xchg
mov
mov
cmp
jmp
push
lods
jb
adc
(bad)
xor
ja
push
sbb
icebp
sub
and
lea
xor
pop
mov
inc
or
push
sbb
and
adc
icebp
pop
xlat
lods
or
in
stc
es
iret
(bad)
cld
xor
cwde
gs
mov
das
pop
iret
sbb
jg
inc
dec
bound
dec
mov
pop
sub
cld
imul
push
dec
mov
sub
out
ror
xor
mov
mov
cdq
mov
add
cmc
pushf
cmp
push
loop
scas
cdq
jle
fnstenv
hlt
ins
dec
mov
mov
dec
pop
adc
xchg
fild
dec
cmps
push
mov
data16
mov
mov
je
sub
adc
cmp
or
fsub
fmul
lahf
stc
jle
imul
or
outs
imul
imul
hlt
gs
jno
pusha
pop
jecxz
and
cmc
jo
jmp
push
stos
xlat
xor
and
ss
ret
sub
and
cmps
add
bound
dec
inc
mov
push
mul
(bad)
push
and
ror
leave
mov
mov
adc
jne
jge
and
retf
call
mov
adc
lahf
outs
stos
pop
mov
cmc
jge
outs
or
jmp
xchg
mov
xchg
mov
jmp
push
js
sti
inc
outs
mov
pop
mov
mov
bound
pop
mov
movs
sub
push
mov
fistp
cld
clc
push
into
fmul
cdq
les
add
jno
inc
mov
enter
xlat
pop
xchg
out
cmp
stc
xchg
fucom
push
mov
dec
pusha
std
sar
mov
xchg
shl
lods
out
in
aad
loope
sbb
imul
lahf
jg
inc
clc
cmp
call
lahf
sti
movs
ins
fisttp
mov
adc
sahf
lea
into
ja
ss
stos
test
mov
test
xchg
int3
mov
cwde
rol
ds
add
call
dec
mov
adc
repz
xchg
das
xor
cmps
aam
sbb
arpl
push
cmp
cld
sbb
push
aaa
xchg
mov
adc
pusha
retf
ret
push
arpl
and
(bad)
and
cmp
push
pop
pop
mov
(bad)
into
jne
or
sub
(bad)
add
or
push
rcl
dec
xchg
or
push
xchg
sbb
(bad)
fbld
fwait
xchg
in
push
cmp
int3
addr16
pop
pcmpgtb
clc
aas
into
in
movs
xor
xchg
(bad)
ins
arpl
imul
or
stos
pop
cmp
dec
xor
fadd
imul
fsubr
inc
retf
push
add
cmc
idiv
dec
(bad)
(bad)
fdiv
inc
dec
hlt
mov
add
cmp
ds
ja
(bad)
cmp
push
into
in
and
pop
dec
ss
and
jne
sahf
aad
xchg
mov
ja
push
mov
(bad)
jbe
aam
retf
jg
adc
xchg
add
mov
adc
xchg
xor
fild
mov
hlt
mov
scas
into
dec
int
int3
xor
jnp
int3
clc
push
inc
cld
mov
(bad)
push
or
loope
mov
shr
cs
mov
scas
xchg
sti
inc
lods
jne
add
jp
cmp
fistp
add
enter
loop
daa
jb
scas
ror
movs
jmp
imul
loopne
in
mov
mov
leave
rcl
data16
les
in
shr
in
xchg
ds
movs
or
push
dec
enter
loope
push
mov
dec
movs
and
retf
outs
out
xchg
pop
in
movs
(bad)
sti
dec
fyl2xp1
ret
xchg
dec
or
cmc
pop
adc
xchg
add
pop
xchg
shr
out
popa
movs
adc
rcr
jp
fst
sar
pusha
popf
push
mov
(bad)
cmp
dec
(bad)
movs
add
pop
pop
(bad)
jp
dec
sub
jb
stos
imul
arpl
cmp
push
int3
pop
pop
inc
out
clc
popa
pop
mov
inc
das
je
sbb
mov
test
fild
sbb
xchg
adc
xchg
mov
cmc
call
shl
mov
icebp
push
stc
and
(bad)
popf
dec
sub
push
dec
push
adc
cmc
jns
sub
sbb
mov
ja
add
jo
mov
cmc
adc
mov
call
movs
xor
in
or
aas
call
mov
jecxz
aas
ja
clc
out
je
dec
and
dec
dec
cs
cmp
sub
mov
lahf
retf
test
cmp
jp
mov
dec
mov
gs
int
in
mov
lea
fld
and
and
or
inc
push
mov
ins
add
dec
shr
xor
and
test
mov
mov
iret
or
mov
in
sub
lods
call
pop
sub
mov
xor
jle
imul
fild
mov
mov
in
mov
loopne
jns
sbb
mov
pop
inc
push
mov
add
mov
cmp
std
ja
add
dec
imul
push
fwait
out
push
mov
aaa
cmp
push
je
dec
fisub
mov
mov
xchg
gs
jb
sbb
test
jb
dec
in
adc
jg
dec
stos
test
cmps
cmp
repnz
test
aam
mov
push
sbb
lods
or
hlt
mov
fdivr
rcr
rcr
dec
movs
std
imul
ret
inc
test
mov
add
mov
jmp
xchg
outs
in
push
lods
jns
lods
jmp
stc
adc
mov
adc
fucomp
pop
xchg
jae
adc
jmp
movs
movs
cmp
cmc
add
mov
inc
(bad)
pop
inc
aad
in
and
adc
cs
in
push
lahf
cmps
test
and
jns
jmp
dec
fadd
pop
jnp
and
fiadd
aad
mov
int
popf
jne
mov
stos
xor
inc
or
xchg
(bad)
in
out
shr
repnz
int
inc
ds
sub
into
xchg
push
std
test
dec
inc
aaa
mov
pop
pop
push
sub
in
xchg
fidiv
aas
add
jmp
push
dec
shl
int3
mov
in
in
fwait
mov
scas
xchg
in
scas
outs
dec
lea
pop
cmp
sbb
adc
adc
sbb
ins
addr16
icebp
retf
ret
imul
jp
mov
and
in
pop
mov
xchg
enter
inc
and
push
jae
cmp
and
lods
movs
xor
dec
sub
dec
inc
outs
sbb
mov
mov
mov
movs
jno
loope
popf
sub
add
(bad)
fisub
xor
push
add
and
add
mov
pop
sbb
push
mov
dec
pop
sbb
mov
jp
popf
sbb
pop
fidivr
sbb
sub
xor
scas
sub
sub
push
pushf
(bad)
inc
or
cli
mov
sub
jl
mov
test
fcomi
jl
and
inc
dec
(bad)
cdq
sbb
pop
pop
dec
enter
das
pusha
and
std
mov
inc
retf
lahf
push
sub
mov
movs
push
fcmovu
fwait
xchg
adc
ds
jmp
pop
add
cmp
adc
mov
cmp
ins
lds
mov
fsub
mov
jns
std
mov
cmp
ficom
adc
mov
mov
jns
push
xchg
mov
ror
pop
add
int
bound
int
mov
mov
push
and
cmc
fisub
sbb
inc
ja
lock
xchg
xchg
or
dec
jne
sub
test
call
mov
mov
sub
inc
add
int3
leave
sti
pop
cmp
mov
movs
rcl
xchg
rcl
mov
fistp
xchg
gs
adc
sbb
test
add
outs
ins
push
inc
pop
mov
mov
pop
sub
nop
pop
lock
or
mov
xchg
push
data16
jbe
push
fs
fcom
pusha
ficom
adc
mov
cmc
pop
adc
test
scas
scas
aas
inc
lods
xchg
or
pusha
or
loope
fwait
(bad)
push
test
movs
lea
mov
push
lahf
(bad)
cmp
imul
mov
sub
in
scas
add
xlat
fisubr
outs
cdq
xor
and
imul
test
mov
push
or
push
lea
ss
push
jns
dec
push
div
retf
data16
fwait
es
sbb
into
mov
jmp
icebp
sub
cmp
out
xor
xchg
and
(bad)
outs
mov
les
ret
sbb
jae
sar
add
or
dec
sub
xlat
in
idiv
mov
test
js
mov
adc
sahf
mov
idiv
lods
push
daa
lds
inc
sbb
jns
inc
lods
loop
push
sbb
push
jb
push
cmp
xchg
mov
push
xchg
push
and
adc
xchg
movs
inc
mov
in
xor
xchg
sub
or
ror
xchg
hlt
mov
dec
lock
dec
gs
jb
(bad)
jmp
shl
adc
jge
cdq
dec
aaa
push
add
arpl
cli
cmc
addr16
jp
adc
adc
mov
aaa
push
xchg
mov
addr16
ss
neg
jmp
rcr
repnz
jg
arpl
adc
cmp
lock
mov
movs
scas
or
out
movs
scas
pusha
add
pop
shl
nop
or
loope
fild
(bad)
addr16
call
mov
fisttp
sub
jl
jle
test
(bad)
cdq
push
ss
mov
(bad)
stc
mov
inc
sar
arpl
popf
movs
(bad)
cmc
jl
retf
sahf
inc
cmc
stc
mov
sbb
fadd
mov
cdq
adc
pusha
fdivr
inc
retf
cmp
les
jbe
inc
mov
pushf
neg
ds
add
sti
xchg
sbb
inc
retf
cli
jle
dec
ret
sub
popf
sub
scas
arpl
jp
stc
pop
hlt
or
pop
mov
cld
add
mov
cld
(bad)
ret
jge
jb
xchg
jp
cmps
push
dec
mov
rol
sbb
es
pop
sub
fnsave
sbb
xchg
in
adc
sub
(bad)
movs
xor
pop
xor
and
or
mov
pop
sti
sub
popf
call
stc
dec
mov
or
loop
mov
lds
and
cli
leave
xor
icebp
xor
add
stc
ja
into
test
push
add
inc
call
jo
cmp
outs
cmp
dec
imul
mov
push
inc
(bad)
mov
call
dec
std
icebp
test
push
pop
leave
or
sub
mov
pushf
mov
xor
pop
test
xor
rol
les
pop
inc
xor
xchg
(bad)
js
jnp
ret
not
fldcw
clc
idiv
stc
addr16
out
add
cmc
adc
sub
fidiv
lock
mov
std
movs
add
sbb
adc
dec
pop
movs
jae
fdiv
adc
movzx
adc
cmp
sub
mov
sbb
sub
fldcw
sub
(bad)
mov
pop
pop
fst
mov
ja
jae
jno
jmp
inc
cmc
cli
leave
sbb
je
test
stos
(bad)
sub
test
mov
mov
scas
jl
ror
sbb
shr
mov
pop
(bad)
dec
fisubr
dec
inc
popa
jae
cwde
adc
ds
or
adc
add
add
(bad)
mov
icebp
lahf
movs
mov
out
dec
leave
mov
int
dec
mov
and
sbb
cmp
bound
mov
mov
test
cmp
jnp
ins
arpl
pop
in
dec
inc
inc
mov
adc
cmp
xchg
(bad)
(bad)
mov
dec
fiadd
add
fcomp
mov
adc
push
inc
add
push
int
push
test
xor
aad
pop
shl
cdq
mov
jo
sub
add
xchg
gs
fisub
xchg
test
mov
sub
push
xchg
sbb
adc
push
and
aam
sti
mov
inc
or
ret
call
add
push
xor
ja
mov
dec
xchg
test
xor
sub
imul
adc
stos
adc
sbb
into
mul
add
sub
jo
(bad)
mov
mov
pop
or
add
sub
jne
xlat
das
(bad)
les
sub
ins
inc
imul
add
test
imul
aad
and
sbb
into
jecxz
xor
cvttps2pi
add
jmp
cwde
or
cmp
pop
les
ins
add
adc
or
mov
jl
out
xchg
jmp
aas
mov
outs
add
mov
xchg
bound
inc
jg
dec
or
les
stc
and
add
pusha
lock
scas
xchg
pop
sub
xchg
push
add
bnd
ror
call
fs
or
fld
push
test
push
scas
aam
popa
xor
loopne
xchg
jg
jg
sbb
sbb
jae
cmp
shr
(bad)
push
stos
xchg
out
nop
stc
xchg
loop
push
cmp
lahf
inc
call
add
inc
in
dec
inc
stc
xlat
in
mov
mov
ror
inc
js
mov
mov
cdq
les
mov
xchg
adc
inc
ror
mov
add
in
pop
imul
std
hlt
fst
and
push
adc
push
addr16
scas
shl
mov
(bad)
or
ret
adc
pop
pop
xchg
jp
aam
retf
sub
xor
es
add
dec
cli
sub
out
stc
sbb
repnz
push
sub
sub
push
daa
rcr
aad
cmp
shl
aaa
mov
dec
mov
and
and
movs
dec
sbb
sbb
lds
pop
mov
(bad)
aam
cmp
pop
and
out
sub
jae
cmp
sahf
inc
push
push
cld
dec
push
sbb
ins
das
iret
shl
ja
int3
in
pop
scas
jmp
add
xor
inc
movs
adc
test
xchg
pop
sbb
and
dec
xor
loope
push
ja
cwde
jb
xchg
arpl
addr16
jecxz
mov
popf
and
jmp
test
ss
dec
sbb
inc
or
lea
shl
(bad)
das
stc
iret
push
add
jmp
mov
arpl
or
stos
aaa
retf
ret
jae
outs
mov
aas
test
cmps
inc
inc
pop
cmp
cmps
push
ret
lahf
gs
daa
call
data16
(bad)
icebp
(bad)
pop
ss
call
shl
or
push
inc
bound
xor
sub
xor
fnstenv
btc
mov
mov
imul
or
or
in
adc
jmp
outs
(bad)
cmps
sahf
inc
pop
cmp
test
sbb
(bad)
fwait
inc
fs
cmps
mov
adc
int
imul
inc
sub
lods
lock
jno
fist
cmps
mov
push
xchg
stos
pop
add
dec
or
pop
fsubr
imul
cmp
(bad)
jno
add
test
imul
jbe
mov
cmp
retf
shr
mov
and
lock
inc
pop
xchg
sbb
and
add
or
call
ficomp
gs
movs
and
pop
not
mov
je
push
push
inc
pop
pop
pop
xor
clc
fscale
pusha
pop
xor
pop
sub
push
mov
xchg
lock
and
push
xchg
mov
pop
mov
rcr
popa
sbb
out
push
sub
pop
adc
gs
sub
outs
dec
mov
add
xlat
add
in
push
inc
or
xchg
xlat
cmp
cld
jo
sbb
out
mov
daa
xchg
inc
jno
repnz
in
mov
scas
cmp
pop
dec
push
sub
call
loopne
ret
cmp
xchg
jge
sub
inc
aaa
(bad)
fisttp
mov
shr
jmp
push
mov
inc
sub
mov
mov
(bad)
pop
xor
inc
inc
arpl
fbstp
mov
add
jl
adc
adc
aad
fimul
xor
out
xchg
int
loop
inc
pop
out
stos
pushf
dec
sbb
or
sahf
dec
or
cs
sti
xor
add
enter
lea
and
lea
jle
fcmovu
retf
nop
or
enter
xchg
loope
(bad)
idiv
retf
or
imul
sti
fcomp
push
outs
cmp
pop
sbb
fmul
shr
mov
daa
ss
mov
xor
inc
xor
clc
mov
rcl
mov
popf
in
rcr
mov
sbb
cmp
aaa
aaa
jne
sbb
icebp
jg
cmp
xor
cmp
aad
jmp
test
and
stos
mov
movs
js
outs
int
push
aam
mov
mov
add
mov
data16
jnp
pop
mov
push
and
call
or
popf
cmps
sub
inc
les
test
icebp
pop
xor
mov
cwde
repz
loope
push
mov
popa
mov
and
lods
sub
jae
hlt
inc
or
jle
aas
cmp
and
ror
retf
dec
repz
cmp
lods
stos
sbb
or
xor
jp
jle
add
push
loop
ret
test
mov
mov
das
mov
fs
fisttp
mov
dec
popa
int
sub
inc
mul
test
imul
push
mov
fsub
test
cmp
mov
scas
push
xor
(bad)
stos
add
test
test
es
lahf
jns
fisub
and
gs
inc
adc
jle
mov
fsubr
mov
test
out
mov
outs
mov
mov
cmp
or
or
iret
jno
mov
add
cld
jle
sti
pop
aaa
pop
pop
mov
pop
push
jge
clc
sbb
imul
push
inc
stos
push
mov
jmp
lods
loop
inc
iret
test
into
mov
cs
aad
mov
adc
ins
mov
call
out
sbb
std
pop
and
sbb
lds
lods
aad
clc
jmp
dec
ret
data16
clc
mov
cmc
in
scas
lock
rcr
mov
and
pop
inc
or
outs
arpl
inc
push
stc
and
cdq
cmps
jecxz
mov
cmp
or
push
inc
xchg
adc
fnstsw
dec
sub
lods
mov
mov
out
adc
pusha
cmps
ss
push
or
movs
in
arpl
push
xor
inc
xchg
xchg
adc
push
or
cli
pop
shr
mov
aaa
data16
out
movs
cli
imul
lock
mov
pusha
leave
fs
inc
mov
sub
cmp
retf
pop
or
add
push
xchg
cmps
adc
cdq
add
into
add
mov
jno
js
push
js
mov
adc
loopne
(bad)
sbb
shr
dec
and
push
aam
sub
and
mov
out
lods
pop
retf
or
mov
scas
xchg
aas
inc
(bad)
popf
das
rcr
fild
push
(bad)
jns
out
push
out
jp
or
or
int
aad
(bad)
lock
or
xor
bound
xlat
fcomp
inc
xchg
xchg
js
jnp
push
cmp
fild
mov
jmp
test
and
jmp
jl
mov
dec
in
mov
xor
xchg
jecxz
fadd
dec
mov
mov
jmp
call
pushf
ins
cmp
ret
mov
and
or
or
in
and
jmp
int3
fisttp
fmul
jmp
mov
jg
movs
xchg
dec
or
dec
mov
xchg
pop
dec
das
inc
push
xor
ret
je
repz
ja
mov
arpl
js
jnp
and
fild
mov
mov
add
push
jp
inc
dec
imul
cwde
pushf
sub
cdq
stos
inc
das
add
imul
lods
pop
mov
adc
mov
or
jae
cmc
xchg
(bad)
mov
pop
xor
cdq
stos
outs
cmp
mov
clc
xlat
call
aas
or
test
inc
ret
shl
fdivr
and
ins
mov
fsub
dec
adc
aad
mov
repnz
mov
bound
addr16
add
xor
cmps
fadd
repz
jns
sub
dec
push
(bad)
cld
sub
loopne
pop
ins
jle
out
mov
adc
call
imul
pop
mov
pushw
ficom
jge
and
jne
pop
repnz
call
add
push
ja
sbb
out
jmp
retf
out
dec
pop
addr16
mov
enter
pop
or
add
enter
push
mov
test
add
mov
sahf
movs
or
mov
dec
in
bswap
xchg
inc
add
std
or
pop
push
ret
daa
add
(bad)
lods
pop
pop
ror
je
push
jae
adc
repz
jbe
les
jns
sti
or
pop
jb
inc
mov
popa
ror
and
mov
jg
jmp
jp
pop
xchg
jge
ins
jnp
add
push
pushf
cmp
or
mov
sets
push
mov
sub
ret
repz
fcmovnu
aas
rol
test
sbb
outs
jmp
adc
cmp
or
sbb
mov
pushf
mov
outs
loope
ret
lea
les
push
das
jae
fadd
(bad)
cmps
adc
(bad)
pop
adc
icebp
jmp
aas
out
das
lahf
outs
imul
into
push
(bad)
xchg
sbb
sbb
pop
mov
pusha
push
pop
mov
shld
pop
and
stos
adc
pop
aad
in
adc
jecxz
dec
arpl
sub
ins
arpl
in
(bad)
jo
fld
ins
push
sbb
push
and
xor
cli
out
sub
push
sti
jg
daa
and
retf
mov
pop
mov
pushf
jmp
stc
sahf
daa
or
scas
mov
cmp
xchg
mov
or
leave
pop
sbb
cmp
ficomp
ret
daa
mov
cmp
std
mov
ds
inc
push
mov
faddp
cmps
mov
adc
les
jns
addr16
test
fs
mov
(bad)
and
ficomp
cli
xchg
mov
cs
ins
dec
pop
xor
das
and
repz
ins
das
jmp
mov
jg
mov
lods
call
adc
sub
and
jbe
fsubr
xor
inc
xlat
sbb
mov
inc
ror
jno
cs
les
test
mov
cmp
fimul
pusha
loop
daa
test
add
add
sub
mov
cmp
pushf
xchg
push
shl
in
imul
inc
test
cmp
dec
(bad)
call
sbb
cmps
push
fnstsw
mov
fisttp
jae
lds
int3
xor
add
shl
xchg
and
jne
cmp
mov
push
cmps
stos
sbb
retf
mov
ins
jnp
mov
in
push
out
call
lds
adc
sub
pop
(bad)
fiadd
repz
lock
xchg
dec
out
adc
xor
aaa
outs
xor
push
and
cmps
jl
add
push
out
cmovnp
pop
and
popf
cmps
jns
(bad)
push
mov
cld
fist
stc
pop
xchg
call
pop
jge
(bad)
test
sbb
jnp
or
sti
cs
dec
sub
xchg
push
stos
mov
xchg
adc
fcom
adc
jb
jnp
pop
clc
cwde
xchg
jb
jmp
inc
cdq
in
scas
in
push
lods
and
cdq
push
jae
add
xor
or
call
out
add
or
arpl
jnp
stos
cli
inc
fild
and
push
add
sub
pop
or
and
xor
inc
lods
mov
xlat
loop
mov
lods
pop
lea
add
sbb
sbb
xchg
inc
cmps
adc
(bad)
fstp
popa
fwait
or
jae
(bad)
dec
push
jp
add
inc
inc
and
bndldx
jae
jns
cmp
stos
mov
rol
mov
adc
push
loope
cs
mov
cmp
xchg
loopne
ret
les
aam
pop
cmp
es
arpl
mov
pushf
ret
inc
ret
in
cld
cmp
ds
fsub
addr16
and
mov
jecxz
cld
cmc
clc
outs
bound
imul
not
push
mov
in
xor
jae
pop
mov
cdq
jns
dec
mov
adc
aaa
call
lods
add
test
xor
inc
das
je
(bad)
mov
pop
stos
jge
or
pushf
jnp
push
ficomp
cmp
out
imul
pushf
ja
push
jecxz
shr
push
lea
retf
sti
aam
leave
xchg
in
mov
nop
pop
mov
ja
add
push
push
pop
iret
outs
jne
adc
(bad)
outs
add
cmp
add
(bad)
xor
mov
mov
bound
popa
icebp
lock
test
enter
sbb
and
imul
shl
dec
movs
dec
cmp
cmc
in
call
sub
pop
cmp
xchg
mov
mov
dec
xchg
pop
lahf
shl
add
cld
add
pop
pop
pop
jmp
je
adc
in
adc
outs
add
sub
je
jnp
sahf
sbb
mov
inc
push
sub
icebp
icebp
das
mov
inc
movs
data16
push
ror
je
add
add
pop
frstor
aas
inc
enter
jmp
(bad)
cmp
in
sar
sti
cmp
(bad)
or
dec
rcr
add
cmp
jae
ret
shr
fnstsw
push
or
lds
lds
and
xor
mov
xchg
jns
shl
sub
movs
dec
lahf
jle
push
jo
sub
int
repz
test
test
in
xlat
jno
iret
mov
sbb
in
(bad)
mov
push
mov
mov
pop
push
or
lahf
mov
ds
ins
cmps
popa
stc
cmps
mov
xchg
mov
fwait
inc
imul
add
das
sar
adc
mov
mov
sub
retf
xchg
icebp
push
das
cmps
cwde
out
aad
xchg
popf
add
hlt
sbb
adc
movs
gs
pop
gs
cmps
aas
mov
test
push
sar
dec
mov
pop
test
xchg
push
pop
mov
and
sbb
stos
and
loop
mov
mov
mov
fs
or
ss
jge
pop
pop
in
imul
ins
and
xlat
lahf
mov
int
jo
pop
outs
jg
pop
dec
mov
movs
sti
rcl
fisttp
xchg
mov
mov
mov
pop
xchg
fmul
out
push
jne
inc
into
xchg
and
push
pop
and
jno
sti
inc
cmp
sar
pop
jmp
xor
sbb
push
fs
and
mov
adc
push
inc
mov
leave
inc
ins
scas
dec
xor
jo
inc
pop
test
mov
cmps
mov
or
jmp
in
mov
mov
adc
lock
mov
jg
xor
sbb
jle
test
add
rol
push
mov
sbb
leave
and
adc
pop
inc
mov
xor
adc
sub
inc
in
in
data16
ds
push
and
scas
idiv
cmps
pop
xor
addr16
mov
pop
arpl
adc
cmp
retf
xchg
neg
sub
in
xor
xlat
pop
sets
and
es
ret
aad
cmp
or
cmc
sub
adc
popa
out
shr
and
jl
push
fld
push
mov
test
cmps
mov
inc
sbb
jne
cmp
pop
loope
inc
rcl
adc
or
in
ja
call
clc
(bad)
push
pop
lahf
inc
int
dec
sbb
lahf
xchg
aad
cmp
mov
loop
mov
dec
cdq
sub
mov
ins
sbb
in
and
dec
rcr
sbb
ficomp
xchg
push
add
jae
cmc
(bad)
xor
rcl
pop
adc
les
mov
mov
imul
mov
je
fdiv
scas
pusha
xor
sub
xor
(bad)
ds
and
or
pop
push
(bad)
retf
dec
xor
ja
stos
and
push
call
push
leave
mov
add
or
dec
jl
cwde
adc
mov
push
cmc
mov
cmp
or
sbb
popf
ret
sub
je
jle
sti
sahf
xor
cmp
retf
push
jae
ret
push
arpl
xor
scas
repz
int3
mov
xchg
mov
mov
repz
je
test
pusha
bound
in
lds
loope
pop
jb
inc
test
push
sbb
sub
mov
ins
pop
mov
test
or
ss
je
jp
(bad)
dec
add
ins
lds
inc
sub
ud1
dec
xlat
out
call
jmp
pushf
add
mov
xchg
mov
jg
repz
hlt
mov
add
hlt
fwait
cmp
sub
leave
jecxz
pop
add
pop
sbb
fidivr
push
repz
test
sbb
popa
sub
scas
cmp
pop
arpl
les
cmp
jb
pusha
pop
sub
pushf
dec
mov
cwde
or
dec
out
or
pop
xor
cmps
enter
cmp
adc
out
out
push
gs
jnp
das
add
test
fwait
lahf
mov
push
retf
jns
pop
sub
jmp
gs
inc
jns
xchg
pop
dec
mov
imul
lods
jp
add
fistp
adc
bound
popa
or
das
and
jno
xor
push
sbb
les
jbe
ficomp
cmp
xchg
inc
into
aas
cmps
jb
cmp
pop
popf
xor
xor
sbb
pop
add
sbb
retf
jge
dec
ja
mov
mov
popf
mov
sub
mov
jae
psrlw
sbb
sahf
pop
push
lods
jmp
pop
and
sub
mov
div
(bad)
mov
lods
sbb
dec
push
in
test
lea
add
pmulhw
dec
cmp
ss
out
into
aaa
xchg
fnstenv
cmp
ret
jbe
sti
mov
add
dec
xchg
xchg
xor
test
dec
and
cli
pop
jnp
push
shl
push
hlt
out
loop
mov
rol
xor
push
hlt
inc
ins
fcmove
dec
clc
sbb
add
push
clc
sets
in
sbb
mov
fcmovnu
fxch
(bad)
fs
cmp
mov
repz
xchg
push
ins
fld
mov
ret
push
sbb
jo
rcr
and
dec
sub
and
popf
sbb
push
ins
adc
sub
sub
and
movs
push
shl
pop
movaps
aas
neg
test
jmp
mov
les
and
jle
leave
jg
dec
sahf
neg
inc
mov
mov
and
and
jne
jle
ins
adc
jb
out
xor
inc
or
dec
les
push
gs
add
xchg
in
push
cmp
cmp
sbb
sub
cdq
enter
jle
(bad)
in
adc
mov
repnz
push
mov
mov
(bad)
leave
jecxz
imul
iret
xor
fidiv
jmp
leave
mov
mov
xor
aas
add
mov
jp
cmps
inc
sub
or
push
(bad)
fdiv
in
mov
xchg
jmp
pop
lahf
clc
aas
lahf
and
sar
mov
fwait
rol
aaa
imul
fild
sahf
call
shl
ins
mov
cmc
in
call
push
mov
push
fist
dec
jl
dec
mov
xlat
xchg
fnstenv
jmp
mov
shl
cdq
lock
xchg
jb
jbe
stc
lahf
pop
xchg
lea
sbb
call
ins
dec
jmp
addr16
dec
stos
push
sbb
xor
cdq
or
out
push
rcl
inc
or
into
shl
push
jb
dec
ret
xor
sar
pop
mov
pusha
nop
aad
std
jmp
in
and
push
lea
(bad)
cld
cli
jmp
daa
xchg
jle
and
jge
cmp
pop
hlt
inc
xchg
cld
fsubp
nop
lods
lock
pop
shr
aas
cs
or
xlat
and
mov
sti
pushf
or
jge
sub
or
call
xor
movs
(bad)
fsubr
cmp
cdq
mov
fdiv
or
out
jecxz
xchg
test
in
sahf
sub
call
jnp
mov
int3
jecxz
fidivr
inc
dec
pop
jle
fwait
xchg
jb
scas
(bad)
ins
iret
push
mov
pop
pop
push
mov
sub
ficom
repz
idiv
ja
lods
adc
ins
and
cmps
repz
pop
(bad)
cmp
pop
sub
mov
js
jns
(bad)
and
dec
push
lods
pop
clc
cwde
pushf
push
mov
repnz
sub
pop
iret
and
ret
js
mov
xor
retf
out
sub
outs
push
int
cmps
mov
out
cmps
(bad)
mov
das
add
ficomp
ins
cdq
(bad)
(bad)
ja
sub
mov
xor
push
sbb
aas
mov
sub
mov
repz
inc
mov
out
test
adc
vcvtpd2dq
jg
xchg
xchg
jo
jmp
into
or
mov
(bad)
lock
frstor
add
jbe
test
imul
jp
add
jmp
ficom
push
sar
dec
enter
rol
das
cmp
xchg
xor
cmc
loope
test
jmp
sub
idiv
inc
jle
lea
adc
push
daa
or
ins
mov
adc
pop
stc
or
jns
(bad)
mov
mov
rep
cmp
inc
imul
sbb
in
mov
cmp
and
fbstp
and
sub
and
lods
ins
fucomi
mov
mov
movlps
fist
mov
xor
out
mov
lods
add
or
ins
pushf
dec
hlt
jns
loop
ja
push
xchg
jb
lock
bound
add
pop
ins
call
stc
jmp
sub
iret
and
jmp
push
popf
jp
shr
add
jo
in
(bad)
mul
jo
retf
mov
daa
es
arpl
les
mov
imul
xchg
movs
pop
xchg
cmp
cmp
inc
add
aaa
(bad)
hlt
dec
mov
dec
mov
call
fisttp
push
jo
jp
fwait
lea
aaa
xor
in
xor
mov
mov
jns
cmp
repnz
pop
loopne
movs
mov
push
fbstp
jl
inc
(bad)
jb
bound
pop
xor
push
add
cwde
in
leave
lahf
stos
mov
push
push
imul
mov
mov
pop
imul
sahf
sbb
sbb
arpl
sub
mov
and
cld
and
inc
mov
jae
(bad)
pushf
test
adc
enter
xchg
sub
in
sbb
arpl
sbb
into
pop
not
mov
sti
inc
add
jle
or
mov
das
sahf
into
jmp
in
jne
xor
sub
adc
fidiv
xor
xor
lods
xor
and
dec
pop
icebp
or
sub
mov
fdiv
mov
shl
cs
mov
jns
cmc
ror
bound
test
movs
sub
sub
mov
xchg
test
fs
dec
xlat
fwait
das
aad
dec
out
repz
es
rcl
ror
dec
pop
mov
fimul
retf
adc
les
pop
pop
sub
xor
movsx
(bad)
xor
cdq
adc
cmp
ret
add
ret
iret
cmp
and
(bad)
scas
(bad)
fiadd
add
inc
and
xchg
(bad)
bnd
fst
xlat
std
adc
cli
cmps
shl
dec
test
ins
jae
loope
pop
dec
daa
int
cmp
mov
push
cmp
push
fsubr
mov
jbe
retf
push
clc
fidiv
addr16
fsub
jmp
and
lea
xor
pop
fldln2
rcr
fucomp
es
jb
mov
out
mov
int3
inc
sbb
and
and
lods
mov
sub
adc
pusha
inc
int
pop
mov
xchg
add
dec
pop
adc
ds
push
cwde
cmp
adc
data16
popf
xchg
repz
retf
mov
stos
sbb
scas
sbb
das
ret
das
and
movs
in
jne
(bad)
cli
xor
dec
add
(bad)
fdivr
mov
push
jae
add
mov
fsub
pop
push
sbb
xor
cmp
icebp
xlat
(bad)
scas
loop
out
dec
jb
hlt
xchg
mov
inc
xlat
lods
jg
cmp
cli
push
fwait
je
call
or
addr16
pusha
(bad)
daa
add
adc
xlat
add
mov
or
sti
mov
jns
fsubr
clc
sbb
sbb
cs
icebp
dec
lahf
sbb
loopne
(bad)
pop
fadd
repz
out
adc
or
mov
lods
sahf
(bad)
cmp
popa
test
sbb
in
call
xchg
lahf
call
mov
and
mov
and
cli
add
ins
pop
aam
pop
push
loopne
scas
xor
xchg
pop
and
mov
mov
add
movs
das
sahf
(bad)
int3
cmps
jg
mov
and
out
(bad)
cwde
cmp
xor
add
or
rol
sbb
jg
xchg
mov
icebp
mov
dec
arpl
retf
popa
int
fwait
cwde
mov
pushf
daa
sbb
out
add
dec
add
push
ins
in
ins
jns
ss
in
fwait
ret
push
mov
test
les
fcmovne
stc
add
rcr
repz
add
xor
leave
jbe
xchg
iret
scas
jns
hlt
cmp
mov
dec
int
xor
test
jg
xlat
or
jl
pop
adc
lock
cwde
fimul
push
and
int
out
mov
sub
frstpm(287
cdq
pop
pusha
(bad)
lock
pop
jle
push
pop
inc
push
repnz
dec
syscall
push
outs
mov
sbb
mov
(bad)
xlat
mov
push
push
cmp
ins
imul
leave
dec
add
xor
sqrtps
mov
inc
push
imul
(bad)
jae
cmp
cmp
loope
sbb
retf
ja
imul
xchg
rcl
dec
rol
aad
jns
mov
mov
(bad)
xchg
out
push
dec
arpl
inc
cmp
retf
jns
lods
dec
jo
retf
lds
cs
xor
mov
js
cmp
inc
sar
mov
ror
fmul
xchg
inc
or
lock
aas
test
adc
test
jns
and
icebp
sbb
mov
in
mov
into
cmps
out
mul
lods
xchg
mov
or
xchg
push
sbb
adc
jns
je
mov
add
mov
leave
and
enter
js
(bad)
(bad)
aam
pop
jae
mov
cmp
in
xchg
dec
pop
lods
call
inc
add
xchg
or
stc
fisub
call
cmps
das
enter
sbb
mov
lahf
call
and
or
mov
mov
mov
cmp
mov
jno
sar
inc
mov
ins
std
fisub
jg
adc
stc
dec
add
mov
aas
out
mov
sub
test
(bad)
sti
inc
pop
rol
sub
mov
test
xor
cmp
cli
mov
mov
jns
jg
cmc
es
mov
push
test
add
jmp
lds
pop
shl
pusha
retf
mov
xchg
push
stc
jb
push
int3
push
outs
repnz
sub
and
imul
scas
ja
les
jp
in
push
jmp
sub
dec
sub
in
push
sbb
imul
sbb
xchg
ins
cmp
mov
xchg
sahf
push
push
(bad)
mov
fidiv
push
popf
cmc
mov
test
pop
pop
cmp
retf
mov
icebp
test
test
test
daa
test
and
sbb
xor
arpl
mov
or
jo
popf
stos
fld
cmp
imul
adc
addr16
sub
addr16
cmp
jmp
cs
and
fisttp
lods
cmp
inc
inc
js
cmps
das
in
push
adc
pop
mov
xor
call
mov
mov
scas
mov
pop
push
add
stos
iret
jge
sbb
aam
rcl
xor
add
scas
test
ret
popa
mov
xchg
inc
mov
lock
inc
and
test
xchg
mov
push
arpl
(bad)
fcomp
ror
stos
aad
jns
push
sub
test
clc
jmp
mov
dec
je
xchg
fst
fwait
loopne
inc
add
jge
lock
lea
xchg
cmp
jno
cmp
(bad)
and
xor
popf
es
dec
mov
inc
and
jno
div
mov
pop
push
(bad)
out
cmp
cmp
or
mov
mov
rcl
mov
jae
mov
sbb
stc
or
push
jmp
xchg
lds
(bad)
cmp
cmp
jle
scas
lods
cmp
aad
adc
push
mov
jbe
std
dec
mov
lds
or
push
(bad)
and
sub
jbe
push
movs
or
addr16
out
mov
inc
sub
sub
mov
mov
sti
mov
cld
adc
call
aas
je
gs
xchg
jns
push
in
imul
cwde
lahf
repz
ja
sbb
js
retf
pusha
lock
outs
push
hlt
fld
aad
cmps
aaa
dec
mov
in
xchg
dec
mov
test
dec
add
sbb
es
add
lds
adc
dec
mov
sbb
out
(bad)
into
inc
js
xor
movs
(bad)
call
ins
jle
and
or
aas
jnp
mov
imul
xchg
lods
push
push
pop
mov
in
jb
dec
adc
mov
mov
pop
cmp
out
adc
(bad)
xchg
mov
cmp
rcl
stos
out
push
jmp
(bad)
fcomp
adc
cmp
adc
mov
fiadd
jno
jo
xchg
xor
shl
jecxz
pop
mov
lods
and
adc
cs
add
mov
mov
mov
call
jmp
int3
inc
xor
pop
icebp
cwde
jecxz
push
lds
lods
loop
fbstp
jne
xlat
pop
inc
sub
hlt
mov
push
lahf
imul
retf
sbb
mov
in
sub
cmp
pushf
mov
cmc
fild
sub
sub
xor
sub
(bad)
dec
in
inc
adc
loop
sub
xchg
pop
das
mov
std
push
leave
and
add
mov
ret
xor
mov
rcl
loopne
or
push
scas
imul
aas
mov
sub
es
shl
clc
jmp
pop
inc
mov
push
sub
xchg
sub
cmp
add
cmps
aad
add
es
and
ret
jae
iret
mov
jo
dec
shl
jnp
jo
jp
sti
xchg
mov
(bad)
leave
in
mov
in
in
xchg
push
or
pop
out
pop
inc
loope
and
mov
or
push
stos
out
div
mov
sub
cld
sub
xchg
dec
idiv
das
ins
cmp
aaa
mov
sbb
stc
call
xchg
retf
sub
add
or
fwait
inc
sub
icebp
xchg
dec
fistp
fwait
test
lods
sub
or
scas
mov
push
arpl
pushf
outs
inc
(bad)
in
mov
cmp
outs
xor
and
outs
jno
pop
mov
(bad)
sub
inc
outs
sub
arpl
jmp
and
std
fnstcw
stc
add
jmp
fwait
or
aas
aad
xor
pusha
jo
inc
inc
pop
push
adc
dec
mov
adc
add
and
imul
(bad)
out
rcr
mov
add
mov
scas
std
inc
es
and
xchg
pusha
push
pinsrw
addr16
add
push
imul
in
add
cmp
mov
mov
inc
es
adc
sub
adc
(bad)
xchg
add
jbe
out
mov
test
clc
outs
push
push
mov
lahf
xor
push
sti
lds
int3
addr16
sub
mov
jno
push
loopne
mov
pushf
jnp
dec
mov
test
xor
repnz
push
cmc
or
bound
inc
cmc
test
out
(bad)
cs
std
(bad)
xlat
add
xor
jle
out
sub
mov
cmc
mov
hlt
dec
rcr
push
ja
mov
lods
iret
pusha
ror
lea
fs
dec
leave
fadd
mov
nop
xchg
mov
test
and
jle
jl
(bad)
fisubr
or
repz
add
fucom
sub
inc
sub
blcic
xchg
add
fadd
mov
pop
dec
push
push
xchg
jae
jo
sets
xor
jbe
lock
and
sub
shr
(bad)
sub
pop
mov
mov
mov
add
pop
sbb
in
cmp
icebp
mov
fcom
jge
add
mov
add
in
bsf
xchg
call
pop
push
icebp
jno
dec
call
jns
mov
rcl
dec
pop
lock
push
jge
les
mov
and
stc
ret
ins
cmp
cmp
inc
loop
adc
inc
cdq
mov
mov
dec
sbb
mov
test
inc
rcl
and
(bad)
jbe
rcr
sub
and
in
or
ins
push
adc
push
(bad)
sar
mov
add
add
(bad)
sub
mov
pusha
fist
ror
or
mov
jno
and
mov
inc
mov
lods
movs
loopne
sbb
in
inc
inc
popa
and
mov
into
std
sub
xchg
daa
dec
loop
dec
fwait
(bad)
iret
scas
cli
div
mov
stos
xchg
div
je
les
leave
fist
add
adc
xor
aam
mov
jb
pop
lods
cdq
and
add
hlt
leave
pop
mov
add
lock
aaa
pop
fnstenv
add
cmp
fcom
add
mov
mov
jg
lahf
aam
xlat
add
jbe
and
dec
jo
scas
jle
mov
ins
lds
jae
lods
or
daa
aad
and
add
daa
jg
sub
mov
fnsetpm(287
push
or
push
and
or
xchg
push
out
xchg
mov
ds
dec
out
cmp
fisttp
into
xchg
sub
(bad)
scas
xchg
les
(bad)
dec
cmp
push
outs
sub
mov
sub
push
lds
punpckhdq
fiadd
sub
xchg
mov
pop
sbb
fcom
not
inc
xchg
stos
adc
push
sti
add
(bad)
xchg
(bad)
xrelease
inc
xchg
sbb
adc
sar
cmp
test
movs
jno
leave
sar
loope
(bad)
adc
fs
in
inc
out
inc
sub
test
retf
push
imul
dec
cwde
or
dec
push
ds
jecxz
add
std
push
sbb
scas
int3
xor
mov
mov
out
jbe
inc
movs
pop
cmp
and
or
sub
xor
add
dec
fnstenv
pop
imul
cwde
lods
out
movs
idiv
scas
test
push
pop
push
sbb
mov
xor
mov
rcr
xor
mov
test
(bad)
out
pop
cdq
mov
retf
adc
psllw
push
xor
jge
push
ss
jbe
dec
or
mov
fistp
inc
aad
ins
mov
sbb
(bad)
mov
pop
mov
div
push
call
ret
add
aam
loopne
mov
or
xchg
loopne
in
fstp
jbe
js
mov
adc
and
jl
ds
or
loope
jecxz
dec
mov
xor
mov
mov
mov
dec
jmp
fdivr
ror
cmp
adc
pusha
sbb
and
jecxz
or
cmps
jns
shl
(bad)
cmp
sub
xchg
and
cdq
inc
rol
sahf
xor
sub
ret
test
dec
stos
pushf
mov
xchg
add
out
rcr
xor
mov
sar
mov
cmp
dec
mov
js
fbld
adc
loope
pop
add
call
and
sbb
into
xchg
or
cmps
pop
stos
sub
ror
lds
retf
inc
pop
mov
and
pop
in
sahf
ret
xchg
add
test
aaa
mov
mov
push
mov
aad
fsub
aas
mov
int3
lods
jno
out
outs
icebp
mov
aad
in
and
mov
dec
mov
xchg
mov
aam
stos
outs
or
push
push
mov
enter
sub
ror
mov
test
mov
sar
call
add
adc
and
movs
jmp
fsubrp
ins
dec
jmp
or
lds
xchg
mov
cs
pop
push
das
mov
dec
(bad)
fst
push
cmp
(bad)
cld
xlat
cdq
push
test
or
ds
cmc
cmp
outs
inc
outs
mov
inc
scas
xchg
ins
arpl
mov
imul
int
jle
mov
mov
stc
mov
test
mov
sub
mov
lods
aaa
adc
mov
cld
test
sbb
je
addr16
icebp
jle
jp
jnp
fcomp
inc
lods
into
stos
push
mov
or
pop
mov
mov
mov
mov
pushf
int
cmc
and
test
jmp
and
inc
fadd
mov
sbb
sub
aaa
xchg
fcomp
addr16
std
call
ret
sbb
pop
xchg
or
push
icebp
fidiv
xchg
vpshuflw
mov
inc
sub
push
mov
inc
test
mov
aas
dec
adc
xchg
ror
xchg
ds
sbb
adc
mov
jp
(bad)
loope
scas
inc
mov
sub
or
pop
and
mov
stos
shl
or
je
add
push
jne
inc
les
add
gs
dec
pop
fld
and
push
arpl
pop
cmp
rcr
mov
test
cmp
ins
les
jl
imul
lea
dec
aam
ss
into
out
mov
ret
scas
add
xchg
cmp
push
(bad)
jmp
cmps
fwait
push
mov
push
imul
jns
test
pop
into
lods
and
shl
lods
mul
jmp
push
mov
and
pusha
cmp
pmaxub
int3
enter
fistp
(bad)
nop
xor
xchg
mov
sub
stos
lods
mov
out
adc
dec
ret
sbb
outs
xchg
stc
pop
jmp
stos
or
retf
iret
(bad)
inc
jl
in
iret
cdq
das
or
or
je
into
push
adc
pop
xchg
ins
fsubr
xor
pop
inc
cmps
pop
loop
cmp
sbb
test
fmul
dec
xor
popf
fwait
jecxz
jmp
sti
jb
out
cs
jae
je
shl
xor
sub
gs
cmps
mov
push
dec
xor
push
xor
leave
cmp
ss
outs
adc
test
fisubr
fldenv
mov
jg
jo
nop
cmps
data16
xchg
and
imul
aas
mov
addr16
dec
add
stos
mov
adc
lock
push
sbb
dec
loopne
movs
mov
outs
fdiv
xchg
movs
or
cmp
test
pop
hlt
push
sub
iret
cmc
xchg
mov
cmps
movs
addr16
dec
ror
cmp
push
pop
xchg
dec
test
sub
mov
iret
or
push
cmp
dec
sub
xchg
mov
jp
add
and
inc
enter
movs
retf
sar
ss
jge
arpl
stos
je
cmc
sahf
adc
mov
adc
xchg
add
push
cmp
jnp
cmp
sar
popf
inc
xchg
cmc
pop
in
jne
xchg
jg
fcom
mov
mov
mov
mov
stc
sahf
inc
cmp
cmps
stos
xor
xchg
jg
or
mov
lods
ret
mov
sub
xchg
mov
ja
adc
fs
fisttp
movs
inc
jb
bound
or
cmp
jnp
mov
out
adc
or
jnp
mov
sub
pop
enter
(bad)
ror
cmp
mov
fidivr
or
xor
xchg
dec
mov
xlat
xor
mul
xor
mov
sahf
jb
fdivp
and
jne
xor
push
sub
sub
cmc
popf
(bad)
cmp
mov
jmp
int3
mov
cdq
mov
lahf
or
enter
imul
jb
xor
out
aad
cmp
pop
addr16
cli
adc
sbb
and
test
mov
xchg
test
xchg
pop
in
loope
pop
dec
pop
fistp
ror
(bad)
mov
hlt
cmp
and
fdiv
or
es
mov
push
scas
cmp
pop
cmp
fdivr
pop
xchg
jno
popf
test
(bad)
test
jo
jp
sbb
fistp
jecxz
pop
cmp
dec
adc
pop
(bad)
lahf
pop
mul
add
into
aam
sub
jbe
pop
cwde
mov
jecxz
dec
xor
aas
dec
dec
or
jl
ins
mov
dec
or
iret
sub
test
cmp
lods
mov
jo
mov
bound
clc
call
ins
mov
pop
enter
call
dec
ret
mov
(bad)
clc
movs
hlt
ins
and
or
add
call
mov
fiadd
stc
retf
pop
cmc
cmp
test
cli
add
push
rol
or
(bad)
pop
in
loopne
mov
jp
push
fs
xor
jb
cli
cwde
adc
test
out
dec
retf
push
mov
sub
rep
scas
(bad)
out
outs
cmp
jle
jecxz
pop
movs
aaa
jne
cmps
xor
add
xor
addr16
clc
popa
call
int
pop
xchg
mov
inc
sbb
in
and
xor
or
push
xchg
fnstsw
iret
push
lahf
jnp
fcom
sub
jle
cdq
pop
sbb
imul
cwde
adc
xor
push
stos
sub
movs
call
push
ror
vpaddsb
mov
or
xchg
add
test
xor
loopne
fistp
sbb
jge
out
pop
mov
aam
mov
adc
pop
xlat
jns
pop
xchg
push
in
mov
pop
dec
mov
xor
push
sbb
call
sub
xchg
mov
loopne
std
or
xchg
dec
pop
imul
call
sbb
pop
fsub
sub
mov
jb
dec
mov
movs
jmp
lds
jbe
out
inc
les
fidivr
rcr
scas
outs
lahf
ret
jo
ja
mov
jecxz
idiv
xchg
mov
das
pop
xlat
xor
jl
cmp
sbb
jmp
loopne
ss
mov
(bad)
inc
mov
fnstenv
cmps
mov
push
pop
jecxz
(bad)
(bad)
hlt
sub
cs
mov
std
mov
addr16
dec
push
dec
lahf
inc
lock
cs
popa
iret
test
sbb
dec
or
mov
sbb
mov
mov
lds
adc
push
cmpxchg
popf
out
push
dec
dec
cmp
test
mov
xchg
adc
inc
mov
div
fild
inc
scas
loope
pop
sbb
out
push
int3
push
push
sbb
mov
mov
loop
ficom
mov
jb
lods
inc
loopne
popa
jae
jle
jp
ret
pop
sti
pop
pusha
daa
addr16
jge
fiadd
jp
xor
mov
js
sub
paddsb
xchg
call
scas
adc
rcl
lea
adc
ret
dec
push
lea
add
shl
or
loope
jle
or
cmp
jle
push
rol
lds
out
into
mov
inc
mov
sbb
jae
cmp
test
aad
inc
xchg
(bad)
lock
sbb
int3
add
sbb
xchg
cmp
data16
mov
jp
sub
pop
cld
adc
imul
sbb
add
pop
cs
fimul
mov
scas
rcr
mov
test
out
out
sub
sti
hlt
fs
sub
pop
pop
sbb
setp
push
mov
in
js
rcl
aam
mov
fprem1
add
push
or
mov
(bad)
cld
mov
push
in
dec
lea
std
inc
sbb
pop
mov
mov
jmp
push
cmp
xor
inc
call
data16
les
and
or
xchg
push
push
mov
movs
add
fucomp
cwde
fist
push
jecxz
mov
dec
cmp
jmp
enter
fwait
out
ins
pop
or
sub
cmp
push
daa
(bad)
jns
fsubr
xor
in
clc
add
call
mov
push
in
push
xchg
add
std
aad
xchg
pop
pop
rcl
push
mov
pop
and
mov
fild
sbb
mov
mov
mov
mov
mov
sbb
test
adc
jo
js
dec
push
shl
inc
inc
movs
mov
(bad)
stc
pop
adc
aaa
xchg
mov
popf
sti
jg
mov
fist
icebp
ret
cmp
loop
iret
aaa
test
sbb
xor
pop
loopne
xor
scas
fisubr
test
mov
mov
push
aas
(bad)
or
xchg
push
add
scas
test
mov
daa
adc
pop
test
push
xor
pushf
cmps
mov
mov
cmc
adc
push
pop
test
ds
ins
test
inc
nop
sub
cmc
push
sub
icebp
outs
pop
mov
mov
rcr
and
or
shl
test
aam
sub
mov
jo
invd
xor
mov
sub
mov
cmp
nop
fs
jo
cdq
push
hlt
not
or
adc
adc
inc
outs
add
hlt
mov
mov
fwait
repnz
aas
xor
inc
ss
aam
xchg
add
push
scas
int
cmp
mov
xor
mov
pushf
inc
das
cmp
(bad)
inc
lods
jae
sahf
mov
mov
xor
cdq
fidiv
scas
or
dec
ret
push
fst
push
sar
(bad)
jae
int
jns
sub
outs
dec
(bad)
pop
enter
nop
cmp
outs
cmp
sti
int
or
loop
adc
add
pop
loopne
adc
jbe
pop
lods
xor
adc
(bad)
push
mov
mov
out
cmp
pop
jg
xchg
mov
shr
mov
inc
xor
cdq
or
cwde
pop
sbb
lea
repz
loopne
mov
mov
push
sar
movs
xor
push
pop
xchg
sub
das
mov
(bad)
pop
and
out
mov
scas
fdiv
jmp
xchg
cmc
xor
push
mov
push
inc
add
inc
and
xor
fcomi
jle
out
repnz
sti
mov
add
push
add
test
lds
test
lods
dec
cmp
inc
push
or
retf
dec
lds
and
push
test
sub
mov
adc
and
shl
mov
dec
push
or
fcmovbe
push
inc
mov
pop
jle
ss
and
inc
std
addr16
clc
daa
in
loope
sub
cmp
add
shr
pop
(bad)
sti
call
jns
scas
test
push
scas
push
jmp
ins
push
cs
cmp
pop
lods
jle
fst
dec
ficomp
or
jae
or
test
push
mov
inc
scas
cmp
and
in
test
clc
add
mov
cmc
cmps
mov
stc
idiv
lds
enter
addr16
xchg
int
in
ja
push
push
push
pusha
or
loop
sti
jbe
cmp
inc
imul
mov
add
pop
push
push
sub
ds
lock
inc
scas
out
mov
ret
sar
hlt
xchg
sbb
and
push
adc
or
loop
push
inc
(bad)
hlt
pop
mov
xchg
shr
lahf
js
xchg
js
aaa
xchg
add
push
out
scas
cmovs
jbe
xchg
je
cmp
mov
xor
call
inc
shr
fdiv
test
(bad)
xchg
mov
arpl
sti
mov
push
or
mov
jecxz
(bad)
out
out
out
and
add
xchg
jg
mov
out
rcl
cmps
xor
jp
or
xchg
mov
fs
addr16
xor
dec
mov
sbb
fst
push
mov
shl
leave
(bad)
sub
mov
lds
rcl
daa
xor
call
sbb
dec
push
gs
call
clc
shl
cmp
jp
sub
dec
add
js
lahf
jo
popf
and
dec
pop
mov
mov
jne
dec
cmc
ins
sub
daa
or
ds
mov
stos
mov
and
pop
arpl
and
ret
es
mov
push
in
jb
movs
fiadd
xor
and
std
pop
clc
dec
mov
rcr
stos
inc
out
(bad)
pop
mov
inc
sbb
inc
aas
(bad)
mov
rol
retf
mov
sbb
dec
pop
div
in
jg
push
call
in
loop
test
retf
(bad)
das
push
out
scas
js
inc
movs
inc
inc
add
lods
adc
sahf
jl
or
xor
or
push
aaa
jnp
jmp
dec
(bad)
or
jne
into
xchg
xchg
test
(bad)
out
jo
mov
xchg
lock
or
xadd
rcr
jno
test
sub
repnz
adc
cdq
or
cmp
and
and
and
jmp
sub
loopne
ficomp
loop
dec
pusha
xor
jmp
and
cmc
xor
popf
ret
pusha
in
aas
rol
test
pop
fs
in
ret
sbb
xchg
fadd
mov
imul
mov
fisubr
cli
pop
fisttp
repnz
mov
arpl
or
jle
das
ins
sbb
ins
or
bound
pop
in
loopne
sub
mov
xchg
es
int
enter
pop
lock
ins
cwde
ds
scas
je
cmp
add
in
jg
inc
cli
ds
sbb
pop
pop
mov
pop
scas
retf
cmp
xlat
sub
or
js
lods
dec
enter
inc
pop
lds
cmp
xor
test
cmp
pushf
mov
and
fst
enter
pushf
pop
push
sbb
ret
test
xchg
daa
push
repnz
shl
ss
loopne
xchg
jl
mov
imul
iret
add
cmp
jl
in
cmp
loope
cmp
mov
and
imul
call
pop
sbb
sti
dec
(bad)
xchg
ficom
stos
add
ss
mov
and
add
fwait
sub
icebp
(bad)
xchg
js
jbe
sbb
sub
cmp
outs
(bad)
sbb
outs
xchg
ds
or
xchg
mov
cld
and
jle
loopne
sbb
sub
push
dec
jg
push
and
or
pop
in
push
movs
or
ins
stos
pop
cmp
xchg
ins
imul
rcr
jns
adc
jns
fidivr
outs
jge
push
inc
and
mul
scas
cmc
into
cli
fidivr
int3
int
(bad)
jns
fisub
pop
(bad)
cmc
adc
shl
dec
es
and
sahf
xor
and
adc
jnp
mov
or
jecxz
mov
push
adc
ds
jmp
ret
clc
loope
inc
test
jnp
stc
push
std
and
movs
retf
mov
int3
sub
lock
dec
popa
rol
movs
and
jbe
cmps
sbb
call
int
sub
js
jmp
(bad)
sbb
outs
pop
pop
lahf
sbb
test
movs
iret
in
scas
(bad)
loope
push
inc
jns
imul
int
pop
(bad)
cdq
and
cwde
jne
repz
icebp
inc
nop
cmps
cmp
sbb
scas
push
add
sbb
inc
or
shl
jle
int3
sar
dec
sub
out
call
mov
jg
jbe
imul
jbe
shl
xor
cli
push
stos
aam
add
inc
clc
xchg
imul
out
mov
dec
outs
stos
movs
call
xchg
pushf
xchg
pop
mov
xor
or
mov
lods
mov
rol
mov
xor
retf
and
arpl
mov
pop
add
push
mov
mov
mov
or
movs
mov
jp
push
jbe
mov
mov
jle
mov
mov
fnstenv
sub
cdq
jno
xchg
mov
cmp
xor
mov
mov
(bad)
js
sti
clc
mov
fisttp
retf
(bad)
mov
scas
or
adc
jno
mov
fld
pop
mov
(bad)
jle
or
dec
sbb
push
xchg
sbb
add
popa
in
out
cmp
movs
js
mov
call
rcl
les
dec
mov
push
les
aad
push
fst
enter
js
arpl
retf
pop
dec
sub
stc
mov
mul
scas
cmp
cmps
jnp
and
mov
jae
pop
ja
not
ja
repz
(bad)
xchg
and
xchg
xor
mov
xchg
dec
cmp
jo
xor
popf
ficomp
stos
inc
mov
adc
fidivr
or
ins
xchg
push
jp
(bad)
xchg
sub
repz
rcr
es
add
(bad)
(bad)
mov
lods
repz
cmp
es
scas
ins
cmps
xchg
ins
xchg
push
hlt
and
sub
or
cwde
(bad)
daa
inc
and
inc
mov
sar
add
pop
jo
enter
(bad)
jo
lods
inc
movs
sbb
push
call
xchg
cmc
pop
loop
jne
xor
add
or
leave
jge
fcomp
jne
inc
pop
nop
sbb
stos
iret
sub
int3
sub
test
movs
leave
test
sub
sub
retf
pop
(bad)
(bad)
jnp
jg
pop
(bad)
ja
test
call
lods
mov
repz
xor
aaa
lahf
or
pop
ds
mov
popf
(bad)
push
mov
pop
push
push
sub
jno
cmp
push
jl
fcmovb
push
cmp
cdq
in
pop
es
jno
popf
add
das
inc
push
loopne
es
sbb
or
popf
gs
xor
daa
fld
outs
mov
inc
sub
enter
inc
jnp
loope
fmul
and
lods
in
push
add
pop
sub
outs
enter
and
or
or
ds
inc
mov
cld
in
jnp
push
das
mov
jmp
mov
add
enter
and
loope
push
mov
out
rcr
cwde
xchg
fist
(bad)
mov
jecxz
sti
dec
push
pop
xor
dec
adc
jno
mov
(bad)
outs
fucomi
jle
sbb
movs
inc
ja
mov
or
and
ret
push
push
push
(bad)
call
xor
nop
stc
sbb
cmps
arpl
jmp
retf
cmp
or
popf
pop
sub
pop
mov
sub
pop
and
in
or
mov
sbb
mul
outs
sbb
and
mov
inc
inc
pop
sbb
fadd
pop
mov
mov
addr16
in
xlat
cmps
loopne
fsubr
adc
sub
xor
jbe
pop
or
sub
lahf
inc
pop
xlat
mov
(bad)
movs
es
icebp
mov
push
cmp
mov
fldlg2
inc
(bad)
jp
sbb
in
mov
add
mov
push
cmps
aam
iret
jge
je
inc
pop
cld
cmp
(bad)
ins
xchg
mov
sbb
pushf
sbb
and
jmp
mov
xor
scas
inc
sar
sbb
inc
ret
dec
out
inc
fistp
call
out
dec
fs
cmp
adc
sub
cld
mov
test
loopne
fdiv
mov
ins
test
aaa
ret
imul
in
pop
fcom
pop
mov
adc
and
inc
push
mov
fdiv
sub
cs
and
sbb
or
(bad)
cli
cli
mov
mov
add
mov
ja
int3
and
cmc
or
pop
daa
xchg
mov
ror
enter
add
jno
imul
mov
or
jb
inc
jbe
lock
popf
add
add
add
inc
mov
cli
mov
stos
in
sbb
mov
push
lock
loopne
and
push
(bad)
pushf
in
mov
stos
xlat
pop
xchg
push
fnstenv
cmp
idiv
adc
or
fadd
add
jb
jo
and
push
add
mov
call
and
xchg
inc
push
test
cmp
inc
into
pop
inc
jb
push
sub
mov
xchg
fimul
mov
leave
lea
ret
inc
or
loop
xor
push
in
cmps
rcr
mov
sahf
mov
arpl
adc
mov
fimul
popa
sti
sub
cwde
loope
ror
scas
sub
js
ins
shl
mov
sub
stos
mov
dec
mov
test
les
mov
int3
arpl
fsubp
sti
or
add
pop
pop
loopne
std
(bad)
or
mov
lods
shl
std
ret
scas
(bad)
iret
popa
dec
enter
pop
jnp
les
outs
mov
call
xchg
jae
call
or
adc
fcmove
or
mov
sub
pop
pop
push
stos
leave
add
cmp
mov
arpl
adc
(bad)
push
jnp
pop
cmp
xor
je
mov
cmp
xchg
stos
or
sbb
fistp
xor
enter
pop
jg
push
inc
add
in
sub
cmc
das
or
adc
rol
or
test
mov
adc
pop
(bad)
and
xchg
ret
push
sbb
js
add
mov
xchg
shr
leave
pushf
out
adc
push
sbb
pushf
jmp
push
clc
mov
jp
addr16
xor
call
xchg
nop
dec
retf
xlat
lods
sub
sub
inc
loop
xor
pushf
xor
jmp
in
sub
cmp
stos
fbld
popf
sbb
sub
sbb
xchg
xchg
mov
mov
mov
aaa
push
sbb
cmp
jmp
inc
js
xor
xchg
push
nop
add
cmp
push
pop
xchg
pop
(bad)
lods
out
in
leave
imul
xor
mov
dec
into
sbb
mov
ins
xchg
and
out
loope
add
ret
shl
add
js
dec
icebp
pop
add
into
or
int3
xchg
mov
add
stc
mov
out
sbb
cmp
(bad)
mov
add
int3
add
aas
adc
lods
mov
fild
lahf
and
mov
cdq
mov
ret
retf
test
pusha
imul
add
pop
rcl
outs
lock
xchg
jge
jbe
and
xchg
(bad)
loope
mov
frstor
ja
test
fdivp
jg
enter
call
or
popa
sub
ror
sub
or
push
push
sbb
pop
jo
dec
xchg
xor
stos
adc
sbb
dec
dec
xor
(bad)
retf
sub
pop
jp
imul
hlt
jg
pop
push
fwait
dec
int3
lahf
and
call
sub
xchg
addr16
ja
sar
daa
adc
xchg
add
xchg
mov
and
cmp
dec
cmps
push
int
mov
jbe
xor
mov
add
pop
into
push
loope
shr
jge
jo
cmp
jno
(bad)
lds
inc
and
ret
jl
in
or
cwde
rcl
test
ret
inc
shl
gs
aas
or
xchg
and
je
pop
pushf
jp
jns
icebp
jl
and
inc
imul
aaa
fimul
addr16
popf
stos
or
fwait
adc
arpl
adc
popf
or
xor
cs
outs
(bad)
fdivr
aad
fsin
or
and
out
sub
mov
jge
mov
or
unpckhps
add
(bad)
dec
adc
lea
xchg
retf
iret
in
(bad)
mov
(bad)
pop
cmp
sbb
shl
jg
cwde
adc
imul
dec
icebp
cdq
push
das
scas
mov
and
retf
push
cdq
and
jmp
pusha
pop
xor
cli
add
add
arpl
sub
push
sub
push
or
xchg
fsubr
jns
inc
or
push
mov
and
push
scas
jecxz
mov
jmp
pushf
repz
sbb
in
cmc
aas
addr16
fwait
pop
sbb
push
dec
pop
xchg
retf
clc
jmp
rcl
push
cs
out
push
(bad)
adc
cmp
add
dec
stos
inc
and
sbb
xchg
jp
fst
aaa
sar
loop
or
and
lds
fmulp
sub
sbb
leave
inc
or
lea
pusha
aaa
pop
outs
xchg
push
xor
cmp
and
push
push
test
in
icebp
mov
mov
add
cmp
mov
int
mov
sar
pop
fs
test
push
jo
or
sahf
sti
in
cmp
mov
fistp
sti
repnz
repz
push
ror
or
pop
aas
jno
clc
aaa
or
mov
shl
sbb
js
push
jbe
pop
retf
push
or
push
shr
push
mov
mov
mov
fwait
dec
sbb
je
mov
std
mov
fdiv
lods
dec
jae
cmp
rcl
loope
and
mov
ret
inc
xchg
push
pop
push
retf
loope
dec
and
ror
dec
es
pop
(bad)
dec
shl
(bad)
test
ror
nop
cmp
xor
xchg
sbb
mov
pop
retf
test
mov
stos
retf
outs
mov
adc
jns
icebp
icebp
pop
sti
inc
test
test
sub
jmp
and
pusha
pop
pushf
cdq
mov
test
aas
dec
sti
lds
rol
jg
and
(bad)
pop
dec
and
xchg
imul
cmp
iret
push
clc
xor
lea
xchg
out
pop
fisubr
cld
push
push
inc
jmp
aaa
scas
dec
mov
int3
adc
mov
and
sbb
in
mov
or
push
xor
iret
sbb
push
xor
cmp
sar
call
pop
js
scas
lock
jp
xor
shl
fsubr
ins
retf
test
iret
rcl
sub
fcomp
jl
sub
inc
sub
add
enter
inc
pop
jne
(bad)
fldcw
stos
mov
call
es
pop
out
adc
das
or
call
lock
movs
cmp
fistp
daa
ins
mov
(bad)
into
scas
mov
psubsb
push
js
fisubr
mov
jmp
iret
xchg
hlt
lods
and
jmp
and
outs
leave
ds
or
add
push
fist
or
dec
dec
pop
repnz
popf
scas
setg
in
out
mov
loop
pop
cld
xor
cmc
pop
clc
xchg
pop
or
je
pop
sbb
pop
push
(bad)
fsubr
fstp
es
inc
push
mov
es
add
ins
je
aam
jno
and
test
xchg
out
shl
add
cs
mul
xchg
mov
and
inc
ret
dec
mov
mov
xor
mov
popf
mov
loopne
jmp
movs
push
cli
jmp
outs
loop
adc
cmc
sbb
inc
fstp
mov
mov
iret
jns
dec
jmp
fmul
pop
pop
and
cmp
add
icebp
dec
adc
push
lahf
(bad)
mov
push
scas
xchg
lahf
jae
cld
xchg
xchg
sub
sbb
fcom
push
outs
or
mov
dec
cmp
xchg
push
lds
cli
jmp
xchg
stos
xor
and
and
adc
pop
arpl
in
push
push
or
push
add
jae
push
adc
div
lds
jne
adc
lds
mov
imul
push
and
cld
mul
add
retf
sbb
cmc
or
dec
or
mov
in
pop
cwde
pusha
bound
stc
mov
add
mov
sar
scas
push
jmp
push
(bad)
fs
mov
mov
sub
xor
sub
popf
jbe
push
push
add
pop
js
sbb
repz
inc
add
icebp
pop
add
outs
stc
test
jmp
mov
pusha
neg
aad
ins
ror
imul
adc
fcomp
mov
jl
aas
mov
mov
aam
push
or
push
xchg
inc
in
mov
fld
repz
loop
jmp
(bad)
cmps
pop
sub
loop
mov
aaa
adc
cmp
(bad)
retf
mov
sub
sahf
and
pop
enter
and
xchg
push
cmc
js
cmp
xor
loop
outs
push
imul
mov
sbb
outs
pop
jp
add
sub
clc
es
loop
fiadd
ins
xor
xchg
adc
pop
inc
mov
dec
jne
mov
scas
mov
stos
xor
int3
outs
add
add
enter
or
or
fcom
mov
mov
call
call
cmp
xchg
or
hlt
mov
bnd
fwait
rdmsr
jne
pop
mov
jp
add
in
xchg
ja
push
call
enter
mov
daa
cmps
or
sbb
imul
inc
push
sbb
outs
xor
mov
sbb
cmps
hlt
shr
jb
sub
xchg
adc
mov
jle
rol
mov
stos
popa
push
sahf
(bad)
outs
xchg
pusha
(bad)
jl
mov
or
mov
retf
add
push
adc
sub
cmp
push
stos
fdivrp
es
mov
cmps
cmp
xor
or
push
cmps
jge
dec
ret
stos
sahf
clc
(bad)
sub
imul
jbe
retf
xor
stos
or
push
dec
and
push
mov
imul
jns
ins
sub
call
das
nop
cs
rcl
sbb
xchg
pop
or
dec
imul
cmp
adc
and
cmp
sub
sahf
adc
ret
bound
pusha
cs
enter
mov
inc
(bad)
sti
or
sbb
xor
mov
mov
dec
pop
cld
jae
icebp
call
mov
xchg
inc
pop
jg
leave
adc
xor
das
and
jns
pop
jnp
xor
(bad)
mov
stos
or
in
adc
mov
mov
mov
cmp
ret
push
pop
(bad)
mov
push
xchg
ins
and
into
inc
rol
daa
pop
cli
mov
xor
xchg
jno
and
sbb
jge
jmp
dec
or
pusha
call
jmp
scas
aam
loop
dec
xor
lods
fst
int
test
(bad)
js
cmp
pop
rcr
mov
iret
dec
fld
pusha
mov
lock
popf
neg
xchg
push
imul
inc
inc
sbb
xor
cmp
cmp
call
add
ins
sbb
mov
cmp
lock
jne
sbb
sub
cmps
stos
mov
or
push
pmaddwd
or
cmp
in
push
mov
and
icebp
loop
xor
sub
dec
mov
(bad)
lock
adc
fs
mov
enter
mov
cmp
stos
cld
mov
(bad)
data16
xchg
lahf
lods
loope
adc
stos
imul
in
dec
dec
pop
mov
(bad)
xchg
inc
je
and
mov
test
adc
mov
not
xor
sbb
sub
cmp
jbe
xchg
ja
dec
fwait
test
pop
cmp
pop
ss
adc
mov
mov
inc
dec
sbb
or
adc
add
jge
xor
cwde
push
popf
cmp
or
popf
push
les
push
cmps
dec
arpl
fdivr
jmp
xchg
xlat
mov
das
pop
add
or
das
sar
lock
inc
add
sub
(bad)
lea
shld
push
and
dec
xchg
lds
mov
sub
cmp
(bad)
jle
icebp
div
call
movs
bound
shl
mov
cmp
sub
movs
lahf
shl
iret
or
aas
or
mov
dec
mov
cmp
leave
vmread
les
xchg
stc
bound
sbb
push
push
stos
or
cli
adc
push
(bad)
sub
pop
jo
lahf
mov
sbb
mov
int
mov
lea
sti
push
pushf
sub
mov
add
repz
sbb
arpl
call
fidiv
sar
loop
pop
mov
dec
(bad)
cli
loop
scas
cmp
jno
mov
test
xor
clc
fimul
sub
lahf
lock
cmps
mov
mov
push
rol
popf
jae
mov
mov
inc
mov
xor
xlat
add
xor
jle
cmp
shr
shl
sub
into
inc
retf
inc
mov
and
pop
or
jmp
aam
clc
outs
xchg
jmp
popf
enter
pop
out
call
add
xchg
ds
daa
stc
fisttp
inc
movs
test
jg
xor
xchg
add
jmp
dec
test
pop
push
xlat
ss
jecxz
push
jne
cmps
dec
mov
int
add
test
adc
xor
call
xor
xor
adc
add
addr16
pop
sub
jle
movs
aaa
inc
in
and
jbe
stos
adc
lock
test
es
and
add
pop
cld
cmp
mov
pop
xchg
push
sbb
popf
cmps
outs
aas
add
mov
push
iret
push
stos
aad
fsubr
and
ja
jns
js
hlt
outs
push
je
adc
out
and
out
adc
stc
cmps
jae
add
sbb
push
cwde
xor
cmp
dec
add
xor
call
inc
and
cmp
fsubrp
jns
xchg
or
xor
mov
push
in
mov
imul
mov
mov
adc
and
mul
add
sub
xchg
xchg
inc
outs
push
cwde
shl
ret
stos
cmp
add
and
movs
and
mov
loope
aad
push
test
cmp
xor
cmp
in
loop
push
jge
mov
mov
jnp
or
hlt
or
dec
retf
jnp
sbb
add
jg
xor
adc
test
mov
sar
int
icebp
push
shl
adc
sub
sti
sub
fxch
mov
push
je
jb
push
in
pop
and
push
loop
cdq
mov
adc
mov
cmp
mov
call
std
mov
xor
mov
lods
xor
cmp
inc
jno
arpl
push
sub
sub
int
mov
stc
and
push
enter
rcl
push
dec
dec
(bad)
push
arpl
aas
xchg
add
dec
ret
push
jne
lds
xor
jns
mov
mov
xchg
call
add
pop
xchg
adc
retf
jecxz
xchg
xchg
push
cmps
add
cwde
lods
sbb
(bad)
jp
mov
lods
dec
js
int
ins
jle
movs
or
mov
mov
push
jg
or
or
add
jecxz
das
sub
pop
xor
div
into
mov
cld
or
sbb
out
jbe
pop
fdivp
popa
cmp
popa
sub
inc
lods
fidivr
test
jb
or
arpl
mov
jns
push
out
mov
pop
jbe
adc
cmp
fsubp
dec
jge
mov
sbb
imul
les
aaa
sub
pop
dec
jbe
pop
mov
lock
loope
or
jecxz
mov
adc
imul
xchg
add
push
jle
push
add
cmp
leave
out
dec
pop
pop
jge
jbe
fbld
xlat
inc
inc
ins
fsubr
and
jmp
mov
cmp
(bad)
push
push
mov
inc
dec
or
mov
cmc
div
(bad)
test
jae
jns
and
addr16
cmp
xor
mov
pop
test
xor
lds
lods
jo
pop
out
add
and
push
push
in
fs
and
clc
xchg
and
push
push
jmp
fcomp
pop
cmp
inc
inc
mov
jbe
imul
adc
adc
lods
inc
sar
xchg
fwait
pop
xor
(bad)
nop
sbb
sbb
adc
and
dec
dec
pop
mov
stc
sub
(bad)
pop
ins
xchg
inc
jnp
cmp
scas
sub
popf
xor
ret
mov
push
rcl
inc
enter
dec
movs
popf
inc
dec
out
call
xor
push
xchg
shr
dec
mov
lahf
icebp
push
arpl
ficomp
adc
bnd
mov
mov
fdiv
dec
push
(bad)
jmp
fist
loopne
ret
pop
(bad)
cmp
addr16
cwde
test
add
jmp
(bad)
ror
or
xor
aas
ret
test
push
fnstcw
jae
or
cmp
add
cmp
pop
out
shl
push
mov
xlat
retf
mul
ds
xchg
xor
fs
mov
sub
dec
mov
adc
pop
jge
mov
test
rcr
xchg
xchg
fmul
jo
inc
and
pop
(bad)
in
enter
ds
ds
dec
je
lods
enter
in
and
ins
pop
mov
mov
jo
mov
fwait
aas
mov
daa
in
push
ret
call
mov
inc
push
shl
(bad)
rcl
rcr
mov
(bad)
movs
fwait
test
mov
push
or
mov
call
sub
push
sahf
sub
sbb
jb
fcom
or
mov
xchg
pop
mov
xchg
(bad)
xor
sahf
cmc
dec
sub
sub
adc
fstp
xor
mov
push
fst
test
adc
mov
or
push
push
and
cmp
xor
and
jle
push
cli
sbb
push
fsubp
or
shr
loope
dec
popf
loopne
fst
inc
and
sbb
je
sbb
outs
je
mov
mov
cmc
mov
dec
fs
mov
in
out
rcl
add
and
and
aam
mov
mov
mov
cs
into
fwait
cli
sbb
push
retf
repz
ffree
jle
pusha
out
mov
call
inc
popf
mov
xchg
jg
sbb
jmp
dec
loope
data16
and
mov
movs
mov
sub
jb
xchg
test
mov
iret
push
or
pop
and
fdiv
rol
arpl
aad
mov
in
jecxz
je
iret
outs
inc
loope
jae
push
inc
jge
scas
jl
push
mov
mov
sbb
mov
jno
mov
sub
inc
mov
into
clc
clc
jmp
gs
rcr
mov
scas
gs
mov
inc
sub
scas
mov
jnp
mov
inc
mov
cli
pop
push
div
aam
rol
sar
in
out
ficom
mov
je
push
int3
xchg
push
mov
cmp
movs
sub
in
aas
fcmovu
nop
repz
mov
or
mov
pusha
cmp
ret
not
mov
lock
inc
rcl
hlt
loopne
push
lds
pop
arpl
push
cld
cld
dec
mov
lock
hlt
retf
fsub
mov
sbb
(bad)
jbe
pop
out
xchg
stc
aam
push
in
fsincos
or
popa
and
lahf
and
repz
das
cmp
call
cmp
adc
jp
add
in
or
imul
cdq
xchg
cmp
inc
or
pop
sbb
das
jecxz
lock
sub
xor
xor
aam
mov
gs
mov
sbb
enter
bound
mov
sub
sub
sub
ss
push
mov
mov
jae
dec
add
clc
xchg
cmp
mov
repz
add
pop
cmp
mov
std
stos
xor
cld
or
shl
scas
push
les
lea
outs
bound
enter
jne
pop
in
and
out
out
push
in
test
mov
mov
rol
test
sub
mov
mov
(bad)
push
(bad)
push
std
pmullw
(bad)
data16
jo
fwait
jo
lock
pushf
jne
or
sbb
jo
out
dec
xchg
cmp
jle
pop
xchg
sbb
in
add
aas
not
pop
out
sbb
jns
mov
or
dec
mov
ins
rcl
jne
cdq
mov
jbe
int3
pop
xor
sbb
stos
aad
pop
xor
out
loop
(bad)
or
addr16
rol
xchg
int3
jnp
in
adc
(bad)
xchg
push
dec
ficomp
dec
push
inc
and
pushf
lock
mov
jbe
adc
imul
adc
jle
into
push
loopne
mov
mov
mov
inc
ret
add
push
(bad)
call
std
imul
cs
add
pop
cmp
(bad)
mov
aas
inc
mov
stc
test
fidiv
xchg
xchg
sbb
jmp
or
shl
mov
jge
or
jne
iret
(bad)
popf
dec
fstp
retf
mov
loopne
cmp
xor
xchg
or
(bad)
ja
stos
test
add
movs
stos
cli
xchg
adc
test
icebp
push
imul
fbld
dec
sahf
inc
mov
lock
inc
inc
jnp
out
test
shr
ficom
or
dec
add
call
into
adc
mov
inc
cld
jp
sbb
pop
retf
and
fs
add
jl
jns
adc
clc
and
arpl
pop
fbstp
in
add
cmp
cmp
test
pop
xchg
iret
push
add
mul
aaa
into
mov
aam
shr
fisubr
ret
loope
or
xchg
test
cs
pop
bound
les
jle
push
and
push
mov
scas
popa
sbb
fisubr
mov
add
test
aad
addr16
(bad)
adc
and
popa
cmp
in
dec
out
cli
fld
cmp
push
mov
inc
daa
dec
push
push
jl
leave
adc
or
(bad)
and
icebp
out
loope
xchg
xlat
xchg
jae
xchg
adc
cmps
std
pop
push
cmp
xor
and
bound
loope
xchg
mov
push
push
pusha
or
je
lock
sub
outs
out
loop
fwait
icebp
push
sub
pop
sub
push
pop
dec
popa
push
cmp
adc
scas
icebp
and
cmp
xor
pop
xchg
ret
std
aam
or
sbb
out
xor
add
xchg
fdiv
adc
xchg
sbb
xor
inc
jg
sbb
fsub
sbb
xchg
(bad)
mov
retf
(bad)
fild
ja
fldenv
jge
push
push
shl
sub
jg
mov
shl
and
mov
inc
cwde
and
mov
ja
out
loop
imul
in
ror
(bad)
sub
test
push
aas
cmp
mov
shl
bound
inc
xor
mov
inc
inc
ret
shr
(bad)
mov
bound
out
repz
imul
jbe
push
retf
int
mov
add
jne
scas
adc
int3
adc
dec
cmp
in
inc
ss
push
jbe
dec
std
mov
xor
xor
adc
icebp
fistp
inc
into
popa
mov
or
and
dec
add
mov
out
std
jbe
cmp
hlt
adc
sub
xchg
and
pop
xor
mov
aam
pop
xor
test
ins
mov
test
push
mov
push
xchg
dec
aaa
jns
ja
fnstenv
jmp
cmp
jmp
ins
sub
fnstsw
es
xchg
ins
cld
push
movs
ins
and
scas
sub
push
mov
movs
fidiv
mov
push
and
or
lock
sbb
xor
push
stos
lods
push
sbb
test
(bad)
xchg
push
fs
clc
loopne
stos
retf
aad
lea
mov
push
sbb
dec
jmp
push
jmp
(bad)
aam
push
pop
clc
xchg
and
xchg
mov
neg
push
mov
mov
push
mov
pop
xchg
mov
add
rol
adc
push
mov
gs
mov
cmp
jl
adc
pop
adc
cmp
xor
or
xchg
(bad)
pop
xor
mov
addr16
sub
fadd
xchg
add
mov
xchg
scas
retf
js
(bad)
mov
hlt
jns
iret
push
cmp
adc
int
sub
int3
push
or
sub
fs
sbb
xchg
push
jno
sbb
push
popa
dec
data16
xchg
jecxz
cmc
and
and
stos
mov
xchg
inc
(bad)
ds
fsubr
repnz
shr
add
sub
imul
jae
ficomp
mov
scas
mov
adc
fimul
inc
mov
xchg
test
adc
aam
test
not
scas
adc
push
cmp
xchg
(bad)
inc
adc
ja
div
repz
mov
loopne
cmp
(bad)
lods
xrelease
retf
addr16
cs
sub
inc
push
fadd
mov
sbb
sti
stc
pop
inc
es
cli
movs
adc
mov
jp
dec
and
pop
mov
jge
cli
fmul
and
sbb
leave
mov
sahf
sub
lahf
call
push
ror
sahf
not
in
sbb
mov
test
fwait
scas
aad
jge
loopne
fadd
stos
push
ja
shr
pop
sahf
xchg
cmp
std
inc
cdq
jbe
outs
js
ss
not
out
cmp
test
dec
mov
cmps
mov
nop
or
outs
pop
pop
nop
call
int3
ins
dec
lock
add
xor
mov
(bad)
push
aaa
dec
xor
mov
pop
mov
shr
sub
in
pop
dec
dec
mov
out
jb
push
in
jne
push
adc
ins
mov
xchg
(bad)
mov
cmps
sbb
mov
out
adc
fsubr
adc
xor
es
imul
cdq
mov
or
repz
jmp
or
mov
or
or
push
jnp
xor
adc
ror
div
outs
(bad)
fs
dec
mov
sbb
ins
sti
cmp
clc
inc
lock
movs
or
inc
iret
mov
ret
push
ret
into
inc
xchg
jns
stc
mov
cmp
cmp
mov
sub
sti
shl
imul
push
xchg
and
mov
jnp
(bad)
push
fwait
into
cmps
xchg
xor
mov
pop
ror
or
test
cmp
je
jb
inc
adc
pop
loop
push
xchg
cmp
outs
or
jmp
(bad)
push
(bad)
es
inc
xor
jne
enter
shl
mov
data16
(bad)
(bad)
pusha
xchg
out
xchg
xor
cdq
pop
repz
pop
sbb
mov
into
adc
loope
fucomip
call
xchg
pop
ret
jbe
push
retf
push
xchg
call
add
fwait
jb
mov
push
xchg
loope
test
test
or
clc
out
mov
xchg
dec
mov
mov
mov
outs
or
mov
stc
(bad)
daa
pop
sub
mov
jmp
cwde
sbb
fst
mov
ins
pop
fnstcw
mov
call
pop
and
adc
push
xchg
fnstsw
test
icebp
and
or
mov
test
(bad)
pop
popf
(bad)
sahf
out
imul
test
pop
xor
and
in
pop
js
xor
xlat
adc
sub
jge
cmp
xor
pop
cmp
xor
into
cwde
sbb
or
fisttp
hlt
out
popa
call
jl
cmp
repz
pop
aad
fcmovnb
loopne
sbb
enter
sub
adc
lea
xor
and
retf
sub
jl
(bad)
in
inc
fild
(bad)
sub
inc
mov
into
int3
jns
retf
cwde
scas
daa
mov
sub
push
lea
jle
jo
into
leave
push
cmps
push
lds
cmp
jl
or
push
lock
jmp
adc
xchg
fnstcw
mov
aaa
mov
popa
mov
(bad)
popa
(bad)
dec
(bad)
or
mov
inc
cmp
and
xchg
or
mov
fdivr
(bad)
neg
cld
mov
adc
pop
imul
enter
cmp
out
inc
sbb
data16
mov
sub
pop
aas
jne
dec
fwait
mov
ret
mov
(bad)
xor
ficom
aad
jbe
ret
sub
aad
and
jg
xchg
fwait
in
inc
fdiv
lock
stc
mov
jge
push
dec
repz
and
mov
jns
jmp
xor
(bad)
aad
sub
repnz
add
push
ret
xor
pop
pop
int3
jle
jecxz
(bad)
clc
test
jo
ja
xor
(bad)
adc
loope
xchg
jg
iret
ja
lea
sub
repz
inc
xor
faddp
nop
inc
fstp
fs
dec
inc
dec
call
loop
out
or
pop
fcomp
push
popf
ss
mov
rol
xchg
clc
sbb
adc
call
jmp
popa
inc
mov
mov
jmp
xchg
pop
retf
lahf
jmp
nop
mov
dec
es
cmp
or
cmp
aad
call
jle
jg
sub
inc
add
sbb
dec
lods
sbb
das
and
cmc
fld
repz
push
leave
test
les
sbb
sub
cs
push
fild
out
out
retf
mov
and
mov
pop
and
fsubr
cmp
xor
les
add
retf
mov
dec
push
repnz
scas
mov
psadbw
(bad)
and
es
inc
stos
and
mov
in
dec
ins
or
scas
stos
in
add
jp
fcom
lods
sbb
idiv
ror
enter
retf
or
xor
mov
addr16
pop
and
sub
aad
stc
imul
and
pop
cs
sti
fldcw
ret
ins
inc
pop
pop
inc
add
loopne
dec
aas
(bad)
xor
adc
and
dec
movs
sub
jge
xchg
in
mov
sub
sahf
cmp
fild
sub
sub
sub
cmp
cs
mov
repz
mov
xchg
jo
mov
enter
jp
inc
xchg
mov
ret
jecxz
std
cmp
jno
mov
mov
and
sbb
sub
mov
ss
leave
rol
inc
outs
ins
ret
test
cdq
mov
out
inc
cmp
scas
in
aas
ret
sbb
and
jge
inc
cmp
popa
or
icebp
lock
inc
popf
mov
pusha
mov
push
(bad)
sub
movd
shl
lahf
push
in
and
fstp
fnclex
mov
xchg
pop
xor
fwait
push
pop
bound
bound
rcl
mov
sbb
mov
ret
dec
mov
enter
inc
rcl
push
and
test
mov
push
call
sbb
cmp
or
mov
inc
jae
pop
bnd
add
pop
(bad)
dec
imul
test
out
mov
aad
jnp
lds
push
push
adc
sbb
inc
add
or
add
inc
jmp
or
push
in
jg
test
push
jge
or
je
inc
jmp
mov
out
stos
std
cmc
clc
retf
cmp
mov
mov
cwde
xchg
dec
adc
push
fdivp
sbb
pop
les
shrd
dec
xchg
fs
loope
test
arpl
jecxz
scas
mov
xchg
pop
dec
into
or
pushf
pop
jle
xor
sub
rol
xor
mov
or
rcl
ja
cs
sub
pop
pusha
pop
xchg
mov
jmp
lahf
scas
cs
rol
sbb
mov
fnstenv
repnz
cmp
jno
popa
inc
xchg
ja
scas
push
dec
pop
pop
xlat
test
and
pxor
sbb
imul
sbb
jns
dec
cmp
sub
shl
pop
pop
fisttp
les
les
mov
fndisi(8087
imul
in
imul
rcr
test
pusha
aas
sub
xor
jp
sub
push
pop
ss
loop
jno
mov
xlat
push
mov
idiv
inc
mov
push
mov
leave
sbb
push
shr
in
in
dec
das
jns
dec
sub
bound
lahf
mov
jne
ss
adc
cmp
push
aas
out
mov
pop
in
dec
mov
inc
das
test
out
cwde
ss
xchg
pop
push
out
xchg
or
bound
movs
ud1
jbe
daa
sub
lds
sbb
add
dec
inc
out
cmp
add
xor
idiv
ins
test
cmp
or
jns
push
jns
(bad)
cmp
add
or
inc
ja
pop
xchg
inc
lock
mov
ja
shr
sub
jno
adc
or
jmp
out
dec
push
ficom
jmp
imul
sbb
cmc
ja
sti
sar
fld
call
mov
push
outs
push
mov
test
and
mov
(bad)
retf
fs
xchg
loop
mov
inc
comiss
pop
lods
into
add
jb
addr16
push
sub
shl
rcr
(bad)
jbe
pop
shl
pop
(bad)
out
shr
nop
test
mov
clc
xor
add
loopne
xchg
aas
push
dec
or
ret
cld
cmps
jns
push
arpl
pop
and
fsubp
iret
xchg
jnp
mov
xor
sub
xchg
cmc
jle
dec
scas
out
ds
sbb
ja
mov
pushf
fdiv
mov
mov
add
ins
popa
push
push
sar
(bad)
arpl
dec
sbb
stos
shr
mov
fiadd
push
jge
xchg
in
out
movs
sbb
ret
movs
mov
jo
mov
jo
inc
or
movs
or
prefetcht2
addr16
call
inc
mov
mov
retf
sbb
cmp
cmp
sbb
test
cmp
mov
outs
lar
es
je
mov
mov
or
pop
lahf
inc
xor
dec
fmul
jp
dec
cwde
unpckhps
dec
sub
jmp
scas
retf
jae
add
int3
popf
dec
repnz
not
xchg
mov
iret
jecxz
outs
out
(bad)
int3
ret
xchg
xchg
jmp
int
mov
sub
cwde
add
rol
pop
popf
dec
mov
jo
stos
mov
sub
mov
jg
outs
sbb
ficom
xchg
or
daa
(bad)
mov
jbe
gs
jle
or
cmp
adc
cdq
fs
inc
pop
lock
add
cmp
jae
xlat
sbb
fld
sub
lahf
stos
push
and
mov
cmp
scas
pop
adc
sti
stos
jno
je
fisttp
fdiv
test
adc
bound
js
sub
cmps
cmp
icebp
pushf
dec
pushf
sub
fwait
(bad)
pop
pop
ins
xor
cli
push
arpl
xlat
aas
pop
shl
mov
scas
jbe
cmp
push
inc
push
add
and
xor
aaa
test
in
push
jle
xchg
sub
jecxz
loope
loop
xor
xor
mov
jbe
pop
inc
ret
loop
or
push
test
aad
test
push
lahf
retf
adc
xlat
cs
rcr
addr16
add
fwait
jg
mov
outs
sbb
scas
mov
ficomp
mov
xchg
pop
or
scas
mov
dec
(bad)
pushf
call
or
and
in
or
repnz
xchg
ror
jmp
push
cmc
jo
xchg
adc
jle
icebp
div
pop
rol
imul
cmp
ret
xchg
and
lods
lods
repz
aad
or
jns
pop
ror
in
(bad)
mov
mov
adc
xchg
popa
pop
leave
enter
fmul
shl
mov
fs
sbb
inc
cmp
jo
aad
arpl
mov
je
stos
jle
out
add
cdq
icebp
jo
sub
daa
add
in
mov
jp
xchg
inc
call
ret
or
pop
outs
out
test
pop
test
push
fcmovne
sbb
ret
xor
je
movs
loop
mov
mov
in
mov
jae
pushf
jno
stc
cmp
or
movs
hlt
and
pop
stos
repnz
mov
sbb
jecxz
out
mov
arpl
or
(bad)
pushf
cli
lds
cwde
popa
mov
rcl
xchg
pop
mov
sub
xor
ret
mov
das
jae
inc
jmp
adc
cmp
mov
(bad)
clc
into
fdiv
xor
mov
xchg
xor
ins
or
and
popf
pop
sub
pop
add
pop
push
aad
xchg
and
int
mov
jg
cmp
mov
ins
adc
push
lahf
jg
loop
jge
cmp
fmul
xchg
jge
xlat
mov
inc
test
mov
aaa
fwait
sbb
mov
mov
movs
or
bound
pop
sbb
mov
(bad)
lock
push
bound
or
add
sub
xchg
in
ins
addr16
fst
nop
in
xor
scas
adc
mov
fwait
int
stos
cmp
test
cmp
mov
nop
inc
inc
mov
pop
retf
mov
repz
cwde
adc
inc
xchg
rcl
jo
lods
pop
imul
mov
mov
or
push
mov
loope
adc
push
aad
xchg
or
bound
and
test
pop
pop
out
push
adc
push
add
lds
fimul
lods
inc
mov
xor
gs
(bad)
sub
xor
loopne
jmp
mov
out
daa
enter
xchg
jo
cwde
hlt
js
pop
mov
cmp
fimul
ror
push
and
lds
mov
fs
xor
mov
mov
scas
and
cdq
adc
mov
test
stos
push
pop
xor
add
scas
fcomp
push
inc
add
lds
cmp
ret
mov
imul
pop
add
add
fwait
and
dec
mov
int
or
imul
add
adc
jb
arpl
mov
dec
mov
js
inc
cmps
mov
inc
fmulp
or
jb
xchg
fadd
fdiv
push
mov
inc
jecxz
jae
pop
dec
mov
aaa
push
xchg
mov
vmread
sub
shr
xchg
stc
mov
aas
inc
(bad)
mov
aam
mov
je
lea
std
jp
pop
or
aaa
and
adc
(bad)
call
popf
mov
pop
cmps
inc
call
fsubr
into
xor
add
sti
sbb
(bad)
xchg
inc
sbb
xchg
jnp
imul
outs
xchg
mov
cmp
pop
sub
push
adc
mov
fstp
mov
sbb
pusha
je
lahf
mov
push
push
dec
pop
les
jg
or
iret
fcom
mov
data16
mov
call
ret
stc
sub
mov
mov
dec
xlat
adc
test
xchg
or
shr
xor
lds
mov
call
jbe
movs
push
xor
mov
jae
movs
jnp
jo
cmp
push
loopne
pop
fnstenv
sbb
jge
mov
stos
jmp
outs
mov
inc
loopne
iret
repnz
mov
jb
imul
movs
and
inc
lock
outs
fcmovne
ret
cmc
cmp
mov
mov
or
mov
xor
sahf
imul
repz
adc
cwde
push
outs
xor
stos
sbb
push
jae
sets
and
jnp
test
into
in
daa
repz
aas
mov
popa
dec
jnp
jp
xchg
repz
adc
and
push
or
push
test
stc
or
addr16
push
movs
jge
test
inc
test
mov
inc
xchg
test
sbb
or
das
jp
lods
mov
xchg
pop
push
stos
fsubrp
cmc
xchg
xor
pop
mov
cmp
dec
xlat
test
cmp
inc
jmp
mov
ins
add
outs
mov
jbe
cld
mov
cmp
cs
mov
wrmsr
cmp
xchg
sub
mov
js
dec
pop
pop
mov
in
stc
push
sub
pop
ins
movs
rcl
push
(bad)
xchg
fwait
cli
mov
sub
(bad)
lock
loop
mov
rcr
adc
or
push
xor
dec
cld
sti
fs
mul
xor
sbb
sub
lods
call
sub
and
add
cmp
popf
ins
inc
movs
mov
mov
mov
inc
clc
aad
sbb
clc
das
cmp
xor
jmp
fsubr
push
and
mov
popf
fdiv
mov
cmp
nop
std
or
push
xchg
int
mul
pusha
jge
out
ins
inc
mov
pop
movs
in
inc
movs
in
es
pop
sub
push
dec
movs
sbb
adc
dec
xor
iret
(bad)
loop
dec
pop
les
ja
xchg
sub
add
imul
mov
inc
xor
pop
cs
sub
inc
lgs
out
push
dec
repnz
iret
stc
faddp
sbb
ss
scas
adc
sbb
lea
mov
arpl
xor
rcl
dec
dec
xchg
sub
and
enter
jl
pop
xchg
movs
push
(bad)
dec
pop
adc
cs
inc
push
cmp
fst
jg
mov
hlt
jb
test
fcomip
shl
push
xor
sub
jnp
xor
mov
fwait
cmp
pop
int
cmp
jl
leave
push
jp
adc
and
sub
dec
push
xor
enter
call
outs
(bad)
sti
sub
lods
push
inc
or
mov
pop
pop
cmp
daa
int3
fwait
cmps
inc
fild
lods
jge
inc
cli
(bad)
cld
fmul
and
push
push
pop
sbb
sub
adc
les
dec
mov
call
rcr
dec
fwait
loope
sub
aam
mov
ficom
cdq
add
mov
xlat
dec
sbb
unpckhps
pop
dec
jne
je
xor
push
xchg
addr16
sub
jbe
mov
adc
cmp
sub
stos
cmovp
sbb
inc
into
retf
and
lods
imul
mov
jg
cdq
jl
and
mov
or
push
aad
fiadd
cmc
dec
stc
cmp
out
add
rcl
popa
(bad)
loopne
xlat
adc
ja
and
pop
push
pop
jb
and
dec
or
push
cmps
pushf
xor
jmp
adc
adc
xor
push
xor
pop
adc
les
dec
xor
fadd
ja
rcr
sbb
sub
cdq
push
test
adc
pop
and
add
jnp
out
out
mov
retf
arpl
inc
xchg
sbb
and
arpl
mov
fucom
rcr
imul
imul
jbe
pop
and
mov
ja
jmp
fbld
sbb
jnp
or
push
rol
xor
test
push
iret
imul
xchg
bound
les
sub
jl
addr16
jg
dec
xchg
xor
in
mov
call
inc
icebp
mov
pop
push
xor
ror
pusha
xchg
jg
push
xchg
or
popf
pop
rol
out
jo
fwait
repnz
mov
fwait
loopne
push
std
mov
sbb
mov
retf
enter
scas
mov
inc
daa
out
cmp
es
mov
stc
push
sbb
xchg
add
push
mov
div
dec
jb
cmp
fidiv
sub
mov
repnz
arpl
pop
pop
(bad)
cmp
lock
std
ficom
pop
jne
and
inc
or
push
mov
pop
mov
sti
dec
cli
pop
xor
popf
imul
push
dec
mov
xchg
pop
stos
in
repnz
or
mov
out
pop
pop
inc
test
enter
push
push
addr16
(bad)
push
cmp
pusha
jg
into
hlt
push
push
inc
mov
mov
inc
adc
mov
jp
mov
sahf
enter
mov
shl
imul
call
gs
daa
scas
push
dec
loopne
cwde
push
pop
das
xor
mov
add
pop
xchg
clc
cmc
aam
in
mov
aad
(bad)
imul
and
ins
dec
outs
lock
inc
fwait
pop
xor
add
sahf
js
xlat
lahf
repnz
pusha
jb
sar
xor
mov
jge
pushf
retf
dec
inc
popf
into
scas
xor
enter
in
das
lahf
sub
fcmovnbe
fmul
sbb
adc
cmc
fistp
in
test
push
test
cmp
mov
mov
pop
(bad)
xchg
imul
mov
das
and
and
mov
adc
dec
fnstsw
fsubrp
mov
adc
sub
add
mov
movs
mov
shr
pop
jb
mov
xchg
dec
xchg
push
pop
xor
or
cmp
cmp
test
add
dec
mov
in
dec
lahf
cmp
xchg
push
das
les
rcr
push
cmp
leave
push
ror
stc
fwait
mov
pop
or
loope
mov
push
repz
neg
loop
and
sbb
or
xlat
sub
push
mov
out
es
test
pop
mov
ror
(bad)
pop
call
add
pop
rol
je
sub
or
fwait
mov
lock
aam
xlat
adc
ins
into
fidiv
scas
mov
sti
pop
mov
out
pusha
and
test
inc
movs
mov
sub
imul
daa
std
adc
mov
sbb
repz
sub
std
loope
xor
cmp
adc
push
sub
add
mov
sub
jo
pop
and
mov
jp
cmp
dec
cmp
inc
aaa
std
add
test
xchg
mov
sbb
js
pop
sbb
jmp
pop
call
dec
add
cmp
adc
test
call
mov
push
ror
addr16
jne
mov
pop
add
in
fcmovnu
and
and
fwait
mov
mov
xlat
ins
outs
cmp
xlat
aaa
mov
loopne
or
popf
dec
sub
sub
ja
dec
adc
mov
cmp
push
popa
stos
mov
imul
rcr
outs
inc
andps
mov
(bad)
in
test
(bad)
jge
cmp
aad
cmp
xor
adc
pop
dec
sbb
mov
jle
popf
jmp
ret
rol
xchg
fst
neg
js
inc
cmp
mov
iret
jl
mov
mov
add
add
push
pushf
ins
int
sub
mov
sahf
cmps
add
cmp
pop
mov
adc
adc
in
sahf
and
and
pop
cmps
paddb
adc
lock
sti
les
push
or
cmc
test
fcomp
mov
and
scas
sub
mov
sbb
in
aad
pop
or
out
push
cmp
outs
out
loop
(bad)
sub
out
bound
test
pop
mov
pop
sub
adc
fisttp
cmp
xchg
pop
jg
xor
mov
xor
mov
popa
inc
cmps
clc
mov
int3
sub
push
jb
mov
push
jle
sub
mov
das
sbb
add
jmp
adc
test
and
push
jno
inc
fldcw
cld
mov
jns
push
test
jne
dec
and
jo
je
js
test
idiv
popa
jmp
aad
fbstp
dec
sub
adc
cs
xchg
mov
dec
ret
lods
into
je
std
ds
push
pop
dec
fistp
rcr
jae
lahf
mov
frstor
stc
retf
pop
adc
arpl
or
pop
cmp
lock
lock
popa
stos
imul
in
scas
retf
sbb
stos
dec
push
fst
in
icebp
fist
lock
push
inc
pop
jo
dec
jb
mov
xor
icebp
sub
xlat
ss
shl
lahf
xor
fwait
mov
fs
sub
ret
(bad)
and
adc
sahf
jnp
outs
xor
arpl
mov
xchg
and
inc
adc
(bad)
rcl
out
dec
pop
ja
in
or
sub
das
ja
jns
ds
jmp
or
inc
mov
in
mov
adc
push
(bad)
stos
hlt
call
pop
xchg
xor
kmovb
test
mov
lods
add
iret
shr
pop
das
and
popf
cmp
mov
adc
sbb
idiv
cmp
dec
fdivr
pop
mov
sbb
dec
sahf
adc
test
or
jne
inc
mov
and
mov
(bad)
pop
cmp
hlt
or
jno
mov
(bad)
xor
addr16
fnstcw
nop
inc
pusha
clc
cmc
add
test
nop
adc
mov
push
or
xchg
stc
jmp
add
sahf
popa
push
nop
mov
add
jecxz
out
pop
mov
or
xlat
xchg
push
jg
jge
mov
lds
inc
cld
dec
(bad)
mov
out
add
inc
jae
and
idiv
scas
jp
inc
in
dec
pop
jbe
sbb
out
dec
fld
mov
mov
repnz
test
imul
les
ins
pop
jno
and
mov
test
ins
sbb
test
pop
loop
fs
xchg
add
clc
in
pushf
into
std
cmc
mov
cmp
xor
mov
std
(bad)
mov
sub
out
cmp
aad
xchg
ja
fnstenv
rol
sub
test
jp
js
jbe
xor
(bad)
(bad)
jmp
ret
js
(bad)
cmp
pusha
or
sub
aaa
cld
dec
in
jae
dec
jle
pop
movs
pop
mov
dec
xchg
mov
in
sub
popf
cdq
call
int3
dec
xchg
sub
sbb
in
sbb
shr
aaa
push
fbstp
fmul
imul
cwde
sar
push
retf
jl
add
cs
stos
pop
inc
sub
outs
loope
imul
jns
adc
sahf
cs
js
add
and
mov
push
gs
mov
push
test
xor
cmp
jmp
out
out
iret
mov
jle
in
cdq
xchg
mov
or
add
popf
into
fdivp
call
test
inc
div
stos
pop
sbb
call
sar
sbb
imul
das
movs
ins
out
imul
imul
ins
or
add
cmp
fistp
je
repz
nop
mov
add
hlt
jmp
mov
in
jg
xor
adc
enter
fist
fcomp
inc
push
stos
mov
cmps
add
jmp
retf
popa
push
movs
sbb
pop
dec
leave
add
les
shl
jno
std
or
push
daa
dec
jmp
jmp
xchg
mov
sbb
or
lods
ja
fmulp
push
lahf
pop
or
into
dec
mov
and
jae
das
and
das
xchg
aaa
sbb
cmps
movs
fld
js
cmp
int
jecxz
mov
and
xchg
lea
cmc
push
jo
push
test
pop
and
bound
add
call
mov
push
(bad)
jecxz
scas
out
xchg
ret
cmp
js
pop
mov
not
adc
sar
dec
or
xchg
add
xor
(bad)
in
mov
mov
and
(bad)
dec
mov
push
ins
shl
outs
arpl
push
cwde
gs
repnz
push
bound
inc
jo
pop
pop
outs
cld
sub
inc
or
sub
mov
cwde
(bad)
mov
lods
shr
jp
stc
test
add
cmc
mov
push
jo
stc
pop
in
mov
test
push
adc
lea
jecxz
iret
enter
daa
pop
popa
pop
adc
push
rcr
scas
es
mov
and
or
jnp
test
jne
inc
mov
lea
cmp
sti
mov
outs
pop
mov
pop
data16
fst
dec
cmpxchg
inc
in
or
sub
mov
mov
sbb
inc
pop
nop
dec
dec
out
test
sub
in
loop
jae
push
xor
mov
mov
xchg
cmp
mov
das
loopne
or
inc
pusha
mov
xchg
adc
xchg
loopne
dec
add
lods
cmp
fadd
repz
xchg
inc
mov
pop
movs
sbb
push
or
aad
push
std
jl
in
dec
lahf
jbe
dec
(bad)
xor
and
aam
pop
jl
call
inc
cmp
test
inc
xor
and
mov
add
jns
lahf
add
lahf
aaa
jge
popa
mov
les
mov
gs
xchg
retf
mov
pop
(bad)
and
das
add
push
dec
test
or
push
shl
inc
sbb
popf
cmp
dec
xlat
or
sub
in
pop
mov
jge
xor
adc
push
push
shl
ror
pushf
pop
xchg
loop
hlt
and
jno
outs
jb
xor
mov
cmp
stc
adc
xchg
jo
push
cmp
jne
push
js
mov
retf
inc
xor
mov
push
hlt
(bad)
lods
hlt
xchg
mov
pop
scas
gs
dec
sti
mov
cmp
add
ss
mov
xchg
cli
or
add
sti
mov
cld
shl
ja
clc
pusha
icebp
xchg
(bad)
outs
push
push
pop
xlat
adc
idiv
and
idiv
rol
or
jne
and
pop
mov
aad
mov
repz
xor
out
cmp
push
(bad)
cmc
xor
movs
mov
push
cmc
js
push
push
and
out
sbb
pop
fs
inc
inc
adc
sub
sbb
lods
jl
jno
push
inc
int
lods
ret
xchg
jge
sub
in
pop
mov
lock
cs
rcl
movs
jne
pop
lods
ror
pop
out
xchg
cs
fisubr
dec
mov
rol
data16
int3
or
bound
and
pusha
daa
repnz
pop
sbb
jmp
outs
mov
out
mov
pushf
aam
inc
xchg
ss
popa
push
inc
inc
dec
xchg
jo
sub
loop
jo
ins
mov
inc
xchg
push
add
sub
cmp
jne
mov
pusha
jle
cmps
or
(bad)
js
fcmovne
repz
or
add
adc
in
dec
je
jbe
xor
test
add
jae
mov
push
mov
xor
mov
sbb
hlt
xor
mov
jmp
adc
aaa
xor
repz
mov
js
dec
mov
sbb
js
(bad)
and
dec
hlt
cmp
sub
add
in
aam
ins
jne
call
mov
and
xchg
call
sub
loope
sbb
jo
adc
jg
sti
push
and
frstor
repnz
mov
dec
test
fs
mov
mov
pop
jg
or
jmp
jb
movs
xor
xor
push
enter
fcom
mov
adc
mov
out
push
push
add
ss
xchg
sti
xchg
inc
cmp
fmul
int3
mov
xchg
cmp
in
jmp
xchg
and
aas
and
scas
jnp
sbb
cmc
pusha
sbb
pop
jecxz
or
mov
fstp
jmp
movs
sahf
jno
cmc
dec
mov
push
lock
push
inc
and
cwde
cmp
dec
mov
push
adc
mov
inc
sub
fldcw
mov
sbb
mov
jb
and
pop
mov
jge
fild
push
push
push
sub
xor
cmp
dec
push
cmp
cmp
pop
push
hlt
mov
pop
aam
call
mov
and
xchg
cwde
addr16
je
test
outs
popf
aaa
push
jbe
outs
lods
pushf
fnsave
inc
cmp
and
out
mov
jbe
dec
fstp
and
ja
es
dec
jl
adc
neg
movs
push
popa
push
push
repz
jle
mov
sub
imul
push
popf
(bad)
out
push
(bad)
in
xchg
mov
enter
movd
idiv
cmc
inc
mov
(bad)
das
shr
mov
sti
ficomp
xchg
xchg
les
lds
push
dec
idiv
sub
test
fwait
adc
cli
dec
mov
cli
add
xchg
sub
or
pop
nop
test
or
pop
jle
or
add
mov
xor
dec
lods
jp
aas
loope
inc
mov
retf
addr16
mov
jb
pop
cmps
pop
jg
or
sbb
and
icebp
int3
sbb
or
sub
push
repz
cs
cli
mov
push
stos
loop
or
mov
jo
xor
ficom
scas
xor
jge
movs
call
call
xchg
jge
fimul
cpuid
cmc
data16
dec
sub
adc
xchg
fchs
mov
fstp
sar
fcompp
fild
ror
mov
sub
jno
jle
mov
retf
in
jno
arpl
(bad)
mov
jbe
jnp
loopne
div
sbb
inc
adc
pop
xchg
sbb
and
and
imul
data16
cmc
fiadd
push
pop
dec
xlat
jnp
imul
push
push
repz
(bad)
push
idiv
pop
push
sbb
cdq
lock
sahf
bound
sar
xor
push
in
js
into
mov
imul
adc
test
retf
(bad)
aas
jno
adc
add
imul
in
in
cmp
xchg
fistp
int
pop
sbb
push
mov
scas
jb
dec
je
inc
es
leave
dec
jnp
arpl
out
pop
fnstcw
fcmovb
in
pop
mov
and
or
pop
inc
mov
aas
in
lods
popf
add
inc
xor
je
or
cmp
(bad)
jne
fidivr
pop
sub
and
fadd
mov
fild
cs
out
jo
mov
stos
rcl
sbb
aad
inc
jb
dec
lods
pop
sub
add
mov
push
mov
xor
xor
repnz
ins
inc
xor
xor
mov
stos
ficom
mov
cmp
sbb
cmp
scas
pop
retf
adc
dec
fcmovnu
lods
in
mov
push
pop
jle
sbb
jno
push
and
in
jecxz
cmps
xor
xchg
dec
addr16
adc
jne
(bad)
sub
test
js
jp
cld
jnp
stos
ds
out
or
xchg
pop
sub
addr16
sbb
fwait
push
ins
retf
js
dec
test
mov
mov
inc
cld
es
dec
dec
stos
mov
shr
cmp
dec
cmp
jne
push
mov
sub
fdivr
hlt
cwde
fdiv
aam
mov
add
mov
fisubr
les
cs
or
scas
and
test
popf
adc
pop
xlat
push
mov
jecxz
mov
pop
push
dec
sbb
mov
sub
sahf
add
mov
or
sub
leave
loop
push
aas
inc
aad
retf
loope
and
dec
repnz
xor
cmps
dec
jp
ror
mov
dec
inc
mul
adc
ds
(bad)
fucomp
fldcw
mov
jnp
stos
dec
neg
mov
scas
add
das
pop
jno
or
dec
mov
pop
add
loope
push
mov
jo
dec
xor
pop
sahf
retf
aas
fsubr
clc
push
jmp
fisttp
dec
mov
pusha
test
xchg
or
js
dec
mov
retf
ret
fiadd
pop
gs
or
shr
and
movs
inc
push
enter
jl
push
gs
jp
lock
xor
cdq
adc
pop
and
push
and
sub
mov
inc
xor
mov
out
rcr
mov
cli
repz
bswap
jno
iret
lods
lods
xor
leave
js
cmp
jmp
mov
mov
push
cdq
(bad)
out
xchg
(bad)
fst
mov
push
enter
sub
aam
add
lods
xchg
mov
mov
mov
cdq
cdq
mov
mov
retf
cmovle
pop
adc
stc
sbb
inc
mov
and
xor
div
dec
add
push
cli
jg
mov
push
or
mov
mov
cmp
jne
test
out
push
cs
add
aaa
sub
mov
inc
push
push
pop
imul
mov
mov
test
(bad)
sti
mov
cmps
add
pop
jecxz
mov
imul
popf
js
stos
mov
mov
aam
fwait
cmps
call
lahf
mov
push
push
sbb
add
add
loope
ds
rcr
dec
(bad)
out
popf
and
or
xchg
cld
add
data16
push
ror
ds
sub
xchg
mov
cmp
xchg
ret
cdq
xchg
in
inc
push
jp
add
sbb
pushf
sbb
or
es
lods
jge
dec
sbb
leave
and
gs
fist
sub
(bad)
pop
mov
adc
scas
(bad)
out
mov
sub
xlat
daa
fcom
dec
out
ins
fcmove
jb
ret
mov
push
add
jecxz
jo
fsubr
push
add
jo
ja
push
pop
xor
sahf
test
xor
shr
addr16
and
xor
push
movs
ret
sbb
std
call
xchg
push
or
push
cdq
xor
movzx
xchg
mov
mul
int
cld
xor
cmp
sub
cmp
in
adc
scas
dec
pop
jmp
adc
test
jmp
test
sbb
lods
pop
inc
jmp
cs
inc
fstp
cmc
imul
dec
into
ins
addr16
mov
rol
xchg
cmp
rcr
inc
cli
sbb
addr16
add
lods
sar
push
shr
jns
adc
mov
stos
retf
push
cs
jo
cmp
xor
aam
enter
movs
pop
mov
bound
or
xchg
fwait
lea
add
dec
xor
cmp
mov
inc
mov
jne
nop
fsub
ins
xor
lahf
scas
loope
imul
push
movs
push
mov
or
xchg
jnp
sbb
xchg
jb
or
jno
fs
mov
jo
rcr
cwde
add
dec
leave
arpl
stos
cmp
or
out
lds
xor
rol
rcr
xchg
ror
jbe
nop
pop
inc
xchg
xchg
dec
dec
outs
fild
and
mov
bound
jne
sbb
bound
idiv
je
cmps
push
not
cmps
shl
add
xor
cmc
jge
jge
fldcw
mov
movs
mov
(bad)
xchg
jnp
shr
cmp
ins
mov
movs
or
je
and
xchg
aas
popa
cli
iret
jecxz
hlt
fdivr
bnd
scas
and
sbb
std
pop
mov
dec
inc
addr16
sbb
out
shr
adc
jle
outs
in
mov
das
aas
jmp
stc
mov
int
dec
jmp
stos
mov
xchg
call
lods
ror
pop
pop
add
jo
push
jl
fwait
movs
daa
clc
xor
int
xchg
mov
sahf
lods
fcomp
mov
push
call
inc
cmps
mov
sbb
or
adc
add
xor
int
out
test
ja
aad
mov
mov
retf
mov
or
mul
mov
stos
inc
std
sub
js
xor
mov
cmp
lock
jae
dec
mov
ss
loope
jb
lahf
dec
pop
je
gs
je
adc
fs
mov
cmp
push
add
stos
imul
fsub
adc
and
shl
ficomp
sub
push
xchg
into
clc
jbe
mov
leave
fimul
lahf
push
inc
mov
cmc
mov
(bad)
(bad)
stos
dec
add
add
adc
rcr
cmp
xchg
jo
xor
mov
retf
cmps
lods
shl
xor
arpl
ret
popa
push
jno
ror
add
jne
cdq
loop
in
call
xor
jmp
adc
pop
std
mov
jne
add
fmulp
inc
hlt
cmc
rol
xchg
dec
clc
in
nop
adc
and
mov
inc
or
cmp
xor
mov
push
in
mov
out
sar
dec
fs
push
retf
(bad)
mov
pop
ss
sub
mov
(bad)
in
add
mov
jbe
and
repnz
not
mov
out
adc
es
call
push
(bad)
dec
mov
cli
pushf
mov
clc
or
(bad)
call
pushf
cld
push
inc
push
call
cs
xchg
xor
xchg
ret
and
pop
adc
daa
imul
mov
pusha
xlat
push
mov
lods
or
sub
adc
adc
orps
dec
xor
xchg
mov
add
pop
xchg
rcr
xchg
in
xor
xchg
push
mov
mov
and
je
dec
sbb
add
push
nop
into
mov
in
pop
popf
pusha
push
adc
mov
and
adc
mov
scas
pmaddwd
clc
ja
in
sti
ret
push
fstp
sub
dec
sbb
cmp
lock
dec
or
push
aaa
mov
ret
fcom
cmps
mov
enter
cmps
inc
outs
jg
adc
lock
xchg
pop
ficomp
pushf
dec
jg
and
ins
push
mov
shl
repz
push
mov
dec
jmp
fmul
adc
stos
clc
xchg
cmp
fstp
xchg
jnp
pop
dec
aad
pop
dec
ficomp
rep
add
jo
mov
xor
and
xchg
call
cmps
jmp
pusha
xor
push
mov
mov
cmp
add
test
jae
fwait
aam
loop
adc
imul
int3
jne
dec
pop
cs
dec
mov
loopne
cld
xchg
mov
fist
mov
inc
xchg
fidivr
push
fcomp
dec
xchg
mov
cs
pop
inc
dec
pusha
repz
push
push
xchg
sbb
xchg
cmp
stos
jb
adc
mov
icebp
xchg
adc
hlt
dec
test
sub
mov
mov
out
jp
(bad)
xchg
cmp
sbb
sub
and
in
inc
mov
sub
dec
dec
fnsave
jno
call
jmp
adc
fldcw
sbb
dec
cmps
adc
and
mov
dec
xchg
add
call
mov
mov
and
mov
ins
call
jbe
inc
out
outs
push
push
xor
aas
in
xlat
jp
push
data16
inc
sub
push
pop
lock
arpl
push
lock
ds
jecxz
adc
push
cmp
dec
cmps
int3
cld
dec
mov
cmp
sti
xchg
and
xchg
xchg
add
stos
pop
sar
fisttp
inc
imul
outs
mov
inc
jnp
sub
xchg
add
das
std
outs
jp
pop
ds
mov
cmp
lock
xor
add
add
push
or
push
ss
mov
xchg
or
mov
or
inc
push
rol
outs
(bad)
push
or
mov
les
jne
or
loopne
jmp
clc
sub
jg
mov
das
xor
add
jge
mov
and
imul
stos
mov
fadd
sbb
sub
mov
jae
(bad)
mov
or
pop
push
lods
movs
xchg
xchg
sbb
pop
xchg
mov
xchg
jbe
push
cmc
arpl
pop
and
in
pop
sti
mov
mov
adc
je
xchg
cdq
add
push
xchg
push
data16
cmp
add
sti
js
popf
inc
retf
inc
or
xor
mov
dec
jecxz
or
shl
rol
in
mov
test
jbe
outs
dec
or
(bad)
out
jge
push
jnp
push
pop
popa
loopne
xor
adc
add
mov
rol
cmp
cs
fnstcw
sub
jnp
cmps
push
movs
aad
mov
fidiv
dec
repnz
int3
mov
mov
inc
or
adc
fwait
and
dec
inc
mov
ins
std
cwde
es
stos
add
movs
push
inc
and
retf
(bad)
dec
mov
jbe
int
ds
(bad)
add
frstor
mov
cmps
es
cs
xor
jmp
aam
pop
pop
and
mov
xor
std
pop
test
mov
cmp
mov
das
stos
outs
das
sbb
push
push
or
retf
mov
jmp
mov
dec
mov
lds
mov
jg
loopne
retf
fnstsw
gs
pop
pop
xor
pop
push
mov
fmul
test
movs
mov
push
sbb
dec
dec
inc
retf
sbb
push
in
jno
lods
sub
mov
push
psubw
std
aaa
bound
mov
movs
or
jbe
mov
xchg
xchg
add
call
repz
aam
push
pusha
pop
addr16
scas
sub
leave
add
fst
push
icebp
dec
cmps
or
out
inc
retf
or
add
pop
xor
rcl
pop
ja
mov
jb
xor
sar
push
retf
push
or
sbb
inc
scas
xchg
les
fdivr
pop
jbe
loopne
cs
and
test
or
mov
adc
sub
pusha
test
or
test
mov
inc
adc
push
and
mul
inc
daa
ror
push
add
dec
and
xchg
ds
dec
mov
aaa
pop
and
jbe
or
imul
rcl
jp
hlt
push
mov
sbb
push
dec
int3
add
cmp
adc
push
push
inc
cdq
inc
mov
mov
jb
rol
pop
push
arpl
sub
mov
inc
jle
and
jmp
cs
jmp
add
or
cmp
retf
inc
cmp
inc
jb
and
add
push
pop
push
inc
fist
adc
dec
out
xchg
fnstcw
cwde
inc
lods
stos
xor
fidivr
jne
xchg
imul
test
mul
(bad)
f2xm1
sub
mov
(bad)
sbb
mov
bound
jns
sbb
retf
cmp
mov
or
xor
(bad)
and
fsubr
cmp
(bad)
mov
je
fnstenv
xor
push
rol
test
xor
in
aaa
call
(bad)
cmp
in
dec
cmps
fdiv
push
sub
fcom
mov
or
neg
or
add
aaa
hlt
retf
push
sti
data16
or
cmp
iret
mov
std
adc
push
xchg
fdivp
popa
fimul
out
lods
ror
adc
mov
mov
xchg
data16
ja
sub
push
add
ss
push
xchg
adc
xchg
leave
xor
jge
fsubr
jmp
les
push
out
adc
in
dec
test
sub
and
imul
sbb
sub
lahf
pop
loopne
push
cmp
shl
xor
shl
test
mov
sbb
mov
into
das
fwait
jbe
and
xor
inc
cmps
aas
or
cmp
mov
inc
retf
xchg
cmp
xchg
sub
sti
rcl
pop
mov
sub
(bad)
fisttp
lds
rol
dec
js
mov
inc
in
xor
clc
pop
mov
repnz
adc
jb
inc
pop
outs
xlat
mov
aaa
pop
add
div
loope
add
cli
jp
imul
retf
pop
xor
dec
jp
xchg
comiss
mov
xchg
mov
(bad)
sar
(bad)
cmps
jle
jmp
mov
(bad)
out
inc
aad
int
push
dec
leave
xor
adc
loopne
cmps
add
sbb
repnz
mov
push
pop
stos
je
adc
es
jge
sub
mov
jns
inc
repnz
cmp
push
sbb
loopne
mov
fcom
or
or
and
xor
pop
sub
sub
mov
mov
push
cmp
add
retf
mov
dec
iret
movs
dec
sbb
mul
ins
adc
test
imul
cmp
test
sub
xchg
adc
lock
or
aaa
adc
or
adc
sbb
mov
test
lods
xchg
fwait
in
sub
and
mov
fsub
push
jmp
sbb
stos
sub
xchg
cmp
pop
adc
xchg
gs
push
clc
xchg
dec
das
adc
dec
jb
mov
into
call
push
pusha
stos
mov
mov
sbb
outs
jmp
mov
jbe
cdq
aaa
xor
xchg
lods
push
hlt
test
adc
xchg
inc
mov
ffreep
das
call
pop
jo
jp
cs
or
add
int3
xor
inc
jno
push
pop
xchg
cmp
adc
add
ja
add
leave
repnz
cmp
sbb
lods
cmp
movs
lods
mov
xchg
lods
imul
ret
movs
jge
repz
push
cmp
rcr
adc
pop
cs
adc
mov
sub
mov
adc
adc
jbe
mov
xlat
movs
outs
clc
adc
cli
push
fs
xor
or
movs
jle
mov
loope
add
hlt
inc
dec
adc
jae
inc
ror
iret
scas
lock
out
sti
cs
or
shl
cs
repnz
mov
add
in
pop
fwait
(bad)
(bad)
fidivr
aaa
aaa
xchg
clc
add
retf
or
push
sbb
add
loopne
sahf
push
js
inc
je
xchg
aad
xchg
std
aam
sbb
ret
mov
popf
xchg
jne
xor
fs
or
ror
jmp
jo
jge
imul
int
mov
in
pushf
mov
fs
cdq
aas
aaa
dec
jp
cdq
gs
popa
jnp
dec
enter
lods
(bad)
push
icebp
jns
add
xchg
xlat
cs
pop
mov
in
ss
or
into
sub
stos
stos
xor
mov
in
iret
xchg
sub
inc
shl
int
mov
mov
sbb
dec
mov
loop
adc
cmp
stc
rep
add
test
pop
dec
loop
push
inc
stc
out
mov
test
inc
ds
mov
add
shl
mov
sbb
test
test
(bad)
in
xchg
mov
mov
mov
lds
cwde
pop
into
repz
repz
ja
(bad)
stos
and
in
je
add
stos
add
ja
mov
sub
rcr
add
aam
adc
std
adc
lahf
adc
es
aas
nop
xchg
movs
push
add
and
dec
push
mov
lods
fidivr
shr
sti
les
mov
popa
inc
push
stc
out
add
mov
cmp
xor
ja
cld
push
pop
adc
inc
jge
or
scas
outs
js
xchg
out
je
ds
loope
stos
sbb
and
cli
shr
lock
mov
mov
stos
sbb
jmp
inc
push
clc
fidivr
mov
fcmovb
pop
stc
lods
loop
adc
test
cmps
or
outs
jbe
dec
jl
mov
cmc
inc
pop
inc
std
mov
mov
mov
imul
ret
loope
aas
popa
or
cli
cmp
fistp
ss
adc
inc
ins
outs
xchg
jmp
loope
repz
ret
loope
jbe
cwde
xchg
jb
in
cwde
xchg
cmps
push
xor
retf
push
(bad)
hlt
inc
rcl
adc
inc
sub
movs
pop
pop
jge
xlat
shl
mov
push
ins
fst
test
repnz
lods
mov
fsub
adc
fucom
dec
pushf
aas
div
cmp
or
jmp
arpl
push
jg
sub
pop
adc
push
stos
(bad)
inc
xor
cmps
jae
ret
push
aas
dec
stc
mov
pushf
cmp
js
out
pop
push
(bad)
stos
mov
cld
aam
inc
xchg
popa
pop
mov
ins
xchg
pusha
repz
iret
dec
xchg
stos
rcl
and
repz
test
leave
int
xchg
int
sub
mov
es
jmp
lods
ror
movs
mov
(bad)
ss
push
mov
mov
xchg
or
inc
test
jecxz
add
call
sub
ja
ror
or
xchg
jbe
(bad)
jecxz
mov
pop
or
test
rcl
loop
jmp
sub
sbb
xor
mov
loopne
mov
push
fwait
jns
and
mov
call
adc
mov
jne
sahf
xlat
mov
cs
inc
push
pop
dec
ret
dec
or
pop
ror
sub
fs
aam
cld
pop
enter
or
add
test
loop
mov
jecxz
lods
(bad)
aas
sbb
cli
sahf
cdq
(bad)
hlt
(bad)
xor
sub
outs
ret
jno
in
push
mov
mov
ss
mov
retf
or
imul
xor
xor
push
or
fisttp
arpl
dec
aad
je
rcl
or
jmp
or
add
test
ror
loope
mov
dec
mov
daa
pop
xlat
jge
ja
(bad)
push
mov
lea
mov
call
and
add
ficom
push
fild
xor
or
in
cmps
mov
neg
inc
in
sub
out
or
adc
arpl
popa
adc
pop
call
push
add
daa
jb
scas
cmp
jb
adc
mov
ja
jo
adc
push
push
dec
add
stos
leave
or
stos
(bad)
jae
clc
cwde
arpl
mov
imul
pop
aas
aad
xor
cmp
shl
out
jae
jecxz
out
repz
adc
shr
jbe
lahf
test
inc
movs
aaa
sub
inc
bnd
adc
jnp
push
xor
cmp
cmps
cmp
jbe
jmp
add
mov
outs
enter
push
arpl
push
xor
imul
mov
int3
lock
jecxz
or
stos
in
and
pop
jp
cmp
sbb
pop
xchg
jnp
in
jmp
fs
js
cmc
xchg
fisubr
out
inc
jg
movs
pop
cmc
sbb
xchg
xchg
out
inc
sbb
stos
xchg
mov
aaa
jbe
mov
push
inc
mov
test
or
push
aam
mov
ret
out
mov
cld
test
adc
mul
sar
jg
je
aas
sbb
xchg
jbe
out
add
mov
cmp
sahf
fs
mov
add
sbb
dec
mov
push
aam
ret
cmp
mov
icebp
sbb
pop
jmp
lahf
fdivr
push
inc
icebp
lods
daa
and
xchg
hlt
ins
cmp
outs
(bad)
cld
xor
cdq
push
fidivr
(bad)
push
ficom
ret
int
dec
xor
or
int3
or
retf
int
mov
jge
pop
inc
xor
fild
inc
add
cmp
sbb
adc
cwde
sub
test
sar
mov
dec
loop
sub
sub
test
xor
xchg
stc
jne
inc
sub
(bad)
jl
scas
(bad)
movs
cmp
pop
adc
push
cmps
cmps
scas
je
imul
cmp
in
and
dec
and
rcr
jmp
(bad)
mov
xor
pop
dec
xor
sub
or
jg
xor
add
push
call
ret
imul
push
or
repnz
(bad)
neg
jno
push
mov
push
cdq
je
xchg
lods
xor
pop
add
(bad)
int
mov
sbb
into
sahf
ja
dec
adc
sahf
popf
mov
std
cmp
movs
lea
aaa
push
int3
mov
jmp
inc
adc
fst
sahf
pop
push
ret
inc
dec
hlt
(bad)
pop
mov
out
sbb
aam
mov
xchg
or
out
jno
inc
jmp
sahf
pop
mov
aaa
sar
cdq
cmc
mov
ja
lods
push
cmp
jns
lahf
popa
mov
xchg
outs
inc
jne
xchg
ins
mov
sbb
push
xor
dec
cmp
or
inc
loop
inc
stc
sbb
xchg
add
push
xchg
loop
jmp
and
in
(bad)
(bad)
dec
into
sbb
mov
mov
repnz
mov
(bad)
mov
fst
mov
push
dec
jnp
into
lahf
test
jns
pop
aaa
cmp
std
xchg
sub
fcmovbe
sub
aaa
sub
iret
mov
lock
inc
jbe
shr
fs
(bad)
js
xlat
int
cmp
dec
mov
xchg
test
test
dec
pop
in
add
das
ins
retf
out
sub
cmp
xor
xchg
scas
dec
iret
jbe
sub
popa
icebp
iret
push
sbb
adc
xchg
cmps
(bad)
jge
mov
pop
loop
(bad)
cli
inc
retf
adc
test
mov
outs
mov
sar
xchg
imul
lahf
cmps
mov
and
test
inc
push
jbe
xor
push
in
push
hlt
cwde
jl
mov
mov
icebp
cmps
mov
imul
ins
xchg
stos
test
or
dec
mov
int3
pusha
xchg
and
and
dec
xchg
lods
fistp
shl
sub
out
or
mov
stos
mov
mov
mov
call
jle
xchg
or
dec
jnp
lea
cli
in
movs
sbb
dec
adc
mov
leave
lea
sub
sub
pop
adc
push
icebp
mov
push
aas
sti
jae
pop
test
or
sub
pop
push
sub
repz
in
pop
retf
mov
call
cwde
cmps
and
sar
inc
adc
int
push
fisub
jecxz
inc
or
inc
mov
out
dec
cli
xor
dec
xchg
cmps
xlat
aam
gs
xor
adc
aad
aad
mov
jnp
pop
jbe
sbb
(bad)
mov
sbb
cld
les
mov
repnz
jno
ss
lods
cmp
adc
lods
inc
add
mov
fld
xor
pop
cmc
cmps
enter
daa
test
sub
cmp
jle
(bad)
dec
add
cdq
inc
and
sub
cmc
nop
mov
add
repz
lods
ds
push
cmc
sar
xor
adc
inc
xchg
adc
cmp
pusha
adc
sub
push
int
out
mov
dec
out
xor
rcl
jg
daa
add
sub
ficomp
bound
mov
mov
repz
(bad)
or
sahf
or
dec
repz
scas
(bad)
adc
out
gs
call
test
mov
mov
cmc
retf
(bad)
out
dec
jmp
dec
cs
and
loope
and
js
lods
call
je
cs
addr16
or
jl
dec
lods
inc
add
or
mov
fs
stos
cs
fmul
cwde
push
jo
cmps
cmp
pop
jmp
(bad)
cld
mov
adc
enter
inc
cmp
in
or
sub
fs
hlt
jmp
sar
mov
xor
or
jbe
mov
ins
sbb
xchg
loope
ficom
outs
and
sbb
sub
(bad)
pop
add
xchg
push
or
mov
lods
je
dec
pop
outs
ins
or
(bad)
xchg
out
push
or
xor
dec
lds
cmc
jp
and
mov
jg
mov
das
lods
sub
jmp
push
lods
lds
mov
(bad)
adc
(bad)
and
aam
ins
outs
jp
ds
adc
daa
or
popa
push
mov
adc
and
inc
push
lahf
and
stc
stos
(bad)
fs
inc
jae
dec
call
push
pop
popf
retf
jno
jae
or
(bad)
xchg
popf
fsubr
bnd
inc
adc
ret
adc
add
mov
cmp
or
lods
mov
jmp
push
inc
dec
ret
inc
dec
push
int
xor
mov
xchg
pushaw
mov
push
mov
mov
cmp
pop
push
mov
scas
nop
test
not
add
or
mov
sub
aam
xlat
mov
jp
sub
mov
dec
out
pop
div
js
scas
cmp
mov
ins
sub
imul
cwde
aam
dec
mov
stos
dec
xor
mov
push
push
repz
cmp
adc
xchg
xor
popf
and
fcmove
outs
cli
inc
xchg
pop
fisttp
mov
sub
mov
sbb
sbb
sbb
stos
int3
sbb
cmp
in
adc
out
rol
repz
or
loope
int3
(bad)
mov
push
sar
rep
rol
aam
or
add
aam
movs
leave
test
in
lods
mov
jae
cwde
or
mov
call
loop
or
push
scas
mov
mov
or
adc
push
dec
mov
pop
pop
sbb
test
cmp
mov
mov
and
(bad)
movs
das
bound
fild
xchg
lods
push
je
jo
test
fbstp
mov
mov
lahf
sub
ss
cmps
jmp
mov
repz
dec
cmp
adc
sub
dec
jo
mov
in
or
or
inc
mov
pop
mov
in
cmp
fadd
mov
cmc
jns
cli
popa
cmp
mov
addr16
adc
adc
dec
add
retf
adc
in
push
cmp
pop
mov
bound
fs
xor
mov
and
cmp
popa
shl
ret
push
cs
pop
div
shl
adc
jns
jge
sbb
xor
movs
dec
aam
cmp
adc
xchg
or
popf
xchg
lds
stc
int
mul
addr16
fidiv
jmp
shl
cs
ret
sti
fcom
mov
movzx
icebp
or
push
cdq
adc
sub
xchg
mov
mov
jo
sbb
rcl
inc
leave
retf
mov
fld
pop
push
fild
std
stos
jo
iret
or
mov
cwde
ret
fnstenv
movs
sti
lods
pop
enter
ss
sbb
pop
jo
mov
mov
mov
xor
sub
call
and
dec
mov
or
xor
mov
push
arpl
scas
fst
fbld
outs
cwde
test
sbb
(bad)
sbb
daa
lea
add
cmps
inc
cmp
push
ss
jno
or
fmul
xor
iret
or
mov
xchg
pushf
inc
and
arpl
les
es
xor
pop
or
(bad)
mov
pop
bound
inc
sub
or
test
nop
push
pop
icebp
mov
fcom
enter
cmp
add
nop
call
test
test
adc
loop
mov
jno
add
dec
sbb
adc
mov
fiadd
fiadd
inc
cld
mov
out
ds
and
push
mov
and
dec
mov
pop
pusha
rol
fs
pop
js
jle
fst
std
dec
ret
(bad)
and
stos
xchg
adc
jp
sub
jmp
jne
mov
cmc
les
in
loopne
pop
outs
mov
jae
movs
out
jnp
ins
test
mov
lea
aas
push
rcl
sub
pop
arpl
cmc
push
ins
cmp
push
js
in
and
xchg
adc
push
cli
hlt
mov
loopne
mov
fstp
mov
mov
push
dec
cmp
retf
pop
and
mov
cmp
or
ins
shr
leave
ins
cmps
push
loopne
jg
inc
rcl
ins
jno
xchg
push
je
push
icebp
in
aaa
nop
xchg
xchg
cmp
inc
scas
push
(bad)
adc
ret
std
cmp
push
or
push
add
or
rcr
mov
cdq
in
das
xchg
in
and
adc
int3
stc
and
divps
mov
fisttp
(bad)
adc
popf
dec
pop
sub
push
test
push
stos
mov
sbb
push
lea
cmc
lea
push
sti
lock
xchg
retf
adc
test
and
sar
xchg
int
inc
bound
ins
sbb
mov
jb
and
mov
push
popf
mov
ins
dec
mov
es
dec
loope
xchg
mov
mov
mov
push
inc
clc
push
and
pop
cs
fdivp
aam
rol
xor
bnd
or
popf
ror
push
inc
mov
ds
inc
ja
sub
retf
sbb
fsub
push
es
out
jmp
xchg
movs
jp
test
mov
hlt
jp
cmps
mov
test
or
inc
xchg
repz
fwait
and
iret
outs
cmp
jbe
cmp
xor
cmp
xchg
dec
movs
sbb
hlt
mov
sahf
fdiv
leave
push
rcl
adc
jle
mov
or
test
fwait
aas
adc
(bad)
aam
lods
test
(bad)
outs
jecxz
add
mov
xchg
jnp
mov
cmp
mov
rcr
mov
mov
mov
sahf
ret
sbb
mov
movs
stos
mov
or
xabort
ins
call
test
push
lods
loop
inc
icebp
and
mov
xor
push
mov
add
mov
aad
mov
sub
mov
jmp
imul
xchg
dec
cdq
mov
push
scas
adc
ins
or
dec
xchg
in
mov
imul
mov
aad
stos
out
lods
adc
or
mov
movs
int3
out
or
outs
sbb
pop
iret
adc
test
shr
mov
mov
(bad)
sbb
into
push
movs
and
inc
add
jnp
out
jg
movs
inc
xlat
mov
adc
shl
dec
test
(bad)
push
pop
dec
xor
(bad)
int3
stos
xlat
mov
rcr
push
(bad)
and
stos
jb
popa
bound
xchg
cmps
retf
push
clc
jbe
in
ins
loop
sbb
pop
xchg
ins
les
and
retf
out
xor
iret
ins
mov
call
inc
jge
jg
popf
jecxz
mov
push
int3
fbstp
je
jbe
sub
jp
(bad)
ds
mov
jp
sbb
cmp
inc
mov
movs
out
mov
gs
data16
stc
push
imul
and
(bad)
fistp
add
lea
and
add
push
or
ror
in
inc
xchg
shr
dec
mov
ja
repnz
arpl
xchg
push
idiv
sbb
mov
push
jns
mov
sub
xchg
mov
fbstp
adc
test
xor
push
popa
in
int3
inc
mov
lods
pop
mov
ja
jbe
shl
jge
mov
inc
push
sbb
das
lods
mov
fcomp
xchg
pop
cmp
icebp
out
cwde
retf
sub
pop
inc
jb
js
shr
jnp
sar
mov
or
sti
in
fld
cmp
xchg
int
ret
jns
leave
loop
jmp
push
mov
inc
jmp
inc
pop
and
inc
shl
dec
xchg
sbb
sub
push
sub
mov
inc
mov
pop
stc
push
cwde
rcl
and
movs
call
(bad)
iret
mov
mov
sar
sbb
fwait
test
mov
adc
mov
shl
out
mov
adc
jnp
mov
sbb
(bad)
hlt
(bad)
adc
ret
or
pmaddwd
in
ret
(bad)
fist
jbe
pushf
inc
in
fist
ret
loopne
pop
xchg
sub
xchg
mov
dec
std
or
jns
jnp
jno
in
push
and
dec
stos
inc
mov
push
xor
ss
inc
or
mov
ret
xor
enter
mov
push
pop
xlat
icebp
xor
and
test
or
fucom
jno
mov
test
retf
call
and
cmp
aad
fsub
sbb
outs
or
jo
dec
pop
push
test
and
adc
rol
in
mov
mov
dec
retf
sbb
and
(bad)
mov
call
mov
out
outs
aad
ficomp
aad
jmp
and
push
mov
sar
fsubr
rcr
jae
sub
nop
cmp
cmc
repz
dec
or
sbb
mov
outs
mov
test
aam
mov
scas
cs
enter
sti
cmp
xor
int
sub
shl
fld
lods
loopne
or
lods
gs
mov
pop
cmp
test
xchg
mov
nop
xlat
push
ds
sbb
(bad)
jmp
fisub
jns
aad
cmp
add
pop
sbb
sub
in
inc
sbb
in
sbb
sbb
daa
popa
mov
ins
sti
jle
cmps
cdq
jnp
sub
add
pop
repz
std
dec
popa
fisub
mov
xchg
fsubr
pop
inc
add
mov
mov
push
pop
mov
mov
mov
xlat
test
pop
pop
xor
dec
mov
cld
cmps
addr16
cs
mov
movs
mov
test
dec
aas
(bad)
ficomp
std
nop
jp
iret
data16
mov
es
push
mov
mov
inc
xchg
hlt
mov
ss
push
call
cmps
ret
xor
pop
adc
fsub
add
call
test
push
sbb
fidivr
jns
mov
ror
ja
jg
cmp
and
test
jle
into
enter
push
cld
lods
xchg
ja
xchg
mov
lods
rcr
ins
call
nop
jne
arpl
cld
xor
clc
repnz
pop
xor
xor
sub
in
bnd
inc
mov
fist
rcl
push
inc
gs
inc
lds
jl
or
jl
push
mov
pop
aaa
cmps
add
or
sbb
add
jp
pop
pop
repz
jmp
gs
aam
adc
enter
xor
jle
repz
adc
cwde
mov
xor
bound
add
aad
inc
aaa
fbld
hlt
cmc
xor
stos
js
rcl
add
fdivr
mov
int3
and
inc
fisubr
shr
or
ins
or
inc
inc
xor
mov
mov
cmp
jne
ins
mov
push
sbb
lods
inc
jl
fldenv
imul
add
aaa
std
test
loope
pop
lock
int
sbb
push
int3
stos
push
jb
fimul
inc
xchg
inc
aam
shr
fdiv
mov
fadd
pop
mov
xor
pop
std
push
and
es
(bad)
cmp
sub
ds
mov
dec
mov
sar
add
scas
xor
rcr
or
ret
in
mov
mov
call
mov
out
or
push
test
inc
push
dec
dec
ja
or
cs
mov
jo
pusha
outs
aam
cmp
jno
into
(bad)
es
fwait
push
loop
test
lods
inc
sahf
jne
inc
scas
push
or
push
lea
daa
test
movs
adc
sub
push
into
dec
cmp
(bad)
sub
adc
push
cld
cmps
in
mov
ins
sbb
cmp
das
(bad)
mov
pop
int
enter
call
ror
mov
or
(bad)
shl
jno
xchg
popf
mov
call
bound
les
inc
or
pop
(bad)
jp
call
cmp
inc
cmps
or
cmp
jge
pop
ja
aam
add
xchg
ds
in
adc
outs
es
and
bound
cmps
aaa
dec
dec
and
sbb
call
adc
ret
pop
cmp
mov
jp
out
mov
dec
mov
(bad)
ret
cmps
cmp
xchg
stos
xor
lahf
cmc
adc
bnd
movs
fs
sub
inc
shr
jne
mov
(bad)
mov
dec
mov
sub
out
jmp
xor
or
pop
or
loop
sar
repz
leave
sub
adc
pushf
lds
lea
dec
imul
cmp
bound
inc
xor
in
and
cmp
rcl
cld
dec
mov
xchg
shl
pusha
std
mov
outs
(bad)
lea
mov
(bad)
push
repnz
out
daa
xor
sbb
dec
cmp
inc
mov
in
sbb
jecxz
jb
pop
push
nop
mov
outs
or
mov
test
movs
rcl
int3
mov
movs
ss
nop
inc
int
repz
(bad)
mov
xchg
inc
sbb
(bad)
cdq
mov
or
mov
xor
icebp
jl
mov
mov
push
cmp
cmp
ds
pop
nop
add
push
jbe
inc
pop
rcl
mov
and
xor
jl
aas
mov
inc
lods
mov
out
std
ds
icebp
pop
mov
push
jne
xlat
mov
sbb
scas
dec
mov
dec
(bad)
sub
add
or
sbb
movsx
aas
addr16
jmp
sbb
xchg
mov
xchg
mov
pop
aad
shl
jl
xor
jns
xchg
or
sub
pusha
or
xchg
jl
pop
mov
fs
pop
bound
xlat
jne
cmp
xchg
or
adc
xchg
sub
out
ja
leave
adc
test
addr16
and
mov
invd
mov
inc
js
lods
dec
sub
inc
call
stos
stc
fist
xor
aam
pop
ins
fiadd
xor
jp
push
test
xchg
out
sti
out
mov
imul
push
xor
push
and
jbe
in
dec
mov
bound
out
mov
call
dec
jns
iret
lods
xor
add
inc
pop
pop
cdq
lods
gs
pop
mov
ret
int
jnp
aam
scas
aad
inc
lea
xchg
lods
ror
and
mov
loope
push
xchg
inc
fwait
xchg
pop
mov
call
retf
hlt
jb
or
movs
loope
push
sbb
mov
pushf
or
inc
ret
(bad)
pop
xchg
ret
push
mov
xor
fcmovne
out
dec
adc
sub
nop
jle
jns
cmc
xchg
cmc
push
jge
xchg
xlat
pusha
mov
sahf
call
mov
sub
xor
jle
push
push
fyl2x
fdiv
jg
cmp
or
int3
pop
mov
xor
cmc
jle
fwait
cli
lahf
stc
cmp
rcl
add
cmp
mov
in
mov
cld
test
data16
pop
imul
xor
pop
in
sbb
loope
jmp
sub
xor
retf
pop
fwait
bound
loop
iret
sbb
out
mov
nop
(bad)
std
push
in
hlt
daa
and
test
jne
dec
xor
jp
int3
dec
jl
mov
andnps
inc
jnp
dec
mov
mov
xor
cmp
vcvtdq2ps
aas
pop
inc
jge
sub
or
test
sbb
and
or
and
and
mov
out
arpl
icebp
adc
lea
jbe
mov
(bad)
dec
mov
adc
push
pop
dec
jp
xchg
sub
bound
std
sbb
gs
ins
in
or
ret
enter
imul
xchg
push
xor
fisttp
jmp
dec
dec
xchg
pop
mov
aas
test
sbb
inc
or
iret
dec
sti
xchg
mov
add
lods
push
dec
jmp
mov
les
xor
pop
shl
xchg
pop
jmp
repz
jno
and
addr16
add
mov
daa
hlt
add
xchg
call
sbb
sub
push
cmp
and
scas
mov
jecxz
data16
je
(bad)
ds
inc
xor
and
inc
pop
addr16
and
rol
xor
inc
(bad)
lock
(bad)
rcl
inc
cmp
js
lea
cmps
or
inc
or
addr16
leave
push
(bad)
and
test
jno
fsub
sbb
das
test
inc
or
(bad)
pop
lods
scas
in
pop
and
mov
fistp
in
fwait
rol
push
mov
inc
fnsave
nop
pop
cmc
or
lods
adc
or
jne
mov
std
sub
out
xor
and
(bad)
pop
push
jo
data16
adc
sub
or
pop
ja
mov
clc
mov
test
repnz
push
out
mov
push
fstp
(bad)
pop
xchg
cmp
mov
fcomi
inc
xchg
nop
dec
cmp
cmps
cmc
and
enter
fimul
sub
popa
mov
dec
hlt
call
cli
imul
mov
ret
mov
clc
cmc
(bad)
call
ficomp
or
push
arpl
xchg
mov
jmp
push
lahf
adc
daa
rol
pop
jge
sub
jnp
call
sub
ins
repnz
push
cmps
push
cmc
xchg
(bad)
jmp
addr16
add
(bad)
fbld
jb
dec
fadd
xchg
out
nop
adc
or
sbb
test
mov
(bad)
mov
lods
adc
arpl
push
xor
ins
enter
rol
jg
jle
scas
cmp
mov
xor
sub
out
lea
arpl
test
pusha
inc
or
lods
repnz
aam
repnz
fsubrp
ja
fnstsw
movs
adc
sbb
cmp
mov
mov
pop
inc
bnd
or
out
call
(bad)
mov
adc
inc
mov
lock
fisub
inc
dec
sub
rcr
jnp
dec
pop
sbb
add
pop
enter
test
or
or
out
pop
jnp
test
or
jns
enter
add
frstor
pop
sub
jmp
push
in
or
test
jg
jmp
xlat
jmp
popf
clc
inc
addr16
mov
or
call
dec
jge
std
loop
pop
inc
add
loope
ins
jecxz
xor
inc
and
rcr
add
add
out
lock
inc
ss
bound
sbb
imul
sbb
adc
mov
cmc
inc
(bad)
leave
sahf
test
cmp
(bad)
outs
shl
sbb
or
in
pop
cmp
mov
mov
push
dec
sub
add
add
lods
push
pop
sub
sbb
iret
fbstp
push
pop
mov
out
sar
cmp
jnp
imul
sub
shr
lods
fcomp
inc
mov
or
ret
fchs
push
je
ds
arpl
mov
jne
mov
in
in
sbb
cmp
sub
cwde
test
shr
mov
nop
or
fs
xchg
sub
lock
bound
mov
arpl
test
ds
mov
movs
dec
aaa
cmc
pop
dec
js
cmp
and
push
mov
rep
jne
push
in
adc
(bad)
jmp
int
movs
xchg
test
add
mov
push
pop
sub
into
leave
pop
xor
cmp
or
or
sar
xor
popa
and
not
out
xor
or
in
rol
mov
xor
add
pop
and
jb
sahf
(bad)
push
xchg
test
sahf
lahf
call
sbb
movs
or
test
cmp
xor
or
dec
pop
push
or
adc
push
push
fdivp
aam
popf
push
jmp
popa
ret
and
inc
in
xchg
stos
aaa
cmp
sbb
jo
daa
dec
inc
(bad)
cmps
push
mov
sub
fcmovnu
mov
mov
fdiv
lahf
add
xor
sub
xor
stos
add
fld
or
call
iret
rcr
dec
fs
add
dec
add
mov
jecxz
leave
fdivp
sub
pushf
dec
in
and
sbb
dec
pop
lock
dec
fnstcw
jns
mov
cmc
bound
sub
call
in
xor
mov
aas
cmp
sbb
out
arpl
adc
sbb
jbe
call
jno
rol
xchg
hlt
mov
jmp
mov
jmp
mov
icebp
add
sbb
mov
jmp
inc
jno
pop
adc
iret
dec
fstp
mov
cmp
inc
ss
fsubr
xchg
aaa
dec
push
fdivr
lods
jmp
and
sub
and
sub
(bad)
out
(bad)
jg
cmp
cmp
(bad)
cli
stc
adc
xchg
xor
fisttp
enter
jae
mov
cwde
fwait
xchg
and
jp
int3
out
fdiv
mov
mov
push
xor
aam
push
jge
dec
xchg
jmp
in
mov
call
pop
data16
or
or
pop
fcom
fsub
cmp
xchg
into
retf
daa
mov
push
mov
sbb
inc
or
int
rol
push
xchg
cmp
add
popf
stc
hlt
jecxz
jbe
mov
sbb
sbb
test
cmp
and
aam
or
add
inc
ret
enter
mov
push
fadd
inc
xor
nop
out
dec
lea
jns
or
int
adc
rol
cmp
sbb
popf
ficom
mov
movs
mov
jl
lea
std
into
xor
and
mov
test
sub
ret
and
push
(bad)
repnz
inc
xchg
dec
mov
xchg
sbb
sbb
cwde
into
sbb
mov
int
add
outs
sbb
ret
fisub
push
lea
data16
loope
xchg
or
push
leave
sbb
cmp
pop
mov
inc
into
mov
sbb
cmp
fbstp
pop
sahf
push
sbb
xor
ret
jp
test
clc
and
loopne
popf
xor
jns
adc
and
fcompp
call
xchg
mov
adc
or
push
jle
(bad)
int3
cmp
sub
fdiv
add
and
ins
retf
jmp
cmps
pop
push
mov
push
enter
test
sub
mov
jnp
pop
cs
cmp
outs
sbb
imul
mov
(bad)
lods
(bad)
fist
das
push
mov
push
mov
int
xchg
jb
sub
and
cmpxchg
xor
fstp
jg
ret
xor
inc
jb
leave
(bad)
xlat
jl
xchg
pusha
or
imul
add
and
xor
cmp
cmps
sbb
dec
cmps
sbb
inc
adc
stos
and
stos
add
ja
in
xchg
mov
icebp
push
mov
or
test
(bad)
retf
push
test
and
(bad)
xor
mov
movs
fidiv
sub
rol
xchg
or
cmc
dec
pop
push
lea
das
pop
std
sub
pop
cli
jbe
push
mov
aad
adc
and
push
ror
cmp
inc
mov
(bad)
xor
mov
or
push
ins
mov
sbb
cmp
push
mov
jmp
gs
sbb
xor
clc
xchg
loopne
shr
cs
mov
jo
lock
xchg
push
mov
fadd
and
cld
sbb
fdiv
fwait
cmp
shl
repz
jmp
loopne
jecxz
lea
xchg
push
fisttp
aam
xchg
outs
dec
popf
add
lods
outs
xchg
inc
jno
in
mov
rol
lods
cmp
xor
in
jno
pop
or
sub
pop
lods
sbb
pop
sub
dec
(bad)
add
popa
or
add
shl
mov
sti
jl
mov
xor
xchg
adc
xchg
rcr
mov
inc
push
pop
das
mov
loopne
retf
mov
ins
loope
sub
in
mov
invd
sahf
lea
std
xchg
dec
mov
sar
cwde
sbb
and
add
icebp
std
test
retf
mov
in
jbe
sbb
xchg
aaa
and
xchg
inc
jl
pop
inc
sub
add
out
in
adc
ror
loop
lea
or
movs
jb
mov
mov
in
retfw
jne
hlt
loop
adc
je
xor
call
lock
pop
sbb
adc
fld
push
adc
in
cmp
dec
mov
pop
ins
pusha
pop
add
scas
sub
retf
mov
cdq
or
aad
cmps
nop
clc
icebp
call
js
inc
mov
jns
leave
hlt
(bad)
fsubr
(bad)
mov
or
shl
push
test
push
mov
out
xor
call
inc
fisub
shl
ja
add
mov
adc
(bad)
into
mov
(bad)
push
or
(bad)
jae
pop
hlt
sbb
push
mov
fst
push
sti
neg
rcr
xor
pop
mov
ret
push
in
inc
aam
inc
aam
retf
cmp
push
mov
push
sub
(bad)
ins
icebp
sbb
fidiv
add
adc
movs
jp
inc
sbb
xchg
fwait
test
push
sar
xchg
(bad)
lods
call
popf
ret
jg
jne
add
(bad)
xchg
mov
ds
popa
add
or
mov
into
pop
pop
js
lods
test
fstp
pop
jle
dec
jnp
push
push
pop
push
add
xchg
add
cmp
add
in
fistp
(bad)
mov
movs
dec
iret
pop
ins
adc
push
retf
test
shl
sbb
scas
lods
or
dec
scas
xor
jne
mov
jle
je
xchg
mov
out
call
jnp
out
adc
pop
cmp
sub
sub
cmp
sub
in
push
nop
cwde
xlat
xor
mov
and
aaa
dec
mov
cmp
push
fsubr
mov
dec
xchg
and
clc
mov
leave
into
mov
dec
mov
push
jnp
(bad)
enter
dec
outs
frstor
fwait
push
sbb
(bad)
fst
cmps
push
jnp
arpl
mov
xor
dec
pop
xchg
cli
lea
mov
mov
xchg
pop
mov
aas
cmc
pop
aam
mov
jnp
or
in
fild
push
mov
inc
jno
pop
or
clc
mov
(bad)
xlat
inc
inc
inc
int3
sahf
cdq
and
mov
rol
inc
mov
mov
jmp
addr16
add
(bad)
repnz
ins
jge
loopne
pop
aad
and
or
add
cmps
lea
daa
fdiv
cmps
xchg
add
sbb
jl
cmp
sbb
mov
es
in
mov
xchg
nop
push
imul
dec
cmps
push
mov
sub
(bad)
sub
push
daa
fld
cdq
or
xor
fsubr
pop
dec
shl
dec
xchg
imul
inc
xor
neg
xchg
into
imul
cmp
test
mov
leave
aas
test
sbb
out
mov
outs
push
ss
mov
retf
inc
and
xchg
mov
ja
jmp
fdiv
stos
fdivr
or
(bad)
pop
jbe
add
fwait
bound
xor
pop
imul
pop
or
fisub
(bad)
sub
and
out
mov
pop
retf
mov
imul
and
loop
and
dec
je
mov
aaa
inc
ja
mov
pandn
dec
jno
jns
sub
iret
int
loopne
sbb
xchg
hlt
xor
xor
mov
inc
xor
call
movs
xchg
push
and
cmp
or
xor
mov
mov
nop
or
repnz
pop
cdq
ret
dec
loope
mov
sub
pop
mov
pop
xchg
movs
pop
lods
loope
retf
pop
rcl
sbb
adc
xor
imul
xchg
sub
in
outs
cmpxchg
pop
adc
cwde
lods
adc
jg
jae
aad
mov
push
lea
mov
outs
push
hlt
xlat
jo
adc
pop
xor
popa
(bad)
ds
(bad)
mov
cmp
ins
inc
mov
loope
sbb
fnstcw
popa
jmp
les
(bad)
rol
mov
dec
test
mov
and
pop
mov
mov
mov
jne
xor
in
movs
repz
sbb
int3
aaa
cmc
test
cmps
jecxz
xchg
mov
inc
loope
adc
inc
push
mov
cmp
lahf
shr
sub
pop
add
in
and
inc
add
inc
push
mov
(bad)
movs
fcomp
rcl
mov
fwait
das
imul
xor
mov
pop
mov
ret
pushf
cmp
jle
je
pop
mov
dec
call
push
xchg
add
fs
in
scas
mov
jb
cmp
xchg
inc
fisttp
les
adc
or
imul
add
dec
jnp
sub
addr16
cmps
fist
cmp
out
stos
in
xor
hlt
push
bound
js
xchg
inc
sub
movs
xlat
imul
cmp
and
mul
test
in
into
or
fs
xor
xchg
das
lds
in
cs
mov
cmps
xchg
xchg
cli
ss
sub
push
je
xchg
sub
mov
and
aad
mov
cs
mov
arpl
sub
mov
ins
fdivr
xchg
out
xchg
sub
mov
sbb
pushf
lock
cmc
retf
out
push
popf
outs
mov
inc
sbb
sbb
pop
loop
mov
(bad)
jg
sub
div
stos
dec
in
lds
mov
jnp
ffree
jge
mov
and
jp
mov
(bad)
out
and
repz
and
nop
enter
pop
mov
mov
aas
jmp
fstp
outs
cmp
cdq
mov
mul
ds
xchg
out
inc
sahf
push
cmp
ins
pop
fs
in
cli
sbb
int
js
repz
or
addr16
mov
cmp
mov
mov
push
sbb
mov
push
out
sbb
call
or
sub
icebp
test
sub
push
imul
pop
xor
push
fwait
(bad)
xchg
jne
pop
or
cs
bound
popa
stos
jecxz
(bad)
and
pop
inc
pop
push
pop
ins
shl
shl
test
out
dec
and
dec
jno
xchg
sti
pusha
mov
nop
and
outs
push
neg
pop
je
push
loop
sub
or
sbb
pop
out
mov
or
pusha
push
arpl
cli
les
jae
add
add
ins
adc
(bad)
fcmovne
xor
test
mov
jge
mov
cwde
dec
mov
pop
xchg
ds
enter
dec
sbb
in
inc
or
repnz
xor
inc
inc
mov
mov
shl
ret
imul
push
jne
fs
xchg
add
movs
push
or
icebp
sbb
jb
xlat
(bad)
jmp
xchg
mov
shl
ret
cs
and
mov
mov
or
bound
(bad)
cwde
(bad)
xchg
sar
sub
pop
add
mov
inc
jle
mov
loop
inc
mov
mov
add
push
xor
cmp
push
out
jl
inc
adc
and
repnz
sub
pop
adc
xor
mov
mov
jp
test
sub
add
mov
(bad)
jle
adc
gs
std
xor
scas
jmp
push
call
(bad)
fild
push
and
jecxz
aaa
loopne
push
(bad)
std
pop
iret
sahf
adc
cmp
mov
or
sbb
fld
sbb
ins
(bad)
pop
movs
dec
into
scas
sbb
ret
test
push
mov
xor
and
mov
mov
inc
outs
cmp
cmp
jno
retf
ffreep
inc
stc
loope
adc
int
add
pcmpeqd
outs
out
xor
xor
call
(bad)
cmp
mov
fadd
les
push
push
mov
sti
stc
dec
push
mov
hlt
(bad)
cli
ret
or
push
cmp
or
mov
mov
sbb
push
je
(bad)
clc
lods
cmp
xor
cwde
mul
dec
xor
sbb
push
add
rcl
mov
jmp
push
mov
xor
xchg
xor
cmc
jle
push
mov
adc
das
fadd
iret
shl
push
adc
fcmovnu
dec
mov
pop
enter
and
outs
cld
cmp
sbb
cmp
in
cmp
sub
lock
loopne
push
sub
in
ja
push
and
ins
push
push
xor
or
nop
add
xchg
jge
mov
imul
inc
fst
inc
or
jge
xor
fimul
data16
push
(bad)
jmp
mov
jle
in
imul
stos
sbb
scas
int
mov
xchg
jb
stos
out
pop
bsr
bswap
test
in
sbb
mov
into
add
add
mov
xor
mov
jge
and
repnz
cmp
or
rol
mov
push
xchg
ins
mov
je
fdiv
mov
jle
mov
in
mov
pop
cmp
pop
inc
in
in
push
sar
sub
addr16
xor
dec
xor
out
(bad)
xchg
adc
ja
sub
xchg
pop
fild
jmp
mov
cmp
fwait
jbe
std
mov
imul
adc
cdq
loopne
dec
stc
and
adc
jno
xchg
aad
cmp
hlt
mov
pop
or
ror
mov
inc
in
xchg
xchg
jns
std
cmp
mov
fwait
ret
sub
test
or
loope
rcr
inc
sbb
pop
fiadd
cs
setp
jno
les
mov
pop
bnd
out
arpl
jne
call
mov
dec
pushf
call
loope
inc
aaa
mov
aad
dec
xchg
jb
mov
mov
sbb
push
xchg
mov
add
xchg
jp
fcmovnu
not
cmp
std
sub
fwait
test
mov
push
and
aam
pop
cli
inc
push
adc
fwait
cwde
inc
mov
mov
(bad)
cmc
xor
dec
pushf
or
stc
and
mov
fcomp
lods
scas
stc
mov
pop
data16
xchg
inc
das
jl
xor
adc
fcomp
or
lods
sahf
imul
sti
mov
sub
test
lods
cmps
loop
icebp
or
(bad)
bound
pop
sub
ret
int
push
sbb
pop
pop
jp
push
lods
es
pop
mov
lock
iret
mov
mov
int3
int3
inc
cdq
jno
jnp
or
lods
(bad)
aam
aaa
jmp
sbb
stos
push
fcmovnb
mov
(bad)
jne
fist
repnz
cli
mov
aam
mov
mov
fcomp
outs
jno
jg
add
jle
pop
xor
mov
sbb
jne
imul
in
sub
add
aad
(bad)
retf
jge
loopne
xchg
mov
stc
jl
or
or
adc
mov
repz
mov
idiv
das
fxch
out
out
xor
push
mov
xchg
ins
hlt
fcmovb
or
and
inc
retf
dec
pop
mov
inc
xchg
(bad)
mov
jnp
sbb
in
retf
jb
in
cmc
repz
xor
xor
addr16
inc
retf
call
push
repz
shl
xchg
adc
les
lock
call
leave
or
test
stos
xor
cmp
out
loop
bound
shl
in
fs
push
sbb
lock
mov
test
lock
mov
scas
nop
jecxz
gs
mov
call
jp
jmp
adc
and
xlat
ins
inc
jp
or
imul
xchg
push
push
sub
xlat
and
jne
or
push
jp
push
sub
xchg
lds
jne
mov
jb
stos
int3
xchg
cmps
(bad)
js
lea
cld
fiadd
lods
or
js
pop
mov
lahf
sub
push
push
mov
popa
ins
xchg
jge
test
aam
sbb
test
fwait
add
mov
int3
xor
jb
pop
data16
addr16
test
ffree
mov
mov
or
xchg
out
sub
inc
add
fwait
pusha
es
dec
loop
cmp
mov
clc
ret
xor
xor
jbe
push
mov
imul
push
pusha
sbb
push
sub
rcl
xchg
frstor
ins
lds
ret
cs
sbb
aam
jl
and
pusha
retf
mov
sbb
xor
jecxz
cmp
aaa
nop
repz
jno
fiadd
push
inc
es
xchg
xor
jmp
push
add
lods
sub
repnz
sub
push
mov
test
or
or
dec
mov
out
inc
dec
inc
(bad)
js
sbb
ds
js
aaa
gs
jne
sar
mov
mov
out
test
ja
aad
stc
movs
std
rcr
or
push
mov
adc
push
mov
sub
fcom
lea
mov
pop
adc
sub
xor
int
or
sar
ins
jecxz
sub
fst
pusha
mov
clc
xlat
xlat
aad
sbb
stos
and
mov
and
inc
cli
sbb
jns
sub
mov
jnp
call
jo
inc
daa
inc
adc
(bad)
imul
cmps
leave
xchg
sbb
aaa
cli
mov
jb
and
outs
jne
jno
frstor
aam
cmps
stos
push
fisub
movs
xor
(bad)
mov
stos
add
ss
pushf
loope
or
adc
(bad)
rol
or
inc
pop
mov
mov
sub
jle
out
xchg
fwait
jle
call
das
sub
cmps
cmp
mov
aas
outs
loopne
enter
shr
vpshrdd
mov
dec
mov
xchg
and
sbb
test
push
xchg
or
enter
xor
int3
das
test
hlt
js
pop
push
adc
rol
mov
mov
cmp
mov
xadd
jmp
cmp
jp
jmp
mov
cmp
sbb
sub
sbb
sbb
arpl
(bad)
in
push
das
scas
sar
gs
xchg
hlt
or
hlt
mov
jl
and
pop
pop
(bad)
push
add
ss
xor
xchg
nop
imul
aas
in
jb
inc
or
add
dec
das
shl
(bad)
inc
cmp
xchg
and
push
cmps
mov
xchg
fild
out
jmp
jmp
jne
arpl
inc
loopne
and
or
ins
jo
icebp
aaa
and
mov
mov
movs
dec
xchg
mov
in
cmc
or
sub
and
xchg
adc
aam
pop
aam
mov
cwde
jbe
cmp
out
jb
mov
loop
push
push
js
adc
(bad)
jmp
pop
mov
call
jmp
push
cmps
sub
add
call
push
jp
and
out
jle
jp
sti
movs
leave
ss
scas
fcomp
push
jg
xchg
mov
lock
jp
imul
xlat
xchg
dec
rol
int3
aad
add
sbb
sub
fld
jle
adc
xchg
xchg
hlt
mov
int3
xor
shl
scas
scas
mov
idiv
mov
stos
mov
dec
and
les
pop
outs
xchg
bound
scas
push
fwait
rol
iret
pusha
in
push
inc
fistp
adc
(bad)
sbb
bound
aam
adc
aaa
cmp
cmc
jne
stos
sub
mov
push
pusha
pop
test
mov
retf
add
pusha
stc
push
int
mov
jo
cmps
retf
or
xchg
jnp
pop
pop
xor
jecxz
jno
mov
mov
imul
loope
jns
mov
je
gs
js
daa
xchg
mov
mov
cs
push
jmp
cmp
popf
jno
pop
push
push
xor
in
faddp
mov
cmps
sar
ret
es
pop
and
cmp
inc
aas
popa
mov
fisub
je
ja
ja
mov
mov
mov
dec
ficomp
lock
repnz
xor
or
fnstcw
test
push
lds
ja
xor
fistp
repnz
xchg
push
push
xchg
aad
dec
inc
(bad)
(bad)
mov
inc
test
sbb
inc
in
arpl
cdq
xchg
and
push
xor
retf
mov
stos
std
mov
aaa
push
cs
lods
and
mov
xchg
pop
gs
mov
cbw
xchg
push
iret
movs
cld
lods
pop
xor
call
sti
xor
inc
add
and
xor
adc
pop
xor
sahf
mov
vpavgb
mov
push
mov
mov
pushf
xor
jae
xor
fistp
jl
and
push
cmc
mov
sub
pop
pop
xchg
popf
shr
mov
iret
sbb
cmp
jp
loopne
out
(bad)
fisub
jne
daa
ret
inc
fbstp
iret
iret
or
pop
dec
or
sub
(bad)
not
push
jecxz
mov
inc
cmp
ins
inc
daa
pop
sub
shl
cwde
ds
dec
sti
mov
retf
outs
into
sbb
daa
mov
push
xchg
xor
mov
cmp
mov
movs
clc
out
iret
imul
scas
or
pop
or
xchg
stos
mov
push
shl
lea
cmp
aam
fisubr
sub
xor
jns
adc
es
mov
add
mov
mov
mov
jno
ds
xlat
call
stc
mov
movs
mov
test
out
add
jnp
push
es
call
pop
xor
mov
std
fcom
aaa
aas
add
gs
xchg
movs
ss
mov
push
push
push
add
gs
repz
scas
lods
dec
fdiv
in
pop
ficom
inc
pop
add
pop
aas
in
ret
mov
mov
sti
jl
fdivr
pop
aaa
shr
hlt
cs
aam
adc
push
cmp
(bad)
xor
inc
bound
mov
(bad)
mov
pop
popf
and
cmps
ficomp
xor
call
outs
pop
xor
and
dec
inc
cmp
xlat
sub
mov
(bad)
add
cli
int
hlt
dec
and
xchg
popf
out
ret
inc
or
iret
test
pushf
xchg
xchg
xchg
movd
sahf
jbe
retf
xlat
ret
in
mov
(bad)
sub
imul
cmp
cmp
(bad)
xor
push
lock
mov
push
nop
stos
rcr
jno
sbb
repz
xlat
push
jbe
fst
mul
or
movs
push
dec
mov
stos
lods
aad
cmp
push
sahf
jl
ret
push
test
(bad)
cli
icebp
enter
sub
jnp
daa
fadd
dec
sub
push
push
or
push
cmp
leave
pushf
pop
xlat
dec
mov
xchg
out
mov
sbb
ret
xlat
dec
sbb
xchg
std
hlt
lea
mov
mov
xor
sar
xlat
inc
dec
pushf
in
cld
shl
sbb
sub
cwde
dec
mov
mov
xchg
into
fs
clc
and
lea
push
out
retf
ret
mov
xor
mov
jno
and
adc
or
fisubr
lods
in
pop
mov
imul
inc
mov
mov
shl
pop
sbb
pop
out
mov
xchg
nop
jb
xor
cmc
(bad)
test
sbb
cmp
inc
and
or
lds
cmp
bnd
mov
cs
fxtract
js
js
pop
mov
(bad)
movs
test
cmp
jns
cmps
outs
push
mov
stos
dec
jle
pop
pusha
xor
test
cmp
jbe
or
out
gs
mov
(bad)
lock
lea
(bad)
rcl
jns
(bad)
lock
clc
clc
mov
or
scas
es
(bad)
call
cmp
fwait
pop
shr
sar
imul
mov
dec
fs
idiv
mov
je
call
sbb
mov
jecxz
xchg
push
xor
inc
lea
sbb
jbe
mov
stos
out
loopne
sub
dec
and
into
pop
add
popa
dec
mov
movs
fadd
xor
ror
ret
sub
inc
bound
daa
cmp
mov
scas
adc
cmp
mov
neg
(bad)
std
jp
rcr
cmp
sahf
inc
aad
xchg
mov
pop
push
xchg
jge
mov
aas
pusha
fistp
imul
push
xor
shl
inc
fdivr
sti
ss
mov
mov
jle
adc
(bad)
adc
dec
push
test
xchg
mov
pop
ins
fisubr
(bad)
or
int3
or
or
pop
fmul
push
pop
ins
sahf
clc
inc
inc
adc
or
int3
jge
in
in
pop
in
neg
data16
(bad)
(bad)
mov
jbe
mov
stc
mov
mov
mov
rol
mov
inc
push
dec
inc
xor
or
aad
fst
cmp
movs
lea
test
test
sbb
les
sub
iret
retf
test
add
nop
dec
aad
adc
push
aas
lods
pushf
xchg
(bad)
dec
loopne
call
fnsave
and
call
jo
mov
jnp
mov
and
jb
test
pop
leave
push
aam
or
in
test
inc
outs
or
jp
movs
int3
jbe
cmp
sbb
pushf
daa
int
inc
inc
jb
pop
in
bound
addr16
fcomp
shl
push
movs
gs
adc
mov
sbb
add
dec
push
adc
add
bound
into
and
and
aaa
xor
push
cmp
jmp
adc
lods
pop
sub
cmp
cmp
mov
inc
jbe
and
iret
sub
das
or
fild
movs
push
mov
cs
xor
jno
dec
push
add
cmp
jo
mov
cs
mov
push
xor
retf
jge
ror
(bad)
mov
int3
jle
mov
cmp
inc
sbb
fbstp
cmps
imul
dec
mov
sub
or
inc
xor
scas
retf
push
cli
mov
xchg
sub
and
in
dec
clc
(bad)
inc
sbb
cmp
adc
aaa
movlps
sahf
push
dec
mov
cmp
mov
mov
enter
xchg
out
or
arpl
ror
mov
out
push
push
fst
push
dec
or
adc
xor
scas
ds
mov
jmp
xlat
inc
repz
movs
sar
ret
or
xor
and
sbb
sub
jmp
or
pop
pop
sub
mov
out
and
cdq
mov
ins
stos
imul
mov
call
data16
enter
pop
xabort
loop
movs
pop
xchg
mov
add
fs
inc
cmc
mov
jmp
mov
outs
nop
jnp
cmp
mov
(bad)
outs
push
lahf
scas
stc
test
mov
inc
inc
pop
cmps
pop
ins
mov
jmp
push
jmp
in
mov
sub
push
mov
loop
fs
test
inc
js
mov
mov
nop
sbb
dec
inc
aaa
leave
popf
ror
mov
add
daa
xchg
or
mov
push
mov
shr
or
mov
pop
push
dec
and
jae
test
sbb
in
mov
lds
nop
sti
mov
inc
cmp
arpl
push
in
repz
jmp
ror
xor
and
test
mov
fidiv
and
mov
pop
shl
fs
jns
test
xchg
jns
adc
mov
cmp
cdq
cli
adc
clc
and
shl
cmps
push
cmp
xchg
jbe
pop
imul
cli
jmp
sub
jnp
jne
test
push
xor
loope
mov
push
mov
shl
je
cmp
shr
sar
cmp
pop
pop
sub
stos
addr16
(bad)
retf
cdq
fwait
adc
push
ja
jg
ins
add
push
out
sub
fbld
mov
push
xchg
sub
push
stos
jge
int
sub
aas
jg
movs
data16
xor
mov
js
pop
lahf
jmp
xor
ret
cmp
das
push
sbb
sub
in
push
shl
inc
adc
add
retf
(bad)
push
adc
push
mov
hlt
call
mov
push
retf
push
je
cmovp
outs
cmp
lods
in
push
jmp
or
or
(bad)
fcom
outs
xchg
jnp
(bad)
pop
out
jae
cmps
addr16
mov
add
add
push
jmp
pop
mov
mov
mov
push
mov
and
repz
arpl
sbb
aaa
inc
cs
jnp
xchg
movs
cmp
daa
ins
test
jecxz
mov
out
(bad)
out
fdivr
cmp
dec
scas
mov
mov
stos
mov
or
inc
es
push
or
ret
sbb
adc
mov
aad
das
and
bnd
les
cld
mov
push
mov
stos
jp
iret
inc
aas
lock
cmp
mov
retf
jns
pop
and
popf
shl
push
push
fwait
xor
xor
mov
push
jno
or
pop
lea
lea
lds
xor
xor
sbb
mov
push
sub
test
call
push
sbb
mov
dec
pusha
jae
popf
arpl
sti
ret
data16
or
adc
pop
out
ficom
movs
sar
enter
out
stc
sub
repz
mov
jp
push
mov
dec
adc
pop
xchg
div
inc
out
rcl
test
loopne
push
and
lock
push
in
in
les
jne
sbb
jo
lea
loope
and
ja
inc
and
mov
and
jbe
(bad)
js
into
imul
movs
add
inc
or
sub
outs
cld
ss
adc
je
mov
mov
cmp
pop
arpl
cs
push
mov
mov
jno
cmp
sub
inc
xor
inc
lods
and
xor
pop
hlt
rcl
mov
sub
xor
inc
ds
pop
movs
scas
inc
nop
jmp
cmps
outs
inc
cmp
pushf
call
(bad)
cwde
pop
int
jmp
pushf
ret
sub
adc
push
cs
mov
add
mov
lods
das
jmp
dec
test
push
xor
pop
dec
push
into
or
xchg
sti
add
test
cmovbe
xor
jae
leave
cli
jmp
inc
jae
add
push
lea
mov
xlat
mov
xlat
pop
mov
int3
sub
rol
fmul
retf
cmp
mov
call
stos
cdq
mov
mov
push
adc
inc
psllw
lock
ins
int
mov
fnstcw
mov
jle
mov
add
inc
sbb
sbb
xchg
mov
mov
cli
fcomi
not
mov
in
iret
inc
(bad)
xor
shl
call
add
pop
jo
lahf
retf
dec
sbb
dec
push
sbb
btc
jecxz
outs
fisub
jl
push
xchg
into
push
xchg
xor
adc
xor
scas
adc
ror
pop
jg
stc
loopne
call
mov
mov
nop
test
leave
sar
ror
dec
push
adc
push
lea
movmskps
jg
stos
dec
inc
ins
mov
fs
push
ss
pop
xchg
mov
add
pop
mov
inc
imul
movs
mov
jmp
mov
xchg
inc
in
retf
push
xor
xchg
es
cmp
mov
and
iret
out
jecxz
dec
xor
adc
arpl
stos
hlt
or
mov
xor
xor
xchg
sbb
test
push
dec
fisub
cmp
int
lods
pmaxub
cmp
add
mov
xor
div
add
daa
add
jo
outs
movs
inc
xor
(bad)
jmp
xchg
cmp
mov
and
jmp
idiv
or
cld
ja
cmp
neg
jnp
inc
or
test
rcr
sahf
and
jb
aam
fcomp
sbb
pop
xchg
push
popa
int
push
sbb
in
cmp
add
sub
xchg
cmp
push
sbb
rcl
add
loope
and
iret
repz
test
test
or
pop
pop
xlat
sub
mov
or
outs
sar
fucompp
pop
cmp
outs
or
mov
mov
rcr
fsubr
cmp
jmp
sbb
cmps
jp
inc
dec
scas
rol
jmp
sub
mov
push
add
cld
push
push
ret
adc
inc
cmp
sub
mov
sub
or
pop
outs
xor
repnz
and
rcl
cmp
sahf
aaa
scas
loop
addr16
ds
mov
lea
add
rcr
sbb
inc
(bad)
xor
xchg
xor
jne
bound
in
cld
into
xor
fs
shl
push
cdq
pop
repz
sub
sti
retf
fucomip
not
movs
je
pop
arpl
push
cmp
mov
mov
popf
fidiv
dec
cli
pop
xchg
jle
les
mov
adc
mov
popf
push
cmp
dec
push
imul
imul
(bad)
sbb
rcl
mov
aam
out
sbb
pop
fmul
in
dec
pop
mov
pop
scas
iret
xor
jecxz
and
and
dec
jl
cmp
mov
ror
add
pop
jne
sub
retf
xchg
sbb
or
xor
sbb
(bad)
add
cmp
sahf
(bad)
bound
xor
aas
dec
int
test
lea
sub
push
or
std
xor
push
mov
(bad)
jmp
test
mov
cmp
or
xor
scas
sbb
adc
inc
inc
mov
pushf
js
aam
sbb
mov
push
je
push
mov
cmp
adc
into
call
mov
push
push
inc
scas
xor
adc
sub
lods
xchg
dec
scas
inc
fcmovb
and
cmp
or
xchg
(bad)
xlat
sahf
mov
test
pop
cwde
ss
lahf
xor
mov
xchg
mov
pop
dec
or
fistp
mov
xor
std
nop
movs
adc
enter
test
xor
ror
loopne
adc
jecxz
xchg
sbb
fist
ins
inc
ins
xor
fwait
sub
je
scas
jmp
clc
cli
jb
sbb
xchg
imul
add
out
fwait
sub
mov
and
sbb
xchg
jbe
(bad)
ds
pop
test
jns
sub
xchg
push
push
icebp
(bad)
cmp
scas
loopne
test
xor
je
push
popf
cmps
sbb
add
dec
outs
ins
mov
fwait
je
add
jmp
neg
div
pop
inc
dec
repz
out
cmps
cmp
(bad)
bound
mov
inc
mov
retf
sub
movs
xor
(bad)
stc
imul
adc
mov
stos
icebp
int
xchg
popa
lods
sub
cmc
xchg
sub
push
outs
das
xchg
stos
pop
add
ja
jno
cmc
push
(bad)
mov
ins
xchg
pop
sbb
pop
bound
xlat
mov
mov
fmulp
ret
push
stc
pop
jae
ins
into
or
pop
mov
outs
(bad)
icebp
sub
enter
(bad)
ror
cmp
pop
mov
(bad)
and
std
add
cdq
bound
mov
fsubr
mov
(bad)
mov
push
push
movs
sbb
xchg
fprem1
lods
xchg
or
ja
inc
dec
retf
jecxz
and
(bad)
ret
jne
jg
into
mov
adc
xchg
mov
sbb
gs
jb
test
xor
xor
arpl
ret
lea
and
mov
js
adc
sbb
inc
push
and
mov
clc
repnz
inc
stos
outs
sbb
cmps
cmc
mov
(bad)
pushf
sbb
mov
lods
loop
sti
inc
sbb
xchg
das
(bad)
enter
jb
sbb
lods
sti
scas
lods
xchg
inc
xchg
xchg
lds
lea
lahf
int
int
lea
sbb
std
lds
mov
mov
mov
(bad)
jns
adc
aam
sub
xchg
xchg
mov
data16
mov
mov
inc
cmc
(bad)
jl
adc
(bad)
out
jne
in
xchg
imul
daa
adc
add
fs
in
jnp
movs
adc
stos
cdq
les
(bad)
out
fnstsw
ret
inc
retf
pextrw
xor
mov
push
fcmovne
xchg
stos
and
or
retf
jle
fldenv
scas
cli
push
call
ss
cmp
rcr
mov
fnsave
dec
(bad)
jle
mov
fwait
mov
mov
push
ret
xchg
fisubr
repnz
loopne
push
(bad)
icebp
out
mov
out
retf
ret
or
retf
jo
sbb
and
scas
add
nop
sub
les
in
mov
dec
xchg
or
dec
loop
adc
inc
pushf
cmp
inc
lods
(bad)
and
movs
test
ja
retf
aad
stos
shl
(bad)
ret
add
or
scas
xor
jnp
pop
sbb
lods
jecxz
enter
push
mov
or
adc
rcr
add
push
push
or
dec
pop
push
dec
dec
sbb
xchg
int
pop
imul
(bad)
daa
pop
mov
ds
dec
push
out
cli
stos
dec
and
xor
mov
xchg
or
les
outs
pop
or
pusha
and
jmp
lea
push
or
mov
push
mov
pop
cmp
or
dec
ins
lds
cmp
xor
test
gs
pop
aaa
dec
push
neg
popa
xor
aad
mov
test
aas
adc
pop
scas
add
xor
mov
loopne
pop
pop
cmps
inc
mov
sbb
cmp
add
scas
mov
sbb
stos
(bad)
fnsave
sbb
int
addr16
fild
aam
lea
mov
xchg
adc
xor
dec
arpl
sbb
mov
ret
(bad)
push
and
cdq
gs
fidiv
add
jle
ja
push
mov
ds
popa
not
call
movs
cmc
popa
sub
adc
mov
(bad)
mov
jmp
mov
cmp
lds
push
sahf
scas
add
push
(bad)
xlat
adc
fbld
movs
outs
outs
inc
loop
loopne
pusha
mov
in
(bad)
daa
lahf
imul
outs
cmp
(bad)
sub
(bad)
push
mov
sub
fisttp
xor
adc
add
mov
imul
test
sbb
dec
cmp
pushf
adc
xchg
repnz
inc
add
push
inc
retf
retf
ja
cmps
dec
mul
data16
inc
cmp
sub
jno
xchg
dec
jl
popa
push
mov
mov
arpl
and
popa
mov
lahf
pop
lea
lahf
jbe
jne
push
fmul
cmp
xchg
out
mov
adc
in
aam
cmp
cld
stc
inc
fisttp
xlat
mov
lock
icebp
dec
sbb
sbb
xor
sti
fs
ds
outs
sahf
in
push
pusha
loop
je
fwait
test
jae
fstp
mov
jae
mov
push
push
popf
add
scas
push
shl
sbb
in
fwait
push
pop
pop
mov
mov
pop
add
sub
jbe
mov
(bad)
mov
fnstenv
jg
shr
xchg
imul
xlat
inc
psllq
push
sub
call
jnp
dec
jp
repnz
mov
cli
cdq
xor
cli
jne
cmp
ins
pop
mov
and
pop
pop
sbb
lahf
retf
sub
push
addr16
and
push
sub
xchg
aam
sahf
mov
mov
lods
inc
in
cmp
addr16
sahf
xchg
mov
cdq
sti
pushf
(bad)
sti
aaa
(bad)
pop
jl
sub
(bad)
push
aaa
sub
es
adc
fisub
inc
mov
ss
in
fbstp
jg
pusha
xor
jmp
stos
(bad)
mov
call
xor
and
or
stos
into
dec
aaa
popf
push
shl
cli
iret
neg
ins
mov
adc
dec
fs
push
push
xchg
iret
mov
out
shl
jge
pusha
pop
scas
pop
sub
retf
inc
xchg
dec
xor
add
jp
xlat
and
sub
jno
jns
inc
cli
pop
cmps
xchg
cmp
cmps
sub
pop
add
and
pusha
shr
inc
les
out
cmps
sbb
int3
pop
ja
pop
stos
jne
or
cmp
and
out
mov
xchg
sub
mov
addr16
(bad)
cld
ret
dec
xor
ins
mov
add
ret
retf
cmp
mov
sbb
cmps
or
bound
add
rcr
or
sbb
add
aad
es
lds
xchg
cli
cdq
ret
pop
pushf
iret
jge
xor
xchg
out
push
push
sbb
ret
popf
jo
and
adc
pop
xchg
pusha
jo
and
cmps
push
and
pusha
pop
xlat
(bad)
jmp
xchg
inc
push
cmp
and
sbb
add
dec
jne
fisttp
inc
mov
jbe
ss
(bad)
jl
cdq
sub
cld
mov
scas
mov
or
pop
in
jge
mov
lods
std
bound
mov
inc
ficomp
push
mov
inc
dec
in
test
or
js
in
scas
xor
and
mov
and
iret
fsubr
or
div
add
push
push
(bad)
fbld
pop
pop
xchg
cwde
inc
jle
xchg
jmp
sbb
push
sbb
(bad)
mov
and
pop
mov
stos
ror
cs
rol
dec
ins
dec
mov
cmp
sub
daa
shl
fild
adc
pop
int3
loope
fwait
pusha
cwde
and
loopne
mov
bound
push
(bad)
push
retf
jg
mov
in
sti
aad
test
adc
lods
ss
push
outs
xchg
cdq
xchg
inc
cmp
call
mov
mov
jae
xlat
lea
adc
push
pusha
imul
out
bnd
jg
xchg
out
imul
mov
add
inc
idiv
add
mov
xchg
out
push
cmps
sti
call
iret
repnz
adc
outs
push
push
std
cmps
sub
pop
leave
iret
test
mov
movs
sub
test
adc
sahf
sbb
push
lds
in
mov
jns
dec
jo
cmp
jo
(bad)
sub
push
push
jecxz
fdiv
lods
xchg
stc
fimul
mov
pop
out
in
fidivr
sahf
xchg
or
repnz
int3
int
sub
and
push
inc
cmp
scas
sbb
sub
mov
ja
addr16
int
into
xor
push
lea
adc
call
or
cwde
push
adc
fdivr
jns
xlat
pop
outs
call
bound
push
int3
jmp
(bad)
jmp
js
mov
cli
xor
jp
aas
jg
mov
out
test
xchg
push
xor
neg
pop
fcom
cli
(bad)
daa
outs
popa
mov
inc
sub
ja
neg
pop
cwde
bound
push
ss
jle
sub
ficomp
jg
mov
rcr
(bad)
mov
seto
call
rcl
dec
cmp
and
je
bound
mov
fnsave
mov
xor
rcl
inc
(bad)
pop
mov
stos
jecxz
ror
xor
adc
(bad)
call
loop
sub
cmps
jae
pop
jno
femms
daa
inc
jge
lods
shl
cmp
test
mov
mov
imul
test
push
jne
lods
je
push
and
arpl
pop
mov
jmp
sbb
pop
(bad)
test
pop
(bad)
outs
jmp
aaa
sub
xchg
lods
jmp
cld
jg
mov
test
inc
cmp
or
mov
data16
xchg
xchg
outs
cwde
mov
ss
movs
push
test
sbb
dec
sahf
popf
idiv
mov
xor
mov
in
ins
fimul
or
and
lds
push
es
enter
clc
inc
mov
sbb
jg
repz
sub
and
sbb
cmp
pslld
imul
fstp
ja
aam
sbb
and
(bad)
dec
pop
adc
xor
dec
cmp
sub
ret
repz
mov
test
ins
inc
popa
dec
xor
mov
push
jmp
mov
mov
stos
add
xchg
sbb
ret
sbb
or
(bad)
in
cmp
in
xchg
bound
dec
ins
mov
mov
movs
cdq
imul
movs
jb
adc
inc
pop
mov
ins
add
cmp
call
mov
dec
popf
mov
test
mov
adc
adc
xchg
push
jp
dec
loop
leave
cmp
mov
mov
pusha
push
rcl
push
sub
or
dec
(bad)
std
jno
xchg
push
jge
in
pop
xor
or
(bad)
js
dec
mov
push
popa
lock
pop
das
jae
jp
pop
adc
push
mov
scas
mov
aas
enter
fucomp
mov
dec
aam
lahf
repnz
push
cmp
cmps
push
xchg
rol
fldlg2
icebp
loop
not
gs
sub
xor
retf
in
out
pop
cmc
jae
retf
add
jns
pop
hlt
xor
pop
fisubr
dec
dec
pop
mov
adc
mov
cmp
call
adc
inc
lock
das
imul
or
add
ins
imul
in
enter
mov
jecxz
mov
icebp
inc
inc
sub
imul
mov
stos
inc
jnp
or
jge
sub
xor
cli
cdq
loope
adc
sbb
mov
aas
sahf
inc
and
aaa
pop
mov
in
sbb
aaa
test
or
fdivr
ud1
push
mov
mov
je
and
jmp
scas
imul
call
call
adc
fist
cmp
(bad)
clc
add
nop
dec
pop
xchg
adc
push
push
fnsave
cmp
cmp
adc
fsub
into
pop
mov
add
out
mov
xlat
stos
sbb
sar
repnz
imul
dec
mov
and
std
call
cs
cmp
les
(bad)
jle
test
mov
inc
out
jbe
cli
es
mov
push
mov
xor
loop
ffreep
mov
test
and
pop
xchg
or
pop
mov
xor
hlt
ds
or
je
cmp
nop
add
pop
xchg
mov
and
pop
and
jnp
xchg
pop
gs
dec
frstor
loop
mov
or
repnz
jno
lea
mov
lahf
xor
cmp
dec
pop
(bad)
mov
aad
mov
lock
mov
aas
pop
sahf
mov
sub
pop
push
xor
dec
jl
add
mov
push
leave
mov
and
dec
fst
cli
fimul
xchg
mov
(bad)
and
addr16
sbb
and
ror
vpsllq
mov
cdq
pop
std
(bad)
call
jl
mov
cmps
fisub
push
sub
cmp
adc
popf
mov
cdq
outs
mov
jb
dec
add
cwde
sbb
scas
mov
int
inc
mov
in
cwde
std
mov
xor
sub
xlat
cmp
ror
jmp
jmp
int3
add
xchg
mov
cli
xchg
jbe
sbb
mov
inc
aas
pop
xor
mov
push
jne
sbb
jmp
js
dec
pop
mov
int
sbb
push
adc
add
fcompp
fdivr
jmp
addr16
dec
pop
pop
xchg
jo
cli
inc
cdq
cmp
mov
pushf
mov
push
out
mov
jo
and
xchg
inc
bound
dec
pop
pop
jmp
xchg
stc
pop
nop
adc
sbb
sub
test
jl
dec
data16
push
cmc
dec
adc
mov
inc
loop
xchg
push
(bad)
scas
mov
or
repnz
mov
push
sub
int
cmp
mov
mov
or
jne
jnp
jecxz
test
arpl
inc
sub
mov
mov
xchg
xchg
repnz
stos
fcomp
sub
mov
out
ret
xor
sar
retf
lods
cmp
arpl
cld
dec
add
jle
in
add
inc
mov
in
mov
mov
popa
dec
mov
and
push
gs
xor
ret
jns
rcr
sub
fimul
mov
sub
ss
cmp
ins
call
das
sub
xchg
fisubr
jb
dec
ret
retf
scas
pusha
push
cld
xor
adc
jmp
mov
sbb
mov
sbb
(bad)
mov
mov
mov
sbb
mov
pop
pop
add
inc
mov
adc
in
inc
fdivrp
cmp
adc
popf
add
cmp
sub
jns
mov
test
not
dec
adc
ss
dec
fwait
pop
repnz
xchg
dec
jne
xlat
xor
sbb
in
push
push
les
and
ins
stos
jmp
and
pop
cld
inc
(bad)
mov
sub
inc
leave
push
in
adc
imul
mov
call
add
xchg
jne
cmp
pop
mov
test
ins
and
sbb
and
(bad)
adc
fstp
hlt
(bad)
jp
jbe
inc
lahf
or
retf
cld
adc
add
xor
aas
mov
shl
pushf
bound
in
push
es
or
jp
call
sbb
scas
ins
pop
push
movs
fistp
inc
int3
lahf
mov
and
inc
add
iret
jecxz
cmps
in
cdq
inc
jne
mov
scas
jge
popf
ss
cmp
xor
stc
adc
or
stos
cmp
add
in
cmp
(bad)
aad
call
retf
rol
sbb
sub
mov
sahf
push
popa
or
cmp
jmp
and
rcl
shr
add
cmp
sbb
and
xor
leave
cmp
repz
jbe
push
mov
xor
rcr
jno
or
mov
push
imul
(bad)
std
xchg
add
les
or
imul
lahf
adc
push
dec
pushf
test
dec
out
test
push
scas
cdq
lock
cld
stos
sub
cmps
cdq
dec
push
mov
add
inc
pop
sub
jne
movs
arpl
lods
jmp
cmps
movs
cmps
lods
in
push
pop
neg
fwait
xchg
iret
scas
(bad)
mov
cld
ins
movs
push
or
retf
(bad)
adc
inc
cmp
cmp
dec
adc
or
into
add
and
sbb
cmp
ss
out
sbb
fld
lods
or
sub
jns
or
sbb
xchg
or
xor
push
cmp
ss
xor
(bad)
bound
fnsave
sbb
or
cmps
ds
xchg
and
es
idiv
push
ja
out
aas
repz
out
dec
push
dec
repz
pushf
loop
add
das
fcmovb
jbe
xor
out
pop
repnz
cmp
jmp
(bad)
mov
cmp
sbb
xchg
out
(bad)
sti
in
cwde
sbb
inc
(bad)
push
inc
mov
push
jg
arpl
dec
add
cmps
jb
mov
xor
int
lock
and
data16
sbb
mov
push
std
xchg
sbb
gs
adc
inc
pop
(bad)
mov
cmp
(bad)
pusha
int
jmp
sbb
icebp
dec
ins
xor
pop
cdq
jmp
xor
mov
pop
bound
cld
mov
aad
mov
xor
sbb
je
fiadd
pop
sub
cmp
movs
in
mov
in
or
(bad)
icebp
xor
xor
or
mov
enter
xchg
lods
mov
push
adc
and
mov
popa
popa
lahf
out
lock
mov
rcr
daa
jmp
cmp
fsub
mov
jo
test
test
stos
fistp
sub
stos
es
adc
(bad)
retf
test
pop
push
sub
out
adc
and
inc
mov
adc
lahf
out
mov
jge
repnz
dec
fimul
test
scas
pop
push
test
std
pop
loopne
stc
loopne
mov
mov
add
shl
sub
in
inc
out
or
or
lahf
(bad)
pop
xor
in
sub
iret
stos
mov
(bad)
(bad)
bound
push
je
cld
xchg
cmps
add
pusha
add
imul
lahf
sbb
sbb
push
inc
jbe
jo
data16
ror
jg
inc
aas
pop
cli
push
or
nop
lods
hlt
repnz
inc
mov
enter
cmp
dec
or
test
scas
imul
into
xor
mov
xchg
dec
mov
pop
aaa
ja
pop
or
cdq
and
jmp
xchg
pop
push
pop
popa
or
into
fldenv
jle
cmp
jno
retf
daa
cmp
cmps
or
pushf
(bad)
jo
pop
rcr
xchg
cmp
loop
sub
inc
jle
mov
or
jle
push
adc
ds
retf
out
cmps
jp
dec
push
xchg
dec
imul
jl
mov
dec
call
aam
idiv
retf
int3
xlat
jbe
xchg
or
dec
test
fmul
mov
mov
popa
xor
cmps
(bad)
mov
sub
aad
dec
mov
test
lock
jmp
mov
inc
in
xor
mov
pop
bound
and
inc
pop
push
mov
xor
xor
sub
push
cld
(bad)
xor
add
push
aaa
(bad)
mov
mov
cli
mov
movs
jb
cdq
and
mov
mov
mov
fadd
movs
(bad)
test
sbb
(bad)
retf
cld
cmps
xchg
jp
mov
inc
lds
es
daa
xlat
jb
(bad)
jecxz
aas
dec
inc
daa
sti
adc
push
loope
and
mov
jo
arpl
inc
add
test
xchg
fisttp
xor
fimul
loopne
push
cmps
xchg
add
sahf
and
inc
imul
mov
jbe
shl
shl
or
cmps
hlt
test
add
mov
xchg
adc
popa
jg
out
or
ss
inc
lea
and
in
cmp
jp
push
mov
out
mov
jno
pop
mov
cli
sbb
cmp
jl
rol
push
jge
push
jbe
inc
in
jp
dec
int
jg
jle
popa
mov
js
ins
push
jno
inc
inc
add
jmp
inc
out
jne
nop
push
mov
fbld
fsubr
je
sub
push
call
sbb
(bad)
sub
stos
push
xor
popf
mov
shr
or
push
or
lods
pop
xor
iret
dec
pop
sbb
mov
add
fdecstp
push
inc
pop
jl
or
out
cwde
xchg
xor
cmp
fs
(bad)
pop
leave
mov
inc
lea
or
hlt
xchg
xor
sti
fwait
adc
js
mov
iret
cmc
fdiv
jecxz
jno
or
stos
dec
xchg
mov
inc
dec
or
sbb
xchg
movs
inc
div
and
mov
cmc
ja
push
xchg
dec
je
jp
hlt
rcr
push
outs
mov
xchg
lods
or
(bad)
jecxz
dec
adc
ja
imul
inc
stos
mov
xor
jne
int3
sub
jns
sub
dec
dec
mov
mov
loope
cs
xor
push
and
(bad)
movs
loop
das
mov
fcmovnbe
lock
jo
jle
scas
movs
pop
stc
mov
dec
pushf
fwait
scas
mov
fst
mov
scas
cmps
mov
adc
xor
ins
cmp
mov
scas
mov
pop
dec
ficomp
mov
sub
xor
xor
pop
pushf
fld
mov
xor
or
jmp
mul
add
push
and
sbb
push
iret
repnz
adc
adc
popf
xchg
ja
adc
rcr
iret
push
lods
mov
aas
test
dec
add
(bad)
jbe
xchg
mov
cmp
mov
rcr
lahf
ds
in
fdivr
(bad)
xchg
outs
ret
jbe
xor
int3
call
push
cmp
mov
sbb
adc
mov
out
dec
lods
fcomp
nop
ja
imul
daa
and
mov
sub
daa
or
inc
repz
std
or
xchg
js
nop
imul
shl
inc
inc
adc
or
mov
or
pop
and
(bad)
iret
push
xchg
sbb
xor
sahf
(bad)
jne
sbb
lods
fimul
les
aaa
lods
or
push
push
enter
adc
in
mov
sub
fdivr
shl
push
into
imul
leave
out
cdq
shl
push
rol
das
sahf
mov
mov
dec
mov
mov
push
cmp
adc
cmp
mov
push
cmc
push
ja
ror
mov
mov
outs
add
repnz
imul
adc
dec
loopne
add
shl
xor
dec
cmp
(bad)
aad
sub
and
test
movq
jae
out
sub
cmp
cmc
pop
lods
xor
sub
mov
push
xchg
pop
sub
rcl
std
adc
in
xchg
add
push
vmptrst
shl
sub
push
sbb
dec
jg
sub
mov
(bad)
les
mov
leave
jbe
sbb
and
daa
or
sub
add
xchg
push
add
or
and
scas
les
lahf
(bad)
jb
ror
add
(bad)
adc
push
or
(bad)
fstp
clc
add
lock
les
push
mov
jns
repz
(bad)
aaa
out
cld
je
adc
cs
cld
xchg
and
lods
and
xchg
dec
call
push
repz
aad
aas
dec
lods
mov
pop
fisub
mov
repnz
cld
jae
neg
or
pop
scas
cdq
adc
mov
jg
xchg
(bad)
movs
jno
sub
(bad)
or
push
mov
mov
cmp
mov
or
jbe
push
mov
nop
scas
jp
xor
sub
lds
imul
xchg
jg
mov
xor
or
adc
mov
jmp
mov
movhps
outs
(bad)
leave
and
test
xlat
ins
ret
cli
out
xchg
sbb
sbb
je
ret
fbstp
dec
lds
jge
(bad)
mov
jmp
ret
fxch
scas
into
test
and
je
jp
xor
push
mov
push
(bad)
(bad)
cli
push
pop
sub
add
test
in
out
mov
and
aaa
or
data16
mov
jp
data16
cli
mov
sub
gs
popa
test
and
jne
fs
inc
and
adc
mov
call
bound
(bad)
jmp
xlat
inc
int
inc
xchg
(bad)
test
xchg
std
push
out
add
cmc
ds
sbb
jecxz
stc
or
dec
xchg
jns
out
cmp
mov
shl
add
sti
push
into
ss
mov
mov
mov
sar
cmps
pusha
in
push
out
mov
scas
(bad)
mov
daa
fsubr
sbb
mov
xchg
jge
les
sub
adc
in
mov
or
in
mov
xor
fwait
jle
and
cmp
clc
mov
call
stc
aas
mov
jmp
push
mov
test
push
daa
add
add
outs
mov
xlat
iret
pushf
sbb
sti
lods
mov
retf
mov
cdq
jae
add
xchg
sbb
fnstcw
mov
daa
(bad)
dec
mul
sub
jno
sbb
mov
cli
pop
and
ins
adc
(bad)
and
or
imul
pushf
ins
jne
cmc
pop
loop
(bad)
pushw
dec
mov
fidivr
and
cmc
push
sub
xor
popf
ds
fwait
mov
pop
cmc
xchg
es
movs
les
mov
js
enter
stos
fild
push
in
aaa
mov
popa
pop
push
(bad)
stos
fimul
pop
loopne
xor
jne
mov
scas
mov
test
fdivr
aam
int3
add
cmp
mov
not
lods
dec
addr16
mov
push
popa
jmp
mov
cmp
mov
cmp
(bad)
lods
cmp
into
mov
outs
sahf
pop
aam
sub
mov
sar
fisttp
and
sub
pop
nop
sub
push
sbb
adc
pop
dec
push
clc
std
or
cmps
sub
xor
pop
and
jge
mov
aaa
mov
shr
mov
std
jb
add
pushf
xor
push
pop
es
xchg
jae
add
add
mov
xchg
push
and
lahf
test
lods
ror
mov
stos
adc
imul
add
mov
rcl
and
pop
aaa
ds
sub
inc
sbb
pop
add
fldenv
mov
mov
xchg
adc
xor
shl
(bad)
repnz
test
cwde
mov
push
mov
push
in
test
nop
mov
cs
fwait
push
add
inc
cmc
sti
xchg
(bad)
mov
push
add
add
call
xor
rol
mov
ret
pop
jp
push
dec
movs
sbb
xor
mov
pop
adc
aas
dec
cmp
ins
fnsave
or
mov
dec
test
mov
into
fmul
cmc
inc
jb
shl
and
ins
fcom
inc
xor
out
call
cmp
mov
mov
adc
outs
mov
add
mov
xor
dec
xchg
cmp
push
dec
retf
cmp
push
imul
sar
lods
lds
adc
je
mov
pop
mov
int3
pop
and
retf
pop
mov
ret
popf
(bad)
repz
mov
leave
push
repz
je
mov
or
test
movs
add
ja
mov
cmp
add
xor
fsub
addr16
mov
xchg
sub
cmc
rep
jp
cmp
pop
mov
cmps
imul
outs
dec
xor
dec
cmps
out
cwde
mov
adc
pop
xor
mov
mov
fld
lods
fldcw
retf
xchg
ins
scas
dec
and
sub
hlt
in
lds
inc
mov
cmc
dec
jno
pop
(bad)
mov
retf
cdq
out
mov
dec
dec
xor
dec
sbb
adc
mov
aas
adc
dec
neg
mov
stos
jg
out
cli
stc
xchg
mov
sub
sbb
adc
and
push
mov
add
pushf
int
jge
outs
fnstsw
mov
sbb
adc
dec
adc
mov
test
pushf
mov
movs
xchg
jmp
push
mov
(bad)
(bad)
loopne
sub
(bad)
std
mov
repz
imul
sar
mov
mov
(bad)
mov
inc
push
adc
push
pop
aad
inc
rol
sbb
cmps
sub
sbb
and
sub
push
inc
pop
add
sub
add
mov
adc
dec
ret
cmps
cmp
ins
push
cmp
dec
mov
push
sub
mov
and
out
fisubr
in
les
das
dec
nop
jo
push
cli
cs
rcl
or
cmp
mov
(bad)
jle
add
mov
mov
add
mov
mov
bound
add
mov
mov
(bad)
ins
mov
popf
stos
mov
push
mov
les
dec
ss
test
(bad)
fisub
arpl
fisttp
fbstp
out
push
pop
dec
mov
loopne
sar
add
frstor
dec
loop
ja
shl
inc
inc
aas
inc
cmp
fldenv
mov
sti
or
mov
(bad)
and
sbb
bound
jmp
scas
adc
push
inc
jecxz
imul
in
std
or
(bad)
pushf
cs
and
(bad)
outs
not
cmc
sub
add
xor
pop
mov
shl
lods
repz
rol
je
clc
jg
out
shl
dec
loope
in
cmp
inc
sub
pop
ret
jb
push
(bad)
movs
(bad)
je
xor
cs
or
xor
adc
mov
mov
cwde
jnp
mov
(bad)
lods
pop
push
cdq
and
sub
ret
aaa
jle
pop
fisub
jecxz
cli
mov
loop
mov
jg
push
xchg
mov
mov
retf
adc
or
xchg
movs
cmc
retf
test
out
iret
lock
addr16
fnsave
mov
leave
push
inc
add
inc
jmp
mov
dec
call
sar
mov
xchg
ins
fcomp
jno
cli
call
movs
(bad)
lods
mov
pop
xchg
jnp
jnp
adc
sub
inc
mov
cmps
xor
fcomi
pop
adc
daa
jo
pop
imul
xchg
lods
fst
aaa
push
idiv
fs
ror
ret
fistp
sbb
(bad)
(bad)
xchg
or
pop
es
or
fdivp
das
mov
movs
jp
mov
out
into
dec
add
push
lods
test
pop
repz
daa
icebp
jo
(bad)
fmulp
hlt
inc
push
jg
dec
push
fdivr
out
(bad)
or
pop
mov
es
ds
mov
or
xor
dec
inc
push
fsub
cmps
push
retf
ins
mov
int
dec
sub
fisub
std
jb
pusha
cmp
out
cmps
popa
cs
push
inc
and
jecxz
wrmsr
mov
mov
out
aaa
xchg
cmp
pop
pop
dec
cmps
ss
sahf
dec
mov
xor
sbb
dec
fs
mov
jecxz
push
retf
loope
stos
pusha
fwait
std
(bad)
int3
sub
clc
mov
push
stc
push
fisubr
jmp
ret
mov
in
mov
sbb
jae
cmps
and
stos
and
add
in
push
xchg
repnz
push
mov
mov
imul
or
xchg
loop
iret
mov
in
push
jae
xchg
and
(bad)
xor
dec
repnz
in
mov
push
sub
inc
mov
mov
outs
ret
cmps
jg
and
popf
xchg
dec
inc
mov
stos
pop
daa
popa
fisttp
and
imul
or
and
or
mov
add
jae
jg
sbb
mov
xchg
dec
(bad)
aam
popa
xchg
lods
callw
loope
jno
outs
out
and
xor
pushf
jno
inc
fwait
push
loopne
pusha
jp
mov
daa
jno
adc
add
mov
nop
xchg
aam
icebp
sub
mov
hlt
xchg
jns
xor
(bad)
call
xor
loop
adc
ret
mov
aaa
jae
pop
sub
data16
jnp
mov
xlat
test
mov
scas
in
sahf
sub
ret
xor
inc
jne
cli
adc
add
inc
test
dec
int
add
ins
xchg
pushf
dec
fist
out
popf
and
push
test
fidiv
sbb
daa
xchg
inc
imul
loop
cmp
sbb
fmul
fs
mov
jg
jmp
leave
lock
out
and
add
dec
stc
ja
call
xor
inc
pop
pop
aam
(bad)
add
test
inc
outs
jmp
and
jecxz
mov
jp
pop
pop
mov
pop
push
mov
jge
fimul
sbb
pop
adc
imul
jns
(bad)
(bad)
and
dec
mov
in
xor
dec
xchg
aas
loop
add
fs
jno
xlat
out
and
(bad)
mov
stos
inc
pop
mov
fbld
lahf
mov
shr
xor
xor
std
rol
add
jecxz
pop
adc
jmp
fsub
cmp
push
retf
ds
mov
je
xchg
mov
movs
mov
out
iret
dec
sbb
out
cld
xchg
xchg
lock
inc
jle
cmp
cdq
in
adc
pop
aam
aad
addr16
fistp
aad
test
mov
dec
mov
lea
je
daa
idiv
push
sar
xor
mov
outs
cwde
mov
mov
push
jge
pop
shl
test
dec
outs
les
neg
jns
test
add
bound
popa
enter
inc
inc
pop
sbb
ins
add
in
push
inc
or
repnz
mov
div
xlat
test
sub
test
js
xor
sbb
push
jg
adc
mov
repnz
push
sahf
mov
pop
gs
push
test
sbb
popa
and
stos
jp
mov
mov
xchg
jo
pop
adc
and
fwait
sbb
ja
ret
dec
movs
mov
loope
mov
data16
inc
sbb
push
aad
xor
(bad)
leave
sub
in
sbb
lahf
js
test
stc
push
push
movs
pop
add
mov
mov
out
popf
sbb
cs
or
xchg
and
mov
cwde
clc
and
mov
push
push
int
fcmovnb
mov
fbld
sbb
inc
(bad)
push
lahf
or
jle
push
push
mov
pop
lods
bound
jae
mov
bound
lahf
xor
adc
and
cmp
pusha
and
push
sub
mov
cmp
jmp
push
call
adc
(bad)
imul
cdq
inc
stos
cmp
fld
mov
fild
loop
leave
sahf
mov
lods
jno
push
sub
shl
jbe
cmp
mov
rol
add
mov
(bad)
mov
sti
int3
sub
pop
cmp
fild
sub
push
dec
push
cmp
in
jbe
or
ret
or
cli
mov
cld
fdivp
rcl
push
ins
xor
lahf
loop
cmp
sub
(bad)
pop
mov
setge
jo
mov
adc
or
xor
mov
cli
retf
cmp
into
pusha
xor
inc
xchg
and
mov
cdq
cmc
out
adc
fnstsw
sbb
xor
dec
adc
loopne
addr16
push
xchg
fld
sbb
sbb
sbb
push
cli
mov
lods
es
scas
xchg
xor
ror
fldpi
fldenv
jmp
jae
test
add
lahf
(bad)
div
adc
and
sbb
popf
and
xchg
dec
mov
dec
call
pop
ret
aad
call
retf
in
xchg
xchg
push
and
dec
repnz
repz
fisubr
jecxz
xor
sbb
test
sub
mov
xor
shl
sbb
mov
add
sub
lock
mov
shr
cmp
sti
dec
cmp
cmp
out
fdivr
gs
je
stos
jle
fsubr
stos
int3
fidiv
dec
in
movs
lods
cmps
fs
dec
bound
or
and
stos
adc
cmps
sub
mov
call
enter
mov
add
xor
cmp
adc
jnp
push
jo
sub
mov
cmp
push
call
mov
in
mov
lods
adc
ds
aaa
test
push
bound
jbe
out
push
lods
mov
cmp
out
or
repz
adc
movs
stos
cmp
retf
ds
iret
push
mov
mov
cmp
lods
mov
retf
inc
scas
sbb
pop
jns
nop
or
xchg
mov
xlat
pushf
mov
adc
and
je
rcl
xchg
retf
lods
pop
outs
dec
stos
fdiv
jmp
sub
test
sti
fnstcw
jbe
bound
add
mov
lock
dec
mov
cmp
test
int3
dec
das
lahf
mov
add
mov
dec
sub
ret
stos
cmp
ficom
fld
and
mov
or
sahf
aad
rol
inc
call
adc
sti
pop
jno
lea
icebp
fdiv
sub
cmp
xchg
push
dec
xor
jmp
mov
sbb
or
mov
mov
ret
mov
outs
mov
movs
leave
pushf
loop
jl
in
movs
ror
adc
jg
hlt
and
fdivr
mov
in
mov
jb
pop
mov
in
scas
add
mov
mov
jmp
mov
adc
adc
sub
inc
xor
xlat
jno
dec
add
add
push
sbb
in
mov
shr
leave
dec
xchg
or
mov
adc
cmp
pop
push
mov
xchg
nop
loopne
and
xor
mov
mov
out
(bad)
shr
add
push
xchg
popf
mov
fistp
or
fbstp
cmps
sbb
cmp
and
xor
xchg
repz
inc
sar
aaa
rcl
es
fimul
mov
xchg
cdq
sub
pop
ja
jecxz
fisubr
cmp
and
repnz
test
sbb
out
movs
or
inc
fisub
bound
jp
add
mov
xor
inc
add
js
test
dec
dec
ret
test
sbb
push
mov
fstp
cmps
mov
sub
sbb
pop
mov
pop
sbb
or
dec
dec
fwait
aad
dec
mov
mov
ja
dec
inc
ds
sub
call
pop
lods
repz
push
xor
add
dec
std
repnz
mov
dec
xor
(bad)
iret
loope
daa
fs
add
add
(bad)
fs
jmp
mov
mov
es
xchg
cmp
inc
adc
cmp
cwde
in
pop
xchg
rcr
fist
cmps
retf
wbinvd
and
jnp
fild
repnz
mov
jg
cmp
stc
inc
cmps
sub
dec
push
rol
jb
in
sbb
pusha
jns
dec
xor
inc
in
xchg
iret
hlt
jg
jb
xor
push
div
push
(bad)
cmp
movs
push
mov
add
adc
in
paddsw
fild
and
mov
add
xchg
out
mov
in
je
mov
xchg
lahf
and
les
sbb
sbb
pop
neg
cmp
dec
pop
xor
fadd
leave
mov
and
inc
pop
fisub
sbb
pushf
fisttp
jae
(bad)
sbb
aas
(bad)
bound
es
div
adc
mov
out
jmp
or
inc
sub
mov
fnstsw
add
dec
and
jno
cmc
mul
mov
arpl
push
push
shl
adc
jae
div
les
leave
pop
or
(bad)
add
cmps
shr
dec
frstor
push
cmc
mov
add
enter
jecxz
repz
jae
fst
loope
cmps
inc
xchg
mov
out
ins
jae
adc
fwait
jo
(bad)
cmp
enter
mov
adc
pop
xor
sub
mov
or
cdq
and
outs
ss
ret
add
(bad)
sub
mov
dec
dec
mov
dec
stc
jns
sbb
fisub
mul
mov
out
inc
gs
xchg
mov
fcomp
popa
sbb
std
xchg
cmps
int
xchg
in
mov
vmread
(bad)
push
(bad)
pop
mov
push
les
and
xlat
test
call
cmp
mov
popa
scas
push
xchg
xor
pop
mov
rcl
push
push
dec
xor
mov
or
sub
mov
lods
mov
fisubr
xchg
mov
xor
cmp
jne
data16
ror
test
mov
adc
and
(bad)
cmp
ins
shl
stos
addr16
cs
loope
and
cli
jmp
in
inc
xchg
cmc
xchg
mov
mov
in
cmps
fwait
loop
imul
fisubr
inc
add
mov
and
or
icebp
mov
mov
lock
test
xor
aaa
push
adc
nop
cmp
pop
(bad)
inc
cmp
sub
(bad)
pop
add
mov
fmul
addr16
dec
in
das
std
popa
sub
push
out
aad
sbb
push
jmp
iret
or
data16
or
mov
mov
xor
cmp
inc
shr
mov
jae
mov
imul
sbb
setp
xor
sub
sbb
sbb
inc
(bad)
(bad)
add
or
call
aad
fbld
out
loope
ins
js
fdivr
add
int
or
xor
pop
enter
cmps
sbb
dec
retf
mov
pop
mov
ja
hlt
add
jne
stc
pusha
sbb
or
add
push
test
sub
or
arpl
in
inc
test
cmp
in
dec
add
mov
pop
pop
cli
push
jl
stc
enter
(bad)
cmps
or
dec
mov
imul
sub
cs
aad
pop
xor
lods
push
xor
inc
sub
icebp
imul
in
int3
das
add
jb
pop
std
push
cmp
movs
hlt
mov
xor
and
fld
rcr
lahf
mov
mov
xchg
in
les
adc
ss
push
xchg
add
mov
cmps
mov
sub
xor
stc
inc
and
and
jb
imul
inc
les
jbe
dec
ficom
add
popf
mov
mov
jmp
push
adc
and
in
inc
adc
xlat
push
gs
cmc
or
rcl
ret
mov
gs
jb
dec
mov
pop
inc
inc
push
dec
cmps
lods
adc
in
std
sub
xor
cld
aam
mov
mov
add
lods
cld
es
or
rol
sub
jo
loop
imul
mov
mov
xchg
ins
mov
mov
shl
ins
daa
pop
push
sti
or
jbe
jae
(bad)
stc
out
cmp
popf
pop
icebp
push
jmp
test
adc
icebp
xchg
imul
in
jg
sub
lods
repz
lea
retf
(bad)
and
mov
ret
repz
sbb
leave
sbb
loop
push
xchg
loope
dec
(bad)
jle
mov
cmp
repz
mov
or
adc
repnz
addr16
and
ins
cmp
and
daa
dec
cld
test
mov
adc
push
jnp
fist
cmc
mov
enter
test
inc
cmp
xchg
jg
push
jno
(bad)
cwde
sbb
or
pop
sbb
adc
inc
ucomiss
scas
sub
daa
les
sbb
test
adc
cli
dec
movs
dec
int
pop
js
imul
addr16
fnstcw
pop
es
fs
fldcw
mov
adc
ret
(bad)
mov
pusha
or
aaa
ror
cmps
idiv
xor
mov
loop
repnz
int
xchg
daa
icebp
pop
(bad)
(bad)
sti
mov
jmp
icebp
xor
cld
push
cmp
imul
cdq
mov
iret
mov
jmp
out
sbb
or
adc
aam
cmp
(bad)
outs
pop
sbb
ret
xor
inc
xor
jle
(bad)
(bad)
fcom
lock
mov
push
in
sbb
or
push
jmp
cmp
sub
jl
jge
inc
jae
dec
mov
fdivr
sub
out
xor
mov
lods
cmp
pop
pop
sbb
test
xlat
push
mov
add
outs
iret
call
sub
ficom
xchg
movs
push
and
fadd
xor
fyl2xp1
loope
dec
call
xor
jo
or
adc
in
xchg
jnp
xor
add
aad
cmps
mov
mov
xchg
push
or
and
stos
add
jp
scas
and
pop
push
mov
sbb
dec
cmp
pop
mov
or
imul
loop
jg
and
mov
nop
push
repnz
pop
(bad)
adc
shl
cmp
pop
cs
mov
push
xchg
jnp
xchg
inc
add
mov
jmp
aas
aad
ror
jb
mov
lods
js
xchg
test
mov
lock
pop
mov
mov
or
sbb
mov
jg
and
jg
adc
pop
arpl
stos
ret
adc
xchg
rcl
and
mov
add
adc
out
cmps
and
fbstp
icebp
cmc
dec
nop
dec
push
mov
mov
dec
retf
mov
jno
mov
repz
aam
scas
dec
test
in
pop
aas
xor
icebp
dec
sub
movs
push
pop
in
gs
jle
sbb
or
inc
jmp
pop
ror
push
inc
push
je
jecxz
inc
pop
mov
and
jb
lock
xchg
pop
movs
cmp
scas
das
jle
push
das
rcr
and
sti
mul
push
jle
pop
or
(bad)
sub
pop
mov
adc
int
test
push
pop
xor
sahf
out
retf
push
xor
push
jge
jl
inc
in
test
scas
mov
pop
or
pop
popa
ins
(bad)
add
inc
and
hlt
loope
adc
push
inc
lea
mov
fdiv
pop
addr16
adc
inc
mov
xchg
adc
les
ins
call
ret
dec
pushf
push
xchg
mov
jmp
ret
jge
or
push
jl
adc
fcomp
repnz
push
call
pop
jp
sub
enter
call
cmp
dec
or
sbb
ds
shl
or
sbb
fwait
cdq
(bad)
loopne
mov
mov
out
or
popf
mov
jecxz
fldlg2
dec
xchg
nop
ss
jmp
pop
mov
adc
sub
arpl
cld
xchg
mov
push
bnd
or
nop
cmps
and
jns
aaa
dec
test
movs
in
lods
es
sbb
in
dec
cmp
(bad)
xlat
mov
or
push
push
test
ret
stc
mov
neg
push
arpl
shr
pushf
in
xlat
mov
dec
mov
shr
pop
jno
dec
lods
jg
mov
imul
or
repz
sub
mov
push
sbb
jle
mov
out
scas
or
jae
imul
xor
sub
mov
jo
aam
mov
out
jns
sti
fidivr
aad
stos
mov
(bad)
mov
jmp
test
jle
mov
mov
ds
mov
and
je
pop
retw
and
and
cmc
mov
and
cmp
out
xchg
or
sbb
in
scas
xor
clc
xlat
adc
leave
fwait
jnp
call
outs
div
retf
(bad)
or
mov
outs
mov
push
inc
pop
inc
adc
movs
inc
movs
cmp
mov
icebp
mov
pop
pushf
jne
iret
lock
cmp
int3
and
mov
in
fidivr
jo
add
and
add
lock
mov
cmp
inc
or
xor
jbe
mov
adc
fidivr
outs
xor
loope
aas
imul
jns
sub
sub
cmp
adc
xor
in
dec
xor
rcl
mov
sub
retf
inc
(bad)
test
out
clc
repz
ins
dec
pushf
cmp
sti
adc
pop
push
mov
xchg
fsubr
ror
adc
adc
shl
fisubr
mov
out
inc
cwde
inc
ja
mov
in
sti
push
cmp
push
sub
mov
xchg
pop
add
loop
sub
iret
gs
pop
jae
pusha
cmp
(bad)
mov
enter
mov
into
push
movs
in
add
loopne
and
outs
mov
xchg
lods
sub
out
add
scas
(bad)
ds
push
imul
adc
in
xor
pushf
loope
shr
or
push
mov
div
mov
push
arpl
xchg
jp
jecxz
mov
mov
test
ja
gs
retf
rcl
sti
cld
sbb
pop
jbe
xchg
jle
call
xchg
pop
and
mov
shr
sbb
mov
ds
lahf
test
sbb
inc
sub
shr
sub
sbb
fisttp
push
jbe
mov
mov
or
mov
loopne
es
dec
aas
push
nop
and
adc
sti
jbe
and
or
inc
fdiv
sub
sbb
faddp
pusha
ret
dec
cs
or
cmp
pop
mov
sbb
xchg
sbb
push
fadd
xchg
mov
aaa
dec
mov
scas
dec
inc
jae
sub
mov
loope
shl
loope
or
pop
js
push
(bad)
cmpxchg
bound
sub
sbb
xchg
loope
stos
ret
xchg
movs
bound
rcr
push
pop
mov
jmp
jle
ret
imul
js
sar
fmul
xor
neg
and
ret
add
int3
push
sub
loope
dec
xchg
movs
mov
ret
xor
push
jns
inc
add
mov
in
jmp
int
js
cmp
jno
loop
push
jg
inc
(bad)
mov
loope
dec
mov
jle
daa
imul
jmp
in
mov
mov
movs
jae
cmps
inc
es
popa
mov
retf
shl
(bad)
scas
not
loopne
cmp
inc
std
enter
sbb
xor
cmp
ins
xchg
fwait
add
scas
dec
out
js
mov
sti
mov
dec
fidiv
loop
(bad)
sub
or
lock
shl
xor
into
test
pop
push
pop
xchg
and
daa
mov
push
mov
push
ds
sbb
mov
and
dec
cs
or
cmp
xor
aad
mov
enter
sbb
call
jo
in
mov
mov
imul
ss
xchg
int
or
shr
jle
adc
jmp
xchg
fs
in
ja
add
inc
add
jl
mov
loop
clc
call
adc
jns
scas
jb
pop
mov
aad
cld
jae
lods
adc
dec
inc
mov
test
push
dec
fs
and
inc
nop
int
fidivr
jae
movs
or
push
out
(bad)
lock
js
ins
jp
dec
js
cli
pop
stc
popf
dec
push
sub
or
cmp
inc
sbb
push
xor
xchg
scas
sub
stos
inc
cmp
mov
aas
jg
stos
retf
mov
cmc
mov
add
fbstp
push
dec
inc
jg
stc
test
cmc
adc
push
xchg
je
dec
test
lea
push
pushf
pop
jbe
and
dec
pop
push
rol
pop
test
pop
push
or
sub
mov
fbld
or
std
push
in
xchg
shl
mov
adc
pop
sbb
push
mov
sbb
ss
mov
jle
xor
push
mov
mov
dec
test
xor
push
or
mov
ret
fsub
or
jmp
std
add
enter
mov
jge
sbb
(bad)
jmp
cmp
retf
xor
sbb
xor
in
xchg
jmp
cmps
push
ja
sub
cmp
push
loope
add
push
fwait
leave
in
and
adc
mov
fwait
out
bound
sbb
push
out
cmc
(bad)
mov
pop
pop
inc
push
rcl
xchg
out
fld
cmps
sub
dec
jg
jno
in
cmp
xchg
mov
push
or
enter
xchg
sahf
sbb
sub
cmc
jb
enter
aas
xor
jecxz
or
shl
std
pop
test
cmp
inc
dec
sbb
(bad)
leave
pop
and
lahf
push
sbb
rcl
sbb
ret
dec
and
daa
xor
in
imul
leave
aam
pop
cs
(bad)
aad
sub
jge
jmp
std
mov
repnz
call
xchg
in
cmp
neg
mov
int
fsincos
sbb
sar
sbb
mov
gs
dec
xchg
gs
lea
sahf
fst
xor
lock
mov
aam
(bad)
sbb
mov
gs
xchg
inc
cmps
mov
jmp
sub
xchg
out
mov
frstor
pop
cs
adc
xlat
mov
ins
ins
pusha
push
dec
cmp
and
pop
ror
sbb
jno
call
and
fadd
fwait
add
sub
in
div
jb
cmp
xor
push
xor
jg
push
inc
jge
pop
aam
mov
out
cmps
mov
repnz
mov
out
(bad)
mov
imul
dec
pop
mov
adc
sbb
call
push
dec
or
gs
and
cmp
pop
xor
sbb
jmp
mov
test
sbb
mov
dec
ins
mov
xor
sbb
test
call
test
sub
dec
repnz
fwait
stc
in
mov
mov
aaa
push
sub
pusha
(bad)
aad
dec
and
arpl
push
fsub
div
mov
inc
imul
std
bound
sti
repnz
adc
or
stc
scas
mov
or
xchg
out
sub
lahf
or
inc
fisubr
lds
sub
in
cmp
stc
int
mov
cmps
fdiv
pop
cdq
sbb
cmps
jne
sub
adc
es
cmp
xor
cmps
(bad)
fs
pop
cmc
sbb
imul
mov
sub
ja
idiv
rcl
or
(bad)
shl
sti
call
sub
aad
mov
repnz
mov
push
inc
cdq
push
jg
in
ds
push
mov
jl
loope
push
push
push
inc
fldenv
(bad)
lock
(bad)
fs
std
lods
adc
stos
(bad)
outs
rcr
xor
dec
test
adc
mov
je
mov
loope
dec
out
xchg
push
push
xor
push
pop
xchg
jne
pushf
std
push
in
add
jb
xor
mov
pop
fdivr
pushf
rcr
cmp
cmp
mov
test
xchg
inc
rcr
sahf
(bad)
and
push
pop
ins
mov
std
pushf
inc
xor
xor
and
aam
jg
mov
sbb
mov
xchg
popf
xchg
popa
jns
rcl
jge
inc
out
cmc
adc
add
jns
cmps
adc
into
mov
push
cs
mov
mov
dec
or
ret
fs
mov
js
inc
pop
xchg
jb
and
sahf
xchg
cwde
lds
enter
pop
mov
sti
push
dec
lds
arpl
arpl
sti
sti
sub
cmc
fdiv
pop
cwde
and
sbb
or
cmp
ins
lods
cmps
xor
pop
mov
pop
pop
adc
rol
aad
scas
aas
push
outs
stos
out
mov
pop
or
sub
test
rol
inc
xchg
pop
jnp
sub
iret
sti
aam
outs
rol
add
jl
ret
ins
in
movs
add
push
(bad)
cmc
stos
adc
lds
push
push
and
in
out
push
push
call
fs
mov
mov
call
dec
add
add
xchg
pusha
cmps
xchg
ins
xchg
daa
fs
sub
daa
enter
inc
push
mul
dec
int
adc
je
inc
cmp
das
imul
lahf
(bad)
enter
pop
jg
mov
int3
adc
jbe
fist
dec
jb
bound
enter
rol
push
stc
je
test
dec
pop
bound
hlt
cmc
dec
fdiv
mov
nop
xor
icebp
inc
mov
cmp
xlat
fwait
fs
push
sbb
test
xchg
jmp
dec
dec
fiadd
pop
dec
add
mov
push
pop
outs
jmp
rcr
aam
lahf
sub
cmp
mov
add
jae
push
ret
inc
in
jnp
add
mov
cmps
rcl
push
pop
clc
out
inc
and
cmp
icebp
addr16
rol
ins
jl
xlat
inc
mov
popf
pop
mov
fistp
adc
imul
cmp
out
xchg
inc
xchg
adc
das
lock
aam
js
xor
dec
sbb
sub
(bad)
inc
sbb
and
test
ret
popf
das
mov
bnd
popa
mov
mov
pop
mov
ret
adc
out
ins
aaa
dec
xor
arpl
test
fisubr
jno
aaa
adc
mov
xchg
in
(bad)
and
xlat
outs
or
int3
mov
cmp
in
hlt
adc
ret
(bad)
ja
shl
xor
(bad)
push
cmc
jbe
jnp
scas
add
pop
fcomip
inc
xchg
pop
mov
mov
(bad)
retf
ins
shr
mov
xor
lock
(bad)
(bad)
mov
out
ins
pop
mov
mov
xor
cmps
movs
fwait
push
dec
std
push
mov
fsub
mov
outs
xor
sub
inc
sbb
test
mov
daa
push
js
or
mov
mov
test
jo
es
shl
sbb
add
imul
fs
jmp
stos
cmp
jno
shr
jb
test
mov
pop
in
aaa
sbb
cwde
int
ins
js
in
adc
out
bnd
retf
adc
lods
mov
xchg
inc
mov
popf
mov
or
std
adc
push
pop
int3
ret
mov
mov
movs
outs
xor
mov
mov
adc
pop
jmp
or
sar
cmp
sar
(bad)
sar
pop
sub
movs
ja
and
shl
xor
(bad)
and
adc
xchg
stos
outs
and
mov
dec
sti
stos
xchg
add
leave
push
enter
or
xor
loope
(bad)
(bad)
adc
dec
movs
sahf
fcomip
pushf
movs
adc
push
mov
cmp
out
fdivrp
adc
cmc
cmps
push
inc
or
push
mov
es
push
fsub
and
int
cmp
jo
(bad)
loope
pusha
stos
mov
mov
xchg
sbb
test
shl
adc
call
dec
nop
imul
sbb
push
out
call
adc
out
xchg
ss
and
jge
add
outs
(bad)
pop
mov
push
shr
dec
xor
xor
mov
cmp
jmp
mov
movs
pop
or
test
inc
test
pop
lock
fdivr
xchg
(bad)
std
push
(bad)
stos
mov
add
pop
in
mov
adc
in
and
mov
enter
mov
repnz
add
pop
or
pop
push
pushf
and
xor
cmps
int3
ror
inc
lods
lock
cli
outs
cmp
fwait
xchg
push
push
imul
xchg
test
fwait
or
in
dec
adc
loope
mov
xor
xchg
xchg
jg
cmp
inc
in
movs
aaa
lods
ins
sbb
cld
push
sbb
mov
vpsubusb
scas
outs
pop
dec
fistp
sbb
stc
fisttp
push
lods
jp
bound
mov
cmp
cmps
mov
adc
stos
cwde
iret
pop
aad
sbb
and
(bad)
lahf
sbb
jne
jge
xchg
sar
push
push
xchg
nop
ja
in
dec
pop
mov
mov
(bad)
fnstenv
xor
lock
imul
pop
mov
pusha
pushf
cmp
xchg
add
enter
add
cmp
ret
cld
inc
or
in
aaa
imul
sbb
fdivp
cli
mov
fisub
xchg
es
test
push
sbb
stc
mov
fcomp
imul
jae
jmp
out
setle
stos
hlt
aaa
(bad)
push
fwait
jle
mov
jnp
into
clc
jge
and
pop
gs
in
ds
sbb
and
push
enter
movs
lds
es
lds
or
jl
fcomi
enter
dec
mov
hlt
sub
pusha
out
mov
cmc
inc
jns
mov
xchg
xor
outs
sub
mov
les
push
add
mov
dec
cmc
cwde
jns
inc
or
fcmove
fwait
popa
fild
ss
fadd
shl
dec
dec
xor
sub
sub
adc
nop
push
xchg
rcl
mov
popf
xlat
mov
rcl
outs
sub
loope
rcl
mov
add
push
jnp
imul
push
cld
loope
ins
push
jmp
sar
xchg
sub
fbld
mov
es
and
cmps
dec
push
lds
ror
jge
push
inc
cmps
(bad)
sahf
pop
push
test
addr16
loopne
pushf
ja
clc
xchg
or
div
lock
hlt
xor
jl
outs
jmp
cld
stos
jbe
je
or
lock
imul
clc
adc
popa
sahf
jae
mov
test
sbb
xchg
cld
jbe
mov
and
pusha
mov
xchg
je
fdiv
call
xor
mov
push
test
push
jne
stos
xor
push
loop
xor
sbb
imul
rol
stos
xor
sbb
inc
mov
sbb
or
int
leave
cmp
inc
lods
mov
xchg
xchg
adc
rol
mov
jmp
and
and
inc
or
mov
rcl
cmp
xor
lods
adc
mov
mov
push
ja
gs
xchg
stos
mov
aad
push
sub
and
ror
sub
pushf
pop
or
imul
jmp
and
xor
push
xchg
mov
ja
sbb
inc
scas
fs
push
shl
call
int
lods
or
into
xchg
in
cmp
mov
(bad)
xor
jmpw
movs
adc
xchg
cmp
push
xchg
jno
mov
and
sbb
cs
inc
cmp
xor
jne
pop
out
mov
pop
loop
mov
jo
or
fs
push
sub
ins
sbb
movs
stos
pop
cmc
dec
sbb
mov
test
cld
jb
int
pop
adc
pop
movs
fsub
inc
jp
leave
sbb
cmps
lds
mov
int3
jp
icebp
lea
or
fs
rcr
sbb
ds
pop
push
mov
mov
add
push
sahf
lea
add
mov
call
push
fidiv
les
sbb
fs
repz
fwait
pop
cwde
mov
xor
adc
(bad)
cs
stc
ror
repnz
xchg
out
adc
arpl
sbb
sbb
adc
imul
sahf
xchg
sar
lock
sub
inc
push
aad
sub
in
push
pop
iret
mov
or
pop
out
pop
lea
push
(bad)
push
add
repnz
add
mov
or
int
mov
xchg
call
mov
fcom
jg
sub
adc
fild
mov
pop
cmp
loope
pop
jo
movs
ins
push
and
(bad)
or
pop
mov
aad
add
stc
movs
inc
jle
push
std
iret
mov
jne
dec
mov
jno
in
xchg
into
int
ss
mov
jmp
and
repz
je
xor
inc
inc
es
or
pushf
out
lock
mov
pop
nop
adc
jle
push
sub
movs
aam
loop
aad
cwde
ins
outs
add
xor
and
and
add
or
xchg
cld
mov
jl
fwait
xor
lea
cmp
pop
ins
push
test
push
push
js
and
and
pop
pop
lahf
pop
jbe
fwait
outs
and
jne
lahf
aaa
mov
jae
push
jle
jbe
aaa
mov
out
out
xchg
add
xchg
aas
mov
cli
(bad)
push
mov
push
adc
jnp
fld
and
je
mov
sbb
ret
out
pop
movs
pop
loopne
xor
movs
daa
loope
shl
fsub
adc
adc
or
mov
in
ret
dec
mov
cmp
cmps
loopne
sbb
jp
or
retf
sbb
pop
ja
xchg
jb
movs
push
test
jl
mov
das
add
or
cmp
cmp
pop
nop
sbb
shr
cmp
inc
test
retf
mov
add
sub
out
jl
add
pop
pop
loop
cmp
std
std
add
ins
imul
jnp
xchg
test
scas
add
fidiv
es
(bad)
sahf
push
ins
inc
inc
(bad)
mov
into
in
test
add
sbb
arpl
xchg
mov
movs
fcmovb
mov
inc
mov
lds
ins
inc
in
adc
cmp
dec
add
adc
dec
jnp
pop
dec
clc
adc
jmp
fidivr
stos
test
push
cdq
bound
cmp
js
mov
xchg
nop
push
mov
cs
scas
mov
nop
mov
loopne
outs
sub
fadd
imul
pop
xchg
mov
xor
imul
fisub
sub
and
push
cmp
mov
out
int3
dec
mov
mov
sub
jns
xchg
mov
push
pop
neg
jbe
mov
enter
fidivr
sbb
pop
dec
push
test
sbb
popa
das
and
into
cmc
imul
ret
ss
or
inc
and
call
dec
pop
iret
loope
fstp
les
cmc
inc
aas
mov
jnp
div
mov
pop
shl
fcmovnbe
jb
gs
fimul
dec
cld
mov
dec
or
xchg
or
jo
xlat
cmps
mov
cmc
test
test
sahf
sbb
cmp
inc
fisubr
push
adc
movs
mov
jle
inc
repnz
sbb
push
nop
xor
xchg
pusha
lods
hlt
fs
mov
in
and
mov
mov
je
popa
rcl
cmp
mov
movs
cmp
mov
mov
shl
icebp
pop
hlt
(bad)
cld
xor
bound
movs
sbb
mov
test
xchg
jno
(bad)
jecxz
cld
aas
mov
call
xchg
cmps
mov
push
sub
ret
sub
push
sub
data16
jmp
mov
dec
enter
movs
mov
cmp
push
in
adc
xchg
push
xor
mov
neg
inc
jmp
cmp
ins
sbb
or
mov
lahf
pop
jp
dec
fucom
mov
into
adc
xchg
stos
movs
jno
in
mov
icebp
fwait
movs
in
test
xchg
test
sar
(bad)
mov
lods
fnstcw
mov
addr16
aas
retf
arpl
cmp
mov
mov
arpl
pop
sub
hlt
dec
test
pop
movs
dec
xor
cmp
shr
adc
jne
dec
push
fcom
fcom
shl
mov
pusha
cmp
clc
sar
fsub
xchg
in
mov
pxor
mov
ror
pop
(bad)
in
push
ror
pop
iret
stc
aam
or
clc
mov
ss
jg
xchg
adc
dec
and
idiv
enter
gs
fchs
and
xor
mov
into
dec
out
cmp
mov
test
push
(bad)
cmp
or
ins
sbb
pop
sub
dec
mov
xor
xlat
push
out
lahf
test
movs
sub
push
jp
js
test
xor
retf
mov
es
arpl
xor
jns
or
std
xlat
aad
adc
sbb
call
int3
push
inc
sti
pop
ja
add
mov
sbb
ret
mov
rol
mov
jb
aad
data16
stc
lods
fistp
test
sbb
push
sub
jge
ret
imul
adc
(bad)
mov
jmp
(bad)
cmp
vpand
fcmovnbe
les
adc
mov
arpl
out
and
mov
adc
dec
and
fxch
mov
mov
aad
sub
xchg
stos
enter
xor
dec
push
push
in
dec
loopne
inc
icebp
pop
jne
mov
push
add
lods
cmp
add
sub
std
scas
mov
xor
cmp
in
mov
push
lds
jmp
popa
pop
cmp
lahf
inc
sbb
ins
inc
mov
xchg
(bad)
jecxz
cdq
shl
js
xor
(bad)
fldcw
call
add
movs
mov
cmp
and
popa
iret
and
nop
mov
out
test
jmp
movs
arpl
sbb
(bad)
in
outs
repz
pop
outs
mov
jnp
add
xchg
xor
jle
in
bound
cmps
rcr
sbb
sbb
stc
xchg
enter
and
lods
lea
lods
aaa
das
dec
popa
popa
cli
popa
or
pop
jmp
cmp
adc
jo
test
xchg
shr
dec
setl
rcr
dec
jmp
enter
add
sbb
inc
scas
lock
xor
sub
and
push
bound
mov
jmp
aad
dec
cmp
aaa
mov
ret
cmps
adc
push
mov
dec
add
pop
fsubr
dec
add
or
mov
adc
daa
test
inc
xor
inc
fistp
int3
fstp
repnz
inc
lods
jg
pop
and
xchg
inc
cwde
(bad)
jmp
jbe
xor
test
aas
js
mov
mov
pop
push
xchg
cmc
int3
jb
fwait
lock
ss
push
xor
xor
clc
inc
lods
dec
sahf
scas
push
cmpxchg
xchg
jmp
push
pop
inc
loopne
push
out
cmp
mov
rcl
xlat
rcl
mov
test
mov
gs
popf
in
mov
(bad)
fdivr
and
ins
pop
mov
jbe
inc
xchg
test
data16
add
mov
cld
aaa
cwde
aad
dec
pop
sbb
mov
adc
out
(bad)
or
sbb
xchg
push
or
mov
mov
fmul
sbb
and
pop
push
jns
pop
out
aad
adc
dec
cs
sar
shl
pop
shr
popa
push
ja
pop
popa
test
fild
sub
movs
xchg
jmp
bound
aad
xchg
aaa
jae
mov
(bad)
cld
or
icebp
pop
lods
sub
pop
mov
nop
in
nop
xchg
xchg
push
mov
stos
dec
dec
push
aaa
xchg
pusha
jmp
mov
loop
add
rcl
mov
and
mov
cmp
imul
je
jnp
sahf
cli
or
(bad)
fild
test
js
jmp
jns
and
test
xor
mov
jge
jg
les
or
outs
js
jns
xor
adc
add
mov
or
pop
mov
jmp
and
sar
push
out
or
mov
adc
inc
fcomp
jno
adc
rcr
or
adc
adc
sub
leave
pop
(bad)
or
cdq
ins
xchg
aaa
inc
xor
adc
jbe
or
sti
push
push
sbb
add
rcl
pop
adc
mov
sar
cmp
jae
jnp
push
jge
stos
lods
and
mov
ror
xchg
cmp
push
in
jne
cmp
mov
push
jge
mov
es
ror
xor
and
ret
xor
mov
jb
xchg
xchg
mov
xchg
and
dec
push
push
xchg
xchg
pop
jle
push
sub
stc
push
dec
cmp
mov
jecxz
push
xor
(bad)
(bad)
dec
cmp
xchg
pop
push
ins
in
repz
movs
push
or
xchg
adc
xchg
repnz
sti
and
dec
fadd
mov
std
adc
add
push
clc
xchg
push
adc
mov
das
and
sbb
dec
div
stc
scas
(bad)
and
les
sbb
or
push
nop
fisttp
shl
push
sub
mov
push
pusha
es
mov
loop
int
mov
mov
jp
repnz
sbb
in
xchg
pop
sar
inc
push
jnp
and
add
mov
inc
test
cmp
xor
fld
out
inc
add
xor
sub
aam
cld
adc
push
pop
push
in
pop
mov
pop
loopne
(bad)
mov
push
cs
pop
hlt
shr
mov
(bad)
ror
ror
push
pop
jmp
sbb
lods
mov
pop
in
cmp
cmp
or
xor
arpl
pop
xchg
sub
out
clc
add
pop
jl
ds
into
test
sbb
ss
jbe
stos
cs
(bad)
cmp
dec
cmp
add
aaa
icebp
arpl
movs
cwd
inc
das
jl
sbb
nop
pop
adc
pop
in
pop
push
lods
not
xor
ds
mov
lods
arpl
jmp
sub
fisub
frstor
int
jne
add
hlt
fdivr
pop
in
push
pop
dec
in
stos
inc
push
ja
adc
out
cmps
xor
loop
cmp
retf
das
pusha
iret
adc
dec
mov
jbe
add
(bad)
mov
sub
fistp
jns
inc
fcomp
sbb
loope
add
neg
sbb
aaa
out
popf
pop
pop
jno
faddp
mov
into
xor
inc
shr
or
jb
mov
pop
das
or
xor
push
ret
or
fstp
jbe
cmp
iret
mov
dec
or
cmp
jae
or
or
jl
popf
loopne
sbb
mov
fild
or
add
ins
xor
pop
cmp
mov
ds
(bad)
cmp
mov
ds
je
cmp
out
add
iret
jnp
add
popf
push
sub
test
lea
add
push
push
shr
sar
mov
and
fmulp
sti
mov
pushf
ja
cld
fmul
pop
daa
ret
ins
ds
retf
inc
dec
push
rcr
pop
inc
jns
mov
clc
add
mov
adc
adc
jge
cmp
call
leave
push
mov
dec
out
mov
shr
int
add
inc
inc
inc
in
repz
sbb
adc
mov
(bad)
cdq
fnsetpm(287
into
pop
in
mov
mov
mov
jo
(bad)
mov
int
cwde
and
mov
iret
jns
dec
xchg
ss
cmp
jne
ds
(bad)
inc
push
ficom
dec
cmp
stos
stos
sti
cmp
test
mov
mov
xchg
jno
pop
or
cmp
fwait
mov
lods
mov
hlt
shl
xor
mul
movs
xchg
pop
mov
jno
lods
adc
aaa
sub
mov
jo
mov
push
jg
xchg
addr16
retf
(bad)
sbb
mov
sbb
dec
pop
(bad)
outs
(bad)
fcmovnbe
rol
pop
imul
in
adc
sub
fcom
jp
inc
leave
std
jl
loop
pop
adc
adc
and
rol
mov
arpl
fdivr
(bad)
push
int3
mov
sbb
vdivpd
pusha
popf
xor
mov
pop
aaa
pop
call
dec
jno
ror
ss
ins
xchg
call
aaa
loopne
or
mov
jb
fcomip
add
imul
mov
jne
add
xor
inc
sub
sub
and
aad
test
sbb
repnz
and
xchg
mov
das
push
add
dec
out
pop
jl
icebp
cmp
jns
rol
xor
sbb
and
sub
leave
push
fsubr
popa
sub
inc
hlt
xchg
sbb
outs
push
xchg
jbe
sbb
ja
mov
xchg
mov
dec
push
out
repnz
xchg
aad
push
adc
mov
xchg
xor
mov
jmp
jmp
xchg
loop
jae
fs
or
inc
pop
mov
mov
pop
and
retf
xlat
pop
sub
ficomp
jle
push
sub
aas
repz
mov
out
ins
or
push
fcom
sbb
(bad)
push
add
push
push
lds
push
out
cld
jnp
dec
push
inc
mov
or
enter
xor
cs
lods
inc
div
test
cmp
(bad)
int
push
imul
jmp
and
hlt
cs
jns
loopne
int
add
dec
test
adc
jns
mov
pop
fbld
xchg
sar
mov
dec
std
jae
test
mov
xor
xchg
arpl
test
xchg
jle
into
push
dec
call
out
sbb
add
das
push
jmp
cmp
and
jmp
adc
inc
cld
sbb
xor
inc
pop
dec
inc
cmp
cwde
jbe
dec
mov
jecxz
mov
pop
(bad)
sbb
scas
mov
sar
jg
maskmovq
mul
mov
push
mov
and
test
push
(bad)
mov
popa
inc
cmp
frstor
jo
cmps
pop
xchg
test
cmp
fild
mov
push
push
sub
sbb
mov
jecxz
aaa
add
clc
dec
pusha
sahf
or
cwde
daa
cld
(bad)
mov
ja
sar
cwde
(bad)
inc
les
lock
retf
addr16
jnp
int
daa
pop
inc
or
enter
sbb
stos
fstp
xchg
pop
push
rcr
lods
div
or
push
test
ret
or
js
fild
sub
and
lea
adc
inc
mov
in
inc
xor
repz
outs
pop
mov
add
hlt
pop
jl
xchg
mov
fs
mov
imul
les
push
push
lods
and
les
out
in
out
jmp
stc
loopne
js
in
stos
out
das
push
pop
sbb
push
and
mov
int3
shl
dec
cmc
jmp
jae
cwde
cli
scas
test
mov
popa
inc
aaa
inc
add
out
(bad)
xchg
add
xchg
pop
cmp
add
mov
iret
cmp
nop
shr
xchg
shl
aas
jle
(bad)
pushf
add
sbb
add
int
pop
(bad)
fisubr
(bad)
std
iret
jmp
mov
sub
and
cli
dec
in
test
xor
sahf
mov
cmp
mov
(bad)
jae
sbb
jp
sar
imul
or
adc
lods
cmp
fs
sar
jmp
lock
cmps
push
mov
inc
(bad)
inc
pop
mov
sub
ret
mov
adc
xchg
mov
in
lds
jnp
cmp
cmp
xchg
sbb
push
arpl
dec
push
das
or
(bad)
xor
sar
lahf
into
aaa
mov
mov
inc
js
adc
gs
xor
lods
ins
push
and
jl
retf
sub
(bad)
mov
bound
test
lea
push
mov
movs
and
and
(bad)
dec
push
(bad)
jb
mov
inc
sub
xor
ss
iret
jle
sar
sbb
pushf
xor
push
adc
pop
aam
jne
push
movs
les
adc
lods
aam
daa
add
(bad)
rcl
sahf
lea
and
jo
outs
out
imul
sub
add
cld
loope
or
cmp
call
or
hlt
pushf
and
mov
sbb
xor
xor
xchg
inc
mov
mov
mov
test
inc
bound
inc
xchg
bound
int3
push
ins
inc
imul
cwde
les
fild
push
pop
sub
cmp
push
test
aad
iret
mov
mov
in
fistp
outs
fsubrp
push
pop
not
int
mov
inc
jae
add
mov
jg
(bad)
out
retf
pop
mov
pop
and
movs
mov
fiadd
sti
sub
out
pop
mov
inc
push
out
jmp
sti
int
adc
(bad)
jg
xchg
pop
test
mov
xlat
(bad)
aas
sub
and
stos
leave
mov
mov
(bad)
stos
xor
mov
dec
movs
xor
pop
xchg
iret
mov
push
shr
loopne
inc
cmp
lods
fwait
jg
jae
push
icebp
rol
movs
movs
or
push
add
xchg
gs
adc
sar
shl
scas
adc
push
xchg
popa
cmp
dec
cmp
shl
lock
enter
imul
jns
pop
sbb
retf
inc
ret
std
cmp
pop
adc
sbb
test
test
test
test
int
xor
inc
shl
nop
pop
mov
gs
sbb
and
fmul
std
push
rol
int3
lods
fwait
jmp
push
icebp
sub
lods
aas
or
xor
(bad)
cmc
jl
sti
test
jno
push
retf
out
fisubr
dec
ins
fadd
lods
mov
dec
pop
(bad)
adc
sbb
push
repnz
outs
leave
inc
in
jp
jno
repnz
xchg
xchg
sub
clc
in
push
xor
push
popa
or
inc
aas
rcl
dec
xor
aas
or
pushw
jp
xchg
into
ds
sbb
and
jae
loope
mov
inc
jg
cmp
dec
movs
xor
and
retf
sbb
sbb
jecxz
and
in
add
ret
adc
push
repnz
push
call
or
xor
cmp
sahf
xchg
mov
sbb
push
paddusb
pop
imul
mov
xchg
popa
fcmovnu
mov
sub
jmp
cmp
rol
int
sbb
test
scas
cmp
xlat
push
pop
cs
test
jns
push
rcr
jg
push
cmp
cdq
ins
jo
mov
mov
lock
adc
jmp
add
cdq
dec
jle
(bad)
and
mov
mov
push
xchg
xchg
and
mov
dec
mov
sbb
imul
mov
push
lahf
jmp
cmp
xchg
hlt
push
mov
push
rcl
fld
or
test
cmp
loop
shl
je
(bad)
imul
push
fsubr
not
ds
scas
cmc
or
std
mov
xchg
scas
psubusw
rcr
out
mov
out
xlat
je
bound
daa
and
pop
xor
mov
pop
xchg
rcl
xchg
(bad)
mov
xor
or
std
mov
xchg
or
loope
adc
sbb
ror
rcr
jecxz
setae
shr
ror
push
enter
mov
shr
int
pop
jl
imul
or
rol
pop
rol
daa
add
cmps
cs
jnp
cmc
push
pop
arpl
add
mov
(bad)
sub
pop
add
test
sub
lods
repz
jno
mov
scas
sti
mov
loop
test
ins
arpl
ins
ret
xchg
loope
and
push
fwait
adc
cmp
push
jle
add
jb
cmc
xor
aam
add
mov
mov
mov
lea
xchg
aas
test
(bad)
cmp
lahf
stos
cmp
push
jns
xor
inc
add
mov
fdivr
mov
and
cmp
jmp
jle
mov
test
loop
pop
xlat
(bad)
mov
cmp
scas
or
or
pushf
(bad)
sbb
stos
and
aad
cmp
jnp
ins
push
mov
mov
dec
ds
(bad)
cdq
mov
mov
dec
mov
fwait
rcl
push
sahf
jle
lods
cs
stos
mov
loop
sub
lods
dec
mov
mov
sar
xor
mov
sub
add
adc
pop
sbb
push
lea
mov
adc
pop
mul
call
dec
cmp
das
dec
pop
cmp
scas
retf
adc
xchg
adc
in
cmps
mov
mov
ins
mov
in
aam
pop
icebp
outs
sbb
je
dec
imul
sbb
in
push
outs
(bad)
fnstenv
mov
cmp
movs
stos
jle
cmps
ins
xor
addr16
sar
inc
std
movs
ins
stos
xchg
dec
xor
add
cmps
cmp
fcomp
and
bnd
ret
js
dec
sbb
sub
sti
fld
pop
mov
push
and
pop
out
add
adc
dec
add
cmp
pop
xchg
push
stos
pop
jp
inc
push
fisub
dec
js
xor
sub
cmp
sbb
mov
sti
mov
cmc
pop
push
out
mov
jp
scas
inc
xor
jae
leave
cmps
jecxz
add
(bad)
xchg
movs
iret
scas
xor
shr
add
(bad)
enter
ja
sub
jbe
mov
cmp
nop
pop
out
les
cmps
push
int
push
or
pop
xor
loop
cwde
mov
or
or
(bad)
adc
mov
sbb
xor
xchg
jl
cld
aas
aad
imul
(bad)
jmp
xlat
imul
arpl
cmp
out
sbb
adc
lock
outs
add
pop
(bad)
jo
ror
js
dec
icebp
and
push
loopne
push
inc
ins
sub
adc
test
ins
mov
cld
dec
retf
cwde
and
and
movs
jg
pop
and
dec
xchg
inc
pop
stos
dec
adc
pop
int
xchg
lea
jae
jbe
xor
sub
dec
nop
jns
jns
loopne
fld
out
sbb
sbb
clc
add
xchg
mov
adc
adc
sbb
aad
and
popa
jmp
sub
dec
(bad)
test
aaa
rcl
jb
leave
mov
call
js
cli
adc
je
cmp
inc
push
aam
aad
adc
xor
call
jl
add
mov
sub
cdq
jle
sub
nop
call
mov
mov
add
sub
lods
rcr
scas
push
ret
bound
loopne
mov
in
mov
cwde
sub
push
cmp
imul
dec
lods
sub
mov
lea
outs
push
jne
push
sub
mov
pop
in
xor
daa
push
out
inc
cdq
mov
sahf
mov
retf
mov
stc
int
stos
mov
lea
pop
(bad)
xor
xor
and
call
and
cs
rcr
push
push
in
xchg
mov
inc
cmp
daa
rcr
pop
sbb
mov
push
dec
aaa
push
(bad)
pop
pop
push
or
ja
pop
xchg
jmp
sbb
mov
jmp
inc
lods
ficomp
in
mov
pop
es
push
std
stos
mov
xor
push
cmps
xchg
ins
shl
jg
push
pop
int
adc
xchg
les
dec
out
push
mov
jnp
scas
mov
inc
adc
jmp
into
pop
repz
sti
into
pop
stc
shl
enter
xchg
xlat
sub
mov
xchg
std
push
mov
mov
or
mov
mov
sahf
xor
or
xchg
retf
nop
mov
cmp
lds
out
out
lods
push
popf
inc
push
push
hlt
jns
repz
and
dec
fldenv
imul
pop
pop
pop
aad
mov
mov
(bad)
fadd
and
ja
lds
int
cmp
add
ins
or
jecxz
jb
dec
fisub
outs
adc
cmp
xor
jle
and
xor
cmp
pushf
sub
mov
xlat
in
dec
mov
mov
xchg
adc
dec
aaa
pop
(bad)
or
retf
pop
sub
adc
daa
push
mov
retf
icebp
and
xchg
ret
mov
dec
mov
imul
inc
xor
jle
mov
sub
cdq
mov
push
fimul
out
lock
es
inc
stos
lods
cmp
jge
out
ret
sahf
mov
adc
sub
dec
out
arpl
jo
jmp
jne
mov
in
cwde
mov
ror
outs
mov
fwait
idiv
pop
mov
movs
mov
cmps
shl
mov
jmp
sub
pop
shl
arpl
mov
sub
repnz
into
ja
mov
sahf
xor
lahf
jp
out
lock
inc
mov
pop
pop
gs
movs
mov
xchg
nop
adc
sbb
add
xchg
xchg
inc
xor
pop
(bad)
dec
push
dec
add
popf
out
mov
dec
and
add
and
cli
adc
or
xchg
inc
into
and
cmp
stos
(bad)
leave
add
mov
movs
add
mov
xchg
dec
cmp
popa
mov
sub
loope
fcomp
lahf
fdivr
pop
retf
imul
iret
sub
inc
cmc
mov
mov
sbb
sub
mov
mov
aad
cmp
inc
popa
int
xchg
ins
out
repz
or
mov
jp
sahf
fbld
xchg
sahf
pop
int
sub
cmp
cmp
fisubr
aaa
cmp
jecxz
imul
lods
mov
(bad)
adc
sbb
ins
or
cmp
jecxz
add
in
sbb
push
xchg
out
adc
and
into
push
or
loop
popa
push
stos
inc
sub
mov
xchg
sbb
dec
dec
data16
pop
sbb
js
ds
or
fs
pop
call
inc
lods
mov
icebp
xchg
push
fs
stos
stos
ss
out
mov
mov
sti
adc
mov
push
cld
out
fs
nop
xor
xchg
idiv
int
dec
cs
imul
push
mov
rcr
in
shl
and
add
movs
jg
in
cdq
mov
test
sbb
aaa
imul
stos
mov
in
pop
add
push
pop
mov
jmp
pop
pushf
cmps
add
cld
sbb
pushf
ficomp
cli
xchg
lds
cdq
pop
jo
pop
retf
addr16
xor
xchg
leave
pop
and
out
mov
dec
inc
dec
es
daa
sbb
xor
bound
dec
push
sbb
pushf
cmc
out
jecxz
ds
(bad)
adc
repnz
xor
pop
inc
ja
or
mov
mov
sbb
lock
sub
dec
xlat
add
pop
fnsave
xchg
stos
pop
dec
cmps
xor
aam
push
(bad)
stc
ret
xchg
mov
pop
in
sbb
out
xor
push
cmp
mov
cmps
sbb
mov
fbstp
lock
sti
bound
cli
mov
sbb
pop
pop
fild
out
out
loope
js
jo
cmp
add
jno
idiv
sub
mov
fwait
mov
in
or
pop
add
mov
xor
sti
jb
lea
arpl
imul
add
mov
and
sub
xchg
mov
fadd
(bad)
int3
test
pop
mov
cdq
enter
sbb
or
inc
cmp
mov
fcomip
cld
sar
gs
inc
aad
adc
jle
jl
inc
pop
push
mov
xlat
mov
loopne
ret
or
les
cs
push
test
(bad)
mov
xlat
jecxz
jnp
movs
cmp
mov
mov
call
dec
mov
in
clc
mov
aad
push
add
out
outs
(bad)
mov
pop
dec
dec
pop
or
xor
sub
outs
xchg
in
out
pop
xchg
jg
jmp
lahf
jmp
push
test
add
in
cwde
jmp
bound
adc
lahf
aam
add
sar
pop
xchg
test
jae
sub
js
les
mov
dec
ret
and
sti
add
push
test
mov
pushw
je
push
in
les
cmp
jae
fisttp
cwde
clc
inc
pop
push
daa
imul
pop
test
push
xchg
inc
push
add
xchg
call
jl
pop
xor
(bad)
jl
gs
sbb
mov
test
xchg
jmp
je
push
push
rcl
stos
xchg
test
xchg
call
fcomp
sbb
fisttp
push
jns
aas
pop
pop
int3
push
jns
inc
or
add
and
xor
test
std
jo
dec
pusha
mov
inc
mov
fwait
vmovdqu
test
adc
call
adc
sbb
mov
push
in
inc
mov
ss
dec
daa
push
sub
pop
push
leave
loope
jne
sub
out
mov
fs
cs
shl
jmp
aam
or
pop
cld
xchg
xor
int
push
cmp
mov
pop
adc
shr
scas
inc
nop
pop
xor
sbb
(bad)
push
lahf
mov
stc
push
mov
or
repz
retf
cmp
mov
dec
int3
xchg
mov
rcl
jl
aam
test
in
repz
imul
xor
mov
fsubr
mov
jb
mov
or
mov
sub
mov
loop
sub
sbb
mov
stc
(bad)
sbb
out
(bad)
push
adc
adc
pop
and
cld
outs
cmp
cmp
push
adc
pushf
cwde
mov
std
adc
(bad)
enter
xchg
sbb
lds
push
xacquire
shl
and
stos
dec
jne
add
mov
xchg
sub
mov
xor
mov
adc
adc
out
cmp
xor
pushf
repnz
sahf
int
(bad)
mov
xor
test
inc
cmp
adc
mov
push
pop
rol
cmp
sbb
aad
test
sub
mov
pop
imul
cmps
ret
popf
adc
mov
lahf
pop
pushf
jne
pop
xchg
popf
imul
cmp
outs
mov
call
shl
lock
loop
push
repz
ss
sub
xchg
scas
mov
xor
test
mov
xchg
(bad)
xchg
mov
jg
cld
cli
pushf
sbb
jg
dec
repz
mov
inc
push
sbb
pop
cmp
adc
aaa
xor
clc
scas
dec
ins
lds
lea
mov
sub
jmp
mov
push
sbb
dec
or
retf
imul
mov
leave
xchg
out
xchg
mov
mov
push
pop
aam
sub
mov
adc
(bad)
push
cmp
sbb
outs
xchg
test
xchg
dec
das
test
cmp
jg
or
in
lds
mov
fiadd
mov
jns
or
adc
retf
(bad)
mov
ss
das
cmp
adc
mov
int
push
test
add
jge
sub
loope
call
mov
stos
pusha
sub
ret
sbb
jl
add
fcmovnbe
add
jmp
rcr
std
test
pop
mov
fnstsw
cdq
sbb
(bad)
call
es
cmp
jbe
call
and
imul
loopne
mov
(bad)
xor
add
push
fdiv
mov
inc
jmp
ss
je
jns
ror
test
dec
jle
les
lods
lods
or
pop
mov
or
or
push
ja
inc
add
push
or
rcl
iret
fs
cmp
jle
inc
arpl
cli
xor
push
xchg
push
pop
or
aaa
mov
ja
mov
pop
xchg
loope
xor
jg
mov
add
ret
dec
and
jg
xor
mov
int3
les
pop
jge
stos
fdivr
and
ins
(bad)
cmp
mov
fbld
inc
or
or
or
xchg
mov
add
aaa
sbb
adc
loopne
dec
nop
pop
pushf
cmp
dec
(bad)
out
rcr
sti
xchg
mov
psubusw
mov
js
(bad)
loop
mov
dec
xor
mov
add
jbe
jae
jle
(bad)
and
sbb
stos
aaa
push
and
je
repz
fsubr
adc
scas
and
sub
adc
mov
iret
pop
movs
cld
push
push
mov
fst
xchg
xlat
scas
cmp
test
xchg
jnp
(bad)
cmp
add
mov
push
imul
add
loope
add
aad
shl
xor
jno
cmps
push
rcl
shr
repz
in
pusha
out
out
pop
jmp
push
je
jb
adc
dec
leave
ffreep
xchg
mov
push
cmps
loop
jae
pushw
leave
cmps
mov
xor
cmps
cmp
mov
sub
mov
jmp
xlat
and
aam
push
arpl
pop
in
ja
xor
jg
mov
jmp
jmp
cmp
imul
or
jns
mov
push
pop
dec
push
mov
hlt
jp
icebp
xchg
pop
lahf
cmp
jmp
add
cld
xchg
sub
inc
lea
cmp
popf
mov
out
dec
leave
cmp
pop
or
mov
cwde
push
imul
leave
sub
test
test
or
push
mov
loope
jo
mov
jbe
pushf
adc
or
inc
jno
bound
imul
aas
cmp
cmp
jp
or
mov
cmp
mov
daa
push
pop
dec
neg
xor
inc
dec
jle
jae
dec
test
xchg
cmp
test
mov
cli
nop
and
sub
js
ja
out
(bad)
pop
(bad)
out
pop
mov
lahf
and
xchg
pop
mov
gs
push
mov
push
ret
cmp
jmp
jg
ins
in
int
jo
sahf
push
fbld
push
clc
sbb
mov
jle
add
cmp
push
sbb
nop
sub
jo
fcomp
ja
pop
and
push
js
pop
xor
fstp
cmps
aad
imul
pop
in
mov
lods
lds
sbb
lds
es
mov
popf
pop
fistp
cmc
cmc
mov
fwait
inc
and
dec
(bad)
and
(bad)
shl
fild
adc
adc
adc
inc
sahf
inc
cs
adc
sbb
push
test
jge
mov
push
sahf
loope
sbb
(bad)
fistp
cmp
repz
lahf
cmc
ret
scas
pushf
inc
and
mov
les
push
popf
mov
and
aaa
jmp
lock
into
aad
scas
or
xchg
popa
mov
dec
std
sub
aad
sub
sub
mov
aad
lea
fisttp
dec
imul
dec
dec
repnz
mov
push
pop
jo
xchg
cwde
movs
pop
jmp
jg
loope
sub
xchg
(bad)
xor
bound
lds
ror
sub
clc
jne
test
je
inc
mov
or
pop
cld
cmps
sbb
les
nop
shl
cwde
in
icebp
jns
retf
xor
mov
sbb
jle
add
hlt
loop
adc
(bad)
mov
movs
sub
cmp
xor
add
fdivr
pusha
pop
test
xor
daa
pop
mov
stos
and
stos
sbb
or
dec
and
daa
(bad)
adc
enter
inc
(bad)
mov
(bad)
into
hlt
add
push
call
xchg
fist
shr
mov
push
mov
push
in
cmp
call
jl
aam
pop
fld
jmp
scas
cmp
add
xchg
fidivr
add
xchg
jne
mov
int
movs
ss
pop
fcom
pusha
int
(bad)
jb
pop
and
pop
les
sub
shr
jbe
add
xchg
xchg
sub
push
adc
pop
pop
std
inc
lea
outs
push
in
sbb
jae
aam
scas
or
and
mov
stc
fisub
jmp
sub
out
popa
(bad)
aam
inc
sbb
jae
sti
loop
fisubr
(bad)
clc
mov
cmps
data16
inc
ror
frstor
mov
or
inc
and
pop
call
test
clc
aam
dec
push
dec
xchg
dec
sub
xchg
push
out
iret
inc
iret
xchg
mov
test
sub
sbb
mov
arpl
dec
bound
xchg
add
sbb
mov
test
xchg
lea
xor
jg
hlt
xchg
and
stos
cmc
inc
icebp
xchg
adc
ffree
(bad)
mov
jno
xor
pop
es
repz
jnp
xchg
pop
push
dec
mov
xor
jg
sbb
lods
aaa
loopne
mov
ja
pop
stc
xchg
pop
imul
mov
lea
int3
sub
sub
scas
cmp
test
ficom
shl
and
stos
sahf
clc
pushf
jb
jmp
push
gs
add
sub
fs
mov
in
cmp
daa
adc
pop
ins
cs
cld
test
addr16
icebp
mov
inc
ficom
shl
icebp
mov
sti
mov
repz
int
pop
xor
jb
pushf
jnp
or
inc
aas
push
inc
frstor
push
add
mov
packsswb
ret
sbb
int
mul
xor
and
ror
rol
lea
mov
pop
movs
pop
cwde
aaa
aam
(bad)
push
ja
push
dec
cmc
sub
lea
mov
mov
mov
xchg
mov
and
arpl
jmp
call
mov
rcr
out
mov
mov
arpl
jmp
pop
mov
mov
fs
outs
sbb
(bad)
std
cmp
add
cmps
in
and
shr
or
push
fstp
jmp
ffree
adc
push
fadd
(bad)
cli
jbe
mov
sbb
into
mov
fsubr
movs
lods
ret
lods
dec
xchg
inc
ret
mov
cmp
fcomp
inc
cmp
cld
or
cld
push
les
adc
add
jmp
sahf
mov
pop
jae
fs
pop
inc
nop
and
xchg
or
cmp
mov
fucomp
cs
add
or
sar
fs
into
cdq
jnp
or
in
imul
(bad)
addr16
ins
iret
in
mov
lods
push
sbb
jmp
push
pop
adc
les
std
bnd
pop
inc
ficom
or
mov
cs
aad
fsqrt
int
stos
cli
mov
dec
pushf
cli
add
and
sub
daa
fsubr
xchg
ret
mov
aaa
mov
adc
dec
mov
repz
sti
mov
fnstsw
xchg
gs
aad
lock
scas
mov
lods
mov
sub
cld
ficom
cmc
loop
outs
repnz
movs
dec
ds
aaa
(bad)
leave
mov
push
fnstsw
fdivp
das
or
scas
fst
(bad)
fstp
mov
mov
shl
inc
pop
cmps
add
dec
mov
mov
lea
dec
std
lahf
out
fmul
cmp
or
xchg
call
jmp
xchg
cmp
call
mov
push
aaa
push
jp
add
aad
cmp
adc
dec
and
test
xor
inc
mov
push
xor
mov
cmp
loop
rol
pusha
aam
xor
fstp
jnp
push
sub
dec
call
pop
or
dec
and
xor
fwait
sti
mov
stc
sub
repz
cmc
cmp
inc
xor
xchg
pop
pop
sar
xchg
ds
pop
lds
sti
bound
sbb
sub
push
retf
jae
and
addr16
in
jns
jmp
add
pusha
fwait
jecxz
nop
cmp
fwait
mov
jp
inc
cwde
mov
cmp
ss
push
push
sbb
or
sbb
xchg
mov
inc
repnz
fdiv
sub
jbe
jo
add
jo
adc
loop
push
sahf
inc
xchg
dec
adc
popa
xor
clc
loope
inc
shr
ins
in
in
push
fld
lahf
ins
xchg
jge
data16
xchg
or
adc
mov
add
cwde
jmp
push
movs
push
jns
adc
test
test
ror
sbb
loop
gs
ret
cmp
neg
jns
mov
invd
lea
(bad)
dec
pushf
add
mov
fst
push
repnz
mov
push
nop
fs
cmps
sbb
outs
rcl
loope
neg
pop
adc
out
into
mov
mov
out
adc
jmp
cdq
mov
cdq
outs
(bad)
mov
push
(bad)
jns
push
xor
aas
inc
push
je
push
and
pop
test
scas
xchg
push
mov
mov
enter
(bad)
rcr
and
mov
mov
adc
sar
adc
adc
pop
cdq
fmul
bnd
inc
cs
mov
push
fwait
ret
xchg
dec
sub
js
add
ret
daa
xchg
and
xchg
mov
test
scas
jle
mov
call
cs
popf
fild
in
or
or
out
outs
and
inc
inc
pushw
xor
and
ja
test
cmc
xor
out
loope
jp
add
in
call
dec
jp
repnz
jp
(bad)
sub
(bad)
sub
leave
(bad)
mov
mov
call
pusha
(bad)
pop
mov
repz
xchg
or
sbb
adc
(bad)
imul
mov
int
add
xchg
jae
push
add
out
jle
arpl
int3
xchg
scas
clc
pop
pop
ins
xor
fstp
push
jne
sub
sub
loop
jmp
mov
sub
fst
imul
test
adc
mov
rcl
out
maskmovq
push
jge
lock
inc
mov
fmul
push
(bad)
pop
arpl
movs
inc
sbb
mov
out
sub
frstor
cmc
test
ret
retf
xchg
dec
pop
je
mov
sbb
ret
mov
out
pop
enter
xor
sub
adc
stc
lock
or
add
les
xchg
add
movaps
jo
push
repnz
inc
jno
jae
add
stos
dec
push
out
and
adc
inc
sub
jg
ins
add
xchg
cs
ret
ins
aaa
dec
call
std
sbb
cmp
jecxz
mov
xchg
push
cmp
cdq
mov
pop
mov
or
adc
push
bound
lock
jo
mov
mov
dec
outs
iret
sub
sahf
push
retf
cld
lock
pop
mov
or
sbb
mov
imul
ror
gs
sub
jge
std
push
dec
push
outs
cmp
mov
gs
int
xchg
loop
cwde
test
es
aas
inc
ja
push
(bad)
dec
sbb
lahf
jmp
push
cli
sub
jl
aad
mov
cmp
push
cmp
mov
fld
mov
mov
cmp
add
loopne
rcl
xchg
pop
nop
shl
and
fisttp
ds
aad
aaa
shl
ss
xchg
lods
clc
jnp
(bad)
dec
mov
mov
out
ja
dec
mov
xor
mov
cwde
ja
inc
or
push
sbb
stos
push
bound
dec
mov
jbe
cld
push
mov
pop
and
ss
push
enter
std
xchg
cmc
jb
dec
int3
mov
mov
adc
sub
ins
call
cmp
jg
pop
out
jmp
(bad)
mov
add
cmovg
xchg
inc
push
xlat
mov
pop
gs
loopne
loopne
call
push
xchg
sub
dec
adc
mov
xchg
ja
xchg
mov
mov
mov
jnp
push
rol
cmp
inc
movs
scas
jo
fistp
cmp
popf
pushf
ins
inc
sub
(bad)
adc
je
inc
rol
mov
cmp
int3
scas
jecxz
mov
hlt
repz
jae
lock
mov
cmp
stc
xlat
mov
adc
pop
and
(bad)
scas
xchg
cmp
in
lea
push
clc
add
jb
(bad)
fnstsw
pop
(bad)
int3
inc
ss
cdq
(bad)
jge
adc
clc
fmul
out
imul
mov
mov
push
adc
cld
dec
inc
arpl
mov
mov
inc
adc
push
add
cwde
cmp
stos
cmp
add
mov
add
pop
sbb
in
cmc
mov
xchg
xchg
mov
ret
in
dec
ja
call
test
out
inc
dec
lds
movs
and
pop
push
cs
(bad)
int
push
inc
xor
cs
cmps
aaa
sti
inc
or
jge
pop
inc
sti
aad
cs
and
and
cli
movs
pop
ja
(bad)
xor
sbb
cmp
nop
(bad)
fxam
xchg
(bad)
aam
cli
inc
xor
push
cwde
and
out
cmp
sbb
jp
fs
test
jmp
xchg
dec
loope
stos
lahf
stos
sbb
xor
mov
push
mov
inc
push
ret
jno
xor
pop
call
shl
or
adc
dec
mov
jecxz
jp
outs
mov
adc
cmp
jecxz
lods
in
(bad)
fild
push
pushf
add
cmp
mov
xchg
rcl
add
out
(bad)
push
xor
nop
hlt
ss
imul
pop
xchg
push
mov
cmp
shr
jecxz
push
push
shl
retf
xor
sbb
mov
sub
loope
mov
mov
adc
fwait
adc
lods
sbb
xor
xchg
add
mov
jns
dec
add
idiv
jle
push
xchg
cs
cld
push
popf
shl
das
push
push
sbb
or
repz
in
in
cmp
sbb
mov
push
xor
mov
test
fldcw
mov
retf
mov
mov
repnz
sbb
jle
(bad)
pop
ins
imul
out
mov
xchg
sub
pop
lea
pop
mov
call
gs
pop
and
sbb
fmul
into
fisubr
imul
mov
adc
outs
bound
push
bound
ins
adc
cmc
repz
repz
cmps
inc
xor
cld
inc
mov
pop
cmp
std
jb
push
not
push
mov
lds
lods
sbb
ud1
jg
(bad)
fcomp
aas
test
popf
jnp
xor
mov
lods
cmps
shl
inc
cmp
dec
mov
nop
fimul
nop
sti
in
fsubrp
sbb
and
ins
clc
sbb
and
cmps
lock
sub
sub
sbb
cs
pop
xor
mov
retf
mov
adc
inc
xor
push
pop
pop
jae
mov
push
or
ja
jbe
xchg
push
push
movs
loope
icebp
popf
cmp
mov
ror
push
sbb
(bad)
(bad)
outs
mov
add
or
jbe
je
popf
cmp
ret
movs
pop
inc
imul
sub
adc
mov
mov
sbb
push
jmp
arpl
mov
out
test
jns
xchg
mov
mov
ret
jno
mov
addr16
lods
push
aas
or
sub
and
cmp
neg
shr
push
not
mov
and
fs
mov
jmp
pop
push
push
lahf
cmp
scas
mov
inc
push
mov
inc
in
pop
test
pop
dec
push
ds
dec
lock
(bad)
sub
and
sub
xchg
mov
xlat
cmps
lahf
xor
test
adc
sub
cmps
sbb
xchg
jno
pusha
push
adc
mov
je
jp
xor
mov
push
popa
stos
inc
push
mov
mov
ins
int
scas
popf
mul
fst
mov
les
dec
or
mov
repnz
std
sbb
sbb
sub
push
fwait
je
fadd
adc
cmp
cwde
pop
(bad)
fwait
ds
inc
push
adc
pop
shr
sub
nop
fsubr
inc
mov
inc
rcl
mov
jns
mov
cli
sub
adc
add
adc
out
ja
pop
or
sbb
fcom
shl
(bad)
repnz
inc
dec
mov
hlt
mov
or
ins
call
vmread
mov
add
jns
stc
jae
idiv
mov
xchg
loop
mov
xor
aam
lods
mov
loope
mov
adc
dec
aad
xor
fistp
push
aas
imul
aam
xor
stos
or
ins
sub
fs
mov
mov
inc
adc
dec
pop
dec
push
aad
arpl
inc
bound
cwde
mov
push
push
(bad)
sub
jg
xor
mov
mov
cs
call
mov
iret
xor
pop
dec
dec
ja
mov
xchg
mov
out
je
ins
cdq
popa
or
mov
mov
inc
shl
ss
cmp
(bad)
add
and
push
or
lods
cmp
sub
jno
xor
adc
cmp
out
add
stos
pop
(bad)
mov
dec
xchg
cmp
popa
adc
movs
aam
lods
mov
push
imul
mov
data16
ja
ins
data16
add
pop
push
add
fwait
cmp
sahf
jp
sub
test
imul
sbb
xor
mov
imul
pushf
inc
jmp
adc
and
stos
or
jno
adc
cmp
add
push
mov
data16
mov
add
and
xchg
or
inc
retf
push
cmp
or
sbb
out
loopne
mov
and
jae
(bad)
fcomp
stos
mov
push
ret
sbb
and
(bad)
xchg
and
aas
test
jecxz
pop
lock
jmp
jmp
dec
lahf
xchg
jmp
shl
cwde
ffree
and
and
inc
pop
adc
fimul
mov
mov
cmps
and
xlat
push
mov
dec
pop
stos
shr
sbb
lock
in
nop
out
lock
je
nop
push
int
inc
and
xchg
cmp
leave
pop
add
and
sbb
mov
dec
pop
sub
int
(bad)
cmp
inc
mov
dec
pop
enter
leave
inc
aam
jl
push
or
adc
out
sbb
push
xor
push
test
mov
xor
sti
ja
in
add
int
out
push
push
sub
ins
mov
and
xchg
dec
bound
data16
lock
sub
or
(bad)
and
jb
pop
mov
sub
inc
jp
sar
mov
or
pop
iret
sbb
fwait
in
(bad)
or
iret
aaa
sbb
xchg
mov
stos
in
movs
loopne
outs
xchg
fstp
cmp
fnsave
aaa
and
xor
or
pop
push
inc
jno
xor
cld
leave
pop
test
fstp
adc
cmps
cwde
call
xchg
clc
pop
mov
retf
iret
sbb
enter
and
push
icebp
into
pop
sahf
fisub
sahf
inc
iret
xor
mov
(bad)
call
inc
fwait
cmp
sub
scas
in
mov
and
enter
ror
test
call
jne
add
xlat
vmovaps
lods
inc
(bad)
loopne
test
sub
das
xor
retf
(bad)
adc
jne
repnz
xchg
xchg
nop
mov
mov
ret
in
cli
or
push
sub
movups
dec
add
pop
cs
ss
in
jb
rol
mov
pop
inc
xchg
sbb
bound
aad
cmp
sbb
push
inc
and
cmp
stos
gs
out
cdq
jl
jp
nop
mov
loope
clc
and
stos
and
shl
dec
mov
in
rcr
sub
xchg
(bad)
(bad)
loopne
lds
clc
add
sbb
push
xchg
test
(bad)
das
fbstp
loope
ret
pop
cli
mov
mov
out
addr16
pop
call
(bad)
or
test
pusha
dec
ja
repz
inc
mov
dec
mov
jge
les
add
sub
loop
movs
jne
mov
jl
je
adc
cmps
cli
pop
std
(bad)
out
push
xor
imul
xchg
inc
loope
and
adc
movs
sbb
pop
inc
out
cli
outs
jne
pusha
or
jae
daa
aam
shl
fs
pusha
jg
ins
(bad)
xor
add
bound
push
retf
jl
cmps
dec
push
jl
and
in
mov
cmp
push
pushf
mov
aaa
and
mov
cdq
push
xor
push
fdivr
outs
jns
sbb
cmp
xchg
sub
imul
inc
(bad)
adc
lahf
into
mov
mov
ins
bound
cli
xor
mov
iret
(bad)
push
scas
mov
pxor
jno
adc
xchg
lods
dec
aas
cs
sub
(bad)
xor
jnp
fidivr
je
dec
mov
pop
jae
(bad)
cmp
add
jle
aaa
cmp
jnp
iret
in
pop
shr
scas
pushf
sbb
das
xchg
std
mov
ficom
pushf
xchg
push
add
out
test
push
xchg
ss
lea
xor
sbb
add
adc
inc
sub
mov
sbb
retf
push
cmp
or
cmp
sar
pop
scas
pop
icebp
retf
mov
fwait
arpl
jle
cmp
int3
and
jb
and
lea
add
sar
jmp
lds
scas
in
adc
loop
(bad)
mov
dec
das
imul
xor
mov
js
out
mov
jge
cs
sub
sbb
out
push
dec
push
push
cs
fwait
cmp
call
jne
and
stc
nop
fcomp
cmp
pusha
icebp
call
fistp
push
xor
rol
je
or
aaa
cdq
inc
and
inc
or
xor
pushf
dec
sbb
jl
pop
mov
mov
cmp
adc
mov
rcl
(bad)
loop
inc
shr
mov
jnp
mov
std
xchg
data16
test
data16
push
retf
enter
jb
mov
out
dec
cwde
pop
gs
inc
add
lods
xchg
jae
lahf
and
stc
je
ins
inc
bound
mov
push
arpl
or
cmps
sbb
cmp
cmp
sub
call
mov
pop
fwait
dec
mov
sbb
fnstenv
xchg
inc
ins
std
fwait
shl
(bad)
and
ja
xchg
push
pop
jg
pop
mov
outs
push
jbe
push
inc
aas
repnz
aad
jne
cs
xchg
mov
lahf
fwait
push
sti
scas
pop
add
fcmovb
adc
retf
adc
sbb
cmps
mov
das
pop
test
add
pop
gs
outs
pop
imul
fucomip
fidiv
hlt
jmp
pop
pop
inc
mov
mov
out
sub
sub
jns
cmp
mov
test
out
adc
pop
fwait
inc
mov
fndisi(8087
por
xor
xor
xchg
dec
sub
retf
sub
inc
(bad)
arpl
sub
test
dec
(bad)
aad
xchg
inc
cmc
js
loopne
cli
mov
pop
shr
dec
cmp
or
sub
popa
jl
(bad)
je
rcl
cmp
cs
outs
dec
dec
test
out
jge
pop
or
or
pop
inc
imul
in
pop
adc
sbb
in
neg
mov
aad
mov
and
leave
inc
push
dec
push
shr
out
push
or
in
or
icebp
out
and
and
sub
pop
sbb
mov
inc
imul
cmp
in
jo
pusha
outs
ret
lahf
mov
mov
int3
push
adc
int3
das
popf
pusha
mov
imul
inc
jge
retf
cmp
pop
mov
push
ffreep
jbe
cli
xchg
jmp
out
inc
dec
cmp
loop
and
clc
inc
mov
and
mov
(bad)
fcom
ja
dec
xchg
cld
sti
jecxz
pusha
inc
mov
sbb
out
xchg
mov
popa
cmc
push
mov
mov
les
xor
enter
movs
in
std
outs
jae
imul
push
stos
sub
fidiv
ret
cmp
aaa
cmp
jle
inc
add
jne
add
outs
ja
mov
push
jo
mov
mov
push
pop
push
dec
xor
hlt
jae
sbb
push
jmp
fstp
push
adc
bound
ret
sbb
fld
inc
dec
add
inc
enter
inc
sahf
adc
inc
xor
xchg
pop
push
mov
out
jns
jne
cmp
std
int
xchg
std
or
or
fisttp
es
push
xor
(bad)
jmp
add
fist
test
hlt
push
inc
xor
rcl
je
stos
test
inc
ja
adc
imul
sub
int
or
sbb
data16
aas
or
push
mov
rol
xchg
cmc
imul
mov
xor
dec
xchg
popf
hlt
cmp
and
shr
pop
cmc
sub
dec
popf
mov
fwait
pop
daa
jmp
dec
sbb
sub
push
jle
xchg
stc
mov
jo
mov
sahf
ins
bound
mov
pop
adc
stos
add
cs
sub
or
or
sub
movs
jo
into
or
and
push
inc
or
xchg
inc
or
xor
xchg
jg
pop
inc
xchg
lds
ror
pop
jnp
and
lahf
push
push
mov
iret
and
scas
test
leave
clc
repz
or
xor
movs
mov
sbb
and
fwait
retf
or
push
jo
jo
test
pop
mov
inc
push
rcl
nop
mov
out
shl
sahf
push
sbb
dec
lds
mov
pop
jmp
and
xchg
jl
fldcw
pop
outs
ja
ins
add
add
js
gs
lea
push
lods
(bad)
fist
popa
pop
clc
jp
loopne
ret
imul
mov
mov
bnd
out
and
test
addr16
xchg
inc
pop
mov
ins
js
into
iret
adc
mov
adc
xchg
pop
pop
test
xor
loope
jp
enter
lds
mov
mov
jae
xchg
cmc
pusha
xlat
or
pop
xchg
(bad)
pop
stos
dec
movs
in
adc
aad
addr16
dec
cs
call
movs
loope
pop
call
pop
mov
dec
aad
inc
inc
xor
movs
mov
imul
and
loope
jnp
stc
lds
test
xor
xchg
clc
push
movs
xor
ins
dec
imul
and
test
data16
daa
psubsw
cmp
mov
jmp
sbb
xor
cdq
jne
inc
mov
(bad)
push
jb
sbb
xor
imul
and
stos
xchg
dec
and
adc
sbb
in
sahf
xchg
stc
mov
test
sbb
lock
adc
clc
lods
(bad)
mov
pushf
adc
xor
stc
ret
mov
cmp
hlt
les
cdq
retf
xor
xchg
stc
adc
push
mov
xor
nop
sbb
stos
pushf
inc
push
inc
or
jg
sar
xchg
fwait
out
pop
in
not
ins
cs
shl
or
pop
push
jl
je
inc
stc
outs
retf
lahf
push
ins
out
jl
scas
ds
fistp
loopne
mov
xchg
xor
aas
jbe
push
and
sbb
outs
jecxz
or
push
icebp
sbb
test
mov
lock
xchg
popf
inc
idiv
movs
jbe
das
ret
loop
(bad)
in
push
ret
daa
jns
pop
(bad)
dec
mov
mov
leave
and
fmul
adc
pop
push
xor
inc
pop
inc
push
sti
jo
arpl
pop
jmp
cld
in
(bad)
rol
jno
inc
push
mov
iret
fsub
cli
sub
push
jl
jmp
xor
push
movs
js
inc
xchg
jle
add
dec
in
jmp
adc
inc
jecxz
or
pminub
jnp
fldcw
sti
pop
clc
dec
popf
sti
and
mov
out
fld
mov
jp
and
and
sub
es
ror
mov
xor
repz
hlt
pop
inc
pop
mov
vpsllvd
shl
mov
fstp
hlt
lods
fbstp
hlt
mov
sar
hlt
mov
sbb
js
adc
cmp
call
outs
cwde
ficom
add
or
pop
clc
adc
jne
call
cmps
and
inc
jmp
or
jne
popa
dec
test
mov
jmp
sub
pop
mov
xor
xlat
pop
stos
adc
ds
pop
xor
sbb
dec
mov
xor
mov
mov
imul
xlat
fwait
mov
or
test
mov
cmps
pop
sub
jmp
sbb
pop
pop
adc
xchg
dec
mov
or
nop
and
dec
int
xchg
inc
dec
into
dec
ins
jmp
ficom
or
cdq
je
inc
(bad)
xor
and
int3
mov
mov
sbb
lods
movs
arpl
call
test
mov
imul
jge
fidiv
stos
cmp
lds
(bad)
mov
cli
mov
(bad)
sub
cmps
sbb
lds
xor
cmp
sbb
xchg
mov
shl
push
xlat
gs
add
mov
add
cwde
fisttp
mov
ds
call
cmp
test
or
leave
mov
mov
in
out
mov
xchg
fild
ret
jl
imul
push
mov
loopne
or
retf
hlt
mov
jo
adc
test
xchg
les
lahf
mov
and
sub
retf
push
lock
sub
inc
pop
cmp
in
lock
ds
ja
xchg
ins
jg
int
dec
int
ins
or
arpl
pusha
dec
sub
mov
sar
inc
cli
retf
dec
stc
cmp
(bad)
fstp
add
test
xchg
imul
mov
adc
dec
adc
rcl
rcr
fisttp
mov
bswap
dec
mov
adc
lahf
das
add
xchg
shr
fcomp
jge
iret
cli
mov
jl
into
aaa
dec
dec
inc
and
jbe
bound
test
rol
mov
ror
xchg
push
nop
lea
xchg
(bad)
jl
ins
fwait
inc
pushf
add
jmp
jnp
movs
(bad)
xor
loope
jmp
shl
movs
cwde
in
pop
ds
xor
je
aas
and
(bad)
loopne
pop
add
adc
or
rcl
repnz
xchg
test
jl
fdiv
ficom
or
ins
xchg
int3
mov
jecxz
adc
jge
add
(bad)
aam
mov
outs
and
inc
lea
mov
or
(bad)
pop
inc
xchg
add
xlat
sub
fist
lea
icebp
cmp
lods
inc
xor
test
pop
mov
jmp
sbb
pop
sub
loop
adc
sar
mov
cmp
(bad)
out
inc
xor
push
cmps
or
add
sahf
repnz
sub
push
out
push
lds
pop
or
mov
mov
iret
fstp
pop
xchg
(bad)
outs
add
xchg
xchg
cmp
add
les
mov
mov
cwde
jbe
jno
dec
loop
les
or
(bad)
pop
nop
out
or
das
jne
ins
(bad)
sub
bnd
ins
mov
test
jmp
push
cmps
adc
and
bound
lds
js
xchg
shr
in
xchg
mov
adc
daa
pusha
inc
sbb
fwait
aad
pop
push
xchg
or
cmps
xor
iret
mov
sti
jle
pop
lock
adc
dec
data16
int
sub
mov
fstp
pop
mov
out
sub
data16
test
mov
rol
loopne
jns
and
js
xchg
mov
xchg
mov
inc
mov
adc
repz
popf
xchg
pop
cmp
mov
out
xchg
cmp
int3
dec
jo
xor
(bad)
neg
fldenv
lds
and
cmc
push
cld
or
test
movs
rcr
xchg
sbb
pusha
xlat
cmp
lea
scas
into
rcl
ins
call
adc
icebp
dec
add
rol
xchg
adc
adc
push
mov
shl
cs
out
rcl
aad
test
call
fs
mov
leave
(bad)
jmp
push
mov
mov
sbb
dec
and
das
stc
cmp
mov
jge
sar
jl
retf
mov
(bad)
xor
push
sub
dec
mov
imul
and
sti
(bad)
xor
pusha
sbb
test
jbe
xchg
(bad)
push
jg
inc
dec
fnstenv
int3
lock
sub
(bad)
mov
cmp
mov
rcl
jns
aas
bound
mov
pop
pop
loop
sahf
dec
mov
cmps
(bad)
fild
daa
xlat
rol
cmps
into
jmp
or
mov
sbb
mov
sti
dec
jo
sub
in
ror
ja
and
test
cmp
je
xor
stos
sar
stos
(bad)
nop
xor
push
clc
loop
xchg
cmps
fwait
mov
mov
xchg
fwait
sub
es
push
cmp
mov
sbb
dec
or
mov
mov
mov
mov
sub
mov
out
and
push
repnz
mov
fld
les
add
and
adc
mov
loopne
push
je
cmp
jmp
enter
hlt
and
fcom
jo
adc
outs
fld
jmp
out
lock
mov
jl
push
lahf
lods
xor
movs
movs
sub
mov
mov
add
stos
or
pop
xchg
cmc
cmp
out
pop
and
mov
fbld
or
pop
mov
aam
test
jae
loopne
inc
rcr
cmc
dec
xor
mov
xor
xchg
movs
jmp
cld
into
jno
push
in
and
or
gs
scas
rcl
(bad)
or
ss
movs
xor
mov
movs
push
imul
sbb
je
mov
cmp
jmp
push
int
leave
fwait
out
pop
ja
jae
mov
sahf
aam
push
adc
fldenv
call
sub
xor
and
mov
and
imul
mov
dec
imul
sbb
daa
xor
pop
cli
mov
or
jl
arpl
mov
popf
pop
ss
fisubr
jge
cld
xchg
into
lock
xor
sbb
mov
add
into
or
dec
arpl
sub
push
(bad)
cld
xor
lods
jae
in
mov
cmp
outs
in
mov
push
mov
dec
mov
gs
pop
fild
inc
sbb
dec
lahf
mov
call
popa
popa
add
pop
mov
shl
nop
shl
loopne
call
or
dec
sahf
int
mov
outs
or
call
fimul
aam
test
pop
mov
(bad)
jle
cmp
stc
ds
mov
adc
retf
pushf
cmps
mov
std
popa
sbb
adc
add
bound
adc
mov
je
jecxz
ja
int3
inc
ja
push
xlat
and
jns
mov
pop
ror
inc
jnp
mov
sub
or
sub
lds
shl
fwait
into
add
pop
loop
adc
fistp
mov
and
ja
shr
adc
out
pop
mov
cvtps2pi
js
pop
daa
cwde
adc
xlat
or
or
scas
jae
mov
out
mov
mov
sub
and
or
mov
in
mov
loop
ds
xchg
and
repnz
ja
sub
fdivp
mov
pusha
push
jno
pop
inc
in
pushf
in
mov
loop
mov
movs
mov
mov
adc
int
inc
div
xor
mov
hlt
push
add
fwait
mov
repnz
mov
xchg
mov
in
mov
sar
adc
jno
pop
jnp
test
push
retf
xchg
or
push
push
dec
dec
lahf
rcl
adc
repnz
lock
je
inc
dec
sbb
sbb
and
mov
ret
xor
push
push
stc
fist
dec
dec
rcl
data16
loope
or
imul
shl
repz
dec
jnp
ds
pushw
call
xor
push
pop
ss
js
adc
pop
xor
bound
stc
cmps
push
cdq
mov
inc
mov
jae
sbb
inc
add
into
imul
scas
and
pop
outs
mov
sub
repz
or
fiadd
rol
pop
xor
fisubr
push
retf
mov
xchg
idiv
cmp
ja
ins
mov
clc
stos
imul
mov
pop
and
jbe
sbb
and
outs
fbld
or
nop
xor
xor
call
retf
sub
mov
sub
imul
stos
jecxz
das
dec
fdivr
mov
xor
jbe
mov
xchg
cmp
mov
sbb
gs
jno
outs
xchg
aas
sub
mov
mov
push
out
pusha
lahf
movs
inc
fwait
jle
ins
nop
shr
stos
outs
mov
mov
mov
aaa
add
mov
pushf
xchg
cmps
mov
inc
add
scas
sbb
pop
scas
or
gs
clc
pop
sbb
ror
pop
cli
outs
sub
outs
test
mov
pop
jae
mov
movs
test
pop
mov
aaa
pop
or
leave
call
fstp
add
int3
dec
cmp
sub
pop
jno
popa
xor
add
popa
dec
cmps
sub
ds
popa
mov
cdq
ffree
repz
push
xchg
stc
sub
push
and
dec
adc
fwait
iret
pop
outs
sbb
inc
out
and
sti
and
mov
mov
inc
jl
es
test
outs
mov
or
mov
fisubr
das
iret
movs
jo
pop
mov
jecxz
lods
in
(bad)
pop
leave
imul
fstp
sub
mov
leave
mov
imul
jecxz
inc
xor
or
cwde
(bad)
in
or
pop
push
fidivr
xor
mov
sahf
clc
xchg
mov
mov
(bad)
mov
sti
pushf
movs
jno
stos
(bad)
in
(bad)
adc
lea
mov
retf
add
hlt
xchg
ss
outs
clc
jae
fisubr
jbe
mov
leave
push
inc
(bad)
(bad)
ins
bound
mov
sbb
addr16
outs
jae
sub
pop
out
cmp
lock
imul
(bad)
xor
jge
xchg
sar
cdq
ret
shr
mov
jmp
lds
test
or
adc
in
cmp
fcmovu
xchg
mov
push
sbb
int
in
aaa
sahf
adc
push
jl
and
add
loopne
mov
in
or
outs
aaa
mov
cmp
dec
out
sbb
mov
scas
cmp
bound
xlat
or
stos
pop
dec
jne
xor
jnp
scas
and
(bad)
stos
stos
add
cmps
ret
mov
sbb
dec
call
inc
cmp
push
sub
movs
in
pushf
xor
pop
sbb
aam
xlat
movs
scas
xchg
into
popf
mov
dec
xchg
or
adc
dec
(bad)
jmp
pop
mov
cmp
mov
mov
inc
pop
in
fnstsw
mov
adc
daa
into
mov
inc
lods
scas
pop
mov
lock
xor
out
imul
fisub
mov
jnp
and
jno
push
test
sbb
and
push
cmc
add
push
cmp
shl
out
cs
jae
and
or
int3
sbb
jns
jb
cmp
fistp
mov
in
dec
mov
not
arpl
(bad)
cmp
es
xor
sbb
lock
mov
xchg
and
test
hlt
mov
add
scas
fldcw
fcomp
fidivr
not
sbb
into
mov
out
hlt
jle
out
inc
ficomp
test
mov
pop
aaa
scas
popf
inc
and
fsub
sbb
jp
popa
loop
fistp
jmp
push
ins
movs
jnp
push
sub
cmps
mov
inc
mov
in
les
mov
or
les
fcmovb
or
pop
das
mov
pop
or
fcomi
and
sub
xchg
mov
and
dec
sbb
push
in
jno
and
mov
sahf
es
int
and
push
sbb
aaa
mov
lock
cmp
cmc
aam
mov
aad
fist
idiv
adc
imul
test
push
int
sbb
mov
jne
pop
das
daa
dec
inc
lds
and
fstp
jnp
(bad)
and
push
aaa
jae
rol
inc
lea
fisub
and
(bad)
dec
icebp
mov
out
call
shl
mov
jmp
cmp
xor
xchg
in
loopne
mov
sub
inc
xor
fstp
mov
pop
xor
fld
dec
mov
sub
dec
or
out
mov
jae
cmps
cmps
push
shl
mov
std
ins
sbb
add
jae
idiv
int
clc
mov
ss
or
xor
sub
jecxz
or
scas
xchg
cmp
lock
sbb
fidiv
xor
cwde
pop
or
enter
cmc
add
xchg
bound
pop
out
out
mov
sub
addr16
xor
fsubr
and
jp
push
mov
adc
pusha
push
mov
push
sub
lahf
call
iret
push
push
(bad)
sub
push
pop
dec
inc
je
pop
jmp
(bad)
(bad)
jl
jno
jb
mov
int
mov
popa
shl
sbb
cli
in
imul
sub
nop
sub
jbe
je
rol
push
mov
jb
mov
test
js
repnz
movs
mov
cmp
hlt
cmp
lds
mov
mov
adc
lahf
shr
xchg
sub
mov
stos
push
int3
lods
ficom
jae
dec
mov
sbb
mov
xlat
inc
mov
fcom
dec
xchg
test
div
jle
es
dec
clc
rcr
jbe
sub
push
fild
xchg
inc
aam
or
jmp
leave
inc
mov
popf
pusha
jge
gs
sbb
in
sbb
sub
stc
pop
rcl
nop
sahf
inc
sub
movs
out
jbe
retf
mov
mov
jmp
pop
push
cmp
fs
out
inc
aas
test
mov
jmp
cmps
(bad)
aad
push
or
and
mov
xchg
mov
adc
mov
fcomp
arpl
out
std
push
cwde
jns
in
jne
(bad)
fisttp
jnp
pop
push
sub
fs
xchg
pavgw
adc
(bad)
stc
jae
cmp
dec
fs
movs
add
xchg
pop
and
or
jo
js
add
fwait
inc
pusha
push
jge
push
ret
int
or
(bad)
repz
stc
retf
cmp
aad
je
push
or
fst
stos
push
xor
xchg
or
daa
in
fisub
jmp
outs
stos
shl
inc
and
inc
mov
jb
mov
inc
repnz
test
fldcw
test
xor
xchg
add
xchg
retf
cli
in
mov
call
lea
cs
xor
and
cmp
adc
xor
sub
cmp
pop
dec
add
mov
arpl
jg
inc
push
add
out
retf
push
xchg
cmc
xor
mov
dec
mov
cld
rcl
mov
mov
mov
mov
push
push
push
popa
push
or
sti
es
xchg
lock
sbb
dec
outs
shl
mov
iret
xor
jns
mov
mov
rcl
test
mov
iret
or
test
aad
mov
inc
push
rcr
jbe
fldenv
out
ds
stc
into
ficom
inc
sar
push
(bad)
mov
mov
aam
lods
mov
jge
in
(bad)
ret
scas
lds
stos
jmp
imul
fbld
push
pop
dec
push
outs
mov
fst
xchg
not
cs
bound
cld
pop
call
loop
pop
test
sub
or
data16
adc
mov
jp
ds
fsub
cmps
push
adc
or
inc
inc
cmp
mov
cmp
call
and
jg
idiv
mov
mov
repnz
pop
cmc
clc
scas
aad
shl
inc
add
test
pop
xchg
ret
pusha
pusha
out
shl
sub
(bad)
movs
add
(bad)
xor
pop
popa
dec
(bad)
mov
arpl
sbb
inc
imul
dec
cmp
fsubrp
js
fninit
or
outs
cmc
stos
cmp
cmp
sbb
push
jge
or
mov
cmp
push
stos
jmp
mov
jecxz
sbb
cdq
ja
adc
mov
inc
inc
mov
inc
fwait
imul
jecxz
aas
or
or
test
gs
xor
retf
ins
int
mov
je
imul
push
cld
sub
pop
data16
push
into
dec
cmp
xor
retf
imul
int3
movs
(bad)
loope
adc
in
cmps
or
pop
push
in
pop
ja
in
out
imul
ds
lods
cmp
test
ret
popa
push
xchg
rcr
pushf
popf
(bad)
jns
(bad)
mov
and
pusha
sub
std
ds
sub
mov
ins
(bad)
movs
inc
jae
push
call
xchg
xchg
(bad)
xchg
dec
sbb
in
or
cmp
lahf
xchg
inc
fs
add
add
sub
gs
lock
scas
sub
cmp
jle
mov
or
and
cli
fisttp
aas
mov
and
pop
mov
mov
dec
dec
repz
or
jmp
aad
jbe
dec
into
aam
inc
xchg
into
outs
jg
or
adc
sbb
test
xchg
sar
dec
icebp
jge
shl
je
mov
mov
mov
test
into
jne
sub
(bad)
jb
xor
pop
imul
cli
shr
push
retf
push
repnz
fdivr
movs
fmul
call
or
jns
mov
xor
ficomp
not
adc
pop
pop
test
mov
out
cdq
jl
xor
mov
jo
enter
aam
ins
(bad)
cmp
xchg
(bad)
cmp
sub
call
mov
jb
retf
adc
sbb
popf
jp
stc
mul
lds
loop
test
xor
or
retf
sbb
sbb
push
lods
frstor
cli
cs
(bad)
retf
fs
sub
jl
mov
cmp
xchg
jg
neg
inc
xchg
fchs
xor
sub
mov
push
div
lods
xchg
pop
test
fidivr
addr16
sbb
xchg
cli
pop
lock
shl
pop
test
jbe
(bad)
jbe
push
or
jge
mov
hlt
jge
out
adc
xchg
sub
lock
mov
lds
and
jecxz
out
pop
pop
push
movs
and
mov
push
jb
(bad)
jnp
lds
pusha
push
adc
outs
dec
lds
sbb
sub
scas
mov
xchg
sti
(bad)
jge
push
jnp
pop
repz
int3
bound
mov
mov
add
test
push
jo
ror
loop
test
add
mov
push
mov
jp
call
imul
jecxz
imul
sbb
inc
data16
jecxz
adc
push
xor
imul
mov
scas
push
fdivrp
clc
imul
push
jae
ins
adc
cmp
mov
pop
data16
xchg
sbb
cli
std
ret
dec
into
cmp
test
cmp
into
adc
(bad)
push
jmp
aaa
mov
ss
dec
sub
retf
xor
push
or
nop
pop
int3
or
pusha
ret
adc
cmps
imul
xchg
sub
ss
ret
rcl
test
mov
call
fld
gs
dec
es
imul
mov
pop
test
cmps
mov
jmp
dec
call
mov
test
mov
add
xor
ret
or
adc
imul
jl
ja
jbe
int
aad
mov
lods
out
jnp
jb
loop
inc
ret
mov
sub
jb
popf
adc
ins
jmp
mov
popa
xchg
push
adc
xlat
mov
sub
cdq
mov
test
mov
adc
sub
inc
and
std
jp
stos
adc
mov
inc
and
gs
rcl
jg
xchg
sbb
jp
inc
movs
add
test
sub
inc
pop
dec
out
push
rol
mov
(bad)
fild
(bad)
es
sub
dec
shl
in
aad
jbe
fdivr
data16
mov
std
cmp
dec
test
inc
or
jnp
fbld
fstp
dec
adc
jne
sub
push
mov
add
das
jmp
out
sbb
outs
arpl
xor
jnp
and
mov
add
out
xor
in
mov
icebp
jle
sub
fidivr
das
mov
stc
out
cmps
inc
loopne
add
int
xchg
inc
add
jo
lea
cwde
shr
(bad)
adc
xor
mov
mov
dec
les
sbb
inc
add
and
push
add
jmp
lods
pop
lds
pushf
xor
fimul
push
pop
jb
pop
cwde
loope
mov
rcl
xlat
addr16
sar
loopne
and
in
rcl
push
pop
sbb
out
(bad)
cmc
(bad)
cmp
loopne
sbb
or
gs
cmp
cmc
dec
inc
out
dec
mov
mov
sbb
sbb
sti
mov
adc
cmp
or
jnp
nop
dec
and
or
int
(bad)
hlt
mov
pop
jle
jae
imul
adc
dec
stos
add
fsubr
sar
(bad)
in
mov
call
lock
and
cmp
cwde
fsubrp
sub
adc
xchg
sub
add
cmp
stc
xor
popa
push
je
inc
mov
idiv
push
xor
push
xchg
fs
movs
sbb
add
mov
push
push
pop
or
pop
xor
sbb
data16
mov
push
jp
push
cmp
jne
cmps
sahf
fidivr
sub
in
fxtract
sti
mov
leave
fs
pop
retf
mov
sub
or
mov
fst
movs
fst
das
hlt
pop
pop
mov
and
push
ins
repz
or
or
pop
leave
je
(bad)
jmp
cmps
in
dec
mov
hlt
mov
pop
stos
pop
pop
cmp
mov
test
jbe
inc
dec
fwait
xchg
popa
jo
mov
cmp
sti
ret
out
xchg
jbe
outs
ror
and
stos
sub
mov
das
xchg
sbb
mov
or
mov
cs
call
test
popf
ror
inc
fsub
outs
pop
sub
cmp
mov
dec
add
mov
inc
push
fwait
ins
fldl2e
out
pop
or
xchg
jecxz
adc
push
jg
mov
repnz
rcr
das
cmp
push
mov
loope
ds
dec
xchg
jno
sbb
sar
mov
dec
test
stc
adc
mov
scas
dec
push
ins
in
pop
arpl
(bad)
jne
xchg
mov
movs
jae
xchg
sar
les
test
mov
mov
cmps
das
push
and
mov
not
inc
enter
inc
test
inc
sbb
inc
cld
sbb
mov
sub
cmc
movs
inc
sbb
call
bound
and
mov
cld
mov
mov
call
ins
and
ins
les
jmp
loopne
cmp
cmps
mov
aaa
or
pop
repnz
push
pop
pop
clc
pusha
mov
shr
mov
sbb
adc
fs
int3
(bad)
enter
dec
rcr
mov
pop
call
rcl
(bad)
call
push
daa
in
mov
in
push
and
sub
mov
pop
sub
pop
cmc
test
int3
jne
cld
pop
mov
aas
sti
scas
or
imul
movs
mov
sbb
jmp
cmps
(bad)
jmp
cmps
dec
fsubr
sub
xchg
loope
add
dec
pop
movs
test
xchg
fimul
test
push
dec
mov
cmps
in
arpl
imul
idiv
cmp
pop
jle
and
fimul
stos
pop
ror
lock
xchg
sbb
hlt
data16
xchg
iret
inc
cli
in
mov
dec
jle
jmp
dec
scas
xchg
mov
and
xor
push
dec
mov
in
lea
and
stos
pusha
cmp
movs
adc
or
shl
xor
mov
(bad)
mov
or
pop
ret
call
dec
mov
adc
mov
xor
nop
bound
cmps
mov
rcr
inc
cmp
(bad)
ds
xor
pop
pop
xor
aaa
dec
mov
or
scas
jge
movs
and
lahf
mov
je
add
movs
arpl
stos
stos
cs
stos
sub
or
cli
jnp
xchg
lds
push
and
cli
aas
push
shl
int3
add
call
es
xor
(bad)
adc
inc
cmps
xor
cmps
adc
dec
sub
int3
je
jbe
data16
fcmovbe
in
call
inc
jp
and
mov
int3
cmp
in
aaa
pop
test
inc
sbb
sbb
pop
sahf
jno
pop
jb
inc
hlt
and
adc
stos
add
(bad)
mov
addr16
add
pop
les
dec
outs
nop
or
sbb
pushf
aad
mov
daa
dec
sub
sub
fsubr
and
pusha
cmp
xchg
imul
retf
add
push
xchg
nop
jg
stos
cmp
in
ja
popa
inc
out
mov
retf
mov
aam
cmps
push
jl
cmp
ficomp
in
xor
jo
sbb
or
stos
inc
mov
(bad)
jbe
es
les
mov
jb
movs
(bad)
dec
add
loopne
and
add
mov
pop
inc
jo
cld
(bad)
jmp
mov
mov
sbb
jbe
ja
and
fdivr
or
inc
pop
push
dec
mov
xor
(bad)
aam
push
je
adc
aas
imul
cmps
and
sub
xchg
fwait
sbb
(bad)
pop
dec
loopne
(bad)
into
sti
xchg
clc
inc
dec
dec
ror
das
pop
(bad)
fdivr
jecxz
push
xor
and
cwde
mov
mov
cmp
cs
mov
push
scas
adc
ror
jmp
pop
aad
jo
or
aaa
or
cmp
push
xor
or
inc
sbb
mov
mov
xchg
gs
in
lods
retf
sub
mov
das
and
cmc
iret
push
aas
shl
and
mov
xchg
cmp
inc
aad
lahf
lods
cmc
push
inc
fidiv
pusha
mov
std
test
mov
stc
push
das
daa
add
dec
mov
in
addr16
add
in
ret
and
adc
call
jmp
or
push
imul
add
xchg
push
neg
fcom
mov
push
dec
test
dec
jne
mov
and
cld
mov
out
xchg
retf
loopne
push
sbb
mov
and
cmc
jmp
mov
fadd
test
pop
int
test
jmp
adc
ins
call
pushf
xchg
inc
cld
stos
into
stos
ins
fsubr
jecxz
out
jne
sbb
jbe
je
add
(bad)
xchg
rcl
xchg
inc
inc
mov
stos
leave
xchg
dec
pop
adc
jg
arpl
adc
dec
sbb
push
pop
adc
sbb
bound
sub
(bad)
sub
cmp
jbe
mov
jbe
sub
ja
xchg
cmc
(bad)
push
or
stc
jle
inc
push
mov
fisub
adc
in
fwait
cmps
fucom
push
jnp
and
stos
mov
dec
jae
sub
movs
ret
mov
sub
jg
nop
xchg
ins
push
mov
adc
ss
lods
jns
in
lods
sbb
sub
arpl
(bad)
popa
aaa
imul
vmptrst
addr16
and
popf
stos
jae
dec
pop
mov
pop
mov
fdecstp
clc
fs
js
dec
out
mov
pusha
pop
xlat
mov
mov
xlat
and
outs
pushf
repz
xchg
xchg
jnp
adc
mov
sub
cmp
push
sbb
jmp
ficom
nop
dec
out
cmp
xor
pop
(bad)
fnsave
pop
cli
pop
push
outs
sub
imul
mov
pop
out
repnz
mul
repz
sti
(bad)
(bad)
add
(bad)
in
adc
(bad)
in
push
ja
mov
dec
mov
sub
sbb
dec
dec
sbb
out
push
add
xchg
jle
push
gs
inc
xchg
fsubr
in
movs
xchg
push
aaa
jge
out
lods
cmp
jge
ins
add
clc
popf
or
scas
or
fld
cdq
push
call
jmp
outs
aad
int3
mov
cmp
mov
or
popf
mov
mov
shr
in
rol
or
xchg
cmp
add
test
mov
retf
enter
(bad)
sbb
pop
test
cmp
ins
jae
sbb
call
inc
mov
sub
in
mov
cmp
stos
mov
arpl
jo
icebp
and
push
ss
or
arpl
adc
shr
lock
inc
add
mov
ss
cmp
in
inc
push
adc
fistp
cmc
arpl
leave
jge
inc
push
pushf
mov
xor
inc
cmp
cmp
inc
and
imul
mov
icebp
inc
fist
mov
cmp
jp
stc
adc
sahf
push
add
lods
cmps
aam
push
test
imul
div
lods
xchg
jnp
add
rcl
jne
sbb
xchg
jp
mov
out
mov
or
js
sar
lds
cmps
dec
cmp
popa
lods
mov
jmp
cmc
jecxz
retf
fwait
push
shl
mov
ds
inc
test
cdq
mov
jno
mov
mov
repz
sub
shl
aas
fld1
inc
pop
movs
push
cmp
adc
mov
and
bnd
mov
fidiv
add
push
ss
pop
out
in
imul
push
sbb
xor
mov
dec
(bad)
addr16
sbb
and
test
mov
in
cmp
fidivr
sar
sbb
out
fwait
or
adc
push
repz
and
pushf
out
aas
aas
outs
arpl
push
and
les
outs
dec
out
mov
mov
cmp
retf
not
sub
push
fadd
arpl
jmp
pop
sbb
fisttp
jg
es
jb
test
inc
push
shl
je
cwde
test
cs
and
jp
test
xchg
mov
xchg
sub
push
ret
xchg
data16
sub
jl
std
mov
(bad)
shl
cdq
jp
mov
add
xor
sbb
pushf
shr
(bad)
neg
data16
(bad)
out
in
xchg
pop
fld
push
mov
ins
jp
push
movs
xchg
sahf
adc
jnp
das
mov
xchg
pop
mov
lods
mov
sbb
fimul
in
popa
sub
adc
es
test
repz
xor
lods
mov
and
inc
pop
movs
dec
xchg
mov
mov
adc
sti
loop
mov
push
dec
and
fwait
inc
xchg
or
(bad)
dec
mov
or
or
cmp
mov
fnstenv
(bad)
push
aaa
fsubr
mov
xchg
push
cwde
stos
les
xor
outs
push
push
pop
xor
cmps
cwde
inc
int3
mov
ficomp
rcr
ret
inc
enter
mul
push
in
fs
lods
inc
push
adc
in
xor
idiv
shl
mov
push
popf
cmp
add
xchg
inc
jp
hlt
mov
sub
and
pushf
add
cmp
aad
mov
mov
add
inc
loopne
retf
std
mov
enter
dec
cmps
and
jnp
cmp
and
inc
arpl
fsubr
xor
mov
sbb
jl
pop
jmp
xchg
sub
int
out
int
les
mov
add
lahf
or
ins
les
getsec
push
lock
fwait
sbb
data16
adc
dec
jae
icebp
mul
mov
arpl
push
sub
daa
and
jnp
jecxz
mov
sbb
mov
out
mov
dec
jns
cmp
movs
lods
mov
bound
rcl
jle
pop
(bad)
dec
(bad)
fsubr
or
sbb
shr
mov
jbe
push
lds
inc
jecxz
xlat
xor
or
fidivr
aas
mov
adc
call
push
sub
gs
sbb
mov
jmp
or
mov
pop
shr
out
xor
daa
add
iret
fild
mov
mov
inc
pushf
jne
imul
and
add
cli
and
call
xor
(bad)
cdq
sbb
mov
sbb
push
push
mov
and
mov
loope
mov
xchg
pop
test
arpl
sbb
pop
pop
cmp
xor
out
pop
lock
lods
cmp
add
in
cmp
or
and
and
mov
in
mov
int
or
cmps
sbb
jo
or
cmps
(bad)
inc
(bad)
sbb
add
clc
repnz
mov
retf
ror
adc
xor
pusha
inc
sbb
(bad)
jnp
cmp
in
add
jne
icebp
ret
or
cmp
adc
adc
fsub
call
push
add
inc
xchg
mov
jle
repz
xor
sbb
fdivrp
sbb
cli
bound
and
dec
xor
js
pop
ja
push
mov
pusha
dec
or
or
mov
inc
push
inc
ret
rcl
repnz
jne
push
and
int3
xor
mov
or
push
inc
neg
lods
mov
outs
add
test
jmp
add
and
mov
push
shl
push
hlt
and
push
mov
mov
int3
int3
imul
pop
mov
retf
fs
push
fcomp
lock
jbe
inc
int3
xor
pusha
mov
push
fild
aad
shl
sub
in
mov
mov
xor
mov
call
and
xlat
(bad)
fild
(bad)
pop
retf
xchg
inc
(bad)
es
cdq
jmp
leave
xchg
sub
enter
push
inc
and
test
into
test
jmp
fild
jbe
cdq
xor
cmc
daa
jmp
je
pop
test
xlat
jl
shr
cmp
lea
data16
fisttp
push
push
push
mov
mov
xchg
xchg
sub
imul
dec
sub
sub
iret
dec
xchg
mov
sbb
sub
int
mov
xchg
ja
mov
jae
(bad)
stc
mov
sti
ss
(bad)
push
test
or
shl
sbb
pop
je
inc
sar
xchg
or
mov
fsubr
pusha
dec
pop
sbb
fisttp
push
rol
adc
push
lods
push
pusha
add
repz
push
jl
inc
scas
mov
adc
jmp
stos
sbb
cmp
jecxz
shr
pop
scas
mov
push
jmp
cs
sbb
leave
das
mov
adc
rcl
xor
pop
fidiv
enter
jo
push
mov
inc
xchg
and
ds
mov
lods
aam
pop
and
enter
sub
xlat
mov
or
lods
lahf
mov
jbe
mov
aam
test
data16
pop
sar
sbb
inc
push
inc
ds
sub
hlt
xor
add
lea
inc
add
dec
xchg
cld
data16
out
mov
dec
xchg
jecxz
data16
in
add
les
rol
mov
cmp
sub
push
inc
jbe
(bad)
imul
and
jo
mov
(bad)
in
mov
xchg
ins
push
mov
and
call
xor
retf
jns
enter
pop
mov
imul
and
loope
inc
mov
lea
push
nop
stc
retf
fimul
dec
into
lods
jbe
loop
aad
mov
movs
push
fistp
(bad)
jl
mov
adc
aas
xor
and
fisub
and
movs
nop
int3
sub
add
shl
mov
les
ss
call
je
lahf
jmp
push
and
fcomp
rcr
sbb
jmp
fwait
pop
cmp
test
push
adc
mov
out
movs
test
jmp
loop
pop
rcr
cld
sbb
wbinvd
add
outs
dec
rcr
jl
loop
inc
xor
mov
repnz
cmp
cmps
les
mov
xchg
out
push
inc
and
movs
mov
stos
dec
cmp
(bad)
mov
adc
ins
sub
pop
inc
(bad)
dec
lods
xchg
push
jp
xor
pslld
mov
xor
int
sbb
and
in
int3
iret
les
sbb
mov
in
lahf
sub
out
jmp
jle
arpl
sub
xor
rcl
inc
sub
test
dec
fdivr
test
pop
in
xchg
push
fs
fld
out
add
fadd
or
mov
dec
xor
aad
rol
push
clc
(bad)
dec
das
jmp
dec
adc
jmp
or
pop
jecxz
xlat
xchg
cmp
jmp
mov
jg
sbb
adc
pop
lahf
sub
jecxz
mov
cmps
add
push
popf
lods
inc
push
sub
rcr
(bad)
jle
pusha
and
in
sbb
pop
popf
iret
cli
bound
dec
xchg
imul
stc
rol
sub
push
out
add
jmp
cmp
sub
add
inc
or
pop
lock
cdq
or
nop
mov
data16
push
jb
and
cmp
xchg
imul
call
cld
inc
test
lea
add
out
movs
es
(bad)
add
jb
add
lock
mov
inc
je
mov
sbb
dec
loope
mov
shl
dec
dec
out
repz
mov
dec
aad
and
aas
adc
test
shl
mov
arpl
push
jnp
dec
leave
addr16
inc
or
ret
test
mov
and
ds
xor
cmp
data16
xchg
jbe
(bad)
xor
cld
push
sbb
sbb
pop
fbld
in
pop
ins
adc
add
add
and
mov
push
or
les
add
movs
or
mov
repz
lahf
stos
sbb
add
xchg
pop
xor
mov
je
add
aas
shr
dec
jl
push
stos
push
jne
mov
lods
mov
mov
(bad)
adc
ins
mov
retf
aad
loopne
cmp
mov
lock
sub
stos
lock
sbb
jno
fisubr
int3
push
mov
clc
movs
mov
mov
and
mov
xchg
int3
pop
in
adc
cdq
dec
sbb
pop
pop
add
leave
dec
mov
dec
add
je
iretw
test
ja
mov
mov
inc
cmps
(bad)
pop
push
aam
fnstsw
out
int3
dec
xchg
mov
aas
cmps
(bad)
xchg
in
icebp
xlat
push
mov
enter
test
sti
cmp
fwait
lahf
xor
and
inc
pushf
mov
push
pop
sbb
test
xchg
lods
mov
and
out
out
scas
mov
or
js
(bad)
pop
inc
ret
jmp
add
test
jle
hlt
mov
jg
xor
xchg
pop
sub
sbb
mov
(bad)
movs
aam
push
push
test
call
jno
leave
sbb
int
mov
imul
in
sub
movs
lea
xchg
dec
dec
jle
push
out
rcr
outs
jecxz
test
push
add
mov
cwde
sub
test
or
bound
add
push
pop
sahf
cli
stos
repnz
sub
mov
cmc
pop
pop
addr16
scas
shl
rcl
jecxz
inc
sbb
sub
and
mov
jbe
js
dec
push
lods
loopne
cmps
jb
push
out
pop
cmp
out
xchg
lods
sbb
scas
sub
lea
and
mov
and
mov
mov
cs
add
je
mov
mov
sbb
xchg
xor
pop
inc
cdq
pop
repnz
pop
jmp
xchg
retf
add
lock
xchg
lahf
(bad)
adc
sub
jo
test
mov
sbb
mov
cs
xor
pop
int3
fsubr
mov
add
pushf
ds
dec
mov
sbb
stc
out
mov
popf
or
fsubr
inc
ins
inc
jmp
aam
dec
retf
scas
fmul
ds
shl
out
in
fcom
mov
pop
ins
push
aad
mov
ret
cli
stos
imul
dec
mov
cld
int
lods
and
pop
add
and
loope
and
and
mov
out
mov
ret
les
scas
mov
mov
imul
(bad)
push
cs
ds
mov
lahf
jle
leave
dec
imul
xor
retf
push
out
fsubr
(bad)
mov
sbb
xchg
mov
push
clc
or
loope
sbb
cmc
aaa
pop
lock
xchg
cwde
fisubr
jnp
nop
das
(bad)
jecxz
push
pop
shl
add
mov
sbb
jl
sbb
jns
pop
pop
push
pop
aad
rcr
xchg
mov
xchg
or
ret
lock
mov
cdq
fild
imul
xchg
mov
mov
jne
into
sbb
mov
mov
xchg
sar
out
and
aam
and
cwde
jmp
xchg
cdq
test
mov
jmp
(bad)
push
mov
in
mov
fucomp
dec
aaa
popa
push
mov
inc
repz
mov
add
add
scas
jmp
xchg
cs
loop
dec
movs
mov
std
ret
xchg
add
lds
jmp
or
lea
xchg
push
test
jno
cs
jmp
cmp
jmp
pushf
into
sbb
in
sub
push
(bad)
sbb
lahf
fsubr
dec
scas
cs
lds
out
shl
das
scas
or
dec
mov
test
cwde
xchg
les
push
in
mov
jecxz
pop
enter
jmp
mov
mov
jnp
scas
mov
mov
call
sqrtps
xchg
xor
pop
mov
js
push
sar
out
mov
push
mov
xchg
adc
mov
and
adc
nop
out
test
adc
fwait
cmp
mov
adc
lods
sbb
xchg
sbb
cld
lds
pop
push
sub
push
adc
(bad)
jno
scas
pop
inc
dec
(bad)
stos
int
test
icebp
scas
pop
hlt
pop
inc
repz
add
fstp
xor
mov
dec
or
mov
mov
mov
pop
push
xor
out
loopne
frstpm(287
mov
ins
jb
sbb
inc
clc
mov
pop
pop
in
hlt
outs
scas
out
aad
xchg
popa
push
sub
pop
adc
ror
or
in
xchg
or
cmps
cmp
js
aaa
mov
imul
std
pop
pop
dec
push
adc
mov
sbb
sub
movs
push
and
sub
push
sbb
xor
sub
dec
jmp
ret
gs
not
inc
sbb
add
cmp
jo
fist
cpuid
dec
push
mov
daa
loope
xor
mov
sbb
clc
inc
icebp
pop
push
pop
xor
(bad)
repz
pusha
sar
mov
mov
mov
xchg
dec
aas
repz
mov
xchg
ja
jecxz
cmp
mov
fwait
sub
adc
loop
pop
(bad)
clc
mov
ret
xor
push
lods
xlat
xor
imul
mov
sbb
stos
iret
add
pop
and
mov
jnp
lahf
cwde
(bad)
adc
cmp
icebp
xor
xor
adc
adc
out
out
retf
and
in
jl
fcmove
sbb
aaa
retf
mov
inc
je
xchg
push
call
add
in
or
ja
test
loopne
fist
call
push
adc
and
(bad)
popf
gs
dec
inc
add
ja
mov
push
ret
sub
jg
dec
int
cmc
shl
xor
inc
cdq
adc
sub
push
or
gs
movs
and
ds
xchg
cmps
cld
mov
adc
stc
adc
sub
mov
movs
mov
mov
pop
dec
and
addr16
xchg
mov
out
inc
dec
cmp
jne
int
cmp
lea
jo
test
(bad)
and
xor
jecxz
adc
jne
scas
xchg
je
push
add
push
pushf
push
jae
fadd
pop
push
cmp
jp
sbb
inc
mov
xor
and
mov
push
std
adc
mov
mov
call
enter
push
stos
fdivr
call
(bad)
retf
add
rcl
pusha
mov
cld
addr16
cmpxchg
iret
mov
mov
or
xchg
test
cs
mov
push
jbe
xor
add
frstor
movs
sub
ds
clc
addr16
mov
or
cld
arpl
cmc
jmp
and
stos
push
ins
outs
mov
ja
out
dec
xchg
js
fs
push
mov
hlt
mov
out
and
add
push
les
jle
push
(bad)
dec
iret
adc
data16
dec
retf
ret
mov
xor
div
or
movs
pop
(bad)
mov
push
out
pushf
cmc
sahf
dec
cmp
add
ds
ins
movs
lock
pop
push
sub
in
adc
push
mov
push
pop
inc
out
fwait
int
lds
popf
dec
lahf
jne
movs
mov
in
and
mov
movs
mov
mov
fadd
out
mov
mov
mov
pop
inc
add
pop
dec
aam
xor
push
mov
mov
das
int3
rep
mov
dec
hlt
cs
test
das
ds
ret
xor
inc
mov
fmul
sahf
int
sbb
ja
push
push
push
lds
adc
cmp
gs
adc
mov
(bad)
outs
(bad)
mov
xchg
dec
adc
pop
cmp
in
inc
imul
cmps
or
fidivr
das
nop
pop
jo
test
retf
ret
push
cli
xor
repnz
xchg
or
mov
mov
dec
adc
data16
fdiv
call
ror
sub
clc
popa
sub
jmp
cmps
ror
scas
lahf
and
cli
out
leave
xor
out
mov
dec
cmp
nop
ins
dec
scas
lods
dec
ja
sbb
inc
pop
mov
xlat
xchg
mov
add
or
sahf
nop
xchg
scas
add
dec
mov
xor
cld
seto
jae
push
out
or
mov
inc
(bad)
fsub
add
int3
ret
(bad)
cmp
loop
jg
jge
cmp
inc
popa
and
std
loop
pushf
out
push
in
dec
dec
push
nop
ss
loopne
cmp
popf
rol
xor
or
dec
mov
frstor
retfw
inc
dec
mov
ror
cmp
sti
outs
dec
add
sub
pop
add
iret
jbe
mov
push
fs
and
mov
sbb
xor
(bad)
int3
add
mov
adc
push
in
pop
xlat
xchg
fldcw
and
xor
or
das
fwait
mov
sar
stos
cs
push
sbb
push
or
jns
scas
or
xor
das
imul
jmp
and
enter
jmp
pop
cmps
call
xchg
cli
les
sbb
xchg
xor
xlat
xor
mov
sbb
jecxz
jmp
sbb
(bad)
addr16
stc
xchg
inc
(bad)
or
ror
nop
je
push
add
gs
push
jmp
sub
cdq
push
lods
loope
pop
sbb
ja
out
mov
rcl
sti
cld
sub
pushf
ds
xchg
ret
adc
ret
stos
mov
mov
pop
adc
jo
dec
jp
shr
cld
dec
and
ret
pop
mov
rol
test
pop
cmp
es
jmp
sbb
popa
and
adc
dec
push
popa
(bad)
and
mov
lock
ds
scas
das
fst
and
pop
das
sub
cmc
push
ror
js
popa
or
out
xchg
scas
shr
mov
(bad)
pop
movs
xchg
xchg
(bad)
xchg
add
jge
mov
arpl
cli
adc
mov
inc
jl
sub
xchg
cld
inc
xor
jmp
inc
shl
out
cmc
and
jb
sub
mov
loope
mov
cmp
popf
(bad)
cmp
xor
adc
sbb
adc
test
(bad)
jbe
pusha
pop
cwde
rcr
ss
sbb
dec
je
sub
cmp
xchg
in
sti
add
addr16
out
xor
mov
pushf
pop
xchg
sbb
into
add
out
inc
fcmovnb
repnz
push
aas
outs
pop
or
aad
data16
sahf
fild
dec
(bad)
mov
arpl
dec
cli
js
jne
mov
imul
jbe
sbb
js
inc
mov
adc
add
pop
push
js
pop
cmp
mov
pop
mov
les
xor
dec
mov
and
mov
jge
jmp
sahf
fs
sub
lock
push
in
out
cld
fmul
fldenv
imul
mov
mov
jmp
sbb
cli
loopne
xor
hlt
out
xchg
test
outs
push
xchg
outs
add
jb
push
xchg
push
les
mul
rcpps
retf
movs
push
push
adc
lods
pushf
fs
adc
push
imul
inc
sbb
je
add
xor
mov
xor
cld
jbe
inc
sbb
pop
pushf
inc
enter
nop
cmp
div
cmp
inc
stos
stos
xor
mov
sub
inc
jmp
push
in
cdq
ror
sub
or
aas
xor
jecxz
jne
xor
in
loopne
pop
loop
push
cmc
push
shl
and
xor
int
adc
fnstcw
ret
ret
add
mov
ficom
mov
xlat
push
imul
mov
xchg
pop
push
shr
jne
pop
imul
or
or
stos
lock
lods
bound
push
cdq
mov
sbb
and
ret
or
repz
mov
(bad)
pop
jecxz
out
sbb
in
cld
mov
out
rol
outs
add
xchg
repnz
add
pop
lock
or
and
pop
mov
xchg
jno
cs
mov
and
test
mov
xchg
and
jmp
mov
sub
or
mov
push
xor
in
mov
test
retf
mov
xlat
(bad)
dec
cwde
ret
imul
dec
push
adc
ins
adc
in
fadd
outs
pop
outs
data16
mov
inc
xchg
aam
cli
call
repz
sbb
cmp
repnz
in
pop
pop
mov
sahf
add
stos
movs
jno
pop
jb
daa
sbb
popf
xlat
shr
lea
or
cmp
pushf
in
das
mov
push
dec
std
das
aam
ds
cmp
scas
push
popf
mov
jl
adc
pop
clc
or
call
xchg
cmps
sahf
pop
pusha
mov
or
mul
and
cmp
data16
push
jbe
or
imul
pop
jns
daa
sbb
sbb
ffree
xchg
aas
mov
xchg
inc
jae
sub
leave
mov
jle
sti
shl
sahf
xchg
cmp
(bad)
sahf
inc
les
jge
inc
or
je
lods
xchg
mov
xor
das
lods
jg
cld
jbe
imul
cmc
retf
addr16
arpl
adc
lods
lds
imul
fwait
mov
push
xor
push
les
sub
push
or
mov
cmps
inc
ret
stos
jno
mov
shl
sbb
out
mov
loop
out
pop
adc
mov
(bad)
(bad)
sbb
lock
sub
(bad)
aam
cmp
add
div
xor
mov
dec
data16
mov
shl
sbb
pop
or
sub
lods
pusha
sub
test
aas
or
cmps
js
cwde
pop
ret
push
sub
shl
jb
inc
cmps
xor
push
jmp
mov
pop
popw
cmp
jnp
fadd
cli
xor
imul
sub
test
das
pop
es
xchg
pop
cmps
push
shr
loope
test
or
xchg
adc
xchg
push
adc
jle
and
pop
cmc
cs
imul
jmp
jbe
test
test
sbb
jl
lds
jno
adc
and
sbb
cmp
cs
mov
sti
mov
call
push
inc
std
movs
mov
inc
mov
nop
ja
pop
push
(bad)
in
div
je
mov
lock
movs
iret
add
bound
pop
sub
aaa
icebp
into
xchg
clc
loopne
int
xchg
mov
add
test
(bad)
ds
adc
mul
and
or
sub
pop
pushf
pop
mov
aad
jecxz
pop
arpl
dec
aaa
and
jge
push
dec
fdivrp
out
mov
mov
aaa
lds
fistp
lds
jbe
cmp
lahf
test
(bad)
jmp
jle
fiadd
jno
push
cli
sub
xchg
xchg
xor
mov
sti
jmp
push
add
mov
mov
mov
(bad)
imul
adc
scas
mov
cmps
retf
pop
std
jnp
stc
ins
or
add
idiv
cmp
jle
sub
xchg
push
cmps
(bad)
aas
inc
xchg
mov
leave
jnp
or
mov
shl
pandn
push
mov
fcom
xchg
(bad)
stos
adc
lods
mov
mov
cmps
cmp
push
fsubr
sub
add
dec
add
mov
popf
adc
and
push
popf
inc
xchg
add
xor
inc
(bad)
push
add
stos
add
cmp
cwde
push
push
imul
cdq
ror
daa
mov
nop
lock
xor
push
loop
dec
mov
pusha
aaa
mov
pop
ins
push
lods
pop
rcr
sub
in
inc
inc
out
std
retf
inc
jecxz
fcomp
sub
pop
and
shr
int
(bad)
ins
test
mov
mov
inc
xchg
or
sub
outs
pop
mov
dec
aam
sbb
into
enter
dec
scas
jno
push
adc
push
adc
xor
push
data16
dec
mov
sti
iret
push
or
movs
add
cmps
call
or
cwde
xor
scas
(bad)
mov
mov
sti
xor
mov
out
sahf
or
xchg
gs
cmp
ret
es
mov
sub
pop
and
mov
fs
cmps
aaa
sub
sbb
out
les
popa
jmp
call
mov
xor
inc
mov
mov
test
sub
into
mov
sar
mov
int
or
ss
sti
jb
cs
out
xor
adc
shl
mov
fsubr
push
dec
or
pop
dec
jb
add
lds
cmp
fld
ret
push
xor
pusha
inc
or
movs
push
xor
inc
cmp
jecxz
sahf
cmps
gs
cmp
ffreep
xchg
xchg
data16
lock
lods
fld
pop
test
inc
repz
mov
ins
adc
(bad)
arpl
or
mov
bound
lock
retf
push
pop
or
lods
imul
jp
cli
ror
les
add
push
setge
dec
pop
dec
call
cs
inc
inc
jge
xor
mov
cs
out
clc
dec
push
mov
scas
jb
gs
xchg
mov
test
add
xor
clc
xchg
or
(bad)
push
mov
add
add
jne
test
cwde
xchg
call
mov
xor
sbb
xor
adc
in
pushf
and
fdivr
fisttp
or
jbe
pop
leave
fdivp
adc
bound
mov
mov
jae
std
push
or
jne
mov
mov
int
lods
mov
movs
jmp
cmp
inc
(bad)
xchg
mov
add
iret
xchg
inc
test
push
dec
test
cmp
push
mov
cmp
or
in
add
sbb
xor
jecxz
stc
rol
call
jle
js
mov
rcr
cwde
lock
fcom
in
sub
test
sbb
fwait
xor
cmps
enter
lods
bound
or
daa
dec
(bad)
ds
out
lods
pop
cwde
mov
call
sbb
aaa
cmp
sbb
imul
ja
sbb
pop
mov
sahf
retf
xchg
int
in
xor
lods
jl
jl
add
leave
in
push
sub
ret
jo
cs
and
(bad)
jp
(bad)
(bad)
pusha
pop
or
and
inc
(bad)
and
(bad)
pop
jb
xor
loop
call
(bad)
stc
pop
pop
repz
push
and
mov
add
jl
clc
scas
pop
push
or
mov
movs
mov
int
and
and
mov
fs
data16
loope
cmp
std
mov
loop
cmp
sbb
aas
push
fisubr
dec
sub
es
sub
mov
call
test
cmp
lahf
mov
or
jecxz
sub
(bad)
dec
sar
sbb
xor
adc
cmp
imul
not
in
mov
enter
or
sub
jno
add
and
out
sbb
xchg
test
sbb
xchg
shr
push
adc
fcmovnbe
push
inc
sahf
bound
xor
adc
inc
xor
scas
loope
nop
dec
and
iret
jae
adc
add
ret
xchg
xor
dec
mov
jnp
pop
jge
sbb
inc
and
mov
xor
cmp
loope
jbe
sub
rcr
sbb
dec
mov
xchg
jge
mov
dec
mov
movs
aas
stos
mov
fst
jns
daa
cmps
ins
sub
inc
mov
jne
addr16
inc
comiss
add
retf
cmp
shl
fcom
push
inc
mov
(bad)
(bad)
lods
outs
call
retf
into
fild
(bad)
push
in
inc
jbe
scas
jne
fwait
out
jne
dec
mov
shl
dec
or
sbb
jecxz
inc
xchg
aaa
push
loope
shl
aad
ins
(bad)
das
jo
adc
in
and
sahf
shl
xor
mov
daa
fisub
ds
ret
push
das
ss
pop
push
xchg
out
(bad)
out
xchg
jmp
shl
arpl
dec
push
lahf
mov
fwait
aaa
add
lods
ins
pop
jmp
ins
jecxz
stos
and
and
xor
and
scas
(bad)
push
mov
sub
test
add
add
xchg
jns
and
pop
mov
push
leave
retf
sbb
pop
add
cld
rcr
cmp
push
push
pop
fwait
add
adc
jae
push
hlt
jmp
mov
or
mov
cli
ss
hlt
jne
test
pop
aam
cmp
aaa
test
push
mov
dec
xor
add
ins
pop
and
push
ins
je
cmc
xchg
xor
fst
mov
stc
cmp
sbb
mov
push
push
and
xchg
and
fidivr
adc
jecxz
mov
js
in
loop
dec
popa
out
enter
hlt
cmps
sti
fdivr
retf
mov
or
adc
mov
push
js
sub
ins
test
jb
pop
cdq
jae
pop
jne
hlt
add
mov
fs
mov
sub
push
push
or
push
xchg
in
aaa
cmp
sbb
fisubr
lods
adc
sub
in
daa
fucomip
or
sbb
pop
pusha
cdq
push
xor
xchg
and
in
in
imul
push
mov
stc
push
push
shl
addr16
mov
push
test
ret
jp
sub
outs
loop
mov
pop
mov
sub
mov
sahf
cmps
aaa
xor
cmp
jbe
push
add
cli
mov
jns
adc
dec
popf
out
push
in
xchg
dec
cmp
pop
xchg
mov
jge
cmp
and
sub
inc
and
mov
xchg
enter
test
mov
sbb
sbb
call
jae
stos
xchg
lea
sbb
add
mov
or
ins
imul
imul
pop
lods
in
inc
add
fcmovne
ret
shl
out
es
inc
(bad)
loope
or
out
add
aaa
movs
loopne
test
xchg
jmp
mov
sub
pop
push
sbb
sub
or
pop
push
or
loope
test
fs
in
pop
cdq
test
push
call
push
call
dec
sbb
adc
iret
sub
add
mov
lods
popa
jmp
in
xor
jmp
mov
or
xor
daa
lods
or
test
push
push
lock
dec
pop
adc
add
rol
cdq
clc
xor
ror
sub
push
fwait
jmp
dec
jns
ins
inc
mov
fnstenv
mov
and
mov
pop
loopne
cmp
out
fild
mov
aam
xchg
pushf
out
arpl
js
add
aas
sbb
dec
out
cmps
aaa
(bad)
(bad)
shr
jo
adc
pusha
loope
mov
push
nop
cmps
jbe
mov
fild
add
sbb
inc
jp
xchg
rcr
outs
sahf
mov
hlt
sahf
fldenv
iret
pop
cmps
jo
cmc
or
fmul
ins
jge
clc
fidivr
gs
mov
jle
jge
das
mov
sub
out
ins
add
xor
ret
jp
sub
pop
mov
scas
xchg
jno
ins
mov
retf
call
mov
fs
stos
mov
push
dec
sub
push
pop
mov
sbb
push
ins
or
out
xchg
lods
dec
mov
xor
and
test
xchg
jns
or
cmp
loop
push
bound
into
sub
arpl
test
pop
add
inc
(bad)
cld
mov
fstp
in
or
xlat
enter
scas
test
lock
js
sti
jo
cmp
ret
and
pop
cmps
mov
mov
ror
dec
ds
fucomp
push
dec
hlt
(bad)
sbb
loop
fwait
cmp
bound
imul
scas
and
jg
sbb
pushf
pop
adc
push
fwait
and
jns
ds
popf
pop
retf
fistp
or
sbb
sub
ins
stos
sub
scas
idiv
nop
inc
ffree
in
(bad)
pop
aam
and
pop
or
and
push
das
retf
lods
dec
push
rcl
add
loopne
sub
xor
pop
and
jmp
inc
and
sub
adc
pop
clc
cmps
les
sbb
adc
les
mov
sub
lods
(bad)
test
jbe
aaa
out
xchg
push
imul
in
add
sbb
pop
mov
mov
addr16
ret
aas
mov
dec
lock
push
mov
test
fist
(bad)
nop
movs
test
jecxz
mov
jne
ds
cmp
fidivr
test
test
xor
ror
mov
cmc
fidiv
push
dec
push
rol
loope
mov
pushf
inc
into
rcl
sti
out
(bad)
addr16
aaa
movs
(bad)
push
mov
mov
lock
scas
push
fcomp
xchg
dec
leave
jnp
push
mov
std
add
(bad)
fwait
pushf
add
or
aas
cmp
ret
scas
or
jecxz
stos
pop
in
mov
sub
(bad)
jmp
mov
mul
retf
ins
pusha
repz
std
sbb
add
or
mov
mov
(bad)
fidiv
outs
or
sbb
pop
lea
gs
pop
sub
pop
mov
lahf
arpl
sbb
iret
adc
cmp
and
mov
cld
dec
dec
inc
fimul
xlat
mov
(bad)
jmp
push
mov
mov
push
gs
lea
pop
popa
mov
fs
jne
sub
push
je
ins
inc
ret
lock
shl
comiss
sbb
xor
int3
stos
inc
push
je
enter
xlat
sub
xchg
(bad)
cmps
pop
mov
fst
push
xchg
lods
adc
adc
push
stc
nop
inc
push
(bad)
retf
sahf
fisubr
ret
and
lahf
pusha
outs
outs
test
mov
adc
rol
getsec
and
loope
mov
or
rcl
pop
jbe
popf
sbb
hlt
pop
fsubr
pushf
pop
add
data16
xchg
call
inc
adc
push
dec
dec
ret
cmp
dec
test
movs
ret
mov
dec
add
sub
nop
jg
in
mov
ja
pop
adc
fcmovb
ss
push
mov
loop
inc
add
mov
fwait
call
nop
xchg
pop
cmc
xor
xor
xchg
or
ds
inc
lods
fadd
scas
bound
neg
fld
xchg
imul
or
pop
fs
pop
ror
add
dec
dec
sbb
cwde
xor
sahf
mov
mov
cmp
pop
movs
inc
xchg
icebp
scas
fstp
fistp
sti
jmp
mov
mov
imul
ret
pusha
paddq
clc
int3
daa
push
and
jmp
mov
adc
or
je
add
dec
fwait
emms
popa
cmps
fisttp
mov
imul
or
push
(bad)
jmp
aam
pusha
mov
jp
rcr
or
push
pop
cmp
stc
movs
cmp
stos
rol
int
pop
sbb
iret
je
push
cwde
stos
cli
lods
ins
fstp
mov
xor
mov
stc
jecxz
ret
std
repnz
adc
cmp
dec
mov
and
fsub
stos
ins
ja
ret
mov
icebp
aaa
aad
mov
xor
cli
clc
cmp
sbb
jmp
test
outs
stc
mov
cmc
xchg
or
pop
xadd
jge
push
push
stos
mov
add
jne
aad
cli
xor
(bad)
inc
cmc
jno
sbb
or
aas
mov
outs
push
or
cmp
sub
call
xchg
dec
jp
mov
imul
and
or
sahf
aam
cs
in
mov
addr16
mov
jns
push
pusha
lock
mov
xchg
inc
sub
(bad)
enter
jmp
adc
test
inc
loop
cmp
or
pop
or
sub
es
call
or
dec
mov
sahf
int
adc
push
xor
ins
aas
and
xor
and
add
ins
sti
stos
rol
jae
ja
ja
test
mov
mov
jg
in
cmp
cmp
repz
sub
mov
repnz
in
test
mov
mov
imul
mov
jp
dec
jbe
or
xor
retf
repz
xchg
inc
adc
and
cmp
imul
das
jl
test
and
in
dec
pop
adc
mov
popa
adc
imul
jle
add
xchg
push
dec
sahf
sti
lock
mov
pop
mov
sbb
movs
retf
imul
imul
dec
test
call
mov
dec
inc
dec
add
fist
sub
xchg
adc
(bad)
jmp
pop
ins
aas
test
int
stos
push
ret
ins
xor
xor
push
xor
pusha
pop
adc
addr16
sub
jmp
repz
sti
mov
add
and
adc
ror
sbb
sub
jle
ds
fwait
xchg
mov
jg
jl
ins
or
inc
shl
dec
xchg
test
mov
lods
lds
add
or
mov
ret
clc
stc
xchg
or
jg
inc
jge
and
jp
loope
mov
push
ins
xchg
data16
mov
xadd
js
mov
stc
shr
xor
inc
adc
add
ret
sbb
sub
xlat
inc
daa
xor
(bad)
and
int3
mov
and
lds
retf
mov
ds
xchg
and
mov
sbb
fxch
cwde
imul
jnp
jp
xchg
inc
add
mov
cwde
fldcw
mov
fdivr
ds
test
in
(bad)
mov
inc
mov
mov
cs
iret
xchg
pop
loop
pop
sub
xchg
popa
mov
and
or
int3
ss
xor
lea
push
enter
xor
jns
fs
mov
pop
rcr
fmul
test
inc
sub
loop
popf
call
push
mov
and
sbb
mov
adc
dec
enter
mov
stos
hlt
add
dec
mul
imul
push
mov
xchg
adc
cmp
add
xor
cmp
cmp
xor
aad
sbb
dec
or
cmp
dec
fcomp
xor
out
jne
fwait
pop
fst
das
and
dec
or
adc
ror
rol
stos
sbb
xchg
xor
inc
(bad)
pop
adc
into
jle
(bad)
out
sub
out
iret
push
mov
mov
aaa
add
sub
addps
lods
xlat
add
(bad)
fwait
sub
addr16
cmp
mov
xchg
cmp
(bad)
fdivr
xor
pop
ficom
push
(bad)
nop
aam
sbb
ds
ds
pop
pop
xchg
add
fnstenv
inc
scas
in
adc
movs
aad
mov
dec
mov
ss
jp
xor
add
dec
aas
loopne
in
mov
inc
sub
pop
sar
js
add
mov
std
xor
jbe
outs
and
xchg
sub
cs
jmp
xor
shl
mov
in
arpl
add
jbe
pop
dec
jge
outs
mov
xchg
inc
aaa
sahf
sub
imul
(bad)
dec
aad
repz
(bad)
test
inc
mov
sahf
adc
inc
push
es
push
fadd
push
inc
and
or
cmps
js
inc
cwde
sbb
popf
leave
gs
xchg
push
loop
cmp
outs
sbb
std
hlt
inc
and
dec
xchg
daa
aaa
push
sahf
and
scas
add
mov
add
js
or
jo
dec
pop
sti
daa
fsub
pop
stos
mov
es
mov
daa
sub
cli
scas
call
(bad)
xchg
and
push
mov
inc
sub
cmps
movs
imul
pop
xor
push
ret
push
arpl
inc
dec
push
mov
fcmovnu
pop
or
shl
mov
cmp
push
int
jmp
xchg
mov
mov
imul
shl
movs
push
jne
sahf
sbb
ret
in
fstp
popa
movs
mov
xchg
add
(bad)
leave
imul
or
cmp
or
jmp
xor
rol
cmp
in
jmp
mov
hlt
pop
add
xor
cmps
xchg
in
mov
dec
iret
cmps
cs
or
mov
xchg
or
jns
test
pop
fnstsw
or
fmul
and
adc
(bad)
jb
cmps
lock
out
push
pop
aam
movzx
scas
gs
pop
jo
adc
mov
xchg
jp
xchg
lods
and
mov
mov
cli
mov
dec
or
or
mov
sbb
sbb
mov
out
loop
popa
fwait
add
movs
push
imul
in
mov
stos
mov
jne
(bad)
div
cmp
mov
ror
mov
test
xchg
daa
xchg
add
lea
clc
cmp
test
adc
jecxz
pusha
scas
ins
aam
out
pop
add
or
imul
jbe
push
nop
aam
stos
les
imul
inc
pop
cmps
(bad)
sti
sbb
mov
rcr
push
mov
dec
mov
pop
cmps
xor
dec
hlt
mov
not
mov
arpl
sar
ins
fwait
mov
imul
into
aam
arpl
xor
xchg
push
in
dec
and
cwde
fidivr
aaa
aad
mov
call
inc
or
outs
enter
inc
dec
jge
aam
in
mov
call
push
push
mov
lds
xchg
mov
fcomp
ins
in
cld
pop
leave
into
push
mov
pop
lds
push
stos
push
xchg
xchg
js
mov
arpl
hlt
mov
mov
es
sbb
cld
(bad)
jmp
push
add
xchg
cmps
(bad)
dec
mov
lods
inc
pop
mov
lea
mov
dec
xchg
aam
data16
inc
js
std
add
lds
aam
inc
outs
mov
cmp
cwde
je
retf
int3
iret
mov
pop
mov
dec
int
adc
int
mov
loope
retf
movs
gs
nop
in
sbb
test
mov
push
mov
xchg
or
test
sahf
add
ins
test
mov
or
xchg
jbe
adc
loopne
lock
push
pop
dec
int3
push
iret
mov
adc
cmp
lds
popf
sub
dec
xor
xor
lods
or
xor
add
shr
mov
add
bswap
jno
cli
cmp
pop
pop
push
fisub
pop
cmp
cmc
and
mov
mov
mov
cmp
jb
dec
sub
iret
int
or
inc
mov
(bad)
mov
ja
xchg
(bad)
hlt
cs
inc
push
mov
enter
mov
cmp
mov
aam
add
idiv
add
test
cmps
outs
jns
jle
fsqrt
stos
scas
jg
sbb
dec
ret
sub
jmp
nop
and
sbb
mov
mov
leave
jle
jmp
push
stos
(bad)
jle
push
xor
cmps
push
fwait
(bad)
mov
jbe
pop
mov
dec
(bad)
mov
popa
retf
and
jb
sahf
test
xchg
and
sub
ror
pushf
dec
(bad)
imul
jnp
mov
movs
ficom
inc
or
loope
xchg
das
repnz
and
mov
retf
ins
iret
xchg
push
sbb
sbb
mov
sbb
int3
xlat
call
retf
outs
cs
mov
adc
frstor
sub
mov
jae
pop
ja
ficomp
pop
dec
mov
ret
jmp
fs
push
mov
stos
mov
imul
gs
mov
cmp
(bad)
and
dec
scas
or
push
test
mov
mov
mov
fstp
dec
cmp
aaa
push
sti
or
xchg
dec
xor
ja
(bad)
push
and
shr
pusha
adc
(bad)
(bad)
clc
jecxz
loopne
in
sahf
dec
xchg
inc
jns
fs
lock
jae
mov
jmp
shl
in
pop
sub
mov
shr
pop
pop
and
sub
pop
cld
mov
les
mov
(bad)
xor
push
in
cmps
pop
jae
mov
imul
loope
push
data16
call
out
jae
adc
in
cmps
das
call
cdq
add
sbb
sub
adc
xchg
push
dec
inc
stos
pop
dec
(bad)
sbb
cmp
mov
test
pop
js
xchg
mov
(bad)
mov
jmp
stc
mov
or
xor
loopne
out
test
hlt
xor
xchg
jae
adc
call
or
adc
pop
iret
mov
sbb
ret
mov
data16
xchg
mov
dec
rol
imul
mov
add
movs
icebp
sbb
xchg
iret
jmp
mov
fst
outs
into
jae
cmp
in
into
movs
dec
out
fisttp
gs
sbb
mov
shl
push
aam
pop
rol
fld
sahf
mov
push
adc
dec
jo
nop
jae
add
push
dec
pop
sub
mov
jno
scas
ins
mov
mov
xor
pop
cmps
in
cmp
enter
xor
xchg
pop
test
jne
jo
aaa
ret
(bad)
jnp
xchg
aam
popa
mov
inc
retf
cmp
(bad)
loopne
imul
sub
into
cli
adc
cmp
hlt
sub
fs
cld
pop
jmp
dec
sbb
rcl
mov
arpl
outs
or
dec
add
clc
(bad)
dec
ret
fs
test
cmp
iret
test
ret
call
mov
pop
dec
or
fdivr
cmp
push
sar
retf
adc
mov
ficomp
adc
pop
mov
jmp
(bad)
dec
sub
stos
mov
inc
popf
mov
lock
dec
sbb
sub
dec
or
or
or
lea
ficomp
cmp
outs
and
in
inc
stos
pop
pop
sbb
add
xchg
loope
(bad)
lods
int
xor
pop
imul
push
or
adc
push
xchg
mov
mov
sub
xor
idiv
and
xor
shr
out
mov
fbld
adc
dec
rcl
mov
neg
(bad)
mov
or
inc
movs
jecxz
pop
pushf
and
mov
inc
mov
jae
jg
mov
and
(bad)
cli
out
mov
dec
add
shr
xchg
dec
int3
lahf
pop
sub
and
adc
(bad)
leave
dec
pop
je
or
jmp
push
pop
call
xchg
mov
jne
stos
sbb
stc
jl
sbb
dec
push
aam
mov
jp
dec
js
mov
pop
mov
pop
repz
int3
(bad)
pop
ds
ret
pushf
shr
fld
dec
stc
lea
sub
inc
mov
arpl
test
jmp
test
(bad)
fsubr
(bad)
daa
cmp
add
in
push
mov
fwait
aad
xchg
call
pusha
xor
lock
fadd
lds
fsubr
and
or
cmc
call
cmp
not
pop
in
sbb
lds
xchg
pop
pop
and
je
push
es
movs
ss
pop
popf
out
jae
xor
shl
sub
scas
adc
fnstcw
dec
sub
add
jnp
fisubr
adc
lods
ja
bnd
stc
fcmovbe
fdivr
nop
lds
ficom
jecxz
ins
pusha
push
push
sub
movs
dec
ins
imul
mov
jnp
push
inc
add
and
sbb
mov
xchg
rol
mov
sbb
fnstsw
sub
sub
sahf
push
fmul
mov
dec
dec
mov
daa
xchg
push
xchg
(bad)
sub
or
cmp
pop
ror
and
jle
movs
(bad)
adc
test
jb
inc
adc
mov
gs
push
jmp
mov
fisubr
ja
daa
adc
mov
stos
shl
dec
es
mov
int
out
mov
lds
ds
aad
add
or
jmp
xchg
sub
cmps
cmp
cs
inc
jns
xchg
popa
mov
cmps
sub
pushf
dec
mov
ret
stc
ins
shl
pushf
jg
push
sahf
repz
pop
(bad)
loopne
xor
push
fisub
leave
sahf
push
cmp
imul
jg
jp
jb
or
push
mov
mov
movs
aas
cmp
pop
inc
adc
cdq
retf
aam
cmp
jns
(bad)
jmp
in
mov
jno
inc
mov
pushf
jge
push
aam
ret
(bad)
stos
clc
jl
cmps
xchg
xchg
nop
cld
aas
sbb
and
adc
jmp
and
(bad)
mov
jge
lods
pop
xchg
pushf
test
cmp
mov
frndint
aad
cld
shl
in
cmps
add
stc
xor
and
mov
jge
ins
dec
ret
lea
vxorps
adc
test
in
lods
mov
push
js
sbb
and
pop
push
and
test
xchg
jecxz
lds
out
lods
js
cmp
(bad)
push
mov
mov
aad
sbb
lods
retf
mov
test
jnp
lds
adc
aam
bound
test
push
and
aas
jle
or
scas
adc
pop
add
das
xor
mov
pop
mov
jne
mov
jae
aas
sub
fbld
mov
imul
adc
popa
scas
xor
clc
mov
iret
frstpm(287
mov
add
push
sub
xchg
dec
xor
bound
aad
dec
mov
add
and
sub
or
and
ret
fld
sbb
pop
jb
retf
sbb
mov
jg
dec
jp
pushf
lahf
mov
push
ds
cmps
mov
popf
(bad)
aas
outs
call
aas
dec
jl
out
mov
and
imul
mov
xchg
sub
daa
popa
retf
push
out
cs
es
test
stos
ret
sbb
bound
and
push
push
inc
mov
push
jmp
mov
and
pop
sbb
push
mov
test
call
movs
xchg
add
cmps
mov
sbb
stos
nop
in
call
pop
cmp
jbe
ss
out
loope
pop
xor
xchg
call
or
xchg
repnz
in
jecxz
pop
and
sti
xchg
dec
inc
xor
xchg
xchg
fsub
dec
icebp
ret
repnz
loopne
int
inc
ss
inc
push
not
ins
push
mov
add
pop
jnp
sar
or
adc
in
jne
push
sub
cmp
cmc
div
or
add
inc
mov
mov
arpl
lds
dec
xchg
pop
push
xchg
int
and
xchg
push
pop
iret
inc
or
inc
sub
xor
sahf
xor
outs
adc
enter
mov
xor
or
or
cmp
inc
dec
pop
or
sbb
push
fcmove
pop
ins
mov
cs
gs
mov
or
inc
int3
das
in
(bad)
popw
jae
mov
jae
sbb
mov
add
std
js
sub
ss
inc
clc
int
rcr
jmp
jb
adc
push
adc
aaa
shl
jmp
xor
xchg
adc
push
mov
in
adc
xchg
add
xlat
into
(bad)
fdiv
cld
xchg
mov
adc
mov
xchg
out
stos
xchg
push
cmp
aaa
ret
add
mov
push
adc
out
lock
je
dec
inc
jl
mov
lahf
sub
js
fild
sbb
fs
or
test
xor
mov
retf
adc
ins
mov
and
into
les
or
icebp
dec
xor
inc
sbb
mov
xor
pop
rcl
ret
inc
sti
in
jmp
cwde
pop
push
pop
or
xor
shl
xchg
(bad)
jmp
mov
dec
or
push
sbb
cmp
and
into
mov
or
std
xor
shl
std
and
out
cdq
adc
pushf
imul
out
retf
cmp
repz
push
test
xlat
mov
ins
imul
jmp
sar
xlat
cld
popa
dec
pusha
inc
push
test
jle
xchg
out
jo
push
xor
lock
(bad)
clc
fld
ja
js
out
cmp
loopne
mov
sbb
cld
adc
sbb
repnz
out
dec
sti
pop
and
mov
cdq
not
mov
jne
int
stc
stc
dec
pop
inc
das
or
pop
push
jo
and
ret
jne
pop
cwde
cld
cmp
adc
test
xchg
inc
es
fs
gs
adc
sar
shr
mov
pop
mov
mov
pop
mov
dec
or
dec
inc
(bad)
push
xor
or
int
and
cdq
xor
ja
push
outs
mul
xchg
cmp
jmp
cwde
sub
das
adc
mov
cmps
xchg
or
dec
and
fld
adc
rol
push
lds
jae
scas
test
out
add
adc
cdq
gs
sbb
pushf
add
hlt
xlat
fadd
nop
sahf
and
pop
aas
push
jnp
cmp
xchg
fldenv
je
adc
mov
or
sbb
cmps
add
inc
popf
xor
std
out
add
xchg
pusha
push
dec
inc
add
mov
fwait
jecxz
aam
pop
sub
xchg
mov
fsubr
push
repz
js
and
mov
dec
dec
sar
pop
jbe
pop
test
sbb
sbb
mov
push
ins
mov
sbb
cmp
lock
ins
test
fwait
xor
loop
not
lods
or
xor
pop
sbb
mov
jne
cli
mov
or
popa
das
mov
and
pusha
xor
into
cmp
sar
gs
pop
push
lods
jle
jmp
clc
cmps
sub
xor
or
push
mov
cld
lods
push
sub
ss
xchg
or
int
and
pop
sbb
pushf
sub
js
(bad)
mov
jecxz
or
xor
push
add
scas
dec
test
push
inc
ins
daa
loopne
ja
push
int
rol
sbb
mov
jmp
add
out
imul
(bad)
test
iret
adc
and
or
inc
xor
es
pop
in
jne
jmp
shr
mov
adc
pop
mov
jae
jns
imul
cmps
or
adc
lods
cld
hlt
sbb
cld
jmp
mov
sar
out
aad
dec
xchg
out
hlt
(bad)
xchg
(bad)
cdq
imul
dec
pop
mov
aam
enter
in
cmps
mov
ins
mov
inc
hlt
mov
div
jge
add
xlat
push
dec
mov
test
mov
or
scas
xor
inc
icebp
xor
call
jge
call
add
aad
or
push
dec
and
ds
scas
stos
xlat
xor
cld
movs
or
pop
jns
sub
sbb
sbb
adc
sbb
inc
xchg
call
lahf
clc
xor
xchg
xchg
and
push
adc
pusha
cmp
dec
sbb
js
bound
mov
fild
jl
add
clc
cs
outs
ds
and
mov
out
xchg
test
dec
mov
repnz
pop
call
or
lods
les
test
cdq
mov
mov
sbb
xor
push
popa
jmp
mov
sbb
and
popa
aaa
and
call
adc
test
scas
inc
fs
iret
cmp
sbb
scas
ja
cld
adc
sbb
add
mov
mov
and
xor
push
push
xor
es
pop
fwait
ja
mov
sar
xchg
mov
push
xchg
dec
shl
xlat
dec
ret
nop
xchg
inc
arpl
jecxz
and
cli
fidivr
push
jp
call
cmp
cmc
mov
les
adc
enter
cli
cmp
dec
jmp
mov
jnp
popf
fisub
pusha
shl
gs
and
leave
mov
add
push
loopne
add
sub
xor
cmp
outs
(bad)
mov
jne
or
cdq
adc
jbe
imul
jnp
mov
pop
sbb
mov
data16
in
scas
add
sar
jl
sbb
icebp
cmp
jecxz
adc
jno
cmp
stc
mov
bound
push
sub
xchg
pop
cdq
sahf
push
cmps
(bad)
in
test
jl
push
in
inc
addr16
xchg
sub
out
jge
mov
adc
loop
es
int3
sti
pop
xchg
mov
into
jl
shr
sahf
jmp
sar
add
mov
bound
jnp
jbe
pop
lds
jo
push
jo
lahf
mov
sti
aad
jno
int3
dec
out
test
loope
pop
xchg
cs
pop
push
test
fnstsw
scas
fisub
mov
cmp
adc
sbb
mov
mov
pushf
popa
cwde
dec
daa
pushf
scas
mov
mov
jnp
aam
or
mov
dec
test
in
inc
mov
pushf
pop
call
out
aad
mov
inc
inc
fidiv
jmp
jmp
(bad)
mov
int3
cmps
mov
pusha
sub
je
inc
xchg
dec
cmps
ror
ins
push
test
jnp
mov
sbb
dec
mov
adc
addr16
sub
push
cmp
or
gs
xchg
mov
add
iret
push
jns
fdiv
out
inc
call
jne
fld
cs
mov
clc
ins
aaa
out
inc
xchg
inc
dec
(bad)
jo
inc
js
xchg
adc
pop
mov
dec
adc
pop
stos
push
mul
loop
jge
mov
fimul
cwde
out
jmp
out
test
hlt
jb
inc
lds
inc
cmp
sub
lahf
sub
xor
and
pusha
push
pusha
mov
ja
adc
sbb
xor
jo
adc
mov
dec
inc
daa
leave
xchg
mov
(bad)
cmp
stos
pop
xor
mov
ds
popf
pop
sar
mov
daa
xor
mov
dec
sbb
and
xchg
xchg
retf
dec
push
ret
xchg
rcr
mov
iret
and
pop
daa
fbld
and
clc
pop
aam
push
sub
pop
push
inc
or
stc
(bad)
cmp
inc
out
xchg
jns
pop
idiv
mov
ret
sbb
mov
jl
cli
mov
out
xlat
xor
nop
stc
sub
push
jne
jle
call
ror
sub
jnp
jge
mov
jbe
(bad)
cld
mov
test
jns
xor
push
cs
mov
lods
std
xor
les
mov
fild
cmc
inc
outs
add
ds
cmps
inc
icebp
pop
out
inc
cmp
sbb
jmp
loopne
fdivr
fsubr
test
push
imul
pop
xor
in
or
cmps
xchg
cmps
and
push
je
sub
repnz
addr16
cmps
clc
fs
jnp
cmp
aaa
adc
std
dec
pop
out
pop
xchg
jne
push
ret
and
add
mov
(bad)
out
jp
cdq
dec
push
jae
(bad)
cld
stc
aaa
push
outs
mov
(bad)
push
mov
ficom
loope
popf
call
adc
cmp
(bad)
jmp
jnp
fwait
sar
clc
sahf
(bad)
and
dec
ret
inc
test
push
inc
sbb
add
add
add
push
lds
push
pop
popa
pushf
test
gs
push
(bad)
push
and
cmp
jnp
dec
arpl
rep
and
add
inc
(bad)
aad
test
dec
push
add
(bad)
cld
loop
jo
fwait
dec
call
cmp
ret
ficom
jb
jo
sbb
push
push
add
adc
push
pop
pop
adc
cmps
and
mov
jmp
data16
js
sub
dec
out
js
mov
pop
cmp
or
lds
and
sbb
ficom
adc
in
in
into
dec
xor
pop
les
mov
(bad)
cdq
mov
mov
imul
pushf
icebp
imul
cmp
int3
mov
daa
data16
in
ror
pop
sub
mov
jecxz
fs
jecxz
out
cmp
bound
sti
and
mov
push
push
pop
ins
nop
mov
jp
repnz
xchg
idiv
loop
in
int3
addr16
adc
or
or
adc
push
stos
inc
pop
pop
ret
push
pop
sub
(bad)
ficomp
hlt
mov
mov
ficomp
fdivrp
add
pop
cwde
or
pop
add
adc
div
rol
push
loopne
cmp
mov
loopne
mov
iret
push
loopne
push
and
out
pop
sti
fwait
cmc
sbb
bound
or
inc
mov
xchg
pop
(bad)
mov
push
repnz
dec
cmc
mov
nop
mov
mov
sub
xchg
lahf
push
inc
jno
repz
dec
xor
into
lea
mov
mov
(bad)
adc
call
xchg
call
add
sbb
push
cld
(bad)
push
sbb
out
lds
je
cwde
enter
fld
je
adc
xor
adc
xchg
dec
loop
fild
or
fsubr
fst
ret
icebp
sub
or
out
ins
stos
ss
mov
aaa
sbb
push
push
out
aas
sar
in
mov
push
(bad)
int
cmp
sti
mov
popf
sub
or
js
mov
sti
or
test
fwait
mov
dec
and
mov
or
xor
(bad)
pop
cmps
jo
cmp
push
jge
and
mov
enter
(bad)
pop
inc
push
dec
dec
xor
xor
add
pusha
mov
scas
add
jae
test
nop
dec
push
std
mov
pushf
dec
(bad)
xor
sub
inc
jbe
loop
jnp
js
into
push
lock
sbb
xchg
ret
icebp
movs
inc
clc
in
jb
mov
(bad)
jb
nop
int3
push
loope
movs
mov
mov
inc
jg
lock
mov
(bad)
adc
imul
xor
fnsave
loopne
mov
imul
mov
lahf
sar
xor
push
mov
cmp
push
sub
sub
icebp
gs
call
xchg
icebp
loope
cmp
enter
pop
mov
mov
out
sub
xchg
idiv
mov
test
sbb
mov
xor
jmp
mov
pop
push
inc
jl
mov
and
fwait
daa
std
add
fwait
int
out
jle
pop
rol
add
shr
push
shl
mov
lahf
push
ret
cwde
rcl
push
adc
cs
pusha
xchg
test
jnp
dec
es
mov
adc
xor
or
loop
mov
sbb
enter
fwait
push
mov
cdq
and
(bad)
data16
rol
jg
jb
ret
pusha
jg
xor
in
sbb
cli
ret
jge
mov
jnp
in
cmp
outs
ret
jno
push
aas
mov
push
push
pusha
xchg
inc
xchg
pop
cld
cmps
xor
adc
add
add
rcr
mov
outs
sbb
jbe
pop
cmp
push
or
push
mov
adc
xor
movs
adc
arpl
jecxz
pop
cmps
push
add
es
scas
cmps
mov
xchg
ret
mov
pop
add
shl
inc
xchg
shr
aaa
mov
ror
push
mov
and
dec
push
pop
cs
pusha
dec
pop
mov
(bad)
mov
xchg
lods
add
cmp
push
hlt
or
mov
jno
or
mov
les
div
jno
(bad)
sub
xor
fmul
daa
push
iret
in
loop
xor
aas
nop
(bad)
loopne
cli
mov
pop
push
dec
aam
mov
xchg
retf
imul
cmp
add
mov
mov
in
adc
les
sub
mov
or
fcmovnbe
(bad)
test
jb
std
and
(bad)
sub
or
mov
xchg
test
pop
test
pop
cdq
push
and
mov
mov
shl
in
mov
and
fsub
loopne
call
in
push
mov
mov
in
mov
cdq
cwde
dec
jns
stc
jo
jle
sar
inc
clc
cld
sti
fnsave
push
out
sti
jmp
push
in
(bad)
int
jne
sbb
sbb
mov
in
jl
fwait
pop
fs
add
(bad)
or
daa
movs
pusha
test
inc
int
call
das
stos
xchg
mov
js
clc
out
and
fiadd
push
add
mov
push
push
mov
sub
stos
and
pop
stos
loopne
or
add
daa
nop
cwde
sub
sbb
push
inc
sub
mov
jae
mov
xchg
or
mov
loop
mov
pop
ror
cmp
test
shl
mov
adc
lods
pop
fisttp
mov
mov
(bad)
push
fwait
mov
jge
mov
mov
rcl
mov
into
jb
in
xor
pop
jnp
mov
xchg
jns
test
ss
xor
mov
hlt
mov
mov
mov
push
addr16
fld
sub
lock
mov
dec
and
adc
dec
inc
dec
sbb
mov
cmp
xchg
pop
dec
mov
fldenv
ss
inc
mov
mov
jmp
outs
mov
movs
pop
cmp
jno
or
sub
mov
repz
or
mov
mov
pop
call
mov
fstp
xchg
cs
es
pop
and
mov
sub
lods
adc
icebp
mov
jg
arpl
sbb
fwait
rcl
xchg
es
aam
call
into
jne
push
inc
lahf
dec
jle
mov
mov
sbb
fiadd
push
push
mov
bswap
mov
call
daa
(bad)
call
push
and
mov
mov
push
sbb
repz
dec
inc
daa
shl
pop
and
or
add
or
std
mov
xlat
retf
out
cmp
push
imul
cmp
(bad)
in
and
add
test
inc
xchg
mov
dec
test
push
cmps
xor
daa
add
(bad)
mov
aad
pop
and
jp
cmovne
push
mov
jb
inc
sub
jo
inc
outs
cmp
pop
call
xchg
(bad)
mov
mov
dec
jp
jnp
loop
pushf
xor
push
mov
sbb
mov
add
call
popa
or
sti
pop
xchg
push
xchg
pop
push
pop
out
retf
pop
mov
ds
nop
jmp
adc
mov
cmp
sub
mov
(bad)
cmps
aas
mov
push
sub
fistp
mov
iret
sub
iret
repz
sahf
inc
imul
pop
dec
lds
sub
or
jo
cmp
jg
jb
es
mov
sub
int3
mov
fisttp
add
or
ficom
(bad)
dec
in
add
fs
push
inc
cmp
(bad)
fcomp
shl
not
aam
aam
mov
retf
sar
(bad)
sub
dec
cld
jno
cmp
pop
js
pop
out
sti
retf
mov
push
inc
jg
xchg
push
cmp
test
pop
or
pop
loope
add
push
mov
add
push
jb
and
push
mov
dec
mov
aad
(bad)
repz
mov
sub
ds
push
push
or
test
sub
cdq
jb
pop
add
mov
push
pop
dec
mov
in
cmp
retf
fucomi
mov
das
mov
cmp
push
cli
out
ret
push
and
cwde
jmp
ss
pop
dec
add
ins
test
in
or
test
lds
test
push
out
ret
sub
and
jno
sub
scas
sahf
rcl
scas
lahf
jno
test
cmp
push
inc
jmp
or
inc
xchg
clc
std
fwait
inc
jbe
xchg
scas
(bad)
stc
jns
scas
inc
dec
inc
push
sbb
dec
push
xlat
sar
imul
loop
pushf
out
scas
sti
aas
cmc
popa
cmp
or
leave
cwde
ret
mov
add
fdivr
(bad)
out
cmc
rcr
je
ins
add
call
sub
mov
add
inc
ins
mov
sbb
mov
sbb
xchg
adc
das
dec
enter
push
add
mov
ret
movs
mov
shl
imul
add
inc
imul
mov
int3
test
into
jecxz
cwde
cmp
push
jae
mov
jno
mov
sti
dec
jbe
test
aas
pop
mov
jecxz
sar
mov
loope
mov
adc
pop
arpl
pop
inc
cli
mov
mov
enter
shl
in
call
je
shl
dec
or
and
mov
sbb
or
lods
pop
mov
movs
pusha
imul
in
or
adc
or
and
in
xchg
shr
outs
loope
aam
or
and
in
xchg
push
xor
xchg
pusha
out
cld
test
pop
leave
idiv
mov
icebp
push
sar
jp
repnz
or
pop
and
inc
mov
idiv
cdq
retf
ds
push
aam
jmp
(bad)
ins
mov
inc
dec
push
sub
xlat
loop
push
iret
ret
inc
mov
sub
mov
loope
or
iret
xor
jno
sbb
mov
js
jecxz
repnz
mov
xchg
lahf
sub
in
sub
sbb
loope
jge
mov
lods
or
pop
xchg
ror
mov
push
adc
mov
inc
or
push
push
add
call
test
sub
fs
(bad)
xchg
ds
mov
pop
and
jne
jmp
add
dec
test
jmp
sbb
sti
mov
mov
sbb
imul
out
hlt
aad
in
in
retf
sub
and
lds
jl
cs
cmp
xor
jl
xchg
clc
push
(bad)
mov
je
jno
dec
popf
jecxz
mov
cdq
ror
popf
xchg
pop
or
jb
inc
push
mov
jnp
fld
add
sub
mov
fs
lahf
clc
je
mov
js
sbb
xchg
icebp
aaa
cmps
out
jo
inc
cmp
scas
jnp
loopne
ss
jno
ror
adc
push
mov
nop
inc
adc
cmp
add
push
hlt
xchg
repnz
xchg
call
dec
mov
inc
arpl
mov
fcomip
aad
sbb
in
repz
and
cmp
push
jmp
cmp
xor
(bad)
shl
sbb
stc
xchg
sahf
push
pop
sbb
bound
add
lea
stos
mov
call
fmul
shl
mov
std
pop
mov
xchg
mov
sub
jmp
push
lea
fild
fs
(bad)
or
mov
adc
jmp
popa
jge
xor
fisttp
(bad)
push
or
shr
sub
imul
or
mov
scas
mov
movs
push
xchg
mov
popf
jns
hlt
push
jp
int3
jmp
clc
dec
push
dec
out
sub
xchg
pop
sbb
xchg
stc
mov
push
jno
jl
mov
cmp
adc
enter
scas
outs
jnp
arpl
cmp
outs
fabs
push
mov
dec
pop
lahf
cmp
imul
frstor
mov
in
aaa
xchg
mov
or
jmp
dec
repz
movs
mov
jb
sbb
xchg
popa
xchg
imul
jb
sub
mov
add
push
jb
(bad)
fsubr
mov
or
shr
iret
test
into
ss
test
out
xchg
hlt
sbb
fdiv
lds
push
rcl
mov
loopne
cmp
xor
out
mov
mov
dec
mov
shr
cmp
push
sbb
sbb
movs
mov
ss
jg
pop
outs
mov
sub
mov
ficom
imul
out
enter
ss
add
sub
aad
sub
push
popa
(bad)
out
jno
add
mov
fisub
pop
sub
push
out
clc
sti
(bad)
push
and
ja
retf
stc
cmc
mov
push
clc
scas
movs
movs
mov
mov
das
into
das
push
jecxz
dec
std
ficomp
jl
mov
pop
(bad)
inc
aad
iret
mov
mov
fisttp
popa
leave
mov
cmc
lea
jle
in
pop
pop
mov
xor
enter
fadd
xchg
mov
fidivr
inc
xor
out
fwait
lea
jae
movs
jle
dec
test
jnp
cld
dec
loop
aas
add
xchg
add
push
cld
sbb
pop
(bad)
retf
or
sar
cmp
push
xlat
and
dec
xchg
loop
mov
bound
sbb
lds
lahf
xchg
add
add
movs
mov
popa
and
pop
cmps
xlat
sbb
mov
stos
xchg
es
ror
add
cmp
jae
in
xor
push
fidivr
mov
dec
push
fmul
jne
fcom
fist
push
xor
ja
jb
cmp
jo
in
push
daa
add
push
movs
ss
repz
or
dec
cmps
(bad)
xor
xchg
inc
adc
or
push
mov
loopne
or
push
fwait
push
sub
push
in
(bad)
jae
cmp
icebp
jl
xor
xchg
adc
and
push
adc
mov
add
adc
hlt
xor
jbe
popf
pop
push
(bad)
stc
or
in
mov
cs
sub
push
addr16
push
test
xchg
jge
ja
fimul
push
aam
out
call
mov
pop
rol
sub
dec
jmp
jge
cmps
loop
mov
imul
jp
inc
mov
lods
pusha
js
out
add
mov
adc
gs
and
cmps
cmp
ins
out
aad
rol
sub
mov
mov
jo
and
push
cmps
ja
push
arpl
retf
inc
sub
je
out
sbb
(bad)
loop
add
push
fstp
and
repnz
jecxz
pop
mov
rcl
jns
pop
je
jne
sbb
add
adc
call
xchg
ss
add
lea
into
sbb
jmp
je
push
sub
rcr
jg
cmp
ja
imul
fdiv
call
push
lock
cdq
jge
mov
mov
jnp
popf
and
xor
jmp
lods
push
ins
pusha
into
fcmovnb
cmp
cmp
ins
gs
retf
mov
out
div
mov
xor
mov
jle
jb
mov
outs
ror
call
jle
loopne
or
leave
pop
push
cwde
fdiv
push
or
jecxz
jae
and
in
xor
adc
leave
sub
shl
jae
mov
mov
mov
pop
inc
jae
fwait
mov
inc
and
sub
shld
mov
adc
push
aad
add
dec
adc
xor
stos
sub
xchg
idiv
imul
and
inc
out
mov
inc
dec
jns
out
or
jle
pop
add
or
std
jmp
je
or
movs
mov
call
movs
add
fdivr
jno
sub
in
scas
push
ss
gs
shr
icebp
ins
adc
and
adc
pop
jb
aaa
push
pop
and
jns
or
xchg
pop
dec
stc
outs
pop
shr
sub
in
pop
jp
cdq
clc
mov
jg
ror
movs
adc
ror
and
out
and
cmps
pop
cmp
adc
push
jno
jae
clc
into
xchg
cmp
xor
cmp
push
in
cli
lods
out
sbb
inc
pop
xor
aas
inc
sti
popf
xchg
push
push
jge
loopne
mov
fiadd
mov
retf
jmp
loope
pushf
icebp
sti
pop
hlt
push
and
xchg
xor
shr
jmp
pop
lods
xchg
into
sahf
(bad)
cmp
call
mov
add
push
jle
push
xor
aas
pop
lea
stos
lods
cmp
and
imul
fist
nop
scas
sbb
js
(bad)
ror
sbb
mov
fidiv
mov
mov
pop
jmp
xchg
out
fbstp
cli
ja
arpl
cld
test
adc
sbb
lods
jecxz
and
mov
iret
stos
pop
mov
xor
cld
leave
sbb
or
lea
sub
or
aaa
inc
out
pop
dec
call
loope
sbb
mov
js
mov
jb
test
es
sbb
and
pop
push
loopne
sbb
mov
stc
dec
pop
ds
pushf
adc
cli
xor
aaa
push
shr
cs
popa
cmp
sbb
add
cli
pop
ja
push
movs
mov
in
movs
jle
retf
cmp
add
cmp
adc
fistp
ret
leave
ror
push
repnz
sub
mov
mov
or
div
inc
or
rol
mov
push
or
sub
repnz
mov
add
sar
ss
and
or
outs
xor
or
mov
sbb
mov
repz
add
inc
call
mov
sub
add
dec
dec
in
arpl
int3
push
adc
mov
iret
movs
(bad)
push
test
jmp
dec
sub
sahf
repz
xchg
xchg
ret
jo
movs
lock
rol
xchg
loope
or
nop
ds
nop
loopne
cli
fbld
sbb
clc
into
inc
inc
test
pop
ret
arpl
lea
push
imul
shl
ret
push
adc
fst
or
add
(bad)
xor
addr16
mov
movs
push
cmps
outs
(bad)
leave
in
sub
mov
imul
loop
cld
inc
dec
jnp
jnp
mov
push
and
adc
fs
mul
sbb
loope
movs
ja
std
mov
push
xor
mov
das
js
inc
je
sub
cmp
pop
or
lahf
pushf
mov
js
scas
sbb
adc
mov
mov
test
ret
inc
jmp
xor
lea
rcl
adc
int
add
dec
ret
outs
add
daa
and
jns
mov
hlt
xor
(bad)
in
add
add
sbb
push
mov
adc
in
mov
ret
stos
(bad)
adc
and
repz
es
dec
call
xor
scas
cmps
stos
and
test
loopne
dec
or
xchg
and
aam
or
cmp
mov
adc
mov
(bad)
fwait
dec
mov
mov
sbb
test
stos
lock
add
pop
cmp
movs
adc
jp
pop
xor
mov
jnp
mov
adc
xchg
repnz
adc
mov
or
mov
stc
or
mov
popf
and
mov
out
test
xlat
mov
loopne
fadd
loopne
or
sub
or
cmps
adc
adc
add
xchg
jl
add
add
fsubp
shl
push
js
cdq
daa
fisubr
lods
mov
js
cmp
in
pushf
mov
(bad)
aam
sub
mov
shl
cs
and
mov
fcomp
pop
stc
sub
test
dec
jecxz
mov
loope
aaa
sub
xlat
fwait
push
div
inc
jne
mov
es
sbb
xchg
ja
pop
call
ins
add
in
retf
inc
adc
iret
ror
xchg
xchg
test
push
(bad)
stos
jg
vpcmpestrm
(bad)
jo
cmps
dec
push
adc
mov
retf
dec
test
cmps
stc
in
push
xchg
xchg
or
or
mov
rcr
inc
popa
repz
enter
cld
push
fcmove
(bad)
jns
mov
push
xchg
cmc
and
xor
add
mov
repnz
xor
cdq
test
fdivr
inc
sbb
dec
cmp
xchg
hlt
sub
out
imul
xor
in
sti
stos
jmp
addr16
cld
xchg
ret
daa
inc
popf
scas
fsub
call
dec
xchg
pop
adc
lock
daa
fwait
push
sub
mov
pop
pop
mov
clc
into
cdq
cmps
mov
dec
mov
xor
repnz
jmp
dec
push
fdivr
fistp
adc
fwait
cmc
mov
movs
inc
out
dec
inc
fdiv
fistp
pushf
shr
push
adc
test
in
push
cmp
mov
inc
jecxz
or
and
jge
lds
push
outs
imul
call
test
or
mov
mov
shl
sub
cmps
idiv
sub
hlt
not
dec
mov
bound
data16
(bad)
or
or
mov
fisttp
fisttp
jge
mov
pop
mov
mov
add
pop
leave
lahf
adc
mov
pop
mov
push
mov
in
cld
fs
push
je
mov
rol
scas
cmps
pop
lods
or
icebp
in
jecxz
sar
adc
push
dec
cmc
push
cdq
add
pop
push
inc
add
pop
movs
or
imul
xor
test
inc
jge
add
add
push
(bad)
xchg
gs
cwde
or
dec
mov
jns
jmp
push
movs
ins
mov
dec
cmps
mov
sar
jecxz
icebp
dec
in
fidivr
fidivr
pop
in
aaa
pop
rcl
retf
outs
(bad)
shl
and
cmps
lods
cmp
sbb
js
sub
sbb
lea
adc
sar
cmp
in
int
loope
retf
jo
mov
inc
push
aas
push
xchg
out
and
shl
imul
test
pushf
xchg
daa
sub
xchg
outs
in
and
mov
je
mov
xchg
cmps
push
lea
mov
and
sbb
xchg
mov
jmp
pop
inc
xor
in
or
int
push
enter
sbb
xchg
xchg
hlt
daa
not
aas
mov
inc
lods
in
aam
push
add
(bad)
addr16
and
out
test
das
call
(bad)
sub
and
(bad)
sub
jmp
inc
repz
in
imul
jns
and
or
addr16
ret
or
add
rcl
dec
rol
sub
je
or
data16
outs
pop
fimul
jp
push
or
pop
push
sub
cwde
pop
jl
gs
mov
cmp
sub
jecxz
test
pushf
scas
adc
icebp
push
daa
fsubr
ins
mov
sub
xor
xlat
jle
pop
mov
or
bound
jmp
test
jae
sub
push
ret
loope
xchg
cmps
xor
hlt
jecxz
imul
pop
push
outs
cmp
sti
inc
retf
mov
pop
clc
jb
sbb
xlat
jmp
jnp
cmp
mov
dec
dec
dec
pusha
dec
inc
sahf
mov
nop
pop
adc
pop
cdq
xchg
inc
hlt
aam
test
mov
stos
js
cwde
lods
fwait
pop
(bad)
push
clc
test
inc
sub
dec
add
sti
mov
dec
stos
and
adc
mov
jp
(bad)
sbb
mov
fisub
xor
jno
mov
xor
mov
pop
dec
scas
sub
retf
sbb
push
out
inc
xor
cmps
fcom
cmp
sub
cmp
jmp
imul
cmps
mov
call
das
call
cmp
mov
addr16
ins
retf
rcl
popf
sbb
jbe
aam
dec
push
and
icebp
icebp
cld
sub
add
xchg
das
mov
(bad)
fld
lds
push
pop
cs
popa
inc
mov
xor
jl
jns
adc
add
lock
mov
rcl
fdivr
gs
mov
rol
fs
test
lea
bswap
mov
jno
sub
stc
scas
dec
data16
mov
jnp
and
push
lea
clc
retf
mov
push
shl
daa
sar
jbe
js
jb
dec
or
das
mov
dec
inc
out
xor
fstp
jle
js
sbb
mov
xchg
and
ficomp
adc
rcr
add
pop
fs
adc
fistp
inc
cwde
xlat
shl
lods
push
lods
mov
adc
mov
shl
loop
adc
movs
add
(bad)
mov
es
or
clc
sti
xor
shl
sbb
aam
add
aas
sub
leave
sub
es
nop
jge
push
test
scas
iret
dec
jmp
sub
mov
fwait
and
sub
movs
xor
mov
push
dec
or
and
mov
sti
leave
retf
data16
repnz
mov
cmp
jns
mov
in
rcr
xchg
jmp
jle
test
sbb
fist
pop
adc
cmps
popf
and
dec
xchg
xor
xchg
stos
pop
sbb
loope
aad
jmp
in
sbb
push
cmps
dec
mov
iret
pop
mov
pop
lahf
(bad)
out
nop
jp
push
cmp
mov
mov
cwde
cmc
push
movs
mov
xchg
jne
pusha
dec
rcr
mov
popa
push
je
data16
xor
lahf
inc
dec
repz
or
mov
out
dec
dec
push
inc
sub
sbb
adc
lods
retf
shr
lods
add
rcl
pop
aam
(bad)
adc
mov
add
div
retf
popa
jge
call
out
out
and
out
fs
mov
sahf
adc
(bad)
ret
js
ins
sbb
cwde
sbb
es
add
xchg
bound
sub
loopne
lock
outs
sti
cmps
cmp
sahf
jae
push
adc
and
ds
hlt
mov
daa
xchg
(bad)
pusha
iret
lods
mov
xor
push
loop
inc
loop
push
in
pop
or
or
mov
jge
pop
dec
jno
stos
pop
inc
push
xchg
push
mov
out
cmp
es
in
int
push
fdivr
xor
push
cdq
sub
pop
retf
popa
xlat
aaa
sahf
and
test
sub
push
clc
mov
aas
in
lock
xor
sti
out
fld
push
cmps
int
jno
xchg
pop
es
jb
inc
(bad)
lods
jg
pop
or
jge
jecxz
push
sub
mov
rcr
jg
mov
and
add
jns
repz
mov
pop
fbld
hlt
fdivr
push
sub
mov
test
cs
cli
repnz
pop
pop
nop
ds
int3
add
fwait
xchg
(bad)
cmps
shl
push
jno
add
pop
pop
lahf
jae
cmps
or
out
push
jl
xchg
sub
pop
mov
clc
jge
jo
inc
jecxz
xchg
rcl
fcomip
mov
adc
nop
pop
bound
push
mov
xchg
mov
sbb
add
js
xchg
scas
pop
(bad)
in
mov
or
add
in
fwait
ss
pop
gs
or
fstp
and
mov
mov
xor
icebp
or
les
xchg
jnp
and
or
mov
fsub
cmp
sbb
fisubr
out
(bad)
cli
sti
xlat
sbb
and
add
(bad)
mov
(bad)
add
xor
pusha
xor
mov
(bad)
add
dec
bound
loopne
jecxz
adc
retf
mov
cmp
into
(bad)
(bad)
sub
cmp
bound
add
push
mov
pushf
iret
arpl
or
or
cmp
enter
ja
pop
in
or
xchg
sbb
cmp
adc
ret
adc
pop
ficomp
dec
enter
xchg
imul
pop
xchg
push
popf
(bad)
pop
les
in
mov
inc
push
mov
es
push
mov
mov
cld
fsub
cmp
jb
push
jge
mul
shl
std
push
(bad)
dec
mov
push
adc
adc
or
sub
dec
cli
mov
or
aas
or
js
mov
ss
jae
xchg
xchg
cld
sti
test
push
mov
mov
in
movs
jb
mov
xchg
stc
hlt
add
cs
out
pop
adc
add
and
xor
and
lsl
fidivr
fnsave
jbe
jo
fild
xchg
and
mov
jno
dec
call
sub
loop
mov
mov
mov
ret
int3
out
mov
sub
imul
imul
js
pop
xor
mov
imul
iret
mov
dec
aam
pop
jbe
add
call
xchg
or
bound
lods
xchg
mov
push
mov
mov
fwait
cmps
add
cmp
stos
add
ins
cmp
jmp
clc
inc
and
mov
clc
jmp
push
std
jae
inc
fld
mov
xor
fild
fs
repz
shr
sub
hlt
sub
jmp
or
dec
pop
ret
outs
jg
xchg
shr
cmp
and
les
mov
ja
out
data16
or
aaa
sbb
mov
pop
mov
or
jae
dec
sub
push
jb
sub
push
pop
dec
(bad)
jmp
and
mov
adc
xchg
nop
stos
sar
ret
pusha
push
dec
inc
cmp
enter
inc
pop
adc
dec
fwait
mov
js
mov
gs
lock
pop
iret
and
or
(bad)
xor
cs
and
inc
fucomi
imul
mov
int
fstp
cmp
fisubr
push
xchg
and
adc
popa
ins
aaa
mov
ret
jne
(bad)
jp
sbb
ja
fchs
adc
cdq
mov
(bad)
das
cmp
fcom
add
jmp
ror
and
retf
shl
jmp
outs
dec
mov
mov
loop
aas
jecxz
(bad)
in
fisubr
mov
enter
pop
push
retf
imul
pop
add
jns
push
add
xchg
in
loopne
ss
push
fild
mov
xlat
pop
or
cmp
add
sub
pusha
or
mov
adc
pop
push
dec
push
dec
sbb
cmp
sbb
inc
dec
cwde
test
test
push
ss
mov
inc
retf
rol
mov
jno
inc
dec
mov
dec
cmp
rcl
popa
repz
push
mov
popf
sti
gs
loop
or
(bad)
or
mov
xchg
into
xchg
xchg
pop
std
in
pop
dec
push
mov
cmc
pop
sbb
cmp
mov
inc
xor
aam
xchg
movs
repnz
jge
pop
mov
cmp
enter
cmps
inc
dec
dec
stc
push
sub
sub
scas
mov
cdq
repnz
bound
pushf
rol
add
loop
mov
or
mov
push
(bad)
jge
xor
icebp
adc
cmp
jno
repnz
xchg
pop
and
mov
(bad)
sbb
scas
lods
pusha
inc
sub
int
aad
(bad)
(bad)
push
xchg
or
jl
add
xchg
arpl
inc
and
inc
xchg
mov
fucomp
xchg
pop
imul
ins
call
int3
inc
mov
cmp
(bad)
add
xchg
add
movs
and
xchg
aas
mov
call
das
push
in
shl
cdq
and
mov
loop
outs
pop
inc
les
inc
out
cmp
and
xchg
jne
sbb
xchg
icebp
sti
call
jecxz
retf
fisttp
stos
xor
movs
lods
iret
adc
std
aad
add
pop
xor
dec
dec
test
mov
adc
test
out
add
cmp
xchg
add
cs
push
sub
imul
rcr
sbb
jg
fbstp
(bad)
loop
dec
xchg
mov
cdq
into
dec
mul
call
cld
popa
scas
mov
int
xchg
(bad)
xor
mov
adc
data16
iret
mov
daa
hlt
jo
dec
push
aaa
and
mov
setle
jg
lahf
or
pop
cwde
into
pop
test
mov
inc
xchg
retf
dec
cmp
or
pop
cmp
pop
cmps
cmps
mov
dec
sbb
fsubr
add
inc
cmp
xor
dec
push
iret
mov
aaa
mov
mov
dec
ret
cmps
outs
add
jmp
int3
mov
cmp
idiv
push
mov
pop
sub
cmp
and
call
ins
cmps
add
inc
or
cs
scas
pop
popa
mov
jbe
adc
movs
outs
inc
add
ins
mov
bound
mov
test
and
sbb
cdq
fimul
sbb
ins
cdq
jmp
mov
ins
pop
pop
sbb
adc
or
(bad)
mov
inc
arpl
pop
or
xor
push
gs
jp
mov
cmp
sub
cmps
setle
push
sbb
fmul
inc
xchg
sbb
scas
adc
mov
sbb
jmp
sbb
dec
aam
pop
or
icebp
out
xor
idiv
or
or
ja
push
cmps
pop
sub
and
fsubr
scas
aad
int3
scas
sub
or
ficomp
pop
out
shr
sub
es
cmp
mov
mov
(bad)
(bad)
xchg
clc
movs
mov
xchg
or
sbb
sar
retf
fsub
arpl
xchg
cmps
dec
push
test
push
or
xchg
xor
xchg
dec
sub
in
call
xchg
push
dec
(bad)
rcr
sub
shr
outs
mov
xchg
fucomi
or
rep
adc
sbb
jne
dec
xchg
push
dec
pop
or
fsub
sub
aam
mov
popa
fwait
test
addr16
mov
and
mov
jle
xor
cmp
mov
add
xor
dec
mov
mov
dec
nop
ins
jne
add
push
sbb
out
cmp
adc
lea
xchg
xchg
int
cmp
ds
rcr
or
pop
sbb
into
cmps
sar
(bad)
sti
movs
jnp
sbb
xchg
dec
out
jmp
movs
sub
mov
sbb
ins
jae
mov
shl
push
adc
mov
outs
movs
in
inc
and
sbb
scas
ins
or
hlt
push
bound
and
or
ror
test
push
test
xchg
adc
lods
push
aas
inc
lahf
push
mov
(bad)
hlt
mov
sub
scas
xchg
(bad)
mov
add
mov
lock
inc
lahf
cdq
test
(bad)
mov
data16
fmul
sub
ror
fisttp
sbb
and
dec
out
sub
jbe
or
(bad)
test
ds
bnd
cmp
ja
int3
jnp
test
inc
arpl
xchg
daa
inc
out
sub
popa
in
mov
add
cmp
out
inc
jne
out
mov
xchg
xchg
clc
xchg
cmp
sar
shl
(bad)
jns
aas
mov
pop
and
mov
xor
ja
push
jmp
add
dec
stos
jae
stos
fadd
cmc
jne
push
xchg
std
ins
cmp
pop
pop
addr16
mov
pop
std
xchg
jnp
cs
pop
(bad)
shl
dec
clc
push
aas
push
sar
dec
in
jecxz
retf
out
bound
dec
int3
pushf
(bad)
scas
xor
aad
int3
jnp
cli
sbb
ficom
jno
data16
outs
div
mov
loopne
jmp
dec
stc
mov
fst
sbb
sbb
rol
cmp
int3
mov
stc
out
pushf
push
in
push
adc
mov
push
xchg
mov
leave
lods
wrmsr
aad
iret
gs
adc
loopne
sar
adc
add
lea
mov
in
inc
and
add
test
les
sub
cmp
xor
mov
sub
sub
(bad)
jmp
les
std
jbe
xor
hlt
xlat
xchg
mov
and
dec
int3
mov
cmp
mov
in
fwait
hlt
sahf
xor
data16
cmp
pop
cmp
cmps
call
cmp
pop
push
loope
mov
and
add
leave
mov
mul
dec
mov
xor
pop
add
test
std
and
icebp
ins
xchg
aad
out
sbb
mov
loopne
dec
retf
out
clc
es
retf
inc
movs
mov
jge
sbb
xchg
bound
in
in
xor
jbe
jns
pop
and
cmc
pusha
test
cmp
mov
mov
movs
fs
ucomiss
cmc
mov
dec
mov
jbe
cli
pop
mov
and
push
retf
xor
out
mov
mov
sbb
(bad)
adc
push
mov
out
ret
imul
aas
adc
nop
rol
nop
inc
bound
add
in
leave
mov
pusha
or
cmps
icebp
cmp
stos
repz
or
jg
xchg
cli
leave
in
out
into
leave
adc
hlt
(bad)
xchg
adc
mov
(bad)
iret
std
mov
pop
mov
adc
ror
rol
jb
xor
jo
dec
pop
fst
push
sub
adc
inc
add
jg
inc
xchg
dec
pop
xchg
fimul
das
pop
mov
aaa
ss
jmp
je
jle
aaa
adc
sbb
xchg
imul
jp
sar
push
clc
or
adc
pop
iret
dec
sti
mov
mov
retf
in
fisub
jbe
jne
pop
mov
add
bound
ds
nop
repnz
cmp
adc
cmp
pop
mov
mov
and
hlt
sbb
scas
push
mov
fadd
mov
ss
je
jbe
and
std
sub
sbb
or
and
je
and
inc
pop
adc
fsubp
add
lahf
cmp
dec
xchg
je
add
test
jle
jno
inc
jmp
je
push
push
adc
cmp
int3
imul
mov
fidiv
mov
jecxz
pop
jg
movs
mov
mov
fisubr
arpl
ss
repnz
push
and
inc
ins
pushf
scas
lahf
sbb
aam
sbb
movs
jle
adc
adc
shl
stos
dec
dec
or
pop
cli
xor
xchg
popf
and
mov
mov
adc
mov
ja
xchg
(bad)
mov
jne
aad
adc
dec
outs
mov
mov
icebp
inc
vmovmskpd
hlt
add
push
rcr
hlt
mov
dec
rol
jg
mov
cmp
cdq
inc
sbb
dec
adc
sub
hlt
inc
sbb
hlt
jmp
push
jbe
jns
inc
out
lea
int3
and
or
adc
loope
ret
ja
clc
mov
aaa
retf
xor
(bad)
fs
js
inc
inc
sub
leave
push
inc
or
xchg
pop
leave
daa
add
jp
sub
inc
gs
std
adc
mov
pop
bound
int3
(bad)
(bad)
int
je
adc
(bad)
out
and
cmp
push
mov
aad
mov
mov
data16
int3
pop
rcr
pop
loopne
xchg
out
adc
sub
jb
out
(bad)
in
lds
int
das
cs
ja
jo
retf
arpl
and
ja
jmp
cld
jmp
inc
inc
or
mov
(bad)
(bad)
popa
and
cmp
fnsave
lahf
xchg
xchg
mov
mov
and
or
into
adc
add
loop
add
and
xlat
pushf
mov
jmp
inc
pop
mov
inc
adc
hlt
and
rcr
call
in
retf
sbb
mov
arpl
mov
call
gs
jl
mov
rcr
inc
ret
dec
dec
aas
pop
jg
xor
adc
cmc
imul
mov
ins
cmp
or
data16
mov
and
and
pop
or
inc
inc
loope
loope
loope
cmp
out
and
pop
cmp
das
push
push
rol
pop
ficom
adc
jmp
retf
push
lahf
std
dec
sbb
dec
cwde
or
in
fdivr
mov
out
lods
out
fmulp
inc
sahf
loop
cmp
mov
mov
call
mov
jo
xor
js
pop
xchg
(bad)
jle
mov
xchg
dec
ja
jg
pop
in
push
iret
mov
fldcw
jnp
adc
rol
mov
pop
sub
dec
(bad)
adc
xor
dec
out
push
xor
xor
jle
mov
or
(bad)
mov
test
mul
xchg
in
sub
mov
jo
pop
pop
jmp
das
pop
sar
int
ds
outs
jb
dec
aas
sbb
test
outs
jne
xchg
inc
out
int3
push
jg
push
jne
mov
xchg
mov
into
lds
outs
inc
pop
cmp
cmp
outs
cmp
push
pop
inc
pop
pop
cmp
in
sub
idiv
std
daa
stos
pop
lds
clc
jnp
xchg
out
aam
pushf
add
stos
adc
sbb
sahf
inc
mov
cmp
iret
xchg
mov
jp
leave
push
mov
ins
lods
cdq
jbe
push
hlt
mov
adc
icebp
stos
push
call
rep
les
mov
fadd
ds
ret
shr
repnz
sbb
mov
rcl
sahf
xor
scas
repz
jmp
jb
jo
sbb
js
jmp
jbe
movs
sub
mov
sbb
mov
(bad)
mov
jns
adc
inc
jae
das
adc
cmps
mov
pushf
jno
pop
cmps
daa
lock
(bad)
loope
out
fdivr
out
jmp
cmp
and
dec
sub
imul
cmp
mov
mov
in
sbb
popa
sub
repz
imul
lock
push
add
inc
mov
das
(bad)
adc
mov
mov
adc
adc
mov
mov
ficom
(bad)
inc
jle
or
dec
int
xchg
cmp
push
icebp
pop
inc
fst
cdq
mov
mov
or
inc
push
sbb
and
repnz
dec
mov
xor
leave
xor
movs
add
xchg
inc
pop
pushf
test
mov
dec
pop
sub
cdq
inc
(bad)
out
adc
cmp
or
add
ret
xor
cmp
int3
pop
(bad)
cmp
scas
mov
lea
or
dec
sbb
popf
jae
mov
hlt
xchg
lahf
dec
aaa
pushf
push
sbb
out
(bad)
into
icebp
aad
or
leave
int
jg
shr
jg
test
add
xchg
mov
lods
aad
cwde
dec
xor
adc
shl
jl
sbb
sbb
inc
mov
mov
dec
jns
mov
stos
popf
loop
movs
xor
outs
jle
hlt
cmp
push
(bad)
mov
inc
repnz
fucomp
cli
or
outs
sub
repz
mov
cmp
or
xchg
out
rcl
call
imul
jae
mov
jl
retf
pop
adc
cmp
inc
dec
add
das
idiv
shl
cmp
adc
jb
xor
in
retf
mov
popf
xor
adc
jle
dec
arpl
dec
addr16
sub
or
cli
sub
gs
repz
iret
xor
xchg
retf
mov
daa
or
dec
pop
dec
add
hlt
sbb
mov
jbe
push
mov
xlat
add
(bad)
out
dec
cmps
retf
inc
add
push
mov
xor
dec
pop
inc
cdq
xor
out
xor
push
test
fadd
out
std
cld
call
addr16
dec
les
mov
int
push
push
fcomp
imul
xor
add
mov
in
mov
div
into
ja
ficom
jg
cmp
lahf
xchg
sbb
dec
inc
(bad)
in
jae
ss
lds
mov
jecxz
sbb
lea
push
jmp
call
fst
mov
jno
and
xor
leave
pop
push
es
dec
stos
movq
movs
test
pop
out
adc
cdq
lds
or
sbb
aad
xor
jecxz
push
data16
add
add
inc
mov
jecxz
sbb
adc
mov
into
in
cdq
outs
lods
jmp
shl
adc
jb
aaa
jns
aam
scas
outs
pop
cld
dec
loope
add
(bad)
and
movs
inc
sbb
push
loopne
(bad)
in
pusha
sub
xchg
dec
mov
push
loope
or
ja
cmc
jecxz
dec
ds
(bad)
out
test
enter
imul
push
dec
cli
mov
mov
push
int3
mov
push
mov
cmp
in
inc
leave
inc
repz
ds
add
pushf
sbb
repz
addr16
ins
adc
mov
test
leave
inc
jae
icebp
clc
adc
xchg
mov
in
shl
dec
jl
dec
in
sub
lds
retf
repz
push
dec
mov
mov
pop
mov
fldenv
push
sar
icebp
sbb
call
push
dec
adc
jno
es
jg
data16
mov
xchg
and
or
ret
adc
cmp
push
mov
xor
pop
call
dec
mov
imul
push
mov
cmp
and
loopne
xor
cmc
pop
jl
push
ret
adc
call
inc
push
(bad)
mov
mov
stc
pop
nop
pop
sbb
call
out
loope
xchg
jo
jmp
inc
fmul
adc
mov
jmp
lock
pop
rcr
jl
aam
jmp
or
cmp
cwde
xlat
stos
lahf
lahf
scas
ss
fwait
mov
xchg
retf
inc
jo
add
sbb
cwde
leave
mov
push
repz
ins
xor
movq
sbb
mov
dec
in
adc
pop
pusha
call
or
(bad)
icebp
inc
pop
add
jmp
in
sbb
push
std
jnp
jb
repnz
xor
test
sbb
mov
xor
shl
pop
cs
jae
push
test
cmc
hlt
pop
push
adc
ins
fwait
and
mov
daa
aam
mov
dec
jo
ss
jl
cmp
movs
inc
fild
xchg
ret
sub
sub
movs
out
shl
push
push
arpl
xchg
jnp
les
add
inc
retf
sti
retf
fdiv
leave
dec
inc
push
push
mov
sbb
mov
imul
mov
das
mov
arpl
ret
int3
fadd
push
jmp
test
inc
and
pop
mov
xchg
pop
popf
cwde
push
es
jmp
xchg
arpl
cld
imul
int3
inc
cmp
fcomip
jb
cmp
and
aad
push
enter
jb
dec
xor
shl
inc
imul
sahf
push
fcmovu
pop
pop
std
inc
test
(bad)
push
out
adc
sub
das
pop
jmp
mov
dec
mov
and
out
adc
js
xor
or
cmps
sub
mov
hlt
pop
mov
loopne
mov
shufps
xchg
mov
(bad)
lods
nop
int3
push
add
in
jb
mov
ror
in
mov
sub
and
sahf
fimul
mov
rcl
in
and
btc
es
or
add
inc
sti
ins
dec
ret
sbb
xchg
neg
rol
aaa
and
push
cmp
mov
iret
daa
cmp
inc
aas
xchg
retf
lods
pop
xor
or
mov
jb
sub
fiadd
out
dec
loope
mov
mov
lahf
fnsave
(bad)
pop
lds
div
out
push
push
mov
loopne
inc
push
inc
adc
outs
cmps
daa
xor
addr16
fwait
repnz
ins
cmp
mov
adc
jnp
ins
sbb
pushf
in
add
mov
push
retf
aas
test
push
aaa
mov
lock
xor
mov
and
inc
seto
ins
xchg
cs
int3
and
nop
xor
aas
icebp
std
adc
loop
popa
or
jne
lds
(bad)
repz
inc
sub
dec
or
fstp
cmp
ret
retf
xor
out
inc
imul
and
out
call
mov
sahf
add
icebp
mov
fmul
push
mov
(bad)
into
(bad)
loopne
sar
add
clc
pop
push
fist
fsub
data16
xchg
mov
test
addr16
and
or
mov
dec
cs
mov
push
std
xor
push
sub
mov
dec
test
adc
jl
adc
sbb
inc
pop
jnp
adc
jmp
lea
lahf
imul
mov
out
stc
push
test
xchg
dec
in
jmp
add
push
or
cdq
fisttp
mov
xchg
stos
rcr
add
add
retf
xor
xor
mov
fxam
lds
dec
fimul
std
xor
inc
fld
mov
push
inc
sbb
inc
pop
mov
call
test
cmp
aas
test
cmp
sub
popa
outs
retf
fs
outs
out
adc
xor
(bad)
mov
push
call
mov
retf
ja
into
mov
rcr
int3
daa
xchg
xor
addr16
imul
and
ss
add
mov
mov
jle
cmp
jmp
loop
rcl
push
outs
rcr
int3
mov
mov
ret
loope
mov
(bad)
fmul
(bad)
cli
lods
push
cmp
popf
xor
cmp
cdq
add
ror
mov
xor
std
in
push
pop
sbb
push
jmp
sbb
test
mov
mov
jns
cmc
and
push
popa
loop
push
and
fcmovnb
dec
pop
ds
push
daa
sbb
shl
mov
sbb
loope
fstp
push
lds
and
movs
test
xor
mov
cmc
js
stos
inc
sbb
mov
inc
xchg
stc
inc
dec
mov
xchg
popf
rol
gs
xchg
lahf
adc
push
push
pop
mov
pop
xor
sbb
frstor
jne
cs
pop
ins
das
mov
xlat
inc
stos
es
ins
dec
add
cmps
mov
xchg
mov
jp
add
(bad)
test
push
add
ret
xlat
sub
scas
push
jo
inc
aas
rcr
test
out
mov
sbb
cmps
inc
cmp
test
pop
fld
sub
div
nop
jno
push
jnp
jae
mov
or
dec
shl
lahf
loope
out
push
mov
add
std
jge
pushf
push
sub
cmp
lods
not
neg
(bad)
fwait
jg
pop
aad
in
fwait
lahf
dec
movs
or
xor
fs
mov
inc
scas
mov
lahf
cwde
pop
add
push
dec
fs
push
sub
mov
aaa
sbb
pusha
repz
loope
sbb
movs
cmp
inc
mov
jl
adc
lahf
pusha
push
inc
pop
jmp
pop
sub
call
jge
mov
cdq
cli
aad
cmps
and
adc
inc
jp
out
sub
sbb
scas
sub
mov
sbb
add
in
push
xchg
mov
inc
mov
les
out
scas
push
push
push
jb
imul
push
xor
dec
aaa
xchg
xchg
cmp
pop
shr
cmp
test
fld
imul
xchg
pop
inc
mov
pop
xchg
arpl
inc
dec
ins
mov
xchg
call
sub
xor
loopne
ret
and
jecxz
fcom
std
jle
jg
mov
inc
call
adc
ins
jmp
aam
ret
xchg
sub
sub
mov
pop
mov
sub
dec
cs
dec
push
scas
add
add
inc
pop
outs
test
retf
mov
repnz
cwde
cdq
std
push
(bad)
mov
mov
jmp
cmp
sub
jp
pop
inc
jb
lea
inc
sbb
ja
shl
sub
clflush
out
nop
icebp
jmp
stos
rol
sub
stc
or
jne
pop
loope
jns
retf
push
rcr
add
jb
mov
popa
push
mov
mov
into
add
xchg
shl
(bad)
mov
hlt
rcl
or
pop
inc
jae
xlat
test
ins
push
and
mov
xchg
ja
jmp
lods
mov
or
push
inc
test
sbb
cmps
sub
and
add
fnsetpm(287
lea
iret
scas
xchg
imul
in
lds
std
test
and
mov
jb
and
adc
cmc
rcl
sub
lds
outs
ss
or
xor
cmps
or
cli
ja
pop
out
xor
or
xor
jbe
out
stos
dec
dec
push
lods
or
cmp
push
mov
pop
xchg
repnz
mov
mov
or
push
inc
xor
sbb
mov
ficomp
push
push
mov
popf
pop
hlt
test
je
dec
mov
sbb
iret
jno
mov
mov
sub
and
add
test
pusha
out
push
or
test
pop
outs
in
mov
pop
enter
mov
mov
push
push
les
jns
inc
ss
and
push
sbb
dec
jmp
xchg
and
mov
push
xor
test
xchg
and
imul
popf
jns
mov
mov
sahf
push
je
addr16
aas
(bad)
aaa
sub
xchg
lahf
pop
stc
rol
lods
mov
jp
and
jns
sbb
cmc
sahf
lea
cld
sbb
gs
rcl
movups
repnz
dec
jmp
rol
shr
iret
sbb
mov
sub
adc
sbb
push
pop
jmp
cmps
adc
mov
call
in
dec
js
jmp
sub
test
popf
fwait
shl
ret
in
(bad)
xor
xchg
mov
mov
cwde
retf
repz
pop
(bad)
iret
ds
(bad)
xchg
sahf
xchg
jmp
bound
dec
sub
xor
sub
inc
sub
xchg
leave
inc
aam
cmp
sbb
aas
lea
sbb
adc
pusha
addr16
adc
test
(bad)
out
add
lahf
mov
push
mov
mov
dec
dec
(bad)
fs
in
xlat
out
loop
in
cmc
xor
cdq
stc
in
jl
fcmovbe
mov
(bad)
cmp
mov
lods
lods
bound
cmps
repnz
dec
inc
cli
lods
test
outs
mov
stos
add
imul
ins
in
pop
jae
jmp
rol
and
test
hlt
cmps
adc
lods
cld
imul
dec
xor
inc
jmp
xchg
add
jmp
pop
outs
adc
neg
push
in
outs
imul
sbb
stc
pop
mov
push
mov
lds
cld
jnp
mov
sub
fcom
(bad)
push
fisubr
das
out
mov
in
adc
mov
sub
ins
xor
test
ins
sub
mov
iret
std
ins
mov
cmp
(bad)
cmp
addr16
pop
ds
out
out
les
xor
inc
loop
into
stc
das
enter
jp
jmp
mov
out
cld
adc
xlat
sar
push
cmp
dec
repz
(bad)
sbb
cmp
out
fdivr
lods
cmps
lds
sbb
movs
daa
repz
mov
or
ds
popa
icebp
outs
cmp
xchg
std
out
mov
in
dec
add
xor
xor
ds
sub
xchg
ss
or
cmps
inc
jl
sbb
cmc
rcr
stos
test
rcl
mov
xor
sti
(bad)
fild
cld
or
push
clc
addr16
jno
xchg
fistp
push
addr16
pop
cmp
jp
jns
add
test
test
lods
dec
fsubrp
(bad)
mov
xor
scas
cmp
cmp
mov
pop
arpl
add
inc
or
aaa
rcr
jmp
std
dec
mov
mov
pop
sub
(bad)
dec
dec
sbb
(bad)
out
stos
and
mov
pop
cld
sbb
mov
sub
xchg
hlt
pop
sahf
pop
cld
or
aaa
out
rol
push
nop
(bad)
(bad)
test
(bad)
ins
adc
pop
sti
das
and
jecxz
mov
icebp
or
mov
lea
or
jp
int
fwait
dec
lods
sbb
ret
inc
jno
shl
cmp
dec
jl
inc
test
pop
add
pop
ret
les
or
jl
cmp
dec
sub
cwde
xchg
movs
mov
jmp
fst
push
sar
push
mov
add
inc
fnsave
aam
or
cmp
pop
add
adc
imul
inc
or
repnz
dec
fs
fisttp
fstp
ins
mov
inc
or
push
lods
cmc
mov
outs
xor
test
and
and
mov
mov
inc
adc
mov
(bad)
cmc
pop
cwde
(bad)
fimul
lahf
jno
inc
pushf
xor
jmp
inc
clc
out
pushf
cmp
pop
imul
pop
push
push
push
push
cmp
popf
mov
pop
(bad)
jp
rcl
sub
push
test
aad
pop
lock
lahf
nop
(bad)
jnp
xor
mov
mov
adc
push
sti
(bad)
add
imul
(bad)
out
bnd
mov
rol
jp
aad
or
mov
in
jecxz
movs
fist
or
ss
je
outs
pop
inc
cmp
retf
fld
pusha
mov
int
jmp
test
js
pop
shr
pop
aaa
stos
(bad)
lds
pop
js
data16
xchg
xchg
add
mov
jns
ins
push
sahf
dec
push
popf
ja
data16
sub
adc
retf
add
xor
add
inc
jecxz
inc
or
test
stc
and
rcl
push
imul
mov
scas
xlat
jmp
push
xor
and
adc
sahf
retf
inc
dec
or
clc
pop
mov
xchg
ret
popa
add
xor
jne
ins
nop
xchg
lahf
ins
add
test
cmps
push
cld
sub
clc
int
call
ins
add
int3
pop
push
xchg
leave
outs
xor
and
sbb
cmps
add
mov
out
(bad)
iret
mov
call
and
outs
push
jnp
cmp
pusha
jo
xchg
icebp
or
push
and
cmp
out
les
cmp
add
sbb
push
dec
or
mov
imul
push
lods
or
mov
stos
add
and
aam
cmp
js
icebp
jecxz
test
or
cmp
dec
popf
je
fwait
out
inc
mov
adc
mov
mov
push
outs
sbb
js
in
pop
xor
call
stc
add
mov
inc
push
and
rol
test
push
jae
dec
enter
daa
iret
ins
pop
mov
inc
mov
pop
clc
scas
add
cmp
int3
loopne
lods
mov
adc
(bad)
xor
add
aaa
out
push
sub
mul
enter
or
push
xchg
sub
call
bound
dec
stos
mov
movs
test
pop
xchg
inc
loop
mov
jg
cmp
enter
push
add
dec
jae
lock
mov
into
into
lock
test
xchg
ret
push
xor
jle
inc
imul
outs
pop
sar
mov
repnz
mov
(bad)
mov
loopne
jno
fbld
sbb
lock
popf
pusha
and
mov
ret
push
pop
dec
fstp
mov
daa
aam
and
inc
sub
lock
mov
mov
fnsave
mov
icebp
inc
sbb
inc
(bad)
lods
lods
cmc
js
jg
jg
and
aaa
movs
cmp
and
inc
pusha
mov
xor
scas
mov
mov
xor
push
scas
or
inc
mov
test
mov
fdivr
test
jns
mov
mov
bound
fadd
(bad)
std
sub
adc
es
into
in
loope
inc
add
push
or
mov
scas
sub
int
xchg
(bad)
mov
mov
sbb
or
out
in
pop
stc
shl
mov
aaa
aad
mov
mov
aaa
push
dec
cdq
jge
test
mov
fcomp
ds
loop
int
je
cli
pop
js
ror
jnp
out
sahf
leave
jae
mov
repnz
lods
sbb
add
adc
or
jecxz
xchg
mov
pop
test
xchg
or
cmp
cmp
fwait
cmp
pop
lea
and
ss
pop
out
inc
(bad)
fbld
stos
push
push
dec
mov
and
pop
or
(bad)
neg
in
das
pop
xchg
ret
shl
ss
push
cmc
std
sub
in
mov
out
xor
cs
das
std
jae
outs
or
cmp
sbb
mov
icebp
cmp
leave
daa
ret
ret
ficom
movs
sub
(bad)
adc
or
mov
js
scas
push
es
cwde
iret
cs
cmp
or
and
add
cwde
jnp
push
inc
inc
enter
mov
xchg
cmc
shl
lods
cld
adc
ins
dec
fwait
jnp
repz
out
imul
fidivr
mov
add
dec
(bad)
cld
sub
loope
xchg
cmp
in
fsubr
pop
cs
push
jo
out
les
mov
jae
push
sbb
sbb
add
out
movs
(bad)
lahf
fsub
jle
jge
push
dec
enter
inc
cmp
pop
add
cld
fldenv
aad
jne
jb
xchg
jb
jl
js
cdq
mov
arpl
mov
je
adc
call
or
xchg
jnp
adc
adc
fwait
inc
jb
div
enter
pop
jns
loopne
les
addr16
mov
jae
pop
enter
xlat
push
sahf
mov
rcl
nop
xor
mov
lods
out
mov
inc
add
xchg
jmp
mov
xor
sbb
jne
call
jg
shl
xor
popf
xchg
test
test
cmp
(bad)
xadd
aas
jb
stc
mov
add
xchg
add
add
addr16
stc
pushf
fild
mov
jmp
in
pop
jnp
js
(bad)
into
xor
xchg
adc
lods
mov
and
xor
out
adc
and
clc
stc
push
fstp
xchg
inc
or
cdq
call
(bad)
inc
sub
int
clc
push
cmp
jae
mov
leave
fwait
repnz
pusha
mov
not
mov
stc
cmp
fwait
in
adc
pop
mov
enter
mov
cmp
sbb
neg
dec
mov
push
adc
dec
fwait
cli
dec
fidiv
ins
lock
push
int
cmp
sub
enter
mov
dec
jbe
stc
shl
cmp
cs
inc
mov
xchg
(bad)
push
test
jg
jnp
dec
movs
or
sbb
aad
fnsave
shl
sbb
call
sar
aaa
and
fidiv
rcl
fdivr
dec
(bad)
loopne
or
bound
sbb
loope
push
(bad)
adc
in
adc
(bad)
shr
repnz
xchg
xchg
loopne
pop
xor
add
dec
and
sub
xor
and
cld
shr
add
pop
stos
dec
pop
stc
dec
mov
jns
or
lock
push
xor
push
and
and
aam
ret
fnstsw
(bad)
and
and
mov
and
pop
das
jmp
cmc
stc
inc
and
push
jne
cmps
cmp
mov
pop
dec
add
ret
test
add
fcom
push
test
jo
out
bsr
cdq
cmp
dec
call
adc
je
or
or
lea
sub
movs
and
imul
ret
inc
fbstp
pop
les
push
test
or
jecxz
(bad)
fst
rol
enter
dec
daa
adc
rol
out
xlat
push
and
sub
inc
aas
ret
jae
mov
movs
cmp
cmp
mov
mov
or
mov
mov
data16
jp
mov
sub
sub
add
leave
inc
loopne
sahf
shl
jle
je
js
dec
inc
sub
and
pop
or
push
mov
addr16
stc
sbb
stc
arpl
sar
test
fidiv
imul
adc
pop
test
leave
mov
inc
mov
out
mov
mov
aad
mov
mov
(bad)
pop
ins
or
nop
mov
or
pop
ins
sar
pop
cld
in
xchg
push
call
(bad)
popa
pusha
cli
inc
push
(bad)
icebp
cmc
in
push
mov
mov
cmp
cmps
jmp
or
ins
js
leave
cli
cmp
retf
mov
jbe
aam
clc
stc
dec
and
out
cmp
dec
add
shl
add
ffree
cmp
push
call
jnp
imul
lods
mov
and
xchg
outs
push
xchg
rol
hlt
scas
lahf
lods
and
and
hlt
pop
call
fidiv
aad
js
or
pop
and
test
stos
xor
fs
push
dec
add
es
add
mov
jg
dec
mov
rcr
cmp
cmp
push
ins
push
dec
jns
jno
sub
outs
or
jle
(bad)
mov
inc
es
mov
adc
fwait
jb
or
js
das
inc
push
pushf
mov
fcmovnu
jecxz
cmp
sbb
xor
xchg
nop
outs
aad
sub
mov
xor
push
fcomp
imul
or
jbe
retf
data16
inc
jecxz
or
sahf
sub
push
aad
movs
nop
inc
(bad)
inc
ds
pop
pop
or
mov
sbb
es
arpl
jns
mov
repz
sub
(bad)
dec
and
js
addr16
outs
cmp
mov
fldenv
or
xor
cwde
or
shl
ins
pop
int
dec
rcl
cmp
xchg
test
jecxz
pop
out
jne
stos
pop
retf
xchg
cs
xchg
or
int
jns
sub
jne
pop
mov
in
repnz
cdq
mov
nop
test
adc
scas
les
sahf
push
js
es
aaa
push
pop
das
int
xlat
imul
icebp
mov
rcr
xlat
adc
loopne
retf
retf
dec
jmp
xchg
sub
(bad)
out
adc
mov
fisttp
mov
pop
test
mov
aas
mov
xlat
nop
push
ror
test
retf
cli
scas
arpl
pop
div
mov
sub
imul
sti
push
mov
xor
mov
cmp
out
pop
xchg
mov
(bad)
fstp
mov
xchg
neg
(bad)
rcr
clc
xchg
dec
out
mov
test
popf
push
aam
scas
mov
add
mov
mov
scas
dec
sbb
loop
cmp
push
ret
fistp
xchg
inc
in
mov
add
xor
or
and
std
push
loope
push
retf
(bad)
call
cmp
inc
int
xor
mov
(bad)
fucomp
pushf
outs
rcr
in
cmp
cmp
cmp
sbb
mov
je
add
mov
sub
fyl2x
push
jg
pop
mov
pop
int3
pop
scas
scas
leave
or
pop
ret
mov
stos
mov
mov
daa
ins
int3
sbb
sti
or
movs
cmp
iret
ror
push
push
mov
sar
not
mov
jae
jae
das
mov
inc
fwait
imul
jge
test
stos
ret
fxam
into
imul
js
mov
push
add
inc
dec
cmp
or
fwait
call
xor
pop
in
jmp
pop
inc
push
stos
pop
cmp
mov
scas
outs
sbb
pop
(bad)
data16
ins
ret
inc
fidiv
lods
and
add
fadd
scas
pop
push
movs
add
jne
adc
jmp
test
fcomp
push
sbb
dec
or
adc
cmc
jb
dec
cdq
sbb
std
aaa
mov
cmp
mov
icebp
or
and
ret
popa
push
aad
pop
loope
(bad)
dec
das
mov
xor
sub
movs
xor
int3
or
pop
addr16
and
in
into
and
aad
ror
inc
sbb
mov
jno
mov
fcmovu
out
imul
jns
aas
(bad)
out
in
mov
adc
jne
mov
(bad)
test
pop
(bad)
jns
cmp
into
les
inc
lahf
pop
sub
stos
pushf
xchg
daa
xchg
mov
fldenv
ror
xor
and
jl
ss
dec
data16
mov
bswap
dec
(bad)
adc
fs
fbld
xchg
shl
loop
inc
aam
cli
daa
cwde
sbb
cmp
xchg
pusha
jp
pop
in
push
sub
mov
ror
sub
jae
std
enter
jns
(bad)
push
(bad)
jo
sbb
xor
xchg
push
(bad)
inc
sub
adc
dec
mov
je
(bad)
cmp
add
(bad)
std
sub
je
in
or
movs
xchg
xchg
cmp
sub
cmp
cmps
scas
and
jnp
cli
or
mov
mov
fdiv
and
rol
test
mov
xchg
jae
add
mov
add
imul
cmp
jno
xchg
cs
fucomip
pop
mov
inc
xchg
mov
lock
gs
ss
mov
dec
lods
lea
scas
push
jnp
mov
aad
push
xchg
fsubr
push
and
xchg
and
sub
ret
cmp
mov
mov
jno
aaa
cmc
push
add
and
ficomp
stos
cld
mov
hlt
mov
jb
push
outs
sbb
mov
ror
sub
lock
pop
xlat
jg
adc
xor
cwde
fwait
outs
test
in
sub
bound
jmp
int
arpl
mov
xor
jb
jo
or
xchg
xchg
push
push
fidiv
jle
push
repnz
jns
jbe
movs
push
ins
pop
sbb
ds
xchg
push
or
cdq
lahf
push
scas
jmp
mov
xchg
mov
adc
and
ins
test
mov
pop
ret
ins
gs
rcr
ficom
std
addr16
idiv
or
sub
ror
cmp
pushf
sub
ret
jmp
push
cwde
pop
mov
mov
fist
push
mov
inc
pop
or
xchg
out
inc
push
push
fstp
fst
add
es
xchg
iret
xchg
mov
rcr
sub
cdq
scas
addr16
push
lock
push
adc
addr16
stos
sar
ins
and
inc
mov
mov
cmp
dec
in
cmp
push
test
add
scas
mov
push
jb
fucomip
cwde
aad
movs
movs
ret
int3
sbb
mov
xlat
int3
or
int3
sbb
(bad)
lahf
xchg
mov
data16
mov
mov
xchg
shl
shl
cmp
call
ins
inc
add
rcl
popf
imul
sub
add
cdq
call
pop
int
mov
imul
sbb
lds
inc
bound
clc
inc
clc
mov
push
inc
mov
lods
dec
xor
xor
cmp
pop
sbb
aad
sub
dec
lods
mov
cdq
ret
jmp
es
or
rcr
inc
iret
mov
mul
dec
aam
dec
stos
cmp
pusha
sub
mov
and
sub
in
sbb
(bad)
pop
lds
push
pop
mov
lds
fisttp
adc
enter
std
bound
retf
cmp
cmp
mov
retf
sti
push
jb
retf
xor
add
test
mov
lods
sub
ds
test
sbb
popa
xchg
rcr
pop
cmp
pop
sbb
pushf
data16
add
stos
and
das
sar
mov
inc
dec
repz
adc
dec
bound
mov
icebp
test
out
fsub
cmp
(bad)
adc
inc
sub
retf
xchg
scas
fbstp
xlat
dec
inc
cmp
mov
jle
jb
loop
es
dec
xor
ror
sti
jge
sbb
popf
sub
jno
je
mov
inc
inc
xor
data16
sbb
mov
iret
cmc
cmp
cmp
inc
leave
test
int3
add
lods
or
shl
(bad)
xchg
stos
adc
adc
jae
shl
push
outs
jns
mov
and
imul
ss
popf
cld
push
scas
pop
sub
sbb
or
sbb
push
aad
jno
cmp
jo
mov
cmp
mov
(bad)
dec
dec
xor
jmp
add
fidivr
sub
shr
enter
scas
adc
stos
and
mov
or
adc
sub
jae
retf
das
mov
mov
ins
add
stos
mov
pop
in
xor
in
rcr
loopne
daa
es
mov
in
fisub
add
push
mov
mov
pop
and
lock
lods
imul
test
adc
call
sbb
cmp
and
stos
inc
lock
jmp
mov
add
xchg
(bad)
sbb
cmp
fs
mov
xchg
call
ins
ja
push
add
dec
pop
xor
and
sti
sub
sahf
outs
mov
into
rol
in
mov
xchg
loop
cmc
lods
mov
and
cmp
lods
xor
jle
and
pop
(bad)
retf
cli
push
dec
dec
sbb
sub
leave
jecxz
imul
hlt
inc
or
or
xchg
cmp
(bad)
test
push
dec
gs
push
popa
xor
or
xlat
and
and
mov
adc
lahf
jns
adc
mov
jmp
cmp
js
xchg
dec
or
fdivr
xor
ins
add
clc
push
jo
or
jno
adc
adc
repz
das
mov
clc
mov
inc
dec
jno
fisttp
jge
mov
xor
lock
ss
sbb
ret
imul
sub
mov
fcomip
sub
fisub
mov
add
cmp
mov
addr16
add
jb
hlt
sub
jmp
and
dec
jb
jae
int3
addr16
mov
push
pop
xchg
xchg
push
shl
add
test
sbb
jmp
mov
mov
pop
or
adc
stos
mov
leave
or
mov
cmpps
(bad)
mov
sub
clc
push
int
mov
push
sbb
mov
stc
mov
movs
bndstx
or
xchg
sbb
in
mov
aas
xor
lahf
cmp
cdq
and
sbb
das
sahf
popa
aaa
(bad)
xlat
dec
cmp
or
mov
mov
sub
push
and
inc
pop
mov
ret
(bad)
inc
cld
jmp
ins
inc
sbb
call
pop
sbb
pusha
fisttp
in
pushf
outs
mov
pop
ret
leave
add
xchg
movs
outs
je
hlt
mov
iret
ja
cmp
int
js
xchg
stos
push
leave
add
and
aad
mov
test
xchg
push
rcr
test
xor
(bad)
in
jb
jae
outs
mov
popf
adc
and
pop
daa
in
push
pop
cmps
mov
bound
arpl
jecxz
lahf
cld
retf
mov
in
ret
jne
sti
ins
das
inc
jmp
jl
ret
stos
push
hlt
fwait
add
jmp
sbb
fwait
out
icebp
fimul
iret
mov
ds
int3
cmp
sub
scas
ins
fs
scas
pop
and
retf
cmp
out
aam
lahf
pop
push
jmp
push
je
ss
icebp
jl
mov
imul
sbb
sbb
adc
je
inc
clc
xchg
jns
repnz
xor
test
pop
jl
lods
add
sbb
adc
movs
ret
cdq
hlt
mov
pop
jno
xchg
or
add
lea
pop
pop
adc
push
cmp
xchg
cmp
shl
sbb
jp
adc
xchg
mov
outs
mov
dec
or
pop
test
and
jl
sub
sub
idiv
mov
js
popf
jl
aam
push
adc
push
or
sbb
in
lahf
ss
popa
inc
rol
jl
fisubr
std
inc
mov
data16
xchg
mov
test
jge
lock
mov
jp
call
mov
in
ins
in
cld
sbb
xchg
and
cmc
fistp
sub
arpl
inc
push
int3
add
loope
lock
sar
mov
mov
test
jmp
jns
ds
mov
dec
xchg
(bad)
push
pop
fisub
dec
imul
test
fwait
add
push
inc
cmps
adc
sar
inc
pop
sbb
les
pop
jo
mov
or
adc
sbb
fwait
mov
pop
loop
or
mov
sbb
cmp
jne
mov
lahf
mov
mov
sub
addr16
jns
push
in
sbb
xchg
pop
(bad)
cmps
adc
pop
les
dec
stos
out
or
or
mov
adc
addr16
sbb
pop
iret
cmp
xor
mov
jo
inc
mov
push
imul
inc
pushf
cmp
test
shl
div
retf
xor
add
xor
mov
fidiv
xchg
rcr
pop
inc
lds
test
(bad)
mov
pop
mov
pop
fstp
mov
cmps
mov
cmp
mov
jb
sahf
mov
or
dec
xchg
mov
std
test
retf
cmp
dec
int
psubq
push
mov
push
mov
sbb
xor
and
cdq
inc
out
xchg
fadd
fisubr
push
stos
ins
xchg
mov
pop
pop
sub
outs
enter
sbb
sub
shl
pop
add
fptan
fist
std
mov
fimul
mov
(bad)
in
jae
dec
adc
adc
or
outs
arpl
leave
aas
ss
sub
cmps
sbb
jbe
fmul
scas
mov
dec
jo
mov
stc
xchg
xor
adc
mov
imul
mov
pop
imul
test
repnz
ds
fild
add
sub
nop
adc
fimul
js
cmp
lods
mov
fisubr
aad
stos
cmc
call
inc
scas
xchg
cmp
pop
pop
xor
retf
imul
js
pop
mov
or
bound
iret
(bad)
repnz
or
push
pop
test
loope
jbe
inc
push
jecxz
xchg
aam
add
mov
jp
pusha
jae
into
add
add
imul
cwde
jecxz
mov
dec
test
imul
jle
lods
out
mov
jle
scas
jno
xchg
(bad)
fucomp
add
mov
pop
inc
test
jge
shr
cld
dec
adc
jae
cdq
gs
and
mov
ret
mov
(bad)
mov
in
push
stos
jns
xchg
add
ja
pusha
cmps
push
mov
shl
adc
enter
popf
sub
push
stc
imul
pushf
pop
in
es
sahf
mov
adc
(bad)
out
in
mov
pushf
out
inc
cmp
ss
mov
dec
stos
lock
in
aad
adc
loopne
cmc
cli
repz
or
scas
xor
iret
test
cli
mov
fild
mov
ja
sahf
pop
inc
mov
adc
leave
and
push
pop
aad
xchg
inc
(bad)
ds
push
sub
(bad)
out
push
outs
xor
xchg
pushf
inc
jg
xor
dec
jmp
push
pop
jmp
cmps
push
inc
mul
les
sbb
rcr
xchg
pusha
inc
jl
xchg
loop
jecxz
sub
sar
mov
sub
hlt
loope
pop
push
(bad)
cld
rcr
popa
sub
loopne
sub
out
(bad)
inc
dec
mov
sbb
into
aad
mov
gs
adc
imul
mov
shr
or
ds
fcomp
arpl
lock
and
test
test
add
out
shl
adc
cmp
sbb
push
sbb
in
cmp
inc
inc
test
mov
cmc
dec
in
jmp
stc
rol
loop
outs
xchg
sbb
fistp
mov
(bad)
dec
or
add
inc
ins
mov
mov
mov
test
ins
shr
fcmovne
push
jae
data16
rol
es
dec
ss
fcomi
loope
movs
fwait
mov
call
jle
mov
jmp
xlat
(bad)
sub
sub
icebp
sub
scas
push
sti
(bad)
test
fstp
xchg
es
popf
retf
sbb
push
mov
popf
and
adc
add
test
mov
fwait
pop
lds
out
mov
lock
std
jg
call
sbb
lock
xchg
sub
or
rol
ret
vpmaxsw
jl
and
jno
repnz
movs
pushf
into
lods
int
out
mov
(bad)
(bad)
ret
or
fild
adc
imul
int3
sub
sub
lahf
cmc
shl
add
mov
cmps
mov
out
jle
jmp
jnp
push
das
mov
mov
lea
(bad)
mov
hlt
pop
mov
pop
daa
xchg
mov
mov
mov
mov
pop
aaa
mov
xchg
mov
mov
pop
mov
xor
leave
push
jg
mov
int
int
or
jae
mov
xchg
inc
adc
arpl
xchg
xor
sbb
push
mov
int3
mov
add
jno
or
push
cmps
sub
jae
xchg
mov
or
adc
test
test
in
xchg
ins
mov
fsub
jecxz
test
dec
int3
sub
popf
(bad)
mov
cmps
adc
mov
enter
sbb
into
and
rol
adc
push
loope
call
idiv
push
out
pop
mov
push
cmp
add
mov
dec
fstp
arpl
ret
les
sub
cmps
jbe
jns
mov
aaa
sub
cmc
push
repz
xor
outs
mov
or
loop
fs
xchg
jbe
add
xor
inc
mov
xchg
sub
dec
mov
aam
shr
stos
and
repz
(bad)
xchg
xchg
lahf
in
push
and
fisub
lahf
pop
dec
adc
and
dec
pusha
and
add
inc
jl
call
jmp
pusha
xor
xor
sub
sub
mov
xchg
(bad)
call
retf
daa
scas
or
mov
pop
not
out
popf
sub
pop
loopne
jnp
cdq
stc
xor
js
dec
mov
xlat
pop
pop
inc
inc
mov
mov
cli
cmp
daa
and
ins
cmps
fdivr
xor
mov
lods
pop
mov
cmc
mov
add
sub
add
pusha
push
jno
mov
push
xchg
pop
(bad)
mov
and
push
mov
mov
in
cmp
daa
cmp
cmp
dec
js
in
xchg
fcmovnu
mov
iret
loop
sub
sub
fadd
jp
add
mov
repnz
lods
cmp
xor
or
inc
add
xor
popa
cmp
xlat
data16
jg
jno
cmc
dec
test
ins
jno
mov
arpl
lds
dec
retf
neg
pop
adc
jno
fild
xchg
pop
xchg
mov
push
dec
push
mov
pop
cmp
dec
int
jmp
das
push
fsubr
inc
cli
push
cwde
sbb
cmp
jmp
fdivr
sub
dec
jmp
cmc
jno
mov
jae
push
call
mov
cmp
push
movs
mov
das
es
cmp
les
xor
popf
inc
sahf
pop
cmp
pop
fadd
in
loop
sub
push
dec
fcmove
test
pop
sub
inc
movs
mov
clc
sbb
sti
int3
and
sub
das
in
(bad)
mov
fcomp
adc
rcl
xchg
cli
mov
pop
lock
inc
pop
xlat
xor
and
(bad)
pop
sahf
inc
popa
or
inc
nop
adc
stos
adc
jno
int
ret
cmp
xor
sub
mov
sub
int3
mov
cmc
movs
mov
pop
or
push
test
inc
ret
ror
lahf
xor
pop
or
imul
xor
mov
aas
adc
(bad)
cmp
xchg
xchg
in
shr
(bad)
test
or
int
mov
sub
retf
cs
mov
xor
in
in
test
rol
mov
push
xchg
test
push
loopne
rcr
jmp
test
loopne
inc
add
push
clc
or
aad
repnz
ret
cwde
push
push
sub
jmp
aas
iret
dec
cs
adc
std
mov
mov
ret
xchg
xor
jmp
jo
cmp
int
mov
lahf
mov
mov
pop
sub
in
add
pop
push
cmp
xchg
pop
(bad)
jo
and
xchg
sub
adc
inc
add
(bad)
xor
pop
jecxz
push
imul
jb
add
push
add
and
and
push
and
and
test
shl
and
clc
sbb
dec
ds
cmc
pop
mov
cs
pop
into
pop
xchg
cmp
sar
mov
add
mov
shr
fdivr
push
pop
adc
push
test
outs
sbb
std
cmp
test
push
in
jne
mov
xchg
popa
(bad)
imul
ror
lahf
sbb
and
mov
inc
pop
jmp
sub
or
push
fstp
movs
xlat
xchg
and
or
(bad)
mov
xor
push
xchg
mov
adc
enter
mov
stc
mov
das
push
xchg
fcmovnb
sar
inc
add
sub
repz
mov
retf
or
ins
pop
mov
stc
push
outs
cli
enter
mov
(bad)
dec
out
sub
ror
xor
les
out
in
mov
xchg
xor
mov
cld
xor
out
inc
sub
dec
mov
add
hlt
sar
inc
xchg
nop
(bad)
push
adc
ja
jge
pushf
cli
jno
mov
(bad)
jb
jmp
sbb
imul
xor
lods
fwait
dec
or
(bad)
mov
dec
sub
add
xchg
jnp
xor
jbe
add
mov
inc
add
adc
std
pop
cmp
xchg
and
and
sub
imul
or
mov
pop
adc
cmp
adc
mov
daa
fadd
out
push
jb
or
sti
mov
jno
mov
add
push
hlt
rcl
xor
aad
cld
rcr
mov
add
jns
fidiv
enter
into
fs
adc
cmps
push
cmps
movs
jns
out
std
inc
ds
sbb
push
repnz
mov
xchg
xchg
mov
and
out
ret
(bad)
lds
xor
shr
push
mov
ss
fcmovnb
dec
sbb
xor
xor
fmulp
movs
fmul
jne
fs
(bad)
cs
jae
and
aam
jle
shl
jp
shl
les
or
scas
mov
retf
mov
out
cs
imul
dec
mov
imul
cld
jne
fcmovnu
jecxz
mov
lahf
scas
scas
pop
lods
pusha
test
fs
icebp
cmp
mov
sub
jnp
out
xchg
(bad)
xchg
aam
push
aad
mov
lods
sub
cmp
mov
or
je
adc
xor
(bad)
push
(bad)
mov
jb
je
jns
inc
mov
loop
or
imul
aam
or
and
pop
scas
lfs
call
fmul
and
pop
push
scas
jmp
xor
xor
retf
mov
dec
and
xchg
mov
loop
(bad)
mov
pop
outs
xor
xchg
sti
mov
or
pop
enter
xchg
or
jne
int
xor
xchg
xchg
push
or
test
fs
imul
mov
inc
(bad)
movs
adc
cmp
stc
imul
jge
jne
sub
xchg
out
cmp
jp
popf
mov
jmp
jle
(bad)
xor
int
jno
jmp
or
outs
(bad)
std
adc
nop
jno
xchg
push
jb
pop
add
dec
pop
lods
xchg
cmc
cdq
push
je
and
pop
div
xor
fild
mov
jmp
rcl
cmps
dec
lds
cs
push
jmp
test
mov
dec
push
fisttp
fst
fisttp
outs
jmp
mov
xchg
add
ror
jb
sbb
ret
loopne
jmp
sar
pop
mov
mov
imul
js
inc
sub
int
shl
cmps
out
loope
popf
repnz
inc
not
je
cmp
jno
cmp
sbb
es
sbb
lea
inc
pusha
adc
imul
neg
cmps
shr
xchg
test
cmc
std
shr
jno
push
cmp
loope
stos
pop
retf
daa
cmp
xor
mov
into
and
in
xor
push
dec
fild
repz
sbb
inc
pop
add
pushf
push
dec
ins
sar
and
in
fisttp
mov
sti
outs
mov
(bad)
aas
cmp
adc
mov
daa
mov
dec
inc
adc
add
movs
imul
pop
(bad)
jge
stos
sti
jne
mov
cmps
inc
movs
push
jo
stc
push
push
adc
mov
inc
adc
mov
pop
retf
lock
inc
cmp
push
and
rcr
mov
jns
jae
push
rcr
push
pop
xchg
loopne
mul
sahf
bound
mov
fnsave
cmp
fild
cmc
dec
jnp
add
xor
pop
jae
rep
(bad)
push
icebp
shl
sub
loope
jl
ins
iret
in
ret
clc
in
movs
mov
inc
dec
inc
mov
cmp
mov
inc
jp
inc
jmp
and
lea
sbb
fcom
fldcw
sub
dec
xchg
xchg
int3
cmp
pop
xchg
add
retf
mov
xchg
push
adc
cmc
sub
adc
stos
(bad)
test
dec
(bad)
pushf
jmp
test
fild
sbb
stos
sahf
pop
dec
movs
fiadd
test
gs
retf
sar
and
shl
out
mov
adc
and
cmp
xchg
into
or
cli
ja
test
scas
pop
mov
fild
jnp
call
cmp
test
xor
aaa
je
mov
sub
cs
xor
jnp
mov
aaa
or
push
and
jbe
cmp
fist
mov
hlt
jge
nop
enterw
ror
xchg
jnp
(bad)
jg
mov
or
imul
mov
xor
mov
dec
fidiv
cdq
mov
aad
cmp
pop
push
add
cmp
cmp
jmp
adc
or
jae
mov
mov
xor
mov
scas
test
fistp
fisttp
mov
js
push
mov
mov
cld
sbb
cmp
cld
add
ror
or
rol
dec
je
ja
inc
add
ss
inc
cmp
outs
pop
push
je
sbb
jg
imul
fwait
jmp
mov
arpl
jo
mov
xchg
jmp
or
fist
push
or
ins
adc
push
jmp
ins
imul
push
sub
sub
push
add
icebp
sub
jg
jne
xor
push
sbb
test
cdq
mov
aas
fcom
inc
cmp
or
outs
cmps
js
dec
(bad)
out
jp
bound
mov
movs
sub
cmp
pop
xlat
or
jg
xor
ret
mov
mov
lods
mov
add
movs
mov
cmp
ret
cmp
sbb
clc
lock
jp
aad
and
lods
pop
mov
out
cmp
stc
push
xchg
adc
pcmpeqw
addr16
mov
out
jle
sub
mov
or
loopne
cmp
ror
xchg
ja
mov
popf
push
ins
xchg
gs
cmp
push
movs
jne
shl
inc
mov
dec
ficomp
add
ret
xor
in
inc
sub
and
mov
test
inc
(bad)
xor
lahf
pop
out
adc
popf
sub
fist
outs
jns
add
(bad)
mov
popa
daa
data16
dec
push
xor
shl
imul
les
and
inc
mov
mov
sbb
pop
dec
add
jno
dec
fwait
jo
and
mov
push
fwait
sahf
adc
sahf
outs
mov
icebp
int
jge
movs
sbb
push
add
push
or
jno
mov
xchg
rep
cmc
int
sub
lock
pushf
arpl
xor
adc
lock
inc
and
fstp
dec
mov
shl
push
popa
lods
jnp
add
sbb
xchg
dec
mov
test
xchg
or
sbb
es
into
arpl
popf
mov
pushf
ins
inc
mov
sub
add
mov
fadd
outs
mov
mov
dec
xor
push
cmp
daa
stc
mov
aad
pop
arpl
mov
mov
push
je
add
rcl
pop
or
mov
and
gs
test
push
inc
xor
jmp
ss
test
cwde
inc
jle
add
outs
fisubr
cmc
pushf
scas
int3
daa
xchg
aas
and
pop
dec
icebp
push
jnp
dec
xchg
enter
(bad)
ins
mov
jno
daa
pop
movs
ins
ins
scas
or
jns
es
cmps
add
retf
xchg
shl
inc
ja
sub
inc
imul
jl
jbe
js
stos
or
repnz
mov
or
int3
scas
pop
push
cs
mov
sub
push
mov
pop
stos
inc
add
sub
dec
mov
lods
jb
imul
xchg
iret
fstp
sub
xchg
jae
xlat
adc
movs
loop
aam
cmp
dec
out
popf
xor
cmc
leave
pop
sahf
(bad)
adc
daa
push
add
bound
ins
in
movs
xchg
mov
stc
mov
les
stos
jb
ret
dec
adc
sbb
call
cdq
rcr
hlt
addr16
sub
es
add
add
and
jecxz
repnz
std
cdq
mov
push
and
sbb
inc
pop
icebp
mov
cmp
ds
mov
dec
xchg
mov
xchg
mov
sub
pop
inc
test
cmp
mov
cmp
es
(bad)
loope
stc
push
sub
scas
jmpw
sbb
sub
pop
lea
xchg
mov
xchg
xor
es
or
xchg
jle
add
ins
pop
jp
out
jge
push
xor
lahf
push
and
or
repnz
jne
push
mov
pop
in
hlt
jae
or
(bad)
imul
in
lea
adc
ins
mov
cld
(bad)
stc
lock
ds
test
jns
dec
mov
data16
cmps
into
pop
sub
pop
dec
stos
ret
int
sub
mov
inc
push
movs
dec
mov
out
in
mov
cmp
mov
xchg
adc
cdq
jmp
jle
rcr
push
test
ror
push
adc
adc
clc
push
neg
hlt
dec
fcmovne
xchg
aam
arpl
xor
je
push
mov
test
xchg
cmps
gs
push
mov
stos
(bad)
sbb
adc
push
inc
adc
xchg
xchg
jb
out
pop
sbb
xchg
adc
inc
enter
cmps
enter
sbb
push
stos
cli
or
cwde
dec
int3
cmps
pop
adc
mov
lahf
push
or
shr
mov
mov
sub
sub
sahf
cwde
out
pop
call
jecxz
mov
inc
aaa
fisttp
jb
loop
xchg
adc
mov
aas
sub
adc
mov
aad
lock
pushf
nop
in
or
(bad)
addr16
fs
out
shl
cld
nop
vmovntpd
cmp
push
pop
(bad)
cmp
int
mov
sub
and
dec
cdq
jne
leave
sub
ins
sar
sub
xchg
adc
(bad)
sahf
ins
mov
ds
xchg
fiadd
mov
movs
call
cmp
call
sbb
pop
sar
mov
add
outs
push
int3
ins
mov
dec
test
push
ficomp
in
inc
outs
mov
daa
mov
in
pop
cmp
and
sbb
je
retf
lods
jp
cmp
or
test
jp
sbb
mov
loopne
adc
cdq
jecxz
mov
push
sub
mov
jbe
adc
pop
jg
or
jle
test
jmp
mov
mov
dec
loop
repz
push
imul
jbe
jbe
pop
mov
test
hlt
pusha
in
in
fldenv
cli
pop
fnstsw
imul
pushf
fs
in
imul
mov
(bad)
mov
xchg
dec
sbb
in
cmps
mov
dec
scas
adc
das
adc
ja
mov
jge
inc
mov
xlat
mov
ins
outs
icebp
jmp
pop
fdivr
(bad)
retf
and
adc
add
adc
mov
mov
cmps
adc
rcl
fiadd
fdivr
dec
shl
dec
push
mov
adc
jmp
mov
lods
xchg
adc
sub
fs
sbb
ja
or
inc
test
jae
fisttp
xchg
mov
add
jmp
and
clc
stos
pusha
and
ins
leave
(bad)
fsub
mov
scas
mov
inc
cmp
mov
fcom
rol
imul
dec
popa
aam
shl
scas
loop
jae
adc
aam
xor
outs
adc
jmp
(bad)
shr
pop
and
outs
jbe
call
or
adc
cmps
sti
aaa
mov
stos
lods
dec
xor
inc
fcmovne
mov
xchg
push
test
mov
or
sbb
jge
repz
popf
pop
pop
imul
pop
mov
mov
fstp
jl
push
inc
xchg
je
dec
or
loopne
adc
push
cmps
fild
xor
icebp
xor
mov
std
cmp
out
push
mul
dec
mov
mov
inc
ins
jmp
add
fimul
cmps
fmul
adc
push
loopne
ror
xor
sub
rcl
les
cmp
scas
push
(bad)
adc
jno
int3
rcl
addr16
inc
(bad)
std
inc
cli
or
push
movs
iret
push
sbb
test
push
xor
sub
sbb
in
xchg
inc
xchg
pop
adc
adc
clc
push
fsub
mov
fs
or
adc
retf
mov
pushf
out
frstor
leave
ja
loope
into
int3
cmp
fstp
rcl
out
in
sbb
add
adc
lahf
cmc
or
mov
push
loope
mul
icebp
xchg
jb
das
ja
pop
repz
pop
pavgb
call
cmp
lods
jecxz
add
imul
aam
ret
mov
fiadd
aas
adc
and
add
call
imul
cs
in
movs
in
ja
pusha
xor
cmc
loop
and
jnp
xchg
pop
cld
mov
lods
adc
jo
jnp
ret
popf
push
jle
dec
and
inc
inc
jb
mov
call
mov
lea
test
pop
pop
bswap
imul
out
pop
cdq
push
mov
sahf
cld
(bad)
sti
imul
mov
inc
pop
sar
aaa
sti
stos
in
cmp
sar
xlat
fisub
jle
or
dec
fsubr
stc
push
push
or
outs
xchg
outs
xor
cmps
fs
cdq
test
or
inc
fsubr
or
sar
sbb
add
mov
cld
or
shl
ins
mov
cdq
add
xchg
jmp
add
add
and
pop
mov
inc
cli
cmp
rcr
jmp
(bad)
outs
mov
push
inc
hlt
xor
pop
mov
xchg
cmp
sub
daa
stos
inc
fst
pop
stos
pop
mov
mov
xor
push
inc
or
cwde
or
sub
hlt
(bad)
mov
stc
cmp
loope
pop
adc
pop
out
daa
(bad)
jnp
push
push
mov
xor
xchg
or
sub
pop
sub
das
jno
mov
inc
pop
push
out
jno
(bad)
and
stos
clc
iret
mov
ror
out
movs
outs
pop
les
and
adc
lds
lds
(bad)
repnz
test
cld
and
dec
in
adc
ret
adc
dec
mov
adc
cwde
push
(bad)
sub
push
cmp
mov
jmp
xor
xchg
cmps
mul
call
aad
sub
dec
movs
nop
fmul
dec
rol
icebp
xchg
push
mov
or
sbb
inc
jo
mov
ins
or
out
inc
cwde
loope
call
xchg
int3
xlat
xchg
mov
lods
out
dec
aas
sbb
nop
ds
clc
dec
mov
xor
lods
cmp
add
fcomp
das
clc
popf
mov
mov
mov
push
jmp
sbb
stos
leave
dec
test
mov
mov
sar
mov
aas
outs
enter
enter
xor
and
mov
js
mov
packssdw
mov
popf
mov
pop
jnp
ss
jp
sbb
cld
jg
sbb
les
jl
cmovbe
xchg
jmp
lock
push
or
or
pop
js
jp
movs
js
lock
fsubp
loopne
pusha
addr16
aaa
fidiv
sar
mov
or
jb
arpl
lock
push
mov
stc
les
popa
jo
or
out
push
mov
in
push
pop
cli
cmc
stc
xor
aad
mov
(bad)
mov
sub
sti
outs
repnz
mov
std
into
adc
rcr
cmp
lods
cdq
push
out
jns
cmp
repz
out
and
jne
bound
mov
shr
lock
xor
dec
in
clc
push
push
sti
cli
pop
in
pop
inc
jmp
pop
xchg
test
clc
scas
mov
stc
out
in
mov
xchg
jle
dec
or
fidivr
cmp
push
cdq
mov
loope
fld
rcl
cli
and
in
mov
imul
inc
sbb
adc
xchg
arpl
cli
and
xchg
test
aaa
shr
mov
dec
movs
loopne
mov
popf
inc
pop
mov
hlt
cmp
or
das
(bad)
jbe
daa
fldcw
adc
scas
fwait
xchg
loopne
pop
mov
leave
cmp
int3
fdiv
push
cmc
dec
sbb
ss
cmps
dec
loope
mov
shl
xchg
sbb
out
pusha
lahf
daa
jg
add
jg
cli
outs
mov
addr16
ins
jnp
test
or
ret
outs
clc
sub
iret
xchg
inc
test
lods
lahf
test
mov
movs
sbb
push
mov
stos
aam
fcomip
or
test
cld
pusha
int
mov
fcom
(bad)
pusha
sbb
shr
jecxz
push
mov
iret
fwait
push
inc
jmp
pop
dec
add
test
xchg
dec
and
mov
leave
cwde
stos
xor
out
jmp
test
aas
mov
adc
jmp
stos
test
and
jnp
sti
add
cdq
cld
dec
sub
jmp
das
aad
inc
in
or
repnz
jo
xchg
jecxz
outs
lahf
sub
pop
adc
cld
jecxz
push
and
cmps
jns
cmp
jmp
mov
mul
inc
sar
adc
jne
mov
add
aaa
bound
stos
add
cmp
xchg
push
shl
pop
or
ss
nop
movs
lods
btr
stos
retf
mov
cmp
sub
mov
mov
test
outs
dec
xchg
mov
xchg
cmc
mov
fisttp
sahf
ror
dec
push
rol
pop
int
daa
pop
xor
mov
pusha
inc
ss
sub
mul
pop
and
inc
sahf
out
shr
pop
lods
jae
adc
jo
aas
fst
sbb
gs
sub
cwde
mov
mov
pop
cmp
adc
cwde
stos
fsub
jmp
(bad)
cmp
leave
(bad)
mov
or
dec
fcomp
mov
imul
std
sbb
int
test
inc
and
and
jmp
test
and
stos
les
mov
mov
jne
mov
sbb
and
sbb
jno
jnp
dec
scas
rcl
jge
jo
test
jmp
ins
stc
fmul
cli
add
adc
sbb
sbb
cmp
call
mov
pop
xor
or
or
outs
add
bswap
jbe
lods
and
xor
daa
cmps
xchg
mov
jns
popa
sub
test
cld
jp
shr
data16
pop
inc
in
sub
or
jbe
fstp
(bad)
outs
xor
(bad)
mov
mov
push
cmp
scas
mov
jl
or
pop
ss
les
rol
fwait
add
arpl
mov
das
(bad)
call
jnp
and
mov
neg
jp
sbb
cwde
or
iret
out
jl
adc
cs
cmp
out
adc
jl
dec
push
outs
push
add
xchg
js
in
or
das
push
ficom
das
out
sbb
(bad)
je
jmp
leave
aam
jo
fsub
fcmove
and
sub
pop
in
xor
dec
push
jbe
sub
jmp
xchg
xor
cmp
sbb
fnstcw
icebp
push
leave
sub
in
xchg
xor
inc
xor
pop
adc
dec
ficom
pop
inc
pop
std
adc
rcr
cmc
jne
addr16
in
adc
pop
retf
cmps
je
retf
in
dec
inc
stc
cmp
mov
int
pop
sub
inc
dec
mov
sub
jmp
push
int3
push
repz
scas
pop
stc
lods
iret
retf
sbb
cmps
jnp
test
and
mov
inc
call
xor
jnp
mov
add
mov
sub
shr
mov
jae
cmp
lods
sbb
mov
ret
outs
cmps
pop
jnp
(bad)
sti
aam
jne
and
mov
jns
push
jp
retf
test
fs
cs
jno
mov
push
cmps
push
in
and
ja
fnstsw
fist
pop
pushf
mov
mov
mov
cmp
out
push
test
and
bound
fcom
std
pop
fcmovbe
mov
pop
jp
xchg
pop
pop
xor
ss
pop
inc
and
ret
(bad)
mov
dec
push
mov
sbb
and
test
or
and
and
lods
push
pop
inc
loopne
cmp
push
push
and
into
adc
ret
das
adc
mov
cmp
pop
xchg
jmp
repnz
out
add
arpl
in
fwait
aaa
jbe
sub
xor
fist
pushf
outs
mov
push
rcr
loope
push
push
loop
arpl
pushf
stc
es
jns
dec
imul
inc
bound
leave
pop
scas
outs
outs
jo
mov
lock
mov
pcmpeqw
les
call
fistp
xor
in
mov
xchg
aaa
push
int3
sub
(bad)
mov
xchg
out
shl
jnp
mov
stos
or
xor
outs
inc
push
fstp
lahf
cld
inc
jle
mov
cmp
jg
jp
fisttp
dec
clc
inc
sar
xor
jg
xchg
and
push
cmp
ins
sti
sub
lds
and
push
mov
imul
dec
cmp
adc
xchg
in
rcl
(bad)
cli
out
ja
mov
push
movs
movs
imul
xor
cmp
jne
and
jo
mov
pop
sbb
jae
inc
ins
(bad)
out
mov
mov
or
test
jmp
pop
das
sub
aas
mul
ror
and
in
data16
lods
ret
mov
cmps
or
mov
inc
mov
cs
mov
aad
jp
jns
mov
pop
enter
scas
nop
gs
addr16
dec
adc
cmc
mov
(bad)
sbb
dec
adc
ds
mov
leave
sbb
aam
sbb
icebp
(bad)
mov
mov
cmp
or
pop
mov
lahf
mov
aam
jle
mov
iret
jae
sbb
iret
shr
jns
or
loopne
dec
mov
imul
in
sub
movs
scas
xchg
cmp
xchg
test
sub
or
ror
mov
imul
div
mov
adc
mov
push
pop
jmp
in
in
cmps
ja
xchg
pushf
icebp
call
xlat
jae
mov
sub
jae
xchg
scas
loop
enter
das
xchg
xor
jno
jle
rol
inc
mov
les
cmps
mov
lods
mov
xchg
jae
add
sub
dec
sub
push
jl
jp
jb
stos
leave
leave
sub
dec
mov
int3
(bad)
jmp
fisubr
jmp
cmps
movs
lock
xchg
adc
lock
add
pop
sub
sub
sahf
jne
daa
adc
and
pop
in
out
and
add
sub
jecxz
mov
adc
fnstcw
iret
mov
ins
popf
jg
pop
inc
(bad)
imul
(bad)
in
dec
fmul
and
jg
add
(bad)
mov
jmp
ret
cmp
fisub
and
fnstcw
cmps
pop
cmp
dec
jecxz
add
aas
clc
xor
mov
scas
ja
pop
xor
sbb
test
adc
jmp
mov
push
in
xchg
sbb
scas
lds
adc
adc
cmp
ret
push
jp
or
imul
mov
stc
cdq
mov
cs
aaa
out
enter
push
add
mov
xor
sar
out
movs
mov
pop
mov
(bad)
jp
cli
inc
leave
call
fld
fcmovnu
fidivr
push
jo
or
adc
pop
aaa
std
enter
imul
fwait
pop
push
lods
retf
jg
pop
shl
adc
pop
mov
mov
mov
inc
or
mov
jnp
pop
mov
xor
repz
dec
cmps
call
sub
repz
cs
ja
and
mov
aaa
mov
iret
cmp
stos
sbb
jg
clc
fwait
xor
mov
int
jl
xor
push
test
xchg
cmp
cmps
sub
or
pop
ret
movs
push
retf
adc
pop
inc
repz
dec
add
hlt
mov
cmp
stos
pop
rcr
mov
lods
or
scas
mov
sbb
fcmovu
pop
jns
adc
cmp
push
fnstcw
js
dec
cmp
pop
je
adc
push
xor
rcr
add
xchg
sub
ss
dec
out
sub
out
cmp
jecxz
data16
pop
or
add
test
aaa
pop
call
pop
shl
sbb
xor
adc
je
outs
jg
(bad)
ret
and
fnstcw
mov
cld
iret
int3
mov
sub
fst
jb
dec
int
mov
int
lock
scas
icebp
ss
bound
leave
es
shl
sub
mov
or
jmp
jne
xor
cld
retf
mov
sbb
pop
retf
cmp
adc
lahf
lods
mov
in
test
(bad)
test
out
cmp
and
xchg
(bad)
sbb
call
sbb
and
int
aas
sbb
loope
mov
cmp
imul
fstp
inc
add
pop
(bad)
ja
cwde
jns
cmc
jnp
sub
cli
lods
pop
lahf
retf
mov
and
jmp
adc
push
mov
push
or
mov
mov
enter
sub
rcr
int
popf
xlat
mov
int
in
jne
(bad)
in
je
adc
adc
pop
inc
lods
cmp
in
sub
sahf
call
cmp
jae
rcl
imul
dec
fsub
ins
loop
mov
xor
adc
retf
dec
xor
add
shr
mov
mov
aam
and
call
ja
mov
or
shr
imul
int3
sar
sub
inc
or
xchg
pop
stc
mov
clc
aam
jl
pop
pop
(bad)
ja
out
clc
add
sub
mov
fistp
data16
clc
cmp
clc
mov
leave
movs
in
retf
push
popf
mov
call
adc
movs
dec
inc
mov
jae
lock
cli
retf
ins
in
inc
inc
inc
mov
pop
xor
repnz
popf
dec
lods
icebp
shl
cmps
outs
jge
enter
sub
das
retf
lods
pop
mov
mov
ja
mov
mov
mov
push
rcl
xchg
stc
xchg
fcomip
jnp
stc
sub
mov
aaa
inc
loopne
cmp
mov
xchg
mov
fsub
sub
add
outs
out
push
adc
or
icebp
inc
les
hlt
retf
out
xor
repnz
and
popa
jne
xor
push
(bad)
xor
ds
sahf
aad
sub
pusha
cli
adc
ret
mov
dec
xor
sub
movs
inc
sub
mov
(bad)
add
inc
lea
lea
mov
mov
jle
push
dec
pop
neg
js
xor
dec
pop
je
out
in
cwde
movs
cmps
mov
bound
movs
jle
ret
add
shr
or
out
xlat
popf
and
(bad)
mov
in
bound
les
cmp
inc
mov
stos
sub
pop
xchg
xor
das
and
movs
cs
jecxz
sbb
nop
ins
dec
push
das
push
ds
cmp
in
test
xchg
sub
aad
fsubr
daa
xor
dec
or
sub
dec
mov
sub
xchg
outs
gs
stos
add
fldenv
mov
mov
out
mov
shr
push
sbb
jb
addr16
and
pop
in
cld
dec
jnp
into
out
cld
retf
(bad)
shl
mov
pop
push
jl
adc
cmp
stos
push
and
jmp
sahf
adc
mov
jcxz
cs
sti
ret
int
mov
outs
jnp
and
arpl
dec
mov
mov
inc
(bad)
fst
xchg
scas
mov
outs
mov
push
cli
repnz
pushf
push
xor
retf
(bad)
(bad)
fdivr
and
jge
(bad)
aad
xor
stos
mov
jmp
xor
dec
fstp
mov
(bad)
xor
dec
add
cmp
les
dec
test
pop
scas
shl
push
lea
popa
cdq
mov
adc
cmps
adc
out
into
stc
movs
xor
adc
adc
js
imul
cmp
cld
ss
jge
popf
pop
dec
mov
outs
rcr
retf
pop
in
ds
loop
and
mov
sub
mov
lock
out
pop
(bad)
aam
popa
arpl
fisub
or
sub
mov
mov
test
push
mov
test
dec
mov
ins
or
addr16
sbb
retf
shl
add
sbb
test
mov
outs
ficom
addr16
push
sbb
rol
out
sub
cmp
adc
mov
mov
xchg
(bad)
sbb
loope
push
sbb
aas
xchg
mov
xlat
popa
adc
cmc
das
jae
cmp
dec
mov
int3
jo
iret
xchg
xor
sub
mov
bound
mov
sub
aas
mul
or
loop
xor
les
add
bnd
std
push
fwait
adc
mov
or
ja
ja
mov
lahf
cmps
dec
out
jge
lahf
adc
test
sbb
pop
fisub
ror
mov
mov
out
das
pop
sub
push
scas
in
push
pop
xlat
mov
pop
adc
stc
push
dec
test
test
sub
shl
cld
add
cmp
jle
adc
(bad)
outs
sbb
clc
adc
loop
call
js
fs
fst
inc
lods
xchg
stc
ror
sub
inc
sub
xchg
xchg
js
dec
xchg
movs
loop
pop
out
ficom
pop
rcl
jb
mov
jns
into
ror
addr16
into
mov
sub
pop
jb
adc
in
dec
push
call
fwait
out
push
add
ror
add
inc
inc
das
cmp
adc
bound
lods
clc
ins
sahf
mov
mov
imul
gs
push
push
daa
push
mov
arpl
inc
lock
mov
dec
jno
push
add
push
xchg
out
add
ret
hlt
shl
cmp
loop
frstor
and
cmc
hlt
jb
movs
(bad)
fdivr
js
call
sti
xor
les
xchg
aad
ins
cmps
push
(bad)
dec
or
in
icebp
scas
dec
mov
into
and
(bad)
sbb
sub
mov
arpl
sub
mov
out
mul
pushf
sbb
add
leave
push
cmc
mov
inc
loope
inc
ss
add
mov
push
popa
pop
xor
dec
xor
sub
mov
test
retf
xchg
out
fstp
fxam
cdq
sub
jl
push
adc
add
imul
lods
cli
mov
in
inc
stos
out
push
mov
les
dec
sar
dec
je
adc
jle
jb
icebp
or
ret
and
test
cmp
pop
cmp
shl
fldenv
or
fmul
or
mov
xor
and
xchg
xlat
mov
retf
movs
mov
in
call
dec
stc
(bad)
fsubr
push
data16
sbb
jmp
mov
jecxz
sub
ficomp
mov
pop
fisttp
out
pop
hlt
retf
jno
xlat
sub
push
daa
sbb
xor
je
ins
sahf
pushf
sahf
loope
fcmovu
dec
and
push
inc
mov
test
retf
jmp
cs
mov
shl
loope
sub
loope
lods
(bad)
pop
adc
jno
push
dec
inc
mov
pop
dec
cmp
push
lods
mov
and
xchg
pop
fisttp
cmp
pop
jg
cmp
mov
dec
(bad)
mov
cmp
inc
fwait
jp
retf
dec
or
(bad)
into
dec
pop
push
adc
mov
sub
daa
push
pop
aad
or
loop
shl
jle
adc
(bad)
adc
xor
add
jle
push
hlt
fst
mov
add
xchg
jmp
fdiv
pop
mov
rcr
(bad)
xor
leave
arpl
push
or
iret
sub
jmp
call
xor
fs
jle
mov
sub
push
out
jmp
inc
dec
lods
and
add
(bad)
push
daa
xchg
inc
cmp
mov
jle
or
or
cmc
lahf
leave
icebp
stos
test
ror
cmp
or
std
hlt
mov
cmp
ds
mov
and
out
add
cs
(bad)
push
fisub
ret
movs
mov
scas
xchg
repz
mov
sar
fist
jmp
cmp
sar
(bad)
call
xor
pop
jb
xor
sub
ds
inc
addr16
push
fs
fisttp
fsubr
inc
pop
nop
xor
movs
mov
push
pop
inc
movs
and
pop
mov
mov
mov
inc
push
rol
addr16
pop
push
inc
push
inc
or
sub
fwait
mov
jmp
and
loop
cmp
pop
push
inc
in
inc
mov
push
dec
pop
and
adc
mov
test
mov
jmp
mov
adc
pop
ins
mov
call
addr16
test
mov
clc
lock
mov
inc
mov
push
push
je
mov
xor
sub
push
mov
mov
mov
pop
inc
inc
stos
(bad)
stos
je
cmp
daa
aas
jecxz
bound
repz
jae
sbb
pushf
in
outs
(bad)
fisttp
dec
sahf
bound
jae
cmp
dec
int
retf
fadd
add
hlt
sub
sbb
pop
bound
scas
sub
scas
pop
js
lods
jo
loope
addr16
inc
pop
and
(bad)
call
or
out
daa
xor
lods
popf
cmp
call
fnsave
(bad)
lods
loopne
aad
psrad
push
dec
loope
cmp
add
pop
je
scas
mov
sti
inc
lods
push
sub
int3
test
adc
loop
sub
jnp
mov
push
out
xchg
daa
(bad)
sti
das
cmp
sbb
sbb
or
push
push
mov
xor
jae
rcr
mov
or
jae
or
adc
bound
movaps
jle
cmp
repnz
lock
or
int3
sub
lods
cmp
cwde
xchg
inc
test
ins
mov
in
es
sub
bound
cld
pop
aas
add
ret
xor
push
dec
dec
out
rcl
aam
pop
(bad)
dec
repnz
sar
fbld
(bad)
adc
in
loope
push
mov
(bad)
jl
mov
mov
jle
push
std
out
mov
cs
mov
xor
xchg
and
daa
and
xor
mov
outs
push
(bad)
ins
cmp
popf
push
jmp
pop
sbb
imul
add
cmps
mov
pop
add
inc
push
retf
ss
daa
int3
fldcw
cs
call
dec
(bad)
cs
xor
dec
and
sbb
scas
xchg
out
test
fstp
lods
fsubrp
cmp
ins
add
sbb
pop
cmp
push
mov
xchg
mov
pop
inc
aas
or
mov
retf
dec
repz
jp
jge
xchg
pop
xchg
shl
(bad)
pop
fwait
inc
xor
ds
ja
iret
iret
scas
jb
outs
retf
and
hlt
sti
in
add
mov
xchg
xchg
xor
imul
das
sub
mov
xchg
adc
or
and
std
mov
ficom
cwde
sub
sub
dec
xchg
loop
cmp
push
test
sahf
jecxz
mov
inc
out
fld
add
or
xchg
push
sbb
pop
inc
mov
sbb
pop
add
dec
push
sbb
sbb
cmps
mov
ja
sbb
dec
lods
(bad)
jne
dec
ins
jns
adc
mov
test
div
pusha
adc
inc
sub
pop
cmp
jbe
int3
iret
les
add
mov
ret
jbe
mov
sbb
jmp
inc
(bad)
push
and
inc
jge
xor
or
cmp
loopne
shl
mov
lea
daa
and
mov
sbb
pop
jle
push
test
pop
mov
sub
sub
outs
pushf
cmp
call
cld
jno
sar
movs
xchg
(bad)
ins
das
cmp
mov
ins
xchg
xor
pop
inc
fdivr
push
jbe
or
jbe
shl
outs
sbb
scas
jns
not
push
inc
sahf
add
test
ins
iret
sub
scas
pop
xchg
jns
fcmovne
or
sbb
jns
jg
test
mov
jge
fisubr
sub
and
ficomp
mov
xor
adc
mov
add
xlat
test
add
cs
xchg
pop
sahf
dec
dec
sub
loop
jne
stos
outs
enter
jmp
jle
xor
inc
int3
fcmovnu
mov
fisub
push
neg
xchg
fcom
(bad)
cmp
adc
add
mov
stc
shl
adc
xchg
cmp
sub
mov
dec
imul
ja
xchg
loopne
cmc
pop
enter
es
and
inc
sti
aaa
aam
xchg
(bad)
dec
frstor
nop
jl
sti
pop
data16
push
fst
pop
test
xlat
mov
(bad)
dec
sbb
mov
int3
nop
mov
push
cmp
pop
sbb
xchg
cld
jecxz
addr16
mov
out
enter
pop
mov
mov
js
dec
push
scas
push
xchg
mov
mov
dec
xor
stos
(bad)
or
movs
dec
jbe
cmp
inc
lahf
mov
pop
and
cmc
aad
add
cmps
test
adc
jb
add
inc
mov
stos
aaa
outs
pop
sets
aad
ror
mov
ss
sub
and
cmps
inc
rcl
das
nop
popa
enter
pop
das
ins
out
inc
sub
je
ss
inc
mov
pop
xlat
stos
out
dec
xchg
xor
add
add
ror
push
gs
mov
in
aam
jbe
retf
sbb
mov
jmp
pop
mov
ins
ja
dec
mov
das
cld
mov
test
lock
sub
jb
inc
cwde
push
push
fisttp
imul
cmp
xchg
outs
and
fcomp
aad
aam
inc
inc
fwait
cmp
mov
sub
fidivr
xchg
repz
ds
shr
jae
pop
inc
sti
jno
pop
enter
sub
sub
in
idiv
(bad)
in
or
or
lahf
out
out
std
xor
inc
ds
pop
xchg
adc
or
dec
sbb
ret
std
cmp
push
rcr
push
ja
pop
aad
pop
mov
aam
adc
and
adc
retf
imul
pop
and
or
jp
push
sub
fsubr
or
dec
call
pop
adc
(bad)
dec
add
pop
push
daa
xchg
test
(bad)
test
int
lods
sub
sbb
jb
or
icebp
cdq
cmp
cs
(bad)
pop
pop
repz
pop
enter
js
ja
in
pop
or
xchg
pop
mov
icebp
pushf
loope
dec
fs
pop
cld
lods
fnstcw
movs
ret
jg
dec
mov
fnstcw
sub
popf
xlat
jbe
sub
pop
push
mov
in
call
adc
cld
aam
(bad)
jmp
or
nop
push
div
cs
rol
sbb
loop
imul
sub
loopne
es
or
call
hlt
ins
inc
call
leave
pop
mov
ret
cmp
rol
xchg
mov
ja
aad
iret
pop
rcl
xchg
lahf
and
push
mov
dec
daa
fisubr
jns
xchg
mov
pop
jo
jb
mov
push
inc
stc
xor
cmp
lods
mov
jecxz
and
push
fistp
sbb
cmp
aad
repnz
pop
outs
cmp
rcl
or
test
sahf
lds
jl
xacquire
xchg
or
mov
or
xchg
mov
inc
jecxz
or
ror
xor
or
sahf
call
gs
or
jp
stos
pushf
cmps
(bad)
movzx
hlt
rcl
mov
ds
inc
(bad)
mov
test
and
xchg
jl
repnz
(bad)
sub
in
dec
pop
fdivr
and
dec
add
sbb
push
jae
adc
add
adc
fwait
push
imul
in
out
popf
fbld
cli
movs
push
or
scas
cmp
retf
cli
sbb
cmp
outs
(bad)
dec
and
xchg
jb
cmp
fcomip
rol
inc
push
sbb
mov
je
push
sbb
inc
pop
clc
in
in
sbb
sbb
and
or
sti
or
mov
or
fsubr
sub
das
imul
add
sub
mov
add
push
xor
add
mov
cli
fimul
cwde
ror
mov
adc
hlt
in
or
pop
lahf
fs
dec
mov
mov
mov
shr
movs
mul
pop
pop
gs
cmps
pop
mov
cwde
adc
pop
push
adc
(bad)
out
dec
pop
out
sbb
inc
mov
cmp
sti
adc
mov
ss
ja
xchg
fs
mov
pop
add
mov
cmp
mov
pop
inc
mov
pop
rcr
icebp
cmp
cld
jno
inc
sub
or
mov
jmp
repz
pop
adc
adc
adc
outs
outs
fstp
int3
push
enter
adc
ss
adc
hlt
cmps
in
sub
jge
stc
test
lock
push
mov
push
dec
push
inc
ret
push
ficomp
bound
mov
adc
in
push
arpl
cmp
jno
shl
dec
mov
push
jecxz
jle
sti
mov
int3
jp
daa
jb
scas
scas
dec
mov
mov
inc
push
cmps
mov
fcmovbe
jmp
cwde
les
pop
ficomp
mov
call
stos
jne
fld
cs
out
retf
cmp
mov
popf
in
cs
add
jmp
adc
sub
movs
xor
pop
mov
(bad)
push
cmp
or
fsubr
adc
dec
cdq
jns
sub
xor
mov
(bad)
adc
pusha
shl
movs
addr16
(bad)
nop
inc
repnz
cmp
test
and
ret
outs
mov
jge
inc
jle
icebp
icebp
push
and
aas
mov
inc
es
and
mov
out
das
in
push
gs
push
sti
cmp
aam
cmp
sub
sub
mov
sbb
int3
and
out
and
xchg
ret
mov
dec
pop
ja
adc
pop
push
enter
in
push
pop
mov
loop
push
push
cmp
jne
out
xor
loop
jp
cmps
jns
mov
rcr
add
xchg
test
pop
shr
test
jb
fstp
jns
pop
jnp
jnp
and
sti
loopne
les
(bad)
mov
push
push
imul
ret
test
cwde
fbld
xor
adc
into
dec
int3
mov
repz
jmp
fs
(bad)
jg
adc
dec
push
push
adc
cwde
je
jnp
dec
cmp
data16
es
mov
mov
fistp
outs
or
cmc
pop
and
jg
in
cpuid
sub
sbb
jl
xchg
es
shr
das
xor
cwde
dec
cld
pushf
xlat
repz
adc
inc
mov
mov
mov
icebp
shl
or
out
popa
arpl
and
cwde
and
jmp
out
sub
mov
aam
sti
pop
mov
cmp
adc
cmc
push
push
jbe
xor
iret
add
out
stos
jmp
rcr
add
or
loopne
hlt
cdq
shl
sbb
fwait
fwait
popf
fcom
dec
cmp
jbe
mov
dec
xchg
call
jne
dec
daa
push
enter
sar
cmp
in
pop
call
jns
pop
je
loope
mov
sub
mov
scas
out
mov
(bad)
mov
repnz
ins
push
test
fdivr
repz
loope
sub
xor
and
(bad)
ins
lds
clc
icebp
lods
inc
sbb
mov
dec
or
retf
jmp
mov
scas
sbb
push
mov
push
test
arpl
(bad)
push
jmp
mov
ss
mov
fst
sbb
add
hlt
and
imul
dec
sub
jecxz
xchg
enter
fwait
xchg
jb
push
dec
jae
div
xor
and
repnz
mov
jne
mov
ja
hlt
je
lods
imul
push
inc
fldcw
sbb
push
push
gs
mov
xor
pop
jns
das
sub
mov
jbe
fsubr
rol
add
out
xchg
movs
inc
ja
popa
mov
dec
mov
dec
jo
dec
retf
sti
jle
sub
jnp
xchg
cwde
out
inc
adc
xor
fstp
jp
sub
pop
adc
push
mov
pushf
ds
xor
data16
repnz
scas
dec
push
jge
jns
ds
cmp
out
jnp
or
push
sar
cmp
mov
fld
inc
daa
out
mov
mov
jl
adc
cmp
std
pop
adc
sbb
push
and
aaa
pop
nop
pusha
cli
(bad)
out
push
sub
sbb
xchg
mov
xchg
(bad)
xchg
jmp
addr16
lods
js
lods
aas
inc
aad
fcom
lock
inc
stos
sub
sub
call
pop
adc
add
xor
inc
iret
or
jb
aam
pop
and
cmps
(bad)
call
xchg
mov
or
sub
pusha
fdiv
mov
mov
(bad)
leave
push
pop
fldcw
aad
cli
push
xchg
and
shr
loope
add
mov
rcr
les
cdq
dec
out
or
lahf
rcl
jb
fs
out
dec
movs
mov
mov
shr
mov
imul
sbb
stos
mov
adc
in
xchg
icebp
inc
in
or
loopne
sbb
sbb
or
adc
test
movs
lock
aaa
test
scas
jmp
int
leave
mov
mov
pusha
mov
sbb
xchg
fdivr
mov
or
sbb
in
les
pop
xchg
sub
cdq
imul
movs
push
es
dec
dec
adc
sub
or
sub
inc
popf
call
in
test
inc
mov
jb
sbb
cmovns
push
add
jnp
jmp
add
xchg
xchg
push
iret
adc
int3
outs
jecxz
in
pop
mov
xor
jge
stos
shl
inc
dec
cmp
shl
cs
movs
xor
loope
xchg
fmul
mov
ret
int3
loope
into
leave
cmps
scas
(bad)
pop
cmps
iret
in
pop
push
xor
mov
out
jns
rcl
mov
push
ja
outs
movs
shr
cli
test
cmp
jp
rcl
mov
and
fmul
adc
fild
jnp
test
stos
test
mov
stos
imul
jnp
mov
dec
dec
iret
ret
in
inc
stc
mov
inc
push
xor
repnz
or
ret
fadd
mov
jmp
cs
sub
out
ds
pop
icebp
fwait
loopne
pusha
push
cld
cli
in
dec
inc
jg
adc
call
ds
sbb
sub
enter
popf
mov
fnsave
mov
inc
adc
aad
mov
cmp
(bad)
jb
push
pop
outs
push
jmp
add
xor
sbb
fcom
scas
dec
(bad)
into
or
mov
push
xor
mov
mov
test
and
push
pop
cli
inc
loope
retf
lds
xchg
push
repz
lahf
bound
pop
std
lahf
push
sub
adc
push
not
std
mov
mov
mov
outs
mov
push
les
push
iret
enter
test
and
out
(bad)
dec
mov
(bad)
cmp
scas
ret
fisttp
push
idiv
jne
in
cmp
xchg
ja
xor
mov
adc
adc
pop
stc
pop
fdivr
inc
ja
rcr
ror
dec
rol
cld
push
in
add
xlat
or
jae
xchg
push
movs
add
mov
fwait
retf
add
adc
imul
cs
loope
jmp
std
inc
inc
xchg
dec
enter
jbe
(bad)
cdq
shr
out
mov
movs
jecxz
xchg
mov
fild
(bad)
je
imul
mov
pushf
(bad)
jne
pop
mov
and
outs
cmp
sub
and
shl
retf
(bad)
fild
shl
test
push
inc
push
mov
iret
loopne
xchg
sar
mov
minps
ficomp
(bad)
cmp
xchg
inc
and
(bad)
jae
repz
cmp
sahf
xor
mov
ins
fs
mov
(bad)
mov
push
shr
adc
std
dec
out
into
out
ds
xor
mov
xchg
ja
and
sar
and
imul
rcl
mov
push
test
mov
(bad)
ret
das
and
cmc
mov
mov
dec
movs
shl
lea
jo
shl
xchg
jae
mov
mov
cmp
(bad)
mov
sub
iret
ss
les
mul
test
shr
out
sub
stc
inc
push
xchg
xor
aam
ins
add
push
adc
scas
mul
mov
jae
jp
loopne
dec
rol
jmp
cmp
xchg
in
xlat
add
mov
pop
jo
jmp
and
dec
dec
inc
jbe
popf
call
mov
and
xchg
or
push
cld
xchg
xor
stc
gs
retf
pop
pop
test
sbb
fistp
mov
cmp
xchg
or
jo
mov
aas
push
sar
loop
sbb
loop
xchg
out
cmp
retf
mov
pop
adc
imul
cwde
adc
mov
push
cmp
shl
mov
mov
mov
fwait
add
push
mov
test
sub
ror
xlat
xor
dec
push
and
fild
and
(bad)
dec
stos
fwait
sub
jecxz
inc
sar
call
gs
push
cmp
fcomp
jo
dec
iret
adc
dec
imul
jbe
mov
jg
sbb
jns
jmp
jb
cmp
aaa
pushf
add
add
jmp
jmp
pop
mov
popf
mov
jp
jae
loopne
push
cmp
jecxz
shr
retf
jmp
test
(bad)
into
jne
add
pop
push
jecxz
stos
mov
cmp
and
xor
dec
in
jl
into
(bad)
(bad)
fisub
mov
sbb
icebp
mov
adc
mov
loop
(bad)
fcmovne
leave
lods
loop
xchg
fild
adc
bound
stos
call
(bad)
out
inc
and
push
sub
retf
fimul
lock
mov
mov
mov
rol
int
mov
fld
xchg
add
pop
jmp
mov
cmp
fs
adc
mov
jp
fist
mov
call
bound
sub
jge
mov
cmp
(bad)
jmp
inc
lods
sub
aam
pop
add
jl
jp
shl
xchg
stos
cmp
push
sbb
in
cmps
and
loop
pop
dec
or
sub
shl
nop
add
cli
fidivr
jnp
dec
xchg
sub
or
ds
inc
add
push
cmp
jnp
imul
inc
call
lea
dec
in
outs
gs
lea
pop
adc
mul
push
xor
scas
icebp
jg
pop
stos
xchg
stc
mov
inc
test
rol
shr
xor
popf
int
aas
mov
dec
shr
jl
cmp
push
ret
add
mov
dec
adc
and
xor
push
cmp
mov
pushf
scas
mov
cmc
imul
pop
inc
adc
test
or
dec
js
cli
ja
mov
imul
jge
fldcw
xor
mov
mov
ins
or
popa
test
sbb
xchg
and
int3
jg
hlt
sbb
and
(bad)
in
cdq
shl
lods
int3
xchg
xchg
mov
xor
test
aas
in
dec
add
or
fadd
sbb
(bad)
test
ret
jnp
arpl
jno
fs
aad
mov
aaa
outs
fst
sub
sbb
pushf
adc
cmc
fwait
jecxz
enter
jnp
xor
ja
sbb
mov
jne
xlat
gs
stos
outs
push
fwait
inc
sub
jmp
jno
(bad)
mov
int
ret
out
cmps
push
fsub
pop
les
lea
lea
or
pop
popa
loopne
push
call
icebp
mov
inc
aam
xor
or
cmp
cs
mov
and
jnp
aaa
out
or
add
mov
cli
mov
cmp
pop
mov
push
add
outs
lds
hlt
dec
es
ds
lds
ror
xchg
clc
mov
sbb
inc
mov
xor
xchg
aam
(bad)
clc
jb
jmp
mov
mov
sub
jmp
call
mov
jbe
inc
shl
(bad)
pop
cmc
sub
mov
addr16
jb
fwait
xor
fnstsw
dec
cmp
cmp
bswap
sbb
vpsubusb
cwde
push
pop
mov
fidivr
pop
or
mov
mov
imul
call
push
ret
pop
sub
dec
adc
jne
xor
ja
jne
jp
arpl
ror
stos
fbld
loopne
jo
ja
push
lods
dec
fisubr
loopne
push
enter
cmc
(bad)
(bad)
push
ins
cmp
or
pop
test
mov
xchg
adc
sbb
(bad)
xchg
aaa
inc
jo
mov
stos
xchg
popa
xchg
arpl
or
je
sub
mov
xor
addr16
rol
icebp
mov
aas
cmp
ins
dec
mov
jmp
mov
jno
xor
lods
xchg
les
jecxz
sub
cmc
adc
pusha
xor
loope
inc
adc
shl
ficomp
aas
xor
(bad)
fcom
sahf
pop
inc
xlat
out
es
enter
sbb
inc
sahf
pop
xor
mov
stos
xchg
stc
inc
cmps
jg
fimul
sub
fistp
jmp
cmp
sbb
lds
dec
jo
cdq
inc
mov
loope
mov
lods
cli
pop
in
lods
add
sub
(bad)
push
cwde
sub
ins
mov
cmp
pop
mov
test
mov
shl
imul
mov
jnp
mov
or
rcl
jnp
psllw
dec
add
and
mov
sub
cmp
fucomip
std
ret
jp
out
and
dec
movs
add
jge
dec
out
or
mov
ja
mov
or
cmp
test
out
rol
cmps
inc
loop
push
test
lds
sub
scas
movs
sub
xlat
mov
sbb
mov
mov
loop
pusha
jbe
push
js
pop
mov
add
fdivr
adc
jl
retf
shl
or
adc
sbb
fs
mov
mov
fs
enter
cmp
(bad)
mov
retf
push
les
or
lods
add
xchg
xchg
adc
sub
pop
test
jbe
mov
mov
push
cmp
mov
lods
cmps
pop
test
pop
daa
jne
retf
dec
pop
mov
xchg
or
dec
pop
jecxz
out
aam
data16
and
pusha
popf
add
mov
xchg
xor
clc
nop
add
iret
jns
and
popa
mov
(bad)
retf
repnz
jmp
es
sbb
xchg
hlt
pop
inc
nop
idiv
outs
mov
jns
push
jp
mov
test
ins
dec
dec
xchg
lds
push
and
mov
pusha
cmp
mov
sahf
mov
xchg
and
xor
gs
das
jnp
stc
fwait
jmp
push
inc
inc
adc
gs
pop
cmp
stos
lods
pop
add
push
pop
pop
cld
scas
sar
cmps
rcr
retf
in
clc
mov
and
jno
push
(bad)
clc
in
push
jge
jnp
clc
imul
jnp
nop
imul
std
lds
cmp
xchg
ror
pop
add
inc
cmp
mov
jno
xor
sar
aam
adc
mov
mov
es
dec
mov
rol
or
int3
inc
call
jmp
sbb
dec
jmp
rcl
or
in
lea
pop
or
rcl
fsub
push
pop
(bad)
in
sub
jnp
(bad)
jmp
adc
lock
js
mov
xchg
inc
cmc
push
lahf
dec
or
jnp
add
adc
xchg
xor
ds
fwait
enter
mov
inc
cmp
int3
xor
mov
jmp
jge
jbe
jne
mov
and
aad
push
jmp
sub
pop
inc
and
pop
in
mov
idiv
push
jmp
data16
pop
sub
mov
jnp
out
retf
sub
sub
es
addr16
data16
lahf
aaa
shl
pop
push
aad
out
stos
das
jmp
in
or
rcl
and
ins
sti
mov
ret
dec
imul
jge
je
cmp
cdq
imul
pop
aaa
fistp
and
inc
mov
sub
gs
int
mov
cmp
mov
cmps
mov
hlt
push
push
mov
cs
div
mov
idiv
aaa
int
add
add
sahf
(bad)
jb
test
loopne
jp
xor
pop
ret
mov
arpl
lods
ror
sub
cmp
push
aaa
cmp
push
mov
fdivrp
adc
data16
mov
sub
inc
cmps
xor
or
inc
inc
aad
jecxz
nop
jno
stos
inc
mov
ret
or
test
ds
fidiv
xchg
pop
cmp
out
lods
push
out
popf
xor
pop
inc
add
popa
jne
adc
test
imul
cmps
lock
add
mov
jle
xor
add
outs
jge
gs
lock
inc
push
mov
cdq
adc
push
inc
mov
dec
jl
das
cmp
leave
jb
ins
ins
dec
ins
push
mov
push
and
dec
mov
xor
sahf
retf
cmp
xor
stos
(bad)
sub
test
adc
imul
inc
fmul
sbb
pop
into
outs
ja
adc
notrack
push
add
mov
push
out
or
js
ja
(bad)
stos
scas
mov
movs
push
repnz
nop
jg
xor
mov
mov
ficom
fsub
js
sub
aam
(bad)
jge
jmp
sti
loopne
and
or
sbb
ins
ins
mov
xchg
xor
add
stc
pop
or
mov
retf
loop
pushf
push
dec
fwait
mov
test
mov
loope
outs
ret
mov
and
leave
shr
xor
add
or
(bad)
lods
mov
xchg
xor
out
mov
jb
push
je
push
mov
xor
cmp
jnp
jp
push
jb
add
mov
or
imul
inc
ins
pop
stos
movs
clc
pop
jge
test
pop
cmc
mov
iret
stos
xchg
mov
inc
mov
mov
dec
push
xor
fs
and
call
sahf
or
bound
jecxz
mov
jp
mov
aas
packsswb
aam
and
loope
aas
imul
nop
mov
xor
xor
ds
add
pop
mov
mov
push
pop
les
add
mov
or
xchg
into
add
dec
pop
xchg
or
les
imul
fistp
jae
mov
mov
sti
jmp
jmp
inc
xor
lods
call
pop
fisubr
icebp
mov
ins
imul
push
mov
push
cmp
lods
push
retf
pop
sbb
cwde
stos
cmps
mov
mov
xchg
sub
ins
std
test
repz
pop
push
pop
xchg
fcmovnu
mov
retf
movs
dec
sub
jno
or
mov
imul
push
fisubr
call
push
aaa
cmp
aad
addr16
adc
mov
imul
and
inc
leave
pop
and
imul
std
xchg
repnz
mov
movs
adc
bound
sub
daa
fsub
int3
mov
cwde
mov
cmc
pusha
ins
setg
gs
iret
jo
sar
sti
mov
gs
pop
mov
adc
mov
loopne
arpl
inc
rol
cmp
test
adc
mov
pop
retf
in
cmc
lods
xchg
iret
xor
popa
push
inc
dec
outs
xchg
jb
js
adc
push
test
add
xor
cs
retf
cmp
and
aaa
mov
les
pop
dec
inc
scas
xor
(bad)
call
add
sub
inc
jle
inc
out
sbb
dec
xchg
test
adc
pop
nop
rcr
into
ret
push
cmp
call
out
stc
fwait
rol
mov
mov
lahf
lea
add
and
outs
adc
aam
sub
xchg
inc
dec
cs
add
and
aaa
fsub
sub
xchg
xchg
sub
adc
push
mov
ss
cmc
xor
outs
mov
lea
cmp
ror
div
mov
or
mov
mov
loop
imul
xchg
ficomp
adc
cmp
jns
mov
mov
mov
mov
stc
cmps
stc
lds
cmc
les
rcl
mov
cwde
cmp
loopne
dec
add
sub
pop
push
popf
hlt
pop
sub
sub
(bad)
xor
and
out
jns
push
xchg
dec
or
add
in
sahf
xor
or
inc
xchg
and
jo
scas
pop
data16
xor
pop
and
or
les
dec
jb
sbb
mov
cld
jbe
call
mov
sub
xor
jle
pop
ss
lea
and
je
imul
jns
call
repz
out
pop
(bad)
nop
xchg
adc
pop
dec
leave
hlt
movs
sub
sbb
jl
clc
ja
or
jmp
out
push
mov
sahf
repnz
stos
pop
aam
push
pop
fisttp
add
sbb
pushf
loop
push
fbstp
or
jle
out
arpl
xor
mov
arpl
cmps
dec
fwait
mov
inc
test
jo
mov
fcmove
outs
pop
gs
fadd
sub
mov
xchg
sub
dec
gs
mov
adc
cs
int3
jnp
ds
push
push
call
cmp
mov
shl
sbb
jae
jmp
jno
jge
mov
outs
es
cld
push
cmp
cmps
outs
mov
test
mov
shr
jns
jmp
cmps
inc
or
adc
das
retf
stos
mov
sub
push
pop
cmp
push
or
in
jecxz
adc
fucomip
scas
retf
gs
data16
push
mov
jbe
(bad)
imul
retf
shl
ret
adc
and
pop
xchg
jae
mov
sub
lds
inc
inc
adc
mov
lds
jns
fwait
adc
or
sub
mov
lock
push
xor
adc
test
mov
dec
sub
xor
push
hlt
adc
dec
and
rcl
xor
push
pop
mov
sbb
add
xchg
dec
das
mov
adc
mov
push
mov
jg
inc
inc
test
push
ins
jl
cmp
jp
and
daa
mov
xor
mov
mov
xchg
cmc
xor
fist
cwde
rcr
test
ds
add
mov
xchg
imul
dec
in
xor
mov
fldcw
je
pop
jle
stos
inc
test
mov
xor
pop
test
test
sub
retf
push
adc
ins
cmps
mov
jl
mov
test
xchg
int
sti
xchg
or
pop
loopne
xchg
repz
stos
sbb
cwde
scas
icebp
xchg
inc
call
aad
mov
and
inc
pop
pop
and
xor
and
dec
inc
cdq
pop
mov
sbb
push
addr16
ret
test
dec
mov
pusha
and
and
jmp
fcom
scas
jnp
dec
popf
push
leave
movs
outs
test
adc
hlt
hlt
fcomp
sbb
mov
repz
in
xchg
xor
fs
push
xor
dec
aas
add
cmc
sbb
sub
jle
not
adc
ror
pop
push
mov
mov
jle
adc
cs
test
fldenv
push
aad
add
xchg
movs
pop
stos
int3
mov
shl
stc
add
xor
mov
fild
inc
jmp
std
jnp
call
dec
cmp
push
xor
lock
mov
push
jle
les
sbb
adc
mov
in
xchg
into
movs
ficom
and
pop
mov
ins
lds
jg
mov
xchg
fidivr
sahf
add
xchg
cld
sub
sub
xor
push
aaa
inc
xor
mov
fs
imul
js
pop
xchg
add
movs
xor
icebp
push
sahf
in
rcr
imul
mov
add
test
push
mov
aaa
or
(bad)
sbb
add
cdq
xor
mov
test
psrlw
in
les
or
xchg
loopne
mov
push
adc
pop
cli
fist
mov
pop
hlt
add
nop
mov
fnstsw
or
sub
xchg
imul
shl
cmc
(bad)
inc
xchg
cmp
mov
pop
dec
scas
cmp
aas
xchg
in
icebp
xchg
adc
mov
ins
fistp
gs
out
xor
enter
jnp
mov
ins
fs
adc
dec
movs
mov
scas
ret
mov
xchg
or
scas
pusha
clc
push
xchg
sbb
ret
dec
cmp
retf
enter
in
jle
bound
pusha
arpl
pop
neg
dec
neg
adc
sub
dec
lock
xlat
fcmovnu
mov
repnz
retf
ds
mov
movs
sbb
loop
ret
pop
xchg
cmp
mov
in
test
lea
fstp
add
push
cmp
mov
push
inc
mov
loope
fild
pop
mov
aam
jecxz
mov
push
pop
cmp
pop
dec
in
cmps
cld
inc
lea
data16
inc
fwait
(bad)
pop
sahf
jmp
push
and
test
aaa
xchg
mov
popf
shl
(bad)
pop
outs
mov
inc
sub
xchg
loope
cmp
or
cmp
push
pop
mov
pop
lock
(bad)
push
js
scas
or
pop
nop
nop
xchg
test
div
or
ret
adc
or
stos
cmps
sub
lock
(bad)
mov
cmp
retf
cwde
mov
cmp
inc
jg
ja
dec
mov
push
out
rol
mov
mov
and
popa
test
ins
mov
ret
iret
pop
mov
out
or
mov
and
scas
mov
or
test
inc
out
push
shr
hlt
dec
or
rcl
sbb
jne
ror
in
pop
in
nop
cmp
or
xor
jo
cmc
push
and
aad
mov
pop
repnz
(bad)
retf
sahf
mov
adc
mov
lahf
dec
push
pop
xchg
imul
addr16
inc
sbb
stc
adc
dec
jae
pusha
js
in
mov
adc
pop
pop
cdq
fwait
mov
fwait
std
stos
fst
jp
mov
jo
cmc
cmps
xor
adc
iret
or
mov
lods
xor
jl
fdivr
or
cmp
test
repnz
add
push
call
cmp
inc
adc
jl
aas
xchg
mov
or
enter
scas
jne
push
int
jmp
mov
lar
enter
cmp
or
popa
mov
test
(bad)
pushf
js
sub
cli
mov
repnz
fisub
cmp
aaa
cmp
push
adc
cmps
in
or
mov
push
ret
sub
jle
pop
jns
js
push
retf
(bad)
push
fcomp
add
call
jle
aaa
pop
sbb
sub
repnz
mov
adc
clc
iret
sbb
sub
and
mov
mov
loope
ja
mov
push
mov
or
dec
push
ins
fist
xchg
push
push
jno
(bad)
inc
loopne
retf
push
sti
jbe
sub
push
mov
xor
mov
xor
xchg
les
stos
ins
push
arpl
lea
int
jns
add
cdq
dec
pop
xchg
or
add
pop
cmc
push
push
or
imul
ds
adc
mov
pop
cs
push
retf
sahf
xor
fsubrp
sub
cmp
xor
sahf
aad
and
inc
pop
inc
clc
xor
jmp
sahf
mov
xchg
sar
rcr
mov
mov
xchg
cmp
int
dec
push
add
push
les
dec
xor
jge
sub
into
ins
pop
scas
add
in
daa
cmc
daa
popa
cmc
call
inc
mov
inc
test
je
pop
sbb
cmp
(bad)
outs
xchg
movs
mov
das
jno
int
inc
leave
test
xchg
xchg
xlat
xor
fld
(bad)
sub
mov
fsubr
es
jnp
setno
pusha
jns
leave
push
xlat
xlat
push
retf
jmp
and
mov
mov
or
ins
xor
mov
inc
je
adc
mov
pop
cmp
inc
sub
dec
xchg
fdiv
fmulp
push
xor
xchg
and
jb
adc
out
jmp
icebp
rdtsc
gs
stos
mov
in
popa
ret
lods
fucomi
inc
outs
ss
shl
add
cld
dec
xchg
pop
xchg
xchg
popa
jmp
cmp
daa
imul
mov
sub
mov
mov
loopne
xor
inc
jns
jno
sub
or
nop
sub
(bad)
and
in
in
iret
test
and
pop
sar
dec
or
jmp
loop
pop
mov
push
cld
pop
cmps
mov
adc
outs
call
lea
aam
and
fstp
mov
bound
int3
lds
mov
pop
push
popaw
and
cs
adc
pop
xchg
out
fdivrp
pop
inc
fisttp
mov
in
shr
inc
lods
lods
cmp
inc
and
movs
pop
loope
imul
mov
jl
pop
xchg
in
call
xor
pop
jns
mov
fld
je
pop
sbb
into
xchg
es
dec
ins
and
hlt
adc
xchg
push
rcr
repz
xchg
aad
outs
and
ss
shl
push
fadd
jg
div
int3
push
mov
ffree
adc
push
jmp
cmp
xor
int
adc
lods
dec
or
idiv
inc
xor
mov
mov
lahf
xchg
sbb
adc
add
sti
cwde
inc
cmp
neg
mov
data16
imul
sub
iret
out
int3
xchg
cld
sbb
jnp
inc
test
repnz
mov
repnz
lahf
mov
jmp
xchg
mov
ss
mov
call
(bad)
add
sub
sbb
pushf
adc
cmp
jle
and
adc
(bad)
std
cmp
mov
fs
gs
sbb
gs
addr16
test
jge
adc
push
mov
jp
sbb
dec
jne
cdq
pop
outs
xchg
sub
rcl
add
fimul
mov
xor
mov
dec
or
sti
push
inc
and
mov
mov
clc
bnd
mov
mov
sub
scas
cmc
or
dec
or
dec
or
jp
ret
jo
and
xchg
xchg
movs
movs
pop
add
xor
adc
cmp
xchg
pushf
xor
add
add
ffree
fistp
jbe
(bad)
inc
jne
sahf
scas
add
fldenv
xchg
(bad)
mov
inc
(bad)
sub
adc
les
retf
and
mov
fcmovnb
aas
fiadd
and
outs
adc
ror
jmp
retf
cmps
fld
sar
xlat
dec
add
dec
jg
iret
shr
(bad)
xor
sub
jl
adc
mov
add
sbb
int3
or
sbb
movs
in
xor
adc
push
pop
hlt
popa
fsub
push
adc
pushf
pop
pop
iret
dec
or
int
jns
outs
enter
out
xor
push
fs
lahf
les
test
push
xor
adc
ds
daa
hlt
sbb
mov
leave
pop
shr
in
repz
sbb
leave
fdiv
push
push
sub
push
dec
cmp
(bad)
or
inc
out
and
pop
pop
lods
mov
jmp
not
hlt
pusha
fistp
jne
shr
sub
pop
mov
jns
mov
xchg
cmps
xchg
sub
or
cmp
xchg
sub
movs
cmp
jmp
jg
cmps
and
inc
ret
ins
mov
popf
sub
inc
arpl
loope
mov
(bad)
fcom
stos
pop
rcr
idiv
clc
test
cmp
push
push
jns
das
dec
fs
retf
xchg
faddp
scas
or
mov
das
cmp
and
mov
dec
(bad)
push
mov
aas
cmp
jb
cmp
nop
push
jae
lods
adc
push
adc
cmp
dec
pop
push
sahf
push
jae
mov
cmp
xchg
cmc
and
mov
or
mov
mov
nop
iret
lahf
outs
imul
adc
adc
jne
loopne
mov
sub
cmp
ins
test
jecxz
mov
mov
outs
and
les
adc
mov
(bad)
mov
retf
retf
test
rcr
mov
bound
test
adc
movs
jo
push
lods
pop
pop
mov
xor
jmp
ins
or
shr
bswap
aam
sub
mov
in
fidivr
xor
jbe
xor
inc
xor
pop
mov
inc
pop
nop
mov
in
popa
xchg
mov
data16
pop
pop
inc
push
lock
xchg
mov
movs
in
mov
adc
ret
pop
push
sub
jle
stc
push
aad
mov
or
call
retf
mov
test
fist
cli
(bad)
jmp
xchg
cmp
test
ins
arpl
mov
xchg
mov
mov
xchg
gs
xchg
inc
adc
aad
cmp
jns
jecxz
dec
cmp
or
movs
cmp
pop
das
sahf
adc
in
cmp
dec
jge
fnsave
xor
sbb
cs
adc
jle
rcl
inc
jnp
xor
sub
mov
ror
or
fisttp
imul
retf
jo
and
bnd
xor
push
adc
bound
mov
mov
mov
ins
sub
dec
xchg
sub
ss
mov
sub
wbinvd
aad
lods
jb
xor
neg
adc
push
cli
rcl
and
mov
stc
push
sti
xor
aam
sahf
add
je
call
mov
mov
pop
movs
cmc
xor
lods
in
inc
jo
push
sub
loop
jp
scas
mov
jb
mov
xor
cdq
cmp
leave
xor
cld
shr
or
jae
or
sbb
aam
out
movs
cmp
or
pop
inc
mov
neg
retf
inc
inc
inc
jae
add
iret
aas
lahf
xor
push
sub
xchg
retf
sub
shr
lods
in
xchg
aas
pushf
cmp
fst
sub
jg
cmc
retf
mov
cmp
or
cld
sub
loop
test
pop
or
xchg
jnp
pop
stos
pop
jmp
icebp
xchg
push
lahf
jl
cmp
call
icebp
sub
pop
mov
sub
adc
outs
or
or
or
popf
add
sbb
jmp
or
cmp
xor
mov
lahf
sbb
jns
popa
sahf
pop
inc
call
mov
mov
cmc
call
rcr
adc
mov
int3
jmp
xchg
movs
and
cmp
(bad)
scas
lods
pop
lahf
jmp
push
mov
jb
cmp
arpl
(bad)
in
stos
xor
in
stos
xchg
mov
push
push
scas
add
lock
adc
in
lods
pusha
js
xor
sbb
inc
cs
cmps
mov
imul
js
mov
mov
out
push
mov
in
jmp
pusha
nop
imul
das
dec
inc
sti
rol
mov
cmps
jle
cmp
aaa
xor
mov
aaa
mov
enter
scas
cmc
or
add
(bad)
mov
inc
sub
pop
adc
stc
push
cs
mov
mov
es
add
ficom
sbb
cmp
dec
lods
xor
fwait
lahf
retf
rol
cmc
leave
push
fs
push
push
push
into
shl
in
ror
nop
sub
dec
mov
dec
les
ja
popa
jge
test
outs
jmp
adc
add
out
adc
mov
pop
mov
ret
mov
pop
(bad)
sbb
sub
xor
xor
ds
les
push
cmp
int3
pop
jl
mov
lods
cli
cld
jmp
lea
int
popa
push
lods
mov
js
lock
cmp
mov
mov
cmps
das
outs
xor
sub
inc
outs
inc
imul
inc
adc
mov
bnd
push
push
or
sub
cmps
or
popf
imul
lods
and
cmp
mov
test
jne
cmps
push
xor
cmps
je
lea
iret
push
xchg
frstpm(287
jle
mov
out
add
or
adc
call
jge
push
xor
sbb
cli
rol
sbb
data16
sbb
bound
or
xor
repz
popa
scas
jl
xchg
mov
pop
fidiv
stos
(bad)
cld
xchg
jns
pushf
dec
pop
jg
inc
stos
lods
push
push
lahf
xchg
or
xchg
iret
add
lock
xchg
fistp
inc
mov
push
aas
xor
push
outs
push
cli
push
icebp
add
xchg
sub
or
ins
mov
mov
mov
ins
xchg
push
daa
mov
inc
mov
adc
ins
outs
scas
and
mov
xor
push
adc
pop
push
mov
cwde
jo
jnp
mov
or
ror
push
mov
das
test
outs
xchg
out
stos
xchg
shl
sar
push
adc
push
jae
dec
mov
sub
jae
aas
les
cdq
jno
(bad)
call
leave
dec
push
cs
pop
loopne
mov
sahf
test
popa
movs
mov
and
sub
es
and
mov
add
jae
ficom
es
pop
test
out
aas
cmp
fsub
add
xor
jns
mov
mov
mul
call
in
int
sbb
neg
movs
stos
xchg
mov
cmps
pop
fwait
xor
popf
ins
pop
addr16
daa
dec
push
push
push
xor
stos
and
adc
push
jl
mov
(bad)
push
movs
sbb
mov
dec
cmp
xchg
pop
push
mov
call
push
mov
cmp
and
pop
inc
push
sbb
xlat
out
popf
jmp
out
dec
(bad)
out
ror
outs
cmp
mov
aad
dec
mov
add
add
mov
xchg
mov
loop
jp
lahf
mov
hlt
retf
lds
push
and
fsubr
inc
sbb
xchg
repz
ins
(bad)
repnz
mov
push
sub
mov
push
mov
or
push
je
mov
sbb
jg
mov
sar
add
cmp
add
cld
sbb
sbb
cmc
outs
inc
pop
and
mov
push
stc
div
jmp
pop
push
add
retf
les
pop
movs
shl
arpl
and
and
sub
add
push
or
dec
sbb
outs
in
fwait
jp
pushf
enter
lahf
mov
into
adc
jo
sbb
pop
xchg
inc
mov
pop
push
sar
pop
adc
mul
or
mov
lea
mov
popa
out
pop
inc
neg
jg
or
(bad)
adc
(bad)
fcom
sbb
stos
addr16
dec
leave
ins
test
cmps
push
outs
and
cmp
sar
or
adc
sbb
push
les
mov
push
loope
rcl
sub
out
mov
mov
pop
loopne
sbb
loopne
fwait
mov
outs
into
sub
test
add
cmps
mov
or
in
jnp
fistp
push
cmp
call
repz
cmp
pop
hlt
scas
pop
xlat
adc
scas
ret
test
jns
test
pop
test
xor
xor
sub
fwait
je
pop
out
jne
imul
sub
xchg
out
repz
movs
repz
ja
dec
mov
aam
jmp
inc
inc
lea
xchg
fadd
jge
pop
pop
out
ds
aas
jns
push
das
push
aaa
and
or
sub
pop
pause
and
mov
stc
cmp
mov
sbb
cmc
stos
(bad)
scas
and
sub
and
pop
pop
es
xor
mul
xor
push
call
mov
mov
je
fisub
xchg
hlt
das
pop
aad
pop
sub
sub
push
or
inc
inc
and
repnz
repz
dec
sbb
or
jecxz
mov
stos
movs
jae
rol
movs
cdq
popa
jle
adc
nop
push
mov
bound
out
lock
inc
iret
int3
or
sahf
lahf
and
scas
sbb
xchg
mov
sub
or
fwait
stos
bound
add
xchg
mov
adc
jb
fcom
pop
das
lods
pop
mov
xor
stos
movs
adc
nop
icebp
mov
fisubr
jmp
push
rol
dec
iret
mov
mov
jmp
adc
and
sbb
inc
in
adc
shl
cwde
adc
clc
imul
out
test
jne
mov
aad
jb
pop
daa
mov
vmovq
repnz
in
mov
xchg
cld
(bad)
push
or
and
stc
push
jnp
sar
nop
ins
retf
push
int3
jne
stos
dec
sub
mov
lea
push
in
adc
mov
xchg
test
ins
xchg
inc
sbb
jo
call
mov
nop
int3
cmps
pop
and
xor
dec
out
dec
addr16
(bad)
or
bound
out
(bad)
in
inc
cwde
gs
push
xor
es
adc
adc
or
bound
mov
(bad)
dec
sbb
nop
sti
adc
xchg
jb
cmps
sub
iret
jmp
cdq
pop
aad
or
ja
in
mov
and
out
xchg
call
sar
les
xchg
mov
push
cmp
mov
jnp
iret
retf
xchg
retf
adc
cmps
dec
push
mov
inc
imul
mov
sahf
int
inc
cmc
mov
cmp
add
jmp
inc
push
sub
xchg
mov
sbb
xchg
rcr
test
and
call
mov
dec
fld
xchg
sbb
mov
ret
loopne
push
jno
jmp
xor
add
frstor
bound
jp
cmps
test
pop
dec
adc
xor
aas
pushf
jo
xchg
mov
xor
add
or
jnp
mov
or
or
xchg
(bad)
pop
fstp
ins
out
lods
or
add
ins
jns
std
jmp
inc
aam
mov
std
mov
mov
fidiv
call
div
mov
jle
cmps
jp
in
fs
movs
enter
sub
ins
dec
cmc
cli
mov
mov
test
inc
mov
stc
xchg
add
push
mov
cmp
movs
push
retf
unpckhps
inc
fstp
mov
mov
loop
fsubr
lahf
pusha
jmp
mov
dec
xchg
les
inc
fild
(bad)
sahf
add
dec
and
mov
pop
lods
lahf
sbb
or
enter
pop
cmp
mov
fwait
sahf
les
aad
push
call
adc
cli
loopne
movs
mov
jecxz
rol
pop
mov
mov
mov
mov
mov
pop
fs
outs
dec
pop
pushf
dec
jge
cmp
adc
jns
push
loopne
push
loop
(bad)
int3
in
sbb
push
cmp
adc
push
xor
ret
sti
mov
aas
xor
ror
sbb
mov
mov
pop
lahf
imul
aam
inc
adc
push
std
and
mov
imul
popf
mov
sar
cld
pop
add
lahf
mov
jb
xchg
bound
add
clc
(bad)
cmps
cmp
sbb
xchg
hlt
popf
or
mov
popa
pop
push
jg
sbb
pop
fisub
sti
ins
loopne
xor
stc
dec
ds
dec
or
cmp
xor
rol
cmp
xor
lods
mov
iret
push
lahf
or
jnp
add
push
push
sub
inc
ins
and
push
xor
adc
sbb
lds
jns
mov
aaa
or
sbb
mul
(bad)
cmp
lahf
in
xchg
xor
stos
into
sub
rcl
jnp
jno
pop
xor
sub
mov
fcmovnbe
loopne
xchg
imul
mov
inc
lds
pop
or
xor
(bad)
and
(bad)
mov
xchg
inc
inc
fld
add
aaa
xchg
mov
int3
dec
shl
dec
jo
pushw
add
xchg
cli
pop
lods
out
bound
sbb
jo
ret
mov
retf
inc
or
cmp
jbe
sti
loope
cs
call
sti
cmp
jae
std
fs
inc
or
fcmovnu
outs
pop
sub
and
adc
sbb
mov
(bad)
lods
push
cmps
sbb
adc
or
retf
push
mov
push
or
icebp
hlt
cmps
(bad)
xchg
jnp
ds
pop
nop
pop
out
mov
addr16
xlat
add
mov
adc
jp
add
stc
xor
div
dec
cmp
inc
push
shl
outs
jp
outs
jne
xchg
(bad)
test
jp
mov
push
mov
movs
inc
xor
loope
fmulp
fs
bound
fsub
xchg
idiv
xchg
jnp
lahf
xchg
in
int3
mov
lods
rcl
pusha
enter
addr16
fwait
test
mul
mov
popa
pop
sahf
in
push
sbb
sbb
xchg
imul
ss
sbb
dec
(bad)
mov
push
(bad)
sbb
mov
cmps
mov
sub
stos
mov
ja
in
mov
stc
pop
bound
sbb
sar
mov
fiadd
add
and
or
and
cmps
mov
cdq
iret
out
mov
(bad)
enter
lds
xor
sbb
imul
mov
mov
(bad)
imul
sbb
in
loop
pusha
pop
cdq
xor
(bad)
or
jbe
jns
inc
xlat
gs
out
sbb
mov
scas
or
aaa
outs
mov
push
ret
xor
or
mov
xchg
sar
das
mov
mov
je
dec
push
fs
add
les
xchg
jl
test
daa
jp
xor
mov
das
hlt
ror
pop
and
icebp
add
dec
into
in
jg
push
or
adc
jp
push
ja
stos
dec
inc
mov
aad
stos
in
outs
das
in
add
pop
int
cli
xor
mov
cmp
jecxz
jle
addr16
xor
(bad)
jae
mov
cmps
add
loope
cld
jmp
shr
into
push
jns
pusha
xor
inc
adc
xchg
rcr
test
mov
cld
stc
clc
xor
mov
dec
sub
pusha
xor
out
rdtsc
pop
adc
inc
push
sbb
in
add
adc
xchg
xor
nop
test
sub
xchg
ret
ror
xor
jo
add
or
cdq
movs
sbb
push
inc
or
inc
sub
cmp
pop
ret
dec
mov
lods
xor
dec
call
pop
inc
jne
adc
js
popa
cmp
rcr
dec
adc
pop
fistp
loope
add
das
cld
pop
and
jno
inc
icebp
aam
push
mov
pop
je
imul
ror
inc
jecxz
pop
rol
inc
arpl
clc
xchg
xor
add
cdq
jmp
sbb
rol
(bad)
ret
jp
pop
push
sar
sub
mov
test
push
pop
dec
dec
pop
test
test
int
stos
out
mov
add
push
mov
push
cmp
stos
jns
(bad)
mov
in
lods
jl
mov
lahf
add
das
add
cmp
ret
fstp
sbb
add
pop
mov
sub
es
test
ja
outs
lods
aam
adc
out
or
loopne
stc
pop
mov
pusha
test
test
sbb
add
jbe
daa
and
cld
cli
fst
jae
xchg
xlat
cmp
iret
and
jns
push
sbb
fnstenv
jb
cld
mov
mov
jle
in
hlt
out
fcom
adc
mov
cmps
xchg
fdiv
xor
or
mov
fisub
aam
jp
xchg
dec
fisubr
ret
jno
or
shl
and
jge
jge
dec
xchg
inc
shl
int3
and
rcl
in
aam
and
push
inc
cld
jecxz
cld
jecxz
sahf
test
(bad)
sti
mov
sub
hlt
adc
and
daa
mov
fcomp
sub
mov
lock
ds
stos
sbb
jnp
push
out
push
mov
(bad)
push
push
out
dec
xchg
inc
ret
push
xor
xchg
jae
cwde
jb
jl
mov
test
mov
data16
jl
inc
lahf
aad
fdivrp
in
xchg
cmps
and
or
mov
mov
leave
aaa
inc
mov
call
stc
(bad)
mov
sub
cmc
sub
data16
sbb
sub
arpl
outs
jno
push
dec
adc
cld
pop
cmc
add
jne
xchg
(bad)
xchg
cld
fstp
push
xor
aad
and
in
inc
mov
adc
ins
(bad)
xor
neg
xchg
(bad)
or
ja
inc
dec
push
sbb
mov
adc
dec
(bad)
std
add
pusha
push
jne
daa
jmp
inc
bswap
xchg
mov
ficom
sub
loope
mov
mov
pop
add
sar
into
push
outs
test
xchg
mov
jno
xor
add
sahf
cs
(bad)
fabs
xchg
faddp
jo
xor
loopne
int
out
inc
jp
jb
sub
sub
lahf
jmp
xchg
pop
das
and
jmp
shl
jne
inc
icebp
pushf
test
push
sub
add
out
lahf
mov
mov
mov
scas
loop
inc
dec
add
int
lods
jb
clc
push
push
and
lock
ins
pop
ss
outs
add
addr16
(bad)
or
mov
adc
call
push
cmp
in
jmp
sub
inc
inc
js
xchg
lahf
jnp
push
adc
loope
je
pop
in
sti
repz
fs
sbb
jmp
add
adc
and
jns
cmp
imul
cmp
pop
retf
mov
dec
mov
aas
ror
sub
or
fisttp
inc
xor
inc
mov
ds
and
push
mov
leave
(bad)
and
jge
dec
iret
push
mov
and
push
mov
fnsave
mov
adc
push
in
pop
ret
mov
xchg
adc
fiadd
ins
cmp
enter
dec
adc
sbb
loop
in
shr
cmp
stc
test
(bad)
mov
fwait
inc
int3
mov
jecxz
out
xchg
sti
mov
xor
ffree
cwde
or
cmp
nop
pop
jne
ja
out
cmp
adc
repz
pop
pop
out
loopne
pop
or
xor
dec
xchg
repz
cld
fldl2t
add
ror
std
stos
mov
jo
push
push
sti
inc
inc
dec
fwait
imul
jmp
fisttp
mov
jmp
imul
adc
xchg
fimul
mov
add
test
iret
add
cwde
(bad)
outs
add
jmp
dec
pop
daa
and
aam
repnz
mov
movs
test
xchg
dec
xchg
js
adc
fcmovnbe
inc
mov
sub
fidiv
or
stos
clc
shl
cmps
mov
jge
push
rol
rol
call
pop
and
pop
iret
repz
and
sti
mov
pop
and
mov
mov
ins
cdq
xor
adc
(bad)
or
loopne
jnp
xor
sbb
cdq
scas
in
mov
or
sbb
push
or
sub
or
out
sub
ins
sbb
icebp
sub
adc
enter
adc
pop
lea
(bad)
mov
pop
xor
mov
and
sbb
aad
sub
xor
add
sbb
data16
sbb
cmp
in
jmp
int
dec
scas
adc
inc
adc
cmp
pushf
or
mov
fbld
and
and
xchg
jg
fist
lods
add
mov
or
mov
aad
outs
jl
inc
hlt
jno
mov
into
out
inc
or
mov
push
rcr
or
jle
clc
test
add
push
pop
xor
pop
sar
fild
hlt
std
cmp
scas
lds
cmps
inc
mov
pop
popa
xchg
xlat
fist
fisubr
pop
cmp
scas
pop
out
sub
inc
ja
xchg
sub
pop
je
mov
xchg
call
push
shr
popf
pop
xchg
mov
stc
push
clc
rcr
mov
dec
loope
arpl
sbb
and
mov
stos
movs
mov
arpl
loopne
xor
(bad)
and
out
retf
mov
or
inc
iret
pop
sbb
sbb
and
ret
sbb
inc
jbe
cmc
mov
sub
test
pop
xchg
(bad)
dec
fisttp
dec
xchg
cmps
arpl
in
xchg
lds
mov
(bad)
or
std
in
dec
scas
push
push
stos
mov
sbb
ins
test
adc
test
ins
add
into
mov
pop
jb
push
imul
push
push
push
int
inc
and
(bad)
cmp
fisttp
adc
lahf
mov
cld
jae
mov
cmp
push
lods
mov
nop
pop
inc
int
stc
add
cmc
gs
loopne
neg
imul
sub
mov
stos
and
stc
not
in
icebp
and
mov
ficom
daa
pop
inc
das
push
add
popa
mov
pop
retf
or
in
add
or
fnstenv
sti
fldenv
movs
sbb
cdq
pop
shl
dec
clc
shl
inc
mov
es
cwde
xchg
retf
(bad)
movs
mov
jno
xchg
js
cmps
jmp
fwait
jg
jmp
shl
movs
ss
or
sbb
int
out
cbw
scas
scas
inc
jae
or
cdq
sub
pop
(bad)
ins
stos
dec
test
push
inc
mov
in
fdiv
sti
cwde
adc
sbb
test
scas
mov
loop
(bad)
jmp
test
in
mov
pop
sub
adc
icebp
call
cdq
mov
test
int3
xchg
dec
inc
shl
movs
js
push
mov
xchg
out
xchg
fisubr
mov
gs
mov
sub
dec
cmp
outs
xchg
arpl
and
pop
hlt
lahf
into
ss
fs
jecxz
mov
or
mov
psubsw
lds
shl
xor
sub
jo
imul
pop
nop
int
mov
ds
jbe
mov
mov
mov
push
or
inc
xor
xchg
adc
sahf
(bad)
mov
mov
fstp
movs
out
or
sub
sub
mov
sbb
cmps
jecxz
rcl
sti
popf
lock
test
test
jno
out
mov
mov
and
sahf
arpl
stos
xor
movs
call
push
xchg
xchg
sub
aam
cdq
mov
push
sbb
cwde
aas
pop
daa
mov
mov
cwde
cli
dec
neg
xchg
lods
push
xchg
xchg
jo
push
xchg
add
popf
push
and
pop
call
sub
gs
sahf
into
addr16
mov
sub
add
push
in
cwde
rol
mov
test
cmp
dec
jns
mov
jno
sti
or
fild
cmp
adc
(bad)
sahf
repnz
xchg
jo
inc
add
mov
mov
dec
add
inc
fs
lahf
or
pop
cmps
aaa
push
or
inc
push
cmp
xchg
add
ret
out
or
aad
dec
cs
popf
push
xor
pop
out
(bad)
imul
xchg
cmp
or
pop
loop
cs
jmp
xor
inc
mov
sbb
daa
loope
repz
fdivr
arpl
hlt
ds
xor
cmp
dec
jb
loop
jno
inc
xchg
jo
ja
scas
fstp
stos
push
cli
aaa
cmp
je
(bad)
mov
iret
adc
ja
cld
fiadd
lds
rol
fisttp
and
mov
xchg
or
aas
push
(bad)
jge
mov
dec
add
jnp
in
pop
dec
call
mov
xchg
bound
popf
cli
cdq
inc
jge
sbb
cmps
ss
or
cmps
enter
sub
jns
dec
xchg
mov
mov
ret
rol
cmp
cmp
les
inc
dec
sbb
adc
fimul
adc
mov
push
sbb
ss
dec
cmp
or
stos
cmps
movs
(bad)
add
fild
mov
ficomp
retf
push
mov
std
sub
and
sete
cmps
push
jae
pop
jb
ret
lods
inc
sbb
pop
shr
aam
mov
jb
in
int
mov
cmp
xchg
jmp
dec
(bad)
aam
jmp
movs
scas
xlat
or
sub
mov
cmp
push
cld
int3
div
jge
imul
mov
or
cli
cwde
inc
ins
js
je
mov
mov
mov
mov
neg
xlat
jne
push
scas
pop
push
push
popf
add
es
xchg
and
aaa
stos
push
jecxz
add
jp
out
cmp
xlat
mov
fidiv
mov
call
cmp
add
mov
mov
(bad)
pop
test
xor
push
mov
inc
mov
adc
mov
call
rcr
push
add
test
cwde
lahf
pop
stc
mov
xor
(bad)
pushf
popf
jmp
dec
imul
xor
rol
rol
push
jg
int3
(bad)
repz
lods
mov
mov
fld
lea
not
sub
adc
repnz
cli
cwde
sahf
dec
retf
mov
in
and
dec
jecxz
pop
dec
pusha
test
dec
test
outs
fnsave
cmp
xor
xlat
call
scas
mov
pop
jle
jne
test
arpl
sar
jmp
jbe
jo
push
rcl
push
div
lock
mov
sahf
scas
dec
inc
retf
xchg
test
sar
aad
mov
or
fnstenv
xor
cmc
xor
repz
mov
fwait
mov
jae
inc
cmp
push
inc
stos
imul
imul
pop
or
mov
add
jmp
inc
adc
pop
jo
aad
das
mov
jl
or
adc
inc
pop
or
jnp
cbw
adc
rcl
fwait
jbe
push
out
les
mov
xor
xchg
nop
xchg
in
mov
imul
mov
outs
and
scas
jae
push
jl
cdq
fisub
mov
inc
scas
and
ds
and
mov
(bad)
cmps
push
std
je
dec
sub
nop
fadd
psadbw
out
cld
out
(bad)
mov
xlat
mov
add
sbb
push
ret
xlat
dec
jl
clc
push
sub
cmp
jmp
pop
mov
aaa
in
xchg
inc
nop
shr
jmp
jmp
(bad)
cs
push
std
scas
fiadd
or
pop
enter
(bad)
cmp
(bad)
stos
cmp
mov
loope
xlat
sahf
aad
stos
movs
stc
jp
pop
rcl
and
pusha
sbb
mov
pusha
mov
mov
popf
and
aam
push
lea
iret
in
ins
jb
jge
loopne
mov
fadd
cmp
xor
imul
or
jge
mov
xchg
pop
sbb
mov
icebp
aam
dec
or
push
mul
mov
sbb
sub
mov
mov
shl
inc
jecxz
int
dec
and
or
cwde
cdq
lock
mov
jg
js
mov
out
stos
sti
ret
enter
(bad)
pop
sbb
std
mov
(bad)
jecxz
les
dec
inc
mov
jecxz
add
mov
sahf
retf
int3
je
std
stc
xlat
and
cs
mov
push
mov
add
das
add
mov
pop
dec
xchg
mov
inc
mov
mov
add
jno
xlat
fcomp
jmp
adc
xor
add
iret
fs
jmp
repz
xchg
lods
out
xchg
movs
or
int3
fwait
pop
adc
xchg
push
inc
js
adc
and
retf
or
push
xchg
xchg
aad
aas
inc
sub
out
shr
jno
push
cmc
loopne
push
dec
mov
push
les
sbb
and
sbb
movs
mov
push
lds
test
push
jbe
pop
call
sub
je
(bad)
test
pop
sub
inc
(bad)
std
inc
xchg
push
xor
dec
shl
cmp
cdq
mov
xor
xlat
call
lods
pusha
adc
inc
in
or
int
and
aaa
sti
cdq
rcr
pop
adc
sub
popa
cmc
jg
call
mov
pop
xchg
dec
pop
shr
fwait
data16
cmp
add
test
out
or
adc
xor
push
loopne
add
add
shr
cmp
adc
inc
call
and
mov
adc
xchg
imul
cmp
cmp
cmps
ja
mov
mov
sahf
xor
cmp
cmps
push
stos
fcom
outs
inc
xor
xor
mov
scas
sbb
lea
ss
add
mov
rcl
cli
rol
mov
cli
xor
inc
imul
jg
xchg
xchg
xchg
call
mov
sahf
bound
inc
mov
adc
leave
addr16
mov
loopne
pop
jp
and
mov
push
sub
inc
and
add
inc
fwait
cdq
sub
mov
cmp
jb
pop
rol
mov
pop
rol
mov
mov
jge
aad
(bad)
mov
mov
sbb
(bad)
into
jge
or
sub
cmp
imul
add
xchg
jns
pop
adc
jns
push
aas
add
cli
push
adc
rcr
push
adc
fcomi
movs
add
or
push
mov
xchg
ja
dec
jmp
add
jmp
xor
sbb
dec
sub
hlt
adc
jno
call
cmp
(bad)
pushf
fcmovnbe
jns
pop
mov
push
test
push
push
lds
add
(bad)
push
fldenv
sar
call
mov
adc
arpl
push
int
mov
dec
(bad)
pop
push
cmp
xchg
pop
or
sbb
pusha
int
(bad)
je
hlt
ja
mov
(bad)
sub
les
aaa
loop
pop
out
shl
push
call
paddw
and
popf
addr16
sub
retf
inc
aaa
(bad)
je
jmp
pop
mov
lds
mov
add
mov
out
iret
sbb
sub
xchg
and
cmp
add
js
imul
mov
sub
into
pop
xlat
imul
fcomp
ret
fdiv
push
xor
iret
cli
or
jle
test
pop
jmp
xchg
es
push
xchg
xor
mov
js
mov
dec
in
add
fs
ja
mov
shl
jle
out
push
lods
setnp
lea
retf
aaa
sbb
cs
cmps
imul
mov
retf
mul
mov
cmps
xchg
jo
cmps
add
inc
dec
push
cmp
or
mov
push
ins
push
mov
and
es
cmc
and
mov
mov
sub
in
jle
mov
ins
das
das
movs
(bad)
in
mov
dec
sbb
enter
outs
push
ds
jnp
push
jbe
mov
or
adc
xor
adc
adc
jo
test
mov
jno
jge
mov
jle
pop
pop
cmp
cmp
icebp
enter
adc
int
mov
cmp
in
inc
xchg
jae
pop
xor
(bad)
mov
(bad)
and
and
sub
xchg
scas
push
std
pop
(bad)
mov
xlat
cmp
pop
xlat
out
sar
and
movs
jo
stos
fs
xchg
mov
icebp
dec
bound
xor
inc
cmp
imul
cmp
shr
jge
sbb
mov
push
xchg
pop
test
mov
pop
(bad)
lods
mov
inc
mov
xchg
mov
pop
scas
dec
xchg
sbb
xchg
sub
mov
mov
addr16
push
mov
push
push
jmp
adc
stos
test
inc
(bad)
loopne
ins
jb
(bad)
movs
push
js
stos
pop
or
ja
leave
imul
(bad)
fdiv
cwde
xor
mov
ins
sar
adc
mov
dec
popa
clc
aaa
retf
retf
aad
jae
xchg
js
outs
jne
inc
and
fadd
out
sub
bnd
leave
cmc
mov
and
cmc
data16
mov
push
cld
imul
sbb
xor
fisubr
loope
pusha
adc
add
rol
jno
and
inc
es
stc
push
shl
mov
xchg
inc
mov
sbb
or
icebp
xlat
adc
push
lock
push
ret
pop
shl
das
sahf
js
pop
out
cmps
lea
add
js
mov
dec
gs
mov
fnstenv
sub
jns
jbe
adc
shl
xor
ret
push
es
adc
pop
ret
fs
scas
xchg
std
mov
js
lds
imul
fidiv
icebp
sbb
pop
or
mov
(bad)
xor
neg
xor
dec
pop
dec
fdivr
and
int3
jae
ds
mov
xlat
je
xor
or
cwde
xchg
cmps
or
cmp
push
(bad)
imul
out
(bad)
fisub
jle
or
int3
ins
add
xchg
or
xor
xor
xchg
inc
std
sahf
mov
stc
xor
repz
cmp
bound
int
push
cld
adc
jno
cli
movs
loop
push
push
xlat
ds
xor
test
cmps
fdivr
push
int3
mov
imul
cwde
outs
xchg
pop
clc
imul
mov
int
and
push
inc
mov
push
add
add
inc
aam
cld
in
xor
ins
add
ds
sti
out
(bad)
jle
int
fistp
cli
cmp
inc
or
mov
xchg
or
(bad)
aam
jae
jae
int3
or
xchg
mov
xchg
loop
inc
ins
pop
sbb
ror
pop
dec
scas
add
sub
mov
push
xchg
mov
sar
pop
mov
dec
icebp
js
arpl
mov
cli
xor
add
mov
test
ror
inc
aaa
in
sti
or
pop
cmp
push
out
je
add
out
fadd
jo
xor
(bad)
sti
sbb
dec
movs
imul
inc
push
call
push
xor
inc
pop
xor
fwait
imul
aad
mov
and
dec
rol
(bad)
xchg
loopne
or
mov
(bad)
jne
in
push
fldcw
mov
cmp
adc
dec
enter
mov
fidiv
mov
mov
dec
pop
sar
xchg
mov
mov
or
adc
cli
(bad)
mov
les
push
sub
inc
add
pop
cld
test
ret
in
cli
icebp
daa
(bad)
mov
mov
lahf
test
(bad)
add
fstp
out
mov
cld
fs
out
jbe
cmp
(bad)
dec
mov
movs
lahf
bound
(bad)
mov
cmps
aaa
jae
ret
test
repz
cld
call
mov
and
push
cmp
push
jp
cmp
mov
mov
push
(bad)
mov
call
push
sar
mov
xor
test
(bad)
sbb
aaa
les
mov
xchg
adc
loope
jae
shl
pop
scas
(bad)
rcr
jg
cli
mov
ret
xor
sbb
test
or
lahf
xlat
nop
(bad)
inc
push
adc
xchg
cmc
scas
lods
and
or
aad
and
add
popa
test
jnp
das
and
cmps
or
bsr
inc
xchg
fs
mov
inc
push
pop
sub
sbb
jecxz
adc
test
pop
leave
pop
cwde
ficomp
dec
les
adc
xchg
mov
jmp
(bad)
mov
mov
adc
jp
inc
xor
out
xor
(bad)
adc
or
inc
and
lahf
imul
push
test
sub
cmps
(bad)
outs
cwde
bound
and
sub
out
or
pop
gs
and
test
sbb
cmp
pop
dec
div
mov
and
mov
loopne
shl
mov
add
int3
(bad)
rcl
add
gs
loopne
jg
popa
(bad)
cmp
add
iret
pop
sbb
xlat
mov
xchg
xchg
aas
mov
mov
adc
push
sub
inc
dec
mov
(bad)
cmp
outs
mov
mov
pop
add
call
ins
cmp
retf
cmp
mov
jnp
cwde
or
clc
xor
inc
or
dec
das
add
push
sub
test
call
not
cmp
leave
fidivr
call
inc
sbb
and
out
pop
mov
aad
popf
imul
sbb
and
xor
xchg
imul
dec
ficom
and
fwait
mov
pop
fsub
mov
test
push
pop
mov
repnz
and
push
inc
sub
retf
and
xchg
lock
mov
stc
or
xchg
and
sbb
lds
jnp
ror
(bad)
mov
(bad)
in
and
je
retf
sub
aam
push
inc
mov
cmps
inc
ret
js
or
adc
jg
enter
shl
sub
arpl
repz
push
mov
ss
enter
mov
pop
mov
stc
aas
and
test
cmc
xor
inc
mov
push
push
pop
(bad)
cmp
jae
fs
imul
push
adc
push
(bad)
sub
and
xchg
out
pop
or
mov
je
pushf
push
fmul
jp
pusha
push
dec
sub
outs
addr16
cs
scas
add
mov
ds
jmp
(bad)
ds
jns
fcom
sbb
aas
mov
mov
outs
inc
ja
mov
push
jb
(bad)
cmp
fsub
inc
aam
es
xor
ins
aam
das
add
(bad)
in
xchg
or
ror
xor
fidivr
jg
adc
ret
mov
xchg
dec
jnp
ja
ja
jle
dec
(bad)
adc
adc
or
mov
mov
sub
and
int
inc
add
gs
(bad)
imul
(bad)
jnp
jbe
idiv
jno
loopne
lods
mov
fld
movs
and
push
aaa
jno
mov
mov
xor
sbb
scas
add
inc
std
sub
addr16
por
sbb
sub
pusha
popa
adc
push
mov
dec
ja
inc
or
(bad)
jns
or
js
rol
stos
mov
loopne
mov
sbb
mul
call
in
in
not
fcomp
push
lahf
xor
jo
or
pop
push
fmul
dec
popa
add
fcom
push
into
sti
je
in
in
lock
cmp
mov
sub
jo
ret
leave
pop
add
dec
inc
syscall
les
mov
mov
add
popa
out
and
popf
pop
push
ins
jp
rol
cmp
adc
push
mov
and
mov
mov
push
jnp
fsubr
xor
ins
jns
sbb
jmp
push
shl
dec
xor
les
or
stc
ds
lahf
ror
adc
outs
mov
lds
push
es
dec
xchg
pop
out
mov
jp
mov
cdq
test
repnz
mov
dec
and
outs
mov
fnstcw
arpl
retf
(bad)
les
ins
fwait
mov
call
int3
adc
jnp
iret
xchg
jl
int3
cmp
fidiv
push
mov
inc
movs
adc
xchg
(bad)
mov
sbb
push
stos
push
test
mov
mov
pop
jbe
daa
push
pop
ins
xchg
out
loop
mov
add
mov
pop
aaa
iret
aaa
jae
nop
or
add
mov
(bad)
fst
add
retf
push
hlt
xchg
xchg
sub
mov
add
mov
test
pop
gs
or
pop
adc
ret
or
adc
pop
mov
add
test
mov
mov
leave
imul
stos
out
lods
mov
add
xchg
jno
mov
pop
iret
jge
push
ret
sub
or
push
rol
mov
jae
pop
add
pop
dec
dec
je
shl
jl
mov
(bad)
sub
xor
jmp
push
jns
inc
mov
jno
sub
mov
adc
mov
xchg
div
repnz
scas
mov
cmp
add
cli
and
mov
or
lahf
mov
jg
cmp
cmp
repnz
mov
mov
test
mov
inc
cli
xchg
mov
lahf
popf
push
stc
adc
inc
xchg
pop
xor
shl
jno
gs
mov
adc
cs
and
(bad)
icebp
lahf
ins
sbb
dec
imul
cli
adc
adc
lods
mov
hlt
mov
sbb
and
outs
adc
into
xchg
div
in
or
ret
loop
adc
push
pop
or
in
xchg
popa
cmc
cmp
xor
and
out
mov
scas
cdq
inc
test
xchg
ins
outs
ret
jg
ret
out
jmp
cmp
rcr
inc
fisttp
movs
fs
jge
pop
mov
mov
jne
pop
adc
int3
jp
mov
bound
mov
or
add
popf
daa
jmp
fistp
sub
sete
aad
scas
dec
cmp
jge
mov
bound
test
out
sbb
jle
data16
out
repnz
mov
jae
ror
add
xor
mov
retf
sbb
fs
mov
xor
lods
push
dec
pop
jecxz
mov
das
mov
frstor
mov
or
pop
aaa
inc
cli
and
mul
pop
enterw
wbinvd
(bad)
pop
rol
loope
je
and
test
cli
sbb
inc
push
ins
jle
add
jo
in
test
sub
sbb
push
inc
dec
pop
inc
and
push
fnstenv
mov
inc
mov
sub
adc
fdiv
jne
fcomp
pop
scas
ins
adc
cli
push
sub
xchg
repz
(bad)
mov
push
ins
adc
xchg
and
pusha
out
mov
ja
mov
or
sbb
xchg
bound
mov
add
icebp
add
or
fwait
jg
jg
scas
rcr
mov
jno
pushf
xor
push
or
mov
stos
cld
int
mov
call
pop
jno
pop
(bad)
gs
movs
stc
fild
clc
mov
sub
int
loopne
test
dec
pop
std
arpl
jo
jmp
add
mov
movs
add
push
inc
and
inc
inc
or
mov
or
pop
lods
test
(bad)
inc
add
ins
mov
lea
cmp
arpl
aad
popa
pop
dec
or
sti
inc
(bad)
lea
pop
dec
shr
push
sbb
push
lods
inc
sub
cmp
fwait
fs
sahf
sbb
iret
mov
repz
cmp
pop
adc
ret
mov
push
out
jb
jo
add
cmp
pop
mov
pop
sbb
ins
(bad)
cmp
ss
cli
adc
imul
fucom
add
stos
in
pop
and
cmp
dec
mov
dec
ins
add
and
movs
adc
push
sar
adc
jmp
or
push
aam
pop
rol
ss
push
leave
movs
xchg
cli
(bad)
arpl
mov
inc
rcl
call
jb
sub
(bad)
push
push
frstor
bound
test
sub
mov
jo
repz
clc
(bad)
loop
loop
test
xor
dec
shr
jp
mov
retf
push
test
mov
cmps
or
fiadd
std
xor
fistp
xchg
add
ror
mov
mov
lahf
repnz
add
add
iret
push
in
sub
inc
ins
mov
sub
sub
sub
mov
out
jmp
retf
repnz
mov
inc
jmp
jne
xchg
shl
push
scas
sar
loope
cwde
inc
adc
ds
add
xor
stc
shr
pop
sub
in
imul
ja
(bad)
lahf
or
std
repz
lods
inc
cmps
mov
add
repz
inc
jp
out
int3
jns
push
inc
fsubp
xlat
cmps
inc
sbb
stos
jge
push
cmps
add
fmul
adc
call
dec
(bad)
sar
int
mov
inc
int3
jne
pop
add
iret
push
jno
cdq
pushf
gs
dec
jo
retf
(bad)
mov
push
data16
sbb
mov
sahf
jmp
and
and
or
inc
mov
ret
push
pcmpeqd
and
aad
cmp
fld
add
das
jmp
mov
das
(bad)
jnp
popa
push
ins
cmp
add
sbb
and
jp
lods
xlat
std
sahf
mov
imul
lock
in
xor
or
cmps
std
sar
je
jmp
imul
or
icebp
in
sahf
popa
add
popf
fwait
xchg
cwde
xchg
push
sbb
mov
jns
sbb
stc
mov
mov
fidiv
retf
fninit
inc
ret
ins
popf
add
add
mov
cmp
stos
fs
scas
pop
out
add
mov
imul
fidivr
sti
std
jecxz
xchg
sub
retf
cmp
aaa
fldenv
xor
retf
xchg
mov
pushf
into
popf
pusha
shl
push
gs
call
xchg
adc
jns
loop
lahf
daa
sub
jno
inc
cmp
imul
das
push
popf
mov
mov
shl
sahf
in
cmps
in
cmp
(bad)
in
sub
and
push
mov
(bad)
aam
es
mov
xor
xchg
or
xor
mov
lds
jmp
and
or
je
push
xor
pop
or
ret
mov
xchg
shl
dec
loopne
ret
mov
push
(bad)
daa
es
sub
xchg
inc
jp
test
dec
push
mov
fstp
xchg
sub
popf
pushf
cmp
pop
xor
daa
(bad)
cmp
dec
adc
mov
pusha
and
ja
jo
sbb
inc
rcr
shl
aas
not
dec
xor
xchg
lahf
mov
xor
scas
push
cs
ss
or
daa
inc
popf
enter
loopne
dec
sbb
add
pop
xchg
out
mov
loope
fidiv
inc
int3
or
inc
xchg
stos
mov
jbe
fwait
inc
rcl
cmps
xor
pop
push
ret
mov
sub
inc
test
push
aam
mov
shl
sti
dec
cmp
cdq
pop
pop
dec
fbld
inc
loop
adc
sub
shr
movs
lock
jo
bound
or
add
movs
shl
mov
gs
iret
push
aaa
xchg
mov
push
dec
mov
sub
push
and
aad
arpl
lods
in
mov
data16
pop
pusha
out
cwde
and
cwde
popf
push
mov
ja
inc
lea
xchg
ror
mov
js
out
and
mov
cmps
sar
inc
mov
retf
mov
bound
dec
stos
mov
arpl
loop
jmp
(bad)
jl
sub
in
cmps
repnz
push
aaa
int3
jbe
mov
iret
add
call
fbstp
jmp
push
jae
call
add
or
push
bnd
loope
or
fist
stc
push
push
dec
int
push
and
mov
mov
ret
mov
fwait
push
pop
loope
jle
into
mov
or
scas
test
push
call
jnp
add
sbb
gs
lock
push
mul
enter
mov
das
cmp
inc
pushf
stc
inc
shl
jb
call
inc
ss
loope
in
dec
jl
cwde
inc
jnp
lahf
mov
pop
retf
xchg
mov
aas
retf
pop
xchg
lods
adc
add
popa
xor
std
(bad)
loopne
and
xchg
loope
xchg
retf
movsx
lods
jg
xor
rol
aaa
sub
cmps
xor
push
push
jae
mov
ret
adc
jmp
ins
adc
jns
and
out
test
ret
push
popf
jmp
xchg
inc
dec
(bad)
xor
test
mov
sahf
test
adc
lods
movs
mov
xor
pop
sti
inc
jnp
mov
cmp
retf
cmps
mov
jecxz
aas
push
fsub
sbb
ins
pop
sbb
cld
aas
retf
ja
ret
inc
sbb
adc
pop
xor
cwde
xchg
or
dec
imul
jo
dec
enter
xor
les
cmps
or
lods
mov
rcl
xor
movs
sub
xchg
int3
or
inc
icebp
pop
dec
jle
mov
dec
mov
and
or
or
inc
xor
retf
cmp
inc
pop
cmp
mov
sbb
mul
push
(bad)
or
ret
int
(bad)
cli
bndstx
sti
int
and
jg
pop
push
(bad)
add
dec
mov
inc
jmp
ins
add
add
mov
push
mov
daa
cwde
xchg
dec
xchg
adc
fld
mov
pop
inc
mov
fiadd
ret
sub
out
es
sub
pop
inc
pop
adc
push
cmp
outs
jbe
mov
jmp
and
ror
(bad)
(bad)
xchg
push
cmps
cmps
and
sti
jg
aad
push
xor
test
pusha
mov
mov
jg
adc
xchg
xchg
add
mov
mov
mov
push
cld
retf
dec
jle
pop
sbb
iret
and
and
adc
mov
icebp
sub
scas
pop
inc
sub
popa
mov
out
push
(bad)
fdiv
xchg
pop
repnz
pushf
pop
mov
or
lahf
mov
idiv
cs
mov
jge
mov
xchg
stc
retf
mov
inc
sub
lods
ss
enter
rcl
jl
jne
ja
aaa
addr16
hlt
sbb
xchg
sub
pop
test
pushf
push
loopne
xor
leave
jg
ret
inc
ss
into
mul
out
pop
dec
jns
std
ror
pop
push
adc
lods
pop
lock
es
hlt
pop
(bad)
pop
jbe
enter
aaa
xchg
js
and
dec
and
xchg
ss
xor
es
inc
mov
xor
cmp
stos
push
and
std
dec
loop
push
jnp
push
inc
stos
push
pop
push
leave
out
and
pushf
xor
shl
rcl
push
add
out
push
mov
sub
(bad)
div
pop
sub
pop
inc
xor
ror
in
mov
in
mul
sbb
xchg
inc
(bad)
loopne
les
mov
sahf
mov
xchg
adc
je
cdq
lock
mov
jmp
iret
xchg
addr16
inc
push
xchg
inc
mov
push
pusha
test
or
(bad)
xchg
or
loopne
xlat
xchg
adc
sbb
dec
push
(bad)
(bad)
cmp
(bad)
cld
fidivr
scas
xchg
in
aam
and
jns
mov
outs
add
push
and
xor
retf
push
xchg
das
rol
mov
outs
pop
xor
imul
fcom
cmc
inc
cmp
sub
cs
pop
mov
xor
dec
xchg
daa
movs
frstor
sbb
push
sbb
movs
outs
sbb
push
sub
push
cmps
pop
pop
mov
mov
pop
cmp
xchg
cs
(bad)
in
mov
or
pop
enter
mov
pop
(bad)
popa
retf
or
push
pusha
adc
fidiv
repnz
mov
inc
sub
cld
xor
fisub
sbb
loop
xor
sbb
and
outs
out
ins
loopne
int
xchg
aam
(bad)
mov
sub
mov
push
aaa
pop
hlt
int
out
nop
adc
retf
repz
addr16
mov
adc
outs
imul
mov
jg
sahf
scas
fnstsw
fimul
fist
mov
sbb
pop
or
and
int
(bad)
dec
xchg
lock
xchg
and
and
cmp
jp
dec
shr
loope
fdivr
retf
jle
call
bound
pop
xchg
js
out
jb
aam
ds
push
xchg
fidivr
inc
int3
test
dec
stc
loop
daa
push
ficomp
stos
es
adc
jne
sbb
xchg
add
mov
mov
mov
push
jmp
outs
xchg
iret
or
aas
add
loop
mov
inc
jne
mov
loop
into
test
mov
(bad)
std
cli
jmp
(bad)
retf
and
fstp
cmps
sbb
mov
icebp
in
js
(bad)
jnp
call
push
pusha
data16
jmp
and
(bad)
out
outs
retf
test
cmc
and
daa
cwde
cmp
push
cdq
mov
inc
mov
inc
pop
mov
sub
js
mov
jg
scas
cmps
scas
pop
test
repz
cmp
xchg
ins
outs
cli
ror
icebp
out
xor
lahf
repnz
cmp
dec
push
or
ds
cmp
inc
fmul
in
iret
in
mov
xor
inc
jne
in
loop
dec
pop
aas
or
add
jecxz
and
int
push
int
fstp
dec
loopne
call
std
loope
ret
sub
(bad)
stos
in
lods
cld
push
les
add
sar
mov
data16
jnp
pop
test
cmc
push
lds
mov
sub
jmp
push
loope
in
sub
mov
inc
popa
mov
push
fist
cld
ins
xchg
nop
sbb
pop
cmp
cdq
lock
mov
sub
push
xchg
sub
adc
adc
icebp
(bad)
jne
mov
xlat
push
(bad)
cld
addr16
sub
icebp
sbb
or
sbb
mov
lods
int
call
call
jl
mov
inc
sbb
scas
cmps
dec
ins
pusha
sti
mov
or
pop
xor
inc
repz
mul
mov
dec
or
lock
sub
icebp
jl
pushf
cmp
sub
xchg
mov
stos
jnp
shl
xor
jo
or
enter
test
and
(bad)
jp
jecxz
mov
jp
sub
movs
and
jnp
jae
or
jmp
sub
out
pop
inc
shl
cmp
jmp
(bad)
call
mov
in
cdq
push
mov
(bad)
mov
movs
stc
cwde
inc
out
mov
popf
fwait
jne
int3
jl
mov
jb
sub
rcr
jp
(bad)
rcr
cmp
or
fucomi
adc
jmp
fbld
imul
pusha
or
jp
add
push
hlt
inc
leave
sub
popf
inc
or
iret
or
adc
ds
jle
push
pop
dec
and
ret
imul
jp
cli
test
inc
and
dec
mov
push
mov
scas
scas
dec
popa
dec
fst
jo
call
pop
cmp
das
loope
mov
mov
xor
(bad)
and
(bad)
pop
sbb
push
lea
ins
or
aad
fistp
scas
jns
jns
js
cmp
cmps
mov
in
rol
push
inc
stos
adc
ret
out
nop
or
add
(bad)
daa
jge
daa
mov
jl
xchg
stc
out
mov
mov
push
pop
test
fnstsw
pusha
and
fwait
mov
shr
add
pop
or
lods
dec
sbb
dec
inc
movs
sbb
pusha
lods
je
jg
inc
mov
dec
or
pop
sbb
or
sub
mov
stos
xor
cmc
xchg
mov
inc
xchg
lahf
add
jle
fsubrp
js
jmp
push
pop
sbb
adc
cli
add
xlat
push
mov
mov
iret
xchg
mov
sbb
xchg
(bad)
in
or
ja
dec
rol
gs
sub
sar
ins
jmp
pop
imul
mov
xor
test
inc
push
shl
fldenv
jne
daa
jmp
mov
outs
jl
test
cli
and
xor
cmps
loopne
fwait
dec
mov
gs
inc
adc
(bad)
fnstcw
rol
add
lea
jns
mov
mov
scas
popa
mov
xor
adc
ds
outs
push
cmp
push
add
push
imul
dec
scas
or
cs
or
pop
xor
lock
mov
mov
hlt
stc
cmp
inc
std
push
and
mov
sbb
cwde
pop
jb
and
out
push
cwde
adc
aas
sbb
cli
movs
sub
icebp
pop
inc
jge
test
jb
fxam
ja
int3
add
icebp
stos
loope
xor
inc
mov
jns
gs
mov
test
mov
mov
loope
ret
ins
lock
mov
pop
ss
jae
cwde
dec
retf
in
adc
pop
mov
sub
popa
or
push
in
scas
lock
shl
(bad)
jge
push
mov
xor
pop
mov
xor
nop
jmp
pop
fidivr
dec
int
inc
xor
(bad)
movs
push
loopne
hlt
lods
neg
sub
in
daa
ficomp
add
ja
sbb
out
outs
ret
push
mov
mov
mov
push
test
daa
or
adc
arpl
pop
or
(bad)
mov
cmp
rol
loop
push
ret
pop
leave
jnp
repz
pop
mov
call
mov
mov
cmp
or
cmps
pop
lahf
or
shl
out
test
mov
push
cmp
sub
mov
or
and
retf
cdq
jbe
shl
inc
cli
cli
addr16
mov
fsubr
call
mov
inc
arpl
(bad)
stos
cs
xor
cmc
and
push
xchg
loop
mov
mov
pop
pop
xor
inc
clc
loop
dec
mov
jl
jge
cld
pop
(bad)
inc
ins
mov
out
movs
inc
inc
pop
inc
(bad)
jbe
sub
fcomp
call
in
adc
aaa
popf
js
test
sbb
and
fs
adc
inc
ret
lea
jle
daa
xor
or
pop
jle
sti
add
xor
imul
mov
jno
cmps
jg
xor
add
addr16
mov
lods
sahf
es
mov
bound
sar
loop
sbb
std
scas
pop
ret
retf
inc
xor
push
jnp
das
fwait
imul
ror
or
mov
mov
iret
pop
cmp
sbb
sbb
pop
adc
push
push
ret
cmps
pop
jns
add
js
cwde
push
cmovb
aaa
dec
push
xchg
psubd
aas
std
stc
aad
arpl
push
or
push
enter
cmp
and
repz
cmp
mov
pop
or
jne
mov
cld
js
(bad)
and
aad
dec
pop
push
mov
jecxz
shr
dec
lds
mov
fisubr
(bad)
xor
jle
cs
enter
ss
stc
push
dec
cmp
xchg
cld
popa
pop
cmp
cmp
mov
pop
js
xor
cmp
jl
cmp
jo
mov
or
retf
loop
std
cmp
in
into
popf
repz
pop
leave
inc
adc
cwde
nop
mov
aaa
mov
pop
mov
mov
fnstcw
stos
sahf
outs
xlat
aas
jg
sub
add
les
stos
out
into
mov
inc
xchg
jbe
mov
lahf
push
cmp
mov
pusha
jmp
adc
adc
call
(bad)
iret
sub
jne
ds
outs
sub
and
int
fild
push
jo
adc
aaa
pushf
xor
retf
and
cdq
outs
ret
sar
sub
ror
push
imul
push
mov
cmp
stc
adc
jg
pop
jns
aad
inc
and
inc
fisttp
mov
xor
fsub
inc
mov
test
pop
je
data16
dec
mov
inc
or
inc
loop
jo
or
jmp
add
jmp
cmp
lods
adc
je
dec
xchg
and
cmp
rol
je
cld
loopne
arpl
and
cdq
test
bound
shl
(bad)
les
mov
dec
cdq
ret
clc
pushf
cli
aaa
movs
int3
pop
in
js
inc
mov
setae
and
xchg
sbb
fst
shl
mov
js
fld
pusha
and
hlt
pop
mov
xor
inc
xchg
inc
fst
dec
(bad)
pop
adc
retf
(bad)
sub
inc
into
and
xor
inc
cs
arpl
retf
pop
stos
sbb
or
mov
outs
pop
lods
stc
call
pop
nop
mov
and
sysret
add
xlat
stc
inc
fwait
popf
mov
call
sahf
inc
mov
adc
fmulp
push
cmc
fild
mov
loopne
pop
pushf
pop
mov
xor
jne
push
inc
imul
sbb
pop
and
push
nop
adc
pusha
cmps
dec
inc
pop
pop
mov
inc
adc
mov
cmps
movs
mov
jecxz
pop
shr
add
fnstenv
dec
mov
and
out
push
xlat
and
icebp
jmp
add
mov
adc
sbb
pop
pop
sbb
xchg
pushf
fisub
lea
xlat
stos
hlt
stos
mov
test
mov
retf
movs
pop
into
pop
cli
fst
lds
retf
sub
into
mov
mov
inc
stos
cs
add
test
xor
jne
mov
outs
pop
cmp
addr16
lods
stc
or
retf
loopne
mov
inc
push
aas
inc
inc
out
mov
push
sbb
xchg
xlat
adc
push
shl
and
rcl
mov
sbb
sti
mov
mov
jae
leave
bound
add
inc
fs
ds
mov
push
xchg
test
push
push
out
call
pop
or
mov
or
inc
retf
pusha
ror
and
hlt
jo
add
(bad)
(bad)
test
call
aad
idiv
adc
pop
aaa
arpl
and
jne
repnz
jl
jmp
mov
jo
dec
add
cli
lods
test
cmp
and
xlat
or
cdq
out
stos
sbb
or
mov
or
jp
inc
daa
inc
int
jb
ins
inc
jo
out
adc
pop
ja
cmp
push
fs
mov
dec
cmp
popf
dec
push
sbb
sbb
cmc
ficom
mov
inc
inc
ins
pop
push
aad
into
push
mov
fcomp
xchg
sbb
sbb
mov
mov
sub
cmp
pmaxsw
call
lahf
dec
(bad)
push
pop
adc
pusha
push
xchg
xchg
ror
stc
cmp
(bad)
(bad)
or
and
mov
cld
mov
inc
ins
add
(bad)
jge
andps
repnz
push
ins
mov
(bad)
bsr
loope
ds
cmc
add
adc
xchg
cmc
cmp
fs
out
sub
mov
and
sub
cmp
fsubr
mov
sar
inc
mov
sub
mov
test
sbb
xor
xchg
(bad)
mov
mov
enter
cmp
and
mov
mov
or
repz
inc
sbb
arpl
repnz
xor
and
(bad)
rol
sti
add
xor
retf
retf
sar
shr
lods
fistp
or
mov
mov
inc
jmp
cmc
das
or
adc
mov
test
iret
ja
ins
jmp
std
sbb
jecxz
(bad)
fdivr
inc
or
hlt
push
cmp
pop
xor
jo
adc
pop
jp
popf
out
pusha
cdq
or
cdq
test
cmp
adc
jae
daa
push
out
inc
add
add
mov
loop
mov
popa
xchg
cmp
jmp
(bad)
in
les
pop
inc
outs
or
add
jle
int
outs
fnstcw
and
jg
xchg
inc
or
mov
call
jb
dec
pop
cli
push
pushf
add
sar
ja
fmul
iret
cmp
fs
sbb
std
or
sbb
fist
ins
cmp
jne
test
jmp
sbb
lahf
jnp
loope
sub
rcr
xchg
int
mov
xlat
cmp
in
push
aad
xlat
or
push
or
or
xchg
mov
mov
push
pop
rol
mov
test
enter
fs
frstor
sub
xchg
into
push
xor
xchg
push
sub
mov
and
jge
outs
inc
movs
mov
mov
dec
mov
pop
xor
loopne
xchg
mov
and
add
aam
les
mov
xlat
or
xchg
ja
and
xchg
enter
adc
mov
das
(bad)
jmp
push
or
adc
adc
fld
repz
aam
icebp
or
cs
data16
cmp
arpl
mov
mov
(bad)
icebp
call
jge
ror
inc
add
daa
stc
(bad)
jp
inc
neg
cdq
adc
rcr
jge
push
add
push
push
sub
iret
mov
mov
stc
mov
in
xor
hlt
add
icebp
pop
sub
(bad)
outs
(bad)
data16
inc
int3
adc
movs
cld
add
jo
sahf
popa
rcl
pop
adc
jg
push
jns
xchg
dec
stos
mov
shr
push
dec
fisttp
pop
fwait
push
cld
lahf
xor
adc
jne
inc
aam
cmp
call
mov
call
push
cmp
mov
push
push
jns
cmp
mov
dec
mov
leave
int3
int3
mov
pop
outs
ret
movs
mov
mov
enter
and
jmp
ret
jb
xchg
push
sbb
outs
clc
adc
push
mov
mov
dec
fisttp
add
popa
fist
adc
sub
xchg
retf
mov
outs
repz
mov
nop
jo
mov
add
lods
xchg
outs
mov
xchg
in
shl
stc
out
loopne
inc
sbb
adc
mov
xor
mov
sub
cmp
fs
xor
add
les
and
out
jbe
into
mov
in
sub
test
ja
in
jb
dec
xor
jne
cmp
pop
fmul
jo
cmp
pop
rcl
out
jmp
in
out
mov
rcl
cmp
pop
out
sub
jb
dec
xchg
push
cmp
sbb
or
mov
push
xchg
data16
inc
cmps
ja
imul
aas
mov
lahf
jae
or
bound
addr16
push
repnz
fmul
mov
mov
adc
pop
mov
fwait
or
shl
jge
or
dec
mov
jo
std
dec
retf
xchg
sahf
loop
dec
aad
sti
push
mov
or
pusha
ins
add
call
loop
loopne
pusha
sti
call
imul
std
cmp
xor
addr16
mov
cld
inc
movs
xor
retf
retf
jb
js
mov
sbb
adc
nop
mov
xor
mov
dec
and
cmp
ret
stos
push
(bad)
(bad)
lods
fistp
push
out
add
dec
inc
sar
xor
sbb
(bad)
mov
push
add
or
ss
jb
or
cmp
lahf
dec
pop
cmp
pop
jl
jo
xchg
pop
mov
cwde
ins
clc
push
mov
mov
jmp
mov
enter
pop
mov
pop
jge
push
scas
cmp
je
mov
sahf
std
ds
aam
push
das
xor
sub
mov
sub
mov
fmul
dec
adc
lahf
enter
cmp
cmp
cmp
cdq
ins
cdq
out
mov
sub
bound
mov
inc
xor
mov
(bad)
push
imul
into
cmp
inc
test
adc
push
push
cmp
add
push
jp
mov
pop
pusha
(bad)
jb
pop
in
loop
jae
shl
mov
test
mov
je
xchg
push
imul
loop
xchg
nop
inc
inc
out
sbb
cmp
push
ja
addr16
xor
call
jne
adc
nop
popa
or
imul
push
pop
out
dec
pop
sbb
mov
in
repz
pop
out
cs
mov
fwait
add
push
test
adc
mov
shl
(bad)
aam
test
loop
shr
push
mov
fcom
mov
mov
test
push
dec
sub
(bad)
in
sub
ins
hlt
xor
cmp
mov
mov
cli
in
(bad)
push
xlat
sub
cmc
jbe
mov
test
jecxz
push
sub
js
mov
pop
shr
and
(bad)
lock
cli
jl
push
lea
add
pop
jno
sub
mov
ss
fcom
ret
cli
(bad)
inc
stos
ins
lds
inc
cmp
std
fldenv
fsub
push
aas
or
scas
popf
cdq
pushf
loopne
movs
mov
sti
pop
or
test
push
shl
and
mov
in
adc
mov
xor
sub
cmp
loopne
dec
sub
in
jle
mov
popa
pop
sbb
jmp
mov
repnz
js
inc
jl
pop
ret
jecxz
add
dec
ficom
pop
bound
xor
dec
mov
inc
lock
sbb
pop
cmp
ret
ret
sbb
adc
sub
jns
les
sub
js
cmc
mov
mov
out
popa
shl
xor
mov
ja
pop
rcl
idiv
jb
mov
jae
sub
mov
jl
dec
sti
dec
lds
cwde
cs
test
mov
setle
into
push
fwait
sbb
(bad)
(bad)
jo
test
adc
out
mov
pop
or
je
pop
dec
pusha
mov
or
adc
dec
mov
out
push
ss
call
mov
xchg
in
in
dec
movs
lds
xor
ret
mov
or
jl
and
jae
shl
dec
popa
or
jae
jno
push
pop
mov
cld
stc
cwde
push
mov
pop
jecxz
leave
adc
loop
nop
dec
loope
pusha
sbb
xchg
jecxz
std
out
loope
sub
push
lods
icebp
xchg
xor
mov
aas
mov
cwde
icebp
dec
stc
xor
or
fs
and
movs
out
adc
mov
stc
pop
std
in
and
aas
jnp
jl
sar
adc
xor
cld
sbb
call
jg
rcr
inc
cmps
nop
mov
lods
fisttp
pop
mov
mov
mov
int3
xchg
sbb
jne
push
xchg
sub
ficomp
mov
adc
int3
imul
pop
inc
xchg
in
sbb
adc
cmp
pop
sub
mov
retf
mov
aas
mov
mov
imul
mov
cld
sub
mov
into
add
in
ror
push
xchg
xor
add
inc
cmp
add
mov
jp
mov
in
jp
(bad)
jns
retf
icebp
push
std
ss
ret
in
jne
pop
shr
loopne
das
ja
jmp
(bad)
aaa
sbb
dec
jl
test
xchg
add
cld
popa
jl
dec
fist
xor
sar
fisttp
int3
jle
sub
jge
cmps
push
pop
xchg
cmp
int3
lea
mov
or
xchg
xchg
hlt
loop
call
sbb
jne
rol
push
jne
cmp
cmp
(bad)
jge
popf
fdivr
outs
jge
add
or
lods
pop
sbb
mov
hlt
xchg
cmps
imul
idiv
dec
repnz
fimul
loope
in
clc
xchg
xor
fnstcw
and
test
les
fstp
pop
pop
std
ja
adc
jge
cmps
sbb
adc
bound
mov
fsub
or
cwde
cdq
call
mov
add
jo
adc
xlat
mov
call
mov
cmp
lods
mov
sub
jmp
jecxz
sbb
mov
mov
xchg
mov
aad
out
adc
arpl
mov
mov
es
pushf
mov
sar
aaa
jecxz
or
aad
js
cmp
loope
(bad)
jl
add
mov
addr16
ret
out
mov
add
js
xor
xor
cmp
mov
popf
and
popf
mov
(bad)
test
sbb
mov
xor
mov
shl
stos
xchg
ret
rcr
retf
hlt
ja
enter
mov
cs
je
fwait
mov
and
js
jg
sub
dec
jmp
dec
cmp
cmp
xchg
and
loope
fadd
aad
ret
aaa
or
xor
nop
adc
out
and
mov
pushf
inc
jmp
sbb
ss
push
test
addr16
xor
adc
daa
(bad)
lods
repnz
js
lods
push
inc
cwde
sar
mov
pop
popa
call
sahf
fisubr
jno
scas
mov
lahf
add
adc
dec
push
or
mov
mov
pop
int
push
fs
stos
mov
dec
jbe
movs
aaa
adc
loope
push
shl
stc
in
push
adc
xlat
in
pop
push
add
add
fsubr
pop
dec
jecxz
sub
sub
dec
pop
adc
(bad)
or
into
les
popa
es
ror
cli
ret
xchg
cmps
adc
add
lods
or
(bad)
popa
push
mov
addr16
push
mov
in
pop
clc
lea
mov
add
pop
mov
inc
lock
jae
nop
xchg
xor
das
push
xor
popa
mov
cs
ins
(bad)
rcr
mov
push
mov
xor
ss
mov
rcl
mov
nop
push
fwait
jmp
out
dec
fcmovnbe
inc
pop
lods
sbb
xor
add
lahf
rcr
push
jmp
sbb
loopne
scas
cs
adc
in
push
and
in
jne
xor
xlat
xor
test
cmp
push
icebp
push
cmc
shr
mul
xchg
cmps
in
inc
fcomp
add
dec
xor
loopne
dec
and
push
pop
sar
into
jae
push
stc
jmp
adc
dec
mov
jg
push
bound
jecxz
sbb
push
aaa
icebp
xchg
sub
xor
ret
mov
scas
dec
xchg
fwait
hlt
(bad)
je
push
push
aad
daa
jbe
push
adc
outs
ja
sbb
sbb
and
mov
popf
xor
call
push
jne
das
jbe
jg
cmps
mov
loopne
add
sbb
ins
lahf
out
cmps
popf
add
call
sti
jmp
mov
arpl
cmps
jnp
pop
dec
mov
mov
shr
xchg
push
ret
mov
mov
pop
jmp
ret
rcr
sub
cmp
ss
adc
mov
gs
popa
sub
push
mov
sub
pop
push
xchg
test
jge
in
pop
xchg
mov
repnz
add
jmp
lock
jns
xor
cdq
xchg
daa
bound
js
xchg
and
add
scas
jmp
adc
aam
jecxz
jmp
(bad)
ins
in
mov
or
nop
clc
xchg
aas
jae
sbb
lods
dec
fs
xor
or
or
idiv
fs
sbb
cdq
jns
repnz
dec
in
inc
jle
rcl
cmp
cwde
rol
push
fcomp
shr
div
mov
or
outs
or
test
mov
push
xchg
retf
xlat
outs
fwait
jbe
loop
pushf
test
push
sahf
lahf
mov
das
mov
mov
mov
adc
xchg
out
mov
push
mov
in
jl
pop
retf
mov
add
dec
repnz
ja
sbb
lahf
movs
(bad)
movs
jge
pop
pop
das
add
in
out
repz
adc
jmp
push
add
int
fisubr
sbb
call
cmp
push
(bad)
aaa
xchg
cmp
adc
jne
inc
mov
popf
jle
ret
push
jg
in
cmp
dec
loopne
cld
or
jmp
(bad)
jae
dec
lods
int3
loopne
jge
mov
push
mov
xor
imul
dec
jo
repz
adc
inc
sub
push
cwde
adc
dec
lahf
push
or
push
cmpxchg
pop
gs
dec
pop
aas
mov
cmp
aam
call
sub
cmp
mov
popf
cmps
repnz
push
ja
inc
xchg
mov
jg
je
push
nop
jg
or
test
movs
or
fmul
xchg
movs
inc
jle
pop
cmc
xor
jae
add
cmp
or
in
rol
or
push
mov
es
es
stc
inc
pop
pop
sub
and
add
scas
and
xor
dec
scas
imul
shl
inc
xor
jecxz
pushf
add
test
mov
adc
imul
nop
out
push
mul
xchg
and
or
pusha
pop
push
sub
cwde
orps
add
mov
ins
adc
aam
sbb
aam
cld
mov
js
ins
(bad)
rcl
stos
push
call
mov
aas
xchg
jo
repnz
int3
popa
mov
mov
pushf
(bad)
pop
or
sub
jmp
push
call
loopne
test
ror
xor
adc
mov
(bad)
sbb
test
cmps
(bad)
bound
gs
sbb
repnz
jp
stc
out
jmp
mov
ss
lock
jns
mov
or
or
mov
repz
loopne
mov
inc
out
and
cmp
jae
push
scas
mov
add
add
cmp
mov
and
mov
call
cmps
sub
dec
mov
sar
push
(bad)
rep
sahf
mov
out
out
fnstcw
(bad)
mul
outs
sub
jmp
es
frstor
mov
and
ret
mov
cwde
or
rcr
push
dec
xchg
mov
out
loop
mov
mov
pop
test
inc
bound
xchg
xchg
aaa
lahf
sbb
(bad)
pop
ins
shr
in
rol
mov
shr
enter
jnp
jno
aad
leave
out
mov
sbb
out
add
in
ins
hlt
jge
push
add
popf
xor
adc
push
(bad)
jo
and
sbb
adc
fdivr
retf
aas
js
fwait
jmp
mov
in
in
sbb
lahf
mov
mov
jmp
ret
cmp
pop
add
hlt
ret
jmp
mov
fisub
stc
mov
jmp
push
xchg
and
cli
or
jle
fcomi
or
nop
sahf
scas
and
daa
rol
out
mov
fsubr
int3
sub
add
xchg
bound
into
icebp
jmp
clc
mov
add
dec
(bad)
sbb
or
jge
xchg
sub
mov
popa
cmp
or
into
mov
xchg
enter
lock
add
ret
pop
cmp
(bad)
push
mov
cdq
div
xchg
jle
cwde
in
pop
ins
sti
xor
jno
or
pop
push
jl
stc
sub
fistp
frstor
movs
movs
imul
pop
lods
call
jmp
push
push
cmc
dec
popf
mov
push
popa
mov
lahf
ins
enter
inc
dec
imul
loopne
adc
xchg
not
shl
lea
xchg
pop
pop
imul
jg
outs
mov
pusha
pmaxub
sbb
sub
push
(bad)
mov
(bad)
mov
pusha
mov
adc
inc
mov
(bad)
iret
xchg
dec
inc
ds
enter
inc
sub
add
push
int
movs
pop
xor
std
repz
fs
test
aaa
fcom
pusha
push
pop
push
nop
test
inc
into
fsubr
(bad)
(bad)
outs
pop
aas
or
pop
add
xor
in
in
les
fs
dec
call
cdq
aam
or
(bad)
lods
bound
xchg
dec
(bad)
and
pushf
add
sbb
mov
stc
leave
cwde
xchg
imul
imul
pop
jbe
shl
bound
retf
adc
fwait
push
xor
mov
das
(bad)
les
loop
inc
neg
xchg
inc
scas
call
jmp
jne
adc
loop
jae
call
and
pop
mov
sub
push
aaa
sub
(bad)
sub
xchg
bound
push
xlat
retf
add
mov
fwait
jecxz
inc
inc
xor
pop
push
cmp
or
and
fsubr
sbb
mov
mov
outs
(bad)
sub
addr16
adc
cwde
mov
mov
jmp
es
fbstp
pop
test
push
icebp
cld
pop
dec
sbb
fbld
mov
jns
dec
clc
pop
jo
inc
mov
ret
mov
mov
sbb
sub
repnz
out
icebp
mov
pop
(bad)
rcr
adc
or
push
jae
adc
or
inc
popf
xchg
and
lods
jno
dec
sbb
jl
(bad)
in
adc
mov
add
rcr
out
es
push
mov
jns
push
fisubr
or
imul
cmp
or
and
xchg
js
ss
jecxz
ja
addr16
jmp
push
les
retf
sub
xchg
pop
cmc
std
lea
(bad)
pop
inc
push
pop
leave
cmps
push
lock
sbb
(bad)
add
jmp
daa
in
popf
aaa
mov
fisub
add
mov
mov
jne
int3
push
loope
fsub
outs
outs
xor
jno
div
mov
mov
icebp
pop
rcl
push
mov
(bad)
pop
mov
or
xchg
dec
(bad)
icebp
retf
in
clc
pop
push
fidiv
push
mov
std
inc
shl
jmp
adc
loope
popf
int
mov
mov
test
js
inc
neg
push
in
inc
lock
sbb
ret
out
out
add
mov
adc
out
jno
push
inc
clc
xor
dec
dec
dec
neg
mov
mov
or
jo
inc
and
xor
mov
pop
xchg
sbb
mov
jnp
iret
push
(bad)
(bad)
jo
inc
movs
dec
sbb
leave
xchg
inc
aad
ja
outs
retf
ins
inc
mov
mov
sti
daa
jle
ja
mov
cs
dec
or
retf
jbe
sub
ror
ss
xchg
je
clc
cmps
pop
sahf
mov
or
jg
sub
cmp
pop
sbb
xlat
sub
(bad)
cmp
jno
jnp
xchg
xor
mov
(bad)
adc
cmp
jb
repnz
pushf
into
mov
out
mov
in
hlt
mov
addr16
sar
sbb
adc
mov
xchg
cmp
sbb
xchg
call
imul
push
cmp
push
add
sub
pop
sbb
dec
loop
test
aam
movs
inc
xor
sbb
jnp
xor
jp
nop
sbb
iret
jmp
jne
jmp
mov
pop
pushf
xchg
add
push
cwde
mov
ret
je
fs
xchg
mov
cmp
das
mov
xchg
adc
cmp
nop
or
imul
dec
pop
adc
loopne
and
(bad)
and
je
popa
loopne
mov
mov
(bad)
jmp
sbb
jns
jp
sub
aaa
popa
xchg
inc
mov
adc
sub
shl
jg
imul
mov
test
cdq
xor
pop
(bad)
pop
sub
(bad)
(bad)
or
push
push
adc
adc
imul
dec
jmp
ins
fiadd
xchg
xor
pop
mov
in
ss
fld
test
cmps
xchg
ss
pushf
in
mov
addr16
outs
cdq
popa
jns
lahf
fnsave
daa
xchg
ja
aad
test
mov
pushf
fbld
pop
xchg
ins
pushf
sub
push
sub
mov
jle
stc
cmc
rcl
cmp
(bad)
scas
fidivr
mov
test
jb
cmp
sub
fldcw
stc
test
out
pop
or
add
cld
add
lods
fs
or
imul
add
push
ins
sub
inc
sbb
clc
dec
aas
push
push
mov
push
push
inc
adc
push
push
clc
dec
or
aaa
repnz
pop
fdiv
adc
push
cmp
pop
test
mov
cld
and
xor
in
jp
mov
mov
movs
retf
loope
ja
fnsetpm(287
out
retf
test
sbb
push
jne
rcr
into
xor
cld
jae
mov
ret
out
int
lea
(bad)
bound
xchg
gs
pop
rcr
bound
jmp
add
and
test
or
addr16
daa
push
mov
add
add
mov
adc
out
in
or
xor
mov
xchg
jmp
pop
inc
jl
js
sub
stos
(bad)
jb
push
stc
fwait
iret
(bad)
or
mov
frstpm(287
mov
xor
test
jnp
adc
xor
inc
in
adc
iret
add
std
cmp
inc
mov
arpl
inc
mov
and
push
into
mov
jo
and
sub
add
inc
jnp
lahf
xor
scas
call
inc
call
adc
dec
jl
out
lock
movs
retf
adc
(bad)
in
movs
jmp
ja
push
out
push
pop
stos
jo
data16
(bad)
cmps
cs
fwait
xchg
cmp
nop
add
(bad)
push
xchg
pop
sbb
shl
sbb
fnstsw
cmp
or
inc
rcl
mov
(bad)
xor
fild
mov
loop
dec
dec
sar
dec
xor
adc
pop
xor
jo
sbb
or
dec
out
xor
daa
mov
push
push
out
push
loopne
add
or
pop
fs
movs
sub
cmps
cs
jge
add
es
fcom
ret
jg
fdiv
cmp
mov
stos
scas
jg
les
jo
sti
mov
sbb
mov
das
and
int
data16
mov
push
sub
sbb
mov
leave
sbb
pop
cmps
lock
xchg
stos
cwde
lods
(bad)
bound
mov
sbb
inc
inc
pop
nop
sub
outs
daa
fadd
push
xchg
imul
mov
inc
mov
xor
sbb
dec
ins
and
sub
fdivrp
rcr
mov
xchg
dec
sub
pusha
mov
das
xchg
dec
scas
cmp
mov
loop
pop
xor
dec
sub
jle
dec
cmp
inc
pop
out
ficom
lea
pop
and
inc
push
jbe
cs
test
pushf
inc
repz
fnop
mov
shl
or
jecxz
int3
add
fistp
adc
movs
cdq
lods
jmp
call
test
test
xor
xor
sub
pop
mov
inc
pop
push
outs
adc
movs
neg
push
stos
mov
or
dec
sub
lea
jmp
outs
in
mov
pop
jae
retf
pusha
jl
cwde
jae
pop
dec
in
fisubr
and
cmp
add
dec
test
mov
adc
and
iret
dec
mov
push
shl
rol
adc
sub
out
das
sti
jge
pop
sub
sbb
in
pusha
and
loop
fld
sbb
gs
aaa
fisttp
sar
iret
movs
cwde
mov
rcl
fmul
cmps
inc
or
fldenv
stc
push
imul
nop
inc
sbb
aaa
std
mov
shl
std
lahf
movs
retf
imul
mov
mov
retfw
cld
ins
mov
aas
out
mov
(bad)
adc
push
dec
adc
pop
xor
nop
jle
ja
cs
je
test
stos
int3
les
dec
cmp
mov
mov
jae
inc
cld
mov
push
inc
xchg
shr
pop
sbb
pop
adc
psllw
and
jne
mov
push
jl
adc
out
jecxz
fist
lea
jp
cdq
repnz
imul
lods
push
adc
xchg
mov
pop
js
cdq
cwde
repnz
push
push
test
out
push
scas
inc
add
xor
cmp
dec
or
(bad)
push
ss
mul
js
mov
movs
cdq
push
xor
leave
dec
mov
call
jmp
in
inc
xor
test
push
fld
loop
mov
and
in
and
fcmovne
mov
push
jno
inc
cmps
cli
sub
shl
lock
sub
sbb
fld
jb
clc
inc
ins
retf
and
cli
mov
cli
mov
mov
lahf
movs
call
push
jno
push
aad
xchg
cmp
pop
jnp
sbb
frstor
das
dec
shl
icebp
leave
jecxz
or
push
mov
xor
mov
fcmove
rcr
add
push
cdq
pop
ins
je
or
iret
pop
xor
or
dec
cmp
push
mov
inc
outs
gs
mov
or
mov
adc
sbb
inc
fstp
in
rcr
jb
and
frstor
pop
xor
cs
push
pop
or
mov
dec
in
xor
mov
aaa
arpl
std
fsubr
enter
add
clc
jns
arpl
mov
xor
stos
or
adc
pop
jnp
mov
into
(bad)
shr
arpl
(bad)
rcl
or
lods
jg
add
pslld
(bad)
mov
dec
test
pop
out
jg
mov
in
popa
mov
adc
leave
or
and
ret
test
push
cmp
cmp
aad
cmp
clc
int3
push
inc
enter
fistp
inc
and
push
fdiv
rcl
loop
dec
jp
adc
pop
loope
ins
test
int3
mov
aas
mov
xor
and
rcl
cmp
or
rcl
hlt
mov
inc
stos
ror
pushf
xor
sbb
daa
aaa
int
sub
cmc
cmp
inc
sbb
gs
push
lea
rol
std
sbb
push
in
pop
push
xchg
addr16
mov
ss
sub
dec
inc
pop
or
dec
bound
ss
in
cmp
fisub
lea
mov
out
xor
pushf
pop
and
sbb
loope
(bad)
pop
sub
ror
inc
scas
imul
js
enter
and
movs
sbb
sbb
jge
(bad)
pop
pop
(bad)
pop
add
jp
jg
adc
add
pop
in
loope
or
jmp
add
xchg
push
add
dec
int
mov
mov
mov
adc
aam
aas
xor
in
ja
add
out
imul
xor
je
jp
fnstcw
add
xchg
jbe
push
bound
inc
(bad)
retf
lods
popa
cmps
jmp
or
or
xlat
mov
repz
jnp
jecxz
sar
ss
xchg
cmc
pop
push
push
inc
sbb
retf
cmc
into
cmc
xchg
cmp
stos
popf
sub
xchg
movs
cmp
pushf
xchg
rcr
aam
cmp
in
dec
pop
fst
mov
pop
push
icebp
xor
or
jmp
neg
int
out
mov
inc
jl
enter
push
ror
mov
jo
mov
jnp
sub
stos
mov
cmovs
sub
jge
out
push
imul
push
ficom
ds
xor
je
ror
sbb
jns
cmp
sub
mov
(bad)
test
retf
shr
(bad)
jecxz
iret
adc
(bad)
and
lods
fdivr
pop
icebp
out
fld
arpl
test
(bad)
cdq
cmp
fsub
out
xor
fs
inc
ja
scas
ret
dec
mov
mov
xor
jl
jae
leave
stc
and
mov
dec
call
xchg
int
das
(bad)
mov
jecxz
mov
adc
jmp
inc
imul
inc
mov
mov
xchg
add
add
mov
lods
aaa
push
paddq
mov
aam
retf
ja
fidivr
bound
test
push
les
ficom
xchg
push
inc
jmp
movs
sub
ror
es
mov
das
mov
dec
test
pop
add
jmp
lock
mov
sub
or
or
shr
or
retf
push
sahf
bound
mov
out
es
ret
mov
and
xor
cmps
inc
push
dec
sbb
mov
cld
xchg
xor
jle
inc
mov
pop
jmp
xchg
lods
mov
or
fwait
push
cdq
sub
or
adc
adc
outs
push
mov
push
imul
std
outs
jo
push
enter
or
or
cwde
cmp
sbb
jmp
or
out
aaa
fld
dec
xor
adc
inc
das
pop
pop
in
out
jbe
fdiv
iret
push
(bad)
scas
loope
jge
mov
pop
lea
sbb
xchg
arpl
test
icebp
adc
pop
out
lea
push
or
icebp
mov
mov
div
mov
fs
adc
mov
imul
cld
icebp
push
mov
fwait
lods
jmp
add
mov
cs
cmp
idiv
pop
mov
inc
cwde
adc
xor
mov
std
retf
sub
das
mov
call
fldl2t
push
sub
lahf
sub
and
pop
mov
mov
cwde
add
add
mov
movs
cs
jo
pusha
ror
(bad)
cs
fimul
or
mov
das
push
mov
mov
push
ficomp
add
stos
push
adc
adc
scas
mov
pop
shl
cmp
lahf
inc
jle
and
pop
enter
fstp
push
loope
pushf
inc
xchg
retf
add
mov
jnp
push
cmp
xchg
or
ja
pop
sub
cld
out
mov
mov
sub
push
inc
push
mov
mov
cmp
mov
leave
lock
mov
adc
into
arpl
fldl2e
adc
je
push
(bad)
and
fcmovnb
setl
push
jo
loop
xchg
mov
mul
pop
bound
pop
push
int
xchg
aaa
mov
lock
inc
jmp
sbb
js
jne
scas
cmp
mov
mov
sbb
jns
mov
in
call
test
mov
not
pushf
pop
and
and
dec
cmps
nop
or
outs
sar
and
movs
xchg
(bad)
in
and
icebp
scas
not
test
mov
sbb
mov
jle
push
inc
or
ss
ret
clc
test
push
pop
in
xchg
inc
dec
fs
fisttp
mov
fcmovb
jg
push
(bad)
cmp
xchg
mov
test
mov
dec
jns
sub
push
push
jb
bound
mov
push
mov
shl
test
mov
xor
push
or
add
mov
int
cmp
and
pusha
out
inc
ss
ins
sub
fimul
pop
or
jnp
leave
aas
(bad)
imul
fiadd
int3
ins
cmps
and
dec
gs
ins
out
mov
mov
iret
call
mov
sbb
loopne
fnstcw
std
xchg
ins
adc
cld
outs
xor
xchg
adc
mov
mov
dec
lds
scas
fmul
popf
sbb
imul
jne
jae
cdq
add
int
and
xor
push
aas
int
inc
icebp
jae
gs
adc
adc
xor
push
fimul
pop
fwait
cmp
sbb
dec
pop
mov
jmp
pop
aad
add
sbb
adc
fisub
dec
test
outs
stos
iret
xchg
ret
call
push
jo
arpl
ror
gs
inc
pop
mov
test
add
in
push
cmps
ss
or
test
fmul
jmp
sub
sub
and
std
ffree
aaa
add
adc
jae
cmp
std
push
js
lods
test
repnz
push
fisttp
mov
jle
(bad)
xchg
sbb
fwait
dec
je
mov
xor
sub
mov
fld
js
mov
fdiv
loop
mov
jno
test
or
clc
cmp
sub
outs
lds
enter
arpl
push
xor
loope
jbe
mov
pop
adc
enter
xor
aad
cmps
in
das
mov
or
mov
mov
clc
xchg
loopne
cmp
in
addr16
pop
test
ins
stos
or
xor
loop
into
push
adc
rcl
jmp
test
or
stos
repnz
out
xchg
mov
(bad)
pushf
sbb
pop
cmc
loope
sbb
xor
popf
lds
xchg
sub
xchg
jo
aad
sub
and
xchg
or
clc
dec
inc
test
outs
xlat
(bad)
pop
mov
and
out
push
sahf
arpl
inc
fdivrp
fst
push
loop
out
outs
push
jmp
(bad)
inc
ss
dec
xchg
jmp
xchg
sbb
mov
into
and
in
shr
fldcw
cmc
sub
mov
ds
push
add
cmps
jb
mov
mov
setg
or
jne
dec
lock
loope
shl
fistp
cs
sbb
add
adc
rcl
pop
retf
mov
in
or
sbb
mov
dec
fst
or
pop
fild
repz
imul
mov
jmp
pop
inc
pop
sub
mov
inc
imul
xchg
(bad)
rcl
out
dec
dec
or
cmps
cmp
jmp
(bad)
es
enter
cdq
cmc
(bad)
outs
jle
repnz
cs
jle
push
and
lea
jo
cmp
ins
jns
ret
movs
scas
mov
push
std
nop
dec
ss
add
adc
dec
in
das
pop
adc
xor
push
xchg
mov
mov
sahf
mov
mov
xchg
mul
test
fist
xchg
fstp
iret
or
test
and
mov
ins
mov
and
fld
dec
call
shl
test
inc
add
mov
jl
sbb
or
mov
mov
add
adc
pop
fisub
push
pop
(bad)
and
test
cdq
jp
shl
mov
and
fs
xor
adc
adc
div
pop
cmp
in
sbb
into
push
stos
pop
sub
xor
mov
ja
sub
and
arpl
loop
fcmovnu
loop
repnz
push
fld
lods
fdiv
xchg
push
idiv
pusha
jnp
adc
test
push
xchg
inc
xor
pop
ja
outs
les
out
mov
add
adc
int
sbb
pop
cmp
or
push
into
or
push
mov
pop
jg
lods
dec
lods
lds
pop
popa
sub
or
mul
test
ds
sub
sbb
fisubr
in
ds
push
pop
in
(bad)
pop
pop
loope
and
fnstsw
inc
inc
cmps
repz
jne
xlat
dec
neg
push
jo
inc
movs
fild
cmp
cmp
icebp
or
adc
loopne
retf
lds
pop
outs
inc
xchg
jp
push
or
jmp
or
aam
icebp
jno
push
add
or
push
add
pop
adc
mov
dec
dec
or
jno
int
jmp
jle
shl
rcr
retf
push
aad
push
and
xor
mov
popw
mov
pop
pushf
imul
jg
mov
mov
sbb
mov
fistp
adc
mov
pop
dec
(bad)
ds
add
out
jne
aas
int
jo
sub
cld
jge
xchg
(bad)
retf
push
(bad)
sub
movs
sbb
jnp
pop
xlat
ret
adc
xor
jne
retf
out
inc
fld
adc
xor
push
cmps
jg
(bad)
(bad)
out
mov
add
vsqrtps
pop
ins
add
test
jl
out
popf
dec
jmp
jp
das
mov
sar
daa
pop
push
xlat
int3
cmp
sub
aad
mov
jo
jecxz
and
movs
mov
mov
nop
mov
(bad)
rcr
add
and
or
cli
loopne
aaa
sbb
sti
mov
mov
sbb
aam
and
adc
xchg
loop
cmovns
popa
js
mov
sbb
jmp
inc
inc
xchg
push
cmp
mov
mov
jecxz
mov
and
enter
cdq
js
pop
stos
hlt
mov
mov
mov
add
js
jle
cmps
mov
dec
test
in
test
and
xor
fisub
jle
adc
dec
push
jno
mov
inc
mov
add
cdq
mov
imul
adc
xchg
lahf
or
out
cld
pusha
ds
out
test
xor
dec
fild
mov
inc
mov
stc
js
xchg
cmp
push
cmp
ror
sbb
es
or
and
daa
xchg
adc
ins
adc
pop
mov
test
xchg
inc
mov
push
aad
xchg
sahf
pop
sub
mov
mov
cwde
in
retf
(bad)
fdiv
test
mov
(bad)
in
jno
sub
mov
sub
jbe
in
stos
mov
xchg
jl
lods
xchg
dec
mov
movs
sbb
daa
int3
std
repnz
push
xor
add
(bad)
into
popf
inc
push
cmps
mov
shl
xor
push
push
cmp
push
mov
fidivr
fmul
mov
add
imul
add
popf
popf
inc
mov
cmp
push
loope
xor
jg
xchg
stos
sbb
inc
neg
cmp
jbe
retf
mov
mov
push
ins
cmps
(bad)
movs
scas
or
test
inc
rol
xlat
push
mov
jl
xchg
das
adc
popf
mov
imul
push
adc
inc
out
or
rcr
sbb
xchg
mov
jg
sub
aaa
or
fcmovnb
ret
jl
cmc
add
cld
rcl
mov
push
int3
adc
rol
inc
mov
lock
sti
ret
cdq
imul
les
ret
mov
fcom
jmp
(bad)
sahf
addr16
cmp
sub
xor
hlt
cmp
ret
cwde
lds
inc
jbe
lods
mov
mov
popf
and
jge
pop
call
(bad)
cld
mov
mov
(bad)
jecxz
inc
int3
and
dec
pop
and
gs
xlat
std
enter
and
jae
mov
and
cwde
sahf
clc
ucomiss
jns
inc
pop
sar
add
push
popf
in
pop
out
(bad)
test
fwait
cmps
fstp
test
retf
imul
sahf
cmc
dec
pop
enter
(bad)
fs
std
loopne
aad
and
hlt
push
test
jae
lock
jp
inc
cmp
sbb
fcomp
adc
sbb
fist
adc
(bad)
adc
inc
inc
mov
push
sar
add
push
xchg
mov
out
xlat
into
jg
sbb
inc
aaa
inc
ds
out
pop
fstp
cmp
jp
fwait
inc
or
fsub
outs
retf
pop
mov
pushf
xor
(bad)
jb
int
mov
dec
sar
hlt
adc
leave
ins
xchg
pop
mov
cmp
bnd
cmps
rol
jl
adc
ret
mov
pextrw
jne
daa
movs
xor
xor
ss
lds
adc
cmc
add
call
pop
ins
sub
push
movs
mov
js
mov
mov
inc
jecxz
xor
repnz
fild
push
shl
mov
call
or
cmp
sbb
(bad)
mov
outs
in
movs
inc
sub
repz
push
jge
outs
nop
das
mov
jmp
daa
ret
cmp
std
jp
mov
icebp
mov
sbb
test
js
test
push
push
(bad)
retf
jb
inc
mov
aam
pop
pop
(bad)
(bad)
cwde
push
(bad)
les
inc
pop
(bad)
cmp
dec
push
add
adc
adc
or
call
sub
fild
push
or
add
push
pop
aaa
push
xor
mov
or
sar
dec
std
dec
cmp
pop
int
sahf
test
imul
popf
retf
sbb
adc
fsub
out
xchg
aaa
fist
rol
jno
mov
rep
adc
sbb
test
cmp
push
lods
popa
lods
dec
fwait
mov
jae
xchg
add
les
xor
mov
cmps
jbe
das
mov
dec
adc
push
sub
loopne
jmp
push
std
push
pusha
adc
or
scas
in
push
aas
push
and
or
dec
scas
sbb
(bad)
mov
jmp
pop
or
cmp
(bad)
jbe
mov
retf
push
scas
dec
or
pusha
pop
int
pop
shl
jmp
movs
or
loopne
test
pop
push
and
mov
jg
test
js
nop
stos
imul
in
mov
sub
dec
out
scas
or
in
cmp
(bad)
fs
push
xchg
add
adc
sahf
inc
pop
mov
cmps
enter
mov
imul
xor
out
jno
jmp
in
mov
out
mov
xor
retf
xlat
and
or
(bad)
test
xor
dec
rol
fsubr
mov
or
push
cmps
dec
mov
or
data16
test
fadd
test
int
out
adc
jnp
inc
(bad)
(bad)
les
or
es
clc
and
neg
je
xor
ja
(bad)
movs
xchg
jae
jne
xchg
push
sub
or
mov
jl
pushf
jnp
xor
ja
inc
movs
xor
inc
fmulp
nop
pop
or
pop
fnsetpm(287
rol
pop
xchg
or
or
in
jbe
inc
sbb
cmc
cmp
lds
nop
test
(bad)
lea
int3
sbb
fcomp
dec
not
mov
sbb
mov
out
lods
aaa
push
ja
xchg
mov
loopne
mov
test
lods
inc
mov
or
lea
dec
fistp
cmp
push
pop
ds
imul
or
xchg
not
jp
jns
xchg
add
leave
add
xor
xor
jp
cmp
push
inc
adc
cmp
mov
aas
adc
fst
call
push
fs
jno
out
cmp
inc
mov
push
sbb
aas
ins
in
lahf
daa
jg
nop
rcr
ror
out
or
inc
stos
mov
jno
sbb
or
xor
mov
cs
js
sti
fidiv
int
mov
data16
inc
mov
mov
cmps
cmp
mov
and
xor
push
ins
test
xor
jne
das
int
adc
mov
test
repnz
xchg
push
inc
dec
lods
dec
cmp
xchg
ins
cs
leave
int
mov
jl
sahf
cmps
push
cmps
mov
pop
inc
in
out
push
and
je
stos
lods
(bad)
dec
cld
xchg
adc
pop
jge
ins
popa
jb
mov
call
sub
(bad)
enter
sahf
mov
test
sahf
adc
mov
mov
cmps
lahf
pop
mov
mov
sub
enter
and
sbb
cmp
xchg
add
(bad)
ror
jbe
test
fs
(bad)
cmp
sahf
outs
fisttp
add
xchg
out
mov
xchg
stos
sbb
fsub
scas
retf
cld
push
or
inc
jae
mov
test
(bad)
add
cmp
push
xor
scas
pop
sub
fwait
mov
stc
enter
and
xchg
adc
inc
jb
dec
int
clc
rcr
leave
imul
cmp
or
int3
out
dec
enter
sbb
inc
mov
cmps
and
lahf
xchg
bound
dec
or
xor
loop
sub
jge
repz
push
in
xchg
loop
dec
in
pop
xlat
push
pop
dec
mov
out
ds
cmps
pushf
sbb
sbb
aam
jns
pop
ret
imul
das
dec
push
adc
pop
mov
gs
mov
test
out
xor
into
neg
test
pop
cdq
(bad)
pop
retf
pop
or
mov
out
mov
add
jo
push
test
retf
mov
or
and
jecxz
enter
cdq
mov
adc
hlt
sbb
(bad)
cmc
ror
inc
sub
test
xchg
sub
fadd
es
lods
mov
les
sahf
jmp
dec
clc
push
aad
push
pop
in
cmps
mov
mov
mov
or
push
lods
push
fs
lea
mov
push
dec
fbld
jno
push
je
ja
lock
fbstp
aaa
sub
fstp
js
sub
inc
and
pop
popf
pop
sub
adc
repnz
xor
loopne
test
xor
fistp
mov
xchg
inc
into
stos
das
adc
stos
loop
cmp
inc
scas
pop
fistp
fisttp
in
mov
dec
aas
xlat
or
xchg
lods
mov
imul
jmp
xchg
js
mov
inc
mov
ins
loope
inc
cmp
ja
cmp
lahf
test
mov
div
ret
mov
or
es
mov
les
ja
sub
test
test
std
add
add
push
mov
adc
xlat
jno
scas
xchg
cmp
(bad)
inc
mov
sar
sti
lods
addr16
pop
pop
mov
adc
and
jnp
cmp
push
nop
jae
cmovnp
xchg
fnstsw
pop
xchg
pop
inc
or
or
sub
push
jnp
scas
and
pop
loop
lods
(bad)
(bad)
sbb
stos
inc
pop
dec
aas
and
das
push
(bad)
sbb
inc
(bad)
dec
dec
push
mov
sar
jge
jg
and
iret
sti
add
loopne
dec
inc
mov
fstp
je
stc
mov
(bad)
cmp
xor
add
jmp
jbe
mov
inc
xchg
mov
push
int
adc
mov
or
fild
or
dec
das
pop
and
sub
fisttp
scas
jno
push
xchg
add
or
xor
aam
xchg
retf
je
ins
test
repz
and
xchg
fnstsw
lds
mov
addr16
jg
adc
in
shl
push
adc
push
fidivr
mov
into
fdiv
xchg
adc
fild
mov
jo
imul
test
push
scas
shl
sub
xor
mov
imul
push
retf
and
cmps
movs
or
dec
inc
fnstcw
adc
sub
retf
jb
sub
mov
xor
je
inc
iret
nop
repnz
movs
icebp
push
or
dec
xor
cmp
cdq
jmp
sub
in
fadd
scas
mov
jb
sub
cmc
jmp
mov
dec
pop
add
in
mov
xchg
pmuludq
in
in
pop
loop
push
sbb
bound
pop
ss
test
dec
repnz
jo
dec
cmp
sbb
and
sub
pop
inc
out
sti
pop
jae
(bad)
xchg
mov
out
mov
test
sbb
adc
mov
aaa
cmp
fdiv
xor
jle
jge
or
mov
xchg
nop
repnz
shl
mov
ds
xor
or
rol
dec
mov
fwait
adc
pop
adc
and
cdq
mov
loopne
cli
jnp
mul
jo
fwait
push
jecxz
inc
lods
popa
pop
call
sbb
out
cld
adc
mov
mov
ins
pushf
pop
push
stc
mov
mov
sub
retf
int
cli
fcmovnb
iret
dec
add
adc
inc
(bad)
scas
push
mov
imul
in
popa
jp
loop
icebp
mov
mov
fdiv
cdq
stos
and
cmp
sub
cmp
pop
test
mov
test
movs
dec
dec
or
jne
data16
jb
in
add
or
cmp
sub
iret
pusha
mov
rcr
adc
test
lahf
(bad)
hlt
call
mov
mov
not
fisub
or
mov
cmp
mov
lahf
jl
jne
sar
sbb
mov
ss
add
mov
(bad)
xor
lea
ret
mov
std
in
test
push
icebp
adc
dec
adc
sbb
in
arpl
lds
jmp
jg
das
mov
int
in
ins
lods
jg
pop
xor
call
mov
ficomp
or
pop
sub
mov
test
push
out
jmp
cmp
and
adc
ret
out
cld
or
adc
repnz
mov
in
xor
les
in
dec
and
xchg
cmps
outs
adc
mov
and
mov
test
dec
mov
in
dec
inc
es
xor
sub
jmp
ret
add
pushf
lea
outs
mov
mov
or
(bad)
js
je
scas
jge
jmp
sub
cmc
cmp
mov
shr
adc
inc
hlt
jmp
mov
pushf
outs
mov
jp
push
and
cli
cli
gs
lods
adc
stos
dec
sti
or
mov
xchg
sub
fisub
xchg
jmp
and
sbb
push
mov
mov
sbb
pop
mov
out
sbb
ja
mov
dec
test
sub
mov
or
cmp
in
push
jmp
sbb
popw
test
add
out
lods
outs
scas
in
gs
sub
sbb
loope
add
mov
cld
push
call
cld
mov
call
sub
bound
dec
aaa
es
push
into
pusha
mov
ror
jg
and
mov
ficom
js
mov
or
lock
jecxz
sahf
xchg
xor
cmp
mov
test
add
xchg
loop
rcl
repnz
mov
js
mov
adc
iret
mov
dec
push
shl
(bad)
clc
aad
clc
ja
ret
rep
fucomp
test
daa
cmps
mov
or
mov
ds
add
xchg
or
retf
bound
(bad)
lahf
ins
mov
xor
aad
add
xor
loopne
ret
add
lods
pop
out
jg
sbb
jle
sti
adc
ficom
and
mov
pushf
mov
xor
jmp
mov
in
lods
test
leave
cli
popf
jae
daa
lods
jae
cli
repnz
dec
shr
cmp
jb
mov
mov
xor
imul
jecxz
ss
popa
push
rcl
mov
cld
shl
or
outs
sbb
lods
mov
sub
push
cli
bound
inc
pop
push
lods
movs
scas
hlt
jp
jge
arpl
fisubr
sbb
adc
push
faddp
xchg
lock
arpl
and
jge
dec
mov
out
pop
dec
push
inc
fnstsw
repnz
sbb
aas
sub
movs
ds
pusha
xor
test
push
sub
sub
add
(bad)
loop
xchg
sub
and
outs
pop
repz
(bad)
cmp
(bad)
in
ret
inc
or
mov
dec
and
cmps
pop
mov
xchg
push
push
(bad)
pop
gs
jmp
mov
add
icebp
call
xchg
jecxz
mov
add
and
pop
pop
jnp
jp
movs
imul
clc
or
jns
cmp
cmp
push
lock
cmp
bound
mov
pop
mov
dec
sahf
mov
hlt
mov
dec
push
test
xchg
fsub
mov
sub
test
shl
mov
cmp
ds
pop
jecxz
inc
out
das
popa
add
out
mov
mov
(bad)
xor
(bad)
lock
lock
std
mov
mov
xchg
push
stos
retf
sbb
ins
inc
pop
fild
out
rcr
pusha
cmp
std
test
mov
xchg
outs
push
sub
fmul
fwait
cmc
push
outs
lahf
ins
fnstenv
repnz
enter
stos
loopne
sbb
lock
call
xor
into
mov
sti
cmp
adc
push
pop
jg
add
getsec
in
xchg
leave
sar
retf
cli
add
pop
arpl
pop
push
cmc
loopne
adc
popa
jnp
dec
not
rol
retf
adc
dec
or
js
push
mov
jne
addr16
pop
cdq
dec
rol
pop
sub
enter
and
or
fld
dec
idiv
mov
fnstenv
js
sbb
pop
out
aaa
mov
jae
and
js
or
mov
xor
imul
push
dec
call
add
dec
xchg
(bad)
pusha
or
sbb
test
popa
and
adc
dec
jns
popf
movs
xchg
ins
test
fs
mov
dec
mov
popf
add
or
jb
mov
pop
pop
dec
jmp
push
and
imul
aam
outs
sub
cmp
xor
in
xor
loop
int3
mov
(bad)
jl
(bad)
adc
mov
add
or
push
call
adc
or
pusha
or
std
jne
lds
or
xchg
aad
mov
push
inc
xchg
push
cmp
test
ret
cmps
push
aad
dec
xchg
adc
push
popa
dec
out
mov
or
mov
sub
(bad)
je
jo
movs
push
jg
dec
loop
add
adc
mov
jno
push
dec
jne
pop
mov
mov
int
and
lock
sti
enter
movs
mov
rcr
jbe
ss
sub
cmp
popa
ffreep
addr16
sub
cmp
minps
cmp
xor
push
mov
mov
xor
mov
mov
dec
or
sub
add
out
cld
sbb
add
es
int3
ret
dec
fld
fist
mov
js
mov
sar
mov
dec
inc
mov
adc
or
cwde
mov
xor
in
jns
addr16
ds
jno
ret
inc
jl
push
(bad)
jno
xor
jl
adc
inc
test
add
push
and
xchg
add
nop
push
mov
or
dec
pop
mov
xor
dec
stos
mov
mov
call
inc
xchg
and
out
mov
mov
rcr
les
ror
inc
(bad)
sub
dec
add
add
pop
jns
or
test
xor
neg
das
mov
fst
popa
repz
pop
mov
repnz
jmp
dec
jbe
jno
dec
repnz
mov
sbb
retf
or
popf
add
xchg
xor
push
and
dec
xchg
shr
call
pop
pushf
or
outs
mov
cmp
stos
xchg
stos
push
out
dec
xchg
cs
je
lds
and
and
ins
cs
mul
stc
dec
push
shrd
pop
pop
adc
data16
sbb
jbe
jg
ret
inc
fdivr
jns
mov
aaa
cs
jg
push
std
repnz
mov
mov
inc
push
push
xchg
test
mov
imul
push
push
jmp
mov
mov
dec
inc
lds
xor
das
and
dec
jno
rol
add
pop
hlt
cli
mov
in
push
inc
mov
xchg
jle
stos
jns
push
xchg
inc
pop
dec
sub
addr16
stc
out
dec
push
cmc
jmp
cmc
ret
mov
jmp
jns
sbb
sub
call
cmps
test
mov
lods
dec
nop
xor
cmps
xlat
lods
rcl
push
and
add
call
fcmovbe
mov
inc
pop
clc
rcl
add
lock
test
outs
outs
bound
int3
inc
cmp
call
cmp
arpl
movs
ins
imul
sub
mov
pusha
sub
lea
cmp
push
fisub
sub
sbb
lods
jns
cdq
dec
xor
mov
and
xchg
fnstsw
mov
xchg
mov
mov
mov
fnstcw
test
call
fist
ret
push
call
mov
loopne
inc
adc
pop
nop
mov
ror
icebp
mov
retf
arpl
xor
mov
sub
repnz
xor
push
addr16
inc
xor
push
push
push
inc
std
leave
mov
repz
adc
fs
daa
adc
jns
push
mov
sbb
lods
in
cs
lods
es
fisttp
dec
loop
mov
push
mov
xor
dec
jae
sub
(bad)
shl
repnz
(bad)
adc
adc
lds
in
cmp
iret
test
cs
inc
int
ret
lods
dec
sbb
leave
sbb
ins
add
pop
cld
scas
jmp
arpl
(bad)
dec
mov
aas
inc
add
ja
push
stos
pop
xor
push
cmp
scas
jbe
pop
out
int3
fistp
cmp
out
leave
aaa
scas
iret
add
xor
and
aas
test
fsubr
cdq
cmp
fidivr
lods
aad
adc
sbb
call
mov
push
shr
sbb
sbb
pop
cld
cld
cmp
cmp
cmp
pop
jnp
and
mov
retf
add
mov
lahf
ret
rep
ja
loopne
jb
cmp
aam
xor
addr16
pop
jno
pop
mov
xchg
mov
inc
ror
(bad)
mov
mov
sbb
dec
leave
inc
popa
or
xor
(bad)
sbb
push
fst
jle
popa
and
inc
cmp
jno
cmp
int3
fdiv
jnp
push
sbb
push
movs
push
shl
jmp
jl
inc
(bad)
lahf
pop
repnz
(bad)
add
xchg
mov
and
stos
and
pop
sti
or
stc
jne
mov
inc
retf
and
adc
jb
test
cdq
inc
std
cmp
or
sbb
mov
dec
pushf
inc
inc
idiv
pusha
mov
jnp
sti
daa
stos
test
or
xor
xchg
mov
mov
in
xlat
lods
mov
push
gs
sub
pop
loopne
xchg
stos
xchg
mov
int
cmp
jns
pop
pop
cmp
adc
push
push
mov
in
sub
inc
test
(bad)
jp
out
aad
inc
inc
movs
mov
mov
cdq
cld
inc
xor
push
shr
inc
icebp
mov
adc
add
add
aam
add
and
mov
ins
les
jge
xchg
lock
fistp
sbb
ss
retf
add
push
lea
pop
dec
jmp
sbb
push
pop
jbe
push
in
cli
imul
xchg
aaa
mov
xchg
sbb
call
js
sti
(bad)
jo
pop
adc
outs
mov
movq
test
jmp
stos
(bad)
js
cmp
sahf
daa
mov
lods
stos
or
push
dec
ins
ficom
add
adc
jg
fist
xor
push
imul
ins
cmps
mov
cmc
cdq
xor
xchg
mov
mov
xchg
std
sbb
pusha
mov
leave
jo
jle
sub
nop
inc
dec
mov
mov
mov
xchg
std
shl
push
(bad)
je
cmp
adc
les
pop
mov
jl
xchg
shl
or
xor
ins
xchg
ja
cwde
stos
fild
ja
sbb
cmc
xchg
push
fcmovnu
dec
cmp
adc
dec
and
add
mov
ins
jmp
jae
ja
inc
xor
frstor
lea
xlat
hlt
jae
sti
inc
sub
dec
push
mov
scas
mov
adc
pusha
test
out
jae
jl
clc
pop
sbb
xchg
push
nop
outs
cmp
or
test
fcmove
shl
push
adc
cmc
(bad)
sbb
mov
jmp
xchg
popf
js
mov
sub
push
cmp
or
out
mov
mov
fcmovne
sub
push
add
push
dec
push
retf
pop
hlt
cmp
pop
fild
(bad)
sub
cmp
ins
xor
loop
inc
adc
push
sub
mov
and
pop
scas
cmp
retf
out
out
rcl
pop
nop
xchg
jecxz
push
outs
scas
imul
cs
jge
(bad)
ins
adc
call
cmp
fisub
mov
nop
push
fidiv
push
ret
daa
xor
mov
and
fadd
ficom
pop
mov
mov
adc
pop
fs
jno
adc
outs
(bad)
xchg
stc
cmc
jp
mov
xchg
dec
(bad)
sbb
or
cmp
rol
into
int
xchg
sub
sbb
rol
nop
push
lods
jae
mov
(bad)
xor
outs
cmp
cmp
shl
mov
mov
test
mov
sbb
pop
ret
dec
xchg
loopne
dec
pop
xchg
sub
push
sub
clc
mov
int3
push
inc
mov
xor
cmps
(bad)
mov
sub
jb
addr16
cmp
fild
mov
adc
inc
in
push
outs
out
pop
pusha
adc
sub
mov
shl
call
fwait
ins
retf
xor
in
xor
xchg
pop
pop
loopne
mov
(bad)
in
fisubr
test
jge
sub
dec
adc
dec
fwait
neg
clc
add
ficomp
cmp
push
xchg
mov
or
mov
adc
(bad)
cli
mov
lods
lds
rol
call
int
and
xchg
jb
adc
jp
jns
adc
cmp
loop
mov
js
cld
(bad)
fcomp
cmp
test
imul
aas
xchg
call
sub
out
aas
ds
dec
les
(bad)
out
push
mov
test
or
loopne
inc
adc
mov
lds
jae
daa
loope
push
sbb
repz
out
je
cmp
push
pop
mov
pop
xor
imul
sbb
pop
out
mov
fwait
add
mov
dec
cwde
adc
retf
cs
dec
sahf
out
jmp
ret
aas
push
jmp
(bad)
mov
adc
aaa
mov
fistp
adc
out
jns
popa
push
ror
inc
fldenv
movs
dec
xchg
cmp
out
shl
aas
rol
fadd
jl
stc
adc
mov
sub
mov
dec
lods
or
inc
cmp
icebp
add
(bad)
out
or
xchg
gs
in
push
mov
mov
xchg
mov
push
in
fmul
push
adc
pop
int
mov
mov
dec
xlat
sbb
lods
cmp
(bad)
in
in
pop
mov
in
aaa
call
ins
cmp
mov
fnsave
xchg
cmp
xor
std
jno
jp
xchg
xchg
xchg
sub
push
ss
jns
xchg
jle
push
clc
xor
ret
clc
adc
es
(bad)
jno
xor
out
pushf
add
mov
arpl
pop
or
sahf
iret
dec
mov
shl
gs
lock
mov
lahf
in
popa
dec
jle
pushf
pop
push
cmp
xor
jmp
outs
inc
mov
xchg
inc
pop
dec
adc
xchg
and
xchg
cmps
xor
xchg
inc
pop
rcl
cmp
icebp
stc
cdq
outs
enter
(bad)
and
xor
outs
and
fld
sbb
test
inc
adc
leave
push
retf
les
fsub
aam
or
jle
or
add
push
cmps
mov
mov
and
inc
(bad)
mov
lods
inc
shr
jo
iret
sbb
cli
mov
call
and
jo
mov
mov
sub
stos
jmp
pop
sub
push
cmps
xchg
add
mov
daa
stos
sbb
push
ins
js
mov
bound
fstp
cli
enter
fs
(bad)
out
call
movs
xor
stos
out
mov
loope
add
jmp
xor
jb
sub
fwait
jl
popa
pop
sub
cmps
jae
repnz
pop
or
mov
adc
fcomp
cli
dec
xor
in
push
push
mov
mov
and
push
stc
jmp
xchg
repz
inc
mov
mov
arpl
mov
sbb
xlat
das
mov
add
jne
lahf
jae
sahf
out
push
arpl
inc
sbb
in
(bad)
cld
inc
lds
mov
push
call
sti
fist
inc
adc
dec
sar
pop
dec
shl
addr16
daa
loope
dec
nop
lods
daa
lods
cs
stos
or
jle
(bad)
xor
jecxz
mov
rcr
add
adc
jmp
shr
xor
xor
sahf
xor
mov
sub
hlt
sbb
addr16
cmp
test
das
cmc
aaa
iret
out
jnp
or
sti
sbb
call
sub
jns
clc
and
adc
cmp
call
push
stc
sbb
std
jl
or
outs
repnz
mov
jbe
mov
(bad)
cli
out
int
jae
or
cdq
jecxz
jmp
add
ja
mul
adc
adc
imul
dec
mov
jmp
fld
rcl
pop
sub
dec
fistp
push
pushf
sbb
mov
stos
xchg
ins
lods
inc
mov
jg
jae
mov
les
jmp
pushf
cmp
fcom
pop
ret
pop
jle
xchg
dec
imul
int
mov
ss
cmp
mov
gs
mov
addr16
push
mov
mov
std
imul
adc
imul
and
call
repnz
ret
jne
mov
in
add
test
std
fdivp
arpl
mov
push
fcmovbe
fwait
stos
stc
inc
imul
ins
imul
sbb
mov
mov
dec
out
sbb
clc
sub
movs
xor
inc
adc
add
push
pop
adc
aad
pop
xchg
jbe
sub
bound
cmp
cmp
jle
out
imul
mov
(bad)
jno
mov
cld
inc
aas
sbb
add
or
push
jne
out
mov
push
or
aad
clc
sbb
xor
xchg
es
call
add
mov
add
sub
dec
out
shl
repnz
pusha
fldcw
dec
sahf
push
push
(bad)
push
mov
dec
push
xor
cmp
into
jl
aaa
(bad)
imul
sub
(bad)
pop
or
dec
sub
or
fisub
mov
push
add
push
push
test
inc
cmp
js
add
inc
jb
pop
and
pop
push
fld
repz
(bad)
adc
jge
push
fiadd
sub
enter
out
out
pop
mov
not
aad
xchg
dec
cmc
loopne
cdq
jmp
test
adc
pop
lahf
hlt
out
adc
push
ret
sub
fcmovnbe
das
(bad)
inc
(bad)
mov
mov
test
add
xor
mov
and
pop
cli
movs
rcr
in
je
jo
inc
inc
sbb
icebp
adc
(bad)
mov
cdq
add
sbb
mov
aam
push
mov
push
repnz
xor
rcl
enter
jecxz
stc
push
ja
daa
or
ror
push
daa
cmp
cmp
jmp
jg
ja
mov
jo
and
and
pop
sbb
es
aad
mov
ja
test
icebp
mov
cld
call
sub
jns
js
popa
rol
push
push
call
mov
xor
cmps
add
aas
cmp
rol
sar
leave
cdq
push
cli
mov
je
iret
arpl
(bad)
lahf
ins
pop
push
sar
repnz
lock
shl
cmc
out
ret
cmp
pop
enter
popa
push
jmp
in
sbb
push
ja
push
cli
in
xor
mov
add
add
stos
push
jae
xchg
xlat
je
enter
sbb
jg
mov
repnz
or
iret
movs
inc
sub
jo
icebp
lock
inc
int3
aam
xor
mov
jmp
lds
aad
xor
sub
push
lods
jl
cli
movs
xchg
popf
mov
pop
xor
lods
push
sub
fwait
in
in
out
cwde
ins
outs
sti
or
fcmovne
push
adc
sar
dec
std
fs
call
push
mov
adc
sub
mov
loopne
out
xchg
mov
mov
mov
out
ret
add
sbb
or
cld
ror
les
push
jmp
dec
xor
dec
pop
and
sbb
in
mov
nop
push
xor
mov
(bad)
dec
aam
icebp
in
xlat
ror
scas
(bad)
into
mov
xchg
lock
pop
sbb
sar
jns
mov
lock
cmc
pop
add
in
(bad)
clc
pop
test
add
dec
cmp
loope
add
dec
popf
pop
jmp
cmp
add
cmp
jmp
and
into
clc
repz
push
fs
shr
int3
adc
mov
scas
mov
stc
fcom
cwde
fnsave
sar
cmp
mov
mov
mov
adc
lahf
sub
and
jp
cwde
pop
xchg
rep
jmp
outs
and
fwait
pop
fs
repz
xor
xor
adc
pop
popf
test
pushf
repnz
jge
mov
addr16
mov
dec
(bad)
fcomp
std
pushf
lea
xor
(bad)
mov
(bad)
loopne
fs
icebp
or
es
or
sbb
add
cmp
das
dec
and
fnstenv
repnz
out
xchg
xor
sbb
adc
retf
jns
or
repnz
movaps
(bad)
inc
xchg
jbe
scas
leave
sbb
rcr
movs
inc
ins
cmp
cmp
adc
fwait
mov
outs
movs
(bad)
in
shr
mov
add
add
repz
jmp
pusha
test
sub
in
cli
jne
shl
adc
outs
jl
call
mov
cmp
lock
sbb
xchg
rcl
push
mov
mov
mov
mov
outs
push
push
xor
cmp
icebp
xor
jge
test
gs
mov
jne
pop
aaa
addr16
(bad)
retf
fsub
aam
aaa
xchg
mov
repnz
jmp
adc
ja
xchg
or
add
lock
imul
or
push
data16
ins
pop
pop
icebp
call
mov
lock
cli
ret
push
repz
add
out
pop
pop
pop
xchg
dec
(bad)
sti
adc
ds
mov
or
and
stc
bndstx
xchg
pop
rcl
pop
inc
push
inc
imul
cs
cmc
adc
inc
sub
xchg
sbb
mov
cdq
mov
fcom
in
sbb
in
xchg
test
ret
les
fist
add
jmp
mov
sub
cwde
cmp
or
mov
inc
lods
dec
outs
mov
xchg
cmp
outs
or
std
movs
mov
adc
mov
pop
pop
mov
mov
push
in
std
sbb
pop
sti
sub
jl
out
push
fimul
pushf
sbb
aam
std
and
inc
lds
sbb
mov
(bad)
cmc
mov
inc
(bad)
pop
mov
inc
or
dec
mov
jl
xchg
mov
scas
std
jo
ficomp
adc
mov
dec
clc
sbb
ret
aam
fldenv
ret
jo
mov
push
lds
loopne
cmp
jns
add
xchg
push
pop
dec
xchg
xor
cmp
lods
movs
push
jns
push
(bad)
sti
dec
ret
fistp
ficomp
and
mov
lds
pop
adc
ins
mov
mov
sub
mov
sub
sar
enter
mov
mov
xor
nop
pusha
ficomp
ror
or
aas
idiv
pop
lods
cmp
(bad)
mov
loopne
push
scas
and
repnz
retf
inc
ins
mov
enter
mov
fdiv
call
rol
mov
inc
stc
stos
mov
lea
lahf
add
out
xor
cmp
call
mov
push
jmp
jnp
jmp
mov
stos
add
mov
and
mov
push
fdiv
scas
xchg
or
pop
sbb
cdq
push
(bad)
aas
add
cmps
or
mov
in
sub
fidivr
outs
test
shr
push
fdivr
stos
push
push
push
jne
adc
jl
jb
imul
pop
in
jecxz
jmp
jmp
or
lods
mov
pusha
ret
push
add
idiv
xor
sbb
cmps
cmp
mov
jns
mov
jbe
cdq
(bad)
sbb
xchg
mov
add
(bad)
aas
cmps
sbb
call
aas
int3
call
and
stos
xor
test
cld
(bad)
mov
push
adc
cwde
jo
shl
push
frstor
test
ror
sub
sub
call
mov
mov
sbb
jl
aas
adc
mov
(bad)
fisubr
leave
hlt
outs
mov
mov
xor
xor
call
(bad)
mov
cmp
push
or
push
(bad)
cmps
scas
mov
push
pop
scas
xchg
mov
add
pop
mov
xor
fwait
lods
dec
out
sub
pop
add
(bad)
sub
dec
scas
inc
fwait
sub
and
push
pop
sbb
push
xor
sbb
inc
and
sar
cmp
jns
pop
ret
cwde
and
aas
pop
cdq
std
shr
xchg
arpl
inc
xor
pop
hlt
leave
mov
shl
dec
mov
shl
xchg
fist
mov
xor
pop
call
add
fsub
cmp
mov
add
ret
mov
outs
aam
fcomip
mov
ds
mov
fdiv
aaa
js
cs
sub
mov
dec
sbb
add
mov
xlat
aas
xlat
jecxz
ins
mov
mov
stos
or
aaa
push
ss
and
out
das
repz
fnsave
call
jl
jae
mov
int3
das
loope
jp
repnz
lds
in
add
pop
ins
push
fwait
xor
js
xlat
movs
mov
aam
popf
in
cmps
out
or
inc
sbb
inc
jo
lahf
push
mov
in
into
stos
aas
jle
stos
in
arpl
shr
xchg
pop
call
loope
add
nop
js
cmps
mov
cmp
sbb
fisttp
xchg
and
arpl
cmp
fld
cmp
arpl
imul
retf
pop
clc
cli
add
xchg
fnsave
dec
(bad)
nop
test
add
maxps
inc
push
ja
cmps
test
lds
movs
sbb
sbb
jp
sub
fwait
retf
inc
cs
add
mov
das
inc
aad
mov
retf
and
shl
push
std
sysexit
mov
data16
mov
mov
ins
es
mov
aaa
jg
ror
push
iret
(bad)
cmp
xor
call
xchg
pop
add
ror
mul
jbe
push
outs
daa
pop
sbb
dec
sbb
mov
dec
inc
sbb
mov
out
dec
inc
push
lods
sbb
ins
adc
cmps
mov
mov
pop
mov
leave
mov
jmp
fcom
or
push
aaa
add
dec
lock
iret
test
mov
movs
xchg
enter
pop
fdivr
or
pop
adc
scas
ja
loope
push
pop
and
mov
pop
scas
dec
out
sbb
mov
imul
xchg
repnz
loope
mov
lea
repz
into
aad
(bad)
or
or
pop
loop
sub
pusha
fld
aad
push
lods
call
leave
mov
adc
sbb
sbb
lea
clc
inc
(bad)
loopne
xchg
sub
pop
retf
mov
div
jb
ins
sar
ja
sahf
fimul
or
mov
(bad)
add
add
arpl
lods
sbb
sbb
add
xor
popf
pop
pusha
cld
adc
dec
and
pop
jno
add
repnz
pop
jle
cmp
lods
arpl
fsub
test
dec
xor
cmp
ror
loopne
inc
fs
jae
loopne
std
les
jl
fldenv
sbb
adc
in
int3
shl
jno
jl
push
loop
cmp
and
xchg
loope
sbb
push
(bad)
mov
mov
ins
mov
xchg
rol
fstp
cmp
inc
dec
stos
ss
test
fst
sub
xor
mov
imul
mov
xor
aaa
push
mov
fimul
psrld
mov
cmp
(bad)
(bad)
dec
fild
test
in
loopne
cmps
cmp
pushf
jp
out
test
out
jo
retf
and
sub
fwait
pop
jbe
xor
sub
push
and
popf
push
add
daa
arpl
paddw
push
or
and
ror
add
adc
adc
pop
mov
retf
dec
cld
stos
mov
sub
mov
(bad)
sar
adc
mov
inc
call
repnz
add
nop
scas
adc
hlt
jb
test
pushf
inc
ss
add
(bad)
xor
adc
pop
lea
ficom
cmps
sahf
call
sbb
cmp
mov
mov
loope
mov
mov
sbb
jno
jno
ins
jg
dec
mov
fwait
and
hlt
addr16
loop
or
add
add
pop
je
ss
or
or
int
lahf
bound
inc
xchg
adc
jb
sub
(bad)
call
lods
into
xor
loopne
xchg
or
xchg
mov
not
push
cmp
das
mov
inc
pusha
stos
jno
ja
dec
push
popf
sub
into
rcl
lods
cs
cmp
(bad)
cmp
shr
(bad)
xor
inc
xor
push
repz
dec
and
dec
mov
pop
sti
mov
je
test
mov
ins
ret
fmul
ret
mov
adc
mov
pop
loopne
xchg
push
test
aaa
shl
pop
push
jl
add
punpcklwd
ss
xor
dec
inc
mov
dec
aas
xchg
or
push
cmp
push
mov
icebp
ss
sahf
movs
sub
out
call
push
test
xchg
or
fdiv
hlt
mov
jae
dec
pop
pop
or
xor
push
xor
dec
push
test
dec
mov
call
daa
sbb
sub
les
pop
scas
dec
sar
int
or
mov
mov
jmp
xor
sti
dec
(bad)
retf
mov
idiv
jnp
pop
xchg
call
pop
mov
push
push
aas
lock
loope
scas
inc
adc
int
scas
pushf
and
push
mov
pushf
cdq
movs
push
cmp
popf
and
adc
and
adc
outs
sbb
xchg
mov
push
cs
and
mov
mov
fcmovbe
mov
dec
les
push
ror
add
mov
and
in
mov
mov
bound
xchg
cmp
inc
fst
je
add
ret
rol
dec
jo
jbe
ja
fmul
cmps
cld
add
or
xor
mov
out
push
and
push
fadd
mov
dec
inc
jae
jno
add
pop
xchg
inc
or
cdq
pop
jne
cmp
cmp
xchg
jmp
inc
dec
xor
sbb
xor
xor
push
into
imul
je
mov
xchg
in
ja
inc
xchg
cmps
call
sub
push
xchg
cmp
test
mov
adc
cs
and
jae
cwde
xchg
or
mov
and
jecxz
test
rcr
fdiv
mov
ds
out
gs
sti
sbb
pop
ja
or
jno
fld
popa
mov
add
adc
xor
xchg
fidivr
mov
test
loopne
out
cmp
sub
push
dec
dec
jns
clc
loop
xchg
rcl
stc
lea
cli
sbb
es
push
inc
jecxz
mov
ins
movs
adc
pop
mov
sbb
aas
mov
movs
outs
xchg
fisub
lock
out
dec
lods
xor
adc
push
sti
test
add
fild
sahf
cmp
xchg
mov
and
iret
jns
or
lahf
retf
dec
mov
(bad)
retf
sbb
icebp
cmp
cmp
call
or
bound
pop
push
mov
sbb
adc
rol
mov
jmp
cmps
push
dec
mov
cwde
imul
jecxz
lods
cmp
mov
sub
fidivr
jmp
faddp
add
dec
cmp
test
stos
loope
cs
jbe
icebp
cmp
dec
ret
adc
mov
rol
addr16
dec
retf
inc
cmp
jle
pop
pop
mov
js
call
dec
push
fcomp
jne
xor
inc
jmp
aam
out
hlt
aam
sbb
ret
pop
mov
shl
cmp
or
and
pusha
xchg
in
shl
mov
mov
add
xor
lds
mov
and
pusha
pop
aad
fild
and
pop
jmp
and
mov
jb
push
pop
lods
xor
pop
mov
pop
rcl
stos
fistp
or
and
jno
push
dec
adc
fsubr
push
mov
pusha
jae
test
js
imul
mov
arpl
xchg
xor
inc
mov
aam
lds
in
out
push
pop
lods
aad
popf
push
xor
jbe
js
mov
jmp
into
fcom
dec
fimul
xchg
stc
fwait
loope
or
mov
cwde
pusha
inc
cmc
and
adc
jb
fstp
mov
inc
retf
aam
ins
dec
xchg
mov
xor
and
enter
addr16
xchg
add
cmp
aam
adc
jnp
and
push
and
push
cmp
outs
ret
std
or
mov
pop
sbb
or
xchg
sub
(bad)
sbb
xchg
mov
pop
sahf
xchg
mov
sbb
idiv
mov
ucomiss
call
xor
push
ss
push
cld
imul
xlat
popf
mov
xor
xchg
in
popf
jo
push
mov
xlat
leave
(bad)
jp
popa
jne
sahf
aad
hlt
dec
sub
add
movs
pop
out
jns
mov
dec
inc
imul
ret
lea
in
add
push
inc
mov
jecxz
mov
fs
popa
test
and
and
pop
imul
shl
and
push
adc
ins
cld
add
aaa
jno
es
mov
cmp
xor
nop
inc
add
mov
xor
dec
aaa
ficomp
sub
sub
push
inc
and
lods
xchg
jo
cmp
sub
imul
lods
or
pop
inc
push
dec
in
pusha
sub
mov
cmp
fbld
loope
sbb
and
sub
pop
int3
mov
out
xchg
xlat
aas
jge
dec
popf
mov
mov
xchg
pop
jne
and
xchg
test
pusha
mov
dec
mov
sbb
mov
sar
in
mov
sbb
daa
popa
shr
into
push
imul
idiv
adc
int3
mov
in
adc
cdq
mov
sub
outs
movs
retf
outs
sub
mov
lods
in
lods
fs
mov
push
mov
jns
(bad)
std
pop
sbb
and
mov
out
std
lods
loope
jl
and
add
dec
mov
repz
add
sbb
jae
stc
hlt
in
cmp
mov
cmp
test
pop
cmp
cmp
xor
xchg
movs
in
xor
fs
adc
sar
sbb
adc
out
inc
imul
or
stc
xchg
scas
lods
stos
cld
adc
cwde
cmp
cli
icebp
sub
jecxz
scas
add
enter
add
sub
ds
in
je
sub
retf
pop
movs
mov
fldcw
outs
call
popa
les
jp
call
cvttps2pi
pop
xchg
pop
pop
std
mov
cmp
and
xchg
mov
popa
ficom
retf
mov
xlat
sbb
in
cmp
cli
add
dec
loope
xor
mov
sub
inc
hlt
or
cdq
xchg
push
mov
imul
(bad)
or
mov
jge
data16
cli
gs
js
loopne
push
cmp
and
fadd
popf
repnz
aam
mov
inc
sbb
cdq
xchg
(bad)
cli
in
sar
std
je
test
jns
inc
and
and
(bad)
in
scas
dec
ror
xor
adc
mov
xchg
ret
inc
or
fistp
fidiv
shl
jecxz
mov
add
push
pop
inc
mov
mov
mov
adc
(bad)
cmc
mov
test
dec
sahf
sbb
xchg
push
movs
cmp
fxch
fwait
stc
pop
fldcw
and
jb
add
popa
lods
dec
add
imul
test
movs
sub
loop
pop
ins
cld
adc
in
adc
lods
pop
adc
addr16
sub
cmp
arpl
xchg
ja
test
addr16
lea
inc
mov
fsubr
mov
and
jge
and
jl
popf
not
pop
mov
sbb
cmp
dec
xchg
jp
pop
idiv
test
push
jecxz
jo
or
pusha
ret
mov
jae
inc
dec
and
sbb
and
xchg
xchg
jmp
repz
(bad)
dec
xor
ins
xchg
aas
dec
dec
or
imul
adc
mov
mov
fst
pop
dec
mov
xchg
dec
cvtps2pi
push
xchg
ja
mov
ins
call
push
call
jo
push
jne
mov
mov
inc
push
jle
(bad)
std
stos
fs
scas
jno
xchg
hlt
das
jp
sbb
mov
ror
stos
dec
jecxz
mov
mov
mov
je
xchg
fcomp
nop
test
pop
cmp
dec
data16
cmc
mov
(bad)
sti
pushf
jne
inc
lds
sbb
xor
add
js
in
movs
push
fistp
dec
js
push
int
adc
fisttp
and
xchg
adc
push
js
cmp
in
add
(bad)
movs
and
mov
cmps
cmc
leave
test
add
mov
cmc
iret
aad
sbb
dec
(bad)
or
fwait
sub
call
fdivp
adc
not
pop
mov
fist
xor
mov
and
movs
in
test
mov
xor
arpl
mov
add
sbb
ret
adc
push
mov
mov
xlat
add
sub
fsub
adc
dec
push
mov
jno
jae
jb
in
lods
call
shr
fsubr
add
repz
inc
sub
mov
dec
out
xchg
xchg
pop
lods
ffree
out
inc
mov
mov
movs
inc
int
xor
imul
out
ja
test
bound
xor
pop
and
add
xchg
mov
test
idiv
mov
and
jbe
ret
push
scas
push
test
cs
bound
pop
mov
xchg
in
inc
jnp
push
bound
push
dec
aaa
imul
in
fisttp
in
popf
out
add
shl
lds
push
jmp
mov
cmp
(bad)
sub
pushf
dec
(bad)
movs
pop
jecxz
push
push
xor
stc
ins
adc
mov
and
in
mov
arpl
xor
lahf
add
pop
pop
out
push
cmps
mov
adc
mov
lahf
hlt
out
xor
out
adc
or
call
fsubr
push
rcr
jns
xchg
in
out
add
adc
(bad)
jmp
mov
or
xor
push
mov
and
dec
or
cmp
xor
xchg
inc
cmc
adc
repz
pop
dec
cwde
sbb
cmp
les
mov
mov
jmp
in
sub
mov
cmc
dec
mov
sub
nop
(bad)
int3
sub
fwait
enter
ret
(bad)
stc
jp
iret
add
in
fist
pop
add
call
push
xchg
mov
fdivrp
adc
pop
xchg
icebp
xor
inc
jae
movs
jp
sub
icebp
gs
push
pop
pop
(bad)
jo
ss
dec
dec
xchg
shr
outs
pop
mov
into
mov
sbb
xchg
frstor
test
icebp
xchg
xor
repz
shl
sahf
mov
(bad)
je
iret
jns
into
mov
enter
xchg
test
adc
sar
icebp
xchg
ror
cld
cmp
ja
or
mov
test
in
daa
cs
lahf
arpl
sub
stos
(bad)
mov
mov
pop
adc
sub
out
fwait
mov
add
addr16
out
leave
or
pop
or
fcmovne
jo
es
sbb
stc
nop
jne
imul
cmp
pop
imul
push
cmc
or
sbb
push
ret
sub
repnz
(bad)
stc
or
add
xlat
aad
cmp
rol
js
fdiv
inc
jns
jne
adc
hlt
push
je
jecxz
push
adc
mov
add
and
pushf
jno
cs
sbb
push
pop
shl
(bad)
aam
inc
test
push
popa
js
mov
pop
(bad)
dec
ror
pop
xlat
and
test
xchg
adc
or
icebp
push
cmp
dec
mov
mov
ds
or
loop
mov
sti
inc
std
jne
pop
push
fcmovbe
out
jle
mov
sbb
out
test
pop
nop
(bad)
dec
out
push
xchg
and
mov
repz
xchg
dec
outs
rcl
ja
test
push
daa
movs
jmp
rcr
sbb
inc
(bad)
cs
dec
cmp
and
in
in
nop
dec
adc
clc
sub
callw
jae
movs
push
fdiv
jns
ins
sbb
ins
jmp
lock
mov
and
js
fiadd
mov
adc
lahf
push
inc
(bad)
cmp
push
fst
sbb
arpl
ficomp
into
test
jae
in
stos
jg
cmp
dec
mov
jae
inc
fild
popf
jo
and
xlat
pop
scas
pop
push
ins
stos
div
mov
push
jo
adc
jo
ror
dec
popa
iret
in
les
aas
adc
nop
(bad)
out
mov
adc
cmps
icebp
in
rol
adc
push
or
shr
loopne
test
lods
(bad)
out
cli
scas
push
jae
xor
rcr
loop
mov
sbb
push
push
xor
rol
lds
push
inc
mov
xchg
(bad)
inc
pop
xor
gs
adc
aam
mov
xor
dec
test
pop
pop
xlat
mov
sub
xor
(bad)
je
pop
movs
adc
(bad)
or
jmp
xor
and
cmp
inc
int
jo
xor
cmp
dec
or
scas
and
jg
mov
std
jns
repnz
mov
mov
mov
and
mov
(bad)
dec
sbb
xlat
push
sbb
loope
movs
xor
retf
or
push
popf
jge
jl
mov
retf
imul
jmp
sbb
aad
sub
out
icebp
push
push
mov
neg
cmps
mov
push
rcl
or
imul
xor
sbb
or
jecxz
jecxz
mov
cli
jne
cmp
leave
jecxz
and
xchg
xor
mov
ret
inc
mov
xchg
mov
pop
js
cmp
movs
loope
mov
mov
repnz
sub
mov
xor
mov
push
mov
push
sub
or
cmps
test
scas
jno
dec
inc
push
pop
push
test
ret
pop
push
push
xor
add
cmp
cli
or
outs
xchg
mov
inc
dec
mov
jns
mov
add
stos
int3
bnd
adc
or
inc
pop
loop
(bad)
lds
jne
mov
adc
add
rcr
pop
sar
imul
scas
jnp
mov
lahf
(bad)
lahf
push
adc
retf
fsub
in
sub
scas
out
pop
cld
sub
popf
mov
hlt
push
arpl
cmp
popf
call
inc
pushf
shl
mov
mov
and
mov
mul
sbb
lds
in
pop
xchg
mov
add
imul
fild
stos
inc
jbe
div
cli
push
loop
push
inc
fld
or
inc
jmp
in
call
dec
xchg
sar
adc
(bad)
jge
add
inc
pop
cs
cmp
jecxz
fistp
addr16
lea
adc
js
mov
adc
inc
call
outs
add
out
push
mov
and
xor
popa
push
jbe
fsub
push
test
inc
and
outs
pop
or
loope
shl
inc
fidivr
jno
mov
sbb
pop
gs
xor
sub
(bad)
(bad)
adc
sub
test
xor
dec
aaa
and
add
push
test
pop
fstp
into
dec
cs
pusha
push
call
jp
clc
push
js
push
push
daa
cmps
mov
adc
int
sbb
daa
nop
enter
or
adc
jb
shr
lea
scas
xlat
cmp
leave
fnsave
ret
out
sbb
cld
ror
inc
jecxz
movq
test
fiadd
pop
xor
xor
sbb
push
sub
in
jmp
pop
ror
bound
sti
jo
adc
sahf
in
(bad)
sub
pop
mov
xor
add
inc
cwde
xchg
cmps
ins
sub
mov
cmp
imul
shl
inc
sub
and
call
adc
jle
pop
push
mov
outs
sub
lock
mov
sbb
clc
ins
cmp
dec
fcom
sar
ins
add
and
mov
mov
and
sub
fild
(bad)
mov
mov
adc
sub
imul
or
(bad)
sar
push
addr16
gs
and
pop
outs
data16
retf
jle
sbb
xor
mov
or
in
xchg
jns
inc
std
cmp
mov
cmp
ja
fwait
out
mov
call
ret
mov
movs
adc
and
call
scas
(bad)
sbb
ret
clc
scas
pop
xchg
aad
push
mov
dec
rcl
add
cmp
xor
loop
jl
repz
retf
fstp
cli
xor
arpl
pop
dec
mov
or
ja
jo
xchg
outs
mov
push
into
push
xchg
lods
pushf
mov
scas
cmc
ret
sub
xor
arpl
mov
or
mov
leave
push
push
xor
aad
shl
cwd
cs
pop
adc
repz
out
daa
aaa
jmp
mov
(bad)
mov
cli
mov
icebp
fxch
inc
xlat
mov
iret
xor
adc
ins
loope
(bad)
icebp
xor
fadd
mov
jle
xor
and
xor
adc
cmp
sub
movs
test
inc
and
jl
jnp
es
mov
pop
sbb
hlt
mov
cld
lock
lahf
rcl
repz
and
inc
mov
fsubr
pop
sub
ret
sbb
scas
mov
adc
mov
stos
aas
into
mov
dec
pushw
jle
shl
mov
sbb
adc
push
pop
jae
pop
pop
test
js
pop
outs
push
shl
call
shl
lds
xchg
mov
fidivr
call
cmp
call
cmp
out
jmp
push
or
imul
push
shr
bound
and
pop
scas
arpl
inc
jecxz
mov
xlat
dec
push
sbb
fmul
ins
stos
lods
jecxz
sub
icebp
outs
pop
retf
loope
(bad)
mov
imul
adc
bnd
mul
inc
fisttp
xor
adc
rcr
loopne
mov
scas
jl
and
outs
fcomp
cmc
push
imul
and
cld
xchg
push
sub
mov
pop
cdq
in
jp
mov
lahf
jg
ret
mov
sub
lods
xlat
pop
movs
add
adc
and
scas
add
lods
test
inc
loopne
sbb
pop
mov
jmp
lea
cmp
push
cmp
stos
mov
imul
mov
sbb
sti
xchg
test
sbb
pop
and
retf
pop
mov
adc
cmp
sub
push
loope
aas
into
ins
jno
lods
ds
ret
outs
jnp
fs
mov
cmp
(bad)
jmp
jns
int3
les
mov
mov
test
rcl
loope
jp
pop
pop
(bad)
fist
adc
loopne
(bad)
jo
jl
sub
xor
pushf
sbb
mov
stos
mov
lea
inc
xchg
not
mov
sub
loope
sar
or
or
lods
dec
xchg
xchg
hlt
add
imul
daa
mov
xchg
test
adc
call
mov
dec
test
push
cmps
push
stc
cmp
les
xchg
cmp
pop
mov
add
add
ror
xor
fwait
cmps
imul
dec
sub
push
jmp
sbb
or
fstp
out
inc
lods
jno
rcl
sbb
mov
inc
fwait
outs
sbb
mov
inc
(bad)
jge
movs
mov
cli
sub
pop
or
icebp
imul
jnp
push
push
add
and
pop
add
jnp
jae
and
int3
lods
pop
loope
cmp
dec
pushf
test
pop
fsub
sbb
adc
jl
xchg
pop
cli
xor
vmwrite
ins
cmps
push
mov
aaa
sub
adc
mov
and
xchg
and
stc
xor
mov
loop
lahf
es
jmp
adc
retf
pop
sbb
dec
jae
or
sbb
xor
(bad)
push
sbb
inc
aad
push
daa
xlat
test
mov
xsha1
cmps
or
pop
push
pushfw
paddusw
and
sbb
cmps
pop
sbb
cli
int
sub
(bad)
ins
sub
cmp
xor
out
rcr
pop
jmp
push
xor
inc
stos
sar
ja
mov
or
dec
pop
adc
cmp
and
sti
pop
aas
sahf
and
add
daa
cmp
ret
mov
cwde
dec
ficomp
pop
aas
mov
mov
cmp
mov
leave
pop
cs
lock
and
in
xlat
push
data16
and
or
sti
jecxz
fnstsw
push
fnstsw
(bad)
stos
shl
jl
into
call
data16
mov
xchg
cmps
inc
lock
jp
push
jecxz
dec
jns
pop
ds
pop
inc
push
mov
sub
mov
or
lock
push
lahf
shr
mov
ret
arpl
pop
and
in
imul
pop
aaa
cmp
sub
dec
adc
ret
ins
inc
out
adc
pop
in
or
jl
test
jmp
int
out
test
retf
mov
cmc
pop
(bad)
pop
ret
dec
xchg
mov
push
in
and
adc
mov
xor
cdq
daa
xor
mov
in
sub
pop
out
push
push
adc
inc
xchg
mov
jmp
pop
data16
jg
inc
pop
das
jb
cmp
adc
dec
lds
xchg
fadd
jb
sahf
pop
xchg
rcl
cs
rol
mov
iret
or
jnp
loopne
jecxz
sbb
mov
cmps
out
dec
sbb
cli
lock
popa
pop
mov
mov
outs
ret
mov
inc
imul
mov
pop
mov
out
add
inc
movs
lods
xchg
jb
shl
stos
cmp
jge
popf
fld
ret
jg
enter
dec
mov
xchg
cld
ret
dec
push
js
xchg
test
addr16
ds
sub
cli
add
lods
(bad)
jno
fs
push
inc
mov
mov
pop
addr16
imul
mov
imul
cs
sbb
fstp
dec
xchg
adc
mov
pusha
pusha
mov
fdivr
push
fmul
and
or
adc
fdiv
mul
sti
jo
leave
into
or
mov
adc
pop
ds
xchg
mov
out
das
(bad)
mov
mov
test
pop
imul
aaa
test
add
mov
(bad)
sub
push
(bad)
(bad)
jmp
add
cmps
mov
movs
rcl
pop
or
xlat
pop
out
mov
fnsave
lock
inc
test
pop
ret
adc
jo
cmp
sti
in
gs
ret
fnstcw
test
test
mov
mov
mov
jb
imul
clc
pop
js
push
pop
push
test
pop
cmp
add
or
out
(bad)
(bad)
fnstsw
jb
inc
mov
sti
nop
(bad)
neg
les
cs
pop
pop
xchg
neg
jmp
fwait
push
sub
gs
sub
loop
pop
mov
mov
loope
cs
jb
(bad)
stc
fmul
pusha
in
fist
push
and
popf
cwde
pop
sub
js
mov
das
retf
jmp
ret
xchg
xchg
pop
fs
adc
push
xchg
rol
in
cmc
add
push
clc
rol
jge
cmps
test
cmps
sub
or
xchg
stos
pop
or
push
clc
daa
sbb
mov
jle
pop
jbe
ins
clc
pop
sub
inc
dec
mov
push
lods
test
push
xor
jae
sti
rcl
or
adc
jmp
mov
fisttp
cmps
cmps
imul
loopne
shl
push
leave
fcomip
cdq
scas
dec
jp
or
ins
mov
push
mov
pop
imul
add
mov
ret
inc
inc
cmp
pop
sbb
sbb
mov
cld
add
or
jns
fwait
mov
cmp
mov
mov
scas
dec
ja
mov
xchg
xor
addr16
int
hlt
or
mov
xor
jns
aas
mov
test
cli
mov
or
push
ret
gs
mov
and
arpl
pop
xor
push
mov
inc
cmps
mov
push
cmp
push
push
rcr
hlt
xchg
repz
outs
outs
push
les
add
call
push
cmc
or
pop
in
es
pushf
js
pop
mov
div
pop
pop
xor
mov
add
adc
dec
call
enter
mov
inc
dec
jmp
mov
push
outs
ins
(bad)
cmp
pop
adc
mov
cmp
out
stos
and
pop
dec
adc
or
(bad)
pop
jae
inc
out
icebp
mov
ins
(bad)
mov
pop
cmp
and
cmp
push
inc
pushf
cs
fst
mov
push
out
sbb
dec
mov
out
call
sub
sti
fdivr
cmp
ror
jo
inc
je
or
inc
repnz
jns
mov
das
test
sbb
inc
push
mov
push
xor
cwde
sub
in
mov
xchg
push
jo
xchg
test
das
sbb
rol
xlat
nop
mov
fwait
cmp
or
ror
and
cmp
(bad)
jo
jg
add
and
(bad)
popa
pop
in
mov
rcr
xchg
xchg
in
bound
jae
test
std
sti
ins
mov
imul
fadd
or
mov
jbe
push
(bad)
adc
cmp
cmc
inc
xchg
xchg
hlt
pushf
test
sahf
jo
sti
(bad)
xchg
daa
out
xor
sbb
retf
inc
mov
mov
inc
addr16
fstp
mov
jbe
mov
sbb
inc
cmp
mov
mov
retf
fild
fwait
test
pop
outs
retf
fnstenv
push
mov
cmp
pop
ror
jle
xor
loopne
mov
or
mov
push
lock
imul
gs
adc
xor
out
out
inc
sti
add
push
in
clc
mov
pop
clc
and
add
sbb
or
(bad)
neg
mov
cmc
js
je
out
push
cmp
inc
pop
jmp
push
dec
fst
loop
or
retf
lds
test
sahf
inc
sbb
push
mov
push
into
adc
jl
cmps
pop
out
outs
add
xchg
call
mov
mov
jge
in
dec
inc
xchg
(bad)
jne
not
fdiv
sahf
jbe
xchg
xchg
push
fsub
xor
pand
mov
cwde
xor
pop
jb
adc
mov
and
mov
mov
das
cmp
xchg
test
stos
arpl
lahf
int3
adc
mov
xchg
ror
jnp
adc
imul
sub
pop
lea
inc
pop
dec
mov
mov
out
into
push
iret
push
dec
aaa
mov
pop
mov
mov
xor
push
test
test
iret
je
in
pushf
js
lea
bound
cmp
rcl
add
das
punpckhwd
shl
aam
pop
mov
std
inc
pop
xchg
in
and
add
popa
dec
popf
call
cli
mov
ins
or
sbb
pop
cmps
or
inc
(bad)
sar
mov
mov
iret
inc
sub
lds
dec
ror
or
out
call
adc
mov
mov
cdq
out
dec
adc
retf
jg
ret
sbb
dec
fisttp
neg
mov
inc
fwait
jae
jo
cdq
(bad)
mov
test
repz
dec
fidivr
pandn
push
lahf
fwait
test
dec
dec
push
adc
cld
jae
das
cmp
push
(bad)
std
push
in
hlt
add
push
test
and
sbb
mov
cmps
mov
and
pop
popf
repz
mov
outs
sub
cmps
ss
mov
ds
inc
movs
cmc
xchg
ret
stos
or
mov
leave
inc
and
neg
push
mov
pushaw
repnz
aam
lahf
int
sub
ins
fmul
sub
lods
jmp
add
sbb
cmp
sub
cwde
jno
fs
cmp
jp
sbb
data16
push
lahf
inc
mov
call
loop
add
sub
or
inc
pop
mov
call
call
and
mov
popf
addr16
jne
(bad)
call
test
inc
out
sbb
xchg
neg
lds
scas
push
sub
push
jb
inc
jge
mov
xchg
and
retf
jae
inc
scas
ins
fbstp
outs
jno
xor
push
add
je
data16
call
loopne
mov
ret
or
in
ja
into
xor
mov
and
jmp
jle
and
push
cmps
in
mov
addr16
xchg
sub
retf
scas
push
push
sbb
inc
sub
xor
pop
push
in
not
ror
xchg
push
pop
xor
lds
mov
inc
sub
sbb
and
pop
inc
sbb
out
ror
lods
outs
push
mov
in
inc
mov
or
inc
or
shl
mov
and
ins
cmp
inc
pop
outs
mov
clc
cli
xchg
arpl
xor
sbb
sub
inc
mov
popa
sub
imul
(bad)
cmp
mov
lea
dec
mov
call
sub
iret
aam
das
push
es
cmp
cmp
and
and
jns
adc
or
xor
pop
fcompp
jo
pop
pop
fs
adc
out
outs
sub
push
jmp
pop
leave
into
lods
sub
and
repz
cmp
xor
sbb
popa
mov
fwait
add
repz
std
lods
in
fdiv
or
dec
adc
jns
shl
aad
test
retf
leave
(bad)
mov
test
jmp
mov
inc
movs
pop
shl
das
leave
imul
cmp
jns
xchg
cmp
cli
lods
retf
and
loop
mov
and
movs
pop
sbb
fs
mov
and
int
pop
xchg
cmp
cmp
mov
test
data16
ret
dec
ror
ror
dec
mul
jo
cwde
fld
(bad)
mov
daa
imul
ficomp
shl
inc
jp
or
test
ret
or
jle
sub
stos
lock
test
mov
sub
addr16
dec
pushf
pop
test
mov
popa
mov
inc
mov
and
div
mov
in
push
or
(bad)
ja
mov
in
pop
inc
or
in
jno
stos
jbe
push
iret
and
pop
cdq
and
js
retf
jl
fnstenv
and
or
(bad)
mov
sub
sbb
mov
and
sub
es
hlt
sub
out
ja
retf
pop
(bad)
addr16
aam
arpl
inc
scas
push
mov
jle
(bad)
lea
ss
jb
xchg
loope
lahf
mov
mov
(bad)
inc
(bad)
mov
pop
stos
push
pop
jne
xchg
mov
cmp
or
in
ins
out
sbb
leave
cmps
add
fiadd
call
lods
pop
les
loopne
scas
xor
mov
call
jl
imul
jno
ret
call
in
add
gs
xor
sub
das
sbb
mov
jns
xor
cld
iret
gs
pushf
enter
ds
or
out
pushf
add
cmps
jbe
rol
push
(bad)
shl
scas
bound
xchg
in
(bad)
xlat
ret
ins
je
imul
ins
cmps
adc
add
stc
addr16
fdiv
out
imul
scas
pushf
push
and
scas
push
pop
push
scas
aam
adc
mov
test
pop
sbb
dec
ficomp
sub
inc
ror
add
sub
cmp
mov
adc
out
in
js
sbb
jle
xchg
loop
mov
dec
fnsave
pushf
mov
mov
(bad)
movs
add
cmp
lea
jnp
xchg
retf
bound
xchg
sub
xor
(bad)
mov
into
pop
ror
push
loop
push
outs
pop
sbb
rol
mov
js
hlt
in
mov
ret
ins
jg
mov
sub
js
mov
add
xchg
dec
inc
and
add
in
jl
or
inc
setl
mov
movs
shl
inc
mov
stos
es
cmp
clc
iret
loope
mov
dec
mov
shl
dec
xor
cmps
adc
pop
ins
jbe
sbb
fisttp
xor
out
inc
sbb
jl
cmp
call
je
push
sub
and
cmc
or
ret
ret
aam
jbe
fdivp
ins
sti
mov
inc
pusha
ds
(bad)
and
mov
test
jno
xlat
cmps
mov
jp
mov
mov
push
xor
scas
cmp
or
out
int
fs
sub
(bad)
dec
dec
mov
inc
movs
xchg
mov
in
pop
and
fwait
cmp
sub
xchg
mov
das
jb
ret
int
xor
and
cmp
cld
sub
ret
fidivr
sub
dec
dec
sub
push
gs
in
repz
mov
cwde
push
adc
pop
pusha
icebp
call
retf
sbb
in
hlt
clc
mov
mov
out
mov
(bad)
jnp
mov
outs
push
ret
adc
in
mov
pop
out
bound
movs
sbb
shr
test
cmps
pop
movs
mov
inc
vmptrst
sub
scas
or
shl
movs
xchg
mov
mov
ret
(bad)
jae
sub
mov
mov
(bad)
(bad)
fstp
ins
lods
push
or
xchg
int3
(bad)
and
stc
inc
push
xor
xlat
xchg
rdpmc
mov
cmp
das
adc
sbb
test
add
pop
sbb
sbb
daa
ja
ins
sbb
(bad)
push
pop
sbb
mov
mov
lahf
enter
ret
and
cli
sub
cmps
adc
nop
popf
xor
pop
ror
fs
retf
test
xor
call
jne
sahf
repnz
jns
test
test
cmp
mov
add
add
mov
dec
or
xchg
out
cmp
pop
inc
dec
push
sbb
inc
fucomp
(bad)
aam
push
or
loopne
shl
and
push
mov
sbb
or
lahf
add
pop
sbb
cdq
mov
and
xchg
popf
and
mov
ret
sahf
jg
and
sub
sub
mov
lock
and
popa
mov
scas
ins
movs
jno
clc
fiadd
(bad)
outs
add
and
sbb
nop
repz
mov
dec
shl
daa
repz
mov
dec
add
xchg
push
fimul
pop
int
(bad)
repnz
jne
inc
jl
sub
push
cmps
xchg
cmp
scas
addr16
sbb
jae
hlt
or
cmp
popa
jne
dec
add
(bad)
shr
(bad)
push
dec
add
mov
dec
(bad)
dec
or
hlt
shl
sub
das
xor
hlt
jno
add
inc
lods
mov
add
popf
jb
lock
mov
cld
ja
cld
inc
and
fisubr
fidivr
shr
in
ret
pusha
stos
jmp
sbb
out
jmp
inc
int
dec
(bad)
repnz
in
(bad)
mov
outs
pop
scas
jne
mov
add
movs
mov
mov
mov
and
sbb
jno
lock
rcr
push
xchg
stc
adc
syscall
mov
movs
add
sbb
outs
and
and
xor
and
push
mov
push
aaa
jns
lods
(bad)
mov
or
mov
add
stos
out
cld
fstp
inc
ds
in
sub
ja
or
fwait
or
mov
inc
mov
int3
jae
jns
push
sbb
mov
mov
inc
scas
inc
push
xchg
lahf
dec
test
aas
ret
adc
and
mov
sbb
inc
movs
in
nop
bound
sbb
fnstsw
mov
mov
(bad)
xchg
daa
pop
and
mov
scas
cli
mov
ror
dec
scas
cmp
or
lahf
cld
sub
inc
xor
arpl
jecxz
mov
mov
inc
fbld
pop
cs
test
mov
xor
pop
in
pop
ins
jns
adc
and
cmc
jmp
imul
movs
xchg
mov
sahf
ret
cmp
call
push
adc
xlat
xchg
cmps
dec
cmp
mov
or
xchg
or
push
adc
add
fisub
mov
pop
jg
les
repnz
xor
fldcw
jmp
ja
sbb
xchg
xchg
sbb
jl
ffree
push
cmp
ins
xor
fstp
(bad)
mov
and
nop
pop
mov
push
dec
mov
js
imul
push
jne
add
jo
sbb
push
test
sar
(bad)
cmps
dec
fcomp
stos
ss
jmp
stos
or
hlt
aas
push
mov
and
test
ss
jle
repz
setno
(bad)
sahf
mov
sbb
jg
mov
adc
xchg
out
push
mov
lods
lea
mov
(bad)
mov
popf
mov
test
aad
mov
mov
push
cmp
out
(bad)
loope
popa
pop
(bad)
ds
rol
dec
dec
imul
push
iret
and
and
fidivr
test
sbb
mov
mov
fild
jg
int
cs
jg
xchg
mov
int
iret
ret
test
les
(bad)
in
and
aas
psrlw
addr16
cmp
jb
cmp
lock
cmp
xchg
push
ins
std
cmps
lods
or
aam
or
aam
push
mov
jmp
cmp
or
cmp
pop
or
push
and
mov
inc
fcmovbe
mov
mov
je
cs
jecxz
fistp
fsub
jl
adc
push
and
push
mov
ficomp
pop
push
inc
and
push
mov
pushw
fdiv
dec
mov
stos
mov
mov
in
mov
pusha
xor
(bad)
(bad)
cld
inc
mov
add
sbb
call
pop
dec
js
cli
lods
mov
test
adc
or
cmps
jge
or
mov
jmp
in
and
fstp
mov
movs
dec
ss
or
sub
pop
adc
sbb
arpl
jnp
jmp
push
pop
(bad)
push
pop
sbb
sti
pop
in
popf
xor
xchg
pop
push
daa
mov
cmp
push
pop
xor
pop
add
scas
rcr
cmps
adc
push
jae
push
jle
push
adc
(bad)
jo
inc
inc
icebp
cmps
stos
mov
cmps
test
mov
scas
sub
fs
jnp
adc
sahf
bnd
mov
push
xchg
cmp
(bad)
xor
or
pop
push
lock
push
dec
jno
imul
lods
sbb
(bad)
or
xchg
les
jne
sbb
dec
mov
inc
pop
sahf
dec
pop
icebp
loope
and
movs
xchg
lods
or
xlat
inc
inc
jb
sbb
das
push
pop
daa
and
cmc
xchg
gs
mov
pop
or
je
scas
iret
jno
std
pusha
dec
cmp
mov
sbb
neg
fld
daa
xor
sbb
test
loop
xor
pop
inc
or
or
jg
inc
repz
mov
cmp
retf
daa
push
lods
outs
je
inc
mov
cmps
jae
fisubr
test
mov
adc
add
ins
js
pop
mov
sti
push
das
or
sbb
adc
push
addr16
jle
xchg
cmps
jle
lds
mov
xchg
stc
js
jmp
cmp
cmp
jl
addr16
mov
movs
ins
push
inc
dec
or
adc
add
xchg
pop
xchg
mov
xlat
cmp
xchg
(bad)
jnp
dec
dec
cmp
icebp
xor
sub
xchg
je
jle
das
out
xor
add
xor
out
test
repnz
fsubp
inc
lods
les
pop
clc
jge
(bad)
outs
push
in
out
or
mov
lods
and
ss
retw
and
imul
pop
fnstsw
pop
int3
fst
sti
fisttp
cmc
adc
cmp
xor
pop
mov
xor
sub
and
mov
idiv
int
cmps
popf
jl
xchg
(bad)
lods
(bad)
add
inc
fnsave
or
dec
adc
jbe
std
push
sub
add
mov
sbb
ins
(bad)
jns
fist
sub
sub
popa
popa
std
mov
mov
push
(bad)
or
movs
mov
sbb
pop
xor
aaa
imul
fsubrp
pop
daa
iret
cmp
jle
adc
in
jmp
or
in
dec
cmp
add
or
mov
mov
sahf
mov
out
xlat
push
jno
dec
(bad)
scas
mov
fs
or
or
xchg
jmp
call
test
stos
inc
(bad)
inc
cmp
stc
enter
xor
lods
fidivr
movs
inc
or
inc
sbb
add
data16
pop
cmp
mov
into
add
mov
push
adc
dec
test
mov
and
mov
jp
xor
imul
pop
push
inc
inc
pop
retf
dec
stos
div
ja
cli
sub
cmp
dec
push
fidiv
pusha
or
aad
inc
xor
dec
retf
jb
or
retf
popa
cmps
call
int
inc
arpl
mov
std
mov
bound
mov
hlt
test
and
shl
lods
jmp
jl
in
test
sub
stos
push
loope
xchg
mov
cmps
adc
ins
mov
arpl
mov
sbb
xor
(bad)
iret
call
jno
push
bound
push
pop
cli
sub
adc
mov
ins
adc
call
or
inc
pop
push
sub
push
pop
mov
mov
out
xchg
mov
iret
popf
mov
and
jmp
add
xchg
sub
ss
inc
retf
sbb
mov
jns
pop
sbb
xor
jle
add
(bad)
(bad)
jl
popf
jne
adc
mov
adc
sbb
shl
repz
test
aam
sub
pop
cs
popf
inc
cmp
ret
fisubr
mov
push
daa
loop
dec
dec
sub
add
jg
jo
push
or
es
leave
stc
adc
push
lods
outs
in
pushf
loopne
push
add
jp
or
add
arpl
out
or
xchg
imul
dec
jb
xor
test
cs
mov
stc
mov
inc
xlat
pop
inc
push
jno
cli
(bad)
out
push
jno
cmpps
sbb
push
bound
jmp
fwait
xor
aas
enter
jecxz
addr16
push
jb
dec
popa
mov
lea
add
or
dec
mov
(bad)
aad
loopne
in
cld
inc
mov
and
fs
fld
test
stos
cmp
dec
imul
repnz
inc
jne
inc
push
pop
add
out
mov
inc
pop
jg
sbb
repnz
xchg
sbb
fwait
xchg
iret
inc
sub
hlt
jg
mov
test
cmps
mov
mov
or
xchg
int
aam
ret
cmp
loope
stos
test
push
sub
mov
mov
mov
inc
jo
test
xchg
pop
iret
aas
mov
mov
outs
icebp
(bad)
xchg
movs
and
les
inc
dec
dec
jl
rcl
push
pop
mov
in
inc
shr
push
sbb
push
push
lahf
adc
inc
std
dec
loope
(bad)
or
adc
mov
mov
sub
xor
sub
jmp
push
ror
iret
pop
pop
gs
xchg
and
lea
xchg
loop
jnp
jmp
mov
retf
test
push
ins
pop
sbb
and
jecxz
xchg
adc
popa
mov
fdiv
xchg
and
jl
or
jbe
push
nop
enter
inc
or
dec
movs
mov
stc
nop
adc
pop
sbb
add
cmp
(bad)
fistp
iret
jl
push
push
lods
xchg
cmp
nop/reserved
xor
into
outs
jp
jo
retf
xchg
dec
adc
add
adc
ins
ja
movs
fiadd
lods
lds
aaa
push
push
pusha
ret
leave
or
jno
adc
sub
cmc
mov
jle
enter
pop
cli
mov
cmp
call
nop
dec
pop
cmp
ja
xchg
mov
loop
sbb
xchg
push
loope
retf
(bad)
int
loop
push
hlt
xor
shl
mov
xchg
dec
imul
adc
shr
cmc
push
xchg
xor
inc
push
sbb
jl
test
pop
inc
mov
mov
push
inc
je
inc
mov
push
in
pop
mov
fist
mov
cmps
sbb
les
mov
or
mov
jmp
jmp
push
dec
jbe
pusha
leave
add
and
nop
aam
jae
xor
outs
icebp
or
sbb
outs
jo
cmp
lock
cli
adc
jno
cmp
push
mov
(bad)
fsubr
add
icebp
and
lea
std
xchg
stc
and
pop
mov
and
sub
inc
bound
add
mov
dec
push
mov
ret
inc
and
popf
or
cmp
sbb
aam
adc
icebp
xchg
iret
out
shr
and
push
add
push
and
add
inc
cmps
enter
(bad)
pop
loope
dec
add
fld
leave
mov
pop
aam
outs
ds
push
out
popa
jg
out
adc
mov
mov
(bad)
xor
sbb
pop
inc
clc
adc
inc
xor
aam
ds
ret
imul
lea
mov
xor
shl
push
pop
pusha
cli
push
pop
cmc
sbb
mov
inc
cmp
dec
mov
fisub
data16
pop
addr16
ins
repnz
xchg
lds
int3
inc
sbb
hlt
mov
xlat
mov
adc
add
add
(bad)
hlt
dec
cmp
idiv
jnp
cmp
fs
(bad)
jne
cmp
or
arpl
pop
jne
test
jo
dec
pop
push
aam
sahf
es
mov
inc
lds
xchg
lahf
sahf
mov
(bad)
mov
stos
adc
(bad)
dec
push
ja
call
outs
mov
dec
out
mov
jae
cmp
add
or
out
cmp
sub
imul
jge
sub
les
ja
cli
dec
out
(bad)
jb
and
xchg
lods
add
movs
mov
arpl
xlat
sub
icebp
pushf
out
add
pop
leave
es
and
dec
rcl
ficomp
mov
cmp
lds
pushf
add
test
sub
scas
and
std
sbb
jns
rcr
pushf
imul
rcl
neg
ret
sub
adc
ret
pop
stos
jp
cld
cmp
adc
dec
xchg
sub
test
je
jg
aad
mov
(bad)
cmp
push
xchg
movs
cmp
lea
push
mov
inc
fisub
sub
and
shr
test
cmp
nop
outs
mov
cdq
in
inc
mov
ja
jmp
arpl
push
cmc
retf
jno
sbb
lea
fcom
int3
movs
xor
mov
in
rcr
mov
mov
or
xchg
test
jnp
sub
test
mov
push
(bad)
mov
fild
fistp
xchg
xor
xchg
retf
xchg
and
adc
repz
nop
push
fst
adc
gs
test
sbb
es
push
xor
loop
mov
jp
(bad)
stc
jbe
mov
sub
add
jo
ret
adc
clc
scas
or
mov
(bad)
cmp
xchg
dec
loop
fisubr
les
cmp
(bad)
out
xchg
test
sbb
mov
out
cs
sbb
pop
pop
xchg
lock
add
call
jg
movs
jg
jp
out
mov
inc
leave
sub
dec
mov
lods
and
adc
dec
and
lahf
mov
xor
addr16
sbb
inc
jno
jp
pop
and
loopne
fild
cli
std
sbb
pop
xchg
call
xor
pop
push
or
cmp
ins
repnz
fld
adc
ror
jge
sbb
sbb
loop
pop
mov
ins
pop
neg
stc
test
push
ret
cmp
jo
xchg
clc
outs
lock
inc
xchg
mov
outs
xor
retf
jnp
xchg
mov
jmp
jmp
fidiv
mov
jg
push
adc
adc
pop
call
ds
shr
ja
push
sahf
xchg
out
inc
test
pop
in
cwde
xchg
repz
aas
push
fldenv
jae
or
int3
pop
imul
mov
ja
cmp
cli
cmp
push
cmp
cmps
enter
xlat
mov
mov
mov
sti
fst
jmp
pop
addr16
push
or
clc
mov
(bad)
idiv
add
add
mov
push
(bad)
cmps
push
loope
xchg
push
xorps
std
push
push
fadd
lahf
adc
sar
lahf
add
(bad)
jmp
xchg
or
fldcw
push
out
imul
(bad)
jecxz
mov
push
icebp
push
dec
inc
cmp
mov
mov
mov
test
dec
and
ins
outs
jo
loopne
jae
loope
es
(bad)
std
sub
sbb
mov
stc
cmp
aaa
xchg
dec
imul
bound
mov
mov
xor
loopne
nop
pop
mov
test
imul
cmp
pop
imul
dec
push
push
mov
iret
scas
pop
mov
adc
adc
mov
mov
fbld
mov
(bad)
pop
mov
jbe
cmp
push
pop
lods
fisttp
lock
sub
jnp
out
inc
not
out
scas
adc
pop
imul
dec
ret
fcom
rcl
test
inc
xchg
(bad)
jns
jb
mov
or
test
outs
jns
hlt
mov
stos
xchg
push
test
mov
jp
ret
sub
or
mov
mov
push
pushf
data16
mov
xchg
ds
sbb
mov
or
shr
inc
inc
mov
dec
out
fidiv
or
sub
retf
cmp
xor
jo
sbb
movs
adc
bound
mov
and
stc
sahf
daa
(bad)
xchg
mov
mov
in
and
std
scas
jmp
movs
mov
xchg
imul
repnz
dec
pop
jge
not
imul
push
iret
inc
aas
lods
cmc
mov
push
cmp
(bad)
mov
xlat
cli
xchg
call
mov
sub
std
xchg
sbb
addr16
(bad)
lods
pop
or
adc
xchg
dec
iret
pop
or
add
inc
call
push
and
hlt
xor
stos
scas
mov
repnz
xor
push
xor
inc
lds
ins
sub
inc
ins
xor
test
and
(bad)
ins
xchg
mov
cmp
add
mov
fidiv
mov
int
dec
mov
ins
or
movs
jl
mov
jno
xor
and
push
lea
push
or
cli
out
xchg
inc
cmp
mov
rol
mov
cmp
jge
fbld
xor
cld
adc
pop
or
dec
pop
bnd
stos
ins
pop
or
movs
add
push
adc
fcmovu
sbb
push
clc
mov
push
add
or
inc
jmp
or
test
xor
jbe
lahf
es
lock
dec
push
and
mov
cmp
xlat
xchg
mov
ss
es
push
leave
xchg
and
xchg
or
mov
push
test
mov
pop
push
mov
fucom
or
xor
mov
pusha
jae
jl
mov
ja
pop
push
shr
cmp
mov
or
mov
xchg
mov
repz
pop
popa
jne
xor
sbb
je
or
loope
add
ins
pop
sub
ret
popf
sub
mov
push
push
popa
or
add
rol
inc
shr
(bad)
or
jl
mov
test
cdq
dec
jno
out
or
push
stos
push
mov
mov
add
inc
test
adc
jns
scas
cmps
sahf
pop
add
dec
pop
xchg
jg
pop
and
pop
adc
or
mov
or
fs
cmps
rcr
jmp
imul
sub
hlt
call
jo
cmp
call
test
mov
mov
mov
cmps
xchg
int
and
loop
imul
and
popf
aaa
xchg
(bad)
mov
cmps
int
aaa
int
sbb
fldcw
xor
jno
push
iret
outs
jmp
in
shl
repz
push
stc
fcom
jle
(bad)
(bad)
out
mov
pop
mov
stos
test
xor
aaa
pop
sub
scas
inc
push
sbb
stc
adc
or
shl
clc
rol
push
(bad)
fsub
int
adc
and
sar
xchg
int3
daa
inc
jecxz
push
xchg
add
das
inc
push
ret
(bad)
and
jo
push
cmps
sub
test
inc
jmp
or
fwait
lahf
xchg
ins
outs
das
(bad)
dec
aad
lods
or
push
fcomi
int
ins
jbe
add
cmp
dec
ror
(bad)
and
sub
pop
inc
pop
and
stos
mov
retf
adc
ds
ins
loop
inc
xchg
jge
in
mul
neg
xchg
and
aam
test
lods
pop
out
dec
in
cmp
es
ja
jb
jbe
push
in
mov
xor
sub
and
outs
pushf
pop
packssdw
push
mov
add
jnp
enter
sub
inc
or
add
cmp
cdq
inc
push
xchg
fs
leave
push
sub
dec
das
rol
outs
retf
push
into
cli
repz
mov
js
mov
int3
lea
mov
cmp
mov
movs
xchg
out
adc
or
sbb
cmp
aas
push
cdq
mov
pop
sbb
les
push
cmp
shr
gs
and
hlt
mov
sti
push
pop
cmc
(bad)
push
mov
out
dec
ret
stc
push
pop
jo
push
iret
cs
addr16
out
and
(bad)
jmp
jmp
scas
cmp
lahf
jns
and
cld
mov
(bad)
std
or
dec
jne
add
movs
lock
inc
xchg
rol
faddp
repnz
inc
in
addr16
rcl
rol
and
jno
inc
imul
stc
mov
add
xor
leave
hlt
ror
mov
(bad)
xchg
enter
loopne
inc
out
in
xor
xor
and
cmps
sub
xor
jecxz
fs
lds
or
or
imul
inc
iret
(bad)
movs
mov
jo
mov
ja
je
inc
mov
fstp
nop
mov
and
shr
xlat
inc
push
loope
cmps
and
and
(bad)
outs
lods
cmp
mov
movs
fisttp
mov
(bad)
pop
inc
add
cli
je
in
push
and
pop
adc
js
cmps
push
test
es
push
hlt
cmp
(bad)
mov
add
ret
loope
sbb
pop
adc
xchg
mov
je
out
ds
pop
cdq
loope
(bad)
fs
cs
aad
sti
inc
mov
repz
aad
mov
xchg
sbb
mov
(bad)
pop
add
lock
fs
adc
or
mov
xchg
cmps
lock
nop
sbb
mov
adc
cli
jno
mov
enter
retf
xor
rol
add
lea
push
or
call
pmuludq
push
inc
shl
sub
shl
cmp
fwait
xor
std
and
adc
sub
push
xchg
xchg
inc
or
pop
or
dec
add
mov
mov
je
ficomp
(bad)
adc
cmp
leave
sbb
inc
out
jmp
rol
je
push
fisubr
dec
(bad)
shl
shl
adc
push
xlat
push
or
adc
jecxz
push
div
add
call
outs
inc
hlt
sbb
dec
ret
lock
pop
pop
xor
imul
push
retf
push
pop
outs
retf
dec
push
movs
leave
mov
loopne
push
sub
jmp
mov
cs
das
mov
xchg
scas
lods
ja
clc
imul
cmp
sbb
mov
xchg
dec
(bad)
int
push
mov
iret
mov
jmp
rol
and
jmp
xor
ins
mov
xor
cld
das
sub
xchg
inc
mov
dec
and
push
pushf
test
push
ins
push
out
sahf
pop
push
adc
pop
sbb
jge
pop
repnz
(bad)
mov
sub
mov
cmps
out
mov
in
lahf
fucom
or
mov
push
jp
push
jnp
mov
loopne
add
and
(bad)
fs
mov
mov
into
push
cs
xor
jne
jbe
in
xor
add
in
push
outs
retf
mov
arpl
sti
loope
in
or
sar
xchg
mov
sbb
mov
rol
mov
jecxz
adc
stos
je
push
or
cmp
popa
sub
ret
idiv
xchg
mov
mov
pop
mov
pop
push
sub
or
fbstp
cdq
std
mov
retf
addr16
iret
pop
jmp
push
in
jl
ds
das
outs
xor
xchg
inc
fcmovnu
fwait
push
mov
leave
into
inc
push
(bad)
adc
(bad)
in
(bad)
sub
icebp
test
hlt
mov
cmp
push
push
je
ins
dec
aaa
sub
(bad)
mov
pop
cmc
pop
or
lahf
fsubr
jp
jno
jmp
or
pop
add
fnsave
xor
pop
or
stos
cmp
and
ss
in
int3
xchg
imul
jnp
(bad)
(bad)
pusha
mov
add
push
pop
or
xor
adc
out
lds
pop
add
int
fdivp
pop
or
es
arpl
neg
push
pop
ja
scas
push
fst
dec
aam
jp
jl
test
xchg
ins
imul
psubusw
pop
adc
sbb
(bad)
jnp
mov
loopne
and
test
ins
jp
ret
inc
stos
pushf
sar
inc
dec
pavgb
mov
xlat
xor
int3
jo
leave
jno
and
cmps
out
add
adc
push
cmp
ret
inc
scas
push
adc
mov
loope
adc
push
clc
out
sbb
jmp
jmp
xchg
add
mov
imul
jl
cld
ss
pop
fdivr
jbe
sub
pop
stc
inc
sbb
cmp
dec
out
pop
pop
icebp
add
sbb
mov
xor
jmp
retf
and
cmps
bound
stos
ror
shl
(bad)
mov
imul
lods
jnp
jl
ins
popf
shl
push
jmp
aas
jmp
pop
cmp
dec
inc
mov
loopne
and
arpl
jl
out
xor
xchg
push
mov
call
push
xchg
inc
and
ret
imul
xor
leave
mov
pop
push
mov
cli
mov
mov
pop
inc
push
mov
add
popf
outs
sbb
adc
movs
mov
push
push
mov
sub
ror
sub
(bad)
sub
xchg
in
mov
adc
sbb
jecxz
fwait
and
out
xchg
ror
cmp
or
stos
(bad)
retf
cwde
jp
ins
call
mov
scas
or
or
enter
push
sti
sti
(bad)
clc
mov
xchg
add
addr16
add
arpl
int
and
(bad)
fsincos
sti
les
adc
dec
loope
inc
aas
cmps
in
xor
cmc
test
int
jne
repz
jo
aas
push
push
imul
aaa
aam
aas
pop
mov
pop
and
icebp
inc
mov
sbb
int3
test
clc
iret
clc
retf
and
out
outs
icebp
jg
mov
imul
and
push
adc
xor
push
loopne
gs
and
dec
sub
out
cwde
inc
xchg
xor
or
nop
ss
and
sub
shl
popa
int
sub
scas
imul
fld
data16
mov
and
jno
nop
sub
sbb
dec
out
xlat
aaa
fcmovb
shl
mov
jg
test
sub
popf
jbe
inc
pop
add
movs
xchg
hlt
loope
pop
aad
les
loopne
xor
sub
int3
enter
xor
mov
and
sub
mov
stc
add
movs
outs
out
and
push
pushf
fisttp
das
or
inc
add
jp
retf
movs
cmps
adc
push
test
imul
jl
mov
mov
sbb
mov
int3
call
push
out
loop
mov
xchg
mov
das
mov
inc
push
and
push
cwde
dec
imul
cmp
xchg
movs
mov
ins
ror
ja
popf
cmp
mov
(bad)
push
mov
mov
cmp
mov
xchg
std
inc
pop
movs
jl
sahf
call
test
out
je
xor
inc
and
xchg
adc
test
fstp
and
cmp
stos
aaa
test
push
pop
lock
in
cld
mov
sub
sub
lock
daa
ins
in
repnz
cld
fidiv
sbb
cs
cld
scas
dec
les
jne
lods
xchg
sub
mov
(bad)
out
(bad)
daa
ins
aaa
jno
sbb
into
mul
into
xchg
lds
xor
jp
hlt
cmp
fadd
pop
daa
push
jmp
push
jns
dec
mov
out
sti
inc
mov
popa
psubb
jl
neg
into
in
int3
in
add
loopne
dec
test
jno
dec
jp
loop
pusha
loop
jbe
xchg
adc
shl
jge
sbb
stc
jg
or
sub
or
jmp
ins
fsubr
push
pop
xor
mov
push
inc
xor
adc
mov
lea
std
loop
rcl
sub
inc
sbb
mov
xor
int3
mov
mov
(bad)
dec
push
jns
sti
(bad)
inc
in
jmp
ret
pop
mov
add
dec
and
cmc
ins
ror
bound
iret
pop
jbe
sti
adc
and
in
icebp
in
cmp
outs
push
ss
lds
push
in
cmp
dec
mov
sub
int3
mov
scas
adc
fcom
jno
retf
mov
fst
push
movs
mov
call
mov
push
test
je
adc
sub
(bad)
loopne
sahf
and
out
mov
pop
xchg
(bad)
push
push
adc
std
dec
and
fs
add
in
xchg
clc
aam
mov
das
push
pusha
fwait
loopne
aad
ret
cmp
push
iret
mov
sub
push
ja
ins
add
sahf
mov
iret
xchg
and
je
loop
pop
sbb
xchg
stc
ret
xchg
push
pushf
jne
or
dec
adc
mov
xchg
mov
cmc
mov
xchg
rol
pop
xlat
dec
mov
das
pop
or
loopne
es
mov
ins
loop
div
mov
push
mov
pop
and
jns
add
inc
or
xchg
dec
loop
jbe
xchg
pop
jae
adc
adc
pop
inc
je
inc
add
icebp
jg
inc
(bad)
cdq
pop
cmp
rol
dec
lea
sbb
scas
jno
(bad)
out
mov
mov
push
test
or
scas
pop
js
(bad)
lods
sub
jge
jg
and
cmp
xchg
ins
cmp
lds
lock
test
nop
xchg
inc
cmp
sub
mov
leave
mov
leave
jp
cmp
sbb
and
imul
imul
bound
mov
popf
arpl
and
rcl
ss
mov
xchg
add
out
or
inc
sti
neg
(bad)
xlat
sti
mov
inc
test
sbb
test
movs
adc
mov
jg
out
sub
push
mov
add
add
ret
push
lods
stos
js
cmp
mov
ffree
push
ins
dec
push
mov
mov
movs
loopne
(bad)
js
(bad)
fld
cdq
push
pop
lahf
cmp
pop
mov
adc
in
add
test
jnp
ins
adc
jg
mov
jge
xchg
mov
add
pop
pop
mov
push
sub
int
cmp
xchg
mov
jmp
mov
sbb
clc
movs
xor
pop
inc
push
cld
push
(bad)
rcl
mov
movs
lock
mov
push
cdq
mov
push
cmp
repnz
popa
jecxz
dec
cs
mov
mov
inc
(bad)
cmp
arpl
mov
fs
lods
dec
xchg
add
xor
test
push
inc
out
clc
jns
stos
push
push
mov
jecxz
ret
out
wrmsr
call
outs
retf
add
call
lds
in
mov
lahf
push
or
jno
stc
test
call
movs
popa
(bad)
push
cmp
sub
xor
lahf
loop
je
test
jo
or
pop
in
cmp
mov
dec
sbb
xchg
or
pushf
adc
mov
test
cwde
cwde
pushf
sub
push
sub
stos
xor
cmp
adc
or
pop
xchg
and
mov
in
or
inc
cmps
sbb
fst
(bad)
push
mov
xor
add
mov
add
ins
xor
sub
lods
ja
add
das
retf
aas
ret
(bad)
push
cmp
lods
push
repz
push
loopne
ins
push
add
adc
bound
push
mov
mov
aaa
fs
fsub
test
dec
neg
adc
popf
cmp
adc
xchg
in
std
mov
push
add
xchg
add
retf
cdq
jbe
fnstenv
cmp
psubd
mov
or
cli
adc
jecxz
xor
cmp
cmovne
cld
mul
sbb
js
call
push
test
stos
stc
pop
pop
les
(bad)
cmp
push
jle
sub
and
stc
stc
mov
cld
and
mov
adc
jp
mov
mov
mov
(bad)
cmp
push
adc
int3
adc
hlt
pop
in
sub
pushf
sbb
mov
adc
push
sti
jns
ret
fstp
inc
jo
lahf
movs
add
and
lahf
rol
jne
loopne
and
in
cwde
loope
cmc
enter
pop
xor
and
hlt
popf
add
in
cmps
sahf
add
repnz
jg
pop
daa
jno
add
xor
push
lahf
sub
adc
adc
push
(bad)
mov
sub
and
rol
ror
or
sbb
es
xchg
imul
and
mov
and
jecxz
pushf
cld
outs
cs
cmp
pop
mov
mov
xlat
paddb
and
mov
psubd
dec
movs
adc
cmp
repnz
inc
dec
sub
mov
cmp
bound
imul
(bad)
cs
cdq
or
mov
fst
mov
int
xchg
fldl2t
call
xchg
push
jp
inc
outs
es
loopne
mov
iret
jge
push
pop
mov
jae
fcmovu
nop
sti
mov
imul
inc
popf
or
dec
imul
call
dec
popf
dec
sbb
dec
lea
test
dec
lds
xchg
(bad)
in
icebp
or
adc
addr16
pop
jbe
div
cmp
inc
jp
jno
test
out
adc
out
pop
push
xchg
jmp
(bad)
dec
dec
mov
mov
pop
or
pinsrw
loopne
lahf
jmp
ficom
inc
mov
add
mov
clc
push
mov
xchg
fldenv
xchg
sub
aas
sbb
xchg
retf
push
sahf
inc
adc
rol
lds
mov
mov
push
pop
fmul
outs
xor
cdq
mov
push
daa
push
lds
jle
adc
aas
xor
fmulp
(bad)
push
inc
scas
in
adc
clc
or
(bad)
ins
push
xchg
jno
in
push
dec
add
xchg
jnp
vhsubps
push
fisub
rol
out
pop
push
repz
(bad)
hlt
pop
mov
mov
rol
ins
retf
push
cmps
mov
repz
es
fst
cmp
sbb
push
jno
jmp
cdq
dec
sub
fwait
ss
mov
or
dec
aas
fwait
cmc
inc
sub
pop
into
hlt
(bad)
pop
and
push
pop
jmp
sti
popf
sbb
mov
outs
loope
aad
adc
int
jmp
or
push
mov
ss
sub
neg
fldcw
adc
sbb
adc
dec
mov
xor
imul
in
(bad)
or
inc
test
pop
sub
cmp
adc
dec
dec
pop
and
push
push
sti
push
fwait
bound
mov
ds
xor
lahf
out
repz
out
int3
mov
sbb
aas
lock
push
out
sahf
es
in
psubsb
add
data16
inc
mov
mov
pop
or
fidivr
jbe
(bad)
fdivr
shl
fnstenv
cld
out
push
jp
std
lahf
retf
pop
jo
xor
mov
inc
dec
jo
data16
jecxz
aam
movs
pop
push
test
jne
xor
ror
adc
cli
sbb
ret
add
ins
hlt
popf
xor
mov
and
test
xchg
xchg
rol
cdq
dec
inc
sub
or
out
cmps
mov
in
mov
pop
data16
sar
cmp
out
bound
adc
scas
xor
and
adc
aad
cmp
xor
addr16
add
ret
sub
imul
xchg
jmp
loop
add
add
imul
mov
sub
inc
jmp
lahf
or
cdq
shl
and
aaa
add
cwde
push
mov
imul
push
or
(bad)
fdiv
push
(bad)
(bad)
or
stos
jo
dec
movs
dec
aaa
add
rol
js
inc
push
outs
add
dec
jo
in
lods
movs
retf
stos
mov
in
mov
xchg
in
mov
or
or
jb
out
mov
xchg
mov
dec
pop
push
xlat
xchg
sbb
adc
mov
or
pushf
push
sub
ja
mov
mov
bnd
out
in
cmc
out
cmp
pushf
mul
dec
jns
and
jecxz
mov
in
jmp
dec
push
or
mov
sar
fcmovbe
pop
pushf
(bad)
aas
mov
(bad)
cmp
adc
jnp
inc
xchg
add
cmp
aaa
imul
sti
mov
mov
xor
les
xchg
or
int3
iret
push
jmp
xor
movs
stc
test
add
mov
jnp
jle
shr
inc
xor
push
jmp
(bad)
rcr
sub
out
inc
test
adc
(bad)
lods
aaa
or
fsub
pop
adc
sahf
pop
ret
or
sub
ins
or
sbb
push
cld
add
xor
repz
cmps
push
adc
sbb
rol
or
ds
pop
das
mov
xchg
inc
pop
push
or
cmp
add
pop
pop
jne
jo
xor
push
push
push
jmp
fs
icebp
aas
jo
mov
mov
addr16
imul
and
imul
aam
inc
jg
adc
cmps
and
in
dec
cdq
das
stc
out
add
jno
xor
and
pushf
and
sub
mov
pushf
inc
call
jae
gs
mov
scas
ret
jo
or
jmp
cmp
sbb
xlat
sub
scas
loopne
adc
xlat
imul
(bad)
iret
jmp
ss
ror
xchg
aas
shr
or
loopne
test
mov
in
cmp
fwait
cli
cmc
push
psrad
or
aam
mov
xchg
mov
push
push
lock
push
pushf
(bad)
test
jmp
mov
div
mov
setb
mov
out
icebp
mov
clc
jl
mov
adc
outs
pushf
shl
aas
xor
push
jl
call
sbb
and
dec
xor
pop
dec
add
sub
sbb
lods
cmps
jle
adc
mov
aas
jne
shr
addr16
fistp
pop
aad
jo
repz
sar
sub
pop
in
adc
lods
ret
test
cmp
jae
sub
movs
mul
pop
fs
inc
mov
dec
pusha
repz
mov
xchg
mov
adc
clc
inc
int3
mov
fpatan
xchg
mov
jne
jno
(bad)
outs
into
or
jmp
aaa
inc
icebp
ficom
js
outs
jmp
push
arpl
and
cmps
xor
into
lahf
and
mov
or
(bad)
mov
scas
cmp
stos
jg
lahf
pop
call
mov
mov
loope
push
xchg
(bad)
out
(bad)
xlat
and
add
lock
outs
mov
repz
fs
mov
lods
jecxz
fimul
(bad)
adc
jo
daa
xchg
dec
outs
and
xchg
pop
xor
dec
jp
push
clc
dec
jae
mov
lock
sahf
imul
adc
ds
cmp
ins
div
lahf
or
push
jnp
repz
or
repz
outs
icebp
adc
add
push
push
push
je
sbb
and
xor
ins
and
jge
cwde
popa
(bad)
ins
aas
xor
fnstcw
add
jnp
adc
(bad)
icebp
enter
daa
std
enter
movs
or
pop
test
out
mov
and
xor
ret
enter
imul
add
pop
fimul
and
and
pop
js
push
dec
dec
adc
loopne
scas
(bad)
in
mov
clc
rcr
xchg
adc
lods
pop
jns
scas
ja
mov
pop
jle
into
movs
xor
mov
xlat
sbb
sub
clc
cmps
(bad)
mov
movs
aam
mov
into
dec
inc
pop
enter
xchg
sub
cmp
and
js
mov
or
pop
push
es
push
xor
adc
and
push
mov
add
add
adc
and
outs
jmp
mov
jae
stos
pop
xchg
sub
mov
lahf
gs
(bad)
daa
xor
adc
push
leave
cmp
enter
leave
and
out
pop
ror
mov
cmps
aas
jns
stos
xchg
inc
mov
xchg
repnz
cmps
xchg
adc
ins
dec
(bad)
adc
mov
inc
cwde
mov
or
xchg
test
mov
pop
fcomp
or
aam
lea
pop
sbb
add
leave
ror
adc
pop
test
nop
pop
(bad)
sbb
push
xchg
mov
push
lds
add
or
lock
adc
and
inc
xor
or
jecxz
rcl
mov
push
push
and
push
inc
adc
mov
mov
int
jl
sub
xchg
add
jmp
jl
sub
jle
aam
mov
xor
imul
inc
je
sti
xchg
push
mov
xchg
(bad)
pop
push
dec
cmp
mov
mov
imul
jbe
sahf
add
je
and
outs
movs
stc
(bad)
ror
xor
jne
xor
mov
sub
mov
or
push
mov
push
jg
addr16
jne
mov
int3
(bad)
jne
xlat
xchg
(bad)
shl
div
push
fs
jmp
add
lds
jge
add
add
xor
jge
inc
fidivr
mov
dec
pop
mov
xchg
loope
add
fld
and
pop
rcl
gs
(bad)
sahf
inc
cli
dec
int3
jnp
sub
fcom
pushf
stc
cwde
sub
sub
push
adc
repnz
xor
inc
out
mov
cmp
(bad)
adc
(bad)
or
std
into
inc
pop
in
ds
test
out
inc
push
lock
mov
and
in
test
inc
imul
push
fild
daa
pop
(bad)
retf
xchg
xor
ins
js
xchg
aad
pop
sahf
push
push
out
test
push
movs
ss
mov
add
jnp
lods
mov
jne
adc
mov
or
das
pop
jmp
xchg
outs
cbw
sbb
jg
adc
loop
mov
outs
ret
pop
gs
push
fs
test
xchg
add
add
or
fldcw
xchg
mov
jmp
mov
clc
sbb
inc
adc
out
test
(bad)
das
jg
out
lea
repz
sbb
dec
cmp
dec
dec
sbb
sbb
stos
jl
je
mov
imul
adc
out
push
xchg
push
popa
outs
les
xchg
pop
dec
cli
fsub
(bad)
shl
push
aad
nop
jo
mov
cwde
sub
jle
(bad)
(bad)
mov
in
pop
fisub
les
gs
inc
push
pop
or
add
ds
cmp
jge
nop
push
mov
or
fisub
inc
gs
fidivr
enter
add
loopne
xchg
sbb
mov
test
popa
cli
jb
mov
jle
(bad)
outs
lds
mov
push
add
push
push
lds
jge
mov
pop
or
loopne
scas
sub
sahf
test
push
vmovaps
or
es
les
das
call
hlt
test
movs
mov
dec
les
add
or
and
xchg
dec
(bad)
fld
xor
mov
cli
rcl
dec
out
mov
inc
xchg
punpckhwd
add
jae
pushf
jnp
or
out
(bad)
cmp
adc
dec
mov
dec
push
inc
cmp
xor
fnstcw
in
repnz
cmps
sbb
(bad)
je
sub
and
inc
mov
icebp
add
push
sub
jmp
adc
cmp
mov
mov
push
xor
nop
nop
loopne
adc
or
adc
lea
addr16
xchg
dec
adc
in
jl
jno
enter
pop
mov
cmp
pop
pusha
mov
mov
adc
retf
imul
mov
cmc
mov
dec
mov
pop
jecxz
mov
add
push
(bad)
lds
jns
aaa
ret
ror
test
(bad)
push
rcl
jbe
bound
push
out
push
test
retf
cs
leave
push
fcomp
jae
push
retf
sahf
es
or
and
xor
out
add
xchg
xor
xor
sbb
inc
xchg
pop
inc
xor
mov
and
aaa
mov
les
popa
dec
lea
jne
es
cs
push
jge
mov
dec
pop
inc
push
ret
push
ret
out
mul
fisubr
mov
push
ret
jmp
push
(bad)
xor
push
xchg
sub
out
call
je
pop
int3
push
into
shl
in
mov
add
jns
push
xchg
pop
add
pop
mov
mov
mov
rcr
xor
push
nop
pop
jb
lock
inc
jne
adc
jge
mov
pop
xchg
repnz
xchg
in
xchg
fdivrp
fmulp
cmp
ins
jne
iret
push
pop
cli
ret
retf
popa
cs
daa
(bad)
out
jp
sti
stos
jg
jmp
cmps
mov
dec
add
mov
mov
and
pop
inc
aas
inc
cmp
in
jbe
pop
sbb
inc
leave
xchg
add
(bad)
cmp
fsub
push
xchg
push
push
into
fnstenv
sbb
cmp
xchg
jns
cmp
jae
mov
cmp
adc
xor
fld
jb
clc
sbb
gs
add
mov
jmp
cs
jmp
imul
xor
inc
fistp
ret
dec
ins
xchg
or
inc
and
adc
mov
cmp
imul
add
ins
rol
lds
test
lock
mov
add
imul
cwde
mov
inc
popa
jg
mov
in
leave
gs
clc
mov
rcl
int3
shl
stos
pop
test
sub
loop
add
mov
js
lock
les
cmp
leave
neg
inc
mov
idiv
inc
push
mov
fidiv
inc
push
jecxz
test
arpl
paddw
int
fwait
or
dec
in
mov
js
jge
inc
test
inc
cdq
pop
aas
adc
loopne
mov
enter
pop
or
jo
test
ins
cmp
push
or
sbb
fcom
xchg
cs
push
and
lahf
inc
movs
dec
into
leave
and
ins
mov
out
out
add
dec
pop
imul
add
popa
cmp
cmp
adc
jl
retf
dec
or
sub
(bad)
nop
rcr
mov
pop
adc
dec
sub
mov
xchg
mov
fxch
test
daa
and
add
fistp
out
fistp
outs
adc
(bad)
rol
cmp
and
pop
loopne
mov
add
cmova
jnp
leave
mov
jno
xor
push
dec
nop
loop
dec
clc
out
out
dec
mov
test
je
dec
mov
mov
outs
xor
or
jg
dec
icebp
push
jbe
dec
shl
or
mov
cmp
frstor
and
ror
sbb
xchg
adc
mov
push
and
ss
clc
xchg
jbe
mov
sub
xchg
cmps
cmp
cld
dec
inc
sub
and
mov
pusha
and
loopne
sbb
or
movhlps
push
jno
ficom
jae
lea
mov
mov
imul
loopne
pop
or
pop
jno
int
push
int
lock
(bad)
mov
xlat
nop
int
xchg
push
mov
push
dec
dec
jecxz
ret
adc
push
fsubr
sbb
in
call
repnz
and
sbb
stos
(bad)
std
(bad)
icebp
bswap
cwde
mov
retf
cs
pop
xchg
imul
lods
adc
add
lea
(bad)
xchg
jmp
fwait
inc
push
cmp
(bad)
not
jno
jns
push
aas
loopne
dec
push
stos
push
dec
jnp
jno
xor
dec
dec
and
lods
mov
test
xchg
gs
add
test
xor
and
sub
(bad)
ret
mov
pop
test
jmp
sub
mov
ror
cmps
(bad)
retf
cmps
inc
xor
sbb
arpl
and
or
mov
test
je
cmp
shr
sub
xor
jns
push
fcmovnbe
adc
mov
test
dec
out
xlat
xor
mov
shl
or
ja
shl
dec
call
or
idiv
cmps
mov
test
dec
shl
dec
sub
push
je
call
das
bound
rcr
stos
gs
pop
aas
cmp
dec
cmp
fwait
retf
ss
mov
stos
aad
jg
jle
pop
ss
mov
or
in
mov
mov
test
jns
clc
retf
shl
outs
int3
cmp
mov
dec
lock
hlt
push
sti
jg
enter
nop
adc
jbe
and
jo
test
cmc
scas
adc
and
jge
adc
add
sub
shl
scas
cmp
das
cmp
mov
xor
fs
outs
mov
dec
cmp
cmp
lods
fistp
xchg
push
int
add
sub
or
aam
lods
push
(bad)
cli
cwde
dec
adc
call
pop
out
lock
push
(bad)
enter
jmp
xchg
mov
xlat
pxor
mov
out
xor
jge
pushf
xor
pop
add
push
retf
mov
xor
lods
in
jnp
(bad)
adc
dec
cmps
inc
sbb
ficomp
inc
dec
inc
add
or
imul
out
loopne
add
outs
xchg
push
inc
or
mov
push
lock
sbb
aam
psubb
adc
lea
pop
adc
syscall
sar
adc
adc
sbb
les
imul
pop
inc
aaa
loopne
mov
dec
mov
jmp
dec
pop
push
jmp
mov
mov
sub
sub
xchg
sahf
sub
jmp
push
jle
sbb
scas
in
and
test
lea
lahf
adc
adc
into
mov
mov
jge
scas
es
and
xchg
pop
in
fnstenv
dec
retf
lds
leave
xchg
sub
imul
pop
(bad)
xchg
jp
ret
pusha
dec
pop
leave
shr
or
movs
loop
mov
loopne
fisub
xchg
push
pop
nop
xchg
mov
add
mov
retf
mov
pop
mov
push
or
test
mul
stc
or
or
(bad)
adc
scas
mov
push
or
xor
outs
cmp
and
lock
rcl
cs
sbb
xor
xchg
out
mov
fmul
sbb
in
adc
mul
cwde
jo
in
shl
xchg
ror
pop
and
mov
shl
sub
add
jge
scas
jmp
jmp
mov
pop
sbb
mov
dec
mov
(bad)
jle
add
cli
xor
fcmove
pop
popf
stos
xchg
jb
dec
dec
cld
or
cmp
xchg
bound
cmp
add
fadd
sub
and
mov
hlt
push
jg
sbb
in
cwde
add
fidiv
lock
pop
add
cs
push
jp
pop
in
inc
cld
mov
jl
sbb
adc
out
imul
add
push
in
mov
sbb
jge
jg
jl
js
ret
aaa
xchg
add
(bad)
lods
mov
dec
imul
je
(bad)
shl
sub
pushf
retf
xchg
and
test
xor
and
pop
out
cld
ret
push
cmp
movs
xor
xor
mov
add
xlat
data16
add
mov
shl
out
imul
push
mov
add
imul
cwde
shr
push
jmp
cmp
loop
sbb
cwde
lods
(bad)
cmp
das
stos
sub
rcr
sub
data16
sub
inc
std
add
popa
repnz
add
scas
out
xchg
dec
pusha
xchg
sbb
or
push
lock
sub
push
pop
lods
jecxz
(bad)
pmuludq
push
jmp
pop
popa
aas
lea
stos
jmp
dec
cmp
dec
(bad)
std
and
mov
mov
(bad)
stos
aaa
push
(bad)
(bad)
enter
jge
jbe
mov
aas
(bad)
jns
push
test
retf
push
cmp
in
scas
out
push
cld
mov
sti
jns
shl
(bad)
mov
nop
mov
mov
mov
add
push
ins
lds
aam
fwait
sbb
xor
test
in
mov
(bad)
jb
arpl
outs
imul
jo
int
test
call
jnp
pop
cmp
movs
arpl
jbe
js
nop
fwait
daa
or
movs
fs
and
bound
(bad)
repnz
aam
pop
ss
(bad)
jmp
cdq
mov
int3
pop
cmc
or
lahf
ins
pop
push
mov
pop
mov
dec
or
mov
lahf
mov
popf
mov
sbb
cmp
sub
cs
stos
jmp
icebp
(bad)
fwait
push
(bad)
mov
ins
jmp
push
sar
or
outs
jmp
xchg
sbb
or
enter
jmp
xor
xor
dec
inc
cdq
aas
sub
add
adc
inc
sbb
pop
aas
dec
add
in
lds
daa
out
inc
scas
call
pop
xchg
stos
std
cmps
aaa
imul
xchg
push
in
cmp
xchg
(bad)
in
rcr
add
std
sbb
sbb
xor
aad
je
arpl
sub
inc
xchg
jb
fwait
lods
adc
push
int
test
add
pop
cmp
(bad)
aad
push
jbe
out
repnz
cld
mov
stos
inc
inc
push
xchg
or
add
xchg
sahf
sbb
loop
and
imul
ins
sar
inc
or
jle
cmc
add
ja
mov
std
ins
sbb
in
shr
not
jmp
repz
loop
test
cmp
xor
cmp
cmp
add
js
ins
pop
mov
sub
iret
fwait
add
adc
scas
outs
mov
cmps
sub
test
cld
aas
das
mov
cmp
or
dec
cmps
sub
retf
sbb
loopne
scas
inc
jb
add
enter
and
mov
or
mov
fwait
retf
and
mov
mov
mov
nop
sub
retf
adc
les
mov
cmps
mov
mov
scas
mov
scas
mov
(bad)
mov
nop
cdq
cmp
push
sbb
pusha
aas
push
ss
lds
and
push
adc
push
fstp
inc
test
dec
and
push
das
and
(bad)
sub
add
cmp
repz
out
adc
or
(bad)
cmc
pop
fdiv
pop
out
xor
rcl
ret
les
push
xchg
sbb
cmp
iret
lods
cmps
sbb
in
sub
cdq
nop
sbb
mov
mov
call
xchg
mov
in
adc
xchg
dec
dec
int3
pop
es
stos
ror
sbb
mov
fst
add
dec
leave
cmps
jns
pop
(bad)
call
or
cs
clc
add
jo
shl
jg
mov
cmps
fincstp
jmp
xchg
icebp
dec
xchg
fisubr
dec
arpl
sub
int
push
or
sub
fdivr
cmp
shl
cmp
xchg
mov
xchg
iret
mov
mov
loope
jb
test
adc
and
enter
push
data16
mov
add
pop
inc
pop
fstp
pop
xchg
push
test
dec
pop
jecxz
xor
popa
add
cmp
inc
pusha
mov
retf
or
cmp
into
cld
imul
rcl
pop
cmp
pop
cmp
xchg
ss
in
jo
cwde
mov
movs
push
pop
loopne
jp
repnz
mov
in
(bad)
ds
add
and
leave
rcr
test
loop
lea
mov
push
push
mov
pop
xchg
icebp
ret
popf
push
int
sbb
imul
fmulp
push
adc
cmp
push
ret
xor
lods
(bad)
mov
scas
jecxz
mov
push
push
(bad)
out
mov
xchg
shl
(bad)
aaa
mov
xchg
sbb
test
fsubr
loope
ror
repz
das
aad
gs
sub
repnz
adc
dec
in
or
jmp
stos
mov
jno
cs
jnp
sbb
in
adc
leave
(bad)
fcmovnu
xchg
sub
ja
(bad)
aaa
in
jno
je
mov
loop
outs
movs
pop
sub
stc
xchg
adc
scas
jo
es
mov
test
mov
in
imul
rol
jbe
push
cmc
xchg
pop
pop
mov
test
loopne
and
aad
(bad)
mov
xchg
scas
adc
xchg
in
push
je
push
mov
pop
sbb
mov
popf
inc
push
pop
mul
(bad)
mov
js
rcr
sbb
or
sbb
jmp
push
bound
test
lock
cmp
pop
stc
call
aas
and
cdq
mov
stos
inc
jb
loop
xor
pop
sbb
push
dec
int
stc
imul
jns
jge
cmp
jbe
dec
stos
shr
mov
icebp
repz
xor
dec
mov
sbb
xchg
(bad)
push
sub
call
xchg
pop
ror
call
test
dec
mov
movs
arpl
dec
mov
ins
dec
icebp
sar
inc
not
gs
and
aad
stos
xor
or
nop
fbstp
cwde
inc
dec
inc
push
out
push
or
push
aad
jbe
(bad)
pushf
jne
pop
loopne
push
inc
and
sbb
adc
mov
add
lock
test
push
xchg
sbb
xchg
mov
cmp
out
not
mov
dec
cld
push
jmp
mov
leave
sti
les
jge
push
pop
es
inc
or
or
jmp
or
js
sub
jg
outs
mov
shr
fwait
mov
adc
jp
jo
rcr
add
js
shr
xlat
je
fld
out
in
mov
ficomp
cmps
es
shl
cmp
dec
ror
test
fiadd
inc
(bad)
sub
mov
dec
push
int3
add
pop
cdq
push
sbb
iret
jns
fs
ja
nop
ja
leave
inc
fsub
jno
lahf
cld
add
adc
adc
push
cld
xor
push
xor
mov
clc
in
sti
bound
ror
sbb
xor
push
test
out
ins
dec
mov
fisttp
lahf
sbb
xlat
pop
xchg
scas
out
cmp
mov
and
test
icebp
(bad)
outs
movs
pop
cmc
jns
fsub
imul
xchg
mov
mov
dec
das
mov
in
test
mov
and
or
dec
movs
push
inc
mov
sbb
mov
inc
pop
ss
sub
test
mov
sar
or
lods
rcl
jg
push
mov
mov
neg
retf
xor
mov
mov
cmp
cmps
aas
loope
movs
dec
push
das
loop
repz
jle
sahf
push
push
daa
push
adc
fdivrp
or
and
mov
test
adc
mov
aam
int3
jnp
inc
arpl
sbb
pop
inc
scas
movs
cmp
xor
pop
fnstenv
adc
mov
cmp
test
mov
aaa
mov
push
ret
pop
jae
idiv
jmp
add
dec
add
mov
bound
aad
adc
push
imul
out
int
mov
and
push
scas
adc
rcr
jge
lods
add
xchg
push
lods
jge
mov
add
call
out
ret
and
aad
outs
jp
pop
dec
idiv
xor
cmp
jg
jnp
cmp
clc
int
push
pop
test
inc
cmp
sub
xchg
rcr
add
pop
mov
pushf
sar
(bad)
push
lods
repz
das
fxam
xor
xchg
mov
and
lods
shl
out
mov
sbb
cmp
cdq
inc
cmp
jbe
std
mov
jmp
mov
rcr
cmp
test
mov
(bad)
and
jmp
ins
lods
(bad)
mov
dec
dec
into
(bad)
das
int
paddusb
adc
mov
mov
mov
(bad)
push
and
jp
sub
sub
in
loopne
jmp
xor
adc
sti
loopne
iret
out
mov
sbb
jmp
pushf
jmp
call
xchg
lahf
and
pushf
cmp
in
pop
ror
sbb
mov
outs
loop
mov
ja
xchg
add
add
push
sbb
(bad)
adc
loop
fucomp
sti
ret
fcomip
cmp
add
in
mov
gs
lea
mov
mov
stos
mov
ficom
xor
shl
arpl
inc
pop
pop
enter
jp
mov
ja
addr16
stc
jns
lock
sbb
loop
xchg
ds
call
jmp
jg
shr
mov
inc
(bad)
fiadd
fxch
mov
(bad)
jmp
daa
sti
push
mov
shl
push
mov
xor
inc
test
rol
mov
repz
es
add
push
push
xchg
hlt
xlat
in
fistp
dec
or
add
mov
cwde
sar
movzx
iret
jo
mov
mov
mov
pop
call
jmp
add
mov
sbb
pop
ja
add
test
mov
inc
sbb
push
and
xchg
cdq
rcl
push
pop
(bad)
jb
int
jecxz
cmp
and
into
and
aaa
or
pop
ds
xchg
into
leave
or
fcmove
sbb
mov
or
jge
push
or
mov
adc
mov
xor
arpl
dec
daa
cmp
pop
pop
test
popa
das
popa
repz
cmp
push
std
mov
add
and
hlt
dec
adc
dec
jns
icebp
ret
jns
fst
arpl
arpl
xor
mov
cmp
repz
add
adc
pop
cmp
(bad)
in
inc
sti
in
retf
lock
cmp
and
cmp
aaa
and
cmp
popf
push
push
dec
ss
sub
adc
add
push
jge
movs
arpl
sbb
and
or
mov
sub
mov
shr
test
(bad)
pop
cmp
sub
ds
xor
popa
sub
push
jns
cli
and
cmp
ret
inc
mov
push
(bad)
push
jmp
inc
xchg
and
add
ror
in
xor
mov
cmps
ins
and
fwait
outs
xor
ror
mov
lea
push
cmp
cmp
sbb
lock
les
pop
imul
lock
jl
dec
sbb
call
inc
je
pop
arpl
sbb
loop
xor
mov
pop
and
ja
xchg
mov
dec
fiadd
pop
pusha
jle
pop
inc
mov
cwde
lock
stos
dec
outs
xor
xor
or
jp
mov
pop
pop
push
jle
into
ins
gs
push
scas
test
fidivr
add
cmp
ins
jg
xchg
pushf
and
out
push
sbb
lods
cmp
das
and
rol
loop
sub
xlat
adc
dec
and
push
dec
pop
dec
mov
sbb
cmp
popa
fdivr
jns
dec
fsub
(bad)
mov
mov
pop
add
ins
test
push
jnp
cmp
div
xor
mov
neg
push
jae
jo
pop
int
or
xor
add
xor
xor
and
pop
xor
sub
icebp
jle
jae
mov
mov
and
push
push
add
lea
pop
out
movs
mov
imul
movsx
fwait
mov
mov
cdq
retf
mov
sub
repz
je
xor
retf
retf
ins
mov
aas
pop
mov
daa
int
jo
xlat
pop
ins
sbb
lds
jb
cmps
mov
xchg
retf
std
fsubr
scas
pop
lods
add
lods
mov
out
push
out
into
xlat
mov
pop
fprem1
pop
mov
jbe
scas
jbe
imul
addr16
out
jle
add
int
adc
dec
test
inc
or
cmps
cli
push
sbb
out
push
xchg
mov
cmps
add
pop
mov
jecxz
cmps
movs
inc
in
push
lea
lock
or
mov
jno
(bad)
jmp
daa
lds
cmp
sahf
jge
repz
sbb
pusha
mov
imul
sub
leave
xor
mov
aas
gs
cmp
mov
outs
pop
lds
sbb
pop
dec
lock
loop
push
inc
js
pop
adc
popa
mov
ins
in
inc
xor
inc
stos
cld
fcmovnu
out
add
or
add
jp
mov
xchg
out
mov
push
xor
xchg
stos
adc
xchg
stc
inc
mov
in
xor
xchg
je
loopne
fiadd
and
pop
cmp
aas
sub
dec
and
out
cmp
or
lahf
inc
add
js
in
pusha
add
jns
in
jecxz
loop
loop
aas
or
nop
out
push
gs
pop
mov
imul
sbb
cwde
je
call
sbb
call
xchg
pop
stos
cmp
mov
fiadd
push
mov
mov
jbe
xchg
loope
cmps
xchg
fwait
or
repnz
push
shl
ins
retf
jecxz
and
push
test
mov
mov
mov
outs
fistp
movs
pop
ret
sbb
std
repz
sbb
int3
sub
pop
fwait
int3
in
or
and
mov
fisub
mov
cmp
mov
in
or
push
ds
lods
call
xchg
xor
pop
sub
outs
jns
sub
xor
sbb
fs
xor
jmp
lea
xchg
lock
ins
sbb
outs
pop
push
retf
retf
test
test
push
cmps
xchg
xor
mov
jnp
mov
sbb
in
sti
jbe
mov
pop
movs
repnz
pop
dec
add
adc
mov
outs
enter
sub
sub
mov
mov
add
data16
jle
push
cmp
or
shl
and
xchg
outs
jmp
neg
sbb
push
(bad)
mov
scas
xchg
sbb
psubq
test
mov
mov
(bad)
pop
mov
enter
outs
inc
lock
imul
ficomp
mov
push
mov
or
mov
adc
cmps
fild
js
mov
jl
jmp
and
mov
loopne
jl
stc
xchg
and
xor
sbb
out
inc
dec
ins
call
cmp
rcr
pop
push
mov
mov
inc
les
pop
int
cwde
in
mov
push
jo
inc
call
jno
in
adc
ret
lock
adc
dec
push
sbb
push
sahf
push
sbb
jns
push
aas
in
mov
jno
sbb
xchg
in
push
cmp
in
push
cpuid
add
mov
cmps
push
sahf
add
aaa
arpl
in
bswap
push
jae
cmps
push
stos
lock
sbb
add
scas
lds
das
out
pop
add
xor
int3
pop
adc
sub
xor
sbb
mov
push
and
cwde
mov
xor
and
retf
imul
or
push
inc
and
pop
(bad)
cmps
test
scas
adc
imul
mov
hlt
sbb
cmps
pop
(bad)
shl
mov
push
scas
cmp
neg
mov
imul
xchg
ret
push
popf
test
mov
test
rcr
icebp
nop
pop
ja
lea
mov
dec
cmc
push
sbb
cs
xor
inc
sub
mov
call
sbb
mov
retf
sbb
pop
add
iret
mov
pop
inc
sub
movs
cmp
dec
push
mov
and
stos
mov
mov
add
xchg
pop
or
pop
add
xchg
arpl
(bad)
add
and
dec
cmp
xchg
jl
pop
mov
hlt
xor
mov
jge
push
mov
mov
repz
or
stos
xchg
(bad)
xlat
inc
jo
cld
daa
retf
cmp
sbb
out
das
or
dec
idiv
or
lds
dec
sti
scas
fild
icebp
neg
das
test
add
into
mov
in
ss
cwde
cmp
shl
jmp
retf
jp
jno
pop
mov
icebp
popf
pusha
in
jecxz
lods
jnp
retf
inc
jmp
scas
push
clc
pop
fs
fstp
fmulp
mov
inc
cmp
mov
cmc
ins
les
ja
mov
adc
(bad)
pop
adc
in
(bad)
ror
cmp
mov
in
lahf
push
jo
add
enter
gs
mov
cmp
les
neg
fcomp
xor
int3
out
in
inc
movs
mov
sub
xchg
ja
in
hlt
arpl
nop
mov
es
jne
pusha
xor
push
push
cmp
(bad)
dec
call
inc
rcl
mov
out
cs
push
aad
cmp
sbb
aas
xchg
test
mov
mov
pop
mov
cmps
test
lahf
cmp
(bad)
mov
sub
pop
aad
outs
sub
xor
push
test
out
jne
add
ja
or
add
int
xor
(bad)
fcom
outs
sbb
adc
jmp
xchg
jbe
(bad)
cld
daa
rol
mov
and
sbb
jle
cmps
aad
pop
sbb
pop
mov
pop
dec
pop
mov
ret
in
push
movs
cmps
mov
xor
hlt
ja
pop
and
sbb
dec
nop
hlt
rcr
lds
push
adc
int3
push
mov
sbb
rol
jmp
cli
mov
jcxz
outs
ja
gs
inc
pop
aam
je
arpl
in
into
pop
push
sub
cmp
xlat
xor
sub
dec
jmp
adc
add
fmul
push
cmps
mov
or
in
je
mov
(bad)
push
call
xchg
rcl
call
mov
jmp
add
(bad)
sbb
sbb
push
add
dec
xchg
push
xchg
out
out
outs
add
mov
mov
pushf
add
dec
out
(bad)
cld
cmps
fild
dec
mov
scas
cmp
fcmovne
retf
loopne
mov
jmp
mov
aad
push
(bad)
stc
int
out
adc
aam
pop
pop
mov
xchg
and
rcl
js
xchg
push
data16
sub
xor
iret
cld
sahf
lods
mov
sbb
or
xchg
push
xchg
in
dec
ret
mov
cmps
pop
stos
sbb
imul
or
les
mov
and
jg
push
dec
jo
rcr
popf
fcom
mov
aaa
inc
fdivr
pop
(bad)
(bad)
xlat
and
xchg
mov
daa
dec
pusha
cmps
jmp
mov
dec
mov
imul
jle
(bad)
imul
cmp
cmp
xor
add
setbe
fmul
icebp
fwait
icebp
mov
jb
ja
dec
fdiv
(bad)
add
gs
outs
ds
cdq
test
scas
cld
xchg
cdq
jnp
scas
cmp
in
jg
inc
push
ins
arpl
dec
sbb
es
push
xor
mov
sbb
je
xor
inc
les
push
aad
jmp
retf
mov
out
aam
imul
cmp
sbb
(bad)
inc
xchg
repnz
adc
adc
cs
gs
fcomp
repz
inc
mov
add
mov
test
aam
push
sub
ror
jae
not
push
xchg
movs
int
lock
cs
dec
outs
push
sub
push
pusha
mov
retf
(bad)
fcom
jo
repz
cld
pusha
icebp
add
xor
xor
fidiv
sbb
or
bound
sub
or
xchg
out
xchg
inc
loopne
jne
or
stos
push
stc
or
(bad)
aas
retf
sbb
rcl
fiadd
and
ret
std
dec
push
adc
push
mov
(bad)
fcmovb
repz
pop
(bad)
fdivp
mov
inc
mov
or
or
xchg
pop
or
cld
sti
xchg
push
out
inc
mov
or
cmp
rol
out
dec
cs
gs
mov
and
fistp
sti
std
mov
cdq
jl
dec
push
push
add
adc
or
sbb
mov
or
out
arpl
cli
mov
push
outs
call
out
mov
call
test
inc
xlat
ret
pop
popf
pop
(bad)
jp
push
mov
div
inc
cdq
adc
ficom
mov
call
mov
xor
push
sar
imul
std
xchg
inc
mov
sbb
cmp
pusha
xor
repnz
stos
adc
stos
loop
sbb
cmps
add
jno
lods
mov
dec
ins
lds
xor
or
aaa
outs
xchg
mov
adc
and
xor
div
push
stos
popa
adc
retf
sahf
adc
data16
mov
in
mov
movs
jnp
and
outs
cmc
fwait
outs
int
pop
pop
call
adc
ds
popf
jb
mov
inc
call
push
mov
pop
cmp
fsubr
sub
mov
and
mov
jno
mov
sbb
ins
movs
jecxz
xchg
bound
bound
xchg
cmps
fst
xor
mov
scas
rcr
loop
in
adc
popf
pusha
gs
mov
or
dec
in
shl
leave
test
in
jg
cld
pop
sub
adc
sbb
mov
loop
adc
and
imul
icebp
or
movs
sbb
jg
pop
cwde
xor
fst
xchg
pushf
das
pop
in
rcr
clc
pop
test
int3
add
add
sbb
dec
mov
mov
mov
nop
inc
es
xor
mov
(bad)
cmp
and
mov
fist
outs
push
inc
cmp
mov
sub
gs
call
mov
outs
xchg
out
adc
in
lahf
fmul
pop
mov
mov
jae
adc
mov
cs
sub
out
add
push
enter
stos
mov
and
xor
movs
jl
fmul
popf
aam
(bad)
out
(bad)
xchg
sbb
sbb
or
cmp
inc
push
inc
mov
mov
xlat
sar
mov
in
mov
jp
das
retf
xchg
shl
and
xor
or
push
enter
fsubr
cmps
mov
push
jno
mov
fidiv
sbb
repz
in
mov
out
xor
cmps
call
retf
and
scas
pusha
and
test
stos
adc
push
add
pop
into
movs
pushf
xchg
xchg
mov
jmp
(bad)
pusha
adc
adc
mov
sub
leave
(bad)
jnp
aam
test
aam
test
xor
fimul
or
cli
arpl
jp
cmp
dec
xor
jo
outs
out
sub
mov
adc
inc
inc
mov
hlt
pop
adc
mov
add
(bad)
sbb
and
mov
loope
push
mov
xchg
adc
test
pop
mov
sub
mov
cld
scas
mov
ror
enter
retf
mov
dec
cld
or
inc
les
or
sbb
add
pop
sbb
xchg
inc
mov
cmp
push
add
sbb
nop
scas
int
loopne
adc
adc
call
fisubr
mov
movs
and
inc
fst
pusha
mov
inc
out
mov
fisubr
loopne
shr
cdq
jo
ins
jno
popa
ds
sbb
call
jecxz
push
pop
mov
gs
dec
xchg
cmp
pop
popf
daa
mov
aad
outs
cdq
jp
adc
cld
adc
mov
pop
xchg
mov
sbb
add
mov
jecxz
shl
(bad)
cmp
rcr
scas
pusha
out
das
iret
pushf
xchg
push
js
in
into
fidivr
xor
jnp
imul
icebp
push
cmp
adc
fs
lock
enter
jbe
or
daa
push
push
and
xchg
sub
xor
in
sbb
cs
cmp
cmps
jae
or
nop
(bad)
popf
mov
mov
pop
outs
arpl
or
test
into
cld
ins
xchg
lock
xor
out
es
pop
retf
push
leave
aam
cld
inc
adc
aam
jl
fisttp
pushf
xchg
dec
bound
loopne
jg
imul
add
mov
inc
xor
pop
jns
aam
cmp
leave
cmps
cli
lods
mov
cmp
dec
sub
mov
std
popa
mov
scas
fst
dec
adc
xrelease
ss
add
push
xchg
sbb
and
mov
fs
test
mov
and
xchg
call
fs
dec
cld
(bad)
in
push
in
in
dec
push
mov
or
les
add
ins
int3
mov
cmc
jge
and
(bad)
js
inc
sar
ja
mov
cli
jp
int3
call
out
daa
mov
add
mov
out
lock
fistp
push
xlat
push
lods
aad
add
js
pop
in
aad
cwde
mov
xchg
push
cs
xor
mov
inc
cmp
cs
sub
jb
mov
push
in
test
fdivr
xor
pop
in
out
in
jp
jmp
inc
in
in
lods
sbb
out
ja
(bad)
ficomp
aaa
pop
lock
xor
data16
push
das
retf
xchg
xchg
xchg
cmc
in
xlat
test
cmp
pushf
xor
sti
outs
js
hlt
xchg
mov
sub
jecxz
sub
xor
(bad)
shr
sahf
pop
loopne
mov
add
dec
xlat
push
cli
jns
ins
cli
fs
cmp
xchg
cmps
call
shl
sbb
leave
or
loopne
inc
mov
jmp
loope
test
or
stos
jne
addr16
mov
retf
inc
clc
ret
adc
retf
sbb
xor
(bad)
adc
pushf
shl
ror
or
jle
push
and
(bad)
retf
pop
cmp
jbe
sbb
lods
popa
xor
pop
pop
xchg
xchg
push
pop
and
fdivrp
push
arpl
or
mov
test
pop
mov
inc
xchg
(bad)
js
cs
adc
lds
cmp
pop
mov
push
fcomp
jg
pusha
inc
cdq
js
inc
ja
cmps
mov
lock
xchg
add
adc
mov
push
das
dec
popa
pusha
repnz
retf
jge
lods
pop
pop
and
dec
test
ficomp
dec
dec
mov
aam
mov
mov
mov
mov
and
(bad)
jbe
jbe
jae
add
adc
mov
jnp
and
cmp
push
push
out
xor
out
jmp
add
adc
vmovntps
std
add
lods
sub
mov
out
retf
mov
sub
inc
push
ds
lea
push
pop
mov
jae
jnp
dec
lods
inc
leave
ret
scas
adc
clc
jnp
or
out
rcl
cmp
jecxz
push
cmp
in
inc
jnp
aad
cmpxchg
push
mov
mov
xor
adc
loop
inc
mov
test
adc
aaa
dec
dec
or
sbb
call
lods
rcl
retf
add
pop
test
(bad)
fisubr
(bad)
xor
(bad)
aam
cmc
sbb
popf
or
mov
imul
jg
xor
mov
stc
or
repnz
xchg
sbb
ins
pushf
jmp
mov
gs
push
enter
stc
das
in
outs
cmps
in
repnz
xor
jbe
mov
add
or
test
je
mov
push
cli
pop
loop
mov
adc
or
jp
push
add
(bad)
pop
push
push
cdq
rcr
les
push
push
xor
push
outs
ror
in
(bad)
out
popf
aam
sbb
int3
repz
fdiv
mov
cld
sti
jl
dec
push
cmp
mov
icebp
lahf
fnstsw
scas
shl
test
mov
sub
in
arpl
(bad)
loop
int
mov
xor
(bad)
scas
push
fwait
xchg
inc
xor
pop
test
push
jo
pop
push
inc
mov
xchg
in
adc
adc
cwde
cmp
je
lods
fimul
dec
popf
and
fdiv
adc
mov
fisubr
cmps
mov
outs
xchg
pop
loope
test
inc
fidiv
add
(bad)
push
xchg
push
or
adc
or
inc
lea
push
pop
push
imul
cdq
sar
mov
aaa
cmc
clc
cmp
sbb
dec
je
rcr
jmp
cwde
sbb
dec
mov
cmp
out
jecxz
mov
pop
ja
js
pop
loop
adc
mov
adc
call
dec
jmp
mov
aaa
repz
cmps
push
mov
xchg
aaa
mov
jne
js
mov
shr
jecxz
push
test
cs
push
shl
mov
mov
rcl
(bad)
cmp
pop
cmps
enter
arpl
pop
jmp
enter
(bad)
cli
dec
push
mov
pusha
jl
cmps
pop
add
adc
outs
fild
push
sbb
inc
loope
popa
push
jne
mov
mov
fbstp
(bad)
clc
(bad)
fst
mov
in
mov
cmps
int
xchg
hlt
fs
aaa
add
cmp
dec
into
sbb
add
jo
ins
pop
jmp
inc
(bad)
ds
idiv
sbb
or
sub
iret
mov
xlat
xchg
pop
dec
mov
fdivr
pop
jmp
push
mov
fistp
repnz
push
push
mov
nop
xor
iret
data16
icebp
xchg
lods
ja
or
mov
xchg
mov
ja
and
xor
jg
adc
into
mov
mov
call
clc
inc
push
xor
mul
nop
fwait
into
loop
xor
cmps
add
add
retf
pop
iret
arpl
lods
xchg
mov
or
repz
add
sub
and
jnp
outs
outs
aaa
xor
mov
sbb
inc
mov
cmp
pop
mov
and
mov
arpl
pop
add
mov
js
or
rcr
xor
jnp
out
shl
mov
xchg
mov
(bad)
sbb
cwde
mov
jno
daa
in
cmc
pop
jg
inc
pop
adc
test
scas
jp
cmc
xchg
jbe
jnp
cmp
dec
aad
in
push
ja
lods
jmp
dec
sub
jne
inc
and
popa
and
out
jp
adc
sub
lahf
mov
xor
aaa
jo
inc
cmp
jg
mov
cmp
sub
cs
xor
movs
mov
xchg
aad
jae
and
dec
or
cwde
adc
loop
inc
das
loopne
(bad)
xlat
mov
sub
addr16
inc
out
pop
push
mov
inc
dec
or
ja
mov
add
mov
ss
gs
mov
inc
call
push
pop
(bad)
adc
sbb
cdq
scas
adc
stos
nop
xchg
jge
mov
(bad)
jmp
retf
sbb
icebp
inc
add
loope
cmps
or
(bad)
int3
imul
xchg
mov
ficom
sbb
or
dec
retf
adc
lea
add
call
or
jns
pop
dec
dec
jnp
jnp
call
mov
cmp
jmp
cmp
and
mov
sbb
pusha
in
(bad)
sub
mov
sbb
scas
stos
movs
jmp
add
dec
jmp
mov
xchg
add
out
jnp
scas
in
ja
shl
ficomp
add
inc
and
sub
cmp
push
or
dec
xor
push
xor
adc
call
call
out
fisttp
push
mov
mov
pop
and
fcomp
mov
mov
mov
shl
dec
sbb
pop
push
sahf
mov
adc
dec
cmp
push
out
fdivr
add
cdq
cli
not
fild
int
adc
sub
imul
cmp
adc
ds
sbb
xchg
xchg
mov
xor
fsub
xchg
bound
or
add
dec
add
cmc
mov
ficomp
pop
ja
mov
inc
cmps
dec
cmp
lods
add
adc
jnp
dec
repnz
sbb
ins
and
and
into
(bad)
push
fcmovne
or
push
push
lds
(bad)
cmp
ja
in
ror
inc
sbb
nop
xchg
cmp
adc
mov
xchg
and
jns
mov
mov
leave
mov
rcl
stos
push
lds
push
call
lock
xchg
inc
xor
inc
into
cs
leave
mov
mov
jg
mov
xchg
xor
sub
dec
sahf
or
pop
mov
and
leave
pop
cmps
test
fdivr
xor
lahf
pop
inc
sub
stos
xchg
xor
mov
push
hlt
ss
push
xor
popf
std
pop
sbb
dec
jg
xor
stos
and
sbb
not
mov
push
adc
mov
imul
int
test
iret
push
(bad)
mov
ins
fcomp
pop
ss
and
clc
clc
sbb
adc
sub
adc
dec
pop
aaa
in
or
(bad)
lods
push
inc
mov
cmc
ins
sbb
jmp
fild
scas
dec
jae
aas
stc
mov
mov
idiv
mov
push
xor
xchg
pop
add
or
jp
pop
pusha
pop
and
outs
cdq
clc
cmc
mov
add
sti
in
ret
es
jmp
xchg
and
fisttp
inc
fisubr
cwde
pushf
test
pop
mov
imul
pop
mov
pop
lods
xchg
mov
(bad)
rcl
ins
iret
pushf
fidivr
aad
cmps
jbe
outs
jg
push
jg
js
jbe
aam
bound
rdmsr
xor
cdq
dec
mov
dec
iret
cmp
and
pop
or
fs
cmc
imul
loop
test
dec
icebp
aaa
jb
dec
stc
jg
lahf
pop
xchg
jns
scas
int
cmps
inc
ins
rcr
dec
cmp
jecxz
mov
ds
push
int
fld
or
pop
sti
mov
and
scas
int3
gs
loopne
lock
aas
vphadduwq
dec
add
(bad)
fs
out
fld
or
mov
arpl
jmp
loope
sub
add
out
into
or
rcr
inc
icebp
icebp
cwde
loopne
push
iret
xchg
daa
push
xchg
outs
test
xlat
inc
in
inc
aad
jmp
daa
cmp
jno
in
or
es
sbb
or
inc
stos
sub
leave
xor
sbb
push
ins
test
mov
es
mov
aam
inc
mov
shr
mov
jge
rol
gs
shl
mov
add
leave
push
cmp
cmc
std
push
retf
jnp
aas
mov
clc
push
mov
in
(bad)
cmp
jb
sbb
sbb
gs
inc
(bad)
mov
stc
out
push
cwde
ins
xor
mov
mov
xchg
jns
clc
jbe
lea
adc
adc
adc
shl
mov
sub
add
sub
cwde
pop
ins
sub
dec
mov
sahf
push
jns
cdq
pop
int3
push
popf
bound
popf
clc
mov
cmc
push
movs
imul
pop
xor
xor
xchg
inc
fst
shl
into
xor
jmp
imul
sbb
mov
jnp
lock
mov
add
mov
adc
mov
or
and
aas
ror
cmp
sar
xchg
fstp
adc
ins
and
xchg
sbb
aaa
bound
sbb
or
dec
pop
inc
(bad)
js
lds
add
fdiv
pop
jp
(bad)
cmc
data16
cs
shl
imul
pop
into
mov
cld
ja
xor
xor
xchg
popa
test
cmp
push
xor
xor
mov
and
stos
fs
in
xor
aas
push
add
out
cmp
dec
add
sar
fwait
loop
gs
mov
lahf
or
xchg
gs
ds
sub
popf
js
jl
mov
(bad)
js
std
xchg
rol
test
cmp
push
pop
out
sub
xchg
pop
sar
sub
out
and
adc
movs
or
sub
jl
sbb
jmp
inc
(bad)
push
jl
das
aad
es
xor
dec
in
xchg
stos
pusha
jb
cwde
ins
cmp
int
lods
jae
xchg
repz
xor
push
out
add
jo
mov
mov
jns
push
loop
push
(bad)
mov
xlat
daa
cmp
add
adc
adc
dec
cmp
mov
test
in
xor
lds
dec
push
inc
xchg
jg
xor
call
fwait
pop
pop
mov
ins
mov
xchg
and
jo
fsub
test
push
daa
in
cmps
jb
cli
test
cld
push
lahf
add
cli
iret
dec
sub
and
jg
fimul
(bad)
mov
repz
jno
xchg
out
(bad)
mov
ret
xor
add
(bad)
inc
jg
lock
loopne
xor
sub
xchg
int3
test
sub
mov
or
pop
out
sub
xor
in
jbe
sti
int
xor
lds
xchg
xor
sti
je
mov
div
sub
mov
jl
mov
sti
cmp
mov
xor
add
arpl
call
fidiv
pop
test
call
add
sub
repnz
stc
pop
mov
gs
inc
(bad)
(bad)
cmp
imul
stos
(bad)
(bad)
sub
rol
jle
das
inc
jnp
int3
add
ret
sbb
inc
jp
sar
sbb
mov
mov
xor
(bad)
sbb
pop
std
and
ds
mov
aaa
and
mov
orps
sbb
clc
sub
jmp
inc
test
repz
xchg
clc
mov
jo
inc
and
add
jl
in
shr
xchg
das
pop
cmc
inc
sti
or
call
sub
mov
in
sahf
clc
jge
push
mov
cld
mov
mov
cs
adc
fisub
sbb
mov
lods
push
sub
jae
aad
imul
push
ret
pop
fnstsw
mov
sub
enter
pop
in
mov
jbe
std
xor
jecxz
cdq
jg
movs
cdq
call
out
push
mov
mov
mov
std
je
or
test
rcr
and
jb
jo
fistp
out
(bad)
jmp
and
inc
jecxz
adc
out
movs
test
(bad)
iret
inc
push
movs
into
jp
ror
nop
lahf
mov
fisub
jo
cld
xor
mov
div
jnp
sbb
(bad)
pusha
lods
in
ret
movs
mov
ror
xor
fs
mov
gs
xchg
iret
in
inc
fwait
and
das
aad
dec
xor
and
mov
test
or
sbb
std
cmp
or
scas
stos
pop
sub
xchg
jle
test
mov
mov
adc
add
mov
sub
xor
in
scas
pop
inc
cmp
mov
xchg
pop
fistp
enter
mov
mov
ins
xor
lds
inc
mov
sbb
pop
shl
adc
xchg
and
inc
and
lds
(bad)
sar
xchg
push
push
outs
fdivr
dec
cmps
sub
pop
mov
xor
pusha
cmps
and
lea
mov
rol
and
xchg
jmp
(bad)
pop
push
and
clc
push
pop
jb
push
xchg
pop
sbb
fnclex
mov
sahf
mov
pop
push
pusha
push
mov
xchg
int3
call
and
(bad)
jne
add
cmp
jle
les
cwde
mov
movs
add
xlat
fadd
jg
leave
xor
jg
dec
mov
fist
retf
daa
mov
pop
icebp
dec
cdq
sub
dec
lock
mov
lds
jmp
test
jbe
pop
ret
iret
ret
dec
pushf
imul
nop
and
ins
cwde
xchg
xchg
ja
pop
push
and
dec
repz
mov
dec
pop
xchg
sti
mul
(bad)
mov
aas
popf
pop
jmp
pop
aaa
daa
push
mov
jb
sbb
cmp
pop
mov
fimul
dec
add
jecxz
cmp
shl
add
in
dec
retf
cmp
jmp
jb
lock
lock
iret
cmp
sbb
push
xor
imul
cmp
inc
dec
jle
dec
daa
lds
push
inc
inc
pop
and
lahf
inc
sub
sbb
fnstenv
add
dec
lds
add
xchg
xor
cmps
fs
in
push
out
and
sahf
aaa
inc
ss
div
and
jne
xor
adc
dec
xor
cmp
xchg
out
dec
stos
sbb
xor
or
or
std
or
jg
mov
int3
and
xchg
mov
mov
(bad)
adc
cdq
in
add
xchg
out
stc
or
pusha
cmp
or
ins
fs
out
mov
test
sub
pop
sti
movs
push
loop
sub
cmps
fbstp
test
imul
xor
xor
int
in
sbb
retf
fs
clc
inc
mov
cmp
sbb
dec
xchg
or
dec
iret
mov
and
push
mov
cmp
imul
pop
(bad)
(bad)
daa
inc
push
dec
and
pop
and
mov
push
shl
sbb
pop
push
ja
dec
ins
mov
mov
sub
iret
mov
push
movs
cs
popa
xor
es
cmp
jnp
mul
je
retf
pop
jle
xchg
xor
imul
cmp
mov
fnsetpm(287
mov
cmp
daa
xchg
sub
push
add
mov
js
les
out
mov
das
fldenv
test
iret
jb
icebp
jns
sbb
push
in
cmp
stos
ret
pop
adc
add
sbb
(bad)
repnz
inc
xlat
mov
stc
adc
xlat
sbb
add
mov
ret
xchg
inc
mov
dec
sets
std
lahf
inc
xchg
add
jmp
jecxz
mov
pop
mov
jo
pop
xchg
push
clc
jb
xor
int3
jb
and
sbb
mov
retf
push
mov
xchg
mov
push
xchg
jge
pop
std
push
data16
pop
xchg
or
mov
out
fmul
dec
loopne
mov
(bad)
mov
or
xchg
(bad)
out
lahf
test
sahf
loope
push
pop
or
sub
add
pop
jg
mov
sub
mov
lods
pop
jne
mov
cmp
inc
ret
push
xor
sub
(bad)
jae
mov
push
adc
sbb
mov
pop
ret
xchg
jmp
xchg
xchg
addr16
jb
and
fnstenv
xchg
fsubr
mov
mov
bound
lahf
pop
push
push
jle
pusha
or
out
(bad)
xor
xchg
out
push
sub
ror
xor
add
test
adc
in
jge
sbb
dec
or
or
mov
stc
test
(bad)
push
adc
jp
add
sbb
dec
sub
xor
out
mov
add
scas
popa
cmps
or
and
cli
test
jb
bt
sub
aad
call
lods
je
inc
(bad)
jno
sub
xchg
int3
cmp
cmps
push
inc
push
in
jg
jnp
xchg
loopne
dec
adc
lock
sub
jecxz
fsubr
cmc
xchg
push
or
jecxz
xchg
xchg
adc
out
in
(bad)
paddusb
xlat
lahf
pop
jnp
inc
lods
not
or
jl
and
pop
adc
mov
mov
stc
cmp
scas
rcl
fisubr
inc
movs
scas
push
inc
hlt
iret
lods
sahf
mov
xchg
pop
add
data16
out
shl
clc
cmp
dec
mov
mov
add
rcr
sbb
jae
scas
and
sti
and
add
push
dec
mov
or
mov
pop
fsubr
push
inc
ret
xor
jno
xor
sub
dec
sti
je
in
push
retf
outs
cwde
test
pop
inc
test
add
in
pop
les
or
cmp
pop
mul
or
loop
in
push
sub
pop
adc
icebp
and
inc
xchg
xchg
popa
rol
pop
ins
mov
pop
(bad)
ja
outs
pusha
cli
gs
jmp
cdq
rol
mov
clc
std
mov
mov
jmp
jae
xor
out
pop
(bad)
cmps
dec
jae
or
fwait
jbe
lahf
inc
mov
cmp
add
scas
cs
scas
jae
sub
mov
push
push
(bad)
push
mov
(bad)
jo
movs
(bad)
jmp
cmp
mov
ins
add
jle
imul
jno
mov
xchg
cmp
(bad)
in
clc
out
jns
bound
leave
out
inc
dec
ficomp
xor
mov
jb
shl
xor
sub
xchg
add
xor
pusha
in
cmp
cmps
ret
xchg
call
jo
inc
mov
push
inc
in
xlat
jmp
sbb
push
xchg
movs
xchg
call
aas
fistp
imul
iret
cld
pause
inc
push
je
inc
mov
test
call
or
in
cli
(bad)
jge
pushf
ficom
jne
ds
jl
push
jne
mov
dec
ss
add
cmp
pop
cwde
in
daa
popa
stos
sub
push
mov
jmp
aad
inc
je
mov
sbb
imul
cs
imul
aas
push
push
dec
mov
adc
xchg
mov
shl
ror
out
mov
sub
fistp
cdq
inc
fcomp
dec
fdiv
pop
rcr
mov
call
inc
jno
mov
lahf
aam
jnp
ins
mov
mov
ficomp
addr16
lds
jne
psadbw
std
push
inc
lahf
push
and
fst
fist
cmp
xor
sbb
or
fistp
cdq
mov
adc
jae
int
pop
std
shl
mov
jecxz
out
pop
dec
pushf
dec
pop
inc
dec
cmp
jle
mov
sar
inc
fs
adc
mov
mov
xchg
fidiv
sbb
test
pop
dec
sub
mov
aaa
push
adc
in
into
xchg
pop
ja
lods
pushf
sbb
jp
jnp
test
push
sbb
adc
fld
xchg
sub
call
clc
adc
xor
enter
jge
sub
pop
pushf
cmp
shr
pop
and
inc
push
cmp
rol
shr
ret
dec
and
in
shl
dec
or
jb
jb
mov
in
mov
fcomp
test
std
test
out
cmp
pop
xchg
mov
ds
test
mov
popa
adc
out
imul
inc
test
aad
mov
cmps
add
mov
push
call
adc
mov
cmp
xchg
rcr
add
jle
pop
mov
addr16
inc
cmps
outs
iret
push
outs
shl
stc
test
hlt
add
leave
add
inc
in
std
jmp
dec
jecxz
out
and
sub
clc
pop
test
sti
loop
sbb
or
xchg
fs
adc
mov
dec
lods
sub
rcr
pop
scas
mov
mov
jb
(bad)
sub
jle
out
dec
or
bound
inc
push
xchg
gs
jo
loopne
out
or
push
dec
xchg
mov
clc
jl
cs
cmp
or
xchg
mov
nop
scas
loopne
add
sahf
adc
jno
xchg
jbe
pop
mov
test
xor
add
jecxz
jmp
lahf
mov
cmp
lods
mov
lods
mov
xor
inc
movs
test
mov
jg
mov
stc
mov
shr
jg
jno
popf
xor
inc
(bad)
add
in
mov
pop
inc
pop
add
in
and
mov
dec
or
mov
mov
jo
test
mov
xor
dec
shl
iret
rcr
stos
movs
(bad)
stos
mov
sbb
push
mov
in
cmp
movs
mov
cwde
(bad)
push
das
and
aad
(bad)
mov
sub
arpl
jge
fsub
xchg
retf
push
sbb
jl
inc
cmp
popa
cmp
retf
out
movs
cmps
push
sub
leave
(bad)
inc
jg
shl
gs
mov
push
dec
xchg
shl
push
(bad)
jae
outs
outs
ror
fstp
adc
shl
jno
(bad)
and
stos
inc
sub
jmp
es
ins
dec
retf
imul
inc
dec
sub
add
ret
pop
mov
push
scas
(bad)
dec
push
fcmovnu
sbb
mov
mov
mov
scas
call
jecxz
std
jl
out
fldcw
or
sbb
out
nop
inc
xchg
in
or
jg
jb
mov
xlat
or
sbb
cmps
ss
sbb
pop
inc
inc
inc
das
or
push
fwait
scas
retf
ret
cmp
pop
xor
pusha
clc
dec
cmp
(bad)
push
cmp
inc
cmc
mov
out
push
cmps
(bad)
or
pop
mov
(bad)
cmp
mov
mov
xchg
mov
ret
push
jmp
and
or
add
mov
cmp
mov
push
std
inc
push
sub
lods
jecxz
sub
cdq
cld
add
and
xchg
pop
mov
inc
(bad)
imul
mov
xor
shl
int
rcr
sbb
fs
cwde
es
jbe
and
fwait
loop
sbb
inc
jl
nop
pop
add
jnp
push
dec
int3
in
cmp
sub
stc
ret
jbe
cmp
jne
sub
icebp
mov
mov
push
push
sbb
lods
(bad)
mov
pop
test
or
xchg
pop
mov
scas
inc
xchg
rol
push
dec
data16
popf
call
push
jge
jne
push
push
sbb
fdiv
inc
(bad)
mov
and
add
mov
cmp
push
push
jl
mov
jae
ret
icebp
add
push
test
movs
pop
out
jmp
idiv
xor
test
inc
fcomip
mov
xchg
mov
mov
xchg
frstor
xor
out
jecxz
pop
stos
or
pop
movs
dec
aaa
ficom
sti
cmp
hlt
imul
jb
icebp
int
and
mov
cmps
xchg
ds
stos
and
dec
ret
scas
sbb
adc
xor
pusha
inc
pushf
test
inc
jmp
jmp
loopne
xor
pop
aaa
xor
inc
add
jbe
call
push
mov
dec
shl
jmp
dec
cmc
xor
ret
in
jb
push
push
movs
repnz
scas
adc
jmp
std
dec
call
pop
shl
fist
cld
loope
push
imul
mov
push
(bad)
xchg
push
leave
jge
dec
bound
mov
sbb
pop
scas
test
cmc
xor
jno
inc
scas
inc
sbb
idiv
mov
out
rcl
mov
stos
or
cmp
or
loop
idiv
or
sbb
shl
inc
std
sub
jle
inc
mov
outs
pop
mov
jp
mov
ins
mov
std
nop
inc
dec
jae
xor
test
push
outs
and
aas
pop
cmps
push
jo
cdq
arpl
addr16
loop
dec
aas
enter
cwde
cmp
inc
mov
out
sbb
pop
popa
idiv
jg
sahf
inc
xor
sahf
mov
dec
je
pop
or
xor
jbe
popa
retf
in
mov
cmp
jl
sbb
dec
dec
out
xchg
pushf
sti
sti
jmp
sub
(bad)
or
test
movs
mov
mov
xchg
add
imul
fmul
fisub
retf
and
mov
out
retf
xor
and
jg
inc
push
or
je
inc
ret
sbb
outs
jb
pop
mov
push
jge
inc
test
mov
into
or
retf
call
add
jns
sub
clc
mov
test
ss
add
add
call
sar
in
add
jnp
into
xor
inc
sbb
or
jmp
and
dec
dec
das
stc
mov
and
mov
pushf
mov
push
cmp
(bad)
xchg
xor
mov
or
inc
sbb
push
scas
fistp
adc
jl
cmp
push
and
xor
test
mov
push
jecxz
fs
add
cmp
xchg
jecxz
pop
int
addr16
(bad)
pop
rcr
clc
out
xor
xchg
pop
gs
test
pop
dec
je
sub
pop
in
test
outs
jmp
xchg
jmp
out
mov
lods
out
or
jns
in
popa
mov
mov
clc
sbb
and
or
cmp
ds
xchg
inc
ffree
imul
int
jge
mov
mov
arpl
out
mov
inc
rol
test
in
pop
(bad)
mov
xor
loop
jo
mov
add
or
adc
xchg
cld
add
out
jns
fwait
xor
add
into
rol
jp
and
mov
icebp
xchg
movs
test
pop
or
inc
push
sti
mov
xor
cmc
iret
lods
sub
sbb
mov
pop
test
ja
loope
jg
pop
dec
loop
pop
push
stc
push
pop
jle
xor
(bad)
fwait
int
jge
movq
dec
mov
inc
sbb
popf
jecxz
mov
popf
mov
retf
dec
adc
xchg
idiv
cmp
fwait
and
add
xchg
xchg
call
jno
out
mov
and
push
xchg
ror
push
inc
dec
fdiv
out
rol
and
out
jle
in
sti
or
mov
mov
daa
in
movups
inc
aas
or
out
jne
push
mov
sbb
lods
push
jae
ror
arpl
shl
push
mov
xchg
xchg
rol
bnd
mov
in
push
push
icebp
in
pop
adc
outs
std
shl
sub
outs
aad
test
push
arpl
retf
imul
repnz
call
and
pushf
xor
push
int
and
shl
mov
sub
sar
jne
and
jb
mov
push
mov
call
nop
sbb
pop
pop
mov
add
aaa
rol
bnd
hlt
cmp
xchg
fisub
mov
pusha
mov
mov
sbb
repz
pop
mov
out
sub
adc
push
scas
cli
fadd
push
in
sbb
and
scas
push
in
in
inc
mov
setb
cli
test
jbe
outs
xor
xor
rol
push
cmps
or
sahf
push
ins
cmp
jecxz
pop
loope
xchg
add
pushf
mov
jge
adc
retf
and
dec
sub
or
xchg
sbb
bound
(bad)
jmp
out
inc
or
adc
mov
(bad)
pop
or
aas
sbb
mov
xchg
adc
icebp
pop
sub
out
add
jb
and
mov
add
mov
sbb
into
shl
mov
push
jae
mov
push
pop
push
add
push
rol
ret
mov
in
cmp
pop
xchg
lea
xchg
dec
pop
int3
stos
leave
aam
mov
mov
ins
cld
push
aam
sbb
repnz
mov
xor
aad
std
int
mov
jb
mov
pop
in
ja
pop
xchg
pop
push
xchg
retf
ret
mov
sub
jns
cmp
mov
fsubr
pop
sbb
test
xchg
cdq
scas
xchg
pop
jmp
xchg
test
xor
ret
jle
icebp
cmc
sar
sub
cwde
add
les
mov
sbb
inc
sar
add
sub
adc
fnsave
call
punpckhwd
xor
sbb
jae
or
xor
add
mov
adc
adc
or
xchg
addr16
es
sbb
iret
xchg
add
sbb
add
retf
jns
aaa
mov
(bad)
mov
push
xchg
push
paddsb
sub
and
loope
loope
sub
xchg
outs
jmp
ds
stos
and
fs
or
jb
call
push
xchg
cmc
in
mov
xchg
xlat
int3
mov
das
js
test
cld
mov
btc
je
add
push
cld
mov
mov
sub
jb
inc
sbb
out
push
xchg
push
outs
sbb
add
hlt
mov
pop
call
cmc
sbb
cmp
stc
stc
xchg
xor
call
sbb
dec
push
out
sub
pop
push
jge
es
xor
cmp
mov
jmp
cli
jae
fiadd
scas
mov
jb
adc
fdivr
jne
xlat
add
add
lock
addr16
stc
loop
sti
inc
jge
iret
add
mov
jge
jnp
in
stc
push
lea
cmp
mov
clc
add
shl
xchg
push
loop
push
ret
sbb
jnp
aad
and
mov
arpl
(bad)
es
out
dec
mov
pop
cmp
xor
mov
dec
outs
mov
cmc
nop
mov
sar
push
sbb
lock
pop
int
dec
push
ds
xchg
jp
cmp
js
jae
xor
cwde
in
push
push
cmp
ror
add
loop
or
aad
movs
dec
push
popa
or
add
mov
popa
cmps
jp
xor
je
jmp
cs
xchg
jo
inc
dec
inc
hlt
dec
inc
pop
daa
inc
mov
jae
pop
push
inc
cdq
add
out
and
xor
mov
neg
lods
adc
loop
int3
test
mov
repz
jg
cmp
adc
in
aaa
fs
popf
sar
mov
idiv
test
push
adc
imul
mul
cmp
rol
imul
aaa
imul
cmps
imul
add
add
jge
lahf
pop
repnz
sbb
out
sbb
cmps
loop
addr16
test
jae
fwait
call
cmp
(bad)
cwde
icebp
mov
mov
jbe
retf
dec
push
daa
add
inc
cs
(bad)
not
pop
loope
int
aam
out
pop
pmovmskb
fbld
(bad)
test
pop
cmps
(bad)
int
ret
dec
sahf
out
ret
mov
popa
imul
out
cmp
int3
jg
jns
(bad)
scas
push
jmp
pop
xchg
pusha
out
and
pop
scas
fisubr
mov
(bad)
jmp
add
mov
in
dec
pop
mov
sbb
cmp
mov
lea
cmp
icebp
scas
adc
js
addr16
mov
andnps
pop
inc
iret
push
add
std
retf
mov
xor
in
iret
pop
xchg
dec
mov
sub
cld
and
iret
push
sub
mov
xchg
rcl
fcom
loopne
fs
imul
cli
xor
loopne
repnz
and
es
cmp
xchg
mov
pop
cmps
jle
ja
(bad)
cmp
push
push
fisttp
int
and
jmp
dec
aaa
cmp
leave
mov
aad
jl
les
(bad)
pop
adc
jecxz
xor
push
test
fistp
sahf
clc
sub
and
ins
jnp
jmp
sbb
push
cld
sahf
jmp
jbe
mov
jo
jo
cld
lock
pop
movs
adc
ficom
aaa
call
fcmovb
cmps
fld
enter
xchg
inc
xlat
lds
jnp
cs
jne
bound
pop
mov
rcl
jge
jmp
add
mov
jmp
dec
ins
xchg
(bad)
mov
mov
mov
push
inc
das
daa
inc
mov
push
test
mov
jbe
xchg
cmps
jno
int
sbb
cmp
jg
cmc
or
arpl
mov
push
push
das
mov
(bad)
inc
and
jnp
add
pop
or
cmc
inc
cmp
out
fiadd
adc
ret
inc
sar
jecxz
nop
out
iret
retf
(bad)
mov
dec
pop
cwde
dec
lds
jecxz
jne
fmulp
out
mov
jmp
jbe
faddp
pushf
sbb
xlat
mov
sub
out
scas
jne
adc
and
fs
mov
stc
loop
sub
pop
cdq
jecxz
clc
push
mov
pop
inc
lahf
popf
cmps
popf
mov
mov
(bad)
mov
iret
inc
ja
call
xchg
(bad)
push
cmps
pop
sub
sbb
call
je
in
ror
jmp
push
jle
xchg
push
adc
out
outs
pop
(bad)
gs
je
or
(bad)
push
add
test
test
jno
rol
xor
es
rol
mov
xor
lds
cmp
lock
push
jge
cld
out
sub
js
nop
push
lds
sub
ja
scas
or
arpl
scas
scas
or
ror
mov
add
xchg
loope
jecxz
iret
fmul
push
mov
xchg
inc
adc
test
pop
cmp
and
cmc
cmp
jbe
cmp
mov
jne
push
jecxz
aas
or
shl
jnp
arpl
xchg
xor
inc
sbb
je
shr
mov
pop
loop
scas
pop
fwait
push
inc
into
add
inc
pop
pusha
call
jg
adc
ins
and
mov
inc
nop
imul
pop
fisttp
adc
clc
pusha
sbb
and
repz
sub
dec
scas
test
mov
aad
(bad)
std
jo
mov
ja
inc
sub
stos
dec
sbb
rcl
push
jle
shl
dec
inc
icebp
mov
mov
lahf
inc
push
xor
sbb
out
sbb
mov
add
or
mov
test
mov
sub
jl
(bad)
loop
mov
aaa
mov
xchg
sbb
popa
xor
sub
fsubr
adc
mov
jp
cdq
cmp
lea
sahf
xlat
mov
out
mov
and
scas
shr
jne
cmp
jle
and
aad
ror
por
mov
int
push
push
scas
jmp
cwde
sub
div
call
repnz
sahf
in
cmp
daa
mov
out
fist
adc
aas
stc
bound
or
lock
xor
sub
das
out
sbb
popa
mov
out
xchg
push
gs
pop
pop
cmp
jle
push
mov
pop
ds
or
popf
fmul
cmp
aam
fldcw
push
in
aaa
repz
test
push
jbe
jle
mov
push
sbb
mov
jg
jne
dec
dec
mov
sbb
out
cwde
jbe
lahf
xchg
inc
rol
ss
stos
icebp
dec
(bad)
and
daa
test
call
push
xchg
out
dec
call
test
xchg
push
fldcw
add
lods
mov
popa
jl
imul
rcl
dec
not
mul
dec
test
int
nop
inc
scas
dec
sti
adc
call
mov
xor
fdiv
nop
push
cmp
mov
or
ret
and
adc
inc
int
test
xor
dec
cmp
push
cld
push
mov
shl
jle
and
and
mov
xlat
gs
sub
cmps
jbe
push
inc
(bad)
stos
out
inc
out
data16
jb
mov
movs
sahf
mov
cs
push
call
mov
int3
test
sbb
sub
jmp
daa
cs
sbb
mov
aam
sbb
jo
mov
jle
mov
cmc
pop
mov
adc
ficomp
popa
cmp
cmc
loope
xor
or
inc
mov
sub
adc
test
pop
out
mov
mov
aaa
int
stos
mov
rcl
in
and
jo
xchg
shl
loopne
ins
stos
push
fist
js
test
cmps
mov
xor
cmps
jp
mov
mov
aam
movs
ins
clc
lods
mov
daa
jb
jl
call
aas
mov
push
jle
jns
sub
dec
fadd
adc
or
aad
mov
in
pop
js
outs
sbb
push
mov
mov
test
dec
(bad)
sbb
and
shr
(bad)
pop
dec
cli
add
shl
inc
out
push
mov
mov
sbb
(bad)
dec
or
shr
dec
pop
aas
repnz
adc
or
pop
xchg
xchg
sbb
adc
sub
adc
dec
mov
in
jo
fucom
inc
xor
aam
(bad)
jmp
mov
or
adc
aad
mov
fucomip
dec
(bad)
pop
scas
cmp
push
pop
(bad)
sbb
rcr
ret
xchg
inc
push
sub
ss
jae
stos
xchg
cmp
xchg
and
fbld
or
pop
ss
imul
imul
cmc
sbb
or
dec
jle
int
and
push
mov
ins
adc
pop
dec
push
add
into
pop
addr16
jns
shl
mov
cwde
clc
stc
ja
out
and
xor
bound
cmp
adc
jp
js
cpuid
in
repnz
push
mov
dec
xchg
cmc
inc
nop
imul
add
dec
data16
rcl
movs
pop
addr16
xchg
(bad)
sub
aaa
int3
mov
or
es
add
pop
lea
dec
(bad)
gs
ud1
imul
mov
mov
aas
xor
stos
dec
idiv
or
iret
push
push
mov
jbe
popf
xchg
xchg
mov
and
(bad)
fdiv
pop
inc
adc
jne
jge
sub
push
hlt
cmps
retf
xchg
cmps
loop
cmp
fisttp
shr
push
nop
retf
test
cmp
xchg
loope
cwde
sub
xor
call
into
retf
loop
push
repz
or
push
jb
mov
(bad)
popa
add
mov
jp
hlt
adc
dec
pop
mov
cwde
mov
retf
stos
mov
dec
jbe
cmp
push
fdivr
arpl
arpl
pop
jae
inc
mov
outs
repz
sub
add
(bad)
sti
adc
pop
adc
xor
sub
movs
(bad)
retf
xor
enter
fild
mov
adc
shl
icebp
gs
fdivr
mov
inc
or
jle
inc
in
fld
pop
mov
mov
outs
adc
or
xchg
popf
push
hlt
push
and
and
and
popa
push
sahf
in
add
add
xchg
(bad)
js
(bad)
scas
(bad)
js
sub
mov
int3
out
fwait
adc
mov
inc
ins
ds
cwde
xor
xor
cli
and
fwait
push
in
idiv
or
and
lds
pop
mov
pop
rol
icebp
repnz
mov
cdq
imul
sub
shl
ret
pushf
cmc
aam
fs
lods
pop
cmps
call
adc
ret
add
lds
sbb
cmps
xor
cmp
adc
loope
push
xor
mov
pop
push
popa
das
rol
cli
call
inc
loop
das
and
test
in
jbe
push
sar
(bad)
jmp
aaa
int
push
add
sbb
daa
adc
dec
inc
fdivr
jne
inc
loopne
test
mov
pop
adc
inc
jmp
and
daa
in
xchg
ret
or
jbe
(bad)
xor
jne
mov
dec
inc
(bad)
sbb
push
xchg
aam
mov
scas
fsub
cmp
mov
(bad)
mov
add
test
sub
leave
sbb
adc
sbb
add
test
jno
(bad)
cmp
mov
sub
sub
xchg
imul
cmp
rol
push
out
mov
pop
dec
call
gs
adc
push
lahf
jb
das
in
nop
cli
dec
push
xor
mov
test
popa
pusha
fxch
pop
cmps
dec
inc
or
cli
outs
pop
add
stos
and
xchg
inc
rcr
mov
(bad)
dec
sti
movs
adc
adc
retf
std
push
jl
xchg
ss
and
in
mov
in
jae
mov
test
jns
jmp
(bad)
rsm
cs
cmps
xchg
movs
sahf
dec
or
mov
into
push
jo
jno
pop
sbb
mov
pop
fs
nop
movs
add
mov
dec
out
call
xor
dec
dec
xchg
(bad)
shr
xor
push
xchg
out
dec
fdivr
inc
cmp
and
cld
jp
jmp
push
pop
(bad)
jae
inc
or
sub
mov
cmp
sub
add
push
add
lock
call
pop
lods
cmp
and
je
mov
adc
mov
inc
sbb
inc
cli
(bad)
mov
repnz
ja
mov
or
sbb
fidiv
pop
scas
clc
shl
aad
retf
cmc
pusha
cs
mov
add
dec
(bad)
pop
sbb
test
xchg
imul
adc
fldcw
push
xor
lea
in
pusha
adc
push
mov
sub
mov
test
jmp
fcmovnu
pop
sub
jle
pop
(bad)
xor
add
in
call
cmp
inc
js
sub
stos
dec
add
pop
dec
mov
cmp
cdq
adc
inc
sahf
rcl
add
jecxz
ret
dec
mov
pop
in
mov
mov
mov
xchg
pushf
dec
test
icebp
fwait
mov
sbb
scas
inc
sub
pop
outs
jae
push
icebp
xchg
mov
lea
adc
stos
fs
or
xor
hlt
sahf
sar
imul
push
fwait
inc
xor
dec
xor
xchg
dec
addr16
add
inc
sbb
or
(bad)
mov
push
push
sub
ret
aam
sub
jle
stc
jle
ss
sbb
leave
sbb
dec
outs
jmp
stc
push
popa
jns
add
movs
adc
push
jmp
lds
mov
add
inc
inc
stos
xchg
adc
retf
adc
pop
shl
xor
test
or
and
sbb
arpl
pop
cmps
pop
and
jmp
fbld
iret
xor
cmp
pop
adc
xlat
mov
inc
add
shl
adc
(bad)
jle
or
mov
(bad)
fimul
push
xchg
hlt
adc
mov
jg
xchg
push
rcr
fadd
(bad)
and
sti
clc
call
jno
loop
dec
add
pop
xor
fs
sti
pop
out
fstp
jmp
std
xchg
mul
pop
fwait
inc
mov
mov
jl
cmp
ret
jbe
push
xchg
mov
mov
repnz
adc
mov
js
push
mov
stos
dec
cs
jecxz
mov
sub
push
pop
out
jno
pop
les
inc
cmp
sub
adc
pop
fwait
mov
call
cmps
fst
pop
mov
mul
call
push
jmp
add
pop
fadd
sub
mov
adc
xor
mov
mov
ss
ins
in
jns
lahf
arpl
cdq
repnz
xor
cmp
(bad)
in
ret
mov
loopne
push
or
add
fs
push
lods
fstp
and
shl
in
lods
gs
adc
test
jne
inc
pop
and
push
mov
jns
push
mov
inc
mov
js
cmp
push
mov
cs
inc
out
aam
sbb
int3
jecxz
cli
scas
mov
out
lods
retf
mov
dec
ss
sbb
repnz
lea
mov
cmps
enter
imul
adc
scas
mov
add
pusha
jno
stc
aad
in
mov
mov
sbb
add
lods
and
mov
lds
test
stc
in
fimul
inc
ss
mov
cwde
psrld
and
xlat
(bad)
int
and
loopne
push
ficom
cld
xor
in
lahf
(bad)
loop
(bad)
adc
nop
and
fbstp
inc
mov
mov
sub
fxam
cli
pushf
dec
jo
jbe
dec
cld
sbb
pop
add
xchg
inc
push
pop
lods
leave
pop
test
aam
xor
push
aas
mov
jp
and
cs
(bad)
push
setns
mov
test
and
sub
push
jg
test
add
call
add
or
adc
cmc
sti
sbb
leave
or
inc
sar
pop
aaa
jno
mov
adc
pop
mov
aas
fcom
imul
fisttp
jne
sar
popa
stc
push
push
sti
add
popa
nop
movs
iret
add
std
dec
cwde
add
push
shr
scas
push
push
add
adc
jp
mul
cmp
adc
sbb
and
mov
lock
sbb
inc
jecxz
sub
xchg
mov
xchg
in
scas
and
fcmovne
mov
cmps
inc
push
lods
mov
jmp
int
aas
xchg
add
lds
into
loope
es
sbb
les
hlt
sbb
cmp
jle
or
call
pushf
xor
mov
loope
xchg
retf
pop
into
in
out
fcomp
repnz
clc
cs
xor
jl
int3
dec
sbb
add
sub
jmp
pushw
cmp
and
es
adc
push
push
push
cmp
movs
es
fsqrt
dec
xchg
xchg
shl
imul
jnp
sbb
gs
aad
jae
jnp
fdiv
dec
fucomip
loop
lea
xor
push
inc
jecxz
imul
fs
mov
je
adc
add
sbb
dec
clc
push
push
outs
cmp
ret
test
retf
movs
loopne
xchg
mov
xor
lods
ins
inc
push
cwde
mov
pop
dec
dec
fcomp
adc
pop
cwde
lods
xchg
cmp
test
mov
loopne
or
call
movs
xor
aaa
jge
mov
mov
scas
retf
cmp
push
out
jl
push
rol
jo
dec
push
mov
add
pop
jg
fisubr
leave
mov
sub
push
aam
dec
xor
ins
dec
ins
sub
div
out
xor
push
inc
mov
daa
imul
stos
test
jmp
mov
pop
push
fsub
mov
mov
test
clc
mov
arpl
jge
or
in
arpl
cs
lods
pop
les
dec
jmp
loope
repz
imul
aaa
mov
lea
push
(bad)
ffreep
sub
mov
cmp
int
iret
sbb
fist
enter
ret
fcom
inc
mov
push
mov
(bad)
cmp
pop
scas
cmp
in
sbb
retf
pusha
xor
cs
or
repnz
mov
stos
stos
xor
xor
mov
xchg
xchg
out
test
scas
jl
cs
outs
sub
loop
add
sar
dec
adc
fistp
and
pushf
jno
jg
clc
jmp
xor
test
daa
sub
inc
jne
ins
sub
and
stc
jno
sub
mov
push
shr
call
push
dec
repnz
sti
or
pop
xchg
rcr
lock
popa
adc
test
mov
nop
cdq
loop
xor
add
pop
adc
add
inc
outs
test
repz
xor
xor
inc
pop
mov
hlt
das
xor
mov
mov
aad
pop
shr
cmps
or
mov
adc
nop
push
inc
(bad)
xor
dec
xlat
(bad)
in
rol
mov
jb
fs
or
cmp
pop
mov
(bad)
fldenv
jns
cmc
mov
push
jno
xchg
into
dec
mov
dec
mov
or
rcl
jae
cs
sbb
or
clc
or
inc
imul
into
sbb
in
mov
or
cmp
adc
aad
mov
pop
xor
test
push
adc
xor
call
pop
xchg
lea
push
daa
in
mov
adc
pop
inc
cwde
pop
clc
pop
push
inc
retf
in
dec
ins
je
add
xor
xor
add
mov
dec
cmp
call
repz
les
mov
stc
pusha
dec
dec
add
in
push
lahf
clc
fs
cmp
out
add
in
inc
rcr
jnp
and
dec
mov
inc
mov
aaa
dec
push
dec
pop
in
cmp
push
ins
jno
mov
or
into
arpl
movs
mov
pop
sub
cld
or
or
jle
and
or
in
bnd
inc
(bad)
xor
xor
jecxz
and
jnp
add
int
je
sar
cmp
bound
movs
and
aaa
dec
cmovg
jb
push
jle
in
inc
nop
jmp
sti
push
push
aas
inc
fs
shl
(bad)
sbb
fidiv
imul
mov
sbb
ss
dec
in
pop
mov
loopne
push
fst
jmp
push
adc
xchg
xor
cmp
out
ss
push
mov
push
pop
cmp
inc
aaa
cmp
std
push
call
add
pushf
mov
push
dec
sbb
pop
dec
scas
sbb
dec
mov
add
(bad)
jge
sbb
add
arpl
mov
lods
jnp
movs
xor
loopne
mov
loop
xor
add
or
push
mov
dec
mov
mov
ror
mov
loope
add
fsubr
push
cmp
iret
sub
loope
pop
jo
les
jecxz
jnp
pusha
mov
xchg
icebp
lods
cmp
or
add
push
add
fbld
jns
push
mov
xchg
adc
(bad)
gs
mov
jno
cmps
pop
loop
in
(bad)
mov
leave
dec
mov
popf
inc
ja
cmps
in
sub
dec
nop
and
mov
mov
sub
inc
rol
mov
xchg
xor
sbb
inc
lods
je
mov
xchg
ja
movs
fidiv
inc
pop
daa
sub
inc
and
lods
jbe
jnp
lods
push
rcr
push
in
in
out
stos
pop
mov
push
inc
lea
iret
imul
sar
adc
mov
pop
(bad)
jae
test
arpl
test
mov
fisttp
fdiv
inc
lock
sbb
mov
ret
dec
mov
test
sbb
out
mov
test
loope
push
push
cdq
fnstsw
sahf
pop
ja
(bad)
(bad)
popa
ret
movs
push
popf
jge
adc
test
inc
int3
nop
lods
adc
aaa
popa
in
test
repz
push
mov
in
outs
adc
dec
es
sbb
std
cmps
add
and
in
xor
ins
icebp
je
push
ror
mov
cmc
add
mov
inc
mov
call
dec
in
aad
test
add
aam
jnp
loopne
or
leave
xor
daa
push
(bad)
and
outs
mov
rcl
outs
dec
xchg
lock
stos
fs
rcr
add
dec
repnz
call
rcl
cld
loop
ja
adc
(bad)
out
push
cmp
bound
or
mov
pop
scas
push
pop
inc
dec
push
cmps
mov
adc
mov
add
lock
addr16
scas
(bad)
sti
push
bound
inc
pop
inc
add
pop
cmc
mov
cld
ror
mov
loopne
stos
or
pop
cmp
(bad)
inc
push
sub
mov
jo
sub
push
jmp
rol
xchg
scas
sbb
xchg
push
sbb
jl
mov
dec
sahf
dec
cmp
pop
test
fsub
ins
jae
icebp
test
fistp
outs
aas
adc
(bad)
mov
out
sub
jae
sub
push
mov
jns
dec
dec
adc
es
test
sahf
adc
jg
and
dec
push
push
mov
ss
dec
push
sub
scas
lahf
mov
fisttp
push
xchg
ds
(bad)
fcomp
movs
out
pop
xor
fisubr
add
out
push
or
adc
jg
mov
mov
push
adc
dec
shl
(bad)
int
rol
rep
pop
inc
add
xchg
adc
xchg
call
cmp
gs
hlt
xchg
and
inc
scas
push
push
ret
xchg
mov
retf
fnstcw
mov
inc
(bad)
cmps
shl
jo
jl
mov
scas
mov
cmp
adc
sbb
mov
mov
stos
mov
lock
dec
push
mov
test
pop
mov
stos
call
adc
pusha
sbb
sbb
xor
jle
inc
mov
aaa
mul
inc
aas
test
mov
push
sti
sti
aam
(bad)
dec
jge
cmc
lahf
mov
mov
push
cmc
and
data16
sub
adc
mov
push
push
adc
sub
push
jno
xchg
pop
cmps
clc
data16
cs
cwde
mov
jb
sub
icebp
adc
ret
in
push
sub
(bad)
add
js
pusha
clc
(bad)
adc
daa
mov
add
(bad)
dec
(bad)
xor
shl
icebp
pop
cmp
cmps
push
data16
lock
xor
pop
outs
or
add
loop
fidiv
adc
xor
ins
push
neg
sub
mov
add
idiv
jno
ret
jge
lock
sahf
jae
mov
pop
push
dec
idiv
jmp
mov
lds
outs
push
add
mov
leave
xchg
stc
ds
pop
cmp
or
adc
mov
pushf
ja
inc
adc
ror
cmp
stos
adc
imul
fdiv
mov
xchg
xor
or
loope
scas
add
mov
(bad)
jmp
jae
mov
cmp
jle
pop
movs
xor
jmp
lahf
dec
push
cmp
ret
inc
mov
adc
mov
ficomp
xchg
(bad)
adc
ds
nop
les
scas
hlt
js
xchg
sub
mov
push
mov
push
fisttp
jnp
lock
loope
sbb
sub
rcl
in
push
shl
addr16
xor
push
jbe
ror
imul
sub
fs
out
xor
(bad)
push
stos
mov
dec
test
pop
in
or
push
(bad)
loop
or
neg
mov
aas
push
jb
mov
scas
rol
aam
push
jns
sub
pushf
and
mov
push
sbb
scas
and
je
(bad)
and
out
jge
(bad)
fsubr
pushf
cmp
ret
stc
sub
fwait
adc
ret
ins
nop
mov
and
inc
je
or
cmp
push
dec
mov
mov
aas
mov
cmp
lahf
xchg
push
lock
mov
(bad)
push
pop
jecxz
adc
push
pop
jmp
aas
nop
mov
jnp
mov
mov
inc
stc
push
jg
or
std
mov
mov
rol
push
and
xchg
inc
sbb
out
jmp
or
test
mov
adc
xor
sti
aaa
or
cmp
dec
icebp
or
dec
out
push
cwde
xchg
xchg
std
inc
mov
pop
cmp
xchg
sub
mov
sub
sbb
cmps
pop
jmp
stc
movs
idiv
test
add
push
es
jmp
retf
lods
adc
pusha
push
ins
cmovge
in
xor
cmp
push
iret
dec
inc
or
jmp
neg
jo
pop
sahf
adc
push
xchg
gs
int3
je
out
pop
pusha
mov
jg
push
aaa
popf
inc
push
outs
call
mov
push
xchg
mov
mov
cmovg
pop
push
cmp
pop
out
ins
jns
sahf
sub
movs
(bad)
out
fimul
sub
call
push
int3
repnz
mov
jns
pop
inc
mov
movs
out
adc
movs
adc
or
popa
loope
adc
shl
inc
or
mov
rcr
outs
std
lods
xor
scas
retf
sti
loope
pop
sub
mov
cs
scas
push
xor
pop
imul
mov
pop
push
pop
mov
xchg
xchg
cmc
adc
aas
mov
dec
and
xchg
or
add
sbb
lds
xchg
xor
and
ret
sbb
pop
out
push
fcom
xlat
push
sbb
cmp
jae
hlt
cmp
cmps
ins
movs
jbe
adc
call
push
test
cs
(bad)
jl
popf
pop
push
pop
cmp
push
scas
mov
cmp
push
ficomp
je
loop
or
popf
or
pop
push
lods
inc
and
mov
in
addr16
mov
ds
jp
jge
hlt
iret
shl
popf
add
movs
pop
lahf
lock
inc
cwde
test
call
cmp
in
sar
sub
in
sbb
jp
fidiv
cmp
ins
jae
aaa
les
hlt
sti
out
fwait
xor
jns
movs
scas
add
inc
jno
pop
and
fwait
or
dec
inc
inc
inc
cmps
sbb
jg
fs
(bad)
mov
sub
fld
inc
mov
jno
(bad)
fnstsw
outs
and
xor
ins
push
adc
and
jl
aad
push
imul
ins
lahf
and
(bad)
cmps
lods
push
mov
mov
or
fcmovnb
and
mov
sub
mov
push
imul
and
movs
mov
movs
mov
in
cmp
sbb
sbb
repnz
sbb
div
in
cmps
sbb
xchg
enter
sub
push
adc
idiv
jg
push
cmp
mul
das
xor
aam
jno
cmp
mov
inc
scas
aaa
or
shl
arpl
into
jecxz
cdq
add
xor
jecxz
adc
mov
mov
std
stos
std
cmc
int3
jmp
jp
xchg
cmps
neg
(bad)
and
loopne
and
xchg
stos
push
add
rcl
sti
jle
add
stc
xchg
ret
jmp
fist
dec
or
xchg
xor
popa
dec
dec
test
lods
in
out
cmps
sub
adc
mov
inc
mov
js
imul
neg
cmp
pop
jge
inc
test
add
xchg
push
addr16
scas
cmp
dec
lock
icebp
aaa
jp
es
mov
cmp
mov
out
ins
mov
and
fimul
pop
not
jb
stos
mov
nop
push
int3
xor
dec
pop
inc
out
fisubr
into
aad
sub
fbld
jb
xor
jmp
(bad)
xchg
les
add
mov
mov
or
xchg
dec
pop
sahf
int3
xor
jmp
jnp
xchg
out
lods
les
ins
or
xchg
xchg
movs
add
and
mov
out
outs
cmp
sahf
xor
clc
lods
mov
mov
jne
mov
add
jmp
in
das
out
push
js
mov
and
in
mov
shl
pop
pusha
mov
lea
xchg
jecxz
mov
in
sbb
test
(bad)
in
xchg
test
jmp
daa
or
xchg
enter
imul
and
aaa
xchg
mov
mov
add
mov
mov
fsub
mov
rcl
mov
ret
gs
cli
mov
add
gs
xchg
or
lock
mov
pusha
push
jecxz
movs
cdq
retf
inc
sbb
cmps
mov
adc
cmc
mov
mov
jb
inc
les
add
imul
xchg
mov
mov
cmp
mov
js
and
enter
sbb
leave
clc
sub
pop
mov
pop
xor
add
adc
cmps
leave
sub
mov
push
push
popf
mov
xchg
cmps
movs
lds
push
jns
pusha
(bad)
pop
add
mov
push
push
stos
sub
adc
and
iret
sub
int3
and
sub
(bad)
jnp
in
mov
jae
fst
je
xlat
out
xchg
add
cmc
outs
(bad)
loop
xor
pop
xor
jecxz
movs
out
add
mov
and
mov
retf
xchg
mov
inc
pusha
repz
in
xchg
or
hlt
sub
out
mov
fstp
je
mov
cmp
fwait
mov
adc
dec
test
ds
in
sahf
retf
or
das
je
xor
jo
pop
dec
or
cs
cmp
pop
push
pop
in
and
hlt
and
adc
dec
arpl
jg
cmps
jns
test
popf
ror
mov
enter
push
sbb
dec
mov
in
add
inc
inc
into
xchg
sbb
cli
and
ficomp
mov
out
sbb
jmp
push
cdq
pop
or
jp
xor
inc
pop
retf
xchg
mov
cmc
mov
outs
adc
and
sub
cmps
repz
xchg
xchg
adc
cmc
dec
retf
push
fs
gs
cmp
fistp
sbb
push
(bad)
or
movs
jo
mov
inc
adc
sbb
mov
inc
loope
je
fcmovne
xchg
stos
pop
jnp
or
or
aam
sub
jecxz
pop
lods
jmp
fwait
or
ins
push
lahf
push
xor
shl
ret
sub
int3
ins
push
stos
mov
xor
cmp
mov
sbb
sub
dec
cwde
inc
mov
push
push
int3
jg
xchg
leave
(bad)
push
sar
popf
mov
arpl
xchg
stc
ret
fisub
ins
dec
mov
es
das
into
popf
cmp
mov
xor
jns
adc
pop
mov
jbe
push
adc
and
adc
outs
cmp
int3
icebp
cmp
and
cmp
add
test
fidiv
cli
mov
xchg
cmp
mov
and
and
test
push
sub
clc
loopne
jp
cs
cmp
nop
push
rcl
and
mov
outs
mov
add
xor
xlat
aam
dec
imul
jbe
jecxz
jne
adc
fnstenv
dec
fisubr
movs
(bad)
pshufw
(bad)
jge
in
stos
mov
(bad)
xlat
movs
add
fucomi
inc
xor
jnp
sub
test
out
aaa
data16
ins
jne
mov
sbb
sahf
imul
sub
mov
xor
dec
add
add
dec
add
sbb
ss
jbe
mov
fdivr
fisttp
(bad)
pop
sahf
aad
push
xor
jbe
adc
stos
push
fmul
mov
scas
dec
jo
xchg
push
daa
and
jmp
xchg
xor
(bad)
pop
push
movs
dec
sub
jbe
push
mov
push
xchg
pushf
ds
shr
jp
sbb
jno
lock
dec
add
fwait
js
(bad)
aas
jnp
inc
fs
js
or
xchg
pop
clc
sub
out
fbstp
imul
idiv
pop
jnp
pop
test
cwde
add
rcr
mov
xchg
stc
push
clc
shr
int
dec
je
imul
sbb
jge
cmp
dec
je
pop
mov
retf
inc
(bad)
push
cmp
outs
add
outs
sbb
popf
or
mov
inc
test
retf
dec
xchg
call
jle
mov
adc
jmp
mov
(bad)
addr16
pop
popa
push
aas
popa
ficomp
(bad)
hlt
mov
pop
sahf
jb
out
adc
jbe
adc
mov
xor
cmps
retf
jbe
dec
mov
sub
or
in
(bad)
sbb
and
xchg
mov
pop
outs
cmp
sub
add
mov
or
xchg
out
xchg
push
ror
outs
add
sub
pop
cmp
sub
xchg
adc
jnp
loope
shl
test
and
pop
(bad)
jl
hlt
scas
cmp
fisub
push
push
call
test
repnz
mov
sbb
cs
inc
jmp
retf
pop
jle
stos
dec
test
stc
call
hlt
(bad)
mov
sbb
lods
jecxz
(bad)
lds
jnp
xchg
push
int
cld
or
or
icebp
or
stc
out
fbstp
xchg
sub
dec
das
addr16
sbb
and
test
push
push
mov
xchg
dec
push
xchg
mov
push
stos
mov
pop
(bad)
cmc
xchg
outs
mov
xchg
inc
cdq
test
pop
fs
xchg
mov
or
fwait
loope
fiadd
call
jns
pop
mov
clc
mov
mov
cdq
imul
mov
dec
dec
push
xchg
stc
fldenv
jns
xor
ins
loop
cmp
scas
(bad)
jmp
mov
mov
(bad)
push
bound
push
xchg
xchg
retf
popf
ins
daa
jecxz
mov
push
test
push
(bad)
inc
add
sub
cmps
fist
mov
push
scas
push
mov
xchg
call
arpl
fidiv
or
adc
pop
dec
sub
and
xchg
lods
daa
inc
xchg
std
xlat
push
je
fldenv
loopne
push
cmps
jg
xlat
shr
sub
mov
or
cmps
das
clc
pop
(bad)
aam
nop
cmps
pop
in
lods
xchg
enter
inc
mov
push
xchg
jcxz
mov
icebp
dec
inc
in
adc
inc
stc
dec
add
sbb
imul
fist
mov
repnz
lahf
mov
pusha
mov
out
test
mov
sub
sbb
mov
adc
test
add
cmp
adc
sbb
mov
mov
mov
jmp
and
add
sbb
movs
mov
jbe
mov
leave
int
stc
jbe
out
or
dec
retf
cmp
fcmovnu
std
movs
scas
mov
inc
fild
test
out
lahf
lods
mov
rcr
loope
jne
lods
push
inc
ret
sbb
test
push
bound
push
cmp
leave
lods
xchg
or
fwait
data16
mov
cmps
not
and
jb
inc
out
ss
pop
loopne
scas
(bad)
sar
repnz
add
and
dec
test
sub
sub
loop
mov
in
gs
or
inc
add
mov
cmps
es
pextrw
lea
rcl
pop
cli
out
clc
cdq
cmc
fbstp
ret
push
mov
loope
sub
push
mov
jl
sbb
loope
mov
lahf
inc
movs
mov
(bad)
sbb
fwait
daa
xor
mov
push
in
dec
or
xchg
sub
cmp
pop
pop
scas
sbb
rol
push
les
xor
gs
(bad)
shl
cld
jmp
cmp
pop
sub
mov
xchg
add
or
dec
xchg
mov
imul
jge
jb
inc
adc
sbb
nop
xchg
test
or
sub
push
cmps
and
pause
pop
bound
scas
scas
jecxz
inc
out
pushf
les
xor
cmp
cmp
mov
aam
sub
test
popf
ret
(bad)
jo
sti
mov
jno
enter
test
in
jecxz
mov
or
or
lahf
mov
mov
enter
push
cmps
repz
loopne
lds
iret
(bad)
jae
push
out
pop
(bad)
fmul
lahf
adc
mov
sbb
outs
les
mov
imul
div
mov
xchg
jae
ins
and
mov
cld
and
xor
imul
xchg
jge
retf
xor
or
sar
and
lock
sbb
fwait
scas
add
js
jmp
into
mov
fisub
xor
sub
cld
or
repz
repz
inc
ins
test
es
imul
sub
mov
push
int3
arpl
dec
mov
xchg
jp
pop
lods
add
push
inc
jecxz
je
(bad)
pop
sti
inc
(bad)
cmp
cmp
adc
xor
cmp
mov
(bad)
enter
gs
dec
xor
pop
pop
pushf
icebp
xor
jae
jp
sub
in
pop
xchg
inc
push
(bad)
in
jle
push
dec
das
je
fstp
cmps
fdivr
hlt
dec
cs
jmp
movs
mov
not
ss
inc
in
mov
call
lds
pop
xchg
pop
out
test
sbb
dec
mov
push
bound
dec
in
mov
pop
push
aas
adc
ret
lods
adc
add
enter
popf
or
sbb
push
mov
and
dec
rcl
mov
test
and
rcr
push
cmp
mov
aaa
mov
xchg
dec
daa
jge
retf
dec
and
dec
jmp
jp
push
lods
pop
cmps
shl
adc
cmp
jecxz
jne
dec
repnz
and
or
(bad)
js
jl
cld
rcr
arpl
cmps
jmp
(bad)
sti
mov
fld
popf
pop
stos
aad
push
mov
mov
and
inc
ins
cli
push
fnstcw
and
lods
call
sbb
inc
push
cmp
sub
ror
cmp
push
fbld
nop
mov
in
adc
cmps
push
(bad)
outs
out
xor
adc
out
and
jge
adc
pusha
(bad)
lahf
inc
retf
xchg
cdq
jmp
or
nop
lea
les
stos
loopne
or
push
scas
movs
dec
sahf
mov
sub
mov
ret
cs
leave
out
dec
jnp
dec
and
sbb
outs
ja
xor
inc
rep
idiv
jnp
popa
retf
(bad)
cld
dec
add
add
loop
fwait
out
sahf
lahf
cmp
xor
jns
pop
leave
mov
and
sbb
(bad)
cli
jp
pop
jnp
test
es
push
loope
inc
xlat
sahf
mov
mov
test
and
test
loop
and
dec
add
int3
adc
cmp
pop
lds
pop
stos
movs
lea
imul
pop
sbb
gs
shl
and
mov
lds
or
les
test
icebp
push
add
std
xor
and
adc
push
jnp
fidivr
inc
jmp
call
ja
sbb
inc
jmp
adc
jg
fcom
int
lock
jno
out
repnz
mov
xchg
ret
std
sbb
inc
cmps
lods
push
jne
inc
mov
shr
cmps
fisub
inc
cld
push
aas
stos
fisttp
mov
dec
add
xchg
inc
xchg
mov
pop
inc
loope
fsubr
out
mov
mov
xchg
sub
retf
pop
xlat
hlt
pop
mov
inc
pop
dec
dec
repnz
ins
out
mov
cli
retf
push
and
(bad)
ins
outs
dec
push
mov
pop
jp
retf
ja
inc
ret
adc
or
dec
cmp
jge
test
jns
mov
push
cmps
aas
sar
mov
jne
shl
js
xchg
or
pusha
rcl
sti
rol
in
jno
cwde
cmp
mov
fsub
mov
jge
aad
bound
push
jp
xchg
cmp
mov
sub
cmc
or
mov
push
jo
sbb
das
setae
scas
imul
push
mov
push
adc
pop
addr16
mov
xchg
aaa
xor
xor
sahf
(bad)
inc
dec
sub
fwait
push
ror
adc
add
ss
dec
inc
test
adc
js
jge
ret
jle
movs
or
pop
pusha
jae
cmp
test
sbb
jo
jno
rcl
xchg
mov
jo
lods
hlt
sar
jne
push
xchg
fwait
scas
push
scas
iret
and
clc
shl
in
cmp
mov
xchg
xchg
xchg
fst
rcl
and
aas
pop
(bad)
fisub
js
push
arpl
cmp
cmp
inc
fisttp
dec
cmp
addr16
mov
mov
hlt
outs
arpl
sbb
push
jnp
pushf
or
imul
add
xchg
sar
iret
xchg
xchg
aas
push
sbb
movs
cmp
arpl
retf
and
int3
ins
jmp
mov
sub
mov
aas
push
outs
xor
adc
or
scas
iret
push
dec
inc
xor
pop
cwde
jg
in
fbld
pop
int3
in
mov
jo
out
test
mov
aad
or
pop
call
xchg
fsub
push
mov
sar
fs
sbb
sbb
aam
iret
sub
dec
mov
loope
jecxz
pop
shufps
aam
leave
mov
jo
rdpmc
mov
scas
jae
je
sar
xor
xor
ja
jbe
adc
dec
pusha
ror
aas
cmp
dec
ds
jmp
xor
push
dec
les
shl
movs
call
adc
stos
push
ret
in
push
loopne
jp
or
push
xor
fsubr
mov
xchg
push
aas
jg
in
jns
out
icebp
jno
icebp
mov
fsub
retf
data16
mov
loope
jg
mov
rcr
clc
jae
fcom
sbb
stos
pop
push
inc
stos
(bad)
(bad)
sub
div
inc
xchg
(bad)
inc
js
or
ret
loopne
or
push
fisttp
cmp
sbb
jno
sbb
pop
dec
cmc
xchg
int3
pop
mov
call
xor
scas
xor
not
fisubr
mov
xor
mov
or
sahf
rcl
xchg
xchg
sub
adc
sbb
dec
gs
jmp
movs
dec
in
cdq
dec
loop
adc
out
dec
jo
mov
add
psrlq
imul
cmc
dec
daa
jg
dec
xor
(bad)
sti
mov
and
fwait
mov
mov
xchg
cld
or
push
xor
emms
pop
frstor
xchg
mov
das
int
cwde
xlat
mov
in
fs
fs
test
icebp
add
dec
(bad)
movs
outs
push
cwde
sub
aaa
enter
pop
sar
add
pop
repnz
push
mov
push
test
lock
pop
jl
pusha
loop
mov
lds
mov
cli
inc
sub
inc
jmp
rol
ins
ret
dec
test
repnz
jb
xor
cmp
mov
xchg
ret
pusha
mov
cmp
mov
jle
rcl
call
int
mov
xchg
rol
adc
push
fild
jmp
retf
fwait
es
add
enter
fnstenv
add
das
ret
or
(bad)
out
adc
cwde
ins
mov
rol
add
inc
dec
es
push
pop
sbb
in
leave
gs
push
xlat
stc
lods
stc
call
and
dec
inc
aas
xchg
sbb
in
add
retf
or
(bad)
xchg
cmp
bnd
inc
pop
push
add
jmp
cmp
push
js
mov
(bad)
pop
scas
inc
xchg
pop
jne
inc
cli
imul
popf
fisubr
push
popa
call
js
and
ror
inc
jo
loope
rol
or
aam
fwait
std
in
cmp
fstp
jle
jle
jbe
or
out
bound
(bad)
sbb
sbb
inc
and
out
mov
loop
and
mov
pop
cmps
jecxz
popf
dec
add
push
sub
movs
adc
stos
push
(bad)
imul
pop
test
cld
cwde
push
dec
mov
ins
add
sbb
xchg
fsubr
leave
mov
ficomp
mov
jg
movs
(bad)
and
push
outs
leave
pop
sar
mov
sar
xchg
in
lahf
jno
mov
mov
aad
mov
shl
nop
push
add
xchg
mov
inc
xchg
inc
or
jmp
(bad)
pushf
cmps
sub
clc
(bad)
add
add
popa
test
jle
add
inc
rcl
popf
lock
imul
jns
mov
mov
imul
(bad)
(bad)
adc
or
into
addr16
push
imul
into
bound
retf
mov
mov
xchg
mov
or
cmp
or
xor
jmp
sbb
popa
shr
cmps
data16
pop
xchg
xchg
fstp
or
je
out
mov
mov
cli
xor
fcmovnbe
push
ret
xchg
or
mov
xchg
ret
cmp
fiadd
or
mov
cli
and
cmp
(bad)
pop
call
ins
les
cld
dec
mov
sbb
aaa
push
in
mov
push
xor
and
add
(bad)
int
xchg
outs
retf
ficomp
push
daa
mov
inc
rcr
adc
mov
cmp
push
mul
pop
inc
dec
shr
or
jne
or
popf
fimul
push
xlat
jmp
add
push
mov
fild
pop
adc
movs
push
repz
cwde
push
or
cmp
lods
pop
dec
or
neg
xor
lea
call
xor
(bad)
fimul
dec
out
inc
mov
into
mov
mov
cli
fptan
push
ins
fwait
mov
aaa
dec
popf
sti
je
jne
cdq
ss
mov
div
mov
test
retf
and
inc
sar
xchg
sub
jnp
dec
aam
xor
and
imul
mov
sbb
movs
add
pop
cmp
push
mov
xor
je
inc
sti
xchg
xchg
and
cmp
push
mov
xchg
int
ret
lds
shl
add
pop
mov
pop
adc
push
out
xor
sbb
not
iret
mov
or
int
pop
mov
bnd
dec
pop
mov
icebp
mov
test
ror
dec
bnd
push
icebp
mov
daa
repnz
sub
mov
mov
mov
mov
sbb
pop
mov
xlat
mov
addr16
pop
mov
pop
jmp
cld
and
mov
pop
add
sbb
stc
jge
xchg
xor
call
sub
scas
cli
test
pop
stos
rcl
pop
imul
jae
mov
(bad)
std
adc
xor
sti
(bad)
sahf
pop
pop
mov
sub
sbb
dec
and
fidiv
icebp
jns
pop
jp
xor
pushf
xor
ret
sbb
icebp
and
pop
sbb
mov
push
popa
cdq
add
mov
jae
mov
fistp
sub
dec
inc
xchg
xchg
cli
fdivr
pop
push
in
ds
faddp
stc
out
call
pop
f2xm1
pop
mov
jnp
mov
xchg
push
or
es
dec
scas
xchg
cmp
sub
xor
loop
mov
mov
jecxz
mov
adc
pop
mov
popf
(bad)
out
clc
mov
mov
daa
nop
jge
add
and
push
loop
mov
push
xor
ins
mov
push
xor
inc
jae
mov
or
mov
and
jl
addr16
out
mov
test
retf
sbb
mov
xlat
cwde
pop
mov
lahf
(bad)
icebp
popf
stos
inc
sub
mov
mov
pop
les
mov
push
sbb
mov
ficomp
mov
rcl
or
dec
(bad)
rol
or
mov
in
or
add
jecxz
sub
mov
retf
retf
jb
lahf
movs
xchg
push
cmp
pop
addr16
bound
shr
jmp
fnstcw
and
(bad)
out
icebp
sub
gs
dec
ins
outs
js
enter
sbb
loope
sbb
push
jge
pop
lea
xor
mov
sub
dec
jno
jbe
je
ss
add
pop
pop
sbb
into
jmp
cmp
add
jl
cmps
mov
movs
add
cmp
mov
adc
int
cwde
in
repnz
and
out
push
cmp
mov
cli
shl
retf
xchg
out
xor
push
sub
push
push
mov
loope
sbb
mov
sub
ds
lahf
push
dec
nop
sar
ret
imul
scas
data16
mov
cmp
movs
outs
jmp
or
push
jmp
rol
cmp
outs
mov
mov
xor
inc
fdiv
mov
jl
sti
movs
mov
mov
test
sub
mov
jmp
jno
inc
add
dec
xor
add
jns
inc
sahf
pop
jge
iret
mov
(bad)
sub
dec
xor
dec
call
xor
movs
addr16
and
push
cmp
xor
sar
pop
adc
call
dec
pop
xchg
inc
ds
(bad)
jp
pop
sti
outs
ret
aam
idiv
sti
pop
and
test
inc
push
jno
scas
fcom
mov
jp
push
xor
sub
sbb
pop
fcom
mov
daa
pop
jle
mov
aam
push
aaa
inc
out
and
rol
cmc
rcl
sub
loopne
add
pop
enter
cmp
cdq
retf
sbb
mov
rcr
dec
arpl
mov
aas
(bad)
(bad)
sub
lock
sbb
sub
inc
mov
cmp
inc
mov
adc
inc
mov
xor
cld
pop
cmp
jg
pop
dec
pop
dec
xor
pop
clc
push
(bad)
mov
test
test
jnp
push
aaa
dec
jecxz
shr
sti
sub
icebp
pop
add
xor
pop
push
mov
push
mov
loop
inc
dec
mov
jnp
bound
pop
ret
loope
pop
add
and
xor
sub
sti
jno
or
imul
mov
test
ret
mov
push
mov
(bad)
mov
stos
fdivp
inc
xchg
jmp
pop
enter
xchg
test
rcr
sbb
imul
or
lds
dec
and
inc
enter
inc
(bad)
xor
inc
les
sbb
push
jo
int3
rcr
out
adc
jp
ins
pop
jo
loopne
icebp
adc
lods
ja
fs
mov
pop
out
xchg
int3
jnp
stos
pop
(bad)
enter
mov
pop
mov
ss
fldcw
sbb
jb
dec
jns
fisubr
push
push
iret
push
and
ret
push
and
xlat
iret
rcl
jne
stos
jmp
fsubr
add
sub
jp
popf
inc
xor
bound
sub
adc
cmps
jo
and
adc
in
cmp
rcl
ins
adc
out
lods
mov
dec
les
lahf
ds
hlt
and
int
rcr
jl
cmp
cdq
mov
fcom
icebp
sbb
xor
adc
mov
je
mov
aaa
repz
mov
xchg
fmulp
dec
lea
sub
mov
iret
mov
jno
mov
xor
scas
popf
pop
sbb
and
icebp
das
cdq
or
not
test
outs
(bad)
test
test
cmp
jo
repz
es
repz
jne
jb
in
push
xchg
mov
and
mov
scas
lds
xor
xor
in
add
out
aam
adc
push
lahf
outs
je
mov
push
mov
inc
arpl
mov
icebp
push
mov
lds
pushf
lds
inc
xor
enter
dec
es
push
and
fcom
test
(bad)
jge
pop
pop
mov
jl
xlat
adc
inc
ficomp
dec
pop
pop
adc
add
push
inc
scas
jne
out
retf
std
call
shl
repnz
or
ins
push
pop
inc
inc
push
sahf
iret
jne
loope
mov
cli
xchg
jo
inc
in
fstp
push
repz
jp
call
mov
mov
pop
mov
or
shl
push
or
push
and
enter
lea
aad
mov
or
sahf
xchg
test
(bad)
cs
sub
pop
dec
ret
and
mov
movs
stos
gs
pop
pushf
mov
repz
mov
sbb
inc
xchg
sbb
lods
aam
loopne
jns
inc
pause
and
lock
std
mov
or
or
xor
xor
xchg
xchg
ins
cli
repz
mov
fdiv
dec
aas
lods
inc
dec
test
repz
icebp
cmps
fld
cmps
add
mov
mov
dec
push
xor
push
xor
pop
out
mov
js
stc
loop
xor
and
lods
sub
lods
mov
push
jmp
das
std
mov
iret
mov
out
mov
out
pushf
pop
xchg
mov
mov
fld
ret
pop
push
in
jg
add
ret
push
ret
jnp
mov
xor
mov
dec
daa
and
mov
xor
pop
lods
(bad)
in
jmp
dec
inc
cs
pusha
adc
fsubr
bnd
and
ds
push
inc
data16
jne
mov
aad
jl
jne
push
fsubr
push
pop
push
stos
das
jmp
loope
aam
jecxz
cmps
dec
loope
push
mov
mov
gs
daa
dec
and
jbe
xlat
lahf
jle
div
std
xchg
in
adc
xchg
sub
jp
mov
sub
popf
or
jmp
mov
lods
repnz
repz
ins
cmps
je
cmp
push
mov
sar
out
ins
stc
xchg
cs
aas
pop
repz
ret
inc
xor
push
add
mov
push
(bad)
stc
or
or
xchg
movs
and
push
(bad)
cld
leave
add
mov
push
mov
push
jne
add
retf
mov
sub
push
inc
or
mov
sbb
cs
push
xor
into
mov
mov
imul
out
add
(bad)
add
in
pop
out
cdq
xchg
jo
loopne
out
mov
ins
in
stos
dec
sub
mov
jo
fwait
cmc
push
jmp
dec
in
sbb
retf
inc
repz
xchg
add
or
mov
and
mov
push
int
push
rcl
data16
int3
and
pushw
data16
scas
xchg
jmp
fdivr
cld
fs
into
pop
mov
or
fcmovu
shl
sete
out
xor
adc
fsubr
mov
jno
div
daa
(bad)
mov
jmp
jp
push
pop
push
lds
lahf
jno
pusha
(bad)
ds
mov
(bad)
sub
fcom
mul
test
xchg
shr
out
cmp
aad
scas
ret
inc
ds
adc
mov
lea
cs
ds
adc
dec
jecxz
and
dec
ror
adc
jle
add
stos
mov
jle
add
push
sub
push
stos
dec
(bad)
xchg
add
ins
jecxz
jge
js
jg
into
push
cmp
cmps
dec
je
pop
call
in
push
inc
jnp
mov
sahf
lahf
or
pop
jl
ret
push
(bad)
mov
inc
inc
ins
sbb
retf
in
adc
fs
out
ds
mov
jno
in
fsubrp
aad
ficomp
outs
loope
push
in
repnz
or
cld
dec
fnstcw
into
mov
jle
dec
sahf
(bad)
pop
icebp
push
adc
sub
sahf
push
mov
add
(bad)
inc
daa
or
(bad)
mov
stos
std
pop
or
jne
mov
and
stos
or
js
and
or
dec
and
mov
sub
into
xor
clc
les
sbb
out
(bad)
jno
push
fs
aas
cmps
jle
fwait
out
mov
repz
push
jnp
cmc
aam
ss
cmp
mov
shl
xor
mov
(bad)
ds
push
shl
ins
fs
test
mov
ds
les
mov
pop
cmp
mov
xchg
dec
cmp
push
mov
retf
int
and
dec
dec
cs
or
sbb
sub
dec
jo
fadd
inc
clc
sbb
dec
lock
les
inc
push
movs
sbb
push
outs
sub
stos
dec
sbb
dec
es
xor
add
in
jg
jne
dec
aad
hlt
(bad)
xchg
jnp
nop
loop
test
pop
jp
out
and
add
cwde
or
mov
mov
and
(bad)
aaa
adc
dec
mov
xchg
aaa
push
lock
dec
enter
cmp
daa
lea
fld
jg
and
pushf
pop
aas
into
xchg
sub
mov
or
xchg
gs
outs
inc
mov
int3
add
lahf
dec
ja
rcl
xor
inc
les
pop
movs
mov
adc
pop
jbe
sbb
xchg
xor
xor
(bad)
aad
and
(bad)
movs
add
mov
das
mov
sbb
and
push
sub
(bad)
in
mov
or
int3
imul
je
adc
test
repz
mov
adc
js
pop
sub
mov
push
clc
mov
jp
les
div
cmps
not
dec
xchg
cmp
mov
imul
not
mov
fistp
and
mov
into
and
push
push
push
xchg
rol
inc
iret
arpl
mov
or
scas
ror
out
adc
xor
mov
adc
int3
push
cmps
test
jp
pop
add
jg
inc
dec
and
cdq
and
sbb
cmp
outs
cmps
rcl
leave
push
mov
cmps
dec
ret
(bad)
(bad)
pop
pushf
or
or
adc
mov
push
or
xchg
cmp
add
pop
sbb
aaa
mov
jnp
or
jp
outs
popa
call
mov
enter
add
adc
cmp
in
sbb
sar
js
ja
xchg
or
jge
jge
mov
cmp
repnz
movs
sahf
pop
cld
push
xchg
jle
js
push
stc
(bad)
dec
outs
sahf
aam
nop
lahf
or
push
in
ja
jnp
sub
mov
shr
ret
fwait
jmp
aaa
push
xlat
les
lock
lods
dec
push
sub
or
or
sub
or
dec
sub
adc
imul
ret
dec
daa
pop
sub
gs
popf
daa
mov
push
and
aaa
or
setg
loop
mov
push
std
or
imul
pop
cs
mov
and
rcr
add
ins
sub
ss
nop
mov
or
jmp
scas
in
shr
dec
xchg
mov
in
or
nop
push
and
mov
mov
xor
cmp
mov
fild
js
stos
int3
jb
mul
cmc
pushf
(bad)
xchg
mov
inc
pop
int
sahf
pop
xchg
cdq
push
pusha
xor
push
mov
(bad)
pop
lock
into
mov
inc
jno
mov
sbb
sbb
sbb
imul
mov
jmp
or
xor
cmps
ret
sahf
adc
mov
adc
jmp
xor
sbb
test
aas
push
or
(bad)
les
cld
call
in
pop
sub
xchg
jns
adc
addr16
cmp
(bad)
sub
test
xlat
add
frstor
mov
pop
lea
push
cmc
mov
mov
mov
cmc
lods
ja
add
sub
mov
fild
call
pop
iret
adc
or
aad
or
scas
mov
or
adc
fucomi
mov
jo
push
push
ja
adc
sub
xchg
fsub
inc
ss
test
dec
pop
dec
xchg
and
movs
fnstcw
mov
inc
pop
fcomp
frstpm(287
jae
adc
inc
add
xchg
cmc
xchg
ror
retf
push
jl
jbe
ins
mov
inc
jecxz
or
imul
sub
inc
test
sub
jae
loope
jle
add
arpl
xor
jno
ret
in
and
sub
inc
cmp
sub
punpcklbw
(bad)
aas
je
icebp
sbb
leave
sub
xchg
and
aam
or
xor
dec
stos
push
sar
ds
or
je
stos
lea
adc
inc
jb
jmp
jp
(bad)
sub
in
sbb
and
stos
lea
into
xchg
jnp
std
push
int3
sbb
into
(bad)
fcomp
cmc
push
leave
repnz
add
fmul
scas
fild
jl
imul
pop
or
sbb
addr16
int
cmp
outs
sbb
cmps
push
daa
clc
pop
push
mov
enter
div
xchg
das
cmp
jp
js
dec
fucomi
retf
call
inc
cmp
adc
rcr
ja
fadd
fbstp
jle
out
ror
push
cs
xchg
mov
xor
add
pop
aaa
or
adc
xor
cld
adc
aas
fs
push
test
stos
xchg
fcomp
add
push
mov
arpl
ins
aam
shr
pop
fild
sbb
jo
lahf
minps
into
outs
shr
push
sub
push
mov
xor
inc
sub
test
aaa
or
xor
push
lahf
fidivr
sub
pop
jno
cdq
leave
and
push
jmp
and
out
jecxz
mov
shl
les
xchg
aad
push
ss
mov
jo
jmp
dec
aam
xor
add
add
xlat
out
stc
cmp
mov
adc
mov
je
or
mov
in
je
sub
ret
cmps
sbb
enter
add
mov
cmp
and
call
mov
aaa
or
iret
out
sub
out
hlt
mov
push
out
in
add
mov
push
in
pop
inc
lods
ss
mov
mov
movs
sub
mov
inc
imul
add
fwait
imul
sbb
std
inc
lods
add
pop
adc
cld
ins
jbe
xor
and
pusha
inc
sub
rcl
sub
add
imul
call
test
mov
adc
push
sahf
je
ds
cmp
(bad)
loopne
xlat
mov
test
jbe
xchg
pushf
lea
arpl
push
test
movs
sub
mov
or
jmp
cmp
in
dec
test
mov
mov
and
das
adc
scas
mov
pop
cmp
cmps
jp
stc
sbb
inc
xchg
(bad)
(bad)
movs
rep
aad
push
scas
test
sub
popf
in
pop
xchg
arpl
cmps
hlt
adc
mov
sub
icebp
pop
jmp
mov
mov
and
jnp
xor
add
jle
outs
stos
adc
pusha
xor
push
lock
mov
jne
sub
cld
push
xor
(bad)
pop
shr
pop
call
in
es
in
or
sbb
idiv
mov
mov
mov
in
and
xchg
mov
shl
mov
pop
jb
hlt
or
dec
sbb
loop
repnz
cmps
dec
cli
in
push
stc
cmp
lods
sub
pop
xchg
inc
loopne
test
popf
cld
and
and
mov
xchg
mov
lds
mov
pop
dec
cmp
ins
(bad)
sub
cmp
pop
stos
stos
lock
cmps
stos
push
out
mov
cmp
mov
mov
into
dec
in
sub
xlat
push
test
into
shr
test
inc
movs
mov
icebp
or
retf
fdivp
inc
nop
sub
fs
arpl
lock
mul
loope
pop
or
es
push
repnz
mov
pop
pop
test
imul
aad
aas
aam
lock
add
pop
adc
out
or
or
xchg
mov
cmp
dec
dec
clc
adc
fld
pop
inc
dec
or
ja
sbb
inc
xchg
mov
jp
push
out
outs
jmp
aaa
js
jecxz
push
jbe
mov
lods
xor
xor
mov
adc
loope
jae
xor
retf
(bad)
add
jnp
lea
ficomp
mov
xchg
clc
jp
push
loop
call
mov
int3
inc
mov
mov
inc
cwde
dec
xor
rcl
(bad)
ret
add
push
stc
mov
pop
sti
dec
pop
xchg
loope
and
sbb
pop
add
icebp
sub
shr
addr16
cmps
mov
sub
ficom
outs
pop
pop
lods
enter
std
test
sub
pusha
movups
nop
adc
bswap
sti
(bad)
hlt
sahf
shl
xchg
rcl
pop
xor
ins
add
jmp
call
data16
push
pop
xor
jmp
mov
cld
pop
push
aad
mov
push
mov
push
dec
test
stc
aam
add
outs
add
out
aas
mov
xchg
cmp
jbe
movs
loope
(bad)
lea
das
sub
dec
(bad)
xor
mov
push
repnz
dec
pop
in
dec
sti
xlat
ins
mov
das
cmp
test
push
sbb
(bad)
arpl
outs
cmp
mov
enter
jmp
addr16
ins
ret
dec
movs
sahf
(bad)
sbb
imul
in
xchg
out
fiadd
in
jmp
pop
jmp
add
jecxz
inc
sbb
add
test
inc
jmp
push
scas
mov
pop
mov
dec
pop
call
xor
add
sbb
imul
aas
add
sti
adc
repnz
repnz
cdq
push
leave
cli
sbb
jne
popa
pushf
(bad)
leave
inc
fiadd
adc
adc
sbb
fst
gs
xor
ins
xchg
mov
lods
stc
ret
fwait
mov
rol
inc
ret
mov
lea
and
pop
add
sub
data16
test
jmp
out
shr
xor
sub
ror
jecxz
fisubr
push
ds
ds
cmps
adc
sbb
div
and
ins
fld
or
in
int3
jno
iret
cmp
movs
inc
imul
ins
push
xchg
fwait
mov
in
jno
stc
in
(bad)
cmps
in
mov
aaa
push
push
lds
lahf
cmp
inc
ss
(bad)
dec
pop
fistp
(bad)
add
xor
cmp
fsub
sub
dec
loope
cmp
jns
les
mov
dec
jbe
jnp
in
fnstcw
sub
push
(bad)
(bad)
mov
ins
fcom
enter
dec
fucomi
pop
and
push
xor
loope
test
shl
xchg
pop
lods
xor
sbb
xchg
stc
jo
sbb
fmul
jbe
mov
mov
cwde
fimul
add
jo
push
pushf
push
lds
xchg
stos
inc
shr
mov
push
sub
jge
add
or
cmp
movs
retf
test
retf
mov
iret
mul
mov
loop
mov
inc
out
lea
push
fcomp
mov
mov
push
or
sbb
lods
clc
add
outs
dec
push
jae
sbb
in
dec
cmp
not
daa
fs
leave
pop
mov
sbb
and
fisttp
popf
xor
push
mov
xor
dec
dec
xor
push
test
stc
pushf
xchg
lahf
lock
dec
lods
fcmovnu
call
imul
fwait
or
(bad)
xor
pop
push
mov
imul
test
cmp
(bad)
and
mov
jno
out
es
jmp
ficom
push
push
jb
pusha
or
pop
retf
daa
xchg
or
jge
mov
shr
les
aam
icebp
mov
push
(bad)
popf
ds
mov
xchg
xor
xor
add
cli
inc
add
mov
mov
pop
popa
dec
pop
push
cmp
or
pop
ficom
pop
and
inc
pop
pop
lock
fstp
mov
mov
mov
scas
pop
loope
popf
sub
scas
mov
js
xchg
iret
ror
fadd
scas
sub
cmp
or
sub
adc
mov
xchg
call
call
sbb
test
repz
push
inc
lods
sub
push
pop
fcmovnu
mov
add
inc
jmp
fwait
mov
mov
cmp
jg
xchg
and
mov
mov
pop
sub
mov
cmp
cmp
popa
shl
jmp
ds
mov
aad
(bad)
sbb
cmp
xlat
mov
out
es
add
mov
nop
call
xchg
out
ins
idiv
gs
cmp
ds
cmp
sub
loopne
jbe
ss
mov
pop
into
shl
stc
leave
and
daa
pop
mov
mov
pop
sub
aas
sub
inc
imul
jne
lahf
daa
mov
pushf
pushf
test
loopne
lds
iret
call
mov
dec
(bad)
lock
fwait
jae
push
pop
mov
lock
sbb
pop
in
and
sahf
cs
mov
leave
in
(bad)
imul
sbb
imul
(bad)
dec
cdq
push
xchg
push
aas
pusha
mov
pop
push
popf
mov
rol
popa
test
(bad)
cld
retf
shl
ss
lahf
or
jnp
adc
fdiv
xchg
fadd
inc
mov
mov
jge
ftst
xchg
mov
or
mov
imul
mov
or
pop
(bad)
sub
pusha
sub
(bad)
pusha
xor
ret
push
stos
int
jl
je
out
arpl
test
cwde
cdq
pop
jle
dec
add
jp
sbb
mov
jbe
stos
inc
test
cmp
sbb
ror
scas
call
enter
mov
mov
inc
inc
ret
and
in
cld
adc
jo
add
pop
add
mov
out
push
into
or
jmp
jnp
mov
enter
icebp
sub
(bad)
(bad)
repnz
sbb
jno
mov
jmp
loope
lea
push
xchg
xor
ja
aas
hlt
and
and
inc
pop
imul
fbstp
iret
sar
push
push
push
into
sub
sbb
or
(bad)
retf
xchg
shl
push
xchg
fs
mov
push
clc
pop
sti
xchg
jmp
in
fwait
jb
shl
mov
dec
call
out
jmp
mov
and
clc
cli
adc
lea
xor
popf
sbb
leave
fisub
add
pop
sub
sub
inc
lock
pop
inc
scas
or
jecxz
jb
das
adc
jmp
ret
sub
add
mov
fbstp
loopne
sbb
sbb
cmp
rcr
mov
push
pusha
icebp
sub
adc
out
lea
mov
xchg
icebp
ret
hlt
xchg
jbe
dec
pop
xor
mov
fsubr
and
div
jle
arpl
pop
adc
mov
(bad)
stos
inc
dec
pop
push
das
inc
dec
aaa
sbb
mov
jl
std
pop
xor
(bad)
cmp
sbb
sub
inc
(bad)
stc
push
ds
adc
mov
and
cmp
shl
aad
xor
das
dec
mov
je
in
sub
ret
push
jmp
pop
sbb
(bad)
lahf
add
cs
xor
xchg
stos
aas
sbb
leave
dec
pop
cmp
loopne
mov
pushf
and
xchg
popf
iret
pop
call
add
inc
dec
retf
mov
sub
cli
ret
or
fist
lds
mov
mov
ja
shl
mov
mov
push
inc
or
push
xchg
sbb
inc
icebp
mov
xor
sbb
push
out
sbb
inc
repnz
je
push
das
pop
call
xor
inc
loope
mov
mov
fnstsw
xchg
add
mov
mov
nop
enter
pop
pop
or
add
scas
shr
arpl
sbb
outs
cld
outs
push
cmp
push
fiadd
and
call
mov
mov
mov
xor
out
movs
sti
mov
xor
dec
jle
std
mov
repnz
xor
mov
loop
xchg
arpl
outs
mov
xor
xor
je
xor
push
jmp
aam
out
sbb
(bad)
and
fisttp
mov
sub
cli
xchg
fldz
movs
ds
cmp
adc
std
(bad)
mov
(bad)
lock
xor
or
(bad)
je
mov
add
pop
xchg
stos
ja
add
jge
clc
jne
and
and
fbld
loope
rep
adc
mov
cmp
push
mov
stc
pushf
sbb
imul
rol
call
adc
mov
nop
jge
pop
pop
test
sbb
cld
int3
and
add
in
xchg
out
mov
mov
dec
mov
lods
inc
call
sub
mov
mov
outs
imul
sbb
fisttp
rcl
call
sbb
sbb
inc
repnz
cld
jno
add
stos
inc
and
sbb
neg
adc
inc
inc
jbe
jecxz
fidivr
mov
sub
sbb
mov
pop
push
sub
sub
iret
(bad)
add
jl
aad
imul
or
add
stc
xchg
push
xchg
mov
push
xor
sbb
imul
jl
dec
xchg
mov
jo
pop
push
add
icebp
test
add
mov
adc
or
cmps
lods
bound
xchg
das
inc
imul
ret
jmp
jg
fcomp
movs
add
add
mov
loopne
test
sub
jge
mov
jge
xchg
and
fist
shr
stos
inc
add
(bad)
mov
fild
arpl
cwde
dec
sbb
jno
sub
push
jmp
mov
add
xchg
(bad)
adc
mov
loope
or
inc
hlt
sbb
leave
push
add
call
sbb
outs
dec
or
or
or
fbld
js
pop
or
mov
cmc
jmp
repz
loop
call
pop
lds
xchg
xchg
and
js
loope
loop
test
pop
dec
fiadd
xchg
ror
xor
lods
cmp
or
fisubr
ins
dec
out
lods
js
outs
std
jmp
icebp
or
fnsave
(bad)
xor
xchg
mov
inc
enter
or
dec
cmp
xchg
test
or
les
ror
fst
xchg
je
pop
outs
in
cs
dec
outs
xor
arpl
mov
fnstcw
test
jnp
test
pop
and
adc
jg
rcl
fadd
das
mul
or
push
mov
inc
cmc
add
loopne
push
cmp
retf
xchg
ins
xchg
mov
push
aas
cdq
popf
arpl
lock
mov
fiadd
sub
aam
push
fmul
lods
ins
rcr
into
ficom
xchg
rcl
int3
cmc
sar
sub
or
into
dec
or
add
sbb
shl
dec
inc
inc
jecxz
daa
xchg
mov
lahf
adc
add
sbb
imul
jae
mov
sub
mov
es
mov
cwde
rol
jno
je
or
ret
xlat
jmp
xor
or
xor
xchg
mov
push
jno
(bad)
cmp
in
or
jp
mov
nop
jno
aas
and
out
sbb
cmp
pop
pop
fisubr
xor
adc
scas
das
push
sbb
dec
es
pop
jmp
leave
shl
js
imul
jmp
pushf
add
jno
jp
add
push
push
mov
(bad)
or
sbb
(bad)
lahf
add
js
sub
in
hlt
scas
and
test
lods
popf
(bad)
mov
push
xchg
aaa
push
ret
ins
mov
pop
fild
movs
push
jle
(bad)
js
sub
mov
and
call
rol
push
mov
xchg
loope
cld
dec
pop
mov
add
mov
push
inc
aad
push
ss
add
loop
rol
dec
ret
int
sub
rol
cmc
jl
adc
shr
cld
xor
lds
push
ror
lods
adc
add
or
inc
jmp
test
and
repz
ret
aad
dec
test
lods
or
rol
jle
js
cmp
adc
loopne
js
rcr
mov
mov
mov
imul
dec
mov
jecxz
ins
add
mov
jge
mov
push
dec
scas
mov
fild
or
and
test
mov
test
div
lds
lmsw
jo
push
mov
pop
push
imul
test
jp
pop
retf
out
adc
lock
add
repz
xchg
mov
inc
and
xchg
xchg
movs
mov
loope
out
inc
mov
call
jge
(bad)
push
das
sub
in
or
pop
push
pushf
jl
mov
pusha
je
cmps
mov
icebp
das
push
cmp
mov
ret
cmp
inc
in
pop
faddp
mov
sub
lods
(bad)
enter
add
lahf
sar
push
shr
inc
inc
das
movzx
xchg
sub
xor
mov
or
dec
cli
push
dec
sbb
icebp
xchg
or
in
shr
ins
mov
cwde
sub
pop
in
mov
lock
mov
add
inc
mov
mov
dec
stos
sbb
call
dec
jo
hlt
cmps
ins
dec
neg
sbb
test
ficom
sti
inc
cdq
pop
das
or
sub
(bad)
mov
or
call
das
cld
dec
rcl
int3
clc
mov
inc
mov
js
cmp
sti
shl
dec
in
cmp
dec
ins
mov
jae
jmp
sub
xchg
push
pop
fnstsw
call
shr
or
pop
sahf
mov
xor
test
imul
(bad)
xlat
cmps
xchg
add
pop
push
outs
cwde
into
out
inc
xchg
aas
inc
and
aas
mov
lods
das
(bad)
mov
and
clc
dec
mov
lods
mov
lahf
mov
mul
stos
pushf
mov
add
push
sub
mov
fisttp
jno
mov
push
aam
cmps
adc
mov
icebp
mov
test
cwde
shl
mov
or
pop
arpl
int3
sub
jbe
and
dec
sti
adc
sbb
add
mov
push
inc
cmp
jo
out
out
mov
ss
dec
mov
pop
shr
sub
ficom
or
sub
ror
dec
fwait
add
mov
xchg
cmps
test
aas
movs
cmc
xchg
mov
aad
sub
aas
lds
retf
mov
inc
ins
stos
cmc
adc
je
add
xor
outs
xor
out
cmp
pushf
cmp
sti
mov
jns
retf
jmp
out
or
scas
add
pusha
lds
rol
aad
pop
inc
retf
add
cmp
pop
mov
lahf
xchg
xor
and
inc
lods
and
xor
imul
jo
sub
(bad)
cmps
lea
dec
mov
jo
ins
adc
push
arpl
jge
pop
add
int3
shl
fbstp
fcomip
push
movs
inc
pop
adc
pop
nop
lods
adc
fbstp
xlat
pop
test
test
inc
fadd
push
es
lds
jns
xlat
and
adc
gs
in
sbb
xor
pop
cwde
es
dec
push
push
test
jp
mov
es
mov
in
(bad)
cmps
loop
or
mov
mov
or
mov
and
xchg
mov
jg
inc
(bad)
stc
retf
pop
imul
(bad)
aad
sub
retf
mov
(bad)
imul
ret
mov
rcr
test
adc
adc
sub
retf
add
dec
retf
xchg
in
shl
daa
pop
clc
jmp
sbb
xchg
shl
sbb
cmp
pop
enter
outs
shl
or
shl
push
fndisi(8087
cmp
xlat
call
or
popa
and
fld
xchg
inc
repnz
xor
mov
lock
sub
stos
or
cmc
and
mov
xchg
hlt
mov
inc
adc
(bad)
lahf
arpl
div
adc
outs
iret
adc
loope
popf
jp
push
adc
add
and
movs
push
add
sbb
ss
fs
xchg
add
aad
cdq
ins
adc
je
dec
jno
outs
sub
loope
pop
mov
jle
not
mov
inc
fldcw
aaa
lar
xchg
jge
and
fbld
sbb
inc
scas
int3
and
or
daa
(bad)
stos
push
mov
addr16
mov
fidivr
push
fsub
mov
dec
stc
dec
mov
je
call
sahf
rcl
lock
sbb
push
cmp
ds
fs
mov
push
mov
ss
fcomip
jg
pusha
xor
mov
or
lds
imul
xchg
adc
(bad)
loopne
jae
test
mov
scas
stc
cmp
cmp
or
or
jmp
test
pop
cdq
or
pushf
int3
sub
add
jl
iret
into
adc
push
cmp
adc
imul
pop
hlt
cmc
pop
outs
jecxz
clc
out
lea
mov
out
mov
mov
enter
ins
xlat
out
retf
jge
pop
add
pop
fmulp
jbe
mov
push
inc
jle
nop
(bad)
xchg
in
pop
(bad)
test
js
out
test
pop
sar
cmp
out
outs
adc
add
push
shr
in
ja
mov
lods
test
scas
push
ss
or
xor
ins
mov
repnz
push
mov
xor
sti
inc
jp
fs
inc
lods
jmp
out
scas
outs
movq
push
sbb
or
test
xor
xchg
jl
movs
xchg
add
out
cmp
stos
lahf
sub
pop
test
aad
in
mov
retf
cmc
mov
adc
fwait
pop
dec
neg
mov
(bad)
and
and
lods
jns
shl
dec
cmc
xchg
fild
mov
inc
lods
xchg
fst
lds
mov
xchg
add
push
in
stos
add
dec
sub
jg
push
rcl
dec
arpl
(bad)
fdiv
jl
mov
sar
mov
mov
cwde
ret
jl
and
xchg
add
je
jge
mov
push
jle
push
(bad)
push
outs
add
dec
cmp
lock
and
mov
xchg
rcl
cmc
test
dec
(bad)
fwait
sub
sbb
(bad)
sbb
xor
inc
rol
pop
xchg
arpl
aaa
mov
push
fst
add
dec
push
cmps
retf
jno
inc
(bad)
hlt
js
vsqrtss
stos
das
test
hlt
add
mov
push
inc
out
scas
mov
lods
pop
jae
jnp
mov
mov
enter
cmp
jo
lds
cmp
mov
sar
repnz
movs
jl
rol
sub
jno
fldcw
xchg
sub
loopne
fdivr
and
cmp
sbb
dec
xchg
jb
imul
pop
div
xchg
cs
push
aaa
sbb
mov
fadd
mov
push
sub
popf
icebp
pop
push
iret
test
push
or
repnz
xchg
je
xor
add
xchg
enter
xchg
retf
push
mov
jmp
adc
xchg
pop
popf
pop
test
enter
int3
mov
out
cdq
repz
mov
push
pop
push
add
push
in
jmp
in
aas
cmps
aam
push
nop
mov
adc
(bad)
sbb
dec
xchg
fwait
inc
retf
gs
fs
test
(bad)
push
xor
test
dec
outs
ins
mov
cmc
jo
(bad)
lea
scas
(bad)
test
or
(bad)
pop
ins
adc
xor
inc
or
fmulp
cmp
clc
hlt
dec
xor
add
sub
sbb
sbb
add
out
popa
dec
sub
js
mov
xor
loopne
xchg
jg
pop
pop
(bad)
and
fs
xchg
lods
sti
push
cmps
xor
mov
arpl
pcmpeqb
cmp
cwde
(bad)
pop
ins
adc
addr16
arpl
cmps
test
inc
cmp
and
je
inc
es
xchg
call
popf
adc
sub
fisubr
or
repnz
jle
(bad)
aad
fbstp
int3
mov
dec
paddb
outs
cmp
test
mov
cmp
sbb
aas
sub
mov
fisttp
(bad)
jg
or
push
(bad)
adc
mov
retf
or
push
push
pop
push
and
mov
popf
ins
jmp
xor
inc
aaa
icebp
mov
mov
sbb
sub
bound
gs
fwait
inc
adc
ret
xchg
inc
pop
adc
pop
mov
js
mov
ja
mov
sbb
mov
mov
sbb
movs
loop
aam
nop
shl
scas
int
dec
dec
jl
daa
sub
mov
jecxz
xor
lods
mov
std
loopne
xor
adc
mov
or
es
aad
out
jmp
cs
pop
ja
aad
xchg
stos
test
aam
xchg
imul
mov
and
js
and
inc
push
or
mov
jae
mov
loop
pop
arpl
ja
push
add
xchg
cli
mov
sub
in
lahf
mov
(bad)
mov
out
mov
push
pop
and
stc
xchg
mov
or
icebp
sub
psadbw
in
popf
popa
push
ret
and
ds
mov
stc
cmc
jmp
in
test
cli
jle
ja
in
inc
lock
cmps
scas
jb
mov
mov
xchg
mov
ja
mov
iret
jne
push
or
add
cmps
jecxz
in
(bad)
into
iret
lahf
(bad)
or
sub
jmp
xchg
aad
mov
js
test
add
jp
retf
sub
(bad)
mov
ins
daa
cmp
push
adc
and
mov
push
out
out
add
arpl
lahf
stc
retf
or
pusha
jecxz
addr16
jo
outs
sbb
cmp
xor
dec
sbb
inc
mov
lock
adc
xchg
loopne
clc
(bad)
leave
icebp
movs
jae
dec
cli
jns
outs
dec
sbb
pop
push
fcom
jle
mov
pop
call
pop
fild
pop
and
aas
outs
mov
mov
pop
jl
push
jmp
push
xor
outs
xchg
fiadd
stos
sahf
(bad)
xor
(bad)
push
scas
aas
inc
or
cmps
inc
jb
push
xor
aaa
(bad)
sbb
xchg
sti
pop
xchg
push
adc
sti
jecxz
rcl
jl
or
retf
inc
push
fisttp
cld
push
mov
and
loop
sbb
and
push
std
int3
dec
dec
xchg
mov
fisttp
mov
loop
repnz
inc
outs
imul
cmc
cmp
(bad)
cmp
mov
lods
mov
jo
loopne
in
cli
inc
bound
lea
rcr
cmp
in
sub
aam
push
or
jmp
movs
push
pop
stc
in
inc
jno
test
cs
ins
shl
icebp
lahf
fmul
test
mov
mov
inc
rcr
scas
pop
hlt
gs
xor
xchg
jmp
mov
imul
or
call
mov
inc
leave
(bad)
sub
imul
stc
sub
ret
int
outs
pop
icebp
ins
movs
data16
jmp
test
mov
jmp
in
or
or
out
push
or
cmc
sbb
lods
daa
popa
xchg
mov
mov
xchg
pop
ins
or
in
push
mov
add
jnp
push
scas
push
push
mov
int3
in
ret
(bad)
dec
adc
popa
rcr
xchg
inc
(bad)
popa
xor
je
mov
adc
ret
cld
loop
xor
pop
xchg
jmp
test
js
xchg
cmps
pop
jb
cwde
sbb
dec
rol
hlt
mov
in
fist
dec
pop
sbb
push
ins
ja
dec
inc
cmps
leave
sbb
ficom
iret
push
std
cs
jmp
jp
dec
xchg
je
outs
sub
das
jmp
repz
mov
jae
mov
and
xchg
or
test
shl
retf
es
push
movs
movs
pop
js
pushf
and
dec
out
sbb
ss
mov
icebp
pusha
push
int3
cs
push
sub
jg
pop
jmp
icebp
outs
outs
jo
push
dec
call
adc
js
sub
out
pop
push
dec
lds
inc
xlat
jne
and
pop
mov
and
ja
loop
xor
push
lahf
jb
daa
mov
ja
inc
in
adc
cli
std
pushf
lds
test
xor
movhps
sub
jae
imul
push
loop
mov
cmp
xor
(bad)
cmp
data16
int
popa
and
ret
push
ins
fsubr
xchg
sar
dec
mov
mov
xor
xchg
(bad)
adc
stc
mov
add
mov
adc
xor
jns
pop
lods
popa
popa
push
jl
add
inc
and
and
jns
mov
(bad)
mov
xchg
mov
add
pop
cmp
xor
xchg
inc
sahf
and
mov
arpl
or
xchg
push
and
xor
addr16
jo
adc
xor
push
add
push
(bad)
xor
mov
jb
inc
scas
repz
ret
mov
xor
xchg
mov
into
rcl
icebp
cmps
int
mov
imul
call
mov
jns
xchg
push
jmp
mov
sbb
inc
mov
jl
xor
lods
jo
push
push
sbb
pusha
jg
inc
cmp
push
fwait
pop
xlat
xlat
repz
jl
push
test
mov
mov
jns
jmp
fsubr
xchg
imul
xchg
sub
mov
aaa
jno
sbb
pop
std
mov
and
fistp
stos
inc
cmp
movs
test
cmp
jmp
call
imul
jnp
add
or
test
enter
inc
sub
in
iret
pop
in
sbb
pop
mov
adc
sar
and
jl
xchg
jl
mov
scas
popa
mov
in
out
xchg
xor
add
stos
mov
cmp
rcr
repnz
or
popf
mov
icebp
arpl
push
(bad)
into
adc
std
push
dec
push
pop
jp
xor
retf
repnz
fucomi
xlat
out
into
and
arpl
jmp
iret
jmp
or
mov
pop
fcom
mov
jge
and
dec
mov
sbb
(bad)
push
dec
push
xor
adc
push
cdq
mov
cdq
mov
mov
call
cmps
test
out
inc
adc
dec
out
cmp
(bad)
(bad)
jle
loop
cs
pop
pop
adc
jg
pop
fbstp
and
push
mov
jns
sbb
fs
test
inc
aam
cmps
test
sbb
fistp
push
pop
lahf
jp
mov
and
leave
sbb
out
pop
les
nop
lock
lods
or
cmp
push
sub
adc
int3
adc
add
call
mov
adc
stos
inc
(bad)
push
popa
xlat
jmp
mov
xor
pop
sub
mov
nop
mov
push
xchg
mov
push
add
push
popf
mov
and
cmps
loopne
sahf
add
or
add
or
arpl
push
and
or
xchg
nop
outs
psubq
test
dec
out
sbb
fst
or
lock
jl
outs
cmp
dec
jbe
mov
cli
dec
pop
xor
push
sbb
pop
mov
mov
fwait
test
inc
rep
imul
and
gs
inc
mov
dec
add
jecxz
retf
je
or
cmps
pop
movs
sbb
and
cmp
xchg
pop
jns
jnp
leave
aaa
in
nop
inc
dec
test
adc
push
and
mov
sahf
push
aad
inc
retf
mov
bound
dec
or
daa
rcr
xchg
xchg
xchg
daa
or
push
mov
in
jo
lahf
loop
inc
sbb
dec
fadd
cli
cmp
sbb
out
jg
sbb
sahf
inc
add
xchg
into
sub
mov
jbe
and
dec
sbb
or
sahf
or
sar
mov
lods
(bad)
ret
xchg
fwait
sub
stos
mov
xor
pop
sub
(bad)
ins
pop
adc
cmp
repz
fsub
jbe
ja
push
lea
cmp
sub
xor
mov
call
int3
out
dec
mov
pushf
adc
sbb
call
in
out
lahf
lock
mov
clc
dec
adc
scas
mov
jl
inc
pop
ret
jg
xor
inc
cmp
push
xchg
out
mov
idiv
mov
cmc
aas
jne
push
mov
sbb
lock
cwde
nop
mov
out
sub
mov
mov
(bad)
retf
call
xchg
test
pop
lahf
and
lods
pop
in
mov
ret
mov
unpcklps
cld
repz
std
xchg
inc
lock
retf
push
mov
pop
and
loopne
sub
ror
fdivrp
hlt
dec
adc
pop
xchg
dec
mov
cmp
arpl
nop
xlat
adc
gs
out
push
inc
xor
or
mov
mov
cmps
push
mov
enter
dec
or
inc
sbb
outs
jne
push
cmp
stc
enter
fistp
sub
shl
sar
mov
ins
fdiv
out
sub
call
jl
sbb
fwait
push
jmp
dec
mov
or
jo
pop
xor
shl
lea
xchg
hlt
and
loope
sub
mov
pop
out
daa
dec
push
repz
(bad)
xor
icebp
or
xor
aaa
fidivr
mov
push
fimul
mov
or
mov
inc
inc
leave
sub
fldenv
dec
fwait
sbb
and
xchg
fwait
dec
and
fs
out
shl
mov
and
ja
jmp
hlt
adc
and
push
shl
mov
imul
pop
mov
repnz
mov
data16
int
jne
mov
push
xor
pop
pushf
mov
mov
adc
dec
pop
dec
pop
stos
in
jp
jbe
iret
jae
push
adc
out
aaa
inc
sar
push
es
retf
(bad)
pop
jne
sbb
lods
cld
cmp
and
std
in
mov
or
test
(bad)
xchg
jmp
out
add
xchg
pop
or
pop
shr
fadd
and
dec
jl
mov
mov
cmp
int
mov
in
rcl
jg
mov
outs
aaa
and
shr
icebp
sbb
ins
(bad)
sub
pop
push
js
aad
int
or
adc
jge
or
popf
mov
ror
mov
dec
sbb
dec
push
ss
xlat
test
lock
add
cdq
das
and
xchg
icebp
xchg
jmp
mov
ja
jno
push
jecxz
mov
dec
inc
cld
sbb
fsub
cmp
out
loop
(bad)
cmp
or
xor
inc
and
inc
pop
push
pop
outs
lds
aam
xchg
mov
outs
(bad)
xor
adc
pushf
mov
fyl2x
out
mov
cmp
stc
xor
test
imul
dec
repz
sbb
jmp
xchg
popa
sub
or
int
mov
jmp
or
pop
adc
mov
ret
jbe
idiv
mov
into
mov
lahf
fwait
sbb
dec
pop
push
rcl
retf
mov
fiadd
pop
xchg
inc
sbb
out
add
imul
sub
test
xchg
aaa
std
mov
sbb
mov
mov
pushf
in
xor
push
cld
(bad)
arpl
dec
cmps
sbb
sub
sbb
test
jno
adc
es
cmc
dec
rcl
jae
or
scas
mov
jge
lea
jbe
clc
sub
sbb
movs
mov
dec
ror
stos
push
cmp
push
mov
loop
arpl
push
test
dec
fnstenv
fs
js
pop
cmc
and
jge
mov
test
in
push
dec
add
or
inc
bound
or
adc
js
movs
dec
mov
daa
add
pop
sar
sbb
sbb
sub
mul
outs
mov
sbb
clc
jne
sub
jmp
or
xchg
xor
xchg
aad
push
test
fnstsw
das
sbb
push
fwait
and
das
int
test
inc
mov
adc
(bad)
ins
hlt
scas
mov
push
push
scas
add
adc
mov
sti
push
outs
stos
inc
jg
adc
cmps
push
std
sahf
stc
imul
stc
(bad)
sbb
in
jbe
ja
add
popa
push
xor
xor
stc
stos
pop
dec
jne
loope
imul
rcl
sub
xchg
cs
adc
pushf
pop
loop
jns
jmp
je
out
pop
test
mov
(bad)
cmc
pop
cmp
jne
jno
dec
dec
jge
mov
inc
sahf
icebp
ret
sbb
inc
or
enter
imul
ss
pop
mov
push
add
pop
adc
iret
xlat
ror
fwait
mov
loopne
test
sub
push
popf
inc
xchg
or
mov
adc
lahf
mov
ds
cdq
push
int3
fisub
cmp
xor
arpl
int
(bad)
adc
retf
aas
loop
push
jne
loop
cmps
cmp
lds
xor
adc
push
repnz
push
aad
xchg
adc
loope
fsubr
mov
cld
mov
bnd
mov
jns
pusha
stos
sub
cmc
call
pop
dec
gs
mov
inc
inc
ret
jnp
pop
add
aam
mov
mov
call
add
dec
and
(bad)
mov
jmp
mov
hlt
push
mul
push
push
cmp
adc
pop
sub
lds
(bad)
mov
stc
and
fild
fcmovnb
popa
adc
mov
adc
in
adc
add
std
fnsave
inc
or
mov
repz
and
add
jecxz
icebp
imul
cwde
sub
ficomp
sub
aaa
enter
push
pop
mov
mov
mov
sub
mov
xor
xchg
cmp
add
in
leave
dec
mov
int
repz
jo
(bad)
sub
loope
lock
mov
daa
inc
xor
mov
ret
repnz
popf
dec
mov
(bad)
jmp
push
ret
fst
mov
sbb
shl
out
(bad)
xor
cmp
sub
js
adc
mov
pop
push
out
cli
sar
shl
(bad)
push
mov
cs
push
fiadd
hlt
sbb
imul
loope
sub
mov
in
pop
pop
ins
or
movs
sbb
and
imul
jmp
in
scas
loop
cmps
mov
jge
pop
sbb
mov
xor
push
push
icebp
loope
test
sbb
sub
add
retf
xchg
movs
inc
and
jmp
push
addr16
int
sbb
test
loope
fwait
cmp
in
mov
mov
jbe
add
test
mov
mov
ror
repnz
inc
mov
imul
xchg
sbb
int3
out
clc
mov
add
dec
adc
ficomp
(bad)
(bad)
lods
aas
loop
adc
clc
pop
repnz
movs
loopne
loopne
daa
mov
push
jnp
ret
jg
popf
sub
scas
add
pop
daa
pop
sub
leave
sbb
mov
movs
jo
rcr
cs
outs
cmp
push
(bad)
mov
in
scas
push
cdq
dec
je
fxch
cmp
ss
cmp
jmp
sbb
inc
(bad)
xor
bound
dec
mov
data16
icebp
(bad)
outs
and
test
push
jne
adc
ss
lock
and
and
in
rcr
xchg
mov
add
shl
in
mov
sub
xor
add
test
mov
jg
xchg
sti
pusha
mov
or
or
call
mov
into
out
sbb
add
retf
sbb
mov
pop
int
mov
ja
and
mov
and
and
outs
xchg
(bad)
bound
out
push
push
push
in
and
popa
jl
cmp
add
dec
jnp
sbb
inc
rol
inc
or
test
adc
out
retf
push
mov
or
div
lods
jmp
mov
aad
fsubr
psubb
jnp
bnd
popf
dec
repz
test
(bad)
mov
and
push
rcr
imul
cmp
xor
xchg
xchg
cld
mov
cmp
test
clc
pop
sbb
fs
jp
add
stos
gs
out
or
fsubrp
xchg
cmp
mov
xor
int3
fsub
or
push
xor
bnd
in
gs
shl
push
daa
stos
cld
and
cdq
lahf
jns
mov
cmp
lods
movs
cmp
mov
clc
add
adc
pusha
mov
stos
cmc
test
adc
push
call
push
lock
xor
mov
fmul
fdivr
jb
fist
jno
call
adc
or
inc
mov
shl
pop
leave
xchg
fiadd
outs
in
das
fadd
push
mov
in
ins
mov
add
sub
lods
cmp
inc
scas
fs
in
mov
lea
mov
push
clc
pop
int3
lods
je
xchg
dec
push
(bad)
push
push
adc
mov
aad
mov
xlat
popa
xchg
push
les
mov
(bad)
out
xchg
loope
ror
mov
(bad)
div
out
adc
mov
leave
loope
and
je
xor
in
sbb
jo
mov
pop
mov
aad
ror
jno
fwait
mov
jge
popfw
pop
jp
mov
cmp
icebp
mov
adc
or
(bad)
xchg
jmp
loopne
test
sub
dec
xchg
xchg
cmp
adc
call
stc
repnz
cmps
mov
dec
jle
stc
and
(bad)
pop
loopne
mov
dec
in
lods
add
inc
push
jg
out
pop
lea
jmp
cmc
retf
inc
xchg
xchg
das
jg
mov
stc
jl
pushf
mov
in
jge
xchg
mov
call
mov
jne
addr16
ret
sti
cmp
sbb
jecxz
jo
mov
adc
jp
lahf
xchg
mov
mov
lods
ficom
mov
nop
mov
mov
push
jae
data16
sub
outs
es
out
jo
jmp
xor
push
push
jg
div
xor
sbb
out
mov
div
in
sbb
mov
and
mov
call
shl
jl
mov
(bad)
mov
repz
inc
popa
jle
out
and
mov
popf
fsubr
or
add
imul
std
mov
lds
adc
stos
retf
add
cmps
push
test
sub
sbb
movs
ja
pop
mov
std
fimul
fcomp
add
push
jmp
or
shr
test
clc
mov
into
mov
lock
xor
dec
and
adc
mov
pop
ror
lahf
repz
iret
xor
mov
push
jnp
inc
ja
ret
loope
sbb
mov
jecxz
push
cmp
pop
mov
loopne
(bad)
outs
dec
pop
jmp
and
mov
pop
lahf
in
cmp
out
lahf
rcl
cli
sub
mov
neg
mov
sub
into
and
xor
ja
jp
pop
clc
idiv
ret
push
sub
pop
jae
les
popa
icebp
test
push
pop
jbe
jns
jae
ins
push
xchg
stos
shl
popa
pusha
test
(bad)
fstp
stos
sbb
and
pop
jmp
in
sbb
jle
mov
push
int3
aas
jnp
sti
dec
cmp
mov
movs
aaa
pop
inc
ret
in
ins
sbb
mov
int
fist
aas
dec
mov
cmp
ins
daa
imul
adc
or
cmp
adc
cmp
push
xor
mov
test
or
cmp
in
outs
fisttp
pop
xchg
sbb
or
fstp
jne
push
icebp
int
jg
push
xor
lds
inc
and
fwait
dec
mov
ins
ja
inc
add
std
cwde
neg
mov
sbb
sbb
ins
sub
in
mov
sub
enter
or
dec
xchg
xchg
(bad)
fmul
cmp
mov
xchg
push
and
mov
mov
sub
mov
mov
push
sub
jnp
cwde
mov
fstp
aam
push
push
mov
iret
xor
or
xlat
push
popf
add
mov
xor
mov
sub
push
add
jne
mov
cmp
mov
mov
jnp
test
fadd
lds
mov
xchg
frstor
repz
mov
test
xor
movs
cmp
mov
loop
rcr
loopne
inc
xchg
cmp
aam
jecxz
arpl
stos
sub
pop
adc
(bad)
les
cwde
mov
sub
cli
jp
shr
inc
cmp
(bad)
repz
fwait
mov
in
pusha
xor
(bad)
or
fmul
cmps
pop
shl
leave
cli
add
pop
in
fucomp
cmp
in
sub
ret
sub
gs
fdiv
iret
and
xor
or
out
das
pushf
pop
xor
arpl
mov
sub
cmps
aam
int3
cwde
arpl
jbe
not
movs
mov
adc
outs
les
aas
xlat
ja
cwde
sub
out
mov
ins
out
cmp
xor
nop
jns
push
lock
repz
xor
inc
sar
movs
push
aas
stos
mov
jne
or
sub
cld
push
adc
mov
lods
call
iret
sub
mov
lods
movs
jmp
xchg
mov
fwait
sub
push
cli
shr
xchg
jg
ror
jle
cld
pop
adc
push
mov
das
pop
lock
neg
js
push
jne
cdq
xchg
sub
push
add
sahf
add
outs
push
ror
push
sub
repz
xor
push
(bad)
lods
gs
inc
add
mov
cmps
js
mov
push
sar
xor
xchg
stc
jmp
shr
sbb
ja
pop
inc
outs
es
push
dec
push
into
cmps
xchg
rol
js
ror
jo
or
jg
mov
xor
out
imul
fistp
hlt
push
loop
stos
pop
sti
mov
jns
dec
push
jmp
repz
sbb
and
jmp
enter
and
pushf
jb
sbb
ror
inc
pop
push
fadd
mov
xchg
test
into
(bad)
imul
or
or
mov
xchg
adc
xor
pop
add
xor
jbe
mov
and
sbb
jns
pop
pop
ins
mov
mov
jb
cld
popf
popa
jmp
test
and
xor
push
clc
mov
ins
cmps
div
jge
mov
cmps
pop
mov
add
in
movs
mov
cdq
sub
xchg
pop
or
sbb
jno
lea
adc
mov
xor
pop
pop
add
push
(bad)
retf
inc
inc
sub
ja
int3
xchg
sub
and
mov
jb
icebp
sub
retf
ret
lds
pop
fldenv
aam
retf
inc
inc
daa
cmp
sar
mov
and
sub
loope
and
xchg
js
or
and
arpl
dec
jne
adc
movs
push
out
in
fmul
add
popa
lods
adc
push
jp
(bad)
xchg
mov
repnz
jmp
and
adc
adc
das
push
xor
push
and
movs
stos
cmps
adc
xor
add
pop
cli
outs
cli
dec
mov
cmp
push
cmc
repz
out
(bad)
xor
std
neg
dec
push
rol
xchg
jp
add
or
pushf
in
xchg
pop
mov
ss
mov
lods
sbb
cmp
(bad)
mov
adc
in
shl
jne
cli
inc
inc
jp
and
mov
adc
dec
and
test
or
std
dec
mov
cmp
sbb
outs
aas
cmp
pop
scas
push
lods
xor
les
or
int
jg
data16
popa
shl
push
add
inc
jmp
push
sub
inc
stos
sti
dec
mov
sbb
clc
jno
cwde
mov
stc
mov
shr
cmp
mov
loope
and
and
pop
das
clc
out
xor
test
push
mov
clc
pop
cmp
jmp
cmps
out
iret
add
jmp
adc
pop
pop
cwde
mov
cdq
scas
es
retf
neg
mov
(bad)
sti
xchg
or
ja
mov
cdq
leave
dec
lods
adc
mov
xchg
jle
jmp
les
aas
push
(bad)
in
mov
cs
and
les
add
fld
hlt
iret
dec
mov
aad
xchg
jecxz
scas
dec
cdq
(bad)
jmp
add
inc
push
add
add
ins
fld
cmp
push
cld
cwde
push
jp
jp
loop
aam
sub
ret
pop
add
imul
jecxz
add
fimul
or
stos
push
cmc
enter
sbb
lock
jmp
(bad)
xsaveopt
jae
scas
add
out
leave
push
pop
pusha
jecxz
jnp
sbb
(bad)
push
sub
stos
outs
add
cmc
and
sbb
sbb
or
icebp
pop
shrd
test
adc
jne
add
inc
push
pusha
pusha
jmp
and
xchg
dec
nop
xor
retf
push
mov
mov
jo
stos
cmps
add
hlt
mov
push
and
dec
adc
or
jge
and
push
sbb
int3
ror
(bad)
arpl
lods
test
pop
jle
in
movs
jl
dec
out
ins
jno
mov
push
mov
data16
shl
jp
push
jp
adc
adc
lea
mov
and
cmp
test
sub
mov
out
repnz
pushf
lods
or
loop
adc
and
jnp
adc
and
pop
outs
mov
int
jecxz
call
add
jge
jnp
icebp
jno
cmc
xlat
mov
es
jno
mov
inc
sub
lods
shl
add
fisubr
mov
aas
clc
sub
xlat
ins
cs
fdiv
dec
lods
adc
pop
lea
cmp
cmp
nop
dec
daa
lods
scas
dec
repz
mov
aaa
daa
inc
push
dec
jmp
mov
aam
imul
rcl
shl
inc
mov
adc
daa
push
scas
lea
cmps
stc
ins
bswap
je
shr
xchg
imul
fist
jne
pushf
ins
jne
ja
cdq
xor
cmc
xchg
mov
cmp
jae
outs
inc
ins
call
daa
rcl
inc
xor
(bad)
mov
xor
inc
mov
arpl
pop
cmp
rol
or
xchg
popa
inc
xor
xor
mov
(bad)
pop
fwait
xor
inc
in
pop
jb
push
pop
retf
push
cmps
sbb
movs
loopne
pop
retf
inc
sbb
push
ficom
inc
xor
inc
cmp
out
sub
pop
gs
dec
stos
mov
mov
adc
and
jnp
or
pop
enter
cmp
push
cwde
out
sub
xor
and
outs
nop
lock
jp
mov
push
fld
movs
(bad)
pushf
int3
xchg
mov
repnz
xor
mov
sar
sub
frstor
xor
test
pop
repnz
mov
fsubr
out
es
xor
cmp
sbb
mov
enter
adc
bound
ds
cmp
push
xchg
test
add
mov
adc
mov
lahf
mov
push
shl
mov
push
lds
push
(bad)
rcl
mov
mov
lea
mov
cmps
cmps
rcl
mov
mov
imul
ins
jb
add
into
ja
hlt
inc
jmp
je
cmp
xchg
fcom
out
inc
jb
add
adc
mov
sbb
push
mov
adc
mov
and
cld
mov
mov
ror
or
fwait
cmc
hlt
out
adc
test
int3
sti
stc
into
inc
mov
popf
pop
adc
pop
jecxz
cmc
fcmovnu
daa
sbb
push
mov
hlt
call
cs
out
(bad)
add
xlat
pop
es
lods
ins
sub
fs
stos
cmps
pop
mov
test
lods
iret
(bad)
hlt
vpmacsdd
std
cmp
jmp
loopne
or
adc
loopne
jno
xor
inc
dec
mov
or
xchg
js
push
xor
cmp
mov
or
(bad)
jne
mov
xor
ror
loopne
aam
out
or
add
and
xor
pop
xchg
or
mov
repz
xor
pushf
adc
popf
mul
stos
pop
jno
jg
cmp
jge
mov
lea
mov
jb
mov
cmps
mov
enter
inc
or
mov
outs
hlt
or
rcl
int3
jecxz
fistp
and
and
test
data16
pusha
(bad)
fs
gs
scas
sub
fwait
mov
ficomp
ret
mov
imul
call
test
xchg
push
cmp
adc
push
(bad)
pushf
jae
mov
iret
sbb
pop
sbb
push
push
popf
mov
xchg
cmp
xor
out
adc
cld
xor
out
adc
jbe
jl
or
push
repnz
pop
pop
xchg
xor
push
xchg
and
icebp
and
sub
repz
ss
sub
add
fbstp
push
sbb
jmp
pop
cli
cwde
fdivr
imul
pop
ins
push
mov
js
sahf
fs
icebp
xchg
and
xor
xchg
push
push
ds
dec
dec
pop
add
inc
mov
jae
jge
lods
or
dec
fimul
aad
xchg
arpl
jo
jmp
mov
iret
mov
jmp
fdiv
and
aaa
dec
data16
(bad)
out
mov
mov
dec
add
mov
push
push
(bad)
(bad)
mov
and
dec
push
mov
xchg
js
push
lock
repnz
ins
dec
jo
cmp
(bad)
fs
in
push
cmc
sub
pop
mov
imul
mov
mov
fmul
mov
ret
aad
add
je
cdq
or
jae
jecxz
xlat
cdq
xor
retf
pop
push
inc
dec
out
inc
fisubr
sbb
xor
les
pop
jne
sti
sub
scas
mov
mov
retf
push
pop
pop
out
pushf
xchg
sbb
sub
(bad)
in
loopne
cmps
add
divps
or
mov
out
mov
mov
jecxz
aam
(bad)
(bad)
push
out
mov
add
lea
test
push
fld
int3
lock
xor
and
call
sahf
adc
push
rol
mov
nop
sti
loop
mov
jg
ins
add
popa
add
outs
push
and
sbb
mov
das
pcmpgtw
and
xchg
mov
push
pop
sar
jns
jbe
cli
pop
out
icebp
sub
cmp
inc
cmp
adc
xor
into
mov
sub
in
adc
and
and
push
adc
xor
fwait
cmp
jmp
call
fcmovnb
je
icebp
movs
ja
retf
and
ins
aas
cli
sub
jo
add
add
mov
sbb
or
mov
call
retf
dec
fs
out
(bad)
push
add
jbe
loop
iret
pop
and
(bad)
cwde
rcr
mov
dec
jbe
scas
pop
(bad)
dec
inc
jnp
lds
loopne
xor
mov
pop
cmps
inc
call
and
jmp
add
ss
pop
clc
gs
outs
sar
push
cmc
mov
sbb
jmp
mov
mov
or
push
sahf
imul
inc
ret
add
cld
std
jae
rcr
bound
xor
dec
mov
mov
cmp
mov
sub
mov
mov
call
in
int3
in
lods
xchg
or
std
jge
fimul
mov
lods
add
push
and
pop
ds
gs
sbb
cmc
or
cmp
cmc
iret
clc
in
xchg
dec
push
add
sub
ror
inc
arpl
jg
sbb
cs
push
scas
clc
pop
dec
mov
mov
imul
or
ds
repnz
repz
mov
add
or
addr16
aas
in
xchg
inc
add
mov
and
mov
popf
fwait
pop
jno
adc
test
loopne
rcr
mov
in
stos
pusha
inc
loop
mov
int3
sbb
adc
mov
jnp
pop
int
add
and
xchg
mov
(bad)
daa
sar
cmp
into
or
das
dec
popf
test
push
addr16
cwde
sub
stc
xor
scas
mov
xchg
pop
push
inc
iret
scas
out
xchg
xchg
fdivr
sbb
pusha
adc
lahf
add
push
jle
jle
fsub
adc
and
dec
jae
ins
in
xor
push
and
cmps
lea
jnp
pop
jle
ror
add
sar
adc
push
test
cmp
xor
sahf
add
fimul
dec
mov
cmps
push
xor
bound
shl
cli
xor
xchg
lock
inc
cli
dec
loopne
retf
cmp
mov
ret
cmp
ja
pop
jo
adc
cmp
mov
popf
mov
cmc
pushf
xor
icebp
add
dec
cmp
inc
jns
imul
jbe
cs
popa
cmp
mov
dec
rol
push
and
mov
sub
lods
in
int
aam
mov
fisub
xor
lea
dec
aad
bound
mov
pop
add
(bad)
push
addr16
stc
out
sbb
mov
or
pop
aam
shr
mov
fist
sub
and
mov
enter
push
sub
mov
in
push
jne
sti
inc
add
mov
imul
leave
loopne
lea
pop
pavgb
xchg
aam
fwait
push
sbb
xchg
repz
cld
aas
xchg
add
dec
call
mov
jo
mov
sub
mov
mov
cmp
jb
shr
and
pop
test
repz
stos
ja
mov
push
mov
iret
sahf
test
mov
aaa
scas
vpavgw
pusha
cld
mov
aad
dec
mov
inc
pop
dec
mov
aad
mov
jp
js
jmp
jmp
scas
test
jge
out
(bad)
aaa
xchg
imul
mov
nop
test
(bad)
and
add
shl
ret
fdivr
push
lea
pop
pop
leave
dec
xchg
(bad)
int3
mov
and
(bad)
(bad)
rol
jmp
or
retf
(bad)
bound
or
ins
push
add
jo
ror
in
mov
adc
pop
outs
iret
sbb
js
jno
ins
loop
fadd
lock
leave
or
push
je
scas
movs
mov
sbb
cmp
repz
into
push
sahf
adc
add
cmp
repz
mov
xor
stos
jp
sti
nop
mov
dec
push
repnz
jo
(bad)
popa
inc
pop
test
icebp
pop
jg
stc
push
arpl
es
lock
dec
test
dec
not
jmp
retf
adc
add
mov
ins
and
pushf
daa
xchg
fmul
aad
sub
popf
bts
add
icebp
out
scas
repz
jmp
sbb
call
shl
cmp
pop
sahf
jb
test
loopne
inc
and
je
sbb
push
popa
into
cwde
lock
ins
in
push
dec
push
or
aas
inc
mov
jmp
out
jne
dec
imul
mov
xor
xlat
in
cmp
call
push
in
lods
out
xchg
push
fmulp
gs
call
mov
test
(bad)
cmc
fild
cmp
jp
pop
push
sub
push
mov
mov
mov
fisub
inc
scas
fisubr
xchg
push
jl
lods
outs
xchg
icebp
sub
push
repnz
jl
arpl
dec
mov
jl
or
mov
ficomp
fcom
fdivp
loop
fs
int3
sub
pop
xchg
fnsave
cmp
jge
inc
jmp
dec
add
mov
scas
mov
sbb
shr
cmps
sub
icebp
or
sbb
fild
dec
dec
daa
jecxz
clc
aaa
clc
jmp
adc
lods
stos
inc
cmp
jne
sbb
jbe
sub
xchg
jmp
arpl
je
mov
addps
sbb
push
pop
or
lods
xlat
or
in
loope
mov
lods
sbb
mov
out
sbb
pop
xchg
in
sbb
adc
leave
je
sbb
test
pop
pop
fwait
push
mov
dec
pop
js
jae
jb
cld
fild
inc
mov
clc
adc
loop
xchg
adc
mov
cmp
ins
dec
inc
push
ror
shr
shl
and
or
pop
and
mov
adc
jg
and
xor
test
stos
mov
jae
inc
push
jb
inc
out
aam
cwde
jne
int3
outs
push
mov
popa
pop
inc
jne
jns
bnd
jno
(bad)
lock
gs
pop
xor
pop
js
neg
or
mov
sbb
add
xor
sub
sub
in
mov
rol
jns
or
pop
cwde
pushf
sbb
jmp
stos
outs
movs
cmc
sbb
sbb
push
cmp
push
pop
ror
loopne
fcom
in
inc
xor
push
addr16
nop
movs
stc
aam
(bad)
call
std
jb
gs
fmul
shl
imul
mov
push
adc
iret
(bad)
lods
adc
jns
and
int3
mov
shr
inc
test
leave
xor
jg
pushf
xchg
cs
cmp
mov
jp
sbb
xchg
int
loopne
xor
adc
mov
push
lahf
pop
xchg
js
xor
cld
out
and
pop
je
xchg
fwait
clc
ret
inc
sub
call
inc
cwde
add
shl
in
pop
arpl
int
outs
xchg
rcr
mov
sbb
stc
js
stc
rep
das
(bad)
push
mov
jge
add
mov
imul
xchg
hlt
push
mov
inc
inc
fwait
int
adc
jp
neg
cmps
stc
mov
pop
lea
out
neg
mov
pusha
cld
add
push
ret
les
imul
inc
repnz
out
jecxz
mov
mov
(bad)
retf
push
loope
movs
inc
add
jp
inc
jecxz
mov
ins
retf
pop
jle
push
daa
and
cld
outs
jae
leave
mul
cmps
jnp
pop
pop
sbb
arpl
icebp
mov
clc
mov
push
dec
mov
push
stos
enter
adc
mov
loop
out
sahf
stos
xor
or
push
push
rcr
(bad)
jbe
inc
mov
mov
out
test
dec
add
fst
xor
fisubr
sbb
cmp
add
push
out
jae
sbb
cmp
pusha
mov
rcr
and
ror
mov
int
pop
into
cmp
pop
fild
fsubrp
or
adc
arpl
add
call
fsub
jecxz
mov
mov
dec
rcr
mov
pop
mov
mov
mov
nop
repz
mov
cli
add
gs
fwait
mov
out
(bad)
out
inc
push
mov
outs
je
mov
outs
xchg
(bad)
mov
push
fmulp
pushf
or
dec
adc
lahf
mov
push
dec
or
push
call
fmul
jecxz
jnp
in
sub
popf
sbb
jb
ret
cmp
jp
jl
sti
call
repnz
inc
movs
jb
arpl
mov
cmp
aam
adc
call
out
xchg
(bad)
jmp
push
outs
call
(bad)
jmp
sub
adc
or
adc
cmp
or
inc
ins
in
pop
and
in
je
cmc
(bad)
ins
mov
loopne
(bad)
popa
je
imul
cmps
ins
ins
jbe
dec
scas
xor
mul
add
dec
jecxz
xchg
jl
test
jns
pop
sbb
test
iret
push
cli
shr
repz
test
sar
mov
outs
daa
jle
mov
scas
cli
icebp
call
(bad)
xchg
cmp
mov
aam
mov
dec
jle
xchg
fistp
outs
add
or
pmaxub
lods
movs
in
shl
pop
fstp
inc
pop
mov
out
push
xchg
cdq
psrlq
scas
jmp
(bad)
or
push
or
(bad)
mov
repnz
dec
lahf
push
inc
xchg
dec
std
cmps
xchg
and
aaa
inc
dec
mov
imul
inc
push
jg
cmps
and
int
lods
push
or
pop
out
out
mov
hlt
dec
retf
mov
cs
(bad)
shr
mov
sub
inc
in
lods
adc
(bad)
stos
sbb
xchg
or
ror
jno
xchg
sbb
pop
ds
ins
popf
push
inc
test
fwait
arpl
and
cdq
xchg
je
mov
leave
mov
mov
loop
movs
cmp
cmps
add
pushf
mul
inc
push
push
lds
jg
adc
inc
addr16
outs
mov
mov
(bad)
mov
icebp
mov
mov
mov
push
push
sub
hlt
(bad)
sbb
fcomip
fwait
sbb
xor
sbb
xchg
push
aam
or
into
dec
ffree
lds
call
addr16
adc
xor
rol
js
jl
out
(bad)
mov
and
mov
out
outs
lock
into
pusha
in
in
movs
mov
and
call
or
jnp
mov
mov
inc
aad
data16
inc
jbe
dec
sar
std
fbstp
dec
xor
mov
pusha
push
not
stos
stos
xchg
jbe
xlat
(bad)
mov
xchg
sub
pop
mov
retf
mov
add
mov
push
nop
adc
push
cmp
pop
jg
fcmovu
(bad)
fdiv
add
mov
mov
mov
push
xchg
add
repnz
cmovnp
aam
rol
repz
push
add
jno
mov
or
rsqrtps
fadd
mov
sub
lock
pop
and
mov
cmp
push
jmp
repnz
ror
daa
paddb
push
mov
mov
pop
fcom
inc
jb
fimul
pop
add
fidiv
mov
cdq
sub
test
dec
out
jg
enter
jo
jge
es
xchg
sahf
or
movs
aaa
(bad)
mov
jge
addr16
inc
mov
mov
js
ja
lds
adc
cmp
and
inc
mov
(bad)
in
loopne
xor
ins
pop
cmc
and
lds
mov
test
mov
mov
and
mov
out
pusha
test
inc
jne
pop
aam
lock
xor
push
xor
and
movs
or
push
sbb
test
rcl
mov
xor
dec
loop
pop
mov
sub
retf
jae
xchg
push
cmps
int
dec
(bad)
mov
(bad)
xchg
sbb
adc
or
std
push
add
sbb
xor
and
dec
jg
pop
in
shl
sar
xchg
or
nop
mov
mov
js
loope
mov
fistp
jns
dec
cmp
call
push
scas
nop
pop
dec
or
enter
xor
call
sub
stos
inc
iret
jl
mov
sub
add
js
or
ja
ret
cwde
mov
nop
lahf
mov
cli
add
or
or
cmp
loopne
dec
addr16
xchg
popf
bound
adc
cmc
jg
popf
fs
xchg
imul
mov
mov
pop
enter
mov
cmp
adc
add
push
dec
gs
repz
(bad)
enter
mov
ficomp
nop
(bad)
fldenv
jae
fdiv
push
cmp
or
inc
ror
lds
inc
data16
push
jb
shl
mov
cmp
mov
mov
arpl
push
shl
sbb
inc
imul
loope
mov
(bad)
fistp
int3
fcmovbe
daa
jmp
or
cwde
int
arpl
into
jecxz
dec
inc
add
(bad)
mov
das
mov
push
add
icebp
pop
xor
jb
pop
arpl
aad
add
mov
popf
sti
leave
mov
mov
(bad)
mov
xchg
outs
jle
jl
push
js
int
pop
push
test
pop
aam
pop
inc
int3
enter
mov
mov
add
pop
push
lods
add
or
stc
cwde
mov
cmps
inc
popa
cmp
jns
ja
aam
mov
jecxz
aam
cdq
mov
fwait
sbb
int3
sbb
call
pop
fwait
jne
cs
test
add
mov
(bad)
jnp
nop
mov
jo
pop
test
sahf
add
int
push
mov
arpl
ja
adc
hlt
(bad)
cmc
int
push
push
xor
shl
aam
push
lds
in
es
retf
outs
dec
fdiv
frstor
shl
js
sbb
int
dec
push
mov
iret
(bad)
xchg
sar
cmp
pop
mov
xchg
div
push
or
out
fcom
fsub
jb
mov
cmc
push
outs
inc
xchg
mov
xor
adc
xor
je
xchg
add
sahf
fldcw
xor
stc
add
rcr
(bad)
xlat
push
pop
add
shr
das
in
add
jmp
mov
push
mov
push
call
fild
and
push
or
dec
stc
xchg
stos
ja
leave
mov
jmp
les
push
aaa
mov
movs
mov
pop
rol
or
inc
jae
dec
xchg
push
adc
xchg
jbe
sbb
loope
sbb
sub
jle
loopne
mov
(bad)
adc
adc
stos
(bad)
mov
ret
add
in
push
dec
in
mov
mov
arpl
sub
add
shrd
or
mov
mov
mov
or
and
xchg
mov
dec
mov
dec
ins
cld
xchg
dec
inc
neg
adc
in
imul
mov
movs
popf
or
mov
loopne
add
fwait
(bad)
pushf
cmc
adc
lock
or
test
add
inc
add
dec
mov
cmp
adc
fadd
test
jae
cdq
cdq
in
dec
push
dec
(bad)
mov
sub
jnp
pop
cmp
shr
mov
and
or
mov
jb
ret
or
dec
or
mov
rcr
pop
add
xchg
inc
mov
sub
lahf
cli
fiadd
adc
popf
imul
nop
push
push
dec
jns
imul
test
sbb
and
pop
jecxz
adc
jmp
adc
adc
mov
shl
sti
out
sbb
pop
shl
jle
mov
pop
or
movs
adc
jecxz
(bad)
retf
(bad)
dec
fmul
cdq
jne
inc
fcmovu
xor
mov
jl
lea
sbb
cli
(bad)
xlat
test
in
pop
adc
xor
push
push
xchg
hlt
dec
pushf
push
fcom
pop
fst
xchg
pop
mov
sbb
ret
lds
pop
stos
mov
(bad)
std
std
out
(bad)
jae
xchg
pushf
and
lock
jl
into
lea
leave
cmp
mov
fdivr
ror
xor
fiadd
mov
ret
xchg
push
jbe
adc
pop
jge
mov
ret
xor
fs
js
mov
cmp
adc
call
lods
inc
mov
gs
mov
popa
sub
sahf
jge
jg
or
xchg
cmp
adc
sub
retf
je
or
mov
daa
jnp
xlat
mov
aaa
xlat
(bad)
fwait
sbb
repz
cmp
nop
sub
cmps
cmp
inc
sahf
cwde
outs
jl
mov
sbb
or
or
xchg
or
pop
fmul
or
sbb
mov
stos
clc
movs
dec
in
ror
icebp
push
dec
pop
dec
outs
inc
sbb
sti
pop
pusha
cmp
add
pop
sbb
xchg
push
rcr
xor
aam
mov
xchg
add
mov
fs
add
ficom
sub
hlt
cdq
mov
pushf
sub
cmps
jmp
or
fldenv
cmp
fcomip
sub
lds
xchg
or
add
ja
sub
xlat
push
(bad)
or
and
mov
jae
dec
inc
in
es
addr16
pop
retf
mov
xchg
aam
push
test
jmp
cmps
jo
fs
stos
mov
xchg
cli
mov
fs
adc
pop
scas
out
adc
mov
add
das
test
sub
adc
dec
add
push
xchg
mov
pop
inc
arpl
arpl
xchg
sbb
(bad)
pop
jnp
xchg
icebp
dec
out
sbb
dec
mov
hlt
and
neg
pop
pop
inc
mov
push
lods
jno
fdiv
ret
nop
dec
pop
lock
sbb
xchg
jno
dec
push
xchg
popf
or
xor
adc
fs
cmp
push
ds
pop
jno
in
and
ret
loop
sbb
mov
imul
lods
cmp
retf
push
out
cli
mov
dec
popf
ror
icebp
in
mov
inc
pop
cmc
jle
push
jmp
ds
cmp
inc
test
or
sbb
mov
cmp
pop
and
shl
cmp
pusha
jne
fstp
out
hlt
mov
mov
ret
inc
add
and
out
inc
dec
arpl
mov
ds
shl
xor
jne
xchg
retf
std
daa
(bad)
push
jp
jecxz
mov
out
es
sar
fcomip
dec
mov
gs
pop
xor
sbb
(bad)
xor
or
xor
jle
sub
hlt
loopne
das
or
mov
jp
add
jbe
pop
je
out
mov
or
push
fst
repnz
cmps
mov
mov
nop
xchg
inc
out
shl
mov
and
jge
mov
push
inc
jne
cdq
jl
push
loop
or
xchg
lock
ins
jnp
nop
pop
mov
mov
sbb
out
movs
mov
sub
dec
push
aas
daa
call
jo
jns
movs
and
in
bound
xchg
or
adc
mov
inc
xchg
jb
pop
inc
mov
int
popa
(bad)
inc
or
cmps
jns
dec
mov
mov
mov
stos
mov
loope
or
push
jnp
ror
and
(bad)
bound
addr16
sub
rcr
and
in
dec
pop
push
iret
push
arpl
and
sbb
mov
cmp
mov
icebp
mov
and
aas
mov
mov
mov
icebp
mov
ins
sbb
push
rol
pop
mov
jecxz
bound
out
dec
mov
adc
nop
lock
add
jg
gs
aad
push
mov
lods
bound
fcomp
cmp
cmps
jl
dec
aad
sahf
mov
lock
jns
fnstsw
ins
jae
or
mov
ret
and
sbb
imul
mov
and
sub
pop
jmp
xchg
gs
adc
mov
sub
shr
mov
pop
stos
cli
dec
loop
aaa
jmp
jecxz
and
push
fsub
add
(bad)
rol
call
retf
fst
scas
push
dec
call
ret
std
stc
pushaw
gs
pusha
xor
push
xor
mov
gs
shr
mov
mov
pushf
xchg
test
or
dec
retf
sbb
push
test
xchg
adc
out
jle
call
cli
mov
jge
es
cmp
cmp
test
rcr
gs
xchg
or
lgdtd
cmp
add
ss
push
mov
movs
iret
pop
popf
adc
ror
nop
inc
retf
mov
and
lea
jmp
clc
aas
push
fs
xor
je
xor
pop
mov
or
mov
push
pop
idiv
push
sub
cmps
dec
jnp
pop
bound
stos
mov
sahf
ins
add
fs
scas
je
mov
jl
dec
outs
cmp
push
jb
aad
imul
rcl
ss
jno
and
mov
adc
(bad)
fnstcw
int3
dec
(bad)
xor
inc
dec
sbb
pop
pop
mov
dec
aaa
or
jae
sbb
ss
ins
cmps
inc
je
or
mov
mov
pop
pop
sbb
ds
outs
adc
pop
les
mov
(bad)
mov
inc
dec
xchg
sub
rol
inc
in
stos
rcr
ret
push
sbb
imul
jmp
dec
jb
adc
dec
jle
dec
ror
sbb
and
mov
sbb
push
and
mov
repnz
or
dec
mov
sbb
fcomp
add
iret
dec
inc
retf
ds
and
and
retf
push
int
bound
mov
xor
fs
int
retf
out
pop
sub
arpl
mov
dec
xor
fisttp
(bad)
adc
mov
and
idiv
and
or
mov
aaa
test
fwait
(bad)
jns
(bad)
cmp
cdq
int
stos
jmp
xchg
je
aas
push
ret
jns
bound
push
jp
mov
mov
fwait
jmp
mov
je
cmp
add
ins
daa
cwde
nop
rcl
movs
mov
retf
dec
push
dec
outs
mov
xchg
mov
ds
dec
ret
xor
sub
movs
enter
add
inc
add
ds
xchg
test
jg
dec
mov
movs
loopne
dec
scas
adc
sub
movs
pop
push
sbb
pop
push
int3
nop
sub
cmc
pop
mov
cmps
ja
dec
inc
shl
mov
pop
lock
cmps
aas
pop
pop
rol
mov
sbb
rol
xor
cmp
call
lock
pop
fs
sub
ret
ja
or
test
push
aaa
cmp
inc
push
ins
dec
cmc
add
push
out
mov
xchg
loopne
ins
adc
cli
aas
xor
aam
in
lock
xchg
jg
cmp
aaa
iret
adc
out
pusha
xchg
mov
out
loop
retf
(bad)
jns
out
pop
popf
(bad)
push
jecxz
ror
sar
adc
rcr
jge
sub
daa
lods
and
imul
in
cmc
fld
push
scas
add
enter
cmp
jg
ds
fst
test
aad
add
or
cmps
les
rol
pusha
stos
jbe
xchg
xchg
cmp
(bad)
pop
in
dec
int
into
sbb
ds
out
xor
mov
mov
jmp
ins
mov
addr16
mov
imul
and
sbb
jl
rcr
scas
xchg
lock
pop
ins
xor
push
pop
data16
ret
repnz
mov
out
cmp
pusha
mov
gs
cli
lea
add
mov
or
sub
test
shl
repz
sub
inc
in
dec
push
leave
into
hlt
sub
mov
inc
xor
cmp
jns
in
mov
push
sub
das
sbb
scas
fmul
pop
cmp
sar
jae
inc
xor
jp
retf
mov
adc
xor
fadd
ret
sti
ja
std
mov
inc
push
inc
ficomp
jnp
out
lods
lods
adc
and
inc
jns
outs
mov
stc
jp
cmps
cld
movs
inc
or
push
sar
jmp
stos
int3
jmp
arpl
xchg
pop
adc
and
mov
inc
mov
iret
mov
test
call
not
ja
mov
daa
adc
jnp
je
arpl
fimul
clc
adc
pop
jb
and
scas
lahf
jbe
jecxz
fs
ins
mov
jl
jne
sbb
cmp
mov
movs
cmc
aaa
cmps
rcl
pop
les
sbb
and
ud2
aaa
icebp
cdq
or
push
sbb
push
add
jmp
and
jg
sub
cwde
ror
mov
xor
adc
xchg
ins
mov
test
popf
xchg
push
inc
inc
xchg
and
enter
rep
test
mov
ror
jbe
and
push
mov
movs
xchg
jne
shl
popa
cmp
jo
inc
sahf
in
mov
cmp
sbb
pop
cmp
and
push
sahf
test
or
xchg
movs
jmp
sbb
shl
test
pop
jmp
push
in
lods
test
push
neg
shl
std
xchg
or
hlt
mov
adc
inc
lds
cmps
lods
xor
push
mov
pop
(bad)
jg
rcr
test
ror
dec
ret
mov
mov
jp
inc
xchg
icebp
jb
out
cwde
xchg
mov
rcl
dec
jmp
xchg
loopne
dec
inc
aam
push
pop
outs
daa
push
cmps
outs
outs
or
and
adc
out
mul
jnp
dec
push
sti
lea
mov
push
movs
enter
inc
call
mov
sub
leave
popa
retf
push
data16
rol
imul
gs
xor
add
gs
jge
mov
loope
(bad)
mov
popf
jbe
int3
jno
mov
outs
mov
out
in
iret
and
jge
outs
nop
push
xchg
nop
xchg
or
jbe
das
neg
pop
add
movs
loope
icebp
sbb
aam
jmp
sub
jg
test
xor
dec
pusha
test
pusha
mov
sti
lock
mov
add
jle
ds
out
aas
cmps
lods
test
call
fs
and
lods
adc
xor
or
jno
add
and
xchg
lds
add
jmp
pop
call
mov
push
gs
into
test
sub
(bad)
cdq
outs
dec
mov
in
sti
(bad)
cmp
ffree
and
jns
xchg
das
aam
lea
xor
jno
lds
outs
movs
rcl
lds
ss
fisttp
xor
outs
sbb
jl
adc
dec
arpl
cmc
sub
popf
inc
ins
and
dec
inc
fnstcw
push
fs
cld
push
cwde
rol
xor
and
stos
leave
ret
mov
push
addr16
shl
xor
in
or
repnz
xchg
nop
mov
mov
in
movs
clc
scas
jmp
in
sub
cdq
and
stc
je
mov
repz
mov
stos
das
fdivr
push
cmp
out
mov
xchg
push
outs
mov
fsub
mov
test
(bad)
xchg
arpl
push
cwde
in
sub
lods
or
bound
loope
mov
retf
sbb
aad
(bad)
nop
cmp
out
mov
mov
lods
dec
adc
adc
pop
repnz
hlt
cmp
adc
in
(bad)
adc
sbb
sbb
jge
fs
retw
shl
pop
and
jbe
xchg
in
and
outs
rcr
push
or
adc
(bad)
clc
int
inc
test
xchg
jne
adc
fistp
or
xor
out
in
or
xor
push
aam
pop
pop
call
lock
xor
jmp
xchg
call
mov
xor
xchg
dec
mov
mov
inc
sub
int
das
dec
cmp
mov
push
je
xlat
xchg
mov
mov
rol
ins
neg
fcmovbe
push
xor
call
mov
outs
push
jp
xor
or
adc
jmp
retf
cmps
cli
mov
and
rcl
(bad)
ins
jnp
xor
fst
(bad)
out
add
imul
push
mov
cmp
cmp
and
ins
test
xor
arpl
dec
cmps
cmp
or
mov
push
xchg
stos
mov
add
mov
pop
jle
pop
mov
ins
jne
dec
repz
ds
xor
repnz
mul
cmc
xor
push
pop
cli
adc
push
ss
popa
mov
inc
test
jo
xor
sbb
js
aad
lea
fisubr
and
mov
cmp
bnd
push
push
cmp
shl
sbb
mov
movs
(bad)
clc
retf
jbe
xchg
stos
push
mov
fisttp
jns
jnp
pop
or
cmc
pusha
sbb
jg
in
call
and
lods
push
push
mov
mov
jge
push
adc
push
push
mov
stos
lds
bound
sub
loop
xor
xchg
adc
or
inc
daa
rcr
out
and
lock
cmc
xor
pop
shl
iret
xor
cmps
push
xchg
sub
sub
mov
xor
dec
cli
pop
fbld
xor
sbb
lahf
mov
shr
push
xor
pop
jae
mov
mov
movs
adc
stc
(bad)
mov
(bad)
mov
fmul
arpl
dec
loopne
and
cmc
or
jbe
add
mov
ins
jbe
stc
imul
addr16
add
inc
sub
ret
push
test
cmc
popf
clc
test
cmp
xchg
in
ins
sar
jno
pop
fs
fnstcw
stos
retf
inc
inc
fs
pop
sub
stos
mov
dec
(bad)
adc
mov
sbb
lahf
cs
aad
xor
jo
ins
js
xor
jmp
push
inc
fdivr
dec
jo
enter
and
loope
or
inc
sar
lds
fdiv
cmps
in
inc
jb
cmp
out
pop
mov
mov
dec
adc
icebp
mov
nop
dec
mov
push
mov
adc
push
les
pop
ins
mov
inc
mov
test
inc
ret
test
and
enter
jno
enter
cmp
or
and
sti
ins
jbe
retf
inc
out
mov
call
sub
lahf
mov
xor
int
(bad)
push
sar
lds
and
sub
xor
bound
out
adc
das
mov
push
push
jg
and
mov
sbb
xchg
scas
jp
cmp
push
rcl
jno
mov
in
sar
scas
xor
(bad)
scas
dec
xchg
sti
aaa
outs
jmp
scas
cmp
inc
pop
push
pop
cs
movs
in
lahf
test
bound
hlt
fld
sub
and
lods
fucomip
sub
or
test
cmps
pop
cld
jp
stos
inc
movs
dec
add
xor
push
xchg
add
pop
add
or
cmps
cli
pop
jnp
ds
pushf
and
xor
addr16
jb
imul
pop
sbb
dec
pop
jmp
inc
dec
(bad)
or
dec
jno
rcl
and
add
dec
ins
ret
(bad)
jo
and
cs
cdq
mov
xchg
fldl2e
outs
cwde
jp
outs
fnsave
retf
movs
iret
mov
push
push
out
mov
arpl
sbb
iret
shr
fsubr
leave
sbb
pusha
daa
push
sub
sub
jbe
retf
xlat
dec
xchg
stc
sub
jmp
pop
push
xor
mov
pop
hlt
inc
inc
pop
mov
mov
mov
push
or
dec
lahf
inc
ror
lock
sub
or
lock
xchg
lods
dec
push
mov
fwait
les
cdq
cmp
push
pop
lods
adc
xchg
xlat
je
ds
js
mov
(bad)
(bad)
cmp
cmp
loope
(bad)
cmp
pop
cmps
shr
ins
sbb
pop
std
push
add
les
out
mov
mov
fist
arpl
inc
cmps
in
imul
stos
inc
iret
imul
test
(bad)
enter
mov
jge
sar
stc
stos
mov
pop
mov
xor
push
out
add
aad
(bad)
in
arpl
fbstp
enter
imul
loope
push
pusha
je
retf
mov
mov
fisubr
xchg
rol
popf
push
loopne
div
shl
mov
adc
xor
sbb
mov
mov
inc
test
call
ins
ja
rol
movnti
mov
xchg
sbb
lds
dec
stos
test
addr16
push
cld
popa
fmul
call
aam
pop
in
fstp
push
jp
jne
inc
lock
jl
xchg
sub
shr
and
mov
retf
lahf
es
out
pop
push
adc
outs
pop
pop
pop
popa
sub
jl
sbb
shl
and
dec
pop
mov
stos
sbb
jle
das
sbb
pusha
sbb
pop
repz
stos
mov
pop
out
sbb
pop
push
cmp
out
push
adc
sti
aad
les
inc
shr
fcomp
xchg
int
pop
pop
and
lods
push
cli
imul
jmp
push
rcl
mov
outs
mov
sub
xor
xor
out
mov
pop
xor
xor
enter
cmp
jg
jno
imul
push
int3
in
out
inc
(bad)
cmps
mov
xchg
jg
je
jns
adc
mov
sar
ins
pop
adc
call
out
sub
retf
call
aam
adc
(bad)
sti
xchg
sar
in
xchg
popf
pop
pop
sbb
or
aam
test
mov
es
mov
mov
inc
(bad)
push
ins
pop
cwde
jl
in
dec
fdiv
popa
jl
scas
lods
jmp
in
xlat
mov
or
push
pop
or
ins
movs
jnp
add
sbb
add
pop
xor
fistp
out
stc
out
sub
jle
leave
jb
gs
fcom
cmp
stos
dec
loopne
cmp
(bad)
lods
mov
call
(bad)
loope
inc
ror
loopne
stos
sbb
inc
stc
xchg
mov
cmps
das
pusha
jae
mov
and
retf
dec
ret
call
lock
dec
iret
(bad)
and
out
mov
int3
lds
xchg
data16
jp
mov
push
mov
adc
out
fcom
out
cmp
mov
mul
mov
lea
sbb
js
fwait
rep
hlt
mov
lods
sbb
lock
scas
fs
pop
(bad)
jmp
frstor
lds
and
dec
jne
mov
mov
lods
mov
sti
cmps
fld
mov
xchg
jne
fs
pop
ds
(bad)
loop
mov
mov
out
popw
out
lahf
inc
jmp
rcl
push
out
mov
cmp
mov
ret
cmps
fnsave
jb
mov
ficom
movs
out
adc
xor
shl
sbb
ins
mov
aam
idiv
data16
aaa
out
jg
das
jecxz
mov
fisttp
sbb
imul
cli
js
xchg
xchg
push
mov
cli
enter
lods
inc
mov
add
fiadd
xchg
cs
nop
outs
fstp
sub
in
std
jns
in
bound
push
dec
jp
mov
cmps
jge
xor
push
mov
push
sbb
repnz
ror
xchg
retf
iret
add
dec
(bad)
sub
push
loop
and
pop
adc
push
in
ret
pop
(bad)
mov
pop
sub
out
retf
jno
sbb
(bad)
xchg
cmc
es
xlat
out
inc
(bad)
pushf
xor
mov
xchg
mov
popf
rol
pop
inc
add
or
imul
mov
mov
and
gs
add
sti
xlat
mov
ret
push
call
push
cmp
push
ret
mov
lock
dec
loop
xlat
pop
mov
or
and
fs
pop
inc
js
(bad)
lods
mov
clc
std
pop
sub
das
cwde
pop
ficom
popa
push
jl
lods
mov
pop
xchg
mov
je
add
neg
movs
or
mov
ret
cmp
mov
jmp
jae
push
dec
mov
push
push
xchg
dec
or
(bad)
out
(bad)
cs
xor
cmp
cdq
mov
repz
retf
jns
imul
sar
mov
loop
pop
cs
stos
nop
cmps
dec
push
adc
adc
pushf
loop
shl
jl
cmps
xor
arpl
dec
mov
jb
stos
adc
lea
faddp
sub
adc
loop
mov
daa
dec
xchg
inc
test
xor
js
xchg
(bad)
cmp
xlat
xlat
fucomi
adc
inc
mov
lea
xchg
jg
mov
cmp
xchg
jp
and
fwait
mov
pop
push
xchg
out
addr16
mov
dec
pop
(bad)
lds
and
cmp
ror
pop
pushf
out
(bad)
and
cmp
jp
xchg
fs
(bad)
mov
mov
pop
mov
or
fstp
outs
inc
mul
out
push
inc
jne
or
stc
inc
jno
pop
xor
test
add
rcl
bound
pop
or
clc
in
cdq
scas
out
add
inc
mov
jl
dec
addr16
mov
jge
push
or
jns
daa
enter
or
loope
sub
push
cmp
jp
test
add
and
jmp
clc
xchg
sub
inc
sti
mov
sub
mov
leave
mov
mov
add
mov
or
inc
cwde
sbb
pusha
or
or
cdq
mov
and
xchg
push
jl
xor
dec
jne
repnz
mov
and
out
dec
push
jmp
sub
mov
mov
loopne
xor
dec
inc
icebp
jb
out
leave
or
inc
inc
(bad)
xchg
add
add
xchg
les
xor
add
sub
dec
adc
out
ds
xchg
cmps
(bad)
call
lods
imul
xor
movs
mov
mov
(bad)
cmps
inc
mov
mov
push
push
int3
and
shr
fadd
neg
sti
adc
mov
cmp
out
scas
mov
sti
xchg
pop
psubsw
jmp
gs
leave
repz
jmp
(bad)
loopne
or
mov
lods
pop
out
(bad)
call
or
adc
add
sar
test
dec
push
mov
cli
(bad)
sbb
mov
cli
hlt
add
sub
add
jl
scas
add
adc
pop
pop
retf
sahf
sub
pop
jmp
xor
push
shl
or
push
ret
repnz
mov
test
cmp
es
sub
(bad)
repnz
mov
fidivr
inc
pop
ss
popa
rcl
push
(bad)
pop
nop
sub
sbb
lea
cmp
xor
fcmove
sub
test
cmovns
dec
dec
mov
or
repz
dec
cmc
in
mov
mov
cmc
lahf
jo
lods
dec
(bad)
jno
(bad)
mov
enter
(bad)
out
lods
fwait
mov
aaa
mov
outs
sbb
fdiv
cdq
sahf
imul
fcom
and
and
jmp
(bad)
dec
jl
sub
inc
mov
in
ret
pop
adc
outs
add
stos
cmp
in
sub
pop
mov
mov
sub
pop
pop
and
loope
cwde
sbb
into
outs
inc
xor
xchg
sbb
test
fldenv
jecxz
mov
stc
addr16
sub
sbb
movs
sbb
push
dec
cmp
outs
fsubrp
call
xchg
rol
inc
pop
push
adc
(bad)
repz
std
stc
mov
ins
mov
or
dec
mov
std
mov
js
push
sub
(bad)
imul
sbb
mov
adc
ds
sub
push
cmp
sahf
dec
mov
ror
or
add
ins
mov
xchg
adc
mov
lds
inc
cmp
rcr
fmul
xlat
xchg
aad
mov
and
push
cmps
and
fist
mov
arpl
retf
jae
xchg
out
dec
sbb
or
push
mov
call
std
push
inc
test
adc
cmps
sbb
aaa
adc
pop
push
pop
aad
add
test
inc
add
add
imul
cmp
dec
daa
div
pushf
push
and
test
jp
mov
dec
adc
scas
or
mov
test
ror
add
(bad)
iret
add
mov
mov
(bad)
push
lods
shl
not
dec
sbb
pop
cmp
in
sar
jp
add
or
(bad)
mov
out
pop
push
push
arpl
jmp
stos
scas
cwde
sub
dec
push
fs
and
or
inc
cs
lods
pop
cmps
in
arpl
es
add
mov
sahf
arpl
scas
ror
sub
jae
mov
das
pop
inc
mov
movs
or
cmps
fs
xchg
add
cs
add
outs
xchg
xor
repz
push
or
jge
dec
mov
mov
cdq
imul
push
fbstp
mov
adc
movs
jbe
dec
dec
daa
and
inc
adc
lock
push
adc
in
in
push
out
push
push
into
cmp
aaa
hlt
mov
test
in
sti
push
js
loop
sbb
push
push
lods
and
and
int
inc
and
mov
scas
ret
mov
or
sub
cmc
bound
cs
sub
or
jb
(bad)
je
out
mov
inc
jmp
xchg
and
mov
cmp
sbb
jnp
dec
xor
push
shl
lahf
jbe
mov
(bad)
cmp
sub
pop
xchg
int3
rol
psrlq
xchg
jmp
stc
xor
fld
add
sbb
lods
cdq
movs
add
sbb
out
rol
jmp
outs
add
lods
xchg
bound
(bad)
and
ja
stos
into
movs
aam
lock
out
adc
sbb
cmp
into
xor
aad
xor
retf
(bad)
outs
or
push
mov
sbb
mov
adc
or
rcr
in
sahf
fstp
clc
fcom
jge
mov
loopne
and
sub
and
gs
mov
addr16
jp
xchg
xor
inc
clc
adc
cmc
pushf
int
pop
sbb
ja
xor
(bad)
mov
xor
retf
dec
lea
pusha
fsub
out
jno
in
repnz
mov
jg
scas
add
retf
jae
xchg
push
sbb
call
sub
inc
cmps
jecxz
push
(bad)
call
call
jge
retf
ret
enter
cmc
push
mov
dec
inc
push
add
dec
push
test
pop
stos
xchg
into
and
movs
mov
and
aas
mov
call
fiadd
mov
xor
cmp
fbstp
out
gs
leave
pusha
mov
mov
ja
xchg
in
add
clc
push
shl
jns
rcr
shl
mov
cmp
inc
stc
call
jnp
mov
cdq
call
cmp
pop
dec
dec
mov
fild
std
inc
add
adc
nop
adc
sbb
mov
rol
sar
nop
sub
shl
dec
cmp
jae
shl
lods
mov
call
mov
add
mul
inc
xchg
fldenv
loope
repnz
and
imul
sbb
push
ficomp
ds
pop
cld
ins
add
retf
out
adc
aad
xor
mov
cmp
and
add
dec
xchg
fiadd
repz
mov
enter
mov
adc
mov
pusha
imul
sahf
mov
sbb
scas
fstp
test
int3
retf
cmp
(bad)
mov
inc
loop
xchg
popf
mov
dec
inc
add
cmp
std
sbb
sysenter
dec
sti
aam
mov
mov
test
inc
adc
push
inc
mov
mov
add
push
fdivr
call
push
fs
into
in
mov
in
test
pushf
xor
lds
xchg
xor
inc
imul
or
popa
mov
lahf
cmp
mov
mov
jmp
test
shr
arpl
jne
lods
jne
ja
jns
dec
clc
fld
xchg
mov
test
mov
mov
loopne
outs
(bad)
fld
cmp
shl
inc
test
jmp
and
shr
fcmovnu
mov
mov
loopne
xchg
movs
add
add
not
bound
sub
loopne
adc
dec
movs
shl
xchg
inc
mov
cmp
aad
push
jns
(bad)
addr16
inc
xlat
push
sub
mov
jb
inc
sub
mov
icebp
jno
xchg
fild
xor
add
pop
pop
push
rcl
dec
mov
ins
adc
and
push
ins
jp
mov
das
icebp
(bad)
out
loop
fstcw
fistp
pop
jae
pop
push
stos
push
mov
xchg
pop
adc
xor
jecxz
stos
mul
out
fbld
(bad)
ins
(bad)
pusha
jae
adc
and
cmp
inc
mov
pop
sub
mov
ja
pop
xor
outs
push
test
xchg
xchg
sahf
xchg
jae
repnz
iret
mov
xchg
inc
retf
and
push
adc
jecxz
leave
add
xchg
std
scas
xchg
lock
sbb
or
xchg
mov
repz
lahf
push
mov
dec
jecxz
scas
or
mov
xchg
push
mov
pop
mov
bound
stos
mov
(bad)
dec
lods
xor
add
add
stos
jge
ret
mov
loope
push
mov
mov
ins
mov
jp
rcr
xchg
mov
popf
aad
movs
mov
mov
mov
cwde
and
fistp
and
or
mov
das
outs
sbb
dec
in
sub
jecxz
mov
daa
sub
(bad)
xchg
push
(bad)
xchg
fmul
cmp
xchg
mov
(bad)
out
rcl
pop
out
sbb
jno
sbb
lods
mov
pop
dec
call
xor
push
cmc
mov
nop
cdq
xor
or
repz
or
int
adc
sub
inc
adc
sbb
push
ins
(bad)
pop
test
loop
(bad)
movs
xor
aad
xchg
loop
sbb
mov
inc
iret
xchg
xor
rol
push
fsub
sbb
test
sbb
call
lods
leave
aad
ins
xor
aad
(bad)
cmps
ret
dec
jae
mov
add
push
mov
cmp
cwde
(bad)
and
lods
adc
lods
imul
push
mov
lds
leave
or
push
xchg
and
out
hlt
movs
ins
cmp
push
and
pop
mov
clc
mov
inc
jmp
ret
inc
rep
and
mov
(bad)
xlat
cdq
push
or
imul
(bad)
cvtpi2ps
inc
cmp
stos
(bad)
sbb
les
and
xor
mov
mov
ins
out
add
jmp
pop
fwait
sti
xchg
xchg
je
out
jne
push
and
repnz
jne
dec
and
stc
ja
xchg
cmps
into
fxch
xlat
mov
xor
sahf
adc
cmp
leave
sar
inc
call
rcr
push
leave
dec
into
imul
fwait
xchg
inc
loopne
imul
je
call
push
adc
aas
(bad)
push
jl
pop
std
mov
or
repnz
mov
shl
stos
enter
dec
cmp
jl
jle
ret
jne
jecxz
jno
dec
retf
clc
xchg
push
ins
out
and
test
jl
sub
sbb
imul
adc
in
mov
imul
mov
cdq
movs
pop
inc
cmps
imul
out
inc
fdivr
or
or
adc
popf
imul
movs
fwait
(bad)
xchg
add
std
xchg
push
and
adc
sar
aad
rdmsr
push
and
jmp
test
jp
jg
inc
jne
cmps
into
mov
fwait
iret
call
pop
fbld
mov
push
aas
in
adc
jmp
xor
mov
jmp
dec
and
aad
pop
or
ret
pop
test
cli
imul
test
stos
pushf
jl
xor
sbb
es
loop
call
mov
mov
ds
dec
push
movs
push
and
mov
aaa
fidiv
sub
mov
test
mov
xor
rol
lods
push
adc
push
repz
pop
push
and
pop
in
mov
mov
push
pop
and
idiv
pop
cs
ins
or
xchg
aaa
add
push
add
xor
hlt
cmp
movs
pop
sti
xor
mov
sbb
adc
xor
fimul
mov
outs
gs
or
(bad)
mov
les
sbb
nop
mov
ja
test
pop
(bad)
xchg
jno
cmp
scas
and
sub
sub
cmp
ffree
mov
imul
into
retf
in
out
cli
mov
add
or
out
sbb
stc
(bad)
cld
loopne
dec
jb
mov
sbb
dec
mov
push
mov
pop
mov
int3
sbb
push
hlt
jb
jmp
int3
pop
or
clc
push
retf
jmp
pop
out
aam
mov
rcl
cld
scas
lods
shr
movs
fs
mov
shr
jmp
retf
iret
add
ss
je
xchg
xor
mov
fs
sub
jge
jns
fwait
leave
push
ret
sbb
ret
aam
add
bound
retf
push
xchg
jb
jl
mov
mov
addr16
mov
test
adc
mov
sbb
jmp
jmp
fld
fwait
dec
and
sbb
cmp
inc
or
inc
pusha
cdq
ds
adc
das
mov
adc
sub
les
jecxz
pop
or
je
cmps
retf
stos
popf
xchg
dec
sub
int
xlat
mov
je
jnp
mov
loope
cmc
jmp
js
cmp
repz
sar
mov
popa
inc
sub
ret
mov
jmp
push
sub
icebp
loopne
je
mov
cmp
dec
test
xor
jae
pop
jge
fsubrp
jne
loopne
sub
ja
movs
mov
push
repz
ins
mov
fstp
xor
push
mov
sbb
fs
retf
out
lahf
jo
rol
and
cmp
(bad)
xor
and
add
imul
mov
or
push
sbb
sub
jmp
popf
cmovg
sbb
aaa
xchg
mov
dec
mov
popf
push
retf
mov
hlt
and
out
cmp
loope
icebp
gs
das
add
sub
push
icebp
push
sub
push
mov
lods
mov
inc
adc
cwde
ins
enter
movs
add
lods
nop
cmp
xchg
pop
movs
les
and
inc
enter
sbb
mov
inc
inc
dec
adc
pop
add
mov
in
test
aas
sbb
sbb
xchg
add
repnz
fdivr
push
inc
or
(bad)
in
push
or
idiv
rol
inc
in
fs
imul
xor
inc
loopne
pop
mov
add
jae
arpl
sbb
ins
or
js
mov
sbb
mov
mov
push
jno
frstor
stos
jp
lea
sahf
mov
inc
std
sti
cmp
cmp
cmp
xor
or
dec
ret
push
push
sbb
jno
gs
shl
fs
mov
setb
std
push
or
xchg
pop
dec
mov
xchg
dec
sub
push
add
jb
scas
fidivr
xor
pop
loope
test
add
mov
mov
push
xchg
mov
loope
jb
popf
adc
fsubr
je
cmp
sbb
xor
cmp
mov
inc
sbb
imul
push
lahf
cmp
jno
push
cmp
sub
ins
dec
aaa
imul
mov
or
jns
xor
push
fcmovbe
sbb
jmp
arpl
cmp
jle
jge
rcr
dec
push
je
pop
jae
ins
mov
ficomp
sub
rol
cmp
sbb
outs
stc
fistp
push
push
sub
add
push
ror
nop
pusha
mov
sbb
shl
mov
inc
je
xor
push
jmp
jne
mov
cmps
not
das
mov
icebp
loop
and
nop
jp
(bad)
pop
cs
outs
mov
inc
pop
cdq
cli
repz
mov
imul
ficomp
stos
or
mov
std
int
mov
fst
(bad)
mov
js
mov
push
mov
jbe
cmps
js
(bad)
fldenv
(bad)
rol
sbb
push
sub
dec
inc
fst
push
arpl
inc
mov
inc
adc
push
gs
enter
popf
(bad)
adc
cmp
mov
sbb
(bad)
stos
adc
pop
cmp
jge
xchg
out
fwait
dec
stc
dec
sar
jle
je
imul
mov
mov
bnd
sbb
dec
sub
scas
ret
adc
not
xchg
ins
lods
(bad)
jbe
stos
data16
mov
pop
adc
sti
and
mov
mov
sub
dec
int
std
cmp
cmp
shr
(bad)
iret
fisubr
and
popa
xchg
inc
call
in
or
mov
neg
dec
adc
add
pushf
test
and
call
jmp
mov
fwait
cmp
shl
push
aas
add
push
fcomp
mov
or
push
(bad)
sti
inc
repz
add
mov
lea
cmp
sub
cmps
movs
adc
rcr
cmp
sbb
and
clc
jmp
pushf
xor
movsx
in
test
into
outs
stos
sbb
call
mov
xchg
outs
into
in
inc
pop
imul
ss
fld
and
sbb
mov
push
test
bound
ins
adc
out
push
push
imul
jb
inc
adc
(bad)
push
and
mov
push
repnz
pop
ret
rol
dec
sub
shl
mov
dec
popa
sti
test
inc
test
mov
jecxz
dec
test
mov
or
mov
loop
adc
mov
out
push
pop
mov
pop
sbb
lock
push
fldcw
imul
rcr
imul
mov
repnz
sbb
push
mov
stos
push
and
jecxz
jns
pop
mov
repnz
nop
dec
popa
cwde
test
pop
push
push
loopne
leave
retf
(bad)
mov
cs
fbld
lods
mov
repz
mov
cld
push
adc
(bad)
mov
cmp
jae
fs
jne
push
int
xor
repz
dec
mov
xor
stos
and
add
push
clc
out
sub
push
push
inc
jg
jg
dec
xor
fisub
cmps
sbb
cld
lahf
xchg
sbb
cdq
xchg
out
retf
jmp
and
cmps
sar
adc
inc
(bad)
mov
jmp
adc
pop
out
mov
jo
pop
dec
push
fs
push
sbb
inc
aad
dec
out
add
sbb
daa
dec
jne
fidiv
mov
dec
mov
cmp
test
(bad)
lods
dec
popf
hlt
adc
xor
add
repnz
add
mov
mov
pushf
pop
xor
test
jne
mov
and
push
adc
mov
outs
loope
and
xchg
gs
das
xchg
mov
mov
mov
jo
mov
stc
pusha
add
xchg
push
xor
lds
movs
cmps
and
pop
mov
inc
inc
sbb
rcr
mov
jmp
or
retf
addr16
fcmovne
fwait
cmc
jecxz
in
(bad)
mov
xlat
push
mov
jns
mov
retf
xchg
jge
es
jmp
xchg
cld
ss
push
dec
sub
xchg
(bad)
cmp
ret
jecxz
jmp
sbb
fdivr
daa
pop
int3
or
call
cld
hlt
push
pop
test
fidiv
not
xor
push
adc
cmp
pop
sub
sar
(bad)
mov
jne
ins
sbb
ins
out
and
inc
mov
repnz
add
dec
retf
push
scas
or
mov
adc
push
cmp
xor
sbb
scas
imul
or
pop
cdq
mov
push
out
rol
hlt
imul
push
in
std
mov
or
(bad)
adc
pop
out
icebp
fnstenv
add
and
cmc
push
outs
int3
mov
dec
stos
sbb
js
lock
std
dec
pop
test
cmp
aas
repnz
pop
(bad)
sti
jp
xchg
int3
adc
dec
icebp
dec
retf
xor
popf
push
jge
mov
mov
test
xchg
loopne
cdq
adc
dec
fs
in
jg
sub
in
call
out
adc
mov
push
jne
jmp
pop
out
ret
popf
mov
fs
push
ins
jg
and
cmc
loopne
dec
imul
or
fst
mov
xor
mov
or
adc
das
in
iret
and
mov
inc
call
and
ins
cmp
add
jge
cmp
or
pop
clc
dec
(bad)
bound
mov
cmps
mov
push
inc
inc
mov
inc
inc
cdq
xchg
mov
stos
loope
das
mov
mov
shl
cwde
xchg
dec
pop
mov
adc
(bad)
gs
and
mov
add
repz
push
gs
aas
pop
in
cwde
test
add
stos
pushf
fs
sbb
les
out
adc
push
lahf
mov
jg
sti
mov
add
jmp
inc
or
mov
xor
popa
inc
fcom
rcl
pop
out
leave
xchg
xor
enter
cmp
(bad)
(bad)
and
push
mov
fisttp
rcl
inc
pop
push
dec
or
add
out
sbb
push
mov
cli
mov
les
jp
(bad)
not
adc
loop
or
addr16
xor
cmp
(bad)
into
mov
xchg
mov
pop
test
cmp
aad
or
jmp
inc
pushf
add
pop
popa
std
adc
adc
push
pop
mov
ficom
pop
push
and
jmp
jb
in
nop
sbb
sbb
mov
mov
and
and
pop
mov
sahf
dec
(bad)
sti
adc
mov
mov
jnp
js
adc
mov
iret
hlt
pop
jl
outs
sar
adc
sti
jne
stc
jle
jae
add
push
pop
push
mov
inc
jle
cli
and
stos
shr
lds
mov
sub
jmp
jg
xor
test
jnp
ds
sub
mov
or
and
mov
mov
sub
mov
lods
lahf
jge
cmp
and
xchg
jnp
add
pop
sbb
scas
push
pusha
das
jns
lods
int
jae
outs
inc
mov
shr
sub
fst
mov
int
add
shl
(bad)
std
icebp
pop
xor
fdivr
shl
retf
movsx
stc
test
out
je
push
int3
arpl
jns
retf
aas
jl
lahf
add
xor
outs
pop
jmp
sbb
inc
pusha
xchg
or
adc
adc
retf
fisubr
mov
movs
mov
movs
fs
cmp
gs
in
add
xchg
xchg
into
inc
ins
or
add
test
icebp
inc
or
cli
pop
inc
lock
test
scas
leave
sbb
stos
test
clc
add
adc
stos
sbb
out
rol
cmp
clc
rol
push
jb
fidiv
std
int
xchg
sbb
cmp
data16
inc
(bad)
cld
loopne
cli
mov
push
aas
mov
push
lea
outs
int
adc
mov
sbb
push
fstp
leave
cmp
in
mov
cli
xchg
outs
pushf
xchg
xor
xor
enter
sbb
stos
gs
int
pop
inc
aas
xchg
push
rcr
jmp
inc
sbb
sbb
popf
pusha
dec
js
mov
call
ins
sub
mov
pop
fwait
inc
mov
ins
xor
shr
aas
cli
ins
and
scas
add
cmp
xchg
inc
ss
and
sahf
push
pushf
cwde
test
aas
dec
pop
ficomp
imul
fadd
loope
mov
cmp
mov
rcl
imul
fwait
inc
enterw
scas
gs
pop
inc
inc
stos
jno
jnp
mov
mov
sub
mov
out
and
rol
mov
push
mov
and
ins
or
and
add
retf
sbb
scas
es
push
pop
push
and
ficomp
retf
adc
jmp
sbb
inc
in
adc
shr
pop
imul
in
mov
popf
push
shld
mov
repnz
xor
fcmovb
stos
dec
or
je
psubsw
stos
xchg
bound
fld
inc
aaa
mov
cmps
pop
pop
iret
jbe
pop
hlt
push
jo
push
push
movs
and
dec
mov
adc
retf
mov
fistp
adc
xchg
pusha
push
mov
or
lods
push
lock
sub
sub
mov
popf
out
dec
leave
pop
cmp
pop
mov
mov
add
push
aaa
mov
xor
popa
stos
push
inc
mov
(bad)
xchg
xlat
mov
sbb
ja
sbb
mov
and
push
ja
adc
loopne
xlat
aas
icebp
adc
xor
push
jmp
jecxz
hlt
sub
sub
xchg
imul
inc
add
int3
sbb
sub
not
jmp
pop
fcomp
xchg
outs
into
adc
rol
in
icebp
mov
push
out
cli
out
sbb
xchg
inc
out
or
xor
mov
sub
pop
sahf
sbb
cs
enter
cmps
ja
fwait
push
pop
repz
hlt
dec
xchg
lods
push
mov
test
sbb
pusha
arpl
mov
bound
xor
xchg
mov
xchg
scas
ret
js
stos
push
xchg
cli
or
dec
jp
sbb
cld
mov
adc
or
sti
adc
or
jp
jl
push
hlt
xchg
xchg
stc
sub
mov
retf
add
stos
ja
inc
ret
mov
mov
jne
lods
sub
pop
pop
and
enter
(bad)
sbb
stos
sbb
jge
aaa
ficom
push
cmc
xor
shr
sub
out
and
fisttp
sbb
lds
out
inc
dec
shl
xlat
dec
jb
or
xchg
adc
loop
sbb
lods
in
mov
int
pop
fwait
xor
cs
mov
data16
retf
shl
std
ds
not
cmp
cmp
xor
test
cwde
mov
mov
jl
mov
daa
ins
jmp
outs
jmp
pop
(bad)
lock
leave
dec
xor
mov
or
test
adc
push
fcomp
je
mov
jne
adc
jge
sar
adc
fidiv
inc
sub
inc
xchg
ss
mov
jno
call
and
inc
sbb
test
je
out
leave
xor
jne
push
movs
and
cmp
push
pop
rol
add
scas
mov
push
cmp
pop
adc
cmps
fsub
adc
inc
ret
loope
retf
mov
js
hlt
in
das
js
test
mov
arpl
mov
dec
pop
dec
dec
scas
pop
lods
js
mov
push
dec
xchg
je
pushf
retf
call
add
movs
and
fs
test
mov
and
(bad)
mov
mov
(bad)
push
pop
fst
push
sub
cmp
or
call
xlat
push
adc
call
lahf
out
add
sbb
scas
xor
cmc
mov
ins
add
add
(bad)
pop
pop
pop
inc
std
fisttp
loope
or
mov
leave
sti
inc
sti
adc
mov
jae
push
aaa
xchg
aam
mov
jne
inc
mov
jns
mov
imul
or
pop
push
js
enter
add
or
jae
scas
imul
cmovne
inc
push
fs
mov
(bad)
xchg
xor
jb
cmp
cdq
je
ins
cmp
lahf
mov
jbe
das
ins
(bad)
repz
(bad)
push
and
bound
push
clc
xor
repnz
retf
sbb
jno
cmp
or
pop
loop
fld
or
rol
lods
jmp
je
fidivr
fisubr
mov
mov
aad
daa
xor
imul
lea
jmp
mov
int3
ss
adc
sbb
fadd
rcl
(bad)
and
mov
enter
or
lds
jmp
call
mov
aam
jne
push
xchg
cs
repz
popf
test
leave
jnp
ss
call
cmp
bound
cmp
test
sub
bound
jbe
data16
in
inc
mov
add
or
add
cdq
add
jae
cmp
je
inc
adc
and
fcom
push
and
retf
xchg
retf
xor
cmps
into
rcl
pusha
inc
sbb
lock
or
xor
sbb
push
ror
les
lea
jo
and
inc
mov
fistp
push
cmps
arpl
and
mov
jno
push
xchg
push
cld
aam
xor
add
mov
fistp
push
xlat
dec
xlat
ror
test
or
adc
pop
xchg
add
sub
cmp
imul
sub
mov
or
fdiv
sub
fcom
push
xchg
xor
xchg
or
imul
xchg
test
adc
cmp
call
(bad)
shl
fcmovnu
xchg
cmp
xor
into
cli
jmp
jb
lea
ret
jbe
jne
adc
mov
movs
sbb
inc
test
adc
sbb
cmp
das
movs
jb
clc
jge
(bad)
xor
cld
in
shl
cmp
lds
or
fild
push
xor
(bad)
mov
out
jge
push
xor
adc
xchg
call
shr
xlat
ret
pop
inc
mov
sub
ins
les
fldenv
jno
out
aaa
adc
bound
mov
das
pop
cmp
sub
sub
pop
stos
div
jmp
pop
add
push
into
fdivr
dec
xchg
bound
sub
sbb
pusha
cli
pop
dec
lock
pop
imul
daa
xchg
(bad)
mov
test
rcr
sbb
imul
or
xchg
jge
xchg
add
pusha
mov
jns
cli
idiv
fsub
push
pushf
cmp
ret
pop
ss
aas
jp
lea
loopne
sbb
cmp
and
add
cmps
mov
in
pop
dec
and
push
mov
adc
jno
cmps
ja
pushf
xor
xor
mov
repnz
into
mov
and
mov
xchg
lods
fcomp
xor
in
mov
(bad)
addr16
mov
out
push
retf
mov
retf
dec
ins
adc
xor
pop
cmovp
push
data16
cli
arpl
xchg
jnp
js
dec
pop
jbe
dec
out
cmp
jns
cmp
movs
idiv
mov
(bad)
jne
dec
(bad)
clc
ret
mov
nop
push
jo
xchg
jnp
ins
adc
sub
scas
cmp
mov
cmp
inc
mov
or
fucomp
lahf
xchg
sub
test
fwait
icebp
jae
addr16
bound
movs
or
in
xchg
fistp
and
test
xchg
movs
sbb
dec
and
arpl
inc
xchg
loopne
sar
mov
adc
sbb
add
inc
cmc
dec
add
shl
jecxz
xchg
js
cmp
nop
jp
cmp
xchg
sahf
std
lock
aad
cmp
xchg
test
pusha
aaa
jmp
push
nop
ja
mov
je
les
mov
fdivp
push
mov
jo
inc
cmp
retf
and
or
inc
mov
push
and
mov
sub
adc
pop
dec
jl
cmc
retf
cwde
sar
mov
imul
rol
fmul
mov
xor
into
ficom
int3
fsub
ins
mov
pushf
dec
xor
inc
mov
mov
dec
lahf
pop
arpl
stos
das
mov
outs
jnp
fisubr
es
icebp
add
and
shl
xor
lea
out
xchg
inc
push
sbb
push
ds
jp
pextrw
cmp
push
inc
scas
sahf
icebp
int
loop
imul
sbb
test
xor
je
jp
mov
xchg
call
xor
jmp
mov
adc
mov
fdiv
dec
mov
mov
sub
call
pop
or
mov
jl
xor
dec
push
add
and
and
outs
out
sahf
imul
xor
dec
sbb
add
adc
stc
arpl
cmc
fbld
push
dec
or
push
mov
xchg
int3
jg
sub
popa
imul
jns
call
dec
push
jle
jg
aaa
xor
fdiv
mov
das
clc
mov
mov
test
icebp
pusha
jmp
in
add
dec
je
ins
mov
test
imul
test
xchg
or
push
lea
int
or
jne
sbb
sub
cld
push
aam
fs
or
data16
cmp
ret
and
jmp
sub
xor
adc
not
inc
loopne
xchg
fld
mov
movs
inc
(bad)
fsubr
adc
int3
into
movs
push
sub
sub
cmps
adc
xor
pop
out
xlat
mov
clc
mov
xchg
in
loopne
in
pop
sub
int
dec
lock
or
cmps
(bad)
retf
out
cld
sti
push
fldcw
ja
inc
mov
adc
and
cmp
mov
bound
sub
pop
retf
mov
adc
and
das
sbb
test
ds
fwait
int
mov
mov
sti
cmp
ret
sbb
shr
leave
push
push
test
sbb
cli
loop
rcl
in
lock
imul
add
push
pop
les
or
and
mov
iret
mov
aaa
mov
push
pop
stos
mov
and
int
xchg
cmps
add
or
dec
dec
lds
fimul
faddp
lock
out
aad
dec
sbb
adc
xchg
inc
lahf
mov
cli
and
stos
cmps
mov
int3
in
fcomp
inc
mov
jmp
psllw
ror
cmc
xor
jb
xchg
fmul
dec
cmp
jnp
mov
lods
pop
inc
ret
mov
inc
or
ret
and
stos
in
sub
or
or
mov
mov
pop
jb
xchg
data16
jbe
mov
ins
adc
mov
mov
dec
or
fcom
adc
sbb
sbb
idiv
fdiv
shl
mov
aaa
shr
or
push
jle
bound
jmp
outs
out
out
(bad)
out
add
adc
ins
js
call
cmc
jmp
in
fidiv
cdq
ds
push
adc
xchg
cmp
jo
and
mov
mov
add
pop
pop
cmps
xchg
sbb
out
or
pop
mov
and
adc
cmp
movs
shl
inc
xor
inc
push
pop
jmp
and
call
xor
ins
ss
mov
mov
dec
mov
iret
rcl
out
or
lock
dec
lods
loope
jg
mov
stc
push
inc
sbb
aad
sar
in
inc
test
mov
push
cmp
lea
push
outs
into
mov
not
retf
jl
movs
pop
(bad)
and
mov
mov
jg
mov
xor
mov
bnd
sub
or
jnp
mov
mov
mov
test
pop
mov
imul
dec
cli
clc
jmp
stc
hlt
sub
test
xchg
fldcw
outs
sub
sbb
push
ins
enter
sbb
les
movs
mov
ja
aaa
xor
int3
pop
bound
rol
call
imul
pusha
lods
neg
mov
dec
adc
test
sti
sbb
and
dec
out
sbb
leave
mov
pushf
inc
jnp
in
adc
ret
pop
add
mov
xchg
call
lahf
dec
dec
jo
sbb
push
loop
sbb
js
sti
add
ss
push
sbb
stos
(bad)
(bad)
cmp
popa
repnz
in
sub
in
adc
stc
or
and
lods
adc
fdivr
fisubr
outs
lock
fisub
jg
cmp
and
add
dec
stc
cmp
jmp
retf
cmp
imul
je
sub
mov
adc
icebp
push
lock
(bad)
push
push
repnz
sahf
inc
fbstp
test
or
rcr
or
mov
adc
jmp
jo
imul
cmp
adc
pop
xchg
mov
mov
mul
ret
bnd
push
(bad)
lea
and
xchg
cmc
stos
mov
push
push
pop
fsubr
mov
test
addr16
and
push
inc
ds
and
push
stos
jl
or
pop
loop
mov
icebp
push
cmp
iret
in
pop
mov
mov
add
movs
retf
scas
mov
sbb
dec
mov
cwde
(bad)
xchg
mov
repnz
enter
dec
jne
adc
lods
out
outs
pop
mov
add
stos
add
sub
scas
loopne
js
(bad)
adc
fimul
dec
mov
add
adc
xor
int
out
jecxz
mov
dec
xchg
or
ret
xchg
call
dec
push
std
dec
pushf
neg
add
mov
add
mov
test
mov
dec
inc
mov
cmps
mov
in
jns
and
popa
pop
mov
jmp
sub
ja
jl
ins
(bad)
das
shl
sub
lods
mov
mov
push
jae
mov
jecxz
repz
jae
fnstcw
sar
cwde
pop
ds
shl
fld
push
xchg
lods
(bad)
in
pushf
loop
in
popa
(bad)
pop
leave
jb
pop
mov
retf
fsub
dec
inc
jmp
mov
xor
sti
iret
and
sahf
jle
cmp
stos
out
jno
imul
retf
jbe
popa
push
dec
inc
jns
rcr
mov
popf
add
out
xchg
mov
ret
cwde
sbb
mov
cwde
sbb
loope
push
pop
cmp
dec
aaa
(bad)
cld
sar
pop
sub
stos
and
loope
mov
ss
imul
jnp
xchg
cld
jne
pop
adc
int
(bad)
out
imul
mov
fst
push
sub
xchg
call
inc
push
inc
clc
push
pop
or
ror
push
cmp
retf
sbb
scas
pop
mov
add
popf
or
sub
cld
dec
call
cli
sbb
clc
add
pop
adc
or
cmp
jmp
loopne
outs
xor
shl
mov
lock
pop
sbb
cmps
add
add
inc
scas
clc
jbe
jg
mov
mov
std
push
push
out
mov
dec
mov
inc
pushf
fcomp
(bad)
in
stos
ins
nop
or
inc
inc
call
add
lds
test
clc
dec
jmp
push
ss
ret
inc
cmc
mov
xchg
lods
mov
sub
push
in
or
pop
(bad)
out
lods
pop
adc
leave
xor
xchg
inc
daa
dec
push
jmp
inc
mov
pop
dec
dec
pop
pop
out
cmps
adc
add
sub
(bad)
lds
(bad)
mov
push
loop
dec
cmp
or
fs
xor
in
and
and
or
dec
adc
mov
mov
inc
out
ret
push
dec
mov
(bad)
and
mov
in
or
pushf
outs
call
and
repnz
(bad)
inc
mov
mov
rol
cmp
in
cmp
dec
in
or
or
addr16
or
sbb
adc
jmp
shl
(bad)
mov
jns
(bad)
fisttp
loope
mov
and
mov
sub
js
movntps
movs
shl
inc
out
adc
popa
pop
shl
or
sbb
pusha
repnz
test
into
test
push
shl
push
mov
push
jle
mov
xchg
jne
test
inc
cmps
call
loop
pop
jmp
lea
xor
test
adc
aaa
xlat
dec
sub
push
mov
mov
aad
int
sar
imul
jae
cmp
xchg
add
ds
retf
or
add
ss
jo
jno
in
(bad)
pop
push
jle
mov
xor
ins
int3
(bad)
rol
stc
js
test
add
loopne
sub
xchg
jge
inc
bound
repz
adc
cmp
sbb
sub
mov
cs
aad
gs
daa
xor
add
adc
cmp
out
lock
aam
and
sbb
addr16
mov
adc
stc
inc
je
popf
les
jmp
cli
add
and
sub
fimul
cwde
mov
fstp
dec
xor
mov
aaa
lahf
sbb
jp
ror
mov
pop
loope
mov
sbb
mov
sub
xor
cmps
mov
jmp
ret
mov
mov
jg
xor
jecxz
or
cli
cmp
popf
repz
mov
cs
retf
out
(bad)
fdiv
popf
mov
movs
jno
mov
int3
or
cmp
fs
cmp
ins
lods
sub
dec
jge
pop
mov
jne
pop
cdq
inc
and
push
cdq
lock
test
xor
loop
lea
sub
add
xor
lock
cmps
clc
xor
adc
ret
push
retf
jne
dec
movs
cdq
fild
sub
cmp
jno
dec
daa
scas
adc
jno
(bad)
sar
(bad)
xor
jae
xor
push
cmp
mov
stos
jbe
pop
pop
lods
repz
jmp
push
arpl
js
fwait
push
push
out
jnp
mov
dec
cmp
aad
jns
(bad)
(bad)
in
mov
xor
jg
jne
lock
and
add
jnp
popf
fwait
inc
nop
xchg
rcl
dec
adc
pop
in
lea
mov
clc
and
add
mov
fcomp
jb
sahf
jl
push
inc
mov
fldcw
jl
mov
dec
mov
push
mov
popf
mov
sub
nop
mov
push
push
cs
or
push
ficom
shl
mov
push
imul
mov
int
inc
in
sbb
pop
mov
fimul
sub
pop
fistp
lods
bound
les
jg
jmp
lds
add
jecxz
jo
dec
arpl
jb
cli
ds
sub
clc
sub
cli
std
scas
rol
pop
mov
mov
dec
out
scas
mov
in
inc
ja
fimul
cmps
jns
arpl
out
inc
aam
ja
sub
sahf
push
sub
add
(bad)
push
fistp
mov
sub
add
fs
dec
aaa
adc
(bad)
xor
je
stos
std
enter
cmp
ret
dec
shufps
inc
xlat
cmp
adc
fsub
and
adc
call
mov
sbb
enter
and
and
xor
mov
push
daa
pop
cmp
add
inc
jbe
out
(bad)
cmp
std
push
push
mov
push
out
aas
je
fbld
jle
sbb
call
xor
scas
push
out
ret
ja
loopne
and
outs
adc
push
out
fsubr
push
lds
jecxz
xlat
cmp
sbb
ins
movs
jb
(bad)
adc
xor
xchg
jl
call
add
loopne
mul
adc
xor
dec
cmp
inc
sub
inc
pusha
jmp
pusha
pop
mov
push
push
out
ja
lods
mov
jl
std
fsub
xchg
inc
mov
or
repz
test
or
sub
and
push
fbstp
cwde
cmc
cmps
test
push
pop
mov
push
jg
out
mov
(bad)
jbe
xor
push
(bad)
jmp
int
mov
ror
or
popa
dec
sti
shr
fcmovnbe
mov
mov
mov
jmp
xchg
into
cdq
dec
ret
sahf
sahf
mov
or
dec
into
jo
mov
mov
scas
and
cmp
std
mov
fisubr
dec
pop
and
fadd
cwde
jae
inc
and
arpl
add
push
mov
or
xchg
mov
pop
inc
in
jae
push
es
inc
loopne
or
mov
dec
sbb
cmp
cmps
in
xlat
popa
mov
pop
sahf
mov
mov
jecxz
cmp
mov
(bad)
icebp
movs
sbb
cmp
(bad)
addr16
rcl
retf
ret
fnstsw
mov
(bad)
aas
dec
scas
sub
(bad)
jecxz
jl
mov
push
xchg
jne
xchg
cmps
pop
cwde
sub
popa
sub
sar
aaa
pop
gs
or
pop
pop
xchg
imul
or
jl
sbb
enter
xchg
int
sub
pop
stos
(bad)
push
repnz
in
push
stc
sbb
test
fwait
mov
adc
fmul
lds
add
sbb
sbb
loopne
into
repz
mov
imul
lods
cmps
adc
jmp
idiv
push
arpl
mov
mov
jnp
dec
xchg
das
or
sub
jp
xor
adc
stos
ins
xor
push
loopne
cld
push
push
mov
and
fnstcw
xchg
gs
sub
loopne
adc
into
outs
mov
repnz
mov
scas
or
out
call
aaa
xchg
adc
jl
cli
ja
jae
mov
fistp
dec
pop
pop
sub
aam
sub
je
mov
cmc
icebp
daa
daa
dec
out
stos
add
sahf
ja
or
jbe
es
xchg
mov
inc
fcmovnu
neg
mov
mov
arpl
and
push
sahf
sub
adc
mov
scas
jnp
or
inc
pop
push
and
push
popf
cld
fs
imul
iret
loopne
jmp
xchg
mov
stos
xchg
(bad)
icebp
sbb
or
lds
loop
stos
stos
mov
bnd
mov
leave
mov
jne
ret
out
sbb
(bad)
fnstenv
mov
arpl
rcl
jns
into
mov
dec
or
enter
pop
cmp
mov
(bad)
outs
fisub
and
cmp
mov
sub
sbb
test
inc
iret
cdq
pusha
retf
jbe
bound
repnz
inc
add
sub
movs
dec
xor
outs
or
sbb
xor
mov
js
xchg
int
cmp
sub
mov
scas
dec
mov
js
rcr
push
lds
xor
das
mov
popf
lds
stos
dec
xchg
pop
mov
out
push
mov
(bad)
sub
sub
icebp
outs
mov
mov
mov
sbb
stc
jo
pushf
dec
sbb
jne
inc
cmps
outs
gs
mov
xchg
(bad)
pop
push
scas
ror
pop
std
jg
in
in
call
outs
mov
xchg
mov
push
in
sub
rol
addr16
xor
(bad)
push
pop
sub
sbb
cwde
das
push
inc
test
test
rcr
jmp
repnz
sub
push
xchg
inc
cmp
jge
sub
or
jmp
mov
mov
(bad)
cmp
or
test
cmc
xchg
scas
shl
das
push
or
mov
inc
mov
fbld
sar
pop
mov
je
ins
ds
xchg
ds
movs
xlat
push
addr16
loopne
imul
adc
add
add
cli
popa
cmc
mov
inc
lods
stos
cmp
mov
jle
icebp
std
out
sub
adc
call
sbb
adc
rol
jg
dec
xor
adc
lods
xchg
push
arpl
add
mov
cmps
in
and
pushf
ret
xor
xchg
scas
mov
lock
enter
mov
mov
mov
sub
fimul
lds
mov
scas
ror
xor
dec
sbb
out
loopne
je
fldcw
adc
and
fcomp
imul
nop
dec
jle
sub
mov
sti
outs
enter
cmp
out
aaa
pop
mov
not
xor
imul
adc
jns
cmp
xchg
jne
into
mov
daa
inc
push
mov
in
repnz
push
push
cmp
es
push
rol
sub
ret
cmps
or
adc
int
xchg
jne
jb
add
cmp
add
pop
addr16
stos
test
(bad)
lds
adc
cmp
setns
inc
pop
out
imul
xchg
js
push
pop
addr16
jl
add
push
cs
mov
jle
jle
test
xor
mov
jb
cmps
cmps
add
aam
dec
push
or
mov
fcmovbe
aaa
icebp
adc
inc
lea
loope
sbb
add
arpl
les
les
xchg
cmp
mov
cmp
push
push
mov
pop
scas
pushf
adc
push
mov
mov
imul
out
or
mov
leave
iret
dec
sbb
inc
mov
jp
iret
(bad)
popa
sbb
push
int3
sbb
sub
or
or
xor
imul
stc
mov
into
mov
xor
push
dec
xor
xchg
add
push
jp
fild
add
sbb
mov
or
xor
sub
test
in
fwait
push
push
inc
sahf
test
jmp
sub
or
mov
mov
inc
rcr
xor
rol
cmp
cmp
jae
cld
rcr
pop
mul
or
sbb
push
add
ret
lock
loop
ins
or
push
mov
cmc
or
adc
rcl
cli
jmp
and
jg
pushf
icebp
and
and
out
aaa
rcl
test
adc
jno
cmps
es
cmps
call
xlat
cwde
xchg
mov
jns
adc
bswap
loope
mov
ins
ja
loop
fld
icebp
gs
rol
(bad)
xor
(bad)
imul
push
(bad)
imul
push
std
sahf
int
fmul
lea
fisub
adc
jge
pop
mov
cmp
test
pop
mov
push
loope
sbb
push
imul
xchg
jmp
outs
or
add
cmp
cmp
add
pop
and
adc
mov
rcr
aad
jl
adc
mov
push
mov
retf
outs
push
cdq
mov
mov
nop
sbb
lahf
dec
xchg
xor
lds
xlat
jg
stc
test
cld
dec
cmp
push
or
xchg
adc
cmp
inc
adc
arpl
aad
ins
sub
push
xchg
xor
lods
xchg
mov
mov
retf
lea
adc
sbb
mov
int3
sbb
xchg
push
aam
mov
cmp
pop
push
and
mov
jnp
sbb
aad
cmp
mov
mov
pop
dec
popf
shl
push
(bad)
inc
sar
push
cmp
xchg
fucomi
pusha
(bad)
push
mov
loop
cmp
mov
idiv
aaa
dec
out
lds
or
xlat
push
adc
pop
dec
aaa
sbb
fsub
xchg
add
rcr
cmps
pop
pop
mov
fdiv
pop
enter
nop
dec
test
(bad)
push
mov
sbb
shr
fldenv
push
push
lods
push
int
shr
adc
xchg
sbb
(bad)
cli
ja
push
cmp
test
(bad)
cmps
push
or
fnsave
bound
in
dec
xchg
in
sbb
sbb
stc
pusha
cmp
xor
mov
mov
and
fist
xchg
and
(bad)
dec
adc
mov
lock
sar
and
xchg
jp
jnp
ds
pop
mov
ficomp
push
imul
pop
mov
fnstsw
test
dec
pop
sbb
mov
push
pop
dec
pusha
loopne
mov
sub
mov
mov
mov
push
mov
loopne
repz
xchg
scas
cmp
dec
xor
stos
inc
push
sub
cmp
jl
and
xor
add
sahf
mov
mov
and
sub
sub
fcom
mov
retf
mov
fdiv
fild
xor
or
aam
retf
pop
cs
stos
popf
mov
mov
cmp
cmp
call
push
jmp
lods
mov
gs
mov
mov
pushf
in
sbb
popf
out
call
cmp
cmp
mov
dec
ja
test
dec
xchg
movs
lock
lock
mov
and
stos
add
push
js
push
ret
rol
mov
add
sbb
imul
(bad)
cs
mov
mov
arpl
fdiv
pop
push
out
add
sti
mov
adc
div
push
(bad)
shr
lods
dec
dec
ins
mov
dec
jg
in
pop
add
leave
ret
lods
cmps
jmp
jmp
out
and
test
jg
cdq
add
mov
movs
dec
pop
jne
and
inc
test
add
jns
sti
or
clc
in
cmp
jecxz
mov
mov
and
add
or
lods
test
and
push
xchg
imul
arpl
(bad)
mov
push
pushf
pop
mov
dec
pop
aam
mov
jmp
jne
sbb
aaa
test
dec
je
or
int3
ds
das
push
xor
push
push
or
loope
sbb
mov
add
or
inc
sbb
pop
call
jo
mov
ins
dec
popa
bound
loope
pop
sbb
scas
inc
ss
aaa
mov
stos
scas
cdq
int
push
movs
aaa
addr16
mov
shr
outs
sub
or
popf
adc
or
test
mov
(bad)
jnp
jmp
(bad)
push
xchg
adc
adc
push
(bad)
js
dec
jp
dec
pop
push
addr16
xchg
sbb
scas
add
rcr
in
jne
jecxz
pop
sar
je
sub
inc
cmp
push
push
mov
xchg
sub
sahf
mov
pop
dec
test
jbe
imul
stos
sub
lods
fstp
mov
xchg
int3
clc
enter
fild
sbb
mov
addr16
push
jl
mov
icebp
pop
lahf
xchg
inc
cmp
add
retf
test
jbe
xlat
push
mov
jo
aaa
cld
xor
sti
idiv
mov
xchg
arpl
pop
mov
cmp
mov
inc
out
cdq
clc
and
(bad)
std
sub
xor
xchg
popa
jmp
shl
xchg
scas
shr
mov
lods
xchg
xchg
mov
test
out
push
xor
adc
ror
adc
cmps
mov
lock
retf
push
xor
pusha
(bad)
push
int
mov
sbb
clc
xchg
push
shr
(bad)
xchg
xchg
mov
push
mov
xor
cmp
push
mov
shl
dec
jle
jb
ins
push
xor
pusha
mov
iret
popf
jp
dec
mov
lods
sub
xor
inc
and
xchg
push
ss
pop
mov
and
popa
adc
jns
and
inc
mov
mov
mov
imul
pushf
inc
jmp
pop
and
gs
clc
ins
in
das
loope
xor
inc
push
adc
sbb
sbb
pop
int3
or
xor
das
cmc
mov
cmps
lahf
add
xchg
int
jnp
(bad)
pop
das
repnz
(bad)
mov
or
or
sub
push
xchg
cwde
mov
fnsavew
or
pop
addr16
xchg
push
fcmovbe
inc
add
xor
xchg
push
or
xor
sbb
pop
mov
mov
clc
jb
jae
jmp
and
mov
shr
out
push
mov
test
jg
or
pop
mov
lea
cmps
aad
shl
(bad)
std
and
and
mov
push
and
out
aad
test
adc
mov
dec
jge
mov
sti
popf
inc
repz
jnp
cmps
push
jno
mov
aad
mov
add
mov
fcomp
push
sub
call
rcr
pushf
pop
cmp
stos
inc
cmp
fidivr
cmp
shl
pop
rol
sar
push
mov
stos
push
rcr
or
mov
xor
add
fwait
jmp
int3
mov
not
mov
jl
arpl
mov
loopne
jmp
in
mov
mov
jne
adc
sar
add
test
ficomp
add
mov
imul
pop
pop
mov
and
in
lahf
ret
xor
sub
rcr
mov
push
fdiv
(bad)
adc
adc
mov
ins
jbe
stc
pop
jno
xor
push
mov
hlt
dec
fist
adc
(bad)
in
or
add
mov
icebp
xor
out
push
aas
div
jmp
add
sub
jg
and
push
fldenv
sar
sbb
test
les
aad
push
les
dec
mov
shl
test
lds
push
and
adc
data16
pop
lods
xchg
ins
hlt
and
lahf
cmp
scas
jne
mov
sahf
int3
std
or
fisttp
das
push
shr
sub
cmp
push
mov
lahf
jae
leave
push
dec
push
jnp
jle
mov
mov
add
hlt
ror
retf
rcl
dec
mov
movs
ins
xor
cmp
ret
or
ror
mov
jmp
call
and
pop
xchg
add
je
pop
jae
stos
and
or
je
js
jb
pop
inc
jmp
ins
not
ss
adc
push
js
movs
mov
(bad)
fmul
mov
enter
loop
xchg
scas
pusha
leave
and
cmps
fnstcw
sub
push
ret
sbb
enter
(bad)
dec
arpl
sti
stc
bound
out
into
in
mov
mov
js
jp
out
pop
xchg
push
cmp
sub
popa
dec
mov
stos
hlt
sahf
hlt
loop
pop
xchg
out
add
push
adc
adc
xor
cmps
and
push
cmp
shl
add
cmp
cmps
push
sbb
xchg
bound
rol
sbb
pop
xchg
jnp
call
rcl
cmps
push
mov
or
inc
test
test
lods
cmp
dec
dec
xor
adc
sub
pop
jno
std
push
inc
inc
jo
aad
fs
popf
sub
jne
lods
sub
(bad)
push
ret
jns
repnz
bound
mov
dec
adc
addr16
cld
sub
xor
xchg
xchg
mov
retf
icebp
mov
pop
dec
jns
or
es
test
jnp
lock
or
mov
mov
ja
pop
icebp
outs
bound
inc
fild
ror
adc
and
sub
out
sub
les
jmp
and
lods
cmp
and
inc
dec
add
or
stc
imul
cmp
lods
and
aas
movs
shr
movs
mov
mov
mov
lods
sub
push
ds
inc
ins
ror
and
mov
scas
(bad)
lock
sub
cmp
pop
dec
and
test
idiv
jg
dec
pop
xchg
movs
scas
retf
xlat
mov
call
push
mov
fcomp
gs
ins
push
(bad)
fs
pop
mov
mov
dec
add
sub
inc
int
add
or
aas
and
xor
sbb
jecxz
outs
xlat
jmp
cmp
outs
jno
sub
stos
mov
(bad)
mov
sub
in
add
das
dec
into
scas
pop
cmps
rcl
loop
pusha
std
jne
outs
sub
sbb
aam
sbb
cmp
mov
sahf
pop
cmps
lods
int
ds
fdivr
sbb
in
sbb
in
inc
clc
loopne
inc
cwde
lock
frstor
dec
pop
aam
sti
mov
das
and
gs
add
popa
test
jl
cmp
inc
pop
xchg
mov
inc
mov
or
ret
jp
dec
xchg
mov
xchg
dec
or
mov
cmps
imul
sbb
xor
push
sbb
mov
mov
idiv
lea
ficom
sub
enter
sbb
rcl
mov
inc
add
sub
push
jb
dec
lds
outs
add
adc
test
in
cmp
retf
xchg
inc
xchg
int
mov
mov
(bad)
loop
mov
aaa
add
into
dec
ja
xor
arpl
rcr
dec
ins
popa
ins
stos
outs
jb
push
and
add
cmp
in
jge
jmp
pop
pop
jb
xchg
or
(bad)
mov
nop
in
into
das
es
or
ret
je
mov
adc
mov
push
loopne
iret
mov
jecxz
fbstp
sub
xor
xchg
mov
outs
jmp
in
sub
jg
test
dec
mov
jo
inc
neg
push
out
sar
addr16
aas
add
lods
scas
jmp
js
ins
inc
xor
movs
jl
inc
movs
xchg
and
out
push
add
mov
mov
jmp
pusha
je
dec
out
movs
scas
aad
or
sub
pop
and
rcr
sub
jmp
imul
shr
ds
pop
mov
fwait
(bad)
jl
sti
dec
outs
mov
in
arpl
push
addr16
dec
movs
mov
xchg
enter
adc
lds
adc
and
pop
call
int
jge
(bad)
ret
mov
pop
imul
pop
cmp
jmp
mov
test
cmps
sbb
mov
jnp
addr16
lods
mov
rcr
mov
les
arpl
movs
out
stos
call
xchg
xchg
and
repnz
mov
cwde
mov
cmp
rcr
adc
cmc
push
fnstcw
jp
cmps
fidivr
jne
sub
fdiv
lahf
and
fbld
sbb
xor
jo
(bad)
retf
xchg
fwait
inc
rcl
int
jb
jb
xchg
leave
mov
(bad)
dec
test
or
ret
mov
ja
xor
cwde
pusha
sbb
cmc
pop
cmp
or
push
and
inc
jmp
in
das
xor
jle
fdiv
inc
ins
mov
or
arpl
mov
les
xor
div
mov
ja
dec
cmp
aad
jns
pop
in
jmp
push
sbb
cmp
xchg
sub
loop
repz
mov
das
inc
scas
addr16
pop
pop
cmps
shl
lods
int
jae
push
pop
cmps
xchg
sbb
nop
neg
cli
popa
lock
sbb
stos
outs
inc
jb
mov
lea
or
imul
icebp
cld
inc
icebp
arpl
sbb
ret
pop
mov
mov
push
pop
dec
xlat
pop
call
(bad)
mov
xor
test
retf
loope
mov
dec
hlt
fwait
(bad)
adc
out
xor
xchg
sub
cmps
inc
adc
cmp
sbb
in
xchg
adc
mov
pop
retf
jns
call
stos
cli
dec
ret
imul
adc
rcl
movs
rcr
cmp
aam
mov
(bad)
in
stos
fidiv
es
js
int3
xchg
add
bound
(bad)
cwde
sbb
in
mov
pop
mov
or
sbb
daa
inc
jns
(bad)
jne
in
and
rcl
in
es
sbb
ins
sub
cs
jo
and
mov
ja
inc
into
in
enter
cwde
sub
inc
aam
sti
sbb
jmp
fcomp
lahf
and
aad
test
jmp
push
pop
leave
icebp
push
sbb
mov
icebp
leave
out
ror
mov
nop
(bad)
fist
cmp
sub
mov
call
cli
movs
cmc
jns
cdq
lods
and
mov
cmp
(bad)
clc
lahf
mov
clc
sbb
mov
retf
arpl
clc
outs
pop
jae
pop
(bad)
out
data16
sub
inc
jo
mov
aaa
jbe
xchg
jnp
mul
rcl
popa
movs
in
(bad)
lods
inc
icebp
xor
int
cmp
rol
nop
lea
xchg
cmp
and
jmp
pop
out
pop
call
mov
imul
cmps
test
push
push
jmp
adc
and
push
mov
pop
sbb
jo
push
inc
pop
dec
mov
xor
mov
mov
movs
addr16
pop
adc
loop
push
jmp
in
pop
pop
lods
pop
or
int3
test
push
push
icebp
push
sar
and
int
(bad)
mov
cmp
or
xchg
lods
or
repz
sahf
mov
jg
xchg
jns
add
sahf
loop
dec
cmps
lea
out
loope
sub
cmp
mov
mov
push
gs
test
cmps
daa
lahf
mov
sahf
mov
loope
es
repnz
sub
loopne
sbb
xor
adc
sub
xor
xor
cmp
pop
add
mov
std
adc
mov
push
scas
mov
sti
call
mov
adc
sub
xchg
in
je
sub
inc
push
inc
call
mov
(bad)
bound
(bad)
cmp
dec
lds
add
jl
inc
pusha
test
cli
mov
pusha
push
push
inc
movs
jle
ins
xchg
pop
call
dec
add
mov
adc
movs
out
fnstenv
sub
dec
test
imul
mov
and
mov
inc
mov
add
(bad)
and
dec
sub
popa
or
arpl
push
push
mov
inc
inc
push
jl
and
mov
pop
(bad)
lds
mov
jge
jmp
push
(bad)
sbb
dec
jecxz
push
mov
test
adc
ins
outs
push
pop
jo
and
das
adc
(bad)
push
pop
xlat
neg
xchg
adc
and
out
pop
jo
(bad)
mov
test
fsubr
cmp
cmp
daa
test
xchg
lods
dec
test
retf
and
add
aad
cmps
jns
enter
ins
pop
mov
stc
push
mov
cdq
outs
leave
popf
inc
dec
jl
mov
popa
and
xchg
xchg
inc
cmp
daa
or
jbe
sub
jg
(bad)
sbb
mov
enter
fld
mov
cdq
sbb
jbe
pop
add
popf
shl
jo
and
jae
pop
inc
sub
cmp
js
(bad)
psllq
and
sahf
inc
stos
pslld
(bad)
sub
daa
ins
dec
in
xlat
mov
cs
xor
mov
mov
ins
std
adc
inc
jg
or
mov
add
inc
div
ja
cmps
jo
or
imul
and
and
in
jge
jmp
pop
(bad)
std
inc
mov
ret
mov
xchg
sub
jl
retf
bound
add
out
xchg
stc
mov
aad
out
push
scas
jnp
out
push
ja
popa
mov
push
clc
sub
sbb
lock
shl
add
jp
into
mov
push
movs
pop
inc
xor
jne
daa
jb
in
imul
ret
imul
lods
bound
popa
add
jmp
push
repz
movs
pop
dec
dec
idiv
add
push
(bad)
std
not
test
mov
add
push
ins
les
dec
out
push
leave
pop
mov
repnz
in
pop
mov
and
jne
loopne
dec
xchg
xor
sub
inc
scas
pop
mov
(bad)
pop
dec
ins
imul
hlt
mov
ret
xchg
pop
ficomp
mov
scas
pop
stos
xlat
push
cmp
jne
cmp
mov
imul
fsubr
test
fcomp
add
test
mov
rcr
xchg
ror
sbb
enter
and
pop
fisttp
out
xchg
(bad)
jmp
pop
sar
xlat
(bad)
xor
cli
in
into
in
cmps
xchg
xchg
fistp
cmp
adc
shr
lock
enter
addps
das
mov
inc
jnp
sbb
xchg
lea
pop
(bad)
pop
stc
push
or
add
test
stos
stos
add
xchg
sahf
icebp
pop
fimul
loopne
xor
or
mov
or
and
pop
lahf
inc
xor
fadd
jno
add
shr
jge
xor
pop
out
xor
push
xor
xor
push
dec
leave
adc
js
movs
push
mov
imul
mov
pop
sub
sti
loop
outs
adc
push
out
in
inc
ss
mov
call
xchg
inc
sub
xchg
pop
out
and
cmp
pop
arpl
sub
adc
cs
cdq
iret
test
inc
pop
lds
cmps
sti
add
loop
(bad)
dec
movs
dec
sbb
or
add
(bad)
cmp
xor
or
nop
iret
loop
mov
xor
fidivr
xchg
cwde
pushf
pop
fbstp
mov
xchg
xchg
test
dec
adc
aad
or
push
pop
cmp
ret
popf
xchg
mov
cmp
and
call
ret
call
push
loope
in
test
cld
xor
push
in
ret
idiv
adc
push
ret
outs
adc
je
and
addr16
pop
and
cwde
repnz
xor
jge
jg
retf
in
in
scas
aaa
leave
dec
sub
add
imul
sbb
fwait
les
(bad)
into
shr
call
cmps
cs
push
sbb
xor
mov
outs
in
not
or
inc
sbb
or
cmp
cld
mov
hlt
fnsave
lahf
mov
test
push
nop
shl
add
out
pop
dec
xchg
in
add
sub
loopne
fs
(bad)
lahf
pop
push
mov
cmp
mov
nop
pushf
sbb
or
dec
fcomp
lock
test
loop
nop
enter
jg
ins
or
fbld
cmp
ret
(bad)
push
movs
push
mov
daa
out
xchg
out
add
add
(bad)
call
retf
mov
or
jno
sbb
loopne
arpl
sbb
js
retw
sbb
pop
out
je
mov
push
(bad)
lock
gs
test
xchg
or
pop
pusha
lock
out
dec
sub
push
je
stos
mov
cmp
cwde
cmps
shl
push
inc
cmp
adc
push
jp
imul
ins
movs
xchg
out
ins
mov
mov
jo
push
shr
pop
and
cld
push
mov
sbb
push
cdq
int
aam
jmp
data16
ror
mov
add
adc
xor
sbb
jbe
xchg
cld
ins
les
sbb
sub
int3
and
push
mov
rcl
push
iret
call
mov
popf
out
cmps
lahf
mov
cdq
push
shr
sub
push
jle
mov
push
cdq
in
inc
mov
stos
adc
(bad)
repz
jmp
mov
ja
(bad)
aad
adc
add
pop
pop
(bad)
out
xor
jg
loopne
adc
mov
jno
movs
cmp
mov
into
rcr
dec
and
(bad)
xchg
xor
pop
xor
lds
xchg
jg
jmp
or
mov
out
xchg
je
xchg
clc
cdq
icebp
outs
xlat
jno
js
dec
repz
xor
dec
or
cmp
and
adc
dec
mov
mov
xor
das
and
hlt
addr16
pop
or
in
cmp
mov
adc
jmp
push
jne
mov
daa
jne
icebp
cmp
(bad)
pop
lods
in
mov
jmp
and
fadd
adc
movs
add
loope
pushf
out
xchg
dec
shl
pop
popf
cmc
mov
and
mov
or
movs
push
push
loope
ss
xor
sar
add
sbb
xor
out
jb
icebp
adc
ret
cmp
mov
mov
mov
xchg
pop
not
aaa
js
adc
retf
outs
lds
in
push
mov
test
test
mov
fwait
xchg
stos
ror
repnz
ret
shl
adc
cmc
xchg
and
jo
push
das
and
cmp
bound
pop
inc
(bad)
out
dec
sbb
call
xchg
mov
xchg
ins
rcr
push
pop
xchg
jns
pop
cmp
icebp
jle
dec
into
mov
ficomp
fadd
dec
popf
inc
cdq
repz
stc
pushf
xor
leave
fistp
ja
scas
aaa
repnz
lock
fdivr
and
xor
hlt
pop
inc
jo
dec
mov
adc
adc
ret
mov
call
rol
dec
jne
and
daa
dec
sub
jne
and
xchg
fdiv
mov
stc
sub
loopne
ss
les
push
leave
sub
sub
jl
ficom
jbe
iret
jmp
mov
clc
out
jbe
cmp
fsub
icebp
lahf
jbe
add
stos
sahf
push
aam
or
inc
retf
pop
ss
mov
jecxz
adc
push
dec
repnz
in
out
xor
pop
cli
retf
outs
or
loop
xchg
rol
stc
int3
inc
adc
xor
mov
rep
sbb
jg
out
mov
jae
imul
push
dec
bound
test
popf
jge
mov
sub
pop
fild
or
mov
ds
or
mov
les
and
cmp
push
pop
mov
in
adc
and
movs
jno
push
cmps
xor
dec
pop
ins
jl
mov
sub
xchg
xor
lock
(bad)
lods
fmul
and
scas
jle
jmp
mov
mov
push
push
mov
gs
push
mov
push
mov
sbb
hlt
mov
or
stos
(bad)
(bad)
call
lea
adc
loop
mov
cmp
jb
data16
cmp
out
out
or
les
lea
cmp
or
fsubr
and
icebp
ret
mov
shl
fwait
mov
shl
jnp
push
adc
and
xor
jnp
mov
push
ds
dec
popf
call
and
loopne
add
pop
arpl
xchg
pop
sub
xor
pop
jbe
fdivr
xchg
sub
inc
test
pop
sbb
cmp
or
jle
sub
js
fisubr
aam
adc
mov
adc
dec
popf
sub
sub
fadd
xchg
outs
(bad)
xchg
cmp
jnp
loop
push
rcr
mov
sbb
retf
dec
test
int
daa
inc
mov
xor
mov
xchg
adc
fsubr
pusha
mul
inc
int3
sub
mov
or
and
and
dec
fisubr
mov
push
xchg
fcomp
jno
popa
sub
add
pop
sub
shl
aam
push
setno
call
icebp
call
in
pop
mov
retf
and
add
jae
fimul
push
pop
xchg
inc
mov
lea
pop
mov
xchg
dec
loopne
mov
std
test
push
aam
jecxz
lock
mov
cmps
and
fstp
and
mov
mov
and
pop
dec
fimul
pushf
mov
xor
mov
les
jb
(bad)
inc
sahf
pop
sub
lods
fistp
dec
sbb
leave
std
adc
ins
lods
sbb
cwde
gs
nop
xchg
xor
cmp
cwde
push
jae
fcomp
clc
shl
mov
sbb
add
push
cmc
cmp
xchg
call
shl
dec
(bad)
in
scas
rcl
jle
dec
aam
scas
xor
popa
mov
dec
push
fmul
cmp
es
(bad)
and
jb
rcl
call
arpl
leave
or
addr16
pop
into
lods
ficom
ss
lds
dec
push
sub
push
in
jp
stos
jae
ret
add
pop
pop
lods
aaa
outs
xchg
ror
mov
mov
fwait
loop
sbb
mov
mov
nop
icebp
xor
inc
test
xor
(bad)
sub
loop
mov
ret
add
jle
jl
xchg
movs
inc
jp
into
push
test
inc
je
mov
(bad)
je
sbb
test
fcomip
xchg
out
enter
mov
cmp
scas
out
xchg
jno
mov
enter
cmp
fcmovnb
mov
mov
cmps
std
and
and
scas
and
sbb
and
mov
(bad)
stc
ds
in
jnp
mov
out
loop
mov
and
pop
ss
cmp
cmp
fld
in
ror
into
adc
push
xchg
retf
nop
jmp
jo
out
and
cmp
in
inc
sbb
popf
js
or
loopne
test
mov
cs
out
push
imul
repz
scas
sub
push
or
sbb
pop
stc
cmp
fdivrp
pop
xor
hlt
mov
or
pop
and
sti
int
xor
mov
aaa
clc
cs
out
test
fwait
es
fild
inc
push
or
mov
sub
popf
rcl
inc
push
pop
aas
sub
out
jb
cmp
pop
push
mov
(bad)
bound
test
mov
mov
mov
mov
(bad)
enter
lds
pop
test
jmp
sub
hlt
xor
or
inc
aas
cmps
cmps
inc
test
pushf
and
(bad)
mov
jl
pop
ins
into
jg
fldcw
lock
mov
cmp
push
ins
xchg
jecxz
test
add
in
dec
(bad)
xchg
ja
dec
js
inc
mov
jp
imul
dec
int3
aad
pop
sbb
sbb
mov
scas
aam
loope
push
test
or
jp
dec
repz
mov
pushf
out
loop
push
xchg
push
pop
inc
fadd
les
std
into
jp
cli
jae
add
je
je
data16
rol
pushf
call
fwait
pop
ss
add
xor
dec
sbb
and
mov
stc
mov
cli
fimul
sahf
scas
push
popa
loope
popf
and
mov
sbb
jns
mov
rcl
sahf
sub
push
push
leave
add
jle
test
sbb
test
jne
and
fst
add
mov
xchg
mov
sub
das
test
ret
push
push
adc
push
bound
push
xlat
daa
lods
push
cli
daa
add
pop
js
call
std
imul
sahf
stos
cwde
pop
xchg
dec
das
dec
jmp
imul
jo
inc
cwde
jle
dec
test
ficomp
push
push
mov
mov
and
sti
cmp
test
fs
pop
out
push
jmp
mov
push
inc
test
out
das
js
pop
cs
push
adc
xor
mov
xor
xchg
lock
aad
ds
movs
xor
push
push
push
mov
fimul
outs
push
xchg
mov
mov
pop
js
jae
sahf
dec
fsub
cmp
jle
mov
nop
mov
ds
or
ret
sub
adc
dec
add
fdivr
mov
out
jp
in
imul
pop
int3
fisubr
and
nop
ins
cwde
push
pop
mov
cmps
in
push
lahf
jmp
dec
cmove
popa
lods
mov
or
add
cmc
and
jmp
fsubr
(bad)
rol
imul
and
and
fmul
fcom
pop
add
mov
inc
outs
mov
jp
loop
or
xchg
cmp
mov
xor
ds
dec
and
enter
push
movs
inc
fadd
jbe
and
pop
xchg
mov
dec
jns
(bad)
sbb
push
leave
imul
xchg
movs
(bad)
test
or
xchg
ret
aam
daa
mov
xchg
push
xchg
ins
cmp
dec
and
test
das
in
fisubr
xor
push
jo
jp
mov
inc
mov
xor
call
jb
(bad)
loop
xchg
push
inc
or
and
std
mov
inc
mov
pop
mov
adc
(bad)
sbb
jae
mov
stos
shr
xchg
add
les
inc
mov
jg
jmp
cmp
cmp
or
adc
fbstp
fadd
test
test
ins
lds
add
sub
mov
add
push
ffreep
call
adc
icebp
out
push
add
add
repz
dec
test
test
cmp
sahf
mov
stc
lds
inc
ins
xor
jne
int3
cmps
fbld
imul
or
xchg
int
mov
or
shl
xchg
cmps
jmp
hlt
fnsave
out
out
pushf
fcom
movs
(bad)
in
jns
mov
repnz
jae
(bad)
inc
pop
ss
inc
pop
and
dec
dec
(bad)
dec
outs
jnp
or
nop
retf
jecxz
jbe
out
fmul
xchg
mov
dec
dec
push
in
or
ret
inc
cli
push
or
daa
jno
xchg
fidiv
cmc
sbb
ret
jb
cmps
les
mov
aaa
in
cld
inc
mov
lds
fs
cmp
jns
push
adc
out
pop
popa
sub
mov
ret
push
and
mov
ret
sar
test
adc
pop
(bad)
hlt
fs
cmp
jo
xor
sbb
sar
add
pop
or
pop
fld
add
gs
jns
lods
cmp
cmp
xchg
mov
mov
pop
push
cmp
add
xchg
pusha
in
push
das
jo
add
mov
sub
pop
sbb
scas
aaa
mov
movs
mov
(bad)
(bad)
int3
inc
ror
outs
add
inc
inc
mov
mov
dec
leave
ret
or
retf
sbb
in
fisttp
clc
or
and
loope
jae
cwde
in
sub
sub
mov
dec
imul
retf
xor
movs
pop
adc
je
cld
rcr
(bad)
retf
stc
push
xlat
cmc
in
pop
xchg
fwait
push
adc
popf
sub
sub
call
in
pop
sbb
adc
dec
(bad)
enter
jl
pop
push
call
cld
mov
inc
les
or
jl
dec
fs
jae
push
sahf
sbb
inc
xchg
xchg
cli
movs
pop
outs
sahf
mov
in
mov
cmp
pushf
int
test
stc
jge
popa
jle
sahf
sbb
ret
adc
pop
(bad)
iret
mov
xor
inc
push
aaa
(bad)
in
fsub
and
dec
jmp
std
cmp
mov
sub
or
add
sbb
inc
push
jmp
mov
inc
xchg
into
clc
inc
js
jns
inc
jnp
push
jno
std
push
xchg
mov
imul
retf
push
ror
add
cmp
xchg
adc
mov
and
rcr
mov
jns
cmp
jmp
push
repnz
xlat
mov
push
ja
mov
int
lods
test
pop
cdq
inc
aam
pushf
pop
sub
jno
out
loop
test
push
push
shl
iret
ja
sub
xor
mov
pop
push
nop
test
gs
xchg
fdiv
mov
shl
xchg
dec
(bad)
cs
(bad)
aam
mov
shl
jmp
jbe
jp
sbb
jge
ja
hlt
cmp
dec
mov
stos
mov
and
adc
xchg
push
xchg
sub
(bad)
push
repnz
or
push
and
fstp
push
fdivr
push
(bad)
push
inc
cwde
icebp
ror
mov
mov
(bad)
div
retf
mov
xchg
mov
push
add
data16
inc
or
call
adc
int3
xchg
dec
nop
and
ins
ret
lods
or
cmps
loope
sbb
jg
add
cdq
pop
imul
mov
jns
add
daa
mov
std
mov
push
add
adc
jno
int3
mov
aam
jle
aaa
jne
pop
(bad)
clc
test
push
fwait
add
add
jb
mov
jge
(bad)
lods
rcr
(bad)
std
fisubr
mov
rcr
(bad)
cmc
scas
loopne
cmps
pop
mov
mov
xchg
lods
enter
pop
loopne
xor
xor
fnstenv
inc
pop
je
aaa
cld
fiadd
adc
adc
sahf
or
(bad)
mov
jns
xchg
arpl
jns
dec
mov
push
xlat
(bad)
xor
test
lods
ror
ja
shl
or
neg
push
inc
mov
xchg
adc
lea
push
bound
ss
jno
xchg
add
adc
out
test
mov
ja
js
leave
jbe
into
cs
fcom
fidivr
dec
loopne
xchg
loopne
pop
push
mov
mov
and
lods
jecxz
(bad)
adc
add
and
cs
sti
not
pop
sar
into
inc
fs
stos
jmp
jb
es
inc
in
mov
nop
push
repnz
mov
xchg
rcl
mov
xor
pop
jno
cmp
mov
dec
ficom
sbb
sbb
repnz
push
loopne
or
in
das
loope
sub
dec
or
mov
mov
fldl2e
int3
xchg
inc
inc
in
aaa
mov
or
sub
js
push
ret
rcr
jne
dec
mov
inc
xchg
popa
jecxz
dec
sub
mov
loop
iret
fadd
mov
out
inc
inc
rol
jp
push
out
loopne
jmp
or
out
in
fwait
pushf
aad
push
sbb
add
pushf
push
imul
imul
sbb
loopne
popf
inc
fs
jg
(bad)
xor
jg
cmp
inc
adc
sbb
outs
pop
inc
cmp
or
xchg
adc
pop
sub
pop
or
jp
push
and
adc
rcl
or
xchg
push
dec
mov
aaa
gs
or
inc
jmp
imul
ins
and
adc
aad
in
dec
cwde
push
sbb
test
push
shl
xor
xor
and
pop
jmp
out
jmp
mul
out
jl
mov
out
mov
ds
add
popa
(bad)
mov
push
push
and
mov
and
scas
aad
mov
jp
imul
mov
mov
cmp
clc
jae
mov
xlat
jae
pop
mov
xor
xor
fstp
pop
xchg
rcr
dec
clc
pop
xor
pop
sbb
adc
jg
and
(bad)
sub
retf
push
lock
popf
mov
xchg
shl
inc
jmp
daa
push
rcr
dec
repnz
les
iret
rcr
aaa
add
(bad)
dec
adc
jae
adc
jge
popa
cld
ins
popa
out
(bad)
gs
ret
div
out
popa
pop
sub
mov
sub
xor
pop
fcom
xor
ins
test
mov
in
and
and
pop
ret
mov
or
sahf
xchg
adc
into
and
call
ret
dec
(bad)
push
dec
inc
mov
ret
rol
adc
jge
ins
push
call
mov
pusha
or
inc
and
and
adc
test
aas
lahf
mov
jmp
ins
rcl
dec
retf
out
mov
inc
arpl
hlt
adc
call
push
stc
jne
inc
and
pop
xchg
xchg
fs
mov
push
pop
mov
das
adc
and
mov
sahf
into
gs
cli
push
rol
std
mov
pop
das
int3
xchg
cmp
dec
(bad)
push
ins
dec
or
repnz
jp
call
dec
jp
sub
outs
cmp
call
xchg
test
pop
aas
sub
mov
dec
mov
(bad)
loop
mov
pop
or
mov
std
(bad)
sti
mov
shr
cmp
mov
sub
scas
out
xchg
sub
pop
rcr
sti
inc
pop
out
stos
jl
or
xchg
mov
bound
(bad)
and
mul
loope
call
aam
repz
sub
mov
repnz
int
xor
xor
ds
jecxz
pop
push
push
lods
push
pushf
in
or
and
daa
shl
sub
mov
jg
inc
mov
imul
in
inc
stc
stos
push
stos
cdq
test
or
fdecstp
std
xchg
test
pop
test
mov
shr
ffree
fld
leave
into
pop
int
lock
mov
dec
pop
cld
(bad)
fnsave
das
xor
scas
ss
jmp
sbb
or
arpl
mov
sbb
jp
out
and
adc
add
ins
idiv
(bad)
fs
scas
cmps
(bad)
aaa
call
cmp
loopne
xchg
jl
and
sbb
repnz
add
aas
sbb
push
sti
hlt
aad
in
bound
movs
or
sub
mov
mov
add
aas
mov
mov
mov
xor
dec
jb
retf
pop
repnz
ins
inc
shl
shr
pop
mov
jl
push
adc
push
pop
iret
int3
outs
inc
hlt
stos
imul
mov
inc
dec
addr16
pop
stos
mov
inc
sub
movs
shl
cdq
pop
scas
fstp
nop
mov
dec
stos
repz
mov
test
out
je
fcomip
mov
stos
inc
out
dec
push
clc
leave
adc
int
popa
inc
mov
mov
stc
retf
or
jbe
dec
push
outs
leave
test
imul
shl
and
jmp
repz
sar
mov
mov
aas
xor
jns
ror
addr16
inc
dec
adc
inc
inc
cdq
scas
mov
inc
adc
sti
(bad)
cs
int3
xchg
adc
cs
mov
jecxz
cmps
cs
movs
inc
sti
sbb
xchg
inc
sbb
ret
repnz
inc
out
mov
in
aas
inc
(bad)
or
push
mov
mov
(bad)
or
pop
push
sub
cmp
stc
loopne
inc
dec
jmp
inc
adc
push
or
aam
pop
jge
psrlq
inc
xchg
in
mov
mov
fdiv
mov
pop
dec
neg
cmp
scas
sbb
icebp
retf
mov
dec
inc
cmp
loop
fsubr
pop
adc
sub
retf
shl
xchg
ret
les
jmp
jecxz
sub
mov
popf
push
jmp
ret
push
cmps
push
mov
or
adc
(bad)
cmp
sub
cmp
pop
sahf
hlt
stos
mov
dec
in
(bad)
fld
cs
ds
push
mov
std
fisttp
dec
xor
mov
sar
jnp
jmp
imul
push
push
popa
mov
dec
test
outs
outs
cmp
imul
repnz
sbb
cmp
mov
shl
repz
ffree
inc
sub
icebp
xchg
daa
inc
push
or
je
(bad)
sbb
xor
xor
dec
push
lods
sbb
mov
push
mov
jo
jge
inc
into
rcr
scas
or
cmp
xor
shl
mov
push
ret
xor
jecxz
add
fild
mov
add
sbb
jae
sub
rcl
(bad)
dec
icebp
pusha
adc
ja
jp
sti
in
pop
out
and
sbb
call
arpl
mov
stc
pop
pop
add
push
outs
hlt
push
int
(bad)
adc
push
mov
leave
push
mov
rol
push
sbb
xchg
adc
mov
push
popa
mov
pop
dec
pop
mov
outs
xor
outs
fidivr
adc
enter
aam
push
ret
jno
call
xchg
sub
add
test
add
in
mov
ror
repnz
rcl
shl
popa
test
loopne
inc
mov
cwde
stos
mov
pop
adc
lods
test
xchg
arpl
cli
ds
pop
lahf
daa
push
push
sti
out
out
xor
jmp
jl
mov
(bad)
repz
mov
mov
adc
ror
xchg
nop
jle
idiv
loope
(bad)
iret
inc
lods
push
lock
sub
repnz
mov
adc
cmp
cmp
fistp
cmp
in
mov
leave
adc
adc
cmp
cld
repnz
les
and
jl
pop
and
and
add
cs
mov
sbb
jno
dec
add
js
xor
out
xlat
in
mov
push
mov
dec
repz
jmp
retf
jge
(bad)
mov
hlt
leave
js
scas
mov
cld
and
bound
jno
xchg
inc
call
es
fdivr
mov
and
out
rcr
aad
mov
and
adc
mov
sbb
or
loop
inc
sub
popf
sahf
fadd
je
inc
pop
push
adc
sub
xchg
scas
int
clc
add
(bad)
push
jp
xchg
popa
mov
jne
inc
mov
ins
xchg
mov
sbb
add
out
sbb
adc
sbb
jl
pop
es
xor
mov
not
push
sbb
imul
call
mov
cmp
dec
cwde
cmovs
mov
lods
cmp
pusha
in
mov
aam
and
sbb
mov
pop
xor
push
dec
cs
(bad)
repnz
scas
or
leave
lea
push
jb
(bad)
ror
push
lock
jo
cmp
mov
push
out
repz
retf
cmp
inc
mov
std
mov
mov
lods
jmp
mov
in
or
jmp
jns
and
jge
leave
add
add
popa
inc
sar
js
cmp
arpl
aam
add
or
ds
push
mov
es
cmps
hlt
mov
dec
(bad)
aam
daa
in
pop
ret
pop
dec
pushf
adc
pusha
or
retf
mov
(bad)
loopne
mov
inc
or
popa
mov
pop
loope
and
je
mov
rcl
jmp
les
and
add
out
mov
loopne
loopne
jno
inc
mov
pop
xchg
fild
mov
pusha
xchg
out
daa
push
push
int3
xchg
mov
loopne
fidivr
jge
or
mov
dec
push
sub
(bad)
mov
or
test
pop
sbb
push
jmp
push
hlt
mov
mov
and
repz
aam
jnp
xor
pop
imul
and
mov
int
push
xchg
cli
jne
dec
inc
mov
leave
in
iret
xchg
leave
shl
(bad)
pop
lock
and
(bad)
mov
retf
jmp
dec
loopne
rcl
movs
scas
retf
out
inc
lods
sub
call
dec
mov
pop
repnz
xor
sbb
dec
inc
push
jno
inc
push
adc
jmp
test
push
mov
out
dec
aaa
loop
mov
aaa
lahf
mov
lods
mov
call
aam
in
push
mov
fcomip
pop
lahf
cmp
pop
inc
adc
lods
xchg
ja
popf
jne
or
or
pop
in
push
or
mov
mov
add
pusha
xchg
mov
stos
mov
sub
pusha
jnp
jmp
xchg
or
sub
(bad)
iret
(bad)
fwait
push
scas
xchg
cmps
ds
jl
ror
aaa
icebp
cmp
je
in
push
xlat
xor
ret
mov
mov
test
sub
xor
xor
mov
add
mov
push
retf
ins
inc
in
rol
mov
mov
cs
push
aaa
test
push
xor
in
aas
js
push
ror
(bad)
aas
and
cmp
push
std
test
adc
or
das
xchg
or
pop
cs
sbb
in
mov
adc
nop
iret
jl
and
scas
inc
inc
or
popa
mov
mov
sbb
int
loop
cmc
hlt
(bad)
pop
jb
fnstsw
jmp
aaa
popa
mov
sub
push
add
daa
fldpi
dec
sahf
sub
add
stc
shr
sbb
out
mov
loop
sbb
test
ss
xor
not
rcl
xchg
fistp
popa
dec
jnp
or
mov
stc
add
clc
in
sbb
stos
(bad)
mov
mov
adc
pop
fs
lock
xor
adc
adc
dec
loope
(bad)
int
popa
push
push
jg
mov
cmp
cmc
cld
mov
mov
jb
inc
in
inc
(bad)
mov
xchg
adc
push
je
addr16
rcr
imul
add
xor
js
icebp
push
mov
xchg
mov
cmps
out
xchg
and
inc
push
jg
xacquire
in
mov
in
jo
fxch
popa
call
adc
and
sbb
call
fldcw
mov
add
test
loop
mov
idiv
stc
aas
push
test
sbb
add
mov
ins
std
sub
inc
or
mov
loopne
aad
out
ret
inc
shl
pop
imul
jno
xlat
ret
movs
jge
(bad)
repnz
data16
dec
aaa
cli
dec
sub
in
sbb
pop
enter
mov
mov
movs
shr
call
test
leave
jp
mov
fstp
iret
push
lea
xchg
dec
in
in
push
or
xor
xor
stos
mov
push
out
mov
xor
sbb
outs
push
xchg
cmp
mov
daa
daa
lahf
xchg
inc
aas
ins
sub
push
cwde
pop
sbb
add
fucomi
out
fisubr
sahf
add
pop
push
or
xor
cld
sub
inc
mov
mov
fs
movs
sahf
rcr
mov
jl
retf
sub
push
fstp
mov
mov
rcr
xchg
jp
push
sub
inc
movs
mov
push
mov
jl
leave
and
shl
in
push
dec
adc
cld
mov
loopne
aad
test
leave
es
pop
test
xor
jl
push
fmul
add
mov
rcl
adc
jge
mov
sbb
addr16
push
sbb
inc
bound
sub
inc
ret
and
cmc
pop
lea
mov
jl
fdivr
xchg
clc
mov
dec
and
aad
adc
dec
ins
or
inc
sub
in
popf
cld
mov
out
push
dec
mov
in
jne
inc
lahf
fisttp
inc
fnstcw
cdq
jecxz
sbb
jbe
rcl
bound
pop
loopne
jb
sti
imul
jle
and
inc
push
fcmovnb
inc
and
cmovne
fcomp
xchg
cmp
in
fimul
mov
pop
movs
mov
fwait
sbb
jns
shl
sbb
shl
push
aad
adc
inc
push
xchg
sub
pop
(bad)
push
inc
jle
sbb
rol
pop
pushf
aam
or
fld
pop
push
iret
jp
enter
jle
push
or
test
repz
and
bnd
les
mov
dec
arpl
test
shr
cwde
add
sar
cmp
cmc
retf
xlat
imul
add
aam
ret
into
or
stos
xor
dec
cmc
pop
sbb
retf
and
(bad)
repnz
pop
inc
inc
std
inc
jecxz
retf
ja
js
inc
mov
sbb
push
outs
int3
out
hlt
inc
and
ror
or
sahf
aad
mov
loop
test
lds
jl
mov
push
ins
retf
dec
scas
inc
push
adc
nop
fcomi
or
sbb
pop
call
fwait
mov
push
adc
jecxz
sub
ficom
mov
push
ss
xor
or
push
cmc
in
shr
xor
cdq
imul
mov
dec
sub
jnp
push
dec
mov
mov
xchg
mov
jmp
xor
das
mov
(bad)
cwde
push
xlat
shl
xor
sbb
sub
cmp
lock
sti
lds
cmp
cmp
outs
loopne
mov
push
mov
sub
xor
sti
push
sahf
inc
push
xor
and
test
gs
xchg
or
jb
xor
xor
push
mov
xchg
xor
daa
jne
sahf
inc
shl
sbb
shl
inc
cs
add
mov
push
mov
push
addr16
jl
into
je
xor
pop
sbb
dec
test
daa
sub
mov
iret
(bad)
hlt
fwait
jecxz
cdq
hlt
jmp
in
dec
sbb
xchg
sbb
sub
ret
scas
outs
mov
(bad)
sub
xor
mov
cmps
fmul
jmp
cmps
ja
mov
xchg
push
mov
and
push
dec
sbb
pop
fdiv
cld
mov
push
shr
scas
push
cmp
(bad)
(bad)
jle
test
lds
or
inc
jmp
push
por
mov
inc
mov
ds
cld
pop
(bad)
sbb
mov
push
sub
mov
xchg
mov
mov
dec
cmp
out
inc
repnz
imul
sub
or
aaa
or
pop
imul
lds
lods
inc
inc
xchg
test
mov
repz
add
jno
lods
add
scas
loop
mul
sahf
cmps
movs
out
add
jge
and
fidiv
xor
lahf
sbb
push
(bad)
fcmovbe
add
std
add
cmps
in
(bad)
mov
pushf
das
sub
sahf
imul
dec
aad
mov
rol
adc
mov
lock
pop
xor
adc
fmul
cdq
loope
hlt
mov
push
int
add
jno
jno
inc
(bad)
sub
jecxz
ror
cmp
pop
movs
ja
call
mov
loopne
sar
inc
or
jo
xchg
fwait
das
adc
jno
imul
push
not
add
cmp
push
cmp
fistp
nop
call
pop
punpckhbw
retf
and
xor
nop
sub
cdq
ins
cmp
mov
jo
(bad)
push
ss
mov
mov
ror
in
xor
mov
test
iret
dec
push
mov
rcl
dec
or
test
push
fdivrp
shl
sub
mov
jecxz
cwde
(bad)
rcr
mov
shr
rol
dec
jmp
loop
adc
adc
add
pop
jp
sub
(bad)
lds
pop
jae
mov
xchg
icebp
cld
fsubr
add
push
lods
push
pop
push
ret
rcl
lahf
jp
xchg
jle
inc
cmps
mov
lods
rcr
retf
out
push
mov
popf
pop
mov
lock
lock
pushf
dec
xchg
inc
dec
scas
add
sub
sub
xchg
popf
mov
add
mul
and
rcr
dec
cld
fdivr
aaa
mov
fadd
dec
push
mov
jne
or
arpl
jmp
mov
pop
ss
push
mov
ret
stos
xchg
mov
push
aam
fsub
push
clc
shrd
push
fidivr
xchg
pop
aad
call
mov
loope
jle
mov
and
or
mov
jno
(bad)
ficom
and
lea
ret
fdiv
ss
pop
or
xchg
daa
inc
mov
cmps
or
popa
jnp
clc
lds
fistp
xchg
xchg
push
nop
and
xchg
pop
pop
retf
pop
sbb
lods
mov
aaa
xchg
sahf
in
pop
gs
fistp
sbb
jmp
inc
cmp
push
xchg
mov
lods
ja
mov
ja
and
mov
ins
sbb
xchg
dec
ret
shl
cmp
push
inc
call
mov
mov
push
hlt
fild
shl
dec
loop
jns
pop
sub
push
pop
cld
cmp
cmps
push
sbb
cmp
sti
mov
inc
pusha
ds
sbb
adc
movs
dec
push
loopne
push
dec
jmp
mov
inc
int
in
xchg
(bad)
lock
sahf
pop
fwait
imul
ror
inc
jge
adc
push
ror
cmp
aad
int
mov
inc
sub
add
pop
xchg
xchg
je
sbb
or
int
push
adc
fdiv
addr16
sbb
stos
xchg
pop
cmp
and
nop
jecxz
(bad)
jae
pop
pop
mov
xor
inc
dec
es
aad
add
sub
mov
adc
imul
add
clc
jecxz
jmp
mov
int3
and
fsubr
fwait
xchg
inc
cs
dec
pop
jge
gs
icebp
sbb
(bad)
and
push
std
ja
push
stc
adc
dec
sub
inc
movs
cmc
fcom
aas
or
jbe
push
dec
pop
add
cld
pop
dec
sub
aas
bound
ins
jno
sbb
leave
sti
inc
out
xchg
inc
lea
and
adc
ss
mov
(bad)
xchg
xchg
addr16
(bad)
jmp
ret
mov
mov
cmp
fisttp
retf
(bad)
in
rcl
jecxz
(bad)
jae
jo
adc
inc
adc
inc
stos
mov
mov
call
ss
sub
and
jecxz
fimul
fisub
push
add
cli
pop
and
sub
into
pop
std
push
dec
mov
adc
dec
push
sahf
add
popa
push
and
xor
mov
cwde
pop
jne
push
fsub
inc
xchg
dec
xor
mov
ins
(bad)
mov
cmps
fist
pop
(bad)
in
xchg
jecxz
test
mov
(bad)
fldenv
gs
pusha
in
mov
xor
ror
sbb
fdiv
push
mov
push
mov
cmc
mov
mov
push
imul
jecxz
(bad)
pusha
xchg
pop
cmps
pop
push
xor
leave
cwde
outs
and
mov
lods
test
js
lahf
test
cmp
es
sti
push
and
fistp
loope
sub
push
lods
in
cli
dec
push
(bad)
and
push
icebp
sbb
out
loope
pop
lock
xor
jge
adc
pop
add
jne
push
jmp
inc
lods
jae
or
push
adc
je
xchg
cld
dec
ja
xchg
cs
inc
hlt
add
mov
or
dec
pop
dec
sub
inc
pop
pop
imul
imul
mov
inc
(bad)
(bad)
fwait
pop
sti
push
loop
les
sbb
(bad)
xor
test
sub
jp
fwait
mov
fisub
adc
cmc
xor
mov
pop
mov
mov
movs
mov
xchg
or
jp
ficomp
mov
das
aas
stos
mov
retf
inc
push
js
addr16
mov
in
mov
jmp
dec
fwait
xlat
je
jg
and
push
xchg
popa
push
add
pop
pop
ficomp
push
mov
adc
adc
jmp
lods
pop
in
jecxz
pop
and
and
ss
sbb
ret
push
fiadd
lahf
lds
scas
repz
inc
leave
lea
retf
and
pop
movs
sbb
push
xchg
test
aam
inc
mov
sbb
jmp
ret
cmp
dec
push
cmps
popaw
aaa
pusha
or
jp
dec
push
jo
xchg
in
aad
aas
rcr
or
pop
test
xchg
sbb
nop
cld
jge
int3
test
mov
xor
push
cmp
mov
sbb
dec
sbb
fild
mov
int3
adc
call
xchg
push
jnp
cmc
pop
push
and
test
lods
pop
movs
adc
loope
ret
or
bound
push
arpl
cmp
xchg
sbb
xlat
cmp
xchg
movs
mov
fild
loope
cmp
jl
push
cmps
icebp
jl
test
mov
mov
cld
adc
aad
retf
push
pop
sahf
xchg
int
xchg
call
cmps
stc
xlat
xor
pop
cmp
fst
dec
(bad)
stc
loop
or
pop
push
mov
enter
jne
adc
stos
sbb
aad
mov
nop
loope
in
push
out
pop
gs
aad
pop
addr16
sbb
repz
shl
cmc
inc
cmp
jne
or
test
cmp
popf
mov
or
mov
push
jo
xlat
sahf
test
cmp
out
and
push
imul
int
jle
rcl
dec
out
(bad)
xchg
mov
and
int3
repz
test
push
cmp
xchg
push
(bad)
adc
loop
or
push
inc
int
sub
(bad)
popf
(bad)
xchg
fs
ror
push
aaa
cs
mov
call
mov
xchg
(bad)
dec
ds
xchg
jnp
mov
les
xor
(bad)
shl
mov
pop
xlat
out
cdq
aaa
in
rol
sub
aas
add
pop
push
std
(bad)
in
rol
adc
xchg
dec
outs
mov
sub
mov
clc
outs
(bad)
aam
sbb
test
xchg
sahf
(bad)
jae
push
out
adc
pusha
hlt
mov
cs
fs
cmc
mov
jnp
fdivr
sbb
push
adc
push
add
inc
test
leave
dec
inc
xchg
pushf
pop
or
(bad)
rol
bound
inc
fdivr
aam
xchg
cmps
das
jnp
mov
jbe
jp
inc
test
ins
mov
mov
bound
scas
add
inc
sbb
cmp
sbb
mov
int3
sbb
(bad)
imul
sub
scas
retf
and
pusha
jae
xchg
(bad)
dec
sbb
adc
iret
or
cdq
sub
sahf
adc
cmp
pop
sbb
sub
xchg
cmp
fisttp
bound
idiv
mov
mov
shr
jmp
mov
xchg
daa
sbb
xchg
mov
call
pusha
lods
mov
sub
dec
push
mov
and
push
retf
aam
aas
mov
fst
pop
repz
aam
mov
int3
in
dec
adc
in
lea
fcom
jge
loopne
out
pop
mov
fsubr
jle
cmp
xchg
jno
jnp
jl
icebp
mov
outs
or
push
call
pop
xchg
icebp
push
fistp
loope
and
daa
lods
ss
sar
jb
jo
test
in
retf
xchg
dec
gs
call
int
jne
push
mov
lds
inc
aas
aaa
and
or
xlat
mov
call
xchg
aaa
call
clc
pop
(bad)
arpl
fidiv
mov
les
push
add
mov
test
test
jl
ins
js
scas
push
rcr
xchg
lods
jl
fsub
pusha
sub
fsubr
sub
cmc
hlt
(bad)
ror
pop
sub
jl
call
lods
mov
inc
sbb
mov
dec
jle
lods
adc
inc
cmc
sbb
sub
test
pop
imul
leave
mov
mov
jmp
cs
push
push
mov
call
or
mov
test
push
(bad)
aad
jne
ins
and
jo
dec
pop
mov
inc
shr
or
in
cdq
in
or
mov
or
or
sbb
cmp
push
or
cli
mov
mov
(bad)
adc
dec
dec
(bad)
js
rol
cmp
or
push
out
stc
bnd
pop
pop
push
les
cmps
dec
xor
rep
and
imul
stc
mov
(bad)
popf
lods
pop
jg
call
inc
or
dec
int
cs
add
repz
pop
pop
inc
hlt
lahf
scas
out
push
jnp
pop
jbe
mov
cwde
in
scas
(bad)
or
or
lds
xchg
xchg
ins
cmps
pop
lock
mov
ins
sub
stos
push
pop
adc
retf
rcl
push
sbb
and
mov
or
imul
fnsave
data16
cli
sti
imul
nop
out
and
or
sbb
mov
fimul
(bad)
sbb
adc
sbb
out
mov
mov
or
ss
clc
mov
pop
xor
and
mov
xor
ror
mov
xchg
in
push
popf
jecxz
adc
popf
xor
or
jmp
inc
scas
fidivr
pusha
and
adc
add
mov
mov
mov
stos
jp
pusha
sub
test
xchg
sbb
fs
jmp
cs
cmp
in
add
cs
popf
push
fisttp
dec
sahf
add
mov
test
lahf
rol
cdq
das
mov
xor
xchg
gs
out
fsubr
add
fcomp
mov
inc
test
icebp
test
das
mov
call
jl
mov
movs
push
leave
aam
mov
cmp
test
mov
in
test
(bad)
push
popa
iret
iret
cdq
add
mov
movs
ds
pop
pop
(bad)
into
(bad)
gs
repnz
in
imul
add
sar
pop
dec
jne
das
dec
cdq
mov
shl
xor
stc
pop
and
xchg
call
inc
sti
in
dec
and
mov
arpl
cli
xor
hlt
xchg
adc
idiv
jo
push
jae
push
sub
and
mov
clc
test
mov
stos
stos
add
xor
inc
js
outs
loop
rcl
adc
les
lds
hlt
jne
stos
into
aam
into
pop
cmp
cs
adc
lea
xor
jle
pop
mov
jno
imul
cli
shl
shl
sbb
pusha
loopne
and
cli
inc
adc
iret
popf
sbb
mov
nop
shl
ret
inc
inc
mov
mov
(bad)
retf
adc
adc
add
xor
mov
xor
cmp
inc
cmp
xor
jmp
cld
stos
pop
cmp
pop
cmps
add
enter
dec
and
aad
stos
(bad)
xor
pop
xlat
mov
outs
ret
lods
cmp
inc
jnp
pop
push
fst
daa
out
cmp
fsubr
mov
sti
imul
push
out
lea
nop
and
push
or
pop
addr16
clc
cmp
cmp
cmc
outs
pop
mov
div
lods
mov
or
mov
popa
adc
idiv
inc
aam
idiv
mov
fadd
sbb
mov
movs
cmp
(bad)
push
or
mov
loope
jnp
(bad)
cld
cwde
mov
mov
inc
cmp
sub
loopne
neg
cdq
add
(bad)
fcomp
sub
bound
and
push
cmps
(bad)
xchg
mov
int3
xor
ffreep
leave
test
dec
xor
mov
cmp
pop
or
mov
es
neg
inc
dec
cmp
xor
cmps
(bad)
lds
push
rcr
not
mov
pusha
into
mov
loop
leave
jbe
cmp
sar
cmp
aaa
js
xor
dec
add
sub
mov
mov
fsub
mov
mov
fadd
stc
mov
push
cmc
(bad)
fdivr
dec
fistp
push
leave
mov
int3
cmp
jl
jmp
rol
adc
enter
sub
daa
dec
mov
jne
xchg
xchg
ins
sbb
test
repz
loope
or
adc
push
jmp
lods
jg
xlat
adc
icebp
retf
push
cmps
pop
iret
push
into
int
and
adc
and
mov
and
or
or
mov
lods
in
movs
test
sbb
movs
popf
mov
or
fist
jge
pop
mov
pop
cs
cs
cmps
ret
jge
inc
add
or
adc
jne
sbb
loop
inc
fimul
mov
cmp
adc
mov
or
sti
mov
imul
mov
or
pop
nop
xor
ret
mov
sbb
mov
int3
in
in
pop
cdq
push
leave
pop
inc
in
push
dec
push
iret
mov
or
out
cdq
jl
mov
adc
std
pop
ja
(bad)
push
and
ret
push
sti
push
stc
xchg
neg
add
dec
xchg
ins
in
mov
cld
add
in
stos
test
xor
adc
mov
add
sahf
xlat
inc
xchg
jmp
test
or
scas
out
out
aad
arpl
mov
pusha
jecxz
test
movs
mov
scas
lea
mov
cmps
imul
xchg
repz
dec
ficom
cwde
sub
xor
mov
das
xchg
idiv
xchg
or
push
sbb
stos
push
loopne
mov
mov
fwait
dec
jno
(bad)
fnstcw
push
out
cmp
mov
jle
cmp
cwde
cdq
js
repnz
xor
mov
dec
and
cli
hlt
dec
clc
es
mov
dec
pusha
or
or
pop
enter
ja
pop
ret
mov
cwde
cmp
test
jne
adc
rol
dec
lods
add
mov
shr
fnstcw
mov
sti
aaa
mov
dec
test
mov
cli
xor
jb
das
addr16
repnz
fistp
das
stos
push
movsx
popa
gs
mov
test
xlat
scas
cld
push
out
xor
loope
dec
push
adc
shr
add
cwde
inc
pop
pop
adc
adc
sahf
jns
nop
fadd
push
nop
xchg
ins
das
ret
xchg
adc
add
pop
push
pop
in
adc
mov
fadd
push
or
xchg
pop
inc
cmc
inc
mov
dec
adc
fs
cmp
rcl
push
mov
out
add
ins
mov
dec
sahf
out
add
mov
popf
ins
adc
inc
or
push
mov
aam
out
cmps
nop
cmps
dec
adc
add
or
arpl
movs
jnp
mov
sbb
cmps
mov
movs
js
pop
cmps
pop
pop
movs
sub
inc
ins
sbb
aaa
js
aas
sub
mov
pop
dec
jecxz
cli
enter
mov
adc
outs
jne
sub
jmp
sbb
push
sbb
push
div
leave
mov
inc
(bad)
adc
mov
dec
push
and
pop
inc
int
cs
lods
(bad)
xor
cmp
lods
mov
sbb
inc
add
jl
jnp
cmps
lods
and
mov
or
imul
loop
(bad)
call
adc
cmps
sub
adc
add
push
cli
adc
out
pop
jb
pop
cdq
ret
or
neg
pop
in
jae
push
cmp
inc
std
mov
jae
cmp
inc
mov
xorps
icebp
adc
dec
add
adc
ins
sbb
adc
aam
js
test
scas
pop
popf
xor
sahf
aam
fisub
add
or
in
cmc
push
inc
in
fcmovne
lods
push
jo
rcr
nop
rcr
push
mov
pop
data16
cdq
das
add
ror
push
shl
xor
ret
test
pop
imul
mov
dec
mov
dec
or
sub
adc
jb
push
sbb
out
das
xlat
inc
scas
push
mov
out
aam
pop
inc
imul
push
outs
xor
sbb
push
je
fiadd
ficom
ja
push
jo
mul
pop
sub
daa
neg
imul
lods
ja
fidivr
mov
pop
ins
jne
dec
add
xor
movs
and
into
and
xchg
retf
cli
stos
into
jle
xor
mov
push
push
call
nop
xor
add
xor
int3
js
into
cmp
cmp
mov
clc
pushf
aad
cmc
xchg
nop
int3
jmp
sub
sahf
xchg
inc
aam
ror
inc
lods
pop
and
mov
ret
lods
sbb
and
dec
repz
mov
shl
test
retf
sbb
fdiv
hlt
(bad)
std
loop
xor
xchg
fsub
jp
or
mov
test
fdivr
mov
mov
fistp
mov
jle
popf
sti
test
pusha
shr
cmps
push
outs
pop
scas
out
js
mov
ins
je
xchg
mov
jp
int
and
add
add
pop
data16
mov
test
sbb
adc
adc
shl
popa
mov
and
adc
(bad)
or
xchg
jmp
es
scas
daa
dec
scas
push
mov
dec
jmp
repnz
pop
loopne
jo
or
outs
jb
or
pop
sub
ins
cli
sub
(bad)
add
sbb
lea
xor
inc
stos
jo
ja
or
xor
call
enter
push
cs
sar
pop
ins
cmp
mov
test
dec
adc
aam
inc
cmc
aas
xlat
adc
fisubr
xchg
mov
daa
cmp
fmul
mov
xchg
jg
adc
popf
fsub
add
data16
mov
(bad)
loope
iret
rcr
int3
xchg
inc
jmp
push
test
scas
test
pushf
or
fs
sub
push
sbb
sar
cmp
push
out
add
xchg
std
hlt
jle
(bad)
xor
stc
sar
clc
iret
mov
(bad)
push
lock
mov
bound
pusha
pop
jle
pop
inc
mov
or
add
push
xchg
cmc
push
xchg
jg
jl
dec
and
and
or
aam
push
push
mov
pushf
inc
cs
clc
mov
(bad)
jmp
mov
in
jmp
xchg
test
ins
mov
pop
je
repnz
ficomp
xor
ins
test
stos
(bad)
inc
pop
or
jecxz
and
iret
xor
jmp
cld
jnp
adc
push
pop
adc
mov
ret
mov
add
sbb
(bad)
lahf
sub
in
call
neg
je
pusha
inc
adc
daa
and
or
sbb
dec
in
test
xor
cmps
shl
hlt
pop
sahf
(bad)
loopne
mov
xchg
leave
push
inc
pop
jge
cmp
mov
pop
jne
popf
jmp
stc
arpl
dec
(bad)
sbb
scas
imul
adc
xor
push
imul
pop
inc
cmp
stos
mov
cmp
or
pop
(bad)
mov
sub
stos
or
and
movs
mov
jmp
fld
mov
stc
pop
adc
stos
add
mov
mov
push
fwait
or
scas
test
das
xchg
fld
dec
daa
dec
sbb
jl
out
lea
add
cmp
push
jmp
cdq
jle
push
sub
mov
dec
cmc
icebp
xlat
jg
iret
stos
adc
xlat
les
cmps
jae
jmp
adc
test
movzx
lods
inc
movs
in
outs
dec
scas
inc
int
lahf
sar
js
push
or
movs
mov
xor
ret
sbb
lds
xor
ss
cwde
add
sub
pop
dec
pop
out
pop
push
pop
aam
mov
lea
xchg
mov
into
stos
fs
das
and
xchg
or
adc
mov
mov
ds
mov
pop
inc
xor
lods
les
emms
sub
pop
lahf
test
jno
xchg
ror
test
inc
mov
and
movs
sar
call
ds
ins
nop
movs
sahf
popa
add
(bad)
in
retf
fbld
mov
inc
xor
mov
pop
add
inc
dec
xchg
dec
(bad)
jno
add
repnz
pop
pusha
xlat
or
mov
dec
inc
nop
fwait
push
retf
shl
ret
sbb
mov
cmps
xchg
(bad)
dec
fist
sub
pop
outs
sbb
mov
(bad)
pop
xor
fdiv
cmp
push
dec
xchg
stos
add
xchg
dec
fcmovu
fist
inc
pop
loope
outs
retf
xchg
mov
movs
fmul
xchg
ja
fild
or
xchg
rol
pop
inc
jae
sub
jecxz
shld
pop
scas
inc
div
pop
pop
and
push
add
sub
out
add
mov
(bad)
and
ja
cmp
retf
or
mov
mov
cmp
mov
jb
dec
retf
inc
sub
lock
mov
xchg
js
dec
ror
in
push
push
pop
mov
mov
imul
xor
aam
and
fsub
cmc
shl
jns
jp
and
fld
add
pop
and
bswap
dec
push
xor
xchg
cmps
daa
pop
test
nop
inc
loope
ins
shl
test
leave
je
pop
pop
jno
dec
ret
repz
adc
mov
dec
mov
cli
addr16
push
xlat
or
pusha
mov
mov
pop
out
ror
cmp
into
(bad)
pop
xchg
movs
test
enter
call
imul
mov
dec
add
fst
mov
mov
leave
pop
jbe
scas
sbb
cmps
mov
(bad)
add
mov
rcr
sahf
pusha
cmc
shl
add
daa
add
mov
cs
daa
inc
pop
xchg
xor
inc
(bad)
stos
lahf
mov
adc
aam
add
jae
call
jo
add
movs
cdq
and
push
loope
inc
or
loopne
xor
imul
xchg
push
mov
jg
enter
call
xlat
mov
add
add
(bad)
ss
sub
mov
sbb
shl
in
push
jae
test
rol
aaa
(bad)
mov
data16
jmp
stc
pop
pop
fisttp
lock
or
mov
leave
sbb
dec
stc
popf
cmps
(bad)
xchg
jmp
push
sub
push
sbb
cmp
jecxz
xor
jno
retf
lds
ret
or
add
xor
sub
mov
push
movs
std
iret
adc
pop
cmp
adc
mov
pop
xor
push
mov
push
fisttp
inc
out
sbb
jg
hlt
(bad)
push
mov
xor
das
rol
repz
loop
(bad)
jmp
dec
sbb
das
sbb
dec
dec
test
mov
adc
sbb
retf
and
scas
xor
and
push
xor
in
mov
test
jmp
(bad)
rol
mov
sub
pop
or
bound
adc
fidiv
jle
aad
cmp
leave
inc
fisubr
fadd
pop
(bad)
adc
mov
push
push
inc
add
(bad)
xlat
out
push
push
add
rcl
(bad)
aas
scas
cld
cmps
add
sub
sbb
ins
cdq
xchg
imul
push
jge
mov
test
test
cmp
popf
mov
dec
ds
adc
mov
cld
xchg
rcl
fidivr
jg
adc
shr
dec
sub
addr16
ror
pop
dec
arpl
popa
outs
dec
jne
lahf
mov
inc
gs
push
(bad)
jno
je
imul
imul
fdivp
outs
push
std
mov
aas
adc
loop
jecxz
jb
js
icebp
adc
adc
loope
push
popf
sbb
cmc
(bad)
xchg
push
or
mov
jne
xlat
lds
out
push
dec
xchg
jb
mov
ror
mov
mov
lods
shr
cld
push
mov
pop
pop
and
sub
push
and
pusha
js
cli
ds
or
adc
pop
add
cmp
scas
into
out
hlt
mov
and
mov
jl
mov
sub
out
xor
pop
lahf
dec
mov
enter
dec
sub
or
js
cmps
jmp
dec
test
(bad)
lds
mov
scas
cmps
aas
test
rcr
fsubr
inc
push
and
dec
jmp
cmps
dec
add
mov
imul
adc
fisub
jl
int3
pop
lods
xor
fimul
mov
sub
fild
sub
cmc
shl
lds
jmp
cmp
in
mov
lds
rcr
loopne
push
aas
cli
data16
outs
jb
adc
sbb
add
rcr
icebp
(bad)
idiv
mov
and
sbb
call
pusha
sbb
movs
sbb
fstp
adc
inc
push
(bad)
les
dec
dec
mov
hlt
iret
mov
cmp
mov
dec
por
add
inc
je
mov
xchg
mov
sub
jp
fiadd
cli
xor
mov
push
adc
rol
test
xchg
jb
mov
stc
mul
sbb
jno
cmp
dec
mov
or
or
sub
push
sub
cmp
(bad)
push
jae
adc
popa
adc
pop
pop
loopne
mov
test
sub
cmp
jmp
repz
and
arpl
nop
(bad)
fdiv
and
lods
loopne
pop
jmp
push
lods
pop
add
jmp
adc
adc
out
adc
add
icebp
(bad)
sub
jno
mov
mov
(bad)
lods
mov
sub
xor
lock
or
add
jle
mov
push
in
mov
xor
mov
mov
pop
call
ins
cwde
sub
ja
sbb
adc
fs
scas
adc
mov
jle
mov
xchg
ret
xchg
mov
and
stos
lds
int
add
daa
mov
mov
xor
shr
cli
sbb
jnp
fisub
shr
imul
outs
pop
mov
js
(bad)
pop
push
mov
retf
(bad)
cdq
adc
cmp
xchg
stos
sbb
fwait
mov
pop
mov
and
fst
int3
lock
cmp
std
aas
out
dec
arpl
gs
mov
or
dec
clc
add
mov
mov
pop
je
xor
shl
inc
les
ss
fsub
add
lahf
test
pop
and
(bad)
fsub
nop
pop
xchg
mov
adc
mov
in
out
loopne
cmps
fcomp
pusha
xchg
mov
lea
daa
fldcw
inc
mov
int
stos
aas
stos
and
int
inc
cmps
cmp
sbb
pop
lock
mov
push
aam
pop
mov
inc
ds
sbb
ret
sub
and
dec
sbb
movs
and
mov
out
push
jecxz
cmp
aam
sub
cld
lods
mov
jl
test
shr
pop
fild
push
cmp
loope
pop
cmp
daa
std
and
aaa
cmp
jl
fmul
inc
rcl
movs
add
ret
sub
adc
nop
or
push
push
outs
popa
lds
cmp
inc
sub
fmul
add
das
mov
clc
in
cmp
jmp
sbb
addr16
fidivr
pop
lods
push
lods
jecxz
imul
sbb
add
fimul
jne
es
push
in
fsubr
jle
fucomip
sbb
dec
(bad)
cmp
mov
cmps
icebp
xor
sahf
cmp
bound
cwde
es
dec
ficomp
scas
fimul
mov
jmp
pop
loope
mov
movs
int
outs
sbb
out
in
pop
fprem
sahf
add
into
enter
iret
gs
in
push
test
push
out
imul
or
pop
xchg
int3
lahf
inc
sar
mov
push
jge
inc
sahf
mov
mov
push
push
aas
inc
jae
sbb
jl
mov
pop
sbb
call
fidiv
sbb
outs
fld
add
jl
sti
stos
inc
mov
mov
mov
(bad)
mov
leave
retf
sbb
push
mov
xchg
fwait
pop
dec
cmp
cmp
dec
mov
out
test
push
pop
jge
cmp
adc
adc
popa
xchg
movs
push
es
sti
push
(bad)
imul
inc
(bad)
lods
pop
(bad)
call
enter
xor
imul
pushaw
icebp
and
dec
jno
dec
sbb
dec
es
pop
push
(bad)
iret
pop
addr16
bound
jl
popa
cmp
ins
idiv
out
imul
jne
push
ja
shr
call
jmp
mov
and
or
fndisi(8087
mov
adc
inc
sahf
cmp
arpl
sti
mov
dec
cmps
pop
ja
inc
jnp
sub
mov
mov
or
jp
adc
pmulhw
das
sub
xchg
mov
adc
out
xchg
stc
ins
(bad)
push
mov
mov
pop
push
popa
(bad)
jno
dec
or
push
daa
sti
stc
aaa
mov
push
mov
daa
mov
retf
push
icebp
add
inc
ds
xor
bound
push
into
and
jmp
cmps
outs
sub
nop
push
loopne
push
imul
inc
in
inc
adc
lahf
das
hlt
std
xor
icebp
in
cmps
push
mov
test
test
sbb
jo
push
jb
das
outs
rcr
aaa
rcl
pop
enter
jmp
jmp
in
cmp
xor
mov
jge
scas
pop
and
das
sbb
icebp
movs
test
adc
pushf
add
cli
test
ins
in
mov
pop
test
aad
out
add
jmp
jno
in
push
shr
xchg
stos
out
or
cmp
xchg
test
fldcw
repz
icebp
adc
lods
retf
(bad)
cdq
xor
mov
or
sbb
cwde
cmps
pushf
inc
add
pop
mov
mov
lock
loope
jmp
ret
int
rcl
cmps
xlat
xchg
int3
lock
mov
std
or
out
sbb
mov
or
aad
adc
(bad)
rcl
dec
shl
jle
dec
jp
lock
cmp
adc
push
into
aas
inc
dec
add
pop
retf
movs
cmp
repnz
push
push
in
or
push
mov
sbb
push
jb
std
popa
stos
or
lahf
imul
bound
xchg
and
shr
repnz
loope
xchg
push
and
and
cmps
inc
or
push
cmp
fnstenv
jl
cmp
pushf
push
push
sub
outs
sbb
inc
shr
mov
xlat
fs
dec
mov
enter
pop
pop
sub
repnz
adc
dec
fld
or
js
lock
(bad)
dec
(bad)
std
dec
lods
loope
sub
stos
(bad)
call
cs
xchg
mov
(bad)
lock
cmp
dec
mov
(bad)
cmp
mov
retf
pushf
fs
sub
stos
xor
test
pushf
cmp
call
sbb
cs
cmps
sub
mov
imul
mov
adc
or
mov
test
(bad)
jmp
(bad)
xchg
les
or
add
cmps
fcom
jo
call
arpl
pop
push
gs
mov
fsubr
js
adc
add
cmps
mov
mov
lds
rcr
call
jbe
inc
imul
xchg
aas
aas
or
cmp
clc
mov
ficom
iret
mov
mov
xchg
xchg
and
leave
arpl
push
and
xchg
inc
mov
in
and
sbb
outs
or
bound
cmp
or
jb
fsubr
mov
push
scas
adc
leave
shr
push
loopne
sahf
push
idiv
cli
sti
xchg
jo
mov
sub
std
fisub
jo
and
fsin
sahf
and
jae
fidiv
dec
sub
adc
mov
inc
gs
mov
ins
fdiv
sbb
sub
sar
inc
mov
fwait
shl
and
cmp
adc
xor
cmps
dec
pusha
or
in
sub
test
mov
push
fcmovnbe
cmp
es
cli
mov
arpl
jns
(bad)
sub
xchg
xchg
xchg
add
push
jne
push
jmp
clc
pop
int3
popa
imul
dec
adc
sub
jo
retf
sub
(bad)
ins
adc
test
in
mov
lds
and
adc
add
sbb
pop
lea
xor
push
repz
xchg
ds
dec
or
dec
in
or
rcl
mov
pop
adc
jbe
enter
pop
push
cld
add
sub
dec
repnz
arpl
in
ror
out
cmp
lods
mov
or
push
ja
jmp
icebp
gs
or
cdq
sub
push
mov
push
aad
sbb
jne
aam
pop
gs
mov
or
data16
popf
inc
mov
test
aaa
lea
nop
fdiv
stos
push
mov
pop
sar
and
push
lahf
jle
jmp
aaa
hlt
cmp
add
ins
inc
fmul
pushf
call
test
adc
test
add
retf
pop
or
mul
push
fsubp
adc
and
add
sbb
dec
xchg
pop
dec
add
loopne
sub
jbe
mov
xchg
push
retf
ja
and
shr
call
(bad)
xchg
sub
push
cld
imul
scas
aam
sti
cwde
cwde
inc
dec
je
repz
adc
xchg
sub
adc
jbe
sbb
and
pop
sub
cmc
aas
push
ret
cli
inc
ret
xor
lar
adc
repz
push
retf
call
xchg
adc
shl
retf
adc
xlat
mov
lods
mov
sbb
push
iret
jnp
(bad)
jmp
mov
fs
add
shl
pusha
fwait
or
bound
mov
pushf
std
aas
ret
xchg
(bad)
aam
outs
dec
popf
clc
inc
cwde
addr16
push
jnp
push
(bad)
xor
push
mov
mov
inc
and
pop
sub
adc
push
cmps
scas
dec
pushf
cmp
stc
add
(bad)
xor
ret
push
pop
fcomp
add
cmp
mov
dec
push
inc
daa
vmovaps
sahf
mov
cli
imul
jns
dec
fwait
xchg
mov
mov
jmp
iret
pop
add
xor
jno
adc
test
popf
out
js
stos
xchg
push
xor
movs
mov
lds
aas
icebp
std
in
sub
mov
test
mov
sbb
not
add
popa
mov
pop
xchg
jecxz
clc
dec
pop
js
das
pop
int
jbe
mov
call
sub
test
iret
arpl
imul
mov
mov
adc
adc
and
mov
mov
ret
out
or
sti
cld
mov
bound
lods
push
mov
mov
loope
retf
fnstenv
rcl
imul
xchg
push
dec
dec
mov
adc
ret
pop
ins
xor
pop
(bad)
iret
jl
pop
ror
push
mov
or
shl
mov
pop
sbb
push
je
int
nop
xor
xchg
push
xchg
std
sub
cmp
fisubr
sahf
and
jno
fcmovne
cmp
daa
test
jns
fidiv
(bad)
push
outs
xor
and
mov
das
cli
inc
sbb
and
popa
ja
ins
cmovl
fstp
jb
scas
jo
mov
dec
xor
push
xor
inc
adc
xlat
aam
(bad)
icebp
mov
add
test
(bad)
jle
bnd
push
dec
test
pop
mov
test
je
xchg
into
mov
test
es
adc
push
push
xchg
cld
or
mov
sbb
gs
push
sbb
sbb
sub
hlt
clc
into
adc
pop
hlt
push
jb
mov
inc
dec
in
test
pop
add
add
inc
xlat
inc
cld
xor
call
mov
imul
xchg
mov
xor
ror
imul
pop
or
mov
in
or
sbb
jb
sahf
inc
mov
mov
outs
xor
aaa
xchg
mov
fwait
(bad)
pop
movs
mov
mov
push
aad
fcmovnbe
mov
rol
jno
jae
push
das
test
pop
ficom
jmp
inc
push
push
adc
aaa
popa
dec
aas
repz
icebp
xor
repz
cmps
mov
hlt
hlt
sub
or
test
dec
or
retf
popa
jno
pushf
or
push
fs
sub
fisttp
es
xor
mov
xor
rol
js
adc
push
inc
ret
and
mov
out
aam
xchg
hlt
xchg
or
mov
push
lahf
movs
stos
mov
mov
stos
cmp
pop
ja
mov
mov
arpl
repz
lods
dec
jbe
cmp
add
imul
hlt
popf
sti
addr16
sub
mov
into
xlat
jne
int
jne
std
mov
icebp
cmp
or
jno
ins
ficomp
pop
and
push
bound
jae
in
stc
xor
lock
dec
imul
xlat
mov
imul
adc
mov
cdq
push
sar
dec
call
jmp
push
xchg
vstmxcsr
aaa
ret
jb
sbb
in
call
xlat
push
aas
dec
js
jb
xchg
add
ja
adc
mov
scas
add
cwde
pop
int3
mov
lds
retf
dec
cmps
or
or
pop
and
es
rcr
out
out
mov
aas
pop
or
push
sbb
mov
nop
push
push
pop
push
mov
mov
retf
pmaxub
xchg
imul
xor
dec
inc
xor
xor
pop
nop
sub
or
mov
xchg
sbb
rcl
ret
lods
cs
shl
xchg
or
mov
mov
daa
jbe
xchg
xor
push
pop
aad
mov
hlt
dec
xor
add
push
or
xor
retf
xor
mov
push
and
sti
jns
sub
pop
js
add
cmp
lds
xchg
scas
or
hlt
leave
shl
mov
dec
cmp
cwde
imul
scas
push
sar
test
pop
or
test
dec
sbb
add
and
mov
push
add
mov
add
cmp
push
ja
int
xor
push
xchg
out
cmp
repnz
jle
mov
call
mov
out
jecxz
xchg
cli
sbb
cmp
pop
mov
loop
mov
mov
mov
and
xor
mov
lods
movs
pop
std
out
loop
cmc
outs
(bad)
ja
lods
fnstenv
fnstenv
dec
imul
das
xor
jp
pop
stos
(bad)
jecxz
xchg
mov
jae
out
out
ins
mov
ja
test
cld
outs
dec
push
jno
or
pop
xor
fnstcw
or
into
into
ja
xchg
out
shr
sbb
jge
xchg
xchg
or
mov
xchg
fsubr
(bad)
jmp
je
in
xor
hlt
enter
xchg
cmps
sar
or
push
cdq
(bad)
or
sbb
lods
adc
mov
movs
je
mov
mov
jecxz
test
jp
fisub
outs
cmc
addr16
push
push
enter
dec
inc
lahf
pop
ror
and
(bad)
dec
push
and
in
mov
gs
fidiv
xor
enter
inc
xor
jecxz
inc
cli
sbb
dec
mov
sub
xor
mov
or
and
int
and
cs
add
cld
xlat
mov
leave
adc
adc
push
iret
scas
ficomp
add
add
xor
sti
jnp
mov
mov
dec
sbb
cmp
and
jge
sub
cmc
adc
xchg
stos
mov
push
or
sbb
and
or
sbb
mov
pop
daa
sar
mov
mov
pop
mov
in
push
cmp
enter
out
repnz
xchg
ror
cmps
lods
lds
mov
pop
lahf
shl
push
mov
aas
mov
ins
cmps
cmp
and
sbb
sbb
bound
dec
les
in
lods
mov
and
push
sbb
clc
lds
(bad)
ins
fstp
add
cmps
mov
or
push
imul
push
cdq
cld
pop
jbe
adc
je
jmp
mov
in
pop
retf
cli
and
outs
sub
pushf
jnp
cli
jo
push
mov
sbb
nop
fsubrp
push
into
dec
stos
pop
mov
dec
dec
xor
push
and
add
daa
pop
xchg
pop
cmps
rcr
mov
xor
jle
cmp
push
push
je
sbb
scas
jnp
std
cdq
cmps
cmp
or
aam
repnz
jno
lahf
arpl
data16
shl
inc
xlat
xchg
or
mov
or
add
cmps
cmps
imul
fistp
sub
or
ja
sbb
jg
pop
retf
loop
loop
es
jmp
loope
cli
add
(bad)
std
imul
inc
adc
mov
(bad)
jp
aam
dec
popa
xchg
fmul
pop
mov
xor
add
and
and
test
xor
fadd
cmp
rol
enter
es
mov
cmp
mov
mov
cld
xor
cmc
mov
dec
push
mov
std
xchg
outs
out
mov
inc
das
jbe
xor
ja
scas
push
sub
mov
arpl
fisubr
mov
pop
sbb
jecxz
dec
into
xor
or
pop
repz
mov
(bad)
fild
arpl
pop
jmp
aas
fdiv
pop
pusha
and
pop
jne
sub
xchg
fistp
pop
and
xchg
and
push
outs
mov
ins
call
inc
cmp
adc
(bad)
push
xor
cld
xchg
in
sbb
mov
sahf
dec
xchg
fld
and
retf
cmovo
retf
xor
(bad)
in
test
test
mov
out
or
je
loop
lock
sbb
mov
mov
sub
sahf
dec
mov
inc
push
or
retf
call
dec
lods
dec
cs
in
xor
mov
inc
add
outs
xchg
ins
mov
inc
lahf
and
mov
ja
mov
cmp
add
pushf
sub
mov
mov
movs
icebp
push
les
cmps
push
inc
in
inc
ror
movs
ins
inc
mov
or
lods
xchg
inc
mov
sar
cli
xchg
imul
loop
cmc
sub
xchg
sub
je
mov
pop
stos
imul
or
movs
icebp
shr
push
(bad)
and
and
jge
jle
jmp
fs
movs
(bad)
pop
adc
ficomp
mov
dec
sub
retf
jne
movs
xchg
cmp
inc
add
and
dec
add
or
scas
sbb
push
pop
lods
cld
mov
repz
icebp
test
adc
ins
in
mov
pop
pop
or
mov
cld
adc
jo
cmp
test
sub
rol
aaa
inc
stos
std
cwde
pop
jge
sbb
xor
sub
std
push
addr16
push
xchg
xchg
shl
dec
icebp
rcl
(bad)
stos
loopne
sub
dec
sbb
mov
popf
cmp
ret
jmp
push
mov
stc
mov
loope
xchg
mov
push
mov
xor
int3
inc
mov
and
rcl
ja
ret
mov
sbb
ret
sub
jg
jge
mov
sahf
scas
push
dec
add
inc
mov
xchg
push
pop
cmc
or
hlt
and
iret
jp
jno
cdq
or
dec
es
dec
sub
jl
mov
jle
mov
fst
xlat
inc
mov
mov
outs
in
lods
fbstp
push
addr16
lock
xor
movs
jae
stos
and
cwde
lea
mov
rol
out
pop
cs
(bad)
xchg
sbb
mov
test
xchg
mov
data16
ins
add
add
aad
in
(bad)
pusha
mov
hlt
enter
cmp
call
jp
pop
cli
or
sbb
mov
xchg
jge
adc
cmp
dec
ficom
not
or
mov
ja
mov
cld
jno
pop
ss
xchg
retf
mov
cmc
adc
sar
movs
push
inc
gs
inc
push
mov
xor
mov
sbb
pop
push
out
cmp
inc
xor
js
add
mov
cmp
js
popf
out
push
lea
out
out
xor
adc
jns
ins
xor
call
and
jo
pop
jo
add
sbb
aas
sub
or
adc
pushf
cmps
pop
fld
inc
mov
jp
xor
call
dec
fcmovnb
jp
mov
cmps
std
arpl
mov
xchg
jae
out
icebp
inc
mov
test
dec
jo
mul
sar
dec
jno
pop
adc
pop
loopne
test
pop
add
fs
and
div
jnp
sbb
xchg
push
dec
arpl
aad
aam
jp
dec
call
jb
arpl
repz
ss
xor
je
cmc
test
mov
loop
cmps
jno
repz
dec
cmp
cdq
pop
and
fs
int
shl
add
sbb
movs
dec
out
adc
cmc
pop
into
es
ins
pop
jp
test
shl
sbb
xchg
imul
test
add
xor
xchg
arpl
fsubr
mov
iret
cs
js
imul
or
(bad)
and
mov
or
lock
fmul
je
mov
(bad)
adc
(bad)
sar
or
ds
sbb
sub
js
inc
and
cmp
mov
loopne
inc
out
data16
data16
xor
aaa
enter
push
jecxz
cmp
xor
push
rol
test
das
jb
and
xchg
jmp
ret
ins
adc
mov
bound
adc
xchg
cmp
scas
out
jg
mov
cmp
repz
push
pop
call
out
push
mov
movs
mov
push
jo
xchg
fst
push
repnz
cmp
cmps
mov
jecxz
cdq
mov
int
push
adc
inc
sub
sbb
out
sbb
sub
adc
add
ret
cmps
retf
add
out
dec
aaa
scas
jmp
push
inc
cmps
aas
or
sbb
xchg
inc
xor
cmp
fcom
push
(bad)
mov
inc
rcl
rcr
imul
in
mov
sbb
pop
nop
mov
repz
mov
xlat
ja
mov
(bad)
cs
push
hlt
int3
cmc
mov
mov
sbb
popf
and
call
jns
mov
sti
mul
repnz
xchg
jg
out
(bad)
aad
mov
pop
(bad)
cdq
lods
xor
sahf
sbb
hlt
or
or
add
xor
dec
(bad)
adc
adc
(bad)
in
xchg
sbb
sub
lods
cmps
aad
mov
push
dec
call
(bad)
cli
mov
cmp
jnp
and
mov
cmp
shl
inc
and
push
sub
test
cmps
inc
mov
mov
rcr
inc
ja
pop
fwait
adc
shl
ds
and
push
sbb
pop
pop
xor
cmp
idiv
leave
pop
les
ror
pop
vpmaskmovq
mov
dec
in
fld
cmp
pop
pop
dec
out
inc
in
sbb
ds
sbb
inc
jl
fld
inc
dec
movs
push
sbb
rol
jo
mov
pop
dec
data16
sub
je
retf
out
gs
scas
jge
inc
jne
push
jmp
mov
jbe
jmp
test
shl
jg
jp
or
xchg
jbe
and
xchg
gs
pusha
or
xchg
hlt
or
pop
repz
scas
leave
dec
push
jmp
cwde
pop
inc
into
xor
(bad)
test
or
iret
movs
mov
loop
loopne
or
or
sti
stos
push
pop
cmc
ins
(bad)
lods
pop
mov
push
adc
push
mov
push
adc
into
hlt
inc
cmp
sbb
pop
adc
into
ret
adc
ss
jno
pop
int
inc
sbb
ss
inc
push
mov
pop
mov
imul
and
mov
sbb
and
xchg
mov
mov
dec
imul
jge
mov
js
jl
sub
push
mov
dec
scas
imul
pop
mov
sub
sti
fnstsw
jne
push
xchg
xchg
and
movs
aam
push
sub
xchg
dec
fadd
out
jp
jb
xor
outs
pushf
sub
nop
aaa
mov
adc
call
js
arpl
ins
jb
cmp
inc
sub
fst
push
stc
jmp
(bad)
inc
fwait
ins
mov
inc
push
enter
mov
(bad)
cwde
mov
jne
jmp
xchg
dec
iret
xchg
jo
test
test
shl
mov
rol
dec
sub
and
les
shl
icebp
and
jne
es
aam
dec
mov
cld
sub
sub
push
jmp
int3
int
mov
loope
js
sub
and
out
fst
jb
and
inc
mov
sub
xor
and
sub
adc
xchg
stos
inc
inc
pop
bound
jmp
cmp
test
mov
leave
lea
dec
ins
xchg
in
mov
cmc
das
into
icebp
sub
or
aad
into
sub
push
imul
adc
ror
test
pop
fcmovnu
into
pushf
ins
push
inc
and
xchg
sbb
xchg
xor
pop
call
xchg
inc
pop
sbb
(bad)
je
popf
or
ds
fcom
jno
jbe
call
inc
mov
repnz
popf
setne
cmc
xor
fcmove
add
dec
or
dec
outs
out
push
dec
dec
pop
enter
repnz
xchg
das
ins
adc
int3
mov
sub
push
adc
cdq
pop
arpl
and
pop
ror
xchg
push
ins
ja
stc
jb
cmp
out
jg
or
push
dec
bnd
imul
xor
xchg
idiv
sub
lahf
mov
jnp
fsubr
dec
in
cmps
movs
adc
das
jb
stos
cmps
int
jb
jle
outs
add
fucomi
mov
(bad)
cs
rcl
sub
ins
arpl
and
out
mov
cwde
mov
(bad)
outs
std
xchg
imul
jae
jb
les
shr
xor
mov
out
loopne
ins
aas
ret
cwde
es
sub
shr
or
pop
push
xchg
loop
cdq
push
scas
hlt
push
and
adc
test
test
add
pop
adc
adc
or
retf
cdq
xchg
hlt
pop
lods
(bad)
jmp
inc
leavew
mov
test
inc
cmp
out
mov
mov
clc
data16
into
mov
inc
inc
js
(bad)
adc
mov
out
push
xchg
mov
ins
es
jmp
call
inc
inc
sub
mov
mov
push
jno
(bad)
test
xor
mov
cmp
or
mov
sub
lahf
push
add
les
push
imul
ffree
sbb
pop
imul
scas
push
rol
enter
out
and
adc
jne
sbb
gs
lods
xchg
enter
dec
and
aam
into
jns
es
std
stc
push
stos
mov
cdq
stos
in
cmp
in
fs
jns
mov
push
adc
je
dec
sahf
(bad)
xor
push
popa
ins
ret
test
and
lahf
fistp
call
aaa
sar
add
and
fdivrp
pop
push
sub
ds
and
mov
adc
sub
push
scas
cmc
cmp
cmp
mov
sbb
std
or
push
xchg
and
in
xchg
mov
pop
icebp
imul
xchg
in
dec
fadd
adc
test
and
pop
or
aas
sar
bound
pop
inc
cmp
(bad)
lock
mov
out
mov
repz
sub
sub
int
jg
cmp
neg
push
dec
sti
add
sub
xor
inc
push
stos
dec
vpunpckhbw
adc
out
adc
mov
mov
jmp
imul
cwde
cmps
pop
cmp
xchg
stos
test
aad
cmp
add
jae
and
addr16
loope
mov
in
dec
and
or
in
(bad)
test
jnp
cld
fwait
stos
icebp
ror
and
je
push
xchg
add
adc
loopne
xchg
cli
lock
arpl
push
xchg
mov
adc
icebp
lods
mov
mov
mov
mov
scas
data16
xchg
mov
sub
nop
call
mov
enter
scas
out
in
pop
dec
pop
jb
inc
jmp
push
jp
arpl
sub
or
jle
pop
pop
cmp
mov
push
dec
test
and
xlat
jp
sbb
ins
loope
outs
mov
pop
test
mov
das
aaa
aaa
sahf
lock
mov
ins
mov
dec
inc
imul
dec
mov
xor
in
inc
lds
loope
sbb
xchg
lahf
dec
fst
inc
mov
and
mov
xor
repz
pop
jge
adc
popf
fcomp
sti
or
nop
cpuid
repnz
jmp
aaa
mov
jmp
je
mov
mov
jl
pop
jmp
rol
ja
into
mov
cs
cmps
fwait
sbb
dec
cmp
int
bound
sbb
jne
xchg
pop
out
enter
pop
mov
and
adc
jnp
sub
lock
mov
js
cmp
dec
gs
or
shl
cmp
jo
dec
adc
sub
or
pop
leave
and
retf
xor
push
sbb
(bad)
sub
inc
xchg
jae
aad
stc
push
mov
std
aas
lea
sub
add
in
sbb
scas
ins
dec
retf
repz
retf
loope
xchg
adc
dec
pop
loope
outs
jle
fs
xchg
(bad)
fadd
inc
xor
adc
dec
or
sub
loope
hlt
ficomp
cmp
cmc
adc
mov
mov
inc
out
xchg
inc
jl
add
push
mov
rol
(bad)
mov
mov
mov
push
and
xchg
cmc
call
and
jb
mov
xchg
lock
sbb
test
loopne
lods
and
das
pop
out
fstp
add
jecxz
push
mov
adc
out
fs
jle
fldcw
test
push
cmps
cdq
sbb
outs
int3
mov
lea
je
mov
xchg
adc
jecxz
push
mov
inc
and
scas
add
in
lahf
outs
xlat
pop
sbb
jmp
in
aas
mov
pminsw
xor
dec
out
sub
xor
pop
out
in
adc
sbb
jns
dec
xor
loop
jg
and
mov
mov
xor
test
call
sbb
xchg
ss
call
cmp
xor
mov
jle
popf
jg
sub
(bad)
xor
push
jmp
pushf
jl
sbb
cld
ds
xor
in
jge
inc
dec
gs
lea
sbb
mov
cmp
inc
sbb
jp
dec
out
sbb
inc
push
js
lahf
xchg
dec
push
add
stos
(bad)
jmp
pusha
and
jmp
(bad)
fstp
les
xor
test
jmp
mov
push
xchg
or
pop
add
fcom
lahf
xlat
test
sbb
dec
or
sub
ss
jb
pop
pop
xchg
bound
fidiv
mov
(bad)
jnp
push
mov
cdq
mov
dec
aad
mov
fbld
or
mov
loopne
sub
imul
inc
dec
and
int3
jmp
lock
jns
rcr
mov
pushf
(bad)
inc
shr
ins
repnz
inc
imul
cmp
xor
inc
(bad)
ins
repnz
cs
xor
adc
call
mov
add
sub
sub
xor
ja
std
ret
es
out
xchg
ds
movs
data16
daa
cmps
cmc
xor
mov
cmp
inc
jae
xchg
ds
xor
not
repz
ja
fcomp
jge
push
lahf
mov
icebp
ss
mov
fbstp
add
add
cmp
and
ss
push
push
push
repz
pop
pushf
ror
iret
test
inc
popf
push
or
scas
dec
sbb
mov
mul
daa
and
sbb
(bad)
test
into
cmc
pop
mov
sub
test
mov
mov
sub
mov
(bad)
xor
inc
std
and
xor
int
mov
sbb
test
mov
or
mov
sbb
cli
pop
inc
add
or
xchg
icebp
call
cmp
loope
push
xor
pop
mov
cmp
xor
xchg
sahf
xor
inc
pop
aas
xchg
loope
shl
(bad)
sbb
(bad)
cmp
nop
in
sub
enter
mov
(bad)
jne
mov
sub
xlat
jnp
les
cmps
popf
test
xlat
mov
(bad)
dec
or
inc
push
add
mov
rcl
movs
scas
test
(bad)
cmovne
jle
add
mov
and
push
fisttp
in
pop
lea
pop
rcr
and
push
inc
cmps
bound
outs
movs
call
jmp
sbb
cmp
sar
imul
inc
jmp
dec
in
or
or
pusha
aam
and
call
push
dec
ror
inc
call
mov
sub
dec
bound
pop
int3
or
mov
je
int
xchg
mov
fisttp
dec
in
push
xchg
aas
mov
ret
aam
push
push
jmp
jmp
imul
pop
aaa
aad
mov
xchg
in
lods
sub
mov
scas
cmp
sbb
aas
sub
inc
ret
stos
mov
jno
and
cmp
jge
add
pop
mov
ret
(bad)
adc
fist
cmp
fnstcw
cmp
scas
imul
sub
je
imul
add
sahf
fadd
and
loop
div
in
mov
dec
mov
out
lock
repnz
dec
aas
popf
jl
inc
inc
je
dec
or
mov
mov
jmp
rcl
inc
lds
in
ret
push
jg
mov
add
loope
push
push
scas
in
xchg
xchg
mov
cmp
dec
retf
es
add
push
fsubr
fmul
arpl
mov
xor
fmul
mov
daa
adc
sbb
dec
push
xor
adc
cmp
popf
mov
cmp
mov
cmp
stos
pop
imul
or
outs
js
pop
mov
cmp
xlat
jmp
fdiv
adc
push
sub
idiv
lea
in
cmps
inc
push
dec
pop
int
int
mov
adc
mov
arpl
mov
sub
push
jae
sub
mov
adc
sub
add
jnp
push
ret
push
out
shl
dec
aam
out
xchg
jmp
nop
xchg
sbb
xchg
inc
ror
sti
scas
cmp
js
xchg
sahf
repz
cld
daa
xchg
and
test
in
mov
int
retf
pop
(bad)
fcom
cwde
out
push
jg
pop
xor
fidivr
lods
bound
pop
stos
cmp
push
ror
push
fnstcw
inc
(bad)
arpl
dec
lea
xchg
(bad)
pop
fdivr
mov
jno
and
push
adc
push
enter
mov
adc
push
xchg
and
mov
test
dec
out
out
lock
stc
ficom
into
je
adc
lock
mov
pop
in
push
stc
jno
xor
mov
mov
aaa
out
ins
pop
mov
imul
jnp
fdivr
jp
jne
in
mov
or
inc
push
sub
pop
out
test
call
test
nop
(bad)
leave
das
mul
jb
inc
adc
sahf
aad
sbb
mov
rcl
push
jbe
test
xchg
inc
fimul
imul
repnz
add
(bad)
and
ja
in
call
js
scas
clc
(bad)
ror
mov
(bad)
mov
clc
mov
test
loop
sbb
adc
std
rcl
mov
jno
out
rcr
in
push
test
cmc
push
cmp
pop
sbb
lds
sti
mov
movs
cmp
imul
mov
jbe
pop
test
jmp
fcomip
sar
shl
cmc
cmp
out
jns
lea
in
out
sub
xchg
mov
fs
daa
jecxz
inc
jnp
retf
out
and
jge
jge
mov
add
fs
dec
push
sbb
push
ret
sbb
xlat
xchg
sbb
jg
cmp
and
rcl
hlt
and
lock
or
push
and
or
test
push
mov
xor
dec
(bad)
in
lds
data16
xchg
mov
mov
push
push
inc
test
inc
les
xor
push
jmp
jge
outs
inc
mov
mov
sbb
pop
dec
imul
inc
mov
fisttp
out
mov
cdq
cmps
or
ss
inc
mov
out
jge
aaa
stos
lods
adc
shl
sub
aas
pmulhw
std
adc
sti
imul
out
fcomp
call
ds
outs
fnstenv
mov
(bad)
pushf
dec
repz
lahf
stc
push
jg
mov
mov
xchg
(bad)
sub
cmp
repz
std
mov
sub
dec
or
xchg
scas
loopne
retf
and
xor
pop
dec
push
outs
inc
cmp
retf
and
adc
pop
retf
ds
push
mov
push
jp
mov
cmp
sbb
cdq
cmp
mov
cld
daa
das
dec
pop
mov
and
fadd
(bad)
cmp
arpl
ficomp
cli
out
and
dec
inc
jns
mov
jp
adc
sbb
test
xchg
(bad)
push
mov
fbstp
ins
and
mov
jecxz
pop
fwait
xchg
imul
(bad)
pop
test
dec
mov
pop
jbe
mov
lods
xchg
cmp
sahf
mov
sbb
push
sbb
or
stos
xor
retf
add
fnsave
or
cmp
test
and
mov
xor
xor
call
pop
cmps
or
dec
imul
pop
xor
add
add
mov
cmps
push
stos
xchg
out
cmp
mov
add
out
hlt
out
cdq
and
stos
call
loope
cmp
imul
cmp
cld
inc
ficom
push
stos
xor
fild
mov
xchg
std
cli
frstor
push
out
and
cmp
inc
mov
ins
cmps
mov
(bad)
cdq
fadd
xchg
lods
lea
mov
out
sti
das
or
sbb
cmp
jle
aas
xchg
sub
jmp
mov
jl
movs
into
ret
sub
cmc
xchg
lahf
(bad)
leave
mul
jbe
call
xlat
and
outs
and
or
add
loope
imul
sub
add
hlt
int3
inc
sahf
xor
lock
cmps
sahf
clc
fs
cmp
add
jge
adc
int
mov
ds
sub
cwde
and
push
dec
into
fdivr
sub
clc
mov
sbb
add
por
jg
cmp
mov
mov
mov
rol
std
sub
(bad)
dec
cmp
cmps
push
xor
mov
(bad)
sbb
mov
clc
aad
pop
sub
pop
jmp
and
fadd
test
xchg
call
cs
in
iret
nop
cmp
adc
movs
inc
dec
xor
add
je
repz
das
jp
call
setl
loopne
rcl
stos
test
sbb
stos
push
arpl
mov
sub
dec
aam
inc
(bad)
out
out
mov
cli
outs
sbb
lock
push
jae
stos
leave
sahf
xchg
push
nop
sub
aad
mov
lea
and
xor
or
jmp
es
push
adc
inc
lahf
and
cmps
pop
push
dec
or
adc
adc
inc
aam
jbe
leave
adc
inc
push
fistp
pop
push
adc
std
mov
pop
and
xchg
clc
sbb
mov
cmc
jmp
push
add
sub
js
(bad)
mov
mov
xchg
sub
js
sub
inc
mov
pop
or
int
jmp
cmp
leave
scas
mov
clc
retf
inc
test
cmp
fwait
mov
test
jle
sbb
pop
or
sar
xchg
sbb
mov
mov
repz
ret
push
aas
cs
sahf
aad
cmp
(bad)
fiadd
pop
iret
push
pop
mov
shl
std
in
mov
sar
adc
in
jg
repz
add
call
into
inc
pop
mov
adc
shr
fcomp
add
sub
(bad)
fcomp
push
push
in
aaa
in
or
arpl
popf
push
ja
lods
stc
xchg
mov
and
out
out
ins
adc
sub
and
mov
aam
adc
mov
aam
push
call
test
int3
mov
jl
shl
scas
es
sbb
xor
aam
adc
mov
mov
adc
pop
jg
push
xor
mov
inc
push
pop
iret
sub
repnz
inc
push
dec
jl
push
sub
cmps
sahf
popa
jno
popf
xor
rcr
mov
ret
pop
cs
popaw
test
or
mov
xor
stos
mov
loope
and
inc
retf
add
sbb
sar
cmps
mov
(bad)
mov
add
retf
push
xor
add
jmp
push
jns
jmp
and
xor
nop
xchg
adc
dec
pop
and
jo
std
retf
sub
pop
repnz
cmp
xchg
rcr
xchg
push
jbe
dec
cmc
pop
nop
jg
sbb
jmp
sub
loopne
mov
mov
mov
mov
fst
test
ins
mov
ja
fist
add
fnsave
mov
retf
xor
pop
inc
aas
shr
lahf
dec
pop
(bad)
idiv
add
bound
add
loop
push
ins
push
pop
push
pop
rol
arpl
fmul
pop
sub
aas
cmp
(bad)
sti
dec
add
cmps
mov
pop
or
pushf
pusha
inc
cmps
mov
add
xchg
fisub
imul
out
imul
jb
cli
test
and
rcl
into
push
fcmovb
pop
add
loopne
pop
call
sahf
test
loope
mov
xor
xchg
jns
in
mov
pop
jecxz
sub
pusha
pop
add
enter
pop
jp
mov
sbb
xchg
ss
movs
pop
mov
clts
adc
loope
sub
xchg
push
les
ret
rol
popa
stos
into
rol
pushf
jp
xor
jecxz
mov
aad
je
loop
popa
and
xchg
xor
push
push
out
aad
les
ins
push
fcomp
lods
movs
xor
sub
jl
(bad)
fisub
mov
cdq
sahf
jmp
int
jge
(bad)
stos
movs
push
test
outs
fld
mov
outs
mov
inc
jne
test
and
xchg
leave
jl
add
div
jl
and
mov
mov
pop
add
cdq
(bad)
test
jecxz
sbb
jo
loopne
mov
cmp
out
lods
mov
out
add
and
fnstcw
repnz
jecxz
mov
push
in
jp
xchg
jno
faddp
js
call
mov
jb
sar
movs
iret
mov
and
jle
push
or
xchg
xchg
adc
icebp
jnp
mov
div
cmp
mov
pushf
bound
adc
push
inc
outs
in
pop
cmp
xchg
shl
dec
pop
mov
sahf
dec
sub
(bad)
std
jge
jne
sahf
sbb
cmp
cmovne
adc
pop
push
loopne
cmc
and
fdiv
mov
push
(bad)
(bad)
(bad)
cmps
mov
dec
add
dec
iret
mov
arpl
sahf
pop
movs
lock
out
scas
prefetcht1
adc
xchg
inc
in
pop
aam
icebp
xor
ffree
mov
push
or
scas
stos
push
mov
out
int3
aad
inc
push
adc
(bad)
pop
sbb
jbe
(bad)
shl
adc
test
jne
push
jbe
cmps
push
or
push
xor
ficom
fld
push
ret
xchg
imul
repz
hlt
sub
sahf
ja
dec
bnd
movs
aas
repz
(bad)
push
pop
mov
xor
mov
pop
adc
nop
mov
xchg
outs
test
out
mov
popa
pushf
fdivr
add
xchg
jns
sbb
sbb
mov
add
bound
inc
es
out
aas
retf
test
call
push
out
xchg
clc
mov
loopne
mov
xlat
icebp
sti
mov
or
jmp
inc
retf
dec
cmp
mov
ror
add
cmp
sbb
mov
mov
loope
adc
int
pop
(bad)
int
add
pop
inc
push
inc
cwde
xor
dec
mov
push
sbb
jbe
addr16
mov
out
and
inc
gs
out
push
add
push
nop
test
mov
dec
mov
fsubr
gs
adc
xchg
jmp
push
sub
push
cdq
(bad)
leave
push
inc
adc
mov
mov
dec
dec
stos
mov
mov
shl
cmps
push
popf
(bad)
cmp
add
add
lahf
xlat
xchg
cvtpi2ps
and
xchg
xchg
or
ds
adc
sub
jbe
test
test
xchg
push
push
hlt
jge
sti
cmc
jle
push
(bad)
addr16
outs
clc
pushf
adc
xor
stos
push
dec
arpl
xchg
sbb
adc
jmp
lods
mov
out
or
fiadd
ror
xchg
stos
aaa
les
sbb
mov
add
mov
add
cld
mov
pop
(bad)
out
(bad)
call
ins
and
mov
mov
sar
inc
mov
pop
pop
fs
push
sbb
outs
xlat
adc
out
dec
pop
rol
movs
mov
fimul
mov
push
sbb
cmp
les
mov
or
retf
mov
xor
sbb
cmp
mov
xor
push
std
lea
aaa
loopne
mov
sbb
xchg
push
inc
mov
mov
aaa
call
lods
sbb
nop
jno
int
mov
or
mov
out
loope
push
(bad)
arpl
jnp
mov
out
lock
in
rcl
or
cmp
push
pusha
mov
xor
popf
lahf
clc
iret
jnp
jb
loop
inc
shl
xlat
fisubr
scas
dec
mul
xchg
mov
nop
jo
inc
dec
std
ret
cli
and
arpl
fisubr
push
and
dec
xchg
(bad)
jo
xchg
data16
pop
scas
mov
not
inc
and
pop
sub
add
aaa
xor
mov
(bad)
mov
bound
gs
in
sbb
xor
cs
popf
cmp
mov
adc
lahf
int
(bad)
xor
or
hlt
push
sar
ret
mov
mov
cli
cdq
loop
or
shl
loopne
or
sti
and
jmp
and
popf
pop
add
inc
leave
cdq
cmp
xor
jl
cdq
inc
jne
cli
xlat
or
lea
lahf
popa
adc
jne
pop
jae
adc
add
sbb
jmp
push
ret
cmc
mov
dec
jnp
jnp
mov
jmp
fwait
in
mov
mov
mov
je
daa
das
ret
xchg
pop
stos
sahf
mov
add
dec
inc
dec
int3
repz
pop
ss
mov
cs
mov
outs
push
jl
les
aam
cmp
ret
stos
in
push
dec
fstp
dec
(bad)
xchg
push
dec
jae
xchg
loop
(bad)
retf
into
push
fwait
cld
in
arpl
cmp
ret
add
sti
dec
sub
cmps
push
or
sub
ror
ret
xchg
in
dec
cs
pop
repnz
and
jb
cmc
sub
push
push
adc
mov
adc
test
mov
xchg
pop
imul
cmp
pusha
sbb
mov
fild
cwde
test
movs
mov
nop
fistp
adc
pop
sub
(bad)
aaa
or
mov
call
xor
clc
jno
jo
xadd
sbb
ja
jmp
dec
rcl
sbb
xchg
dec
(bad)
and
jecxz
in
cmc
lds
ss
fisttp
mov
ucomiss
dec
mov
mov
xchg
out
push
or
mov
push
or
sbb
mov
xor
aaa
pop
ins
scas
lods
aas
xor
(bad)
das
lds
inc
add
xor
xchg
rcl
adc
sub
sar
aad
sub
push
xor
add
hlt
adc
aaa
xchg
push
cdq
mov
sbb
cmp
arpl
push
fistp
(bad)
mov
mov
and
int3
cmp
cs
sub
movs
xchg
mov
ins
and
push
enter
ret
mov
mov
loope
push
jo
cld
and
push
cmc
mov
cdq
dec
mov
ja
stc
shl
(bad)
sbb
adc
ss
enter
push
pop
mov
add
test
inc
xor
shl
hlt
retf
push
pop
or
outs
popa
in
mov
fisttp
mov
adc
jb
jb
jmp
mov
inc
call
cld
rcl
mov
ins
call
pop
rdpmc
mov
ss
jmp
pop
xor
cmps
stos
xchg
push
jge
add
sar
cmp
push
or
fnstcw
jmp
into
adc
jns
lods
ds
xchg
sbb
sti
aad
cmp
xchg
xchg
and
mov
push
sbb
pop
push
adc
xadd
pop
addr16
imul
sbb
pop
jge
jl
imul
inc
data16
scas
add
inc
popf
nop
lds
add
cld
popf
jno
gs
cld
xchg
inc
fidiv
push
sbb
stos
mov
iret
sub
rol
out
push
sbb
(bad)
xor
scas
dec
mov
int3
movs
push
jmp
iret
lods
mov
fsub
nop
pop
xlat
mov
xor
sub
mov
pop
add
sub
daa
pop
adc
scas
retf
mov
dec
mov
fsubr
lock
adc
cmp
popa
pop
bound
arpl
cli
push
and
sub
pop
popa
xchg
mov
shr
test
or
or
or
stos
jne
add
test
jmp
jnp
fnsave
mov
inc
add
(bad)
lock
jecxz
pop
imul
mov
xor
in
sbb
(bad)
adc
push
lock
push
mov
div
adc
stos
inc
add
lahf
sub
xchg
mov
retf
mov
mov
icebp
or
in
mov
mov
(bad)
dec
call
outs
std
pop
inc
fcmovb
fimul
(bad)
shl
jb
jne
mov
fcomp
push
lods
and
mov
cmp
xchg
xchg
xchg
inc
test
bound
movs
movs
mov
stos
imul
jl
pop
jb
lahf
test
test
mov
push
sub
movs
(bad)
adc
mov
hlt
jecxz
(bad)
push
pop
clc
cmps
popa
add
std
dec
les
dec
push
or
(bad)
mov
mov
cmp
lahf
cmp
dec
pop
mov
fmul
leave
jb
cmp
jecxz
mov
fdivr
mov
add
dec
cmp
xchg
sar
xor
xchg
cwde
cmps
out
jecxz
cmp
das
push
lods
mov
push
jle
sub
sbb
add
fistp
repnz
out
jnp
stos
enter
jl
sahf
jmp
push
lods
shl
(bad)
push
sbb
in
jle
adc
lods
mov
pop
and
mov
adc
dec
jmp
icebp
das
add
cdq
and
jno
cmps
mov
add
test
and
es
mov
ficom
and
lods
mov
cld
jno
out
lods
stos
mov
in
sub
aad
lds
and
sar
cmp
out
push
shl
outs
push
xor
cmp
sbb
dec
scas
icebp
pop
xchg
or
inc
repnz
sub
in
mov
adc
popf
ja
pop
pop
loopne
out
icebp
add
std
add
mov
scas
add
jmp
sar
in
sub
out
push
or
fwait
fs
cdq
dec
mov
mov
cdq
dec
clc
and
out
dec
and
lods
mov
dec
movs
and
pop
mov
dec
scas
inc
mov
jmp
jo
hlt
ret
adc
loope
out
and
fiadd
scas
dec
out
into
and
jno
jno
fild
rol
push
rol
push
retf
rcl
sbb
or
js
lock
cwde
cwde
scas
(bad)
cmp
out
leave
xchg
outs
fld
sbb
cwde
push
in
bnd
fst
xor
add
xor
and
(bad)
aas
cmp
push
retf
lea
xor
fst
fld
jge
and
add
mov
cdq
inc
and
sbb
pop
sub
mov
cmc
sub
add
cli
fld
jnp
or
sbb
aad
dec
fs
add
ret
aaa
iret
call
pop
push
cmp
push
or
inc
into
in
adc
movs
or
jg
dec
(bad)
mov
ins
sub
jmp
sub
mov
inc
add
js
xor
out
(bad)
pusha
lds
std
lahf
imul
or
sub
and
in
add
or
shl
ins
lds
inc
pop
ror
pop
jno
or
xchg
dec
gs
leave
mov
cmp
xchg
ins
sar
mov
mov
sub
aad
stc
xor
jnp
lahf
lea
jb
xor
push
popa
ja
and
lock
call
pop
push
mov
repnz
adc
mov
xchg
pushf
jle
loope
push
or
enter
popa
aad
cmc
push
cmp
push
sub
jmp
sub
out
cmc
ins
inc
mov
push
sar
popa
cmp
xchg
push
xor
pop
xor
mov
inc
cmc
mov
aam
xchg
xchg
leave
mov
pop
hlt
or
jmp
xor
addr16
fdiv
jmp
jbe
sahf
mov
sbb
adc
loope
mov
or
idiv
inc
xchg
push
lds
(bad)
adc
adc
imul
mov
fsubrp
fcomi
or
mov
mov
out
mov
jmp
dec
adc
popf
mov
in
adc
(bad)
js
pop
adc
push
lea
dec
mov
repz
push
adc
mov
add
dec
mov
std
out
inc
shr
xchg
sbb
dec
inc
jp
jbe
dec
ja
frstor
repnz
inc
pop
inc
jle
inc
scas
jae
mov
mov
pop
adc
and
cmp
movs
std
dec
mov
repz
and
maskmovq
mul
adc
cmp
out
rcl
pop
jo
ficom
xor
adc
stos
das
xor
nop
push
cmc
mov
fcom
sbb
fimul
cmp
push
fdiv
ins
test
nop
bound
and
add
inc
sahf
cmp
imul
into
stos
jg
jl
sub
test
inc
and
cli
ret
out
sti
sub
mov
addr16
(bad)
jno
mov
sub
mov
inc
jge
or
arpl
adc
add
sbb
lea
jecxz
mov
loopne
sbb
jg
dec
ror
or
sub
add
pop
push
or
ss
test
dec
jp
lock
mov
mov
sbb
neg
enter
scas
movs
jb
pop
out
adc
jns
out
scas
repnz
push
jp
xor
sbb
cmp
or
sbb
jmp
mov
loopne
lock
mov
cwde
pop
jmp
push
bound
and
out
imul
push
cld
test
rol
test
adc
jno
daa
xchg
ret
call
les
cli
adc
or
push
fsub
ds
enter
xchg
dec
outs
ret
cld
push
xchg
and
xchg
pop
pop
repnz
xchg
mov
pushf
popa
cmp
cdq
jb
cmps
cmps
add
jns
jae
adc
pusha
jnp
mov
jecxz
push
call
cmp
outs
pusha
adc
lods
mov
mov
mov
pop
int3
jno
mov
mov
retf
sub
or
xchg
add
push
and
or
loop
add
ds
(bad)
iret
adc
cmc
dec
pop
cmp
jbe
outs
jle
pop
retf
mov
push
cmp
dec
jp
data16
(bad)
xchg
in
outs
jl
aad
and
inc
(bad)
and
into
call
sbb
scas
mov
nop
jecxz
pop
or
aam
std
es
push
xchg
int3
popf
ins
(bad)
mov
push
into
lock
mov
stc
(bad)
lea
push
jno
pop
addr16
xchg
mov
inc
lahf
fldenv
daa
cmp
jae
cmp
and
dec
ss
int
cwde
add
push
inc
inc
xchg
leave
xor
or
push
pop
cld
adc
adc
or
loopne
jnp
es
into
mov
(bad)
ins
xchg
inc
fwait
adc
js
(bad)
shl
adc
inc
cmp
arpl
ss
pop
ds
loopne
jbe
stc
popa
ja
fs
pop
sar
mov
mov
sub
sbb
mov
int
inc
jmp
mov
pop
pop
(bad)
mov
sub
xor
mov
dec
mov
imul
lahf
jle
fs
add
pop
cmp
pop
pop
adc
cmp
inc
inc
(bad)
out
jecxz
xchg
inc
clc
jecxz
push
iret
mov
cmp
xlat
mov
push
jne
imul
xchg
inc
mov
and
inc
mov
out
jno
std
cdq
int3
mov
or
(bad)
push
mov
out
cmp
add
add
sbb
inc
jmp
out
cmp
movs
test
jne
aas
lds
retf
jl
xor
cmps
fsubr
cmp
xchg
push
iret
and
mov
pop
mov
xor
dec
sub
loope
cmp
imul
or
sti
mov
lods
or
xor
xchg
add
imul
xor
sbb
mov
fcomp
lods
mov
push
retf
das
lahf
aad
xor
sbb
js
retf
frstor
lahf
imul
cs
int3
add
test
jl
data16
imul
inc
dec
(bad)
test
adc
paddb
pop
and
hlt
inc
inc
sbb
rol
test
inc
adc
adc
in
fimul
shl
cmp
and
ss
repz
jl
bnd
jg
xor
mov
imul
xor
jmp
fdiv
nop
sbb
xchg
add
scas
mov
shl
cmc
push
or
shr
(bad)
stos
daa
mov
cwde
mov
xor
dec
retf
mov
inc
cld
xor
xchg
or
ins
lea
push
cmp
cmp
movaps
push
sub
std
mov
int3
stc
mov
imul
in
mov
sbb
push
(bad)
sub
and
and
dec
(bad)
cmc
stc
jae
call
push
mov
jae
sub
dec
enter
add
mov
call
stc
jnp
enter
sbb
xchg
sbb
(bad)
sub
xor
inc
mov
sbb
mov
inc
adc
jle
or
jmp
(bad)
(bad)
rol
jmp
(bad)
loope
xor
cmp
aam
xchg
cmps
mov
test
cmp
aas
fs
pop
(bad)
pushf
cmp
inc
push
repnz
jp
jmp
popa
dec
jle
push
(bad)
pop
fdiv
test
js
lods
mov
push
push
xor
add
mov
jecxz
xchg
clc
dec
dec
and
xchg
loop
add
jns
pop
enter
push
outs
sbb
pop
fbstp
hlt
popf
out
aad
gs
xlat
in
pushf
loopne
mov
cmp
pop
mov
popa
and
cs
dec
push
(bad)
hlt
jo
sub
add
pop
cmc
cmova
pop
fld
(bad)
jb
retf
fistp
cmps
(bad)
inc
mov
xchg
and
sar
out
or
push
add
mov
in
call
cld
xor
mov
xor
mov
xchg
out
and
inc
mov
cmp
xchg
rcr
dec
retf
clc
mov
pushf
sub
stc
mul
(bad)
pop
pushf
popa
cmps
test
call
es
clc
push
fist
xor
imul
add
dec
fiadd
add
lods
outs
fsub
add
(bad)
mov
mov
xor
xor
add
bound
nop
(bad)
movs
dec
push
ins
adc
inc
mov
retf
adc
lds
mov
ret
pop
dec
cdq
fld
(bad)
inc
inc
mov
ins
adc
jns
ja
repz
inc
fnstenv
out
cmp
sar
iret
sbb
sti
jne
inc
les
inc
push
pop
mov
dec
inc
in
mov
pushf
test
out
repz
fucomp
ss
out
sar
mov
fcom
sbb
pop
push
add
into
in
dec
sahf
test
cli
loop
mov
mov
rol
out
arpl
(bad)
sbb
sub
stc
stos
aas
add
repz
(bad)
stc
mov
xchg
lahf
adc
jecxz
pop
mov
test
dec
test
enter
retf
into
cmp
call
pop
cmc
fdivr
mov
int
xchg
fmul
xor
je
sub
inc
popa
jns
jno
xor
fwait
push
out
xor
ja
outs
shl
out
pop
loop
cmc
mov
cdq
pop
movs
popa
iret
inc
xchg
pop
gs
test
icebp
pusha
cwde
push
jne
ja
jmp
scas
sbb
adc
xchg
or
xor
retf
ret
and
mov
mov
rcl
movs
test
dec
out
loop
xlat
pop
aaa
mov
jg
mov
popf
out
repnz
xchg
fsubr
test
scas
test
xchg
cmps
ins
mov
(bad)
(bad)
mov
push
push
pop
aam
adc
(bad)
stc
test
dec
ret
lods
sbb
stos
xchg
imul
jle
adc
push
xchg
xor
xor
jbe
mov
xchg
push
ret
retf
adc
mov
(bad)
inc
dec
push
pop
rol
hlt
add
loopne
add
fwait
stos
dec
jnp
ror
mov
test
inc
mov
push
push
xchg
aas
add
mov
sahf
sbb
add
movs
mov
das
inc
test
aad
sbb
nop
sub
xchg
inc
inc
inc
jg
enter
scas
inc
leave
dec
and
(bad)
leave
rcl
(bad)
xchg
mov
das
aas
jmp
inc
rcl
jl
sub
fwait
rcl
inc
ss
fcomp
mov
mov
mov
jp
mov
adc
sbb
mov
mov
enterw
add
rcl
stos
loope
adc
jo
(bad)
jle
scas
(bad)
icebp
in
cmp
pop
dec
cmp
fdivp
and
les
call
cmp
sub
xor
xchg
(bad)
push
sub
ins
(bad)
cmps
jo
or
scas
dec
push
inc
and
outs
inc
std
in
xor
mov
stos
inc
loop
inc
inc
add
pop
loop
push
cmps
ins
into
mov
ret
cwde
inc
and
xchg
pop
xor
jnp
in
cmp
and
xor
cdq
clc
pop
and
jb
adc
addr16
lea
fdivr
or
ja
mov
mov
or
push
gs
mov
jge
push
sub
pusha
sbb
fidiv
inc
mov
xor
aas
addr16
inc
dec
mov
or
gs
jle
std
cmp
je
les
mov
dec
retf
daa
in
push
sbb
fs
xchg
ret
xchg
ret
retf
iret
mov
and
cmps
jno
pop
cmps
iret
sti
mov
mov
out
fisttp
or
scas
cmp
sub
movs
js
mov
add
mov
mov
aad
mov
dec
mov
xchg
int3
add
loop
or
outs
xor
icebp
inc
inc
test
sbb
sti
or
(bad)
in
(bad)
sbb
push
aaa
cmp
aam
inc
scas
clc
cmp
push
(bad)
jb
nop
mov
pop
inc
add
rcl
cmc
and
and
out
(bad)
shr
fst
into
int
jg
push
dec
mov
cmps
dec
mov
and
addr16
ficomp
test
daa
jmp
pop
cli
pusha
popa
push
ins
dec
cmc
out
lock
sub
das
shl
in
clc
stos
mov
lea
cwde
outs
xor
xor
mov
sbb
or
ror
pop
and
shl
jns
inc
pop
pop
cmp
sbb
rcl
add
pusha
popf
mov
ins
lods
jmp
xchg
mov
pop
(bad)
out
xor
nop
pop
int3
lock
or
xlat
push
pop
cmps
adc
call
mov
mov
pop
cli
add
or
cmp
or
pop
in
inc
push
popa
lods
push
push
mov
and
retf
jp
test
mov
enter
jmp
or
inc
outs
icebp
mov
mov
mov
cld
hlt
jge
xchg
(bad)
cmp
push
lock
into
push
mov
jg
mov
and
xchg
mov
jmp
pop
fwait
retf
dec
rol
sbb
cmps
mov
sbb
jl
stos
adc
adc
imul
push
std
push
mov
lea
sub
lahf
inc
push
xlat
push
add
sar
inc
movs
push
nop
push
jns
shl
cmp
push
lock
arpl
into
ffree
inc
pop
mov
inc
mov
rcl
movs
outs
ds
xchg
clc
push
cmc
adc
fist
xor
rcr
jbe
call
lods
das
ins
ret
test
out
(bad)
loopne
test
repnz
gs
push
addr16
cmp
sub
cmp
repnz
sub
sbb
scas
push
cwde
push
dec
adc
push
iret
mov
into
outs
inc
push
cli
xor
ret
inc
(bad)
jmp
push
sub
fdivr
popf
inc
sbb
jle
xchg
or
test
sahf
fist
xor
inc
(bad)
jmp
cmps
cmps
daa
and
fadd
add
xor
call
add
iret
ret
xchg
(bad)
xchg
ja
push
aas
xchg
not
into
cwde
out
lock
repnz
movs
jg
mov
call
push
dec
(bad)
(bad)
inc
dec
je
movs
fdivp
stos
jmp
pop
add
adc
idiv
xchg
sbb
xchg
icebp
scas
cmp
cmps
pop
ret
push
dec
ins
jmp
cli
sub
add
iret
xchg
xchg
sub
in
arpl
mov
iret
dec
inc
or
or
ins
(bad)
or
cmp
out
pop
dec
fiadd
push
fadd
daa
sbb
xchg
adc
(bad)
rcl
jge
lea
adc
jb
pushf
mov
int
es
mov
aas
dec
sbb
sbb
sbb
out
repz
imul
push
mov
call
repz
push
add
pop
in
inc
pop
repz
fisub
sahf
jge
sbb
(bad)
rol
loop
dec
mov
xor
push
mov
(bad)
and
mov
xor
jnp
sub
scas
popf
jae
push
arpl
inc
sbb
enter
(bad)
pop
sti
stc
xor
cmp
add
jo
mov
fdivr
lock
das
in
adc
mov
add
mov
imul
das
je
sub
xlat
jbe
inc
dec
or
mov
fdiv
and
int
sub
dec
sbb
xchg
sar
cmp
div
jmp
in
jnp
push
shr
adc
sbb
imul
outs
cmps
inc
sub
mov
cs
push
inc
out
daa
xchg
jno
imul
scas
inc
inc
(bad)
cmp
rol
mov
inc
aam
ficomp
jne
rcr
outs
fbld
ret
pushf
in
cmc
(bad)
ja
fild
push
in
jecxz
lods
xchg
inc
or
mov
jge
mov
sub
mov
loop
scas
fnsave
push
rcl
xchg
mov
les
ja
lock
outs
xchg
jb
clc
cmp
das
sbb
(bad)
aam
mov
xlat
jl
mov
aas
xor
jmp
or
inc
or
scas
jne
and
mov
sar
mov
(bad)
out
and
movs
xchg
(bad)
aad
arpl
jb
jmp
(bad)
shl
mov
es
mov
(bad)
call
cmps
(bad)
in
jmp
mov
cmp
ins
aad
mov
mov
pop
jbe
call
cmc
out
xchg
clc
cmps
nop
sub
jmp
bound
jne
aas
sbb
pop
imul
push
pop
test
mov
test
xlat
loop
adc
(bad)
ins
inc
or
(bad)
jns
cld
cmps
sti
mov
cli
repz
cli
xor
jno
cmps
pop
dec
add
adc
call
aaa
(bad)
cmp
inc
and
pop
or
ins
fdivrp
sub
ins
ins
jmp
je
fs
jl
dec
fdiv
lds
pop
es
cwde
loopne
xchg
jge
or
push
xor
in
inc
icebp
push
xor
inc
scas
ja
(bad)
lock
in
sbb
sti
cmp
mov
sub
xlat
or
mov
dec
idiv
cmps
sbb
call
xchg
xor
repz
sbb
jge
mov
rcr
mov
aad
iret
ja
ret
fadd
mov
mov
or
and
mov
ins
sbb
ret
clc
pop
ins
inc
(bad)
in
add
les
pop
mov
int
rcl
or
and
retf
call
mov
(bad)
sub
add
dec
jb
fwait
push
jmp
pop
sbb
or
popa
inc
push
and
sar
inc
test
repz
lds
jbe
imul
push
mov
adc
stos
inc
cmc
bound
js
or
jg
push
add
ror
or
jmp
jbe
arpl
xchg
mov
cmp
push
xor
enter
sahf
mov
cmp
icebp
inc
cmp
ss
pushf
jne
cmp
sahf
xchg
in
imul
sahf
push
pop
ret
cmp
imul
mov
fbstp
out
rcr
in
outs
add
mov
mov
fwait
adc
jnp
pushf
ins
(bad)
jle
add
push
retf
pop
jl
mov
movs
fimul
add
xor
mov
and
(bad)
sub
sbb
dec
popf
jmp
or
rcl
sti
sti
pop
les
sbb
imul
fisttp
imul
pushf
aad
scas
pop
xchg
xor
jl
out
fwait
cmps
ror
popa
xchg
cmp
xchg
enter
sub
cmp
sub
int3
out
add
or
mov
inc
sti
stos
mov
lock
call
mov
repz
shl
cmp
xchg
les
leave
jo
push
mov
inc
dec
lods
push
jecxz
aad
cmp
clc
ret
jb
mul
addr16
shl
xor
rcl
hlt
sbb
and
adc
hlt
jnp
mul
xor
push
add
xchg
mov
adc
ror
sub
jne
arpl
test
jmp
mov
sbb
mov
jns
out
(bad)
out
out
pcmpeqw
mov
sub
ret
imul
mov
xchg
ret
xchg
aas
dec
test
fist
sub
jmp
sub
enter
je
arpl
rcl
mov
retf
stos
or
addr16
xchg
stos
mov
ds
test
ds
aam
fldlg2
stos
cdq
mov
out
pop
shl
or
mov
enter
inc
mov
dec
add
(bad)
jg
sti
repnz
int
cmc
mov
inc
stc
xchg
out
push
je
xrelease
or
sbb
mov
repz
out
jl
std
stos
xor
mov
les
inc
jnp
sub
scas
cmp
adc
dec
push
push
(bad)
icebp
fbstp
jno
xchg
adc
fnstcw
jmp
in
pop
in
and
ins
scas
cs
mov
out
sub
fnsetpm(287
int3
mov
ins
lods
(bad)
outs
cmp
jne
sar
movs
sub
fs
or
fcom
push
movs
ss
mov
jb
sub
mov
loop
sbb
or
test
and
clc
outs
pop
mov
loope
pop
stc
bound
xor
inc
stos
fcom
and
inc
(bad)
aaa
je
cmp
mov
pop
test
push
push
add
or
stc
aam
das
dec
inc
cld
push
push
(bad)
dec
push
in
push
mov
jnp
xchg
xlat
mov
or
xchg
xor
mov
xor
int
dec
lods
stos
imul
loope
test
aas
mov
aam
pop
sub
xchg
pop
mov
push
sbb
mov
add
dec
ja
or
sbb
fmul
mov
das
mov
jmp
loope
out
cld
jb
pop
cmp
and
or
sub
movs
hlt
imul
shr
movs
jne
adc
pop
lea
or
sbb
sub
in
pusha
lock
leave
pop
adc
mov
and
dec
loop
leave
sub
push
mov
and
sbb
jmp
jmp
dec
sbb
sub
add
cwde
es
(bad)
push
jmp
loopne
aad
out
loop
xchg
cmp
xchg
jbe
mov
pop
inc
test
nop
sub
jg
int
pop
not
inc
jmp
mov
outs
rcr
fcom
cli
lods
shl
xchg
add
bound
in
out
arpl
repz
mov
popf
call
sbb
xchg
xlat
mov
rcl
daa
xor
mov
mov
sbb
adc
cmp
aad
or
push
sbb
add
fsub
rol
sub
and
adc
xchg
dec
std
or
push
cmp
mov
dec
ss
push
mov
in
test
mov
dec
dec
and
nop
adc
bound
sahf
icebp
mov
test
call
xchg
xchg
pop
mov
sub
adc
sbb
push
and
jbe
jbe
mov
push
loopne
inc
mov
imul
fisttp
pop
cdq
sub
and
or
jo
leave
in
scas
popa
lock
mov
test
clc
ins
cdq
nop
lahf
out
test
inc
xor
add
shl
dec
sbb
stc
movs
dec
inc
les
(bad)
sti
(bad)
lahf
and
test
stc
xchg
fsubr
mov
sbb
cmps
jle
sbb
movs
or
add
inc
pop
ficom
push
fcom
addr16
dec
lock
(bad)
xor
sub
stos
cli
lock
lods
cmp
jns
retf
or
and
ficom
xor
sbb
mov
sub
retf
cwde
retf
jo
inc
fisub
neg
add
sub
popa
cmp
pop
idiv
pop
mov
mov
adc
dec
lods
ds
and
cmp
mov
xchg
(bad)
cdq
or
push
cmp
push
dec
mov
ds
lods
mov
std
(bad)
sbb
inc
xchg
or
cmps
push
mov
mov
pop
mov
cdq
rol
test
sbb
ret
cmp
cli
inc
rcr
ja
push
mov
mov
std
mov
fcom
mov
dec
stc
int3
mov
popf
int
sub
in
jb
popa
jno
(bad)
ror
mov
enter
jbe
lock
mov
xchg
aaa
imul
cmps
rcl
push
mov
push
ja
retf
or
jp
dec
jns
and
ret
mov
mov
xchg
xor
adc
enter
inc
add
mov
(bad)
pop
repnz
lahf
lods
(bad)
cli
test
jo
xchg
ss
fs
imul
call
jle
cmp
xchg
mov
adc
mov
or
xor
xchg
add
fdiv
jmp
dec
or
sbb
clc
mov
inc
pop
push
retf
push
movs
shr
and
or
or
shl
add
les
mov
push
pop
mov
loope
mov
sahf
pushf
jo
push
mov
sub
pop
and
es
sub
jmp
add
jmp
dec
xor
pop
fidiv
jecxz
inc
movs
mov
clc
xor
popa
icebp
lahf
xchg
enter
retf
cmp
data16
movs
enter
mov
movs
call
call
mov
xchg
dec
loopne
or
xchg
loop
nop
iret
jp
inc
inc
test
fdiv
add
les
popa
cmp
rcr
(bad)
ficomp
inc
mov
js
add
cwde
aad
pop
aaa
xchg
sub
mov
or
out
(bad)
xor
lods
aas
mov
add
push
ins
xchg
(bad)
or
stc
in
cmp
mov
ins
mov
pushf
ja
and
cmp
retf
mov
js
pop
sbb
push
sahf
nop
add
rcr
cdq
test
div
or
clc
push
adc
inc
cld
retf
dec
test
mov
rcl
repnz
fstp
xchg
add
test
mov
pop
push
xor
not
test
call
pop
pop
in
inc
xchg
rol
retf
outs
lahf
lods
jecxz
xchg
sub
fist
xor
ja
in
leave
xchg
sub
or
popf
jmp
push
pop
add
dec
fsub
or
dec
loope
mov
out
mov
jnp
and
stos
addr16
jle
mov
or
add
sbb
pop
cmp
sbb
jns
jns
mov
sbb
in
loope
fwait
lahf
jg
(bad)
arpl
cmp
pop
ret
jb
add
and
scas
sub
push
or
mov
dec
nop
xchg
(bad)
mov
daa
scas
push
dec
cmc
mov
sub
mov
or
outs
xor
jmp
xor
lock
dec
xchg
call
or
push
std
dec
push
fcom
pop
push
inc
push
je
sub
es
jmp
push
jle
ret
mov
xchg
adc
xchg
jmp
mov
sub
mov
arpl
dec
pop
push
sbb
and
push
xchg
call
cmp
push
add
enter
and
sub
(bad)
sub
das
xor
mov
jge
out
fstp
(bad)
stc
push
aaa
jmp
dec
and
outs
push
inc
sahf
dec
pop
pop
or
pop
shr
dec
and
xor
mov
jmp
mov
repnz
sahf
rcr
jecxz
repnz
lock
bound
clc
cmp
(bad)
mov
out
dec
xchg
xchg
scas
xor
es
mov
mov
out
int3
(bad)
std
(bad)
out
sub
ror
pushf
push
ss
aad
pop
pop
enter
lea
rcl
daa
into
xor
sub
xor
pusha
lods
xor
nop
mov
scas
mov
popf
(bad)
pop
lds
mov
xor
sahf
mov
mov
js
push
int3
ja
aaa
fild
xchg
loope
bound
arpl
in
push
loopne
or
imul
add
rol
stos
xlat
packuswb
mov
mov
outs
ffree
xor
and
push
pusha
push
lods
mov
in
xchg
div
jbe
rcl
repnz
rcl
xchg
stos
dec
stos
cmp
es
mov
pop
pop
pushf
pop
dec
mov
xchg
sar
aad
pop
jns
(bad)
or
jo
out
push
xlat
jb
ret
fwait
add
mov
jae
mov
out
cld
ret
sub
pop
jmp
aam
inc
mov
mov
std
(bad)
jbe
ret
jl
loope
(bad)
out
xchg
sbb
mov
lock
add
mov
(bad)
pop
stos
adc
xchg
xchg
cwde
adc
jnp
add
stos
push
add
mov
cmp
pop
xchg
or
add
call
mov
jl
xchg
repz
and
pop
ficomp
std
mov
jns
xor
and
cmps
pop
add
stos
sahf
outs
in
std
shl
and
leave
sbb
ror
push
daa
call
bound
pusha
cld
retf
push
xor
dec
pushf
jae
dec
outs
cmps
clc
mov
lahf
mov
sbb
imul
(bad)
fcom
dec
mov
add
mov
aam
mov
pop
xor
push
and
stc
mov
fstp
outs
mov
fdivp
xchg
lock
xlat
xor
sbb
ja
jbe
push
popw
xchg
pop
add
mov
pop
sbb
out
ret
shl
jmp
outs
or
mov
sbb
ins
ror
imul
pop
out
and
cmp
sbb
repnz
ror
mov
add
mov
cld
ret
jg
mov
pushf
enter
out
lods
outs
sub
mov
cli
push
sbb
inc
xor
test
xor
inc
mov
cld
dec
add
mov
sub
push
sbb
ins
jge
or
cmp
lahf
cmp
iret
inc
jns
push
push
add
mov
jg
jns
test
adc
clc
pop
mov
jmp
sub
fnstenv
mov
rcl
movs
pop
cmp
or
mov
aam
add
cmps
add
movs
in
leave
dec
xor
js
dec
rcr
out
or
popa
mov
cmp
jmp
push
pop
dec
es
xchg
xchg
dec
gs
dec
pop
test
sub
xchg
or
adc
dec
cmovp
les
ss
cmp
push
mov
lods
xor
cld
dec
xchg
cmp
movs
push
mov
adc
xchg
(bad)
retf
inc
or
sbb
mov
imul
mov
movs
(bad)
outs
and
mul
sub
adc
mov
push
sti
movs
xor
jmp
inc
retf
enter
scas
pop
add
xchg
dec
push
jns
push
push
mov
mov
test
(bad)
clc
mov
not
addr16
std
sahf
js
movs
inc
mov
in
pop
iret
inc
in
sbb
enter
in
bswap
mov
inc
add
cs
xchg
shr
pop
jp
mov
dec
xchg
gs
jnp
js
add
fidiv
aas
mov
xchg
retf
mov
sbb
cld
aas
shl
sub
xchg
adc
mov
push
sbb
cdq
and
jno
mov
inc
sbb
gs
test
popf
mov
and
push
mov
fdivr
pop
and
lods
addr16
and
in
adc
not
lock
sti
and
ror
movs
bnd
push
dec
retf
call
inc
add
push
fdiv
jo
jnp
add
push
pop
idiv
sbb
sub
mov
call
cwde
sbb
adc
and
and
pop
jmp
mov
iret
adc
cmp
pop
imul
pop
imul
adc
daa
mov
lahf
retf
mov
sahf
iret
inc
adc
xor
mov
push
js
mov
nop
cmps
gs
sub
in
or
sub
inc
or
popf
icebp
sub
repz
xchg
mov
mov
pop
adc
fldln2
outs
popa
sbb
cmps
hlt
js
test
out
lods
mov
out
sar
dec
dec
test
jl
movs
inc
jns
adc
inc
(bad)
dec
arpl
mov
xchg
lock
jle
pop
cmps
ds
sub
adc
xor
jno
in
out
loopne
(bad)
or
jp
xor
lock
pop
loop
inc
cmps
(bad)
push
xlat
and
sub
icebp
pop
inc
mov
push
lods
cmp
add
and
inc
int3
imul
cmps
or
jbe
cmp
jne
ins
fstp
cwde
mov
popf
sub
shl
pusha
cmc
je
sbb
int
jae
sub
and
rol
in
es
(bad)
iret
fnstsw
or
jg
fcmovbe
div
in
adc
pop
inc
jmp
neg
fild
inc
mov
mov
out
pop
cmp
inc
xor
cs
mov
mov
adc
sub
inc
push
push
pushf
movs
sbb
xor
mov
shl
in
ss
sub
xor
jns
fs
cmc
shr
push
lea
jbe
fisttp
ja
pop
sub
mov
mov
int3
xor
cmp
mov
test
aam
dec
and
div
imul
inc
test
add
or
fld
or
pushf
test
pop
out
push
popa
pop
stos
test
into
cmps
popa
retfw
push
and
int3
xor
in
push
or
cdq
outs
sub
mov
lock
addr16
lods
fistp
xchg
gs
les
sub
push
fnsave
aam
push
icebp
or
inc
pop
inc
adc
imul
cmp
loop
retf
cmps
rcr
jno
stc
mov
mov
dec
jg
aam
fwait
xor
loop
sbb
sbb
lods
pop
push
dec
xor
das
imul
in
fwait
sub
sub
int
cwde
adc
sti
mov
idiv
cmps
js
adc
mov
pop
dec
dec
add
lods
mov
iret
shl
(bad)
cwde
jmp
mov
xchg
mov
sbb
jbe
pushf
inc
rol
ret
rcl
mov
(bad)
or
out
out
aaa
mov
loopne
lods
shl
loopne
fxch
jnp
sahf
pop
pop
scas
jae
pop
push
sbb
(bad)
xor
xchg
xchg
sub
sub
cwde
out
(bad)
push
pushf
inc
mov
adc
cmps
or
lock
push
imul
push
push
outs
jmp
mov
ret
sub
frstor
pop
inc
out
or
repz
test
jp
imul
scas
add
pop
lods
(bad)
scas
mov
add
jl
daa
lock
les
out
sub
mov
xchg
icebp
aas
sti
stos
mov
inc
test
push
pop
nop
test
ret
aad
cli
in
ficom
push
loop
sub
sub
jno
movs
adc
pop
into
lds
inc
aam
add
das
push
clc
mov
movs
in
js
leave
push
push
loope
mov
push
lock
ins
imul
or
push
ret
mov
cwde
lahf
dec
pop
jb
int
sub
pextrw
inc
rol
repz
add
push
sahf
or
adc
dec
ja
mov
pop
sub
int3
push
jmp
aam
push
push
rcl
rcl
loopne
ror
movs
add
mov
imul
mov
push
and
cmps
xor
sti
inc
xchg
or
adc
outs
xchg
repnz
dec
popf
sub
mov
inc
xchg
push
sub
bound
pop
mov
and
gs
inc
ds
out
movs
scas
xlat
fsub
dec
shl
adc
xchg
outs
mov
sub
mov
add
or
adc
cmps
movs
lods
sub
jne
jge
mov
or
add
sbb
push
inc
imul
(bad)
add
out
jle
scas
push
fidivr
(bad)
fs
or
jne
jecxz
jmp
jecxz
scas
dec
(bad)
inc
aam
arpl
jg
stos
inc
xchg
jmp
(bad)
and
push
push
ffree
mov
xchg
loopne
push
fadd
cld
cmps
mov
mov
cmps
adc
popa
fnstcw
stc
fnstenv
ja
fwait
mov
push
add
sub
or
xor
out
int3
aad
into
retf
or
push
out
fnstcw
sub
retf
xchg
sar
ds
jae
jbe
add
xor
repz
add
adc
jns
call
push
mov
loopne
out
mov
or
cmp
out
jmp
mul
jg
test
pusha
adc
mov
add
sbb
imul
sbb
aaa
add
mov
cmps
test
mov
fwait
sbb
and
iret
cld
outs
daa
pop
add
pushf
js
mov
in
dec
aas
xchg
cs
aas
jns
imul
sbb
xchg
movs
cmps
xchg
mov
add
(bad)
sub
pop
mov
(bad)
scas
and
pushf
mov
out
dec
outs
imul
jecxz
hlt
lods
cmps
adc
lock
pop
add
mov
fwait
shl
and
cmp
mov
int
cli
mov
xchg
je
dec
jnp
mov
daa
ss
mov
inc
aaa
adc
and
lods
push
xor
sahf
iret
fadd
call
mov
push
out
out
enter
push
movs
pushf
mov
popa
cmp
movs
scas
sub
outs
fld
jo
mov
test
push
ja
inc
jae
scas
cmp
(bad)
jg
sub
mov
(bad)
push
add
fdivr
xchg
or
pop
jle
outs
dec
push
push
dec
mov
imul
ss
fcomip
inc
in
sub
push
xchg
xor
inc
mov
dec
pop
mov
pop
stc
retf
dec
pop
mov
inc
frstor
jo
out
daa
mov
cmp
lds
or
aam
clc
mov
outs
mov
iret
out
pop
pop
dec
sar
shl
jecxz
add
and
jae
inc
xchg
pop
dec
hlt
ret
pop
xor
push
mov
mov
mov
xchg
pop
fwait
xchg
scas
out
and
out
in
add
mov
clc
adc
xchg
and
lds
jb
(bad)
pusha
(bad)
fdivp
lock
inc
xor
and
dec
dec
sbb
lea
push
mov
push
mov
cdq
mov
xchg
mov
or
jo
repnz
jecxz
adc
das
into
push
xchg
add
lods
or
rcl
je
mov
leave
sub
xchg
ret
xchg
sbb
mov
or
(bad)
mov
pop
rol
stos
out
pop
mov
or
loop
mov
repnz
mov
ror
xchg
fmul
mov
or
popa
(bad)
retf
mov
test
mov
in
loope
call
std
dec
xchg
rcr
mov
push
popa
fbstp
jp
sub
jae
loopne
and
mov
lods
clc
push
call
popf
imul
xchg
mov
outs
imul
repnz
repz
das
sub
push
js
stos
and
mov
pop
push
loopne
or
daa
jmp
(bad)
push
cmp
ins
fwait
mov
push
loopne
ds
(bad)
(bad)
jle
(bad)
test
cwde
pop
dec
(bad)
rol
sar
out
jg
test
fisttp
sub
jle
push
ret
popf
out
sbb
call
scas
js
xchg
mov
dec
fsub
imul
mov
mov
dec
and
cmp
or
repz
pop
popa
loope
mov
mov
push
inc
xchg
and
(bad)
retf
in
test
int3
(bad)
cmp
push
div
xor
lahf
xchg
in
mov
jecxz
jle
inc
and
sti
push
cdq
inc
ror
inc
pop
in
xor
inc
cmp
mov
pusha
(bad)
mov
stc
push
dec
jmp
(bad)
jne
sar
sub
fwait
mov
add
pop
shl
aam
stos
mov
outs
sub
add
inc
les
push
imul
mov
add
sar
pop
mov
std
cmp
(bad)
push
pushf
out
cmp
dec
scas
mov
cmps
add
ror
xor
ss
cwde
sar
and
arpl
not
outs
pop
outs
data16
(bad)
push
out
mov
or
std
sub
movs
add
pop
cmp
out
inc
and
inc
xchg
push
neg
(bad)
imul
mov
cmc
inc
jns
ins
jecxz
and
push
popf
daa
ins
shl
xor
lds
outs
jmp
shl
aas
aam
xchg
mov
in
mov
sar
jo
sub
mov
test
jle
dec
popa
fld
ins
out
mov
test
scas
dec
std
push
retf
mov
lods
pushf
out
jmp
sar
cwde
ss
sbb
fcom
jl
sub
xor
fdiv
cld
push
push
jg
fcomp
mov
repz
(bad)
dec
popa
inc
mov
or
pop
push
in
pop
sub
fwait
mov
sbb
icebp
mov
and
cdq
sub
add
push
ss
jecxz
in
(bad)
jnp
inc
lahf
xchg
sbb
jns
add
daa
and
hlt
jge
xchg
push
je
(bad)
sbb
xor
movs
in
dec
hlt
sbb
dec
loop
and
movs
jns
add
cli
test
cdq
mov
dec
lahf
mov
ds
stc
pop
aad
call
out
js
popf
ins
(bad)
call
in
(bad)
and
inc
add
mov
js
test
rcr
scas
cmp
jns
stc
xchg
in
cli
fisttp
jb
mov
dec
jo
das
mov
mov
push
push
pop
jmp
in
xchg
fcomi
inc
fnstenv
jmp
loopne
ret
nop
cmc
sub
cdq
loopne
popa
stos
dec
push
xor
iret
popf
push
lea
or
mov
(bad)
scas
mov
pop
xchg
ins
shl
out
cld
and
pop
in
dec
jns
aam
xchg
fsub
in
in
loopne
fwait
(bad)
aam
in
imul
sti
inc
gs
cmp
shl
mov
and
inc
sub
push
push
outs
cmp
jo
cmc
xor
xor
inc
in
jl
je
jo
jmp
ins
mov
cmp
jno
cli
mov
rcr
mov
xchg
xchg
imul
jmp
pop
xor
jo
sbb
ds
jmp
mov
inc
sbb
push
inc
lock
mov
nop
inc
push
mov
xchg
fwait
or
pop
dec
jmp
mov
aaa
mov
cmp
adc
and
and
aam
ja
mov
call
(bad)
jae
loope
sub
imul
test
call
jl
(bad)
push
mov
call
dec
jnp
dec
retf
jbe
adc
mov
ds
popa
(bad)
sar
js
out
sbb
xchg
lahf
sub
jb
fadd
pop
sbb
push
(bad)
out
jb
enter
adc
push
xchg
sahf
lahf
jmp
jmp
and
imul
out
arpl
or
sbb
fimul
xor
sar
mov
out
into
pop
fsub
jmp
jge
repz
retf
aaa
dec
mov
mov
xchg
mov
cmp
cdq
cmc
mov
sub
and
inc
mov
mov
adc
jbe
(bad)
sbb
fdiv
push
xor
movs
jae
mov
clc
mov
and
adc
iret
(bad)
jne
mov
clc
cmps
leave
in
sub
data16
pop
sub
test
sub
jl
jmp
sub
jp
fucomip
rcl
shl
mov
(bad)
js
pop
outs
ret
movs
in
sti
ret
fsubr
adc
lahf
mul
jg
jmp
test
ja
sbb
push
test
pop
out
ja
jg
or
inc
inc
jp
xor
outs
aad
push
hlt
mov
sub
loop
push
xchg
xor
jo
xchg
das
pop
mov
adc
bound
ficomp
je
pop
jbe
mov
jp
push
push
mov
xor
pop
mov
cmps
ins
mov
stc
lea
cs
cmp
loope
mov
int
pop
daa
pop
leave
test
sbb
test
cld
inc
push
in
shl
loope
adc
mov
retf
loop
es
sahf
jle
frstor
jae
es
adc
xchg
call
pop
lds
(bad)
cmp
loop
pop
add
and
xlat
cs
dec
add
cwde
imul
jg
ror
in
inc
ror
cmp
je
inc
retf
mov
pop
sti
mov
cmc
add
ds
lods
pop
ins
jo
mov
call
(bad)
sbb
cmps
iret
add
pop
icebp
fdivr
cld
push
inc
(bad)
fdiv
call
inc
call
xor
sub
(bad)
push
fcmovb
mov
sub
cmp
iret
lods
push
outs
arpl
jg
loopne
dec
sahf
add
movs
cli
rep
bound
test
adc
mov
out
test
dec
mov
movs
mov
jbe
cmc
push
xchg
pop
xor
fdivr
ja
mov
and
iret
rol
jecxz
pop
ja
call
or
xchg
pop
xor
int3
mov
fmul
call
movs
loope
pushf
(bad)
xchg
sar
leave
hlt
pop
clc
arpl
fdivr
scas
hlt
inc
cmp
mov
rcl
loop
inc
jmp
outs
inc
leave
inc
and
ins
inc
jnp
cdq
fist
jle
and
sub
bound
das
mov
imul
scas
gs
out
test
push
push
dec
pop
and
dec
inc
and
cmp
pop
data16
sbb
pop
sbb
retf
lods
sub
sti
mov
call
fidiv
sub
inc
inc
mov
ss
int
and
cwde
in
mov
test
popa
test
mov
add
sub
xchg
icebp
stos
mov
adc
dec
add
leave
stos
(bad)
jo
xor
and
(bad)
les
out
cmps
mov
jmp
adc
sbb
ins
imul
jae
arpl
mov
pop
xchg
pop
stos
cmp
cwde
sahf
daa
repz
jle
addr16
sbb
jo
das
pop
into
hlt
add
cmps
das
out
sbb
cmp
add
dec
xchg
push
push
and
stos
inc
add
inc
pop
cld
(bad)
nop
mov
bound
xchg
or
mov
xchg
les
inc
stos
mov
cmps
mov
lods
mov
and
arpl
fwait
sbb
mov
push
jne
or
shl
mov
ss
movs
jp
iret
fwait
pop
pop
mov
lods
xchg
retf
xchg
jp
add
fsubr
adc
je
iret
jnp
push
sub
(bad)
test
addr16
mov
pop
cmp
mov
dec
gs
and
inc
movs
out
push
mov
add
xor
xchg
js
clc
cmp
stos
sbb
inc
ror
mov
push
and
adc
addr16
loopne
fisttp
mov
(bad)
leave
cmps
loopne
adc
addr16
xlat
call
push
out
(bad)
std
xchg
aaa
sbb
aad
pop
xor
cmps
sub
ss
xchg
xor
adc
addr16
adc
rcr
fnstsw
(bad)
popf
or
mov
cmps
sub
bound
ins
stos
dec
shl
inc
mov
pushf
dec
push
sub
outs
mov
cmp
inc
not
push
jnp
fiadd
aad
es
in
mov
mov
jle
loopne
and
mov
cmps
add
mov
ret
jnp
js
xor
dec
in
add
ja
int3
je
push
add
jmp
and
lock
sbb
pop
outs
push
out
sub
stc
rcr
pusha
ins
nop
sub
sti
sub
add
imul
test
pop
repnz
sbb
pop
sahf
xchg
mov
pop
or
test
push
and
lea
shl
fs
pop
jmp
push
jae
push
pop
fsub
pop
sbb
adc
call
sbb
mov
sbb
movs
mov
push
pop
add
std
adc
adc
jae
inc
sahf
push
mov
(bad)
jne
lea
int
inc
xchg
mov
icebp
nop
xchg
ret
movs
cmc
pushf
lods
push
mov
and
repnz
dec
dec
je
(bad)
and
add
pop
das
mul
dec
call
mov
jg
jo
and
or
enter
adc
retf
inc
push
pop
mov
push
sti
push
retf
dec
inc
dec
inc
jmp
push
fild
mov
lds
ds
mov
shl
fisub
lea
lock
mov
jno
or
(bad)
sti
mov
adc
push
rol
shl
int
mov
inc
mov
inc
ins
inc
shr
stos
xchg
sbb
xchg
addr16
add
unpckhps
je
test
fadd
mov
adc
push
daa
adc
repz
pcmpgtb
aas
out
push
xchg
add
iret
pusha
sbb
mov
jo
pop
mov
and
movs
xchg
pop
arpl
test
out
test
loopne
adc
jns
sbb
arpl
push
mov
jb
adc
sub
cmp
shr
inc
xchg
push
jg
daa
clc
out
dec
and
inc
ror
mov
xchg
xchg
popf
movs
xchg
pop
push
and
jp
addr16
xor
add
inc
adc
fcmovb
inc
hlt
add
sub
call
lods
sti
or
das
cmp
icebp
lock
cwde
stc
inc
mov
(bad)
adc
inc
fwait
sbb
aam
test
push
icebp
inc
push
pop
ins
popf
xor
xlat
scas
mov
mov
cwde
sbb
scas
fbstp
xor
stos
mov
adc
sbb
jnp
mov
cs
xor
jno
test
and
cs
rcl
jne
hlt
add
ret
mov
loop
mov
movs
in
in
sbb
xor
dec
mov
idiv
dec
push
xor
loope
mov
cmp
inc
popf
jge
push
jp
sbb
jmp
pop
or
ror
stc
lods
dec
rol
enter
mov
shrd
in
dec
dec
mov
and
icebp
outs
cld
jg
lds
fisubr
xlat
mov
jp
test
inc
je
jle
pop
sbb
xchg
adc
mov
dec
mov
imul
jno
clc
xchg
loope
or
mov
pop
xor
sbb
rol
xor
neg
jno
ja
sbb
adc
stc
movs
jge
hlt
add
in
push
dec
ror
add
jmp
ds
out
inc
lods
(bad)
(bad)
std
push
stc
xor
movs
mov
xchg
sub
xor
xor
push
inc
xor
jae
lea
repz
ins
sbb
or
mov
or
(bad)
addr16
mov
xchg
test
dec
jle
int3
and
cmps
pop
mov
ja
addr16
or
pop
aaa
movs
call
popa
and
das
jmp
push
adc
inc
js
idiv
sti
cmpxchg
fldz
mov
jg
les
jmp
in
lea
adc
dec
inc
mov
sbb
mov
shl
and
jg
fsub
inc
and
mov
cmp
das
loopne
aad
push
mov
lods
mov
jae
loope
add
cmps
mov
ret
and
cmp
push
adc
sub
imul
aam
or
cs
sub
sub
mov
aaa
inc
movs
cld
add
das
mov
sub
push
(bad)
das
mov
jnp
mov
jmp
rcr
cmps
mov
fsubr
jbe
inc
fild
inc
xchg
fst
jo
jmp
xor
mov
sub
sub
adc
xor
inc
sbb
lea
jg
cli
or
xor
cld
add
add
jae
xchg
jns
mov
lahf
les
jmp
rcr
in
(bad)
xchg
cmp
aam
and
adc
and
mov
out
mov
cmp
jno
fucomp
mov
mov
dec
pop
sbb
(bad)
push
add
jnp
sbb
mov
inc
icebp
in
hlt
aad
adc
out
out
adc
push
(bad)
add
stc
das
jnp
dec
clc
xor
enter
fst
sbb
test
mov
push
fsub
jp
sub
add
jnp
ret
int3
push
xchg
sar
sbb
les
lea
jecxz
cmp
int
cmp
loope
fnstenv
daa
pop
or
sub
xchg
mov
inc
movs
in
inc
out
inc
mov
adc
push
mov
sti
(bad)
cwde
jns
adc
push
xor
push
call
pop
adc
jge
fisub
sub
fild
jns
ret
arpl
hlt
loopne
std
dec
pop
ds
(bad)
jmp
xchg
jecxz
gs
retf
sub
mov
xchg
adc
loope
adc
jg
jnp
popa
xor
cmp
adc
and
arpl
or
pop
adc
jne
push
push
sub
cmp
pop
push
jbe
(bad)
xor
and
sbb
pop
stc
bnd
adc
fdivr
das
setno
and
xchg
cmp
das
xlat
mov
push
mov
inc
xor
xchg
(bad)
ds
dec
enter
sar
push
bound
mov
popf
xor
push
sbb
cmp
aaa
lods
lods
push
inc
push
dec
adc
aad
hlt
dec
xchg
es
mov
out
test
pusha
rcr
mov
xchg
mov
sub
repz
in
add
jge
mov
mov
xor
sahf
cmp
test
jbe
sti
lods
push
(bad)
or
pop
punpcklwd
arpl
mov
inc
jbe
fcom
cmc
fimul
js
mov
bound
jle
mov
shl
add
icebp
adc
cmc
cdq
or
xor
cmp
dec
sbb
cld
bound
in
daa
inc
sbb
repz
mov
mov
xor
scas
or
fsubp
push
test
lods
and
pop
scas
xchg
(bad)
hlt
add
(bad)
rol
mov
test
mov
inc
sti
int3
pop
aaa
add
cmp
inc
movs
mov
lea
dec
dec
popf
mov
enter
adc
rcl
icebp
fild
(bad)
in
or
sbb
out
sbb
imul
cmc
inc
out
(bad)
fild
jbe
push
test
xchg
test
js
in
mov
adc
inc
push
add
pushf
cmp
inc
mov
(bad)
icebp
icebp
cmps
in
movsx
inc
loop
lock
jns
retf
rol
add
push
cld
jl
into
adc
mov
add
xor
or
lock
pop
addr16
stos
adc
rcl
adc
(bad)
xchg
cmps
outs
xor
jne
stos
mov
scas
gs
xlat
ds
lds
cs
invd
movs
test
cdq
mov
sahf
pop
ficomp
pop
(bad)
repnz
inc
je
es
add
call
cdq
cmp
add
into
xor
fisub
loope
mov
mov
pop
fiadd
mov
push
in
mov
mov
in
mov
mov
std
push
cmp
imul
xchg
in
jb
xchg
rcl
dec
dec
nop
int
aaa
mov
nop
inc
jae
inc
popa
mov
pop
jmp
daa
xchg
or
les
call
and
jbe
pop
fisttp
fcom
gs
dec
dec
push
fsub
add
mov
(bad)
out
imul
mov
inc
xchg
call
add
fcomp
mov
push
or
pop
mov
aam
cmp
leave
jmp
das
lds
xor
mov
pop
jb
inc
pop
fdiv
mov
out
cmps
in
jmp
std
dec
repnz
cdq
jmp
cli
(bad)
popf
ins
push
gs
rcl
cwde
(bad)
jno
pop
fcomp
xlat
mov
xchg
lock
adc
(bad)
fisubr
sbb
sahf
and
inc
imul
inc
mov
adc
pop
stos
out
rol
and
sbb
add
mov
(bad)
xchg
adc
jae
dec
mov
jnp
dec
sar
xlat
adc
xor
jae
dec
(bad)
jle
push
repz
add
pop
out
test
stc
and
leave
loopne
sub
dec
push
(bad)
mov
push
pop
retf
popa
xchg
call
push
dec
pop
pop
clc
jbe
in
repz
add
pop
sbb
and
ins
(bad)
push
jo
(bad)
(bad)
mov
push
sbb
cmp
jb
adc
je
or
test
imul
mov
mov
pslld
sbb
ja
test
(bad)
rcr
pop
call
pop
ror
mov
push
lds
push
inc
xor
inc
push
xchg
int3
cli
inc
icebp
stc
cdq
mov
add
mov
iret
push
inc
sbb
add
movs
add
jge
inc
test
lods
fsubr
sbb
not
jno
and
adc
inc
ds
outs
shl
or
fnstcw
lods
adc
mov
fucomp
mov
fs
jmp
scas
mov
xchg
scas
jge
dec
mov
mov
xchg
stc
femms
sub
sbb
xor
fucomp
fcom
out
mov
pop
jmp
sti
pop
repz
arpl
xor
pop
cmps
or
cli
test
call
outs
pop
sub
xchg
push
loope
mov
pusha
inc
push
or
into
cmp
mov
sub
mov
dec
and
adc
inc
stos
jno
sbb
sbb
in
push
and
mov
pop
mov
cdq
mov
add
enter
fld
div
adc
pop
imul
or
and
push
cmps
and
pop
sbb
ja
adc
mov
and
inc
jle
jb
pop
xchg
ss
cmps
or
xor
gs
test
push
xor
cld
xchg
cmp
add
mov
test
pusha
nop
mov
int3
or
mov
jmp
cmps
mov
stos
int
push
leave
ss
push
mov
and
xchg
div
mov
pop
inc
rcr
test
ror
lock
jg
adc
inc
xchg
fwait
mov
cmp
fs
scas
cmovb
iret
cld
mov
mov
(bad)
fcom
fist
je
pop
(bad)
int
rcr
sbb
icebp
xlat
pushf
mov
xlat
popf
sub
jae
pop
test
pop
sar
arpl
pop
stos
or
push
xchg
adc
push
fnstsw
cli
aad
outs
cmp
sbb
sbb
mov
imul
jecxz
cmp
lods
mov
mov
and
icebp
pusha
aam
test
fisubr
adc
jbe
enter
and
fdivr
and
or
sti
mov
popf
dec
pop
push
js
inc
outs
loopne
cmc
jp
jp
mov
(bad)
out
sub
or
ror
mov
adc
scas
cs
cmp
jbe
(bad)
sti
cmp
jmp
loope
div
(bad)
out
push
imul
test
movs
das
jl
xchg
pop
mov
inc
out
clc
lods
in
xor
aad
xor
out
mov
popa
(bad)
lock
fldlg2
pop
jmp
sub
(bad)
cmp
xchg
xor
icebp
and
loop
mov
adc
mov
outs
mov
add
ret
ret
jae
xor
jecxz
ss
push
inc
sbb
cmp
jmp
sub
popf
inc
stc
sub
sub
das
jno
call
xor
pop
in
mov
mov
and
mov
jbe
out
ret
push
ret
push
mov
jle
xchg
(bad)
ja
push
jmp
jnp
rol
lds
outs
add
and
mov
ds
mov
pop
mov
in
inc
jbe
and
cli
pop
fdiv
dec
add
mov
mov
xchg
xchg
inc
mov
(bad)
push
dec
ret
pop
sbb
(bad)
dec
daa
ror
out
test
sti
pop
repnz
test
ja
jmp
fwait
retf
pop
cdq
pop
enter
lahf
retf
mov
rcr
out
pop
and
add
in
popf
pop
xchg
aaa
xor
movs
inc
xor
push
add
cmps
xchg
or
sbb
jmp
mov
inc
push
add
inc
inc
dec
icebp
out
xor
adc
mov
ja
push
sti
lods
inc
adc
xchg
cmp
push
jmp
scas
inc
add
ja
xor
repz
jbe
cmps
icebp
mov
outs
ret
mov
sub
jl
(bad)
lock
(bad)
push
mov
and
jnp
xchg
mov
mov
mov
outs
push
ret
sbb
test
xchg
mov
sub
add
imul
push
cs
mov
mov
icebp
and
jae
ret
cwde
mov
push
test
into
jp
dec
add
in
mov
fldenv
push
aas
dec
sub
stc
imul
fcomp
in
inc
jecxz
and
xchg
outs
sub
pop
or
mov
mov
push
es
icebp
cmps
jns
imul
lds
out
mov
test
or
(bad)
sbb
xchg
outs
xor
aaa
add
push
adc
ins
sbb
cli
hlt
push
or
je
inc
call
mov
sbb
pop
sub
ja
or
adc
mov
js
mov
add
dec
ret
xor
push
daa
fsubr
mov
add
(bad)
jge
bound
leave
xchg
xchg
imul
push
aaa
cli
mov
ja
sti
inc
nop
cmp
and
xchg
cmps
lahf
fimul
xor
add
pop
sub
mov
mov
and
or
add
pop
sbb
shl
jne
xor
inc
(bad)
je
add
jae
push
lahf
sti
mov
sbb
test
jne
add
cdq
popa
fidiv
push
adc
xchg
or
inc
and
or
jl
or
xlat
xchg
cwde
(bad)
xchg
adc
push
xor
or
cld
mov
pop
push
jle
test
shl
pop
mov
dec
pushf
imul
int3
or
ins
pop
ja
jo
add
lods
jo
iret
cmp
std
lock
push
loope
mov
aaa
inc
pop
je
or
cs
stos
add
adc
xor
inc
fisttp
call
xchg
cli
mov
jl
jge
xor
rcr
xor
mov
mov
jb
pop
aaa
or
dec
xor
mov
jg
hlt
push
add
movs
dec
je
pop
mov
enter
mov
push
and
push
das
cld
sub
sti
mov
ja
stos
cmp
add
sub
mov
push
and
sbb
jns
mov
out
not
in
push
push
xor
enter
adc
xlat
dec
loop
adc
setge
ins
fist
js
xor
rol
in
adc
rcr
jmp
cmp
jne
inc
mov
xor
cmps
and
inc
push
push
rcr
int
ins
inc
nop
fdiv
ja
xor
and
fdiv
add
mov
gs
test
test
cwde
in
mov
lahf
push
dec
nop
shl
add
xchg
push
lahf
add
add
test
xor
adc
pop
clc
popf
test
(bad)
aas
cld
pop
repnz
jl
cmp
pop
movs
sbb
adc
enter
jecxz
and
sar
mov
dec
bound
cmp
dec
call
idiv
sbb
jae
xor
mov
(bad)
or
dec
adc
inc
sub
push
scas
pop
nop
jecxz
icebp
xbegin
popa
jg
mov
retf
ficom
test
xchg
mov
das
mov
jo
jle
dec
aam
in
test
xchg
int
std
daa
jo
call
dec
je
sub
dec
or
mov
mov
xor
mov
outs
in
mov
lock
shl
pushf
je
mov
jne
push
lock
outs
pop
fstp
fidiv
jle
mov
add
test
es
xchg
(bad)
pusha
push
mov
xchg
shr
outs
outs
push
mov
pop
inc
lods
stos
das
aaa
pop
outs
inc
mov
add
lds
mov
ret
adc
dec
out
dec
mov
xor
jnp
adc
push
pop
rol
jbe
icebp
and
mov
ficom
div
push
enter
lock
push
pusha
in
scas
sub
scas
cwde
and
(bad)
mov
push
push
sub
sar
xor
outs
out
xor
jle
xchg
movs
jns
mov
call
loopne
fnstenv
fsub
(bad)
and
daa
dec
js
mov
stc
rcl
and
mov
and
mov
imul
inc
out
ret
pop
push
out
sbb
cwde
scas
mov
cmp
cmp
inc
jns
xor
sbb
sub
pop
jns
and
sbb
ffree
adc
cmp
cmps
push
hlt
call
outs
fbld
fwait
popa
add
test
mov
dec
add
jno
or
dec
or
mov
mov
ins
push
retf
fidivr
mov
inc
or
lds
in
xor
jb
(bad)
mul
aad
test
jl
(bad)
retf
cs
js
cwde
clc
pop
sar
push
mov
dec
ss
fisub
and
das
(bad)
aam
fsub
js
jbe
push
in
movs
movs
addr16
or
addr16
mov
jns
lods
cs
imul
(bad)
fbld
xor
clc
imul
add
shl
call
clc
push
mov
(bad)
jbe
adc
push
push
lock
lea
stos
jmp
imul
lahf
std
lods
mov
push
jmp
cmps
fcmovnbe
fdiv
jo
les
xor
cmp
rol
in
sbb
(bad)
in
push
ret
lea
aam
or
inc
pop
sahf
pop
into
sbb
in
lods
push
add
into
pop
test
mov
mov
jmp
leave
pop
data16
aas
dec
sbb
scas
xlat
stos
je
aas
movs
push
push
movs
jne
imul
pop
add
retf
pop
test
mov
sub
into
loope
pop
dec
jl
and
jns
pop
fmul
sti
dec
cmp
retf
lds
(bad)
cdq
out
pop
sbb
ss
jns
or
mov
xchg
xchg
jb
xor
in
mov
dec
fcomp
aad
sahf
ret
aas
lods
(bad)
cmps
dec
aad
sbb
into
aam
popf
push
repnz
xor
xchg
xor
or
sbb
test
jmp
pop
test
bound
jmp
cmp
mov
sbb
cmc
add
or
push
lea
adc
outs
jae
out
mov
popa
fidivr
sbb
push
xor
inc
pop
movs
mov
daa
sub
sbb
cmp
and
dec
mov
stc
in
mov
mov
popa
jb
ins
jle
mov
cwde
jl
cmp
inc
xchg
cmc
push
dec
dec
mov
repnz
pop
stc
jp
ficom
shl
inc
add
js
sub
mov
mov
rcl
jl
sahf
cmp
retf
aas
in
mov
scas
mov
mov
daa
pop
cmp
scas
mov
add
in
and
das
rol
sbb
and
fld
into
mov
scas
sub
mul
rcr
push
test
pop
fimul
sbb
imul
out
push
arpl
pop
cdq
sub
mov
push
add
cmps
push
mov
xor
dec
mov
outs
adc
(bad)
pop
or
mov
aad
xor
test
jmp
xchg
test
shl
mov
ja
pop
cmp
mov
les
mov
loope
ja
adc
dec
retf
ret
ret
sbb
add
and
fild
ins
cmp
mov
call
(bad)
jne
rcr
test
mov
pop
aam
ret
out
jl
std
loop
xchg
int3
fs
dec
loopne
stc
movs
mov
xchg
pop
dec
mov
dec
ss
iret
(bad)
and
mov
xor
dec
fimul
sub
ja
or
push
cmp
clc
pop
adc
add
xor
xchg
sti
retf
and
ret
pusha
(bad)
push
pop
mov
mov
fsubr
xchg
iret
adc
jne
je
call
call
xchg
in
imul
call
or
test
xchg
aam
mov
push
retf
adc
test
outs
jns
rcr
fxam
sub
xor
mov
xchg
call
jbe
and
xor
mov
pop
mov
pop
retf
sbb
not
sbb
loope
dec
mov
jne
mov
cld
cli
or
pop
adc
scas
jns
movs
mov
mov
lods
sar
sbb
push
mov
outs
mov
cmp
jp
cmp
sub
and
sete
and
outs
jne
ja
out
inc
arpl
fsubp
and
lea
push
rcl
(bad)
data16
push
stc
cmc
call
dec
fcomp
ret
add
pop
inc
mov
call
push
jmp
push
sbb
dec
mov
mov
push
cdq
fcom
adc
cmp
stc
pop
in
or
inc
movs
jns
sbb
test
xor
fistp
and
mov
cmp
pusha
fld
push
shr
and
inc
int3
cmc
cmps
jae
ficom
and
mov
(bad)
iret
or
add
push
cmp
int
fcmovnb
sub
(bad)
pop
loopne
(bad)
test
shl
rcl
sbb
push
jl
or
or
xchg
icebp
mov
mov
inc
test
cli
jg
jmp
xchg
shl
xchg
xchg
inc
jmp
jmp
movs
lahf
sbb
ss
stos
pusha
(bad)
pop
das
bound
mov
sar
mov
cmp
push
push
lock
and
cmp
mov
dec
and
and
and
pop
fnsave
pop
and
in
mov
les
cdq
sub
sbb
jle
inc
push
ins
xor
add
and
sub
fistp
push
cs
sub
shr
popa
xchg
dec
cmp
cmps
xor
in
out
test
in
pop
cmp
cs
adc
xor
dec
xchg
stos
in
xor
call
pop
cmp
inc
int
mov
adc
sahf
push
call
aam
fs
neg
xor
push
add
retf
mov
sbb
movs
call
sub
xor
xchg
mov
lock
adc
or
test
jb
and
jae
stos
pusha
and
jmp
aaa
push
daa
xchg
mov
ins
xchg
push
mov
movs
scas
sub
pop
fadd
not
sbb
mov
xchg
cdq
mov
sbb
sbb
mov
test
pop
jo
mov
push
out
add
push
push
jl
loope
mov
dec
push
jp
sbb
push
add
dec
dec
pshufw
leave
push
repz
js
test
mov
mov
sbb
imul
ja
mov
sbb
push
sbb
pushf
ret
adc
pop
(bad)
sar
push
lock
and
loopne
mov
add
sub
retf
sbb
jmp
ins
xor
mov
mov
cmc
inc
add
cmc
and
hlt
in
mov
mov
outs
add
loop
dec
adc
cmp
test
adc
xor
xchg
mov
js
xchg
xchg
jle
mov
mov
int
add
jmp
lods
xchg
cmp
and
xchg
(bad)
xchg
or
mov
ror
pop
cmp
clc
sbb
mov
movs
pop
dec
xchg
push
jb
dec
fcmovne
loopne
lods
sbb
ret
jg
adc
jl
mov
mov
mov
(bad)
in
in
sbb
mov
lds
pop
std
push
cmp
sbb
adc
(bad)
mov
div
daa
and
adc
sub
jle
fcomp
push
xor
adc
adc
ret
idiv
movs
(bad)
sub
retf
out
xlat
scas
cli
sub
push
daa
(bad)
dec
pop
and
ja
lds
or
or
xchg
imul
sub
mov
cmp
or
retf
adc
loop
pop
addr16
sbb
jnp
fst
pop
stos
pop
not
ss
call
fist
push
lock
push
add
mov
ret
and
mov
cmp
xchg
test
sbb
inc
aad
pop
xchg
aam
pop
loopne
xchg
stc
pop
adc
cdq
adc
lea
inc
fcomi
jmp
adc
xor
div
pop
(bad)
sbb
sub
push
jno
test
mov
pop
push
movs
ret
dec
mov
jmp
dec
pop
cmps
adc
sbb
mov
push
xor
adc
xchg
push
sahf
adc
repnz
jne
cmp
int3
test
lock
imul
xchg
in
xchg
dec
fsub
cmps
(bad)
push
cmp
(bad)
fdivrp
push
jecxz
lods
rol
and
jb
fwait
retf
jb
mov
push
jmp
cli
outs
sub
push
lahf
sub
into
es
cmp
push
ins
sbb
dec
xchg
pop
adc
dec
mov
lds
adc
std
mov
mov
xchg
sbb
push
mov
outs
aad
mov
adc
lock
jg
push
ret
xchg
cdq
jmp
or
ret
pop
out
ds
gs
pop
dec
rol
add
dec
(bad)
in
jl
int3
(bad)
out
mov
out
stos
mov
fnsave
icebp
neg
pop
or
cmp
pop
mov
mov
ds
ret
sbb
sub
inc
mov
mov
int3
out
inc
jo
fld
mov
data16
imul
cdq
in
mov
aaa
xchg
push
int
hlt
jmp
je
retf
aaa
retf
sbb
data16
sub
or
pop
and
retf
mov
fs
inc
ins
mov
test
stc
sahf
dec
cmps
xlat
aad
mov
cmp
mov
jmp
sbb
scas
bnd
bound
dec
inc
add
ja
(bad)
ins
movs
(bad)
out
mov
jne
gs
xchg
aad
int3
iret
mov
pop
int3
mov
jno
sub
cmpps
jo
add
xor
bound
push
mov
jge
imul
and
and
jb
mov
loope
cmp
and
xchg
xchg
data16
mov
pushf
jbe
mov
icebp
cld
pop
cmp
jg
repz
sub
shl
loope
leave
and
push
call
sub
es
imul
sti
inc
cmp
lahf
mov
daa
ins
adc
lock
fild
scas
call
imul
ins
movq
sub
sbb
imul
pop
mov
cmp
adc
out
or
aas
or
retf
inc
ins
repz
sbb
fadd
mov
cmp
mov
or
cmp
cmp
sub
int
sbb
dec
push
scas
loope
add
add
mov
xor
lahf
sbb
cmp
cs
popf
pop
js
movs
jle
ud0
shl
iret
inc
sti
bound
mov
xor
cmp
fcomp
or
or
into
mov
int3
inc
sbb
pop
cmp
sub
mov
mov
mov
aaa
adc
stc
pop
xlat
cmp
mov
shr
mov
add
jp
movs
mov
fild
ficom
mov
cmp
fistp
(bad)
arpl
or
neg
out
je
sbb
xor
(bad)
arpl
fdivrp
pop
out
ins
cmps
add
xor
mov
pop
mov
bound
inc
jecxz
jge
fild
repz
mov
(bad)
(bad)
cmp
push
movs
push
jne
(bad)
(bad)
jno
loope
inc
mov
sub
dec
sub
sbb
icebp
mov
xchg
(bad)
pop
mov
xchg
fcomp
sub
xchg
icebp
push
mov
outs
sub
jnp
jge
xor
adc
retf
xor
sbb
xor
push
(bad)
out
or
leave
iret
inc
push
addr16
ds
es
adc
and
jge
ret
das
jmp
jp
and
iret
fxch
sub
dec
and
pop
add
icebp
push
les
jo
sahf
jmp
push
dec
inc
mov
adc
jns
jge
mov
stc
scas
adc
in
es
dec
lods
aas
add
clc
outs
mov
popa
sbb
mov
ret
aam
(bad)
retf
mov
pushf
inc
jno
pop
xor
sti
loopne
push
js
mov
or
ds
xlat
std
xor
ins
add
inc
das
or
jecxz
mov
in
ror
mov
fxch
mov
(bad)
out
and
out
add
cdq
repnz
cmp
sahf
push
mov
or
out
cdq
jl
push
loop
lods
or
jne
(bad)
lods
icebp
mov
rcl
lods
repz
xlat
inc
push
push
fisub
inc
jae
xchg
movs
inc
fstp
lea
add
push
ret
mov
leave
arpl
cmc
mov
cmps
push
sub
pop
jp
call
cld
adc
shl
shr
adc
pop
int
push
inc
lea
xchg
push
mov
test
clc
mov
pop
or
adc
sbb
inc
mov
repnz
inc
ins
mul
test
add
(bad)
cmp
push
aad
mov
cmp
sbb
dec
jmp
out
ins
lahf
mov
call
inc
movs
dec
cmp
in
inc
aam
cmp
add
scas
(bad)
xchg
sti
cwde
fild
mov
mov
sbb
sbb
frstpm(287
loopne
in
pop
bsf
jecxz
imul
movs
sub
jmp
bound
jno
dec
dec
sbb
xchg
mov
lods
mov
dec
xor
mov
mov
ficomp
jbe
pop
cmps
jecxz
xchg
fiadd
dec
clc
fdivp
call
into
cmp
mov
sbb
call
push
add
add
movs
cdq
outs
inc
idiv
xor
adc
and
add
popf
push
cli
sub
or
mov
pop
out
and
inc
mov
xor
int3
ss
sub
pop
sbb
fidivr
lahf
mov
cmp
push
lods
cmp
push
mov
data16
daa
cwde
and
fdivr
sub
mov
or
clc
and
cmc
add
mov
mov
xor
add
add
xchg
or
fisub
enter
fiadd
in
in
pop
aad
cdq
(bad)
dec
fcmove
jle
pop
in
sub
addr16
mov
loop
mov
mov
push
xchg
cdq
inc
les
sar
push
test
cmp
in
and
add
mov
mov
push
movs
cmp
dec
xchg
imul
fadd
loopne
shl
aad
xor
(bad)
sar
hlt
jo
or
push
(bad)
je
push
call
push
adc
je
jne
dec
pop
int
call
mov
pop
imul
push
in
lock
popf
fbstp
push
jb
popa
dec
xchg
(bad)
cs
add
daa
jmp
lock
aas
aaa
push
jecxz
call
ja
test
sar
cmp
das
je
out
(bad)
lds
mov
bound
inc
leave
pop
jmp
jne
push
out
inc
mov
adc
jno
outs
sbb
iret
int3
pop
add
sub
push
enter
mov
or
ja
ins
dec
pop
icebp
mov
out
shl
enter
xor
out
add
sub
shl
lea
out
xor
cmp
loopne
mov
div
mov
int
popa
push
mov
adc
pop
xlat
pop
idiv
dec
jp
dec
pop
lods
call
cmp
fidiv
ret
dec
mov
sbb
js
or
shl
pop
pop
jbe
mov
imul
fisub
mov
jns
cmp
jg
adc
movs
lods
xlat
and
pop
mov
sbb
mov
push
stos
adc
mov
xor
outs
lahf
jg
sub
pop
mov
pushf
add
ins
jmp
pop
push
inc
sahf
(bad)
in
(bad)
cmp
or
ds
push
cmp
jo
aaa
dec
add
jge
popa
or
xchg
ins
jae
shl
sub
repz
cmps
fst
add
pop
enter
jb
and
fisttp
mov
push
shl
xor
add
enter
dec
and
je
out
or
mov
rol
add
repz
(bad)
inc
mov
pop
div
add
(bad)
xor
mov
xor
sub
pop
and
sub
xchg
jl
jecxz
pop
test
dec
(bad)
jns
gs
xchg
mov
retf
mov
inc
jmp
cmp
sub
int
xor
xlat
test
mov
push
sub
and
std
clc
mov
mov
inc
inc
stc
jae
int
enter
popf
xchg
push
(bad)
adc
and
aad
xor
lock
mov
loope
mov
add
push
shr
(bad)
xchg
ret
(bad)
push
adc
mov
cwde
mov
push
mov
nop
adc
enter
neg
movs
ret
jo
adc
out
stos
sbb
xor
test
ror
inc
or
mov
repnz
cwde
jns
push
dec
sub
jb
pop
pop
pop
xor
jno
xchg
push
test
fs
dec
sbb
iret
arpl
lds
cmove
sar
adc
mov
(bad)
mov
jge
icebp
movs
adc
mov
inc
sub
dec
mov
xchg
mov
pop
stos
jecxz
pushf
mov
(bad)
arpl
test
loopne
outs
cmps
fisub
ds
dec
test
mov
sub
fldenv
jmp
imul
mov
enter
lods
dec
imul
fidivr
jmp
xor
xchg
pop
push
sub
aam
(bad)
jns
pop
pop
out
aas
mov
pop
frstor
xor
adc
sub
or
leave
jmp
out
pop
sub
stos
movs
out
add
dec
fcom
lods
cmp
xor
push
fs
aas
imul
rol
arpl
mov
sub
mov
sti
xchg
inc
or
jmp
inc
push
sbb
(bad)
jmp
aam
(bad)
rcr
cwde
mov
sub
ins
call
clc
xchg
mov
xchg
repnz
pusha
dec
or
cmp
lods
enter
jae
sti
lods
mov
enter
mov
jb
loopne
mov
xchg
mov
test
inc
mov
sahf
mov
data16
imul
mov
je
mov
pop
jo
retf
int3
or
cmp
into
stc
pop
pushf
test
fs
xor
dec
fidivr
int
push
or
pop
fwait
sub
les
mov
lock
jns
inc
push
ss
ins
xor
or
and
jmp
xlat
data16
cs
jp
sbb
inc
in
sub
fadd
mov
fst
rcr
je
adc
dec
mov
sbb
sub
inc
mov
scas
sbb
xchg
and
loope
add
jl
(bad)
mov
push
mov
std
retf
mov
dec
jmp
mov
outs
xchg
shl
xchg
or
adc
xchg
iret
(bad)
stos
nop
mov
push
pop
add
push
leave
jl
popa
or
cwde
add
lods
push
outs
cmc
ror
je
test
add
add
(bad)
retf
or
sbb
mov
mov
gs
mov
iret
push
ficom
mov
dec
jae
cwde
sti
mov
fsub
add
push
inc
sbb
(bad)
sti
in
push
aas
sbb
shr
cwde
icebp
mov
cld
aas
(bad)
fdivr
or
iret
adc
sbb
add
or
scas
mov
aam
push
jmp
xchg
mov
add
or
scas
add
repnz
aas
std
ins
arpl
cmp
add
test
sub
out
push
(bad)
fsubr
dec
mov
pop
or
clc
loope
clc
test
test
mov
rol
sbb
mov
lahf
cmp
xor
inc
enter
xor
out
pop
jl
xor
inc
(bad)
and
in
push
xchg
cwde
and
xchg
pop
xlat
mov
inc
(bad)
pop
or
xor
xor
lock
(bad)
mov
adc
clc
shr
mov
sub
les
jp
xor
adc
xor
jl
sbb
ret
scas
ror
clc
rcr
jmp
pusha
outs
push
add
sub
xor
push
scas
xchg
test
scas
jne
fnstsw
clc
jmp
add
bound
xor
sub
cmc
or
jl
push
or
mov
repnz
call
push
retf
mov
push
xchg
pop
push
mov
xor
gs
mov
ds
push
out
and
sub
int3
adc
rol
ja
stos
lods
daa
mov
pop
xor
pushf
cmp
jbe
sub
pop
pop
leave
loopne
scas
loop
cmp
jp
sub
ja
sbb
jg
in
sbb
jle
dec
xchg
retf
aam
dec
cmps
or
jns
sub
sbb
pop
cmp
dec
cli
movs
dec
mov
ds
retf
out
pop
mov
bound
xlat
cmova
rcl
daa
sub
and
cmp
fdiv
call
in
ins
mov
mov
repnz
inc
mov
sbb
int3
jno
adc
std
cmc
xchg
xor
add
add
mov
stc
scas
and
std
test
cmps
or
xor
xor
or
xchg
adc
aaa
mov
rcr
arpl
mov
hlt
fdiv
sub
dec
(bad)
mov
adc
sub
repz
and
sub
ins
push
ins
pushf
add
mov
mov
das
xor
fst
dec
or
fisttp
jnp
cmc
scas
mov
test
sub
xor
adc
jg
jno
jle
push
out
xchg
mov
(bad)
repz
leave
adc
stc
loope
(bad)
jecxz
mov
(bad)
in
adc
jae
cs
outs
or
cmp
test
cmp
mov
rcl
jmp
push
inc
xor
fisubr
push
sub
dec
lods
test
rcl
call
imul
and
adc
pop
repz
loope
xchg
iret
mov
cli
sbb
pop
jg
fiadd
and
fcom
popf
aaa
mov
jns
movs
push
mov
rep
inc
cmps
mov
xchg
pop
mov
ret
cld
inc
or
ds
push
loop
das
cs
arpl
mov
adc
sub
out
lock
and
out
add
or
aaa
push
pop
sbb
sub
dec
mov
je
and
fstp
clc
xchg
shl
mov
bound
fcom
xor
push
jne
aam
mov
push
pop
fld
sub
adc
ds
mov
xlat
sub
fisttp
inc
pavgw
out
shl
into
mov
mov
in
leave
mov
ret
test
aaa
das
and
adc
add
std
sti
aad
mov
leave
jmp
jp
loopne
xchg
loop
jge
or
pusha
xor
loopne
jp
mov
rcr
xchg
jo
pop
jae
inc
and
xor
lds
inc
je
add
push
clc
jmp
not
jb
dec
cdq
rol
pop
call
fimul
(bad)
hlt
dec
retf
xchg
inc
sub
inc
fnstsw
adc
cmp
or
jnp
leave
mov
adc
or
scas
bound
jmp
ror
or
outs
push
sti
stos
jae
arpl
das
test
lahf
daa
rcl
push
pop
adc
(bad)
and
pop
mov
sbb
es
xor
pop
dec
jnp
ror
sub
sub
frstor
arpl
repz
and
ins
mov
mov
idiv
retf
ins
mov
cld
fdiv
adc
cs
out
xchg
sub
into
(bad)
jmp
repnz
pop
int3
ins
and
movs
popa
imul
sub
sti
movs
cmp
dec
add
or
adc
nop
lds
cmc
shl
push
jno
xchg
sbb
xchg
vpacksswb
sbb
call
imul
inc
test
rcl
or
clc
mov
and
cs
in
test
cmp
or
ins
pop
xchg
cmp
inc
stos
and
xor
or
add
pusha
mov
shr
neg
idiv
pop
or
jge
pop
pop
lock
(bad)
or
pop
or
rcr
push
sub
jp
dec
imul
and
loope
sbb
je
mov
xor
nop
popa
add
mov
pop
fldenv
mov
stc
aam
pop
mov
ror
mov
inc
jo
adc
pop
add
or
fsub
push
mov
ret
js
int3
cmp
xchg
mov
fisttp
out
loopne
jbe
add
fwait
pop
dec
jp
cdq
jmp
pop
outs
mov
pushf
aam
mov
(bad)
imul
call
(bad)
and
mov
test
jne
repnz
sub
mov
jge
stos
push
jecxz
push
dec
ins
ret
xor
push
xchg
leave
pop
out
sub
repz
add
out
mov
sub
mov
mov
sbb
mov
ins
(bad)
repz
mov
movs
les
mov
xchg
ret
stos
jp
rcr
fisub
(bad)
xchg
fsubr
in
test
movs
dec
int3
movs
(bad)
and
jmp
pop
jbe
or
test
std
and
test
pop
xchg
jo
enter
push
ret
call
fild
rol
adc
test
sbb
xchg
movs
cmps
scas
inc
in
sub
cmp
sbb
in
outs
cmp
push
aas
jle
lds
push
xchg
in
in
sbb
or
popa
mov
mov
jb
aaa
imul
dec
ins
shl
loope
mov
xor
cmps
dec
pop
adc
add
in
dec
mov
out
and
add
push
mov
push
mov
jecxz
xchg
into
xor
mov
fwait
jo
outs
je
and
ret
pop
and
inc
xchg
or
stc
js
add
sub
fcomp
xor
movs
pop
cmp
pop
jb
out
stc
retf
pop
std
add
jmp
(bad)
int
mul
rol
cwde
xchg
jmp
jl
gs
nop
stos
jne
lea
loopne
or
ja
xor
xchg
jg
adc
add
adc
sbb
iret
sbb
imul
and
pop
outs
ds
inc
or
(bad)
(bad)
int3
movs
inc
arpl
dec
cdq
sti
jecxz
jb
push
mov
push
adc
cdq
imul
jmp
sbb
xchg
add
jno
xchg
ins
cmps
pop
jnp
and
sbb
call
mov
dec
push
mov
aam
enter
dec
xor
xlat
movs
sbb
test
cdq
fisttp
pop
xchg
or
mov
bound
mov
cmp
dec
sahf
ja
out
xchg
lea
jmp
movs
fdivr
inc
inc
fdivr
mov
jg
push
add
repz
push
ss
sbb
lods
xchg
je
nop
scas
daa
cmp
pusha
push
addr16
push
sbb
lahf
aam
xchg
mov
fwait
push
sub
add
retf
mov
inc
cld
sbb
popf
in
mov
add
xor
inc
fidiv
test
or
fs
mov
cli
retf
fwait
mov
pop
inc
push
or
leave
mov
xchg
mov
push
jnp
aam
pop
lods
nop
xchg
cdq
in
cmp
cmp
call
sbb
mov
rcr
retf
mov
dec
into
in
lods
sar
push
push
or
sbb
(bad)
push
adc
aas
fsubr
pop
push
pop
adc
jle
jmp
lods
mov
loopne
enter
dec
(bad)
sbb
repnz
nop
sbb
in
xchg
test
lods
or
mov
mov
in
outs
stc
sti
push
adc
jl
out
mov
imul
mov
daa
sbb
xor
jne
xor
mov
leave
cwde
mov
mov
xchg
xor
out
daa
mov
sbb
popa
sahf
sub
mov
xchg
sbb
movs
repnz
pop
imul
in
add
adc
push
mov
or
loope
dec
cmp
inc
cmp
cmp
mov
out
popa
sbb
dec
arpl
leave
cmps
push
scas
add
hlt
lea
or
rcr
test
push
in
push
and
cmp
stos
mov
jmp
cli
add
enter
outs
mov
outs
dec
jno
ins
mov
adc
sub
lds
ror
adc
mov
aaa
and
add
mov
inc
int3
sbb
pushf
jbe
adc
or
jno
xchg
jmp
lds
sub
mov
jb
pop
popa
jp
dec
adc
pop
jno
sbb
mov
and
cmc
mov
ja
pop
xchg
jle
mov
pop
out
test
add
or
pop
jne
sub
mov
sub
mov
jb
ins
dec
xchg
xor
sbb
fimul
iret
(bad)
mov
aad
mov
test
cmp
ret
xchg
sub
or
pusha
jb
sub
inc
sub
jl
sahf
dec
adc
xchg
out
shl
ins
ss
aaa
stc
mov
jecxz
idiv
jb
shl
int3
ins
test
cmps
cli
xor
nop
daa
adc
addr16
(bad)
xor
scas
shr
sub
jb
daa
push
xor
xchg
sbb
mov
jecxz
cmp
xchg
adc
scas
cmps
retf
pop
xlat
fnstcw
pop
fild
dec
mov
add
mov
std
or
(bad)
shl
iret
mov
jno
jnp
out
imul
cli
ss
jno
jg
lea
cmp
scas
xchg
enter
popf
sbb
(bad)
jo
inc
fisttp
jp
xor
fstp
shl
dec
cmps
or
xor
push
push
in
xchg
int3
popa
fwait
ins
test
mov
push
sbb
xchg
call
mov
pop
jne
test
jns
retf
cli
mov
and
loopne
ret
or
test
xor
jge
jl
je
lods
cmc
stos
jnp
mov
sub
es
push
jl
aas
fmul
mov
sub
ret
jb
jmp
jecxz
movs
cmp
add
test
and
js
jns
das
in
dec
pop
sub
in
sbb
push
mov
mov
push
ret
mov
dec
fs
adc
je
inc
rcl
sahf
cmp
fwait
mov
out
stos
mov
add
xor
pop
cwde
jle
mov
cwde
retf
or
icebp
and
stc
push
inc
mov
frstor
add
movs
mov
retf
push
or
cmps
push
push
xchg
fwait
or
cld
jmp
xchg
popf
fnstenv
dec
ror
cwde
push
cmps
imul
ins
or
add
out
loope
aad
pushf
jno
and
add
jl
xor
jns
out
push
mov
push
cmp
pop
(bad)
pushf
push
xchg
fwait
out
movs
xor
adc
scas
xchg
sbb
popf
sub
mov
(bad)
into
or
add
mov
mov
mov
test
fadd
mov
loopne
mov
bound
mov
out
add
hlt
scas
jae
xchg
xor
imul
sbb
std
rcr
push
inc
or
sbb
push
jae
jecxz
sub
iret
cwde
in
test
mov
push
aaa
(bad)
pop
mov
pop
repz
outs
jle
outs
pop
push
push
cmp
loop
(bad)
into
lea
movs
push
mov
jmp
retf
push
jo
sbb
(bad)
test
sbb
jecxz
fs
sahf
sbb
aaa
push
sub
outs
mov
pop
and
push
ss
lock
out
jmp
xor
xchg
or
push
and
leave
cwde
xchg
dec
outs
or
repnz
jae
sti
push
xlat
adc
add
mov
xor
sbb
pushf
aad
scas
sbb
mov
xchg
xor
movs
xor
mov
clc
xchg
inc
xor
and
and
fdiv
pushf
xlat
sbb
push
not
sbb
(bad)
out
sbb
sbb
cmps
call
sub
and
mov
xchg
sbb
sub
test
jle
sbb
mov
jge
jge
lods
scas
add
add
push
jmp
dec
inc
inc
aam
test
or
nop
not
mov
add
mov
mov
sbb
ss
repz
cmp
(bad)
call
xchg
shl
fmul
xchg
(bad)
lock
in
xlat
xlat
aaa
loopne
jae
or
adc
data16
repz
out
(bad)
adc
fmul
gs
stc
cwde
inc
xchg
jb
mov
or
test
fadd
(bad)
jns
jmp
mov
test
dec
stos
sub
hlt
adc
into
je
jae
lahf
outs
mov
or
int3
cdq
jno
jbe
pop
hlt
sub
mov
ror
test
iret
rcl
stos
(bad)
fisubr
inc
jmp
or
push
mov
push
aas
pop
jmp
outs
adc
sahf
outs
jmp
setno
mov
sbb
in
outs
sub
xchg
ins
(bad)
or
and
out
xchg
cmp
nop
push
ret
sub
mov
cmovge
test
imul
mov
stos
or
and
cdq
sub
or
pop
dec
push
mov
mov
lahf
push
mov
repnz
xor
jp
mov
push
rcr
(bad)
fcmovb
push
nop
enter
ret
cmp
push
ins
mov
xor
jle
loopne
xor
clc
(bad)
stos
xchg
repnz
cmps
inc
push
imul
dec
or
inc
cli
add
pop
fsub
sub
call
cmc
call
add
mov
push
and
pop
and
out
adc
lds
and
fild
push
pop
and
jle
cmp
pusha
dec
mov
mov
jnp
sub
sub
stc
fnstcw
xor
into
dec
or
rcr
inc
dec
jg
add
jne
lods
and
test
inc
dec
ins
fcom
inc
in
mov
test
mov
aaa
or
push
xchg
leave
in
inc
rol
cmp
fidiv
stc
and
cdq
push
sbb
int
arpl
or
addr16
dec
adc
hlt
and
sbb
add
add
adc
test
inc
pop
mov
jae
sub
aam
inc
sbb
cmc
(bad)
out
in
mov
pop
adc
inc
inc
sbb
lahf
or
mov
and
fcmovbe
mov
mov
pop
push
cs
hlt
xor
mov
fcomp
jge
ror
xor
mov
adc
xchg
fcomp
mov
ins
pop
xor
hlt
arpl
pop
inc
pop
dec
arpl
jo
sub
jno
inc
sbb
add
push
add
aad
outs
jmp
mov
imul
xor
pop
jno
mov
lds
inc
sar
cmp
dec
dec
cmp
pop
call
nop
push
cmp
cdq
dec
stc
fistp
out
pop
daa
pop
push
or
xchg
xchg
cmp
mov
add
aad
mov
lahf
sbb
jno
repnz
dec
ret
dec
(bad)
xor
out
mov
jp
mov
test
cmps
repz
cmc
sti
sub
push
xchg
cmc
mov
or
test
(bad)
pop
sbb
sbb
xor
jl
add
gs
(bad)
and
jmp
push
fidivr
xor
cmp
(bad)
hlt
dec
ins
push
jg
cwde
frstor
push
mov
in
push
pop
mov
mov
fisttp
cmps
std
leave
pop
mov
mov
push
test
sbb
xchg
and
pop
jle
and
out
inc
mov
add
retf
xchg
cmp
iret
mov
shl
jns
test
mov
pop
jp
jbe
mov
mov
dec
pop
dec
mov
lea
(bad)
adc
mov
push
rcr
call
gs
gs
pop
aas
and
stc
jle
lock
adc
xor
(bad)
and
out
inc
into
inc
js
sahf
movs
fdiv
adc
xor
enter
lods
inc
int3
xor
sbb
push
shl
into
aaa
repnz
loopne
ins
cmp
cmc
inc
call
pop
jmp
pop
das
dec
mov
sbb
xchg
inc
xchg
or
or
inc
jns
enter
mov
mov
push
ins
aaa
add
cdq
out
push
mov
and
cmp
dec
gs
or
adc
xor
out
out
repz
lods
ss
sar
inc
enter
out
or
cdq
dec
loopne
pop
popf
mov
adc
and
push
stos
repz
jge
push
lea
stc
adc
mov
and
scas
mov
das
cmps
xor
test
outs
gs
in
xor
or
mov
mov
mov
dec
pop
cmp
js
push
stos
adc
xchg
aam
outs
ins
xlat
pop
jg
push
out
cmps
inc
adc
hlt
adc
inc
mov
fist
fdivr
dec
std
pushf
dec
xor
jb
or
or
retf
sbb
xor
loop
sub
xor
xchg
out
jmp
jbe
shl
shl
inc
arpl
and
xchg
mov
test
stos
test
push
sub
dec
arpl
dec
and
fwait
(bad)
clc
and
add
or
arpl
ret
pop
imul
mov
pop
in
add
fmul
adc
push
mov
movs
call
pop
outs
sar
jns
scas
(bad)
in
xchg
mov
jle
sbb
jo
test
push
pop
push
enter
test
cmp
push
call
not
jl
pop
xchg
jecxz
mov
inc
lods
ror
sub
or
addr16
nop
adc
mov
pop
clc
push
jmp
into
add
int
inc
and
fs
xchg
fisubr
div
push
sub
les
adc
push
loopne
inc
aam
pop
in
and
popa
mov
push
or
jg
push
(bad)
mov
cmp
pusha
aad
jecxz
push
and
mov
scas
jmp
imul
lods
mov
mov
sub
and
into
movs
aam
(bad)
idiv
jo
fist
or
mov
add
adc
xchg
inc
dec
lea
stos
adc
xor
and
imul
push
lds
(bad)
xchg
mov
in
fbld
xchg
pushf
lock
or
pop
adc
inc
mov
outs
daa
into
int3
in
out
mov
pop
pop
das
rcr
add
dec
(bad)
retf
shr
test
and
repnz
pop
das
mov
mov
mov
retf
push
aad
imul
mov
or
sbb
xchg
adc
out
jecxz
shl
shl
xor
inc
mov
cld
jne
pop
mov
sbb
hlt
lds
and
das
lods
daa
or
stc
popa
in
or
cld
fcomp
ss
push
mov
fild
mov
cmp
mov
cmps
sbb
sti
mov
sub
popf
pop
and
xor
dec
mov
pop
pop
push
mov
bnd
mov
cmp
pop
inc
loopne
cld
aam
shl
fcmovnb
out
inc
cmc
or
push
push
cmp
cmp
aam
jl
fld
or
mov
hlt
repz
call
sbb
sub
dec
sar
jmp
xlat
sahf
adc
xchg
sub
and
mov
adc
gs
movs
sub
push
ins
adc
ss
xlat
push
adc
push
adc
cmp
(bad)
(bad)
mov
test
sbb
mov
retf
sbb
sti
push
dec
inc
das
popa
imul
mov
xchg
div
cmp
stos
shl
jns
sbb
scas
dec
or
adc
ror
jns
rcl
arpl
adc
pop
fnstsw
or
outs
pop
dec
pop
xor
shrd
icebp
xor
repnz
lds
(bad)
stc
int
add
(bad)
adc
hlt
gs
jmp
xchg
(bad)
lods
fld
push
pop
and
mov
or
retf
sbb
dec
sub
into
dec
ds
xor
cmc
mov
lock
ja
inc
push
pusha
sub
in
(bad)
psubb
ins
data16
adc
or
je
or
jno
stos
ds
inc
les
ja
mov
shl
fwait
scas
push
mov
push
rol
test
rcr
les
ror
stos
test
ret
stos
push
(bad)
lea
add
inc
xchg
xchg
loope
ret
push
fwait
cmp
push
pop
cs
adc
(bad)
not
ins
mov
dec
mov
(bad)
(bad)
jmp
loope
sub
xchg
ret
mov
jns
mov
xchg
pop
ret
in
ret
pop
jl
idiv
les
mov
mov
sbb
and
and
or
pop
add
lock
cwde
push
jmp
popa
inc
add
and
mov
mov
push
cmp
and
sub
js
push
xor
jle
sub
add
jns
pop
add
not
push
jb
retf
imul
push
gs
out
add
int
loope
in
mov
mov
jne
dec
and
call
cdq
lahf
les
sar
mov
je
ins
out
jmp
fsubr
adc
adc
xchg
repz
cmp
jae
es
std
movs
pop
push
cmp
dec
fs
or
dec
inc
adc
xchg
xor
lea
pop
call
idiv
jl
add
imul
repz
in
sbb
and
test
pushf
shr
ficomp
add
loop
mov
retf
scas
test
out
scas
mov
jle
js
sub
sti
xor
pop
sbb
aam
mov
add
xor
and
xchg
aad
jmp
add
ja
pop
mov
and
xlat
cmp
jmp
aas
in
sbb
adc
cli
imul
cwde
aaa
and
sbb
or
adc
mov
loopne
jbe
inc
sub
mov
bound
inc
cs
cwde
mov
xchg
adc
jbe
cmps
test
(bad)
xor
mov
sti
iret
mov
jge
mov
xchg
icebp
test
aaa
sub
dec
stc
jmp
adc
inc
out
or
cwde
ja
movs
js
repz
xlat
inc
add
xor
mov
ins
pop
add
icebp
jno
jle
jmp
pop
loopne
xchg
cmp
mov
jl
fisubr
xor
dec
inc
ficom
jmp
sub
leave
adc
lea
inc
(bad)
cmc
mov
mov
sub
push
xor
pop
jnp
aam
adc
mov
hlt
ficomp
jbe
inc
sbb
pop
sbb
dec
inc
push
sub
pmuludq
outs
in
pop
data16
add
mov
push
aam
lock
xchg
bound
push
retf
dec
imul
inc
or
pop
jmp
mov
and
lock
add
push
xlat
cmp
or
jns
out
adc
idiv
inc
dec
popf
daa
sahf
mov
fisttp
mov
into
jl
dec
les
xor
sar
xlat
mov
hlt
mov
clc
scas
jmp
cs
mov
cmp
add
sbb
fbstp
mov
mov
pop
jne
dec
bound
xchg
or
leave
ins
icebp
pop
xchg
mov
xchg
push
ins
out
pop
add
xchg
mov
loope
shl
pop
rcr
add
push
cmp
repz
push
in
mov
popa
rcr
mov
jl
cli
xor
sub
xor
jne
out
rol
or
rcr
push
mov
cmp
sub
jns
jno
jmp
dec
inc
xlat
loope
cmp
sub
cmp
and
xchg
popa
pop
stos
mov
ss
and
push
push
dec
and
xor
loopne
jae
or
loopne
ins
and
cmps
sbb
pop
dec
jb
mov
mov
shl
mov
cmp
cmps
pop
inc
mov
mov
fidivr
(bad)
or
dec
push
aaa
push
call
mov
adc
loop
lahf
sub
(bad)
movs
icebp
cmp
lods
cmp
jl
retf
rcr
push
jmp
cmp
fidivr
fbstp
cmc
fisub
or
les
or
sbb
sub
or
aad
xor
cmp
cmc
add
dec
add
fild
cmp
adc
data16
stos
scas
sti
jb
gs
ret
sbb
inc
jne
and
hlt
test
fdiv
xchg
popf
xor
jmp
out
lods
jl
pop
sti
(bad)
test
inc
pop
enter
mov
mov
mov
xor
rol
icebp
sar
mov
jns
push
inc
xor
repnz
xchg
cmp
inc
in
fidivr
icebp
cmp
cmp
ret
sti
sar
jl
pop
nop
push
mov
stc
loope
rol
xor
js
mov
shr
add
fst
dec
jecxz
fmul
mov
out
jne
cwde
sub
adc
lods
pop
push
(bad)
xor
mov
sbb
mov
push
into
cli
push
lods
mov
sbb
lahf
(bad)
mov
add
and
and
in
xor
test
push
pop
les
cwde
pop
cmp
jl
push
dec
or
ja
mov
and
scas
adc
cwde
dec
(bad)
push
or
sbb
dec
adc
xlat
inc
xchg
data16
mov
popa
sti
stos
bound
mov
fcomp
add
mov
cld
ins
ja
jmp
jg
cmp
and
popw
pop
ficomp
pop
adc
jns
cmp
fiadd
pop
mov
jns
ret
clc
stos
shl
leave
xchg
mov
mov
adc
pop
mov
out
mov
cmps
test
(bad)
enter
inc
sbb
push
es
and
dec
loop
aas
dec
mov
dec
ins
xor
or
clc
mov
mov
fistp
pop
dec
outs
xchg
and
pop
fisttp
sbb
movs
cmps
pop
mov
retf
dec
pop
inc
mov
adc
mov
enter
mov
js
bound
pop
dec
push
(bad)
enter
mov
ss
stos
push
dec
cmc
nop
and
and
adc
data16
adc
jns
push
jbe
dec
or
xchg
into
push
aaa
les
movs
add
ss
lds
push
pushf
imul
ins
fcom
jl
or
or
jle
ret
add
sub
push
call
mov
mov
icebp
add
in
xchg
inc
lods
(bad)
sbb
jecxz
and
sbb
ror
inc
fwait
nop
daa
and
pop
sbb
(bad)
cmc
icebp
popa
push
mov
pop
sti
dec
daa
mov
push
pop
mov
or
dec
pop
mov
loope
bound
clc
push
int3
call
mov
pop
dec
scas
mov
dec
add
test
sub
dec
or
out
mov
mov
dec
in
dec
push
inc
mov
dec
aam
enter
jp
mov
add
lahf
(bad)
and
cmp
outs
push
aad
retf
ror
ja
cmps
add
xor
and
sub
mov
pop
addr16
rol
int3
mov
cwde
mov
fwait
shl
pop
dec
inc
enter
retf
mov
inc
sahf
call
fisubr
ror
scas
movs
iret
sbb
adc
add
in
cmps
mov
rcl
dec
pop
imul
aad
fs
repz
push
xlat
push
retf
inc
data16
outs
out
cwde
in
js
lods
aas
fxch
out
pop
dec
ja
jle
jae
jge
inc
push
pop
mov
and
aam
jno
and
mov
leave
add
push
xor
cld
dec
movs
mov
xchg
mov
mov
lea
xchg
mov
ja
das
mov
add
ins
stos
fadd
pop
jbe
and
rcl
retf
xlat
movs
icebp
jo
add
aam
and
shl
inc
sahf
inc
out
jo
push
hlt
add
stc
or
enter
cmp
movs
loop
mov
fiadd
mov
lods
sbb
jae
test
mov
inc
cmp
into
mov
ins
xchg
adc
and
sbb
aaa
cmp
inc
loope
ficom
jo
add
jmp
leave
inc
jb
adc
mov
imul
fbld
cdq
aad
jne
cmp
pop
add
xchg
push
(bad)
mov
mul
aam
pop
in
cmps
pop
arpl
xor
movs
aaa
leave
sub
loop
mov
lea
pop
into
outs
xchg
je
cwde
retf
bound
mov
sbb
mov
pusha
cmp
push
push
(bad)
scas
inc
sbb
call
xchg
jmp
mov
xor
inc
jb
movs
jge
or
pop
cli
inc
(bad)
push
sbb
cmp
push
stos
fwait
dec
fwait
xchg
(bad)
adc
call
lds
dec
cmp
and
ds
jbe
and
push
out
ret
push
in
dec
sar
les
(bad)
aad
xor
jp
ficom
sti
dec
(bad)
and
push
pop
cs
dec
ja
pop
loop
and
scas
jmp
aas
add
nop
push
cmp
mov
pop
icebp
cmps
into
jo
cmp
jmp
stos
pop
mov
and
and
or
push
adc
fld
mov
and
ret
pop
not
stos
cld
jmp
in
arpl
dec
inc
in
pop
mov
or
sub
bound
mov
pop
mov
shl
jae
xor
adc
xchg
inc
inc
jno
xchg
daa
pop
jl
(bad)
pop
xchg
iret
xchg
mov
mov
ds
mov
or
call
mov
add
stos
fwait
mov
je
cs
jle
call
jg
jle
sbb
lock
ret
fs
xor
and
ins
and
pop
in
mov
(bad)
adc
das
mov
or
mov
and
imul
popf
xchg
xchg
fldpi
ins
and
push
aam
les
push
out
movs
stos
sar
test
pop
pop
push
mov
push
aas
(bad)
test
push
sub
aad
adc
pop
(bad)
stos
rcr
xlat
sub
cli
xor
clc
jl
cmp
xor
mov
and
xor
xchg
sti
adc
pushf
iret
rol
fild
xchg
ret
and
lds
adc
enter
lahf
ja
(bad)
and
ins
test
sbb
xchg
adc
scas
in
loop
add
pop
mov
dec
push
jns
push
mov
mov
es
jo
call
out
xor
inc
or
xor
mov
out
and
push
mov
int
(bad)
sub
xchg
mov
sub
sbb
and
adc
test
dec
clc
rcl
push
xchg
mov
adc
cmp
mov
or
push
jle
cmp
stos
mov
js
add
or
in
gs
fsub
lock
and
sbb
cmp
mov
push
cwde
jg
aas
faddp
mov
or
aas
xor
test
cs
loopne
call
cmp
loop
mov
dec
nop
or
xor
add
dec
or
mov
dec
xor
xor
adc
loop
loope
sbb
lock
xchg
les
sbb
mov
sbb
aam
dec
rcl
adc
les
fldcw
and
in
inc
mov
add
rol
lock
jns
iret
push
je
mov
cwde
ins
ds
add
out
mov
push
fdiv
xchg
jns
ja
ror
pop
loopne
int
mov
fidiv
cmp
cmp
movs
push
data16
and
jle
cli
xchg
inc
push
push
lahf
xchg
jge
pop
out
pop
pop
test
mov
dec
sub
push
out
xor
push
mov
push
cmp
popa
std
pop
mov
stc
leave
push
ds
pop
cdq
packssdw
movs
jg
stos
push
inc
fwait
outs
sub
inc
cdq
pop
adc
ss
imul
fisttp
inc
cmps
ficomp
pusha
or
jae
adc
(bad)
nop
cmp
lock
cmps
and
fmul
es
aad
sbb
or
fdiv
jbe
sub
sub
jns
and
mov
repnz
push
ins
daa
fist
and
(bad)
inc
sbb
push
repnz
outs
aad
sub
adc
cmp
pop
or
arpl
add
fdivr
pop
fbstp
into
mov
pop
(bad)
sub
cmp
dec
dec
scas
ret
dec
popa
mov
cwde
jg
jns
xchg
push
mov
in
pop
in
xchg
inc
sub
xchg
int
xor
fcmovnbe
stos
xor
lods
ss
cdq
scas
add
sub
mov
fs
sub
je
cld
dec
xor
push
imul
test
cwde
popa
mov
(bad)
aad
stc
and
xor
mov
mov
cmp
lea
and
(bad)
mov
mov
repnz
stos
mov
jmp
repz
(bad)
or
xor
jg
cmp
xchg
sub
mov
pop
jmp
adc
or
xchg
cmp
jno
push
scas
or
push
jno
call
fist
sti
popf
idiv
aas
jg
enter
jg
xchg
outs
and
push
lods
sub
xor
push
cmp
in
ss
or
mov
cwde
ins
enter
ds
cmp
adc
or
dec
sbb
push
das
popa
add
stos
daa
shl
mov
jo
hlt
sub
sub
call
mov
xor
push
cmps
neg
lock
sbb
adc
push
sbb
int
scas
sbb
aas
and
mov
adc
push
adc
sub
pop
in
cmp
cmc
or
frstor
or
sub
sub
clc
and
cmp
cmp
fist
xor
inc
lahf
lahf
or
in
int3
adc
gs
inc
movs
inc
aad
pop
or
loope
ja
retf
fidivr
loope
into
je
jns
int
and
inc
je
mov
xor
inc
fs
adc
ins
cmp
jle
xchg
push
sub
mov
repnz
push
fcom
cwde
cmp
aam
sub
retf
sub
aaa
leave
dec
mov
jmp
fisttp
add
pop
outs
add
cmp
sti
daa
ret
sub
xchg
aas
inc
ror
mov
test
cdq
and
inc
and
cdq
in
adc
mov
cli
xor
jmp
push
lahf
dec
addr16
dec
inc
fmul
pop
fidivr
push
xchg
sub
in
or
pop
mov
aam
and
fidivr
cld
inc
sti
sbb
add
fisubr
xor
fucom
retf
test
and
shr
(bad)
nop
fdivr
push
mov
in
lods
inc
test
add
pushf
call
arpl
cmps
mov
ret
rcr
pop
idiv
push
xchg
mov
mov
scas
loop
mov
outs
mov
mov
push
or
(bad)
jmp
fwait
or
cmp
les
adc
ja
loopne
jp
outs
cdq
jno
dec
jle
jnp
cli
jl
xchg
mov
ret
mov
and
repnz
and
sub
fdivr
sbb
xchg
pop
jle
or
xor
inc
jae
imul
mov
clc
(bad)
mov
loop
xchg
mov
inc
dec
sub
rcl
call
mov
add
ficomp
adc
sar
fcom
push
test
xchg
mov
(bad)
adc
sub
test
sub
inc
jno
(bad)
jl
das
call
clc
cmps
jmp
cmc
inc
sub
push
dec
xor
pop
int3
cmps
mov
ror
clc
loopne
ret
adc
pop
(bad)
ss
adc
or
jns
enter
popf
push
repnz
push
scas
and
mov
test
cli
ins
jmp
dec
inc
(bad)
jns
mov
and
or
dec
xchg
sub
cmp
addr16
mov
int3
sub
pop
(bad)
or
popf
mov
xchg
push
adc
mov
ins
mov
adc
fistp
pusha
or
retf
(bad)
test
aaa
loope
jae
int3
xor
retf
ds
cmc
outs
(bad)
loopne
aad
adc
aaa
sbb
inc
imul
mov
sub
jecxz
push
sbb
pop
jmp
inc
inc
cmc
pop
ins
and
jo
popa
ss
std
jmp
jecxz
cmp
not
or
pop
daa
mov
or
xchg
push
mov
les
push
add
dec
(bad)
out
jmp
and
dec
inc
sbb
inc
pop
mov
test
dec
bnd
fdiv
inc
xchg
inc
scas
jb
jecxz
jb
sbb
nop
dec
clc
xor
jl
push
adc
or
and
fimul
loopne
and
adc
ins
out
jae
clc
jno
dec
call
aaa
cmp
sbb
(bad)
cmps
cmps
xchg
jno
jno
outs
cld
dec
loope
into
rol
pop
in
in
retf
mov
push
adc
push
ret
movs
std
ins
cmc
ja
stos
jmp
std
in
or
loopne
adc
inc
sub
ret
pushf
clc
xor
imul
or
out
aad
cld
test
aad
fsub
push
cmp
test
and
pop
pop
loope
mov
sbb
mov
pop
into
mov
fdivr
in
sub
push
pop
jmp
inc
mov
aad
sbb
inc
stc
test
mov
scas
lods
adc
jge
cli
sub
sbb
sub
xchg
stc
mov
fild
add
icebp
loopne
call
call
ins
test
inc
push
cmc
fist
jns
cmp
cld
jno
jnp
pop
test
ret
out
dec
lods
pop
jmp
push
add
push
fcmove
xchg
neg
repz
sub
and
mov
push
stc
xchg
xchg
push
and
mov
or
xchg
leave
ret
in
sub
sbb
cmp
icebp
(bad)
(bad)
enter
mov
sbb
pop
xor
repnz
cmc
outs
popf
cmp
jnp
dec
xchg
not
mov
icebp
(bad)
pop
cdq
jno
inc
mov
scas
xor
push
mov
pop
mov
fldcw
mov
out
cmp
mov
pusha
out
repz
push
popa
add
adc
stc
mov
dec
dec
aas
mov
inc
or
test
inc
mov
div
data16
loopne
dec
aam
movs
push
mov
or
sbb
shl
jne
mov
xor
mov
pop
mov
ja
xlat
adc
pop
fstp
fs
lahf
mov
les
sub
xchg
cdq
jmp
neg
lds
call
sub
(bad)
(bad)
xor
dec
daa
adc
xor
lods
mov
arpl
mov
push
jae
mov
rol
out
cmp
lahf
scas
pop
dec
scas
std
xchg
out
cmps
es
fs
out
push
sbb
(bad)
mov
(bad)
lea
mov
dec
aad
cmp
and
pushf
sahf
jmp
inc
arpl
mov
ja
out
sbb
mov
stos
xchg
stc
dec
mov
xor
jp
mov
int3
lds
lea
retf
jne
xchg
fwait
sbb
leave
in
std
fsubr
(bad)
xchg
mov
push
loop
cmp
gs
inc
pop
jmp
loope
jg
inc
jno
mov
in
js
retf
or
mov
sbb
fwait
pop
or
or
xchg
xchg
aad
xor
scas
mov
arpl
adc
adc
ret
mov
push
imul
sub
enter
xor
test
xor
or
and
loopne
mov
adc
adc
stos
mov
cli
ret
fwait
sbb
imul
rcr
retf
xchg
lods
stos
mov
or
fnstsw
jmp
mov
dec
(bad)
mov
movs
mov
sbb
inc
inc
stos
test
and
xchg
js
or
in
in
stos
adc
movaps
mov
dec
bound
in
and
sub
and
xchg
mov
retf
fadd
adc
das
add
jnp
mov
adc
arpl
mov
and
adc
fldcw
cmp
nop
sbb
jg
out
add
(bad)
je
or
jnp
test
(bad)
rcl
shl
(bad)
mov
push
cmp
inc
jle
retf
sub
push
xchg
cs
sbb
mov
sbb
jecxz
fwait
enter
dec
xchg
test
or
scas
cmp
mov
or
and
ss
rep
pop
pop
inc
cmp
lock
push
bound
lods
jno
ror
test
jle
adc
bound
jmp
push
fiadd
xor
test
inc
arpl
in
mov
mov
cld
fadd
pop
cld
movs
mov
fs
in
sar
inc
adc
jbe
adc
sti
sbb
test
jns
mov
ds
jmp
pop
add
aaa
sbb
ja
mov
xor
push
push
jbe
sub
jnp
sbb
mov
movs
movs
xchg
mov
sub
cld
lahf
add
mov
stos
cmps
daa
jle
pop
popf
sub
xlat
(bad)
pop
mov
xchg
lods
aad
daa
pop
and
into
fwait
push
adc
lock
out
lock
jge
jmp
mov
(bad)
js
fisttp
idiv
aad
push
jle
fild
or
fwait
adc
add
xchg
xor
or
and
int
out
outs
add
push
jae
jmp
les
push
popa
jp
fcom
pop
sti
inc
scas
stos
data16
jb
cld
arpl
inc
adc
push
xchg
ss
fdiv
sbb
outs
mov
test
(bad)
or
xchg
jae
lea
push
cmp
mov
fincstp
mov
frstor
imul
outs
aam
xor
fcmovne
mov
ins
sub
loope
or
sbb
movs
retf
js
stos
loopne
xor
adc
jge
cmp
jle
adc
and
jbe
pop
stos
jbe
push
push
inc
push
or
xor
sbb
push
pop
jo
jbe
jne
js
mov
mov
xchg
ret
enter
dec
add
pusha
push
(bad)
jmp
cmp
push
push
jecxz
xor
fwait
add
leave
sbb
lea
data16
xchg
pop
dec
and
pop
xchg
xor
shr
mov
xor
jmp
es
loop
sub
lods
ins
js
in
cmp
jg
(bad)
fidivr
cmps
push
mov
inc
in
jns
mov
jp
mov
stos
add
loopne
ss
mov
ror
sub
arpl
mov
sub
(bad)
push
cmp
icebp
clc
mov
pop
mov
(bad)
jle
(bad)
test
arpl
mov
push
adc
push
adc
mov
push
sbb
xchg
mov
daa
call
lahf
in
sub
jp
adc
push
loop
inc
sbb
leave
push
jbe
imul
nop
dec
out
cmps
in
pusha
inc
sar
cwde
hlt
les
div
test
inc
xchg
jns
mov
push
(bad)
pop
jno
out
stc
cli
in
repz
ror
cmp
mov
into
mov
mov
xchg
dec
leave
or
dec
inc
imul
int
xor
int3
scas
jg
in
pop
pop
lods
cwde
fsub
mov
in
xlat
jg
pop
sub
dec
shl
dec
ret
mov
dec
or
dec
repz
jecxz
fidiv
pop
mov
push
loopne
add
aaa
push
adc
xchg
cmc
test
push
dec
dec
push
jmp
push
and
sub
scas
cdq
xor
dec
inc
pop
jmp
inc
jne
loopne
sub
ror
jns
or
lock
(bad)
aaa
mov
sub
(bad)
inc
mov
fld
dec
add
push
xchg
enter
xchg
and
xchg
inc
rcr
shl
adc
xor
and
xlat
test
call
dec
test
cmp
jae
jmp
add
inc
add
lea
hlt
rol
dec
add
push
lds
sahf
cwde
dec
rol
and
cdq
and
in
imul
sbb
xchg
(bad)
sbb
in
push
add
int
add
in
sar
cmp
inc
in
adc
inc
(bad)
push
fild
int3
dec
and
sbb
cmp
sahf
mov
outs
lahf
js
xor
shl
mov
or
inc
adc
leave
sub
xchg
jge
mov
sub
adc
xchg
and
mov
arpl
mov
mov
adc
push
lea
movs
daa
inc
stc
mov
js
(bad)
sbb
aas
lods
adc
rol
in
jne
pop
scas
and
je
mov
sbb
(bad)
mov
add
pop
jg
hlt
dec
in
dec
mov
sub
xchg
inc
push
jmp
push
retf
adc
push
xor
mov
ins
dec
sub
sti
outs
rcl
add
add
lahf
sbb
jnp
jmp
rcr
(bad)
test
and
fs
sar
push
xor
test
cmp
ins
nop
mov
hlt
lods
push
dec
xchg
inc
call
mov
test
and
and
cmp
push
xor
(bad)
mov
add
cmc
mov
pop
add
jmp
movs
or
cwde
and
(bad)
cwde
(bad)
mov
pushf
mov
pop
repnz
out
cmp
jl
jbe
pop
ja
pushf
aaa
aaa
and
(bad)
xchg
movs
xlat
lea
mov
push
cmp
fwait
mov
cmp
or
fiadd
mov
push
stc
xchg
mov
push
sbb
mov
xor
sbb
adc
hlt
imul
xor
mov
ja
mov
test
scas
out
pop
and
(bad)
addr16
stc
popa
shl
daa
loop
cld
test
xchg
fldenv
or
inc
in
adc
pop
outs
scas
rcr
cmp
ins
ss
or
push
push
loope
xchg
in
mov
jne
daa
les
ins
fdivr
test
inc
dec
mov
shl
in
mov
lock
inc
stos
inc
ins
or
sbb
daa
loop
xchg
xchg
gs
sub
push
inc
xor
and
aaa
push
xor
pop
shl
ds
cmp
pop
mov
dec
iret
cmp
movs
jno
mov
popa
jns
mov
push
outs
pop
push
mov
shr
push
inc
aam
sub
out
xchg
mov
lea
xchg
sahf
dec
cld
add
mov
scas
or
mov
sbb
push
adc
or
call
sbb
dec
adc
nop
out
je
icebp
aas
out
in
(bad)
lahf
lahf
push
retf
pop
clc
inc
pop
movsx
adc
test
cdq
rcr
xchg
jo
int3
call
fisttp
std
mov
int3
fidivr
sahf
in
add
dec
push
in
push
test
or
dec
pop
mov
mov
data16
call
jb
(bad)
dec
movhps
push
mov
cmp
dec
stos
pop
cmc
xchg
mov
jmp
pusha
scas
xchg
lock
jbe
inc
push
pop
adc
xchg
mov
loope
cmp
mov
inc
sbb
data16
dec
loopne
lods
les
xchg
or
(bad)
pop
push
in
cwde
jecxz
inc
outs
pop
jmp
outs
xor
mov
(bad)
retf
imul
mov
inc
mov
outs
dec
or
cmc
out
mov
lods
add
cli
mov
outs
fild
dec
jp
inc
imul
push
cmp
pop
mov
cwde
xchg
xor
out
(bad)
(bad)
(bad)
adc
call
std
mov
cmps
mov
jne
and
movs
shl
adc
sub
sub
(bad)
(bad)
es
out
push
jle
add
mov
adc
xchg
inc
scas
shl
pop
xchg
mov
shr
dec
jg
add
jl
pop
(bad)
daa
pop
movs
jbe
shr
fnstenv
fdiv
cmp
jmp
add
pop
(bad)
sbb
mov
lahf
dec
in
lds
out
pushf
xchg
pop
mov
inc
into
movs
stos
mov
and
and
fs
es
pop
movs
mov
aam
xor
ret
or
enter
aam
mov
jnp
gs
cmc
mov
popf
ret
push
std
xchg
mov
sar
dec
xchg
cmp
xor
push
nop
push
popf
icebp
mov
neg
jle
movs
adc
out
push
ror
aad
iret
clc
repz
or
xchg
add
push
in
push
call
and
xchg
aaa
push
jge
and
shr
cmps
popf
(bad)
pop
mov
std
push
(bad)
adc
fs
and
mov
sub
lock
dec
in
iret
mov
mov
mov
mov
mov
add
dec
fld
cmp
ror
mov
repnz
das
dec
iret
mov
mov
jnp
iret
mov
out
jle
pop
scas
mov
xor
mov
inc
mov
xchg
movs
mov
sub
scas
inc
retf
ins
ret
xchg
cld
in
fs
pop
push
xchg
adc
imul
xor
cwde
mov
sbb
jl
cmp
sub
or
xor
cmp
ror
loop
adc
dec
pusha
jo
shl
rcr
call
ret
test
lods
adc
lods
push
fs
inc
pop
push
jb
leave
cmp
mov
adc
and
xor
inc
dec
retf
fldcw
dec
scas
jo
int3
loop
adc
fwait
outs
pusha
loopne
mov
jbe
test
mov
aam
adc
cld
mov
dec
mov
(bad)
sub
into
popf
int
in
cmps
pop
cmps
aam
and
(bad)
aaa
into
xor
fisub
sub
repnz
sbb
push
iret
mov
mov
inc
inc
or
and
inc
push
out
fsub
ja
arpl
jnp
or
add
das
mov
cmp
push
bound
pop
in
xor
aaa
and
or
stc
and
fadd
inc
imul
outs
push
rol
mov
scas
push
mov
dec
xchg
mov
adc
lahf
cmp
fistp
sub
iret
loop
retf
pop
mov
mov
mov
aaa
inc
rcr
xchg
dec
jmp
add
mov
fs
pop
stos
pop
stos
loopne
adc
lahf
arpl
or
add
int3
jae
popa
out
(bad)
sub
xchg
enter
xchg
mov
std
lea
sub
cs
push
nop
xchg
shr
leave
lods
xchg
dec
sbb
je
xor
lods
or
adc
push
ret
mov
pop
int3
mov
inc
and
ret
movs
mov
test
out
jne
int
lock
sahf
daa
lahf
aas
sbb
mov
xchg
or
mov
shr
cmps
(bad)
dec
dec
clc
in
and
pop
xor
inc
jae
in
bts
xor
jecxz
cmp
cmp
xchg
pop
fisttp
repnz
or
pop
or
ins
jbe
or
popa
scas
(bad)
xor
sub
cmp
mov
sub
mov
out
retf
xor
ret
popf
outs
or
sbb
jo
sbb
int3
je
cmps
sub
ss
sbb
xchg
repnz
mov
popf
add
lods
pop
inc
fcomp
cld
mov
or
jnp
xchg
inc
mov
aaa
sub
or
jp
lahf
cmp
fsub
jno
(bad)
ins
push
nop
jns
sbb
or
mov
repz
stos
retf
jle
push
fucom
push
aad
stc
dec
xor
dec
enter
mov
add
add
jl
pop
(bad)
not
sbb
cdq
mov
mov
cmp
push
pop
pop
xor
je
cld
test
or
xor
push
aam
retf
cmp
inc
mov
cmp
xchg
cmp
icebp
push
adc
or
dec
into
or
adc
pop
cmp
ds
xchg
repz
lock
into
es
xor
mov
and
loopne
call
sub
adc
lods
call
inc
shl
(bad)
test
mov
mov
push
mov
popa
cmp
mov
dec
leave
inc
sbb
inc
aaa
sbb
jo
push
sbb
leave
add
push
inc
out
cs
adc
push
mov
les
jnp
xchg
add
jns
pop
push
xchg
dec
cdq
hlt
inc
imul
rol
mov
sar
jmp
addr16
mov
mov
jmp
jg
aam
xchg
pusha
xor
sti
and
sar
jb
mov
cdq
cwde
fstp
aas
scas
(bad)
mov
mov
inc
fist
jmp
cli
inc
xor
daa
imul
push
in
mov
push
push
add
icebp
add
push
out
xchg
push
mov
inc
mov
sub
js
in
(bad)
pusha
jae
je
(bad)
enter
fstp
mov
ss
or
inc
push
xchg
in
inc
ss
int
inc
add
cmp
mov
outs
sar
movs
lods
mov
fild
lahf
dec
fsubr
test
add
in
out
jp
mov
mov
(bad)
(bad)
aaa
fstp
jo
mov
scas
sbb
inc
sti
cmp
dec
fiadd
mov
pop
jle
or
xchg
shl
mov
and
int3
ror
pop
mov
and
ja
xlat
imul
or
mov
mov
jae
push
and
cmp
cmps
adc
add
mov
dec
sub
fnstenv
and
in
xchg
in
sub
jmp
xor
out
aaa
out
dec
mov
pop
je
cli
ja
cmps
stos
int3
shl
(bad)
neg
jns
cmp
sbb
push
jo
mov
ins
pop
push
and
or
adc
xchg
pop
neg
push
mov
out
lds
out
push
inc
pop
push
lock
pusha
cmp
jmp
mov
pop
push
cmp
cs
jmp
jne
mov
test
in
mov
std
(bad)
out
and
clc
je
lods
inc
mov
jge
pop
mov
xchg
jno
dec
lods
sahf
inc
(bad)
out
xor
mov
mov
push
and
push
out
push
aas
aas
pop
cli
mov
push
sub
cmps
dec
imul
(bad)
cs
fild
(bad)
int3
sub
mov
cli
cmps
loope
pushf
sbb
gs
dec
mov
sbb
xchg
arpl
mov
add
xor
xlat
retf
cli
and
sar
or
xor
imul
xor
mov
pop
push
stc
ds
inc
xchg
jmp
nop
adc
test
aas
adc
aas
cmp
cmp
push
cmp
mov
push
in
xchg
or
push
mov
ffree
fwait
jmp
dec
loope
sbb
retf
rol
(bad)
mov
mov
les
loope
mov
mov
cdq
fmul
scas
in
dec
arpl
and
push
or
adc
(bad)
pop
mov
pop
mov
sub
inc
icebp
and
jmp
das
add
outs
imul
lods
(bad)
cmc
jle
lea
cmps
jp
inc
push
shr
mov
cmp
and
retf
mov
mov
or
in
sub
ins
inc
mov
hlt
push
dec
adc
retf
jmp
and
or
fist
pop
in
mov
mov
(bad)
xor
imul
or
sahf
sbb
jle
out
mov
fidivr
popa
cmp
dec
push
fisubr
ds
xlat
inc
pop
jmp
lods
js
sahf
bound
mov
xchg
pop
or
jbe
xor
push
ret
mov
pop
xor
dec
adc
aad
loop
neg
fist
in
sub
std
sub
cmps
fnstcw
fs
jecxz
fdiv
ja
jp
lock
mov
rcl
imul
cmp
outs
inc
jle
(bad)
mov
dec
add
inc
push
mov
inc
xchg
pop
sbb
and
jle
mov
jne
das
dec
stos
or
mov
stos
add
pop
fadd
mov
call
rol
push
stos
jmp
pushf
aam
cmp
int
test
icebp
stos
out
mov
out
mov
les
or
pop
lods
inc
add
fldenv
pushf
int3
(bad)
add
pop
in
fimul
pop
leave
and
jnp
pop
cmps
inc
cmp
cmps
test
test
sbb
push
adc
or
jle
sub
scas
nop
and
inc
sub
pop
pop
mov
mov
sub
neg
xchg
jge
add
cmps
les
sti
mov
xchg
fcomp
mov
cmp
pop
mov
inc
adc
sub
cdq
shl
dec
movs
jp
cmp
cmc
jp
mov
outs
inc
scas
sbb
call
cmps
popa
in
and
arpl
rol
test
sbb
in
and
fmul
jp
dec
and
push
int3
ror
push
in
leave
imul
test
fisubr
mov
sahf
mov
jl
mov
cwde
xor
sbb
leave
add
sti
into
bound
int3
cmp
xlat
pushf
leave
popf
repnz
sbb
push
mov
fwait
loopne
loope
and
push
jno
ins
jbe
arpl
popa
(bad)
jecxz
data16
popa
sbb
xchg
addr16
clc
pushf
cmps
xchg
xchg
push
test
xor
mov
dec
fmul
out
addr16
sbb
adc
test
out
fisubr
adc
jl
push
cld
add
jle
dec
lds
dec
inc
fdiv
lods
test
sti
mov
mov
cmps
rol
push
jo
pop
mov
cmc
adc
pop
mov
push
shr
test
inc
sub
xor
ror
sbb
mov
cmp
or
and
dec
dec
or
inc
push
sahf
mov
mov
aas
push
xchg
mov
ret
outs
sbb
test
push
adc
sahf
nop
and
xchg
rcl
and
mov
dec
add
jmp
pop
mov
or
cmp
sbb
xchg
pop
pop
out
popa
test
sbb
push
not
jl
inc
or
dec
xor
in
mov
fmul
and
add
(bad)
mov
out
sub
inc
dec
and
shl
sub
add
or
stos
jp
mov
cwde
mov
in
aam
cli
inc
rcl
jmp
jae
mov
push
stos
aam
add
(bad)
jl
fldcw
jne
mov
and
cld
imul
inc
sahf
out
jmp
sbb
int
and
mov
sub
jp
mov
mov
xchg
fadd
adc
movs
xor
xchg
dec
mov
jl
popa
mov
inc
sbb
jl
(bad)
aaa
or
gs
adc
cmp
sub
push
push
adc
popf
mov
sub
push
mov
pop
mov
shl
int3
js
xor
or
xor
add
ds
push
std
imul
(bad)
push
std
in
adc
mov
sbb
xchg
cmp
xlat
jg
mov
dec
in
mov
movs
mov
dec
daa
cmp
add
ja
lods
fnsave
add
add
mov
pop
push
mov
dec
inc
jae
push
adc
jp
in
push
lds
out
aad
das
pop
mov
fdivrp
fld
pop
push
dec
add
das
jmp
or
cwde
add
in
cmp
lods
xlat
repz
hlt
add
popf
push
push
sahf
push
cdq
lds
jmp
jecxz
mov
mov
lods
xchg
cmc
aad
push
pop
movs
out
mov
mov
test
dec
or
ret
gs
das
ret
sbb
fisubr
add
rol
das
aad
cdq
pop
pop
dec
es
call
xchg
out
ds
daa
push
dec
sbb
loop
mov
stc
xor
popa
jns
cmp
pop
mov
add
(bad)
dec
cli
clc
(bad)
in
and
push
in
or
sub
out
push
cmps
mov
idiv
jg
in
pop
mov
(bad)
std
je
push
cmps
cmp
test
adc
cmps
push
into
dec
xchg
sub
into
sbb
lods
push
(bad)
js
push
stos
sub
mov
cmps
test
movs
daa
pop
jb
sti
xchg
inc
and
les
jecxz
inc
sub
ds
shr
ins
or
adc
adc
cmp
movs
cmp
cld
loope
xchg
shl
jae
mov
inc
loopne
jge
sub
add
sub
stos
sub
addr16
fst
xlat
fidiv
stos
leave
(bad)
adc
sub
cmps
lods
inc
fcom
or
popa
iret
cmp
push
shl
mov
and
xlat
stos
pop
pop
call
mov
jbe
and
mov
pop
(bad)
sbb
xlat
add
iret
lea
mov
fdivr
retf
cmp
inc
or
mov
mov
loop
inc
and
repz
fs
inc
jns
(bad)
pop
dec
fs
push
in
lods
or
jmp
pushf
mov
inc
into
(bad)
iret
and
lock
hlt
(bad)
fisttp
sub
mov
pop
xor
cwde
dec
std
inc
jae
add
push
inc
adc
push
inc
cdq
lods
push
xchg
inc
(bad)
call
push
retf
movs
mov
sub
dec
mov
stos
in
pop
xor
out
cs
(bad)
ret
fstp
jnp
xchg
pop
out
lgs
push
push
jnp
outs
retf
xchg
ja
outs
pop
xchg
jno
and
xchg
loope
clc
and
add
(bad)
outs
jp
(bad)
std
ret
push
or
sub
inc
call
xchg
xchg
pop
jle
jg
dec
cmps
inc
push
sbb
inc
gs
or
jno
mov
inc
jg
(bad)
and
ja
or
xlat
std
add
data16
pop
inc
push
jmp
out
or
vmovups
lahf
push
inc
push
fstp
cmp
ins
or
adc
je
(bad)
repnz
mov
mov
dec
pusha
mov
adc
gs
das
mov
in
pop
mov
mov
les
cli
lock
xchg
imul
(bad)
pop
fucomip
xchg
xor
mov
pop
jl
mov
pusha
cmc
arpl
add
cdq
push
push
lods
mov
cmps
adc
(bad)
jle
pop
das
ret
xchg
fistp
dec
push
ret
mov
add
push
into
add
ins
dec
shr
aas
dec
sub
test
lea
sbb
repnz
frstor
aad
push
arpl
or
loope
mov
push
lods
dec
aam
xchg
jmp
retf
and
xchg
sbb
retf
adc
xchg
cwde
pop
jmp
ror
in
je
or
fst
daa
jle
jmp
pop
sti
fild
test
and
and
cmc
leave
xor
cdq
sub
add
arpl
dec
jo
data16
rcl
xchg
xor
and
sbb
push
cmp
jae
rcl
xor
fld
or
(bad)
mov
pop
leave
mov
push
aas
jmp
mov
test
and
jecxz
pop
push
shr
rcl
sbb
xor
(bad)
mov
cdq
mov
aam
push
test
cmp
push
icebp
rcr
leave
aam
fcom
jmp
pop
lock
sub
and
inc
jae
lds
pushf
cmp
xchg
lahf
inc
(bad)
fmul
(bad)
enter
(bad)
adc
mov
fchs
inc
es
mov
adc
jle
dec
jno
and
jnp
xor
adc
sub
cmp
sbb
sub
jo
mov
pop
daa
shr
popf
sub
adc
push
pop
or
mov
push
cmps
jmp
or
dec
push
cmps
sbb
lea
add
in
sbb
and
push
fcomp
jo
es
jmp
sbb
outs
xchg
int
ins
hlt
fsub
repnz
dec
xchg
ret
daa
pop
loop
jns
inc
sub
xor
sub
xchg
sbb
int3
retf
mov
(bad)
test
imul
sbb
mov
cs
scas
retf
dec
inc
mov
mov
jbe
sbb
cmp
and
add
xor
ret
fs
adc
neg
sub
jmp
dec
jne
mov
push
out
xchg
adc
out
push
call
sti
outs
xor
mov
std
pop
mov
inc
mov
fmul
jl
mov
iret
scas
jne
pushf
xchg
inc
sti
icebp
cwde
mov
call
cmps
ss
repz
ja
add
and
or
push
addr16
out
aaa
sub
pop
aaa
sbb
aaa
in
leave
adc
repz
add
or
leave
rcl
jnp
(bad)
xlat
enter
jp
dec
rol
movs
hlt
daa
lds
add
cmp
mov
dec
dec
lgs
mov
lea
dec
shl
in
lahf
xchg
mov
popa
sbb
dec
sti
inc
mov
inc
outs
mov
cmp
sbb
movs
int3
jmp
inc
hlt
pop
add
jne
(bad)
(bad)
adc
cli
test
jge
mov
sbb
(bad)
mov
xchg
pop
pushf
fimul
inc
sbb
mov
neg
ja
jbe
call
daa
dec
fisttp
repnz
add
data16
mov
out
xchg
imul
sub
sar
in
adc
xchg
jno
sbb
(bad)
in
pop
loop
test
stos
add
sbb
ds
fld
jo
sbb
shl
(bad)
aam
adc
jmp
and
push
adc
imul
neg
jnp
pop
sbb
jne
cmc
ror
pop
cmp
int3
out
inc
jmp
xor
add
out
and
imul
dec
out
mov
pop
test
dec
sub
or
pushf
jmp
lods
ja
inc
in
xchg
scas
jb
(bad)
and
pop
inc
mov
mov
add
add
cmp
sahf
jmp
movhps
clc
sub
cmps
pop
repz
push
dec
in
je
xchg
jbe
aaa
mov
ss
mov
push
lods
sbb
cmps
pop
sbb
jne
sub
pusha
sbb
icebp
ins
movs
inc
gs
and
inc
xchg
sub
xor
mov
sbb
inc
dec
inc
std
push
push
sar
push
add
sub
pop
popa
inc
or
push
pop
mov
xor
(bad)
loopne
pop
and
xor
shr
push
rcl
loope
sahf
jle
mov
loope
push
daa
sub
bound
outs
movs
hlt
push
xlat
je
pop
mov
jmp
daa
sahf
rcr
out
mov
sub
mov
pop
ret
stos
int
adc
sahf
push
ja
ficom
ins
mov
(bad)
addr16
nop
jmp
test
daa
cmc
mov
add
jo
inc
out
xchg
mov
and
or
ins
mov
adc
fxch
dec
jge
sti
lds
cmps
fisub
cwde
cmp
jno
cmc
pusha
adc
in
jp
shl
inc
mov
aaa
int3
(bad)
mov
pushf
popa
mov
pushf
inc
mov
dec
loopne
cmp
add
retf
(bad)
sbb
jb
mov
sbb
stc
mov
rol
fild
pop
jo
cli
lea
sub
add
and
fwait
scas
sar
pop
(bad)
es
and
xor
leave
mov
cdq
test
scas
test
mov
or
out
call
lock
out
and
sub
es
ds
scas
ret
fnop
repz
mov
xchg
xchg
fstp
or
cmp
shl
es
loopne
cmp
adc
jp
xchg
(bad)
shl
popa
loope
(bad)
stos
ficomp
div
push
push
ror
or
dec
jb
push
test
pop
cmp
jbe
out
cmps
cmp
ins
dec
test
sub
cmp
neg
push
neg
dec
movs
jge
push
lods
dec
adc
adc
scas
daa
adc
rol
and
xchg
das
imul
cmp
mov
xor
loopne
push
xchg
retf
lea
mov
jl
addr16
xchg
mov
popf
dec
cmp
or
and
mov
jb
and
jmp
jmp
in
or
shl
hlt
pop
mov
lods
and
jmp
sti
test
imul
push
cmps
cmp
jmp
adc
push
ins
movs
enter
movs
cmp
loop
jge
xchg
cld
cmp
div
sbb
lahf
bswap
push
mov
fidiv
outs
das
sbb
sbb
mov
out
dec
shr
inc
(bad)
jg
rcl
push
mov
xor
sahf
dec
ror
ds
in
push
jmp
mov
in
mov
in
aam
mov
out
xchg
mov
xchg
dec
push
or
xchg
mov
popf
pop
int3
xchg
pop
cmp
dec
test
push
lds
push
jmp
out
in
sub
pop
pop
shl
lock
xor
mov
stos
mov
jp
and
icebp
daa
and
stc
cmps
adc
shl
ret
ds
ds
mov
xor
sbb
mov
mov
cwde
in
repz
imul
test
xchg
mov
adc
shl
mov
iret
outs
mov
xchg
addr16
pop
xlat
sub
int3
scas
ins
sub
ret
lahf
xor
cmp
dec
scas
leave
ins
movs
cmp
pop
ror
xchg
(bad)
push
hlt
push
rcl
inc
xor
loop
popa
fs
pop
dec
jle
fwait
adc
sbb
cwde
xor
into
xor
add
push
les
lds
adc
push
ja
push
das
(bad)
xor
adc
out
mov
in
add
fcmovne
pop
jge
jnp
cmp
adc
xchg
pop
dec
movs
mov
outs
(bad)
fsub
call
ret
jmp
adc
xchg
push
dec
shl
sub
loopne
sub
jne
inc
mov
mov
(bad)
mov
(bad)
mov
sbb
push
jnp
pop
outs
repz
les
sub
jp
scas
aad
clc
jne
and
mov
cmc
xchg
test
cmp
mov
or
xchg
fnstenv
mov
and
shr
cmp
mov
dec
dec
mov
inc
hlt
(bad)
cmp
fisubr
jmp
push
mov
add
jns
fcomp
lahf
call
scas
in
cli
mov
sbb
les
nop
mov
outs
jno
push
js
push
jge
inc
push
push
jns
shl
aam
in
sub
and
int
xor
ror
into
call
int3
std
add
sub
retf
imul
movs
jns
push
or
dec
mov
fdiv
add
sub
jnp
fcomp
cmps
clc
in
jo
push
ret
or
jmp
xor
loope
fidiv
mov
cdq
repz
add
js
or
sub
add
mov
inc
es
int3
inc
mov
(bad)
jnp
inc
lahf
out
in
jp
out
mov
jo
sub
ret
aaa
or
not
push
pusha
xor
out
ret
jg
xchg
jbe
mov
ins
push
nop
scas
ss
nop
sbb
adc
mov
dec
add
jbe
bound
sub
repnz
std
xchg
inc
xchg
mov
inc
mov
inc
scas
lea
scas
adc
rcl
dec
push
dec
iret
add
push
int
sar
ja
inc
jmp
into
test
xchg
jno
mov
sub
(bad)
call
sti
mov
jle
div
xchg
push
lahf
addr16
in
leave
mov
arpl
es
pop
imul
mov
jmp
add
aas
nop
arpl
pop
jne
or
push
add
xchg
sahf
mov
cmp
mov
xor
jbe
retf
adc
mov
inc
adc
and
sub
xlat
jecxz
pop
mov
in
vmovq
jb
je
pop
stos
push
jo
or
mov
cmps
inc
cmp
cmp
inc
jl
or
es
jns
loope
imul
scas
jb
xlat
call
xchg
scas
inc
ja
gs
dec
push
push
cmp
sub
aaa
shl
push
iret
sbb
mov
dec
inc
popa
mov
mov
push
out
sbb
rcr
add
std
pop
pop
fs
scas
adc
call
div
sub
push
dec
xchg
gs
push
push
mov
dec
maskmovq
neg
cmp
div
stc
jo
fbstp
out
mov
mov
popa
dec
adc
cmp
push
dec
add
mov
pop
cs
into
cmc
mov
mov
scas
and
cmps
ror
leave
(bad)
xor
clc
add
mov
cmp
(bad)
mov
das
mov
push
cmp
call
push
pop
sub
mov
jmp
cmp
fisubr
adc
test
bound
ds
sbb
mov
(bad)
push
outs
push
nop
enter
mov
push
in
test
push
jnp
xchg
fisttp
inc
pusha
xchg
mov
aas
cli
mov
dec
je
nop
lods
mov
inc
push
sub
xchg
iret
push
and
mov
in
hlt
inc
add
push
scas
neg
pop
dec
aaa
enter
or
in
outs
sar
stc
inc
outs
cmp
xor
cdq
in
rcr
jmp
jae
add
loopne
ja
adc
in
js
pusha
cmp
mov
(bad)
imul
dec
inc
jo
nop
push
xchg
jmp
inc
and
pop
push
ret
or
mov
xor
out
add
pop
pusha
fcomip
gs
pop
push
inc
cs
gs
dec
lods
push
xor
ror
rcr
cld
retf
je
mov
dec
jmp
mov
dec
mov
(bad)
nop
fwait
not
int3
or
push
pop
push
das
imul
jmp
pop
mov
test
mov
movs
and
sub
mov
push
mov
fst
iret
xchg
in
div
movs
cmc
ja
xchg
enter
stos
xchg
sbb
clc
push
jge
fadd
adc
pusha
popf
shl
inc
scas
bound
movs
dec
shl
adc
push
adc
or
into
mov
loope
jmp
dec
ins
mov
fistp
jmp
loope
leave
adc
shl
shl
sub
mov
add
in
sub
mov
outs
out
sbb
je
or
push
je
clc
scas
ss
ds
into
imul
add
rcr
ret
je
and
mov
and
cmps
cmps
push
dec
cmp
mov
xchg
add
loop
mov
push
icebp
in
and
pop
xchg
jne
fcomip
dec
jp
inc
xchg
ret
cmp
push
outs
jne
iret
fstp
and
mov
lods
repz
ror
and
stc
mov
mov
(bad)
jle
dec
adc
stc
mov
jbe
pop
sub
lea
sbb
sub
inc
xchg
add
cmps
(bad)
int3
shl
jg
mov
jg
or
cmp
mov
ja
xor
xor
jno
in
pop
inc
cmp
je
loop
cli
es
and
outs
mul
ss
retf
mov
jne
sub
dec
mov
adc
push
hlt
add
cmp
sub
sbb
or
pop
cdq
or
cmp
icebp
repz
ret
retf
adc
cmp
pusha
inc
push
push
adc
rep
fistp
mov
retf
and
fadd
je
pop
mov
cmp
push
icebp
outs
stc
add
push
pop
mov
xchg
mov
call
iret
sbb
sub
retf
inc
ret
pushf
fdivr
clc
add
nop
(bad)
je
jp
clc
test
das
mul
pop
pop
mov
sbb
inc
jmp
aam
imul
and
int3
or
cmp
adc
sub
pop
sub
xor
loop
xchg
push
addr16
mov
sub
sar
ja
jnp
loopne
cmps
xchg
xor
xchg
movs
xor
xchg
call
dec
(bad)
stc
push
repnz
jae
sub
xchg
data16
stos
pop
pusha
mov
cmp
inc
fwait
in
mov
int
stos
jb
adc
mov
fmul
mov
call
sub
inc
retf
push
sbb
xor
pop
sub
pusha
in
or
fs
(bad)
(bad)
and
xlat
sbb
(bad)
arpl
and
nop
mov
mov
(bad)
inc
retf
mov
sahf
sub
add
pusha
push
xchg
fcmovbe
sbb
xor
shl
jae
pop
sbb
add
(bad)
es
jmp
push
shr
in
pop
dec
and
aad
out
rcr
dec
dec
inc
out
pop
add
js
xchg
cmp
leave
inc
jg
xchg
pusha
pop
push
aas
dec
xor
sub
push
cmp
cs
jae
lahf
sub
sub
or
data16
cmp
pop
sub
xor
xchg
fdivr
jle
loop
cmp
sbb
jb
xor
sub
cmc
dec
hlt
xlat
hlt
jne
cmp
jg
lahf
aaa
jmp
jle
dec
and
or
or
sbb
push
nop
(bad)
mov
pop
cld
and
sub
popa
(bad)
fld
pop
cmp
sahf
scas
div
stc
lods
mov
lea
(bad)
sub
imul
popf
jge
aas
xor
adc
rcl
cmps
mov
pandn
jl
pusha
hlt
(bad)
les
outs
add
(bad)
(bad)
ins
mov
jo
and
jle
pop
xor
inc
sar
inc
add
jmp
out
push
(bad)
scas
lahf
push
xlat
shl
mov
ja
push
popa
je
pop
mov
dec
xchg
fisttp
test
sub
xchg
xor
lods
fs
sbb
add
aam
cmp
sub
les
cli
and
mov
mov
cs
stos
pop
push
cmc
mov
in
push
ret
inc
sub
int3
sbb
dec
inc
ss
inc
pop
adc
sbb
out
xchg
add
jge
xor
ins
ror
stc
mov
test
ror
fst
(bad)
mov
xchg
retf
jns
xor
push
and
fsubr
pcmpeqd
pop
add
adc
push
test
pop
xchg
int
xchg
imul
lea
xor
das
pop
popa
mov
or
mov
mov
in
mov
sbb
mov
cmp
adc
std
xor
mov
lds
retf
call
pop
add
push
inc
lock
jmp
das
pop
ror
push
xor
adc
(bad)
pop
fcomp
jp
rcr
ror
jnp
sahf
xor
xchg
push
push
mov
jbe
rol
add
fs
out
mov
(bad)
aad
js
and
jne
(bad)
stos
xor
call
xor
pushf
dec
dec
push
adc
xor
rcr
in
dec
loope
cwde
inc
(bad)
ds
cdq
aas
loop
fcom
jb
idiv
push
adc
pop
fidivr
pop
jnp
add
jle
adc
inc
das
sub
cld
in
lods
push
jnp
lock
push
fwait
or
int
daa
mov
sbb
(bad)
fcmovbe
sub
sbb
mov
out
sub
pop
popa
xchg
mov
cmp
add
in
jno
ins
in
xor
or
scas
(bad)
jp
add
into
cmps
ins
xor
jns
test
cmp
repz
nop
rcr
mov
into
cmp
(bad)
in
loop
pop
pop
jnp
xchg
lea
jne
mov
jle
mov
adc
push
movs
or
cmp
movs
imul
out
out
jb
cmp
movs
jno
call
daa
test
aas
ins
xlat
xchg
aad
and
xchg
mov
leave
cwde
in
ficom
mov
xchg
pop
and
ss
cmp
lods
and
sahf
and
cwde
and
mov
xchg
jno
(bad)
out
aad
in
addr16
aam
arpl
clc
mov
cmc
call
inc
mov
movs
in
mov
aad
cdq
cmc
push
cmp
mov
push
sub
sub
pop
(bad)
outs
dec
pop
jae
push
inc
and
cmps
mov
sbb
jbe
jae
movzx
js
adc
or
fldcw
jne
fidiv
dec
dec
rol
int3
cmps
xchg
enter
inc
and
or
jmp
popa
popa
out
inc
sub
jne
add
mov
sub
popf
pop
imul
or
sub
xchg
dec
nop
xchg
push
iret
aas
jp
sbb
shl
mov
(bad)
cmp
cdq
fcomp
mov
sbb
aam
pop
sbb
xchg
(bad)
cmp
iret
ins
cld
mov
int3
popf
rcl
cld
mov
data16
daa
shr
push
pop
mov
pop
stc
adc
inc
loope
daa
mov
add
stos
cmp
mov
push
or
loopne
push
popf
fdivrp
(bad)
xor
push
inc
or
je
mov
popf
jnp
inc
push
inc
or
mov
dec
sbb
sbb
xor
adc
enterw
pop
addr16
dec
out
cmps
add
test
xor
mov
add
and
out
gs
inc
rol
imul
aam
and
mov
loop
lods
ss
mov
sub
icebp
mov
pop
jge
mov
xchg
xlat
test
ja
retf
mov
inc
xchg
fidivr
out
stc
or
xor
dec
repz
xchg
int3
and
cmps
(bad)
mov
imul
nop
xchg
and
xchg
les
stc
xlat
fnstsw
sub
add
imul
loopne
fs
cs
or
stos
fwait
je
jne
jl
loope
iret
push
gs
retf
mov
adc
ins
xchg
ret
lahf
dec
pop
adc
addr16
stos
clc
inc
sbb
mov
gs
and
cmp
mov
xor
addr16
imul
out
bound
adc
add
pop
or
pusha
jle
lods
push
outs
into
push
pop
adc
jns
cmps
fadd
in
ja
(bad)
ins
into
fsub
cmps
dec
push
sub
loop
mov
adc
repz
push
ss
jle
xchg
outs
cmp
adc
popa
sbb
dec
push
nop
in
mov
test
xor
push
daa
cmps
sbb
or
xor
mov
outs
jne
adc
test
xor
std
adc
call
mov
or
mov
add
add
xchg
enter
jmp
pop
outs
fs
jae
sbb
mov
sar
leave
lds
cmp
fcmovnu
and
out
das
cdq
jg
sbb
leave
jmp
jmp
mov
movs
pop
loope
jmp
dec
cmc
cmc
mov
test
fsubr
imul
pop
shl
sbb
mov
xchg
(bad)
neg
es
ret
ins
or
dec
(bad)
cld
int3
cli
jnp
outs
call
add
lds
inc
(bad)
sbb
mov
or
xchg
mov
jmp
mov
push
mov
jl
mov
mov
iret
or
or
ds
imul
and
in
jb
test
dec
test
mov
ja
adc
mov
jo
push
lods
pop
inc
inc
sar
cmp
xchg
aad
mov
dec
aaa
iret
int3
pop
iret
test
fwait
daa
cmp
sub
ss
cmp
retf
out
(bad)
jne
adc
fucomip
add
pop
and
lds
xchg
das
(bad)
and
xchg
sub
test
pusha
xchg
mov
sbb
enter
and
pop
loop
rcl
pop
sbb
stc
cmps
add
cmc
imul
iret
jns
mov
scas
add
xor
mov
imul
mov
stos
jno
xor
sub
jnp
ds
repz
dec
cmp
mov
movs
or
or
ret
shr
enter
addr16
inc
push
xlat
mov
jns
add
push
jp
sub
xor
test
in
mov
adc
xlat
ret
test
dec
pop
movs
test
dec
pop
jmp
mov
lods
mov
mov
xchg
pop
dec
mov
jg
push
mov
sbb
sub
mul
loopne
rol
fwait
inc
xor
xchg
clc
xor
jecxz
jle
sub
sbb
or
mov
push
mov
(bad)
ficomp
dec
pop
loop
sbb
or
ficomp
cwde
xacquire
test
aaa
and
xchg
xchg
lods
xchg
inc
cmp
lahf
adc
jmp
jmp
arpl
mov
adc
xchg
jecxz
jno
lahf
jno
in
mov
imul
or
cld
aad
cmp
push
stos
cdq
inc
dec
aas
ret
out
lods
cmps
push
cmp
out
jg
sbb
aad
js
cmp
call
cmc
xor
out
mov
ins
cmp
cmps
arpl
dec
rol
fmul
add
pop
push
(bad)
bndstx
add
xchg
mov
shl
rcr
sub
stc
test
lds
cmp
stc
retf
call
(bad)
and
(bad)
stc
loop
mov
push
imul
jle
nop
iret
adc
jg
es
mov
sub
fcmovnbe
pop
mov
or
(bad)
xor
xchg
sub
pop
and
push
pop
sub
jb
clc
pop
xchg
aas
ins
sahf
sbb
mov
jbe
lods
add
add
fbstp
jne
lahf
push
dec
mov
add
sbb
lahf
cmc
movs
xchg
cmp
inc
xor
cs
mov
mov
add
sbb
jbe
pop
cmp
rcl
inc
les
retf
inc
jbe
dec
in
mov
xor
jmp
push
mov
ret
push
icebp
ss
stos
jle
aas
pop
cmps
jb
cdq
outs
out
cmp
(bad)
shl
xchg
lahf
jmp
jmp
xor
pusha
xchg
jg
fwait
xlat
xchg
cmp
je
fdiv
cmp
push
enter
dec
(bad)
fiadd
sbb
push
fisubr
mov
test
cmp
xor
xchg
mov
je
bound
pushf
aaa
sub
or
leave
loope
mov
cli
out
dec
shl
push
push
iret
out
push
jo
xchg
fnsave
lods
inc
(bad)
mov
add
test
jae
xchg
dec
xchg
push
xchg
inc
scas
mov
and
mov
ret
jge
scas
js
jecxz
popf
call
pop
dec
fbstp
mov
retf
push
popa
int3
sub
cmp
cmp
and
mov
cmp
ficom
dec
(bad)
data16
fs
pop
or
shr
cs
dec
mov
nop
gs
movs
sbb
add
jmp
mov
cmp
mov
add
add
mov
mov
shl
repz
ins
add
cmps
loopne
mov
addr16
in
jecxz
sti
xor
sbb
mov
mov
(bad)
out
jae
jb
loop
scas
and
cmp
test
mov
ror
ss
fcom
dec
xor
fwait
(bad)
into
mov
sub
call
ficom
ins
cmp
loop
cmp
mov
push
mov
ins
pop
adc
fwait
and
xor
inc
das
jge
movs
call
jns
mov
inc
lock
gs
mov
int3
dec
adc
xchg
lock
stos
dec
popa
adc
mov
pop
mov
call
push
jb
or
fild
adc
rcr
add
scas
adc
test
ror
popa
fild
mov
lea
js
sub
sub
dec
bound
jae
sbb
int3
scas
or
pop
fist
push
jno
jle
push
pop
pop
mov
xchg
sub
mov
stos
daa
jp
in
xor
jmp
lds
fsub
mov
movs
std
pop
xor
test
jmp
or
push
inc
xor
out
lods
jno
cmp
out
pop
xlat
cmp
jge
and
dec
js
mov
mov
pop
dec
and
pop
jle
cld
push
add
xchg
mov
imul
jns
scas
xchg
and
push
add
int3
mov
mov
iret
mov
pushf
lds
in
sub
les
repz
add
data16
in
dec
in
push
mov
cmp
sub
shl
pushf
psllw
pop
fcomip
out
sub
or
outs
aaa
loopne
xor
mov
or
in
pop
cmp
call
xor
mov
shl
mov
aam
cmp
clc
in
sar
dec
je
or
hlt
xchg
or
mov
jno
imul
xchg
adc
mov
xchg
mov
sti
cmp
(bad)
and
xor
sbb
(bad)
mov
pop
xor
(bad)
out
jg
lods
adc
mov
inc
xchg
mov
and
pop
jmp
sbb
push
cs
xchg
test
sbb
pop
or
sub
sbb
mov
add
sbb
xor
sti
out
call
inc
icebp
scas
jmp
or
inc
dec
cmp
cmp
or
jmp
pop
enter
loope
jl
stos
retf
mov
add
fs
cwde
pop
paddd
add
ror
pop
push
leave
mov
rdmsr
mov
cmps
mov
cmp
test
or
mov
sbb
inc
add
in
dec
inc
add
lods
jo
popa
pop
ret
xchg
push
xor
mov
mov
rcr
mov
mov
test
push
fisttp
inc
sub
pop
xor
or
out
call
xlat
shr
nop
je
jbe
repnz
data16
mov
ror
sbb
and
ror
dec
push
inc
mov
add
stos
(bad)
fimul
imul
or
shr
sub
xchg
sahf
xchg
call
or
iret
sti
out
ins
scas
outs
add
icebp
aas
push
fwait
les
xchg
sub
cld
repnz
fwait
lea
jne
push
std
dec
and
test
jno
push
retf
jg
cmovno
xchg
xlat
push
je
leave
fidivr
push
cmp
nop
jmp
out
add
test
cs
jmp
cld
cmp
pop
cmp
mov
je
lods
sbb
jp
(bad)
pop
outs
cmc
daa
call
add
bound
or
bound
sub
int3
es
scas
pop
shl
sbb
sub
mov
push
mov
inc
sub
ficomp
scas
test
das
ficom
and
xchg
je
and
retf
stos
cli
jb
stos
mov
xor
stos
push
popf
ret
jg
xlat
mov
cwde
test
test
ror
lds
xor
lods
push
cmps
mov
pop
mov
repz
scas
dec
nop
div
in
in
push
sub
cmp
add
movs
(bad)
cld
mov
and
pusha
mov
xchg
sub
imul
mov
fld
cmp
add
mov
push
jge
ss
push
adc
mov
out
jb
aas
fistp
daa
inc
fsubr
sbb
pop
or
out
cmps
jne
fild
test
pop
add
xor
xchg
sbb
les
add
add
xor
hlt
jb
jnp
sub
cmp
sbb
mov
aaa
shl
add
(bad)
push
inc
and
imul
cmp
outs
in
icebp
(bad)
repnz
dec
push
mov
cmp
jo
pop
xchg
shr
inc
sbb
pushf
je
push
(bad)
or
mov
jb
jnp
imul
lock
lds
dec
sub
pop
call
inc
test
movs
mov
test
bound
(bad)
pop
dec
push
lods
sub
ret
dec
jl
mov
ss
jmp
into
mov
in
and
scas
or
push
cmp
mov
ror
je
xor
adc
test
sbb
mov
inc
inc
add
mov
idiv
(bad)
je
dec
cs
popa
jbe
in
sbb
pop
add
imul
mov
sbb
pop
pop
sbb
mov
xor
enter
(bad)
mov
arpl
in
ret
sub
xor
lods
fst
and
mov
cmp
daa
add
cwde
idiv
or
nop
cmp
jecxz
retf
pop
mov
cmp
jns
addr16
call
mov
adc
cmp
sbb
(bad)
aas
mov
imul
and
sbb
sbb
sub
push
pusha
dec
rcr
dec
not
loopne
fnstsw
xchg
pop
pop
inc
or
fild
fistp
sub
xor
repnz
scas
js
sbb
push
inc
jl
pop
ins
and
scas
xchg
xchg
sbb
gs
rcl
inc
push
push
jge
sub
(bad)
mov
adc
cwde
sub
add
out
cli
mov
test
jge
xor
arpl
and
sub
fstp
jno
fstp
or
push
mov
bound
fdivr
sti
and
push
ret
ret
inc
add
push
les
stos
xchg
add
imul
outs
mov
aaa
add
push
xor
lods
(bad)
outs
pop
pushf
sbb
pop
stos
xor
jp
push
xor
cld
es
xchg
mov
js
ja
mov
dec
jl
sbb
aam
call
ins
cdq
jmp
aad
jbe
outs
repz
mov
inc
sti
xor
jge
test
retf
mov
cwde
les
jno
loopne
xchg
pop
addr16
pop
jg
pop
(bad)
xlat
movs
dec
pop
into
(bad)
repnz
xor
push
ret
sti
arpl
xor
push
dec
mov
arpl
adc
js
icebp
mov
jecxz
inc
aam
out
ret
retf
mov
mov
imul
sar
rcr
cmp
fisttp
adc
ds
jmp
jnp
call
cld
das
and
dec
xchg
movs
lods
push
mov
mov
push
and
ret
dec
jae
push
mov
movs
sub
cld
cmp
dec
or
out
or
stos
lods
xor
addr16
fsubr
mov
dec
jns
jmp
inc
jb
jo
in
jl
test
or
leave
shrd
sbb
jmp
pop
cli
(bad)
mov
imul
mov
jnp
or
push
jecxz
aaa
shl
pusha
cld
mov
add
mov
movs
outs
mov
adc
lods
jecxz
sub
jle
xor
mov
(bad)
jg
jmp
adc
dec
ja
add
ss
out
leave
xchg
add
or
adc
pop
jnp
inc
pop
mov
pop
(bad)
test
mov
cmc
xor
out
jns
(bad)
stos
sub
adc
leave
adc
or
push
retf
sbb
xor
test
test
mov
jg
stos
outs
movs
sub
sub
or
or
test
jge
cdq
xor
push
jns
(bad)
test
ins
fsub
dec
imul
fwait
shl
cmp
out
popa
fcmovbe
mov
or
scas
popf
dec
popa
dec
fst
pop
xchg
cmp
xchg
add
mov
cmp
mov
mov
mov
test
add
call
shr
jo
std
mov
cwde
(bad)
push
ins
adc
push
mov
jbe
jle
or
movs
dec
mov
dec
lahf
popf
push
cmp
push
mov
push
xor
(bad)
loop
sub
(bad)
adc
into
cmp
inc
inc
and
loop
enter
ret
fimul
sub
sbb
neg
xor
gs
inc
adc
pop
repnz
or
mov
bound
pop
fnstcw
mov
ficomp
inc
sub
sbb
jns
loope
rol
mov
les
mov
movs
push
cmp
sahf
repz
jno
pop
repnz
jae
or
xor
pop
mov
pop
lods
inc
daa
les
jmp
jmp
cdq
xchg
fst
mov
ds
iret
xchg
(bad)
pop
std
inc
scas
mov
(bad)
arpl
fnsave
jo
into
fisttp
inc
mov
xchg
in
lahf
xlat
cmps
fwait
sbb
or
jno
(bad)
fwait
loope
cmps
adc
dec
hlt
xchg
push
repz
hlt
retf
fsub
pushf
in
lods
mov
not
cld
pushf
cwde
sub
out
leave
pop
fld
xchg
lods
push
mov
mov
stos
or
fnstcw
repnz
adc
shl
or
cmp
xchg
push
test
sub
in
jno
sbb
and
inc
imul
push
or
inc
push
mov
push
sti
movs
or
out
sub
jmp
div
loope
mov
inc
enter
into
arpl
lock
mov
aam
adc
rol
outs
cmp
sbb
cs
push
das
(bad)
cdq
sbb
add
nop
addr16
nop
mov
bound
fcmovne
outs
xchg
mov
stc
loopne
int3
mov
push
jbe
mov
cmp
or
data16
jae
mov
(bad)
dec
in
add
imul
xor
mov
mov
call
xchg
sub
dec
scas
out
retf
mov
and
movs
data16
pop
fcom
ss
ds
dec
into
mov
cmp
out
ror
ss
loope
push
xchg
and
xchg
mov
movs
stos
cmps
dec
pop
push
and
mov
icebp
or
sbb
outs
ror
js
and
jecxz
outs
std
out
outs
rcl
aam
mov
lods
pop
stos
retf
or
lock
shr
fimul
jp
retf
test
iret
out
mov
dec
cmp
cdq
cdq
stos
jg
jmp
or
mov
xchg
(bad)
loopne
mov
xor
xchg
sar
iret
inc
mov
fisub
nop
mov
cmp
jg
or
ss
stos
out
mov
jl
push
ss
push
lock
test
rol
adc
pop
(bad)
sbb
movs
icebp
sub
cmps
adc
dec
jp
fdivr
inc
mov
gs
iret
dec
scas
sub
pop
and
add
dec
xchg
fs
gs
hlt
jmp
adc
xlat
dec
nop
clc
nop
mov
arpl
(bad)
icebp
push
fs
add
push
mov
pop
ret
xchg
lea
jle
retf
mov
or
xchg
or
adc
icebp
mov
test
push
push
int3
jae
and
adc
jne
mov
sub
mov
or
lods
add
inc
jae
and
sbb
mov
aas
adc
sub
movs
pop
dec
shl
pop
add
pop
leave
(bad)
xchg
mov
fwait
movs
add
int3
add
jno
in
sahf
mov
ret
pop
push
pop
jmp
mov
loope
fs
mov
icebp
aad
xor
fisubr
dec
sub
je
add
and
cmp
jp
mov
mov
mov
test
jge
aas
ja
jl
pop
cmps
xor
and
or
adc
sub
or
adc
(bad)
(bad)
fiadd
xchg
daa
scas
jmp
inc
ja
ds
or
int3
repnz
sbb
sub
fisubr
(bad)
ja
adc
add
fs
fcom
jae
inc
ja
imul
test
leave
adc
jns
push
repnz
aas
sub
nop
add
push
or
dec
mov
mov
mov
inc
sbb
add
fucomip
movs
rol
xchg
jne
push
xchg
pop
pop
hlt
int
add
xchg
cmp
repnz
inc
dec
push
xchg
push
mov
mov
and
push
retf
pop
cmp
add
push
mov
aas
mov
inc
das
xchg
addr16
mul
inc
xchg
inc
arpl
test
push
adc
jg
aam
enter
dec
mov
push
into
push
adc
int3
mov
loopne
jb
aaa
push
ficomp
and
(bad)
mov
loope
jecxz
add
shl
mov
pop
test
mov
leave
sbb
fldenv
pop
cli
dec
cli
arpl
and
enter
sbb
sub
push
push
dec
inc
push
std
aad
mov
imul
or
pop
cli
mov
out
dec
and
mul
jnp
popa
ja
popa
sub
mov
fchs
pop
fst
sbb
(bad)
xor
addr16
pushf
lods
das
push
rol
nop
out
je
add
jecxz
add
ret
mov
xchg
out
ins
add
js
cmp
fsubr
inc
outs
ds
lods
cmp
ror
pop
cli
shl
pop
sbb
fwait
and
retf
cwde
push
pop
mov
and
popa
mov
push
xor
and
or
(bad)
xchg
mov
(bad)
clc
inc
stos
loop
nop
scas
lods
stos
popa
or
dec
scas
cmc
pop
outs
data16
jg
arpl
jge
les
out
xor
mov
jmp
mov
(bad)
aam
in
or
sbb
lds
jl
retf
loopne
fdivrp
inc
int3
sub
xor
into
ja
cmp
out
jns
loop
and
xchg
retf
or
jns
xor
add
lods
test
mov
sub
pop
push
mov
jg
push
jg
jmp
adc
stc
mov
inc
inc
mov
fisub
repz
xchg
retf
(bad)
icebp
call
les
jae
cmp
dec
fsubr
test
imul
and
mov
pop
ds
mov
push
iret
dec
sbb
shl
push
inc
jae
add
inc
rol
mov
push
jge
dec
iret
in
inc
or
mov
jnp
and
data16
cmp
and
add
sbb
cld
jo
mov
cmp
cmc
data16
cmps
mov
mov
or
dec
fstp
xor
cmc
ins
std
ins
mov
sbb
clc
xor
dec
and
loop
retf
mov
fnstsw
jmp
adc
jmp
mov
in
stos
lods
rcr
rcr
jmp
lahf
int
dec
les
mov
or
push
add
jns
adc
fwait
and
not
rcl
out
lods
push
call
or
mov
pusha
sub
xor
dec
push
pop
and
stc
pop
call
cmps
dec
call
sbb
into
xchg
xchg
jbe
outs
mov
xor
or
pop
(bad)
imul
loopne
adc
mov
jo
jno
adc
std
aam
or
je
shr
xor
ds
xchg
mov
xor
mov
outs
mov
sub
(bad)
pop
push
sub
mov
jbe
cmc
sar
jae
and
add
mov
movs
sti
adc
mov
shl
scas
call
lds
pop
rcl
lods
mov
setb
mov
lea
and
dec
mov
and
mov
scas
arpl
fldcw
jmp
pop
ret
mov
sbb
cmp
or
gs
or
sub
dec
loop
jg
pop
stos
fdiv
xor
add
push
mov
and
(bad)
cmc
fimul
into
push
sar
lahf
int3
xchg
jns
inc
or
movs
in
ja
retf
xchg
sub
fsubr
test
imul
xchg
leave
popf
ror
adc
js
mov
adc
pop
adc
mul
add
mov
leave
mov
jmp
jl
dec
xchg
loopne
push
jecxz
jae
daa
aad
add
dec
dec
inc
ret
ds
xlat
call
xor
sbb
cmp
je
jnp
cmp
lahf
retf
jmp
mov
aas
xchg
jg
movs
jnp
hlt
loope
outs
test
push
mov
dec
cmp
fsub
xlat
xchg
push
add
rcr
retf
xchg
jne
sbb
cmps
or
popa
dec
cmp
pop
cld
jge
pop
sahf
ret
add
mov
pop
shr
lods
fst
mov
add
and
repnz
cmc
sub
jnp
nop
dec
sub
sub
xchg
(bad)
and
xor
test
push
mov
loopne
adc
test
dec
or
xchg
movs
movs
movs
mov
and
scas
adc
xchg
popa
inc
dec
outs
mov
ror
sahf
and
push
in
outs
repnz
pop
mov
clc
imul
mov
and
enter
push
repnz
scas
enter
lds
adc
and
std
mov
pusha
cmps
or
xchg
lds
inc
mov
jb
fild
int
xchg
xor
push
pop
sub
fidivr
fadd
jmp
xor
loop
push
pop
mov
test
ret
fwait
daa
unpckhps
test
jne
arpl
push
add
mov
jmp
pop
lahf
xchg
push
or
mov
sbb
jbe
mov
mov
clc
in
pop
ins
sbb
call
(bad)
cmp
(bad)
pushf
lea
xor
mov
sub
mov
xchg
pop
cwde
int3
jmp
push
outs
sbb
sbb
push
imul
push
dec
test
cdq
dec
jb
inc
xchg
and
fadd
jns
mov
shr
xor
repnz
xlat
gs
sub
xchg
inc
or
(bad)
xor
addr16
repnz
mov
(bad)
ds
or
sbb
adc
cmp
and
or
dec
pop
jl
inc
test
mov
fst
cdq
dec
dec
into
push
add
nop
mov
cld
xchg
aam
dec
retf
imul
cmps
(bad)
push
inc
test
gs
mul
sti
into
inc
stc
push
imul
mov
mov
add
push
pop
xchg
xchg
sub
daa
dec
nop
mov
add
add
push
xor
xor
inc
cmp
mov
sub
dec
dec
retf
add
stos
push
ror
push
inc
rcr
inc
add
dec
pop
aas
int3
adc
pop
bnd
movups
inc
icebp
mov
jge
adc
(bad)
sti
cmc
repnz
mov
stos
xor
lods
push
cwde
fdivp
out
sub
adc
mov
add
test
retf
mov
mov
ret
(bad)
push
jne
xor
and
adc
mov
shl
test
pop
ret
cld
push
or
xor
call
fmul
inc
sahf
push
push
js
push
sahf
sar
inc
jno
jbe
jmp
sbb
pop
imul
out
mov
pop
fnsave
mov
xor
(bad)
(bad)
cmps
movs
ror
std
cwde
retf
cmp
ss
pop
scas
mov
outs
repz
push
das
ret
dec
cmp
clc
lock
or
lea
add
das
movs
pop
aam
bound
inc
inc
pop
xchg
pop
(bad)
mov
and
call
mov
push
sbb
cmp
adc
retf
not
mov
xchg
pop
cwde
clc
into
jecxz
out
push
mul
mov
mov
inc
hlt
add
test
mov
ins
addr16
mov
push
sahf
mov
fcom
mov
outs
sahf
jbe
adc
push
je
inc
and
out
jbe
push
mov
ret
adc
xor
xchg
add
pusha
jle
jmp
(bad)
lods
shl
rol
xchg
add
adc
sar
and
aam
or
xor
jg
add
push
das
lahf
jnp
add
fs
add
dec
push
mov
sbb
push
inc
in
pop
sahf
fisub
neg
jne
dec
cmps
jle
ret
xor
push
mov
cli
fisubr
clc
fld
movs
mov
cmc
jnp
ftst
arpl
pop
xchg
jns
mov
and
push
ss
dec
push
adc
fld
sbb
test
out
inc
movs
inc
shr
and
std
jno
ins
(bad)
in
cmp
mov
push
mov
lods
jmp
out
mov
xor
loopne
sahf
loope
inc
ret
mov
pop
ins
jl
faddp
mov
push
push
sbb
mov
movs
popa
(bad)
xchg
int
or
sub
cmps
(bad)
xor
cmp
in
cmps
loop
pushf
mov
add
data16
sbb
mov
div
jl
push
or
push
and
jp
xchg
dec
xchg
pop
scas
movs
adc
gs
inc
dec
repnz
shl
sti
scas
repnz
mov
in
cld
(bad)
and
or
pop
sahf
(bad)
mov
cmp
out
sbb
mov
test
dec
push
mov
mov
and
or
outs
jno
das
test
ret
mov
test
not
pop
push
adc
repz
fsub
fdivr
(bad)
data16
pop
mov
imul
sub
cwde
test
xor
popf
xlat
xor
movs
fcom
rcr
push
push
add
push
stos
icebp
cwde
dec
dec
test
enter
outs
sbb
js
mov
in
jne
adc
jns
dec
(bad)
sub
ins
mov
mov
int
popf
jno
mov
pusha
je
push
sbb
inc
and
fst
rcl
cmp
retf
jnp
cmp
mov
ja
jmp
push
in
test
test
push
sbb
(bad)
imul
in
into
or
or
push
daa
push
ja
xchg
and
out
add
int3
ret
or
idiv
in
clc
(bad)
mov
lahf
push
inc
call
arpl
or
adc
mov
mov
sbb
adc
(bad)
mov
and
(bad)
stos
into
sub
(bad)
mov
mov
jp
lds
in
scas
xor
movs
in
dec
(bad)
imul
js
jge
lea
cmp
aad
mov
retf
mov
jp
sub
clc
retf
mov
into
jo
inc
ret
icebp
cmp
fs
(bad)
mov
jns
pop
pop
adc
mov
adc
cmp
push
cli
pop
shr
mov
int
pop
ss
inc
sub
mov
inc
xchg
ja
loope
pop
cmp
daa
arpl
mov
gs
inc
jno
jne
pop
movs
mov
jbe
pushw
sub
cmc
dec
cmp
pushf
clc
push
rol
dec
mov
xchg
leave
das
outs
lahf
pop
call
loope
jne
leave
lds
inc
in
pop
sub
out
popf
retf
mov
scas
mov
ficomp
dec
xchg
xor
pushf
cmp
mov
sub
std
dec
test
mov
pop
mov
aam
lods
fist
fmul
push
mov
add
movs
sub
jmp
push
test
nop
cmp
test
sub
push
push
stos
call
cmp
push
xchg
inc
dec
jmp
lods
cmps
cmp
jl
jbe
rcr
add
mov
into
mov
movs
adc
pushf
mov
dec
pop
inc
out
cld
jle
mov
inc
enter
cmp
inc
jnp
or
retf
lea
push
out
add
add
out
mov
in
xor
std
mov
iret
or
lahf
ins
push
sar
mov
cmp
push
stos
sbb
jmp
mov
mov
mov
sbb
pushf
xchg
push
and
call
cli
arpl
cmp
and
mov
out
sbb
in
imul
adc
jg
push
adc
pop
fisubr
ins
arpl
xchg
push
jns
cdq
add
mov
push
adc
ins
xchg
pusha
dec
dec
sub
mov
xor
aas
ins
mov
fs
or
shr
in
inc
adc
or
sbb
add
pop
lds
push
scas
lds
retf
adc
dec
jmp
mov
test
inc
push
fwait
rcl
loopne
loope
aad
sub
hlt
pop
or
ins
ss
scas
pusha
and
or
out
dec
sbb
mov
lods
add
push
inc
arpl
popa
mov
jae
mov
enter
into
cmp
in
push
movs
bound
je
pop
mov
stc
or
sbb
pop
mov
ins
mov
jmp
sub
add
push
adc
out
in
push
push
or
xchg
xor
push
into
jnp
pop
adc
in
pop
sub
es
xchg
dec
call
sbb
in
adc
fsubr
mov
lods
cwde
rep
mov
outs
enter
cmp
stc
nop
mov
lods
jmp
arpl
xor
popf
sahf
movs
xor
retf
mov
mov
jbe
ret
push
mov
test
add
xchg
and
stos
add
sub
and
and
or
je
stc
add
movs
loopne
aad
in
mov
std
mov
mov
push
ins
rol
fdiv
sub
or
arpl
cld
add
inc
adc
pop
jmp
out
sub
je
(bad)
fbld
rcr
xchg
shl
loopne
and
in
push
mov
cmp
sub
out
pop
pop
dec
pop
dec
aad
(bad)
jl
mul
lahf
dec
mov
adc
mov
jne
out
jmp
sub
cld
(bad)
push
mov
hlt
inc
movs
xlat
mov
loop
jp
mov
clc
out
fsubr
test
jp
add
imul
and
aaa
pop
push
push
shl
push
mov
cdq
cmc
inc
or
into
dec
adc
out
dec
(bad)
xchg
in
adc
fidiv
xchg
adc
xor
fxam
test
dec
sti
xor
mov
loopne
ss
(bad)
jns
ds
aad
imul
in
inc
and
sbb
push
mov
enter
jbe
inc
test
jg
int3
mov
gs
add
pushf
cwde
loop
into
lock
xchg
hlt
mov
stos
push
xchg
mov
pop
sbb
js
dec
adc
inc
pop
or
push
adc
xlat
jno
xor
fisubr
cmp
xchg
repnz
or
inc
loopne
test
xor
add
imul
adc
rcr
add
pop
mov
inc
xchg
sbb
pop
ror
jge
fstp
fcomp
sbb
sub
push
or
rcl
mov
mov
fisttp
ins
ja
out
fwait
mov
cmp
(bad)
lock
add
das
jp
xor
std
aad
mov
xlat
xchg
cli
test
mul
rcr
cmp
std
mov
sahf
inc
add
(bad)
dec
sti
push
sub
dec
inc
in
in
inc
fidivr
or
xchg
jmp
(bad)
cmp
dec
adc
fwait
shl
inc
dec
aaa
dec
call
push
mov
mov
imul
ret
(bad)
inc
sbb
mov
imul
aas
xor
test
fcomp
add
rol
test
mov
sar
retf
add
cmp
cmp
outs
and
(bad)
test
push
sub
xlat
es
iret
sub
(bad)
adc
mov
pop
cmp
movs
int
inc
jmp
xchg
adc
(bad)
pop
sbb
retf
and
inc
or
in
movs
push
jnp
popf
lock
jns
iret
inc
xor
mov
ins
push
fild
fdiv
xor
fwait
jecxz
in
sbb
mov
in
xor
mov
inc
frstor
jle
call
mov
in
cmp
(bad)
call
imul
sbb
imul
xor
enter
push
rol
jbe
xchg
(bad)
dec
adc
xor
(bad)
imul
data16
test
aad
jnp
test
icebp
mov
pop
out
into
mov
xchg
div
das
cli
jg
pop
sbb
and
stos
fild
imul
in
addr16
lahf
inc
xor
sahf
adc
dec
add
mov
and
popa
rcl
mov
mov
(bad)
push
xchg
mov
sbb
mov
jb
push
ss
mov
and
scas
ds
mov
xchg
(bad)
outs
mov
fst
lds
or
loop
inc
adc
sbb
push
outs
scas
xchg
adc
mov
test
pop
in
fisttp
xchg
addr16
imul
xchg
popa
jp
dec
ret
mov
xchg
mov
push
leave
or
mov
cdq
test
(bad)
sbb
test
jb
(bad)
jge
mov
add
fnsave
add
je
pop
sub
mov
adc
add
sbb
popa
loope
movs
jge
movs
mov
jmp
push
pop
mov
jae
mul
or
cs
ins
call
jns
dec
push
cs
sub
mov
jmp
les
mov
movs
and
xor
add
gs
jne
out
pop
jp
(bad)
adc
arpl
aaa
pop
sbb
pop
xchg
xchg
out
jecxz
es
or
add
xor
lods
ds
xchg
cmc
adc
xor
xchg
comiss
add
pop
ret
mov
popa
pop
repz
xchg
pusha
(bad)
test
movs
xchg
dec
sbb
scas
out
jge
ss
and
add
scas
or
pop
push
or
jnp
dec
out
mov
(bad)
out
les
mov
call
sub
xchg
xchg
shl
jo
sub
cmps
pop
cmp
scas
loope
sub
stos
jl
ficom
lahf
inc
jmp
fidiv
mov
loopne
push
sahf
addr16
add
fcomip
clc
adc
movs
aas
inc
loope
cmp
mov
add
push
lds
inc
pop
cmps
call
jp
jg
cmps
pop
push
cmp
jmp
mov
pop
pop
sub
lds
sbb
loopne
rcl
mov
push
ds
rol
fwait
inc
arpl
inc
movs
test
je
xchg
xchg
sub
push
pop
fdiv
add
fild
or
cmps
in
(bad)
shl
clc
sbb
clc
fdiv
cwde
pop
cmp
cs
popf
in
push
cwde
and
jmp
cmp
add
xor
dec
retf
ja
push
cwde
hlt
xor
xor
add
or
pop
retf
cmp
fs
cmp
lods
int3
fdivr
stos
add
rcl
pop
repnz
cmp
pushf
test
cld
mov
stos
and
sbb
(bad)
xor
mov
xchg
push
push
repz
xchg
jp
(bad)
jne
cs
loop
pop
pusha
mov
mov
fwait
adc
push
call
xor
push
xlat
xor
xchg
leave
sub
ja
dec
les
fdivr
clc
xor
enter
rol
lods
lahf
push
das
icebp
shl
(bad)
ds
ret
call
stos
mov
aam
jnp
mov
aaa
fs
mov
call
(bad)
pushf
pop
add
mov
sub
jno
ja
sub
mov
xor
dec
ss
sar
add
push
hlt
cmp
aas
mov
sbb
(bad)
push
xchg
dec
fistp
dec
adc
std
leave
outs
adc
ins
and
pop
mov
(bad)
push
jo
cmps
add
jl
gs
rcl
jl
sub
repnz
xchg
push
loope
inc
scas
dec
sub
xchg
xor
ins
mov
(bad)
mov
add
xor
gs
jnp
rcr
outs
or
cmp
dec
mov
mov
dec
cmp
ds
lds
adc
add
xchg
ret
jp
bound
shr
sub
jne
addr16
push
jecxz
jp
repz
push
pop
arpl
xchg
test
std
imul
and
adc
xchg
xlat
jle
popa
mov
aaa
dec
xchg
xchg
push
lds
cmps
add
fnstcw
mov
es
add
sbb
lock
xor
ret
inc
cdq
movs
mov
ret
lock
pop
imul
jns
das
jle
add
outs
stos
sbb
imul
lock
xor
xchg
(bad)
jge
add
shl
push
jae
sub
mov
pop
fnstenv
sbb
scas
js
shr
pushf
mov
mov
mov
lds
cmp
out
aaa
cs
mov
pop
cmp
fdivr
jl
cmp
push
retf
je
enter
dec
mov
repnz
push
cmp
fiadd
imul
push
and
sti
push
cmp
fst
je
leave
fsubr
xor
ins
fs
mov
jmp
add
les
leave
jmp
in
test
mov
fsub
and
jnp
mov
pop
outs
jne
scas
ffreep
push
add
pop
inc
xchg
and
fstp
imul
fidivr
sub
lods
xchg
loopne
pop
xchg
cmp
jbe
xor
shl
xchg
dec
mov
sbb
inc
mov
add
cs
sub
push
and
fist
add
imul
mov
in
pop
jbe
stc
push
jmp
mov
cmps
cli
pop
scas
stc
das
inc
cmc
sub
loopne
mov
rol
in
(bad)
loop
lock
add
js
mov
and
push
in
cmp
movs
pop
adc
and
cmp
sub
lods
stos
mov
mov
addr16
inc
test
pop
push
test
fst
pop
ins
push
xchg
sti
pop
mov
add
inc
mov
iret
cld
push
jge
fadd
enter
sub
test
inc
sub
dec
sahf
xchg
mov
ds
in
xchg
and
rcl
(bad)
push
in
xchg
jge
frstor
(bad)
out
in
out
pop
stos
retf
shl
pop
test
adc
or
div
retf
iret
(bad)
aas
mov
sbb
mov
mov
int3
adc
mov
xchg
inc
sbb
jae
mov
or
lock
(bad)
sub
fwait
rcr
or
shr
sub
dec
pop
mov
cld
mov
push
cmps
and
mov
cld
sub
mov
pop
xchg
rcl
rcl
or
xor
pop
in
cmp
or
mov
add
cmps
hlt
hlt
xchg
dec
cmps
or
jmp
es
retf
mov
test
setg
test
mov
(bad)
scas
pop
arpl
jne
dec
jno
(bad)
push
cmp
mov
pop
adc
xor
push
mov
cmp
test
pop
out
outs
push
adc
mov
int3
div
pop
dec
lds
mov
jecxz
cmp
aaa
sar
mov
gs
pop
js
mov
scas
cmp
movs
movs
mov
jmp
hlt
mov
je
mov
mov
fwait
push
inc
(bad)
imul
bnd
mov
and
push
adc
pushf
jae
je
push
pop
cmp
cmps
push
xchg
push
sahf
out
nop
push
inc
push
jne
push
lahf
lods
jmp
jmp
jmp
sub
adc
sub
stos
mov
lock
int3
add
stos
mov
pop
xchg
(bad)
pop
add
in
mov
clc
out
sti
mov
inc
push
das
ins
pop
test
daa
scas
add
fcmovne
rol
in
push
fistp
jl
pop
xor
mov
mov
mov
retf
scas
jle
test
div
jle
jl
and
jge
fild
adc
mov
inc
ret
ins
(bad)
int
scas
int
add
outs
sub
push
and
rcr
jne
adc
int
movs
hlt
shl
addr16
ins
pop
pop
sbb
jg
push
out
test
inc
retf
sub
loope
inc
sbb
cld
xchg
xchg
rcl
push
pushf
jo
ins
mov
dec
leave
inc
sub
adc
push
push
scas
pop
fisub
(bad)
shl
rcr
dec
mov
jnp
mov
mov
ds
adc
test
loopne
pop
int3
popf
ds
or
mov
jnp
retf
ror
ins
fimul
pop
mov
pusha
jmp
sbb
push
cli
mov
dec
and
xor
shl
retf
jge
mov
add
shl
(bad)
xor
xchg
and
add
stos
push
add
xchg
mov
out
cld
push
(bad)
stos
lock
and
shr
push
mov
mov
sti
jb
mov
jge
sub
xor
pusha
mov
push
jg
stos
mov
jmp
stos
lods
xor
sub
sbb
xchg
add
(bad)
cmp
popf
push
popf
out
xchg
sub
jp
mov
sub
dec
sub
xor
arpl
sbb
xor
retf
ror
mov
mov
sub
lahf
adc
retf
out
cld
(bad)
hlt
adc
pop
into
es
cld
out
dec
push
add
dec
and
dec
xchg
cmp
push
jp
sub
jge
int3
xchg
jb
mov
lea
mov
stos
repnz
xor
pop
xchg
sub
push
int
inc
mov
mov
and
call
push
loope
or
data16
iret
enter
or
retf
or
mov
popa
aad
pop
push
jge
repnz
test
rol
xlat
pop
lahf
or
inc
icebp
sbb
pop
pop
xor
popa
or
movs
push
imul
xchg
out
mov
rcl
pop
mov
cmp
sub
aam
xchg
cld
hlt
test
cdq
or
sub
jbe
cdq
adc
inc
je
outs
sbb
and
xor
sahf
mov
xor
adc
push
jmp
sub
test
jge
cmp
dec
fst
mov
inc
jg
push
rcr
add
popa
cmp
dec
mov
mov
lea
jl
(bad)
out
aad
pop
adc
cmp
dec
add
or
punpcklbw
inc
sub
(bad)
rcr
test
mov
mov
imul
fldcw
and
in
cld
sbb
jo
(bad)
into
add
mov
xchg
ds
sti
mov
fdivr
jecxz
sti
aas
mov
rcr
(bad)
cmp
xchg
sbb
enter
xchg
dec
aam
es
adc
xchg
popa
mov
jae
in
movs
call
jbe
or
xor
stos
dec
cmp
cmp
sahf
mul
in
pop
push
out
sti
mov
jmp
sub
or
and
and
enter
pushf
inc
inc
not
pusha
fwait
mov
sti
push
push
arpl
xchg
out
cmp
out
push
xor
into
clc
enter
add
sbb
(bad)
push
sub
mov
sbb
mov
cli
dec
popf
jle
sub
lds
fadd
mov
imul
dec
mov
sub
or
and
in
xchg
push
int3
(bad)
outs
jno
fs
div
out
clc
out
jecxz
das
sbb
cmps
xchg
inc
xchg
popa
ror
fs
leave
iret
out
mov
jb
repz
ret
xor
or
sahf
data16
jge
mov
add
pop
mov
(bad)
jl
push
pop
mov
jmp
clc
in
into
or
cdq
sbb
cmp
jecxz
les
lahf
cmp
in
mov
jbe
in
cwde
cmps
push
sub
test
cld
je
adc
ret
fs
leave
adc
add
sub
pop
sbb
mov
jnp
pop
out
cmps
xchg
and
sub
mov
xlat
mov
pop
mov
dec
mov
loope
sub
lds
mov
test
inc
lea
mov
popa
cld
jo
mov
xchg
add
aaa
inc
pop
jb
inc
das
movs
not
mov
push
xchg
adc
sub
jns
push
call
sub
jb
jmp
cmc
test
imul
push
in
push
popf
test
jnp
maskmovq
aad
jecxz
mov
push
(bad)
in
mov
inc
jl
adc
dec
xor
inc
movlhps
cdq
(bad)
or
and
dec
pusha
ins
dec
das
cmp
inc
dec
xor
push
xchg
mov
mov
push
jmp
cli
ins
idiv
sbb
jg
call
aaa
out
jle
js
shl
mov
inc
hlt
ja
loopne
jo
add
xchg
and
xchg
enter
push
call
and
out
cmp
frstor
pop
mov
xchg
inc
sahf
add
sbb
out
wrmsr
dec
in
push
mov
xchg
and
inc
jns
ins
ret
mov
rol
(bad)
ficomp
arpl
jmp
xor
dec
pop
cli
scas
xchg
pop
push
imul
pop
add
ror
sahf
ins
pusha
cpuid
pop
cmp
outs
adc
cmp
je
je
mov
jge
xchg
test
and
retf
rol
pop
(bad)
aad
adc
mov
xchg
outs
fst
pop
jo
dec
mov
mov
nop
mov
push
pop
popa
jl
or
xchg
sub
inc
popf
lea
test
or
dec
mov
or
dec
(bad)
and
shr
and
mov
lea
das
frstor
stos
adc
imul
call
mov
mov
sbb
add
fcom
aam
cwde
mov
mov
xor
xchg
adc
inc
xchg
ret
scas
add
mov
sub
push
mov
mov
dec
mov
out
sub
fst
sub
movs
xor
sbb
add
jecxz
mov
cld
jb
mov
push
test
ss
sti
mov
pop
jmp
stos
std
sti
adc
sbb
xlat
jp
div
daa
icebp
push
cdq
(bad)
xchg
call
push
ss
and
or
cmp
test
nop
jmp
int
imul
ins
inc
ds
movs
hlt
xor
mov
fstp
xchg
sub
mov
xor
pop
(bad)
sub
inc
xchg
mov
inc
add
aaa
scas
jmp
adc
mov
push
xor
add
out
clc
(bad)
xchg
shr
or
xlat
xlat
out
sub
add
pop
imul
xchg
adc
push
push
mov
(bad)
mov
xor
(bad)
and
mov
nop
pop
push
in
jb
mov
cld
inc
push
mov
loopne
mov
add
jl
jge
dec
mov
inc
adc
and
mov
test
cmp
inc
gs
mov
mov
sbb
sbb
(bad)
cli
sahf
sbb
in
inc
mov
push
jns
mov
pop
ror
fsubrp
loop
sbb
aas
arpl
inc
sub
outs
mov
dec
shl
mov
xlat
mov
jb
push
into
mov
and
iret
enter
sbb
dec
pusha
(bad)
adc
aaa
adc
dec
cmps
lds
call
pop
in
lods
loopne
shr
out
sbb
mov
es
and
repz
es
or
adc
mov
or
mov
aaa
xchg
cmps
fsubr
push
lahf
lea
daa
(bad)
push
xchg
arpl
inc
test
retf
xchg
sbb
jecxz
mov
sti
jo
xor
shr
mov
movs
clc
cwde
test
in
fs
movs
scas
fld
loopne
bound
push
lsl
rcr
fs
mov
ss
fs
sahf
add
xor
xchg
call
(bad)
push
cmp
add
(bad)
push
aad
push
inc
fdivr
mov
push
add
and
pop
or
add
push
push
test
mov
mov
movs
add
xchg
or
inc
dec
and
push
pop
fisub
je
jmp
adc
xor
push
es
push
cs
mov
imul
retf
lods
or
mov
cmp
clc
lods
lahf
das
ins
jecxz
mov
bound
imul
daa
leave
pusha
jne
or
in
pop
dec
jmp
shl
or
jo
test
mov
mov
ret
mov
pop
add
sbb
rcr
xlat
push
adc
aas
imul
mov
jae
aam
and
mov
jne
dec
es
push
xchg
cmp
dec
ja
into
pop
icebp
loope
dec
jmp
or
add
(bad)
push
mov
sbb
aaa
int
push
xchg
xchg
jl
out
pop
mov
fdivr
ja
std
jle
sti
call
outs
lods
or
outs
mov
inc
pop
push
mov
das
sub
cdq
jnp
cmp
pushf
xor
add
(bad)
mov
fwait
xchg
call
mov
jl
scas
popa
mov
fwait
out
adc
add
cmp
mov
lahf
adc
lock
mov
les
cli
scas
neg
adc
inc
es
sub
(bad)
mov
dec
mov
shl
jae
xchg
mov
xchg
out
repz
inc
push
inc
mov
cmp
or
sti
inc
jo
popa
and
sbb
imul
das
fbstp
inc
test
cs
cmp
or
dec
push
push
out
dec
sub
pop
or
xor
lods
push
fptan
stos
inc
add
xchg
sbb
mov
popf
out
loopne
or
adc
test
xor
xor
imul
adc
mov
stos
pop
sbb
cmps
js
pop
pop
or
xchg
push
repnz
cmp
mov
and
aaa
mov
je
push
mov
dec
cs
inc
xchg
mov
adc
clc
lods
repz
or
ds
mov
push
fstp
pop
push
movs
mov
push
ret
mov
jae
ins
(bad)
dec
cmps
sbb
sub
test
int
dec
pop
xchg
mov
pop
imul
mov
dec
adc
mov
xchg
adc
xchg
add
jg
xchg
(bad)
xlat
test
out
inc
xchg
(bad)
cld
sub
xchg
aaa
adc
inc
cs
(bad)
fstp
fiadd
retf
mov
add
pop
mov
xchg
nop
cmp
adc
inc
inc
xlat
jmp
test
retf
push
scas
mov
ins
fstp
or
lahf
call
xchg
sbb
ffreep
adc
(bad)
lock
out
push
cli
jbe
repz
(bad)
imul
iret
mov
(bad)
mov
repnz
and
movs
or
xchg
fldcw
mov
pop
and
pop
mov
(bad)
mov
dec
adc
pushf
jnp
jne
jmp
inc
fdiv
outs
cmp
test
scas
xchg
retf
out
fmul
sti
push
lea
mov
lds
les
xor
inc
loop
imul
icebp
gs
push
(bad)
and
ret
(bad)
arpl
add
inc
repz
pop
daa
out
mov
pop
jb
inc
jno
arpl
nop
ret
xchg
push
into
xor
push
or
pop
lea
loope
test
cmp
xor
ins
js
sbb
mov
mov
adc
ffreep
stc
pop
jecxz
not
loope
xchg
fs
loop
dec
(bad)
(bad)
pop
(bad)
mov
and
cmp
hlt
aaa
mov
jmp
xchg
inc
out
sub
loopne
cld
iret
jecxz
arpl
not
cmc
(bad)
arpl
sbb
adc
dec
ja
dec
and
aaa
xor
adc
loopne
jae
pcmpeqw
xor
jb
repz
cmp
xor
sbb
mov
adc
sahf
(bad)
call
dec
xchg
cli
sub
adc
dec
sub
cmps
shl
scas
test
push
bound
ins
push
jecxz
pop
js
push
loope
xor
rcl
scas
jp
leave
int3
(bad)
lahf
pusha
test
fisubr
div
push
cld
cmp
xor
mov
fwait
inc
fmul
scas
lea
leave
cs
sahf
arpl
in
and
sub
sti
push
(bad)
das
jmp
fstp
mov
mov
xor
xchg
jmp
sti
out
dec
leave
or
mov
push
xchg
adc
mov
pop
mov
mov
fsubr
jg
std
sub
lods
jmp
adc
in
sbb
daa
lea
pop
xchg
lods
mov
inc
push
test
aas
adc
rcr
xchg
das
cdq
jae
mov
aas
popa
popf
dec
adc
sub
mov
std
loopne
xlat
xor
xchg
xchg
jo
int
sbb
(bad)
nop
inc
inc
shl
in
mov
push
loope
fdivr
add
out
in
inc
inc
fstp
xchg
(bad)
jbe
loope
dec
pushf
fisubr
xchg
and
pop
data16
mov
ret
arpl
imul
fs
movs
dec
and
fsubr
sub
mul
push
push
aad
dec
lods
mov
or
pop
scas
mov
arpl
mov
jb
cmc
fldenv
add
int
jns
nop
xor
test
and
cmp
sub
mov
lds
sbb
push
(bad)
fsubr
mov
xor
push
cmc
push
out
popf
leave
mov
adc
pop
fstp
movs
cmp
mov
jecxz
mov
(bad)
dec
mov
mov
inc
push
in
js
lds
test
jns
sub
in
add
jp
inc
and
test
imul
outs
mov
das
popf
sbb
mov
cmc
(bad)
mov
or
inc
lods
xor
fidiv
vrsqrtss
test
add
cmp
outs
ins
inc
and
and
cli
stc
scas
(bad)
in
aaa
mov
mov
sti
ss
outs
pop
push
(bad)
sub
mov
sbb
jmp
push
jbe
cld
mov
sbb
hlt
jbe
jo
mov
xor
call
jp
std
dec
jnp
inc
stos
push
mov
adc
in
pop
out
mov
sub
jno
hlt
pop
lock
mov
test
push
mov
pop
jae
jmp
mov
int3
sub
gs
xchg
std
test
popf
(bad)
push
xor
or
xchg
jne
cmp
aaa
push
jns
jno
jmp
out
nop
(bad)
test
les
mov
js
pop
fwait
popf
xlat
mov
es
lock
pop
js
xchg
out
in
loopne
inc
inc
xchg
mov
cmp
mov
xlat
out
dec
xor
int
and
or
test
sub
pop
sub
int
ja
adc
mov
in
ret
ret
test
call
pop
adc
inc
imul
sbb
in
test
test
mov
push
and
push
xchg
sub
fs
add
and
outs
jbe
fidivr
scas
sbb
sbb
pop
sbb
fcmovne
push
(bad)
fbld
add
mov
and
aaa
sbb
addr16
inc
icebp
fdivr
call
add
mov
pop
test
inc
sub
call
xchg
mov
pop
mov
sbb
lods
arpl
shl
test
cmp
loope
or
int3
adc
push
dec
mov
add
adc
popf
cs
scas
xchg
adc
push
popf
adc
(bad)
pop
sub
push
and
fs
xor
sub
cmp
mov
sbb
aam
inc
add
aad
int
sub
push
mov
cwde
fist
out
nop
xchg
or
xor
push
popa
ret
test
pop
in
out
fbstp
ds
lock
ds
pop
fwait
je
cmp
cmp
inc
daa
xchg
inc
add
inc
pop
ror
aaa
jo
imul
mov
mov
scas
out
cmp
test
add
mov
add
or
cmp
mov
les
iret
mov
push
ins
cmp
loopne
mov
dec
jmp
cmc
retf
or
pop
sar
sub
dec
ret
xor
(bad)
dec
out
mov
enter
mov
mov
sbb
xor
adc
ret
dec
jmp
ret
sub
fadd
fistp
add
or
and
loopne
mov
push
or
mov
retf
mov
retf
lea
adc
cmp
(bad)
add
xchg
nop
ins
pop
mov
dec
cmp
cmps
add
dec
push
mov
mov
add
adc
(bad)
iret
push
add
and
pop
ss
inc
jmp
xchg
loope
add
les
fs
sub
xchg
cmp
test
ficom
adc
sti
mov
xchg
cmps
pop
clc
lods
inc
xor
push
ins
cmp
jae
add
pop
data16
int3
sub
cdq
push
ficom
ins
dec
stos
dec
(bad)
bound
int3
repz
mul
call
mov
ret
ins
adc
ret
inc
loop
leave
imul
(bad)
pop
lea
ins
pop
jecxz
fsub
in
(bad)
or
ins
(bad)
sbb
mov
mov
repnz
jmp
dec
add
aam
cmps
std
push
sahf
dec
arpl
test
rol
mov
push
mov
cdq
sti
call
sub
cmc
push
mov
js
jmp
dec
loop
daa
xchg
jae
add
cmp
jbe
test
jle
mov
fs
movs
repnz
das
movs
test
shl
jl
fist
cmp
cmp
hlt
add
add
push
jge
add
push
fstp
sbb
and
cwde
or
les
(bad)
out
in
js
out
add
(bad)
(bad)
xchg
jmp
in
es
in
sbb
and
push
in
mov
imul
inc
sbb
xchg
js
adc
into
jg
pop
dec
xor
mov
ret
dec
es
and
inc
out
xchg
mov
bound
adc
and
xor
mov
push
jnp
ror
jne
fcmovnb
dec
arpl
mov
ins
jno
inc
sbb
imul
add
dec
or
mov
jmp
adc
js
pop
movs
cmp
pop
cmp
dec
dec
ss
ins
jnp
and
mov
mov
jb
rcl
outs
imul
jae
rol
out
sbb
ss
icebp
call
sbb
jp
or
xchg
adc
rcl
cld
or
ins
iret
repz
out
push
pop
jne
sbb
sub
push
fcmove
mov
push
pop
ret
pop
jmp
jne
dec
push
cmp
(bad)
ds
mov
jne
add
jbe
adc
fs
je
movs
ja
mov
cmovp
push
xchg
stc
inc
dec
add
jo
mov
jecxz
and
idiv
and
ret
and
jge
pusha
je
sub
dec
add
movs
(bad)
addr16
pop
push
mov
inc
xor
jne
test
idiv
xor
js
mov
(bad)
cmps
sub
mov
push
pop
dec
xchg
sar
jmp
shl
std
and
ret
push
and
iret
adc
aad
jmp
jmp
mov
shl
mov
cdq
sbb
dec
repz
sbb
jno
js
jns
mov
sub
sub
(bad)
iret
push
xor
sbb
fist
sub
mov
scas
into
das
cdq
enter
mov
xchg
dec
jmp
jmp
pop
rcl
in
push
(bad)
outs
out
ret
out
mov
mov
jl
sub
cmc
dec
inc
jnp
xchg
dec
(bad)
mov
mov
and
push
jne
popf
or
inc
mov
(bad)
rcr
test
push
movs
mov
and
mov
cmp
sub
enter
inc
xchg
pop
jne
and
das
test
fwait
mov
(bad)
xor
leave
mov
retf
mov
mov
test
out
out
pop
cmp
dec
cdq
inc
std
inc
dec
fistp
cs
sub
pop
loope
stc
and
sub
int
hlt
adc
add
mov
push
in
xchg
in
test
mov
loope
jmp
popa
rep
cmps
dec
loopne
inc
xchg
push
push
inc
push
dec
lds
loop
pop
(bad)
xchg
add
stc
jecxz
loop
add
outs
sub
pop
xchg
dec
inc
les
enter
cmc
push
retf
add
aaa
dec
stos
jnp
jg
jge
lahf
inc
js
sub
sbb
jns
mov
jg
leave
std
in
movs
xor
gs
jle
es
and
push
xchg
or
adc
push
fcom
xchg
inc
fisubr
cli
push
das
mov
jp
mov
mov
lods
push
mov
jg
xor
and
push
cmp
jns
xor
(bad)
cmp
inc
(bad)
push
push
mov
and
push
pop
icebp
jl
jmp
pop
sbb
test
in
adc
adc
lods
popa
sbb
popa
pop
mov
pop
call
in
and
pop
das
test
retf
adc
pop
repnz
sub
clc
inc
scas
punpckhwd
adc
out
mov
push
lock
and
push
clc
jno
sub
add
adc
retf
ror
es
sbb
jmp
mov
pushf
ror
pop
mov
cmp
cmp
pop
enter
ins
jb
dec
int
xor
out
int3
ins
xchg
cli
ret
xor
pop
enter
in
repnz
jmp
fsubr
fsub
pop
cmps
imul
or
popf
cmp
mov
mov
mov
ins
push
retf
mov
not
mov
and
sbb
pushf
and
ficom
mov
mov
mov
push
push
icebp
push
movs
in
das
cwde
lea
js
ins
dec
das
in
stc
movs
cdq
jns
mov
(bad)
gs
icebp
lahf
sub
xchg
pop
inc
inc
fs
int
scas
pop
pushf
xchg
dec
xchg
mov
lds
xor
xchg
sub
dec
stos
in
fcmovu
and
add
dec
pop
js
jmp
sbb
cmps
dec
fcomi
jb
mov
rol
jp
mov
jbe
adc
mov
inc
retf
fild
xor
mov
dec
fwait
das
push
push
div
pusha
add
sar
pop
test
mov
mov
sbb
cmp
adc
or
pop
arpl
xchg
mov
stos
cmps
cmc
add
in
cmp
mov
mov
or
cmp
and
dec
lock
cmp
mov
ins
movs
fstp
jno
inc
add
sahf
jecxz
jns
push
dec
push
clc
mov
les
dec
mov
fwait
dec
(bad)
dec
or
mov
retf
xor
mov
out
or
push
stc
sti
pop
gs
in
sub
sub
test
icebp
xor
xchg
fmul
div
cli
mov
outs
push
mov
mov
sub
outs
cmp
out
dec
sbb
ret
adc
out
fcmovnbe
push
or
fild
adc
sbb
cs
sbb
inc
dec
add
test
(bad)
push
jle
ins
mov
dec
mov
xchg
cmp
and
rol
lea
lds
cmp
mov
xlat
dec
ja
test
jmp
or
jo
mov
xchg
scas
inc
or
pusha
fsubr
fwait
jp
mov
nop
mov
outs
out
pop
stos
lds
stos
xor
imul
mov
out
ja
fild
ja
leave
scas
pop
(bad)
jmp
sbb
aas
cmp
sbb
(bad)
and
jb
push
inc
(bad)
xlat
and
ret
cmp
add
add
adc
fiadd
test
inc
cmps
push
test
fmul
adc
mov
pop
push
inc
shr
inc
bound
and
mov
mov
aas
inc
push
jmp
sub
mov
(bad)
stos
xchg
test
cmp
ret
imul
push
sub
adc
pop
dec
movs
mov
xchg
gs
int3
jae
cld
out
fnstenv
pop
jo
adc
(bad)
mov
mov
mov
pop
das
test
and
int3
(bad)
mov
push
or
xchg
xchg
hlt
(bad)
ficom
xchg
jo
pop
cld
sub
cwde
push
cmps
pop
or
ret
mov
xchg
xor
xor
cmp
jg
ret
push
fmul
jae
and
test
das
in
mov
out
mov
je
inc
pop
mov
push
mov
mov
arpl
std
ins
out
xchg
adc
sub
cmps
ss
and
cli
call
frstor
rol
sub
jno
outs
enter
and
jmp
nop
and
sbb
jo
retf
add
cmp
mov
jo
jecxz
pusha
ret
bound
out
mov
mov
call
cmp
jmp
sahf
int
aam
pop
jns
mov
sahf
lods
out
mov
sub
push
adc
push
cmp
cmp
mov
pop
mov
xor
lock
std
adc
dec
shl
lahf
es
jp
inc
push
pop
cs
imul
call
jnp
push
pop
hlt
fisttp
pop
ss
pop
cmp
cwde
scas
ret
mov
sbb
mov
fdiv
pop
mov
pop
int
and
xchg
cld
push
leave
sbb
mov
enter
call
rol
mov
shl
or
mov
mov
sbb
sbb
lods
and
mov
push
xor
inc
cmps
adc
loope
mov
mov
jl
js
aad
fbstp
ds
jg
sbb
outs
stos
pop
push
jo
cmps
cmp
sub
data16
inc
sbb
push
sti
ins
push
mov
(bad)
loop
and
push
adc
int3
push
cdq
push
mov
jbe
loopne
scas
add
jl
test
pop
imul
jecxz
lds
jmp
jge
lea
add
pushf
call
push
sar
mov
cld
xor
nop
lahf
repz
aas
pop
mov
inc
inc
push
test
jb
xchg
mov
repz
pop
lock
test
add
xor
jge
and
mov
jbe
je
jle
inc
inc
inc
push
jmp
pop
ja
xchg
xchg
gs
jbe
movs
pop
jp
ja
add
add
cmp
jb
repnz
and
fild
inc
mov
ins
dec
sbb
xchg
int
aas
and
xor
pushf
fistp
rcr
jmp
retf
mov
loopne
sahf
jle
nop
adc
dec
jl
jp
xchg
sub
push
in
cmp
ret
xlat
enter
jmp
ror
sti
push
sbb
mov
sub
xor
repnz
shl
(bad)
mov
push
inc
add
je
push
mov
rcr
fadd
mov
fistp
adc
push
pop
loope
call
mov
ja
ja
push
sti
lods
xchg
pop
xor
in
jp
imul
(bad)
cmp
mov
shl
fldcw
shr
or
call
mov
gs
dec
dec
repnz
aam
add
test
scas
and
fcomp
push
cdq
dec
inc
inc
mov
jp
ret
jecxz
add
aas
mov
pop
pusha
xor
or
out
das
lods
ja
and
sbb
jmp
scas
mov
xor
mov
(bad)
sub
fdivr
push
pop
dec
inc
push
fiadd
mov
pop
dec
xor
rol
jb
sbb
add
cli
mov
shr
mov
xchg
mov
sbb
sub
std
arpl
in
lock
xor
jle
pop
add
(bad)
and
pop
ret
les
movs
inc
fwait
clc
test
std
mov
scas
mov
xchg
push
xor
xlat
ret
cmc
and
data16
cmp
add
mov
aad
add
ds
pop
dec
ror
push
and
shr
outs
pop
out
adc
push
test
xor
push
dec
ins
das
adc
jmp
jb
add
pushf
mov
cs
stc
retf
dec
mov
(bad)
jmp
jg
(bad)
or
pop
pop
add
jnp
rcr
dec
sti
push
xor
jp
test
das
pop
repz
xchg
retf
sbb
or
(bad)
out
lods
dec
(bad)
adc
adc
jle
aam
mov
mov
(bad)
mov
jb
push
mov
ins
adc
mov
sub
jle
out
sbb
push
adc
aam
mov
add
push
cld
xor
out
lahf
and
sbb
xchg
add
mov
shr
pop
mov
sub
or
cs
movs
iret
add
movs
enter
mov
xchg
and
push
mov
sub
inc
or
stos
test
xchg
aad
jmp
sbb
cli
cmps
mov
push
mov
fidivr
adc
sub
add
jg
stos
bound
push
jne
outs
xchg
sahf
aad
xor
mov
mov
inc
inc
mov
pop
stos
sbb
jmp
dec
cmc
and
xor
mov
(bad)
mov
fiadd
sbb
or
add
in
mov
mov
jno
pop
jl
cs
pop
xchg
adc
mov
push
mov
into
adc
outs
cmp
daa
dec
aam
xor
mov
mov
lds
xor
das
lahf
imul
ror
mov
push
mov
xchg
cmps
(bad)
jecxz
int3
sbb
repz
xchg
icebp
repnz
jnp
adc
fwait
aam
bswap
push
loope
xchg
push
mov
pushf
push
xchg
std
add
js
push
aad
aad
shr
leave
xor
pop
pop
xchg
out
sub
stos
in
aam
dec
(bad)
push
jbe
mov
movs
sahf
jmp
and
pop
xlat
je
scas
jnp
les
sbb
pop
(bad)
push
sub
jae
cmp
xchg
dec
loope
sub
ja
mov
fsub
fidivr
adc
leave
inc
jge
rcl
mov
test
xlat
dec
mov
sub
mov
adc
cs
cli
jl
stc
(bad)
xchg
mov
add
pushf
dec
xchg
jae
jo
pop
mov
retf
adc
out
rol
rcl
pop
aas
cmps
adc
push
int
inc
(bad)
sub
sysenter
out
(bad)
ja
cmps
mov
jp
xchg
pop
dec
retf
test
(bad)
pop
int
sub
sub
xor
dec
xor
adc
das
(bad)
lock
xor
xchg
arpl
xor
mov
push
das
bound
jmp
sbb
int
or
add
xor
out
fsubr
daa
test
push
imul
adc
push
pop
and
jg
push
daa
jmp
adc
leave
sbb
jmp
clc
sbb
cmp
push
cld
aam
adc
xor
call
mov
icebp
inc
lea
arpl
(bad)
adc
cmp
adc
pop
test
dec
movs
gs
add
ds
or
bnd
icebp
and
imul
push
loop
xchg
cwde
fxch
iret
leave
jnp
mov
das
mov
sub
leave
mov
ss
pop
push
rcl
mov
popf
lock
dec
loope
push
mov
ror
in
lods
inc
sub
imul
pop
sbb
fld
in
pusha
pop
pop
ins
mov
sub
jle
dec
add
pop
xchg
pop
cld
adc
movs
daa
sbb
adc
xor
push
pop
xchg
cmp
pop
jle
data16
xchg
mov
and
cmp
scas
(bad)
ins
mov
or
mov
push
mov
sahf
je
jmp
inc
or
jns
and
pop
(bad)
xor
inc
xor
sub
fcomp
xchg
mov
inc
mov
movs
add
push
push
inc
shl
mov
inc
adc
mov
daa
sbb
std
adc
fnstcw
icebp
leave
mov
mov
aam
pop
sti
stc
(bad)
mov
stc
xor
mov
cmp
je
loopne
and
daa
lock
inc
adc
shr
scas
pushf
scas
mov
add
lods
mov
xor
cmp
lea
cld
lods
mov
dec
mov
and
ret
add
sub
fadd
ins
and
mov
pop
pusha
sar
idiv
lahf
mov
push
adc
sar
cmp
mov
xor
popa
mov
mov
push
xlat
mov
cmp
int
sbb
mov
inc
(bad)
sbb
sbb
xchg
mov
jecxz
dec
in
cmp
xchg
out
test
aas
dec
pop
cmp
or
fs
ds
adc
data16
mov
cmps
push
mov
call
mov
jbe
add
inc
cmp
mov
xchg
inc
test
adc
ret
pop
mov
cmp
pusha
add
sbb
cmp
dec
mov
int3
pop
stos
test
inc
dec
sbb
pushf
mov
cdq
pop
das
jns
cmp
in
jmp
imul
xor
data16
into
leave
jle
or
cmp
shl
cs
mov
push
mov
in
aas
add
imul
rcl
jb
pop
lods
jo
sub
cmp
cmp
xor
push
mov
jns
mov
mov
lea
jle
push
enter
stos
mov
push
push
loopne
xor
out
mov
jbe
xchg
pop
stos
test
fs
test
in
xsave
adc
adc
loop
test
push
add
and
jmp
pop
test
lds
sbb
or
pop
leave
push
or
cmp
mov
and
xlat
jb
rcl
mul
dec
popa
inc
xor
mov
push
or
retf
into
sbb
loop
push
or
ins
pop
xchg
and
xor
jp
xchg
mov
pop
in
lods
call
shr
inc
mov
or
outs
sahf
push
xchg
test
out
out
cmc
xor
jnp
mov
xchg
sbb
pop
mov
push
shr
mov
loope
mov
mov
mov
jge
nop
push
dec
mov
push
jo
fcmovu
pushf
in
aam
addr16
jecxz
jle
fnstenv
xor
xchg
aas
ins
imul
lods
push
mov
movs
ds
adc
int
imul
neg
jl
movs
das
fbld
xor
movs
(bad)
xor
adc
xor
push
inc
jmp
fsubr
int
push
mov
stos
adc
sub
addr16
(bad)
sar
sar
cdq
lahf
push
push
jp
mov
pushf
pop
outs
dec
push
xor
nop
xor
outs
ins
cmp
mov
pop
arpl
push
mov
mov
cmps
pushf
cld
inc
adc
fmul
xor
inc
mov
jo
pop
mov
mov
xchg
dec
loop
scas
cli
cmp
jne
popf
fcmovbe
mov
jle
pop
out
sub
cmp
pop
jle
dec
and
test
pusha
rcr
and
pop
rol
cmp
dec
sub
cli
enter
out
lahf
inc
cmp
and
nop
push
dec
add
sub
fild
clc
pusha
add
outs
sbb
mov
xor
mov
lods
pop
cdq
fwait
cdq
or
lods
push
test
mov
mov
mov
test
movs
mov
jg
outs
dec
or
sub
add
sub
arpl
jae
inc
pop
popf
push
jnp
sbb
cmp
push
push
add
cmc
pop
adc
pop
mov
dec
or
jns
out
mov
jbe
mov
cld
dec
jmp
out
test
pop
hlt
pop
sub
and
push
das
or
cmc
dec
push
or
cmp
out
cli
frstor
and
cs
xor
mov
push
mov
lahf
sbb
fist
add
rol
inc
jp
jne
(bad)
cmp
sahf
js
imul
push
leave
push
adc
mov
sbb
gs
or
inc
sbb
pop
jmp
scas
mov
xchg
pushf
arpl
and
jecxz
or
imul
imul
inc
sbb
mov
pop
jae
mov
push
jns
les
push
xor
retf
pop
clc
gs
pop
sbb
mov
push
add
cli
pop
std
test
idiv
jnp
and
(bad)
outs
icebp
icebp
lods
and
mov
cs
or
jg
inc
test
jno
call
mov
(bad)
popf
mov
or
(bad)
push
loopne
fsub
sbb
out
xor
mov
hlt
out
pop
jb
icebp
xor
imul
les
mov
jl
sbb
add
inc
pop
in
or
pop
sbb
pop
dec
fld
lea
ins
loope
mov
pusha
fistp
pop
inc
mov
cli
ss
sbb
jmp
mov
loopne
or
mov
pusha
or
sbb
jnp
push
ror
fucomip
fisub
and
sub
adc
cmps
or
cwde
data16
cmp
jmp
push
mov
xor
aaa
cmps
sub
mov
lea
push
and
movs
push
or
mov
mov
rcl
rol
in
jbe
cmps
out
pop
sub
adc
mov
add
sbb
sub
dec
xchg
jnp
pop
jno
mov
jnp
pop
mov
jmp
iret
test
mov
dec
cmp
stos
dec
pop
not
mov
sub
ret
and
push
ret
adc
sub
lods
sbb
ss
push
outs
cld
mov
gs
xchg
stos
pop
lahf
jno
mov
in
mov
xor
aad
push
inc
jle
sbb
mov
mov
ins
dec
push
inc
shr
ret
loop
in
and
mov
and
xor
std
fwait
mov
int
sbb
ret
leave
xchg
adc
jne
pop
jg
cmps
mov
and
dec
mov
mov
cmp
in
push
jae
loopne
pop
and
mov
xor
sbb
jp
push
les
xor
repnz
pop
jb
imul
sbb
pop
xchg
mov
mov
pop
mov
jne
xor
loopne
loopne
in
push
nop
xchg
jmp
ret
jae
cmp
jns
(bad)
jmp
dec
jmp
jmp
inc
cdq
add
pop
add
sub
fimul
sti
mov
jae
retf
jns
pop
mov
inc
jmp
push
lea
leave
fisttp
cmps
add
lods
add
xor
rcl
cmp
clc
ds
arpl
adc
mov
inc
sub
dec
fistp
push
jne
pop
int
mov
xor
loop
call
mov
adc
xchg
jg
adc
imul
push
lds
mov
mov
movs
jo
dec
and
test
js
cmp
xor
pop
mov
(bad)
cmp
xchg
push
mov
inc
pop
cwde
ins
aas
addr16
ins
cmc
int
into
mov
xchg
in
cmp
mov
div
rol
push
inc
push
ss
fwait
mov
pop
jecxz
test
or
jo
aad
xor
leave
sbb
push
enter
repz
clc
aam
jmp
lahf
cdq
adc
jmp
cmp
and
mov
mov
push
repnz
sbb
sbb
addr16
les
pop
iret
pop
pop
in
jmp
(bad)
repnz
das
push
dec
repz
or
cmp
imul
sub
cwde
ficomp
aad
mov
mov
mov
ds
sub
sub
pop
sub
repnz
jae
ds
push
xor
sub
mov
rol
fsub
inc
inc
daa
fldcw
jo
inc
nop
jb
cdq
repnz
ins
sub
jo
xor
jl
and
xchg
xchg
ffreep
ror
xor
xchg
sbb
mov
movs
xor
push
jle
mov
adc
xor
arpl
(bad)
std
mov
push
std
stos
pop
movs
data16
jns
aad
jb
jecxz
test
cmp
dec
aas
pusha
sbb
retf
and
neg
jno
mov
push
dec
loopne
pop
or
gs
pop
jge
(bad)
ins
sbb
pop
cs
or
mov
test
sub
push
mov
mov
fidiv
sub
sub
xchg
repnz
pushf
push
setge
adc
sub
ja
pop
(bad)
ins
ins
dec
ds
std
push
iret
sbb
pop
dec
popf
push
push
fmulp
xor
ja
(bad)
es
sbb
push
xchg
(bad)
fnstsw
cmp
scas
pop
scas
lahf
mov
out
into
sbb
inc
stc
xchg
ret
daa
(bad)
cmp
cwde
dec
xor
div
add
sbb
xchg
or
(bad)
jmp
cmps
sub
adc
dec
pop
sti
lds
lods
add
mul
xchg
sbb
mov
push
cmp
lahf
lea
pop
popf
in
es
shl
dec
ret
nop
or
mov
lahf
fst
fs
jmp
mov
test
push
xchg
mov
sar
retf
addr16
add
lods
test
int3
sbb
inc
add
scas
jmp
cmp
popf
cmp
jle
es
dec
push
lock
jecxz
push
cmp
leave
cli
and
(bad)
dec
mov
out
enter
jp
cmc
jl
(bad)
and
mov
xor
daa
cwde
dec
mov
xchg
jl
das
cmp
sbb
in
mov
shl
push
pop
test
push
sbb
xor
fisttp
add
pop
xchg
pop
adc
ret
add
xchg
inc
sub
shl
xor
fwait
dec
xor
mov
mov
(bad)
out
fnstsw
sub
test
mov
pop
and
aas
rol
sbb
int3
mov
inc
xchg
popf
cmp
je
or
mov
call
hlt
or
test
shl
in
pop
cld
adc
jg
movs
(bad)
push
(bad)
(bad)
push
sbb
fmul
mov
(bad)
mov
push
pop
inc
or
ins
adc
dec
mov
push
and
adc
rcr
inc
sub
shl
xchg
dec
mov
mov
scas
xchg
out
ss
lock
sti
xchg
imul
daa
pusha
mov
and
sub
jle
ret
ja
fsub
mov
fsub
test
fs
imul
add
std
test
cmp
sbb
mov
loopne
es
outs
pop
jnp
mov
cli
dec
mov
jmp
test
push
mov
push
(bad)
je
push
push
add
mov
clc
jno
add
or
cmp
ins
push
mov
out
sbb
lods
fdiv
inc
add
lock
pop
cwde
ror
cmp
ret
ror
nop
ins
mov
xchg
int3
add
pop
imul
sub
mov
sbb
push
pop
dec
xchg
call
cmp
cwde
mov
push
push
je
mov
mov
cmp
daa
or
xor
jg
mov
sbb
mov
fwait
loopne
pop
mov
shl
(bad)
in
es
add
pop
fwait
cwde
shr
mov
(bad)
adc
lea
sti
adc
push
test
lock
jmp
adc
or
cmp
push
push
out
pop
js
fist
sub
adc
xor
inc
dec
or
jns
pusha
jl
jmp
enter
adc
addr16
cmps
sar
add
jecxz
cmp
push
cmc
and
or
mov
nop
(bad)
cmp
ja
cmc
push
sub
mov
adc
in
(bad)
mov
aaa
jl
pop
sub
jns
and
push
mov
push
mov
push
sbb
or
icebp
retf
scas
push
mov
clc
lds
push
ss
aaa
adc
push
leave
and
jne
lds
lea
or
mov
sahf
in
lds
or
pop
popf
dec
into
jmp
cmps
loope
adc
push
jb
push
int3
add
ja
icebp
fstp
add
inc
mov
out
pop
nop
push
dec
or
add
xor
or
jae
aaa
daa
rcl
fucom
mov
push
mov
retf
repnz
and
add
cmc
add
xchg
cmps
imul
dec
aam
paddusb
mov
(bad)
sbb
jb
xlat
(bad)
push
mov
and
test
fiadd
(bad)
cmc
and
movs
push
inc
xor
les
aas
mov
push
push
add
cmp
xchg
sub
push
mov
aaa
adc
xchg
retf
pusha
ja
into
xor
rcl
mov
imul
cmp
fiadd
cmps
hlt
mov
mov
jno
jmp
jecxz
leave
jmp
sbb
mov
xor
hlt
xor
and
gs
sub
fs
mov
pop
(bad)
xchg
in
mov
cmp
sti
retf
clc
jmp
pop
adc
mov
push
int3
test
gs
enter
mov
xor
iret
push
in
xchg
outs
retf
test
or
bound
(bad)
in
into
pushf
sub
or
test
or
mov
sub
pusha
cwde
jmp
iret
mov
mov
sti
mov
stos
push
pop
cld
mov
mov
icebp
xor
add
jns
adc
pop
pushf
inc
stos
repnz
ja
jmp
add
clc
adc
push
test
fsubr
iret
xchg
mov
in
aam
push
mov
bound
jne
mov
sub
or
xor
dec
add
mov
adc
push
sbb
pop
scas
mov
stc
adc
jge
adc
lahf
jne
cmp
icebp
fisub
dec
scas
(bad)
jae
test
sbb
outs
fstp
dec
sub
xchg
ja
xor
or
fcomp
aam
out
nop
xor
mul
mov
test
cs
mov
pop
mov
cmp
or
daa
sub
call
sub
sub
add
pop
imul
stc
leave
sub
in
fwait
or
xchg
fld
cmc
xor
cmp
xor
aad
and
loope
jne
cli
adc
stos
(bad)
lock
jno
ja
pop
adc
xchg
js
shl
push
cmps
push
dec
inc
mov
fwait
mov
outs
movs
xchg
out
mov
push
dec
test
ins
cmp
dec
adc
das
sub
dec
or
data16
jne
inc
mov
(bad)
or
icebp
ds
lahf
and
xlat
shl
js
mov
inc
add
mov
int
lea
cmp
out
shr
inc
in
les
xchg
sbb
xor
out
mov
and
pusha
mov
pop
gs
fiadd
fcomp
push
jo
sub
xchg
cli
cwde
push
inc
or
mov
xchg
pop
test
xor
or
pop
fidivr
mov
data16
add
or
(bad)
push
std
scas
fnstcw
out
ja
das
xchg
jg
push
mov
lds
sub
pop
dec
push
jns
and
jge
pop
cld
or
push
pushf
push
fadd
pop
jg
fwait
dec
mov
call
daa
sub
push
mov
imul
neg
shr
pop
retf
leave
dec
pop
or
cs
adc
leave
and
cmp
mov
ds
push
aaa
push
inc
pop
sar
sbb
jo
mov
mov
sbb
shr
lock
gs
ja
cmps
add
in
leave
xor
(bad)
cmp
es
jg
push
inc
xor
in
pop
mov
push
mul
pop
push
in
ja
mov
xor
push
pop
dec
cmp
inc
xchg
push
sub
fs
push
fucomi
mov
push
mov
in
cmps
pop
ret
jg
scas
into
push
dec
cmc
push
sub
jl
in
imul
dec
dec
call
call
and
(bad)
int3
das
stos
into
iret
jae
test
ret
aas
ja
add
int
popa
(bad)
push
mov
(bad)
xchg
mov
pop
popf
jle
imul
add
pop
xor
mov
movs
add
stos
dec
leave
ret
mov
xchg
aad
push
aad
mov
xchg
push
call
mov
mov
cmp
push
sub
ja
outs
jne
rcr
cmp
mov
add
cmp
mov
push
mov
mov
push
add
inc
push
xlat
es
ret
jecxz
jge
cld
pushf
or
and
push
push
sbb
adc
push
aad
xchg
bnd
call
pop
push
mov
std
(bad)
jae
ins
retf
push
repz
movs
mov
lea
push
fistp
leave
repz
add
popa
adc
in
xchg
fdivr
sbb
inc
cmp
dec
test
aam
adc
cmp
cmps
sbb
js
and
sbb
mov
imul
(bad)
shl
cdq
and
dec
jbe
cmp
dec
fadd
sahf
scas
sbb
mov
cmp
adc
jge
and
out
push
or
cmp
mov
mov
pop
fsubr
out
je
mov
in
jle
out
cmp
nop
stos
int3
cwde
mov
pop
mov
(bad)
sub
inc
mov
add
test
js
adc
pop
sbb
enter
sub
js
xlat
loope
int3
push
lds
jnp
or
mov
xchg
fisubr
pop
and
or
not
popa
or
in
cmp
jnp
push
sahf
or
out
lds
out
ja
mov
daa
cmp
or
loopne
and
aaa
loop
fwait
pop
test
and
push
mov
add
loopne
loope
arpl
dec
aam
mov
scas
outs
test
cmc
dec
bound
test
hlt
stc
xchg
inc
iret
dec
push
imul
push
jno
mov
cli
jmp
cmp
fiadd
enter
test
sbb
lock
pop
xchg
in
nop
cdq
dec
sub
or
push
imul
loopne
pop
xlat
sbb
fist
pop
les
jns
dec
xlat
retf
sbb
inc
je
imul
add
add
out
test
mov
daa
aaa
or
and
popa
in
xor
stos
sub
cmc
and
and
add
fnsave
cmps
out
push
and
arpl
mov
popf
inc
inc
and
push
mov
mov
adc
fmul
xchg
ins
je
pop
push
iret
xlat
fst
xor
daa
and
into
test
scas
sbb
loopne
pop
cs
daa
push
xor
popf
push
pusha
push
or
fild
inc
nop
leave
sbb
xor
xor
pushf
das
movs
and
hlt
xchg
mov
stos
pop
fiadd
cmp
outs
and
push
add
and
movs
jnp
push
rol
fild
xchg
jge
xor
arpl
test
jnp
sbb
ror
call
mov
cmp
push
inc
repz
je
dec
aas
shl
clc
dec
sub
iret
(bad)
pop
retf
sbb
sub
outs
ja
sbb
sbb
repnz
pop
dec
lock
push
scas
inc
or
xchg
mov
mov
mov
loopne
test
int
fidiv
inc
stos
ja
inc
repnz
cmp
jecxz
pop
mov
scas
cmp
mov
sbb
int3
ret
repz
in
fild
inc
jp
inc
sbb
mov
inc
cwde
mov
add
lods
loope
inc
xor
inc
jo
mov
jnp
lock
call
jle
adc
inc
and
sbb
push
nop
jbe
or
ds
shl
mov
popf
movs
bound
inc
mov
leave
push
mov
push
lock
mov
sub
add
and
int3
add
add
in
loopne
cmp
out
sti
jmp
nop
gs
adc
or
mov
pusha
les
mov
inc
jo
sbb
adc
fs
mov
call
mov
pop
fcomp
sbb
cld
sub
mov
popa
mov
int
mov
mov
mov
(bad)
pop
pop
cmp
dec
add
dec
sub
neg
lahf
mov
movs
mov
ja
fsub
add
movs
xchg
mov
mov
mov
iret
xchg
add
jbe
fwait
sahf
and
or
inc
call
outs
std
pushf
adc
adc
jbe
sub
stos
fdiv
je
xor
aaa
icebp
push
pop
repz
inc
idiv
jg
retf
ins
cmp
ret
scas
inc
lock
call
test
adc
sub
add
mov
mov
adc
stc
in
xchg
xor
mov
test
mov
xchg
outs
jge
push
popf
mov
and
lea
or
mov
mov
or
add
jb
hlt
jecxz
scas
jae
push
inc
aam
fnstenv
loop
inc
sbb
iret
cld
mov
jge
adc
imul
(bad)
adc
sbb
cmp
(bad)
push
leave
inc
xor
dec
add
sti
jne
mov
iret
fwait
in
and
inc
enter
nop
xchg
(bad)
jmp
cmps
jmp
(bad)
leave
sub
xor
inc
cmps
adc
xchg
inc
(bad)
sahf
jp
lahf
fcom
push
xlat
dec
inc
inc
outs
or
add
call
pop
adc
pop
ins
dec
jecxz
jle
mov
jecxz
cli
in
loopne
out
xchg
hlt
or
(bad)
mov
add
xor
jge
int
js
fsubr
xchg
fwait
pop
jae
mov
add
sbb
cmps
out
aam
mov
jl
cmps
mov
fdiv
add
aam
pop
dec
jmp
dec
cwde
pop
xchg
dec
and
push
jae
loopne
pop
lods
xchg
push
xchg
and
mov
jmp
push
add
push
mov
mov
repz
mov
sbb
sbb
test
and
xchg
test
mov
dec
xor
iret
mov
xchg
add
jle
(bad)
mov
sbb
aad
bound
cmp
ret
push
ficom
add
repnz
pop
cld
idiv
clc
push
mov
mov
fs
pop
(bad)
jae
sahf
push
jbe
xor
fcom
sbb
push
jne
movs
cdq
pop
xchg
mov
push
fcomp
sbb
std
pusha
aam
arpl
sbb
xor
repnz
mov
jle
rcl
xchg
lahf
inc
jbe
inc
mov
cmps
mov
adc
push
stos
inc
mov
(bad)
cmovle
movs
jo
out
dec
popf
call
repz
or
push
ins
and
fdivr
jno
sbb
add
adc
repz
jmp
jb
sar
test
sub
push
retf
pusha
lds
and
cmp
jecxz
and
mov
pop
shl
dec
fmul
int
lea
gs
mov
lods
cdq
int
pop
cmp
gs
popf
push
and
inc
cs
xor
mov
pushf
arpl
rol
inc
cwde
js
stos
mov
lods
mov
hlt
dec
inc
out
inc
fsubp
ja
cli
inc
fdiv
push
out
push
add
sub
jae
xchg
jmp
loope
arpl
sbb
mov
fwait
xchg
clc
lahf
sub
sub
lock
out
sub
shl
pop
sbb
movs
lods
repz
mov
jle
ret
push
dec
mov
inc
mov
dec
stos
leave
call
dec
mov
mov
xor
pop
push
daa
xor
ja
sbb
or
aam
dec
cld
add
lds
test
dec
std
(bad)
addr16
adc
fcom
jmp
cmp
cwde
fidiv
sub
(bad)
sti
sti
mov
scas
pop
mov
xor
sub
pop
les
or
cs
sbb
aaa
jmp
ret
clc
jl
mov
cmp
pop
not
fistp
add
xor
mov
and
xor
jecxz
dec
fs
xor
xor
shl
sti
cmc
popa
push
int3
jmp
push
mov
fwait
xchg
sub
xchg
cmc
sti
test
xor
push
mov
loope
inc
inc
adc
fnstcw
test
ins
xor
mov
(bad)
in
mov
sbb
sub
push
pop
int
bound
paddusb
ja
or
xlat
nop
retf
xchg
sar
addr16
cmp
dec
xor
test
fcom
mov
push
repz
int
pop
jns
pop
dec
push
xchg
fisttp
sar
popf
popa
sti
lods
in
cli
daa
lock
inc
data16
les
or
pop
cmp
dec
add
push
imul
jecxz
xchg
dec
pop
xor
push
cs
jmp
sub
enter
(bad)
jbe
xchg
popf
rcr
into
jno
pop
bound
xor
aam
mov
inc
mov
outs
and
dec
push
dec
iret
fsub
lea
mov
in
push
rcl
mov
push
push
sbb
mov
mov
xchg
pop
mov
jae
sbb
sahf
repz
or
out
sub
sbb
sub
int
push
adc
and
inc
or
stc
push
scas
jne
xor
int
xor
call
inc
cmps
rcl
inc
repnz
mov
sub
inc
pusha
mov
(bad)
popa
adc
jno
stos
pusha
aam
mov
dec
(bad)
and
jo
stc
out
mov
cmp
and
jecxz
mov
pop
mov
(bad)
in
xor
xor
lea
or
mov
or
inc
add
(bad)
inc
lock
ja
pop
(bad)
call
inc
fisub
push
iret
or
mov
pop
retf
jp
or
or
add
inc
cwde
retf
jbe
loopne
add
add
pop
jp
movs
jge
mov
call
xor
adc
jle
adc
sub
pusha
pop
sbb
into
shl
sub
rol
or
or
mov
pop
add
es
push
bound
mov
pusha
not
jmp
push
pop
fs
jp
test
add
mov
fld
rcr
je
jo
mov
jl
xchg
jno
xor
push
mov
adc
mov
xchg
idiv
dec
or
and
sbb
scas
mov
pop
inc
sub
popa
add
jne
addr16
test
loope
push
add
pop
or
mov
sti
shl
out
lods
or
cmp
lock
dec
cmp
mov
mov
cmc
imul
cmp
enter
push
jl
sub
sti
or
and
fcom
mov
mov
dec
adc
movs
sub
stos
inc
aas
imul
add
cld
aam
loope
adc
(bad)
clc
test
scas
jb
sbb
cs
pop
xchg
sbb
mov
fcomp
ja
cmp
mov
fdivrp
sub
add
(bad)
cmp
sahf
loop
loop
push
mul
jmp
or
imul
stos
xchg
and
div
or
mov
xor
mov
jns
pop
(bad)
(bad)
leave
push
jmp
outs
mov
adc
shl
push
pop
push
(bad)
lahf
movs
jne
ins
daa
dec
scas
adc
js
xchg
jl
aam
jne
fwait
mov
js
xchg
ins
mov
repnz
jno
push
adc
mov
mov
mov
(bad)
push
xchg
xor
sbb
add
and
out
retf
xlat
test
jecxz
pop
push
mov
or
clc
jmp
jmp
jmp
pop
into
adc
cwde
push
and
neg
popf
jae
sub
gs
sahf
popf
sub
mov
or
test
lods
imul
shr
fucomi
mov
test
cwde
mov
add
xchg
and
push
and
or
pop
shr
std
sub
into
pop
cmps
(bad)
pop
scas
push
pop
cmp
ss
leave
lods
shl
shl
inc
mov
mov
push
test
xor
int3
retf
stos
int
inc
test
ret
std
sub
outs
enter
enter
stos
jo
jle
(bad)
fcomi
push
out
lahf
jno
fidiv
push
shr
sub
pushf
arpl
add
mov
and
cmp
xor
pushf
adc
cmps
adc
lods
inc
pop
pop
inc
cmp
sahf
mov
aad
sbb
add
ins
in
fstp
mov
mov
mov
aad
and
addr16
cmp
mov
dec
arpl
or
xor
pop
ss
out
xchg
add
dec
jnp
xchg
imul
std
cdq
cmp
add
cli
dec
dec
jae
mov
dec
jge
daa
sub
fwait
push
aam
call
(bad)
sbb
mov
push
inc
lods
mov
jg
gs
mov
add
add
int
mov
and
jo
push
call
sbb
out
je
jmp
imul
mov
sahf
in
sub
lds
adc
mov
sub
dec
xor
cli
fisubr
inc
push
mov
push
xchg
addr16
pop
jne
into
dec
add
cmp
rcl
pusha
stos
push
test
push
rcl
jno
cli
mov
in
mov
xchg
out
jl
xlat
call
dec
or
xchg
cdq
jbe
fnstenv
sub
ret
shr
fs
js
test
dec
(bad)
jmp
repnz
retf
in
ins
push
mov
jl
int3
push
mov
call
xlat
pop
adc
mov
test
sbb
jno
sbb
test
cmp
aas
sbb
cmp
mov
mov
sub
lods
push
es
jle
enter
or
jp
dec
outs
jl
cmp
pop
pop
les
jnp
mov
pop
div
test
mov
adc
push
jge
(bad)
inc
ficom
ds
fwait
push
cli
jmp
mov
sbb
gs
cmps
pop
fisub
xchg
stc
test
or
or
or
cmps
jg
test
mov
(bad)
fcomp
clc
movs
ficomp
xor
fsub
push
add
push
mov
out
inc
pop
ins
frstpm(287
nop
sbb
mov
cmp
and
retf
daa
daa
fstp
sar
out
mov
or
aas
add
fldenv
push
pop
xor
xchg
in
fndisi(8087
pop
dec
push
ficomp
mov
mov
pop
ror
loope
add
jne
ror
sub
xchg
bound
sar
imul
lods
adc
lods
cmps
stc
push
add
xor
cs
adc
loop
fisttp
loope
push
push
xor
shl
adc
cmp
lods
adc
push
das
adc
xlat
xchg
adc
ins
daa
inc
(bad)
mov
bound
cmp
std
shl
lds
add
in
repz
mov
xor
gs
dec
push
dec
ja
fwait
aam
xor
sar
xchg
push
mov
mov
inc
call
movs
sub
add
ins
(bad)
sub
push
out
push
lods
dec
push
in
add
xor
fidiv
(bad)
add
dec
(bad)
cmp
test
fbld
and
xchg
movs
mov
xor
scas
out
dec
and
cmc
icebp
and
add
es
call
sbb
dec
mov
ins
retf
and
call
out
pop
and
sub
mov
xor
pusha
mov
adc
xor
in
cdq
scas
leave
cmp
aam
inc
jne
mov
xadd
sbb
inc
mov
sub
cld
and
cdq
push
mov
les
pop
and
or
cmp
movs
out
inc
(bad)
mov
xchg
xor
pushf
push
sar
xchg
xchg
mov
call
jmp
retf
retf
add
movs
pop
jmp
outs
cmps
sbb
cmp
(bad)
pop
mov
add
aas
(bad)
sub
jb
pop
push
lods
jae
sbb
xor
out
sub
jg
stos
gs
in
mov
push
ret
das
out
aaa
and
dec
pop
sub
push
xor
imul
xchg
jb
mov
fisub
xchg
and
addr16
shl
add
xor
in
sub
cmp
cs
xchg
movs
ins
(bad)
clc
lea
out
fs
xor
adc
xlat
sub
pop
das
pop
(bad)
jmp
aad
xchg
int3
loop
icebp
add
jmp
xchg
inc
pushf
(bad)
fsubr
lods
mov
stos
int3
jno
imul
push
jno
imul
stc
pop
(bad)
xchg
pop
mov
or
xchg
dec
push
ret
icebp
loope
jmp
ror
out
std
cmp
lods
add
inc
in
mov
imul
cmps
mov
xchg
mov
sbb
mov
(bad)
movs
pusha
das
out
pop
cmp
mov
bound
sub
inc
in
or
aas
ret
pop
dec
aaa
jns
push
add
jecxz
jp
xor
icebp
hlt
in
push
push
xor
pop
fild
adc
lea
pop
outs
mov
cmp
fwait
cmc
pop
es
inc
dec
ret
and
and
sbb
or
cmp
mov
sub
mov
call
cdq
and
push
pusha
das
int
aas
aam
rcl
test
fist
cmp
(bad)
fwait
mov
outs
in
pop
pusha
in
mov
jl
jo
pop
not
not
ret
add
adc
xchg
mov
inc
mov
sbb
hlt
cwde
cmp
jns
enter
cmp
mov
pop
(bad)
fsubr
or
mov
mov
das
inc
fcom
pop
and
fisubr
repnz
bound
jo
iret
daa
pop
aas
push
or
arpl
xchg
and
fucomip
push
mov
ss
cmps
mov
sub
pop
out
dec
adc
sti
fbld
adc
test
icebp
pop
cmp
mov
in
imul
cdq
xor
xchg
cmp
xor
lock
add
cmp
mov
retf
xchg
mov
xchg
cmps
dec
mov
xlat
in
test
jle
xor
ss
jnp
fdiv
push
arpl
xchg
int3
inc
mov
push
in
fimul
dec
mov
push
scas
or
cmp
sahf
push
xor
sub
cmps
push
loope
push
stos
lahf
xor
sar
jae
pop
mov
mov
dec
xor
stos
mov
fimul
add
test
mov
sub
mov
dec
mov
std
xor
cmps
pop
neg
cmp
rcl
repz
cmps
mov
mov
clc
fwait
xchg
pop
mov
jle
imul
sub
cmp
push
jle
mov
pop
ins
mov
xchg
xchg
sub
push
cmp
outs
pop
loope
add
pusha
pop
or
daa
ins
jns
ret
popf
je
xchg
bound
stc
std
aas
pop
mov
pusha
or
addr16
and
jle
test
pop
mov
cwde
jb
mov
sub
(bad)
jp
mov
aad
xchg
mov
retf
sbb
cmp
mov
pop
cmp
jge
jns
and
adc
push
clc
xlat
inc
sbb
mov
(bad)
jno
jae
loope
imul
mov
adc
int3
fwait
mov
inc
mov
sub
cmp
lods
mov
test
dec
add
mov
pushf
jle
inc
rcr
mov
push
lods
(bad)
dec
push
into
dec
push
lods
pushf
test
lods
aad
mov
mov
dec
stos
or
into
aas
cld
fldenv
les
adc
lds
sti
ja
int
add
push
mov
leave
retf
cmp
imul
jbe
test
xchg
mov
jmp
xchg
sub
gs
pop
and
mul
lods
loopne
leave
(bad)
mov
(bad)
push
jmp
push
xlat
or
dec
pop
ret
cmovns
add
sbb
jg
fwait
aas
lock
loop
fmul
xor
mov
xor
or
and
and
popa
push
icebp
fcmovu
adc
adc
xor
imul
push
xor
int3
sti
adc
ins
(bad)
add
fistp
dec
xlat
(bad)
cwde
mov
cmp
sbb
pop
sub
shl
adc
xor
call
push
pop
inc
mov
gs
or
das
sub
test
dec
xchg
fwait
cwde
les
in
enter
jns
jmp
mov
int3
out
lods
mov
push
jns
arpl
inc
test
mov
xchg
mov
adc
int3
test
std
sbb
shl
gs
out
pop
aam
test
add
scas
pop
jg
(bad)
aaa
cmps
mov
arpl
sahf
jmp
mov
test
rep
jnp
adc
fucompp
jns
shr
add
jp
jmp
lock
outs
push
cdq
fiadd
pop
adc
dec
(bad)
repz
jg
mov
arpl
cwde
inc
(bad)
xchg
popa
aas
mov
ret
mov
adc
sahf
add
mov
dec
jns
sub
iret
clc
ret
(bad)
pop
xchg
cdq
ja
test
inc
fcmovnu
mov
and
inc
bound
mov
pop
shl
adc
jp
add
cmp
mov
into
rcl
mov
mov
xor
push
jb
fnstcw
movs
ficomp
adc
loop
lods
inc
addr16
bnd
mov
inc
cli
pop
sbb
js
jbe
(bad)
fst
and
mov
xor
pop
cs
push
dec
sbb
test
cdq
ins
lods
(bad)
fdiv
(bad)
rcl
push
(bad)
int
mov
mov
mov
pop
shl
nop
or
cdq
mov
jp
and
pop
stc
xchg
aaa
xchg
lock
xor
int
cdq
mov
push
inc
pop
and
and
dec
sbb
jmp
jmp
mov
test
cmc
xchg
mov
mov
jl
stos
jbe
lds
in
mov
arpl
shr
es
cmps
mov
xchg
les
rcl
and
push
mov
retf
cli
cmp
iret
inc
addr16
stos
adc
and
dec
out
adc
inc
sub
dec
ss
mov
xor
jp
ins
xor
ret
ret
enter
icebp
pop
adc
clc
shl
pusha
and
out
and
cmps
aam
aam
push
gs
lods
stos
popf
dec
add
dec
sub
inc
jns
(bad)
jl
out
mov
mov
cdq
push
jbe
adc
mov
push
mov
jp
push
xor
jmp
or
rol
lds
je
push
mov
movs
cmp
pop
mov
in
inc
or
ins
mov
push
mov
add
mov
push
aam
rcl
sub
adc
daa
mov
sub
mov
and
add
aam
stc
inc
push
add
and
arpl
mov
shl
dec
js
mov
jle
sub
push
sub
xlat
adc
cmp
sub
or
imul
rol
sub
mov
mov
js
loope
mov
push
mov
jge
jbe
stos
push
fcomip
repz
ret
fcom
das
push
aas
es
and
retf
fiadd
fisubr
test
es
dec
dec
mov
push
fdiv
push
xchg
rcl
mov
mov
fdiv
mov
fiadd
jle
stos
jmp
mov
xchg
fimul
lock
push
into
push
jge
mov
lods
xor
ror
or
imul
mov
int
xor
sahf
ins
push
sub
fwait
call
movs
stos
pop
fadd
data16
sbb
sub
add
and
rcr
xchg
lahf
or
pusha
add
mov
aaa
dec
loop
or
repz
or
xchg
daa
mov
mov
sahf
mov
push
mov
movs
sbb
lahf
push
jne
xor
cmps
cmp
push
inc
adc
dec
addr16
dec
test
or
mov
jnp
push
adc
ja
aaa
arpl
or
int
aad
xor
and
or
mov
icebp
inc
lds
test
les
adc
xchg
mov
sbb
arpl
(bad)
retf
arpl
fnsave
(bad)
fldenv
mov
cld
mov
in
sub
(bad)
lds
mov
jns
in
add
push
inc
call
fadd
pop
popf
inc
adc
retf
pushf
pop
xchg
ins
pusha
cwde
fst
ja
pop
enter
hlt
mov
cmp
idiv
inc
add
pop
mov
inc
push
push
pop
or
mov
mov
mov
cmp
jmp
mov
pop
call
cs
and
gs
dec
mov
popa
push
and
pop
das
adc
mov
out
fld
push
push
pop
ja
mov
and
and
nop
ret
scas
or
mov
sub
movs
jmp
loopne
(bad)
arpl
out
add
call
fisttp
xchg
clc
jno
(bad)
sbb
cmp
jo
jp
jb
les
sub
jnp
lods
shl
cmc
out
aas
jno
sbb
sbb
js
sbb
clc
test
mov
add
jp
imul
sbb
pop
jmp
xlat
mov
adc
test
outs
mov
out
aad
mov
sub
add
pop
xchg
test
cmp
rcr
nop
fidiv
jo
mov
call
mov
das
jl
adc
jb
int
lods
cld
inc
pop
out
sar
inc
add
mov
mov
and
lods
sub
push
sbb
or
rcr
mov
xor
inc
jecxz
ins
ja
adc
pusha
jno
aad
pop
imul
jns
cld
add
jae
rcl
inc
cmps
sub
arpl
mov
popf
aad
(bad)
(bad)
fdivr
mov
nop
jmp
adc
pop
jg
mov
out
add
add
push
mov
cmp
sahf
mov
pusha
add
out
rcr
jb
in
iret
lods
inc
lods
mov
pop
stos
xor
loop
ret
ret
loopne
lods
sti
mov
bound
das
(bad)
loop
xor
sub
or
cmp
loop
mov
outs
cmps
inc
cmp
stos
or
stos
cmps
or
sar
stc
cmp
sbb
lea
icebp
outs
stos
mov
js
lahf
mov
pop
jae
outs
mov
fs
jno
sub
inc
ja
pop
add
xor
pop
outs
std
rcl
cs
outs
xchg
inc
ins
fs
cmp
mov
loope
inc
hlt
pop
(bad)
(bad)
mov
or
pop
pop
cmp
inc
(bad)
xchg
(bad)
jnp
dec
adc
mov
mov
in
and
cmps
in
or
in
push
sti
inc
sub
outs
xor
xor
sub
lods
cmps
dec
jnp
mov
pop
mov
rcl
movs
sub
adc
idiv
sub
and
xor
mov
or
add
mov
rcr
jp
sub
stc
push
sub
icebp
and
xor
test
bound
daa
cdq
fsubr
pop
cmp
mov
pop
sar
hlt
lldt
adc
sub
xchg
nop
inc
scas
push
jbe
data16
fist
or
ins
inc
inc
xor
inc
jmp
into
xor
jb
outs
loope
fcomp
fdivr
xchg
sub
cmp
push
cdq
push
ret
in
ss
pusha
xchg
sub
jbe
aaa
jp
lods
es
popa
xor
das
sub
sub
add
cmps
adc
mov
pop
out
inc
push
cld
pop
bound
imul
ins
pop
lods
ds
sbb
push
dec
ss
inc
rcl
jle
dec
cwde
jbe
push
xchg
pop
ds
pushf
test
fild
fld
lea
adc
cwde
add
adc
cmc
test
xchg
push
or
stc
test
dec
xchg
pop
icebp
aas
lods
add
mov
(bad)
push
inc
and
outs
pop
ins
push
inc
mov
mov
ret
mov
inc
mov
jge
gs
or
jecxz
or
faddp
popf
jle
pop
and
test
pusha
(bad)
jp
mov
das
fdivr
push
xchg
fmulp
loopne
jl
push
and
push
mov
dec
fisubr
call
adc
dec
aad
mov
jbe
in
popa
icebp
xor
repnz
pop
nop
(bad)
fisttp
mov
jle
(bad)
mov
sbb
mov
jp
push
inc
fs
cli
test
(bad)
test
popa
enter
xor
(bad)
cmc
std
ins
int3
daa
sbb
xchg
adc
xchg
mov
sbb
movs
sbb
mov
xchg
jle
sbb
arpl
and
mov
sbb
ins
add
popa
xchg
stc
neg
ficom
xchg
or
mov
scas
clc
push
lods
and
loope
call
mov
mov
retf
jl
add
ja
sub
jne
push
inc
adc
(bad)
inc
push
aaa
or
rcr
mov
(bad)
and
fwait
test
lods
mov
pusha
pop
push
dec
add
jbe
sub
add
ins
dec
cdq
movs
mov
mov
fs
imul
mov
xchg
mov
in
rcl
(bad)
pop
loopne
xor
popa
call
sbb
push
xchg
pop
add
ror
mov
js
out
sbb
aad
and
push
mov
pop
cld
repnz
imul
inc
jo
mov
mov
xlat
test
ss
aaa
outs
sbb
add
repz
sub
push
mov
add
repnz
enter
mov
sbb
mov
xchg
inc
inc
gs
gs
icebp
mov
dec
(bad)
imul
and
mov
gs
adc
in
(bad)
mov
adc
retf
xchg
popf
pop
xchg
ror
sbb
popf
xor
push
loop
pusha
sub
(bad)
fisubr
inc
sbb
and
xor
stc
mov
imul
fiadd
cli
out
sti
dec
dec
int3
cmp
in
mov
icebp
push
je
repz
add
in
jmp
test
pop
sub
enter
in
add
pop
add
addr16
cmp
call
sbb
jmp
jo
pushf
jl
ror
scas
mov
sti
inc
or
mov
and
cmp
jmp
pop
shl
xchg
lods
pop
mov
les
fcom
xor
int
push
push
gs
fist
loop
mov
xor
fisttp
push
push
jl
mov
retf
inc
scas
fsubr
idiv
cmp
adc
or
xchg
(bad)
push
adc
jmp
mov
ins
xlat
ja
push
push
mov
enter
lods
dec
data16
fdiv
push
sbb
xchg
leave
pop
js
aaa
popf
mov
and
ins
popa
cli
xchg
ins
xor
pop
pushf
bound
movs
push
(bad)
mov
jmp
dec
mov
ja
xchg
adc
sub
adc
inc
neg
dec
xchg
mov
mov
mov
cmp
xchg
stos
test
rcr
adc
and
pop
movs
ins
push
mov
cmp
loope
test
lahf
ret
xchg
or
(bad)
push
jbe
mov
pusha
dec
cld
mov
push
jmp
mov
mov
int
gs
cmps
pop
std
dec
push
add
mov
sub
cmp
jp
and
ret
sahf
pusha
das
ret
mov
sub
cld
push
mov
bound
mov
jge
pop
or
bound
xchg
mov
xchg
ret
or
fdiv
cdq
xor
sub
adc
enter
sbb
popf
mov
ins
push
pop
(bad)
mov
xor
dec
mov
adc
mov
call
ss
or
shl
xchg
bound
loopne
jno
add
(bad)
std
ret
jge
in
pusha
imul
sub
mov
dec
adc
jbe
(bad)
push
mov
rcl
inc
test
mov
(bad)
stos
xchg
std
pop
arpl
fmul
mov
callw
into
int
pop
dec
xor
rol
in
inc
or
pop
int3
js
popa
sub
jecxz
ret
jmp
or
jge
cmp
mov
popa
leave
push
test
cmps
(bad)
pop
popf
inc
jmp
add
pusha
and
(bad)
xchg
les
sti
push
inc
cld
pop
stos
push
jle
pop
adc
ror
into
sbb
dec
inc
arpl
bound
leave
out
outs
popf
fld
cld
adc
jns
mov
ds
jbe
scas
in
adc
cld
popa
cmp
xor
mov
jge
cld
and
jmp
pop
scas
push
inc
or
xchg
push
sbb
ja
sbb
imul
and
push
fstp
test
xor
xchg
fldenv
call
add
(bad)
mov
or
out
push
in
and
scas
cmp
scas
leave
out
mov
sub
mov
test
loop
cmp
add
jmp
neg
adc
mov
(bad)
cwde
lea
(bad)
retf
loop
fsub
jmp
loope
inc
xlat
inc
pop
sti
pop
push
leave
fbstp
xlat
(bad)
pop
(bad)
mov
pop
sub
mov
inc
les
dec
mov
loopne
mov
ds
sub
or
call
add
aad
dec
mov
stos
and
test
adc
adc
loopne
jmp
jae
outs
fadd
add
push
cs
movs
add
fmul
popa
mov
cmp
jo
mov
cmp
(bad)
and
jb
adc
pop
pop
xor
aas
(bad)
push
cmps
and
or
or
mov
out
aaa
and
(bad)
ins
or
jle
popa
and
call
xchg
sbb
cmp
and
fist
inc
jnp
es
cmp
fcomip
ins
sti
loopne
jb
ret
add
sahf
test
inc
xor
stos
cwde
dec
xor
rcl
outs
jl
mov
shl
test
cmps
cmp
sub
inc
push
push
bound
sub
mov
jge
movs
popf
sbb
push
ror
movs
in
add
shr
jo
movs
mov
ins
pop
cmp
mov
jl
jnp
or
mov
mov
es
xchg
push
stos
popa
dec
push
xor
push
mov
xor
cmp
push
dec
xor
sub
punpckhdq
bound
xor
rcr
ins
xor
cmp
xor
sahf
mov
mov
cdq
push
in
xor
inc
push
xor
or
inc
mov
lods
or
addr16
in
adc
lahf
arpl
mov
add
pop
and
cmp
popf
shl
mov
jns
mov
test
jp
or
dec
(bad)
jb
(bad)
or
jmp
adc
xlat
call
test
jle
inc
dec
shr
cmps
iret
fistp
and
pop
je
jb
or
scas
iret
(bad)
jmp
inc
and
mov
mov
cdq
jl
sbb
jecxz
dec
sbb
cmps
out
stc
push
fwait
xchg
push
repz
pop
adc
lea
fsubr
jo
loop
add
jmp
mov
mov
in
enter
mov
mov
push
lahf
dec
adc
test
inc
inc
ins
push
jp
dec
aam
pop
out
push
(bad)
(bad)
inc
popf
xor
jnp
(bad)
ss
out
mov
mov
add
enter
or
xor
loop
push
int3
mov
(bad)
fwait
ja
push
jmp
lods
inc
das
cmps
shl
xor
cmp
in
sbb
loopne
jno
test
pusha
rol
int
xlat
mov
(bad)
jl
daa
or
call
pusha
cs
and
ret
push
push
sbb
fistp
enter
nop
adc
loope
jmp
dec
add
pop
dec
mov
(bad)
jl
stos
dec
lahf
cld
push
ins
into
das
outs
sbb
inc
mov
imul
retf
cmp
les
sub
inc
inc
xor
sub
dec
les
aad
cmc
gs
xor
sbb
cmp
jg
test
jecxz
push
aaa
rcl
(bad)
xchg
jne
add
lock
mov
sub
pop
pop
mov
ret
push
sub
shl
pop
adc
fcom
cmp
test
daa
jge
fmul
xchg
test
pop
sbb
lds
pop
jns
xchg
ret
cli
and
mov
sub
mov
dec
mov
inc
out
dec
mov
lock
inc
or
cmp
jmp
jl
xor
mov
and
jnp
jmp
pop
pop
ret
aas
je
imul
(bad)
sub
mov
pop
test
(bad)
rcr
mov
jns
adc
pushf
jno
mov
sti
cmp
inc
stos
jb
pop
sbb
inc
jge
or
mov
je
bound
(bad)
(bad)
mov
inc
test
outs
neg
mov
retf
loopne
loop
bound
sar
test
inc
adc
cmc
out
stos
in
sahf
retf
call
xchg
sub
jo
aaa
jmp
repnz
enter
mov
imul
xchg
push
mov
outs
(bad)
or
ins
inc
inc
pop
jno
int3
call
in
and
addr16
mov
xor
mov
mov
cli
fisubr
(bad)
jle
and
sub
test
mov
pop
mov
repz
arpl
jb
inc
pop
pop
push
aam
sub
pop
gs
push
push
mov
addr16
les
pop
cs
fidiv
add
jno
pop
cmps
mov
pop
(bad)
push
sub
lds
aam
jl
sub
mov
mov
mov
test
or
or
int
movs
das
repnz
jno
ret
movs
or
sbb
rol
adc
frstor
dec
xchg
ins
mov
mov
stos
scas
daa
cmps
fs
sbb
and
inc
mov
push
imul
pushf
pop
push
scas
dec
or
out
int3
or
call
mov
pop
into
mov
or
mul
jl
cdq
mov
inc
mov
cmp
(bad)
dec
jb
xlat
adc
retf
leave
popa
mov
cmp
xchg
mov
and
imul
repz
jmp
loopne
in
and
add
in
sti
leave
jecxz
mov
add
jmp
popf
neg
mov
pop
jle
xlat
add
or
push
jae
xor
sti
or
mov
mov
loop
imul
(bad)
jmp
pop
inc
repnz
jo
aad
jmp
aad
sar
xchg
ss
fimul
jbe
sahf
xor
cmc
aam
sbb
adc
ret
cmp
sbb
adc
adc
xor
test
add
cmp
call
adc
ror
sti
push
cmp
leave
push
js
mov
inc
fwait
leave
adc
inc
mov
aas
pop
push
inc
xchg
push
inc
dec
pop
fmul
aaa
pop
std
push
cdq
mov
ret
jecxz
cli
es
dec
sbb
fimul
jnp
in
shl
push
adc
rol
jmp
dec
cmp
je
or
test
popf
adc
xchg
xlat
inc
xchg
stc
push
call
mov
adc
leave
sti
cwde
jmp
icebp
xlat
jmp
mov
lods
sar
inc
fwait
inc
push
cmp
or
in
add
push
mov
cmp
sub
sahf
fsubrp
out
es
jp
xchg
mov
sub
xor
repnz
cmp
adc
adc
jae
es
mov
add
push
aad
fdivr
sti
sti
sbb
mov
stc
(bad)
pop
jae
imul
out
lods
cld
gs
jge
cmc
cs
push
jp
out
pusha
pop
loope
std
dec
jge
addr16
cli
pop
mov
dec
data16
jae
(bad)
es
ds
and
inc
fsubrp
or
mov
lods
jnp
or
pop
push
popf
nop
js
adc
sahf
loop
jno
pop
mov
adc
add
std
mov
cmc
cmp
lock
out
lds
aaa
xchg
cld
mov
pop
cmp
int3
cli
jae
push
or
add
push
mov
sub
xchg
les
inc
ret
mov
cli
dec
movs
jmp
push
out
push
or
add
leave
mov
sub
fist
stos
pop
xor
rcr
scas
js
test
mov
js
sbb
inc
loope
cmp
add
repnz
mov
jno
jnp
pop
dec
and
std
loopne
in
jg
jp
test
cdq
mov
push
sub
mov
dec
cmp
int
shr
xchg
xchg
mov
mov
aam
cli
push
sub
adc
lods
pop
inc
mov
jnp
cld
nop
rcl
xchg
xor
lods
repz
imul
or
pushf
icebp
inc
jle
retf
push
sbb
sbb
cmps
mov
jae
cmp
jae
test
mov
(bad)
mov
pop
jmp
mov
xchg
xchg
mov
jb
fimul
in
xchg
stos
jmp
mov
aaa
loope
add
test
mov
ror
dec
movs
test
jo
les
shr
xor
dec
mov
xor
push
pop
not
push
xor
imul
clc
in
cs
lahf
pushf
cs
push
bound
adc
push
daa
xchg
mov
adc
cmc
and
fild
int
add
sbb
add
mov
test
or
cmc
(bad)
mov
mov
imul
in
icebp
or
bound
xlat
je
pop
retf
inc
push
test
and
push
or
push
dec
pop
arpl
sub
nop
pop
push
lahf
jmp
pop
call
add
(bad)
mov
cs
push
vshufps
(bad)
gs
adc
es
adc
dec
imul
push
xchg
sub
jbe
push
pop
test
sbb
adc
sbb
arpl
and
out
push
xor
push
aas
push
aam
mov
inc
sbb
int3
add
sub
shl
out
push
mov
add
pop
pop
pop
push
xchg
sub
xchg
adc
rcr
cs
adc
mov
xor
push
push
aam
jmp
cli
inc
daa
pop
mov
loopne
jae
repz
sbb
gs
dec
add
mov
in
call
shl
jg
push
nop
rol
sub
lods
aas
in
add
mov
test
push
jp
push
sti
push
sbb
adc
push
out
sbb
jbe
jmp
shr
mov
push
mov
fild
scas
cld
dec
pop
dec
sbb
push
add
clc
xchg
int3
or
mov
jp
add
cmp
(bad)
sahf
cmp
outs
iret
test
xchg
arpl
scas
in
(bad)
pushf
adc
pop
mov
arpl
aam
mov
setbe
cmp
gs
adc
int3
call
mov
adc
ja
test
and
aaa
add
jns
fdivr
(bad)
xchg
idiv
cwde
outs
push
outs
arpl
mov
inc
adc
adc
jbe
cmps
inc
and
jns
stos
push
psubw
cmps
js
pop
dec
sahf
cdq
jle
cmps
jmp
or
or
pop
lds
repnz
dec
ror
xchg
pop
sub
sub
push
test
sti
jge
movs
cmps
std
pop
add
pop
pop
in
ins
fwait
rol
imul
pop
sbb
inc
pop
inc
adc
add
inc
add
les
adc
out
int3
std
out
sbb
fs
test
imul
test
mov
pop
mov
outs
push
fimul
fcomp
push
das
aad
test
aas
jae
pop
add
loope
pop
data16
ss
push
pop
loopne
cmp
sbb
ret
or
repnz
sbb
arpl
in
dec
int3
mov
ins
inc
repz
jp
(bad)
mov
(bad)
push
xor
repz
into
neg
iret
lock
push
stos
movs
scas
into
loope
xchg
inc
jno
sub
xor
cmc
jg
push
stc
jne
dec
xchg
pop
push
xor
jbe
aaa
push
movs
sbb
or
push
fsubr
ja
pop
dec
jecxz
pop
or
adc
jo
(bad)
cmp
rcl
jg
mov
mov
dec
test
fwait
and
fldenv
pop
xchg
in
pushf
add
test
jne
mov
sti
outs
cs
xor
push
mov
sub
and
mov
xor
out
pop
fdivr
fnstsw
icebp
sub
push
(bad)
sub
aad
sub
fs
adc
pop
leave
xor
dec
dec
les
es
cmp
iret
mov
sub
sub
cmp
jg
push
pop
mov
gs
push
mov
jge
mov
pop
repz
imul
push
das
imul
clc
sbb
ret
cmp
movs
leave
xchg
enter
jno
adc
pop
pmulhuw
jno
rol
fist
and
ret
and
cmp
pop
adc
push
addr16
adc
jmp
xchg
in
stos
imul
mov
push
fcomp
jmp
or
addr16
push
call
push
js
cmp
cld
mov
adc
pop
les
shl
push
fwait
adc
ret
mov
and
inc
retf
adc
mov
call
inc
jmp
and
hlt
fdiv
into
aas
push
out
ds
mov
ja
into
push
jno
hlt
push
push
mov
daa
imul
mov
dec
je
xor
mov
lods
xchg
mov
jne
xor
mov
xchg
gs
in
mov
fnsetpm(287
push
lahf
or
push
sahf
dec
ins
test
xor
pop
add
jmp
inc
xor
jb
xor
add
jbe
fist
fiadd
sub
push
mov
test
loopne
(bad)
imul
pop
inc
mov
sbb
(bad)
and
arpl
cmp
xchg
aam
xor
fnsave
and
retf
jl
jnp
or
push
sub
clc
cmp
and
sub
pop
add
jmp
sub
icebp
fldcw
mov
push
mov
loope
aaa
mov
add
push
pusha
or
sahf
and
pop
inc
dec
shl
dec
add
xchg
cwde
inc
retf
cdq
dec
mov
cmp
jmp
xchg
mov
es
fcomi
gs
fs
ret
xor
xor
mov
sbb
dec
pusha
dec
mov
push
sbb
aam
(bad)
sub
push
pushf
pop
sbb
mov
test
pop
and
add
retf
pop
fsubr
icebp
mul
int3
mov
mov
add
lahf
mov
psrld
icebp
mov
in
je
pop
dec
movs
(bad)
js
jmp
cli
mov
test
add
scas
dec
jno
popf
jl
fisubr
loop
cmps
jmp
dec
mov
jle
out
xchg
daa
in
jbe
pop
repz
test
pop
push
mov
cmp
mov
add
into
jle
pusha
xor
and
cdq
adc
cmp
icebp
jle
in
ins
adc
or
out
(bad)
jl
movs
cli
pop
daa
xor
sbb
cmp
les
jle
scas
lds
std
mov
push
push
rcl
pop
pop
jl
sbb
arpl
add
es
mov
jns
pop
jbe
xor
cmp
loopne
icebp
test
outs
push
mov
push
push
lods
stc
xor
lods
test
adc
sbb
data16
cmp
jg
or
in
aad
cmp
sahf
cmps
es
jmp
xor
jecxz
repz
pop
popf
mov
jnp
fwait
dec
pop
adc
lods
push
cmp
das
pusha
aad
and
xor
pop
out
sub
jo
popa
xchg
sar
sahf
mov
sbb
push
fwait
scas
xchg
pop
add
dec
push
mov
push
ins
sti
sub
loope
je
ss
mov
adc
rcr
add
fdiv
pop
adc
mov
xchg
loope
les
pushf
add
mov
push
lea
sahf
inc
cmc
gs
jle
jl
mov
mov
cmps
cli
inc
xlat
fidiv
sub
jb
dec
sub
mov
rol
adc
jp
leave
cmc
pop
cdq
aaa
bound
dec
ins
sub
aad
mov
mov
jg
xchg
icebp
sbb
xor
ret
sub
(bad)
out
cli
scas
xor
(bad)
lock
or
push
out
dec
bound
ficomp
xlat
dec
and
mov
xchg
sbb
scas
add
sub
add
xor
outs
aad
dec
fs
nop
push
mov
or
ret
les
in
push
ret
xor
ror
mov
xor
mov
push
jecxz
aaa
ficomp
mov
inc
pop
adc
or
sbb
push
loope
or
popa
adc
mov
dec
popa
jb
inc
test
mul
and
xchg
or
cmp
sub
xchg
push
scas
mov
push
jmp
ds
stc
push
jmp
xor
movs
sahf
xchg
push
mov
cmp
inc
fst
jno
jno
cmc
mov
in
shr
arpl
int
mov
test
(bad)
rcr
ja
inc
or
imul
ret
repnz
mov
mov
(bad)
out
or
mov
xchg
jecxz
pop
and
or
push
jg
cmp
xor
mov
mov
cwde
jmp
ffree
ins
daa
in
in
test
sub
outs
nop
mov
das
xor
sub
scas
mov
add
inc
outs
inc
pop
pop
xchg
push
mov
test
mov
add
mov
mov
(bad)
addr16
pushf
xor
sub
or
popa
dec
jne
mov
xchg
push
(bad)
cli
popf
inc
pop
dec
ret
call
out
inc
cmp
dec
movs
mov
and
daa
xchg
jg
ret
(bad)
aaa
movs
mov
daa
outs
test
xor
lahf
loop
cdq
and
in
cli
into
popf
xor
xor
rol
jb
enter
pop
in
mov
iret
loopne
and
mov
lods
sub
dec
call
inc
cmp
movs
adc
pop
call
and
sbb
enter
add
adc
add
inc
pop
pop
outs
orps
cmc
int
dec
push
xor
or
(bad)
mov
int
pop
popa
outs
pop
pop
sti
(bad)
or
xchg
xor
mov
ret
mov
sub
icebp
push
icebp
(bad)
retf
xor
adc
xor
push
not
dec
cmp
push
call
dec
imul
dec
dec
dec
sbb
call
imul
adc
cmp
stos
retf
in
xor
lahf
lods
pop
jnp
cmp
cmp
cdq
dec
mov
lock
push
in
xor
jae
gs
pop
inc
(bad)
imul
cmp
lea
xlat
inc
and
and
inc
imul
and
aaa
stos
lock
or
mov
popf
aas
xchg
push
out
mov
sub
fcomp
je
mov
jmp
or
sub
leave
fdivr
aaa
pusha
in
test
idiv
mov
shl
pop
les
mov
cmp
sub
neg
inc
cmps
add
mul
daa
in
hlt
mov
repnz
jp
dec
rcl
fnstsw
addr16
cmp
jbe
mov
adc
sti
daa
sbb
scas
pop
xor
xchg
lds
jns
enter
push
inc
loop
jmp
inc
mov
leave
out
jmp
aam
lods
out
add
mov
pop
aas
div
ds
pop
ins
ins
sub
mov
(bad)
mov
mov
repz
rcr
xor
pusha
call
fs
inc
popa
push
add
adc
imul
push
bound
sub
mov
mov
jnp
out
mov
sub
pop
add
into
adc
jb
push
add
sub
rcr
repnz
mov
mov
mov
inc
inc
shl
(bad)
imul
lahf
jno
stc
jp
sub
adc
mov
loop
push
mov
les
jno
pusha
adc
mov
retf
push
jne
adc
sub
es
test
cmp
ss
push
je
dec
in
mov
fucompp
and
inc
out
mov
test
mov
xchg
sar
sahf
cwde
movs
mov
push
pop
and
cmp
push
mov
mov
loop
cs
outs
inc
sbb
sub
cmps
ss
outs
test
xor
or
std
test
ss
aad
dec
repnz
inc
in
loopne
mov
or
mov
loop
mov
cmp
sbb
popf
lahf
mov
xchg
jmp
mov
cdq
or
mov
out
add
xor
jnp
push
jno
push
int
ss
sbb
add
cli
fwait
ss
adc
pop
ja
shl
les
mov
pop
cmps
lea
add
sbb
sub
cmps
outs
test
adc
add
jecxz
retf
mov
cmps
sub
shl
or
pop
int
in
jp
scas
icebp
test
xchg
jo
aad
mov
ror
and
std
movs
mov
add
movs
push
adc
xor
sub
push
sbb
ds
mov
add
xchg
fisttp
mov
loop
movs
xor
cwde
(bad)
push
sbb
cmps
and
dec
push
jle
sub
xor
cld
mov
sub
cdq
rcl
mov
mov
(bad)
aad
dec
push
enter
pop
sub
scas
out
fcom
mov
mov
nop
cmps
sub
mov
repz
repz
mov
cmp
mov
xchg
int3
scas
pop
or
ins
xor
mov
cmp
mov
(bad)
jae
test
aaa
outs
fst
into
movs
into
test
dec
and
scas
mov
cmps
mov
add
jnp
mov
push
test
inc
mov
mov
out
mov
loopne
xchg
sbb
jo
cmp
pop
adc
stos
popf
mov
dec
jle
shr
dec
popf
dec
inc
sub
lahf
(bad)
fsubr
mov
mov
int3
mov
(bad)
mov
lock
call
fsin
push
ficom
inc
xchg
xor
jl
loope
dec
xchg
fiadd
les
jnp
div
test
push
repnz
or
mov
imul
in
cmp
cli
lock
cmp
pop
adc
adc
inc
(bad)
xchg
les
xchg
dec
fs
loopne
push
movs
fisub
rsm
std
push
daa
lock
jae
lea
adc
add
ins
jge
mov
pop
xor
sbb
mov
mov
(bad)
sbb
imul
scas
jae
mov
in
js
cmp
sbb
cld
xchg
shl
mov
jae
je
jae
cmp
mov
aaa
call
pop
jp
inc
cmps
jae
adc
fmul
push
mov
aaa
cmp
cli
mov
cdq
jp
lods
and
int
mov
(bad)
addr16
nop
gs
dec
sub
fbstp
mov
call
nop
imul
sub
out
mov
out
fidiv
clc
and
cmps
mov
mov
enter
pop
call
mov
add
xchg
dec
ss
and
cli
lea
mov
push
rcl
lahf
mov
lods
inc
push
dec
ss
cld
cmps
push
pop
fisubr
jbe
mov
pop
int3
test
sub
dec
adc
inc
setge
sub
mov
mov
pop
in
cmps
mov
sbb
iret
ins
push
outs
cmp
jnp
es
inc
cmp
ret
in
out
pop
stos
arpl
arpl
or
fcomp
push
xchg
mov
jo
ret
js
dec
jl
mov
lahf
adc
jp
and
ds
jbe
cwde
mov
mov
sbb
call
cmp
aad
pop
mov
mov
add
mov
jnp
mov
inc
mov
stos
sub
lods
loope
fnsave
xchg
cdq
retf
fsubr
retf
out
jg
dec
mov
inc
clc
dec
dec
call
loope
pop
or
mov
test
jo
ins
jle
xor
xor
call
nop
dec
dec
jl
mov
rcl
mov
push
fmul
pop
popf
pop
dec
cmp
int3
mov
fmul
sbb
inc
jae
inc
mov
push
imul
(bad)
xor
test
dec
xchg
xchg
xchg
mov
mov
mov
jae
mul
xlat
inc
popa
add
jmp
shl
rcr
(bad)
pop
sbb
pop
data16
cmps
fs
nop
and
mov
sbb
sbb
fsub
loopne
daa
sbb
dec
jns
add
loope
adc
xlat
(bad)
push
mov
popf
inc
daa
fwait
rol
cmps
pop
ss
aas
mov
mov
jle
mov
mov
sbb
or
inc
mov
pop
icebp
cli
push
push
push
dec
ror
mov
sub
mov
mov
cmp
xchg
adc
mov
stos
dec
xchg
or
mov
push
out
arpl
xchg
sbb
xor
jns
mov
pop
push
push
cmp
push
test
shr
jmp
not
in
or
enter
sbb
pop
popa
lock
daa
aad
int3
or
lods
and
jne
inc
add
out
fcom
fdivr
add
xlat
adc
push
lods
pop
pop
pop
adc
lock
or
and
movs
or
shr
or
lock
jle
pushf
xor
out
imul
mov
jno
or
fst
lahf
std
mov
inc
fnstsw
dec
add
fidivr
sbb
(bad)
jb
mov
outs
jb
and
outs
arpl
outs
jl
dec
push
sbb
mov
adc
cmp
push
popf
push
ret
xchg
mov
adc
mov
push
xchg
cmp
push
xchg
mov
aad
enter
popf
xor
mov
movs
shr
sbb
daa
sub
push
inc
movs
retf
mov
test
inc
aad
ror
int
imul
mov
sbb
xchg
fist
jle
and
shr
pop
(bad)
pop
ins
mov
lods
test
push
aam
xor
arpl
mov
and
pop
mov
xor
sbb
mov
sub
out
sbb
aad
mov
in
mov
mov
mov
adc
mov
pop
aad
mov
sbb
jmp
xlat
mov
xlat
xor
(bad)
mov
xor
gs
out
jge
lea
in
(bad)
aad
xor
fbld
cmp
mov
mov
loope
arpl
in
sbb
rcr
and
inc
adc
mov
imul
push
adc
mov
int3
xchg
jge
ret
shl
ret
sub
xchg
mov
inc
xchg
jb
daa
xor
mov
out
inc
scas
test
and
xor
mov
imul
bound
fnstsw
repnz
shl
outs
and
adc
xchg
cld
addr16
inc
ret
ins
jle
test
fst
test
lds
push
out
ficom
loopne
and
xchg
push
add
pushf
xchg
std
pop
pop
popf
scas
popa
fiadd
mov
addr16
paddq
mov
sti
jp
sub
lahf
nop
xchg
jns
loope
fld
adc
lahf
jge
retf
pop
jl
addr16
xor
and
popf
aaa
mov
aad
cmp
push
lds
not
dec
retf
addr16
cdq
dec
jne
cs
fldcw
int3
je
arpl
mov
in
leave
jb
and
jno
std
jge
pusha
sbb
inc
cmp
push
sahf
cmp
not
inc
(bad)
sub
cmp
stos
or
popa
inc
cmp
cmp
dec
cmp
push
jl
and
inc
lds
cmp
push
mov
adc
jne
scas
mov
add
repnz
es
cmps
cmp
mov
lea
pop
stc
cmps
in
mov
push
popa
xor
mov
mov
sbb
push
inc
data16
jne
jle
lahf
and
nop
jnp
mov
test
or
shl
dec
stc
sahf
lods
sub
mov
addr16
sub
pusha
sub
arpl
and
xor
mov
jge
into
call
movs
pusha
out
sub
ror
imul
sbb
dec
pop
mov
stos
adc
push
xchg
mov
fst
xchg
cmp
push
push
jp
mov
mov
and
sbb
push
jo
mov
mov
fwait
jmp
jge
shl
fdiv
jbe
loopne
inc
int3
add
xchg
cwde
aas
mov
dec
lods
cld
sti
and
jl
arpl
sub
push
and
aad
xchg
fnstcw
dec
inc
int3
xchg
xchg
push
sub
iret
xchg
lea
pop
mov
jmp
add
ss
fst
push
cmp
je
int3
inc
dec
leave
jge
cli
xor
or
inc
or
and
xor
adc
in
xor
dec
repnz
clc
(bad)
mov
out
cli
outs
pop
stos
inc
or
pop
test
adc
pop
pushf
mov
xchg
dec
adc
pop
fistp
sbb
cmp
adc
mov
pextrw
(bad)
adc
or
sub
push
xchg
push
mov
dec
popf
test
mov
mov
jns
out
in
xchg
icebp
nop
jns
jp
push
or
mov
sbb
test
sahf
paddq
ret
arpl
outs
mov
pop
and
adc
sahf
pop
xor
inc
mov
lods
inc
outs
xor
(bad)
fistp
(bad)
repz
fwait
daa
sbb
pop
cmp
out
mov
xchg
cmp
add
jmp
sub
add
mov
not
pop
and
xchg
jnp
aad
retf
ss
push
pop
punpcklwd
fs
rcl
inc
push
xlat
mov
inc
add
fcom
or
mov
xchg
cwde
or
js
mov
dec
adc
and
mov
cli
div
and
push
cld
inc
movs
out
dec
ins
ror
and
jae
cmps
add
xlat
fnstsw
cld
rcl
loopne
xchg
loope
enter
jne
and
inc
sub
jecxz
jmp
xor
pop
call
mov
icebp
lahf
inc
sub
dec
xchg
jl
jns
sbb
or
xor
aas
lock
cmp
push
in
out
sbb
or
mov
inc
pushf
xchg
mov
fxch
ret
jns
or
jmp
cmovp
push
sub
pop
jp
outs
out
jg
add
les
retf
mov
fst
mov
xchg
cmp
jae
dec
cmp
mov
xor
sub
add
pushf
mov
and
dec
mul
xchg
inc
mov
inc
movs
std
cwde
push
inc
or
cld
sub
cmp
fmul
(bad)
jbe
push
imul
pusha
aaa
rcl
sahf
outs
dec
test
les
and
xchg
arpl
cli
add
add
mov
call
rol
ficomp
xchg
sub
or
push
mov
xor
push
in
data16
push
jnp
mov
lods
push
and
mov
popa
sub
(bad)
loop
dec
pop
inc
out
xor
mov
mov
sbb
pop
addr16
mov
cmps
sub
hlt
pop
into
inc
iret
sub
js
test
mov
push
clc
push
mov
das
and
fwait
xor
lods
call
adc
cmc
shl
int3
dec
xchg
cwde
adc
stos
xchg
repnz
dec
jl
dec
sub
adc
cwde
icebp
test
mov
pop
retf
jno
pop
xchg
shl
test
retf
xlat
push
rcl
jp
mov
inc
sbb
inc
es
cdq
xchg
mov
in
mov
jo
jle
push
dec
stos
dec
stos
icebp
xchg
inc
mov
push
jae
rcr
lods
es
push
iret
push
xchg
inc
loop
out
inc
mov
push
or
cwde
fnsave
mov
sub
ja
mov
test
aaa
xchg
pop
push
pop
loop
test
or
or
xor
pop
dec
cwde
mov
movs
xor
aaa
mov
dec
jmp
jmp
adc
adc
add
adc
cmps
pop
sbb
ins
jp
pop
cli
xchg
sub
add
out
cmp
bound
mov
xor
fnstenv
adc
ror
gs
ja
jl
adc
mov
sbb
pop
fisttp
xchg
(bad)
rol
shl
daa
out
mov
js
adc
sar
ins
ss
adc
push
hlt
ja
and
push
fcom
addr16
pop
jmp
cdq
fnsave
mov
xor
xchg
push
push
dec
inc
je
imul
cmp
sti
xchg
aad
pmulhuw
outs
aam
xlat
or
sub
jbe
leave
jb
hlt
xchg
pop
xor
sbb
inc
in
cmps
pop
jb
dec
repz
adc
dec
jno
push
cmp
and
inc
push
out
inc
xor
mov
(bad)
mov
inc
das
std
ss
in
cmc
adc
add
inc
and
xor
sub
jne
mov
sub
push
pop
push
mov
cs
into
fs
jl
out
test
mov
les
add
aas
lea
sub
or
jmp
sbb
add
das
lock
add
repnz
scas
jl
stos
pop
push
sub
and
scas
or
push
adc
addr16
push
fld
push
test
imul
div
push
enter
mov
stc
mov
leave
push
or
and
inc
add
test
adc
out
jmp
imul
lahf
mul
call
inc
adc
(bad)
cmp
push
out
std
mov
cmp
sub
mov
cmp
push
scas
cmp
into
push
sbb
ror
xor
loope
inc
lock
(bad)
push
les
cld
stc
into
clc
sbb
jge
lahf
xor
sub
inc
and
inc
xchg
adc
ret
in
ss
clc
sar
xchg
cmp
out
sti
inc
div
ds
mov
sbb
xor
cwde
inc
cmp
xchg
pop
out
sub
in
mov
loop
inc
fcom
lods
mov
inc
imul
fist
sbb
call
mov
cmps
xchg
test
mov
inc
inc
push
push
cmp
jg
out
shl
xlat
aaa
sbb
pushf
in
sub
sbb
push
xchg
jge
xlat
out
and
lods
jbe
aad
push
dec
or
aad
push
dec
shl
or
fnstsw
fcmovnu
or
fwait
jg
mov
pop
addr16
sub
cmp
mov
or
xchg
dec
xchg
xor
pop
sub
frstpm(287
in
mov
jns
sub
rcl
mov
cmps
pop
rcl
jg
popa
push
cld
ror
add
mov
hlt
push
pop
cmp
add
or
sbb
fucom
lea
repz
or
push
inc
ror
jle
sub
push
push
imul
jg
sbb
mov
mov
pop
jb
mov
mov
cmp
push
adc
leave
xchg
jne
imul
out
test
pop
ds
into
imul
jmp
sub
push
pop
and
ss
pop
les
push
pop
lds
call
in
bound
xor
in
call
push
mov
mov
test
or
inc
adc
jge
enter
jg
or
mov
hlt
shl
or
add
jnp
add
xchg
in
mov
sbb
stc
dec
sbb
pop
pop
sbb
sbb
dec
outs
sbb
push
inc
repz
inc
add
mov
push
stos
xchg
gs
call
mov
mov
xlat
mov
fisttp
stos
sbb
pop
pop
repz
adc
ret
stos
cdq
cmp
cmps
fidivr
mov
mov
cmp
ficomp
aam
and
bound
sub
inc
call
jns
cmc
cmps
scas
jg
data16
loop
and
in
fiadd
xchg
call
loopne
jno
pop
mov
sub
jmp
test
ins
in
push
sbb
mov
data16
test
cli
scas
ins
ret
mov
sar
mov
or
xchg
mov
inc
cld
mov
cli
arpl
sti
jecxz
std
pop
and
stc
sbb
test
cmc
test
lods
add
(bad)
(bad)
shr
shr
div
(bad)
jmp
jge
(bad)
push
test
mov
out
jae
stc
in
jge
xor
cmp
mov
pusha
scas
fidiv
fild
lahf
out
pop
enter
lahf
rol
sar
dec
cli
mov
mov
sbb
sbb
imul
sti
push
and
cmps
stos
xor
xchg
addr16
icebp
ficomp
jo
stos
das
mov
and
stc
(bad)
pop
mov
dec
jne
mov
cmp
test
jae
shl
and
lock
cmc
mov
cmp
cmp
pop
xor
arpl
sbb
pushf
push
out
(bad)
sub
(bad)
ror
ins
cmp
jge
inc
jg
call
ins
push
push
mov
shl
iret
jmp
addr16
jle
mov
ss
adc
jnp
jo
jbe
adc
jmp
pop
mov
retf
sbb
arpl
popa
es
shl
xchg
cs
icebp
push
fcmovnbe
fwait
sub
int3
jns
push
adc
pop
loop
mov
pusha
mov
mov
cld
dec
in
in
pop
in
jmp
movs
pop
retf
pop
(bad)
and
inc
pop
bound
cld
sub
jae
es
mov
mov
jns
mov
(bad)
cmps
rcr
mov
fisubr
mov
xor
into
xor
pop
retf
lods
cld
js
mov
cli
mov
fisub
mov
iret
adc
idiv
leave
into
xchg
adc
iret
inc
xchg
pushf
xchg
and
ins
xor
jmp
and
pop
inc
sbb
fst
gs
lods
inc
fild
cmp
test
xchg
add
sub
xor
rcr
outs
and
retf
dec
and
inc
adc
std
add
je
cdq
jbe
ins
sbb
inc
jge
ins
pushf
mov
bswap
or
jp
std
mov
(bad)
adc
rcr
cwde
pop
dec
or
inc
loopne
jae
or
pop
jmp
bound
jne
or
or
sbb
popa
ficomp
cdq
outs
push
or
sub
mov
pop
cmp
sbb
loope
jae
loope
cmp
test
mov
push
fs
xor
call
mov
mov
lahf
inc
inc
retf
cmp
xchg
or
fisub
fdiv
mov
movs
mov
sbb
dec
xchg
mov
mov
pop
mov
jl
push
jmp
addr16
ins
in
(bad)
bound
sub
jecxz
mov
cmc
push
iret
dec
dec
sbb
cld
sbb
leave
mov
pop
pop
in
vprotw
and
inc
mov
mov
sti
pop
sbb
add
(bad)
push
jp
iret
jl
mov
sub
sbb
fwait
mov
pop
sbb
mov
dec
loopne
idiv
or
pusha
idiv
scas
dec
idiv
sbb
mov
loopne
(bad)
sbb
cmps
add
dec
stos
fidiv
(bad)
fild
dec
sti
push
leavew
inc
(bad)
dec
arpl
rol
cmp
pusha
pop
aam
xlat
and
aad
pop
adc
sti
sahf
icebp
jno
and
and
xlat
int3
xchg
mov
xchg
add
ins
outs
pop
fwait
cwde
mov
ret
sbb
xlat
sbb
out
in
push
test
or
pop
mov
mov
imul
ficom
(bad)
push
dec
add
and
pop
sub
ins
sbb
stos
jl
ins
fdivr
add
add
sub
scas
sbb
sub
jmp
jne
inc
pusha
mov
pop
sub
push
js
adc
scas
outs
mov
jg
jb
popa
pop
fisubr
push
in
aam
sub
cld
push
adc
es
mov
out
nop
retf
cmps
aas
sbb
(bad)
in
cmc
cdq
rcl
add
iret
inc
je
sub
sbb
adc
outs
test
cmc
out
adc
dec
ficom
in
sbb
adc
out
fimul
sbb
mov
jmp
push
jnp
pushf
mov
xor
pop
mov
movs
fmul
inc
jecxz
and
fnstenv
test
in
mov
fidiv
sub
or
out
sbb
lods
jl
sub
cld
dec
or
gs
movs
jmp
jnp
xchg
pop
cmp
and
and
sub
(bad)
jecxz
retf
jnp
push
push
jp
lds
out
cmp
dec
mov
sbb
and
add
out
cmps
add
int3
xchg
scas
sub
daa
inc
lahf
cld
(bad)
dec
push
mov
push
fbstp
dec
mov
lar
cmp
mov
jbe
mov
(bad)
ja
dec
xchg
aam
pop
add
adc
adc
movs
leave
fs
pop
cmps
xor
int
dec
or
retf
fsubr
inc
jmp
or
pusha
jb
push
xor
and
daa
out
adc
jmp
and
push
iret
pand
dec
mov
clc
pop
ret
bound
jle
sti
adc
das
test
xor
add
(bad)
mov
cmp
lods
cmp
inc
in
add
push
xchg
xor
xchg
leave
adc
adc
inc
fisub
adc
xchg
aas
das
fdivr
dec
push
lods
mov
mov
movs
fld
lods
(bad)
jge
cmp
cmps
pop
push
or
test
adc
mov
std
dec
outs
jno
and
fmul
nop
outs
inc
adc
add
xchg
mov
outs
bound
das
ja
sub
outs
cdq
mov
cmp
outs
mov
cmps
mov
push
imul
fdivr
stc
fldl2e
inc
loopne
shl
loop
and
jmp
mov
lea
faddp
mov
jge
jbe
movs
add
enter
jge
inc
aaa
and
ds
pop
je
bound
add
cli
or
cmp
out
(bad)
push
xor
fistp
aas
mov
or
mov
cmp
sbb
dec
dec
int
aad
retf
mov
jne
arpl
retf
inc
pop
int3
aam
and
je
dec
ret
dec
bnd
dec
sbb
mul
or
inc
sbb
mov
mov
ret
fwait
nop
movs
loopne
mov
inc
bound
test
popf
cs
clc
mov
mov
out
sub
lods
pop
adc
imul
sbb
test
dec
mov
and
push
retf
jo
xor
pop
xor
mov
dec
outs
pop
add
mov
add
mov
shl
loope
xor
dec
add
addr16
std
pop
fsub
push
popf
sub
(bad)
pop
es
cld
pop
movs
dec
jns
out
mov
mov
cwde
add
inc
push
mov
pop
sbb
ret
je
mov
pop
enter
dec
cli
add
lods
xchg
xchg
adc
xor
in
sub
addr16
xchg
call
int
mov
or
or
push
outs
push
inc
cwde
inc
aam
pushf
xchg
bound
outs
adc
movs
ins
jp
add
xor
sbb
shl
test
adc
jae
ds
push
daa
push
push
fwait
mov
(bad)
mov
push
not
xchg
(bad)
ss
and
push
popa
nop
gs
pop
dec
cmp
lds
stos
sete
cld
add
fcmovne
xlat
sbb
dec
std
pop
ror
dec
xor
ins
loop
mov
aad
push
lds
pop
xlat
imul
inc
adc
or
mov
int
push
sahf
lea
push
out
xchg
lods
hlt
sub
popa
jg
push
mov
jp
enter
pop
retf
mov
dec
addr16
sbb
iret
scas
push
imul
imul
in
aam
jns
mov
cmp
mov
rol
xchg
xchg
in
imul
rcr
cli
jnp
int
out
mov
aas
sbb
and
dec
stc
fxch
adc
or
or
pop
adc
fwait
pushf
daa
mov
push
mov
mov
lock
jmp
jmp
xor
mov
push
add
sub
out
(bad)
imul
mov
jmp
movs
fadd
mov
enter
jns
add
shl
aam
fisttp
and
dec
sub
xor
scas
movs
inc
lock
lahf
and
xor
jmp
aad
pop
(bad)
fistp
xlat
les
xor
cli
push
icebp
push
push
mov
pop
ret
outs
dec
movs
mov
xsaves
adc
pusha
in
add
xchg
neg
sbb
adc
fwait
in
lea
xor
inc
sbb
xchg
jnp
inc
xchg
test
cli
dec
adc
daa
sbb
in
lods
punpckhwd
cmps
lock
inc
pushf
xchg
xchg
mov
sub
adc
jbe
cli
jae
cmps
out
sar
stos
aam
popf
imul
(bad)
test
adc
hlt
mov
xchg
sub
xchg
lds
dec
js
cmp
std
xor
mov
in
fucom
xchg
dec
mov
stc
push
and
fild
call
xchg
mov
jbe
dec
push
mov
sbb
imul
inc
mov
cmp
xor
add
mov
pop
popa
iret
add
retf
mov
bound
push
std
jg
stc
nop
std
jmp
std
cmp
xchg
repz
dec
xchg
lock
(bad)
mov
jg
ror
adc
mov
imul
or
inc
cmp
fdivr
jns
lea
jae
iret
mov
fxch
cmp
fnstcw
sub
sbb
xchg
test
inc
push
hlt
mov
loop
push
std
fidivr
pushf
imul
clc
lods
add
cmp
out
fiadd
cmp
adc
add
(bad)
ss
pusha
sbb
dec
rcl
mov
xor
pminub
adc
cdq
xor
cmps
mov
push
jbe
loop
out
cs
inc
push
xor
les
xbegin
sbb
mov
xlat
ret
pushf
mov
scas
repnz
leave
pop
rol
aas
pop
dec
or
cmp
xchg
dec
mov
jecxz
sar
jmp
mov
jne
into
xchg
shr
sbb
(bad)
mov
push
adc
push
xor
add
ss
push
imul
leave
adc
(bad)
fs
xchg
dec
jl
cmp
pop
jmp
js
pop
adc
inc
jmp
dec
aad
or
pusha
inc
iret
out
adc
push
dec
mov
cmp
mov
(bad)
es
sbb
mov
xor
jecxz
and
clts
mov
ret
jnp
std
or
jl
scas
pop
(bad)
inc
sti
mov
dec
sbb
retf
sti
sub
xchg
push
je
lock
or
inc
cmp
dec
inc
push
push
dec
js
xor
pushf
inc
inc
into
scas
jl
or
cmps
pop
mov
cmp
pop
pop
dec
dec
mov
in
retf
sbb
movs
mov
xchg
mov
jns
mov
sbb
mov
adc
or
push
retf
jb
pop
pop
pmulhw
mov
into
mov
cs
pop
out
xchg
gs
hlt
pop
jmp
and
scas
mov
pop
cmp
es
fwait
cmp
outs
mov
xchg
shl
add
addr16
sub
(bad)
mov
out
out
jp
imul
sub
cmp
sbb
sbb
mov
pop
jg
rcr
ins
into
xchg
mov
stos
jnp
push
dec
push
xchg
push
dec
mov
(bad)
xchg
test
pop
push
and
xor
stos
pop
(bad)
lock
inc
or
push
mov
jg
fdiv
sub
mov
imul
rol
popa
imul
or
mov
jl
push
mov
sbb
in
inc
inc
sbb
inc
sub
bound
jmp
rcl
leave
in
dec
push
out
aas
mov
hlt
xor
sbb
daa
je
mov
mov
(bad)
rdmsr
push
sbb
comiss
jo
test
into
jns
nop
and
je
sub
sbb
outs
jnp
stos
push
xchg
hlt
dec
dec
rol
js
cmp
add
jl
push
retf
mov
pushf
xor
and
shr
dec
fstp
ja
sub
jne
sub
adc
dec
jno
arpl
cli
mov
or
pop
rcl
xlat
imul
cs
or
cmp
inc
aad
cmc
sbb
sub
mov
mov
jecxz
ror
dec
loopne
dec
addr16
inc
jl
enter
and
call
add
mov
sahf
aam
retf
clc
pop
cld
cld
dec
sbb
jnp
sbb
call
stos
dec
jmp
ins
mov
adc
rcl
popa
icebp
pushf
mov
shl
ja
push
xchg
bound
fistp
div
scas
into
mov
out
add
xor
adc
fwait
pop
fld
test
stos
stc
sahf
sub
mov
stos
mov
mov
xor
cwde
iret
pushf
xchg
lds
push
clc
test
cmp
mov
popa
push
xor
loop
data16
and
out
cmps
stos
retf
xlat
mov
sbb
dec
loopne
add
iret
lock
(bad)
outs
cli
sti
mov
mov
fisttp
push
xor
push
mov
div
mov
push
es
push
push
jecxz
adc
daa
fild
out
sbb
push
push
out
sub
push
adc
stos
jns
xchg
push
add
scas
push
loope
adc
test
loope
pop
(bad)
out
jmp
fld
imul
jnp
sub
mov
mov
shr
xor
dec
cmps
and
inc
xchg
stos
and
push
es
or
jecxz
push
std
adc
push
icebp
clc
in
ja
js
clc
outs
pop
cwde
mul
jl
stos
pop
xchg
mov
outs
mov
xor
xchg
outs
or
arpl
shl
or
nop
mov
pop
in
outs
arpl
lods
pop
cmp
mov
jno
mov
xchg
jecxz
stos
mov
or
inc
test
dec
jecxz
pop
jnp
movs
mov
nop
dec
iret
cmp
ror
adc
mov
cmp
push
addr16
sub
ret
test
adc
call
scas
adc
mov
(bad)
xor
mov
xor
sbb
aaa
mov
xor
dec
in
mov
sbb
xor
xchg
rcr
sbb
call
std
sub
xlat
push
ins
jbe
sbb
lahf
(bad)
dec
push
xor
cmp
sub
pushf
popf
cmc
ds
gs
inc
rol
loopne
outs
and
fmulp
dec
outs
adc
stos
dec
mov
bound
jg
push
cmp
jne
inc
cmps
aas
jg
std
jl
adc
adc
aad
bound
mov
jg
fsubr
cld
jmp
clc
sbb
xor
sub
jb
sbb
repnz
push
popa
sar
cmps
adc
jno
add
(bad)
jns
pop
pop
shl
out
test
xchg
cmp
fistp
outs
(bad)
clc
mov
jo
mov
popf
nop
std
sbb
xor
mov
inc
push
mov
pop
fucomip
pop
clc
sbb
sti
es
inc
pop
mov
loop
sub
add
(bad)
stos
aaa
cmp
fadd
jmp
outs
call
stos
jl
es
icebp
adc
mov
pop
fldenv
inc
(bad)
shl
pop
popa
std
fidiv
dec
aad
lods
xchg
mov
dec
out
cmp
jo
and
jo
mov
mov
dec
adc
xchg
dec
mov
mov
pop
mov
pop
and
mov
add
xor
mov
js
jmp
aam
call
xor
cdq
outs
jae
aam
pop
inc
cmps
and
mov
adc
jp
test
iret
jg
dec
push
xor
and
cmps
enter
jmp
jge
ss
inc
mov
rcl
mov
xor
sub
imul
xor
test
pop
les
popf
lods
mov
jae
mov
pop
push
cli
add
inc
leave
add
lahf
mov
jne
cmp
scas
imul
inc
movs
(bad)
push
(bad)
pop
jmp
adc
fisttp
add
rcr
mov
fistp
sbb
popa
xchg
(bad)
push
dec
out
out
cwde
bound
mov
cld
mov
mov
mov
movs
mov
repz
sbb
sbb
mov
inc
mov
ret
sbb
inc
pop
jg
loop
or
fisub
scas
lds
mov
pop
dec
jle
shl
repz
mov
jmp
or
scas
dec
sub
xor
imul
(bad)
sbb
fnstenv
jmp
adc
dec
sub
into
scas
aad
and
frstor
adc
fist
mov
pop
(bad)
dec
sub
pop
sub
cs
adc
les
xchg
pushf
pop
xchg
jp
aaa
hlt
jae
cmc
leave
es
xchg
xchg
sti
out
outs
and
mov
mov
pop
out
mov
mov
(bad)
mov
xchg
mov
arpl
mov
retf
popa
xchg
jae
(bad)
cmp
outs
cmp
cmp
pop
aas
jbe
jb
jmp
inc
sbb
push
xchg
daa
and
inc
in
retf
jae
pop
in
inc
mov
cmp
add
repz
daa
or
mov
pop
(bad)
sar
xor
mov
es
and
xchg
in
movs
xchg
test
jo
cmps
cmp
shl
sub
cmp
gs
loopne
in
inc
xchg
fstp
call
icebp
fistp
xchg
(bad)
mov
mov
das
sar
scas
mov
in
xchg
repz
xchg
pop
dec
dec
shl
iret
pop
adc
inc
hlt
cdq
aaa
(bad)
iret
or
sahf
pop
in
rcl
in
imul
rep
fnclex
scas
test
jae
push
repnz
call
sbb
mov
nop
ins
stos
out
mov
les
pop
jp
sub
mov
sti
in
je
stos
dec
fwait
popf
out
mov
int3
mov
mov
cmps
test
dec
push
push
and
xor
inc
or
int3
addr16
daa
shr
movs
fiadd
mov
retf
test
pop
mov
xor
ja
dec
clc
jle
mov
dec
test
mov
not
dec
pusha
dec
push
mov
sub
jae
and
dec
retf
cmp
dec
mov
dec
(bad)
iret
adc
pop
out
sub
xchg
and
popaw
adc
mov
stos
sbb
lock
cmp
mov
mov
jge
fwait
adc
or
ret
daa
mov
fld
jp
jne
retf
inc
cmc
push
int3
jbe
xor
and
add
push
jg
outs
xchg
(bad)
out
cmp
and
inc
dec
sar
and
jge
mov
xor
jecxz
mov
or
inc
and
push
clc
sub
cmps
and
inc
mov
cmps
sbb
test
jle
mov
dec
xor
clc
sahf
out
mov
mov
outs
jb
data16
mov
mov
and
les
sub
ins
dec
test
cwde
push
push
popf
xlat
push
fist
sbb
adc
jge
rcr
loopne
push
sub
in
cwde
int
lock
icebp
mov
push
add
stc
lods
lds
fsubr
js
std
dec
les
mov
out
sahf
mov
push
push
push
aam
sahf
sbb
adc
aaa
xchg
sbb
mov
mov
inc
pop
and
mov
std
xchg
jecxz
mov
dec
sbb
and
mov
sub
xchg
gs
jle
mov
inc
mov
xchg
jl
mov
xor
int
and
jb
ret
lods
(bad)
mov
ret
pop
pop
shr
jecxz
arpl
in
in
scas
add
scas
nop
push
test
or
mov
loope
test
in
xor
push
fdivr
or
inc
xchg
pop
inc
call
shr
fwait
cwde
pop
jge
stc
out
fucom
adc
imul
iret
sti
mov
inc
loopne
xchg
loope
imul
daa
test
je
pop
popa
outs
push
dec
jmp
bound
test
xor
fs
jge
ror
xchg
mov
in
dec
fld
fild
addr16
(bad)
push
xchg
cs
add
push
adc
push
jbe
inc
outs
adc
jecxz
pop
hlt
cmp
pop
xchg
dec
repnz
test
lock
call
mov
test
ret
dec
jo
mov
xchg
lods
call
sar
and
pop
pop
nop
xchg
nop
loope
test
cs
adc
pop
dec
mov
mov
dec
sti
xchg
rcl
iret
ret
(bad)
mov
and
jp
dec
scas
xor
(bad)
push
cmp
ror
arpl
neg
fs
enter
daa
jg
shl
dec
add
lahf
shl
popa
xchg
pop
pop
xchg
aaa
add
fcom
jmp
cmp
aaa
add
mov
mov
loopne
inc
adc
xchg
std
adc
pop
mov
mov
cmp
mov
fld
xor
aam
std
leave
add
push
adc
stos
das
mov
les
jae
jae
loope
adc
pop
pop
(bad)
mov
sbb
cmp
cdq
xlat
gs
cwde
or
stos
cwde
lahf
cdq
jmp
cmc
dec
data16
jp
mov
xchg
int
ror
(bad)
out
stos
clc
imul
rcr
out
jmp
aas
mov
add
mov
ret
or
imul
push
popf
xor
cdq
retf
mov
stos
cdq
addr16
xor
jp
shl
sbb
adc
cld
lea
mov
jmp
sar
and
cmp
or
aad
push
inc
mov
cwde
in
add
lods
mov
gs
out
xchg
js
hlt
repnz
das
loope
mov
fbstp
ins
test
xchg
mov
sub
mov
mov
retf
add
nop
fucom
out
mov
pop
or
xchg
xor
jbe
dec
xor
ror
mov
packsswb
in
jl
mov
cmp
bound
jnp
push
lods
inc
jecxz
dec
jns
sub
mov
bound
lea
es
pop
rol
and
push
div
jg
arpl
lds
dec
mov
mov
mov
aam
iret
mov
dec
cli
mov
add
sub
iret
sbb
les
cs
mov
(bad)
push
xchg
ds
stc
dec
adc
fadd
adc
imul
pop
xchg
and
xchg
push
in
or
rol
jg
ret
cmp
inc
inc
out
mov
fwait
retf
push
dec
in
cdq
test
stos
cmp
or
idiv
div
add
mov
or
xor
in
call
or
dec
mov
mov
mov
cmp
imul
sbb
add
jbe
scas
inc
jb
loope
push
xchg
cmp
xchg
jmp
in
sub
xor
(bad)
out
sub
jno
jnp
jo
mov
lds
xor
mov
daa
mov
push
repnz
lds
(bad)
in
and
xlat
aad
call
cdq
(bad)
in
inc
pop
push
dec
retf
xor
mov
mov
sbb
rol
sbb
pop
sbb
sbb
mov
js
ret
scas
ss
test
fdivrp
or
dec
scas
jnp
dec
scas
adc
jbe
and
test
lds
test
lds
jecxz
mov
jg
neg
xor
outs
xor
movs
jmp
imul
cmp
lods
call
cmp
push
repnz
sbb
fsubr
or
jmp
movs
adc
dec
sahf
push
dec
stos
lods
cmp
inc
cdq
into
mov
sub
sbb
(bad)
sub
sbb
lods
fwait
push
jmp
add
jbe
xchg
cmp
pop
test
pop
mov
add
or
or
mov
scas
jecxz
iret
adc
daa
repnz
iret
xchg
scas
mov
jne
sbb
pop
(bad)
pop
ffreep
scas
inc
mov
daa
fistp
jp
cmp
sbb
jae
mov
push
call
ds
jbe
inc
sbb
es
dec
cmp
test
xor
adc
adc
and
dec
out
pop
dec
xchg
(bad)
fild
ficomp
cli
jb
in
mov
inc
cmp
nop
cs
jb
out
pop
out
cld
dec
push
outs
bound
or
es
mov
jle
add
adc
rol
or
jmp
into
sub
pop
pop
dec
pop
aam
jb
cmp
ins
push
sahf
sbb
mov
nop
in
nop
cmp
add
pop
je
repz
ss
xor
cmp
popa
add
mov
imul
not
xchg
add
fdiv
loopne
xor
test
fisub
dec
mov
and
nop
xchg
pop
es
ja
in
lods
mov
pop
push
mov
imul
cmp
call
sahf
mov
sbb
adc
test
jo
js
mov
cmps
mov
cmp
jge
sub
cld
iret
adc
stos
push
mov
ins
or
scas
and
imul
sub
inc
in
retf
dec
test
inc
out
out
mov
dec
push
mov
xchg
cmp
fdiv
lea
shl
pop
pop
sbb
mov
add
adc
mov
(bad)
mov
pusha
std
loope
call
ins
aaa
inc
mov
enter
pop
mov
push
lods
mov
xchg
rcl
and
bt
test
dec
adc
add
or
dec
cs
movs
adc
inc
jae
add
xchg
mov
mov
das
mov
fnstsw
pop
add
mov
adc
xor
sub
sbb
aad
sub
shr
ds
mov
and
fucomip
xchg
imul
(bad)
push
push
mov
pop
sub
add
jle
sub
test
mov
and
inc
mov
jbe
mul
les
sbb
add
out
rcr
xchg
movs
and
movs
cmp
pop
enter
jg
es
test
sbb
mov
mov
mov
push
inc
(bad)
fcom
rol
mov
inc
retf
repnz
cmp
call
xor
or
sub
leave
pop
inc
in
sar
pop
stos
lea
jns
loope
inc
out
xchg
pop
fs
mov
mov
push
lea
mov
mov
mov
cs
lods
fdiv
fbld
jns
rcl
adc
add
ret
jmp
xor
imul
arpl
xchg
cwde
inc
ffree
lahf
mov
mov
cmps
push
jg
pop
pusha
test
loopne
sub
jmp
sahf
clc
addr16
clc
pop
push
ja
stos
cli
ds
adc
shl
xchg
out
mov
sbb
(bad)
es
jnp
das
aaa
jae
push
movs
pop
jge
(bad)
and
jge
or
cmp
popf
xchg
or
xor
xchg
add
dec
jne
jmp
mov
cmp
jmp
or
leave
adc
aam
push
xchg
jle
sub
bound
rcr
dec
movs
xor
ja
jbe
mov
ds
lods
xchg
push
in
mov
jbe
movnti
mov
ret
pop
jne
ds
out
es
xchg
(bad)
div
or
shr
movs
pop
loopne
push
test
fnstenv
push
ins
stos
mov
push
leave
pushf
or
mov
mov
movs
add
jb
xor
pop
clc
cli
xor
sbb
xor
bnd
(bad)
push
lods
in
call
lds
jmp
mov
sti
popf
dec
out
fucomi
ret
sub
dec
sub
jno
repnz
jmp
loopne
push
mov
push
nop
mov
adc
stc
inc
or
jl
in
or
(bad)
stc
mov
out
ret
scas
mov
pushf
sub
sbb
imul
inc
mov
mov
shl
adc
je
pushf
jmp
push
xor
aas
xchg
and
mov
xor
nop
(bad)
into
aam
loopne
ins
add
mov
cmps
push
addr16
sbb
dec
bound
in
cmps
inc
and
sub
aam
cmc
movs
mov
je
sub
popf
xor
inc
add
ret
sub
cli
pop
xor
scas
repnz
mov
pop
out
leave
ficom
aaa
xor
mov
inc
sub
ja
dec
dec
add
push
popf
in
loop
sub
xchg
jecxz
pop
inc
call
mov
cmc
dec
and
xchg
sbb
(bad)
retf
jg
pop
stc
jp
push
xchg
jge
ret
ret
jl
rcr
cmp
xchg
out
mov
xchg
sub
jno
pop
ret
les
rol
sti
adc
leave
shr
dec
(bad)
loopne
stos
dec
pop
inc
into
ds
fwait
xlat
cmpxchg
fidivr
xor
stos
into
mov
or
fild
std
movs
js
fnsave
jo
push
cmp
pop
bswap
je
push
retf
mov
mov
ins
out
(bad)
out
loop
and
mov
adc
jecxz
popa
call
addr16
aad
add
std
xor
xor
jp
inc
pop
leave
mov
arpl
xchg
adc
fistp
mov
mov
dec
push
pop
sub
rcr
rcl
clc
mov
jmp
pop
iret
std
mov
mov
es
aaa
inc
call
cmps
test
movs
xchg
jmp
movs
fdivr
push
cdq
xor
(bad)
mov
pop
inc
mov
out
mov
mov
inc
repz
sbb
imul
dec
lods
push
push
or
xchg
or
addr16
mov
sbb
neg
pop
loope
jp
out
lock
push
lea
retf
mov
mov
sti
fs
sbb
pop
popf
cwde
in
or
in
or
aad
ret
mov
and
mov
push
xchg
pop
push
test
jns
inc
and
ins
sbb
int
xchg
and
in
out
mov
hlt
push
(bad)
std
add
cmp
rcl
jg
add
sbb
xlat
sub
xchg
fs
mov
and
inc
adc
mov
sbb
sub
fdivr
push
pop
mov
iret
inc
(bad)
jmp
stos
stos
mov
or
pop
cmps
adc
xlat
movs
loope
mov
dec
cmp
int
out
rcr
xchg
mov
sbb
push
lods
push
shr
lock
adc
xchg
add
adc
lods
fidivr
dec
mov
(bad)
call
cmps
ror
data16
data16
pop
fimul
in
xchg
mov
jl
lgs
xor
pop
jmp
loopne
or
in
ss
mov
lods
shl
arpl
repnz
lods
aam
addr16
in
jle
loope
pop
pop
or
loope
shl
enter
lahf
push
adc
sbb
push
sbb
jne
inc
imul
cmp
stos
(bad)
or
jecxz
div
adc
cmp
inc
lahf
add
and
push
dec
fcomip
push
out
shl
ja
mov
popf
push
jnp
jmp
test
dec
inc
shl
cmp
scas
jne
mov
xchg
mov
push
xchg
fild
dec
test
loopne
sbb
pop
mov
inc
mov
ffreep
jae
mov
or
pop
mov
fwait
in
or
push
mov
cmc
mov
fs
popf
pop
cmp
mov
cmp
aad
and
cmc
fmul
mov
add
loope
out
xchg
xor
pop
sub
xor
jmp
cld
lahf
pop
call
xchg
fst
push
jo
mov
out
cs
fisttp
pop
xchg
gs
pop
xchg
adc
cwde
jg
and
jno
jle
pop
adc
push
pop
mov
sahf
dec
sar
imul
sub
and
cmp
(bad)
clc
es
jecxz
int3
outs
push
xchg
or
sbb
mov
sub
(bad)
scas
jp
cs
xor
fidiv
outs
push
xchg
ins
push
inc
pop
pop
scas
ins
pop
pop
jb
push
loop
loope
mov
push
push
icebp
xchg
imul
cwde
hlt
icebp
retf
xor
push
rcl
jbe
ds
and
mov
cmp
jae
in
scas
aad
pusha
ret
iret
jno
or
js
fbld
adc
push
push
push
cmp
pop
sub
push
sub
(bad)
pop
(bad)
cli
xchg
lods
mov
cli
sbb
pop
and
out
push
and
int3
fisub
imul
mov
sbb
jecxz
inc
mov
jecxz
loop
inc
mov
out
imul
add
ins
adc
mov
fimul
lock
fld
retf
adc
pop
fdiv
sub
scas
dec
pushf
(bad)
es
pop
push
or
iret
pop
lods
sub
inc
jnp
inc
stos
enter
or
int3
sti
cli
mov
ins
aam
movs
clc
jmp
pop
pop
sbb
jle
sti
jo
jl
iret
(bad)
std
mov
imul
rcl
xor
mov
arpl
jns
lods
push
dec
ins
jecxz
mov
(bad)
out
jecxz
adc
mov
ins
push
mov
fsubr
and
ds
and
add
add
jmp
jae
mov
inc
xchg
or
sbb
push
std
inc
mov
jae
rcr
gs
int3
adc
and
adc
push
mov
push
xchg
addr16
inc
or
cmp
mov
inc
mov
lds
xor
or
aaa
shr
or
hlt
mov
loopne
jns
fsubr
loop
aad
mov
cmp
leave
in
div
mov
mov
in
mov
jp
adc
data16
repnz
mov
jecxz
cmp
(bad)
mov
and
or
repz
dec
mov
aad
fcmove
jp
mov
inc
out
test
dec
jp
cmovae
repz
daa
or
loope
retf
cld
movs
xchg
sbb
jnp
ins
push
cmps
(bad)
jbe
add
lock
xchg
push
jle
cmps
aaa
mov
mov
mov
stos
inc
sub
aad
adc
test
lock
(bad)
test
loope
cmp
xchg
je
loopne
out
adc
dec
rcl
xchg
cdq
xor
fmul
mov
sub
repz
mov
jns
cmc
bound
adc
jp
xor
jo
out
xchg
ins
ror
dec
xor
xor
mov
xlat
and
pop
xchg
mov
inc
xchg
inc
test
pop
mov
ror
loope
add
xchg
movs
ins
pop
jb
add
sar
pop
xor
push
mov
jno
cmp
data16
pop
push
mov
mov
call
inc
mov
(bad)
loopne
mov
push
mov
mov
mov
xlat
clc
movs
outs
rcr
xchg
mov
(bad)
inc
jbe
icebp
lods
sub
pusha
cmp
sahf
push
test
test
and
or
sub
push
call
cdq
ret
xor
cmp
rcr
xchg
loop
ret
ret
jbe
push
pushf
rep
cmp
data16
outs
int3
sub
mov
or
cs
test
lahf
push
out
test
enter
out
popa
add
pop
adc
adc
sbb
rcr
fisub
sbb
pop
push
test
aam
shr
cwde
loopne
mov
stos
call
call
fbstp
out
dec
adc
push
pop
sbb
shl
retf
mov
(bad)
aaa
fadd
xchg
sub
loop
sub
retf
push
xchg
leavew
sti
mov
mov
add
xor
inc
fs
nop
nop
aad
mov
pop
or
add
sub
adc
inc
popf
out
movs
lds
mov
mov
pusha
xchg
setne
and
aas
pop
ss
jmp
(bad)
ss
cmps
push
inc
pop
(bad)
fnstsw
test
(bad)
sbb
pop
pop
xor
pop
sbb
sbb
jae
adc
adc
sti
cdq
push
(bad)
mov
out
std
cmp
pop
xchg
leave
ja
je
cmc
ror
cmps
fwait
mov
(bad)
fdivr
add
mov
xlat
test
add
in
mov
mov
in
aas
dec
or
int
(bad)
ja
shl
outs
loopne
test
outs
and
(bad)
pop
jl
call
mov
jecxz
aas
push
cmp
repz
call
inc
xor
adc
loopne
adc
or
lea
imul
dec
test
jecxz
ficom
xchg
retf
sub
cmps
pop
scas
loope
std
jb
sbb
xchg
mov
push
ret
dec
(bad)
icebp
push
mov
mov
aas
std
or
xor
mov
pusha
(bad)
fcmovnbe
retf
inc
sbb
pop
mov
rep
lahf
rol
pop
xor
fnstenv
loopne
pop
call
(bad)
pusha
int
xchg
scas
pop
jae
sub
and
leave
int
in
aas
(bad)
dec
cdq
xor
mov
pop
mov
mov
(bad)
fwait
adc
sub
test
jne
cmp
or
xor
jno
mov
mov
pop
nop
sahf
gs
les
fst
movs
mov
add
sbb
js
pop
push
jmp
cmps
out
sub
lods
ds
dec
cwde
or
daa
rcr
dec
shl
xchg
shl
ret
xchg
adc
sti
push
mov
mov
pop
jbe
pop
sub
jnp
mov
ins
sub
jg
scas
mov
mov
jnp
test
cdq
adc
cdq
pop
mov
sub
mov
fwait
xchg
xlat
(bad)
loopne
mov
dec
pop
add
stc
shl
pop
inc
(bad)
pop
mov
rcr
cld
sbb
imul
cmp
sbb
out
adc
dec
popf
push
jge
inc
shl
fdivr
sar
test
in
pop
inc
fistp
adc
adc
call
test
xchg
ror
cmps
adc
push
ss
sub
sbb
push
sub
xor
jmp
retf
jp
mov
sub
or
pop
sbb
pop
cli
xor
std
mov
dec
pop
out
add
fidivr
push
jp
mov
mov
xchg
mov
cmp
push
pop
add
clc
xchg
xor
mov
out
mov
pop
rcr
xchg
popf
pusha
fsubrp
cmp
aad
jmp
mov
and
repz
lods
nop
xchg
push
iret
xor
fdivr
aaa
ins
loope
sahf
dec
or
mov
sbb
pusha
aaa
fcomp
xchg
fldcw
push
push
xchg
ja
jb
es
pop
jmp
lahf
mov
rcl
(bad)
push
into
lea
(bad)
int
adc
je
mov
cmp
iret
dec
cs
bound
sub
shl
imul
out
cwde
sbb
add
pop
(bad)
aaa
retf
xchg
(bad)
cmp
std
lods
sub
icebp
in
(bad)
retf
cmp
and
ffree
mov
inc
test
pop
es
mov
push
iret
xor
xchg
dec
cmp
mov
repz
movlps
loopne
jne
jno
in
nop
jle
repz
sub
mov
fbld
rol
fdiv
cs
dec
fmulp
rcr
mov
jo
sub
addr16
xchg
or
fucomi
jge
aas
es
lock
dec
mov
fsubr
mov
cmp
or
(bad)
(bad)
or
sbb
popa
or
sbb
pop
inc
push
mov
adc
nop
or
xor
es
les
pop
mov
jmp
mov
call
sbb
xchg
jp
iret
sub
and
mov
xchg
vpackssdw
pusha
mov
enter
(bad)
out
xchg
pushf
push
call
adc
retf
jmp
js
sub
mov
adc
(bad)
mov
xchg
repz
add
push
imul
mov
pop
jne
push
sub
outs
and
xor
xor
mov
dec
add
jnp
xchg
(bad)
mov
pop
and
mov
mov
gs
mov
xlat
outs
shl
hlt
es
dec
ins
pop
(bad)
mul
mov
jo
jg
cmp
out
inc
inc
stos
rol
aas
inc
and
cmp
addr16
add
fucomip
push
mov
jmp
cmp
push
cmp
dec
outs
add
mov
jbe
jecxz
imul
loop
jae
jb
in
inc
add
push
xor
pushf
jne
js
add
xchg
repz
sub
adc
xchg
pop
ret
and
(bad)
mov
fsub
sub
ficom
mov
inc
mov
daa
lock
pop
mov
ror
bsf
pop
in
and
mov
in
mov
cld
xchg
fdiv
mov
ins
out
test
push
fcom
push
psrld
ss
sub
and
out
or
cld
into
jb
fadd
fnstsw
mov
mov
pop
sub
push
fadd
pop
adc
xor
or
call
retf
pop
mov
sbb
and
push
push
sbb
sub
add
sub
bnd
or
add
ja
fnstcw
cs
xor
iret
in
adc
jns
fstp
fild
loop
inc
inc
ficomp
in
mov
dec
sub
and
or
lods
sub
scas
ffree
add
jp
mov
mov
jg
mov
sbb
mov
pop
push
(bad)
imul
mov
stc
data16
cmps
adc
fbld
out
mov
mov
lahf
cmc
clc
cmp
xchg
fdiv
aad
dec
jnp
arpl
cld
cld
sahf
mov
push
jmp
out
ret
dec
loopne
add
out
retf
jbe
fcom
xchg
leave
js
push
cmp
push
iret
pop
pop
pop
inc
dec
(bad)
cmp
jecxz
push
aas
mov
push
inc
jae
dec
int
lahf
cld
push
into
sub
and
ret
(bad)
leave
dec
xlat
daa
push
and
cmc
mov
pop
repz
mov
and
inc
push
gs
int
shl
movs
push
icebp
mov
push
dec
push
mov
or
je
xchg
fdiv
(bad)
scas
pop
mov
cmp
jl
sbb
out
sbb
adc
sbb
sbb
aam
xor
pop
mov
and
and
pop
sub
xchg
movs
sub
xor
jle
push
mov
es
mov
inc
push
mov
cli
(bad)
jl
add
fcomp
dec
and
cmp
outs
add
repnz
xchg
int3
adc
xor
loop
dec
test
and
pop
inc
shl
in
xor
les
push
stos
or
xor
mov
sub
mov
test
mov
and
je
xor
add
mov
or
idiv
jge
cmps
ret
in
shl
out
ins
pushf
retf
and
std
or
aas
push
mov
sbb
aas
lods
imul
dec
mov
loope
fnstsw
mov
pop
adc
jbe
add
int3
mov
or
and
sbb
adc
hlt
xor
mov
dec
pop
push
dec
sub
inc
mov
dec
add
fs
inc
mov
inc
pop
imul
fisttp
sub
orps
daa
shr
stc
xlat
or
mov
inc
jo
jae
pop
pop
test
pop
and
fbld
or
mov
in
xlat
push
adc
pop
in
mov
rol
adc
(bad)
lock
push
and
push
push
in
add
imul
jnp
mov
jmp
xlat
push
xor
neg
xor
arpl
mov
adc
adc
push
leave
inc
adc
bound
fdivp
cmps
mul
shl
vprotd
enter
jnp
stos
xor
or
mov
pop
ss
pop
jge
and
inc
leave
repnz
inc
xchg
add
pusha
pop
cmps
mov
push
aad
or
push
xor
pop
mov
or
inc
jne
adc
push
push
cmp
inc
jecxz
jns
js
or
aam
popf
push
adc
push
ss
adc
adc
mov
lods
sub
xchg
(bad)
jae
xor
and
hlt
daa
pop
loopne
dec
mov
cld
cmps
mov
popa
push
adc
aad
stos
cmc
adc
mov
or
out
adc
dec
out
lods
xchg
inc
sub
loopne
iret
shr
add
jae
mov
popa
or
sub
enter
pop
das
lahf
fisub
fcom
loopne
mov
and
movs
xor
imul
pop
call
in
data16
mov
mov
icebp
mov
mov
inc
ret
(bad)
dec
xchg
push
and
enter
and
sti
pop
stos
sub
sub
pusha
xor
xchg
sbb
dec
mov
sbb
add
scas
mov
mov
push
mov
in
pop
pop
data16
xor
int3
push
stos
cwde
or
sbb
jle
mov
xchg
enter
imul
or
ins
retf
xchg
outs
and
cdq
dec
jnp
(bad)
push
fmul
(bad)
sti
in
test
sbb
jo
ins
stos
test
test
popf
popa
cmc
dec
fistp
inc
out
lahf
fisubr
sbb
imul
lods
call
pusha
call
xor
sub
mov
or
xlat
inc
cwde
pop
int
fwait
push
mov
rol
inc
ror
test
inc
ds
sahf
cmp
push
ret
fs
xor
jbe
jmp
ins
or
dec
cli
(bad)
mov
popa
push
push
push
cdq
pop
inc
mov
ja
push
(bad)
pop
mov
stos
rcl
(bad)
clc
mov
hlt
in
pop
imul
ins
push
inc
aaa
or
lea
sub
addr16
je
js
and
jecxz
mov
loope
pop
jp
out
dec
xchg
mov
mov
(bad)
cld
pop
or
add
xor
(bad)
in
adc
dec
jnp
jge
sbb
fmul
ins
adc
nop
mov
dec
popf
movzx
clc
gs
add
pop
stos
test
push
or
pop
dec
jp
out
lea
cmp
inc
lock
scas
push
pop
popf
ja
pop
or
mov
push
and
mov
cwde
sbb
cmp
aaa
dec
sbb
call
data16
lahf
pop
test
cmp
sbb
ins
jle
dec
jne
shl
mov
or
push
jg
mov
mov
adc
and
in
mov
movs
in
sub
xor
mov
pop
push
lock
pop
lock
or
arpl
fs
lods
lahf
push
cmp
mov
cmp
out
xor
xchg
aad
lahf
push
dec
adc
push
cdq
ss
fwait
gs
out
std
or
cmp
mov
add
lods
js
jle
out
(bad)
out
rcr
sub
pop
add
xchg
enter
stos
push
jge
mov
xchg
das
ficomp
(bad)
mov
inc
movlps
rcr
mov
cmp
adc
ins
pushfw
mov
das
out
cs
popf
sub
imul
mov
out
out
or
cmps
imul
movs
push
mov
inc
jno
shl
cmps
xor
ret
ins
test
retf
push
imul
cmp
xor
test
mov
pop
xchg
xchg
mov
aaa
pop
lods
push
sbb
aas
sbb
loope
nop
or
dec
ss
mov
adc
pop
cmps
adc
pop
fnstsw
mov
mov
xor
jns
sbb
xchg
push
xchg
loope
sbb
sub
inc
ficom
out
push
mov
ret
mov
dec
sahf
fcmovnu
mov
mov
sar
sub
movs
push
pop
ret
xchg
sub
jns
and
retf
mov
or
inc
sub
mov
outs
sub
mov
ja
mov
in
push
lea
fistp
ret
push
test
fiadd
xchg
fist
adc
push
ins
cli
jmp
sub
stc
clc
cwde
mov
and
arpl
int
inc
je
das
jnp
jns
fsub
test
mov
adc
movs
cmp
clc
cmp
dec
xchg
add
loope
ret
or
pop
jbe
adc
jle
in
add
cld
sbb
mov
aaa
scas
xchg
daa
rcl
shl
cmp
xor
xchg
ja
sbb
sbb
mov
and
jecxz
pop
enter
dec
mov
dec
stos
(bad)
and
daa
mov
sub
call
(bad)
jo
xchg
jbe
in
and
dec
jb
shl
xor
and
cmps
jp
mov
out
jne
int
xchg
xor
mov
xchg
adc
rol
xlat
aad
and
nop
push
lea
adc
push
nop
sti
out
cmp
inc
sbb
or
cmp
sub
cmp
loop
or
jp
movs
fdiv
cmp
ins
xor
jb
add
retf
inc
and
xchg
mov
sub
xchg
mov
fmul
adc
mov
mov
inc
mov
inc
mov
inc
cwde
jo
mov
xchg
scas
jno
sub
imul
mov
call
fimul
jp
adc
daa
call
in
xchg
xchg
das
addr16
mov
fwait
mov
call
loop
and
cmps
mov
mov
(bad)
call
push
cmp
xor
inc
inc
push
das
lods
fst
mov
or
aad
outs
mov
mov
scas
in
mov
fnstsw
pop
std
mov
and
cld
jmp
pop
aad
sub
xchg
clc
adc
imul
fmul
mov
adc
xor
cli
pusha
loopne
sbb
dec
in
ficomp
xchg
xor
adc
and
mov
(bad)
cmp
mov
test
popf
fst
sub
push
mov
add
loop
jo
ja
mov
inc
pop
sub
int
xchg
add
test
pop
cld
call
retf
nop
fcom
adc
mov
dec
sti
jnp
inc
scas
sub
mov
mov
add
cld
dec
sub
mov
mov
lods
or
cmps
fdivr
loope
add
and
je
test
xor
pop
leave
(bad)
mov
(bad)
sub
mov
dec
cmp
mov
cwde
iret
scas
mov
test
sub
(bad)
shl
inc
and
lods
xchg
loope
or
addr16
popa
push
pusha
in
lods
in
xor
adc
jmp
icebp
iret
nop
and
mov
inc
dec
lods
das
outs
mov
sub
jmp
lock
inc
xchg
mov
and
pop
and
in
repz
push
inc
out
fild
ret
jno
or
mov
push
dec
int
fadd
adc
mov
popf
push
cld
ins
pushf
mov
icebp
sbb
(bad)
mov
imul
push
shl
(bad)
bndldx
xor
int
inc
xor
jge
or
arpl
add
dec
inc
test
mov
addr16
fdivr
mov
jo
mov
pop
xor
pop
mov
bswap
aam
add
imul
lds
mov
jnp
movs
sbb
mov
lea
jno
jb
or
cdq
ror
push
js
mov
cmc
cli
repz
mov
pop
aas
dec
xlat
repnz
(bad)
out
mov
cdq
call
dec
movs
add
iret
addr16
sub
aaa
adc
push
pop
cli
sub
adc
jnp
xor
fisttp
jne
xchg
ss
mov
lea
retf
pop
add
cld
test
sahf
lahf
inc
jbe
sbb
stos
jno
lods
xor
iret
div
enter
pop
dec
out
lods
cmc
cli
je
xor
fwait
test
lock
int3
ss
pop
jmp
push
xchg
lods
cdq
lods
push
pop
cmp
sub
inc
(bad)
into
ror
and
sbb
push
pushf
pop
les
arpl
cli
rol
jp
push
enter
pop
sub
int3
cmps
pop
cmc
sbb
xor
(bad)
sbb
pop
ret
ins
out
mov
ret
push
jno
mov
call
lods
lock
sub
xor
loopne
xchg
dec
and
and
mov
pusha
out
and
(bad)
ret
pop
pop
aaa
fldcw
cmp
sbb
and
jge
adc
js
xchg
mov
mov
jb
xor
pop
mov
add
cmp
ins
xor
xchg
xchg
xchg
sub
mov
(bad)
cli
mov
mov
clc
sub
xchg
mov
add
aas
pop
pop
test
and
imul
sbb
pop
ficomp
xor
push
push
in
dec
(bad)
out
jge
repnz
icebp
out
inc
or
jmp
ja
sub
lea
pushf
or
xchg
sbb
leave
adc
int
jb
call
and
out
jmp
xchg
and
enter
mov
lods
sbb
or
sar
xchg
out
test
inc
cmp
ret
in
fmul
adc
push
push
(bad)
adc
stos
push
rol
in
cmps
out
xor
push
add
inc
xor
lods
dec
stc
inc
sahf
fnstcw
call
aas
xor
mov
popa
ret
movs
mov
das
xor
imul
das
add
(bad)
mov
ins
into
sub
int
icebp
dec
mov
xchg
or
test
gs
jmp
jg
pop
dec
cmp
cmc
hlt
rcr
dec
adc
and
das
addr16
dec
dec
mov
dec
dec
repz
pop
in
inc
fwait
in
sub
stos
pop
mov
sar
outs
add
loope
push
cdq
ficomp
xchg
in
push
add
fist
bndstx
fwait
aaa
das
xchg
je
or
mov
jo
imul
inc
cmp
(bad)
aam
push
add
imul
jg
call
pop
loopne
das
popa
xchg
inc
or
faddp
cli
jne
push
les
mov
icebp
xchg
inc
pop
shr
scas
xchg
xor
and
(bad)
lods
inc
test
imul
mov
jb
push
mov
jne
xor
mov
push
ins
xor
jge
dec
mov
and
dec
pop
pusha
adc
or
jl
test
inc
jmp
pop
cmp
push
test
mov
ins
and
add
cmp
rep
xchg
push
(bad)
bound
mov
out
xchg
data16
lock
out
pop
adc
in
fbld
popf
sub
jp
leave
daa
inc
dec
xor
les
or
cld
iret
mov
add
and
lahf
not
mov
fist
test
mov
test
and
loope
mov
adc
add
add
rcr
add
fst
inc
push
xor
jmp
(bad)
shl
and
lods
push
bound
fwait
mov
mov
daa
cmp
mov
dec
cli
hlt
cmp
js
loop
dec
jl
xchg
div
push
(bad)
dec
xor
stos
inc
xchg
mov
inc
jmp
pop
repz
push
mov
and
sub
jmp
stc
inc
push
out
add
call
scas
scas
mov
adc
hlt
xor
fs
outs
push
out
loop
cli
or
scas
fldcw
inc
pop
loop
in
pop
rol
push
mov
daa
or
push
dec
icebp
out
leave
mov
push
mov
and
shl
mov
jp
mov
sbb
cmp
std
daa
aam
js
ss
sub
ds
push
pusha
mov
push
and
je
fcomp
add
cmc
iret
xchg
fidivr
sbb
dec
sub
or
pop
mov
js
aad
cmps
cmp
leave
sbb
popa
cmps
retf
pop
mov
pop
movs
rcr
push
pop
xor
mov
(bad)
inc
mov
jg
mov
sub
cmp
dec
aaa
mov
mov
test
jmp
xchg
aaa
or
mov
pusha
dec
xor
loopne
jbe
cmp
div
das
rol
into
sbb
out
sub
adc
repnz
out
xchg
outs
stos
imul
iret
test
fstp
sbb
cmps
and
jns
icebp
xlat
jmp
shl
jmp
pop
cmp
inc
add
repz
mov
dec
pop
arpl
add
inc
jmp
jg
cmp
sbb
pushf
enter
cs
clc
aas
int
sub
cmp
jg
xor
xchg
(bad)
(bad)
mov
stc
call
dec
adc
xlat
or
rcl
iret
nop
movs
jb
and
or
jo
mov
inc
pop
stos
xor
mov
stos
cmp
mov
mov
push
adc
ja
mov
xlat
add
pop
cld
iret
cmp
lods
rol
inc
nop
cmp
adc
adc
xlat
outs
(bad)
jp
(bad)
cmp
aad
nop
mov
les
out
sbb
lods
in
sbb
std
cwde
call
mov
mov
ret
inc
inc
pop
test
call
cmp
loop
xor
arpl
pushf
xlat
dec
sahf
fldcw
rcl
pop
enter
jmp
push
sub
cmc
je
leave
jbe
add
adc
rcl
xchg
jbe
pop
dec
add
test
rcr
out
test
sub
and
jp
push
scas
fistp
xchg
push
cmc
xchg
pusha
imul
jecxz
push
in
mov
sub
popf
(bad)
xchg
(bad)
xchg
mov
ror
jp
push
nop
adc
imul
mov
push
out
or
shl
mov
adc
cmp
test
mov
mov
xor
cmps
nop
add
pop
or
or
jecxz
jle
pop
lea
hlt
cmp
stos
cmp
push
gs
sbb
and
add
cwde
adc
xchg
mov
inc
fistp
loop
cmp
cwde
gs
lahf
add
dec
push
or
dec
(bad)
adc
(bad)
clc
push
xor
or
sbb
jp
and
enter
push
ror
nop
cmp
push
loop
cmp
lds
xchg
adc
stos
push
mov
jle
or
or
mov
mov
call
jae
in
mov
clc
sub
or
jp
dec
inc
rcl
cmp
test
xor
cmps
data16
lea
push
xchg
fstp
dec
rcr
mov
aam
aaa
mov
js
pop
cmp
adc
popf
push
adc
test
pushf
jbe
xor
xor
mov
adc
loope
out
xchg
cmp
arpl
es
inc
xlat
cmp
or
sbb
outs
leave
push
mov
outs
jnp
mov
mov
loop
mov
call
cmps
loopne
xchg
(bad)
fxch
mov
addr16
out
fmul
mov
dec
mov
mov
and
jmp
jg
jne
fisub
sbb
shr
(bad)
mov
leave
je
adc
int
or
mov
iret
or
xor
cmp
jb
xor
(bad)
cli
and
sub
sti
aam
sbb
push
(bad)
pop
adc
mov
or
cmps
inc
loope
fadd
aaa
loop
jle
push
(bad)
push
sbb
(bad)
out
pop
or
mov
das
add
adc
mov
pop
movs
adc
lds
mov
imul
pop
pop
push
stos
and
out
test
in
lock
xor
mov
dec
mov
(bad)
xchg
ret
jecxz
or
cmps
(bad)
aas
fwait
pop
sbb
ins
inc
inc
sub
in
not
sub
mov
mov
sbb
sti
test
add
mov
sar
lods
add
cmp
rcl
in
hlt
mov
mov
and
add
sub
mov
cmp
push
or
dec
mov
aas
adc
xor
mov
push
dec
(bad)
push
hlt
inc
icebp
pop
jmp
xchg
mov
xchg
adc
xor
cmp
pop
stos
jp
shl
push
(bad)
sbb
dec
fnstsw
out
inc
dec
xor
test
popf
mov
leave
jp
arpl
sbb
xchg
jmp
popa
(bad)
in
(bad)
cmps
sub
cmp
mov
push
leave
ret
ja
icebp
retf
fiadd
mov
jp
xor
fcmovnb
pushf
jb
xchg
ins
cmp
xlat
jge
mov
mov
add
in
test
push
add
jno
sti
lea
add
shl
cli
sbb
popf
fiadd
jb
add
adc
out
inc
or
jo
out
sti
adc
sub
cmp
stos
mov
int3
jecxz
mov
jecxz
in
xchg
lock
ror
push
sub
inc
out
test
(bad)
sub
cmp
push
cmp
push
aas
mov
push
jne
xchg
cmps
dec
dec
jne
push
mov
jmp
cmps
sub
and
fbld
inc
(bad)
push
cwde
fwait
cmps
call
sbb
and
jmp
scas
dec
inc
mov
dec
ret
pop
push
sub
mov
mov
mov
sbb
sub
sti
popf
jp
sub
mov
adc
mov
fstp
push
call
adc
inc
pop
mov
inc
retf
xchg
jae
(bad)
les
imul
xchg
sbb
clc
mov
xchg
in
xchg
and
test
pop
repz
pop
in
arpl
sbb
ret
push
lds
cdq
adc
adc
and
mov
jae
mov
(bad)
mov
add
loopne
cmp
clc
rol
xchg
and
xchg
lods
jbe
inc
cmp
or
add
movs
or
ds
mov
cmps
fmul
mov
jb
xchg
pop
loope
inc
push
(bad)
push
push
sysenter
mov
mov
call
pop
leave
and
mov
mov
(bad)
imul
lahf
imul
inc
jnp
xchg
sub
(bad)
rcl
xchg
sub
dec
ins
lahf
rcr
push
es
aam
lock
lock
repnz
and
pop
outs
cs
icebp
mov
add
add
inc
mov
rol
jmp
clc
xchg
cs
fnstenv
jl
inc
mov
or
int
or
jnp
scas
shl
xchg
imul
or
add
loope
inc
jp
mov
test
retf
stos
sub
sbb
jle
ins
adc
xchg
stos
sti
jmp
push
addr16
out
iret
bound
jbe
or
cmp
pop
into
je
lods
mov
mov
inc
or
adc
dec
out
or
scas
loopne
les
and
add
mov
sub
pop
mov
test
pop
sbb
and
inc
lds
xor
das
push
es
push
mov
pop
mov
fmul
adc
xchg
imul
pop
in
lods
mov
lock
mov
xor
mov
add
sub
int3
jmp
sti
dec
loopne
mov
inc
rol
pop
push
out
div
daa
fdivr
(bad)
rol
outs
mov
popf
sub
jnp
pop
jl
out
icebp
jg
and
pop
int
cdq
add
data16
in
ret
push
in
add
mov
or
int3
push
mov
lahf
pop
jl
fmul
dec
push
dec
xor
dec
gs
addr16
jne
mov
enter
xor
add
movs
mov
mov
movs
fst
outs
jle
and
cmp
mov
mov
aam
sub
out
aad
xchg
xor
shl
fistp
jae
adc
nop
push
nop
jae
sub
lods
jns
frstor
xor
cmp
push
popf
xchg
xchg
daa
(bad)
out
jnp
jne
pop
sbb
idiv
fs
ret
mov
shr
in
pushf
pop
pop
push
and
mov
into
dec
(bad)
mov
lds
xchg
jb
in
enter
mov
gs
xchg
mul
xor
jmp
cmp
lar
push
mov
lods
sbb
pushf
add
retf
and
rcr
inc
not
cs
xchg
mov
sub
(bad)
pushf
clc
sub
nop
xchg
(bad)
shl
inc
cdq
in
cmc
jg
ror
les
and
sbb
rcr
mov
inc
imul
shl
dec
in
mov
fld
push
jl
mov
jmp
xor
punpckhdq
fisubr
sub
add
in
pop
xchg
outs
xor
add
leave
xchg
cmps
cmp
dec
cmps
mov
push
clc
(bad)
test
jmp
mov
mov
imul
sbb
in
jmp
bound
sbb
jmp
cmp
into
cmp
sbb
push
idiv
es
sti
pop
jmp
test
leave
cld
pop
fwait
push
cmps
fcmovb
ins
cmp
sbb
mov
aam
inc
or
pop
mov
test
jo
arpl
mov
mov
jo
and
stc
imul
into
mov
inc
push
or
dec
pushf
neg
cmp
cmc
xor
or
and
xor
cwde
sbb
pop
lahf
mov
sub
mov
cmp
jno
pushf
movs
push
ja
xor
mov
dec
inc
jo
xor
pop
jp
mov
stos
icebp
int3
idiv
hlt
sbb
xor
xor
mov
jge
inc
ds
cmp
icebp
dec
repz
push
out
push
into
loope
and
ins
(bad)
fidivr
pop
cdq
call
mov
xchg
mov
nop
je
shr
mov
push
int3
into
js
nop
push
or
jle
(bad)
mov
es
in
imul
bound
fdivr
test
push
stc
add
cld
add
enter
push
inc
jb
cmc
jnp
pop
push
mov
fst
je
retf
mov
mov
scas
jg
pop
xchg
fsub
mov
inc
cmp
xchg
ds
call
jno
xor
pop
(bad)
mov
and
sub
ja
ds
add
repnz
test
add
sub
mov
hlt
call
aas
outs
(bad)
test
inc
(bad)
adc
stos
aas
sub
and
cmp
retf
repz
jmp
mov
jae
call
call
adc
test
imul
and
imul
fadd
pop
sbb
jp
scas
fisub
mov
or
scas
pop
(bad)
js
mov
pop
out
xor
mov
imul
sub
adc
rol
ror
push
cli
sub
pop
inc
inc
adc
arpl
mov
adc
dec
xchg
xchg
xchg
pop
cmp
mov
fcmovb
jns
outs
mov
sbb
aaa
loopne
dec
sbb
in
(bad)
cmp
xchg
mov
sbb
pop
(bad)
and
outs
mul
scas
ds
fwait
inc
aaa
es
inc
xor
cdq
push
outs
hlt
sub
add
jae
cld
stos
inc
outs
push
mov
pop
mov
(bad)
dec
dec
pop
cdq
pop
adc
(bad)
je
sar
shl
or
dec
or
shr
into
cmp
push
sbb
inc
retw
bound
sti
pop
push
jmp
test
dec
mov
add
xor
imul
int3
stos
or
dec
sahf
xchg
ficom
fwait
div
and
or
aas
push
(bad)
loop
xor
out
push
jmp
xor
sub
jmp
sbb
add
fisttp
xchg
neg
mov
mov
and
pop
xchg
push
and
dec
sbb
push
aam
(bad)
xchg
repnz
xchg
xlat
(bad)
call
push
xor
mov
xchg
scas
repz
pop
pusha
vmovhps
ror
sbb
adc
cmp
ds
lock
add
xchg
mov
inc
int
mov
jb
mov
loope
mov
mov
mov
and
or
jecxz
repnz
ja
outs
push
pop
push
inc
adc
sub
gs
int3
shl
or
push
movs
out
mov
adc
cli
shl
or
sbb
lds
dec
and
(bad)
cmc
pop
rol
sbb
aad
das
xor
jbe
mov
sbb
movs
stos
fcom
xchg
rcl
add
pop
ret
push
sti
and
adc
or
mov
arpl
in
sub
mov
fimul
push
mov
cmp
leave
adc
pop
aaa
add
jp
repnz
mov
clc
iret
sbb
fmul
enter
(bad)
and
dec
cmp
fpatan
bound
cmp
adc
aad
mov
ficomp
pop
mov
push
cmc
addr16
or
mov
(bad)
fbstp
ds
fistp
fisttp
inc
inc
sub
shl
fstp
les
(bad)
cmp
and
ins
inc
jle
ja
(bad)
mov
and
imul
jl
add
(bad)
xor
jno
sub
adc
mov
dec
shl
pop
xchg
out
fist
mov
pushf
out
repz
add
addr16
cmp
dec
inc
out
ins
(bad)
adc
ret
fcmovu
and
mov
push
cmp
dec
test
and
pop
adc
pop
ret
and
(bad)
aas
dec
imul
push
sbb
xchg
and
xchg
and
mov
and
xchg
int
inc
in
pop
or
test
js
repz
repnz
std
jge
xor
call
and
xor
lock
pop
jg
or
and
scas
adc
sbb
mov
cmp
daa
outs
pop
js
inc
sbb
cld
push
dec
in
lock
shl
xlat
sbb
sar
enter
sub
test
lods
bound
(bad)
call
lea
and
fsubr
push
cmp
add
fldenv
test
mov
jmp
ret
lea
dec
ins
pushf
adc
fdiv
push
lods
bswap
jge
dec
fcomp
loopne
aas
inc
retf
call
xchg
nop
dec
pusha
sbb
stos
pop
leave
cmp
rcr
xchg
stos
fucomi
cmp
mov
fidiv
std
out
xchg
jl
adc
mov
sbb
iret
or
mov
push
nop
not
sub
cmp
clc
ret
xchg
hlt
jno
add
sbb
pop
cmp
and
dec
pop
div
mov
add
ds
popf
movs
add
into
stc
lock
nop
mul
xor
in
pop
movs
add
xor
add
rol
pop
ret
jl
stc
xor
in
cmps
stos
jbe
mov
dec
ss
mov
pop
push
jno
jae
xor
mov
cs
sbb
mov
(bad)
pushf
mov
pop
xchg
push
aas
or
xor
add
ror
sub
mov
or
jmp
cld
test
out
addr16
jmp
push
data16
adc
das
imul
lods
mov
mov
lahf
scas
mov
jae
dec
imul
cmp
sub
test
lahf
call
pop
xchg
inc
popf
lods
test
(bad)
out
mov
mov
mov
aas
adc
or
mov
add
cmp
adc
aad
adc
ss
daa
int3
push
xchg
mov
leave
mov
stos
pop
cmpps
out
or
push
add
inc
sub
sbb
push
ja
(bad)
out
scas
fwait
jl
push
mov
ja
shl
xor
mov
outs
sbb
mov
fiadd
inc
fisubr
call
push
dec
js
fild
push
ins
loopne
push
mov
pop
push
push
out
inc
mov
sbb
shr
add
aaa
(bad)
repz
(bad)
aas
jmp
js
fdiv
push
call
mov
mov
call
ror
mov
add
sub
mov
icebp
add
repz
iret
sub
sub
or
or
jbe
add
pop
(bad)
cmp
cmc
cwde
sbb
sub
inc
sar
(bad)
cs
add
xchg
jnp
mov
fwait
je
xor
xchg
sbb
xchg
(bad)
dec
ret
or
xor
adc
(bad)
fisub
cmps
mov
jno
mov
movs
mov
sub
lods
sub
pcmpgtd
push
xchg
lods
push
xchg
xor
mov
outs
cmps
retf
das
mov
ffreep
aaa
clc
dec
neg
mov
push
push
out
push
mov
pop
sbb
push
mov
int3
vpmacssdd
daa
or
(bad)
sbb
int3
xor
dec
les
ins
add
push
sub
mov
xchg
dec
bound
scas
aam
fiadd
and
mov
mov
dec
ss
div
xchg
sbb
inc
xor
xlat
div
xchg
or
ret
jmp
lahf
lock
lea
out
fwait
adc
int3
inc
cmp
dec
movs
pop
jmp
arpl
push
jg
and
cmp
dec
adc
inc
out
stos
adc
daa
ret
add
push
jp
arpl
pop
mov
mov
inc
cli
adc
shl
rol
pop
scas
sti
loope
add
imul
cld
pop
hlt
xor
icebp
mov
call
lahf
ds
mov
sub
inc
sbb
jmp
fs
push
mov
rep
enter
inc
adc
call
lods
or
sbb
xor
sub
loope
and
xchg
push
outs
xchg
push
je
stos
int
int3
div
fsubr
loope
fcomp
mov
mov
inc
or
ret
dec
jmp
xchg
push
shr
mov
mov
hlt
or
pop
xor
(bad)
pop
test
pop
arpl
fcomi
jnp
ss
and
adc
xchg
ss
xchg
daa
cmp
sbb
retf
push
cmp
imul
xchg
and
jmp
test
pop
in
jnp
ins
rol
cmc
(bad)
pop
sub
or
retf
fcmovu
jbe
fist
xchg
aaa
imul
ret
sbb
add
sub
mov
out
inc
push
xlat
push
cmp
bndstx
and
ds
repnz
cwde
outs
xchg
push
cmp
add
jmp
mov
sbb
cmp
retf
lea
jl
xchg
shl
dec
lods
sub
daa
mov
or
or
sub
loope
repnz
repnz
sub
sar
push
pop
(bad)
dec
xor
nop
or
mov
fstp
das
pop
pop
std
push
pop
out
stos
pop
les
xor
jg
jl
call
and
(bad)
cmp
sub
add
dec
push
sbb
cmp
ds
retf
