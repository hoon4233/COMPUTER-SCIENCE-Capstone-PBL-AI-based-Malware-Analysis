in
idiv
inc
enter
push
imul
jmp
jl
adc
fs
js
jo
sbb
push
inc
push
pop
pop
push
nop
inc
push
sbb
dec
inc
push
sbb
mov
inc
push
mov
fdivr
int
movs
call
ret
nop
push
mov
push
push
and
sbb
inc
and
clc
add
shl
adc
cmp
fnstsw
test
je
call
nop
fld
add
mov
jmp
(bad)
jg
data16
mov
test
je
test
je
push
mov
cmp
scas
fldenv
dec
pop
cmp
mov
mov
sbb
jmp
xor
mov
push
out
inc
add
std
fcmovnu
mov
rol
push
push
mov
retf
jg
cmp
cmp
(bad)
mov
xor
(bad)
and
add
in
mov
jo
xor
mov
mov
ja
push
pop
in
daa
hlt
mov
jp
mov
cmp
jge
jcxz
cmp
je
push
mov
mov
ja
lea
lea
jmp
rep
jmp
sbb
mov
add
std
dec
mov
xor
sar
mov
mov
sub
rep
ins
imul
cld
dec
sar
js
or
sbb
sti
repnz
ret
nop
(bad)
mov
shl
add
and
mov
jbe
or
pop
pop
fninit
fldcw
aaa
cmp
dec
call
ret
cmp
(bad)
jmp
add
push
repz
les
add
ins
xchg
pop
add
add
out
iret
and
add
push
push
call
(bad)
inc
hlt
cmp
je
add
jne
movsx
inc
inc
jmp
cmp
std
add
jnp
sbb
pop
sahf
in
les
loope
pop
pop
nop
daa
(bad)
movlps
loop
inc
inc
fstp
test
adc
cmp
push
mov
mov
mov
je
cld
push
pop
mov
test
sti
int
jbe
call
hlt
or
mov
mov
or
jg
cmp
cli
out
push
je
sub
add
fld
push
test
fcmovnu
ins
xchg
add
stos
mov
jp
or
stc
sub
jmp
or
add
adc
mov
sbb
fst
iret
je
or
jae
lock
frstpm(287
push
mov
push
cld
xchg
xlat
in
(bad)
not
add
xor
arpl
mov
(bad)
out
jnp
mov
ins
mov
mov
mov
arpl
ffreep
add
jo
push
nop
mov
mov
mov
push
fnstsw
jmp
push
das
je
mov
mov
add
push
mov
pushf
or
rcr
pop
aaa
pop
nop
dec
and
or
pop
mov
xor
pop
fs
lea
or
loop
xor
push
or
ja
fmul
add
or
fs
mov
ja
retf
jge
add
(bad)
adc
mov
inc
fiadd
adc
mov
out
or
lock
add
sub
sete
cmp
jle
mov
inc
mov
shr
rcl
add
iret
mov
mov
push
or
int
in
ret
mov
adc
leave
mov
retf
loopne
(bad)
mov
add
outs
jmp
mov
fstp
pop
and
mov
sbb
add
(bad)
ror
std
mov
add
dec
jne
add
xchg
add
sbb
inc
add
and
outs
adc
ja
add
mov
mov
iret
and
mov
mov
cmp
jne
cmp
adc
mov
in
jmp
jne
movs
nop
push
leave
div
sub
jne
cmp
add
adc
xor
jbe
je
mov
add
pop
in
jbe
pop
and
cmp
in
fld
call
xor
out
call
jl
add
jo
adc
or
xor
lock
fdiv
fmul
push
ds
push
js
lock
pop
fcom
(bad)
jno
inc
mov
dec
clc
dec
subps
jl
inc
inc
or
push
js
pop
or
sub
mov
or
in
neg
dec
jne
imul
sar
(bad)
xchg
jecxz
mov
hlt
pop
mov
or
push
cld
mov
adc
mov
rcl
clc
pop
cmp
stc
cmp
div
mov
push
imul
fdiv
pop
mov
test
add
mov
adc
or
imul
jl
ret
sbb
je
pop
js
retf
and
(bad)
cld
(bad)
mov
mov
clc
fs
mov
pop
jmp
jg
mov
lea
cmp
sub
mov
loopne
pop
pop
cwde
xchg
pop
outs
lock
mov
push
in
sub
ror
je
pop
xor
das
jge
xor
jl
dec
outs
or
pushf
pop
clc
repnz
cmp
pop
clc
jne
not
pop
xchg
jmp
inc
and
mov
out
mov
jo
add
and
sub
ret
loope
adc
loopne
and
inc
mov
sbb
mov
mov
mov
xor
or
cmp
jl
add
sbb
push
and
mov
add
pop
xchg
cwde
popf
mov
nop
push
push
mov
sbb
outs
adc
adc
xor
push
sbb
call
(bad)
mov
jmp
pop
mov
jno
in
or
cmps
xchg
mov
inc
sahf
xchg
or
mov
and
mov
sub
inc
xor
xor
push
lods
pop
(bad)
(bad)
clc
test
das
pop
push
dec
sbb
in
outs
pop
sub
je
add
mov
add
ror
push
cmps
lods
mov
and
add
stc
pop
sub
add
fimul
pop
jmp
or
add
jo
mov
mov
sub
cs
call
mov
jmp
xchg
outs
mov
lock
add
xor
or
xchg
push
sbb
jo
fidiv
sub
or
adc
xor
and
xlat
sub
and
mov
lods
mov
pushf
cmp
dec
add
inc
cld
dec
jne
jle
sbb
fmul
adc
repnz
ss
bound
pop
inc
sbb
inc
call
and
jmp
ret
push
loope
mov
push
inc
jecxz
cld
sub
ja
add
push
shr
call
pop
ds
inc
dec
je
mov
jnp
or
add
je
jmp
or
mul
add
and
or
add
in
fdiv
shr
dec
jmp
push
push
cvtps2pd
or
jmp
or
sbb
ficomp
(bad)
and
aaa
jle
sti
add
add
pop
dec
cmp
or
jo
fcomp
dec
or
fdivr
subps
add
dec
or
daa
mov
dec
call
test
ins
idiv
push
jl
cmp
jl
dec
jle
je
fisub
dec
sub
(bad)
jmp
mov
jne
lods
jmp
xchg
and
fs
or
cwde
fcomp
inc
aas
pop
sub
or
es
sbb
dec
movs
lds
movs
cmp
sbb
cmp
dec
ret
(bad)
(bad)
jmp
mov
mov
jecxz
add
push
arpl
push
jnp
repz
cmp
pop
xor
or
cwde
clc
cmp
loope
sub
mov
shl
add
js
jmp
jo
cmp
pop
dec
cwde
rcl
jp
push
jmp
jmp
xchg
aaa
imul
dec
movs
bnd
inc
aas
push
mov
lock
aas
jl
push
mov
add
lock
adc
dec
out
dec
add
add
mov
xor
push
add
movs
(bad)
movs
cmp
and
cmp
aad
or
cmc
cmp
js
cvttps2pi
ins
xchg
outs
lea
push
jo
add
or
adc
adc
retf
sbb
lods
cmp
and
sbb
ins
mov
sahf
sub
(bad)
adc
push
int3
mov
jno
repz
or
lds
mov
pop
jmp
sub
imul
pusha
lock
sahf
int
sub
adc
push
sbb
adc
mov
icebp
jmp
pop
cwde
shr
xor
ret
out
mov
stos
push
fstp
pop
ret
add
jb
add
hlt
cmp
test
mov
mov
or
sub
mov
fnstsw
and
push
mov
shl
pushf
dec
push
ds
mov
sbb
leave
les
stos
pop
or
pop
pop
jns
neg
fisubr
sub
mov
sbb
fincstp
sbb
mov
or
cmp
not
loopne
rcl
(bad)
rcl
out
xchg
sbb
test
ficomp
out
inc
loop
pop
test
pop
rol
or
fdivr
jmp
mov
pop
sub
xchg
xor
pop
js
mov
jl
mov
adc
jge
ret
pop
push
mov
fld
pop
mov
xchg
add
setl
mov
mov
mov
xor
pop
les
pop
dec
rol
xor
mov
daa
in
sbb
fmul
or
mov
(bad)
sub
out
sbb
xchg
jle
mov
cld
add
sar
and
jge
jmp
mov
push
inc
fsubrp
dec
outs
jnp
mov
dec
ja
cmp
mov
lds
xchg
add
scas
mov
sar
mov
daa
jno
mov
sub
bound
inc
test
and
in
inc
pop
stos
dec
fiadd
adc
mov
sti
rol
sbb
mov
jg
sbb
hlt
movs
mov
xchg
mov
(bad)
lahf
xchg
push
push
mov
mov
and
add
stos
dec
mov
ins
add
scas
inc
int3
pop
ins
push
clc
pop
ret
sub
add
sub
nop
movs
add
jbe
lods
mov
sub
xlat
or
mov
les
mov
in
and
inc
das
xchg
outs
jb
imul
jo
jb
jmp
mov
sub
and
cmp
sub
xor
xor
inc
jbe
outs
fdiv
gs
bound
dec
push
cmp
in
loop
push
movs
or
sub
cld
sub
outs
je
sbb
cmp
mov
pop
lock
(bad)
loop
mov
jmp
push
mov
(bad)
ficom
mov
test
es
xchg
push
or
add
lods
fist
das
inc
test
js
ret
adc
test
fcmovnb
mov
in
sti
test
add
jo
fnstenv
fiadd
jl
add
mov
fld
test
js
mov
or
jo
dec
sbb
lods
mov
sub
inc
jl
dec
bound
xor
fs
mov
jb
inc
push
cwde
xchg
mov
and
xor
(bad)
int
mov
in
sub
cmps
bound
adc
mov
pop
jo
or
push
enter
push
or
enter
dec
xor
and
and
and
and
or
enter
adc
xor
and
or
cmp
and
nop
inc
push
cmp
hlt
lock
push
sbb
in
sbb
(bad)
aam
fs
inc
ror
enter
push
(bad)
sar
mov
cmp
add
cld
sar
hlt
sbb
lock
call
in
fcom
aam
inc
push
sbb
les
sbb
mov
nop
inc
mov
test
nop
inc
push
movs
mov
sbb
jp
push
mov
leave
retf
xchg
pop
jb
jge
add
idiv
dec
push
das
aad
ror
add
sub
lods
test
lea
or
push
sar
stos
std
inc
xor
shl
xor
nop
imul
pop
xor
or
call
adc
syscall
mov
or
mov
sbb
or
push
inc
popa
mov
(bad)
in
cli
dec
cs
or
popf
or
outs
imul
lods
sub
mov
xchg
clc
add
mov
sbb
lea
in
inc
mov
jmp
and
data16
dec
and
xor
cmp
add
in
je
jp
jle
not
popf
sub
in
or
call
(bad)
pop
mov
cdq
idiv
or
inc
xor
(bad)
and
or
cmp
inc
loope
add
sbb
test
mov
sahf
rcr
clc
dec
jle
sti
or
and
into
dec
inc
add
and
inc
mov
pop
ins
in
mov
adc
in
ins
mov
add
jle
test
xor
(bad)
jl
jne
and
add
jb
sub
push
cs
ret
in
es
and
test
sub
imul
lock
dec
jne
mov
sub
push
or
retf
ins
pop
sbb
in
sar
cld
imul
fs
mov
clc
or
es
adc
sub
jb
ror
add
mov
icebp
addr16
test
pop
sbb
mov
add
out
sub
and
outs
mov
inc
stc
cli
jns
iret
(bad)
int
mov
add
lahf
sti
ret
xchg
xor
push
mov
mov
sbb
mov
adc
ins
inc
mov
cwde
cmp
aad
add
or
fidivr
jecxz
add
add
push
lods
js
and
dec
jnp
dec
cld
xor
cmp
add
out
loope
push
(bad)
jl
fwait
xor
jl
mov
push
stos
ret
push
clc
and
xchg
push
push
push
push
out
push
sbb
les
fsubr
lods
push
adc
sbb
push
cs
std
push
mov
xor
je
and
mov
or
xchg
and
ror
or
ret
pop
sub
retf
inc
retf
test
hlt
push
es
push
retf
fdivr
arpl
mov
jge
mov
jns
data16
inc
sbb
push
(bad)
mov
test
movq
push
push
aas
in
ret
fwait
push
js
cs
test
outs
mov
dec
cmp
mov
mov
out
test
ror
sbb
retf
hlt
nop
pop
outs
or
sbb
(bad)
movs
repnz
test
sbb
jns
sbb
idiv
clc
push
mov
sbb
inc
fsubr
add
add
mov
fcmovu
sbb
inc
test
cmp
sbb
push
and
sar
adc
jmp
arpl
sbb
inc
jbe
outs
xchg
dec
repz
pop
mov
xchg
push
out
int3
pop
mov
das
clc
adc
xchg
mov
in
clc
sti
(bad)
sar
mov
adc
push
sub
test
lods
idiv
inc
fmul
sub
mov
pushw
data16
add
add
add
add
jnp
out
mov
pop
sbb
adc
pop
shr
shl
add
dec
push
push
sub
and
jnp
xor
mov
push
jns
outs
pop
shl
pusha
dec
inc
(bad)
not
ret
jbe
cmp
es
jbe
push
adc
movs
add
ja
jge
lock
inc
and
adc
leave
push
jmp
add
ret
sbb
push
and
les
pop
sbb
lods
inc
sbb
add
xor
arpl
aam
mov
(bad)
ja
jnp
(bad)
ss
mov
mov
rol
cwde
dec
repnz
sbb
xchg
or
or
(bad)
cmc
and
sbb
in
lock
adc
dec
jmp
cmps
(bad)
das
add
ret
stos
sar
jl
adc
add
adc
xor
mov
fdiv
aas
add
push
xchg
ret
pop
pop
cwde
aad
fmul
jne
test
(bad)
xor
xchg
xlat
rol
add
pop
pop
rol
jne
ja
lea
data16
or
cmp
div
mov
adc
sbb
or
add
lods
push
cmp
fild
or
inc
sbb
pop
je
hlt
jne
daa
inc
lea
call
jbe
xchg
dec
xchg
mov
pop
inc
cmp
jle
mov
mov
adc
frstor
push
jl
push
push
pop
sar
hlt
jne
(bad)
adc
push
stos
pop
pop
jne
(bad)
fild
scas
and
lods
pop
(bad)
and
fadd
add
add
cmp
inc
adc
fisttp
mov
pop
or
cmp
arpl
repz
adc
xchg
pop
mov
pop
mov
mov
add
add
lock
cmp
jae
push
prefetcht2
push
push
dec
pop
adc
inc
adc
test
add
xor
dec
xchg
mov
ins
lods
iret
jmp
mov
adc
xchg
sub
or
rcl
(bad)
mov
inc
add
cmps
lock
gs
dec
mov
push
add
pop
jo
dec
fild
sub
das
fmul
inc
(bad)
call
push
fs
pushf
inc
nop
adc
pop
div
dec
rol
sti
add
add
inc
add
push
add
fsubr
pop
push
push
or
xor
cld
call
add
(bad)
in
lods
jecxz
in
and
mov
or
mov
mov
dec
xchg
(bad)
adc
ds
or
fwait
inc
dec
ja
pop
sbb
sub
pop
cvtps2pi
stc
fldenv
lock
ja
cmp
mov
stc
jne
jmp
cmp
or
mov
sbb
push
adc
adc
shr
sub
pusha
or
add
xor
pop
mov
xor
mov
out
xchg
and
fidiv
fadd
mov
imul
xchg
dec
aaa
mov
aad
adc
sbb
push
je
leave
mov
inc
xor
pop
dec
icebp
mov
scas
mov
mov
loop
push
mov
sbb
inc
inc
(bad)
test
(bad)
shl
mov
mov
and
mov
xor
xor
nop
jmp
pop
xor
or
rep
shr
aaa
push
and
cmp
mov
push
adc
ret
dec
(bad)
pushf
jmp
xchg
pop
leave
xchg
or
mov
sub
pshufw
add
and
das
jne
adc
or
jbe
add
data16
pop
push
add
dec
loopne
xchg
clc
sar
sbb
adc
dec
popa
data16
ret
and
cld
or
ja
sub
jecxz
jmp
pop
xor
movs
js
popa
pop
aaa
cmp
mov
push
add
fild
fmul
sub
and
add
loopne
add
outs
jg
jne
add
xchg
push
sub
inc
sbb
sbb
ret
adc
out
sub
jp
push
lock
mov
xor
in
je
(bad)
fldenv
add
push
sbb
and
ja
scas
fdivr
xor
adc
lock
sub
aam
ins
mov
or
xchg
mov
outs
clc
repz
mov
push
dec
push
jns
add
(bad)
ja
jne
push
mov
lods
cmp
fidiv
cmp
aaa
and
and
add
pushf
mov
push
sub
dec
add
xchg
add
retf
add
inc
sbb
cld
sub
xchg
add
repnz
jnp
mov
mov
adc
jb
xchg
sbb
cmp
push
nop
(bad)
cmc
or
xor
adc
in
mov
rcr
or
es
cmp
popa
test
add
or
inc
inc
add
dec
add
mov
and
add
stc
fcom
sbb
out
mov
enter
xchg
lea
jle
or
sub
add
dec
je
fisubr
in
mov
pop
sub
pusha
leave
pop
add
in
lock
or
mov
cwde
cmp
adc
popa
add
or
xchg
(bad)
push
add
adc
in
xor
adc
loopne
loop
mov
mov
and
mov
sub
cld
cld
push
mov
in
and
rcr
clc
(bad)
mov
and
add
loopne
sbb
int3
mov
mov
fstp
mov
inc
lods
shr
cmp
dec
mov
mov
sbb
aas
addr16
rcr
push
mov
in
mov
fwait
xchg
or
push
mov
ds
inc
inc
call
sbb
and
in
dec
leave
xor
loopne
dec
mov
cmp
fadd
jne
ja
xchg
ins
retf
fcomp
int3
inc
test
jb
aam
mov
xor
jne
imul
inc
or
adc
in
dec
int3
push
pop
xchg
(bad)
(bad)
and
mov
clc
push
mov
mov
test
call
push
jb
(bad)
rol
nop
addr16
and
mov
arpl
movs
js
rcr
mov
and
sbb
push
(bad)
mov
jg
clc
jmp
inc
adc
and
test
jae
in
ret
test
movs
mov
push
adc
mov
dec
into
rcr
pop
push
add
inc
push
das
inc
pop
jg
mov
fcmovne
add
dec
push
pop
pop
leave
mov
out
add
orps
pop
test
add
outs
mov
and
ds
push
in
push
and
xchg
imul
push
lds
cs
mov
jne
fsub
ins
fistp
in
inc
xor
ror
cs
(bad)
and
fnstcw
js
push
mov
(bad)
xor
sub
sbb
xchg
outs
add
jecxz
and
add
mov
clc
aaa
adc
loopne
sub
pop
mov
in
in
and
mov
jmp
adc
add
and
xlat
daa
dec
test
mov
push
cmp
jl
adc
push
add
popa
add
or
xchg
mov
mov
inc
out
mov
sbb
and
xor
addr16
and
ret
push
(bad)
jbe
pmulhuw
mov
mov
dec
sbb
add
xor
pop
push
test
imul
adc
pop
cld
xchg
shl
lea
jmp
cmp
repnz
mov
je
push
inc
or
dec
add
inc
ret
fst
nop
and
dec
push
or
adc
popa
into
sub
mov
mov
adc
sbb
sub
xchg
sub
(bad)
xlat
test
rol
sub
mov
or
rol
leave
add
dec
inc
xchg
(bad)
push
sub
inc
ins
out
leave
mov
repnz
xor
stos
mov
jo
nop
inc
inc
inc
xchg
sbb
je
or
or
cld
pop
lahf
movs
fsubr
jl
or
pop
int
add
xor
and
mov
aas
adc
or
pop
pusha
pop
pushf
push
sub
pop
sbb
cmp
ret
jno
jno
cld
sub
or
mov
adc
dec
sub
fst
sbb
mov
push
adc
mov
lds
mov
jmp
push
mov
lods
inc
not
cmp
dec
xor
add
jl
les
nop
popf
sub
fwait
je
xchg
mov
and
xor
sbb
pop
mov
loop
push
mov
xor
div
icebp
mov
or
cdq
and
xchg
cmp
ror
sbb
mov
dec
call
inc
gs
shl
mov
mov
dec
sub
or
hlt
inc
leave
and
inc
inc
mov
dec
aaa
push
dec
sub
sbb
fdiv
mov
pop
sbb
mov
ja
movnti
add
pop
jae
jae
int
adc
add
jne
out
cmovae
jne
das
outs
pop
push
pop
jb
xor
pop
outs
sbb
inc
xlat
dec
inc
adc
cmp
xlat
add
dec
inc
jae
pop
xlat
jne
popa
ins
pop
fs
inc
aaa
ins
sbb
imul
stos
outs
adc
jb
xlat
dec
bound
adc
push
cdq
in
inc
pushf
mov
sbb
jb
and
inc
push
shr
jo
test
(bad)
outs
jo
call
push
push
mov
and
lods
sub
adc
fidiv
push
xchg
and
mov
pop
mov
fiadd
cld
mov
sub
inc
inc
dec
jne
pop
or
iret
dec
mov
pop
lock
not
ret
jnp
inc
leave
mov
inc
mov
add
push
jle
stos
xchg
dec
mov
in
stos
add
mov
sahf
adc
adc
movs
stos
sahf
fcmovnu
js
sbb
aaa
out
movs
mov
xor
push
aas
clc
adc
add
add
clc
xchg
das
fs
outs
jmp
jo
mov
lea
xchg
int
(bad)
lock
adc
push
call
inc
call
ret
xor
pop
(bad)
fnstenv
test
ret
dec
and
lahf
or
adc
dec
cmp
ret
(bad)
or
xor
push
loopne
add
sbb
sub
or
mov
punpckhwd
or
jne
pop
sbb
aam
add
add
aam
adc
in
aas
and
push
xchg
push
hlt
xor
add
mov
and
sbb
pusha
clc
in
add
fnstenv
pop
xlat
std
cmp
adc
dec
add
dec
cmps
rcl
movs
mov
xchg
ror
lock
push
cmps
in
nop
dec
dec
lock
push
iret
cld
and
popa
test
or
hlt
enter
fs
add
or
leave
ret
push
push
dec
jl
add
inc
cs
add
ins
not
lahf
push
data16
adc
or
mov
add
jmp
sbb
mov
cmp
je
sbb
cmp
lahf
or
scas
call
and
mov
setp
(bad)
and
scas
push
mov
dec
leave
or
cmp
stos
sub
js
(bad)
mov
inc
sub
or
xchg
lahf
xor
cs
or
jo
mov
test
dec
enter
adc
(bad)
(bad)
cmp
sbb
and
inc
push
push
and
dec
push
push
aas
and
add
pop
or
or
or
push
(bad)
jmp
pop
add
sbb
and
cmp
cmp
daa
sub
sub
sub
in
jmp
xor
dec
adc
aas
fadd
push
push
pop
inc
inc
dec
inc
inc
inc
test
inc
call
or
shr
push
push
ds
test
mov
push
call
inc
push
arpl
cmps
imul
call
dec
dec
shl
bound
dec
shl
xchg
cmps
mov
pop
ss
rcr
jmp
call
call
mov
fdiv
cmps
imul
sub
ds
pusha
jno
dec
shl
xlat
call
stc
or
sub
imul
imul
ins
call
xor
jo
xor
in
mov
adc
mov
dec
mov
dec
mov
dec
mov
in
in
(bad)
in
mov
cld
add
and
xor
adc
and
jb
and
inc
jb
inc
push
ins
and
and
lods
jb
inc
jb
shr
and
inc
hlt
adc
and
xchg
and
cmp
movs
and
xchg
and
aam
and
xchg
in
add
sbb
xchg
or
and
xchg
sbb
xchg
inc
push
leave
xchg
sbb
fs
sbb
xchg
sbb
movs
mov
sbb
xchg
(bad)
aam
xchg
sbb
in
add
mov
dec
xchg
xor
mov
dec
inc
push
in
mov
push
dec
mov
in
dec
clc
retf
pop
mov
adc
sbb
xchg
sbb
mov
enter
in
add
mov
sub
jl
dec
call
mov
test
mov
ss
cld
int
fwait
dec
sbb
or
jge
test
daa
aaa
cmp
out
mov
mov
jo
ja
punpcklbw
and
mov
xor
mov
add
push
call
jmp
mov
in
mov
lock
inc
ja
pop
add
(bad)
jne
lea
call
add
fldcw
sbb
fadd
call
mov
xchg
call
es
cmp
push
test
push
push
std
into
into
int
std
mov
mov
or
jns
jge
lds
std
shl
mov
mov
adc
call
push
fadd
fnstenv
inc
sub
push
and
test
jl
bnd
out
addr16
inc
or
adc
mov
sub
mov
pop
xchg
jne
jle
daa
fldenv
sub
pop
adc
enter
arpl
imul
aaa
gs
xor
adc
or
jnp
fstp
adc
psrlq
pop
nop
sub
pop
xor
xor
enter
xor
or
cmp
imul
push
or
or
test
inc
pop
jns
adc
inc
mov
imul
(bad)
enter
dec
leave
push
bound
popa
aas
not
addr16
mov
jae
inc
mov
xor
or
xor
ins
sbb
iret
cmp
pop
outs
pop
sbb
iret
and
and
fnstenv
fstp
sbb
jmp
outs
cmps
popa
pop
mov
jns
dec
or
sbb
mov
jae
dec
jecxz
sbb
rol
sbb
aad
and
jecxz
and
outs
xor
sbb
xor
inc
xor
jg
xor
pop
xor
and
xor
xor
and
xor
and
cmp
scas
xor
xor
xor
and
xor
xor
mov
sbb
xchg
and
xchg
aaa
cmp
adc
mov
es
(bad)
jo
icebp
mov
xlat
xor
movs
je
dec
and
sar
and
dec
fs
and
imul
jmp
fld
sbb
sbb
inc
je
dec
rcl
(bad)
and
out
sub
adc
jne
ret
push
mov
cmp
adc
add
push
neg
and
inc
jmp
outs
gs
ja
xlat
push
test
or
rcr
test
push
cmps
lods
je
adc
sbb
cdq
sbb
imul
sub
xchg
lea
aas
push
xor
ins
or
push
sbb
push
sbb
mov
stc
mov
dec
cwde
mov
sbb
push
addr16
adc
outs
push
outs
das
dec
pop
fld
push
pop
or
inc
or
add
rol
push
xchg
inc
mov
sub
pushf
and
add
loopne
mov
xchg
jle
out
movs
popa
jge
movs
add
test
mov
or
cmps
add
push
cdq
sbb
or
in
jle
mov
lods
push
adc
inc
adc
mov
or
in
inc
jae
xchg
adc
or
and
inc
out
mov
mov
jo
movs
cwde
nop
push
adc
(bad)
pushf
mov
sub
fs
mov
xor
adc
inc
jmp
inc
outs
and
pop
mov
sbb
cmc
outs
je
mov
out
xchg
or
daa
inc
cmp
lds
push
pop
push
scas
mov
pop
scas
cld
mov
lds
aas
mov
adc
adc
das
or
inc
mov
adc
jmp
jne
mov
test
mov
push
push
push
jne
push
xor
movs
inc
outs
int3
xchg
jo
xor
aam
mov
popf
aaa
adc
call
lea
or
fmul
lds
retf
pusha
shl
adc
test
js
jne
and
test
cmp
movs
neg
dec
sbb
or
fdiv
fild
jo
pop
add
(bad)
cld
or
xchg
in
pusha
shr
mov
inc
loope
mov
xor
lock
sub
dec
xor
pushf
lods
mov
lock
ret
xchg
mov
adc
sub
or
dec
mov
icebp
test
(bad)
fcom
dec
inc
pop
mov
(bad)
repz
lock
outs
(bad)
cmp
jae
jp
mov
add
xor
fisub
cdq
lods
adc
fdivr
mov
fcomp
les
fsub
fs
mov
adc
xor
retf
mov
or
add
dec
sbb
dec
or
pop
or
jbe
arpl
and
lock
test
add
mov
and
jg
dec
fcom
scas
xor
cmp
test
xor
arpl
popa
pusha
xchg
pop
aaa
xor
dec
pusha
dec
int
or
xor
daa
mov
dec
mov
cdq
add
mov
xor
test
cmp
(bad)
push
in
add
in
sub
nop
or
in
lahf
rol
or
retf
cmps
and
cmps
ss
push
mov
mov
in
nop
mov
daa
in
(bad)
mov
push
hlt
pop
add
sub
and
jge
fcmovnu
in
ds
jmp
jle
mov
jne
add
in
enter
mov
and
add
sub
enter
rol
sub
nop
addr16
je
leave
mov
pop
jmp
jmp
and
sbb
inc
push
jmp
and
push
add
and
dec
inc
adc
adc
or
mov
lods
inc
add
mov
mov
test
cmp
ins
loope
call
fcom
jecxz
mov
sub
fsub
retf
jnp
fwait
add
pop
mov
loopne
jmp
and
push
xor
xor
add
ins
rcl
push
daa
and
dec
push
rol
das
dec
pop
rol
or
nop
inc
adc
add
lea
(bad)
je
push
push
shl
mov
jmp
cmp
mov
add
ror
or
adc
inc
iret
repz
dec
sbb
push
push
or
mov
adc
sbb
add
cwde
push
bound
push
push
or
rcl
jae
fs
add
or
add
fsub
push
(bad)
pop
pop
jo
shr
lods
cmp
or
xchg
or
jmp
jle
mov
fisub
lods
sub
sbb
or
mov
iret
push
pop
iret
cmp
mov
pop
sbb
cmp
mov
push
fdiv
xor
jbe
dec
sbb
js
sub
sbb
or
adc
inc
pop
sub
xchg
icebp
adc
push
push
mov
sbb
mov
rol
pop
mov
imul
push
sub
daa
loopne
mov
add
loopne
xchg
mov
js
add
repnz
fcomp
pop
cs
add
mov
jmp
xlat
(bad)
jbe
lgs
adc
movs
mov
cmc
outs
jmp
xchg
cmp
sub
es
or
mov
sbb
(bad)
and
loopne
or
mov
fcomp
fsub
sub
and
mov
cmovnp
xchg
call
test
stos
pop
or
imul
cmp
jl
adc
and
add
add
test
or
xor
int3
adc
pop
push
leave
(bad)
out
sbb
aaa
xchg
or
jne
cwde
mov
dec
jne
xor
mov
jo
hlt
stos
es
jnp
mov
ret
ins
lods
pop
enter
lock
retf
(bad)
ins
adc
jb
push
cmps
int3
dec
stos
xor
xchg
sbb
cld
test
add
xchg
jecxz
add
push
sbb
xchg
mov
mov
rcl
xchg
pop
rcr
in
dec
xchg
jne
sub
call
add
push
xor
mov
push
stos
or
or
test
or
or
(bad)
out
mov
or
and
lods
cmp
jnp
pusha
cmp
jmp
or
enter
nop
neg
mov
push
sub
cdq
cmp
sub
xchg
in
enter
cs
and
outs
cmp
sub
mov
mov
pop
pop
mov
push
mov
repz
sbb
xchg
xor
sub
ins
outs
addr16
fwait
sub
cwde
aad
rol
fs
inc
push
jo
push
push
test
add
retf
in
movs
mov
rcl
adc
jle
pusha
and
sbb
jnp
push
or
ret
shr
leave
push
jne
inc
or
jbe
and
(bad)
pop
lea
cld
pop
xchg
cmp
cmp
jb
ds
lods
movs
outs
and
sub
ss
lods
pop
push
mov
dec
sahf
leave
push
je
js
lahf
dec
sahf
dec
jl
sub
enter
test
sbb
imul
nop
adc
sbb
mov
fadd
call
xor
fld
gs
jae
adc
jo
outs
jb
or
shl
mov
leave
fnstenvw
lea
cmp
push
jnp
idiv
pop
xor
fistp
addr16
(bad)
fimul
ror
adc
or
xor
ficomp
mov
or
sbb
les
retf
pop
clc
add
adc
jno
cs
or
shr
lods
(bad)
lock
cmp
or
retf
cmc
aam
lods
sbb
add
push
add
dec
xchg
sbb
mov
add
cmp
ds
push
inc
ins
cmps
fbld
mov
mov
sbb
sub
mov
pop
push
or
vmovmskpd
in
call
mov
sub
retf
movs
xor
xor
or
(bad)
adc
push
push
push
add
add
cmp
xor
or
nop
mov
fst
fild
or
sti
add
jl
dec
jmp
mov
je
or
xchg
and
pop
mov
push
cli
or
enter
mov
or
add
or
call
add
or
xchg
cmp
xchg
mov
inc
loope
test
push
and
adc
cld
and
jo
sti
shl
push
dec
es
movs
mov
add
lea
sti
jae
lods
mov
xor
mov
mov
adc
or
and
cmp
les
imul
test
mov
sahf
xchg
and
int3
fsubr
mov
ss
add
mov
in
and
fsub
fimul
cmp
add
aam
(bad)
sub
push
adc
lock
adc
push
fidiv
sub
jne
lock
sub
sub
in
aam
fcom
add
adc
dec
cmp
xchg
jbe
mov
and
pop
imul
or
hlt
inc
fld
push
sub
add
mov
adc
jb
or
mov
ret
arpl
cmp
sub
push
ret
cwde
(bad)
data16
and
int3
or
mov
enter
mov
jbe
pop
nop
fdivr
jns
jne
mov
mov
jb
xor
fs
outs
lahf
cld
push
inc
or
ins
outs
outs
ja
outs
add
sbb
test
popa
fs
jo
and
inc
add
data16
call
sub
(bad)
cmp
das
lea
inc
xchg
cmp
unpcklps
pushw
call
mov
das
adc
adc
js
pushf
or
xchg
dec
xor
jmp
add
dec
sbb
inc
pop
dec
add
pop
call
dec
and
add
and
daa
pop
(bad)
mov
ins
das
jno
sbb
mov
cmp
aam
xchg
in
fs
cwde
(bad)
shl
in
dec
scas
push
add
inc
sub
or
sbb
dec
mov
icebp
adc
xchg
das
sbb
and
daa
sbb
(bad)
pop
test
inc
popa
xchg
xchg
outs
rcl
add
adc
hlt
out
mov
(bad)
add
sbb
xchg
adc
stos
mov
pop
or
or
je
dec
repz
jns
fldenv
push
in
add
pop
push
callw
nop
xchg
push
maskmovq
fsubr
jae
ins
ja
or
xor
aam
sub
retf
mov
mov
add
and
push
test
ss
jmp
push
nop
mov
dec
add
push
mov
push
and
and
pop
mov
je
xchg
scas
push
fild
fidiv
jmp
jp
jl
pop
mov
xor
loopne
mov
or
daa
push
cwde
jle
add
lods
shl
xchg
or
inc
xor
pusha
push
shl
dec
aad
sub
ret
sbb
je
xchg
and
hlt
add
leave
mov
movs
mov
int3
or
cmp
or
mov
cmp
repnz
jmp
or
add
dec
mov
push
add
or
add
sbb
and
dec
mov
and
mov
pop
popf
sub
add
or
push
cld
or
xchg
popa
cmp
push
iret
in
call
inc
jp
or
mov
add
mov
and
xchg
aaa
inc
cmp
dec
pop
rcr
dec
push
push
and
mov
dec
xor
fadd
sbb
or
ins
push
movs
jl
rcl
or
cmp
in
mov
lahf
mov
int
mov
and
push
and
fwait
gs
mov
pop
in
sub
sub
or
pop
fdiv
test
cmp
fdiv
and
aaa
hlt
cmp
mov
add
pop
ffreep
sbb
add
jae
scas
sub
mov
pop
scas
or
adc
add
and
sbb
cmc
mov
sbb
xchg
mov
xchg
ins
push
dec
xchg
jge
daa
mov
icebp
mov
adc
vphsubdq
push
pop
or
and
rcl
test
(bad)
sbb
and
pop
fwait
lods
pop
es
pop
xchg
cmp
adc
sub
cmp
dec
mov
sbb
fwait
setne
lds
sbb
cmovbe
mov
pop
test
cmc
push
out
push
mov
mov
and
dec
mov
xchg
push
cmp
or
mov
and
jo
cmp
mov
adc
shl
enter
mov
adc
cmp
xor
rcl
shl
or
leave
test
cmp
shl
cmp
mov
mov
mov
xchg
and
dec
cmp
outs
loope
push
icebp
xchg
and
ins
(bad)
xor
addr16
pop
and
ret
rcr
ds
(bad)
ja
dec
push
xor
mov
adc
out
mov
mov
push
mov
cmp
push
push
ins
push
or
fnsave
push
cmp
aas
(bad)
xlat
les
les
cwde
jae
lds
push
out
mov
ins
enter
push
xchg
sub
nop
nop
and
neg
mov
fwait
cmp
and
test
mov
ds
xchg
sub
ret
pop
ss
adc
mov
and
mov
shr
xchg
(bad)
jno
jnp
add
sub
in
popa
daa
mov
pushf
imul
xor
(bad)
xor
daa
mov
rcr
cld
mov
es
mov
dec
in
repz
mov
push
add
sub
dec
jmp
inc
xchg
inc
adc
mov
and
sbb
outs
xchg
dec
icebp
sbb
(bad)
mov
repnz
cmp
(bad)
imul
or
jmp
jecxz
cld
dec
fld
repnz
xrstors
test
adc
test
into
mov
lock
pop
adc
adc
fwait
or
add
inc
pop
bound
cmp
enter
add
mov
jns
ror
mov
in
dec
pusha
pop
add
aas
rol
cmp
icebp
dec
sub
fwait
ror
pusha
adc
rcl
adc
mov
dec
arpl
call
adc
aaa
xchg
clc
mov
mul
lea
lea
dec
add
mov
pxor
push
nop
mov
or
sti
cs
sbb
fnstcw
inc
pop
sub
cmp
shr
les
add
enter
mov
dec
inc
test
sub
mul
mov
push
or
inc
or
sbb
push
mov
push
or
iret
sub
push
cmp
jge
add
shr
sbb
sahf
sbb
mov
jl
jb
inc
add
(bad)
lods
xor
pusha
sbb
mov
inc
mov
jg
and
call
adc
push
sar
pop
cmp
sbb
je
and
inc
inc
les
push
repz
ret
shl
arpl
xor
adc
jbe
sub
lea
adc
data16
xor
xor
push
dec
adc
je
add
fbld
jo
xor
pop
cmp
test
and
xchg
pop
adc
movs
and
retf
adc
sbb
add
in
test
pop
pop
test
add
fcom
push
cld
xchg
verw
(bad)
(bad)
call
retf
int3
enter
enter
fmul
(bad)
(bad)
(bad)
loopne
jecxz
in
jae
cdq
in
les
jnp
pop
not
cmp
pop
sets
inc
and
es
data16
mov
lods
movs
pop
xor
xor
mov
inc
push
fst
inc
inc
adc
lea
add
enter
nop
adc
mov
inc
add
inc
adc
push
les
mov
add
ja
pop
inc
add
add
or
movs
and
inc
sub
dec
add
push
or
add
pop
add
inc
or
popf
push
inc
inc
xchg
or
inc
aaa
inc
adc
sub
sbb
pop
ja
add
add
or
add
imul
sbb
sar
add
or
add
inc
std
lahf
mov
inc
cmovs
cmc
aas
and
mov
dec
sti
lods
call
es
mov
(bad)
fcmovbe
sar
js
push
call
and
pop
mov
(bad)
outs
dec
inc
dec
mov
test
ja
arpl
dec
and
push
daa
ror
(bad)
dec
dec
(bad)
outs
aaa
mov
xchg
dec
push
adc
arpl
jg
aad
stc
clc
clc
dec
sbb
xchg
popa
inc
pop
push
mov
mov
addr16
pop
aas
mov
xchg
ss
cld
dec
pop
aaa
sub
movs
(bad)
aas
cmp
(bad)
mov
cmp
xor
fs
mov
ins
dec
inc
(bad)
cld
add
xchg
jge
jmp
sar
pop
jnp
out
dec
adc
xchg
js
outs
clc
push
call
inc
mov
jo
inc
mov
nop
out
inc
push
jmp
fcmovu
(bad)
mov
mov
(bad)
jge
push
repz
push
inc
mov
out
jmp
xor
cmp
(bad)
dec
aas
push
inc
push
fst
aas
outs
dec
call
call
mov
cmp
pop
cmp
outs
inc
adc
aaa
cmp
or
add
pop
and
xor
je
inc
add
cmp
dec
mov
outs
adc
sbb
add
pop
gs
and
mov
xor
inc
arpl
add
ss
or
sbb
jmp
test
add
jg
mov
inc
repz
adc
inc
nop
dec
pusha
ret
sub
cmp
in
scas
add
xchg
mov
xchg
jle
push
inc
add
xchg
iret
mov
(bad)
(bad)
imul
pop
clc
dec
jmp
out
and
cmps
mov
sti
jg
jnp
fs
sbb
and
aas
inc
push
or
test
fisttp
add
out
out
(bad)
jp
push
daa
sbb
(bad)
fcom
into
and
adc
ss
sbb
mov
repz
rcr
ds
inc
add
cmps
mov
es
pop
push
jmp
jp
jne
fs
push
in
inc
pop
or
sub
xlat
(bad)
pop
ffreep
mov
and
fsubr
and
inc
call
sahf
in
or
mov
xchg
ror
enter
rcr
call
jg
add
or
and
out
aaa
arpl
call
mov
div
repz
mov
ins
inc
xchg
call
xchg
mov
pop
jg
aas
pushf
test
clc
push
js
mov
fcmovnbe
jb
sar
sbb
mov
iret
int3
popa
inc
jb
jg
mov
sbb
outs
push
and
mov
aas
sahf
mov
xchg
mov
mov
mov
sbb
xor
jg
stc
nop
and
iret
(bad)
fst
aam
imul
and
jnp
retf
div
and
pop
push
into
jg
fs
push
adc
(bad)
sahf
xchg
(bad)
push
push
push
push
nop
jg
scas
mov
cmp
jg
inc
ss
repz
and
push
pop
sbb
jmp
and
mov
mov
mov
aaa
jne
fcomp
mov
jns
push
pop
mov
mov
inc
cmp
int
ja
in
rcr
pop
nop
ja
xchg
xlat
sbb
mov
push
dec
repnz
cmp
push
sub
or
jmp
out
fxch
sbb
retf
mov
aad
or
pop
sub
add
test
dec
pop
and
loope
call
outs
dec
loopne
inc
cmp
mov
mov
pop
mov
xor
jae
cs
xchg
js
jnp
ja
movs
pop
inc
push
in
iret
retf
rcl
xchg
mov
mov
lds
fdivr
push
add
cli
dec
ret
sar
call
mov
push
mov
jnp
ins
sub
nop
mov
std
in
mov
mov
xchg
inc
xchg
sbb
or
out
mov
sub
mov
xchg
imul
lods
push
sbb
(bad)
adc
imul
outs
mov
add
arpl
and
dec
dec
sbb
sbb
or
nop
or
imul
add
pop
add
imul
or
test
unpckhps
(bad)
jne
add
leave
add
jmp
xchg
xor
xlat
jmp
pop
push
popf
adc
pop
icebp
xchg
or
in
adc
fwait
xchg
stc
or
ins
xor
add
add
mov
push
fild
inc
or
xor
and
ins
out
daa
dec
ja
mov
in
mov
add
inc
and
mov
jecxz
das
sbb
imul
aas
mov
sub
or
sbb
rol
enter
pusha
pop
dec
mov
add
ja
std
mov
ret
and
idiv
jmp
retf
(bad)
or
sbb
add
fwait
in
adc
add
mov
add
jge
push
hlt
hlt
cmp
cli
imul
xchg
inc
lahf
add
mov
inc
mov
in
out
in
in
retf
pop
mov
sbb
sub
out
idiv
(bad)
jmp
inc
dec
adc
repnz
inc
sub
mov
lock
sub
fcom
(bad)
dec
aaa
ss
imul
adc
sar
mov
fcom
sub
cmp
(bad)
aas
add
in
fidiv
shl
mov
pop
ds
repz
rcr
cmp
iret
add
inc
ins
xchg
or
xchg
cmp
push
pop
jo
fwait
aas
inc
sbb
cmp
stos
adc
fsubp
addr16
mov
and
sar
xor
cmps
mov
xchg
sub
mov
sbb
sbb
ret
outs
dec
inc
push
sub
and
fistp
add
jle
sub
outs
ret
outs
or
pop
rcl
and
cmc
pop
fwait
mov
cld
outs
cs
(bad)
in
jmp
mov
and
adc
push
xlat
ret
and
add
scas
cmp
clc
arpl
out
mov
ror
(bad)
jae
data16
dec
ret
pop
mov
mov
xchg
nop
(bad)
addr16
cmp
mov
jg
inc
mov
cmc
sti
addr16
test
adc
ror
(bad)
sti
mov
(bad)
ud0
mov
jle
xor
or
dec
inc
cmps
sti
sti
and
test
test
loopne
fstp
pop
mov
jbe
das
repnz
push
and
add
sahf
in
fwait
xchg
shl
inc
add
or
mov
jmp
fwait
jns
push
aaa
jo
dec
(bad)
call
pop
aam
jae
sub
fs
inc
sbb
mov
sbb
lods
hlt
(bad)
mov
push
add
or
mov
xchg
cmp
mov
ins
and
pop
sbb
sbb
xchg
adc
dec
mov
(bad)
sbb
mov
add
ja
outs
inc
ins
mov
add
mov
loop
adc
adc
(bad)
mov
(bad)
jecxz
cmps
inc
sbb
jg
test
pop
inc
or
imul
dec
(bad)
push
leave
sahf
mov
xchg
mov
jecxz
imul
loopne
iret
(bad)
mov
fs
xchg
and
mov
adc
xchg
inc
fdivr
xchg
ret
dec
inc
xchg
cmps
popa
jl
xor
cmps
inc
mov
xor
or
add
scas
imul
enter
cmp
jne
pop
mov
xchg
in
lock
test
adc
dec
inc
aaa
test
xchg
jg
leave
outs
lock
xchg
pop
loop
test
jg
xchg
mov
dec
dec
and
fs
lds
in
or
(bad)
call
test
pop
and
out
loop
ja
xor
adc
ins
outs
sub
inc
sti
(bad)
(bad)
sub
jmp
dec
movs
xchg
pushf
js
mov
das
(bad)
xchg
sub
push
ret
ss
outs
ret
(bad)
fwait
aam
pusha
xor
movzx
(bad)
or
fwait
popf
mov
xchg
mov
pop
out
in
in
out
(bad)
adc
pop
xchg
add
popf
add
cs
or
sub
jmp
mov
mov
adc
cmp
inc
call
das
mov
rol
js
xchg
jnp
cmp
fcmovu
pop
outs
mov
or
lahf
mov
and
sbb
add
push
mov
arpl
jg
lods
cmp
shl
clc
out
and
or
mov
and
xor
ret
dec
mov
aas
xor
xor
pop
jmp
dec
sets
xchg
jecxz
lahf
lods
ds
add
int3
ret
xor
pop
aaa
xor
aas
fs
aaa
jae
test
mov
dec
xlat
mov
pop
(bad)
adc
xlat
rol
shl
pop
inc
iret
fcmovu
xor
call
xlat
iret
int
xor
xchg
in
mov
sbb
mov
(bad)
ret
add
inc
mov
pop
pop
add
inc
sti
out
fstp
and
and
pop
test
jge
inc
inc
xchg
ret
xor
mov
jno
nop
ins
rol
out
dec
mov
aas
pop
retf
call
out
or
inc
or
jg
add
xchg
jmp
loopne
mov
xchg
movs
inc
cmc
int
fldcw
xor
sub
mov
movs
out
xchg
cmp
call
add
xlat
test
pop
outs
lods
add
mov
mov
xor
shl
popa
mov
xlat
mov
or
mov
pop
inc
test
mov
rcr
getsec
push
ins
fimul
shl
jg
pop
sbb
xchg
clc
pop
xorps
scas
push
popf
fabs
jnp
lods
daa
das
aaa
aas
or
or
add
add
cmp
pop
inc
(bad)
adc
inc
pop
(bad)
add
test
outs
and
push
outs
out
inc
xchg
jo
outs
add
pop
add
add
or
pop
add
rol
add
push
sbb
push
sub
fcom
or
neg
sti
in
inc
or
add
sti
or
inc
xchg
adc
sbb
in
test
popa
mov
adc
inc
popa
add
sub
sub
stos
sti
cmp
popa
mov
jno
aam
mov
pusha
das
repnz
out
out
lock
xor
push
out
jae
mov
push
ret
mov
add
mov
mov
mov
add
jnp
add
xchg
test
sar
jbe
push
inc
dec
mov
adc
xchg
jl
(bad)
jmp
inc
and
fmul
pop
add
rcr
lahf
lea
mov
xchg
pop
sbb
repz
sub
iret
push
jae
dec
push
sub
fwait
cmp
retf
jmp
test
ror
mov
daa
call
add
ins
or
icebp
add
popa
cmp
mov
in
(bad)
xor
jmp
and
cdq
push
pop
inc
aad
int
xlat
out
in
lds
dec
push
call
ss
(bad)
int
(bad)
adc
(bad)
arpl
test
adc
or
inc
hlt
lea
xchg
out
or
stc
loop
ins
dec
inc
shl
jmp
cmp
icebp
ret
mov
and
pusha
outs
xchg
mov
xchg
mov
test
add
pop
cmpxchg
sub
and
std
daa
jecxz
fidivr
ins
mov
push
add
nop
cmps
in
gs
cmp
mov
adc
dec
jg
aaa
dec
pusha
mov
xor
push
(bad)
push
loop
(bad)
pop
xor
sub
dec
or
jge
arpl
jmp
(bad)
and
jae
xor
adc
xchg
sbb
and
in
inc
cmp
gs
adc
std
pop
outs
dec
inc
adc
pop
fld
sub
xchg
fninit
jmp
popa
lock
repz
mov
jge
test
push
and
dec
dec
(bad)
cmp
pop
push
je
dec
daa
add
retf
jge
jns
add
sub
das
popa
outs
out
inc
cmp
ud0
inc
leave
inc
jns
inc
add
inc
fsub
and
add
leave
inc
and
push
xor
outs
icebp
adc
pop
push
gs
and
dec
and
adc
out
add
add
xchg
scas
cmp
cvtpi2ps
push
adc
mov
mov
mov
or
mov
loopne
(bad)
cmp
sbb
(bad)
sti
or
movs
xchg
mov
jbe
jmp
inc
xchg
add
adc
xchg
aam
fld
test
pop
fld
enter
mov
and
shr
mov
ins
and
and
mov
cmps
in
jp
push
mov
adc
jmp
add
dec
fwait
ret
cwde
inc
std
xchg
imul
pop
and
xlat
rcl
adc
add
cmp
les
fcom
lods
jmp
inc
pusha
sbb
mov
sub
cmp
mov
mov
fcom
fcom
imul
cmp
pusha
rol
jg
repz
sbb
xchg
pop
cdq
xchg
lahf
ror
leave
sbb
inc
gs
or
adc
nop
xchg
mov
shr
enter
lds
adc
pushf
push
ret
pop
push
mov
cmp
add
dec
sub
inc
sar
fstp
loopne
mov
fstp
push
or
call
push
add
loop
enter
push
sbb
xchg
add
push
iret
push
push
mov
inc
jbe
out
lahf
mov
adc
imul
das
nop
test
mov
jnp
mov
rcl
lahf
xchg
cmp
stc
sub
jmp
dec
add
cmp
inc
scas
out
je
sub
dec
jae
add
dec
xchg
hlt
pop
sub
lahf
ret
push
inc
lock
arpl
nop
sti
enter
xor
add
out
enter
pcmpgtb
lods
pop
call
sub
mov
push
dec
xor
jmp
sbb
std
and
jmp
mov
mov
gs
mov
and
movs
sbb
sti
pop
add
(bad)
xor
dec
mov
add
std
not
(bad)
std
xchg
mov
aaa
xor
pop
or
mov
jnp
push
inc
out
retf
stos
mov
dec
mov
not
xor
and
gs
mov
fs
xchg
loope
icebp
(bad)
xchg
gs
sbb
mov
pop
shr
pop
pmullw
das
sbb
adc
or
push
push
imul
cs
add
xchg
mov
inc
inc
and
pop
test
and
pop
ja
gs
xchg
xor
lahf
mov
in
repz
jnp
mov
cmp
add
pop
imul
sbb
inc
jecxz
outs
adc
jne
retf
inc
xor
dec
jnp
das
or
jge
sub
xlat
inc
xlat
fwait
adc
fild
xor
mov
sbb
adc
clc
inc
pop
add
mov
shl
popa
xchg
daa
push
and
or
add
sbb
sub
mov
mov
mov
pusha
inc
inc
jmp
pop
xchg
xchg
add
neg
cli
inc
push
and
cmp
add
sub
repz
sbb
pop
push
sbb
or
xor
inc
cmp
in
ret
and
pmulhw
inc
mov
imul
add
and
ret
test
and
stos
adc
inc
mov
adc
sbb
sbb
add
sbb
push
test
imul
les
inc
pusha
xor
dec
test
add
cmc
xor
mov
dec
fs
xchg
sub
add
or
adc
add
and
mov
and
or
inc
inc
or
push
outs
add
das
loop
nop
push
sbb
mov
sub
or
retf
test
stos
jmp
call
sub
mov
pop
inc
repz
xor
inc
adc
dec
es
add
popf
xor
dec
pop
add
mov
add
and
sbb
in
loopne
fcmovbe
inc
xchg
and
cmp
mov
jae
mov
add
sahf
or
mov
adc
test
call
and
dec
sbb
in
jmp
push
(bad)
push
add
xor
adc
push
cmp
and
dec
add
dec
js
push
jge
pop
cmps
mov
loope
xor
mov
movs
pop
xchg
jmp
imul
mul
xchg
adc
pop
ud0
imul
jne
cmc
add
lock
cdq
xchg
ret
sub
or
sbb
jnp
lods
adc
ror
xchg
xor
call
ret
xor
jp
adc
xchg
pop
adc
addr16
aaa
test
xchg
add
imul
and
ret
add
call
or
add
inc
jae
(bad)
or
scas
bound
or
mov
not
retf
jbe
leave
dec
add
mov
push
out
xchg
mov
stos
mov
mov
fldenv
adc
pop
xchg
fld
sbb
push
or
dec
sub
test
popa
adc
jmp
and
outs
add
push
add
inc
push
sub
adc
lea
cmps
inc
and
or
fs
retf
ja
add
inc
or
adc
add
and
sysret
fld
or
(bad)
in
repz
sub
xor
test
adc
rdtsc
adc
and
add
add
add
repz
push
movs
pop
sbb
jmp
dec
and
mov
rcr
sti
retf
push
dec
add
add
dec
ja
adc
popa
add
xor
mov
push
and
shl
mov
stos
jp
aaa
add
add
popa
mov
inc
addr16
(bad)
sub
xor
add
test
add
pop
adc
ja
adc
add
fwait
adc
adc
stos
cmps
inc
xchg
leave
ins
add
add
inc
and
dec
mov
push
add
add
or
call
adc
xchg
inc
adc
jmp
mov
add
add
add
(bad)
jmp
mov
xchg
add
jo
jmp
inc
xor
sub
jmp
push
icebp
xor
daa
push
mov
and
jae
or
sbb
icebp
adc
retf
mov
push
lods
outs
adc
mov
repz
push
add
add
nop
push
sti
inc
test
inc
and
cmp
xor
xor
add
xchg
leave
call
add
inc
icebp
sbb
das
dec
test
sbb
push
and
xor
inc
dec
call
sbb
inc
and
push
inc
dec
adc
ds
out
add
and
cmp
mov
test
pushf
jae
test
jb
and
test
mov
adc
das
inc
jmp
push
nop
mov
inc
add
imul
pop
inc
iret
dec
and
add
and
test
popa
lock
pop
mov
add
jne
arpl
jp
or
pop
cmp
ja
push
leave
sub
mov
call
xor
mov
(bad)
xchg
mov
(bad)
xchg
xor
(bad)
push
lock
and
ins
push
dec
arpl
inc
xor
mov
pop
add
sbb
xchg
imul
imul
sti
sub
and
(bad)
jmp
push
add
pop
fs
inc
xor
loop
xchg
pop
add
add
adc
mov
sub
ror
sbb
dec
inc
or
adc
or
and
daa
imul
movs
jmp
add
or
lahf
mov
imul
mov
adc
movs
sub
inc
dec
aad
sti
dec
add
enter
jae
and
xor
sub
and
add
or
test
adc
add
aas
pop
push
add
pop
mov
shl
and
sub
add
adc
add
pop
mov
addr16
add
adc
daa
pop
js
or
inc
or
push
add
sub
mov
adc
stos
aas
add
and
inc
pop
enter
mov
(bad)
xchg
stos
mov
inc
test
or
mov
pop
add
push
add
sub
es
push
push
adc
test
dec
add
dec
addr16
dec
stos
inc
or
ret
add
test
inc
out
push
add
add
jmp
shl
test
sti
adc
cwde
es
(bad)
push
inc
push
test
sub
adc
mov
add
addr16
dec
or
adc
test
and
push
inc
and
jmp
or
adc
adc
scas
inc
xor
test
pop
add
inc
inc
or
add
test
(bad)
sbb
mov
das
push
jb
xor
add
push
dec
add
gs
fild
add
xchg
add
in
icebp
pusha
push
dec
mov
fld
lds
nop
cs
arpl
or
dec
retf
out
call
js
sub
loop
out
test
fisubr
or
popf
call
pop
or
xor
sbb
inc
sub
and
test
or
push
das
mov
add
adc
xchg
dec
sbb
or
add
test
in
mul
add
or
rcr
and
fst
dec
es
dec
add
sub
adc
cmc
inc
stos
lods
addr16
xlat
es
adc
dec
add
adc
or
test
mov
nop
jmp
call
jmp
inc
mov
lahf
inc
mov
add
sub
and
jmp
adc
nop
(bad)
dec
sbb
std
xlat
inc
mov
out
stos
or
add
shl
adc
(bad)
fbstp
and
xor
and
scas
push
adc
adc
sti
jmp
dec
add
call
or
sub
sub
add
fcmovnbe
aaa
add
outs
inc
xor
stc
dec
cmp
arpl
inc
inc
mov
fist
mov
push
mov
retf
inc
and
leave
inc
test
and
dec
ret
pop
sub
test
mov
and
dec
lahf
inc
pop
sub
cs
push
pop
cmp
push
nop
xchg
sub
pop
or
add
jb
cmps
pop
ja
nop
push
inc
movs
repz
call
movs
loope
sti
scas
aas
sbb
push
inc
pop
sub
retf
add
mov
shr
movs
loope
inc
inc
mov
das
inc
xor
cmp
retf
sub
idiv
push
xchg
add
push
shl
and
and
jno
imul
imul
(bad)
frstor
sbb
xchg
jns
dec
shl
mov
loope
out
jnp
xchg
xchg
adc
shl
or
pop
nop
mov
mov
xchg
mov
out
test
push
add
enter
nop
push
add
inc
inc
add
add
add
fs
dec
shr
push
push
inc
push
es
aaa
mov
(bad)
and
add
fwait
cmp
inc
add
jne
add
push
push
jns
gs
(bad)
push
jns
fistp
or
push
push
inc
outs
(bad)
mov
imul
outs
outs
ja
(bad)
pop
inc
gs
push
aad
in
gs
add
xor
outs
arpl
sbb
dec
gs
outs
addr16
add
mov
je
mov
lds
adc
pusha
ins
popa
ins
ins
xchg
adc
inc
adc
xchg
iret
cmp
push
jb
arpl
(bad)
jmp
cdq
push
stos
jns
mov
scas
nop
dec
cmp
adc
(bad)
(bad)
(bad)
call
pop
sub
dec
cmp
outs
push
mov
movs
dec
mov
pop
sti
mov
jb
cwde
inc
xchg
imul
(bad)
(bad)
jmp
cli
lea
sub
cmp
in
push
mov
dec
jbe
inc
sar
bound
ret
(bad)
(bad)
(bad)
jge
es
dec
movs
loopne
mov
sbb
inc
hlt
pop
out
push
shr
mov
(bad)
(bad)
(bad)
call
retf
dec
mov
mov
push
pop
rcr
fs
rcr
xchg
xor
mov
(bad)
(bad)
call
dec
pop
adc
adc
pop
jo
imul
xchg
inc
lods
mov
aam
(bad)
(bad)
(bad)
push
in
mov
js
jge
cdq
cmp
ins
in
popf
sahf
test
lods
cli
stos
sbb
stos
mov
jmp
loope
fidiv
push
sti
mov
dec
xchg
rol
sbb
retf
pop
mov
push
cld
mov
(bad)
jmp
mov
sub
fist
cli
mov
lahf
lods
pop
(bad)
push
xchg
imul
(bad)
(bad)
inc
mov
add
stos
pop
stc
or
jecxz
xchg
jmp
les
jmp
sbb
cmp
clc
(bad)
(bad)
push
out
retf
and
cmp
jmp
push
mov
jne
sub
mov
(bad)
(bad)
call
dec
mov
pop
add
aam
in
or
pop
pop
jae
(bad)
(bad)
(bad)
(bad)
mov
sahf
popa
jg
mov
test
sub
dec
fadd
scas
sub
dec
pop
(bad)
(bad)
(bad)
(bad)
out
jnp
adc
(bad)
mov
push
into
or
inc
shr
mov
or
sbb
xchg
mov
(bad)
call
xor
ret
mov
(bad)
sub
and
and
retf
(bad)
(bad)
(bad)
call
xchg
into
inc
or
neg
push
xchg
inc
rcr
push
xor
je
fld
dec
(bad)
(bad)
(bad)
dec
push
jp
scas
dec
das
out
pop
ins
mov
out
mov
xlat
rcr
ror
sbb
push
pusha
mov
adc
test
sbb
stc
imul
dec
jle
lds
addr16
fwait
sbb
(bad)
(bad)
dec
mov
lahf
sbb
add
retf
sbb
jl
sub
test
mov
and
(bad)
(bad)
(bad)
call
nop
mov
rcr
push
je
xchg
sbb
(bad)
jmp
jae
(bad)
(bad)
call
loop
xlat
adc
mov
test
test
mov
pop
jne
and
xchg
add
in
std
(bad)
(bad)
inc
mov
add
imul
dec
cmp
fbstp
sbb
lea
das
jge
sub
cmc
jbe
or
mov
popa
or
jmp
adc
sub
aaa
push
test
mov
or
jge
adc
popa
cmps
xchg
enter
call
push
aaa
jo
pop
jecxz
sbb
cld
jo
cmp
sbb
ins
mov
inc
les
jbe
or
mov
xchg
dec
push
lea
aad
xchg
(bad)
(bad)
(bad)
(bad)
mov
sub
pop
mov
mov
mov
mov
push
(bad)
(bad)
(bad)
jmp
cwde
lods
out
dec
(bad)
xor
out
sub
ret
inc
(bad)
sub
jge
(bad)
(bad)
jmp
js
sahf
repnz
repz
sbb
ret
js
mov
jp
fcomp
(bad)
(bad)
(bad)
call
dec
dec
and
pop
stos
jge
cli
xor
push
shl
and
pop
jns
pusha
jmp
inc
jne
(bad)
(bad)
(bad)
cmp
xchg
mov
repnz
xchg
xor
das
test
adc
xchg
std
call
mov
mov
xor
js
dec
lock
outs
js
(bad)
(bad)
(bad)
mov
ss
ficom
dec
sar
mov
stos
and
push
or
call
pop
stos
retf
xor
sub
retf
ret
mov
xchg
(bad)
(bad)
(bad)
cmp
retf
ficom
add
pop
jl
inc
inc
and
out
hlt
jmp
cmc
bound
jmp
sub
cmps
inc
or
clc
leave
mov
sbb
adc
call
int3
loopne
or
mov
xor
aas
fsub
loope
xchg
loop
leave
cmps
and
ja
(bad)
(bad)
dec
pop
pop
cld
pop
int3
rcr
cld
stos
or
xor
jne
push
add
mov
(bad)
(bad)
call
pop
mov
fnstcw
scas
out
pop
pop
jae
adc
call
adc
mov
xchg
cmp
(bad)
(bad)
(bad)
inc
pop
mov
stos
sbb
je
es
call
inc
and
push
(bad)
xor
(bad)
(bad)
(bad)
dec
sub
lea
and
sbb
xor
push
je
mov
xchg
or
cmp
(bad)
fnstsw
inc
in
mov
add
dec
mov
mov
xor
xchg
pop
sbb
dec
(bad)
(bad)
(bad)
dec
jb
fidiv
mov
and
rcl
pop
ins
dec
pop
enter
adc
movs
(bad)
(bad)
(bad)
(bad)
call
cmps
pop
adc
cdq
jl
(bad)
mov
rol
fnsave
imul
(bad)
jns
inc
ja
and
arpl
cmps
mov
scas
jmp
cmp
fidivr
das
or
icebp
or
(bad)
(bad)
push
aaa
retf
inc
je
ds
sub
sub
or
gs
xchg
cmp
(bad)
call
enter
imul
jl
pop
mov
enter
add
and
(bad)
inc
test
sbb
xchg
je
pop
xchg
aas
sbb
pushf
test
inc
sub
pusha
enter
or
dec
cmc
jns
add
daa
pop
add
mov
add
add
xor
pop
sahf
sub
xor
xor
inc
cmc
in
and
sub
sbb
add
xchg
mov
push
adc
and
cmp
xor
gs
fild
in
js
push
cmovbe
jae
inc
jb
popa
je
push
outs
outs
ins
fdivr
ins
push
push
outs
popa
jo
push
rcr
(bad)
ins
sub
outs
sub
jb
sub
pop
mov
dec
gs
outs
jb
adc
or
inc
adc
push
push
dec
(bad)
fnsave
push
push
xor
jbe
inc
js
inc
jns
push
mov
cmp
ins
fs
jmp
imul
push
gs
pop
scas
push
fild
jns
jo
ins
xlat
fidivr
jp
outs
push
adc
jb
pcmpgtw
sar
jns
not
xor
je
adc
push
outs
imul
jb
inc
je
bound
jae
in
(bad)
ins
jb
outs
fs
inc
outs
fs
data16
jmp
ins
fwait
push
ins
adc
adc
dec
jo
fcom
pop
imul
fild
jb
inc
inc
push
fidiv
test
ins
xor
ret
or
push
(bad)
cmp
inc
ds
push
adc
push
xor
call
test
pop
lods
or
jge
stc
jne
mov
popa
pusha
sbb
fmul
in
xor
mov
fwait
lock
jae
or
push
inc
popa
cmps
inc
popa
je
rcr
inc
or
mov
mov
adc
ins
ins
test
fldenv
ret
imul
(bad)
lock
mulps
imul
adc
push
xchg
push
mov
adc
dec
(bad)
mov
data16
sbb
sbb
inc
pop
sbb
retfw
into
inc
in
outs
jmp
test
inc
push
popa
sub
inc
jns
loope
adc
mov
and
xor
jns
sub
inc
(bad)
push
je
ja
or
pop
and
shl
leave
fadd
or
rol
retf
xchg
mov
or
xor
das
fsub
lea
mov
addr16
push
sqrtps
sub
or
shl
imul
data16
imul
je
ins
js
in
inc
lods
je
ja
jo
test
call
fcomp
dec
jle
fcmovnb
bound
pop
jno
data16
jmp
lea
lahf
adc
jmp
ret
fcmovnu
add
adc
test
sub
push
cmp
sbb
outs
int
fsubr
push
daa
jb
bound
test
cmp
gs
pop
xchg
int
cwde
xor
and
xchg
sub
lods
aas
push
push
dec
inc
xor
clc
sub
push
ret
pop
sbb
dec
and
dec
or
js
add
ins
inc
in
(bad)
popa
addr16
and
or
dec
pop
das
cmp
xchg
jo
bound
jl
and
inc
scas
push
pop
mov
or
pop
push
ds
xchg
mov
xchg
jbe
or
fimul
data16
sub
inc
outs
or
push
std
sub
fadd
call
dec
cmp
push
xlat
push
mov
push
int3
inc
(bad)
fnstsw
adc
adc
int
mov
mov
jne
cmp
leave
add
jo
stos
jbe
pop
pop
mul
out
or
iret
pop
fild
cs
inc
cmp
add
jo
xor
das
dec
int3
or
push
dec
outs
ja
es
cmp
mov
or
sub
jae
push
test
(bad)
arpl
es
sbb
push
dec
and
mov
pop
add
jmp
add
sub
push
xchg
cmp
outs
and
xor
sub
sub
call
inc
add
dec
add
add
pop
inc
sub
jae
aas
loopne
pop
add
add
out
add
jle
or
int
add
pop
outs
add
leave
ja
push
dec
scas
add
xor
xor
pop
ret
gs
add
pop
or
fisubr
jl
sub
push
pop
push
lock
sbb
or
scas
js
jmp
and
or
inc
push
inc
call
out
sti
aam
daa
faddp
inc
push
push
jbe
or
sbb
daa
mov
loopne
cs
repz
mov
inc
pop
in
rcl
jnp
or
inc
mov
lahf
lock
xchg
mov
gs
dec
scas
ins
mov
add
iret
daa
jae
mov
dec
jo
mov
daa
push
add
sbb
mov
loop
add
add
add
add
add
add
add
add
add
retf
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
xor
add
push
int3
add
