push
call
ret
ret
sub
xchg
adc
pop
lods
outs
adc
inc
inc
cli
mov
daa
push
jge
das
inc
pop
pusha
xchg
dec
or
xor
in
push
cmp
inc
xchg
ja
add
adc
jle
scas
push
dec
xor
retf
je
jge
outs
push
xchg
inc
and
(bad)
mul
call
cmp
leave
popa
jae
jns
(bad)
cmps
out
mov
unpckhps
(bad)
aas
shl
push
not
dec
mov
add
mov
adc
leave
push
stos
daa
sti
aaa
pop
sub
je
out
loop
aaa
popf
mov
je
inc
cld
jnp
aad
xchg
inc
nop
push
cld
dec
add
jae
fbld
jmp
inc
cmp
sub
clc
mov
jb
cmp
cmp
(bad)
loop
jns
stc
(bad)
in
cmp
mov
stos
adc
ret
loope
inc
js
mov
out
mov
loop
in
retf
mov
outs
push
add
xchg
add
scas
sar
imul
pop
test
(bad)
aam
and
sub
std
cmps
inc
pushf
push
bound
mov
das
sbb
xchg
pop
cmp
inc
pop
dec
and
sbb
mov
or
mov
mov
pop
and
xchg
pop
ret
stos
cmp
cld
dec
lea
push
retf
stos
jnp
sbb
and
(bad)
jns
ror
xchg
and
popa
xor
push
inc
mov
retf
jo
and
mul
arpl
sub
jns
icebp
clc
sti
push
pop
sub
add
cmp
xchg
std
les
push
push
test
fcom
cmp
jb
sti
sti
mov
movs
jnp
and
add
jmp
push
in
data16
inc
pop
loop
in
lds
ret
xor
lods
out
call
fidivr
(bad)
xchg
fisub
push
pop
jns
inc
xstore-rng
cmps
test
push
rcl
mov
pop
fwait
lods
jmp
dec
pop
pop
and
xchg
push
pop
cmp
xchg
mov
adc
jb
jmp
xor
pop
mov
mov
test
out
adc
sub
pop
cmp
ret
jmp
stc
mov
movs
xchg
adc
sub
js
xor
icebp
stc
out
inc
jbe
inc
xor
xor
add
test
push
push
inc
jnp
bound
xchg
push
fist
xor
fsubr
xchg
mov
stos
push
neg
add
scas
movs
mov
movs
pushf
and
xchg
pop
test
sub
(bad)
lock
dec
sbb
pop
(bad)
clc
pop
xchg
scas
cmp
inc
pop
xchg
aas
repnz
mov
jnp
or
retf
in
and
mov
loope
pop
cmps
shr
cmc
cs
dec
adc
add
iret
retf
cli
repnz
sub
push
mov
pushf
out
pop
xor
pop
popf
(bad)
in
xchg
jp
loop
mov
jp
cmps
xchg
in
dec
pop
push
push
jmp
adc
jbe
push
rcl
mov
sub
xor
test
arpl
cli
es
xor
out
adc
nop
xor
call
inc
jo
jmp
adc
mov
push
add
mov
push
repz
pop
out
xor
add
mov
lock
xlat
ds
xchg
call
clc
int
add
xchg
imul
xchg
js
lods
idiv
inc
into
pop
sbb
push
and
jmp
je
sub
mov
imul
sub
cmp
test
lahf
mov
bound
add
pop
in
imul
sub
cld
or
(bad)
lods
mov
inc
push
sbb
aad
movs
jmp
xor
(bad)
cmp
loope
push
pop
(bad)
bound
out
cmp
add
sub
data16
adc
jo
mov
sub
addr16
dec
fwait
pop
gs
addr16
ret
movs
nop
out
les
dec
lock
fiadd
jecxz
xchg
push
frstor
xor
ds
addr16
imul
dec
push
fs
adc
mov
cmp
mov
mov
scas
out
push
icebp
aad
in
mov
sbb
test
adc
inc
mov
dec
sbb
xchg
(bad)
cmp
ds
and
dec
int
jecxz
add
sub
sti
mov
sti
rol
mov
sub
dec
sbb
cmc
test
or
push
jb
js
or
lahf
cmp
xchg
std
shr
popf
stos
push
pop
push
imul
mov
xchg
pop
inc
add
sub
mov
jg
aaa
(bad)
cmc
cdq
movs
fild
or
push
cli
inc
mov
sub
inc
and
js
scas
mov
fwait
std
cs
(bad)
lock
mov
xlat
cwde
mov
push
out
fsubr
cmp
sar
xor
xchg
scas
hlt
sbb
sbb
cs
xchg
int
test
(bad)
jnp
aaa
mov
outs
cmps
jno
lahf
les
ror
clc
call
xor
xchg
mov
lods
xchg
and
rcr
adc
or
cmp
dec
movs
pop
shr
test
movs
movs
mov
lahf
dec
icebp
repnz
fwait
mov
push
xchg
and
aam
fisubr
cwde
xchg
mov
xchg
add
popf
mov
test
iret
jno
adc
dec
xlat
enter
cmps
xor
test
mov
fst
nop
push
xchg
into
outs
std
adc
xlat
ret
retf
fild
jnp
mov
aad
cmp
push
push
mov
(bad)
in
jecxz
push
sbb
(bad)
add
or
sub
or
imul
sahf
lock
dec
jmp
xor
xor
push
hlt
pop
cmp
sbb
popf
jns
fdiv
fidiv
xor
adc
mov
dec
sar
push
pop
movs
movs
mov
cmp
neg
movs
add
fidiv
mov
test
or
sub
clc
das
loope
loop
add
xor
push
(bad)
adc
shl
inc
mov
mov
fld
dec
jp
or
pop
aas
jge
pop
mov
pop
cs
xchg
fwait
enter
adc
fcom
rcl
loope
dec
xchg
lahf
ffree
sahf
shr
or
xchg
(bad)
xlat
or
mov
sub
push
enter
xor
pop
std
rol
sbb
cld
into
fstp
xor
push
pushf
jae
retf
xor
inc
ret
xor
xor
psllw
dec
push
into
mov
iret
out
test
js
push
jno
ds
(bad)
xchg
cmps
jge
cmp
in
test
xor
call
outs
(bad)
jo
pop
daa
mov
jge
dec
shr
aaa
cs
hlt
and
cmp
pop
pop
(bad)
mov
movs
inc
popa
leave
mov
jns
fs
pop
mov
das
cli
sub
jnp
inc
ins
imul
adc
leave
xchg
and
jbe
push
mov
adc
into
shr
inc
push
out
add
ins
dec
fs
ds
jae
cdq
aaa
fucomip
in
or
outs
pop
push
pop
retf
in
sbb
cld
dec
(bad)
xchg
(bad)
mov
mov
into
sbb
jmp
inc
mov
icebp
dec
xor
test
push
and
xchg
xchg
movs
(bad)
jmp
mov
add
dec
mov
jae
pop
adc
and
xor
int
into
scas
enter
(bad)
retf
(bad)
jmp
push
xor
or
faddp
mov
les
xor
rol
inc
leave
sub
out
repnz
push
ins
mov
xchg
into
mov
fild
cli
cmp
pmaddwd
(bad)
jg
pop
js
add
pusha
xchg
jecxz
mov
movs
sahf
nop
xchg
mov
fild
addr16
sahf
cmp
jo
push
not
test
jns
mov
dec
fdiv
adc
push
jne
dec
inc
icebp
add
outs
fild
cmp
aas
add
js
lahf
pop
ror
push
sub
inc
gs
push
cmp
aam
mov
mov
stos
mov
add
mov
ja
adc
mov
pop
add
stos
or
call
cmc
mov
lea
test
stc
adc
push
test
mov
pop
adc
scas
out
mov
addr16
sub
dec
lahf
pushf
sub
add
rol
gs
adc
loop
inc
mov
jne
push
jb
fmul
pop
mov
sub
ret
retf
pop
nop
xchg
xor
xor
cmp
pop
add
sti
int3
mov
xchg
xor
xchg
jl
mov
mov
or
pop
loop
jg
sub
jae
neg
retf
xchg
out
push
pop
mov
out
xchg
ins
fnstsw
sub
xchg
es
cmovnp
adc
aaa
xchg
enter
mov
test
inc
idiv
mov
daa
ret
int3
mov
inc
push
mov
(bad)
retf
(bad)
bts
or
inc
xchg
cmp
pop
pop
into
xchg
scas
scas
and
test
or
clc
fimul
fst
inc
xor
inc
xchg
adc
push
retf
sbb
jbe
(bad)
clc
or
cmp
pop
loopne
mov
dec
(bad)
arpl
fnstcw
pushf
mov
fadd
es
xchg
aas
jne
xor
xchg
add
retf
cmp
adc
or
push
mov
es
xchg
mov
mov
or
pop
leave
(bad)
push
pop
jp
add
mov
jecxz
out
jno
movs
inc
or
push
stc
les
push
xchg
lea
adc
dec
(bad)
sub
xlat
xor
(bad)
dec
cmc
xchg
test
sbb
clc
gs
out
pop
bound
push
inc
mov
mov
add
(bad)
dec
stos
push
js
cmps
xchg
in
repz
xchg
or
adc
fimul
out
sbb
xor
(bad)
jo
fimul
mov
add
push
mov
mov
aas
cmp
push
hlt
mov
sbb
sbb
and
mov
jnp
(bad)
jg
jnp
or
les
inc
movs
(bad)
bound
loopne
sar
(bad)
bound
nop
stos
push
sbb
(bad)
popf
popf
int3
xchg
addr16
gs
repnz
sub
xchg
ds
ins
pusha
aad
ffree
fs
push
sbb
push
sahf
in
xlat
popw
xor
lea
jl
stc
fnstcw
cli
out
add
add
mov
or
mov
push
aad
lea
sbb
cld
jl
cmp
outs
cld
(bad)
push
or
mov
dec
adc
shl
mov
mov
sub
(bad)
sbb
push
mov
fisubr
mov
popf
sub
xor
jmp
sub
(bad)
and
mov
movs
xlat
cwde
mov
repnz
or
mov
jge
pop
adc
mov
loop
adc
ret
das
mov
or
cmps
mov
sar
gs
inc
xchg
pop
xchg
ins
xor
fsub
call
jo
stc
sbb
jbe
cld
cmp
out
not
addr16
ja
test
js
sub
jnp
popf
movs
je
popf
test
stos
mov
enter
mov
sub
mov
adc
(bad)
call
jmp
jnp
(bad)
lods
test
fsubr
xlat
iret
cmp
pop
mov
aaa
xchg
sbb
dec
sbb
jmp
push
stos
mov
nop
aad
mov
sub
test
or
stc
push
in
push
sti
cmp
add
into
push
dec
jmp
sbb
sub
xchg
and
jns
ficomp
mov
ror
cmp
nop
or
fild
sbb
mov
xchg
loop
adc
jbe
inc
daa
add
xor
rcr
push
cld
mov
call
pop
cmc
scas
or
fs
ror
imul
call
mov
xor
sbb
imul
in
mov
and
std
xor
pop
mov
sbb
cdq
mov
cmp
inc
hlt
xor
lods
adc
lea
into
push
(bad)
xchg
in
(bad)
push
setno
push
or
mov
popa
lock
outs
mov
(bad)
out
fnstcw
push
paddsb
mov
push
dec
dec
sub
jecxz
mov
xor
sbb
xchg
mov
adc
jmp
in
test
xlat
retf
add
retf
loop
xor
stos
mov
lods
call
lds
jge
and
push
loop
adc
(bad)
out
loopne
outs
xor
jge
pop
pop
add
push
adc
or
push
push
adc
mov
push
test
adc
or
ins
imul
out
test
pop
mov
pop
test
jg
ret
mov
ret
jge
mov
xchg
into
cmp
inc
or
push
jns
loope
mov
cmps
jae
sbb
rcr
test
cmp
inc
cmc
pop
xor
sbb
add
jnp
push
cs
rol
inc
ja
push
mov
xor
mov
cmps
add
ss
sbb
push
sub
jecxz
in
cmps
lods
xor
ss
cmp
dec
je
sub
test
call
mov
test
pop
dec
mov
and
xchg
xchg
dec
repnz
add
inc
inc
lahf
popf
adc
arpl
pop
jno
scas
mov
dec
popf
mov
push
ins
jae
mov
jb
lahf
ret
add
popa
xchg
mov
mov
dec
loopne
movs
cmp
imul
imul
mov
push
push
push
jmp
add
fdiv
sub
(bad)
and
loopne
dec
mov
mov
lds
test
and
xor
sub
imul
push
std
inc
cmps
or
push
movs
push
inc
loope
pop
repnz
push
retf
add
jp
daa
pop
scas
adc
jp
sbb
and
add
add
jle
pop
mov
xchg
adc
retf
and
mov
add
es
test
pop
sbb
adc
not
add
mov
adc
jmp
mov
aas
test
sar
and
in
loop
xchg
jne
mov
hlt
neg
sub
mov
pop
(bad)
push
fstp
pop
sbb
jo
ss
ins
and
mov
cmp
jb
jo
test
pop
icebp
sub
xchg
sub
jns
mov
lods
cld
xor
and
clc
jl
xchg
sub
test
(bad)
ds
jmp
ins
dec
pop
shl
jno
sti
fild
data16
out
aaa
inc
push
rol
inc
cmp
adc
cld
push
xchg
aas
adc
xchg
xor
sahf
xchg
push
push
ror
(bad)
leave
mov
mov
daa
and
sub
(bad)
(bad)
sub
mov
sbb
pop
call
push
sahf
sub
arpl
out
test
sbb
test
lock
push
sub
push
loop
out
fs
in
fild
je
enter
dec
push
cmps
ret
pop
lahf
pop
pop
adc
ins
out
adc
cmc
shl
lea
push
dec
shr
in
scas
inc
cmp
cmp
jo
ds
sar
aaa
inc
inc
mov
dec
pusha
ret
and
mov
outs
ror
cmp
add
nop
inc
mov
(bad)
std
hlt
stc
call
dec
cmp
jb
rol
(bad)
mov
sbb
mov
mov
push
push
sbb
adc
lock
pop
mov
jg
neg
loopne
mov
aam
pop
and
rcr
cmps
mov
ds
fst
ins
and
or
fs
dec
pop
dec
push
jb
retf
pop
pop
pop
popf
sbb
mov
adc
fstp
mov
sub
sub
mov
cdq
repz
loope
into
test
mul
push
xor
in
fbld
jne
imul
inc
and
shl
repnz
ss
scas
shl
xor
and
out
aaa
push
fld
ficom
popf
imul
mov
clc
bound
pop
test
aad
adc
ror
div
jle
push
jle
jge
jg
fcmovb
daa
mov
xchg
(bad)
pushw
inc
jmp
jmp
(bad)
xor
mov
aaa
cmp
jae
cwde
mov
repnz
je
mov
dec
xlat
mul
cmp
stos
aad
movs
mov
(bad)
inc
sbb
pop
movs
gs
and
out
pop
iret
hlt
adc
sbb
and
into
mov
repz
adc
arpl
inc
pusha
into
sub
fdivr
dec
mov
mov
jmp
std
lock
ds
xchg
push
pusha
sbb
(bad)
push
in
xchg
or
call
mov
sub
outs
mov
inc
cmps
push
jb
jecxz
je
gs
jge
fistp
sbb
xlat
shl
xor
test
popa
dec
fcomp
ret
push
sub
ja
pop
xchg
es
lods
and
mov
adc
sbb
das
das
jp
push
cld
add
div
aaa
push
lods
cli
faddp
in
shl
pushf
shl
ds
popf
add
hlt
mov
out
dec
and
lds
mov
mov
cld
jns
test
cmovb
sbb
push
jle
adc
loope
xchg
movs
fld
push
jns
fs
push
aam
xchg
inc
stc
and
inc
push
sub
jmp
cmp
fimul
pop
retf
stos
xchg
rol
idiv
sbb
or
xchg
into
stc
sbb
int3
xchg
mov
jbe
cmc
jp
push
mov
or
repz
sub
xchg
mov
adc
fistp
cwde
mov
mov
lods
or
xor
fstp
push
pop
pop
cmp
push
mov
add
xlat
aam
sti
mov
cmp
loopne
out
retf
aam
jns
int3
sbb
jmp
clc
cmps
movs
(bad)
outs
fs
jmp
(bad)
jmp
hlt
lods
retf
int3
out
lea
cmp
adc
jg
cmp
ret
ror
minps
or
or
ftst
sbb
sbb
cmp
push
dec
(bad)
xchg
mov
inc
dec
call
enter
das
add
xchg
push
or
leave
in
mov
mov
je
xchg
jns
add
das
daa
psubsw
jecxz
inc
sub
push
movs
push
xchg
jmp
ins
dec
jle
iret
or
mov
lods
xchg
aas
cmc
into
jns
sti
cwde
push
jns
mov
rcl
and
in
adc
test
in
popf
hlt
xlat
jns
push
jo
lods
dec
mov
in
mov
push
(bad)
fisub
(bad)
cmps
adc
je
(bad)
repz
mov
call
outs
mov
mov
je
sub
leave
repnz
mov
mov
jmp
cmps
xor
std
mov
in
stos
fldenv
dec
push
and
or
dec
dec
cmp
pop
dec
int3
jbe
mov
in
popf
push
int3
fstp
je
retf
cmp
mov
inc
xor
cmp
add
je
dec
adc
mov
sbb
cdq
dec
jecxz
mov
push
ret
jge
add
cmp
ret
syscall
mov
test
cdq
jle
mov
inc
aam
jns
ret
dec
mov
xor
in
mov
into
lds
push
into
(bad)
into
add
inc
mov
inc
sbb
aas
fcom
loope
jmp
and
mov
call
ss
cwde
pop
pusha
cmps
sub
inc
out
call
mov
fwait
(bad)
clc
dec
or
call
mov
rol
stos
(bad)
sbb
xchg
sub
daa
fdiv
push
xchg
xchg
xchg
mov
(bad)
stos
sub
int
scas
dec
sub
out
mov
in
call
cs
xchg
sti
jb
cld
cmc
(bad)
icebp
enter
sub
push
xchg
sbb
mov
test
imul
fild
div
std
loopne
mov
sub
xor
xor
mov
cmc
(bad)
in
jle
scas
xchg
nop
xor
data16
mov
stc
aad
aas
fadd
mov
mul
jp
fst
or
xor
loopne
xchg
fbld
shr
js
in
sbb
stos
popa
shl
mov
hlt
adc
xor
sub
aam
mov
push
xchg
ja
and
(bad)
jmp
add
dec
lods
rcl
sub
repnz
imul
inc
mov
leave
add
xchg
cmp
jg
sub
in
(bad)
rol
xor
repnz
arpl
mov
pop
inc
icebp
and
out
clc
mov
inc
and
nop
and
in
das
repz
mov
ds
fdivr
inc
int
mov
jbe
xchg
lea
out
adc
fcmovnu
(bad)
lahf
sub
push
inc
sub
jno
into
add
mov
shl
cmp
mov
aad
mov
cmp
neg
scas
xchg
sbb
cmp
pop
jmp
mov
mov
adc
jae
stc
and
fdiv
stos
mov
adc
jnp
sbb
jae
push
xchg
ds
in
fsubr
adc
out
sbb
push
repz
add
call
daa
sar
stc
mov
shr
ins
retf
xor
aam
xchg
ja
xchg
sub
movs
in
clc
dec
and
cdq
stos
xchg
shr
fwait
icebp
sub
mov
cmp
mov
cli
and
pop
mov
sti
dec
pusha
cdq
xchg
mov
cli
and
mov
mov
aaa
adc
add
inc
in
push
mov
retf
(bad)
jg
sbb
ins
sub
call
pop
fld
cmc
in
ss
dec
jb
js
in
and
(bad)
(bad)
lock
(bad)
loope
pop
jae
fwait
(bad)
xor
out
enter
iret
dec
movs
movs
pop
stos
fisttp
adc
scas
add
pop
mov
ja
sub
loop
cmps
cmp
jno
cmp
or
mul
mov
test
dec
xor
or
cmp
jb
icebp
aas
out
push
sti
test
xor
and
xor
(bad)
enter
ins
jmp
lds
repz
cmps
cmp
data16
fcomi
sbb
adc
xor
mov
cwde
inc
push
aam
sbb
fcmovb
imul
or
js
in
dec
adc
ret
fdivr
inc
imul
add
dec
and
jge
push
stos
cmp
add
mov
fld
ins
cmp
mov
adc
dec
fld
lods
cs
out
std
cmp
inc
fs
mov
mov
frstor
cld
mov
xchg
sbb
jle
sub
sub
mov
popa
stos
scas
outs
aam
push
dec
jb
mov
sub
xchg
lahf
test
fadd
mov
paddusw
dec
shl
xchg
neg
dec
pop
call
sbb
outs
inc
arpl
inc
cs
sub
jp
mov
in
cmp
adc
fwait
cmp
rcl
mov
sbb
sub
adc
(bad)
adc
and
xor
xchg
nop
inc
into
lods
xor
inc
and
cmp
test
pop
aaa
pop
add
add
add
push
(bad)
cli
jmp
mov
aad
ret
or
xor
xchg
and
loopne
xlat
sti
retf
mov
push
xlat
loope
xchg
add
xacquire
dec
jl
in
loop
pushf
ja
into
fistp
enter
and
call
es
dec
ret
dec
ja
fsubr
xlat
mov
mov
pop
add
push
call
ss
pop
jbe
mov
mov
aas
add
mov
ror
push
std
or
add
int
xchg
mov
xor
popf
dec
fdivrp
repnz
sub
data16
mov
stc
mov
xchg
adc
add
sub
(bad)
adc
xor
inc
jl
movs
adc
jbe
dec
cmp
and
mov
pushf
outs
nop
popa
movs
pusha
ror
nop
mov
jg
mov
push
pop
jnp
ret
or
fs
xchg
lods
lahf
icebp
mov
mov
gs
pop
ret
scas
je
imul
dec
cmp
sbb
in
jo
pop
mov
adc
xchg
out
and
sub
adc
mov
jmp
loopne
adc
pop
dec
in
jle
xchg
add
xchg
retf
ss
jne
adc
retf
xchg
sub
xor
cmp
stc
mov
into
retf
jns
pop
push
sahf
inc
add
pop
dec
ja
loop
mov
jp
popf
and
in
loop
push
xor
dec
stos
ins
ss
nop
inc
aad
jbe
inc
data16
mov
sub
inc
mov
clc
in
mov
sbb
pop
add
fsub
rcr
fnstsw
and
or
aad
das
dec
adc
mov
push
xchg
or
gs
cmp
push
es
imul
add
out
mov
mov
cdq
daa
stc
cmps
cmp
push
test
mov
or
ins
dec
sbb
add
mov
scas
(bad)
adc
stc
sub
arpl
in
addr16
push
mov
jg
aad
pop
imul
rcl
jecxz
and
test
into
xchg
mov
mov
les
jl
or
in
int3
inc
xchg
popf
sub
sbb
xlat
pop
out
iret
sub
add
dec
call
call
leave
(bad)
sar
cmc
xchg
adc
sbb
mov
(bad)
mov
(bad)
cld
es
xchg
jb
clc
and
lock
sar
fwait
add
jb
mov
rcl
mov
stc
mov
or
fisttp
dec
mov
push
inc
outs
mov
imul
popf
adc
cwde
adc
in
jp
xchg
stos
mov
ss
mov
or
rol
(bad)
ins
sub
adc
jp
jmp
pop
add
pushf
mov
rcl
pop
push
lds
sbb
fild
test
mov
lods
iret
mov
xchg
(bad)
(bad)
cmp
hlt
mov
fist
scas
pop
mov
and
in
dec
jle
ret
jns
mov
enter
lea
jmp
pop
mov
dec
and
mov
xchg
jp
add
jmp
push
jbe
lahf
push
lds
repz
jl
pushf
pop
or
sub
rol
jp
pop
cmp
pusha
(bad)
inc
jne
pop
xchg
inc
push
idiv
sbb
mov
or
push
pop
adc
inc
jbe
int
sbb
cli
xor
pop
add
mov
adc
mov
jno
inc
loope
test
or
mov
mov
cmc
mov
sub
sbb
pop
push
mov
xchg
aam
cwde
adc
xchg
lods
ss
mov
fcomip
mov
pop
mov
pop
daa
pop
mov
sbb
mov
jmp
sbb
inc
mov
dec
int
pop
loopne
xor
and
jnp
ficom
push
add
push
inc
jns
and
cdq
sahf
mov
imul
mov
out
sub
mov
loop
sub
addr16
movs
rol
push
das
cmc
mov
push
(bad)
and
jmp
rol
cli
or
xor
pop
in
xchg
cmp
xor
xchg
repz
and
inc
fistp
aaa
push
xchg
mov
imul
cmp
xor
retf
scas
and
sub
xchg
mov
sub
rol
add
mov
jno
adc
sub
xor
fist
js
sbb
mov
pop
test
mov
xor
stos
cmp
push
ret
call
cli
push
rol
ds
hlt
inc
jge
dec
pop
clc
jge
sbb
fcomp
mov
add
loop
xor
dec
mov
addr16
xchg
ds
scas
repz
xchg
lock
add
sbb
mov
loope
inc
inc
cmp
and
test
or
test
mov
mov
icebp
mov
gs
mov
ds
jae
(bad)
mov
arpl
jge
mov
mov
inc
repnz
pop
inc
sub
inc
jmp
or
out
xlat
xlat
cdq
mov
imul
sub
push
test
adc
jno
xor
cmp
fiadd
and
xchg
or
fs
pop
push
out
dec
out
push
xchg
out
mov
mov
aam
(bad)
xchg
mov
call
push
push
dec
mov
mov
and
jns
cmps
add
cld
idiv
out
je
sub
and
jb
in
ins
push
cmp
and
xor
test
fwait
std
jge
and
jg
cmps
cmp
push
mov
lds
or
mov
or
jbe
ret
dec
mov
adc
mov
push
or
dec
dec
fistp
cwde
pusha
mov
in
mov
jl
sbb
sbb
ficom
jae
inc
mov
and
adc
xor
repz
das
ja
mov
xchg
or
in
dec
jb
mov
xchg
loopne
and
cmc
or
push
repz
or
popf
aaa
leave
(bad)
pusha
out
sti
rcr
dec
std
into
or
lods
cmp
sahf
aaa
pop
sbb
outs
xor
dec
js
ds
inc
retf
lods
xchg
popf
inc
cmp
leave
in
out
add
fidiv
jae
jo
aas
rcl
adc
fdiv
adc
fisttp
push
push
inc
lods
adc
dec
lahf
inc
mov
jae
pop
ds
mov
cmc
pop
iret
leave
jle
xor
push
jno
xlat
dec
ss
test
mov
pop
push
aad
jmp
and
or
or
jecxz
bound
push
and
add
sbb
xchg
scas
mov
iret
aad
inc
jp
adc
pop
add
(bad)
xor
mov
mov
in
fs
mov
push
dec
mov
jg
subps
mov
out
mov
sbb
xlat
inc
fs
fnstcw
mov
mov
push
pop
imul
movhps
cmp
jmp
lods
xor
mov
add
dec
clc
in
rol
pop
test
scas
ins
neg
mov
pop
cmc
in
or
sbb
adc
fild
dec
movs
adc
mov
pop
cwde
add
out
mov
clc
inc
lds
jecxz
pop
push
std
adc
cmps
mov
push
cdq
leave
call
clc
not
push
and
mov
jbe
adc
jg
mov
add
push
jae
hlt
pop
add
fwait
pop
stc
xor
push
je
les
pop
loop
push
aad
dec
inc
rcr
mov
test
mov
sbb
add
pop
fwait
in
jp
shr
push
push
mov
jb
dec
rcr
xchg
cld
popf
scas
mov
mov
mov
inc
fwait
test
and
xchg
ret
dec
inc
out
xor
repz
outs
xor
movs
call
lods
add
xlat
lods
call
(bad)
aam
(bad)
mov
xchg
lea
dec
adc
xor
or
popa
hlt
xchg
pushf
in
pop
popa
mov
dec
or
sub
arpl
xor
(bad)
sti
iret
or
in
mov
fldenv
jg
cs
in
mov
test
int
loopne
pop
movhps
push
test
sub
fistp
cmps
pushf
ja
cmp
fdivr
outs
and
pop
xchg
std
xor
call
inc
mov
dec
ins
imul
xchg
inc
repz
gs
mov
(bad)
aam
mov
and
mov
xor
add
and
pop
mov
jnp
xchg
xchg
add
cmps
ins
mov
sub
sbb
leave
clc
test
push
mov
inc
xchg
fild
es
shl
sub
pop
add
xchg
jp
dec
ret
cmps
cld
dec
cmc
pop
ins
icebp
mov
imul
call
cmp
sbb
pop
int
mov
mov
nop
and
add
std
push
repnz
pop
mov
in
add
jno
add
sbb
outs
scas
jmp
ret
xchg
fidivr
xchg
jle
mov
mov
outs
cmc
mov
fucomip
stos
pop
sahf
cmp
retf
shl
cmc
pop
jo
push
out
in
arpl
mov
dec
push
inc
and
lea
add
fxch
cmp
push
add
mov
cmp
(bad)
inc
jae
add
ja
push
(bad)
outs
dec
push
in
pop
jmp
mov
and
cli
fucom
push
pop
adc
xchg
pop
sub
push
xor
les
and
xor
mov
std
lahf
sub
clc
inc
daa
cmp
ja
jb
test
adc
sub
ret
inc
loop
pop
mov
push
retf
push
fstp
in
enter
push
outs
or
test
(bad)
xchg
or
cmp
push
cmp
dec
mov
int3
dec
xor
loope
adc
push
sub
sbb
or
mov
shl
mov
nop
dec
mov
retf
cmps
dec
mov
mov
or
clc
jno
add
mov
mov
cmp
call
push
cwde
lods
cmc
sub
pop
inc
push
ficom
fiadd
aad
dec
sbb
add
lock
push
daa
repnz
sbb
ret
cmp
sahf
jne
ror
lahf
mov
fadd
sub
addr16
imul
fiadd
inc
movs
cmps
inc
sbb
std
xor
loope
fwait
jae
push
popa
loop
(bad)
jecxz
lods
mov
mov
je
sbb
cld
inc
and
cmp
dec
in
imul
(bad)
or
xchg
test
cmp
ds
cmp
(bad)
scas
fld
mov
xlat
jnp
test
shl
jb
js
mul
cli
pusha
ret
lods
popa
sbb
(bad)
clc
mov
adc
js
in
and
pop
test
mov
or
cmp
jle
and
mov
mov
(bad)
xor
popa
ins
xor
mov
fwait
add
bsr
scas
jge
adc
push
and
cmp
cmp
fstp
ret
pop
leave
dec
cmps
mov
rcl
sbb
mov
push
iret
repz
sub
jg
push
push
cmps
adc
sub
push
fiadd
mov
sbb
call
ret
ins
xlat
mov
jl
retf
int3
xchg
mov
push
xor
rol
xchg
test
xchg
or
push
adc
adc
arpl
repz
jno
int3
ficom
push
mov
dec
xchg
repz
in
loopne
xor
loopne
cmp
fisubr
xlat
bnd
fwait
dec
stos
mov
mov
gs
add
sub
push
fs
jmp
test
mov
mov
clc
sbb
ins
rol
imul
repz
sbb
mov
fdivr
jmp
push
lahf
stos
mov
and
movs
cs
rol
adc
mov
or
cmps
out
sub
or
add
gs
jno
jo
dec
dec
loopne
push
movs
aad
inc
mov
mov
cli
fwait
push
into
std
pop
(bad)
jnp
imul
inc
jnp
shld
and
pop
pop
das
scas
sbb
and
mov
div
cld
loop
imul
dec
push
mov
adc
les
jp
push
pushf
call
call
je
sahf
jb
stc
aam
sbb
jp
outs
lahf
dec
and
sahf
ins
aas
pop
clc
ins
xchg
cmp
fs
pop
scas
push
mov
push
pop
outs
addr16
mov
pop
rol
(bad)
fcomi
xchg
mov
sahf
rol
inc
imul
xchg
retf
fisttp
test
js
or
jmp
mov
addr16
mov
sbb
retf
fwait
or
stos
lock
int
and
inc
lahf
push
int3
stos
mov
iret
sti
popa
xchg
retf
pop
movs
xor
(bad)
out
jg
pop
dec
repz
pop
cmps
xor
mov
xor
inc
push
xchg
and
imul
cmp
mov
and
jle
sub
jns
pushf
jmp
adc
jno
bnd
mov
fs
fimul
pop
pop
mov
cli
cmp
inc
imul
xor
add
aas
push
test
push
xchg
sub
sahf
push
test
adc
mov
mov
jl
(bad)
mov
cmps
or
movs
ja
mov
add
ja
adc
enter
cmp
ins
cmp
scas
test
mov
jmp
adc
jnp
mov
sbb
jle
iret
lods
sahf
push
mov
test
mov
jg
jo
mov
sub
cmp
ss
idiv
sbb
inc
sub
fs
mov
cmps
cdq
loopne
push
stc
jo
push
outs
xchg
test
mov
ret
js
adc
aam
test
sti
in
cmps
lods
jge
jmp
jo
lds
popf
mov
(bad)
push
(bad)
rcl
jl
into
inc
jecxz
mov
or
mov
xchg
enter
rcl
(bad)
pushf
loopne
fwait
xchg
mov
out
and
xor
jge
imul
cmp
cmp
fimul
push
dec
movhps
jg
out
rcr
pop
lods
shr
cmc
stos
push
pop
shl
or
mov
(bad)
xchg
loop
rcr
sbb
mov
ja
test
(bad)
mov
out
lods
mov
aam
cmps
jne
adc
cdq
repz
jle
mov
mov
adc
add
sbb
xor
sahf
sub
adc
fmul
and
stos
cmp
adc
outs
jne
(bad)
jmp
xor
adc
clc
fcmovbe
mov
mov
cmp
pop
test
aam
mov
xchg
pop
sahf
fimul
pop
push
sar
je
inc
sbb
(bad)
mov
or
and
pushf
and
mov
inc
cwde
dec
jecxz
jmp
cmps
cwde
xlat
loope
test
fnstcw
je
mov
sub
mov
inc
(bad)
ror
add
imul
cmps
in
mov
ror
mov
sbb
cwde
or
and
(bad)
fldenv
rol
xchg
mov
popf
shr
sbb
push
sbb
push
sbb
shl
and
push
js
aas
mov
test
and
or
sti
push
pop
ds
inc
lds
push
mov
xor
inc
icebp
mov
inc
mov
stos
hlt
outs
rol
or
add
xchg
pop
mov
ds
iret
sbb
mov
cmp
aaa
add
frstor
aas
mov
xchg
sbb
std
pop
add
enter
out
mov
sbb
sbb
lods
cdq
pop
push
clc
ss
cdq
sbb
lds
sbb
stc
fcomp
fisubr
pop
retf
test
xor
xor
imul
mov
mov
fdivr
sub
movs
cmp
sub
rol
movs
jle
bnd
gs
in
fild
dec
mov
hlt
xchg
mov
push
loopne
push
(bad)
mov
mov
in
fbstp
xor
jb
dec
jns
je
les
retf
mov
or
(bad)
retf
js
rol
xor
inc
ret
sub
xchg
mov
xchg
add
js
shr
sbb
imul
js
inc
mov
pop
aas
aad
sub
adc
retf
push
imul
scas
jnp
fs
dec
and
inc
xor
movs
repnz
jp
and
cmp
imul
pop
dec
mov
jmp
sub
push
xchg
inc
add
mov
jb
pop
repnz
sbb
leave
(bad)
cld
dec
jno
popa
sbb
mov
in
xchg
fs
mov
lahf
xor
xor
gs
idiv
mov
xchg
in
call
inc
pop
xchg
mov
cmp
add
test
lods
sbb
mov
mov
add
push
sti
push
int3
(bad)
sbb
pop
push
pop
lds
aas
inc
orps
pop
lods
or
cwde
in
aad
in
mov
cmps
add
popf
jg
inc
push
xchg
fbld
fbld
pop
or
add
xor
(bad)
mov
xchg
inc
cmps
test
xchg
and
stos
cmp
or
or
xor
mov
dec
sbb
cli
rol
loope
mov
fdiv
pop
mov
outs
pop
mov
bound
add
pop
sub
jbe
outs
iret
cld
test
ret
int3
das
jl
mov
mov
xor
dec
in
mov
in
hlt
retf
jmp
test
xchg
mov
mov
fwait
ja
jge
or
push
xor
xchg
and
pop
cwde
mov
ins
pop
push
fcmovnb
adc
cmp
jne
test
add
add
shl
rol
mov
add
js
add
stos
sti
jo
daa
das
ja
inc
xor
inc
add
in
gs
loopne
jmp
fwait
push
adc
leave
xchg
mov
mov
into
mov
add
push
retf
and
sub
mov
push
outs
cld
push
fiadd
je
cmps
cmp
dec
mov
xchg
std
clc
repnz
dec
push
test
mov
cmp
cmp
mov
jl
aas
pop
mov
and
sti
out
sub
aaa
sar
dec
push
sbb
adc
xchg
sar
icebp
jmp
cs
or
and
rol
dec
sbb
or
(bad)
pop
sub
sbb
jmp
mov
or
sbb
test
xchg
lahf
(bad)
enter
jns
cmps
call
pop
inc
(bad)
push
sub
data16
in
jnp
xor
popa
mov
rcr
loop
repz
stc
sbb
vmread
test
fwait
inc
rcr
push
inc
mov
ins
in
movs
movs
mov
adc
mov
dec
in
pop
push
nop
xor
sub
dec
jmp
rcl
mov
call
stc
jnp
lods
cmp
lahf
(bad)
ss
sub
xor
jecxz
out
in
mov
push
pop
dec
xchg
lahf
sbb
ins
(bad)
mov
aad
mov
xchg
jl
mov
dec
xchg
mov
(bad)
pop
pop
inc
das
and
jo
or
iret
inc
mov
test
inc
cmps
test
into
mov
add
cmp
movs
and
jle
stc
out
or
mov
mov
test
mov
clc
ja
fwait
sub
inc
xchg
mov
int3
sub
nop
xchg
and
(bad)
push
or
cmp
jns
xor
mov
xchg
mov
jns
cmp
cs
mov
inc
or
jl
dec
cmps
out
lods
cmp
pop
fst
retf
sbb
fwait
and
push
aaa
dec
jb
fistp
fnstenv
xchg
sub
retf
movs
mov
jmp
jnp
imul
bound
test
push
push
sar
add
clc
sahf
inc
in
jnp
not
xor
mov
mov
push
adc
test
pushf
dec
iret
and
push
inc
retf
jno
int3
jnp
outs
mov
inc
addr16
bnd
call
or
push
rcr
pmuludq
mov
(bad)
arpl
(bad)
pop
retf
and
outs
ins
(bad)
fstp
sbb
sti
in
mov
add
adc
inc
add
das
pop
adc
dec
sti
aam
int
adc
fistp
mov
ins
pusha
test
add
mov
clc
fadd
xor
popa
jbe
jl
inc
cmp
not
(bad)
lds
jo
pop
mov
cmps
push
and
clc
mov
rcr
pusha
sub
or
stos
sbb
dec
xlat
fnstcw
fld
scas
push
inc
add
mov
mov
mov
aam
add
adc
xor
loopne
outs
test
out
cmp
fidivr
js
dec
js
mov
lods
sti
imul
clc
aad
cmps
in
pop
push
out
(bad)
jbe
mov
pop
fldcw
das
xchg
sub
loopne
jnp
rcr
inc
cmp
add
lods
xor
mov
call
jae
and
ret
out
and
in
cmp
(bad)
out
rcr
loopne
int
push
sti
sub
fld
sub
sub
sti
retf
jmp
ins
cmp
push
dec
xor
mov
mov
xor
dec
pop
inc
cmps
mov
aaa
xchg
mov
ds
mov
and
fstp
xchg
inc
adc
jo
cld
mov
js
sub
retf
js
pop
mov
sahf
lods
lahf
mov
push
sub
into
adc
cmp
retf
mov
inc
mov
sbb
push
xchg
dec
es
lock
ret
jns
rol
cmp
out
inc
repz
cwde
fsubr
(bad)
lock
dec
cmp
in
xor
jge
in
shl
sbb
sbb
sub
dec
(bad)
or
jl
jmp
sbb
sbb
sar
dec
dec
scas
jmp
lods
fld
mov
pusha
test
ret
mov
add
enter
arpl
das
into
mov
das
sub
sbb
in
shl
(bad)
push
repz
lock
bound
adc
ins
xchg
fist
adc
imul
dec
jmp
fld
fstp
push
or
cli
xchg
out
sti
mov
mov
ds
out
add
cmps
pop
pop
mov
shl
adc
mov
jle
shl
loopne
or
cs
ja
rcl
and
pop
jg
push
fnstsw
or
out
mov
push
mov
cmp
cmps
dec
lods
cmp
stos
(bad)
retf
sbb
cli
das
inc
clc
addr16
test
and
dec
cmp
data16
xchg
ja
in
and
hlt
out
adc
push
push
dec
push
and
nop
inc
stos
lock
test
(bad)
pop
std
rcl
jmp
bound
sub
pop
jl
das
and
and
xor
icebp
add
inc
dec
rcl
cmp
shr
enter
shl
mov
cmc
fstp
add
sbb
xlat
jg
cld
cmp
fimul
lods
cdq
sub
std
inc
sub
rol
xor
scas
mov
cwde
pop
stc
addr16
xchg
movs
dec
je
push
js
xor
add
jns
adc
sbb
mov
mov
xchg
bndstx
rcl
sub
jl
scas
jmp
jo
add
mov
mov
adc
int3
pop
ss
adc
mov
(bad)
les
stos
cmp
mov
je
or
in
sub
pop
inc
icebp
js
out
ss
or
adc
xchg
jb
pusha
or
push
mov
int
push
sti
adc
cmp
mov
ret
pop
inc
sub
inc
push
mov
dec
push
cmp
fidivr
test
xchg
jg
pushf
test
clc
jl
xacquire
push
add
jnp
cli
mov
cmp
and
je
je
xlat
call
jle
push
pop
adc
xor
and
mov
mov
ins
pusha
adc
cmp
outs
mov
scas
leave
jne
push
mov
xchg
or
sub
cs
push
ror
xchg
mov
not
retf
jne
das
addr16
enter
pushf
mov
scas
popa
mov
jecxz
js
stos
js
pop
retf
(bad)
sbb
in
dec
popf
sub
add
stos
or
outs
shr
xor
imul
xchg
cs
das
data16
adc
jb
xor
jmp
push
pop
cmps
leave
int
and
sbb
mov
or
pop
add
repz
inc
jb
inc
sub
jne
mov
je
test
dec
cmp
jmp
cmp
mov
in
sahf
adc
ror
sbb
or
jg
push
fst
call
mov
pop
jnp
sysenter
ss
or
mov
ss
adc
dec
ficom
add
dec
lock
xchg
and
pop
mov
jns
hlt
js
inc
mov
mov
cwde
hlt
sbb
loopne
dec
sub
gs
loop
ret
ficom
dec
pop
xor
sub
sbb
cmp
adc
push
pop
xchg
int3
adc
jbe
lock
cmp
into
cld
sub
xlat
sar
cli
sub
lock
jmp
dec
cwde
inc
mov
push
and
xchg
jns
push
test
push
(bad)
aaa
in
fisttp
add
mov
push
xchg
rol
mov
mov
jno
ret
sub
xchg
dec
jns
add
mov
jmp
xchg
js
jnp
test
ja
push
add
in
mov
xor
jecxz
in
dec
test
int3
xchg
out
addr16
push
and
mov
mov
rcr
ins
pop
retf
(bad)
sahf
xor
adc
add
mov
sub
mov
test
stos
mov
mov
mov
arpl
xlat
imul
lea
int3
imul
inc
jbe
mov
rcl
idiv
or
xchg
cmp
xor
mov
xchg
(bad)
or
or
int3
cmp
mov
jmp
jnp
test
sub
and
or
cwde
pop
add
mov
xlat
lds
iret
int
or
xchg
push
out
popa
(bad)
retf
push
add
stos
pop
in
inc
scas
and
mov
out
push
sar
mov
sar
push
mov
iret
jl
nop
sub
pusha
iret
add
mov
ficom
and
jns
or
faddp
sbb
mov
add
(bad)
pop
push
push
adc
leave
ror
sbb
xchg
mov
out
das
cmp
sub
sbb
and
inc
mov
sub
xchg
mov
cmp
imul
ins
rol
into
ror
push
fldenv
mov
cmp
sub
push
mov
adc
test
in
js
pop
mov
outs
rcl
loopne
fsub
test
pop
add
adc
push
call
or
lea
jmp
dec
cmps
xor
jo
jne
push
popf
das
outs
outs
sbb
or
mov
aas
fdiv
add
test
and
(bad)
fcomip
movs
loop
mov
xor
sub
mov
push
inc
enter
sub
aaa
loop
mov
and
or
leave
push
mov
outs
outs
std
mov
mov
push
fisttp
loope
dec
xchg
pop
mov
mov
(bad)
adc
xor
mov
in
lahf
mov
jl
pusha
xchg
cmps
push
nop
push
retf
cmp
mov
aas
add
popf
and
leave
and
minps
jg
or
cmps
cs
jb
pop
das
push
jnp
je
cmps
or
cmps
js
or
repnz
inc
cmp
ret
xchg
test
push
jae
jnp
es
push
and
xor
sbb
jo
push
fisub
pusha
scas
lock
cmps
add
jecxz
and
stos
arpl
mov
xor
stos
test
xchg
shl
out
cmps
mov
cmps
adc
dec
sbb
push
leave
mov
add
add
aaa
mov
sub
rcl
les
cmp
adc
push
ret
sub
cld
add
or
xor
mov
dec
pop
and
xor
xchg
pop
ins
mov
icebp
(bad)
sbb
(bad)
sub
push
push
adc
fisub
aam
inc
inc
dec
addr16
cmp
test
and
jl
jno
and
jle
popa
aam
iret
dec
cmp
or
mov
and
xchg
in
lods
jg
pop
test
pushf
inc
jno
fdiv
and
scas
retf
cmps
rcr
jne
pop
mov
stos
inc
shl
out
pop
and
push
in
cmp
std
shr
cwde
add
rep
pop
(bad)
loope
call
pop
rcl
mov
jp
out
sti
stc
or
xor
dec
in
das
mov
pusha
sti
cmp
mov
mov
loop
mov
dec
xchg
cmp
int3
in
add
push
pop
mov
dec
pusha
push
cdq
retf
add
push
jl
scas
cmp
mov
sbb
inc
mov
sbb
mov
push
fld
outs
xor
jnp
repnz
adc
fdiv
mov
test
sbb
pop
xor
dec
pop
jg
mov
or
xchg
cwde
(bad)
jnp
hlt
push
push
mov
and
lods
sub
loopne
jmp
cmp
inc
jne
sar
sub
mov
inc
add
xor
clc
cmp
ss
adc
push
adc
dec
and
jp
xchg
jno
ins
mov
push
ins
push
std
inc
jnp
cmp
and
stos
cli
test
fs
mov
push
into
ror
dec
mov
and
(bad)
fnstsw
enter
and
mov
xchg
mov
mov
aad
fild
and
repz
(bad)
ret
dec
pushf
push
call
gs
mov
aad
(bad)
push
xor
rol
jo
pop
fs
mov
xor
adc
aas
cmps
cwde
sub
int3
test
xlat
mov
fidiv
dec
inc
sub
repz
arpl
test
(bad)
(bad)
cmp
sbb
in
sub
repnz
cwde
inc
mov
loopne
pusha
cmc
jmp
sbb
cmp
inc
mov
ror
aas
dec
retf
call
xchg
les
fcomi
jae
jns
cs
jmp
jbe
sub
repz
pushf
dec
mov
add
jp
mov
pop
popf
sub
and
jo
cdq
enter
push
pop
shl
movs
les
mov
enter
mov
rol
mov
mov
movs
jo
jae
mov
sbb
lods
std
shr
sbb
mov
adc
push
rcr
fwait
aas
mov
adc
aam
jmp
retf
push
inc
sub
dec
inc
pop
adc
and
aad
rcr
movs
adc
stos
stos
fcom
jg
push
test
mov
push
jecxz
cmp
in
cmp
ss
fisub
and
pushf
imul
cld
push
into
sbb
xchg
xchg
xchg
push
or
mov
mov
loop
cmps
jge
imul
push
pusha
das
(bad)
cli
mov
daa
arpl
sbb
pop
lock
push
test
inc
call
ja
outs
xor
and
icebp
imul
test
pop
(bad)
lea
neg
in
mov
add
data16
push
push
or
and
cmc
pop
sbb
push
sahf
pushf
enter
lods
aas
ret
icebp
repz
sbb
test
stos
dec
or
ins
xchg
in
push
lock
dec
mov
ret
mov
adc
pop
mov
aas
mov
out
jmp
fst
lods
addr16
push
mov
iret
lods
cmp
add
test
push
jg
xchg
inc
fcomp
jecxz
dec
add
jl
mov
inc
inc
pop
ja
xchg
test
repz
mov
imul
cmp
jno
jg
add
ret
mov
mov
sti
xchg
dec
mov
xchg
mov
fisubr
pop
repz
push
cmp
data16
sub
in
clc
jp
cld
les
add
adc
out
enter
pop
jno
mov
not
cmp
push
add
inc
pop
xchg
mov
and
sar
imul
mov
loope
mov
jnp
xchg
(bad)
jmp
cmp
inc
xor
div
stos
fist
xchg
push
mov
ret
daa
mov
push
lea
das
(bad)
in
repnz
sbb
xor
jb
jbe
mov
je
xchg
test
cmps
xchg
hlt
xchg
mov
mov
mov
rol
push
ret
(bad)
call
int
loop
ss
int
mov
not
pop
dec
icebp
neg
pop
mov
push
(bad)
jmp
mov
das
repnz
or
mov
xlat
ins
pop
gs
push
jl
fst
mov
outs
psrad
cmp
outs
jmp
lods
push
jmp
fld
sub
xchg
mov
scas
push
in
int3
or
aas
xor
mov
adc
jl
scas
push
xchg
and
(bad)
movs
pusha
mov
hlt
inc
call
into
jne
xlat
cmps
or
or
push
mov
push
xchg
outs
shl
adc
jl
dec
inc
loop
shr
jecxz
ror
(bad)
jge
gs
hlt
sti
cmps
sub
loopne
nop
test
lods
and
js
shl
inc
leave
jge
jp
and
mov
lea
sbb
xchg
xor
pop
mov
repnz
or
imul
fisttp
(bad)
push
bound
inc
(bad)
adc
sti
sub
or
push
inc
and
js
test
outs
cmp
mov
xor
jl
arpl
jmp
test
(bad)
adc
test
data16
xchg
mov
repnz
rcr
sbb
cmp
pop
imul
mov
(bad)
stos
in
pop
adc
sub
push
movs
icebp
xor
sub
mov
pop
jne
js
loope
iret
repnz
out
jle
adc
cmp
pop
lods
xchg
lods
jnp
sub
cmp
xchg
adc
cmp
mov
mov
movs
or
stos
pop
jbe
inc
adc
add
or
inc
arpl
or
hlt
mov
sahf
cmp
pop
mov
aaa
jp
mov
push
cmp
jp
or
cmp
ds
(bad)
in
dec
addr16
ror
shl
popf
dec
mov
into
add
hlt
pusha
loope
pop
xor
inc
add
fistp
les
jmp
fcmovb
cmps
and
pop
shr
mov
loope
cld
ret
sub
bound
push
ss
xchg
inc
sub
sar
push
pop
mov
pop
mov
mov
pusha
lods
adc
pop
cmp
inc
aad
(bad)
aam
stos
mov
cli
pop
outs
inc
lods
dec
pop
fisub
call
push
aaa
pop
retf
mov
inc
adc
fst
mov
sbb
cmp
std
mov
mov
aad
pushw
sbb
retf
movs
nop
out
aas
and
test
adc
mov
cli
pop
sub
inc
movs
pop
das
sbb
inc
or
nop
mov
cli
inc
test
mov
jecxz
(bad)
call
pop
je
mov
jno
out
dec
inc
dec
push
test
add
dec
mov
sbb
fimul
sbb
mov
sbb
xor
mov
or
psubusb
jmp
sbb
cmp
in
and
or
out
pushf
pop
push
cs
mov
jb
ffree
xlat
dec
repz
dec
dec
pusha
dec
push
xor
inc
clc
sahf
sub
inc
mov
mov
inc
mov
and
test
mov
lahf
push
pop
jle
inc
pop
or
add
push
adc
adc
push
in
jns
es
lods
popa
rol
cmp
sbb
out
xor
out
aam
cmps
jne
cld
leave
xlat
ss
add
mov
scas
popf
aaa
faddp
cli
(bad)
(bad)
sub
sbb
ja
mov
(bad)
cmp
std
sbb
arpl
mov
addr16
jmp
xchg
lods
inc
mov
stc
pop
inc
sbb
and
(bad)
xchg
popa
imul
mov
into
loope
push
xchg
jnp
push
add
or
sahf
sbb
scas
rcl
mov
lods
push
mov
mov
mov
aad
ret
add
xor
pop
maxps
icebp
ror
loope
int3
aad
aad
and
adc
pushf
mov
and
sbb
and
call
mov
cmp
jae
sti
lods
xchg
adc
lods
xchg
pop
xchg
out
xchg
loope
mov
aas
pop
mov
dec
or
cmp
enter
dec
out
pop
out
sahf
cmps
call
or
cmps
cwde
xchg
stos
stos
icebp
sbb
lock
fdivr
dec
add
ins
xchg
clc
push
std
dec
and
cs
in
push
adc
repz
fnstenv
push
jo
sahf
add
xchg
inc
dec
clc
jmp
lea
mov
sbb
cmps
add
and
pop
inc
movs
aad
ss
jp
mov
cs
in
movs
or
scas
jg
loope
das
jp
xor
scas
jnp
mov
sbb
jg
add
shr
clc
pop
cmp
aaa
ss
mov
repnz
into
lds
cli
test
jp
inc
jmp
adc
jecxz
push
out
test
jnp
aad
jae
aam
test
cs
into
push
outs
stc
jl
push
add
or
mov
fstp
mov
aaa
jl
cmp
pop
popf
sbb
jle
jmp
push
bound
jge
xchg
shr
cmp
(bad)
addr16
test
jb
push
jnp
mov
pushf
fst
fld
imul
xchg
mov
jno
out
jns
in
outs
mov
jnp
xchg
mov
cmps
std
in
jge
retf
or
cmp
sbb
retf
dec
dec
addr16
test
mov
xchg
jae
mov
retf
push
movs
(bad)
cmp
mov
jns
call
dec
cmps
xchg
mov
and
sbb
popf
adc
cmps
mov
and
(bad)
lock
fisub
mov
sbb
pop
icebp
sar
(bad)
pop
jno
loope
inc
dec
add
xchg
mov
or
fidivr
fisttp
repnz
dec
cmc
jo
jbe
mov
and
mov
cmp
adc
xor
push
cmp
sub
shl
(bad)
call
mov
cdq
or
lods
xchg
mov
stos
cs
mov
mov
or
popf
fwait
aad
inc
or
add
push
pop
jmp
sub
dec
mov
adc
cmp
dec
jo
into
and
sub
jmp
mov
jno
and
jb
jne
mov
pop
xchg
aam
dec
test
jae
cmc
cmps
inc
call
ret
pop
inc
in
mov
push
jge
inc
lea
hlt
pop
push
aam
mov
xor
adc
sub
repnz
ss
dec
sub
fs
(bad)
xor
ss
mov
xchg
sti
mov
mov
loope
dec
add
imul
jbe
jecxz
loope
cmp
xchg
xor
pop
loop
nop
inc
dec
mov
div
xchg
sub
pop
iret
popa
movs
leave
jno
dec
push
dec
xor
push
test
push
sahf
sub
pop
or
jo
jge
mov
(bad)
pop
jp
lea
es
ss
fs
push
nop
push
mov
scas
daa
in
push
adc
vpunpckhwd
cmp
pop
pushf
mov
push
jge
hlt
sbb
push
lahf
fcom
shr
sub
out
vmaxss
out
pop
mov
lock
in
and
das
popf
push
retf
fld
cwde
jmp
jnp
add
punpckhdq
and
test
xor
and
xor
jae
daa
or
xor
mov
adc
mov
outs
mov
scas
xor
jmp
shl
sbb
jmp
add
jns
test
sub
jbe
inc
out
mov
add
inc
mov
inc
aaa
push
scas
ja
daa
mov
hlt
jl
and
push
jno
pop
ss
aad
dec
jne
arpl
sub
sbb
pop
imul
leave
or
xchg
dec
xchg
inc
mov
fild
aas
add
mov
je
sbb
ficomp
cmp
and
mov
jle
inc
aam
inc
cmp
rcr
cmps
add
push
hlt
mov
and
add
mov
daa
call
dec
push
test
adc
in
aam
dec
ins
pop
ins
call
xchg
shr
push
xor
(bad)
adc
and
inc
pop
pop
mov
pop
add
je
imul
(bad)
clc
mov
neg
push
sbb
mov
push
jne
stos
or
mov
test
std
jp
dec
pusha
test
pop
jge
add
psubsb
jne
je
or
mov
sbb
adc
call
xor
push
retf
aad
xchg
push
sub
jl
mov
test
stc
outs
mov
mov
int
(bad)
add
push
xchg
xor
into
sbb
test
cli
stos
fist
push
sbb
inc
arpl
aas
das
iret
lahf
int
sbb
stos
pop
adc
mov
add
pop
lock
jmp
push
add
dec
clc
daa
push
inc
mov
lea
mov
sbb
in
adc
mov
js
retf
push
mov
push
push
shl
mov
leave
rol
sti
std
inc
je
sub
ins
jg
pusha
inc
sahf
test
hlt
(bad)
cmp
mov
cmp
inc
push
and
pop
retf
sbb
into
xchg
push
(bad)
icebp
daa
pushf
xor
or
cmp
jl
pop
mov
cmp
shl
push
mov
pop
jp
cmps
int
aaa
adc
jmp
iret
push
mov
movs
inc
mov
add
iret
sbb
ds
mov
push
inc
into
in
pop
pop
in
adc
aad
jge
pushf
xchg
push
add
xor
pop
(bad)
(bad)
xlat
jle
dec
push
lea
pop
mov
sub
leave
stos
sbb
daa
cmp
sti
mul
mov
adc
ja
idiv
pop
mov
ret
pop
sub
popa
and
sahf
jmp
ins
leave
dec
hlt
das
push
add
ja
and
(bad)
and
div
stos
jo
push
inc
fdivr
and
lds
inc
int3
add
cld
push
int3
dec
and
movs
ret
dec
add
dec
cmp
dec
dec
sbb
sub
and
in
mov
(bad)
push
xor
fnstcw
aam
add
mov
(bad)
loopne
jl
push
scas
retf
sub
jo
mov
cmc
inc
xor
popf
ins
mov
stos
std
call
adc
jecxz
mov
das
call
retf
sub
mov
or
(bad)
scas
clc
enter
sahf
sbb
cmp
cmp
outs
loop
test
jnp
pop
mov
cld
mov
xchg
pop
xchg
xchg
or
jo
xor
test
xor
in
out
test
inc
(bad)
push
cmp
or
mov
or
(bad)
into
dec
inc
fs
lea
dec
mov
lods
sbb
call
fnstcw
into
outs
(bad)
push
movs
call
clc
test
imul
jle
cmp
mov
mov
stos
and
mov
cs
(bad)
sti
jo
(bad)
jp
jp
(bad)
sar
ficom
push
iret
es
int3
sbb
push
dec
push
in
push
mov
pop
and
sbb
cmp
ss
xchg
jle
aam
(bad)
in
and
adc
xchg
sbb
mov
or
aas
xchg
sub
ffree
in
lahf
sbb
enter
cmc
cmp
(bad)
ret
pop
pop
or
sti
fnstsw
movs
repz
mov
sar
test
mov
xchg
retf
pop
jns
adc
pop
dec
stos
test
clc
add
stos
sub
cmp
rol
bound
lods
shl
ja
xor
stos
scas
cwde
mov
movs
pusha
mov
xchg
popa
pop
bound
xor
test
cmp
pop
pop
outs
stos
mov
xor
cli
jbe
cmp
cmp
sar
gs
push
mov
test
sbb
jmp
shl
cmp
pop
das
or
inc
push
jmp
dec
les
ja
jmp
js
in
push
jl
sbb
push
mov
aad
mov
stos
loopne
(bad)
or
pop
jae
mov
ret
repz
shl
jo
(bad)
stos
jns
push
mov
pop
fisub
xor
jl
jbe
(bad)
pop
out
mov
xor
or
pop
int3
adc
inc
xor
xor
or
sbb
ss
jg
add
push
sub
shl
fidivr
push
push
inc
sti
lock
push
add
mov
stc
and
aas
cwde
pop
or
adc
stc
add
jbe
jnp
mov
mov
in
cmc
call
pushf
xchg
dec
inc
xor
ds
pop
rcr
jo
xchg
into
dec
cmps
mov
fistp
call
outs
fdecstp
shr
cmp
cmps
or
ror
add
sub
aas
fild
movs
bound
ss
pop
in
cmp
and
mov
inc
push
and
mov
movs
mul
inc
fbld
sub
cmc
adc
imul
pusha
inc
inc
pop
sti
pop
test
jmp
arpl
mov
xor
cvtps2pd
test
sbb
add
arpl
jmp
popf
and
test
pusha
and
dec
xor
mov
inc
push
ret
xor
xchg
mov
cdq
mov
retf
div
xor
movs
mul
lods
scas
call
mov
add
scas
movs
sbb
jnp
sub
hlt
xlat
adc
pop
add
pop
mov
cli
dec
inc
xlat
les
mov
xchg
inc
fdivr
dec
push
js
cmp
push
mov
mov
xchg
scas
jno
inc
cmp
bound
lahf
es
inc
out
dec
jp
inc
test
adc
or
outs
mov
jmp
inc
pop
ret
push
enter
call
dec
stc
cwde
inc
inc
xchg
pop
das
push
ret
jae
cmp
cmp
jmp
xor
cld
xchg
mov
fcomp
test
pop
push
std
sbb
jns
out
and
test
inc
(bad)
aas
mul
push
out
and
icebp
(bad)
lods
and
in
ins
loopne
jae
jo
data16
gs
jne
sbb
inc
xlat
xor
and
cmp
repnz
mov
out
clc
cmp
aad
mov
jnp
add
in
mov
dec
add
mov
aas
ins
leave
(bad)
rcr
pop
lods
ins
test
xchg
push
ins
iret
outs
xor
std
cmc
mov
jp
pop
push
xchg
jb
dec
mov
fbld
jmp
add
xchg
mov
jle
bound
repz
out
scas
adc
stos
push
jg
sbb
mov
pop
fs
add
mov
vpsllvw
add
push
bound
cld
pop
in
adc
int
add
pop
mov
gs
loope
sar
adc
push
movs
out
xor
loop
jg
mov
lds
mov
xor
pop
dec
pop
push
mov
jo
dec
sbb
mov
mov
sub
test
les
mov
add
mov
cwde
add
or
push
push
aas
inc
stc
and
cli
xor
sub
out
xchg
dec
mov
push
mov
mov
and
push
adc
lds
in
fwait
mov
aas
aam
out
lods
in
loope
into
dec
add
dec
test
pop
lahf
jg
repnz
das
outs
sbb
mov
push
cmp
cmp
stos
scas
mov
add
push
xor
arpl
cmps
inc
mov
inc
lock
stos
movs
dec
not
sahf
int3
cmp
sub
(bad)
dec
cmps
jnp
pop
add
xchg
std
and
fistp
dec
cmp
popf
push
ficom
jg
and
lahf
scas
cld
add
xchg
mov
mov
and
sar
cmps
sub
cmp
mov
imul
pop
xchg
jne
sbb
mov
retf
mov
mov
aam
pop
(bad)
sti
(bad)
gs
add
ins
push
jmp
das
es
ret
mov
and
hlt
cmp
or
scas
mov
sti
jno
sub
xchg
(bad)
popa
fild
loop
pop
jg
push
clc
int
out
sub
call
inc
lods
int
ja
cmp
lods
out
inc
sub
xor
adc
mov
cmp
pop
fdiv
mov
mov
ror
shl
ds
pop
popa
enter
imul
or
fwait
and
ds
(bad)
xor
hlt
xchg
and
inc
ins
sbb
xor
jg
xor
into
pop
hlt
cmp
xor
inc
sbb
aaa
fmul
out
dec
jae
cmp
mov
sbb
add
inc
add
xlat
mov
jbe
int3
jb
xchg
(bad)
adc
int3
sub
jle
mov
mul
mov
push
rcl
mov
dec
or
aaa
sub
bound
aam
mov
mov
sbb
aas
jle
adc
mov
mov
mov
add
or
pop
xchg
lea
movs
fwait
sbb
jg
pop
inc
addr16
pop
shl
push
into
je
sub
loope
jb
in
lahf
sbb
dec
test
pushf
cmp
loope
mov
test
lahf
stc
jge
mov
push
sbb
sub
jg
stos
dec
or
adc
loope
ret
mov
push
cmp
mov
push
mov
jge
int3
sbb
push
hlt
pop
lds
fptan
pop
in
pop
in
rol
aas
stc
push
jbe
push
dec
clc
iret
xchg
ss
jg
xchg
cld
add
call
pop
imul
sub
cdq
test
lds
mov
mov
xchg
xor
and
ins
push
mov
jecxz
xor
inc
int
rcl
fiadd
sbb
ret
cmp
pusha
lods
add
jne
das
xlat
stos
movs
and
shr
add
sub
jmp
mov
pop
jae
xchg
dec
sub
cmp
enter
rcl
cmp
ret
push
hlt
cwde
out
jns
add
sub
nop
cwde
pop
leave
cmp
push
sub
mov
push
cmps
mov
cmps
mov
ficom
dec
pushf
sub
data16
push
xchg
sbb
mov
jl
jge
inc
das
sub
das
jmp
mov
xchg
pop
pop
ret
pop
mov
sti
push
stos
(bad)
push
add
fidiv
pusha
sub
adc
int
mov
mov
(bad)
popa
and
adc
repnz
dec
adc
mov
or
shl
inc
out
ret
rol
jle
test
lods
xor
repz
dec
dec
mov
inc
push
mov
arpl
mov
mov
cmc
dec
stos
xchg
mov
or
xor
mov
frstor
adc
sbb
mov
push
inc
push
call
aad
pop
jmp
(bad)
dec
repnz
jmp
out
adc
add
mov
pop
ror
jb
xlat
xchg
cld
hlt
mov
ss
into
fmul
jb
adc
or
movs
sub
call
inc
adc
pop
imul
jl
loopne
fdivr
or
cmp
or
mov
ficomp
retf
and
ror
inc
js
mov
pop
xchg
jne
leave
inc
sub
sti
fild
xchg
dec
pop
lods
and
or
out
fmul
sbb
dec
out
clc
pop
sbb
icebp
loop
addr16
lahf
je
out
pop
push
inc
add
dec
les
jg
mov
lock
dec
mov
seto
movs
je
inc
inc
fs
mov
fnsave
sub
mov
or
jno
jmp
leave
xor
fld
in
lds
cmp
pop
enter
lea
retf
adc
push
fstp
ficomp
push
cmp
adc
inc
inc
and
pop
test
and
mov
test
mov
xchg
sub
outs
repnz
fsub
jmp
cmp
xor
pusha
push
int
xchg
in
mov
inc
test
fs
or
movups
mov
xor
xor
push
ror
inc
and
sbb
add
loop
mov
dec
and
in
or
aam
mov
test
jl
sbb
movs
(bad)
leave
sbb
sub
pop
mov
les
mov
fcomp
jl
sbb
out
cmp
xchg
outs
mov
cdq
lahf
push
sbb
sub
adc
jnp
adc
fs
lds
lahf
jle
(bad)
test
push
mov
push
(bad)
jne
(bad)
jge
mov
popf
int
inc
mov
outs
scas
jmp
ret
loop
or
mov
mov
push
mov
inc
sahf
mov
mov
xchg
xchg
and
jle
cmp
and
fucom
cmp
inc
jbe
xchg
enter
jecxz
imul
mov
pop
popa
cwde
adc
fdivr
les
fsubr
stos
popf
jbe
sbb
les
xor
mov
mov
xor
out
(bad)
scas
push
fimul
loopne
lods
or
cmp
data16
pinsrw
fdiv
push
xor
or
out
cld
and
adc
es
pusha
and
push
inc
inc
pusha
inc
pop
stc
mov
test
out
shl
push
out
sub
leave
das
outs
out
adc
and
int3
push
pusha
es
cmc
adc
pop
in
out
test
inc
ret
call
movs
iret
add
popa
stos
rol
adc
mov
jmp
int
(bad)
ror
nop
(bad)
xchg
xchg
pop
mov
enterw
adc
ror
addr16
pushf
mov
stos
mov
inc
jmp
sub
or
out
mov
cmp
inc
pusha
mov
leave
neg
in
dec
mov
call
mov
mov
push
pop
out
nop
fcomp
icebp
push
mov
loopne
push
gs
xchg
or
rcr
jle
xchg
shl
inc
cmp
arpl
fxch
fmul
mov
mov
fmul
fistp
bound
cmc
jo
push
call
out
scas
jl
lea
cmps
cmp
inc
cwde
iret
das
add
fwait
cmp
outs
jo
and
mov
inc
pop
(bad)
mov
pop
aaa
dec
push
sub
add
and
aas
(bad)
shr
and
or
rol
cmps
sbb
stc
stos
pusha
aam
loopne
(bad)
sub
cmps
xlat
(bad)
fmulp
nop
mov
cs
cmp
adc
and
sub
mov
out
xchg
mov
add
int3
inc
xchg
(bad)
stc
mov
mov
pop
add
out
mov
ins
mov
mov
mov
push
add
stos
dec
aad
hlt
cmp
mov
ds
pusha
stc
cmp
arpl
pop
pop
jle
cmp
mov
sub
(bad)
adc
int
pop
dec
adc
sbb
cmps
mov
leave
jle
xor
pop
adc
mov
pop
cmps
test
out
sbb
mov
test
shl
sbb
push
ins
push
mov
outs
push
(bad)
jns
xor
jl
ret
mov
rcl
clc
and
stos
cmps
sbb
sahf
xchg
clc
lods
sub
xchg
xor
sbb
nop
test
pop
outs
sbb
pop
jecxz
shr
add
or
push
loop
mov
repz
inc
out
iret
inc
push
pop
retf
add
mov
nop
dec
(bad)
push
mov
mov
je
mov
mov
xor
mov
js
(bad)
cdq
cmp
out
(bad)
int3
les
push
fbstp
xor
dec
mov
pop
add
aam
aaa
sbb
sbb
test
xchg
hlt
in
mov
push
out
neg
add
pop
and
mov
and
jg
mov
es
add
sar
xor
xor
pop
xchg
call
out
sbb
xor
xchg
test
jp
(bad)
int3
cmp
xchg
xor
mov
sbb
sub
cmp
xchg
cmps
das
dec
sbb
fbstp
push
sbb
pop
or
aam
stos
test
in
in
pop
dec
gs
xor
pop
and
out
inc
push
daa
xchg
cwde
mov
nop
cmp
pop
mov
test
xchg
retf
xchg
mov
(bad)
aam
into
popf
shl
and
(bad)
mov
pop
sub
or
xchg
dec
jno
pop
dec
nop
dec
mov
movs
test
dec
cli
adc
push
std
leave
outs
inc
test
fcmovbe
iret
fdivr
sbb
rcl
fwait
xlat
gs
push
movs
push
mov
mov
retf
xchg
std
(bad)
pushf
lods
mov
lock
call
test
aaa
test
mov
pop
outs
lahf
pusha
mul
jecxz
push
lds
aam
push
jmp
aad
sti
sar
mov
sub
and
rol
shl
lods
(bad)
enter
imul
stos
aam
cmp
pop
mov
and
xchg
sar
pushf
xchg
mov
push
stos
sbb
stos
cmc
lock
aaa
jno
sbb
or
mov
loope
add
addr16
mov
xchg
sar
cwde
lea
inc
pop
sub
sti
mul
ja
ins
frstor
(bad)
std
jne
and
cmp
jnp
pop
adc
cmp
pusha
ins
dec
add
fs
or
mov
xor
das
js
mov
mov
ja
data16
clc
cld
es
dec
and
ret
stc
cmp
add
mov
movs
sub
push
pop
sti
popa
adc
rol
add
enter
ja
dec
fcom
ds
xor
int3
int
mov
xor
out
out
mov
sub
popf
mov
jp
xor
sti
pop
and
mov
ins
fisub
ins
retf
cmp
imul
fcom
cld
outs
iret
mov
mov
test
scas
loopne
cmp
sub
popf
mov
mov
movs
mov
leave
mul
jns
xchg
imul
icebp
int3
sbb
jp
imul
jle
mov
les
scas
test
jmp
icebp
fist
mov
mov
nop
(bad)
mov
add
mov
sub
push
mov
sbb
or
mov
test
sahf
adc
cdq
fdiv
icebp
xchg
pop
mov
or
addr16
je
inc
out
sti
add
sbb
mov
dec
clc
loope
inc
in
dec
test
outs
(bad)
(bad)
retf
add
jge
push
int
sbb
sbb
repnz
lea
sub
in
sub
mov
adc
push
cmp
movs
jns
cmp
xchg
fisubr
enter
jne
into
mov
stos
mov
ret
outs
jecxz
fdivr
mov
frstor
iret
in
xlat
shr
inc
fstp
jae
add
jg
bound
cmp
jb
and
mov
adc
imul
adc
ja
inc
xlat
ins
cmp
cmp
(bad)
das
out
in
and
aaa
test
mov
xchg
push
dec
stc
enter
xchg
pop
jecxz
push
out
mov
xor
out
js
(bad)
xchg
or
imul
retf
cli
and
jbe
dec
aaa
sbb
dec
push
pusha
aad
add
repnz
ds
in
and
add
jg
dec
pop
pop
ins
mov
enter
std
push
ds
xor
js
out
cmc
pop
cmps
pop
cmp
cmp
mov
jmp
aas
and
push
scas
pusha
(bad)
push
dec
pusha
or
mov
repnz
mov
loop
push
mul
mov
das
dec
jl
jb
(bad)
fiadd
inc
or
xchg
push
mov
cmp
add
es
outs
xchg
xchg
push
push
mov
xchg
in
sub
(bad)
popa
aas
push
mov
or
jp
cmp
xor
mov
fiadd
adc
inc
(bad)
jmp
adc
pop
inc
(bad)
xchg
fcom
mov
cs
aas
mov
(bad)
call
inc
adc
popf
bound
pop
mov
shl
pop
mov
xchg
mov
adc
(bad)
jae
sub
aad
call
aam
mov
add
iretw
inc
shr
push
adc
mov
in
or
inc
popa
sahf
xchg
daa
and
mov
stc
test
add
xor
inc
dec
pop
int3
pop
add
dec
psubb
jmp
in
into
dec
sub
(bad)
cmp
pop
shl
push
push
(bad)
(bad)
xchg
jmp
fwait
mov
out
inc
cdq
dec
(bad)
movs
mov
jmp
loop
pop
fwait
or
jae
push
(bad)
jb
inc
sub
add
ja
adc
enter
jl
xchg
sub
inc
push
in
stos
je
lahf
mov
fldenv
xchg
jp
lahf
sti
inc
cmc
and
pop
push
shr
sub
mov
pop
jbe
or
fwait
xchg
and
sub
sar
mov
push
inc
(bad)
cmc
dec
inc
sbb
pop
sahf
xor
xchg
adc
xchg
jae
dec
fwait
sub
test
push
test
and
addr16
add
push
out
lahf
push
shr
xor
stos
scas
adc
add
retf
pop
movs
push
fwait
jb
add
xchg
(bad)
addr16
pop
scas
xchg
push
out
out
popa
loop
xchg
sbb
cli
bound
pop
(bad)
shl
cmp
movs
dec
pop
cmp
dec
inc
test
push
jle
cmp
pop
fbstp
pop
(bad)
push
jmp
pop
aam
push
out
ds
adc
mov
jnp
adc
sti
adc
imul
and
adc
push
cmc
add
shl
pop
mov
or
retf
int3
and
ja
xor
mov
iret
or
fwait
jl
mov
stos
and
xor
lods
aam
pop
mov
in
lods
sub
mov
inc
bound
xchg
ror
jo
jne
test
mov
cmp
cmp
leave
or
jmp
out
push
out
xchg
rol
retf
icebp
les
dec
mov
nop
mov
push
sbb
dec
and
ror
jmp
leave
or
scas
ret
dec
test
ds
mov
(bad)
sti
cmp
push
jb
jbe
sar
ins
int
cmp
pushf
es
pusha
in
mov
pop
xor
add
into
jecxz
sub
sub
clc
or
or
sbb
cmp
mov
(bad)
sbb
clc
jl
sbb
cmp
dec
mov
push
lock
add
push
jne
mov
add
(bad)
cmc
(bad)
sti
xor
fwait
icebp
repnz
ficom
pop
shr
mov
in
mov
or
in
jae
xchg
(bad)
(bad)
adc
and
xchg
add
(bad)
sbb
dec
inc
pop
xlat
bound
pop
sar
xchg
mov
sub
push
mov
int3
mov
js
test
fist
pop
cmp
mov
ins
les
or
ins
and
mov
stos
scas
imul
add
mov
fisub
test
push
dec
xor
repnz
mov
lods
inc
mov
aaa
adc
and
xchg
and
ins
mov
mov
test
fstp
kmovw
sub
icebp
shl
adc
stc
sbb
test
xlat
push
out
add
popa
pop
adc
cld
pop
mov
std
adc
push
push
pop
dec
inc
mov
jmp
mov
in
stc
ins
push
mov
dec
sub
pusha
push
imul
cmps
inc
fs
mov
jb
or
mov
neg
xchg
ret
and
(bad)
aad
pop
rdmsr
scas
bound
sub
fwait
sub
xchg
xchg
jle
inc
and
scas
outs
repnz
stos
rcr
fdiv
xor
scas
into
shl
leave
ror
pop
fstp
fs
sub
inc
(bad)
push
xchg
mov
mov
pushf
mov
stc
jg
in
sub
fist
add
dec
fiadd
cwde
add
jb
(bad)
(bad)
mov
xor
add
enter
or
test
cwde
jbe
les
mov
out
xchg
mov
call
loop
dec
aad
test
shl
dec
popa
xchg
pop
cmp
cwde
add
retf
cmp
cs
loope
adc
aam
out
stos
xchg
mov
xchg
mov
scas
jmp
sbb
gs
mov
loope
or
icebp
mov
fimul
sbb
push
pop
push
test
jg
add
and
push
push
sti
pop
xor
gs
sti
retf
mov
enter
sub
jmp
adc
inc
push
push
mov
in
fsubrp
fimul
iret
lds
xchg
dec
test
aam
mov
pop
rol
(bad)
es
inc
push
push
mov
outs
xor
jecxz
mov
cmp
push
jae
out
(bad)
fsubrp
test
pusha
cmp
dec
shl
jns
call
test
pop
jmp
stos
aad
cmp
push
stos
sbb
outs
or
in
add
loope
data16
cmp
and
mov
jno
xchg
mov
mov
mov
iret
pop
rcr
pop
call
or
xchg
jecxz
mov
and
lock
lods
xor
call
in
inc
add
fnstsw
xor
cli
xor
mov
mov
out
adc
add
sbb
xchg
jmp
cmp
push
call
mov
(bad)
lock
imul
mul
sbb
jo
pop
pop
outs
sub
cld
pop
fnstenv
xor
cdq
cmps
adc
fdivp
xchg
xor
mov
fild
and
aas
or
sub
cmc
add
or
call
(bad)
mov
fimul
push
dec
pusha
fisub
cmp
or
sub
adc
aaa
inc
icebp
push
(bad)
jmp
je
cwde
mov
adc
das
or
out
out
adc
cld
ja
sar
out
jg
mov
jae
(bad)
and
or
rol
test
or
bound
xor
repnz
and
std
arpl
rcr
dec
cld
xchg
aam
sub
or
fld
das
jmp
aaa
arpl
(bad)
xchg
aaa
ds
cmp
xchg
push
pusha
out
sbb
outs
(bad)
out
xor
jno
out
stc
push
fidiv
fldcw
popa
call
cs
adc
sub
sbb
xchg
leave
test
xchg
mov
adc
int
jb
mov
sub
jae
outs
ror
std
jge
es
jns
rcl
sub
sub
shr
aam
sbb
fwait
push
xchg
test
aam
sti
daa
stos
add
and
hlt
xor
ror
sub
push
dec
xor
cld
rcl
sbb
call
retf
nop
movs
dec
xor
xlat
jge
cmps
hlt
push
icebp
or
mov
xchg
shr
scas
out
cmps
adc
mov
int
mov
push
push
js
js
(bad)
rol
cmp
clc
xchg
pop
inc
repnz
add
push
mov
sub
jno
mov
icebp
pop
les
enter
xlat
test
push
mov
push
fistp
pop
test
in
icebp
fidivr
dec
add
mov
mov
push
cmc
stos
dec
fldenv
rcl
aaa
mov
adc
pop
cmp
sti
add
jne
jb
mov
pop
outs
fst
sbb
imul
dec
out
lods
clc
mov
jmp
hlt
mov
(bad)
(bad)
xor
leave
or
inc
lahf
in
jo
sub
inc
(bad)
mov
sub
loop
adc
loope
cld
sbb
out
rcl
les
jg
outs
add
jno
(bad)
fild
lock
popf
and
sti
cmp
pusha
inc
jns
(bad)
in
xchg
scas
cld
int3
ja
xor
xchg
mov
rcr
fsubr
lea
aad
sub
pop
fsubp
jge
push
ja
mov
push
jno
dec
add
arpl
fisttp
pop
adc
push
cmp
inc
mov
cmp
xchg
ror
sbb
jb
jno
data16
test
xor
sub
sbb
push
mov
(bad)
push
add
ss
jns
lahf
mov
jle
test
and
mov
mov
dec
jno
stos
(bad)
pop
mov
jbe
sub
adc
jmp
(bad)
je
jb
scas
inc
enter
pop
pop
adc
scas
push
repz
std
xor
add
pop
rcr
out
jl
iret
pop
or
xchg
xor
dec
out
sbb
scas
(bad)
into
mov
dec
cmps
jle
sub
mov
fmul
sub
or
mov
dec
mov
pop
mov
movs
movs
jp
in
in
ja
sbb
mov
push
scas
adc
mov
push
lods
inc
inc
sub
mov
xchg
inc
je
adc
mov
cmp
dec
outs
out
and
xchg
xor
pop
sub
addr16
dec
lods
leave
into
sub
mov
and
dec
adc
push
xchg
das
push
hlt
jo
jl
jge
mov
mov
std
push
(bad)
pusha
pop
pushf
mul
jnp
stos
jne
push
retf
fs
rep
jo
xor
fisub
test
stos
sbb
mov
shl
mov
mov
xchg
popa
xchg
xchg
sub
mov
jns
sbb
jns
loop
xor
ja
rol
js
repnz
dec
retf
int3
dec
call
xor
xchg
xchg
stos
adc
jmp
out
loope
inc
mov
(bad)
les
into
retf
call
lods
(bad)
cmps
add
pop
mov
add
push
xchg
xor
mov
mov
movs
cs
adc
sbb
inc
push
push
loopne
imul
pushf
addr16
rol
loopne
imul
sub
inc
or
mov
adc
inc
mov
int
jg
lgs
retf
ins
dec
fsubr
mov
xchg
pop
out
sub
inc
aaa
stos
outs
push
neg
out
(bad)
and
add
test
mov
stc
add
inc
jne
in
mov
adc
sbb
aad
(bad)
gs
popa
mov
stos
lahf
pop
and
out
push
sbb
push
test
sar
pop
mov
and
or
aad
mov
mov
outs
xchg
rcl
inc
inc
mov
push
cmp
retf
daa
sub
xor
jg
jl
daa
mov
mov
iret
mov
ins
mov
sub
das
outs
repnz
dec
ret
cwde
addr16
mov
jne
jp
popf
loop
mov
repz
mov
fstp
cdq
and
or
mov
xchg
fs
(bad)
stos
push
adc
mov
push
std
inc
lods
movs
aas
mov
adc
and
ins
dec
jae
mov
lahf
sub
lahf
das
nop
cmp
or
addr16
mov
pop
or
add
add
sbb
jmp
jae
mov
xor
mov
test
adc
in
pusha
fneni(8087
and
jo
xchg
sub
sub
fs
pop
out
jmp
popa
iret
push
ja
push
xor
dec
dec
and
cmc
retf
cdq
mov
cli
add
outs
lahf
shl
(bad)
jg
test
test
out
imul
jno
cli
push
bound
enter
cmp
ja
mov
ins
arpl
scas
dec
jmp
jo
sar
mov
cdq
out
or
add
enter
fwait
jl
cmp
sub
and
mov
xchg
sbb
jnp
or
sbb
aaa
mov
cld
cmp
out
mov
mov
add
jmp
ud2
shl
mov
std
test
bound
mov
scas
mov
cmps
inc
shl
adc
enter
inc
xchg
ret
repz
and
pop
and
adc
sti
cmps
push
ds
mov
jmp
jns
pop
jno
sbb
sub
jne
in
xchg
lea
sahf
outs
add
(bad)
jp
mov
sti
clc
sbb
add
pop
sub
inc
les
inc
shl
jge
mov
sub
pop
mov
mov
out
push
jmp
pop
cmp
bound
mov
sbb
pusha
push
mov
jl
pop
pop
sub
push
stos
sub
mov
dec
out
fs
sbb
sbb
mov
or
and
dec
cmps
pusha
cdq
adc
daa
adc
mov
into
inc
cmc
add
stos
(bad)
xchg
inc
cmps
xor
mov
fcom
or
cmp
nop
dec
loop
bound
add
pop
(bad)
std
inc
inc
rcl
xor
cmp
xchg
xchg
mov
push
mov
clc
pop
xor
jno
add
imul
sbb
xlat
fidiv
add
aaa
sbb
dec
adc
jns
cmp
call
mov
pop
es
pop
cs
cmp
sbb
inc
stos
cld
and
cmp
scas
pushf
ret
stos
pushf
push
jns
adc
push
inc
adc
pop
cmp
fnstsw
stc
and
out
xor
imul
fdivr
cmps
push
hlt
mov
adc
outs
xor
mov
mov
fsubp
dec
xchg
lods
arpl
add
sbb
shr
jae
mov
shl
(bad)
aad
imul
jle
jmp
dec
std
nop
aad
mov
dec
sti
pop
repnz
je
dec
or
jb
into
adc
loop
test
mov
cmps
mov
ret
jbe
jb
cmp
jg
ins
jg
jmp
fisubr
jl
xor
mov
mov
test
(bad)
jmp
add
push
adc
out
nop
lock
xor
clc
cld
mov
lea
xchg
push
je
adc
jbe
test
hlt
imul
pop
inc
ret
jno
inc
outs
arpl
dec
adc
push
sub
ins
addr16
outs
cmp
jg
jae
addr16
add
(bad)
mov
mov
out
jecxz
int
and
(bad)
leave
shl
(bad)
sbb
and
mov
xchg
div
(bad)
cmovge
shr
inc
jp
ins
and
(bad)
ffreep
ret
add
xchg
cmp
add
gs
js
push
mov
or
adc
mov
scas
push
sub
sar
pop
mov
jmp
cmps
out
test
add
jne
xlat
mov
inc
fwait
jg
sti
les
aaa
xchg
call
sub
sahf
nop
mov
sbb
rcl
movs
lods
aaa
in
sbb
push
mov
mov
sbb
bound
dec
sub
outs
in
dec
adc
pop
int
add
cmps
out
bound
movs
lahf
(bad)
mov
retf
int
cmps
inc
pop
push
mov
aad
adc
push
int3
push
add
dec
fist
je
mov
sub
and
mov
aaa
inc
int
lds
rol
sbb
cmp
adc
ins
data16
ja
dec
sbb
scas
daa
imul
ror
pop
ret
add
repz
sbb
dec
inc
mov
cs
mov
mov
xchg
out
jmp
inc
std
nop
adc
xor
sbb
jo
addr16
mov
fcomip
rcl
popf
sub
cmp
sub
pop
or
iret
aas
ins
push
retf
pop
push
cmp
aas
inc
xchg
push
(bad)
out
push
sar
inc
pusha
stc
sbb
inc
mov
movs
lea
mov
stos
mov
shl
xchg
jae
arpl
push
inc
xchg
hlt
mov
daa
push
mov
cli
push
fstp
xchg
cmps
pop
psrad
mov
xor
mov
jbe
mov
adc
xlat
retf
mov
hlt
rol
mov
sub
jns
es
scas
nop
push
push
or
cmp
daa
xchg
out
push
std
xchg
jp
cli
xchg
mov
and
out
mov
fsub
pop
mov
(bad)
mov
imul
retf
arpl
call
mov
adc
sbb
sbb
inc
and
add
popf
inc
movs
push
push
sub
inc
clc
add
shr
push
daa
push
(bad)
fst
xchg
fist
inc
sub
in
sub
int
or
aam
add
jno
fnstenv
dec
mov
jne
push
les
loopne
adc
ins
shl
xchg
sbb
ja
add
xchg
mov
dec
test
loopne
call
repz
test
mov
lock
dec
ins
xor
sub
stos
jo
or
mov
ficomp
xchg
lods
xor
mov
push
ret
push
adc
and
pop
inc
aad
sbb
ror
lahf
xchg
adc
jmp
in
xor
retf
int
inc
adc
mov
add
mov
jmp
jge
jno
push
test
cmps
jb
add
or
inc
add
fnstenv
mov
cmps
or
dec
daa
leave
mov
outs
and
mov
in
sbb
mov
dec
imul
inc
enter
xor
ret
push
push
jnp
dec
sub
pop
shr
imul
sbb
(bad)
shr
mov
jnp
call
and
dec
es
pop
jp
sar
mov
sub
adc
repz
gs
or
mov
add
add
(bad)
fnstsw
pop
adc
sbb
fs
mov
cdq
cld
jl
cmp
add
cmc
leave
sbb
xor
scas
pop
add
push
hlt
sub
xor
fsubr
cmp
lods
rol
jns
repz
or
adc
fsubrp
jno
cmc
inc
jnp
loope
sub
dec
or
gs
clc
mov
cmps
sub
jne
mov
fwait
and
(bad)
into
test
icebp
sbb
inc
ret
push
es
jmp
sub
sub
aaa
jns
mov
push
add
repnz
test
jl
mov
inc
fwait
xchg
cli
push
pop
pop
jg
cmp
push
jnp
and
stos
mov
es
cmp
call
or
js
push
mov
ds
pop
out
gs
mov
imul
xchg
sahf
jmp
mov
jmp
adc
call
cmp
add
inc
add
dec
mov
(bad)
mov
xchg
or
cwde
(bad)
iret
addr16
loope
push
dec
stos
ds
jb
mov
xchg
mov
xor
jmp
push
pusha
popf
aam
and
sub
adc
outs
rol
mov
xchg
sbb
add
lea
cmp
add
nop
fcomp
xchg
fnstsw
cli
inc
mov
es
je
cmp
cmp
hlt
sbb
inc
mov
jnp
or
in
add
cmps
push
les
mov
pop
sub
retf
xchg
unpcklps
mov
ret
adc
std
and
ja
cld
inc
daa
cli
cli
ret
addr16
mov
or
imul
fistp
fwait
jae
cld
lods
mov
(bad)
adc
xchg
inc
lock
add
mov
xor
xor
test
addr16
scas
pusha
push
jge
dec
leave
scas
inc
and
(bad)
xchg
movs
pop
cmps
fistp
icebp
enter
xor
add
and
shr
inc
mov
dec
out
sbb
dec
sbb
idiv
add
jl
cmp
pop
cmp
jo
mov
jmp
and
enter
pop
stos
sbb
jbe
dec
pop
test
mov
test
nop
hlt
test
inc
lds
pop
xchg
jno
push
sub
xchg
sti
call
clc
(bad)
fwait
popa
aad
mov
mov
in
jle
cmp
ror
in
mov
pop
mov
mov
add
in
cmp
mov
(bad)
rol
inc
cmp
mov
cmc
adc
sbb
inc
xor
daa
add
sti
movs
cmps
mov
or
xor
(bad)
shr
xchg
cwde
ror
jae
test
dec
daa
shr
adc
test
dec
cld
rcr
mov
mov
pusha
jmp
arpl
mov
scas
dec
dec
and
cmp
jbe
mov
xchg
out
ret
push
xor
xchg
mov
in
aaa
xor
jmp
loope
push
fsub
hlt
sbb
out
jecxz
pop
pop
dec
jge
sub
push
dec
std
cmp
adc
stos
(bad)
cld
icebp
pusha
in
lahf
and
or
push
and
or
adc
sar
aaa
je
mov
adc
stos
mov
and
inc
or
adc
xor
mov
pop
call
xchg
cdq
xor
inc
mov
fild
(bad)
call
pop
jp
jbe
std
sbb
inc
out
cmp
das
push
mov
les
mov
push
es
outs
(bad)
mov
aas
inc
jg
ins
adc
mov
inc
push
pop
cmps
cmp
push
inc
adc
jo
jns
cwde
dec
xchg
or
xchg
fimul
retf
push
add
add
out
aam
lods
shl
ja
das
sahf
loop
adc
mov
dec
addr16
inc
and
push
ins
mov
inc
jbe
iret
jg
xchg
test
add
mov
fstp
imul
inc
xor
sbb
mov
fld
fmul
mov
sbb
xor
mov
jmp
inc
sar
in
jge
jmp
ja
out
xlat
dec
gs
les
ins
jl
mov
call
push
cmp
mov
mov
push
loope
dec
inc
dec
aas
ins
push
scas
ins
sbb
push
jge
hlt
mov
outs
adc
adc
push
mov
mov
stc
data16
aam
retf
loop
aaa
(bad)
jne
aam
mov
(bad)
out
loopne
rcl
ret
sbb
test
mov
popa
test
jg
inc
rcl
sub
lods
push
leave
out
push
out
mov
call
mov
cmp
mov
sub
dec
jbe
add
imul
push
cmc
jne
and
stc
mov
mov
add
out
adc
ror
stos
popa
addr16
repnz
cmp
xchg
mov
fstp
dec
das
stos
jmp
sub
jnp
cdq
mov
inc
loop
cmp
das
(bad)
mov
push
inc
imul
loop
in
cld
aaa
add
pushf
xor
xchg
pop
aas
retf
(bad)
fdiv
mov
retf
or
into
add
push
in
mov
mov
cs
les
mov
test
jmp
cli
or
inc
adc
adc
mov
push
cmp
out
out
mov
mov
push
icebp
mov
daa
fild
cmp
fistp
aad
outs
pop
push
xor
ins
and
jns
(bad)
jle
enter
nop
movs
xchg
xchg
push
arpl
out
imul
fmul
dec
and
sub
out
xchg
inc
scas
push
adc
push
shr
mul
repz
repnz
jmp
and
inc
popf
mov
ret
je
dec
cmp
push
cwde
mov
mov
pop
fsub
push
pop
cmp
div
fs
enter
xor
icebp
js
popf
pop
sub
sbb
or
pop
sti
adc
dec
push
aas
mov
mov
pop
push
out
push
scas
jbe
jmp
mov
lea
arpl
cmp
sbb
mov
repnz
xchg
jne
mov
xlat
dec
sti
push
(bad)
jo
mov
xchg
mov
push
fst
fld
out
ja
aam
ins
arpl
test
xor
fisubr
lahf
mov
ins
xor
cmp
outs
xor
cmc
stos
into
nop
pop
mov
adc
add
mov
aad
sub
pop
mov
leave
fisubr
mov
in
xchg
sub
xor
in
xchg
or
ffree
or
ret
xchg
dec
and
mov
mov
iret
or
fisub
jl
or
mov
(bad)
jl
push
or
lock
push
pop
pop
sti
cmp
sub
rcl
outs
loop
cmp
lea
imul
mov
dec
inc
pop
loop
call
loope
push
hlt
daa
shr
scas
mov
or
in
push
test
mov
sbb
push
div
jmp
cmps
ins
fist
push
lds
clc
ficom
and
xchg
adc
in
(bad)
cmp
mov
jno
push
retf
jl
loope
fdivp
(bad)
addr16
(bad)
sar
inc
int3
pop
xchg
dec
jle
add
mov
icebp
cs
dec
cdq
loopne
jo
push
push
sub
cmp
and
adc
jmp
retf
pop
fsub
test
movs
imul
jl
adc
lahf
mov
fsub
mov
mov
icebp
mov
mov
push
jg
add
mov
popa
xchg
data16
(bad)
pop
mov
or
nop
in
push
push
(bad)
stc
sahf
adc
push
xchg
jo
bound
dec
cli
sbb
pop
stos
cmp
xor
jmp
rol
js
xor
mov
inc
xchg
sub
test
aad
push
in
sbb
xchg
gs
int3
test
pop
sub
sub
je
sub
aad
or
lods
fcom
stos
in
push
cwde
mov
push
jecxz
in
mov
push
icebp
dec
repz
push
stos
sbb
addr16
jle
mov
cmp
sbb
xor
dec
jne
mov
popf
rcl
jl
add
push
hlt
fstp
xor
js
dec
retf
and
mov
pop
fmul
inc
fimul
push
xchg
ret
adc
mov
shl
cmps
push
leave
(bad)
or
arpl
mov
xor
inc
inc
(bad)
stos
(bad)
das
inc
pop
test
sbb
mov
lock
int3
lea
lock
ror
repz
in
xor
and
cmp
jbe
repz
xor
push
pop
push
fisub
mov
or
push
jecxz
sub
ja
mov
add
ret
int
ins
adc
test
mov
fucom
movs
add
pop
fucom
or
rol
push
inc
test
imul
or
and
loopne
fimul
add
and
mov
loope
out
icebp
inc
adc
push
push
shl
push
xor
cmp
out
adc
stos
xchg
shl
adc
sub
nop
test
inc
test
jl
imul
inc
xchg
pop
mov
mov
pushf
jmp
sbb
push
imul
(bad)
imul
sub
cmc
sbb
ds
stos
or
aad
jb
into
cmp
pop
jmp
adc
fstp
mov
jl
pop
or
adc
dec
add
outs
sbb
stos
or
aaa
adc
rcr
or
retf
inc
dec
movs
xor
jo
push
inc
push
fild
adc
icebp
shl
and
inc
fmulp
xor
retf
sub
mov
pop
call
shr
push
fdiv
or
or
pop
xchg
scas
adc
add
push
loope
dec
cli
push
xor
jno
sub
sbb
test
adc
dec
mov
(bad)
in
dec
jo
jp
ret
test
pop
call
xor
test
xor
(bad)
pop
test
into
adc
sar
mov
xchg
jp
inc
push
stos
cdq
lods
xor
fstp
xchg
jp
xor
mov
in
(bad)
inc
jl
xchg
mov
cmp
mov
call
or
sbb
je
inc
push
mov
mov
iret
adc
lods
sbb
jg
loope
dec
data16
sub
out
out
int3
jno
and
and
data16
xchg
sbb
and
scas
in
adc
adc
jo
les
aad
pusha
sub
jnp
mov
dec
fldcw
fdiv
enter
into
sub
fwait
fs
icebp
pop
and
loopne
js
ds
jb
mov
rsqrtps
cmc
gs
cmp
test
mov
mov
pop
sub
repnz
mov
inc
pusha
movs
adc
dec
lods
sub
fistp
cwde
clc
xchg
(bad)
in
cmp
cmp
jg
test
mov
pusha
retf
add
call
and
mov
pop
mov
(bad)
(bad)
pop
fdivr
dec
pop
jmp
add
mov
or
or
dec
rcl
xchg
in
inc
xchg
xchg
adc
xchg
je
cmp
lds
mov
xchg
das
mov
ficom
loop
jg
sub
fsub
add
mov
fwait
pop
outs
jge
into
dec
adc
sbb
fisubr
mov
shr
sbb
dec
cmps
xor
cmp
lahf
lods
cld
ret
cmp
cmc
retf
mov
and
jg
cmp
sub
(bad)
push
stos
add
leave
mov
add
sbb
dec
and
inc
push
scas
pop
gs
sahf
push
cld
push
mov
adc
jbe
mov
leave
and
sbb
pusha
dec
popf
lock
mov
test
test
hlt
call
in
cmp
pusha
cmp
gs
jb
inc
lods
add
push
test
dec
daa
shl
xor
adc
ins
popf
sub
jl
jge
test
dec
retf
ss
in
es
inc
inc
hlt
fwait
dec
or
sbb
test
pavgb
clc
jo
xor
imul
lods
push
stc
xchg
inc
fild
pop
pop
ror
cs
in
mov
sub
aaa
ror
jmp
jno
repnz
pop
mov
add
in
or
jb
xor
and
adc
mov
sbb
jmp
shl
lds
cmp
xlat
mov
xlat
ret
stos
fadd
scas
out
out
and
cmc
gs
cmp
jg
mov
mov
call
aam
int
jne
jecxz
adc
lods
add
pop
aam
dec
push
test
and
jecxz
and
mov
push
pop
pop
outs
push
sub
std
xchg
dec
in
lds
push
ds
dec
jno
test
les
mov
sar
bnd
retf
push
adc
fcmovb
xor
test
inc
(bad)
sub
imul
(bad)
cld
shr
shl
xor
call
mov
arpl
scas
pop
sbb
lock
jae
mov
jmp
cmp
outs
and
aam
push
aad
adc
call
xchg
mov
popf
mov
(bad)
add
jle
lea
fiadd
out
mov
sar
push
ficom
sbb
cmp
pop
and
inc
cmps
cmp
test
xlat
mov
movs
xor
nop
jb
xchg
jo
inc
jae
push
jge
pop
rol
cld
and
frstor
(bad)
pop
mov
pusha
and
shr
jle
mov
call
mov
mov
sub
fs
(bad)
adc
xor
hlt
push
fldl2e
or
jns
and
icebp
xchg
sbb
xchg
in
in
push
mov
pop
inc
adc
mov
add
push
hlt
cmp
or
xor
jecxz
aam
mov
mov
movs
sbb
ror
fnstcw
lahf
push
popf
add
ss
aas
enter
(bad)
not
in
sbb
dec
jno
mov
or
mov
cli
and
fldcw
mov
cmp
in
call
and
dec
xor
fst
bound
popa
neg
adc
fisttp
xchg
pop
(bad)
out
and
mov
out
mov
push
jno
adc
mov
imul
into
shl
and
push
aas
pop
sub
imul
fild
xor
xor
fmul
out
out
xchg
fwait
movs
inc
adc
xchg
clc
fadd
mov
inc
sar
sti
cli
jns
push
jmp
(bad)
jl
rcr
or
nop
ins
pop
pop
inc
jns
aad
sub
ins
fld
pop
sub
pop
sbb
sub
add
icebp
or
jae
mov
cmp
fsubr
cmp
sbb
test
xchg
cmp
sti
rcl
(bad)
inc
push
repnz
inc
imul
pop
cmp
inc
mov
leave
add
fstp
addr16
(bad)
sbb
xor
mov
je
fbld
jo
rcl
sub
push
lea
sub
sub
fcomi
cdq
sub
xchg
mov
jno
lock
inc
gs
sbb
pop
push
fist
push
les
hlt
sbb
mov
mov
mov
push
(bad)
or
jmp
fisubr
sbb
push
cld
in
lea
inc
aaa
repz
or
in
mov
retf
mov
sbb
mov
daa
pusha
dec
sbb
call
lds
in
xor
add
rcr
mov
jbe
push
std
fnstcw
cmp
jmp
adc
mov
outs
(bad)
xchg
es
(bad)
pop
in
lods
jnp
cmp
mov
and
jle
in
and
lahf
mov
mov
call
pop
js
mov
mov
out
int
test
mov
xor
sbb
jnp
leave
xchg
outs
das
fmulp
mov
jne
fsub
xchg
test
cmp
fisttp
movs
and
adc
xchg
mov
push
call
or
and
mov
push
sub
inc
push
pop
add
repnz
mov
rcl
mov
aas
cwde
fwait
push
sbb
mov
test
(bad)
and
pop
or
test
fdiv
jg
fldenv
enter
pop
jg
cli
iret
cmp
push
add
dec
loopne
xchg
ja
jp
mov
aaa
jbe
adc
fstp
bound
jle
mov
inc
shl
lahf
in
les
out
das
mov
loopne
jae
adc
xchg
lods
or
lock
sbb
sbb
jle
leave
mov
sub
mov
ja
aad
add
outs
movs
mov
sbb
icebp
add
push
out
in
cmp
je
(bad)
fldcw
int3
stos
aam
and
add
jne
retf
fistp
out
and
pop
ss
xor
inc
test
(bad)
or
sbb
add
inc
in
fisubr
pop
push
adc
in
and
outs
jae
movs
scas
into
ficom
lahf
xlat
add
ret
pop
and
cmc
stos
imul
sbb
jecxz
jbe
movs
movs
pop
(bad)
pop
inc
ins
cmps
mov
xchg
push
cli
pop
enter
repnz
jb
jp
fs
xor
rcr
mov
mov
sub
pop
or
xchg
push
and
pop
(bad)
test
and
push
cmp
lds
popa
fidivr
call
sbb
mov
adc
push
in
mov
mov
leave
inc
cmps
imul
jge
mov
pop
aad
add
in
pop
addr16
sub
xor
loope
(bad)
xchg
fcom
in
sub
sub
aam
sbb
xlat
jmp
push
cmp
mov
inc
retf
mov
ret
add
adc
adc
push
inc
pop
mov
idiv
lods
addr16
jecxz
cwde
ds
pop
sbb
into
sbb
push
movs
xchg
bound
push
push
dec
inc
mov
fdiv
sbb
cmp
inc
add
add
ret
push
stos
lods
ss
mov
dec
cmc
shl
mov
out
into
mov
aas
adc
xor
pop
ja
out
and
push
iret
xlat
add
loope
sar
mov
sub
mov
test
adc
mov
shl
test
fs
sbb
mov
loop
cmp
mov
xchg
inc
mov
sahf
add
int
cwde
int3
or
inc
push
repz
pop
mov
pop
cmp
icebp
les
stos
imul
add
jmp
xor
jp
daa
mov
lock
imul
xchg
pop
lock
pop
repz
add
mov
cmp
add
xchg
dec
into
scas
jnp
and
cld
arpl
cdq
repz
outs
addr16
xor
sbb
paddd
add
cdq
dec
fsub
pop
shr
xor
jge
(bad)
adc
fdiv
dec
push
sbb
bnd
mov
aam
cmp
inc
in
mov
(bad)
aad
pop
pop
pop
adc
pop
adc
bound
outs
fcomp
or
pop
mov
push
sub
sbb
fiadd
cld
cmps
jmp
xor
xchg
jge
scas
push
aaa
add
cmps
imul
sbb
scas
push
pop
mov
mov
inc
out
leave
rcr
jo
or
adc
mov
xlat
(bad)
out
push
dec
adc
jns
movs
mov
shl
data16
push
mov
and
outs
mov
div
cwde
and
repz
(bad)
push
ss
dec
jns
pop
mov
pop
xor
add
and
(bad)
or
jge
pop
jb
push
adc
mov
mov
pop
std
sbb
and
adc
xchg
repz
push
es
dec
xchg
aam
push
and
out
adc
lods
sub
fld
add
push
cmps
adc
lahf
test
inc
ds
movs
adc
stc
jp
ds
aaa
or
push
or
pop
(bad)
popa
cld
mov
jmp
(bad)
and
cs
mov
call
dec
int
pusha
adc
pop
sbb
adc
scas
call
xor
pop
dec
jg
cmp
pop
dec
(bad)
mov
add
fwait
fwait
pop
ret
jle
xchg
sub
and
lds
out
jo
push
inc
(bad)
cli
add
fwait
lds
inc
(bad)
std
inc
xor
xchg
sub
mov
push
adc
test
rol
leave
mov
pop
fs
rcr
xchg
imul
stos
inc
push
mov
test
mov
fnstenv
scas
lods
sbb
mov
pslld
je
and
ds
mov
cmp
dec
jno
ret
enter
in
test
ins
xchg
shr
mov
loop
jmp
mov
mov
and
adc
pop
mov
jg
lahf
inc
data16
dec
stc
or
mov
inc
mov
and
rcl
ja
je
push
add
xchg
jmp
jp
scas
outs
lods
jp
xlat
shl
dec
(bad)
jmp
xor
add
fwait
sbb
push
cmp
fcom
lods
dec
enter
mov
imul
or
xor
adc
or
hlt
sbb
mov
(bad)
movs
nop
inc
cs
mov
or
dec
cmps
sbb
pop
shl
mov
mov
loope
stc
lods
into
adc
mov
add
cmp
cmp
and
jno
dec
test
test
mov
xchg
mov
xchg
dec
add
je
test
fbld
ror
pushf
mov
push
sbb
mov
dec
repz
jns
das
or
add
or
xlat
or
loope
mul
sbb
mov
mov
push
adc
loope
xor
sbb
fucomip
fwait
sti
mov
jp
mov
pop
jp
jns
jne
xchg
mov
fisttp
jns
xchg
mov
adc
mov
lods
test
pop
ja
xchg
test
mov
mov
mov
pop
push
stc
rol
dec
push
or
imul
idiv
pop
cmp
cmp
ss
je
pop
rol
mov
mov
aad
dec
call
pop
inc
mov
clc
test
jnp
push
aaa
lods
inc
arpl
mov
or
outs
push
mov
mov
mov
pop
push
out
iret
out
xor
mov
push
sahf
test
je
loopne
sbb
ja
mov
addr16
xchg
sbb
sub
xor
jp
or
mov
arpl
or
cmps
mov
mov
adc
push
sahf
mov
bnd
setp
mov
pop
mov
mov
lea
mov
jp
aas
cmp
ins
repz
sub
call
test
jno
inc
ins
cdq
push
mov
sub
loope
cld
(bad)
xchg
hlt
(bad)
pop
outs
fstp
sbb
maxps
pushf
ins
out
and
stc
xor
inc
dec
and
js
es
pop
xchg
mov
dec
jbe
lods
mov
lahf
or
in
and
cmps
mov
or
pop
cmp
mov
push
test
jne
jno
push
mov
push
push
adc
movs
fadd
cli
dec
dec
inc
fdiv
arpl
aam
jb
xchg
cmp
loopne
mov
xchg
shl
dec
mov
shl
pop
mov
dec
mov
inc
cmc
pop
test
push
cmp
call
(bad)
stc
ret
pop
sar
xchg
cmp
add
sub
jecxz
stc
xor
jmp
jp
cmp
icebp
(bad)
mov
jne
jno
ror
mov
icebp
es
add
mov
in
adc
sar
sub
mov
setge
cld
in
jle
stos
jae
mov
ffree
dec
jb
or
fcmovbe
stos
dec
mov
shl
adc
retf
sbb
mov
jmp
aaa
jmp
clc
leave
leave
test
not
xor
inc
adc
and
dec
dec
adc
test
dec
inc
retf
pop
and
or
rcr
iret
push
inc
dec
xchg
fidivr
mov
test
scas
jge
jmp
shl
cwde
icebp
dec
jl
inc
test
in
mov
jl
retf
scas
cdq
xchg
cdq
outs
ret
popf
das
test
js
lea
push
cmp
loop
hlt
jl
inc
inc
in
dec
add
je
rcr
ret
das
jmp
pushf
and
xor
sbb
xchg
ins
and
cld
mov
scas
xchg
cmp
or
pop
sbb
cmp
ds
push
xor
fld
mov
inc
out
fldenv
jno
ins
sbb
mov
push
(bad)
lods
sub
sbb
(bad)
(bad)
fdiv
call
mov
(bad)
fbld
ret
sbb
ds
fdecstp
retf
cmp
mov
add
and
mov
in
sbb
call
push
sbb
and
xor
test
fxch
and
and
xchg
jmp
repnz
sti
xchg
shr
or
mov
setne
pop
leave
pop
inc
add
xor
mov
mov
mov
mov
jl
ins
dec
push
cmp
mov
(bad)
(bad)
into
and
jmp
mov
enter
out
sub
adc
or
shl
leave
mov
mov
xor
mov
push
fild
add
cmp
xor
out
retf
push
ins
shr
add
cli
and
and
mov
clc
popa
repz
xchg
cs
or
inc
sub
add
(bad)
xchg
ret
inc
sbb
pop
jmp
ja
fldenv
jmp
mov
das
hlt
imul
cmc
jb
pop
cs
push
stc
add
ins
fs
cmp
sbb
and
or
add
outs
mov
mov
dec
xor
add
push
adc
dec
sub
ins
and
jmp
mov
ins
popa
xor
push
xlat
sub
out
mov
xor
xor
or
les
test
ror
sbb
mov
hlt
push
xchg
stos
inc
jnp
cmp
(bad)
mov
or
mov
arpl
cmp
push
dec
xchg
xor
icebp
dec
les
adc
es
mov
pusha
pop
mov
jns
add
mov
(bad)
jae
cs
jmp
out
or
inc
out
mov
cld
inc
and
jne
(bad)
fnstenv
stos
cmp
mov
je
mov
mov
popf
shr
mov
cli
ds
outs
aaa
cmc
loopne
sub
jge
mov
pop
push
mov
sub
mov
xchg
dec
in
xor
test
dec
push
fsub
jecxz
cmp
fwait
mov
and
neg
(bad)
(bad)
nop
and
in
jge
xlat
xchg
int3
mov
stc
js
push
test
cmp
push
mov
push
jb
sbb
mov
pusha
sbb
lahf
xchg
push
ror
nop
push
add
ss
fisttp
pop
icebp
adc
aaa
adc
mov
sti
aad
mov
dec
repnz
push
and
mov
cdq
out
gs
mov
cli
dec
jecxz
clc
add
inc
add
push
push
imul
and
push
dec
jge
mov
xor
mov
mov
sub
and
nop
shr
adc
mov
cwde
jbe
pop
sbb
into
add
test
inc
pop
rcr
push
sbb
rol
xor
dec
sar
sub
mov
cmp
js
imul
stos
fdivr
into
ins
and
inc
nop
jg
inc
sbb
(bad)
call
sub
mov
cld
std
pop
mov
push
jp
leave
add
loopne
hlt
pop
xchg
jmp
mov
and
ror
xor
adc
frstor
xchg
loop
xlat
add
neg
fs
js
lahf
cmc
jl
xchg
pop
out
sbb
mov
jg
jl
retf
mov
out
ret
icebp
mov
cmp
shr
std
test
sbb
sbb
and
mov
es
mov
xchg
cld
sub
rcr
mov
mov
add
xchg
popf
aaa
daa
push
mov
add
lds
mov
aam
xlat
js
sbb
sub
ds
not
arpl
jp
xchg
adc
jge
in
mov
iret
or
mov
sub
in
add
test
enter
mov
or
(bad)
sub
sahf
jl
rol
test
movs
push
sahf
push
imul
test
loopne
jp
sbb
push
popa
stos
cmp
lds
dec
and
or
imul
dec
cs
dec
rol
stos
dec
fidiv
jg
cmp
and
jnp
inc
test
mov
dec
and
push
push
push
adc
add
xor
jnp
mov
int3
sbb
lods
imul
lods
or
fimul
mov
cdq
js
cmps
cmp
inc
cli
push
add
lds
scas
mov
sahf
mov
xchg
es
outs
and
pop
mov
popfw
sbb
push
test
adc
arpl
lock
std
sbb
repz
xchg
inc
cmp
leave
aas
mov
(bad)
in
out
push
push
pop
dec
and
jns
repz
fwait
lods
iret
push
shl
test
inc
push
mov
loope
ret
ss
mov
ja
out
in
dec
loope
cmc
mov
cmp
gs
mov
add
fldenv
push
sbb
or
in
mov
daa
imul
xchg
xor
pop
sub
adc
test
xchg
push
outs
or
sub
mov
iret
mov
lods
je
dec
add
jmp
xchg
sbb
ficomp
(bad)
sahf
adc
cmps
retf
xchg
int
and
sub
add
(bad)
ins
push
test
jae
jo
xchg
in
dec
and
adc
fnstsw
xor
mov
icebp
in
cld
xchg
les
push
adc
push
fst
ret
imul
cmps
jl
inc
rcr
ret
ja
inc
daa
pop
ins
push
cmp
xor
pop
pop
jp
cmp
imul
jmp
mov
and
inc
scas
pop
leave
fild
je
or
rep
mov
js
cdq
outs
xchg
ins
push
and
inc
adc
retf
xor
sub
popf
cmp
imul
cwde
or
mov
pop
sub
je
mov
cmp
mov
or
in
add
imul
push
int
xor
jle
shl
stos
in
push
clc
cli
jae
sbb
movs
ret
inc
cmps
ret
(bad)
inc
and
ficom
sub
adc
mov
add
xchg
jge
aam
pop
cs
or
push
ficom
mov
sub
jmp
adc
mov
jmp
lahf
cmc
adc
mov
mov
dec
xlat
push
mov
(bad)
mov
fbstp
out
jmp
sbb
mov
cld
imul
scas
into
pop
(bad)
jp
adc
imul
adc
sbb
sub
adc
pop
fdiv
icebp
pusha
and
in
and
sub
shr
idiv
arpl
repnz
adc
add
or
test
jnp
repnz
clc
xor
sub
jle
pop
popf
iret
out
pop
cmps
pop
jle
fst
mov
xchg
mov
xchg
std
xor
mov
cmp
ds
mov
mov
pop
cmps
cmp
add
lods
jno
lods
imul
test
xlat
mov
test
cmp
inc
cmp
sub
sub
push
xchg
lea
iret
and
ja
out
movs
cdq
mov
push
ret
popf
ins
sbb
jae
out
jno
adc
loopne
hlt
adc
popf
cld
fdiv
arpl
pop
jns
pushf
rdmsr
or
lahf
sbb
mov
and
sbb
nop
and
sbb
mov
inc
(bad)
(bad)
test
std
pop
cld
cmp
stos
loop
retf
int3
ins
pop
in
or
ins
pop
pusha
adc
enter
neg
fucom
lock
int
mov
daa
out
xchg
xchg
xchg
(bad)
scas
mov
push
sahf
dec
mov
loopne
mov
hlt
repz
loop
pop
in
add
mov
shl
in
sbb
add
cmc
inc
xchg
lds
push
je
rcl
mov
mov
jg
test
mov
xchg
hlt
mov
push
dec
jae
sub
bound
or
inc
lods
xchg
jmp
in
ficom
or
push
inc
jecxz
or
fistp
push
fsubr
shl
push
data16
je
or
adc
popf
loop
inc
repz
inc
mov
in
dec
jge
cmp
ret
mov
pushf
pop
cmp
mov
ret
push
scas
adc
inc
add
and
add
jno
xor
adc
mov
cmp
push
and
sbb
jo
inc
pop
push
dec
pop
dec
cmp
fimul
mov
jge
push
mov
add
dec
loope
ret
fiadd
mov
jmp
adc
and
mov
xchg
ror
push
fidiv
mov
push
pusha
add
pop
out
in
xchg
imul
movs
inc
or
cmp
pop
xor
loopne
jno
test
mov
pop
sub
inc
sub
sahf
push
or
dec
loopne
fsub
add
push
imul
dec
xchg
lds
push
push
xor
mov
nop
into
ds
pushf
adc
outs
loop
jae
or
or
ss
cs
or
add
pop
lds
dec
push
push
adc
jg
add
das
lods
addr16
dec
and
or
inc
mov
mov
push
fs
lods
popa
rol
(bad)
add
mov
and
cmp
jne
es
ror
(bad)
jecxz
inc
dec
(bad)
or
or
gs
cmps
bound
jmp
or
in
loopne
xchg
clc
js
fwait
stos
jecxz
sbb
int3
jno
ror
adc
clc
pop
add
lahf
imul
arpl
js
scas
mov
adc
fwait
retf
cmp
scas
imul
(bad)
mov
jb
inc
dec
aas
xchg
ret
imul
mov
cmps
loopne
arpl
mov
push
cmc
jmp
loop
das
pop
je
push
bound
in
cmp
or
mov
rol
(bad)
mov
data16
movs
fistp
cmps
ret
adc
dec
push
cmp
push
outs
adc
outs
adc
cmp
jg
dec
mov
inc
xchg
shl
fwait
mov
jns
loope
pop
push
int3
mov
and
clc
inc
sbb
mov
fcomip
mov
ss
sti
ins
cli
fmul
repz
div
push
mov
push
mov
or
rcr
fdiv
aam
pop
std
cdq
aas
out
sahf
push
(bad)
popa
mov
sar
pop
pushf
jmp
fucomp
adc
(bad)
jo
imul
add
mov
push
ret
jmp
add
push
fdiv
cdq
lahf
dec
(bad)
call
pusha
daa
jb
test
xchg
out
aaa
movs
sbb
xor
xchg
jno
das
dec
add
movs
xchg
jnp
jge
std
loop
xchg
popf
sbb
cmps
mov
mov
ins
mov
xor
les
loopne
mov
xor
and
adc
mov
mov
loopne
jl
mov
push
mov
mov
push
and
cmp
mov
out
inc
push
mov
ins
(bad)
jl
(bad)
sub
ret
mov
cmp
mov
gs
inc
rcr
xchg
xchg
mov
sbb
xchg
or
(bad)
xor
jo
int3
sbb
cmps
xor
repnz
sub
outs
movs
out
(bad)
mov
repnz
mov
loopne
and
fstp
jne
out
sbb
dec
dec
bsf
into
mov
iret
inc
(bad)
pop
cdq
xor
jl
and
push
fwait
shl
push
call
cld
jg
cmp
int3
cmp
sub
loopne
jg
pop
lahf
mov
sbb
jno
(bad)
bswap
addr16
pop
mov
shl
or
ja
or
inc
mov
arpl
das
inc
std
or
ds
jmp
mov
cld
pop
and
dec
mov
xchg
int
pop
push
jb
or
cwde
in
sub
jg
sbb
aas
rcl
pop
pop
mov
push
xor
in
and
sub
mov
scas
ins
add
inc
push
cmps
inc
fld
sub
retf
out
dec
fnsave
add
xchg
test
sub
cmps
sub
dec
xchg
inc
add
pushf
push
js
imul
fld
fcom
pop
and
or
bound
push
mov
inc
cmp
sbb
mov
xor
mov
xor
es
sbb
dec
cmp
enter
inc
mov
cmp
pop
(bad)
jnp
or
mov
dec
push
mov
add
stos
adc
inc
outs
mov
pop
popa
adc
movs
enter
sbb
mov
add
sub
je
into
and
inc
sbb
xor
stos
in
sub
and
cmp
mov
hlt
pusha
fdiv
sbb
adc
test
ja
cmp
clc
out
in
and
repz
dec
out
leave
mov
dec
pop
das
test
stos
or
mov
cdq
mov
popa
xchg
mov
push
add
pop
test
xchg
stos
adc
repnz
js
pop
cmp
(bad)
jp
adc
loopne
add
(bad)
cli
shl
sbb
mov
xor
sub
sahf
jmp
scas
popf
add
adc
xor
fnstsw
add
adc
sub
pusha
outs
fnsave
pop
fwait
mov
scas
pop
rol
mov
call
in
fcomp
push
push
xor
cmc
push
dec
clc
cwde
lds
in
xchg
das
sahf
mov
ret
cmps
and
xchg
xchg
cdq
(bad)
jae
test
mov
in
mov
cmps
fmul
ret
test
xchg
out
push
mov
out
xor
es
daa
sub
sbb
dec
dec
inc
sub
(bad)
repnz
xchg
push
xchg
jae
mov
ins
dec
sbb
fisub
cmp
inc
jge
cs
sbb
ins
mov
std
ins
or
frstor
stc
das
bt
inc
push
rcl
int3
cmp
outs
addr16
dec
out
push
and
clc
pop
push
jle
cld
push
test
push
add
push
pushf
dec
jbe
xchg
in
cmps
pusha
inc
dec
sbb
pop
push
mov
sbb
jae
dec
fs
jne
out
jl
jb
xor
push
mov
pop
xor
retf
addr16
test
or
retf
jno
adc
xor
mov
imul
mov
mov
sbb
sbb
dec
mov
mov
stc
imul
adc
xchg
push
inc
adc
push
retf
test
and
pop
scas
ins
aad
js
pop
std
shl
sbb
scas
ds
pushf
mov
out
adc
imul
jecxz
dec
clc
les
es
hlt
les
cs
cdq
dec
cmp
lahf
test
inc
push
das
retf
jge
dec
jmp
in
pop
lods
xor
ret
push
pop
dec
inc
sub
ss
pop
sti
cmps
(bad)
jb
loopne
cmp
out
mov
cmps
and
pusha
hlt
test
hlt
push
rcl
test
fistp
push
js
cmps
add
dec
pop
xchg
adc
cmp
mov
das
aad
test
out
sbb
mov
xchg
call
clc
loope
out
cld
jle
jecxz
jg
es
xor
dec
jmp
into
adc
ret
lahf
or
nop
inc
sti
add
cmp
xor
cdq
aad
or
iret
into
jne
call
cli
dec
pop
mov
xor
lds
cwde
xchg
mov
cli
mov
sbb
jo
pop
sub
dec
pop
mov
jmp
xchg
out
or
sbb
out
shr
add
fld
sahf
jb
adc
or
stc
and
das
dec
out
mov
lds
inc
lods
lds
aaa
mov
pop
dec
arpl
jp
ror
pop
pop
cwde
add
xchg
mov
arpl
outs
enter
and
inc
scas
mov
loopne
cmp
and
rcr
add
xchg
loopne
ret
sbb
mov
mov
div
popf
dec
jp
ins
jecxz
mov
lods
je
dec
xchg
dec
stc
mov
lock
jae
jp
dec
(bad)
rep
cmp
stos
xchg
fdiv
rol
retf
xor
mov
ficomp
and
mov
adc
movs
movs
dec
jne
in
xchg
mov
sbb
add
aaa
popf
cmp
xchg
sahf
lods
adc
jb
data16
int3
fbld
jno
imul
or
retf
sub
(bad)
jmp
xor
mov
aaa
(bad)
xchg
pop
mov
stos
adc
push
sub
in
ret
imul
push
rol
fwait
add
mov
mov
ds
xchg
call
fcom
lods
sbb
or
and
mov
xchg
outs
fsubr
or
movs
leave
mov
retf
dec
jp
push
push
and
rep
es
push
test
je
fisttp
sub
mov
cmp
sbb
xor
int
and
push
sub
pop
mov
xchg
push
pop
test
mov
aad
xchg
cmovno
cli
add
mov
(bad)
shr
xchg
jecxz
fsub
aad
pop
je
mov
mov
mov
mov
loop
popw
aad
jne
mov
pop
leave
cmp
xor
mov
out
gs
push
cwde
in
retf
(bad)
in
fisttp
imul
sbb
out
sbb
in
xor
xlat
xchg
adc
cs
cli
mov
test
addr16
scas
xor
syscall
adc
fidivr
into
clc
mov
xchg
xchg
or
push
sbb
inc
fisttp
loopne
call
fist
inc
sub
scas
mov
lock
xchg
push
push
mov
dec
sbb
mov
popa
jmp
cdq
jns
aaa
mov
jnp
fcom
mov
lahf
cli
inc
aad
mov
lods
jle
xchg
add
jecxz
sbb
enter
imul
and
dec
nop
popa
push
dec
ins
lea
xchg
das
pop
ror
dec
dec
repz
xchg
in
mov
mov
inc
xlat
div
(bad)
push
cmp
popa
hlt
test
sub
inc
int3
ins
pop
js
das
aas
retf
or
mov
sar
gs
mov
ret
inc
cwde
or
cli
jmp
outs
xchg
dec
rcr
inc
popa
loop
sbb
stc
retf
call
sbb
mov
mov
out
inc
int3
jns
cmp
add
xchg
out
daa
pop
or
push
fst
imul
mov
sub
xor
test
jp
jns
lahf
out
fs
jmp
and
sahf
dec
xchg
nop
jmp
fs
jns
ins
push
cld
push
or
jge
inc
daa
jp
push
push
mov
xor
test
mov
or
(bad)
jmp
and
push
aas
cmp
imul
loop
outs
call
js
or
add
ins
pop
arpl
ins
imul
mov
cmp
jne
gs
mov
adc
in
xchg
xchg
jns
test
shr
inc
mov
xlat
xchg
push
ror
iret
push
mov
mov
dec
mov
outs
test
iret
ror
push
and
les
and
dec
jp
es
test
scas
cmp
push
inc
pop
pop
xchg
add
xchg
adc
das
pop
lods
in
fistp
inc
xchg
scas
aas
cmc
and
dec
sbb
or
cwde
scas
xchg
dec
mov
(bad)
cli
and
mov
imul
pushf
int
cmp
adc
test
test
into
and
adc
or
pusha
lahf
mov
test
pop
adc
(bad)
cmp
in
mov
fcom
rol
jae
dec
push
or
cmp
sub
fsub
and
cmp
mov
inc
std
sbb
mov
mov
test
sbb
dec
lahf
or
sub
pushf
fs
jb
daa
rol
pop
push
movs
mov
arpl
add
xchg
cmp
inc
inc
mov
pop
shl
int3
aam
push
inc
js
test
sbb
in
dec
leave
cwde
cld
gs
popa
fs
mov
ins
ret
inc
aad
jo
loope
js
inc
test
shl
push
push
mov
mov
popf
shl
movs
scas
inc
pushf
mov
rcr
repnz
or
inc
hlt
test
xchg
cmps
pusha
nop
dec
push
xchg
adc
(bad)
out
pop
test
enter
ss
imul
mov
fist
xlat
mov
pop
jle
xchg
push
xor
out
dec
add
outs
xchg
add
push
stos
sub
bound
or
jmp
ja
dec
adc
xchg
cmps
cmp
pop
push
or
mov
(bad)
jns
aas
fadd
push
ins
arpl
(bad)
and
rcl
dec
dec
xchg
pop
fnsave
or
adc
mov
lea
sub
cmp
jae
push
call
ss
stos
cs
aam
or
xor
mov
gs
cmp
inc
loop
add
(bad)
cmc
lahf
sbb
cmc
mov
aaa
cs
mov
cmp
repz
imul
retf
lods
nop
dec
sbb
jg
xlat
popa
cmps
les
shl
pop
pop
or
add
stos
xchg
(bad)
gs
cs
jle
addr16
retf
mov
xchg
jle
fadd
inc
xchg
scas
push
dec
mov
and
pop
mov
sub
and
push
xor
sti
imul
nop
mov
or
cmp
and
cmps
clc
xchg
ja
push
add
mov
add
and
cmp
in
mov
cwde
ret
xchg
out
add
sbb
sub
mov
sbb
xor
jmp
push
dec
pusha
shl
dec
stos
(bad)
jle
adc
pop
(bad)
inc
fnstcw
aas
push
loopne
or
out
jo
push
or
sahf
and
mov
jo
sub
mov
xor
dec
adc
out
mov
xchg
inc
mov
retf
xlat
sbb
(bad)
xchg
mov
aas
enter
cmps
fistp
fwait
cmp
ins
dec
pop
aam
movs
aad
jne
pop
push
pop
cmp
jae
jbe
and
xchg
stc
add
ja
add
mov
enter
xor
xchg
pushf
cmp
xchg
fsubr
mov
mov
data16
in
sub
mov
leave
xchg
dec
dec
out
(bad)
stos
ficom
fimul
mov
cmp
jmp
aam
sbb
xor
in
push
ja
pmullw
jmp
cvtdq2ps
push
out
adc
lea
xchg
push
ror
(bad)
pop
xor
or
or
push
les
popf
mov
xchg
inc
mov
or
adc
cwde
lods
mov
cdq
lahf
pop
jne
inc
add
sub
xchg
pop
jecxz
inc
add
movs
push
mov
and
mov
les
sahf
xor
add
or
daa
add
mov
xor
popf
xlat
push
rol
inc
je
loop
lds
push
xchg
das
ror
pop
pop
aaa
mov
push
outs
mov
cmp
stos
in
fisub
lods
sub
movs
aas
nop
sbb
test
cmp
mov
imul
and
pop
aad
inc
mov
mov
enter
dec
fist
add
enter
adc
dec
mov
pop
dec
jmp
dec
xchg
mov
outs
sub
inc
push
jmp
mov
test
sar
adc
sti
mov
pop
push
add
xchg
adc
sbb
stos
vpmullw
repnz
(bad)
fcom
inc
xor
sbb
add
loop
inc
test
rcr
test
add
(bad)
xchg
push
xor
add
in
sub
into
lea
(bad)
in
jle
adc
movs
jge
shl
lahf
hlt
mov
dec
push
ja
inc
(bad)
sbb
push
shl
test
push
mov
pop
dec
add
das
mov
inc
test
fdiv
push
xor
push
mov
test
(bad)
xchg
cmp
(bad)
(bad)
das
cmps
sbb
repnz
and
dec
pop
into
push
test
jmp
xchg
sub
ins
fldenv
mov
ja
arpl
fs
push
iret
jae
xor
xchg
das
inc
call
sbb
ja
or
mov
pusha
sar
push
out
dec
out
ins
(bad)
(bad)
(bad)
mov
jle
xchg
hlt
int3
and
jbe
dec
into
mov
sbb
mov
push
adc
push
int3
fild
ins
adc
xacquire
mov
fwait
aaa
add
xor
cmp
inc
test
aas
arpl
test
jb
pop
leave
gs
xchg
dec
adc
aad
adc
in
lahf
jmp
xchg
je
js
fisttp
push
dec
int3
icebp
fwait
loope
in
or
ja
xchg
jnp
sbb
cmps
mov
test
push
out
cwde
or
in
cmp
or
push
pop
daa
xchg
mov
repnz
jl
(bad)
cmps
cld
push
inc
fst
(bad)
push
jb
addr16
retf
mov
std
repz
xor
xchg
mov
out
stos
icebp
stc
sub
inc
loope
xlat
sbb
and
test
push
cmp
(bad)
sti
call
and
ret
mov
xor
lahf
push
push
sub
frstor
lods
imul
fild
jmp
xor
add
jae
scas
dec
or
or
mov
pop
dec
pop
xchg
jmp
xchg
adc
fstp
sub
ja
mov
in
mov
jp
mov
icebp
mov
mov
ret
cmp
jl
mov
cmp
cmp
sbb
clc
cmc
mov
mov
pop
icebp
push
and
mov
dec
inc
rcr
mov
add
mov
shl
sub
mov
xchg
call
dec
loopne
sbb
enter
xchg
lods
in
adc
imul
pushf
out
out
adc
aad
and
(bad)
sbb
lods
mov
cmps
push
(bad)
xor
cmc
(bad)
fdiv
and
jmp
aaa
mov
mov
mov
call
dec
test
and
sub
mov
inc
push
(bad)
xor
stos
mov
in
xor
es
in
(bad)
dec
loopne
push
mov
inc
ret
or
lahf
movs
out
test
dec
pop
in
dec
popf
xchg
or
iret
mov
push
pop
sbb
xchg
mov
stos
movs
popf
aam
cmp
cmps
adc
ins
push
addr16
sbb
ins
jb
into
data16
lock
ficom
aas
arpl
sbb
mov
ret
outs
dec
bound
or
fld
dec
movs
jp
cs
dec
lea
aaa
leave
sbb
js
push
out
jbe
cmp
cmc
mov
adc
xor
cmp
js
push
push
mov
sbb
imul
add
addr16
jmp
fsubr
bound
call
adc
dec
dec
shl
les
scas
or
arpl
ret
imul
(bad)
jmp
pop
addr16
cmp
xchg
pop
xchg
mov
and
xchg
test
(bad)
loope
add
std
mov
cwde
xor
pusha
pop
(bad)
mov
(bad)
hlt
cmp
es
in
sub
adc
aad
loope
pop
cs
push
push
mov
repnz
jp
xchg
push
in
cmovne
loopne
xor
xchg
inc
mov
pushf
xchg
dec
push
pop
pop
cmps
mov
lock
mov
repz
fld
loop
add
mov
fnstsw
cmp
lahf
pop
jl
pop
popf
les
mov
leave
cmps
movs
xor
bound
loop
je
daa
sti
jne
scas
push
(bad)
lods
or
jecxz
push
scas
imul
sbb
popa
mov
(bad)
mov
pusha
dec
sub
fdiv
push
shr
(bad)
jg
dec
test
inc
cmp
push
adc
cwde
push
sbb
into
mov
in
pop
fist
dec
retf
shr
sbb
lea
cmp
test
add
scas
ret
aad
setle
arpl
aaa
int
jg
pushf
mov
test
and
xchg
std
adc
jl
push
out
int3
shl
stc
adc
outs
test
mov
stos
lock
adc
xchg
mov
nop
xchg
xor
pop
nop
movs
jb
jb
push
lods
arpl
iret
jne
cmps
jb
ret
push
and
cmps
test
adc
pushf
lock
aas
jne
nop
fisttp
xchg
daa
and
les
stos
idiv
pop
jp
in
cmp
or
arpl
cmp
mov
retf
fldcw
xchg
xchg
push
sub
ret
aam
adc
dec
xchg
fstp
jmp
pusha
sub
xor
xlat
cmp
das
xor
ret
test
stos
fsqrt
mov
mov
push
sub
stos
out
js
sbb
ret
lods
stos
ds
and
jle
push
call
mov
cmp
push
mov
xchg
mov
mov
pop
fs
xor
xchg
cli
cdq
or
push
pop
or
add
imul
stos
xchg
movs
pop
in
in
add
rcl
xor
xchg
push
aad
adc
lods
test
xor
dec
repz
dec
mov
inc
inc
cmovno
pop
aas
mov
inc
jecxz
sbb
in
xor
arpl
pop
mov
addr16
add
cwde
(bad)
icebp
jmp
arpl
(bad)
and
data16
ja
add
test
sub
in
xor
std
and
jle
inc
sbb
(bad)
in
jmp
jmp
jae
movs
outs
xchg
inc
call
iret
out
scas
stc
xchg
(bad)
loop
push
jmp
movs
inc
test
cmc
movs
mov
cmps
lahf
test
xor
jle
push
pop
stos
stos
sahf
test
aam
ror
add
(bad)
(bad)
loope
and
mov
pop
jecxz
xor
dec
test
enter
pop
es
je
pop
(bad)
mov
lods
mov
outs
pop
dec
ins
jmp
xchg
fisubr
mov
xor
jbe
cs
mov
mov
sbb
sub
lods
push
xchg
xor
adc
push
mov
js
cmp
out
cmp
add
cmc
(bad)
dec
xor
outs
adc
data16
cmp
or
dec
sub
movs
and
in
or
fucomp
dec
aam
inc
ds
pop
ja
mov
mov
fist
arpl
int3
fld
dec
add
dec
add
push
cmp
inc
repz
retf
and
jae
popf
push
and
sti
sbb
shr
pop
push
adc
jae
add
out
push
or
jl
jne
pop
mov
add
push
xchg
std
mov
pop
xchg
and
push
inc
cs
repz
lea
xlat
ret
xor
jmp
dec
or
sbb
push
adc
adc
pushf
pop
loope
jl
ins
mov
xor
out
jecxz
add
jns
push
cwde
loope
push
cmps
add
int3
in
ja
xor
xchg
adc
int3
mov
mov
loop
es
mov
shl
loope
jae
movs
scas
sub
mov
out
pop
adc
xchg
out
add
les
jbe
jae
sbb
popf
xchg
push
(bad)
arpl
and
outs
jg
in
in
cwde
add
inc
push
fs
add
and
xlat
jecxz
imul
movs
adc
iret
ret
jmp
(bad)
pop
in
cmp
inc
jmp
test
loope
inc
fstp
outs
in
mov
iret
push
mov
call
and
sbb
stc
pop
rcr
stc
fldenv
out
push
stos
hlt
adc
xchg
xchg
jmp
stos
repnz
fs
scas
scas
movs
push
or
shr
test
sbb
jp
lds
test
fisub
lock
dec
enter
dec
retf
inc
jmp
adc
sbb
xor
jo
inc
or
cmp
in
jb
or
hlt
jno
mov
loop
xor
lea
arpl
shl
mul
push
retf
(bad)
mov
inc
pop
popa
jp
cmps
sbb
cmp
add
cli
dec
or
les
fcmovnu
cdq
aad
cmp
xor
or
inc
jecxz
mov
cmp
xor
loop
mov
xchg
inc
es
and
mov
mov
jno
pop
sub
rcr
pop
cld
adc
mov
mov
xor
sbb
cmp
ret
sar
or
add
push
call
ss
rcr
push
sub
ret
sub
jbe
sbb
jecxz
push
xchg
mov
in
(bad)
outs
cmps
dec
cdq
xchg
test
outs
ror
lock
int3
pop
data16
add
hlt
scas
retf
(bad)
or
dec
out
pop
mov
mov
xor
add
xlat
or
addr16
stc
lds
lock
aad
in
aaa
sub
inc
enter
arpl
int3
mov
xor
inc
aad
add
jge
jns
out
dec
jg
mov
dec
icebp
and
xchg
mov
shl
add
int3
mov
mov
cmps
push
pop
push
nop
rcr
(bad)
pop
ins
push
cmp
out
jge
mov
pop
pusha
lods
xchg
adc
inc
cmp
jmp
jl
mul
mov
lods
mov
stos
dec
adc
inc
iret
mov
sbb
cdq
push
cmp
cs
aam
repz
push
mov
retf
div
add
mov
inc
adc
cmc
es
or
retf
in
jns
adc
std
out
iret
pop
cwde
sub
xlat
cmc
gs
adc
jo
pop
mov
pop
cli
pop
pop
or
rol
loop
ja
loopne
sbb
cmp
in
pop
aaa
inc
xor
and
dec
lock
fwait
lods
and
mov
or
std
push
sbb
mov
jnp
jno
dec
pop
or
mov
ret
sub
popf
rcr
dec
(bad)
mov
ins
mov
or
jg
out
xlat
cs
icebp
xor
add
out
cdq
add
sub
jae
mov
add
pop
hlt
js
ss
jecxz
daa
loopne
ja
out
addr16
xor
cwde
sbb
cmp
and
pop
icebp
int
sti
call
add
clc
or
xchg
xchg
push
(bad)
cmp
ja
arpl
aas
out
mov
sar
iret
cmp
ret
ss
loopne
push
rol
nop
out
ret
sbb
aad
por
adc
(bad)
imul
xchg
pop
sub
ret
mov
jb
cdq
je
mov
xlat
lods
scas
mov
call
pop
mov
repnz
xor
pop
mov
pop
(bad)
push
and
pop
sub
and
mov
int3
ds
aaa
fisubr
xchg
test
mov
adc
cs
push
loopne
xor
push
sub
call
daa
addr16
add
fidiv
pop
adc
mov
addr16
pop
je
or
and
shl
out
test
aaa
imul
sar
mov
adc
scas
les
sbb
ins
xor
sti
sbb
and
int
push
cmp
push
arpl
(bad)
mov
mov
outs
neg
mov
add
jg
dec
push
ins
ss
outs
inc
jne
inc
pop
sub
aas
scas
out
les
xlat
push
out
ret
cmc
push
es
cld
mov
mov
add
mov
pop
shl
sbb
sti
or
jge
or
data16
inc
fs
inc
(bad)
fst
adc
cmp
mov
mov
and
mov
xchg
cdq
pop
fwait
or
cmp
neg
lock
(bad)
out
data16
push
div
push
leave
push
and
stos
das
jmp
shl
neg
jl
cwde
dec
cmp
mov
cmp
fisubr
xlat
jecxz
sbb
xchg
inc
or
mov
push
add
or
pop
cld
xlat
mov
call
add
inc
pop
add
xchg
je
std
fnstsw
pusha
inc
push
cmp
fist
pushf
lods
arpl
shr
cdq
lahf
loope
mov
loop
(bad)
std
outs
jb
fnstcw
adc
out
lea
fst
test
jl
test
js
cmps
fld
jns
aad
cmp
sahf
arpl
mov
ds
ins
dec
dec
icebp
(bad)
mov
pushf
imul
push
or
repnz
out
bound
inc
loopne
sbb
call
push
cld
ret
in
inc
stc
add
stc
test
adc
mov
loopne
mov
in
out
sub
mov
nop
mov
loope
ficom
inc
outs
mov
mov
jl
das
xchg
pop
inc
xchg
mov
enter
test
add
jne
int
jmp
push
arpl
pop
jo
mov
cmp
dec
mov
(bad)
mov
dec
shl
iret
fnstenv
jmp
sbb
cmps
retf
sbb
repnz
pop
aam
pop
xchg
std
outs
dec
in
add
test
mov
cmp
mov
ds
inc
mov
aas
dec
cld
stc
es
scas
stos
sub
mov
aad
inc
mov
loope
popa
add
adc
aad
mov
mov
and
add
pop
mov
iret
cmp
outs
dec
add
enter
or
dec
rol
and
mov
mov
cmp
cdq
stos
lock
sbb
xlat
xchg
jno
ja
imul
or
fs
and
sub
xchg
dec
xor
out
call
jmp
push
inc
test
jle
fdiv
add
js
push
mov
test
dec
das
gs
lahf
gs
xlat
jb
sub
mov
test
inc
ss
sub
fnstcw
retf
xor
inc
xor
sub
jge
inc
aaa
call
in
dec
pop
dec
push
jne
pop
fidivr
imul
pushf
(bad)
arpl
sbb
sub
adc
fldz
pop
mov
sub
call
xchg
mov
and
fdivr
cmp
jne
ficom
stos
mov
(bad)
adc
sbb
mov
mov
sbb
xor
mov
mov
es
and
jmp
push
xchg
mov
or
(bad)
xchg
jne
dec
mov
jb
jnp
dec
push
inc
jae
retf
imul
xor
lds
cdq
ret
dec
mov
test
sbb
clc
std
jl
xor
int3
movs
popa
cmps
dec
sub
ficomp
pushf
mov
xor
mov
int3
ins
clc
int3
clc
out
push
cli
jns
jl
pop
sbb
stos
sub
jmp
popf
and
call
aaa
jbe
lods
fmul
test
(bad)
mov
or
int3
scas
cmps
jg
sbb
mov
or
xor
adc
jg
xchg
jae
cmps
push
cmp
push
mov
out
cmps
jp
nop
or
je
loope
cmp
push
fcom
xlat
add
lods
fisttp
cmp
pushf
or
push
sbb
(bad)
inc
aas
pop
cmp
jno
or
pop
(bad)
sub
call
cmc
mov
out
mov
pop
call
ja
mov
pop
sbb
push
outs
sbb
sbb
ret
cmp
mov
pop
pushf
retf
fwait
gs
div
stc
jl
icebp
xor
inc
push
mov
xchg
inc
cld
xchg
jae
mov
xchg
xor
sbb
pushf
inc
jmp
push
in
dec
cwde
fdivr
popf
pop
sbb
fwait
xchg
cmp
lahf
les
std
xchg
mov
jmp
xchg
xchg
mov
fwait
pop
adc
jge
sub
jae
sub
jb
and
out
pop
sub
mov
sbb
mov
or
loope
fadd
scas
or
ret
dec
out
daa
pop
(bad)
mov
inc
or
(bad)
aad
push
cld
cwde
popa
mov
pop
in
int
cmp
lock
ins
and
cmp
repz
mov
repnz
pop
mov
dec
out
push
mov
adc
pop
cld
out
cmp
xor
or
add
add
xchg
xchg
mov
icebp
dec
xor
int
movs
retf
repnz
add
mov
xchg
ret
in
aad
xor
pop
scas
out
inc
cs
xor
add
push
lods
sub
push
jecxz
fcomi
inc
mov
push
out
push
call
adc
outs
xchg
and
pop
cwde
sbb
in
stc
loope
dec
dec
mov
call
sbb
mov
jnp
std
dec
fidiv
adc
lea
jne
pop
sbb
mov
cmp
fcomi
inc
jne
sub
mov
jmp
xchg
mov
dec
sar
sbb
pusha
aad
dec
jns
push
ins
push
gs
call
or
cmp
jmp
movs
or
je
adc
adc
out
adc
aam
test
sbb
mov
out
in
sbb
inc
es
shl
pusha
retf
pop
mov
loop
or
in
dec
jp
(bad)
fadd
or
xor
aam
into
jb
test
sbb
and
bt
sar
cwde
fistp
inc
out
popa
sahf
in
dec
inc
push
std
add
sub
bound
xchg
js
shl
mov
or
neg
jmp
mov
cmp
test
(bad)
aad
jbe
push
pop
inc
jecxz
add
scas
mov
adc
call
xorps
mov
cli
xchg
mov
aad
pop
push
cli
mov
mov
jge
cmp
outs
cs
sub
push
js
sbb
or
sub
js
ins
pop
xor
push
adc
loop
cld
bound
scas
sub
gs
dec
mov
gs
add
aam
loope
jle
(bad)
sbb
in
xchg
popa
mov
add
cwde
(bad)
jl
cmp
jb
fucomp
cmp
or
cmps
jno
jo
shl
lds
(bad)
and
cli
int3
stos
jge
sbb
adc
adc
dec
aam
fistp
inc
pop
xor
out
or
mov
xchg
fdivp
inc
retf
jo
popf
dec
and
mov
sbb
sbb
and
inc
add
dec
inc
js
mov
pop
add
ret
outs
sub
cmp
ficomp
sub
pushf
shr
leave
test
loopne
adc
sbb
mov
pop
gs
icebp
mov
or
pop
imul
mov
js
ins
repnz
xchg
test
dec
in
push
lds
and
mov
mov
in
cmps
retf
div
cmc
out
mov
fst
(bad)
sub
cmps
mov
adc
ins
cmps
cmp
shl
rol
cmp
addr16
push
popf
lock
mov
stc
sbb
sbb
out
hlt
add
fiadd
stos
jecxz
xchg
fdivr
pop
pop
mov
sub
mov
int3
loopne
add
stos
pop
retf
test
jp
scas
pop
arpl
add
mov
in
fnstenv
sub
sbb
arpl
leave
aad
sti
je
pop
lods
std
jno
xchg
ror
push
push
scas
ds
mov
sti
mov
jge
dec
pop
jmp
and
and
mov
dec
jo
and
ror
dec
outs
shr
sbb
(bad)
je
or
or
cdq
jmp
mov
lods
xchg
add
mov
pop
icebp
push
or
jmp
out
pop
push
jmp
sub
jle
sbb
sub
mov
cld
sti
jge
ins
mov
or
pop
push
repnz
mov
daa
out
and
sbb
movs
inc
jns
xchg
jge
dec
out
xor
mov
push
sub
pusha
adc
cmps
sub
cs
push
sbb
inc
adc
jmp
pusha
stos
inc
in
inc
std
xchg
mov
cmp
mov
jo
lods
push
not
add
pop
mov
lahf
add
pusha
nop
xor
cmp
jge
xchg
in
ret
mov
mov
sbb
dec
jo
dec
fild
jp
adc
add
cmp
push
adc
out
call
mov
pop
xor
call
outs
ret
imul
mov
jne
mov
cmp
xchg
jge
sbb
xor
xor
(bad)
xor
and
pop
shl
xor
adc
test
xchg
fldenv
and
(bad)
lock
or
adc
jae
mov
fwait
push
xchg
cmp
aas
cmp
lods
clc
or
push
fcom
sub
test
xchg
jge
xor
and
movs
lahf
xor
out
xchg
xchg
dec
xchg
shl
in
ret
pop
dec
mov
and
jge
into
push
out
and
std
lock
loopne
push
mov
and
shr
adc
sar
retf
xor
and
mov
rol
imul
and
add
sub
lds
push
rcr
sbb
cdq
push
cmps
dec
fs
mov
mov
loope
mov
fld
push
sar
fidiv
out
jl
push
or
shl
add
and
and
cmp
pop
mov
adc
jmp
add
fimul
les
shl
std
and
rcr
mov
xor
lods
data16
ins
cmp
sub
and
ret
mov
dec
data16
cmp
shl
lock
call
jb
xchg
jb
jp
add
ret
int
retf
fcompp
cdq
sub
jmp
icebp
popf
inc
in
xor
dec
adc
jecxz
ja
xchg
popf
aaa
pop
addr16
push
lea
iret
test
ins
jae
call
loop
xchg
pop
movs
cmp
mov
pop
rcl
jbe
dec
popa
sahf
cld
inc
mov
pusha
mov
and
cmp
pop
fucom
shl
or
adc
int3
and
sbb
fcomp
mov
pusha
xchg
mov
mov
mov
pusha
pop
or
add
cmps
ja
repz
dec
mov
add
fcmove
jb
loopne
stos
adc
mov
jne
retf
xchg
mov
and
pop
inc
mov
mov
inc
enter
inc
cmp
jo
and
mov
mov
loop
stc
loope
fcomp
push
(bad)
pop
sar
sub
cmp
pop
fwait
movs
aam
jns
jbe
add
lds
test
test
js
stc
xchg
jmp
retf
outs
repz
jmp
jne
mov
mov
ss
shl
mov
inc
mov
aad
ins
pop
sbb
pop
cmps
dec
mov
dec
sahf
fsubp
inc
sbb
clc
test
mov
mov
sbb
ja
ret
dec
or
mov
add
pop
clc
inc
test
pcmpgtb
inc
nop
movs
cmc
sub
jge
dec
leave
mov
sub
bound
ds
test
int3
(bad)
jmp
in
mov
and
pop
jmp
sbb
ins
sub
and
data16
in
pop
(bad)
imul
add
les
es
not
and
jne
xor
or
push
add
fmul
inc
jns
and
mov
imul
imul
jns
jae
sub
hlt
or
xchg
mov
xchg
xchg
(bad)
push
icebp
inc
int3
and
mov
cdq
dec
(bad)
jmp
mov
pop
jno
pop
imul
(bad)
cmp
out
pop
call
call
xchg
test
push
leave
iret
and
cmp
sub
jo
(bad)
cmps
jnp
lahf
ja
sub
out
rcr
pusha
xor
pop
rcr
iret
cdq
mov
fisttp
xchg
mov
jecxz
loopne
mov
add
mov
xchg
inc
and
cdq
mov
popf
les
push
push
neg
push
dec
adc
push
aad
ret
xor
xor
pop
sbb
rol
and
daa
test
jg
mov
push
or
pop
cmp
inc
daa
xor
cwde
lea
(bad)
or
mov
mov
in
cmp
je
dec
iret
jl
jmp
or
mov
push
inc
ficom
gs
add
xchg
fisttp
in
nop
aas
sub
out
inc
mov
xchg
std
cmp
scas
ret
sub
stc
imul
sti
and
inc
cdq
or
movs
sar
test
mov
ds
mov
fwait
xchg
pushf
fcom
fld
sar
in
sar
jae
(bad)
xor
movs
test
dec
leave
sub
inc
or
and
clc
jns
mov
or
dec
sbb
iret
mov
into
add
repz
inc
sti
retf
jmp
fnstcw
daa
(bad)
fwait
pusha
movs
out
cmp
inc
adc
pop
fsubr
scas
outs
pop
lock
and
push
neg
jge
mov
lods
mov
mov
outs
sbb
in
mov
mov
sub
cmp
and
cmp
and
dec
cli
inc
lds
cld
mov
add
dec
mov
ja
jl
cmp
mov
push
jb
jl
add
push
jge
mov
push
push
(bad)
outs
ins
or
repnz
and
xchg
push
sbb
(bad)
mov
(bad)
fbstp
pusha
daa
in
add
test
push
mov
lock
inc
jns
sbb
jb
fisubr
ss
outs
out
pop
jg
push
scas
push
xchg
mov
lods
and
dec
je
jo
sbb
sti
xor
(bad)
and
movs
test
aad
(bad)
mov
fidivr
cmps
sbb
loop
or
or
inc
cmp
push
mov
cmp
dec
retf
adc
and
adc
out
xchg
dec
loopne
xchg
add
stc
out
pop
cmp
and
mov
sub
inc
xchg
ret
inc
xchg
test
ja
inc
pop
add
pop
inc
xor
retf
sbb
and
push
xchg
xchg
adc
add
mul
pop
pop
jg
cmp
shr
jecxz
jl
inc
adc
mov
cmc
mov
jmp
sbb
pop
(bad)
push
xor
mov
mov
pushf
lods
sub
sbb
adc
xor
lock
sub
mov
and
jl
add
adc
inc
dec
push
sbb
xlat
cmp
push
mov
dec
fimul
loopne
sub
test
pop
jg
repnz
leave
bt
int3
or
jnp
dec
fistp
int
dec
inc
out
and
je
int3
inc
pusha
inc
and
ret
push
push
adc
jb
clc
stos
popa
les
dec
test
xor
fisttp
dec
enter
in
sub
adc
and
mov
sbb
push
cmp
or
imul
or
jbe
inc
mov
xchg
sahf
sbb
push
jnp
shl
jbe
nop
dec
loop
movs
cmp
push
fdivr
cmp
cmp
sub
mov
aas
fdiv
pop
mov
mov
and
js
dec
jae
xchg
sub
xchg
xor
iret
jae
xchg
sahf
pop
lods
fwait
loopne
xor
test
mov
mov
jge
ja
repnz
inc
outs
dec
jecxz
mov
dec
mov
dec
repz
xlat
push
or
jmp
fdivr
jno
mov
in
xchg
out
and
das
add
jl
ja
push
loop
add
add
call
fimul
pushf
addr16
loopne
pop
fwait
stos
arpl
jnp
ja
sbb
mov
xchg
mov
mov
push
sbb
in
xchg
push
test
loopne
inc
les
(bad)
pop
call
ins
int3
std
mov
push
mov
outs
sub
cmps
pusha
pop
sbb
mov
in
xchg
cmp
mov
sub
jo
push
and
jns
mov
sahf
call
scas
dec
and
icebp
aaa
es
sbb
cdq
ins
ss
fldcw
mov
fistp
fisubr
mov
add
sbb
sub
sbb
loop
pop
pop
ret
sbb
jle
pushf
dec
pop
je
mov
mov
cmp
sbb
cmp
lods
sub
fist
(bad)
(bad)
dec
(bad)
xlat
out
mov
mov
sub
jb
hlt
push
ins
out
pushf
xor
sbb
push
and
aam
mov
adc
cmc
jmp
jo
loop
dec
ficomp
jbe
into
aaa
push
sahf
jne
jle
jecxz
(bad)
pop
push
stos
xor
ds
adc
or
sbb
inc
ds
mov
leave
pusha
scas
jae
shl
pop
pop
dec
in
sbb
push
mov
mov
aaa
mov
push
ss
pushf
push
(bad)
cmc
ds
adc
ja
mov
fisttp
sub
shl
(bad)
imul
sub
pusha
push
test
sbb
and
ss
in
test
out
mov
call
retf
adc
fcom
rol
jle
imul
mov
pushf
rcl
(bad)
jno
dec
xchg
es
and
test
movs
mov
gs
das
in
int3
dec
dec
fidivr
mov
or
fucomp
xor
add
mov
mov
dec
pop
cmp
adc
xlat
mov
fdiv
mov
and
push
ins
mov
xchg
(bad)
out
mov
and
fimul
and
stos
fidivr
outs
mov
repnz
xchg
add
pop
stc
mov
jne
sbb
xchg
aad
inc
push
mov
or
push
test
retf
xor
pop
add
dec
dec
mov
xchg
out
cmp
and
bound
push
ficomp
xchg
sbb
stc
jmp
repz
xor
bound
sub
call
sub
cwde
mov
mov
mov
inc
push
in
jae
sbb
adc
jo
push
(bad)
mov
cmp
cmc
fadd
add
pop
pop
jbe
rol
xchg
hlt
xchg
out
sub
pop
lods
ficomp
add
ror
pop
mov
push
mov
icebp
test
add
sahf
sub
mov
repz
cmp
jne
adc
mov
push
cmp
sub
xchg
test
push
xor
push
shr
add
dec
pop
jmp
fsubr
adc
mov
jge
clc
cmp
test
mov
int
mov
mov
outs
push
pop
push
mov
adc
out
js
leave
fsubr
(bad)
cmp
cmp
xor
repnz
mov
and
xchg
jb
loopne
mov
xor
in
mov
cmp
jl
jecxz
stc
xor
int
or
push
jns
ss
or
clc
mov
mov
sub
or
out
daa
(bad)
dec
mov
mov
push
sahf
imul
aad
push
clc
pop
mov
arpl
jb
cld
stc
sar
cmps
imul
nop
lods
jo
pop
mov
jmp
mov
ror
aad
pop
xchg
push
mov
cmp
pop
pop
xchg
loope
push
imul
sahf
out
arpl
push
mov
xchg
xor
shr
push
sbb
clc
popa
xor
retf
mov
shr
ins
mov
mov
adc
push
movs
ins
and
dec
pusha
mov
sbb
mov
fld
shl
out
sub
shl
in
je
sub
sti
add
je
test
jge
test
mov
not
mov
sahf
sub
xchg
dec
mov
jbe
mov
and
sub
cmc
call
dec
pop
sbb
sysenter
pushf
sbb
dec
outs
int3
cli
xchg
cmc
xchg
imul
inc
push
mov
in
arpl
mov
cmp
jl
inc
mov
retf
push
dec
cdq
add
repnz
jge
outs
(bad)
dec
inc
and
lahf
jp
jge
xor
mov
mov
mov
in
out
loopne
call
push
outs
adc
mov
pop
add
add
mov
jne
repz
mov
loop
mov
push
sub
sub
push
(bad)
sbb
mov
mov
pop
cmp
bound
popa
icebp
xchg
sub
sbb
push
xor
jmp
lahf
(bad)
xchg
jns
stc
dec
jg
into
mov
mov
sub
cmps
sub
adc
mov
jecxz
sbb
int
stos
(bad)
repz
scas
(bad)
(bad)
repz
cmp
mov
repz
inc
push
jbe
mov
or
mov
(bad)
repz
sysexit
stos
imul
push
shl
inc
jl
ins
sti
sub
js
dec
adc
dec
repnz
push
add
inc
sub
pop
push
imul
das
push
pop
dec
cmps
ins
lods
lahf
add
add
das
jp
adc
out
cmps
rol
mov
push
ret
sub
jbe
pop
push
mov
inc
jge
sub
in
cli
fidiv
adc
jecxz
mov
jb
adc
mov
loop
xchg
mov
in
cmps
mov
cmp
push
test
ds
hlt
out
add
out
out
clc
push
cmp
xchg
mov
fisub
and
adc
int
mov
mov
pop
std
js
(bad)
mov
xlat
shl
call
pop
mov
into
jmp
fs
jp
or
pop
inc
enter
mov
mov
popa
jae
aaa
jmp
pop
scas
dec
add
aas
mov
mov
aad
xchg
cmp
xchg
and
inc
out
shl
jno
mov
lock
mov
mov
mov
cmps
mov
loop
call
in
idiv
lds
dec
movs
jp
lods
ins
cmc
scas
jmp
xor
and
arpl
xchg
movs
mov
lds
fldcw
clc
add
or
lods
pop
nop
and
xor
stos
push
aad
xchg
jno
inc
imul
jns
xchg
dec
adc
add
xchg
inc
test
push
jno
xlat
and
mov
or
mov
add
pop
lods
add
rol
or
pop
mov
ret
cmp
add
dec
cmps
dec
jl
pop
repnz
pop
out
mov
and
imul
mov
ret
jne
inc
cmp
cmps
or
cli
pop
xor
dec
jmp
(bad)
xor
(bad)
mov
loop
loop
inc
jecxz
aam
aad
lods
fs
pusha
adc
sbb
aad
not
sbb
mov
ins
jle
and
pop
inc
lea
jmp
pushf
push
adc
outs
sti
frstor
pushw
cmp
shl
sbb
fisttp
and
clc
dec
aam
mov
out
adc
call
shl
or
push
dec
mov
push
(bad)
clc
xlat
pop
inc
pop
test
iret
push
sub
sar
enter
jo
ret
fs
jmp
daa
jmp
es
mov
test
in
inc
sub
xor
mov
(bad)
retf
or
mov
add
(bad)
cmp
sbb
jne
sbb
push
(bad)
div
and
xor
fcmovnu
cmc
int
sub
sar
inc
xchg
cmp
jnp
mov
jne
lods
add
push
test
into
test
mov
sbb
pop
sub
jle
sbb
aaa
sub
ret
sbb
add
repnz
adc
jnp
popa
aam
ja
(bad)
and
out
pusha
or
loop
adc
out
stc
jge
daa
(bad)
in
and
je
addr16
(bad)
popa
sbb
daa
call
movs
lods
adc
inc
and
dec
sbb
mov
mov
adc
sbb
sbb
hlt
pop
test
jne
retf
cmp
mov
call
(bad)
in
(bad)
push
cmp
mov
mov
out
out
ds
mov
dec
xchg
mov
jle
out
mov
in
sub
and
mov
sbb
loope
in
mov
dec
outs
push
cwde
jno
rcl
or
pop
(bad)
les
sbb
xor
aam
pop
lock
pop
jae
in
and
inc
int3
cmps
and
out
cmp
lea
or
inc
push
fild
iret
rcl
fwait
jle
data16
mov
scas
aad
mov
fdivr
js
xchg
adc
jmp
mov
out
sub
jb
add
outs
sbb
inc
and
inc
cdq
pop
imul
sbb
jecxz
jmp
lock
test
ins
js
xor
mov
aad
cs
jbe
into
push
call
mov
out
pop
stc
xchg
daa
xchg
xlat
outs
int3
scas
dec
jmpw
jmp
sbb
jmp
aam
jecxz
cmp
adc
imul
retf
sar
push
adc
in
inc
add
mov
test
inc
dec
cmp
ret
(bad)
(bad)
ins
addr16
and
cmp
mov
push
xchg
out
lock
retf
add
sbb
push
add
popa
or
iret
adc
and
outs
nop
dec
mov
push
sar
(bad)
movs
add
int
test
cmp
icebp
push
jne
(bad)
stc
out
or
outs
stos
inc
sahf
std
jmp
mov
retf
adc
fmul
ss
(bad)
hlt
jle
inc
xor
pushf
loop
in
push
addr16
dec
add
push
outs
pusha
out
(bad)
mov
retf
loopne
cdq
lahf
and
pop
aad
inc
and
sbb
add
add
je
inc
loope
push
jns
call
das
ja
or
pop
xor
test
sbb
sub
mov
call
call
sub
es
mov
jo
fidiv
pop
xchg
push
cmp
xlat
or
ret
sbb
add
mov
sub
add
and
(bad)
jno
ret
std
cld
out
mov
rol
xchg
out
sahf
(bad)
jbe
ins
jecxz
xchg
and
mov
lds
std
das
int
imul
or
shr
repz
adc
jecxz
sub
pop
enter
xor
cmp
jno
enter
imul
scas
loopne
pop
fwait
mov
pop
in
dec
jp
and
les
shl
pusha
repnz
int
sbb
retf
add
mov
pop
rol
cmp
mov
mov
mov
adc
leave
push
lahf
jne
pop
xrelease
pop
out
sub
push
mov
loope
push
sub
pop
std
mov
out
int3
mov
lock
imul
sub
mov
rcl
jge
gs
cmp
jno
retf
sbb
call
pop
arpl
mov
and
mov
rcl
xchg
sbb
std
or
inc
rcl
fsub
cdq
xor
(bad)
pusha
sahf
xor
adc
loopne
xor
mov
and
arpl
jnp
ret
sti
add
inc
pop
fiadd
ss
fwait
in
(bad)
or
push
addr16
mov
or
ja
jecxz
in
or
test
cmp
push
push
inc
cmp
jp
dec
clc
push
inc
ss
xchg
mov
cld
fld
enter
xlat
dec
shl
mov
(bad)
sti
or
jp
stc
add
or
(bad)
jle
out
push
cmp
sahf
jae
jno
jbe
add
jg
fadd
dec
js
aaa
in
adc
pop
aam
sub
lods
cdq
lock
aam
mov
inc
pop
rol
mov
jge
pop
fnsave
(bad)
mov
pop
mov
xor
jge
pop
retf
sar
cmp
fnstenv
movs
sbb
fild
dec
loopne
js
jle
or
retf
pusha
inc
out
retf
call
mov
and
dec
popf
or
(bad)
cmps
mov
stos
std
pusha
xor
push
sbb
outs
mov
(bad)
pop
cli
ins
pop
cmp
mov
pusha
(bad)
enter
push
ficomp
mov
add
stos
cwde
gs
jge
imul
jb
dec
sub
cld
dec
or
jo
jecxz
mov
jmp
mov
jg
jnp
jmp
jp
std
mov
adc
mov
ins
push
outs
movs
fldenv
lds
xchg
fs
xchg
sar
add
cmp
cmps
in
adc
mov
fs
loopne
pop
cmp
push
dec
pcmpeqw
pop
shl
scas
mov
sbb
repz
lea
mov
cmp
and
jecxz
ss
es
cmp
cmp
xchg
addr16
loop
(bad)
data16
xchg
into
sbb
hlt
ds
pop
mov
mov
xor
daa
jg
pop
pop
sbb
ret
and
jmp
dec
mov
cmps
rcr
ss
cmp
out
inc
jb
xor
cwde
ins
(bad)
call
add
push
add
xchg
loop
add
or
push
fcomp
neg
lds
fs
add
jnp
xchg
in
fidivr
xchg
push
test
add
iret
shl
pop
fimul
es
int
call
movs
movs
cmp
mov
sub
pop
bound
jge
xchg
repnz
xor
adc
imul
xchg
repnz
leave
push
or
(bad)
fs
retf
leave
and
dec
mov
rol
sub
cli
popa
adc
pop
jmp
inc
sar
push
js
inc
dec
mov
dec
std
icebp
xchg
jmp
add
scas
dec
stos
test
or
cs
xor
xchg
sbb
inc
addr16
repnz
mov
inc
inc
xchg
pop
call
sbb
add
sbb
inc
mov
stc
arpl
mov
jbe
mov
jmp
xchg
test
into
jb
out
pusha
comiss
out
clc
pop
jnp
xchg
sub
outs
bound
data16
mov
mov
mov
xchg
lock
aaa
pop
inc
lds
(bad)
sbb
or
cvttps2pi
bound
call
add
mov
shr
jnp
mov
push
in
or
inc
loop
sti
inc
mov
xlat
or
adc
dec
sub
das
pop
pushf
push
push
pop
scas
sar
movs
cmps
(bad)
loop
loop
sub
cli
lahf
ins
adc
shr
and
mov
pcmpeqd
mov
rol
dec
out
mov
mov
cmc
in
push
adc
loope
loope
les
mov
jl
push
add
cmp
adc
mov
scas
mov
dec
mov
in
(bad)
idiv
mov
cmp
sbb
pop
or
xchg
cmp
xor
mov
fstp
inc
ja
push
xchg
popf
add
jns
xchg
je
mov
cmps
xchg
retf
mov
mov
pop
icebp
fisub
cli
ficom
dec
aad
pushf
pushf
lods
push
jmp
and
leave
mov
or
test
pop
out
icebp
loope
ret
arpl
bound
aaa
or
fadd
inc
and
out
xchg
push
cmp
mov
in
push
shl
pop
adc
cld
add
and
(bad)
pop
je
shl
dec
stos
outs
outs
pop
ja
jns
inc
fadd
cmp
aad
add
in
aas
adc
aad
fnstsw
dec
popa
rol
std
or
dec
xchg
and
test
(bad)
fild
mov
inc
shl
inc
adc
dec
xor
mov
not
sbb
sub
loope
popa
ss
cwde
fisttp
rcr
in
clc
cdq
dec
dec
leave
call
addr16
mov
imul
scas
inc
aaa
jmp
fcom
(bad)
repz
gs
iret
int3
ins
sub
jg
sbb
add
inc
out
mov
arpl
stos
push
cli
xchg
mov
mov
add
sbb
sub
dec
sahf
mov
push
ins
pop
sti
cmp
shl
pop
bound
pop
push
arpl
shr
mov
icebp
stos
push
out
and
je
movs
in
inc
in
fcomp
nop
popf
mov
add
addr16
mov
ins
mov
scas
adc
jge
rep
aas
pop
ret
pop
jae
mov
outs
inc
call
fadd
xor
and
cwde
ret
test
into
xor
sbb
dec
enter
imul
popa
int
xrelease
push
sti
or
shr
inc
push
and
xor
push
mov
mov
mov
add
inc
cmp
jb
pop
hlt
mov
scas
popf
mov
ficomp
loop
enter
scas
inc
xchg
jmp
imul
jmp
rcl
sti
mov
fldenv
push
das
shr
and
lock
aas
imul
scas
pop
test
ja
sar
or
iret
data16
adc
xor
bnd
popa
sbb
shl
pop
in
ja
xchg
sub
arpl
repz
inc
sub
out
adc
in
and
test
repnz
jmp
fmul
sub
iret
and
mov
dec
sub
push
mov
mov
out
inc
ror
in
pop
aaa
bound
std
mov
push
pop
outs
outs
sub
daa
mov
pusha
jbe
int3
leave
mov
push
addr16
sbb
or
inc
and
adc
shr
cmp
xchg
jmp
scas
(bad)
(bad)
(bad)
test
mov
mov
aaa
loop
add
cmp
test
pop
sub
popa
sub
jb
pop
xchg
sti
sbb
xchg
jmp
ret
pusha
in
retf
shr
cmc
xchg
outs
shr
and
jno
push
outs
pop
and
int
out
ss
xor
lods
test
popa
mov
mov
mov
out
mov
xor
mov
or
and
mov
into
mov
cmp
and
fmul
xor
inc
mov
mov
xor
inc
add
cwde
push
psrad
mov
int
test
pop
aaa
dec
xor
scas
sub
or
mov
adc
dec
stc
test
cs
outs
cli
mov
pop
mov
leave
mov
adc
bnd
pushf
pushf
add
fiadd
ja
pop
lds
movs
jg
xor
adc
push
pop
aas
sbb
pop
retf
es
in
xlat
in
in
repnz
sub
ja
test
cwde
xchg
adc
dec
add
icebp
es
fild
lahf
movs
imul
sub
outs
push
inc
xchg
xchg
nop
pop
cmps
shl
imul
and
sub
mov
inc
dec
test
mov
fsub
out
mov
imul
mov
clc
out
mov
xor
test
jnp
jno
iret
inc
(bad)
pusha
(bad)
dec
jns
div
xor
in
nop
and
(bad)
xlat
mov
imul
leave
cmp
out
sahf
mov
dec
xchg
imul
jmp
hlt
inc
fadd
mov
js
mov
mov
jecxz
fcom
mov
mov
xchg
movs
pusha
cmps
sub
outs
xchg
pusha
jnp
dec
sbb
ins
cwde
call
ror
mov
sub
cmps
aam
das
pusha
mov
or
xchg
inc
pop
or
jp
mov
mov
mov
fwait
mov
jecxz
std
xchg
jmp
push
aaa
mov
push
mov
sub
sbb
mov
inc
jno
rcr
sahf
cmp
inc
xlat
cmp
popf
stc
xor
inc
imul
ins
imul
xlat
and
adc
retf
add
mov
mov
dec
pop
or
xor
inc
mov
push
jbe
xor
frstor
pop
scas
(bad)
mov
push
and
inc
dec
enter
jb
jmp
jbe
inc
and
xchg
hlt
inc
addr16
into
cmp
inc
xor
in
daa
mov
mul
mov
fmul
xchg
or
and
aam
loop
jmp
or
push
rcl
pop
cmps
(bad)
xchg
fild
repz
imul
mov
arpl
ror
pop
ins
movs
retf
and
inc
mov
ins
sti
in
mov
inc
sub
jns
xchg
cmp
repnz
cmp
push
cmp
inc
lea
loopne
ret
add
dec
cdq
and
cld
push
mov
push
out
(bad)
ins
cs
imul
cmp
xor
push
pop
movs
cmp
std
xlat
mov
cs
bswap
nop
mov
fwait
xchg
icebp
push
cmp
inc
repz
loop
les
cmps
sbb
mov
inc
call
dec
cmps
fwait
stos
xlat
jl
add
mov
push
call
jp
jmp
test
(bad)
mov
cli
imul
and
lock
stos
in
lods
jmp
xor
add
cmp
(bad)
sub
cmp
xchg
and
sub
mov
sbb
js
lock
push
lock
sbb
cli
cld
arpl
sbb
xor
mov
lods
es
adc
inc
mov
mov
mov
inc
call
and
inc
pop
(bad)
mov
in
scas
jne
xchg
mov
sbb
xchg
fsubr
sbb
jo
xlat
fisub
inc
cwde
and
jbe
out
mov
and
jbe
jb
out
movs
ret
sti
ds
pop
stos
mov
xchg
shr
push
mov
jmp
xor
(bad)
dec
mov
xchg
int3
sub
ds
mov
jl
xchg
dec
es
inc
jmp
lock
(bad)
jns
gs
xlat
push
repnz
outs
xor
sub
arpl
mov
mov
xor
sar
movs
cmps
test
xor
xor
mov
les
adc
inc
sbb
and
fst
mov
aas
movs
or
fs
ins
adc
pushf
lahf
and
scas
sub
loopne
loop
fdivr
inc
pop
ss
in
loop
enter
xchg
outs
cs
js
iret
sbb
mov
pop
jmp
sbb
xor
fstp
idiv
sbb
xchg
mov
neg
inc
cmp
mov
or
mov
sbb
out
inc
sahf
inc
xor
sub
rcl
or
outs
mov
std
cmp
(bad)
push
cdq
shl
xor
ret
cmp
clc
stc
push
mov
(bad)
sbb
xchg
jmp
or
fwait
xchg
call
(bad)
cmp
inc
inc
test
or
cmp
ins
push
mov
enter
push
lahf
adc
jl
enter
sti
jmp
jae
std
pop
inc
daa
imul
jno
push
jo
mov
shl
xchg
cmp
mov
out
cmp
pop
aas
cmp
mov
push
cmp
jg
adc
adc
popa
adc
cs
jle
mov
inc
adc
xchg
out
nop
lods
add
inc
mov
mov
fcmovbe
(bad)
push
repz
sbb
jmp
and
test
inc
daa
cmp
inc
cld
adc
outs
xchg
add
jl
int
inc
ret
mov
out
test
xchg
(bad)
iret
outs
mov
(bad)
aam
div
popa
not
pop
xchg
ins
dec
inc
pushf
dec
jmp
adc
arpl
mov
mov
dec
push
cmp
fs
test
int
(bad)
sti
ins
test
mov
sar
jbe
push
mov
lods
xor
xchg
cld
jno
cmps
mov
rcr
call
or
retf
popf
add
push
pop
mov
jge
fistp
xchg
sar
mov
test
inc
outs
adc
push
mov
mov
sbb
and
mov
or
loope
jb
mov
les
or
push
add
ror
fnstenv
fsub
add
jno
std
add
int
add
mov
ins
lahf
leave
jmp
pushf
fucomi
sbb
dec
sub
and
outs
(bad)
jle
mov
imul
scas
aam
ja
ret
popf
test
mov
fnsave
inc
push
adc
or
mov
lock
pop
mov
push
pop
push
iret
shl
add
xchg
sbb
popf
add
mov
test
out
(bad)
stos
dec
ret
xor
or
shl
les
push
mov
scas
inc
and
pusha
sbb
adc
dec
mov
outs
add
inc
cmp
jl
and
push
add
imul
xchg
in
jb
nop
je
nop
xchg
movs
jg
fisubr
cld
xor
inc
aad
mov
loop
dec
test
adc
sub
leave
xor
arpl
pushf
xor
add
pop
movs
dec
mov
les
cmp
add
dec
pop
lea
in
adc
xor
push
(bad)
inc
adc
scas
jmp
dec
test
jbe
adc
pop
mov
in
jns
jp
enter
retf
add
add
push
aam
fs
and
je
jns
jnp
rdtsc
loop
shl
fcmovu
popf
aad
in
hlt
sbb
arpl
mov
mov
mov
imul
sbb
inc
pop
das
and
add
mov
btc
jae
aas
jae
daa
mov
cwde
xchg
iret
bnd
test
repz
pop
mov
and
loope
add
push
jnp
fld
mov
sbb
outs
mov
cmp
mov
aam
jl
mov
sar
add
pop
inc
stos
sbb
push
mov
push
fwait
rcl
pop
push
loop
in
movs
jmp
rol
or
inc
jmp
mov
les
cmp
mov
or
dec
stc
and
int
adc
push
ja
(bad)
mov
xchg
ins
enter
jge
xchg
sahf
xchg
inc
xchg
inc
test
mov
daa
cwde
ss
xchg
(bad)
xor
retf
xchg
loope
into
sbb
sbb
nop
push
pop
mov
push
or
sbb
or
sbb
pop
push
jnp
xchg
int
cmp
cmp
lea
retf
jmp
xor
repnz
add
repnz
cmp
mov
inc
jmp
cmp
mov
jns
in
outs
pop
fld
cli
mov
repnz
pop
push
mov
inc
xor
movs
test
lea
pop
(bad)
xor
and
dec
mov
push
outs
xchg
sbb
xor
cli
movs
(bad)
shl
cmps
int
sbb
cdq
mov
xor
movs
mov
cmc
ja
repnz
xchg
das
bound
jmp
lds
mov
pop
cmp
jno
sbb
push
mov
xchg
jmp
stos
xlat
hlt
jmp
fisttp
stc
sti
add
test
adc
jle
xor
or
push
call
aam
or
sub
adc
add
inc
rol
push
add
xlat
mov
rcl
cmc
arpl
repz
(bad)
aad
and
movs
adc
nop
sbb
add
dec
cmp
xchg
outs
cmp
mov
and
push
icebp
pop
inc
ret
mov
or
popf
pop
mov
jb
jge
inc
call
mov
lea
mov
in
stc
test
xchg
test
xchg
mul
dec
mov
hlt
xor
sti
pop
add
inc
(bad)
ror
fsub
adc
mov
out
dec
daa
lds
jge
neg
inc
out
popf
mov
mov
jl
pushf
mov
jecxz
xlat
sub
fdivr
push
ror
push
(bad)
or
popa
scas
mov
pop
cdq
dec
sbb
test
cmp
outs
sbb
pop
repz
stos
push
mov
in
cld
and
pusha
mov
cmp
ror
aad
mov
(bad)
pop
add
or
adc
dec
mov
mov
jge
sub
or
retf
sbb
sbb
inc
cli
stos
leave
ret
sti
cld
daa
ja
push
cmp
or
mov
jns
pop
pushw
test
add
ja
and
outs
sbb
je
les
fsub
inc
int
mov
arpl
mov
jl
popa
inc
pop
push
adc
xchg
into
ud2
arpl
add
rcr
jp
pop
adc
xor
test
dec
push
adc
pop
adc
sub
xchg
sub
(bad)
frstor
ror
fnsave
jmp
mov
jno
sti
sbb
repz
(bad)
sbb
sub
leave
test
retf
mov
sub
xchg
sub
mov
mov
stc
mov
or
mov
sbb
dec
sbb
fstp
mov
jnp
push
clc
test
aaa
clc
adc
test
cmp
cdq
mov
movs
adc
in
cdq
jae
mov
jle
lahf
cmp
xor
pop
inc
or
pop
and
in
shr
lds
stos
in
mov
mov
test
sti
jmp
lahf
out
imul
mov
sub
retf
mov
icebp
ror
lea
repnz
push
ret
mov
aad
(bad)
sar
cmp
mov
jae
clc
lahf
shl
(bad)
stos
les
outs
add
frstor
mov
pop
out
test
scas
xchg
dec
xchg
movs
loopne
inc
lea
xchg
xchg
fninit
cld
femms
push
sbb
sbb
dec
arpl
nop
leave
and
jnp
out
cmc
fild
jmp
out
jge
or
cmc
pause
outs
(bad)
shl
jbe
scas
(bad)
xor
and
test
(bad)
cmps
xor
retf
lea
loopne
cmp
retf
cwde
call
aas
inc
data16
and
sar
div
mov
cmp
mov
mov
sub
or
xor
hlt
std
and
dec
adc
adc
push
icebp
push
movs
pop
or
call
sahf
dec
scas
pop
ficom
and
add
scas
ret
inc
dec
popf
push
or
aam
out
cmp
stos
imul
sub
pop
mov
cmp
into
fdivr
lods
aam
mov
ss
push
mov
rol
hlt
cmp
lods
ret
push
mov
adc
test
add
test
rcl
add
and
rcl
bound
pop
fldcw
in
out
pop
xor
iretw
inc
and
cli
jl
js
sbb
cmp
arpl
mov
fcomp
aas
imul
(bad)
stc
mov
icebp
xor
ins
mov
pop
jnp
rol
ins
ja
jge
cmp
mov
(bad)
mov
(bad)
adc
push
rcl
xchg
lds
pop
sbb
test
fld
aam
sub
cmp
jo
cld
push
mov
pop
inc
xchg
inc
push
nop
std
lahf
aad
scas
movs
jle
dec
cmc
mov
xchg
sbb
js
movs
or
fisub
sub
aaa
retf
mov
xchg
cmps
fstp
push
xchg
popf
iret
fidivr
fdiv
xchg
mov
ret
mov
xor
neg
and
fdiv
popa
imul
jge
stos
aaa
mov
popa
cmps
rol
jbe
bound
ds
hlt
cmp
adc
sub
push
dec
shl
jge
or
ins
sbb
push
jp
cmp
push
shl
xchg
jnp
cmp
inc
movs
mov
cwde
add
mov
pusha
lds
test
cmc
cmp
cwde
xchg
xchg
mov
inc
std
mov
push
shl
jns
aaa
loopne
mov
repz
movs
daa
mov
pop
pop
xor
add
inc
(bad)
adc
xlat
add
scas
sbb
xchg
xchg
add
xlat
push
fsub
fisubr
ror
inc
movs
xchg
shr
mov
out
mov
pop
(bad)
hlt
mov
std
lods
lea
cli
in
imul
lahf
fst
(bad)
cmc
loop
lahf
mov
retf
loopne
call
jmp
ins
sub
jl
lods
add
add
imul
daa
sub
xchg
pop
and
jle
jp
loop
cmp
push
in
jp
lods
push
pusha
cmp
mov
cld
pop
into
sbb
inc
scas
test
int3
lods
rcl
int3
push
jle
aad
sub
out
dec
push
pushf
push
push
das
jns
jg
or
dec
mov
iret
pop
jge
add
or
jne
jno
test
jecxz
mov
mov
inc
jg
and
pop
xchg
cmps
or
stos
jl
ret
rol
mov
mov
and
xor
dec
mov
cmc
int3
call
xchg
pop
mov
jae
inc
adc
aam
jmp
inc
stc
push
fcompp
or
dec
div
jmp
mov
jno
scas
ds
xchg
inc
fnstcw
cmp
in
pop
push
push
fst
dec
cmp
rol
fld
sub
ret
sbb
mov
push
pop
imul
inc
add
mov
ins
aad
outs
xor
imul
call
mov
dec
pusha
inc
into
xlat
or
push
add
out
mul
sub
mov
mov
and
test
mul
test
in
(bad)
and
dec
push
dec
repnz
test
xchg
gs
dec
sti
arpl
addr16
out
xchg
jno
neg
out
lods
cmp
ds
jae
shl
cmp
repz
jns
es
inc
pop
lea
outs
or
fdiv
scas
xchg
add
adc
arpl
fild
test
mov
and
push
leave
adc
pop
push
cs
jp
add
ss
xor
lea
or
in
pop
mov
push
or
and
fild
imul
or
sub
push
or
inc
dec
adc
adc
dec
push
xchg
cmp
inc
rcr
adc
sbb
cs
int3
aad
test
ret
mov
pop
(bad)
ins
sti
mov
iret
cmc
dec
xchg
sub
jnp
fidivr
and
out
js
dec
sbb
mov
pusha
pusha
lods
pop
cmp
xchg
push
std
and
and
xor
mov
pop
data16
xlat
dec
dec
stos
lock
mov
adc
shl
rcr
(bad)
adc
pop
(bad)
xchg
js
pop
nop
jno
xlat
xor
call
int3
mov
sub
js
adc
mov
mov
pop
add
in
shl
push
(bad)
pop
pop
jl
fldcw
mov
ss
and
xchg
sub
retf
stc
in
sub
pop
jo
stos
shl
adc
mov
jb
dec
jecxz
mov
jp
dec
or
mov
cmp
call
mov
fst
xchg
lock
test
mov
test
xor
aas
fidivr
fnstsw
xchg
pop
cmp
mov
inc
cmp
fst
jge
setbe
test
jae
mov
mov
dec
jg
enter
clc
cld
fcmovne
fild
cmps
ja
mov
stos
in
lods
sahf
cmc
xor
rol
les
mov
xlat
rol
jle
lods
hlt
ja
sbb
xor
mov
xchg
mov
sti
adc
test
pop
js
in
dec
mov
mov
rol
test
fsub
lods
lds
lods
pop
arpl
push
pop
repz
ja
ret
out
loopne
pop
or
pop
int
dec
jmp
shl
sbb
enter
lods
mov
bndldx
outs
mov
jg
addr16
push
add
inc
jo
push
sahf
(bad)
pop
add
lods
inc
ins
sbb
call
cmp
mov
vxorps
mov
jmp
ss
fdivr
mov
or
mov
call
pop
cmp
inc
mov
cld
jg
xlat
dec
retf
loope
dec
or
out
dec
paddsb
in
mov
sub
xchg
enter
mov
fs
test
icebp
pop
adc
movs
inc
jbe
mov
stos
push
or
dec
arpl
mov
movs
inc
mov
jno
(bad)
sbb
and
(bad)
andps
fiadd
xchg
adc
push
icebp
out
mov
retf
in
push
or
in
pop
(bad)
in
mul
push
cmp
imul
lea
fisub
xor
pop
mov
frstor
shr
call
pop
stc
dec
adc
mov
test
loopne
mov
jl
xchg
and
rcr
or
loopne
jecxz
lock
cmp
retf
movs
shr
inc
or
bound
aad
aad
mov
fisub
jmp
push
cs
in
not
dec
sub
and
push
in
or
xor
fcomip
stos
add
ret
push
je
inc
(bad)
push
cmp
ret
and
retf
lea
inc
jae
push
cmp
(bad)
cmp
in
mov
scas
sar
ror
push
repz
push
fs
cmc
xor
psrlw
cmp
xor
xchg
push
ja
and
mov
xchg
push
sahf
push
jae
pop
push
sub
sbb
(bad)
mov
sub
aad
mov
out
fnstcw
mov
sti
pop
test
xchg
jge
(bad)
sub
fnstsw
mov
jle
in
retf
aas
sbb
cmp
adc
push
sub
sub
or
push
mov
cmp
test
jmp
pop
pusha
sbb
pop
sbb
mov
outs
div
cdq
push
push
push
(bad)
loope
and
loop
int
fwait
dec
push
ja
loope
loop
sub
repnz
inc
mov
fbld
movs
ins
dec
dec
icebp
dec
mov
and
pop
add
pop
jnp
fucomi
ins
sbb
jl
mov
imul
sbb
and
pop
pop
ds
and
adc
mov
push
daa
mov
ss
aad
stos
jmp
shl
scas
add
add
mov
push
sbb
icebp
pusha
retf
aam
mov
aam
repnz
xchg
scas
mov
and
fsubr
xor
test
and
mov
pop
jecxz
inc
loop
sub
inc
add
push
imul
cmp
add
push
pop
pop
push
xor
sub
outs
bound
cmp
repnz
add
ins
cmp
(bad)
cld
cmovbe
or
dec
mov
dec
cmc
mov
arpl
inc
mov
inc
mov
mov
hlt
shr
jle
sub
xor
in
repz
les
cwde
inc
jno
jb
mov
loope
aad
je
fisttp
sub
lds
dec
inc
test
icebp
fild
mov
cmp
sub
dec
(bad)
jbe
sbb
mov
(bad)
dec
push
in
sub
clc
push
cli
inc
cli
les
lock
sti
int3
mov
scas
adc
test
pushf
xchg
sti
adc
jle
pop
mul
mov
cs
jb
jecxz
sub
adc
ins
dec
ins
add
sahf
xchg
sbb
pop
jne
sub
ret
dec
pop
or
fwait
adc
mov
stos
jo
(bad)
js
mov
retf
cdq
add
pop
aad
cmp
fwait
mov
inc
push
out
cmps
test
jb
xchg
scas
sbb
push
sub
ds
pop
add
std
leave
das
or
scas
(bad)
fdivrp
inc
xchg
arpl
sti
mov
cmc
loope
mov
inc
cmps
xor
enter
push
cmc
jno
jb
mov
inc
sub
pop
mov
xor
sub
and
sub
retf
add
std
xchg
(bad)
and
or
inc
mov
ds
xchg
jns
(bad)
nop
push
sar
cdq
into
hlt
or
push
mov
leave
(bad)
(bad)
jns
pop
fs
cmc
jns
(bad)
sbb
mov
sub
cdq
jb
push
mov
mov
lods
add
jne
mul
mov
xor
gs
add
inc
ret
cmps
push
pop
dec
xchg
aam
mov
and
push
pop
test
sub
adc
stos
ret
push
fidivr
fmul
stos
jecxz
cli
rol
adc
mov
or
nop
jp
mov
out
pushf
xor
ret
ins
mov
jnp
hlt
inc
pop
pop
out
lods
dec
jae
pop
rcr
add
jnp
jnp
jge
or
lods
jmp
loope
push
bound
jns
inc
out
sbb
and
(bad)
(bad)
cli
inc
int3
xchg
ret
dec
gs
pushw
cs
add
cmc
pop
inc
and
arpl
pop
std
mov
retf
mov
inc
scas
xchg
es
and
lods
fmul
retf
jne
lea
mov
jp
aaa
inc
popf
fsqrt
sar
cmp
lods
ja
push
clc
movs
xor
adc
jle
mov
jmp
cmp
shr
fbstp
clc
int3
out
pop
cmp
inc
mov
cmc
iret
in
pop
mov
mov
call
les
push
and
sahf
std
ror
arpl
xchg
(bad)
jno
shl
shr
movs
inc
sub
into
js
retf
(bad)
cdq
leave
call
adc
or
and
(bad)
dec
fsub
pop
mov
mov
scas
jmp
sbb
xchg
(bad)
mov
jge
(bad)
out
ret
or
xor
and
shl
jmp
push
sub
adc
mov
cs
jmp
ja
and
pop
cld
adc
push
jno
mov
pop
or
inc
fistp
xor
sub
add
mov
add
jne
push
sub
mov
push
inc
(bad)
cld
pop
scas
mov
sub
pop
mov
sbb
pop
add
jge
xchg
push
imul
outs
lods
add
mov
adc
gs
aad
jmp
sub
add
test
pop
std
fwait
mov
test
inc
and
repnz
hlt
aaa
repz
cs
mov
xchg
jmp
sar
xor
retf
xor
adc
inc
sbb
es
mov
dec
jae
pusha
mov
inc
or
popf
mov
dec
and
gs
lahf
push
sbb
adc
call
into
test
jnp
in
ins
ja
idiv
add
dec
add
and
(bad)
fstp
dec
mov
sbb
jo
out
call
ror
int3
ret
ret
ret
mov
mov
or
loopne
or
add
sbb
out
or
pop
mov
retf
daa
test
sbb
adc
push
faddp
dec
or
pusha
or
push
in
jb
(bad)
mov
dec
jg
in
jmp
inc
inc
lods
xchg
enter
cmp
mov
nop
adc
repnz
or
pop
shr
mov
pop
or
je
inc
jne
inc
popa
adc
ret
cmp
and
jne
jmp
jg
xchg
gs
push
in
retf
in
aas
inc
fstp
imul
mov
call
and
ja
jg
arpl
nop
jo
test
rcl
and
pop
or
sub
jmp
sub
adc
mov
xor
and
data16
scas
jno
(bad)
sub
imul
xlat
xchg
or
shl
add
jl
jo
cwde
movs
mov
cmp
dec
mov
sub
and
jb
cmps
sbb
jecxz
(bad)
popa
dec
xor
and
xchg
xor
frstpm(287
(bad)
test
pop
jno
stc
or
mov
jmp
xor
pop
repnz
or
bound
sub
not
cdq
sub
out
ins
sub
push
out
repnz
aam
dec
mov
mov
int
into
les
mov
cwde
add
pop
inc
popf
gs
sahf
loopne
leave
lock
pop
or
pop
xchg
dec
fimul
mov
xchg
sbb
aas
jp
push
xor
xor
sub
enter
pushf
ss
push
idiv
in
inc
into
push
sahf
xchg
sub
inc
hlt
pop
popa
(bad)
sti
scas
sahf
daa
rcr
call
and
push
hlt
(bad)
out
pop
adc
pop
lods
mov
call
retf
mov
adc
adc
xchg
sar
add
pop
ret
adc
fs
mov
jne
jecxz
xor
out
pop
jmp
inc
pop
out
cmps
adc
into
pop
pop
mov
or
pop
mov
mov
js
pop
js
push
push
mul
xchg
ja
(bad)
sub
inc
sbb
out
sbb
mov
mov
cmp
(bad)
cmp
mov
test
jns
in
jo
jmp
cmp
mov
es
aad
sub
sbb
pop
jmp
sar
add
ins
scas
int
movs
je
push
(bad)
and
sub
imul
shl
sub
add
xchg
inc
sub
adc
movs
aas
and
push
and
rcr
cld
mov
jne
sub
into
mov
inc
shl
or
lahf
js
aaa
xchg
bound
loope
icebp
loope
rcr
scas
dec
ja
cmc
push
xchg
and
mov
iret
mov
add
xor
push
pushf
add
inc
push
mov
sub
pop
rol
nop
inc
leave
mov
movs
mov
ins
daa
pushf
adc
cdq
je
mov
xchg
adc
adc
jge
scas
fild
adc
jo
test
mov
pop
aaa
je
sub
ret
lods
(bad)
fld
pop
push
ror
adc
xchg
jbe
aam
pop
and
outs
pop
jl
cmp
xchg
jl
mov
cmp
aas
hlt
xchg
mov
sahf
mov
retf
jmp
cld
push
cmp
or
xchg
mov
fidivr
cmp
les
ss
adc
test
jne
push
xor
popf
je
loope
mov
popa
or
and
hlt
dec
jmp
dec
push
sub
push
mov
push
push
in
mov
mul
push
mov
ds
cmps
ss
movs
dec
cmp
dec
cli
mov
fstp
mov
mov
xlat
mov
mov
fwait
push
push
cmp
arpl
and
cmp
sbb
adc
xor
imul
mov
loop
rol
outs
sbb
ror
iret
aam
pop
push
add
adc
mov
div
inc
jno
jle
or
push
call
cld
out
jne
in
mov
stos
jmp
cmp
out
sahf
std
shl
pop
ror
push
adc
push
pop
mov
and
add
mov
mov
lds
xchg
addr16
jns
imul
retf
xchg
xchg
sti
scas
test
sbb
cmps
(bad)
cmp
mov
push
dec
nop
sbb
cmp
push
sbb
inc
sar
jne
mov
mov
mov
jmp
sub
shl
push
ror
fisttp
and
js
lea
mov
inc
(bad)
pop
mov
pop
jno
mov
sub
test
fisubr
ins
mov
call
fwait
mov
fistp
and
hlt
add
and
and
popa
sbb
test
test
dec
and
ret
mov
fs
jg
mov
jge
out
sbb
mov
cmp
or
lahf
push
fcomi
jno
jnp
les
das
dec
push
(bad)
imul
jge
dec
or
push
cmc
jo
sub
cdq
repnz
pop
inc
(bad)
ja
pop
retf
shl
cld
and
mov
and
and
pop
je
xchg
jae
push
inc
ret
sahf
sbb
pop
sbb
data16
retf
ror
mov
shl
clc
push
xor
jbe
cmc
mov
pop
push
or
call
adc
mov
xchg
mov
rcr
cs
xor
dec
outs
pop
ins
xchg
lock
stc
iret
iret
retf
nop
cli
add
adc
sub
pop
cmp
sbb
adc
sub
inc
cmp
and
inc
push
pop
jp
cdq
pop
lds
xor
sub
enter
adc
(bad)
mov
neg
mov
loopne
bound
xor
lods
add
sub
int3
xchg
mov
bound
ja
dec
(bad)
push
aaa
dec
push
inc
out
fcomip
sti
adc
sbb
xor
sbb
imul
sbb
mov
imul
out
jle
retf
pop
mov
sahf
paddw
sbb
sar
js
stos
add
xor
ror
hlt
jae
mov
icebp
dec
mov
fcmovb
je
in
add
adc
xchg
push
sub
fstp
pop
jae
movs
cwde
push
add
inc
(bad)
xchg
add
inc
int3
fs
xchg
xchg
pop
movs
jbe
and
and
bound
mov
mov
or
sar
mov
(bad)
jns
xchg
enter
shl
inc
xchg
ja
daa
fmul
inc
jp
cmp
inc
mov
stos
ret
mov
in
ret
ss
sbb
mov
sbb
mov
ja
inc
ins
neg
xor
push
ret
lock
push
(bad)
loope
sub
xchg
adc
(bad)
out
jno
xor
call
imul
hlt
(bad)
cmp
movs
movs
rdtsc
clc
dec
test
dec
test
je
add
mov
push
mul
push
in
add
test
je
jp
xor
add
cli
sti
inc
sbb
pminub
cmp
push
imul
test
pop
cmp
stos
jnp
push
or
lahf
sti
rcl
and
cmc
xchg
iret
cmp
loopne
loopne
sub
inc
ds
fwait
ins
sti
or
(bad)
cmp
mov
mov
or
sbb
jbe
push
push
push
adc
xchg
call
cdq
mov
sahf
popf
dec
or
mov
ja
daa
hlt
mov
push
cmps
fcom
pushf
push
je
retf
loope
jg
lods
jmp
push
push
sbb
pop
and
push
ins
cmp
outs
imul
pop
stos
fidivr
mov
rcl
in
mov
xchg
mov
dec
mov
or
icebp
inc
add
cmp
mov
dec
xchg
add
mov
adc
push
cmp
stos
inc
mov
lahf
ss
xor
test
and
push
and
inc
mov
push
dec
xor
xchg
xchg
(bad)
loopne
dec
stos
scas
pusha
sub
push
adc
rcr
or
fdiv
out
out
adc
jle
lods
add
and
mov
dec
lea
xor
icebp
jecxz
(bad)
pop
loopne
mov
xchg
ds
or
clc
test
data16
pop
mul
in
pop
jae
cli
int
imul
inc
jns
inc
pop
not
bound
dec
cmp
xchg
je
mov
cmp
mov
stc
scas
and
in
add
jge
pop
sub
test
add
push
lock
gs
daa
rcr
xchg
repnz
cmp
jmp
add
and
cmp
gs
and
lods
repnz
int3
(bad)
mov
data16
or
stos
mov
ret
pop
inc
jp
fmul
and
pop
ret
and
sbb
sub
add
or
cwde
jne
cld
mov
and
jl
jno
cmp
pop
pushf
jg
popf
les
bound
sub
out
xlat
or
cmp
mov
xor
movs
shr
clc
mov
push
sbb
jp
push
ret
je
cmps
push
push
push
xchg
push
mov
mov
fidiv
test
inc
mov
sbb
sbb
test
lea
popf
and
jl
mov
and
or
inc
pop
cmp
jb
sub
jmp
sub
cli
or
pop
test
scas
dec
pop
jns
cmp
mov
cmc
call
or
xchg
cmp
(bad)
jecxz
push
fs
sub
mov
es
pop
das
xor
add
ins
adc
stos
(bad)
mov
arpl
dec
jp
aas
and
xlat
mov
jp
adc
sbb
or
(bad)
(bad)
fnstcw
jl
add
(bad)
xchg
dec
jp
scas
outs
rol
in
cwde
(bad)
out
(bad)
push
pop
adc
test
sbb
arpl
cli
inc
enter
dec
xchg
inc
in
in
pop
rcl
or
sub
sbb
repnz
imul
add
lea
les
into
mov
or
or
rcl
gs
jmp
stc
pop
ins
(bad)
pop
push
sbb
push
hlt
jne
mov
in
mov
or
pop
gs
push
popa
xor
lods
sbb
loop
shl
and
outs
retf
ficom
add
das
mov
clc
sub
sti
lock
add
rol
shl
cwde
pop
pop
inc
xor
pop
jae
stos
cli
rol
inc
jp
mov
pop
and
gs
adc
sub
fst
inc
in
sub
jge
adc
inc
mov
rcl
out
jge
and
pop
xchg
outs
pushf
pop
pop
add
mov
rol
jecxz
mov
pop
inc
xchg
hlt
sub
mov
scas
push
mov
mov
nop
mov
shl
hlt
fist
push
cmp
and
aad
cmps
out
inc
push
xchg
je
daa
dec
cmp
nop
pop
sbb
das
xchg
mov
mov
fist
add
cmp
mov
jle
mov
ds
int3
inc
push
rcr
jge
ds
dec
cmp
adc
(bad)
mov
and
outs
mov
pop
adc
sbb
mov
inc
clc
pop
hlt
das
add
and
push
sbb
pop
call
dec
pause
jmp
mov
or
(bad)
or
aad
adc
jmp
fs
aam
lahf
push
and
out
inc
jo
xor
mov
int3
ins
dec
ja
mov
sbb
add
nop
and
pop
jb
mov
inc
push
or
jmp
or
inc
aas
push
push
pop
add
cwde
repz
inc
inc
pop
call
cmp
repnz
sbb
xor
(bad)
mov
rol
retf
repz
ds
mov
pop
sub
push
jg
inc
inc
inc
pop
sbb
cmp
add
xchg
(bad)
xor
xchg
or
call
sbb
cmp
in
jbe
xchg
icebp
xor
xchg
data16
ins
xlat
es
mov
mov
pop
sbb
test
adc
dec
or
sbb
or
daa
sar
lock
pop
jmp
stos
jno
pop
sbb
lods
dec
into
imul
in
push
and
mov
pop
push
or
inc
(bad)
xchg
cmps
nop
bound
mov
and
addr16
mov
fidivr
les
lds
xchg
ret
sbb
lds
cwde
adc
leave
cmp
movs
sub
dec
adc
inc
add
leave
or
cmp
fwait
adc
sub
leave
pop
jg
std
lods
xor
repz
cmp
pop
mov
pop
adc
(bad)
mov
rol
lods
push
stos
and
loop
jne
sub
cld
(bad)
mov
or
daa
jecxz
xchg
push
jp
int
and
cli
fisubr
gs
mov
mov
jmp
aas
scas
cmp
dec
jb
cmp
aas
in
imul
lahf
and
xlat
in
popa
inc
stos
lods
(bad)
pop
or
jg
lds
dec
fs
push
adc
sub
inc
mov
in
test
mov
push
lods
aad
adc
(bad)
pop
mov
jge
outs
ret
mov
js
cmp
xor
mov
in
std
repz
fidiv
add
clc
iret
adc
or
bound
pop
(bad)
mov
fbstp
les
popf
jmp
bound
sub
aas
(bad)
dec
or
mov
jle
xchg
push
fwait
cmps
xchg
les
and
or
ins
push
je
jg
retf
pop
stos
pop
dec
sbb
push
xchg
imul
push
pop
fs
jmp
or
sbb
es
cmp
dec
in
sbb
mov
aaa
xchg
and
jbe
push
lahf
in
push
jns
mov
add
or
push
xor
imul
and
xchg
mov
popa
mov
and
imul
push
or
mov
scas
iret
(bad)
(bad)
sti
cwde
imul
sub
add
push
bound
mov
icebp
jp
xor
cmps
mov
ret
lods
je
push
sub
lods
outs
rol
jne
mov
(bad)
(bad)
xchg
fld
xor
test
(bad)
fsubr
and
(bad)
out
pop
push
and
inc
mov
aam
out
ja
xchg
or
inc
xchg
add
inc
jae
or
mov
sub
in
mov
loope
stos
push
enter
add
iret
dec
fbstp
ucomiss
add
scas
add
jle
out
mov
inc
mov
jl
stos
adc
pusha
fs
cmp
leave
dec
mov
mov
jnp
push
in
pop
fdivr
push
leave
xor
mov
cmp
dec
cmp
cdq
ret
aad
aaa
call
jp
jmp
fbld
dec
outs
sbb
jmp
nop
pushf
retf
shl
retf
aad
jmp
pop
sub
jg
in
ds
js
into
inc
aam
dec
mov
popf
aaa
mov
pop
adc
test
dec
cwde
mov
push
or
test
mov
push
add
jg
and
mov
sub
push
mov
aam
jnp
daa
pop
test
dec
add
lea
xchg
mov
hlt
dec
test
movs
xor
mov
pop
cmp
leave
push
push
clc
es
pop
add
pushf
out
out
push
fmulp
sbb
cmps
cmp
push
inc
add
pop
jge
xor
test
cmp
data16
cwde
adc
lods
dec
cmp
jae
add
int
xchg
jmp
pop
ss
jb
rcl
push
push
outs
movs
and
loope
sbb
add
cdq
retf
(bad)
leave
leave
inc
mov
push
out
pop
es
xchg
sub
xchg
daa
sbb
adc
inc
int
adc
jge
cmp
mov
mov
inc
jp
mov
jae
sbb
jp
je
mov
cmp
mov
int3
loopne
dec
add
test
push
into
pop
push
loope
adc
jno
enter
jb
mov
in
imul
add
fild
push
dec
int3
inc
dec
fild
(bad)
mov
fwait
outs
rol
xchg
pop
xchg
or
aas
inc
xlat
ret
aad
outs
scas
repnz
inc
cmp
pop
loop
ss
fcomp
push
or
jns
jmp
xor
fmul
fmul
ss
xchg
into
repz
test
popa
stc
(bad)
in
mov
cmps
sbb
jns
adc
sbb
jb
repnz
and
aad
push
mov
sub
sbb
repnz
repnz
sahf
add
stos
fcmovnu
clc
lds
mov
pop
shl
jnp
iret
aas
or
out
xor
cdq
je
loope
jecxz
leave
add
push
or
and
push
ffree
xchg
rcr
xchg
xor
imul
ins
or
jl
dec
mov
mov
mov
pop
scas
ret
and
push
or
pop
pusha
repz
jnp
lock
cmp
inc
hlt
aam
xor
sub
sbb
mov
sbb
loope
(bad)
test
mov
push
push
dec
xchg
imul
sub
test
xor
add
in
je
mul
lods
jb
test
lea
and
sub
retf
fs
mov
aam
popa
dec
xor
mov
rcl
add
mov
inc
add
jmp
jl
add
out
ss
and
xchg
push
ds
xchg
cmp
popa
or
mov
pusha
and
cli
in
adc
repnz
mov
push
test
push
jo
pop
xchg
pop
push
jmp
add
mov
out
test
dec
jg
frstor
cs
inc
fistp
jnp
out
mov
test
(bad)
mov
push
fldz
sbb
xchg
fcomp
dec
jae
lods
xlat
mov
cs
and
es
dec
call
push
cs
add
js
jl
adc
sub
aam
es
retf
(bad)
jmp
jo
dec
lods
cmp
push
shl
andps
or
sub
add
inc
dec
xchg
push
mov
adc
cmp
iret
jp
(bad)
repz
adc
jle
jge
scas
cli
adc
pop
push
leave
test
aas
adc
sbb
xor
repnz
sahf
fild
scas
jo
out
push
jno
stc
shr
xchg
pusha
xchg
sbb
or
jge
int
adc
jb
pop
and
(bad)
inc
sub
mov
push
pop
push
and
repz
dec
cmp
mov
ss
xor
cmp
(bad)
in
arpl
inc
inc
sub
loopne
jbe
adc
rcl
mov
inc
lahf
retf
cs
xchg
es
movd
stos
and
ret
cmp
std
inc
cmp
inc
adc
sbb
ror
push
inc
push
sahf
lods
sbb
dec
mov
fcmovnu
mov
push
rcl
and
in
jecxz
popf
jbe
retf
dec
rcr
or
mov
sub
xchg
mov
popa
sti
pop
pop
push
retf
movs
sub
adc
sbb
add
cwde
pop
sub
or
rol
jmp
imul
dec
nop
pop
push
dec
ret
mov
movs
(bad)
push
xchg
push
data16
repnz
xchg
in
pop
and
stos
push
dec
outs
(bad)
mov
into
(bad)
pushf
mov
fisubr
pop
fistp
xchg
repz
jb
test
repnz
and
mov
fbstp
movs
rcl
call
jo
popf
out
aaa
lahf
push
loopne
ficomp
fbld
sar
and
mov
fld
call
loopne
addr16
stos
imul
test
mov
inc
inc
push
jmp
jmp
cmps
outs
cmc
adc
jecxz
xchg
sbb
jg
jne
dec
pushf
sbb
add
adc
adc
sbb
jbe
aas
fsub
cmc
leave
jne
sub
mov
bound
fisubr
mov
das
adc
xor
add
adc
jb
add
cli
clc
xchg
imul
xchg
adc
push
cdq
dec
div
add
cdq
jg
inc
test
retf
sub
jo
stos
rol
lods
repnz
add
mov
jno
fbstp
js
leave
out
mov
(bad)
(bad)
cmp
mov
and
jb
mov
shr
lahf
dec
or
rol
mov
sub
lds
mov
ret
inc
or
xchg
xchg
stos
enter
mov
pop
in
pusha
fidiv
sbb
loope
push
stos
or
hlt
(bad)
and
jmp
push
inc
push
les
outs
add
rol
addr16
cmovb
dec
fs
or
jmp
outs
cmp
lods
dec
ins
jns
push
retf
popa
movs
mov
mov
sub
dec
fist
jp
jb
shl
mov
test
xor
mov
fcmovnb
lods
gs
mov
pop
into
jge
sub
rcl
jmp
xor
xor
sub
fist
cmp
fadd
sub
repz
push
inc
rol
neg
add
cmp
mov
aam
inc
mov
inc
sti
clc
test
jmp
aam
mov
ret
ja
jb
adc
addr16
cwde
and
mov
push
xchg
cmp
push
cmps
ins
stos
inc
push
cmps
add
shr
rcr
sbb
ror
retf
ficom
or
push
cld
cmp
sahf
(bad)
pop
xchg
and
jne
push
mov
inc
js
add
jmp
xor
add
or
(bad)
imul
hlt
fs
push
mov
add
or
add
add
cmc
or
(bad)
(bad)
shr
pop
xor
test
mov
rcr
push
xchg
xor
outs
dec
sbb
mov
lds
(bad)
std
mov
cli
and
dec
ud2
xchg
xchg
push
rcr
test
dec
inc
hlt
lods
clc
jecxz
retf
push
or
(bad)
ja
inc
mov
xor
xchg
(bad)
sbb
mov
ror
imul
out
xchg
sub
cmps
mov
popa
jle
int3
pop
mov
push
imul
add
int3
push
cwde
lds
(bad)
adc
std
push
fcmovu
jg
cs
addr16
mov
dec
fucomip
stc
lea
and
stc
or
mov
test
outs
adc
sub
or
push
ret
(bad)
rcl
cdq
xor
inc
add
icebp
leave
xor
jg
xor
inc
scas
fwait
add
jno
dec
adc
mov
xchg
mov
sub
jnp
hlt
dec
je
push
push
xor
jmp
sub
out
je
xchg
mov
sbb
inc
mov
push
mov
mov
mov
data16
pusha
ret
push
out
and
cmp
(bad)
pcmpgtd
jp
push
int3
push
inc
cwde
fisub
jb
pusha
cs
(bad)
push
pusha
outs
lock
mov
in
or
mov
das
or
fstp
mov
int
xlat
rcl
out
xlat
inc
outs
xchg
dec
push
(bad)
dec
xchg
cmp
test
hlt
rol
mov
add
xlat
push
push
jle
pop
xchg
in
mov
and
xchg
pop
xor
sbb
cmp
xor
sub
cmp
sar
lock
mov
fstp
dec
sub
mov
stos
push
bound
cwde
fadd
cli
push
(bad)
fst
jl
cmp
shl
inc
cdq
iret
nop
xor
sbb
inc
loop
aam
push
or
adc
or
push
mov
movs
inc
imul
fwait
hlt
adc
xor
push
(bad)
jno
push
xchg
adc
push
mov
dec
adc
pop
mov
inc
push
xor
and
call
(bad)
imul
out
(bad)
sbb
loop
in
push
adc
mov
adc
push
popa
push
popa
sar
out
jmp
ret
sub
cdq
hlt
out
pop
pop
dec
mov
js
push
inc
(bad)
sti
mov
adc
xor
lds
scas
cdq
add
ins
pop
add
jbe
jno
mov
xchg
lods
inc
jmp
add
push
xchg
mov
pop
dec
(bad)
cli
pushf
dec
dec
inc
mov
mov
test
adc
imul
out
mov
xchg
xlat
ret
pop
je
sub
fadd
xchg
dec
adc
shl
fbld
mov
arpl
push
nop
jmp
das
aas
repnz
and
xchg
imul
mov
mov
jo
test
jmp
mov
test
xor
push
or
jo
test
sub
out
inc
mov
std
dec
and
dec
gs
cmps
retf
or
adc
ins
mov
test
jb
adc
imul
rcr
push
out
(bad)
cmp
cmp
imul
pop
mov
or
dec
mov
fadd
adc
adc
inc
jb
jg
push
cmps
aas
fucomp
inc
dec
mov
push
pop
mov
jmp
dec
jno
mov
jae
jbe
rol
sub
pop
repnz
dec
add
in
push
pop
xchg
or
jbe
dec
es
(bad)
rcl
jge
or
push
out
adc
and
cmp
xor
mov
(bad)
mov
or
dec
dec
cmp
sbb
adc
frstor
cmp
and
scas
dec
cmp
cmp
jo
ror
mov
or
ja
add
dec
jge
cwde
mov
sbb
xor
and
mov
and
or
outs
xchg
cmps
pop
cs
fs
jmp
outs
add
test
push
push
les
les
mov
or
jmp
dec
xchg
call
mov
push
mov
sub
jecxz
inc
mov
push
outs
xlat
in
or
or
into
adc
mov
rol
push
test
pop
icebp
xor
inc
pop
sti
mov
retf
xchg
fwait
mov
mov
mov
(bad)
fisubr
inc
xor
mov
xor
(bad)
retf
cmc
in
mov
repnz
sar
inc
sti
jecxz
push
mov
in
mov
test
faddp
sub
aad
stc
push
sub
sub
sub
jge
scas
sahf
xchg
xor
stos
or
adc
sbb
cdq
xchg
stc
sbb
enter
shl
test
push
xchg
cmp
jmp
ror
dec
test
xor
jp
sbb
scas
push
and
dec
cmp
xor
mov
pop
jne
mov
ret
jbe
stc
(bad)
push
add
push
cmp
push
add
jecxz
pop
mov
repnz
mov
mov
test
mov
inc
jmp
fadd
daa
jg
dec
(bad)
pushf
pop
mov
out
mov
jp
cmp
or
stc
xor
inc
jae
loopne
loop
xchg
jmp
jnp
push
call
call
call
and
enter
sub
mov
jb
sti
mov
cwde
adc
aaa
popf
xchg
aam
add
hlt
fsub
icebp
repz
cmp
add
(bad)
int3
out
mov
dec
sahf
jge
or
(bad)
fadd
push
add
repz
shr
popa
fdivr
cdq
jne
iret
jo
(bad)
cmp
adc
mov
lods
inc
retf
mov
dec
pop
sbb
jle
pop
mov
mul
push
mov
push
lahf
gs
in
adc
adc
sar
pop
ds
stc
jmp
je
enter
sbb
mov
jbe
shl
jp
in
sub
scas
mov
shl
lock
inc
hlt
mov
into
push
addr16
sbb
xor
in
xchg
and
daa
xchg
push
inc
cmps
pop
stos
inc
fld
inc
je
sub
retf
cmp
fwait
mov
repz
mov
mov
jnp
pushf
jns
sub
xor
pop
je
mov
dec
dec
xchg
mov
(bad)
fild
push
mov
xor
bnd
lods
loopne
add
lahf
sub
inc
mov
aad
push
mov
or
loopne
iret
push
call
movs
enter
push
or
cmp
(bad)
lahf
test
dec
mov
adc
xchg
jp
or
adc
lods
push
stos
outs
imul
push
lds
mov
imul
leave
cmp
jbe
in
(bad)
sub
(bad)
out
adc
mov
push
jecxz
xchg
mov
fwait
and
adc
xor
push
pop
xchg
outs
test
jge
scas
sub
fld
xchg
lahf
aaa
push
inc
test
lea
mov
or
or
ss
adc
mov
mov
pop
and
xor
jg
sub
mov
xchg
inc
iret
xor
add
iret
aad
(bad)
jnp
enter
sbb
mov
dec
push
nop
jbe
xchg
mov
aad
daa
mov
hlt
jge
outs
dec
loope
adc
and
adc
cmc
dec
adc
fmul
scas
jae
xor
mov
rcl
test
sahf
cwde
mov
shl
mov
add
add
repz
dec
jp
lods
mov
inc
stos
and
sar
mov
fdiv
inc
out
sbb
adc
adc
stos
cmc
iret
push
data16
push
jb
sub
xchg
les
pop
cmp
aad
xor
retf
and
and
imul
hlt
stc
arpl
clc
mov
pop
xchg
cmp
adc
jne
cmc
push
cmc
lahf
or
or
fidiv
les
or
repz
xor
inc
or
cdq
cwde
sub
inc
lock
stos
(bad)
xchg
cmp
add
imul
(bad)
lods
add
fwait
push
dec
enter
cmp
jno
lods
stos
mov
or
jae
ss
add
aaa
mov
mov
ror
cmp
xlat
sar
loope
imul
aas
xchg
lock
inc
cdq
(bad)
aas
mov
sub
pushw
xchg
mov
call
repz
or
push
dec
ret
or
iret
pushf
(bad)
sahf
fimul
sub
and
and
call
cmc
clc
test
pop
retf
push
mov
dec
sbb
std
cs
test
sub
xor
(bad)
mov
pop
jnp
mov
aaa
dec
(bad)
pop
mov
and
xor
mov
xchg
dec
mov
dec
push
sub
or
outs
mov
xchg
lahf
lock
xchg
aaa
hlt
push
je
(bad)
or
jmp
xchg
xor
sbb
stos
xchg
mov
mov
xchg
cmc
sbb
daa
inc
jmp
mov
mov
adc
sbb
sbb
inc
or
call
out
int3
ficomp
jno
shl
inc
adc
(bad)
sbb
push
sub
sti
add
mov
cmc
sahf
repz
mov
fisttp
lods
cmp
dec
sub
mov
std
xor
add
cld
and
fmul
fbld
int
add
dec
dec
ss
cmp
clc
pushf
adc
dec
mov
push
les
fwait
cli
clc
ins
add
adc
test
ins
outs
xor
dec
ret
inc
sbb
xor
loop
xlat
(bad)
fadd
mov
into
cmp
setns
call
cmp
sub
dec
bound
(bad)
fild
mov
js
xchg
jae
jg
push
ret
fcomp
jns
dec
dec
jmp
mov
out
xchg
cmp
jbe
stos
outs
jb
les
lods
mov
jmp
inc
idiv
push
mov
jbe
jbe
mov
mov
xchg
mov
dec
ret
test
popa
out
jmp
std
xchg
and
and
sar
fdiv
inc
in
and
adc
inc
imul
in
ror
repnz
cwde
sbb
cli
adc
lea
popa
popa
es
shl
jl
rol
int
pop
dec
shl
cmc
lahf
dec
into
scas
aaa
jmp
mov
mov
orps
push
mov
add
test
and
mov
mov
add
mov
cmp
cdq
cs
ins
dec
fsub
xor
fmul
test
add
sbb
stos
(bad)
sbb
inc
lods
popa
mov
popa
sub
xor
retf
movs
sbb
xchg
jle
cmc
bound
mov
sub
aas
aas
and
mov
push
or
xor
or
jne
es
(bad)
loopne
out
add
imul
jno
stc
mov
aaa
xor
add
adc
sbb
adc
adc
repz
adc
adc
dec
push
dec
push
and
and
xchg
repz
imul
xor
shl
adc
mov
inc
ins
imul
mov
cmp
stos
lahf
add
jge
pop
add
sbb
jb
scas
es
push
xchg
sbb
jecxz
pop
mov
cmp
fdivrp
out
add
ja
inc
fsubrp
shl
and
nop
xlat
sbb
fbstp
sahf
ins
pop
fwait
inc
stos
inc
popf
jmp
and
jmp
cmp
daa
mov
inc
lds
aad
popf
in
je
(bad)
loope
cmp
jne
aaa
and
xchg
inc
dec
add
loopne
adc
xchg
dec
loope
xor
push
mov
or
pop
movs
pop
aas
ror
sbb
cmp
cs
(bad)
jo
mov
(bad)
(bad)
repnz
cmc
test
data16
(bad)
jmp
loope
pop
fisubr
or
hlt
cwde
popa
push
fcomip
mov
xchg
push
xor
dec
xchg
stos
xchg
cmps
popa
retf
ds
push
cmc
stos
outs
sbb
imul
ins
loopne
dec
faddp
sbb
adc
xchg
shl
push
(bad)
mov
out
arpl
fdiv
push
cld
fidivr
mov
gs
sub
mov
pop
sbb
shl
retf
lea
mov
jnp
push
and
jmp
sbb
or
aad
mov
addr16
iret
mov
mov
dec
das
je
mov
mov
sbb
mov
xor
adc
pop
and
imul
je
sbb
cs
xchg
or
(bad)
mov
sub
pop
movs
out
(bad)
inc
push
(bad)
inc
mov
mov
push
repnz
mov
dec
mov
inc
fisubr
xor
mov
xchg
sub
mov
xchg
rcr
xchg
ja
retf
jns
jge
fwait
scas
sti
sub
cmp
cmp
sti
setbe
xchg
push
sbb
outs
les
test
xor
sub
sbb
jg
pop
and
fld
jae
jmp
imul
vpcmpeqw
xchg
aam
cwde
pop
inc
cmp
fs
jmp
mov
test
movs
add
jecxz
popf
mov
and
test
out
mov
push
aam
es
test
mov
xchg
pusha
loope
les
adc
arpl
lods
pop
cld
out
addr16
addr16
cs
or
mov
cmp
(bad)
pop
icebp
ja
or
stc
lods
add
rcr
push
dec
jmp
(bad)
out
out
add
retf
sbb
inc
fwait
add
cmc
icebp
inc
je
sbb
je
xchg
inc
mov
jmp
pop
mov
cmp
mov
arpl
mov
cli
out
pop
ror
call
nop
cmps
cmp
fmul
xchg
rcl
add
xor
iret
sahf
cmps
(bad)
xlat
repnz
sbb
scas
mov
out
out
jle
xchg
(bad)
addr16
xchg
emms
in
add
mov
inc
imul
loopne
rcl
adc
int3
mov
or
gs
scas
mov
test
mov
xchg
xchg
pop
rcl
retf
icebp
aad
jmp
mov
sbb
mov
cmc
mov
add
add
or
or
or
jmp
xor
pop
cmp
pop
inc
dec
mov
ret
movs
push
push
add
rol
inc
aaa
xchg
dec
daa
xchg
mov
and
pop
movs
adc
xchg
gs
jmp
xor
and
(bad)
mov
popa
push
lahf
sub
movs
xchg
repnz
fldcw
je
push
inc
push
cmp
push
repz
add
push
stc
test
add
xchg
mov
out
in
and
aas
cmp
and
sar
mov
jb
jnp
test
outs
cmps
ins
ret
xor
stc
add
adc
cdq
and
sub
push
cmc
js
or
rcl
mov
sub
and
sub
add
fsubr
mov
in
pop
stc
push
aas
mov
pushf
je
pop
ror
push
dec
mov
repnz
inc
in
xor
retf
adc
rol
xchg
scas
outs
fcom
dec
cmp
xchg
add
xchg
and
or
data16
mul
test
inc
dec
retf
test
mov
sub
into
cmc
nop
xlat
ret
mov
aam
cli
mov
aad
and
dec
pop
loope
(bad)
out
std
enter
sbb
mov
gs
or
in
pusha
push
aad
stos
les
loop
inc
inc
sti
mov
add
jl
mov
je
cmps
jge
mov
sub
or
int3
mov
and
aas
jp
mov
mov
test
into
(bad)
cdq
adc
(bad)
xchg
push
fidivr
dec
mov
movs
int
retf
jge
adc
(bad)
loopne
mov
xor
cmc
pop
jmp
fbstp
and
inc
adc
int
adc
fdiv
retf
push
cmps
stos
xlat
jecxz
ins
hlt
add
fs
jmp
mov
outs
jb
or
add
mov
adc
cmps
push
je
adc
aas
inc
push
push
aad
pusha
stc
fsubr
fwait
outs
(bad)
pop
sahf
mov
jle
push
xor
jg
fstp
xchg
dec
pop
jg
repnz
dec
xlat
fmul
in
daa
fldln2
cmp
jb
pop
mov
movs
or
jns
xor
(bad)
sub
repnz
dec
inc
xchg
add
dec
aad
(bad)
adc
arpl
dec
int
add
inc
xchg
imul
retf
scas
and
js
xchg
xor
add
add
jae
inc
dec
and
test
dec
js
push
push
cmp
pushf
inc
mov
cmp
icebp
aaa
mov
or
mov
enter
dec
add
inc
pop
aam
test
loopne
stos
mov
les
das
sub
es
xor
mov
test
sbb
ret
mov
out
pop
mov
add
movs
loope
dec
mov
retf
xchg
dec
sbb
mov
popa
inc
pop
and
aad
rol
mov
mov
mov
cmp
mov
es
push
dec
hlt
pop
call
popf
cmp
lods
jbe
mov
repz
adc
pop
ror
sbb
(bad)
push
lds
rcr
movs
sbb
mov
mov
cmp
dec
addr16
dec
das
out
xlat
dec
cmp
inc
jmp
ins
int3
outs
ins
out
fsub
pop
mov
sub
fild
jmp
imul
into
push
ss
add
mov
je
fadd
mov
fld
pop
jmp
and
jp
out
sub
cmp
mov
shr
(bad)
and
mov
imul
jle
sbb
mov
cs
stos
fisub
push
mov
or
hlt
in
into
add
ret
xabort
jae
pusha
xlat
int
adc
loope
sbb
dec
jmp
in
or
data16
sahf
sbb
sar
jbe
rcr
jnp
jge
test
fimul
jne
int
adc
(bad)
bound
push
push
add
jecxz
jns
scas
add
int
adc
mov
(bad)
inc
popf
addr16
pop
push
xchg
pop
dec
pop
pop
mov
pop
(bad)
jle
jno
push
cmp
sub
push
xchg
xchg
mov
xor
out
popa
sti
lods
in
sub
sbb
fst
shl
fwait
clc
repnz
add
or
mov
sub
enter
daa
cwde
enter
adc
bound
ins
loop
fstp
test
add
sub
gs
enter
jle
sbb
pop
adc
lock
dec
mov
push
ds
call
(bad)
aaa
inc
push
mov
leave
aaa
jle
out
jmp
mov
outs
(bad)
xor
xor
mov
mov
dec
mov
mov
push
bound
imul
mov
pop
mov
adc
lods
or
dec
or
fld
mov
mov
data16
mov
sbb
push
cmc
movs
xchg
int
daa
dec
xlat
pop
(bad)
lock
pop
lods
sbb
das
call
jne
dec
int3
je
cwde
jo
mov
push
dec
test
xchg
js
push
pushf
pop
sbb
push
sub
fldenv
jae
fwait
push
fstp
iret
mul
dec
mov
scas
adc
add
lods
rcr
add
xor
pop
ins
jne
pop
cs
lea
inc
mov
mov
test
call
inc
jmp
xchg
pop
add
ret
inc
arpl
jmp
ret
sbb
rcr
inc
jb
mov
jns
pop
jge
xchg
retf
dec
mov
mov
push
pop
add
push
js
scas
mov
pop
mov
sbb
jg
fmul
js
std
sti
mov
adc
shl
mov
jae
sub
call
imul
imul
test
lods
dec
sar
sahf
imul
push
and
fsub
sub
or
jp
pop
xlat
test
loope
ret
pop
movs
sbb
rol
xor
shr
dec
jg
cmp
popa
ins
jp
cmp
sbb
bound
cmp
or
push
sub
bnd
ret
aad
mov
outs
add
cs
inc
call
mov
mov
push
xchg
cmp
cs
int3
inc
hlt
push
jp
movs
pop
cmps
(bad)
dec
mov
xchg
addr16
pop
movs
stc
lods
xor
add
sub
sub
adc
es
or
pop
add
(bad)
loope
ret
mov
les
sbb
mov
sti
mov
test
ret
cmp
iret
popf
xor
cmp
add
push
add
retf
push
cs
imul
cmc
es
dec
pop
adc
cmp
mov
mov
inc
jno
add
(bad)
dec
xor
scas
(bad)
dec
retf
lea
pop
xor
jecxz
xchg
in
and
jno
dec
cmp
push
xor
out
lods
mov
in
iret
pop
fchs
xchg
loope
cld
sbb
rol
and
cmps
dec
xchg
mov
push
mov
inc
stc
rol
jae
int3
dec
sbb
pop
xor
fisttp
mov
ret
popf
mov
inc
add
mov
dec
in
daa
mov
fnstenv
pop
jg
bound
mov
or
cmp
adc
stos
(bad)
in
fcomp
in
hlt
sbb
ds
push
(bad)
int
push
pop
xchg
std
xchg
push
aas
add
cmp
jmp
inc
pop
push
ins
mov
(bad)
retf
xchg
aam
popf
aam
test
sbb
cmps
fist
add
ja
inc
jne
(bad)
fcom
loop
aad
es
out
fdivr
cld
lock
lahf
push
jl
repnz
inc
rol
jne
pushf
adc
inc
inc
inc
add
fild
mov
push
fwait
iret
mov
pop
cmp
jae
dec
aad
fcmovu
rcl
xchg
add
stos
repnz
add
mov
mov
inc
pop
jp
dec
aaa
loop
pop
ins
sub
in
adc
xor
push
movs
xor
jns
xchg
fsin
stos
adc
sahf
mov
jmp
push
cmp
sub
daa
jecxz
mov
pop
add
adc
sub
aas
push
cld
mov
ret
xor
je
lods
in
jmp
(bad)
jl
pushf
add
icebp
lds
out
das
jge
arpl
dec
sbb
mov
jg
sbb
xchg
cld
sub
or
in
pop
cmps
mov
sub
enter
fcomp
fstp
xor
(bad)
fdiv
push
scas
and
call
or
dec
add
add
pop
fidiv
xchg
pushf
mov
dec
xchg
ret
sbb
cmc
xchg
int3
or
test
mov
out
mov
mov
xor
sub
stos
add
arpl
rcr
(bad)
cmp
pop
inc
cmp
sbb
push
cld
js
aam
push
shr
mov
int
dec
ins
loope
inc
mov
jne
add
and
push
jbe
mov
mov
dec
clc
xchg
cmp
mov
mov
dec
ja
or
movs
xor
push
xchg
cdq
imul
shl
push
xchg
inc
mov
dec
(bad)
movs
jns
add
addr16
add
scas
add
stos
mov
aam
pop
mov
les
lea
mov
xchg
(bad)
xchg
push
je
sub
pop
cmp
xchg
pop
sub
test
mov
xchg
lahf
stos
adc
adc
retf
xor
xchg
call
add
std
fcomi
xor
inc
retf
and
sahf
out
mov
xchg
loopne
inc
lods
mov
inc
test
push
push
(bad)
ins
ins
icebp
ret
test
or
xchg
stc
mov
sbb
data16
push
or
pop
dec
pop
stos
dec
mov
retf
aaa
sub
int
dec
(bad)
(bad)
cmovnp
xlat
xor
loop
loop
cmps
cmp
lods
ja
cmp
mov
adc
and
stc
and
and
xchg
aad
mov
mov
dec
or
inc
dec
mov
scas
jmp
rcr
dec
jne
dec
mov
icebp
sub
jecxz
enter
xchg
pop
dec
cld
lods
and
cs
mov
adc
cmp
jnp
sbb
out
leave
jl
daa
js
mov
cmps
movs
push
or
aaa
das
sub
ins
jl
mov
es
jp
mov
dec
outs
inc
lds
mov
xlat
cwde
loopne
sub
add
cmp
scas
pusha
cwde
inc
mov
inc
sub
aaa
cdq
test
call
ret
movs
dec
jbe
or
int
call
xor
dec
retf
pusha
xor
dec
inc
pusha
inc
mov
test
shl
jle
pop
pop
nop
pusha
nop
mov
sub
out
xchg
shr
pop
or
inc
fs
or
xchg
shl
and
xchg
sbb
das
add
bound
out
les
aam
js
ja
mov
dec
frstor
xchg
ret
xor
cs
and
imul
sbb
bound
pop
movs
sub
cmp
imul
fistp
mov
xchg
dec
in
adc
movs
test
and
jnp
mov
push
sbb
movs
pop
daa
es
dec
sti
clc
enter
popf
outs
jmp
inc
push
adc
cld
mov
mov
aas
mov
mov
sbb
push
push
mov
(bad)
sahf
mov
ins
xchg
and
xor
(bad)
(bad)
mov
cmp
(bad)
mov
xor
push
sub
or
pop
sbb
ss
loopne
in
adc
xchg
aas
out
push
push
mov
nop
add
dec
dec
outs
cld
jne
xchg
xchg
add
adc
fiadd
dec
pop
or
es
aad
mov
mov
daa
dec
jg
inc
mov
mov
push
adc
add
cmp
mov
push
and
in
mov
(bad)
hlt
jmp
jb
retf
cmp
cmp
movs
xlat
fild
out
lea
or
jo
movs
or
movs
inc
out
jne
call
cmp
fucomi
mov
rcl
xchg
out
sahf
mov
jne
movs
aad
cmp
out
sbb
icebp
je
xchg
add
cwde
cmp
jmp
shr
loop
icebp
push
lods
fimul
daa
adc
and
push
rcl
dec
cmps
push
scas
mov
push
hlt
push
gs
cld
rcr
addr16
loop
mov
cmp
daa
pop
dec
ins
in
mov
dec
repnz
jp
call
mov
jns
sub
scas
call
(bad)
push
mov
out
ret
pop
or
or
mov
sub
jo
or
adc
fcomp
jle
aas
cmps
ror
xor
xchg
ficom
jp
xchg
push
mov
sub
fadd
inc
cmp
repz
stos
xor
ror
xor
pop
test
call
fisub
cmp
repz
xchg
cli
cmp
adc
imul
retf
jl
sbb
aad
je
test
fs
bound
cli
clts
lods
adc
test
or
imul
loop
pushf
mov
sub
push
jg
dec
push
sub
xchg
jae
loop
les
jb
ret
out
scas
int
sub
fdiv
jns
idiv
into
inc
lods
fucomip
jae
mov
xor
stc
rol
add
push
pop
push
out
sub
jno
jbe
cli
add
push
cmp
cdq
jmp
sub
ins
mov
clc
ja
enter
add
gs
movs
add
es
or
xor
psrlq
mov
add
pop
cs
push
mov
push
scas
sbb
cmps
xor
vcvtss2si
shr
sub
arpl
jl
mov
sub
mov
sub
xchg
dec
adc
mov
xchg
(bad)
cmp
(bad)
mov
mov
sub
sbb
xchg
addr16
(bad)
ror
pop
fisttp
lods
jbe
mov
js
xchg
xchg
aas
xor
ret
mov
and
clc
aas
stos
push
ret
(bad)
dec
mov
test
pushf
cmp
cmc
cs
aad
stos
inc
sbb
in
push
aam
mov
sbb
dec
aad
sub
sbb
daa
pmaxsw
mov
fcom
mov
in
das
sahf
and
pop
sub
push
lods
push
sbb
ror
gs
out
fs
mov
mov
adc
push
test
sub
adc
es
(bad)
call
inc
cmp
movs
inc
les
sbb
sbb
add
jl
push
pop
lds
ficom
add
add
pop
into
repz
mov
test
push
mov
lods
cmps
mov
pop
mov
js
cmp
hlt
das
mov
fstp
push
outs
fs
push
mov
aam
lods
mov
push
sub
aad
hlt
fild
popf
lds
jge
ins
mov
std
fwait
pop
(bad)
inc
fist
and
stc
xchg
mov
cld
or
pop
push
push
ret
xchg
adc
add
sub
sbb
sbb
push
cmp
xor
pop
push
and
iret
add
adc
and
xor
push
inc
movs
lock
sar
leave
enter
sub
fisubr
mov
lahf
scas
rcl
inc
scas
mul
std
je
sbb
pop
pop
lea
test
(bad)
pop
ret
lock
cli
lea
mov
arpl
div
cmp
ss
mov
lock
lock
(bad)
fs
movs
jne
cmp
outs
test
jbe
add
push
xchg
push
ret
cmps
dec
(bad)
int3
cli
push
add
cmps
ja
movs
mov
or
mov
loopne
dec
nop
push
mov
aad
fild
rcl
inc
fs
adc
scas
sub
dec
mov
sar
mov
addr16
mov
mov
icebp
and
int
xchg
sbb
sbb
xchg
scas
pminub
mov
pusha
push
mov
sub
cmp
(bad)
jno
sub
mov
rcl
cwde
mov
js
aam
movs
stos
mov
jmp
ins
lock
adc
dec
mov
and
stos
dec
sbb
leave
xchg
ret
xor
sub
or
xchg
mov
(bad)
out
(bad)
aad
clc
daa
fsubr
and
aaa
jle
pop
cwde
xchg
and
shr
inc
rcl
fdivr
outs
mov
pop
dec
adc
or
sub
push
push
sub
scas
lahf
pop
sbb
shld
scas
test
sar
(bad)
pop
cmp
fwait
pop
cwde
dec
cmps
push
push
sbb
int
clc
int
outs
add
shl
inc
cmp
nop
push
cli
ret
jo
movs
cmps
out
ins
les
mov
mov
jp
jmp
rcl
dec
jno
icebp
test
movs
fsubr
out
mov
dec
xor
loopne
jl
out
sub
das
dec
adc
div
(bad)
mov
dec
rcl
cmp
(bad)
test
push
push
mov
(bad)
sub
in
jmp
out
dec
shl
pinsrw
out
sbb
imul
cmp
and
movs
xor
inc
mov
out
bound
adc
dec
pop
mov
or
shr
or
add
sbb
dec
push
aad
inc
movs
push
push
push
sbb
popa
sub
mov
outs
xor
in
js
and
sub
and
jecxz
pop
outs
aaa
fwait
pop
adc
inc
adc
or
ds
push
cmp
inc
sub
fs
mov
jle
movs
jge
xchg
je
hlt
fcomp
das
xchg
or
mov
inc
cld
inc
pop
test
dec
bound
cmp
jmp
or
outs
dec
inc
fdivrp
jnp
imul
cmp
fild
jge
inc
cmps
bound
sbb
xchg
sbb
mov
mov
dec
pop
dec
fldcw
push
fdivr
and
sbb
xor
cmp
jo
push
test
mov
fistp
jg
pop
xor
inc
pop
js
dec
iret
inc
or
dec
mov
sar
fisub
sub
add
xchg
push
sub
mov
lock
addr16
out
fbstp
cmp
adc
call
mov
into
xchg
daa
cld
sub
and
xor
test
or
scas
xor
lock
jns
push
adc
push
imul
push
sub
xchg
retf
fmul
dec
rcr
push
adc
lds
and
loop
js
js
(bad)
idiv
(bad)
sub
or
popf
sbb
and
mov
movs
int3
repz
fidiv
adc
jmp
es
xor
pop
(bad)
jmp
xlat
ins
repz
das
fistp
lds
adc
cs
sub
das
add
movs
cmp
sbb
outs
fs
mov
mov
cli
shl
movs
pop
and
jns
sub
ja
cmp
mov
test
out
xor
cwde
xchg
dec
dec
mov
add
mov
pop
inc
lds
and
mov
(bad)
lea
or
or
stos
adc
div
jmp
mov
xchg
fucomp
mov
mov
cmp
jae
or
test
rsm
movs
adc
push
jmp
mov
in
cmps
scas
addr16
and
je
pop
stos
ins
pop
pop
ret
loopne
mov
xchg
fstp
xor
mov
cmp
test
cld
push
test
push
fsubr
cdq
imul
les
pop
cwde
jbe
ins
ins
test
xor
sbb
pop
pop
test
or
push
mov
test
icebp
adc
mov
test
or
push
mov
fcomp
jmp
and
lods
push
clc
cdq
loopne
push
sbb
icebp
inc
jae
xor
shl
xchg
jmp
cmps
xlat
ficom
xor
out
stos
sub
or
xchg
xor
sbb
stos
inc
das
xchg
cmps
cs
dec
sbb
xor
add
int
cmp
cmp
cmp
neg
outs
sbb
cwde
xor
ds
or
add
jbe
ret
clc
hlt
pusha
movs
sub
fnstcw
inc
push
popf
jl
jo
inc
and
adc
push
inc
sar
jge
push
retf
push
push
hlt
add
ins
ja
pushf
popa
loopne
inc
in
inc
push
aaa
cmp
cli
mov
clc
and
jecxz
jae
mov
fwait
cmp
out
ror
aam
inc
mov
sti
mov
sbb
in
jp
cmp
int
test
mov
clc
jl
sbb
xchg
cmp
jo
add
mov
jge
(bad)
(bad)
mov
daa
xor
adc
pop
clc
(bad)
push
fstp
mov
inc
inc
mov
std
mov
aas
(bad)
int
jne
ffree
or
call
clc
mov
popf
fsubr
xor
adc
cmp
mov
xor
lods
adc
out
test
enter
call
ins
ret
cmc
jno
jge
gs
pop
xor
push
gs
adc
aam
mov
pusha
lods
push
loope
jns
inc
dec
dec
mov
in
and
and
push
rol
dec
test
into
push
sub
pop
mov
icebp
cli
xchg
pop
daa
in
push
add
lods
jae
pop
fidivr
jmp
arpl
pop
aam
sub
sbb
ins
lods
retfw
test
hlt
leave
jmp
in
ret
dec
push
mov
mov
arpl
aaa
loope
push
and
cs
test
sub
stos
cmp
or
lods
or
xchg
mov
fisubr
jns
loop
js
shl
dec
xor
jae
mov
pop
ret
retf
out
jmp
and
add
mov
or
pop
pop
sbb
fild
mov
int3
inc
repz
lea
hlt
(bad)
movs
arpl
pop
fistp
pop
loope
cmp
push
loopne
fild
out
sbb
mov
(bad)
mov
push
out
ss
fcomi
and
shl
mov
pop
mov
leave
mov
jae
xlat
mov
mov
gs
cmpxchg
inc
pop
mov
pop
and
xlat
jge
pop
ss
or
sti
out
sbb
sub
xchg
jmp
xor
xchg
pop
movs
aaa
test
mov
cvttps2pi
and
jp
movs
jl
mov
inc
outs
xchg
enter
xchg
mov
inc
and
call
aaa
jns
enter
mov
cdq
push
and
xchg
ja
pushf
mov
into
int3
addr16
add
lods
cmps
jns
cmp
gs
je
test
xor
adc
fimul
pop
mov
xchg
div
lea
inc
mov
popf
inc
movs
mov
push
push
jne
xchg
xchg
cmp
push
dec
sub
pop
popa
push
cmp
in
sbb
add
mov
inc
mov
or
fucom
(bad)
and
leave
dec
mov
icebp
push
dec
add
int3
scas
loopne
adc
shr
jno
mov
mov
pop
push
sbb
mov
(bad)
sub
mov
adc
pop
lods
je
jne
out
and
sti
repnz
and
fs
(bad)
sub
aas
cmp
mov
mov
xchg
xor
movs
dec
retf
jle
push
jl
inc
cmp
xchg
inc
in
or
push
mov
(bad)
jecxz
loope
dec
scas
mov
rcr
mov
or
inc
je
pop
pop
add
(bad)
cmp
outs
enter
jle
mov
(bad)
xor
pop
sub
sahf
div
xchg
inc
or
mov
ins
repnz
and
ss
xchg
nop
pop
add
or
push
pop
inc
mov
in
sub
cmp
cmp
adc
ret
stos
inc
push
xor
sbb
inc
cmp
mov
test
inc
andnps
push
dec
cmp
add
fimul
pop
imul
pushf
cmp
loop
leave
xor
adc
push
arpl
mov
mov
or
mov
fcomp
sub
inc
pop
pop
hlt
scas
dec
popa
push
jno
xor
add
fnstenv
cwde
(bad)
push
pop
sub
lods
sub
pop
in
cwde
inc
mov
dec
nop
mov
adc
sbb
or
sub
imul
lods
outs
xchg
or
lahf
dec
pusha
or
aam
rcl
jne
in
cmp
lods
fldcw
and
mov
sub
fisttp
mov
mov
jecxz
(bad)
das
ret
outs
cmp
in
xor
lea
gs
mov
xchg
sub
fcomp
xor
in
xor
test
test
lock
sbb
(bad)
xchg
sar
stc
nop
out
frndint
paddusw
push
aam
jl
out
data16
pop
dec
inc
call
lds
and
call
fwait
add
lea
xchg
outs
(bad)
js
lea
hlt
mov
ret
push
add
lock
and
into
retf
cmp
std
push
sbb
jmp
push
pop
ficom
sub
cs
cmp
cli
outs
dec
retf
xchg
jp
dec
xchg
mov
in
sbb
push
sbb
and
cwde
ja
ror
loopne
mov
cdq
and
xor
dec
call
jns
jno
mov
adc
or
cli
inc
xchg
mov
xchg
(bad)
scas
jge
cmp
push
pop
enter
test
mov
inc
sbb
jo
cmps
mov
(bad)
leave
outs
sbb
retf
std
pop
stos
inc
aaa
or
mov
shl
call
sahf
out
mov
push
jne
test
sar
mov
adc
add
cmps
mov
push
fwait
iret
lods
icebp
mov
(bad)
sbb
mov
sub
or
sbb
in
(bad)
data16
adc
cdq
retf
dec
cmps
push
movs
lods
inc
mov
push
mov
loope
pop
pusha
dec
cmp
xor
cdq
test
in
add
add
cmps
push
in
test
cmp
pop
leave
mov
test
adc
sub
adc
jmp
pop
pusha
dec
xchg
outs
ins
and
(bad)
sbb
mov
js
mov
jnp
jecxz
and
aam
xchg
cmp
inc
div
cli
fwait
loop
ins
ja
and
dec
dec
fcomip
adc
pusha
repnz
cmp
pop
push
iret
push
inc
or
push
mov
ja
clc
add
(bad)
aaa
xchg
add
mov
mov
call
fild
and
xchg
xor
and
jle
jo
add
sbb
xchg
pop
shr
pushf
mov
push
inc
rcr
jae
push
leave
sub
mov
mov
dec
jle
sub
mov
add
fsub
mov
add
fcomp
test
mov
dec
cmps
mov
or
popa
rol
pusha
and
push
adc
sbb
and
shl
cmps
iret
movs
add
into
movs
dec
(bad)
or
xlat
in
inc
mov
sar
popa
lahf
out
push
and
out
pop
sbb
out
or
and
fisubr
inc
xor
cdq
jae
ret
aaa
test
mov
sub
(bad)
xchg
ins
xchg
adc
jg
and
adc
enter
pop
test
pop
mov
xchg
sub
mov
cmp
adc
push
jns
sub
fidivr
and
ror
cmp
mov
add
jl
adc
cmp
sub
in
cmps
or
adc
cmp
add
stos
imul
sub
jnp
push
movs
mov
mov
push
xor
ds
scas
(bad)
dec
(bad)
in
in
jmp
lods
mov
jns
inc
mov
ins
adc
imul
sbb
jmp
dec
adc
push
or
mov
push
mov
add
sahf
jb
adc
pusha
mov
arpl
mov
popa
jne
xor
in
push
push
xchg
adc
sahf
aaa
mov
sub
daa
fsubr
jp
(bad)
fst
mov
sub
sub
pop
ins
push
jbe
das
cs
xchg
xchg
retf
push
mov
mov
xchg
cs
jl
push
iret
fs
fwait
aaa
push
sbb
sbb
jl
sar
sbb
popa
loop
push
loope
push
(bad)
pop
sbb
or
je
pushf
mov
in
cmps
retf
sub
test
fldenv
iret
pop
cmp
data16
outs
dec
mov
mov
xchg
cmp
aam
test
and
es
jbe
dec
jl
ins
pop
jb
mov
fldenv
ret
rol
int3
add
cli
and
mov
adc
ds
mov
xor
xchg
in
add
sub
jo
push
push
pop
jecxz
cmp
xor
js
int3
in
pop
out
jns
cmps
cdq
mov
out
mov
lea
scas
dec
jmp
ja
pop
jo
mov
pop
mov
or
dec
cwde
adc
call
and
dec
sbb
push
push
jp
vshufps
mov
jns
stos
mov
mov
dec
sbb
pop
cmp
add
and
sub
adc
push
test
frstor
pop
cmp
xor
push
in
stc
inc
jmp
cmp
push
or
jl
loopne
(bad)
sub
lahf
imul
lods
inc
dec
mov
or
mov
and
int3
add
and
pop
xor
xchg
loope
jmp
inc
ins
daa
sti
pop
movs
jns
fidivr
rcl
in
add
mov
sub
call
inc
xchg
imul
ins
mov
ret
ins
xor
or
enter
test
mov
mov
out
pop
xor
test
mov
mov
stos
mov
add
dec
nop
inc
add
clc
mov
pop
dec
xor
push
mov
cmps
pop
adc
add
sub
shr
in
out
imul
sti
and
dec
ja
add
(bad)
frstor
repnz
adc
stos
sub
pop
jp
jmp
mov
sub
and
push
cdq
xor
div
sbb
xchg
mov
push
sar
dec
sub
lods
enter
clc
jmp
loop
in
test
mov
stc
je
pop
(bad)
mov
ins
jl
popf
xor
or
mov
add
jp
arpl
jmp
cwde
outs
test
push
jnp
inc
je
scas
les
or
(bad)
mov
jnp
jno
movs
pop
cmps
xchg
mov
push
dec
mov
fs
out
mov
shl
fwait
jge
push
push
mov
pop
sbb
jb
pushf
jne
shl
or
test
xchg
test
in
stc
jmp
arpl
cmp
dec
icebp
dec
add
push
xchg
xor
xchg
push
cli
xor
add
dec
sti
pusha
cmp
dec
jge
scas
or
inc
rcl
jmp
mov
cmc
jne
add
push
fdiv
add
sbb
aas
pop
xor
les
popa
inc
sbb
movs
ins
sar
imul
fst
mov
xor
pop
fdiv
xchg
hlt
cmps
das
movs
xor
dec
sub
enter
pusha
sbb
xor
(bad)
in
mov
jecxz
mov
outs
inc
xlat
pop
inc
outs
sbb
sub
cld
pusha
push
dec
int3
adc
bound
jmp
jnp
js
mov
push
fldenv
add
pop
mov
in
dec
popf
xor
or
cmp
add
xor
inc
and
sti
jnp
lods
(bad)
jb
repz
sbb
or
adc
mov
inc
loope
jmp
lods
and
ror
mov
scas
sub
sub
out
out
push
repz
(bad)
mov
imul
mov
retf
hlt
jecxz
retf
pop
stos
ins
fmul
xor
add
push
or
ja
xchg
fmul
aas
pop
iret
mov
xor
cmp
and
test
jl
dec
jbe
push
imul
jle
or
cmp
push
mov
xchg
aaa
dec
mov
pop
cdq
loop
retf
hlt
xlat
or
lea
stos
or
loop
sti
pop
(bad)
cmp
or
lds
bound
push
jae
add
and
dec
xchg
in
por
push
inc
dec
dec
jno
ins
add
inc
jl
pop
sub
cmps
inc
dec
repz
and
sbb
pop
jle
(bad)
xchg
aas
test
mov
stos
cmp
int3
pop
dec
out
outs
push
xchg
dec
ins
pushf
mov
pop
cmc
pop
std
sub
call
cmp
cmc
adc
out
iret
xchg
or
call
icebp
int3
push
inc
push
stos
inc
xor
dec
sub
fidiv
lock
and
adc
fndisi(8087
sub
fs
mov
mov
jne
add
push
pop
retf
ret
dec
cmp
jnp
test
outs
rcr
enter
mov
cmp
mov
sub
movs
dec
jno
fbstp
mov
xor
(bad)
pop
daa
neg
dec
test
leave
dec
mov
mov
mov
or
cmp
ret
adc
aad
mov
add
fidiv
add
test
stc
pop
in
nop
movs
jl
in
stos
pop
mov
popa
cwde
cmps
shr
adc
stos
sbb
shr
adc
dec
cmp
repnz
adc
outs
pop
mov
push
and
scas
je
or
lahf
cdq
loop
popf
sbb
sub
xor
cmp
int3
dec
pop
xchg
es
adc
repz
mov
add
cmps
icebp
mov
push
popf
or
out
dec
rol
out
push
pop
push
outs
into
lock
lods
cs
pop
push
sub
cmc
xor
push
mov
enter
test
dec
cmp
inc
inc
hlt
mov
sbb
lea
mov
pop
in
repz
xchg
shl
jno
inc
stos
addr16
out
mov
iret
loopne
clc
cmps
jge
mov
mov
les
out
fwait
xchg
jge
cli
sbb
xlat
das
or
cld
(bad)
and
(bad)
pusha
and
inc
xor
addr16
push
retf
add
cmp
lahf
adc
pop
inc
repz
mov
mov
pop
ins
es
inc
pop
fdivr
jl
push
mov
imul
sbb
icebp
fcmovne
test
pop
dec
jecxz
cdq
sub
stos
and
call
mov
test
pushf
sub
retf
adc
(bad)
sbb
xchg
mov
aam
popf
stc
push
mov
imul
adc
sahf
mov
mov
inc
push
rcr
fadd
lods
jae
pop
in
push
aad
inc
clc
dec
aad
pop
inc
push
jno
inc
fsub
cmp
push
stos
iret
std
jl
retf
mov
mov
sub
in
push
push
popa
push
sub
leave
retf
or
add
mov
mov
sbb
adc
bound
xor
stc
rol
add
je
aas
int
cmp
popa
pop
jge
sbb
sbb
xchg
jmp
xchg
add
lock
pushw
clc
cli
enter
or
cmp
xchg
push
add
stc
ins
int3
pop
xor
mov
mov
cmp
jo
or
lahf
xchg
mov
ds
je
push
loop
lahf
add
lock
sbb
cmp
jmp
sbb
pop
mov
dec
mov
cmc
and
jnp
mov
mov
jmp
call
add
and
ds
in
push
jl
xchg
jp
push
iret
push
test
adc
gs
and
xor
or
and
ins
inc
dec
hlt
mov
or
imul
mov
push
lock
mov
mov
sbb
push
pop
rcl
in
ss
jmp
and
push
mov
loope
pop
in
mov
jp
or
loopne
add
adc
jecxz
imul
std
gs
jle
fidiv
cld
and
jp
mov
mov
popf
add
leave
out
dec
push
jle
stos
aad
pop
mov
outs
data16
cli
popf
mov
cmp
push
enter
lods
push
sbb
inc
dec
cwde
cmp
sub
jo
test
jae
mov
clc
sub
cmps
fwait
cld
pop
addr16
mov
adc
xchg
in
push
dec
sub
jmp
dec
loope
ret
sahf
dec
lods
dec
cmp
sbb
xor
div
inc
push
pop
int3
cwde
sub
pop
mov
or
(bad)
ss
jb
das
ins
es
xor
mov
es
sahf
mov
fidiv
dec
addr16
mov
nop
outs
xor
ror
push
mov
shr
(bad)
jmp
xor
fwait
adc
dec
out
fstp
out
fisttp
mov
shl
pop
jbe
dec
mov
inc
pop
xor
jge
xlat
add
ja
popa
mov
cmc
xchg
and
inc
cmpxchg
gs
pop
sbb
in
cmp
gs
dec
mov
int3
jo
jmp
xchg
fist
movs
jmp
push
aaa
adc
inc
pop
fidiv
fisubr
cmp
lods
arpl
bound
sub
xchg
mov
pop
data16
iret
ss
dec
rcr
inc
lods
or
jo
out
xchg
retf
xchg
(bad)
cmp
dec
cli
sub
and
in
xchg
lea
in
inc
push
mov
push
and
dec
xchg
js
imul
fdivr
sbb
jle
fmul
or
jne
repnz
jmp
arpl
jno
add
les
xor
ficom
dec
mov
xchg
xchg
add
icebp
js
xchg
mov
and
xchg
push
repnz
lods
imul
mov
push
sar
push
jl
repz
add
jmp
dec
ror
or
push
mov
sahf
mov
mov
cwde
mov
sub
(bad)
inc
xlat
mov
inc
(bad)
or
mov
adc
mov
call
arpl
or
inc
pop
test
adc
fdiv
push
adc
adc
fsubrp
jp
inc
in
call
cwde
shr
add
jbe
fisttp
xor
dec
scas
xchg
sub
das
dec
sbb
inc
imul
add
stc
add
mov
cmp
xchg
in
push
jmp
repnz
ins
sub
repnz
jg
test
mov
int3
add
retf
lock
xchg
fdiv
or
jns
call
(bad)
pusha
dec
mov
dec
js
(bad)
pop
sbb
jno
sbb
sbb
shl
and
push
outs
(bad)
sbb
(bad)
dec
mov
inc
jmp
pop
stc
lods
dec
cmp
mov
or
jecxz
add
pop
movs
enter
cmp
mov
xor
sbb
js
gs
pop
call
mov
bound
or
cmp
jg
cmps
mov
mov
repnz
outs
retf
jb
std
pop
call
shr
das
mov
sbb
push
fisttp
neg
shl
shl
inc
in
mov
call
and
lods
repnz
arpl
sub
repnz
gs
sti
into
xor
std
pop
pop
loopne
outs
pop
pushf
sbb
adc
dec
and
inc
out
xor
or
push
sbb
jbe
popf
fmul
xor
call
ret
add
gs
or
lock
jmp
(bad)
jmp
pop
lahf
add
push
loop
scas
fdiv
sub
fist
mul
pushf
shr
lods
icebp
dec
jle
outs
popa
jmp
or
cmc
or
sbb
xchg
sbb
es
and
push
test
inc
cmp
mov
nop
or
dec
(bad)
in
jg
and
add
stos
jnp
add
dec
(bad)
cli
and
fisttp
inc
and
jbe
inc
aam
inc
mov
adc
sar
test
clc
or
xchg
push
sbb
sub
in
cmp
jb
test
scas
pop
(bad)
call
jmp
xor
fbstp
fdiv
mov
aas
das
mov
xor
xor
jae
xor
cmp
xchg
fnstenv
and
movd
cmc
fsub
adc
pushw
(bad)
mov
xor
add
add
int3
mov
cmp
icebp
mov
cwde
cld
stos
dec
dec
and
hlt
aam
test
pop
fs
out
inc
jle
gs
imul
lods
aaa
xchg
mov
xor
repz
fdivr
aas
dec
mov
add
rcr
std
xchg
cmp
mov
data16
imul
pop
and
ds
(bad)
push
test
loop
mov
mov
aas
in
mov
rcl
into
dec
stos
push
hlt
loop
inc
inc
pushf
bndldx
lods
add
sub
hlt
or
sahf
jle
xchg
mov
call
out
addr16
pop
push
add
(bad)
jle
into
pop
mov
xchg
pop
retf
retf
dec
les
xchg
mov
ret
nop
imul
test
scas
inc
out
dec
iret
dec
push
or
xor
pop
hlt
xor
sub
in
call
(bad)
pop
sbb
mov
inc
int
cmc
push
jbe
pop
pop
pop
popa
jnp
jmp
dec
test
retf
xchg
data16
shr
sub
or
std
cwde
jb
inc
test
sbb
retf
sbb
ror
mov
pop
inc
mov
cmps
xchg
fcomp
fdiv
dec
sar
sbb
jecxz
pop
inc
gs
icebp
inc
loope
push
cmc
mov
sbb
stc
push
fs
adc
jp
imul
stos
mov
sub
fdiv
imul
fbstp
sbb
mov
or
jno
xor
mov
jbe
jo
push
or
xor
scas
es
ret
push
xchg
add
fist
repnz
icebp
add
fstp
into
clc
fwait
and
dec
inc
pop
test
call
movs
inc
retf
mov
rol
aas
repnz
addr16
scas
je
sub
and
repnz
rcr
fld
frstor
sbb
ja
es
into
cmps
push
cli
xor
pusha
imul
rcl
movs
mov
or
out
jmp
pop
shr
in
mov
movs
jbe
ds
mov
popf
lock
xor
js
inc
lods
cs
enter
adc
sar
sbb
enter
inc
in
out
adc
jno
test
sbb
inc
mov
pushf
adc
jo
movs
add
pop
mov
mov
xor
fist
xor
call
mov
(bad)
mov
jns
loope
cmp
repz
cdq
out
push
scas
pop
mov
inc
or
jge
jmp
stos
jmp
sbb
ds
in
push
mov
sti
mov
inc
xchg
and
ss
dec
rcl
mov
push
mov
retf
and
dec
in
pop
mov
fdiv
dec
pusha
aam
push
cmps
inc
cs
les
(bad)
(bad)
ret
mov
into
xlat
rol
mov
nop
mov
fprem
or
inc
test
add
popf
and
sbb
shl
push
popf
xchg
ins
dec
ss
jnp
(bad)
fdiv
mov
scas
pop
mov
stos
mul
nop
adc
xor
popf
lock
jae
mov
pop
ja
inc
stos
push
fist
bound
nop
fiadd
cld
xchg
scas
je
scas
dec
dec
and
jge
and
push
xchg
pop
nop
jmp
mov
mov
stc
in
cmps
mov
outs
or
js
mov
sub
add
pop
dec
push
or
xchg
pushf
or
iret
adc
sti
mov
sti
(bad)
pop
jge
push
push
xchg
repz
out
loopne
clc
push
lahf
out
mov
retf
push
cwde
xchg
out
mov
mov
stos
dec
pop
mov
pop
pop
xor
sub
je
jge
into
xlat
mov
call
xchg
std
std
aaa
jne
mul
push
and
mov
inc
lea
pop
je
jno
(bad)
dec
push
or
nop
dec
push
pushf
in
mov
dec
cmp
xor
in
pop
call
out
jecxz
xchg
add
out
and
shl
push
and
adc
push
add
lock
loope
pop
mov
mov
rcl
xor
iret
movs
push
push
ret
mov
or
jmp
sbb
into
jle
(bad)
into
es
mov
add
out
in
adc
ficom
adc
ds
mov
mov
sbb
scas
aas
cmp
fs
(bad)
lahf
call
push
out
xchg
xchg
jno
outs
(bad)
out
leave
push
xor
or
(bad)
test
out
xlat
fwait
std
dec
cwde
cdq
xor
mov
pop
or
dec
ror
and
jnp
sbb
xlat
ror
cmp
and
xor
jecxz
ret
dec
mov
cmp
shl
loopne
jo
mov
mov
adc
shl
lds
in
(bad)
cmp
iret
gs
and
or
and
fdivrp
or
jb
cmc
pop
loopne
xlat
loop
es
mov
mov
out
adc
pop
mov
popf
mov
push
cwde
sub
mov
iret
push
bound
push
jecxz
and
movs
shl
out
aad
xchg
or
les
adc
push
int3
test
(bad)
(bad)
adc
(bad)
in
outs
pushf
aas
mov
loope
scas
adc
xchg
pop
std
pop
push
and
and
or
aaa
xchg
dec
mov
stos
scas
rcl
retf
sub
pop
fisttp
ins
in
sahf
leave
loop
xlat
sar
fs
cmp
xchg
xlat
dec
sahf
and
out
jb
cmps
scas
lahf
data16
repnz
jge
adc
icebp
scas
ins
push
mov
(bad)
push
mov
dec
test
mov
movs
repz
cdq
test
int3
loop
fistp
or
mov
or
stos
dec
cmp
out
jae
adc
mov
js
push
mov
xor
or
inc
pop
bound
add
fild
jle
outs
dec
mov
push
xor
xor
ret
iret
or
clc
sar
fiadd
lea
cmps
push
inc
cli
xor
add
test
es
int3
es
and
cwde
and
or
cmp
aam
test
test
aas
loope
xchg
cmp
(bad)
enter
cdq
and
pop
inc
xchg
push
pop
pop
jecxz
mov
pop
ins
pushf
adc
fsubr
inc
and
test
mov
xor
lock
mov
jne
test
sti
xor
push
in
out
add
adc
fs
or
int3
pop
adc
push
(bad)
aam
test
jl
sbb
ins
mov
sbb
pop
sar
sub
scas
in
push
jge
sub
xor
xor
aaa
mov
scas
cmps
mov
js
pusha
push
jb
fisub
icebp
inc
push
stc
adc
in
jne
sahf
pusha
mov
push
sub
in
in
pop
ins
fcomp
xor
arpl
int3
inc
sub
mov
dec
fsub
out
fmul
in
inc
mov
(bad)
mov
xchg
push
outs
jnp
push
adc
daa
mov
add
mov
dec
cwde
or
pop
and
sub
test
xor
shl
cmps
jle
lds
es
sub
ss
icebp
ror
std
sub
adc
inc
idiv
xchg
push
and
mov
xor
cmp
hlt
das
mov
sar
clc
inc
jbe
stos
sub
jge
(bad)
push
scas
mov
into
mov
push
pop
adc
push
jecxz
mov
mov
out
add
scas
jge
fld
mov
pop
js
scas
cmp
int3
cld
std
aaa
or
cwde
xchg
scas
(bad)
jmp
cmp
sahf
scas
pushf
xchg
dec
xlat
push
scas
sbb
mov
das
cmp
cwde
push
cmp
(bad)
inc
xchg
in
xchg
mov
mov
dec
jecxz
mov
xchg
data16
mov
lea
sub
aaa
xchg
xchg
loope
xchg
and
arpl
fwait
sub
adc
ins
test
mov
lahf
ja
inc
les
cmp
pop
in
(bad)
(bad)
ds
sbb
stc
clc
ficom
(bad)
push
in
loop
add
hlt
das
push
inc
cmps
lds
push
cmp
std
mov
outs
int3
sub
aad
lahf
add
jge
(bad)
lods
scas
outs
mov
inc
push
jo
mov
not
je
outs
jp
shr
loope
mov
push
inc
cmp
aaa
dec
push
or
mov
ins
lods
mov
push
loopne
int
push
push
je
xchg
push
loop
jmp
and
enter
sar
les
js
sbb
jmp
imul
mov
jnp
push
rol
pop
loop
retf
mov
sbb
jp
fsub
xchg
loope
jge
loopne
out
repnz
movs
out
not
hlt
cdq
stos
imul
daa
pushf
arpl
adc
inc
mov
inc
out
lock
ins
jno
les
dec
fwait
sub
xor
mov
not
dec
std
je
das
sub
les
jne
sub
(bad)
cdq
inc
or
add
mov
cs
stos
shl
mov
jbe
and
jmp
rcl
inc
je
stc
ret
mov
sbb
cmp
mov
and
bound
ins
hlt
movs
loop
sbb
mov
or
stc
test
mov
dec
push
or
in
(bad)
mov
push
push
xchg
sahf
leave
push
mov
ds
call
xchg
fwait
mov
sub
cdq
mov
add
mov
inc
jmp
out
push
mov
inc
addr16
xlat
or
js
dec
jmp
aaa
mov
loopne
pop
into
test
pop
out
jl
push
pop
aaa
xor
jne
or
aaa
dec
inc
pop
dec
mov
and
cmps
outs
push
cmp
adc
add
inc
(bad)
retf
clc
push
jp
sahf
shl
push
sbb
and
fwait
outs
pop
fmul
sub
push
fild
movs
test
inc
in
push
jle
fnstsw
aaa
and
das
fimul
ror
jg
in
xor
ret
ds
ret
loope
aaa
xor
cmp
xchg
mul
outs
sub
popf
fcom
and
mov
sbb
xchg
sub
push
scas
push
(bad)
dec
sar
sub
lea
clc
outs
adc
push
xor
ret
dec
lahf
xchg
repnz
nop
jb
sub
les
cmp
jge
mov
stos
inc
cmc
mov
mov
stc
imul
or
das
jno
es
xor
xchg
sbb
dec
test
mov
inc
jecxz
jne
fwait
push
shl
mov
sbb
(bad)
loopne
sub
jmp
jo
scas
cli
jbe
jmp
(bad)
xchg
dec
(bad)
mov
mov
push
loop
shl
inc
mov
aas
dec
sbb
loop
aas
ret
in
jecxz
add
or
xchg
xor
jb
mov
cmp
in
rol
bound
lods
adc
push
jb
(bad)
xor
jo
out
scas
jmp
repnz
mov
fnstcw
adc
mov
add
push
mov
call
add
call
dec
push
jo
mov
mov
inc
dec
aam
jmp
movs
movs
mov
js
add
and
adc
push
inc
add
lock
xchg
and
(bad)
fsub
inc
dec
sub
es
iret
xchg
stos
mov
outs
sbb
sub
repz
cmp
jnp
cli
inc
and
(bad)
adc
mov
sahf
shr
inc
cmps
lods
and
mov
xchg
loop
out
xor
mov
nop
stos
jns
scas
or
mov
sar
pop
inc
rcl
push
mov
cld
nop
das
mov
mov
call
aad
jl
push
mov
addr16
adc
inc
rcl
retf
mov
ja
cwde
and
cdq
(bad)
cli
inc
popa
idiv
push
outs
add
sbb
outs
stos
pop
pop
xlat
test
mov
fwait
push
mov
daa
add
(bad)
and
mov
mov
push
test
shr
js
hlt
sub
int3
test
data16
sbb
sub
clc
les
pop
or
mov
mov
xor
in
rcr
adc
mov
or
dec
cmp
and
xor
(bad)
push
adc
lahf
push
fisttp
cmp
and
retf
add
arpl
imul
mov
mov
push
jg
inc
adc
js
mov
add
or
adc
nop
popf
jmp
xchg
push
adc
ss
jp
mov
mov
jle
and
or
ss
cmp
int3
test
imul
stc
or
cwde
cmps
jbe
jb
and
cwde
xchg
pusha
test
dec
xchg
or
aas
lahf
out
jae
pop
ss
mov
dec
lods
push
inc
or
inc
scas
psubw
cmps
inc
mov
int
xchg
popa
inc
jge
push
xlat
jp
dec
sbb
pop
jbe
inc
inc
mov
or
outs
mov
mov
push
jge
adc
cmps
outs
pop
mov
mov
addr16
pop
pop
inc
mov
xor
xor
push
jno
std
cmp
outs
stc
popf
xor
adc
nop
in
and
add
sbb
xchg
inc
mov
xchg
cmps
in
data16
cmp
(bad)
jb
mov
mov
test
sbb
push
pusha
pop
retf
xor
mov
cli
les
stc
jecxz
jl
sbb
jge
pusha
and
pop
sub
cmp
imul
retf
xor
add
mov
dec
sub
mov
pop
nop
sbb
xchg
push
jns
sbb
icebp
xor
mov
retf
add
cwde
sahf
pop
nop
imul
push
mov
pop
inc
popf
dec
cld
(bad)
clc
adc
lods
data16
fnsave
in
jno
pop
shl
dec
retf
in
scas
stos
push
call
aaa
ins
mov
sub
ins
xor
add
outs
rol
hlt
arpl
pop
pop
push
pop
outs
lahf
fwait
push
push
es
dec
imul
pop
xor
retf
dec
xor
sub
cli
pop
push
sti
xor
jmp
sub
scas
pop
rol
retf
sbb
add
cmc
test
xor
push
mov
pop
cmp
aam
pop
xlat
adc
nop
imul
sbb
or
xor
out
inc
push
mov
add
sub
fcomp
add
fnstsw
into
pop
jmp
push
cli
outs
fadd
cmp
int3
in
loop
je
clc
stos
cmp
shl
mov
and
call
inc
jae
and
aad
cli
inc
mov
and
in
mov
in
cmp
(bad)
retf
repz
(bad)
cmc
add
push
xor
add
and
movs
inc
repz
or
test
mov
enter
lds
mov
cld
sub
repz
cmp
mov
push
inc
xchg
leave
bound
push
mov
ja
leave
test
xor
das
pusha
xchg
icebp
push
fs
pop
cmp
inc
jnp
sbb
jnp
push
jge
cld
and
push
(bad)
fist
nop
xchg
cwde
xor
(bad)
std
cdq
dec
loope
shl
cli
mov
pop
cmp
aam
pop
push
jo
pop
sub
mov
cmp
cmp
scas
sub
sbb
sbb
es
clc
dec
push
xor
add
push
push
mov
not
into
aaa
outs
jecxz
std
jnp
mov
add
and
test
add
repnz
mov
stc
(bad)
rcr
sahf
cld
and
cwde
fwait
adc
gs
cmp
pop
jbe
and
lahf
inc
cli
dec
aam
cmp
push
cld
jecxz
es
sub
inc
cmps
push
push
mov
xor
push
cmp
out
aam
xchg
out
mov
lock
push
and
fisubr
out
aad
daa
cmp
dec
ja
mov
fld
dec
dec
sub
addr16
cmps
(bad)
out
pop
aaa
(bad)
arpl
or
(bad)
add
cmp
repnz
and
mov
dec
mov
ds
cmp
lods
outs
cwde
(bad)
(bad)
icebp
lahf
mov
fdiv
and
cdq
rcr
shl
push
mov
mov
mov
or
xor
(bad)
sub
fistp
fistp
test
xchg
dec
xchg
(bad)
jmp
or
and
std
pop
in
rcl
xor
loopne
cmp
push
dec
pop
mov
fisub
call
xchg
fiadd
mov
stos
out
adc
adc
je
in
mov
mov
fwait
cmp
xchg
movs
push
or
bound
xchg
xchg
in
(bad)
sub
out
ror
mov
cmp
cli
mov
mov
bound
add
mov
push
mov
inc
push
daa
test
hlt
bnd
mov
dec
xchg
ja
lods
lds
stos
push
mov
ja
sar
fs
scas
jnp
(bad)
data16
jo
cmps
jmp
push
lock
cmps
data16
sub
pop
call
inc
add
imul
mov
ror
lea
inc
loope
lds
scas
push
push
mov
lock
les
nop
retf
fidiv
and
rep
lock
ror
sub
or
arpl
std
lods
xor
mov
fs
adc
pop
jmp
aam
xor
loop
imul
cmp
lods
outs
sub
xlat
add
imul
sub
sbb
dec
xor
xor
call
jno
dec
mov
mov
xchg
jle
and
inc
xor
cwde
in
mov
push
xor
sub
sti
mov
inc
pop
pop
xchg
stos
fwait
test
inc
mov
jmp
sbb
push
adc
inc
sub
pop
mov
ss
outs
sbb
add
daa
push
add
fcom
icebp
pop
clc
mov
cmp
or
into
lahf
and
inc
scas
inc
sbb
sub
daa
ins
es
mov
pop
lds
push
fwait
pop
mov
push
cdq
fs
xor
inc
and
rol
jmp
pop
add
(bad)
stc
push
movs
rcl
dec
mov
lea
mov
pop
xchg
popa
jb
aam
mov
sbb
sbb
cmc
xchg
cdq
lods
push
out
mov
pop
or
mov
mov
(bad)
out
cmps
in
or
in
push
cmc
(bad)
jmp
inc
pop
mov
scas
cmp
fmulp
stos
cld
adc
mov
jns
fstp
(bad)
jg
leave
dec
into
sbb
out
jecxz
ss
push
pop
nop
test
das
dec
and
mov
ret
stos
retf
addr16
inc
sar
fstp
xchg
fdiv
add
sub
adc
mov
hlt
mov
ja
mov
adc
iret
call
cmp
mov
test
lahf
outs
lock
push
das
push
neg
xor
pop
inc
je
jbe
jb
(bad)
cdq
ja
adc
pop
lods
in
daa
bound
mov
dec
fs
int3
mov
jne
retf
adc
(bad)
push
sbb
ror
mov
pop
xchg
pushf
mov
push
jmp
leave
in
std
in
cmps
inc
xor
dec
sub
xchg
(bad)
cwde
ja
dec
aaa
mov
add
jmp
(bad)
dec
or
cmp
dec
adc
iret
arpl
les
or
or
adc
pop
push
mov
jmp
ins
dec
je
inc
aam
dec
das
xchg
mov
add
and
jo
les
in
add
loop
push
mov
call
jae
mov
jl
cwde
iret
push
mov
daa
test
loopne
out
mov
mov
sbb
mov
xchg
retf
mov
ja
lods
jmp
shl
or
pushf
cli
mov
lods
inc
mov
cmp
stos
dec
push
inc
sar
ror
sbb
fild
cdq
and
daa
fsub
jne
ret
enter
stc
dec
adc
rcl
push
rcr
aas
les
push
fwait
add
dec
sub
push
retf
add
cmp
ins
mov
and
cmps
inc
lock
mov
or
and
and
(bad)
sar
pop
xor
imul
ja
les
inc
scas
cdq
sbb
inc
lahf
jns
test
add
inc
fstp
aaa
pop
imul
fsubr
or
push
hlt
mov
imul
pop
sub
add
push
mov
jns
out
jne
mov
add
jl
and
jl
(bad)
fist
dec
xor
bsr
cld
shr
mov
mov
lods
pop
jmp
jb
and
aas
loopne
call
idiv
pop
lea
sub
test
ret
mov
cmps
dec
ret
inc
shld
(bad)
inc
repz
data16
xchg
push
inc
or
sub
ins
je
dec
cmp
adc
sbb
cmps
and
inc
jmp
in
(bad)
and
lds
aam
sub
popa
xor
je
shl
out
mov
cli
sub
stos
rcr
pop
and
sub
jo
gs
push
fwait
mov
xchg
fild
popa
pop
cmp
sbb
push
and
add
cli
stos
pop
(bad)
popf
mov
repz
(bad)
push
(bad)
sub
aaa
mov
or
cmps
stc
ins
cmp
or
pop
les
sub
inc
clc
imul
(bad)
fwait
cmp
mov
(bad)
popa
dec
test
dec
stos
nop
int3
adc
pushf
jl
pop
adc
(bad)
cmps
jecxz
adc
sbb
cmps
adc
sub
add
pop
es
test
(bad)
popf
adc
pushf
dec
inc
mov
test
jmp
xchg
push
inc
mov
aaa
das
xor
adc
rol
dec
dec
sti
imul
xor
sub
ja
add
push
or
outs
adc
jae
jnp
add
sbb
arpl
lods
in
in
dec
sub
mov
push
and
pop
dec
lahf
add
movs
cld
(bad)
pop
(bad)
fldenv
test
sbb
icebp
rcr
jg
cdq
(bad)
pop
inc
jecxz
icebp
ficom
aam
scas
test
pop
mov
jge
rcl
push
dec
pushf
xor
push
lea
frstor
ins
aas
dec
push
out
sub
fisttp
dec
enter
iret
pop
ror
or
fild
outs
jae
push
mov
imul
out
cmp
(bad)
cmp
pop
and
cmp
mov
push
popa
icebp
sbb
js
mov
pop
add
test
fcom
(bad)
lods
jb
and
stc
pushf
mov
xchg
lds
inc
push
dec
hlt
aaa
pop
dec
in
push
pop
jmp
mov
and
test
popf
lock
aaa
int3
jns
es
adc
mov
xor
shl
jo
mov
fnstcw
pusha
cld
push
imul
ret
arpl
pop
cmp
dec
dec
outs
mov
push
fild
xor
mov
lods
clc
mov
out
mov
push
pop
aaa
dec
cmp
jmp
xchg
outs
and
jo
ins
out
cmps
jns
sar
and
and
mov
cmps
cwde
sti
xor
inc
jp
mov
das
cli
or
(bad)
xlat
jmp
dec
ins
jno
jnp
imul
sub
add
lods
fwait
add
xchg
adc
sub
sub
movs
pop
xchg
lods
shl
hlt
fiadd
mov
inc
les
(bad)
mov
(bad)
lock
ror
cmp
fsub
jns
fcmovnu
fs
repz
dec
clc
jne
cmp
aas
push
mov
cs
sub
or
loope
nop
(bad)
adc
mov
outs
mov
hlt
imul
xchg
sbb
test
sar
mov
mov
les
cmps
cwde
add
pop
sahf
inc
xor
lods
sub
dec
test
lods
jns
enter
adc
inc
(bad)
pop
cwde
inc
leave
cmc
ds
mov
dec
mov
imul
fwait
pop
in
shr
test
test
bound
sbb
adc
push
adc
jmp
cmp
jl
and
or
dec
xchg
adc
cmp
mov
shl
or
mov
mov
call
jae
xor
and
test
outs
dec
scas
ds
(bad)
xchg
sub
adc
fwait
add
push
fist
inc
pop
mov
pop
mov
into
push
je
sub
or
ins
push
add
fsubr
rcl
jmp
retf
gs
mov
mov
jl
push
mov
js
push
sbb
mov
or
cmp
stos
xlat
mov
push
adc
add
iret
pushf
push
xor
(bad)
push
cmp
inc
pushf
jo
cmp
xor
(bad)
mov
sub
sbb
(bad)
fisubr
sbb
mov
cmp
or
cmp
imul
es
movs
mov
fdiv
les
or
dec
mov
add
retf
mov
les
test
scas
pop
fldln2
mov
dec
and
sar
push
jbe
pop
scas
mov
xor
add
or
push
push
push
xchg
fucom
or
int3
sbb
lods
cs
rcl
icebp
jne
ins
dec
das
or
inc
lods
rol
add
js
pop
fcomi
mov
cdq
and
cld
bound
push
adc
sub
adc
loope
es
outs
fistp
and
outs
in
jmp
out
mov
jecxz
inc
jae
mov
out
test
jns
movs
and
inc
clc
mov
xchg
or
and
sar
(bad)
shl
js
dec
dec
adc
aad
in
jmp
aas
cmc
ret
push
je
lods
jmp
inc
mov
repz
mov
adc
mov
mov
cmp
movs
mov
cld
es
sub
and
add
sub
dec
sbb
fadd
shl
popa
call
cli
iret
jb
mov
mov
std
hlt
push
in
sub
ror
shl
lock
cdq
inc
fiadd
mov
cmp
or
jle
cmp
jge
jne
clc
sbb
retf
int
dec
lea
jg
push
sbb
mov
inc
lods
jnp
nop
sbb
iret
push
pusha
test
mov
sub
int3
pushf
retf
push
into
inc
or
into
shl
sbb
(bad)
outs
inc
cmp
and
ins
stos
hlt
xchg
js
pop
sbb
jmp
int
stc
enter
stc
pop
cs
ror
test
xchg
stc
jae
(bad)
fdiv
adc
jns
dec
pop
pop
push
sub
clc
push
jbe
jae
jbe
mov
fadd
bound
(bad)
test
ja
repz
rcl
hlt
retf
dec
jge
lea
mov
fsubr
fisttp
mov
sbb
mov
adc
(bad)
movs
imul
ds
test
cmp
jp
adc
dec
pop
adc
stos
(bad)
aas
stos
retf
dec
movs
clc
push
leave
iret
dec
imul
pop
stos
jnp
xor
sti
daa
add
dec
cmp
jne
adc
cmps
icebp
mov
push
cmc
vpand
repz
fmul
(bad)
pop
ins
cmc
mov
dec
xor
daa
push
jl
dec
fidiv
sub
xor
mov
add
outs
dec
xor
dec
nop
mov
popa
(bad)
nop
aam
mov
cmp
ss
fisttp
push
fsub
push
jle
xchg
call
icebp
add
sub
cmp
inc
test
jecxz
iret
pop
fnstenv
xor
push
bswap
std
fimul
iret
fmul
pop
enter
dec
or
out
adc
stc
xchg
push
push
mov
pop
es
or
in
xor
lahf
cwde
aaa
fsub
add
in
sbb
inc
ror
pop
sbb
repz
mov
or
fcomp
daa
ror
jb
and
fcmovnbe
sub
mov
aam
fidiv
cmovl
test
sbb
cmps
jmp
das
mov
xchg
dec
out
push
mov
mov
popa
pop
cdq
mov
jb
cs
mov
add
rol
js
xor
pop
in
and
dec
out
inc
sub
neg
cld
push
mov
cmp
repnz
add
sbb
std
push
mov
hlt
xor
call
sub
repz
jmp
imul
push
pop
int3
jg
mov
xor
imul
in
add
lock
sub
push
inc
loope
pop
ja
cmp
inc
jmp
movs
add
aaa
call
cwde
int3
sub
pop
mov
cmp
adc
outs
test
adc
jp
scas
mov
lods
push
cs
aas
push
mov
and
jecxz
mov
mov
mov
sbb
push
adc
stc
mov
repnz
loopne
cmp
fwait
pop
mov
sub
add
fdivr
cmps
xor
push
pop
mov
cdq
aam
popa
inc
xor
popf
in
out
cmps
jns
sbb
rcl
or
mov
or
movs
mov
clc
and
mov
(bad)
in
push
imul
das
cmp
leave
ins
add
jnp
xchg
cmp
push
cmp
rol
jecxz
and
push
mov
pop
push
pop
cdq
push
daa
dec
inc
jb
loopne
push
hlt
add
add
xor
movs
aas
pop
popf
test
dec
ja
xlat
mov
cmc
push
rcr
mul
movs
dec
addr16
adc
js
data16
stc
mov
aas
jb
ins
mul
push
mov
cmp
(bad)
aaa
cmp
lahf
push
out
sti
rol
fcom
ror
fisttp
push
test
icebp
fnsave
xchg
mov
mov
and
or
adc
cmp
xor
jmp
or
aaa
inc
mov
xlat
dec
mov
fcom
fwait
scas
stos
ror
add
jo
iretw
movs
jmp
daa
push
sbb
ds
retf
call
pop
pop
das
(bad)
leave
int
ffree
div
aaa
in
(bad)
lahf
dec
lock
cmc
jge
sbb
fdivp
fprem
mov
add
pop
or
adc
imul
mov
dec
cmp
sbb
inc
les
ins
push
cmc
lods
mov
jp
icebp
gs
mov
xlat
stc
ja
xor
dec
inc
mov
pop
inc
dec
(bad)
pusha
daa
cmp
in
sbb
inc
add
cmps
scas
jg
adc
cdq
aas
int
into
sar
cs
inc
pusha
outs
addr16
addr16
or
mov
(bad)
mov
sub
out
dec
addr16
out
inc
aaa
inc
in
out
pusha
fnstsw
enter
push
repnz
push
mov
fbstp
outs
jb
push
or
call
cmc
imul
jg
cmp
test
bound
dec
pop
mov
(bad)
jb
sub
stos
aam
sar
pop
pop
and
jle
adc
dec
imul
pop
fs
sub
mov
sbb
sbb
push
dec
sbb
pop
retf
je
retf
fwait
repz
mov
mov
pop
adc
stos
push
or
xchg
xor
gs
aaa
cld
stc
fdiv
test
or
dec
and
(bad)
outs
xor
test
sub
push
inc
push
xchg
loop
in
mov
cmp
(bad)
jmp
pop
adc
mov
adc
push
stc
das
mov
call
iret
in
inc
pop
rcl
fxch
(bad)
popf
mov
push
sub
fadd
xchg
adc
cld
cmps
jg
mov
jo
leave
adc
jp
fidivr
arpl
xchg
ficom
stos
jecxz
leave
pop
mov
or
js
ficom
aad
jl
repz
sub
fnstcw
mov
cmps
jle
mov
(bad)
lea
jl
xchg
lea
jle
movs
or
push
jbe
fs
dec
jno
imul
add
mov
ret
stc
xlat
aad
bound
jle
xchg
or
add
jb
call
pop
xchg
loope
adc
scas
aad
cmps
inc
mov
mov
jg
cmp
out
adc
movs
sbb
xlat
test
jbe
(bad)
fwait
int
loope
(bad)
push
mov
xchg
js
xor
and
mov
outs
xchg
scas
push
rol
fsubr
les
fwait
pop
stos
sbb
and
repnz
imul
dec
test
scas
retf
(bad)
pop
mov
add
mov
and
inc
clc
mov
mov
sbb
(bad)
mov
call
mov
sub
push
es
shl
setno
sbb
jecxz
mov
dec
imul
cmp
push
xor
and
adc
rol
cmp
dec
pop
sub
mov
push
xor
out
rcl
jb
push
js
retf
sbb
dec
mov
ror
sti
push
fwait
movs
(bad)
cmp
dec
mov
mov
add
inc
push
push
pop
and
xchg
mov
push
loope
cdq
movs
dec
xchg
lock
aas
nop
jae
test
push
cld
cdq
sub
call
outs
lahf
mov
and
out
outs
lods
call
lods
cmp
dec
scas
(bad)
aad
and
mov
cmp
loopne
push
xchg
fnstcw
rcr
add
cmps
scas
cmp
arpl
xacquire
mov
push
fcmovbe
xchg
sub
dec
fisub
cmp
retf
adc
sbb
stc
mov
and
cmp
push
fsubr
arpl
mov
sbb
cmp
ins
jae
or
push
inc
retf
pop
in
xchg
sbb
cmc
dec
es
pusha
int3
dec
jbe
dec
xlat
mov
ins
mov
pop
xchg
fs
(bad)
add
pop
add
adc
imul
jle
scas
mov
popa
dec
ret
call
sub
sbb
mov
jmp
loopne
pop
push
sbb
cwde
ins
ins
or
(bad)
test
std
out
fadd
out
loop
fisubr
(bad)
adc
loop
imul
dec
mov
in
jl
xchg
je
sub
adc
and
inc
adc
sbb
out
jae
sub
bound
mov
xlat
and
test
sti
outs
dec
adc
or
xor
outs
mov
je
push
inc
test
mov
adc
or
push
jg
(bad)
jecxz
mov
outs
test
into
in
(bad)
fimul
push
push
dec
fucom
mov
adc
jo
gs
dec
rcl
lea
mov
jecxz
aad
adc
cwde
dec
or
mov
test
cmp
xchg
clc
add
(bad)
ja
and
setle
gs
int3
mov
stos
add
(bad)
pusha
lods
popa
pop
dec
cdq
mov
sbb
push
stos
movs
div
loope
cwde
cdq
in
call
jl
mov
adc
sub
mov
jne
mov
adc
rcl
xor
mov
cmp
das
and
clc
or
in
dec
fild
repz
sub
cmp
push
sbb
push
pushf
push
mov
lods
ror
sbb
xchg
ds
scas
cmps
cmc
dec
pop
xor
hlt
popf
dec
sbb
sbb
in
mov
fneni(8087
add
fs
popf
cwde
test
sti
pop
add
test
add
cmovae
int
xor
nop
mov
push
mov
sub
sub
push
xchg
mov
inc
xchg
out
mov
mov
sbb
adc
adc
mov
in
scas
add
cld
outs
push
push
jecxz
or
push
mov
lahf
jno
sbb
outs
jb
mov
loop
cld
sbb
inc
test
sar
ret
addr16
repnz
pushf
lods
fdiv
test
arpl
je
jmp
mov
loop
mov
mov
pop
push
jno
stos
test
sahf
mov
(bad)
xchg
js
out
dec
sub
push
test
call
cmp
mov
test
mov
fistp
mov
leave
(bad)
jmp
movs
out
jge
cmps
and
xchg
stc
ins
mov
mov
push
and
ss
lock
ret
aas
xchg
sub
push
fdiv
(bad)
js
inc
idiv
scas
outs
add
stc
repz
aam
jo
fistp
out
jp
and
xchg
inc
inc
pushf
cmps
popf
in
mov
(bad)
loop
nop
pop
xor
xchg
cli
scas
out
mov
adc
pop
mov
lds
sar
mov
es
cmp
pop
call
pop
mov
or
lds
jns
jg
leave
jnp
mov
xor
dec
fnstenv
xchg
push
xchg
in
inc
mov
mov
inc
cmp
setle
call
xor
scas
cmp
(bad)
jecxz
shl
sub
lea
sbb
pop
retf
cmp
or
mov
fld
and
lods
xor
sbb
mov
aad
pop
comiss
mov
outs
cmp
das
jge
mov
jo
and
cmp
fidivr
push
pop
pop
cmp
inc
mov
push
add
aaa
popa
sahf
mov
sti
xchg
cwde
jo
lea
or
sub
jmp
push
sahf
sub
hlt
test
xor
xor
dec
test
les
test
xchg
sbb
(bad)
sahf
dec
add
push
imul
in
xchg
jo
inc
mov
retf
push
inc
and
xchg
jge
hlt
xor
mul
(bad)
sbb
iret
cmp
xor
ret
pop
adc
jae
test
sbb
adc
call
lods
mov
retf
mov
xchg
hlt
into
(bad)
jp
lods
xor
(bad)
xor
scas
je
lods
retf
mov
ds
adc
inc
ins
mov
cmps
jle
sbb
pop
cs
pop
hlt
int
xor
test
loop
cmc
cmc
(bad)
data16
sub
sahf
ret
and
icebp
call
popf
call
sub
lods
aam
or
mov
and
or
adc
sub
mov
imul
jmp
jbe
mov
jnp
fst
inc
dec
add
mov
leave
xchg
mov
push
inc
ret
rcl
pop
retfw
(bad)
jmp
inc
xchg
sbb
cli
or
fsub
mov
pop
imul
xchg
lahf
in
(bad)
enter
leave
or
mov
movs
inc
jmp
outs
lods
inc
add
push
stc
dec
cmc
clc
fimul
(bad)
mov
sub
dec
clc
daa
sbb
sub
jmp
pop
mov
daa
ds
jmp
jbe
mov
mov
scas
jecxz
add
mov
push
movs
jo
cs
jmp
mov
push
das
sbb
xchg
loop
add
popa
push
test
out
and
adc
sar
xchg
or
mov
aad
jle
jge
jl
mul
mov
and
pop
repz
hlt
xchg
or
stos
cmp
fsubr
push
mul
lock
leave
jnp
fs
retf
add
nop
aaa
jp
imul
test
inc
mov
sti
mov
pop
mov
inc
fs
sbb
pusha
and
cmp
add
mov
adc
jl
mov
int3
fdiv
out
push
arpl
jmp
dec
in
jle
shl
xchg
in
sahf
scas
inc
mov
dec
adc
ds
sbb
xchg
pop
pop
push
adc
and
cmp
jmp
test
sub
(bad)
fnsave
jl
xchg
scas
cmc
sub
add
enter
pop
retf
xlat
push
dec
scas
in
or
jmp
push
sbb
or
push
aad
enter
retf
jg
xor
fwait
pop
fwait
pop
aad
xchg
xchg
imul
jb
cdq
push
xchg
aam
rcr
out
or
movs
adc
cli
mov
mov
push
push
sbb
xor
shl
test
xor
retf
dec
jg
scas
ins
pusha
neg
jmp
es
(bad)
xor
add
adc
fs
and
push
mov
scas
cmp
test
sbb
dec
fld
cld
dec
sub
out
retf
mov
and
je
add
ror
popf
xor
ficomp
out
or
sbb
mov
(bad)
push
add
sbb
mov
mov
jle
cmp
lea
(bad)
leave
(bad)
ja
movs
sbb
aad
lock
sub
and
gs
mov
xchg
clc
in
and
pop
xchg
(bad)
mov
push
jbe
div
loopne
fmul
shl
mov
xor
arpl
fdivr
inc
and
iret
imul
add
fwait
push
mov
imul
(bad)
out
(bad)
rol
(bad)
call
idiv
jno
iret
loop
movs
(bad)
outs
sub
shr
mov
jg
stos
and
fwait
(bad)
jge
lds
xor
icebp
inc
adc
xchg
lock
movs
outs
push
push
test
sbb
mov
jns
fwait
sbb
(bad)
jmp
dec
jg
popa
jge
mov
xor
ror
sbb
in
(bad)
shr
ret
cs
jmp
add
sub
sbb
test
outs
add
icebp
jl
xor
mov
mov
sahf
out
fadd
in
mov
iret
and
stc
pop
lahf
leave
or
les
call
push
mov
imul
std
sbb
jae
dec
cmp
jp
mov
movs
aam
and
xor
retf
aaa
test
into
inc
aas
rcr
add
movs
ret
sub
mov
pop
xchg
sub
push
dec
or
jg
xor
ret
xchg
in
and
leave
sbb
loopne
or
adc
sub
add
loope
mov
outs
sub
cmp
pop
jo
lods
add
push
(bad)
stos
js
int
mov
cmp
mov
cld
xchg
mov
clc
push
jno
jnp
cmp
fisub
sub
out
aad
xchg
xor
enter
cs
mov
add
(bad)
push
(bad)
add
lods
nop
xor
pop
sub
(bad)
(bad)
inc
and
lods
add
repnz
shl
xchg
scas
adc
jmp
jns
pop
pop
lock
or
mov
sbb
bound
and
icebp
neg
add
or
mov
inc
hlt
sub
dec
jmp
pop
into
mov
sub
out
sbb
xor
dec
fisubr
add
or
mov
pop
or
popa
or
cmp
fwait
imul
jp
sbb
pop
das
loope
fistp
test
into
ss
and
bound
mov
out
movs
int3
mov
push
hlt
push
(bad)
dec
push
aad
je
sbb
push
push
push
movs
mov
out
fiadd
jg
fadd
dec
arpl
inc
cs
xchg
mov
mov
adc
mov
shr
ins
enter
push
pusha
std
xchg
mov
shl
adc
sub
idiv
loopne
fstp
adc
jp
fsubr
jns
sub
enter
dec
fild
cmp
jne
shr
add
fwait
retf
add
push
shr
xor
add
mov
dec
gs
test
(bad)
jg
pop
call
xchg
imul
add
xchg
add
fist
and
stc
fwait
mov
xchg
cwde
daa
sahf
mov
fs
test
or
dec
test
pop
pop
cmp
int3
pop
and
xor
adc
je
cmp
fsubrp
loope
jb
fdivp
mov
jb
fisub
lods
jae
out
jg
pop
sbb
and
sbb
mov
ins
cmp
cmovno
int3
repnz
retf
mov
lods
add
cmc
imul
cdq
(bad)
jne
xchg
sbb
jns
xor
inc
leave
aad
aam
(bad)
adc
pop
inc
add
loopne
retf
inc
mov
sbb
in
sub
fistp
and
arpl
dec
repz
jecxz
sub
adc
push
(bad)
lods
sar
stos
aam
jae
sbb
aad
dec
movs
std
cld
jle
scas
add
push
add
mov
sar
cmp
test
fistp
pop
aam
fs
inc
sub
pop
xchg
inc
cmp
cmp
sar
push
cld
inc
xchg
mov
inc
or
repz
mov
sub
add
js
adc
jb
xor
xor
(bad)
lock
leave
stos
cmp
enter
cmc
pop
jno
jnp
outs
sub
mov
xchg
fs
adc
mov
inc
lods
sub
dec
ds
cwde
sbb
dec
fs
and
idiv
xor
outs
or
sbb
xor
sbb
loope
add
faddp
fs
nop
mov
xlat
sub
fimul
push
cli
mov
mov
jle
pusha
mov
outs
pop
xchg
mov
xchg
cmps
mov
or
dec
sub
pop
ja
add
push
in
and
xor
sub
rcl
adc
and
aam
shl
bound
scas
scas
shl
mov
bswap
cmp
sub
mov
or
cmps
cli
mov
js
iret
js
repnz
adc
adc
arpl
lods
test
(bad)
shl
push
test
mov
ins
pop
or
or
or
mov
bnd
push
cmps
pop
gs
outs
pop
cmp
shl
or
in
and
ins
xor
fimul
iret
icebp
push
sahf
pop
add
jp
dec
jae
pop
jne
in
push
pop
dec
je
or
cmc
icebp
push
cli
adc
pop
enter
in
and
mov
push
test
xor
mov
xchg
push
pop
dec
xrelease
je
mov
sub
scas
aam
nop
icebp
inc
mov
xor
out
ds
pop
pushf
cmp
add
nop
icebp
dec
mov
std
test
jge
ins
loope
push
adc
mov
mov
scas
fmul
sti
add
cs
loop
mov
sar
xchg
sbb
ret
iret
loop
jg
(bad)
les
sub
sbb
xchg
mov
push
sbb
aad
in
pop
adc
mov
xchg
and
push
mov
std
lahf
sbb
push
ins
gs
dec
inc
aas
pusha
clc
xor
(bad)
imul
outs
je
mov
or
popa
call
inc
jbe
inc
push
out
pop
movs
mov
in
std
jns
xlat
pop
out
std
sbb
out
mov
push
or
pop
mov
pop
push
cmps
push
fld
adc
mov
jle
ins
mov
inc
xchg
xlat
or
push
sub
inc
mov
dec
dec
(bad)
stos
mov
add
sub
sbb
call
jge
dec
pushf
adc
mov
test
or
hlt
jae
dec
in
fild
mov
push
push
pop
ret
or
jnp
inc
fsubr
ret
ss
in
cmp
xchg
sbb
(bad)
int3
or
push
cdq
cli
retf
arpl
dec
ss
in
out
enter
mov
fistp
retf
jmp
fwait
or
sbb
cmc
and
or
or
jae
xchg
adc
popa
sbb
cmp
push
jne
jo
xchg
outs
pop
xchg
loopne
into
add
xor
mov
add
test
in
cmps
(bad)
into
add
xor
fnsave
xor
shr
mov
jbe
stc
clc
cmp
adc
in
stos
mov
shl
dec
(bad)
ja
int
mov
mov
jmp
fldcw
into
les
or
inc
jmp
test
mov
(bad)
loope
dec
push
aam
mov
jns
int3
setp
mov
aad
jl
mov
cmps
movs
scas
lock
cmp
fdivr
adc
dec
push
and
xor
bnd
push
lahf
cmp
clc
jne
fsubp
jns
movs
xchg
imul
lahf
mov
jae
inc
cli
and
sub
movs
fldcw
call
jae
nop
add
test
cld
dec
cmc
mov
xchg
ins
and
cs
fisttp
leave
ins
in
pushf
arpl
xlat
adc
cmp
mov
cld
rol
retf
inc
sti
imul
std
push
outs
pop
cmp
sbb
add
xor
fimul
add
icebp
aaa
inc
cdq
xchg
jg
cdq
enter
cmp
jl
fnstenv
sti
sbb
test
fiadd
in
adc
cmp
adc
pop
xor
mov
ins
push
cdq
je
test
fcomp
inc
and
sbb
mov
call
into
xchg
ror
pop
jbe
jmp
xchg
dec
adc
xor
sub
sbb
sbb
mov
cmp
sbb
jb
les
jmp
shl
dec
jmp
cdq
xor
push
test
push
dec
jae
inc
xchg
or
fxam
aam
(bad)
fsub
xchg
mov
push
mov
inc
call
ror
sbb
scas
fcomp
add
mov
arpl
fld
push
fbstp
les
dec
les
push
stc
fldcw
mov
mov
mov
push
mov
sbb
or
aad
rcr
popa
sbb
sub
xchg
cli
cwde
mov
sbb
pop
mov
fnstcw
imul
jne
dec
sub
cmp
sbb
mov
gs
test
pop
(bad)
(bad)
iret
push
jne
mov
jmp
or
cmc
mov
sbb
mov
lds
and
ret
cmp
imul
dec
arpl
fisubr
and
or
mov
mov
sahf
imul
gs
cmp
rol
dec
out
mov
fiadd
inc
xor
ja
mov
mov
jno
call
mov
xchg
cmp
pop
jo
clc
loopne
ins
pop
mov
movs
mov
xor
inc
jo
add
shr
jl
mov
xchg
pop
ja
mov
inc
pop
sbb
mov
jne
shl
shl
adc
jmp
lahf
lea
cld
imul
push
push
xor
out
repz
fbstp
test
pop
sub
push
pop
in
js
dec
test
xchg
rol
ss
push
outs
jge
mov
out
inc
add
mov
mov
and
in
adc
ficomp
jp
popa
jecxz
jae
scas
pushf
jp
jle
xor
outs
loopne
call
pop
cmp
dec
call
add
(bad)
jnp
and
daa
in
push
jns
adc
in
cli
push
movs
sar
and
pop
and
mov
ret
cwde
(bad)
call
dec
mul
jae
inc
lock
aad
xchg
retf
sbb
push
mov
cmp
(bad)
sub
add
frstor
and
mov
out
loop
jae
xchg
mov
cdq
lea
or
sti
loope
ins
stc
mov
adc
sub
mov
or
scas
mov
sbb
mov
lds
xor
add
mov
jg
push
and
sahf
mov
inc
arpl
pop
mov
int
and
fdivr
in
fnsave
adc
jnp
int
in
mov
(bad)
out
mov
fidiv
mov
lods
(bad)
popa
pop
sub
pushf
movs
or
mov
ret
push
lea
(bad)
loopne
jo
xchg
imul
adc
pusha
pop
dec
pop
cmp
js
fsub
lock
dec
cs
xchg
push
das
in
movs
xor
xchg
push
sub
in
push
out
dec
inc
pop
iret
movs
adc
repnz
in
fild
stc
pop
aad
or
add
push
popa
aad
mov
aam
shl
std
fnsave
mov
adc
shr
or
in
ss
(bad)
jg
dec
sbb
imul
cmps
cmp
xchg
test
mov
stc
out
mov
add
les
mov
lea
fsubr
xchg
int3
retf
cmp
bound
das
mov
in
scas
sub
pop
cmc
dec
mov
fwait
cmp
gs
bound
jbe
jno
sbb
cmps
jo
pop
xchg
pinsrw
das
pop
jmp
lods
pushf
mov
fsubr
ficomp
repz
cmps
pop
iret
ins
aas
js
sbb
xor
aam
xchg
inc
xor
retf
cli
cmp
push
xor
data16
rcr
int3
adc
mov
lods
(bad)
out
jne
jbe
add
push
popa
or
outs
dec
xchg
mov
add
imul
sbb
mov
mov
adc
xor
fcom
(bad)
test
daa
mov
adc
xchg
pop
jno
sar
pop
movs
out
jge
lock
icebp
ins
push
lock
sbb
jmp
mov
or
inc
stc
mov
popa
(bad)
pop
sub
outs
fs
jmp
test
dec
adc
nop
loopne
inc
cmp
mov
xchg
add
or
and
cmp
add
mov
xor
mov
inc
xchg
call
push
pop
syscall
or
adc
mov
pushf
stos
xchg
icebp
arpl
addr16
jnp
je
nop
in
or
dec
push
imul
push
mov
and
cmp
xchg
jmp
bound
mov
cmp
sub
lock
jl
mov
idiv
pushf
adc
inc
push
pop
xor
fcom
lods
in
hlt
push
jno
dec
or
mov
test
and
iret
loope
lea
xchg
jo
rcl
mov
mov
test
jl
les
fs
je
mov
dec
xor
xchg
inc
lock
gs
cmp
outs
shl
(bad)
rcr
es
(bad)
push
dec
shr
ror
xchg
fs
fdivr
mul
arpl
lock
xor
loopne
sahf
sbb
adc
cmps
and
shl
lahf
mov
cmp
mov
addr16
shl
out
pop
adc
jo
fadd
cwde
xchg
ret
outs
ret
cmp
stos
les
xor
bt
daa
gs
call
rol
int
xor
es
mov
xor
mov
(bad)
or
mov
inc
jb
mov
and
ss
mov
sahf
adc
nop
xchg
(bad)
lahf
jle
pusha
fwait
cmc
mov
ret
lea
test
and
fld
addr16
int3
push
push
addr16
and
ja
cwde
xor
pop
fs
dec
mov
pop
mov
sbb
push
cmc
cmp
xchg
shl
inc
mov
adc
je
(bad)
repnz
aad
sub
xchg
or
fcomp
out
test
xchg
jno
cmp
aad
enter
and
push
cmps
adc
jne
dec
push
pop
shr
pop
fiadd
cmp
cmps
gs
cmp
sub
add
cmp
sti
xchg
inc
jae
push
or
retf
das
loopne
push
xlat
push
dec
leave
enter
cmc
pop
mov
pushf
enter
test
leave
xchg
xchg
bound
mov
jbe
sub
fdiv
jno
pop
nop
pop
not
push
push
popa
jp
lock
fsubr
outs
rol
mov
pop
adc
mov
xchg
and
enter
movs
stos
inc
pop
sbb
xor
jmp
aam
cmps
outs
movs
xor
int3
loop
and
loopne
js
sahf
mov
mov
mov
ja
repnz
daa
cmp
or
loop
lods
call
add
mov
push
cmp
sbb
call
aas
lea
sbb
push
lock
xor
jae
dec
push
or
out
push
push
movs
fsub
xchg
xchg
pop
xor
loopne
aam
fisttp
std
pop
out
push
add
push
(bad)
lods
sbb
fs
maxps
(bad)
neg
pop
add
addr16
pop
ret
iret
mov
add
add
cli
mov
jmp
dec
jns
sub
sbb
dec
mov
xor
pop
xchg
and
pop
adc
adc
dec
inc
inc
jecxz
shr
jle
faddp
leave
inc
add
inc
sub
mov
pop
push
cmp
sbb
mov
inc
ret
cmp
ja
iret
dec
pop
or
and
pushf
mov
bnd
xor
mov
movs
jmp
repnz
or
mov
cmp
push
mov
mov
pop
push
out
add
pop
test
mov
jnp
pop
int
scas
lea
bswap
ds
nop
mov
mov
cmp
cdq
jl
mov
in
cmp
pusha
loop
ja
movs
fdiv
and
inc
arpl
sbb
jle
jno
pusha
push
mov
rol
cmc
inc
push
rcr
out
cmp
lea
arpl
test
popfw
scas
inc
xor
call
pop
inc
(bad)
sbb
push
add
lock
mov
dec
fwait
(bad)
or
sbb
jae
ss
leave
pop
mov
leave
lods
cmps
adc
xchg
sbb
out
or
ret
(bad)
or
jge
push
ficomp
icebp
cli
mov
cdq
adc
dec
add
loope
pop
in
jecxz
popf
pop
test
xor
test
mov
aad
movs
sub
movs
pushw
and
out
mov
jmp
cmp
xor
jnp
sar
pop
and
fwait
mov
mov
mov
mov
arpl
fwait
adc
addr16
xchg
jmp
inc
call
icebp
mov
aaa
idiv
push
mov
int3
sub
(bad)
fmul
jns
imul
adc
cmp
mov
mov
sahf
mov
jmp
fwait
addr16
iret
dec
add
adc
cmp
outs
hlt
push
(bad)
fldenv
outs
mov
push
mov
jnp
add
cmps
inc
out
call
xor
jecxz
cmps
retf
adc
retf
inc
outs
rcr
scas
aam
adc
out
fidivr
repz
adc
loope
enter
rcr
call
lahf
jne
and
ja
mov
dec
and
sub
xchg
(bad)
gs
sub
gs
daa
push
fild
adc
movs
mov
add
test
or
shl
ss
pop
lea
push
inc
scas
mov
jns
xor
push
fld
in
pop
pop
sub
inc
(bad)
nop
js
cmp
xor
out
inc
mov
mov
cmp
add
scas
(bad)
sub
in
add
pushf
(bad)
push
cmp
jno
push
(bad)
and
xor
cmc
xor
pop
mov
or
ja
cmp
leave
xchg
mov
pop
scas
mov
outs
push
jbe
jecxz
repz
loop
das
adc
pop
mov
in
loopne
jmp
push
push
jle
add
shl
fdiv
inc
jno
pop
xor
dec
test
mov
dec
lds
arpl
fadd
cmp
mov
fistp
cmps
xchg
loopne
and
test
xchg
push
scas
mov
test
jmp
adc
sub
jmp
push
cld
lods
jg
call
lds
repnz
mov
cwde
inc
fisub
jge
xchg
add
jnp
adc
xchg
xor
or
stc
retf
pop
and
or
popf
es
bnd
(bad)
jp
and
fdiv
adc
fstp
cmps
stc
pop
pop
cmc
sbb
loope
xchg
ficomp
dec
psubsb
lods
mov
mov
cmc
and
(bad)
xchg
ins
popw
movs
int
out
xor
movs
scas
cmps
sbb
inc
loope
mov
mov
and
jmp
xor
cmps
push
dec
(bad)
push
pop
pop
test
mov
dec
push
jmp
ret
push
or
sbb
adc
aaa
mov
pop
xchg
xor
ja
jae
in
mov
fwait
cmps
mov
cwde
and
ss
lods
cmps
pop
mov
sbb
cmc
push
int3
xor
das
jl
pop
stos
out
(bad)
mov
int3
jbe
mov
push
and
xor
je
leave
add
ret
xor
loope
mov
scas
shl
in
adc
cmovo
(bad)
fimul
push
dec
sub
lods
push
mov
sub
push
jmp
cmp
mov
pushf
inc
mov
add
push
jmp
(bad)
or
push
ret
sub
and
add
out
sbb
pusha
add
lahf
aam
xchg
gs
cmp
arpl
fsubr
aas
or
es
data16
jno
ins
rol
jae
jp
mov
mov
add
dec
xchg
stc
stos
add
dec
(bad)
jl
or
xchg
pushf
ja
dec
mov
int
ret
cmp
test
xchg
ret
add
mov
mov
stos
push
fs
push
dec
retf
cmp
mov
push
cmp
and
cwde
loop
xor
bound
test
movs
mov
in
shl
hlt
fisub
or
push
or
js
adc
jae
push
lahf
gs
mul
adc
sbb
ror
daa
add
aas
retf
test
out
push
int
pop
scas
inc
and
sub
mov
enter
and
cmp
sar
jo
mov
dec
cwde
ret
sbb
pusha
cmp
lods
dec
xor
add
cmp
stos
pop
loopne
test
scas
jno
pop
pop
pop
mov
scas
lock
stos
test
mov
outs
dec
fwait
clc
aas
sub
adc
outs
stos
mov
push
sbb
(bad)
loop
inc
jbe
ror
int
mov
mov
sahf
pushf
pop
retf
dec
xchg
and
and
fld
push
loope
push
sbb
mov
push
jbe
(bad)
and
xor
xor
and
repz
xor
adc
pop
into
mov
jb
and
ret
ds
ins
jmp
shr
lds
inc
popa
std
jl
popa
lahf
imul
test
jmp
hlt
jp
inc
and
mov
jmp
lods
mov
call
push
or
sbb
loope
add
lds
mov
lahf
xor
pop
xchg
call
xchg
(bad)
fimul
(bad)
jb
and
ins
neg
icebp
jnp
hlt
push
cli
xor
and
inc
jmp
dec
(bad)
mov
scas
aam
push
inc
mov
psubusb
mov
cmp
fmul
mov
rcr
imul
push
cmp
mov
les
mov
std
fwait
pop
inc
mov
sbb
das
mov
enter
dec
fisttp
scas
sub
inc
push
dec
adc
xor
pop
sub
call
add
dec
jae
push
dec
lds
mov
mov
mov
iret
cmp
gs
cmp
out
pop
in
(bad)
jb
sub
(bad)
xor
lods
pop
push
inc
cwde
xchg
sbb
dec
cwde
cmp
xlat
or
ins
arpl
jmp
stos
push
int3
mov
sub
in
add
ret
std
fild
xchg
jae
lods
mov
div
shl
test
xchg
sbb
xor
inc
cmps
dec
mov
imul
sub
and
pushf
sbb
(bad)
lods
fist
mov
mov
mov
mov
rcr
push
add
sar
xchg
cmps
clc
adc
jae
fwait
sub
cmp
leave
xchg
push
sti
jns
sub
dec
dec
out
(bad)
xchg
mov
sbb
lock
call
push
out
int3
nop
test
or
pop
cmp
xor
ins
pop
fbstp
imul
xor
loop
mov
jb
test
add
popf
imul
scas
imul
cwde
mov
in
jmp
pop
lahf
jg
and
dec
mov
jno
mov
jbe
add
push
and
push
sub
mov
hlt
je
imul
push
or
pop
jl
sub
data16
mov
pop
push
call
dec
in
cmc
xor
and
cmps
shl
(bad)
rol
shl
in
leave
mov
xor
or
in
xchg
mov
cdq
cmovge
jmp
retf
push
in
or
je
fcmovbe
inc
jbe
fisub
and
out
mov
inc
stos
pop
push
or
push
aad
lock
add
xchg
cmps
rol
(bad)
ja
xchg
push
imul
adc
push
push
test
cmp
sub
sti
mov
or
push
loop
xlat
xchg
jns
sub
push
fld
jecxz
jmp
je
mov
or
cdq
leave
push
dec
jbe
fwait
pop
gs
mov
pop
repz
and
dec
jno
cmp
call
cs
pop
out
or
rol
sub
sahf
getsec
aad
lods
cmc
push
shr
push
sahf
jno
or
ss
mov
and
mov
sub
xchg
outs
sub
and
inc
mov
xchg
retf
or
call
sub
dec
call
dec
enter
scas
sbb
adc
les
int3
mov
push
mov
xchg
(bad)
xchg
mov
mov
in
jmp
rol
inc
inc
adc
push
std
mov
xchg
pop
xchg
pop
dec
cmps
mov
push
push
mov
in
sbb
or
push
mov
jbe
add
or
rol
popa
(bad)
xor
push
jg
in
and
push
sub
adc
mov
inc
scas
div
mov
rol
into
pop
jb
ret
repnz
jl
std
cmps
into
ror
add
fistp
sbb
pop
(bad)
std
inc
and
jns
lahf
xor
mov
sbb
sub
int3
dec
(bad)
push
jb
in
jnp
ret
outs
out
push
retf
push
(bad)
mov
aad
repz
adc
lds
scas
and
lahf
icebp
jb
lods
push
loope
or
push
bound
inc
push
scas
sub
fs
cmp
sbb
xchg
or
adc
mov
jmp
mov
mov
in
nop
dec
out
push
jecxz
(bad)
xor
mov
xor
mov
cmps
js
mov
std
sub
mov
loopne
(bad)
cmc
popa
inc
sub
mov
pop
repz
xor
jbe
jno
inc
stos
jecxz
popa
cmps
pop
aaa
xor
inc
pushf
dec
inc
int
outs
sub
mov
mov
not
xor
inc
dec
(bad)
lock
mov
pop
in
or
jae
xor
mov
dec
lds
fs
and
or
push
ss
gs
push
movs
jg
mov
scas
inc
jb
stos
adc
ja
mov
push
lods
mov
(bad)
inc
push
dec
movs
lods
sub
inc
cs
mov
iret
stos
mov
or
gs
cmc
lahf
loopne
push
sar
mov
dec
dec
inc
or
mov
dec
out
fimul
dec
iret
lds
xor
test
(bad)
dec
sbb
sub
scas
mov
jl
lds
sub
jg
pop
and
add
sub
ror
lods
jae
dec
in
mov
pusha
mov
sub
and
xchg
xchg
or
lds
inc
loope
loope
jl
or
dec
outs
xchg
push
jmp
fnstsw
pop
and
sub
and
adc
bound
in
lock
ret
pop
jg
retf
lock
out
imul
jl
outs
sub
jmp
mov
sbb
out
jnp
xchg
xchg
inc
aad
and
push
cmp
mov
outs
add
clc
das
add
scas
jne
dec
mov
movs
retf
xchg
inc
xchg
mov
aas
push
jp
out
mov
cs
loope
or
int3
pop
jp
jg
outs
scas
(bad)
xchg
aad
rol
lahf
call
movs
adc
pop
shl
sub
adc
jns
pop
and
dec
shl
bound
adc
jne
mov
and
sub
or
adc
cmp
xor
sti
mov
fldenv
dec
(bad)
repz
cli
dec
xchg
in
fbld
xor
adc
js
fistp
sbb
bound
jmp
test
pop
and
pop
lods
adc
or
push
pop
out
js
test
(bad)
cmp
outs
mov
dec
dec
cmp
sbb
cld
stc
inc
jo
jbe
cld
pop
xchg
adc
mov
mov
inc
out
shl
jg
mov
lods
mul
xor
imul
cld
cwde
xchg
loop
in
or
mov
leave
out
adc
loope
push
ins
mov
ret
lea
imul
cmp
out
mov
repz
iret
xchg
jp
mov
lock
dec
bound
(bad)
dec
cmp
push
sub
scas
rcr
mov
mov
popf
push
or
fucompp
jns
xor
aas
fnstcw
jns
mov
int3
mov
push
mov
popa
loope
(bad)
xor
dec
jg
call
icebp
adc
push
out
xor
and
in
or
bound
cmp
std
xor
push
stos
jnp
mov
ins
dec
aam
adc
test
push
into
pop
loopne
iret
sbb
inc
repz
std
cmp
mov
fcomp
addr16
mov
sti
ficomp
js
pop
test
jmp
fisub
js
jmp
retf
and
ja
sub
mov
sahf
sub
les
fwait
adc
test
push
xchg
dec
loop
rcr
ror
mov
jmp
dec
xchg
out
fstp
ins
and
out
(bad)
bound
std
pop
xor
cmps
cdq
mov
inc
jle
(bad)
jecxz
sti
lods
pop
inc
jl
stc
pop
pop
jmp
mov
fisttp
mov
xchg
ss
and
sbb
xchg
sub
xchg
mov
dec
mov
pop
pushf
cdq
inc
into
cmp
in
add
mov
in
in
jmp
add
ss
or
adc
pop
jmp
mov
outs
mov
mov
shr
out
(bad)
std
cmp
mov
sti
pop
inc
or
movs
inc
aaa
cmp
sub
movs
sbb
sbb
xor
pop
mov
push
mov
mov
std
add
scas
add
(bad)
out
sbb
xchg
xor
and
mov
mov
pop
pop
or
sub
stos
shl
jbe
push
sar
bswap
cmps
sti
and
xlat
in
add
fist
xor
mov
cs
dec
cmp
outs
sbb
jle
cli
jae
aas
lea
and
lds
leave
push
xchg
(bad)
stos
je
loop
into
adc
xchg
fist
mov
pop
sti
adc
dec
push
aad
add
add
aam
popf
jle
daa
fdivr
jno
clc
pop
gs
xor
dec
push
loopne
xor
movs
adc
jl
and
cmp
add
clc
pop
es
rol
push
dec
and
leave
sub
aas
cmp
scas
ins
add
sbb
test
arpl
mov
fisub
lods
das
scas
jns
push
rcl
sub
aaa
mov
adc
idiv
inc
stos
ins
sbb
xchg
cmp
mov
xlat
jns
or
aad
loop
pop
cmp
xlat
sar
xor
cmp
shl
mov
cmp
jecxz
(bad)
cmp
out
and
aaa
dec
push
int3
mov
mov
push
and
and
push
sbb
push
stos
sbb
arpl
xchg
push
xor
pop
call
pop
jns
imul
or
xchg
sbb
into
mov
movs
xchg
adc
mov
into
pop
fwait
cmp
into
push
or
mov
mul
cmp
ss
mov
div
dec
mov
cli
and
es
outs
pushf
lods
cld
es
cdq
inc
jmp
push
in
sub
mov
and
int3
push
mov
jo
cmp
out
cld
jmp
jmp
les
push
sub
inc
rcr
mov
xchg
ins
push
jle
shl
sar
push
xor
call
pop
addr16
cdq
in
sub
(bad)
jl
cmc
xor
gs
retf
(bad)
test
icebp
xor
out
and
(bad)
test
or
les
or
and
push
mov
jmp
call
cmp
cmp
dec
movs
xor
sub
push
sub
cmp
ror
inc
sahf
in
scas
sub
movs
clc
jmp
pop
jl
jmp
clc
lahf
loop
inc
out
clc
fcomip
dec
add
mov
ins
std
(bad)
ins
inc
sahf
pop
ss
push
nop
(bad)
hlt
push
dec
out
sbb
xor
xchg
xor
add
mov
sbb
movs
imul
xor
cwde
arpl
xchg
jle
jp
jne
call
xchg
dec
jne
cmp
mov
stos
cdq
add
aam
push
out
or
setl
jl
jns
mov
mov
imul
cmc
aam
popa
mov
xor
sub
imul
test
test
gs
sub
int3
out
bound
fild
retf
dec
xchg
jbe
mov
into
int
mov
xor
(bad)
retf
out
(bad)
movs
xchg
sti
std
pop
push
mov
imul
xor
push
movs
xor
test
fisub
inc
call
sub
imul
aad
mov
mov
add
scas
lea
inc
pop
and
push
movs
mov
inc
nop
jp
inc
sti
aas
test
(bad)
out
cmc
push
dec
xlat
push
jb
lock
pusha
dec
xor
cmps
lds
push
inc
rep
jb
aaa
cli
sti
jbe
xchg
push
and
call
aaa
ror
ins
pop
cmp
sub
jno
pop
mov
jecxz
sbb
jne
cmp
sbb
mov
or
mov
xor
xchg
imul
aas
add
dec
jno
dec
sbb
or
and
ja
inc
inc
and
ds
jg
sbb
and
jnp
mov
add
retf
add
or
sbb
mov
stos
cmp
daa
outs
push
retf
xor
jno
in
dec
stc
cmp
inc
outs
ret
outs
mov
scas
in
add
(bad)
call
(bad)
pop
daa
push
inc
jge
shl
lds
cli
and
mov
or
js
jmp
sub
lods
mov
mov
jne
mov
sbb
nop
sub
push
out
push
mov
scas
jno
xchg
out
push
cmp
not
xchg
jp
cmc
retf
sahf
hlt
jge
add
push
cmp
mov
mov
push
sub
inc
sbb
xchg
or
xchg
rcr
cmp
dec
dec
daa
cmps
sub
pop
pop
les
xor
stos
fist
mov
popa
jae
sbb
mov
clc
pop
sti
lods
movs
int3
div
cmp
dec
and
adc
jg
stos
(bad)
pop
push
ret
mov
repnz
xor
lds
movs
or
test
cmp
(bad)
xchg
adc
xor
iret
jmp
mov
mov
mov
rol
push
ins
rcr
inc
movs
ins
or
mov
fidivr
mov
std
popf
es
arpl
adc
mov
imul
(bad)
sub
xlat
cdq
push
out
pop
es
ret
pop
dec
adc
push
inc
leave
lds
shr
xor
sbb
push
cmp
stos
outs
mov
repnz
jmp
add
popa
sbb
sti
jnp
jnp
(bad)
lods
cli
jp
xor
scas
jle
sbb
xchg
inc
lea
fwait
in
(bad)
or
push
sub
stos
ins
sbb
mov
iret
arpl
hlt
jo
in
jecxz
les
shl
xchg
iret
imul
inc
imul
mov
pop
add
je
jmp
test
ret
leave
cmp
mov
shl
sub
push
xor
mov
(bad)
adc
mov
inc
hlt
dec
push
inc
daa
cmps
inc
mov
sub
test
out
jge
fcmovu
mov
mov
jp
xchg
sahf
aad
rol
dec
sar
inc
adc
outs
out
lods
int
retf
scas
add
push
cmp
lods
cmp
xor
out
or
dec
or
mov
jns
add
fnstsw
sub
inc
cmps
ja
mov
stc
sti
nop
sub
(bad)
repz
and
lods
and
mov
stc
mov
xchg
adc
sub
inc
iret
xor
stc
loopne
gs
idiv
out
vpaddd
jne
adc
inc
ror
test
outs
fmul
mov
mov
push
lods
rol
dec
push
mov
lea
test
mov
shl
push
xor
push
mov
xor
movs
mov
sti
stc
pop
push
jo
imul
hlt
lods
ss
mov
push
fcomip
pop
(bad)
fbld
lods
das
lea
sbb
add
in
aas
in
mov
fiadd
mov
mov
lea
push
cwde
xchg
fsub
repnz
cmps
push
out
cld
inc
push
and
lea
sbb
rcl
sbb
cs
imul
cmp
and
movs
mov
in
inc
cmp
xchg
sti
lock
pop
stos
or
idiv
(bad)
jns
ret
cdq
popa
xor
xchg
dec
(bad)
rcl
daa
cmp
cmp
dec
xchg
sbb
aaa
jmp
sub
(bad)
shl
mov
xor
fs
sub
rcr
pop
cmps
push
or
stc
xor
imul
push
xor
adc
out
std
test
(bad)
pop
xor
sbb
xlat
cdq
gs
add
outs
jmp
fs
cld
mov
jp
sub
cmc
mov
cs
xlat
das
or
loopne
push
or
inc
test
ds
mov
in
mov
ins
jp
pop
scas
outs
shl
repz
add
icebp
pop
div
mov
or
sahf
mov
dec
fldcw
mov
sbb
int
call
push
add
fcomp
je
(bad)
shl
fisttp
mov
push
ficomp
rcr
lds
stc
sar
and
data16
test
lahf
rol
ror
mov
adc
sahf
sbb
sub
std
ret
push
les
not
pop
xchg
lds
jge
xor
out
(bad)
xchg
imul
popf
outs
in
push
lahf
cmp
aaa
pop
sbb
fmul
xchg
cmp
je
stc
mov
sbb
int
pop
pushf
lahf
gs
hlt
(bad)
das
shl
movs
jbe
adc
(bad)
cmc
xor
out
cld
aas
xor
xor
add
adc
test
jg
or
popa
jae
add
sub
ds
call
fild
add
add
mov
adc
mov
add
loop
sub
pop
(bad)
cmp
jmp
mov
cmps
pop
mov
adc
ins
pop
jne
std
iret
fcomi
ins
mov
fcmovbe
jno
aam
nop
inc
out
and
les
xchg
scas
lds
pop
leave
inc
enter
(bad)
out
int
in
loopne
idiv
xchg
xchg
inc
scas
push
pop
daa
dec
mov
add
mov
(bad)
dec
ror
jnp
inc
inc
in
push
aaa
inc
leave
mov
and
and
push
cmp
push
jmp
and
(bad)
push
mul
add
scas
cmp
pop
in
inc
lods
pop
mov
popf
push
jno
cmp
shl
or
sub
push
add
(bad)
call
sub
pop
add
test
jae
sub
sbb
imul
or
mov
adc
int3
xchg
leave
dec
or
pop
mov
ja
and
mov
frstpm(287
(bad)
jl
cmp
xchg
aam
xor
ret
adc
xchg
imul
imul
sbb
in
loop
sti
retf
mov
into
enter
adc
cmovg
mov
jp
mov
cs
push
mov
stos
(bad)
jb
int
in
lods
xor
gs
xor
dec
xor
xchg
push
mov
add
les
fiadd
fs
sub
push
add
adc
out
gs
sub
or
fisub
jo
call
xchg
add
out
in
add
sbb
test
push
inc
ja
rol
fcomp
aaa
fs
xor
jno
jo
pop
lahf
jg
mov
jne
or
xor
cmc
sub
adc
fbstp
adc
fs
jb
mov
retf
push
rol
jle
and
jg
call
dec
enter
int3
movs
push
fist
addr16
sub
ret
inc
jg
sbb
xchg
fwait
sti
pop
or
and
xchg
cmc
cmp
dec
or
push
retf
sub
ins
sbb
(bad)
inc
nop
inc
sti
fnstcw
add
sbb
(bad)
int
mov
cld
jle
mov
or
aas
int3
test
ins
xchg
cmp
pop
fcom
mov
(bad)
rcl
fistp
push
push
ss
stos
pop
pop
or
mov
inc
loopne
jg
mov
or
(bad)
stc
out
dec
mov
loop
in
cmovs
push
test
test
jl
mov
loop
push
jbe
ret
lock
inc
jno
outs
adc
aad
std
adc
shl
add
cmc
xchg
fidiv
ret
addr16
adc
clc
outs
int
ret
xchg
dec
xor
imul
in
sub
push
adc
xchg
addr16
mov
(bad)
lahf
arpl
cwde
cmp
hlt
es
xchg
jg
adc
jmp
fwait
and
setno
adc
loopne
out
jge
movs
mov
leave
inc
adc
dec
push
cmps
rol
mul
scas
xchg
sar
nop
mov
pushf
hlt
ret
in
dec
xlat
jns
rcr
dec
jne
cmps
pop
lods
xor
xlat
xor
or
in
fistp
retf
mov
adc
pop
sub
cwde
data16
leave
jl
sbb
inc
(bad)
bound
imul
sub
js
rol
rol
std
add
jnp
jns
in
inc
enter
lods
jo
mov
fnstsw
int3
add
and
push
pop
pushf
dec
and
popf
sbb
fwait
cmp
test
lea
fimul
dec
xchg
pop
cli
push
loopne
jo
push
(bad)
sbb
push
push
adc
pop
pand
jnp
outs
mov
(bad)
ss
and
mov
ja
cmp
or
in
sbb
mov
fist
pop
xchg
mov
fs
movs
pop
pop
mov
mov
(bad)
or
sti
adc
mov
js
out
outs
ficomp
adc
cdq
shl
not
(bad)
stc
push
sub
js
mov
aas
jns
arpl
gs
pop
hlt
dec
out
ins
movs
xor
fisttp
add
clc
push
dec
xchg
push
and
es
mov
adc
jo
xor
loopne
adc
and
stc
or
test
ret
jbe
sbb
fbld
jp
inc
pop
dec
fcom
xchg
or
mov
and
add
add
loopne
ss
jo
fsubr
ins
pusha
dec
dec
push
(bad)
rol
and
sub
iret
dec
dec
xchg
push
movq
mov
ins
cli
fild
add
sbb
shl
das
xor
dec
ins
push
das
mov
dec
lods
xlat
sub
shl
mov
fld
sahf
outs
imul
test
leave
test
jge
mov
icebp
ds
in
mov
add
xchg
mov
mov
mov
jbe
dec
adc
adc
pop
mov
and
cwde
inc
sbb
ins
enter
outs
sbb
punpcklbw
push
xor
scas
dec
pop
mov
or
jle
in
add
fist
cmc
mov
(bad)
js
mov
mov
mov
(bad)
sbb
daa
xor
aam
dec
aas
scas
in
adc
push
add
dec
call
ret
push
addr16
(bad)
stc
pop
jb
ins
jnp
popf
retf
sub
loope
cs
iretw
sub
add
mov
fisttp
or
aam
mov
stos
(bad)
sbb
push
jge
ds
xchg
and
or
jb
push
sub
int
je
fdiv
mov
(bad)
xlat
fwait
inc
jecxz
mov
test
iret
in
fidiv
cwde
dec
mov
xor
jg
aam
sahf
sbb
add
stos
add
add
mov
xchg
call
cmp
adc
pop
jo
call
fdivr
cmp
movq
test
pop
popf
mov
mov
icebp
arpl
mov
lods
lock
xchg
inc
aas
arpl
sbb
retf
adc
adc
sbb
cmp
jle
dec
cmp
mov
and
dec
out
mov
imul
outs
xor
or
enter
mov
aas
mov
enter
test
xchg
pop
xchg
shl
sbb
jbe
sub
stc
test
fld
jno
mov
push
add
jmp
stos
aam
xor
shl
mov
imul
and
push
push
xchg
mov
outs
pushf
in
lods
aaa
cmp
xor
add
add
pop
ins
jmp
les
retf
les
mov
cmp
popa
cmps
pop
adc
mov
mov
fs
xlat
xchg
mov
add
fsub
mov
jno
or
add
xor
out
(bad)
mov
add
pop
add
(bad)
push
es
pop
iret
add
in
(bad)
sbb
lds
xor
sub
jmp
adc
cmp
dec
lea
xchg
push
pushf
out
jge
test
cmps
sub
jp
add
icebp
cld
pushf
iret
ja
cld
loope
mov
shl
xlat
in
or
ret
aas
(bad)
cmc
mov
les
loopne
jno
fdivr
jg
add
xor
in
dec
lahf
jmp
jp
add
fst
jne
adc
adc
sbb
and
xchg
pop
into
popf
les
cmps
mov
push
sbb
popf
inc
out
mov
iret
mov
rol
adc
in
fidivr
inc
in
push
and
ins
xor
mov
sbb
fxch
cmp
cmp
les
jae
xor
ret
and
pop
jne
mov
add
pushf
in
jo
scas
ror
ss
dec
mov
enter
and
movs
mov
dec
sub
not
add
les
sti
cmc
mov
sub
mov
pop
push
sbb
iret
dec
adc
in
scas
xchg
nop
int
jns
push
pop
cmp
pop
sbb
xor
in
dec
mov
xor
lahf
inc
xchg
jmp
add
or
stc
fadd
add
scas
out
inc
xor
int3
imul
push
fs
addr16
cmp
(bad)
and
mov
test
(bad)
in
out
aam
les
push
js
iret
lock
lahf
xor
adc
and
test
ja
ins
addr16
xor
push
mov
cmp
add
xor
gs
mov
movs
push
sub
leave
dec
neg
and
repz
or
lds
enter
or
inc
int3
pop
scas
cmp
ds
inc
jmp
ror
retf
add
retf
stos
fstp
fcom
fldln2
inc
adc
cdq
call
das
sub
adc
jbe
inc
repz
movs
pop
aas
inc
xchg
in
xchg
mov
or
push
or
in
adc
pop
pop
loope
mov
sbb
xchg
add
ficom
jl
ds
stc
aaa
in
ret
dec
jae
push
inc
jb
xor
fst
int
sub
shr
mov
ss
or
loop
fdivrp
test
int
loopne
es
pop
jne
arpl
pushf
adc
add
out
and
fdiv
add
mov
push
(bad)
loop
mov
outs
mov
sbb
and
cmps
cmc
inc
pushf
daa
xchg
js
push
pushf
cmc
aam
jb
stos
jecxz
fdivrp
xchg
dec
sub
and
arpl
mov
cs
add
repnz
nop
shr
dec
popf
in
ret
mov
mov
inc
test
cs
or
mov
mov
sar
outs
ins
daa
sbb
test
in
sbb
mov
enter
lods
sub
ficomp
das
push
pop
cmp
xchg
cwde
and
cld
mov
das
and
push
xchg
xor
sub
sub
pop
cmps
jmp
push
dec
or
xlat
pop
mov
maxps
inc
adc
jecxz
xchg
aam
sahf
mov
mov
pop
and
das
int
jno
xchg
xor
scas
sub
shr
repnz
scas
pop
adc
cmps
mov
ja
mov
repnz
rcl
or
pop
mov
mov
mov
pop
xor
mov
into
jge
mov
call
dec
mov
push
add
xchg
jae
mov
cmp
cmps
push
xchg
pop
mov
outs
jns
adc
retf
mov
add
push
fst
mov
sbb
adc
jle
imul
jle
or
clc
cmp
adc
hlt
out
arpl
jne
mov
out
mov
or
neg
stc
jo
jno
(bad)
repnz
and
sti
cmp
mov
xor
ss
adc
inc
mov
aas
or
cwde
std
xor
sti
shr
adc
es
pop
xor
shl
add
sub
mov
or
ficomp
pop
xchg
adc
lods
pop
dec
pop
es
xlat
push
adc
stos
inc
cmova
jle
bound
out
push
xchg
push
xlat
push
inc
or
call
enter
stc
cmp
into
sbb
rcl
sub
daa
or
and
pusha
xor
pop
ss
out
add
jp
gs
cmp
sar
sub
retf
xchg
loope
and
bound
or
test
xchg
inc
mov
das
add
loopne
shl
(bad)
outs
push
mov
fcom
pop
xor
jo
jb
ins
icebp
mov
(bad)
into
adc
lods
jo
leave
loope
shr
jge
cmp
neg
ror
stc
(bad)
aas
add
movs
rcr
cli
dec
or
repnz
mov
push
xchg
das
inc
in
xor
fldcw
xchg
lahf
retf
pop
pop
pop
sub
cli
jns
mov
mov
rcr
xor
add
inc
sbb
pop
cwde
rcr
sub
repz
add
fwait
test
leave
fidivr
std
movs
out
push
mov
cmps
scas
jno
cmps
cmp
movs
movs
cmp
jmp
fst
xlat
cmp
int
xchg
xlat
dec
repz
xor
leave
lods
lods
pushf
gs
fisubr
jecxz
leave
aad
int3
mov
jbe
imul
fld
mov
aad
cmp
(bad)
jno
pop
nop
iret
mov
js
sbb
es
push
call
sub
push
inc
into
shr
inc
call
out
xchg
popf
add
sahf
cmp
in
repz
hlt
xchg
adc
jo
mov
jecxz
ret
repnz
inc
clc
sub
pop
rcl
sahf
xor
shr
mov
imul
test
mov
out
(bad)
xor
inc
xchg
pop
fxch
lock
pop
push
scas
inc
jnp
aas
repz
int3
xchg
lods
outs
mov
sahf
scas
inc
push
add
dec
test
rol
cld
add
pop
pusha
fild
adc
and
shl
xchg
lods
sub
sahf
mov
std
and
adc
jmp
int
dec
mov
mov
sbb
fild
cmps
cmps
inc
and
dec
movs
mov
int
(bad)
push
xchg
or
xchg
cmps
fnsave
stos
sbb
or
pop
sub
xchg
mov
idiv
jmp
stc
or
shr
inc
call
and
lods
pusha
jmp
adc
dec
ror
test
fld
xor
push
out
ret
retf
test
in
stos
mov
fnstsw
push
and
push
add
and
adc
mov
mov
aaa
icebp
fild
leave
mov
fld
mov
sbb
sbb
pop
test
mov
fwait
xor
pop
loopne
lods
push
and
mov
ss
je
sbb
lahf
cmp
xor
nop
rol
pop
jmp
ins
mov
jno
repnz
inc
jp
mov
push
or
cmp
and
push
adc
test
ins
retf
cwde
cdq
in
mov
pusha
jge
and
rep
into
enter
pusha
pop
inc
hlt
test
lahf
inc
out
adc
xchg
mov
scas
test
jge
sub
sub
sbb
out
shl
(bad)
outs
xor
in
out
pop
mov
xchg
or
lods
mov
or
daa
repnz
dec
mov
add
les
cmp
mov
xchg
pop
cwde
push
icebp
(bad)
test
fisub
add
lahf
jae
cdq
imul
jno
jecxz
pop
loopne
jl
push
in
rol
test
add
xchg
and
aaa
or
pop
aaa
aad
push
jg
in
add
jno
gs
stos
shr
mov
je
adc
mov
lds
sbb
stos
dec
mov
fwait
movs
jl
test
frstor
sysret
add
aas
pusha
jg
dec
fadd
mov
fistp
es
sub
and
dec
in
mov
outs
das
scas
scas
mov
adc
sbb
jo
in
add
imul
adc
push
daa
inc
mov
inc
int3
mov
and
cmp
shl
sbb
mov
pop
mov
or
push
push
push
mov
(bad)
dec
lods
js
adc
inc
(bad)
push
inc
pop
xchg
push
push
xor
xchg
fisttp
add
or
pop
mov
pop
mov
aaa
inc
js
or
xchg
inc
int3
pop
xor
(bad)
(bad)
mov
clc
cli
xor
add
ins
cwde
gs
not
jmp
out
lods
push
mov
lds
fld
aam
fcomi
(bad)
push
lods
xchg
push
mov
js
test
sub
mov
cmc
add
jmp
pop
out
bound
fsub
mov
imul
cmc
out
in
in
or
and
nop
dec
cmps
xchg
sub
jmp
jns
(bad)
adc
mov
outs
ret
inc
pop
push
cs
hlt
lods
int3
es
pop
test
pop
in
cmp
bound
mov
mov
jb
cmp
mov
pop
cdq
cmp
ja
test
and
xor
dec
ja
add
xchg
jmp
out
xor
push
sbb
cld
stos
push
jge
(bad)
aam
lods
ins
pop
or
cwde
imul
mov
stos
out
mov
hlt
cmp
push
cmp
cmc
out
(bad)
mov
pop
leave
pop
loope
outs
cmp
add
in
or
xchg
sbb
mov
xchg
test
enter
mov
add
mov
gs
lods
jae
pusha
rol
dec
inc
loop
jnp
pop
hlt
aaa
xor
mov
sub
cmps
xchg
cli
and
inc
inc
pop
icebp
jbe
sbb
sbb
aaa
jnp
into
enter
xor
mov
retf
call
mov
push
mov
in
mov
ins
push
std
pushf
jmp
fwait
mov
inc
ds
cwde
pop
or
aad
push
pop
and
sar
add
shl
dec
dec
pop
add
mov
aad
pop
in
mul
popa
ins
(bad)
test
jo
ret
dec
adc
mov
jge
mov
out
dec
mov
in
add
mov
js
or
add
mov
mov
lods
dec
movs
push
push
jmp
ror
dec
sbb
jmp
push
xchg
cmc
aam
aas
mov
sub
fcom
push
xchg
pop
mov
push
push
outs
xchg
ffree
(bad)
enter
push
ror
xchg
stos
(bad)
and
cdq
jecxz
add
push
mov
cmp
mov
rcl
xchg
jns
in
cmp
xlat
add
shr
aad
jb
shl
lods
lods
es
gs
push
outs
push
mov
push
dec
shr
mov
inc
imul
jg
test
xlat
hlt
jo
sbb
std
std
cli
sahf
fld
rcl
lods
push
ins
sub
jne
popa
cmp
add
imul
lods
mov
test
mov
fsubr
call
xor
stos
outs
sub
xchg
bound
fs
in
sbb
fucomp
clc
jno
cmp
inc
xchg
movs
jo
test
jl
data16
mov
jle
adc
not
fwait
push
xchg
pop
and
lahf
in
bound
or
sti
pop
sub
jge
fst
cmp
push
not
inc
jmp
aaa
outs
call
jp
test
cmps
mov
jp
sbb
jle
mov
dec
iret
mov
mov
repnz
div
neg
out
xor
cmp
iret
(bad)
xchg
push
dec
out
jb
leave
jns
cmp
add
call
repnz
lods
push
int
fistp
shl
inc
sbb
out
mov
aas
sbb
jmp
sbb
mov
mov
std
push
jmp
shl
adc
mov
fisub
or
fwait
imul
pop
xor
xor
push
retf
dec
dec
dec
xchg
add
arpl
out
pop
push
sub
les
and
(bad)
hlt
mov
push
js
mov
xor
(bad)
out
lods
dec
scas
pop
loop
sbb
into
xchg
dec
pusha
adc
or
jge
xor
and
mov
pop
sub
fisttp
pop
int
ins
movs
cmps
aad
call
jl
add
jbe
jno
rcr
and
(bad)
addr16
jmp
aad
add
jns
sbb
cmp
add
mov
mov
cs
idiv
sbb
pop
mov
rcr
enter
test
inc
out
mov
shl
stos
fcomp
(bad)
fdiv
pop
sar
cmp
cmp
cwde
lods
(bad)
push
cmp
repnz
clc
(bad)
rcr
mov
sbb
mov
ins
and
push
shl
inc
jae
test
jle
fs
xchg
mov
add
lock
ficomp
rol
xor
jge
popa
je
push
xchg
mov
cdq
aaa
sub
ins
lea
leave
sub
test
mov
outs
push
add
js
cli
xor
sbb
mov
pop
pop
shl
xchg
push
or
imul
(bad)
(bad)
inc
je
xchg
inc
jns
pop
cmp
and
pop
fs
repnz
push
retf
pop
daa
sbb
jno
jbe
in
dec
mov
dec
xor
sar
jecxz
int3
jnp
fld
pop
xchg
adc
push
shl
pop
nop
pusha
mov
push
sbb
sbb
dec
sub
inc
cmp
mov
(bad)
push
adc
adc
repz
lods
pushf
(bad)
int
fdivr
push
shr
mov
in
adc
mov
dec
test
cmps
sub
fimul
dec
jge
push
pop
jecxz
pop
jmp
shl
shl
push
sub
mov
loope
fisttp
push
into
mov
push
mov
mov
(bad)
mov
enter
ins
and
retf
jmp
mov
mov
cwde
jge
mov
pop
mov
imul
inc
pop
cmp
stos
dec
fisubr
pusha
lods
and
xchg
cmc
loope
xchg
mov
test
pop
ins
repz
push
(bad)
dec
add
mov
dec
(bad)
ins
xor
add
mov
inc
(bad)
push
ret
mov
sbb
push
inc
xlat
into
dec
inc
jle
mov
aas
je
push
je
loope
dec
pop
ret
push
or
test
jl
jle
jno
push
push
retf
push
fwait
dec
or
sub
pop
lock
scas
xor
adc
add
aaa
(bad)
repz
loop
not
xchg
aaa
mov
xor
mov
stc
lea
mov
addr16
sbb
lds
cmps
out
leave
xchg
iret
loopne
xchg
pop
cmp
dec
cli
mov
push
mov
mov
inc
mov
retf
int3
or
sub
aas
lods
pop
add
clc
inc
hlt
adc
inc
mov
pop
sbb
dec
into
nop
mov
sbb
inc
adc
inc
inc
add
outs
das
sub
sbb
adc
cmp
or
stos
mov
(bad)
mov
xchg
or
push
mov
test
jge
mov
dec
sbb
mov
add
pushf
sbb
(bad)
or
scas
(bad)
dec
jge
xor
in
xor
push
pop
mov
mov
push
xchg
sahf
shl
call
ret
add
outs
test
test
into
movs
std
push
dec
push
adc
mov
inc
stc
add
sub
(bad)
enter
dec
sub
mov
ret
adc
idiv
(bad)
push
and
jle
xchg
and
pop
dec
stos
adc
jmp
push
or
mov
mov
sbb
push
ror
cmps
sub
jg
fwait
je
xor
adc
(bad)
out
xor
mov
lock
mov
aaa
push
stc
retf
mov
pop
das
(bad)
pop
sub
(bad)
setp
xchg
ins
mov
(bad)
pop
test
push
xchg
inc
inc
test
clc
xchg
aad
aad
mov
outs
adc
cmps
mov
stos
cmp
loop
test
dec
mov
data16
sbb
mov
cld
sahf
sti
push
push
xchg
xor
imul
jbe
stos
cmp
aaa
iret
xchg
test
pop
cmps
adc
jle
imul
inc
xchg
mov
out
sub
loopne
mov
stc
std
in
test
(bad)
mov
cmp
dec
jnp
shl
push
push
add
push
sar
call
push
imul
in
or
push
dec
fisttp
add
sbb
sub
jbe
add
sahf
fcmovnb
mov
xor
sub
xor
cmp
aas
dec
jle
sbb
repz
shl
rcl
mov
loopne
sahf
mov
add
ins
imul
inc
test
test
add
fs
cwde
jl
pop
stc
cmp
test
out
pushf
sbb
add
into
in
sbb
jnp
push
inc
retf
out
push
call
ins
inc
repnz
dec
aad
imul
add
and
lods
xor
pop
aam
cmp
push
call
leave
jge
sub
sub
inc
dec
jo
shl
add
mov
hlt
shl
ret
xor
push
loope
add
sub
xor
loop
addr16
xor
adc
push
adc
sub
das
push
lods
or
outs
adc
xor
ss
pusha
and
xor
(bad)
ret
dec
xlat
pop
repz
and
mov
mov
movs
mov
pinsrw
jge
shr
rcl
add
jns
push
jb
push
in
sbb
fnstsw
int3
les
cmp
adc
jg
sub
add
xor
add
inc
push
xchg
daa
jbe
repnz
test
cli
add
adc
loopne
iret
int
aam
jae
int
inc
ret
lahf
inc
and
sub
rol
stos
jne
mov
shr
mov
xor
xchg
retf
icebp
ds
mov
push
icebp
xor
cli
js
and
and
es
sub
lods
fldenv
jg
xor
lods
test
dec
add
push
pushf
push
bound
push
ret
out
push
dec
nop
shl
dec
mov
inc
loop
fwait
xchg
mov
out
call
fist
mov
rcr
imul
dec
inc
mov
es
sub
cmps
test
ins
std
fistp
push
jg
stc
dec
cmp
lea
cdq
mov
adc
push
sbb
dec
mov
cdq
adc
xor
ret
inc
sub
ret
sbb
(bad)
stos
addr16
inc
xchg
(bad)
xor
pop
add
je
inc
cmp
xchg
xchg
push
adc
call
push
cs
loop
ss
loopne
inc
sub
cmp
cli
rcl
mov
add
mov
fdiv
js
rcr
ficomp
xchg
inc
dec
aam
mov
cmp
outs
icebp
dec
sahf
arpl
xchg
idiv
gs
dec
xchg
sbb
sahf
or
push
jmp
out
out
sbb
mov
mov
dec
xor
xor
mov
push
sub
movs
sbb
inc
icebp
sbb
das
xchg
retf
idiv
pop
jne
rcr
jge
out
mov
jne
stos
fistp
mov
dec
stos
int
and
sti
jp
push
mov
mov
adc
xor
xchg
cmps
add
inc
push
sub
imul
call
fnstsw
adc
cmp
pushf
aaa
call
cld
sbb
je
(bad)
sar
and
xor
xor
mov
mov
xor
pop
mov
mov
sbb
jg
xchg
sub
popa
or
(bad)
xchg
sbb
jne
jae
dec
mov
jp
xchg
sbb
das
sbb
out
xor
push
push
pop
push
xchg
adc
or
and
rcl
inc
in
into
stos
or
ja
sub
cmpxchg
cdq
(bad)
sbb
push
xchg
ds
mov
cmp
lahf
mov
sbb
cmp
enter
scas
xlat
adc
xchg
xchg
cdq
scas
pop
or
aam
push
pop
sbb
or
xchg
push
xchg
and
xor
or
test
out
les
outs
div
push
jb
nop
cmp
movzx
pop
xor
pop
outs
inc
icebp
enter
les
adc
and
lds
push
mov
dec
loop
sub
xchg
xor
push
push
jae
ins
fs
shr
lea
xor
pop
and
xchg
imul
xor
cld
ret
std
xlat
cmps
pusha
push
adc
inc
(bad)
mov
adc
jae
pop
cmp
or
rcl
shr
push
call
jbe
js
jmp
in
cmp
lahf
cdq
out
int
(bad)
jp
out
das
jmp
fwait
stos
loope
or
push
pop
popa
outs
jbe
cmp
or
cmps
mov
aam
mov
clc
int
aad
jmp
push
scas
mov
push
push
dec
fcmovnb
pop
aam
movs
mov
sub
mov
hlt
call
fnstenv
mov
fs
mov
imul
dec
push
shr
mov
jecxz
jl
cmps
pop
sbb
fild
sub
jbe
pop
cmp
cmp
xor
icebp
movs
test
sbb
and
das
test
outs
adc
sub
cmp
push
test
inc
sbb
xlat
adc
in
test
lahf
inc
dec
xchg
retf
mov
sub
iret
fsubr
cmp
les
adc
fimul
ins
pop
xlat
mov
ret
and
jbe
pop
push
out
jnp
or
addr16
icebp
xor
cld
mov
xor
pusha
jb
push
cmp
mov
adc
jbe
or
vmovq
lahf
inc
push
sub
jecxz
xor
xor
mov
jmp
inc
fcom
and
ss
out
out
mov
sbb
sbb
fiadd
or
scas
cmp
fdivp
xchg
adc
test
cmps
xor
xor
or
mov
movs
mov
adc
fs
loopne
pop
test
push
das
push
mov
sbb
cmps
push
inc
fcomp
stos
and
sub
add
movs
(bad)
inc
mov
mov
inc
fucom
xlat
push
lea
aad
jae
and
ds
fwait
les
mov
test
fs
xlat
vmread
mov
movs
cmps
cmp
mov
add
test
sub
push
pushf
ficom
int3
push
xor
jae
xor
push
out
jno
(bad)
jp
mov
xor
add
jns
retf
cs
std
push
add
xor
mov
imul
in
ror
outs
dec
shl
(bad)
cmp
rol
push
sbb
movs
push
xor
jecxz
popf
enter
mov
push
scas
out
cmp
aad
adc
add
cs
push
pop
ret
sub
inc
sbb
arpl
or
ret
push
aam
addr16
adc
mov
inc
push
aaa
sahf
loop
leave
push
cmp
stos
(bad)
push
or
jnp
mov
idiv
jmpw
pusha
out
mov
adc
imul
mov
(bad)
and
shl
and
lds
or
out
retf
and
mov
push
pop
jle
cmp
dec
shl
sub
cmp
(bad)
mov
push
(bad)
sbb
push
repnz
or
iret
call
int
addr16
xchg
movs
pop
pop
pop
xchg
clc
push
inc
mov
cld
sbb
inc
in
pop
jg
sub
push
test
push
pop
push
cmc
adc
fstp
jnp
pop
fist
loop
std
(bad)
test
add
sub
xchg
repz
test
std
xor
stos
in
aam
pop
movs
inc
fist
dec
push
dec
mov
out
(bad)
popf
ins
scas
adc
rcr
movs
xchg
sbb
cmp
dec
es
mov
sar
(bad)
fwait
rcr
clc
mov
icebp
xor
stos
and
ret
push
fdiv
int3
push
mov
xchg
shr
sbb
sbb
retf
mov
mov
pop
adc
lds
jbe
pop
jne
test
dec
leave
rcr
lds
stc
xchg
xchg
sbb
pop
cld
mov
mov
or
ins
mov
inc
pop
rol
pop
mov
ret
cmp
cli
dec
jo
ja
shl
les
sub
mov
bound
sahf
popa
sar
add
push
add
xchg
(bad)
out
(bad)
nop
sbb
repnz
popf
(bad)
xor
(bad)
dec
movs
or
mov
push
pop
jb
mov
cmp
shl
mov
xor
shr
stos
dec
out
push
push
enter
xchg
repnz
cmp
mov
addr16
in
xor
jp
sti
lods
ror
inc
ret
mov
push
movs
adc
test
mov
test
jle
in
fwait
cli
inc
mov
and
cdq
mov
adc
shr
mov
stc
std
and
add
jmp
or
mov
ins
xchg
dec
outs
retf
mov
cmovg
mov
inc
cmp
or
add
jmp
fsubrp
sbb
mov
or
in
push
xor
movs
ja
ror
jp
xor
aaa
add
imul
nop
leave
mov
(bad)
jecxz
bnd
stos
xchg
jp
nop
adc
out
push
cmp
call
add
fbld
outs
xchg
xor
outs
cwde
neg
mov
lahf
mov
retf
movs
cmp
sbb
rcr
xor
xor
mov
aaa
inc
pop
inc
jl
jmp
jge
sahf
adc
int
mov
add
sub
cmp
cmp
sub
test
pushf
mov
xchg
das
fiadd
dec
outs
pop
cli
jb
outs
jb
add
dec
sar
dec
mov
cmps
fidivr
push
or
pushf
aas
or
dec
outs
retf
xor
push
das
out
fadd
cld
addr16
or
inc
adc
retf
jle
dec
pop
dec
je
(bad)
lods
outs
arpl
xchg
fwait
cli
cld
(bad)
xchg
jge
cli
(bad)
jne
or
loopne
sub
mov
push
push
or
fidiv
cmp
jle
popa
xchg
(bad)
int
mov
dec
pop
pop
aad
leave
add
cwde
in
mov
cmps
mov
cmp
push
or
repz
xchg
cmps
ins
fs
sub
cmp
lock
inc
test
out
fwait
pop
mov
lock
jbe
push
cld
sub
adc
mov
or
sbb
jo
mov
cmp
(bad)
das
outs
in
jo
sub
data16
cmp
lods
loop
cdq
xchg
mov
inc
dec
push
aad
cs
push
enter
and
ficom
push
add
pop
icebp
dec
mov
fwait
inc
pop
jne
stos
retf
jp
fld
pop
(bad)
sti
aad
enter
mul
and
pop
jmp
nop
test
hlt
icebp
xchg
outs
jg
sbb
mov
popf
(bad)
fisttp
jmp
std
sbb
lahf
cwde
jmp
xor
push
dec
js
imul
loop
rol
push
icebp
icebp
mov
xor
sub
push
cmp
(bad)
and
xor
repz
cmp
ja
out
pushf
jne
int
arpl
sub
out
cmp
imul
adc
push
rol
xchg
fidiv
inc
call
js
push
(bad)
jle
fsub
sti
iret
add
ret
nop
sbb
pop
gs
hlt
ins
scas
xchg
out
stos
mov
sbb
push
scas
mov
ret
shr
and
push
stos
cmp
add
pop
push
out
add
xchg
leave
pop
(bad)
stos
add
jb
lods
inc
cwde
es
ss
(bad)
dec
sub
inc
rcl
xor
mov
enter
sbb
stos
fadd
call
xchg
jo
add
or
fnsave
ficomp
mov
in
push
rcr
stc
xor
dec
retf
int
rcl
out
sti
push
mov
int
mov
pop
jmp
les
mov
mov
dec
sub
mov
push
push
nop
hlt
aas
es
pop
xchg
xlat
add
sbb
hlt
push
movs
sbb
add
push
cmps
out
repnz
pop
pusha
fiadd
lds
out
add
jle
clc
ins
push
lahf
add
loopne
enter
mov
jne
ins
jmp
adc
loop
fs
and
jmp
sub
mov
into
adc
and
shl
pop
mov
push
xchg
xchg
mov
xchg
sub
push
cmp
mov
movs
aaa
xchg
pop
lds
outs
imul
(bad)
cmp
test
aaa
jle
std
cmc
cwde
jmp
and
and
pop
mov
adc
add
mov
cmp
adc
(bad)
retf
into
call
aas
shr
je
sbb
in
movs
jge
mov
push
inc
bound
lods
push
push
aas
jo
adc
or
call
movs
ins
push
adc
out
dec
jb
fmul
sbb
ret
adc
jecxz
imul
xchg
or
push
stos
(bad)
jno
jne
jb
in
aad
imul
cld
lds
mov
mov
fwait
mov
push
sbb
sbb
ds
je
loopne
pushf
xor
lods
sbb
push
jg
in
out
stos
adc
iret
and
stos
mov
inc
sub
fidiv
icebp
xchg
aas
jae
or
repz
sub
jge
pop
lock
arpl
ja
adc
xchg
das
leave
mov
lds
enter
loopne
lock
sahf
js
jg
call
inc
hlt
push
aaa
add
jns
inc
cli
jbe
push
mov
mov
neg
sub
xor
dec
not
and
(bad)
in
jnp
jo
ja
sti
push
jo
or
movs
inc
scas
jecxz
fistp
jne
cmp
std
or
cmp
push
shr
in
lea
mov
pop
jmp
enter
jle
(bad)
rol
out
out
(bad)
test
or
jo
xor
push
cmps
movlps
mov
or
les
sbb
pop
and
or
jmp
add
sub
sub
mov
pop
dec
cmps
js
arpl
imul
unpckhps
sub
cdq
pop
xchg
xor
lods
test
jbe
fisub
jns
add
addr16
out
ja
push
pop
lds
imul
inc
std
test
or
sbb
jl
and
cmp
outs
mov
frstor
cmp
outs
push
repz
ds
add
jne
pop
out
jge
(bad)
adc
cdq
jge
xor
ds
xor
dec
cs
or
and
adc
in
leave
pushf
lea
jmp
(bad)
sahf
pop
popf
das
repz
hlt
jb
or
push
xor
test
xlat
xchg
fisubr
jle
repnz
jl
daa
push
adc
jmp
sbb
cmp
mov
cmp
cmp
fisubr
rol
out
pop
inc
addr16
xor
push
inc
cli
call
dec
cmp
pop
sub
fild
(bad)
jmp
or
and
dec
dec
push
out
(bad)
sbb
mov
out
imul
and
cwde
push
ja
in
inc
arpl
xchg
jo
das
cmps
outs
stos
inc
lods
sar
or
(bad)
jp
hlt
in
test
test
or
int
sbb
rcr
lahf
xlat
repz
pop
xchg
pop
sub
mov
into
mov
add
fstp
(bad)
push
xchg
cmp
and
xchg
xchg
call
mov
ret
lods
adc
stc
xchg
stc
lds
sub
in
into
pop
in
cmp
push
scas
and
sub
dec
jae
sub
mov
push
enter
and
fnstenv
shr
dec
pushf
pop
cmp
inc
lds
jle
adc
adc
xor
mov
ds
retf
pop
dec
sbb
out
dec
jae
mov
fwait
inc
or
jne
xchg
lods
push
adc
push
inc
add
pop
lds
ds
pop
retf
and
jbe
mov
push
cli
test
push
cdq
mov
xlat
int3
or
outs
push
push
daa
in
call
mov
push
shl
adc
inc
xor
jmp
jle
pop
xor
mov
jecxz
test
stos
pop
mov
ficom
cmp
std
cli
adc
ror
jmp
inc
xor
adc
mov
lods
jo
inc
movs
xchg
fisubr
push
cdq
test
adc
daa
cwde
jae
push
mov
jmp
and
out
out
out
hlt
mov
xchg
cmp
lock
xlat
sbb
inc
(bad)
adc
lods
push
adc
push
ins
neg
cmp
add
cdq
mov
push
jno
pushf
rcl
nop
push
sahf
xchg
stos
and
push
in
add
ss
cmc
aad
push
lods
dec
mov
xchg
test
shl
in
sub
mov
push
xor
add
jno
or
mov
or
test
adc
xor
ja
xchg
push
cmc
mov
dec
aad
sti
mov
pop
out
push
pop
pop
aad
shl
cdq
jns
push
stos
inc
inc
mulps
fdivrp
nop
loopne
xchg
test
push
int3
and
inc
add
inc
inc
jecxz
loop
pop
(bad)
retf
jl
push
and
fisub
fisubr
cmp
xor
push
cmc
jbe
mov
stos
int
pop
sub
push
mov
(bad)
pop
mov
xlat
inc
out
mov
push
pop
aaa
les
sub
setns
nop
and
test
sahf
popa
(bad)
lea
mov
pop
aam
ret
dec
push
popa
rol
ror
test
adc
ficomp
shr
mov
icebp
and
cmc
push
jge
int3
in
jb
loope
mov
mov
mov
fisubr
sbb
push
or
inc
jne
mov
retf
cld
mov
sbb
pop
xchg
mov
pop
push
sub
leave
popf
mov
jp
xor
int
xor
cld
inc
push
cmc
mov
and
cwde
or
jle
lock
cmp
jno
lock
sub
push
sbb
and
xor
and
push
mov
hlt
cld
and
mov
pop
xor
and
aam
(bad)
adc
retf
dec
ret
in
and
and
mov
test
fs
daa
mov
or
(bad)
mov
cmp
call
and
mov
pop
rcl
outs
add
ja
test
es
sub
repz
(bad)
sti
xchg
stos
xchg
ret
jmp
add
clc
ror
jl
loop
mov
pop
jmp
xchg
jbe
and
(bad)
sub
cmp
fidiv
daa
xor
dec
mov
sub
ds
out
mov
test
lods
(bad)
or
push
imul
cs
ins
mov
scas
dec
retf
nop
jns
push
sub
xchg
adc
push
mov
jmp
pop
scas
or
xor
pop
mov
pop
dec
sbb
repz
mov
sub
dec
dec
xchg
daa
push
sub
ret
pop
push
(bad)
sub
mov
adc
pop
pop
das
out
sbb
movs
test
sub
and
cdq
sub
sub
aad
xor
nop
or
fsub
data16
jns
xchg
aam
push
not
push
xlat
not
add
enter
sub
cmp
push
xor
push
cwde
mov
sbb
ret
cli
mov
pop
jp
lods
mov
ss
dec
xor
jecxz
jl
test
in
mov
lods
xchg
int
jecxz
add
jbe
sbb
and
xor
xchg
jmp
dec
sub
clc
xchg
sub
xlat
add
cmps
and
cld
out
jns
push
mov
mov
out
stc
cmp
mov
sub
ins
inc
(bad)
and
push
icebp
xor
pop
jg
dec
stc
inc
shl
inc
add
push
jnp
cmp
and
fisttp
out
shr
iret
inc
push
pushf
adc
out
sahf
bnd
pusha
xchg
into
iret
imul
test
sahf
fcmovne
mov
pop
mov
xchg
adc
push
xchg
push
xor
leave
arpl
mov
cs
pusha
dec
push
or
call
lods
movs
pop
adc
mov
jo
mov
xchg
cwde
ins
or
data16
mov
pusha
mov
retf
fwait
mov
sub
enter
rcr
sub
cmp
ss
cmp
jns
inc
jne
xlat
xchg
movs
movs
cmp
mov
mov
into
inc
cmp
outs
sub
push
cmps
adc
rcr
sbb
es
inc
pop
sub
pop
add
adc
adc
pusha
in
pusha
movs
bnd
sub
cmp
pusha
lds
or
or
sub
mov
popa
jbe
(bad)
push
mov
movs
jp
in
mov
cmp
dec
push
push
gs
leave
xchg
mov
pop
repnz
add
jo
dec
xchg
jg
popf
add
mov
xchg
mov
pushf
xchg
imul
xor
scas
adc
enter
ror
add
sub
xchg
fnstenv
xchg
and
and
imul
pushf
adc
push
les
mov
xchg
pop
cmps
(bad)
push
mov
inc
pop
push
mov
in
cmp
cli
jae
mov
pop
test
inc
and
inc
lods
popa
outs
dec
or
adc
inc
out
pop
fs
popf
scas
stc
std
sub
ds
movs
out
inc
sbb
adc
mov
cs
sub
sbb
addr16
adc
out
cmps
jbe
jmp
add
sbb
xchg
ret
and
and
data16
ins
ds
jns
or
pop
aad
aaa
or
mov
mov
out
dec
mov
xor
inc
cmp
sub
pop
push
cmp
and
add
outs
mov
inc
jno
test
adc
(bad)
xor
mov
pop
pop
inc
pop
pusha
lock
jle
xchg
inc
push
enter
popa
retf
cmp
call
pop
add
fidiv
push
(bad)
xchg
dec
sub
or
xchg
push
ret
jae
imul
cmp
jp
push
or
das
(bad)
mov
test
je
outs
jno
cs
xchg
push
push
imul
push
dec
jmp
movs
mov
mov
push
xchg
xor
xchg
dec
mov
and
inc
fistp
dec
call
jb
jmp
fisttp
test
popa
dec
repnz
mov
jnp
fbld
mov
jge
inc
and
push
adc
neg
adc
dec
pop
sbb
or
xor
sbb
iret
ret
cmp
pop
adc
fcomip
test
jl
xor
mov
sub
jmp
jmp
cld
inc
push
mov
inc
int3
mov
jmp
sub
adc
mov
jg
lea
or
rcl
mov
mov
mov
call
ja
ds
pop
mov
scas
add
inc
fist
mov
mov
stc
je
inc
xchg
or
cli
cmp
popa
add
push
mov
pushf
out
and
fdivr
neg
ins
in
ror
xchg
xor
mov
leave
jmp
test
enter
(bad)
mov
or
mov
mov
inc
cmps
push
inc
pop
and
ss
mov
xchg
ja
push
aad
inc
dec
inc
scas
mul
pusha
shl
leave
and
mov
inc
ret
xchg
adc
lahf
pop
xor
xchg
push
ss
mov
dec
pop
nop
jmp
fwait
mov
mov
adc
fcom
(bad)
test
mov
cmp
dec
xor
mov
xor
aaa
sub
stc
adc
cmp
push
mov
inc
movs
pop
ins
sar
mov
sti
js
push
leave
push
fwait
push
jp
jnp
fidivr
imul
sub
mov
dec
outs
jecxz
jo
arpl
pop
int3
sub
lock
dec
retf
jne
and
repnz
dec
bound
mov
and
pop
sub
xchg
and
test
or
scas
int
and
adc
add
inc
fcomp
je
fisubr
pop
into
call
jno
jae
ins
dec
cli
cmp
push
and
popa
ret
idiv
in
dec
test
fsub
jecxz
test
(bad)
mov
into
int3
sub
aas
xchg
lock
mov
test
jns
mov
xchg
in
imul
cmp
sbb
jl
cmp
movs
cli
and
stos
sub
xchg
int
sub
push
frstor
sub
jle
js
sub
xor
gs
sub
retf
adc
xor
push
mov
arpl
jno
push
mov
mov
in
sub
dec
cmp
ds
in
xor
add
sar
mov
xchg
mov
movs
mov
xchg
add
xor
xor
test
jnp
sbb
cwde
stos
xchg
scas
sbb
and
out
mov
fs
inc
mov
pop
lods
and
xchg
shl
mov
jge
mov
mov
movs
lds
or
(bad)
jecxz
popf
test
ret
sar
mov
sbb
stos
int
xor
push
scas
test
les
iret
dec
push
icebp
push
mov
ret
rol
add
mov
(bad)
cld
mov
cmp
into
dec
mov
cdq
or
stos
dec
jmp
xchg
push
outs
mov
add
mov
inc
push
adc
je
test
lock
xchg
inc
mov
sbb
mov
xchg
nop
pop
retf
hlt
xor
inc
push
outs
mov
pop
hlt
push
sahf
popa
mul
inc
jne
addr16
mov
in
leave
jmp
mov
sbb
call
fisub
(bad)
lds
push
push
fisubr
cmp
dec
push
mov
mov
xor
dec
ror
inc
mov
cmp
cwde
xchg
sbb
mov
out
push
into
hlt
cmp
sar
pop
fisub
jl
in
cld
cdq
out
push
pop
jns
pushf
in
dec
cmps
shl
iret
fdiv
jmp
push
xor
aad
shl
xor
imul
je
loope
add
hlt
shr
movs
enter
fdiv
push
pop
adc
mov
into
(bad)
retf
fist
adc
(bad)
pop
sub
(bad)
and
mov
adc
cmp
dec
fist
shr
xchg
and
jecxz
or
mov
in
arpl
sub
jno
out
push
pop
sub
loop
aas
in
std
jmp
bound
arpl
jnp
cmp
hlt
dec
(bad)
dec
adc
sbb
adc
mov
ins
clc
inc
fcomp
push
add
adc
retf
dec
or
add
mov
mov
push
scas
mov
cmp
jnp
sub
sub
cmc
bound
sbb
adc
(bad)
(bad)
sbb
arpl
adc
inc
ficom
add
sbb
push
(bad)
or
pop
pop
fidiv
cmp
add
not
leave
mov
add
clc
mov
popf
outs
cmc
imul
ds
mov
ja
mov
rol
pusha
fwait
dec
xor
fidiv
adc
or
shl
pop
dec
ins
pop
dec
add
or
scas
shl
cmps
lods
jge
cmps
sub
repnz
(bad)
(bad)
fmul
outs
xor
cld
jmp
pop
jno
emms
mov
shr
cmp
loopne
dec
lea
xchg
fnstenv
add
pop
cmps
and
add
dec
xlat
ds
sbb
bnd
jg
clc
xor
int
scas
mov
dec
movs
cmp
or
inc
ds
jmp
cdq
xlat
mov
dec
jbe
mov
or
sahf
or
jl
(bad)
mov
push
rcr
mov
cmps
es
jb
push
arpl
add
sbb
cmp
js
mov
lods
jb
loopne
sbb
cdq
out
stos
aad
imul
ds
push
ror
ret
add
xor
sbb
xchg
mov
jmp
pop
sub
jge
lods
iret
mov
add
inc
add
ffree
push
out
sub
jge
ins
jb
cmc
push
loop
outs
mov
repz
sub
sub
cmp
outs
add
push
bound
jmp
jp
xchg
es
fidivr
data16
int3
cmp
sub
pop
lods
mov
sub
xchg
dec
aaa
dec
pop
add
adc
xchg
out
stc
inc
int
cld
out
jle
mov
sbb
ja
mov
inc
xchg
pop
mov
fcmove
pop
xlat
ja
test
adc
fisttp
sub
scas
call
mov
mov
ja
xchg
push
ficomp
push
xor
sbb
xchg
xor
xor
jl
mov
mov
test
ret
pop
or
xlat
das
cmps
jbe
dec
rol
pusha
mov
jae
mov
or
mov
or
fimul
sahf
or
and
jnp
xrelease
mov
sbb
xor
fcmovnbe
lods
add
adc
cli
push
ja
mov
inc
je
push
fcomp
and
dec
dec
and
fld
lds
xor
and
repnz
cmp
scas
icebp
ret
or
and
mov
daa
jns
out
jbe
shl
push
sar
cmp
inc
xchg
adc
pop
and
loopne
es
shr
cmc
xor
test
inc
fild
mov
test
mov
(bad)
aas
sbb
and
test
add
fnsave
cli
enter
jns
sbb
jp
cmps
outs
mov
cld
iret
jmp
or
loope
sbb
or
enter
and
sti
sub
out
xchg
dec
dec
clc
imul
popa
mov
das
ficomp
inc
or
leave
cmc
push
add
out
cmps
bound
(bad)
mov
sbb
ror
scas
ret
or
mov
sbb
int3
movs
pop
aaa
dec
ds
sbb
in
pop
pop
push
movs
fs
adc
clc
add
dec
dec
pop
mov
jp
push
xchg
inc
mov
and
(bad)
mov
sub
aam
pop
dec
lods
cmps
inc
mov
test
xor
sbb
ins
add
test
int
in
inc
or
mov
sub
mov
jo
aam
adc
xor
xchg
cmp
int
imul
stc
scas
jmp
inc
cmp
xor
or
jp
push
pop
cwde
imul
sbb
pop
into
sub
adc
sbb
neg
or
sub
out
fistp
(bad)
lahf
jge
sbb
sub
ss
fs
fld
cmp
xchg
in
mov
call
cs
int3
into
mov
sbb
cmps
add
int3
inc
repnz
icebp
sti
into
iret
mov
ds
sub
or
call
out
in
aaa
xor
cmp
cdq
shr
xchg
mov
fwait
sahf
cmp
repnz
adc
inc
mov
fcmovnbe
sahf
pop
push
frndint
cld
cmps
fwait
add
jmp
xor
or
shl
and
pop
out
aaa
push
ror
xchg
into
mov
xor
push
ds
out
dec
mov
jnp
je
imul
adc
fimul
or
repz
adc
sub
push
jge
test
xchg
call
imul
jge
not
jl
retf
sar
mov
xchg
add
dec
scas
jnp
push
fwait
retf
retf
pop
dec
ja
pop
push
and
xchg
jge
das
dec
cmps
xor
cmp
call
xor
retf
and
xor
lahf
dec
pop
pop
retf
out
mov
int3
dec
sbb
jl
jg
sub
je
aam
outs
sub
repz
push
repnz
int3
ins
bound
enter
clc
cli
ins
jmp
pop
in
fidiv
jle
sub
aaa
cmp
ds
xchg
leave
xlat
pop
dec
fidivr
adc
mov
xchg
xor
stos
sbb
mov
stos
adc
jmp
out
(bad)
les
jno
cmps
pop
adc
jnp
sbb
stos
fisubr
clc
jbe
div
mov
mov
mov
mov
mov
(bad)
adc
pushf
imul
test
out
push
int3
repnz
xchg
and
cmp
mov
xchg
lods
jo
(bad)
out
out
cmps
dec
arpl
dec
pop
mov
leave
jmp
out
(bad)
scas
push
cmc
mov
cmp
mov
xlat
icebp
push
mov
ins
arpl
mov
jecxz
mov
jmp
rol
jmp
sbb
cmp
repz
jno
nop
in
jle
push
mov
ss
jl
call
les
arpl
loopne
lahf
pop
shl
inc
retf
add
cmps
pop
adc
inc
xchg
cmp
jp
cli
cmp
std
enter
sub
aaa
jecxz
fmul
loop
daa
mov
outs
sub
cdq
inc
stc
and
imul
fldenv
add
les
into
mov
push
imul
dec
jl
dec
test
(bad)
stos
icebp
(bad)
shr
movs
dec
jbe
inc
leave
adc
retf
and
mov
(bad)
(bad)
cwde
in
pop
aas
call
scas
repz
pop
cld
imul
movs
inc
cmp
or
jmp
fstp
mov
sti
sub
pop
into
daa
leave
fstp
dec
add
loopne
jns
mov
jecxz
(bad)
int3
adc
lock
jbe
add
pop
inc
in
(bad)
dec
dec
inc
push
in
mov
jae
inc
jle
cli
inc
inc
mov
lods
repnz
sar
adc
mov
mov
inc
mov
daa
mov
xchg
mov
sidtd
pop
xor
xchg
and
iret
or
sub
xor
in
movs
and
aad
sub
sub
lea
arpl
pop
shl
in
lock
push
push
cmc
call
jle
mov
cmp
shl
adc
jge
or
xchg
add
test
jl
push
inc
dec
jle
mov
push
sbb
and
or
loop
icebp
mov
push
ins
pop
mov
adc
inc
mov
fild
push
xchg
pushf
iret
add
inc
push
inc
outs
(bad)
ds
stos
aam
and
ja
jp
mov
xchg
fnstenv
mov
stos
aad
fidiv
addr16
div
imul
outs
xor
pop
jge
push
mov
cmp
inc
imul
scas
cdq
push
and
(bad)
cmc
push
rcr
fs
jo
push
pop
jnp
pop
jnp
sbb
jne
std
test
les
xchg
cs
loop
push
sbb
xchg
loop
inc
xor
iret
movs
rol
add
shr
mov
sahf
loopne
lods
mov
push
cmps
jecxz
inc
jge
or
popf
mov
mov
cmp
gs
repz
sbb
stos
xor
call
mov
imul
and
gs
mov
push
movs
movs
or
push
sbb
pop
sti
adc
and
add
mov
popf
cmp
jmp
pop
mov
mov
shl
xlat
popa
arpl
push
mov
ret
leave
xor
lds
push
int
mov
enter
push
inc
stos
test
jg
adc
aas
ja
mov
retf
scas
sub
call
fcom
das
mov
mov
pop
out
cmp
out
cmps
pop
std
(bad)
push
dec
pop
sbb
sahf
pop
in
pop
dec
popf
enter
(bad)
pop
sbb
es
push
movs
enter
push
and
mov
or
lock
(bad)
jl
cmp
sbb
push
mov
push
jae
aaa
fbld
mov
(bad)
sldt
mov
jo
aaa
sub
addr16
ss
and
retf
ret
lods
lods
(bad)
xchg
aaa
push
push
add
add
mov
fucompp
dec
aaa
push
ror
popf
std
out
pop
pop
pop
cmp
jae
jecxz
and
add
and
aaa
xchg
out
mul
(bad)
mov
dec
pusha
push
dec
push
xor
inc
aam
mov
cdq
jmp
and
gs
cmp
dec
pop
pop
in
add
pop
fisub
cwde
inc
movs
mov
adc
dec
clc
dec
adc
fmul
push
xor
and
push
jecxz
sbb
fld
mov
out
cmps
cli
(bad)
stos
bswap
pop
xor
or
test
inc
imul
jns
in
xchg
pushf
xor
cmc
or
(bad)
cmp
sub
jecxz
sbb
inc
pushf
pop
mov
(bad)
xchg
fistp
inc
jmp
daa
jb
pusha
ja
rcr
dec
movs
jmp
pop
fisttp
popa
leave
dec
icebp
fcmovnbe
cmps
lods
cmp
push
and
mov
jae
add
xor
pop
sbb
rcr
dec
sub
or
call
sbb
movs
pop
cmp
pop
add
dec
ins
xor
mov
push
cpuid
pop
(bad)
clc
fwait
std
push
rol
lahf
jl
xor
pushf
mov
mov
iret
jle
fstp
test
pushf
mov
ret
repnz
adc
add
loope
or
pop
add
mov
xor
ret
xor
mov
xchg
sbb
(bad)
push
div
dec
stos
inc
es
add
iret
dec
sbb
and
out
sub
inc
loopne
dec
mov
mov
xor
rcl
xchg
jb
imul
adc
test
push
loop
push
stos
sar
in
mov
sub
and
daa
inc
iret
(bad)
int
jne
adc
push
jo
inc
test
dec
mov
push
sti
mov
test
jnp
cmps
jmp
mov
add
popa
jae
push
lock
jle
cmps
les
test
cli
ret
jmp
(bad)
lahf
inc
and
mov
dec
enter
fwait
sub
fwait
xchg
or
cmps
xchg
fadd
dec
and
clc
or
jbe
(bad)
push
jb
mov
jg
mov
mov
lods
or
inc
sbb
clc
adc
mov
or
stc
in
add
adc
in
mov
popf
or
push
mov
and
sti
bound
xchg
popa
sbb
fwait
sub
sub
test
dec
xchg
or
into
xchg
jle
ret
xor
mov
xlat
pop
jns
fimul
out
or
cmps
adc
jne
mov
stc
push
inc
jg
mov
retf
popf
iret
adc
ins
mov
mov
push
lock
or
mov
out
mov
clc
cmp
dec
add
pop
jae
std
in
push
in
and
es
test
jmp
pop
sahf
daa
sahf
xchg
jmp
outs
outs
test
push
bound
bnd
adc
es
sub
cmp
aas
mov
pop
xchg
jno
xchg
sub
jno
dec
cld
pop
and
push
mov
cld
dec
inc
fcomp
add
inc
adc
xchg
add
stos
and
dec
aaa
mov
call
dec
les
adc
xchg
cli
fdiv
pop
mov
int
icebp
popf
or
cmp
mov
mov
mov
jbe
pop
sahf
push
sub
jo
jmp
hlt
mov
fst
push
daa
adc
outs
xor
fs
xor
in
inc
mov
jb
pop
jl
jg
xchg
jbe
outs
jp
dec
int
adc
sahf
out
cmp
mov
add
fs
mov
aas
adc
mov
lds
retf
not
and
adc
mov
mov
jp
or
pop
dec
push
loop
jb
cmc
(bad)
cmps
mov
movs
cli
in
mov
in
and
cld
inc
mov
lahf
jg
mov
imul
(bad)
jo
push
test
jg
cmps
repz
sub
cmp
repz
cmp
sub
add
es
sub
fcom
movs
mov
mov
inc
and
cmp
inc
popf
jo
sti
xorps
xchg
dec
push
out
inc
arpl
jle
ja
(bad)
cmc
add
xor
or
sub
sub
fcmovnbe
pop
sub
push
sbb
cmps
shr
aad
jl
mov
mov
sub
dec
sub
mov
mov
dec
shl
idiv
or
jmp
ss
or
sbb
ret
or
das
sbb
sar
push
jp
ret
dec
jb
xchg
das
popf
mov
xchg
arpl
jg
aaa
in
pusha
cmp
jae
outs
daa
stos
cmp
repnz
mov
loop
test
sbb
mov
aad
and
scas
mov
xor
mov
stos
sub
inc
shr
push
xor
dec
inc
stos
(bad)
fistp
aad
xor
dec
xchg
sbb
mov
std
push
push
ins
ret
mov
outs
pop
aas
ror
mov
mov
sbb
xor
pop
xchg
jnp
stc
movs
cmc
pop
lds
movs
icebp
sub
inc
call
and
repz
test
mov
loopne
out
lahf
mov
mov
int
jo
or
pop
call
int
ds
sub
fdivr
cmps
out
mov
jnp
cwde
int3
pop
add
xor
and
in
bound
pusha
sbb
jmp
out
lahf
cs
push
mov
push
in
dec
push
push
mov
popf
mov
push
push
sub
std
inc
imul
add
popf
or
cli
(bad)
aad
mov
sbb
mov
sbb
pop
and
(bad)
mov
fild
sahf
push
lds
adc
inc
push
cld
inc
sbb
(bad)
cmp
repz
imul
sti
jecxz
in
mov
mov
aas
and
aaa
or
or
xchg
xor
xlat
ret
mov
popf
sahf
cmp
mov
shl
and
outs
dec
out
dec
dec
mov
mov
mov
mov
push
gs
dec
mov
cmp
test
and
ret
sub
lahf
or
std
test
aas
test
jl
or
mov
jb
xor
xor
pop
sbb
out
cdq
loopne
addr16
movs
arpl
in
mov
mov
dec
fisttp
(bad)
inc
test
enter
(bad)
xor
jp
jb
data16
cmp
gs
mov
push
sahf
xchg
and
sub
rol
adc
mov
pop
stc
jb
inc
adc
or
jl
fnstcw
leave
mov
ins
in
pop
add
daa
call
mov
mov
mov
pop
scas
mov
(bad)
jge
adc
xor
push
enter
jno
int
inc
in
mov
rcl
jb
jb
icebp
les
scas
cmp
cs
xchg
cdq
stos
retf
retf
ins
punpckhwd
cmps
les
pop
inc
cmps
add
fstp
cli
movs
and
enter
scas
and
imul
retf
es
mov
ret
and
dec
jbe
mov
(bad)
ins
or
jno
jne
push
sbb
xchg
shl
in
(bad)
adc
fcom
arpl
(bad)
or
fxch
or
lods
dec
test
(bad)
xor
in
je
cmps
daa
mov
int
gs
push
cmps
jbe
cli
cli
sbb
test
mov
stos
jge
push
push
pop
in
(bad)
je
inc
repnz
je
add
inc
or
xchg
out
cmp
xor
mov
mov
aad
jp
movs
js
mov
retf
jo
xchg
xchg
adc
xor
mov
push
rcl
and
cmp
lock
ret
(bad)
xlat
adc
pop
test
xlat
mov
loope
mov
sar
and
repnz
xchg
loope
sahf
sbb
mov
xchg
std
out
shr
loope
mov
xchg
add
jb
xchg
scas
les
xchg
xor
mov
pop
fstp
in
push
or
add
out
xchg
lea
pop
addr16
mov
into
call
sbb
std
cmc
fs
rcl
adc
cdq
xchg
xlat
lahf
(bad)
fnstenv
sub
jo
cs
lock
pop
pusha
xor
retf
push
pop
imul
scas
adc
fucomip
jns
gs
xor
ficom
retf
jg
aad
int3
shufps
(bad)
call
or
cmp
pusha
jae
or
push
push
popf
stos
cli
dec
xchg
or
inc
scas
sub
cmps
call
pop
mov
shl
fbld
jecxz
(bad)
pop
sub
push
(bad)
arpl
jge
rol
add
test
das
xlat
sar
ins
aam
mov
cdq
xor
scas
repnz
sbb
outs
mov
fwait
pop
inc
jmp
cli
add
mov
in
retf
mov
push
sub
pop
test
imul
dec
jmp
inc
lods
jg
rol
aas
xor
bound
mov
iret
cld
fisttp
inc
pop
loopne
arpl
fld
mov
repz
ins
cmp
jo
or
(bad)
xor
aaa
dec
inc
cmp
sub
in
or
push
loope
repz
pop
cli
rol
mov
mov
(bad)
sub
pop
xchg
or
fld
int3
retf
ror
pusha
mov
inc
adc
add
push
dec
lahf
adc
jb
loop
or
push
movsx
dec
bnd
inc
inc
shl
fnclex
push
and
int
inc
out
imul
dec
cwde
xor
js
test
dec
mov
pushf
data16
cwde
out
inc
xor
test
push
(bad)
out
adc
dec
jp
mov
push
ja
pop
lea
mov
lahf
xchg
jb
xchg
pop
push
call
mov
mov
mov
lahf
sbb
xchg
adc
push
adc
sub
jno
inc
enter
dec
lods
shl
icebp
pop
inc
sbb
and
xchg
fwait
and
call
xor
outs
ret
jb
push
mov
sub
sub
mov
and
imul
dec
out
sub
retf
xor
mov
cld
cmp
ins
dec
enter
mov
or
pop
cli
pop
mov
sub
mov
push
pop
cmp
test
mov
retf
jne
sbb
imul
pop
dec
(bad)
mov
test
pop
ss
mov
rcl
sub
xchg
adc
stos
adc
jne
(bad)
xlat
xor
(bad)
mov
jmp
out
inc
and
push
dec
mov
xchg
add
clc
and
les
lds
xor
mov
push
inc
out
jle
xchg
leave
std
adc
sub
fwait
pop
fsub
xor
pop
sbb
iret
fstp
shl
scas
sub
fcom
xor
mov
les
imul
push
aad
rol
aam
lds
fmul
pop
sub
mov
dec
dec
out
xchg
lock
adc
stc
pop
jmp
jne
or
mov
cmp
add
das
xchg
aaa
loopne
ror
sbb
inc
push
dec
jmp
(bad)
ss
mov
data16
jl
imul
or
jp
inc
and
sbb
(bad)
fisubr
push
test
shl
mov
jmp
jae
outs
cmps
inc
into
sbb
sbb
inc
add
jmp
push
or
mov
dec
pop
retf
mov
add
xor
shr
sbb
sub
jb
xchg
push
mov
sbb
pop
scas
ss
xchg
dec
and
retf
pusha
repnz
fst
ss
cmps
jno
inc
push
scas
neg
movs
arpl
rol
cs
jnp
stc
dec
nop
shl
loopne
in
push
xchg
sbb
xchg
mov
dec
adc
jmp
xor
loopne
jecxz
ss
cdq
xor
pop
jbe
sub
outs
mov
addr16
(bad)
ds
stos
inc
leave
addr16
push
scas
xor
mov
mov
mov
cmps
jp
pop
jns
scas
pop
out
mov
test
nop
mov
mul
clc
pop
sub
push
push
test
(bad)
sub
cmp
add
icebp
or
sub
jns
mov
div
aam
in
jae
(bad)
xchg
test
das
sti
xor
int3
jne
fimul
cmps
arpl
hlt
(bad)
std
inc
fisubr
jmp
inc
and
push
aam
push
xchg
lock
call
and
cmp
mov
rcr
cli
fistp
push
rol
aas
adc
add
data16
push
push
leave
dec
mov
pop
out
aad
cmp
add
mov
ds
jns
adc
mov
pusha
mov
cmp
stos
mov
sub
das
inc
fs
imul
(bad)
lahf
mov
mov
call
test
inc
pop
fistp
xchg
lods
stc
aad
lahf
push
jmp
inc
cld
sbb
push
pop
ds
cli
cmc
xor
ss
ret
cld
addr16
stos
xor
jo
test
or
lods
adc
call
jmp
dec
test
les
inc
inc
jnp
and
push
add
mov
mov
jns
add
add
sti
mov
movs
stos
stc
xor
add
dec
cld
mov
jo
sti
iretw
or
mov
fucomp
(bad)
xchg
fnsave
or
retf
cdq
sar
stos
xchg
shl
inc
ins
lock
imul
adc
adc
or
cmp
sti
inc
jmp
cs
aas
cmp
sub
jp
les
xchg
retf
out
test
stos
mov
adc
mov
fs
adc
mov
cli
cwde
or
lahf
sub
popf
fs
movs
ficom
aad
neg
mov
jne
push
call
cmps
loopne
lds
test
xlat
dec
jge
cld
idiv
mov
sub
xchg
inc
ins
(bad)
shr
repnz
dec
sbb
outs
aas
data16
xor
and
pop
or
push
in
xchg
sbb
jle
cmps
sbb
(bad)
scas
push
rol
pop
add
push
dec
dec
adc
int
imul
adc
shr
test
and
dec
pop
aas
jg
popa
shl
dec
cli
cmps
sbb
cdq
cld
mov
mov
fs
popf
call
sub
dec
adc
xor
out
stc
push
jae
call
cmps
sbb
jecxz
xchg
test
lods
push
add
inc
push
pop
pusha
in
xor
outs
xchg
nop
jge
and
iret
mov
dec
and
cli
out
es
scas
mov
ret
sub
mov
push
inc
repz
(bad)
fidiv
ret
mov
jmp
rcl
inc
mov
aaa
sti
fxch
sbb
test
out
and
ss
inc
call
cwde
or
pop
leave
ficom
scas
mov
mov
jmp
mov
push
cmps
xor
gs
add
mov
inc
in
push
mov
lods
mov
xchg
cmp
lock
mov
rcl
test
jle
xchg
mov
push
push
ja
sbb
xor
fcom
cmp
sbb
or
fistp
(bad)
outs
jbe
pop
and
adc
mov
hlt
pop
cli
mov
mov
loop
and
movs
or
call
fistp
inc
pushf
mov
cmp
xchg
int
jno
or
lods
(bad)
mov
clc
jne
push
loope
fs
stos
or
mov
int
es
fst
or
sbb
cmp
movs
retf
pop
mov
pop
and
dec
jo
push
popf
inc
adc
sbb
xor
loopne
fsub
mov
xor
ret
inc
jno
lahf
(bad)
jne
mov
mov
fimul
clc
ror
pop
sbb
je
sbb
mov
xchg
and
mov
mov
cmp
in
mov
lock
gs
arpl
sub
pop
pop
mov
sahf
mov
ss
push
push
add
icebp
ds
mov
sub
dec
leave
or
fidivr
pop
ret
in
xor
adc
mov
push
cld
bound
gs
inc
mov
pushf
aad
jge
sahf
outs
arpl
shr
pop
xor
test
scas
jno
inc
(bad)
std
mov
popa
inc
add
shl
in
xlat
jl
sub
cmp
mov
dec
cmp
shl
xchg
jns
sub
inc
jnp
(bad)
out
movs
fcom
jb
test
rol
test
mov
out
retf
adc
popa
scas
xchg
and
mov
or
out
cwde
adc
mov
cmp
shl
(bad)
xlat
mov
push
mov
ins
cmp
mov
sahf
pop
push
adc
and
xchg
and
pusha
ins
jmp
mov
xchg
adc
call
pop
ja
test
xor
test
cmp
push
call
mov
stos
and
jmp
push
mov
jmp
pop
shl
dec
icebp
sbb
add
mov
fsub
jmp
inc
jp
cmp
sub
aad
outs
mov
dec
inc
push
lods
or
fisubr
xor
dec
cmps
loopne
fwait
neg
ret
inc
cmp
xchg
rcl
dec
mov
mov
and
pusha
enter
sbb
inc
xchg
mov
sbb
mov
xor
mov
(bad)
xchg
in
mov
ins
add
retf
test
(bad)
mov
retf
xor
xchg
das
mov
add
stos
mov
pop
and
jl
repz
mov
pop
out
daa
repz
aas
ins
push
int
stc
jnp
imul
popa
push
pop
(bad)
dec
inc
mov
sbb
in
or
mov
aad
add
pop
mov
mov
mov
pop
pop
(bad)
mov
pop
call
cdq
and
or
mov
mov
cs
cmp
or
out
je
loope
jb
imul
test
or
cmp
xor
and
sub
pop
int3
retf
adc
into
mov
ror
pusha
test
ror
(bad)
loopne
sbb
mov
(bad)
xchg
mov
retf
lds
and
fld
dec
dec
repnz
or
and
jl
xchg
or
jo
jo
dec
cmc
clc
mov
(bad)
jb
jbe
dec
test
sbb
fcomp
repnz
sub
psraw
dec
jae
mov
pop
lahf
pop
add
cmp
add
mov
ret
jmp
shl
sub
outs
cmps
pop
or
xchg
ret
cmp
cmp
xchg
cmps
mov
xlat
mov
cs
das
pop
mov
cwde
ret
call
add
sbb
xchg
push
nop
lods
movs
inc
xchg
shr
mov
cwde
scas
arpl
mov
mov
retf
cmp
pop
cmps
and
int
inc
popa
jno
sub
and
pop
sbb
(bad)
push
cwde
mov
inc
cli
iret
xchg
out
(bad)
popf
data16
sub
dec
fnstenv
xor
es
push
in
cmp
pop
mov
jmp
mov
lock
jbe
and
push
mov
sub
mov
pop
loope
inc
sti
jmp
fiadd
cmp
cmc
retf
les
int
jg
xchg
jbe
inc
xchg
cs
cmps
loop
jae
rol
movs
push
mov
sti
daa
mov
mov
sub
pop
or
cld
ret
pushf
sbb
sub
out
cli
outs
xor
add
mov
mov
sar
in
pop
movs
lock
test
es
test
adc
test
mov
inc
shr
push
push
xor
mov
mov
bound
mov
es
frstor
push
or
pop
and
xor
imul
adc
push
sbb
mov
xchg
dec
mov
sbb
jmp
mov
add
mov
or
out
cdq
inc
sbb
mov
jl
repz
fwait
movs
ret
mov
fidiv
out
fxch
xchg
popa
xor
loop
or
mov
jns
leave
inc
leave
sbb
rcl
ss
(bad)
outs
mov
cmp
or
aam
dec
mov
imul
movs
test
pop
xor
xchg
cmp
int3
jecxz
nop
sub
dec
mov
pop
mov
nop
lods
(bad)
sahf
mov
mov
push
test
jne
aas
cmps
leave
mov
pop
cmp
inc
sbb
icebp
cdq
or
jno
(bad)
sbb
add
cmps
adc
into
pop
and
jns
mov
call
cmps
push
sub
jno
adc
mov
sbb
loope
pop
cmp
not
mov
mov
call
and
pop
lahf
push
lea
stos
mov
int
add
loop
loope
test
mov
stos
hlt
das
outs
imul
int
add
xlat
scas
repnz
pusha
and
sbb
push
jae
test
push
mov
and
pop
pop
ins
push
or
sbb
mov
popf
push
js
sar
icebp
lahf
lods
je
push
jge
pop
popf
loope
pop
mov
icebp
sti
xor
xchg
lock
xor
int3
dec
test
repz
sahf
mov
das
bound
faddp
lock
inc
fbstp
push
xlat
pushf
pushf
push
push
sub
jns
jne
aaa
scas
sti
xchg
and
xchg
adc
mov
mov
stc
mul
adc
call
div
sub
test
dec
mov
pop
sar
cmps
test
inc
jmp
xor
sbb
xchg
or
rcr
sti
es
xchg
cmps
mov
stos
adc
sbb
pop
adc
int
repz
hlt
jmp
pop
mov
cmp
(bad)
(bad)
outs
or
fisub
mov
popf
(bad)
(bad)
mov
xchg
jle
ret
mov
pop
data16
cmc
ss
pop
add
pop
xor
movs
sbb
movs
dec
out
mov
mov
lea
pop
push
cmps
retf
and
retf
les
ins
mov
lods
mov
jo
lds
stos
inc
mov
std
cmps
fs
adc
data16
outs
fdiv
mov
cwde
xchg
ja
int3
pop
push
dec
mov
mov
into
lock
push
adc
push
loopne
outs
add
push
imul
imul
icebp
int3
dec
mov
test
jnp
ins
outs
cmp
aas
(bad)
cmp
mov
daa
cmp
test
into
inc
push
or
sbb
and
cmp
subps
cld
jecxz
pop
mov
xor
mov
mov
test
fnstenv
ret
jecxz
dec
dec
cmps
and
push
movs
pop
loop
ror
jb
sub
hlt
or
nop
imul
push
dec
(bad)
mov
push
jae
(bad)
movs
(bad)
pop
loopne
push
ins
repz
cld
mov
adc
int3
jne
pushf
xchg
or
sub
pusha
(bad)
mov
popa
std
sub
ss
lods
std
mov
xlat
or
cmc
or
lods
add
hlt
mov
data16
movs
call
pop
outs
jnp
cmp
rcr
mov
xchg
xchg
retf
adc
cmp
ret
std
lds
dec
sar
ja
jbe
xlat
fstp
xchg
inc
out
es
aaa
pop
loop
jp
xchg
retf
(bad)
(bad)
(bad)
dec
or
std
mov
dec
dec
addr16
inc
ror
(bad)
out
and
pushf
or
xor
repnz
jecxz
push
mov
jg
cmp
ins
pop
movs
xor
push
xlat
hlt
das
dec
scas
mov
adc
mov
addr16
push
push
jae
and
push
arpl
mov
adc
cmp
not
rcl
shl
mov
add
les
xchg
or
and
push
xchg
sub
push
cmps
scas
addr16
ret
fcmovbe
xor
cdq
ins
push
fwait
jo
add
push
loope
popa
push
mov
jo
repz
mov
repnz
ret
jns
mov
hlt
jle
es
out
sahf
mov
or
mov
jo
mov
(bad)
mov
jg
daa
std
fnstcw
mov
cmp
std
xor
int3
movs
jmp
(bad)
jle
sbb
leave
jle
sbb
sbb
in
and
sub
cld
add
out
xor
or
sub
sbb
jge
iret
fmul
call
cmp
push
add
in
inc
push
lds
sbb
test
dec
mov
shl
push
shl
xor
fistp
pop
sub
loopne
fsub
ins
popf
jns
lock
push
out
or
imul
sbb
or
mov
pop
cmc
std
add
push
xchg
sub
pop
cmps
arpl
xlat
xchg
push
aam
in
test
cmps
rep
repnz
cmp
in
scas
mov
mov
fld
add
mov
cmp
xchg
pusha
imul
jns
xchg
xor
icebp
and
nop
pop
pop
jp
popf
int
ficomp
test
retf
pusha
cmp
sub
sbb
adc
std
jnp
and
ss
mov
jmp
dec
mov
(bad)
fistp
jne
push
cwde
cld
lds
fs
cmps
dec
repnz
inc
int3
fist
out
jbe
out
push
mov
adc
add
les
std
mov
call
xor
jge
sub
mov
inc
leave
mov
das
div
(bad)
mov
addr16
daa
pop
push
push
and
mov
jnp
shl
push
adc
addr16
ds
jmp
or
xchg
ins
(bad)
sti
mov
and
cmc
sbb
sub
popa
imul
leave
fistp
dec
dec
inc
clc
(bad)
shl
rol
mov
out
mov
and
inc
mov
loopne
cmp
mov
and
mov
test
cs
cmps
pop
dec
sub
(bad)
or
jbe
pop
mov
mov
idiv
scas
lods
cmc
movs
jmp
mov
jge
iret
push
fisub
push
test
adc
or
lods
test
nop
(bad)
shl
js
and
jp
jno
sbb
add
je
(bad)
push
mov
fs
xor
pop
xchg
scas
sbb
sbb
and
xchg
inc
mov
cmc
out
ja
ret
icebp
jnp
xor
xchg
mov
lea
sahf
das
mov
lea
push
jae
add
mov
nop
dec
data16
shl
adc
test
fcomp
aaa
mov
mov
jb
clc
jg
in
pop
ins
cdq
outs
mov
(bad)
ss
cmp
jb
out
cmp
xchg
cmova
pusha
retf
data16
sbb
adc
mov
arpl
inc
stc
xchg
mov
aam
push
aas
cmp
cmps
test
sub
imul
stc
mov
mov
pop
outs
scas
xchg
or
in
dec
push
mov
adc
aad
jge
adc
push
aaa
stos
(bad)
fbstp
(bad)
xor
inc
repz
stos
imul
cmp
call
outs
xchg
movs
dec
xchg
mov
inc
cmp
aaa
jo
in
push
shl
push
in
sbb
sbb
nop
cld
outs
dec
jno
lds
adc
mov
pop
es
std
or
lds
inc
inc
or
cmc
and
loop
xor
popa
xor
mov
push
xor
cmp
cdq
pop
mov
and
retf
(bad)
shl
pop
xchg
mov
dec
xor
pop
mov
cmps
mov
test
mov
call
inc
stc
push
xor
int3
lods
hlt
lock
or
mov
fldcw
xor
or
retf
repnz
dec
mov
into
repnz
aaa
bound
cmp
jmp
nop
ror
icebp
jae
outs
imul
(bad)
and
ja
cmc
jno
jmp
cmp
add
outs
icebp
mov
fisttp
mov
das
shr
hlt
mov
adc
cmp
sub
cmp
push
loop
pop
adc
jno
enter
lahf
or
and
sub
call
add
mov
aad
arpl
(bad)
(bad)
or
mov
lods
xchg
mov
inc
stos
arpl
pop
scas
out
mov
pop
test
stos
sahf
or
fbstp
popf
and
cmp
jle
or
adc
adc
out
inc
pop
push
pop
shl
sti
mov
fadd
inc
push
ds
push
add
jge
mov
shr
jecxz
mov
sub
(bad)
mov
push
pop
add
mov
dec
mov
xor
adc
sbb
mov
popa
or
adc
or
cmp
les
add
ds
loope
mov
test
fidiv
lods
cmp
sbb
mov
push
jmp
dec
icebp
es
sbb
cmp
cmps
fidiv
push
adc
dec
sbb
jmp
jle
sti
pop
jb
ds
clc
or
sub
pushf
(bad)
in
fimul
and
push
or
repnz
mov
(bad)
jne
cmps
movntq
out
in
leave
add
push
mov
les
add
(bad)
ss
adc
adc
fs
xchg
pop
jbe
sub
rcl
or
mov
pushf
leave
xlat
jecxz
sub
mov
and
lea
add
arpl
sbb
add
call
sbb
jmp
cs
pusha
(bad)
push
loopne
mov
push
imul
jb
sub
out
imul
aad
jecxz
jmp
lock
xor
fmul
jns
inc
sti
add
mov
adc
ja
data16
and
arpl
retf
std
stos
xchg
dec
fisub
add
popf
jnp
mov
sbb
int
test
pop
fbld
dec
jmp
clc
xor
or
pop
jb
push
aaa
sub
pop
in
add
test
xchg
nop
xor
inc
cmp
xor
xor
sbb
mov
cmp
pop
push
or
mov
push
and
sub
(bad)
repz
jne
cli
cmp
cmp
mov
pop
inc
mov
out
push
cli
xchg
bound
shr
dec
or
jg
bound
fcom
(bad)
push
push
cld
xchg
stos
cwde
add
cmps
stc
jno
and
and
stos
arpl
sar
ror
clc
fidivr
xchg
push
mov
jecxz
add
sbb
stos
repz
fidivr
arpl
xchg
mov
jecxz
mov
movs
mov
push
push
test
push
inc
cwde
sub
mov
jbe
cmp
outs
popa
jmp
jno
lahf
fnstsw
stos
add
xchg
lea
out
ret
mov
mov
inc
ror
mov
(bad)
sub
mov
movs
sbb
add
fmul
push
xchg
jne
xor
or
retf
iret
cmp
aaa
xor
push
xor
aas
lea
pop
xor
(bad)
mov
aad
push
adc
lds
int
es
pop
cmp
pop
dec
aad
pop
and
and
(bad)
sbb
lock
(bad)
mov
fidivr
push
lea
or
sbb
pop
jp
mov
or
pop
xchg
mov
jmp
jno
xchg
xchg
rcl
ja
and
cdq
cdq
stc
xchg
fstp
int3
pop
aas
rcl
rcr
cmp
fisub
les
mov
repz
pushf
cvtps2pi
mov
mov
popa
or
in
hlt
cmp
cdq
sub
add
pop
mov
cmp
ins
fld
sbb
jge
mov
pop
pusha
jp
addr16
xor
sub
mov
in
jbe
push
out
inc
adc
cli
xor
adc
gs
push
mov
jo
xchg
or
or
rol
ja
aad
push
pop
cs
repz
ins
and
inc
cmp
jge
mul
aam
xchg
mov
cli
cmp
and
retf
in
popa
nop
inc
dec
mov
or
out
mov
aad
jne
jge
jne
jecxz
mov
add
cs
dec
loopne
bound
retf
adc
mov
or
jecxz
es
repz
mov
cmp
xchg
in
push
add
in
mov
stos
adc
xor
retf
mov
mov
xor
or
pop
jmp
call
xchg
xor
sbb
mov
push
push
arpl
cmps
add
push
pop
cld
out
jmp
lea
and
mov
aam
sbb
xchg
inc
sbb
outs
adc
cs
jnp
rol
pushf
push
sbb
int3
pusha
ss
or
in
ss
in
nop
mov
sub
or
in
enter
or
arpl
addr16
adc
out
xor
movs
in
jbe
xchg
xchg
dec
xchg
rcl
xlat
shr
push
fisttp
shr
pop
inc
shl
cmp
jae
pushf
das
cmp
pop
push
pop
jg
jp
cmp
xchg
mov
mov
xchg
pop
cmp
aas
mov
push
pop
fsubr
lds
xchg
inc
js
idiv
lock
jmp
push
jnp
pop
add
cmp
xchg
fisubr
pop
jnp
pop
loop
sub
fsub
add
cmp
push
enter
jo
push
repz
retf
shl
push
aas
xor
add
loope
cmp
xchg
push
or
push
je
pop
push
jp
inc
fs
aas
push
(bad)
les
(bad)
jg
xor
xchg
cmp
mov
pop
movs
mov
js
dec
ret
mov
in
test
xor
jns
aaa
loop
xchg
xor
push
xchg
addr16
call
test
retf
arpl
test
aas
dec
in
das
(bad)
push
(bad)
or
jbe
fcmovnbe
pusha
jae
or
das
xchg
(bad)
sbb
add
dec
(bad)
retf
and
adc
mov
adc
call
inc
cmps
and
push
scas
sub
dec
push
add
(bad)
aad
and
mov
lds
mov
or
stc
sbb
add
push
jb
out
jno
in
xchg
add
ins
test
sub
call
repnz
inc
cmp
adc
aam
(bad)
jae
adc
fs
and
mov
and
jle
fld
scas
pushf
(bad)
out
cmp
imul
int3
test
adc
mov
dec
or
(bad)
mov
jl
into
mov
sbb
adc
xor
xchg
or
aaa
popf
retf
dec
cmp
dec
ror
clc
adc
cwde
ret
jge
push
push
dec
xchg
cdq
test
mov
gs
lds
cwde
add
add
push
add
xor
cmps
loopne
and
leave
mov
bswap
cmc
inc
mov
push
(bad)
lahf
sbb
push
mov
sub
sub
mov
mov
nop
jne
(bad)
neg
int
cmps
sbb
in
mov
adc
xlat
imul
add
enter
push
repz
pop
cmp
mov
lock
pop
sbb
les
aaa
push
jae
dec
cmp
xor
add
cmp
mov
jecxz
ds
mov
test
cmp
fldcw
inc
sub
or
xchg
mov
test
sbb
xchg
and
shl
jmp
or
ja
jp
add
push
fbstp
lds
inc
cld
sub
adc
idiv
out
dec
or
mul
lds
fisttp
pop
push
cmp
xor
lea
push
and
in
fidiv
inc
xchg
movs
sbb
pop
frstor
pushf
mov
(bad)
push
fadd
or
dec
xor
repz
pop
xchg
rol
(bad)
pop
not
aaa
std
xor
imul
jle
imul
ds
mov
adc
cmp
mov
ds
pusha
cli
mov
xchg
jne
mov
jne
call
mov
mov
es
push
push
xor
(bad)
and
cmp
jmp
mov
xchg
scas
leave
inc
shl
push
sti
xchg
ins
jbe
push
sub
cld
dec
imul
gs
shl
mov
mov
adc
(bad)
mov
mov
jae
stc
addr16
fdiv
adc
(bad)
idiv
or
add
cmp
es
and
outs
mov
xor
and
out
inc
jl
sbb
pop
je
xchg
in
mov
push
out
arpl
ds
shr
add
stc
popf
das
sub
in
pop
dec
push
lahf
pop
not
sub
adc
je
iret
pop
cmp
int3
xchg
inc
out
sub
add
jl
cmp
daa
xchg
dec
(bad)
ret
in
das
sub
int
mov
loop
ja
and
fistp
fwait
push
mov
ins
jecxz
daa
test
sub
(bad)
inc
hlt
and
jb
enter
sbb
jnp
sub
mov
xchg
inc
and
jns
rcr
adc
daa
sti
mov
add
pop
push
push
leave
out
dec
popf
jl
xor
movs
mov
inc
cld
pop
or
inc
aad
add
dec
sub
jge
popa
popa
inc
adc
mov
jae
sahf
test
rol
pop
mov
fld
inc
jb
jbe
adc
mov
and
dec
xchg
cdq
add
clc
xchg
sbb
cmp
cmps
pop
push
sub
popa
and
sbb
ss
or
mov
int3
addr16
lods
xor
js
dec
jp
xor
mov
loopne
jbe
sbb
or
add
outs
stos
mov
sub
xchg
or
mov
or
push
cmp
pop
jb
imul
pop
xlat
adc
les
inc
cwde
rcl
retf
inc
mov
inc
dec
mov
stc
test
add
mov
clc
inc
mov
adc
sub
dec
sbb
mov
mov
aas
mov
add
adc
call
adc
(bad)
jg
mov
out
lds
data16
add
inc
cmp
les
xchg
xor
xor
mov
imul
into
push
arpl
dec
fstp
stc
mov
(bad)
movd
pop
xchg
xor
movs
cmp
in
inc
inc
mov
std
enter
jae
daa
cmc
inc
jmp
adc
add
popa
jp
js
mov
hlt
or
inc
scas
pop
jo
push
js
and
loopne
lahf
int3
pop
cs
mov
fdivr
and
outs
out
jl
pop
gs
xchg
mov
inc
inc
cli
add
jle
(bad)
adc
jle
(bad)
ds
push
idiv
adc
std
xchg
fst
inc
and
push
inc
adc
xor
bound
ins
icebp
xchg
xor
test
pop
call
and
inc
inc
adc
rcl
push
sub
sbb
icebp
sub
pop
pusha
jno
aam
xor
xor
sub
dec
stos
sbb
sub
pop
mov
xor
dec
lahf
pop
pop
retf
lea
popf
fs
in
sub
lods
push
adc
mov
repnz
add
enter
mov
jo
xchg
mov
daa
ins
or
mov
fwait
mov
push
inc
fsubr
xchg
test
bound
mov
xor
into
sbb
pop
adc
sbb
in
loopne
das
fnclex
pop
add
xchg
jmp
mov
mov
mov
jae
stos
cmp
cmp
retf
scas
jae
adc
ret
out
mov
cld
jecxz
aad
mov
retf
popf
cdq
adc
cs
jg
pop
mov
mov
adc
out
gs
mov
iret
pop
cmp
inc
repz
fistp
mov
fdiv
pop
cli
fist
xor
sub
inc
mov
bound
(bad)
das
sahf
cli
push
movs
cmp
dec
pushf
retf
ret
out
xchg
int3
dec
cmps
add
and
rol
dec
cdq
retf
cmp
push
mov
dec
scas
inc
leave
jp
mov
cmp
test
sub
pop
fadd
leave
pusha
xchg
or
jbe
mov
pop
daa
mov
je
or
aas
or
aaa
loop
cmp
xchg
clc
mov
repnz
dec
dec
pop
shr
stos
aaa
push
adc
popa
push
rcr
cmp
mov
mov
jb
ret
mov
scas
push
std
imul
dec
leave
push
lock
push
out
fs
sub
dec
push
in
and
ins
aam
stc
shl
popa
mov
dec
or
xor
test
cmps
ror
ss
jp
xchg
popf
ficomp
rol
and
jmp
imul
inc
dec
xlat
cmp
fadd
pop
imul
mov
adc
jb
mov
jecxz
cmp
in
inc
jle
rol
cs
adc
dec
cli
fwait
mov
sbb
and
xor
lock
pop
jne
(bad)
mov
pop
pushf
sub
es
add
add
test
std
cmc
ds
fs
jnp
mov
fs
test
stc
cmp
and
push
mov
arpl
jmp
and
popf
pop
or
out
out
imul
popf
mov
sti
in
jno
push
mov
repnz
sub
add
arpl
and
ret
mov
inc
mov
scas
bswap
adc
cmp
inc
and
fs
xchg
dec
inc
sub
mov
aam
out
cld
mov
xor
push
and
or
test
retf
cwde
xchg
pop
rcr
retf
dec
mov
push
hlt
mov
div
mov
and
xlat
dec
inc
and
inc
mov
cdq
push
push
jbe
mov
movs
lahf
inc
mov
fsub
mov
xchg
xchg
jg
jecxz
lock
inc
jmp
adc
mov
jg
fnstcw
mov
dec
addr16
cdq
inc
icebp
sub
xchg
push
sbb
xchg
adc
mov
jmp
mov
(bad)
fnstenv
frstor
mov
cmps
pop
pop
xor
push
outs
cmp
(bad)
mov
xchg
mov
hlt
xchg
and
dec
cdq
arpl
xor
pop
les
rcl
push
push
fcmovnbe
fdivr
sbb
sub
imul
mov
stos
in
adc
and
xchg
mov
stc
dec
ret
mov
rcl
push
push
es
push
inc
push
mov
ret
ficom
leave
popf
hlt
(bad)
cmp
pop
mov
rdtsc
(bad)
stos
outs
jns
and
je
cmp
imul
or
inc
pop
dec
shl
neg
add
xor
xchg
mov
sbb
popa
dec
shl
aaa
inc
cmp
push
imul
adc
xor
add
dec
cmp
inc
cmp
arpl
or
adc
(bad)
pushf
stc
mov
lds
lds
lods
jne
nop
(bad)
rcr
imul
call
pop
test
inc
ja
sub
in
loope
test
jnp
mov
imul
out
inc
inc
jl
pop
(bad)
pop
mov
test
push
mov
mul
(bad)
shr
cdq
and
sub
jne
int
mov
jne
ror
inc
and
pop
ds
cmp
mov
inc
leave
dec
imul
jg
and
jbe
jb
inc
dec
loop
sbb
jns
movs
push
mov
mov
pop
sub
sbb
es
call
mov
in
and
fistp
test
mov
sub
add
popa
push
pop
and
sub
xor
ficom
mov
pusha
mov
and
dec
or
xor
pop
sbb
in
repnz
movs
int3
add
sbb
adc
dec
xchg
ror
std
mov
cwde
push
mov
into
jne
adc
jbe
push
jo
and
mov
jmp
aam
addr16
test
pop
into
or
push
mov
stc
xchg
ret
fimul
xchg
sbb
and
mov
pop
mov
jecxz
push
pop
or
sub
sub
mov
dec
add
sbb
mov
test
mov
cmp
xchg
addr16
add
mov
jecxz
jne
cmp
mov
adc
mov
call
xchg
pushf
out
std
and
lea
mov
xor
add
xor
retf
pop
dec
jb
pusha
sub
pop
sub
inc
push
addr16
xor
loopne
lods
xor
mov
mov
pop
push
mov
mov
dec
(bad)
cld
imul
and
push
inc
in
retf
and
and
in
sub
dec
sub
cmp
(bad)
adc
adc
jb
fdivp
int
or
xchg
sti
sub
push
addr16
mov
aad
fs
jp
mov
push
sbb
mov
push
aaa
jp
sbb
sub
jge
mov
add
jb
and
sub
adc
test
sub
lods
cmp
dec
xchg
in
xor
not
dec
sbb
sbb
lods
xchg
aaa
loopne
or
rol
dec
into
(bad)
jp
adc
push
mov
push
movs
push
stos
cmp
mov
or
aam
retf
cli
rcl
sahf
xor
adc
jecxz
xchg
mov
sbb
ins
repz
dec
outs
mov
das
or
xchg
cmp
inc
pop
push
bswap
clc
and
in
push
inc
lahf
fsub
fadd
inc
mov
xor
imul
cld
outs
fbstp
psrld
sbb
sbb
shr
jnp
stc
jns
adc
push
shl
pop
inc
mov
fnstcw
jge
or
mov
outs
inc
adc
movaps
ficomp
imul
ja
std
test
adc
adc
iret
add
mov
mov
sub
mov
adc
test
jmp
mov
clc
jns
std
cmps
(bad)
arpl
mov
xchg
int
mov
mov
dec
call
push
dec
adc
cmp
aam
sbb
add
pop
inc
arpl
mov
and
mov
dec
sub
stc
mov
pop
loopne
ins
or
cmc
test
stc
mov
inc
fimul
mov
(bad)
mov
clc
add
pop
sub
repz
pop
and
mov
mov
xor
sbb
mov
shl
retf
js
out
jnp
mov
fsub
leave
xchg
hlt
jle
sbb
pop
into
jg
je
in
iret
adc
cld
hlt
mov
inc
sub
jno
jp
aas
push
idiv
xchg
fcompp
mov
jge
xor
inc
sub
ins
call
out
mov
pop
fdivp
add
cld
inc
imul
inc
xor
leave
mov
mov
pop
outs
inc
sbb
test
nop
push
aam
mov
loop
movs
jae
vandps
jmp
jne
popa
cmp
stc
adc
arpl
fisubr
xchg
rcl
ja
in
xchg
fadd
adc
fadd
outs
fs
fist
lods
and
push
xor
dec
mov
shl
popa
(bad)
xchg
lds
sbb
adc
inc
stc
xor
mov
ja
bnd
repnz
cmp
cmp
cmp
call
ins
cmp
mov
pop
jns
cmps
bound
inc
adc
adc
jmp
es
outs
movs
loope
test
jnp
jns
fnstenv
push
sahf
cmps
std
jle
push
cmp
outs
fs
das
pop
add
inc
bound
repz
pop
mov
in
jbe
mov
cmc
arpl
mov
fdiv
call
aam
inc
jp
loope
fld
and
jmp
pop
stc
in
out
data16
cmp
popa
adc
pop
jbe
push
out
iret
into
rol
add
les
push
call
xor
leave
ret
fcmovne
mov
and
pop
retf
pop
dec
ja
jne
je
jmp
cmp
rcl
cmc
dec
jbe
xchg
push
rol
cmps
jle
popa
mov
push
cwde
mov
fidiv
add
mov
push
sub
rol
jo
iret
das
pop
stc
push
dec
imul
push
cwde
jb
fistp
mov
arpl
add
mov
mov
jecxz
cmp
xchg
push
jno
(bad)
jne
div
ret
cdq
jl
jnp
adc
ja
add
xor
rcl
aaa
icebp
dec
jno
or
or
stc
sub
push
xor
pop
jne
aas
cmp
pop
add
es
inc
dec
mov
lods
shl
mov
lods
sar
sub
bound
loopne
in
mov
ror
dec
push
add
scas
adc
xor
adc
fnstsw
push
mov
aaa
pop
aam
in
inc
pop
sbb
or
(bad)
sub
ret
sahf
jmp
int3
retf
mov
inc
int
arpl
dec
xor
dec
push
adc
test
gs
call
int3
ret
or
push
dec
lods
and
dec
retf
movs
aas
pop
inc
xchg
ins
mov
lds
sub
xchg
cdq
cmp
or
or
and
cmp
and
adc
loope
lahf
sbb
adc
pop
and
dec
cmps
test
repz
adc
pop
adc
adc
pushf
push
int3
add
out
sub
xchg
xor
jp
jb
push
push
or
ins
dec
lods
push
ds
cmp
sbb
jmp
adc
daa
fnstsw
pop
lock
mov
je
repz
add
cli
aaa
mov
push
xchg
and
push
cmp
outs
mov
inc
call
push
dec
push
loop
cs
imul
pop
or
cmp
xor
jmp
mov
sbb
add
cdq
in
ror
dec
out
dec
pop
pop
cmps
dec
enter
ins
cmps
fwait
and
loop
hlt
jp
lock
and
imul
push
cli
movs
cmp
pushf
jnp
push
mov
dec
(bad)
in
arpl
in
or
in
cmp
out
mov
add
sub
sub
mov
push
jle
sbb
inc
cli
mov
inc
sti
dec
push
scas
sti
std
sbb
lods
add
mov
mov
and
push
jo
gs
cmp
fist
lods
add
ds
ret
dec
sti
(bad)
daa
ss
and
or
push
push
sub
add
add
add
pop
hlt
loope
cmp
sub
cmp
aas
test
jae
pop
cmp
loopne
mov
xor
aad
jg
retf
cli
pop
sbb
daa
adc
loope
sbb
lods
xchg
push
jnp
(bad)
in
sbb
add
(bad)
xchg
pushf
inc
arpl
shr
adc
adc
and
pop
mov
add
scas
ins
push
jno
mov
repnz
sbb
jnp
xor
sub
xlat
fcom
add
ins
out
int
sbb
(bad)
in
out
push
or
aad
pop
mov
(bad)
out
movs
lods
bound
mov
xchg
movs
sbb
aam
popf
mov
cwde
xchg
push
out
fisttp
out
ret
mov
xor
jge
es
mov
addr16
or
pushw
xor
adc
inc
mov
lock
pop
pop
jne
pop
ins
mov
cmp
cmps
mov
lahf
ss
lahf
push
mov
xlat
sub
out
and
stos
mov
dec
pop
popf
sub
xchg
lods
mov
mov
rcr
(bad)
mov
test
stc
rol
test
mov
pandn
out
movs
int
add
loope
stos
or
mov
pop
into
icebp
push
jnp
xchg
fwait
cmp
lock
loope
sub
out
sub
ds
xchg
mov
jmp
call
js
dec
(bad)
jmp
out
addr16
and
scas
aas
(bad)
cmps
cdq
xor
or
in
jle
push
cmp
mov
jg
int
out
jmp
xchg
jmp
iret
cmps
jp
xor
dec
in
inc
imul
retf
icebp
movs
jg
cmp
leave
jmp
out
pushf
xchg
add
mov
xchg
jns
test
push
aad
test
mov
ja
add
xor
ins
adc
fild
push
inc
mov
sbb
xchg
pop
stos
mov
inc
(bad)
sbb
out
daa
mov
ret
loopne
mov
lock
mov
lds
push
jecxz
sbb
scas
jmp
mov
das
sub
dec
ret
cmps
pop
jecxz
sub
repnz
cdq
add
push
enter
repnz
lods
mov
aam
adc
aas
int
adc
sbb
imul
aas
retf
adc
cmp
lods
or
js
inc
popa
cmp
dec
xchg
push
mov
outs
cmp
movs
mov
pop
das
movs
pop
ja
in
shl
rcr
xchg
inc
jnp
push
stc
cmp
cwde
(bad)
iret
rcl
xchg
sahf
sbb
in
jp
int3
pop
add
jns
push
push
jb
inc
adc
cmps
sahf
arpl
bnd
inc
xor
hlt
or
cdq
inc
cmc
pop
sbb
cmps
sahf
test
inc
pop
test
test
xchg
arpl
cmps
and
jmp
movs
mov
jbe
or
leave
test
(bad)
scas
mov
jg
jge
lahf
stos
pop
mov
ffreep
and
retf
std
and
xchg
pop
(bad)
loopne
div
in
and
add
mov
scas
sbb
inc
icebp
xor
or
sub
sub
test
xchg
sti
(bad)
mov
jae
sbb
mov
out
(bad)
aas
addr16
adc
push
cmp
mov
repz
js
and
lds
mov
cld
mov
loop
dec
mov
dec
fwait
mov
scas
out
mov
sbb
jmp
cli
lahf
into
movs
adc
push
mov
or
jbe
inc
xchg
lods
and
xor
jae
sbb
mov
test
fxch
ja
loope
xor
das
pop
shl
mov
xchg
cmp
test
icebp
arpl
fisub
push
rcl
in
pop
out
mov
cmp
jle
retf
mov
sub
xor
or
mov
sub
scas
es
cmp
adc
clc
cs
fsub
icebp
mov
adc
aas
mov
sbb
pop
push
cmc
inc
jmp
pop
lds
in
mov
xor
dec
mov
fstp
sub
retf
dec
xlat
leave
jge
fidivr
push
xor
imul
mov
add
cmps
push
ins
xchg
jnp
mov
fidiv
push
ss
sahf
sbb
fcomp
in
ror
in
sub
xchg
xchg
aaa
shl
and
xchg
js
call
or
xchg
loope
imul
or
mov
or
inc
test
cld
repz
dec
xchg
push
cmp
add
in
hlt
adc
(bad)
stc
adc
data16
test
ficom
repz
bound
or
adc
loope
or
and
aad
adc
mov
cmp
cli
xor
jo
lahf
imul
xchg
repz
test
jns
add
bound
stc
(bad)
mov
lods
xchg
xor
cmp
xchg
mov
xchg
lea
retf
sub
mov
(bad)
call
je
jne
std
(bad)
mov
outs
cmp
fldenv
push
(bad)
icebp
aas
call
mov
push
dec
and
push
loop
pusha
in
je
add
push
push
jno
(bad)
mov
sbb
cmc
mov
scas
jmp
sub
cmps
rcr
ror
mov
fmul
out
or
enter
loopne
or
lahf
inc
ja
mov
inc
in
add
mov
or
sub
cmc
stos
push
std
xchg
xchg
(bad)
mov
stos
xchg
jmp
add
mov
inc
sti
pop
scas
xchg
cli
push
loope
cmp
jb
push
inc
out
sub
jle
fwait
inc
mov
bound
(bad)
(bad)
jp
xor
add
cs
aad
mov
xor
pop
jl
ret
sub
push
jne
xchg
in
jl
inc
xchg
push
or
outs
and
lea
iret
sub
mov
jnp
fs
jmp
adc
in
cld
and
mov
ficomp
jae
movs
arpl
es
and
ins
pop
or
inc
pop
repz
ss
adc
xchg
adc
sub
mov
pusha
pusha
in
jg
mov
adc
int3
jg
jmp
arpl
mov
cmps
cmp
sbb
mov
dec
jbe
(bad)
or
push
inc
hlt
adc
dec
push
xor
push
xchg
aas
push
push
out
mov
mov
inc
push
cdq
adc
sbb
fisttp
add
mov
cmps
cmps
cwde
fisttp
ins
push
scas
push
lahf
movs
call
rol
adc
mov
mov
pop
push
and
mov
aad
call
xor
pop
les
cmp
push
out
sub
test
sar
cs
es
loopne
test
jg
retf
cmps
bound
mov
into
pop
shl
add
shr
in
xor
mov
adc
inc
gs
cmps
push
(bad)
and
and
popf
iret
inc
rcr
sub
neg
test
mov
xor
daa
push
inc
hlt
adc
scas
pop
push
cli
(bad)
ins
and
xlat
dec
call
mov
mov
jb
jne
mov
xor
xchg
dec
es
iret
adc
jmp
sub
xor
gs
aad
push
cmp
jg
dec
imul
pop
jae
stos
push
lods
adc
test
mov
js
repnz
fstp
ja
mov
cwde
jge
cmc
dec
or
jle
mov
add
cdq
imul
or
iret
push
sti
pop
and
push
mov
add
rol
sbb
sbb
mov
cmp
cs
fld1
sbb
mov
test
into
push
inc
mov
mov
jp
ror
jbe
jmp
jae
jl
ins
std
rol
mov
cmc
cmp
xor
pop
xor
jb
cmp
mov
dec
adc
mov
repnz
in
test
cmp
gs
jle
or
mov
js
inc
inc
jg
cmp
xchg
sub
xchg
push
imul
ret
push
cmp
inc
bound
popa
mov
lahf
mov
xchg
pop
fldenv
bound
outs
jl
mov
sbb
cmp
jae
push
jmp
mov
je
js
inc
jmp
jmp
rcl
push
dec
stos
in
sub
pusha
pop
lds
shr
dec
mov
pop
ds
cmp
leave
pop
mov
pop
push
sbb
inc
shr
inc
xlat
mov
sti
and
fcom
mov
jo
fidiv
xchg
mov
in
aas
adc
idiv
cmp
or
or
mov
add
jne
dec
push
gs
xchg
hlt
(bad)
iret
js
fwait
push
add
or
fs
cdq
sbb
lock
pop
aas
shr
xlat
cmp
and
jo
xchg
lods
lods
cli
mov
mov
pop
enter
(bad)
imul
fs
xchg
adc
cmp
les
push
push
(bad)
mov
jmp
sbb
or
cdq
stc
stc
imul
mov
cmp
out
aam
scas
pop
xor
jg
push
(bad)
cs
in
pop
mov
push
xor
or
pop
cmp
mov
nop
dec
push
popa
je
mov
cmp
daa
pop
xchg
ins
and
adc
movs
cdq
in
mov
das
lds
jns
or
(bad)
adc
out
mov
pop
cld
sbb
push
adc
sub
adc
or
cmp
dec
daa
sbb
add
hlt
fnsave
(bad)
xor
rol
int3
arpl
loopne
stos
cs
and
cmps
mov
cmp
cmp
and
ret
fwait
or
retf
jb
adc
iret
jae
aaa
add
inc
xor
adc
test
cmp
out
fistp
inc
imul
lods
dec
js
xchg
in
test
jae
aas
jl
and
pop
jns
sbb
pop
push
loope
loop
ficomp
imul
dec
cmp
or
jp
fstp
xlat
sbb
pop
(bad)
nop
jge
dec
stc
movs
mov
mov
cmp
jecxz
cmp
out
imul
pop
(bad)
sti
pop
dec
dec
mov
xlat
jecxz
jmp
mov
xchg
xor
lods
sub
inc
ficomp
xor
jae
cmp
or
mov
push
lea
sbb
mov
test
cmc
retf
les
pop
popf
mov
ja
cwde
mov
dec
jb
sti
xchg
mov
test
adc
pushf
mov
push
push
mov
pushf
inc
sti
loope
std
push
add
sbb
leave
mov
xchg
add
out
fnstsw
test
jmp
dec
in
cmp
dec
pop
xor
sar
xor
pop
es
jmp
pop
mov
push
cmc
hlt
leave
bound
les
and
lea
or
mov
mov
mov
out
inc
jg
pop
or
cmp
mov
ja
(bad)
jmp
shl
jne
imul
push
out
stc
cmps
dec
dec
in
add
mov
dec
in
loope
sar
shr
fist
xor
pop
cmp
jle
cmps
push
or
mov
fild
ins
adc
ret
xchg
or
sbb
push
dec
add
fcomi
aad
mov
push
lods
addr16
adc
fistp
ret
inc
dec
cmc
sti
sbb
js
or
dec
(bad)
lahf
(bad)
lods
aas
scas
rcl
lahf
xor
pop
pop
sub
pop
adc
add
or
aaa
xor
daa
adc
and
popf
push
cli
mov
add
xor
scas
mov
out
in
int3
pusha
stc
mov
xchg
cmp
cli
mov
and
and
and
imul
mov
loope
push
sub
xlat
pop
push
add
sbb
sub
mov
jo
test
mov
inc
scas
rcl
pop
mov
les
into
add
dec
dec
sbb
push
cmp
jae
nop
jge
hlt
sbb
jb
xchg
xchg
sub
xchg
push
add
add
push
pop
xchg
push
xchg
dec
mov
aam
sbb
sar
(bad)
fild
add
lea
sub
ret
inc
leave
sub
push
lods
outs
retf
lods
in
loope
or
rcl
(bad)
jns
dec
cmp
aad
adc
xchg
pop
enter
mov
leave
cmp
outs
jp
jge
sub
test
fadd
pushf
inc
inc
jp
jnp
shl
jmp
push
iret
out
jge
ja
ret
shl
jns
rol
push
sti
jge
jecxz
adc
iret
push
mov
cmp
popf
aaa
push
stos
xor
ss
sbb
sub
jnp
sbb
or
repnz
neg
push
sbb
loopne
and
dec
sub
and
sahf
neg
out
js
push
leave
fmul
jge
cmps
inc
mov
add
xchg
pusha
lds
mov
push
bound
jnp
adc
or
rol
lahf
mov
icebp
gs
jo
fwait
jg
sbb
xor
loope
cmps
and
push
daa
inc
fild
mov
xor
adc
int3
fwait
pusha
fidivr
xor
aaa
sub
inc
pushf
aas
or
popa
(bad)
fdiv
and
call
into
lds
sbb
in
repnz
sar
bnd
mov
dec
xchg
sub
jle
fidiv
rcr
(bad)
repnz
mov
xchg
jp
dec
xlat
jg
jecxz
xchg
(bad)
mov
pop
add
inc
pop
cmp
test
or
dec
dec
ja
les
stos
jmp
daa
aaa
push
(bad)
dec
mov
jp
retf
retf
es
cs
setnp
stc
sbb
fs
push
adc
fisttp
sti
iret
inc
ins
enter
mov
push
lods
out
add
xchg
mov
ds
inc
dec
mov
sub
sub
add
aas
fldcw
inc
cwde
addr16
dec
or
outs
inc
les
cmp
sbb
jbe
jmp
call
stc
test
stc
shr
repnz
cs
les
dec
sub
sbb
rol
aam
stos
gs
leave
(bad)
or
adc
and
or
xchg
pop
retf
cmp
sub
sahf
ficom
in
ret
ins
jl
mov
xor
jno
cmps
idiv
(bad)
xchg
cmp
pusha
fs
int3
bound
push
push
sbb
(bad)
out
test
js
push
mov
in
and
pop
iret
daa
pop
pop
retf
push
inc
inc
pop
into
or
mov
sbb
shr
dec
rcl
jb
test
lods
push
xor
call
and
mov
retf
stc
fisttp
sub
ins
cwde
or
pop
dec
cmp
lock
fisub
pop
mov
adc
je
sti
push
and
iret
cvtps2pi
repnz
fsub
xor
push
stc
jp
test
mov
pop
ror
in
mov
test
pop
mov
iret
sti
mov
mov
and
cmp
cmp
sti
pop
fcomp
xchg
cmp
or
add
popf
fidiv
pushf
and
lahf
inc
sub
cmps
sub
xor
out
lahf
xlat
pop
hlt
arpl
ins
sub
icebp
lds
push
cmp
ficomp
(bad)
rcl
lahf
add
inc
ins
rcl
hlt
and
cmp
jns
add
fs
(bad)
loop
adc
xor
and
lea
push
jo
or
into
fmul
fisub
in
and
mov
popf
cmps
mov
sub
push
inc
dec
icebp
retf
push
call
xchg
sbb
hlt
sbb
push
jge
pop
in
mov
(bad)
mov
iret
xor
pop
adc
pop
sahf
popf
shr
inc
sar
xchg
aas
or
popa
cdq
xor
jo
sub
sub
int3
adc
mov
retf
jmp
movs
test
bound
sbb
mov
stos
mov
cmp
and
ffree
pop
ins
in
movs
jno
loope
mov
push
mov
div
xlat
retf
or
cmp
mov
cmp
mov
mov
xchg
or
cld
xlat
es
lods
ins
arpl
movs
popf
mov
xor
sub
mov
fcmovbe
mov
sub
jmp
push
(bad)
xchg
jle
xchg
fcmovb
mov
add
(bad)
into
pop
dec
ins
inc
ficom
inc
jle
stos
or
jno
loope
jo
pushf
outs
push
ss
fdiv
ret
sbb
test
std
cdq
jg
out
jbe
and
(bad)
mov
push
mov
loope
sub
bound
aad
xor
mov
cmp
scas
cmp
cs
retf
clc
mov
shl
jo
xchg
xor
(bad)
and
lahf
inc
or
ret
cld
mov
dec
or
pop
das
dec
pop
dec
es
hlt
(bad)
jecxz
and
lea
pusha
mov
mov
mov
or
dec
xor
int
or
pop
jno
aas
js
scas
sub
pusha
pop
inc
xor
or
jbe
push
cdq
mov
or
adc
pushf
or
sub
adc
jmp
add
aad
push
dec
bound
icebp
inc
scas
mov
sub
in
sub
js
repz
js
xor
clc
ja
push
repz
pop
jns
loopne
xchg
xchg
xchg
jle
adc
sub
lods
fimul
sahf
sbb
(bad)
push
xor
mov
loope
sti
sbb
mov
push
xchg
and
and
cmps
scas
jo
jecxz
or
inc
retf
add
inc
fucomp
imul
je
in
mov
inc
iret
push
push
loop
movs
ret
enter
in
mov
fcomi
pop
mov
sub
fcom
mov
cmp
mov
pop
scas
mov
jnp
(bad)
movs
jg
dec
(bad)
arpl
mov
int
xchg
lods
mov
leave
(bad)
retf
cwde
cmp
and
push
rol
jge
data16
xchg
adc
pop
repz
out
jbe
test
sub
fcmovne
mul
mov
test
add
repnz
imul
xchg
outs
cmps
inc
(bad)
stc
mov
xchg
cs
pop
push
pop
sub
xor
(bad)
retf
inc
call
xlat
test
push
pop
addr16
adc
add
call
jmp
xchg
push
mov
jo
dec
movs
jge
jp
test
add
je
jne
icebp
adc
fiadd
lea
(bad)
int
sbb
mov
sub
sub
or
add
push
push
push
inc
xchg
adc
xchg
(bad)
adc
mov
push
mov
mov
jnp
xchg
mov
mov
dec
mov
frndint
or
out
movs
mov
inc
adc
mov
inc
and
cmp
dec
dec
or
push
xchg
and
jb
in
push
adc
jns
dec
cmp
paddsb
mov
outs
repz
gs
dec
cmp
pop
or
xlat
icebp
and
adc
sbb
neg
retf
ds
mov
pop
fisub
xor
lods
cld
aam
imul
jp
loopne
and
movs
cmp
movs
pop
lods
sub
cdq
sbb
pushf
shl
or
adc
fwait
and
outs
cdq
popa
cs
lods
lahf
popa
pop
fwait
mov
repz
jns
test
push
ss
mul
mov
(bad)
out
fisub
push
rcl
inc
fs
lds
inc
enter
imul
mov
jne
hlt
push
mov
cmp
mov
inc
je
in
std
ins
push
pop
(bad)
xor
js
jmp
sahf
sub
mov
les
ds
add
ret
dec
sbb
ret
test
arpl
or
aad
popf
outs
adc
in
(bad)
lock
or
sahf
adc
fisttp
(bad)
call
and
xor
xchg
adc
push
imul
cmc
xor
jae
push
add
loope
out
xor
test
cmps
adc
xchg
adc
ja
dec
xor
sbb
add
test
inc
pop
lock
stc
gs
lea
scas
test
in
(bad)
mov
dec
sub
fistp
and
idiv
xor
inc
xchg
dec
bound
jmp
push
(bad)
iret
push
adc
js
imul
mov
js
cmps
stc
mov
outs
aas
sub
cmps
arpl
rcl
cwde
ret
sar
fsincos
fdivr
cwde
mov
pop
es
loopne
fstp
std
mov
mov
(bad)
in
ret
xor
sub
dec
xlat
outs
(bad)
dec
test
jae
inc
jmp
mov
icebp
or
ds
in
leave
mov
sbb
shr
out
xchg
or
push
js
push
jne
dec
xchg
(bad)
ror
push
cli
clc
jl
movs
ficomp
push
jns
(bad)
push
inc
fcomp
cmp
clc
sub
push
pop
call
inc
int
ins
adc
mov
daa
cld
push
and
cmp
rcr
mov
gs
xchg
mov
mov
add
scas
arpl
out
xchg
xlat
daa
ins
(bad)
mov
or
add
out
lahf
mov
push
xor
xchg
or
jecxz
push
retf
add
inc
push
addr16
sahf
xor
hlt
stos
sub
imul
mov
addr16
into
mov
push
aad
adc
in
fwait
outs
sbb
(bad)
in
js
cwde
push
sub
in
push
nop
add
(bad)
imul
cli
and
aad
xchg
pop
mov
xchg
dec
inc
jmp
pop
xchg
sbb
xor
push
push
push
pop
std
out
cmp
mov
imul
outs
imul
jnp
(bad)
lock
les
pop
adc
mov
fimul
ret
dec
xchg
mov
jne
lock
lods
xor
daa
inc
fs
retf
call
out
xchg
push
mov
inc
loope
mov
xchg
nop
sub
mov
fistp
inc
mov
cmc
pop
push
jmp
cmp
mov
jno
mov
fsub
sub
je
fld
add
xchg
in
fadd
xchg
outs
or
mov
xchg
pusha
mov
outs
fisttp
ret
lds
sbb
(bad)
cmps
sar
pop
stos
pop
test
push
test
dec
push
sub
mov
xchg
or
or
movs
imul
mov
mov
fs
sub
stos
sbb
xchg
push
xchg
neg
fcomip
std
lahf
mov
mov
mov
scas
cmp
inc
sbb
(bad)
enter
in
sub
add
mov
sbb
mov
push
inc
out
push
or
retf
add
shl
and
in
jne
jns
xchg
jmp
repnz
rcr
cmp
inc
inc
mov
dec
ins
fiadd
js
inc
adc
dec
xlat
imul
jns
push
inc
xchg
call
pxor
sbb
sbb
mov
popa
mov
cmp
clc
das
inc
fisttp
mov
test
xchg
pop
inc
adc
inc
and
cmp
add
jge
xchg
inc
adc
fldenv
or
rcr
mov
sub
cmp
lea
xor
ret
fidivr
mul
push
inc
call
mov
(bad)
(bad)
(bad)
or
mov
es
repz
push
mov
and
mov
xchg
ds
dec
arpl
xor
test
out
retf
dec
add
mov
fidiv
mov
push
leave
xchg
in
sbb
mov
jp
ins
scas
popf
mov
or
push
add
pop
inc
ins
jmp
mov
addr16
leave
mov
retf
out
out
lods
lock
cmp
mov
xchg
mov
(bad)
cwde
xor
adc
push
movs
xchg
push
mov
xchg
(bad)
inc
inc
fiadd
jmp
lahf
nop
jp
push
leave
mov
pushf
test
push
cmp
retf
and
and
jp
push
xchg
sbb
inc
(bad)
jmp
int3
or
mov
push
je
scas
fidiv
jp
cmps
dec
adc
pop
sub
jmp
out
ins
js
aad
les
imul
aaa
stc
or
mov
push
or
sub
cld
xchg
shr
repz
mov
xchg
lods
push
mov
add
dec
lock
div
into
ins
dec
test
mov
addr16
clc
enter
xor
jae
pop
cmp
(bad)
nop
mov
outs
in
lods
mov
dec
dec
int3
imul
cmps
lock
cmp
loope
add
stos
sbb
dec
jbe
and
pop
lahf
xor
dec
pop
outs
and
ret
int3
repnz
jno
inc
int3
jl
iret
and
sub
push
xchg
enter
out
inc
or
xor
fwait
xchg
cmp
or
sub
jae
mov
inc
push
sub
(bad)
out
xor
add
fs
div
cs
and
push
jb
xor
mov
pop
cmps
mov
pop
add
sub
xchg
call
dec
sub
push
push
mov
mov
adc
adc
scas
fwait
seta
xor
imul
pop
jb
push
and
or
xchg
cmp
sbb
pop
sti
inc
inc
push
adc
adc
(bad)
xchg
loope
sbb
dec
enter
pop
and
mov
sti
shl
dec
mov
and
sahf
pop
daa
cmps
fcmovb
mov
xor
xor
jne
test
sbb
in
cmc
xchg
adc
test
mov
jge
pop
mov
jge
sbb
add
or
sub
cmp
mov
lock
adc
fs
push
lods
cs
call
adc
rcl
call
cli
call
jle
inc
mov
ffree
dec
xchg
add
cmp
dec
and
sbb
(bad)
mov
lahf
adc
sbb
or
(bad)
sti
cmp
sbb
and
jp
jne
sti
cmp
xor
imul
int3
sbb
fidiv
ds
lods
cwde
jmp
into
or
movs
sub
pop
cmp
loop
adc
sbb
pop
dec
rol
call
xor
pusha
xor
aad
pop
inc
aas
wbinvd
pop
jge
pop
xchg
and
mov
into
mov
cld
or
push
jle
std
into
xor
add
jg
fadd
pop
sbb
(bad)
lods
jmp
and
retf
xchg
xchg
cmp
push
es
call
cmps
xchg
add
sbb
push
mov
mov
lock
repnz
mov
ror
lea
es
adc
push
xor
add
cmp
jl
out
and
xor
cmp
rol
iret
mov
adc
sbb
push
out
mov
loope
test
push
pop
add
sbb
push
mov
add
sub
mov
or
aaa
cmp
sar
adc
add
mov
int
mov
scas
add
sbb
or
daa
jle
mov
or
push
sub
push
jecxz
les
mov
inc
div
add
push
mov
pop
in
inc
xchg
inc
bndldx
xor
jmp
aas
mov
in
jo
lds
or
imul
out
adc
xchg
mov
pushf
int
mov
mov
lods
and
int3
add
sbb
or
adc
pop
and
test
pusha
shl
jae
jmp
push
or
sbb
xor
xor
mov
mov
inc
movs
adc
into
dec
dec
xchg
hlt
rol
ins
ins
mov
popa
dec
push
data16
movs
mov
dec
pusha
or
mov
mov
dec
add
test
stos
enter
in
dec
sbb
jno
scas
cmps
sahf
xchg
jge
cs
dec
add
movs
cmc
icebp
mul
es
pop
arpl
lahf
cmps
pushf
jecxz
sbb
cmp
xlat
fs
mov
mov
lods
shl
sub
mov
push
adc
or
arpl
inc
loope
push
add
pusha
adc
mov
(bad)
call
and
enter
repz
mul
cmp
pushf
push
or
inc
aad
pop
out
sbb
(bad)
mov
ins
fmulp
hlt
repnz
sbb
gs
sub
cs
pop
pop
add
cwde
scas
jae
sar
lods
pop
lea
dec
fs
es
cmp
mov
ficom
sub
xlat
xchg
add
or
cmp
push
mov
scas
jmp
inc
cmp
fbstp
dec
add
xchg
sub
out
cs
xchg
paddq
or
or
aas
leave
push
fucomp
sub
mov
fxam
test
and
adc
les
(bad)
fnstsw
test
adc
pushf
fist
in
mov
data16
and
jnp
int
popf
sub
jns
mov
inc
mov
out
rol
jecxz
in
mov
and
loope
pop
les
jp
pushf
nop
sbb
jo
add
call
adc
lock
and
adc
cld
mov
inc
aaa
push
jno
dec
lahf
jmp
aaa
(bad)
pusha
dec
jge
je
retf
adc
xchg
test
stos
bswap
or
push
aam
mov
mov
push
(bad)
in
xchg
push
inc
dec
repz
lods
jp
and
sahf
inc
push
inc
nop
xor
mov
pop
adc
aas
mov
xor
cmp
mov
outs
ins
scas
xchg
sub
std
pop
rcl
lods
lock
imul
sbb
mov
xor
xchg
aad
cmp
xlat
fiadd
cmp
jns
mov
cmp
and
jecxz
xchg
shl
sub
pop
add
push
test
mov
cmp
leave
cmps
je
sub
cmp
xor
enter
dec
pop
sbb
(bad)
inc
cmps
jno
dec
lea
push
retf
das
dec
push
jns
loope
ror
xor
add
std
mov
in
outs
pop
xchg
fild
mov
imul
cmp
xchg
pusha
fwait
xchg
lock
je
dec
scas
mov
cmc
mov
sbb
sbb
add
pushf
jmp
lods
fsub
jecxz
mov
add
daa
hlt
clc
mov
and
stos
inc
jmp
push
inc
mov
or
stc
and
mov
xchg
cmps
pop
and
cmp
adc
sub
xchg
inc
imul
push
nop
jp
aam
xchg
mov
mov
mov
xor
fst
jb
mov
shl
cmp
inc
dec
xor
jb
test
rcr
cmp
pop
lock
aas
jle
mov
pop
and
push
aam
pop
cwde
jne
jge
fcom
cdq
ror
mov
jae
fnstcw
jmp
sbb
mov
sub
call
xchg
jge
push
add
ss
neg
jne
popf
fldenv
ficomp
pop
int
dec
push
cld
adc
or
xchg
xor
inc
cmp
loopne
cdq
jmp
es
jecxz
pop
aaa
mov
in
cli
repnz
mov
jmp
bound
dec
test
xchg
jl
push
fucom
add
adc
ins
dec
fstp
mov
cmp
lea
push
lock
fnstcw
ficomp
outs
xchg
xchg
aas
cli
sub
fwait
and
and
jb
hlt
jmp
xor
jl
bound
jns
push
inc
cmp
push
(bad)
jb
test
aas
mul
or
mov
sbb
add
pop
jmp
pop
jnp
cmp
dec
sti
or
shr
test
stos
xor
jmp
iret
cdq
es
push
mov
xor
dec
repz
fwait
out
inc
cwde
pusha
or
jge
jb
add
xlat
xor
gs
mov
shl
jb
das
adc
cmp
dec
mov
add
dec
sub
jecxz
rol
or
int3
dec
push
mov
push
mov
mov
ret
mov
(bad)
jb
inc
stos
push
fsincos
mov
push
in
jne
in
addr16
jle
sti
inc
xor
mov
sti
sbb
xor
cmp
and
mov
iret
inc
mov
dec
lea
adc
mov
shl
pop
mov
mov
lds
dec
cs
and
mov
mov
shl
pop
add
shrd
aad
movs
or
mov
xchg
ins
inc
and
jnp
je
adc
inc
test
xor
pop
jae
sbb
rcr
jecxz
mul
rcr
cdq
cmp
scas
jmp
imul
sub
repz
ins
jbe
cmp
repnz
test
mov
jno
popf
push
hlt
lds
sub
loop
mov
sub
(bad)
cmc
xchg
clc
dec
xor
loopne
mov
sbb
pop
es
std
jmp
pushf
aas
inc
retf
inc
ds
stc
cmp
mov
in
jns
xor
call
inc
pop
neg
stc
adc
and
inc
sbb
add
sbb
and
cmps
call
push
xchg
cs
mov
sub
(bad)
fwait
test
out
pop
cmp
push
mov
pop
mov
aas
loope
xchg
mov
shl
and
dec
lds
lods
cli
call
push
imul
xchg
mov
dec
cmps
(bad)
add
and
out
jl
daa
cmp
dec
push
xor
lock
push
fistp
push
sbb
mov
dec
mov
pop
sbb
stos
adc
call
cmps
push
jp
mov
push
das
in
dec
(bad)
in
xchg
in
out
ret
mov
ins
je
imul
out
xlat
adc
mov
in
icebp
xchg
cmps
les
call
cmp
cwde
xchg
es
jecxz
pop
in
xchg
mov
xchg
retf
inc
icebp
and
pop
mov
int3
dec
aam
ja
mov
neg
popa
mov
jle
mov
jmp
out
enter
and
adc
jecxz
push
sub
or
lds
(bad)
mov
popa
in
fisubr
dec
inc
call
nop
mov
push
stc
out
jb
inc
div
xchg
clc
xor
add
cld
and
pop
stc
into
cmp
pop
push
and
(bad)
idiv
jnp
push
add
ss
pushf
sbb
xor
test
lds
pop
adc
gs
mov
fwait
scas
lea
ins
jo
ins
sub
add
jns
and
jecxz
and
hlt
out
int3
dec
sti
or
mov
mov
cmp
add
popa
test
stos
jmp
mov
and
dec
stos
mov
mov
rol
inc
push
out
arpl
inc
sbb
mov
mov
adc
mov
ror
jecxz
loope
mov
mov
out
jge
mov
push
dec
dec
int3
gs
fs
bnd
(bad)
mov
push
or
gs
sbb
sbb
retf
loopne
or
push
mov
push
pop
daa
cmps
retf
push
xchg
xor
int
adc
mov
sbb
mov
dec
jnp
call
lds
or
stc
pop
repnz
mov
test
jb
mov
cmc
jb
sub
ja
mov
push
int
xchg
pop
push
inc
and
jns
cmc
pop
dec
mov
xor
xor
(bad)
fcom
stc
scas
inc
retf
mov
adc
pop
ins
repnz
jmp
cmp
es
rcr
and
mov
xchg
test
mov
ror
hlt
sub
mov
ror
std
sub
lahf
(bad)
ror
inc
or
jne
test
sbb
xchg
popf
jl
out
pop
pop
not
inc
dec
ret
push
sub
jmp
sar
aam
pop
popf
and
test
fs
loope
dec
leave
adc
lods
jp
es
mov
mov
pop
fstp
popf
pop
call
and
push
jmp
icebp
imul
idiv
ss
push
popf
adc
cmc
inc
(bad)
fidivr
jns
fs
out
and
es
test
add
cmp
inc
arpl
and
or
int3
pop
sar
and
ret
mov
xor
ja
jne
push
fiadd
jmp
ret
loopne
sbb
jbe
arpl
pop
xor
cmps
jecxz
pop
adc
scas
push
mov
push
aam
popa
sub
or
pop
or
fcmove
pop
int3
in
xor
call
jmp
add
xor
fimul
push
test
enter
xor
jnp
out
push
mul
pop
mov
jo
add
xchg
test
shl
mov
sbb
ins
pop
inc
sub
mov
js
int3
outs
std
xchg
popa
jl
jle
and
inc
(bad)
js
sub
test
dec
in
loop
adc
outs
mov
dec
pop
arpl
cmp
pop
add
call
push
and
add
xchg
cmp
adc
add
out
dec
retf
and
push
cmp
test
neg
adc
add
ins
add
out
in
pop
cdq
xchg
ror
lock
lahf
not
cwde
out
shl
jecxz
and
jg
xchg
adc
push
adc
inc
stos
sub
pop
dec
in
cmp
stos
jns
fisub
test
pop
lods
or
mov
in
in
jo
inc
test
xchg
frndint
fsubr
pop
fidivr
das
ja
leave
repz
std
jg
mov
pop
adc
aaa
inc
scas
ja
add
push
imul
outs
std
stos
rcl
in
xor
cs
mov
dec
cmp
jmp
sub
xchg
adc
(bad)
imul
pushf
repnz
xchg
mov
adc
and
adc
div
push
cmps
cmc
mov
shl
stos
jae
add
cli
gs
jno
sbb
jne
or
in
int
pusha
out
repz
loopne
sbb
and
xor
(bad)
pop
cwde
mul
jle
ins
sub
and
lods
add
jle
popf
lahf
push
ins
mov
lods
push
dec
fimul
cld
cmp
sar
fist
sbb
pop
retf
add
popa
adc
aad
dec
sub
dec
repnz
or
mov
hlt
sub
fidivr
mov
lods
sbb
xchg
add
sub
push
cmp
mov
and
mov
add
call
enter
jecxz
shr
adc
mov
inc
jge
sbb
movs
push
outs
inc
pop
out
inc
adc
inc
xchg
xchg
js
test
fisubr
mov
(bad)
inc
mov
xor
push
mov
sbb
dec
(bad)
sti
add
enter
or
(bad)
ds
or
nop
mov
sti
cmp
xchg
xchg
xchg
cmp
mov
fcomp
xor
ss
stos
push
sub
outs
xchg
ss
sbb
inc
add
cs
retf
test
add
dec
pop
nop
rcl
sbb
out
dec
out
mov
cwde
mov
stos
mul
jecxz
stos
jmp
cmp
iret
jns
xchg
mov
or
sub
mov
out
sub
mov
mov
sbb
adc
xor
cmps
adc
js
js
add
and
or
adc
out
push
stos
mov
cwde
or
mov
and
mov
cmp
jecxz
stos
sbb
ins
fbstp
and
lds
pop
sub
cli
ret
jno
mov
retf
mov
es
xor
xor
inc
cmp
test
rol
out
ins
fcmovnbe
fiadd
fwait
ins
jnp
dec
data16
and
les
xchg
mov
mov
or
mov
pop
sub
inc
js
stos
mov
adc
jmp
sbb
push
inc
ja
dec
fld
add
das
mov
cmps
sub
jnp
rol
ret
out
es
jmp
outs
and
cmp
push
(bad)
mov
adc
pop
gs
xchg
inc
or
cmp
int
(bad)
icebp
lds
mov
mov
mov
jg
call
dec
rcr
inc
pop
pusha
shr
jmp
fldenv
jl
aam
xor
jo
arpl
sbb
aaa
push
cmp
pop
js
cmps
lea
mul
pusha
push
add
movs
sub
push
add
icebp
adc
pop
je
lods
xor
loop
outs
adc
outs
and
(bad)
stos
retf
and
add
rcr
mov
mov
xchg
cmp
nop
sbb
sub
addr16
int
popf
(bad)
int
sar
pop
inc
jb
cmp
hlt
push
loope
jmp
push
inc
cmp
fidivr
xchg
xor
loop
in
xor
out
jg
xor
add
mov
push
ins
adc
popa
aaa
add
inc
retf
adc
xchg
clc
pop
(bad)
or
jns
fbstp
mov
movs
sbb
mov
push
scas
stos
or
into
xchg
in
xor
pushf
xchg
and
ret
sbb
cmps
push
push
daa
and
sahf
inc
int3
add
or
fwait
es
(bad)
jmp
in
and
stos
or
xchg
shl
xchg
call
and
or
imul
sub
jecxz
or
pop
or
and
ja
(bad)
repnz
and
mov
arpl
lea
test
cmps
mov
dec
push
loope
jne
xchg
push
mov
sub
inc
ins
fld
xor
sub
fidiv
push
jmp
mov
outs
xor
push
jb
cli
fcomp
mov
leave
mul
(bad)
jmp
ja
mov
jecxz
sti
fdivr
pop
cs
pop
xlat
cli
push
lahf
lods
mov
pop
xor
fcom
cmp
mov
inc
and
cmp
ret
jbe
inc
cmp
hlt
adc
mov
mov
xchg
enter
pop
and
cmp
cwde
int
(bad)
dec
aaa
xor
xchg
adc
out
test
push
push
cmp
sub
push
adc
loope
ss
not
add
(bad)
mov
(bad)
dec
push
jnp
sbb
(bad)
scas
mov
retf
mov
dec
inc
daa
mov
imul
push
mov
xchg
xlat
aaa
outs
mov
call
pop
jb
dec
sub
jle
sbb
out
frstor
mov
into
jp
fstp
push
stos
mov
data16
xchg
outs
fisubr
push
push
sbb
hlt
xchg
in
ds
les
ret
adc
xchg
cmp
and
cli
xor
fdiv
jae
push
xchg
inc
in
xor
movs
push
cmp
inc
mov
push
(bad)
adc
xor
in
lods
aad
rol
sbb
cmp
add
jecxz
inc
sbb
mov
repnz
jl
cmp
out
push
(bad)
mov
loop
out
fstp
xor
cmc
pop
or
out
loop
int
cmp
hlt
jl
fld
rol
or
loop
and
inc
mov
and
mov
xlat
and
(bad)
cmc
sub
shl
(bad)
xchg
pop
adc
mov
mov
imul
test
aad
dec
ins
cmpxchg
ds
mov
pop
jp
jne
movs
xor
push
(bad)
add
dec
add
int3
bnd
xor
inc
pop
fwait
pushf
leave
push
in
popa
iret
rcr
das
idiv
inc
popf
or
adc
aad
sub
ret
gs
mov
rcl
push
repnz
das
push
sbb
add
repz
dec
inc
iret
push
inc
pop
xchg
push
cmps
adc
mov
push
not
sbb
pop
add
mov
rcl
nop
stos
sub
cs
adc
inc
inc
mov
dec
mov
fistp
loop
ret
mov
push
jmp
scas
xor
mov
cmp
js
inc
mov
cmps
mov
inc
xor
aas
test
adc
or
cmp
mov
mov
push
mov
sub
ss
mov
ss
mov
cmp
gs
sbb
mov
mov
aaa
jne
xor
xlat
loope
add
jmp
jo
es
retf
sbb
pop
outs
pop
mov
cmp
push
frstor
mov
fcomp
adc
lock
sub
int
mov
sub
add
pmulhuw
inc
mov
repz
jge
(bad)
in
mov
loop
mov
sbb
jo
and
call
lahf
sub
sbb
cmp
jecxz
std
fiadd
(bad)
rol
sub
jp
xchg
inc
mov
dec
or
push
cs
dec
sahf
sub
ftst
jnp
pusha
fst
fmul
imul
loopne
add
jbe
movs
outs
movs
mov
(bad)
mov
(bad)
fs
mov
add
shl
cwde
cli
cmps
bound
inc
push
inc
jae
sbb
sbb
mov
lea
repnz
js
lea
daa
mul
dec
pushf
lock
scas
or
cmp
add
(bad)
cmp
dec
push
or
imul
cwde
jge
xchg
xchg
xchg
dec
inc
(bad)
jmp
add
mov
js
mov
daa
jl
cmp
fist
aaa
jae
mov
aad
loope
fbld
and
add
cdq
xor
and
out
sbb
add
repnz
dec
fistp
ss
and
sbb
mov
int3
adc
push
add
sub
mov
pop
pop
lods
adc
test
jnp
mov
int3
rcl
daa
add
sbb
out
push
cmp
stos
pop
aam
and
ins
inc
inc
mov
shl
popf
mov
xchg
xor
movs
stc
sub
jl
bound
lock
cmp
sbb
cmc
daa
(bad)
xor
xchg
jnp
cmp
inc
ja
push
jnp
cmp
cdq
jbe
sti
test
(bad)
adc
stos
jmp
or
adc
xor
sbb
ss
loope
pop
popf
imul
sbb
hlt
xor
cwde
sub
sbb
push
jp
jle
imul
(bad)
jb
dec
push
xchg
sbb
popf
cdq
mov
enter
and
sbb
ja
and
rcr
jo
jnp
pop
call
jmp
addr16
in
daa
out
xchg
(bad)
shl
nop
jo
cmp
sub
pop
jge
xor
inc
pusha
sbb
popf
sub
jnp
popa
cwde
push
inc
and
ins
and
movs
shl
outs
jb
lods
adc
mov
cmp
(bad)
push
jge
out
and
rcl
rcr
or
fisttp
adc
outs
pushf
gs
ins
leave
dec
mov
push
data16
mov
mov
dec
push
push
xchg
dec
xor
test
and
in
cli
bound
pushf
out
sbb
in
sub
or
test
scas
in
adc
mov
sahf
or
jmp
jmp
repnz
inc
sti
sub
cli
scas
or
in
sub
jle
pop
loop
mov
xor
and
sub
cwde
jp
mov
arpl
movs
sbb
push
push
mov
sbb
or
out
test
arpl
movs
xchg
push
data16
loope
sub
fist
(bad)
push
add
xor
xor
mov
xchg
fistp
add
movs
movs
sbb
inc
stc
ds
mov
scas
int
inc
aam
(bad)
in
shl
push
or
sub
gs
cmp
cs
addr16
sub
(bad)
je
cld
out
inc
cmp
ss
mov
xchg
pop
or
push
add
test
sar
mov
cmps
cmp
retf
mov
mov
movntps
adc
imul
shr
lock
rcl
sar
sub
xchg
ins
inc
jg
push
es
add
sahf
adc
and
pop
out
sbb
jmp
push
push
push
imul
xchg
or
jns
ficom
retfw
inc
je
mov
sub
pop
clc
pop
mov
mov
or
pop
in
jecxz
jne
xor
jl
adc
jae
inc
adc
xor
fidiv
je
loop
neg
mov
jmp
sahf
and
shl
xchg
and
pop
sbb
clc
outs
sbb
jno
shl
in
in
jb
stc
pop
pushf
fistp
int
stc
sub
mov
mov
add
sub
movs
lods
jmp
dec
test
lahf
jbe
jmp
mov
in
inc
dec
pushf
cmp
sub
dec
xchg
cmp
enter
stos
mov
push
scas
push
in
lock
dec
add
mov
mov
call
push
sahf
push
test
pop
xchg
push
fidiv
mov
leave
rcl
outs
lods
div
jb
ds
pop
arpl
aas
ret
push
inc
test
mov
xchg
mov
adc
push
ins
add
retf
(bad)
adc
or
jns
sub
cld
ins
hlt
mov
test
push
scas
jns
(bad)
je
cwde
add
inc
add
jae
xchg
push
ret
arpl
ret
pop
test
jp
dec
js
adc
sub
outs
dec
pusha
inc
je
mov
push
lahf
lock
outs
sub
mov
mov
pop
loopne
rcr
mov
js
push
inc
jne
jno
jae
sub
jle
movs
push
data16
je
mov
sub
popf
in
fldenv
call
aas
outs
lahf
pop
fstp
pop
aam
adc
adc
pop
adc
jb
sub
pop
sbb
jns
call
fbld
push
fcmovnb
and
call
rcl
fmul
call
xor
jl
xchg
push
xor
fadd
movs
add
(bad)
xor
cmps
xor
das
xor
jbe
mov
xchg
xor
mov
int3
sub
push
(bad)
frstor
and
fstp
mov
cli
ins
aad
mov
cmps
sbb
sub
hlt
ret
cwde
dec
mov
jg
jno
neg
or
push
movs
sbb
mov
mov
fcmovbe
fcmovnu
ins
mov
lock
push
cmp
xchg
dec
dec
mov
fisub
data16
ret
and
(bad)
movs
scas
and
lods
outs
sub
mov
pop
pop
jns
inc
ins
into
push
(bad)
push
cmp
xchg
jnp
jle
popf
icebp
mov
lock
or
stos
inc
cmp
mov
in
inc
sbb
mov
mov
pop
nop
mov
data16
xor
rcr
sahf
sti
dec
mov
mov
fwait
push
icebp
pop
cmp
outs
das
movs
or
inc
repz
jl
adc
adc
stos
(bad)
ficomp
aaa
pop
mov
push
in
fadd
leave
pop
cmp
stc
test
lock
pop
mov
xchg
gs
xlat
or
fs
mov
cmps
pop
lock
dec
xor
fwait
or
ret
jp
js
jmp
popa
daa
mov
push
xor
pop
pop
movs
out
repz
retf
sub
daa
int3
push
aas
fmul
lods
in
sahf
rcl
call
sub
test
iret
rcl
and
mov
mov
mov
repz
cld
bnd
aaa
sub
jecxz
mov
jmp
push
lods
sar
out
mov
sub
cmp
fwait
inc
mov
adc
sbb
jle
fidivr
dec
in
dec
jae
jne
retf
jbe
lea
xor
adc
dec
inc
xlat
sub
data16
adc
pusha
sar
aam
mov
inc
loopne
push
jae
ins
gs
pop
mov
stc
mov
xor
jne
xor
xchg
jecxz
mov
fild
inc
mov
and
mov
sqrtps
cs
inc
jo
xor
mov
jmp
call
cld
sbb
and
mov
add
ds
lods
sub
test
enter
xchg
fnstsw
aam
js
mov
add
pop
cmp
test
aas
iret
adc
sbb
cmps
retf
sub
add
call
mov
push
pop
jns
je
fld
leave
adc
in
cdq
movs
add
xlat
mov
or
shl
jmp
push
shl
and
pop
push
mov
fwait
push
in
popf
lds
xchg
adc
mov
fsub
pop
mov
lock
gs
nop
loope
xchg
dec
inc
lds
adc
xor
pusha
retf
dec
push
xor
shl
jmp
arpl
mov
cli
jp
xchg
enter
imul
ds
stc
lods
popa
inc
loopne
gs
jne
out
cdq
pushf
retf
push
push
mov
js
jne
xor
hlt
sbb
mov
push
and
in
sbb
cld
test
xor
(bad)
repnz
xor
sbb
mov
inc
mov
inc
int3
mov
scas
push
ja
out
sbb
or
stos
loopne
push
pop
adc
int
xor
ret
mov
movs
js
xchg
push
cmp
test
(bad)
xor
leave
mov
iret
lds
sub
add
push
mov
and
sub
addr16
ja
fistp
adc
mov
imul
push
cli
xor
xchg
xchg
data16
adc
(bad)
cmps
ret
push
es
inc
and
test
(bad)
ins
repz
pop
push
je
cmc
jbe
push
fwait
jg
cmp
fsubr
shl
and
out
cmp
repnz
jle
mov
sub
ficom
fild
test
out
jno
shl
(bad)
sbb
xor
xchg
jmp
mov
ds
mov
mov
out
enter
sar
ins
(bad)
jnp
push
ror
outs
jns
call
dec
adc
stc
popf
retf
push
cmps
imul
mov
aas
and
ja
xchg
sub
pop
cmps
aam
jbe
pop
daa
and
pop
nop
add
xor
dec
xchg
xchg
jge
cmp
add
xchg
dec
je
dec
inc
scas
and
dec
cmp
scas
hlt
or
js
aam
popa
(bad)
jcxz
cmp
xchg
jl
jmp
jae
mov
dec
xor
jns
fisubr
and
adc
mov
das
div
popa
(bad)
popf
mov
push
xlat
outs
bound
jbe
jg
jo
(bad)
mov
cs
pushf
out
(bad)
and
movs
xchg
jbe
pop
inc
loop
(bad)
push
jo
aam
div
xor
aas
sub
xor
cmps
and
ins
mov
out
inc
imul
and
or
loop
out
adc
mov
fstp
add
imul
rcr
stos
ins
add
sbb
mov
daa
test
out
fsubr
add
(bad)
pop
mov
jecxz
test
or
xor
xchg
cdq
mov
adc
addr16
pop
sbb
pop
dec
(bad)
add
xchg
sar
pop
mov
jl
dec
imul
fsub
mov
mov
js
stc
xchg
add
sub
into
jg
mov
outs
sub
and
mov
test
das
xor
xor
lods
idiv
lods
or
enter
bound
ss
fcomp
xor
jmp
in
add
adc
mov
scas
(bad)
call
ror
xor
xor
shl
and
call
sbb
dec
or
jo
test
pop
ret
fstp
inc
sbb
sub
enter
js
adc
jbe
in
ins
xchg
mov
cmp
xchg
inc
mov
and
mov
iret
push
pop
push
push
xchg
in
cmps
mov
sbb
(bad)
mov
mov
jmp
pop
sar
repz
add
sub
add
mov
add
add
or
neg
nop
cmp
push
popf
gs
stos
mov
cmp
iret
rol
mov
cmp
iret
xor
sub
sbb
cmp
adc
jne
sbb
xor
jecxz
cmps
ror
ds
sub
fwait
and
icebp
inc
push
sar
sbb
dec
sbb
and
inc
and
in
or
stc
jmp
int
and
out
jl
sahf
jle
jns
cmps
sbb
movs
ret
and
mov
stc
jbe
jns
fisubr
jo
iret
sbb
cwde
mov
mov
jl
mov
cmp
fcomp
dec
call
in
dec
adc
fistp
jmp
push
push
and
mov
push
dec
or
xchg
xor
mov
imul
call
pop
out
(bad)
cmps
and
adc
es
aam
jo
jg
adc
mov
or
popf
mov
and
push
xchg
dec
add
mov
loope
les
cmp
enter
sub
jae
xor
imul
mov
cmp
stos
pusha
iret
jmp
push
xchg
xchg
pop
cmps
pop
push
add
xor
cwde
pop
push
jle
adc
dec
out
sub
inc
outs
stos
aas
daa
and
enter
mov
xchg
pop
ret
jmp
out
mov
bound
sti
lock
jp
jae
daa
pushf
(bad)
pop
sbb
fcom
sti
fistp
lahf
sahf
sbb
(bad)
popf
xor
and
mov
inc
add
ja
les
imul
jg
sub
pusha
stc
test
jmp
xchg
add
ja
xor
xchg
retf
jb
rol
ja
sub
mov
aam
fwait
jle
das
das
adc
test
push
out
dec
xor
call
imul
ins
jmp
cmps
aas
dec
xor
icebp
dec
cdq
shr
jbe
inc
pop
pop
gs
ret
add
adc
mov
xchg
stc
xor
push
(bad)
test
test
or
add
fcom
and
retf
xchg
xchg
mov
ror
pop
hlt
inc
addr16
es
lahf
jmp
ret
and
aad
pop
push
shl
inc
in
xor
push
sub
jo
test
(bad)
cmp
sub
push
loope
cmps
jle
pop
xchg
int
lods
push
out
inc
hlt
or
movs
fidivr
pusha
sbb
push
scas
pop
and
push
xchg
cmc
inc
jns
or
dec
and
pop
retw
push
sti
and
ret
mov
push
or
push
mov
hlt
je
inc
aas
sub
mov
std
aad
mov
sahf
mov
shr
adc
mov
pop
push
mov
jle
hlt
shl
mov
mov
out
adc
mov
mov
jl
loop
adc
inc
sahf
int
dec
(bad)
adc
outs
ins
(bad)
(bad)
adc
rep
shl
jb
or
fdivr
and
inc
cli
push
push
arpl
push
add
and
mov
mov
jg
adc
and
movs
mov
adc
(bad)
outs
mov
addr16
sbb
push
stc
leave
sbb
push
das
in
call
mov
(bad)
mov
jns
call
gs
test
fild
and
cmp
arpl
xchg
stos
sahf
scas
daa
mov
lock
into
in
js
fwait
dec
jge
ds
xor
sbb
pop
dec
pop
sbb
gs
fsubr
cs
je
mov
mov
push
les
xchg
pushf
or
adc
or
dec
test
fldcw
push
(bad)
mov
aam
enter
out
cmp
popa
fidivr
sbb
mov
lock
stos
test
scas
rcl
lds
or
cmp
retf
pop
outs
xchg
push
fisttp
add
jnp
mov
fdivr
mov
inc
fsubr
arpl
hlt
outs
out
mov
hlt
mov
jle
sbb
daa
pop
stos
mov
mov
arpl
js
rol
js
(bad)
or
outs
xchg
xchg
mov
leave
and
adc
je
mov
push
(bad)
call
into
xor
popa
dec
ins
aaa
cli
leave
adc
imul
xor
and
pop
scas
adc
xor
dec
pop
xchg
pushw
icebp
cmp
pop
sbb
dec
div
sub
mov
sbb
add
outs
mov
push
cmp
arpl
ret
pop
in
inc
call
fisubr
sub
sbb
xor
jb
fidivr
xchg
adc
dec
sub
fwait
mov
mov
ror
clc
push
mov
aad
xchg
mov
out
fs
dec
es
jge
clc
jge
dec
fucom
mov
dec
test
cmp
inc
(bad)
xchg
add
mov
push
pop
mov
sbb
aam
mov
cmps
sub
call
ret
pop
sbb
or
rol
or
cdq
test
bound
test
sub
sbb
pop
dec
mov
hlt
pop
jmp
cmc
sbb
cmp
add
movs
push
cmps
inc
sbb
repnz
stos
sub
jno
ror
sbb
jbe
stc
fxch
pop
and
cmp
clc
push
adc
sub
dec
cmp
in
inc
push
lahf
jge
xor
adc
arpl
iret
cmp
int3
pop
and
mov
pop
mov
cli
cld
sbb
cmps
jmp
mov
jle
lods
cli
sub
inc
es
gs
rol
sub
cwde
div
loopne
arpl
scas
jmp
push
(bad)
xchg
mov
jg
sbb
and
(bad)
mov
mov
stc
or
add
fsubr
call
fisubr
jbe
ror
push
popa
mov
test
or
sub
lds
xchg
sub
loopne
xor
sbb
int3
fcmovnb
adc
sub
stos
aas
out
cdq
das
mov
mov
mov
dec
xor
dec
or
add
clc
call
mov
cmp
loopne
push
inc
cmps
dec
pop
into
arpl
jb
int
data16
pop
mov
dec
jnp
pop
fistp
inc
jns
sbb
pmulhuw
mov
popa
cmc
loop
sbb
add
mov
scas
jmp
mov
mov
aaa
pop
(bad)
jecxz
or
out
mov
add
sbb
jge
push
loopne
inc
fisub
pop
sbb
daa
inc
clc
xchg
fstp
push
sub
cmp
(bad)
jb
imul
inc
adc
xchg
mov
scas
adc
jns
mov
in
jmp
clc
xchg
test
test
not
jecxz
movs
xchg
rol
les
pop
pop
fscale
test
jne
inc
pop
imul
xor
xchg
and
xchg
dec
cdq
xchg
sub
clc
bound
cdq
stos
lods
loop
xor
jge
clc
jmp
out
inc
push
inc
inc
and
push
pop
rol
dec
cmp
mov
mov
push
fisttp
cmc
mov
js
(bad)
les
retf
test
sub
xchg
mov
rcl
imul
sbb
jb
inc
fs
push
addr16
jnp
adc
call
pop
jge
inc
sbb
mov
and
into
(bad)
movs
xchg
shl
inc
and
jecxz
fcom
push
push
cmps
or
imul
loopne
clc
xlat
mov
mov
mov
add
push
in
inc
cmps
int3
push
call
inc
enter
push
push
pop
lods
pop
xor
inc
gs
pushf
enter
fsub
adc
fptan
pop
push
daa
push
fadd
add
push
into
push
mov
xchg
arpl
xor
test
dec
push
inc
dec
bound
cmps
imul
ret
pop
aad
mov
mov
inc
pop
pop
and
in
mov
hlt
rol
fistp
mov
out
add
add
mov
sub
popf
sub
jo
jmp
imul
mov
or
mov
sub
movs
mov
lds
mov
fimul
adc
ret
jnp
aaa
lea
lods
and
jl
in
test
nop
dec
cmps
jle
std
and
cwde
push
and
dec
and
dec
add
mov
and
push
mov
mov
mov
das
xor
(bad)
pusha
xchg
repnz
fild
stos
mov
mov
call
arpl
jmp
pop
lds
dec
(bad)
jge
sar
mov
repz
xchg
pop
jge
mov
popa
push
jmp
xchg
and
pop
aaa
dec
adc
popf
jmp
cmp
pop
xchg
and
loop
rcr
xor
add
or
ret
push
bt
cmc
adc
or
and
cmp
in
inc
in
xchg
out
mov
xor
dec
aad
sub
inc
sub
adc
push
or
mov
std
fcmovbe
mov
or
jge
or
mov
rol
mov
gs
sub
lds
dec
ficomp
(bad)
mov
in
dec
dec
inc
xor
adc
inc
xor
mov
jge
sar
iret
sar
cmp
jnp
adc
xchg
adc
cmc
inc
imul
out
ja
pop
sub
bnd
add
sbb
sub
ret
imul
adc
inc
pop
std
inc
(bad)
pop
jae
push
sbb
outs
xchg
jnp
inc
push
or
lods
xchg
and
mov
ins
pop
or
gs
dec
jb
and
shl
inc
stos
or
lea
mov
mov
adc
fbstp
mov
push
gs
bound
test
stos
fldenv
sub
xor
mov
adc
fs
mov
xchg
add
dec
loopne
idiv
aam
ins
xor
std
mul
nop
inc
fistp
leave
and
cmp
and
mov
ret
retf
les
adc
stos
sbb
adc
jmp
inc
sbb
jp
lea
or
pop
xor
rol
inc
aaa
in
pop
or
and
pushf
push
dec
pop
jle
stos
adc
retf
or
fist
loop
sbb
int3
jge
not
mov
nop
out
push
ror
push
cmps
loopne
pop
inc
add
lea
les
or
pop
enter
jp
popa
rcl
sub
inc
pop
mov
hlt
sub
mov
test
jnp
or
test
jmp
outs
jle
inc
xchg
add
xchg
loop
jmp
inc
mov
loop
sub
sub
pop
mov
sub
mov
dec
addr16
test
scas
inc
(bad)
sbb
lahf
in
mov
cmp
movs
sbb
mov
stos
outs
mov
stos
in
fcom
scas
sahf
push
aas
mov
mov
cdq
pop
mov
sub
mov
lods
dec
ret
xor
ror
dec
dec
ins
or
add
sbb
mov
cs
iret
rol
retf
cmp
clc
into
outs
mov
cwde
mov
pushf
int3
out
jbe
or
test
sub
xor
test
dec
loop
fs
neg
dec
mov
sub
add
cmp
jb
jbe
adc
pop
sub
aad
push
fwait
adc
sub
sub
mov
test
rol
cmp
mov
test
inc
lahf
jmp
out
addr16
push
pop
aas
pop
retw
les
fwait
cmp
addr16
dec
mov
or
pop
adc
mov
cmp
repz
dec
leave
jae
popf
add
or
adc
(bad)
clc
fnstsw
pop
fwait
add
pushf
cmp
adc
pop
(bad)
xlat
hlt
inc
(bad)
in
jecxz
jo
cmp
xchg
pop
push
push
std
cmp
sub
stos
dec
cmp
add
test
mov
outs
ret
sub
xlat
mul
gs
sbb
xchg
mov
sub
ror
inc
fimul
add
retf
lds
js
shr
rcl
cmp
les
push
dec
sahf
shl
cmp
mov
add
lea
cdq
enter
push
popf
push
daa
lods
pop
or
daa
std
call
outs
jbe
lods
pop
ret
pop
sub
int3
pushf
sub
shr
jo
add
sti
adc
out
imul
jae
and
xchg
dec
pop
sahf
xchg
jb
inc
sar
mov
leave
mov
movs
sub
mov
retf
fisttp
push
jecxz
adc
lods
repnz
inc
mov
aam
ss
stos
sub
pop
cmps
jmp
and
adc
out
mov
inc
inc
xchg
and
adc
ficomp
imul
sar
inc
stos
mov
mov
xchg
jno
cdq
fcomi
in
repnz
lds
cmp
xor
inc
pusha
xchg
out
cwde
pop
frstor
pop
pop
retf
bts
sbb
cmp
stos
push
icebp
and
push
pop
ja
inc
pop
dec
ret
and
pusha
mov
cli
es
xchg
add
or
shl
pushf
jle
out
lock
pop
push
call
dec
xor
in
and
(bad)
iret
ss
or
jle
cmp
sub
dec
dec
mov
inc
mov
fwait
imul
lahf
adc
xlat
and
pop
or
jecxz
mov
pushf
sbb
mov
js
outs
inc
add
push
div
adc
mov
jne
push
addr16
(bad)
mov
arpl
mov
aas
xchg
sbb
pop
pop
push
or
mov
dec
xchg
sar
push
push
into
inc
aas
pushf
or
into
(bad)
mov
fld
cdq
jno
dec
sbb
mov
ret
aas
cmp
jecxz
sub
lods
inc
and
and
add
sbb
cli
(bad)
push
es
xchg
or
push
jnp
xor
pop
xor
lods
shl
add
or
dec
mov
ret
adc
push
pop
cdq
inc
aam
aad
xchg
lahf
data16
jns
popa
jecxz
lea
outs
sub
outs
stc
push
add
jns
cmp
shr
adc
cmp
fwait
(bad)
clc
mul
outs
pusha
dec
inc
in
icebp
cmp
sar
and
xchg
outs
dec
push
int
inc
adc
fiadd
imul
xor
push
repz
add
retf
scas
(bad)
adc
inc
dec
xor
ins
test
pop
lock
pop
inc
add
mov
sub
mov
dec
and
pop
(bad)
and
loop
cmps
ins
dec
inc
mov
fistp
fisubr
mov
add
adc
add
jne
cli
neg
mov
add
push
imul
push
mov
in
je
cdq
pop
push
and
or
inc
scas
int3
push
retf
and
imul
imul
ror
loopne
adc
cmp
cli
dec
fdiv
jge
jmp
adc
pop
rsqrtps
retf
in
int
add
mulps
mov
mov
xor
xchg
jmp
jb
jg
cmp
inc
cmovs
(bad)
push
mov
xchg
inc
push
adc
jno
fmul
loopne
mov
inc
icebp
aas
or
jne
jp
mov
sbb
cmp
dec
lods
cmps
mov
shr
mov
loope
mov
cmps
dec
mov
test
imul
push
sbb
dec
jne
adc
pop
and
jecxz
inc
pop
test
enter
xchg
iret
add
sub
xor
mov
xchg
lea
push
jns
dec
pop
mov
dec
dec
pop
out
les
lods
dec
mov
inc
repz
mov
push
xchg
out
jl
or
push
imul
enter
scas
mov
add
add
cdq
sbb
sbb
add
js
int
jb
ret
push
leave
in
push
add
and
out
(bad)
mov
add
add
sub
fimul
xor
imul
mov
pop
ror
xor
push
ret
scas
push
out
sub
fadd
or
or
dec
and
ss
je
mov
hlt
xlat
cmp
cmp
push
ror
jmp
dec
pusha
stos
and
cmp
shl
test
add
or
adc
cmp
sbb
lods
cmc
dec
sbb
cmp
dec
add
ret
mov
(bad)
fneni(8087
call
adc
sbb
(bad)
in
rcr
push
aaa
adc
xchg
data16
iret
test
data16
dec
mov
inc
push
idiv
add
int
push
add
dec
xchg
fdiv
jmp
adc
stc
cli
das
add
loope
mov
movs
push
push
dec
stos
xchg
mov
rol
pop
jmp
sub
or
mov
mov
xchg
dec
repnz
cmps
sub
pop
call
pop
out
add
iret
fild
test
inc
sbb
fst
pop
jne
test
pop
(bad)
icebp
jb
dec
xor
jns
int
pop
pop
nop
jle
stc
xchg
adc
or
je
cdq
icebp
clc
pop
and
fmul
out
ret
movs
mov
retf
sbb
int
jl
mov
(bad)
xor
scas
in
lods
inc
push
popa
retf
jmp
icebp
mov
sub
sub
loop
pop
sub
push
push
mov
sar
adc
sub
stc
cmp
add
test
rol
pushf
dec
inc
inc
and
pop
pop
call
aaa
jmp
pop
xchg
ror
jl
sar
ds
xchg
sbb
ret
xchg
retf
xchg
and
jae
push
sbb
sbb
loopne
cmp
scas
je
sbb
movs
jp
pop
retf
popf
xor
push
mov
jno
jne
fmul
cwde
xor
mov
popf
mov
xlat
popf
test
adc
aaa
lods
mov
lock
mov
mov
jne
pop
fmul
bound
xchg
xlat
int
adc
outs
mov
sbb
sbb
inc
jae
(bad)
ja
cmps
je
pop
xchg
pop
(bad)
jl
adc
je
sub
push
mov
shl
mov
pop
sub
adc
mov
mov
mov
in
push
push
push
dec
loopne
test
ss
adc
xchg
loop
scas
ja
push
xor
mov
outs
loope
xor
dec
movs
cmc
aaa
std
sub
ficomp
dec
repnz
das
out
mov
jle
call
adc
xchg
(bad)
adc
xchg
push
mov
xchg
nop
mov
int3
push
ret
imul
fld
jge
mov
scas
pusha
fsubr
lock
add
into
inc
jo
call
ja
push
cmp
xor
ja
xor
inc
dec
lds
cdq
loopne
mov
or
sub
out
inc
cli
cmps
arpl
ret
fistp
mov
xor
mov
in
dec
fadd
fiadd
mov
cli
push
sub
or
outs
les
(bad)
in
add
jg
cld
cmc
inc
push
pop
sbb
mov
pop
fcomp
pop
sub
mov
push
fisttp
fs
adc
mov
xchg
push
xchg
mov
xor
or
or
(bad)
mov
cs
sub
aaa
or
call
rol
and
jne
das
jl
or
mov
mov
pop
outs
repnz
les
xor
dec
ins
into
push
(bad)
and
psadbw
xor
ror
cmc
cmps
or
les
in
add
aas
lahf
bnd
mov
(bad)
fldenv
daa
adc
aad
inc
jnp
out
loope
cmp
mov
outs
repnz
add
cmps
and
lods
test
shl
cwde
jl
pop
mov
mov
or
dec
inc
shl
pop
loop
cmp
cmp
outs
xor
movs
lods
push
lds
pusha
mov
out
shl
dec
(bad)
arpl
es
mov
repnz
lds
push
shl
int
or
mov
in
push
rol
mov
jecxz
mov
stos
faddp
jmp
shr
jecxz
mov
jmp
cli
int3
inc
inc
push
and
inc
xchg
lahf
or
repz
lahf
or
xchg
lods
not
push
out
jp
out
mov
jne
out
or
or
cmps
xchg
cmp
push
jl
fadd
gs
outs
jmp
ins
repz
stos
fwait
jo
mov
test
xchg
movs
sbb
or
daa
jp
lds
xchg
pop
scas
out
push
scas
dec
cmp
aas
jmp
popf
or
jl
inc
mov
mov
sub
mov
cdq
pop
pop
mov
xor
lods
cmp
jnp
fmul
add
push
jns
lahf
push
retf
pusha
push
mov
icebp
mov
mov
ret
jge
mov
cmp
inc
out
ror
push
mov
xchg
mov
dec
into
jmp
ins
mov
or
(bad)
fwait
call
mov
mov
xor
cmp
mov
rsqrtps
mov
retf
imul
test
adc
enter
mov
ror
mov
int
cld
ins
dec
inc
mov
stos
sbb
fstp
sahf
ror
mov
adc
icebp
mov
dec
sbb
xor
popf
cli
loopne
sti
or
cdq
call
or
jbe
xor
or
inc
mov
push
fdiv
outs
sub
ret
ss
inc
jae
xchg
dec
pop
pop
or
repnz
and
xchg
cmp
es
xchg
ficom
(bad)
ins
int
jae
cmp
jp
jle
nop
jg
xchg
push
inc
out
pop
cwde
and
pop
cmc
xchg
xor
mov
int3
test
sbb
sbb
les
dec
push
bswap
cmc
lods
movs
mov
mov
inc
stos
pusha
dec
gs
push
addr16
xor
and
sub
xor
jecxz
cmp
xor
(bad)
jns
push
hlt
pop
in
dec
aam
das
mov
sbb
push
or
movs
outs
jnp
dec
and
ror
dec
mov
fwait
out
lods
cwde
fbld
mov
xchg
pusha
pop
inc
fbstp
pushf
pop
lahf
pop
out
sbb
mov
mov
psubd
xchg
cmps
ja
mov
and
xchg
test
jbe
rol
(bad)
movs
fdivp
mov
movs
adc
mov
jle
inc
lods
test
gs
nop
lods
and
inc
retf
in
sbb
iret
and
lahf
sub
sbb
mov
stos
jmp
pop
in
call
push
icebp
or
call
movs
data16
dec
adc
xchg
and
adc
mov
xchg
jp
(bad)
icebp
push
push
cmc
out
dec
sub
xchg
loopne
ror
sti
dec
bound
and
ja
loopne
shl
xchg
movs
push
stc
les
jl
dec
mov
sub
adc
ds
call
cld
add
call
mov
dec
xchg
gs
je
adc
(bad)
(bad)
push
ja
aas
push
jmp
cmp
or
addr16
jmp
mov
adc
fisttp
pop
sub
sbb
(bad)
mov
push
(bad)
sar
daa
(bad)
push
mov
cs
xchg
cld
icebp
into
push
cmp
sbb
movs
xor
xchg
in
mov
and
and
ja
or
jge
inc
int3
push
lahf
mov
repz
or
retf
cmp
push
rcl
or
rol
push
and
push
test
imul
cmc
sbb
repz
lock
cmp
push
(bad)
sub
mov
dec
add
adc
shr
jg
test
arpl
(bad)
arpl
inc
cs
cdq
dec
pushf
jmp
bound
dec
or
mov
movs
push
popf
jp
ret
repnz
mov
in
imul
push
and
aaa
adc
pop
cmps
pop
shl
adc
fstp
mov
add
dec
jge
sbb
mov
je
cmp
dec
ins
jo
fisttp
in
aam
cmp
sub
std
popa
or
jb
pop
out
sbb
push
mov
sub
push
dec
in
les
mov
rcl
jae
psrld
ret
mov
ss
jmp
push
push
ja
inc
push
push
lock
and
das
xchg
jmp
cwde
pop
pop
popa
pusha
fcmovnbe
xor
mov
push
xor
adc
jno
mov
stos
add
inc
sbb
imul
clc
mov
mov
data16
mov
cmp
xchg
scas
add
and
outs
aaa
fild
fisttp
push
stos
fndisi(8087
pop
mov
icebp
sbb
dec
inc
xlat
add
stos
popa
xchg
jns
or
dec
pop
push
mov
hlt
inc
icebp
imul
sub
mov
fs
mov
ret
xor
pop
mov
es
pop
and
push
lods
and
xor
lods
mov
shr
leave
xchg
mov
xor
mov
mov
outs
adc
rol
mov
dec
or
clc
aad
xor
cmp
movs
out
bound
mov
stc
cmps
loopne
jp
out
dec
(bad)
xor
mov
xor
ins
mov
add
xchg
and
dec
jg
imul
inc
icebp
add
(bad)
mov
clc
mov
push
sub
ss
in
popf
xchg
sahf
sbb
popa
jecxz
mov
aaa
adc
in
inc
mov
mov
jae
lock
xchg
mov
popa
out
push
adc
out
dec
rol
dec
mov
les
lods
xor
stos
and
rcr
jno
sub
in
(bad)
out
xchg
pop
dec
ficomp
shl
add
ja
adc
lods
fdivr
mov
sub
mov
xchg
js
push
adc
xchg
sbb
int3
fidivr
enter
(bad)
enter
cmps
aaa
xchg
jg
shl
push
ins
stos
sbb
or
mov
test
push
(bad)
pop
xor
adc
dec
mov
push
add
jno
inc
xchg
rcr
mov
(bad)
jo
pop
test
jno
fistp
xchg
sti
aad
inc
sbb
adc
aad
in
cmp
rol
fsub
jmp
xchg
sbb
mov
xor
mov
cmc
sub
ss
cld
dec
inc
push
and
mov
ds
mov
fcmovu
shr
sahf
ffree
adc
push
neg
push
xchg
inc
push
out
test
lods
and
sar
jmp
clc
fisubr
fs
fcom
mov
mov
ja
jnp
outs
jno
imul
cli
pop
xor
sub
pop
xor
jae
mov
jmp
(bad)
movs
pop
and
rol
and
shr
jns
mov
inc
mov
test
in
mov
push
scas
lods
dec
ret
pop
fdivrp
jns
dec
xchg
in
or
xor
mov
dec
popf
jg
cmp
jp
repnz
out
cmp
outs
pop
add
add
cmp
jmp
imul
lods
lods
adc
push
rcl
aad
sub
jmp
jge
adc
push
adc
hlt
mov
mov
ja
mov
jns
mov
das
popf
call
sbb
cmc
ror
jns
mov
xchg
out
sub
xchg
ds
xor
daa
or
jmp
aaa
or
addr16
retf
scas
and
dec
mov
test
cs
mov
scas
int
ss
mov
test
xor
sub
sbb
xlat
dec
adc
loopne
test
shl
cmps
arpl
das
add
cmps
adc
cmp
dec
mov
int3
pop
sub
test
sub
pop
mov
cmc
stc
and
sti
and
into
popf
leave
test
mov
sahf
cs
mov
cmp
cs
test
in
add
popa
and
lock
jb
mov
out
(bad)
jnp
sbb
pushf
pop
leave
mov
pop
out
daa
or
inc
jecxz
pop
xor
or
adc
push
enter
pop
jae
clc
pop
(bad)
push
daa
push
call
test
mov
pop
add
or
mov
and
sbb
add
xchg
ror
inc
mov
pop
js
iret
push
loope
sbb
jo
add
int
mov
dec
pop
and
xlat
ds
pop
xchg
cli
inc
push
mov
out
inc
lahf
mov
not
cmp
test
(bad)
call
ss
nop
mov
stc
mov
sahf
adc
adc
popf
into
mov
pop
loopne
inc
fisub
repnz
sahf
test
call
jb
push
movs
pop
data16
stc
push
or
in
popf
ja
push
or
push
lea
daa
mov
mov
mov
(bad)
jmp
loope
add
int
jecxz
cwde
repnz
in
ds
scas
mov
sub
shr
jne
adc
loop
inc
cmps
dec
lahf
adc
jp
pop
icebp
js
sahf
retf
fist
fwait
cmc
add
outs
sub
adc
add
and
mov
pop
mov
loop
push
repz
retf
gs
aad
mov
sub
loop
sti
pop
jecxz
jle
movs
mov
cmp
add
add
mov
mov
xchg
cdq
push
neg
push
fcmovbe
inc
lods
cwde
cmp
inc
jle
dec
dec
fstp
or
loop
(bad)
mov
xchg
jmp
push
(bad)
fs
pusha
xchg
rcl
ror
cmp
jle
fst
mov
int3
ror
pop
ins
pusha
aam
push
inc
inc
mov
jno
sub
enter
mov
fmul
imul
out
(bad)
mov
xchg
lock
inc
lods
js
sbb
cld
mov
pushf
test
mov
popf
sahf
and
int3
cmps
out
pop
sub
sti
outs
mul
lahf
gs
pusha
call
imul
mov
cmp
std
jno
or
sub
add
fs
mov
dec
clc
fidivr
lods
inc
fst
(bad)
leave
or
cmps
stos
mul
loope
push
fiadd
repz
mov
aaa
neg
inc
scas
mov
cmovbe
hlt
mov
adc
mov
dec
out
adc
cli
cwde
xchg
out
cmp
inc
jb
loopne
mov
lods
cmps
cmp
mov
or
shl
pop
mov
das
repz
popa
xchg
add
xchg
or
jbe
mov
pop
mov
dec
test
mov
fidivr
adc
cmp
push
fimul
repz
in
mov
sub
add
jg
fcom
fld
lods
and
mov
mov
daa
gs
ret
fidiv
lahf
pop
fwait
adc
jns
out
mov
push
inc
cwde
jg
test
xchg
xor
cli
fcom
or
mov
retf
fnsave
cwde
xchg
and
jl
addr16
xor
jmp
mov
rcl
jb
loope
mov
jecxz
imul
or
or
mov
mov
pop
sub
inc
sub
mov
loope
fiadd
and
test
xor
xor
sbb
(bad)
