and
mov
cmp
dec
daa
sbb
and
adc
mov
stos
out
int
les
mov
push
out
mov
inc
sti
xlat
(bad)
ficom
mov
(bad)
mov
sub
jae
out
cmc
fwait
mov
fs
and
xchg
test
and
fimul
or
mov
fild
jbe
cmp
in
cmp
call
mov
repnz
(bad)
loope
xor
pop
push
cmps
add
ret
dec
rcl
pusha
dec
dec
mov
aaa
or
sbb
cwde
in
dec
push
xchg
cwde
enter
pop
mov
(bad)
jmp
out
pop
fidivr
mul
sahf
cld
repz
out
out
out
cmp
loop
cld
inc
in
and
scas
sbb
bound
push
dec
sar
pop
lods
mov
sbb
jb
pop
jmp
repnz
sbb
sti
daa
xchg
pop
xor
dec
inc
mov
cld
and
fild
ret
popf
movs
dec
movs
popf
rcr
test
hlt
outs
inc
inc
mov
mov
dec
or
mov
inc
lods
std
add
or
ret
cmc
ins
add
xor
dec
clc
or
call
mov
int
push
sub
pop
test
mov
add
cmc
pushf
in
pop
test
add
(bad)
in
xchg
mov
pop
sar
psrad
ret
adc
fnstenv
inc
mov
sbb
inc
aas
hlt
jno
bound
push
aad
mov
imul
inc
jo
mov
mov
xchg
pop
les
sbb
dec
cmp
jne
xor
mov
push
loope
fdiv
rol
inc
out
lea
or
adc
stc
cwde
adc
add
pop
xchg
add
sbb
repz
loop
mov
mov
jo
shl
retf
push
sub
push
dec
inc
aas
jo
rcr
mov
sub
sub
imul
arpl
mov
jbe
shl
loopne
mov
mov
ror
xor
(bad)
or
out
loope
or
aas
je
je
(bad)
mov
push
ss
sti
sub
sbb
rcr
sbb
push
or
and
or
cmp
popa
mov
je
cld
es
test
cmp
sti
adc
mov
dec
and
mov
mov
lds
iret
mov
scas
jmp
xor
test
sbb
rcr
hlt
pop
cmp
pop
test
dec
ds
cmp
push
ror
out
imul
sub
test
faddp
mov
iret
je
(bad)
out
xchg
add
xor
xor
iret
retf
dec
mov
inc
hlt
js
inc
jns
div
sbb
lea
cmps
pusha
fwait
add
xor
pop
cmovb
popa
mov
jmp
push
mov
mov
in
lods
addr16
ror
addr16
addr16
arpl
push
sbb
or
das
pop
sub
cmp
addr16
mov
stos
rol
out
jo
fwait
add
mov
cmp
jno
adc
lods
stos
bnd
cmc
mov
push
jo
mov
sub
cmp
xchg
push
sti
xor
mov
ins
dec
in
in
cmps
mov
mov
adc
adc
push
dec
xor
jg
aas
jns
das
inc
movs
lds
cdq
mov
cld
jbe
scas
push
bound
cmp
mov
in
ror
jno
in
div
push
out
dec
into
jb
daa
sbb
pop
cmp
cdq
mov
pop
pop
pop
jl
data16
add
or
push
(bad)
ret
pusha
sbb
ins
(bad)
mov
jae
cmc
pop
(bad)
addr16
fdiv
sbb
loopne
dec
sub
push
out
std
xor
(bad)
rcl
mov
cmc
call
cmps
aaa
mov
fidiv
fwait
add
and
aas
ret
pushfw
int
int3
aad
xor
inc
pxor
push
adc
xor
int
cmp
dec
pusha
or
gs
inc
mov
std
icebp
xor
jae
pusha
hlt
int3
(bad)
mov
int3
shr
int
mov
mov
rcl
data16
dec
pop
not
into
jle
push
adc
pop
call
sub
pop
mov
icebp
inc
icebp
movs
mov
pop
fsubr
sub
(bad)
and
stos
stc
movs
cmp
stos
int
jmp
lahf
fxam
fisttp
in
pop
imul
pop
retf
mov
or
fild
(bad)
mov
test
jbe
mov
jle
cwde
js
pop
loope
xor
dec
add
repz
xchg
lock
jae
pusha
sbb
stos
icebp
cs
jmp
jns
arpl
add
adc
les
inc
xor
cmp
in
mov
unpcklps
repz
daa
xor
daa
jb
cmp
mov
out
sub
test
dec
mov
ins
push
out
popf
outs
xlat
mov
sti
mov
xchg
ins
movs
lahf
call
jns
cld
push
jb
es
push
inc
fdiv
dec
mov
cmp
jge
imul
push
out
or
push
inc
dec
sahf
jle
stos
aas
or
scas
ret
scas
std
xor
int
stos
repz
cmps
cmp
jno
lds
inc
jo
(bad)
mov
sub
mov
cwde
push
mov
fsubr
inc
sbb
sbb
shl
xlat
xchg
cmp
adc
aam
scas
ret
pop
xchg
pop
xor
loope
mov
sahf
sub
outs
inc
sbb
pop
adc
ret
jno
fprem
mov
fist
jmp
test
call
jno
ja
sbb
imul
dec
test
das
dec
pop
inc
enter
cs
xchg
fidiv
adc
mov
fisubr
retf
mov
dec
inc
and
jns
pusha
cs
(bad)
das
popf
mov
cmc
sbb
stos
out
test
sbb
and
lods
dec
sbb
mov
cmp
push
and
xor
ret
adc
cs
hlt
mov
mov
sub
mov
and
retf
popf
nop
mov
pushf
aaa
sbb
lea
pusha
fsub
xor
pop
lods
aas
sahf
test
push
leave
sar
rcr
loopne
mov
cmp
pop
jmp
and
das
jbe
in
fs
mov
push
loopne
jne
cmps
jno
add
mov
imul
(bad)
and
xchg
sbb
ret
push
pop
xchg
jns
mov
aad
es
rcl
ja
push
aaa
pop
daa
or
sub
frstor
ins
popf
xchg
push
push
xor
push
adc
lock
sbb
mov
out
les
cld
rdtsc
pop
movs
out
stc
mov
jmp
test
jns
out
idiv
inc
fstp
aam
xlat
pop
test
xchg
cmp
fst
jmp
and
pop
jmp
ins
sti
cs
mov
jl
sar
ss
outs
fidivr
js
mov
loop
cmp
int
adc
cmp
jmp
pop
fs
cmc
inc
in
cmp
xor
ret
je
xchg
test
inc
adc
out
mov
je
pop
push
mov
jbe
outs
clc
test
in
arpl
ins
mov
add
ins
sbb
dec
into
sbb
mov
jmp
mov
xchg
pop
and
repz
jg
pop
jbe
push
(bad)
pusha
and
call
repnz
shr
mov
mov
popf
xor
nop
iret
stc
out
arpl
lds
or
pop
out
push
test
scas
(bad)
ss
arpl
mov
xchg
mov
jns
mov
loope
sti
ss
test
fnclex
out
(bad)
add
jae
jmp
test
mov
or
test
push
sar
xchg
cmp
add
add
(bad)
ret
lds
ffreep
jmp
adc
xor
das
pop
add
out
jle
js
js
pop
retf
add
sahf
xor
call
cmp
mov
jl
fdivr
jecxz
lds
enter
mov
mov
and
pop
fyl2xp1
aaa
xchg
stos
sbb
dec
cmp
retf
xchg
leave
mov
sahf
lods
adc
stc
scas
es
push
mov
retf
sub
lea
aaa
mov
lods
xchg
scas
inc
jmp
or
xlat
jecxz
dec
aam
jg
std
mov
outs
(bad)
cwde
in
int
add
sbb
pop
or
movntps
sub
movs
dec
fsubr
test
iret
mov
aad
das
jp
call
ins
ret
jle
(bad)
in
cdq
xor
call
push
cmp
add
cmp
xlat
scas
(bad)
push
arpl
bound
inc
xchg
jb
iret
(bad)
ficomp
dec
cmp
sbb
jae
sub
(bad)
paddsw
mov
inc
xor
mov
fcmovu
int
jmp
jecxz
enter
shl
push
data16
daa
scas
enter
push
xor
fsub
dec
jmp
push
test
inc
stos
xor
imul
pushf
(bad)
sub
lahf
scas
data16
pop
mov
out
cmps
sub
jle
out
cmp
add
(bad)
push
es
xor
xor
lods
inc
cmc
outs
sub
aam
aaa
mov
cmc
mov
ins
and
js
xor
and
push
dec
or
test
xor
sar
dec
out
ret
mov
sub
fsubr
loop
aam
cmp
xor
addr16
out
mov
dec
aas
mov
out
mov
pop
shl
paddusb
dec
adc
push
sahf
jmp
sbb
xchg
jecxz
pop
pop
stos
add
cs
xor
and
aam
xchg
pop
push
jne
and
pop
xor
enter
cdq
adc
in
cmp
mov
dec
xor
sub
or
lods
push
shr
mov
inc
jg
daa
pop
inc
mov
std
mov
std
popf
mov
and
out
les
jns
cmps
repz
in
pusha
dec
lods
clc
sbb
sub
rol
jmp
or
fnsave
ja
pop
ds
push
lods
add
mov
test
jne
push
jbe
jecxz
aam
mov
sahf
mov
jmp
sahf
pusha
push
jmp
dec
int3
inc
out
cmp
call
push
fsubr
pop
cdq
xor
ss
push
ins
mov
aad
push
ds
test
cmp
in
imul
xchg
ins
inc
pop
jbe
pop
icebp
cs
xor
sub
jae
movs
fld
in
dec
fist
clc
jg
jmp
pop
in
and
rcl
jmp
xor
cmp
pushf
cwde
mov
test
mov
fucomi
not
add
fcmovnbe
xchg
mov
push
adc
cwde
cmp
arpl
sbb
lods
ror
xor
or
and
jbe
mov
jmp
in
sub
imul
std
imul
mov
lds
ins
mov
stc
in
xchg
xchg
fcomp
push
pop
mov
scas
outs
jae
inc
sahf
cwde
pop
(bad)
icebp
jmp
xchg
mov
daa
js
dec
jg
aaa
cmps
sbb
mov
pop
das
cmps
sti
mov
(bad)
xlat
cmc
(bad)
pop
rcl
and
pop
(bad)
pop
les
out
outs
stos
mov
or
iret
pushf
mov
test
es
push
out
pop
imul
sub
cli
fidiv
mov
popa
fmul
jnp
jns
push
mov
neg
stc
push
sub
cli
cld
jge
cdq
add
fbld
scas
inc
in
sbb
std
adc
xchg
ins
cmc
mov
js
scas
repz
push
push
into
sub
mov
cmps
imul
add
(bad)
fmul
fiadd
jo
ret
stos
cmps
mov
push
in
out
xchg
and
movs
ins
adc
xchg
or
dec
xor
gs
stc
xchg
stos
mov
loope
pop
fldln2
(bad)
push
jns
jmp
adc
loopne
test
pop
dec
lock
outs
stos
jecxz
in
mov
xlat
push
imul
outs
pop
add
call
clc
dec
pusha
add
push
in
and
nop
cmps
into
fistp
in
push
push
rol
cmp
dec
pushf
dec
or
mov
pop
imul
ins
cld
cmp
xor
jecxz
fimul
or
xlat
ja
fild
sahf
js
cmc
mov
inc
and
outs
jne
mov
lods
mov
push
mov
popf
push
mov
mov
cmps
cmps
mov
push
mov
mov
pop
div
jb
sub
out
loop
ret
xor
push
in
call
or
sub
jmp
fild
cmp
aam
daa
adc
dec
ds
jo
cmps
xchg
lods
in
movs
imul
jle
cmp
rol
mov
into
cwde
fistp
and
jl
jl
cli
pop
xor
mov
hlt
jmp
ret
inc
stc
leave
cmp
push
jb
and
cmp
daa
dec
dec
scas
jmp
pop
fdivr
loop
sbb
fidiv
retf
mov
lahf
lds
shr
add
push
or
stc
ficom
xchg
mov
push
movs
xor
xchg
adc
pop
add
fwait
or
cmp
dec
push
fmul
jo
pop
mov
pop
jmp
mov
pusha
outs
pusha
popf
cmp
sbb
adc
push
nop
lock
mov
jmp
out
mov
sti
ins
fcomp
sahf
fxch
pusha
inc
fild
je
jmp
lods
or
enter
mov
mov
mov
push
mov
adc
into
push
mov
fiadd
jo
mov
dec
mov
lahf
jecxz
push
(bad)
mov
shl
enter
xchg
inc
push
xor
sub
dec
inc
enter
sti
maxps
div
push
inc
sbb
ss
fdiv
out
inc
shr
sar
adc
test
pop
xchg
adc
fdivrp
js
jge
cs
fwait
adc
enter
mov
dec
stos
daa
pop
push
imul
ins
int
pop
jg
mov
or
dec
fidiv
cmp
stos
cli
outs
mov
xor
jg
xor
xchg
xchg
sbb
mov
repnz
das
clc
(bad)
movs
and
mov
inc
xchg
mov
out
cld
jle
lds
js
and
int3
fbld
(bad)
cli
sub
mov
dec
adc
sbb
repz
adc
sbb
loopne
cwde
sub
xor
in
mov
fmul
pop
or
fist
jb
cld
stos
jge
shl
sti
mov
mov
stc
std
cmp
pop
out
aam
pop
mov
outs
jmp
push
(bad)
adc
lahf
sub
xlat
pop
mov
ja
daa
icebp
repz
add
pop
jle
loop
ds
icebp
sub
cmps
clc
movs
fild
jmp
leave
mov
enter
clc
in
xor
jne
outs
fcmovu
inc
(bad)
jmp
das
les
mov
inc
add
sahf
cmps
mov
lods
push
sub
fdivp
shl
xchg
mov
sti
push
mov
jns
jnp
sub
sub
xchg
repnz
(bad)
xor
sub
lds
xchg
(bad)
cs
jne
icebp
sub
xchg
imul
call
xor
jl
inc
jmp
(bad)
jo
popf
sub
lods
bound
enter
loope
and
or
or
and
mov
ficomp
inc
scas
inc
ret
jnp
addr16
ret
and
xchg
imul
lea
mov
mov
xchg
out
scas
fnstenv
push
scas
repz
sub
aaa
sub
(bad)
xchg
push
jnp
xor
nop
in
mov
mov
mov
mov
stc
or
dec
int
xor
pop
xchg
out
ja
sub
scas
mov
xor
adc
fisubr
adc
repz
mov
loopne
push
test
mov
add
mov
pop
cli
int
inc
lahf
push
ja
icebp
mov
repz
lock
test
out
xlat
push
outs
mov
mov
in
pop
and
ds
mov
add
aad
xchg
inc
xor
cmp
mov
icebp
and
inc
cmp
inc
ins
pushf
shl
leave
outs
and
pop
xchg
retf
cmp
cld
popa
mov
loop
icebp
daa
xor
sub
ror
mov
mov
sub
pop
ja
rcl
sbb
jle
mov
jl
xchg
mov
mov
cmp
shl
mov
cmps
fldenv
push
enter
mov
(bad)
mov
and
sahf
fwait
dec
xor
mov
ffree
jmp
in
ret
xor
adc
jle
push
jecxz
jmp
jg
into
sar
iret
jmp
sti
fistp
gs
or
jmp
fsub
lahf
sub
ja
mov
shl
(bad)
movs
jns
cmp
xor
mov
outs
out
outs
iret
loop
cmp
pop
cmp
aad
aas
repnz
push
test
(bad)
out
js
in
out
xchg
sar
xchg
aas
jb
sbb
pop
mov
xor
loope
mov
mov
out
or
inc
out
push
cs
(bad)
push
cmc
lea
(bad)
lock
inc
loope
repnz
nop
sahf
inc
call
or
xor
lods
das
jbe
push
sbb
push
shl
jno
push
mov
jnp
fild
xlat
sar
push
mov
fisub
inc
mov
jg
mov
push
jmp
xor
repnz
out
retf
sbb
xor
shr
fild
lods
pop
sub
jae
fxch
cwde
and
jnp
mov
mov
dec
sub
movs
push
in
dec
jl
out
push
jnp
clc
mov
xchg
inc
js
dec
jb
xor
lock
cmps
inc
pop
(bad)
ds
push
or
(bad)
cmp
fdivp
(bad)
xchg
cmp
xor
jno
xor
adc
lds
in
lea
out
das
fiadd
stos
pop
fcmove
pusha
gs
cmp
pop
xchg
add
not
lea
pop
adc
add
pusha
out
xchg
sbb
dec
push
hlt
stos
stc
push
cmc
out
adc
push
push
mov
push
or
xor
pop
pusha
jns
out
test
pop
out
jecxz
mov
cmp
pusha
retf
pusha
outs
jnp
pop
sub
int3
nop
lds
push
mov
and
retf
imul
add
mov
jns
mov
jl
and
fnstcw
movs
int3
pop
inc
fmul
les
xchg
fst
imul
sbb
repz
and
jns
scas
ja
push
in
xor
outs
jmp
out
pop
sbb
shr
mov
loop
dec
mov
mov
neg
adc
sti
repz
cmp
jp
out
ss
std
or
pushw
(bad)
fisttp
jnp
addr16
mov
jb
lods
xor
dec
inc
jl
mov
in
fidivr
inc
out
retf
jg
xor
nop
xchg
cmc
xchg
mov
bnd
dec
je
cmp
xchg
jnp
jb
shl
jmp
mov
retf
adc
ins
pop
sub
xor
ret
loope
xchg
push
in
fcomp
push
adc
pushf
and
retf
mov
pop
mov
ja
lahf
adc
sar
jle
jg
int
imul
jbe
cmp
data16
std
or
pop
inc
out
mov
cmc
mov
xor
mul
rcr
push
push
cmp
loope
xchg
jmp
pop
test
call
mov
xchg
ficomp
popa
xchg
jecxz
mov
mov
lock
or
adc
les
(bad)
jbe
mov
cmp
mov
push
lock
cmps
mov
mov
mov
jo
cmp
inc
mov
pop
xchg
mov
out
jle
xchg
pop
out
pop
push
xor
mov
xor
test
out
and
retf
xchg
popf
lds
fld
dec
mov
or
ficom
iret
inc
cld
scas
movs
jmp
ret
lock
sbb
xchg
dec
ror
sub
sbb
sbb
adc
or
sub
in
or
push
sar
pop
cmp
or
pushw
mov
loop
push
(bad)
sbb
call
(bad)
mov
mov
add
in
das
xchg
sub
outs
add
push
test
ss
fbstp
xor
(bad)
sbb
repnz
xor
jae
dec
push
ja
xor
test
clc
test
test
loopne
add
push
cmp
sbb
and
repnz
repz
add
arpl
or
mov
inc
mov
dec
fwait
push
add
adc
xchg
sub
mov
cdq
dec
sub
clc
mov
ficomp
add
jo
and
mov
lahf
adc
xchg
dec
sbb
cmp
xor
sub
dec
pusha
in
mov
mov
sbb
call
and
xchg
add
jae
add
gs
pusha
in
lahf
pusha
jg
add
shr
mov
fdiv
leave
xchg
cmp
ret
inc
xchg
and
or
jmp
mul
and
rcl
sub
ss
cmp
or
inc
or
repz
sti
loop
inc
aam
jns
push
xchg
mov
push
dec
push
xlat
int3
leave
mov
jge
sbb
ds
je
out
and
les
push
and
pop
repz
mov
jl
in
mul
push
mov
jmp
xor
jns
cli
xchg
or
ins
mov
xchg
cmp
stc
jge
mov
xchg
inc
movs
fcomip
push
ja
in
jp
pop
rcl
push
mov
add
jb
cmp
mov
movs
iret
push
lods
push
nop
out
jge
push
cmp
and
adc
cmp
mov
adc
dec
js
popa
or
xor
add
mov
push
lods
lods
inc
je
sbb
jg
mov
pop
call
and
inc
stos
fisttp
push
pushf
pop
dec
daa
movs
loope
dec
sahf
lea
adc
xchg
jp
cmp
add
pop
cld
in
mov
mov
cwde
sbb
inc
add
repnz
sub
inc
shl
push
xchg
outs
inc
or
fsub
mov
aas
cmps
out
xchg
scas
movs
rol
hlt
mov
pop
aas
jmp
cmp
adc
sbb
mov
aam
call
lds
call
inc
(bad)
push
xor
sub
retf
push
cmp
and
add
adc
call
jmp
pop
shl
cwde
and
rol
push
out
sub
aam
push
jb
sub
xor
ds
sbb
push
into
fwait
push
sti
or
adc
dec
fwait
add
or
push
dec
and
and
or
test
and
aam
les
shl
inc
(bad)
xor
cwde
fisub
push
mov
clc
xor
dec
inc
mov
xchg
sub
sahf
push
sub
jne
sub
sub
sbb
movs
icebp
sub
jle
push
adc
or
xchg
mov
jmp
and
nop
jno
adc
rol
(bad)
inc
dec
add
dec
pushf
push
jecxz
pop
inc
outs
add
adc
cmp
xchg
xor
je
in
pop
and
add
pop
jmp
mov
hlt
jnp
std
xor
jl
pop
in
push
xchg
gs
sbb
movs
inc
inc
stos
push
or
aad
int
xchg
or
inc
rcr
xchg
clc
sbb
push
test
mov
push
(bad)
gs
sub
mov
sub
loop
mov
dec
ss
shl
or
rol
dec
sbb
movs
fs
xchg
sbb
mov
in
mov
inc
mov
jmp
xor
add
sub
test
dec
call
pop
dec
(bad)
test
jle
nop
stos
pusha
loop
fmul
add
sub
sub
dec
push
mov
adc
pop
jl
sub
mov
lods
bound
in
push
popa
push
enter
loop
loopne
mov
pop
sbb
mov
(bad)
leave
loopne
leave
adc
mov
ins
test
xchg
push
int3
into
mul
retf
dec
fadd
mov
mov
movs
imul
popf
push
pop
jno
xor
call
dec
dec
xor
adc
or
adc
test
dec
add
inc
pop
leave
jbe
ins
mov
(bad)
sbb
xor
sti
lds
push
enter
push
lea
dec
imul
push
push
pop
xchg
daa
xchg
inc
pop
icebp
push
in
cmc
call
and
inc
adc
shl
mov
xchg
cmp
je
inc
mov
inc
and
adc
imul
ret
mov
shl
mov
cs
push
cli
add
mov
or
cmp
mov
lods
mov
dec
rcr
and
dec
lods
pop
aas
aam
je
mov
add
rcl
jecxz
push
aaa
jbe
sbb
push
aam
lds
xor
popa
popa
ror
pop
iret
and
into
xchg
xchg
cmp
adc
mov
sahf
pop
sbb
dec
sub
sub
inc
sar
push
push
es
adc
or
aam
shr
inc
adc
pusha
ror
adc
data16
dec
and
mov
repnz
cs
sub
dec
and
ret
out
stos
xchg
dec
movs
inc
mov
adc
mov
in
ds
repz
add
sub
mov
sbb
fadd
shr
jnp
adc
cmps
stos
sbb
test
xor
(bad)
out
int3
and
lds
push
mov
sub
sub
or
or
pop
and
movs
ds
int3
inc
out
es
pusha
mov
cwde
rcl
js
(bad)
mov
add
mov
xchg
out
movs
push
adc
push
out
pop
xchg
xchg
add
js
fist
cdq
sbb
push
jp
xchg
ret
hlt
xchg
sub
add
hlt
test
cmp
repnz
popa
pusha
jp
cli
xchg
pop
or
push
cmp
inc
inc
rol
sub
shl
jmp
adc
out
test
xor
or
repz
cmp
cmp
mov
jg
push
pusha
mov
mov
inc
movs
cmps
push
sub
and
out
bound
inc
push
jge
les
retf
aad
test
inc
xor
ins
cmp
(bad)
dec
add
pop
sub
sbb
adc
adc
pop
pop
or
xor
push
inc
sbb
push
lods
or
stos
adc
into
(bad)
and
imul
xor
or
add
push
ds
imul
jo
xor
rol
add
xchg
adc
enter
outs
sub
or
inc
and
stc
enter
pusha
mov
ret
mov
jg
(bad)
(bad)
cmp
and
push
jg
inc
sahf
fs
lock
mov
dec
mov
xchg
lahf
stc
xchg
nop
lds
pop
cmp
nop
leave
repz
fild
xor
add
lds
sub
ss
jl
cwde
xchg
sub
lods
(bad)
cmp
adc
add
adc
dec
mov
cmp
jle
int3
add
and
cwde
and
(bad)
nop
sbb
push
dec
dec
push
xor
fidiv
in
and
lahf
(bad)
(bad)
int3
adc
mov
or
mov
push
out
inc
ret
cmp
mov
mov
loop
rcl
and
rcl
add
mov
bound
(bad)
test
xchg
shr
dec
xor
test
sar
and
ins
mov
or
inc
xor
lods
or
sub
sub
sub
xchg
and
dec
inc
pop
dec
mov
dec
push
xchg
mov
dec
call
add
adc
test
push
fwait
adc
adc
outs
mov
loope
cmps
and
pop
xor
sub
mov
pushf
mov
mov
pop
cmps
mov
jns
sub
cmps
gs
or
in
repnz
and
or
sbb
jb
je
dec
lock
xor
ds
pop
js
ins
test
jne
scas
xchg
or
fxch
repz
push
call
sbb
sahf
and
pop
inc
dec
and
and
or
jbe
hlt
mov
or
or
or
mov
(bad)
ds
and
das
sahf
mov
(bad)
cdq
sbb
push
push
push
bound
xor
xor
imul
int
in
xchg
mov
mov
cmp
sahf
add
add
sub
stos
mov
(bad)
ds
and
fidivr
mov
mov
test
jae
inc
inc
and
pop
xor
mov
ins
je
cmp
mov
adc
dec
add
lea
push
push
leave
and
inc
push
pop
pop
add
movs
jmp
add
add
xchg
cmc
cs
out
outs
neg
add
inc
and
mov
jmp
inc
inc
stos
stos
rol
leave
(bad)
sahf
add
bound
pop
shl
xchg
shr
jge
and
(bad)
jle
or
and
test
jae
jg
ret
dec
cli
xor
xor
int3
dec
mov
or
inc
sbb
mov
cmp
push
or
dec
jbe
ss
aad
gs
pop
inc
pop
or
mov
sbb
inc
cmps
stos
pop
push
sub
icebp
(bad)
mov
or
imul
xor
jns
pop
adc
hlt
in
fcomp
push
fcomi
ss
popa
dec
adc
dec
mov
mov
push
cmp
ret
idiv
pusha
xor
jg
daa
arpl
test
pop
arpl
test
pop
add
js
push
rcr
mov
push
ss
neg
xor
lds
xchg
or
inc
sbb
add
push
add
rol
cwde
and
cmps
mov
inc
inc
inc
adc
inc
fidiv
arpl
cmp
dec
xchg
enter
xor
xchg
dec
icebp
add
sub
stos
not
leave
repnz
cs
fisubr
sub
cmp
push
push
xchg
mov
push
stc
adc
dec
mov
sub
push
or
cmp
gs
pusha
adc
and
adc
jno
sub
jns
in
jb
repz
sbb
je
int3
inc
pop
push
aam
(bad)
jmp
jnp
mov
shl
mov
push
dec
inc
ret
push
cs
mov
es
adc
pop
ret
and
shr
sub
pop
and
push
adc
aas
jmp
icebp
inc
adc
scas
lea
adc
mov
(bad)
pop
add
sbb
je
pop
push
pusha
dec
std
jp
in
(bad)
shl
adc
inc
dec
mov
pop
enter
sbb
pusha
(bad)
pop
xor
int3
mov
js
fsub
sbb
mov
mov
inc
sbb
sbb
fs
cli
je
adc
adc
adc
and
pop
out
xor
xor
cmp
idiv
xchg
adc
adc
xchg
test
sub
add
and
ins
jns
hlt
ss
inc
adc
movs
cmps
xor
xor
and
xchg
rcl
or
aaa
pusha
cmps
retf
retf
cdq
daa
or
push
inc
and
clc
dec
nop
fwait
mov
push
into
(bad)
sbb
cld
cmp
nop
dec
test
add
mov
mov
and
lahf
(bad)
mov
push
das
test
xchg
inc
sub
movs
clc
in
jnp
inc
inc
adc
test
adc
add
xor
pop
in
bound
lods
push
call
xchg
pusha
push
pop
in
jmp
xchg
dec
and
push
cmp
(bad)
xchg
repnz
sub
inc
(bad)
test
or
and
mov
adc
aam
xchg
mov
add
jp
retf
cmp
adc
mov
jle
nop
retf
adc
sbb
push
pusha
inc
popf
xor
movs
sbb
pop
mov
adc
push
pop
in
jge
dec
cmp
xchg
cmp
adc
and
sar
repnz
mov
mov
lods
pusha
in
mov
push
push
add
add
lock
loop
push
adc
dec
inc
mov
aam
push
(bad)
jg
js
jg
adc
mov
add
call
lds
cld
jge
(bad)
shl
jnp
pop
ret
mov
imul
outs
sub
cmp
xchg
sbb
inc
(bad)
adc
dec
or
push
test
push
push
ins
mov
adc
or
mov
repz
xor
das
mov
or
mov
test
loopne
jb
xor
xchg
adc
ror
shr
or
push
sbb
es
mov
lock
push
cmps
push
scas
cmp
xor
aad
inc
out
fstp
add
shl
sbb
or
jns
popa
loop
stc
in
or
add
mov
and
lahf
icebp
imul
ja
sub
nop
sbb
scas
mov
jl
dec
inc
xor
(bad)
sub
fist
push
into
push
rol
xchg
idiv
and
mov
(bad)
and
sub
stos
cmp
(bad)
mov
adc
sbb
xor
xor
sbb
pusha
sar
or
imul
xchg
lods
(bad)
mov
int
ins
loope
xchg
int3
xor
and
dec
cmp
pop
sub
scas
es
sbb
or
cmp
inc
pop
jecxz
cmp
jno
out
adc
jnp
ret
jp
fdivr
popf
js
xchg
aad
sub
and
and
psubw
cmps
mov
jb
pop
jmp
push
in
stos
dec
lods
icebp
xchg
out
dec
aad
fdiv
or
sub
retf
dec
stc
pop
adc
ds
adc
sub
into
int3
test
jne
repz
mov
inc
xor
push
sub
add
or
shl
and
movs
pop
call
mov
(bad)
jecxz
out
jl
sti
add
repz
jb
sti
call
rcl
or
mov
(bad)
dec
outs
and
mov
in
mov
mov
addr16
test
jb
mov
shl
mov
or
fsub
cmp
pusha
sar
pop
test
das
out
das
fld
push
stos
or
mov
ror
or
lea
xchg
arpl
(bad)
sub
add
mov
sbb
jecxz
fistp
sbb
cmp
jns
adc
mov
fldenv
pop
into
mov
icebp
int3
and
mov
xor
xchg
sbb
push
dec
jae
adc
adc
loopne
outs
inc
test
pop
cmps
cmc
sub
push
call
sbb
cmp
mov
cmp
mov
dec
jne
sbb
mov
xor
sub
daa
jae
lods
cmp
les
lods
je
xchg
jmp
jo
xor
inc
mov
movs
test
push
sti
push
icebp
popa
sbb
jp
or
test
sub
icebp
xor
ret
or
cli
add
mov
cdq
mov
mov
pop
or
test
inc
add
pop
cli
sbb
ds
cmp
test
push
inc
or
and
jg
jle
jmp
sub
cmp
hlt
dec
jmp
xchg
sub
xchg
dec
rcl
(bad)
pop
pushf
sbb
add
ss
push
icebp
scas
mov
push
push
pop
sbb
jae
sbb
jecxz
cdq
mov
xchg
cdq
nop
sbb
sbb
imul
push
and
sub
mov
das
das
jnp
test
int
add
cld
mov
inc
jae
push
and
lahf
sub
mov
in
or
(bad)
leave
xchg
add
mov
inc
jge
stos
(bad)
in
lock
jae
push
fwait
push
arpl
jno
daa
jo
stos
inc
scas
and
push
jmp
cwde
loopne
cmp
adc
loop
sub
cwde
ins
xchg
mov
adc
sbb
sar
jp
imul
mov
jmp
dec
add
or
jle
call
mov
loop
add
xchg
stos
imul
int3
jmp
popa
xchg
in
scas
inc
js
push
inc
xchg
je
xchg
call
test
inc
ja
dec
pop
mov
ins
movs
sbb
and
dec
mov
iret
cmc
dec
addr16
xchg
push
mov
cli
push
sbb
sbb
(bad)
call
jb
xor
push
xchg
and
cmp
and
mov
clc
movs
add
dec
push
jmp
not
sar
xchg
(bad)
call
enter
sbb
jbe
ins
int3
adc
and
pop
pop
inc
pushf
xchg
int3
inc
sbb
(bad)
or
retf
imul
mov
sub
xchg
dec
jmp
inc
sub
and
shr
adc
push
inc
(bad)
add
dec
mov
add
cmp
movs
mov
jne
mov
bound
sbb
push
or
fdiv
push
adc
imul
fs
retf
dec
jmp
cmp
and
add
mov
imul
lods
add
inc
fsubr
sub
jg
mov
pop
mov
les
and
xchg
dec
gs
jae
fwait
stc
movs
sub
dec
lea
jno
sbb
lahf
and
dec
jnp
add
push
inc
fldenv
loope
sbb
das
call
mov
or
adc
push
or
cld
xchg
leave
aaa
cs
mov
ss
add
jns
sub
jecxz
xchg
hlt
xor
inc
add
jae
mov
pop
push
dec
add
cs
mov
inc
mov
xor
ficom
dec
ja
sbb
pop
sub
inc
cld
lods
pop
sbb
test
xor
jb
jge
ror
sbb
jl
xchg
jnp
mov
arpl
and
xor
out
xchg
in
scas
cdq
add
jns
jnp
cmp
jns
xor
push
inc
mov
jl
add
mov
inc
pop
mov
push
js
push
pop
jecxz
hlt
in
daa
enter
aam
imul
ror
or
jb
xchg
(bad)
iret
or
pop
mov
bound
in
sub
(bad)
dec
xchg
dec
fadd
push
adc
fiadd
ret
mov
leave
sbb
scas
inc
out
adc
jns
fstp
cwde
fisttp
xchg
ins
push
retf
sahf
inc
cmp
jge
cdq
adc
gs
dec
pop
sub
mov
ror
std
data16
xor
(bad)
(bad)
jno
ror
shl
sbb
rcr
sub
mov
xor
pusha
int3
in
mov
sub
sbb
movsx
pop
mov
xchg
cmp
mov
sbb
mov
leave
mov
push
or
jmp
adc
iret
xchg
into
cmp
rcl
mov
inc
xchg
adc
sbb
gs
mov
int3
(bad)
(bad)
int
mov
ret
ror
and
push
pop
test
inc
lea
call
das
push
sub
push
cmp
test
and
adc
mov
push
out
loope
inc
fiadd
fnsave
push
adc
push
retf
add
int3
adc
and
jl
inc
in
jle
out
call
cli
aaa
loopne
mov
addr16
repz
xor
mov
inc
lods
test
das
lahf
sub
jmp
(bad)
mov
inc
gs
pop
out
mov
int3
sub
test
mov
fist
jbe
ror
stc
dec
ret
hlt
fiadd
push
mov
sbb
cmps
scas
int3
pop
sar
inc
or
mov
mov
scas
pushf
pop
cdq
shr
aaa
cmp
dec
out
rcl
cwde
leave
dec
inc
xchg
xchg
fdiv
cdq
dec
dec
mov
test
xchg
push
sbb
mov
inc
xchg
dec
jmp
xor
aad
and
stc
nop
sub
imul
add
in
mov
cmps
adc
jb
xor
imul
mov
lea
push
mov
pop
and
call
lea
dec
inc
sub
cwde
hlt
push
popf
mov
and
adc
sbb
scas
shr
sbb
cmps
cmps
and
fisttp
inc
sub
(bad)
icebp
push
mov
scas
shr
hlt
leave
rol
adc
dec
ret
xor
mov
fwait
mov
dec
cmp
dec
mov
nop
push
mov
add
clc
(bad)
bound
adc
inc
xchg
cmp
jg
mov
sbb
push
scas
jb
lods
or
inc
enter
and
fisubr
lahf
inc
xlat
mov
push
jae
loopne
out
scas
mov
sub
icebp
cmps
rol
fcmovb
mov
jns
es
and
sahf
push
cmp
aam
xlat
xchg
adc
and
xor
xor
loope
cmp
iret
fist
(bad)
fmul
pop
out
mov
jecxz
data16
xchg
xor
gs
fidivr
nop
or
in
mov
xor
add
stos
jmp
fs
mov
popa
retf
push
mov
int3
pusha
popa
xor
call
pop
xchg
push
inc
inc
cdq
fisttp
cmc
sahf
ror
jb
sub
bswap
xor
cli
xchg
fs
fist
mov
jmp
loopne
enter
loope
push
pusha
sbb
xor
arpl
mov
and
jp
imul
dec
sbb
pop
or
xor
sbb
or
scas
sti
movs
lock
pop
outs
jbe
cwde
mov
sbb
adc
cs
sbb
xchg
jmp
add
push
push
mov
mov
ins
rol
mov
bound
add
mov
inc
push
js
push
aaa
inc
pushf
scas
loopne
int3
pop
xchg
repnz
int
ins
daa
jae
cmp
ss
mov
(bad)
stc
shl
xchg
fild
fisttp
pop
dec
xor
in
sbb
mov
ins
adc
adc
(bad)
fldenv
je
sub
jo
adc
cmp
repnz
sbb
popf
ss
xor
aaa
pop
inc
and
mov
ret
inc
mov
fcom
or
push
mov
imul
cli
retf
xor
cld
and
imul
xlat
je
dec
dec
push
mov
dec
push
dec
lods
mov
push
mov
mov
(bad)
or
xchg
or
test
xchg
out
repnz
xor
push
mov
lods
in
imul
jo
not
fs
xchg
mov
push
dec
call
fcomp
cwde
or
mov
adc
fist
jnp
das
retf
mov
loopne
or
aad
pop
and
popa
test
adc
(bad)
aam
imul
sbb
xor
(bad)
jb
sub
sbb
push
and
fmulp
dec
mov
xor
icebp
daa
dec
gs
inc
test
mov
movs
inc
sub
lds
pop
iret
push
xor
adc
mov
mov
add
mov
(bad)
xlat
sbb
not
and
scas
stos
or
mov
test
call
std
loopne
xchg
shl
dec
xchg
mov
fist
out
mov
add
dec
pop
add
cmps
xchg
rol
mul
loopne
xor
sub
out
je
pop
jg
out
addr16
mov
adc
test
mov
pushf
ja
sub
sbb
into
mov
dec
call
leave
xor
adc
js
cmps
imul
jl
jg
xchg
shl
add
inc
lock
cmp
(bad)
shr
sbb
aad
(bad)
aad
xor
bound
adc
cmps
aam
loopne
test
leave
dec
icebp
cmp
sub
(bad)
xchg
xchg
sbb
test
fnstcw
push
push
scas
gs
xchg
ss
jp
pop
(bad)
xchg
movs
aad
xchg
or
dec
hlt
(bad)
int
pop
repnz
sahf
push
xchg
xchg
mov
dec
cmovp
call
xor
xor
fisubr
(bad)
cs
pusha
scas
xor
xor
mov
jge
jmp
int3
sub
out
in
das
jmp
scas
sub
pop
push
xchg
clc
ss
pusha
hlt
movs
stc
pop
cmp
pop
jmp
mov
xor
popf
retf
add
aam
loop
mov
test
movs
jno
push
cmpps
imul
push
scas
xchg
or
ins
inc
movs
cmp
adc
dec
sub
lods
add
jno
fsubr
cwde
or
in
es
adc
das
nop
push
xchg
in
ins
xchg
sub
dec
pop
les
adc
sub
test
xlat
mov
ret
xchg
cmp
jp
jbe
add
add
adc
sub
pop
push
int
dec
sbb
and
(bad)
stos
mov
dec
xchg
in
cwde
fwait
aam
addr16
mov
jg
test
and
sub
sahf
stc
fsub
xor
and
ds
pop
enter
outs
jecxz
sbb
xchg
in
dec
or
push
jns
(bad)
out
jp
div
call
mov
mov
loopne
cmc
pop
cmp
not
push
ret
int
rcr
push
mov
cs
(bad)
cmc
ss
sbb
daa
mov
lock
jmp
movs
ror
or
push
push
inc
mov
push
aaa
hlt
arpl
and
cmp
(bad)
das
sbb
mov
cmps
fld
inc
mov
jg
aam
push
(bad)
mov
mov
aaa
cdq
jl
test
ins
(bad)
in
neg
pop
ficomp
push
pop
mov
out
pop
dec
imul
and
mov
mov
(bad)
mov
lahf
sbb
jmp
and
jp
push
leave
mov
push
inc
aas
rol
out
dec
xchg
and
retf
jo
xchg
repnz
ds
pop
imul
loope
push
addr16
dec
adc
je
pop
sub
sbb
push
inc
sub
mov
arpl
cmps
shr
pop
dec
leave
fbld
sub
mov
push
das
in
mov
addr16
push
cmp
dec
push
or
adc
pop
and
mov
inc
xor
mov
adc
mov
jbe
and
or
inc
lods
ret
push
(bad)
push
mov
pushf
xor
adc
out
adc
imul
pushf
push
js
jnp
pushf
daa
ja
loop
jnp
inc
adc
add
dec
je
sub
fsubp
fcmovbe
push
loopne
inc
push
stos
adc
clc
scas
mov
jmp
xor
std
mov
mov
or
or
pop
repz
fs
add
mov
rcr
pop
push
mov
push
outs
add
nop
sub
xchg
mov
ins
push
lahf
or
pushf
mov
jle
sar
pop
es
jnp
pop
in
repz
sbb
jne
dec
pop
sti
jno
ret
or
rcr
ffreep
test
mov
in
ins
mov
xchg
mov
imul
push
add
cwde
pusha
push
movs
fdiv
adc
rcr
mov
or
out
hlt
cmc
push
cmp
aam
sahf
cmp
xchg
push
mov
sub
xchg
fwait
and
adc
js
in
fwait
mov
ss
inc
movs
push
dec
subps
adc
mov
lea
mov
fst
call
mov
js
sbb
xor
sub
jb
pop
mov
mov
iret
aam
pop
rol
cmp
xchg
push
sub
call
out
rol
cmp
dec
dec
jmp
inc
test
push
mov
mov
push
and
jl
push
add
addr16
(bad)
and
push
jae
mov
pop
popf
data16
fistp
dec
cmp
cdq
mov
xor
or
cmc
mov
xchg
les
outs
daa
leave
or
mov
das
pop
js
cmps
push
cmp
in
push
jle
es
adc
js
(bad)
in
mov
clc
jo
scas
(bad)
adc
sbb
scas
sbb
scas
imul
call
add
std
or
or
inc
shl
mov
mov
(bad)
pop
xor
pop
adc
mov
outs
adc
popa
add
push
push
jmp
jns
test
fsub
int
sub
retf
sahf
mov
add
push
cmps
bound
xchg
or
rdtsc
enter
xchg
add
test
out
js
inc
ficom
(bad)
fnstcw
dec
mov
and
mov
or
int3
and
sub
dec
pop
and
mov
fwait
lea
cmp
mov
dec
cmp
mov
nop
mov
push
outs
popf
call
rcl
lods
inc
xor
jecxz
jle
mov
cld
dec
outs
mov
iret
jg
lock
aam
dec
outs
pop
xchg
syscall
pop
sub
(bad)
jmp
xlat
hlt
or
mov
push
cld
sti
xor
in
out
iret
ret
xchg
adc
jp
push
mov
cmps
lea
inc
or
cld
into
jb
mov
imul
cld
loop
(bad)
shr
cmp
aam
(bad)
sbb
stos
out
mov
lahf
push
xor
push
mov
push
push
lahf
pop
dec
jbe
push
cli
rcr
cwde
out
cli
mov
adc
test
out
scas
cmp
or
or
test
retf
cwde
shl
clc
inc
imul
sbb
jg
push
gs
mov
test
and
outs
or
inc
mov
bound
mov
(bad)
popa
jo
leave
popf
into
xchg
pop
inc
adc
cs
push
jne
call
mov
cmp
mov
sub
in
stos
or
xchg
stos
push
scas
aas
push
xchg
mov
mov
aam
in
test
jl
mov
mov
aam
adc
ss
or
and
mul
jne
add
hlt
jp
push
jmp
inc
xchg
std
loope
lods
fcmovbe
ja
neg
sub
iret
xchg
push
movs
mov
ja
bound
je
mov
shl
mov
xlat
xchg
pop
add
mov
cwde
dec
inc
jle
into
fwait
(bad)
aam
jns
mov
add
in
fucomi
mov
sbb
cmp
and
shr
mov
arpl
mov
nop
xchg
inc
outs
std
loop
ja
push
mov
pop
xor
leave
out
cli
inc
mov
lods
shl
scas
xchg
cs
ins
pop
lahf
mov
mov
cmp
jmp
xchg
sub
sbb
jnp
push
dec
adc
dec
shl
sbb
or
rcr
test
add
adc
inc
cs
jnp
mov
ja
cmp
aam
rcl
push
push
data16
pop
bswap
scas
mov
jb
xlat
call
movs
(bad)
and
ret
aaa
xor
imul
inc
dec
dec
cdq
aad
(bad)
in
out
stos
jmp
scas
in
sub
imul
pop
adc
jno
push
dec
xchg
ret
neg
mov
fisubr
out
aaa
push
add
xchg
sbb
pop
loop
sar
mov
xchg
xor
mov
int3
fdiv
das
adc
lods
inc
icebp
jb
(bad)
aam
stc
mov
add
cmp
imul
xor
push
pop
pop
mov
add
mov
into
in
mov
dec
(bad)
inc
inc
push
mov
dec
int
fist
jo
je
jns
push
outs
sbb
xor
aad
pop
call
sbb
sbb
adc
mov
pop
fcmovne
cmp
mov
scas
jecxz
or
aaa
adc
pop
test
or
or
fsubr
jne
data16
pop
mov
sub
or
retf
mov
adc
in
cmp
push
xor
and
mov
pop
addr16
js
in
mov
movs
mov
lds
test
ficomp
popf
lods
daa
or
imul
test
sub
jmp
or
push
and
mov
pop
cmp
jmp
pop
cmp
dec
dec
sbb
sbb
lds
adc
jno
aas
push
loopne
jge
mov
jge
sbb
xchg
mov
mov
mov
jl
les
xchg
sbb
cmp
xor
loope
push
add
adc
mov
pop
add
cmp
mov
cmp
and
leave
loopne
mov
in
outs
xchg
push
cmp
xchg
push
jle
rol
or
inc
or
dec
mov
push
jno
cs
repnz
aad
imul
cmp
pop
sbb
push
movs
fsub
(bad)
sub
push
lea
call
sub
jae
mov
jb
mov
repz
inc
fdiv
fcom
lods
or
fistp
xchg
sbb
pop
fsubr
sub
into
add
ja
nop
iret
ret
jmp
idiv
xchg
dec
jb
jne
inc
cmp
loop
sti
inc
push
fldenv
loopne
(bad)
cmp
and
jne
test
push
pusha
mov
ja
aad
pop
adc
sub
hlt
cs
lahf
jmp
test
les
mov
mov
sub
xchg
dec
add
xor
xchg
lock
(bad)
xor
imul
gs
xchg
fwait
bound
and
dec
cmps
loop
and
jne
mov
inc
repz
mov
std
xchg
popa
push
stos
(bad)
icebp
jp
add
outs
test
jnp
jae
arpl
and
inc
addr16
idiv
cmp
retf
call
jmp
sub
mov
es
add
mov
(bad)
clc
movs
and
mov
pusha
call
mov
sbb
cmps
or
shl
in
cmp
push
or
push
cmp
jecxz
or
lea
out
xor
cwde
loope
push
mov
fdivr
xchg
pop
or
pop
hlt
add
jecxz
push
pop
ds
push
mov
pop
adc
xchg
out
add
mov
cwde
pop
add
repnz
add
jns
rol
push
pop
inc
or
sub
loopne
push
packuswb
xchg
bsr
dec
inc
imul
test
in
aad
retf
mov
cwde
or
aad
jnp
enter
into
push
punpcklwd
pop
cmc
inc
mov
pop
xor
sub
les
fidiv
or
daa
fistp
es
outs
lds
imul
sub
mov
jns
and
in
add
nop
fwait
idiv
mov
jnp
jnp
out
les
push
leave
jno
ss
mov
fisubr
jg
adc
iret
mov
mov
sbb
fcomp
mov
push
push
inc
(bad)
mov
dec
ret
sbb
stc
or
in
in
dec
ds
jne
scas
aas
jecxz
repnz
and
retf
mov
xchg
xlat
adc
ja
test
push
and
inc
inc
nop
push
inc
sbb
mov
jo
mov
push
imul
inc
jns
xchg
jl
add
sub
out
push
int
mov
call
iret
fsub
or
outs
xchg
xchg
cmp
pop
add
lods
mov
idiv
push
mov
jmp
repnz
cli
in
inc
stc
dec
(bad)
lods
jecxz
stc
inc
adc
add
(bad)
pop
cmc
sbb
cmp
(bad)
lods
lds
sub
test
sub
sub
sub
call
jae
xchg
lea
into
ins
mov
data16
ret
sub
or
out
jmp
push
jp
into
xlat
lea
mov
push
mov
add
js
mov
cmp
js
icebp
add
fst
pop
jmp
shl
sbb
imul
loope
icebp
in
or
cmps
sbb
or
(bad)
mov
cli
add
out
inc
cld
sub
pushf
jecxz
dec
jo
pop
das
in
inc
cmp
and
fsub
xchg
sbb
outs
daa
jb
mov
ins
mov
adc
std
int3
(bad)
pop
call
(bad)
sub
mov
jle
inc
mov
out
jmp
inc
mov
cdq
mov
push
adc
ret
adc
out
add
fistp
shr
push
fist
retf
rol
sbb
inc
jmp
add
pop
adc
dec
rcl
das
retf
(bad)
mov
out
nop
arpl
cs
sbb
push
sbb
shl
jo
inc
shr
iret
inc
les
adc
div
call
pop
or
js
cmp
sbb
fistp
sbb
ins
and
or
call
or
or
xchg
dec
mov
daa
mov
or
call
mov
aam
mov
and
enter
(bad)
cmp
inc
sub
add
dec
mov
or
test
in
mov
sbb
rcr
mov
dec
cmp
sahf
sbb
jmp
jnp
test
push
lahf
push
adc
cld
sub
add
mov
std
xchg
pop
dec
dec
xchg
outs
stos
inc
xchg
ret
ja
adc
or
cmp
cld
jae
in
and
xor
icebp
sub
push
mov
hlt
add
jbe
pop
push
fsubr
ret
push
add
jmp
loope
xor
in
jno
test
or
inc
sub
adc
out
test
test
loop
sub
repz
push
cwde
cli
fucom
loope
and
dec
push
fidivr
jns
mov
nop
add
dec
lods
sbb
pop
int
call
mov
push
sub
push
ins
or
pop
rcr
leave
ds
inc
clc
mov
pop
jbe
(bad)
dec
pop
ror
fs
cwde
adc
fistp
(bad)
jp
sbb
test
scas
movs
icebp
icebp
popa
out
ret
mov
xor
push
cmp
sub
ja
xor
xchg
int
fld
jp
pop
out
and
pushf
mov
aam
aas
addr16
mov
or
das
cmp
pop
cdq
mov
push
push
cmp
dec
dec
add
cdq
mov
jmp
int
mov
inc
add
xor
adc
adc
push
dec
mov
call
scas
xchg
icebp
inc
fs
imul
push
sbb
clc
jno
js
cmps
sahf
lods
pop
into
mov
or
(bad)
pushf
sbb
jno
mov
mov
xlat
popf
add
mov
mov
add
test
push
imul
and
test
div
and
lahf
ret
cdq
das
sahf
or
rol
jmp
mov
sub
push
sub
fst
fs
fwait
icebp
push
fist
xor
xchg
aad
cmp
fwait
and
jne
mov
stc
dec
add
test
aad
xchg
gs
adc
addr16
retf
and
bound
mov
rol
cmps
jmp
jns
add
(bad)
cli
loope
clc
jl
div
lds
jo
mov
ins
sub
jecxz
lods
and
sbb
and
jmp
pop
das
retf
dec
pop
pushf
mov
test
xchg
xchg
scas
sub
(bad)
sbb
add
repz
out
mov
push
leave
daa
xor
lds
push
pop
rcr
push
(bad)
out
outs
out
dec
les
test
fsub
idiv
adc
outs
mov
js
jo
mov
mov
call
les
aam
sub
push
movs
or
outs
bound
mov
add
push
es
push
imul
xor
mov
fisub
inc
out
dec
gs
neg
cmps
imul
sbb
stos
xchg
adc
and
sahf
cmp
in
or
push
lea
cmc
shl
fcmovb
cdq
jle
sahf
inc
clc
outs
(bad)
dec
pop
loopne
cmc
test
jge
mov
jmp
je
fadd
icebp
aam
sbb
mov
popf
cmps
sbb
adc
out
iret
mov
jmp
dec
ds
xchg
fwait
push
pop
jbe
aas
xor
imul
push
cld
jl
jbe
popf
test
xor
int3
cmp
arpl
call
cmp
lods
in
mov
adc
xor
ror
out
cmp
mov
sub
mov
push
jl
mov
jmp
add
stos
sub
mov
mov
data16
and
push
push
jmp
mov
sbb
retf
fidiv
mov
stc
mov
mov
cmps
cmp
push
frstor
dec
mov
jo
jmp
xchg
mov
mov
dec
out
icebp
pop
adc
sub
cmps
jno
test
in
push
das
pop
add
std
lahf
pushf
cmp
jl
cmps
or
jne
(bad)
and
retf
or
aas
shr
(bad)
mov
jae
lahf
mov
ja
mov
call
pushf
sbb
std
add
push
clc
hlt
(bad)
dec
lea
inc
mov
(bad)
cmp
push
mov
mov
mov
inc
push
lods
test
stc
lods
test
call
fdiv
not
jb
push
sbb
xlat
sbb
add
xor
jo
and
lods
jecxz
cmp
mov
scas
and
retf
int
pop
add
dec
or
adc
cmp
fucom
xchg
lods
sub
cwde
cmc
add
je
dec
cmp
or
enter
ins
fnsave
sti
aaa
scas
adc
sbb
arpl
call
in
iret
cwde
push
dec
shl
sbb
popf
mov
fsubr
lods
std
sbb
or
das
or
inc
in
into
js
sbb
push
sbb
push
std
ja
sbb
and
retf
push
dec
test
jecxz
ins
call
fisub
sti
add
dec
or
sbb
iret
fldenv
inc
in
pop
sub
xchg
cdq
or
cmps
xor
xchg
push
loopne
sub
push
das
push
jns
and
aad
xchg
pop
mov
dec
xlat
popa
mov
push
cli
dec
mov
push
push
rol
retf
popf
inc
jp
je
stos
inc
(bad)
sub
xchg
xlat
in
add
add
pop
pop
outs
in
jo
cmps
dec
mov
stos
ja
pop
mov
jg
or
cdq
loope
and
jno
add
adc
aas
pop
movs
or
and
mov
jne
int
das
dec
dec
mov
mov
sti
dec
loope
push
in
dec
iret
xchg
(bad)
push
scas
jmp
add
push
add
xor
sub
dec
es
xchg
call
pop
ja
fs
dec
ror
pop
ret
mov
int3
out
jbe
loop
popf
pop
push
adc
inc
or
mov
fstp
inc
fild
bound
push
xchg
movs
adc
fild
nop
shl
push
mov
dec
stos
jbe
rcl
or
daa
stc
cdq
mov
mov
add
cwde
pop
jb
nop
mov
ror
iret
popf
add
adc
jle
and
sar
push
div
fcom
mov
imul
jno
fwait
dec
fldcw
cli
mov
std
arpl
and
stc
enter
repnz
movs
xor
xchg
mov
push
xchg
aam
sbb
mov
fist
jmp
pop
jnp
fsub
dec
aam
bswap
sbb
(bad)
fdivr
lock
test
in
jge
ins
lds
mov
mov
or
shl
sub
jle
call
dec
inc
add
push
sub
mov
or
sub
arpl
iret
ror
outs
in
arpl
inc
mov
mov
dec
clc
rcl
mov
ret
xlat
push
mov
inc
jmp
inc
sub
mov
or
imul
jmp
push
xchg
movs
mov
fs
jns
cli
sar
jmp
dec
cmp
jns
jle
bound
(bad)
into
dec
inc
mov
mov
or
fs
fmul
imul
iret
adc
mov
mov
jne
jmp
pop
sti
fwait
jne
fwait
mov
daa
mov
push
push
xchg
out
sti
push
fistp
ret
inc
inc
push
scas
cmc
push
cs
call
loopne
cmp
push
das
sub
ins
fcom
push
arpl
push
neg
dec
mov
sti
imul
push
adc
es
pop
shr
out
sbb
xchg
lock
mov
iret
popf
ds
push
and
cmps
movs
push
ss
in
adc
lods
loop
inc
mov
fnstsw
or
jae
jbe
jmp
jnp
push
pop
imul
jae
pop
cmps
sub
jl
sub
and
lods
jne
mov
mov
sbb
and
inc
xchg
movs
push
mov
popa
aad
cmp
shr
inc
xchg
ja
xor
call
add
mov
mov
inc
outs
pop
fld
mov
int3
fstp
enter
pop
(bad)
idiv
pop
ins
xor
setle
pop
add
addr16
or
adc
test
pop
mov
aaa
jle
imul
clc
lock
jnp
cs
pop
fwait
mov
lods
repnz
inc
push
stos
mov
add
pop
aam
xor
cmp
xchg
cmp
cdq
dec
dec
pushf
sbb
cmp
adc
and
sub
cmp
sbb
cmp
imul
addr16
dec
inc
call
mov
push
pushf
js
jbe
aas
xchg
scas
pop
push
cmp
adc
in
push
mov
or
into
leave
jb
dec
int
(bad)
fcmove
test
lds
lahf
mov
retf
add
retf
sub
push
mov
or
adc
and
pminub
in
push
sub
aaa
clc
nop
ret
ror
call
mov
xchg
xchg
jp
call
or
pop
and
mov
push
pop
movs
mov
out
jo
aam
inc
lock
arpl
aaa
inc
enter
pop
adc
rcr
jg
dec
mov
fwait
sub
dec
push
or
mov
retf
(bad)
fadd
pop
cmp
adc
fs
es
push
test
push
mov
aaa
xchg
sub
mov
and
(bad)
push
jecxz
inc
fld
or
add
out
adc
sub
movs
fwait
or
sbb
mov
daa
xchg
rcl
nop
das
into
jmp
leave
mov
xor
enter
fwait
push
sahf
and
cmp
push
js
add
mov
arpl
mov
dec
jmp
add
xchg
push
xchg
fwait
sub
pop
out
in
mov
mov
mov
ret
ja
add
rcl
push
jae
ds
int3
or
mov
fidivr
add
dec
and
adc
sub
sbb
mov
faddp
cmp
sub
ffree
sbb
js
call
and
jbe
jg
push
sbb
mov
js
lea
xor
mov
or
retf
mov
and
lods
jecxz
ret
pusha
pop
or
xor
mov
icebp
mov
call
push
js
data16
outs
dec
add
sar
pusha
or
add
mov
mov
test
push
cmp
out
dec
out
enter
ficom
dec
adc
in
pop
and
sub
movs
iret
retf
std
adc
sbb
arpl
dec
mov
and
(bad)
ror
push
ins
outs
dec
das
out
jnp
lods
cli
jae
sbb
iret
push
push
sbb
add
add
pushf
or
stos
xor
addr16
add
adc
pcmpgtb
push
cs
mov
dec
and
pop
jnp
lock
rol
int
mov
or
fs
mov
xchg
out
add
and
xchg
fnstsw
ins
sub
add
dec
and
neg
fldenv
std
in
icebp
pusha
add
fst
dec
jmp
imul
pop
inc
push
sahf
in
and
push
pop
mov
scas
lods
popf
push
mov
or
retf
bound
sbb
das
cwde
add
pushf
loopne
pop
ss
mov
push
sbb
mov
mov
lds
cld
dec
xchg
repnz
into
cmp
dec
test
mov
nop
fst
leave
xchg
cmp
ret
jmp
dec
pushf
stos
fldcw
outs
fadd
or
lock
pop
jo
loope
mov
lods
(bad)
and
cmp
outs
jl
or
outs
mov
aam
sub
fld
cs
ja
ret
adc
or
pop
mov
mov
je
repnz
out
add
jae
adc
icebp
inc
cli
sub
dec
adc
test
cs
cmp
adc
inc
mov
cmp
loope
xor
stos
inc
ja
cdq
push
shl
cmps
and
inc
ins
adc
pop
das
pop
jo
fild
sbb
and
shl
sbb
rol
inc
dec
jp
add
cmp
das
jp
add
ror
inc
mov
mov
sbb
fnstcw
cld
dec
xor
addr16
jae
data16
fst
sub
and
jl
mov
inc
push
aad
in
repz
mov
loop
cli
scas
hlt
push
fidivr
sbb
neg
lock
or
sub
or
lea
sbb
or
daa
xchg
movs
push
xor
jmp
addr16
hlt
mov
jne
sub
adc
push
stos
(bad)
sbb
add
mov
inc
rol
arpl
mov
mov
jmp
ins
and
(bad)
out
mov
mov
mov
cli
stc
movs
and
sub
cmp
(bad)
mov
cwde
lea
add
mov
sbb
or
mov
out
cs
inc
pop
in
sbb
call
mov
loopne
add
mov
dec
nop
ins
outs
mov
je
push
test
add
jns
push
loopne
add
fimul
ror
dec
scas
or
es
or
push
mov
fdiv
push
pop
inc
mov
(bad)
xor
sub
ror
sbb
or
adc
xor
push
shl
(bad)
jmp
xchg
push
into
inc
sbb
pusha
out
inc
nop
dec
sahf
adc
add
add
mov
js
push
mov
add
pop
mov
test
aam
jecxz
inc
jecxz
xor
mov
scas
jno
cmp
adc
adc
dec
call
out
lods
jl
inc
sub
sti
cld
pop
shl
fnstcw
movs
dec
fcomip
call
call
inc
cmc
test
pop
xor
movs
js
dec
inc
cmc
inc
cmp
aas
jge
cs
stc
sbb
xlat
xor
inc
xor
loope
repnz
and
inc
xchg
lahf
dec
cmp
sub
mov
mov
xlat
enter
div
adc
or
ins
push
lods
mov
xor
scas
adc
or
jge
dec
mov
fld
cld
inc
popa
or
and
sbb
mov
push
arpl
(bad)
out
movs
and
pop
mov
outs
fcomp
mov
add
test
es
or
and
cld
push
mov
int3
xchg
inc
sbb
shl
push
les
adc
pop
pusha
in
outs
mov
xchg
mov
pop
mov
adc
pushf
call
and
mov
sub
dec
pop
into
push
mov
push
mov
push
add
jge
aad
sub
lds
xor
inc
sub
cmc
sbb
sub
inc
inc
hlt
in
jmp
jmp
retf
stos
movs
mov
sbb
inc
data16
dec
jae
sti
imul
pusha
cmp
ds
push
fadd
cmp
gs
adc
push
cdq
push
push
rcl
inc
mov
in
jl
or
ss
xor
das
push
outs
mov
pushf
mov
push
inc
mov
xchg
xchg
out
test
mov
imul
mov
fwait
(bad)
and
jmp
into
mov
nop
push
in
jb
sbb
jo
sbb
pop
aaa
sub
cwde
xchg
retf
xor
into
addr16
ret
repz
inc
cmp
pop
bound
(bad)
inc
inc
xor
pop
fidiv
leave
jl
jno
pop
ror
ja
clc
mul
out
ja
sub
mov
icebp
inc
hlt
or
push
iret
test
shr
enter
int3
sahf
cmp
xchg
or
mov
in
not
push
dec
fimul
push
stos
(bad)
xchg
mov
inc
adc
hlt
dec
pop
or
and
xchg
outs
push
adc
into
fmul
out
adc
fidivr
jle
cmp
jno
movs
(bad)
push
imul
push
(bad)
in
mov
mov
rcr
push
xor
cmc
rol
retf
shl
enter
and
mov
test
mov
push
out
addr16
sbb
repz
ficomp
outs
add
cwde
jne
push
lods
mov
cli
clc
xor
sbb
out
dec
test
call
push
inc
jp
fwait
js
adc
cmp
repz
sub
ficomp
les
inc
cld
pusha
mov
or
jne
mov
cdq
pop
aad
inc
jo
ss
inc
xor
sbb
jmp
cld
push
jmp
dec
cli
hlt
ds
fidivr
ins
mov
cmp
push
imul
jg
rol
iret
cld
daa
pop
dec
push
fdivr
or
rol
adc
ret
fs
dec
jnp
push
mov
mov
bnd
push
push
pop
adc
cmp
cmp
call
jecxz
cmp
xchg
cwde
shl
into
mov
jne
pop
pop
or
outs
je
dec
add
(bad)
push
mov
fs
mov
je
mov
sbb
pop
sbb
pop
cmps
inc
mov
mov
jp
shl
mov
and
xor
loopne
xor
inc
jmp
mov
jbe
jb
jg
std
int
mov
stos
mov
mov
sbb
jge
and
jne
cmp
loope
lods
adc
push
adc
push
ja
mov
sub
add
and
and
pop
imul
pop
cmp
jmp
out
dec
shr
adc
mov
call
mov
not
rcl
inc
cmps
gs
mov
retf
push
(bad)
(bad)
jo
mov
add
adc
cmc
cwde
pop
ror
mov
push
addr16
fdivr
test
push
and
sbb
sub
xor
jns
shl
xchg
fs
mov
and
adc
inc
ret
out
inc
sbb
in
cmp
fwait
imul
adc
mov
mov
xchg
hlt
gs
retf
addr16
icebp
lods
xchg
jl
lock
call
dec
sub
pop
mov
jmp
popa
leave
sbb
test
xor
xchg
es
inc
mov
aaa
mov
out
(bad)
ffreep
inc
pusha
or
add
out
daa
mov
test
call
(bad)
out
(bad)
and
movs
xor
sbb
aam
push
in
inc
into
rcr
xchg
push
pop
cmc
mov
lods
shl
xchg
push
stc
pop
pop
pop
cmps
push
push
xor
loopne
mov
and
cmp
test
sbb
pop
fwait
gs
jo
adc
pop
es
inc
stc
data16
mov
je
mov
add
rcr
ror
dec
clc
imul
jp
sahf
je
mov
mov
mov
xchg
je
ret
fwait
mov
jge
int
push
ins
movs
inc
sbb
jmp
add
lds
jmp
popa
add
ins
shld
mov
mov
xchg
or
mov
or
sub
retf
dec
das
ins
sbb
cmp
xor
add
mov
pop
fs
and
jne
dec
xor
xchg
(bad)
outs
adc
jno
rol
outs
cmp
mov
pop
mov
sbb
sbb
mov
int
push
fidiv
or
outs
lahf
(bad)
fpatan
adc
mov
daa
cmps
jne
enter
push
jmp
xchg
xlat
pop
retf
cld
sub
inc
sbb
cmp
jl
add
mov
fimul
inc
pop
ret
sar
sbb
xor
fistp
jns
jge
(bad)
mov
push
cmps
push
out
mov
std
mov
fdivr
div
outs
mov
pop
scas
adc
pushf
mov
sahf
movs
mul
xor
stos
pop
ins
or
ins
xlat
imul
retf
fidivr
mov
aam
shl
mov
retf
outs
aam
mov
pop
mov
hlt
sub
lock
adc
ja
sahf
and
clc
retf
push
fucomi
out
jg
adc
mov
ret
push
gs
pop
test
mov
sahf
xor
mov
(bad)
test
sub
not
jns
les
movs
or
in
repnz
inc
jp
pop
fwait
call
sub
push
aad
popa
mov
lea
fsubr
add
xchg
adc
retf
fs
into
xchg
jbe
jl
push
inc
loop
xor
mov
dec
movs
aad
out
inc
aam
push
lahf
arpl
(bad)
mov
inc
in
mov
mov
lds
(bad)
cmp
addr16
jge
jns
jbe
sahf
in
cmp
pop
jno
push
mov
sub
adc
and
pop
not
fcom
test
cmp
xchg
les
xchg
push
jb
fprem
jns
data16
and
test
aaa
inc
mov
jne
call
ins
and
loopne
int3
add
inc
loope
scas
cmc
jbe
enter
sbb
fldenv
xor
sub
xchg
dec
lds
scas
arpl
mov
or
cdq
cmp
bound
pusha
adc
jno
mov
sub
int
daa
cmps
mov
sbb
int3
inc
daa
jbe
retf
push
or
outs
data16
ins
xor
loop
int
xchg
xor
ss
mov
cmp
jns
mov
sub
or
dec
test
dec
aaa
inc
mov
xchg
jp
mov
and
repz
int3
hlt
pop
pop
loopne
mov
mov
or
jecxz
sub
xor
lods
add
pop
test
mov
cmp
ret
test
push
push
or
sub
sub
and
push
lods
call
or
ins
in
xlat
adc
loope
xlat
mov
jbe
jnp
xlat
xor
sbb
stos
fistp
in
mov
push
jp
pusha
dec
daa
rol
push
cmp
pushf
cmps
and
mov
popa
pop
scas
jne
sbb
outs
inc
sbb
outs
and
xchg
jb
pushf
or
and
jne
or
xlat
dec
sbb
sub
js
ds
bound
arpl
push
xchg
pop
mov
push
jns
mov
xor
aad
mov
cmps
and
ds
jp
hlt
add
mov
pop
cmp
xor
pop
cwde
dec
fldenv
stos
cmp
add
adc
cs
xor
mov
(bad)
mov
adc
adc
aam
fsubr
pop
int
retf
call
push
mov
call
repz
hlt
retf
cli
data16
or
sbb
sub
dec
mov
add
movs
clc
aad
outs
lahf
popf
movs
retf
xchg
ret
movs
loop
fs
mov
inc
cwde
call
jmp
in
mov
imul
or
jb
jb
add
mov
pop
mov
(bad)
je
(bad)
jp
xor
pusha
or
push
jns
xor
setl
call
ss
push
sbb
leave
push
add
sub
std
test
pusha
scas
test
adc
pop
jae
pop
or
mov
cs
es
das
shr
pop
push
aad
std
cdq
xor
cmp
scas
aam
mov
xchg
sbb
add
pop
jle
jo
jp
(bad)
push
cmp
mov
sbb
xor
shl
push
iret
add
and
shr
dec
std
lds
xchg
ins
fs
das
jnp
ret
mov
dec
mov
cmp
xchg
push
(bad)
fild
mov
loop
sub
xor
mov
cmps
(bad)
adc
imul
or
inc
imul
sti
cmps
jne
mov
fsub
cmp
push
movs
shl
int3
jmp
and
sub
in
xchg
sbb
and
das
lods
dec
jg
rcr
in
(bad)
lods
mov
add
mov
cmp
cmp
sti
inc
add
push
or
retf
jb
adc
and
retf
xor
ss
dec
push
imul
push
dec
lea
test
push
lods
or
inc
aam
adc
lds
sbb
das
inc
cmp
inc
cli
inc
mov
xor
cmps
and
cwde
(bad)
dec
push
stc
rcr
fisttp
xor
rol
jne
sbb
adc
sub
jne
sub
xchg
ret
sti
(bad)
lock
mov
cs
jl
ret
xchg
ins
push
gs
jp
cmps
cmps
xor
shl
push
mov
fmulp
or
js
dec
pushf
movs
lods
ja
lds
mov
fcomp
in
sbb
ss
out
sub
call
fs
or
and
inc
outs
mov
and
sahf
or
fs
pop
loopne
cmp
rcr
adc
xchg
movhps
fidiv
xor
mov
(bad)
mov
in
pop
enter
mov
pop
jg
ret
adc
sbb
aad
xlat
and
mov
pop
mov
sbb
mov
sbb
fisubr
push
enter
mov
popf
int3
iret
adc
std
push
test
pop
jb
add
xchg
call
xor
cs
pusha
aam
xor
jbe
push
mov
mov
pusha
add
add
bound
xchg
mov
popf
mov
fst
inc
movs
dec
jmp
sub
mov
or
call
push
ret
push
cmp
stc
leave
mov
inc
add
movs
mov
mov
mov
movs
push
call
loopne
jnp
sub
ins
xor
(bad)
gs
add
outs
jns
sbb
mov
ret
pop
xor
sub
popf
add
fnstcw
or
add
push
sub
mov
add
push
fst
ret
add
hlt
loope
out
in
ins
jnp
jne
outs
push
push
dec
ds
jae
add
jo
icebp
push
inc
jbe
adc
imul
dec
xchg
or
sbb
lock
jbe
outs
jns
(bad)
call
add
retf
call
and
sub
ja
pop
or
mov
dec
cdq
pop
and
int3
sbb
adc
test
and
pop
xchg
push
xor
pushf
xchg
gs
ds
retf
pop
xchg
mov
adc
lds
mov
sbb
int
sbb
push
out
ins
in
mov
ret
dec
repnz
cmp
jl
sti
xchg
xchg
jecxz
cs
cli
ficomp
adc
pop
fs
test
cwde
lods
inc
push
addr16
mov
pusha
in
enter
cdq
pop
jecxz
sub
mov
stc
and
shr
cmp
pop
xor
mov
adc
push
and
into
xchg
pop
push
add
and
call
pop
rol
js
mov
movs
cs
in
mov
mov
paddsb
loop
jae
sbb
fwait
mov
ins
ins
xor
(bad)
js
sub
aam
fldenv
test
sbb
sub
push
jmp
scas
hlt
or
adc
jmp
xlat
cmp
shl
or
add
popa
pop
bound
ins
dec
mov
loopne
adc
xchg
xor
out
sub
sub
pushf
popa
jge
js
mov
shr
jnp
(bad)
leave
sub
aad
push
addr16
xor
stos
dec
or
je
fmulp
inc
sub
pop
out
cmp
dec
sub
pop
mov
inc
jns
push
cwde
scas
push
push
icebp
imul
(bad)
js
and
and
cmps
push
loop
fsubr
je
or
xlat
pop
jl
inc
in
enter
xor
lock
cmp
adc
lods
xor
dec
(bad)
dec
stc
xchg
jge
jno
sahf
lds
mov
in
arpl
or
sti
pop
push
add
aam
xchg
imul
mov
adc
mov
jbe
in
push
cwde
cmp
mov
dec
fdiv
xor
jbe
xchg
movs
mov
pusha
add
xor
push
icebp
stc
fnstcw
cmp
inc
xor
in
xor
adc
inc
jmp
xor
out
mov
std
push
pop
lods
or
fisttp
fidivr
sbb
pop
mov
push
fst
ret
cs
rcr
leave
repnz
or
arpl
xor
cs
clc
in
shl
rcl
les
loopne
xor
pop
cmps
sbb
sbb
adc
xor
jne
jl
outs
ret
icebp
aaa
dec
shl
pop
mov
xor
jne
repz
loope
and
cli
mov
push
aaa
push
xchg
push
into
loop
jbe
(bad)
xchg
sub
xchg
cmps
rcl
xchg
ret
in
push
cmp
jmp
gs
sub
push
xor
out
lods
aaa
xor
mov
jmp
retf
ins
retf
mov
mov
dec
jb
inc
jecxz
mov
(bad)
or
mov
mov
pop
push
arpl
xchg
jg
stc
inc
adc
dec
jnp
xchg
cmps
in
adc
mov
pusha
adc
loop
sub
mov
adc
and
add
or
out
les
shl
sbb
loope
jne
mov
adc
pop
(bad)
push
or
arpl
(bad)
loop
xchg
out
xchg
ins
sub
mov
xor
cmp
sar
cmp
dec
inc
pop
and
sbb
fsub
inc
out
push
ret
cmp
pop
inc
push
adc
pushf
sub
ja
inc
in
inc
mov
mov
sbb
cmp
fstp
dec
dec
mov
xchg
mov
cmc
push
iret
mov
arpl
sar
or
jae
je
mov
mov
fnstcw
(bad)
jo
(bad)
retf
adc
inc
or
mov
out
ss
push
push
or
push
fidiv
inc
or
mov
jg
cmps
mov
test
or
test
std
ret
and
jmp
sub
movs
mov
cdq
mov
sar
(bad)
push
out
jnp
or
mov
sbb
add
loop
xchg
mov
into
xchg
cmp
and
imul
fadd
mov
test
sbb
fnstsw
pop
(bad)
mul
sbb
inc
iret
dec
(bad)
(bad)
mov
cmp
icebp
cmp
sti
mov
fwait
ja
mov
adc
jle
stos
push
sbb
add
dec
cmp
inc
(bad)
cwde
xor
fstp
stos
frstor
mov
xchg
out
jg
mov
adc
pusha
cdq
mov
inc
data16
mov
push
pop
leave
sbb
test
jbe
add
sbb
sub
adc
xchg
or
fs
aad
xor
call
mov
lods
mov
inc
pop
sub
(bad)
lds
dec
inc
add
or
sti
bound
gs
xor
xchg
push
clc
fadd
call
xor
shr
retf
and
cmps
into
das
(bad)
(bad)
(bad)
jle
add
js
xchg
sar
dec
ficomp
mov
sbb
mov
xchg
out
pop
xchg
je
xor
pop
pop
sahf
sub
stc
ss
aaa
out
pop
scas
bnd
fidiv
out
and
out
add
xchg
or
sbb
pop
sbb
mov
in
icebp
xor
lahf
mov
jmp
(bad)
out
sub
push
movs
xchg
pop
data16
sub
xchg
sti
mov
push
lock
das
(bad)
ror
test
fidiv
mov
outs
popf
cmp
or
inc
fldenv
add
or
fnstsw
jno
xor
mov
and
xor
push
push
sbb
inc
iret
shl
and
outs
cmp
dec
and
loope
ret
jnp
mov
jno
dec
inc
ins
retf
mov
rol
push
ror
jmp
mov
imul
retf
fldcw
neg
ror
add
cmp
shr
sbb
ror
call
pop
retf
mov
pop
push
mov
stos
push
loope
push
mov
arpl
cwde
push
mov
loop
iret
cmc
outs
rep
xchg
xadd
add
adc
jno
imul
leave
adc
retf
push
lds
rcl
inc
in
xchg
cmp
push
hlt
stos
in
cmp
add
jp
lods
push
or
fbld
cmps
std
in
pop
popa
push
inc
sbb
jmp
add
ror
cmp
push
stc
leave
loop
jecxz
inc
inc
hlt
repz
ret
aad
cmps
imul
dec
sub
mov
ja
xor
retf
hlt
jnp
int
inc
xor
stos
inc
in
or
jnp
jmp
jnp
hlt
xor
(bad)
sub
mov
adc
add
mov
jmp
xor
push
rcl
jne
push
lods
sti
pop
xor
push
sar
addr16
push
pop
pop
hlt
(bad)
lahf
mov
xor
out
inc
xchg
mov
clc
cmp
push
push
xor
xchg
jno
lahf
add
int
add
add
imul
push
sbb
and
dec
sbb
jb
sub
push
inc
into
mov
jmp
sub
in
pop
mov
aad
jb
sahf
dec
in
mov
out
cwde
add
cmp
xchg
mov
loopne
mov
ins
retf
ins
cmp
jmp
inc
mov
inc
int3
lahf
in
adc
sub
ret
jno
test
fdivr
dec
loope
and
movs
lock
xrelease
je
xor
arpl
movs
cwde
lds
dec
sbb
fcom
rcl
cmps
push
add
jg
cwde
sbb
pushf
mov
inc
or
push
or
xor
pop
adc
jecxz
fcom
inc
pop
in
jnp
not
lds
imul
add
pusha
outs
mov
add
mov
sbb
add
shr
leave
pop
int3
xchg
hlt
aam
add
pop
jns
or
add
rcl
xor
in
outs
and
push
sub
sti
das
mov
xchg
mov
xchg
jl
cli
lea
iret
into
in
adc
jmp
out
test
mov
add
cmps
(bad)
or
xor
and
mov
dec
aad
call
mov
dec
mov
pop
aaa
test
push
cmp
push
es
add
ffreep
mov
pop
push
push
and
retf
cli
dec
rol
adc
xor
mov
push
add
dec
lods
sub
sub
lock
nop
leave
movs
movs
mov
(bad)
mov
pop
inc
add
daa
cmp
inc
shl
xchg
imul
lock
jle
pusha
sbb
ja
sbb
jmp
adc
sar
inc
jb
push
and
aam
xchg
xor
mov
test
inc
je
jbe
xor
pop
ror
ror
or
daa
sub
push
pop
(bad)
xor
mov
push
xor
sbb
retf
stc
scas
repnz
(bad)
mov
pushf
imul
fsubr
xor
push
in
xor
mov
add
or
movs
stos
jge
dec
fbstp
icebp
push
cmp
jae
iret
jp
pushf
pop
or
ins
(bad)
push
cmp
jge
mov
adc
addr16
movs
sub
imul
(bad)
mov
stc
jecxz
jl
xor
mov
scas
out
pusha
scas
dec
icebp
xor
int3
push
jle
or
pop
and
jns
mov
rcl
in
pushf
and
ret
pop
movs
or
or
lds
test
inc
or
mov
out
jecxz
movd
sbb
dec
dec
repnz
push
je
jmp
stc
sti
mov
movs
sbb
sbb
jbe
push
dec
pushf
mov
inc
int
data16
sub
and
push
aaa
fs
movs
mov
add
lods
mov
jno
fisub
push
test
pop
add
repnz
ficomp
imul
mov
mov
hlt
push
stos
sub
cmps
test
stc
aas
fsubr
xchg
test
fsub
mov
sbb
push
and
imul
cmp
dec
retf
pop
loope
movs
inc
(bad)
cld
dec
pop
imul
push
inc
inc
out
pop
push
mov
ja
pop
jmp
int3
dec
sub
ss
je
and
xchg
cmp
xor
xchg
pop
push
or
retf
sub
cmp
repz
pop
ja
mov
loopne
cmp
fs
xchg
mov
ja
pusha
je
and
adc
mov
adc
mov
inc
cmp
sbb
adc
mov
pop
movs
jbe
mov
ja
cmp
inc
test
aas
xchg
xchg
sub
bound
add
cwde
jo
pop
movs
xor
push
push
jmp
ja
stos
das
call
push
out
xchg
div
aam
inc
stos
mov
cwde
cli
std
cmp
ret
stos
add
lods
add
stc
push
imul
xor
add
or
fadd
mov
mov
mov
out
inc
fcmovbe
(bad)
push
cmc
int3
or
sub
pop
inc
aam
jns
in
test
int3
in
sbb
js
imul
pop
cmps
jo
out
ror
int
test
mov
mov
push
outs
arpl
data16
add
xor
retf
xor
jecxz
rol
pop
and
mov
mov
pusha
into
call
ret
bound
jge
jns
stc
imul
enter
dec
inc
jbe
ror
dec
inc
push
xor
xchg
mov
inc
cmp
shl
sti
push
lods
mov
repz
adc
xlat
jp
in
test
sbb
gs
jl
pop
fisub
int
cmp
sbb
mov
inc
dec
call
and
inc
repnz
sbb
mov
(bad)
movs
and
mov
inc
inc
aam
inc
arpl
lods
adc
push
lock
jp
enter
stc
sar
and
call
cmp
jl
lods
in
pop
std
mov
push
clc
mov
call
mov
popa
xchg
out
mov
outs
sbb
loopne
mov
fsub
lahf
adc
jnp
cmp
outs
test
scas
inc
pop
jnp
jb
cs
pop
repnz
jo
fstp
mov
out
push
pushf
jns
xor
std
mov
sub
sti
push
xor
cmp
or
xor
aad
mov
xor
mov
stc
jge
mov
dec
test
ins
jns
inc
repz
into
or
imul
and
push
scas
mov
xchg
sub
test
push
sub
imul
xor
sub
fmul
xchg
cmp
push
cmp
bound
outs
dec
xor
out
(bad)
sbb
push
lea
fucomip
xchg
popa
add
test
jo
mov
mov
lock
ret
inc
jbe
jp
mov
or
xchg
and
dec
shl
cdq
mov
xchg
sbb
or
jbe
in
pop
mov
call
(bad)
jnp
sub
dec
inc
dec
cmps
loop
not
add
outs
stos
jne
repz
jae
sub
xor
hlt
mov
fldcw
mov
pop
je
retf
mov
pop
je
or
dec
adc
xor
xchg
iret
arpl
(bad)
dec
retf
or
jecxz
sbb
sbb
mov
jno
loopne
dec
adc
and
or
pop
ins
not
and
mov
jmp
jmp
fwait
cmp
dec
jbe
mov
stc
jno
sub
fdivr
adc
ret
jne
push
mov
das
bound
das
ret
shl
mov
cmp
ror
push
jmp
pop
inc
mov
fadd
(bad)
aam
lock
sbb
cmp
pop
cmp
bound
test
add
mov
scas
das
js
popa
inc
and
or
in
mov
xchg
mov
inc
(bad)
sahf
mov
retf
aam
repnz
ss
(bad)
jge
add
jge
sub
lods
cmp
data16
sar
lea
in
inc
push
adc
push
iret
add
sti
es
cli
clts
xchg
jl
xchg
je
or
sub
adc
(bad)
pop
(bad)
imul
sbb
pop
mov
mov
mov
jp
aaa
pop
pop
and
or
sahf
or
div
sbb
and
loopne
push
adc
xor
inc
mov
cmp
(bad)
adc
test
and
or
retf
dec
dec
iret
cmc
push
shl
dec
lods
add
sbb
aam
mov
in
rol
retf
addr16
cmp
inc
gs
out
test
idiv
jmp
and
or
pop
ins
xchg
cmc
icebp
cmp
(bad)
or
fidivr
aad
shl
jne
imul
xor
sub
arpl
mov
out
fidivr
jns
xor
mov
ror
push
xchg
adc
(bad)
cwde
pop
lahf
jb
sub
mov
add
mov
das
jae
xor
ins
imul
shr
pusha
pop
icebp
inc
cmp
ins
mov
fmul
test
mov
bound
jbe
dec
dec
aas
add
push
sbb
fwait
cmp
jnp
pusha
cli
arpl
xchg
sbb
push
cs
dec
int3
sbb
sbb
adc
lods
adc
outs
push
test
lea
mov
and
sbb
dec
call
dec
cwde
pusha
popf
fistp
pop
mov
or
and
lock
jne
dec
sub
adc
cmc
lods
(bad)
jmp
or
cmp
pop
inc
xor
cmp
push
(bad)
and
shl
shr
test
dec
in
xor
xchg
sbb
out
push
inc
jge
sbb
js
add
push
and
rol
and
pop
jne
repz
mov
dec
dec
push
jmp
ss
mov
rcl
shl
call
inc
icebp
mov
push
sub
retf
add
xchg
mov
aaa
inc
pusha
test
(bad)
adc
and
lock
(bad)
imul
mov
shr
(bad)
push
ins
fwait
add
repnz
ins
int
push
dec
dec
jl
test
jmp
call
adc
mov
ins
mov
mov
sbb
and
call
adc
add
xchg
pusha
(bad)
sbb
inc
inc
sub
dec
mov
adc
push
lea
add
sub
sub
clc
pop
push
es
(bad)
cmp
mov
test
push
dec
mov
or
push
jmp
or
or
pop
sub
imul
jmp
or
add
inc
mov
hlt
aaa
es
shl
mov
inc
pusha
inc
(bad)
xlat
lahf
scas
pusha
jecxz
dec
test
cdq
out
popf
es
outs
call
and
mov
jp
out
add
aas
je
test
out
push
sbb
out
pusha
jns
and
xchg
cmp
lds
pusha
ja
cmp
push
cmp
or
outs
daa
push
es
mov
(bad)
push
dec
sbb
sub
pop
retf
jbe
push
sbb
test
in
inc
js
mov
xor
int3
adc
jnp
cmp
hlt
inc
pop
mov
pop
mov
add
sub
jmp
push
sub
test
cmc
cmp
dec
mov
int3
xchg
dec
gs
call
mov
xchg
out
add
dec
fwait
xchg
outs
mov
add
mul
pop
imul
pop
jnp
or
aam
add
in
push
std
add
(bad)
stos
add
xchg
shr
push
aam
aam
xchg
adc
(bad)
popa
pushf
call
dec
and
add
push
jmp
ret
dec
xor
pop
sub
ret
in
ja
movlps
mov
jae
cs
shl
rol
pop
cmp
push
xchg
push
or
sahf
sbb
rcr
in
stos
or
stos
or
mov
pop
into
pop
cmp
xor
push
stos
inc
mov
mov
shr
and
xchg
cmp
xchg
out
pop
adc
cwde
adc
test
stos
in
xchg
call
fwait
mov
add
jecxz
in
nop
add
dec
adc
gs
pop
nop
pop
popf
inc
mov
jbe
pop
loope
pop
mov
mov
pop
xchg
es
rol
outs
push
mov
movs
call
lods
lea
add
add
push
pop
dec
mov
shl
or
bound
and
xchg
and
or
(bad)
jl
out
ret
sahf
mov
fwait
jnp
scas
scas
pop
iret
addr16
add
inc
ja
adc
aaa
jns
fwait
and
retf
aas
pop
sub
adc
out
les
out
and
mov
loopne
mov
sahf
mov
(bad)
shl
fs
mov
mov
ds
and
(bad)
cld
push
add
shr
cmp
repz
mov
mov
or
pop
add
loop
cmp
inc
cdq
test
push
movs
mov
imul
rol
mov
jl
pop
imul
jmp
outs
push
mov
rcr
jo
xor
outs
dec
ins
int
mov
ror
aad
enter
pop
das
shl
repnz
sahf
test
aas
inc
mov
neg
sbb
dec
mov
cs
xchg
pop
inc
push
pop
add
add
jnp
imul
fidiv
imul
mov
ror
push
or
test
push
outs
xchg
jle
jne
mov
xchg
test
aas
shr
cwde
sub
mov
sti
mov
lods
ins
sub
aad
fidivr
push
ret
ins
and
push
push
push
jb
sbb
addr16
pop
jno
dec
adc
stos
and
mov
xor
mov
imul
dec
mov
test
and
cwde
call
cmps
mov
int3
jge
inc
sbb
ins
push
xor
dec
dec
fwait
push
xchg
mov
sub
mov
pop
ins
and
iret
xchg
mov
and
add
push
cmp
dec
test
adc
inc
(bad)
jae
cmp
mov
ss
mov
inc
sbb
fisub
aaa
push
mov
imul
inc
or
fdivr
adc
jbe
ja
clc
retf
aas
popa
(bad)
jne
cli
imul
jnp
(bad)
nop
into
pop
push
cli
mov
je
mov
in
scas
pop
push
ret
dec
cmps
and
add
mov
sub
jge
loopne
jns
retf
mov
inc
pop
inc
mov
adc
dec
xchg
mov
movs
mov
mov
rcl
push
inc
and
outs
(bad)
sbb
in
add
adc
inc
push
push
adc
cmc
xchg
or
(bad)
xor
loopne
ja
mov
xor
data16
fisubr
sub
adc
push
jmp
scas
dec
std
stos
xlat
dec
push
xchg
push
fisttp
clc
test
rol
mov
(bad)
fsubr
imul
and
push
dec
mov
ret
das
cli
xchg
jns
mov
pop
sub
add
jle
movs
addr16
repnz
ins
cmps
jne
mov
mov
and
add
cmps
push
adc
or
imul
push
xor
test
jmp
daa
sbb
ret
clc
shl
pop
int3
mov
sbb
imul
leave
mov
dec
sar
pop
aam
stos
cmp
inc
xor
daa
in
loope
outs
dec
xchg
pop
mov
fsubr
sbb
inc
cdq
push
scas
das
movs
and
sub
loope
xchg
loope
cli
fiadd
and
inc
popa
adc
inc
jb
mov
mov
je
xchg
or
sub
pop
mov
jmp
mov
nop
shr
lods
inc
test
je
lahf
dec
mov
pop
xchg
fs
and
aaa
ins
xor
adc
mov
ror
js
ss
adc
adc
or
je
push
mov
pop
mov
dec
xchg
pop
pop
sbb
leave
xor
inc
xchg
fld
pop
daa
(bad)
sub
into
call
mov
add
gs
add
push
xor
push
daa
es
dec
call
fwait
(bad)
in
movs
call
dec
enter
mov
mov
mov
pusha
jbe
and
xor
jmp
aaa
pushf
stos
mov
xchg
out
movs
mov
scas
popa
xor
movs
enter
sahf
int3
and
pop
mov
rcr
test
jmp
call
push
mov
jb
sar
jns
sub
scas
dec
mov
clc
push
mov
fmul
fcomp
xor
fdivp
mov
mov
inc
adc
call
cmps
stc
mov
mov
dec
mov
push
fstp
aaa
hlt
mov
call
xor
mov
xor
adc
xchg
and
ins
push
jb
mov
dec
or
xor
jge
aas
mov
call
loope
and
inc
dec
dec
mov
adc
fs
(bad)
and
test
adc
sub
dec
call
xchg
pop
(bad)
pop
xor
fidiv
sub
mov
pop
(bad)
out
push
add
in
cs
push
pop
ja
push
mov
adc
outs
push
add
scas
std
stos
xor
mov
pop
dec
pop
pop
push
fcmove
mov
popf
jmp
cld
cmp
mov
rcl
imul
pop
inc
mov
pop
rcr
push
bound
into
mov
int
fdivr
pop
movs
bound
ja
bound
pushf
fincstp
into
cmps
inc
aad
hlt
jbe
cmp
sbb
stos
mov
mov
ins
and
mov
add
jnp
popa
cwde
ds
fadd
pop
sub
cmp
xchg
mov
or
inc
stos
cmps
lahf
pop
mov
sbb
sbb
jl
xchg
int
xchg
loopne
inc
jl
mov
inc
fbstp
scas
js
mov
xchg
inc
pop
mov
xchg
or
test
inc
rol
mov
sub
sub
jmp
adc
lods
sbb
sahf
movs
mov
mov
cs
repnz
cmp
stos
shl
loope
or
add
mov
push
jo
jno
in
adc
sub
lea
mov
mov
test
or
jb
loopne
pop
xor
xor
popa
inc
js
iret
sub
or
jmp
(bad)
(bad)
cmp
test
cmps
jnp
mov
inc
adc
xchg
dec
enter
push
lahf
xchg
sti
add
push
int3
jge
repnz
in
push
xor
mov
sub
call
stos
sar
sar
fmul
aaa
movntps
xchg
rcl
xor
or
cmp
out
scas
inc
push
fcom
aad
iret
popf
fs
ror
out
into
dec
add
cmp
sbb
loope
or
push
push
xor
cli
add
movs
mov
cmp
aad
retf
or
vpandn
ins
sbb
jmp
nop
cli
xlat
push
cmp
in
jle
fadd
std
mov
jmp
pop
shr
and
in
lock
mov
outs
test
mov
imul
jl
push
adc
cwde
mov
repz
lods
cmp
aam
aas
cmps
cmps
aaa
push
ret
push
aam
pop
sub
pop
mov
cmp
fild
mov
xchg
popa
retf
adc
lds
inc
outs
or
pop
cmps
fsubr
pop
ins
dec
push
xor
dec
pop
xchg
cs
lods
into
mov
add
ret
cmps
mov
enter
aad
jo
dec
loopne
cmps
inc
in
stc
or
inc
cmp
ret
out
mov
jo
call
mov
or
mov
out
repz
test
mov
cmps
frstor
iret
push
mov
pop
outs
xor
xor
repz
push
adc
(bad)
dec
add
jnp
or
test
push
test
inc
test
hlt
imul
les
xor
inc
cld
stos
cmp
add
sbb
dec
(bad)
stos
sbb
xchg
mov
call
sbb
div
pop
ja
int3
or
fldln2
(bad)
into
push
adc
ins
mov
sbb
rcl
mov
iret
stc
sbb
jbe
and
lds
repz
js
scas
fidiv
int3
(bad)
mov
jg
icebp
rcr
inc
pop
fwait
out
mov
xchg
jno
iret
idiv
pop
adc
dec
mov
hlt
xor
leave
cmp
mov
sub
mov
into
repz
push
sub
xchg
inc
cdq
nop
lea
sar
push
pusha
mov
inc
out
loop
inc
push
cwde
aas
aaa
shl
scas
push
mov
lods
pop
dec
test
mov
mov
adc
mov
and
and
xchg
xchg
mov
mov
shr
mov
int
sbb
js
mov
out
mov
fst
push
pop
cmps
out
push
mov
mov
gs
xchg
fndisi(8087
cvttps2pi
popa
push
adc
loop
(bad)
pushf
div
fdiv
pop
xchg
add
and
out
repz
inc
cs
les
push
pop
clc
repz
inc
out
dec
lods
dec
fld
fbld
dec
sub
in
add
hlt
fwait
mov
inc
adc
out
hlt
pop
dec
xchg
hlt
mov
mov
lods
adc
push
push
or
es
in
xchg
fdivr
mov
and
cmp
ds
jno
mov
and
inc
test
aaa
(bad)
(bad)
jl
lahf
xchg
(bad)
sbb
dec
and
out
inc
jno
dec
in
dec
scas
mov
jmp
jns
xor
mov
hlt
lods
adc
cmp
cmp
inc
arpl
data16
push
and
push
jbe
push
iret
push
sbb
push
fnstsw
push
jo
add
mov
test
push
cmp
push
xor
mov
cmp
pop
add
loop
ins
mov
adc
cli
std
mov
adc
add
call
cmp
lds
bound
pop
and
mov
jne
push
inc
push
xlat
xor
mov
imul
sbb
scas
add
push
mov
dec
inc
in
or
js
loope
stos
pop
call
pop
bound
dec
popa
loop
repz
scas
add
std
(bad)
jmp
xchg
push
stos
adc
mov
rol
lock
test
fistp
and
push
adc
sub
ret
je
es
ds
jno
into
push
inc
push
xor
retf
dec
imul
fstp
mov
inc
mov
cmps
sbb
sub
stos
int3
stos
or
xor
jbe
push
cmp
or
sub
(bad)
mov
mov
clc
or
(bad)
cmp
outs
dec
aad
ret
pusha
mov
repnz
add
adc
ss
cmc
adc
dec
ins
repnz
jno
call
sbb
inc
pop
fs
jmp
push
test
inc
out
lea
pop
pop
mov
dec
or
test
and
(bad)
repz
xchg
cwde
jg
xor
pusha
ss
sbb
movs
mov
mov
mov
leave
bound
adc
les
mov
test
inc
jb
xchg
pushf
mov
addr16
aas
xchg
jg
fisubr
sbb
mov
pop
cmc
sub
scas
and
fld
dec
cmp
mov
or
int
imul
scas
adc
xchg
bound
xlat
xor
inc
ss
cld
mov
jnp
(bad)
retf
(bad)
aad
pop
aas
jne
test
sub
stos
sub
jbe
lock
aad
add
rcr
sbb
fmul
shl
cwde
imul
add
pop
and
mov
or
rcr
cmp
das
sbb
inc
and
dec
int3
jmp
ret
cmc
dec
mov
pusha
jns
stos
adc
jecxz
jecxz
ja
pop
jl
enter
pop
pop
aam
inc
cmp
(bad)
in
mov
dec
add
jmp
pop
fisubr
mov
aam
in
sar
imul
loopne
push
cmp
test
data16
ja
pop
test
mov
lock
pushf
call
mov
inc
adc
movs
xchg
(bad)
mov
dec
jecxz
push
inc
inc
push
push
push
(bad)
popa
xchg
pop
cmp
addr16
mov
add
or
(bad)
ins
push
ins
jbe
inc
in
imul
cmps
pusha
enter
cs
ins
add
stos
inc
or
(bad)
cli
int3
xchg
and
mov
sbb
push
and
arpl
add
stos
adc
or
mov
popf
rol
add
loop
aad
cmp
in
adc
push
adc
pop
push
je
add
scas
mov
sbb
xchg
mov
add
test
stc
aaa
mov
jne
jmp
add
enter
add
in
(bad)
sbb
imul
cwde
aaa
(bad)
or
cmc
sub
retf
test
jmp
repz
and
sub
xor
hlt
adc
imul
pop
sbb
push
ret
aam
sbb
stos
mov
js
adc
xor
xchg
fbstp
sub
aaa
mov
inc
lods
cmp
or
jb
out
or
das
mov
jne
push
push
scas
pop
jne
add
jbe
lahf
cli
arpl
push
aaa
outs
nop
sub
mov
mov
dec
es
push
sbb
int
pop
into
out
cmc
jno
rol
push
cmps
es
cmp
push
cmps
jge
sbb
jo
cwde
and
pop
add
or
stos
mov
cmp
cmp
jge
pusha
sbb
shl
cmp
retf
sahf
cmp
jmp
out
outs
fnstenv
sbb
inc
xor
xchg
and
out
lods
cdq
push
push
outs
add
dec
cmp
js
das
dec
inc
xor
mov
push
or
pushf
mov
sub
jle
ins
push
adc
pop
jp
xor
out
movs
dec
adc
add
popf
fs
int
jmp
cmc
jle
mov
xchg
pop
out
push
fcom
sub
push
mov
add
xor
sbb
inc
push
cwde
add
imul
adc
adc
adc
shl
aad
movs
mov
enter
stc
dec
repz
xor
jge
mov
or
ins
sbb
adc
add
push
or
xchg
(bad)
sbb
sbb
pop
mov
pushf
dec
or
stos
mov
xchg
sbb
pushf
sbb
arpl
inc
or
sub
add
xor
or
mov
shl
inc
es
push
shl
jnp
ins
pop
jmp
mov
jne
jae
rcr
xor
xchg
jmp
mov
daa
das
cli
jge
mov
lods
lds
or
dec
pop
and
pop
push
mov
loop
ret
sub
or
fsubr
retf
fidivr
add
retf
add
in
fiadd
test
clc
xchg
and
push
shl
lds
sub
lock
cli
fst
inc
mov
xchg
mov
outs
inc
retf
add
adc
mov
adc
in
movs
mov
out
lods
inc
fisttp
cmc
shr
inc
sub
or
ins
aad
xor
in
iret
scas
aad
pop
fbstp
(bad)
int
ss
dec
ins
test
aas
xchg
add
cwde
add
mov
addr16
adc
add
xchg
imul
push
dec
mov
xchg
fadd
mov
gs
scas
rcl
pop
mov
test
test
sbb
or
push
sti
or
add
jmp
gs
leave
scas
sar
das
or
mov
test
gs
ss
stos
out
cmps
cdq
add
pop
and
push
pusha
test
pop
imul
sbb
push
fld
(bad)
jg
in
lods
mov
inc
xor
iret
jns
sub
xor
or
scas
mov
xor
repz
retf
mov
inc
jecxz
mov
adc
retf
rol
jg
lea
(bad)
pop
xchg
sub
xchg
popf
cmp
push
imul
xor
mov
mov
sub
loop
mov
push
mov
bound
ss
stos
out
mov
fst
int
adc
mov
xchg
push
jecxz
lock
jl
pop
mov
sbb
in
and
stos
cmps
out
sbb
sti
mov
add
cwde
inc
outs
std
xor
mov
mov
mov
jne
in
loopne
jmp
mov
sub
pop
adc
cmp
sbb
adc
lea
leave
aad
hlt
adc
std
outs
xor
mov
ret
inc
mov
stos
jb
dec
push
adc
loope
out
(bad)
sbb
or
out
jg
inc
add
out
cwde
xor
loop
push
out
loopne
outs
dec
add
or
jbe
jecxz
mov
mov
fstp
dec
popf
enter
or
and
mov
mov
repnz
test
jns
dec
sub
les
adc
sbb
xchg
sbb
(bad)
dec
mov
mov
sar
ja
mov
(bad)
arpl
imul
repnz
mov
sbb
leave
pop
xchg
shl
adc
cwde
push
test
push
test
inc
sbb
pushf
xor
adc
jecxz
dec
mov
xchg
jno
pushf
js
mov
jmp
js
mov
fidivr
mov
and
cmp
sub
dec
sbb
cmc
mov
and
sar
xor
mov
fstp
fs
outs
xchg
lods
outs
push
or
pop
push
sub
ins
pop
push
and
adc
movs
enter
push
inc
in
fld
mov
out
(bad)
ins
mov
ret
daa
jmp
mov
hlt
ins
pop
mov
out
push
mov
dec
mov
aaa
cmp
mov
mov
inc
cmp
punpckhdq
mov
pusha
bnd
js
add
fs
push
stos
pop
mov
push
out
push
hlt
push
push
mov
out
ret
lods
adc
dec
inc
mov
int3
pop
loope
and
and
enter
push
sbb
shl
jmp
mov
pop
in
or
hlt
cs
int3
dec
and
imul
icebp
ficom
cmp
mov
mov
pop
xchg
out
pusha
loope
sub
and
(bad)
xor
jmp
xchg
retf
jp
xor
inc
jae
xor
inc
jle
mov
std
(bad)
jno
out
movs
cmp
inc
sub
call
or
test
jns
and
loop
or
cmp
int
push
ins
cdq
jmp
aad
(bad)
mov
add
sbb
cmp
pushf
rcl
mov
adc
push
imul
sbb
ret
lods
movs
or
push
or
in
adc
dec
repnz
add
(bad)
mov
cdq
jns
xor
cs
add
mov
and
jecxz
sbb
push
ja
dec
sbb
jp
mov
dec
add
shl
test
ins
pop
xchg
aaa
aaa
inc
int3
jl
or
dec
inc
push
jne
add
xchg
sbb
(bad)
call
ret
ins
bound
dec
push
(bad)
(bad)
fadd
xchg
mov
cmp
mov
fist
dec
imul
jb
cmp
adc
pop
lahf
or
push
jl
stos
aad
mov
xchg
push
movs
dec
loope
mov
jmp
test
dec
test
repnz
inc
mov
aaa
xchg
aam
sub
add
cs
or
or
dec
outs
bound
popa
pop
mov
xchg
pop
outs
xlat
fisubr
xor
shr
lock
ficomp
xlat
in
leave
in
jne
ja
push
xchg
pop
push
test
sub
mov
stos
and
or
mov
xchg
adc
scas
push
add
jbe
adc
outs
inc
dec
icebp
lods
sti
cmp
xor
vorps
rol
fsubr
ss
mov
ins
xchg
inc
fimul
cmp
lea
jmp
lds
mov
sbb
sub
aaa
stos
jg
(bad)
ret
pushf
mov
stos
aam
xchg
push
out
xor
push
iret
or
cli
and
mov
loope
mov
mov
mov
xchg
mov
rol
in
mov
adc
mov
mov
pop
mov
imul
stc
rcr
mov
iret
js
test
pop
adc
sbb
pop
pop
xchg
pop
mov
dec
fiadd
push
into
mov
mov
jno
pusha
mov
lods
call
repz
or
sub
cmp
movs
pop
xor
popa
cmps
lfs
xchg
popa
sub
mov
ret
int3
sub
mov
inc
xor
pop
cs
push
fmul
aam
int
test
and
xchg
int
inc
jnp
call
or
pop
outs
in
lahf
enter
(bad)
inc
stos
xor
out
dec
and
pop
mov
(bad)
pop
in
loopne
adc
sub
or
push
push
xor
cmp
jp
push
ja
stos
movs
or
loop
pop
xor
cmp
pop
fcmovnbe
mov
loopne
and
or
adc
iret
mov
dec
sahf
or
sub
mov
sub
mov
push
shl
call
rcr
jg
scas
cmp
loope
leave
xor
icebp
jp
mov
fimul
pushf
icebp
cdq
mov
cmp
and
fs
pop
mov
xchg
sbb
mov
out
test
pop
out
mov
loope
adc
cwde
mov
sub
cmc
push
mov
sahf
cmp
inc
push
jmp
mov
popf
jp
neg
les
cmps
popf
sub
stc
sbb
das
je
xchg
fst
dec
xchg
imul
cmp
sub
(bad)
js
xor
push
mov
xor
lods
ins
jmp
js
repnz
inc
pop
cmp
das
cmp
mov
cld
aam
int
mov
(bad)
out
ror
pop
call
fld
adc
or
in
sahf
leave
mov
mov
mov
push
lea
push
mov
push
push
push
add
push
adc
jb
rol
(bad)
in
xor
push
std
das
xchg
dec
cmp
inc
inc
xor
sub
jmp
mov
mov
fbld
adc
in
push
repz
sbb
pop
or
mov
hlt
pop
fcomp
lods
mov
push
xor
(bad)
icebp
push
xchg
mov
aam
stos
inc
stc
jecxz
lods
jmp
shl
xor
push
xchg
adc
mov
popf
data16
lock
mov
das
pop
lds
push
(bad)
pop
xchg
fisttp
xchg
rcl
int3
cmp
stc
fs
or
jge
hlt
cmp
mov
dec
mov
xlat
inc
xchg
daa
imul
sub
or
stos
popf
sbb
out
pop
mov
jno
add
mov
(bad)
pop
sbb
pop
pushf
je
cmps
daa
fs
xor
ret
add
pushf
das
mov
pushf
pop
rol
cmps
out
push
inc
push
mov
pop
dec
cli
inc
jmp
ret
fisubr
loope
dec
jle
push
xor
mov
mov
ss
add
call
xchg
push
sbb
cmp
cmp
lds
dec
add
pop
lods
sub
adc
xor
lock
mov
iret
xor
xor
sbb
into
mov
pop
mov
scas
repnz
pop
inc
mov
mov
xchg
mov
xlat
sar
xchg
adc
repz
das
pop
mov
pushf
cmp
cmp
cld
jecxz
stos
xor
loope
xchg
sub
sbb
jns
mov
les
jmp
xchg
cmps
and
clc
dec
ja
lods
xchg
loopne
pop
jbe
into
mov
imul
pop
(bad)
aaa
xlat
jb
aad
cmc
je
mov
push
jmp
gs
dec
jmp
push
add
(bad)
out
(bad)
movhps
loopne
aas
(bad)
sub
(bad)
rcl
sub
stc
rol
jle
mov
sbb
sub
(bad)
push
xor
xchg
aad
inc
fcomp
enter
mov
je
sbb
sbb
int3
and
std
into
xor
test
add
add
frstor
fstp
ss
sbb
dec
test
lods
jno
and
sub
cmp
int
addr16
push
lds
mov
scas
and
js
mov
jae
sar
vaddsd
xor
ds
sub
jo
sbb
jle
and
push
out
adc
iret
sti
mov
inc
cmp
ror
pop
pop
push
hlt
ss
sbb
cdq
and
cmp
and
fidivr
and
icebp
pop
aaa
sbb
sbb
jmp
add
xor
or
and
nop
shl
das
idiv
push
stc
sub
xchg
leave
(bad)
outs
jns
adc
scas
lods
xchg
aas
and
or
jecxz
cld
ret
ds
std
(bad)
ds
nop
outs
or
jge
retf
icebp
iret
push
add
sbb
adc
daa
imul
xor
cs
adc
add
aas
je
or
sbb
gs
shl
repnz
test
jo
sub
push
sub
xchg
xchg
and
test
stos
mov
jb
fdivr
cmp
jle
xchg
repz
mul
loopne
(bad)
ja
xchg
add
mov
inc
shr
scas
fnstenv
or
jbe
leave
fnsave
daa
ja
adc
hlt
test
scas
jb
mov
aaa
retf
ins
test
or
retf
adc
test
in
movs
and
jnp
inc
enter
jmp
xchg
movs
cmps
cmp
xchg
inc
xchg
pop
sub
shl
(bad)
fisub
push
test
xchg
cmp
xchg
retf
pop
dec
push
in
adc
pop
add
sbb
push
push
sub
popf
fistp
push
push
and
dec
enter
xchg
hlt
mov
js
jl
aam
fidiv
arpl
xchg
push
imul
or
inc
je
out
lds
mov
pusha
ficom
in
dec
mov
or
pushf
and
repnz
inc
mov
and
ins
pop
repz
hlt
inc
mov
fnstsw
inc
movs
inc
icebp
clc
in
or
into
inc
fadd
push
mov
in
pop
idiv
inc
inc
in
mov
clc
rcl
loopne
xor
xchg
add
mov
inc
add
or
push
pop
inc
out
(bad)
in
xor
rcr
cmp
mov
test
rol
movs
pop
mov
outs
test
clc
stos
mov
push
sbb
mov
test
mov
sub
movs
ficomp
lds
push
add
fstp
dec
dec
mov
das
sahf
popa
dec
cmp
cld
into
cmp
cmps
sub
lods
and
and
jge
jmp
adc
cwde
and
ret
hlt
mov
sahf
mov
int3
mov
mov
jle
inc
(bad)
clc
hlt
dec
out
xor
popf
xchg
mov
in
int
cs
xchg
jbe
repz
ret
pop
in
jne
ret
jge
jmp
cmps
rcr
or
jnp
ds
and
aas
mov
and
sub
xchg
dec
xchg
je
aaa
mov
and
pop
clc
pushw
ret
pop
mov
xchg
adc
mov
pop
xchg
sub
loop
fiadd
cld
addr16
test
cli
jg
je
popf
enter
ror
inc
jbe
mov
mov
sub
add
test
rcr
add
xchg
push
loopne
push
mov
pop
shr
and
fs
adc
mov
out
mov
mov
adc
(bad)
add
pop
rol
lock
xor
dec
fidiv
jl
movs
in
test
in
or
cld
adc
stc
or
add
into
mov
jecxz
std
stc
loop
not
or
add
add
inc
sbb
js
cmp
adc
test
js
cmp
stos
(bad)
ficomp
cld
out
jg
add
(bad)
xor
lahf
retf
add
arpl
and
pop
inc
mov
scas
cmp
jo
shl
pushf
xchg
or
aad
ja
pop
ss
enter
sub
mov
pop
dec
push
in
sbb
das
and
loope
sbb
add
mov
pop
enter
loopne
cmps
pop
fnstsw
sar
in
jnp
or
add
enter
sbb
das
jl
adc
add
adc
adc
ins
sub
add
scas
pop
dec
sub
in
pop
das
xchg
mov
push
loope
inc
pop
pop
movs
xor
(bad)
xchg
test
pusha
cmc
cwde
dec
frstor
mov
in
jl
jecxz
xor
cmp
es
push
lods
mov
add
jo
mov
(bad)
xor
lds
movs
add
sbb
sbb
popf
arpl
add
test
(bad)
leave
retf
data16
xchg
dec
bound
enter
or
addr16
mov
loop
or
scas
sbb
cmp
push
popa
sub
add
int
rcr
xchg
push
mov
cmp
in
and
popf
repnz
sub
pop
pop
cmp
rcl
into
mov
cmp
or
lahf
adc
pop
(bad)
xor
mov
mov
mov
pushf
add
mov
xchg
push
mov
jo
in
stos
ret
push
sbb
xchg
retf
xchg
pop
xor
sbb
movs
pop
aaa
xor
cmp
or
inc
sbb
xchg
iret
push
xchg
adc
pop
cmp
test
mov
(bad)
xor
scas
inc
popf
into
jnp
aaa
lds
adc
jmp
lea
retf
leave
jp
push
enter
add
lods
into
pushf
test
fdiv
out
adc
movs
lock
cdq
bound
cwde
enter
pop
int
jge
xchg
cmps
dec
inc
lds
in
movs
sub
or
fnstenv
pop
enter
loopne
ja
and
(bad)
mov
cwde
sbb
mov
mov
cmps
fadd
dec
pop
sbb
cmp
lods
push
data16
ret
xchg
call
sub
iret
aam
or
inc
popa
inc
loop
cmp
retf
sbb
pushf
adc
sbb
retf
aaa
out
and
xchg
cli
or
push
fwait
mov
enter
and
pop
xchg
or
adc
push
mov
pop
jge
test
pop
rcl
or
inc
mov
loop
(bad)
sbb
loope
push
dec
push
test
dec
ret
mov
arpl
mov
pop
and
xor
mov
or
add
add
fidivr
pop
in
mov
xor
and
sbb
dec
mov
xchg
add
arpl
cmp
xchg
mov
aas
in
sbb
arpl
scas
sbb
cdq
shl
loopne
mov
dec
ss
call
int
scas
test
je
adc
mov
sbb
loope
lahf
adc
hlt
retf
pop
fsubrp
dec
outs
aam
(bad)
lods
push
sbb
cmp
cmp
sub
xchg
xchg
lea
sub
add
pop
inc
dec
arpl
cmp
outs
aaa
dec
mov
sar
add
je
xor
lahf
enter
add
add
test
cmp
popf
mov
mov
xchg
je
adc
mov
ins
xor
nop
lods
scas
xchg
data16
inc
xor
xor
xor
loopne
cs
cdq
fbld
movs
sbb
mov
sbb
ja
fisub
test
adc
dec
ret
clc
pop
call
sbb
lock
cmovs
in
popf
mov
inc
mov
and
sbb
shl
outs
iret
pop
js
mov
inc
adc
xchg
and
rcl
fdivr
fsubr
or
test
int3
loopne
mov
push
jge
(bad)
and
sub
call
or
inc
jnp
mov
jne
es
outs
loopne
adc
mov
sub
adc
nop
mov
push
frstor
fdivr
or
stos
mov
dec
fiadd
cmps
adc
cmp
lahf
shl
addr16
xchg
les
ror
jl
push
xchg
arpl
mov
and
xlat
lods
sub
imul
data16
sahf
shr
fs
call
std
mov
cmps
ret
pop
data16
imul
inc
xchg
jb
movs
cwde
setae
xor
push
imul
pop
ins
aaa
adc
push
je
adc
stc
outs
sbb
aam
dec
mov
cmp
test
mov
outs
inc
inc
je
mov
xchg
leave
nop
inc
xor
popf
adc
jge
leave
cmp
jl
inc
sub
mov
shl
imul
out
push
retf
out
adc
pop
add
cs
ds
push
(bad)
and
popf
mov
addr16
leave
loope
sub
stos
sbb
fcomp
push
xor
adc
je
adc
or
jl
mov
retf
mov
ret
or
lahf
ret
add
cmp
ret
xor
daa
in
push
mov
xchg
mov
(bad)
(bad)
xchg
fs
add
dec
or
cmps
das
push
arpl
inc
rcr
xchg
fstp
xchg
or
or
nop
add
jp
cdq
cmp
in
cdq
daa
jl
pop
ins
movs
cmp
leave
jbe
push
out
out
jnp
pop
xchg
mov
or
mov
xchg
add
pop
mov
int
dec
xor
mov
xor
std
inc
cdq
fcom
xchg
xor
or
xor
lahf
mov
jge
mov
(bad)
jno
(bad)
lahf
jg
pop
mov
cld
cs
mov
add
out
sbb
adc
cmp
push
aaa
pop
jns
es
push
adc
loopne
aad
mov
jno
dec
xor
outs
xchg
lods
out
add
ret
ins
mov
jmp
(bad)
(bad)
cmp
add
movs
xchg
xchg
xchg
imul
lock
push
and
mov
adc
mov
shr
dec
(bad)
dec
and
push
jecxz
mov
ss
ret
mov
mov
and
popf
xchg
push
inc
sbb
stos
inc
adc
or
or
leave
popf
jno
mov
push
call
jmp
ja
mov
lds
push
dec
mov
ror
lea
test
and
sbb
lock
cmp
xchg
ret
jb
xchg
scas
adc
pop
push
lea
hlt
scas
pop
(bad)
fstp
mov
popa
repz
xchg
in
cmps
jns
xor
call
cmps
mov
mul
int
pop
mul
aam
push
cmps
int3
ret
cmp
dec
mov
mov
xchg
mov
push
(bad)
sbb
and
xor
(bad)
push
inc
push
pushf
icebp
scas
or
in
mov
test
jo
popf
das
int3
(bad)
(bad)
pop
and
imul
neg
push
xchg
ins
push
test
or
dec
dec
int3
push
sub
sar
sahf
sbb
pop
jns
shl
ret
pop
mov
push
and
aaa
sbb
test
cld
repz
movs
mov
push
add
pop
pop
pop
adc
mov
cmp
sbb
repnz
mov
or
bound
fwait
xchg
out
ss
stos
inc
in
dec
cmp
pop
and
into
enter
jmp
mov
leave
ret
cmps
out
mov
enter
pop
push
dec
jmp
mov
dec
arpl
add
lods
cmp
arpl
repnz
cwde
enter
aam
fmul
dec
sbb
xchg
push
cmp
loopne
imul
cmps
(bad)
push
adc
and
std
data16
adc
mov
das
test
ret
inc
imul
push
scas
stos
push
iret
in
mov
inc
test
frstor
cmp
loopne
push
fadd
push
mov
push
popa
ins
movs
mov
cli
pop
repz
pop
xor
out
adc
ins
mov
or
rcr
mov
fistp
jae
push
mov
stc
aas
call
imul
das
push
test
int3
das
xor
sub
mov
in
call
scas
into
test
jno
loope
jp
and
and
xor
stc
push
mov
fild
inc
enter
or
popf
ds
jmp
mov
dec
stos
pop
xchg
mov
mov
and
repz
fadd
or
cmp
mov
pop
xor
ss
mov
sub
fisub
cmp
adc
test
push
fwait
inc
out
movs
in
sbb
int3
lods
inc
call
jp
mov
jns
mov
jge
or
cli
stos
ins
lock
push
sbb
mov
loop
jle
dec
push
mov
movs
test
mov
sbb
jb
cld
sbb
sar
cdq
jo
arpl
cs
cmp
outs
movups
lock
(bad)
fimul
retf
xchg
and
adc
inc
jmp
test
jnp
int3
in
sub
or
xor
scas
and
(bad)
cmp
dec
and
inc
fst
gs
aam
loope
and
mov
cmp
rcr
ret
cli
jbe
push
fwait
pop
adc
xchg
pop
lds
ucomiss
pop
mov
add
sub
or
cmp
loope
lds
sub
sbb
inc
cdq
sbb
stc
fdiv
daa
fwait
xchg
push
push
test
daa
push
sbb
xchg
fbld
pop
xor
add
cmp
pushf
and
enter
push
push
or
pusha
push
outs
sbb
fdiv
add
adc
adc
lods
pop
(bad)
loopne
dec
mov
pop
sbb
cmp
popa
dec
cmc
sub
ret
mov
mov
and
rol
add
in
or
adc
clc
fild
and
jp
and
or
imul
sbb
push
mov
stos
loope
scas
out
pop
adc
cmp
mov
(bad)
ss
push
retf
into
call
jno
adc
daa
and
lds
addr16
dec
int
inc
jnp
inc
clc
mov
popa
nop
jno
and
mov
retf
por
scas
dec
dec
dec
mov
stos
movs
popa
sbb
movs
out
mov
jne
and
sub
push
mov
mov
(bad)
repz
loope
in
cld
popf
jle
sub
mov
mov
jecxz
add
arpl
xor
scas
xor
jnp
mov
inc
ins
cmp
mov
lsl
imul
mov
shr
cld
fwait
adc
mov
in
addr16
mov
add
ficom
(bad)
sbb
push
mov
pop
dec
enter
pop
sti
mov
loopne
ins
mov
outs
pusha
fld
je
cmp
loopne
pop
mov
and
in
or
xchg
fs
clc
adc
ins
retf
leave
add
sbb
adc
loop
jle
mov
push
inc
cld
inc
inc
repz
cwde
pop
fidivr
push
call
(bad)
arpl
shl
loope
pop
cli
call
cli
test
mov
add
sbb
add
nop
test
push
in
cwde
das
sub
fstp
bnd
jo
neg
xlat
jns
sbb
inc
or
push
inc
sub
dec
and
jae
nop
fnstcw
test
lock
jno
jnp
pop
inc
add
xor
in
(bad)
out
out
movs
mov
loopne
and
(bad)
bound
pop
xchg
add
dec
xor
sub
xor
out
push
pop
fist
cmp
jo
mov
sub
xchg
repz
inc
fimul
(bad)
ss
pop
cbw
jae
and
xor
sbb
sti
retf
movs
call
mov
leave
out
mov
xlat
xchg
cmp
into
in
mov
xor
cld
add
leave
cdq
in
jo
fidiv
adc
mov
mov
pop
mov
xchg
cmp
mov
mov
dec
xor
lds
and
push
adc
xor
or
mov
dec
push
ja
(bad)
xor
mov
jmp
movs
sbb
push
loopne
adc
jno
mov
rcr
push
add
pop
into
repz
stos
fisubr
call
mov
inc
cld
into
mov
sahf
pop
mov
ror
push
lock
xor
fistp
fs
mov
fidivr
mov
inc
xchg
cwde
push
and
aam
loopne
pop
jb
adc
into
lock
enter
lods
bound
out
dec
in
push
and
(bad)
cmp
stc
dec
add
mov
pop
add
call
pop
push
xor
je
aad
shl
jo
xchg
(bad)
ss
sbb
int3
and
je
sti
clc
ja
mov
shl
enter
cmp
push
(bad)
cmp
dec
sbb
mov
mov
daa
dec
xor
js
jecxz
inc
das
and
sub
xchg
mov
fiadd
or
sub
clc
sti
ins
dec
push
xchg
pushf
fbstp
mov
fdivr
and
mov
mov
pop
pop
push
xor
xor
ror
sbb
js
jecxz
push
aaa
inc
mov
mov
test
push
pop
ja
adc
cdq
dec
stos
cmp
jg
aam
mov
xlat
mov
cli
cmc
mov
popf
add
inc
pop
cdq
das
mov
fwait
add
stos
xor
sahf
or
inc
jns
aam
leave
adc
pop
hlt
mov
add
scas
ja
xor
movs
xchg
dec
rol
mov
sub
sbb
je
imul
inc
rol
or
push
push
mov
shl
cmp
and
pop
outs
mov
inc
cmp
mov
dec
add
ficom
int
aaa
lahf
das
stos
xor
je
into
jp
and
rol
sub
out
add
daa
xor
clc
ins
shr
loopne
addr16
jb
ror
lahf
pop
jge
js
out
mov
test
jle
pop
cli
sti
lea
sahf
jne
jns
std
out
das
xchg
addr16
out
xchg
jnp
adc
int3
inc
or
(bad)
idiv
bound
mov
and
fmul
cdq
mov
std
xlat
xchg
scas
ret
sbb
test
in
movs
add
sub
stc
pop
imul
cmps
mov
ins
retf
ficom
cmc
mov
dec
inc
loope
std
jmp
xchg
(bad)
sbb
pop
bnd
or
popa
xor
jecxz
(bad)
je
rcl
pop
xchg
or
jl
push
dec
aas
xchg
mov
sub
dec
out
call
sbb
dec
push
movs
pushf
cmp
scas
or
dec
adc
cmp
xchg
mov
frndint
or
fwait
add
pop
add
inc
push
addr16
(bad)
icebp
fwait
sub
jge
bound
pop
xchg
mov
add
push
inc
out
test
fisub
mov
mov
mov
dec
jle
add
jl
jle
or
dec
dec
stos
lods
fisttp
lods
add
dec
pop
nop
shl
sub
cmps
out
pop
pop
push
nop
rcr
mov
dec
(bad)
clc
ret
mov
sub
(bad)
std
cdq
inc
pop
pusha
(bad)
int
inc
sbb
pop
push
lahf
stc
pusha
mov
lock
push
sub
mov
(bad)
jmp
and
ds
into
popf
je
outs
push
mov
retf
stc
cmp
repnz
push
data16
add
retf
repnz
and
dec
nop
es
jmp
outs
cdq
leave
cmps
retf
or
ficomp
aas
lea
xchg
xor
mov
shl
fcomp
nop
mov
pop
sahf
push
mul
call
dec
int
jns
fdivr
pusha
data16
pop
(bad)
push
lds
sub
repz
adc
lods
std
push
pmullw
imul
mov
xor
popa
and
cli
and
push
into
retf
xchg
pop
adc
stc
stos
pop
clc
retf
shr
push
xor
or
test
mov
sbb
(bad)
pop
fs
pop
bound
sub
fucomip
mov
add
(bad)
and
sti
cwde
push
mov
imul
sub
cs
mov
or
call
adc
push
mov
hlt
mov
popf
movs
repz
outs
pop
mov
pop
and
add
cmp
dec
cmps
xor
int3
movs
pop
mov
adc
or
xor
rcr
out
fwait
push
mov
cmp
inc
(bad)
ins
jns
jbe
int
call
jecxz
mov
test
lock
test
add
jae
mov
mov
sub
inc
and
cs
mov
adc
pop
je
pop
add
mov
xor
(bad)
push
dec
inc
outs
inc
inc
shl
aad
out
jmp
dec
shl
movs
xlat
scas
sbb
xchg
dec
push
pop
rol
push
(bad)
data16
mov
retf
fwait
out
mov
pop
sub
arpl
or
out
aas
sub
rsm
pop
retf
xor
jmp
fsubrp
push
std
loope
imul
add
ins
cmp
push
(bad)
sbb
pusha
fstp
xor
jno
jns
sub
mov
mov
outs
outs
leave
sub
adc
push
ds
inc
mov
jno
retf
xchg
mov
and
dec
stc
not
jno
jl
and
retf
pop
out
shl
xor
sbb
in
bts
lods
les
std
es
fistp
sti
or
pop
inc
and
pop
fs
cmps
push
fsub
ss
(bad)
daa
loop
mov
mov
dec
(bad)
cmc
shl
inc
pop
cmps
loope
lahf
dec
adc
dec
inc
or
and
jbe
cmp
jge
jnp
ins
aam
gs
pop
mov
rcl
adc
jmp
sub
xchg
pop
mov
enter
loope
or
stos
repz
or
xor
cmp
cmp
xlat
pop
inc
cdq
in
ins
lods
shl
in
ss
adc
lock
pop
jbe
pushf
rcl
imul
push
ret
xchg
sub
mov
dec
fimul
or
sahf
addr16
pop
cmp
inc
cmp
push
push
lea
adc
mov
ss
push
push
outs
push
add
mov
idiv
mov
stos
les
rcl
push
inc
cmps
xchg
mov
loope
ins
adc
jg
sbb
add
pop
cdq
out
inc
sub
sqrtps
fstp
mov
mov
into
sbb
repz
sbb
pop
push
jb
out
mov
push
jmp
or
cdq
sub
sub
or
or
shr
xchg
aaa
xor
pop
es
iret
popf
inc
xchg
imul
ja
lods
xlat
lahf
xchg
pop
or
or
das
out
push
inc
test
pop
out
out
aas
jg
sbb
and
jp
ficomp
push
aas
sub
daa
or
or
xchg
jmp
mov
ja
dec
outs
icebp
aam
pop
xor
repnz
mov
sbb
xor
aam
ins
push
cmc
push
call
into
push
xchg
xor
lds
aam
test
and
jecxz
fcmovb
sub
pop
push
ror
pop
xchg
adc
push
push
jmp
daa
or
test
je
push
loope
cdq
das
or
xchg
sbb
bound
xchg
sbb
mov
adc
aad
imul
jo
mov
mov
retf
movs
fcmovbe
xchg
mov
xor
nop
lock
arpl
(bad)
cs
xlat
outs
push
sub
jmp
cmp
lods
in
cwde
adc
push
aad
mov
push
and
cmp
inc
jmp
cmove
push
(bad)
push
jnp
cmp
mov
mov
adc
leave
iret
addr16
lods
xchg
repz
shl
inc
cmps
retf
lahf
inc
(bad)
rcl
ret
and
and
ins
sbb
in
ds
sub
sbb
sub
gs
into
xor
pop
jecxz
cwde
sbb
or
out
out
repnz
mov
enter
cmp
and
and
sbb
mov
dec
or
div
mov
and
movs
adc
inc
add
arpl
push
sub
mov
sub
lahf
dec
sub
rol
leave
sbb
adc
inc
adc
xor
sbb
aad
xor
push
push
xor
cmp
adc
sub
fwait
dec
jmp
adc
or
push
test
call
push
(bad)
mov
lods
inc
cmp
stos
mov
jmp
cmp
inc
pop
retf
sub
leave
jns
jmp
stos
cmp
ret
mov
xor
mov
sbb
aad
cmp
test
or
das
or
jb
and
or
int3
cmp
lods
sbb
les
es
jno
ret
dec
mov
push
or
mov
mov
jp
(bad)
in
adc
loopne
cmps
and
inc
xchg
xor
xor
iret
fstp
jmp
sahf
dec
sub
dec
sub
lods
xor
icebp
retf
stos
fisttp
movs
add
mov
and
fldcw
mov
lods
cmc
icebp
xchg
mov
aas
or
sbb
jp
rol
push
or
xchg
sub
mov
fsin
pushf
lea
(bad)
cmps
rol
xchg
inc
jo
jae
mov
dec
addr16
add
ins
or
mov
dec
xchg
pop
mov
adc
cmps
push
adc
push
call
loopne
sub
pop
sub
in
cmp
inc
(bad)
xor
sbb
lock
dec
dec
sub
(bad)
in
cmp
out
dec
leave
push
cmp
mov
into
lea
lea
push
leave
aam
jmp
adc
cwde
popa
int3
xchg
sub
xor
fcom
or
aaa
and
dec
cmps
dec
sub
popf
dec
or
xor
jns
int3
xor
pop
popa
rcr
xor
cmps
or
daa
push
xchg
and
jb
add
call
or
ret
or
dec
test
jae
imul
xchg
sub
arpl
call
movs
mov
arpl
inc
xor
adc
stos
xor
lods
je
in
adc
hlt
adc
(bad)
outs
and
bound
inc
repz
fldenv
adc
xor
sub
stos
mov
inc
ret
sub
sbb
and
sahf
cmp
(bad)
adc
and
js
mov
xor
stos
imul
xchg
ds
push
imul
je
xor
aad
ins
out
inc
pop
add
shl
mov
movs
aam
ret
test
enter
pop
push
sbb
out
inc
xchg
out
mov
mov
mov
or
push
mov
(bad)
sbb
cmp
add
movs
add
and
cs
push
daa
add
push
sub
dec
fist
stc
push
aam
xchg
fwait
popf
mov
test
imul
push
add
xchg
pop
popf
sub
stos
or
dec
ret
outs
cmp
push
je
dec
jmp
call
mov
xlat
xchg
stc
in
and
or
mov
mov
inc
test
adc
mov
adc
rcl
xchg
xor
inc
sahf
hlt
test
jge
ins
mov
pop
mov
cs
and
push
xchg
pusha
jbe
imul
lahf
xor
xchg
mov
out
div
mov
mov
jno
out
int3
shl
xor
int3
inc
push
push
repz
jae
or
daa
push
test
xor
je
inc
mov
jmp
mov
test
add
movs
in
test
arpl
cmps
inc
and
mov
pop
test
jle
nop
lods
sbb
dec
lods
sbb
sahf
or
mov
push
push
faddp
jns
aad
and
mov
dec
or
cmp
int
jae
push
adc
dec
rcr
pop
push
push
sahf
les
pop
and
adc
sub
add
and
jle
mov
call
cwde
nop
div
stos
pop
sbb
or
sub
xchg
mov
add
cmp
outs
movs
int3
imul
outs
jp
inc
push
jae
rcl
jl
fsub
sub
xor
adc
push
call
mov
mov
inc
jle
cmp
sub
mov
rcl
dec
gs
mov
jmp
retf
sbb
mov
arpl
sub
sbb
mov
jo
dec
dec
and
fs
imul
movs
aaa
push
imul
inc
mov
jne
mov
inc
int3
sub
lock
mov
lods
xchg
adc
aam
pop
xchg
imul
outs
xchg
loope
pop
and
or
mov
sti
mov
jmp
xor
xchg
data16
jno
or
push
call
test
push
jp
dec
loop
cmp
xor
mov
inc
sub
cmp
fdiv
mov
nop
test
test
pop
inc
and
add
movs
add
pop
push
test
ins
fwait
add
repnz
inc
inc
or
mov
inc
or
shl
inc
pop
and
loop
add
or
mov
and
pop
jecxz
inc
adc
fwait
leave
mov
mov
push
cmp
sub
shr
xchg
adc
je
xor
int3
je
dec
xchg
je
push
add
adc
xor
adc
jns
fist
or
sbb
cs
retf
lock
and
std
jl
dec
jle
inc
dec
xchg
test
xchg
adc
(bad)
fild
mov
popa
mov
retf
adc
pop
movs
dec
mov
xchg
push
mov
sub
sbb
mov
sub
and
in
mov
xchg
imul
xor
fimul
rcl
ins
mov
adc
mov
loopne
and
push
and
fistp
fistp
stc
push
adc
push
stos
ins
in
cdq
cli
xor
add
mov
rcl
fisub
addr16
ins
cld
fsubr
aam
fs
mov
mov
js
jbe
dec
add
idiv
out
xchg
and
fst
fisttp
mov
jecxz
loop
mov
or
pushf
ja
outs
adc
std
adc
jge
leave
sbb
aam
aas
mov
sub
xchg
sbb
mov
mov
cmps
mov
dec
fild
cli
fs
mov
pop
leave
xchg
pop
add
and
add
push
cld
push
and
gs
retf
call
nop
and
adc
lea
mov
xor
repnz
pop
sbb
ja
sub
xchg
adc
add
mov
inc
mov
sub
pusha
aas
or
inc
cmp
cmp
aam
stos
mov
shl
and
mov
inc
fucomi
lods
movs
inc
inc
fadd
ins
icebp
cmp
inc
mov
mov
mov
jae
and
xchg
dec
dec
mov
sub
cmp
test
sbb
(bad)
xor
xchg
mov
push
xchg
div
imul
inc
cmp
add
es
fisubr
cdq
call
in
js
push
jnp
outs
clc
xor
sbb
lahf
imul
or
arpl
xchg
add
aam
(bad)
cmps
adc
lahf
xor
jnp
cmc
(bad)
sar
scas
add
cmp
(bad)
cdq
ficom
xor
adc
icebp
push
push
(bad)
lea
cmp
dec
mov
xchg
movs
cli
push
ins
push
sahf
in
fild
scas
and
or
ins
dec
sub
data16
int3
cdq
sub
sahf
in
jecxz
xchg
mov
mov
in
imul
dec
movs
sub
xchg
and
pop
cmp
(bad)
or
cmp
sbb
adc
add
out
dec
push
dec
out
addr16
lds
jno
imul
packuswb
add
mov
cmp
mov
cli
xor
jecxz
cmp
jnp
push
je
js
mov
push
or
mov
jno
lods
fisttp
adc
mov
rcr
js
pop
add
and
add
dec
mov
jmp
jnp
test
in
xchg
(bad)
pop
cmc
cwde
aas
inc
xor
iret
dec
(bad)
push
pslld
xchg
mov
in
inc
iret
enter
xchg
jle
fist
push
icebp
ss
es
jl
dec
cs
rol
adc
adc
pop
ficomp
add
cmp
add
fsubr
or
and
xchg
out
loop
mov
add
jo
ss
inc
cmp
cmp
mov
pop
sbb
(bad)
inc
in
inc
dec
fist
jmp
xrelease
ins
mov
and
jne
push
sub
sub
cmp
cmc
add
(bad)
call
setl
fwait
shl
xchg
popa
xor
push
or
loope
add
out
pop
les
pusha
or
test
jnp
shl
push
mov
xor
push
repnz
fcomip
xchg
into
inc
xor
sbb
mov
xlat
outs
test
pop
outs
xor
out
mov
iret
icebp
jnp
(bad)
xchg
mov
xor
sub
mov
mov
or
mov
xchg
sub
ins
mov
adc
adc
pushf
sub
lahf
stos
mov
fldlg2
jo
xchg
adc
fidiv
mov
mov
cmp
sbb
mov
mul
mov
push
in
push
scas
je
pop
pop
jo
loopne
imul
add
stc
and
jle
jne
into
jmp
xor
inc
xchg
movs
adc
(bad)
push
mov
dec
mov
cs
nop
mov
popa
push
inc
push
cdq
pop
mov
cdq
sub
dec
lods
repnz
push
add
mov
xlat
mov
inc
lods
ins
or
push
(bad)
mov
test
ds
pop
sub
mov
inc
dec
stc
out
fisub
in
inc
lock
ss
daa
jo
xchg
(bad)
repz
mov
fidivr
and
pushf
inc
push
std
add
mov
sbb
jne
aaa
xor
adc
fidiv
lods
mov
outs
jge
lods
mov
call
hlt
jg
sub
mov
shl
fld
into
jle
push
jo
lahf
sub
or
push
das
mov
in
aas
je
sbb
push
inc
dec
xchg
push
clc
push
fnsave
adc
jb
imul
mov
pushf
popa
ret
mov
mov
inc
pushf
xchg
ja
movs
inc
cmp
scas
iret
jns
sub
loopne
bswap
rcr
sbb
or
inc
hlt
jno
mov
stos
jg
jb
dec
sub
mov
movs
mov
mov
pop
div
sahf
cli
dec
mov
push
(bad)
(bad)
in
adc
dec
cli
(bad)
call
test
clc
jo
sti
add
repnz
out
xchg
(bad)
repz
pop
jbe
sahf
xor
(bad)
dec
int3
fist
(bad)
mov
imul
mov
ins
push
inc
xor
and
nop
outs
cmp
imul
retf
mov
out
mov
test
mov
dec
in
cmp
jns
ffreep
iret
and
and
ficomp
in
pop
std
mov
push
push
ss
stos
xor
lods
shl
fdivr
fldln2
loop
retf
inc
int3
sub
out
repnz
xlat
fist
loop
iret
jecxz
lea
mov
pop
jno
scas
arpl
jl
pop
cli
push
jae
mov
mov
add
fild
jnp
pop
inc
cld
pop
js
jg
fmul
sub
sbb
std
fcmovu
jmp
aam
mov
inc
mov
(bad)
stc
fwait
sbb
rol
mov
inc
mov
jb
loopne
mov
dec
cwde
loopne
fidivr
cmps
inc
xchg
dec
bndldx
xchg
add
je
addr16
scas
push
std
fsubr
in
stos
dec
pop
ret
rcr
stos
shr
loopne
jp
sub
and
xor
out
pop
mov
repnz
ficomp
lds
out
cmp
dec
xor
popa
pop
mov
aam
xlat
hlt
pusha
ret
xor
rcl
fnstenv
jnp
aas
sbb
iret
mov
jg
xchg
sbb
in
xchg
call
jge
jl
arpl
stos
cmp
xchg
add
out
gs
mov
xchg
or
lods
retf
ja
fs
stos
sub
and
outs
jg
leave
pop
mov
xchg
pop
sbb
inc
pop
test
and
sub
or
xchg
push
pop
mov
js
std
imul
sahf
sbb
inc
fistp
iret
mov
jnp
dec
outs
inc
dec
iret
add
add
xchg
cmp
scas
test
daa
cmc
dec
xor
test
adc
xchg
jbe
cmp
rcl
sub
stc
int3
jle
fsqrt
push
mov
clc
dec
jae
inc
jg
bound
sar
lock
scas
nop
loopne
sti
and
enter
les
(bad)
and
add
outs
pop
dec
jmp
pop
sbb
xchg
fild
int
or
cli
mov
dec
lods
pushf
not
pop
test
mov
test
les
jns
jecxz
ror
and
push
sbb
adc
add
stos
jo
aas
cmp
pushf
pusha
cmps
daa
xchg
cmp
fnstsw
mov
sub
and
dec
pusha
sbb
xor
add
add
push
push
jns
iret
or
cmp
imul
int
push
mov
lods
arpl
shr
pop
jge
jb
pop
inc
aaa
jmp
jb
sbb
shl
outs
mov
imul
mov
fsubr
iret
pop
shl
mov
sub
add
ret
sub
shl
into
jl
mov
icebp
and
inc
shr
sub
push
add
mov
pop
xor
retf
mov
std
push
jbe
xchg
cwde
lahf
xor
(bad)
shr
jbe
add
dec
mov
push
rol
outs
jle
lods
ss
sub
adc
loope
mov
pushf
ins
icebp
add
cmc
add
pop
mov
dec
lock
fs
add
pop
mov
mov
push
lahf
in
push
mov
dec
pop
adc
sub
push
add
lds
add
add
dec
pusha
rcpps
xlat
adc
add
mov
aam
mov
aas
push
sub
push
xlat
jl
mov
or
(bad)
div
push
cwde
push
scas
js
shr
push
das
test
xchg
(bad)
jnp
add
jg
(bad)
ret
leave
ss
aaa
ja
pushf
jae
jbe
xor
cmc
enter
pop
jb
sbb
push
push
push
mov
xchg
loop
les
ins
shl
fcomp
outs
or
(bad)
int3
fst
mov
xchg
mov
cmp
std
jne
dec
cmp
ror
pop
inc
cli
call
aad
fnstenv
dec
popa
out
lea
in
pushf
iret
and
jp
pop
pop
ins
jge
add
fld
pop
mov
in
inc
and
jno
cmps
nop
cmp
mov
mov
sub
jge
inc
loop
dec
(bad)
jmp
popa
loope
jns
fild
outs
test
pop
sub
adc
fld
or
je
mov
pop
jbe
pop
fnstsw
fsubr
jle
pop
mov
sub
xchg
xchg
push
retf
out
ins
mov
push
ror
dec
cmp
push
fsubr
pop
xchg
cmp
aaa
push
dec
arpl
out
mov
das
xchg
rol
ret
or
or
cmp
inc
sbb
(bad)
(bad)
xchg
and
rcr
not
or
clc
dec
add
call
dec
clc
loopne
push
std
fidivr
adc
mov
sub
int
mov
sbb
sar
pop
mov
sub
mov
mov
shr
repnz
or
mov
adc
pop
clc
movs
repnz
jno
inc
mov
jge
out
(bad)
sub
icebp
data16
or
sub
popa
(bad)
cmp
lahf
outs
repnz
test
aaa
mov
aas
mov
and
sar
out
lds
aaa
cmps
pop
sub
mov
push
(bad)
(bad)
aaa
mov
call
and
popf
push
jg
or
aad
adc
jecxz
xchg
pop
daa
jecxz
pop
sbb
into
cmp
mov
lods
ins
cmp
cli
sti
mov
aad
push
sahf
(bad)
sbb
scas
jno
sti
shl
and
mov
lea
(bad)
clc
add
pop
fbld
ins
add
movs
or
mov
cmp
or
call
mov
jp
stos
add
daa
cmp
imul
(bad)
dec
test
jge
loope
int
ins
nop
cdq
(bad)
div
adc
ss
pop
push
and
sbb
add
mov
sbb
sti
mov
cmp
in
push
xchg
les
fcomp
push
mov
inc
push
cmps
push
das
mov
pop
sbb
jne
aaa
sti
xor
push
pop
call
fsub
sub
clc
int
call
cmps
and
xor
dec
ds
jmp
jmp
les
mov
fistp
scas
aad
adc
adc
xchg
xor
fisubr
scas
add
cli
loopne
into
out
lock
mov
mov
movs
das
mov
pop
fwait
cmps
popa
ds
hlt
je
adc
xchg
(bad)
popa
pop
pop
daa
mov
jg
inc
icebp
mul
or
mov
rol
mov
adc
ret
ins
xchg
rcl
fldcw
gs
nop
repnz
stos
je
test
lock
xlat
retf
lahf
dec
inc
mov
mov
mov
stos
pop
das
fucomip
mov
push
aad
stos
lahf
mov
daa
rcr
xor
jl
sti
cmp
ffreep
test
clc
mov
mov
mov
sahf
mov
fisub
sbb
fisub
and
sub
leave
cmps
pushf
repz
fs
xchg
es
dec
xor
and
jnp
pop
mov
jno
jbe
jmp
mov
icebp
pop
add
mov
imul
ja
fstp
int3
(bad)
inc
add
dec
stos
xor
test
retf
sti
dec
adc
cs
or
mov
cdq
icebp
adc
xchg
sbb
rcr
ds
cmps
fldcw
mov
mov
shr
or
test
mov
cmp
std
inc
inc
pop
out
adc
retf
mov
aad
ins
sub
mov
call
jmp
push
in
mov
out
add
dec
pop
mov
add
lahf
mov
push
rcl
lods
movs
inc
fsubr
fisttp
cmps
jns
imul
add
(bad)
cmp
repz
xchg
(bad)
xor
sahf
push
add
ds
mov
repz
cmp
push
ror
out
mov
enter
sar
cmp
sar
dec
out
push
mov
jbe
fs
js
mov
add
inc
add
push
bnd
shl
pushf
fiadd
jns
jb
pop
add
imul
ins
xlat
into
push
dec
lahf
jo
xor
jge
add
add
fistp
pop
cmc
ja
jl
dec
iret
and
push
outs
adc
test
push
scas
mov
jb
ret
loope
push
stc
push
ins
and
pop
add
into
outs
test
imul
mov
push
int
jle
mov
movs
cmps
add
shl
std
je
dec
mov
xor
dec
leave
pop
xor
sar
aas
ja
and
popf
outs
in
sub
inc
sar
pusha
add
cs
ficom
leave
test
dec
(bad)
shr
adc
pusha
into
pop
sbb
or
cs
imul
ins
mov
imul
sub
pop
movs
stc
jle
cmp
scas
lock
push
outs
stos
mov
pop
addr16
sti
or
mov
jg
xor
sbb
leave
rcr
imul
fnstsw
xor
ror
out
int
xor
fist
outs
repz
shl
xchg
jbe
(bad)
pop
cmp
repz
je
daa
fs
xor
pop
or
adc
push
lea
pushf
and
push
xchg
inc
jnp
stc
loop
arpl
iret
js
jb
mov
sahf
cmp
lds
push
jmp
push
mov
dec
test
mov
clc
xlat
cmp
inc
pop
test
push
add
jns
out
sbb
jbe
add
xchg
dec
data16
scas
sbb
mov
mov
je
imul
icebp
int
push
mov
repz
dec
mov
lea
js
sbb
and
xchg
jnp
or
je
(bad)
mov
fadd
adc
outs
mov
idiv
add
fldenv
hlt
daa
test
push
jb
ror
cmp
(bad)
xor
inc
aad
cmp
ficom
inc
(bad)
aas
(bad)
cs
jge
mov
mov
sub
or
dec
dec
fisubr
sbb
adc
call
fld
daa
mov
jo
xchg
fwait
cwde
sbb
mov
add
mov
jo
(bad)
sar
jecxz
outs
xchg
repnz
dec
adc
adc
push
adc
jl
in
fsubr
mov
xor
cmp
jnp
push
push
mov
jne
pop
mov
xor
loopne
xor
inc
jmp
cmp
fdiv
cld
retf
mov
cmc
jae
mov
cmp
(bad)
and
scas
inc
pop
adc
dec
mov
mov
sbb
dec
jb
das
pop
enter
aad
push
jg
out
cmp
sbb
mov
jl
and
out
xchg
sub
jecxz
push
rcl
mov
jecxz
push
in
push
jo
aas
jo
dec
sahf
out
mov
in
movs
outs
sbb
daa
jns
outs
test
enter
adc
jle
cld
dec
mov
retf
loopne
inc
xchg
adc
inc
push
div
jns
pop
sub
out
adc
nop
or
fistp
stos
jmp
lods
out
out
sbb
jmp
xchg
arpl
dec
repz
in
sar
and
sbb
mov
push
pop
movs
mov
and
cli
loope
xor
mov
(bad)
mov
cmp
sar
popf
int
std
arpl
(bad)
ror
and
jo
or
sbb
mov
sbb
dec
cwde
out
mov
or
shl
ins
retf
jge
mov
lock
pop
addr16
enter
or
js
sub
fstp
xor
or
or
xchg
fsub
daa
mov
xor
scas
sub
test
das
jae
pop
sar
enter
imul
and
nop
pop
xchg
xchg
aam
xor
ja
out
fstp
mov
out
(bad)
jbe
je
and
fdiv
shl
sbb
or
(bad)
fst
scas
outs
daa
jmp
in
aaa
mov
mov
adc
jnp
sbb
rol
jmp
dec
es
mov
nop
inc
xlat
ret
mul
mul
stos
mov
dec
xlat
mov
dec
mov
jp
mov
pop
and
shl
or
cmp
push
jne
xchg
call
or
imul
inc
push
pop
or
xlat
shl
stos
sbb
cmp
xchg
test
jmp
pushf
aam
xchg
jns
mov
rol
test
pop
cmp
or
sub
sbb
cmp
addr16
ss
pop
lods
or
push
adc
mov
or
add
stos
stos
stos
rol
lds
jp
scas
push
cmps
sbb
movs
jge
push
sbb
adc
leave
(bad)
and
pop
pop
dec
adc
xchg
jmp
les
popa
xor
call
into
aad
xor
das
jb
ss
push
fwait
retf
sbb
imul
inc
inc
add
outs
xchg
lock
test
adc
lods
inc
xchg
sub
sbb
sub
pushf
pop
dec
xlat
leave
mov
dec
cmp
loopne
or
inc
jge
mov
mov
and
xor
call
push
int
sbb
or
jne
mov
lods
jb
jns
xchg
or
pop
ret
or
xchg
xor
das
ins
xor
push
into
sbb
push
or
cmp
pop
and
sti
sub
xchg
mov
stos
jnp
lods
outs
daa
adc
test
rcr
nop
and
jns
adc
popa
scas
cmp
adc
sub
mov
cmc
xchg
mov
xor
loop
pop
lds
add
jo
dec
test
jmp
loope
not
xchg
arpl
cmp
ss
sbb
and
test
pop
jmp
push
imul
popf
or
sub
or
or
sub
std
ret
(bad)
sub
cmps
pushf
sbb
stos
test
xchg
pop
sub
imul
rcl
movs
aad
arpl
clc
xchg
and
mov
in
xlat
fisttp
mov
imul
dec
pop
lock
fsubr
mov
test
loop
pop
jge
sub
mov
inc
out
loop
ss
ficom
mov
push
sar
inc
mov
bnd
fidiv
cmp
sbb
cmp
jle
fiadd
jne
xor
pop
mov
push
inc
shl
sbb
xchg
inc
call
scas
xchg
mov
adc
shl
and
lahf
stc
xchg
cld
aam
mov
sbb
mov
aaa
cli
ss
push
jmp
movs
ja
jmp
sub
jl
scas
ss
cmp
ins
retf
jl
addr16
test
mov
enter
imul
mov
aad
(bad)
aam
inc
jle
(bad)
cdq
or
push
dec
xchg
add
call
add
in
pop
out
aad
pop
xchg
sub
xchg
dec
cmc
jecxz
jmp
cmp
add
mov
imul
mov
jne
and
mov
(bad)
xchg
xchg
pushf
jmp
lea
aaa
cmc
mov
jmp
pop
pop
clc
sub
jnp
pop
lods
push
inc
ins
sbb
xchg
add
mov
(bad)
icebp
push
sbb
add
shl
cmp
(bad)
jnp
std
mov
(bad)
out
mov
jbe
popa
idiv
mov
push
dec
call
aas
mov
mov
es
sub
jl
fisubr
mul
call
mov
ja
mov
ins
sbb
sar
std
out
in
in
xchg
dec
xor
pop
aas
mov
inc
inc
out
rcl
lahf
jns
inc
lock
mov
mov
cmp
push
icebp
jne
(bad)
mov
test
or
in
xchg
lock
or
inc
add
pusha
jle
ins
fbstp
jae
lock
or
outs
inc
jo
push
call
pop
and
out
pop
ret
fmul
sar
jp
jmp
shr
dec
mov
lea
pop
fldenv
and
xchg
imul
mov
ss
stos
mov
data16
fsub
mul
std
cmps
clc
jno
mov
ds
jns
inc
xor
jno
push
test
test
bound
scas
push
retf
push
fwait
mov
fs
cld
inc
ja
hlt
jnp
in
sbb
push
ds
mov
or
ret
and
fild
jecxz
adc
push
ja
xor
in
stc
push
(bad)
mov
jne
cld
jne
repnz
xor
xlat
inc
rol
fstp
pop
addr16
fwait
mov
ss
mov
jg
sbb
mov
cdq
mov
cmp
aam
loopne
sahf
pop
jnp
cmps
mov
pop
xchg
push
mov
or
push
sub
nop
pop
adc
sbb
das
inc
lds
jecxz
das
adc
and
ins
adc
mov
cmps
neg
or
jl
mov
(bad)
cmp
scas
ror
push
scas
clc
sbb
ror
xor
(bad)
jecxz
repnz
push
jo
mov
dec
aaa
xor
das
inc
push
ja
cli
mov
dec
mov
jecxz
inc
pop
inc
aas
(bad)
mov
imul
cmp
aam
pop
inc
scas
fisubr
int3
and
fs
mov
add
sahf
into
xor
shl
lahf
lahf
gs
sbb
mov
xor
je
dec
add
adc
sahf
add
jns
jmp
arpl
cmp
jnp
pop
push
pop
jl
(bad)
sub
movs
sbb
pop
out
xchg
mov
outs
jle
mov
lock
enter
repz
ds
out
jns
je
scas
movs
lock
sbb
push
add
or
pop
xor
inc
fwait
or
dec
js
jnp
adc
sar
ds
rcl
lods
pushf
sub
xlat
or
out
ins
pop
sbb
sar
cmp
add
outs
ja
inc
jno
or
sbb
sub
xchg
fdiv
fisttp
outs
int
es
in
out
cs
pop
into
scas
jge
sbb
jecxz
inc
inc
pop
sahf
lock
xor
or
or
inc
adc
push
int3
out
mov
push
sub
out
add
arpl
and
pop
mov
nop
lahf
cld
inc
jmp
add
push
out
mov
jo
mov
ja
jmp
iret
or
cmp
jmp
(bad)
in
sbb
or
dec
or
adc
inc
cmp
push
fwait
test
stc
je
add
(bad)
mov
sub
pop
add
sbb
fnsave
(bad)
cmp
pop
pop
jae
mov
sub
cli
call
pop
lea
push
mov
clc
pop
neg
fdivr
jp
cmp
add
jmp
cmps
adc
jmp
or
mov
std
fs
rcr
test
and
test
push
inc
adc
in
pop
cmc
xor
or
and
xchg
jne
(bad)
scas
adc
lods
stos
jmp
jnp
loopne
push
mov
sbb
adc
fnstsw
loopne
repz
int
aam
stc
pop
mov
mov
imul
out
enter
popf
outs
mov
ffreep
push
sub
cwde
pusha
sbb
std
out
movs
mov
scas
adc
adc
loope
add
test
fsub
enter
mov
sbb
aaa
lds
cmp
sub
push
mov
scas
add
ins
jne
clc
outs
and
mov
push
pop
es
jl
mov
add
jle
lods
cmc
xlat
sub
pusha
jmp
cmp
pop
(bad)
and
outs
call
les
test
fs
out
(bad)
repnz
dec
in
pop
out
idiv
add
jne
rcr
in
xlat
xor
sahf
adc
loope
add
xor
push
jle
pop
sub
repz
outs
add
jb
add
mov
pusha
jne
cmps
call
das
mov
pop
add
xchg
adc
jp
add
mov
add
add
adc
ins
lods
ins
mov
mov
dec
pop
loopne
add
in
mov
push
push
mov
push
loope
idiv
in
cwde
mov
sbb
and
(bad)
shl
mov
pop
mov
out
(bad)
cdq
add
mov
or
pop
jns
(bad)
shl
pop
pop
mov
test
pusha
push
pop
adc
cwde
jmp
pop
inc
outs
fsubr
add
or
mov
cs
dec
adc
ret
inc
data16
and
push
dec
sbb
das
in
fisubr
lods
cmp
mov
clc
fbstp
mov
adc
adc
inc
mov
dec
push
inc
cmp
mov
movs
mov
push
scas
retf
push
inc
add
add
fs
pop
lds
fdiv
push
lods
xor
cmp
mov
mov
xchg
cmp
xor
in
xchg
int3
mov
and
sub
sub
pop
cmp
data16
(bad)
pushf
lock
(bad)
sbb
pop
mov
ja
outs
test
dec
fstp
sub
call
adc
in
jb
sbb
das
in
js
call
inc
pop
push
inc
jecxz
inc
or
mov
imul
out
push
loopne
pop
sbb
mov
ror
inc
inc
int
push
sar
mov
xor
push
ins
arpl
mov
cmp
pop
and
test
aam
cwde
jp
into
rol
out
imul
fmul
test
or
(bad)
ins
cmp
cmps
scas
mov
mov
jmp
push
dec
shl
jl
sub
mov
push
fdiv
shl
scas
aam
push
dec
jbe
sti
call
mov
pop
scas
das
not
ror
lahf
pop
mov
test
xor
retf
or
xor
push
leave
out
imul
pop
cdq
sti
pop
xchg
in
cs
pop
data16
jnp
hlt
loope
xlat
loop
cmps
fsubr
pop
jne
(bad)
jo
jnp
mov
mov
popf
xchg
lock
retf
mov
stc
sbb
lods
push
repz
jmp
arpl
add
or
sbb
pop
mov
sub
xchg
nop
in
jle
push
or
dec
pushf
and
arpl
rcr
sub
int3
lock
imul
icebp
mov
dec
xor
das
cmp
inc
ins
push
mov
in
jecxz
sbb
pop
inc
idiv
inc
xchg
jp
mov
dec
aas
loop
repnz
shl
add
std
pusha
outs
cs
call
mov
js
or
push
xchg
adc
xchg
addr16
test
sbb
inc
and
(bad)
leave
sbb
xchg
mov
pop
leave
out
push
xchg
adc
add
into
or
mov
pop
mov
dec
pop
fwait
jb
mov
xchg
sar
mov
push
sar
fsub
test
in
stos
adc
scas
fst
shl
retf
xor
pop
test
mov
jmp
sbb
into
mov
push
mov
cs
jo
pop
jp
push
scas
out
mov
or
mov
shl
popa
icebp
pop
dec
dec
inc
xchg
cmc
cmp
cmp
imul
sub
sub
dec
or
jae
jge
test
mov
(bad)
pop
sub
popa
test
scas
dec
loopne
push
pop
outs
bound
jae
call
mov
xchg
sub
icebp
dec
cmp
movs
mov
inc
mov
jmp
push
sbb
pop
push
cmp
in
xchg
push
shl
push
inc
enter
test
jae
mov
js
push
sbb
out
movs
or
dec
imul
push
sub
adc
jecxz
or
push
xor
add
xchg
mov
sub
push
cwde
xor
add
pop
das
stos
pop
ja
xchg
movs
nop
xchg
mov
es
inc
dec
xor
mov
loop
(bad)
mov
ins
clc
loopne
ins
and
retf
jo
repz
jmp
cmc
cs
mov
lds
in
and
xchg
mov
jle
es
mov
stos
mov
popf
imul
imul
aam
xchg
mov
add
dec
mov
ror
fstp
push
pop
fimul
dec
enter
popa
test
sub
sbb
pop
jo
dec
push
and
lahf
daa
jle
pop
aaa
xor
dec
movs
push
mov
mov
push
mov
dec
pop
sbb
movs
in
push
js
test
sub
xchg
xchg
sar
sub
xchg
(bad)
dec
push
dec
loope
push
cmps
pop
(bad)
mov
jmp
push
mov
addr16
and
rcr
out
xor
inc
dec
jmp
fidivr
cs
xchg
std
sbb
pop
xchg
mov
lods
fld
pop
in
push
jp
pop
ficomp
loope
les
jno
lahf
push
adc
outs
cdq
cmp
loopne
and
xor
pop
sub
mov
dec
imul
and
in
sub
add
scas
(bad)
int3
xor
inc
mov
push
iret
sbb
shl
call
test
jle
jl
fld
or
and
loope
test
cld
ja
shr
stos
sub
mov
adc
adc
push
jmp
push
push
cmps
dec
ds
sub
sahf
inc
pop
sbb
xchg
jl
nop
push
mov
push
and
int3
xor
lods
push
(bad)
jb
cmp
aas
sbb
sub
std
jno
and
rol
(bad)
or
mov
stos
sub
mov
xchg
jnp
in
xor
nop
pop
test
dec
sbb
std
push
push
retf
push
sbb
inc
jns
or
les
fmul
xchg
pop
add
mov
out
cmp
in
jo
jl
out
mov
sbb
add
cmps
inc
or
arpl
in
pop
ror
lahf
mov
inc
sar
in
add
fs
add
xchg
pop
ds
mov
pop
jge
push
dec
add
mov
xor
cmc
mov
xchg
push
sub
adc
dec
jmp
retf
xchg
adc
popa
mov
sub
(bad)
loop
sahf
lds
ins
mov
js
arpl
outs
fnstenv
sahf
mov
bound
jno
(bad)
dec
mov
(bad)
leave
mov
or
add
les
cmp
loopne
fisttp
call
xlat
or
pop
in
pop
scas
or
scas
fstp
test
cmp
mov
adc
inc
in
mov
adc
or
fild
aaa
lods
push
inc
push
sub
pop
pop
xchg
adc
adc
xchg
addr16
addr16
jl
out
adc
sahf
dec
cmp
lods
adc
sbb
outs
pop
fdivr
xor
iret
cmp
lea
jne
cs
std
retf
and
push
mov
dec
sti
pop
xchg
pushf
xchg
iret
aaa
or
loope
cmc
add
inc
scas
fadd
push
sbb
sbb
stc
xor
not
push
or
leave
inc
(bad)
or
adc
dec
dec
(bad)
lahf
dec
add
or
nop
fbld
dec
not
lods
pop
je
xchg
(bad)
lods
and
mov
in
sub
lods
cmp
and
out
mov
pop
mov
mov
retf
sub
pop
in
pop
cmp
push
int3
mov
pop
inc
pusha
sti
mov
inc
call
sbb
jb
adc
xlat
lods
mov
jae
sub
push
(bad)
dec
addr16
leave
cmp
push
mov
pop
jmp
call
repz
xchg
push
xor
stos
jecxz
inc
cmp
lods
xchg
icebp
sub
cmp
lahf
jb
inc
scas
pop
sub
mov
and
call
or
mov
jae
lea
bound
aaa
(bad)
test
fwait
(bad)
ss
or
jbe
pop
push
xchg
adc
out
pop
mov
pushf
mov
dec
cmp
lods
js
div
sahf
mov
cmp
sahf
dec
sub
sbb
aaa
push
adc
mov
aaa
in
pop
and
pusha
pop
push
pop
gs
pop
cdq
cwde
xor
int
cmps
fcom
xchg
push
sub
jmp
popf
push
fwait
pop
mov
aad
in
cld
in
into
cmc
fdiv
cmps
mov
jae
test
shl
das
pop
imul
xchg
fadd
or
adc
bound
xor
jno
cmp
xchg
dec
in
sbb
mov
(bad)
das
xchg
inc
adc
push
inc
mov
mov
xor
popf
xchg
cs
int3
mov
mov
scas
pop
bound
aaa
pop
push
in
push
popf
outs
and
jecxz
mov
sub
jae
imul
mov
cmp
nop
cs
cwde
fwait
cld
cmp
and
dec
mov
call
mov
in
mov
fisub
out
push
ins
lahf
imul
jge
inc
mov
(bad)
(bad)
sub
loopne
arpl
dec
push
popa
mov
rcl
mov
hlt
sbb
xor
test
imul
or
repnz
test
repz
push
pushf
mov
pop
mov
in
inc
sub
ds
sbb
mov
(bad)
dec
push
movs
mov
(bad)
call
movs
pop
std
add
es
ins
fwait
ja
mov
test
lods
and
(bad)
lods
outs
cwde
pop
add
inc
jb
pop
push
sbb
aaa
test
fnstsw
call
dec
xor
sub
lea
inc
aad
lock
cmp
fs
adc
jno
jne
bound
mov
popf
test
pusha
lea
(bad)
outs
adc
shl
cwde
fsub
sbb
adc
or
mov
adc
push
sbb
xchg
cmp
loop
scas
aad
fimul
fcom
jbe
sahf
add
enter
sub
jae
xor
retf
xchg
ss
add
inc
sub
outs
ret
jp
jbe
aam
xchg
add
fstp
mov
call
mov
enter
cwde
inc
pop
ret
cmp
inc
cmp
data16
mov
in
shl
into
xchg
mov
pop
fmul
test
ret
aad
das
mov
test
iret
jns
mov
or
sbb
lea
mov
scas
inc
es
cmp
sub
dec
out
cdq
dec
in
imul
sti
cli
dec
mov
or
xchg
or
add
clc
pop
adc
jmp
xor
sub
add
push
out
std
mov
out
pusha
in
sbb
mov
add
addr16
ins
sbb
test
stos
push
xchg
cmp
lahf
and
dec
adc
push
adc
scas
jno
imul
add
inc
les
dec
leave
add
dec
ret
and
xchg
fsubp
(bad)
or
popa
sub
outs
rcl
lea
pop
xor
mov
and
cmp
js
cmp
mov
(bad)
popf
pop
add
xlat
pop
adc
jnp
fidiv
test
jecxz
xor
mov
je
jmp
push
xchg
add
lea
sub
scas
push
(bad)
fld
ret
stos
sub
dec
test
lods
adc
aaa
retf
xchg
xchg
sbb
sub
mov
ss
push
shl
push
push
or
xchg
and
stos
mov
test
shl
sbb
imul
movs
fsub
mov
or
out
leave
repz
ss
add
fwait
pusha
and
cmp
ror
sbb
pop
cmp
adc
pop
dec
mov
pop
inc
sub
mov
sub
ja
int3
mov
ror
dec
push
popa
int
inc
push
pop
cmp
mov
(bad)
stos
jl
popf
lods
xor
outs
jo
add
mov
out
and
and
leave
and
jp
sbb
pop
test
ret
addr16
enter
jne
test
sbb
enter
sub
jecxz
xchg
fidiv
dec
mov
jmp
retf
mov
mov
stos
int3
dec
(bad)
jno
cmp
mov
adc
or
outs
icebp
scas
inc
mov
out
int
dec
dec
das
sbb
test
sbb
xor
(bad)
fld
call
cmps
out
adc
sahf
or
add
mov
mov
sbb
data16
pop
sbb
dec
or
sbb
push
cmp
clc
push
mov
pop
xor
stos
arpl
popa
shr
ror
or
xchg
in
enter
dec
fwait
mov
cmp
ins
shl
xchg
sbb
xor
pushf
sub
mov
push
sar
or
sbb
and
push
mov
mov
adc
pop
ret
sbb
inc
fwait
imul
fsubr
fldcw
adc
ins
pusha
dec
jbe
dec
or
xchg
sub
mov
nop
pushf
lods
addr16
lods
xor
mul
test
out
enter
mov
loope
jnp
sbb
aam
das
sar
ret
xor
push
movs
scas
mov
nop
pop
in
sbb
popf
dec
iret
and
out
cmp
pop
(bad)
xchg
in
call
ins
ja
movs
adc
sub
fdivr
cld
cmp
mov
mov
not
mov
data16
cmp
push
sub
mov
jge
sub
adc
mov
or
aad
jae
push
dec
call
cld
rcr
js
jmp
or
push
mov
dec
rcl
fadd
dec
sbb
pop
call
xor
rcl
mov
mov
leave
das
xchg
adc
mov
mov
xchg
mov
sub
fild
inc
sbb
pop
push
stos
inc
jp
or
das
and
ds
lods
pop
cmp
shr
dec
shl
or
add
int3
sbb
cdq
xor
test
jl
xor
and
sub
mov
pop
cmps
dec
inc
sbb
jecxz
inc
nop
xor
test
iret
and
inc
push
out
loope
stos
es
jb
shr
movs
adc
mov
(bad)
ja
inc
add
and
xchg
bound
shl
call
shl
les
mov
sbb
pop
popa
adc
stc
xor
cld
stos
fmul
and
cs
enter
mov
mov
xor
dec
sbb
xchg
cli
push
cld
jno
and
mov
test
dec
int
in
xchg
imul
inc
int3
cdq
sti
loopne
adc
sub
pusha
or
out
gs
rcr
pop
and
jecxz
mov
mov
sub
sub
sub
inc
loop
sub
inc
leave
xchg
adc
push
outs
jl
push
xor
out
ret
ror
cs
mov
dec
adc
(bad)
cld
lea
popf
fstp
sbb
sub
ins
xor
pusha
mov
fisub
int3
add
mov
loopne
inc
jp
and
pop
xor
test
lahf
imul
jbe
dec
cmps
je
mov
lea
mov
pop
test
mov
cmp
int
pop
mov
aaa
iret
fcomip
sti
sti
push
lock
out
lea
shl
and
jae
test
jns
btr
mov
mov
push
test
pushf
dec
jle
jae
push
cmc
push
imul
fwait
xor
pusha
adc
add
test
(bad)
mov
xor
bound
xchg
inc
lock
lea
ins
dec
mov
push
cs
pop
adc
mov
fs
(bad)
fidivr
cmp
outs
or
pop
(bad)
sahf
jl
mov
dec
mov
in
mov
mov
xor
jnp
shl
jg
loope
sub
sbb
or
pop
rcr
push
mov
inc
inc
loop
add
movs
xchg
cdq
pop
test
pop
out
mov
dec
jnp
repnz
dec
shl
popf
(bad)
jns
sub
and
or
push
in
(bad)
mov
sub
xchg
retf
cmps
cmps
mov
call
add
jne
ret
jnp
cmp
(bad)
sub
(bad)
sub
sbb
inc
lods
xchg
cwde
push
(bad)
jg
inc
lock
adc
pop
mov
xor
pop
jge
ret
inc
cmc
hlt
jae
cmp
das
icebp
arpl
cmc
jns
mov
sbb
add
inc
push
stc
jp
cli
xor
rcl
inc
int3
sbb
sbb
cmps
cdq
mov
sbb
ret
mov
icebp
push
fs
inc
ret
xlat
xor
xchg
push
pop
jmp
out
scas
popf
xchg
pop
clc
push
dec
sahf
daa
cmp
fcomp
aas
jns
mov
lods
retf
cmp
mov
(bad)
jmp
into
cwde
int3
inc
ins
and
pop
adc
out
nop
xchg
outs
in
pop
add
add
inc
jl
inc
mov
lods
jg
fld
cmp
jo
pusha
xchg
mov
adc
stc
js
mov
test
(bad)
adc
rep
mov
mov
ins
dec
je
std
leave
mov
(bad)
push
call
popf
xchg
push
icebp
sar
pop
out
inc
scas
rcl
aas
dec
push
(bad)
mov
jg
cmp
jmp
dec
dec
stos
retf
xchg
pop
pop
mov
jp
xor
and
aaa
cmp
push
aas
shl
mov
rcl
retf
std
ror
lods
lahf
dec
push
jmp
add
xor
aaa
in
xchg
fst
mov
adc
jle
mov
aam
loopne
ja
pusha
sbb
nop
add
loope
cmc
movs
sahf
stos
cdq
aas
sub
(bad)
and
adc
push
mov
les
adc
add
mov
std
adc
out
mov
push
popf
or
jb
jmp
cmc
or
inc
add
nop
xchg
fwait
inc
dec
cmps
scas
push
mov
xchg
mov
dec
in
dec
fcomp
lock
jecxz
mov
into
addr16
test
push
loope
sub
inc
addr16
mov
push
arpl
ret
push
outs
je
fisubr
(bad)
lock
mov
call
ffreep
loope
cmp
and
add
jge
cmc
cmp
mov
xchg
les
nop
and
inc
gs
cli
jb
or
fdiv
cmps
add
jo
gs
inc
ret
(bad)
sub
(bad)
push
mov
dec
sub
fwait
jns
shr
xchg
inc
leave
adc
xchg
lea
sub
inc
ret
dec
pop
cmp
jge
rcl
jae
mov
push
push
out
out
fcom
out
push
jo
jae
ret
inc
imul
inc
jb
xchg
pop
call
xchg
ins
cmp
ds
jecxz
fmul
pop
repnz
mov
mov
(bad)
mov
in
and
test
jp
std
xlat
dec
idiv
jne
dec
ins
cdq
imul
add
stos
daa
pop
mov
iret
mov
sbb
pop
outs
inc
lea
pop
out
int
lahf
cmps
jbe
or
ja
loop
es
add
sub
and
cmps
mov
add
push
ret
jle
mov
lods
adc
outs
xchg
idiv
push
cmp
rol
aam
and
mov
jno
outs
xor
xchg
icebp
xchg
retf
xchg
(bad)
or
jo
xor
ret
push
out
sbb
add
pop
xchg
or
loope
cmps
mov
xor
ror
fwait
jmp
mov
jns
loope
add
cmp
add
repz
movs
rcr
adc
imul
sub
in
push
jmp
jb
sti
push
mov
pop
leave
jns
repz
loopne
mov
sbb
cwde
cdq
loop
(bad)
les
dec
shl
xchg
std
jne
dec
sub
loop
es
xor
pop
jns
dec
add
jbe
movs
test
mov
ret
aad
shr
mov
jp
jne
iret
shr
adc
aam
or
xor
sbb
rol
xchg
in
lahf
in
or
fucomip
push
in
pop
and
es
xchg
std
jge
inc
popa
dec
pop
outs
or
mov
lds
je
jge
lock
(bad)
popf
mov
sbb
call
adc
inc
js
mov
xchg
test
jl
ins
dec
addr16
out
jg
loope
sti
xor
pushf
fst
push
es
jae
lods
cmp
imul
sbb
push
fisub
pop
mov
(bad)
jp
pop
out
jns
mov
jg
adc
cwde
pop
mov
dec
out
mov
test
sub
cmp
mov
mov
mov
loopne
movs
pop
lds
addr16
rol
push
adc
cdq
fidiv
std
add
sub
and
pop
inc
cmc
mov
inc
or
fbld
push
push
xlat
bnd
cmp
cli
mov
mov
call
push
das
repz
pop
shl
cmp
imul
sbb
adc
imul
inc
dec
sbb
mov
imul
push
test
dec
aaa
(bad)
pop
mov
mov
test
jae
mov
mov
fidivr
test
cwde
mov
jle
sub
or
loop
xchg
jmp
jmp
into
fldcw
jl
not
or
sbb
inc
shl
adc
mov
xchg
sbb
(bad)
mov
xchg
gs
fsub
xchg
test
sub
or
mov
stos
out
pop
add
dec
cli
(bad)
fs
sbb
clc
je
lock
jae
push
push
pusha
rcr
fldenv
ror
xchg
sub
out
ret
outs
ins
xor
sti
and
and
xchg
inc
or
aas
cmps
jno
sbb
adc
es
fild
xchg
xor
mov
test
sbb
ret
shl
retf
enter
(bad)
neg
cmp
cmp
out
adc
and
pop
inc
les
xor
(bad)
fs
pop
inc
aam
mov
lea
(bad)
and
push
mov
cmp
inc
lea
dec
frstor
xchg
jbe
gs
in
add
cmc
add
int3
jmp
retf
push
pop
es
xor
add
fwait
pop
out
iret
in
mov
imul
push
push
push
lock
dec
mov
mov
or
mov
jmp
dec
cmps
out
jge
leave
fsubr
xchg
cs
push
adc
outs
or
and
clc
dec
jp
mul
das
jae
jbe
fsub
loope
pop
jmp
iret
out
(bad)
aas
inc
icebp
ins
sti
fs
movs
mov
push
out
gs
je
hlt
(bad)
or
pushf
sbb
xchg
shl
cli
(bad)
fwait
inc
icebp
dec
int3
mov
ja
mov
or
pop
jmp
shr
sub
fisubr
xor
jo
dec
cmp
ror
mov
(bad)
add
pushf
pop
ins
rcr
sbb
xor
jnp
imul
mov
ret
sub
adc
mov
xchg
jp
xchg
push
dec
out
loopne
hlt
push
adc
xchg
les
rsqrtps
arpl
xchg
pop
aad
paddusw
ret
test
scas
test
cdq
mov
mov
jge
cmp
pop
ficomp
push
xchg
pop
or
fsub
push
jecxz
jp
mov
mov
rol
adc
pop
mov
pop
retf
jnp
aam
or
movs
iret
aam
cmc
or
into
xchg
fwait
push
mov
xchg
es
loop
popa
icebp
mov
hlt
lds
je
mov
aad
enter
sbb
xchg
bound
loop
jbe
mov
xchg
pop
loopne
push
out
push
cmp
in
pop
and
mov
(bad)
jb
cmp
cmp
imul
dec
fld
daa
mov
outs
mov
popa
push
(bad)
adc
pop
pop
in
mov
dec
push
rol
adc
sub
lea
push
jle
call
rol
dec
repnz
or
sti
addr16
mov
dec
(bad)
mov
fistp
push
rcr
in
aam
push
sbb
xchg
sahf
int3
pop
stos
pop
call
loope
add
cmp
movs
rcr
xlat
lock
test
xor
push
mov
lds
mov
pop
cmps
xlat
xchg
in
inc
(bad)
fdiv
(bad)
ins
adc
pop
stc
add
mov
push
(bad)
mov
sbb
pop
cmps
call
(bad)
push
jns
out
cmps
jns
xchg
adc
cmps
xchg
outs
mov
shl
add
dec
adc
les
mov
popf
xor
fild
aas
int3
into
sub
mov
and
in
mov
pop
sbb
(bad)
cmc
js
mov
ficom
stc
test
out
ja
dec
cld
inc
inc
data16
fild
imul
or
cmps
mov
dec
and
sbb
add
lds
call
enter
inc
pop
retf
mov
dec
das
outs
out
add
xchg
xchg
fmulp
in
cli
jno
push
fidiv
cmps
sar
adc
ja
xchg
in
or
adc
cli
xchg
pop
jmp
fwait
xor
dec
sub
test
iret
push
les
ret
dec
xchg
cmp
mov
adc
sahf
sbb
jmp
and
cmc
push
mov
push
jecxz
jns
repnz
xor
mov
mov
adc
call
xor
sti
lods
mov
retf
dec
cli
outs
imul
repz
xor
hlt
push
mov
mov
lahf
and
and
push
popa
imul
inc
mov
push
cmp
enter
cmp
push
xchg
mov
daa
lds
pop
out
inc
and
scas
sbb
call
stc
(bad)
ds
sbb
imul
shl
mov
mov
outs
sub
xor
pushf
icebp
out
mov
cmc
xor
aam
scas
test
xor
inc
cmp
fs
adc
adc
jo
arpl
xchg
push
out
lods
mov
cs
cmp
loop
sahf
xchg
inc
fs
stos
dec
xor
movs
fbld
and
cmp
retf
js
ror
adc
test
xor
xchg
mov
jns
sti
in
cmps
repz
add
dec
clc
xlat
call
sub
xchg
xchg
mov
xchg
mov
in
fstp
cs
in
(bad)
mov
inc
add
push
out
nop
sbb
popf
or
ja
mov
pop
pop
or
inc
vpor
jge
into
push
push
inc
lods
iret
in
mov
mov
push
ret
xchg
jp
jmp
test
cmp
(bad)
in
retf
xor
imul
or
xor
jno
jb
dec
lahf
pop
xchg
test
addr16
dec
scas
(bad)
mov
mov
adc
inc
int3
and
mov
out
movs
sbb
mov
out
movs
and
cmp
int
stos
inc
icebp
xlat
inc
sub
xchg
cmp
push
pop
fstp
add
retf
dec
dec
push
sub
cdq
pop
lea
test
fucomip
movs
push
inc
fmul
test
mov
cli
push
loope
int
pusha
sub
dec
shl
and
adc
cmps
lea
movs
dec
icebp
jbe
outs
jecxz
lahf
xchg
in
out
xchg
mov
cmp
mov
fadd
shl
or
stc
scas
icebp
jae
adc
xchg
fdiv
xchg
add
sbb
idiv
ret
dec
in
mov
test
aam
and
into
and
add
and
lahf
xchg
rcr
pop
stos
inc
jp
sbb
mov
cmp
push
or
push
xor
cs
cmc
cmp
rcl
int
mov
mov
sbb
jle
xor
ss
push
aas
into
test
sub
sbb
sahf
mov
jle
fmul
sar
cmp
push
push
push
fdivrp
(bad)
retf
jecxz
add
std
icebp
cmps
fwait
mov
mov
es
repz
cli
jecxz
repz
pushf
(bad)
rcl
bound
in
xchg
mov
dec
sti
or
loop
rol
fld
mov
lahf
cmps
inc
push
mov
adc
stc
rcr
in
movs
sub
in
ins
xor
ret
add
mov
xchg
inc
pop
arpl
mov
sahf
and
lods
ds
jmp
jp
retf
or
and
ret
jge
adc
mov
fs
xor
mov
pop
ret
jmp
pop
fidivr
cmps
jb
test
cmp
fs
jge
push
test
aas
test
pop
mov
xor
ror
xor
(bad)
in
jle
out
das
cld
dec
clc
call
mov
mov
dec
cmp
mov
out
sub
jle
iret
leave
ins
xchg
enter
xchg
repnz
inc
and
dec
sub
jmp
push
and
mov
(bad)
xor
in
mov
dec
ror
retf
repz
lds
test
jo
push
les
mov
test
aas
dec
xchg
adc
inc
cld
sbb
ja
or
sub
push
push
dec
mov
cmps
fild
retf
dec
popf
cwde
sbb
dec
iret
stc
mov
mov
inc
test
in
fiadd
add
inc
adc
jl
mov
fisubr
iret
imul
test
lods
ret
ins
imul
js
popa
add
xchg
dec
cwde
inc
in
sub
sbb
pop
jo
pop
js
cs
ficom
imul
jb
add
stos
jnp
push
mov
aam
fs
pop
rcl
dec
pusha
xlat
je
out
dec
ins
adc
aaa
jle
push
adc
seta
dec
inc
fcom
fcmove
jecxz
neg
sti
dec
sbb
and
(bad)
ret
ret
cdq
cmc
xchg
popf
cmp
cmp
rcl
sub
pop
jle
ins
xchg
and
(bad)
cwde
push
loopne
push
cmp
in
repz
and
mov
xchg
cld
js
cld
cmp
or
mov
sub
out
call
movs
sub
push
push
sub
mov
mov
scas
cmp
call
inc
add
adc
outs
es
arpl
(bad)
cs
ret
or
pop
push
sub
retf
in
iret
stos
jne
(bad)
mov
pop
mov
sub
dec
test
adc
mov
lahf
ds
dec
push
retf
stc
out
sbb
je
dec
xchg
out
fwait
addr16
ins
std
inc
xor
push
jmp
into
sub
scas
movs
fcom
jp
jecxz
push
in
mov
popa
mov
mov
mov
push
jg
sti
dec
in
jmp
call
push
je
ret
add
call
pusha
push
ins
mov
mov
outs
fld
stc
out
cdq
jle
in
xchg
out
hlt
push
mov
fs
leave
stos
xor
dec
in
or
mov
inc
and
add
test
xor
mov
push
dec
dec
add
mov
test
in
mov
pop
(bad)
mov
pop
push
jmp
inc
in
inc
mov
jb
xchg
fnstcw
cmp
int
inc
sahf
xor
cmp
jno
ins
lods
mov
clc
jmp
shr
lock
test
popa
lahf
mov
mov
sbb
test
fwait
cmc
mov
addr16
popf
mov
fstp
call
inc
jmp
out
add
mov
es
ss
sub
cwde
mov
test
push
and
push
and
push
cmc
cmp
mov
hlt
xchg
cmc
sub
sbb
jns
fisubr
ja
pop
xor
rcr
addr16
push
imul
mov
inc
daa
jns
sbb
and
mov
mov
pop
push
inc
mov
repnz
jae
add
mov
xchg
loop
pop
fsub
or
jge
dec
xor
mul
rcr
sti
pop
mov
dec
rol
pushf
dec
cdq
sub
add
cmp
cmps
sbb
inc
and
mov
pop
retf
mov
aad
cmps
or
movs
or
mov
xor
xor
(bad)
shl
sub
popa
push
test
jecxz
dec
push
sub
hlt
cld
iret
mov
ret
mov
cmps
sti
inc
scas
xor
mov
pop
out
push
sar
mov
mov
xor
retf
movs
pushf
adc
(bad)
out
adc
in
add
jmp
lods
pop
and
ds
cmp
or
xchg
xor
mov
out
cdq
rcl
jp
fxch
shr
mov
in
push
push
cwde
dec
ds
enter
loope
xor
enter
test
xchg
jae
sbb
dec
adc
and
sub
ds
pop
adc
mov
push
ins
pop
daa
dec
mov
jmp
mov
ror
sbb
mov
adc
dec
ret
fistp
ret
sbb
bound
outs
push
loopne
mov
test
aad
das
loopne
nop
mov
jmp
push
int
scas
ror
pusha
or
iret
mov
(bad)
pop
mov
mov
jmp
test
and
mov
add
loope
aam
or
jp
push
push
in
sub
cmps
lds
loope
xchg
fimul
hlt
dec
xchg
popa
mov
mov
cmp
retf
jmp
enter
je
lahf
lea
xor
inc
or
push
retf
mov
cmc
(bad)
xchg
stos
jb
jle
xchg
imul
push
jmp
das
les
push
rcr
ss
popf
fnstenv
pop
pop
sar
icebp
std
inc
outs
sti
pop
imul
stos
push
lock
ds
and
repz
xchg
push
lea
sar
inc
fwait
and
push
outs
cmps
cmp
data16
retf
out
inc
xor
mov
loope
arpl
add
pop
xchg
(bad)
cmps
cli
and
dec
cdq
jae
mov
fwait
dec
fxch
les
mov
int
fwait
repz
or
and
xor
bound
fistp
and
add
xor
ja
add
aaa
xlat
lock
cmc
pusha
mov
sub
dec
xchg
aaa
jp
xor
scas
stos
cmps
cdq
xor
lds
popf
and
adc
add
mov
push
repz
lock
adc
cmps
mov
xlat
mov
cmp
enter
xlat
and
(bad)
test
mov
sub
mov
mov
fs
sbb
repz
int3
adc
jne
push
shl
xchg
mov
retf
retf
gs
xchg
jg
repnz
test
and
sub
out
loopne
ror
pushf
shl
mov
xchg
dec
adc
stc
(bad)
xlat
sti
leave
iret
jbe
xchg
int
cmps
fild
sbb
test
cmp
mov
mov
je
or
push
jb
(bad)
jmp
or
je
inc
mov
xor
cmps
mov
xlat
jge
lods
mov
or
cmp
adc
call
and
bound
ins
shr
or
fs
adc
stos
and
dec
xor
add
test
mov
pop
shr
mov
xor
(bad)
cdq
push
mov
push
jo
jno
int3
mov
and
adc
cld
sahf
mov
std
stos
jecxz
pusha
mov
cwde
mov
into
aaa
push
pop
mov
pop
adc
pushf
xor
or
and
aad
es
fdiv
adc
ja
in
adc
sbb
adc
gs
bound
mov
(bad)
jae
mov
pop
lock
adc
into
and
cmp
ins
jno
test
cwde
mov
(bad)
adc
sbb
mov
cmp
cmp
sahf
sbb
in
sbb
mov
and
add
inc
pop
and
retf
cmovns
jg
adc
or
xchg
dec
sbb
pop
add
inc
ja
mov
jnp
les
inc
pop
das
(bad)
retf
ret
aas
into
loope
sub
das
repz
push
add
and
pop
push
addr16
pop
or
sub
add
mov
test
popf
sar
sub
aas
sub
adc
xchg
pop
pop
lock
aam
and
fnstcw
retf
push
or
and
fnstcw
pop
mov
add
cmp
aas
mov
cld
call
push
iret
and
call
sahf
push
stos
lock
jmp
xchg
aam
(bad)
or
stc
enter
sahf
nop
sbb
pop
test
mov
(bad)
xlat
push
cmp
jo
ret
dec
fdivr
test
jb
pop
pop
push
ins
test
shl
in
ja
or
in
std
clc
xor
ins
bound
mov
ret
jp
aaa
push
scas
outs
popa
iret
mov
sub
inc
push
stos
int3
mov
and
stos
or
inc
inc
les
mov
mov
jns
pop
les
aad
jae
mov
hlt
jb
xor
out
push
push
test
imul
cmp
(bad)
fdivr
ficomp
je
sub
pop
(bad)
mov
es
imul
cmp
adc
mov
lds
mov
or
add
mov
jmp
inc
popa
cmc
dec
cmps
mov
ret
dec
(bad)
(bad)
sub
push
ficomp
outs
push
shl
test
xchg
push
xor
test
push
stos
dec
lds
sub
xor
jmp
xchg
cmps
test
imul
shr
xchg
stc
lods
mov
and
mov
and
arpl
xor
xchg
jns
and
xor
stos
jmp
imul
ins
or
cmp
push
pop
xchg
xchg
pop
and
les
adc
dec
dec
inc
mov
mov
std
mov
test
fs
fs
inc
ja
lods
fistp
retf
cmp
jl
aas
jno
inc
jg
mov
push
mov
pop
fcom
cmp
xor
repnz
add
lods
outs
or
popw
sbb
or
cmp
ror
pop
ja
dec
pop
add
retf
cdq
sub
out
mov
div
add
ins
fwait
daa
or
or
inc
push
dec
shr
fisub
(bad)
mov
pop
ins
les
cs
int3
loop
or
ffreep
pop
mov
xchg
adc
jg
sbb
outs
into
scas
xor
push
xor
popf
repz
aam
imul
scas
xchg
and
inc
bound
mov
pop
retf
popa
jmp
(bad)
pop
sub
add
aam
pop
jmp
shl
mov
scas
ror
fnstenv
retf
xlat
in
rol
retf
pop
test
mov
ror
jl
jb
(bad)
in
mov
cmp
inc
xchg
test
movs
or
je
xor
ja
and
pop
nop
jp
and
mov
mov
aam
mov
sub
pushf
and
retf
fisttp
aam
in
les
or
dec
fiadd
xchg
and
jb
sub
imul
fdiv
out
mov
push
push
and
dec
xchg
jl
cmc
loope
stos
dec
inc
mov
adc
jae
stc
mov
add
js
sub
sti
ret
mov
jle
adc
adc
shl
in
(bad)
and
inc
sub
add
sub
out
adc
cmp
div
aad
loope
jmp
inc
or
adc
sub
cmp
lahf
dec
sub
inc
adc
and
push
ds
aam
sub
mov
adc
mov
test
je
cmp
sub
and
mov
(bad)
sahf
dec
int3
cmp
pop
pop
test
aaa
pop
iret
dec
imul
(bad)
fcom
push
xchg
daa
mov
and
and
and
and
mov
fistp
push
jno
mov
cmp
pop
and
repz
(bad)
pop
cmp
cmps
inc
push
mov
mov
push
pop
jnp
in
jnp
cmp
mov
xchg
loope
lods
xor
mov
sbb
call
mov
(bad)
fst
ret
cmps
or
xchg
push
in
push
lahf
jb
movs
pop
pop
jecxz
mov
lea
cmp
jle
jo
sbb
ins
xor
add
jmp
(bad)
xor
(bad)
mov
xor
sub
inc
fst
ins
call
outs
cli
aaa
dec
call
mov
test
sub
xchg
into
clc
jge
jb
sbb
fadd
pop
out
mov
push
cld
sub
jmp
mov
fist
(bad)
out
cdq
aam
outs
adc
mov
pop
shl
jmp
fs
call
or
stos
push
cli
shl
xchg
xor
(bad)
mov
add
outs
div
push
cwde
ins
cmps
push
xchg
push
ins
repz
movs
out
inc
ja
fisubr
ret
mov
fs
xor
push
mov
pop
pop
daa
ror
mov
scas
sbb
cli
loopne
es
ror
(bad)
push
mov
xchg
fiadd
test
fnstcw
inc
fadd
(bad)
rol
and
and
movs
jae
ret
xchg
jo
test
lahf
push
repz
int3
lock
cmp
xor
(bad)
daa
sub
ja
das
add
sbb
adc
and
shl
jmp
xlat
add
sbb
pop
xlat
mov
push
cmc
das
out
add
jnp
xchg
repz
sbb
call
cmp
mov
ror
test
jmp
dec
cmp
add
aaa
ds
pop
inc
shr
push
cmp
aam
outs
jmp
loope
mov
cli
cmp
dec
ss
mov
(bad)
repnz
jne
lods
(bad)
outs
pop
dec
and
mov
and
and
push
lock
cmps
iret
pop
and
in
mov
mov
cmp
mov
and
lods
cmps
enter
jmp
iret
push
mov
leave
jg
cmps
loope
mov
(bad)
pushf
ins
cmp
sub
and
pushf
scas
and
pop
sub
mov
and
jo
jmp
pop
inc
mov
jecxz
and
xor
dec
mov
jecxz
leave
push
xchg
add
lods
jecxz
aas
outs
fdivr
outs
dec
daa
sub
leave
loop
adc
enter
jl
daa
rcl
mov
pop
push
pop
add
into
dec
(bad)
jb
fwait
pop
fsubr
outs
arpl
push
push
fdiv
or
ret
cli
adc
and
push
imul
xor
and
lods
or
inc
outs
mov
fisttp
mov
sub
fmul
mov
and
popa
dec
stos
sub
jae
pop
mov
sbb
cmp
shr
jne
out
push
sbb
int3
jl
sub
popa
mov
jp
out
loop
jns
pop
repz
ss
iret
push
xchg
add
or
xchg
pop
add
test
or
and
dec
mov
hlt
dec
out
and
leave
repnz
push
loop
push
retf
sti
push
shl
jno
xchg
shl
retf
cld
dec
cmps
xor
imul
inc
dec
dec
jl
shl
stos
jne
test
mov
sahf
inc
outs
aam
pop
ja
(bad)
repz
push
jg
sub
fucomp
cmc
lahf
(bad)
sar
outs
or
popa
(bad)
leave
sbb
xchg
jae
pop
dec
lock
xor
rol
sbb
sbb
mov
pop
jmp
lods
and
ret
pop
popa
or
sbb
leave
mov
(bad)
js
sar
(bad)
add
adc
pop
sbb
or
dec
test
fsubp
test
loopne
inc
cmps
jge
sub
fsubr
add
sub
sbb
xor
fild
sub
xchg
cmp
xchg
movs
adc
cmp
repz
sub
push
pop
and
push
pop
ds
mov
pop
push
adc
ins
sbb
jnp
adc
add
(bad)
hlt
add
call
jae
mov
test
mov
ds
and
xchg
lock
sbb
pop
jo
imul
retf
jb
fs
and
xchg
add
add
out
push
sub
retf
sahf
mov
test
loope
sahf
ins
xchg
fld
lock
mov
enter
stos
les
lock
and
or
cmps
cs
mov
js
(bad)
pop
sub
mov
ret
mov
mov
leave
data16
call
nop
adc
mov
sbb
rcr
mov
scas
push
lea
call
out
(bad)
sub
call
fdiv
fnstcw
cmps
adc
xor
xchg
push
aam
lock
cmp
jae
cmps
sar
stos
push
mov
arpl
jge
push
cmp
dec
pushf
in
jmp
hlt
(bad)
inc
das
xchg
int3
movs
adc
lods
push
imul
fistp
add
ret
adc
mov
dec
(bad)
mov
jne
mov
mov
dec
cmc
inc
mov
mov
stos
cmps
int3
sahf
pop
sub
mov
mov
lock
(bad)
dec
cmp
and
aas
ss
cmp
shr
ficomp
mov
cmp
and
imul
ss
scas
push
repz
add
sbb
mul
xchg
ret
ja
push
or
add
idiv
pop
in
push
xor
sbb
jo
out
aas
jge
xchg
or
sbb
push
or
cwde
inc
test
pusha
cmp
mov
inc
xor
jmp
repnz
outs
xchg
add
jmp
ds
cmp
xchg
ja
pop
xor
mov
mov
aaa
psubusw
lea
xchg
adc
pop
mov
mov
lods
mov
dec
sub
push
xchg
inc
add
jbe
not
idiv
into
imul
and
sub
push
xor
out
pop
leave
cli
or
push
mov
outs
sti
stos
or
aaa
ds
mov
cmp
inc
or
xchg
sti
and
mov
out
xor
cmp
xor
mov
clc
mov
jnp
mov
aaa
leave
cs
pusha
mov
addr16
addr16
and
mov
test
xchg
push
jg
cmp
mov
xor
(bad)
(bad)
shl
sbb
jbe
call
sar
ins
dec
pop
mov
inc
push
aaa
lea
sbb
cmp
cmp
loopne
repz
call
push
je
pop
mov
mov
into
add
mov
pop
cmp
jns
retf
jae
call
je
outs
inc
jg
mov
in
stc
ins
cld
xor
bound
sar
retf
mov
and
pop
jnp
sbb
mov
dec
dec
push
jle
call
push
pop
retf
inc
jmp
inc
fnsave
test
jne
xor
sbb
cmps
xchg
sbb
nop
jbe
xchg
daa
adc
ja
xchg
mov
movs
mov
inc
iret
mov
fidivr
dec
and
fild
in
ror
or
jl
lock
add
mov
retf
mov
adc
ja
mov
add
fidivr
xchg
sti
mov
adc
mov
xor
int
mov
cmc
mov
push
mov
aaa
push
push
dec
(bad)
mov
fisub
(bad)
hlt
inc
in
xchg
inc
push
aam
fadd
pop
test
idiv
stos
sbb
mov
xchg
rcr
sbb
push
inc
out
arpl
adc
lods
cwde
loope
(bad)
jno
adc
stos
lahf
cmp
xchg
sbb
out
mov
mov
jl
jbe
mov
cld
xchg
xchg
aaa
ret
cdq
mov
fsub
or
sub
push
int
mov
sbb
add
inc
daa
ror
movs
push
jns
and
xlat
jno
ret
stos
jne
dec
jo
inc
pop
nop
push
sbb
pop
mov
jnp
pop
sbb
sbb
arpl
fnstcw
lock
mov
push
inc
pop
push
jl
mov
or
mul
cmc
add
jno
xchg
les
inc
and
in
stos
stc
mov
push
cmp
mov
pop
in
neg
xor
or
fnsave
test
fs
jmp
mov
loopne
push
sbb
or
mov
retf
adc
or
sub
stos
arpl
out
int3
or
cmp
or
in
aaa
push
push
fild
popf
stos
dec
mov
test
jo
sub
cmp
mov
mov
mov
xor
mov
cli
sbb
jecxz
jbe
or
cs
mov
(bad)
mov
mov
inc
cmp
add
lock
add
bound
int3
(bad)
in
push
cmc
inc
sbb
cmp
into
or
fst
dec
out
pusha
cmp
leave
and
les
mov
mov
icebp
lds
cmps
push
dec
push
and
mov
xchg
xchg
mov
lock
ret
pop
out
outs
xchg
scas
adc
adc
lods
dec
sbb
push
ja
not
sub
mov
cmp
dec
das
pop
jp
repz
jge
or
rcl
ret
mov
das
inc
into
push
out
mov
jbe
mov
jmp
shl
push
and
in
into
dec
mov
or
(bad)
jecxz
test
and
mov
mov
call
fwait
jp
dec
pop
sub
nop
xor
shr
jle
pop
mov
in
push
arpl
hlt
and
adc
lods
jecxz
test
ins
or
dec
xchg
pop
push
sar
push
std
(bad)
sub
arpl
push
imul
stos
inc
adc
pop
je
sahf
cmps
cld
ja
ja
xlat
jmp
fcom
fcmovb
lods
dec
outs
bound
sbb
push
inc
cmp
loopne
retf
jecxz
sub
inc
and
jmp
cmp
(bad)
into
sahf
(bad)
lahf
mov
into
clc
cmps
add
addr16
push
adc
repz
int
inc
jo
imul
push
mov
(bad)
adc
loopne
jle
and
fucomp
and
mov
cdq
jge
(bad)
pop
rcr
cwde
jg
push
sbb
int3
pop
mov
dec
ret
mov
data16
mov
aaa
repnz
and
clc
fwait
inc
imul
ins
adc
push
scas
inc
mov
jecxz
test
dec
mov
xchg
mov
fnstcw
imul
fstp
pop
sub
sbb
repnz
push
jg
lahf
push
imul
jmp
mov
iret
dec
sbb
cld
(bad)
aas
fucomi
hlt
mov
cld
xor
jmp
fs
mov
mov
mov
jmp
fstp
inc
jg
mov
and
push
out
jbe
cmps
pop
jl
jae
mov
out
int
sub
sbb
aam
(bad)
adc
mov
jmp
xchg
pop
aad
pop
pop
pop
cwde
loop
dec
jp
int3
lds
add
cld
and
in
ret
xchg
mov
jno
adc
dec
sub
out
cs
ss
out
xor
xchg
adc
sahf
jae
jb
ss
idiv
xchg
call
adc
mov
sbb
xchg
scas
retf
cmp
sub
retf
data16
cmp
cmps
popf
pop
inc
movs
push
stc
inc
rol
xor
sti
dec
enter
ins
jecxz
fstp
jp
test
fiadd
out
pop
dec
dec
(bad)
(bad)
(bad)
mov
test
or
in
rol
shr
mov
cmps
mov
call
sahf
pusha
sub
les
(bad)
adc
mov
dec
jge
enter
ror
mov
sbb
dec
mov
out
lds
mov
in
fs
jle
in
sub
(bad)
push
cmp
adc
lock
dec
pop
mov
ret
popf
adc
sbb
(bad)
cmc
rcl
push
lds
stos
fwait
test
cli
outs
arpl
test
pop
bound
out
mov
xchg
pop
push
popa
mov
daa
sub
xor
xchg
sub
inc
mov
out
pushf
pop
in
push
ja
jmp
aaa
add
out
movs
loopne
fild
enter
mov
cld
fidivr
dec
lods
aaa
daa
loopne
shl
jbe
xchg
neg
movs
fwait
xlat
or
jle
push
mov
in
loopne
sbb
push
loop
adc
dec
shl
mov
pop
sub
pop
ficom
cmp
rcr
hlt
inc
js
mov
outs
lock
add
jp
in
ins
mov
mov
pusha
mov
mov
scas
add
je
sbb
push
dec
pop
retf
cmps
rcl
scas
hlt
dec
xchg
enter
(bad)
and
out
ja
push
jne
jns
push
repz
mov
sbb
in
dec
cmp
div
loopne
or
in
pop
bnd
and
jae
outs
lea
jbe
xor
shl
or
pop
push
fimul
imul
clc
jae
scas
and
mov
fld
jns
or
stos
mov
pop
call
lods
jl
imul
pushf
daa
in
sbb
loop
pop
std
nop
pop
pop
enter
mov
cld
mov
mov
and
push
cs
inc
fs
cwde
(bad)
jns
movs
xor
mov
aaa
hlt
lea
test
jmp
or
xor
test
sub
dec
push
stc
scas
mov
dec
xchg
xor
dec
sar
jl
inc
or
jmp
(bad)
out
mov
pop
movs
out
or
nop
arpl
sbb
test
sbb
iret
push
cmps
stos
aam
mov
hlt
jecxz
mov
push
in
mov
imul
call
call
sbb
mov
inc
push
jbe
gs
lods
idiv
ins
mov
fcom
or
out
mov
outs
clc
(bad)
mov
or
push
jbe
aad
cwde
cld
pop
xor
stos
dec
xchg
dec
inc
xchg
jae
inc
stos
mov
push
shl
sub
pop
jmp
and
add
aaa
xor
pop
lds
jns
pop
jb
mov
pop
add
inc
ret
call
adc
pushf
jo
or
test
cmps
adc
xor
les
push
cmps
fwait
push
mov
movs
push
retf
mov
adc
jmp
test
stos
fcmovnb
dec
jle
fwait
inc
push
clc
mov
(bad)
cmp
adc
in
ror
and
ret
or
jg
sbb
xchg
cmp
push
lds
xor
cmp
repnz
fidivr
or
add
or
jne
inc
aad
sub
lods
cmc
inc
pop
pop
jbe
cld
mov
retf
repz
and
mov
call
mov
mov
fnstcw
xor
or
mov
jno
mov
mov
loopne
xchg
xor
scas
dec
mov
loop
xchg
pusha
ficom
xlat
xchg
push
fdiv
and
test
sar
sbb
pop
pop
mov
inc
pop
iret
cli
mov
sbb
fwait
adc
xor
pop
int3
addr16
mov
outs
xchg
push
mov
fstp
mov
stos
fstp
pop
or
jae
fcmove
sub
popf
scas
and
push
adc
jp
dec
cwde
ins
out
xor
call
cmp
push
cdq
push
mov
repnz
ret
cmp
xchg
cmp
mov
mov
pop
xor
and
cdq
push
mov
mov
mov
popa
cmp
(bad)
call
ss
int
rol
sahf
pushf
lea
hlt
imul
cmps
ja
outs
fstp
mov
lods
sbb
enter
inc
inc
adc
sbb
fldenv
pusha
dec
stos
addr16
movs
add
jns
adc
mov
pop
lods
inc
or
jb
mov
retf
and
lods
test
and
inc
adc
gs
cmps
or
pop
enter
cmp
rol
outs
and
clc
aaa
outs
pop
sbb
ror
jbe
aaa
aam
jb
cmps
imul
sub
sbb
outs
call
mov
pop
dec
pop
stos
mov
lahf
mov
sbb
mov
lfs
retf
or
pop
out
dec
stc
es
inc
mov
push
bound
inc
inc
mov
inc
pushf
jmp
ins
adc
lea
lods
sti
sbb
jl
push
std
mov
shl
xor
mov
loop
dec
adc
scas
scas
in
lods
in
mov
adc
std
sti
xchg
jbe
sbb
cmp
loop
in
mov
pusha
sbb
jge
mov
add
push
in
fnstcw
lods
sti
mov
mov
mov
je
ret
stos
xchg
and
adc
mov
push
out
(bad)
sbb
out
xor
stc
(bad)
bound
cli
call
sub
test
call
xor
stc
mov
mov
push
pop
inc
add
cli
movs
loop
(bad)
aas
xchg
or
aad
popa
imul
add
jmp
ds
inc
pop
or
aas
mov
add
retf
jmp
cmp
xchg
(bad)
out
(bad)
mov
lahf
jb
xchg
pop
xchg
popf
test
xchg
fld
loope
mov
pop
mov
cld
out
cld
bound
lea
test
rep
jmp
jne
hlt
jno
mul
mov
xor
in
adc
retf
lods
jmp
loope
xor
sub
cli
rol
jle
data16
dec
cdq
xchg
ret
hlt
(bad)
mov
inc
movs
scas
loope
mov
jle
push
mov
int
add
cmps
fisttp
xchg
loope
xor
(bad)
push
cmp
scas
xor
pushf
mov
push
cmps
add
fiadd
js
mov
in
cwde
sbb
dec
stos
popa
mov
xchg
mov
aad
aaa
sub
sbb
push
(bad)
mov
inc
pop
push
std
push
ins
movs
lea
jp
iret
dec
(bad)
cdq
mov
add
push
test
arpl
push
inc
mov
fucomip
ja
push
inc
inc
das
mov
inc
xchg
pop
repnz
dec
dec
in
mov
loopne
mov
cmp
mov
imul
shr
cmps
mov
out
or
lahf
or
mov
lods
cli
in
pop
jne
pop
das
or
jne
inc
pusha
ret
push
cdq
mov
out
mov
test
sub
cmps
adc
push
sbb
jge
scas
cmc
xchg
sbb
inc
mov
pop
mov
push
test
jbe
pop
xchg
and
mov
outs
xchg
add
daa
lahf
inc
or
mov
mov
(bad)
fwait
retf
inc
adc
fldenv
test
repnz
xor
push
xchg
jo
mov
add
fwait
in
test
pop
push
scas
lock
pop
and
les
jnp
inc
sbb
mov
pop
sbb
inc
push
int3
and
jmp
sbb
push
inc
test
hlt
inc
xchg
sbb
lods
fbld
push
popa
neg
movs
cmps
mov
ins
movs
in
jle
mov
outs
loope
mov
or
pop
mov
sub
xchg
push
push
or
mov
jmp
das
pusha
add
push
or
dec
or
enter
xor
test
popa
mov
lahf
loopne
stos
bound
inc
jmp
retf
sbb
fisub
ror
mov
ret
rcr
jp
sbb
stc
jmp
retf
xchg
int
pop
inc
ret
sub
push
xor
arpl
jbe
push
fisubr
popa
jge
or
xlat
or
xchg
ins
pop
and
test
retf
imul
ins
pop
lods
loope
arpl
mov
jno
inc
test
iret
repnz
pop
sub
dec
out
out
nop
cwde
and
int
cmp
fstp
imul
ror
call
xchg
push
test
or
push
out
xor
cmovbe
scas
sub
or
lods
cmp
dec
stc
gs
sub
aam
add
xor
dec
loopne
adc
mov
jae
movs
adc
call
dec
xchg
xchg
shl
int3
inc
out
push
popf
lahf
pop
jmp
pop
(bad)
xchg
cwde
or
push
js
pop
enter
jmp
out
and
adc
push
fdivr
fdiv
jmp
mov
mov
cmps
shl
pop
fld
dec
aad
push
jecxz
push
or
arpl
call
mov
and
jg
in
fnstcw
and
scas
fistp
(bad)
ins
das
add
mov
jecxz
repz
rcl
inc
dec
xor
mov
mov
push
pop
jmp
out
jne
orps
jae
aaa
stos
sbb
in
pusha
aas
out
push
and
inc
xchg
jmp
aad
or
push
pusha
cmp
out
jecxz
sar
jecxz
pop
out
test
std
xchg
mov
sub
in
and
sub
pop
mov
mov
dec
or
push
pop
jecxz
and
aad
inc
or
xlat
jl
sub
fistp
cs
xor
clc
xchg
std
adc
out
push
xchg
mov
mov
stos
je
aaa
sub
in
rcl
dec
mov
push
jb
mov
sub
fs
cmc
daa
out
fimul
cld
fs
hlt
dec
mov
pop
xor
test
(bad)
mov
xchg
inc
cmp
xor
das
jae
cmps
jb
aas
push
shl
jns
jp
ins
add
out
inc
jecxz
dec
in
jne
cmp
cmp
sub
je
jno
in
shr
push
jp
ja
enter
aaa
std
push
pop
shl
frstor
push
xor
cmc
dec
cdq
push
jcxz
loop
pop
std
inc
cwde
out
punpckhwd
int3
dec
adc
adc
xchg
cli
jne
jp
shr
out
adc
cld
cli
mov
outs
hlt
jnp
loopne
das
retf
mov
mov
fs
mul
push
and
or
in
xchg
dec
repnz
std
dec
mov
push
in
in
and
pop
cmp
loopne
fidivr
mov
popa
shr
sub
fcom
mov
or
fild
jmp
mov
mov
jmp
sbb
mov
xchg
push
js
cmp
out
xor
mov
popa
hlt
sub
aaa
pusha
mov
sbb
sbb
push
fcmovnb
mov
outs
mov
xchg
ins
cli
dec
xor
jno
rcl
fwait
cmp
push
cmps
jae
enter
mov
xor
inc
lds
repz
mov
imul
(bad)
mov
imul
(bad)
bound
inc
push
stos
dec
jmp
sub
push
jge
std
jl
aaa
dec
scas
stos
daa
ret
mov
rep
je
(bad)
imul
hlt
(bad)
mov
adc
sbb
cld
imul
stos
std
outs
enter
inc
adc
outs
(bad)
lods
pushf
jbe
pop
dec
push
jg
ds
mov
pusha
bound
and
pop
mov
(bad)
lods
fwait
xchg
mov
fcmovne
pop
mov
xchg
push
(bad)
stos
lods
pop
cmp
data16
lock
push
xchg
ins
sti
inc
psrld
pusha
add
dec
std
mov
ss
test
je
loop
adc
movs
lods
jl
sub
xchg
sub
dec
jbe
div
mov
out
mov
repz
outs
jne
jmp
das
test
sar
(bad)
sbb
mov
mov
fldenv
mov
and
push
adc
out
into
inc
xchg
cmp
lahf
jmp
sub
dec
jg
stos
jecxz
shr
jae
push
jb
inc
inc
adc
fmul
lods
jp
push
fsubr
outs
out
gs
mov
inc
jge
aad
lea
add
and
mov
mov
mov
cld
jmp
lahf
arpl
outs
shl
mov
inc
dec
jbe
test
stc
fcmovbe
dec
push
mov
cmps
aas
mov
cli
ja
loop
lock
(bad)
fcom
std
shl
in
std
(bad)
in
jae
or
bound
xor
jmp
inc
mov
or
(bad)
jg
sub
ret
nop
inc
arpl
jno
aaa
popa
scas
pop
cmp
inc
mov
mov
push
inc
test
jnp
popa
je
mov
and
pop
in
cs
out
sub
leave
in
sub
outs
cmp
mov
fdivp
fs
stc
or
xchg
lods
dec
mov
addr16
mov
fild
out
adc
ds
das
int3
aam
pop
mov
lods
in
or
inc
data16
icebp
outs
rol
cmp
stos
jg
movs
stc
push
in
cld
mov
popa
pop
mov
sbb
pushf
mov
in
(bad)
in
fs
int
idiv
push
dec
xchg
push
repz
mov
mov
adc
sbb
pop
mov
dec
popf
test
outs
popf
repz
xchg
stc
xor
adc
out
mov
div
pushf
into
fisubr
sbb
cmp
xchg
lds
jmp
cmp
xchg
imul
push
fdivr
fiadd
xchg
in
cmp
pusha
repnz
xchg
xchg
inc
add
and
jbe
mov
das
lock
push
cs
mov
and
xlat
mov
popf
ret
cmps
ffreep
test
pop
jmp
push
aas
jmp
and
out
leave
inc
popf
(bad)
mov
or
retf
jo
(bad)
aad
cmp
inc
inc
(bad)
icebp
(bad)
mov
cmc
mov
inc
aaa
ja
dec
loope
sbb
dec
xchg
aaa
jne
or
fld
daa
test
div
or
int
icebp
inc
mov
ins
pop
cli
inc
push
inc
sbb
call
(bad)
iret
and
mov
and
xchg
aaa
and
dec
lock
push
aaa
ror
add
sub
jecxz
pop
call
cmp
outs
jge
push
adc
call
pop
xor
cdq
pusha
ins
call
adc
jmp
es
mov
jb
icebp
repnz
(bad)
push
mov
push
adc
repz
icebp
cmps
pop
inc
pop
mov
add
sbb
cmps
cmp
push
adc
loope
outs
stos
ja
sub
jo
mov
std
push
(bad)
bnd
jae
aaa
or
ror
mov
mov
push
in
pop
or
stc
cli
mov
in
loop
loopne
mov
aam
add
xchg
shl
cli
(bad)
cld
xor
dec
pop
(bad)
fwait
inc
pop
in
jle
arpl
stos
xor
dec
int
push
je
in
mov
and
sti
popf
or
adc
or
pop
repnz
pop
sub
fcomp
jle
xchg
inc
push
lods
popa
add
loop
xchg
test
dec
and
cmp
aaa
ret
jae
fnstsw
pop
(bad)
pop
mov
push
test
retf
arpl
fdiv
mov
sbb
sbb
sbb
mov
or
mov
cli
jae
mov
adc
repnz
test
jmp
test
sub
sub
and
jne
out
frstor
fiadd
push
jmp
pop
jbe
mov
mov
gs
pop
cld
xchg
fwait
int3
ret
leave
repz
pcmpeqb
mov
in
sub
push
loope
mov
jg
aaa
stc
aaa
jge
inc
sbb
in
retf
lods
jmp
dec
push
sbb
aaa
add
call
stos
and
iret
dec
repz
dec
out
add
aam
mov
dec
mov
test
sub
xor
jbe
mov
pop
inc
jb
ffree
std
gs
jb
call
xor
jnp
adc
ret
sar
sub
inc
sbb
pop
test
add
add
inc
int3
adc
(bad)
cli
and
adc
sub
and
xchg
hlt
or
dec
push
xchg
sub
push
cld
aas
shl
jle
sti
jno
mov
pop
add
cdq
nop
mov
ins
mov
sub
int
test
pop
xlat
stos
sbb
test
aam
int
mov
(bad)
pop
(bad)
scas
jle
pop
xor
fnstcw
cmp
inc
stos
movs
div
fist
call
lahf
pop
cld
pop
push
lahf
jmp
icebp
fldcw
in
cmps
shl
sbb
jge
and
shl
ja
icebp
adc
mov
je
imul
add
fiadd
mov
(bad)
dec
int3
add
xchg
cmp
mov
adc
inc
les
fiadd
inc
add
fidiv
add
adc
pop
fbstp
inc
mov
test
(bad)
jmp
pusha
dec
or
xor
cmp
adc
inc
(bad)
retf
jmp
leave
pop
or
sbb
sub
dec
cmc
push
fwait
jmp
adc
push
lods
mov
clc
dec
scas
test
mov
dec
push
(bad)
(bad)
cli
ins
into
xor
mov
fcomp
es
add
in
into
ds
cmps
mov
and
sbb
fcom
out
movs
dec
aaa
nop
and
stos
adc
jnp
ret
enter
jo
xchg
push
enter
cmp
cmps
cmps
loope
cmp
mov
or
pop
push
loop
lock
sub
xor
rcr
mov
out
out
jnp
in
add
cmps
(bad)
cs
cmp
xchg
(bad)
retf
aam
data16
cmp
fistp
cmp
std
test
sar
daa
sub
test
or
pop
push
shr
into
mov
ss
jae
cwde
dec
mov
jp
js
mov
pop
int
mov
add
aaa
add
fistp
ja
neg
add
xlat
and
mov
jp
xchg
push
adc
push
fdivr
imul
call
push
cmp
xchg
jmp
add
cmp
inc
push
xor
enter
ins
mov
inc
mov
jle
sbb
fnsave
out
fdivr
daa
sub
jecxz
out
or
mov
shr
out
xor
out
retf
xchg
popa
and
push
mov
mov
div
fwait
add
ret
xor
fwait
lods
loope
call
mov
ss
mov
cld
cmp
sbb
pop
push
lds
or
rol
(bad)
dec
jae
out
imul
(bad)
clc
mov
push
fadd
jo
dec
leave
push
ficom
and
mov
and
jmp
call
addr16
std
pop
dec
add
and
mov
adc
aad
daa
dec
jnp
sbb
int
adc
cli
pop
lahf
jb
(bad)
bnd
out
lods
das
xor
mov
mov
aaa
push
fwait
iret
fiadd
mov
std
push
xchg
gs
iret
mov
dec
cmps
rcl
inc
(bad)
iret
stos
sub
cmps
jbe
stc
sub
add
repnz
cmp
sbb
push
mov
ins
arpl
ds
mov
pop
or
fs
aam
or
add
imul
sub
or
jge
inc
mov
jno
adc
imul
lods
outs
mov
lds
pop
shr
and
in
out
or
cmp
aad
push
xor
pop
sbb
add
or
adc
sbb
xchg
xchg
sbb
xchg
xor
(bad)
outs
ins
push
adc
fcomp
mov
push
jge
das
push
int3
sub
pop
dec
sti
popa
daa
mov
outs
push
mov
push
mov
add
fdivr
data16
out
push
pusha
adc
in
les
jge
in
aam
sahf
fisttp
and
clc
mov
cmps
ja
or
push
cmp
aaa
arpl
push
sub
push
mov
ja
shl
mov
mov
mov
pop
fstp
lock
movs
and
xchg
imul
out
sbb
mov
push
imul
add
mov
or
xchg
movs
pop
inc
add
(bad)
sbb
ins
pop
pop
xor
jne
pop
xchg
cmps
test
cwde
xor
in
mov
mov
out
jmp
jp
and
and
sbb
add
pop
iret
push
mov
push
dec
outs
cmp
outs
out
iret
mov
push
jne
cmc
fist
jae
sub
data16
inc
xchg
outs
jecxz
fnstenv
jp
(bad)
inc
lock
nop
jge
ins
sbb
mov
mov
pushf
push
jbe
sbb
ins
shl
enter
dec
sbb
sbb
pop
mov
pop
pop
add
xchg
loopne
pop
enter
sub
adc
mov
jne
dec
or
jno
outs
add
mov
clc
aam
je
adc
cmp
popf
fs
mov
and
push
repz
enter
cmp
outs
(bad)
outs
jp
pusha
lods
sub
jbe
or
push
dec
(bad)
push
dec
pusha
ffreep
imul
and
add
pop
loop
mov
rcr
cmp
jecxz
(bad)
fcomp
imul
ins
fnsave
dec
pop
jne
imul
mov
or
lods
arpl
cmp
lea
pop
stos
loopne
jns
push
pushf
add
lds
or
jp
xor
or
je
pop
jno
push
xchg
addr16
xor
xor
or
cmps
cmp
mov
(bad)
mov
add
add
repz
add
cwde
popf
jecxz
popa
imul
cmp
mov
or
js
popf
xchg
bound
sti
sbb
xor
cmp
xchg
out
repz
pusha
ret
sbb
aam
push
mov
call
jno
xchg
xor
cdq
xor
mov
push
jle
ret
mov
loope
out
fdiv
ret
push
scas
push
dec
push
xchg
imul
adc
popf
daa
mov
fst
xor
sbb
jmp
xor
jle
xor
xchg
or
push
or
pop
mov
sub
cdq
and
and
scas
mov
leave
ds
mov
lock
and
jl
dec
sbb
test
inc
pushf
(bad)
or
mov
push
cwde
xor
rcl
mov
loope
enter
cwde
out
cmps
shr
shr
les
fdiv
cs
push
leave
mov
mov
xor
sub
aaa
cmp
xor
add
push
pop
xchg
push
jle
add
pop
or
mov
scas
test
into
fisttp
mov
sahf
adc
mov
adc
fsubr
xchg
jmp
and
adc
sub
jmp
ret
jge
xchg
cmp
xor
add
movs
mov
test
adc
jmp
adc
xlat
adc
fisub
aaa
mov
mov
mov
inc
xlat
xchg
or
int3
dec
jmp
lock
xchg
repnz
ja
dec
cmp
xchg
(bad)
adc
inc
jmp
jle
sbb
mov
jl
cmp
aam
inc
sahf
add
xchg
pop
popa
xchg
loop
mov
rol
in
ficomp
outs
sbb
fidivr
test
jl
xor
clc
aas
repnz
mov
adc
ret
iret
jl
mov
add
je
cmc
xor
sbb
xor
mov
test
rol
sbb
nop
inc
xor
add
rcl
cmps
add
or
push
push
movs
inc
mov
cmp
jae
and
xchg
ret
cmp
(bad)
(bad)
mov
mov
push
sbb
xchg
mov
or
mov
in
and
in
push
(bad)
xchg
ret
sub
jns
call
pop
mov
sbb
xor
faddp
outs
outs
mov
sbb
out
pop
cmp
leave
xchg
mov
inc
adc
fs
das
pop
shl
int
push
lods
xor
adc
inc
(bad)
movs
mov
and
test
in
jno
cdq
xchg
mov
xor
push
jne
mov
mov
cs
js
mov
mov
jle
dec
fimul
mov
xor
idiv
fnop
fdiv
je
cs
(bad)
add
bound
inc
dec
and
push
ins
enter
mov
aam
cmp
je
int
in
adc
enter
les
mov
adc
outs
mov
cmp
push
into
in
frstor
js
dec
stos
pop
cmp
xlat
mov
push
mov
jecxz
bound
mov
or
mov
cmp
xor
sbb
les
(bad)
add
xor
inc
cdq
mov
int3
je
and
js
aad
inc
cmp
push
addr16
xor
sbb
rcr
test
ret
inc
jp
and
adc
ss
lods
scas
jns
ins
jle
imul
stos
fs
cmp
pop
add
inc
mov
das
js
enter
mov
mov
cmp
mov
imul
and
mov
jne
sbb
out
aad
imul
pop
ins
xchg
sub
xchg
stos
adc
mov
pushf
out
mov
out
movs
into
scas
mov
adc
inc
fwait
movs
add
aaa
inc
mov
loope
and
add
es
pop
lea
pop
cmc
push
loopne
add
retf
pop
jb
stc
loopne
and
mov
xchg
adc
xchg
(bad)
ja
dec
retf
ret
not
inc
push
adc
mov
(bad)
cmp
pusha
inc
pop
pop
mov
pop
mov
push
push
sub
pop
xchg
mov
jb
das
cdq
stos
push
data16
fist
lods
push
cmp
cli
xchg
xor
add
cmp
call
in
div
xchg
repz
jne
out
shr
fcom
mov
in
push
stos
pop
(bad)
lods
nop
cmp
loope
cli
mov
out
ins
cmp
and
ret
imul
(bad)
sub
loopne
mov
or
dec
xor
retf
(bad)
xchg
push
jnp
push
add
in
rol
call
or
xor
cld
jp
outs
std
jnp
ds
(bad)
or
inc
xchg
mov
xor
data16
ins
add
sub
retf
pop
jb
stos
adc
jmp
in
xor
mov
mov
fwait
pop
xchg
push
sbb
push
xor
scas
sbb
xor
push
les
test
aaa
cmc
arpl
sub
call
mov
ror
cwde
movs
mov
push
xchg
pop
adc
jecxz
test
cmps
fidivr
pop
rcl
pop
outs
fistp
pop
dec
aad
sar
sub
lods
enter
lahf
or
ja
dec
movs
dec
add
mov
or
lods
mov
push
xchg
lods
mov
dec
dec
imul
mov
dec
mov
stos
call
loop
les
dec
fnop
or
xchg
lea
mov
pop
bound
xchg
lods
(bad)
fstp
jno
xchg
cmps
lods
cwde
mov
and
add
add
sbb
adc
or
xchg
mov
out
and
adc
mov
shl
fwait
dec
cld
pop
cdq
mov
adc
inc
test
adc
mov
test
les
and
push
add
pop
jp
jge
das
xchg
(bad)
xchg
sub
enter
add
push
xchg
pusha
imul
pop
xor
fwait
sti
mov
xchg
jmp
and
ja
lock
inc
xchg
daa
or
in
add
xchg
cmp
jnp
inc
shr
and
popf
mov
push
es
jmp
mov
lods
adc
jae
jl
jmp
xlat
ds
pop
sbb
retf
mov
aad
adc
xlat
mov
out
popa
imul
call
in
or
fcmovnu
xor
mov
lea
pop
adc
cld
pop
sar
arpl
cmp
push
adc
mov
jp
(bad)
call
jecxz
imul
js
push
inc
dec
cdq
rol
stos
loop
ds
xchg
xchg
aaa
fs
dec
xor
js
pop
bound
mov
pop
fisub
mov
in
push
in
xchg
lods
pop
(bad)
jns
cli
scas
pop
inc
jnp
data16
rcr
nop
ins
pop
jnp
outs
aam
push
sub
in
scas
retf
(bad)
(bad)
in
jmp
push
sub
aam
jl
movs
idiv
push
push
pop
adc
movs
test
cdq
ss
push
shl
movs
fisub
lods
jmp
push
fwait
mov
or
in
adc
scas
push
mov
les
xor
cli
xor
jo
mov
cs
push
cmps
xchg
sbb
sbb
inc
test
mov
fnstsw
data16
jne
lods
jo
mov
xchg
fld
mov
mov
arpl
dec
pusha
xor
outs
add
mov
mov
adc
dec
and
mov
sub
push
test
jl
out
mov
sub
sbb
fstp
pop
push
dec
lods
or
xchg
test
add
push
popf
xchg
fs
not
jne
sbb
aaa
out
push
and
xchg
jnp
dec
inc
dec
xor
push
sub
fsubr
push
(bad)
dec
inc
ret
xor
je
mov
push
dec
cs
lds
idiv
pop
mov
pop
xchg
out
enter
stc
stc
mov
loope
scas
mov
pop
push
pop
clc
stos
stos
aaa
out
pop
fcomp
mov
push
mov
xchg
dec
cmp
fnsave
inc
jbe
adc
sahf
out
stos
mov
out
or
sbb
int
add
add
aas
sub
push
mov
sub
jecxz
cli
or
mov
push
push
adc
sbb
loope
neg
sub
in
fcmovne
push
ficomp
mov
dec
imul
stos
pop
and
mov
mov
and
iret
test
sub
mov
pusha
mov
mov
sti
jnp
or
pop
mov
jmp
pop
or
jbe
jp
into
sub
mov
dec
int
nop
in
mov
int
adc
and
iret
mov
mov
loope
in
and
jecxz
(bad)
push
aam
pushf
push
sub
dec
idiv
test
test
std
stos
adc
sbb
push
fmul
enter
jp
mov
fisub
fcomp
jp
leave
xchg
mov
call
sub
int3
les
sbb
push
push
ret
call
iret
dec
mov
mov
pop
pop
mov
sbb
jns
add
push
push
xchg
and
mov
push
clc
sar
dec
and
enter
mov
push
dec
and
movs
cmp
repz
in
sub
mov
shl
leave
add
ins
iret
or
sub
dec
mov
ret
cmp
jge
push
jb
fstp
or
in
addr16
mov
and
jno
mov
aaa
ja
sahf
sbb
push
mov
xchg
dec
xor
outs
into
dec
shl
(bad)
mov
adc
fisubr
std
cmp
jb
xchg
pop
xchg
push
(bad)
imul
cmp
ficomp
test
adc
(bad)
enter
dec
clc
mov
dec
je
mov
pop
and
inc
xchg
adc
addr16
sub
cmps
div
push
jmp
xchg
push
xchg
in
int3
xor
sub
push
mov
lea
int3
and
cmp
inc
xchg
pop
push
pop
xor
add
addr16
inc
iret
jp
aam
shl
mov
add
adc
(bad)
icebp
clc
mul
aad
xlat
cld
data16
cmc
lock
adc
mov
cld
jmp
bound
xchg
scas
mov
ins
mov
pusha
cmc
inc
inc
sub
imul
(bad)
retf
sub
mov
inc
add
pop
(bad)
frstor
das
jge
ins
jge
xor
mov
push
movs
jbe
xchg
mov
jb
xchg
xchg
jmp
push
test
pop
aam
fldenv
out
loop
es
cmps
loopne
push
ins
pop
and
push
jno
in
out
mov
lock
push
aas
data16
out
dec
push
xlat
xor
or
add
shl
inc
sbb
jle
jmp
mov
fxrstor
cmc
es
mov
test
je
dec
scas
lods
in
mov
push
sti
sbb
dec
stos
(bad)
rcr
xchg
sbb
stc
xchg
ret
ins
mov
imul
push
adc
cwde
and
dec
je
inc
xchg
dec
cs
int
shl
cmps
imul
sub
sub
inc
or
sbb
and
repz
pop
adc
sete
mov
xchg
cmp
add
shl
imul
clc
fwait
xchg
push
xchg
pusha
inc
push
sbb
pop
xor
leave
dec
pop
pop
(bad)
in
mov
call
dec
ss
dec
into
push
je
pop
sub
ss
shr
lods
push
pop
jns
sub
mov
outs
lods
mov
mov
xchg
(bad)
aam
cli
pushf
pushf
scas
pop
enter
sti
in
mov
clc
mov
adc
lea
test
push
gs
(bad)
fist
jno
(bad)
stc
jnp
dec
fisubr
es
dec
add
push
mov
sbb
and
dec
dec
lea
cmp
push
test
out
lds
mov
inc
scas
mov
loope
arpl
lock
cmps
es
out
push
lds
xchg
nop
sbb
adc
xchg
imul
xchg
mov
fild
leave
xchg
sbb
dec
(bad)
lahf
into
lods
es
dec
xchg
xor
mov
arpl
out
dec
pop
jge
sbb
(bad)
retf
xchg
ret
adc
int3
or
lock
pushf
das
cmpxchg
pop
cmp
into
mov
popa
ss
jns
jae
jmp
dec
mov
int3
xchg
adc
data16
push
movs
add
jnp
sahf
(bad)
enter
xor
pop
push
jp
shr
popa
pop
or
idiv
push
ret
cdq
fwait
jno
adc
dec
mov
cmp
sub
fdivr
imul
(bad)
into
retf
push
dec
in
dec
mov
adc
dec
fmul
enter
dec
mov
and
xor
fcomp
inc
push
sbb
stos
xchg
ins
mov
push
neg
sbb
jbe
push
retf
jbe
imul
dec
sbb
pop
les
je
(bad)
pop
int3
mov
mov
pop
sar
mov
addr16
mov
pop
or
es
xchg
and
xchg
lea
or
(bad)
loop
push
loopne
popa
mov
cli
sub
lea
enter
cli
pop
cmps
nop
xor
outs
push
jecxz
stc
stc
je
jge
(bad)
(bad)
ja
sar
mov
sti
in
in
test
jecxz
pop
in
mov
fs
lods
mov
jno
fmul
mov
movs
arpl
pop
jae
aas
cmp
xor
cmp
pop
mov
jmp
cs
in
test
xchg
mov
jns
es
aad
ror
and
ins
aad
mov
cwde
mov
call
mov
imul
enter
loope
ret
cmp
mov
pop
inc
ds
clc
scas
bound
push
pushf
xchg
xchg
jmp
test
ret
jno
gs
mov
aad
push
pop
cmps
div
xor
mov
push
or
outs
jmp
or
jae
push
jle
repz
adc
mov
cmp
mov
lea
pop
cli
lahf
jg
adc
and
es
mov
js
dec
ret
(bad)
ret
daa
xchg
loop
adc
cs
stc
dec
pusha
adc
ror
push
xor
adc
rcr
pop
ds
out
sub
clc
jge
dec
push
icebp
lock
or
pop
sar
arpl
loopne
cs
jl
xor
(bad)
(bad)
stc
aaa
mov
iret
and
popa
fwait
xor
xchg
and
cmp
pop
clc
call
push
pushf
sbb
les
push
movs
fwait
mov
enter
lds
rcr
adc
ds
addr16
(bad)
rol
(bad)
ret
jnp
xor
cwde
iret
jbe
jb
xor
mov
sbb
xor
and
xor
add
adc
jp
push
sbb
add
or
outs
jl
adc
cmps
sti
mov
les
and
xchg
mov
sbb
sub
mov
lahf
std
(bad)
adc
xchg
or
outs
dec
(bad)
jle
fstp
ins
cmp
aas
adc
fwait
jle
sar
scas
ins
popa
jge
xchg
pop
int3
div
ret
sar
push
cmp
cld
fst
lds
or
or
stc
jl
(bad)
mov
ficomp
aad
les
out
outs
xchg
dec
inc
adc
in
into
pop
pop
in
pop
(bad)
pop
pop
xchg
std
dec
add
clc
dec
cli
fisub
jmp
jg
sbb
push
pop
daa
retf
inc
nop
sbb
mov
in
push
arpl
sub
cld
push
jp
pop
call
mov
cmps
jo
cli
push
es
pop
pop
mov
(bad)
stc
or
jge
out
cdq
mov
hlt
pop
enter
icebp
mov
sub
(bad)
clc
cmp
push
mov
out
aas
or
xor
push
iret
jmp
ds
jp
daa
aas
bnd
jle
lahf
out
int3
jge
fucom
xlat
icebp
scas
movs
pop
jae
pop
(bad)
mov
stc
inc
pop
nop
imul
dec
retf
xor
dec
pop
mov
jb
add
add
jno
movs
retf
xor
and
loop
mov
icebp
mov
(bad)
mov
push
cmc
dec
aas
cli
mov
and
stc
cld
cmp
adc
std
jecxz
xchg
imul
ds
outs
dec
js
(bad)
aas
imul
cmp
inc
push
cmp
daa
jle
lods
mov
nop
xor
out
sahf
aas
push
push
std
jae
xor
push
clc
fwait
cmc
xor
mov
ja
pop
mov
sbb
jmp
push
fistp
cmp
icebp
cli
add
ds
ins
test
pop
out
scas
enter
add
loope
or
xor
inc
(bad)
(bad)
test
xchg
jmp
bnd
scas
sub
mov
(bad)
clc
xchg
xor
xor
jmp
and
fs
daa
sti
popa
mov
add
gs
push
in
cmp
mov
adc
(bad)
xor
mov
xchg
push
fs
push
mov
mov
and
mov
(bad)
cwde
push
xor
ret
rcr
nop
or
xor
(bad)
dec
sbb
and
and
cmp
shr
xor
imul
test
nop
mov
popf
fisubr
xchg
je
cmp
test
sub
mov
leave
dec
icebp
mov
out
xchg
imul
lock
mov
arpl
jp
jge
stc
push
xchg
test
dec
dec
rcr
and
outs
sub
add
(bad)
cdq
jg
sti
mov
xor
fisttp
add
xor
call
adc
(bad)
inc
inc
sub
repnz
leave
or
and
outs
scas
ret
adc
ror
test
(bad)
jle
or
ins
cmp
and
xor
jmp
imul
test
js
je
sub
fistp
sub
dec
test
sbb
xor
sub
cmp
pop
mov
in
movs
les
jp
in
xchg
lahf
data16
je
cmps
sar
stos
add
das
je
push
mov
jbe
movs
fcom
daa
dec
ins
cs
pop
mov
jl
add
or
push
pushf
pop
outs
fidiv
inc
xchg
pop
punpckldq
movs
pushf
pcmpeqw
inc
popf
out
pop
jmp
ins
jno
xchg
loopne
fsub
mov
std
in
pop
jae
std
(bad)
cmp
pop
pop
mov
pop
ror
in
push
add
pop
out
push
es
cwde
aas
or
int
jmp
xchg
(bad)
out
(bad)
pop
sti
pushf
cld
inc
addr16
adc
movs
pop
icebp
ins
xchg
iret
fs
push
shl
add
sub
mov
jno
cs
pop
jns
xchg
sbb
cmps
dec
(bad)
inc
daa
mov
aam
mov
ins
inc
cmp
repnz
mov
pop
lock
sbb
je
mov
mov
dec
cmc
jne
dec
div
inc
inc
scas
mov
sbb
inc
mov
and
lods
add
pop
sub
and
shr
rol
xor
or
inc
jo
out
mov
sub
add
fsubr
fwait
es
add
aam
pop
mov
(bad)
in
mov
rcl
pop
pusha
pusha
fwait
rcl
dec
sbb
jae
cmp
sub
mov
xor
fstp
pop
jl
inc
or
test
adc
(bad)
clc
cmp
dec
mov
dec
lock
aaa
sub
movs
inc
in
sbb
xchg
scas
adc
cmp
pop
cld
mov
addr16
aad
jg
fmul
ins
sti
sbb
xchg
push
mov
push
inc
add
mov
cdq
mov
and
ins
adc
jb
adc
mov
addr16
in
movs
int
shl
stc
dec
and
dec
sub
or
pop
pop
inc
and
gs
movhps
(bad)
cmp
js
ficom
jns
push
jle
js
in
mov
lock
or
and
push
test
mov
jne
in
ret
out
pop
scas
adc
sahf
nop
ds
fcomp
inc
movs
adc
into
xchg
jmp
sbb
daa
popf
mov
jnp
cmp
cmp
fwait
popf
loopne
and
popf
jg
(bad)
jmp
jl
fucom
data16
icebp
test
mov
mov
out
jmp
jp
inc
mov
(bad)
std
pushf
mov
in
scas
xchg
ds
inc
push
dec
mov
mov
push
out
push
aad
adc
fiadd
imul
stos
dec
es
stc
jb
dec
int
jae
shr
and
gs
cmp
hlt
and
push
call
mov
fdiv
push
xchg
(bad)
daa
jp
loop
jle
cmp
or
je
jne
mov
and
cs
jp
sub
lods
jecxz
mov
fsubr
mov
mov
clc
mov
test
repz
jge
cmp
or
mov
ins
add
mov
jge
stc
jae
inc
lahf
xlat
repz
mov
mov
daa
repnz
movs
xor
aaa
pop
lock
push
jge
cmps
xor
push
xor
xchg
mov
sub
jb
pop
add
bt
sub
cmc
cmp
pop
ret
je
jmp
clc
or
aas
cs
inc
sub
movs
lea
jo
xlat
mov
xchg
test
and
pop
mov
or
sti
xchg
fmul
sti
cs
jb
cmp
jb
popf
pop
sahf
push
and
xor
pop
push
neg
mov
cmc
push
inc
pop
push
sar
add
fstp
popa
mov
ss
cdq
icebp
jns
jl
fbld
fwait
cmps
rcr
cs
movs
and
add
mov
enter
dec
dec
retf
retf
push
xor
in
js
cmc
cwde
cwde
jle
or
fdivr
add
jne
out
das
mov
pop
sub
add
out
mov
adc
ret
jne
in
mov
sbb
js
mov
push
and
scas
push
(bad)
nop
test
imul
lahf
adc
sbb
fnstenv
sub
in
dec
pop
mov
or
push
sub
mov
or
jecxz
rcr
and
outs
xchg
not
or
ins
mov
outs
pop
fucom
mov
movs
mov
add
fild
ss
mov
inc
addr16
hlt
mov
loop
pushf
cmc
mov
fwait
data16
push
adc
sub
fs
repnz
dec
out
pop
mov
jp
inc
and
into
xchg
dec
xchg
and
iret
cld
sub
sub
repnz
mov
iret
je
arpl
test
imul
mov
inc
adc
bound
mov
test
scas
xchg
imul
imul
icebp
stc
aam
out
mov
lock
clc
dec
bswap
add
in
out
mov
mov
xor
scas
inc
add
adc
rol
sub
ins
adc
sub
mov
cmp
rcl
sbb
loop
push
mov
repz
stc
fs
or
cmp
add
and
mov
int
sti
scas
stc
ror
fucomp
mov
add
outs
or
mov
inc
in
loope
les
add
ins
jbe
in
std
jmp
dec
scas
cmp
cmp
aam
leave
imul
rol
sti
adc
pop
pushf
mov
inc
repz
aam
dec
xor
test
inc
pop
inc
dec
mov
bound
out
sahf
jb
jbe
into
outs
mov
loopne
add
ss
mov
imul
test
imul
(bad)
inc
lods
imul
psllw
aad
and
mov
sar
mov
jle
mov
ret
mov
inc
jns
js
and
scas
fs
inc
js
ret
bound
cli
icebp
icebp
mov
xchg
jmp
adc
mov
(bad)
ja
sbb
or
imul
adc
iret
push
xchg
mov
cwde
(bad)
iret
test
push
fidiv
imul
jl
out
and
movs
hlt
jbe
fistp
je
or
mov
test
push
cmp
mov
pop
xor
cmps
in
sub
mov
aas
and
jecxz
sbb
dec
sub
fnstsw
in
jecxz
adc
ins
fist
xchg
(bad)
cmc
div
dec
sbb
push
add
retf
mov
shr
jl
adc
add
xor
mov
fucomp
cmc
pushf
call
mov
lds
mov
jo
enter
push
sub
out
imul
hlt
inc
fdivr
and
call
mov
sub
xlat
xchg
loopne
ss
jae
arpl
cmp
jp
mov
(bad)
pop
iret
and
imul
dec
sub
pop
dec
add
(bad)
cmps
mov
in
and
pop
inc
inc
and
mov
test
jb
jge
dec
cdq
mov
outs
jle
mov
retf
out
xchg
and
jle
bound
(bad)
cmp
mov
sub
push
pop
xor
jns
lods
cmp
ja
stos
mov
inc
sub
into
jmp
lock
sub
cld
inc
add
repz
inc
xchg
jb
test
leave
xlat
call
scas
cs
mov
inc
cmp
fimul
push
dec
mov
aad
test
push
ds
mov
xor
shl
jle
cmp
jge
mov
(bad)
ror
test
stos
xlat
movs
or
inc
xor
adc
call
iret
pop
retf
out
push
dec
mov
popf
inc
clc
cmps
test
cmps
rcl
jmp
loopne
dec
es
and
jnp
sti
mov
jne
data16
cmp
adc
bound
jnp
jl
inc
push
jmp
bnd
cli
cli
pushf
out
call
jl
sbb
xchg
jge
adc
dec
lahf
fild
sub
mov
sbb
std
mov
adc
push
push
into
mov
xchg
addr16
clc
fisttp
xlat
cmc
pop
stos
mul
jecxz
scas
push
push
nop
and
div
add
jle
and
or
aaa
or
pop
pop
push
jg
mov
push
aam
pop
rcr
dec
sahf
push
bound
retf
push
xor
and
ds
repnz
or
sbb
jmp
push
add
and
in
out
cmp
(bad)
ffreep
sahf
jno
in
pop
or
sub
xlat
(bad)
xchg
pusha
and
in
xchg
sbb
jge
mov
leave
mov
sar
rcl
(bad)
cmp
inc
ficom
icebp
fisubr
outs
lahf
ja
shl
out
dec
mov
aaa
sbb
neg
clc
mov
clc
push
leave
aam
or
mov
pop
shl
mov
pop
xchg
ins
leave
or
push
repnz
outs
das
out
repz
dec
std
ficom
adc
aas
out
inc
lock
xchg
sbb
cmc
add
cmps
mov
xchg
mov
mov
and
dec
sbb
add
rcr
jae
nop
rol
cmc
es
mov
push
sub
dec
mov
inc
or
xchg
pushf
scas
test
mov
dec
mov
std
arpl
jl
data16
sbb
aam
push
adc
repz
dec
sbb
push
dec
adc
add
sti
(bad)
nop
xchg
cmp
ins
pop
xchg
and
mov
repnz
push
mov
iret
imul
pop
pop
aas
les
push
xchg
jno
(bad)
dec
repz
mov
sar
xchg
sub
cmp
sub
mov
sti
enter
xchg
clc
div
pop
test
cmc
mov
icebp
jae
add
push
cld
pop
test
xor
push
and
mov
out
retf
pushf
(bad)
aad
adc
out
rep
pop
sbb
repz
test
fld
scas
push
or
movs
fcomip
sahf
mov
sub
out
dec
mul
retf
jg
and
test
adc
mov
in
shl
mov
push
or
sbb
test
adc
retf
sub
cmp
mov
std
mov
ins
cmp
mov
(bad)
mov
(bad)
mov
mov
movs
push
cwde
and
sub
pop
pop
leave
fist
out
fist
or
sub
cmps
xor
and
mov
cmp
xchg
outs
scas
pop
cmps
xor
mov
out
push
in
fwait
xchg
cmp
imul
lock
addr16
sbb
xchg
iret
repnz
std
xlat
lea
sti
fcmovnb
mov
test
leave
push
jns
loop
nop
cwde
jmp
daa
je
sti
cmps
xchg
push
popa
pop
ret
ins
ins
sub
fadd
push
inc
out
fbstp
sub
jne
scas
or
xchg
out
sbb
add
or
stc
ds
loope
call
inc
jmp
(bad)
cs
es
cdq
inc
mov
or
inc
fsubr
into
inc
test
add
sub
jg
dec
es
sahf
pushf
cmp
sbb
mov
and
les
fst
inc
cmp
cdq
add
jnp
in
mov
test
aas
push
stos
movs
adc
sbb
pop
in
pop
imul
pop
xchg
xchg
xor
xor
adc
xor
xor
or
jge
fs
pop
and
inc
enter
nop
fsubp
fcomp
popa
cmp
xchg
mov
cld
mov
call
aaa
and
inc
mov
sub
jp
xchg
mov
popa
js
je
add
cmp
test
fdiv
es
aas
sub
mov
retf
pop
cmc
mov
and
dec
imul
mov
ret
scas
jecxz
jns
arpl
into
test
sbb
or
pop
(bad)
mov
jg
sahf
pop
push
sti
jae
ins
cmp
cwde
mov
mov
fimul
xchg
dec
loopne
stc
inc
iret
jo
lds
jge
mov
push
or
movs
ret
pusha
cmp
mov
jge
and
scas
or
inc
pop
int3
call
not
push
lea
inc
xchg
sbb
mov
mov
test
xor
add
cmp
dec
cmp
fld
outs
jecxz
or
ret
sbb
movs
iret
mov
data16
jb
mov
xor
shl
icebp
jg
ja
loope
call
inc
sahf
or
clc
loope
jnp
mov
leave
mov
jne
repz
imul
adc
in
or
mov
ds
adc
pop
pop
ret
jmp
jmp
xor
neg
dec
or
std
mov
scas
les
xchg
pop
idiv
xchg
retf
bnd
adc
(bad)
cli
pushf
jb
dec
inc
and
jmp
dec
pop
xor
mov
lahf
inc
sbb
fnsave
nop
inc
mov
in
mov
(bad)
pop
daa
loop
das
mul
dec
ss
arpl
frstor
mov
and
cmc
mov
inc
pop
in
mov
inc
es
pop
mov
or
pop
cld
mov
mov
fadd
fwait
bound
xor
jo
xor
jmp
mov
and
mov
sub
and
or
adc
loope
push
xor
or
inc
into
ficom
and
jno
rcl
aam
out
retf
out
mov
xchg
mov
addr16
out
ins
pop
outs
push
into
dec
push
test
push
movs
fsubr
(bad)
push
adc
jg
mov
mov
rcl
add
push
popa
jge
mov
add
lods
call
jbe
dec
mov
outs
bound
mov
sbb
cld
dec
test
and
cmc
jmp
mov
xor
(bad)
out
adc
or
fcom
rcl
jmp
std
jb
dec
mov
or
mov
mov
ror
(bad)
dec
shl
or
jle
push
mov
test
test
call
adc
lock
or
push
clc
arpl
fild
test
mov
fldcw
mov
or
xlat
inc
lods
bound
dec
fs
push
iret
ret
mov
ins
push
ja
sub
pop
xor
fld
dec
add
pusha
mov
jno
mov
mov
je
aas
xchg
jb
test
xor
call
repz
jmp
(bad)
or
jl
pop
outs
adc
aad
mov
mov
adc
mov
hlt
popa
mov
sub
add
div
mov
or
xor
mov
mov
test
icebp
imul
fcmovne
sbb
adc
cli
push
mov
sbb
pop
in
lods
or
repnz
push
(bad)
mov
mov
ins
outs
mov
mov
(bad)
adc
mov
dec
push
loop
push
inc
test
mov
inc
ins
mov
mov
shl
mov
fnstcw
mov
sar
call
outs
test
lahf
test
test
(bad)
xor
enter
pop
hlt
jle
cmp
pop
mov
and
out
sar
mov
pop
xor
(bad)
jns
ds
dec
push
cwde
mov
fwait
enter
and
cli
into
sti
add
cdq
push
pusha
inc
sub
pop
xchg
xchg
cmp
sti
ds
mov
aaa
xor
outs
jno
lahf
xor
xchg
fld
movs
sub
mov
shr
inc
cmps
lods
mov
das
shld
in
mov
xlat
ss
push
leave
popa
or
adc
and
dec
sti
loope
neg
mov
push
jo
cs
icebp
out
push
ret
fmul
cdq
fs
push
xchg
ds
lock
add
shl
jbe
or
mov
iret
in
in
cmc
cmps
test
push
sahf
aad
mov
xchg
dec
ds
dec
jne
inc
and
mov
add
inc
movs
fwait
test
xchg
test
gs
ja
mov
add
ds
cmps
arpl
sbb
jge
lahf
mov
movs
dec
inc
inc
rol
or
cmps
jnp
movs
mov
and
inc
ret
nop
iret
sub
daa
xchg
sbb
repz
mov
jle
mov
sbb
sub
jp
mov
cmp
add
dec
das
mov
dec
fsub
inc
dec
jmp
jmp
jp
outs
cmp
pop
or
sub
movs
sub
lock
dec
aaa
sbb
mov
jo
dec
xor
adc
aam
sbb
sti
mov
loope
mov
adc
call
ss
nop
mov
leave
sar
fadd
in
(bad)
jecxz
and
push
push
call
(bad)
repnz
sub
push
enter
xor
mov
popa
mov
fiadd
(bad)
in
pop
movs
xlat
icebp
jg
fs
xchg
jecxz
dec
aam
adc
mov
sub
push
rcl
imul
out
fwait
ret
mov
idiv
(bad)
mov
call
daa
xchg
or
xor
cmp
adc
xor
cwde
dec
sbb
scas
(bad)
mov
add
inc
sbb
cmp
push
push
push
cmp
mov
inc
xor
retf
mov
lods
xor
pop
pop
nop
jg
push
repnz
mov
xor
shl
mov
push
aam
repnz
pop
and
fisttp
call
aas
adc
pop
(bad)
pop
and
dec
push
in
pushf
aam
movs
jmp
add
mov
sbb
adc
retf
nop
sub
sbb
or
lea
pop
xchg
sbb
cdq
rol
pop
sbb
imul
daa
cmc
call
jns
je
jle
pop
push
call
ret
nop
and
dec
mov
mov
dec
add
pop
xchg
push
pop
add
rep
sub
fsub
mov
inc
push
xchg
push
pop
in
push
or
leave
test
cmps
sbb
lahf
jecxz
add
fiadd
pop
je
test
pop
sbb
push
fild
and
xchg
inc
jp
pop
xlat
mov
pop
call
adc
(bad)
movs
mov
xchg
pushf
xor
pushf
inc
xchg
mov
aaa
push
mov
jp
shl
ja
add
ret
dec
sahf
mov
dec
inc
out
icebp
xlat
ja
ret
and
dec
jg
ds
and
xor
sub
xor
dec
arpl
push
in
dec
pop
mov
adc
cmp
push
cmps
mov
cli
scas
or
add
mov
xchg
sti
and
dec
and
add
cmp
(bad)
mov
mov
or
mov
mov
or
pop
retf
movs
ret
add
xor
xor
pusha
cmps
fcomp
fmul
pop
add
mov
xchg
sub
inc
mov
in
pop
dec
ja
retf
enter
int
pop
pop
sar
dec
add
xor
mov
in
mov
pop
cmp
stos
test
sbb
loope
jnp
or
in
sbb
out
ror
in
mov
jg
and
fcmovnu
push
dec
inc
jne
outs
(bad)
test
loopne
jnp
inc
jl
ds
imul
jae
or
and
fimul
sbb
dec
dec
rcl
das
mov
or
adc
mov
cmp
mov
xor
mov
sbb
in
gs
nop
icebp
mov
mov
mov
dec
sbb
mov
xor
mov
xchg
cdq
adc
daa
in
popa
mov
and
adc
mov
test
add
inc
lock
push
imul
test
pop
push
adc
retf
cmp
test
jmp
pop
mov
xor
cdq
inc
jbe
and
mov
mov
dec
jp
sbb
inc
xor
xor
aas
sbb
fwait
inc
retf
test
push
pushf
retf
xchg
push
add
imul
mov
add
sti
jno
lahf
jo
jo
jo
dec
mov
xchg
pop
push
int
nop
xchg
scas
pop
push
rcr
cmp
push
pop
or
aad
jne
pop
ins
cli
in
fwait
add
repnz
adc
inc
loope
sbb
lea
cmp
pop
cmp
out
ret
mov
sbb
pop
call
jne
stc
jne
(bad)
xchg
fld
cmp
test
test
jbe
and
xchg
and
out
mov
pop
xor
xor
adc
jb
stc
sub
xor
mov
adc
call
xchg
std
jge
out
xchg
jno
pavgw
(bad)
loope
shl
inc
mov
into
mul
test
das
cs
xchg
mov
call
ja
sbb
call
cmp
ja
je
adc
push
call
push
add
pop
es
(bad)
add
imul
dec
cmp
aaa
pop
clc
aaa
push
mov
jp
mov
adc
loop
sub
dec
bound
mov
jmp
sbb
loope
push
push
fistp
fwait
add
test
aaa
pop
cdq
stos
and
add
les
or
mov
outs
lods
xor
cmp
xor
add
jnp
sbb
or
mov
push
repnz
or
out
jbe
(bad)
mov
aas
aaa
retf
stos
shr
out
ss
icebp
sbb
push
sbb
test
(bad)
stc
or
fst
lods
cmp
push
pop
dec
xor
pop
mov
sbb
das
inc
xor
adc
into
jl
add
jb
repnz
outs
mov
adc
inc
mov
pop
rcl
inc
inc
lds
jo
leave
out
pop
retf
jmp
ja
outs
ins
stos
enter
inc
inc
jl
call
retf
test
repnz
cmp
fsub
adc
das
out
lds
adc
pop
push
and
xor
jge
test
out
cmps
inc
cli
idiv
mov
push
cwde
mov
mov
stos
or
mov
test
mov
cli
push
clc
push
lea
lds
in
jnp
imul
push
rcl
cmps
fsub
cmps
cmp
sub
cmc
pop
call
stos
call
imul
jmp
jne
jno
and
mov
mov
sahf
lock
out
jbe
mov
cdq
stos
cmps
xor
enter
sbb
fidiv
rcr
mov
mov
adc
xor
cdq
mov
jecxz
(bad)
test
leave
mov
pushf
ss
retf
sbb
jecxz
(bad)
or
push
sar
rcr
js
dec
cwde
ret
sbb
xor
int
mov
lea
push
push
or
jg
mov
xchg
shl
mov
in
push
adc
scas
jae
ds
lds
pop
xchg
add
jle
gs
push
xor
sbb
outs
cmp
jmp
push
arpl
imul
mov
popf
cmp
xchg
adc
fcmovu
in
jne
mov
dec
pop
dec
mov
dec
dec
mov
popa
mov
push
mov
mov
bound
fld
stos
sbb
mov
ja
aad
mov
into
mov
or
xor
in
push
pop
adc
inc
adc
outs
sub
lahf
jae
pop
les
mov
mov
sbb
stc
(bad)
jmp
xor
fiadd
mov
jb
repz
mov
out
inc
shl
lock
loopne
enter
jb
call
fadd
mov
and
cmp
dec
cwde
lods
hlt
or
xchg
ss
mov
jge
loope
inc
pop
sub
jmp
jno
inc
stc
popf
arpl
fs
loope
jl
mov
stc
mov
or
sahf
sbb
sub
and
add
cmps
xor
inc
cdq
pop
call
imul
inc
(bad)
xchg
mov
jg
mov
out
jns
and
xchg
jae
xor
ficomp
out
push
inc
pop
jg
add
mov
out
je
push
je
aaa
ins
jmp
jmp
arpl
int
shl
into
cmp
push
jno
std
call
lahf
aaa
cwde
xchg
jl
int
(bad)
jns
inc
push
not
(bad)
sbb
out
jecxz
jae
loopne
ins
(bad)
lock
shl
scas
(bad)
mov
mov
mov
aad
push
div
xor
xchg
lea
(bad)
les
inc
popa
mov
scas
stos
cld
iret
stos
pushf
out
cmc
push
out
cmp
push
inc
mov
and
pop
addr16
in
cwde
add
pop
cmp
push
xor
loopne
xor
sti
(bad)
je
popf
push
outs
sbb
pop
out
popa
sar
push
mov
xchg
test
dec
add
add
mov
xor
adc
ss
mov
inc
imul
popa
fisttp
rol
aam
sub
and
dec
pushf
gs
sub
sti
mov
dec
(bad)
aad
movs
shl
sbb
lds
xchg
dec
push
call
pushf
sbb
xchg
xchg
and
jg
fcom
dec
jb
leave
pop
out
sub
clc
dec
shr
jl
jl
and
mov
mov
add
scas
and
adc
out
and
ror
mov
pop
xchg
jle
xchg
adc
mov
jbe
xor
cmp
push
sahf
mov
dec
fisttp
mul
sub
outs
call
pop
mov
mov
push
ins
sbb
xor
popf
lods
pop
mov
int3
push
push
mov
add
movs
cmps
popf
iret
call
in
sahf
out
mov
or
call
cdq
jns
xchg
inc
int
fldcw
shl
dec
in
or
(bad)
push
dec
xchg
cmps
aas
inc
mov
jmp
cmps
inc
mov
jge
lock
stos
ret
ret
std
les
mov
mov
and
rol
push
arpl
mov
add
loopne
outs
lahf
xor
pusha
ret
fld
fcmovu
add
sub
add
arpl
stos
or
dec
push
leave
idiv
xchg
cmp
(bad)
(bad)
mov
pinsrw
retf
sbb
or
inc
jns
xchg
xor
mov
ret
lock
sbb
call
cmp
add
bnd
mov
clc
mov
std
jmp
inc
push
and
test
or
and
mov
aam
or
xchg
mov
or
xchg
add
xor
sub
fistp
dec
mov
pop
xchg
test
(bad)
outs
mov
lock
jo
add
retf
cmps
repz
pushf
loopne
mov
pop
loopne
sbb
neg
jb
call
dec
retf
cld
icebp
stos
mov
aas
mov
push
cmp
pop
push
nop
loopne
push
fcmovu
mov
inc
inc
movs
mov
sub
pop
mov
or
dec
imul
cli
(bad)
cmc
adc
mov
dec
shl
js
pop
inc
in
sbb
call
in
adc
xchg
mov
mov
in
mov
mov
xor
call
xor
fisttp
hlt
cmp
sbb
iret
mov
mov
dec
nop
ins
(bad)
cmp
lahf
xchg
push
(bad)
dec
aam
pop
mov
mov
popa
mov
inc
das
ficomp
dec
test
push
data16
pop
or
pop
sbb
js
out
xor
stc
mov
fsub
pop
out
inc
jno
or
push
push
xchg
adc
mov
jl
mov
loopne
pop
test
mov
lea
aaa
stc
mov
mov
xor
aas
xchg
repz
test
cmp
add
jl
dec
test
fdiv
inc
movs
dec
pop
jle
or
sub
dec
fist
fdiv
int3
je
in
jmp
stos
inc
test
push
arpl
enter
je
sub
cmp
ss
xchg
cli
push
cdq
mov
push
fld
bnd
dec
adc
inc
jns
or
mov
push
cmp
xchg
jne
add
mov
mov
js
inc
loopne
movq
in
cmp
call
add
outs
outs
jae
lock
xor
adc
cmp
int
adc
test
push
pop
and
push
xchg
pop
int3
and
es
cmp
add
xor
sub
sub
mov
ins
ds
push
mov
adc
mov
push
adc
mov
pop
inc
pusha
dec
scas
(bad)
or
in
dec
push
and
(bad)
fbstp
(bad)
into
push
cmp
iret
or
push
leave
mov
fstp
retf
jmp
jns
sbb
lods
ins
mov
test
and
stc
add
ss
and
int
add
aad
not
pop
push
xchg
cmp
aad
xor
jg
xchg
sbb
mov
shl
imul
fadd
shr
pop
inc
push
push
in
std
push
pop
nop
and
dec
outs
ror
pop
test
test
dec
sahf
mov
push
mov
in
and
out
add
aaa
inc
rol
aam
jne
mov
push
push
arpl
mov
(bad)
cmp
test
jns
lods
ret
mov
fstp
ins
xchg
mov
cwde
add
push
cdq
sbb
sub
mov
or
add
xor
ins
adc
hlt
adc
cmp
lods
mov
das
leave
sbb
int
jno
sti
mov
cmp
cmp
ins
pop
ins
in
ds
bound
mov
fisttp
fwait
test
push
ret
arpl
xchg
xchg
int3
or
rcl
in
xchg
sub
lahf
gs
(bad)
call
inc
add
add
sbb
inc
(bad)
xlat
jae
mov
mov
mov
cdq
sub
fadd
xchg
ds
call
call
xor
mov
ja
inc
inc
sub
stos
ja
stc
or
xor
mov
(bad)
mov
clc
sub
sub
push
shr
std
or
sbb
loope
or
rcl
popa
xor
sbb
push
sbb
fdivp
test
pop
out
jnp
fadd
sbb
repnz
shl
js
ja
inc
add
inc
in
inc
xlat
jns
jmp
xlat
or
call
loope
mov
bound
cwde
les
mov
mov
fist
mov
into
or
and
and
and
or
dec
div
sbb
push
pop
sub
jbe
fisubr
pop
pop
iret
push
je
inc
aas
lods
call
push
xor
mov
std
retf
retf
xchg
or
sub
shr
ficomp
jl
scas
or
out
dec
(bad)
xchg
stos
add
add
and
add
or
inc
add
jge
add
add
cmps
xor
sbb
jl
inc
inc
jno
(bad)
jecxz
mov
adc
mov
xchg
xchg
popf
std
lahf
aaa
adc
mov
push
std
add
cdq
or
mov
jae
xchg
xchg
push
mov
push
popf
xor
mov
sub
lods
dec
es
mov
mov
xchg
push
rcr
push
mov
xchg
loop
jae
outs
retf
fcmovu
call
fbld
outs
add
xchg
repnz
mov
cmp
push
mov
(bad)
jb
ds
outs
sar
push
test
lds
je
mov
aad
dec
movs
ds
mov
mov
and
pop
sbb
in
cli
retf
ret
loopne
pusha
call
cmp
jnp
push
lahf
sub
les
adc
ds
sbb
rol
pop
push
data16
int3
ret
xor
and
and
xchg
jb
rol
fist
outs
mov
sbb
add
lahf
pusha
jb
inc
test
mov
mov
pop
xchg
dec
pop
xchg
mov
daa
mov
add
jo
pop
xor
inc
mov
cwde
ss
fwait
out
pop
sub
push
lahf
scas
(bad)
repz
es
test
mov
xchg
das
retf
popa
dec
rcr
sub
mov
dec
push
mov
lock
cmc
mov
stos
clc
(bad)
dec
(bad)
xchg
(bad)
cmps
xor
dec
sub
mov
dec
or
call
mov
and
outs
repz
loope
sbb
scas
into
aas
test
push
nop
call
jmp
push
call
fwait
or
pop
pop
mov
xchg
cmc
fwait
cmp
rcl
push
pushf
cdq
dec
cmps
or
leavew
test
movs
fild
xor
pop
sub
cli
movs
sbb
sbb
sub
fistp
xor
or
outs
call
xchg
jae
jmp
lock
shl
and
cmc
dec
inc
sbb
leave
xlat
cmps
icebp
mov
push
std
stc
leave
gs
lock
xor
inc
loope
cdq
in
and
arpl
dec
dec
mov
cli
jo
xor
or
jmp
xchg
pop
inc
fsubr
add
(bad)
jle
(bad)
cmc
pop
popa
xor
sbb
retf
push
mov
jne
add
adc
or
stos
(bad)
cmc
xchg
push
push
xor
(bad)
test
jb
lods
jnp
cli
hlt
pop
(bad)
dec
in
mov
sbb
fwait
jcxz
adc
(bad)
pusha
and
sub
scas
jecxz
neg
adc
push
sub
mov
pop
pop
push
call
jle
mov
push
pop
lea
mov
out
rcl
dec
pop
push
or
in
ret
sbb
xchg
push
movs
inc
sub
sti
mov
and
and
adc
aad
sahf
jo
mov
add
mov
xchg
fwait
cli
lods
pop
movs
sti
xor
jmp
mov
mov
xor
jmp
sub
jbe
and
add
sti
sub
dec
outs
call
adc
sbb
out
test
sbb
xor
inc
jg
retf
xor
je
into
pop
push
jecxz
jne
mov
jno
mov
adc
jbe
sub
clc
(bad)
xor
ds
adc
sub
sbb
xor
xchg
mov
mov
jo
cmp
fwait
dec
mov
out
pop
cli
shl
xor
xor
dec
cmp
cmp
mov
es
mov
xlat
(bad)
aaa
(bad)
cli
jno
push
xlat
inc
push
jg
ins
mov
lock
sar
sbb
cmp
sbb
in
jmp
je
jns
sub
adc
push
fwait
cmp
sbb
rol
icebp
outs
imul
inc
(bad)
xor
push
cmp
(bad)
mov
mov
adc
ret
lods
mov
cmp
push
adc
pop
mov
adc
frstor
dec
xchg
push
mov
pop
mov
dec
mov
dec
xlat
add
inc
fadd
jg
xor
ss
call
loop
pop
mov
test
xor
or
sahf
ins
adc
xchg
jp
mov
inc
adc
push
cmp
sub
jl
lock
mov
add
pop
into
mov
pop
das
pop
bound
pop
shl
div
pop
dec
xor
mov
rcl
lea
imul
shl
pop
cmps
and
cld
dec
rcr
out
xor
mov
scas
jo
not
fnstcw
not
cld
popf
dec
loope
add
adc
pop
fnsave
fs
mov
mov
sub
push
imul
gs
ror
mov
jo
sti
mov
ret
jae
out
test
pop
lods
(bad)
movs
adc
push
xchg
and
adc
xchg
shl
outs
jmp
lea
sbb
in
shl
popf
out
xchg
xlat
xor
into
ins
hlt
add
(bad)
xor
xchg
mov
arpl
dec
push
sbb
sub
mov
pop
add
jl
mov
and
popa
xchg
mov
jnp
pop
imul
gs
sub
push
aaa
xlat
mov
and
js
test
push
pop
sub
adc
and
popa
pusha
inc
lods
popa
inc
loope
xor
cld
dec
ret
jmp
retf
and
fwait
shr
jmp
xor
push
imul
lahf
sub
ins
cld
imul
into
pop
jbe
push
jo
sub
and
test
stos
bound
mov
and
sbb
stos
ret
xor
push
push
fs
sbb
xchg
es
dec
(bad)
test
rcr
mov
jnp
lods
jle
sbb
mov
ins
imul
xor
ins
and
loope
cs
pop
dec
jne
xchg
push
cs
stos
and
and
fdiv
aaa
inc
and
mov
mov
jmp
mov
mov
ud0
icebp
sti
shl
(bad)
enter
and
std
cdq
pop
movs
sbb
shr
pop
fstp
mov
xor
movs
ins
aas
into
rcr
mov
pop
sbb
mov
stc
mov
mov
test
iret
enter
xlat
cmp
ins
aad
and
jecxz
sbb
popa
out
sub
jns
push
push
jo
sbb
mov
xchg
test
nop
and
daa
inc
cmps
mov
leave
ret
repz
std
xor
pusha
arpl
inc
in
jne
adc
fistp
adc
lahf
mov
sbb
int3
call
xchg
ins
ret
adc
mov
ds
fdivp
pop
outs
int
push
outs
add
jnp
lock
call
cmp
js
add
pop
or
adc
cwde
inc
(bad)
sub
into
test
push
mov
dec
pop
pusha
inc
xlat
lahf
sub
adc
movs
sbb
mov
adc
inc
fdivr
mov
jne
ret
dec
mov
or
add
sti
movs
xchg
mov
inc
(bad)
shr
arpl
mov
pop
dec
cli
cmc
pusha
pop
xchg
push
jg
stc
mov
sub
popf
ror
out
sub
mov
loope
adc
pusha
js
and
jmp
mov
jnp
loope
or
jmp
jmp
mov
mov
add
call
popa
fs
jnp
jnp
retf
xlat
int
adc
mov
icebp
xor
fbld
inc
call
sbb
pop
adc
fisttp
loop
jo
add
xchg
out
mov
in
lods
dec
nop
add
mov
scas
and
movs
add
add
lahf
je
xor
scas
and
into
push
ja
xlat
cdq
mov
(bad)
std
frstor
pop
std
ins
mov
push
es
imul
ror
ret
cmp
mov
pop
lahf
inc
cmp
inc
js
loope
lds
sub
out
and
adc
gs
mov
sub
mov
and
ss
in
mov
rol
push
mov
xchg
dec
cmp
sub
mov
lea
ror
push
loopne
sbb
pop
push
in
es
mov
jae
retf
test
cmp
mov
sub
or
or
lea
sbb
repnz
inc
cmp
dec
dec
xchg
lock
pop
mov
js
iret
or
imul
retf
push
push
sub
in
into
cdq
icebp
push
fwait
cmp
jo
dec
push
stos
dec
or
cmp
pop
outs
dec
outs
in
(bad)
jle
leave
rol
fistp
or
iret
mov
idiv
je
std
jo
(bad)
ja
jecxz
repz
fist
ret
cli
xchg
pusha
sbb
push
movs
add
lock
pop
xchg
js
ins
and
ss
mov
stos
inc
add
pop
xor
cmp
pop
mov
xchg
adc
or
or
xchg
(bad)
daa
lds
bound
jge
xor
cs
(bad)
sar
mov
out
adc
xor
sbb
dec
daa
rcr
mov
out
cmp
xchg
ins
mov
push
xor
sti
in
adc
xor
mov
and
mov
scas
adc
xor
jmp
xchg
js
cs
cmp
pop
jecxz
test
(bad)
fprem
mov
outs
loop
out
scas
outs
sub
test
sbb
sub
dec
push
in
out
repz
ror
sub
scas
frstor
and
pop
sbb
dec
push
clc
push
in
adc
into
sbb
in
pop
pop
lods
push
mov
cmc
jge
adc
jne
sub
clc
dec
sbb
jo
push
in
pop
xchg
into
nop
jl
add
jmp
call
inc
push
cmp
js
sub
xchg
scas
mov
xchg
adc
and
mov
iret
ss
xlat
or
inc
push
cdq
pop
les
pop
mov
jb
xchg
fnsave
lods
mov
xchg
data16
xor
scas
movs
clc
mov
pop
jae
jl
dec
pop
sub
xchg
pushf
jg
test
xor
jnp
jecxz
or
pusha
jle
adc
sahf
lea
stos
jb
sub
pop
adc
jmp
or
sbb
fs
jl
jnp
lds
xchg
jae
bound
push
scas
or
jno
pop
mov
test
mov
arpl
es
lahf
pop
adc
mov
stc
ins
fs
je
fwait
cwde
mov
in
sti
sub
stos
pop
mov
add
mov
adc
outs
mov
mov
enter
xchg
inc
sbb
loope
aad
xor
(bad)
lods
je
iret
xor
push
lock
xor
in
out
es
call
call
pop
dec
movs
and
stc
xor
lds
adc
imul
xchg
daa
and
mov
xchg
push
push
cmp
je
es
mov
cmp
loopne
fiadd
pop
fs
int3
and
xbegin
aaa
cmp
retf
and
adc
pop
push
loopne
retf
das
xchg
dec
cmps
inc
and
sub
ins
push
(bad)
mov
or
and
scas
xchg
loopne
outs
pop
inc
out
mov
stos
add
cmp
mov
cwde
inc
add
cmp
ja
or
jge
and
fwait
xchg
nop
test
lahf
aaa
sub
cmps
mov
iret
jbe
push
push
mov
jno
pop
sub
ja
cmp
sbb
mov
mov
jnp
xor
xchg
loop
add
rol
in
scas
xchg
test
xchg
add
outs
pop
dec
aam
mov
xchg
xchg
ret
xchg
inc
xchg
or
jle
icebp
aas
push
push
sub
adc
push
push
test
sub
dec
lock
fsub
mov
inc
xor
idiv
add
push
jecxz
dec
add
adc
mov
shl
popa
cdq
dec
pop
mov
mov
push
stos
pop
or
dec
fidiv
aas
sti
iret
js
sbb
retf
ficom
pop
mov
mov
sbb
ret
fisttp
xchg
push
cs
fs
push
pop
sbb
cdq
pop
cs
xchg
imul
xchg
das
adc
jl
int3
dec
in
cmps
jno
add
das
sub
lods
or
fistp
pop
add
add
pop
cmc
lods
pop
mov
cmp
add
dec
retf
int
sbb
int3
cmp
fld
push
pushf
inc
popa
cs
xchg
idiv
xchg
mov
rcl
inc
xchg
loopne
movs
sub
jne
inc
vcvtdq2ps
pop
ficomp
fnstcw
pop
mov
dec
add
mov
inc
pushf
jecxz
add
aad
out
jp
scas
or
popa
or
test
pop
jg
pop
je
jl
rol
cmp
cmp
push
xchg
sub
test
ds
dec
jg
fsub
mov
push
enter
daa
pop
shr
je
jae
and
cmp
push
pop
test
ror
into
adc
xor
sbb
repnz
pop
int
pop
ds
ja
jmp
sub
jno
mov
or
cs
adc
fsubrp
dec
xchg
int3
outs
movs
mov
inc
mov
call
es
or
cmp
dec
sub
lea
sub
jp
or
lods
cmp
and
fs
jg
inc
mov
inc
dec
mov
pop
popf
jp
or
retf
mov
jbe
(bad)
sbb
adc
add
mov
sti
arpl
or
sti
mov
sub
jmp
dec
push
mov
(bad)
push
jecxz
cdq
call
inc
adc
sbb
outs
loopne
icebp
mov
stos
mov
in
js
ficom
sub
jns
xor
or
jb
inc
call
fisubr
mov
jp
sub
fcom
bound
mov
or
push
icebp
mov
movs
in
sbb
xchg
imul
mov
mov
push
or
or
sbb
mov
mov
daa
jl
ins
xor
arpl
cld
jmp
push
clc
add
pop
aam
stos
dec
cld
stos
cmp
mov
mov
xchg
sbb
jbe
mov
aas
add
mov
ror
pop
je
retf
cdq
outs
push
push
push
fst
(bad)
std
xor
retf
rol
mov
rol
ins
fsub
sbb
add
adc
cmp
stos
fs
shl
mov
out
mov
movs
cs
(bad)
outs
mov
pop
nop
sbb
adc
test
xor
addr16
idiv
pushf
adc
push
inc
mov
das
ins
pop
sahf
movs
dec
push
sbb
hlt
sbb
out
(bad)
cmps
div
jns
mov
ret
mov
sub
adc
ret
call
xchg
clc
aad
stos
pop
ins
(bad)
mov
push
outs
int
jge
and
movs
sub
(bad)
or
jle
inc
ret
adc
shl
movs
xchg
lock
push
(bad)
pop
and
mov
xor
dec
mov
outs
xchg
in
scas
mov
lock
in
add
xor
mov
fwait
aad
pop
inc
pop
les
pusha
mov
(bad)
adc
push
stc
xchg
pop
cmp
fld
jns
dec
scas
fcomip
outs
sbb
push
pop
clc
(bad)
fstp
(bad)
ficom
sti
push
aam
mov
jmp
push
push
mov
ss
call
mov
(bad)
and
mov
mov
mov
(bad)
js
mov
pop
or
iret
xchg
sbb
cwde
adc
ret
arpl
mov
fs
mov
sub
ins
adc
mov
mov
and
push
movs
ftst
arpl
sbb
fwait
pop
or
hlt
in
test
xchg
mov
mov
cmp
stc
mov
push
or
les
fnsave
fwait
pop
mov
in
imul
or
cmp
div
test
call
je
shl
fsubrp
adc
pop
jle
mov
aad
les
or
or
mov
aam
mov
aam
push
sar
mov
jae
or
fcom
xchg
(bad)
ins
xchg
popa
rcl
push
mov
retf
adc
lods
jae
out
push
cmp
or
adc
dec
xchg
mov
fwait
push
mov
lods
ins
in
out
push
stc
in
popf
xchg
xor
inc
push
dec
movs
dec
fwait
lods
add
retf
addr16
xor
addr16
dec
add
das
(bad)
enter
test
inc
pop
repz
mov
mov
outs
inc
mov
rol
jnp
call
scas
dec
and
push
pop
test
push
jg
mov
pop
fwait
ja
in
cli
sub
popa
push
(bad)
fsub
add
out
adc
or
loope
sbb
(bad)
aam
int
out
enter
int
push
inc
lds
push
ins
jle
shl
icebp
in
movs
jbe
and
(bad)
cmps
ret
cmp
or
ret
jb
mov
push
add
xchg
cmp
ja
lods
mov
and
xchg
jge
pop
push
mov
lods
fimul
into
arpl
mov
add
and
sbb
push
and
cmps
dec
movs
inc
inc
pop
mov
sti
sti
mov
rcr
dec
sub
(bad)
je
cwde
shl
dec
out
push
pop
mov
rol
lods
push
fnstenv
adc
rcl
sbb
aaa
dec
(bad)
cmp
xor
mov
test
(bad)
inc
leave
addr16
into
or
inc
inc
mov
into
cdq
shr
mov
jno
and
int
out
xchg
(bad)
add
das
lahf
ror
adc
push
sti
out
sbb
cs
ror
add
test
scas
sbb
js
inc
out
adc
rcl
lods
imul
int
(bad)
cmc
scas
sar
pop
mov
shr
mov
stc
inc
rcl
or
mov
loope
pop
cmc
aas
mov
cdq
sbb
mov
push
in
ss
jnp
push
or
ror
inc
cli
rcr
sub
mov
icebp
aaa
fistp
shr
mov
adc
addr16
cld
in
pop
mov
xor
jne
inc
mov
pop
pop
add
fisubr
bound
mov
push
add
pop
cwde
xor
and
addr16
xor
movs
sbb
leave
lahf
dec
xchg
push
dec
addr16
lods
in
add
or
fidivr
lea
hlt
jge
cmp
mov
push
fwait
inc
stos
int
mov
repz
push
clc
inc
cmc
out
test
xor
inc
push
cmp
das
push
xor
mov
push
cmp
jl
cli
sub
jb
lock
loop
aad
(bad)
fst
sub
outs
sub
aam
ret
jecxz
cmp
push
cli
xor
(bad)
or
sub
jae
cmp
dec
shl
in
inc
mov
in
dec
push
sub
or
xchg
outs
inc
push
adc
xchg
daa
loop
jmp
in
ret
addr16
fistp
adc
mov
fwait
shl
mov
jmp
push
aad
retf
adc
pop
inc
dec
inc
add
pop
lods
mov
and
jb
pop
or
sbb
mov
xchg
xor
push
mov
loopne
xchg
sub
mov
mov
sub
loop
movs
dec
sahf
sub
fisubr
sub
push
(bad)
mov
scas
xchg
xchg
pop
sub
or
int
add
stos
pop
pop
mov
(bad)
retf
add
add
push
jns
xor
lahf
pushf
jmp
call
sub
into
out
repz
push
mov
fwait
xchg
inc
or
jae
cmps
xor
pop
aaa
pop
retf
add
lods
mov
into
sbb
leave
and
jg
aad
lea
inc
pop
dec
fisttp
call
cmp
pop
sub
imul
jo
scas
fadd
push
mov
inc
out
pop
sahf
mov
into
idiv
call
and
push
xor
idiv
sbb
xchg
stos
adc
loop
scas
aas
mov
xchg
enter
jae
ds
sub
div
add
sbb
mov
dec
jge
cmp
in
cld
(bad)
jle
xchg
fwait
mov
adc
out
push
inc
sbb
push
xor
enter
js
les
xadd
fist
rcl
cmp
enter
xchg
or
mov
fild
mov
sti
jmp
push
sbb
stos
jb
mov
sar
push
adc
adc
mov
das
or
es
push
lds
in
fwait
mov
xor
(bad)
and
or
jo
mov
std
pop
xchg
mov
dec
pop
leave
lods
jmp
dec
(bad)
inc
nop
lods
ja
icebp
pop
jo
jge
test
add
mov
(bad)
push
cli
sub
sar
sar
xchg
and
xor
test
dec
mov
push
rol
push
cmp
pop
std
or
cmp
cmp
xor
sbb
or
stos
out
mov
mov
call
call
pop
ss
sub
cmps
or
jg
out
pop
jo
nop
jl
fbstp
out
loope
(bad)
xlat
das
xchg
mov
rcl
popa
pop
cld
cld
ret
fwait
sti
push
sub
dec
int
and
add
rcl
xchg
add
lea
int
mov
(bad)
and
(bad)
sub
xlat
test
adc
push
(bad)
sti
push
mov
jg
rcr
ja
div
(bad)
addr16
inc
aad
call
(bad)
stos
test
retf
mov
inc
ret
jg
push
leave
push
dec
loop
addr16
pop
inc
mov
dec
xchg
(bad)
mov
xchg
mov
push
dec
movs
sahf
adc
mov
push
aas
movs
ss
dec
cld
js
in
int
mov
ds
and
xchg
cmp
mov
popa
(bad)
dec
les
call
into
test
ins
mov
mov
ss
call
mov
icebp
imul
mov
mov
jmp
pop
enter
hlt
mov
lds
daa
pop
sub
sbb
or
add
test
aaa
push
sub
sub
xchg
out
popa
mov
enter
in
je
inc
in
(bad)
retf
jp
out
push
inc
mov
rcl
add
sub
mov
fst
hlt
push
imul
fcmove
add
popa
mov
and
loope
daa
in
mov
xchg
adc
test
mov
push
xchg
mov
lods
mov
rcl
xchg
inc
movs
xor
(bad)
popf
cmps
inc
das
or
push
adc
pop
pop
out
push
jb
xchg
mov
dec
fisubr
jbe
je
cli
adc
je
sbb
not
or
leave
inc
mov
loopne
outs
movs
or
push
push
xchg
mov
cmp
(bad)
dec
jge
or
dec
mov
clc
std
outs
mov
fwait
jmp
cdq
mov
xlat
sbb
loope
in
xchg
ins
pop
jmp
in
push
mov
hlt
xlat
and
pushf
jmp
xchg
imul
mov
adc
les
pushf
scas
mov
cmp
push
and
test
stos
mov
ss
les
xor
pop
add
xchg
pop
popf
sub
(bad)
adc
push
push
cmps
cmp
stos
mov
mov
in
retf
xchg
jl
std
out
loopne
cld
mov
mov
into
mov
push
ldmxcsr
cmp
pop
fisub
cmps
or
cmp
mov
pop
mov
fcomp
add
jl
jb
jae
inc
arpl
cmp
fucomi
xchg
std
push
or
lahf
inc
(bad)
fld
gs
ja
mov
xchg
sbb
sar
(bad)
inc
and
test
mov
mov
cwde
xchg
mov
fcomp
(bad)
hlt
push
ins
cmp
mov
fistp
mov
jb
arpl
mov
add
sar
movs
(bad)
or
imul
ret
and
push
jl
retf
pop
cmps
bound
add
mov
pop
loop
ins
adc
scas
jle
div
push
in
mov
mov
(bad)
adc
jns
push
leave
sbb
adc
mov
int
retf
push
ja
mov
retf
repz
jb
add
mov
dec
cs
mov
sbb
or
clc
cmp
xchg
fld
or
push
jo
ret
cld
dec
shl
dec
aas
popa
ss
mov
adc
out
inc
mov
sbb
test
sbb
xor
mov
repnz
das
sub
popf
in
adc
aad
dec
fwait
pop
cmp
popf
xchg
inc
fcomp
mov
movs
js
in
mov
pop
mov
push
loop
inc
imul
jmp
mov
popa
adc
add
adc
and
add
in
bound
pushf
jmp
xchg
bnd
push
pop
jmp
inc
or
or
dec
shl
fucomp
fs
inc
rol
cld
fldcw
outs
mov
pop
xchg
mov
(bad)
jns
lds
lahf
cmp
sahf
aas
pop
int
pusha
add
retf
(bad)
repz
cmc
in
xchg
xor
inc
adc
push
xor
mov
call
mov
mov
mov
fldcw
jo
cwde
inc
lods
mov
stos
in
cmp
pop
cmp
push
xor
add
lods
shl
inc
mov
sub
add
add
pop
add
pop
xor
fild
pop
mov
ficom
sbb
(bad)
arpl
inc
sub
das
adc
jl
inc
push
call
retf
and
adc
push
retf
xor
pop
adc
dec
dec
xchg
scas
loope
(bad)
sahf
push
outs
cmps
retf
push
adc
mov
mov
mov
cmps
inc
cmps
sub
jl
or
ror
mov
jl
inc
ret
and
sub
push
xor
mov
fidivr
jg
icebp
mov
ja
mov
jno
stc
cmp
cmp
adc
cmc
in
mov
leave
xchg
mov
push
push
sbb
sbb
sti
fidiv
push
push
call
or
movs
rol
fiadd
xor
scas
inc
dec
push
lds
enter
lods
retf
sub
sub
mov
mov
mov
dec
xchg
push
lds
or
les
outs
repz
inc
mov
test
ds
out
clc
dec
std
push
mov
or
mov
call
outs
js
sub
scas
and
dec
sbb
ins
scas
dec
xor
mov
sub
inc
ds
lods
sbb
inc
sub
aaa
ret
dec
es
mov
(bad)
(bad)
mov
shl
mov
adc
lods
retf
out
test
mov
mov
bound
pop
push
repz
dec
xor
ins
loopne
push
dec
fnstcw
push
xchg
push
bound
or
xlat
mov
mov
(bad)
rol
nop
call
sbb
inc
push
jno
pop
sub
into
push
jno
pop
xchg
popa
xlat
xchg
adc
dec
push
inc
das
movs
mov
out
lahf
push
push
pop
mov
sbb
push
ds
push
sub
jge
movs
dec
push
mov
les
sbb
ror
sbb
lock
fmul
sbb
shr
sar
push
sub
mov
xchg
or
test
push
std
pop
dec
sbb
cli
xor
xchg
daa
(bad)
jne
inc
mov
push
ds
sub
inc
dec
mov
mov
inc
xchg
jno
jo
out
and
adc
es
jg
out
test
outs
jl
ja
stos
push
jo
clc
inc
mov
repz
repnz
sub
push
fld
pshufw
mov
push
aaa
int
pop
mov
scas
push
push
mov
retf
retf
cmp
dec
mov
stos
popf
inc
in
mov
mov
add
mov
sbb
pop
das
mov
dec
pop
xchg
inc
xchg
addr16
inc
retf
jmp
jp
or
(bad)
out
cs
mul
or
xor
div
cmp
in
push
xchg
inc
jl
imul
outs
gs
inc
dec
cmp
adc
xor
and
xor
aam
iretw
or
push
inc
fcomip
xstore-rng
cmps
inc
jbe
imul
int
inc
inc
jo
jnp
iret
and
adc
mov
mul
es
jp
push
xchg
inc
sub
lds
cld
ss
xchg
(bad)
xor
adc
adc
ins
inc
adc
or
popf
inc
sub
mov
out
shr
adc
mov
adc
inc
cmp
push
(bad)
std
jnp
add
lea
js
addr16
clc
mov
mov
ror
mov
mov
or
dec
xor
or
(bad)
test
jmp
scas
daa
aad
ja
in
push
pushf
pop
mov
push
(bad)
sbb
mov
inc
dec
test
add
imul
fmul
or
dec
cmp
push
sub
xchg
nop
fbstp
cld
call
pop
jg
dec
call
test
punpcklbw
jle
gs
push
data16
jne
mov
rcl
les
inc
cmc
pop
movs
fwait
push
lods
cmp
dec
jecxz
stc
clc
mov
or
and
scas
sar
dec
outs
push
enter
cld
dec
xor
in
sub
mov
push
outs
aas
push
mov
jne
or
xchg
mov
movs
mov
int3
jae
dec
imul
cwde
or
je
mov
sbb
popf
cmps
mov
push
(bad)
aas
xchg
add
(bad)
mov
push
jmp
aas
pop
sub
fs
fimul
outs
scas
push
pop
(bad)
and
add
lock
leave
mov
cld
xor
pop
in
inc
adc
ja
sti
inc
sti
xchg
in
mov
jge
add
mov
cmc
sbb
xchg
neg
push
cmps
jne
je
mov
mov
cmp
movs
and
mov
add
and
loop
das
mov
es
jg
je
rcl
daa
dec
inc
cld
jp
lock
inc
adc
stos
loop
ja
in
sbb
pop
out
add
or
pop
xor
(bad)
cmp
(bad)
(bad)
pusha
sub
sar
jne
xchg
and
retf
sbb
stc
mov
xor
jnp
mov
push
inc
mov
(bad)
jmp
dec
push
inc
xchg
push
in
push
inc
push
repnz
lea
mov
(bad)
ins
rol
cli
push
pop
inc
inc
mov
add
pop
xchg
mov
test
sbb
in
inc
sti
or
push
leave
cwde
fwait
sub
cmp
pop
inc
adc
lds
stos
cmp
icebp
or
loope
xchg
xor
push
js
pop
aad
xchg
or
cmps
or
adc
xor
sbb
std
inc
mov
or
out
jne
jb
or
repz
push
or
jecxz
loop
mov
test
or
(bad)
sub
ja
inc
(bad)
push
jbe
push
inc
xor
cmp
sbb
add
cmps
jo
pop
and
out
leave
cmp
sti
call
mov
jns
shr
dec
(bad)
call
leave
xor
mov
(bad)
mov
sub
or
in
add
outs
push
adc
jge
pushf
ins
sbb
call
stc
das
mov
test
ret
jb
add
mov
fnsave
sti
add
mov
loop
jp
adc
push
jb
out
add
fwait
push
and
ficom
adc
adc
out
lea
aas
or
jmp
pop
xchg
inc
pusha
fsubr
jl
pop
add
hlt
dec
and
clc
cmc
sti
fistp
jmp
xchg
inc
jge
xor
retf
div
adc
jmp
sub
es
mov
adc
out
mov
pop
pop
mov
sub
stos
jge
rcl
jge
sub
sbb
and
mov
cmp
inc
jnp
movs
inc
cld
outs
(bad)
mov
pop
test
icebp
push
fld
mov
mov
jg
rol
inc
loope
mov
jle
movs
ins
les
jl
xchg
ret
jo
in
ds
stos
mov
fs
sbb
lods
inc
pop
pop
test
jle
(bad)
adc
iret
dec
mov
sbb
or
cs
sti
mov
pop
xchg
add
mov
mov
pop
mov
mov
(bad)
pusha
cli
pushf
mov
sbb
outs
movs
sub
mov
movs
pop
inc
movs
adc
adc
mov
push
imul
lods
push
enter
pushf
and
ret
ins
mov
and
cdq
out
xchg
xor
gs
adc
jge
bound
sbb
push
in
cmp
sbb
push
pop
ret
iret
add
ss
mov
scas
aaa
xor
cmp
jp
loop
(bad)
sahf
fisttp
loop
xor
pusha
fsubr
lock
ret
mov
cmp
dec
xor
sub
mov
jecxz
mov
daa
and
lds
push
fisubr
adc
lock
mov
push
xchg
pop
cs
xchg
cli
out
loop
test
fdivrp
mov
push
sbb
and
dec
jmp
test
sub
sub
ins
gs
int3
and
shr
dec
xchg
jge
in
fcom
pushf
sbb
push
int
cld
out
loop
fwait
data16
push
out
or
aam
jg
dec
leave
xor
sbb
fcmovnb
nop
in
pop
stc
mov
hlt
inc
loop
neg
sub
push
loop
jg
call
mov
es
jbe
xor
fimul
inc
gs
push
adc
ret
lea
xor
mov
jnp
or
sub
test
sbb
pop
xchg
dec
std
ffreep
pop
cmp
jo
(bad)
scas
adc
call
cmp
push
cs
scas
pop
sub
sub
xchg
xchg
aam
ret
in
sub
(bad)
or
cwde
retf
xor
mov
pop
test
and
scas
fdivr
xlat
sbb
in
lods
or
cmps
mov
imul
retf
icebp
xchg
out
(bad)
or
(bad)
dec
xchg
mov
(bad)
aad
cwde
(bad)
and
push
or
xor
jge
xor
cdq
xor
pop
mov
mov
push
jae
jb
(bad)
or
mov
std
push
sub
out
setnp
aad
xor
and
ror
arpl
pusha
push
mov
enter
adc
outs
jb
jp
jge
gs
mov
xchg
leave
pop
fcomip
icebp
jnp
loope
pop
loopne
inc
fild
stc
cmc
jp
ret
pushf
iret
or
xor
push
in
hlt
mov
xor
aad
bound
dec
mov
popf
imul
add
pop
xchg
sbb
inc
or
enter
pop
lds
add
mov
xchg
xor
xlat
sub
rol
jg
mov
sub
cmps
mov
fidiv
(bad)
lods
and
mov
sbb
fist
xor
xchg
call
mov
inc
xor
fdivr
pop
adc
mov
pop
inc
jb
fiadd
test
sub
nop
je
cld
push
xchg
(bad)
push
movs
outs
loope
inc
inc
xchg
sbb
cwde
cmp
pop
fwait
cdq
add
repnz
sub
push
pushf
cmc
push
mov
inc
into
mov
add
mov
imul
add
popf
mov
cmp
jmp
xchg
xchg
(bad)
push
shl
push
lods
mov
mov
sub
dec
imul
push
xchg
mov
(bad)
sbb
jle
ret
xchg
mov
cmp
shl
jnp
sub
xor
pop
mov
repnz
lods
jne
fcmovnb
hlt
shr
faddp
sbb
stc
sar
push
stc
ret
sub
dec
fidivr
retf
or
fbstp
inc
cmp
sbb
xchg
xor
xchg
repnz
and
frstor
sub
pop
lods
sub
pop
xchg
and
hlt
adc
call
jo
push
mov
or
loopne
retf
aas
sti
dec
(bad)
aad
stos
xor
std
push
dec
mov
or
jns
mov
sbb
imul
outs
cli
test
or
adc
mov
or
mov
in
dec
jns
jae
adc
test
retf
jl
ins
into
add
(bad)
cmp
adc
push
pop
mov
inc
xor
cli
scas
cmps
popa
push
lea
pop
shl
scas
aam
out
lock
cwde
(bad)
loop
(bad)
hlt
add
jo
mov
push
std
call
mov
or
dec
sbb
mov
mov
jnp
dec
inc
sbb
ficomp
pop
mov
into
pop
sti
fdiv
out
rol
cmp
mov
(bad)
lods
(bad)
out
ret
fdivr
xor
ret
repz
ret
pop
in
scas
mov
mov
retf
jg
sub
inc
add
and
cdq
push
pop
movs
(bad)
adc
jb
pop
cdq
inc
adc
push
xor
mov
or
(bad)
ror
nop
or
dec
jge
sub
ds
xlat
and
ins
dec
in
adc
push
(bad)
pop
aad
fstp
xor
inc
sbb
dec
retf
xchg
out
pop
mov
jmp
ins
jns
mov
jecxz
(bad)
pop
xor
int3
and
adc
cwde
inc
inc
push
ret
pop
dec
push
gs
fcomi
cmp
lahf
call
and
ret
dec
fs
mov
push
mov
iret
sub
dec
(bad)
jnp
pop
arpl
or
imul
hlt
sbb
(bad)
stos
push
out
scas
dec
popa
pop
push
pop
std
mov
mov
sahf
je
std
sti
or
mov
fiadd
imul
mov
pop
and
imul
jnp
bound
mov
sub
adc
xor
loop
outs
mov
push
xchg
cli
repnz
or
shl
scas
mov
outs
mov
push
xchg
popf
loope
test
neg
push
push
(bad)
jbe
out
mov
sbb
cmp
leave
adc
inc
push
in
shl
pop
adc
mov
stos
and
sbb
or
add
rcl
push
mov
cmp
bound
mov
adc
inc
das
repnz
dec
loopne
mov
push
mov
test
mov
dec
pop
sbb
ja
push
mov
dec
and
mov
or
mov
push
add
les
call
outs
pusha
cmps
push
or
xchg
or
push
xor
(bad)
aad
cmps
push
push
inc
fs
cmp
out
arpl
dec
out
mov
add
xchg
fcom
and
sub
push
aad
and
add
inc
add
cs
inc
mov
das
cmc
mov
sub
pop
ficom
mov
inc
add
mov
mov
scas
cmps
push
repnz
and
fst
pop
ss
iret
stos
pop
mov
fadd
inc
out
jmp
sub
test
jo
sbb
jmp
mov
adc
push
dec
mov
cmps
imul
pop
fmul
pop
pop
sti
loop
loope
iret
repz
stc
adc
adc
ins
sub
shr
adc
push
int3
lds
imul
sub
inc
jno
push
shl
add
lds
mov
sub
adc
inc
out
(bad)
and
mov
pop
push
xor
mul
cmps
mov
adc
mov
push
mov
ror
mov
and
ss
adc
pop
inc
jg
mov
dec
xor
test
movs
add
mov
push
jae
fs
ins
xchg
cmp
add
in
(bad)
mov
xchg
div
ds
clc
outs
addr16
xchg
cmp
ins
fwait
mov
xor
mov
icebp
jb
ret
push
(bad)
in
mov
stos
add
movs
inc
sbb
add
mov
mov
mov
ds
mov
push
or
add
jbe
mov
dec
clc
and
into
xor
mov
cs
pop
pop
mov
cmps
sbb
imul
pop
loope
adc
cdq
ffree
or
cli
stc
jae
or
retf
add
jl
xchg
push
dec
and
mov
xchg
inc
mov
aam
xchg
ret
adc
push
aad
sar
lahf
sub
push
xchg
lds
jge
ret
in
fcomp
clc
fs
mov
add
and
(bad)
or
ja
cmps
adc
xchg
jb
add
push
out
sub
adc
mov
pop
cmp
icebp
mov
fst
sub
loopne
mov
xchg
sbb
or
aam
jno
(bad)
cmps
jmp
sbb
pop
int
fs
sbb
mov
cs
shl
xchg
lods
gs
mov
clc
call
outs
inc
or
shl
dec
test
and
aam
mov
inc
div
sub
jo
xlat
rcr
aad
fst
jmp
retf
xchg
dec
xor
jmp
push
pop
jle
dec
sbb
fild
push
xlat
call
ja
xchg
push
not
je
mov
dec
in
mov
mov
aam
in
imul
repnz
adc
adc
pop
in
int
xchg
mov
sbb
dec
repnz
jmp
jecxz
dec
xchg
xchg
mov
push
mov
mov
lahf
pop
sbb
push
aad
mov
dec
mov
jg
lea
imul
ficom
xchg
shr
bound
sub
or
push
seto
jg
xchg
pusha
call
cmp
in
in
xor
xor
jge
pop
cmp
pop
cld
in
stos
popa
cs
push
sub
vpavgw
out
lock
fsin
pop
sbb
jp
rcl
arpl
outs
add
in
call
inc
sbb
aaa
(bad)
shl
mov
out
iret
ror
pop
pop
jbe
pop
sbb
cdq
mov
sub
and
ret
mov
mov
add
push
xchg
repnz
push
arpl
(bad)
test
mov
ret
sub
sti
pop
retf
loop
or
out
cld
fiadd
ret
push
xchg
xor
enter
jne
mov
mov
adc
pop
pop
shl
jg
aaa
and
cs
pop
inc
cs
sbb
jge
push
pop
(bad)
sti
mov
and
loop
aaa
mov
ins
(bad)
jecxz
dec
popf
cdq
inc
sbb
add
bnd
jmp
or
bound
mov
push
mov
pop
sar
lock
cmps
stc
xchg
in
add
sbb
mov
cmp
sub
jge
pop
sub
(bad)
movs
in
lahf
rol
xchg
inc
cmp
jb
dec
and
out
push
fwait
jae
loop
in
jp
xchg
rol
jmp
shl
loope
dec
fisttp
or
xor
ins
add
cs
fisub
lds
mov
ror
sub
loop
sbb
out
les
mov
dec
mov
jg
jge
ins
stos
into
fwait
mov
or
call
hlt
test
pop
mov
sbb
push
movs
clc
repnz
sahf
mov
sbb
xor
adc
xor
inc
jge
pushf
retf
inc
retf
out
pushf
mov
xchg
leave
(bad)
in
ret
test
mov
mov
pop
xchg
fucom
pop
imul
inc
push
or
int3
enter
sub
repnz
jge
xchg
sub
cmp
sahf
mov
mov
dec
dec
gs
cmp
add
ds
aaa
(bad)
xchg
outs
or
loope
test
in
scas
nop
jmp
cld
mov
inc
sar
fdivr
fimul
pop
dec
mov
pop
xchg
jno
mov
lods
js
lods
mov
(bad)
or
(bad)
out
or
loopne
adc
jge
and
add
les
clc
adc
xor
fs
lahf
push
cwde
sbb
sub
and
push
dec
ja
dec
dec
cwde
mov
iret
xor
ret
in
fldcw
push
add
arpl
and
addr16
xchg
push
adc
mov
fistp
xlat
enter
sub
mov
dec
out
cwde
mov
jge
call
daa
not
dec
sub
push
sub
sub
mov
into
call
pushf
loop
cs
dec
call
cmp
lods
les
dec
sar
add
xchg
or
outs
sbb
mov
fsub
sbb
aad
jg
addr16
mov
(bad)
fwait
sti
fidiv
inc
cmps
je
cmp
dec
dec
stos
push
jmp
jb
cmp
fild
push
sbb
mov
xchg
ret
jno
inc
fnsave
mov
pop
pop
cli
sbb
jnp
or
add
inc
pop
ror
scas
repnz
mov
movs
adc
push
mov
shl
jmp
lods
sbb
jo
jnp
mov
cmp
bound
(bad)
xchg
outs
jne
sub
xchg
and
pop
adc
sub
xchg
cmps
push
(bad)
int
inc
sub
pop
psllw
add
mov
jnp
repnz
cmp
aas
movs
fbld
(bad)
div
and
inc
sbb
test
pop
dec
fcmovnu
sahf
sub
sub
jns
fdivr
lahf
sub
pop
inc
outs
mov
cmovno
adc
pushf
and
outs
fsubp
gs
adc
push
ins
push
jecxz
popa
mov
and
or
stc
nop
(bad)
pop
push
jno
daa
pop
sub
cwde
push
lahf
add
pop
cmps
cmp
aad
iret
sbb
or
mov
pop
ret
push
hlt
xor
adc
mov
daa
add
push
inc
jecxz
mov
cmps
and
xor
daa
inc
(bad)
cmp
call
and
cmp
mov
jno
adc
sahf
outs
push
jmp
rcr
xchg
outs
stc
cmp
outs
out
stc
inc
retf
lods
std
or
(bad)
jae
std
scas
xor
mov
and
hlt
push
std
cld
inc
int
and
mov
add
(bad)
sahf
int3
jle
out
std
test
and
shl
out
cs
xor
ret
shr
movs
mov
xor
add
adc
test
hlt
mov
sbb
shl
pop
ds
jnp
scas
push
sti
int
xor
mov
cmps
and
ficomp
dec
xchg
xor
pop
mov
rcl
jmp
add
and
pop
cmp
leave
dec
fisub
push
frstor
retf
push
enter
sbb
mov
sbb
mov
(bad)
mov
or
(bad)
pop
stc
enter
loopne
ror
inc
comiss
fiadd
scas
dec
popa
retf
pop
adc
jecxz
sbb
and
js
jge
(bad)
jl
or
cmp
mov
sbb
ret
out
outs
lahf
mov
fistp
rcl
jo
mov
pop
outs
fcom
in
xchg
or
or
mov
cmp
pop
push
mov
mov
dec
pop
lahf
mov
sub
jb
arpl
cld
ins
jae
xchg
clc
mov
inc
jb
adc
push
xchg
lahf
mov
cld
(bad)
cmp
mov
add
xor
sbb
es
mov
movs
ds
imul
(bad)
mov
inc
(bad)
pop
ds
addr16
dec
scas
cli
mov
sub
cmp
arpl
jmp
jo
add
cdq
call
xchg
cdq
xor
in
jl
cmps
or
std
outs
aaa
mov
sbb
or
add
fbld
mov
loopne
es
addps
or
push
fistp
mov
cld
dec
out
jecxz
jbe
pop
inc
dec
pop
je
pop
test
dec
mov
xchg
mov
fmul
ins
add
out
lahf
loop
sbb
lahf
xchg
mov
out
shl
sub
leave
jne
adc
ret
in
mov
mov
mov
outs
stos
cmc
push
xchg
in
movs
or
je
jle
inc
stc
fisttp
mov
nop
test
ins
and
nop
out
mov
jmp
jo
mov
pop
mov
xor
mov
hlt
dec
gs
mov
mov
jg
mov
repz
cmp
xchg
leave
dec
push
adc
test
cmp
movs
rol
xor
xchg
and
mov
jp
nop
jbe
cs
sub
push
xchg
sub
add
jg
cmps
mov
mov
mov
loope
movs
stos
jbe
mov
fcomp
ss
out
lods
int3
icebp
out
dec
in
pop
ret
mov
fcomp
mov
push
out
add
rcl
add
pop
ret
ret
cwde
dec
ss
ret
cld
icebp
gs
(bad)
mov
call
mov
sbb
out
mov
fisub
cmp
mov
fnstenv
ror
fnstsw
add
pusha
mov
xor
mov
in
push
dec
pop
mov
rcr
jp
xchg
or
inc
sub
mov
js
xor
aam
jbe
push
int
imul
dec
pop
mov
jmp
imul
movs
lods
pop
xchg
aaa
pop
xor
mov
into
adc
sbb
ss
pop
sbb
jo
rcl
inc
inc
mov
fcom
inc
cmp
push
xor
add
imul
cmp
adc
mov
cmp
cmp
mov
loop
jecxz
and
xchg
mov
das
loope
stos
cmps
pusha
jle
outs
jle
adc
xor
pop
fld
ret
push
cdq
push
test
sub
fcom
les
fld
push
fs
je
mov
movs
aas
ins
inc
cmp
shl
xlat
sar
pop
sbb
sub
mov
pushf
stc
jle
test
push
sbb
shr
pop
or
xor
xor
cli
pop
lods
push
sub
jp
mov
or
and
pop
mov
lea
shl
dec
popa
xchg
stos
push
mov
adc
inc
mov
push
fisubr
sbb
pop
add
leave
and
stos
out
mov
jno
nop
dec
std
xor
inc
xchg
add
ds
pop
sbb
cwde
sub
pop
loope
and
mov
mov
push
adc
and
aas
mov
inc
push
xchg
test
mov
jp
jp
dec
sub
mov
inc
push
and
lock
fwait
or
lock
pop
pop
sbb
shl
cwde
sub
xchg
cmp
out
pop
dec
pop
loope
or
lahf
cdq
test
and
sub
in
cdq
adc
adc
sub
xor
(bad)
xchg
xlat
pushf
gs
jb
adc
cmps
(bad)
fbstp
xlat
sbb
pop
push
add
sbb
or
(bad)
sbb
adc
lahf
pop
push
ins
inc
pop
lods
je
dec
mov
int
outs
stos
cmp
mov
pusha
pop
or
jbe
cmp
xchg
mov
mov
ins
leave
mov
adc
adc
pop
stos
dec
test
call
inc
push
sbb
test
and
mov
jno
mov
push
xor
ret
jl
sub
push
call
jg
add
dec
and
mov
xor
push
lock
test
adc
ins
push
jmp
mov
hlt
jne
or
mov
mov
fisubr
ss
cs
mov
sti
xchg
add
jne
mov
jmp
mov
mov
out
rol
mov
xchg
(bad)
shl
add
in
xchg
mov
test
cli
popa
test
push
test
adc
mov
mov
lsl
push
mov
lds
sbb
xchg
and
dec
pop
inc
leave
repz
xor
enter
jae
mov
gs
(bad)
jg
stc
gs
leave
add
push
cdq
push
or
lea
inc
jb
imul
jecxz
rcr
ror
cwde
mov
or
push
test
test
nop
mov
sub
cld
mov
stc
js
lods
push
cmc
push
scas
pop
jg
mov
jo
push
dec
movs
mov
ss
jno
or
lahf
inc
(bad)
jg
pop
mov
mov
push
ror
cmps
xchg
jmp
retf
sbb
arpl
js
mov
les
lods
push
ret
xor
clc
adc
or
hlt
jle
add
in
inc
mov
push
xchg
ret
sub
pop
xchg
inc
cmp
scas
mov
mov
jp
pop
out
mov
sbb
iret
inc
push
(bad)
in
test
inc
(bad)
sbb
dec
mov
xchg
pop
clc
inc
arpl
cmps
cmp
and
clc
dec
push
out
mov
sar
and
mov
push
xor
aaa
loope
and
cmp
ret
fdiv
int
and
movs
lods
scas
scas
adc
repnz
dec
add
jae
add
mov
movs
ds
int
mov
mov
xchg
das
cmps
or
rol
push
into
mov
cli
mov
push
shrd
popa
sbb
jmp
jl
adc
push
ja
adc
and
icebp
jp
leave
test
ss
sbb
ret
pop
cld
test
jg
call
mov
enter
fisub
int3
dec
push
xor
or
jl
cmps
popf
fist
add
pop
push
sahf
xor
scas
xchg
fcomp
pop
jnp
lods
mov
push
push
sti
mov
pop
popa
and
lods
add
out
and
sbb
inc
xor
cdq
call
lds
cmp
lahf
shl
push
xor
jns
xor
shr
ret
cmps
inc
lahf
dec
dec
push
mov
(bad)
sahf
sub
test
sbb
repnz
add
lds
xchg
sub
daa
pop
pop
cmps
inc
inc
icebp
mov
rcl
sbb
mov
mov
sub
rcl
shl
ficomp
retf
shl
push
jae
out
rcl
mov
imul
ins
mov
mov
mov
mov
dec
cs
stos
pop
xor
push
stos
sub
jo
jle
pop
sub
ret
inc
xchg
sahf
inc
mov
rep
jne
or
fldcw
jo
and
adc
lods
fs
stc
xor
jo
mov
test
jmp
push
test
lahf
int3
cli
pop
adc
sbb
call
sbb
aad
daa
cmp
sahf
inc
pop
(bad)
fisttp
dec
shr
nop
imul
jmp
dec
out
dec
or
clc
push
inc
xor
fist
sub
cmp
js
(bad)
xchg
sub
mov
out
es
movs
xchg
xchg
pop
movs
lahf
pop
pop
push
mul
arpl
inc
sub
push
out
or
fcom
or
jmp
mov
mov
jecxz
inc
mov
dec
enter
xchg
cs
push
jl
in
ja
in
mov
xchg
hlt
and
adc
scas
fucomi
dec
aaa
sti
xchg
popf
sub
je
(bad)
icebp
and
or
(bad)
push
ds
add
inc
sysret
test
or
dec
ja
mov
inc
into
mov
mov
pop
test
mov
xchg
pop
add
outs
pop
and
jcxz
fbld
daa
xchg
inc
mov
xchg
jno
out
inc
je
in
mov
or
inc
push
sub
(bad)
cmp
cld
ins
mov
(bad)
sbb
or
pushf
push
sub
xor
repz
add
jge
add
cld
pusha
ins
retf
icebp
push
mov
cmp
clc
test
arpl
mov
scas
lods
xchg
stc
nop
adc
push
mov
out
in
xchg
jbe
pop
dec
les
imul
cmc
mov
mov
sar
xor
push
daa
leave
ucomiss
cmp
fstp
in
mov
cli
(bad)
cld
out
xlat
(bad)
cmp
in
xchg
aam
dec
cmp
xchg
or
test
stc
retf
and
ins
(bad)
sti
cwde
in
push
into
and
ror
(bad)
addr16
adc
int3
shr
add
stos
fmul
int3
sbb
cmp
sbb
inc
xchg
out
shl
xor
push
and
xor
int3
mov
jnp
outs
in
aas
ss
push
mov
sbb
cmp
mov
inc
push
mov
sub
mov
or
and
adc
cmp
lock
fwait
lods
dec
inc
popa
push
outs
mov
outs
adc
dec
and
sbb
or
shl
adc
cld
imul
jg
or
sbb
out
sbb
mov
sub
or
enter
jg
cld
ret
mov
stc
mov
loop
and
(bad)
pushf
cmp
cmp
mov
mov
outs
cmp
popf
push
cdq
adc
mov
int3
inc
and
enter
sub
scas
retf
fmul
mov
popf
stc
les
es
in
stos
dec
mov
ja
outs
and
jae
das
jns
in
cmps
inc
scas
pop
(bad)
push
out
and
shl
imul
stos
cmc
cli
cmps
call
in
sahf
das
push
dec
xchg
int3
popf
sub
(bad)
mov
stos
movs
cmp
out
dec
xchg
popf
dec
adc
mov
lock
mov
or
or
mov
bound
push
in
(bad)
push
outs
fs
jmp
fild
mov
xchg
mov
stc
sbb
call
mov
sub
adc
fmul
xor
and
pusha
mov
sar
or
enter
popf
sar
iret
(bad)
xchg
xacquire
jne
jecxz
sbb
ss
sub
rol
aas
retf
sbb
sbb
adc
test
fnstcw
mov
jb
push
rol
sub
sub
(bad)
mov
pop
xlat
pop
outs
int3
jns
cmps
dec
and
sub
ret
loop
jg
pop
clc
cmp
popa
jne
(bad)
mov
popa
adc
pop
mov
(bad)
xlat
shl
jmp
pop
xor
in
cmc
dec
mov
jo
mov
and
xchg
leave
out
enter
shl
pushf
xor
das
mov
clc
retf
dec
stc
mov
push
daa
mov
(bad)
mov
mov
inc
push
jp
out
pop
ds
sar
or
jae
js
aad
pop
push
pop
lea
popa
pop
pop
ss
into
lods
test
cmp
mov
in
test
test
cmp
inc
xchg
dec
fnsave
xor
push
sbb
xchg
xchg
(bad)
call
push
adc
sub
xchg
idiv
sti
test
out
cs
pop
mov
xor
and
push
inc
shl
(bad)
xlat
cmps
out
mov
inc
inc
jmp
push
shr
dec
mov
(bad)
cmp
lods
jae
fs
jne
jecxz
cwde
test
xchg
xor
sub
ja
int
sub
cld
daa
xchg
(bad)
cmp
paddusw
jbe
pop
mov
jmp
mov
mov
stc
fist
adc
and
pushw
popf
popf
xchg
rcr
sub
push
fstp
cli
loopne
or
mov
(bad)
in
leave
test
mov
loope
or
sub
call
adc
sub
mov
mov
ds
or
std
daa
dec
sbb
cli
lds
xchg
fimul
fwait
test
popf
mov
pop
inc
lock
(bad)
push
push
jb
lods
pop
jns
mov
mov
push
fs
dec
stc
push
fscale
fisubr
ds
hlt
sahf
add
jnp
jne
loop
ret
pusha
adc
fwait
pusha
pop
push
ret
lods
scas
sub
adc
ss
popf
jmp
xchg
imul
call
sbb
jg
cmp
mov
jmp
add
mov
or
test
mov
jmp
mov
rol
loop
or
and
test
mov
test
jno
and
shl
adc
pop
pop
dec
adc
push
daa
xchg
mov
cmps
add
jne
push
out
mov
or
rcl
push
cmp
fld
lds
push
push
push
xchg
dec
or
mov
in
mov
fs
stos
int3
mov
pop
cli
rol
cli
pop
inc
dec
mov
outs
jb
jp
iret
aam
je
popa
(bad)
pop
rcl
mov
pop
sbb
inc
pop
add
lock
sar
or
sub
mov
sbb
data16
or
xor
jbe
ins
shr
repz
sahf
add
enter
aam
sbb
ror
int
adc
mov
das
xchg
mov
pop
push
pop
fs
(bad)
scas
adc
dec
inc
inc
loop
jg
and
rol
bound
(bad)
sub
mov
xchg
add
hlt
push
dec
inc
cmps
sbb
mov
pop
inc
mov
or
push
adc
add
fwait
das
xchg
loop
xchg
das
cmp
pop
aas
aas
push
cmp
push
popa
dec
shr
inc
xor
popw
or
das
cmovl
outs
and
push
lock
sbb
ret
enter
inc
mov
cmp
cmp
loop
imul
daa
pop
call
out
mov
(bad)
stc
mov
mov
aad
mov
mov
mov
fadd
dec
sahf
rol
mov
mov
dec
data16
stc
xor
mov
xor
inc
push
jp
mov
in
daa
cmps
push
imul
retf
pushf
pop
xchg
ret
mov
pop
ins
sbb
es
jg
pop
pop
push
out
dec
pop
cmp
xchg
test
mov
shl
jbe
push
int3
push
js
stc
adc
stc
pop
inc
call
in
(bad)
popf
shl
call
sar
jae
mov
ins
retf
inc
test
mov
cld
pop
pop
adc
rol
pop
or
sub
pop
cli
pop
out
jecxz
mov
jp
test
mov
loop
icebp
cs
test
stc
or
dec
(bad)
pop
addr16
sub
pusha
pop
dec
push
and
fldenv
sti
adc
xlat
sub
es
leave
xchg
jb
mov
psrlq
inc
std
or
xchg
dec
ja
in
mov
adc
push
mov
mov
addr16
int
loope
sar
fimul
xchg
loop
ja
jnp
popf
enter
mov
test
stos
xor
lods
icebp
test
or
pop
lds
pop
xor
sbb
mov
fidiv
inc
retf
pop
and
and
jmp
pop
mov
out
popa
dec
shr
adc
mov
jecxz
fst
dec
out
rcr
data16
cmp
ins
xchg
sbb
inc
pop
cmps
sbb
fwait
test
push
push
repz
jnp
ds
add
jne
push
inc
xor
and
add
adc
add
fild
shl
inc
mov
dec
xchg
mov
fcom
fmul
out
add
cmp
dec
sub
iret
stc
inc
pusha
cli
(bad)
scas
(bad)
pop
cs
inc
pushf
push
jl
xchg
mov
jmp
sbb
mov
mov
fbld
mov
int3
test
loopne
scas
imul
or
outs
jmp
dec
iret
lock
movs
int3
test
rol
mov
retf
pop
sub
xchg
out
cld
sar
jb
add
js
iret
stc
sub
adc
in
test
pop
arpl
test
aad
xchg
idiv
mov
cmp
inc
jae
stc
add
push
cdq
xor
push
sbb
xor
fcom
jle
and
mov
add
loope
pusha
stos
xchg
popa
cmp
aam
test
xchg
jo
out
cdq
xchg
dec
or
rcl
or
jp
pop
gs
aad
inc
gs
push
dec
jbe
cmp
jae
pop
or
fist
sbb
movs
add
in
leave
repnz
bound
mov
sub
ret
int
ret
and
jecxz
cwde
(bad)
mul
mov
loope
aam
xor
jmp
pop
retf
out
add
add
shl
mov
imul
mov
stc
in
xor
or
in
out
in
movs
jle
mov
xlat
(bad)
mov
popa
pop
das
or
inc
retf
jp
imul
cmp
lods
fiadd
push
xlat
jbe
xchg
mov
dec
xor
jbe
mov
dec
xchg
ret
test
push
jle
or
pop
mov
ins
xchg
imul
mov
inc
xchg
sub
rol
(bad)
fldcw
push
sar
cmps
sbb
cmp
add
jecxz
xchg
outs
xchg
push
mov
cs
and
pop
and
pop
cwde
lods
adc
(bad)
jns
std
push
cmp
in
push
fadd
push
retf
mov
pusha
adc
out
push
mov
(bad)
(bad)
sub
push
xor
mov
mov
xor
es
jmp
or
mov
call
cmp
inc
pop
pusha
sbb
push
(bad)
(bad)
fiadd
outs
fimul
hlt
push
push
shl
scas
pop
movs
int3
sahf
push
mov
lahf
jle
inc
push
mov
cmc
or
mov
sbb
add
fidivr
test
clc
push
int3
cli
call
mov
ds
adc
je
or
xchg
dec
sar
mov
dec
dec
push
jg
push
sahf
cld
sbb
in
data16
js
inc
adc
push
cmp
cs
cmc
les
xchg
outs
lock
xchg
xchg
or
cmc
push
daa
loop
cmp
mov
or
mov
sbb
push
fistp
sub
jle
push
adc
repnz
and
aaa
movs
push
in
mov
sub
mov
xchg
lods
ins
xchg
or
pop
inc
push
jmp
test
ins
lods
pop
sbb
lea
adc
out
nop
aam
dec
retf
inc
retf
xchg
stos
push
cs
mov
nop
xor
mov
xchg
dec
jmp
mov
cmp
mov
js
aam
loop
xchg
inc
sbb
adc
pop
mov
cmp
ins
add
cs
sbb
add
jge
data16
push
std
lods
fdiv
mov
call
push
jae
std
mov
int
push
(bad)
sbb
movs
jp
pusha
pop
and
pop
test
fstp
fwait
mov
out
es
sti
or
pop
lea
popf
test
pop
ds
leave
push
jp
mov
jmp
maskmovq
inc
jmp
ror
sub
pop
sub
cmp
and
lds
movs
push
fld
mov
push
mov
sbb
hlt
test
loop
and
js
out
lods
popf
shr
cmp
sbb
int3
stos
pop
lock
inc
inc
call
jg
call
les
scas
and
or
hlt
test
in
popa
inc
pop
imul
call
pushf
adc
cwde
aaa
scas
mov
or
(bad)
seto
jg
lods
loopne
inc
daa
and
jecxz
adc
jg
ror
xchg
cmp
jmp
jg
sub
les
int
push
push
pop
mov
mov
in
(bad)
clc
les
scas
cmp
dec
je
jmp
cmp
(bad)
fsub
fmul
dec
pop
mov
aam
pop
fwait
in
fwait
pusha
movs
sar
outs
or
sar
or
fisub
xchg
sbb
inc
and
aaa
es
mov
inc
or
sbb
inc
sub
pop
inc
int
out
mov
(bad)
jmp
stos
out
sub
dec
sbb
icebp
dec
sub
movs
and
test
cmps
cmc
int
clc
test
inc
sbb
popf
fisub
dec
jmp
iret
adc
aad
pop
or
jb
jl
scas
lods
fs
xlat
sub
or
mov
or
push
sub
mov
lods
mov
mov
push
shr
push
push
mov
xchg
jae
xor
dec
cmp
jo
cwde
xor
add
jne
pop
sub
jge
lahf
cmc
test
out
movs
rcr
or
sti
mov
mov
lods
aas
inc
jp
out
mov
bnd
mov
fdiv
jmp
mov
xchg
mov
add
push
popf
mov
mov
stos
les
bound
inc
lods
lock
stc
push
inc
xor
inc
int
call
push
in
fsub
mov
(bad)
and
xchg
jp
xchg
pop
and
imul
out
mov
clc
fwait
add
jbe
mov
and
or
or
cmp
int3
jmp
(bad)
push
sahf
call
(bad)
jb
mov
dec
cdq
test
pop
mov
rcr
add
inc
sbb
stos
ror
or
sub
or
ret
push
and
cdq
(bad)
in
push
mov
inc
std
or
sahf
sti
(bad)
adc
shr
les
cmp
(bad)
rol
rcl
mov
mov
or
xchg
add
inc
push
lea
jne
ss
mov
push
not
outs
inc
and
aam
shl
and
les
retf
ins
fcomp
xor
mov
(bad)
fstp
xor
pusha
jb
test
(bad)
(bad)
sbb
mov
adc
pop
push
dec
dec
dec
ds
bnd
shl
add
cld
fdivr
es
mov
xor
test
shl
lock
mov
sbb
dec
imul
pop
dec
and
xor
lds
mov
pop
fwait
push
clc
cld
push
jge
cmp
mov
lock
stos
and
mov
dec
dec
xchg
cmps
mov
imul
cli
push
push
cmp
mov
add
fistp
pop
ins
cli
mov
inc
mov
mov
mov
rcl
add
sub
pop
pop
int3
outs
rcl
outs
xchg
xchg
pop
cmps
inc
gs
cmp
mov
inc
std
add
xor
mov
popf
rcl
mov
and
inc
fs
mov
inc
and
cmp
sub
push
je
sbb
pushf
jmp
adc
mov
mov
adc
sub
in
jo
out
and
adc
sahf
cmps
(bad)
(bad)
pop
sbb
mov
fst
mov
(bad)
cld
jbe
into
ja
std
mov
sub
mov
mov
xchg
xor
sub
mov
int
sub
inc
out
cmp
sbb
ds
out
adc
loope
jmp
push
jns
adc
jmp
call
stc
data16
(bad)
cmp
fiadd
out
std
stos
or
es
loop
cmp
jmp
mov
popf
jne
mov
test
jmp
mov
add
jle
fild
lds
movs
lods
pop
and
cwde
mov
jo
xor
mov
hlt
pop
inc
adc
push
aad
mov
xchg
pop
xchg
push
stos
push
xor
lea
lahf
pop
popa
gs
mov
mov
leave
push
xchg
adc
lods
imul
jp
xchg
push
ret
lds
mov
jge
mov
dec
and
inc
dec
mov
xchg
rol
arpl
xchg
pop
sub
fnstenv
jmp
bound
retf
cmp
sbb
fdivr
pop
std
xor
repz
jle
xchg
jmp
mov
in
pop
sahf
cdq
dec
cmp
mov
adc
mov
inc
mov
mul
adc
ror
fdiv
sbb
mov
cmp
mov
jmp
in
mov
sub
jae
cmc
xchg
mov
rcl
ja
jl
push
sub
pusha
jb
fimul
pop
pop
ret
xchg
mov
jmp
xchg
mov
dec
mov
sbb
dec
and
scas
inc
pmulhw
cs
lods
mov
daa
jle
les
pop
sub
shl
jle
mov
adc
pop
push
cmp
jb
shl
in
enter
dec
sub
std
push
(bad)
mov
ret
loope
push
cmp
(bad)
pop
mov
mov
mov
dec
loope
nop
clc
cmc
fld
call
adc
aas
pop
je
ror
dec
mov
dec
ins
aas
fcomp
mov
cmp
mov
ficom
inc
mov
arpl
inc
outs
loope
stc
daa
rcr
ss
jl
sub
ficomp
pop
jno
inc
mov
jl
and
(bad)
loope
mov
fwait
loope
je
lds
dec
cs
mov
add
mov
fld
(bad)
cmps
sbb
pop
jbe
ins
sub
adc
aas
cmp
sub
popf
push
dec
fstp
jno
out
cmp
push
lahf
lods
(bad)
xor
fdivrp
popa
push
addr16
cdq
test
mov
daa
sbb
fwait
ins
iret
xchg
inc
(bad)
jns
idiv
ffree
push
and
pop
cmp
pop
dec
mov
ins
add
test
jp
data16
xor
imul
clc
test
out
ins
and
cmc
fwait
les
popf
mov
pop
xchg
dec
in
mov
je
add
pop
or
and
lods
loop
ficom
scas
retf
xor
mov
xchg
lahf
jno
les
jge
mov
mov
xchg
dec
mul
int3
pop
pop
or
jbe
push
cmp
cmps
and
xchg
inc
and
or
mov
push
xor
cli
mov
out
cmp
sar
push
test
jne
test
aad
(bad)
cmc
aaa
repnz
out
cmp
mov
fdivp
inc
push
sub
imul
cmp
jo
fstp
out
lds
idiv
xchg
mov
mov
add
sbb
mov
out
pop
dec
mov
mov
cld
cmp
sar
in
inc
aad
icebp
(bad)
aam
mov
in
nop
pop
pop
push
daa
jp
or
in
cmp
jl
cs
retf
add
mov
sbb
or
sub
call
ss
cwde
push
sub
or
pushf
mov
cmp
or
push
adc
leave
retf
sbb
adc
mov
and
shr
stos
add
cmp
or
ins
jmp
(bad)
inc
dec
ja
cmps
pop
test
pop
ss
ins
adc
pop
jle
push
xchg
xor
shr
fnstsw
das
pop
rol
and
pusha
ins
(bad)
or
pop
inc
adc
fdiv
and
add
pop
daa
stos
test
cmp
icebp
cmp
sub
jmp
popf
(bad)
lods
(bad)
std
mov
iret
and
jecxz
xor
fnstsw
xchg
xor
test
and
xchg
adc
adc
std
(bad)
cld
pushf
sti
or
(bad)
cs
xchg
mov
call
lods
push
ds
inc
imul
lods
ins
scas
ds
pop
adc
ja
push
lock
mov
pusha
mov
sbb
adc
pop
sub
das
or
out
push
push
mov
add
add
scas
mov
push
cmp
mov
(bad)
into
push
js
jmp
or
pop
mov
add
jns
mov
cli
lahf
xchg
adc
mov
ret
pusha
js
sar
xor
mov
jne
mov
pushf
inc
jge
ins
push
sti
or
sbb
adc
(bad)
jmp
push
inc
xlat
pop
cmp
not
mov
shl
stos
imul
push
cmp
sub
in
outs
sub
mov
stos
nop
sub
adc
jmp
mov
fild
call
(bad)
push
fsub
cmc
dec
scas
pusha
popa
jmp
cld
mov
in
out
mov
js
and
pop
inc
dec
mov
pop
cs
int
pop
je
int
xor
fst
fst
or
fwait
repz
retf
ins
fistp
mov
jo
xor
out
and
mov
or
gs
test
xchg
imul
lods
js
xlat
or
das
dec
pop
pop
cmp
pop
fsubr
xchg
pop
sbb
mov
outs
repnz
push
sbb
dec
jg
cmp
mov
sub
or
or
bnd
ror
xchg
cmp
inc
dec
inc
cli
lods
add
outs
je
sub
mov
push
fsub
nop
retf
or
pop
jle
cmp
adc
pop
call
inc
and
js
pop
mov
ret
mov
out
or
jg
mov
mov
ret
dec
or
push
fwait
xchg
inc
gs
push
sub
mov
dec
push
fnsave
arpl
or
push
xor
or
sub
sbb
xchg
sub
jno
jo
clc
adc
mov
imul
stos
xor
js
adc
jb
outs
addr16
and
clc
retf
add
xor
sti
neg
mov
xor
push
mov
daa
and
repnz
in
jg
mov
mov
mov
mov
clc
pop
cmp
or
stos
pop
mov
dec
lea
cmp
mov
out
fisub
mov
push
aaa
adc
and
adc
and
or
mov
jle
xchg
ds
pause
xchg
mov
pop
sbb
mov
push
imul
xor
jmp
ja
and
loop
lahf
adc
(bad)
fwait
rol
jno
iret
adc
icebp
push
inc
add
mov
cmc
or
icebp
jecxz
mov
jg
push
cmps
mov
push
fcom
scas
xchg
mov
sub
inc
arpl
add
stc
int
cmc
iret
fidivr
ds
xlat
sahf
ins
out
stos
dec
mov
or
stos
mov
inc
inc
stc
mov
(bad)
sub
les
cmp
jae
jne
pop
push
and
push
cmp
and
mov
fisttp
xchg
or
or
sub
(bad)
sbb
push
pusha
xchg
xchg
pop
mov
pop
jmp
repz
aas
out
mov
sahf
sbb
adc
mov
push
and
cmp
or
mov
outs
stc
sub
fidivr
int
push
stos
shr
popa
dec
dec
or
cmc
jmp
daa
(bad)
xchg
mov
out
sti
or
pushf
push
arpl
xchg
ret
fldenv
cmp
push
out
jbe
sbb
jb
mov
lods
ins
jmp
adc
adc
test
ss
mov
jne
dec
sbb
or
xlat
or
sub
dec
inc
and
sbb
adc
xchg
into
push
jecxz
leave
bound
test
inc
nop
xchg
(bad)
fistp
pop
cmps
jl
std
mov
aad
loope
mov
enter
and
cwde
inc
fisttp
in
mov
sub
cmc
sub
fwait
mov
fwait
hlt
scas
push
mov
outs
and
arpl
sub
pop
rcr
imul
pop
mov
push
mov
icebp
sbb
xchg
mov
cmps
jo
scas
inc
sbb
sub
repz
cwde
outs
repnz
xor
pop
jae
int3
pop
adc
adc
xchg
push
push
jge
mov
xlat
adc
ins
into
ss
rol
test
call
push
and
(bad)
fdivr
ds
fwait
leave
fld
jmp
cmps
into
cmp
fidivr
leave
repnz
fsub
sar
ret
mov
test
(bad)
scas
push
or
out
dec
out
idiv
sub
sbb
dec
mov
jg
int3
lea
je
(bad)
sbb
push
adc
pop
inc
or
xlat
pop
mov
push
mov
js
iret
(bad)
in
xor
mov
jge
mov
cmp
inc
(bad)
test
sar
xchg
sti
xor
xor
pop
sub
sbb
xlat
popf
mov
sbb
jmp
js
mov
sub
jmp
loop
sahf
or
fadd
jns
out
xor
(bad)
es
pop
sar
test
cmp
pop
nop
mov
repz
dec
and
sub
fdiv
dec
nop
jp
popf
push
stos
cmp
xor
into
adc
mov
iret
adc
ins
loopne
ins
popf
mov
(bad)
mov
mov
add
outs
add
inc
xor
not
into
inc
ret
push
rcr
cmp
imul
pusha
sbb
lahf
dec
inc
cmp
pop
or
xchg
mov
cmp
lahf
iret
push
mov
mov
mov
mov
push
xor
jnp
pop
int
jmp
into
add
pop
in
stos
lea
int
dec
dec
je
push
push
std
js
adc
iret
push
jle
lds
xchg
stc
sbb
and
adc
add
cmps
pushf
test
jle
lds
lock
xor
xchg
mov
mov
mov
bound
(bad)
aaa
inc
sub
les
mov
popa
lods
and
js
js
(bad)
bound
sbb
xchg
add
sbb
push
mov
lea
(bad)
mov
scas
jmp
jle
test
jmp
bound
mov
sbb
mov
sub
test
mul
sbb
test
mov
fidivr
std
add
dec
cmp
xchg
add
call
std
dec
dec
add
mov
pop
out
xchg
pop
mov
mov
xchg
or
pop
push
pop
ds
dec
sbb
sbb
in
leave
cmps
mov
push
fcmovnbe
add
(bad)
stc
test
xlat
add
or
cmc
fucomip
xor
xchg
inc
pop
outs
adc
outs
sbb
(bad)
mov
xchg
mov
lea
jmp
fstp
in
repnz
movs
dec
sahf
sub
dec
mov
jp
test
add
pop
push
stos
push
sbb
das
xchg
push
inc
nop
imul
sub
xchg
sub
inc
and
inc
int3
inc
xor
enter
ret
fwait
xlat
mov
test
cmp
jp
cwde
arpl
or
mov
sub
es
test
(bad)
or
xor
sbb
push
pop
dec
push
imul
push
ror
dec
popa
adc
shl
mov
inc
jmp
add
mov
outs
and
idiv
hlt
call
sahf
out
in
sub
lock
sub
daa
out
inc
iret
aaa
neg
sbb
imul
cwde
dec
adc
les
sbb
sbb
push
int
pop
dec
sub
cmp
push
inc
jge
push
mov
sbb
pop
cmc
sbb
pop
(bad)
mov
sbb
dec
dec
or
out
cs
mov
inc
shr
mov
xchg
jmp
popa
cld
js
dec
xor
mov
or
mov
imul
movs
xor
cmp
push
sbb
ins
add
dec
mov
cwde
fucomi
out
xor
inc
jecxz
stos
lods
mov
push
push
out
mov
mov
mov
push
(bad)
cld
inc
add
mov
clc
pop
not
sbb
xlat
add
push
push
sub
xchg
sbb
xchg
add
xchg
pop
xor
stc
repz
mov
mov
pop
adc
xchg
cwde
mov
xor
sti
outs
ror
xchg
mov
idiv
into
popf
push
cmps
push
test
pop
rcl
loope
cvtdq2ps
cmp
jmp
cdq
jae
cs
xchg
cwde
mov
and
pop
cmp
mov
je
ja
or
lods
cmp
push
mov
movs
or
in
pop
into
jge
inc
inc
dec
pop
xchg
and
and
inc
jo
xlat
lods
shl
jns
out
push
jl
mov
add
lods
(bad)
adc
pop
ret
and
and
add
sbb
inc
mov
dec
(bad)
idiv
mov
ret
cwde
adc
test
(bad)
inc
xor
ins
je
xlat
sbb
fild
pop
sar
ret
stos
call
(bad)
mov
fwait
popfw
arpl
nop
mov
sub
sti
scas
fld
jo
mov
pop
xchg
imul
and
cwde
sti
or
cdq
jg
dec
aas
cld
and
sub
aad
fcmovnb
inc
add
cmp
popa
hlt
dec
push
enter
fiadd
jo
jmp
imul
pop
mov
fcom
xchg
push
cmp
jl
jno
or
idiv
ret
shl
dec
xchg
arpl
add
scas
clc
cdq
(bad)
in
fcmovnb
in
(bad)
or
test
das
xor
data16
outs
fldcw
adc
repnz
xor
in
pop
in
aas
or
fs
xchg
daa
clc
fcomi
xchg
jl
sub
xor
jecxz
and
not
cmovae
aam
jbe
dec
add
mov
enter
push
mov
sub
arpl
popa
mov
or
fstp
repz
(bad)
cmp
cdq
arpl
and
pusha
icebp
jmp
cli
ss
mov
cmp
jns
mov
add
arpl
or
push
out
add
xchg
pop
mov
pop
rcl
daa
ret
ret
push
xor
xchg
add
aas
mov
dec
jl
outs
ror
int
(bad)
mov
or
xchg
jge
test
xchg
jle
aam
inc
ror
jle
pop
test
xchg
stc
sbb
cmp
adc
ret
pop
enter
jbe
addr16
inc
clc
gs
dec
mul
or
mov
pop
pushf
inc
daa
jnp
(bad)
or
or
dec
call
lea
jmp
push
mov
fsubr
fist
cmps
push
dec
cmp
jl
mov
sub
and
popf
mov
mov
test
xchg
dec
aad
jecxz
mov
mov
cli
cmp
ret
es
and
sbb
icebp
push
inc
ja
inc
xchg
ss
xchg
jnp
sub
xor
repnz
mov
and
cmc
cmp
adc
sbb
(bad)
push
arpl
mov
pusha
popa
shl
jecxz
lea
shl
push
fwait
jp
cmp
test
sbb
jnp
mov
pop
mov
dec
jnp
ds
enter
ss
pusha
imul
sub
shr
enter
xor
ds
out
fs
arpl
lods
xchg
or
sbb
mov
lds
add
mov
inc
rcr
cmps
sub
sbb
cmp
imul
pop
mov
fwait
ss
movs
push
jno
mov
(bad)
in
js
push
cwde
jecxz
jecxz
mov
dec
fdivr
add
mov
pop
add
jo
movs
loope
sbb
jmp
mov
sbb
ins
aas
cmps
lds
add
ins
ss
dec
xlat
int3
sbb
jae
pop
popa
pop
popa
ins
(bad)
mov
in
push
in
out
sti
mov
in
imul
js
xchg
(bad)
jbe
sbb
and
add
mov
rol
hlt
mov
mov
imul
fcomp
hlt
push
dec
fnsave
xlat
cli
scas
dec
or
aaa
mov
cwde
ror
pushf
add
ins
sar
cli
sub
popf
retf
out
mov
aaa
retf
in
xchg
mov
cmp
mov
pop
pop
dec
xchg
jo
pop
lahf
inc
xor
xchg
and
push
or
cs
jecxz
push
outs
fdiv
or
mov
push
sub
sti
cmps
jmp
leave
jp
push
pop
rol
pop
ds
shl
pop
inc
movs
aad
aas
inc
ins
inc
call
or
hlt
sub
jge
and
mov
aas
push
imul
repz
int
mov
mov
adc
and
bound
dec
clc
arpl
mov
jl
mov
lea
jno
lds
mov
add
cmps
(bad)
fnstenv
or
out
lds
push
cmp
add
sbb
test
xchg
in
fnsave
addr16
or
inc
and
iret
popf
or
xchg
not
int
out
sub
aad
pop
je
icebp
push
lods
pop
in
imul
cmps
add
(bad)
or
lods
pusha
pop
push
inc
xchg
mov
pop
scas
dec
call
in
pusha
or
inc
scas
enter
xchg
fucomi
and
or
shl
fwait
inc
pop
cdq
and
mov
call
xor
dec
or
(bad)
enter
jns
int
and
mov
xchg
jg
bound
hlt
add
adc
out
or
pop
pop
aas
cmp
pop
adc
aaa
repz
aam
aad
jne
pop
push
popa
jb
fs
cmps
std
cmp
call
inc
daa
icebp
mov
cmc
(bad)
push
lods
sub
xor
xchg
sbb
jmp
push
jge
mov
dec
mov
mov
and
(bad)
jo
cmps
int
fcmove
sub
mov
and
loopne
inc
jmp
adc
pop
pop
push
inc
mov
sub
stc
lahf
pop
xor
loopne
std
adc
pop
das
push
addr16
adc
mov
imul
and
pop
pop
inc
dec
lea
jmp
retf
popa
pop
inc
jge
outs
mov
inc
mov
mov
push
ins
jno
xor
add
add
xchg
mov
cdq
sub
enter
pusha
mov
fidivr
test
mov
sub
sub
xchg
cvtpi2ps
pop
sti
dec
jecxz
xor
rol
and
adc
or
and
call
mov
loop
xor
ftst
push
add
out
(bad)
jge
jecxz
sbb
mov
mov
sub
lahf
push
add
dec
pop
xchg
pop
enter
mov
(bad)
pop
cmps
pusha
pushf
mov
leave
rcr
and
fnstenv
xor
pop
std
repz
retf
or
jo
popa
repz
clc
jp
xor
movs
ficomp
and
rcr
(bad)
jb
int3
fwait
dec
es
dec
push
push
xor
jmp
jl
out
ja
fs
sub
(bad)
(bad)
jae
inc
and
jg
push
jne
addr16
xor
push
ins
or
icebp
outs
mov
aaa
adc
jo
pop
or
inc
cmp
push
sbb
sbb
stos
je
ret
sub
xlat
or
pop
cwde
inc
cmp
out
dec
jnp
jge
add
dec
inc
mov
pop
popa
stos
add
data16
dec
hlt
stos
(bad)
pop
sbb
or
xor
mov
and
sbb
stc
xchg
sub
not
pop
adc
and
fs
and
in
hlt
mov
sub
scas
and
loop
fadd
je
push
cmps
(bad)
mov
push
in
(bad)
inc
ds
jg
fild
mov
shl
lods
dec
push
bound
push
adc
mov
push
jno
fcomp
or
push
cmp
fsubr
data16
hlt
pop
mov
sbb
dec
out
outs
push
pop
pop
shl
pop
enter
ret
lods
clc
jne
aam
mov
iret
jp
dec
(bad)
jp
jnp
lea
pop
add
sbb
(bad)
pushf
sbb
jb
cmp
push
retf
jnp
and
jnp
push
movs
mov
or
pop
dec
pop
push
jo
push
inc
jns
imul
shl
xor
loope
mov
ds
fdiv
scas
sbb
xor
jns
mov
ds
test
aam
into
(bad)
imul
ins
jb
repnz
in
scas
ss
out
std
cmp
stos
pop
adc
(bad)
fdiv
xlat
ds
or
dec
stc
or
rcl
push
imul
in
or
pusha
fisttp
adc
mov
(bad)
retw
cmps
or
mov
jp
mov
mov
cmp
out
adc
cdq
icebp
sbb
mov
dec
fwait
pop
fisttp
inc
adc
outs
inc
bound
jmp
cmp
sbb
ins
push
pop
hlt
add
lock
add
sbb
mov
add
loop
dec
sbb
mov
out
mov
dec
(bad)
pop
daa
xchg
(bad)
or
xor
cmp
test
idiv
mov
(bad)
cmp
mov
outs
setp
lahf
clc
jmp
ficomp
scas
(bad)
mov
es
mov
dec
retf
or
xchg
lock
jg
fmul
in
mov
xchg
inc
pushf
or
pop
sbb
cmp
add
mov
push
inc
ja
mov
sbb
sub
outs
adc
cwde
std
lea
test
aad
xor
fwait
push
mov
(bad)
sub
fbld
les
in
int
ins
(bad)
cmp
xchg
or
test
test
shl
mov
in
dec
nop
(bad)
or
push
cwde
int
fcomp
pusha
fs
sub
pop
enter
js
dec
cmps
repnz
addr16
xchg
mov
push
push
scas
icebp
adc
popa
sbb
adc
xchg
aam
mov
aam
call
bound
cmp
xchg
or
adc
push
jae
cmp
jmp
ret
les
add
(bad)
test
std
sti
mov
mov
and
and
adc
ret
test
aas
scas
mov
jbe
inc
pop
sbb
xchg
xchg
nop
lahf
mul
add
sar
(bad)
pushf
ret
cmps
inc
test
jl
xor
dec
jns
push
jmp
les
popa
xor
retf
sub
leave
adc
xchg
cmp
pop
aam
loope
mov
pop
call
pop
mov
loopne
mul
xchg
pop
retf
jl
clc
bound
div
inc
cmp
data16
mov
aad
jmp
push
scas
push
test
mov
mov
out
cwde
add
mov
jg
ficom
xchg
push
mov
les
mov
out
pop
sti
push
sub
and
ret
ret
sub
cdq
cld
mov
and
xor
(bad)
aam
outs
shl
pusha
mov
aas
push
push
push
push
or
xor
rcr
jo
cmps
mov
xor
push
cmp
pop
mov
adc
mov
data16
sbb
out
push
mov
add
mov
pusha
push
mov
xchg
int3
mov
bound
mov
jb
in
repz
test
and
xor
push
inc
pop
sbb
arpl
imul
enter
mov
push
(bad)
rcl
jo
sub
in
nop
dec
dec
aaa
cs
call
jo
pop
push
gs
push
dec
xor
test
adc
add
fbstp
clc
je
test
jb
leave
lods
or
call
mov
adc
dec
jne
fs
xchg
and
lds
pop
xchg
scas
stc
dec
inc
adc
stos
add
mov
mov
mov
pop
dec
or
and
xlat
dec
mov
int3
mov
sti
cmp
add
mov
les
aas
sbb
mov
mov
repnz
(bad)
inc
pusha
pop
mov
sub
call
add
movs
popa
stos
push
(bad)
jns
loope
inc
daa
inc
outs
out
sbb
in
(bad)
in
(bad)
cmp
dec
push
jnp
push
not
jmp
icebp
pop
jl
dec
test
fst
movs
sub
arpl
popa
pop
clc
sahf
repnz
mov
jne
dec
out
ss
popf
cmp
and
mov
xor
xor
retf
mov
pcmpeqb
call
pop
(bad)
out
push
iret
shl
(bad)
ret
lds
cwde
mov
cmc
cmp
cdq
rcr
push
sub
cmps
jle
ror
jbe
clc
add
push
push
cmps
sbb
sub
and
xchg
scas
jno
push
fsubr
rol
ds
pop
mov
outs
mov
fistp
cmp
dec
mov
idiv
cmp
dec
push
push
out
inc
jnp
dec
xchg
fldcw
ficom
(bad)
sbb
pop
inc
jb
repz
pop
das
sbb
and
push
rcr
mov
sub
jle
outs
mov
cmp
xor
adc
aas
inc
fcomp
icebp
ja
fsubr
add
cs
or
push
dec
xlat
stc
dec
xlat
inc
push
xlat
enter
jo
adc
outs
xchg
scas
shl
dec
pop
lahf
pop
jne
or
adc
pop
xor
out
dec
pop
loopne
or
and
int3
ja
sbb
lock
ror
xchg
shl
jge
mov
jne
cmp
adc
leave
cwde
push
out
jl
test
fild
sub
xor
(bad)
jns
mov
adc
rcr
leave
lahf
imul
push
push
mov
adc
dec
std
iret
out
sub
std
fwait
cmp
fist
or
inc
and
xor
rcr
rcl
and
and
scas
sub
test
add
gs
imul
and
popa
pop
neg
add
jno
and
mov
xor
jnp
fsubr
adc
mov
push
gs
mov
push
retf
repnz
add
push
mov
es
and
adc
xchg
jl
inc
mov
fnsave
xor
pop
retf
(bad)
jge
cwde
loopne
inc
fadd
repz
sbb
adc
push
and
mov
jb
aaa
and
dec
cli
cmps
pop
adc
lea
and
scas
jmp
sti
xchg
mov
mov
pop
pop
iret
(bad)
fsubr
gs
xchg
sub
jno
or
loop
push
cmp
sub
push
mov
dec
shl
rcr
retf
adc
outs
les
arpl
es
jl
in
test
cmp
add
add
call
dec
xlat
in
sub
jmp
sbb
(bad)
adc
pop
inc
xor
xor
jle
cs
stos
jo
jbe
jmp
movs
in
(bad)
xchg
jmp
mov
icebp
push
inc
push
repz
xor
arpl
adc
jecxz
outs
repnz
push
xor
pop
pop
aas
xor
inc
stc
cmp
inc
(bad)
pop
xor
frstor
jno
(bad)
int3
cmp
loop
add
iret
and
retf
inc
or
ficom
xchg
ss
xor
stos
xchg
enter
pop
in
add
in
cli
cmp
xor
cmp
outs
call
xchg
das
jle
and
mov
add
je
xchg
jns
ret
or
or
ins
jge
mov
test
mov
xor
xchg
mov
mov
outs
jo
not
dec
push
rcr
mov
test
jae
push
cmps
add
loopne
loope
fwait
cmps
jge
(bad)
xchg
retf
or
pushf
jns
mov
mov
data16
mov
daa
add
iret
retf
je
dec
mov
mov
mov
mov
mov
and
je
cmp
pop
call
movs
inc
fimul
movs
in
jecxz
pop
adc
add
and
xchg
call
out
or
or
call
jb
inc
adc
movzx
pusha
ret
daa
sar
fadd
aad
push
cli
lahf
mov
(bad)
ret
jmp
xor
addr16
test
int
adc
sub
cmps
xor
inc
stc
xor
jp
(bad)
mov
pop
shl
dec
adc
test
mov
adc
add
leave
das
mov
xor
outs
and
pop
jp
mov
ss
mov
adc
or
icebp
cmp
push
jp
es
jp
xlat
das
cmp
lea
popf
leave
(bad)
jmp
nop
aaa
les
mov
scas
adc
sub
push
sub
sti
pop
jmp
js
js
cmp
jb
mov
or
(bad)
xchg
(bad)
adc
push
xchg
lods
or
xor
push
sar
movs
jle
jmp
cmp
fmul
outs
pop
pop
cmp
or
or
imul
fcmovne
(bad)
sbb
or
sbb
dec
xor
ja
enter
mov
mov
sub
jo
xchg
mov
bound
add
push
push
shl
and
sahf
icebp
call
inc
push
pop
pushf
pop
repnz
ficom
pop
and
aad
aam
push
mov
pusha
push
sbb
fwait
es
sub
mov
cmp
inc
xchg
sbb
inc
nop
xchg
(bad)
mov
inc
adc
ds
js
out
mov
dec
dec
call
fwait
repz
xor
sti
sti
mov
lods
stos
jb
cli
lahf
fucomi
(bad)
ins
ret
sbb
mov
stos
ds
mov
ins
(bad)
pushf
jl
adc
pop
cmp
lea
fdiv
popf
data16
sar
xchg
pop
mov
pop
sahf
scas
mov
mov
sti
or
sar
nop
dec
cmp
mov
mov
cmp
sub
std
xor
ins
xchg
sbb
nop
sbb
jmp
add
jecxz
adc
scas
(bad)
stos
xor
dec
ds
fs
test
jecxz
mov
adc
fst
sbb
inc
xor
xchg
add
sub
lahf
jmp
mov
mov
dec
lahf
cmp
push
xor
inc
adc
dec
xchg
mov
ins
push
mul
pop
xor
sahf
cld
inc
dec
sbb
in
or
(bad)
xchg
inc
retf
and
lock
mov
jae
movs
adc
iret
mov
lods
lahf
jge
hlt
fnstsw
inc
pop
cwde
fcom
lahf
inc
push
dec
stc
dec
add
out
add
jbe
cmps
pop
xchg
cmp
daa
add
std
shl
outs
mov
sub
or
mov
add
mov
xor
pop
aaa
stos
(bad)
in
je
data16
fild
push
mov
pusha
mov
xchg
inc
or
clc
cwde
push
xchg
sti
or
mov
fld
shr
xchg
ins
test
push
add
pop
xor
add
aad
leave
nop
or
je
jns
test
rol
and
and
jnp
fwait
out
or
cmp
inc
dec
jbe
jp
lds
add
xchg
and
push
push
imul
jecxz
(bad)
pusha
iret
pusha
leave
data16
inc
gs
or
mov
cmps
sub
stos
fcomp
pop
dec
mov
push
jle
sti
sub
xchg
mov
call
cmp
jns
in
jle
xor
sbb
pop
push
jae
push
mov
les
mov
push
sub
and
out
neg
loopne
push
sbb
lods
stos
pop
std
cmp
xchg
jo
(bad)
scas
pop
dec
add
cdq
popf
mov
pop
icebp
in
out
stos
jo
push
fistp
test
dec
fs
fldenv
pop
cmp
jnp
ficomp
ret
xor
popa
sub
jl
or
in
icebp
adc
test
stc
add
mov
push
daa
dec
dec
push
lods
ret
pop
xchg
ins
mov
mov
fdivrp
test
add
cmp
cmp
leave
adc
cli
pop
adc
sbb
sar
and
fwait
into
sahf
movs
pop
cli
jge
pop
sbb
adc
repz
jnp
int3
cdq
(bad)
cmc
int
cmp
push
ror
stos
adc
pop
stos
adc
or
xchg
mov
aad
call
std
adc
loop
imul
cmps
mov
imul
retf
jle
int3
(bad)
repz
ins
add
and
pop
in
ror
mov
jge
mov
dec
enter
in
xor
(bad)
rcr
popf
sahf
fistp
inc
leave
int3
fbstp
loope
adc
mov
ret
lods
or
jno
ins
mov
cld
mov
in
sub
je
lock
xchg
imul
push
inc
jmp
push
xor
sub
mov
adc
inc
xchg
cmc
std
test
lods
xchg
pop
test
jno
cmp
cmp
ffreep
cdq
sub
or
jle
inc
jns
cli
cmp
in
add
mov
fldenv
out
movs
xchg
xor
mov
cld
stos
or
imul
mov
out
push
and
pop
pop
loopne
pop
jg
jae
and
out
shr
nop
icebp
xchg
js
ror
cmp
cmps
sub
aaa
aaa
mov
test
mov
je
push
fcomi
sub
or
pop
sub
int
xchg
popa
dec
ret
dec
sbb
and
les
in
into
sbb
push
mov
or
push
jb
add
pusha
pop
jl
in
repz
pop
jns
call
inc
scas
sar
jp
pop
iret
sbb
jge
outs
pop
push
sbb
push
pop
and
cmp
ret
pop
loop
sti
jno
pop
mov
cld
cld
jno
or
push
pop
or
nop
in
mov
add
ins
shl
stos
scas
lock
(bad)
push
in
mov
add
stos
pop
sub
inc
inc
cmp
mov
pop
sbb
xchg
rol
add
cmp
inc
or
test
pop
push
inc
lds
mov
(bad)
stc
outs
adc
and
mov
or
xchg
push
clc
lods
shl
mov
sar
les
push
cmp
pop
fbstp
je
loop
mov
dec
nop
pushf
retf
inc
cmc
adc
loopne
sub
mov
mov
mov
mov
fimul
xchg
addr16
je
cmp
jg
jecxz
fbstp
test
mov
mov
sbb
popf
sub
bound
adc
add
xchg
in
retf
and
inc
fs
shl
sbb
into
push
pusha
ins
jno
add
xor
inc
xchg
pop
inc
popf
jb
enter
jns
mov
(bad)
xchg
movs
daa
sub
pop
not
ds
out
call
jmp
dec
pop
mov
sub
(bad)
mov
jne
cmc
loop
(bad)
push
sbb
nop
movs
je
mov
adc
sub
in
mov
sbb
cmc
shl
inc
sbb
in
mov
adc
inc
imul
xor
loop
pop
dec
inc
shl
out
adc
or
mov
sbb
(bad)
mov
movs
in
xchg
iret
mov
dec
mov
adc
pop
dec
jge
jb
mov
pusha
lahf
and
loope
add
ins
gs
inc
sub
ficom
cmps
icebp
jge
or
retf
xchg
imul
mov
stc
adc
mov
in
cmp
jg
add
add
xor
lea
cmp
pop
and
in
xchg
add
cwde
cmp
inc
inc
pop
xchg
popf
gs
retf
cld
enter
fsubr
and
(bad)
ror
les
xchg
pop
cmp
jmp
out
mov
inc
dec
out
mov
rep
xchg
mov
aad
out
ins
push
imul
lahf
iret
mov
cmp
scas
cmps
mov
push
sbb
mov
ins
sub
jg
int
lods
inc
bound
loop
out
adc
xchg
in
repz
jnp
jbe
adc
and
addr16
sub
xchg
inc
sub
icebp
call
xor
loope
add
or
adc
add
rcl
inc
lods
shr
cmps
mov
and
xor
jae
repnz
and
enter
push
in
push
shl
dec
hlt
(bad)
lock
sub
inc
lea
push
nop
and
xchg
dec
outs
out
shr
clc
gs
lods
mov
stc
mov
mov
inc
arpl
xchg
(bad)
out
ss
add
pop
inc
and
popa
aam
or
adc
mov
mov
push
mov
(bad)
fidivr
sbb
loope
adc
cmps
fbld
push
gs
dec
cld
push
xor
pop
std
int3
push
or
in
stc
out
jmp
add
shr
jle
push
cmps
pop
inc
cwde
mov
pop
daa
call
fsubr
sub
push
xor
pop
test
jecxz
xchg
pusha
and
jo
shl
mul
pop
sbb
mov
hlt
ret
push
nop
add
pop
mov
mov
dec
sbb
pop
xor
nop
and
mov
cmps
push
inc
pop
jl
mov
call
sub
jmp
sub
jl
js
jmp
dec
fild
hlt
mov
push
jmp
(bad)
pop
mov
cmp
ret
and
pop
push
fcom
push
(bad)
(bad)
and
gs
and
dec
ret
popa
sahf
mov
shr
pop
loope
inc
sahf
inc
(bad)
push
scas
or
movs
pop
inc
ret
push
(bad)
idiv
push
xor
popf
ret
jle
pop
ja
dec
in
xchg
pop
gs
xchg
sub
and
popf
mov
std
xor
ja
jae
arpl
push
jns
sbb
neg
scas
sbb
popa
dec
mov
cmp
aam
popa
jo
push
jbe
dec
rol
lahf
push
scas
pop
push
pop
hlt
mov
lahf
adc
jg
pop
jns
leave
xor
addr16
cmp
add
fdivr
jmp
lds
jp
neg
pmaxub
inc
jg
pushf
shr
mov
inc
ja
xchg
mov
xor
jmp
ja
xchg
daa
ret
add
or
mov
inc
retf
mov
lods
jno
jne
adc
js
xor
jno
or
mov
aaa
ret
pshufw
or
in
cmp
mov
outs
cwde
lahf
test
or
sbb
push
xchg
fistp
jb
add
sub
cmp
fcomi
out
inc
dec
addr16
mov
xchg
inc
mov
cli
sbb
das
push
aam
(bad)
cmp
add
cwde
fucomip
jb
xchg
mov
inc
arpl
xchg
lea
push
mov
shr
adc
jno
add
xor
lock
mov
out
popf
test
add
sbb
into
xchg
sbb
cld
jg
out
xchg
mov
call
jno
xchg
aaa
shr
ja
push
cmp
out
pop
mov
or
test
xchg
jmp
mov
pushf
call
pop
push
imul
bound
into
mov
ror
or
jmp
inc
xor
sbb
pop
shl
fsub
add
cmp
mov
jno
mov
add
addr16
(bad)
push
jmp
mov
addr16
jle
sub
lds
mov
fisubr
lds
rep
mov
into
pushf
inc
adc
push
mov
mov
outs
nop
mov
int3
pop
movs
cmp
(bad)
aad
add
push
xchg
mov
and
movs
repz
mov
aas
jecxz
scas
aam
sub
jnp
jmp
fidiv
hlt
add
aaa
mov
dec
sub
sti
or
pop
and
aam
sub
pop
neg
mov
stc
xchg
inc
cmps
mov
repz
idiv
mov
(bad)
cmp
jl
cwde
fwait
nop
or
sub
fcomp
mov
int
mov
ja
xchg
lds
dec
hlt
hlt
out
jg
sbb
add
test
mul
sub
aad
pop
or
mov
(bad)
in
stos
jo
cli
loop
scas
xor
sub
test
cmc
fucomip
add
leave
jle
gs
stos
jg
xchg
inc
cli
out
(bad)
dec
ret
out
pop
hlt
push
cmp
mov
jbe
xchg
aaa
ins
call
sbb
or
out
fstp
pop
pop
mov
push
shl
add
rol
data16
sti
stos
sbb
retf
dec
mov
pop
push
and
cmp
cmp
fs
fistp
add
mov
mov
(bad)
cmp
pusha
sbb
fwait
popf
add
sahf
cmp
mov
rcr
loop
or
stos
cdq
in
inc
jbe
mov
loopne
fs
pusha
adc
loopne
inc
mov
dec
repnz
push
xor
nop
cmp
xchg
sbb
in
sbb
out
jle
gs
mov
out
add
dec
pop
mov
jp
cmp
lods
dec
add
aas
jo
mov
mov
jnp
out
lfs
pop
jo
(bad)
cmp
xor
pusha
lds
adc
test
scas
sub
in
sbb
lea
stc
movs
jno
stc
(bad)
or
mov
mov
movs
je
ss
mov
jbe
xchg
sbb
imul
test
mov
adc
out
out
sbb
jmp
sub
xor
push
or
neg
push
jmp
xor
sub
xchg
dec
dec
xchg
xchg
mov
or
cli
sub
dec
(bad)
shr
mov
mov
icebp
dec
mov
xor
enter
aad
or
mov
fisub
pop
sub
jp
inc
movs
xchg
(bad)
leave
push
add
jns
cwde
pop
mov
jecxz
cmps
push
dec
xlat
and
push
repnz
add
lods
adc
cmp
movs
sub
cmp
jge
in
rcl
(bad)
dec
dec
mov
mov
and
(bad)
out
xor
sbb
adc
cld
mov
daa
jo
in
add
fstp
fs
jb
dec
fistp
scas
call
mov
stc
sub
(bad)
fst
mov
(bad)
enter
or
push
inc
mov
sub
cmp
out
sbb
push
xor
dec
rcl
xchg
repnz
jecxz
and
ja
imul
pop
adc
mov
xor
fld
jo
loopne
jecxz
fwait
adc
push
xchg
jns
mov
fisubr
(bad)
jecxz
nop
nop
ds
xchg
repz
cmp
mov
(bad)
and
stc
ins
mov
call
repnz
dec
inc
pop
mov
adc
pop
push
jmp
(bad)
das
inc
add
ss
adc
cmc
mov
dec
aas
mov
mov
retf
test
cmp
push
xchg
test
imul
jne
cli
and
sbb
add
les
mov
scas
cs
pop
enter
adc
enter
adc
xlat
jmp
mov
repz
adc
(bad)
cmp
data16
pop
and
inc
stos
cmp
fucomip
xchg
mov
dec
jne
lds
int
cwde
dec
aaa
mov
js
jb
cwde
or
mov
cs
lahf
popf
std
hlt
or
mov
test
mov
sub
aas
push
add
ins
sti
cmp
movs
loopne
adc
add
ins
jb
sbb
outs
inc
in
bound
stos
mov
shl
cmp
xor
sahf
enter
sub
inc
pop
nop
pop
jno
fsubr
retf
dec
popa
sub
dec
dec
xchg
out
push
or
and
outs
cs
add
mov
stc
jle
stc
dec
cmp
and
fwait
sar
mov
cmps
repnz
retf
sbb
xchg
push
addps
sub
out
xor
rep
js
mov
mov
cmps
out
imul
xchg
or
into
test
ror
mov
cmp
mov
cdq
xchg
lds
mov
cmp
arpl
jns
punpckhdq
imul
fcomp
leave
push
xor
and
loope
xchg
jnp
pop
xor
hlt
iret
stc
icebp
sahf
push
add
sub
jnp
add
ret
in
inc
daa
test
leave
rol
movs
inc
cmp
gs
mov
or
add
cmc
mov
xchg
shl
push
adc
data16
sbb
int3
dec
into
jne
std
mov
(bad)
mov
fs
dec
pop
ficom
jmp
in
daa
js
cmp
outs
pop
bound
imul
rcr
ds
arpl
xchg
movs
jb
call
jae
xlat
aad
push
pop
div
jecxz
pop
xor
popf
test
sub
inc
pop
jecxz
cmp
std
dec
mov
retf
xor
mov
outs
cmp
mov
sbb
and
les
in
mov
je
mov
or
inc
push
or
outs
mov
sar
mov
cmp
dec
scas
cli
jle
push
xchg
ins
fwait
jbe
xor
push
cld
fisttp
adc
(bad)
(bad)
add
dec
das
push
mov
xor
call
stos
nop
in
xor
aas
shl
fnstenv
out
mov
push
sbb
push
mov
sti
sub
jo
sbb
mov
fs
out
mov
fcom
rol
and
pop
pop
enter
adc
stc
cmp
mov
xor
leave
inc
ror
outs
fistp
in
fmul
int
fsubr
sub
mov
inc
mov
fwait
cdq
sti
loop
(bad)
push
in
jp
cmp
daa
jb
dec
jg
xchg
int
sti
(bad)
(bad)
pop
pop
jno
cs
push
int3
xadd
test
lods
push
push
mov
(bad)
mov
lods
and
std
mov
test
(bad)
xor
enter
pop
in
repz
xchg
popf
add
nop
arpl
movs
es
aas
jge
stos
sahf
mov
je
add
iret
jl
aam
push
dec
jns
clc
jno
cmp
(bad)
inc
xchg
or
jmp
jmp
jnp
enter
mov
cmc
scas
push
sub
push
(bad)
xchg
jno
dec
mov
std
mov
cmps
js
and
xchg
fsubr
mov
or
push
movs
dec
xor
push
push
mov
add
sub
cli
leave
push
mov
loope
ret
dec
xchg
fist
sub
cmp
in
sub
int3
movs
push
xchg
rcl
gs
inc
mov
out
push
ins
ins
mov
shl
rep
(bad)
inc
sbb
test
dec
sub
or
std
scas
sbb
inc
or
xchg
shr
push
movs
and
pop
sub
pop
(bad)
inc
retf
mov
mov
jl
out
dec
leave
test
std
dec
or
dec
imul
movs
or
outs
jmp
loopne
fcomp
bound
cmp
adc
add
in
jb
sar
dec
mov
mov
sbb
inc
pop
pusha
in
jp
std
push
cs
loopne
xor
popa
imul
sub
push
fisub
sub
lods
pushf
jecxz
or
dec
(bad)
cmp
cmp
dec
xor
add
hlt
ins
adc
jnp
in
xor
cmp
pop
push
popf
popa
or
and
xchg
jno
push
pop
jmp
adc
pop
mov
push
jbe
sub
mov
and
xchg
jge
adc
adc
(bad)
lods
es
add
out
out
jecxz
xor
ins
pop
popa
mov
call
push
enter
loope
test
xor
and
imul
(bad)
xchg
push
cmp
repnz
mov
jae
push
sub
loop
fild
add
jmp
mov
and
jae
cwde
into
add
inc
test
mov
sub
and
clc
push
cmp
lds
cwde
adc
in
mov
jl
pop
mov
inc
mov
fwait
shl
xor
fdivr
cmp
jne
lahf
sti
lds
outs
aas
in
in
lods
cmps
cwde
std
pop
xor
out
inc
jmp
lock
add
icebp
rcl
out
xor
mov
les
add
sbb
mov
(bad)
clc
test
imul
mov
mov
or
jmp
std
adc
jg
shl
adc
sub
ds
test
lods
in
and
adc
fmul
pop
adc
dec
sahf
cmp
imul
mov
xchg
add
xor
(bad)
clc
adc
inc
add
(bad)
adc
hlt
or
mov
or
push
fnstsw
test
mov
retf
fisttp
add
jecxz
aam
pop
imul
pop
mov
inc
dec
inc
iret
dec
aas
or
mov
cmp
jp
pop
popf
pop
fmulp
sbb
aam
mov
aas
std
mov
aas
aas
sahf
cmp
sub
(bad)
jns
inc
mov
jl
fcomp
sub
pusha
test
hlt
jbe
inc
div
adc
popf
sbb
pop
mov
imul
lds
outs
out
xchg
jge
clc
sti
adc
or
inc
(bad)
loope
xchg
aas
xor
imul
aad
dec
out
fldcw
loop
add
sub
inc
inc
(bad)
dec
or
inc
inc
xor
jg
or
jp
mov
or
sahf
push
loopne
clc
setge
sti
sar
xlat
mov
jns
sahf
je
cmp
mov
dec
xchg
push
push
ret
push
lods
into
mov
mov
fist
test
inc
or
out
sub
inc
in
stos
pushf
das
aad
ret
inc
rcr
fmul
or
xchg
lods
jp
jge
aam
cmp
movs
test
or
sbb
das
cli
dec
jl
adc
xor
push
and
movs
sbb
dec
out
and
push
dec
(bad)
arpl
push
push
outs
es
pop
cli
mov
cmp
je
div
inc
add
fisubr
jb
sbb
je
mov
pop
cmp
ret
popf
mov
pop
cmp
xchg
xor
sar
mov
push
aas
jecxz
das
cli
dec
add
fidivr
clc
fild
lea
adc
adc
mov
mov
in
nop
ins
inc
jne
sub
ja
stc
or
xor
adc
inc
cmp
mov
sub
pop
repz
dec
nop
fsubrp
pop
les
push
xor
mov
fsub
or
jnp
mov
jns
popf
js
cmps
push
sar
mov
or
xor
test
enter
pop
popf
sub
pusha
sub
and
push
adc
or
or
mov
fwait
test
push
or
mul
pop
std
sar
mov
fcom
loope
out
sbb
sbb
pop
jns
mov
push
jns
mov
lods
fsubr
jl
adc
gs
ss
imul
retf
(bad)
pop
lods
mov
xchg
rcl
add
and
xchg
push
pop
das
jbe
cmps
and
shl
jp
or
jge
(bad)
cli
rcl
xchg
mov
aaa
adc
jnp
dec
add
lods
sub
sub
pop
push
sub
call
daa
clts
and
sbb
mov
xchg
test
pushf
and
pop
icebp
shl
(bad)
aas
dec
pop
jmp
cdq
pop
ds
sub
mov
mov
sbb
ins
gs
lods
cli
(bad)
ins
scas
sar
dec
ret
sti
out
aad
ins
jge
sub
mov
push
adc
stos
dec
push
push
dec
xchg
pop
dec
inc
cmc
sbb
cmp
test
pop
cld
les
test
ret
call
push
repz
jp
push
je
shr
jae
or
out
jmp
jge
in
mov
lds
sbb
xor
loopne
mov
pop
les
fdivr
call
std
clc
(bad)
sub
mov
call
aam
leave
adc
iret
cmp
fwait
clc
mov
mov
mov
push
mov
sbb
xor
xor
xchg
stos
pop
jns
into
dec
popf
jb
in
test
add
mov
ret
xchg
pop
xor
sbb
loop
push
jmp
mov
(bad)
adc
cmp
ret
pop
bound
mov
ins
lock
mov
jmp
xchg
fmulp
sbb
fnstsw
loopne
into
inc
jp
dec
imul
or
mov
sbb
or
out
pop
inc
aas
mov
das
loope
fistp
mov
mov
icebp
mov
dec
(bad)
and
movs
cmp
scas
gs
pop
outs
and
outs
sbb
mov
arpl
out
fprem1
cmp
pop
mov
push
mov
xor
jl
psubsw
inc
push
nop
lahf
lods
in
test
sbb
push
stos
js
adc
mov
movs
aam
mov
xchg
repz
xor
test
aam
inc
stc
lea
push
fcomp
push
in
sbb
test
add
push
jno
pusha
inc
retf
sub
pop
add
push
fstp
cmp
adc
or
push
addr16
and
loope
test
sbb
cmp
aam
mov
test
ja
test
popf
mov
pop
jge
lods
mov
jne
ffreep
rcr
lds
std
popa
mov
clc
and
icebp
xor
sub
push
inc
nop
cmp
jle
ret
in
out
inc
mov
fldenv
pop
sar
sar
fld
les
dec
jno
aam
mov
adc
enter
cmp
adc
jb
sbb
call
les
jg
xor
ds
inc
repnz
ret
iret
lods
ss
cmp
mov
cmp
push
aad
or
jae
mov
inc
xor
outs
arpl
jo
mov
int
stos
scas
movs
adc
cli
in
fistp
sub
sub
inc
pop
imul
and
add
mov
ds
adc
sub
out
rcl
fstp
lds
outs
jmp
sub
aaa
cmps
cld
and
xchg
ret
dec
icebp
mov
sub
mov
mov
adc
ss
fld
cli
inc
mov
cmp
mov
or
fwait
loopne
sbb
jp
mov
add
mov
les
inc
outs
push
dec
push
xor
or
daa
ret
mov
cwde
or
pop
and
mov
std
fldenv
pusha
test
jmp
(bad)
pop
jl
sub
inc
retf
push
sbb
xchg
shr
push
cmps
mov
cmc
sub
adc
xor
in
mov
pop
pusha
or
and
dec
lahf
dec
outs
ret
adc
or
fistp
loope
mov
jbe
mov
xlat
loope
inc
fnop
sub
xchg
xchg
call
mov
ja
push
pop
sahf
and
xor
movs
pop
cmp
arpl
pop
arpl
xor
push
sbb
sahf
pop
jl
add
or
dec
inc
and
pop
je
sti
std
sbb
push
sahf
lock
xchg
xor
mov
cs
mov
xor
mov
mov
sbb
frstor
ret
(bad)
dec
xor
pop
inc
mov
jle
dec
and
std
inc
cmp
mov
scas
mov
int3
or
(bad)
sti
inc
adc
adc
cmp
call
mul
aas
pop
aas
ss
mov
mov
pop
mov
sar
idiv
ss
mov
outs
cmp
test
jbe
jo
mov
push
mov
inc
lea
scas
and
fnstcw
mov
sbb
cmp
cmp
idiv
arpl
call
mov
sbb
(bad)
(bad)
outs
out
inc
mov
cmps
or
mov
in
pusha
neg
cmps
mov
ins
push
and
sti
call
sbb
mov
mov
mov
xor
repz
adc
test
ss
lea
sbb
jnp
jmp
push
inc
and
out
iret
or
jnp
jp
ror
cli
les
test
xor
add
fsub
lods
pop
outs
fsub
dec
mov
cmp
mov
jmp
loopne
cld
push
dec
cmp
je
adc
jae
emms
pop
loop
cmp
popf
cmp
dec
sti
push
in
cli
and
mov
(bad)
xor
cmp
push
cmc
popa
sbb
inc
cld
mov
mov
push
add
cmp
xchg
mov
jnp
or
iret
and
add
call
data16
imul
inc
cdq
mov
pushf
push
sti
mov
les
cmp
mov
push
retf
sti
pop
pop
cmp
int3
push
dec
inc
daa
push
lea
and
dec
inc
add
(bad)
xchg
pop
(bad)
xlat
sbb
sbb
cmps
pop
int3
jbe
js
mov
fsubr
aaa
(bad)
xor
add
pop
inc
mov
aas
call
add
jle
rcl
loopne
inc
jae
jae
dec
dec
xor
jmp
fs
shr
loopne
sub
dec
add
ins
xchg
pop
adc
cmp
fst
js
cmp
into
test
cli
mov
mov
int3
aas
fwait
pushf
jns
jmp
mov
cld
mov
and
jmp
movs
cmp
inc
test
xchg
ret
mov
xchg
sub
add
lods
sbb
repnz
xchg
sub
into
lock
in
in
out
mov
mov
or
dec
push
cdq
bound
push
out
mov
xchg
test
add
pop
imul
stc
xor
or
scas
jmp
mov
cmps
stos
and
cmp
inc
aam
imul
in
lods
jo
rcr
retf
jb
adc
sbb
lea
sub
mov
cmp
push
mov
repz
cmp
jbe
push
ror
adc
leave
gs
push
mov
fwait
lahf
and
fisub
cmps
addr16
jg
int
aaa
hlt
push
sbb
mov
sbb
jno
fcomp
fs
pop
mov
std
imul
cmp
adc
shl
mov
or
dec
scas
jns
or
mov
pop
call
pop
sbb
arpl
aad
ror
xchg
sub
pusha
int3
mov
mov
add
push
das
sbb
and
mov
es
adc
arpl
adc
mov
cmc
push
push
pusha
shl
dec
sbb
pushf
cwde
test
repz
xchg
mov
ret
pop
out
neg
mov
jg
jmp
out
mov
adc
inc
ins
cmc
mov
mov
pushf
jnp
xor
iret
iret
clc
rol
ins
push
jmp
idiv
xlat
loope
repnz
lods
or
xor
mov
fs
jmp
loopne
js
lea
imul
sbb
mov
ror
sbb
mul
push
dec
push
imul
stos
mov
mov
ss
imul
loopne
je
sub
sub
push
dec
ins
mov
push
mov
xor
or
jle
jno
mov
or
push
pop
jmp
xor
movs
push
jle
xchg
cli
or
mov
cmp
call
add
pop
push
in
or
mov
test
xor
loopne
dec
into
xor
cli
pop
and
shl
mov
es
pop
retf
ret
jae
jle
jnp
pop
inc
div
or
adc
add
sub
mov
neg
add
mul
inc
cmp
jb
mov
adc
pop
fcom
push
mov
jno
dec
inc
sbb
push
mov
xor
psubd
pop
jmp
gs
dec
push
cmp
pop
pop
xlat
(bad)
cdq
ss
adc
mov
cmp
xchg
adc
sub
into
cmps
das
ret
in
sti
xor
jge
out
enter
in
xchg
fcomp
movs
sub
inc
in
ja
xor
das
pusha
inc
iret
lea
mov
cld
sub
popa
pop
sub
dec
(bad)
rol
arpl
test
arpl
stos
inc
jb
in
mov
push
jne
fisttp
loopne
in
mov
and
and
out
push
(bad)
jmp
out
jp
retf
ss
imul
leave
ds
dec
add
int3
pop
cmp
xor
xchg
mov
xor
pop
push
add
push
test
xchg
pop
cmp
test
or
cmp
out
mov
scas
jmp
push
stos
out
or
push
push
adc
push
and
jae
cmp
xchg
imul
or
popa
mov
outs
pop
mov
mov
adc
or
mov
mov
(bad)
xchg
cli
xor
idiv
add
sub
xor
in
dec
mov
push
popa
xchg
fcmovb
push
push
test
inc
addr16
adc
shr
pusha
test
jl
gs
call
pop
cmps
inc
and
sub
jg
or
or
std
pop
sub
hlt
push
cmp
xchg
dec
data16
int3
cmp
leave
scas
mov
fisttp
and
outs
xchg
xchg
inc
jmp
daa
pop
cwde
jg
push
in
inc
ret
addr16
or
mov
xor
mov
nop
add
mov
scas
int
shl
xor
or
lea
push
rcr
mov
fsubr
aaa
jmp
xchg
pop
les
jge
es
inc
jmp
fisub
jne
push
movs
fisttp
cmps
mov
xor
aas
or
jl
neg
ins
addr16
leave
loop
mov
adc
inc
lds
in
mov
xor
cmp
(bad)
aas
push
inc
jge
and
inc
mov
lock
icebp
mov
dec
dec
or
iret
push
push
push
fucomip
adc
push
(bad)
loop
xor
cdq
jge
jmp
and
(bad)
mov
xor
sti
cs
xchg
idiv
push
mov
outs
jb
sbb
sbb
or
les
xchg
jg
sub
iret
inc
aas
push
and
retf
sar
bound
push
mov
dec
cdq
dec
adc
mov
adc
call
sahf
xchg
fistp
push
mov
div
jns
ins
sbb
jb
retf
cld
push
mov
mov
addr16
js
dec
add
cwde
fldpi
adc
arpl
std
out
pushf
dec
push
data16
push
jmp
or
mov
mov
inc
pop
icebp
push
sub
sahf
sub
adc
xor
mov
bound
inc
cld
lea
jno
jle
xor
inc
jbe
imul
outs
cmc
jp
add
sub
adc
call
jb
cmc
jmp
fwait
cs
mov
adc
pop
int3
xchg
jecxz
out
mov
inc
mov
xchg
cmp
pop
mov
adc
cmps
aaa
push
dec
popa
xchg
outs
dec
xchg
pop
sar
das
dec
daa
sar
xchg
cmps
clc
mov
clc
push
mov
ds
movs
and
ret
outs
sub
gs
jg
xlat
mov
sub
sbb
add
cmp
cmp
rcr
adc
repnz
inc
mov
mov
fmul
les
jae
jl
test
add
sbb
(bad)
push
xchg
std
test
test
lea
nop
mov
int3
mov
minps
imul
ins
aad
dec
scas
imul
inc
jmp
in
pushf
leave
pop
imul
outs
ror
stc
dec
ins
mul
sbb
mov
dec
mov
push
fldenv
into
out
mov
sub
aam
stos
lahf
add
mov
xor
and
call
(bad)
jl
xchg
jo
or
push
sbb
scas
outs
sbb
push
maskmovq
not
push
jp
loope
mov
out
inc
mov
push
add
mov
mov
es
mov
test
ror
pop
leave
jle
jae
sub
push
xchg
xor
std
(bad)
setae
xor
dec
jb
and
push
sub
cmp
(bad)
fidiv
inc
das
mov
sbb
jmp
lahf
shl
mov
test
sbb
cs
ret
push
pop
pop
jl
pop
jno
outs
jle
les
xor
mov
add
je
retf
data16
push
and
mov
and
cld
dec
daa
mov
sub
xchg
pop
add
mov
popf
fld
jecxz
or
add
or
std
je
movs
xor
imul
or
pop
fimul
mov
inc
cmps
loope
jae
add
loopne
or
lea
fimul
cmp
stc
ret
push
jge
mov
jl
adc
icebp
je
dec
and
fs
push
sub
adc
or
push
test
cs
sbb
xor
(bad)
(bad)
idiv
retf
ds
repnz
pop
bound
xor
stc
xchg
fdiv
je
add
retf
jp
daa
xor
sub
jno
dec
(bad)
fcmovne
imul
cld
add
jno
adc
mov
shl
and
sub
adc
mov
xchg
lods
mov
adc
call
aas
and
dec
cmps
shl
out
imul
movs
mul
sbb
mov
push
push
mov
sub
mov
dec
fmul
leave
xor
stc
lods
or
inc
mul
pusha
aam
fst
xchg
dec
in
cwde
pop
into
xchg
add
(bad)
or
(bad)
jmp
sub
gs
jo
stos
div
fadd
aas
push
pop
cmp
adc
add
gs
je
nop
dec
out
or
movs
fimul
or
outs
clc
or
test
cmp
mov
push
jbe
sbb
out
popf
jnp
inc
fs
iret
sub
jge
xchg
push
mov
jnp
jg
pop
addr16
or
(bad)
fcmovnb
xor
push
rol
ret
mov
lahf
xor
sti
rcl
adc
and
mov
pop
push
jl
push
outs
arpl
scas
das
jmp
cdq
inc
es
ja
add
jge
icebp
and
js
into
xor
pop
or
sahf
jl
pop
push
inc
push
mov
mov
and
sub
inc
mov
adc
out
sub
stos
pop
(bad)
sbb
pushf
scas
mov
hlt
mov
jg
sub
xchg
idiv
mov
or
jbe
clc
inc
cmp
cs
(bad)
int3
cwde
pop
out
std
shl
adc
stc
outs
stos
push
sub
call
mov
fidiv
bound
ins
arpl
scas
movs
dec
fs
and
add
xchg
std
add
clc
cmps
push
sar
sub
ficom
hlt
pushf
cmp
cmc
dec
(bad)
adc
jmp
add
cdq
xchg
stc
mov
jo
adc
cmps
inc
popa
daa
fild
mov
xor
and
outs
mov
mov
mov
loopne
push
outs
mov
popf
mov
sbb
div
and
ss
pop
xlat
retf
inc
lds
mov
in
dec
and
fdiv
in
test
rcr
aam
sti
adc
in
mov
ret
daa
movs
inc
mov
and
imul
or
retf
push
jmp
imul
clc
stos
(bad)
cli
movs
test
or
xor
fmul
push
or
fcomp
stos
loop
movs
(bad)
mov
retf
scas
cs
aaa
ins
call
out
outs
push
(bad)
test
es
scas
pop
xchg
dec
push
out
xlat
mov
fadd
sub
mov
stc
in
pop
push
or
adc
lds
movs
mov
arpl
shr
dec
aad
(bad)
sub
push
mov
and
sbb
inc
sbb
or
mov
shl
in
or
xor
nop
push
scas
loope
mov
pop
nop
in
lds
mov
cld
int3
mov
stc
addr16
ss
inc
mov
mov
dec
shl
cmp
mul
pop
(bad)
xchg
dec
cmc
not
(bad)
shl
pop
pop
jbe
ins
sub
sub
jbe
sbb
add
sbb
mov
mov
(bad)
cmp
push
(bad)
cli
call
ret
adc
cmp
inc
add
and
es
push
mov
(bad)
push
sub
pop
jbe
jbe
nop
sub
xor
push
popf
jp
push
test
dec
call
lea
fld
xchg
test
add
mov
addr16
pop
push
dec
inc
pusha
test
movs
hlt
call
lock
lods
in
add
cdq
cs
mov
xchg
div
fisub
stc
enter
sbb
out
data16
dec
out
adc
ret
cwde
xor
sbb
les
jg
jmp
test
cli
pop
(bad)
mov
adc
cmc
mov
push
push
inc
call
mov
adc
test
call
jl
mov
dec
inc
fbld
cld
sub
fwait
call
repz
sbb
rcl
mov
add
fcomp
push
xchg
jmp
xchg
ror
out
in
retf
movs
xchg
cli
mov
mov
fsubp
sub
mov
ret
stc
repz
mov
cmp
imul
out
cli
fucomip
(bad)
cmp
test
xchg
inc
push
or
add
xchg
sbb
mov
xor
mov
stos
add
sbb
push
mov
push
jmp
mov
add
pushf
and
into
fist
add
rcr
and
arpl
popf
aam
jb
inc
push
inc
sbb
popa
mov
add
mov
mov
pop
sar
fmul
nop
outs
cmp
(bad)
mov
cmps
inc
sbb
and
dec
xchg
cmp
pushf
mov
mov
mov
jb
cdq
and
and
add
pop
in
cmp
(bad)
jbe
mov
cli
mov
xor
dec
add
jge
outs
cmps
retf
lahf
cli
(bad)
sub
fs
and
or
pop
loop
shr
retf
jno
rcr
lock
dec
call
loope
lods
scas
jae
aad
add
fld
adc
mov
jo
inc
shl
ins
in
mov
sbb
adc
fnstcw
sti
jae
rcl
cli
ret
ret
mov
add
jecxz
(bad)
push
dec
dec
fnstsw
daa
push
sbb
dec
aaa
pop
add
js
mov
xchg
repz
jl
fild
addr16
push
popf
push
cmps
je
jl
les
retf
mov
cmovbe
inc
mov
neg
sub
jo
or
mov
ins
imul
push
push
clc
mov
gs
cmp
fcom
push
clc
out
pushf
sbb
dec
enter
pop
or
push
sbb
data16
mov
loope
add
or
iret
xor
mov
dec
and
mov
sub
adc
jb
fucomp
add
aad
stos
ds
jmp
jo
ret
mov
jno
cmp
cmp
mov
(bad)
jo
outs
and
sbb
into
out
mov
dec
cld
pushf
addr16
shl
jge
fldenv
out
int
xchg
(bad)
mov
and
adc
leave
arpl
mov
adc
cmp
ins
xchg
daa
mov
fidivr
fstp
hlt
mov
xor
(bad)
sahf
pop
rol
fnstsw
iret
adc
add
shr
xchg
pop
push
call
ins
mov
dec
imul
ficomp
push
in
(bad)
sbb
popf
adc
xchg
shr
pop
push
pusha
in
movs
xchg
ja
out
clc
dec
or
inc
data16
sbb
(bad)
sbb
adc
cmps
jp
retf
push
inc
mov
jmp
xchg
jge
in
jnp
xchg
cwde
fs
cmp
mov
jbe
loopne
inc
mov
loopne
sbb
cmps
or
es
mov
adc
fwait
mov
dec
or
idiv
cdq
cs
jns
outs
jg
xchg
jae
cmp
shl
fbld
and
ret
xor
and
jg
(bad)
or
inc
inc
inc
cmp
pop
inc
fistp
jb
xor
mov
maskmovq
neg
xor
add
jb
in
js
fmul
mov
mov
sub
mov
dec
mov
push
lea
jns
ja
and
mov
inc
out
stc
iret
cmps
ret
fucomp
push
pop
stos
imul
ss
jmp
cdq
and
bound
mov
pop
dec
pop
jl
ret
add
(bad)
xchg
int
jbe
ficomp
cs
inc
aas
cmp
jle
sbb
(bad)
fstp
or
mov
push
arpl
ja
shl
adc
adc
sub
mov
dec
mov
push
adc
lea
mov
jb
leave
cmp
push
sub
add
mov
dec
jge
jecxz
stc
jmp
inc
(bad)
rcr
add
sbb
dec
cld
cmp
out
jmp
aaa
repz
pusha
push
xchg
mov
push
repnz
xor
xchg
clc
pop
mov
or
iret
cli
cwd
or
jne
rcl
xchg
in
daa
in
xor
cdq
fcomp
or
mov
addr16
cmp
mov
dec
pop
or
push
(bad)
fsubr
xchg
pop
jae
js
add
popf
dec
push
sub
je
inc
sti
sbb
ds
mov
mov
pop
adc
inc
les
clc
push
ret
pusha
imul
in
jns
ins
inc
dec
out
ins
sti
cmp
pop
sub
add
nop
ds
mov
repz
std
leave
fs
and
cdq
xor
loop
std
xchg
inc
dec
adc
fmul
out
push
mov
xor
dec
mov
inc
ret
(bad)
in
in
es
dec
cmp
in
sbb
repnz
sub
es
out
mov
cs
mov
jmp
mov
aad
and
mul
vprotb
xor
xlat
jmp
fidivr
(bad)
retf
xchg
int
pop
dec
cmp
cli
jns
out
or
jl
dec
sub
shl
mov
cmc
xchg
mov
out
xchg
pop
fild
or
add
cmc
fdiv
mov
cmp
imul
fwait
and
pop
leave
xchg
cdq
jns
nop
cmp
movs
mov
or
cmps
mov
add
mov
jns
out
push
hlt
cli
and
in
inc
in
add
rol
add
lods
cmp
sar
loopne
mov
sbb
shr
sbb
jmp
push
adc
in
imul
aas
xchg
and
xchg
pop
lds
xchg
cwde
pop
invd
outs
mov
and
mov
jno
dec
dec
pushf
cmp
inc
imul
push
imul
push
xchg
jns
mov
test
mov
or
sbb
clc
fld
mov
rep
(bad)
adc
fwait
ret
inc
inc
shl
add
inc
fist
push
(bad)
mov
or
adc
sub
and
shr
mov
adc
add
(bad)
mov
mov
jecxz
mov
mov
dec
mov
fnstcw
dec
xchg
lock
cmc
ins
repnz
cmp
stc
push
repnz
mov
int3
ficomp
sbb
add
imul
inc
leave
lahf
dec
sub
cmc
add
in
bound
(bad)
jp
jnp
(bad)
ltr
out
fwait
sub
icebp
test
push
les
sub
xchg
dec
pushf
pop
jle
or
mov
inc
arpl
dec
cmp
in
adc
retf
outs
inc
cmp
push
mov
idiv
aaa
and
sbb
jmp
mul
retf
cmp
loope
out
sti
aas
sbb
fisttp
push
sub
xchg
mov
adc
push
push
xchg
jmp
dec
sub
mov
clc
test
dec
jmp
dec
xchg
test
aad
aam
movs
loope
add
nop
lods
gs
push
out
push
jmp
mov
jne
and
push
shr
clc
xchg
cmp
lds
and
push
mov
sbb
mov
nop
jecxz
test
or
xchg
sub
ret
and
and
retf
loopne
mov
es
xchg
xor
jae
push
(bad)
(bad)
imul
push
xor
mov
inc
adc
cmp
jle
pop
aaa
jmp
lock
mov
not
dec
ss
cli
psubsb
ret
cmp
cmc
adc
aam
inc
mov
ds
(bad)
adc
pop
xchg
add
in
sub
xor
addr16
adc
lea
mov
pop
shr
mov
shl
scas
rcl
cmp
clc
les
push
pop
shr
mov
call
cli
cmps
cmc
(bad)
lods
call
movs
retf
xor
lock
call
popa
mov
add
in
add
jmp
sbb
daa
shr
(bad)
ret
and
and
cmps
sbb
adc
and
xor
icebp
add
mov
push
jmp
add
jbe
add
das
inc
sar
stos
mov
push
outs
in
lock
xchg
rol
mov
imul
jecxz
dec
js
push
call
shr
and
or
jecxz
jbe
mov
jl
int3
mov
adc
(bad)
ret
sub
jbe
mov
mov
loope
inc
inc
fdiv
addr16
inc
push
sar
dec
into
xchg
jge
int
mov
sbb
xlat
retf
stc
movs
cmps
lods
mov
mov
(bad)
cwde
cmp
sub
mov
xor
jmp
jmp
push
and
loopne
dec
test
mov
cmp
pop
popf
iret
loope
add
enter
ror
dec
mov
leave
push
jb
and
add
daa
rcr
mov
sub
cmp
mov
mov
outs
and
int3
push
test
sbb
stos
jmp
push
sub
add
call
jb
jecxz
cmc
fsub
int
xor
test
fcmovu
out
mov
mov
cmp
retf
test
push
int
adc
fwait
retf
push
lea
add
mov
and
push
mov
add
jbe
outs
mov
mov
fisttp
test
adc
stc
into
retf
jmp
sub
cmp
push
xchg
sub
jns
xchg
mov
test
cmp
lds
shl
push
cmps
push
pop
pushf
retf
add
jb
push
jo
fdivr
pop
pop
xor
shr
test
inc
inc
cmp
or
mov
(bad)
into
mov
out
repnz
in
call
mov
out
ror
repnz
mov
pop
mov
sbb
fwait
loope
cmp
and
mov
dec
push
dec
jmp
in
mov
cmp
shl
push
ret
inc
push
sub
or
cmp
test
retf
retf
call
retf
pop
cmp
pop
cmp
xor
or
jns
retf
cmp
sub
xchg
outs
pop
std
jmp
movs
icebp
lea
or
pop
jmp
pop
ds
push
in
pop
xor
loop
dec
gs
pop
jbe
movs
jle
ficom
test
arpl
les
jmp
std
in
or
test
mov
push
cmps
movs
outs
mov
sub
inc
jb
adc
mov
sub
pushf
dec
xchg
adc
inc
movs
imul
shl
add
scas
es
arpl
adc
cmp
push
add
push
out
adc
(bad)
rcl
xchg
div
rcl
inc
or
push
add
sbb
outs
mov
and
adc
add
xor
push
push
in
nop
push
mov
pop
arpl
push
xchg
dec
lea
and
push
shr
es
jb
pusha
mov
scas
or
and
fmul
ds
sar
adc
pop
pop
fdivr
fmul
lods
das
sbb
push
jg
test
mov
lds
cmp
xchg
and
fimul
dec
or
and
inc
push
loop
mov
fild
andnps
mov
cwde
icebp
jbe
lahf
lock
adc
and
mov
add
sub
sub
cmp
std
out
mov
xchg
mov
adc
call
adc
fst
vmovsldup
jl
mov
(bad)
(bad)
xchg
shl
rol
ret
sbb
inc
mov
mov
stos
lods
pop
cmp
or
icebp
scas
mov
jo
mov
pop
jmp
mov
arpl
(bad)
cmp
push
ret
sub
mov
cdq
mov
jae
dec
jmp
aaa
aam
gs
int
int3
pop
dec
adc
test
mov
adc
xor
movs
fwait
push
sbb
jbe
xchg
push
ret
mov
push
push
lahf
ins
and
shl
add
std
pop
push
inc
loopne
add
int
shl
push
inc
fldenv
mov
dec
cmps
mov
xchg
out
ffree
adc
pop
mov
inc
and
popa
call
mov
mov
lods
jg
imul
js
out
mov
push
push
xor
cmp
sub
pop
cmc
cmp
or
rcl
sub
in
jns
(bad)
(bad)
dec
add
sub
mov
clc
mov
and
ret
inc
pop
mov
sbb
mov
outs
(bad)
dec
jp
sbb
push
popf
push
scas
xor
into
stos
loopne
loope
sbb
stc
jg
push
jle
std
movs
pushf
or
push
pop
cmp
out
lahf
movs
ror
cmp
aam
and
stc
scas
test
sbb
push
push
jge
pop
push
push
ds
jmp
scas
mov
ss
in
dec
sub
jl
push
mov
leave
ffreep
pusha
sub
mov
imul
jle
xchg
xchg
rcl
mov
mov
pop
jmp
xor
cmps
push
ins
push
dec
add
dec
jmp
sub
pusha
rep
mov
clc
xchg
pop
push
mov
loopne
cdq
(bad)
ss
sub
lods
inc
push
sub
dec
(bad)
out
ret
nop
mov
sbb
(bad)
data16
std
push
add
loope
ja
xchg
movs
mov
jns
out
in
xor
sbb
shl
pop
sbb
test
movs
fwait
xchg
test
int3
mov
hlt
lds
lea
aam
sbb
xchg
sub
xchg
pop
xchg
les
ins
or
xor
jb
mov
push
xor
push
dec
mov
lods
stos
int
sub
dec
lock
bound
cmp
(bad)
dec
jle
inc
or
shr
or
outs
sub
xor
mov
leave
jmp
call
ins
push
xor
out
inc
pop
stos
jnp
ret
shr
inc
sbb
shr
les
outs
(bad)
sub
mov
out
cmp
dec
int
cmp
(bad)
popa
cmps
jmp
lahf
arpl
sti
leave
rcr
pusha
ficomp
dec
sub
jns
jne
imul
push
and
je
sti
dec
dec
nop
inc
mov
fst
cmp
hlt
pop
std
jb
inc
scas
lods
leave
(bad)
jecxz
outs
ret
sbb
mov
or
xchg
inc
(bad)
fistp
out
sub
pop
jns
or
sbb
es
js
out
call
sbb
and
adc
loope
loope
inc
jnp
xor
jb
movntps
sti
and
popa
movs
loope
call
fcmovne
mov
xlat
inc
cld
cmp
pop
pop
ins
jle
or
mov
add
xor
fbld
jmp
or
mov
enter
mov
lods
push
iret
cmp
push
dec
mov
fs
xchg
cmp
mov
das
pop
sar
sti
(bad)
(bad)
cmps
or
lock
jmp
inc
loope
jecxz
int3
out
jne
addr16
popa
out
bound
xor
ins
pop
and
retf
lock
add
jmp
in
in
sub
push
fwait
les
test
push
pop
sbb
push
call
push
fadd
inc
test
jmp
jns
mov
stos
pop
push
adc
popf
or
add
pop
iret
or
sbb
or
sbb
aas
or
push
dec
sbb
fimul
scas
fisttp
xor
push
xor
xchg
mov
cli
test
aam
push
sahf
pushf
or
fld
pop
xchg
jmp
sar
sub
es
push
xor
jne
fnstcw
jmp
cmps
sar
dec
mov
sub
mov
ror
cmp
scas
fwait
(bad)
lea
inc
adc
not
mov
push
shl
and
call
(bad)
outs
mov
in
sub
(bad)
hlt
jmp
out
mov
fisubr
jmp
bound
mov
xchg
or
mov
mov
repz
and
in
adc
adc
or
jne
cdq
mov
jg
jmp
mov
push
mov
fstp
mov
bnd
dec
hlt
dec
inc
mov
mov
pop
out
jo
lahf
jns
jecxz
leave
outs
scas
lahf
ror
call
mov
ret
ds
and
scas
pop
call
popf
ja
pop
pop
test
stos
icebp
sahf
fimul
xlat
add
adc
shl
xor
loop
push
jl
mov
mov
adc
sub
cmps
mov
fs
retf
mov
movsx
sub
rcl
xor
cmp
lds
popf
xor
jg
shl
jne
mov
lahf
fidiv
loope
mov
fimul
stc
mov
test
mov
aad
arpl
lock
je
mov
sub
inc
rcr
leave
and
push
sub
or
imul
or
test
jns
mov
aas
inc
sub
sub
ret
sub
cmp
stos
push
lea
cdq
shr
dec
stos
out
xchg
bound
or
ss
ins
push
sbb
dec
jl
dec
sbb
ins
dec
mov
cld
and
mov
aad
jae
mov
iret
mov
or
cmps
mov
xchg
mov
xchg
ror
fstp
pop
jmp
sub
hlt
sub
xor
jmp
es
bound
cmp
pop
cld
scas
popa
or
inc
sub
inc
repz
inc
dec
mov
(bad)
cmp
cmps
pop
dec
mov
pop
shl
cmc
pop
lea
mov
out
fimul
cmp
mov
sbb
loope
jns
xchg
mov
sub
in
pop
lods
sub
dec
movs
mov
sub
fist
and
pop
mov
jg
loop
out
add
jmp
pusha
hlt
xchg
add
pop
push
sti
push
in
or
rcr
in
sub
and
xchg
das
and
add
fs
sar
mov
adc
aaa
es
aas
loop
cmp
(bad)
adc
mov
and
loop
sub
rcl
fdivr
xor
sub
mov
pop
pop
int3
(bad)
push
test
cdq
retf
call
out
inc
stc
sar
and
fmul
mov
jae
stc
push
xor
sar
in
sbb
fsubr
mov
scas
sbb
mov
mov
ins
dec
fistp
jae
mov
xor
scas
call
mov
jo
fld
stos
push
cs
sub
mov
retf
movs
jns
push
movs
push
in
gs
stos
in
adc
mov
mov
inc
push
stos
add
push
call
push
fidivr
aad
add
repz
mov
mov
cmp
dec
adc
pop
inc
push
or
sar
sbb
push
cli
xor
fcom
dec
fidivr
imul
in
mov
jmp
xchg
out
ds
std
jmp
addr16
add
mov
or
aas
xor
cmp
cwde
shl
mov
xor
sbb
cmp
movs
push
cmp
inc
adc
lds
xchg
mov
and
and
pop
pop
int
repz
cmp
(bad)
sub
aas
rcl
scas
gs
lahf
jmp
xor
push
repnz
sbb
mov
or
iret
out
and
div
add
jmp
in
ss
push
bound
iret
xchg
pop
xchg
inc
shl
ins
cmp
fmul
xor
fist
fs
stc
clc
mov
push
outs
std
xor
lea
and
(bad)
clc
popa
pop
mov
outs
xor
xchg
lods
loope
xor
and
sbb
add
xchg
push
cmc
cs
(bad)
cli
jp
loope
pop
pop
fucomip
adc
clc
xlat
lea
fdiv
adc
mov
cmps
out
das
in
jns
(bad)
inc
fs
mov
or
and
xchg
retf
arpl
push
pop
jmp
das
in
adc
sub
cmp
mov
mov
out
sub
imul
and
je
or
push
mov
test
gs
call
mov
xchg
mov
add
sub
fisttp
jmp
das
dec
dec
pop
std
cs
dec
inc
and
sub
adc
aad
lahf
sub
sahf
mov
xor
lahf
pop
pop
mov
pop
ins
js
jne
out
stos
pop
push
or
shr
das
and
(bad)
in
retf
mov
test
mov
sbb
dec
popf
jb
aad
data16
test
add
push
xchg
dec
pop
scas
mov
and
mov
push
ja
(bad)
mov
inc
enter
xchg
or
neg
mov
neg
test
mov
and
mov
mov
adc
mov
sub
fwait
inc
jmp
mov
in
lea
inc
and
cli
frstor
lea
jmp
and
aas
aad
mov
mov
in
jns
mov
rcl
loope
stc
mov
lods
adc
in
xchg
inc
ror
dec
stos
retf
and
pop
push
mov
(bad)
xchg
push
cmc
div
aas
add
jl
xchg
mov
sub
stc
mov
(bad)
adc
daa
or
mov
movs
addr16
xchg
pop
pop
loop
inc
js
cmps
psrlw
dec
cmp
cmc
dec
xor
stc
add
and
push
pop
aam
rcr
cmps
pop
pushf
in
lods
jmp
xor
mov
movs
mov
push
aam
mov
dec
mov
in
sar
mov
xchg
push
jmp
mov
mov
rcr
sub
(bad)
mov
mov
je
xor
cmp
movs
sbb
cmp
lea
in
rol
sahf
ins
add
adc
add
in
adc
arpl
stc
fild
ss
jmp
popf
lock
mov
scas
ins
and
movd
clc
xchg
or
js
pop
ja
pop
sbb
adc
dec
out
sub
mov
je
leave
es
aam
je
shr
or
loope
add
sbb
test
pusha
pop
aad
ins
lahf
sub
iret
mov
mov
gs
xchg
sub
aas
out
add
push
push
or
pop
xchg
mov
jnp
shl
adc
push
dec
ret
mov
sbb
pop
xor
inc
mov
repnz
jmp
mov
sub
adc
call
mov
clc
mov
dec
and
fld
fsubp
cmps
imul
hlt
jl
aam
sti
cmp
mov
xchg
or
mov
outs
xor
or
ins
pop
ja
dec
push
push
adc
mov
adc
imul
mov
mov
inc
jbe
loopne
or
mov
(bad)
push
ret
lods
pop
adc
dec
clc
ret
int
fistp
cmp
xchg
or
pushf
mov
(bad)
stc
mov
push
add
aam
xchg
and
xchg
sub
das
shl
pop
jo
mov
lds
cs
xchg
out
shr
aad
xchg
js
xchg
cwde
cli
xor
rcr
ficomp
(bad)
out
pop
xor
shr
cld
jecxz
clc
inc
lods
mov
mov
inc
out
iret
push
shl
(bad)
sti
fbstp
mov
fild
addr16
loope
pusha
je
jnp
pop
inc
outs
cmp
aad
out
add
pop
push
call
dec
aam
daa
mov
push
or
movs
shr
mov
push
ja
stc
aaa
push
out
inc
push
xor
call
jmp
loop
or
cmps
jnp
sbb
shr
mov
ret
neg
sub
cli
mov
push
adc
iret
ret
jecxz
(bad)
xchg
xchg
push
adc
inc
mov
(bad)
fdivr
mov
cmp
dec
cdq
clc
bound
mov
xchg
sbb
sbb
cmp
mov
call
pop
fdivr
daa
repz
pop
add
call
sub
rol
xchg
adc
inc
popa
xchg
add
movs
out
jae
int
inc
push
add
jp
into
cmp
cwde
xchg
push
loop
push
add
scas
and
call
jle
neg
add
sbb
mov
adc
dec
(bad)
sbb
(bad)
xchg
sbb
push
std
aaa
push
and
retf
cwde
mov
or
push
jmp
jns
mov
jno
sbb
inc
dec
pop
ret
mov
jb
mov
mov
popf
xchg
je
cmps
shr
adc
jle
xor
sahf
test
aam
std
into
jb
inc
mov
(bad)
cld
pop
cs
cmps
(bad)
ins
fistp
inc
ror
jne
loop
outs
mov
jecxz
xor
push
shl
xchg
dec
jge
push
rol
stos
and
shl
lock
imul
aad
cld
or
(bad)
jo
lds
push
pop
cmp
dec
add
outs
fst
loopne
inc
iret
sti
icebp
pop
push
xchg
sahf
sub
dec
lods
repnz
and
jbe
mov
fiadd
jge
std
lock
cdq
xchg
add
push
push
dec
add
adc
jae
push
iret
sbb
sahf
cmp
xchg
out
add
lods
and
ds
fs
xchg
sti
movs
gs
shl
dec
fs
pop
cmp
and
ins
adc
xchg
rol
cmp
mov
dec
shl
dec
xlat
popf
cld
xchg
inc
adc
and
fnstsw
sub
fdivr
sub
sub
pusha
test
sti
pop
sbb
pop
les
(bad)
es
mov
iret
out
mov
jno
retf
mov
(bad)
out
imul
fbstp
call
mov
(bad)
cmp
gs
pop
call
sbb
and
and
js
ret
jp
loopne
jecxz
add
inc
inc
ret
and
jnp
sub
jmp
cmc
icebp
ror
fcom
ins
xor
sbb
mov
xchg
nop
scas
in
jg
shl
xchg
jb
cmp
push
sub
dec
sbb
aam
sahf
xor
call
std
mov
jecxz
pushf
add
sub
and
in
cmp
xchg
push
push
or
push
sub
and
mov
mov
(bad)
aad
cs
jmp
stc
cmps
and
dec
int3
lock
push
push
and
xchg
movs
cld
bswap
iret
data16
cli
xchg
fldenv
ja
stos
mov
ja
jge
out
sti
dec
(bad)
mov
pop
stos
pop
out
imul
push
int3
fmul
inc
jge
adc
out
sahf
jge
dec
push
dec
adc
xchg
jbe
clc
stos
dec
mov
mov
add
adc
(bad)
aad
adc
cmp
iret
in
popa
in
mov
cmc
inc
mov
mov
add
retf
rep
scas
cmp
lds
or
outs
cmc
es
lods
sbb
lahf
gs
hlt
test
cmp
in
int
into
mov
js
out
or
xchg
hlt
es
iret
xchg
mov
jecxz
stos
out
loop
mov
repz
sub
sub
pop
adc
jbe
fdivr
cmp
jns
cld
scas
mov
sub
push
loopne
ud2
ds
cmp
(bad)
mov
cld
push
outs
arpl
jp
xor
jg
xor
jb
inc
shr
mov
mov
adc
ja
pop
sahf
mov
int
out
and
xor
pop
mov
jnp
cld
or
jle
jno
fs
dec
or
loopne
xchg
int3
xlat
and
cld
ds
or
lea
add
pop
sbb
cmps
cmp
loopne
adc
hlt
xchg
pop
and
mov
(bad)
pop
sub
and
lds
xor
std
neg
mov
in
shr
mov
sub
and
mov
test
or
and
inc
pusha
popa
test
imul
mov
and
stos
in
(bad)
in
fbld
mov
pop
jg
pop
xchg
nop
jmp
jmp
and
mov
div
cli
xchg
lahf
mov
iret
xor
dec
adc
adc
xor
jle
cmp
lahf
in
pop
inc
ins
pop
retf
add
xchg
data16
add
add
xor
in
or
xchg
int
addr16
xor
push
(bad)
dec
xchg
cmps
(bad)
mov
outs
in
jg
pop
loopne
icebp
inc
mov
xor
mov
mov
xor
inc
mov
icebp
cmp
push
fwait
xor
icebp
aaa
movs
dec
int
push
inc
lock
cmp
cli
cmp
in
pop
(bad)
and
and
shl
ret
repnz
lods
mov
je
xchg
cwde
push
out
clc
stos
test
jne
pop
fwait
iret
jo
inc
cmps
jl
test
push
mov
adc
les
loop
jns
int3
push
ficomp
ins
stos
add
test
(bad)
sub
cmp
inc
mov
and
pop
dec
xchg
xor
fdivr
mov
clc
hlt
daa
fwait
xor
add
lahf
repz
cmp
mov
cmp
mov
imul
push
ret
pop
dec
push
lods
pushf
sbb
ins
repnz
dec
sub
pop
lods
lea
loop
mov
popa
pusha
bound
mov
add
push
pop
addr16
add
mov
shl
sti
mov
or
sahf
jl
jns
xchg
enter
xchg
sub
inc
pop
cmp
pop
test
js
sbb
pop
sbb
dec
jbe
mov
pop
(bad)
stc
push
cld
out
test
adc
retf
add
cdq
push
ja
iret
mov
fnstenv
outs
cld
inc
dec
add
daa
std
sub
popa
mov
cmp
inc
add
addr16
mov
jae
jle
mov
outs
xchg
inc
cmp
inc
aad
pop
pop
aam
push
mov
loop
cmp
mul
cmp
call
dec
jae
hlt
and
pusha
in
push
jb
(bad)
dec
sub
push
stos
(bad)
js
inc
lea
mov
repz
xor
sub
mov
les
jmp
(bad)
fild
mov
pop
xchg
push
cmps
jle
or
mov
ins
sub
mov
or
das
outs
adc
and
in
(bad)
add
push
jmp
out
(bad)
retf
cmp
sahf
adc
push
jge
pop
or
fsub
scas
cmps
ja
inc
pop
xchg
mov
popf
cmp
bound
cmp
mov
xchg
imul
mov
push
sbb
sub
popf
jle
into
std
mov
mov
in
lods
loop
dec
sbb
stos
mov
dec
ja
add
in
adc
pop
mov
inc
mov
test
mov
lods
adc
ret
jmp
sbb
xor
mov
ret
enter
mov
push
shl
or
out
enter
mov
mov
into
psllw
repz
aam
addr16
xchg
(bad)
gs
sub
or
paddsb
jmp
push
inc
bound
inc
mov
retf
retf
push
push
jno
inc
xchg
fsubrp
push
add
fdivr
xlat
shl
mov
or
cdq
arpl
cmp
je
xchg
test
pushf
xlat
and
mov
xor
inc
dec
rcl
pop
lods
loopne
sbb
inc
xor
push
xchg
pop
adc
fcom
iret
(bad)
dec
ret
repz
xchg
mov
lds
adc
aam
mov
jecxz
jg
adc
cld
mov
push
test
cmp
pop
retf
loop
inc
adc
cmp
adc
cwde
shl
ins
daa
xlat
inc
es
movs
push
call
test
jge
jbe
pusha
fs
push
mov
xchg
fiadd
push
(bad)
mov
ficomp
outs
dec
mov
call
mov
sbb
sti
jbe
fs
jo
jbe
aad
mov
popa
mov
fdivr
lock
pop
add
(bad)
xlat
sbb
ja
test
inc
push
xchg
dec
mov
(bad)
mov
cmp
jae
cmp
dec
xor
movs
(bad)
mov
inc
push
lahf
or
sub
sub
aas
into
xor
cdq
push
clc
xchg
fisttp
mov
or
mov
push
aas
hlt
sub
xchg
cmp
imul
xor
(bad)
imul
inc
in
lds
or
push
pop
iret
or
(bad)
fsubp
add
xor
cmp
fsubr
push
xchg
pop
xor
dec
pop
aam
stos
and
leave
sub
mov
retf
pop
inc
ins
and
bound
bt
out
inc
gs
mov
push
mov
lods
cmc
xchg
cmps
inc
dec
push
mov
sub
and
jl
fld
push
xor
push
cmp
and
jmp
aad
sub
fwait
inc
jge
mov
cli
push
xor
push
jp
ins
pop
cmp
in
cmp
ret
(bad)
in
and
aam
adc
mov
std
mov
rep
sar
movs
jg
jno
sub
retf
sub
push
inc
mov
sub
inc
in
mov
xchg
sahf
daa
inc
jnp
fistp
adc
jae
inc
out
sar
(bad)
xchg
fwait
mov
in
sub
daa
cli
sub
gs
iret
(bad)
jne
mov
adc
mov
outs
neg
jbe
push
in
dec
pusha
outs
arpl
lds
sbb
and
cmp
aam
adc
push
inc
fld
mov
imul
hlt
sbb
mov
inc
icebp
js
fwait
enter
ds
push
rol
ss
js
int3
ins
sbb
into
hlt
pushf
retf
(bad)
fdivr
xor
(bad)
jo
lds
push
pop
fst
int3
mov
shl
sub
div
dec
pop
pop
mov
push
ror
pushf
mov
or
adc
test
stos
inc
test
(bad)
add
xchg
aas
dec
adc
dec
call
ret
lea
mul
sub
pop
pushf
(bad)
int
push
push
das
jae
scas
add
pop
stc
xor
aam
jo
xor
es
sbb
je
in
pop
jl
adc
add
cs
mov
jb
fstp
fs
in
pop
mov
icebp
inc
push
ror
fucomi
or
jno
sub
data16
xor
scas
jmp
into
outs
(bad)
cli
aad
pop
outs
ror
jne
xchg
sbb
and
mov
into
sub
cmp
mov
inc
(bad)
xchg
ja
pushf
enter
das
xlat
or
scas
jge
cdq
add
cmps
(bad)
aaa
sbb
fwait
sahf
out
lock
mov
(bad)
inc
mov
fadd
nop
(bad)
in
or
pop
das
in
mov
aad
pushf
add
adc
dec
or
iret
clc
aam
(bad)
(bad)
inc
fnstenv
mov
xchg
jle
inc
cdq
xor
rol
rcl
push
imul
stc
ins
fimul
jle
adc
mov
pushf
(bad)
xchg
xor
sbb
and
inc
inc
sub
aaa
clc
iret
pop
lahf
sub
mov
xor
in
sub
jl
xor
add
fimul
jge
loopne
lea
sub
stos
jno
and
dec
pop
or
sub
retf
sahf
pop
cwde
cmp
or
mov
lock
adc
push
addr16
push
test
fisubr
pop
push
xchg
les
push
stos
repz
cmps
dec
dec
push
(bad)
movs
gs
ror
std
jl
lods
movs
clc
imul
in
mov
ins
into
(bad)
(bad)
sbb
daa
(bad)
mov
ud1
cmp
xchg
mov
cmc
add
xchg
push
sub
shr
adc
jns
sub
ret
and
in
in
sub
jge
cmp
fidivr
push
int
fstp
hlt
mov
xor
out
and
xchg
inc
xchg
arpl
into
pop
xchg
rol
or
repz
cmp
jnp
cmps
fild
outs
dec
jle
inc
je
jnp
pop
daa
fist
mov
adc
sub
retf
aaa
xor
mov
scas
add
mov
mov
lea
xor
dec
stos
mov
pop
aam
jo
xor
test
dec
xor
out
ds
adc
sub
(bad)
fsub
or
inc
jp
adc
inc
ror
out
cmp
sub
sub
cmp
daa
addr16
jae
xor
push
loope
add
pop
int
cld
pusha
dec
push
out
int3
inc
sbb
sub
xchg
jmp
mov
adc
outs
pop
call
mov
std
cmp
sub
lahf
scas
push
imul
or
dec
mov
addr16
loop
xor
scas
sbb
rcl
iret
daa
mov
outs
xchg
sti
jecxz
(bad)
je
cmp
jg
cmp
dec
and
fstp
aad
lock
rcr
fwait
pop
fnstenv
or
add
push
(bad)
xchg
dec
(bad)
outs
imul
cs
adc
mov
or
lds
and
mov
inc
jecxz
fs
mov
push
pusha
mov
arpl
ins
lock
popf
cmp
jg
inc
jo
cmp
nop
fadd
outs
push
dec
(bad)
ror
loop
scas
scas
adc
xchg
scas
cmp
add
imul
cmps
add
stc
ins
leave
push
add
test
cwde
sbb
test
mov
mov
and
jge
sbb
dec
cli
cdq
xchg
fisttp
pop
adc
or
push
cmp
or
aaa
mov
clc
outs
por
mov
pusha
pop
xor
mov
je
mov
lea
sbb
iret
xor
xor
retf
mov
jno
pop
aam
sub
add
stc
sub
dec
mov
xchg
add
adc
popa
and
xor
out
jnp
(bad)
sbb
mov
add
jmp
sahf
mov
and
xor
push
lods
in
jno
sub
mov
push
xchg
and
mov
pop
and
sub
jbe
fdivr
enter
je
sub
fstp
dec
ss
stc
pop
movs
loopne
pop
fstp
push
jl
jecxz
dec
loopne
jg
fst
pop
cmps
xchg
and
cld
or
nop
or
aad
in
mov
pop
pop
dec
inc
xchg
sbb
into
fadd
mov
mov
shl
mov
sub
or
cld
ficom
jg
in
and
ret
mov
cwde
scas
sub
and
jae
jmp
jge
mov
pop
sbb
mov
daa
pusha
cmps
(bad)
stos
sbb
mov
(bad)
sahf
inc
xchg
clc
jmp
xlat
cmp
dec
push
imul
add
sub
addr16
loopne
mov
dec
fstp
xlat
call
inc
sub
pop
pop
mov
push
cmps
movs
add
rcl
clc
lock
dec
test
fwait
mov
fcomip
leave
test
xchg
mov
fsubr
xchg
sub
nop
xchg
addr16
xchg
shl
adc
xabort
push
sbb
cmp
inc
mul
movs
xchg
inc
fist
pop
outs
mov
dec
xor
out
pusha
jnp
sahf
das
in
lods
movs
aaa
in
cmp
mov
icebp
xor
or
push
and
fsubr
dec
inc
(bad)
cmps
shl
mov
cmc
push
ins
xor
push
ds
mov
push
mov
int
jge
call
xor
icebp
cmps
pop
jbe
imul
mov
sub
xlat
mov
jbe
mov
aas
or
pop
repnz
ret
je
not
ins
mov
sub
ret
cs
rol
dec
inc
jmp
xchg
add
cmp
les
sti
jnp
(bad)
mov
lods
cld
out
xchg
pop
pop
add
movs
fnstenv
loope
clc
fldenv
push
add
idiv
mov
das
pop
cwde
out
push
push
dec
out
sub
pushf
jle
jmp
repnz
jo
push
mov
xchg
test
sub
cmc
sbb
scas
jecxz
cmp
mov
mov
pop
jle
lock
push
cmp
(bad)
lahf
cmc
fcmovne
mov
ins
call
xchg
add
scas
paddw
int
movs
pop
jl
fwait
dec
and
imul
inc
or
mov
outs
lea
inc
rol
adc
leave
mov
inc
aad
dec
push
bound
xchg
and
call
add
les
pop
in
leave
ins
pushf
cmp
xor
push
mov
repz
dec
inc
test
jg
into
sbb
xor
sti
dec
imul
fst
jmp
adc
xor
ds
cli
add
cmp
or
mov
jge
jg
add
std
fucom
movs
popf
lods
jne
mov
mov
imul
pop
mov
dec
ror
sub
pop
cmps
push
mov
xor
inc
and
mov
jne
pusha
ins
pop
pop
mov
pushf
lods
inc
outs
mov
cmps
xchg
push
xor
pop
aas
cmp
scas
fwait
mov
xchg
aam
imul
push
popf
scas
mov
(bad)
mov
and
cmp
adc
sub
int3
inc
xchg
sub
xchg
repz
into
inc
cld
mov
out
repnz
push
enter
push
leave
xchg
pop
inc
std
int
sbb
jmp
ins
(bad)
test
dec
xlat
mov
pop
out
daa
jmp
mov
(bad)
inc
add
sbb
add
or
and
dec
lea
jmp
inc
test
hlt
dec
cmc
ss
arpl
mov
sbb
loope
and
sbb
sbb
fldl2t
xchg
test
(bad)
popf
int3
inc
xchg
pop
dec
stc
loope
mov
push
outs
sbb
adc
cmp
(bad)
jmp
pop
and
das
mov
idiv
in
jge
mov
rol
ins
into
and
cs
lock
jns
pop
push
rcl
xor
arpl
neg
add
push
or
shr
jecxz
scas
pop
adc
push
cli
xor
aaa
stos
mov
pop
shl
lods
cmps
jne
scas
test
popf
dec
jg
mov
sahf
or
jnp
arpl
jo
daa
ds
sub
scas
pop
adc
or
test
push
push
lods
pop
jbe
sbb
cld
add
and
cwde
push
fs
adc
adc
lods
in
cdq
xor
test
adc
push
scas
cmps
xchg
sahf
daa
or
test
mov
pop
test
jp
sbb
repz
add
shl
adc
jecxz
div
add
test
adc
adc
and
sub
nop
pop
mov
add
(bad)
enter
xchg
and
or
or
xor
xor
movs
sbb
or
jg
push
and
dec
mov
pop
mov
adc
shl
mov
or
sahf
sub
sub
mov
jp
ja
in
popf
mov
in
jl
mov
stc
repz
add
push
cli
adc
inc
gs
adc
and
clc
in
dec
mov
cld
push
fs
cmp
push
out
aad
fst
ins
add
and
lds
jg
aaa
dec
sar
push
pop
xchg
int3
jb
mov
xor
fst
add
add
xchg
mov
(bad)
stos
jmp
mov
push
sbb
pop
mov
inc
sbb
jmp
int3
push
add
call
std
cmp
mov
dec
fmul
xchg
call
jmp
add
lahf
and
loope
test
and
popf
mov
nop
mov
jp
ret
push
test
sub
xor
and
(bad)
jmp
clc
push
adc
out
xor
lahf
(bad)
(bad)
int3
leave
sbb
pop
js
movs
and
dec
fidivr
out
out
fistp
loope
jmp
call
js
push
pop
jns
ficom
inc
stos
push
xor
fdivr
sub
add
fstp
and
lods
xchg
pop
jo
jmp
shl
xor
sub
push
jle
xor
call
gs
jle
(bad)
clc
ret
movs
xor
(bad)
mov
push
loop
ror
jg
adc
mov
sbb
pusha
adc
stos
mov
sbb
pop
movs
lds
(bad)
scas
xchg
jae
out
not
cli
pusha
xor
mov
push
and
mov
popa
mov
fcomp
clc
cmps
fnstenv
clc
(bad)
les
sti
and
xor
sbb
int
repz
mov
adc
mov
(bad)
clc
push
icebp
inc
enter
mov
fbstp
xchg
and
add
jmp
dec
rcr
mov
and
or
aam
inc
cmp
mov
cs
or
scas
test
imul
lods
ret
hlt
xchg
fchs
mov
add
push
jae
xor
jle
dec
(bad)
test
cmp
in
arpl
imul
(bad)
ja
xchg
jns
out
mov
xchg
pop
or
pop
or
popf
and
push
jno
clc
stos
retf
sbb
jb
jecxz
nop
jmp
xchg
sbb
push
pop
cmp
cmp
pop
jmp
bound
loopne
xchg
sbb
repnz
adc
and
sub
(bad)
int3
fcom
movs
call
mov
pop
mov
(bad)
popa
dec
movs
lock
xchg
or
dec
popa
xor
adc
sti
and
aaa
push
cmps
test
es
xor
xchg
das
rcr
fs
sahf
loope
out
inc
pop
mov
adc
mov
sbb
add
xchg
inc
lods
cmp
jae
mov
in
xchg
ds
call
sbb
int3
xor
icebp
mov
or
arpl
inc
push
test
retf
cmp
xchg
pop
out
fxch
jae
xchg
jb
fs
mov
xlat
fdivp
bound
jg
repnz
scas
sar
inc
cmps
inc
mov
imul
test
out
push
pop
repz
popf
aaa
cmp
jp
loopne
daa
add
adc
mov
mov
mov
jle
ret
rcr
iret
jp
dec
out
mov
stos
mov
in
mov
ins
out
sub
(bad)
mov
push
cmp
aam
dec
mov
scas
aas
cmp
retf
dec
lahf
aas
nop
inc
shl
retf
sub
and
mov
das
push
mov
jp
fcmovnb
out
add
das
jb
into
push
shr
pop
movs
dec
xchg
mov
xchg
icebp
jmp
pushf
jmp
mov
xor
fs
push
test
or
sbb
adc
dec
sbb
mov
test
lock
xor
or
shl
xchg
sub
sbb
sbb
mov
in
cdq
dec
les
jmp
mov
stos
pop
shr
out
xchg
push
push
or
xor
mov
aaa
mov
div
jo
jg
cvtpi2ps
imul
cli
inc
dec
lahf
sbb
pushf
jmp
sbb
cmp
mov
inc
sti
cli
lock
sub
or
sbb
cmps
and
cmp
call
cli
(bad)
push
cld
pcmpeqb
jecxz
cmp
call
sub
ss
out
popf
mov
jnp
cld
(bad)
dec
in
dec
out
mov
(bad)
and
mov
mov
repz
jo
inc
xor
in
call
sar
mov
(bad)
jb
lock
clc
push
mov
sbb
xor
ja
(bad)
fnstcw
xchg
outs
test
pop
cmp
aad
aam
cmp
push
adc
sbb
loop
std
push
mov
xor
jmp
mov
jg
pop
jnp
mov
inc
pop
in
mov
imul
cs
adc
iret
mov
adc
dec
dec
pop
xchg
into
js
push
stc
dec
pop
push
pop
xchg
xor
adc
(bad)
mov
sbb
idiv
jp
mov
pop
mov
dec
sub
loop
cmp
scas
clc
mov
outs
iret
movs
movs
dec
fild
sub
mov
pusha
mov
(bad)
mov
test
add
push
outs
and
mov
ret
xchg
arpl
hlt
xchg
mov
ins
xor
xchg
icebp
ins
imul
int
sbb
pop
fwait
stc
adc
mov
popa
jmp
pusha
jo
mov
pop
or
fld
sub
daa
mov
cmps
push
fcomp
sub
jmp
(bad)
mov
pop
mov
adc
sbb
mov
movs
aas
xchg
jge
ja
ret
sub
rcr
sub
les
mov
lahf
repz
jmp
push
push
test
mul
mov
xor
scas
mov
or
adc
ror
cmps
xchg
movs
lsl
popf
cli
jl
mov
out
outs
pop
adc
cmp
std
ins
rol
out
pop
cmp
cs
adc
fs
pop
xchg
pushf
ficom
jbe
cmp
cld
adc
cmp
jmp
sahf
push
sub
xchg
jle
test
sub
(bad)
fs
inc
sbb
xchg
cld
loop
pusha
mov
bound
inc
inc
sbb
add
cdq
pop
and
pop
mov
jnp
inc
add
fist
mov
mov
test
inc
xchg
jb
arpl
cdq
inc
mov
sbb
dec
aam
adc
add
shl
jmp
jecxz
das
pop
cmp
pop
push
or
add
je
mov
mov
mov
xor
addr16
mov
test
xchg
sbb
ror
jg
mov
add
aaa
test
push
inc
leave
cwde
pop
cmp
loope
call
sub
fwait
mov
push
aad
sbb
inc
ret
adc
and
pop
jge
jle
pop
inc
sub
cmp
or
mov
nop
jno
int3
nop
pusha
movs
add
daa
not
popa
bound
push
jecxz
popf
adc
dec
mov
mov
ds
mov
fnstsw
sub
dec
inc
ins
inc
in
ins
les
push
je
scas
add
inc
sbb
jmp
add
and
mov
in
fdiv
retf
out
sbb
mov
fisttp
out
inc
ins
adc
cmp
test
pop
ret
stc
in
rcl
inc
sti
ins
pop
ja
sbb
xlat
aas
iret
movs
(bad)
clc
dec
hlt
ror
out
mov
lea
ds
mov
push
movs
adc
je
mov
cmp
mov
or
int3
or
inc
mov
fild
(bad)
neg
dec
pop
fnstcw
or
mov
ror
jno
mov
jl
std
loop
mov
not
mov
jmp
icebp
cmp
jae
imul
aas
jle
xchg
aad
daa
sbb
std
lahf
in
movs
add
cli
movs
fld
ret
movs
jg
mov
and
pop
inc
sar
sub
push
pop
adc
scas
pop
loope
inc
test
adc
push
stc
dec
push
cmp
adc
mov
imul
mov
xchg
add
and
gs
add
lahf
pop
dec
jo
arpl
jp
jb
add
pop
jae
adc
stos
retf
mov
add
in
jg
ins
repnz
nop
(bad)
(bad)
mov
pop
jge
mov
hlt
cmp
jmp
in
mov
and
(bad)
faddp
fidiv
and
mov
jge
mov
add
je
cmps
jl
or
retf
pop
aas
xor
push
xlat
cld
mov
xchg
jae
cmps
mov
mov
push
retf
mov
dec
fs
sbb
adc
in
gs
mov
imul
rcr
pop
dec
sub
das
or
in
sub
(bad)
fs
fidivr
je
mov
in
int3
outs
push
jmp
dec
pop
imul
or
adc
stc
add
xor
imul
dec
ss
je
xchg
(bad)
sar
sar
ucomiss
mov
(bad)
ror
inc
push
xchg
cld
inc
push
fwait
jne
sbb
sub
js
gs
loope
in
(bad)
inc
cmp
mov
xchg
sub
jge
mov
out
sub
sub
stos
mov
cmc
xor
cmp
mov
out
mov
adc
and
cwde
mov
popa
in
test
div
dec
inc
add
jns
inc
mov
rcr
jl
cmp
and
add
cmc
jnp
or
test
jle
jge
mov
add
sti
int3
jmp
rcr
xor
movs
(bad)
jp
mov
js
out
in
scas
adc
(bad)
pushf
or
repz
pop
int
(bad)
(bad)
cmp
test
arpl
and
sahf
cmp
xchg
cld
je
outs
cdq
inc
cmps
add
or
xchg
sub
retf
xor
stc
pop
xchg
push
sub
pusha
xchg
sub
xor
mov
push
and
lea
and
xchg
xor
pop
(bad)
mov
cs
jne
es
aas
cmp
repz
das
mov
and
lea
scas
jp
dec
adc
jns
and
enter
enter
rol
mov
mov
iret
sbb
pop
cli
cmc
xlat
jge
ss
jecxz
lods
xchg
and
sub
mov
pushf
sub
mov
jbe
pop
das
push
hlt
sbb
iret
cmp
mov
mov
lahf
sbb
fadd
sti
mov
outs
dec
popa
jno
cs
lds
mov
arpl
div
adc
scas
test
jmp
mov
ret
cdq
or
fcmovnb
(bad)
adc
xchg
movs
dec
jb
fs
into
cmp
jno
cmp
lea
outs
inc
cmp
xchg
xchg
lods
xor
aam
adc
pop
pop
or
cli
cmp
cld
pop
outs
test
push
pop
pushf
pop
push
test
mov
out
fstp
sub
xor
aas
ins
out
sbb
mov
or
push
push
adc
mov
inc
popf
pop
jnp
adc
pushf
jb
jmp
sbb
call
sub
(bad)
call
push
cmp
mov
xchg
cdq
add
call
lahf
push
pop
in
sbb
mov
dec
jo
aas
jge
sti
ja
mov
mov
xlat
fs
sub
jmp
cdq
cs
xchg
jle
call
movs
out
mov
mov
mov
test
inc
test
in
sbb
jo
mov
mov
xchg
jmp
push
or
jnp
inc
js
sbb
in
cmp
add
push
aam
mov
xchg
xor
sub
dec
xchg
xchg
sbb
and
cld
cli
jae
or
mov
sub
jmp
es
stos
test
(bad)
ror
push
jbe
inc
xchg
les
sbb
mov
mov
sub
ss
adc
jl
fwait
out
pop
cmp
int3
call
test
ins
sbb
pop
aaa
popf
ror
fld1
(bad)
mov
xlat
aad
iret
(bad)
pushaw
inc
retf
inc
push
pop
sahf
ds
push
aaa
jnp
loop
ror
rcl
stos
sub
in
and
mov
or
repz
sti
out
enter
adc
rcl
ja
inc
mov
mul
pop
and
add
icebp
sbb
xchg
out
sub
mov
ins
ret
arpl
push
dec
fsubrp
mov
in
call
dec
(bad)
mov
lahf
ror
dec
sti
mov
lea
popf
stc
cmp
cmp
cld
int3
sbb
mov
outs
lahf
pop
jg
ror
les
push
xor
mov
adc
repz
jmp
data16
mov
jl
dec
xchg
mov
xchg
jae
mov
ror
adc
test
xor
cwde
movs
jbe
adc
cmp
test
and
imul
cmp
mov
cmp
(bad)
bound
cmp
xor
cmps
jo
(bad)
or
out
adc
mov
mov
fs
test
cmps
ins
adc
cmp
test
mov
jne
in
and
xchg
fld
xchg
(bad)
movs
sbb
push
push
test
or
or
(bad)
in
add
shl
or
sub
call
xor
cmps
fsub
adc
aad
outs
test
loopne
shl
push
iret
ja
add
cmp
cwde
dec
inc
lahf
mov
sbb
jmp
dec
xchg
outs
ret
push
aad
ret
and
cmp
enter
sar
call
mov
add
mov
shl
adc
out
retf
sbb
lock
xlat
push
or
nop
(bad)
test
int
rcl
xor
leave
(bad)
push
movs
adc
mov
aad
mov
mov
jg
cmp
rcl
test
(bad)
iret
mov
mov
adc
aas
dec
xor
mov
xchg
fwait
(bad)
xchg
adc
xor
pop
shl
test
shl
lahf
mov
aad
push
sub
jno
dec
ds
fisub
aas
sub
sbb
int3
pop
ds
cmp
pop
popf
es
add
out
mov
and
pop
xchg
ins
xchg
mov
gs
push
sbb
xor
fdiv
jno
xor
rol
das
and
dec
outs
movs
out
and
ret
call
shr
sbb
mov
outs
ss
mov
bound
hlt
retf
cwde
loopne
mov
mov
(bad)
in
sar
mov
push
repz
out
(bad)
jg
shr
xor
push
mov
hlt
call
jo
cwde
jns
mov
es
clc
repnz
sub
lods
int3
stc
jno
and
ds
push
out
test
mov
push
in
and
jb
cdq
(bad)
cmc
call
sub
mov
mov
cmp
sbb
xchg
adc
xor
sti
ds
aam
aam
mov
push
xor
and
adc
jge
inc
test
fdiv
imul
div
mov
pop
dec
test
pop
dec
push
mov
test
pop
shl
jecxz
xor
dec
sbb
ja
in
push
nop
mov
clc
lock
call
jnp
outs
(bad)
jnp
jmp
lods
es
(bad)
stc
xchg
xor
icebp
xor
repnz
loope
xchg
les
in
repz
in
fld
loopne
pop
retf
addr16
xlat
sbb
aaa
sub
xlat
movs
mov
jmp
dec
jg
mov
sub
outs
mov
dec
iret
aaa
ss
lock
test
neg
jecxz
fisub
popa
push
lods
mov
shl
out
add
retf
repnz
push
fwait
xchg
aad
(bad)
fcomp
mov
movs
sbb
test
or
fwait
jg
pop
sub
repz
cmp
pop
inc
cmp
cdq
clc
or
and
in
(bad)
dec
shl
pop
jp
cmp
imul
inc
fiadd
or
mov
arpl
sub
push
loop
sub
xchg
shl
repz
iret
out
mov
add
jnp
jmp
fldenv
sub
mov
psubusw
xchg
push
outs
test
mov
daa
mov
push
jae
popa
push
int
popf
pop
leave
push
aad
and
dec
movs
adc
in
jno
or
and
dec
inc
nop
jmp
mov
mov
or
fs
jmp
jo
xchg
push
int3
scas
lea
adc
xchg
adc
cmp
jecxz
je
neg
test
xchg
inc
mov
sbb
pop
enter
or
fwait
or
cmp
fs
lods
rcr
sub
lods
xchg
push
pop
es
pop
(bad)
pop
add
sub
mov
jo
add
fisub
lods
(bad)
iret
lock
ficom
adc
mov
inc
add
push
or
mov
pop
and
push
js
cs
xor
inc
cmp
in
mov
add
pop
daa
daa
lock
call
adc
call
lahf
bound
and
xor
pop
dec
retf
sbb
sbb
adc
or
inc
icebp
das
scas
jmp
xchg
add
pop
sub
cld
jl
arpl
imul
rcr
inc
or
icebp
inc
loopne
push
popf
div
shl
(bad)
dec
stos
jle
mov
inc
test
sub
push
mov
sti
inc
mov
inc
jo
je
mov
inc
mov
nop
lods
ror
scas
(bad)
in
(bad)
(bad)
mov
adc
(bad)
pop
push
mov
xchg
clc
int
pop
inc
cmp
push
(bad)
mov
inc
test
add
fstp
fsub
xor
pushf
jo
cvttps2pi
aad
mov
add
(bad)
push
push
das
cmc
jno
jp
das
sar
pushf
jb
jns
mov
xor
std
lahf
dec
and
xchg
cmps
dec
in
into
dec
call
xor
(bad)
xchg
aam
test
mov
out
out
mov
jnp
push
ja
push
jo
retf
mov
iret
out
inc
(bad)
mov
push
aas
pop
push
jg
gs
dec
inc
add
push
adc
imul
arpl
int
fs
out
in
push
cmp
je
lea
cld
add
jp
(bad)
sar
xchg
leave
jecxz
xor
std
xor
ds
mov
mov
add
mov
repnz
scas
xor
(bad)
jnp
fild
mov
pushf
addr16
out
les
sbb
mov
jo
xlat
jo
mov
lock
push
aaa
aaa
out
sahf
rcl
rcl
push
bound
mov
push
jo
mov
daa
or
jecxz
mov
sub
ficomp
rcr
call
inc
test
xchg
je
and
arpl
cdq
not
das
rol
loop
shr
mov
hlt
jae
mov
pop
mov
pop
fistp
dec
push
(bad)
pop
mov
in
and
or
or
inc
sbb
mov
jmp
loop
pop
add
popf
mov
and
stc
push
inc
mov
push
fisubr
or
and
in
xchg
cmps
mov
jae
in
cmp
in
pop
in
ss
xchg
jge
popf
jae
cs
(bad)
inc
outs
mov
inc
enter
dec
daa
pop
imul
mov
mov
add
push
out
sbb
(bad)
rol
int3
and
fisttp
mov
sub
jmp
lock
inc
dec
out
test
xchg
xlat
enter
mov
and
and
retf
ror
out
pusha
dec
mov
into
ds
in
loopne
cmp
mov
setbe
mov
sub
(bad)
imul
mov
pusha
mov
lea
dec
mov
jnp
push
fs
mov
push
jbe
outs
push
pop
inc
adc
inc
xor
xor
data16
data16
and
(bad)
repnz
shl
sbb
sub
xlat
push
jecxz
adc
fimul
sub
(bad)
scas
jp
or
lahf
pop
outs
fisubr
sub
loopne
and
lods
addr16
out
not
sbb
icebp
mov
shr
daa
and
adc
div
jne
mov
add
test
jmp
xor
dec
mov
jno
(bad)
mov
loopne
test
pop
dec
shl
and
inc
dec
call
(bad)
in
neg
leave
int
mov
add
rcl
retf
aaa
aas
mov
int3
or
ss
js
mov
stos
xlat
pushf
and
adc
cmp
mov
xchg
add
rol
out
mov
shl
sub
pop
loopne
cld
mov
or
adc
inc
lods
jo
fidivr
mov
aas
jl
sahf
inc
movs
arpl
in
mov
movhps
test
call
lock
fucomp
add
leave
in
sub
adc
lea
adc
jae
fucomp
leave
pop
cmps
psubusw
clc
(bad)
in
movs
jge
test
cmp
call
cmp
sub
mov
dec
mov
sub
pop
mov
mov
add
loop
or
xchg
repz
mov
pop
icebp
xchg
mov
sti
mov
and
add
mov
push
pop
outs
(bad)
in
not
fldcw
pop
jle
icebp
add
mov
add
shl
dec
jge
xchg
fstp
cmps
sbb
jp
and
adc
sbb
ins
mov
xchg
std
xchg
mov
pop
jle
pop
fidivr
ins
or
jecxz
clc
xchg
xor
in
xor
jg
std
fs
js
pop
lods
scas
inc
cmc
mov
inc
dec
dec
push
push
jl
xor
lock
movs
push
jae
cmp
jp
(bad)
mov
les
jge
mov
cmps
out
das
lods
in
xchg
mov
loop
retf
push
xlat
test
shl
mov
mov
and
div
movs
repz
cmp
mov
cmps
imul
xchg
popf
js
push
aas
fwait
test
mov
lock
das
mov
(bad)
dec
xlat
push
add
cli
adc
xchg
xor
pop
pop
test
sub
gs
sti
cmps
xlat
pop
mov
mov
cmc
mov
cwde
inc
xor
out
iret
lahf
movs
lods
mov
es
fidivr
icebp
shl
cmp
xchg
sub
mov
mov
mov
inc
test
sbb
jb
stos
sub
pop
addr16
enter
sbb
mov
mov
in
test
pop
into
push
inc
or
mov
push
pop
adc
push
mov
pop
scas
ret
cli
ins
pop
shl
jmp
push
movs
cs
pop
mov
scas
stc
jmp
mov
into
pop
mov
cld
pop
enter
inc
xchg
mov
clc
loope
and
cdq
inc
lea
icebp
(bad)
nop
add
jge
iret
adc
fbstp
icebp
mov
or
lock
icebp
jecxz
push
mov
jg
bound
xor
clc
mov
cmp
inc
not
add
scas
or
fucom
mov
je
fsub
or
imul
imul
repz
cwde
js
test
aas
sbb
js
mov
and
rcl
jnp
jmp
adc
data16
aas
sub
or
shr
xor
test
mov
xchg
movs
mov
fsub
stos
mov
adc
add
mov
test
jno
cwde
test
and
out
stos
inc
shr
pushf
ja
add
sbb
dec
cld
mov
push
xchg
mov
inc
pop
xchg
(bad)
icebp
xor
mov
add
movs
jae
and
sub
stos
xchg
jg
daa
aam
pop
imul
lds
jmp
adc
inc
call
cwde
ret
test
ret
sub
ror
adc
(bad)
out
test
sahf
pusha
xchg
fisub
test
sti
adc
mov
xor
out
push
cmps
push
in
jg
adc
xchg
loopne
mov
cmps
pop
push
in
pushf
jg
ds
sbb
fs
pusha
or
sub
sub
(bad)
jbe
mov
adc
(bad)
jbe
icebp
shr
dec
cs
adc
aad
jge
sti
into
adc
jne
xor
xlat
rcl
cmp
jns
loopne
xor
inc
sub
fmulp
pop
cdq
movs
clc
cld
dec
adc
adc
inc
test
push
sub
and
ins
aas
sub
mov
outs
loop
xchg
retf
jmp
ins
add
or
pop
test
loop
dec
jmp
fadd
div
ret
add
mov
sub
xchg
sti
mov
test
clc
fst
mov
inc
adc
xchg
xor
cmp
and
sar
mov
cli
adc
(bad)
mov
ror
cld
fmul
sahf
fnsave
fwait
ret
add
xor
push
push
mov
push
mov
dec
out
lods
mov
push
jmp
xchg
out
and
mov
jbe
lods
xchg
sbb
shl
je
jmp
out
(bad)
push
neg
fcomp
cmp
dec
jle
cmps
xor
enter
stos
lahf
sub
mov
aam
aam
pop
inc
mov
sub
std
xchg
push
fwait
sti
scas
add
ret
arpl
sub
ins
out
ret
add
imul
pop
pushf
xchg
ret
mov
mov
cdq
out
xor
aas
test
pop
hlt
pop
inc
frstor
xchg
cmps
cmp
jae
in
(bad)
jns
cli
sub
pop
frstor
bound
pop
shl
and
(bad)
enter
ret
jne
cmp
addr16
in
fidiv
cli
cmp
cmp
mov
(bad)
test
push
lock
bound
push
rcr
push
daa
shl
inc
xchg
mov
das
aaa
pop
mov
inc
stos
mov
xor
add
addr16
push
dec
lods
cmp
jge
cmps
daa
in
cdq
test
mov
cwde
fldcw
inc
mov
lds
test
aad
int3
aaa
fcom
jge
out
pop
push
data16
or
repz
movs
pop
sar
shl
sub
leave
or
xchg
dec
(bad)
stc
lods
xor
cs
dec
sub
ja
lock
xor
jbe
xlat
cwde
retf
mov
stc
sub
or
sbb
jmp
push
std
inc
loopne
xor
mov
xchg
sar
mov
adc
push
cdq
pusha
mov
or
add
sub
ret
xchg
fwait
mov
jle
mov
mov
push
jecxz
xor
fwait
icebp
rol
arpl
rcl
push
sti
neg
dec
sub
call
retf
aaa
add
pop
stc
add
mov
pusha
pop
stos
aad
(bad)
into
aam
int3
fcmovnb
je
les
mov
into
cmp
fwait
mov
sbb
outs
jno
mov
jne
mov
lods
sbb
popa
xchg
test
into
sub
loop
in
inc
push
loope
cmp
dec
sbb
cli
xchg
or
test
js
push
repnz
in
into
mov
repnz
jle
xchg
push
inc
pop
ja
mov
and
push
out
ja
loope
pop
aas
test
(bad)
mov
push
mul
movs
loope
fnsave
jle
ins
and
mov
and
mov
mov
std
pop
test
outs
cmp
sub
pop
push
push
retf
mov
mov
push
shr
call
test
cmp
fst
call
mov
imul
pop
out
js
loopne
add
(bad)
fisttp
add
lock
inc
sbb
xor
adc
gs
pushf
(bad)
cmp
dec
inc
xor
clc
es
out
imul
cmp
and
jge
inc
xor
not
push
aas
xor
mov
mov
or
jmp
loope
pop
sahf
xor
(bad)
and
or
mov
test
rsm
xchg
call
dec
xchg
cwde
push
xchg
ret
scas
imul
fs
call
or
dec
lock
in
mov
xor
enter
jle
sub
fwait
push
add
cmp
inc
or
and
imul
mov
and
push
aad
sub
sbb
outs
pop
pop
xchg
test
sub
push
jg
xchg
and
and
jecxz
aad
push
cmp
xchg
inc
cmp
fdivr
pop
fwait
shr
push
scas
mov
push
adc
pop
jle
adc
pop
(bad)
imul
add
bound
xor
jle
in
jbe
retf
xchg
push
js
mov
xor
fcomp
ja
mov
lods
mov
adc
sub
cmc
or
push
scas
lock
les
dec
add
mov
mov
das
(bad)
jo
es
ja
clc
jnp
cmc
xor
movs
ins
scas
sub
je
mov
jg
in
repz
lods
stos
iret
push
fidiv
lods
mov
add
lock
mov
push
cmp
xchg
or
clc
ret
cmps
in
gs
(bad)
push
adc
cmps
retf
add
push
paddusb
push
out
jo
jnp
ja
pop
jbe
into
dec
pop
inc
adc
in
sub
pop
ror
mov
pop
rcr
push
inc
sbb
and
imul
out
sub
in
aam
repnz
push
jae
dec
pop
xor
(bad)
jp
push
add
inc
fs
xchg
fsub
mov
and
jmp
pushf
add
sbb
sbb
mov
jle
inc
add
pusha
sbb
cli
jmp
cmps
add
sti
inc
cmps
fnsave
sahf
push
fidiv
jp
push
mov
repnz
jo
dec
dec
cdq
ds
loopne
test
loope
push
cmp
mov
(bad)
loopne
push
loop
clc
mov
in
test
mov
jae
jmp
or
and
movs
xor
lods
sti
xchg
outs
popa
adc
xor
loop
(bad)
adc
or
int3
es
pop
add
aas
and
in
popf
cmp
sub
out
aam
mov
stc
pop
sbb
cmps
test
mov
xchg
push
dec
stos
jg
and
push
mov
into
cs
outs
mov
ja
imul
mov
jg
push
fidiv
cli
rcr
adc
xchg
retf
pop
mov
inc
lods
mov
pushf
ss
ss
xchg
jns
jp
push
push
or
in
xchg
push
add
jnp
xchg
or
aas
retf
mov
clc
sahf
and
xchg
ret
mov
cmp
pop
lods
sbb
push
fnstcw
fnsave
aaa
sub
stos
jae
sub
imul
pop
ds
sti
dec
pop
pop
xor
sbb
jp
mov
mov
mov
dec
rcl
push
in
mov
mov
je
rol
xor
adc
dec
mov
pop
push
outs
imul
movs
stc
ins
dec
enter
ja
test
es
inc
push
pop
dec
hlt
and
arpl
aaa
jge
mov
lahf
dec
ficom
out
adc
in
call
(bad)
mov
and
add
xchg
dec
mov
imul
cmps
stos
adc
mov
inc
xchg
sub
stos
or
lds
jmp
scas
adc
jle
add
sub
pop
das
ja
(bad)
jl
mov
mov
fisub
cmc
(bad)
or
data16
push
mov
popa
push
and
dec
xchg
(bad)
xor
cmp
mov
jg
ret
retf
jae
inc
pop
aad
jge
cmp
nop
daa
jmp
daa
dec
dec
sub
xchg
cmc
mov
dec
stc
jge
and
cmp
ret
cs
mov
and
mov
frstpm(287
cdq
loopne
fstp
stos
out
in
cmps
je
push
adc
dec
sub
or
in
and
std
xchg
scas
xchg
xchg
xor
jmp
push
out
mov
pop
sbb
call
mov
pop
sar
std
or
fcomp
push
push
jmp
ja
sbb
ja
pop
xchg
lds
pop
ret
sub
sbb
fldenv
shl
cdq
push
fsubr
gs
pop
push
sbb
bound
test
std
daa
mov
das
add
gs
cmp
cwde
inc
les
mov
pop
fidiv
aam
retf
bound
dec
imul
pusha
(bad)
les
xchg
cmps
fwait
xchg
push
mov
ds
popf
cmp
cmp
sbb
pop
mov
sete
xchg
sub
jns
lock
repnz
mov
or
or
jbe
jae
test
mov
imul
leave
sar
mov
cmp
(bad)
xchg
jg
jl
sub
mov
mov
adc
outs
pop
loope
inc
dec
not
stos
pop
into
dec
ja
ss
(bad)
pop
sbb
xchg
sub
call
(bad)
sahf
cld
std
shr
(bad)
ss
or
mov
or
scas
jo
or
mov
push
aad
mov
or
sbb
sub
jnp
sub
movs
cli
fidiv
imul
test
adc
sbb
pop
cmp
xor
and
push
xchg
push
shr
leave
outs
sub
pop
inc
mov
ret
dec
sub
scas
jae
cmps
mov
and
fild
das
or
jmp
jmp
fnsave
ret
mov
push
retf
push
pop
push
leave
pop
jnp
inc
dec
lods
ss
dec
inc
mov
jbe
and
ins
add
dec
mov
loopne
mov
icebp
xor
jmp
cmp
push
aam
loope
(bad)
imul
popa
add
mov
popa
dec
xor
sub
xchg
mov
or
test
std
call
ror
es
jge
jne
movs
bound
push
call
sbb
mov
sbb
sbb
pop
mov
sub
jo
dec
add
(bad)
push
xor
out
jl
pop
push
dec
mov
or
cli
or
outs
and
jae
or
lahf
mov
fdiv
mov
or
pop
sub
pop
pop
mov
fnstcw
jne
stos
xor
cmp
mov
pusha
sub
ins
pushw
add
mov
mul
repnz
inc
(bad)
stos
rcr
cmp
mov
sub
and
(bad)
(bad)
dec
xchg
push
add
in
pusha
mov
addr16
sbb
mov
shl
test
fs
addr16
push
das
repnz
or
sbb
add
jmp
mov
xor
(bad)
pop
pop
push
(bad)
adc
sub
daa
movs
into
repnz
mov
mov
xchg
retf
and
cmps
xor
mov
cwde
xor
js
jb
and
out
mov
mov
mov
pop
push
dec
xor
or
aad
(bad)
pop
push
mov
or
test
loop
xchg
push
cwde
add
into
int3
pop
lods
enter
cmp
neg
addr16
cmp
xchg
jle
cmp
mov
and
xchg
cdq
cdq
dec
mov
bound
sub
lods
sub
hlt
jae
mov
mov
lods
fiadd
ror
inc
mov
imul
pop
movs
call
lock
aaa
mov
ins
out
clc
nop
cmp
ret
add
add
mov
lea
aad
xchg
out
(bad)
ret
(bad)
jmp
sbb
dec
sbb
adc
add
loope
push
rcl
adc
jge
imul
mov
jb
scas
mov
mov
mov
ror
adc
push
inc
ja
and
or
adc
sub
shl
scas
inc
sbb
pushf
cmp
mov
clc
lock
repz
inc
es
aas
icebp
lahf
dec
jle
dec
(bad)
fmul
pop
idiv
fidivr
cmp
sub
mov
call
adc
ror
lock
imul
push
test
scas
cmp
pop
mov
ds
jl
mov
das
lods
mov
(bad)
sti
lock
jle
push
push
mov
mov
ret
jno
and
stos
jge
xor
mov
push
in
(bad)
push
call
popa
jp
pop
jmp
ins
sub
fisub
dec
or
jo
in
int3
jmp
dec
stos
fwait
add
dec
jp
dec
dec
pop
mov
sub
adc
div
in
sbb
js
sbb
add
or
leave
cmps
(bad)
shr
ja
sbb
jp
test
mov
je
mov
int
jmp
test
inc
int3
mov
out
das
test
scas
dec
mov
jns
(bad)
ds
sbb
adc
inc
mov
inc
loope
fld
dec
fbstp
arpl
dec
jb
fild
pop
(bad)
inc
xchg
sbb
cmp
retf
mov
imul
and
mov
inc
out
call
retf
imul
das
sub
jge
in
inc
jg
jmp
pop
out
sbb
lds
outs
pushf
or
loope
cmp
out
fldenv
jg
lods
loopne
jo
loope
popf
or
push
jmp
std
mov
fisubr
sbb
or
xchg
mov
mov
xor
push
in
add
sbb
adc
jecxz
inc
or
fcom
xor
sbb
test
call
retf
push
aas
sub
xor
push
std
cmp
sbb
and
add
add
inc
arpl
stc
push
fidivr
sbb
es
jmp
fiadd
ds
push
or
mov
fst
aam
or
fdiv
sub
test
call
add
dec
aam
sub
cmp
ins
pop
xchg
out
mov
lock
ins
fcomp
mov
popf
addr16
sub
cdq
xor
or
pop
jmp
push
cmc
inc
dec
jmp
or
(bad)
sub
rcl
es
fsub
xchg
mov
cld
inc
pop
xor
in
mov
jmp
xchg
fbld
addr16
and
jmp
mov
mov
iret
cmc
sbb
pop
ficomp
imul
inc
outs
push
gs
dec
cmc
arpl
shl
addr16
stc
add
mov
xchg
test
imul
test
dec
lock
outs
pop
ins
lods
(bad)
aas
mov
or
sub
pop
xchg
arpl
add
pop
cmps
pop
in
stos
mov
jne
fdiv
jg
ins
pop
jg
call
pop
inc
fwait
test
jns
mov
mov
add
std
arpl
ret
and
adc
mov
ins
mov
mov
ins
js
mov
ret
es
and
test
cmp
and
inc
mov
sahf
ret
cwde
inc
fucomp
xchg
mov
or
sub
push
mov
pop
mov
pushf
(bad)
dec
push
imul
jae
clc
sbb
or
sub
pop
push
pop
adc
fmul
mov
adc
jnp
mov
push
fs
mov
fadd
jno
or
inc
or
int3
mov
fs
test
mov
push
or
sub
mov
mov
int
dec
push
jno
out
jo
inc
sbb
and
sub
pop
loop
adc
mov
xchg
mov
retf
pushf
loopne
sbb
into
push
jmp
pop
outs
jno
and
mov
mov
dec
xchg
ds
xchg
mov
daa
or
outs
out
loopne
sub
mov
adc
push
ja
inc
(bad)
xor
ja
(bad)
and
pushf
sub
mov
iret
repnz
inc
aaa
add
mov
add
outs
shl
mov
jne
pop
mov
mov
fnstenv
pop
dec
sbb
fsubr
sub
push
cdq
ds
mov
pushf
mov
jno
xchg
mov
(bad)
dec
(bad)
xchg
outs
inc
fiadd
fcomp
push
mov
inc
mov
aad
push
adc
xchg
push
call
sbb
gs
pop
lods
in
outs
sub
mov
loope
loopne
and
jmp
call
inc
loope
fwait
push
cmps
inc
and
vaddss
add
cmps
xchg
jmp
pop
push
sub
cdq
repz
and
push
mov
mov
pop
ds
loope
pop
nop
test
out
test
xor
pop
cmps
loop
pop
fldenv
(bad)
sbb
shl
xchg
ins
add
mov
pop
gs
dec
call
fwait
add
lods
(bad)
shl
out
out
sub
adc
mov
(bad)
leave
jb
cmc
push
ja
aam
xchg
mov
hlt
not
push
xchg
jge
mov
cmps
sbb
inc
sahf
sub
xchg
sub
cmp
addr16
mov
xor
jle
leave
mov
and
xchg
mov
ds
int3
pop
popf
ret
jge
push
lock
inc
jle
jae
pop
and
cmc
dec
pushf
mov
jl
pushf
adc
dec
push
sbb
arpl
pop
in
fwait
jmp
pop
mov
add
mov
bound
sub
jo
push
bound
or
les
adc
mov
imul
ins
dec
fld
adc
sub
fdivr
mov
leave
repz
arpl
icebp
(bad)
push
cld
jp
cs
mov
and
sbb
sahf
fistp
xor
dec
xchg
arpl
arpl
lea
adc
jg
outs
push
sbb
loope
xchg
adc
mov
jl
jnp
mov
and
xchg
repz
adc
out
ret
clc
inc
(bad)
cmps
imul
push
arpl
jae
int
xchg
jmp
xor
inc
push
das
and
xchg
cmps
and
pop
mov
ds
adc
mov
pop
ins
fnstcw
(bad)
fwait
cmovnp
in
mov
jle
and
out
rcl
jnp
std
mov
popf
mov
xor
mov
int3
push
pop
fcmovnb
fxch
pop
stos
out
inc
pop
out
jnp
and
inc
push
bound
jle
pop
mov
fdivr
cld
jmp
push
dec
add
mov
and
test
cmps
xchg
xor
movs
out
add
ja
movs
cmp
repz
mov
ror
jns
adc
mov
pop
or
das
in
push
enter
pop
inc
sub
call
fld
or
xchg
ss
xchg
cld
rcr
xchg
and
pop
ins
data16
mov
xor
ss
imul
std
jnp
arpl
add
lock
cli
ins
(bad)
in
pop
and
inc
push
shl
leave
(bad)
and
imul
outs
xor
jns
jmp
cmp
xor
xchg
out
pop
scas
mov
stos
fist
cmp
push
fs
in
pop
fstp
repz
(bad)
repz
xchg
sbb
adc
xlat
fiadd
dec
shr
pop
pop
push
mov
mov
icebp
pop
in
pop
das
popa
jmp
and
add
xchg
lds
repz
inc
in
adc
movs
jo
(bad)
mov
mov
stos
xor
adc
test
(bad)
movs
push
inc
sbb
test
sti
jle
fld
inc
mov
call
mov
or
or
jecxz
jbe
inc
sahf
dec
push
xor
inc
xor
imul
push
int3
adc
sub
lods
fmul
test
cwde
inc
or
pop
iret
lods
mov
push
ja
in
push
inc
(bad)
jle
cmp
clc
scas
rol
dec
out
dec
loopne
data16
or
mov
push
(bad)
pop
or
nop
sub
(bad)
in
adc
jmp
es
das
xchg
popa
popf
aam
mov
and
jmp
je
cmp
push
inc
or
sub
xchg
in
fchs
fwait
xlat
mov
lock
adc
and
imul
outs
add
imul
jae
xchg
or
out
imul
push
pop
arpl
cdq
adc
dec
push
out
inc
sbb
mov
mov
popa
sbb
and
fwait
mov
sub
popw
mov
stos
rcl
push
jl
jmp
dec
xchg
std
pop
lea
jns
add
xor
adc
outs
pop
mov
std
shl
mov
mov
sbb
mov
ins
ds
jge
shr
sbb
pop
aaa
adc
imul
nop
xchg
fnstsw
mov
cmps
cs
cmp
mov
ret
add
data16
scas
mov
cmp
popf
pop
jle
scas
and
lea
aam
pop
retf
sbb
lea
test
jmp
bound
sub
sub
mov
cli
inc
imul
sub
loopne
dec
inc
cmp
cs
sub
jnp
cmp
test
adc
mov
enter
xchg
mov
sbb
ins
js
nop
js
je
popa
fistp
sub
fdivr
rcr
sub
movs
clc
dec
jbe
pop
popf
int3
mov
mov
cwde
adc
or
enter
and
or
(bad)
in
sti
rcr
es
inc
inc
xchg
inc
xor
fcmovbe
add
mov
dec
sbb
daa
sbb
test
push
(bad)
sbb
adc
mov
movs
adc
dec
inc
int
(bad)
cmp
loopne
mov
push
or
test
imul
sub
movs
lds
cmps
jmp
inc
stc
sbb
test
or
xor
jl
lods
cmps
cdq
sahf
jl
into
int
pop
jg
mov
sub
mov
dec
jmp
inc
es
in
ss
jecxz
inc
lahf
rcr
pop
scas
mov
call
or
push
push
cmc
loop
lea
xlat
jae
sbb
movs
imul
fs
ds
enter
cmps
ret
mov
test
imul
ffreep
jnp
lea
cmp
stos
jno
stc
pop
out
popa
xchg
mov
cmps
jnp
jnp
neg
cwde
sti
xchg
inc
and
(bad)
mov
imul
adc
xor
popf
push
pushf
pushf
jmp
cld
mov
mov
dec
int3
xchg
adc
arpl
sbb
fwait
mov
add
xor
gs
loopne
popa
add
or
pop
xor
mov
in
(bad)
mov
popa
mov
jbe
retf
mov
jecxz
stos
scas
mov
out
xchg
icebp
adc
and
xchg
add
push
mov
fs
daa
dec
add
add
fs
(bad)
xlat
xor
mov
aam
mov
mov
pop
xor
push
in
mov
xchg
stos
cmp
popa
mov
lahf
inc
fstp
xor
jne
lods
xor
popf
dec
imul
sbb
daa
(bad)
test
retf
jge
aaa
icebp
inc
retf
mov
jmp
pusha
mov
pusha
fist
je
gs
jp
mov
lods
and
cmp
xchg
scas
sub
out
jle
and
shl
out
cli
pop
addr16
call
movntpd
adc
shr
fst
mov
sbb
mov
mov
and
(bad)
push
cdq
or
inc
mov
(bad)
push
push
cmp
ins
std
xchg
mov
(bad)
fwait
(bad)
es
in
and
in
pop
or
enter
mov
scas
cmp
add
sti
je
neg
mov
sahf
test
push
hlt
adc
jecxz
mov
mov
daa
bound
rol
cmc
xchg
mov
(bad)
data16
pop
cdq
push
popf
sbb
mov
pushf
or
stc
mov
in
sbb
mov
jecxz
mov
scas
pop
push
mov
rcl
scas
mov
dec
test
mov
push
ret
inc
test
pushf
mov
and
je
adc
mov
(bad)
out
call
sub
dec
cmp
jae
test
in
mov
pushf
fisub
int3
xor
enter
jmp
xchg
pop
xlat
out
inc
sub
push
test
rol
inc
sbb
loop
mov
add
fnstsw
pop
xor
sar
cmp
sbb
neg
dec
(bad)
lock
pop
arpl
or
(bad)
div
out
mov
mov
sub
sar
push
xor
rol
setae
cmp
movs
pop
xchg
idiv
pop
mov
inc
lea
test
fst
rol
sbb
push
mov
mov
clc
(bad)
lods
or
add
inc
test
in
inc
icebp
xor
mov
cli
add
pop
pop
push
ins
fs
xor
out
or
mov
add
fnstsw
mov
xlat
in
and
jnp
xchg
xlat
cmp
popf
xor
pop
nop
mov
inc
dec
ret
stos
aaa
iret
cmp
and
push
inc
pop
add
rcr
mov
addr16
xor
cmp
in
test
inc
call
pop
std
dec
lock
mov
sbb
aam
pop
and
in
in
pop
loop
mov
iret
loopne
shr
lea
out
lea
sbb
inc
fld
outs
test
sbb
hlt
call
cmps
push
mov
pop
push
shl
je
imul
inc
push
xchg
jbe
inc
mov
stos
adc
lods
(bad)
mov
pop
fmulp
aam
sbb
sbb
jb
movs
xor
idiv
test
sub
movs
in
jnp
inc
out
push
cmp
pop
hlt
sbb
xor
or
std
sub
into
xchg
retf
add
imul
int
adc
fs
scas
push
aas
dec
or
data16
mov
or
jae
push
add
xor
jmp
cld
mov
xchg
xchg
mov
jmp
neg
cmp
fidiv
jne
add
xchg
push
fidiv
int
sub
sub
cmp
mov
sub
mov
popa
jle
push
dec
in
dec
lods
dec
jbe
test
dec
out
jmp
add
leave
pop
je
adc
call
adc
cmp
xlat
lods
setno
sar
nop
or
mov
std
add
push
aad
ja
push
jb
out
mov
jle
out
ret
std
addr16
and
out
pop
dec
xchg
mov
cld
(bad)
push
mov
data16
lods
sahf
data16
test
cli
push
test
add
fsubr
test
in
jns
adc
cmc
hlt
xchg
imul
ja
xor
pusha
aas
sar
or
jle
into
sbb
out
sub
xor
addr16
mov
test
mov
inc
lds
pop
and
dec
lock
inc
sbb
lods
mov
and
mov
les
jb
dec
lods
pop
mov
std
jg
sbb
inc
inc
in
je
mov
sti
lods
call
push
or
xor
add
mov
add
pop
imul
loop
mov
dec
cmp
dec
test
sbb
push
retf
mov
mov
mov
jg
fst
test
in
aas
jg
push
mov
outs
dec
jae
fwait
sub
nop
ret
repnz
dec
jae
popa
sub
ret
(bad)
mov
sub
not
or
xchg
lock
dec
xor
xchg
repnz
bound
aam
push
mov
fwait
and
daa
mov
push
jecxz
loope
stos
xchg
dec
pop
push
cld
or
arpl
push
and
ins
ret
test
std
xchg
mov
inc
add
pusha
or
(bad)
in
cld
(bad)
sub
mov
test
xchg
cmps
mov
in
adc
jl
inc
or
fsub
clc
mov
pop
add
inc
es
pop
outs
push
test
xlat
repz
stos
movs
iret
ins
fldenv
pop
iret
test
push
and
jno
mov
pop
pop
jne
mov
outs
fwait
lock
cmc
test
push
mov
or
ror
sti
clc
and
ins
mov
push
icebp
xor
or
mov
mov
dec
stc
xchg
rcl
mov
jnp
arpl
and
into
sbb
xchg
(bad)
icebp
inc
sbb
cmps
xor
ret
pop
retf
pop
pusha
mov
push
rol
sbb
inc
mov
adc
jp
cmp
aaa
ror
pushf
lock
cmps
push
retf
arpl
add
mov
mov
imul
repnz
pop
jge
movs
aas
cmc
xor
dec
gs
in
leave
mov
jecxz
les
ror
ins
sub
out
pop
stos
pop
dec
imul
icebp
push
pop
mov
dec
movs
pop
call
aam
in
leave
pop
call
push
adc
retf
sbb
fnstcw
pmaddwd
sbb
aad
jecxz
icebp
mov
mov
test
jnp
mov
push
iret
(bad)
jge
fwait
xor
je
inc
jmp
mov
in
scas
dec
mov
mov
ret
pop
sub
cmp
data16
sahf
add
cmp
or
dec
add
cs
mov
(bad)
mov
inc
sar
pop
inc
push
lods
lods
and
mov
push
adc
mov
(bad)
dec
adc
and
popa
jmp
test
ror
sub
(bad)
lods
movs
sbb
adc
stc
mov
(bad)
mov
inc
stc
ja
jg
jmp
jg
ror
mov
loop
shr
out
and
mov
sub
out
(bad)
push
cld
ret
shr
pop
xchg
aam
pop
jmp
sub
xlat
jecxz
rcl
mov
inc
sbb
sahf
xchg
sbb
add
or
sub
fbstp
rcl
jnp
mov
or
movs
pop
ins
sub
std
jb
test
and
xor
cmps
or
dec
cmc
std
(bad)
fadd
imul
bound
cwde
push
cmp
xor
mov
in
jo
aad
mov
fcmovnu
leave
pop
jns
jg
popa
addr16
mov
and
js
mov
std
adc
xor
loope
leave
pushf
lea
popf
mov
and
push
add
xor
test
xor
out
push
pop
xchg
and
fwait
push
inc
or
push
imul
call
jns
out
push
inc
sbb
rcl
movs
add
movs
or
js
test
jecxz
mov
ror
stc
push
fdivr
ss
popf
cs
mov
movs
es
js
sti
push
dec
stos
sahf
inc
aaa
je
cdq
jae
sub
lods
pop
retf
dec
pop
sbb
jp
cmp
retf
into
es
enter
push
or
hlt
gs
sbb
repnz
mov
mov
in
mov
adc
push
repz
shr
(bad)
(bad)
scas
pop
dec
fld
hlt
cwde
dec
jb
out
out
out
push
push
jne
ja
push
in
mov
adc
mov
lock
pushf
out
xchg
sub
dec
fistp
sub
mov
shr
jle
dec
(bad)
aam
xchg
lock
sub
call
pop
out
inc
bound
pop
sbb
or
mov
jmp
jmp
sti
dec
push
inc
mov
mov
sahf
(bad)
jmp
jge
mov
jnp
xchg
xor
into
mov
dec
leave
pop
das
xor
jge
inc
sbb
or
jmp
xchg
add
sbb
rcl
lds
cmp
int3
nop
(bad)
dec
xchg
and
dec
push
mov
into
in
cmp
mov
xchg
dec
loop
loopne
pop
adc
sbb
int3
(bad)
mov
add
nop
mov
inc
mov
push
(bad)
sbb
add
push
int3
aam
into
sbb
enter
mov
inc
mov
add
and
cdq
cdq
aam
cmp
mov
sub
cmc
fidiv
stos
hlt
inc
popa
fistp
inc
aas
mov
stc
mov
sbb
lea
dec
cld
dec
adc
sbb
pop
clc
je
fdivr
mov
not
std
aad
(bad)
es
cli
and
adc
pop
loopne
loope
sbb
xor
sub
jnp
retf
lods
mov
f2xm1
int
jb
dec
jmp
dec
in
sub
xchg
xchg
mov
dec
inc
sub
aad
push
bswap
int
mov
es
mov
jmp
retf
outs
mov
fild
ja
sbb
test
aam
jp
dec
xor
out
(bad)
js
and
repnz
es
in
stc
pushf
fwait
ret
or
sub
nop
out
call
mul
or
jae
push
or
xchg
and
(bad)
enter
sub
addr16
dec
outs
imul
scas
add
push
or
shl
ja
pusha
ins
push
das
or
push
pop
and
fsubr
jmp
aam
adc
xor
mov
loope
ret
enter
fwait
jl
jno
and
add
push
fist
mov
test
ja
sbb
iret
add
mov
xchg
scas
aas
cmp
pop
mov
push
lds
dec
stos
pop
adc
jnp
pop
stc
lds
add
jb
jg
test
fsubrp
inc
push
push
xchg
aam
ins
int
repnz
das
pop
pop
out
push
imul
mov
jp
ins
fisub
outs
sbb
sbb
ins
or
adc
dec
jp
aad
ss
js
enter
pusha
cdq
ror
gs
nop
mov
push
mov
xchg
mov
icebp
xchg
sub
xchg
out
cmp
add
mov
outs
imul
xor
jmp
xchg
ret
mov
retf
xor
adc
inc
daa
inc
mov
outs
xor
pop
sbb
test
push
push
sub
sbb
pop
clc
aas
push
add
jmp
test
loopne
fsub
sbb
push
fstp
sti
sub
dec
out
xor
js
xchg
test
cdq
jle
mov
and
mov
mov
sbb
xchg
mul
xchg
mov
sub
imul
cwde
enter
xchg
dec
sbb
enter
aam
aas
sub
sbb
dec
adc
ins
dec
aad
addr16
pop
mov
add
mov
popf
inc
stos
imul
ins
movs
neg
adc
aas
xor
inc
xor
dec
xchg
sbb
push
push
rol
inc
arpl
mov
shl
xor
jne
mov
mov
ds
fwait
xlat
repz
out
mov
fsub
bound
test
jo
fstp
(bad)
movs
push
dec
inc
sub
inc
test
loope
call
ds
sbb
inc
jbe
nop
cdq
bnd
shl
in
pop
sti
mov
jmp
fidiv
pop
xchg
add
ins
cdq
xor
xor
adc
loopne
fld
aad
or
mov
pop
or
test
xchg
sub
cmps
push
bound
sbb
adc
cli
sahf
iret
pop
cdq
jae
xchg
fdiv
push
push
xchg
nop
add
push
jbe
scas
fiadd
enter
mov
cld
or
(bad)
fidiv
sbb
sbb
mov
push
iret
lods
out
std
or
(bad)
dec
into
pop
sub
sbb
inc
inc
mov
or
pop
in
pop
in
cmps
pop
pushf
jbe
(bad)
dec
in
movs
int3
xor
xchg
mov
inc
inc
cmp
push
nop
xchg
nop
xchg
std
stos
jge
imul
pop
or
shr
ret
dec
or
cmp
pop
aaa
xchg
scas
repnz
and
push
mov
rol
out
push
push
shl
sti
adc
sub
jge
mov
cmp
and
sub
pushf
sub
retf
mov
loope
and
shr
test
daa
xor
imul
fadd
add
jecxz
idiv
mov
pop
xchg
xchg
dec
jle
fisttp
mov
daa
sbb
jne
fild
adc
cmp
sub
loopne
pop
data16
mov
pop
sbb
cmp
lds
mov
inc
mov
xchg
sbb
dec
aam
mov
ret
and
sub
dec
loopne
ret
mov
arpl
xchg
int
push
sbb
jecxz
fisub
xchg
xchg
dec
mov
addr16
in
and
xor
mov
adc
mov
pop
mov
mov
adc
sti
cmps
mov
cmp
inc
mov
jmp
and
add
xchg
aaa
jae
ret
mov
leave
jnp
imul
scas
stos
jnp
ret
xchg
sub
aam
or
mov
pop
dec
cdq
push
into
sahf
inc
addr16
xor
push
mov
sbb
sbb
dec
pop
scas
cmps
ja
mov
sbb
sub
xchg
inc
or
jg
or
xor
jbe
repz
cld
mov
dec
test
xor
shl
enter
xlat
jmp
and
mov
outs
cdq
and
rcl
(bad)
in
jp
ret
sub
shl
daa
mov
sub
inc
daa
pushf
loop
enter
ds
fistp
pop
into
mov
push
loop
dec
ins
sub
leave
cmp
and
fisttp
and
pusha
add
(bad)
les
(bad)
and
push
frstor
jae
inc
cdq
cdq
rol
fst
into
cdq
push
add
test
lock
xor
sahf
js
dec
inc
sti
inc
jb
in
jg
and
xchg
retf
pop
in
mov
imul
cmp
mov
dec
shr
in
aaa
mov
or
sub
pop
and
mov
add
lods
mov
adc
push
aad
cwde
int
mov
das
and
adc
test
repz
and
test
(bad)
in
jbe
loope
fpatan
daa
jmp
dec
pusha
ss
popa
mov
sub
out
out
sub
push
sub
fld
mov
(bad)
xchg
out
pop
push
ds
mov
das
or
(bad)
mov
stos
lds
ror
mov
fwait
sub
xor
sub
pop
xor
ja
sbb
inc
stc
mov
add
inc
push
dec
inc
mov
add
dec
int3
sbb
or
fisub
inc
jae
adc
inc
xchg
dec
sbb
mov
adc
or
dec
dec
stos
dec
xchg
iret
or
sub
mov
mov
gs
sbb
xor
and
dec
xchg
and
pop
jne
or
sbb
movs
or
xchg
mov
xchg
out
mov
pop
arpl
or
mov
popf
sbb
push
dec
add
pop
mov
push
adc
jne
or
xchg
jne
scas
sbb
or
scas
lock
mov
sub
cmp
pop
retf
mov
mov
jecxz
sub
fcomp
(bad)
jmp
repz
mov
cs
cmps
adc
cmp
dec
xor
sbb
jb
jl
pop
cmp
inc
or
xor
or
adc
cmps
fs
into
xchg
je
rol
cld
(bad)
fsubr
add
dec
and
out
pop
dec
fild
test
sbb
xor
sbb
jle
stos
outs
adc
inc
mov
xor
imul
mov
mov
test
call
cld
or
movs
stos
xlat
xor
dec
push
and
jle
repnz
inc
pop
in
mov
mov
mov
dec
cmp
pushf
add
mov
cdq
retf
pop
inc
scas
and
in
xchg
stos
mov
jnp
mov
cmc
and
sub
imul
ds
xchg
xchg
pop
adc
xchg
sbb
aaa
ds
sbb
jle
scas
add
fsubp
das
ins
cmc
fcmovnbe
jo
push
scas
clc
inc
fisub
or
dec
bnd
add
push
cmp
sub
fst
imul
push
in
push
and
fsub
dec
repnz
xor
jno
fnstsw
in
sub
ins
xor
sub
mov
push
sahf
push
mov
pop
push
xchg
sub
jae
fistp
retf
mov
jae
push
cmps
test
push
or
les
push
jae
inc
call
inc
jmp
(bad)
mov
sbb
repnz
sbb
or
clc
in
std
in
mov
cmp
popa
xor
inc
cli
test
mov
and
jp
sub
mov
or
sbb
or
imul
inc
add
xchg
lock
hlt
adc
in
jae
xor
retf
push
jmp
es
rcl
repnz
push
dec
cmc
push
xchg
dec
push
mov
pop
lahf
dec
sub
arpl
jl
fwait
cdq
mov
fbstp
mov
cwde
cwde
mov
inc
xchg
dec
fidiv
pushf
fisttp
arpl
xchg
out
arpl
mov
sbb
cmp
pusha
sti
outs
bound
(bad)
outs
hlt
addr16
cmp
retf
mov
dec
sbb
push
jo
jmp
pop
pop
lahf
inc
mov
stos
mov
imul
xlat
daa
scas
leave
cmp
fdivr
dec
sti
cld
mov
or
pop
dec
fs
inc
daa
jl
mov
or
sbb
push
mov
out
cwde
mov
lds
in
in
push
mov
sti
cmp
jecxz
fsubr
push
test
popa
xlat
lods
adc
or
fwait
or
les
mov
dec
hlt
pminsw
in
loope
mov
dec
xor
jmp
repz
xchg
(bad)
sub
inc
add
cmps
xchg
sbb
ret
fmul
mov
pop
xchg
inc
jns
cld
movs
repnz
jnp
dec
xchg
mov
adc
outs
icebp
pop
jg
pop
cmps
mov
fidivr
adc
xor
test
mov
pop
xadd
scas
cmp
es
daa
pop
jbe
in
sub
out
test
ret
lock
(bad)
mov
cld
or
jo
(bad)
in
jb
xor
inc
mov
test
in
adc
ins
pop
mov
xor
cmp
nop
popa
cld
ret
call
out
aas
fcomp
outs
retf
mov
(bad)
or
(bad)
sbb
dec
mov
int
icebp
or
push
sbb
jo
(bad)
loope
or
loopne
sbb
jle
out
add
push
jb
les
les
call
jge
adc
(bad)
mov
add
xchg
lods
cli
sahf
cmp
call
clc
cli
jns
test
mov
jecxz
addr16
je
add
adc
std
std
pop
cmp
pop
pop
pop
xchg
mov
outs
repz
pop
jmp
dec
adc
(bad)
leave
cmp
or
les
mov
jecxz
jno
cmp
push
xchg
aad
inc
push
(bad)
mov
inc
dec
or
push
stc
std
arpl
xor
add
sbb
xchg
lahf
sbb
(bad)
fdivr
jbe
rol
cld
out
nop
push
orps
in
sbb
ds
adc
cmp
pop
out
mov
or
fldcw
out
or
mov
fs
js
icebp
add
stc
sub
mov
sbb
fstp
cmps
jne
mov
std
cmp
(bad)
pop
pop
fadd
jmp
sub
inc
pop
jg
jae
into
or
not
or
int
sub
inc
sbb
mov
enter
mov
mov
scas
pop
mov
sbb
or
and
fdiv
cmc
and
dec
or
stc
inc
inc
shl
jne
aad
cmp
sbb
mov
test
test
aam
icebp
das
enter
mov
hlt
adc
or
(bad)
mov
xor
mov
pop
(bad)
outs
jle
ss
clc
inc
push
xchg
mov
movs
mov
imul
arpl
push
leave
jno
jp
add
rcr
hlt
and
and
lods
ret
lods
inc
dec
or
jb
push
mov
or
sub
jp
dec
dec
and
sub
inc
mov
push
jae
xchg
and
neg
nop
mov
cs
xchg
sub
bnd
add
mov
gs
jl
aad
xor
push
fmul
cdq
(bad)
fdivr
ja
xchg
loope
popa
cmps
scas
inc
gs
push
pop
pop
out
pop
jo
(bad)
and
jo
mov
fisubr
in
aas
repz
and
cmp
inc
data16
gs
mov
enter
(bad)
push
add
fisttp
push
ret
(bad)
jmp
sar
push
repz
jecxz
div
sub
cmp
ret
pop
push
mov
xchg
retf
cli
or
out
inc
jmp
and
je
fbld
mov
sub
imul
xchg
imul
imul
jb
sbb
mov
mov
inc
xor
loopne
pop
aad
xor
add
int3
jge
push
fnsave
retf
ret
ja
cmp
cmp
inc
lock
inc
xor
ins
add
jo
mov
or
repz
xchg
lahf
pop
idiv
lock
sbb
pop
push
fwait
iret
(bad)
or
and
pop
enter
jb
pop
popa
mov
sub
ins
push
xchg
pop
mov
inc
in
cmp
mov
arpl
mov
mov
mov
cmp
dec
and
sbb
inc
mov
mov
repnz
xchg
stos
call
pop
mov
std
imul
and
pop
cmc
adc
jge
inc
sub
test
jnp
(bad)
clc
lods
xor
arpl
loop
xor
jmp
rcr
lock
(bad)
gs
or
push
ret
push
call
enter
pusha
mov
adc
fmul
arpl
cmps
arpl
inc
bound
mov
fs
cmps
pop
outs
inc
push
or
(bad)
es
lea
ret
test
retf
xchg
push
cmp
lock
repz
cld
in
popf
sbb
lods
fmul
push
cs
not
cld
inc
sbb
inc
inc
aaa
or
inc
dec
adc
mov
xor
popf
rcl
into
lea
sub
jmp
daa
push
es
(bad)
push
mov
push
scas
jnp
push
adc
or
gs
fld
xchg
ds
jb
mov
or
cmp
loop
das
aad
and
or
in
out
mov
int
mov
cmp
add
lds
sbb
pop
out
mov
or
push
into
out
mov
enter
mov
push
fadd
adc
repz
mov
jb
rol
sbb
push
cdq
xchg
movs
jb
push
xchg
pop
jp
cs
lahf
xor
or
retf
shl
sub
pop
out
loopne
pop
scas
mov
mov
mov
or
fsubrp
iret
shl
xchg
pop
add
inc
pop
ins
or
push
inc
dec
xor
imul
jb
mov
push
pop
fist
push
xchg
(bad)
(bad)
shl
and
aad
push
mov
inc
sub
jne
mov
mov
push
and
inc
ficom
mov
pop
call
imul
mov
dec
pminub
jg
jg
out
push
pop
adc
mov
mov
push
cmc
jmp
cmc
push
adc
pop
mov
and
nop
das
lahf
xchg
pop
call
out
jg
inc
jbe
xchg
sub
add
(bad)
or
movs
icebp
mov
repz
add
mov
popa
in
(bad)
lods
icebp
pusha
loope
aam
mov
xor
(bad)
fsubr
dec
inc
and
movs
sub
or
inc
xchg
pop
sbb
call
mov
je
neg
push
or
dec
xor
xchg
push
lds
arpl
add
jmp
sar
add
push
movs
mov
inc
push
fxch
pop
rcr
ror
lock
out
out
scas
sub
pop
std
mov
iret
pop
sbb
jg
mov
mov
xchg
ja
addr16
pop
pop
inc
push
sub
mov
loopne
ret
in
or
sbb
in
inc
imul
std
jmp
pop
pop
sub
pusha
or
les
xlat
and
mov
jae
jl
sbb
push
inc
les
inc
cwde
fdiv
sub
jns
dec
in
inc
arpl
es
ret
(bad)
daa
xor
pop
je
outs
and
jp
shl
mov
mov
inc
icebp
jecxz
call
cmps
pop
cmp
out
push
mov
pop
cmc
dec
mov
jo
pusha
inc
sub
or
mov
adc
add
inc
mov
cmp
adc
push
mov
clc
ret
shl
sbb
retf
in
pop
mov
jns
(bad)
ins
fdiv
or
out
out
sbb
icebp
mov
ja
popa
stc
mov
push
inc
loope
push
(bad)
call
and
mov
dec
jns
pop
add
imul
fstp
xor
scas
cmp
call
fs
test
xchg
inc
clc
add
sub
sub
or
pop
jmp
cmp
loope
push
mov
cs
xor
push
push
mov
idiv
adc
sub
out
jl
std
or
loopne
push
leave
jne
arpl
mov
dec
nop
or
dec
sub
sub
xchg
adc
sbb
mov
fisttp
aad
cmps
mov
div
xchg
ror
mov
fs
gs
retf
add
mov
cmps
adc
mov
aas
xchg
xor
or
mov
push
xlat
sbb
mov
sbb
je
dec
push
ja
cmp
scas
jns
cmp
and
pushf
fistp
jo
test
pushf
jns
sahf
add
jbe
inc
jb
xor
mov
out
sub
dec
js
sar
xor
stos
call
dec
inc
outs
stc
add
mov
mov
and
lods
shl
outs
jbe
movs
lea
(bad)
jmp
je
fnsave
add
cli
movs
sub
aaa
sti
lea
aas
out
std
dec
mov
stos
xchg
ss
ror
sahf
sbb
adc
out
cmovno
mov
lea
test
or
adc
fisubr
cmps
jmp
aas
mov
aam
pop
jne
dec
fwait
add
or
cmp
cmp
aam
cdq
cmc
xchg
inc
lahf
adc
test
dec
pop
mul
jle
mov
(bad)
xor
addr16
daa
std
xchg
cdq
fcom
retf
outs
add
je
push
and
ret
fsubr
sar
jmp
xor
hlt
jns
call
sbb
sbb
or
aaa
jae
dec
out
jb
ror
cmp
xchg
sub
add
jle
cli
das
and
pop
cmc
mov
aam
into
jnp
pop
mov
mov
test
jle
jmp
sti
sbb
sahf
jbe
je
cmps
dec
lock
push
xchg
daa
gs
loop
dec
sbb
mov
push
add
adc
adc
mov
fiadd
dec
pop
push
fld
mov
adc
cmp
mov
pop
cmps
call
push
sbb
cmp
loop
test
sti
iret
xchg
rcl
or
imul
inc
dec
inc
in
fsub
xor
pop
sti
aad
mov
xchg
in
adc
(bad)
fmul
fimul
add
neg
or
ins
lods
jns
sbb
ds
push
lahf
mov
aad
ins
sub
test
(bad)
inc
inc
or
pop
pushf
in
xchg
int
xchg
cmc
rol
leave
int3
mov
(bad)
iret
xchg
int
mov
ror
xor
inc
sub
aaa
xor
das
jae
add
mov
inc
fst
adc
stc
sub
and
out
inc
jecxz
out
adc
xchg
lods
in
imul
jg
cmps
sbb
gs
jne
xlat
xor
mov
mov
repnz
pop
call
inc
les
fwait
xchg
dec
daa
xchg
movs
jb
mul
stos
adc
je
mov
int
fcomp
cwde
pop
clc
pop
or
leave
(bad)
(bad)
jle
mov
mov
inc
push
cs
sub
ret
mov
ins
icebp
jmp
mov
loopne
and
icebp
fcmovne
ins
xor
scas
xchg
dec
popw
cmp
jp
call
jno
pop
xlat
jl
push
cmps
repz
test
retf
xrelease
jl
or
pop
retf
sub
sti
or
sub
mov
iret
push
pop
mov
mov
inc
sbb
pop
scas
mov
push
mov
cmps
cmps
out
pop
jmp
mov
cdq
fcom
cmps
sub
dec
cmp
lods
dec
cmps
mov
imul
imul
ror
loop
pushf
sub
pop
gs
movs
ja
jle
mov
test
inc
mov
jmp
mov
xchg
adc
gs
xchg
std
dec
or
jo
inc
(bad)
jmp
or
jge
or
jmp
loop
fxch
pop
sub
idiv
sti
and
jbe
sub
push
push
ja
cmp
jb
jb
inc
(bad)
mov
sbb
mov
(bad)
fsub
cmp
loopne
inc
adc
shl
out
fstp
sbb
dec
(bad)
call
jne
pop
mov
add
xchg
es
cs
adc
push
add
jg
stos
in
mov
mov
xor
out
lods
neg
cmp
adc
adc
cmp
adc
ret
sbb
imul
test
mov
pop
je
aaa
icebp
in
(bad)
ret
cdq
fist
aas
cwde
jne
mov
mov
mov
sub
test
push
ret
pop
bound
adc
push
jg
movs
mov
xchg
shl
in
pop
in
add
xchg
push
cmp
in
mov
jmp
js
push
jnp
stos
aam
aam
call
js
or
repz
inc
test
xlat
ret
push
pop
or
push
movs
fcom
ds
xchg
fwait
in
(bad)
enter
sub
add
pop
jmp
and
shl
lods
push
mov
lea
or
and
repnz
enter
lods
adc
jae
add
lods
inc
jl
test
sub
cmps
dec
fsubp
mov
xor
(bad)
pop
inc
lock
and
or
mov
jmp
add
inc
call
movs
push
mov
or
clc
dec
in
out
retf
pushf
not
jmp
arpl
fwait
test
push
sbb
or
pop
xor
stos
out
sub
mov
js
push
gs
jl
jp
loope
xchg
xchg
inc
adc
cmp
cmp
add
call
mov
dec
sahf
mov
mov
mov
jns
jecxz
das
mov
imul
(bad)
cli
lock
mov
mov
add
push
inc
cs
cmps
push
aad
push
nop
push
les
xchg
or
rol
mov
stos
lds
loop
push
push
clc
int
xor
cwde
test
mov
mov
shl
xor
retf
mov
test
sahf
pop
inc
jo
inc
in
and
fist
(bad)
pop
loop
push
dec
sub
jb
xchg
hlt
xchg
jo
push
ror
mov
push
rol
rcr
xchg
lock
push
adc
clc
fldcw
pop
push
stos
(bad)
and
mov
jno
xor
jo
cmps
shr
popf
ret
das
lds
mov
and
out
and
push
jmp
mov
les
ss
pop
jp
retf
dec
mov
mov
dec
xchg
stos
ins
xor
xchg
push
test
sub
aad
jecxz
cld
outs
jb
(bad)
test
fcmovnb
add
test
jmp
inc
icebp
and
iret
mov
add
cmc
mov
jmp
push
jmp
jmp
popa
fnsave
mov
call
add
mov
xor
lock
out
lock
bound
cmp
es
aam
aaa
pxor
cli
mov
inc
jbe
add
(bad)
xor
mov
push
int3
mov
addr16
xor
iret
pushf
jl
sbb
mov
push
and
mov
jnp
pop
inc
dec
mul
out
jg
adc
mov
xor
out
icebp
mov
xor
dec
icebp
popa
jle
sbb
hlt
cmp
hlt
push
cmc
js
add
push
and
push
fidivr
jne
gs
cld
sbb
xlat
jnp
dec
aad
sbb
int3
cmp
inc
repnz
mov
imul
sub
push
sub
push
add
das
leave
jg
xchg
dec
(bad)
pop
sbb
mov
dec
mov
sbb
shl
dec
inc
mov
adc
(bad)
jb
imul
ficomp
or
out
pop
add
pusha
adc
retf
and
adc
rcr
push
es
inc
test
and
cmp
(bad)
es
xor
cmps
std
xchg
inc
nop
push
aas
jbe
jae
fdivr
fcom
ins
cmps
push
adc
dec
jnp
les
nop
sub
mov
stos
(bad)
and
in
loope
call
dec
loope
retf
leave
aaa
fcomp
movs
int
jno
pop
jo
cdq
das
ret
out
imul
retf
cmp
push
adc
lds
inc
add
(bad)
jge
mov
jmp
sub
in
iret
inc
xchg
bound
jb
scas
adc
nop
dec
sub
sbb
sub
(bad)
mov
pop
jb
mov
test
cld
pop
call
rol
icebp
sti
or
cmp
enter
inc
scas
jnp
pop
int
js
loope
jl
xchg
outs
shl
inc
fist
aad
mov
add
inc
(bad)
pop
add
adc
imul
aas
imul
rcr
mov
push
pop
cmps
fxch
popa
pusha
xchg
imul
fcom
mov
mov
test
int3
mov
movs
add
sub
loop
push
or
and
rcl
in
stos
test
clc
iret
push
int3
pop
cli
cmp
repz
cmp
int
pop
pop
(bad)
lock
mov
jge
cwde
push
leave
mov
mov
mov
movs
(bad)
push
(bad)
jg
push
push
jl
int
cmp
aad
fucomip
enter
add
test
mov
dec
shl
and
addr16
fwait
inc
and
inc
scas
(bad)
out
jnp
mov
sbb
iret
ins
push
mov
imul
xor
scas
retf
aam
pop
imul
call
cmp
aad
test
ins
jge
mov
rol
jge
add
outs
retf
pop
mov
test
pop
addr16
je
fsubr
loope
test
call
and
or
xchg
cmp
sbb
and
imul
out
setae
adc
pop
push
fwait
sbb
adc
inc
arpl
add
cmp
or
sbb
movs
push
aam
sub
sbb
cs
push
pop
push
and
pop
fbstp
movs
fs
mov
mov
jl
fwait
imul
pop
sub
bound
adc
jge
movd
(bad)
mov
cld
jno
pop
adc
popf
push
stos
cmp
jo
shr
out
movs
fidivr
repz
imul
adc
in
nop
inc
push
loop
push
sti
xor
shl
mov
sub
xchg
mov
lahf
and
cmp
imul
push
sbb
in
mov
pop
retf
mov
shl
push
std
xor
(bad)
outs
jb
jmp
inc
xchg
out
rcr
mov
fwait
inc
rol
lds
in
xchg
dec
nop
jge
pop
fs
or
scas
jle
jp
dec
outs
jb
adc
(bad)
imul
jecxz
push
outs
lahf
pop
pop
es
in
adc
xor
and
cmp
adc
xchg
push
cdq
mov
or
lods
and
push
push
icebp
pop
(bad)
sbb
add
push
dec
mov
or
push
int3
pop
dec
clc
adc
cmp
div
xor
and
sbb
inc
repz
sbb
add
call
pop
inc
lods
and
jno
mov
add
inc
outs
sar
jno
xchg
mov
pinsrw
out
or
mov
movs
mov
imul
cld
repz
ret
xchg
fwait
jp
mov
sahf
loopne
mov
jmp
push
inc
out
aaa
movs
rcr
jno
aam
lea
dec
inc
cs
fnstsw
dec
inc
dec
test
test
push
add
daa
and
mov
or
push
stos
mov
xadd
es
adc
or
mov
ja
stos
jmp
jae
ins
ror
sbb
aaa
fcmove
jnp
cli
cli
daa
adc
adc
jp
ja
mov
inc
mov
test
jl
lea
jecxz
retf
jae
sbb
gs
mov
lea
rcr
std
pop
pop
sahf
loope
or
dec
inc
shl
mov
push
div
or
and
xchg
jmp
sub
inc
jne
add
pop
mov
mov
xchg
(bad)
(bad)
ret
inc
int
popa
and
aad
mov
fisub
sti
mov
xchg
cmp
out
pop
pop
fiadd
movs
adc
call
add
xchg
sbb
pop
rcl
(bad)
in
jmp
lock
inc
mov
mov
inc
sub
jo
jg
leave
mov
mov
imul
push
cmp
xor
inc
int3
out
lar
shl
lods
xor
pushf
out
lea
dec
cld
jmp
fild
add
pop
aaa
test
scas
and
and
add
enter
jae
mov
sub
fnstsw
jno
dec
sub
xor
div
jbe
lahf
push
dec
(bad)
cli
cmpps
outs
jmp
cdq
jl
int3
into
xchg
adc
scas
clc
add
xor
cli
enter
or
not
icebp
rcr
mov
mov
into
jp
lahf
pop
int
and
popa
enter
push
mov
fcom
les
mov
bound
(bad)
test
cs
inc
fdiv
dec
dec
mov
(bad)
lods
jmp
(bad)
jae
sbb
pop
mov
jg
mov
cmp
mov
out
pop
adc
les
jmp
mov
mov
popa
pop
dec
stc
mov
das
(bad)
jecxz
xchg
add
imul
adc
les
scas
xor
adc
mov
sub
repz
xor
pusha
imul
dec
cmp
inc
jo
mov
out
(bad)
movs
pop
mov
fiadd
xchg
add
push
adc
icebp
das
pushf
dec
mov
xchg
pop
or
fld
scas
push
js
sub
inc
sub
pop
inc
jp
cmps
cmp
pop
inc
mov
movs
lds
(bad)
mov
fsub
xchg
cmps
outs
mov
dec
jb
sbb
mov
sbb
into
or
clc
in
xchg
loope
or
ins
aad
xlat
fld
int3
pop
xchg
cmp
out
or
(bad)
mov
lods
ins
sub
dec
push
inc
sub
sbb
mov
shl
jmp
jl
push
xor
xor
cmp
dec
pushf
inc
aaa
and
mov
adc
dec
mov
xchg
mov
mov
jno
int
jge
sahf
jp
fild
xchg
in
call
adc
cmp
lods
push
jne
xchg
and
mov
repnz
test
cmp
icebp
shl
add
mov
in
jnp
push
mov
pop
dec
stc
xchg
das
cmp
js
enter
inc
(bad)
mov
inc
ficom
push
ficom
jmp
in
cmc
sbb
jae
addr16
(bad)
mov
addr16
ins
add
dec
add
adc
(bad)
sbb
pop
mov
inc
jle
mov
mov
cld
leave
cs
loopne
xchg
adc
or
dec
fild
xor
xor
cmps
clc
and
jmp
jne
mov
and
int3
pop
popa
fisttp
and
enter
mov
fidivr
daa
ins
fwait
imul
mov
inc
outs
(bad)
adc
mov
adc
mov
mov
stos
retf
push
stos
jmp
loopne
arpl
outs
pop
and
jns
stc
sub
shl
imul
leave
mov
ss
stc
inc
dec
pop
lods
daa
mov
add
test
jg
loope
push
inc
rcl
dec
xor
(bad)
out
and
mov
lea
mov
pop
mov
fnstcw
into
js
sbb
add
addr16
imul
aam
test
inc
ficom
wrmsr
mov
out
shl
pop
div
imul
(bad)
cld
lods
adc
inc
sbb
nop
test
xor
cdq
outs
sbb
mov
jg
jecxz
push
dec
loope
and
dec
das
out
add
adc
mov
or
nop
push
outs
and
cmps
push
aaa
xchg
fistp
xchg
sbb
dec
outs
xor
or
fistp
(bad)
xchg
mov
push
xlat
fisub
test
dec
and
fst
mov
push
pop
mov
mov
and
inc
jle
cmp
jne
adc
lahf
shr
jecxz
adc
push
mov
mov
add
imul
xchg
lods
sbb
mov
push
pop
inc
sbb
ret
arpl
sub
pop
and
stc
popf
adc
stos
(bad)
pop
xor
mov
mov
sbb
mov
inc
cmp
stos
test
call
push
arpl
stos
add
mov
(bad)
push
(bad)
lahf
in
xor
shl
cdq
or
and
pop
cmp
lock
call
hlt
ds
sbb
outs
cmc
mov
jo
and
test
out
shr
jo
sbb
std
and
scas
sbb
xchg
outs
inc
cdq
sub
bound
call
inc
out
(bad)
push
pop
out
inc
jnp
loope
add
cdq
or
mov
add
nop
xchg
out
jne
push
in
sbb
or
or
loope
dec
test
and
xor
fnstsw
pop
into
push
add
je
frstor
adc
dec
or
cmp
push
or
adc
or
add
mov
cmp
std
push
mov
mov
push
lods
fnstsw
inc
mov
xor
aam
push
sub
add
out
mov
arpl
jbe
out
push
sbb
repnz
imul
inc
dec
or
sub
fcmovnbe
mov
mov
mov
les
pop
or
ret
mov
jmp
jne
mov
test
mov
dec
mov
(bad)
add
cld
test
movs
mov
pop
xor
mov
call
int
fdiv
(bad)
hlt
xor
jb
adc
dec
call
mov
(bad)
pop
jecxz
jmp
nop
xchg
int
mov
push
cmp
ins
mov
xchg
push
push
mov
fst
out
dec
stos
out
mov
fisttp
stc
clc
das
(bad)
mov
(bad)
sbb
jg
sub
stc
stos
dec
popa
dec
dec
repz
mov
stos
popf
or
adc
ret
push
in
fmul
push
cmp
cmp
mov
mov
test
xchg
sar
dec
stc
jmp
pop
(bad)
fwait
(bad)
pop
in
xchg
mov
in
nop
fistp
pop
sub
mov
dec
mov
in
je
cmp
nop
dec
adc
bound
mov
adc
mov
jo
das
sub
sbb
mov
sub
(bad)
inc
fist
pop
xor
xor
aas
fsubr
and
or
lods
add
pop
sub
js
js
or
and
push
popa
or
fistp
(bad)
pop
loop
mov
jnp
cmc
test
inc
cld
adc
mov
clc
cmp
xlat
jae
dec
rcr
frstor
and
int3
mov
stos
push
nop
ret
test
lds
xor
or
shl
adc
call
ret
sti
adc
loop
sbb
push
add
repz
sub
pusha
mov
cmp
hlt
mov
test
popa
xor
dec
cmp
cmc
xchg
stos
push
sbb
popf
mov
or
mov
les
out
adc
pop
push
(bad)
in
xlat
cld
inc
repnz
add
xchg
mov
cdq
pop
xchg
test
int
retf
aad
add
cmp
dec
pop
pop
call
or
les
pop
push
retf
cmp
stos
stc
mov
sti
sub
ins
ins
(bad)
mov
jnp
pop
jg
aam
xchg
and
add
mov
js
mov
iret
dec
xor
jp
jmp
jno
test
(bad)
mov
xchg
cmp
clc
pop
inc
fisubr
pop
pushf
sbb
not
jns
(bad)
call
jo
push
gs
inc
dec
xor
xchg
pop
rol
test
cmp
or
inc
push
popf
leave
in
mov
jmp
jl
movs
dec
rcr
in
in
in
shl
test
cmp
fwait
call
push
pop
push
jne
xchg
lock
icebp
mov
jmp
pop
(bad)
dec
xchg
jns
mov
mov
out
sar
(bad)
fst
xor
xchg
dec
jo
mov
cmp
or
jmp
scas
mov
retf
bound
or
call
sbb
ja
mov
cmp
xchg
lds
pop
push
int
out
cmp
inc
repnz
shl
lods
and
sub
jg
xchg
xlat
ja
sub
xor
add
mov
pushf
fdivr
add
jg
repz
cwde
pusha
lahf
inc
and
pop
mov
push
iret
ror
ins
and
jecxz
rcl
xchg
nop
lods
lods
sub
stos
bound
mov
mov
push
inc
push
sbb
push
or
mov
call
test
(bad)
jle
mov
mov
mov
ss
call
or
int
mov
mov
aas
test
adc
ja
or
and
pusha
sub
in
xchg
ficomp
out
fidivr
(bad)
adc
int3
enter
mov
aam
call
imul
mov
outs
(bad)
je
in
jbe
ds
ror
sbb
jbe
lods
int3
jo
test
ror
inc
adc
cmp
repz
mov
xchg
pop
jg
sub
fistp
dec
jne
sbb
(bad)
jg
or
adc
pushf
lea
dec
sti
jo
jge
ret
push
cs
pop
sbb
shl
test
(bad)
js
cmp
dec
jmp
inc
stc
pop
jp
cld
movs
adc
jae
into
mov
pop
pop
(bad)
inc
icebp
mov
push
cli
aaa
iret
cmp
mov
xchg
out
add
les
jl
into
js
mov
pushf
fstp
in
or
inc
stc
adc
movs
fiadd
dec
sbb
mov
add
pop
and
repz
xchg
test
sbb
stos
jo
inc
(bad)
mov
mov
out
cmps
call
or
fidiv
jp
inc
es
cmp
push
mov
in
push
cmp
jb
xor
(bad)
jg
cmp
in
fadd
(bad)
outs
pop
dec
xchg
les
pop
mov
xor
aad
mov
jns
imul
movs
or
push
in
stos
dec
and
cmp
(bad)
out
inc
fsubr
xor
adc
xchg
outs
stc
loop
not
lods
add
(bad)
loopne
std
cmp
jmp
mov
mov
leave
int
mov
jnp
mov
xchg
into
fistp
cmp
xchg
int
mov
fst
sub
push
mov
mov
add
scas
add
dec
rcr
pop
cs
pop
rcl
xchg
repnz
push
sti
leave
stc
sbb
pmulhw
jne
popa
jp
cli
(bad)
push
sahf
sub
ins
add
inc
mov
or
pop
out
xchg
out
cmp
fcom
mov
cmp
stos
fisub
pop
add
inc
xchg
neg
mov
and
xor
push
xchg
in
cdq
out
mov
pop
inc
in
sub
ja
jnp
ja
jno
dec
or
mov
mov
arpl
push
cmp
xchg
mov
movs
pop
adc
fdivr
sar
adc
stos
or
pushf
inc
add
shl
inc
out
outs
in
sahf
mov
and
cli
sti
pop
mov
pop
dec
gs
mov
and
push
out
sub
xchg
nop
jb
retf
push
mov
ret
aad
jl
cdq
ds
adc
lea
pop
mov
seto
cld
popf
push
loope
push
adc
fnstsw
movs
popf
jge
lea
cmp
in
leave
or
cmp
out
mov
xchg
test
clts
ins
in
out
pop
push
sub
dec
ja
pop
push
shr
dec
fwait
ins
sub
clc
dec
mov
pop
fsubr
outs
push
fs
jae
out
es
mov
xor
xchg
or
push
jg
add
sub
mov
ror
div
mov
mov
clc
test
push
(bad)
and
mov
repz
mov
or
(bad)
or
cmp
in
cli
sbb
icebp
add
iret
fidiv
into
xchg
xchg
fdiv
mov
mov
sub
push
and
popf
fidiv
xchg
pop
jp
lds
retf
(bad)
xchg
pop
and
or
mov
(bad)
leave
lahf
xchg
cdq
or
xor
div
lods
fist
dec
pop
xchg
inc
(bad)
test
adc
sbb
aaa
arpl
shl
js
push
jp
sbb
shr
test
fild
mov
loopne
xor
test
mov
jge
or
daa
aaa
pop
lahf
xor
mov
daa
(bad)
in
data16
adc
jle
ficom
mov
shr
bnd
test
dec
xor
mov
pop
cmp
xchg
aad
push
pop
and
push
int3
pop
ficom
iret
mov
inc
mov
leave
sbb
into
daa
xlat
sub
jmp
adc
in
push
jg
push
test
jae
sbb
test
pop
bound
sub
stos
stc
fcom
adc
ror
inc
fisubr
jnp
(bad)
shl
adc
sbb
fidiv
pushf
not
test
fstp
jae
push
jecxz
sbb
cli
inc
sub
mov
sub
movs
test
neg
add
and
push
inc
nop
iret
or
pop
icebp
mov
out
xor
aaa
sbb
aas
jbe
inc
movs
or
es
cld
out
jae
loopne
outs
cmp
ret
push
leave
push
mov
les
dec
ret
in
ja
mov
test
or
stc
movs
or
ja
xor
ror
in
sahf
imul
xchg
mov
fistp
mov
push
mov
mov
and
ret
pop
sub
ret
mov
mov
test
mov
cmp
into
pushf
jbe
cmp
inc
jg
cli
imul
outs
fisttp
dec
movs
stos
std
adc
cmp
mov
xchg
add
mov
je
pop
mov
scas
(bad)
adc
pop
xchg
fsubr
(bad)
mov
shl
clc
and
repnz
sbb
js
cmp
outs
xchg
fdivr
mov
scas
loope
adc
lods
bound
jmp
mov
pop
adc
mov
push
xchg
ss
rol
out
aad
xlat
lock
push
lods
sbb
or
cld
pop
cmp
push
and
and
sbb
ja
xlat
adc
test
jp
push
(bad)
mov
xchg
iret
je
mov
dec
aaa
aam
(bad)
jmp
or
(bad)
fst
sbb
sub
mov
xor
jmp
imul
aas
sub
mov
dec
xchg
jl
adc
or
imul
dec
and
test
int
lea
pop
cmps
loopne
xchg
jne
das
test
and
imul
jns
jmp
jmp
and
imul
inc
cmc
mov
cwde
mov
dec
adc
dec
retf
cs
pop
cli
mov
stos
inc
mov
fcomi
jle
bound
pop
mov
or
retf
stc
ficom
sbb
xor
sbb
inc
fiadd
push
pop
add
xchg
pop
dec
scas
iret
dec
imul
ror
xor
mov
jg
and
out
lock
in
push
jg
mov
cmc
movs
push
inc
mov
retf
adc
add
pop
xchg
sti
sbb
sbb
and
add
mov
jnp
int3
shr
dec
push
and
xchg
loop
cmps
inc
inc
mov
mov
and
(bad)
jae
imul
xor
mov
sbb
xchg
and
dec
pop
adc
aam
dec
in
lahf
and
test
lds
pop
in
push
(bad)
fs
jecxz
ins
xchg
fcom
out
loop
mov
movs
data16
jmp
xchg
sti
cvtps2pi
mov
data16
sahf
mov
adc
mov
out
ins
jp
lock
xchg
xchg
mov
inc
inc
mov
jbe
xchg
mov
adc
cmp
pop
mov
mov
aas
and
pop
sbb
retf
xor
in
pop
mov
div
(bad)
cmp
push
into
loop
scas
push
fild
sahf
out
movs
jle
cdq
xor
mov
push
(bad)
sti
xchg
cmp
scas
push
popa
mov
or
vcvtsd2ss
jnp
and
add
int
xor
fsubr
lds
movs
enter
xor
rol
cmp
inc
mov
out
or
lahf
pop
push
pop
outs
inc
cmps
int
and
in
popf
sub
add
inc
ret
push
jmp
push
pop
inc
stc
pop
xchg
cwde
jno
push
dec
in
cs
int3
jg
fcomp
in
or
sti
adc
out
les
call
adc
mov
mov
es
mov
cmp
mov
loope
cs
(bad)
nop
mov
leave
icebp
sar
cmc
stos
int3
push
outs
mov
js
and
inc
or
and
(bad)
sti
jne
jns
ret
jae
push
and
mov
pop
push
int
je
pop
in
repnz
shl
pop
push
aam
xchg
push
into
ss
sahf
rcr
ret
sbb
cmps
fcmovnu
aas
(bad)
cmp
dec
cmp
test
mov
or
iret
add
adc
loopne
pusha
ss
xchg
or
lea
xor
lods
call
mov
je
fwait
addr16
inc
and
sbb
sbb
pop
retf
mov
push
retf
mov
xchg
mov
mov
pop
ret
aas
aas
xor
mov
cwde
adc
(bad)
sbb
addr16
shr
pop
mov
cmp
lahf
mov
jg
frstor
dec
push
pop
mov
outs
pop
or
addr16
aas
xchg
sar
cmp
or
add
mov
ja
adc
into
pop
mov
or
sahf
pop
aas
iret
in
and
mov
int
mov
lock
jmp
shr
push
sub
push
(bad)
add
xor
hlt
jnp
test
push
imul
mov
std
inc
adc
mov
xor
mov
cwde
cmp
xlat
loopne
pop
push
jl
lds
xchg
or
stc
stos
lock
sub
xchg
sub
ins
inc
xor
ficom
inc
push
test
jmp
jb
add
jle
cli
push
mov
cdq
or
cli
call
sbb
test
and
cmc
xlat
or
xchg
xlat
xchg
adc
sbb
pop
jbe
in
mov
push
inc
aaa
call
lds
pop
and
jbe
fist
pop
movs
lahf
mov
(bad)
test
push
cmp
add
jns
pop
or
mov
or
or
pop
pop
shl
(bad)
fptan
retf
mov
cs
bound
and
inc
mov
add
add
inc
jl
retf
lea
push
xchg
loopne
jb
lahf
and
mov
dec
iret
sar
into
ja
cmp
jecxz
sbb
sub
mov
xlat
sbb
mov
push
call
shl
cmp
imul
ret
lock
dec
mov
rcr
sub
out
ins
mov
sahf
or
mov
jl
sub
adc
loope
hlt
loopne
sub
scas
loope
xor
mov
mov
add
jmp
aas
int3
fiadd
(bad)
(bad)
std
enter
imul
popf
in
movs
aaa
xchg
aaa
cmp
and
sbb
lods
jmp
sub
mov
neg
jmp
mov
movs
into
jbe
xchg
in
cli
pushf
sbb
cmc
xor
and
mov
add
leave
outs
test
push
push
jae
aas
mov
(bad)
jnp
xor
sbb
and
outs
bndldx
out
jg
dec
enter
in
sti
dec
add
sti
adc
mov
cs
xor
adc
rcr
and
dec
cmps
outs
call
push
popf
sub
sub
outs
sub
xor
(bad)
jg
mov
and
push
xor
stc
fucomip
push
out
aam
cmp
ins
inc
jle
add
push
frstpm(287
jno
jmp
mov
pop
xor
jns
fadd
movs
in
in
clc
pushf
sub
or
mov
les
pop
repnz
fnsave
cmp
dec
jo
jmp
movs
lods
iret
jl
mov
jmp
sub
int3
sub
pop
push
mov
jmp
or
rcl
mov
xor
xchg
test
pop
idiv
sbb
std
adc
xlat
fld
mov
(bad)
xor
mov
pop
lods
pusha
push
cmp
sbb
lahf
fld
jbe
mov
mov
cmps
adc
pop
adc
pop
adc
in
mov
add
mov
test
fistp
int3
imul
fsin
adc
test
mov
repnz
sub
mov
mov
gs
icebp
pop
movs
mov
fstp
jae
add
cld
add
sub
(bad)
imul
fidivr
fwait
loope
jmp
dec
hlt
xchg
cmc
cmp
div
xchg
mov
aad
sbb
and
in
call
xlat
js
aas
call
adc
cmp
mov
mov
aam
cld
nop
leave
sub
pop
jecxz
jg
and
mov
mov
add
cli
scas
push
sbb
pop
sub
call
jge
xor
pushf
adc
push
pop
and
fild
xor
std
sbb
push
jge
(bad)
icebp
iret
or
push
mov
pusha
jns
lods
or
push
pop
(bad)
(bad)
retf
pop
xor
xlat
jb
inc
mov
xchg
mov
sbb
(bad)
pop
shr
es
fisttp
pop
push
xor
scas
(bad)
push
add
or
je
dec
stos
cmp
popa
in
sub
adc
xchg
clc
lahf
xchg
pop
icebp
xchg
cmps
cmps
std
fcomp
cmp
xor
mov
std
and
sbb
mov
jno
mov
jp
push
hlt
inc
pop
int3
mov
push
mov
imul
cmp
push
push
test
int3
dec
add
mov
sbb
iret
xchg
stc
clc
sub
retf
sbb
push
imul
jne
lock
adc
sbb
sbb
ins
inc
lahf
jmp
xor
lods
into
or
inc
daa
dec
xor
popa
inc
jp
out
sti
pushf
(bad)
outs
repnz
or
mov
xor
push
cmp
test
sub
fisubr
test
adc
ror
pop
lods
mov
in
mov
imul
pop
pop
sbb
fisttp
xchg
cmp
pop
xchg
fstp
mov
jo
sub
lods
gs
and
(bad)
jb
xchg
sub
push
inc
cmp
pop
add
leave
scas
fadd
mov
xchg
shr
mov
aas
pop
bound
std
outs
add
sub
stos
mov
test
push
ss
mov
bound
sar
imul
clc
sti
test
fld
es
sub
dec
enter
mov
pop
std
in
push
inc
sub
fadd
or
or
loope
call
sbb
je
and
adc
or
mov
xor
ja
cld
cs
push
pushf
dec
hlt
sahf
addr16
lea
add
pop
fdivr
push
(bad)
fcmovnu
aas
es
xchg
stos
shr
push
pop
mov
and
movs
fidiv
rol
mov
xchg
enter
je
push
mov
sub
cmp
xadd
pushf
ins
and
fist
repnz
mov
jecxz
cmps
scas
xchg
xchg
into
in
inc
ins
pop
enter
in
adc
jmp
repnz
loope
(bad)
or
cmp
mov
sti
mov
scas
hlt
dec
test
icebp
sbb
ja
cs
push
add
mov
sbb
inc
or
mov
pop
push
sti
shl
mov
jbe
sbb
adc
pusha
mov
cli
or
xchg
add
stc
cwde
movs
pop
dec
clc
mov
iret
adc
sub
push
and
call
out
in
cmp
iret
retf
xchg
retf
or
push
xchg
mov
cld
iret
dec
sar
and
sub
in
xor
xor
add
enter
jmp
faddp
pop
aas
add
jae
jg
xchg
mov
inc
push
outs
repnz
clc
lea
jno
fdivr
mov
and
xor
inc
lahf
mov
mov
shl
in
sbb
repnz
mov
mov
aad
int
cmp
sbb
add
dec
mov
pop
or
xor
mov
rol
jo
fcom
mov
stc
pop
mov
jno
dec
and
sub
int
sbb
pusha
cmp
add
rol
test
outs
and
adc
lods
out
add
(bad)
retfw
cmps
dec
add
gs
jo
adc
jge
popa
popa
js
sub
mov
mov
rol
mov
or
movs
add
push
lods
xor
xor
call
mov
pop
(bad)
imul
jbe
sub
ret
mov
lods
adc
sbb
addr16
cmp
cmp
in
loop
mov
pop
mov
stos
movs
in
ror
dec
aaa
xor
inc
cwde
xchg
fist
(bad)
xor
mov
jb
jp
mov
xchg
jecxz
test
fwait
sbb
out
les
jno
out
mov
test
mov
jmp
pop
fcmovbe
or
clc
mov
rcr
in
jne
adc
dec
fmul
jmp
jl
iret
or
xchg
(bad)
mov
cmp
inc
test
push
imul
xor
out
jp
and
fs
adc
lea
jbe
mov
and
ja
xor
out
xchg
push
adc
sub
popa
enter
ja
push
js
imul
pop
add
jg
pop
sub
pop
rcr
mov
and
dec
push
in
sbb
jp
int3
add
loopne
(bad)
into
pop
mov
add
lahf
mov
(bad)
cmp
not
mov
nop
push
and
add
js
and
jmp
xchg
dec
test
sbb
clc
es
push
stos
cmp
mov
or
mov
mov
cdq
inc
sbb
or
add
xchg
aad
clc
test
mov
sbb
lods
dec
call
rol
mov
mov
fmul
mov
in
icebp
mov
repz
scas
icebp
pop
je
sub
pushf
push
cmp
fdivr
sbb
mov
loope
retf
les
mov
icebp
jecxz
adc
push
loopne
int3
adc
call
jecxz
lods
repnz
pop
jmp
mov
pop
and
repnz
mov
cmp
out
adc
sub
mov
inc
fld
xchg
jbe
cld
xchg
jns
aas
mov
iret
and
das
ret
retf
iret
es
sbb
and
sub
cld
push
push
adc
ins
adc
jae
inc
dec
fdivr
and
paddsb
mul
test
jbe
inc
ror
adc
rol
es
and
sbb
sbb
test
mov
(bad)
out
mov
xor
push
jne
imul
(bad)
fs
stos
or
xchg
adc
loope
sbb
mov
sbb
push
lahf
aad
inc
push
xchg
movs
out
mov
pop
outs
inc
mov
imul
xchg
repnz
cmc
sub
lea
aaa
mov
call
push
cmps
dec
out
aam
stos
aas
inc
mov
shr
and
cmp
scas
mov
jge
add
push
mov
rol
data16
push
loope
jb
mov
scas
jg
pop
(bad)
in
test
xor
mov
in
jne
dec
pop
cmp
das
enter
sbb
(bad)
pushf
movs
popf
sbb
arpl
dec
push
imul
test
and
les
mov
or
dec
out
sbb
jle
push
or
clc
mov
int
leave
je
inc
or
popa
xchg
add
adc
pop
cmp
clc
cmp
mov
add
not
imul
loope
leave
pop
xor
adc
cmp
mov
mov
cmp
jno
test
push
sub
xlat
and
and
lods
add
dec
aas
lea
push
nop
pop
daa
jmp
and
mov
mov
stos
add
dec
xor
mov
loope
inc
pop
sub
adc
jmp
or
in
mov
cmps
gs
cmp
jae
push
or
in
jl
push
add
out
sar
shr
push
xor
push
mov
mov
lea
mov
stos
mov
add
nop
inc
mov
and
cmp
push
and
pop
movs
add
push
arpl
(bad)
repnz
in
std
movs
dec
repz
nop
mov
(bad)
in
dec
inc
mov
sbb
push
jnp
test
pop
stos
call
cmp
xor
dec
clc
adc
mov
and
mov
aas
(bad)
arpl
pop
sbb
bound
add
push
add
xchg
add
pop
sbb
xchg
test
pushf
sbb
mov
xchg
push
mov
leave
jmp
dec
retf
cmp
sub
dec
fdivr
cs
dec
sbb
fild
jg
and
cmp
push
std
sti
mov
sbb
jle
mul
add
adc
jmp
lea
hlt
jmp
lahf
stc
aad
aas
and
idiv
dec
xchg
dec
shl
sti
pop
inc
std
into
xchg
pushf
cli
inc
pop
mov
out
mov
pop
mov
aad
iret
cmc
pop
into
xor
dec
push
fild
xor
mov
pop
push
push
push
cwde
xchg
imul
ins
das
rcr
dec
dec
pmaxsw
in
xor
stos
mov
adc
jecxz
outs
in
hlt
sub
mov
stos
pop
scas
inc
scas
dec
dec
call
pushf
in
in
nop
iret
jle
jno
daa
sub
and
scas
das
(bad)
shl
adc
test
mov
or
loope
(bad)
fbld
pop
dec
ins
sbb
into
ds
lock
stc
dec
jecxz
shl
jle
arpl
inc
(bad)
das
pop
jmp
fidivr
rcl
sub
lods
enter
push
inc
dec
add
add
clc
or
sbb
(bad)
mov
inc
imul
pop
dec
inc
sar
dec
rcl
lods
ficomp
fwait
dec
pop
push
cs
sbb
bound
enter
push
(bad)
out
out
push
adc
jmp
jge
fs
(bad)
shr
daa
xor
jo
(bad)
pusha
dec
ret
mov
or
add
inc
out
lea
mov
in
mov
mov
(bad)
mov
aad
inc
and
add
call
mov
lods
xchg
pop
xchg
add
mov
cmc
mul
ins
ins
xchg
ret
sbb
call
dec
or
lods
adc
jmp
dec
and
jmp
loopne
jnp
and
mov
aas
adc
sbb
mov
ret
mov
movs
mov
repnz
rol
test
fs
bound
pusha
repnz
stc
jg
popf
out
jle
jl
xchg
push
hlt
or
mov
loope
push
push
in
push
cdq
or
sub
push
ret
pop
add
adc
arpl
loopne
popf
addr16
dec
mov
and
push
fld
xor
fiadd
les
inc
cmp
cli
ret
pop
sbb
(bad)
out
sub
cmp
mov
retf
jne
push
add
repnz
lahf
sti
jge
inc
fisttp
sub
rcr
mov
out
cli
icebp
dec
nop
xor
call
in
cdq
repnz
fdivr
dec
(bad)
push
fwait
push
xchg
(bad)
mul
adc
add
add
jecxz
pusha
inc
or
retf
in
call
xchg
(bad)
test
call
in
jge
mov
dec
test
fucomip
ja
push
cmp
and
mov
fldenv
rcl
lods
sbb
adc
loop
mov
lock
aaa
sti
add
jns
sub
stc
repnz
mov
ds
call
inc
cmc
fisub
movs
or
inc
pop
stos
aaa
add
push
or
adc
ficom
test
fstp
loopne
fmul
retf
cwde
xlat
out
sub
outs
stos
add
call
ret
scas
dec
sbb
pushf
mov
xchg
sti
popf
mov
ins
sbb
dec
rcr
ss
and
arpl
aas
test
test
in
pusha
dec
and
mov
fnstsw
data16
adc
mov
out
adc
jmp
jge
dec
jb
jl
outs
cmp
add
mov
xchg
mov
(bad)
std
nop
add
cmps
sar
retf
sub
xchg
hlt
in
adc
xchg
inc
pusha
lahf
push
cli
cmc
xor
neg
call
pop
sbb
sbb
cs
xchg
cmps
add
retf
push
inc
stos
pop
popf
mov
inc
cmp
fwait
inc
ins
jecxz
iret
fdivr
fimul
jg
add
dec
popf
stc
push
test
fucomp
dec
int3
gs
xchg
pop
cmps
xor
adc
cmp
xchg
xor
test
mov
push
(bad)
dec
jns
jb
aaa
ficomp
adc
out
xor
(bad)
add
xchg
pop
pusha
dec
or
mov
test
add
dec
and
jmp
or
cmps
pusha
repnz
jmp
hlt
cmps
pop
and
xchg
fwait
dec
ins
ja
push
aad
jbe
sub
fbld
movs
jle
inc
add
inc
fnstenv
adc
jb
cmp
retf
push
sbb
xor
fwait
mov
(bad)
sub
cld
dec
mov
add
xor
out
loopne
mov
push
into
cli
cmp
je
(bad)
movs
pop
mov
mov
shl
dec
call
inc
shr
sbb
and
aas
sub
pcmpeqd
pop
jb
stos
lock
cdq
or
fstp
adc
pop
std
jle
inc
hlt
xor
mov
(bad)
jmp
push
repnz
push
or
and
pop
jno
pop
aad
test
das
pop
adc
fld1
adc
dec
inc
arpl
jne
dec
dec
pop
adc
push
aas
cmps
jbe
cmp
ror
fild
and
xchg
fist
stc
test
inc
mov
push
xchg
add
jmp
in
lahf
mov
test
jecxz
pop
mov
xor
push
push
adc
cwde
je
ss
ins
push
and
loopne
int3
iret
dec
icebp
pop
push
cs
or
(bad)
dec
mov
hlt
loopne
call
inc
lock
call
lods
add
mov
iret
cs
pop
xchg
call
(bad)
mov
std
mov
sub
aam
adc
fucomip
lea
fwait
mov
xor
sub
popa
(bad)
and
sub
cmp
jns
repnz
popa
xchg
push
inc
(bad)
repnz
dec
sbb
dec
xor
inc
push
sbb
sub
enter
clc
sub
add
inc
mov
cmps
jb
or
push
xor
stos
pop
or
push
and
cld
or
sub
std
fs
test
fdivr
test
cmp
push
jnp
pusha
clc
mov
gs
cmps
repz
jo
push
sbb
fbld
or
sahf
int3
in
js
leave
aam
sbb
test
aaa
sbb
(bad)
dec
stos
out
enter
cmp
ds
cmp
pop
xor
aaa
xchg
pop
rcl
and
inc
jg
and
sub
rcr
jmp
lea
enter
ins
cmp
sbb
ins
add
inc
adc
std
ret
xor
xor
daa
xchg
aas
dec
push
in
scas
or
push
clc
push
pop
or
shr
int3
mov
xchg
mov
xor
movs
leave
mov
pop
xlat
xchg
test
out
add
mov
imul
push
ror
mov
sub
push
pop
dec
jbe
les
jmp
cmps
mov
sbb
push
cld
jg
inc
push
jae
pop
ret
push
mov
push
ret
dec
outs
sub
adc
jmp
sbb
fs
sar
das
adc
out
cmp
mov
push
or
jecxz
push
outs
lahf
push
cmps
std
push
(bad)
fistp
jle
test
js
jmp
or
dec
fcomp
adc
and
pop
jae
jge
jl
xor
pop
stos
pop
mov
int
jne
or
retf
dec
pop
mov
cs
mov
aas
and
int
cmc
xor
inc
pop
repnz
aas
fucomp
jge
ds
sub
push
mov
imul
(bad)
xchg
add
sbb
imul
fs
mov
mov
cli
fimul
dec
push
push
jno
push
push
lods
mov
dec
xchg
mov
push
ins
not
mov
pop
xchg
pop
xor
(bad)
mov
sub
in
outs
push
ja
mov
imul
jle
pop
fstp
or
je
and
mov
pop
dec
and
dec
and
movs
jle
xchg
fld
icebp
mov
jns
clc
es
jle
movs
inc
sbb
pop
in
sub
inc
push
dec
in
inc
es
jg
call
mov
cmps
outs
fadd
outs
jbe
pop
fisub
cdq
jmp
arpl
rcr
daa
call
sub
sbb
mov
mov
or
push
and
mov
inc
or
pop
int3
les
arpl
push
mov
mov
push
push
pop
jecxz
sub
and
adc
repz
stos
movs
adc
fdiv
das
outs
or
dec
sub
dec
js
or
leave
adc
stos
cli
jo
inc
cmp
out
clc
cmp
aad
and
ret
pop
sbb
push
cld
mov
xor
or
xchg
pushf
das
mov
mov
(bad)
cmp
das
add
(bad)
bound
(bad)
mov
hlt
jmp
fdecstp
(bad)
hlt
mov
test
fwait
xor
jmp
ds
les
loopne
lahf
sub
sbb
jge
out
cmp
out
mov
push
jmp
stos
sub
inc
cmp
cmp
pusha
repz
cmp
pop
push
clc
xchg
fild
jns
ret
jl
pop
leave
xor
add
jmp
dec
test
inc
popf
inc
loop
xchg
(bad)
fiadd
xor
or
cwde
mov
pusha
dec
sub
xlat
ds
push
sbb
lods
xchg
frstor
loopne
add
loopne
mov
and
add
iret
lahf
and
pop
jp
lahf
call
inc
adc
push
fiadd
inc
jns
cmps
call
cmp
aam
push
sub
cmp
cmc
push
sbb
das
sub
out
push
into
sub
and
retw
cmc
jno
loope
add
and
ins
mov
pop
push
or
cmc
lahf
js
push
push
nop
xor
mov
das
mov
shr
mov
jns
test
pop
cli
cli
pop
xchg
cmp
xchg
xchg
push
sub
fsub
mov
arpl
xchg
push
push
push
pop
add
mov
push
xor
pop
out
mov
in
loopne
sbb
aam
mov
maskmovq
imul
xlat
mov
mov
pop
push
movs
push
cmp
test
je
pop
aad
data16
retf
inc
xlat
loop
adc
sbb
xor
out
(bad)
fst
(bad)
iret
and
cmp
out
adc
xchg
mov
scas
xchg
cmp
add
out
fcomp
daa
inc
and
in
popa
ret
mov
cmp
add
idiv
sbb
and
fcmovne
daa
add
loope
int
(bad)
push
mov
cmps
rcl
push
call
pop
les
in
stos
or
mov
and
sub
inc
xchg
fmul
jmp
xchg
cmp
mov
ret
call
arpl
pusha
jns
mov
sub
or
aaa
mov
cli
lahf
jl
clc
js
or
(bad)
cmp
mov
jnp
adc
xlat
stc
mov
jmp
sub
data16
jae
int3
daa
fdivr
sahf
xor
aam
ret
fsubr
inc
add
and
or
mov
push
cmps
mov
(bad)
jle
lock
retf
(bad)
sub
push
add
inc
mov
fbld
pop
rol
adc
dec
or
lds
sub
push
mov
les
mov
cs
mov
repz
xor
fld
inc
xchg
mov
jle
mov
sbb
sbb
dec
lods
int
push
xchg
adc
sbb
add
push
mov
sbb
jb
cmps
xchg
retf
nop
pushf
cdq
retf
scas
and
mov
leave
(bad)
and
sub
jmp
dec
repz
or
and
in
mov
(bad)
and
jne
or
inc
add
imul
adc
fisub
cmp
mov
pop
leave
out
inc
mov
mov
jecxz
jmp
and
jne
sub
data16
fcmovnbe
mov
and
xor
mov
ins
rol
ret
gs
(bad)
cmps
and
call
test
mov
push
jp
pop
movs
xchg
out
mov
fcomp
jge
jmp
int3
push
dec
and
fidivr
xor
cmps
push
jge
gs
aaa
stos
jle
jl
fs
stc
pop
loope
cmp
es
add
dec
in
sbb
cmps
xchg
call
test
adc
and
mov
movs
cmp
xor
sbb
sub
jge
mov
add
lods
test
jae
aad
inc
cwde
fiadd
jg
cmp
ret
retf
inc
xlat
and
jl
out
dec
scas
test
adc
sti
adc
jecxz
in
mov
push
xchg
movs
out
pop
in
push
cld
int3
mov
cmp
fisttp
int3
push
cmp
mov
test
sub
xchg
or
xchg
cmp
shl
hlt
shl
loopne
adc
stos
cmp
xchg
add
mov
sub
sbb
loop
pop
in
cld
and
sbb
adc
push
sti
sbb
in
jo
mov
hlt
add
adc
mov
inc
cmp
adc
mov
adc
add
xchg
(bad)
ins
ror
in
add
test
sti
les
jge
mov
pusha
icebp
ja
imul
add
pusha
fcom
das
lds
xchg
jns
mov
loope
and
mul
mov
xchg
or
lea
xchg
stos
ficomp
cmp
(bad)
idiv
sbb
js
xchg
sbb
sti
sbb
mov
jp
jbe
ret
out
inc
shr
es
or
jnp
mov
mov
retf
movs
mov
lods
adc
repnz
mov
push
cdq
call
lods
imul
aas
(bad)
inc
cmc
imul
mov
fstp
std
pop
add
add
jno
and
shl
fiadd
mov
cmp
xchg
mov
xchg
outs
and
add
repnz
add
jnp
push
mov
loop
xchg
loop
scas
jmp
pop
movs
mov
jb
je
and
int3
jae
fs
sub
aam
fsubrp
shl
add
jge
movd
test
ret
rcl
sub
es
ret
pop
fcomip
xchg
outs
xchg
rcr
clc
into
ret
shl
repnz
nop
mov
inc
sub
out
mov
mov
fld
inc
pinsrw
inc
xchg
scas
sar
push
pop
aam
js
and
add
mov
enter
stos
cmps
push
inc
loope
jmp
dec
mov
pop
mov
cmps
sub
push
imul
sbb
loope
or
fild
dec
pop
sub
imul
popa
stos
or
imul
shr
popf
dec
adc
sti
jge
inc
pop
push
dec
aaa
mov
jp
aaa
pop
imul
or
rol
lods
popf
cmp
cwde
cmp
xchg
sbb
push
data16
mov
mov
popf
call
push
xchg
scas
dec
jecxz
push
push
xor
outs
dec
sub
pop
stc
sub
jnp
xchg
xor
mov
jg
adc
neg
push
pop
rol
cmps
adc
je
adc
push
mov
cmp
mov
cdq
sahf
js
and
sar
stc
test
add
or
mov
cmc
mov
fwait
imul
mov
xor
xchg
in
jb
adc
push
loopne
fld
stos
mov
mov
add
lea
mov
ret
jmp
xor
inc
lock
adc
lods
sbb
mov
inc
aad
adc
jg
scas
in
inc
and
jae
rol
cmp
push
(bad)
mov
or
dec
add
sahf
das
dec
mov
sub
or
mov
scas
nop
push
cmp
rcl
(bad)
std
inc
adc
fsubp
pop
out
ret
imul
jle
int3
dec
mul
mov
retf
arpl
ss
xlat
push
lahf
push
mov
xchg
xchg
sahf
fucomp
dec
jae
sub
adc
outs
jmp
test
mov
adc
arpl
push
repz
sbb
icebp
mov
das
mov
in
jecxz
sbb
jo
dec
dec
dec
call
cli
jl
mov
je
pop
leave
mov
push
loope
iret
xchg
cmc
repz
cmps
cmps
jl
xchg
dec
jmp
movs
push
pop
(bad)
jne
dec
jno
pop
stc
jle
mov
retf
daa
cmp
nop
std
into
out
or
test
sti
fist
ret
sub
scas
cmps
push
dec
and
nop
stos
push
sbb
loop
cli
mov
adc
inc
enter
popf
push
inc
ins
cs
adc
pop
std
pushf
dec
mov
clc
in
sub
sbb
and
and
aad
(bad)
adc
shl
or
retf
cmp
aad
shl
stc
cmp
cdq
stos
mov
cmp
cmp
mov
test
sti
jecxz
pop
pop
mov
icebp
scas
add
push
adc
in
jle
ss
mov
repz
dec
test
cmps
call
cs
push
sbb
lods
pop
int
pop
mov
dec
cmp
xadd
or
sub
jns
cld
(bad)
cld
cmp
and
add
lods
out
and
and
scas
pop
push
mov
push
pusha
repz
(bad)
call
ficomp
cwde
call
lfs
mov
push
push
adc
je
outs
hlt
loope
add
lahf
mov
pop
push
push
enter
in
adc
lds
push
cli
sub
rcl
clc
cli
out
(bad)
call
neg
push
ins
jge
clc
int3
ror
and
fwait
jne
sbb
outs
retf
xchg
xlat
not
int
sub
ror
push
mov
addr16
pusha
scas
dec
pop
rol
sbb
(bad)
mov
cmp
pop
or
mov
and
cmp
jge
sbb
xchg
pop
mov
js
dec
sbb
lock
nop
inc
inc
sub
in
shl
mov
pop
pop
ret
sub
add
pop
sbb
jns
push
inc
movs
in
mov
sub
mov
(bad)
lods
inc
scas
out
fld
xchg
ins
aam
pop
mov
sub
(bad)
call
mov
mov
pop
(bad)
cmp
leave
mov
xchg
les
sar
mov
xchg
ror
push
loop
pop
leave
sar
or
xlat
sbb
repz
xchg
rol
dec
mov
popa
xchg
push
jns
xor
adc
xchg
cmp
push
and
cdq
clc
les
pop
push
outs
fsub
sub
iret
pushf
mov
xor
xor
fcomp
xor
mov
cmp
aaa
popa
shl
mov
sub
scas
xchg
es
inc
fcomp
sti
(bad)
fdiv
cmps
pop
cs
cmp
or
pop
mov
adc
or
sub
xor
or
mov
xchg
add
sbb
loopne
cmp
inc
mov
pop
fdiv
cli
es
adc
sub
test
jbe
jle
repz
and
rcr
jp
dec
aas
push
xor
push
or
mov
sub
push
xor
mov
inc
stos
enter
pop
mov
sbb
pusha
adc
retf
dec
sub
cmp
xchg
and
das
jge
mov
add
dec
jle
fisub
jo
test
mov
test
lock
dec
inc
test
in
jae
sbb
stos
xor
xchg
bound
leave
pop
xlat
aam
test
ss
shl
mov
je
mov
test
fidiv
adc
push
scas
cmp
retf
jmp
sub
in
ds
pop
test
in
or
ja
push
inc
fwait
in
lods
adc
imul
ficom
jns
daa
je
xchg
dec
sbb
jecxz
or
dec
jnp
ds
fcomp
rol
cmp
repnz
popf
adc
(bad)
push
jmp
dec
lock
sub
push
sub
mov
jp
inc
cmp
not
in
add
lods
jmp
hlt
nop
push
cmp
pop
out
cmp
mov
mov
mov
popf
das
cwde
pusha
mov
out
das
and
inc
mov
cmp
cmc
fiadd
sub
outs
cld
adc
push
cli
cwde
and
neg
(bad)
pop
lods
or
mov
mov
push
retf
xchg
xchg
stc
dec
pop
data16
push
test
jle
iret
fidiv
stos
or
dec
inc
sub
mov
xor
jge
dec
pop
inc
cdq
add
cld
fsubr
adc
jle
mul
push
jl
mov
ds
je
cmp
pop
mov
cmc
test
dec
and
cmps
xor
pop
xchg
iret
cmp
sbb
(bad)
fstp
(bad)
cmp
sbb
pop
shl
jg
outs
pusha
div
test
mov
dec
and
and
movs
xchg
mov
jo
or
(bad)
jb
cmp
sbb
pop
into
and
jmp
or
adc
mov
add
rcl
sbb
sub
mov
aad
xchg
push
mov
mov
xor
sub
jno
xchg
sti
and
enter
or
mov
rol
cmp
not
rcr
mov
retf
repz
je
fwait
xor
sti
sbb
mov
stos
sub
ret
ja
inc
(bad)
dec
and
jo
mov
imul
(bad)
out
in
jl
(bad)
je
not
adc
les
jo
push
cmp
test
dec
adc
gs
inc
inc
retf
in
div
xchg
enter
stos
test
sbb
mov
movs
dec
mov
push
(bad)
xchg
add
test
movs
mov
sub
loope
inc
lea
movs
retf
movs
cli
jne
leave
dec
sbb
enter
shl
lods
ror
xor
cmp
mov
mov
and
call
xor
push
retf
xor
push
lea
push
sub
and
in
and
in
retw
xor
rcl
mov
dec
or
xor
leave
clc
pop
xchg
cmp
cmps
push
loopne
or
mov
pop
ds
adc
jne
cmps
dec
ja
popf
ret
iret
push
xor
loopne
push
scas
sub
out
pop
dec
popf
ins
mov
dec
lods
mov
inc
push
ins
push
dec
int
fdiv
add
mov
sbb
pop
pop
jge
(bad)
xor
aam
xor
sbb
(bad)
mov
dec
xor
mul
icebp
aaa
cmp
jmp
mov
lea
xlat
aaa
jge
sahf
and
out
sbb
push
or
add
sub
mov
iret
and
fsubr
clc
xchg
mov
shl
retf
jl
push
das
sub
jp
xor
bnd
hlt
(bad)
mov
sbb
lds
mul
outs
push
jb
retf
imul
popa
mov
sub
jno
dec
fnstenv
mov
repnz
fisttp
pusha
ins
cmp
test
push
or
cmps
xchg
shl
jo
rol
jmp
sub
pop
add
add
sub
push
in
test
popa
aam
stos
sbb
sahf
aam
fwait
lock
mov
push
push
and
in
xor
pop
cdq
std
aas
movs
cdq
imul
mov
inc
leave
popf
inc
add
push
sbb
pop
les
pop
xchg
and
mov
loopne
inc
xor
push
jmp
sahf
adc
(bad)
pop
and
in
ins
add
aad
dec
mov
imul
adc
xchg
popf
jle
jg
es
add
xchg
pop
std
cmp
and
fidiv
mov
mul
in
pop
sahf
inc
cmp
jl
push
mov
out
(bad)
popf
ficom
(bad)
push
inc
or
jecxz
cdq
in
xchg
sub
addr16
mov
call
sub
loope
inc
repnz
mov
je
jp
test
inc
and
sahf
cmps
imul
adc
loopne
ins
sahf
sbb
cmps
movs
inc
add
popf
(bad)
and
fild
sbb
stos
es
jg
adc
sub
jl
add
movs
ret
or
xor
popf
mov
fbstp
sbb
mov
pop
adc
jg
push
int3
push
cmps
jmp
and
movs
sbb
mov
xchg
mov
push
sbb
outs
test
ret
xor
outs
test
ret
(bad)
xor
mov
leave
fnsave
fdiv
cs
inc
(bad)
pusha
push
(bad)
pop
pop
or
and
out
stos
ds
inc
pop
clc
aad
sbb
retf
stos
inc
test
test
pop
sahf
gs
int3
adc
lahf
pop
jmp
fdivr
inc
cmp
ficomp
dec
add
xlat
mov
and
xchg
repz
add
(bad)
cmps
jns
cmp
int
imul
retf
push
mov
ss
sub
scas
mov
push
mov
cmc
gs
mov
loope
add
xchg
or
ja
in
mov
dec
cmps
loop
ret
pop
xchg
loopne
push
cdq
jno
cmps
out
jg
ins
xchg
ret
lahf
mov
test
ds
jl
inc
scas
add
add
dec
out
jmp
sbb
lock
push
and
jnp
cmp
arpl
xor
cmp
loope
ins
jne
arpl
push
dec
out
sbb
xor
cmps
(bad)
in
pusha
test
test
xchg
sub
imul
mov
adc
mov
pop
and
cmp
mov
bound
pop
lahf
sbb
fnstsw
jmp
and
or
int3
or
scas
lea
leave
imul
or
push
mov
jnp
lock
daa
push
cmp
sbb
mov
test
in
test
ja
aam
xor
in
mov
mov
ins
std
dec
xor
stc
mov
push
call
punpcklwd
xor
jg
add
mov
pop
call
push
xor
aad
shl
or
imul
pop
sub
lods
add
sub
aas
iret
ret
dec
mov
adc
mov
in
cmp
cmp
(bad)
mov
inc
adc
or
enter
push
lahf
xchg
xchg
pop
test
push
mov
xchg
out
mov
adc
leave
and
or
and
inc
fs
mov
pop
or
push
aad
mov
mov
int
movs
iret
cli
pop
dec
pop
jno
les
adc
les
inc
es
retf
stc
out
aaa
fdiv
pop
pop
sahf
outs
fiadd
inc
(bad)
pop
xchg
bound
push
repnz
jp
js
pop
dec
repnz
jno
cmp
adc
pop
pop
rcr
mov
adc
jecxz
retf
cmps
sub
fbstp
push
jno
xchg
adc
mov
cmp
rol
imul
inc
arpl
adc
cmc
loop
mov
jnp
(bad)
pusha
push
inc
cdq
in
sti
(bad)
adc
jge
push
(bad)
lock
stc
pushf
jno
or
sbb
mov
nop
gs
sahf
dec
add
ins
add
repnz
retf
add
stos
xor
add
ins
dec
ins
cmp
adc
jg
add
mov
nop
enter
mov
movs
mov
mov
shl
mov
or
pop
lock
mov
or
jno
or
inc
dec
sbb
sbb
sub
loop
lahf
add
cmp
xchg
test
xchg
(bad)
xchg
loope
push
push
lods
cmp
jmp
inc
sti
in
cmp
pmaxsw
mov
retf
ins
and
add
out
out
or
pop
jl
adc
icebp
pop
sub
(bad)
icebp
popa
stos
test
jns
mov
ds
sub
sub
xchg
enter
dec
jns
fistp
xor
mov
cdq
and
mov
pop
sub
fld
dec
cmp
jge
xlat
out
jbe
push
fstp
iret
cmps
sub
(bad)
(bad)
add
xchg
pop
cmps
mov
aad
sub
loop
imul
or
sub
(bad)
test
ins
xchg
mov
xor
mov
test
cmp
pusha
mov
ror
cmp
scas
shl
adc
scas
xor
dec
jns
xchg
icebp
imul
int
mov
adc
and
cmps
xchg
mov
pop
and
ret
dec
xchg
dec
mov
cs
xor
sub
mov
call
enter
ja
inc
fist
inc
dec
push
dec
mov
pop
in
sub
jb
int3
out
mov
fld
ficomp
xchg
cmp
sti
nop
repz
movs
lds
inc
out
int
test
shl
adc
and
jp
pop
add
pxor
jns
pop
cwde
add
(bad)
out
aas
add
out
repz
aam
sub
pop
jns
pop
adc
inc
push
inc
dec
out
popa
retf
mov
popf
add
and
(bad)
scas
outs
cwde
icebp
cmp
cs
xchg
je
sbb
pop
loop
adc
sub
movs
xchg
cmp
mov
push
push
or
ds
pop
loopne
rcl
jns
jp
cmp
push
lods
ret
mov
lds
sbb
fist
mov
sub
shl
cld
cld
idiv
aam
jo
xor
loope
inc
dec
jns
pop
loopne
jns
inc
out
push
sbb
jmp
mov
xor
xchg
jmp
pop
or
test
scas
dec
fild
icebp
xchg
adc
jmp
(bad)
xor
inc
xor
scas
or
mov
(bad)
push
ins
jmp
adc
sbb
ja
test
iret
and
sbb
out
aas
out
fs
sub
push
div
mov
xchg
jo
inc
imul
cmp
scas
outs
pop
pop
add
cld
mov
lahf
or
sbb
jb
jb
sbb
iret
xor
jmp
xlat
mov
pop
xchg
add
arpl
pop
sahf
sub
sbb
cmp
loope
fld
repz
stos
jo
ja
call
mov
jnp
cwde
imul
dec
mov
test
bound
hlt
add
inc
jae
push
add
arpl
sbb
xlat
or
mov
and
jns
jge
cli
mov
dec
enter
add
fisubr
jp
int
cmp
pop
lahf
loopne
xor
sbb
lods
cmps
hlt
(bad)
arpl
mov
dec
jecxz
dec
and
inc
xlat
push
ins
xchg
jnp
outs
push
fcmovnbe
pop
mov
inc
ficomp
push
std
int3
jge
out
xchg
out
call
test
pushf
rcr
dec
xor
mov
retf
xlat
sub
mov
mov
push
and
mov
or
push
add
test
gs
popf
mov
bound
add
pushf
xor
or
and
repnz
cmp
add
sbb
outs
cmp
cmps
mov
lods
push
jnp
cdq
or
and
xchg
sub
mov
mov
loope
mov
sub
pop
aam
ror
inc
pop
cmp
mov
xchg
retf
inc
mov
pusha
pop
cmp
jecxz
xchg
(bad)
in
mov
mov
ss
clc
aam
dec
sbb
add
jg
mov
aas
pop
mov
xor
ins
xor
and
push
es
movs
dec
stos
push
movs
pop
push
mov
add
shl
lahf
or
neg
(bad)
cmc
xchg
mov
push
mov
push
jns
xor
(bad)
fxch
xor
cmp
mov
xlat
xlat
add
inc
add
push
xor
(bad)
xchg
into
aam
pop
cdq
inc
fiadd
adc
in
fmulp
mov
xor
adc
das
lock
rol
add
clc
arpl
mov
stos
mov
adc
xchg
js
fchs
jns
xor
pusha
sbb
xchg
test
js
sbb
jo
or
push
daa
clc
sub
shl
(bad)
push
popf
jo
setae
adc
dec
adc
mov
mov
jge
inc
scas
pop
cwde
icebp
xchg
test
push
push
bnd
add
xchg
jecxz
adc
arpl
push
ss
jp
cs
jle
push
push
xchg
sub
in
jne
inc
adc
test
mov
loop
push
test
inc
(bad)
in
push
mov
cld
sub
popf
les
jnp
and
mov
ja
js
pusha
leave
cmps
bound
cmc
jns
jmp
pop
les
mov
int
ja
in
or
sbb
inc
mov
push
sbb
mov
inc
push
cli
icebp
rcr
ret
repz
adc
lods
psubd
and
outs
sbb
call
mov
cmp
icebp
xchg
push
rol
cmp
pop
xchg
sbb
out
and
(bad)
stc
bswap
inc
push
xor
jmp
add
mov
mov
and
clc
imul
pop
inc
aad
pop
ins
add
push
sub
mov
(bad)
and
cmp
mov
cmp
gs
lock
and
aad
push
cmp
sub
or
retf
mov
jl
jle
addr16
mov
mov
out
adc
xchg
xor
or
fst
sub
dec
lds
sahf
aaa
pop
jnp
(bad)
pop
popa
cmp
and
push
inc
in
stos
out
punpckhwd
push
sub
xchg
(bad)
les
or
push
xor
scas
jbe
and
fisub
mov
in
mov
mov
lea
xor
ins
pusha
sbb
xchg
in
pop
and
cmp
sub
retf
jbe
xor
call
jne
push
mov
dec
jns
test
sbb
dec
stos
pop
ror
cld
adc
adc
outs
sbb
pop
imul
ins
sbb
loopne
dec
jmp
dec
or
xchg
cmp
(bad)
in
daa
dec
and
inc
int
addr16
xor
jp
xchg
xor
out
add
dec
(bad)
call
outs
push
push
sbb
cmp
(bad)
out
into
push
sub
hlt
mov
cli
outs
scas
(bad)
test
adc
dec
xlat
sub
out
stc
js
js
add
loop
jle
cld
add
xor
es
popf
or
push
loop
inc
xlat
imul
scas
imul
xor
or
sbb
iret
dec
sbb
sti
add
or
or
(bad)
mov
fist
cmc
mov
pop
and
sub
(bad)
jmp
pusha
mov
das
pop
mov
jb
inc
jne
jl
ficom
push
movs
mov
iret
lods
mov
xchg
hlt
mov
(bad)
in
fs
adc
or
cmp
inc
mov
lods
inc
cli
ret
retf
push
pop
mov
into
xchg
push
jle
cdq
adc
mov
mov
xlat
popf
mov
xor
jae
test
arpl
fimul
xchg
lods
mov
jne
push
sub
push
adc
mov
xchg
inc
jnp
cmp
sbb
pop
adc
retf
sar
sub
outs
into
jp
xchg
(bad)
lock
adc
jl
fsubr
sub
lock
cmp
pop
sub
js
cdq
icebp
add
cmps
dec
adc
arpl
xchg
or
enter
mov
inc
add
xchg
inc
jmp
push
push
cmc
jle
jb
cmp
mov
inc
sbb
out
jmp
ins
jg
inc
imul
ss
out
test
mov
dec
jmp
bound
and
lods
pop
scas
addr16
je
bound
fwait
dec
mov
push
sahf
push
adc
jb
dec
out
int3
hlt
or
adc
pop
clc
mov
mov
adc
mov
xchg
push
pusha
das
lea
iret
js
sub
dec
lahf
xchg
jecxz
es
daa
sti
dec
add
(bad)
pushf
mov
xor
lods
icebp
stos
push
xor
jae
push
aad
scas
inc
clc
inc
rcr
pop
cwde
scas
inc
cld
out
cmps
cmps
mov
iret
aam
icebp
mov
sahf
loope
xchg
xor
add
pop
inc
jb
neg
add
sar
cs
out
addr16
add
jmp
xchg
test
mov
sub
pop
jmp
aas
in
push
and
ins
sub
sahf
push
xlat
push
xor
daa
sbb
mov
(bad)
xchg
ret
mov
test
into
mov
mov
iret
jge
mov
dec
mov
inc
hlt
scas
dec
shr
push
ins
scas
in
lock
inc
hlt
aas
cmps
popf
cmc
or
sub
sub
and
push
cdq
leave
cmc
mov
inc
mov
jnp
jmp
das
out
sbb
mov
inc
shl
test
fmul
out
mov
not
or
cmps
scas
dec
cmp
xor
xor
(bad)
push
ret
mov
add
mov
sbb
xchg
jbe
hlt
mov
les
push
popa
jg
sub
jne
and
dec
or
movs
retf
push
mov
inc
adc
movs
inc
(bad)
inc
in
inc
mov
sub
push
pop
push
jb
mov
icebp
or
cmp
inc
mov
adc
leave
in
in
pop
lea
mov
mov
mov
pop
(bad)
xchg
xchg
lock
dec
push
fs
out
jne
xor
jp
int
jmp
ds
sbb
jmp
and
push
fnstenv
dec
aaa
repnz
cdq
xor
arpl
xor
into
inc
sub
rcl
inc
repnz
stos
addr16
retf
sar
xchg
mov
std
mov
sbb
xchg
mov
shl
inc
push
mov
jns
rol
in
and
ins
sahf
lods
mov
jle
lahf
xchg
fist
add
enter
xadd
hlt
push
dec
push
cmps
mov
aad
(bad)
or
sub
out
cmps
stc
aad
(bad)
and
mov
push
repz
jle
ror
xor
mov
jno
cmc
loope
int3
fcom
lods
lods
push
add
iret
jno
jmp
and
mov
cld
es
movs
out
cld
sbb
mov
mov
jle
sub
cmps
xchg
in
push
retf
call
hlt
(bad)
dec
adc
fstp
ffreep
jo
mov
dec
cmp
gs
xchg
mov
data16
sbb
add
loope
xchg
cdq
adc
pop
aam
dec
cdq
ror
test
cmp
add
sbb
mov
ins
and
mov
dec
cmp
cwde
cwde
and
sub
inc
in
lods
fwait
mov
out
jnp
imul
sbb
test
cmp
or
jno
stos
fbstp
pop
aaa
je
sbb
jge
inc
imul
pop
in
push
jmp
sub
xor
inc
jno
or
mov
pop
cdq
or
cmp
add
mov
sub
imul
retf
mov
sbb
xor
jge
fsubr
jp
shl
cs
sti
or
jecxz
sahf
pop
lea
mov
mov
fnstsw
ss
cmps
gs
jnp
in
add
and
retf
sbb
pop
ja
push
inc
lds
mov
(bad)
in
or
sbb
or
inc
xchg
jae
out
mov
popa
inc
sbb
cmp
jge
fwait
add
stos
xchg
call
cmp
lods
jne
retf
lock
ds
jne
add
dec
aad
and
xor
mov
(bad)
sub
xchg
sti
dec
test
sub
add
adc
mov
push
cmp
inc
sbb
fbstp
pop
nop
es
mov
cmp
mov
addr16
(bad)
cmps
hlt
jns
call
inc
imul
les
xlat
ds
mov
shl
addr16
inc
xor
jbe
pop
fnsave
pop
outs
jbe
sar
sub
push
stos
ins
imul
xchg
xor
jmp
(bad)
ffree
pop
fnstenv
shl
test
daa
jmp
stos
(bad)
push
sbb
mov
jmp
xchg
xor
retf
popa
push
mov
push
mov
push
fisubr
xchg
sbb
sub
jbe
shl
test
mov
ja
jg
js
mov
enter
pop
aam
ds
push
std
out
(bad)
arpl
inc
adc
out
xchg
outs
mov
mov
icebp
test
js
pop
mov
popf
mov
inc
pop
inc
mov
mov
aas
inc
mov
data16
sub
push
pop
fcomp
mov
mov
sub
pop
push
out
mov
sar
idiv
mov
jae
mov
push
ins
push
mov
(bad)
cmps
xchg
pop
push
pop
js
sbb
ret
xchg
loopne
fwait
stc
cmc
cmc
mov
lods
fwait
cmp
dec
cmp
stos
mov
dec
or
inc
jo
repnz
shl
dec
push
jne
dec
xchg
and
cld
lahf
dec
test
jns
mov
add
mov
and
movs
scas
inc
inc
fmul
cmp
pusha
inc
fistp
cmps
and
jae
pop
in
ins
ds
shr
call
xchg
aam
daa
add
lods
mov
xchg
pop
and
jmp
mov
outs
dec
in
adc
(bad)
lods
ret
das
icebp
les
sahf
shl
(bad)
retf
push
jmp
sti
inc
mov
pusha
jl
fstp
mov
jne
outs
push
fcomp
and
mov
mov
dec
push
cmp
adc
mov
stos
fst
repz
int
xor
mov
ins
in
out
clc
in
inc
adc
outs
in
movs
(bad)
(bad)
jbe
aas
imul
inc
mov
test
out
mov
jmp
dec
ds
pop
out
sub
sbb
scas
imul
shr
mov
adc
rol
xchg
imul
aaa
les
in
add
push
dec
mov
and
mov
imul
lds
nop
push
test
xchg
loope
xor
mul
rol
je
xchg
inc
test
xchg
cmp
in
cmc
dec
and
or
loop
mov
cwde
lods
sub
cmp
arpl
cld
jge
(bad)
dec
fucomip
leave
in
xchg
les
push
mov
cld
xchg
inc
mov
cmp
jb
out
(bad)
cmp
ret
leave
push
js
jne
or
cld
inc
jo
pop
xchg
sub
in
outs
js
int3
(bad)
sbb
ret
retf
mov
or
ds
fnsave
enter
add
jmp
js
push
lea
adc
cs
call
add
fisttp
loope
mov
iret
es
lods
mov
repz
and
aaa
cmps
(bad)
in
adc
add
test
out
enter
mov
in
mov
push
jb
and
jo
jecxz
sbb
dec
in
pop
push
dec
jmp
ret
dec
xchg
xchg
add
jnp
fadd
jno
cmp
jecxz
inc
jl
jno
rcr
cli
cmp
sbb
dec
xor
(bad)
dec
adc
cmp
in
scas
lds
mov
jmp
shl
repz
add
enter
loope
sub
jnp
adc
pop
pop
jo
xor
pop
xchg
adc
or
pop
ds
cmps
popf
lds
fdiv
popf
rep
fwait
mov
std
(bad)
loope
push
or
xchg
in
hlt
icebp
lods
mov
mov
push
xchg
cdq
push
loopne
jae
xor
or
mov
add
mov
jne
push
cdq
add
push
sbb
loope
repz
cmps
mov
inc
sti
fisttp
(bad)
test
sub
jnp
ror
rol
fnstsw
push
les
sub
std
push
dec
aaa
xor
(bad)
jg
movs
pop
jecxz
add
jb
cmp
(bad)
es
xchg
fisttp
mov
popf
jg
(bad)
test
mov
jnp
mov
dec
xchg
mov
sahf
jns
and
mov
cmp
movs
jecxz
fiadd
inc
cmp
aam
psrlq
and
nop
pop
call
pushf
jmp
ins
retf
push
fstp
inc
push
add
and
push
mov
dec
xor
dec
cli
jg
cs
call
mov
push
ds
int3
ror
fwait
enter
pop
adc
push
(bad)
loope
sub
or
es
adc
sub
xor
add
loop
test
je
das
add
shl
arpl
sub
popa
pop
mov
jo
mov
cmp
mov
test
aaa
popf
xor
sub
mov
test
test
mov
out
cli
test
xor
xor
imul
dec
ret
retw
sbb
imul
jbe
jno
js
js
(bad)
jmp
clc
dec
and
stc
jbe
push
adc
fsubr
mov
sti
mov
test
cmp
out
call
dec
das
std
push
inc
in
mov
pushf
and
pop
scas
mov
sub
scas
mov
ss
not
pop
push
aaa
add
cmc
cmp
movs
lds
adc
fadd
or
inc
(bad)
jge
outs
retf
in
dec
push
mov
push
xchg
aad
xchg
adc
into
inc
js
cmovle
in
sbb
sub
and
xchg
hlt
imul
in
mov
pop
jg
mov
mov
pop
xor
dec
sub
inc
sahf
or
les
push
lahf
arpl
dec
inc
push
dec
es
mov
cmp
or
or
inc
mov
pop
call
mov
pop
mov
(bad)
outs
mov
mov
jp
ins
iret
loopne
jle
xchg
and
(bad)
pop
add
xor
inc
pop
retf
mov
js
push
jecxz
mov
add
fld
jecxz
aam
bound
cmp
or
test
lock
daa
mov
int
sar
cld
inc
add
neg
push
sahf
xchg
jmp
test
scas
xchg
mov
add
fimul
sar
cmc
out
rol
call
jne
lahf
pop
(bad)
cli
bound
sub
out
dec
mov
dec
mov
inc
nop
clc
sub
adc
sbb
push
cmp
jo
mov
mov
pop
lock
mov
push
inc
stos
fidiv
or
and
call
sub
enter
xor
mov
push
push
int
imul
test
xchg
mov
jp
xchg
sbb
vmread
jb
adc
sub
sti
in
jle
or
pop
sbb
aad
sbb
ja
cld
call
cmp
clc
or
push
adc
xchg
cli
mov
add
ret
push
popa
and
fisttp
outs
add
jg
pop
mov
inc
sub
retf
cmc
add
push
test
adc
push
sbb
adc
addr16
push
aas
repnz
scas
push
or
sbb
pop
call
lods
test
movs
movs
(bad)
and
mov
fidivr
mov
jmp
push
mov
sub
inc
add
test
push
sar
imul
or
mov
lods
mov
push
fld
pop
inc
add
shr
js
push
mov
sbb
pop
pop
and
je
sbb
sbb
ficom
loop
add
mov
dec
and
push
adc
mov
xor
xchg
cmp
inc
or
mov
jl
jno
push
adc
jno
enter
inc
movs
add
or
xchg
jmp
shl
push
stos
hlt
je
cdq
fadd
inc
xchg
mov
xor
add
cli
loopne
call
and
mov
leave
loop
(bad)
push
cmp
inc
das
enter
pop
jo
inc
loope
xchg
stc
ret
repz
mov
in
test
enter
lahf
push
xor
mov
jl
push
(bad)
loopne
mov
daa
(bad)
mov
lods
out
jno
movs
(bad)
je
pop
xor
push
sub
cdq
sbb
cmp
mov
sub
imul
div
sub
retf
inc
shr
mov
jbe
pop
faddp
push
cmp
addr16
pop
cmps
xor
arpl
sahf
push
inc
mov
dec
cld
and
test
cmp
movs
lock
es
pop
loope
pushf
add
pop
inc
xor
fisttp
inc
ds
(bad)
cmp
out
(bad)
popa
mov
ja
scas
bound
push
ins
imul
dec
cmps
jp
fs
xchg
imul
(bad)
jp
mov
jns
call
cld
push
jnp
js
and
add
icebp
scas
xchg
ja
jnp
icebp
xor
add
outs
mov
push
hlt
gs
push
test
or
cld
inc
dec
fs
inc
or
pop
cmps
and
das
ins
mov
and
outs
sbb
push
in
sar
sub
jnp
movs
out
mov
mov
in
sbb
ins
cmc
mov
(bad)
adc
dec
fstp
aad
mov
out
pop
push
iret
pop
cld
ins
pop
(bad)
scas
loope
xchg
xor
aam
adc
imul
test
call
idiv
in
js
push
xor
mov
mov
add
jae
and
jl
pop
pop
ins
sub
dec
jmp
pop
icebp
repnz
sbb
mov
outs
lods
add
jo
aam
mov
xlat
cmp
mov
lods
adc
or
sar
daa
pushf
xor
fisub
push
and
sub
xchg
retf
mov
fidiv
xchg
aaa
cmps
push
scas
or
fisub
add
retf
xor
cmps
ret
test
push
ficom
scas
cmp
aas
dec
dec
xchg
adc
js
push
push
scas
dec
xor
and
lods
xor
icebp
rcr
loopne
mov
inc
push
es
mov
add
sub
scas
pop
fild
mov
ss
cmp
lods
jno
mov
fild
jmp
push
adc
xchg
adc
jmp
cmp
std
cmps
pop
sti
dec
mov
call
mov
dec
mov
fisub
ja
cmps
mov
cmp
push
push
push
psubd
int3
mov
repnz
pop
xchg
dec
mov
js
ds
test
dec
ins
or
punpckhbw
sbb
enter
ds
sar
push
jg
push
lahf
outs
xor
enter
mov
ins
xchg
cmp
mov
mov
sub
sub
dec
mov
or
mov
jne
add
push
mov
daa
lods
dec
xor
ins
xor
aas
mov
sbb
(bad)
jp
sub
push
retf
clc
jno
mov
hlt
mov
jl
enter
leave
les
mov
xor
nop
adc
sbb
push
retf
xchg
jmp
mov
and
or
sub
add
ret
push
ret
ja
xor
call
pop
adc
cmc
adc
push
pop
mov
pop
fucomp
test
rcr
retf
or
cmp
jno
inc
pop
mov
sbb
or
pop
pop
cmp
add
pop
loopne
pushf
jecxz
xor
add
cwde
push
lods
sbb
inc
sar
sbb
push
(bad)
mov
push
xor
sahf
test
lahf
test
repnz
xchg
stc
popf
push
jg
jo
pop
sti
(bad)
cmps
retf
cmp
or
ins
or
inc
inc
in
sub
xchg
call
cmps
jo
and
cmp
icebp
addr16
nop
pop
push
call
adc
clc
repz
cli
frstor
(bad)
sbb
cmps
and
div
or
push
pop
(bad)
jae
or
or
and
mov
nop
fild
shr
inc
lods
leave
nop
jno
sbb
jecxz
cmp
jg
dec
push
xor
jo
fsubr
fwait
xchg
push
fcom
mov
cmp
dec
or
lods
push
or
pushf
nop
lock
pusha
stos
sbb
jle
xchg
leave
imul
or
mov
repz
movs
inc
jp
adc
icebp
xchg
fwait
jnp
dec
ret
or
jne
and
into
fimul
push
lds
outs
(bad)
dec
je
outs
pusha
outs
lds
jge
out
repnz
dec
lock
xchg
fist
in
xor
test
xchg
aas
and
mov
loop
loopne
iret
jb
xor
int3
sbb
int
jle
sub
retf
and
xor
jmp
sti
mov
lock
test
out
sbb
cmp
ret
push
das
cld
pop
lods
clc
outs
movs
(bad)
es
push
mov
or
mov
inc
add
fsubp
retf
mov
push
mov
xchg
bound
jo
out
shr
jmp
aas
cmps
push
push
or
sti
es
or
enter
xchg
lods
shr
js
retf
call
dec
out
call
xor
xor
sub
rcpps
or
outs
mov
retf
push
cdq
pusha
sbb
mov
or
and
pop
and
inc
push
mov
cli
imul
lods
ja
push
fiadd
add
daa
sub
dec
and
lods
sbb
jnp
ss
sub
xor
pop
mov
xor
pusha
xor
(bad)
clc
jle
data16
ja
add
adc
stos
iret
or
jecxz
jns
in
outs
shl
lods
xor
test
outs
push
pop
call
or
adc
push
cmp
push
pop
je
jp
test
inc
rol
xor
imul
mov
pushf
xor
mov
add
sub
xor
cmps
jo
movs
push
xlat
mov
iret
loopne
add
jg
cmc
mov
mov
lahf
test
inc
jnp
gs
dec
loope
cdq
test
sbb
jns
int3
inc
or
or
iret
gs
sub
out
cld
push
dec
int
retf
(bad)
idiv
pop
ret
xor
aaa
jne
push
push
mov
sbb
das
push
adc
pushf
pop
mov
jne
int
rcr
push
pop
add
jg
daa
and
stc
xchg
xlat
push
or
or
or
(bad)
cmc
xor
or
scas
ret
stos
mov
faddp
xor
out
arpl
ja
xchg
adc
mov
and
loop
(bad)
xor
and
es
loope
adc
and
jb
movs
cmc
push
sub
xchg
xor
adc
mov
ja
popf
ss
push
aam
xchg
cmp
cmc
cwde
jo
cdq
mov
lods
inc
hlt
mov
aam
inc
cmps
nop
int
mov
fild
clc
cli
daa
scas
scas
stos
or
jmp
ja
div
pop
ins
out
aam
mov
add
pop
xor
cld
push
ror
dec
lods
mov
ss
arpl
iret
jp
iret
les
add
arpl
mov
scas
mov
(bad)
sub
xor
les
xor
xor
ins
test
pop
mov
es
xchg
sub
xchg
push
mov
fisubr
je
iret
fiadd
mov
cmp
arpl
and
cmp
mov
test
ins
std
xlat
jne
fld
loopne
sub
add
and
and
into
movs
nop
jmpw
adc
addr16
xchg
icebp
sti
inc
scas
cmps
cdq
(bad)
popa
mov
rol
fisub
xchg
and
(bad)
xchg
xchg
inc
and
clc
aad
xor
lods
or
jnp
outs
xchg
lds
mov
inc
sub
stos
push
xor
jmp
xchg
loopne
nop
clc
pushf
std
xor
push
enter
lods
rol
idiv
sub
pop
ror
dec
call
cdq
enter
shl
ret
jae
dec
sbb
iret
iret
leave
adc
out
and
rep
aam
imul
push
xchg
cmps
loope
movs
mov
xor
jl
cwde
jl
mov
stc
loopne
mov
in
sub
sub
int
dec
push
shl
(bad)
rol
aam
xor
pop
push
or
je
add
aaa
pop
mov
aas
std
cmp
jne
mov
jo
dec
std
out
push
adc
or
mov
nop
pop
xchg
ror
movs
cmp
mov
inc
fs
xor
or
sbb
aam
fimul
pop
and
push
xchg
pop
sbb
mov
jmp
(bad)
in
loope
and
mov
xor
arpl
mov
out
adc
mov
retf
push
call
xor
add
inc
pop
stos
cs
and
push
pop
test
outs
enter
in
ja
loop
int3
cmp
js
std
jne
(bad)
mov
int3
inc
(bad)
in
cmp
in
sub
test
popa
jb
lods
xlat
sbb
cmps
daa
hlt
xor
sbb
xchg
jae
std
mov
clc
push
mov
xchg
clc
xor
mov
push
jge
into
xchg
jne
or
jbe
cmp
sub
mov
mov
mov
inc
sub
mov
or
cdq
inc
sub
or
mov
xlat
les
cld
mov
sbb
push
sahf
push
inc
push
(bad)
stc
and
mov
aad
out
dec
jge
push
cmovbe
mov
cmp
lods
mov
call
pop
in
push
fdivr
int3
and
add
inc
jno
mul
rol
add
inc
ficom
iret
pop
dec
loop
dec
and
jmp
div
movs
adc
push
cmp
push
push
cmc
fwait
and
fwait
scas
fdivr
sbb
mov
xchg
add
repnz
and
and
xchg
adc
div
data16
adc
inc
femms
push
int3
cmps
pop
lods
jg
rcr
add
cmp
inc
push
loop
clc
mov
xchg
sbb
and
xchg
add
and
or
ins
xchg
bound
cmp
jno
jno
lods
dec
xchg
push
popa
clc
rcr
sub
mov
fmul
or
mov
(bad)
ficomp
xchg
shr
fbld
push
int3
cmps
pop
or
aad
(bad)
mov
add
(bad)
inc
out
call
push
fdivr
or
dec
sbb
xor
inc
cmp
mov
repnz
mov
outs
push
aad
repnz
jg
cmp
shl
sub
push
pop
mov
push
fsub
das
inc
out
sbb
popa
or
cmp
jne
and
ins
cdq
pop
xchg
inc
retf
sbb
fstp
sub
sbb
ins
cld
push
pop
(bad)
lds
dec
jecxz
or
cmps
xchg
(bad)
hlt
inc
call
mov
and
push
mov
movs
cld
dec
push
test
jnp
cmp
enter
repz
in
adc
mov
mov
aaa
add
mov
dec
add
ins
or
jo
in
and
push
(bad)
repz
sub
test
icebp
aad
dec
mov
inc
jge
in
enter
out
and
movs
aaa
ret
repz
cdq
iret
dec
cmps
data16
scas
or
dec
adc
iret
inc
cdq
out
imul
cs
clc
cli
pop
jnp
cmp
loopne
inc
movs
push
xor
popa
lods
or
xchg
enter
mov
or
mov
sub
icebp
or
inc
pusha
push
sbb
scas
call
sti
sbb
add
jae
push
clc
shl
inc
out
mov
call
int3
mov
dec
popf
out
add
loope
cwde
mov
aas
jp
jns
aas
xchg
mov
ret
add
in
push
test
pop
dec
int
pop
xor
and
stos
sub
repz
mov
repnz
mul
inc
cmp
imul
daa
mov
lock
ficom
mov
stos
(bad)
inc
imul
lahf
mov
push
xchg
jp
ret
cmp
sbb
pop
or
lods
(bad)
fstp
arpl
inc
or
aam
and
push
push
or
push
not
inc
or
nop
push
fisubr
aas
jne
call
xor
add
data16
sbb
cs
dec
jl
cmps
movs
add
adc
mov
mov
push
test
or
sti
jb
rol
test
in
jnp
mov
imul
and
fild
aaa
and
lahf
sbb
in
mov
jnp
mov
cmp
mov
call
aas
outs
cld
stc
hlt
sbb
dec
push
dec
fucomi
retf
mov
in
int3
cmp
add
daa
aas
ficom
repnz
jp
mov
sar
div
jmp
int
jo
mov
xchg
push
shl
es
jb
cmps
loop
sub
(bad)
movs
lds
pop
mov
jg
setbe
add
xchg
clc
xor
adc
and
add
addr16
repnz
mov
std
pop
xor
lea
retf
cmp
cli
inc
pop
lock
mov
loop
mov
xor
mov
sahf
lods
lds
sub
xor
stos
sbb
xchg
icebp
mov
clc
cli
xor
je
sbb
iret
mov
mov
mov
pop
int3
push
out
sub
dec
bound
pop
gs
sbb
stos
mov
sbb
cwde
in
jmp
ins
in
add
ds
stc
mov
dec
mov
xor
ret
push
xchg
fild
sub
stos
aam
inc
push
adc
push
jmp
jmp
test
cmps
pusha
cmp
or
dec
test
jl
jle
cdq
fistp
(bad)
leave
(bad)
sub
mul
daa
shl
ins
in
dec
or
pop
cdq
cmp
(bad)
test
retf
inc
adc
gs
fdivr
pusha
cmp
jb
fimul
loope
lods
test
ja
push
push
movs
xor
or
push
mov
das
jno
call
cwde
lock
lea
adc
daa
jns
cmps
(bad)
jl
inc
xlat
setne
xor
lods
test
shl
imul
cmp
adc
mov
cwde
adc
mov
test
mov
aad
inc
push
pop
adc
cmp
jb
mov
jmp
imul
add
inc
ror
test
inc
in
movs
xor
mov
ret
rcr
push
jg
fld
add
sti
leave
adc
sub
in
dec
stos
fidivr
sbb
cli
(bad)
in
and
outs
dec
cmp
jae
sub
jle
pop
mov
(bad)
dec
jmp
jle
mov
and
arpl
mov
add
cmp
sbb
rcl
lods
jg
iret
mov
ret
jge
xlat
pusha
inc
push
(bad)
cmp
pop
xor
lods
mov
mov
ret
jle
pop
loop
mov
sub
mov
pop
das
imul
mov
shl
movs
pusha
push
inc
fwait
(bad)
push
jp
push
fisubr
test
jecxz
mov
jp
mov
push
mov
sub
lea
mov
(bad)
daa
stc
fucomp
fstp
sbb
(bad)
stc
inc
push
mov
and
js
outs
push
adc
mov
call
mov
lods
jnp
xor
mov
in
popa
(bad)
scas
retf
push
push
cmp
(bad)
push
and
adc
and
into
xchg
mov
stos
push
ss
sub
mov
xor
shr
mov
mov
push
hlt
or
(bad)
fdiv
push
xor
pop
xchg
out
inc
adc
movzx
mov
jno
imul
sbb
pop
(bad)
mov
fcmovu
sbb
xchg
stc
sti
push
dec
mov
jnp
dec
cmp
retf
ss
popa
test
adc
push
jo
std
scas
jg
daa
mov
test
dec
cmp
xlat
xor
sub
ja
or
nop
adc
jmp
add
xor
jp
out
aas
fsubp
jae
outs
pop
mov
gs
add
cmp
sub
mov
popa
jno
loope
xchg
mov
scas
ss
inc
js
std
adc
stos
ins
les
cli
std
loope
jno
push
cld
pop
scas
or
cs
retf
cmp
and
jmp
dec
pop
dec
dec
cmps
mov
(bad)
push
pop
or
in
push
jle
cwde
retf
popa
ins
push
call
push
sbb
xor
xchg
jmp
sub
cmp
gs
lds
in
inc
jl
stos
mov
jecxz
cmp
shl
loop
or
in
in
add
cmp
fneni(8087
aas
cmps
push
pop
arpl
xchg
pop
ds
not
repz
xor
add
rol
outs
fimul
inc
mov
push
je
pop
fcom
sbb
mov
mov
call
xchg
(bad)
jmp
xchg
sub
push
gs
dec
clc
adc
and
imul
(bad)
outs
dec
sub
aas
or
xor
pop
jp
aad
mov
mov
(bad)
repz
aam
retf
push
in
call
dec
stos
jne
xor
pop
push
in
or
sub
xchg
imul
adc
mov
mov
popa
adc
out
lea
popa
push
cmp
xchg
mov
push
mov
in
xchg
pushf
add
rol
fld
xchg
push
(bad)
loope
test
dec
adc
test
imul
jne
test
mov
(bad)
pop
xlat
test
out
mov
ins
cmps
add
xchg
fucom
push
cmp
inc
or
sar
cwde
pop
jo
mov
lods
mov
mov
inc
or
sahf
jb
jge
lea
sbb
les
popa
xchg
into
gs
outs
inc
pop
outs
add
inc
scas
adc
cmp
sbb
ins
retf
cmp
xchg
sbb
add
stc
sub
or
out
and
scas
inc
xchg
iret
and
jle
sub
xor
pop
push
fstp
add
push
mov
mov
and
imul
test
imul
or
sub
movs
add
adc
cmps
add
xlat
test
scas
leave
shl
test
sahf
adc
push
daa
sti
int3
movs
js
push
hlt
std
mov
aad
pop
push
cmp
outs
xlat
jecxz
mov
add
loope
test
jb
xchg
push
sub
mov
mul
push
movs
test
mov
retf
jp
push
push
jns
pop
test
cli
adc
cmp
add
lods
inc
cs
and
inc
and
imul
pop
cdq
mov
and
xchg
sar
push
lahf
je
lds
cmps
into
push
xlat
popf
repnz
pop
push
push
ret
and
(bad)
mov
bound
pusha
jl
test
xor
fnstsw
pop
daa
push
mov
clc
add
jnp
xchg
js
mov
call
xchg
add
lahf
mov
test
mov
mov
jmp
aas
rcl
cwde
fisttp
mov
pusha
jo
or
(bad)
jp
dec
add
iret
out
loopne
dec
mov
movs
jne
mov
scas
leave
arpl
(bad)
call
dec
xchg
xor
sar
dec
scas
and
in
cmp
dec
or
loope
ja
jp
push
cmp
fwait
pop
xchg
jmp
sahf
pop
adc
xlat
mov
pop
test
out
in
outs
cmp
pop
add
pop
out
push
mov
aad
or
cmp
pop
retf
or
mov
and
mov
adc
inc
sub
jno
cmps
pop
mov
jne
sbb
inc
shl
movs
sbb
jbe
and
dec
ror
mov
mov
test
sbb
std
rcr
jl
retf
xor
mov
dec
or
or
fisub
mov
sub
push
sub
or
pop
daa
sbb
jge
mov
clc
out
daa
sahf
fidivr
repnz
jg
or
xchg
fcmovb
xor
ja
jg
aaa
pop
sbb
mov
and
int3
xchg
lock
sahf
shl
hlt
in
mov
nop
in
rol
jo
xor
hlt
(bad)
loopne
mov
shr
leave
mov
fwait
cld
fiadd
mov
aad
leave
cmp
aas
(bad)
pop
fdiv
cdq
fnsave
xor
push
push
mov
loope
pop
mov
xor
jo
mov
call
push
adc
push
mov
imul
xchg
xchg
enter
mov
std
not
data16
daa
(bad)
dec
test
pop
repz
out
iret
fadd
std
call
pop
imul
sub
jle
or
cdq
add
mov
pusha
out
(bad)
pop
icebp
push
jmp
pop
retf
dec
push
mov
push
imul
inc
pop
add
imul
jnp
dec
push
mov
dec
pop
scas
dec
sbb
std
xchg
repz
aaa
idiv
xor
cmp
std
sbb
in
mov
push
inc
ins
jmp
cmp
pop
popf
adc
xchg
sahf
scas
(bad)
sub
mov
(bad)
(bad)
mov
sub
je
sbb
pop
ds
mov
add
inc
adc
pop
xor
scas
aas
mov
cmp
pop
inc
outs
sahf
pop
test
inc
and
xchg
xor
and
mov
xlat
retf
scas
or
mov
adc
mov
cwde
repnz
outs
arpl
es
pop
(bad)
les
jge
inc
dec
xchg
cs
inc
xchg
int3
int3
mov
push
jmp
xor
pop
xchg
inc
cli
aam
cmp
cmp
sbb
jno
fdiv
lahf
clc
push
add
clc
inc
cmp
test
dec
das
and
push
pop
or
(bad)
cmp
sub
mov
rcr
scas
in
dec
ins
mov
pop
jmp
mov
adc
push
or
jnp
iret
std
popf
sub
and
test
dec
outs
ret
out
inc
ror
stos
mov
xchg
sti
xchg
jb
mov
cmp
cmp
loop
adc
ss
js
add
mov
ja
jecxz
or
sbb
adc
movs
sub
xchg
aas
pop
in
(bad)
(bad)
fdivp
and
iret
retf
jmp
inc
dec
adc
scas
mov
push
xchg
sbb
cdq
rcl
hlt
mov
bound
inc
outs
int
and
or
mul
cs
in
sub
dec
jp
outs
pop
(bad)
cmc
sub
(bad)
jns
popf
push
push
gs
iret
iret
sbb
js
push
jge
pop
mov
scas
xchg
pop
mov
(bad)
neg
push
inc
and
outs
out
sbb
cmp
repnz
inc
pop
ja
enter
push
sar
out
xchg
neg
mov
mov
shr
in
push
repnz
mov
add
pusha
das
dec
(bad)
not
cmp
ror
dec
fs
or
in
in
arpl
dec
sbb
lock
mul
jnp
(bad)
xor
mov
sbb
mov
jne
xor
mov
cmc
pop
jne
test
push
mov
jecxz
mov
or
enter
lea
fcomp
pop
fidivr
in
push
adc
dec
sbb
mov
pop
fisub
rcr
adc
out
stos
lods
cdq
stos
pop
aad
dec
add
ins
push
xchg
adc
fnstcw
ror
mov
jmp
sub
xor
mov
mov
sub
and
popf
sub
pop
adc
in
push
mov
mov
shl
mov
fwait
std
test
adc
(bad)
stos
call
fnstsw
rcl
or
jo
dec
adc
push
push
imul
scas
sahf
retf
mov
fwait
jl
shl
test
mov
pop
rcl
xor
xlat
stos
cmp
push
xor
mov
js
xchg
fldenv
mov
jae
mov
(bad)
aas
xchg
sub
xor
outs
ror
jg
adc
pop
dec
add
popf
pop
pop
icebp
nop
jne
jnp
rcr
jns
pop
mov
xchg
cmc
mov
mov
push
lahf
mov
idiv
daa
jp
sub
sub
mov
lahf
sub
xlat
push
add
cwde
aas
jmp
inc
jmp
xchg
popa
call
inc
pop
in
jo
dec
mov
push
ss
xchg
fldcw
xor
(bad)
pop
cmp
call
adc
pop
fcomi
push
mov
and
enter
retf
lahf
jp
dec
nop
mov
test
push
pop
xchg
fnstcw
dec
pop
dec
mov
cmp
stos
sbb
pop
add
add
pop
fisubr
jge
popf
push
add
xchg
and
mov
pusha
push
jecxz
fadd
repnz
mov
inc
movs
fdivr
movs
jb
jne
aas
leave
test
mov
das
inc
adc
pop
cmps
inc
lea
aam
xchg
jmp
mov
or
aaa
call
cld
shl
dec
fadd
sub
xchg
retf
(bad)
int
jecxz
scas
out
pop
jo
add
mov
ds
push
mov
cmps
lock
mov
jg
pop
fimul
imul
mov
ja
jge
into
adc
mov
adc
out
adc
sub
or
mov
cld
cld
aad
fwait
xchg
ret
cs
pushf
adc
out
je
mov
lahf
dec
(bad)
xor
add
push
or
jle
xchg
leave
adc
sub
or
jmp
stc
outs
pop
pushf
fwait
loopne
inc
jle
xor
mul
pushf
adc
out
push
dec
push
ja
outs
rcl
lahf
cmp
lods
or
popa
sar
or
push
mov
jbe
mov
sub
in
sbb
mov
ror
inc
mov
mov
cmp
cmp
jo
or
cdq
mov
or
lods
add
movs
pop
bound
dec
add
cmp
cmps
movs
out
int
dec
rcl
jo
cmp
cli
(bad)
ror
sub
cli
or
loop
sbb
mov
sub
push
(bad)
mov
sti
mov
leave
dec
cli
leave
cmp
fcom
adc
inc
and
(bad)
mov
aaa
xchg
shr
xchg
dec
xor
rol
jg
jmp
xchg
in
daa
loope
or
xor
push
stc
rcr
jae
adc
fidivr
leave
pop
inc
inc
add
loop
sbb
fstp
sub
test
and
and
adc
mov
ror
hlt
jge
cmpps
fld
sbb
addr16
mov
mov
in
cli
cmovl
xchg
jo
add
cmps
mov
and
jae
xchg
cmp
call
mov
xor
inc
daa
and
test
or
cdq
push
lods
test
add
add
sub
xchg
popa
pop
les
mov
adc
lahf
test
jmp
push
dec
push
(bad)
popf
adc
(bad)
or
sbb
gs
outs
iret
dec
mov
out
shl
ret
sbb
nop
adc
aas
je
sahf
add
(bad)
jo
dec
add
sbb
(bad)
dec
push
adc
cmp
mov
pop
pop
jge
sub
or
imul
aaa
sub
arpl
mov
push
stc
clc
and
jmp
push
push
arpl
and
dec
mov
add
xor
xchg
cli
test
jl
mov
or
xlat
ja
test
mov
mov
add
cmp
sar
pop
xchg
test
add
and
lds
mov
(bad)
sub
jbe
sub
mov
xchg
xor
sub
adc
and
sahf
mov
sub
aad
cmps
jb
hlt
enter
push
add
repz
mov
es
pop
sbb
xchg
or
xor
jb
push
xor
repz
movs
cmp
ret
in
out
push
mov
aam
dec
outs
popa
ss
rcl
push
(bad)
out
popf
cld
ror
fnstenv
pushf
cld
in
jge
ins
lock
jno
fdivr
sub
jb
enter
dec
daa
mov
pop
pop
push
and
or
dec
push
and
(bad)
push
fadd
cmp
popf
in
lahf
mov
div
stc
push
pop
ss
push
pop
and
mov
inc
push
retf
in
mov
fidiv
or
fs
popf
shl
es
in
test
mov
jmp
pusha
(bad)
cli
scas
xor
jb
inc
push
fistp
mov
ret
in
sbb
jmp
jmp
mov
pop
popf
xor
movs
mov
fwait
scas
xchg
fsub
jo
rol
cld
push
imul
jno
retf
dec
fistp
(bad)
cmp
xchg
xchg
mov
push
jp
(bad)
movs
movs
pusha
test
inc
sti
(bad)
xchg
ss
xchg
or
data16
fsubr
je
icebp
retf
xor
jmp
in
cmps
call
cmp
je
dec
in
pop
test
inc
jmp
mov
jns
pop
repz
xchg
jno
lods
xchg
cdq
lods
sti
mov
repnz
mov
movs
or
ret
mov
mov
cmp
sub
jl
xor
call
pop
leave
arpl
and
aaa
sbb
(bad)
mov
fild
cmps
mov
xor
lods
xor
(bad)
stc
adc
not
fadd
in
cmp
push
sti
cmps
mov
xchg
cmp
cs
rol
mov
iret
cwde
cwde
xor
sbb
inc
jmp
add
pushf
ror
fidiv
fs
daa
iret
xchg
cs
outs
xor
scas
js
xchg
mov
pop
add
pop
push
call
loope
mov
add
in
or
mov
es
out
mov
add
stos
push
mov
and
int3
mov
ja
sub
dec
jle
push
fadd
fadd
xchg
xchg
scas
mov
push
lds
pushf
enter
nop
mov
cmc
test
rcr
ret
and
retf
test
adc
push
mov
fs
mov
ffree
jg
stc
jle
mov
xor
retf
in
ret
fbld
jne
pop
pop
xchg
sub
add
lods
cmc
jl
mov
aad
jmp
(bad)
call
hlt
mov
push
in
inc
in
lds
(bad)
pop
push
test
(bad)
mov
pop
mov
pop
int
retf
push
sbb
or
push
movs
push
icebp
adc
addr16
cwde
inc
sahf
pop
xor
jg
sub
test
sar
jl
jmp
inc
and
test
jl
mov
ror
imul
sbb
test
add
in
inc
lods
popf
lahf
clc
mov
mov
stos
or
jl
mov
fidiv
mov
test
out
mov
pop
ret
test
adc
add
cmps
aaa
adc
ror
inc
frstor
and
das
loop
pop
adc
push
and
push
loopne
shr
leave
enter
lahf
push
fcmovnb
arpl
in
aad
and
mov
ret
js
push
sbb
mov
push
imul
xchg
dec
test
icebp
outs
sub
or
inc
mov
scas
mov
test
pop
xlat
adc
call
scas
aas
adc
cmp
loope
cld
cmp
les
test
repnz
std
cmp
popf
adc
scas
repz
ret
jle
jns
shl
pop
and
scas
xor
ss
push
in
les
pop
xchg
or
pop
xlat
scas
fld
xor
jb
inc
dec
pop
xlat
loop
or
adc
pop
push
daa
(bad)
ins
cmp
ror
pop
movs
data16
cmp
and
cmp
es
cmc
sbb
pop
cmp
dec
inc
mov
sbb
clc
stos
fpatan
pop
and
retf
xchg
xor
je
and
out
fcomp
pop
test
hlt
pop
inc
and
mov
cmp
popf
mov
imul
repnz
jp
arpl
mov
in
ror
pop
out
inc
test
test
inc
sub
cli
jo
sar
mov
aas
add
add
jp
xlat
mov
cmps
add
stos
add
mov
mov
jmp
imul
sahf
mov
pusha
sahf
popa
push
jecxz
fcomp
sub
mov
into
out
ds
mov
or
ja
mov
push
leave
push
iret
es
mov
jne
add
add
add
pop
and
shl
outs
mov
mov
out
les
cmp
retf
ret
xchg
ins
lods
dec
xchg
xlat
fld
push
pop
or
cmp
jmp
icebp
dec
iret
mov
leave
call
hlt
push
xlat
mov
(bad)
mov
jl
aad
jle
and
sub
inc
mov
into
xor
add
call
lods
dec
pusha
arpl
std
mov
mov
popa
(bad)
les
imul
scas
ja
test
adc
pop
pop
add
mov
cmp
cmc
pushf
shl
outs
dec
xor
in
ret
sbb
pop
xor
inc
stc
aaa
rol
dec
mov
jge
mov
dec
ds
stc
out
mov
mov
xor
rcl
pop
xlat
adc
out
iret
xor
btc
sub
stos
repz
(bad)
jns
push
hlt
scas
lods
sub
cmp
push
repnz
repnz
int
imul
ficom
sub
sub
les
ins
fwait
push
out
(bad)
cmc
mov
inc
add
fadd
mov
sub
aaa
inc
inc
rol
inc
cmp
movd
sub
rcr
movs
push
jge
das
(bad)
shr
ins
pop
pushf
push
and
data16
pop
fldcw
dec
adc
mov
or
push
daa
jg
inc
test
adc
xor
fwait
dec
xchg
js
imul
lock
push
or
pushf
xchg
jmp
repz
fmulp
in
mov
xor
push
mov
test
and
les
jb
or
ret
loope
and
inc
pop
add
jae
jb
push
mov
das
test
xor
fimul
xor
ins
mov
sub
mov
inc
mov
dec
imul
mov
adc
gs
fadd
data16
push
adc
push
or
out
jge
xlat
mov
add
jnp
sbb
mov
or
fdivr
or
add
mov
and
fwait
movs
mov
or
push
pop
jno
and
mov
jns
imul
aaa
dec
fsubr
push
stos
loope
mov
repz
int
pusha
add
sub
lods
inc
mov
arpl
in
jl
cmp
enter
adc
pop
mov
sbb
adc
fcmovnb
icebp
xchg
movs
or
cmp
fwait
sbb
addr16
idiv
das
add
adc
aaa
fild
cmp
mov
xor
xchg
cmp
cmps
pop
add
(bad)
or
push
xchg
hlt
test
xor
leave
fisttp
mov
aam
pop
scas
adc
imul
into
jp
cdq
push
cmp
or
mov
aad
movs
dec
push
inc
fs
mov
dec
(bad)
pushf
mov
mov
or
cld
mov
lods
inc
pusha
enter
add
add
push
dec
in
outs
add
push
call
add
jne
jmp
pop
sub
rol
jmp
aam
cmp
shl
jno
pop
retf
jnp
test
mov
xor
mov
stc
(bad)
mov
fsubr
push
mov
pop
mov
inc
les
sbb
lahf
idiv
into
iret
mov
stos
shl
mov
xchg
aad
pusha
inc
stc
pop
jg
sti
fcom
or
in
pop
ss
(bad)
test
icebp
es
mov
push
sbb
cld
sbb
push
fisttp
lds
mov
ja
mov
pop
(bad)
stc
or
pop
xchg
jmp
dec
push
popf
sahf
mov
jns
add
or
outs
push
jmp
push
xchg
xor
out
jg
mov
dec
jg
int3
shl
lahf
mov
std
mov
int
push
jle
mov
mov
add
aas
sbb
es
xchg
stc
pop
inc
jae
int
test
pop
(bad)
ds
ret
gs
(bad)
or
popf
js
add
pop
aad
or
push
mov
out
std
add
fs
das
sbb
out
add
dec
push
dec
jp
add
pop
inc
sub
lahf
xchg
cld
scas
jge
add
mov
test
imul
cmc
cmp
mov
aaa
lock
and
stos
push
clc
push
mov
neg
cmp
cmp
and
mov
inc
sbb
ins
retf
pop
sub
sub
push
mov
cli
lods
loopne
mov
push
(bad)
out
(bad)
rcl
retf
fs
inc
imul
jl
mov
lods
enter
ins
shr
pop
cmp
jle
xchg
mov
push
jecxz
repz
cdq
jnp
dec
jp
dec
and
push
xor
mov
das
lahf
addr16
pusha
int3
cmp
jge
ret
mov
jmp
fwait
mov
enter
push
adc
movs
sub
push
or
inc
jnp
out
mov
and
icebp
sbb
add
adc
sti
mov
aas
xchg
push
clc
push
ja
repnz
cmps
cmc
lea
je
lahf
mov
dec
imul
mov
lds
adc
add
(bad)
out
cmp
test
or
or
imul
inc
push
outs
mov
pop
jp
or
out
ret
les
inc
push
cwde
loopne
jp
loopne
in
pop
mov
pusha
(bad)
nop
cmp
pop
mov
pmaxub
dec
pushf
or
int
je
jmp
sub
cmovno
lds
push
cli
xchg
mov
add
sbb
loope
clc
cmp
imul
mov
aaa
add
idiv
lea
les
mov
(bad)
test
jg
mov
outs
cld
out
icebp
(bad)
or
adc
mov
retf
sub
cmp
or
out
ficomp
ds
fwait
sbb
add
test
lods
int
jmp
std
cmp
and
loopne
lahf
or
cmp
adc
in
cwde
and
jge
jmp
ds
xor
cli
scas
or
jns
clc
inc
into
cmc
sub
push
btc
repnz
sub
jle
scas
jecxz
dec
ja
and
xor
mov
xor
pop
inc
std
repz
leave
add
imul
pop
cmps
shl
rcl
test
icebp
xor
xor
fwait
inc
mov
test
jp
dec
or
xchg
jp
and
jg
pop
inc
jge
push
clc
in
adc
xor
in
jl
add
loopne
cmp
(bad)
aad
adc
daa
pop
cmp
rol
sbb
popw
push
(bad)
repnz
loopne
mov
fnsave
cmps
or
inc
cmc
out
xchg
jo
pop
adc
mov
jecxz
out
jmp
xchg
loop
pop
push
inc
mov
xor
aas
cli
cld
rcr
jmp
sbb
jmp
sbb
clc
xchg
mov
or
pop
fcomp
fst
leave
ret
jns
jge
lahf
rol
push
mov
add
xchg
das
rcr
rcr
mov
mov
mov
mov
add
mov
ins
push
das
stos
lods
ds
lods
ret
mov
in
xchg
xor
jo
mov
imul
daa
xchg
fcom
mov
cmp
addr16
sti
scas
lods
retf
rcr
cli
mov
jne
add
in
test
sub
jmp
imul
(bad)
sub
fwait
mov
mov
inc
and
(bad)
xor
mov
ds
mov
je
test
fld
fcom
push
arpl
(bad)
cmp
xchg
or
xor
and
mov
add
jle
test
ss
cmp
repnz
and
xchg
psubsb
xchg
cmp
aas
jns
push
xor
shl
sub
or
pop
xor
cmp
inc
jmp
pop
jnp
dec
ss
pop
push
adc
lds
pop
and
int3
xchg
pop
or
jbe
add
xchg
xor
es
out
xchg
xchg
cmc
into
push
je
pop
loopne
mov
aas
pop
xlat
and
daa
sub
fwait
jecxz
(bad)
sti
inc
outs
push
jns
jle
stos
cwde
cld
in
pop
sub
icebp
or
test
test
repnz
push
jo
popa
jnp
es
inc
and
sbb
ins
adc
(bad)
es
outs
xchg
(bad)
stc
inc
test
xchg
aas
or
call
sbb
push
aam
jmp
sub
imul
or
dec
or
inc
repnz
jmp
jne
in
xchg
rol
jbe
add
xchg
lods
sub
mov
test
and
push
lods
mov
loope
ss
and
cdq
cmps
mov
xchg
repnz
push
les
pop
stc
neg
gs
cmp
aam
cpuid
jno
mov
das
hlt
xchg
icebp
jmp
sub
or
add
popf
mov
xchg
daa
leave
pop
jg
es
xchg
test
mov
mov
std
sub
xor
lods
fisubr
aas
enter
or
cs
shl
jecxz
mov
aas
sbb
fist
cli
cld
dec
mov
add
mov
or
ins
inc
fwait
in
loopne
adc
fnsave
push
sbb
cli
inc
mov
dec
aas
sub
pop
sub
jmp
xchg
pop
clc
popf
arpl
push
nop
push
jle
call
push
ins
shl
mov
iret
pop
inc
cmp
dec
adc
dec
and
xchg
lea
mov
xchg
out
add
or
call
jmp
jle
jl
fisub
nop
sub
dec
or
xor
outs
gs
ja
sahf
adc
cmps
mov
pop
sbb
sti
add
dec
dec
push
adc
retf
lahf
cmps
pop
or
mov
cmc
jmp
sub
jecxz
xor
rcl
rcl
out
cmp
mov
jnp
push
sbb
inc
xchg
jecxz
ds
pusha
ins
pop
xor
inc
retf
jno
out
xchg
sahf
cwde
mov
add
outs
sub
lds
jb
and
adc
pop
hlt
push
push
sti
push
sub
jl
les
mov
xor
jmp
les
jnp
jmp
push
jge
fistp
ds
loope
stos
inc
jecxz
dec
mov
icebp
push
mov
mov
mov
dec
call
push
jl
mov
addr16
loop
out
jbe
push
pop
rcl
mov
es
cmp
adc
out
loope
mov
sahf
dec
cli
adc
lock
inc
xchg
out
sbb
retf
sub
push
add
push
xor
jne
push
adc
out
movs
rcr
sub
dec
test
sahf
and
adc
xchg
push
and
fs
xchg
icebp
dec
test
ins
ret
mov
push
bound
std
dec
lods
inc
inc
xor
lods
jmp
(bad)
addr16
repnz
adc
add
in
xchg
xchg
xor
out
mov
sti
(bad)
popa
cmc
jmp
add
retf
xchg
mov
mov
ins
stos
(bad)
jae
movs
outs
in
fwait
mov
loopne
jae
xchg
std
sti
sar
and
lock
cmp
or
jns
std
retf
mov
mov
sub
mov
push
jg
xchg
sar
xchg
add
dec
sub
mov
lods
fwait
std
adc
sahf
enter
mov
cmp
sub
mov
mov
xlat
inc
aad
mov
cdq
mov
fwait
enter
pop
js
xlat
xchg
bound
fsub
and
stos
cmp
lods
inc
jp
das
movs
mov
gs
jecxz
aad
ret
sbb
aad
inc
sti
dec
daa
or
sar
shl
(bad)
push
fwait
(bad)
xor
jecxz
(bad)
and
xchg
les
int
out
test
pop
add
push
pop
enter
stos
out
or
push
cmp
scas
push
mov
inc
movs
adc
adc
ins
push
je
sbb
fcmovu
cmp
sub
mov
out
inc
addr16
sbb
push
pop
cmps
(bad)
cld
fcmove
inc
push
jne
dec
cmps
fsincos
sub
js
mov
adc
or
retf
retf
cwde
pop
in
jbe
out
cmp
popa
add
adc
mov
jae
push
mov
mov
std
out
lds
rcr
mov
data16
xor
pop
inc
fwait
(bad)
out
and
jmp
pop
in
and
or
leave
xor
mov
pop
xor
movs
jecxz
mov
sbb
and
cmps
popf
mov
xor
out
test
test
jno
inc
fadd
or
xor
lods
sahf
ss
and
lea
test
cld
adc
sub
pop
test
lock
jnp
sbb
iret
scas
fisttp
jno
inc
push
aas
shl
or
stos
mov
mov
cmc
jb
mov
push
out
scas
push
mov
or
fiadd
imul
jge
movs
xor
(bad)
retf
sbb
mov
retf
into
aam
xor
stos
hlt
jmp
sub
dec
stos
(bad)
aad
rol
stc
jp
scas
fsub
mov
add
fdivr
xor
cld
adc
push
daa
sub
mov
outs
bound
inc
add
mov
stos
jno
leave
iret
cmp
loope
xchg
outs
inc
dec
pop
and
pop
xor
mov
call
or
sti
pusha
sbb
dec
int
add
pop
outs
mov
mov
jg
pop
mov
cmp
cli
imul
fwait
mov
retf
and
hlt
mov
pop
pop
push
out
inc
push
loop
pop
and
cmp
lock
inc
cdq
mul
and
in
push
jge
ins
js
cdq
stos
fs
add
cmc
loope
gs
pop
ja
or
pop
xchg
fabs
xchg
and
dec
pop
(bad)
xchg
dec
mov
xchg
sbb
and
popf
jo
jnp
cld
jg
das
pusha
dec
rcr
fbstp
cld
mov
fisub
mov
fs
add
fmul
nop
mov
(bad)
mov
out
rcr
(bad)
fcom
cs
repz
and
cld
or
call
lahf
imul
or
pop
idiv
cmp
inc
sar
fisttp
clc
popf
jo
mov
adc
pop
int3
push
pop
in
inc
add
inc
inc
xor
xor
inc
rol
retf
lds
rcr
push
xor
ficomp
jb
mov
popa
ins
cmc
push
mov
test
leave
mov
inc
shl
xchg
cmp
mov
in
lods
lahf
fs
retf
add
add
(bad)
retf
out
fwait
mov
jle
aaa
(bad)
sub
cmp
lea
cmp
xchg
test
xchg
and
push
xchg
mov
mov
mov
jns
mov
xchg
dec
and
sbb
xor
push
repz
repnz
jmp
and
mov
mov
xchg
sbb
push
pop
jno
movs
mov
cmc
mov
dec
push
test
ret
push
or
pusha
dec
xchg
mov
push
cmp
repz
cs
(bad)
mov
rep
inc
std
iret
inc
sti
xor
xchg
add
sar
mov
xor
clc
mov
or
cmp
(bad)
ffree
pop
add
ss
and
cmp
mov
pop
lods
int
hlt
(bad)
jnp
mov
mov
lea
cld
outs
jg
inc
cmp
sbb
adc
dec
adc
push
ret
loopne
arpl
push
in
jp
inc
xor
and
mov
fmul
nop
dec
movs
arpl
mov
cmp
inc
mov
jo
gs
mov
sub
and
pop
in
sar
pop
xchg
std
xor
in
es
jmp
je
dec
push
mov
inc
pop
pop
adc
and
call
or
lods
test
mov
mov
(bad)
or
popa
scas
in
icebp
jmp
or
retf
rcl
or
stc
jecxz
cmp
scas
adc
daa
cmp
jbe
ds
ret
push
and
mov
aad
es
cld
or
test
and
ret
jns
xchg
dec
movs
rol
push
scas
dec
pop
pop
sbb
popf
lea
addr16
fs
div
inc
loop
xor
jnp
aas
test
and
adc
sar
jae
sbb
push
push
imul
lock
push
sub
cmps
or
in
stos
ds
mov
rol
movs
mov
cmp
test
adc
inc
add
fistp
xchg
pushf
push
xor
or
icebp
jl
gs
loope
out
xor
clc
add
test
stc
inc
movs
add
je
fcomp
xchg
cmp
cmps
out
loope
and
push
add
inc
jno
jge
mov
out
or
inc
cmp
mov
add
xor
mov
xchg
stc
sti
adc
xor
mov
cld
in
push
xor
repz
xor
xchg
jno
cmp
xchg
add
cmp
fldcw
jl
ins
sar
and
jmp
pop
jp
inc
das
dec
sbb
jle
(bad)
pop
test
int
enter
iret
imul
mov
dec
sbb
addr16
pop
xor
aas
add
nop
in
mov
dec
add
dec
dec
into
cmp
add
cmp
aas
popf
mov
mov
call
sbb
jo
loopne
cmps
dec
or
mov
ins
(bad)
sbb
aas
jo
adc
js
popf
fwait
sub
repnz
mov
daa
loop
xor
or
jecxz
mov
retf
faddp
fild
movs
in
stc
scas
sbb
test
popf
cmc
or
pop
ins
cmp
pushf
add
arpl
scas
add
cmps
aam
sub
pop
mov
jb
sub
js
pushf
ja
push
xor
cwde
out
loop
arpl
movs
inc
push
xchg
retf
pop
dec
dec
rcl
loope
test
adc
fs
fwait
or
adc
mov
ja
xchg
pop
mov
loopne
adc
inc
dec
jno
push
fucom
ret
leave
pop
shl
push
pop
out
aad
(bad)
xor
jl
adc
xlat
retf
push
or
(bad)
iret
in
or
xchg
leave
mov
xchg
int
int3
movs
das
mov
lods
sub
mov
jb
(bad)
std
pop
out
enter
pop
js
enter
aaa
sbb
mov
xchg
repz
fwait
jmp
pop
out
adc
cmp
pop
ficom
mov
inc
mov
shl
xor
mov
mov
xchg
sbb
pop
xor
and
jno
pop
jge
and
repz
push
push
xchg
and
fwait
mov
and
dec
jl
dec
mov
test
loope
mov
push
aaa
dec
mov
fisub
jmp
out
xchg
fistp
int3
inc
push
ret
mov
add
xor
cwde
stos
push
shl
sub
jg
scas
int3
jne
scas
fadd
jl
mov
xchg
popf
jnp
aaa
or
or
dec
xchg
cmp
retf
lahf
xor
jge
(bad)
pop
test
xchg
jbe
mov
or
icebp
adc
retf
push
push
mov
adc
fsub
mov
cdq
ss
jnp
push
retf
call
adc
xor
push
fiadd
push
inc
push
push
pop
sub
cmp
sbb
adc
mov
jno
out
ja
sahf
pop
jo
rol
in
shr
mov
push
(bad)
jmp
mov
pop
fisttp
mov
fild
test
jmp
fbld
pop
inc
cdq
inc
(bad)
ror
xor
and
push
test
adc
pop
addr16
gs
pop
mov
test
sar
lods
push
ins
inc
mov
jne
push
inc
xchg
and
not
or
add
test
scas
in
pop
xchg
jae
(bad)
pop
imul
fiadd
cmp
xor
push
cwde
push
fdivrp
xor
ror
cmp
dec
popf
mov
mov
xchg
imul
jmp
cmp
inc
ret
ins
sti
cmc
xor
jg
mov
mov
out
inc
xchg
pop
push
sbb
arpl
leave
inc
cwde
test
push
xchg
pop
xlat
or
inc
mov
fistp
mov
fidiv
mov
dec
dec
xor
jmp
(bad)
repnz
imul
jmp
lock
outs
cmps
dec
dec
push
jmp
mov
sub
push
ret
icebp
mov
ficom
pop
inc
mov
les
jns
xchg
mov
mov
idiv
ror
aas
mov
adc
xor
add
push
mov
sbb
sbb
shr
and
stc
into
movs
test
stos
xchg
mov
and
(bad)
pop
pop
int
mov
add
hlt
ret
pop
jmp
es
xor
or
(bad)
fnstenv
(bad)
test
movlps
imul
aaa
(bad)
aam
fwait
outs
pop
sbb
ja
inc
fstp
dec
mov
hlt
or
inc
jp
int
mov
out
jo
jmp
ja
sbb
stos
jne
gs
sahf
lods
and
(bad)
int3
loop
out
std
xlat
outs
loop
sbb
pop
jecxz
es
(bad)
dec
(bad)
std
mov
push
adc
dec
add
xchg
fidivr
adc
(bad)
mov
stos
(bad)
leave
add
mov
(bad)
js
xor
dec
jl
mul
mov
mov
and
cmp
inc
out
jnp
pop
nop
xchg
add
ins
xor
ss
hlt
cli
xor
pop
enter
mov
test
retf
add
mov
outs
dec
and
movs
push
lods
fdiv
jno
jmp
mov
mov
push
xlat
pop
sub
imul
gs
mov
pop
jne
fisttp
and
jecxz
dec
inc
mov
adc
sub
retf
test
sbb
out
sub
ret
fwait
mov
add
in
bound
sbb
in
aaa
inc
imul
jbe
xchg
jne
or
fdiv
fdiv
stos
push
xor
aaa
js
mov
sbb
mov
hlt
shr
lods
jmp
lds
mov
jo
repz
dec
scas
aas
inc
and
pop
mov
pop
rcr
pop
inc
sbb
sbb
xlat
jno
add
dec
sahf
call
lea
dec
fild
jo
sub
test
xchg
adc
std
popa
sub
inc
dec
push
clc
pop
clc
and
ins
shl
sub
sti
pushf
xor
retf
add
mov
shl
push
into
mov
(bad)
adc
ins
pushf
dec
sub
jno
push
ins
xlat
ret
xchg
outs
mov
fiadd
push
das
mov
dec
sbb
sub
sbb
mov
aaa
push
jle
inc
jbe
push
pop
add
jb
out
sub
popf
(bad)
(bad)
stos
pusha
and
inc
in
jg
ret
xchg
xor
neg
xor
aam
inc
rol
mov
loope
inc
ret
mov
paddw
mov
je
retf
fldcw
jp
in
dec
add
pop
mov
lock
out
test
popf
in
scas
push
mov
xor
adc
xor
aaa
outs
add
das
xchg
(bad)
mov
(bad)
sbb
mov
add
add
idiv
mul
(bad)
adc
int3
mov
sub
test
push
les
loopne
push
mov
adc
outs
mov
or
ins
mov
mov
or
cli
mov
ins
sar
loope
adc
mov
out
pop
xchg
ins
jg
xchg
movs
inc
mov
mov
das
mov
test
mov
mov
nop
mov
es
cmp
inc
enter
mov
sti
pop
int
fmul
or
jmp
mov
push
cbw
and
in
mov
adc
mov
inc
jp
dec
data16
out
(bad)
inc
rcl
hlt
push
mov
mov
add
add
mov
pusha
add
add
lock
cmp
or
iret
adc
test
leave
cld
mov
dec
xchg
daa
and
xchg
and
in
out
xchg
call
xor
sbb
(bad)
clc
sbb
sbb
dec
sub
or
sbb
add
arpl
jne
push
pop
push
pop
sub
jp
mov
sbb
xor
xchg
adc
daa
movs
addr16
mov
in
ins
push
pop
clc
(bad)
retf
mov
and
out
mov
sbb
dec
jmp
mov
std
call
xchg
sub
or
fdiv
cmp
and
pusha
and
stos
xchg
sar
lock
imul
sbb
cs
(bad)
daa
(bad)
out
jmp
mov
dec
mov
push
sub
sub
test
test
out
pop
or
jns
sub
or
or
imul
stc
aaa
pop
xor
mov
cmp
or
fsubp
fldenv
jne
call
xlat
xchg
mov
movs
and
xor
xchg
push
lods
and
loopne
xchg
addr16
inc
or
aas
push
fucom
or
mov
push
jae
ret
mov
in
adc
data16
leave
xchg
push
push
sbb
pop
push
xchg
out
push
jle
add
sub
cmp
lahf
sub
int
lahf
mov
cld
cmp
and
cmp
fild
gs
loopne
std
pusha
pop
add
mov
xchg
sbb
ret
push
push
test
stc
popa
mov
pop
out
movs
cmp
cdq
(bad)
mov
test
lods
(bad)
jge
aaa
(bad)
nop
arpl
pop
in
xbegin
shr
(bad)
dec
je
adc
mov
jg
retf
pusha
cmp
add
stos
mov
mov
int3
cli
bound
sbb
ret
mov
movs
sbb
mov
sti
xor
hlt
repnz
mov
inc
loopne
xchg
push
int3
movs
cmp
adc
cmps
test
push
ins
ret
xor
cmp
retf
xchg
mov
pop
fist
call
adc
inc
in
mov
jb
pop
loope
jae
mov
retf
xchg
push
nop
in
repz
sbb
or
mov
mov
xor
fdiv
xlat
xchg
dec
pop
pusha
lods
mov
xor
mov
in
loope
cmp
jno
fimul
pop
xchg
push
pop
shr
jmp
cwde
clc
push
jl
sub
push
cdq
mov
and
push
xchg
mov
pop
imul
mov
mov
xor
test
push
test
mov
rcr
jno
mov
repnz
pop
pusha
add
mov
aam
popf
mov
dec
movs
or
addr16
xor
(bad)
arpl
pop
adc
jp
loope
sbb
mov
hlt
rcl
mov
add
rol
scas
push
push
push
mov
jle
(bad)
sar
lods
mov
call
(bad)
cdq
loop
jb
add
dec
call
jp
stos
popf
icebp
or
jbe
cmp
repz
enter
inc
push
and
pop
xchg
or
aam
and
mov
sti
sub
int3
mov
sub
das
cmps
ja
ret
jmp
sub
push
mov
repnz
out
mov
movs
icebp
sub
sub
fcmove
xor
push
aam
dec
movs
jl
dec
mov
into
jno
jecxz
repz
fadd
fcomi
adc
adc
std
mov
movs
call
inc
dec
js
xchg
dec
jl
mov
xchg
aas
jmp
cmps
daa
inc
test
sbb
outs
push
pop
test
inc
mov
int3
mov
push
mov
fist
les
scas
pop
jl
mov
aam
call
push
(bad)
cmp
call
cmps
call
jle
mov
mov
xor
test
out
mov
in
jl
repz
pop
fldcw
ins
rol
mov
pop
mov
cmc
outs
xor
xor
ins
fisttp
xchg
dec
ficomp
cmp
jb
sbb
jno
mov
jmp
adc
cwde
cmp
pop
loope
push
push
lock
lahf
shr
subps
sub
inc
mov
pop
or
mov
jns
cmp
and
mov
jmp
or
fwait
(bad)
sub
inc
stos
je
pop
jmp
adc
mov
push
jg
cmps
cwde
imul
sub
test
cmc
xchg
fisttp
dec
jno
sahf
dec
cmp
(bad)
ins
nop
aaa
or
daa
outs
dec
mov
fisub
lds
jae
mov
enter
xor
ret
out
xlat
jl
mov
jg
out
ss
jmp
pop
dec
xchg
stc
or
loope
iret
cmp
into
les
xchg
lods
test
test
jmp
sbb
in
inc
(bad)
out
pop
and
xchg
inc
fucomp
or
jae
sahf
or
or
nop
es
add
ret
and
int
cmps
sub
mov
push
out
div
pusha
adc
add
(bad)
mov
sbb
push
jecxz
mov
sub
mov
cmps
movs
ds
js
xchg
or
retf
sbb
mov
push
add
div
cmps
aam
ret
test
cld
daa
adc
or
ja
rcr
int3
push
cmps
adc
push
sub
mov
aad
enter
test
xor
mov
cmp
pop
mov
dec
mov
enter
mov
into
call
scas
mov
push
bound
mov
jg
pusha
dec
outs
daa
scas
xchg
fnstsw
mov
(bad)
sar
mov
jmp
fs
data16
add
or
repz
or
xchg
jb
mov
pop
imul
mov
and
pop
push
loope
jo
adc
sub
lea
add
retf
mov
sub
in
fisub
adc
fwait
mov
cmp
sub
mov
outs
and
ja
dec
push
test
fdivr
dec
cs
add
int
push
ja
sbb
add
push
sub
popf
cmp
xchg
inc
pop
xor
test
test
(bad)
loope
in
loop
add
cmps
xchg
mov
stos
pop
push
push
pushf
in
(bad)
jno
pop
into
js
sub
pop
leave
ins
inc
push
add
in
pop
test
jmp
call
sbb
out
cs
jae
jb
xchg
ds
xchg
pop
pop
dec
addr16
jnp
cmp
adc
ins
repnz
loop
jmp
sbb
xor
lock
jb
pusha
dec
jp
mov
int3
sbb
xchg
cmp
cmp
icebp
shl
xchg
adc
cmps
xor
outs
mov
cmc
adc
fcom
sub
retf
fisubr
xlat
daa
adc
mov
mov
call
(bad)
icebp
into
cmp
jmp
and
xchg
adc
idiv
xchg
test
jo
and
xor
fsub
xchg
xchg
or
mov
scas
jg
lea
mov
jnp
add
clc
mov
(bad)
sbb
pop
pushf
hlt
xchg
mov
lock
xor
arpl
fld
xor
xor
sbb
fdivr
cmp
or
sbb
scas
fild
or
xchg
jno
or
or
dec
dec
popa
movs
sub
std
push
cdq
or
jns
xor
sbb
popa
jecxz
mov
enter
cdq
pop
pop
xor
mov
arpl
dec
fidivr
sub
jo
nop
push
mov
fld
push
(bad)
and
add
mov
int3
test
and
and
or
inc
ja
adc
pop
or
jg
push
mov
or
pop
sub
cmp
out
test
in
jg
test
shrd
jns
ror
mov
data16
lods
mov
dec
or
inc
adc
loop
adc
adc
cmps
mov
and
ficom
bound
mov
sub
adc
jns
js
or
scas
xlat
jb
sbb
inc
push
inc
aas
fsubr
(bad)
fwait
lea
sbb
div
lahf
push
adc
outs
enter
cmp
jmp
dec
dec
sub
xchg
mov
(bad)
leave
aaa
inc
loope
jp
jnp
arpl
ret
retf
ins
cmp
inc
stos
sub
loope
call
pop
pop
and
icebp
cmc
arpl
xor
pop
call
loopne
push
xor
adc
cmp
sub
ret
fcomip
aas
pop
ror
call
out
jl
cdq
stos
test
mov
jmp
mov
cmp
dec
ins
movs
jge
lods
les
add
cmc
push
push
xor
std
retf
mov
dec
mov
cmps
scas
inc
je
loop
and
push
or
std
mov
xor
and
sub
sub
mov
ss
loop
movs
xchg
inc
push
jmp
mov
call
jle
mov
(bad)
sub
and
ficom
pop
jmp
jle
xchg
pcmpgtw
mov
test
lds
les
neg
sbb
mov
and
xchg
inc
hlt
dec
stc
sub
adc
ins
pop
jnp
mov
or
cdq
out
into
shl
out
les
popa
fisubr
test
cmp
adc
dec
mov
jmp
out
dec
retf
sbb
jno
inc
fs
jns
daa
inc
daa
and
cli
jp
xchg
cmp
xor
cmp
push
sahf
mov
call
lds
push
adc
imul
fiadd
push
iret
icebp
sti
gs
leave
add
outs
cdq
push
inc
or
fidivr
sahf
dec
fadd
out
movs
cdq
outs
cld
(bad)
cmp
ret
add
stos
ror
mov
inc
rcr
imul
shl
call
in
mov
out
sbb
mov
pop
es
daa
mov
cmp
ss
inc
jb
enter
leave
mov
push
mov
mov
mov
lods
leave
sbb
pop
add
arpl
inc
inc
jb
scas
sbb
add
test
std
sub
icebp
push
xchg
xor
and
xchg
cmp
daa
cmp
and
enter
add
test
cli
cs
jle
cmps
push
and
jmp
cmp
stc
push
(bad)
stc
outs
push
bound
sub
xor
or
pop
cs
or
hlt
dec
xchg
jmp
cmp
and
push
rcr
std
and
and
cld
out
cmp
jg
mov
into
outs
and
loopne
in
jecxz
sub
ret
cmps
mov
pop
and
pusha
adc
ror
pop
xchg
cmp
ret
pop
or
sbb
push
and
fwait
cmp
xlat
ret
add
std
xor
ret
je
cmp
movs
dec
jmp
mov
das
push
test
mov
cmp
popa
jnp
mov
xor
mov
mov
mov
adc
mov
and
sbb
jae
mov
pusha
add
xlat
ror
mov
pop
sbb
bound
xor
mov
mov
rol
mov
push
xchg
les
mov
nop
push
imul
aaa
mov
fs
ins
jo
mov
push
fild
sub
jo
adc
sar
shl
mov
dec
dec
dec
test
xor
dec
rcl
bound
jl
fchs
mov
in
sbb
jp
(bad)
out
xchg
mov
cmps
or
adc
cmp
and
push
adc
jb
cmc
inc
rcr
push
loop
push
sahf
stc
adc
jae
(bad)
xchg
jl
push
out
adc
(bad)
dec
mov
fcom
loop
lods
xchg
in
pop
pop
adc
clc
mov
add
sbb
xchg
cmp
sbb
call
pushf
xlat
xchg
(bad)
jmp
fnsave
shl
jg
dec
or
mov
call
out
scas
and
pop
nop
mov
dec
mov
stc
pop
scas
loop
mov
push
adc
mov
inc
xchg
xchg
jge
mov
add
leave
xacquire
jae
rol
jmp
sbb
das
xadd
std
and
xlat
jmp
jmp
inc
mov
jmp
imul
cmps
repnz
adc
cmc
std
xlat
adc
mov
rcr
and
(bad)
bnd
cmp
pushf
sub
in
sub
add
repz
xor
adc
fbstp
rcr
test
mov
sub
idiv
sahf
ret
dec
add
add
arpl
sbb
mov
outs
repz
scas
pop
jle
push
clc
inc
mov
daa
movs
pop
mov
adc
sub
mov
rol
xchg
cs
je
or
int
ret
stos
repz
jp
xchg
ins
inc
and
and
popf
xchg
lods
adc
test
fstp
lock
mov
push
dec
adc
fiadd
mul
stc
sbb
arpl
pusha
enter
push
push
movs
shl
mov
dec
lea
xlat
dec
and
(bad)
sbb
pusha
add
dec
imul
sub
hlt
pop
ret
and
inc
cmp
mov
mov
mov
repnz
jge
push
scas
pop
inc
dec
out
mov
out
cmp
mov
or
mov
out
mov
xchg
test
dec
push
dec
sbb
sbb
mov
pop
aas
iret
cmp
xchg
add
mov
test
dec
movs
js
push
retf
(bad)
cmp
int
mov
push
cld
dec
dec
mov
rcr
dec
outs
cmp
ror
push
lea
fstp
pop
fadd
stc
popf
push
push
or
inc
xor
popa
(bad)
xlat
cmp
out
push
mov
jbe
push
mov
sub
mov
aad
(bad)
in
fldenv
scas
add
bnd
lock
push
pop
cmps
pop
call
sbb
pop
xchg
ds
and
fmul
aam
rol
cli
cmp
int
in
sar
mov
in
nop
sbb
mov
std
pushf
xor
adc
lds
or
adc
loope
add
xchg
xlat
and
mov
inc
sub
mov
dec
add
jne
mov
cmp
int3
es
cmp
lahf
push
bound
scas
aas
inc
dec
stos
add
dec
mov
out
add
stos
lods
rol
adc
in
cs
dec
inc
in
cmp
dec
mov
pusha
retf
add
sbb
add
(bad)
or
dec
(bad)
das
imul
imul
scas
pop
movs
clc
cmp
add
jg
repz
cmp
adc
cmp
and
pop
in
pop
inc
push
cmp
mov
jns
pushf
fadd
lods
ds
ret
ins
pusha
or
fwait
adc
cdq
lock
out
mov
mov
icebp
hlt
jle
sub
lds
cwde
scas
sub
int
cmp
inc
inc
enter
cmp
push
xor
jge
mov
xchg
scas
push
push
lea
jmp
sub
icebp
cwde
pop
xor
shl
sub
xchg
les
fwait
sub
mov
daa
ins
adc
popf
popf
pop
cmc
fcomi
mov
in
adc
push
pop
ficomp
and
cmp
inc
out
outs
ror
repnz
pop
sub
aam
cdq
loope
pop
mov
in
mov
icebp
pop
mov
sub
jge
sbb
cmps
add
cmp
ins
add
pop
xchg
xor
neg
jnp
ds
fld
int3
xchg
(bad)
cdq
push
adc
mov
call
xor
ret
and
jmp
jg
clc
stos
mov
je
je
imul
data16
inc
dec
xchg
call
and
test
cmp
sbb
xchg
retf
pop
rcr
lds
ret
mov
mov
xor
xor
jnp
mov
adc
rcr
cmc
loope
adc
mov
(bad)
movs
inc
in
cld
retf
fs
cmp
test
loop
sub
int
loopne
sub
push
inc
loope
sti
push
pushf
lock
mov
and
mov
mov
xor
xor
xchg
xor
jmp
(bad)
loope
pop
imul
pop
inc
cwde
jno
daa
loopne
mov
call
mov
cmc
ret
loopne
ins
xchg
retf
lea
sub
ins
movs
(bad)
lea
push
inc
fcomp
xlat
out
jbe
fild
push
ret
stc
mov
xchg
int
pop
or
aad
ret
loopne
sbb
pop
clc
(bad)
mov
test
in
pop
stos
cmp
sbb
dec
stc
mov
cmp
repnz
push
dec
(bad)
adc
mov
mov
and
mov
or
xchg
inc
mov
cli
ins
xchg
mov
xchg
lock
xchg
retf
icebp
in
dec
sar
stos
in
icebp
cmps
inc
and
cmp
jp
fwait
xchg
dec
scas
cmp
in
cmps
and
mov
fdiv
sub
jae
repnz
jo
cmc
cmp
js
in
test
mov
popa
mov
mov
es
mov
(bad)
cmps
dec
sbb
cmp
cmp
lods
ret
enter
jno
mov
ins
pop
retf
repnz
(bad)
cmps
pop
ret
fisub
add
sar
or
cmp
aas
xor
das
dec
or
pushf
aad
loop
jle
mov
jo
sar
gs
(bad)
or
push
xor
xchg
fwait
ds
push
stos
inc
mov
es
int3
dec
add
inc
inc
imul
gs
push
aas
addr16
fisttp
xchg
cs
repz
pop
mov
(bad)
sbb
cmc
sbb
fcomi
sbb
loope
gs
jmp
retf
retf
xlat
cld
adc
cmp
dec
sub
xchg
pop
cmp
lahf
lahf
cmc
sbb
repz
std
xor
adc
loope
sub
pusha
js
cmp
outs
xchg
sub
or
leave
dec
xchg
lock
pop
pop
inc
(bad)
popa
or
jae
adc
fiadd
cld
add
aas
lods
enter
in
add
(bad)
out
and
loopne
(bad)
stc
test
inc
ins
push
adc
je
sti
jb
test
and
jg
stos
inc
jae
inc
jbe
mov
jo
mov
mov
(bad)
(bad)
test
jnp
sahf
sub
cmp
ret
mov
arpl
mov
mov
rcr
lods
pop
jno
lods
rcr
test
add
inc
push
(bad)
jp
test
push
out
das
xchg
mov
add
xchg
popf
in
outs
cs
mov
dec
aas
sub
pop
lock
push
dec
loope
(bad)
push
(bad)
jmp
mov
std
ins
mov
loopne
xor
push
inc
test
jnp
jge
dec
sub
jo
ficom
sti
cmc
xchg
stc
mov
rcr
jb
in
(bad)
loope
mov
mov
sbb
pop
push
dec
scas
or
jbe
push
out
les
sbb
pop
adc
push
mov
mov
mov
pop
cmp
sub
mov
outs
lods
or
xchg
mov
cld
lods
xor
dec
into
or
or
xchg
sti
add
cwde
cmp
jno
pop
in
clc
je
sub
stos
(bad)
call
xchg
push
xchg
aaa
sbb
out
mov
mov
mov
psrld
push
es
(bad)
mov
sub
test
xchg
add
mov
retf
and
mov
scas
mov
push
pop
sbb
in
jmp
jne
mov
jnp
adc
mov
xchg
dec
fs
jbe
push
or
int3
mov
cmps
loopne
loop
mov
jmp
out
pop
outs
mov
dec
xchg
cld
adc
mov
test
mov
jae
movs
xchg
xlat
xchg
das
inc
mov
adc
cmps
mov
pop
jns
pop
and
cmps
shl
jge
ins
ficom
mov
clc
push
mov
xor
fld
cdq
imul
sahf
xchg
pop
add
data16
idiv
test
imul
in
outs
fs
mov
mov
cdq
cmc
jge
retf
lea
jbe
xor
xchg
push
cli
add
js
outs
inc
movs
dec
mul
in
test
xor
push
inc
cmp
push
xchg
retf
cli
inc
jnp
(bad)
ret
inc
adc
mov
mov
jo
dec
ficomp
shl
sbb
jnp
fld
adc
jb
ret
cmp
ss
dec
push
ins
xchg
invd
xor
ins
push
and
add
repnz
aas
in
fld
js
cmps
mov
loop
and
adc
dec
(bad)
fld
ja
cmp
push
mov
scas
test
cmp
xchg
shl
mov
inc
push
cmp
jge
fs
jno
mov
sbb
js
jmp
inc
jmp
enter
bound
inc
js
outs
lods
test
mul
and
add
adc
outs
jmp
push
lea
js
inc
test
loopne
call
cmps
loopne
mov
outs
nop
dec
push
xor
pop
int3
retf
das
cmp
mov
clc
mov
lsl
clc
add
mov
mov
repnz
sbb
sub
xor
aaa
mov
push
ins
retf
xchg
xchg
scas
test
test
sbb
mov
jmp
imul
add
scas
movs
pushaw
out
scas
xchg
lods
ret
jns
fwait
and
mov
xor
sbb
and
jmp
test
movs
in
test
or
ret
out
outs
xchg
cdq
neg
pusha
lods
adc
sbb
loopne
sbb
xchg
or
les
aad
inc
ret
je
inc
pop
mov
imul
shl
(bad)
je
out
outs
fstp
and
outs
(bad)
mov
mov
push
inc
xchg
xchg
inc
aam
push
stos
repnz
mov
hlt
iret
stos
fnstsw
lds
lahf
xor
sbb
mov
push
pop
and
pop
ins
mov
cli
pushf
pop
mov
jnp
xchg
pop
push
cmp
sub
mov
jge
movs
fmul
mov
daa
jl
xchg
pop
jl
addr16
(bad)
std
bound
pop
sbb
dec
not
cld
xchg
adc
pushf
aas
stos
inc
push
mov
rcr
bnd
jecxz
cmp
in
je
mov
loopne
xchg
repz
sub
xchg
(bad)
fisub
push
lahf
cmp
dec
jne
mov
cwde
xchg
pop
call
mov
add
sbb
mov
mov
cmp
cmc
retf
scas
push
(bad)
push
pusha
adc
jmp
mov
xchg
sub
jmp
call
test
in
xchg
call
inc
int
cld
mov
mov
xlat
cmp
cmps
cwde
scas
add
add
adc
les
sar
sub
outs
ror
call
cmp
jno
push
(bad)
jnp
movs
mov
cmp
mov
xchg
sti
cmp
jnp
xor
adc
and
and
mov
jl
add
mov
add
test
xchg
xor
in
(bad)
mov
dec
push
cld
or
std
test
mov
imul
(bad)
or
or
dec
inc
mov
sbb
add
cwde
int
push
mov
rcl
xchg
jp
mov
inc
leave
and
sub
test
shl
pop
add
int3
sti
sahf
mov
pop
xchg
pop
xlat
inc
and
test
outs
adc
fidiv
push
ret
pop
repz
enter
add
(bad)
jns
xor
xchg
mov
jbe
cmp
mov
sbb
out
pop
inc
pandn
push
fcmove
outs
push
xchg
inc
dec
stc
cmps
das
enter
sbb
cmc
rcr
or
add
cmp
sar
xchg
div
retf
out
imul
adc
arpl
repnz
rcr
hlt
bswap
mov
les
fld
in
add
fiadd
mov
js
repnz
in
mov
movs
push
ja
div
es
sub
loope
inc
mov
or
jmp
dec
lahf
add
and
and
iret
movs
scas
out
aad
xchg
xor
lods
clc
pop
add
cli
sbb
cld
out
add
(bad)
dec
mov
push
(bad)
xor
push
scas
and
push
mov
xor
and
dec
adc
and
std
ja
fwait
sti
push
pop
fadd
stc
fsubr
cmps
sub
je
mov
repz
and
or
jecxz
div
inc
hlt
mov
sbb
sbb
mov
cmp
jle
mov
test
xchg
dec
or
ss
sub
add
call
(bad)
iret
mov
push
inc
clc
or
push
or
aas
(bad)
xor
repz
popf
push
pushf
dec
xchg
gs
inc
mov
clc
fld
js
or
fsubr
in
and
cli
inc
cmp
std
pop
cmp
adc
jns
sbb
std
sar
and
xchg
out
mov
mov
int3
movs
adc
ret
sar
mov
sub
sbb
jb
data16
ds
mov
mov
js
xor
xchg
gs
test
push
cwde
hlt
push
dec
imul
mov
mov
fisttp
das
daa
stos
adc
mov
xor
scas
xchg
cmp
pop
sbb
lods
clc
stc
pop
bound
lahf
pop
mov
jmp
pusha
mov
test
dec
mov
mov
ror
mov
jns
jmp
hlt
popf
pop
cld
popf
hlt
sahf
dec
arpl
sbb
mov
add
popf
mov
imul
pusha
xor
push
jo
cli
dec
cmp
loopne
stos
or
adc
xor
repnz
fisttp
sub
rcr
icebp
loop
push
movs
sti
cmp
test
in
loope
cmp
cs
inc
jnp
std
adc
adc
mov
adc
test
mov
fsub
fild
fst
or
mov
xor
or
jae
jmp
jl
test
mov
jb
test
push
jae
xchg
mov
sub
(bad)
jle
int3
lods
fucom
mov
add
adc
stos
pop
xor
inc
(bad)
push
cld
mov
les
add
dec
or
clc
loop
test
sahf
jns
daa
xchg
push
pop
push
mov
in
cmp
jmp
pop
out
rep
(bad)
into
enter
jbe
jle
mov
push
hlt
ja
push
scas
xor
jmp
push
sub
loope
sbb
iret
call
bound
and
inc
mov
push
out
adc
push
jno
je
sub
inc
cmp
inc
sub
(bad)
sahf
xlat
repnz
mov
and
imul
adc
mov
mov
sbb
xor
js
jle
xchg
(bad)
sti
push
int
inc
sbb
cmc
push
cli
stc
repz
xchg
ss
dec
icebp
jge
xchg
jbe
or
or
jno
sub
xchg
mov
outs
sub
and
jge
sbb
mov
jmp
adc
push
mov
mov
xchg
sub
test
js
mov
loop
mov
lods
aas
sbb
lods
xchg
call
inc
push
jmp
ja
mov
mov
adc
test
sbb
adc
mov
stos
call
push
sub
nop
stos
mov
mov
outs
pop
in
test
mov
stos
aad
ja
out
add
gs
push
test
sub
enter
nop
add
dec
fs
or
(bad)
and
std
sbb
mov
mov
add
sti
movs
push
hlt
mov
mov
mov
lock
or
ss
mov
punpcklwd
push
call
test
or
outs
inc
call
mov
shr
test
pop
cdq
popf
movs
pusha
xchg
pop
mov
popa
scas
lods
pop
mov
mov
jb
es
outs
sahf
pusha
(bad)
ficomp
ja
push
dec
mulps
or
pushf
scas
movs
movs
xor
cld
iret
out
adc
les
retf
or
pop
(bad)
cld
or
ins
sub
push
(bad)
mov
mov
daa
jg
movs
pop
mov
hlt
push
lahf
pop
mov
das
cld
repnz
or
sub
in
push
lds
sub
xor
xchg
aad
lods
add
and
sbb
movs
adc
in
fwait
out
mov
push
cmp
add
ror
cdq
pop
outs
push
xchg
mov
(bad)
(bad)
mov
adc
xor
into
call
outs
les
les
xor
xlat
repnz
sbb
test
imul
leave
dec
rcl
in
ds
mov
sbb
push
ins
stos
cdq
pop
inc
jl
jl
rcr
xor
test
pop
icebp
dec
add
and
adc
jns
or
xlat
adc
jns
lahf
push
adc
mov
ret
int
cmp
jmp
jb
je
(bad)
ins
repz
or
or
pop
mov
xchg
and
aas
pop
push
add
sti
jp
scas
and
add
xchg
push
adc
dec
mov
addr16
inc
lock
push
int
imul
gs
sub
in
mov
in
pop
push
xor
mov
cmp
cwde
sti
outs
sbb
xor
adc
retf
and
fadd
sar
push
test
fcomp
mov
add
or
jl
or
lock
int3
fstp
push
sub
mov
fcmovnbe
jle
nop
mov
das
mov
movs
inc
push
xchg
fwait
call
sub
in
pushf
jp
out
xor
mov
sbb
xchg
es
aad
xchg
push
mov
(bad)
fdiv
cmc
sbb
in
sbb
adc
xchg
in
inc
aam
repnz
dec
jo
cmp
mul
mov
mov
add
stos
mov
in
fimul
dec
and
pop
loop
mov
test
dec
jge
popa
clc
or
popf
outs
jmp
push
fist
and
(bad)
xor
xchg
push
fidiv
lods
add
std
hlt
push
sub
add
mov
gs
adc
(bad)
test
icebp
ror
in
ss
push
rcl
imul
inc
mov
lods
jo
les
lahf
in
loopne
jo
jne
mov
jne
loopne
loop
imul
push
(bad)
in
cmp
out
test
or
mov
push
ins
push
shr
call
into
push
pop
sbb
idiv
inc
ret
fdivr
sub
mov
ror
mov
outs
ins
and
daa
fist
aas
in
test
mov
xchg
xor
mov
mov
add
pop
les
pop
sub
fsub
movs
mov
hlt
test
pop
sbb
les
cmp
mov
and
mov
push
mov
jo
out
sub
stos
xor
aaa
aaa
(bad)
or
push
hlt
jp
inc
mov
cmps
xchg
cmps
pop
aam
sub
stc
adc
jbe
xor
mov
repnz
inc
cdq
jmp
push
lock
test
aam
dec
je
xchg
repz
cmp
adc
rcr
fisttp
in
and
jmp
dec
iret
mov
xor
adc
add
(bad)
jl
mov
inc
jne
fs
fiadd
or
adc
inc
and
shl
mov
xor
add
adc
movs
xor
retf
ficom
in
adc
jns
jnp
cmp
dec
fst
jl
hlt
mov
arpl
mov
adc
xchg
xchg
jae
loop
xor
movs
xchg
(bad)
jbe
adc
mov
inc
mov
cmp
shl
inc
fcom
test
mov
jl
xchg
(bad)
xor
sbb
retf
fsubp
or
adc
sub
adc
pop
int3
out
js
push
std
sub
ret
mov
mov
mov
mov
add
mov
retf
and
jecxz
and
sahf
(bad)
stc
movs
dec
dec
in
popa
in
add
xor
inc
(bad)
out
jae
clc
cmp
fucom
mov
imul
jmp
js
aaa
jle
nop
test
hlt
imul
aam
push
mov
adc
sbb
js
mov
and
xchg
adc
xor
and
lock
sar
xchg
clc
scas
inc
jns
pop
sub
dec
sar
jnp
jno
inc
leave
lods
mov
add
adc
ss
push
inc
inc
push
mov
mov
sub
lahf
sub
arpl
mov
dec
cli
lahf
push
jb
dec
sub
mov
jg
sub
fsub
xor
leave
jg
sbb
clc
adc
imul
imul
je
(bad)
outs
scas
fwait
(bad)
cli
(bad)
lds
cli
pop
mov
xor
nop
sbb
(bad)
fcom
push
int3
push
imul
cmp
jne
fimul
dec
shl
mov
inc
sti
dec
shl
fdivr
xor
(bad)
aaa
movs
ins
adc
movs
push
stos
ror
xor
xchg
call
fdivp
add
add
pushf
jne
daa
xor
and
int3
add
dec
xchg
stc
mov
idiv
xchg
xor
sub
jae
mov
mov
pop
loope
clc
arpl
adc
push
dec
jp
pusha
imul
ret
cmps
push
xor
mul
or
in
cmp
push
adc
(bad)
fcmovbe
inc
iret
iret
aas
or
sub
dec
out
leave
(bad)
mov
add
call
call
jmp
dec
mov
sar
ss
fnstenv
inc
dec
dec
scas
imul
mov
cld
inc
mov
test
adc
(bad)
mul
test
loopne
js
xchg
xchg
jb
leave
mov
(bad)
retf
pop
fistp
sahf
or
pop
push
add
sub
nop
cmp
pop
cmps
gs
pop
(bad)
imul
push
lods
inc
stos
and
enter
shr
out
call
out
jmp
sbb
push
or
mov
push
stos
dec
(bad)
fld
adc
clc
xor
pop
loop
jnp
jg
xor
pop
sbb
push
cdq
mov
add
mov
cmps
repz
pop
mov
jl
imul
mov
and
dec
push
and
mov
xchg
(bad)
call
mov
dec
popf
mov
sub
dec
and
call
shr
or
add
jg
imul
push
add
push
test
add
jae
mov
xor
je
pop
mov
xlat
ds
ss
dec
les
daa
shl
dec
loope
adc
test
pop
scas
aaa
add
or
or
in
jbe
ss
or
retf
sahf
clc
mov
shl
bound
or
mov
int
std
scas
mov
and
fmul
nop
retf
xor
or
inc
add
arpl
in
leave
sbb
cmp
adc
cwde
cmc
or
mov
mov
pop
pop
inc
test
pusha
fidivr
ror
pop
clc
pop
mov
fnstenv
vxorps
hlt
sub
push
push
int3
pop
or
imul
jo
into
add
mov
adc
retf
lods
adc
retf
lahf
aas
xchg
lods
in
xor
loopne
stc
sti
xchg
movs
movs
jmp
bound
ret
cmp
data16
cmp
inc
test
pop
pop
xchg
retf
mov
mov
lea
mov
das
or
out
imul
mov
sub
cmp
xor
gs
jmp
std
sti
cmps
out
sar
clc
aad
movs
fcmovnb
lock
aas
addr16
and
jmp
push
sbb
jne
xor
rol
add
jo
cmp
shl
pop
and
cmc
(bad)
jge
sub
dec
mov
test
inc
sbb
jnp
call
repz
adc
xchg
and
push
dec
cdq
arpl
js
jge
adc
test
mov
dec
mov
mov
pop
sub
push
mov
xchg
mov
out
adc
mov
mov
push
fst
jns
clc
xchg
je
pop
inc
xor
cmp
cwde
and
pushf
xchg
xchg
int
imul
dec
xor
rcr
das
cld
mov
inc
cmps
mov
pop
sbb
sbb
lahf
in
test
outs
push
sub
mov
adc
xchg
call
adc
jne
inc
call
or
test
retf
push
add
sbb
add
fwait
mov
popf
in
mov
paddsb
adc
xchg
and
sub
popa
imul
cmp
aas
in
mul
or
mov
neg
enter
inc
outs
pop
mov
xchg
push
fmul
mov
cwde
cdq
or
xchg
lods
jg
lods
icebp
dec
into
aad
cwde
push
sub
adc
(bad)
mov
call
icebp
inc
or
daa
popa
nop
mov
xchg
ds
jp
pop
test
lods
cli
mul
pop
in
inc
shl
sbb
or
out
add
fimul
lea
xchg
jno
ins
inc
rcl
jbe
push
jne
jle
scas
mov
retf
xlat
shl
cmp
je
sub
rcl
movs
nop
sti
scas
mov
pop
pop
and
inc
call
inc
pop
dec
dec
jo
daa
inc
(bad)
mov
stos
adc
jecxz
shl
push
jg
ret
loop
or
push
rep
or
mov
xchg
ds
fbld
popf
or
std
cmps
sar
xchg
inc
lods
push
mov
inc
mov
clc
push
mov
out
mov
jae
jl
adc
dec
mov
xchg
add
mov
fdivr
jno
xor
leave
inc
inc
pop
mov
jmp
pop
xchg
pop
mov
or
jg
mov
mov
imul
sbb
mov
outs
jmp
push
jns
fidiv
adc
ds
cli
xchg
fisttp
xchg
sbb
std
sub
sbb
retf
sbb
test
xor
loope
ins
pusha
xchg
mov
or
push
in
clc
xchg
aas
xor
push
pop
lds
(bad)
mov
push
cmp
or
addr16
push
ins
aad
jnp
pusha
out
aaa
adc
repnz
sub
mov
mov
imul
push
(bad)
test
(bad)
sbb
mov
cmp
stos
inc
out
mov
mov
or
xchg
jae
jg
rcl
push
push
loopne
leave
xchg
and
lock
popa
mov
lods
clc
(bad)
call
in
adc
inc
jp
pushf
cmps
lds
(bad)
cmp
jno
ja
lods
sub
sub
pop
sub
lahf
dec
iret
movs
dec
xchg
stc
stc
jnp
fwait
pop
cmc
ins
jge
cmps
(bad)
lods
bsf
inc
pop
cmc
cmp
mov
in
and
push
js
inc
xor
clc
push
imul
call
or
lods
sti
loope
sub
mov
loope
cld
shr
sti
dec
jmp
inc
push
pop
mov
stos
push
rol
ror
sbb
jb
(bad)
fnsave
pop
out
pusha
popf
fnsave
push
daa
(bad)
jo
jle
xor
add
movs
pop
dec
cmc
test
adc
fwait
out
mov
dec
jmp
stos
adc
mov
push
dec
jae
out
imul
aas
fsubr
jae
dec
push
or
xor
mov
pop
and
jl
sbb
in
imul
frstor
xor
mov
sub
cmps
das
cli
enter
rcl
push
xlat
pop
jb
es
lea
jo
or
lea
adc
sbb
cli
mov
push
lods
sar
jle
cwde
int3
ins
je
rcr
push
dec
nop
das
add
sahf
cmps
and
fnsave
xchg
into
add
pop
outs
mov
mov
mov
ret
push
in
mov
adc
jecxz
jge
popa
or
cdq
div
not
adc
pop
icebp
sub
xchg
push
and
pop
bound
mov
xor
imul
out
jl
inc
aaa
movs
test
mov
sub
pop
pop
out
movs
mov
dec
stos
pop
(bad)
dec
xor
pushf
fistp
sbb
mov
jo
dec
and
push
(bad)
jp
push
cwde
push
imul
retf
mov
lock
push
jp
xchg
xchg
jmp
jmp
(bad)
popa
xchg
pusha
vmwrite
dec
adc
or
sbb
js
jge
fldcw
jge
pop
in
dec
rcr
pop
add
icebp
fs
pop
push
adc
xchg
scas
xor
inc
xor
gs
mov
xlat
push
xchg
movs
cdq
add
int3
sub
sti
rcl
adc
dec
push
movs
jne
mov
jecxz
sbb
inc
in
dec
iret
xchg
pop
inc
and
ja
loopne
push
cs
stos
mov
pop
dec
or
mov
cmp
push
nop
aam
pop
sbb
pop
out
test
adc
push
mov
loopne
xchg
cmp
dec
imul
repz
dec
pusha
jbe
add
or
or
and
das
push
mov
nop
push
dec
pusha
mov
outs
in
push
xchg
dec
fstp
(bad)
ror
mov
std
pop
test
xor
shr
or
imul
xchg
mov
rcl
out
sbb
cdq
dec
mov
jecxz
shr
loop
and
jnp
int3
inc
lahf
mov
mov
cmp
repz
scas
pop
aas
into
push
mov
xchg
cmps
mov
or
cld
sahf
das
mov
add
lahf
xor
or
(bad)
stos
lds
mov
es
dec
adc
ret
inc
std
sub
sbb
in
xchg
cmp
add
mov
or
mov
xchg
sbb
das
pop
pusha
cmps
inc
test
xchg
dec
adc
ret
aaa
push
scas
mov
loope
jge
les
in
adc
sub
jmp
(bad)
int3
retf
cmp
inc
cmc
mov
xchg
pop
jnp
mov
add
cmp
xchg
data16
ret
in
repnz
pop
and
lahf
xchg
dec
rol
pop
mov
stc
xor
cmp
ret
mov
or
adc
je
dec
jp
cld
cdq
cmp
stc
pop
sub
fist
out
fmulp
aas
test
cmp
or
(bad)
cld
cmp
mov
push
call
fldlg2
inc
mov
cli
imul
dec
adc
(bad)
or
arpl
mov
push
xchg
mov
(bad)
xchg
inc
push
and
loopne
sbb
add
mov
and
pop
dec
xchg
dec
fnstcw
test
xor
xchg
in
cmps
lock
sbb
mov
dec
jmp
rcl
push
jbe
mov
mov
push
jmp
jmp
dec
inc
add
lahf
js
es
sti
movs
leave
push
mov
out
in
mov
(bad)
dec
adc
fld
push
fs
pop
(bad)
lods
ret
in
nop
hlt
mov
imul
adc
daa
retf
dec
(bad)
fidivr
pop
mov
sahf
hlt
cmp
out
or
and
push
mov
div
or
cmp
mov
jmp
(bad)
ja
and
push
outs
inc
fs
loope
std
aaa
es
xor
cdq
mov
jmp
jb
int
xor
sbb
fnstsw
adc
xchg
mov
or
mov
les
xchg
lock
push
jns
stos
movs
test
dec
retf
or
pushf
add
sub
mov
movs
in
mov
mov
popa
inc
xchg
outs
(bad)
cmc
pop
nop
cmp
test
cmp
outs
adc
scas
(bad)
cmp
pop
into
les
aaa
sub
mov
add
sahf
ss
and
sbb
push
iret
sub
xor
loope
mov
out
stos
cmp
push
addr16
iret
fcom
jno
arpl
jne
pop
in
gs
(bad)
fnstsw
packssdw
pop
xchg
addr16
dec
xor
stc
jecxz
ja
lods
inc
push
sbb
fnstsw
push
cmp
test
or
sbb
cmp
cmc
mov
cdq
(bad)
das
rcl
int
xor
shl
ins
push
mov
(bad)
mov
and
retf
xchg
mov
jo
xor
fistp
inc
cmps
es
push
cmps
mov
lahf
add
or
cs
fiadd
jp
cld
ror
and
jmp
sbb
cmp
jae
mov
or
mov
sahf
xchg
add
aaa
mov
or
push
dec
jae
inc
arpl
cld
mov
pushf
and
push
jae
sbb
or
sub
sub
add
xor
push
call
mov
rcr
dec
mov
jge
aad
add
aad
(bad)
cdq
pop
out
(bad)
mov
aam
mov
push
rol
movs
out
shr
xchg
pop
xor
jl
mov
mov
jno
fimul
mov
inc
bound
add
and
pop
mov
jle
xchg
add
mov
and
addr16
mov
sahf
xor
in
mov
aas
sahf
shl
mov
mov
enter
imul
ins
lods
and
div
in
int
movs
stos
sti
ret
les
stc
jns
mov
mov
call
cld
retf
sub
or
add
and
daa
mov
cli
dec
add
fs
xchg
sbb
and
xor
shr
cmc
pop
xor
lahf
and
mov
mov
ins
jmp
arpl
mov
and
scas
jl
cdq
cmp
pop
shl
add
js
jb
mov
arpl
inc
and
lahf
cli
adc
aam
retf
adc
add
imul
ss
mov
pop
jae
gs
xchg
iret
(bad)
scas
cmp
pop
xchg
sbb
lock
add
sub
mov
pop
pop
sub
or
mov
adc
scas
sbb
stc
ret
mov
mov
mov
sbb
cs
call
lods
daa
mov
popa
pusha
imul
aam
add
(bad)
aas
mov
sub
dec
mov
and
push
stos
ja
popa
scas
fcom
mov
and
mov
adc
enter
push
ret
sbb
sub
and
sbb
pop
inc
xor
inc
pop
mov
pmullw
sahf
std
xor
adc
(bad)
fidivr
movs
mov
sub
enter
or
mov
jle
idiv
repz
mov
hlt
test
(bad)
out
push
ins
ds
adc
scas
out
adc
xchg
xchg
cmp
push
inc
cmps
mov
xlat
xchg
mov
arpl
aaa
mov
xchg
loope
ja
pop
pusha
push
push
sbb
mov
jno
mov
mov
cs
out
or
and
adc
sub
aaa
aam
jl
jecxz
mov
cld
dec
jp
ins
mov
adc
out
je
or
jle
out
nop
fcmovne
dec
retf
out
dec
mov
fwait
adc
es
dec
cdq
ins
je
iret
rcl
es
sub
sbb
cmp
das
mov
mov
(bad)
mov
mov
inc
xor
add
hlt
mov
xchg
pop
test
jecxz
movs
xor
mov
aaa
enter
iret
adc
pop
xchg
xor
int
das
dec
add
lea
adc
adc
pop
sub
sbb
and
inc
fwait
mov
xor
in
imul
push
cmp
mov
adc
(bad)
in
clc
mov
jg
cmp
jge
mov
xor
lahf
push
(bad)
(bad)
cmp
icebp
(bad)
scas
mov
add
loopne
(bad)
cmp
jl
lahf
cwde
adc
sbb
inc
push
push
xor
mov
lea
push
mov
dec
inc
ja
daa
ja
fsubr
fisttp
nop
mov
xchg
push
inc
add
scas
popa
cmp
jg
popa
aam
addr16
rol
fdiv
pop
imul
sub
idiv
xchg
cmp
shl
cmps
push
jmp
fs
jl
std
xor
in
xchg
cs
xor
mov
jp
div
jmp
xor
aas
adc
push
sbb
out
inc
lock
push
scas
pop
ins
dec
out
adc
jb
(bad)
fild
dec
cmps
jle
inc
ja
shl
adc
jo
mov
inc
ins
push
aad
pop
cmps
dec
inc
push
daa
repz
pop
shl
stos
jp
scas
xchg
pop
loop
cmp
sbb
out
mov
fcomip
pushf
cdq
lds
leave
cli
(bad)
jns
sbb
aaa
rol
cmp
into
jne
inc
loop
cmp
int3
int3
test
fsubr
in
mov
rcr
jbe
hlt
xchg
and
test
dec
out
leave
pop
outs
or
sub
mov
neg
fist
jg
or
or
dec
cmp
mov
push
imul
pop
sbb
pop
fild
fmul
mov
cmp
ja
push
loope
push
mov
fist
and
mov
neg
xchg
int
sub
sub
mov
add
cwde
test
cld
add
les
scas
ds
jl
div
or
(bad)
adc
xor
punpckhwd
fnstenv
mov
push
cmc
dec
psrad
pop
pusha
pop
and
into
xor
aas
mov
sub
(bad)
cmp
mov
jmp
adc
das
and
frstor
and
add
loop
pop
lods
jl
in
mov
into
sbb
pop
mov
outs
cli
test
imul
mov
add
cdq
lahf
fidiv
mov
mov
outs
push
bound
push
(bad)
jl
mov
addr16
(bad)
jbe
ror
ret
xor
jnp
xchg
push
aam
in
jae
dec
adc
outs
ins
stos
pop
into
hlt
(bad)
stos
push
push
xchg
mov
cmp
xchg
inc
mov
mov
add
xlat
mov
lods
cmps
rol
jmp
mov
add
in
hlt
cs
pop
js
rcl
mov
xor
jbe
adc
in
adc
fld
xlat
mov
ds
jae
mov
fisubr
mov
push
fs
cmp
in
add
mov
ds
rol
xor
(bad)
pop
sbb
mov
add
push
movs
movs
xchg
pop
gs
pop
retf
imul
fiadd
xor
es
sti
cmp
mov
jle
and
ss
(bad)
mov
inc
jb
bound
push
inc
or
movs
ror
movs
xor
push
dec
jbe
dec
popf
or
(bad)
outs
movs
jns
push
pop
mov
cmp
jmp
mov
pop
jbe
dec
sbb
jecxz
mov
not
pusha
push
jl
popa
inc
dec
xlat
push
fld
cmc
js
dec
in
(bad)
jp
pop
xor
cmp
sub
sub
or
out
cmps
mov
cmp
cdq
dec
call
jbe
jp
outs
lea
popa
leave
into
push
adc
imul
adc
fisttp
in
in
jb
ins
sbb
fucomi
(bad)
scas
mov
neg
or
mov
jmp
push
jmp
inc
pop
adc
sar
mov
dec
daa
mov
add
movs
dec
mov
mov
mov
mov
sbb
pop
xor
imul
pop
mov
sbb
mov
fistp
xchg
jmp
int
lods
lods
pusha
mov
xchg
aad
jb
(bad)
(bad)
xor
and
(bad)
fisttp
ror
stos
cmp
mov
xchg
pop
xchg
in
sub
mov
sub
outs
dec
add
dec
daa
icebp
cmp
inc
(bad)
fnstenv
push
dec
fxch
push
sub
mov
push
xchg
xor
sti
mov
sbb
inc
jecxz
ins
ret
mov
pop
mov
stos
(bad)
enter
das
jne
ins
enter
(bad)
sub
hlt
pop
rcl
xchg
push
cmps
pop
pop
push
pusha
mov
jnp
cld
mov
push
and
inc
loope
xor
inc
push
xchg
inc
pop
imul
dec
or
outs
outs
popa
ret
jge
fstp
int
adc
movs
sub
in
pop
sub
xchg
loop
idiv
jg
push
gs
pop
add
push
adc
sbb
xor
sub
pop
and
rcr
pop
jl
cmp
pop
jecxz
ins
fldenv
mov
enter
xchg
leave
das
int3
movs
jns
sar
sub
test
imul
xchg
enter
mov
lods
fdivr
lods
sub
jmp
add
fisubr
mov
mov
and
xchg
leave
xchg
hlt
idiv
xchg
mov
xchg
xor
in
mov
and
fcomp
fadd
push
test
mov
dec
popf
aad
mov
aam
add
or
or
test
dec
push
imul
xor
outs
xor
daa
pop
pusha
or
jmp
xchg
sub
ss
cmp
xlat
jmp
inc
or
scas
inc
ss
inc
retf
arpl
mov
gs
les
inc
xchg
or
stos
(bad)
cli
pop
jnp
pushf
sub
add
inc
call
scas
jo
jae
sbb
xchg
in
pushf
adc
mov
shl
repnz
sub
jb
lea
or
clc
pushf
mov
fldcw
push
jmp
test
and
adc
arpl
aaa
ins
call
mov
xor
jns
dec
xor
xchg
rcr
pop
pop
push
sbb
push
xchg
nop
pop
mov
sub
xchg
mov
mov
cmp
mov
mov
lods
add
nop
sub
adc
je
cmp
adc
add
cmps
lock
push
cmc
ret
xchg
or
repz
cmp
out
xchg
cmp
(bad)
addr16
scas
(bad)
cdq
jmp
fwait
and
cmp
jo
mov
(bad)
dec
push
daa
mov
xchg
das
push
mov
jnp
nop
inc
ror
ds
push
(bad)
dec
sbb
sbb
ret
cmc
les
jnp
(bad)
retf
data16
push
ja
mov
ins
push
pop
sub
iret
movs
jecxz
mov
std
int
imul
jecxz
sti
mov
ret
sbb
je
mov
scas
push
repnz
imul
jo
jle
mov
neg
jecxz
lahf
cmp
out
xor
ss
mov
or
cwde
sub
and
jo
popf
hlt
(bad)
jmp
adc
ficomp
arpl
inc
icebp
bound
xchg
sti
pop
mov
push
icebp
call
jle
aaa
aad
jle
repz
mov
(bad)
popa
popa
pop
sbb
push
add
lods
jnp
ret
add
jecxz
and
xor
push
jl
aaa
sub
loopne
ja
stos
xchg
fst
dec
jecxz
xor
daa
ret
iret
ret
mov
shr
inc
loope
inc
scas
neg
dec
(bad)
push
and
xor
scas
fmul
dec
dec
jo
jbe
das
retf
ror
ret
aaa
or
pop
dec
aad
not
pop
(bad)
xor
jae
mov
pop
pop
rcl
(bad)
(bad)
mov
fsub
xor
cmp
jno
ficomp
sbb
adc
shr
in
cmps
inc
popf
sub
leave
mov
test
dec
adc
push
popa
jae
mov
fld
mov
pop
jecxz
pop
cmc
es
fsubr
std
xlat
or
or
fsub
or
repz
pop
add
mov
cmp
sub
mov
push
mov
not
test
cmp
rol
call
mov
inc
push
loopne
cmps
nop
jmp
imul
ja
ficom
pusha
mov
jb
outs
addr16
or
or
rol
outs
jo
add
iret
popa
mov
out
cmp
or
adc
push
dec
fcmovb
add
ins
pop
push
push
rol
jae
jb
jl
fcmovbe
xchg
enter
xor
adc
lods
push
pop
ret
loop
sti
xlat
sub
pop
jmp
inc
inc
nop
scas
inc
pop
cmp
aaa
popa
mov
inc
mov
(bad)
mov
inc
mov
ins
mov
sar
push
imul
push
jns
mov
rol
cwde
cmps
mov
inc
iret
dec
pop
cli
es
(bad)
push
add
xor
jb
add
cmp
movs
repnz
dec
aaa
sbb
jae
stc
out
fucom
and
push
mov
cmp
repnz
nop
imul
fucomi
add
cmp
(bad)
xor
xchg
jg
jl
push
pop
cmp
pop
xchg
sub
add
cmp
push
fidivr
aas
jl
inc
or
(bad)
push
mov
test
xchg
lea
cmp
mov
or
push
mov
jmp
or
hlt
mov
icebp
int
iret
cwde
push
or
jmp
or
pop
cli
lahf
adc
push
mov
mov
lock
cmp
mov
and
push
retf
xchg
test
xchg
sbb
jne
push
push
push
mov
sub
dec
dec
outs
test
(bad)
in
pop
jmp
sti
dec
cvttps2pi
rol
xor
or
push
in
and
les
or
in
shl
xor
add
test
jnp
cmps
fild
pop
(bad)
mov
jp
popa
sbb
mov
xchg
enter
xchg
mov
hlt
push
imul
xor
daa
or
mov
out
or
ror
push
adc
sub
push
dec
js
jne
jbe
fisttp
hlt
xchg
pop
enter
aaa
xor
xlat
jmp
adc
sub
cmp
push
add
and
leave
mov
jmp
jno
in
mov
repnz
mov
push
(bad)
sub
(bad)
sbb
(bad)
es
sbb
lahf
loopne
pop
mov
sub
jmp
repnz
call
push
pop
sub
dec
in
dec
addr16
jbe
enter
test
xchg
cld
xchg
pop
push
mov
cwde
cli
es
adc
adc
nop
cli
out
mov
jg
js
arpl
adc
test
ins
dec
xlat
ins
ret
jmp
dec
sbb
les
outs
stc
jle
adc
xchg
shl
fld
cmp
jns
mov
fld
mov
dec
inc
sub
add
movs
adc
push
shl
cmp
ins
mov
and
test
and
pop
lea
pushf
in
cmp
xor
jge
sub
dec
mov
shl
data16
adc
adc
addr16
push
mov
clc
and
inc
sti
xor
pop
cmp
xor
xor
div
test
aas
pop
xchg
in
push
adc
mov
add
jns
jmp
add
sub
sbb
sti
(bad)
cmp
icebp
fnsave
pusha
sbb
cmp
out
xchg
cmps
mov
call
cdq
add
ret
xor
and
rol
pop
call
(bad)
mov
popf
daa
inc
push
stos
xchg
in
(bad)
jnp
push
rcl
dec
inc
loope
int
data16
inc
out
aas
jl
sub
imul
and
push
or
jbe
popa
out
call
inc
jmp
cmps
repz
mov
or
add
xlat
movs
push
adc
mov
adc
je
mov
in
loop
sbb
adc
or
jmp
add
jmp
mov
movs
push
inc
and
xor
push
xchg
add
adc
cwde
inc
das
and
ins
stos
xor
or
in
inc
loopne
shl
stos
add
dec
sti
inc
jle
xlat
mov
arpl
popa
inc
aas
cs
lock
shl
add
jmp
sbb
mov
jbe
add
xor
mov
into
(bad)
jb
std
loope
xchg
xor
mov
add
push
and
jg
ret
push
int
fstp
inc
xchg
shr
dec
sbb
push
outs
jbe
out
add
out
push
ss
lahf
mov
mov
loop
add
cmps
add
scas
inc
jb
push
push
mov
fisttp
icebp
cmps
sbb
es
pop
movs
xchg
out
cmp
bound
lods
fist
xor
imul
pop
test
repnz
cwde
loop
push
in
jne
rol
bnd
push
xchg
retf
sbb
shl
ror
mov
jbe
xor
sub
not
pop
cld
mov
and
jns
add
test
aaa
cmp
std
das
xchg
pop
shl
iret
bound
ins
pop
push
push
hlt
js
sbb
mov
in
dec
cmp
mov
inc
shl
fnstcw
pop
(bad)
sub
mov
sub
push
push
outs
cmp
ret
cmp
call
shr
jns
das
test
shl
mov
add
mov
jmp
aas
mov
sti
jo
stc
dec
pop
push
dec
cs
adc
xchg
fsub
xchg
aaa
lea
cmps
cwde
sbb
sti
out
push
xchg
mov
retf
sbb
(bad)
xchg
cmp
stc
mov
mov
push
sbb
xchg
(bad)
xor
adc
lahf
inc
mov
sbb
stos
ja
pop
inc
movs
das
inc
mov
sub
pop
mov
push
in
int3
test
mov
fsub
pop
pop
call
push
sbb
lods
dec
xchg
add
mov
das
movs
unpcklps
sbb
test
loopne
imul
call
scas
inc
xchg
call
mov
mov
and
dec
hlt
adc
add
lahf
lea
imul
xchg
pop
and
push
cmc
call
mov
mov
push
mov
xor
xlat
xchg
mov
push
rcr
pop
fcomp
jmp
and
inc
movs
sub
pushf
stos
cs
cmc
ror
xor
in
es
bound
or
ja
sub
inc
into
sub
mul
jns
gs
adc
cmp
mov
rol
and
and
loop
and
add
int
fnstsw
addr16
jnp
imul
fpatan
inc
xchg
mov
push
jle
add
or
mov
mov
stos
mov
sbb
fs
pop
in
adc
in
in
in
adc
add
cdq
mov
mov
or
push
dec
cmp
pop
jl
sbb
pop
leave
or
(bad)
or
je
aas
dec
mov
push
not
pop
dec
jnp
(bad)
into
sbb
mov
mov
jmp
mov
sbb
enter
pop
mov
les
adc
mov
push
mov
pop
cmp
and
inc
in
pop
or
sahf
test
test
jg
rol
test
int
shr
add
or
inc
xchg
or
mov
call
(bad)
mov
mov
adc
jg
adc
ja
add
inc
push
dec
xor
or
push
std
sti
sbb
sbb
jb
inc
fwait
xchg
leave
cmp
jmp
jp
neg
push
sbb
push
call
stos
(bad)
in
(bad)
mov
and
jg
jecxz
push
sub
push
fwait
cmps
sub
fadd
sahf
fwait
mov
daa
mov
jne
ja
test
mov
test
inc
jmp
jecxz
and
aas
scas
(bad)
dec
repnz
ss
and
sbb
out
jns
enter
inc
lds
inc
retf
mov
inc
mov
mov
or
aas
inc
call
push
scas
or
not
adc
add
mov
sub
or
mov
adc
(bad)
and
add
fnsave
push
pop
pop
xor
bound
pop
mov
test
loope
addr16
ds
pop
aad
dec
aad
(bad)
pop
dec
dec
aas
fldenv
adc
aam
inc
cmp
add
dec
push
cmp
(bad)
fwait
movs
mov
jle
inc
rsqrtps
mov
cmp
pop
pop
or
sbb
dec
or
xor
xor
fwait
sbb
vmwrite
mov
idiv
jnp
fdiv
enter
rcr
jg
loop
mov
and
ss
jg
pop
pop
or
bound
push
mov
arpl
movs
mov
nop
ret
jl
mov
aad
adc
jmp
cdq
test
push
dec
lahf
cmps
dec
test
inc
dec
scas
push
es
retf
adc
aaa
xlat
jnp
outs
push
je
add
pop
pop
or
pusha
and
retf
(bad)
loopne
add
add
add
popf
cmp
jl
arpl
aas
js
les
xlat
sub
jne
or
popa
loope
inc
inc
push
add
pop
push
ror
mov
icebp
mov
mul
mov
pusha
stos
bound
sti
or
cmp
rcl
xchg
imul
adc
dec
xchg
mov
loopne
loopne
xchg
arpl
dec
scas
and
(bad)
mov
ret
je
xor
call
mov
out
mov
rol
fcomp
test
jecxz
xor
int
push
in
cli
test
std
inc
mov
scas
das
call
fild
rcr
outs
or
mov
test
jp
aas
push
mov
shr
push
jb
xor
dec
adc
or
mov
xchg
dec
bound
outs
rol
in
sub
cmp
ror
xor
and
jno
push
(bad)
ret
mov
lds
and
lahf
es
sub
mov
gs
stos
pop
dec
add
aad
outs
imul
cmp
xchg
and
shl
test
ret
out
and
pushf
push
stos
sub
inc
repz
fwait
xchg
push
repnz
xchg
jmp
mov
xlat
test
dec
out
outs
ss
rcr
push
cli
xchg
call
add
in
xchg
cdq
xchg
push
add
add
out
add
sbb
adc
mov
rcr
rol
sub
and
mov
retf
xor
dec
pop
loop
cmp
test
sub
stc
ins
pop
jg
jg
sub
push
scas
movs
lods
sub
lds
xchg
fiadd
mov
scas
xchg
or
mov
fsub
jns
repz
push
mov
dec
daa
dec
int
or
jo
pop
mov
hlt
fstp
std
ficom
shl
iret
iret
pop
push
sar
lahf
mov
in
(bad)
scas
(bad)
cmp
adc
out
inc
xor
pop
pop
fs
pop
pop
lods
cld
js
pop
xor
mov
jmp
adc
pop
aaa
out
loopne
jmp
pop
cmp
ror
retf
mov
outs
test
fild
push
ds
dec
fnsave
pop
xchg
cmp
aas
das
push
sahf
repnz
xchg
int
lea
fsubr
sub
jo
xchg
adc
jno
movs
cmp
mov
ret
int3
not
in
call
in
push
cmp
sbb
ds
stos
dec
lock
cmc
inc
jmp
add
(bad)
mov
shr
cmp
add
adc
mov
sub
test
(bad)
out
test
cwde
jae
jo
mov
add
int
fld
mov
ss
pushf
xchg
test
adc
lahf
mov
inc
retf
xrelease
movs
ins
(bad)
mov
outs
mov
jg
les
test
push
shl
xor
dec
call
pop
fcomp
jbe
leave
ins
xlat
ds
mov
jns
push
inc
cmp
add
lahf
cmps
popa
and
int
and
mov
add
adc
dec
lahf
jmp
dec
add
sar
mov
outs
(bad)
lock
outs
mov
sbb
add
fidiv
push
ins
pop
pop
std
push
das
bound
in
xchg
int3
ds
not
cs
icebp
dec
adc
adc
enter
jnp
loop
in
ret
or
adc
push
loop
shl
popf
fcom
or
xchg
push
adc
outs
xchg
xor
clc
adc
je
xor
lods
pop
mov
pop
dec
sub
js
or
shrd
pop
ss
rcl
xchg
jge
mov
aad
bound
fnstcw
mov
mov
pop
mov
in
push
mov
sbb
push
cmp
xchg
cmps
ds
pusha
jbe
jne
mov
push
cdq
jno
dec
jbe
les
add
xchg
in
jbe
out
leave
jle
xor
mov
shr
(bad)
das
cmc
push
mov
leave
adc
scas
pop
sbb
aas
movs
adc
dec
and
imul
push
mov
or
sub
addr16
cmps
mov
xchg
and
inc
sbb
mov
gs
nop
retf
mov
dec
shr
out
sub
or
push
cld
pop
cwde
(bad)
mul
add
outs
jne
icebp
cmp
and
mov
lods
and
add
or
sbb
call
pop
out
ficomp
add
ss
dec
mov
clc
adc
cdq
stc
or
dec
jae
sbb
xor
jnp
and
mov
or
pop
hlt
jmp
or
es
cmp
addr16
pushf
scas
gs
mov
in
add
pop
add
jmp
xor
pop
stos
icebp
lods
test
inc
(bad)
fimul
sbb
iret
pextrw
js
push
adc
xchg
sbb
mov
dec
jg
enter
in
cmps
jge
std
inc
push
jo
push
pop
lods
scas
movs
or
shl
outs
or
or
imul
out
btr
repz
(bad)
into
les
test
inc
and
into
lea
mov
jg
push
sahf
mov
dec
je
jbe
iret
mov
daa
pop
fdivr
(bad)
aam
inc
scas
sahf
test
xor
stc
not
sbb
xchg
sub
mov
int3
bound
mov
and
sub
push
mov
daa
cmp
call
fucomip
leave
stos
(bad)
std
cld
inc
pop
bound
adc
sbb
sbb
and
mov
cdq
je
pop
dec
mov
inc
ret
add
jae
(bad)
and
ins
sbb
sbb
cmps
xchg
shl
mov
mov
add
sbb
sti
sub
dec
adc
lock
test
sbb
mov
les
cmp
adc
and
sub
ja
inc
std
aam
dec
fist
call
dec
shl
neg
pop
in
stos
adc
fsub
and
sub
sbb
repnz
fcmovnu
push
xchg
call
xchg
std
push
bound
jp
mov
pop
(bad)
mov
mov
ds
neg
aad
pop
mov
pop
mov
bound
fld
test
cmp
rol
gs
or
out
mov
push
add
xchg
pushf
fld
or
lods
in
mov
in
add
pop
stos
hlt
(bad)
test
cmp
mov
data16
push
xchg
mov
xor
mov
mov
xchg
inc
(bad)
sahf
jge
stos
stc
cmps
dec
or
fbld
std
xor
mov
push
(bad)
jne
cmp
stos
or
int3
and
pushf
mov
sub
outs
mov
call
cmp
pop
jmp
jecxz
mov
sbb
bnd
(bad)
jo
mov
mov
call
out
hlt
xor
arpl
and
test
mov
scas
(bad)
jl
cmp
daa
mov
mov
dec
in
jg
int
sub
test
pop
and
aas
arpl
adc
in
ins
push
push
aaa
mov
adc
adc
sub
xchg
mov
sar
pop
imul
and
mov
retf
xchg
add
rcl
cli
add
rcr
jge
adc
inc
les
fmul
fsubr
call
clc
adc
lea
xchg
out
movs
sbb
xchg
jb
xor
dec
and
icebp
push
sahf
inc
ret
mov
cs
mov
push
xor
xor
icebp
in
cmp
sub
mov
sbb
pop
es
loopne
or
es
push
cld
in
jmp
push
mov
test
jne
(bad)
cmp
test
rol
pop
cmp
inc
loop
add
inc
sbb
xlat
xor
mov
xchg
dec
retf
aaa
push
dec
nop
mov
push
mov
push
fnsave
mov
out
jns
or
dec
fidiv
jle
cmp
cwde
sub
or
lods
call
jmp
adc
mov
pop
or
xor
jo
js
push
xor
add
mov
arpl
out
adc
pop
mov
(bad)
stos
pop
call
sub
je
into
mov
mov
jno
push
lods
dec
shr
loopne
(bad)
mov
mov
pop
js
pop
in
(bad)
in
popf
xor
jecxz
sbb
and
into
pop
nop
xor
and
call
jmp
xor
adc
adc
fcom
outs
mov
and
xor
push
popf
mov
(bad)
inc
dec
in
and
pop
cmps
or
inc
dec
xchg
fisub
and
lea
and
mov
pop
ret
sar
pop
movs
int3
push
inc
or
add
xchg
inc
jp
pop
stos
fld
mov
pop
aam
mov
push
jb
xor
gs
ss
(bad)
sub
add
iret
(bad)
push
imul
out
pop
or
outs
sub
and
sbb
add
je
mov
imul
jl
icebp
lds
mov
cmp
lods
scas
mov
leave
mov
lods
cmp
mov
mov
fcmovnb
xchg
pop
ror
sbb
lods
pop
in
adc
icebp
sub
inc
jo
or
push
sub
push
pop
push
cmp
sahf
sti
stos
mov
or
cmps
rcr
sbb
or
mov
cld
and
test
idiv
mov
imul
data16
(bad)
popa
fnsave
xchg
and
xchg
stc
adc
pop
sbb
ret
scas
or
adc
push
gs
icebp
pop
inc
mov
and
fsubrp
push
leave
popa
int
ins
loope
out
and
add
sahf
sub
xor
pusha
fld
leave
stos
cwde
(bad)
stc
fbstp
pop
xor
loop
sti
mov
mov
out
movs
xchg
and
cmps
repz
xor
jmp
dec
mov
mov
xchg
div
test
fidiv
sub
jo
pop
fld
shr
cmp
pop
les
and
popa
enter
pop
pusha
imul
jno
mov
movs
jns
pushf
cmp
xchg
(bad)
add
cmp
add
xlat
xchg
fcmovnbe
jecxz
mov
mov
jno
xlat
fsub
sub
pop
ficomp
daa
mov
jne
mov
mov
sti
sub
add
clc
sbb
add
jo
pusha
and
(bad)
adc
sub
xchg
dec
pusha
add
add
daa
jnp
adc
cvttps2pi
mov
xor
pop
mov
fdivr
cmp
in
out
outs
sub
mov
popf
jno
sti
fidivr
cmp
dec
add
mov
mov
jne
sbb
rol
mov
or
out
fisttp
mov
sub
inc
jl
cmp
aaa
push
retf
jl
aaa
or
sub
pop
ror
mov
and
xchg
adc
xchg
call
iret
dec
pushf
es
test
cmp
push
int3
shl
cmps
cmp
nop
aaa
je
mov
inc
jg
and
into
ds
mov
stos
pop
jmp
cmp
adc
mov
xor
movs
adc
xor
(bad)
rol
cmps
pop
sbb
addr16
inc
jb
lds
mov
sbb
mov
jge
daa
xchg
cmp
shl
cld
in
dec
jmp
cdq
pushf
or
scas
push
mov
pushf
fwait
mov
mov
add
cmp
cli
fwait
aas
cli
pop
add
bound
clc
dec
or
inc
mov
inc
cmc
rcr
aaa
jne
int
je
cmp
mov
mov
mov
das
mov
mov
ins
std
adc
mov
retf
out
call
(bad)
push
retf
es
dec
movs
stos
(bad)
ds
out
dec
mov
fcmove
sbb
call
mov
lds
mov
(bad)
jl
mov
push
add
jns
add
jns
popa
fisubr
mov
cs
lds
jmp
sahf
div
test
sub
out
stc
inc
lds
je
and
clc
or
push
xor
cs
ja
jmp
xchg
fild
cmp
loope
imul
pushf
sti
sbb
xor
(bad)
cwde
imul
fdivr
das
jle
xor
mov
aad
xlat
jmp
gs
pop
xor
test
scas
cmps
pop
cmps
iret
add
lds
jns
sub
out
mov
pop
aas
call
and
jbe
adc
xor
xchg
xchg
(bad)
mov
lock
xchg
cmp
test
add
cdq
cdq
mov
xchg
cmps
fldenv
dec
outs
sub
adc
push
out
(bad)
cld
in
push
mov
scas
mov
dec
sbb
enter
and
(bad)
ficom
out
mov
sti
pop
jp
adc
xor
ret
pushf
test
sbb
stos
fld
lods
sbb
pop
mov
cdq
bound
dec
popa
cmp
pop
cwde
int3
test
daa
ret
rol
adc
cmps
jle
movs
xor
fst
pop
ds
popf
sbb
and
mov
pop
loope
adc
shr
fwait
stos
rol
or
retf
cdq
in
jne
mov
adc
xchg
mov
push
fld
and
movlps
mov
scas
pop
cmp
mov
and
rol
movs
or
ins
mov
push
xor
cmc
sbb
jns
and
call
jl
inc
repz
mov
inc
cmps
call
aaa
enter
sub
les
xchg
cmps
xlat
in
push
add
pop
jne
jbe
push
sbb
stos
mov
aam
mov
iret
mov
xor
in
push
ret
std
jle
or
fidivr
jns
cmp
and
cmp
ret
inc
mov
leave
lods
pop
jbe
sbb
mov
loope
inc
pusha
in
sub
mov
adc
dec
xchg
xlat
or
or
mov
stos
xchg
push
mov
adc
sub
out
xchg
pusha
daa
jae
stos
pop
adc
jecxz
mov
cmps
mov
in
add
ret
xor
or
cld
or
into
and
and
call
popf
mov
movs
push
outs
pop
inc
ret
add
push
bound
aam
out
pop
in
ret
cmc
popa
leave
sbb
sar
jns
or
push
jmp
pop
jo
sub
xor
pop
mov
dec
add
or
sbb
mov
dec
push
jno
movs
pop
push
aam
loopne
sbb
ins
pop
test
dec
sar
mov
neg
fsub
or
mov
aad
ret
retf
adc
nop
stos
test
or
ins
test
and
shl
add
jle
xchg
pop
das
pop
add
test
dec
fisub
pop
dec
icebp
cmc
mov
pop
mov
rcl
inc
call
xchg
dec
js
mov
lock
pop
or
xor
in
rol
mov
daa
sub
aaa
mov
sub
pop
mov
push
and
ins
add
jmp
pushf
sbb
jno
mov
mov
mov
fimul
pop
jae
dec
ins
loopne
stos
jnp
sub
push
daa
inc
jmp
inc
repz
pop
mov
xchg
inc
int3
fincstp
jmp
je
mov
xor
mov
and
(bad)
or
add
fs
push
enter
sub
repz
test
cli
adc
sub
(bad)
ja
sub
fisub
(bad)
fisub
adc
or
cli
pop
sub
mov
pushf
sbb
jo
jne
shl
(bad)
cmp
mov
pusha
addr16
inc
mov
test
or
sub
mov
cs
dec
test
lds
ja
xchg
pop
fstp
cmps
mov
sbb
mov
and
into
xchg
stc
xchg
and
push
jp
cld
movs
xchg
popf
mov
into
pop
push
(bad)
loope
rcl
aam
mov
retf
add
cmps
push
pop
es
jmp
fist
or
add
jl
or
das
fbld
jmp
and
mov
out
test
fadd
mov
mov
scas
mov
sbb
mov
cmp
mov
sub
ds
ja
loopne
lahf
cld
and
cmp
push
loope
or
jns
jno
out
push
clc
inc
in
jge
mov
mov
and
pop
jmp
push
dec
xor
ret
mov
ss
stos
shr
xor
ss
mov
dec
lea
push
fwait
aas
leave
sub
xchg
loopne
xor
add
mov
ret
adc
dec
adc
shr
mov
xchg
aam
inc
dec
add
xchg
adc
ficomp
(bad)
mov
mov
pusha
scas
inc
add
xchg
je
das
or
xor
add
mov
hlt
aam
cmp
rep
fcmovb
enter
dec
std
ss
es
push
adc
jns
jmp
test
in
jns
cmps
xchg
(bad)
mov
mov
jmp
outs
or
cmp
fsub
pop
or
pop
pop
lds
(bad)
mov
repz
arpl
lahf
scas
iret
mov
mov
aaa
(bad)
mov
sub
sahf
mov
(bad)
sar
jae
scas
les
in
(bad)
cmp
call
mov
sbb
rcr
stos
loop
xchg
int
cmp
test
xor
xchg
pop
jne
pop
es
add
push
or
cmps
inc
jp
mov
(bad)
mov
pop
loope
lahf
rol
jb
pop
fisubr
sbb
adc
emms
in
push
(bad)
push
std
das
hlt
jae
rcl
(bad)
mov
cwde
aas
cmp
scas
div
mov
lods
cmp
fnstsw
and
push
(bad)
adc
nop
faddp
sbb
xchg
icebp
hlt
in
adc
add
ror
stos
xchg
push
call
jmp
stc
sub
clc
and
dec
call
dec
stc
or
out
shl
rcr
inc
push
push
in
jne
(bad)
xor
lahf
imul
popa
aas
xor
push
pop
imul
mov
sbb
inc
mov
repnz
(bad)
or
xchg
std
push
bndstx
cmp
cmps
rol
dec
inc
jp
and
sub
pop
(bad)
inc
jno
outs
mov
loop
lds
stos
clc
sti
fs
lock
cld
or
sar
mov
mov
or
imul
ins
jns
adc
push
jecxz
push
(bad)
jle
sbb
or
sti
std
xchg
mov
jb
stc
push
pusha
mov
in
call
outs
in
(bad)
dec
dec
fbld
ror
adc
mov
push
pop
inc
sahf
xor
popa
mov
and
das
cdq
outs
push
xor
pop
sub
mov
push
push
les
lock
pop
push
cmp
es
jle
jo
in
mov
call
push
shl
cmps
stc
call
pusha
into
mov
outs
xchg
ja
cmp
out
jmp
dec
retf
outs
aam
xor
arpl
xor
fild
lock
lea
add
and
mov
lds
dec
and
test
ins
inc
scas
dec
xchg
outs
frstor
fdivp
mov
jo
jmp
cmc
mov
mov
test
into
(bad)
jle
jmp
out
mov
pop
cld
call
lods
jecxz
push
cmp
xchg
xchg
add
iret
jle
arpl
jnp
sbb
repz
pop
rcl
xor
mov
aad
inc
mov
jnp
(bad)
lea
enter
aad
sub
js
fnsave
cwde
or
dec
inc
aam
shld
(bad)
sbb
mov
das
iret
fild
outs
xchg
outs
cmp
xor
cwde
pop
jae
and
retf
stc
test
cmp
mov
dec
jb
xchg
or
ins
mov
jmp
cmps
in
(bad)
mov
mov
dec
sti
in
or
or
hlt
js
clc
or
nop
mov
xchg
inc
in
mov
dec
cmp
daa
cmps
xor
inc
xchg
rcl
ret
cmps
adc
sbb
xor
mov
ror
imul
fstp
mov
fisttp
mov
ins
scas
push
btc
retf
and
sbb
hlt
xchg
mov
or
mov
or
sahf
div
or
sub
in
cmp
lods
outs
pushf
mov
push
push
xchg
popa
push
dec
jne
cli
sub
imul
pop
xchg
push
push
sub
ficom
mov
(bad)
and
addr16
lds
fisubr
in
fldenv
xor
(bad)
mov
data16
jo
dec
mov
pop
test
dec
sar
inc
shl
ret
shl
mov
int3
lock
adc
inc
push
and
push
pop
daa
dec
xchg
aam
push
mov
cmp
sub
repnz
mov
xchg
mov
cmp
sbb
or
out
dec
jb
mov
mov
sbb
(bad)
jne
ins
xor
scas
cli
aam
out
sahf
xor
sub
scas
pop
cmps
jnp
and
fs
ja
push
push
fwait
clc
push
xor
push
sub
mov
test
ror
ss
inc
xchg
lahf
mov
outs
sbb
jg
xor
sub
fiadd
lahf
adc
shl
sbb
pop
in
adc
out
push
sub
adc
pop
nop
dec
xor
sahf
or
adc
and
ds
iret
dec
mov
(bad)
in
aad
adc
mov
sub
fst
out
or
out
inc
les
inc
add
outs
push
(bad)
clc
inc
mov
inc
fimul
sti
cmp
iret
in
mov
psadbw
ins
clc
inc
je
fiadd
movs
sbb
gs
mov
in
adc
push
mov
data16
loop
dec
(bad)
aas
cmp
fs
push
mov
push
fadd
push
mov
mov
movaps
adc
inc
fbstp
cmp
mov
xor
ja
and
xchg
stos
push
jg
scas
pop
pop
cmp
jbe
xchg
add
pop
punpckhbw
xrelease
sbb
pop
hlt
pop
dec
lock
pop
pop
pop
xchg
(bad)
shr
push
cs
call
shl
cmp
je
adc
ins
cli
adc
xor
xor
rcr
(bad)
dec
and
and
mov
out
jg
loope
dec
add
inc
ror
dec
push
xor
mov
popa
int3
jge
cmp
sub
mov
fild
dec
jae
lods
sqrtps
or
push
mov
arpl
mov
mov
sub
inc
jbe
popa
lods
or
mov
es
out
and
push
inc
or
inc
mov
test
rol
iret
aas
fisubr
outs
aaa
push
xor
and
mov
or
inc
jg
lods
mov
or
add
popf
loop
inc
add
bnd
das
jno
sti
bound
dec
and
mov
inc
fwait
enter
sub
xor
xor
retf
push
js
pop
out
aad
or
push
mov
jmp
movaps
inc
adc
jmp
out
mov
call
and
mov
add
pop
jnp
mov
pop
js
cmp
xor
push
jns
mov
test
cs
adc
outs
sub
xchg
loope
dec
dec
push
aas
and
ss
xor
adc
inc
mov
xchg
stc
xchg
mov
scas
scas
dec
pop
bound
add
xchg
push
jmp
jae
ds
lea
lods
sbb
push
and
bound
or
aam
frstor
jnp
sub
jae
mov
std
inc
xor
adc
call
push
pop
adc
test
setne
mov
adc
(bad)
loop
inc
cmp
inc
ds
out
fpatan
ss
fcom
sbb
mov
xchg
in
mov
push
lds
ins
or
retf
mov
shr
outs
out
add
in
sti
cmp
pop
stos
mov
daa
xchg
fisubr
mov
mov
int3
loop
in
xor
in
inc
fmul
clc
pop
mov
je
push
and
addr16
retf
mov
sub
ficom
mov
out
or
stc
cmc
test
or
ss
into
sbb
cmp
cdq
popf
loop
in
and
jle
push
retf
sbb
jmp
or
pushf
dec
mov
rcl
and
sub
push
scas
cmp
ins
pop
push
fimul
xor
call
dec
cmp
dec
mov
jne
dec
mov
mov
inc
inc
or
or
fs
add
movs
nop
ss
stc
mov
dec
daa
jmp
or
xchg
and
fiadd
and
pop
addr16
add
adc
mov
add
mov
inc
mov
add
pop
mov
loope
in
jae
movs
out
pop
sbb
push
jmp
jno
repz
and
dec
sub
int
sub
mov
add
dec
in
pop
cmc
or
cmp
xor
(bad)
shl
xchg
lods
push
push
cmps
jmp
lahf
inc
(bad)
xchg
fdiv
xchg
ret
jle
mov
mov
test
loope
pop
sbb
sub
call
sub
and
sahf
test
jge
popf
xchg
xchg
inc
adc
and
add
cmp
clc
pop
cmc
mov
stc
jl
stc
mov
sbb
stc
sub
js
or
xor
pop
mov
or
enter
fisub
and
pop
test
je
push
xchg
add
or
dec
jno
inc
jle
mov
add
pop
jecxz
(bad)
xor
loope
bnd
jno
push
stos
dec
lahf
mov
inc
and
cmp
push
outs
addr16
cmp
fistp
lods
jecxz
inc
xor
xor
cmp
xchg
fsub
xchg
scas
sti
cmp
jbe
aam
and
xchg
inc
or
ret
enter
addr16
push
call
mov
fisub
sar
std
dec
mov
xor
adc
loopne
xor
adc
movs
out
cli
inc
push
add
adc
ss
adc
imul
fidiv
ret
into
cmps
pop
mov
mov
and
nop
inc
xchg
aaa
adc
repnz
fstp
test
jecxz
cmps
sbb
popa
mov
jns
lock
xchg
out
inc
jns
sbb
adc
fucompp
fwait
cwde
dec
push
sub
popf
push
dec
mov
mov
and
mov
movs
aaa
adc
ins
scas
cmp
sub
cmp
mov
fs
push
data16
cld
mov
jbe
movs
or
cmp
add
jp
cdq
add
jo
add
icebp
sbb
jbe
dec
cli
repnz
jl
leave
inc
inc
pop
or
dec
xor
(bad)
in
xor
mov
in
stc
fnsave
add
out
pop
test
mov
dec
and
dec
out
sub
push
movs
inc
iret
out
jge
dec
fsubrp
jne
out
call
in
aad
dec
dec
pop
imul
xchg
bound
jno
pop
jp
pop
mov
xor
iret
push
and
jae
fs
neg
js
and
push
or
test
sbb
sub
sbb
xchg
movs
xchg
mov
mov
add
out
bound
imul
push
mov
(bad)
out
and
stos
xchg
mov
lahf
dec
push
add
push
lahf
cmp
mov
cmps
dec
jg
mov
sub
lock
shl
inc
mov
jo
ja
jbe
add
aaa
retf
sub
(bad)
in
xchg
inc
out
cmp
addr16
loop
ds
mov
cmp
mov
sbb
aad
in
jle
icebp
pop
pop
daa
cwde
dec
xor
popa
scas
shr
repz
mov
(bad)
xchg
inc
ds
xor
mul
and
mov
push
pusha
pop
dec
imul
dec
pop
mov
in
cli
(bad)
jno
sub
jo
xchg
stos
and
xchg
push
sahf
jns
(bad)
aad
sub
scas
movs
xchg
sub
(bad)
lahf
push
in
nop
mov
int3
push
push
dec
pusha
fist
ret
or
cmps
mov
aaa
fstp
out
inc
sbb
xchg
mov
lock
cmp
ins
cli
js
aad
mov
cmp
mov
fs
xlat
add
mov
jp
or
iret
add
jnp
push
xlat
mov
scas
dec
adc
sar
mov
adc
push
cmps
scas
(bad)
jmp
addr16
pop
popf
add
inc
sub
or
adc
jmp
cmp
mov
xlat
inc
push
wbinvd
jne
mov
pop
adc
mov
repz
add
and
idiv
pop
(bad)
pop
loopne
sti
xor
loope
scas
xchg
xlat
jo
loop
fs
aam
ds
sbb
adc
or
mov
jg
in
ins
retf
jo
lods
jge
mov
imul
loope
mov
mov
dec
mov
retf
pusha
fdiv
arpl
push
mov
mov
inc
sbb
mov
cmc
aad
popa
scas
std
ret
repnz
in
aas
and
jmp
mov
rol
or
mov
push
inc
ins
dec
test
sbb
inc
test
dec
push
push
(bad)
jmp
in
jb
cdq
sar
sub
jecxz
pop
lahf
jecxz
jg
and
adc
jg
jecxz
stc
push
xor
sub
cdq
mov
push
push
test
ret
mov
pop
and
ss
data16
add
dec
jbe
push
jle
add
adc
mov
(bad)
or
clc
jmp
imul
jmp
push
sub
loope
inc
fiadd
repnz
adc
jnp
xchg
mov
shr
ins
pop
ror
push
adc
inc
cli
xchg
sub
push
mov
in
cmp
out
aad
jne
rcr
ret
sbb
jg
and
pop
mov
and
inc
cmc
push
pop
dec
inc
iret
mov
jmp
xchg
shl
gs
push
or
mov
push
pushf
push
test
ss
inc
dec
inc
pop
or
les
and
retf
(bad)
mov
ins
call
inc
outs
rol
or
push
mov
or
outs
neg
cdq
lahf
jns
test
jno
mov
lahf
dec
inc
jae
loope
pop
hlt
inc
sub
jmp
add
arpl
outs
cmp
lock
ins
mov
or
jmp
daa
fdiv
and
jb
fs
sti
out
scas
jnp
stos
outs
repnz
mov
lds
pop
jno
clc
jmp
sbb
jl
icebp
xor
mov
push
inc
mov
mov
inc
fcmovbe
les
imul
xchg
pop
popf
and
aad
add
adc
pop
xrelease
mov
ins
xchg
out
aad
jmp
inc
inc
nop
data16
cmp
and
test
inc
cmp
stc
in
retf
or
les
push
movs
pusha
sti
and
lods
inc
mov
jmp
sbb
pop
out
mov
xchg
rcr
add
ds
xchg
(bad)
jbe
es
sbb
xchg
dec
dec
and
and
pusha
addr16
out
stc
push
les
mov
call
xchg
inc
neg
dec
xor
mov
mov
(bad)
pop
add
adc
dec
sub
pop
lahf
shl
inc
pop
add
or
push
xchg
and
pop
movs
xor
inc
sysexit
jmp
test
xor
(bad)
pusha
sub
or
pop
jnp
shl
in
dec
aaa
sbb
in
inc
retf
in
(bad)
jle
mov
push
cmc
dec
or
(bad)
cmp
rcr
(bad)
cmp
xchg
adc
nop
icebp
fdivrp
sbb
mov
(bad)
cdq
fwait
mov
lea
push
scas
push
sar
mov
popa
jl
mov
cs
mov
push
xchg
cmps
sbb
arpl
lds
xor
aaa
adc
out
xor
cld
push
xchg
mov
sbb
push
or
rcl
je
mov
int
pop
jl
dec
cld
jg
or
inc
loope
inc
dec
mov
cmps
and
ret
jge
idiv
gs
push
fsubr
inc
pop
call
xor
push
sar
jae
xchg
adc
les
lock
jae
hlt
jp
bound
cmps
and
pusha
in
sub
jl
std
add
retf
movs
not
fst
scas
sbb
mov
not
mov
cwde
fst
xor
test
movs
mov
loope
push
xlat
sub
mov
adc
fcomp
fisttp
repz
loopne
or
fidiv
enter
stos
stos
ins
jne
mov
mov
inc
add
dec
outs
ds
popa
sub
dec
ds
push
rdpmc
stos
mov
pop
xchg
in
dec
aas
test
and
jmp
stos
loop
or
cwde
pop
outs
jecxz
xchg
test
jl
dec
popa
stos
rol
mov
out
adc
fdiv
hlt
scas
pop
adc
mov
std
aaa
mov
add
xor
out
test
mov
sbb
sub
fs
xor
test
xchg
imul
sahf
jge
xchg
in
mov
out
adc
mov
push
fs
test
sahf
es
push
addr16
mov
sbb
sbb
jno
mov
cwde
mov
dec
push
pop
(bad)
stc
or
call
pop
xor
pop
call
inc
lock
sub
leave
pusha
neg
(bad)
(bad)
mov
xor
sub
in
call
cmp
div
xor
loop
or
mov
mov
std
arpl
xor
adc
std
test
xchg
jmp
test
pop
mov
stos
imul
fistp
popa
mov
xchg
inc
scas
lods
mov
(bad)
mov
ror
ror
jnp
fsubr
(bad)
adc
jp
xor
ret
imul
push
divps
pop
sub
pop
ret
cld
dec
pop
mov
pop
hlt
loope
sbb
add
fidivr
rcr
jg
fcmovnu
fsub
fs
jb
push
fcom
aad
jl
pop
clc
cmps
jo
mov
iret
test
call
int
mov
and
xchg
out
in
push
fbstp
ret
sub
loopne
cmp
xchg
mov
daa
xchg
inc
mov
dec
das
xor
out
sub
mov
adc
mov
clc
nop
inc
fst
jle
sub
(bad)
adc
fdivr
or
clc
int3
dec
mov
add
or
shl
sbb
enter
aas
aaa
adc
rcl
fnstcw
je
sahf
dec
(bad)
mov
jo
(bad)
test
xor
push
scas
pop
jno
fs
loope
lds
inc
cmps
xchg
outs
lock
jecxz
cmp
shr
outs
sub
es
mov
mov
out
push
and
xchg
bswap
es
adc
dec
cmps
int3
inc
retf
push
sbb
mov
shr
add
xchg
test
test
inc
cmps
xor
jae
movs
cmp
mov
ds
das
ror
push
xchg
jb
sub
cmp
lods
xor
dec
cmp
jmp
xchg
daa
mov
imul
das
retf
loopne
cdq
fnstsw
pop
xchg
xor
sar
fiadd
lahf
jle
mov
add
in
les
leave
das
or
cmp
push
push
(bad)
inc
add
shl
mov
jnp
nop
sub
clc
ror
movs
adc
fnsave
in
jmp
rcl
in
cld
fcomip
in
dec
add
(bad)
data16
sub
outs
add
jbe
cdq
mov
pop
sub
pop
dec
in
mov
pop
adc
scas
cld
call
js
ja
fldenv
cld
or
mov
ja
popf
jbe
out
inc
sbb
leave
stos
mov
mov
inc
shr
xchg
jle
call
jmp
cmp
dec
xchg
jge
lds
jmp
jmp
dec
inc
push
(bad)
mov
pop
push
(bad)
push
cdq
cmps
retf
popa
push
inc
lock
cwde
loope
stc
not
push
idiv
or
xchg
jecxz
push
jecxz
in
retf
jnp
outs
retf
pop
sar
jne
dec
test
gs
and
(bad)
fbstp
mov
inc
fcmove
mov
inc
xchg
aas
xchg
test
sbb
add
lea
js
ins
or
mov
gs
(bad)
int3
mov
leave
xchg
and
stos
lock
mov
iret
dec
mov
mov
adc
xchg
sar
cmc
pop
mov
hlt
xor
je
jne
jb
je
pop
hlt
xchg
sti
es
push
hlt
stos
pop
xor
add
and
fucomp
lahf
xchg
sbb
(bad)
and
and
std
(bad)
pusha
push
(bad)
jne
das
inc
nop
jo
in
scas
pop
in
xchg
cs
lock
scas
mov
imul
adc
ins
push
jl
dec
nop
out
rol
cmp
jecxz
retf
out
push
xor
das
cmc
pop
adc
xor
(bad)
xor
fbstp
dec
loope
stc
dec
mov
and
mov
pop
and
inc
sub
jno
pop
adc
(bad)
aas
imul
inc
xchg
add
shr
out
add
push
pop
ins
mov
add
sub
psllw
outs
push
xchg
push
(bad)
dec
je
mov
xor
sbb
and
stos
ret
mov
push
add
adc
dec
mov
push
das
and
int3
pop
xor
xor
and
adc
jb
rol
repz
xchg
and
inc
fild
sub
jecxz
jl
scas
mov
fild
fistp
arpl
mov
pop
pop
pop
aaa
iret
clc
(bad)
cmc
dec
int
btc
test
sub
xchg
jbe
inc
mov
enter
pop
adc
sbb
and
xchg
push
hlt
cmp
ds
xlat
xchg
mov
mov
add
cmps
xchg
mov
cld
pop
mov
cmp
cmp
add
mov
mov
aaa
xor
popf
add
pop
xchg
sub
cmp
cmp
inc
repz
nop
pop
shl
ficom
sbb
mov
mov
loope
or
or
fiadd
pushf
dec
movs
scas
pop
mov
pop
sub
adc
mov
or
pushf
movs
ja
mov
xlat
es
cld
add
scas
movs
pusha
cwde
scas
in
mov
ret
out
jmp
(bad)
or
inc
inc
cmps
stos
pop
nop
xchg
jmp
popf
div
adc
test
sub
push
nop
xchg
(bad)
test
lahf
xor
test
push
pop
cmp
inc
and
fstp
cmp
dec
loope
lock
int
sub
enter
pop
and
dec
ds
mov
and
mov
mov
outs
fucomp
shld
cmp
adc
(bad)
xor
les
mov
xchg
pop
es
xchg
mov
push
scas
mov
or
add
or
pop
and
mov
mov
inc
leave
das
out
and
std
adc
js
xchg
aas
pop
xchg
ror
mov
xchg
ret
push
retf
push
sbb
or
mov
pop
mov
std
nop
in
sub
ror
jb
ret
jl
or
retf
les
jle
xchg
cs
into
fldenv
out
sub
(bad)
and
push
dec
int
(bad)
ds
mov
outs
mov
mov
adc
xor
cdq
popa
add
addr16
ror
ret
sbb
and
mov
xlat
xchg
push
std
lods
cwde
adc
mov
stos
shr
or
sbb
xchg
rol
outs
test
in
jbe
push
mov
mov
or
rcr
cmp
neg
sti
sbb
cmp
pop
push
cmps
jl
mov
and
icebp
mov
cwde
scas
inc
fwait
or
test
mov
cli
test
mov
pop
aas
out
(bad)
dec
loop
jle
mov
(bad)
test
or
pop
movs
cmp
jl
aam
in
(bad)
sub
pop
das
mov
loope
imul
cwde
loopne
inc
jne
sub
scas
push
adc
push
sub
xor
cmp
pop
fnstsw
lahf
mov
push
mov
sub
inc
pop
(bad)
div
push
or
rcr
mov
add
xor
in
in
int
pop
mov
cmp
mov
ret
pusha
push
mul
cmp
dec
mov
(bad)
int
imul
inc
mov
hlt
movs
dec
mov
jge
push
xor
jbe
(bad)
cdq
les
mov
sbb
and
(bad)
fistp
ds
test
mov
hlt
pop
inc
jno
jns
ret
or
and
mov
outs
cmp
dec
lods
inc
inc
jb
shl
cmp
(bad)
push
mov
pop
lods
sbb
sbb
stos
dec
lock
scas
cmp
stos
pop
adc
aad
jno
push
xor
push
inc
push
repz
fidivr
mov
xchg
call
(bad)
scas
int
add
xor
adc
clc
inc
jecxz
aad
dec
and
cmp
and
and
fcomip
push
fiadd
sub
mov
mov
sbb
xchg
outs
js
or
inc
adc
inc
hlt
in
repnz
cmp
test
jp
fstp
(bad)
stc
in
pusha
mov
arpl
xchg
out
inc
mov
addr16
lods
stc
rol
or
mov
shl
sbb
rol
mov
addr16
addr16
jmp
cli
adc
xchg
call
mov
cwde
(bad)
call
mov
cmps
pushf
mov
jecxz
mov
mov
push
sti
add
out
xchg
retf
add
loopne
mov
mov
cmp
outs
mov
lods
ret
xor
xor
push
(bad)
xor
aas
rcl
stc
fidivr
mov
xchg
popf
lahf
push
add
xchg
call
pop
ds
gs
fmul
fsub
xchg
and
inc
mov
mov
mov
not
je
dec
xor
mov
rcr
or
sbb
fsub
in
cld
ins
fsub
lahf
test
ins
or
(bad)
aam
fidivr
loop
jecxz
mov
adc
aad
fisubr
ja
imul
cmc
stos
pop
fdiv
fmul
ins
sbb
adc
adc
shl
dec
sub
fst
pusha
push
daa
call
fist
retf
xchg
test
retf
fimul
inc
and
jg
push
inc
sbb
(bad)
inc
rol
xor
push
stc
cmps
int3
jle
movs
mov
retf
(bad)
(bad)
int3
cld
jb
push
cmps
div
into
cmp
retf
daa
dec
xchg
test
inc
leave
sar
pop
rcr
cmp
in
iret
jg
leave
mov
cmp
vmovsd
sub
pop
jno
aaa
mov
jo
sub
imul
sbb
popa
inc
adc
int
retf
ret
vpmaddwd
add
cmp
jnp
push
test
iret
cmp
ins
inc
rcr
add
or
and
lods
neg
imul
pop
clc
stos
les
adc
mov
dec
outs
lock
xchg
cs
test
(bad)
mov
push
test
add
mov
push
adc
mov
cmps
pushf
push
adc
retf
pop
xor
mov
push
aaa
mov
cs
mov
fbld
inc
xor
pop
xlat
dec
mov
fstp
cmc
out
add
shr
ins
add
mov
mov
cmp
js
or
retf
inc
in
mov
aaa
jp
mov
ss
fcmovne
add
inc
aaa
jnp
sti
(bad)
shl
mov
mov
into
neg
nop
fcomip
icebp
jb
push
pushf
mov
or
mov
and
xchg
pop
mov
rol
dec
(bad)
repz
imul
movs
adc
ja
mov
pop
cmp
push
inc
out
daa
push
(bad)
fild
sbb
into
lea
(bad)
scas
inc
fwait
test
imul
xor
adc
loopne
cmps
inc
sub
push
adc
pop
dec
add
push
jo
push
dec
and
mov
add
mov
es
pusha
retf
mov
adc
jmp
or
lds
frstor
inc
stos
jmp
(bad)
jno
and
mov
cwde
pop
mov
sbb
fisttp
mov
inc
lahf
out
aam
loopne
sub
bound
sbb
ret
or
in
adc
arpl
or
add
pop
sub
pushf
add
out
fsin
not
xchg
push
cld
mov
cwde
dec
mul
retf
add
add
cld
cwde
ret
mov
leave
bound
fld
dec
mov
and
jns
div
add
in
aas
ins
xchg
add
pop
stos
(bad)
jb
int3
(bad)
in
mov
mul
aas
daa
dec
add
fcom
(bad)
jbe
int3
mov
cmps
sbb
inc
fwait
xchg
out
xchg
sbb
fidiv
jle
inc
and
adc
adc
aas
adc
ss
or
ins
stc
sahf
dec
nop
push
shr
xchg
mov
adc
stos
sub
and
xor
xchg
sbb
movs
push
shl
arpl
sub
xchg
(bad)
adc
pop
cwde
std
imul
push
cmp
jge
(bad)
jle
ja
jbe
mov
mov
and
jmp
adc
fwait
cmp
jnp
hlt
lods
and
mov
jbe
test
pusha
cmp
sub
aas
inc
xor
cmp
mov
dec
fcomip
push
pop
(bad)
jle
shl
push
repz
dec
mov
mov
es
arpl
int3
repnz
mov
sub
cs
sub
sbb
inc
mov
pop
in
add
and
aam
fbstp
clc
arpl
sar
test
shr
dec
mov
cmp
mov
sub
in
popf
rcl
(bad)
test
mov
outs
xchg
push
test
cmp
(bad)
xchg
inc
inc
jne
test
hlt
sub
stos
jmp
cwd
jb
imul
mov
xchg
inc
xchg
mov
(bad)
leave
adc
xchg
(bad)
mov
arpl
and
ror
push
fldenv
(bad)
ret
jno
jge
jne
and
jmp
aaa
jnp
int3
lds
sahf
ss
push
mov
xbegin
inc
in
mov
xchg
ins
(bad)
pop
aas
cmp
jg
xor
(bad)
dec
adc
mov
shl
cmp
mov
cmp
lock
push
lods
repnz
arpl
mov
stos
rol
(bad)
inc
and
xor
jns
ins
cmp
and
ret
movs
adc
ja
(bad)
imul
mov
xchg
sbb
inc
push
gs
test
or
add
pop
mov
push
sbb
int3
push
(bad)
sbb
scas
xchg
push
mov
xchg
pop
push
jg
aas
jo
daa
(bad)
inc
mov
sti
pop
pop
aad
lahf
dec
and
sub
mov
retf
popa
and
cs
dec
push
inc
mov
jl
fidivr
sub
mov
add
daa
pop
enter
movs
shr
cmc
xor
adc
mov
adc
xor
leave
cmp
or
(bad)
sti
(bad)
movs
mov
fisubr
jmp
jmp
mov
mov
jo
outs
je
mov
push
pop
jg
xchg
mov
(bad)
es
jae
div
(bad)
mov
xchg
mov
aaa
scas
daa
(bad)
lock
retf
bound
mov
iret
icebp
je
es
dec
sub
in
mov
mov
rcr
(bad)
jnp
xchg
aas
ret
push
(bad)
cwde
gs
shr
push
adc
push
inc
inc
shufps
dec
xor
add
stc
pushf
imul
mov
cmp
push
retf
adc
test
mov
div
stos
and
neg
cdq
ss
jmp
adc
test
mov
jb
or
xchg
in
(bad)
lahf
pop
add
fild
xchg
bound
and
cmp
mov
mov
xchg
jl
mov
gs
pop
inc
js
or
adc
lds
jbe
jne
jp
in
data16
loopne
cmp
in
jmp
cmc
jnp
mov
scas
pop
jge
ss
jbe
cmp
cwde
jl
push
jmp
mov
jl
push
push
xor
jo
fsubr
popa
icebp
jns
aaa
ja
adc
lahf
push
call
je
sahf
ret
pop
add
push
les
hlt
xchg
out
push
xchg
mov
out
cmp
cs
in
dec
leave
sar
in
push
inc
rcl
out
pop
mov
loopne
inc
jbe
rcr
mov
jmpw
cdq
mov
push
push
mov
sti
sbb
jno
push
jmp
(bad)
pop
pop
push
loopne
mov
push
sub
xchg
repz
xchg
lods
in
aas
(bad)
in
push
xchg
pushf
dec
aad
inc
push
retf
sti
outs
shl
pop
push
sub
mov
(bad)
loop
mov
mov
jno
cmp
sbb
mov
mov
enter
lods
jmp
loopne
mov
hlt
jg
(bad)
push
sysenter
adc
test
cmc
int
ds
ds
jp
push
movs
sub
jg
rcr
mov
lods
out
bound
lahf
mov
lea
ins
outs
jmp
shr
mov
scas
loope
xchg
or
iret
mov
call
cmp
pop
das
mov
jbe
aaa
jmp
add
clc
ret
div
and
(bad)
sub
ss
add
in
mov
call
ret
(bad)
mov
scas
clc
ret
aad
nop
inc
jo
hlt
dec
popf
xor
into
in
push
pop
fistp
mov
mov
dec
mov
mov
and
jno
push
xchg
xor
pusha
mov
dec
mov
jo
or
jbe
mov
shl
dec
mov
mov
aaa
xchg
fcom
rcl
fwait
inc
push
das
mov
or
jno
scas
call
loope
push
pusha
mov
daa
xor
cmp
rcr
cmp
jns
dec
fnsave
push
call
gs
fadd
cmp
and
cli
sar
pop
icebp
jl
mov
shl
fucom
sub
pusha
jo
jmp
fmul
sub
dec
ja
sbb
inc
inc
das
int
pop
add
pop
inc
dec
sub
in
leave
pushf
mov
inc
jmp
sub
jle
pop
fbld
hlt
pushf
inc
add
jns
dec
test
cmp
lea
mov
pop
pop
loope
add
popa
aam
and
or
jns
mov
push
mov
sar
scas
ror
and
rol
push
leave
(bad)
ds
jl
fstp
in
popa
pop
es
(bad)
xchg
mov
movs
in
ror
aas
mov
mov
aam
adc
out
push
call
and
cmp
jne
repz
std
cmc
cmp
and
add
sub
lock
jbe
cdq
adc
out
xor
shr
push
pop
hlt
and
or
cld
dec
pop
int3
fstp
push
adc
data16
cmps
mov
fcomp
push
ins
repz
xor
inc
lods
dec
je
or
jmp
ds
push
add
sti
pop
jnp
clc
mov
pop
add
jo
retf
xchg
aad
push
or
cli
ja
inc
xchg
pop
inc
push
in
push
mov
xor
xchg
in
push
loop
(bad)
mov
(bad)
jl
cmc
cmps
mov
cmp
mov
dec
add
fldenv
mov
int
popa
pop
sbb
fstp
cwde
or
int
mov
gs
sbb
rcl
neg
es
ror
lahf
hlt
mov
arpl
xor
or
(bad)
mov
out
aam
loopne
mov
mov
in
js
dec
ja
xchg
dec
cmp
inc
adc
xchg
pop
push
pop
jl
push
jmp
js
jmp
cmp
(bad)
lods
(bad)
push
das
pop
in
pop
jae
fstp
rcr
rol
xor
cld
mov
jle
lahf
or
xchg
call
dec
xchg
in
call
adc
cmp
sub
or
mov
ds
inc
mov
rcl
test
add
xchg
add
push
push
aad
retf
or
push
dec
and
jo
adc
add
mov
add
xor
mov
fmul
fmul
fcmovnb
mov
pop
add
sub
loop
addr16
add
scas
jo
fcomp
jne
lods
mov
jmp
dec
fcom
mov
xor
jns
mov
nop
sar
inc
mov
pop
retf
push
jmp
jno
inc
ja
cmp
das
sub
inc
(bad)
in
adc
xchg
ja
daa
mov
push
mov
adc
mov
xor
ret
add
cs
dec
sbb
aas
popa
nop
xor
aam
mov
and
xor
mov
call
rcr
(bad)
pop
mov
add
loopne
dec
xchg
mov
test
push
and
add
sub
stc
cld
es
repnz
dec
cmps
int3
enter
cmp
mov
add
mov
sub
push
and
(bad)
sub
push
jae
push
dec
ss
fidivr
test
in
inc
(bad)
imul
mov
addr16
jbe
xor
(bad)
cmp
xor
xchg
gs
push
lods
mov
xchg
xchg
xor
iret
jecxz
pusha
out
outs
bound
fsubr
pop
out
addr16
ins
mov
and
cmc
int
push
mov
push
sub
test
sbb
sbb
test
je
(bad)
pop
add
sbb
(bad)
mov
jecxz
add
cmp
cld
fucomip
pop
mov
fld
ret
push
outs
ficomp
js
jle
inc
fwait
inc
fisttp
add
and
mov
sahf
sub
mov
scas
repz
call
outs
mov
neg
enter
push
(bad)
dec
scas
jg
fs
fwait
sub
stos
mov
(bad)
xor
xchg
das
xlat
xor
cli
mov
lahf
mov
int
jae
leave
stos
dec
imul
fmul
dec
and
dec
mov
xor
cld
adc
pop
pop
adc
mov
loope
fisttp
add
call
xor
dec
dec
daa
pop
or
sbb
adc
inc
mov
jp
leave
pop
jmp
sub
jge
pop
mov
mov
inc
retf
push
imul
adc
xchg
jecxz
mov
pop
mov
mov
lea
arpl
pop
jo
aam
call
stc
and
int3
and
jge
pop
add
cmp
or
stos
rcr
lods
dec
sub
fst
es
dec
adc
xor
test
jo
(bad)
pop
mov
add
dec
push
retf
inc
or
movs
pop
enter
adc
mov
xor
enter
aas
scas
jb
pushf
test
mov
movs
imul
mov
or
adc
mov
cwde
fdivp
mov
pop
dec
lahf
lods
jp
pushf
push
xchg
rcr
pop
push
jo
sahf
xchg
inc
scas
push
mov
adc
imul
(bad)
(bad)
loopne
push
scas
scas
iret
jmp
or
xor
pop
jg
xchg
adc
xchg
xor
push
(bad)
push
scas
mov
adc
dec
(bad)
cdq
push
sub
popf
and
stc
js
sub
jmp
jmp
in
jns
add
jg
push
dec
cwde
xor
outs
adc
lods
adc
mov
push
add
xor
pop
xor
fpatan
push
outs
mov
rol
xlat
push
sub
ror
push
ret
(bad)
mov
int
push
popa
(bad)
aaa
int
add
xor
push
xor
or
in
push
sub
js
xor
mov
jmp
sub
mov
xor
cmps
sbb
arpl
jge
iret
mov
dec
adc
not
movs
fiadd
inc
push
mov
push
sbb
xor
and
inc
rcr
in
inc
pop
add
dec
cmp
jle
movs
mov
sub
fdiv
ja
pop
sti
push
pushf
enter
xor
ret
push
out
xor
jb
xchg
mov
sub
xchg
and
cli
push
addr16
stos
mov
not
dec
mov
push
push
sahf
jle
outs
sub
sbb
ret
jmp
jg
dec
add
add
mov
cdq
sub
lea
in
int
dec
shl
mov
mov
lock
sub
pop
dec
imul
movs
cmps
pop
dec
mov
push
idiv
pop
arpl
addr16
rcl
sbb
fbld
outs
cmp
jl
mov
je
cmp
(bad)
sub
cli
in
jge
dec
iret
neg
ret
jg
jns
jle
pop
out
xchg
xchg
mov
fstp
cmp
mov
push
lahf
mov
inc
and
and
popf
xor
mov
mov
cdq
test
adc
push
ins
in
inc
shl
shl
enter
movs
retf
dec
mov
add
or
je
outs
mov
mov
int
mov
mov
jmp
out
call
pop
test
jge
scas
mov
test
mov
jb
out
adc
and
add
fisubr
retf
xchg
push
aam
test
scas
lods
push
data16
dec
cmps
ss
shl
pop
xchg
arpl
scas
test
adc
dec
jbe
push
int
cs
dec
sub
ds
inc
dec
scas
loop
(bad)
pop
adc
in
cs
xor
inc
cmp
fist
popa
(bad)
loope
jle
mov
mov
lea
daa
fwait
pop
mov
ins
xor
adc
shr
fnstenv
push
fcmovb
bound
int
cmp
mov
cli
cmp
ins
jl
cmp
mov
mov
sub
inc
bound
rcr
sti
adc
push
fnstenv
retf
call
sahf
and
mov
test
repz
push
push
add
test
pop
je
in
mov
sub
pop
xchg
or
add
push
sub
xor
js
lods
ret
mov
pop
imul
pop
push
xor
rcl
inc
in
jbe
enter
inc
lods
fwait
push
cmps
mov
scas
and
jg
adc
jle
pop
cmp
pushf
jmp
jge
imul
and
clc
int3
arpl
fucomip
push
xor
adc
fdivr
xor
xchg
push
mov
call
loop
(bad)
fiadd
(bad)
xor
add
repz
ins
std
sti
loop
cmp
add
out
lea
mov
xor
pop
push
xchg
test
pop
dec
push
iret
sbb
les
out
jne
push
xchg
adc
test
jne
iret
mov
fcom
addr16
mov
and
add
xor
dec
adc
cmc
mov
and
or
inc
movs
cmps
jg
sub
xor
imul
lods
xchg
push
ror
lods
out
in
jle
out
lds
lea
sti
jge
outs
jnp
mov
jge
hlt
call
jo
arpl
out
retf
fld
xchg
psllw
jp
dec
stos
sbb
jmp
js
cmp
sub
(bad)
mov
fwait
or
out
lea
add
pop
loopne
push
lds
in
jne
mov
sti
hlt
add
push
xor
adc
rcl
or
sbb
add
cmp
into
leave
push
jge
mov
outs
xchg
add
cs
movs
xchg
shl
dec
data16
or
(bad)
cld
sub
leave
mov
cmp
in
sub
imul
mov
sub
sti
das
inc
mov
mov
sbb
dec
jmp
mov
xor
adc
fstp
pop
jmp
push
div
(bad)
pop
outs
adc
jge
test
xlat
js
lods
xchg
dec
adc
in
loop
stos
sahf
imul
adc
jl
test
mov
nop
test
fcomip
adc
in
xchg
push
sahf
add
mov
mov
icebp
mov
out
adc
dec
call
push
add
int3
in
test
dec
cmps
ins
add
add
and
addr16
jo
and
sbb
mov
pop
(bad)
mov
stc
lahf
push
fs
std
lods
pop
in
dec
iret
in
mov
sbb
sbb
pop
push
or
sbb
imul
(bad)
pop
sbb
xchg
and
push
repz
repnz
dec
ja
in
mov
push
adc
sbb
jmp
push
dec
stos
out
push
inc
nop
shl
push
push
jle
dec
js
jae
push
cmp
jns
xchg
pop
ret
jmp
cmp
sub
jne
cmps
std
jb
in
das
pop
test
cmc
or
pop
adc
iret
loopne
or
in
mov
and
retf
movs
jg
daa
(bad)
push
mov
adc
sub
adc
pop
mov
adc
cwde
adc
cdq
pop
imul
mov
add
push
mov
push
inc
fsubr
mov
mov
xchg
xchg
aaa
mov
loope
ja
clc
bound
test
retf
pop
rcl
lea
inc
inc
mov
xchg
into
push
jae
pop
fist
add
adc
cmp
fstp
add
fcmovb
test
outs
sub
gs
inc
mov
sbb
inc
cs
adc
sub
rcl
mov
nop
clc
adc
push
cmps
xchg
les
repnz
mov
sti
push
or
xor
push
cmps
mov
cmp
je
dec
dec
sub
mov
adc
jle
xlat
mov
enter
retf
das
aad
sbb
add
xchg
push
mov
dec
xchg
jl
iret
pop
pop
iret
add
je
sbb
arpl
(bad)
pushf
fldenv
popa
push
cmp
pusha
sub
mov
add
clc
aaa
xchg
push
add
ins
ds
add
jns
in
push
mov
imul
push
stos
cli
imul
sbb
outs
aam
lods
or
call
out
xchg
or
sbb
aam
xor
outs
ins
mov
fild
in
shl
into
sar
pop
mov
cmp
push
scas
rcl
adc
jb
nop
movs
sbb
and
loop
popa
mov
dec
xchg
mov
jp
mov
sti
mov
sub
and
enter
lods
dec
test
xor
add
pop
sbb
pop
(bad)
test
dec
dec
xchg
mov
je
cmps
movs
mov
fidiv
mov
outs
dec
xchg
rcl
mov
mov
loopne
test
xchg
sbb
jmp
test
cmp
shr
xchg
sbb
icebp
lahf
jp
retf
xchg
ins
mov
mov
gs
sub
dec
sbb
hlt
fcom
data16
les
cmp
xchg
lods
adc
fcom
data16
push
mov
mov
jo
mov
leave
ja
mov
sub
xor
cld
popa
mov
mov
addr16
fistp
pushf
cli
sub
mov
stc
(bad)
jns
es
or
adc
test
sub
ror
es
es
jge
inc
test
cld
or
ret
(bad)
xor
or
mov
mov
out
(bad)
pop
lea
fld
and
mov
inc
aas
fidiv
xchg
(bad)
fsincos
jbe
cmp
or
bound
cmps
shr
dec
mov
js
xchg
shl
(bad)
sbb
add
jns
xchg
jmp
push
xor
jbe
ins
sub
cmps
je
xchg
(bad)
imul
sub
in
retf
add
das
and
and
(bad)
xlat
jecxz
lods
and
jae
loop
sahf
dec
jg
out
test
rol
xchg
shrd
and
cmp
cld
adc
repnz
std
mov
adc
fdiv
(bad)
xchg
shr
loopne
(bad)
lahf
stos
rcl
dec
add
popa
cmp
inc
imul
mov
xchg
aas
xchg
pop
outs
and
ss
movs
out
int3
jb
lods
out
mov
retf
pop
add
(bad)
mov
jg
in
cmp
jb
iret
mov
je
retf
test
xchg
outs
aad
rcr
mov
xchg
push
fcmovnb
jecxz
out
ret
jge
jp
or
div
loopne
pop
mov
push
jmp
add
pop
clc
pop
sbb
cmp
stos
lods
push
mov
xor
lods
popa
lahf
pop
cmps
loop
add
pop
mov
pop
(bad)
out
dec
gs
stos
dec
mov
add
jnp
shl
or
pop
mov
cmp
(bad)
imul
adc
pop
fmul
dec
js
add
cmp
les
je
in
sbb
sbb
sub
cmps
shr
xchg
inc
jb
add
dec
xchg
or
cmc
adc
sti
popa
movs
mov
jns
hlt
scas
cdq
cmp
lods
stos
or
arpl
push
mov
sub
ja
imul
sbb
jle
js
sbb
xchg
and
shr
dec
jo
pop
sub
dec
mov
lock
jge
out
xor
add
dec
sbb
call
mov
imul
lock
mov
push
xchg
pusha
mov
mov
stos
retf
dec
hlt
mov
mov
test
out
mov
ja
and
xchg
sbb
addr16
add
pop
imul
pop
and
xlat
iret
mov
push
jnp
ja
or
cmp
fsubr
jge
mov
push
pop
inc
and
push
(bad)
loopne
push
pop
push
lea
cli
xchg
push
dec
jb
jg
xor
iret
retf
cmp
xor
xchg
aam
cmc
adc
test
dec
dec
dec
fmul
out
aam
gs
or
inc
xchg
jne
sbb
add
es
push
(bad)
jle
jo
cs
fst
mov
mov
pop
pop
cmp
enter
outs
in
mov
mov
and
pop
cmps
cmp
pusha
mov
push
jo
cmc
jnp
inc
jo
or
cmps
and
in
std
xor
out
jge
call
jmp
fiadd
mov
outs
popf
(bad)
scas
xor
nop
xor
and
add
push
nop
mov
addr16
aad
push
dec
xor
xchg
pop
jmp
jmp
jle
pop
pop
adc
push
pop
sbb
aaa
pop
sub
enter
xor
sar
mov
repnz
clc
das
(bad)
dec
cwde
sahf
and
outs
jbe
int
add
inc
cmps
cmp
mov
mov
lods
scas
rol
xchg
dec
cmps
test
sub
dec
lock
test
cmp
adc
shl
adc
adc
and
imul
aas
gs
fwait
lea
mov
test
in
or
les
mov
inc
idiv
push
mov
dec
repz
sub
and
lea
clc
nop
inc
mov
popf
dec
sti
aam
push
in
push
gs
out
inc
sbb
ds
adc
cwde
js
fwait
je
movs
fcomp
test
(bad)
push
pop
xor
adc
sub
add
inc
push
push
dec
xchg
push
mov
std
pop
xchg
xor
sbb
xchg
or
in
(bad)
clc
leave
lahf
js
xchg
mov
out
pop
movs
jmp
jo
pop
ret
loope
aas
frstor
aaa
mov
xchg
xchg
int3
sub
fs
xor
aad
lods
cmp
sbb
adc
xchg
xlat
out
xchg
sub
sahf
inc
and
js
fcomp
cdq
cdq
sahf
loopne
and
fwait
jb
xchg
sub
cmp
ins
jecxz
cs
mov
dec
movs
cdq
repnz
(bad)
fwait
lock
and
je
fnsave
frstor
pusha
stos
aam
je
lea
xor
leave
sub
push
or
jmp
fdivr
pop
mov
fwait
data16
lods
mov
pop
mov
stos
je
out
mov
cmps
mov
mov
(bad)
cdq
vmread
mov
not
push
lds
icebp
sub
mov
sub
pop
adc
sub
int
mov
xor
sbb
shl
popa
inc
stc
inc
stos
push
sbb
mov
dec
mov
fwait
dec
sbb
push
aaa
int3
repnz
pop
loop
out
jl
mov
fcomip
out
sub
jb
pushf
lahf
out
xor
xor
jmp
pop
push
outs
aad
loop
int3
push
lods
xlat
test
shr
cmp
mov
mov
mov
gs
fsub
rcr
loope
mov
mov
cmc
movs
ret
jb
dec
(bad)
and
inc
ret
or
or
add
add
repnz
push
pop
std
clc
xor
push
jnp
cmp
enter
dec
ror
adc
push
(bad)
cld
add
ss
adc
popa
xchg
test
cmps
ss
lods
add
dec
pusha
jl
pop
jle
(bad)
jmp
sbb
hlt
cmp
cmc
xchg
cmp
fistp
fsub
sahf
dec
ins
and
mov
or
sti
mov
into
rol
sbb
push
xor
mov
jecxz
mov
cdq
gs
lahf
je
cmc
jecxz
ret
dec
fs
lea
pop
div
in
(bad)
adc
sub
fcom
cmp
test
cmc
imul
push
jge
ss
pop
push
ins
imul
in
sbb
push
mov
push
aad
(bad)
in
sbb
daa
test
mov
loopne
es
lea
aas
cmc
sbb
aad
jne
pop
aaa
lahf
add
cmp
jns
push
sub
sahf
sub
dec
fucomip
xlat
ins
sbb
or
xor
adc
imul
jmp
lods
or
and
mov
jle
mov
scas
clc
push
xor
cmps
sub
movs
lds
push
cmp
(bad)
out
(bad)
pop
int3
push
push
scas
pop
push
cmp
out
xchg
xchg
push
ficom
mov
or
xchg
push
add
xchg
adc
cmps
inc
dec
dec
jnp
mov
jle
mov
pop
adc
sbb
mov
xchg
sub
mov
dec
sbb
inc
push
pop
mov
outs
jne
jb
mov
cwde
push
dec
add
shr
pushf
(bad)
cli
sahf
int
call
push
cwde
int
fst
xor
push
mov
dec
jp
xchg
sar
sahf
pushf
push
cdq
adc
mov
sbb
push
stos
or
dec
add
fisttp
cdq
inc
and
dec
push
call
call
fcomp
je
xchg
pop
push
dec
(bad)
fbstp
mov
add
clc
mov
mov
pop
cld
cmp
pop
in
pusha
pop
ficom
mov
xchg
mov
mov
repnz
ficomp
adc
fild
call
mov
mov
add
adc
sub
cld
pop
cmc
(bad)
data16
sti
jnp
add
loop
or
adc
and
or
mov
sbb
je
mov
jnp
popa
and
lea
lock
movs
pop
pop
mov
add
scas
loope
jno
imul
scas
dec
jne
inc
mov
mov
pop
xor
jl
idiv
jge
lds
fwait
adc
jmp
jg
mov
fdiv
stc
dec
mov
mov
mov
add
sbb
je
sbb
xor
xchg
mov
mov
xchg
movlps
xchg
or
out
pop
add
adc
xor
add
aaa
mov
into
stos
mov
ror
jb
in
stc
cmps
lahf
dec
jne
div
nop
jle
push
push
leave
sbb
dec
push
jmp
add
scas
stos
dec
or
xchg
push
call
inc
xor
test
popf
cld
xchg
pop
into
dec
aas
mov
lods
sub
sub
push
push
stos
fbstp
cmp
outs
push
in
cs
xor
cwde
or
dec
out
call
cmp
jns
shl
mov
push
xadd
lahf
pop
jge
mov
stc
add
jne
shl
push
mov
fs
fadd
call
sub
mov
je
out
jae
loope
sbb
nop
or
clc
icebp
mov
xchg
vpsubw
xchg
fsub
sbb
test
xchg
das
cmp
shl
sbb
lods
mov
jp
push
xchg
es
mov
int3
in
jge
cli
cmps
ficom
inc
xor
cwde
cmp
icebp
cmc
in
dec
sub
stos
mov
inc
movs
push
hlt
mov
popf
pusha
rol
dec
push
xchg
adc
push
mov
fnsave
xlat
sub
and
pushf
fyl2xp1
mov
fs
mov
or
arpl
in
ja
add
call
sar
cmp
cmp
xchg
mov
std
out
inc
sbb
add
pop
cdq
push
and
sbb
in
xchg
pop
rcl
lds
(bad)
mov
in
sbb
push
adc
aaa
sbb
bound
je
test
int3
cmp
push
mov
in
test
inc
in
xchg
ficomp
shr
les
inc
inc
and
daa
call
int
out
adc
aam
sbb
int
add
xchg
mov
pop
and
jae
jmp
jge
pop
push
loope
enter
mov
sub
jg
dec
fisttp
(bad)
outs
sar
popf
(bad)
pushf
or
mov
jne
ja
fild
hlt
mov
test
xchg
dec
inc
inc
sbb
clc
dec
gs
(bad)
(bad)
fisttp
call
xchg
push
enter
jge
sub
push
mov
add
push
repz
mov
push
leave
push
test
loop
and
jge
stc
jae
fs
popa
cmps
fcmovbe
(bad)
sbb
call
iret
test
jb
mov
jl
bound
xchg
out
mov
mov
mov
iret
arpl
or
dec
push
dec
push
and
dec
push
stos
and
mov
xchg
add
push
cmc
call
and
xor
ficomp
loop
retf
mov
imul
cmp
aaa
xor
jecxz
sub
mov
dec
jg
dec
sahf
int
dec
movs
jge
les
sub
into
outs
rcl
fld
cmps
dec
xor
data16
test
xchg
sti
je
cwde
sbb
fcomp
mov
sbb
jle
jp
into
(bad)
in
lods
pop
arpl
or
xor
cmps
mov
call
ret
(bad)
xchg
mov
jle
adc
cld
sub
xchg
mov
and
xor
inc
xchg
add
ret
lock
mov
(bad)
retf
mov
shl
int
xlat
fdivr
cdq
push
jl
inc
mov
ins
cmp
scas
jo
call
es
inc
xchg
dec
out
ret
or
lods
jmp
sub
cmps
je
call
scas
mov
xlat
xor
xor
fisubr
ror
and
iret
mov
leave
and
mov
retf
fsubr
or
aad
adc
repnz
loope
outs
scas
pop
or
adc
xchg
mov
push
xlat
mov
xlat
pop
jle
stos
pop
imul
fidivr
test
inc
call
sbb
out
int3
dec
fstp
mov
rol
stc
aas
push
cmp
or
inc
std
pop
jge
pop
mov
jno
inc
push
in
or
in
jmp
mov
mov
cmps
cwde
bound
pop
pop
push
inc
or
fstp
sahf
push
hlt
mov
pop
test
sub
cmp
jmp
fdiv
jno
das
loopne
std
cld
aad
lods
mov
xchg
test
sub
mov
dec
mov
loop
aam
mov
je
cmp
mov
cmp
xor
inc
sub
push
xchg
pop
mov
pop
xor
cwde
mov
xchg
sub
cs
xchg
mov
movs
jmp
sbb
pushf
imul
retf
add
(bad)
adc
retf
fld
iret
pcmpgtw
inc
xchg
mov
pop
ror
test
jbe
mov
or
push
cmp
mov
mov
cmp
mov
jl
rcr
xor
neg
push
scas
test
stos
add
sub
aad
push
ja
xlat
pop
repnz
std
fcom
aam
call
mov
shr
(bad)
fwait
scas
inc
test
mov
mov
inc
add
nop
adc
inc
push
clc
mov
xchg
retf
push
repz
fldenv
imul
mov
les
xor
or
(bad)
pop
stc
sti
pop
shl
xchg
sub
stos
push
mov
idiv
sub
jnp
mov
xchg
std
jns
retf
sub
mov
push
loope
ja
push
retf
sbb
dec
aam
jb
xor
(bad)
jnp
js
jae
mov
inc
fnstcw
sbb
sub
(bad)
fdiv
bswap
leave
movs
mov
xchg
jecxz
nop
adc
aam
and
or
adc
xor
mov
ins
not
lds
ins
scas
sti
push
add
jbe
sub
and
repnz
cmp
mov
jbe
ret
xor
or
pop
jmp
imul
hlt
out
test
test
jmp
cmp
pushw
sbb
mov
xor
or
dec
dec
cs
daa
pusha
aam
scas
pop
cmp
xlat
inc
sahf
gs
ins
fbstp
loop
jns
lea
jbe
sub
or
xor
mov
out
movs
sub
push
mov
popf
nop
lahf
mov
aam
fnstsw
xchg
imul
push
push
adc
dec
call
icebp
xchg
stos
sub
lds
mov
sti
xchg
aad
lods
shr
not
ja
or
push
bound
pop
das
addr16
imul
cdq
out
and
cmc
sbb
aaa
mov
call
clc
adc
xchg
(bad)
test
pop
mov
mov
push
mov
push
data16
stos
inc
pop
or
ret
pop
data16
dec
cli
loopne
push
test
(bad)
into
idiv
repz
dec
scas
xor
aam
mov
scas
addr16
pusha
retf
mov
leave
adc
lahf
sub
mov
(bad)
and
pop
mov
jo
sti
jo
inc
(bad)
mov
push
dec
(bad)
aas
pop
cmp
jmp
cwde
pushf
std
retf
dec
mov
xchg
ds
sahf
push
mov
in
stc
or
push
and
mov
scas
cmp
add
aas
ficomp
or
xor
xchg
fwait
push
sub
cmps
add
pop
mov
jno
fild
std
push
int
and
xchg
cs
nop
and
das
cwde
aas
addr16
fnsave
(bad)
jnp
or
cmp
xchg
out
xor
mov
ja
clc
cmp
jmp
push
fs
and
pop
sub
adc
jg
cwde
repz
mov
cmps
hlt
imul
dec
loopne
ret
je
or
and
mov
(bad)
repnz
mov
xor
jb
bnd
mov
call
push
ins
(bad)
lods
jp
cmp
jb
icebp
sti
mov
fmul
jnp
les
sahf
sub
pop
push
cmp
psrld
xor
xor
je
addr16
cmp
xor
ins
pop
jae
cmp
sbb
push
mov
sbb
jno
cs
sbb
imul
imul
aaa
jg
cmp
and
ret
repz
ja
and
dec
dec
mov
xchg
cmc
jp
jbe
lea
out
mov
pushw
jno
shl
or
cmp
loopne
pop
clc
jae
iret
pop
push
loope
inc
rep
pop
loopne
arpl
mov
out
mov
cli
stc
push
ror
push
scas
retf
fldcw
inc
out
inc
cdq
mov
jg
push
add
sahf
mov
inc
sti
gs
fs
and
sbb
jnp
(bad)
mov
jns
mov
mov
push
es
inc
mov
jb
sub
retf
ror
sbb
call
fild
rol
mov
add
out
mov
mov
cmp
add
loop
movs
mov
or
mov
xlat
mov
cmp
ins
inc
xchg
xor
(bad)
shl
push
pop
jmp
movntps
xor
out
or
sti
addr16
leave
movs
cmp
xchg
fs
adc
or
out
repnz
pop
pop
loope
mov
ins
cmp
jmp
or
adc
mov
push
xor
dec
stos
pslld
jae
js
pop
in
shr
fist
addr16
pop
clc
mov
xchg
xchg
stos
lds
and
adc
aas
inc
dec
clc
in
mov
jg
push
sbb
arpl
add
repnz
xchg
out
in
sbb
push
jecxz
movq
jl
fwait
dec
in
jno
mov
and
cmc
in
(bad)
repnz
repnz
xor
cdq
in
pop
mov
or
hlt
xchg
sahf
iret
mov
cmp
mov
lds
pop
xlat
invd
fs
bound
cmp
mov
cwde
aas
gs
not
in
add
pop
xchg
sbb
xor
inc
mov
and
stc
xor
scas
ret
lea
jle
(bad)
mov
add
retf
(bad)
gs
lods
sub
imul
or
dec
imul
xchg
pushf
cmc
retf
gs
outs
adc
xor
or
push
push
loopne
pop
(bad)
in
jo
or
shl
call
shl
js
cmp
fisubr
loopne
push
inc
mov
mov
hlt
loop
cli
mov
xchg
add
out
jecxz
push
or
repz
sbb
imul
pop
cmp
jp
pop
inc
pop
(bad)
xor
inc
nop
jno
lahf
add
inc
outs
sbb
in
call
pop
adc
and
pop
dec
iret
fisubr
pushf
ret
popa
in
(bad)
in
outs
je
xor
xlat
sub
mov
jle
stos
adc
div
test
div
jno
cwde
call
std
adc
dec
fisub
fbld
cmps
loope
xchg
clc
push
add
sbb
movs
sbb
fwait
push
(bad)
or
dec
add
cmp
xchg
push
push
int3
mov
jmp
cmp
push
sar
or
cs
fld
imul
dec
outs
cld
ins
pop
into
fidivr
stos
popa
loope
or
push
pop
repz
popf
push
pop
stc
add
int3
add
or
(bad)
pop
scas
pop
je
daa
jmp
sbb
mov
push
push
xchg
lea
scas
icebp
sbb
xchg
sub
lods
enter
dec
sub
(bad)
test
and
nop
jb
mov
mov
(bad)
sub
sbb
sbb
jo
hlt
jle
xor
fs
dec
out
jb
fnstenv
fmul
repnz
xor
out
mov
out
push
fidivr
cmp
mov
dec
and
jecxz
ficomp
jb
push
sub
data16
xor
js
enter
and
shr
ds
and
dec
out
push
mov
xchg
jl
lock
jb
aas
dec
push
push
dec
mov
adc
and
or
lods
imul
sub
jg
mov
jno
frstor
inc
add
mov
cmc
and
(bad)
psubsw
sbb
js
aad
fadd
enter
xor
adc
and
sub
dec
push
adc
mov
adc
mov
push
push
mov
jae
jbe
jne
test
add
rol
pop
and
fs
pusha
aam
sti
test
sbb
test
and
aas
cli
jmp
movs
mov
cwde
(bad)
into
in
dec
fsubr
rcl
ret
adc
pop
cmp
inc
hlt
mov
xchg
icebp
in
fistp
ds
stc
push
adc
add
retf
inc
dec
mov
outs
cli
je
xchg
mov
inc
jmp
ja
sbb
push
jg
out
sub
cli
sar
repz
daa
retf
or
rcr
dec
jge
jbe
or
es
push
and
sbb
add
xor
shl
xlat
xchg
cmp
adc
hlt
adc
mov
jno
call
popf
xor
je
(bad)
in
mov
adc
pop
cmp
mov
mov
out
pop
sub
js
pop
xor
dec
js
(bad)
call
mov
sbb
jnp
adc
jg
rol
push
dec
sub
jle
repz
movs
pop
enter
xor
repnz
hlt
(bad)
popf
test
push
and
cli
mov
ror
test
aad
jmp
xchg
mov
aam
dec
aam
mov
(bad)
daa
and
push
std
mov
fadd
mov
test
jmp
or
or
daa
test
nop
leave
or
mov
cwde
and
jno
sub
sbb
mov
fsubp
stos
mov
fimul
imul
cmps
sub
push
push
cmp
push
jmp
mov
pop
test
pusha
jg
stos
sbb
enter
sub
rcr
jo
ret
aam
daa
(bad)
lea
(bad)
push
rol
dec
or
xchg
jbe
or
cmps
leave
or
sub
dec
int3
call
xchg
mov
call
sbb
mov
push
test
pusha
mov
sbb
mov
mov
sub
dec
xchg
mov
dec
bound
jne
pusha
js
jecxz
push
sbb
push
cmp
mov
mov
aaa
sub
mov
movs
sahf
or
mov
mov
(bad)
push
dec
arpl
mov
xchg
mov
pop
std
mov
ss
cmp
int3
data16
scas
fldcw
sti
pop
cmp
sahf
add
fwait
jmp
out
dec
lods
aam
adc
xor
rcl
jecxz
leave
adc
mov
and
iret
adc
xchg
imul
aas
mov
dec
test
push
inc
or
fld
jbe
(bad)
cmp
stos
pop
pusha
jno
outs
jle
cwde
(bad)
xor
dec
ror
add
inc
inc
cmp
mov
pop
call
out
in
mov
inc
push
inc
fidivr
push
add
enter
cmc
dec
fsin
inc
nop
pop
sbb
(bad)
xchg
push
ror
pop
mov
sub
int3
inc
push
out
cld
push
push
sahf
adc
xchg
push
cmp
in
out
arpl
rol
mov
jbe
xchg
mov
push
outs
xchg
mov
sub
mov
cld
cmp
pop
or
pop
movs
adc
out
adc
cli
pushf
push
sub
leave
and
adc
dec
cmps
pop
xchg
int3
jg
push
(bad)
out
fiadd
dec
repnz
xchg
mov
push
xor
push
ret
jg
in
ret
scas
retf
leave
pop
or
outs
push
hlt
cmps
pop
in
(bad)
aas
xor
xchg
pop
mov
adc
add
dec
xchg
cmps
out
daa
test
inc
out
ss
mov
stc
jmp
sbb
cmc
jmp
(bad)
mov
enter
xchg
or
(bad)
pushf
push
in
icebp
mov
cli
sbb
ins
pop
leave
(bad)
int
mov
jae
repnz
jmp
lahf
sbb
test
cld
sbb
fld
or
jno
push
les
mov
movs
push
stos
lahf
call
or
dec
cmc
mov
push
push
std
mov
xor
push
jp
repnz
stos
add
mov
jp
or
(bad)
mov
cmp
ja
out
ret
inc
sar
mov
xchg
lods
dec
aas
sub
aad
xchg
loopne
or
in
jmp
ret
fstp
iret
and
aas
push
shl
jae
clc
mov
dec
imul
pusha
retf
sub
movs
cdq
in
xchg
add
xchg
addr16
jne
mov
imul
in
push
ins
cmps
mov
mov
(bad)
lahf
add
in
jo
sbb
mul
test
sahf
jmp
not
jg
int
mov
ds
imul
adc
mov
adc
mov
test
fild
pop
int3
(bad)
pop
and
fcom
test
pop
sahf
ret
mov
hlt
fisttp
sub
xor
pop
dec
pop
sub
or
cmp
call
dec
fild
push
es
pop
and
lahf
aas
mov
ins
adc
mov
(bad)
call
das
pop
in
or
sbb
dec
shl
adc
hlt
xchg
or
enter
mov
xchg
out
jmp
mov
paddw
jmp
mov
jb
iret
call
sub
push
mov
stos
pop
scas
and
outs
cmp
movaps
pop
retf
pop
mov
mov
jle
arpl
xor
inc
out
aad
fnstcw
aam
push
imul
dec
outs
jg
jmp
jle
mov
test
jno
mov
scas
popf
aam
lahf
push
jl
push
das
cdq
lods
hlt
jl
mov
retf
repz
movs
or
xchg
cmc
dec
cli
stc
pop
xor
sub
fisttp
mov
cli
mov
xchg
(bad)
ror
jg
imul
and
rcl
mov
xchg
retf
lea
enter
mov
inc
fsub
div
dec
(bad)
cmp
jmp
mov
lock
cmp
repz
push
ficomp
sub
push
jno
aad
test
push
mov
mov
nop
adc
jecxz
xchg
cmp
mov
out
int
cli
(bad)
jl
call
out
outs
dec
dec
xchg
jl
xchg
loopne
mov
test
and
dec
test
pop
adc
(bad)
and
idiv
cmps
and
inc
cmp
mov
int
loopne
iret
and
xchg
retf
mov
push
les
jae
paddd
sub
nop
fnstsw
nop
into
cmc
rcl
mov
stos
pop
xor
cld
pop
pop
clc
loope
jno
ror
test
sub
cmp
data16
les
dec
jae
jns
jnp
push
retf
mul
sub
into
push
popa
(bad)
adc
mov
and
shl
inc
ds
dec
out
imul
pop
(bad)
xchg
push
sub
enter
ret
add
push
mov
sub
aad
pop
test
mov
in
data16
jo
adc
dec
mov
mov
cmp
inc
les
xchg
inc
jae
xchg
dec
inc
retf
cmp
sbb
dec
cwde
imul
sti
sub
lea
cmp
sar
jbe
inc
movs
adc
test
xor
icebp
mov
mov
pop
lock
scas
sbb
pop
xchg
ret
nop
jnp
out
jo
repz
xor
clc
xchg
sub
jmp
mov
lahf
xchg
std
cmp
xchg
xlat
cdq
jns
out
dec
xchg
sub
or
inc
mov
mov
sbb
sar
out
push
xchg
jmp
dec
(bad)
call
out
pop
fisttp
ins
pusha
and
popa
jmp
sub
mov
push
or
sub
addr16
pop
xchg
stos
xor
idiv
(bad)
adc
xchg
xor
scas
jmp
imul
loop
cs
les
inc
xchg
pop
pop
icebp
repz
enter
xor
test
imul
retf
inc
out
hlt
jl
inc
popf
push
fisttp
sbb
in
xchg
ins
enter
mov
lods
aam
sbb
cmps
add
leave
xor
std
clc
xchg
jg
inc
push
pop
dec
dec
cmp
jae
sub
cli
jg
or
pop
xchg
stc
fs
mov
mov
pop
mov
push
inc
sbb
lds
push
out
(bad)
cld
xchg
cwde
add
add
enter
xor
add
mov
add
les
iret
fldpi
push
jno
scas
push
and
mov
sbb
or
xchg
xchg
inc
inc
push
mov
mov
jecxz
mov
mov
cli
pusha
sub
xchg
adc
outs
shl
xchg
add
jle
aad
(bad)
jae
push
scas
mov
mov
cs
lods
sbb
test
mov
add
lock
shl
dec
pop
out
punpckhbw
xchg
push
adc
xchg
sbb
loop
push
out
cmc
lds
xor
cwde
jmp
cmp
call
cmp
ins
imul
icebp
les
inc
pop
pop
xchg
jecxz
shl
test
mov
in
ss
jge
icebp
sbb
jmp
sub
test
scas
inc
jge
bound
or
or
pop
ds
gs
mov
into
lahf
data16
popa
scas
in
ds
aam
mov
lea
or
mov
cli
adc
xchg
add
fsubr
repz
and
fdivr
pushf
mov
dec
inc
xchg
xlat
(bad)
mov
daa
adc
aas
sub
call
jle
adc
loop
and
or
jge
dec
push
int
cmp
pop
add
adc
adc
cs
adc
xor
test
dec
dec
retf
jmp
mov
pop
mov
ror
xlat
icebp
dec
or
aam
push
adc
add
mov
imul
scas
dec
add
loope
neg
and
pushf
jg
xchg
xchg
retf
imul
xlat
xchg
(bad)
sub
push
jge
call
jb
cdq
cmp
pop
in
jmp
fisttp
scas
sbb
in
inc
loopne
mov
fistp
xchg
mov
cmp
xchg
dec
or
jmp
mov
xchg
inc
sbb
sti
test
fnstenv
daa
call
add
sbb
add
sbb
or
jge
lods
and
shl
mov
lea
movs
jns
or
(bad)
in
sbb
xchg
test
mov
xor
cmp
ret
inc
inc
mov
or
push
jno
adc
jecxz
ins
repz
cld
mov
mov
cld
clc
movs
push
pop
pop
cmp
clc
mov
lock
ret
pop
ds
ins
fcmovnbe
lods
push
sbb
leave
jno
dec
lods
cmp
mov
jecxz
inc
ds
mov
test
out
fistp
les
repz
dec
ss
test
fcmovb
loope
cmps
pop
xchg
faddp
outs
gs
lea
ret
and
jmp
xchg
pop
clc
daa
cmp
mov
adc
mov
and
xor
mov
pop
sbb
pop
cdq
jp
ja
pop
(bad)
rcl
repnz
out
mov
sbb
push
movs
nop
fadd
(bad)
mov
cmps
aam
sub
jo
fs
popa
std
inc
stos
push
retf
dec
add
xor
js
sub
dec
retf
mov
mov
inc
inc
es
inc
ja
aam
mov
cwde
in
mov
cwde
adc
jle
cmp
and
xchg
jl
outs
loope
xor
ret
push
test
nop
and
jns
call
adc
les
stos
loope
dec
inc
inc
sahf
rol
fidiv
js
shl
jl
xor
rcr
or
xchg
sbb
pusha
add
in
sbb
sub
out
and
xor
popf
test
or
cld
imul
out
adc
jp
or
and
ins
enter
or
cmps
xchg
xchg
arpl
jecxz
push
jno
repz
mov
pop
repnz
mov
stc
lock
inc
dec
(bad)
xchg
enter
sbb
push
ret
xchg
cdq
cmp
jp
popf
xor
inc
clc
sub
jmp
inc
or
jmp
les
clc
sar
sbb
mov
movs
push
xor
call
mov
call
mov
in
add
call
pop
retf
push
mov
jg
lock
push
arpl
adc
pop
das
push
pop
push
cld
in
mov
dec
pushf
rcr
mov
lahf
mov
push
fisubr
aaa
aam
xor
push
or
push
pusha
gs
fisubr
repnz
pop
jmp
add
or
fist
(bad)
repz
cld
dec
cli
dec
jnp
jbe
and
mov
pop
ds
cmps
movs
mov
retf
sub
jnp
sub
nop
sub
test
add
scas
push
jmp
cli
push
imul
sbb
mov
test
dec
add
jae
sub
clc
or
das
call
xor
push
(bad)
stc
push
lods
xchg
xor
(bad)
mov
inc
fsubr
cwde
pushf
jmp
aaa
scas
outs
mov
cmp
push
aaa
mov
cs
mov
xchg
cld
cmp
int3
es
jmp
test
and
popa
jl
jnp
mov
xlat
clc
js
mov
add
js
daa
adc
leave
pop
cmp
xchg
aam
dec
push
(bad)
mov
jmp
xor
cmps
test
sub
pop
rcl
(bad)
cmp
mov
jno
ret
inc
into
dec
std
mov
in
inc
xchg
aas
xchg
jl
daa
stc
popa
or
dec
push
pop
fwait
push
sbb
mov
mov
pop
fxch
or
inc
cmps
push
outs
xor
jmp
fs
mov
sub
jp
sbb
in
iret
int
repnz
push
cmps
aas
jb
mov
push
jo
sub
push
jl
inc
ins
push
jb
or
push
scas
mov
mov
pop
jge
pop
xlat
cmps
mov
imul
mov
xchg
mov
push
cmp
loope
(bad)
cmp
cmp
arpl
push
sbb
sbb
repnz
jno
xchg
xor
gs
mov
cld
sub
mov
push
jle
fiadd
(bad)
mov
mov
ds
cmp
and
movzx
in
jmp
pop
jge
clc
xchg
cmp
test
aam
bound
stc
pop
jo
iret
outs
pop
xlat
sar
sbb
inc
jmp
leave
xor
sahf
add
test
and
fiadd
sub
mov
inc
scas
sbb
(bad)
and
push
sub
pop
mov
pop
jl
arpl
mov
cmc
gs
lock
and
in
(bad)
fsubr
mov
mov
push
or
scas
jb
mov
add
mov
mov
cld
adc
cmps
(bad)
nop
retf
jmp
and
fs
jae
cmp
xchg
js
mov
movs
sub
out
shr
push
stc
popf
jno
scas
iret
retf
mov
inc
lds
(bad)
add
lds
loope
sub
cmp
fs
stos
adc
xlat
add
gs
push
fs
inc
fcomp
movs
in
int
push
cwde
sbb
mov
push
in
mov
sub
sbb
aam
out
stos
dec
pop
idiv
mov
jne
add
cmc
call
scas
out
into
or
sub
and
in
and
ins
push
mov
push
sbb
jle
or
push
xlat
pop
jns
cmp
mov
fcom
fwait
or
xor
or
cli
ficom
mov
daa
inc
shr
ja
mov
(bad)
out
(bad)
jle
rcr
or
sub
mov
div
nop
mov
popa
push
sbb
movs
lds
push
std
imul
and
push
movs
movs
test
(bad)
sbb
les
ins
ins
in
inc
cdq
xor
xor
fisubr
xor
aaa
stos
cmp
add
mov
mov
xor
fs
adc
retf
cmc
stos
in
mul
or
cmp
rcl
aaa
sar
pushf
fwait
std
adc
out
sub
mov
jb
xchg
fwait
out
dec
mov
data16
das
jbe
fs
jle
lds
ret
xchg
push
fidivr
retf
xchg
imul
cmps
lds
stos
adc
inc
addr16
sub
ins
and
adc
inc
sbb
jnp
mov
jg
adc
adc
push
xor
fcom
mov
xor
jae
arpl
dec
cmps
js
jb
xchg
rcl
(bad)
pop
lahf
sub
add
mov
imul
add
pop
mov
and
and
cmp
icebp
sbb
add
push
fs
fistp
mov
sti
(bad)
fcomp
mov
push
loopne
mov
outs
and
jecxz
ins
cmp
add
test
or
cmp
mov
int3
je
ins
inc
jl
sbb
aad
nop
push
dec
shr
mov
ins
pop
or
sar
ds
rcl
(bad)
jle
(bad)
(bad)
mov
sub
dec
mov
ja
sub
pop
pop
cwde
cmp
mov
jns
xchg
pavgw
shr
sbb
adc
inc
sub
ins
sti
dec
aas
dec
popa
mov
mov
enter
pusha
push
mov
icebp
cli
xchg
sbb
and
jg
aas
(bad)
fistp
push
aad
jg
pushf
push
cmovnp
or
adc
std
pop
inc
xchg
jp
shl
and
rcl
mov
call
dec
or
iret
adc
repz
or
and
scas
aas
imul
pop
pop
test
jns
hlt
sbb
(bad)
fucomi
js
mov
lahf
pop
xor
or
ror
mov
push
xchg
cmp
div
inc
add
inc
nop
xor
rcl
cld
into
int3
call
clc
popa
popf
push
jne
xchg
add
sub
fadd
daa
jns
pop
ja
jne
gs
aas
sub
jmp
mov
fcmovne
inc
inc
sub
sub
pusha
loope
cmps
mov
stos
lock
jmp
in
mov
mov
adc
rol
sbb
sub
cwde
fwait
in
scas
sbb
push
mov
mov
pop
mov
lods
mov
inc
push
fwait
data16
fsubp
sbb
dec
push
call
fld
test
lahf
retf
pop
ja
xor
mov
adc
repnz
pop
loope
xchg
in
sbb
inc
cwde
mul
aad
cld
test
fcomp
outs
(bad)
xchg
add
clc
outs
mov
stc
retf
push
je
call
test
iret
fistp
loope
sbb
mov
xor
aaa
push
ja
mov
push
outs
and
test
jp
mov
int
movs
fdivr
mov
pop
mov
and
imul
xchg
push
dec
cs
lods
in
dec
aam
and
cdq
pop
add
mov
int3
fist
es
stos
stos
pop
popa
sub
mov
add
mov
jmp
sbb
xlat
(bad)
and
xchg
(bad)
fcomp
pusha
and
fistp
adc
in
mov
inc
(bad)
rcr
lods
and
or
outs
sub
mov
jg
outs
or
fsub
xor
sbb
xlat
cmp
je
mov
mov
jge
mov
aaa
add
jo
loope
push
xor
scas
cdq
mov
inc
mov
xchg
(bad)
jl
sbb
loope
dec
mov
cmps
mov
loope
jge
pushf
push
cli
pop
cmp
mov
cmps
movs
add
mov
jmp
ror
or
fsubr
icebp
aaa
sbb
sub
pushf
in
pop
lods
mov
das
aad
stos
hlt
mov
mov
cmp
sbb
xor
repnz
test
fadd
test
sub
std
fwait
mov
jl
sbb
mov
mov
pop
pop
jecxz
pop
jo
fild
xor
jne
cmp
loope
jnp
les
imul
pusha
add
out
out
test
cdq
outs
or
jae
enter
outs
jmp
imul
hlt
sti
fistp
fmul
bound
dec
mov
xchg
movs
add
inc
jmp
js
jle
pusha
pop
(bad)
iret
add
cld
(bad)
jle
ins
(bad)
out
pop
clc
cmps
mov
ins
xchg
jp
bound
into
retf
pop
test
cmp
xor
fstp
mov
xor
jns
stos
ss
jle
ret
xor
push
(bad)
xchg
ret
out
pop
and
mov
and
xor
adc
js
mov
and
sar
sbb
or
adc
mov
sbb
arpl
sub
test
jo
fild
jo
cmps
pop
clc
xor
movs
mov
sbb
vpaddw
shr
cld
add
adc
adc
shl
or
movs
xor
int3
inc
mov
inc
adc
jg
push
lds
mov
loopne
loop
popa
sub
dec
xchg
repnz
inc
dec
push
and
add
pop
mov
jnp
mov
aad
sub
fiadd
into
daa
out
test
xchg
addr16
out
(bad)
inc
lods
mov
jecxz
scas
test
sbb
idiv
fistp
push
bound
add
add
ror
xor
inc
xor
mov
repz
movs
mov
pop
xchg
cld
cwde
test
ret
scas
xor
sub
test
xor
mov
popf
aas
cwde
xchg
imul
clc
rcr
mov
dec
fstp
imul
outs
fcmovb
xor
dec
cmovge
or
sub
sar
cmp
lahf
add
sub
jno
mov
fild
fidivr
xchg
leave
sub
xchg
cmp
int
mov
push
xor
mov
sbb
stc
bound
(bad)
rcr
rcl
popa
and
fistp
les
cs
jge
push
adc
mov
sbb
rol
popf
ins
add
pop
lods
shr
bound
mov
iret
mov
adc
dec
out
(bad)
mov
retf
lea
retf
outs
mov
stos
xor
xchg
jmp
test
xor
call
dec
aaa
lds
adc
push
xor
xor
pop
or
shr
std
jo
(bad)
ins
out
jmp
or
repnz
jl
aad
sbb
xor
adc
push
and
and
cs
outs
mov
repz
into
cdq
jae
cmp
sbb
adc
ja
mov
mov
sar
nop
inc
inc
cmp
dec
add
cmc
add
movs
sbb
test
shl
pop
arpl
sar
pop
jnp
mov
(bad)
and
and
pop
xchg
imul
or
and
sti
xchg
cmp
cwde
adc
xor
mov
popa
inc
mov
fcmovbe
mov
imul
ins
movs
cmp
out
pop
fimul
in
ret
test
jmp
inc
xlat
jnp
inc
stos
dec
call
ins
jmp
call
adc
push
or
mov
add
or
fcmove
(bad)
and
dec
js
dec
inc
mov
dec
int3
loopne
jle
sbb
push
add
not
lahf
lea
push
dec
rcr
retf
scas
jmp
fst
mov
ds
pop
sahf
ins
inc
and
inc
popf
hlt
ins
ret
imul
jge
lahf
cmp
nop
sbb
lock
fisub
add
imul
idiv
std
cli
cli
push
jle
sbb
jg
and
pop
aas
hlt
pop
fisub
inc
xchg
cmps
int
push
retf
mov
cmp
scas
cld
mov
sub
push
sbb
jb
leave
scas
jmp
sub
add
jmp
dec
bnd
les
test
adc
mov
int3
lods
sub
int
jge
push
in
add
lock
dec
adc
call
popf
psllw
jle
xchg
out
jnp
dec
xor
or
(bad)
pop
jg
xor
sub
out
sub
cmc
cmp
aas
xchg
nop
loope
mov
ja
add
imul
cmp
push
loop
dec
loop
mov
mov
pop
push
(bad)
jp
dec
xor
stos
mov
mov
jbe
movs
fsubr
jmp
(bad)
and
iret
lds
jnp
es
in
int
test
rol
sbb
inc
sbb
jns
fcom
lods
jno
enter
cmp
repz
inc
test
inc
xor
xchg
pop
sub
xor
mov
push
xor
xor
cdq
ds
xlat
out
fst
retf
adc
xor
(bad)
jmp
dec
enter
fisttp
iret
xchg
outs
mov
cmp
ins
stc
leave
rcr
ins
pusha
jne
mov
dec
not
aam
or
mov
clc
push
jbe
call
fcomp
dec
cs
es
xchg
test
das
adc
jmp
adc
xor
div
fidiv
mov
add
loope
mov
sub
cmps
inc
xchg
push
or
inc
sbb
inc
retf
inc
sub
iret
ins
(bad)
xchg
clc
mov
sar
movs
lea
jbe
dec
sbb
shl
xchg
sti
pushf
mov
mov
fistp
push
mov
jmp
push
mov
sbb
das
call
and
fld
pop
add
ins
mov
(bad)
push
retf
repnz
inc
jl
jne
or
mov
outs
xchg
fmul
fstp
call
cs
cdq
fwait
push
imul
jbe
call
pop
jno
retf
mov
inc
ss
xor
ss
dec
lods
retf
add
popa
dec
retf
aas
in
scas
popa
inc
cmp
dec
jmp
cmps
popf
xor
ret
pop
push
dec
cmp
jecxz
fild
loope
jne
xchg
fcmovnu
test
fwait
call
inc
fldcw
fwait
fwait
test
aas
sbb
popf
cmp
pop
adc
xor
ret
fcomp
cmps
cmc
sub
jmp
push
hlt
inc
ds
mov
mov
xor
(bad)
jmp
xchg
test
shr
movs
mov
adc
stc
mov
pop
cdq
not
xchg
pushf
js
out
ds
les
in
cmp
jl
and
test
mov
dec
adc
clc
pusha
pop
jbe
pop
loope
bound
addr16
mov
repz
adc
mov
pusha
and
inc
mov
push
(bad)
(bad)
ret
inc
mov
push
sbb
bound
mov
jmp
imul
ja
or
mov
fwait
pop
shl
mov
dec
sub
int
pop
mov
sbb
icebp
sar
cs
sbb
cwde
leave
fistp
(bad)
std
pusha
mov
aam
ss
jg
jmp
outs
ja
add
imul
mov
adc
xor
mov
cmc
loope
scas
test
mov
pop
pop
call
repz
add
stc
out
sbb
or
in
nop
(bad)
imul
xor
lods
dec
xchg
adc
push
jl
sbb
clc
idiv
ja
movs
pop
lahf
(bad)
fidivr
dec
fwait
lahf
xor
in
pusha
int
loop
pop
or
jmp
out
hlt
dec
(bad)
(bad)
mov
mov
push
jp
mov
arpl
bound
cli
arpl
ins
shl
sbb
popa
cmps
push
xchg
(bad)
xchg
and
adc
aad
xor
inc
push
mov
mov
mov
cmp
pop
push
pop
retf
mov
cmps
dec
mov
add
clc
js
dec
inc
(bad)
push
mov
add
mov
or
cmps
addr16
mov
test
cwde
cmp
mov
(bad)
sbb
jmp
stos
out
fidiv
cli
fadd
mov
mov
sbb
sub
mov
and
xor
jmp
xlat
and
push
sbb
pop
fild
push
mov
mov
test
btr
data16
imul
(bad)
es
rcl
aaa
xchg
leave
mov
hlt
jne
and
loop
inc
xor
or
test
dec
into
pop
xchg
aam
aas
jl
jnp
mov
cld
ja
inc
scas
sbb
enter
ffree
and
cmps
out
pushf
in
clc
test
xor
sub
lods
sub
ja
aad
jne
inc
inc
test
lods
dec
jg
leave
cmp
mul
mov
sbb
daa
mov
adc
ror
mov
mov
hlt
dec
call
nop
pop
or
aam
fstp
(bad)
out
mov
inc
jge
(bad)
sbb
pusha
aaa
sti
ds
xor
mov
sbb
jmp
adc
mov
movs
bswap
jp
mov
clc
sbb
dec
movs
int3
std
icebp
pop
sahf
je
hlt
inc
pop
into
mov
retf
cmp
mov
adc
mov
sub
cmc
iret
jp
push
aad
clc
outs
pop
(bad)
mov
(bad)
sub
std
retf
mov
add
mov
lods
sbb
xor
outs
fisub
sbb
lock
inc
(bad)
xor
add
int3
into
movs
pop
push
inc
sar
iret
jecxz
repnz
jmp
int3
fild
adc
adc
jg
mov
pop
iret
mov
loop
and
lahf
dec
xor
add
cmp
and
std
mov
mov
sub
ret
es
sbb
fdivr
and
pop
(bad)
pop
retf
inc
je
loope
lahf
outs
pop
fcom
dec
sbb
sub
leave
sub
inc
pop
mov
inc
cmp
dec
xor
clc
outs
fdiv
add
push
lahf
pop
ins
jg
adc
xchg
jns
sub
call
lods
jmp
mov
or
xchg
in
pushf
test
cwde
repz
inc
das
fadd
cmp
mov
mov
ret
cmc
fdiv
addr16
jnp
inc
repz
xor
mov
loop
cmp
fwait
xchg
cmp
mov
int3
inc
cli
daa
fld
shl
mov
imul
loop
pop
mov
jp
sbb
out
mov
mov
rol
sar
push
sbb
add
pop
pop
test
sbb
jne
mov
cmp
adc
(bad)
int
sbb
add
mov
push
fucomp
xchg
lahf
cmp
lock
xor
nop
sbb
outs
rcl
push
push
cmp
fiadd
jmp
jecxz
repnz
shl
sbb
test
add
mov
cld
loope
imul
(bad)
pop
rcr
mov
adc
loope
sub
mov
mov
mov
in
scas
aaa
lds
mov
xchg
jge
xor
xchg
fcom
jb
mov
push
xchg
mov
out
cmc
adc
ficom
out
rcr
pusha
dec
add
bound
fucomip
sbb
(bad)
in
inc
test
jmp
ret
mov
push
and
popf
sbb
cdq
mov
add
ins
xor
jmp
ror
mov
sub
ds
xchg
loopne
test
mov
mov
je
(bad)
fsubr
sbb
or
out
pop
pushf
mov
lock
out
pop
add
inc
leave
jl
loopne
frstor
popf
ret
mov
push
jp
(bad)
loope
mov
jno
stc
aaa
mov
clc
jns
inc
stos
sub
popf
xor
bound
mov
xchg
or
and
call
xchg
scas
outs
lods
rcl
lahf
jle
cmp
jp
aad
fdiv
lock
std
aam
popa
xor
icebp
add
add
mov
mov
lock
(bad)
fcmovnb
add
shl
xor
xor
sar
loop
icebp
pop
dec
pop
adc
cs
ret
sub
pop
jmp
sahf
mov
jmp
mov
sub
cdq
xchg
dec
icebp
cmp
cmp
sti
jmp
sti
ret
ffree
scas
outs
xor
sbb
mov
or
inc
lock
inc
adc
(bad)
cmps
add
or
mov
cli
lods
(bad)
sub
cmp
int3
bound
dec
scas
mov
sbb
in
mov
ss
dec
in
gs
cli
movs
dec
or
sub
jnp
cld
in
mov
mov
(bad)
jb
vminpd
scas
lock
adc
mov
push
into
lds
ror
packsswb
daa
nop
into
jno
jnp
fadd
and
dec
lock
call
add
out
jno
dec
adc
es
mov
repz
sub
(bad)
xlat
and
jg
fistp
(bad)
clc
and
mov
push
and
sbb
es
adc
or
imul
mov
sub
mov
cmp
pop
cld
fisttp
repnz
xlat
xchg
and
jnp
and
pop
fucomp
or
sub
idiv
int3
bound
clc
and
jmp
(bad)
gs
icebp
sbb
(bad)
push
jp
fisub
call
push
out
xor
and
mov
jecxz
jne
or
adc
mov
add
ins
mov
xor
mov
xor
or
mov
inc
add
or
xor
inc
push
and
cmp
es
xor
inc
sbb
inc
add
mov
xchg
pop
outs
lods
jns
idiv
sbb
shr
scas
aad
jl
mov
sbb
pop
lea
repz
pop
(bad)
xchg
inc
mov
xchg
sub
dec
push
pop
bnd
add
cs
mov
cmp
add
mov
scas
sti
(bad)
adc
ss
sbb
dec
movs
or
add
sub
dec
pop
cmp
and
test
outs
sahf
push
data16
out
dec
dec
pop
mov
pushf
fistp
mov
sub
(bad)
aaa
(bad)
(bad)
push
das
aad
pandn
leave
pop
adc
cmp
jno
lahf
and
push
shl
xchg
aad
aad
rcr
jle
add
sub
mov
push
inc
fimul
sub
jns
(bad)
xlat
push
sbb
(bad)
or
push
mov
retf
dec
retf
or
pop
pop
leave
mov
mov
iret
arpl
test
sub
dec
scas
js
adc
mov
dec
inc
cmp
es
es
iret
push
das
pop
and
mov
pop
pop
push
addr16
jg
cdq
iret
iret
jbe
pop
mov
xor
scas
ret
lock
out
call
(bad)
cld
loopne
fimul
sub
xor
mov
inc
imul
sbb
dec
leave
jno
xlat
cmp
mov
xor
test
xchg
repz
popf
repz
movs
retf
sub
xchg
fadd
mov
(bad)
in
fs
(bad)
lods
arpl
xor
fidiv
xor
xor
iret
loope
push
ret
out
dec
push
push
xchg
jae
mov
lahf
stos
movs
jmp
(bad)
out
or
lods
xchg
ds
or
aas
out
rcl
aam
aad
push
movs
sahf
pop
or
dec
inc
jnp
push
add
xor
or
sbb
cmc
xchg
adc
inc
adc
stos
xor
(bad)
adc
pop
inc
test
or
cld
cli
pop
shl
jbe
aaa
cmp
and
push
jle
xchg
mov
int3
mov
paddsb
push
fstp
clc
sahf
jne
(bad)
push
cli
sub
mov
lods
test
mov
mov
jo
push
(bad)
cmp
inc
js
jle
jmp
push
call
jge
dec
dec
jmp
inc
xor
push
mov
in
xchg
mov
shr
jno
cs
push
(bad)
mov
(bad)
or
mov
and
push
mov
jp
xchg
push
cld
sbb
push
cwde
mov
xchg
arpl
jl
popf
call
pop
nop
loop
test
movs
dec
aad
xchg
xlat
aaa
pop
mov
pop
out
jne
xchg
sahf
mov
cmps
lock
jl
mov
pop
lahf
(bad)
outs
cmp
shl
push
jecxz
mov
add
hlt
sub
sub
push
jne
push
jne
stc
pop
pop
mov
mov
jmp
push
dec
repnz
fist
lds
arpl
jl
adc
push
xor
call
pushf
popa
imul
cli
mov
push
shl
fsubp
xor
je
cmp
cld
inc
loope
(bad)
pop
cli
pusha
dec
inc
add
retf
and
add
xchg
sahf
jne
std
xlat
adc
fs
inc
jb
imul
lahf
mov
or
mov
mov
adc
pop
jle
adc
or
xchg
add
sub
lock
psadbw
add
ffreep
inc
jb
fnstcw
inc
jge
(bad)
(bad)
pop
mov
es
out
sub
mov
shr
or
push
jg
cmp
xor
clc
inc
fld
jo
mov
in
jl
outs
stos
bound
pop
loop
dec
das
lods
add
inc
jle
xchg
adc
cmp
cmps
popa
inc
push
xor
xor
jg
cmp
cdq
lock
imul
push
aas
mov
fwait
in
and
fiadd
and
inc
cmps
das
pop
cmp
inc
enter
je
cmps
push
popa
pop
cmps
retf
ins
add
fcom
jb
shr
cmc
xor
jnp
imul
mov
xlat
dec
mov
pop
inc
mov
bound
mov
inc
mov
cwde
cmc
in
or
xor
in
rcr
sub
call
int
inc
sbb
inc
and
xchg
xor
test
fndisi(8087
cmps
arpl
movs
jnp
test
sub
sub
sar
push
fldenv
test
pusha
mov
mov
lds
jno
add
and
or
out
inc
shrd
ins
push
test
mov
xor
shl
out
inc
or
add
xchg
repnz
pop
rcr
mov
ins
push
cmp
nop
mov
or
inc
movs
adc
jno
push
test
jbe
mov
test
jae
test
pop
repnz
lahf
into
aad
fisttp
cmp
dec
sti
push
xor
mov
mov
mov
ror
jmp
mov
mov
cs
stos
sub
push
fsub
xchg
out
popa
movs
scas
out
mov
(bad)
cmps
adc
xchg
cmps
pop
xor
fsubr
xchg
cmp
out
in
neg
cmps
test
push
lea
or
cs
les
mov
xor
jl
jmp
or
xchg
cld
push
lock
mov
fild
xchg
sub
mov
outs
sbb
dec
loopne
lds
aaa
jae
jle
stc
xor
(bad)
fmul
inc
mov
mov
push
imul
ss
inc
ror
ins
adc
(bad)
lahf
sub
test
inc
mov
dec
cmp
push
push
call
(bad)
mov
sar
sub
mov
cld
in
mov
xor
pop
pop
int3
inc
inc
adc
cmp
test
jmp
inc
cdq
mov
xchg
fimul
ret
mov
ret
jae
or
mov
push
xchg
xchg
aam
lods
in
in
imul
imul
ds
push
xor
push
das
cmp
pop
mov
retf
mov
(bad)
jnp
and
es
lds
cmp
jg
jp
push
ret
jge
movs
xchg
mov
dec
idiv
sbb
icebp
xchg
sub
call
mov
adc
cli
fstp
pop
jmp
test
dec
sbb
stc
adc
sbb
int
bound
in
add
sbb
ret
jmp
inc
adc
pop
lock
imul
pusha
adc
fs
push
(bad)
push
dec
push
inc
mov
jmp
lds
sub
add
or
daa
div
pusha
sbb
out
test
int
mov
mov
cmp
push
nop
push
movs
mov
cld
loope
popa
dec
out
fstp
xchg
or
and
push
inc
pusha
add
addr16
push
xor
cmps
inc
or
add
fsubr
nop
add
jmp
retf
dec
push
xchg
mov
mov
mov
inc
jbe
mov
cli
xor
sbb
push
inc
jnp
(bad)
cmps
add
inc
movs
loopne
icebp
or
inc
adc
outs
pop
mov
out
iret
push
xchg
fs
push
pop
imul
pop
jecxz
jo
in
pop
push
xchg
jnp
(bad)
jmp
sub
mov
jl
pop
mov
popf
sub
pop
(bad)
pop
mov
xchg
inc
push
sub
fwait
push
fmul
or
shr
fdiv
and
xchg
shl
fld
icebp
popa
cld
mov
(bad)
ins
cmp
fild
jle
stos
idiv
sub
mov
enter
and
inc
xor
mov
loopne
cmps
into
jno
pop
pushf
mov
xor
stc
jle
icebp
dec
ss
rcl
pop
mov
mov
add
test
mov
mov
(bad)
movs
pop
xor
or
mov
cmc
std
icebp
lods
adc
ss
aaa
enter
popa
or
nop
aad
les
fs
jecxz
mov
mov
rcr
push
aas
repz
stc
sbb
or
ins
or
fidiv
lods
nop
jmp
adc
sbb
mov
shl
xchg
adc
mov
dec
and
in
out
fcmovb
xchg
scas
add
xchg
dec
lock
stc
sub
mov
xor
push
inc
jl
cmp
or
pop
add
xor
imul
ss
mov
xchg
adc
aad
sbb
sbb
mov
sbb
loope
jns
ins
bound
xchg
sbb
dec
aam
shl
dec
retf
imul
sub
(bad)
stc
inc
jmp
(bad)
pop
lahf
imul
or
dec
mov
inc
mov
loop
mov
add
xor
pop
jmp
sbb
mov
out
fsubr
cdq
push
test
adc
cmp
mov
sub
sbb
sbb
aaa
stos
loopne
cmp
les
ret
fist
imul
push
test
shl
stos
push
pop
arpl
push
int
adc
mov
cmp
popa
fcomp
fs
pop
bound
jne
fmul
and
mov
ds
pushf
outs
xchg
(bad)
mov
jecxz
out
lahf
scas
es
fnstsw
jne
inc
test
daa
jmp
push
dec
test
mov
mov
mov
fbld
aaa
aam
or
jae
(bad)
xor
sub
(bad)
push
xchg
mov
ins
xor
xor
or
jmp
dec
sbb
add
and
cmps
dec
pop
xchg
sbb
iret
push
xchg
scas
aad
in
inc
dec
xchg
lods
adc
jecxz
jmp
lock
hlt
mov
(bad)
sub
dec
mov
clc
dec
outs
mov
mov
enter
aaa
dec
and
enter
mov
mov
stos
xchg
pop
outs
arpl
inc
popa
inc
mov
fist
out
call
cmp
loop
or
(bad)
cmp
or
out
push
icebp
retf
retf
movs
add
mov
jg
cdq
and
cvtps2pd
jb
mov
add
imul
cmp
pushf
lahf
repnz
or
inc
repz
push
adc
loopne
cmps
pop
mul
aas
dec
add
push
mov
(bad)
sub
jnp
mov
mov
loop
and
js
(bad)
call
jmp
jo
test
xor
ror
rcr
sar
add
pop
inc
lds
fisttp
aaa
fnstenv
jmp
jge
inc
and
mov
dec
imul
pop
das
repz
mov
call
and
adc
dec
aaa
mov
pop
xchg
inc
pop
and
lods
leave
lahf
in
mov
movs
call
bound
or
lahf
mov
lods
pop
ins
cdq
das
test
push
and
mov
test
adc
stc
pop
jae
ds
loop
jge
(bad)
bnd
aaa
in
jnp
jmp
icebp
mov
lea
xor
or
push
pusha
cmp
pop
ret
(bad)
cwde
daa
push
(bad)
retf
adc
add
fdiv
xchg
je
lods
test
repnz
mov
dec
ins
fistp
scas
cs
push
lods
rcl
cdq
jp
and
pop
cmp
xchg
jg
ds
pop
push
pusha
xor
(bad)
in
ret
mov
xor
pop
test
cli
jbe
mov
jge
stc
dec
mov
pop
(bad)
aam
and
mov
jl
stc
mov
out
sbb
(bad)
(bad)
retf
or
je
sbb
movs
leave
push
or
mov
xor
in
repnz
mov
fisttp
add
push
pop
fist
jmp
jmp
cmps
ror
(bad)
pusha
std
sub
xchg
cmp
stos
mov
adc
aas
fs
sbb
scas
jnp
mov
or
mov
mov
mov
jp
cmp
int3
into
shl
push
sub
inc
and
mov
rol
mov
push
mov
mov
push
push
xchg
movs
sahf
cdq
jl
ret
cmp
mov
cwde
adc
out
or
add
jg
iret
ret
daa
data16
jbe
dec
push
outs
retf
mov
mov
in
(bad)
stos
inc
inc
jbe
mov
inc
push
retf
icebp
jne
loopne
cld
adc
pop
or
test
repnz
ret
outs
push
outs
sti
add
mov
mov
aad
xor
mov
iret
fild
inc
push
jae
push
(bad)
outs
jbe
jb
repnz
clc
push
daa
xor
jne
clc
gs
call
fs
xlat
jo
sub
out
in
jle
xchg
xchg
push
in
fimul
popa
xchg
mov
fdivr
mov
pop
sub
adc
xor
fst
and
jle
dec
fmul
mov
push
sbb
icebp
(bad)
adc
dec
out
mov
ss
es
cmp
jge
mov
daa
out
mov
jmp
jno
xchg
pop
fmul
pop
cld
loopne
icebp
push
and
lds
pushf
in
sahf
(bad)
cmc
mov
je
push
fild
dec
mov
mov
push
jb
xlat
mov
cmp
dec
inc
fiadd
jp
inc
or
xchg
xor
mov
push
adc
mov
xchg
sub
aad
call
jg
sub
loop
mov
gs
sbb
sbb
test
es
add
push
xchg
imul
mov
adc
mov
mov
mov
addr16
cdq
pop
mov
mov
ins
push
xor
inc
pusha
dec
das
add
push
inc
imul
adc
xchg
cmp
jne
jno
jmp
lods
aad
mov
sbb
enter
sub
xchg
inc
int
out
mov
(bad)
out
add
das
ja
sahf
cs
xor
in
out
cmps
inc
scas
and
(bad)
aas
shl
mov
pop
rol
adc
inc
mov
hlt
and
aad
adc
es
and
dec
out
sbb
fild
add
xchg
xchg
and
popa
push
imul
in
sub
sbb
repnz
cmps
add
jo
push
cli
lods
fdivr
sbb
inc
jecxz
sbb
jle
fisttp
push
out
js
cmp
inc
mov
jmp
adc
ss
dec
and
push
pop
cld
popf
daa
aas
mov
or
xlat
jecxz
outs
int3
cmp
sbb
push
mov
or
add
pop
outs
sub
xchg
cdq
dec
and
adc
lea
fdivr
les
xchg
(bad)
in
sub
pushf
lds
pop
and
popf
or
push
fisttp
mov
cli
or
jg
shl
xchg
pop
sub
inc
enter
fdivr
imul
test
pop
leave
mov
add
add
ror
add
xor
inc
or
mov
movzx
test
pop
inc
and
clc
shr
iret
cld
jmp
fild
ins
int
sub
sbb
int
das
dec
(bad)
cmp
xchg
mov
fucomip
jle
(bad)
sbb
sbb
mov
les
call
mov
movs
lods
mov
inc
mov
sar
xchg
in
xchg
mov
or
push
addr16
adc
cmc
and
and
clc
lock
rcr
inc
mov
loopne
sub
push
addr16
mov
pop
adc
push
loop
rcr
(bad)
sbb
dec
add
test
sub
mov
leave
jbe
adc
jbe
aad
mov
repz
dec
sar
popf
pop
cmp
movs
ret
das
push
cmp
stos
adc
sbb
(bad)
cmps
std
adc
out
(bad)
inc
jno
mov
inc
mov
jle
mov
add
pop
adc
test
and
and
rcl
mov
dec
test
add
mov
dec
mov
xchg
push
xchg
and
xchg
xchg
adc
or
add
xchg
adc
push
retf
add
and
icebp
adc
inc
cmp
xor
mov
scas
shl
scas
xor
inc
cld
mov
ins
push
push
sbb
add
test
and
outs
aam
mov
mov
mov
(bad)
clc
pop
sub
adc
sbb
jo
jo
mov
cld
(bad)
(bad)
inc
aad
enter
inc
stc
xor
in
aad
cmc
push
inc
pushf
es
movs
mov
(bad)
shr
push
popa
ret
dec
fs
xlat
lock
cmps
push
repz
int3
dec
xor
in
cmp
outs
ficom
mov
mov
(bad)
sub
imul
mov
xchg
mov
imul
dec
dec
sti
sub
fwait
int3
gs
mov
push
sar
aaa
xchg
lock
dec
repnz
outs
outs
mov
xchg
dec
call
fisubr
jp
(bad)
and
stos
test
das
xchg
iret
adc
cmp
fisttp
and
xchg
aad
dec
pop
xchg
in
pop
mov
js
pop
retf
mov
lods
(bad)
addr16
aas
push
jo
jge
push
jmp
shl
pop
push
in
fiadd
cs
retf
mov
call
fwait
push
inc
shl
leave
push
mov
bnd
adc
xchg
xlat
xlat
push
mov
jl
xchg
fcomp
jne
mov
mov
pop
call
mov
xor
in
cmp
les
and
dec
add
mov
pop
fist
or
xchg
jbe
mov
sbb
icebp
retf
and
ins
pop
jae
mov
cmp
mov
mov
xchg
push
(bad)
pop
pop
je
(bad)
jns
mov
cdq
into
inc
inc
ret
sbb
dec
sbb
aas
popf
jne
xor
in
push
icebp
sbb
retf
in
sub
clc
sar
sahf
ss
scas
push
nop
add
movs
push
mov
fidivr
jnp
pushaw
mov
adc
cli
lods
inc
jecxz
dec
push
out
mov
inc
jnp
xchg
retf
(bad)
cmp
mov
push
fstp
jo
gs
push
loope
call
movs
pop
or
adc
mov
gs
pop
inc
fcmovu
fistp
int
cmc
mov
loopne
mov
ins
mov
enter
sbb
icebp
cmp
icebp
pushf
mov
or
(bad)
leave
cmp
(bad)
and
jge
cmps
xchg
cmp
call
lock
push
sub
cwde
cmp
add
xor
ja
pop
nop
fistp
and
and
sub
push
fwait
inc
jp
mov
pop
(bad)
xlat
fs
adc
rcr
out
sub
bound
sbb
add
lods
adc
inc
test
jo
fimul
inc
push
lock
sbb
dec
xchg
lds
cmp
bnd
add
mov
sub
jno
sub
adc
adc
mov
xchg
shl
push
sub
fcmovnu
cmp
add
add
xor
in
adc
adc
shl
mov
cmp
inc
icebp
daa
inc
mov
(bad)
mov
mov
sbb
inc
jmp
jb
sub
movs
xchg
mov
mov
aas
pop
dec
adc
jmp
cmps
adc
addr16
mov
add
std
js
fucomip
loop
ret
jmp
jno
add
push
in
mov
ss
xchg
shr
rol
mov
sbb
idiv
into
pop
mov
xlat
add
mov
cld
sbb
mov
mov
mov
mov
pop
jb
cli
jns
and
add
aam
ins
enter
lock
jmp
push
neg
pop
mov
into
sbb
lds
mov
mov
xchg
adc
dec
addr16
sbb
dec
and
and
mov
mov
add
scas
cdq
push
(bad)
sbb
inc
mov
sub
icebp
ror
mov
inc
cmps
xchg
mov
ret
mov
cmp
cli
and
sbb
stos
ret
mov
mov
cdq
retf
mov
rol
sahf
cs
adc
mov
xchg
js
cmp
mov
adc
and
mov
jecxz
cmc
mov
add
or
iret
sub
ins
(bad)
(bad)
mov
push
jge
adc
test
pop
shl
scas
push
icebp
xchg
xor
xchg
mov
pop
dec
in
test
inc
out
jae
dec
push
sti
icebp
in
arpl
jb
retf
lods
pop
hlt
xlat
mov
in
sbb
mov
stos
xor
and
cmps
stc
jmp
inc
xor
mov
js
adc
jnp
mov
mov
dec
push
push
aam
fisubr
sub
adc
mov
inc
int
iret
or
mov
push
call
adc
cmp
xchg
stos
sahf
stos
xchg
and
enter
icebp
pop
mov
xor
es
(bad)
data16
xor
fsub
rol
aaa
xor
int
fcomip
mov
addr16
jbe
out
sar
stos
les
enter
pop
aad
jecxz
xchg
lea
cmp
mov
xlat
sbb
add
(bad)
addr16
mov
aaa
xor
out
sub
loope
fnstcw
mov
sbb
xchg
cld
add
fstp
add
test
push
fmul
mov
les
inc
push
scas
fiadd
and
push
cmps
pop
xchg
addr16
inc
sub
je
fistp
aam
and
popa
cmp
shl
jb
dec
je
bound
and
xor
or
dec
shr
daa
push
out
sub
mov
in
sahf
xchg
sub
cmp
jb
into
enter
xchg
lahf
mov
outs
xchg
mov
pop
js
mov
cwde
mov
mov
or
aas
pop
outs
stos
jbe
push
fcom
inc
pop
inc
dec
xchg
pop
cld
not
or
sub
add
icebp
mov
push
cmp
jge
xchg
jns
cld
rcl
shr
sbb
push
jns
je
sbb
scas
cmps
push
test
push
sbb
add
mov
std
pop
cwde
aad
lahf
sub
mov
cs
fdiv
dec
cmp
jo
sbb
xchg
repz
mov
in
jbe
test
test
ins
and
stc
es
(bad)
mov
ret
cwde
mov
ds
clc
popa
out
jnp
cmp
adc
mov
xor
jmp
(bad)
sbb
jl
jb
(bad)
aad
push
(bad)
jmp
jo
mov
jle
and
and
(bad)
cmp
enter
ror
aaa
bound
daa
test
mov
cmp
adc
inc
dec
mov
lods
loopne
popf
cmp
push
jmp
cmc
inc
mov
inc
aas
push
rcl
mov
mov
mov
(bad)
nop
jmp
mov
xchg
xchg
xor
pop
or
pop
outs
imul
dec
cwde
inc
mov
sbb
imul
fbld
push
adc
adc
mov
call
jle
outs
xlat
cli
repz
arpl
pop
sbb
or
adc
push
in
cmps
(bad)
xchg
xor
mov
mov
adc
inc
mov
ss
ins
out
int
sbb
xchg
lahf
inc
push
adc
in
nop
fwait
mov
cmp
adc
aas
popf
sub
jl
sub
or
jae
popa
dec
sub
div
ret
xor
add
mov
jmp
movs
and
pop
add
outs
call
mov
inc
ins
dec
in
es
aas
addr16
adc
popf
stos
mov
pop
mov
scas
dec
adc
test
mov
mov
fwait
mov
inc
push
or
mov
mov
iret
hlt
mov
or
xchg
jle
inc
jbe
push
mov
ja
adc
pop
cmp
fst
or
and
push
inc
jno
cmp
out
adc
cmp
pop
pop
xchg
mov
jg
nop
or
bound
xchg
xor
cmc
je
sbb
pop
out
add
pop
aaa
mov
retf
data16
cmp
pop
in
add
xchg
mov
cmc
inc
jp
cmp
pusha
add
inc
inc
fs
je
dec
call
test
sti
add
aad
ja
lock
sti
(bad)
retf
and
jecxz
shl
sbb
or
mov
jge
adc
loope
dec
adc
test
sbb
mov
(bad)
imul
or
in
mov
stc
xchg
and
ret
xchg
add
icebp
test
(bad)
ficomp
mov
ss
sub
out
outs
xlat
fdiv
test
push
sbb
xlat
dec
or
xor
scas
retf
mov
adc
dec
cmp
stos
xor
inc
jo
adc
jle
rcl
stc
out
cld
push
mov
push
cmps
clc
add
bound
sub
cmc
pop
into
push
add
sub
mov
push
movs
sub
adc
addr16
jg
jnp
jnp
sub
mov
lea
cwde
in
sbb
push
cmp
call
leave
shr
xchg
dec
sbb
push
adc
xchg
neg
retf
fild
dec
pop
fsub
sub
xor
mov
lods
sub
daa
repz
fsub
fsub
inc
(bad)
xchg
int3
push
mov
icebp
xor
das
mov
add
push
dec
int
cmp
ins
or
aam
pop
aad
jge
inc
inc
sbb
sbb
push
and
xor
adc
test
ficom
stos
mov
loopne
sub
js
imul
and
cwde
retf
and
hlt
inc
sar
ror
xchg
sbb
loope
or
add
and
sbb
test
in
das
inc
neg
test
f2xm1
push
ins
in
shr
xchg
(bad)
push
mov
loopne
sti
mov
cdq
inc
dec
stos
scas
and
add
fmul
and
sub
fucomp
xchg
mov
sahf
mov
jmp
dec
pop
movs
pushf
rcl
ret
cmp
fild
mov
aas
fmul
pusha
dec
inc
sbb
pop
pop
sbb
cmp
loop
int
jl
dec
scas
xchg
xchg
cmp
lea
adc
pusha
or
in
xchg
mov
enter
mov
jmp
shr
adc
mul
ja
pop
push
sbb
inc
retf
adc
cmc
mov
sahf
clc
arpl
outs
inc
das
sub
sub
std
mov
pop
cwde
shr
and
hlt
call
cdq
std
inc
retf
jmp
bound
jmp
or
or
mov
jne
or
add
mov
sbb
std
dec
cmp
cmp
retf
or
inc
add
adc
jmp
out
(bad)
hlt
std
dec
arpl
xor
pop
inc
cli
sbb
jbe
jns
mov
and
ret
mov
les
(bad)
sub
adc
push
and
sub
test
imul
inc
mov
sahf
or
push
mov
lock
(bad)
cli
push
jae
ja
sub
lea
cmp
jg
ret
inc
xchg
or
dec
repnz
fisttp
sbb
xchg
jg
and
xor
mov
pop
dec
mov
jge
and
mov
xor
jnp
popf
stos
add
push
mov
hlt
pop
pop
push
aas
and
pop
das
xor
stos
loope
retf
jo
fsub
popf
mov
xchg
xchg
dec
mov
mov
dec
and
xchg
outs
pop
fist
sub
fld
enter
gs
cmp
mov
fwait
les
je
xor
leave
and
out
pop
pop
cmp
movs
(bad)
cmps
out
ins
sub
xor
daa
rcr
xor
sbb
jmp
pop
jne
bound
sub
movs
jg
loope
jg
inc
push
stos
fcom
jae
(bad)
jo
shl
dec
call
scas
add
jl
fwait
scas
lods
imul
push
hlt
fwait
cmp
pop
dec
icebp
test
int
mov
out
shl
inc
jae
js
inc
push
gs
cmp
xchg
stos
push
enter
cmp
loop
mov
loopne
adc
imul
mov
inc
lock
sbb
jae
fwait
ds
xchg
out
in
adc
call
and
lahf
push
sar
test
cli
pop
lods
mov
test
outs
out
cmp
idiv
or
mov
aam
daa
repnz
pusha
xlat
out
pop
push
adc
mov
push
lods
mov
push
(bad)
in
push
xor
cs
push
not
lds
add
xlat
aas
jne
xor
dec
adc
mov
cdq
pop
cwde
mov
gs
lfs
out
adc
jnp
xor
std
mov
add
mov
out
scas
lds
and
pop
sbb
push
mov
xor
call
sub
push
adc
add
mov
push
sahf
dec
xchg
cmp
and
bound
ins
test
jnp
pop
mov
and
sbb
cdq
mov
sub
xchg
retf
jmp
cmps
push
mov
inc
push
sti
jbe
add
fistp
cmc
mul
push
repz
in
cld
enter
push
or
pop
inc
sbb
or
pop
cli
sub
push
mov
xchg
shr
jecxz
pop
adc
ja
jge
sbb
mov
test
inc
sbb
fist
inc
sti
sbb
xor
xor
xor
mov
dec
test
(bad)
loopne
loopne
icebp
push
sub
jns
xchg
mov
pop
(bad)
mov
cmp
cmp
js
jmp
xor
fs
xor
fst
stos
ins
pop
xlat
out
ins
mov
aam
mov
sub
dec
stc
out
push
cmp
sub
(bad)
sub
in
pop
xchg
cmc
repz
std
cmps
xor
jg
dec
xor
mov
or
and
adc
imul
mov
xchg
ins
fsubr
into
inc
fwait
xor
in
dec
in
sahf
bound
ror
in
mov
fnsave
pop
dec
adc
in
mov
or
xor
aad
iretw
inc
or
adc
jle
outs
fstp
xchg
stc
cmp
out
inc
pop
or
lock
mov
sub
jb
gs
or
(bad)
sbb
hlt
fmul
js
stc
jns
js
fild
adc
xchg
lahf
pop
out
retf
push
jl
js
je
(bad)
pop
int3
les
call
pop
lahf
push
dec
mov
dec
ret
sub
xor
sub
jae
jp
(bad)
jno
ins
stos
xchg
cmp
mov
rol
inc
or
sbb
lock
(bad)
jl
test
scas
call
fwait
dec
jae
push
inc
pop
mov
aad
mov
std
aam
mov
mov
and
test
add
in
lds
lods
ret
xor
mov
ret
add
cmp
mov
lock
and
ins
push
(bad)
pop
cli
bound
jp
cwde
dec
ror
pop
and
in
stos
pushf
push
mov
sub
dec
test
xor
mov
push
addr16
dec
pop
cmps
or
push
push
cmp
and
and
jmp
pop
or
xchg
mov
(bad)
fcomp
ins
push
mov
push
js
inc
out
stc
xchg
lods
into
inc
ja
jl
pop
out
aam
in
aad
inc
or
icebp
push
shl
and
dec
add
outs
inc
cld
push
push
jae
test
int
rcl
dec
popf
aaa
leavew
adc
sub
pushf
jle
sub
mov
shl
dec
xchg
lea
mov
mov
mov
push
pop
(bad)
scas
push
mov
add
sbb
xchg
sbb
cmp
sub
mov
(bad)
mov
jecxz
pop
sbb
sbb
shl
push
lahf
cmp
clc
inc
loope
add
push
dec
jg
push
(bad)
dec
sbb
fdivrp
sub
retf
mov
or
mov
loop
pop
cmp
ds
jmp
retf
xchg
gs
fnstsw
xchg
cmp
dec
sahf
scas
mov
lds
adc
adc
jne
mov
inc
xchg
and
in
sub
xor
enter
mov
fadd
cmps
push
mov
loop
rcr
ds
out
adc
mov
ins
rcr
add
xchg
cmp
mov
cmp
retf
(bad)
pop
ds
adc
mov
and
lahf
pusha
sub
repz
fist
test
mov
pushf
daa
fcomp
jo
mov
hlt
push
aas
mov
mov
pop
imul
push
cmp
mov
ins
add
mov
je
sar
daa
cli
jle
sub
cld
pop
jo
rol
bound
and
or
in
mov
fdivrp
sti
push
je
xor
stc
xor
adc
repnz
imul
push
aad
cdq
jp
loop
popa
ja
lds
lea
(bad)
cwde
les
mov
pop
pop
mov
arpl
movs
mov
cdq
pop
push
add
jmp
(bad)
xchg
sbb
js
push
aaa
add
gs
xchg
lahf
mov
fucompp
(bad)
arpl
retf
test
cli
xchg
test
xor
ret
loop
push
mov
mov
inc
or
fistp
pop
outs
pop
loopne
gs
lods
inc
imul
stc
stc
(bad)
jp
mov
(bad)
rsqrtps
int3
mov
out
add
add
(bad)
fdivr
cmp
cmps
sbb
pop
dec
js
into
xor
stos
shr
(bad)
daa
mov
shl
push
in
lods
xlat
mov
into
rol
mov
inc
test
or
mov
sti
xchg
push
cmp
ret
pop
pop
lea
lock
add
push
jmp
scas
call
fxch
cwde
daa
fld
dec
neg
inc
sar
sbb
adc
dec
push
or
das
and
pop
in
pushf
cmp
cmps
test
jg
getsec
mov
movs
xor
pop
pop
and
popf
cmps
lds
lea
cs
sbb
test
or
mov
arpl
mov
ret
clc
pop
and
fs
sti
(bad)
mov
repz
pop
push
out
sub
pop
sub
outs
imul
imul
stc
pop
repnz
pop
into
push
pop
outs
dec
or
cld
and
cld
inc
ror
rcl
imul
or
dec
cld
cmps
xor
ins
pcmpeqw
sbb
cmp
jmp
pushf
mov
in
leave
jns
call
cmp
nop
cli
mov
xor
inc
out
outs
pop
mov
sub
out
gs
xchg
sti
add
adc
test
jno
adc
dec
loope
and
xchg
xor
lods
xchg
cmp
pusha
das
movs
or
push
xchg
jae
les
test
add
add
push
jle
pop
xchg
push
jle
xchg
(bad)
or
jg
sbb
dec
gs
xchg
out
stc
pop
jns
popa
inc
outs
sbb
sbb
iret
outs
sbb
push
or
xor
(bad)
int3
outs
sbb
(bad)
mov
adc
cmp
fdivr
jecxz
call
sbb
enter
mov
(bad)
(bad)
xlat
aas
jo
call
push
jae
pop
(bad)
mov
sub
jp
into
push
pop
(bad)
(bad)
sbb
stos
ss
lods
dec
or
lods
mov
sahf
stos
out
loopne
xchg
int
sbb
in
push
dec
jle
(bad)
cmc
das
mov
jmp
cdq
ret
adc
fadd
out
add
mov
dec
jb
gs
push
jmp
mov
and
fwait
jmp
or
sbb
sub
dec
das
jmp
in
hlt
ror
xlat
pop
or
ret
xor
test
(bad)
fdivr
out
inc
adc
xor
repz
mov
call
test
jae
test
jp
jge
mov
mov
(bad)
out
pop
mov
cmp
cs
pushf
xor
(bad)
pop
fnsave
push
dec
aam
cmp
mov
dec
mov
sbb
or
sub
jns
cmp
aam
mov
fcom
mov
xor
call
lds
sub
addr16
sub
cmps
shr
push
mov
(bad)
xor
cli
ret
jo
addr16
(bad)
or
fcom
addr16
icebp
cmps
pop
cld
fs
lahf
jb
(bad)
in
inc
or
dec
cld
fld
(bad)
pop
add
xchg
fdivr
and
in
sub
iret
add
mov
jno
test
sbb
push
cld
cmp
das
push
add
mov
add
pop
jne
stos
in
add
nop
dec
imul
mov
cmp
(bad)
movs
inc
push
call
mov
jo
add
fs
cdq
mov
fdivrp
scas
jg
ret
sub
jnp
out
aas
xchg
or
jmp
sbb
shl
adc
adc
dec
jne
inc
loope
fcmovbe
nop
lods
addr16
aaa
cmps
loop
xchg
jl
xlat
retf
mov
daa
outs
loopne
loopne
sub
loope
and
xchg
fmulp
stos
add
mov
dec
lods
hlt
dec
and
mov
push
(bad)
rcl
pop
dec
push
in
sbb
int3
cmp
sub
dec
fisttp
pop
and
mov
push
or
push
out
rcl
ret
sbb
jb
fdiv
mov
rcr
xchg
push
or
mov
sti
xor
sbb
jbe
mov
xchg
xchg
(bad)
(bad)
(bad)
mov
ins
jnp
and
sbb
inc
hlt
ror
fdiv
ins
jno
shl
and
cmp
mov
inc
idiv
fidivr
or
ss
mov
fs
xchg
jne
sti
pop
pop
dec
stc
jne
mov
stos
add
jae
rol
or
nop
adc
jle
sar
sbb
and
retf
jo
jmp
(bad)
pushf
outs
mov
nop
dec
push
pop
jg
ret
sbb
jg
pop
inc
std
sbb
loop
lock
in
enter
sti
and
dec
xchg
ret
retf
sbb
test
inc
imul
fwait
xor
test
lahf
pop
cwde
bound
test
mov
out
repnz
jmp
mov
add
jmp
adc
inc
add
addr16
movs
and
out
outs
push
sahf
ror
push
repnz
repnz
mov
aas
push
sahf
xchg
movs
std
jp
jno
popf
xchg
pop
xor
pop
push
and
std
leave
sub
dec
mov
out
std
das
inc
pop
jl
jle
inc
popa
fiadd
cmps
dec
push
mov
lgs
or
push
je
leave
mov
ret
inc
push
in
mov
gs
sub
mov
repz
fucomp
stc
sar
mov
xor
adc
test
dec
ficom
jmp
add
(bad)
(bad)
rcr
and
out
xchg
xor
jl
ficomp
ins
adc
es
xchg
rol
ficomp
adc
dec
(bad)
push
test
test
lahf
cmp
minps
or
xlat
ret
dec
mov
ins
xor
sbb
xchg
repnz
push
push
pop
je
fld
push
gs
cmp
push
inc
adc
jbe
les
and
data16
stos
dec
inc
jecxz
xor
jnp
clc
lahf
shl
int3
fcomp
ds
movs
ins
xor
jnp
mov
fxsave
push
pop
push
add
dec
gs
add
jne
shr
mov
add
jae
mul
jp
dec
xchg
and
inc
out
cmp
lods
inc
in
mov
test
xchg
cmps
neg
icebp
inc
sahf
cmp
js
mov
push
adc
addr16
fist
mov
inc
(bad)
mov
in
hlt
pop
pop
mov
fnstsw
fnstenv
sub
out
dec
ffreep
mov
mov
sbb
adc
xor
pushf
sub
xchg
pop
dec
cdq
xchg
lods
mov
and
lea
adc
(bad)
dec
(bad)
fwait
push
cli
(bad)
outs
dec
jnp
xor
not
je
jle
rcl
jno
add
out
and
jb
aad
sbb
hlt
repnz
sbb
sar
mov
lahf
xchg
jns
fldcw
mov
mov
aas
call
test
xchg
adc
ins
mov
or
jmp
pop
mov
sub
xor
sub
sub
dec
test
mov
cmps
add
sar
or
xor
mov
movs
ja
sbb
add
shr
jmp
push
mov
stos
adc
aaa
pop
or
int3
(bad)
fcmovbe
inc
(bad)
int
pop
outs
jge
lock
mov
add
or
aas
jl
push
mov
inc
repnz
cli
add
ret
fwait
sub
mov
lahf
lock
xor
or
xchg
xchg
popa
ja
jmp
(bad)
lds
iret
jl
aas
in
enter
inc
jns
adc
mov
mov
mov
leave
adc
sbb
iret
mov
cmp
add
jnp
mov
fcomi
adc
mov
ds
xchg
inc
jmp
jg
and
xor
in
std
add
loope
lods
ins
popf
pop
(bad)
hlt
push
shl
mov
out
push
scas
int
sti
retf
fcomip
sbb
mov
push
and
ja
sti
mov
push
cdq
pop
and
mov
sub
add
cmp
pop
cli
mov
cld
mov
out
push
jg
add
mov
mov
add
jmp
retf
jmp
mov
enter
push
sahf
adc
jns
inc
mov
sar
test
add
rcr
les
mov
and
and
scas
adc
pop
fisub
push
jl
xchg
cmp
mov
sub
push
xor
stc
cwde
and
cwde
jecxz
lods
push
cmp
hlt
std
sbb
dec
add
test
in
stc
xchg
mov
cld
mov
adc
cmp
out
push
(bad)
out
jb
popf
jp
jmp
push
stos
(bad)
or
(bad)
pop
out
mov
cmp
cmps
inc
pop
xchg
dec
pop
jb
mov
add
push
cwde
and
xor
loope
pop
sar
add
pop
and
cmps
test
mov
sbb
cli
mov
mov
ds
mov
mov
jmp
in
xchg
xchg
add
loopne
out
pop
xor
add
push
jne
mov
cmp
lea
pushf
xchg
pop
data16
clc
cmp
fidiv
lock
xchg
repnz
sbb
lahf
leave
push
xor
mov
movs
jecxz
clc
outs
cmps
jge
fstp
inc
sbb
imul
int3
cmp
xchg
arpl
cmp
jnp
xchg
int
adc
stos
fdivr
retf
icebp
jbe
aas
gs
retf
addr16
push
test
in
jg
stos
cmp
dec
adc
outs
adc
xchg
xlat
push
jnp
add
dec
scas
mov
out
jle
cdq
(bad)
dec
fistp
sbb
aas
stc
cwde
jns
retf
xchg
inc
inc
xor
test
das
ror
xchg
xchg
inc
outs
scas
clc
jl
fcomip
pop
lock
imul
fbstp
and
pop
(bad)
jg
fdivr
movs
clc
sbb
jae
mov
push
test
call
cmps
retf
push
and
pop
(bad)
sub
sbb
ret
addr16
lods
xor
jge
cmp
ret
mov
retf
iret
inc
jno
je
or
add
(bad)
mov
sub
xchg
data16
or
pop
push
jns
adc
aam
jmp
cli
or
inc
or
data16
js
xor
mov
xchg
or
movs
in
xor
mov
add
icebp
cmp
mov
cmp
pop
xchg
mov
sub
push
push
movs
dec
popa
mov
fs
xchg
jle
popa
ds
xchg
repnz
push
or
das
or
mov
ja
dec
and
lahf
jge
xchg
cmc
ja
or
dec
test
aas
adc
dec
pop
loop
sti
push
dec
scas
(bad)
out
pushf
rcl
(bad)
rcl
stos
pop
and
sar
xchg
dec
dec
cmps
daa
jl
loopne
jo
cld
ins
mov
pop
adc
cmp
mov
movs
or
push
xchg
mov
and
das
pushf
dec
inc
std
cdq
or
pop
or
cmc
fdivrp
xchg
and
pop
(bad)
sti
pop
ret
add
lea
fcom
mov
mov
cmp
repnz
push
cmp
movaps
jmp
aas
and
add
aas
fsub
jmp
jp
shl
add
push
jnp
jle
mov
xor
aaa
and
js
jbe
movhps
mov
mov
xchg
pop
ins
pop
xor
add
jl
fwait
adc
das
mov
jge
shl
scas
and
aad
in
addr16
inc
cmp
inc
outs
pop
jecxz
push
outs
popf
sub
ds
dec
mov
push
pop
daa
mov
mov
jo
adc
jecxz
outs
push
jne
or
sbb
addr16
sbb
lock
repz
test
jp
ret
retf
jle
dec
aam
cld
popa
sbb
xor
imul
mov
lahf
mov
mov
(bad)
cmp
out
inc
sub
movs
in
or
shl
jg
inc
inc
adc
stos
mov
xchg
icebp
lods
adc
ror
adc
pop
pop
xchg
sub
xor
lods
mov
lods
inc
and
ins
mov
out
jecxz
ret
gs
mov
push
(bad)
adc
sahf
retf
add
cld
xor
fnstenv
movs
in
adc
inc
in
pop
add
ds
sub
mov
(bad)
push
repnz
add
icebp
jbe
out
mov
repnz
mov
mov
loop
bswap
and
scas
(bad)
in
or
cmc
icebp
dec
popf
adc
add
ja
xchg
stos
ja
mov
add
jbe
lock
pop
xchg
add
mov
jns
jnp
mov
xchg
cmp
and
push
push
jecxz
sub
sbb
and
ret
sub
loopne
nop
dec
jl
lahf
dec
pusha
xchg
xchg
stos
sbb
and
xchg
push
sbb
cmc
rcl
cmc
sti
or
mov
sbb
movs
dec
mov
lods
xor
mov
pop
cld
pop
mov
dec
cmps
sub
jnp
jb
lahf
mov
mov
fdiv
retf
sbb
mov
dec
mov
add
mov
or
scas
ret
cmp
rcr
mov
repnz
or
(bad)
mov
sub
je
pop
fdiv
mov
aad
push
mov
xor
mov
ins
adc
push
mov
sub
xor
cs
shl
xlat
lods
pop
int3
ja
fimul
test
push
push
cmp
ret
pop
aas
mov
test
(bad)
cmp
xor
xchg
cwde
rol
dec
sbb
or
sahf
add
jg
xchg
mov
scas
adc
and
push
cwde
xor
jae
fs
add
test
cmp
ficom
ins
xchg
ss
mov
cmps
sbb
popa
lods
dec
arpl
pop
call
rcl
lods
push
add
mov
retf
inc
pop
xchg
mov
cli
ret
mov
sahf
lock
retf
jb
je
fstp
lock
movs
(bad)
or
(bad)
mov
cmps
lods
mov
fistp
jmp
push
and
or
imul
(bad)
mov
dec
add
mov
mov
cmp
jmp
setge
push
lods
push
xor
pop
cld
mov
mov
inc
ins
sub
dec
dec
retf
dec
(bad)
pushf
pop
mov
xchg
sbb
ins
fistp
jmp
cmps
pop
add
and
dec
inc
test
int3
jne
mov
repnz
mov
icebp
xchg
repnz
mov
jmp
mov
ret
cmp
lahf
jge
xor
test
ss
(bad)
cmp
rol
mov
scas
inc
push
mov
shr
std
jbe
add
xchg
or
lds
ror
pop
xor
popf
jo
je
dec
jge
or
call
je
xchg
mov
sbb
push
lods
cmps
scas
dec
push
xor
pop
dec
movs
call
mov
int3
out
pop
cmp
push
dec
gs
ins
push
(bad)
mov
push
repnz
xchg
add
aas
mov
and
aas
sub
push
mov
push
adc
push
fmul
fisttp
fs
cmp
cwde
add
lea
test
add
enter
xor
inc
inc
xchg
cwde
xor
pop
mov
test
sub
jne
(bad)
je
and
stc
nop
int3
not
addr16
mov
ret
int
mov
jne
xor
inc
cmp
add
pop
in
fldenv
inc
xlat
pusha
pop
cmc
xchg
loopne
inc
jp
cld
xchg
mov
fs
shl
scas
sub
mov
gs
pusha
test
pop
pop
in
and
pop
xor
xor
mov
sbb
dec
dec
sbb
mov
stc
inc
fstp
pushf
jno
sbb
push
je
mov
xor
pop
shl
ins
mov
dec
leave
xchg
jl
push
mov
fwait
sahf
std
int
add
jmp
mov
iret
jo
pushf
dec
mul
and
test
mov
or
mov
test
daa
popf
je
lds
addr16
lods
mov
imul
inc
adc
sbb
fcmovnb
jo
jg
out
mov
adc
cmp
lea
xor
mov
je
into
jbe
test
adc
xchg
les
add
dec
and
mov
sub
push
sahf
ret
ja
dec
add
push
imul
mov
add
fst
pop
or
stc
je
call
repnz
imul
or
fistp
mov
mov
xor
sbb
stos
jecxz
push
shl
gs
jecxz
mov
fucomip
sbb
mov
mov
fild
inc
mov
dec
xor
inc
add
add
xchg
enter
cmp
jne
neg
(bad)
inc
cmp
outs
clc
add
add
out
jge
jmp
ds
pop
pop
aas
sbb
call
pop
push
leave
mov
adc
test
push
das
int
sbb
nop
xor
pop
and
jae
outs
fadd
adc
pop
or
add
lea
fdivr
sbb
cmp
xchg
lds
data16
xor
jbe
cmps
mov
xchg
cld
in
ja
push
repnz
outs
into
xchg
stc
lods
pop
push
xchg
outs
inc
adc
pop
or
addr16
adc
or
jno
pop
in
jno
lea
(bad)
sar
mov
dec
test
jge
loope
int3
ret
jae
inc
dec
jo
push
imul
push
enter
sub
cmc
adc
push
aad
cmp
mov
mov
les
and
fwait
mov
mov
into
sbb
jg
(bad)
out
mov
and
sbb
(bad)
arpl
jecxz
out
push
test
bound
(bad)
ja
ins
rcl
popa
imul
push
rcr
daa
out
enter
aad
xchg
retf
sub
cli
hlt
icebp
xchg
push
frstor
add
add
leave
movs
sub
adc
dec
(bad)
jle
jl
sub
mov
outs
pop
mov
cmp
movs
mov
ficom
sar
sub
jge
jns
xor
sbb
cli
std
xor
xchg
sub
mov
(bad)
fstp
gs
loop
ret
mov
js
xchg
cmp
pop
add
xchg
fbld
jns
popf
ja
out
sub
scas
push
xlat
test
pusha
cmp
jbe
xlat
mov
push
pop
out
lea
repnz
cmp
inc
cli
stc
mov
sbb
fdiv
and
iret
inc
inc
jecxz
xor
sbb
xchg
daa
adc
dec
and
inc
(bad)
fstp
fwait
(bad)
cmp
xor
dec
mov
mov
ins
jbe
retf
push
(bad)
imul
mov
ja
int
jmp
imul
and
jnp
and
and
ja
dec
fsubr
sbb
add
shl
out
or
adc
lea
loop
hlt
push
dec
js
cmp
mov
sar
xchg
push
dec
int3
xor
push
pop
paddsw
cmp
and
xor
jmp
dec
push
jge
mov
push
repnz
push
ret
bound
test
inc
jnp
lahf
adc
push
cmp
pop
push
mov
push
aad
push
test
inc
add
inc
cmps
cli
jns
xor
push
ja
hlt
clc
push
jb
cdq
pop
or
popa
inc
ja
stc
aaa
push
data16
(bad)
cmp
adc
into
mov
or
fnstenv
push
(bad)
fwait
mov
inc
inc
sub
cdq
sbb
push
sti
je
fsub
jge
pop
f2xm1
or
ins
hlt
mov
aas
xor
mov
dec
fimul
int3
jp
inc
add
lods
mov
adc
retf
(bad)
add
mov
add
sub
jmp
cmp
cld
arpl
data16
jne
out
std
fnstsw
ins
(bad)
pusha
add
movs
sub
add
test
or
retf
cdq
mov
push
mov
and
sbb
dec
jb
push
push
add
test
mov
sub
adc
movs
mov
std
mov
outs
and
xor
loope
xor
fistp
jns
mov
pushf
sbb
fwait
enter
jecxz
add
das
xchg
dec
adc
or
ds
push
push
adc
xor
pop
imul
cmp
dec
je
dec
push
mov
mov
xlat
pop
dec
rcr
jmp
jb
xchg
movs
dec
jnp
loope
or
and
imul
sbb
mov
or
pop
rcl
cli
xchg
test
lods
addr16
shl
retf
adc
jne
iret
mov
mov
dec
jge
mov
ffree
scas
inc
and
dec
or
xor
lahf
push
ins
pop
xchg
mov
sub
push
aas
adc
fstp
pop
jl
fcmove
mov
mov
icebp
sahf
pop
retf
loope
lahf
loopne
jge
add
(bad)
(bad)
adc
mov
out
movs
pop
mov
movs
add
sbb
nop
dec
or
mov
push
scas
test
scas
inc
and
scas
pop
ss
out
lods
jnp
sub
test
push
adc
add
test
pop
fs
adc
call
fcmove
jp
jg
inc
dec
xchg
seta
fbld
pop
out
dec
clc
lods
inc
xchg
gs
fmul
(bad)
fsub
ror
xchg
call
retf
inc
fs
pop
inc
dec
sbb
ins
bound
add
scas
cmps
sub
pop
dec
mov
xor
ficom
jl
jmp
imul
inc
adc
pop
ret
jne
add
push
jnp
dec
test
xchg
dec
fs
arpl
xchg
cmp
sub
cmp
(bad)
(bad)
call
mov
fnsave
ret
ret
pop
cwde
ror
scas
test
fcom
inc
xchg
jp
fwait
xor
mov
sub
jbe
movs
push
pop
aam
xor
mov
push
pop
daa
aas
test
nop
imul
leave
(bad)
pop
stc
mov
adc
adc
pop
jns
sub
das
dec
stc
push
jmp
fs
mov
pop
xchg
pushf
lahf
push
mov
leave
push
push
xchg
mov
pop
aad
mov
lds
lahf
add
pop
mov
or
ins
and
mov
ss
mov
inc
popa
lock
adc
xchg
leave
scas
ds
push
test
jle
push
inc
pop
sub
out
mov
imul
ja
jg
in
lods
sub
dec
retf
call
jmp
and
fwait
push
call
cmp
sub
mov
push
inc
or
and
dec
xchg
int3
mov
xor
mov
arpl
popa
cli
xor
dec
lahf
and
hlt
sub
sub
pusha
pop
xor
add
or
sbb
mov
or
lods
jecxz
mov
push
inc
and
xchg
out
ja
ins
dec
stos
inc
xchg
dec
push
inc
shl
jl
pop
xchg
xor
mov
fnstsw
sbb
sub
hlt
mov
mov
sbb
movs
cmp
aaa
pop
jle
jle
and
fmul
dec
add
sbb
lds
lock
inc
aam
add
xchg
aad
mov
jno
test
add
jg
cmps
pop
test
sub
imul
xchg
sar
(bad)
outs
pop
push
xchg
and
popf
dec
or
adc
push
ins
aas
mov
push
pusha
pop
xor
clc
ins
mov
outs
mov
jmp
dec
call
int
fcomp
inc
aad
pop
xor
push
ror
dec
push
pop
movs
sub
(bad)
ficomp
inc
adc
scas
ds
sbb
cwde
xor
and
nop
mov
(bad)
and
push
clc
dec
add
sbb
sbb
jno
jne
rcl
pop
pusha
mov
inc
dec
clc
pop
xchg
dec
ja
inc
cmp
or
movs
cli
test
ret
cmp
call
adc
add
adc
popa
or
xor
out
mov
add
(bad)
sbb
into
test
call
in
test
mov
sbb
cli
pop
jl
jb
inc
rcr
xlat
push
shl
dec
cmp
rol
test
sti
aaa
mov
sbb
(bad)
outs
xchg
jl
ret
xor
pop
adc
fmul
jmp
cmp
and
retf
xor
mov
and
inc
push
leave
loopne
push
and
or
(bad)
sti
adc
sub
movs
aad
dec
cli
(bad)
push
icebp
ror
add
in
cmp
sub
shl
test
ss
push
dec
inc
cmp
mov
xor
sbb
or
cmp
jmp
push
mov
and
push
mov
rol
dec
mov
sahf
jb
inc
xchg
ficomp
stos
xchg
cmps
leave
das
push
in
dec
dec
and
xchg
popf
pop
out
call
mov
scas
adc
cmp
arpl
out
xchg
pushf
sub
cmp
xor
jne
cdq
movs
mov
lods
or
and
lahf
sti
(bad)
retf
fnstcw
fist
xchg
jge
sbb
int3
and
cmc
xchg
add
js
xchg
in
daa
jmp
cmps
ret
inc
pop
addr16
push
pop
jp
(bad)
fwait
pop
out
(bad)
(bad)
fist
sti
seto
imul
pop
fwait
cmp
aad
mov
push
mov
in
inc
sbb
xchg
fchs
shl
jb
stc
les
fdiv
test
cmp
arpl
jge
and
ret
jmp
bound
jmp
pop
std
sbb
push
repz
lahf
mov
repnz
mov
loop
jbe
test
or
jne
ins
xchg
fild
cld
mov
movs
jne
fwait
push
inc
out
push
(bad)
into
push
add
ja
xchg
mov
xor
adc
add
and
test
fnstcw
nop
dec
dec
repz
mov
mov
inc
outs
hlt
repz
inc
ret
imul
sub
es
stos
fnsave
out
jns
test
mov
pop
cs
xlat
push
popa
lea
pop
push
jge
mov
push
leave
clc
leave
sti
movs
jecxz
pop
fadd
mov
ins
xchg
sar
sar
test
fptan
cmp
nop
loop
ins
sub
or
out
out
mov
out
mov
adc
rcr
std
xchg
jb
(bad)
mov
adc
mov
jl
icebp
(bad)
inc
inc
jge
(bad)
pop
pop
fbld
sub
pop
sbb
lods
cmp
loopne
cli
cmc
imul
jp
ret
dec
into
xor
jnp
add
cmp
adc
cmp
cli
dec
lock
add
pop
and
(bad)
dec
aad
ss
cld
(bad)
mov
push
pop
inc
sub
push
loope
push
cmp
or
xlat
mov
retf
adc
(bad)
and
pop
pop
aaa
mov
mov
lea
sahf
ja
cmp
lahf
jmp
adc
call
and
inc
int
pop
std
outs
cmps
(bad)
cmp
inc
sbb
push
cld
jg
dec
mov
sub
pop
stos
cmps
cld
movs
cld
pop
das
mul
inc
ficomp
push
and
xor
sbb
adc
(bad)
mov
cmps
pop
adc
mov
adc
js
push
mov
aas
push
aad
jmp
dec
into
add
inc
lock
fstp
push
lods
icebp
mov
push
mov
pop
clc
pop
xor
xor
enter
push
or
popa
mov
imul
dec
sbb
sbb
adc
jge
add
sbb
cmp
hlt
scas
cs
jmp
sbb
aam
and
cmp
test
icebp
pop
mov
dec
dec
inc
ds
mov
mov
mov
out
into
in
dec
dec
in
jg
in
sbb
add
mov
ret
jp
outs
mov
shr
dec
out
xlat
out
jle
mov
lea
pop
popf
mov
mov
jge
out
shr
push
cmp
mov
pop
jmp
mov
bound
bswap
adc
sbb
cmp
dec
mov
sub
add
dec
popa
sahf
in
retf
in
ins
test
stc
loop
cmp
or
gs
test
(bad)
inc
iret
jecxz
xor
mov
inc
mov
loope
(bad)
jle
daa
lahf
mov
in
repz
fldcw
icebp
inc
cmp
jmp
lock
or
mov
ror
pop
dec
(bad)
mov
rcr
sub
mov
jne
jge
pop
adc
jno
xchg
sbb
iret
fistp
cmp
xchg
ds
idiv
xor
stos
jb
dec
or
es
sub
add
pop
test
push
ds
jp
(bad)
je
test
sti
dec
jmp
cld
lock
adc
push
and
fbld
out
push
out
push
jb
aam
xchg
xchg
shl
cmps
mov
and
sbb
and
mov
mov
nop
jo
pop
jmp
pop
fsub
or
mov
nop
pop
out
mov
stc
out
push
cmp
sar
js
ret
outs
sub
enter
push
sub
cmps
or
sbb
in
pop
sub
jmp
sub
paddw
pop
mov
push
call
xlat
cmps
in
jno
pop
ja
aaa
not
mov
aam
push
ret
pusha
sti
push
fnstsw
(bad)
jge
sbb
adc
clc
xchg
lahf
imul
scas
inc
cmp
xor
test
(bad)
cwde
inc
pop
mov
in
mov
cmps
dec
mov
and
pop
pop
std
in
arpl
mov
pop
push
cmc
ds
das
lahf
data16
jae
fisub
mov
retf
iret
aam
xchg
fsub
inc
pop
sbb
pushf
push
out
cmp
cmpps
hlt
test
ins
cwde
je
xor
call
int
inc
das
push
mov
cwde
pop
dec
pop
push
jg
shl
cmp
pop
icebp
inc
xchg
loope
cmp
pop
or
enter
push
mov
popf
pop
cdq
jnp
gs
mov
xor
xor
leave
push
aas
mov
xlat
pop
xchg
out
lea
add
add
iret
or
mov
adc
mov
and
cmp
jno
or
mov
adc
call
int3
scas
mov
inc
mov
mov
sbb
mov
fiadd
pop
pop
mov
neg
cld
shl
xchg
adc
std
mov
inc
rcl
or
jb
not
icebp
xchg
or
in
add
and
mov
enter
xor
add
dec
cld
jne
iret
jae
sbb
inc
cwde
inc
(bad)
fs
add
jbe
in
mov
cs
pop
or
popa
out
inc
or
sub
add
lds
jge
add
and
ror
push
cmp
add
jg
push
mov
xchg
std
mov
outs
mov
and
xor
push
(bad)
xlat
aam
movs
xor
sbb
inc
(bad)
scas
sbb
sbb
fimul
icebp
jno
mov
push
or
leave
aad
pop
cmp
xchg
inc
pop
mov
cmp
popa
in
imul
add
cmc
adc
dec
std
pusha
int3
loopne
pop
dec
xlat
adc
mov
mov
int3
imul
leave
push
sbb
iret
push
jns
cmp
scas
and
sub
data16
dec
add
adc
(bad)
mov
jmp
fwait
jl
imul
cmp
ficomp
aad
mov
inc
pop
stos
jl
inc
adc
repnz
xor
push
lock
movs
jb
scas
xchg
mov
mov
mov
jecxz
xchg
jl
adc
mov
xor
cmp
inc
neg
xlat
test
scas
fnstsw
aas
pushf
mov
and
push
stos
pop
jl
repnz
mov
inc
push
adc
inc
pop
test
pop
adc
pop
push
fild
inc
bound
icebp
test
lods
jmp
or
mov
push
cmp
mov
dec
cmc
adc
hlt
clc
scas
inc
mov
push
jmp
ret
lods
dec
sbb
(bad)
add
inc
das
cmps
sbb
push
mov
mov
push
xchg
ja
cmp
fiadd
inc
jae
test
mov
sbb
aam
add
inc
xor
imul
xchg
shl
ja
int3
sbb
xor
or
ss
sahf
scas
pop
test
push
(bad)
mov
dec
ret
jns
loope
sub
rcl
adc
dec
mov
sbb
aas
movs
jmp
xor
std
xlat
pop
and
mov
jne
cmp
mov
and
ss
sti
push
test
jnp
dec
stos
cli
mov
aas
out
xor
dec
into
lods
mov
push
lea
(bad)
cmp
(bad)
cmc
jg
out
jno
movs
and
mov
adc
add
and
add
inc
rcl
cmc
or
inc
mov
push
rcr
dec
push
cmp
je
adc
or
push
stos
xchg
sbb
fs
scas
movs
lds
or
movs
jge
dec
rep
clc
mov
ret
cmp
shr
int
jne
fs
sub
shl
add
xor
call
aaa
retf
mov
xchg
stos
cmps
icebp
mov
ror
or
mov
stc
movs
hlt
dec
ins
inc
shl
sahf
push
int
jecxz
icebp
loopne
jmp
and
lock
xor
cmp
dec
push
push
sub
aam
mov
aad
cwde
aam
lds
and
mov
test
xchg
cmp
xchg
push
xchg
ins
clc
jne
popf
jae
xchg
and
xchg
call
xor
and
xchg
hlt
add
xchg
cmps
pushf
mov
cmps
adc
sbb
jne
pop
nop
icebp
xor
(bad)
hlt
shl
popa
xchg
add
shl
js
cmp
pop
aad
push
jmp
sti
ret
lock
and
mov
cli
ss
fwait
in
xchg
retf
cmp
add
or
jmp
call
mov
dec
mov
push
xor
call
pushf
fldenv
cld
push
popa
and
aam
cmp
outs
push
fucom
sbb
sub
aam
es
out
mov
ja
ins
(bad)
cs
mov
fcmovnbe
adc
dec
xor
mov
add
rol
inc
sub
nop
ss
popa
enter
je
push
push
push
test
sbb
xchg
pop
fcom
stos
xor
inc
sub
or
sbb
xchg
arpl
sbb
jp
xor
test
mov
xchg
cmps
cmps
fnclex
mov
mov
int
test
leave
ret
loope
out
mov
iret
blcs
mov
jae
ret
add
mov
imul
xchg
dec
loope
xchg
xchg
arpl
aad
movs
pop
sbb
iret
cmp
sar
mov
iret
jne
xchg
mov
xor
cmps
cld
mov
das
dec
loopne
jnp
add
adc
sbb
mov
pop
jle
mov
pop
aas
dec
cmp
in
mov
adc
mov
xor
stos
jmp
fmul
stc
xor
dec
mov
pop
add
inc
sub
sub
or
xor
pop
mov
push
xlat
inc
and
add
push
sbb
mov
push
jbe
lods
cmp
adc
pop
xchg
ja
pusha
xchg
mov
adc
mov
add
mov
(bad)
xor
sub
sti
je
xchg
mov
mov
in
stc
push
mov
imul
jecxz
sbb
sar
jle
or
jl
loope
dec
pop
push
sbb
psubw
inc
shl
pop
ss
aam
(bad)
xor
pushf
jmp
fldenv
inc
mov
mov
adc
ins
inc
pop
mov
stc
rep
cli
ins
pop
pop
jbe
in
pop
xor
pop
je
(bad)
dec
int
pop
mov
iret
jle
sti
push
imul
xor
push
addr16
retf
mov
pop
out
addr16
xor
pop
call
sar
jbe
add
push
push
push
inc
dec
xor
add
js
add
sbb
xchg
pop
adc
in
test
xchg
in
daa
xchg
outs
dec
enter
stos
add
xchg
movs
inc
in
inc
out
arpl
pop
clc
adc
daa
jmp
mov
push
dec
loopne
mov
cwde
out
xchg
test
jns
and
inc
ror
mov
fwait
loop
mov
pushf
cmp
dec
inc
leave
out
call
ret
dec
call
mov
(bad)
push
es
xchg
(bad)
push
pop
or
pop
mov
jle
adc
std
mov
mov
sar
pop
out
xchg
xchg
mov
pop
stc
scas
jbe
jb
bnd
js
pop
inc
mov
outs
das
mov
pushf
xlat
pusha
imul
jns
gs
test
fstp
push
test
jae
and
rcr
lea
int
add
push
sub
add
inc
cmp
mov
jmp
adc
imul
mov
inc
std
fcomi
jmp
icebp
int
mov
dec
arpl
mov
(bad)
pop
add
xchg
cmp
sbb
mov
xchg
inc
pop
xchg
cmp
xor
cmps
loop
xchg
xchg
xor
dec
loop
movs
inc
pop
pop
xchg
push
in
cmps
fucomp
mov
ins
xchg
add
stos
sub
xlat
in
scas
leave
imul
and
not
push
pop
inc
call
std
xor
mov
(bad)
xchg
add
(bad)
jmp
jecxz
pop
mov
mov
stos
fmulp
cli
mov
pop
out
(bad)
cli
loope
fisub
xchg
push
rol
sar
mov
mov
mov
adc
add
rcl
idiv
inc
sti
pop
(bad)
and
lea
shr
stos
mov
cmp
or
mov
inc
cli
adc
arpl
outs
jns
(bad)
jle
lds
jp
dec
movs
adc
push
dec
fadd
imul
ds
in
lahf
inc
mov
fdivr
jp
enter
lea
ror
add
adc
fldenv
out
mov
xchg
jg
adc
jmp
in
push
cmp
jb
in
add
xchg
jo
aam
retf
lods
stc
add
movs
dec
pop
je
inc
lock
sub
sahf
or
std
cmps
fs
push
lods
push
ins
sbb
and
call
loopne
jecxz
mov
int
mov
push
adc
aaa
or
fild
sahf
sahf
lock
dec
inc
mov
mov
repnz
mov
out
fwait
daa
adc
mov
cli
mov
mov
in
ins
(bad)
mov
jg
repnz
out
gs
icebp
xchg
fsub
ss
lods
test
cli
and
push
mov
sub
xor
out
ror
std
and
jmp
cmp
(bad)
lods
mov
xchg
jns
sbb
out
es
jg
call
pop
mov
jmp
pushf
dec
jne
or
mov
pop
xchg
ret
fwait
xchg
inc
adc
aas
popa
jbe
cmps
cwde
jnp
test
mov
cmp
les
or
sbb
push
mov
and
push
addr16
imul
in
mov
stos
scas
jmp
pusha
imul
mov
xlat
sbb
dec
and
push
repnz
cmc
mov
popf
dec
and
push
fldenv
jecxz
clc
jmp
inc
arpl
cmp
dec
addr16
loope
fs
mov
and
xor
in
mov
inc
retf
clc
mov
mov
(bad)
adc
mov
or
pop
scas
scas
lock
and
jo
mov
loope
call
mov
retf
cli
ret
xor
sahf
xchg
sti
mov
out
xchg
jae
sti
push
cmp
xchg
in
push
push
mov
mov
(bad)
pushf
std
and
xchg
shl
or
jl
in
shl
mov
inc
adc
push
mov
jle
test
jge
mov
add
push
inc
mov
cwde
inc
push
mov
retf
outs
scas
hlt
mov
iret
xlat
mov
pop
jae
cld
in
and
scas
jo
ja
rcl
das
leave
je
and
imul
dec
sbb
test
mov
xor
sub
in
sbb
sbb
popf
xor
outs
cmc
mov
ret
and
(bad)
mov
test
add
cdq
xchg
sub
add
mov
pusha
cmp
cld
mov
push
sbb
push
cmp
xchg
jno
pushf
lock
adc
xor
cmc
scas
pushf
enter
or
pop
xor
loopne
mov
cmp
scas
mov
shl
movs
and
dec
mov
pop
mov
add
inc
fs
sub
jnp
out
icebp
fidiv
cmp
jae
jo
pop
retf
jle
cmp
cwde
fnsave
inc
pop
add
sub
loop
call
scas
mov
push
mov
rcl
push
ins
popa
jo
push
jge
into
mov
pop
pop
xchg
sbb
int3
push
pop
cmp
mov
out
cmc
and
lds
rol
sbb
sub
pop
ficomp
adc
mov
mov
aas
sar
and
test
fyl2x
and
push
cmp
lds
jmp
ret
enter
push
xchg
sar
jo
push
clc
adc
jo
push
dec
pop
xchg
lods
div
rcr
and
sub
in
add
add
mov
xchg
xchg
aad
lods
enter
ret
cmp
sbb
adc
stos
inc
ja
jl
pop
sahf
dec
xor
std
cmp
punpcklbw
test
fadd
arpl
cmc
sti
data16
mov
popa
pop
leave
add
sbb
data16
gs
push
xchg
jne
xchg
sbb
out
xchg
push
dec
(bad)
(bad)
fbstp
xchg
mov
and
dec
mov
mov
stos
scas
cli
lahf
push
cmp
loop
xor
pop
sahf
retf
xchg
mov
dec
ret
inc
sbb
cmp
pop
adc
jmp
movs
jge
enter
cs
pop
test
push
sbb
into
inc
dec
add
pushf
add
xchg
cs
arpl
dec
rol
retf
out
mov
(bad)
ret
je
and
xor
inc
sar
fimul
mov
mov
mov
test
call
sub
sub
mov
retf
or
push
out
inc
pushf
push
fcomp
inc
aad
xchg
cs
call
push
sbb
stos
sub
and
push
iret
sti
cmp
xor
cmp
lea
lea
sbb
loop
test
movs
das
mov
daa
or
outs
jg
inc
jg
mov
pop
adc
fidiv
ror
dec
sub
fcmovnu
sub
jb
inc
test
lods
test
and
push
fldenv
shr
aaa
(bad)
adc
fucomip
mov
push
and
lods
test
lods
leave
push
fldenv
ja
out
mov
push
daa
inc
and
adc
adc
hlt
dec
mov
hlt
pop
out
arpl
pushaw
lahf
sti
movs
cli
sbb
adc
rcr
mov
stc
sahf
(bad)
std
gs
mov
mov
fwait
push
or
bound
add
es
dec
mov
push
xor
xchg
mov
retf
ret
cdq
mov
cld
and
rcr
repz
fdiv
in
jmp
mov
cmps
pusha
mov
xor
fild
pop
leave
mov
add
stos
pop
shr
jo
cli
pop
jae
lock
add
sub
scas
xor
daa
push
cmp
cmp
jno
fisttp
cmp
das
mov
in
out
fstp
push
push
adc
jno
push
std
mov
sub
push
fs
mov
call
inc
adc
in
jns
push
test
adc
pop
pop
lea
shufps
pusha
(bad)
cli
and
call
inc
mov
retf
fisubr
loop
int
std
stos
sti
add
xor
outs
out
pop
lds
inc
add
rol
xor
sbb
(bad)
lods
lods
std
and
rcr
lock
lds
or
or
jg
arpl
or
test
push
mov
inc
push
call
pop
cmp
ds
jae
outs
arpl
pushf
mov
imul
pop
jg
xor
jmp
add
mov
mov
pop
xchg
popf
pop
outs
jmp
lods
cdq
sub
mov
pop
test
ficom
gs
aaa
xchg
aad
or
ins
rcr
mov
clc
out
aas
sbb
pop
fwait
popf
and
cmp
cmp
jmp
xor
nop
into
dec
inc
mov
xchg
fidivr
mov
aaa
sbb
jl
fimul
ins
jae
and
jbe
mov
push
stc
xchg
ror
rcr
xor
jno
adc
jl
in
pop
dec
scas
dec
fbstp
ins
cmovne
dec
cmp
mov
adc
jno
mul
pop
cmp
xchg
push
sub
add
jns
sub
repnz
push
fldcw
xchg
inc
xchg
cmp
jne
dec
pop
fsubr
mov
push
mov
pop
sub
(bad)
pusha
add
rcr
cli
scas
fsubp
nop
(bad)
movs
and
mov
jo
test
push
outs
dec
adc
fstp
pop
fsub
mov
mov
aas
mov
ss
cli
rcl
clc
push
push
mov
mov
xor
inc
test
sub
call
jb
in
mov
sub
jp
xchg
outs
adc
xchg
xchg
push
mov
mov
call
in
ins
pop
cmp
test
addr16
adc
cwde
scas
in
loopne
pop
mov
aad
test
add
mov
arpl
rol
(bad)
lods
int
inc
es
into
and
sbb
dec
sbb
scas
jp
pop
aas
sbb
inc
sbb
out
mov
ror
test
inc
mov
mov
(bad)
popf
clc
or
dec
aaa
cmc
repnz
sub
ret
sub
test
rcr
cmp
pusha
pusha
test
fld
loopne
test
sub
push
add
test
dec
adc
pop
(bad)
xor
enter
pop
retf
adc
sti
mov
popa
sub
not
sysenter
mov
test
std
into
pop
scas
(bad)
pop
pushf
cmps
shl
dec
test
lods
inc
jae
repz
jno
imul
out
xchg
enter
(bad)
mov
into
out
adc
mov
je
inc
inc
xor
das
in
sbb
int
aaa
adc
int
(bad)
mov
jge
mov
cmps
pop
sbb
icebp
call
inc
inc
mov
popa
arpl
dec
adc
aam
adc
mov
jb
mov
and
inc
push
inc
jle
inc
jbe
cli
cmc
pop
scas
push
mov
add
mov
repnz
or
push
cmp
out
mov
push
cmp
je
cmp
mov
mov
sub
xor
std
sbb
(bad)
push
adc
sar
hlt
mov
dec
cwde
push
int
in
jno
aad
or
mov
movs
push
mov
cmc
xor
in
sahf
and
mov
fstp
and
ins
imul
mov
mov
iret
idiv
push
cmps
scas
push
in
aam
and
(bad)
std
dec
add
cmp
dec
enter
push
mov
aas
je
mov
jle
pop
out
jns
ficom
popf
aaa
ins
out
mov
jl
into
pop
adc
xor
fwait
push
adc
lea
and
xchg
xchg
inc
mov
mov
retf
or
sub
fstp
and
pop
adc
fwait
or
ret
retf
cmp
scas
in
add
in
loop
add
adc
jbe
mov
inc
sub
mov
xor
or
push
outs
pop
and
loope
ror
outs
leave
sub
and
scas
mov
push
sbb
dec
mov
sysenter
inc
mov
jne
adc
push
(bad)
sti
aam
ret
stos
pop
jl
push
aam
push
or
adc
fcomi
inc
jp
call
cmp
pop
icebp
mov
push
sbb
xor
jb
mov
icebp
and
ds
inc
push
add
rcr
cmp
call
sub
dec
push
loope
mov
cs
sbb
int
sbb
pop
sti
adc
ret
sub
pusha
test
add
jg
das
cmps
movs
and
rcr
push
and
jne
mov
inc
in
xchg
mov
pop
mov
in
pop
sub
ins
sub
add
mov
push
cmp
fs
and
fisubr
jmp
test
jmp
sahf
adc
or
das
dec
jge
fild
add
test
nop
iret
inc
rol
ins
mov
shl
or
imul
or
dec
sbb
push
movs
aad
sets
push
mov
sub
(bad)
es
mov
outs
or
push
jbe
xlat
sub
inc
push
out
add
adc
sbb
(bad)
xchg
(bad)
fisub
xchg
mov
in
nop
dec
mov
shr
daa
shl
push
jno
cmp
mov
cli
je
call
scas
jo
pop
aad
mov
add
or
imul
mov
push
xor
ja
or
cmps
push
(bad)
cmp
cmp
sbb
pop
push
or
(bad)
in
retf
fcom
(bad)
mov
ror
imul
jl
add
aaa
xchg
lahf
(bad)
int
dec
stos
sahf
into
ficom
fwait
dec
push
movs
pop
aaa
cld
lds
adc
frstor
push
loop
and
or
sub
dec
pop
cmps
mov
out
lods
mov
dec
neg
pushf
xor
jmp
repnz
pop
lock
lods
das
test
loop
jmp
mov
mov
cmp
inc
stos
cmc
dec
iret
xchg
data16
cwde
jp
pop
fmul
cdq
aaa
pusha
cmp
or
es
js
push
lock
std
or
mov
js
fsubr
or
test
stos
stos
les
fadd
xor
sub
clc
push
jmp
adc
push
scas
push
and
pop
jbe
fucom
ins
push
xchg
fstp
rol
dec
jp
ins
and
adc
sbb
pop
fbstp
test
addr16
inc
sub
bound
rol
loop
ss
ins
addr16
(bad)
jmp
sub
jecxz
je
das
stos
adc
out
fst
pop
and
das
xor
mov
pushf
mov
(bad)
ins
mov
dec
mov
xor
imul
sbb
dec
fs
push
mov
leave
jns
mov
mov
dec
push
loopne
mov
shr
push
sub
stc
out
and
inc
outs
fwait
retf
call
mov
stos
xor
dec
stos
mov
outs
aam
rcl
popa
push
inc
mov
dec
fild
add
cs
inc
adc
(bad)
xchg
mov
adc
mov
daa
mov
fdiv
adc
sti
int
inc
push
popf
test
adc
dec
leave
or
call
cs
es
jb
not
ins
pop
push
out
aad
lock
xchg
pop
and
ja
mov
scas
push
mov
lods
mov
mov
fmul
cmp
stc
cmps
and
dec
fdiv
call
mov
outs
in
xchg
adc
pop
xchg
scas
jne
sbb
popf
lahf
iret
sbb
in
test
sbb
lea
pop
xor
and
xor
lods
retf
jmp
add
sar
sub
jmp
shl
or
es
xor
cwde
retf
inc
fdivr
mov
pop
arpl
cmp
fldenv
sbb
dec
adc
fisttp
popa
shr
pop
ret
dec
cmp
cmp
data16
cmp
push
cli
pop
loope
xchg
int3
aad
pop
xchg
fistp
adc
add
sti
icebp
push
mov
ins
xor
jp
sar
inc
lahf
loope
repz
pop
sbb
add
adc
out
jmp
stos
xor
hlt
fdivr
jge
in
jp
jbe
push
and
repnz
stc
xchg
cmp
xchg
aam
rol
mov
mov
scas
outs
(bad)
daa
xchg
icebp
rcl
rcr
xor
jo
sahf
out
push
arpl
lds
sbb
mov
retf
push
aad
sbb
shr
pop
push
cmp
test
push
mov
lods
data16
test
in
nop
jne
push
mov
cmp
retf
in
fs
add
rcr
cmp
icebp
loop
in
out
dec
repz
call
xor
dec
ins
xchg
lods
movs
jns
add
cmp
movs
pop
cmp
addr16
xchg
and
pop
arpl
lds
in
xor
pop
push
outs
or
in
mov
jg
push
inc
(bad)
pop
jmp
lock
push
nop
push
imul
mov
lea
das
adc
pop
xor
retf
inc
(bad)
adc
movs
and
test
sub
ins
adc
hlt
aad
mov
ds
ror
mov
xchg
(bad)
in
ins
gs
pop
xchg
or
test
out
adc
retf
fst
inc
repnz
pop
mov
xor
pop
scas
in
sub
cmp
bound
lock
mov
adc
adc
movs
jl
rcl
in
aad
or
sub
das
shr
rcr
out
outs
add
mov
aam
stos
mov
cld
fnstcw
pop
jmp
stos
jnp
and
cwde
in
jmp
cmp
jmp
mov
repnz
scas
xchg
sahf
cmp
xchg
cmp
adc
in
sbb
pop
rcl
mov
pop
aam
pop
pushf
or
outs
push
pushf
and
sahf
adc
out
mov
int3
mov
push
(bad)
es
(bad)
in
pop
sbb
iret
test
cmp
clc
fsub
pop
and
mov
or
sub
pusha
pop
push
mov
mov
shr
test
loop
je
mov
fwait
sahf
xchg
inc
inc
dec
add
retf
ror
jmp
jge
fwait
cli
jg
(bad)
xchg
mov
ret
lahf
inc
loop
push
sub
mov
cld
adc
pushf
loope
out
pushf
clc
and
or
inc
and
fsub
imul
lahf
mov
xor
jbe
mov
ins
pop
jmp
popa
mov
(bad)
in
pmaddwd
pusha
xchg
fsub
fmul
cmp
jne
std
xchg
shl
push
xchg
cmp
jbe
push
movs
mov
sti
pop
movs
pop
lahf
and
in
iret
adc
retf
add
ja
ds
stos
mov
dec
(bad)
es
lea
xchg
pop
(bad)
(bad)
stc
pop
push
xchg
push
cmps
popf
sub
inc
and
mov
test
inc
xor
adc
fnstcw
fldenv
mov
jns
inc
std
inc
out
dec
out
ja
mov
cmp
arpl
pop
adc
fstp
adc
ja
ja
sub
and
jg
sahf
pop
fisubr
(bad)
cwde
inc
sub
push
xor
lock
pop
adc
push
and
popa
mov
pop
call
inc
aam
retf
sbb
in
sub
push
mov
xchg
fs
pop
(bad)
imul
mov
repnz
(bad)
sub
jo
xor
js
(bad)
adc
adc
add
retf
sbb
mov
mov
pusha
sbb
aad
das
imul
adc
bndstx
ret
in
jge
dec
mov
inc
jae
pop
xchg
ficom
sbb
ins
push
outs
mov
mov
xor
sar
test
scas
out
push
ds
dec
pop
mov
es
pop
pop
inc
ret
add
add
mov
imul
pushf
aam
ins
ss
dec
repnz
es
push
stc
xor
repz
and
add
cmp
sbb
sbb
popf
xchg
dec
mov
hlt
mov
shl
fidivr
xor
shl
xchg
sub
cmp
push
adc
not
pushf
std
jecxz
push
cmp
dec
cmp
inc
push
ficom
push
push
pop
das
add
jecxz
xlat
push
push
xor
lods
out
sbb
iret
les
cdq
hlt
push
arpl
mov
popa
push
push
stos
outs
dec
loope
xchg
clc
or
mov
or
test
(bad)
stos
imul
pop
mov
pop
test
xor
sub
cmc
push
pusha
jne
leave
test
call
(bad)
iret
adc
cmps
les
cmp
ins
pop
xchg
jmp
mov
or
push
cmps
xor
cdq
arpl
sahf
or
or
ins
(bad)
lahf
data16
cmp
mov
mov
jno
aad
add
xor
jne
icebp
fnstsw
pop
and
mul
aaa
push
nop
in
add
in
call
fisub
cmp
inc
lods
fwait
std
ror
jmp
mov
xchg
sub
push
sub
call
xor
xlat
dec
rcl
test
movs
test
jns
mov
pop
sahf
call
pop
add
push
inc
mov
cmp
or
push
sar
out
sar
into
cs
pusha
dec
or
pop
lds
std
(bad)
call
inc
jmp
aas
out
add
rol
repnz
push
or
addr16
mov
lods
mov
mov
sbb
push
pop
or
jge
pop
or
and
jmp
cdq
mov
retf
jge
ror
scas
mov
cmp
jmp
mov
dec
test
test
push
xchg
sbb
xchg
(bad)
out
cmps
sbb
icebp
xchg
(bad)
aam
lods
xor
adc
(bad)
cwde
(bad)
mov
out
in
fsubr
fmul
jge
inc
call
ja
push
out
push
jno
ds
sar
retf
ret
inc
mov
mov
pop
inc
adc
cs
inc
push
fsubr
out
frstor
mov
inc
inc
shr
add
lahf
arpl
fwait
sbb
repnz
push
and
cmp
jns
pop
movs
pop
adc
aaa
repnz
mov
adc
and
inc
cld
test
test
sub
sub
stc
sbb
mov
test
xchg
lods
(bad)
mov
stc
push
stc
lods
rdpmc
cmc
gs
or
(bad)
cld
ds
adc
jno
push
lds
or
std
or
pop
arpl
xchg
loop
es
call
popa
or
call
gs
adc
add
call
jp
sbb
jne
outs
xrelease
(bad)
mov
xchg
mov
push
push
cs
add
js
xchg
jle
shr
pop
inc
mov
xchg
ins
fs
jecxz
shl
cmps
inc
push
push
test
mov
sbb
call
cmp
repz
retf
jl
mov
jle
mov
js
xchg
push
fbstp
fisttp
test
fild
mov
push
jmp
cmp
push
jbe
mov
sahf
or
out
mov
fwait
mov
sbb
int
dec
fdivr
mov
js
pop
xor
lods
add
sbb
xchg
push
in
call
outs
xchg
mov
fs
rol
loop
jle
cmp
xchg
adc
je
dec
adc
loop
push
xor
cld
push
jae
xor
call
fadd
pop
mov
push
sub
cld
mov
call
mov
(bad)
xor
les
pop
aad
jno
sbb
imul
mov
push
inc
push
sbb
(bad)
lods
jbe
daa
mov
fild
loop
mov
int
sub
aad
pushf
adc
xchg
(bad)
jb
dec
push
clc
cmp
leave
sub
dec
aam
scas
cmps
push
imul
(bad)
cld
in
dec
sbb
pop
cmp
daa
test
cmps
xlat
std
sbb
push
push
cld
xor
jmp
(bad)
loopne
sbb
mov
ret
rcr
mov
push
cmp
mov
push
push
fst
aad
aad
aad
fistp
cli
mov
push
mov
mov
push
jp
xor
push
mov
mov
inc
test
dec
inc
repz
adc
aad
shl
hlt
push
cld
call
cmp
dec
test
add
inc
scas
sbb
fimul
cmps
inc
shr
outs
sbb
das
cmp
mov
leave
push
inc
jmp
in
jl
test
pushf
and
enter
test
les
scas
push
popf
cmc
cmp
arpl
stc
inc
loop
cs
(bad)
repnz
sbb
jne
push
int3
(bad)
js
cmp
jae
or
add
and
xor
scas
mov
fnstenv
ds
push
dec
cli
(bad)
mov
pop
jns
push
and
mov
test
inc
push
(bad)
pop
outs
aaa
jmp
fdivrp
jecxz
dec
pop
jg
mov
mov
das
mov
das
pop
loope
lods
ja
add
xor
mov
or
ins
(bad)
out
xor
add
mov
mov
loop
fdivr
in
pop
jnp
ja
test
scas
ret
enter
popf
mul
cdq
sti
hlt
imul
pop
fistp
mov
in
sbb
stos
xor
adc
sbb
and
add
retf
sbb
sub
sub
mov
push
cmp
fstsw
fstp
dec
mov
inc
dec
lods
aad
mov
push
cmp
pop
ins
fadd
jae
xchg
pop
xlat
mov
int
pop
cld
adc
(bad)
lahf
pop
and
ror
test
rcr
mov
loopne
mov
shl
cwde
retf
cmp
or
push
mov
test
cmps
or
(bad)
int3
jae
sub
dec
mov
mov
mov
pop
fsubr
jg
xchg
mov
sbb
jle
mov
(bad)
in
aam
adc
imul
push
jle
cmc
loop
push
jle
hlt
jge
and
mov
in
(bad)
stos
imul
in
mov
jp
enter
mov
adc
lock
clc
inc
lahf
dec
out
add
call
lahf
xor
and
pop
rdpmc
or
ds
mov
mov
retf
imul
gs
xchg
sbb
sub
cs
dec
pop
ja
fst
repnz
cmps
add
div
aam
(bad)
mov
add
and
adc
sbb
xor
rcl
mov
ins
call
das
ja
add
xchg
add
jnp
jp
add
dec
add
imul
mov
push
sti
js
sbb
shl
mov
pop
mov
cmp
push
aam
and
loopne
mov
in
mov
test
(bad)
ss
push
adc
ins
retf
iret
movs
pop
stc
jmp
push
int
sub
sar
(bad)
dec
cli
jmp
imul
or
push
out
neg
mov
mov
cmc
out
loope
mul
enter
jmp
push
mov
aam
xchg
and
mov
or
sub
cmp
sbb
es
add
outs
mov
fstp
rcr
mov
stos
dec
sahf
(bad)
push
add
xchg
mov
or
in
xchg
popf
(bad)
push
fistp
(bad)
fidivr
mov
jg
(bad)
ss
arpl
ds
xchg
mov
mov
fucomip
sub
jmp
pop
cmp
cmps
xor
ror
lods
ror
jmp
lds
fimul
aaa
sub
push
stos
sbb
pop
pop
mov
and
push
lods
stos
cmps
or
bound
add
js
mov
(bad)
inc
mov
js
lds
aad
sar
int
jo
xchg
mov
ror
enter
push
fidivr
lea
pushf
pusha
adc
mov
add
inc
pop
mov
mov
xchg
sti
ins
std
mov
sar
push
in
ror
scas
mov
fisubr
adc
jmp
daa
mov
sub
dec
mov
leave
and
cld
rcr
ret
movs
repz
mov
push
dec
mov
dec
call
xchg
cmp
xchg
push
jle
xchg
lahf
je
icebp
in
cmp
in
pop
push
pop
xchg
sti
mov
pop
movs
dec
jmp
int3
jle
das
jmp
test
cs
fist
xor
loope
(bad)
add
mov
sahf
jb
out
imul
mov
cmp
jp
xor
lods
xor
mov
jge
shl
xchg
hlt
jge
inc
lods
ins
push
ret
lock
retf
sbb
sub
jecxz
sub
cmps
mov
push
fwait
test
adc
adc
jg
icebp
mov
pop
clc
lock
add
adc
xchg
jae
sub
mov
call
daa
js
sub
test
sti
mov
jo
jp
sti
mov
pop
outs
mov
cli
mov
sbb
scas
pop
sti
push
push
fcomip
mov
jl
dec
and
pop
add
fld
dec
leave
sub
add
xor
mov
mov
push
repz
rcl
lock
call
out
or
repnz
call
push
xor
clc
fptan
ret
lock
sbb
mov
jle
pop
arpl
pop
mov
mov
cmps
sbb
loop
add
inc
dec
mov
inc
jns
xor
loope
(bad)
mov
dec
xchg
stos
add
push
pop
outs
push
test
int3
ins
dec
inc
loopne
dec
xchg
pop
xor
jge
inc
jle
shr
faddp
aas
fdivr
xchg
and
arpl
or
test
ins
call
inc
pop
stc
xchg
jo
cmp
xor
(bad)
sar
(bad)
push
lods
xlat
shr
xor
mov
cmp
das
jno
in
add
je
xchg
cmps
jo
xchg
fsubr
sub
xor
jle
jmp
jo
pop
(bad)
lock
dec
outs
fsubr
lods
out
std
jl
test
dec
pusha
lods
or
aas
fwait
sbb
mov
xor
out
out
into
test
xchg
xchg
cli
mov
data16
retf
enter
rol
mov
jnp
inc
je
xchg
mov
xor
xlat
test
adc
xor
mov
loop
mov
mov
or
mov
jecxz
xchg
(bad)
leave
pop
or
mov
fist
repz
call
repnz
mov
test
pop
out
or
inc
jg
or
cmps
das
or
daa
adc
lods
nop
pop
stos
add
jecxz
aas
icebp
lods
repnz
sub
pop
push
mov
pop
dec
les
cmp
aam
iret
push
cmps
lods
fwait
push
test
in
jle
data16
jno
addr16
mov
nop
and
fwait
cmp
sti
xchg
sahf
call
mov
(bad)
hlt
xchg
lods
mov
pop
or
inc
js
jo
push
les
popa
ins
sbb
ds
push
dec
inc
or
jmp
retf
pop
in
retf
hlt
retf
pop
push
lods
jmp
jno
xchg
push
mov
or
inc
jmp
inc
(bad)
jnp
or
shl
mov
and
mov
dec
sub
aam
lfs
loopne
mov
inc
xchg
pop
jg
dec
mov
(bad)
cld
loop
dec
(bad)
icebp
inc
jo
add
push
inc
xor
and
sahf
jns
inc
inc
xor
adc
mov
ds
cli
dec
xchg
iret
je
xchg
and
mov
sar
xchg
and
xchg
call
push
jb
(bad)
lahf
mov
repnz
(bad)
mov
es
test
icebp
sbb
scas
test
in
inc
ret
mov
jmp
(bad)
jne
ds
xchg
pop
scas
fwait
sub
ror
call
cmp
cmc
sbb
fwait
mov
inc
mov
leave
dec
xchg
mov
shl
xor
fisttp
jle
retf
and
xor
inc
out
leave
aas
dec
push
es
adc
push
popf
add
ds
cmp
into
fistp
inc
retf
xor
or
push
mov
cmp
and
in
add
retf
imul
ret
push
sbb
xchg
jns
mov
or
jg
pop
xor
or
inc
or
mov
jae
fiadd
sbb
or
pop
xlat
test
stc
test
cmp
call
dec
mov
and
fs
mov
and
mov
div
les
(bad)
push
(bad)
jbe
out
adc
xchg
popa
call
mov
xlat
daa
add
cs
movs
hlt
jp
sbb
push
xchg
push
inc
loope
pop
mov
aad
mov
(bad)
jg
and
jge
push
retf
retf
fcmovnb
jbe
ins
in
mov
sbb
or
jge
xchg
mov
rcl
ficomp
push
sub
out
aam
fucomip
std
pop
stos
leave
cmc
(bad)
repnz
or
ds
xor
pusha
sub
cwde
mov
iret
cmp
(bad)
mov
jns
mov
inc
fmul
mov
push
fmul
sub
push
jecxz
and
inc
neg
and
retf
add
and
jl
sbb
in
jmp
xchg
cmp
ja
les
icebp
cmp
in
adc
ficomp
ret
repnz
mov
and
mov
fiadd
xchg
ds
sub
jmp
jp
sahf
sti
enter
sar
mov
dec
sub
and
xor
mov
adc
mov
ret
scas
xor
add
outs
lods
mov
dec
retf
cdq
lods
mov
push
lahf
out
fdivr
xchg
jnp
mov
mov
rcr
ss
pusha
and
dec
fcom
cli
div
push
pushf
pop
mov
or
adc
add
mov
fidivr
sar
sub
in
xchg
clc
add
data16
je
xchg
lahf
jp
jae
shl
adc
mov
or
fiadd
cmp
jno
fst
(bad)
(bad)
arpl
stos
shr
aam
mov
js
xor
retf
inc
mov
mov
jmp
stos
inc
push
repnz
jb
inc
push
xor
mov
or
into
shl
mov
dec
shl
mov
enter
stos
mov
jle
mov
jle
jnp
sbb
scas
adc
nop
mov
adc
sbb
add
es
mov
cmp
dec
add
pop
jne
cmps
(bad)
xor
ja
out
mov
(bad)
cli
(bad)
in
sbb
out
mov
xor
icebp
adc
jae
xor
cmp
push
inc
repnz
xchg
iret
pop
popf
cmps
or
inc
jmp
mov
iret
sub
pop
push
imul
sbb
inc
push
add
rol
jmp
and
js
push
loop
fiadd
pop
mov
xchg
rcr
or
pop
pop
stos
jge
imul
cmp
movs
xchg
mov
or
push
enter
rcr
lods
sub
pop
sub
pop
retf
xor
mov
je
das
stos
sbb
movzx
pop
clc
les
pop
mov
fisubr
cmp
arpl
inc
push
dec
sahf
add
pop
scas
pop
aaa
gs
test
movs
cs
in
mov
imul
pop
jmp
pop
dec
cmp
sub
mov
out
and
adc
and
mov
outs
lea
sub
mov
cmp
ins
and
loope
retf
in
pop
mul
or
mov
push
das
lahf
jp
fcom
dec
inc
test
add
push
xlat
pop
dec
adc
dec
sti
(bad)
push
fprem
xchg
stos
out
lock
inc
mov
hlt
mov
jnp
and
sbb
sbb
or
cmp
(bad)
ss
mov
fld
fcomip
dec
ins
pop
bound
das
lods
inc
dec
fwait
pop
add
cmp
xchg
fstp
sub
mov
push
cmc
ficomp
das
je
mov
repnz
and
jmp
fadd
mov
ds
xor
and
dec
mov
push
add
sbb
aad
mov
test
xchg
mov
adc
aas
shl
(bad)
and
xlat
scas
dec
test
shl
add
lods
inc
jb
jne
(bad)
repz
setl
xchg
mov
jmp
pop
and
add
mov
bound
pop
jmp
jmp
imul
icebp
in
or
fsub
(bad)
js
xlat
aaa
sbb
dec
cmp
sbb
adc
pop
les
mov
dec
and
rcl
xor
jb
jb
das
shl
cmp
dec
pop
pop
fnstcw
mov
jle
hlt
cmps
push
and
cs
mov
cmp
cmps
loope
jle
inc
sti
sbb
shr
(bad)
adc
jne
inc
imul
pop
mov
jmp
cs
or
(bad)
mov
(bad)
adc
lock
push
inc
xchg
daa
or
mov
cmp
cmp
gs
fimul
scas
mov
xor
outs
cld
sbb
lock
jl
cmps
sbb
or
ja
popa
inc
(bad)
cmps
ins
pop
retf
ret
fstp
lods
pop
bound
ficomp
fdivr
xor
jo
retf
mov
mov
cwde
aas
aad
ds
push
sti
(bad)
jo
dec
loop
(bad)
cvttps2pi
ret
retf
retf
or
xchg
xchg
iret
sbb
aaa
sbb
gs
cmp
xchg
sbb
pop
push
ret
fcomp
xor
int3
call
add
imul
sub
pop
adc
sti
stos
jl
sub
(bad)
sbb
mov
xor
pop
(bad)
mov
pop
mov
jecxz
pop
add
xor
int3
jne
pcmpgtw
add
icebp
(bad)
ja
adc
xchg
xor
cdq
lahf
xor
scas
xchg
cmps
sbb
inc
cwde
sbb
aad
cwde
idiv
jecxz
or
ret
test
lahf
jo
mov
and
jg
daa
or
inc
cmp
cmp
rcr
xchg
add
fisubr
in
cmp
sub
xchg
push
fimul
cmc
dec
adc
hlt
ror
loop
xor
nop
dec
int
sub
mov
mov
dec
in
lea
outs
nop
adc
repnz
mov
pop
jb
popf
scas
fsubr
cmp
push
jp
repnz
sub
mov
fxch
or
(bad)
push
lahf
std
les
jo
adc
outs
inc
in
xor
bsf
mov
adc
out
push
xor
jmp
fimul
or
xchg
push
ficom
repnz
cs
fld
repz
leave
in
test
bound
stos
outs
movs
mov
xor
mov
inc
push
jne
cmp
jmp
sbb
outs
ficom
ja
xlat
aad
fadd
xchg
or
call
movs
in
pusha
adc
pushf
add
repnz
adc
jno
iret
fcmove
out
xlat
mov
iret
sbb
jmp
and
loop
mov
call
mov
lods
adc
pop
jb
movs
and
or
fnstcw
scas
mov
(bad)
lock
xchg
xchg
stos
mov
pop
gs
stos
or
cdq
repnz
and
xlat
adc
sbb
mov
movs
pop
dec
mov
sbb
js
mov
repz
in
jl
sub
je
dec
xor
bnd
sbb
jl
xchg
in
addr16
sti
inc
push
dec
cwde
push
sub
push
mov
fwait
sub
xor
adc
call
or
test
mov
int3
or
ins
inc
adc
mov
outs
stc
push
repz
int
and
test
in
fistp
xchg
aas
pop
popa
movs
mov
dec
mov
std
add
pop
out
xchg
cmps
xchg
or
inc
push
test
sbb
add
push
xor
dec
mov
popa
pop
sbb
and
mov
test
pop
cmps
lds
xlat
outs
shl
out
pop
jne
or
fst
out
cmp
adc
mov
mov
retf
call
fs
out
dec
loop
cmp
mov
mov
cmp
jl
sub
clc
div
cmps
mov
scas
add
test
push
lea
hlt
mov
js
stc
outs
out
movs
cdq
imul
popa
inc
xchg
adc
sahf
cmps
repnz
std
std
xor
xlat
in
mov
xor
test
jmp
push
jno
fcmovnbe
fnstenv
sti
mov
hlt
cli
and
fcmovne
retf
out
test
push
aas
popa
and
jo
lods
ins
gs
inc
je
push
mov
fstp
jg
ret
addr16
test
pop
out
inc
xor
stos
sahf
xchg
ds
push
das
push
inc
and
stos
aaa
inc
out
mov
adc
or
xchg
and
adc
(bad)
test
adc
call
adc
mov
pushf
(bad)
push
jmp
idiv
pop
adc
loope
sbb
les
add
fcmovnu
sbb
xor
adc
lahf
cmp
push
aam
pop
dec
ficom
dec
pop
mov
retf
outs
sbb
cmp
jmp
xor
or
mov
jl
jbe
jb
mov
inc
pushf
sti
popf
shl
out
mov
jp
into
or
jecxz
les
call
and
maskmovq
imul
sbb
fcomp
adc
loop
cmps
dec
ds
cmc
mov
add
scas
inc
or
call
inc
xlat
pop
test
idiv
stos
sub
not
push
ss
and
pop
imul
or
test
dec
jl
push
aaa
gs
lds
mov
aad
dec
push
mov
pop
push
cmp
sbb
xchg
and
lahf
add
popa
add
xchg
add
int
sub
xchg
idiv
(bad)
es
jecxz
js
cmp
loop
xchg
xchg
push
bound
inc
cwde
lahf
inc
fwait
pushf
test
outs
add
test
out
push
jno
imul
push
pop
rcl
in
jp
fild
or
pop
sub
(bad)
mov
dec
push
xchg
sar
pop
xlat
test
movnti
push
test
test
or
jecxz
inc
cmps
ss
dec
xor
lahf
or
out
dec
mov
enter
shl
cli
mov
mov
pop
sub
enter
outs
xchg
icebp
sbb
out
into
dec
dec
addr16
shl
leave
mov
cmc
dec
(bad)
pop
mov
(bad)
jb
adc
xchg
or
inc
jae
cmp
popa
sbb
cmps
cs
inc
stos
inc
test
xchg
rcl
ror
addr16
inc
add
cmp
fldpi
ror
cmps
out
les
test
fidivr
jmp
call
(bad)
idiv
pop
cmp
leave
pop
cli
lock
outs
js
je
movs
call
stos
mov
gs
xchg
std
je
fwait
sti
add
mov
sub
aad
dec
int
inc
add
mov
cmp
cmps
add
retf
push
jns
(bad)
and
dec
mov
sbb
push
or
shl
loopne
cs
aaa
ret
inc
in
ss
pusha
lods
adc
adc
push
in
std
sbb
push
push
popa
jb
addr16
clc
movs
add
das
xor
push
gs
sbb
cmp
xor
sahf
into
(bad)
aad
cmps
mov
mov
push
das
push
jne
mov
outs
mov
gs
jge
add
pop
daa
and
out
cmp
pop
call
or
ficomp
adc
sub
out
cmps
sbb
or
repz
test
and
retf
cmc
jns
scas
mov
aad
call
add
dec
xchg
or
xchg
xchg
or
or
mov
lods
pushf
ins
sbb
fcom
cmp
retf
pusha
mov
mov
shl
mov
mov
xor
lods
push
dec
push
xor
fadd
add
mov
aaa
mov
daa
or
push
pop
ins
xchg
retf
or
sahf
fmul
sbb
stc
mov
inc
xchg
mov
ins
push
(bad)
imul
mov
in
mov
leave
pusha
jbe
leave
arpl
arpl
das
jno
fadd
retf
std
in
pushf
sub
and
mov
push
mov
pop
loopne
mov
outs
sbb
loop
cmps
jge
ret
xor
(bad)
mul
pushf
lock
dec
fdiv
ret
jo
push
data16
popf
push
dec
pop
jno
inc
push
adc
in
mov
retf
loop
xchg
int3
adc
pop
mov
ss
(bad)
fistp
lahf
inc
in
out
xchg
xchg
mov
outs
or
xor
in
aaa
popf
movs
sbb
sbb
imul
jns
and
loopne
dec
mov
mov
data16
mov
xchg
add
mov
pop
cmps
dec
stc
push
lock
scas
xlat
(bad)
adc
int3
adc
xchg
inc
and
xor
bswap
mov
(bad)
sub
cmps
mov
cmc
xor
imul
arpl
scas
and
fidivr
sub
add
add
sub
mov
mov
ins
mov
sub
or
fst
pop
lds
inc
add
rcl
jmp
call
pop
push
sbb
stc
es
test
inc
frstor
outs
or
leave
rcl
aad
retf
push
sbb
imul
xchg
call
ss
inc
cmp
jo
loop
jecxz
dec
mov
xchg
in
xor
jmp
push
mov
or
or
aad
pop
bound
push
cld
pusha
jmp
adc
ret
cmc
pop
jp
dec
(bad)
ins
xchg
dec
aam
inc
div
movs
pop
mov
fstp
xor
xchg
sbb
xchg
xlat
add
fadd
loop
jge
mov
cmp
lahf
inc
dec
shl
scas
sar
cld
scas
pop
xor
cwde
popf
adc
movs
hlt
and
xchg
sti
in
out
fidivr
scas
popf
inc
outs
inc
mov
inc
or
sub
mov
push
cmp
adc
je
pushf
lods
inc
les
shl
and
sti
into
dec
leave
leave
mov
test
mov
pop
xor
std
sbb
imul
in
jne
push
fdiv
pop
outs
cdq
sub
and
mov
mov
and
mov
sahf
xor
pop
xor
jne
ret
cmp
out
loopne
sub
xor
xor
pop
retf
dec
mov
mov
mov
lea
and
lahf
rcr
aad
cld
into
cmps
jle
pusha
pop
jmp
pop
inc
in
inc
ficomp
(bad)
(bad)
mov
dec
jb
nop
inc
mov
call
adc
(bad)
inc
loope
jmp
pop
dec
or
(bad)
adc
push
pop
fldcw
dec
pop
loop
ror
mov
loope
push
xchg
sub
mov
dec
or
jg
out
imul
mov
out
clc
mov
cmps
pop
out
xchg
addr16
adc
les
cs
mov
mov
les
or
add
xchg
pusha
in
mov
cmp
push
fistp
and
ror
and
mov
fist
scas
adc
mov
adc
jg
or
dec
repz
xchg
xor
dec
das
in
in
in
hlt
adc
dec
pop
pop
retf
xchg
push
rcl
call
mov
lods
ins
push
fisubr
jge
jg
dec
cmp
xor
outs
and
icebp
rcr
push
(bad)
in
arpl
fadd
call
mov
or
mov
sbb
pop
lods
xor
push
mov
sub
in
cmc
mov
xor
xor
fcomp
aaa
sbb
xor
mov
sub
add
fcmovb
and
mov
pop
jle
cmp
sbb
in
push
mov
add
mov
iret
or
push
mov
in
fistp
xchg
mov
or
leave
pop
mov
out
clc
adc
movs
dec
xor
push
jbe
test
aaa
jnp
in
out
sahf
clc
aam
lea
inc
xor
sahf
xchg
packuswb
jae
arpl
mov
sub
out
push
cmps
test
pop
out
clc
cs
jb
cmp
inc
xlat
icebp
ret
and
fst
push
fcmovnu
mov
shr
mov
arpl
(bad)
ja
sbb
xchg
dec
push
pop
loopne
imul
mov
mov
mov
std
scas
cmp
repz
pop
and
cmps
add
jne
inc
pop
jmp
scas
shufps
outs
ss
retf
xor
and
push
push
mov
inc
popf
jno
pusha
sbb
lahf
movs
xor
fisttp
xor
ficom
scas
stos
inc
jg
add
dec
mov
(bad)
dec
shl
mov
or
pop
loopne
sub
sbb
cmp
ins
aad
jne
in
call
(bad)
cli
dec
xchg
repnz
fimul
dec
pop
dec
jbe
or
stos
jp
add
jae
sub
(bad)
push
inc
loope
jo
into
sub
mov
stc
das
and
jg
pop
dec
lea
jp
enter
cmp
enter
call
mov
jle
test
push
jae
clc
call
mov
xchg
test
mov
sub
mov
inc
ss
mov
xchg
inc
data16
(bad)
fiadd
rcr
mov
xchg
mov
stos
xchg
fist
repz
or
xchg
pop
test
adc
inc
and
or
daa
dec
pushf
lods
aaa
sahf
xor
leave
sbb
mov
loopne
or
pop
push
inc
push
stc
(bad)
and
dec
fcomp
fwait
sub
adc
test
mov
shr
pop
fstp
mov
nop
and
dec
in
push
jg
push
into
arpl
repnz
dec
cmp
(bad)
mov
icebp
ja
mov
xlat
cs
sbb
adc
dec
repnz
mov
data16
cmp
push
adc
cmps
pop
aas
bound
call
stos
cmc
push
xchg
enter
rcr
xor
and
xchg
hlt
cdq
dec
sbb
push
or
ret
fs
cmp
pop
outs
rcl
les
inc
daa
retf
mov
sub
loopne
repnz
inc
out
js
sub
lds
mov
pop
out
sub
push
(bad)
jnp
iret
movs
sub
inc
popf
inc
adc
pop
xor
lock
sub
sub
ffreep
jmp
mov
pusha
xchg
icebp
js
mov
jecxz
xor
mov
cmps
das
rcr
in
or
das
mov
test
push
mov
cmp
aad
mov
mov
xor
cld
jl
addr16
mov
cmc
cmps
ins
repnz
pop
inc
sahf
sub
inc
jmp
xchg
xchg
push
gs
adc
aam
cmp
dec
push
jns
push
int3
in
clc
and
jle
(bad)
sti
mov
xlat
sub
pop
pop
adc
cmp
mov
(bad)
out
in
loopne
movs
int3
cmp
out
imul
cli
cli
and
(bad)
mov
int
xor
dec
fucomi
retf
jle
gs
pop
jbe
and
(bad)
test
jno
sar
int
fcomp
jmp
cmp
xchg
dec
dec
sub
loop
ret
in
stc
jae
and
jo
jae
xlat
mov
pop
mov
loope
dec
push
xor
mov
xchg
xchg
idiv
test
std
ss
jnp
mov
add
and
sub
rol
retf
ret
out
fldcw
mov
repz
pop
jns
cmp
or
(bad)
outs
or
adc
int
call
lods
out
(bad)
dec
mov
xor
add
fst
xor
repnz
inc
(bad)
fdivr
push
enter
loopne
sub
in
ja
push
out
inc
mov
iret
cmp
test
fwait
mov
xchg
mov
push
cmp
rcl
push
mov
popf
hlt
das
push
in
arpl
mov
pop
inc
repz
mov
js
popf
and
dec
mov
lock
jno
sbb
add
inc
movs
sub
jbe
xchg
push
call
xor
addr16
rcr
fisttp
ret
add
call
pop
and
fild
bnd
lahf
aas
bound
push
push
aaa
push
jg
xor
pop
repnz
fdivr
movs
into
ins
adc
jle
fs
lods
fsin
sub
dec
pop
data16
pop
push
lea
jg
xchg
push
push
cmp
fcomp
lahf
icebp
jl
jo
xor
jmp
mov
imul
sbb
iret
xchg
sub
daa
pop
out
outs
dec
fcomip
jo
jp
stc
call
sbb
ss
mov
cmp
pushf
mov
push
cld
dec
pop
fdiv
mov
movs
and
xor
ds
mov
jo
or
in
jl
add
sbb
lock
sti
out
push
fisubr
in
out
jo
sbb
cmps
or
jge
sub
xor
out
imul
mov
cmp
pop
adc
(bad)
lods
scas
sub
mov
pop
sub
cmp
push
xchg
jg
mov
push
fcomp
outs
inc
rcr
popa
imul
int
outs
in
cwde
sub
frstor
mov
out
out
ficomp
push
mov
in
or
fmul
jmp
pop
add
xchg
pushf
mov
push
sahf
cmps
enter
arpl
cmp
daa
jno
imul
loopne
ja
sbb
push
repz
popf
fisttp
hlt
lods
fadd
cli
or
dec
popa
outs
inc
mov
add
jecxz
xchg
mov
sbb
mov
daa
cmp
and
les
stos
xchg
push
(bad)
mov
das
pop
inc
adc
xchg
aad
scas
cmp
cmp
inc
jge
out
inc
and
xchg
cdq
mov
clc
push
stos
addr16
mov
shr
xchg
test
add
mov
test
je
loop
add
add
out
iret
adc
scas
mov
lods
sbb
jbe
into
adc
shr
xchg
dec
sbb
add
(bad)
push
push
pop
pop
aas
sub
mov
mov
add
add
push
add
push
pop
add
xchg
jmp
xor
xchg
dec
mov
adc
movs
lods
pusha
add
dec
addr16
in
cmc
outs
sub
std
and
jp
(bad)
cmp
jmp
cs
dec
pusha
mov
adc
and
add
call
cmc
pop
lock
iret
ret
sti
jbe
in
fsub
popf
out
test
pop
mov
dec
mov
inc
loopne
jge
dec
push
and
push
inc
pop
(bad)
cmp
idiv
xchg
shl
pusha
in
cli
call
xlat
push
sti
jecxz
jne
pushf
or
push
rol
inc
push
jb
sbb
clc
rol
adc
mov
jo
push
jge
sub
and
mov
stos
inc
mov
fsubr
enter
scas
sbb
mov
into
neg
jnp
jmp
sub
jne
(bad)
sbb
std
jge
mov
jl
retf
inc
mov
pop
mov
gs
push
push
es
imul
sub
push
inc
(bad)
lock
loop
adc
aad
jecxz
shr
fild
ret
aaa
shr
or
mov
push
sbb
xor
and
das
xor
adc
bound
ins
or
add
mov
mov
out
inc
xchg
das
xchg
xchg
sbb
mov
outs
jecxz
xchg
adc
fnstsw
lds
dec
iret
mov
jecxz
pop
outs
inc
adc
scas
adc
arpl
sub
(bad)
stc
and
mov
outs
xchg
lock
mov
(bad)
popf
adc
popf
inc
pusha
sti
sbb
into
repz
sbb
ja
mov
mov
fcom
xor
(bad)
movs
ss
(bad)
(bad)
std
stos
mov
mov
pop
ret
jno
jb
in
xchg
pop
inc
fstp
test
cli
es
xor
rcr
add
mov
xchg
es
or
in
add
js
aad
adc
fldenv
call
sbb
repnz
(bad)
mov
in
popa
jl
in
xor
test
mov
dec
je
aas
ficomp
dec
fldenv
and
add
outs
push
jns
fsub
outs
ret
fld
ds
js
inc
scas
aas
pusha
push
loopne
out
add
xor
out
icebp
xor
xchg
xor
sub
push
inc
pop
(bad)
cli
mov
aaa
cli
sub
jb
sub
mov
or
gs
or
nop
add
push
popa
adc
cmp
sub
stc
aam
xor
and
inc
pop
dec
push
mov
dec
sbb
adc
xor
enter
push
push
mov
lods
or
adc
mov
pop
(bad)
in
pop
ret
addr16
dec
fcomp
jg
and
popa
cmc
mov
dec
sbb
into
adc
cmp
push
arpl
call
or
jl
push
movnti
bound
sti
adc
jae
pop
xchg
(bad)
enter
jnp
xchg
inc
mov
push
jle
popa
mov
and
idiv
xor
fcmovne
retf
inc
pop
fsub
in
int
mov
es
xor
fistp
fadd
in
mov
aas
xchg
in
or
call
mov
push
mov
push
imul
jg
sahf
and
leave
call
imul
lahf
add
xchg
mov
and
sbb
jnp
mov
das
cmp
adc
out
fnstcw
stc
pop
pop
pop
ret
pop
out
mov
ss
push
imul
jge
add
push
(bad)
mov
mov
ds
daa
(bad)
and
dec
jg
call
fld1
fnstsw
xchg
les
mov
ss
retf
jo
jmp
fadd
cdq
dec
fstp
hlt
mov
(bad)
lahf
out
into
jne
ret
xor
jno
stos
push
int3
jmp
in
jno
push
into
fimul
ins
adc
sbb
shl
mov
fbstp
xor
sub
push
pop
mov
call
push
ja
imul
movs
or
mov
pusha
and
aaa
or
or
push
fwait
rep
xchg
mov
push
mov
push
imul
adc
dec
(bad)
jmp
sbb
fld
movs
dec
inc
jne
nop
jmp
mov
mov
cdq
repz
dec
pop
adc
aas
mov
pop
retf
cmp
push
sbb
dec
dec
push
push
add
out
pop
push
pop
mov
add
sti
xchg
icebp
aas
push
inc
inc
jecxz
sahf
fisubr
aam
jnp
stc
dec
sbb
mov
fld
ins
jno
inc
cmp
xchg
adc
jns
sbb
leave
sub
ja
popa
cld
shr
out
push
dec
int
mov
addr16
movs
loopne
fst
cmp
and
fldenv
or
out
jns
or
jecxz
add
mov
pop
xchg
fwait
call
popf
fbld
fsubrp
lds
popf
mov
add
bound
(bad)
mov
sub
arpl
rcl
stc
jmp
ss
mov
or
(bad)
cmps
mov
pop
jbe
sbb
jbe
cmp
push
hlt
pop
jl
mov
and
xlat
add
gs
fld
call
scas
pop
loopne
lahf
ror
fimul
aas
fstp
pop
leave
movs
outs
push
mov
sbb
push
or
or
mov
inc
sbb
or
cmc
xor
push
iret
xchg
lea
jmp
adc
sbb
lock
jle
push
mov
pop
icebp
sub
xor
sbb
sahf
cmp
adc
loopne
pop
xchg
or
out
jno
pop
into
ss
xchg
mov
ins
jbe
sar
push
clc
stc
xor
dec
ins
in
mov
jne
daa
dec
mov
leave
push
mov
jae
mov
imul
push
aaa
sub
mov
mov
dec
cli
mov
lds
aaa
iret
jmp
xor
cmp
dec
ds
push
inc
jb
add
(bad)
sub
xchg
inc
(bad)
xchg
popf
pushf
cmp
adc
cwde
mov
lea
mov
xchg
and
push
xor
inc
imul
(bad)
push
xchg
nop
pop
adc
sti
inc
call
push
addr16
cmp
and
or
fild
adc
into
cld
adc
or
test
push
icebp
mov
mov
es
ds
je
add
jmp
fidivr
adc
ds
xor
loopne
std
mov
test
sahf
(bad)
mov
pop
pop
setle
mov
sub
(bad)
shl
outs
sar
jns
mov
cld
cdq
sbb
cmps
cwde
scas
stc
mov
push
pop
cmc
cld
fwait
xor
lock
push
or
js
mov
pushf
add
sbb
xchg
mov
scas
xor
rol
pop
shr
in
inc
sub
in
data16
cdq
cmp
popf
int
push
jne
mov
xlat
pop
xchg
inc
xchg
jo
in
popa
and
mov
mov
bound
jge
cmc
jmp
ds
pop
into
xchg
mov
stos
faddp
dec
adc
xor
retf
ficom
(bad)
or
pop
enter
mov
pop
ror
in
popf
mov
cmp
dec
inc
jnp
cmc
mov
mov
test
or
dec
ror
push
sub
push
std
and
cmp
mov
xchg
hlt
test
cdq
mov
dec
ret
jmp
xchg
inc
mov
mov
or
add
lods
mov
mov
xchg
call
mov
inc
inc
xchg
jae
ds
cmp
push
or
test
sbb
popa
daa
out
sbb
lock
jmp
fist
fnstsw
jne
(bad)
or
std
mov
cmp
xor
push
(bad)
cmp
mov
sbb
outs
mov
aas
das
xchg
xchg
daa
iret
cmp
adc
mov
les
adc
jne
in
sti
add
je
mov
bound
mov
addr16
int3
lods
inc
sbb
or
add
out
xor
cmc
push
sar
shl
add
mov
aas
or
cld
lea
xchg
adc
ret
add
add
mov
add
js
and
jne
or
or
jno
data16
rol
sbb
addr16
lea
dec
cwde
xor
pop
test
cld
xor
pop
sahf
adc
or
(bad)
out
push
mov
(bad)
mov
(bad)
adc
loop
adc
(bad)
dec
pushf
jno
dec
mov
pop
xchg
and
into
aas
imul
stc
jb
jno
out
out
or
enter
mov
pavgb
movs
out
int
and
lods
jmp
adc
jno
push
lahf
inc
(bad)
push
retf
jl
and
scas
push
call
push
push
aad
add
sbb
mov
pop
adc
bnd
push
enter
out
jns
push
(bad)
ret
xor
sahf
(bad)
(bad)
call
fcomp
lods
sub
mov
and
rcr
adc
call
ins
ficom
(bad)
call
add
repz
int
outs
push
add
sub
(bad)
aaa
stc
sti
pop
std
adc
sub
mov
or
push
sbb
in
rcl
pop
mov
add
rol
stc
pop
sahf
jno
imul
dec
adc
out
push
retf
mov
cs
xor
fld
push
and
mov
pop
push
xor
cld
jo
in
(bad)
fcom
aad
nop
lods
dec
cmp
mov
mov
in
jecxz
pop
retf
pop
jmp
sbb
in
jmp
sbb
adc
adc
or
sbb
sbb
mov
jle
sub
inc
ret
ror
add
pop
lea
ror
xlat
adc
mov
pushf
cmp
dec
cld
into
retf
(bad)
cli
push
sbb
clc
(bad)
mov
data16
mov
xchg
aaa
mov
dec
repnz
gs
fistp
out
adc
sub
sbb
xchg
pop
jne
lods
add
sbb
inc
aad
ror
push
(bad)
and
add
(bad)
int3
fs
cmp
aaa
iret
xchg
ret
in
mov
adc
movs
retf
ret
push
xchg
movs
gs
test
jecxz
sbb
add
or
xlat
mov
xchg
call
jo
inc
call
mov
lock
loope
sti
rcl
push
(bad)
not
or
daa
imul
inc
mov
icebp
add
mov
ret
mov
jo
add
dec
(bad)
imul
pop
nop
mov
or
ss
push
movs
jmp
inc
sbb
inc
inc
aaa
ret
adc
mov
int3
imul
test
shr
xchg
aas
xchg
popf
mov
test
stos
sti
popf
mov
lock
test
iret
jmp
loopne
fisub
es
repz
mov
mov
push
out
hlt
and
mov
or
lods
jae
mov
fidiv
jo
nop
sub
sub
mov
mov
dec
xchg
xchg
js
jge
xor
inc
stos
in
shl
cmc
mov
adc
sub
aas
pop
(bad)
pop
test
loope
pop
jno
lock
xor
jg
xchg
ficom
mov
xchg
jns
mov
mov
sub
sub
push
cmp
imul
add
xor
retf
in
jle
sbb
jp
scas
inc
mov
cmp
(bad)
movs
test
xchg
mov
rcl
js
stos
test
cmp
adc
shl
ins
or
scas
in
mov
xor
stc
lods
or
movs
cmp
cwde
pop
push
fcmovu
and
mov
movs
adc
ds
mov
and
pusha
mov
mov
cli
adc
lds
add
jbe
scas
xchg
lock
xchg
icebp
imul
xchg
aas
sbb
data16
mov
push
jge
mov
cmp
lods
into
bound
rcl
mov
out
(bad)
data16
hlt
fs
test
paddusw
fs
in
and
fdiv
mov
cmp
shl
cmps
push
push
not
cli
lahf
imul
push
dec
popf
pushf
cmps
adc
mov
popf
rcl
push
ins
mov
and
mov
sahf
(bad)
pop
fwait
das
and
stc
add
daa
in
push
daa
add
add
fsub
xchg
xlat
lahf
rol
call
lods
sub
lahf
xor
call
and
push
aaa
rol
jo
into
repnz
in
outs
iret
push
sbb
(bad)
mov
or
test
jmp
mov
movs
or
icebp
or
ror
cmp
out
sbb
push
dec
push
adc
xchg
ss
mov
adc
inc
call
mov
mov
inc
jp
cmp
(bad)
inc
lods
add
ds
mov
aad
sbb
test
out
push
mov
dec
mov
jg
sub
xchg
test
repnz
pushf
or
add
daa
xor
add
and
add
jns
adc
pop
pop
loopne
sub
retf
xchg
sub
in
loopne
(bad)
jle
lea
add
fmul
and
test
dec
pop
shr
out
lods
and
mov
mov
inc
call
call
xor
daa
rcr
ss
cmp
inc
push
wbinvd
addr16
(bad)
out
jo
loop
pop
(bad)
call
sub
push
sti
btr
cmp
in
stos
sbb
jmp
xor
scas
test
push
jge
stos
(bad)
ja
in
pop
(bad)
cld
hlt
mov
mov
pushf
in
bnd
fidivr
sbb
je
jmp
inc
and
hlt
push
retf
or
jbe
fistp
xor
xor
inc
push
add
enter
vpunpckhqdq
cmp
dec
mov
aas
push
inc
jg
jbe
push
mov
outs
ja
jmp
mov
sub
jg
call
mov
imul
pop
add
cld
xchg
mov
xchg
les
and
push
xchg
mov
mov
clc
sub
test
dec
cmp
fidiv
ffree
loope
ds
dec
jno
inc
add
rcl
arpl
arpl
fcomp
shl
iret
add
repnz
aad
pop
out
push
inc
sbb
enter
push
shl
sub
jae
in
push
adc
out
xor
sub
jl
in
add
popf
jno
sbb
xor
sahf
(bad)
xor
mov
fistp
and
mov
pop
lds
xchg
add
add
call
clc
lea
lods
adc
fistp
shr
jmp
jo
dec
dec
mov
sub
fs
mov
add
fldenv
mov
aam
aaa
mov
or
ret
mov
cmps
inc
xchg
lea
mov
fcmovu
iret
sub
dec
mov
cmp
adc
sbb
iret
xor
shl
sbb
mov
xchg
aas
push
cmp
xchg
jg
ret
cmc
or
movs
push
inc
inc
sub
pushf
dec
inc
leave
icebp
out
add
mov
les
jge
mov
imul
sbb
das
jo
xchg
sub
adc
aas
shl
mov
fistp
daa
add
cld
pop
lock
and
outs
das
icebp
call
lods
push
or
mov
mov
or
push
jb
xor
mov
dec
popf
inc
sub
icebp
fst
enter
lahf
xchg
fldlg2
pusha
fs
jecxz
add
cmp
mov
add
ror
fisub
shl
iret
(bad)
cmp
adc
jb
dec
sbb
sub
loope
jge
dec
jae
pop
and
stos
bndldx
jnp
ret
add
lods
clc
adc
outs
xchg
rcl
(bad)
cmps
mov
adc
clc
mov
jbe
or
sub
jns
test
cmc
add
xchg
out
add
clc
test
rcr
repnz
ret
mov
xor
ror
fs
jae
clc
mov
push
sub
dec
jmp
aas
push
test
push
xchg
pop
dec
push
jle
xor
fwait
mov
xchg
pusha
adc
lahf
rcr
call
ins
and
or
aad
fisubr
in
pop
repz
hlt
sbb
jl
adc
fadd
mov
sbb
out
dec
mov
popf
test
sbb
out
jmp
retf
addr16
repnz
add
popf
sub
lds
xchg
(bad)
xor
jp
pop
pop
sbb
in
push
clc
xchg
das
test
shl
jp
leave
fmul
or
xor
outs
aas
adc
adc
fs
jne
jg
cmps
repz
jg
(bad)
loopne
and
addr16
add
ds
js
xchg
sub
inc
lods
push
xor
push
jg
and
outs
add
cli
xchg
sub
ins
cmc
sbb
ret
paddd
and
dec
pop
fimul
pop
es
fistp
inc
retf
bnd
push
add
push
nop
push
mov
aas
gs
scas
out
add
lods
out
idiv
stc
ins
lods
xchg
and
jae
movs
jmp
repnz
push
xor
fs
cdq
cmp
adc
sahf
stos
test
in
jne
pop
in
test
xchg
data16
mov
in
daa
push
sbb
fucom
sub
pop
cmp
inc
push
stc
push
add
fisub
cmps
xchg
add
mov
int3
not
es
aaa
sub
mov
xchg
pop
mov
ret
sbb
test
and
daa
inc
mov
jne
jbe
pop
icebp
inc
stos
push
clc
push
std
push
daa
push
out
inc
shr
ror
mov
cld
pusha
sub
fistp
in
cwde
(bad)
imul
pop
mov
leave
dec
lock
sbb
nop
loopne
jle
ds
sub
push
aam
jle
pop
repnz
outs
retf
(bad)
cwde
pop
jl
cmp
and
ret
fsubp
mov
xor
jno
or
cdq
loop
xchg
mov
xchg
add
js
xor
ins
jl
inc
bound
fist
add
jmp
in
in
fwait
or
or
xchg
push
mov
push
cmp
mov
fmul
xor
ins
lahf
cmp
adc
adc
scas
out
stc
cmp
pop
shr
dec
xchg
in
push
enter
mov
addr16
push
dec
jb
xchg
sub
arpl
ss
(bad)
movs
cmp
sbb
or
cwde
lods
sub
ret
(bad)
into
sbb
sbb
sar
mov
test
inc
in
xchg
mov
ss
nop
gs
nop
cmp
inc
mov
push
stc
jo
nop
jne
out
into
cmp
hlt
dec
ror
shl
test
sub
out
mov
rol
lock
fs
and
nop
clc
adc
loopne
(bad)
lds
(bad)
imul
mov
mov
cdq
and
push
es
jg
in
or
mov
xor
daa
mov
sub
cwde
imul
repz
inc
xchg
pop
shr
pop
neg
lods
push
push
jno
daa
loopne
popf
xlat
dec
les
add
js
dec
dec
add
movs
jne
jecxz
cmp
mov
mov
mov
ins
hlt
das
out
cmc
loope
mov
int
cmp
stos
sti
fincstp
mov
sub
dec
or
cmp
lds
xlat
das
push
fadd
jp
in
(bad)
fnstsw
push
pop
into
and
push
and
cld
in
mov
push
std
fwait
scas
leave
hlt
push
stos
aaa
add
push
mov
pusha
dec
int
and
pop
shl
or
fcomp
mov
mov
in
mov
enter
mov
push
dec
adc
inc
add
scas
ret
pop
(bad)
mov
call
icebp
ja
call
sbb
imul
(bad)
pop
(bad)
cmp
add
bound
ds
out
jb
dec
(bad)
nop
sub
or
lahf
and
daa
cmp
or
add
mov
stos
popa
mov
mov
inc
imul
pop
add
(bad)
in
dec
jecxz
and
call
xor
call
aas
sbb
sub
inc
push
pop
gs
cmps
adc
in
dec
and
fmul
dec
cmp
pop
cs
js
aam
dec
dec
jl
and
mov
pop
pop
ret
rcr
xchg
ret
mov
stos
adc
jp
add
push
repnz
cmp
sahf
cmp
inc
aam
(bad)
ror
repz
cwde
adc
int
push
sbb
ds
adc
inc
xchg
add
mov
dec
mov
mov
in
mov
jecxz
mov
pusha
mov
or
add
repz
and
add
into
mov
mov
pushf
shl
fxch
pop
mov
sub
jge
(bad)
aas
cmp
sub
mov
sar
dec
mov
je
adc
iret
repnz
or
loopne
push
xchg
pop
push
mov
cmp
jae
xchg
jmp
daa
adc
adc
test
outs
or
inc
add
dec
mov
dec
mov
shl
les
push
pop
pop
jecxz
dec
clc
xchg
jns
dec
xor
cld
js
mov
stc
mov
push
cmc
or
lahf
aas
jno
inc
xchg
ss
xchg
xor
or
in
mov
stc
sub
push
std
jge
xchg
fistp
jb
and
test
stos
pop
mov
daa
mov
or
retf
mov
cmp
pop
jmp
xchg
mov
or
mov
push
lds
loope
push
scas
test
xchg
add
xor
adc
xchg
fdivr
in
jae
mov
inc
repz
push
adc
fs
ror
cdq
in
cmp
and
jb
fs
fisttp
popa
sbb
sti
into
xor
pop
pop
dec
add
popa
out
pop
sbb
pusha
retf
mov
dec
pop
dec
iret
shl
cmp
(bad)
outs
nop
xor
aam
retf
inc
add
test
ror
push
jp
mov
cmps
ds
xor
sub
push
(bad)
outs
cli
push
jo
adc
sbb
pop
imul
icebp
lods
loop
xchg
mov
mov
mov
repz
xchg
rcl
push
fwait
sbb
retf
shl
fldenv
or
jne
lahf
xchg
cmps
mov
sub
sub
xchg
test
es
sbb
fs
push
jg
leave
sbb
repz
aad
xlat
mov
fbld
pushf
xchg
mov
out
add
and
lods
jae
cmp
and
lods
pop
cs
add
sbb
jmp
jle
imul
jb
lods
mov
sub
sbb
jbe
pop
jb
push
cmps
and
push
cmps
xchg
push
mov
retf
jecxz
scas
test
mov
or
inc
fisttp
push
and
cdq
mov
mov
lods
fwait
xor
jle
push
add
mov
push
fdivr
(bad)
xchg
jae
xchg
cmps
loopne
cmps
adc
jno
rcl
xchg
jmp
jne
cli
pop
mov
test
shr
(bad)
jns
xor
imul
push
fmulp
jnp
xchg
mov
inc
xor
(bad)
cmovns
mov
sbb
add
in
dec
mov
cmp
scas
ror
mov
sub
cmp
popa
jp
xor
xchg
mov
xchg
mov
push
mov
lahf
icebp
cmp
mov
call
call
loope
out
jl
lods
mov
adc
std
jge
push
les
xchg
mov
popa
sahf
arpl
sub
neg
cmp
mov
repz
pop
sbb
push
sub
sub
(bad)
out
sahf
aad
xchg
sbb
sub
leave
dec
not
pop
or
pop
mov
pusha
xchg
sar
lock
les
sti
loop
es
cmps
dec
ins
clc
xor
push
pop
mov
mov
cmps
mov
mov
repz
pop
int
loope
imul
push
gs
mov
or
push
test
adc
pop
adc
mov
cmp
mov
(bad)
or
xchg
call
ret
retf
fcomp
daa
add
or
adc
inc
mov
adc
sbb
sbb
pop
sbb
cmc
dec
mov
jne
retf
mov
out
int3
sbb
inc
shr
mov
hlt
pop
push
cmp
cmp
xchg
cli
lahf
and
inc
sti
mov
xor
dec
std
not
stos
leave
test
jmp
out
bound
mov
and
mov
(bad)
aas
sub
lock
jl
and
stos
mov
mov
sub
push
test
dec
cmp
(bad)
jno
test
xor
in
jge
aas
icebp
xor
ins
jle
or
(bad)
add
mov
or
mov
in
and
(bad)
das
popa
lods
in
in
xchg
adc
jmp
xchg
push
adc
push
outs
ja
addr16
xchg
retf
adc
xchg
(bad)
iret
es
scas
cmps
and
ds
mov
inc
daa
inc
pop
xlat
add
into
sbb
inc
ret
adc
enter
adc
or
scas
pop
enter
xor
mov
je
pop
mov
mov
loopne
and
mov
lods
jnp
jne
mov
cli
aam
imul
(bad)
xor
jb
cwde
je
aaa
rol
(bad)
add
movs
in
out
addr16
mov
stos
mov
jg
xchg
mov
js
fs
or
xchg
repnz
cmp
out
push
cld
mov
call
js
call
outs
sti
adc
out
ficom
jle
loope
dec
mov
pop
fdivr
sbb
push
or
outs
mov
outs
jecxz
sub
dec
sbb
mov
shl
(bad)
add
pop
test
push
push
xchg
jg
outs
sbb
mov
mov
rol
inc
or
mov
sbb
jecxz
mov
mov
cmp
(bad)
pop
jecxz
jo
mov
cli
fs
(bad)
jmp
push
aad
stc
retf
xchg
mov
in
clc
ret
mov
dec
adc
push
or
xchg
jmp
les
mov
jnp
je
sub
add
dec
ja
int3
fwait
inc
fcomp
pop
xor
jecxz
add
mov
idiv
mov
and
fmul
fcomp
jge
and
clc
pushf
or
movs
adc
dec
je
add
mov
lods
or
(bad)
lods
lods
ins
xchg
push
es
shl
test
bound
movs
out
pop
lock
xchg
xchg
pop
hlt
je
cs
push
dec
pop
in
add
mov
cmp
cmps
and
cmp
call
adc
jo
or
xlat
in
jbe
mov
cmp
push
iret
cli
fiadd
cmp
xor
loopne
xor
out
out
adc
out
mov
rol
mov
lods
lods
mov
add
fistp
xchg
mov
mov
shr
cmps
mov
jmp
pop
inc
jp
xchg
add
hlt
mov
dec
and
pop
xor
hlt
xor
push
xchg
loopne
bound
shr
scas
aad
in
jle
les
in
inc
clc
outs
(bad)
lods
les
imul
xchg
sub
add
int
jmp
xchg
or
fwait
lock
bound
sub
mov
loopne
sub
inc
out
fdiv
cdq
push
ds
test
data16
cwde
ss
int3
jge
aam
in
jno
call
fisubr
rcl
jle
sub
sar
dec
popf
mul
inc
mov
sbb
(bad)
cmc
inc
jle
dec
xlat
pop
loope
pop
sub
sub
lea
push
cmps
xchg
stos
fimul
mov
push
mov
js
add
addr16
push
jecxz
dec
ret
cmp
repnz
xor
pusha
mov
dec
test
nop
push
add
dec
jg
out
mov
push
sub
je
pop
push
lahf
jl
or
js
push
sbb
jmp
cli
xchg
mov
mov
pushf
mov
fldenv
jl
push
mov
lds
dec
and
ins
pushf
int3
inc
movs
dec
loop
inc
mov
or
test
aad
xor
add
sti
rcr
cmp
sub
outs
add
mov
dec
ret
call
adc
dec
sub
sub
pusha
push
aam
pop
out
icebp
(bad)
sbb
ret
add
pop
sub
add
mov
lods
sbb
push
mov
movs
dec
push
in
xchg
mov
push
ss
jae
cwde
(bad)
call
sbb
xlat
ja
call
push
adc
mov
add
fs
lods
pusha
pop
out
adc
add
cmp
xchg
jno
scas
int
pop
jecxz
adc
push
mov
mov
inc
lds
inc
and
ficomp
add
pop
cwde
push
xchg
fisttp
sub
stos
aad
or
test
mov
dec
dec
jge
stos
mov
out
lods
mov
jbe
test
or
(bad)
inc
scas
call
pop
sbb
stc
xchg
mov
(bad)
mov
or
fild
sub
sbb
mov
xsave
das
jle
push
pop
xchg
mov
inc
lock
es
out
cmp
pop
int
mov
sub
stc
pop
jnp
rep
sbb
mov
arpl
inc
stos
add
out
cwde
pop
rcl
js
cmp
icebp
test
push
adc
nop
mov
nop
ins
repz
adc
jbe
xor
xchg
vpshad
xlat
lea
xchg
jge
jno
cli
call
(bad)
ins
lahf
sahf
movs
push
mov
and
into
(bad)
pop
scas
pop
xchg
leave
fstp
int3
inc
xor
jne
add
scas
sub
inc
jbe
hlt
pop
les
ds
mov
ins
xor
outs
mov
test
stos
or
mov
or
int3
inc
popf
int
scas
les
div
pop
outs
mov
mov
nop
pop
iret
lahf
aas
sbb
cmp
in
dec
cmp
xchg
ins
or
lahf
xchg
xor
or
(bad)
or
into
mov
pop
fstp
jo
lea
dec
test
cmp
outs
push
pop
add
int3
test
jmp
xchg
test
xchg
adc
je
mov
int3
xor
jle
jo
gs
push
dec
inc
xchg
mov
sub
(bad)
loope
sbb
jecxz
jbe
(bad)
sub
push
push
cmp
jmp
push
sub
loopne
push
ins
adc
or
pop
pop
jmp
xor
and
ret
(bad)
sar
jb
xchg
leave
dec
icebp
mov
inc
cmp
cdq
jns
push
ss
bound
inc
xlat
sub
jne
jnp
xor
dec
mov
dec
pushf
pop
clc
test
xor
sub
or
sbb
mov
jmp
xchg
xchg
jmp
aam
mov
inc
bound
jmp
rcl
loop
mov
or
dec
cmp
sbb
ret
xchg
loope
lods
outs
in
inc
dec
in
jns
icebp
(bad)
repz
inc
int3
pop
or
retf
jne
sbb
int3
jl
and
outs
or
popf
cmps
loopne
pop
(bad)
pop
push
mov
jo
out
mov
pop
xchg
dec
mov
xchg
pop
push
xor
xor
enter
jns
js
es
in
loope
mov
imul
mov
icebp
out
sub
mov
scas
mov
xchg
fwait
outs
div
push
or
je
fucomp
jmp
or
outs
in
lahf
push
sub
jp
inc
movs
aad
movs
das
(bad)
mov
in
mov
mov
mov
test
push
out
test
cmp
scas
cld
cmp
push
mov
xchg
pop
add
mov
xor
jecxz
test
fbstp
sahf
sbb
mov
mov
inc
test
dec
sub
jl
mov
movs
ret
fild
sahf
mov
fisubr
or
std
ins
xchg
and
ja
mov
cmc
xchg
jbe
and
pop
ja
pushf
aaa
lods
pop
mov
add
sub
loope
stos
mov
sahf
jns
arpl
data16
add
and
(bad)
pop
pop
jae
shl
jnp
int3
mov
xchg
cmp
loope
pop
daa
mov
and
xor
pop
hlt
mov
es
jb
inc
loop
aas
sahf
mov
and
pop
in
fwait
inc
mov
jmp
xor
jno
fwait
jl
push
adc
xchg
bound
nop
fadd
sub
sub
ins
push
loope
xor
jmp
and
out
inc
dec
add
dec
jno
or
add
std
jmp
mov
and
dec
loopne
lahf
movs
ja
loopne
push
imul
scas
aam
out
xchg
adc
sahf
sbb
adc
ins
fiadd
lahf
ret
inc
aas
into
jae
sti
(bad)
fldl2e
cs
dec
mov
xchg
das
push
call
lods
aaa
mov
sti
gs
push
int3
repz
clc
sar
cmp
nop
fisttp
mov
test
loop
nop
sbb
sbb
mov
test
pop
lock
mov
in
cmp
mov
and
mov
mov
not
xlat
push
jecxz
mov
ret
out
(bad)
xchg
sub
push
cld
or
and
sbb
inc
xor
adc
div
adc
xor
cmp
ja
fdivr
into
mul
movs
xchg
scas
jmp
movs
xor
repz
ror
ret
sub
push
jmp
pop
push
and
ins
clc
movs
sbb
js
sbb
mov
pusha
dec
sub
xchg
(bad)
mov
test
or
dec
cmc
arpl
jecxz
mov
push
das
mov
mov
mov
pop
and
cmp
jp
test
shr
das
or
xchg
xor
rcl
push
pop
fisub
and
and
lods
nop
cs
inc
jle
stos
mov
aas
inc
push
and
neg
inc
push
out
inc
scas
(bad)
or
int3
lds
(bad)
bound
fistp
dec
pop
inc
mov
int
push
outs
iret
mov
test
mov
in
push
adc
cmp
add
pop
sbb
(bad)
pop
mov
jecxz
hlt
cdq
jle
fisub
mov
jge
(bad)
pop
jb
lea
dec
cmp
aaa
(bad)
mov
dec
test
dec
mov
inc
out
mov
xor
(bad)
dec
push
(bad)
out
pop
pushf
xor
sbb
lahf
fcomip
rol
dec
inc
stc
pop
sar
add
mov
push
out
pop
sti
cmps
sub
gs
inc
sub
jb
xchg
add
sub
pop
out
fwait
pusha
lahf
fcom
inc
push
sar
lds
sbb
in
xchg
imul
cld
cmc
sub
rcl
out
repnz
rcl
and
push
add
lods
or
lock
mul
cld
pop
sub
pop
sar
inc
mov
scas
xchg
xor
pop
mov
test
add
cmp
(bad)
iret
outs
dec
dec
outs
xchg
adc
mov
retf
cmp
dec
pop
repz
mov
jecxz
pop
xchg
jo
stc
jge
js
test
mov
fldenv
inc
call
movs
dec
jge
mov
cmp
jnp
hlt
(bad)
in
mov
add
cmp
inc
pop
pushf
pop
sar
sbb
jp
push
in
jno
das
fdiv
mov
loop
outs
push
dec
push
data16
jae
sbb
adc
repz
jge
imul
retf
neg
retf
fist
sub
fimul
adc
xchg
push
mov
jecxz
stos
xchg
rcr
aad
shl
mov
pop
cmps
dec
jo
leave
leave
pop
imul
dec
in
jle
mov
nop
push
mov
or
push
push
xchg
dec
daa
bound
sbb
push
pop
in
into
jno
cmp
scas
out
lahf
and
movs
xlat
(bad)
cld
jno
jmp
or
push
ins
mov
jnp
fcomi
push
cmps
dec
adc
lods
xlat
add
(bad)
leave
mov
inc
int
gs
pop
sbb
daa
mov
push
in
fdivr
mov
fisttp
adc
cmps
dec
sbb
loop
cmp
pop
enter
jg
out
inc
call
out
jl
cmp
clc
mov
ret
mov
xor
cmp
lock
mov
ret
sub
(bad)
icebp
in
adc
pop
shl
or
mov
mov
imul
das
(bad)
xor
test
xor
mov
fisubr
(bad)
(bad)
popa
leave
mov
jae
outs
scas
ds
add
mov
js
ds
xor
std
mov
mov
shr
jbe
mov
dec
cmps
cmc
mov
dec
adc
sbb
jno
rcr
hlt
jnp
inc
inc
ja
adc
sub
mov
inc
mov
cmp
or
sbb
add
and
mov
jne
jae
add
xor
inc
bound
scas
mov
dec
neg
cmp
test
jb
inc
(bad)
aad
inc
xchg
lds
mov
mov
int
push
mov
or
je
xchg
sub
jg
push
inc
and
out
inc
pop
add
aad
cmp
mov
mov
sar
stc
sub
(bad)
arpl
pusha
std
jge
popf
mov
outs
cmp
cwde
or
xor
xchg
dec
dec
inc
mov
or
into
inc
jecxz
out
cld
dec
or
inc
out
into
push
fmul
jo
dec
mov
jp
and
aaa
adc
in
xlat
mov
aaa
cmps
push
push
mov
fwait
imul
out
push
push
mov
into
loop
loopne
mov
pop
loop
inc
prefetcht1
repnz
inc
outs
mov
sbb
inc
jle
test
cmp
and
imul
mov
jne
nop
pusha
fdivr
lock
cmp
jnp
rcr
or
dec
mov
retf
gs
std
ret
jmp
add
and
and
pusha
jmp
push
loopne
xor
int
or
popa
retf
mov
jmp
enter
stos
fldenv
adc
jnp
ficomp
aam
mov
leave
retf
pop
sub
in
lea
or
mov
xchg
cmps
mov
dec
mov
test
push
pop
popa
xor
sub
or
mov
std
mov
lds
push
mov
aad
pop
cmps
icebp
mov
lods
pop
mov
lds
jbe
add
rcl
fcmove
repnz
xchg
or
imul
cmp
dec
(bad)
cli
xchg
adc
rcr
ret
and
cmp
push
loope
sbb
jae
push
jl
repz
cmp
stos
out
je
(bad)
jmp
scas
fs
pop
xchg
les
popa
mov
outs
or
jns
fdivr
movs
lods
push
jge
(bad)
sbb
mov
push
out
xor
cmps
dec
cdq
jae
int3
adc
in
stos
test
movs
aam
into
call
int3
mov
xor
xchg
in
jnp
clc
shl
add
push
js
leave
add
sub
lahf
inc
adc
rcl
add
inc
cmp
jmp
cdq
loopne
push
imul
dec
cmps
jmp
cmps
sub
sub
mov
lods
iret
sub
icebp
jno
out
imul
jecxz
daa
jbe
or
mov
shr
push
pop
imul
neg
jbe
ins
nop
test
jge
or
pop
repz
and
adc
or
nop
ja
mov
in
adc
cld
pop
es
mov
mov
mov
add
outs
pop
inc
loope
mov
sar
mov
arpl
bound
int
pushf
push
push
jb
xchg
rol
cmps
xchg
sub
test
add
jge
ja
push
xchg
inc
les
leave
sub
jp
loope
movs
loopne
pop
imul
xchg
je
ins
push
jns
jmp
enter
xor
cli
fwait
dec
or
retf
jae
imul
test
xchg
pop
retf
jecxz
cmp
sub
loop
(bad)
xlat
mov
mov
jge
arpl
ror
test
jle
push
mov
mov
or
ds
gs
imul
cmp
rol
inc
stos
cmps
push
ss
loope
cmp
jbe
int
nop
cli
arpl
sbb
pop
stos
inc
loope
dec
or
add
inc
idiv
cmc
jle
cmp
sbb
imul
cdq
add
loopne
fwait
das
je
daa
mov
sbb
enter
pop
loope
shr
jbe
dec
pop
xchg
test
or
shl
pop
xchg
mov
mov
adc
bnd
es
adc
sbb
jg
add
xor
push
call
out
mov
outs
ror
mov
out
xor
mov
mov
mov
adc
or
aam
sahf
mov
inc
sub
popf
cmp
mov
ret
sub
add
aam
stos
jae
push
mov
cmp
je
xchg
aas
inc
(bad)
icebp
call
inc
das
lds
daa
mov
(bad)
(bad)
pushf
add
or
les
add
cdq
jecxz
xor
push
(bad)
xor
out
jle
adc
inc
push
in
sbb
cmps
sub
out
pop
aaa
or
sti
pop
daa
jnp
xchg
sub
and
sub
cmp
js
mov
stos
shl
int3
ins
stos
jnp
mov
ficom
ja
pop
push
lahf
aaa
cli
mov
imul
or
movs
cld
jmp
call
test
ja
stc
sub
cmp
and
jo
inc
adc
(bad)
lods
push
sbb
movs
xchg
js
or
inc
or
sub
sbb
mov
dec
or
sub
in
outs
cld
adc
and
das
mov
lods
xor
rcr
and
cmp
test
mov
aaa
cdq
xchg
jne
in
dec
out
ror
and
push
inc
je
jb
test
repnz
sbb
adc
sar
push
xlat
iret
cmc
pop
jmp
inc
test
shl
mov
inc
shl
ja
pop
sbb
hlt
(bad)
(bad)
retf
cmp
loope
ror
inc
mov
lea
(bad)
jbe
and
mov
cli
or
out
int
mov
ret
inc
xchg
stc
cmp
add
cmp
aaa
out
xchg
mov
pop
push
mov
lea
push
push
cwde
adc
pushf
push
dec
cmp
inc
out
push
outs
xchg
sar
mov
movs
inc
ret
pop
call
inc
jmp
xor
adc
lods
push
(bad)
xlat
in
sbb
stc
mov
(bad)
jecxz
push
jg
fimul
adc
pusha
push
jl
mov
jg
adc
xor
arpl
cmp
adc
jae
fmul
mov
and
jg
jmp
dec
sbb
jp
and
mov
cdq
or
stos
stos
and
popa
aaa
ja
mov
xchg
jbe
mov
mov
jbe
aad
es
adc
retf
pop
je
rcl
mov
ds
pushf
sbb
or
cwde
sub
push
mov
mov
stos
mov
jmp
adc
jb
aam
cmc
repz
call
add
add
enter
das
jg
sub
retf
xor
in
dec
mov
and
push
lds
fdivp
(bad)
in
faddp
mov
loopne
push
cmp
dec
aad
mov
fstp
loope
stos
mov
adc
xor
cmp
mov
and
data16
pop
xchg
jg
out
mov
mov
sbb
dec
cmp
xor
inc
xor
adc
not
test
adc
add
dec
lahf
jbe
adc
push
jecxz
pop
out
and
es
in
push
mov
cmp
push
xor
inc
pop
scas
pavgw
es
int
push
movs
xchg
into
gs
add
inc
out
sbb
sbb
fidiv
mov
data16
mov
sbb
sub
popa
shl
dec
pop
sub
in
mov
cwde
out
ror
lds
inc
out
aaa
rcl
push
mov
popf
mov
mov
mov
sahf
sub
jae
das
clc
and
in
iret
(bad)
cld
mul
cmps
imul
adc
lea
and
adc
leave
ins
cmp
push
jecxz
pandn
fisubr
loop
setle
and
or
inc
rcr
jo
int3
mov
aad
xchg
mov
les
neg
fmul
push
sahf
xchg
and
je
cmp
jecxz
stos
repnz
mov
mov
fdivr
iret
gs
popa
jb
xor
cli
sbb
jo
jb
test
cld
sar
js
scas
data16
out
jae
lock
mov
sub
(bad)
adc
pop
into
hlt
mov
mov
inc
or
out
xchg
and
in
push
jmp
ret
push
and
cmp
test
sar
dec
retf
mov
push
or
ror
iret
jecxz
sahf
mov
out
xchg
mov
xlat
mov
or
mov
mov
inc
loope
adc
js
mov
inc
pop
mov
(bad)
mov
xor
test
mov
xchg
mov
outs
ins
and
popa
add
test
mov
shl
sbb
dec
leave
in
scas
cli
call
out
dec
adc
mov
outs
adc
(bad)
movs
or
push
cmps
add
jle
sub
cdq
fs
jge
nop
xchg
cld
sbb
mov
pop
mov
cmc
lods
or
mov
icebp
(bad)
ins
sbb
cwde
enter
leave
(bad)
cs
fcom
pusha
outs
jns
add
rcl
test
popa
je
lds
mov
sbb
outs
not
shr
adc
and
cli
ret
or
sahf
and
ja
btr
mov
js
sbb
(bad)
lds
ins
in
sub
mov
inc
inc
push
xor
loopne
(bad)
shl
rcr
fs
ins
sahf
addr16
call
push
mov
ja
repnz
(bad)
or
lahf
loopne
in
cmp
aas
cs
shr
in
and
(bad)
enter
dec
mov
test
cld
sbb
jecxz
sahf
xor
sub
add
jge
ret
pop
jmp
sbb
sub
sar
inc
pop
sbb
adc
dec
into
adc
xor
es
jp
xchg
xchg
jnp
and
mov
inc
push
or
inc
inc
cmp
fdivr
iret
push
loope
fadd
mov
or
not
loop
xor
mov
imul
mov
sbb
fwait
imul
mov
cmps
cmp
(bad)
sbb
adc
push
shr
cmp
or
loopne
mov
sub
lea
jle
loopne
ds
pusha
pop
fdivr
pushf
and
fdivp
add
mov
stos
fnstsw
xor
sub
sbb
test
sub
mov
pop
(bad)
jp
repz
call
fdivr
test
pop
in
inc
or
sbb
mov
dec
sbb
cdq
push
sbb
popf
mov
and
das
adc
(bad)
cmp
les
mov
mov
fs
sar
movs
jmp
scas
xchg
int
retf
adc
xor
sub
(bad)
mov
outs
sub
add
je
pop
rcr
(bad)
retf
std
sbb
mov
cmp
aaa
arpl
xchg
fwait
jns
inc
test
sub
mov
or
cmp
mov
mov
adc
add
or
stc
jb
jle
test
popa
jae
ins
rol
hlt
cld
mov
dec
dec
push
jne
shl
je
mov
addr16
aam
leave
aas
pushf
enter
jno
lahf
sub
and
imul
in
shl
mov
out
push
push
add
shl
(bad)
aas
pop
popf
mov
iret
add
jg
lods
(bad)
mov
jns
pop
inc
inc
and
adc
das
repnz
xchg
(bad)
dec
rcr
xchg
jae
mov
aam
test
imul
add
add
push
dec
pop
mov
push
jmp
or
cmps
mov
outs
mov
mov
popa
dec
ret
jecxz
repz
(bad)
icebp
or
xchg
xor
fcomp
fcomip
fld
add
cs
rol
push
aas
add
imul
jg
adc
cmp
add
arpl
sbb
rol
xchg
jmp
sbb
jmp
and
mov
(bad)
repz
mov
push
idiv
stc
mov
xlat
jp
adc
aaa
and
mov
mov
cli
(bad)
(bad)
mul
mov
mov
xlat
ror
push
pop
sub
inc
das
daa
cdq
pop
fistp
int3
jl
and
test
adc
xlat
mov
sbb
(bad)
mov
push
mov
fcomp
fwait
jecxz
sub
sbb
dec
out
popa
cmp
bound
add
fiadd
dec
dec
popa
add
movs
stos
pushf
push
or
push
and
add
fmul
enter
sti
inc
mov
push
push
mov
adc
not
dec
aam
xor
sbb
jno
pop
fidivr
xchg
arpl
jl
pop
xchg
mov
(bad)
dec
leave
jge
mov
repz
xchg
bound
mov
ss
xchg
(bad)
mov
push
int3
dec
cmp
xchg
dec
dec
das
stc
aaa
mov
mov
jge
in
ins
or
cli
xor
push
cmp
inc
sbb
into
inc
popa
rol
cmp
stc
jecxz
xlat
std
jbe
mov
pop
pop
fnstsw
and
addr16
in
dec
cmp
shr
bound
ja
pop
xor
mov
sbb
gs
jo
repnz
mov
cmp
imul
push
rol
cmp
mov
jmp
and
retf
ds
data16
xchg
jb
or
adc
cmp
rcl
pop
(bad)
push
fst
or
outs
data16
test
dec
push
jmp
adc
sub
add
and
daa
xchg
sub
jnp
ja
cmps
dec
es
add
and
idiv
es
dec
dec
push
mov
loopne
inc
and
xor
fs
(bad)
xchg
scas
test
enter
ins
ja
scas
push
stos
lods
fcmovu
jmp
jl
jns
fs
or
sbb
bound
jmp
repnz
cs
adc
adc
jp
jo
adc
push
and
std
cmp
mov
or
enter
cwde
retf
es
movs
pusha
jns
retf
fild
fwait
xchg
jae
pop
sub
shr
shl
jnp
mov
fsubr
retf
xlat
mov
(bad)
(bad)
shr
jmp
hlt
mov
cmp
out
jg
stc
xor
push
or
cmp
daa
xchg
xor
jmp
sub
pushf
aam
pushw
ja
and
lds
sti
jecxz
inc
xor
add
rol
loop
out
neg
hlt
in
cmc
stos
das
or
mov
in
push
ja
fsub
in
sbb
push
mov
cmps
cdq
push
mov
clc
inc
xlat
cmp
or
mov
xlat
xor
fcomp
adc
sbb
xchg
icebp
jg
popa
jl
inc
(bad)
xor
sti
scas
call
mov
aam
loope
test
jns
mov
test
mov
je
inc
std
or
or
xchg
fcomp
in
mov
jmp
push
xchg
stc
dec
add
fwait
add
inc
ins
and
scas
sbb
repnz
sbb
push
movs
jg
jb
pop
or
bound
jns
add
movs
cmp
mov
pop
xchg
sbb
lds
sbb
pop
test
sbb
adc
sub
sbb
pushf
add
mov
lods
or
rol
bound
mov
sbb
popa
add
ins
cli
jo
cmps
arpl
inc
mov
test
mov
dec
mov
add
mov
into
inc
ds
sub
jae
push
or
add
xchg
fsubp
mov
sbb
jb
mov
push
xor
mov
ss
fdivr
mov
sub
cs
add
push
mov
ins
adc
sbb
pop
mov
xlat
sbb
cmc
lahf
jb
jge
add
dec
rcl
add
icebp
push
test
test
outs
data16
popf
in
rcl
fst
cdq
add
push
sar
sar
je
and
ret
cwde
push
or
test
(bad)
scas
(bad)
sbb
icebp
call
dec
adc
lahf
push
jne
(bad)
push
dec
jb
mov
cld
adc
inc
pushf
(bad)
js
aas
les
dec
loop
dec
js
push
cmps
fwait
pminub
std
inc
(bad)
cmp
jb
popa
adc
lock
not
or
adc
loopne
push
imul
outs
fstp
sbb
bound
cmp
(bad)
aaa
cwde
fisttp
loopne
ins
jecxz
add
imul
pop
stos
mov
mov
pop
(bad)
mul
mov
imul
aam
pop
test
retf
mov
out
sub
xchg
jns
shl
jp
call
cmp
stos
int
sbb
jo
cmps
lds
adc
adc
jle
stc
jmp
xchg
push
imul
xchg
(bad)
cmc
test
push
int3
dec
cwde
push
fstp
stc
jmp
fmul
addr16
enter
dec
mov
add
push
test
lods
push
and
xchg
or
inc
popf
dec
xor
and
pop
outs
inc
pop
fnsave
sahf
call
into
int
std
and
movs
or
xor
sbb
sub
inc
inc
jne
leave
jo
rcl
loopne
adc
std
iret
ret
mov
mov
popf
inc
push
lahf
or
sbb
icebp
jo
jp
pop
outs
test
inc
(bad)
mov
(bad)
mov
push
jae
test
fstp
les
ret
ficomp
ins
push
xchg
(bad)
adc
mov
stos
gs
pushf
jbe
into
and
and
lods
add
dec
inc
fbld
repz
aad
push
es
cdq
fucomi
shl
(bad)
lock
push
sub
(bad)
leave
test
mov
neg
jns
in
gs
popf
adc
cmp
scas
out
adc
cwde
cli
add
mov
test
inc
out
cmp
out
xchg
(bad)
in
mov
push
gs
in
add
mov
aas
pop
cmp
or
fisubr
mov
in
dec
mov
cmp
(bad)
or
inc
dec
jmp
scas
mov
scas
out
adc
sbb
imul
mov
loope
ror
pushf
or
xor
jno
idiv
leave
std
rol
mov
inc
imul
adc
dec
adc
pop
pop
mov
cs
jp
cmc
div
mov
mov
or
pop
lods
inc
jle
ret
inc
pop
addr16
push
cmp
push
fs
inc
lds
sbb
dec
ja
xor
sbb
std
fdiv
cmps
inc
clc
pop
jnp
es
push
mov
es
dec
or
jg
jecxz
nop
fimul
sub
mov
lock
ret
pop
ficom
ret
imul
add
dec
mov
mov
dec
retf
js
push
or
retf
test
es
int
jno
xchg
sub
adc
les
call
das
inc
push
test
movs
jno
lds
lock
inc
mov
mov
int
hlt
js
xor
jb
sub
rcr
mov
cmp
outs
ret
jp
jb
inc
(bad)
fsubr
shr
xchg
test
cld
pop
lahf
xchg
sar
pop
push
add
leave
push
push
lods
cmp
cmc
and
mov
xchg
or
push
push
fistp
ins
cmp
jmp
cwde
add
add
cmps
fsubr
pop
ret
cmp
sar
into
sub
push
in
mov
adc
scas
mov
dec
lds
xchg
out
xor
add
push
mov
lock
mov
retf
push
int
mov
inc
lock
inc
mov
jle
aam
sub
popf
pusha
gs
pop
dec
and
call
fadd
push
int
pop
add
push
push
mov
popa
push
das
jno
int
pop
cmp
outs
out
out
push
xor
shl
mov
add
xchg
cmp
pop
xchg
mov
and
jae
outs
pop
sbb
fnstenv
jns
add
ss
jbe
test
mov
cs
cmp
mov
cwde
and
ss
das
jmp
aaa
test
les
(bad)
fidiv
and
push
inc
jp
push
out
sahf
add
shl
xchg
mov
xor
cmp
fimul
div
mov
leave
arpl
add
jbe
cld
and
lock
cwde
lds
ds
or
jmp
ds
adc
mov
popw
add
mov
ja
lods
mov
jo
mov
leave
push
ins
lahf
ss
add
adc
add
pop
pushf
sbb
pop
xchg
push
movs
jle
repz
icebp
push
xlat
mov
fld
xchg
jmp
dec
es
imul
push
ins
add
xchg
int3
into
fsub
rcl
cld
(bad)
jns
sub
fwait
and
(bad)
or
inc
fadd
test
jmp
minps
jb
jo
arpl
mov
call
mov
sub
ins
call
aas
jmp
aaa
adc
out
push
imul
cmp
ss
leave
das
es
xchg
out
mov
push
mov
xchg
mov
lock
sub
int
or
jns
pop
sbb
repnz
push
cdq
pop
cmc
data16
adc
std
adc
cmp
inc
push
cmp
scas
mov
es
test
shl
icebp
loope
stc
adc
mov
mov
mov
loop
cmps
call
mov
or
adc
out
add
xchg
mov
mov
xchg
cmps
stos
fwait
mov
cli
sub
out
or
mov
repnz
sub
pop
pop
popf
sahf
add
nop
dec
xchg
inc
fwait
jle
sub
aam
ds
je
in
adc
in
jle
jne
xor
out
sub
std
scas
call
push
dec
sbb
xor
popa
out
mov
adc
cwde
xchg
dec
sbb
sub
mov
rcl
dec
gs
call
std
mov
push
popa
xlat
es
or
pop
xor
imul
mov
fdivr
test
or
pop
fwait
out
mov
not
bound
or
ins
push
add
adc
in
aas
pop
dec
into
adc
lea
in
stc
cmp
cdq
or
and
xor
push
cmp
xchg
xchg
dec
repnz
imul
cmp
dec
bound
(bad)
ss
cld
adc
push
pop
lods
ss
mov
mov
mov
imul
mov
(bad)
jne
and
or
test
mov
pop
out
sbb
ret
adc
dec
pop
adc
sub
fadd
mov
popa
mov
test
fadd
adc
loop
mov
out
les
push
js
inc
pop
xchg
in
cwde
sbb
in
jp
xchg
into
in
cmc
mov
or
and
in
rol
fwait
sub
mov
fstp
inc
add
cli
rcl
jb
jns
mov
bound
test
rol
loope
jno
pop
mov
retf
cld
pop
mov
mov
mov
xchg
xlat
addr16
mov
mov
sub
imul
out
mov
mov
or
test
daa
in
into
stos
mov
cli
or
ficomp
mov
pusha
jo
add
pop
repz
mov
dec
inc
fist
(bad)
call
sar
sti
scas
xchg
add
jge
inc
je
cmps
mov
cli
movs
imul
fld
(bad)
and
jo
imul
inc
mov
mul
repnz
sbb
pop
jb
repnz
push
xor
mov
retf
cli
sub
(bad)
push
dec
push
xor
jbe
fxtract
(bad)
and
dec
push
in
mov
rcl
cmp
push
mov
ror
push
and
hlt
and
aaa
into
fs
cli
cmp
bound
cmp
or
xor
and
sub
add
xlat
add
call
cmp
xor
or
xchg
in
pop
cmp
popf
out
dec
mov
mov
aaa
xchg
pop
fcomp
mov
dec
sub
fadd
push
popa
ins
repnz
xor
out
in
fwait
neg
stos
sbb
inc
rcr
cmp
std
push
ret
mov
pushf
jmp
fs
cmp
jne
(bad)
(bad)
movs
aas
aaa
sbb
adc
add
fadd
scas
icebp
and
mov
and
(bad)
cmp
xlat
jg
(bad)
dec
and
retf
cmp
mov
add
outs
jl
out
(bad)
in
mov
les
std
rcr
jb
movs
inc
movs
ret
frstor
cs
fstp
fsubr
push
sub
stos
es
push
dec
add
push
stc
dec
xor
call
gs
test
icebp
sti
in
dec
nop
push
mov
retf
int3
sbb
in
aaa
enter
ror
jne
fsubr
ret
push
fild
push
stos
mov
ss
dec
pop
(bad)
mov
pusha
xor
mov
dec
add
adc
les
test
add
adc
pop
mov
loopne
outs
dec
adc
test
icebp
jne
loop
push
push
gs
loope
add
or
xor
aas
jno
test
cmp
sub
push
inc
add
clc
xor
and
cmp
mov
jns
dec
mov
(bad)
hlt
inc
pusha
shl
ins
sahf
cmovae
mov
iret
add
dec
js
fs
xor
sti
xor
dec
ins
(bad)
push
cmp
out
dec
mov
paddw
cwde
(bad)
or
mov
pushf
pop
push
adc
sahf
movs
inc
mov
lds
cmp
daa
out
popf
out
loope
add
iret
lea
gs
es
scas
jne
scas
lea
daa
jb
mov
mov
xchg
jp
adc
imul
xchg
(bad)
xor
sub
sub
cmp
loope
inc
adc
cmp
les
test
and
loop
jg
push
dec
mov
sbb
dec
sar
aam
rcr
mov
adc
cld
xor
cmp
cld
fcmovne
hlt
inc
iret
push
push
fidiv
nop
inc
ins
pop
imul
sub
xlat
rcr
xor
inc
test
leave
sub
inc
loope
adc
or
loopne
data16
jmp
repnz
jmp
xchg
jmp
xchg
xor
and
in
adc
dec
dec
cmps
pop
sub
xor
adc
mov
jb
arpl
test
add
and
push
mov
mov
ror
test
popf
push
loop
mov
aad
aad
dec
sbb
cli
cwde
inc
pop
sbb
and
in
popa
out
add
in
xchg
aam
pop
(bad)
rcr
pop
enter
out
loopne
call
mov
push
sbb
jb
faddp
mov
add
and
jo
test
icebp
xchg
nop
sub
mov
mov
outs
mov
movs
loope
xchg
out
adc
aaa
cld
sub
push
popa
dec
jmp
push
inc
rcr
scas
jg
in
jmp
push
test
shl
mov
out
dec
sti
test
add
test
adc
mov
retf
pushf
test
mov
fnsave
xor
cs
daa
(bad)
mul
dec
(bad)
cli
stos
and
mul
or
pushf
subps
cmc
mov
or
jp
xchg
rep
add
sbb
scas
ret
jl
push
loop
lahf
fsubr
and
mov
mov
stc
pop
mov
hlt
xor
inc
(bad)
ins
add
aas
pop
sti
dec
and
icebp
lahf
shr
adc
std
inc
lods
or
ret
aam
xchg
mov
pop
mov
sti
stos
xor
lea
pop
sbb
(bad)
int3
add
mov
popa
nop
(bad)
push
loop
shl
outs
retf
inc
(bad)
jle
pop
adc
mov
out
cmc
cs
cli
test
scas
and
in
aaa
jo
clc
loopne
and
mov
js
add
imul
in
retf
lea
pop
mov
or
xor
mov
add
mov
or
dec
jmp
stos
mov
mov
xchg
jno
xchg
sub
loopne
or
jae
cmp
mov
jae
(bad)
push
fsubr
pop
lods
pushf
test
xor
fwait
push
(bad)
jp
dec
addr16
mov
push
fsub
pushf
jp
(bad)
or
mov
push
rol
cmps
or
inc
out
xor
jno
sub
sar
xchg
rcl
xchg
(bad)
lds
dec
push
dec
sbb
mov
dec
(bad)
mov
(bad)
fldenv
or
call
add
gs
mov
pop
mov
cmp
mov
in
mov
sub
fidivr
mov
sbb
inc
loop
(bad)
movs
out
jno
pusha
movs
xlat
push
or
jb
mul
shl
mov
jge
repz
daa
sbb
cs
lock
xchg
pushf
pusha
ficomp
cld
shl
adc
mov
popf
cmc
jmp
xor
mov
lea
add
(bad)
fild
sbb
ja
xchg
add
xlat
cmp
xlat
sbb
outs
sub
xchg
mov
sbb
test
icebp
lahf
stos
(bad)
iret
addr16
sub
jb
outs
test
push
mov
cdq
pop
sbb
ficomp
les
inc
sbb
jns
cmp
dec
xchg
out
jl
cmp
sar
out
repnz
imul
js
int
(bad)
(bad)
iret
hlt
sti
sub
add
(bad)
ins
pop
stos
pop
xchg
add
xor
or
sbb
pop
sar
aaa
fsub
push
cdq
dec
rol
jno
adc
ficomp
mov
imul
mov
and
pushf
movs
sbb
cmp
mov
sbb
push
in
sti
inc
loopne
bound
std
jmp
cmp
ficomp
jp
inc
mov
sbb
movs
push
pop
xchg
test
mov
cmp
add
push
jecxz
cmc
test
jle
mov
push
shl
lahf
jae
sub
je
lds
ret
adc
les
push
outs
push
pop
add
cmps
mov
sub
xor
out
cs
repz
pop
mov
or
cmp
bound
jp
push
fisttp
add
push
(bad)
cmp
dec
das
inc
das
or
dec
jmp
push
jno
out
ret
and
add
inc
adc
lea
add
loope
dec
(bad)
pop
dec
fwait
idiv
pushf
push
mov
xchg
jns
xchg
and
add
daa
rcr
cmp
je
cli
mov
mov
xchg
xor
mov
frndint
adc
ror
loope
jl
outs
adc
sub
mul
or
mov
in
les
inc
jg
xlat
(bad)
aaa
or
jmp
sbb
(bad)
fiadd
add
jge
add
xor
adc
lods
js
mov
arpl
retf
fsubr
lahf
ret
aas
push
jo
mov
mov
lock
(bad)
mov
or
sub
loope
jne
pop
test
les
pop
sbb
fistp
out
or
movs
adc
pushf
xchg
test
repz
(bad)
sbb
add
or
push
call
inc
(bad)
sbb
push
pop
lea
mov
cmc
bound
mov
cmc
inc
jmp
aas
mov
jg
clc
js
repz
sbb
inc
add
pushf
cmp
cmp
dec
stc
sub
adc
add
pop
xchg
xlat
push
rcl
in
adc
jge
pop
data16
retf
mov
and
fstp
pop
inc
test
sub
cmp
test
in
dec
daa
mov
add
outs
mov
ret
nop
retf
pop
mov
icebp
xchg
cmp
add
sbb
push
and
xlat
pop
fdivr
sub
(bad)
push
or
movs
out
or
inc
push
retf
xchg
fisttp
add
ds
jmp
(bad)
ss
inc
imul
imul
jae
jnp
jmp
mov
pop
sahf
pop
cmc
mov
int
out
jae
cdq
or
loopne
sbb
mov
daa
dec
test
ins
nop
jno
or
out
lds
xor
jno
xor
mov
mov
mov
mov
inc
mov
aad
xchg
lods
mov
push
sbb
out
outs
xchg
pop
movs
inc
and
js
std
xlat
mov
jns
shl
add
mov
test
cmp
out
dec
push
scas
icebp
enter
xchg
lock
dec
mov
fidiv
mov
bound
ficomp
sub
aad
dec
add
(bad)
out
movs
pavgw
and
xchg
addr16
xor
ja
jbe
or
pop
push
or
les
call
pop
inc
mov
cli
add
pop
jle
and
mov
jge
cmp
lds
xor
call
jmp
aad
xor
sahf
adc
inc
push
(bad)
outs
sbb
icebp
aas
cmps
sahf
sbb
sub
inc
cli
pusha
xchg
fisubr
(bad)
pop
lods
xor
mov
test
mov
cwde
cmps
dec
pushf
sub
jmp
imul
ds
sub
es
add
add
ins
lods
mov
xor
call
mov
retf
pop
push
add
push
jb
mov
mov
pop
mov
push
sub
cmp
je
add
inc
mov
bound
movs
xchg
add
loopne
mov
ret
xchg
aas
pop
out
stos
push
jmp
push
pop
icebp
mov
and
add
cmps
daa
repz
pushf
sahf
stos
cld
lds
xchg
popa
js
and
fsubr
push
arpl
dec
(bad)
cdq
call
cmp
test
xchg
xor
cmp
lahf
jno
repz
jo
inc
jbe
fbld
jg
mov
in
sub
jmp
ud0
mov
into
ror
ins
into
(bad)
jmp
sbb
add
or
test
ret
cld
push
cmps
in
mov
aad
fnstcw
mov
out
loop
fisub
popa
aam
cmp
xor
mov
dec
in
leave
imul
lahf
div
mov
fisubr
loope
xchg
xchg
pushf
pusha
mov
cli
mulps
rcl
mov
rcr
pop
fistp
out
aas
mov
out
mov
sbb
nop
mov
es
pop
inc
adc
inc
mov
mov
mov
or
call
or
xchg
cs
cmp
test
lock
mov
cmp
adc
fcmovnb
adc
mov
cmp
push
xchg
push
outs
inc
push
mov
imul
or
jb
fs
movs
adc
mov
adc
pop
call
jge
jmp
cmp
and
sahf
mov
fisttp
pop
retf
xchg
cmp
pusha
dec
jmp
data16
jb
mov
in
retf
xchg
shl
push
std
cs
pop
addr16
aaa
lods
mov
sti
mov
mov
sbb
sbb
mov
inc
push
std
in
sub
fadd
or
mov
dec
in
cmovb
gs
mov
scas
call
inc
cli
sbb
jns
push
jp
(bad)
popf
jge
add
fbld
dec
pop
inc
or
rcl
push
jge
and
pop
ss
mov
xchg
ret
cmp
sahf
rcr
cmc
lahf
adc
lods
fs
imul
dec
icebp
inc
xchg
stos
dec
getsec
and
xor
stos
stos
or
mov
sbb
loopne
int3
mov
out
xchg
pushf
out
adc
inc
rol
mov
pop
jge
jno
mov
into
jno
jmp
iret
xchg
cmp
jno
loopne
mov
mov
add
sbb
pop
xor
gs
cli
jns
pop
(bad)
cmp
push
pop
and
(bad)
out
dec
push
test
in
imul
rcl
ins
and
mov
pop
int
xchg
xchg
mov
clc
fcmove
pop
mov
data16
scas
push
and
mov
dec
aad
cli
mov
and
lea
push
std
into
push
ja
mov
dec
lods
cmp
or
rcr
cmp
inc
or
fadd
dec
cmp
jne
mov
add
les
sbb
(bad)
hlt
jmp
inc
jb
lock
stos
bound
mov
movs
sahf
jecxz
test
loop
sub
cmp
xchg
xchg
inc
cmp
mov
out
(bad)
push
ret
inc
xor
(bad)
pop
xchg
rol
cmp
fwait
pop
and
mov
mov
aas
lds
mov
scas
movs
enter
(bad)
idiv
xchg
in
imul
jge
jmp
das
sbb
jmp
fwait
test
sub
jb
mov
sub
aaa
mov
movs
and
adc
out
test
and
push
mov
repz
mov
aad
jne
fwait
sbb
jmp
or
retf
stos
bound
mov
jmp
dec
jno
sbb
outs
lea
ret
cdq
jp
pusha
rcl
inc
xchg
mov
bound
xchg
ds
out
inc
dec
(bad)
stos
or
(bad)
lods
jge
loope
jmp
and
or
cmp
cli
test
and
jo
mov
adc
int3
ins
mov
shl
dec
jo
in
(bad)
xchg
cs
lock
movs
inc
lahf
retf
imul
mov
paddsw
cld
cdq
leave
popf
mov
mov
loopne
inc
test
outs
inc
sbb
jno
mov
in
dec
pushf
out
retw
es
xor
and
stos
sbb
xor
fwait
add
xchg
out
mov
sbb
or
dec
push
push
sbb
clc
cmp
icebp
pushf
dec
mov
aam
ja
imul
push
xlat
rcl
popf
sbb
(bad)
xor
mov
mov
jb
xchg
imul
mov
sti
mov
sub
xchg
arpl
mov
icebp
push
les
mov
addr16
sbb
into
mov
jbe
out
adc
ja
retf
out
pop
mov
mov
xor
out
mov
jge
jmp
jbe
push
push
test
ss
adc
sti
stos
add
rcl
cmp
push
into
lods
xchg
cwde
popa
adc
cs
adc
fsub
in
inc
mov
les
hlt
cdq
cli
add
scas
or
add
pop
lods
stc
jmp
push
sti
(bad)
or
cmp
jno
sbb
test
pop
fidiv
iret
out
adc
pop
xor
push
sahf
pop
mov
retf
bound
mov
test
iret
push
and
jg
repz
push
adc
inc
inc
fs
pop
lahf
je
cli
ds
jns
cmps
pop
mov
and
div
rcl
jbe
mov
in
fld
retf
jge
(bad)
sbb
arpl
mov
sub
mov
icebp
lods
and
mov
scas
mov
xchg
dec
div
xor
out
cmp
and
and
cli
inc
pop
popf
cmps
popf
xchg
adc
lods
ss
aam
icebp
xchg
fst
add
xchg
xchg
mov
pop
lds
jns
xor
push
xchg
lods
rol
test
inc
jno
xchg
jmp
mov
mov
mov
fiadd
push
arpl
xchg
(bad)
sbb
popf
push
add
xchg
cmps
aad
pop
mov
xor
je
test
sub
xchg
pop
jp
cmp
in
movs
xor
pop
pushf
xchg
jno
jae
sub
and
not
fdivr
and
rcl
and
outs
ficomp
stc
push
daa
sub
js
es
ins
jle
push
jae
out
mov
mul
and
sbb
jmp
adc
nop
fwait
fwait
jns
or
xchg
mov
loopne
(bad)
out
fs
mov
sub
(bad)
xchg
push
pop
inc
inc
or
(bad)
outs
mov
sbb
dec
jecxz
inc
xchg
cmp
inc
data16
test
xchg
icebp
in
loopne
rcr
mov
pop
pushf
daa
mov
mov
mov
adc
ins
and
sub
mov
fistp
pushf
pop
inc
dec
mov
cmp
add
lds
push
mov
xchg
xlat
or
sub
pop
adc
cmp
or
or
mov
out
out
mov
daa
aaa
jp
pop
fstp
(bad)
sbb
cdq
lods
js
or
adc
sbb
cmc
push
test
outs
ins
lahf
popa
add
sub
mov
leave
cli
ins
aam
inc
daa
call
retf
cmp
iret
imul
xchg
je
sub
adc
aam
pop
jb
mov
imul
dec
dec
retf
push
jns
aas
pop
out
call
inc
pop
out
mov
imul
test
aaa
(bad)
mov
call
fidivr
sbb
cmp
inc
sbb
mov
retf
pop
dec
adc
dec
rcl
xchg
cmp
addr16
sub
push
sub
add
mov
push
jmp
inc
int
adc
xchg
addr16
add
movs
popw
jae
sbb
js
mov
jl
sbb
push
or
in
push
aaa
popf
int
adc
pop
fdivr
and
div
push
imul
lds
fidivr
hlt
aaa
jno
lods
cdq
cmp
adc
pop
pop
sub
cwde
xor
mov
int3
out
sbb
cmp
jo
sbb
std
sbb
rcl
loopne
scas
or
mov
dec
pusha
ficom
push
mov
pop
push
xchg
sub
retf
xchg
mov
jecxz
mov
adc
stos
jge
adc
vmaxps
push
jl
push
xor
outs
and
shr
mov
(bad)
sbb
push
xchg
jb
xchg
jge
jg
jle
lods
shl
pop
sbb
call
out
xor
xlat
imul
pmaxub
cli
je
xor
adc
int
aad
ds
pushf
adc
jmp
je
add
lock
mov
pop
mov
cmc
(bad)
in
outs
out
fucomi
pop
xchg
inc
ret
movs
iret
cmc
xchg
sbb
rcl
data16
nop
(bad)
jo
outs
fdivrp
jne
add
addr16
rol
popf
mov
jns
mov
out
jae
lahf
mov
call
xor
push
pop
ins
inc
cli
mov
sub
xchg
mov
xlat
ficomp
and
sti
dec
push
test
and
sub
sbb
sub
jmp
leave
dec
or
xor
xor
daa
mov
mov
push
sub
hlt
movs
scas
cmp
adc
mov
add
dec
jns
inc
call
sbb
addr16
and
pop
out
mov
scas
pop
jne
iret
(bad)
dec
icebp
xlat
pop
ins
pop
clc
inc
int
xchg
addr16
in
pusha
cmp
pushf
scas
neg
pop
loopne
cmc
mov
into
sar
add
mov
mov
loop
pop
mov
cmovp
sar
pop
push
jbe
iret
pop
(bad)
out
mov
inc
mov
ret
(bad)
jmp
fdiv
ret
dec
cmc
mov
sub
xchg
mov
popa
jae
add
xchg
mov
out
ud1
ror
hlt
test
ret
test
jbe
movs
nop
repz
jmp
cmp
sbb
push
sub
call
jg
lods
mov
add
jae
rcr
mov
shl
inc
dec
dec
retf
xor
jne
test
and
ds
test
xor
mov
or
mov
sbb
cmp
inc
pop
mov
mov
mov
push
adc
pusha
scas
mov
nop
sub
add
shr
int
and
sbb
xor
(bad)
in
push
and
into
pusha
sbb
add
xchg
mov
cmp
xchg
addr16
pop
cli
jmp
ds
out
out
mov
and
sti
xchg
ret
dec
inc
mov
retf
dec
push
or
in
hlt
adc
sar
xchg
les
test
ror
pop
or
icebp
(bad)
pop
pop
sub
mov
lea
cmp
and
and
push
adc
movs
clc
adc
jb
push
xor
mov
rol
sub
data16
pop
inc
push
sbb
jmp
dec
in
sub
out
lahf
xor
addr16
sbb
mov
inc
push
xchg
es
rcl
loop
xchg
jmp
mov
and
aaa
sar
aaa
xchg
dec
cmp
cmc
mov
mov
mov
or
(bad)
fstp
mov
mov
out
and
fdivr
mov
test
call
and
push
xchg
push
pop
xchg
movs
in
and
add
mov
fcmovne
call
mov
(bad)
retf
add
je
xor
inc
out
jnp
and
(bad)
fwait
mov
pushf
loopne
(bad)
cdq
adc
loope
cmp
jae
push
cmp
jno
mov
int3
jle
dec
add
mov
(bad)
int
outs
je
mov
in
or
sbb
sbb
repz
push
daa
lods
js
adc
lock
lods
dec
add
in
push
jl
xor
(bad)
sub
and
enter
xchg
gs
and
xor
xor
(bad)
and
inc
data16
jb
push
out
int3
jae
sahf
nop
or
dec
xchg
(bad)
push
xor
arpl
(bad)
xchg
in
scas
adc
sub
repz
sbb
rol
dec
enter
int3
jg
out
cdq
int
ret
fadd
cwde
sbb
jnp
repz
repnz
inc
iret
inc
mov
adc
xchg
mov
mov
jae
popf
int
sbb
aaa
adc
sbb
aad
mov
sahf
add
jae
add
scas
shr
add
sub
add
add
cmp
add
mov
cmp
mov
xor
(bad)
jmp
pop
shrd
test
sbb
adc
mov
jmp
test
pop
test
cld
jae
push
popf
ja
retf
add
jb
loopne
cmp
dec
sub
pop
inc
and
xchg
lock
rcl
loop
jmp
lods
popf
jmp
mov
sar
add
add
lods
cld
andps
loopne
add
cmp
jl
adc
xor
push
sub
test
fstp
call
cmp
pop
pop
dec
ss
xchg
jae
iret
es
fwait
mov
pop
sbb
push
pop
add
dec
movs
pop
add
daa
inc
adc
shld
je
out
or
jo
pushf
adc
pop
in
or
push
add
mov
mov
cs
hlt
loop
lahf
adc
out
aam
repnz
push
and
cs
xchg
sbb
pop
sbb
xchg
pushf
push
or
ins
sbb
movs
mov
mov
xchg
aaa
inc
lahf
or
lea
jp
fdiv
fidiv
pop
xchg
cmp
rcr
les
in
add
(bad)
mov
jnp
mov
mov
clc
add
jo
mov
mov
and
xchg
add
jnp
xor
repnz
push
pop
add
jns
inc
fiadd
or
jns
(bad)
aas
inc
js
xchg
fisubr
add
push
pop
mov
shl
mov
push
xor
mov
jbe
or
mov
aas
das
xchg
sahf
jg
or
sub
icebp
shl
aad
jle
xchg
inc
mov
jl
add
inc
push
(bad)
or
and
or
call
inc
cmc
sub
sub
xor
cmps
mov
dec
xor
jmp
or
push
pusha
and
cmc
ins
test
dec
and
pop
cmp
xchg
jge
pop
pushf
out
add
mov
fistp
call
iret
jge
xchg
push
fs
pusha
add
jge
test
push
fld
push
sub
loopne
mov
mov
add
xor
jle
inc
popf
mov
jecxz
jg
push
pusha
sbb
mov
(bad)
out
ficomp
das
mov
xlat
iret
mov
stos
inc
add
repz
shr
jle
sub
ds
repz
scas
sti
add
mov
pop
data16
push
repnz
xchg
sahf
inc
fcmovnb
jle
jbe
xor
out
outs
fisttp
call
aas
(bad)
outs
jmp
or
sub
pop
xchg
adc
and
xchg
push
jl
js
in
adc
and
enter
cwde
pop
inc
ins
fst
sahf
retf
fsubr
ds
ins
fnstsw
mov
int3
fbld
jp
xchg
ret
lods
xlat
and
test
mov
jne
sbb
mov
in
adc
push
jmp
ins
aad
or
mov
mov
ins
mov
jge
arpl
xchg
int3
enter
retf
pop
mov
dec
dec
mov
shl
xchg
sar
inc
jbe
dec
pop
xchg
mov
xchg
outs
enter
jmp
fisub
or
sub
sbb
jg
pop
push
push
mov
adc
in
in
adc
push
test
aas
movzx
scas
(bad)
aas
jmp
pop
std
mov
mov
data16
or
inc
inc
adc
inc
inc
loopne
sahf
xchg
repz
enter
pop
jo
or
add
lods
in
out
out
repz
pop
push
in
cmp
push
repnz
cmp
inc
jo
into
inc
popf
and
fiadd
jnp
and
jecxz
sub
in
test
mov
add
xchg
xor
rcr
int3
pop
jns
mov
dec
lods
mov
or
pop
in
and
mov
mov
inc
test
mov
mov
mov
pusha
xchg
pop
sbb
int
push
call
popa
loope
fadd
loopne
cmp
push
ror
lock
jno
push
sbb
pushf
inc
xchg
pop
adc
arpl
pop
and
mov
add
(bad)
cmp
pop
push
fdivr
pop
cmp
cdq
sbb
iret
int
jae
or
sub
mov
add
cmp
inc
loopne
dec
add
ins
push
sub
pop
cli
dec
add
add
xchg
mov
sahf
test
push
mov
sbb
dec
ds
outs
cmp
add
cwde
sbb
sbb
add
mov
or
fld
push
sbb
inc
dec
(bad)
cmp
lea
cmps
sahf
mov
add
add
push
inc
and
shl
cmovb
loope
pusha
shl
or
movs
sbb
pusha
cmp
popf
lea
pop
pop
xchg
push
or
or
stos
push
out
ins
sub
mov
mov
sbb
(bad)
hlt
jae
add
in
or
or
mov
nop
mov
pop
dec
inc
(bad)
dec
push
(bad)
sub
inc
leave
mov
shl
xchg
aaa
das
int
dec
rcl
das
mov
mov
sbb
fadd
dec
cdq
xor
lea
mov
lea
jmp
pop
dec
mov
and
jno
in
mov
pop
jnp
loope
add
retf
add
data16
int3
jnp
arpl
int3
or
aas
je
jns
call
jb
fcomip
outs
add
sbb
in
call
stos
es
mov
in
les
cmp
(bad)
lahf
ret
sti
cmp
sar
adc
cmps
(bad)
(bad)
jbe
xchg
fidivr
push
(bad)
(bad)
fidiv
nop
adc
xor
std
cmp
test
add
in
neg
jne
dec
push
jp
icebp
sub
mov
mov
daa
mov
mov
sub
or
ins
pop
sti
cmp
test
xchg
mov
call
mov
out
mov
sbb
add
outs
xchg
hlt
mov
push
add
inc
jg
imul
mov
mov
pop
aad
imul
inc
push
dec
iret
xchg
test
sbb
sti
xchg
aas
cmp
xchg
ins
fbld
jmp
out
mov
pusha
(bad)
retf
dec
sbb
sar
add
(bad)
mov
sbb
sahf
jmp
shl
cmp
aad
jg
ins
(bad)
fist
fld
dec
and
hlt
push
popa
adc
sbb
fisub
mov
enter
jnp
jae
push
dec
fadd
and
or
jne
(bad)
jbe
repnz
pusha
call
sub
fisttp
ins
pusha
cmp
icebp
push
xor
out
mov
cmp
int
pop
stos
arpl
cdq
pop
or
dec
shl
pop
push
add
(bad)
mov
xchg
aam
sbb
and
cmc
imul
and
or
push
mov
push
jno
outs
cmp
sbb
outs
xor
sbb
xchg
add
dec
add
jae
or
test
ss
in
jmp
mov
push
dec
jle
inc
into
adc
mov
sbb
aaa
call
sub
fcom
sbb
gs
xchg
push
and
mov
sbb
cmps
xchg
out
push
je
pop
mov
test
repz
and
out
retf
sbb
push
jbe
inc
jmp
addr16
mov
xlat
jns
test
dec
cmc
sbb
cli
test
push
sub
add
pushf
call
mov
jg
in
xor
lea
sub
push
inc
in
dec
dec
or
jl
xor
inc
adc
call
loope
xor
imul
push
js
jge
mov
mov
(bad)
or
inc
stc
adc
aad
jl
xchg
and
push
pop
nop
xchg
das
lods
movs
lahf
cs
add
addr16
int
jge
popa
fst
push
pop
mov
or
sub
push
ret
cmp
mov
dec
movs
or
clc
inc
inc
repz
mov
nop
push
movs
sbb
mov
or
and
mul
inc
ret
bound
mov
inc
test
xor
sbb
pop
test
inc
push
fnstsw
aad
adc
icebp
push
stos
sub
mov
pop
push
out
sbb
and
push
jnp
pop
and
and
data16
ds
shl
sub
xchg
inc
leave
xor
push
shl
dec
sbb
xchg
xor
xor
jns
lods
int
sub
push
mov
cmp
iret
mov
jno
pop
cs
cmp
adc
lea
xlat
repnz
in
dec
mov
inc
xchg
cdq
imul
pop
fmul
cmc
and
mov
inc
add
iret
or
cli
lds
pop
aas
add
les
mov
leave
js
in
adc
ins
es
mov
fwait
mov
fidivr
pop
inc
mov
mov
shr
mov
xlat
aaa
push
jns
mov
nop
call
fs
push
(bad)
mov
retf
aaa
into
pop
imul
jmp
outs
add
pop
js
sbb
(bad)
jmp
inc
js
xchg
ins
jge
aam
dec
test
in
sti
retf
loop
xor
mov
xlat
jmp
jae
loop
ret
mov
dec
clc
loope
dec
sub
sub
stos
fisttp
jge
imul
push
cmp
mov
jle
aaa
rcl
pop
icebp
cmps
inc
pop
les
aam
mov
jbe
and
sub
movs
std
fiadd
push
(bad)
push
xchg
or
add
loop
or
jo
fldenv
mov
xor
mov
add
icebp
sub
dec
push
inc
popf
jne
pop
ficomp
loop
fidivr
cmp
movs
das
mov
data16
mov
push
(bad)
sbb
push
adc
mov
fsubr
and
std
or
lahf
call
jmp
mov
ret
mov
(bad)
(bad)
fs
lock
pop
outs
sbb
adc
mov
movs
xchg
inc
jns
push
out
sub
fidiv
or
test
pop
jl
repnz
xor
mul
je
rcl
adc
stos
mov
lea
cmc
sub
outs
jns
fbld
loope
push
addr16
dec
xchg
cli
jmp
pop
aaa
mov
dec
aaa
adc
sbb
mov
mov
pop
out
mov
clc
fmul
std
enter
mov
add
imul
mov
pushf
xchg
shr
sub
test
sbb
scas
push
cmp
dec
ret
std
(bad)
xor
loop
test
add
mov
int3
mov
xor
or
sbb
push
out
or
sub
adc
xor
pop
neg
cmps
and
lds
fwait
or
adc
pusha
js
pop
xor
test
nop
shl
ins
test
mov
popf
mov
call
push
cmc
mov
popf
jmp
mov
xchg
mov
popf
push
in
mov
cli
and
es
in
dec
retf
xor
push
dec
fucomp
jge
frstor
mov
sub
pop
push
out
jmp
jp
rcl
mov
mov
test
and
test
push
fucomp
or
sub
fwait
mov
(bad)
dec
or
mov
push
dec
gs
and
inc
fucomip
imul
xchg
in
popa
aam
jmp
mov
dec
adc
cli
cs
xchg
cmp
jmp
and
xchg
jl
fst
mov
hlt
xor
fnstsw
inc
jmp
enter
jg
and
sbb
aaa
ins
jmp
cmp
js
mov
addr16
sar
xor
jl
bound
adc
pop
mov
inc
lock
mov
push
dec
and
pusha
movs
ret
scas
mov
gs
add
imul
pusha
mov
in
or
enter
jb
adc
cmp
add
stos
aad
push
adc
inc
bound
stc
mov
sbb
test
(bad)
(bad)
xor
stos
shl
lock
and
jge
sbb
shl
xchg
sbb
mov
push
int3
jg
rcr
mov
leave
fild
ss
push
clc
aam
stc
sub
pop
or
xor
pop
jno
popa
push
mov
into
inc
ins
jns
sub
fidivr
push
data16
idiv
or
mov
xchg
test
adc
cmps
leave
loop
mul
lock
outs
test
xchg
adc
xor
sub
call
retf
xchg
cld
ins
cwde
test
adc
lahf
cmp
jbe
sbb
xor
sbb
and
inc
or
scas
push
sub
mov
add
push
std
mov
sub
jl
out
loope
arpl
movs
call
pop
jle
fwait
sub
sub
fst
mov
jmp
rol
and
cmps
rcl
(bad)
iret
ret
push
or
shr
mov
enter
fcmovnb
or
dec
js
or
add
loopne
mov
call
retf
adc
sahf
add
imul
add
inc
cwde
add
fcmove
sbb
out
xlat
fld
mov
cmpxchg
ins
clc
mov
and
outs
icebp
imul
push
in
adc
(bad)
stos
(bad)
retf
add
daa
dec
out
sub
dec
fiadd
shr
or
add
dec
popf
xlat
jbe
sbb
(bad)
push
push
imul
js
stos
mov
stc
sbb
jge
xor
cmp
or
pop
test
das
add
fisubr
mov
mov
ja
test
xor
sub
in
pop
push
scas
xchg
mov
push
fsub
in
pusha
jae
repz
dec
pop
mov
test
sbb
or
xor
jbe
xchg
lods
sbb
loopne
mov
fnsave
jbe
out
leave
xor
lock
xlat
paddusw
ja
pop
mov
movs
pop
ffree
cmc
adc
pop
xor
clc
nop
test
pop
mov
(bad)
gs
scas
scas
and
pop
repnz
push
fild
mov
nop
icebp
shr
jbe
mov
add
shl
loope
das
cmps
inc
jmp
daa
outs
ja
sahf
xchg
mov
dec
ins
jecxz
aam
xchg
stc
lahf
or
mov
jbe
out
xchg
jnp
mov
popf
(bad)
sbb
(bad)
and
outs
xor
pusha
popa
cmp
retf
xchg
mov
add
xchg
daa
fisub
int3
ins
add
adc
xor
dec
loope
xor
jle
aam
cs
xlat
into
cmp
dec
fnsave
push
outs
js
call
dec
stos
aaa
mov
sub
(bad)
push
xchg
inc
xchg
jmp
test
enter
imul
and
loopne
clc
inc
mov
fs
fimul
mov
pop
mov
cmps
xor
faddp
(bad)
das
pop
fidiv
shl
mov
retf
fstp
jbe
push
call
jnp
cmps
ja
dec
xchg
mov
enter
xchg
sub
shl
js
inc
jge
sbb
test
pop
mov
dec
outs
cli
push
jns
idiv
and
loop
dec
retf
xor
and
imul
push
out
dec
push
jb
fmulp
inc
sahf
xor
mov
mov
repz
stos
cmc
xchg
xchg
mov
mov
mov
or
call
clc
(bad)
dec
fist
sbb
stc
xor
jb
fwait
mov
jbe
ficomp
hlt
test
sbb
fisub
mov
(bad)
(bad)
imul
inc
je
jbe
mov
fsub
hlt
ficom
mov
clc
call
dec
test
(bad)
cmp
mov
add
pop
mov
(bad)
jne
xchg
test
pop
cmp
add
jno
pop
adc
cmp
sahf
iret
dec
fs
mov
lock
mov
in
dec
popa
retf
jno
xchg
outs
xor
pop
aad
ja
fcmove
js
lods
adc
and
jbe
out
aad
(bad)
les
sbb
dec
adc
into
lods
or
fisttp
xchg
pop
dec
dec
outs
dec
ret
test
std
mov
cmp
adc
cmp
cmp
clc
cmc
pop
repnz
xchg
fimul
popa
mov
cli
call
mov
inc
rcl
clc
push
(bad)
cld
lea
ficomp
ret
adc
stos
sub
sbb
xchg
push
adc
test
ficom
add
dec
in
setno
push
fwait
inc
inc
sub
inc
mov
arpl
and
push
in
bound
sar
push
or
loop
outs
sbb
(bad)
mul
neg
inc
ja
xchg
pop
scas
xor
(bad)
sbb
xchg
test
jg
mov
jge
mov
je
and
into
pop
mov
or
jns
in
mov
(bad)
xchg
push
jmp
js
(bad)
in
sbb
popf
sub
or
dec
xchg
movs
mov
call
push
mov
in
call
sub
mov
out
inc
mov
arpl
lahf
adc
inc
mov
inc
es
sbb
mov
pop
or
adc
std
mov
jl
xchg
ja
mov
pop
sbb
arpl
adc
pop
addr16
out
repz
cmp
(bad)
pop
or
into
cs
pop
xchg
stos
(bad)
jmp
mov
mov
pusha
iret
shl
push
iret
lahf
sbb
cwde
cmp
push
mul
popa
loope
test
add
test
inc
bound
sbb
std
adc
(bad)
(bad)
xchg
(bad)
not
cmp
mov
jmp
jbe
mov
push
adc
std
arpl
ja
pushfw
xchg
push
or
frstor
xor
sub
fsub
sbb
mov
sbb
and
dec
fwait
test
mov
retf
movs
rol
sub
ja
in
dec
in
bound
dec
mov
icebp
addr16
loope
arpl
dec
inc
je
(bad)
mov
aas
cdq
or
push
cmp
sbb
clc
jg
jg
in
fxch
jle
popa
add
ret
xchg
cli
sbb
popa
(bad)
repnz
(bad)
xchg
or
mov
jecxz
sahf
(bad)
outs
into
xchg
push
cmp
sbb
cli
das
jns
cmp
xor
int3
les
add
cmc
fs
mov
ins
cmp
sub
shr
and
lahf
sub
mov
jge
xor
mov
hlt
xchg
sub
lods
or
jno
add
das
test
push
fild
std
popf
jae
add
adc
xchg
mov
xor
xor
loope
lea
xchg
das
out
lahf
inc
mov
pushf
push
test
in
inc
call
jp
adc
hlt
push
call
repz
xchg
dec
cdq
pop
scas
pop
lods
movs
js
(bad)
pop
push
jp
fld
xor
jno
dec
sub
inc
ins
je
cdq
adc
lods
xchg
or
push
outs
or
cli
lods
inc
cli
jle
add
iret
add
pop
pop
cmp
sub
hlt
jnp
mov
test
inc
pop
and
enter
(bad)
sub
movhps
repnz
sub
push
cmp
daa
mov
sahf
adc
push
mul
pushf
push
test
out
jmp
jle
movs
movs
sub
out
adc
outs
aam
retf
iret
into
and
dec
(bad)
and
fcomp
jmp
dec
inc
add
push
in
dec
and
pusha
repnz
fisub
jmp
add
xor
mov
sbb
enter
(bad)
dec
mov
and
sub
push
or
adc
pop
push
fs
pop
add
pop
xor
nop
into
sub
xchg
fistp
or
mov
imul
inc
inc
sub
pop
sbb
xchg
jge
sar
add
mov
mov
mov
frstor
jmp
push
adc
pop
dec
dec
adc
scas
imul
int
lods
lock
iret
pop
or
mov
dec
mov
add
js
mov
push
xchg
js
fdiv
in
pop
pop
xlat
(bad)
sbb
adc
shr
jmp
frstor
dec
push
(bad)
sub
pop
pop
fidivr
rcl
push
sbb
movs
pop
int
dec
or
dec
mov
scas
in
pop
in
sahf
loopne
pop
sahf
fyl2xp1
and
pop
inc
cwde
clc
sub
lods
add
inc
popf
inc
xor
xchg
ds
cmps
mov
movs
pop
in
pop
(bad)
pop
jecxz
cs
(bad)
cmc
std
cmp
(bad)
dec
fwait
dec
out
cmp
sbb
xchg
aad
and
xchg
shr
xor
mov
and
sub
jmp
inc
out
or
cmp
je
mov
(bad)
lahf
or
adc
inc
and
mov
pop
mov
cmp
inc
jmp
xor
into
js
mov
add
add
lock
stos
loope
mov
xchg
les
std
test
mov
dec
je
cmc
dec
out
push
inc
xor
call
pop
in
popa
mov
push
dec
mov
mov
dec
test
mov
xchg
rol
mov
push
dec
mov
imul
fisubr
sbb
test
cmps
pop
mov
push
cli
jb
xor
sbb
outs
inc
nop
mov
sbb
(bad)
cdq
imul
adc
bound
adc
outs
loope
mov
adc
pop
mov
faddp
or
icebp
inc
out
mov
js
(bad)
or
clc
daa
rol
adc
test
gs
outs
mov
lods
in
xchg
mov
mov
(bad)
sti
fnstcw
es
push
movs
mov
retf
jnp
in
jge
mov
jmp
mov
aad
lods
sub
lea
push
in
mov
ror
xor
xor
fwait
rol
push
mov
jmp
cld
je
mov
dec
sbb
mov
add
jne
mov
lods
or
push
rcl
or
pop
je
push
pop
outs
sti
inc
sub
nop
popa
jl
test
dec
scas
inc
sbb
inc
add
test
shl
stc
jp
ja
clc
jb
scas
(bad)
lea
push
and
adc
fst
addr16
dec
rol
inc
cmp
movs
nop
and
fisttp
xlat
pop
and
jns
push
and
jne
sub
leave
mov
pop
inc
sub
std
mov
das
and
and
xor
mov
std
mov
jno
pop
fs
mov
sbb
jbe
hlt
inc
ficomp
jecxz
pop
add
push
cmc
adc
ror
push
and
inc
rcr
jl
pop
into
inc
std
jns
adc
mov
int3
pushf
aad
dec
vpsadbw
outs
cmp
jp
mov
test
daa
mov
pop
rcr
dec
sub
mov
jae
lahf
or
mov
jp
movs
cmps
adc
push
mov
cdq
mov
dec
xchg
dec
and
inc
adc
popa
hlt
pusha
ret
clc
mov
out
(bad)
into
pop
adc
or
and
push
mov
fimul
adc
adc
push
mov
push
sahf
cmp
sub
sahf
das
addr16
repz
mov
sbb
xlat
cmp
jnp
xchg
push
mov
mov
dec
cmp
or
out
dec
ja
str
imul
stos
pop
xchg
mov
mov
ins
add
xor
cmps
or
into
and
sub
xchg
inc
mov
mov
test
push
or
jne
hlt
fwait
mov
retf
ret
xor
loop
mov
inc
aad
call
cdq
or
cdq
or
mov
jns
sub
scas
mov
mov
mov
dec
or
pop
pop
outs
popf
sub
pusha
iret
xor
sub
mul
(bad)
inc
popf
sbb
int
mov
arpl
add
cmp
cs
push
cmp
xor
and
or
(bad)
sub
mov
push
in
or
aad
cmp
out
(bad)
jo
pushf
imul
in
repz
cs
xchg
push
aad
and
movs
inc
rcl
xchg
pop
cmps
xchg
jge
pop
mov
mov
xchg
push
sub
fild
mov
iret
sbb
ror
xchg
add
push
jae
sbb
xchg
jmp
adc
shl
add
adc
xor
xor
sub
cwde
rol
sbb
add
sbb
jo
adc
daa
jb
mov
mov
dec
retf
mov
mov
jmp
push
mov
(bad)
jecxz
imul
cmc
pop
rcr
sub
inc
xor
out
mov
inc
adc
movs
cmc
jae
popa
push
jne
xchg
stos
arpl
mov
daa
xor
loope
mov
inc
adc
xchg
ins
sub
mov
cmp
mov
mov
sbb
lds
xchg
adc
outs
xchg
(bad)
stos
xchg
cmovno
rcl
cld
ret
ds
or
fmul
dec
mov
dec
rcl
inc
imul
jmp
call
push
fs
pusha
imul
in
mov
xor
imul
sbb
mov
dec
gs
add
xor
jo
push
push
(bad)
mov
adc
push
bound
fwait
ins
je
pop
aad
icebp
xchg
mov
cmps
and
nop
int
out
ins
dec
inc
mov
mov
inc
repnz
lods
lock
fistp
jno
call
mov
iret
outs
in
xchg
push
fst
in
xchg
add
sbb
jge
jg
mov
adc
mov
dec
sbb
cmp
inc
xor
pop
outs
sbb
jmp
dec
push
pop
imul
pop
pop
sub
xchg
call
out
leave
push
xor
cs
lods
ss
mov
movs
adc
cwde
(bad)
iret
push
dec
mov
pcmpgtb
jb
in
call
out
and
push
data16
xchg
push
mov
and
iret
sbb
mov
or
mov
sub
xchg
jae
fsub
sbb
hlt
fcom
mov
js
int3
push
aam
mov
aam
jle
mov
out
pop
gs
das
or
les
iret
mov
pushf
inc
or
sbb
mov
das
arpl
scas
mov
pop
push
mov
pushf
sbb
and
xchg
jo
das
xchg
jbe
pop
mov
adc
pushf
push
test
dec
fucomip
rol
mov
adc
mov
pop
repz
jns
hlt
icebp
push
mov
cdq
mov
mov
mov
ja
pop
mov
je
shl
xchg
jmp
pusha
dec
fcomp
movs
mov
iret
sbb
in
test
xchg
cs
jne
les
sti
add
cmp
repnz
add
ror
test
outs
jle
ret
das
push
mov
xchg
push
or
jae
sub
jns
inc
addr16
fcom
std
add
les
cld
loop
shl
(bad)
std
cmp
aam
cmps
out
bound
add
xchg
jecxz
pop
rol
adc
popa
clc
push
dec
lea
pop
pop
lock
dec
cmp
imul
inc
sbb
sbb
add
adc
call
loop
pop
rol
(bad)
loope
bswap
xor
fcmovb
mov
push
dec
pop
add
call
and
dec
and
mov
(bad)
retf
movs
and
lahf
cmc
cmc
scas
mov
mov
pop
rcr
scas
push
push
popa
fbld
sbb
int3
inc
add
pop
and
retf
out
and
mov
pop
mov
mov
mov
fwait
jb
xchg
pop
test
retf
test
lahf
sbb
or
cmp
sti
int3
adc
pop
add
icebp
pop
retf
js
retf
mov
fild
xor
imul
sub
add
xlat
repz
add
sub
xchg
fdiv
dec
sub
(bad)
xor
in
addr16
es
lods
pop
lahf
or
(bad)
and
adc
mov
mov
xchg
jmp
lea
aas
fild
adc
mov
pop
push
or
mov
mov
mov
or
sub
arpl
mov
jo
test
outs
inc
lods
stos
mov
out
(bad)
imul
mul
fwait
mov
xchg
add
fiadd
xchg
mov
test
scas
sbb
(bad)
jo
sbb
arpl
js
jae
gs
xchg
inc
mov
cdq
jmp
stos
ret
mov
push
and
add
pop
xor
push
out
xchg
inc
xor
fimul
sbb
dec
xchg
les
test
fstp
and
add
cmp
stos
stc
daa
mov
and
pop
inc
test
push
add
and
retf
and
in
pop
and
push
dec
and
fimul
adc
iret
cwde
mul
and
dec
pop
dec
mov
pop
outs
xor
imul
pop
sub
mov
out
jmp
cwde
mov
xchg
in
mov
mov
pop
xor
clc
mov
dec
je
add
cwde
push
sti
adc
rcl
shl
mov
sub
mov
rcl
adc
mov
push
scas
pop
icebp
es
and
movs
mov
dec
inc
mov
loopne
xchg
push
retf
repz
xor
mov
adc
mov
loop
loopne
retf
sbb
add
push
dec
retf
cmp
fwait
mov
fist
jnp
repnz
cmps
out
icebp
ret
dec
add
xchg
adc
rol
sub
std
mov
inc
(bad)
aad
scas
xchg
jmp
push
addr16
gs
neg
lods
push
push
and
fwait
and
sti
dec
and
jmp
iret
dec
cmp
cs
xchg
or
cmps
dec
sub
daa
data16
mov
dec
movlps
iret
retf
sbb
scas
mov
pop
xchg
in
mov
jmp
int3
call
mov
cmc
sti
dec
cmp
jp
adc
push
inc
adc
add
push
adc
stos
dec
dec
jge
mov
ja
jo
shr
mov
scas
mov
push
mov
mov
enter
jb
idiv
test
or
sub
add
dec
and
sbb
fild
mov
sbb
daa
imul
std
sbb
in
xlat
sub
cwde
dec
neg
call
or
pop
adc
jecxz
loop
sbb
sahf
inc
fidiv
pushf
test
ror
es
faddp
sti
ins
adc
dec
add
mov
arpl
and
stc
lea
add
xchg
addr16
cmp
test
jmp
test
xchg
pusha
xchg
xor
xor
sbb
push
je
or
and
adc
jno
pushf
(bad)
icebp
mov
jbe
xor
add
mov
pop
push
int3
mov
adc
jbe
in
inc
lsl
xchg
xchg
fmul
or
push
mov
(bad)
idiv
inc
cwde
aas
push
aaa
inc
lea
retf
cmp
cmp
xor
sbb
push
pop
rcr
sub
in
scas
int3
popf
arpl
imul
iret
(bad)
sbb
loopne
sbb
jmp
inc
add
pop
mov
jne
retf
retf
dec
sub
push
pusha
dec
sti
push
add
sub
in
dec
pusha
xor
mov
enter
sub
das
cmp
popf
mov
and
movs
into
inc
ss
ror
nop
adc
mov
push
push
sub
jne
jl
pop
das
jge
xor
xlat
jbe
mov
or
stos
pop
int
adc
xor
push
inc
scas
cmp
icebp
mov
sar
pop
pop
repz
push
lock
cmp
push
xlat
or
push
xchg
sub
lea
jecxz
ror
call
or
push
lds
aaa
lods
push
dec
push
pop
out
inc
cmp
mov
xor
nop
jae
js
ficom
jo
pop
mov
xlat
mov
pusha
iret
inc
xchg
or
fcom
outs
jecxz
ret
nop
(bad)
stc
jo
push
inc
sar
adc
or
mov
popf
imul
(bad)
neg
jle
jg
test
and
sbb
(bad)
mov
in
and
fimul
add
xchg
loopne
das
and
xor
rcr
enter
mov
mov
or
scas
mov
or
cmp
in
or
sbb
push
cmp
cmp
retf
adc
scas
xchg
rol
pop
and
(bad)
cdq
pop
ror
loope
call
xchg
or
add
jmp
jae
cli
das
add
stos
inc
dec
add
add
jp
mov
mov
rcr
js
enter
jg
sti
push
mov
pop
adc
int
xchg
sub
mov
out
cmp
lods
repz
loope
jmp
mov
mov
retf
sti
dec
sti
repz
in
mov
cs
int
push
xchg
jno
js
mov
push
outs
adc
aas
(bad)
cmp
lahf
jecxz
aaa
jp
pop
daa
call
scas
je
es
adc
cmova
adc
ret
xchg
ret
push
stos
scas
(bad)
int
jns
jns
xchg
xchg
push
dec
popa
fwait
int
add
sub
dec
sub
fwait
pop
mov
jbe
mov
psubusw
lods
int3
mov
in
test
fidiv
sbb
es
sahf
and
dec
mov
inc
pop
mov
not
mov
clc
call
xor
(bad)
shr
push
ret
retf
(bad)
and
movs
(bad)
sub
xlat
ds
test
cmp
and
popf
mov
pop
cmp
imul
mov
inc
loop
sbb
xchg
outs
cmp
scas
into
xor
in
retf
cmp
in
ret
pop
imul
jae
cs
or
shl
(bad)
repz
jnp
dec
and
pusha
sti
enter
fild
aad
push
mov
jmp
mov
push
dec
imul
shl
daa
mov
mov
mov
pop
imul
fnstenv
stc
movs
sar
mov
or
aam
out
sbb
xor
pop
in
push
xchg
js
fwait
loope
out
mov
js
xor
aaa
hlt
loopne
and
in
lods
pop
lea
rol
imul
sahf
push
jl
jp
xchg
cwde
add
jmp
call
test
pop
lahf
jp
and
push
fbstp
jmp
add
ins
sar
xchg
cmc
lods
cmp
out
test
aad
jge
leave
mul
int
cmp
lock
mov
push
sub
xchg
cmp
cdq
sbb
je
adc
and
neg
push
rcl
add
mov
hlt
(bad)
jecxz
fcom
ret
aaa
xor
aad
mov
pop
mov
and
das
xor
into
inc
adc
gs
in
aad
sti
mov
cmps
popa
xchg
mov
outs
mov
ins
imul
test
mov
jns
sub
add
xor
xchg
jmp
lods
or
sbb
sub
xchg
mov
in
adc
xor
fmul
mov
cmc
push
jae
mov
mov
jo
popa
add
sbb
mov
jns
shl
call
adc
xlat
pop
int
sar
shl
cmp
shl
nop
xlat
xchg
out
ror
jbe
jge
sahf
inc
sti
ret
mov
jbe
inc
mov
pop
push
scas
aam
xor
push
loop
dec
outs
adc
jae
mov
pop
add
lods
ins
push
jmp
pushf
std
int
jmp
push
dec
pushf
int3
idiv
xor
(bad)
iret
movs
aas
add
add
pop
and
mov
mov
es
jne
push
mov
lods
pop
movs
pop
xchg
pusha
mov
retf
cs
(bad)
leave
mov
mov
pop
mov
pop
fist
jbe
loope
mov
fst
and
jbe
or
loopne
jl
outs
fadd
mov
out
(bad)
shl
inc
stos
fld
addr16
jl
inc
int3
dec
and
aam
popa
nop
jmp
scas
add
xor
stc
jno
mov
retf
rol
rcl
inc
out
adc
out
xor
lahf
mov
sub
cmc
rcr
lods
mov
xchg
pop
jns
fidiv
and
push
imul
sti
ss
jnp
out
sbb
cmp
xchg
and
jae
test
test
xor
or
aam
pop
xor
aad
(bad)
ss
bound
pop
fisubr
nop
mov
inc
clc
cmp
sahf
popa
mov
pop
inc
ins
dec
jno
loopne
jge
mov
xor
jae
imul
pop
jne
push
mov
mov
pop
sub
pop
int
ss
cmp
jns
mov
mov
mov
cmps
js
add
rol
cli
lea
pushf
pop
sbb
dec
test
cdq
cmps
mov
dec
sbb
pusha
jmp
sub
sbb
ins
cmp
sub
hlt
dec
jb
jp
daa
in
call
nop
pop
ror
push
loope
dec
mov
mov
lock
jp
jno
ds
(bad)
ins
xchg
mov
lock
fnstcw
fmulp
loopne
(bad)
fimul
lods
mov
xchg
push
add
ret
rep
sub
adc
sub
clc
or
rcr
xchg
sti
arpl
fsubr
call
mov
mov
or
ja
std
xor
add
sub
push
jno
inc
scas
retf
pop
loope
jmp
call
in
sub
(bad)
repnz
jle
scas
enter
iret
adc
shl
jmp
imul
fistp
add
dec
or
les
(bad)
rcl
add
or
xor
test
jo
ret
cli
mov
dec
fnsave
or
stc
sahf
addr16
cmp
aam
lods
pushf
pop
daa
out
xchg
jns
cmp
cmp
les
idiv
shl
pusha
jo
mov
ds
icebp
clc
xchg
rcr
xor
mov
scas
aad
adc
inc
dec
popa
sbb
jmp
mov
mov
sub
addr16
push
out
int3
pop
loopne
int3
aam
xor
adc
sbb
jmp
lahf
daa
xchg
pop
add
push
xchg
add
add
test
out
cdq
outs
lea
xor
sbb
mov
ds
xor
call
mov
imul
shl
shr
inc
xlat
xchg
arpl
pushf
stos
jns
bound
loopne
call
sti
cs
dec
mov
call
cli
mov
icebp
int3
adc
std
sub
fldenv
mov
adc
in
test
scas
cmps
sbb
popa
fs
(bad)
shl
inc
inc
jnp
push
in
loope
jmp
mov
out
xor
or
sub
test
pop
test
mov
dec
hlt
xchg
pop
repnz
mov
sbb
dec
xor
shr
cmp
push
mov
adc
sbb
and
mov
gs
out
mov
sub
rol
rcr
dec
aam
mov
sbb
mov
pop
inc
dec
jnp
mov
xchg
(bad)
and
stos
lods
lock
ins
jge
dec
pop
into
jp
add
shl
movs
mov
mov
pop
iret
push
rcl
addr16
test
pop
pop
adc
aas
ja
sub
loopne
dec
int
mov
mov
push
imul
mov
ins
retf
cmp
push
dec
fcomp
enter
adc
(bad)
iret
xchg
rcl
jne
pop
add
cmp
movs
push
inc
xchg
ss
div
int
cmps
sub
xor
test
push
outs
jno
js
icebp
into
aaa
pop
xor
lds
js
rcr
(bad)
fild
mov
hlt
lods
adc
push
mov
and
sti
mov
push
stos
pushf
aas
push
cmp
out
pop
and
mov
inc
out
into
loopne
lahf
pop
cmps
lock
call
push
(bad)
xchg
dec
fs
dec
js
int3
das
cmc
imul
in
xor
int
loopne
in
rcl
cmp
adc
sahf
push
outs
dec
(bad)
es
cmp
dec
in
cmps
or
mov
sub
test
xchg
cmp
retf
fdivrp
pop
iret
sub
dec
sub
jnp
inc
push
inc
push
push
cld
(bad)
pop
in
in
sbb
imul
xchg
or
jo
repz
mov
mov
ret
out
aam
sar
dec
push
adc
(bad)
ficom
mov
arpl
retf
mov
sbb
adc
hlt
ror
mov
cli
jp
dec
and
xchg
inc
push
sbb
or
push
retf
mov
pop
dec
dec
add
sub
xor
pop
lock
cmp
add
adc
lea
adc
inc
push
cmps
in
cld
cmc
push
gs
xchg
ret
es
ins
lods
popf
mov
xchg
mov
dec
pop
sub
mov
xor
cmc
dec
xchg
adc
dec
mov
sub
add
xchg
xchg
sub
ds
jmpw
jg
lock
test
adc
fldcw
sub
mov
adc
or
mov
shl
imul
mov
pop
or
and
test
(bad)
scas
jo
bound
out
in
imul
push
iret
mov
(bad)
or
sbb
div
xchg
shr
repnz
leave
dec
pop
mov
lock
dec
stos
lahf
outs
or
inc
push
test
pop
fild
jecxz
leave
jl
jae
call
push
or
outs
jns
or
aas
and
fist
test
(bad)
in
jecxz
repz
cmp
sub
not
mov
adc
and
xchg
xchg
jmp
popa
xchg
sub
mov
mov
cmp
rcl
inc
movs
ffree
fcmovu
cmp
cld
(bad)
mov
cmps
daa
loopne
fdiv
sbb
jecxz
aam
and
mov
mov
mov
push
daa
add
(bad)
js
or
and
dec
adc
add
mov
out
dec
ja
sbb
lds
jge
cld
ins
jmp
je
mov
fs
push
adc
hlt
data16
pop
ret
test
shl
jno
mov
fsub
xor
mov
pop
add
or
inc
div
pop
in
cwde
ret
mov
jle
leave
fdivr
dec
sti
xchg
inc
cmp
enter
retf
jb
adc
int3
adc
xor
sti
retf
fild
mov
sub
rcl
jecxz
mov
mov
in
(bad)
jo
sti
shl
mov
gs
cmp
rol
push
aam
cmp
ins
mov
ret
imul
ss
mov
jle
mov
test
mov
ficomp
cdq
mov
xchg
dec
dec
mov
mov
xor
dec
mov
sub
repnz
gs
and
cmp
fild
in
cmp
stos
cmp
je
xor
mov
lods
cmp
out
lea
call
(bad)
fdivr
(bad)
jno
fdivr
mov
movs
std
pusha
stos
(bad)
lock
push
test
mov
cli
jae
sub
inc
jns
cld
mov
pop
inc
lock
popa
or
sbb
stc
pop
adc
mov
in
dec
or
adc
push
jge
dec
test
cmp
mov
inc
sbb
jns
out
daa
in
pop
mov
cld
push
xchg
xchg
ret
fbstp
and
ja
stc
add
and
inc
push
js
retf
call
aas
cmps
vmovshdup
int3
push
in
arpl
inc
pop
cmp
(bad)
mov
cmps
cmp
cld
(bad)
imul
inc
out
hlt
pop
jmp
mov
ins
ds
sbb
push
xchg
outs
call
sub
jmp
xchg
push
jge
movs
xchg
ds
fsubr
dec
mov
mov
xor
(bad)
push
arpl
outs
xchg
jae
xchg
in
movs
mov
test
iret
pop
mov
outs
and
dec
test
push
loopne
ret
fbstp
pop
out
cmp
(bad)
ja
xchg
xor
xchg
sbb
or
leave
shl
int3
pop
popa
cdq
mov
and
jno
pop
in
test
fsubr
cmp
sub
inc
loopne
sbb
cmp
sbb
stc
loopne
dec
sahf
and
dec
jb
(bad)
mov
mov
sub
movs
cld
jge
push
cwde
push
or
mov
adc
inc
shl
ins
mov
js
hlt
push
fwait
or
nop
mov
push
push
cmp
cmc
or
(bad)
jmp
pop
push
add
xchg
cs
xor
cmp
aaa
mov
pop
scas
test
data16
aas
lea
arpl
or
bound
push
inc
mov
jnp
aas
lods
jae
sub
aam
pop
in
sub
or
sub
(bad)
iret
and
xchg
scas
in
add
push
les
loopne
sbb
mov
call
mov
dec
or
dec
add
jmp
push
dec
(bad)
sub
jbe
sbb
jmp
cwde
sbb
mov
rcl
sub
stc
fld
inc
clc
fsub
int
hlt
fisub
fdiv
icebp
adc
mov
sti
into
pop
xchg
cmp
sub
(bad)
iret
dec
popf
pop
clc
sbb
loopne
pop
movhps
hlt
mov
in
in
mov
gs
cmp
ins
out
sub
add
adc
ins
out
leave
xor
and
add
or
loop
(bad)
jp
inc
sub
(bad)
sbb
mov
dec
and
cs
add
cmps
cmps
mov
and
and
pop
push
dec
in
int3
mov
mov
or
dec
xchg
call
daa
add
test
xor
sub
or
movs
inc
jl
lods
sbb
sbb
fwait
push
lods
sbb
hlt
jns
dec
lock
xlat
lds
cmps
repz
inc
sbb
pop
push
out
and
and
imul
lods
or
fs
fnstcw
aaa
jmp
(bad)
dec
xchg
test
(bad)
popa
pop
aad
jp
fadd
adc
data16
(bad)
fidiv
int
div
das
hlt
je
jnp
push
mov
dec
mov
mov
ret
(bad)
cmps
xor
mov
xlat
rcr
bswap
jl
and
stos
addr16
cmps
inc
sub
xchg
push
cmp
lahf
ss
clc
or
cmps
bound
test
cmp
adc
nop
popf
inc
mov
loop
add
test
xor
jb
mov
xor
sbb
inc
fsubr
push
inc
pop
cmp
jmp
or
sub
jbe
add
scas
xchg
xchg
mov
pusha
cld
push
mov
popa
jno
jmp
ins
inc
enter
pusha
daa
pop
ss
and
lods
nop
sbb
hlt
mov
sbb
adc
pop
jnp
lock
xchg
jge
pushf
push
push
mov
movs
jmp
aas
or
or
adc
mov
jg
inc
jo
int3
and
pop
icebp
xchg
jne
ror
(bad)
cli
fcomp
cmps
sub
push
xor
mov
cmp
pop
out
(bad)
adc
int
adc
add
mov
inc
sar
ror
dec
add
mov
rcl
pop
hlt
adc
ins
call
les
mov
loopne
jl
push
mov
imul
jnp
lods
inc
(bad)
ds
hlt
cmp
mov
cmc
ss
cdq
mov
movs
(bad)
out
sub
mov
adc
aaa
(bad)
fbstp
add
bound
dec
repnz
push
push
stos
arpl
aad
sbb
cmp
rol
nop
cmp
mov
test
push
aad
enter
mov
test
leave
jnp
mov
or
hlt
(bad)
jns
ss
(bad)
scas
outs
jmp
ins
inc
xchg
popf
movs
outs
cwde
mov
pop
cmp
jge
test
push
pop
push
adc
pop
iret
jmpw
les
add
mov
or
adc
sub
jae
mov
xchg
mov
in
(bad)
not
xor
inc
add
imul
test
aad
ja
ror
jne
pop
outs
pop
in
jo
je
fsub
aad
jmp
lods
mov
sbb
inc
aaa
mov
shr
rcr
stos
movs
clc
icebp
push
dec
mov
loope
pop
and
(bad)
bnd
popf
xchg
or
mov
outs
push
or
sbb
shr
sub
data16
mov
add
mov
inc
mov
jnp
fdiv
out
iret
fld
sub
add
dec
inc
clc
sti
sub
loop
jle
or
mov
or
mov
mov
push
mov
push
push
cs
sub
fist
fwait
(bad)
rcr
out
dec
pop
xchg
mov
retf
sub
jnp
arpl
or
fild
int3
lea
mov
push
mov
push
push
cmc
inc
mov
xor
scas
sub
adc
fdiv
dec
mov
dec
push
arpl
xor
pusha
ror
shl
push
not
jge
inc
add
lea
mov
pop
ds
adc
sub
ja
or
push
sub
(bad)
inc
or
cmp
cs
retf
add
inc
rcr
in
inc
fdivr
mov
mov
lea
lods
inc
loop
push
jecxz
(bad)
mov
sbb
fadd
scas
or
dec
push
test
jo
or
cmps
hlt
clc
cli
add
or
(bad)
cmp
mov
shl
imul
call
adc
jmp
(bad)
cmp
push
add
ins
xor
rcr
push
ret
mov
retf
ret
pop
idiv
or
cmp
jne
cli
mov
ficom
sahf
xor
inc
test
push
rcr
cmp
or
rcr
cmps
dec
adc
hlt
in
lock
jecxz
popf
mov
fsubr
enter
ins
mov
leave
mov
daa
inc
aaa
xchg
pop
lea
loop
mov
sbb
retfw
(bad)
call
aam
leave
call
pop
in
add
jge
fnstenv
add
mov
ror
mov
push
or
test
js
push
jl
or
lods
inc
sbb
cmp
retf
add
sub
loope
int
jp
sar
or
das
push
pop
and
adc
mov
call
stc
pop
fwait
pop
call
and
ds
or
jecxz
push
jmp
push
mov
sub
gs
push
lea
push
loope
xchg
dec
sbb
cmp
and
and
cmp
and
(bad)
iret
jmp
pop
fisttp
jo
mov
fstp
or
xchg
cmp
ret
sbb
mov
pop
test
dec
scas
out
loopne
stos
mov
push
pop
rcl
mov
movs
push
or
test
imul
jb
push
jno
push
push
les
and
inc
adc
sbb
fs
jo
in
cdq
pop
das
jl
(bad)
mov
loop
loope
adc
mov
jg
mov
mov
pop
cli
inc
(bad)
das
xchg
aam
aad
adc
adc
mov
ficom
sbb
inc
ds
mov
outs
iret
mov
loop
imul
pusha
inc
movs
retf
jg
inc
nop
jp
or
dec
inc
push
fwait
xchg
pop
cmp
adc
enter
xchg
lock
and
cli
repnz
in
fcom
clc
shl
jp
inc
sub
popf
xchg
pusha
or
int3
mov
out
add
push
dec
mov
enter
dec
lods
mov
lea
shl
jbe
fistp
rcl
dec
fwait
aas
xchg
addr16
xchg
dec
int
push
mov
add
shr
jne
pushf
adc
pop
ds
mov
add
sub
sbb
pop
int
into
fiadd
and
xchg
push
ret
in
in
in
jmp
push
sar
pop
leave
mov
test
out
mov
es
fsub
test
adc
fld
test
mov
sbb
xchg
loopne
inc
xor
fwait
jno
popf
sub
loopne
out
mov
sahf
dec
retf
sub
arpl
enter
enter
(bad)
into
push
sub
scas
clc
inc
repnz
test
add
cdq
mov
pop
dec
sub
movs
sub
xor
inc
stc
fcom
jae
xor
cmp
jp
outs
mov
and
lea
jae
push
daa
mov
or
(bad)
scas
xor
popa
stc
mov
mov
(bad)
sbb
add
into
jle
jmp
mov
loopne
ret
cmp
out
test
mov
inc
push
jecxz
or
test
ins
shr
fcmovnu
inc
cmp
sbb
jecxz
jnp
push
outs
or
cdq
xor
or
fdiv
in
mov
xchg
test
or
fs
dec
pop
in
(bad)
cmp
add
inc
add
sub
retf
add
dec
cmc
push
mov
popf
sti
pop
dec
jle
lods
fsub
rcl
sub
icebp
dec
or
xlat
push
lds
cmp
repz
sti
sbb
pop
dec
pop
aam
xor
bound
fld
rol
cmp
out
xor
mov
push
pushf
adc
add
stos
inc
cmps
lods
push
dec
jmp
pop
in
inc
adc
xor
aam
test
dec
dec
aas
imul
or
add
jp
cmp
pop
(bad)
or
xchg
or
loop
cmp
xchg
pop
jle
cdq
gs
or
cwde
adc
bound
repnz
aas
mov
test
das
in
lods
jb
(bad)
movs
inc
out
mov
(bad)
nop
stos
mov
dec
inc
hlt
adc
imul
call
hlt
stc
mov
aas
inc
xor
dec
movs
sub
xor
pop
push
fwait
movs
imul
pop
test
mov
jmp
imul
aad
mov
lea
hlt
stc
lea
push
out
jne
shl
sti
cs
shl
lods
dec
pop
pop
sbb
inc
jmp
fidiv
test
cmps
pop
jmp
dec
mov
or
imul
cmp
dec
popf
jbe
shl
fisttp
es
sub
outs
stos
jl
inc
sub
not
inc
pop
and
fdiv
test
and
jg
cmp
outs
mov
jle
cwde
nop
ror
stos
lods
mov
xchg
xchg
inc
sti
fbld
or
xchg
imul
and
scas
mov
inc
jb
test
mov
rcr
aam
inc
and
stc
lods
test
xor
cs
rol
hlt
je
(bad)
cld
lahf
adc
or
mov
push
(bad)
das
cmps
leave
shl
mov
inc
mov
xchg
jae
or
arpl
call
imul
or
je
sbb
test
(bad)
lock
adc
test
add
jno
add
jp
mov
aaa
addr16
dec
mov
add
mov
and
rcl
xor
je
(bad)
in
shl
jmp
into
fiadd
jge
sbb
outs
loope
mov
add
xchg
sbb
(bad)
aaa
js
repz
push
adc
push
jmp
xor
stos
jge
cdq
or
pop
xchg
mov
jmp
xchg
nop
pushf
popa
add
jne
mov
sbb
fnstsw
loop
loope
jmp
ss
add
or
loop
hlt
mov
mov
xchg
add
push
mov
pop
in
sbb
add
adc
sbb
fisttp
pop
scas
adc
rcl
out
hlt
fs
and
pop
(bad)
sbb
rcr
sbb
mov
rol
push
jge
fs
repz
sbb
sbb
mov
stos
stc
jae
pusha
jmp
fmulp
mov
ror
or
xchg
mov
push
add
lds
pop
pusha
pop
aaa
mov
or
or
jo
mov
ins
ret
repnz
(bad)
sbb
add
vshufpd
mov
xor
xchg
jbe
or
mov
sub
mov
inc
fldenv
ret
mov
lods
lock
cs
pop
cdq
imul
les
out
or
xor
bound
sti
loop
test
test
xchg
lahf
lock
add
or
pop
mov
ficomp
mov
lods
mov
lods
xor
mov
jl
or
dec
and
mov
sub
xor
inc
mov
out
fist
jle
clc
xor
cs
inc
pushf
xchg
ja
cld
fst
jp
mov
ret
ss
sbb
adc
les
out
push
scas
pop
retf
cmp
or
push
add
out
popf
xor
push
sub
mov
mov
cmc
adc
sbb
bound
mov
dec
sub
inc
mov
aam
pop
mov
sub
shl
or
mov
ins
sar
adc
cdq
(bad)
rcr
sbb
int3
lods
xor
add
jbe
addr16
fsubrp
out
xchg
xchg
add
repnz
xchg
adc
movs
push
push
cmps
mov
in
js
in
fldenv
jp
jns
scas
stos
(bad)
xchg
sbb
fld
mov
leave
add
ins
pop
inc
push
imul
repnz
fs
adc
dec
cmp
shl
xchg
popa
jno
push
into
dec
fwait
and
xor
int
in
inc
fadd
outs
fisub
(bad)
std
enter
or
test
mov
mov
es
lahf
sbb
(bad)
les
mov
sahf
sub
jno
in
xchg
sub
or
ds
stos
lock
jmp
movs
cmp
repz
out
jmp
pop
adc
fild
lahf
mov
lahf
push
in
es
lods
fcomip
in
inc
mov
loop
cld
push
out
cdq
xchg
pop
cmc
iret
sbb
push
mov
xlat
test
xor
mov
pop
ins
mov
dec
or
int3
cmp
cs
sub
mov
lahf
add
xchg
push
sub
cmp
cmps
fwait
sahf
imul
(bad)
je
iret
push
pop
jb
pop
retf
mov
call
fsub
xor
loopne
inc
jne
or
add
pop
sub
jmp
or
ret
pop
pop
stos
jge
mov
sbb
sbb
or
push
xchg
pop
and
xchg
sbb
inc
push
das
cmp
aam
mov
js
sahf
and
xchg
je
xchg
push
xchg
loopne
jbe
add
cmp
mov
mov
pop
in
jne
leave
adc
jecxz
pop
sub
mov
std
icebp
mov
xor
es
cli
jg
aas
xchg
jl
jmp
xor
sar
stc
and
xchg
ds
push
sub
add
scas
sbb
push
dec
push
pop
dec
sub
and
cli
ret
fstp
leave
push
jne
into
xor
or
xor
outs
ficom
xchg
and
jbe
or
push
or
repnz
jmp
mov
jae
pop
dec
xchg
and
nop
cmp
jmp
xlat
and
and
pop
lock
mov
dec
or
pusha
add
add
xchg
mov
inc
sahf
inc
push
dec
pop
movs
add
xor
dec
test
stc
pusha
ret
hlt
xor
mov
or
and
fcomp
cli
mov
div
and
dec
jnp
xor
xchg
or
loop
stos
arpl
push
das
movs
call
lods
jne
jae
lea
shr
mov
scas
push
pushf
sub
adc
or
lock
pop
vmread
les
xor
push
mov
push
out
in
dec
push
sub
outs
popf
mov
or
or
or
push
shld
es
dec
add
shl
rol
gs
movs
mov
dec
adc
jle
cs
movs
push
mov
add
loop
nop
loopne
pop
xor
push
xchg
repz
cmp
dec
pop
frstor
dec
(bad)
mov
mov
or
pop
fsubp
lods
pop
lea
dec
aaa
mov
or
dec
test
js
outs
push
sbb
cmp
fild
hlt
jg
loope
int
call
or
mov
mov
sbb
jns
add
jl
dec
repz
dec
in
or
inc
fs
adc
icebp
inc
retf
cli
jo
(bad)
dec
dec
mov
jne
cmps
bound
cmp
cs
xor
cmp
enter
or
push
ins
or
daa
push
pushf
daa
cli
lock
dec
cmc
or
cmp
movs
shl
jne
loop
aaa
jo
lds
outs
scas
mov
jno
out
les
lock
shl
out
test
xor
xchg
enter
test
xchg
xor
das
ret
mov
cmps
dec
jo
(bad)
neg
inc
(bad)
fdiv
or
fwait
aam
push
sub
in
out
call
and
call
call
rcl
shr
and
xor
repnz
fdivr
jnp
adc
inc
fwait
push
inc
cmp
xor
scas
inc
xor
push
fidivr
outs
adc
(bad)
pop
test
movs
lock
push
mov
dec
daa
mov
lods
sti
leave
or
pop
sub
enter
mov
sbb
aas
jmp
xor
je
jg
xor
xchg
jle
stc
inc
and
sar
test
mov
sar
xchg
inc
sti
daa
arpl
push
cwde
mov
adc
xor
or
or
inc
push
pusha
clc
leave
cli
rcr
shl
sbb
icebp
mov
mov
ds
add
cmp
xchg
dec
inc
xor
mov
popa
adc
xor
out
aaa
pop
enter
fisttp
sbb
(bad)
and
fwait
mov
lods
inc
inc
jb
xor
push
dec
mov
sub
retf
adc
outs
add
cmp
icebp
pop
outs
outs
lock
sbb
retf
cdq
pop
loop
lods
sub
xchg
aad
aas
fild
xchg
jne
push
stos
sub
ins
or
lods
and
mov
jp
jmp
cmp
cmps
sub
add
push
out
retf
mov
sub
jle
jle
retf
mov
adc
mov
sbb
cwde
aam
xchg
add
test
push
test
jae
lock
push
sub
dec
mov
movs
mov
or
and
pop
xchg
pushf
in
xor
xchg
std
cmp
in
imul
rol
or
push
inc
scas
cdq
inc
shr
and
mov
push
into
or
pop
fwait
push
and
mov
ins
ret
jb
call
xchg
iret
xchg
jb
ror
xor
mov
mov
int
scas
movs
mov
nop
iret
mov
add
in
fwait
add
icebp
sub
pop
sar
inc
mov
add
cmp
cmp
sbb
pop
mov
test
add
loopne
mov
mov
repz
push
ror
jbe
test
sbb
adc
call
cmp
xor
sub
sbb
inc
mov
hlt
in
pop
in
neg
mov
loop
pop
fiadd
addr16
stos
jmp
push
sbb
das
int
and
cmps
stos
dec
sub
jmp
pop
push
ja
mov
arpl
cmp
sub
xchg
push
es
push
(bad)
pop
push
jnp
(bad)
data16
xchg
inc
nop
push
stos
leave
leave
inc
inc
cmp
dec
or
out
and
imul
push
mov
adc
add
mov
mov
repz
sbb
ja
cdq
imul
inc
and
or
cmc
stos
jbe
out
add
les
mov
dec
sbb
pop
pop
sbb
fcom
push
xor
iret
cmp
outs
into
aaa
push
inc
xchg
inc
ror
dec
dec
dec
xchg
dec
fs
xchg
sti
push
mov
cli
mov
adc
adc
aas
rol
bnd
lods
sar
pop
rol
cdq
push
dec
mov
xor
call
adc
or
daa
dec
cmps
jmp
mov
sbb
adc
and
aad
push
pop
xchg
(bad)
arpl
mov
or
loope
in
imul
dec
data16
add
mov
sub
int
movs
mov
mov
(bad)
cmp
neg
push
dec
xor
mov
xor
and
into
xor
push
(bad)
and
icebp
mov
das
add
gs
pusha
fidiv
jnp
and
mov
inc
mov
pop
and
inc
and
mov
xchg
loopne
and
adc
xor
jecxz
pop
shl
sub
(bad)
or
lds
jne
cwde
xchg
adc
adc
xlat
mov
mov
pop
mov
out
adc
shr
or
add
add
sbb
clc
sbb
(bad)
fs
inc
xor
mov
pop
xor
xor
stos
and
int3
xchg
mov
ret
inc
daa
lods
xchg
dec
sbb
out
(bad)
or
xor
movs
loope
xchg
fisub
call
sar
push
jne
cmp
pusha
sub
stc
jg
cmps
leave
xor
frstor
jle
cdq
mov
or
sti
cdq
cmp
pushf
push
ins
jno
mov
loop
int3
pop
cli
sub
ret
pop
and
leave
bound
and
out
jle
mov
push
ficomp
push
sub
xor
add
inc
jno
popf
cmps
push
into
or
(bad)
cmp
mov
clc
adc
inc
push
xchg
int
dec
test
in
cmps
imul
dec
(bad)
div
sub
sbb
int3
ds
pop
cli
repz
push
and
ret
in
jmp
mov
fdivr
out
push
fs
jno
ret
popa
cli
dec
ja
hlt
push
sub
add
je
cli
cmp
addr16
clc
jl
dec
cli
sub
pusha
fadd
outs
sbb
jp
ja
xor
aam
dec
cdq
bound
icebp
xchg
sub
lods
push
fs
jmp
ret
out
out
xor
dec
jle
push
lds
scas
into
pop
ja
pop
adc
shl
outs
mov
mov
xchg
out
in
push
outs
hlt
inc
mov
and
sub
gs
ret
xchg
jne
mov
enter
mov
xor
sub
movs
out
js
inc
or
pop
push
scas
push
outs
xchg
inc
pop
aam
and
lods
stos
fdiv
pop
mul
inc
shl
mov
xchg
pop
mov
aaa
xor
neg
pop
rol
dec
imul
aad
mov
(bad)
(bad)
dec
mov
push
and
hlt
sbb
pop
fs
aaa
fisubr
retf
dec
mov
mov
fbld
stos
push
pushf
mul
xor
or
fisttp
mov
jp
cmp
fyl2x
dec
dec
les
stos
sub
sub
test
add
jb
sbb
xchg
retf
xchg
xor
jo
adc
mov
test
sbb
mov
mov
mov
ja
sub
xlat
sbb
js
mov
mov
mov
das
add
push
cli
pop
xchg
out
fistp
out
inc
in
icebp
leave
sub
pop
shr
mov
mov
sub
call
shr
jae
fwait
ror
dec
scas
cmc
push
jne
fild
mov
push
jno
dec
push
sahf
div
sub
mov
addr16
in
ret
mov
cmp
aad
add
dec
push
mov
add
cdq
cmp
mov
or
mov
add
xchg
push
cmp
inc
mov
jg
stos
dec
out
xor
mov
sbb
dec
leave
adc
outs
and
xchg
jmp
es
xor
loopne
push
cmp
fwait
pop
inc
shl
test
scas
lds
cdq
shl
jnp
in
jo
xchg
fstp
pop
xlat
mov
outs
test
jl
sub
xchg
lods
pop
sbb
pop
adc
push
cmp
push
retf
xor
fmul
es
outs
xchg
loop
ss
rcr
(bad)
push
push
jbe
arpl
dec
test
iret
xchg
pop
inc
out
imul
outs
sbb
cmp
imul
sub
stos
cmp
push
mov
or
(bad)
pushf
pop
fwait
aaa
mov
jbe
mov
mov
std
jl
add
pop
sub
push
push
inc
push
inc
xor
out
add
shl
mov
xchg
je
xor
mov
(bad)
dec
or
sbb
sub
mov
inc
push
mov
sub
xchg
mov
xchg
(bad)
jp
mov
sub
clc
jmp
pusha
mov
movs
add
pop
sbb
xor
scas
out
and
push
repz
and
sub
or
adc
xlat
push
xchg
mov
dec
adc
cdq
inc
rcr
xchg
add
inc
test
sar
push
mov
xor
cdq
mov
mov
add
dec
push
mov
jl
(bad)
lds
shl
in
enter
dec
out
or
xor
ror
adc
mov
repz
les
ds
iret
dec
lock
je
leave
retf
xchg
and
aad
imul
aad
xchg
not
sbb
sbb
int
xchg
adc
stos
std
repz
mov
imul
retf
leave
mov
mov
into
in
pop
stc
sbb
nop
sahf
adc
rcl
mov
(bad)
fist
jp
dec
in
mov
jae
ins
mov
test
jle
mov
stc
inc
push
aas
push
or
jecxz
push
push
fmul
mov
and
cwde
cwde
jne
rcr
mov
stc
dec
mov
or
cmp
push
sub
int
out
and
not
add
je
or
ins
fwait
xor
sbb
in
sar
or
sbb
or
cmps
xor
aad
mov
pop
dec
or
fistp
adc
cmp
jecxz
xchg
xchg
push
mov
push
cmp
nop
add
jl
jmp
imul
ror
fild
jp
and
xchg
outs
outs
sbb
adc
lods
fisub
inc
and
bound
xchg
push
mov
push
test
sub
popf
out
adc
adc
xchg
pusha
push
xchg
push
lea
aam
sbb
push
jmp
mov
out
lods
xchg
and
push
out
push
pinsrw
xor
aas
test
cli
test
imul
imul
scas
adc
movs
ja
cmps
mov
je
mov
aam
xchg
mov
adc
icebp
add
mov
mov
mov
out
mov
add
dec
or
push
hlt
pushf
fisttp
loop
xor
popa
push
loop
pusha
bswap
dec
pop
pop
and
dec
outs
inc
sbb
push
call
inc
jp
fstp
clc
push
ss
js
and
inc
dec
cmp
push
aam
mov
popa
and
adc
or
data16
pop
mov
dec
fs
mov
adc
sub
mov
nop
adc
js
xchg
lods
inc
push
gs
cmps
pop
inc
adc
or
xchg
or
push
(bad)
lods
sbb
lods
and
movs
push
and
ins
push
retf
fcmovb
pop
pop
aas
mov
iret
test
push
arpl
mov
sub
adc
(bad)
ret
push
xlat
fld
pop
push
mov
pushf
add
xchg
mov
push
bound
add
inc
ror
cmc
icebp
and
mov
repnz
imul
mov
not
mov
pop
cmps
and
add
scas
inc
lods
xor
xchg
ffree
int
xchg
out
cmc
cmp
inc
xor
cmp
sahf
sahf
and
jl
(bad)
or
cld
or
and
fwait
cwde
xchg
aaa
adc
inc
pop
push
push
(bad)
out
(bad)
call
adc
lea
pusha
loope
add
adc
or
mov
sub
and
(bad)
stos
ret
xor
mov
xchg
int
xchg
lods
das
in
or
inc
and
add
xor
(bad)
mov
jp
fild
sub
cdq
add
jecxz
add
jmp
ss
fist
xchg
xchg
in
cdq
out
xor
pop
pop
adc
mov
cmp
addr16
xchg
mov
inc
push
cmp
or
retf
inc
mov
xchg
movs
dec
loop
test
lahf
add
pop
xchg
stos
in
fdiv
sub
ins
add
sub
xor
test
add
cwde
adc
sahf
pop
or
mov
cmps
scas
outs
sar
push
mov
push
xchg
int3
xor
js
add
jno
dec
(bad)
sti
mov
or
add
movs
call
jle
or
jg
out
mov
jp
inc
sahf
or
push
aas
push
inc
gs
push
(bad)
ficom
daa
(bad)
jle
dec
inc
fcom
mov
dec
jmp
mov
xchg
test
add
xor
inc
ins
mov
pop
es
fst
arpl
jmp
shl
je
(bad)
es
pop
test
fs
dec
mov
or
sbb
cmp
enter
jo
leave
shr
clc
test
cmp
scas
enter
xor
into
dec
inc
movs
or
mov
out
ins
inc
(bad)
adc
loop
sub
je
dec
dec
pop
cli
cdq
in
jae
cmp
enter
in
in
stos
call
xchg
test
and
add
outs
imul
push
cmp
adc
aam
mov
jns
inc
push
sbb
adc
adc
loope
push
cmps
xchg
fcmovu
xor
or
mov
mov
jno
out
out
adc
adc
inc
idiv
add
icebp
scas
nop
mov
or
psllq
pop
inc
add
clc
addr16
and
icebp
xchg
jo
or
push
or
lods
pop
ins
inc
jb
inc
test
scas
es
(bad)
sub
(bad)
shl
inc
lea
aaa
cs
or
mov
sub
imul
mov
es
lea
add
int
in
movs
ins
sbb
es
jge
outs
cmp
fisub
ret
add
aaa
or
adc
stc
lea
add
mov
or
(bad)
cmps
inc
or
(bad)
in
mov
cmp
xchg
inc
retf
fidiv
mov
les
xor
mov
fstp
imul
out
adc
sti
mov
pop
js
add
mov
sub
pop
inc
pop
cs
xchg
jns
ficom
sub
psrlw
fs
scas
add
clc
jmp
mov
addr16
test
sub
retf
mov
lea
loopne
or
pop
movs
cwde
add
lods
in
xor
(bad)
in
push
mov
dec
push
enter
xchg
sub
(bad)
cmps
repz
push
or
xor
std
mov
dec
xor
mov
(bad)
and
mov
in
scas
ret
adc
pusha
mov
inc
sbb
bound
add
ret
push
add
es
in
xchg
inc
retf
add
scas
imul
or
jge
ret
pop
xor
push
outs
push
movs
mov
loopne
rcl
push
mov
int3
cli
stc
cmp
mov
in
and
arpl
inc
sbb
lea
inc
dec
pop
or
stos
into
mov
int
xlat
sub
xor
or
mov
or
js
movs
fild
cmp
mov
in
nop
jb
sub
lds
xchg
cmp
xchg
xor
clc
pop
fdivr
cmp
lds
stos
sbb
add
mov
jg
dec
sub
push
push
imul
enter
xor
xchg
lea
adc
mov
fmul
pop
cmps
mov
mov
sub
or
test
dec
rcl
ja
push
ror
int
mov
add
mov
push
add
pop
(bad)
and
xor
int
rsm
push
mov
(bad)
adc
inc
adc
mov
(bad)
mov
int3
mov
fwait
pop
mov
sub
xchg
jl
mov
jb
mov
popf
push
mov
in
jecxz
mov
in
bound
test
aaa
pop
mov
push
and
mov
xor
shl
repz
fsub
dec
push
test
mov
scas
cmp
mov
cwde
mov
inc
into
mov
sar
out
fisttp
adc
push
mov
je
cmp
or
inc
cli
mov
jne
in
pop
je
push
out
jbe
dec
inc
jno
shl
icebp
lds
mov
adc
gs
mov
scas
cmps
das
or
neg
js
xchg
push
jecxz
cmp
jle
xchg
test
jp
ret
in
mov
test
fdiv
jg
ret
aam
jmp
(bad)
sar
in
and
adc
xor
and
and
loopne
out
mov
inc
push
sub
mov
adc
inc
mov
ins
cmp
push
and
push
(bad)
jmp
jns
fild
dec
mov
sub
test
scas
cli
mov
mov
push
jbe
jg
mov
jle
scas
dec
mov
inc
push
push
mov
cmps
pop
mov
(bad)
gs
cmp
std
fmul
cmps
stc
in
mov
ret
es
shl
fld
repnz
ins
sub
dec
aaa
add
xor
or
(bad)
dec
xor
jo
mov
and
adc
or
xchg
mov
les
xor
mov
je
add
xor
repnz
aaa
adc
push
jb
push
push
or
xor
rcl
ret
xchg
and
aad
adc
mov
xor
mov
xlat
fdiv
mov
adc
(bad)
(bad)
and
adc
sub
stos
mov
add
or
je
mov
add
xor
pusha
je
mov
sbb
mov
outs
sahf
jb
or
aaa
add
mov
ret
sbb
loop
arpl
stos
push
sub
pushf
sbb
pop
fld
and
and
xchg
xchg
out
push
xchg
cmps
neg
dec
ss
or
bound
xor
cwde
pop
jb
sub
push
out
test
(bad)
push
pop
mov
mov
dec
sbb
mov
and
mov
inc
icebp
sub
fcomp
loope
mov
and
xor
xchg
sub
cmp
push
push
iret
sbb
(bad)
push
out
lods
out
jno
fs
mov
sahf
sub
leave
xchg
in
adc
test
jle
das
adc
dec
xchg
mov
sub
mov
cwde
inc
call
(bad)
push
add
inc
int3
in
sub
adc
shl
pop
cdq
(bad)
cmp
inc
mov
stc
shr
add
inc
jb
and
mov
gs
mov
pop
pop
push
cmp
inc
in
pop
movs
(bad)
ins
jb
lods
xor
push
fmul
mov
int3
iret
das
scas
(bad)
mov
gs
test
adc
addr16
fwait
ins
push
push
push
sub
push
sbb
js
fld
adc
sbb
jae
dec
mov
out
mov
rcr
mov
pop
(bad)
dec
cmc
aaa
(bad)
js
inc
jecxz
xchg
push
pop
sub
add
pop
in
out
mov
or
pusha
and
mov
pop
push
push
mov
pop
fmul
mov
shl
jo
fnsave
push
jmp
pop
cmovge
pop
js
or
mov
retf
or
xchg
xacquire
add
jne
xchg
lock
xchg
mov
add
pop
mov
pop
pop
pop
ret
mov
jne
pop
mov
jmp
shr
mov
ins
and
dec
clc
mov
adc
aam
xchg
xor
(bad)
dec
push
add
sbb
int3
js
or
adc
out
xor
mov
push
dec
push
je
stos
cmp
xor
adc
xchg
mov
add
retf
mov
mov
cmp
mov
push
or
jns
idiv
inc
xchg
add
xchg
je
(bad)
mov
rcr
je
push
iret
pop
stc
mov
cmps
xor
ja
cmp
mov
inc
xor
xchg
lahf
mov
pop
sub
xor
sub
and
mov
sub
fucomi
scas
icebp
mov
pop
mov
ins
mov
push
and
jg
mov
mov
lods
outs
dec
xchg
pop
push
popa
push
ror
fcom
cmp
rcl
mov
dec
sbb
fcomp
add
rol
adc
or
pop
mov
mov
mov
pusha
fidivr
mov
loopne
pusha
lds
xlat
sbb
add
dec
mov
(bad)
shl
dec
retf
jmp
hlt
add
xchg
ja
cmp
sub
adc
lahf
(bad)
(bad)
shl
xchg
push
lahf
inc
lahf
out
test
jge
xchg
dec
lock
add
adc
mov
sbb
cwde
adc
xchg
enter
rcl
dec
aaa
test
test
xchg
out
dec
pop
and
and
jmp
xor
stc
jmp
xchg
dec
stos
hlt
cmc
outs
sub
lock
lahf
fnsave
mov
out
in
dec
mov
or
call
sbb
pop
popf
xor
dec
add
xchg
jb
inc
push
vmread
sub
outs
jp
sub
xchg
inc
ss
test
mov
ret
or
clc
ja
pop
add
pop
arpl
pop
mov
test
xchg
nop
jp
xchg
mov
add
aaa
movs
in
mov
xchg
jno
push
dec
or
stos
inc
fmul
leave
dec
(bad)
ror
mov
aas
push
xchg
popf
dec
test
mov
shr
jmp
mul
outs
inc
and
cmp
daa
mov
mov
neg
cmp
mov
stos
push
mov
lea
add
ss
and
aas
and
push
mov
mov
aas
stos
pop
movs
rcl
lea
popf
ret
and
lods
xchg
ins
arpl
and
test
add
inc
stos
cmovno
cmp
popa
daa
add
lock
and
int3
push
mov
xor
add
jl
pushf
mov
xchg
stos
mov
das
jns
mov
jo
push
sar
jle
push
push
dec
inc
popa
int3
xor
dec
fs
popf
popa
mov
add
popf
add
into
sub
cmps
lock
ror
data16
pop
sbb
nop
mov
xchg
mov
pop
jmp
retf
dec
fstp
pop
mov
inc
cmc
mov
mov
push
cs
sti
(bad)
jnp
pop
mov
out
jp
lock
in
lods
add
sbb
sar
(bad)
cmps
not
dec
pop
mov
jno
movs
pop
mov
mov
movs
push
in
mov
push
fiadd
sub
fs
(bad)
loope
push
and
fnstenv
dec
xchg
lds
iret
cs
pop
sub
push
jmp
retf
jle
loope
ins
pop
or
pop
int3
add
sar
out
retf
test
pop
clc
lods
loope
sbb
stos
mov
or
jns
sub
fs
sub
jns
add
fwait
cmp
jmp
sub
xchg
push
sbb
and
mov
sbb
js
mov
popa
adc
inc
jae
jnp
dec
dec
add
sti
neg
retf
xlat
fcomp
mov
cpuid
mov
nop
push
pop
xor
add
das
retf
mov
adc
and
adc
je
add
cmp
mov
lods
inc
fdiv
mov
xchg
sahf
cmps
sbb
movs
cmp
(bad)
int
push
aad
out
push
neg
mov
push
cmp
mov
ins
mov
jnp
add
xlat
mov
jno
xchg
xchg
mov
fcom
inc
call
ret
clc
jp
mov
sub
loop
cwde
and
stc
dec
sbb
neg
retf
(bad)
mov
adc
(bad)
push
mov
jno
fs
push
sbb
fwait
dec
test
sub
pushf
push
and
dec
stos
sbb
jmp
les
inc
pop
jl
adc
jl
inc
sub
ins
pop
inc
clc
fldenv
pop
les
scas
push
sub
imul
mov
cmp
xchg
xchg
fnstcw
out
adc
push
data16
push
stos
icebp
leave
dec
cmc
loope
jle
xlat
outs
and
fsub
outs
mov
mov
sbb
js
in
movs
fist
lock
cmp
cmp
repnz
movs
movs
jmp
mov
sbb
sbb
mov
pop
xor
icebp
mov
mov
xchg
and
in
or
cwde
push
sub
or
and
dec
add
pop
(bad)
pop
out
scas
xor
mov
xchg
and
add
pop
mov
(bad)
mov
mov
(bad)
or
clc
sub
das
mov
inc
cmp
sub
stos
cwde
cmp
(bad)
sbb
rcl
jb
mov
mov
xchg
shl
or
pop
nop
jnp
sub
fst
sub
push
ins
inc
and
test
add
adc
addr16
enter
sub
sar
push
lds
(bad)
mov
retf
sti
pop
fldenv
fprem1
push
not
xchg
rcr
mov
jns
adc
stos
sbb
repnz
cld
popf
lds
fs
add
push
add
ret
fisttp
aad
icebp
(bad)
call
push
add
xchg
mov
test
mov
inc
lock
pop
or
dec
sub
xchg
inc
repz
addr16
retf
xor
pop
mov
mov
out
pop
ret
pop
dec
(bad)
repnz
push
xchg
add
pop
mov
scas
movs
jge
push
cwde
jl
cmp
movs
pop
mov
(bad)
cmp
sbb
xchg
dec
and
(bad)
in
(bad)
aas
push
pop
cmps
sahf
ror
adc
popa
inc
int
sbb
shl
jns
xchg
jp
add
in
push
stos
inc
mov
pop
and
mov
mov
js
inc
sub
adc
fdiv
push
dec
mov
ficom
mov
push
sbb
cmp
xchg
dec
cmp
cmp
cmp
push
push
ja
das
les
xchg
fbstp
(bad)
pushf
and
fistp
inc
nop
enter
ins
data16
movs
in
mov
xor
fnstsw
nop
pop
cmp
into
stos
pop
jmp
nop
enter
aad
jmp
and
add
mov
(bad)
push
jmp
out
push
and
stc
pop
sub
enter
cmp
and
stc
fs
les
xchg
sbb
pusha
add
or
mov
push
pop
aas
mov
and
lahf
mov
jb
inc
addps
inc
xor
movs
mov
call
ficomp
int3
xor
out
xor
inc
add
xor
push
mov
add
frstor
jge
arpl
sub
xchg
sub
sbb
jle
jo
cdq
es
pop
popf
ins
fadd
push
sub
cmp
ja
lds
mov
xchg
and
out
dec
xchg
add
xor
push
add
sub
push
inc
in
sbb
sub
mov
push
jle
pop
mov
mov
nop
or
outs
fmul
(bad)
das
and
and
shl
cdq
les
xchg
dec
cmp
or
ins
add
mov
movs
cmp
imul
cwde
(bad)
rol
push
mov
into
add
imul
mov
cwde
or
mov
push
sub
fs
mov
imul
in
shl
stc
add
fisub
pop
lods
add
into
or
or
sub
jecxz
or
and
push
(bad)
js
retf
lock
gs
mov
or
xlat
ret
aas
imul
mov
sub
xchg
add
mov
cmp
rcl
jmp
pushf
repz
sbb
aaa
dec
sbb
retf
into
out
mov
adc
cmps
fldenv
cmp
add
add
fnstsw
cmps
cdq
mov
clc
movs
fcomp
mov
loopne
dec
int
xor
xchg
pusha
sbb
push
and
inc
test
jo
cmp
xchg
fistp
dec
rcl
iret
je
xor
or
dec
or
mov
sbb
stc
cmp
mov
and
lock
and
xchg
loopne
in
pop
mov
xchg
bound
jge
test
adc
cmc
jl
pop
test
jae
dec
pop
pop
and
aaa
mov
add
shr
xchg
lods
pusha
outs
call
push
in
jb
push
adc
rol
icebp
push
out
xor
push
mov
adc
pop
stc
aas
lods
mov
mov
popa
mov
int
xor
cs
addr16
sti
and
push
push
(bad)
test
leave
jp
inc
pop
aam
ins
mov
cdq
jno
jne
(bad)
push
xchg
xchg
mov
push
stos
jg
mov
mov
add
js
mov
xchg
jno
lods
lods
xchg
loope
fidivr
aad
pop
xchg
inc
inc
mov
jno
ins
sub
pop
xor
addr16
rcl
mov
in
fwait
call
daa
in
je
xor
js
sub
in
lahf
int3
pop
push
cld
movs
out
ss
ins
bnd
out
into
stc
xchg
xor
mov
xchg
push
int3
ss
jmp
cmps
add
push
xchg
cmp
popa
xlat
(bad)
in
mov
mov
lods
test
xor
fild
leave
lods
into
test
cmp
mov
loopne
outs
mov
jmp
mov
imul
xchg
aam
pop
aad
stc
retf
sbb
xchg
loopne
movs
fadd
or
xchg
xchg
or
ins
xor
arpl
xor
fs
cwde
add
dec
dec
and
lahf
xlat
xchg
dec
mov
rol
aas
adc
call
dec
rol
jae
add
xchg
push
sub
pop
push
clc
retf
stos
les
mov
mov
imul
lods
aas
xor
or
aam
mov
jno
out
stos
test
dec
mov
dec
push
into
dec
mov
ds
mov
fwait
sbb
or
xor
jo
movs
and
movs
push
mov
std
xor
ror
dec
(bad)
adc
inc
adc
add
jbe
outs
mov
in
pusha
in
in
imul
mov
imul
outs
jg
inc
pop
xchg
das
jns
retf
xchg
sub
mov
mov
xchg
add
mov
das
adc
mov
add
xchg
jle
cmps
adc
scas
cmps
std
in
int3
cdq
int3
mov
cmps
pushf
pop
mov
shl
cmp
mov
add
or
xor
daa
adc
jnp
loope
dec
xchg
shr
mov
xor
mov
jb
and
fisub
dec
imul
loop
fild
adc
jle
jne
and
inc
pop
scas
pop
jno
cdq
out
outs
rol
jne
add
(bad)
push
imul
xchg
mov
outs
call
rol
loope
mov
call
in
dec
inc
push
sbb
jae
xchg
jne
hlt
pop
mov
xlat
xchg
or
xchg
jnp
mov
shr
lea
mov
(bad)
mov
pusha
mov
cli
fisub
mov
inc
sbb
jns
out
push
(bad)
xchg
hlt
ret
mov
adc
mov
inc
not
sbb
cs
or
imul
add
jecxz
mov
mov
mov
test
int3
pushf
out
mov
xor
je
loopne
movs
ret
adc
xor
inc
xchg
pushf
loope
or
inc
push
cmp
push
mov
dec
fldenv
dec
out
jo
cld
sbb
ins
rcl
adc
cmp
push
add
std
es
inc
dec
mov
adc
stos
(bad)
fmul
test
ds
dec
test
or
cmp
inc
xor
mov
jb
add
loopne
outs
push
in
cmc
cmp
scas
mov
dec
test
scas
dec
das
ficom
(bad)
add
push
mov
leave
xor
add
mov
mov
int
or
mov
xchg
loopne
add
add
pop
les
lds
jge
and
fs
aas
add
mov
add
aad
xchg
sbb
repnz
push
xchg
and
mov
cmp
call
icebp
mov
fld
push
aad
jbe
mov
cwde
add
cmp
inc
jmp
cdq
ja
loop
or
mov
push
rcl
cmp
pop
xlat
call
pusha
mov
mov
mov
movs
rcr
xor
into
addr16
retw
(bad)
stc
sbb
cmp
cmp
fwait
xchg
lock
ja
xor
test
pop
mov
push
(bad)
test
div
mov
mov
fwait
stos
mov
enter
sub
sub
xor
das
cmp
sub
jb
dec
call
sub
pop
push
ds
jge
jle
jo
fcos
iret
cld
and
pop
xchg
mov
add
add
es
stos
ret
xlat
mov
hlt
mov
cmp
push
mov
outs
cld
dec
std
mov
and
cmp
jl
mov
enter
imul
pop
pop
inc
and
fwait
xchg
mov
xor
xlat
adc
lods
fst
fucomi
enter
mov
ror
aam
ret
or
loope
mov
dec
clc
sub
cld
xor
mov
xor
lahf
ds
(bad)
push
mov
rcr
xor
in
sbb
movs
xchg
daa
mov
int
scas
add
xchg
fwait
mov
into
and
jmp
je
aad
dec
fcomip
push
mov
sbb
je
xlat
loop
pop
mov
pop
aaa
mov
in
sbb
dec
sub
ins
fs
iret
mov
out
call
test
cmp
jecxz
add
inc
inc
pop
add
mov
loop
(bad)
es
push
cmp
and
out
repnz
into
or
jge
sub
jle
clc
mov
inc
xor
or
repnz
mov
dec
xchg
jle
cdq
add
dec
aaa
not
pxor
xor
mov
mov
push
adc
mov
add
jae
cld
lock
pop
jmp
inc
cmps
cmp
lods
cmp
iret
(bad)
pop
repnz
out
iret
retf
fwait
xlat
inc
adc
fadd
mov
push
push
add
movd
sub
std
mov
xchg
ret
xchg
int3
clc
pop
stos
out
cld
jmp
fdiv
sti
jae
dec
jmp
jns
adc
(bad)
shl
in
adc
cld
mov
je
sub
jmp
shl
test
daa
in
mov
popf
add
cmps
loopne
add
pushf
cmp
and
pop
xor
sbb
aaa
pop
jge
enter
mov
lock
rcl
mov
sbb
fcmovb
fist
bnd
jg
(bad)
stos
iret
out
shl
shr
sbb
gs
jge
ror
stc
repnz
scas
or
push
or
push
mov
pop
sbb
test
cmp
mov
pop
mov
pushf
xor
mov
inc
inc
inc
stos
mov
cmp
push
inc
jg
jns
mov
mov
es
sbb
div
sub
mov
or
and
cli
adc
aas
mov
clc
xchg
jmp
clc
jbe
or
or
lahf
dec
in
das
inc
or
xor
ss
or
cli
pushf
cmp
aaa
and
push
mov
dec
sub
cmp
pop
fmul
fiadd
bnd
dec
jge
sahf
dec
sar
sbb
dec
fadd
es
dec
and
jb
in
sbb
aad
cmp
mov
jo
push
fs
sub
clc
mov
sub
neg
mov
and
out
jl
enter
and
popa
dec
dec
dec
xor
ret
xchg
icebp
in
sbb
cmp
loop
dec
pop
push
jp
dec
adc
lahf
or
out
ins
push
movs
push
call
mov
(bad)
iret
out
add
dec
cmp
cmps
shl
or
push
adc
mov
xchg
mov
pop
push
or
leave
mov
cmp
inc
or
xchg
jbe
push
sub
inc
inc
xchg
dec
lods
lock
adc
lock
sti
movs
mov
mov
push
push
lds
push
test
and
add
xor
sub
mov
inc
inc
inc
sbb
shl
inc
and
sar
pop
sub
adc
mov
mov
cmps
fild
inc
addr16
icebp
sbb
push
dec
and
inc
or
adc
nop
sbb
inc
js
cmps
inc
add
pop
sub
movs
push
ins
adc
adc
out
rol
mov
pop
nop
imul
and
sub
push
mov
jmp
and
pusha
xor
leave
and
sub
sub
(bad)
movs
mov
out
fdivr
mov
aam
(bad)
cmc
loopne
mov
rol
shl
sbb
dec
and
(bad)
dec
jge
test
repz
les
jmp
mov
push
mov
push
(bad)
push
js
cs
dec
and
aam
xlat
inc
add
pop
xor
and
es
inc
popa
dec
loopne
add
xor
bound
aam
dec
out
int3
out
and
stos
loop
add
mov
mov
jg
sbb
test
mov
cdq
nop
setg
enter
ret
ds
lods
(bad)
lock
ss
and
jp
and
les
out
jecxz
push
adc
jae
and
fsubr
pop
pusha
mov
cmps
and
dec
xor
inc
loope
out
inc
stos
or
and
out
mov
ss
lods
sub
ror
cmp
pop
push
cmp
xchg
and
imul
fs
mov
ds
fwait
cmp
jmp
jl
rcl
(bad)
sti
push
mov
pop
adc
stc
mov
xchg
popa
jp
push
adc
enter
rol
jmp
imul
cmp
mov
pop
push
aaa
pop
std
push
jle
lea
and
mov
cdq
je
pop
pop
and
not
mov
xlat
cli
gs
pop
xchg
mov
jmp
(bad)
sti
and
sbb
lock
dec
add
or
cmps
rcl
pop
xchg
scas
fidiv
xor
and
(bad)
xchg
lods
mov
push
nop
ret
mov
xchg
sub
push
out
mov
cmp
push
imul
add
jno
inc
pop
sub
lahf
adc
in
sub
das
inc
pop
inc
adc
out
xchg
add
add
adc
add
pop
inc
lahf
out
add
mov
shl
sub
push
mov
pop
int3
or
xlat
stos
push
inc
inc
outs
test
mov
adc
xor
pusha
call
inc
cmp
jmp
push
mov
pop
int3
repz
retf
pop
(bad)
aas
add
xchg
adc
(bad)
loopne
clc
jnp
ret
das
xchg
jb
test
out
or
sub
(bad)
loopne
inc
push
push
out
dec
jmp
inc
(bad)
rcr
scas
mov
rcl
es
mov
das
into
fmul
test
mov
jmp
jmp
lea
dec
and
jmp
push
aaa
out
in
inc
sbb
adc
xor
dec
add
stos
fcmovu
mov
outs
repnz
jbe
xchg
pop
lahf
xor
nop
repnz
jbe
sbb
repz
clc
add
pop
ror
pop
(bad)
lds
mov
sbb
cmps
mov
jge
adc
ja
jo
pop
ret
jmp
scas
les
cmps
xchg
in
ror
add
in
mov
cmp
add
jno
movs
cdq
push
rol
add
aam
adc
sub
and
leave
jo
iret
jmp
pop
push
movs
sbb
dec
mov
add
dec
icebp
lods
out
add
and
mov
arpl
mov
lods
inc
mov
loope
cld
fninit
push
cmc
jge
out
cwde
das
mov
dec
adc
push
dec
mov
cwde
or
movs
retf
shl
movs
shl
jge
fnstsw
test
loop
sar
mov
sbb
fmul
mov
das
or
mov
out
and
imul
mov
jno
push
mov
inc
fnstsw
xchg
jg
inc
loop
mov
outs
cbw
fdivr
inc
leave
mov
push
pop
mov
push
pusha
repz
in
pop
cwde
jbe
call
pushf
mov
inc
xchg
es
sub
mov
jae
push
test
mov
outs
sub
mov
add
dec
xor
loop
in
mul
jl
and
call
aas
in
sbb
cmc
add
adc
(bad)
mov
mov
(bad)
xlat
arpl
or
push
dec
and
arpl
mov
mov
sbb
loope
adc
cld
fcomi
and
mov
adc
adc
inc
outs
test
cdq
(bad)
or
es
shl
les
int
mov
pop
repnz
ret
cmp
jnp
repnz
xchg
add
xor
sub
aad
rcr
aam
je
pop
rcr
enter
jge
adc
and
jl
push
push
and
cmp
ror
jns
or
jnp
or
mov
xor
dec
call
push
inc
inc
xor
sti
lods
dec
out
outs
ja
fwait
repnz
xchg
add
mov
inc
and
imul
(bad)
and
cmc
repz
and
and
push
cld
aam
popa
mov
pop
cwde
add
sti
push
xchg
in
sub
or
loopne
xor
cli
push
pop
and
imul
sbb
loopne
lods
jge
push
sbb
jno
fdivr
inc
add
or
icebp
in
and
and
sbb
sar
lods
sahf
pushf
pop
retf
mov
clc
jnp
fst
xor
inc
dec
add
inc
or
adc
scas
cwde
pop
xor
sahf
mov
fs
dec
int
mov
hlt
adc
out
loope
mov
inc
xor
push
scas
or
xor
retf
pop
loopne
leave
(bad)
(bad)
stos
push
dec
out
dec
adc
mov
jbe
jns
sub
(bad)
into
stos
aaa
fiadd
mov
or
pusha
mov
mov
mov
add
scas
pop
adc
cmps
out
call
dec
out
or
add
in
mov
xor
dec
add
sub
fbstp
add
div
outs
bound
xchg
mov
adc
div
test
outs
push
test
cmp
push
pop
push
cmp
enter
inc
sbb
or
retf
fwait
in
xor
dec
inc
out
xor
and
or
cld
out
xor
sbb
and
popf
js
xor
xlat
sysenter
dec
mov
push
ret
nop
and
dec
adc
xor
fnsave
pop
xchg
mov
add
outs
dec
ja
jmp
inc
sahf
dec
out
push
imul
jecxz
(bad)
xor
fwait
push
jno
into
(bad)
ins
inc
leave
push
add
das
cmc
scas
mov
mov
stos
mov
movd
test
jmp
sbb
test
mul
movs
pop
cmp
cmp
dec
push
rcl
iret
push
or
repz
movs
popa
sbb
jg
jns
xchg
adc
out
aas
adc
aaa
aaa
fwait
push
mov
push
loope
xor
pop
test
add
sti
fdiv
(bad)
in
loopne
cmp
lds
pusha
mov
(bad)
jmp
clc
mov
xchg
xchg
scas
js
int3
mov
push
pop
sbb
dec
out
test
ret
pop
mov
jne
nop
mov
ins
lods
add
inc
cmps
enter
sbb
gs
sub
jg
mov
loop
mov
pop
fcmovne
dec
into
mov
xchg
lds
pop
jne
or
pop
mov
nop
int3
inc
and
leave
test
inc
push
and
fwait
push
or
jns
mov
fs
sbb
mov
inc
les
fnstsw
lock
fdivr
xor
jl
dec
les
aam
call
out
and
aam
data16
push
fwait
hlt
inc
or
pop
or
jmp
rcl
adc
test
ret
xor
pusha
sbb
test
lock
in
cmps
mov
inc
jns
(bad)
iret
mov
rcl
je
jge
jmp
inc
fistp
fs
cmps
test
stos
loopne
daa
and
nop
mov
pop
add
or
sbb
mov
mov
add
mov
gs
xor
mov
push
movs
add
push
out
fst
jne
push
imul
sbb
mov
xchg
popa
mov
mov
int3
movs
pop
add
js
cli
add
push
jle
(bad)
jle
jle
or
js
and
int
add
outs
cmp
jns
(bad)
retf
adc
pop
int
imul
push
and
std
cwde
cmps
push
lea
cs
outs
xchg
dec
and
clc
cs
cwde
push
loop
movs
(bad)
into
repz
lahf
aaa
sbb
xchg
add
xchg
mov
or
xlat
dec
(bad)
scas
xor
mov
aad
in
ja
out
mov
or
jns
add
and
mov
dec
sti
mov
in
jge
cmp
or
pop
js
adc
out
push
adc
xor
iret
and
push
adc
adc
call
sub
sub
cmp
adc
mov
push
mov
and
test
pusha
jp
imul
icebp
rcr
cmp
or
pop
and
cmp
and
mov
jmp
repnz
int3
pop
cmp
cmp
into
mov
cmp
lock
imul
add
xlat
xchg
push
push
and
add
dec
inc
xor
push
cmp
push
jae
repz
fs
retf
imul
cmps
rcl
or
aad
jl
leave
into
mov
cmp
mov
cmp
lahf
in
push
mov
ins
mov
lods
add
(bad)
out
rcl
mov
rcr
inc
mov
mov
stos
cld
jmp
jg
pop
mov
movs
mov
inc
push
mov
and
xchg
js
(bad)
in
pusha
dec
inc
mov
lea
or
sbb
xchg
cmp
pop
cmps
cmp
jp
jno
fwait
outs
jmp
sbb
mov
mov
lahf
sar
retf
cmp
ja
aad
xchg
scas
inc
icebp
jmp
shr
ret
jmp
out
mov
scas
jle
dec
sub
dec
mov
mov
pop
imul
and
ins
and
xchg
leave
(bad)
pop
arpl
mov
sbb
adc
mov
ror
sub
mov
xchg
(bad)
neg
aas
in
xchg
xor
in
jo
rcl
daa
and
sbb
dec
dec
stos
out
mov
mov
test
retf
daa
into
movs
test
mov
out
lahf
sar
(bad)
cmc
mov
xor
dec
inc
mov
retf
out
sbb
(bad)
mov
mov
jbe
xlat
sbb
inc
scas
push
push
ins
test
sub
in
std
cli
imul
push
mov
data16
xchg
cmps
jmp
out
arpl
xchg
pop
push
aad
cdq
ret
dec
out
movs
jnp
push
movs
std
in
mov
fiadd
jae
sbb
imul
ds
xchg
icebp
shl
cmp
mov
hlt
or
lods
bnd
sub
cmps
int3
stos
or
movs
adc
adc
and
cmp
and
push
xor
clc
pop
sahf
addr16
fcom
(bad)
shl
cmp
into
vpunpcklqdq
xchg
xor
jae
les
in
push
loope
push
xchg
jae
out
call
mov
push
fsubp
in
(bad)
lods
iret
adc
dec
adc
push
loope
js
js
jg
std
jne
or
cmps
mov
test
mov
ret
jns
das
(bad)
jnp
xor
mov
push
fistp
in
daa
mov
ja
push
(bad)
loopne
enter
dec
xlat
cmp
or
push
in
mov
mov
cmc
push
in
retf
shl
lds
cli
mov
movs
push
outs
in
and
xor
mov
jno
mov
std
sub
and
leave
daa
jne
xchg
daa
imul
xchg
xchg
sbb
jne
repnz
mov
aad
sub
fs
imul
test
retf
les
adc
mov
push
adc
rol
mov
pop
mov
mov
xchg
stos
mov
ret
rcr
push
mov
dec
mov
das
jl
fwait
enter
fwait
(bad)
push
ficom
or
cmp
test
xor
xor
mov
jp
imul
inc
cwde
pop
out
cmp
sbb
out
adc
sar
fmul
adc
out
jmp
icebp
mov
loop
mov
cs
sub
ja
ror
cmps
adc
and
test
lods
pop
dec
mov
pop
push
jns
dec
fwait
sahf
movs
or
nop
aas
sbb
out
rcr
std
push
sbb
ficom
xlat
cmc
loope
pushf
mov
push
movzx
adc
push
fdiv
mov
(bad)
xor
adc
loop
rcr
std
jno
push
rol
sbb
xchg
push
sahf
inc
sub
inc
adc
fisubr
ins
sti
cmp
sbb
lods
(bad)
xor
xlat
mov
pushf
cmp
jge
cmc
stos
mov
les
mov
fwait
xchg
xchg
dec
dec
pushf
lods
rep
ss
cmp
mov
mov
mov
jl
test
daa
lock
stc
or
or
mov
pop
ret
sub
push
(bad)
ror
mov
sti
outs
stc
stos
loop
outs
pop
mov
or
pop
mov
(bad)
lods
out
jg
cmps
xchg
in
(bad)
in
test
mov
sbb
out
and
xchg
xchg
sub
cld
sub
inc
xchg
dec
xlat
dec
shr
test
(bad)
aaa
mov
pop
mov
mov
out
mov
loopne
imul
fs
movs
and
jmp
mov
ss
addr16
xlat
data16
popf
mov
sub
jae
rcl
sub
mov
xor
push
pop
and
popf
outs
mov
push
ret
push
jle
sub
sar
mov
movs
cmps
ins
rcl
mov
movs
popf
and
pop
call
movs
adc
mov
xchg
stos
rcr
jle
idiv
out
hlt
mov
adc
fsubr
hlt
adc
outs
js
mov
pop
or
out
pushf
jp
ins
lock
sbb
loope
adc
cld
loope
adc
push
(bad)
mov
jmp
xchg
xchg
pop
xchg
xor
cmp
repz
pop
into
out
fdivrp
add
js
add
ret
pop
cmp
js
or
cmp
dec
fnstenv
or
jle
loop
enter
push
inc
(bad)
mov
(bad)
sbb
stos
xchg
cld
sar
mov
aas
fld
mov
mov
jnp
retf
sbb
retf
lods
loope
ins
pop
xchg
pop
pushf
sub
outs
or
sbb
pop
push
push
cdq
stos
pop
add
aam
mov
sbb
mov
inc
jmp
lahf
cmp
loope
pop
div
repnz
je
push
push
icebp
pushf
nop
repz
dec
mov
loopne
imul
xchg
int3
stos
out
push
ins
jp
sub
ja
sub
test
cmp
mov
inc
or
adc
stos
pop
jno
mov
fcmovu
push
pop
cmps
xor
test
out
lahf
pop
add
cmp
xchg
jmp
xchg
je
adc
js
jl
sub
or
add
sbb
stos
(bad)
cmps
dec
sbb
lods
adc
xchg
(bad)
mov
jl
lods
dec
sar
js
loope
mov
mov
iret
leave
jno
mov
jo
retf
cmp
jecxz
fnsetpm(287
pop
sub
call
int3
nop
call
mov
sahf
(bad)
(bad)
sti
ja
fimul
jbe
jl
(bad)
into
shl
ficomp
and
ret
mov
cmp
mov
mov
sahf
mov
jmp
call
pop
fst
mov
pop
or
mov
in
mov
icebp
adc
mov
mov
cmps
inc
hlt
cld
xchg
push
out
dec
dec
mov
push
iret
iret
addr16
ficomp
cmp
push
pop
lds
mov
shr
inc
xchg
pop
xor
xchg
(bad)
stos
pop
inc
test
xor
inc
jno
or
xchg
das
mov
sbb
nop
xchg
mov
fmul
call
or
mov
in
jp
sbb
adc
xor
outs
test
fstp
pusha
test
ja
jne
lods
lds
xchg
mov
xor
jno
aas
dec
dec
fdiv
int
xchg
sbb
mov
out
cmp
xchg
mov
xlat
jmp
sbb
fcom
test
lods
push
cmp
jge
push
out
rol
sbb
sub
(bad)
int
jnp
inc
pop
shl
push
dec
fdivr
addr16
mov
scas
sbb
jbe
xor
hlt
shl
adc
xor
cli
fwait
test
(bad)
sub
lds
gs
mov
loopne
xor
push
cs
fsub
ds
jno
lods
test
sub
or
mov
push
ins
pop
lds
repz
and
cmp
cwde
push
sub
jecxz
or
sbb
push
ret
mov
push
fsubr
mov
or
lods
push
shl
sub
scas
inc
push
sar
test
pushf
retf
inc
arpl
mov
adc
adc
ror
jne
sub
in
mov
cmp
rcl
cmp
aaa
mov
sbb
push
mov
arpl
rcl
pop
push
in
mov
sbb
dec
pop
cmp
cmp
fisttp
shl
stc
push
jmp
push
push
(bad)
int3
je
pop
and
daa
mov
sub
push
jne
test
ss
mov
mov
shl
xchg
sahf
popf
mov
outs
ror
out
leave
pop
sub
movs
ins
pop
push
cmps
fist
xor
ja
mov
ss
fisubr
shl
mov
pushf
pop
mov
cli
movs
imul
adc
imul
test
repz
xor
sbb
pop
mov
cmc
xchg
sti
mov
or
inc
dec
mov
ins
pusha
xchg
xchg
mov
xlat
dec
in
es
cmc
jns
les
cdq
test
daa
mov
bound
cmps
lds
xlat
sub
or
mov
imul
jno
mov
(bad)
jmp
fxch
jbe
ins
or
leave
mov
mov
in
mov
scas
mov
(bad)
in
shl
sub
xchg
and
in
push
sub
fisttp
outs
ja
xchg
rol
hlt
xchg
jb
test
jmp
mov
bound
jge
adc
mov
mov
jbe
ins
mov
and
pop
xor
lds
inc
push
sbb
xchg
sbb
adc
mov
addr16
popa
daa
lea
jmp
ss
pushf
jl
sbb
mov
pop
adc
(bad)
jl
sbb
jmp
pop
aaa
jbe
stc
mul
xchg
neg
jg
mov
aas
push
ins
add
cmp
data16
popa
or
jno
fdivr
sub
lds
and
scas
dec
iret
pop
mov
loopne
test
outs
push
call
adc
jbe
ret
movs
clc
daa
mov
pop
fld
sbb
xor
inc
mov
out
ins
mov
bound
lods
or
out
fldcw
xlat
mov
retf
add
rcl
int
mov
xchg
mov
dec
dec
(bad)
and
jmp
jbe
out
popa
jns
iret
lods
mov
or
xor
test
pop
test
pop
mov
fstp
and
dec
data16
lods
xor
pop
xor
fiadd
into
scas
sbb
hlt
push
sbb
xor
cmc
movs
jne
cmc
(bad)
into
dec
sub
adc
adc
cdq
fild
stos
or
pop
fstp
fadd
mov
push
int3
xchg
ja
retf
bound
js
sub
ret
mov
clc
adc
cmps
call
dec
imul
mov
cmc
call
aam
xchg
and
push
jecxz
mov
cwde
or
lahf
dec
loop
sub
cmc
stos
out
gs
xor
fcom
dec
jle
pop
in
(bad)
push
mov
jnp
sti
xchg
sti
(bad)
pop
jne
test
je
pusha
sub
ret
push
mov
cmp
and
xchg
fucom
test
inc
stos
loop
jbe
retf
loop
push
imul
leave
pop
jge
loopne
jbe
inc
ss
add
loope
nop
test
lock
xchg
(bad)
adc
jnp
mov
or
sahf
(bad)
imul
jns
push
xchg
mov
dec
xchg
pop
mov
jo
jnp
mov
mov
xchg
sahf
jns
(bad)
jmp
jnp
jb
pop
cmps
sbb
and
inc
jge
pop
cmp
sar
movs
and
or
pop
retf
(bad)
jp
in
mov
and
jae
mov
not
sub
or
jmp
xor
inc
data16
cmp
out
(bad)
mov
imul
adc
pop
xchg
xchg
rol
mov
mov
jae
or
rcr
xor
inc
(bad)
outs
and
shl
fsub
push
jmp
cdq
(bad)
cs
pop
inc
add
sub
mov
pop
xor
push
test
shl
inc
js
xchg
fidivr
repnz
int3
movs
add
test
push
leave
fstp
test
push
mov
pop
movs
cmps
into
test
jl
ret
(bad)
mov
stos
fbstp
adc
fs
in
fsin
imul
in
add
loop
inc
mov
cmp
pushf
mov
cmp
loop
popf
push
lods
dec
scas
dec
push
ins
dec
es
sbb
dec
ret
test
and
outs
push
cmp
fisttp
outs
movaps
add
fsubr
or
pop
jmp
sbb
xchg
mov
loop
pop
sti
xchg
loope
cmc
ins
xor
les
ret
stc
out
jmp
ins
not
pop
ror
fmul
pushf
mov
mov
mov
xchg
fnstsw
cmps
in
sbb
add
push
mov
pop
jecxz
test
call
xchg
test
imul
pop
inc
in
(bad)
fild
xchg
addr16
sbb
scas
popf
js
repnz
xor
sbb
mov
dec
ins
cli
mov
mov
outs
xor
cli
aad
push
dec
mov
and
adc
ins
int3
(bad)
adc
loop
cmp
sti
jg
enter
out
sub
cwde
shr
into
mov
or
movs
or
mov
popa
cli
test
sar
(bad)
jae
or
repz
or
addr16
fbld
mov
dec
mov
xchg
sub
cmp
mul
xlat
lods
mov
mov
sbb
loop
xchg
jmp
repnz
es
fbld
pop
or
pop
cmps
mov
sub
jns
cmps
or
xor
xor
ror
lock
mov
aam
aas
dec
or
movs
push
ret
retf
aam
out
iret
addr16
repnz
xlat
je
call
mov
xchg
add
adc
dec
jmp
loope
add
and
fdiv
mov
mov
rcl
inc
dec
pusha
sar
mov
mov
dec
pop
(bad)
jmp
es
xchg
pop
fcmovnbe
mov
lods
cmps
push
push
ja
jle
and
aaa
xchg
ror
jge
push
sub
jmp
test
into
iret
xor
mov
lods
mov
frstor
imul
xor
and
jge
loop
sub
dec
cmp
pop
int3
mov
adc
jp
dec
call
nop
push
imul
mov
shl
rcl
in
int
jns
cmp
sub
repnz
mov
push
or
into
jns
test
retf
imul
mov
popf
fs
xchg
test
fwait
mov
(bad)
jp
and
jmp
mov
or
sbb
cmc
pop
and
push
sub
xor
cmp
mov
and
outs
scas
pusha
cwde
scas
jl
mov
inc
inc
jb
xchg
xchg
push
dec
iret
cmps
repnz
xchg
pop
lock
cmps
call
icebp
cmps
xchg
mov
push
(bad)
xor
xor
jnp
imul
lea
mov
mov
call
cmp
cld
je
and
outs
je
push
into
mov
adc
adc
xchg
out
pop
aas
nop
mov
mov
cmp
push
mov
sbb
fcom
not
scas
pop
adc
and
mov
push
xchg
pop
test
mov
push
cli
or
movs
cmps
jle
add
dec
sub
cmp
ins
and
jnp
push
inc
lea
movs
(bad)
fxch
mov
add
mov
mov
repnz
sub
(bad)
xor
test
cmp
inc
inc
push
mov
pop
xchg
sub
jp
xlat
mov
in
cdq
push
jecxz
pop
add
sub
push
das
scas
xor
xchg
pop
enter
cmps
test
adc
mov
addr16
jle
stos
call
mov
fsub
cmc
xor
mov
out
in
movs
popa
dec
mov
outs
mov
dec
mov
xor
outs
jae
cwde
or
mov
sub
or
lods
outs
push
fisubr
mov
dec
adc
das
mov
cdq
sub
inc
in
adc
outs
int3
in
ja
push
pop
pop
cmp
loope
mov
lods
pop
jp
in
retf
int3
aam
sub
mov
das
fmul
cdq
imul
dec
mov
or
popa
push
cmp
add
pop
sub
outs
sub
ja
sbb
inc
mov
lds
into
mov
stc
leave
jl
fimul
fdiv
mov
mov
les
sub
out
inc
xor
inc
push
scas
loope
stc
aaa
or
shr
push
loop
pop
xor
scas
cmp
(bad)
fdiv
daa
(bad)
mov
sbb
test
int3
fwait
cmp
loope
or
dec
sub
ins
movs
dec
mov
arpl
loopne
sbb
ror
gs
nop
enter
test
test
fdiv
jns
mov
jmp
mov
jno
xchg
adc
std
in
inc
inc
or
fmul
iret
in
jl
push
xor
ins
lods
inc
fnstenv
push
mov
popa
iret
jle
je
test
mov
stos
push
pushf
cmp
nop
add
int3
dec
stc
in
cmp
ins
push
sar
inc
xor
(bad)
fucomp
mov
scas
pop
nop
cmp
mov
xchg
push
(bad)
shl
xchg
ins
mov
push
cdq
ret
(bad)
retf
push
int3
stos
retf
mov
ficomp
mov
bound
in
cdq
fmul
out
jg
rcr
push
scas
out
mov
jmp
sub
test
add
test
mov
pushf
adc
data16
xlat
mov
push
dec
pop
sub
cli
jg
mov
fldenv
pop
push
out
sbb
imul
fimul
adc
xchg
adc
pop
adc
mov
fnstenv
int
stos
mov
je
test
mov
loope
sbb
clc
sbb
ret
cdq
cmp
test
(bad)
cwde
mov
icebp
ss
jb
mov
mov
mov
sub
jns
aam
cmp
ret
pushf
loope
pop
ja
push
inc
adc
dec
and
ror
cmp
std
jle
cmc
les
daa
push
xor
(bad)
mov
xchg
mov
cs
dec
jno
pop
mov
fldenv
or
cmp
stos
xchg
adc
xchg
mov
loope
ds
xor
shr
lea
out
jge
xor
ds
sbb
js
frstor
cdq
mov
(bad)
in
pusha
inc
test
sar
out
test
jne
clc
daa
inc
pop
hlt
pop
popf
sahf
int
push
shl
repnz
inc
fs
outs
jnp
out
scas
cmp
stos
stos
and
imul
cli
xchg
mov
xor
shl
add
(bad)
ds
fcmove
sub
call
push
xchg
dec
pop
repz
add
cmp
fsubr
fld
pop
adc
lock
adc
into
mov
pop
out
jno
mov
ror
outs
pop
sub
push
jmp
nop
jg
call
inc
and
loopne
out
pop
stc
mov
scas
mov
mov
inc
out
shr
out
jae
std
sbb
je
push
mov
jns
jnp
repnz
out
xchg
inc
(bad)
shl
(bad)
mov
adc
lods
stos
push
add
jge
rcr
dec
loopne
aaa
jle
pop
ss
mov
mov
into
outs
popa
cmp
scas
cwde
mov
sub
mov
jnp
xchg
sbb
out
js
cmps
fisub
ins
mov
xchg
cmp
sbb
xchg
adc
jp
sub
lods
and
push
mov
ror
std
xlat
pextrw
pop
js
rcl
mov
fwait
mov
ds
ds
aad
gs
mov
pop
repnz
fisubr
adc
jno
push
icebp
mov
(bad)
std
jl
mov
xchg
aam
popa
add
sub
ror
mov
mov
pop
and
fcom
dec
push
add
ret
xchg
scas
dec
xchg
mov
lds
sbb
adc
pop
cli
test
jecxz
jnp
mov
mov
cmp
aam
inc
mov
out
stos
add
xchg
inc
mov
(bad)
push
fnstenv
call
out
xchg
push
adc
mov
movs
fisttp
add
in
cmp
ins
mov
repz
xor
xor
scas
pop
das
cmp
nop
ret
push
mov
jbe
jns
sahf
retf
test
icebp
push
imul
stos
cdq
ds
mov
mov
out
das
push
iret
mov
mov
inc
xchg
jne
cmps
imul
scas
ror
xchg
je
dec
cmp
inc
push
fwait
xchg
mov
hlt
outs
mov
mov
cmp
cmp
sub
dec
mov
lds
fidiv
popa
xchg
pop
jbe
adc
leave
xchg
popf
arpl
sub
jmp
dec
ss
fdivr
mov
and
rcl
imul
jns
mov
shr
repz
lahf
push
mov
mov
fscale
sti
shr
pop
jmp
popf
data16
retf
cs
test
and
leave
je
dec
jle
dec
imul
sbb
lods
jno
lds
mov
test
leave
dec
push
jns
mov
lods
fwait
je
mov
mov
xchg
je
adc
into
mov
push
mov
fld
outs
dec
jbe
std
ret
xlat
fidiv
ds
pop
mov
retf
call
jg
xchg
arpl
(bad)
std
cli
sbb
fistp
dec
jl
cmp
retf
mov
mov
imul
mov
mov
inc
je
fdiv
stc
in
mov
jle
in
sub
leave
call
mov
adc
push
mov
mov
mov
inc
loop
pop
sar
mov
mul
scas
inc
xor
adc
in
add
push
jb
pushf
rcl
or
jnp
cmp
and
mov
fcomp
ret
jg
push
mov
not
scas
mov
dec
mov
jb
mov
test
arpl
cli
mov
and
(bad)
mov
mov
mov
rcl
adc
cs
inc
mov
nop
inc
repnz
mov
sbb
inc
sar
push
push
aad
mov
mov
lods
jb
popa
adc
fidivr
loop
jno
mov
pop
aas
push
sti
sub
jg
jnp
pop
out
mov
push
scas
and
push
mov
push
inc
xchg
popf
xor
dec
mov
mov
sub
push
cwde
pop
call
leave
jp
lods
lock
inc
mov
int
jno
cmp
ret
pop
add
xchg
mov
(bad)
mov
cmp
lea
clc
lods
cmps
out
cmps
int3
outs
mov
mov
adc
push
pop
arpl
popa
fiadd
add
fcmovb
mov
aas
or
dec
cmp
or
sub
into
cmp
push
ficomp
xor
mov
je
add
sub
ds
icebp
jl
retf
fsubr
aaa
(bad)
pop
scas
and
data16
pop
mov
mov
ss
jg
jo
or
dec
ja
xchg
or
mov
mov
fsub
(bad)
aam
scas
rcr
fstp
xchg
jle
mov
push
pop
mov
adc
dec
push
push
dec
sub
sbb
das
data16
push
into
and
sub
adc
mov
push
ficomp
es
sbb
xchg
cmp
aaa
fwait
pop
pop
add
mov
in
aaa
sbb
dec
sbb
pop
loopne
leave
pop
fwait
scas
(bad)
jno
mov
lods
fwait
cmps
push
ret
jle
stos
mov
retf
cwde
retf
pop
cmps
push
retf
pop
add
mov
mov
and
cmp
jmp
sbb
sbb
mov
push
lock
cmp
imul
sbb
movs
je
mov
jae
sub
jp
enter
mov
sub
sahf
std
adc
jmp
syscall
mov
sub
lods
xchg
mov
adc
jo
out
mov
pop
sub
stos
(bad)
cmp
pop
cmps
mov
jge
push
mov
aaa
jnp
mov
jp
enter
mov
in
add
aad
ret
dec
and
add
dec
jbe
clc
inc
mov
or
popf
mov
jmp
cli
movs
stos
push
lods
stc
popa
inc
mov
or
push
mov
ds
push
loop
popf
movs
retf
test
(bad)
fstp
fidivr
push
xor
cmp
adc
pop
xchg
call
lea
mov
cmp
pop
adc
arpl
xor
int3
lds
leave
sub
push
pop
xchg
dec
mov
lahf
cmp
mov
xchg
les
lea
mov
cmp
sub
xor
jge
fsub
inc
hlt
int
popa
cmp
xchg
cmp
daa
xchg
jmp
push
mov
hlt
fwait
mov
stc
pushf
dec
xchg
pop
pop
mov
xor
jp
mov
sti
jl
mov
cli
ret
das
fnsave
ds
sbb
rcl
imul
(bad)
jmp
adc
sbb
or
jmp
cdq
xchg
cmc
sbb
adc
push
jmp
or
dec
dec
(bad)
jno
call
test
arpl
pop
fcomip
sahf
cmp
int3
sbb
adc
mov
stos
mov
retf
jae
fwait
sub
push
imul
inc
aad
mov
(bad)
ins
push
movs
pop
lds
adc
pushf
and
std
xchg
scas
out
mov
fnstcw
pop
(bad)
mov
enter
mov
aaa
push
mov
xor
xchg
jg
call
jmp
in
mov
mul
(bad)
push
clc
arpl
sbb
push
mov
addr16
xlat
mov
xchg
cmps
push
mov
mov
mov
mov
mov
sbb
push
push
out
repnz
ja
call
dec
movs
cmc
iret
mov
xchg
movs
pop
adc
rol
push
imul
(bad)
xchg
in
xchg
fnstcw
fnstsw
pop
and
xchg
push
and
xlat
push
sub
mov
stos
leave
jge
test
jmp
stos
mov
dec
mov
mov
lods
ins
sub
add
jae
dec
pop
xchg
xchg
pop
fwait
movs
bound
retf
enter
add
adc
dec
xchg
imul
push
adc
(bad)
and
(bad)
es
mov
mov
jno
movs
sahf
aad
in
sti
out
inc
pop
push
ds
cmp
xor
test
mov
lds
jo
cmc
pop
ret
dec
(bad)
mov
push
(bad)
sbb
aad
jb
mov
xor
jbe
or
dec
int
dec
cmp
dec
outs
xor
arpl
fs
mov
mov
pushf
sti
dec
stos
(bad)
cmp
icebp
ret
cmps
in
fdiv
jle
lahf
xlat
push
(bad)
fs
aaa
xor
adc
add
jnp
cmp
and
mov
loop
sub
jmp
mov
sub
mov
push
xchg
jno
outs
movs
push
fcom
jmp
repnz
mov
(bad)
xor
dec
hlt
fsubp
es
ins
les
(bad)
mov
sub
out
and
ins
pop
dec
mov
cmps
test
scas
push
push
clc
pop
sub
push
fdivr
stos
mov
cmp
imul
mov
retf
mov
cld
xchg
fst
aad
or
inc
push
add
fsubr
add
inc
cld
sub
inc
add
jp
fistp
push
and
xchg
dec
fldcw
fbld
test
mov
jae
movs
movs
sbb
push
sub
cmp
js
clc
sub
repz
enter
jno
ds
mov
xor
dec
push
jl
mov
dec
repz
xor
mov
in
scas
inc
pop
sub
sub
pop
mov
jmp
xor
mov
call
mov
lods
loope
mov
loop
push
xchg
sar
test
xchg
and
test
cs
scas
inc
sbb
and
sbb
xor
adc
dec
add
gs
das
es
pop
dec
test
add
push
call
add
mov
jbe
cld
cs
das
inc
mov
test
xchg
sbb
pop
dec
and
sbb
jae
xchg
pop
rcl
(bad)
push
sbb
into
stos
(bad)
(bad)
push
jge
cmps
call
shr
mov
icebp
clc
bound
(bad)
ss
or
(bad)
jge
and
sbb
sub
ins
rcl
xor
dec
sub
mov
mov
sbb
call
cwde
push
mov
push
stos
sbb
sub
imul
(bad)
and
mov
lds
fs
mov
sahf
pusha
xor
lods
pop
push
push
push
push
and
adc
push
xchg
fstp
hlt
sbb
xor
pusha
mov
mov
mov
cmp
out
adc
scas
mov
add
loope
push
scas
jmp
push
cmp
rcr
outs
push
push
outs
pusha
pushf
push
fisubr
xor
sbb
push
and
xor
push
cmp
jp
inc
cmp
inc
inc
stos
pop
pushf
push
and
pop
xchg
fisubr
(bad)
movs
jl
dec
cs
pop
test
pushf
mov
xchg
push
mov
cwde
je
loope
ror
add
xchg
sbb
cs
loope
test
hlt
xchg
jns
mov
push
and
cld
cmps
add
cmp
xor
icebp
scas
retf
in
adc
xchg
mov
stos
push
sbb
push
jecxz
xchg
dec
test
loopne
jbe
fisubr
xchg
sbb
sti
ret
xchg
lds
test
xor
retf
xor
and
xchg
dec
push
sub
cmp
inc
int3
jmpw
mov
test
(bad)
or
jae
xchg
xor
mov
cmps
test
and
jo
xchg
(bad)
loop
mov
or
jmp
adc
inc
mov
popa
iret
imul
hlt
cmp
ret
push
and
sub
aad
sub
dec
cdq
adc
or
or
xchg
movs
dec
stos
repz
inc
xlat
jb
cdq
scas
dec
adc
pop
pop
sub
es
and
inc
jmp
or
aad
inc
dec
sbb
and
jnp
loop
stc
push
ret
add
inc
fcmovu
adc
inc
retf
daa
adc
or
push
hlt
mov
mov
imul
cmp
lods
pop
mov
inc
mov
into
std
push
mov
aam
and
movs
pop
leave
mov
xchg
in
fsubr
or
mov
pop
inc
mov
ret
movs
leave
iret
scas
dec
and
push
adc
mov
sahf
lea
mov
retf
mov
mov
cmp
sub
fsub
mov
xchg
xlat
mov
sbb
stc
xor
fwait
jl
adc
test
rcl
lods
cmp
lds
mov
push
fisubr
test
outs
in
cwde
and
(bad)
lock
sub
add
dec
aam
mov
and
pop
push
sbb
in
aad
xchg
mov
sbb
pop
and
xchg
lahf
icebp
push
jmp
lahf
pop
dec
add
cmp
cmp
ins
mov
adc
xchg
test
mov
and
xor
xor
pop
adc
adc
into
fild
sub
xlat
ss
in
add
jl
push
xchg
jmp
push
or
sti
outs
jp
inc
lea
sbb
movs
cmp
and
inc
adc
mov
adc
retf
add
lods
sti
xchg
adc
int3
in
lock
(bad)
jo
or
adc
sub
sbb
jno
js
test
push
loopne
inc
repnz
add
or
call
jno
pop
xchg
push
xchg
test
pop
adc
sar
xchg
sub
pusha
sbb
or
push
adc
push
pop
fwait
mov
mov
mov
sbb
movs
sbb
js
xchg
jg
shl
test
shr
rcr
xchg
out
xchg
mov
mov
les
mov
repnz
and
pop
and
push
ret
hlt
inc
add
adc
push
mov
out
test
pop
aam
test
pop
push
mov
mov
or
arpl
or
movs
mov
xchg
inc
inc
jl
inc
(bad)
jmp
aam
mov
sti
mov
lods
fcom
pop
dec
jmp
mov
popa
sar
sar
sbb
test
xchg
das
add
shl
push
cld
dec
mov
ins
(bad)
(bad)
fisub
add
mov
arpl
dec
push
aas
mov
ds
fwait
out
push
jg
fist
popf
mov
scas
ins
iret
repnz
mov
into
push
jbe
outs
sub
mov
into
cmps
and
mov
call
mov
bndstx
stos
pop
lods
(bad)
imul
sar
imul
add
jo
mov
push
imul
hlt
lahf
inc
div
pop
xchg
mov
ss
pop
pop
jmp
and
and
rol
loop
jo
xor
popa
fs
into
pushf
test
lock
ret
fstp
or
pusha
call
cmp
mov
(bad)
jecxz
std
(bad)
inc
cli
xor
xchg
and
and
repz
mov
stos
sub
(bad)
push
inc
jmp
repnz
and
sti
jae
outs
pop
mov
(bad)
movs
sub
and
push
push
hlt
rol
xacquire
movs
cmps
mov
jecxz
inc
and
mov
inc
mov
push
xchg
movs
dec
imul
cmp
cmp
fmul
push
addr16
jmp
popa
dec
pop
cld
jbe
fs
in
daa
sbb
xchg
in
inc
stos
xchg
mov
sub
in
loopne
scas
scas
or
xchg
test
jbe
sbb
outs
inc
retf
and
xlat
into
icebp
mov
movs
test
add
enter
sahf
cs
aaa
pop
sub
xor
int
mov
addr16
adc
fmul
dec
sbb
inc
mov
inc
pusha
nop
fisubr
mov
fsubr
sub
or
sti
mov
jne
or
test
lods
enter
(bad)
enter
mov
pop
or
dec
mov
push
cmc
sbb
(bad)
push
xor
mov
aas
jmp
xchg
mov
neg
pop
mov
inc
add
or
cmc
cmp
pusha
into
push
cmp
ficomp
xor
popa
cdq
add
sub
mov
out
in
mov
hlt
mov
xor
or
arpl
lock
xor
or
imul
add
mov
mov
inc
bound
fcmovnbe
sbb
leave
cmc
sbb
arpl
xchg
inc
mov
call
mov
mov
in
jp
mov
push
retf
xlat
ficom
xchg
repz
jae
jmp
pop
cmc
xor
mov
ret
push
mov
out
xor
and
pop
jecxz
or
and
pop
call
mov
std
not
outs
inc
push
cli
or
std
aad
inc
ds
or
std
push
mov
xchg
sub
cmps
sahf
shl
cmps
dec
mov
repz
or
in
scas
inc
mov
or
stos
inc
cmps
imul
loop
push
cmps
out
sti
and
sar
test
inc
out
jg
dec
inc
sbb
mov
adc
in
movs
push
icebp
mov
std
fldenv
imul
adc
pop
pushf
xchg
das
pop
cs
mov
jp
sub
mov
or
repnz
xor
or
in
sub
jge
adc
cmp
(bad)
and
pop
mov
jmp
jb
retf
lods
jmp
mov
in
scas
movs
and
out
dec
xor
cwde
pop
push
add
sub
lahf
fst
mov
retf
test
xor
and
pop
loopne
pop
gs
jle
dec
jb
in
imul
mov
daa
shl
aaa
or
mov
ror
enter
nop
mov
inc
(bad)
les
xchg
and
aam
jo
fiadd
mov
pop
(bad)
push
addr16
push
and
cld
adc
test
sbb
cmps
push
pop
cmp
fsub
xor
push
stos
pop
xor
fldenv
push
mov
push
pop
gs
adc
into
loope
(bad)
pop
retf
call
aam
aam
add
dec
js
push
js
fwait
cmc
imul
loop
xchg
je
cmp
sahf
daa
push
mov
sub
mov
fldlg2
pop
lods
es
leave
(bad)
mov
(bad)
mov
jmp
and
out
jl
pop
and
jns
inc
movs
push
and
sub
out
inc
lods
xor
or
jle
mov
fnstenv
mov
xlat
add
mov
adc
(bad)
mov
mov
test
mov
addr16
sbb
and
leave
sbb
push
rol
sar
push
xor
not
cs
pusha
fwait
push
cmp
jne
repz
jp
addr16
mov
shl
inc
lods
test
xchg
inc
sbb
push
outs
aad
ror
mov
(bad)
mov
and
push
imul
test
inc
into
xor
mov
int3
fist
in
fnstenv
into
es
and
jae
ret
les
mov
xchg
dec
mov
(bad)
nop
mov
cmp
sub
add
dec
gs
fucomp
push
ficomp
fdivp
push
mov
cld
aad
ret
dec
jbe
push
adc
aas
push
add
adc
imul
addr16
add
sahf
js
pop
stos
cmc
cld
or
(bad)
lock
mov
mov
outs
iret
ja
jge
or
jnp
imul
ds
cmp
jmp
es
jecxz
(bad)
in
popf
mov
div
movs
push
push
add
push
jbe
jp
push
fmul
or
or
add
and
jmp
adc
(bad)
jecxz
push
cs
xchg
and
test
iret
aam
fucomip
pop
adc
(bad)
cmps
adc
lahf
cmps
xor
jge
je
cmp
mov
push
sbb
mov
fld
xchg
push
or
fbstp
mov
pop
push
fisttp
adc
inc
fistp
xor
call
stos
mov
js
mov
aaa
and
jle
mov
add
push
fistp
push
dec
or
mov
cli
mov
xor
stos
ja
jp
(bad)
loope
rcr
lock
xchg
std
dec
int
dec
or
pop
dec
jg
scas
(bad)
lods
(bad)
push
and
hlt
out
push
push
push
add
push
cmp
or
mov
loop
jg
(bad)
loop
sbb
pop
cmp
pop
dec
sub
sahf
mov
pop
dec
inc
mov
push
adc
test
iret
test
mov
pop
out
dec
ret
jmp
leave
jge
ds
popf
mov
mov
sub
cmp
mov
cmp
cmp
movs
add
sub
retf
sbb
vpmaxsw
loop
ja
sub
xchg
outs
in
ficomp
jae
fwait
sbb
out
ja
pop
test
sub
enter
repnz
sbb
sahf
and
push
ins
cmp
and
aas
add
dec
imul
repnz
retf
iret
loop
hlt
out
jl
push
lods
jg
mov
ret
loopne
test
outs
xor
mov
xchg
das
lock
push
sbb
outs
ret
or
out
les
or
cli
or
iret
sahf
and
sub
jmp
in
jnp
add
push
popf
adc
(bad)
retf
out
dec
mov
imul
cmp
pop
mov
adc
pop
ins
adc
in
push
fdiv
mov
cli
lds
fcom
dec
lods
pop
cld
pop
inc
inc
lahf
cs
add
mov
lods
loopne
dec
lock
sub
mov
add
pop
xor
rcl
pop
mov
cmp
inc
sahf
and
jg
jmp
push
imul
mov
push
ret
mov
pop
jmp
loopne
inc
adc
and
arpl
cmps
ja
rol
cmps
pop
inc
mov
stos
in
cli
call
cmp
fcomp
inc
out
fiadd
sub
in
sbb
dec
call
cmp
outs
cmps
sbb
out
xor
mov
mov
dec
push
pop
out
and
pop
or
adc
fnsave
fisubr
js
xchg
jmp
or
pusha
aam
add
icebp
and
dec
cs
dec
cwde
dec
sbb
sub
pop
cmp
sar
or
loop
ret
int
fsubrp
adc
scas
xchg
movs
xchg
es
dec
mov
movs
sub
pop
xchg
(bad)
neg
inc
(bad)
fndisi(8087
test
ss
sub
aas
jp
(bad)
shr
(bad)
add
repnz
inc
adc
xchg
lods
sti
cmps
int3
jae
lock
aad
jmp
mov
jl
sbb
(bad)
out
inc
je
mov
xlat
clc
pop
and
mov
pop
outs
lods
cmp
fild
inc
scas
cld
ins
(bad)
xchg
loope
jae
pop
int
mov
xor
sub
in
add
jns
mov
xchg
ins
xchg
in
cmps
mov
clc
imul
pop
std
xor
cmc
mov
and
pop
mov
sub
das
in
xor
(bad)
jge
test
mov
inc
dec
push
not
ins
lahf
retf
jle
mov
(bad)
mov
push
idiv
arpl
mov
clc
cmp
std
int3
pop
scas
pop
enter
in
jbe
xor
std
push
mov
jmp
(bad)
imul
mov
jmp
cmc
mov
aaa
ja
paddw
add
imul
(bad)
cmc
cli
clc
dec
ret
jmp
dec
sahf
and
out
into
lods
je
icebp
inc
xor
cmps
mov
mov
fistp
and
and
pslld
stos
push
es
mov
(bad)
in
jle
dec
clc
cmp
div
cwde
mov
mov
dec
(bad)
adc
dec
xchg
aam
pop
adc
fwait
push
sbb
xchg
add
xchg
add
mov
cwde
rol
push
pop
mov
pop
ds
ins
out
and
scas
jecxz
jns
test
shl
jge
pop
jp
mov
and
shl
retf
sub
xchg
ins
lods
push
hlt
or
lods
inc
xor
jl
mov
popa
dec
or
mov
cwde
xlat
outs
jle
lods
pop
and
sub
push
in
xchg
dec
xor
xchg
inc
jmp
ret
cmp
xor
fs
jae
or
fstp
add
cmp
ins
loopne
jo
xor
xchg
jg
daa
dec
shl
push
jnp
inc
sub
shl
daa
lds
outs
sub
and
push
jo
jmp
(bad)
jl
mov
sbb
mov
adc
sub
fist
xor
loop
mov
lahf
mov
inc
pop
pop
and
xor
xor
rol
add
jo
push
sar
loop
push
jg
sub
(bad)
or
std
xchg
sahf
mov
jne
jbe
pop
call
mov
sub
rcl
jo
xor
jp
xchg
js
mov
outs
(bad)
mov
sub
imul
pop
ins
or
add
imul
cwde
xchg
and
pop
stc
jmp
dec
add
or
call
xchg
xor
mov
stc
retf
or
jo
jge
mov
xchg
lock
aaa
mov
fbld
mov
sar
cwde
mov
mov
(bad)
cmp
push
mov
(bad)
cmp
hlt
pop
inc
dec
test
fisttp
jp
loope
out
and
lods
inc
(bad)
jl
mov
out
xor
sub
lods
push
lea
das
and
xchg
xchg
and
push
mov
mov
sbb
push
pop
test
add
or
or
(bad)
xor
sbb
mov
popf
pop
retf
mov
pop
outs
jbe
sbb
xor
aaa
and
mov
mov
pop
adc
jne
add
rol
sbb
pop
stos
pop
push
retf
retf
adc
cmp
fsub
or
out
adc
pop
cmp
adc
xchg
dec
fidiv
add
add
sub
addr16
repz
(bad)
sbb
pop
arpl
call
add
dec
xchg
int3
cmp
pop
(bad)
xlat
add
push
add
repnz
sub
xchg
dec
pop
mov
cli
int
jae
push
icebp
add
mov
cmp
xchg
pushf
mov
loop
xor
daa
add
retf
test
cmp
mov
pop
jle
loop
movs
xchg
jle
movs
hlt
ins
pop
jo
das
fnstsw
movs
or
add
(bad)
jo
mov
fdivr
lea
icebp
jno
xor
es
je
(bad)
jnp
pop
mov
ins
sub
cli
ins
sub
xchg
inc
sub
push
retf
fucomip
imul
pop
(bad)
pop
inc
and
and
jmp
dec
cli
dec
inc
mov
add
inc
or
cmp
xchg
sub
and
sbb
ja
mov
dec
int
pop
xor
jl
aad
imul
xor
fstp
adc
jge
repz
or
push
push
das
rol
mov
mov
std
fdiv
aad
inc
pop
lds
inc
fimul
lock
lds
fdivr
jmp
pop
xor
sbb
cmp
push
inc
inc
aam
sahf
cmp
inc
out
mov
out
arpl
xor
dec
dec
out
pop
into
(bad)
repnz
jmp
std
nop
sub
push
fs
ins
sbb
inc
dec
mov
loopne
xor
mov
inc
sar
fndisi(8087
push
xor
sub
jp
into
(bad)
pop
mov
and
rcl
sub
jns
cmp
enter
and
loopne
shl
and
out
nop
int
loop
hlt
mov
(bad)
xchg
add
inc
push
test
cmp
and
add
outs
cmp
mov
and
xlat
mov
fdivr
(bad)
cvtpi2ps
inc
mov
or
dec
sahf
sub
cs
pop
jl
mul
add
in
or
mov
pop
ins
in
in
aaa
stc
shl
outs
xchg
test
sub
cs
cdq
out
enter
jnp
sbb
mov
lods
pop
ins
jge
add
jns
out
xchg
mov
add
xchg
push
mov
cmp
loopne
jno
dec
scas
mov
cmp
xor
adc
dec
rcr
fldcw
or
add
sub
mov
fist
and
xor
fst
rol
and
sbb
jecxz
push
aad
icebp
outs
fidivr
mov
cmp
gs
cmps
int3
ins
in
push
push
arpl
xchg
in
fneni(8087
in
bound
cs
mul
fcom
daa
cwde
repz
retf
cmps
inc
sub
inc
inc
dec
pusha
push
mov
push
xchg
retf
(bad)
pusha
push
and
or
pop
pop
inc
pop
cmp
scas
mul
cwde
cmp
daa
cmp
cmp
cmp
daa
ins
iret
xor
mov
add
lahf
and
or
and
ror
mov
push
icebp
jno
and
adc
cwde
in
and
sub
jo
inc
or
(bad)
mov
inc
adc
arpl
xchg
push
push
cmp
mov
mov
and
push
inc
push
pop
clc
test
inc
or
inc
and
pop
xor
fisubr
jle
ja
xor
sub
xchg
adc
or
sub
push
outs
dec
mov
mov
jle
sbb
fwait
cld
hlt
call
dec
push
mov
jge
sbb
add
inc
mov
push
jge
push
push
xchg
adc
mov
xchg
test
cli
rol
mov
and
mov
nop
and
retf
scas
outs
ret
test
xchg
movs
and
add
pop
ins
mov
push
popf
or
icebp
hlt
push
jo
iret
into
or
lock
xlat
lea
(bad)
retf
(bad)
pop
add
or
sahf
mov
rol
das
pause
inc
jecxz
imul
fidiv
pop
or
jmp
test
xor
lods
sbb
rdpmc
and
ds
sbb
or
popa
cmp
ret
fdiv
aaa
mov
ds
ja
and
ret
adc
cmp
sbb
sbb
dec
inc
mov
xchg
in
je
pop
out
dec
fsubr
inc
pusha
or
jo
inc
adc
adc
xor
dec
mov
inc
das
out
or
xor
jae
mov
daa
(bad)
cdq
push
jnp
xchg
jg
pop
or
or
push
and
or
in
imul
mov
or
sbb
pop
aad
popf
or
sbb
jmp
addr16
call
out
jb
cld
adc
das
addr16
out
clc
and
nop
imul
sub
out
xchg
in
jmp
sbb
sub
xchg
pusha
fnsave
into
mov
shr
vmovaps
or
cmps
hlt
push
cmc
test
inc
push
xchg
pop
adc
ja
or
fidivr
adc
mov
xchg
inc
sbb
fstp
jmp
pop
dec
jb
adc
pusha
push
cmp
inc
push
xor
in
xchg
mov
(bad)
mov
mov
pop
pop
mov
push
pop
cdq
daa
ins
mov
mov
adc
ret
stos
fnstcw
adc
jne
cmp
cmp
hlt
adc
inc
adc
adc
jnp
loop
jge
jae
popf
bound
or
cmps
jno
and
cmp
mov
push
sub
sbb
mov
mov
fld
inc
pop
bswap
inc
push
fnstcw
inc
mov
mov
jbe
movs
in
cmp
ins
push
cmps
dec
fimul
push
jne
adc
daa
movhps
jle
clc
outs
hlt
and
gs
adc
ret
test
push
mov
aas
adc
fiadd
mov
and
push
pop
mov
ds
sub
xchg
cmp
cdq
std
test
xchg
and
mov
imul
sub
jbe
popf
out
sbb
out
aas
fimul
out
daa
test
lds
int3
mov
and
push
pop
mov
sbb
push
ja
pop
mov
jnp
jns
es
mov
sub
push
mov
dec
leave
inc
xor
add
hlt
push
sub
xchg
fdiv
scas
xchg
icebp
(bad)
mov
popf
retf
adc
pop
pop
dec
(bad)
push
jmp
inc
push
mov
adc
js
fucomip
leave
dec
cdq
hlt
(bad)
hlt
xor
out
test
push
fidiv
adc
xchg
int
pop
add
ja
xchg
xchg
sub
dec
jg
sub
or
add
mov
pop
and
push
repz
call
adc
lds
cmps
movs
jecxz
fild
into
add
mov
xchg
xchg
scas
int
add
sbb
ds
mov
cmp
test
outs
pop
sbb
pop
lods
or
stc
mov
das
pop
cmps
ins
dec
pop
(bad)
or
fimul
shl
les
ret
(bad)
mov
cli
inc
inc
ret
clc
ins
xor
jp
inc
bound
mov
arpl
and
sbb
add
inc
add
push
lods
or
inc
ins
lahf
repnz
mov
icebp
push
add
adc
stc
push
clc
xchg
stc
loope
dec
adc
cmp
sbb
lea
scas
add
cmp
push
out
sub
adc
pop
test
add
mov
sub
fldcw
ds
push
loope
ficom
sub
dec
or
mov
inc
test
pop
jecxz
out
dec
call
inc
sbb
xor
xchg
sbb
shl
mov
in
jg
and
outs
sbb
mov
mov
adc
and
loopne
ret
fld
pop
fmul
xor
or
mov
outs
add
jns
xchg
push
mov
inc
fdiv
pop
jg
mov
clc
ret
pop
xor
outs
mov
cli
add
mov
test
ja
fdiv
jo
and
fmul
mov
add
cdq
adc
xchg
fwait
movs
icebp
rcl
or
dec
(bad)
fdiv
mov
sub
scas
loope
mul
jle
imul
inc
vmread
repz
dec
in
dec
xchg
repz
je
xor
xor
inc
pushf
call
mov
sub
les
aas
je
jp
xor
and
daa
xchg
pop
leave
lahf
add
(bad)
(bad)
(bad)
aaa
into
xchg
mov
js
xchg
dec
aam
xchg
shl
jb
pop
test
rcr
scas
fisttp
jno
pop
inc
jl
sbb
mov
adc
cmp
or
sub
mov
ret
loopne
mov
xchg
sub
mov
xchg
cwde
cmp
sbb
sub
lock
popf
pop
sbb
and
add
add
jb
aaa
mov
lock
adc
clc
sbb
fcmovbe
or
inc
data16
xor
fiadd
jge
mov
(bad)
xor
test
fbstp
cmp
movs
jae
jmp
push
cmp
pushf
sar
push
daa
std
or
aam
pusha
into
pushf
mov
cmp
addr16
sub
movs
push
or
loopne
lds
mov
xchg
jmp
push
mov
push
sub
pop
rol
sub
xchg
pushf
data16
jo
aam
fisub
pop
scas
cs
lock
pop
mov
movs
mov
(bad)
inc
sub
js
or
jnp
es
xchg
ins
mul
dec
arpl
(bad)
addr16
mov
bound
push
jg
mov
nop
xchg
test
jbe
and
out
jo
jns
mov
jns
out
or
popf
call
cwde
test
(bad)
push
ins
pusha
lods
js
hlt
pop
scas
inc
int
out
stc
jbe
inc
inc
xchg
int3
fcom
and
pop
mov
mov
xchg
mov
mov
enter
out
call
xor
out
mov
in
adc
add
js
jl
test
lahf
push
cmp
aad
adc
add
fistp
adc
leave
inc
jge
xchg
call
fs
jnp
ja
(bad)
push
loope
or
cld
leave
adc
ret
ret
xchg
and
mov
dec
push
add
mov
pop
loop
pop
test
mov
dec
xchg
and
inc
pop
pushf
(bad)
int3
mov
add
rol
sahf
bound
fmul
mov
xchg
idiv
jp
cli
mov
pushf
sub
jo
fadd
and
adc
fcom
xchg
leave
sub
cld
aas
in
shl
add
daa
inc
test
push
scas
les
xchg
inc
fist
adc
mov
pop
add
sub
call
or
sbb
add
(bad)
into
xchg
xchg
and
mov
push
pop
retf
outs
cmp
dec
mov
fiadd
int3
pop
pop
fidiv
inc
in
xor
pop
addr16
or
jne
ins
call
jp
inc
mov
push
or
scas
sub
or
jp
and
aaa
popf
mov
cdq
jge
sbb
add
out
bound
fnstsw
add
push
les
test
aaa
sbb
jb
xchg
jb
sahf
sbb
fist
in
fs
pop
and
xchg
daa
pop
jbe
push
je
mov
shl
stos
adc
jb
stos
popf
mov
pop
test
and
push
jb
daa
cmps
stos
mov
push
(bad)
in
enter
xor
loop
jnp
rol
(bad)
mov
aaa
xor
pop
pop
lock
rol
imul
outs
(bad)
in
stc
ja
repz
fist
and
push
pop
repnz
mul
pop
imul
popa
das
fidivr
add
mov
je
ror
xchg
ficomp
push
enter
xor
dec
sub
mov
iret
lahf
ss
je
fisubr
jl
icebp
mov
(bad)
out
mov
push
sub
mov
xchg
test
pop
xchg
and
xchg
sub
and
push
cwde
jo
(bad)
and
xchg
or
dec
push
push
retf
ret
repnz
pushf
pop
mov
inc
mov
pop
pop
sub
add
cmps
add
jmp
addr16
pop
fidiv
out
dec
pop
aas
je
mov
sti
pop
pop
cmc
add
test
pop
or
aad
pop
sti
pop
fsub
mov
(bad)
jae
ds
cmp
sub
loopne
jl
jb
mov
cdq
scas
loope
push
lahf
arpl
(bad)
out
(bad)
imul
lds
outs
out
loop
mov
dec
std
pop
loop
sub
mov
cld
repz
icebp
and
(bad)
call
push
dec
mov
(bad)
mov
(bad)
mov
int
cwde
(bad)
inc
xchg
fcmovne
xchg
xchg
icebp
lahf
lods
retf
call
in
mov
aad
fst
in
(bad)
mov
jg
push
std
mov
jl
jl
jge
mov
scas
cli
push
ret
repz
idiv
fsubp
inc
mov
out
push
scas
ret
fmul
(bad)
mov
scas
mov
or
fidivr
(bad)
(bad)
push
pop
out
std
add
pmaddwd
scas
stc
fistp
jmp
clc
jmp
cmp
push
cmps
push
jge
in
sub
aad
in
addr16
dec
jnp
ret
pslld
inc
pop
push
sub
stos
xor
push
std
scas
jb
hlt
cmp
cld
cmps
in
xchg
push
fdivr
test
frstor
sub
push
jp
retf
pop
xchg
jae
retf
pop
jno
cmc
leave
clc
mov
xlat
je
sti
lds
jmp
mov
repnz
imul
sti
xchg
cld
retf
idiv
pop
cmp
mov
mov
mov
pop
jns
xchg
jg
push
hlt
sub
sbb
popa
mov
movs
lock
mov
neg
mov
sar
push
std
jle
cli
xchg
call
into
sar
call
mov
out
mov
popf
std
pop
fld
sti
call
sahf
dec
aas
mov
mov
sub
hlt
pop
jbe
mov
jnp
loop
and
test
lahf
lods
pmuludq
jle
push
jmp
test
cmc
(bad)
push
out
std
xchg
int3
or
lahf
repz
outs
out
jmp
(bad)
pusha
mov
sub
aas
mov
jg
push
mov
push
mov
pop
and
cmc
mov
iret
mov
mov
push
retf
push
jbe
jbe
mov
arpl
sbb
dec
es
shl
dec
mov
popf
or
inc
mov
cmc
cld
dec
jg
outs
sub
inc
xchg
ret
push
je
and
in
inc
inc
xchg
jge
sti
sar
lods
fs
and
sbb
sbb
pop
aaa
loop
mov
cmps
ds
xor
lock
int
inc
(bad)
jg
clc
jb
mov
xchg
xchg
add
mov
xor
cmc
(bad)
cdq
adc
sbb
enter
or
cmp
cmp
pop
int3
hlt
popa
icebp
js
(bad)
int3
ret
mov
sub
adc
mov
je
jne
jmp
dec
xor
push
(bad)
pop
dec
ins
loope
mov
pop
inc
test
xchg
inc
push
sbb
jle
mov
pop
adc
mov
cmp
sbb
gs
aad
aaa
mov
int3
aad
sar
call
retf
jae
jb
loope
fistp
into
cld
jg
mov
mov
js
cld
mov
pusha
pop
jp
test
cmp
mov
pop
ret
lea
add
mov
es
mov
cmps
pushf
xor
test
add
cs
mov
jbe
(bad)
aaa
sbb
mul
loop
add
jae
and
push
add
call
aad
arpl
sub
sub
and
xor
(bad)
popa
or
sbb
and
dec
fdivr
cmp
daa
in
pop
mov
sbb
sub
pop
pusha
int3
mov
xchg
mov
(bad)
inc
jl
mov
das
fisubr
xchg
or
pop
in
adc
mov
loopne
iret
fisub
and
mov
mov
or
cmps
out
pushf
mov
xor
push
jmp
fmul
mov
(bad)
cld
adc
add
xchg
lock
mov
adc
push
dec
and
outs
inc
in
mov
aad
movs
xchg
outs
xor
loope
pop
or
mov
mov
in
das
test
dec
mov
xchg
jg
jne
inc
call
mov
(bad)
jmp
sbb
sti
push
xor
pop
arpl
sbb
cld
arpl
repnz
stos
outs
xchg
dec
xchg
call
cmp
fbld
call
lods
lea
adc
mov
aas
or
scas
adc
or
mov
leave
clc
push
jmp
js
sbb
jbe
cmp
mov
mov
ds
in
fisubr
inc
sbb
out
and
mov
push
aas
sub
std
shl
jle
or
mov
or
neg
xchg
inc
gs
mov
sub
pusha
(bad)
sbb
mov
(bad)
fistp
pusha
sub
jns
xchg
ret
int3
out
fdivrp
push
aas
or
add
lock
xchg
lock
jl
sub
mov
add
pop
cmc
loope
mov
sbb
push
lahf
sbb
xchg
popa
push
lods
lahf
xor
call
adc
mov
mov
inc
xor
mov
push
cmc
test
pop
sahf
or
pop
adc
neg
fs
ds
sub
(bad)
addr16
pop
test
cmps
movs
imul
test
lea
sbb
outs
test
call
cs
mov
cmp
pop
lds
push
pop
loopne
aas
dec
cmc
ret
scas
ret
jmp
add
lods
in
stos
sub
push
add
xchg
or
adc
arpl
mov
(bad)
je
(bad)
shl
retf
push
fadd
mov
mov
push
retf
pusha
mov
jmp
sbb
daa
xchg
fwait
iret
fisub
add
jae
jge
into
test
xor
xor
add
into
sti
inc
jecxz
lea
(bad)
aas
ret
imul
ins
fmul
mov
lds
sub
xchg
adc
push
lods
sbb
cmp
add
xlat
jle
outs
inc
pop
or
mov
sbb
int3
call
fidivr
fnstcw
and
popa
push
add
fsub
lds
enter
fistp
dec
cmp
aad
add
inc
pop
and
pop
ins
sub
add
cmp
lods
push
cmp
or
test
or
repz
hlt
das
arpl
sub
neg
ret
xor
jbe
inc
mov
into
call
xor
outs
xor
(bad)
sub
mov
add
loop
int3
dec
dec
jl
dec
je
inc
repz
hlt
xor
and
pop
jne
imul
and
pop
and
xlat
jae
aad
cmps
mov
cmp
xchg
nop
movs
data16
in
ror
jmp
ins
jb
dec
scas
fs
adc
icebp
nop
shl
(bad)
inc
pop
xor
mov
add
ins
or
out
ins
lds
sbb
and
fcmovnu
pop
loope
mov
cbw
je
fwait
(bad)
arpl
ins
popa
xor
sti
jmp
popf
cmc
iret
inc
and
jmp
das
mov
sbb
dec
mov
into
dec
sbb
das
xor
pop
repz
jns
inc
or
or
or
mov
xor
jmp
test
sahf
dec
ds
scas
mov
(bad)
ror
jns
or
pop
imul
pop
inc
xchg
lock
push
rcl
push
loope
jecxz
pop
fisttp
mov
ds
es
inc
setl
push
cmp
cs
push
sub
cmp
lahf
adc
push
mov
or
loope
cs
or
in
inc
sub
(bad)
es
jnp
loope
lock
mov
fcom
xor
adc
inc
mov
mov
push
repnz
test
dec
mov
sub
test
enter
or
(bad)
xchg
jno
stos
pop
arpl
fidiv
jp
push
xchg
jae
jge
repnz
cdq
mov
pop
cwde
mov
and
xchg
std
mov
add
mov
push
mov
pop
dec
ficom
aas
stos
xchg
cwde
dec
mov
jecxz
test
sub
pop
loope
mov
dec
pop
aad
mov
add
in
sub
or
and
pop
je
xchg
mov
sub
inc
xchg
fs
sub
daa
jmp
xchg
cmp
xor
sar
popf
mov
adc
repz
pop
in
rcr
jnp
inc
in
out
sbb
call
mov
fist
push
div
aaa
cmp
xor
sub
cmp
pop
and
dec
gs
mov
ret
push
(bad)
push
aaa
mov
out
fistp
(bad)
and
movs
movs
ins
stc
pop
and
neg
mov
shl
repz
cld
jecxz
push
push
sahf
call
(bad)
dec
xchg
pop
sub
enter
mov
pop
xlat
inc
or
pop
xchg
rcl
jno
or
leave
loop
pop
repz
mov
(bad)
xchg
sbb
mov
sahf
jbe
test
into
fisttp
fist
nop
pop
ret
or
in
cld
je
pop
jmp
push
cmp
ss
(bad)
les
(bad)
outs
imul
ins
pusha
ret
fdivr
dec
pop
mov
mov
call
ret
fldcw
mov
sbb
mov
add
test
leave
lods
pop
sahf
js
pop
xchg
cmps
dec
mov
sub
jnp
push
pop
push
jl
push
mov
(bad)
lods
rol
mov
stos
mov
icebp
jmp
adc
inc
stos
add
(bad)
pop
mov
pop
and
int
fidiv
mov
loop
sub
xchg
stc
inc
cmps
ror
mov
in
adc
dec
(bad)
pusha
pop
jns
cmc
inc
push
test
dec
ja
inc
ss
in
pop
pop
fbld
(bad)
sub
push
pop
mov
sti
sub
rcr
jo
leave
and
das
call
push
shl
jns
aam
mov
lods
add
xchg
test
cdq
xchg
lds
pop
inc
lahf
imul
jnp
das
outs
imul
mov
xor
mov
ficomp
icebp
cmps
dec
in
pop
or
sar
push
adc
(bad)
fcom
cli
and
iret
stos
cmp
add
test
aad
pop
aad
mov
dec
stos
cmp
pop
repnz
mov
repz
push
jecxz
pop
das
inc
mov
pop
cmps
fsub
pop
jp
and
ret
inc
cmps
jae
mov
mov
fist
test
inc
jne
push
xor
repnz
adc
loop
or
push
out
fbld
pop
adc
mov
int3
addr16
out
enter
rol
out
fucomp
std
push
and
push
call
out
movs
mov
retf
or
mov
in
addr16
neg
cmp
pop
aam
push
jne
push
daa
out
mov
je
add
xchg
xchg
call
push
ins
dec
xchg
scas
jo
rol
pusha
shr
mov
mov
push
and
sti
fwait
mov
sbb
mov
add
pushf
repz
add
fmul
push
cmp
cmp
sahf
cmp
xchg
gs
in
mov
inc
xor
ins
or
je
pop
push
add
mov
dec
nop
loop
xor
jl
jo
mov
shl
fwait
es
pop
mov
inc
into
sub
test
addr16
mov
dec
mov
and
dec
int3
pop
jl
pop
jbe
and
int3
dec
adc
mov
ret
cmp
push
scas
xchg
call
pop
pop
cmp
mov
xchg
mov
mov
jmp
test
cmp
adc
(bad)
cmc
lods
cld
xchg
sub
mov
(bad)
mov
lods
cmp
popa
inc
mov
pop
inc
inc
push
hlt
xchg
sahf
adc
push
add
mov
inc
out
push
ja
les
pop
push
scas
sub
and
loope
add
movs
pop
ret
sbb
call
or
aaa
push
mov
fs
mov
inc
xchg
push
or
repnz
out
jge
inc
dec
mov
test
imul
hlt
in
in
pop
sbb
leave
or
adc
and
mov
cmp
dec
xor
cdq
xchg
push
jge
nop
std
xchg
sub
iret
fcmovne
call
push
(bad)
scas
xlat
cdq
pop
push
std
retf
inc
cmp
ins
pushf
retf
pop
add
jnp
add
sbb
jmp
bound
pop
fnstsw
cmp
inc
sbb
ja
(bad)
cmp
inc
mov
dec
movs
cmp
(bad)
leave
leave
ja
(bad)
mov
lock
nop
repnz
mov
mov
inc
daa
dec
and
cmp
dec
iret
mov
ret
(bad)
sbb
fisttp
jl
fcomp
cmps
jns
mov
xchg
pop
(bad)
mov
hlt
neg
sbb
stos
and
clc
imul
ret
and
stc
sub
push
add
jnp
(bad)
xchg
jno
add
pop
paddusw
cwde
nop
mov
jmp
jno
ss
dec
jns
scas
add
dec
mov
pusha
cmp
fisub
addr16
adc
push
stc
lds
cmp
retf
out
neg
xchg
imul
mov
mov
cmps
jge
jae
and
mov
inc
std
addr16
cmp
int3
sbb
cmp
cmps
jne
test
or
pop
ret
adc
scas
inc
outs
aas
add
pop
xor
push
cs
mul
mov
sbb
dec
out
rcl
daa
pop
sbb
fldenv
mov
sahf
push
inc
sbb
je
call
push
cdq
cmp
ret
add
push
jge
push
inc
test
inc
jne
adc
pop
popa
daa
aam
(bad)
iret
lahf
cmp
ss
push
sbb
xor
mov
xchg
or
out
mov
mov
pop
inc
or
rol
mov
xchg
and
mov
out
cmc
or
or
scas
lds
xchg
mov
xor
psraw
push
sub
out
or
popf
mov
and
gs
std
cmp
pop
mov
fld
xchg
std
sti
dec
shr
xlat
aas
or
cmp
sbb
call
mov
lods
xor
rcl
or
cmps
imul
jmp
push
ja
not
push
in
retf
sbb
in
mov
ds
imul
cmp
mov
mov
movs
test
mov
xor
hlt
dec
leave
lahf
aas
jl
xor
xchg
xchg
and
pop
pop
mov
ds
fbld
repz
mov
mov
dec
push
push
pop
bound
out
mov
jbe
xchg
(bad)
in
adc
cli
cmp
fstp
pop
bnd
add
mov
push
ja
ror
xor
dec
cmc
xor
mov
popa
ins
lock
cmp
int
or
rcr
out
and
sbb
loop
out
imul
push
mov
sub
mov
mov
sahf
outs
out
push
jge
xchg
in
pop
xchg
retf
jnp
xchg
push
lahf
cli
mov
add
mov
aad
pop
sub
mov
dec
neg
mov
and
shl
(bad)
outs
dec
fwait
ja
fs
and
and
addr16
pop
jl
mov
inc
and
sbb
dec
dec
jle
xor
cmp
in
add
pop
mov
mov
xchg
add
nop
inc
in
fwait
lods
lods
cld
popa
sub
and
sbb
repnz
sub
mov
test
push
(bad)
adc
pop
loope
jmp
dec
sub
int
int3
cmp
xor
out
inc
push
das
in
sub
popa
sbb
sub
adc
(bad)
mov
mov
mov
xchg
cmp
and
inc
cmps
and
add
mov
pop
sti
mov
cdq
and
sub
imul
ss
nop
inc
inc
inc
scas
loope
in
push
push
sbb
fsub
stos
pop
push
push
ficomp
push
les
pusha
cli
xor
out
fistp
mov
pop
pop
jae
cmp
mov
(bad)
bound
sbb
pusha
dec
cs
mov
mov
mov
sar
ror
(bad)
xchg
or
mov
cs
dec
lea
lods
xor
neg
fldenv
fsubr
pop
fs
jmp
jne
lea
inc
cmps
push
sbb
sti
test
adc
cmp
xchg
lods
sbb
push
outs
fiadd
in
mov
mov
xchg
sbb
pop
mov
adc
add
fidivr
mov
out
fidiv
ins
or
(bad)
cwde
sub
(bad)
mov
fisubr
cmps
inc
sbb
cmps
and
in
jns
or
nop
ins
stos
dec
rcl
in
sahf
jmp
hlt
inc
push
lods
inc
adc
mov
daa
sbb
cmp
sbb
xor
jbe
ins
mov
outs
sbb
cmps
ins
fs
inc
push
ins
iret
cmp
pushf
pop
cmp
fs
test
jns
jne
xchg
dec
sub
xor
add
fistp
aaa
push
sub
jbe
sbb
mov
mov
nop
scas
repnz
and
pop
mov
test
shl
ja
mov
xor
mov
mov
dec
sbb
mov
push
aad
sub
ins
imul
jmp
out
fnstenv
lods
in
and
test
mov
ins
jns
loop
ret
jno
xchg
lahf
jecxz
clc
dec
test
xchg
xlat
mov
push
pop
mov
sti
inc
cmp
adc
cdq
sbb
sbb
mov
cwde
xchg
nop
imul
loop
(bad)
test
xchg
add
fisubr
retf
adc
(bad)
pop
sbb
test
mov
xor
and
sub
movs
mov
xor
(bad)
call
cmpps
pop
cld
xor
pop
xor
shl
call
jbe
(bad)
jge
lods
stos
pop
pusha
jp
test
addr16
scas
sbb
ror
(bad)
jmp
int
xchg
xchg
mov
and
addr16
inc
xlat
dec
push
add
repz
mov
cwde
aaa
inc
add
push
addr16
pop
test
imul
sbb
xchg
sahf
cmc
cld
xchg
ins
jecxz
add
xor
(bad)
xor
adc
ret
je
hlt
aad
jmp
popf
cmp
or
test
jno
mov
(bad)
jmp
punpcklwd
retf
jge
sbb
sub
call
and
mov
pop
mov
movs
cld
fldl2e
mov
int
dec
pusha
(bad)
(bad)
add
and
ins
sub
push
pop
mov
xchg
(bad)
mov
retf
pop
mov
jecxz
sub
xchg
je
inc
loopne
lds
jl
sub
test
mov
enter
aad
jno
mov
mov
lods
ja
adc
stc
cdq
mov
loope
jae
mov
cmp
in
repz
cmp
fidiv
pop
fbstp
and
jle
ins
hlt
jne
(bad)
mov
shl
scas
xchg
aaa
sub
test
pop
jp
stc
adc
dec
sub
pop
adc
adc
movs
cmp
mov
push
(bad)
sbb
sub
sbb
nop
mov
pop
or
and
ror
out
xchg
jae
call
pop
or
jae
pop
inc
cmps
dec
shl
(bad)
mov
fld
stc
add
scas
fisubr
and
sbb
mov
nop
mov
fdiv
jle
inc
out
inc
stos
cli
mov
push
inc
ja
lock
pop
jmp
pop
(bad)
fbstp
xor
jb
cli
pop
jno
dec
inc
cld
and
cmp
xchg
fcomp
mov
test
xor
cmps
pop
jae
test
test
adc
fisubr
inc
dec
out
or
xchg
push
push
adc
push
jle
dec
ja
repz
mov
(bad)
loopne
mov
sub
bound
push
dec
mov
dec
retf
mov
sub
inc
lds
xor
inc
cwde
loope
sub
fcomp
adc
fnstsw
daa
in
cmps
loop
cmp
mov
lods
push
fsub
add
mov
test
psubusw
jo
dec
and
outs
sub
sub
lds
and
xchg
pop
push
outs
fiadd
xor
dec
jo
adc
jp
and
xchg
xor
sbb
sbb
dec
dec
inc
jnp
cmp
pop
sbb
pop
test
sub
mov
add
pop
mov
hlt
pop
dec
mov
shr
dec
cs
mov
ss
stc
sbb
xlat
adc
mov
lods
adc
pop
mov
test
cdq
das
push
retf
test
pop
sub
aam
push
xor
pop
stos
mov
cmp
iret
movs
(bad)
fucomp
mov
push
rol
mov
cli
or
iret
sar
in
mov
push
lods
sub
jae
das
stos
add
xor
out
ins
and
fisttp
push
jmp
push
pop
jmp
ss
adc
test
fisub
jne
loop
add
push
push
fs
dec
adc
call
cmp
stos
jl
inc
mov
xor
cmp
cwde
cs
inc
jmp
push
jb
hlt
int
cmp
push
jmp
mov
xchg
mov
cmp
in
jecxz
mov
cli
cmp
cmp
add
mov
popf
es
push
retf
out
jns
add
ret
test
push
cli
hlt
mov
mov
hlt
sbb
movs
js
inc
push
mov
push
mov
lods
mov
(bad)
xor
les
mov
mov
cmps
sub
stos
imul
imul
cmp
call
ret
out
movs
js
mov
ins
les
loopne
popa
fistp
stc
pop
sub
into
repnz
das
mov
jo
jp
(bad)
movs
aam
xor
jp
adc
or
sub
cli
dec
ds
fsub
call
mov
fist
dec
mov
pop
fs
fsub
gs
push
and
scas
jmp
ret
sbb
xchg
mov
adc
mov
or
inc
lahf
repz
add
sar
es
ret
push
aam
icebp
dec
inc
push
fnstsw
mov
in
jnp
xchg
mov
movs
sub
jae
mov
jae
mov
mov
sbb
push
outs
mov
nop
ins
lock
cmp
lock
sub
retf
movs
jae
xor
sub
sbb
cmp
sub
ja
in
adc
mov
in
jns
mov
js
aaa
sub
pusha
outs
cmp
push
cmps
lods
mov
loope
pushf
int
or
xor
adc
and
mov
stc
sub
inc
movs
push
sub
mov
xchg
out
pop
sub
js
sbb
into
mov
out
int
dec
div
add
push
mov
or
mov
mov
mov
int
adc
(bad)
xchg
adc
ins
loopne
outs
pop
or
ss
xor
mov
icebp
mov
je
dec
test
dec
fwait
mov
mov
dec
test
jmp
sar
sbb
dec
iret
daa
inc
js
pop
ret
lock
cs
sbb
aad
jl
jmp
lock
test
leave
pop
sbb
sub
mov
and
mov
test
inc
mov
inc
sub
ret
push
iret
pop
push
push
mov
mov
dec
adc
cmc
sub
gs
jmp
mov
(bad)
adc
adc
mov
test
mov
jl
sub
add
adc
sbb
xor
pop
inc
pop
sub
xor
sbb
inc
popa
or
sub
ins
pop
test
mov
push
jns
xchg
bound
daa
mov
push
add
add
sbb
ja
js
jmp
mov
cmps
mov
(bad)
sub
pcmpgtw
or
dec
aam
push
retf
add
dec
dec
loopne
call
sub
or
popa
push
mov
push
add
dec
xchg
push
pop
imul
cmp
lahf
sbb
daa
(bad)
jl
mov
push
add
push
fwait
and
add
sbb
in
cdq
mov
xchg
or
mov
xchg
js
retf
adc
xchg
pop
xor
xchg
push
mov
push
nop
test
(bad)
ret
cdq
test
adc
pop
xor
mov
std
les
bound
loop
cwde
sahf
(bad)
aam
arpl
popf
das
push
cli
pop
mov
and
mov
cmps
push
dec
mov
fldenv
push
lods
loop
dec
push
dec
leave
retf
inc
inc
xor
adc
adc
jb
int3
mov
xchg
mov
fwait
and
sbb
cmp
cmp
push
data16
adc
add
sub
js
iret
popa
mov
ins
stos
ror
sub
jmp
push
cdq
ret
mov
adc
jne
fwait
sbb
repnz
or
mov
lea
fs
sub
(bad)
movs
adc
mov
inc
fwait
jecxz
aaa
lea
outs
sar
lea
sahf
retf
in
shl
mov
aaa
mov
jb
dec
add
sub
in
es
or
test
pop
xor
(bad)
and
jb
lods
jb
dec
movs
into
movs
push
in
cmp
retf
xchg
stos
or
into
adc
in
daa
das
push
push
hlt
mov
push
ins
jnp
lahf
imul
pop
test
imul
mov
sub
into
pop
lods
les
mov
sub
and
lds
sub
xchg
and
movs
sub
adc
xchg
push
adc
add
sub
and
push
pop
push
lea
adc
test
sub
xlat
pop
cmc
imul
add
icebp
imul
clc
mov
std
jle
outs
cdq
out
pushf
dec
pmaddwd
add
xchg
shr
mov
cmps
dec
loopne
test
fs
fwait
es
cwde
or
dec
imul
mov
call
push
mov
scas
rcl
stos
dec
xchg
mov
or
int
push
jmp
xchg
sbb
bound
dec
mov
adc
push
dec
fisub
adc
cmp
jbe
xor
mov
int
mov
xchg
cli
ins
popa
or
xor
xchg
iret
aam
adc
add
sub
adc
jb
leave
dec
test
cmp
ret
add
xor
scas
jmp
push
bound
lock
cmps
xchg
inc
cmp
rcr
sub
adc
and
(bad)
out
pusha
out
cwde
sub
out
loop
cmps
inc
dec
fnstsw
je
lods
pop
jle
mov
sbb
push
add
push
mov
xchg
or
mov
ins
std
jno
fistp
xor
and
rol
mov
(bad)
ins
mov
mov
jno
pop
add
sub
jg
sbb
scas
sub
adc
jb
scas
dec
dec
push
inc
inc
fstp
jae
mov
sbb
sbb
retf
jno
adc
mov
fxch
cmp
and
in
aaa
int
sar
fsubr
sub
loop
into
add
pusha
inc
jbe
xchg
int3
out
or
mov
jmp
pop
movs
mov
push
xlat
mov
cs
xor
add
sbb
test
int
hlt
and
(bad)
pop
mov
movs
retf
mov
out
icebp
mov
(bad)
enter
or
mov
cmp
mov
add
dec
jno
ins
cmp
dec
xlat
sub
pop
xchg
call
dec
inc
rol
xor
lock
sub
mov
out
rcl
xlat
and
push
jmp
pop
push
xor
aaa
push
jmp
das
adc
ins
add
pop
fisubr
jmp
jg
sbb
pop
(bad)
dec
ja
mov
mov
inc
shr
pop
sahf
in
or
mov
push
jbe
inc
inc
mov
ds
mov
call
pop
ret
stos
push
jnp
pop
sbb
or
(bad)
jge
mov
inc
sub
sahf
cmp
push
test
pop
fadd
stos
outs
outs
lds
pop
or
sub
ret
sub
fwait
jne
les
enter
in
test
sub
pop
lock
mov
mov
stc
mov
xchg
pop
or
mov
pop
push
mov
xor
je
call
jmp
fmul
adc
add
rol
cs
xor
fistp
cli
call
mov
test
inc
and
(bad)
aaa
iret
add
nop
mov
fwait
rol
mov
dec
pop
push
std
mov
xor
adc
jo
jecxz
jmp
ja
mov
pop
mov
aaa
pop
jbe
fs
shl
lods
mov
pop
popf
imul
icebp
jne
mov
xor
es
ja
xor
adc
adc
adc
shr
jae
xor
in
jne
sub
movs
or
ins
fmul
push
mov
lock
mov
rol
inc
sub
pop
ja
movs
and
cmp
mov
out
arpl
outs
push
lds
mov
cmp
lods
mov
cmp
inc
adc
cmp
ds
in
loope
dec
jg
(bad)
movs
cli
je
or
(bad)
mov
sbb
rol
dec
sub
rcr
cmp
std
pushf
push
jecxz
and
mov
ds
sub
dec
das
jb
xchg
sbb
inc
shl
mov
push
adc
aam
aaa
dec
jae
push
push
(bad)
inc
loope
stos
stos
bound
xchg
mov
or
cwde
jne
sar
jecxz
aas
sub
stos
sub
nop
or
iret
xchg
mov
adc
sbb
pop
aam
pop
std
jmp
repnz
ret
daa
mov
sub
push
retf
xchg
mov
aas
mov
fadd
mov
xor
adc
dec
sub
or
jns
mov
pop
jae
test
push
mov
dec
adc
jnp
repz
xchg
or
pop
mov
adc
mov
xor
sbb
mov
mov
inc
pop
sbb
bound
xor
xor
jp
adc
jle
out
sub
pop
pop
cmps
fisubr
bound
pop
std
js
ret
jmp
mov
adc
aas
outs
add
or
test
mov
xchg
shl
push
dec
fdivr
mov
lods
imul
sahf
test
nop
xor
fiadd
int3
adc
inc
data16
(bad)
call
stos
and
or
dec
jae
popf
adc
pop
loopne
push
inc
dec
out
lods
daa
jb
pop
push
mov
sbb
stos
shr
leave
add
add
mov
push
aam
ja
rcl
xchg
daa
cmp
ret
push
popa
sub
mov
dec
pop
mov
out
jns
or
jmp
xchg
mov
add
jbe
pop
xchg
push
sbb
pop
sbb
cmps
xchg
fdivr
xor
daa
mov
rol
sahf
jo
sub
jns
stc
aaa
scas
pusha
xlat
xor
popa
sahf
neg
add
pop
mov
ret
and
ja
nop
and
mov
in
gs
popf
bound
stc
and
or
repnz
cmp
sbb
cs
das
add
mov
mov
push
push
xor
inc
pop
push
retf
jle
test
mov
ins
mov
cdq
dec
scas
aas
stc
dec
mov
mov
push
les
mov
cs
rcr
je
and
pusha
icebp
adc
(bad)
mov
pop
adc
xchg
arpl
dec
sbb
mov
idiv
mov
in
inc
lods
or
xor
movs
sbb
xchg
dec
xor
sub
dec
leave
rcr
mov
popf
add
ret
mul
pop
sbb
repnz
retf
mov
xchg
xchg
mov
adc
pop
mov
inc
mov
popa
aam
mov
jbe
sahf
fisub
or
push
clc
xchg
mov
pop
xchg
jecxz
push
fnstenv
dec
cmps
cmps
int3
mov
scas
jne
cmp
add
cdq
icebp
pushf
and
mov
add
ficom
sub
mov
xor
int3
jno
mov
jmp
ins
retf
pop
or
add
xchg
add
(bad)
movs
aaa
and
xchg
shl
push
popf
ja
ds
mul
test
adc
cmps
shl
xor
adc
fnstcw
dec
nop
jmp
sbb
or
cli
mov
inc
movs
lock
push
mov
add
test
pop
gs
(bad)
cmp
pop
xchg
xor
xchg
pop
arpl
jg
mov
dec
inc
fldcw
repz
cmps
retf
pushf
mul
or
add
xchg
hlt
fidivr
xor
jmp
add
dec
jns
xor
imul
test
ret
sbb
add
and
int3
add
ror
sbb
adc
xor
popf
inc
mov
(bad)
dec
add
xchg
and
add
dec
je
mov
inc
jne
xor
jnp
sbb
mov
icebp
sub
add
int3
push
dec
nop
xchg
in
ins
iret
mov
jl
and
std
cmp
(bad)
xor
add
add
xor
xchg
call
rol
fisub
mov
xchg
daa
mov
ins
jnp
lea
xchg
cli
jae
loop
sbb
push
xor
xchg
(bad)
fucomi
inc
and
movs
add
or
arpl
pop
adc
jo
push
sbb
cmp
test
sub
inc
dec
ins
nop
xor
out
rcl
push
push
test
movs
cwde
fsub
sub
xchg
and
dec
or
das
xor
dec
mov
repnz
mul
call
xlat
adc
loopne
loope
in
dec
ss
sbb
cmps
ins
inc
pop
int3
xchg
push
(bad)
std
mov
and
push
cld
push
fsubr
stos
pop
scas
sub
push
(bad)
mov
imul
aaa
pop
data16
pop
mov
dec
jmp
lds
jbe
aad
add
xchg
loopne
aaa
imul
push
es
ror
pushf
leave
jmp
test
jp
push
and
and
or
dec
sbb
mov
rcl
(bad)
cmp
ret
pop
lock
test
popa
mov
or
push
or
popa
lock
cmp
neg
popa
rcl
adc
and
xchg
push
sbb
inc
push
cmps
daa
push
inc
jns
leave
ficomp
call
mov
popa
inc
jl
xchg
dec
bound
xor
js
outs
fs
rcr
shl
xor
pop
mov
icebp
xchg
mov
jmp
push
std
nop
dec
dec
add
jno
inc
add
xor
push
and
rcr
xchg
xor
test
test
sbb
xor
in
and
dec
pop
adc
cmp
ret
cmp
pop
xor
adc
add
xchg
xchg
mov
cdq
ins
test
mov
iret
clc
pop
movs
sbb
mov
fwait
add
movs
test
jmp
jg
adc
movs
in
mov
jae
call
call
dec
ins
popf
cdq
or
pop
lahf
js
lods
or
dec
xor
or
cmp
neg
mov
enter
fisub
push
mov
push
aas
addr16
pop
add
mov
pop
popf
jb
pop
add
pop
retf
sbb
add
add
vcomisd
dec
retf
push
add
les
leave
cmps
pop
nop
int3
cwde
xchg
loope
inc
dec
adc
dec
push
loop
push
jnp
pop
or
push
dec
or
add
mov
popf
dec
or
fs
push
fwait
cmps
add
js
push
mov
sub
aas
outs
cmp
mov
(bad)
repnz
sub
shl
push
push
adc
cmps
icebp
mov
pop
test
mov
xor
and
pop
xchg
cmc
mov
(bad)
jl
sbb
mov
in
lahf
out
inc
loope
gs
mov
xchg
mov
fwait
lods
dec
sub
sbb
add
(bad)
adc
push
int3
inc
sbb
daa
aam
dec
mov
sbb
sbb
cmp
or
add
jge
lods
add
push
pop
xor
jae
(bad)
cmp
and
stc
adc
test
data16
or
push
aas
or
rol
mov
adc
inc
push
pop
nop
push
int
mov
aad
icebp
das
push
shr
cmp
dec
bound
std
adc
in
cmps
xchg
into
pop
int3
mov
ins
inc
enter
xchg
or
xchg
mov
enter
sbb
movs
mov
xor
or
cs
or
mov
data16
dec
cbw
push
or
dec
push
push
dec
popf
push
fist
adc
mov
pop
add
sbb
dec
sub
jge
repnz
jb
xor
xor
inc
nop
(bad)
das
mov
fsubr
stos
and
iret
daa
popf
add
lods
push
leave
cs
ins
pop
aad
add
lods
cmp
sbb
inc
and
dec
int
or
push
xlat
pushf
dec
mov
fadd
aad
enter
leave
aam
or
fnstsw
aas
sub
retf
add
ret
movs
cmp
popf
and
test
unpckhps
movs
mov
dec
loopne
es
int
call
into
pop
and
loop
fsub
add
daa
and
xchg
mov
loop
sub
push
in
dec
dec
lahf
jns
fs
dec
fs
(bad)
fsub
mov
mov
outs
jae
retf
push
sbb
inc
push
or
pop
mov
add
fs
icebp
push
ds
xchg
sbb
pop
(bad)
pop
xor
xor
test
push
mov
je
push
adc
sub
and
sub
je
sub
mov
int
adc
daa
stos
popa
(bad)
jb
enter
and
adc
aam
jge
int3
cmp
pop
dec
vaddps
nop
aad
push
dec
or
call
sbb
mov
ss
loopne
cs
xor
or
int3
mov
sbb
repnz
mov
push
mov
icebp
(bad)
jge
xchg
mov
jmp
jb
(bad)
repz
sti
add
mov
inc
or
push
xchg
adc
mov
(bad)
and
in
ins
inc
sbb
lods
jg
adc
adc
sub
mov
mov
mov
ins
sub
mov
out
pop
jb
mov
push
inc
loope
sbb
ss
add
xchg
jp
ja
lar
mov
xchg
fsubr
mov
cmp
movs
ret
xchg
fnsave
imul
imul
int
and
gs
jg
mov
pusha
xchg
or
lds
mov
fisubr
jae
mov
stos
xchg
add
mov
jp
mov
mov
pushf
or
xor
inc
cmp
aaa
mov
xchg
push
inc
pop
mov
or
pop
sahf
xchg
inc
mov
addr16
xlat
cld
xor
push
jl
sbb
sub
aad
jb
xor
aaa
add
in
pop
call
ds
sub
xor
in
enter
push
cmp
jmp
sub
jb
sub
add
sbb
cwde
pop
inc
pop
xchg
and
and
or
cdq
inc
cmp
ins
mov
ja
mov
neg
mov
aas
pop
cmp
dec
adc
xlat
sahf
jb
pop
fadd
scas
sub
or
and
add
add
cwde
gs
mov
add
jo
mov
push
adc
mov
fnstcw
js
cmp
ins
jle
or
in
stc
rol
add
cmp
rcl
jb
lods
inc
push
dec
fistp
fwait
bound
mov
mov
pop
test
ret
add
test
and
or
gs
mov
mov
and
xor
(bad)
pop
cmc
pop
aas
dec
jecxz
dec
inc
movs
(bad)
xchg
test
(bad)
scas
test
inc
in
xor
ret
cmp
xor
pop
inc
mov
push
in
jae
scas
sub
fldcw
xor
in
scas
jb
mov
aaa
aam
retf
outs
loopne
das
jbe
mov
dec
sar
movs
xor
fisubr
adc
cmp
test
mov
fwait
and
dec
arpl
(bad)
fidivr
inc
outs
jmp
je
ds
xor
adc
mov
aam
mov
or
cwde
jg
(bad)
icebp
sub
jbe
retf
sbb
clc
js
mov
test
call
mov
sub
pop
scas
xor
cwde
cmc
mov
cs
test
mov
jbe
push
jnp
inc
ja
mov
shl
push
adc
jb
xchg
nop
jge
mov
xchg
or
xor
clc
dec
loopne
mov
and
pop
clc
mov
jo
dec
fisttp
loop
jl
mov
push
sub
jnp
and
xchg
fsubr
push
rcr
xchg
imul
cmp
sar
inc
and
xor
fst
sbb
outs
cmp
jo
(bad)
xor
push
pop
mov
xchg
(bad)
mov
inc
sbb
xchg
outs
mov
cmp
jno
ins
pop
mov
ret
pop
mov
iret
pusha
push
test
ret
loopne
jae
(bad)
(bad)
lahf
fnstsw
ins
adc
and
(bad)
in
test
pop
or
rol
lock
mov
mov
pop
mov
pop
test
out
test
cmp
aas
jno
into
ret
cmp
lea
mov
push
in
adc
mov
add
add
or
push
je
mov
sbb
fcomp
sub
and
fst
xor
cmp
mov
push
sbb
pop
fild
test
(bad)
or
add
das
pop
dec
fldcw
xchg
test
stos
dec
jmp
ret
scas
sub
xor
mov
jno
and
dec
jge
pop
mov
xchg
pop
xor
pop
in
mov
push
add
(bad)
pushf
outs
pop
repnz
mov
push
retf
xchg
mov
xor
mov
cmp
mov
lahf
cmp
or
mov
sub
stos
idiv
gs
and
js
mov
cwde
fs
fdivr
test
mov
dec
shl
jo
js
(bad)
ficomp
sbb
cvtps2pd
aas
mov
and
stc
(bad)
loope
or
mov
mov
cmp
loope
xor
jns
xchg
xchg
adc
fisubr
loope
in
push
out
aas
movs
lahf
push
dec
mov
test
sub
ins
lds
imul
pop
jg
idiv
movq
idiv
cld
dec
push
leave
mov
and
pop
cdq
in
lea
lods
stos
loope
cli
std
dec
cmps
mov
addr16
mov
inc
arpl
xor
imul
frstor
push
jecxz
stos
add
lods
push
cmp
adc
sbb
je
mov
pusha
test
into
inc
push
push
mov
repz
adc
add
mov
movs
out
or
pop
dec
xor
xor
rcl
ja
out
add
xchg
sbb
cmp
mov
sbb
in
clc
(bad)
and
mov
push
push
dec
in
sbb
in
mov
leave
aad
enter
or
mov
xor
mov
push
jl
cs
and
jecxz
inc
mov
mov
mov
cmc
inc
ret
sbb
ja
and
ins
sub
pushf
movs
scas
sbb
jmp
lods
(bad)
loope
or
jmp
xor
loop
fdivr
sbb
add
adc
mov
(bad)
out
shr
jge
and
jle
shl
sub
xor
pop
push
nop
loopne
repz
sahf
arpl
out
xlat
fadd
rcr
mov
sbb
pop
out
cdq
ret
into
iret
mov
cmp
sub
adc
fiadd
pop
sbb
arpl
and
push
push
push
sub
aas
jns
mov
mov
mov
aas
shl
rcl
cmp
mov
arpl
sar
into
(bad)
(bad)
cmp
push
jge
dec
ins
inc
call
pushf
mov
ins
xchg
jmp
push
lock
mov
push
adc
cmp
call
cmp
shr
in
(bad)
pop
loope
pop
jbe
(bad)
out
inc
jae
sub
mov
push
cmp
stos
stos
inc
rcr
cmp
sbb
sub
pop
mov
xor
mov
adc
imul
aaa
shl
sbb
mov
scas
and
mov
xor
in
dec
mov
inc
xor
hlt
add
fisub
rcl
stc
clc
jno
rcr
lods
ja
outs
cwde
repz
or
sub
scas
xor
clc
rcl
test
push
adc
in
adc
sbb
mov
or
xchg
pop
cs
out
push
into
or
inc
movs
xchg
dec
or
(bad)
outs
inc
jnp
inc
pop
pushf
nop
jno
jmp
and
mov
xchg
jno
pushf
push
jle
ja
xor
sahf
clc
lds
movs
out
scas
jns
retf
fstp
push
push
aaa
dec
js
inc
fcomi
out
and
fisttp
push
dec
pop
inc
ret
popf
int3
inc
xor
leave
xchg
stc
outs
test
call
mov
cld
jne
mov
scas
repnz
popf
cmps
repz
retf
jl
jne
(bad)
xchg
and
mov
mov
in
and
sub
push
adc
dec
mov
mov
adc
jne
mov
xchg
jle
cmp
loope
enter
adc
pop
sti
(bad)
ins
cmc
daa
xchg
ror
rcl
jno
push
gs
mov
xor
jne
cmp
cmps
(bad)
in
mov
mov
sub
push
js
push
stos
mov
fistp
dec
lea
add
dec
clc
sub
push
jmp
stc
xor
aaa
add
hlt
jl
inc
enter
ja
jp
addr16
mov
mov
mov
mov
test
fbstp
popa
push
in
in
sub
je
cmps
jmp
xchg
add
lahf
jecxz
test
mov
xor
cmps
loop
push
fcomp
mov
or
push
jae
lds
jmp
push
jl
pop
mov
jg
jecxz
sbb
hlt
nop
sti
retf
jb
movq
pop
xor
ja
lds
int3
in
push
xchg
out
pop
fidivr
pop
pop
loop
jl
repz
jo
add
out
push
je
mov
jl
pop
test
push
jns
jle
iret
scas
dec
lock
mov
jo
pop
(bad)
xor
xchg
in
scas
pop
dec
(bad)
mov
add
mov
pop
fsubr
mov
(bad)
imul
rcl
xor
or
enter
push
rcr
or
mov
jle
pop
cmc
aam
or
or
push
lea
aaa
push
inc
stos
cmp
in
mov
stos
pop
inc
std
ds
outs
mov
pop
aas
mov
stos
icebp
lods
push
pop
rcr
push
in
stos
mov
inc
loop
out
cdq
mov
call
hlt
es
jl
outs
sbb
in
ror
enter
stc
or
mov
xchg
aas
int3
inc
xchg
dec
mov
(bad)
(bad)
pop
neg
out
lds
outs
popa
mov
push
cmp
sub
cmp
addr16
jnp
sbb
or
cdq
repnz
or
sbb
jo
cmp
sub
rol
arpl
out
mov
mov
leave
aas
mov
cmp
adc
mov
ja
hlt
adc
jne
scas
pop
enter
and
mov
sbb
inc
rol
arpl
pop
fwait
jmp
push
out
stos
mov
ret
jl
push
test
adc
(bad)
iret
lea
in
mov
ret
mov
mov
fldcw
imul
lahf
bound
into
ins
xchg
in
(bad)
fidiv
sti
(bad)
add
push
sub
es
xlat
cmps
mov
outs
push
nop
fdiv
std
xlat
aad
jns
inc
cli
sub
outs
xchg
mov
lahf
ror
inc
cmp
imul
jb
jnp
fisttp
mov
lahf
gs
pop
add
cmp
xor
pop
in
rol
jb
aad
gs
dec
adc
imul
stos
inc
adc
mov
retf
sub
cmps
and
cmp
adc
and
mov
das
jge
push
pusha
es
out
jb
sbb
mov
xchg
lods
jg
aaa
and
stos
mov
ss
adc
(bad)
push
dec
fldcw
sub
stos
fisub
retf
mov
mov
xchg
xchg
pop
mov
jecxz
fbstp
in
(bad)
cmc
or
mov
xor
pusha
std
lahf
popf
cwde
or
lahf
push
jge
and
or
mov
cmp
add
ret
or
call
clc
inc
(bad)
xchg
xchg
pop
xchg
push
fidivr
or
scas
dec
sbb
lods
sub
(bad)
popf
add
loope
sub
push
mov
add
or
call
shl
cdq
ja
inc
pop
push
mov
sub
scas
fistp
jle
xchg
out
mov
dec
nop
outs
adc
movs
jnp
pop
mov
dec
cmp
push
dec
pusha
xor
jb
(bad)
pop
sub
add
or
push
ins
outs
mov
loope
jns
fistp
and
repnz
jno
mov
aaa
mov
dec
xchg
int3
sbb
ja
pop
mov
mov
ins
sub
fs
std
cmc
jge
das
sbb
push
xchg
jmp
bnd
jg
xor
movs
fcomp
inc
inc
leave
stos
xchg
mov
outs
test
iret
lds
jmp
inc
inc
jae
jl
jl
jo
repnz
clc
test
jmp
mov
xor
into
push
mov
sahf
movs
jne
ret
in
arpl
and
lds
in
repnz
cmps
xor
(bad)
cmp
jle
call
push
ret
aaa
adc
jmp
in
clc
pop
sub
mov
mov
add
repz
cmps
enter
mov
hlt
jae
dec
lock
call
in
neg
cmps
ins
sub
mov
xchg
jbe
pop
push
test
es
push
dec
shl
adc
sbb
popf
mov
mov
adc
outs
stos
adc
pushf
cdq
loope
cmps
ficom
dec
mov
jmp
in
xchg
and
cmp
push
scas
push
mov
rcl
cmp
add
add
inc
ror
sub
out
jmp
push
ins
push
mov
dec
xchg
and
inc
std
bound
loope
push
or
les
xchg
jl
sbb
or
movs
in
xor
rol
mov
push
test
add
lods
mov
retf
add
icebp
push
test
xchg
in
scas
xchg
fbld
pop
lea
mov
sub
mov
ja
test
mov
sub
pop
xlat
fcmovb
sbb
imul
out
and
mov
jecxz
cmc
adc
add
mov
out
mov
push
jge
cs
xchg
out
mov
add
outs
mov
sub
ins
sub
sub
mov
enter
xchg
out
cwde
sahf
(bad)
je
ficom
or
fs
pop
jb
ins
sbb
pop
mov
and
pop
jns
mov
add
js
out
cmp
sahf
dec
outs
push
loopne
mov
jge
hlt
ds
loop
stc
inc
(bad)
and
xchg
leave
mov
mov
shl
xor
inc
fdivrp
cmp
push
mov
push
int
xchg
xlat
iret
jbe
mov
add
push
mov
aas
(bad)
and
cmp
lds
pop
sbb
jl
(bad)
retf
and
mov
push
mov
popa
and
int3
shr
sub
push
sahf
iret
dec
mov
mov
push
imul
mov
add
cmp
jp
out
push
mov
inc
pushf
add
sub
xor
mov
mov
push
xor
dec
shl
les
hlt
sahf
cld
xchg
in
xchg
pop
lods
push
push
(bad)
mov
pop
aaa
enter
dec
cld
add
mov
(bad)
scas
(bad)
fsub
pushf
das
hlt
popf
std
jle
mov
and
xlat
mov
jo
das
repnz
rol
outs
adc
and
rcl
pop
fcom
mov
xchg
jle
push
push
sbb
jmp
cmp
ror
push
sbb
scas
pop
(bad)
(bad)
(bad)
pusha
mov
loopne
clc
mov
test
cmp
(bad)
enter
push
jle
dec
stc
add
outs
repnz
jp
scas
sub
push
mov
(bad)
(bad)
dec
into
sub
gs
(bad)
pop
daa
in
mov
les
mov
das
enter
jge
mov
and
stos
push
xor
movs
das
push
adc
add
icebp
(bad)
lods
xchg
inc
jl
lds
ja
sub
or
mov
and
jmp
dec
ret
jbe
jle
or
repnz
ins
push
dec
mov
stos
inc
push
loope
js
das
loop
ret
xchg
jle
add
mov
push
jne
and
call
je
push
scas
repnz
out
dec
jns
push
js
gs
imul
mov
sbb
nop
or
mov
out
es
in
in
adc
repz
test
xchg
mov
popf
xor
xchg
cmc
mov
add
ins
inc
clc
fadd
pop
int
jp
sub
mov
(bad)
into
or
cmp
mov
or
pop
and
jecxz
in
lahf
mov
aam
(bad)
mov
xor
aam
cmp
push
push
pop
shl
loopne
inc
sbb
sahf
and
xor
test
sahf
fdiv
sbb
fbstp
inc
stos
in
push
arpl
inc
icebp
les
jge
adc
aaa
rcl
push
mov
mov
mov
aad
push
(bad)
cmp
inc
mov
lea
or
enter
loop
jae
mov
dec
xor
mov
(bad)
pop
add
xor
inc
les
mov
mov
sti
shr
or
mov
xchg
jle
in
or
stc
jne
cmp
mov
xchg
xchg
jns
fld
mov
out
dec
inc
fimul
cld
or
jne
jmp
jmp
pusha
int
ds
adc
xor
addr16
xor
out
sub
call
cmps
enter
das
or
xor
pop
mov
lahf
ja
cmp
clc
sub
jno
ret
pusha
jo
rcr
aas
mov
ja
push
inc
inc
gs
sbb
das
inc
or
xor
sub
pop
or
pusha
xor
ins
ins
dec
add
cmp
test
cmp
sbb
pop
ins
and
in
inc
xchg
adc
add
mov
jne
ret
movs
cwde
(bad)
nop
or
movs
or
es
call
or
mov
int3
(bad)
or
mov
xor
movs
ss
movs
imul
sbb
fmul
cmp
push
xchg
ja
arpl
push
loopne
fmul
xlat
popf
aad
inc
add
call
add
loop
cli
xlat
sub
ud1
dec
adc
mov
out
gs
ins
iret
popa
fnstcw
sub
xor
jg
adc
arpl
out
pop
sub
adc
fldenv
mov
shl
fdivp
jge
dec
fisubr
fwait
mov
scas
retf
scas
lods
sub
pop
aas
mov
sbb
cwde
jg
pop
scas
xchg
sub
mov
or
(bad)
outs
jbe
pop
mov
fdivr
ret
mov
cwde
inc
mov
push
in
sub
in
sub
scas
(bad)
jbe
in
loope
push
xchg
mov
mov
xchg
movs
iret
retf
aaa
aas
jp
cmp
push
mov
or
sbb
push
rcl
push
add
inc
lods
inc
icebp
jb
inc
jmp
inc
pop
pop
outs
push
iret
loope
lods
add
movs
jnp
stos
mov
pop
mov
mov
mov
mov
shl
jg
cmps
dec
mov
jo
mov
fsubr
sbb
jnp
pop
mov
pushf
sbb
pop
sahf
ds
fistp
add
and
test
dec
fistp
cmp
ror
pop
xchg
fdivr
test
jnp
call
pop
ja
jp
dec
stos
dec
arpl
push
cmp
dec
fimul
push
cmp
and
scas
ins
test
out
loope
jmp
lea
mov
dec
hlt
push
mov
cmp
lahf
lds
adc
leave
adc
jns
jg
mov
sbb
lock
mov
outs
out
jle
(bad)
popa
adc
adc
nop
inc
jmp
arpl
mov
pop
pop
hlt
stos
movs
inc
fild
in
push
pop
ss
stos
sub
lock
div
xchg
sbb
ja
or
pop
mov
sub
ret
sbb
in
fwait
nop
push
and
fdiv
retf
jne
cmp
or
or
or
mov
sbb
test
mov
mov
mov
dec
mov
cmp
out
movs
(bad)
imul
jmp
mov
and
xchg
ret
mov
int
lahf
loopne
push
daa
mov
cmp
dec
or
sub
out
daa
cld
repnz
call
inc
retf
(bad)
in
(bad)
popa
ss
xor
sbb
sub
and
inc
(bad)
mov
mov
js
add
js
lock
lea
mov
shl
pop
(bad)
and
retf
xchg
aaa
xchg
dec
sbb
nop
jl
mov
lock
push
adc
ds
pop
loope
mov
sti
not
xchg
test
lahf
test
push
pop
lods
push
aad
cli
xchg
xchg
jecxz
not
sbb
jns
cmps
xor
mov
mov
jl
push
cmc
mov
jae
inc
pop
bound
add
gs
cld
retf
sbb
cmp
pop
loope
dec
adc
(bad)
std
dec
hlt
mov
in
pushf
(bad)
sahf
push
xchg
dec
and
pushf
or
pop
mov
popa
lea
arpl
fdivr
ins
sbb
hlt
xor
mov
popf
cmps
data16
loope
sbb
outs
or
inc
mov
cwde
jg
inc
cmovb
scas
in
in
add
int3
push
and
push
push
push
fs
icebp
cmp
cmp
(bad)
jmp
pop
and
call
fs
ins
test
lea
rol
mov
call
in
cdq
in
(bad)
out
mov
push
jmp
dec
cmp
xchg
inc
fdivr
sub
cmovg
hlt
pop
push
(bad)
mov
sbb
outs
pop
sbb
into
out
mov
xchg
leave
mov
jne
push
call
lds
iret
mov
pop
fcomip
push
movs
dec
dec
jl
ds
pop
inc
clc
hlt
adc
daa
into
movs
enter
adc
cmovne
pop
int3
dec
(bad)
(bad)
jmp
into
ins
push
or
mov
or
dec
or
sbb
mov
cmp
dec
(bad)
fimul
ins
mov
push
ds
mov
in
adc
gs
dec
push
cmp
mov
cwde
stc
aad
cdq
cmp
lahf
pop
in
cli
dec
push
dec
imul
jb
push
and
out
data16
mov
lods
mov
pop
int3
mov
mov
add
push
push
mov
rol
repz
xchg
sbb
xchg
push
sub
cli
dec
mov
jecxz
(bad)
cmp
mov
jbe
or
js
xor
leave
xchg
(bad)
push
inc
retf
sbb
std
ds
xor
sahf
sbb
pop
aaa
iret
dec
in
xor
mov
and
mov
cmps
fistp
sahf
push
dec
adc
scas
mov
jns
adc
dec
call
push
xchg
int
lods
mov
push
mov
xchg
mov
test
inc
lods
dec
sahf
dec
push
mov
imul
scas
cli
test
mov
jae
(bad)
test
jp
mov
enter
and
pop
out
pop
xor
fdiv
mov
mov
jl
call
cmps
popa
push
add
jo
ds
es
mov
sbb
inc
and
stos
mov
dec
das
sbb
repz
fst
pushf
xchg
test
cmp
mov
test
adc
inc
popf
or
mov
mov
fs
lea
test
dec
loop
mov
stos
sbb
dec
mov
(bad)
adc
movs
sbb
hlt
dec
sbb
clc
and
mov
imul
ficomp
div
scas
out
dec
jmp
pop
icebp
jb
push
dec
and
addr16
in
sub
in
inc
sbb
lock
push
out
or
into
jl
adc
aad
adc
mov
mov
lea
xor
cmp
xchg
(bad)
fld
xchg
and
out
mov
xchg
sub
pop
pop
stc
rcr
stc
mov
es
jno
add
xor
dec
es
jmp
xchg
jle
add
sbb
je
adc
sub
mov
f2xm1
movs
inc
or
push
imul
icebp
repz
jmp
and
idiv
div
mov
mov
push
sbb
push
or
mov
das
adc
arpl
retf
jns
xchg
retf
push
repnz
in
jmp
gs
rol
add
enter
ret
rol
outs
or
js
sub
mov
scas
push
cwde
outs
call
adc
je
mov
pop
cli
popf
pop
rsqrtps
pop
stc
sub
dec
in
mov
adc
cmp
test
ret
push
xor
adc
(bad)
inc
mov
xchg
popf
(bad)
adc
repz
and
pop
icebp
ror
retf
or
(bad)
pop
push
cmp
push
sbb
push
repnz
or
and
adc
mov
addr16
add
push
shl
dec
mov
inc
pop
ins
in
add
stos
lock
cmp
adc
in
fst
into
push
sub
test
and
mov
outs
push
pop
jbe
retf
add
sub
retf
push
pop
arpl
je
hlt
mov
lea
or
sub
imul
sbb
xor
cmp
push
mov
shl
je
movs
imul
jmp
jno
dec
sti
push
mov
jle
jle
shr
jmp
inc
je
not
xchg
mov
lahf
push
int3
or
sbb
cmps
nop
or
rcl
stos
mov
ret
test
adc
jge
mov
cmps
xchg
es
std
stos
shl
(bad)
jae
mov
dec
mov
mov
pop
mov
sti
sti
add
out
dec
jnp
xchg
inc
cmp
cmps
xchg
xor
mov
daa
in
mov
dec
xchg
cmp
add
ror
sti
push
adc
mov
xor
add
xor
sub
pop
xchg
pop
scas
loope
cmps
and
dec
cmp
loope
in
mov
rcr
cmp
mov
jbe
mov
int
inc
push
pop
mov
int3
jge
push
adc
xchg
mov
out
neg
sub
dec
pushf
jmp
adc
and
sbb
dec
add
ja
sahf
or
out
jle
retf
cld
arpl
aad
jmp
push
pushf
hlt
dec
mov
push
test
add
inc
out
mov
ins
in
xchg
and
call
push
fcmovnb
jno
fidivr
movs
mov
popa
lock
sub
sub
dec
sbb
add
jbe
out
dec
xchg
add
mov
scas
or
sub
es
sub
in
std
outs
lods
xor
push
adc
fwait
xor
xchg
inc
aas
shr
cmp
movs
fimul
dec
sub
out
pop
sub
xchg
ins
xor
mov
rcr
das
push
lods
imul
xchg
inc
and
xchg
dec
sbb
mov
fadd
mov
fwait
aam
adc
push
in
and
cmp
xor
push
cmp
or
adc
(bad)
cmp
jb
jge
xchg
cmp
std
add
mov
scas
iret
fwait
sub
mov
lock
xlat
cmp
(bad)
push
call
sbb
or
js
icebp
dec
cmps
mov
sub
fwait
add
jne
aas
into
mov
in
dec
mov
sub
and
(bad)
push
mov
lods
xchg
sub
dec
lea
mov
push
push
mov
(bad)
rcl
movs
sub
test
add
inc
xor
xchg
push
adc
inc
cmp
inc
dec
cli
(bad)
mov
inc
shr
mov
dec
das
pop
jne
dec
lahf
cmp
ins
scas
test
mov
ja
lahf
int
pop
adc
or
popa
pop
leave
jge
cld
xor
and
cmp
sar
fnstcw
cmp
inc
adc
or
shl
cmp
mov
inc
dec
push
push
(bad)
or
lods
mov
pop
jb
cmps
pop
in
pop
iret
mov
xchg
je
add
push
add
(bad)
push
jns
xor
and
adc
jns
dec
mov
xchg
sti
in
iret
mov
in
pushf
int
sbb
(bad)
sub
mov
stc
pop
adc
int3
push
or
pop
mov
xchg
push
(bad)
and
cmp
test
add
ret
jl
inc
cmp
cmp
out
dec
xchg
div
push
ss
mov
push
lahf
or
mov
dec
pop
iret
fimul
int
push
mov
mov
inc
retf
imul
popa
xchg
movs
cld
in
loop
lods
or
call
xor
xchg
mov
mov
test
outs
icebp
sbb
mov
ret
(bad)
sub
(bad)
hlt
xor
dec
add
jo
xchg
push
(bad)
xor
push
shl
fisubr
(bad)
mov
mov
inc
sbb
shr
adc
div
mov
aaa
push
aad
fwait
sbb
inc
inc
fisttp
pop
into
pop
sbb
(bad)
push
in
aam
pop
mov
push
je
rcl
push
pop
fs
xchg
cs
in
ds
sbb
pushf
mov
imul
out
out
xor
mov
inc
cli
aam
mul
lahf
jp
daa
icebp
dec
ds
or
(bad)
aam
les
dec
sbb
mov
sub
push
pop
je
ins
adc
dec
je
mov
out
sbb
das
add
ror
and
bound
jl
sbb
xor
fwait
mov
cmc
jmp
(bad)
outs
hlt
cmp
movs
int3
ins
jle
enter
mov
pop
inc
in
pop
ja
pop
sar
jb
jno
mov
leave
xor
cmps
bound
(bad)
and
or
or
(bad)
push
outs
out
push
jmp
fisub
test
sub
fucomip
mov
movups
inc
call
mov
or
outs
ins
out
into
mov
out
mov
mov
cmp
add
repnz
adc
(bad)
cli
movs
mov
(bad)
ins
mov
test
mov
pop
shr
imul
sbb
les
jns
sub
mov
fnstcw
movs
shr
pop
jbe
fmul
mov
imul
outs
push
xor
movs
pop
shr
mov
inc
popf
xor
scas
repnz
adc
ja
xchg
mov
ja
ret
shl
push
cmp
imul
jbe
fcmovnu
jae
mov
sbb
mov
stc
dec
mul
or
lahf
sub
adc
enter
mov
adc
in
rcr
inc
iret
loop
xor
fbld
mov
sbb
inc
mov
test
test
jp
pop
fsub
popa
dec
mov
xrelease
test
popf
aas
or
test
fadd
sar
fcomi
les
rol
xchg
sub
adc
jg
sub
out
cmp
pop
sub
pushf
idiv
pop
adc
stos
movs
pop
sub
adc
mov
out
test
ins
sub
xor
xchg
xor
mov
rcl
cmc
(bad)
cmps
aad
xchg
push
out
or
sub
test
and
cmp
ins
inc
xchg
inc
repnz
cmp
ss
ror
out
adc
div
adc
loopne
in
ret
into
sbb
test
ret
or
jl
sti
adc
xor
jmp
jl
sub
mov
ins
shr
add
inc
pusha
dec
movs
imul
sub
or
bound
mov
pusha
mov
rcl
cli
pop
add
and
adc
(bad)
aad
jmp
jmp
xchg
idiv
mov
xchg
dec
stos
call
push
imul
adc
lea
mov
scas
dec
jmp
or
cmp
clc
inc
in
mov
adc
xor
and
and
cli
jecxz
pop
mov
inc
retf
sub
push
dec
nop
mov
push
dec
mov
out
xchg
lods
sti
inc
test
data16
aad
ins
adc
and
push
adc
fisttp
jle
cmp
outs
mov
inc
ror
popf
sub
adc
call
mov
mov
fwait
push
iret
icebp
mov
retf
lods
test
cwde
retf
dec
sub
cli
cmps
mov
mov
add
int
cmp
xchg
jl
xchg
adc
stos
push
jne
push
xchg
stos
jmp
mov
pop
inc
cmp
jnp
fwait
daa
add
push
(bad)
push
ja
and
pop
out
mul
inc
push
ss
test
jno
mov
sub
sbb
and
sub
movs
test
xor
ss
dec
cli
dec
inc
popf
add
mov
and
bound
jle
jge
sub
fisubr
jp
stos
inc
out
sbb
out
mov
and
sbb
lods
dec
xchg
jae
sbb
jns
imul
push
sub
or
xchg
sbb
pop
and
loopne
mov
shl
outs
push
ret
mov
inc
test
pop
aam
mov
sub
mov
cmp
addr16
pop
pushf
mov
call
imul
test
xlat
les
inc
hlt
pop
pusha
add
daa
ret
aam
xor
sahf
je
mov
(bad)
inc
sbb
push
cmps
jo
jb
les
scas
jg
in
adc
sub
sub
mov
add
xor
(bad)
in
and
bound
cmps
dec
(bad)
cdq
jno
ins
lods
xchg
sahf
mov
int3
stos
fstp
loop
in
aam
(bad)
mov
pop
add
push
int
mov
inc
mov
sti
push
adc
mov
cmp
shl
shr
or
fnstcw
inc
jge
inc
inc
mov
pop
(bad)
(bad)
arpl
adc
adc
or
fidiv
das
push
cwde
stos
mov
popa
test
movs
shl
icebp
and
xor
adc
jns
xor
inc
xchg
jnp
lea
add
jle
xchg
or
rcr
shl
lods
mov
jnp
mov
mov
inc
xchg
aas
jg
inc
lods
xchg
sbb
(bad)
in
adc
leave
push
lahf
imul
cmps
dec
cmps
pop
mov
push
add
mov
inc
add
imul
dec
outs
inc
lahf
sbb
xchg
int3
popa
push
dec
dec
test
stos
or
stos
add
cmp
ja
dec
(bad)
test
mov
test
aaa
push
jp
fbstp
std
jnp
popf
jmp
in
not
or
inc
push
dec
push
lods
inc
xchg
shl
fstp
dec
mov
push
sbb
xor
mov
xor
jns
les
(bad)
fsub
outs
dec
arpl
xor
outs
or
fsub
or
mov
daa
xchg
inc
jne
push
adc
pop
(bad)
sbb
xchg
test
adc
and
cmp
mov
ficom
cmp
pop
aad
fmul
test
fisub
push
or
femms
mov
cmp
xor
je
adc
daa
sbb
sbb
movs
adc
clc
dec
cs
bound
sub
pop
sar
lods
ret
mov
imul
adc
or
and
mov
call
imul
sbb
or
cmp
shl
ffreep
lods
movs
xlat
test
out
aas
and
jg
mov
sbb
mov
fiadd
hlt
inc
add
lods
pusha
cmp
mov
ins
push
sub
mov
aas
aaa
pop
add
es
mov
push
ds
cmp
sub
inc
sub
push
sub
adc
jp
mov
sub
sub
(bad)
call
xchg
ds
ficom
das
pop
cli
and
fsubr
xor
adc
add
fs
sti
(bad)
sub
and
jmp
punpcklwd
addr16
arpl
mov
sub
cmp
jle
stos
sub
leave
jp
or
fisub
bound
inc
sbb
outs
scas
dec
add
fnsave
add
cli
das
jbe
std
sub
test
jl
jnp
movs
push
jmp
ror
mov
aam
mov
adc
aad
in
xchg
ret
mov
push
fs
mov
loop
mov
jmp
and
pop
xchg
pop
mov
mov
pop
pop
aaa
jmp
into
jnp
push
movs
jnp
int3
and
lods
(bad)
sti
mov
repz
stos
sub
dec
xor
lock
cmps
and
xor
hlt
mov
jne
add
fcomp
mov
jp
cdq
int
(bad)
int
mov
lods
xlat
cmp
iret
das
dec
aaa
in
adc
fstp
lods
sub
inc
and
jo
lock
pusha
test
mov
or
dec
ja
xchg
and
add
xor
or
inc
inc
dec
fld
je
(bad)
push
inc
sbb
pop
sub
cmps
or
xchg
and
fwait
sbb
mov
pop
mov
or
pop
mov
sub
mov
xor
cmps
inc
mov
mov
clc
loope
lahf
retf
add
pop
ja
push
fs
xchg
sub
push
je
fchs
rcl
ins
xchg
xchg
xchg
mov
movs
pop
outs
cmp
setne
jl
icebp
mov
out
outs
sub
daa
jmp
mov
mov
out
cmc
pop
push
fs
mov
inc
lods
and
pop
stos
add
ret
popf
inc
and
jle
push
xor
pop
movs
sub
enter
in
mov
cmp
add
fnsave
aaa
pop
sbb
lahf
scas
mov
cmps
inc
sub
xchg
and
xor
mov
sub
bnd
fild
push
gs
jno
mov
push
arpl
sub
or
iret
pop
push
or
jmp
pop
or
fisub
out
cmc
icebp
xor
adc
xchg
retf
fwait
(bad)
es
xor
mov
fmul
mov
xor
adc
mov
adc
or
mov
mov
data16
mov
call
shl
mov
inc
inc
jmp
inc
pop
lods
jo
nop
out
cmc
je
push
dec
int
xor
das
jge
mov
push
add
lea
repz
pusha
xor
adc
inc
push
and
ins
leave
add
hlt
mov
mov
ins
cmp
in
sbb
jb
inc
push
or
xchg
cmc
dec
daa
fsub
inc
xchg
fisubr
mov
ins
daa
dec
test
stos
jne
dec
xchg
(bad)
adc
inc
xor
std
mov
and
inc
std
cmps
cli
add
pop
xchg
loop
sbb
mov
gs
mov
cdq
adc
sets
sbb
and
xchg
mov
or
aam
ins
lahf
jge
lods
and
int3
fmul
xchg
scas
(bad)
ins
fnsave
mov
call
ss
or
push
call
mov
stos
adc
fpatan
or
xchg
ret
and
add
add
push
inc
popf
ins
adc
outs
jp
aam
inc
inc
ins
xchg
inc
mov
jp
fwait
clc
dec
fiadd
or
cmp
js
jbe
adc
mov
add
and
ret
push
daa
xor
cmp
sbb
es
xchg
or
xchg
xor
(bad)
test
(bad)
jbe
(bad)
int
test
mov
lods
mov
jl
xor
add
mov
mov
mov
fdivrp
retf
push
jo
sbb
mov
and
mov
jecxz
sbb
out
sub
pop
mov
mov
push
enter
fwait
icebp
sbb
mov
pushf
popa
jne
adc
mov
mov
lods
frstor
div
jo
outs
dec
mov
es
ret
das
xor
dec
loopne
ins
test
push
sbb
pushf
ss
cdq
sub
adc
sub
nop
jp
jecxz
ret
pop
fistp
mov
xor
test
dec
adc
sar
ret
sbb
pmovmskb
push
test
int
cmp
stos
lods
out
adc
mov
repnz
dec
loopne
dec
xchg
sbb
fwait
jmp
inc
(bad)
popa
test
leave
ins
outs
xchg
push
popf
inc
(bad)
stos
jbe
retf
sbb
inc
movs
mov
sbb
ja
mov
rcl
retf
lds
or
mov
jmp
retf
test
and
in
gs
fisubr
mov
jnp
jb
test
fcomp
(bad)
std
cwde
hlt
js
lahf
mov
pop
cmp
pushf
cmp
push
add
sub
jle
aam
ds
mov
adc
push
inc
mov
adc
sti
mov
jmp
mov
shl
movs
inc
stos
inc
or
xchg
(bad)
pmaxub
mov
js
dec
je
sub
sub
mov
pop
das
dec
cmp
inc
and
out
in
lods
test
mov
and
pusha
pop
in
or
fist
xchg
mov
cmc
mov
jns
dec
inc
jae
mov
mov
sbb
and
jecxz
pop
imul
jl
lock
mov
fs
sbb
xor
dec
retf
sbb
outs
jl
jecxz
mov
push
pushw
test
(bad)
pop
inc
(bad)
retf
outs
fstp
jo
fisttp
xor
(bad)
add
jle
mov
out
xchg
inc
icebp
add
leave
scas
test
mov
neg
ds
test
cmp
lock
xchg
and
addr16
pop
sub
mov
pushf
je
sub
popa
repz
mov
aam
xor
loopne
mov
pop
ss
jne
dec
les
adc
sub
mov
push
jns
inc
outs
imul
in
mov
mov
es
push
or
daa
and
dec
sub
enter
fadd
sub
(bad)
je
es
std
leave
push
fucomip
jl
stos
cmp
push
xlat
mov
add
stos
push
fucom
test
push
fiadd
outs
pop
pop
mov
inc
sbb
sub
adc
adc
push
push
shl
daa
xchg
jge
mov
fs
ss
cmp
push
xchg
lahf
popf
ret
jno
(bad)
xchg
dec
add
das
fadd
dec
xor
push
movs
mov
add
shl
inc
mov
push
sbb
inc
dec
fwait
repnz
mov
imul
jo
into
cwde
jmp
push
mov
add
mul
inc
stos
shl
sar
mov
xchg
loop
pop
fldcw
sti
xchg
mov
test
push
stos
jecxz
mov
cmps
or
sbb
xchg
and
jno
aaa
lahf
int3
xchg
xor
js
test
ret
shl
inc
aam
aaa
add
lock
cmp
xor
in
mov
mov
xchg
add
test
inc
sti
xchg
jmp
pop
(bad)
std
out
xchg
inc
push
mov
les
pop
rol
xor
jno
(bad)
stc
adc
sub
lods
addr16
pop
(bad)
push
and
sar
in
add
mov
retf
outs
sbb
ins
rcr
jno
mov
sbb
test
xchg
ins
push
shr
pop
sub
ins
iret
add
out
xor
aaa
and
sbb
inc
cld
ret
retf
mov
mov
out
push
xchg
mov
dec
pop
cmp
push
mov
(bad)
adc
fadd
pop
lea
add
test
jno
sbb
call
into
fcmovb
jbe
or
into
fwait
imul
repnz
int3
sbb
aas
jne
bound
in
mov
ficom
adc
inc
and
cmp
sub
cwde
jle
movs
icebp
pop
cs
pop
in
xlat
xor
jle
and
test
retf
cdq
fdivr
in
(bad)
jg
rcl
pop
outs
in
stc
popa
mov
dec
dec
jg
fnstenv
xchg
loop
jb
rol
xchg
repnz
jnp
cld
es
lods
jmp
jp
xor
and
or
rcr
mov
arpl
enter
not
mov
mov
sbb
or
(bad)
dec
dec
into
in
mov
es
jmp
push
push
sbb
js
add
js
imul
ja
repnz
(bad)
movs
mov
call
xchg
stc
inc
push
sub
loop
outs
(bad)
aam
les
mov
jmp
in
sub
mov
sbb
sub
jmp
call
cli
into
popf
(bad)
mov
xchg
jns
aam
mov
test
ja
les
fidiv
popa
dec
and
popa
jmp
clc
add
sub
jmp
fdivr
sub
dec
pusha
xor
lods
jno
daa
mov
push
and
mov
push
sub
dec
out
dec
(bad)
inc
dec
mov
out
sti
mov
pop
fisttp
pop
mov
pop
jnp
lods
jp
push
out
mov
ret
and
pop
mov
mov
pop
mov
adc
push
dec
xlat
xchg
jg
sbb
push
push
sbb
mov
fldcw
fdiv
push
lods
call
popa
dec
push
xchg
dec
jo
or
mov
xor
push
stos
call
dec
fist
or
sub
push
ja
xchg
into
adc
loopne
pushf
mov
ror
shr
dec
movs
mov
jmp
mov
jne
dec
fcom
xchg
cmps
mov
test
sub
sub
xchg
fisttp
out
cdq
push
jae
sbb
je
add
leave
fisub
xchg
inc
dec
sbb
into
cdq
mov
push
add
retf
sub
push
dec
mov
call
sbb
xlat
mov
mov
sti
lods
stc
adc
jo
xchg
adc
sub
cs
push
mov
inc
add
add
xchg
bound
dec
add
mov
movs
imul
or
outs
sbb
in
cmc
cdq
ret
jns
mov
es
pop
ret
xor
cwde
loop
mov
xchg
mov
movs
test
pop
sbb
or
dec
xchg
jl
cmp
imul
jecxz
loope
int
jmp
(bad)
push
bound
into
jne
sub
jae
pop
je
sbb
lahf
mov
sbb
iret
jnp
mov
mov
std
fidivr
pop
cs
xor
adc
jge
movs
or
ins
lds
mov
adc
push
outs
fdiv
mov
add
nop
dec
cs
xor
ja
inc
mov
clc
add
cld
rol
jb
add
clc
mov
pop
retf
add
adc
or
retf
cs
in
push
mov
jb
push
add
add
dec
ficom
cld
add
xor
std
loop
sbb
xchg
cli
add
inc
xchg
stc
sub
and
les
test
xor
mov
mov
jge
popa
jae
sbb
aaa
vpackssdw
call
xchg
ret
fstp
push
sbb
cmp
and
les
mov
fxtract
fidiv
mov
or
xchg
lock
xchg
scas
fild
mov
cmp
mov
cwde
test
dec
mov
mov
inc
mov
xchg
or
in
iret
adc
not
dec
fst
pop
and
sub
js
pushf
and
add
jns
ret
mov
retf
ins
fist
pop
hlt
in
shr
daa
or
fidivr
adc
xor
ds
lds
or
push
lock
push
mov
dec
xchg
fiadd
mov
mov
in
iret
clc
jg
aaa
outs
add
xchg
fdiv
push
fmul
pushf
test
loope
test
mov
mov
jecxz
mov
cwde
sub
fcmovu
push
xor
lock
and
cmp
dec
fcom
xchg
movs
mov
mov
add
push
fs
mov
fdivr
aam
sub
mov
aas
mov
sub
sbb
xchg
fdivr
movs
xlat
fisubr
inc
dec
xor
or
jl
outs
lahf
retf
jne
repnz
movs
inc
scas
leave
mov
sub
add
jae
gs
jmp
jg
movs
int
jbe
sbb
(bad)
hlt
pushf
in
pop
out
sub
in
xor
je
dec
xchg
sbb
leave
(bad)
rcr
sahf
mov
repnz
daa
xlat
dec
scas
js
in
push
gs
lods
xor
in
xchg
fcmovnu
jb
dec
popa
jecxz
retf
shl
or
mov
call
scas
dec
cmps
stos
movs
pop
in
xor
(bad)
mov
jnp
pop
adc
test
lock
shl
sub
push
daa
xor
mov
js
adc
jo
imul
aaa
in
arpl
cmp
addr16
ret
(bad)
loope
adc
test
jbe
xchg
mov
xchg
pop
push
pop
inc
mov
xchg
repz
mov
arpl
inc
jle
cmp
repnz
gs
jge
aam
mov
dec
aas
mov
xor
mov
imul
mov
sub
mov
xchg
scas
test
or
jmp
cmp
push
xchg
pop
xor
sbb
in
ins
aad
js
stos
loopne
mov
pop
cmp
popa
jae
jge
dec
push
sti
sbb
xchg
add
inc
test
loope
out
cs
cld
push
push
ins
and
add
test
sbb
mov
mov
div
mov
pop
inc
rcl
jmp
xchg
sub
jmp
pushf
stos
aas
or
and
js
adc
data16
jnp
xor
xchg
in
(bad)
and
bnd
sbb
mov
jno
in
xor
push
int
xchg
push
fidiv
in
iret
popf
push
repnz
mov
pop
out
xor
aaa
jg
clc
jne
retf
jo
(bad)
outs
sub
fisubr
xchg
fadd
and
scas
sub
or
jnp
mov
mov
fcom
fisub
das
loope
cmc
test
jge
inc
(bad)
xchg
sar
sbb
sub
data16
xchg
fs
pop
mov
aam
push
xor
add
xchg
mov
cmp
iret
inc
aam
sbb
js
(bad)
xor
dec
lods
data16
(bad)
push
mov
inc
pushf
jle
add
ret
test
push
adc
pop
pop
vmptrst
xchg
movs
inc
push
pop
cmp
cmp
push
ins
call
and
or
xchg
cmp
gs
and
inc
pop
mov
not
cmp
cmp
jge
xchg
loopne
lahf
test
sbb
xchg
xchg
inc
into
dec
inc
stos
push
int
rcr
sbb
lahf
aad
imul
mov
xor
daa
mov
adc
jo
jle
bound
xchg
test
retf
mov
sar
enter
mov
sti
out
push
jnp
cmp
repz
and
adc
mov
xchg
test
inc
mov
ja
aam
mov
daa
lahf
data16
pushf
pop
push
mov
xchg
or
jmp
inc
imul
mov
loop
inc
push
jp
(bad)
call
pop
pop
loope
bswap
fsubr
loope
cwde
int3
lahf
mov
sbb
aaa
sub
mov
ror
imul
in
xchg
add
call
mov
push
pushf
cld
xor
dec
jle
fucomp
add
push
test
in
and
and
popa
inc
gs
cdq
dec
stos
dec
pop
fidiv
clc
pop
inc
shl
mov
aaa
call
rcr
retf
jns
push
pop
and
inc
aas
cmp
inc
ins
jge
push
cmp
pcmpgtd
stos
(bad)
sub
div
imul
sbb
and
idiv
aam
cmp
add
xor
pop
sahf
xchg
movs
jne
jmp
xor
jmp
(bad)
adc
pop
repnz
mov
scas
(bad)
in
add
add
mov
jle
sub
iret
cmp
dec
mov
add
jnp
loope
jno
mov
aam
push
pusha
jl
xchg
cmp
mov
xor
push
dec
or
add
(bad)
dec
call
in
movs
inc
jne
add
aad
cmp
sahf
loopne
dec
loopne
fsubrp
adc
retf
aas
call
cmc
sbb
mov
mov
push
dec
fs
add
mov
mov
sub
loope
rcl
pushf
mov
out
cmp
je
test
popf
push
dec
cmp
in
les
add
enter
xchg
sti
or
sbb
retf
cdq
add
mov
arpl
inc
mov
add
add
and
jne
(bad)
fnstsw
ins
pusha
inc
jecxz
test
movs
or
fcom
push
mov
or
mov
cli
sbb
and
and
and
and
fnstcw
jo
jg
lds
scas
out
sbb
in
rcr
lea
xor
dec
cs
(bad)
jnp
repz
mov
mov
push
jmp
xor
jmp
adc
retf
add
xchg
adc
outs
mov
push
(bad)
dec
inc
sub
loope
jge
push
or
ret
xchg
ret
aad
fild
xchg
mov
jbe
ret
sbb
mov
sub
pop
jne
test
jo
mov
dec
adc
and
pop
push
xor
push
and
ret
and
out
repnz
scas
dec
retf
cmc
loope
(bad)
scas
xlat
xor
xor
jae
cmp
stos
(bad)
sbb
imul
dec
les
sbb
jo
cld
retf
xchg
mov
pop
jge
push
mul
sbb
repz
or
pminub
rcl
gs
aam
popa
xchg
cld
mov
or
sub
inc
or
xor
inc
xor
repnz
(bad)
sar
fcomp
mov
push
pop
leave
push
sub
daa
out
aam
test
in
into
pop
cmp
pop
xchg
inc
movs
out
jae
mov
mov
test
mov
data16
or
dec
rcr
add
cdq
scas
rol
jno
es
pop
jae
ins
jne
mov
retf
pop
scas
icebp
int3
push
add
lock
out
retf
cmps
in
jae
pop
xor
daa
stos
add
aas
loopne
adc
pop
mov
jg
dec
test
lea
sbb
lahf
jl
shl
ror
fmul
xlat
test
aam
pop
fstp
cmp
dec
into
fstp
inc
push
inc
test
jecxz
repz
xchg
sahf
add
jo
ficom
fidiv
lods
mov
push
jecxz
push
sbb
pop
repnz
or
fdivr
std
pop
jle
pushf
cmps
fisubr
or
push
jo
cs
retf
inc
stos
imul
popf
test
dec
mov
mov
pop
push
rcl
add
lea
(bad)
jbe
inc
ins
mov
push
or
fmul
cmps
push
hlt
test
aaa
and
mov
cmp
mov
push
imul
add
sub
lods
jmp
fcomp
mov
sub
xchg
mov
das
xchg
aad
jbe
add
push
cld
retf
pop
adc
and
fsubp
cwde
mov
cs
jnp
push
loopne
fldlg2
mov
dec
fucomip
mov
xor
adc
out
aas
rol
push
inc
(bad)
mov
mov
pushf
das
pop
jb
xor
dec
sti
push
leave
adc
clc
push
mov
mov
mov
xchg
pop
add
push
xchg
sub
cwde
push
iret
out
(bad)
nop
clc
mov
and
(bad)
es
push
in
out
jmp
inc
xchg
add
mov
add
pop
jle
daa
adc
in
pop
mov
cmp
aad
mov
pop
pop
push
rcr
and
fwait
rol
xchg
loopne
pop
sbb
and
push
push
adc
dec
inc
imul
pop
pop
fld
cmc
mov
sahf
stc
outs
stc
test
fisub
mov
jnp
fidivr
retf
sub
addr16
push
lahf
popf
shl
cwde
repnz
xor
add
xor
outs
dec
popf
cmps
xchg
cwde
cmps
push
shr
or
or
outs
mov
popa
sbb
call
aad
test
xchg
adc
(bad)
lods
loopne
ins
or
add
cmp
sbb
jp
dec
push
sti
jmp
ss
loope
dec
dec
fxch
jnp
cmps
or
jb
mov
adc
push
je
and
fild
adc
cmps
popa
fs
aaa
packssdw
adc
mov
pop
fadd
(bad)
fsub
push
test
cmp
cmps
push
loopne
add
(bad)
lea
pushf
frndint
popa
jge
out
test
out
or
sbb
sbb
push
xor
add
das
sbb
call
dec
add
sbb
pop
retf
fwait
sub
repz
loope
and
repz
inc
mov
adc
jmp
popf
pop
aaa
adc
jge
movs
adc
lahf
popf
gs
stos
mov
call
cdq
repnz
add
mov
pop
cmps
push
lods
out
sbb
sbb
sbb
sub
push
fwait
jle
imul
ja
jmp
mov
push
fisub
imul
(bad)
outs
fxch
sti
rol
mov
(bad)
jns
push
cmp
movs
cmp
sub
loopne
fs
js
dec
mov
pop
xor
or
pop
or
or
jl
ss
and
jb
xor
das
stc
mov
test
inc
cmp
nop
es
cmps
lods
push
cwde
push
int
fmul
in
push
dec
hlt
or
stc
cs
mov
cmp
xchg
shl
lea
push
pop
jle
out
cmp
add
xor
(bad)
movs
xlat
icebp
or
mov
pop
pop
jp
jp
jg
movs
stos
cmps
out
xchg
data16
cmp
or
in
hlt
sub
and
or
or
sub
imul
fs
popf
lods
pop
stos
jg
aas
jmp
mov
frstor
test
adc
inc
repz
mov
pusha
mov
stc
add
jmp
or
push
shl
inc
push
js
lods
pop
or
fidiv
or
cmp
adc
jo
in
cmp
inc
lahf
loope
adc
in
mov
pop
xor
test
not
mov
xchg
popa
cs
lods
dec
pop
dec
add
cwde
mov
add
sbb
inc
out
xor
inc
cwde
mov
je
add
push
outs
dec
cli
add
fadd
out
lds
adc
mov
push
test
aam
cwde
(bad)
aam
pop
ins
ds
ins
adc
push
ret
shl
sub
dec
or
push
cmps
ds
jb
mov
adc
icebp
out
xchg
pop
mov
xor
test
fidiv
in
daa
mov
lods
movs
shr
dec
stos
fiadd
push
js
xor
or
dec
or
jo
(bad)
ss
int3
dec
(bad)
int
mov
push
shl
inc
pop
cdq
mov
cmc
enter
stc
add
push
aad
into
sti
adc
imul
call
lahf
xchg
xchg
test
add
test
sub
jl
or
or
and
mov
(bad)
out
inc
jl
push
icebp
and
sub
cs
mov
mov
scas
push
xchg
in
movs
into
and
retf
daa
fadd
add
push
adc
xor
pop
sub
fist
adc
adc
retf
pop
imul
movs
cwde
push
das
cld
mov
popf
push
scas
aad
(bad)
sti
adc
add
in
jecxz
inc
add
(bad)
sub
pop
and
pop
test
push
xor
into
movs
daa
or
and
cmp
out
xor
xor
adc
es
or
popf
icebp
mov
dec
and
lods
pop
popf
aam
test
push
movs
dec
xchg
push
add
sti
pop
arpl
movs
add
mov
inc
or
fcom
mov
(bad)
in
and
sar
pop
cld
bound
sub
cmp
(bad)
mov
ins
mov
loop
add
sbb
sbb
js
inc
mov
jo
loopne
mov
lods
mov
das
inc
(bad)
pop
call
ret
cmps
push
popa
or
jbe
stos
idiv
push
adc
aaa
xor
data16
jo
mov
mov
cmps
(bad)
jmp
or
sub
sti
loop
and
push
fisubr
jp
imul
sbb
inc
shl
mov
mov
adc
lahf
ret
cmps
jle
sub
inc
into
sub
jl
mov
test
(bad)
data16
push
outs
dec
in
aaa
popa
cwde
aam
aaa
adc
pop
fmul
pop
out
sbb
and
push
jnp
rcl
pop
fnstsw
(bad)
xor
sar
sub
push
xlat
stos
lock
push
aad
mov
mov
(bad)
adc
sub
cmps
test
sub
xor
mov
dec
cwde
or
jns
mov
je
test
mov
sahf
jo
or
jo
scas
xchg
mov
cwde
cmp
mov
push
cmp
inc
mov
xor
ds
dec
add
jle
stos
jbe
push
loop
ffreep
js
fild
push
pop
or
adc
test
loope
ret
test
or
sub
pop
sub
sbb
(bad)
sub
mov
and
lods
repnz
adc
cli
jo
sbb
cwde
sub
fcom
dec
fdiv
mov
mov
dec
xchg
inc
icebp
pop
outs
inc
dec
cmp
fstp
lds
xor
shr
push
mov
xchg
std
jae
mov
sub
cmp
mov
xchg
in
sbb
inc
lods
sar
cdq
dec
jbe
imul
hlt
xor
cmp
sub
test
ret
fiadd
jmp
ret
jmp
inc
pop
das
div
out
retf
sub
pop
adc
icebp
xchg
jecxz
aam
shl
sbb
or
fwait
adc
cs
sub
fst
ins
xor
push
lods
push
push
out
dec
sti
(bad)
or
iret
stos
int
int
mov
add
xor
push
xor
or
bound
out
shl
mov
sub
popf
sbb
adc
sbb
repz
inc
jne
ficomp
stos
jb
shl
sti
mov
fnstenv
movmskps
sub
mov
jae
xchg
mov
out
stos
(bad)
daa
ret
push
push
rcl
inc
in
cmp
shr
retf
lods
mov
inc
(bad)
dec
push
sar
and
sub
test
cwde
popf
mov
lahf
push
xor
pusha
js
or
or
jne
mov
pop
int3
mov
push
sahf
sub
sbb
je
imul
imul
and
mov
aas
retf
push
jge
xor
inc
or
mov
outs
test
ror
push
fmulp
pop
les
push
in
mov
test
jmp
leave
ds
sbb
mov
mov
push
cmp
mov
hlt
out
lsl
mov
aas
add
jmp
add
jae
jmp
pop
sub
cmps
pop
add
mov
shr
in
test
push
lea
sbb
dec
cwde
rcl
and
cmc
add
mov
fild
pop
jle
pusha
imul
or
mov
fldcw
scas
jns
sar
sub
xchg
mov
push
push
popa
mov
pop
gs
fst
mov
mov
call
push
jmp
out
(bad)
ret
xor
pop
pop
mov
xchg
inc
sbb
aas
cmp
(bad)
rol
leave
xor
cmps
std
pop
and
call
stos
lods
ret
cmp
dec
arpl
mov
xor
mov
ss
ror
enter
(bad)
xlat
rcl
xor
int3
sub
aas
pop
fidiv
mov
mov
mov
xor
pop
mov
jb
adc
in
push
lds
mov
push
scas
pop
cs
jnp
sti
mov
inc
pop
test
test
xchg
sub
stos
es
pusha
xchg
xlat
repz
push
pop
rcl
(bad)
stc
fsub
lods
xor
push
push
mov
inc
aad
sbb
inc
out
xlat
call
fist
fabs
sub
sub
mov
jb
add
push
movs
xor
mov
lock
adc
scas
test
lods
pushf
retf
push
pop
dec
cmps
jo
cli
pop
xchg
scas
popf
(bad)
fcomp
(bad)
mov
data16
es
clc
iret
adc
std
das
xor
cmp
dec
test
ja
dec
and
in
lea
ret
cld
sbb
cmps
jg
gs
mov
adc
mov
stos
inc
rol
mov
imul
das
or
mov
int
inc
and
inc
pushf
js
je
dec
es
mov
adc
lea
in
or
das
inc
pop
in
and
and
mov
mov
sti
jmp
xor
sub
(bad)
sub
add
mov
out
stos
mov
fisubr
gs
out
int3
inc
lock
jnp
ret
xchg
xor
in
pop
hlt
cmps
mov
push
out
mov
pop
fsubr
add
sub
inc
fdivr
jbe
sub
push
push
push
jno
push
xchg
mov
lods
int3
cmps
psrld
pop
pop
aad
xor
inc
xchg
aaa
or
bound
sub
sbb
cmp
cmp
fimul
jae
xor
jmp
fidiv
imul
mov
and
frstor
fmul
sbb
mov
push
xchg
iret
imul
sbb
sbb
pushf
push
or
add
sbb
or
imul
sub
call
bound
out
lds
adc
call
or
cwde
mov
inc
xor
clc
xchg
sti
pop
inc
add
ret
lahf
push
add
xor
je
inc
push
setns
or
xor
cmp
retf
xor
in
mov
push
movs
inc
jmp
sub
dec
push
cli
(bad)
or
inc
in
xor
jmp
and
inc
in
push
fimul
mov
jmp
xchg
pop
out
cmps
mov
fwait
inc
and
adc
xor
cmps
mov
cdq
int3
repz
pop
cmp
inc
xor
das
sub
xor
es
push
jle
inc
inc
(bad)
pop
jecxz
test
or
inc
fs
test
add
ja
cmp
dec
popf
retf
sub
mov
out
push
push
pop
jg
dec
inc
mov
jmp
int
cdq
lahf
icebp
int3
xchg
movs
cwde
outs
mov
add
push
pop
mov
and
and
pop
pop
fwait
hlt
call
es
lods
cld
jno
xor
inc
icebp
sbb
fisttp
pop
ret
sbb
jle
jns
xchg
and
call
and
mov
(bad)
imul
call
cs
mov
mov
mov
iret
pusha
sbb
mov
mov
fwait
cmp
movs
jecxz
cmp
cmp
mov
push
mov
or
or
mov
push
mov
daa
retf
xor
sbb
jb
test
in
mov
mov
ret
lods
ret
adc
xor
jmp
jae
push
jmp
push
inc
push
outs
in
pop
rcr
cmps
cmp
push
mov
fcmovne
mov
xchg
and
xchg
push
inc
adc
rcl
push
popf
cmp
outs
inc
add
push
inc
jns
daa
loope
dec
fld
or
jbe
inc
aaa
iret
cmp
sar
pop
sbb
jnp
inc
test
sbb
hlt
pop
jg
sti
pop
(bad)
(bad)
mov
and
mov
and
mov
adc
out
shr
mov
fidivr
adc
test
enter
cmps
xlat
retf
aaa
pop
push
hlt
push
mov
pop
shl
push
jae
push
daa
(bad)
push
push
bswap
push
mov
cli
add
pop
sar
aad
shl
add
shl
ret
loop
mov
xchg
outs
add
mov
and
in
pop
ds
sbb
push
mov
xchg
inc
js
leave
cmps
test
dec
gs
out
push
mov
scas
jp
(bad)
ds
in
jnp
adc
fdiv
clc
pop
js
dec
mov
cld
push
mov
push
and
das
adc
xor
rcr
leave
mov
dec
push
bound
cmps
sbb
ficom
(bad)
out
inc
adc
mov
(bad)
iret
cwde
test
xchg
sub
ins
pop
pop
mov
sub
mov
imul
xor
pop
xchg
push
popa
(bad)
outs
std
ds
dec
outs
sub
and
xlat
or
scas
in
loop
xor
and
xchg
or
or
bound
lahf
(bad)
frstor
rcl
pushf
jp
repnz
aaa
enter
mov
cwd
cmc
push
pop
nop
jnp
pop
sub
ins
loopne
push
aaa
lods
lahf
or
pop
call
push
cmps
clc
(bad)
sbb
xchg
scas
bound
in
mov
pop
jg
add
cwde
pop
xchg
loop
imul
ret
aad
and
in
push
hlt
(bad)
(bad)
push
cld
mov
jb
mov
cmp
scas
mov
push
daa
xchg
cdq
ficomp
bound
xchg
movs
iret
in
and
repnz
xchg
call
(bad)
mov
pop
or
jg
scas
sahf
and
dec
fstp
sahf
push
call
mov
cmp
fnsave
jne
and
or
jnp
cmp
xchg
push
std
cmps
pushf
fs
xor
push
fbld
and
repnz
push
ret
push
bound
dec
clc
test
call
cld
mov
jne
mov
mov
gs
push
repz
(bad)
ins
iret
imul
ret
aaa
js
mov
aad
out
or
out
scas
pop
popa
mov
sub
daa
in
push
mov
icebp
cmp
or
dec
mov
iret
or
and
(bad)
lods
aam
cwde
mov
pop
repz
mov
repnz
test
icebp
loop
not
sub
xchg
ret
test
mov
inc
pop
std
xchg
cmp
sbb
lods
pushf
cmp
sub
dec
retf
les
add
cs
add
cmps
cld
dec
jns
movs
popf
sbb
mov
arpl
mov
or
pop
(bad)
pop
push
loop
or
pusha
push
jae
int3
mov
dec
dec
push
pop
jle
inc
jmp
and
into
and
adc
pop
out
mov
(bad)
jo
jno
xor
int3
or
jnp
push
fs
jae
pop
mov
retf
mov
ret
fdivr
cmp
jmp
or
sbb
mov
inc
aas
adc
push
mov
cwde
jge
ficomp
cmp
scas
push
cmp
cmp
jne
retf
mov
cld
xor
inc
mov
push
imul
jnp
xchg
movs
int
test
cmps
repnz
cmp
jmp
in
(bad)
clc
ret
jl
scas
jb
jp
pushf
in
sbb
in
cmp
dec
jo
fisubr
jle
push
xchg
fbstp
icebp
mov
push
jnp
mov
sub
std
pop
mov
mov
push
nop
fcmovnb
lahf
cld
dec
mov
xchg
xor
cwde
xchg
mov
sub
daa
mov
int3
aaa
xor
pop
sub
inc
mov
inc
xlat
sub
xchg
mov
pop
popf
cmps
test
daa
cmp
mov
push
and
cmp
popf
fstp
push
sbb
or
xor
add
in
in
mov
rcr
pushf
cdq
mov
dec
dec
mov
pop
pop
loop
xor
sub
push
xor
ret
std
shl
jmp
cmp
call
pop
daa
and
cmp
xchg
shl
pop
(bad)
iret
and
shl
add
and
test
mov
stos
add
cmp
ss
popf
add
addr16
sub
mov
xchg
push
fs
cwde
inc
lods
pop
and
stos
retf
pop
pushf
mov
int3
or
je
add
lods
aam
inc
pop
mov
dec
or
push
jp
fwait
xor
dec
(bad)
ss
push
test
sub
push
rol
push
xchg
gs
imul
(bad)
cmp
lods
sti
out
push
or
mov
mov
xchg
mov
int
fwait
(bad)
lds
ss
(bad)
shl
js
aam
movs
inc
sub
nop
sbb
fadd
lock
mov
xchg
ja
out
and
jae
jnp
arpl
arpl
je
sbb
dec
stos
mov
fmul
in
cs
sbb
mov
fs
cmp
push
ja
cmp
xor
retf
sub
push
push
and
sbb
fwait
rcr
test
ror
xlat
push
pop
sbb
addr16
jecxz
jp
xor
jo
fimul
in
fstp
sub
popa
pop
dec
cmp
popf
ins
adc
cmc
cdq
ds
leave
retf
mov
retf
mov
xchg
adc
jns
or
and
inc
cli
mov
ja
iretw
sub
mov
movs
test
call
shr
jae
xchg
aas
dec
push
in
test
test
xor
pop
outs
xor
xor
outs
data16
repz
int3
gs
mov
jnp
test
cli
dec
push
dec
rol
or
mov
mov
and
mov
mov
jns
pop
fsubp
dec
push
adc
lds
and
ret
aaa
sub
dec
xchg
push
or
mov
icebp
jmp
xchg
fstp
cmp
push
sti
icebp
in
out
and
mov
out
je
and
out
arpl
(bad)
arpl
or
jnp
cmp
lea
mov
and
mov
fiadd
and
jb
out
and
test
ret
popf
sbb
push
cmp
fdiv
mov
sahf
push
or
mov
or
nop
or
cmovne
mov
fidivr
movs
dec
mov
mov
and
mov
mov
cmc
ror
inc
rcr
pop
jmp
hlt
inc
ins
push
pop
xlat
fcmovnu
jl
pop
call
sahf
stos
dec
sti
test
(bad)
xchg
icebp
mov
or
or
pop
cld
sbb
sbb
pop
hlt
xchg
pop
out
popf
retf
mov
push
sbb
out
push
outs
xor
sbb
xchg
aaa
cmp
(bad)
xchg
dec
inc
aad
adc
jb
jnp
ror
mov
mov
mov
cmp
sar
jp
inc
ficomp
fisub
and
add
mov
sub
xor
dec
ins
sub
(bad)
sahf
rcl
shl
pop
adc
pop
dec
inc
adc
or
dec
mov
sbb
popf
mov
add
jl
xchg
in
shl
movs
adc
lea
cs
mov
xor
call
push
xor
sub
fisubr
adc
mov
aad
sbb
adc
data16
out
sub
int3
ret
into
cdq
pop
dec
mov
xchg
shr
or
mov
pop
test
mov
mov
inc
xlat
sbb
mov
push
adc
sub
mov
mov
push
adc
scas
test
popf
sub
(bad)
push
mov
adc
mov
inc
cwde
scas
mov
jmp
mov
or
push
mov
aas
test
cmp
mov
gs
in
mov
push
test
leave
shr
dec
and
fidiv
sub
mov
pop
jno
add
mov
xchg
rcl
sbb
push
fmul
jb
and
rcr
mov
mov
cs
sbb
jbe
cli
jbe
call
ret
and
lock
xor
repnz
jp
sbb
xor
leave
dec
push
jp
mov
mov
push
push
sar
pop
push
pop
jp
enter
sbb
push
jle
inc
out
mov
dec
icebp
imul
add
std
fs
fdivr
push
dec
xor
jg
jg
mov
lock
xor
inc
repnz
or
mov
xor
arpl
shl
xor
push
enter
xor
cmc
pop
pop
stos
mov
push
or
call
ds
inc
jecxz
sar
les
cmp
adc
dec
and
mov
fmul
jge
cmps
(bad)
jecxz
ins
jle
int
mov
in
cli
pop
xor
cdq
jno
fisub
scas
inc
in
mov
retf
pushf
loopne
loop
xor
sub
mov
cmp
sub
dec
inc
scas
adc
pop
fmul
movs
rcr
cmp
mov
push
arpl
push
jo
jae
aaa
and
nop
sbb
and
inc
pop
fbstp
inc
imul
lea
or
ins
mov
rcl
shl
stos
mov
cmp
jl
inc
or
push
imul
gs
jp
inc
jmp
inc
cmps
mov
mov
ins
loopne
ss
jmp
fucom
(bad)
rol
iret
mov
outs
repz
jb
test
pop
test
scas
mov
cwde
adc
les
and
ror
cmp
or
xor
(bad)
ins
inc
adc
fdiv
jns
push
mov
(bad)
xor
dec
mov
pop
mul
push
mov
test
sbb
lea
aaa
or
jecxz
cmc
pushf
imul
lock
lds
pop
sub
dec
dec
ja
and
cwde
adc
jp
dec
cmp
or
jl
fbld
mov
jae
fiadd
sbb
stos
in
(bad)
xchg
aaa
pop
or
push
stos
ret
lds
push
out
sbb
nop
loopne
fidiv
push
jno
fcom
stos
dec
daa
cmps
daa
jecxz
jb
inc
scas
inc
adc
arpl
push
neg
dec
mov
retf
fwait
jmp
mov
aam
fwait
jmp
out
div
and
dec
pop
xchg
(bad)
ret
push
jae
mov
xchg
adc
mov
xchg
movs
(bad)
cld
stos
sbb
pop
test
lods
jnp
xchg
and
sbb
add
and
ret
dec
bound
mov
and
or
mov
inc
ins
js
xchg
push
je
mov
cmp
pushf
scas
dec
xor
ror
jno
fucomi
sbb
jo
gs
push
pop
or
sbb
add
adc
sub
jmp
pop
and
jg
or
xchg
loop
jns
mov
imul
lds
popa
and
mov
std
jb
in
push
shr
dec
mov
(bad)
int
push
arpl
cld
cmp
inc
mov
pusha
cmp
mov
xor
inc
ds
sub
out
dec
ja
jne
adc
sbb
fistp
cdq
daa
jg
xchg
inc
xchg
dec
addr16
jle
add
fcom
sbb
xchg
push
outs
add
ss
lods
movs
fild
mov
fadd
jne
sbb
imul
mov
xor
(bad)
div
inc
jb
mov
scas
retf
dec
mov
push
retf
sbb
outs
pop
stc
dec
jnp
xchg
inc
mov
cdq
pop
rcr
xchg
mov
dec
mov
mov
in
call
sti
xchg
adc
mov
retf
sar
shl
sub
(bad)
ins
lods
aam
outs
jno
mul
mov
jnp
pop
mov
cmp
xchg
(bad)
out
mov
call
or
cmp
sbb
xor
(bad)
(bad)
stc
sbb
imul
scas
push
xor
mov
mov
dec
movs
and
lock
dec
xor
lahf
shr
pop
mov
jne
add
xor
in
mov
pop
dec
mov
outs
cmps
cmps
sbb
push
adc
pushf
xchg
loop
int3
dec
je
je
ds
movs
sbb
and
mov
popa
push
push
scas
ja
mov
clc
push
sbb
(bad)
aas
lods
(bad)
rcl
out
mov
jge
xchg
icebp
loope
adc
and
jnp
cmp
cmp
mov
in
lea
dec
test
xchg
aas
fsubr
or
pop
es
mov
pop
fdiv
jge
pop
fsub
mov
mov
fdiv
mov
push
ins
mov
sub
cmp
add
jge
pusha
ret
dec
ret
rcr
leave
test
add
xchg
call
jo
mov
rcl
fcomp
push
xchg
jb
sbb
(bad)
lea
cmp
cmp
mov
pop
shl
sbb
cs
(bad)
in
aad
rcr
stos
sbb
adc
(bad)
movs
loopne
jge
bnd
sub
and
imul
out
add
mov
inc
stos
xchg
out
sub
pop
mov
js
scas
jns
rol
rcr
mov
push
mov
mov
lds
aam
mov
mov
dec
loopne
leave
retf
inc
fcmovb
pop
enter
scas
push
iret
sbb
fisubr
sbb
sbb
xchg
repz
mov
pop
js
loop
in
pop
cmps
stc
sub
aaa
cmp
int
pop
shr
(bad)
sahf
fisubr
lea
or
xchg
mov
push
add
push
adc
jne
loopne
icebp
cs
repnz
jmp
daa
jle
inc
push
push
fisub
sbb
sbb
jmp
gs
pop
iret
inc
and
cmp
sbb
push
sbb
pop
mov
mov
cld
inc
loopne
sub
cmp
movs
push
mov
ds
arpl
add
sub
pop
inc
push
fidivr
adc
dec
or
fisub
mov
cmp
pop
mov
js
imul
aaa
xchg
ds
xchg
dec
jmp
pop
dec
push
mov
push
pop
ins
hlt
fwait
jns
adc
xor
push
jbe
bound
or
(bad)
shl
adc
and
aaa
cmps
in
mov
movs
or
call
mov
out
mov
movs
loopne
inc
shl
mov
dec
mov
jmp
sub
cli
sar
repz
mov
daa
push
adc
retf
dec
pop
xchg
inc
in
or
xchg
lea
ss
or
sbb
outs
and
stc
sub
inc
(bad)
cli
push
test
cs
adc
in
mov
aas
ss
push
or
int
leave
add
push
lds
sbb
call
push
inc
adc
js
add
adc
stos
or
leave
leave
jbe
sar
mov
dec
fisub
add
adc
or
mov
xor
mov
push
push
leave
cmp
mov
ja
pop
push
sbb
jecxz
sar
(bad)
out
mov
(bad)
xor
pop
and
idiv
inc
fstp
sub
in
dec
mov
pop
mul
mov
mov
sti
mov
bound
push
ret
xchg
mov
adc
jnp
or
push
mov
stos
arpl
mov
inc
test
or
jecxz
int3
add
rcl
mov
dec
pop
mov
sub
sbb
js
in
jae
mov
mov
lods
push
xchg
stos
fist
std
test
cmp
mov
sbb
pop
inc
xchg
pop
sbb
into
jge
inc
sub
aam
outs
and
sbb
jg
ins
sahf
xchg
jo
push
and
adc
inc
push
mov
test
addr16
xor
jmp
in
cli
or
je
adc
loopne
aas
scas
pop
outs
cmc
inc
dec
sbb
pop
adc
(bad)
out
add
xchg
dec
add
fld
daa
mov
xor
enter
sbb
jl
shl
movs
aam
loope
out
push
adc
icebp
lahf
out
push
and
cs
not
fmul
mov
repnz
and
enter
xor
loopne
cmp
mov
in
mov
mov
loop
mov
push
mov
pop
xlat
test
jnp
cmps
and
mov
(bad)
or
inc
pop
and
push
pop
in
mov
xchg
inc
add
sahf
icebp
mov
ret
fist
aad
(bad)
dec
arpl
xchg
push
out
jl
pop
inc
sar
pop
cmp
dec
sub
outs
test
repz
cmp
adc
inc
jbe
ins
pop
push
into
xor
ins
or
loop
dec
bound
dec
push
xchg
dec
stos
out
(bad)
jl
or
test
sahf
std
mov
xor
jo
xchg
inc
mov
inc
push
mov
rol
(bad)
jge
pop
cmp
test
and
retf
and
mov
mov
adc
nop
dec
sub
mov
mov
out
jge
or
jg
jecxz
jbe
jb
cmp
push
adc
pop
dec
dec
repz
aad
jmp
movs
inc
das
xchg
sbb
mov
aas
sub
push
xchg
lock
xor
rol
test
fwait
cld
jge
and
xchg
pop
in
push
jge
jns
push
in
mov
out
push
dec
outs
jle
dec
sbb
scas
cdq
add
adc
fnstcw
retf
dec
mov
stc
push
arpl
outs
(bad)
out
xor
push
push
out
je
xor
pop
inc
popa
jnp
inc
xor
sub
stos
js
fcmovbe
and
outs
sub
(bad)
out
ret
inc
dec
je
and
adc
xchg
outs
fwait
test
movs
mov
xchg
popa
ja
cdq
out
fadd
inc
xor
aas
sar
pop
mov
push
or
xlat
loopne
ins
scas
jp
xchg
adc
in
mov
xchg
repz
std
xor
cmp
xchg
popf
shl
mov
inc
push
inc
iret
jecxz
fwait
push
push
cs
push
je
mov
cmps
jmp
aad
jmp
ja
shl
mov
mov
loope
outs
adc
lock
add
push
shl
xchg
in
into
cmps
leave
mov
inc
sbb
popa
hlt
sub
mov
dec
gs
ret
cwde
pop
aaa
loop
sbb
adc
out
push
or
scas
mov
inc
add
cmp
ret
jb
cmp
xchg
popf
lods
mov
loopne
dec
(bad)
repz
pop
sub
les
dec
jo
xchg
lahf
call
es
push
shr
and
push
sbb
jle
mov
loopne
dec
xchg
faddp
adc
aaa
loopne
js
adc
cli
into
out
xor
out
jb
mov
pop
jns
arpl
mov
mov
push
push
call
fucom
xchg
pop
sub
stos
shl
jbe
into
test
push
sub
gs
jmp
test
push
xor
cmps
in
fcom
jns
sub
clc
mov
aas
add
les
cmp
jbe
jle
cld
jnp
ret
rcr
stc
adc
and
mov
out
cs
pop
scas
or
out
cmp
dec
cmps
test
mov
jmp
gs
out
in
push
jo
mov
jne
sub
mov
loope
arpl
stc
fimul
mov
push
mov
fidiv
jl
jo
mov
iret
mov
js
cmp
in
pop
xor
jne
stc
jae
pop
pop
mov
je
dec
mov
int3
shr
cmp
test
dec
ja
lahf
in
or
dec
add
popa
in
inc
aaa
int3
inc
repz
pusha
int3
imul
inc
xchg
jae
cs
movs
sbb
fwait
into
mov
popa
mov
(bad)
mov
pop
xor
xchg
sahf
jecxz
movs
cwde
aaa
jge
cmp
sub
shl
loope
leave
call
or
mov
push
jmp
(bad)
and
adc
mov
dec
stos
sub
mov
mov
and
(bad)
outs
mov
jge
or
xchg
xchg
(bad)
out
into
jns
pop
mov
test
sti
retf
nop
je
xor
ins
out
or
outs
and
mov
retf
pushf
sub
jno
fs
mov
(bad)
xor
scas
shl
and
mov
and
pop
imul
mov
or
xchg
jmp
int
dec
dec
xlat
mov
lods
xchg
int
icebp
in
cmp
mov
scas
les
pusha
cli
in
or
push
sbb
inc
pop
push
lea
xchg
dec
lahf
dec
das
shr
mov
inc
adc
push
imul
scas
sbb
pop
rol
add
scas
and
test
xor
jb
movs
pop
cmp
jo
jns
ret
mov
adc
cmovae
add
pop
imul
mov
pop
pop
pop
lods
lods
out
cmp
fdivr
sbb
call
cmp
and
out
out
xor
cmps
and
ds
mov
push
gs
movs
inc
push
add
int
fsub
xrstor
mov
into
inc
mov
push
ds
jno
rol
xor
cmps
icebp
test
pop
inc
or
std
mov
call
cmps
mov
xchg
push
aad
imul
push
push
aam
adc
lods
cmc
shl
push
pop
inc
jp
pusha
scas
push
shr
mov
enter
inc
jo
scas
addr16
adc
clc
pushf
in
adc
bound
popa
sbb
clc
into
call
push
inc
mov
shl
adc
scas
hlt
sbb
gs
cmp
add
out
imul
repnz
cld
outs
cmps
dec
mov
xchg
and
pop
push
sar
jmp
in
jnp
mov
pusha
mov
pop
pop
mov
pop
cdq
push
sub
sub
jecxz
hlt
test
dec
outs
out
iret
dec
fcmovnb
cmp
rcr
mov
push
iret
xchg
xchg
retf
movs
ret
mov
mov
adc
xchg
daa
jmp
les
daa
jne
outs
sbb
call
(bad)
stc
jmp
jae
bound
pop
pop
lods
or
xchg
push
jge
dec
push
lock
pop
arpl
or
leave
mov
std
mov
pop
aad
xchg
hlt
jecxz
adc
mov
(bad)
sbb
sbb
sbb
jmp
pop
repnz
xor
sbb
in
and
rcr
loop
not
or
xor
rcl
in
mov
dec
cli
jecxz
(bad)
sub
push
adc
into
push
stos
push
jae
jmp
or
je
idiv
std
cmp
test
and
push
std
adc
adc
mov
les
scas
addr16
xor
inc
fwait
push
movs
jns
sbb
leave
inc
loope
pop
lock
aad
xchg
cmps
fwait
shl
cld
jmp
inc
sbb
and
mov
cmp
sbb
out
fcomp
fld1
daa
and
ja
sbb
or
cli
xor
push
fimul
inc
pop
jbe
adc
sbb
and
jae
aas
mov
outs
jbe
mov
push
test
fcmovnu
aaa
fnstsw
sub
cmps
jge
out
into
fwait
dec
and
loopne
arpl
aad
lock
jl
add
ffreep
movs
sub
jo
sbb
push
(bad)
ins
stos
nop
add
retf
mov
jae
fs
jbe
out
add
xchg
dec
adc
cdq
mov
imul
sahf
iret
sti
into
sub
xchg
les
aam
pop
imul
or
test
fwait
jp
dec
dec
scas
call
pop
test
out
cmp
add
out
mov
sbb
retf
test
adc
bswap
inc
adc
xor
ror
fcomi
mov
push
rcl
out
xlat
out
repz
loope
mov
and
fnstenv
js
loope
or
outs
jl
inc
ins
(bad)
arpl
inc
das
retf
or
sbb
out
mov
lock
pop
psubusw
shl
jmp
mov
sub
ss
ds
fisubr
stc
daa
mov
pop
maxps
push
dec
sbb
iret
sbb
je
xchg
pop
jo
std
cmp
(bad)
push
fisttp
test
arpl
push
jmp
je
mov
icebp
hlt
add
rcl
and
fimul
xchg
cli
xlat
mov
ret
cli
pusha
imul
push
mov
mov
push
lea
push
ror
sub
shr
js
fsubrp
ficomp
ins
fist
xor
es
push
add
dec
mov
movs
fidiv
or
fbld
rol
and
out
push
std
iret
in
sbb
adc
sbb
xchg
and
mov
lock
sub
dec
sub
fcomi
repnz
mov
loop
jmp
or
test
xor
jmp
aad
(bad)
scas
jnp
outs
mov
jae
repz
cmp
and
push
cs
ret
bound
test
xchg
sub
fdiv
mov
hlt
xchg
mov
push
das
in
dec
xchg
and
inc
inc
lock
or
push
mov
int
mov
ss
push
fsubr
out
retf
out
mov
out
jbe
xchg
mov
sub
cli
jmp
call
fcom
mov
inc
xor
pop
push
int
xor
push
in
xor
fild
jns
inc
call
call
repz
pop
ins
(bad)
xchg
or
dec
call
push
mov
jbe
ins
fcompp
jns
adc
xor
xchg
adc
into
ds
dec
jmp
sbb
push
jae
test
lock
in
(bad)
stos
mov
inc
xchg
mov
aad
pop
adc
adc
outs
hlt
sub
retf
in
ins
outs
mov
je
adc
xchg
inc
and
outs
add
mov
jmp
pushf
mov
movs
push
dec
cmp
adc
sub
jne
adc
sub
add
add
pop
ss
into
scas
lods
inc
mov
ret
(bad)
xchg
test
es
pop
xchg
pop
fistp
xchg
cmps
inc
aad
mov
jne
xor
cdq
or
pop
cmp
aam
fst
leave
jp
or
sti
pop
sub
aas
cmp
pop
test
dec
daa
push
pushf
add
mov
jl
inc
(bad)
rcr
fcomp
jl
ins
mov
outs
or
xchg
movs
in
inc
dec
popf
push
js
jns
lods
mov
or
xchg
inc
cld
push
mov
lahf
lea
sti
fistp
retf
push
sbb
rol
in
fstp
test
daa
fwait
jns
push
and
jmp
fcmovnu
push
clc
fisubr
inc
sub
xchg
push
jg
sub
mov
push
in
(bad)
aad
(bad)
nop
retf
test
add
xor
iret
sbb
and
mov
inc
ret
mov
push
sbb
mov
imul
xlat
jo
aaa
aas
pop
pop
sub
(bad)
mov
dec
or
fiadd
ror
push
enter
inc
mov
add
(bad)
js
mov
push
push
fcmovnb
cmp
enter
xchg
and
jnp
fsubr
lds
push
cmps
das
aas
lea
jns
out
add
ficom
mov
repnz
sbb
adc
js
ror
mov
movs
sar
ret
cld
(bad)
fcmovb
inc
or
mov
push
repz
gs
xchg
mov
mul
adc
iretw
and
adc
cmp
popa
cmp
push
mov
iret
push
inc
xor
scas
or
mov
cwde
sahf
in
jge
jp
out
sbb
jbe
mov
pop
idiv
mov
mov
sbb
out
icebp
xor
hlt
test
sub
bound
inc
jne
or
mov
push
add
out
mov
mov
std
mov
sub
xchg
mov
out
push
push
imul
mov
stc
mov
aas
push
xchg
cmp
iret
out
pop
ins
add
pop
pop
mov
sub
cli
cmp
and
pop
test
cs
cmovbe
sub
xchg
cmp
fs
sbb
add
push
jnp
je
shl
cs
ffree
or
sbb
hlt
xchg
daa
xchg
das
pop
scas
fstp
add
dec
pop
mov
adc
in
jmp
jg
retf
xor
fisttp
xor
inc
icebp
inc
pop
dec
inc
jl
out
fwait
nop
sar
icebp
cmp
or
fmulp
push
fwait
int3
mov
push
fstp
pop
lds
xor
pmuludq
sbb
sub
bnd
fcomp
imul
dec
jae
ins
bound
lods
sub
mov
sub
xchg
data16
jae
or
iret
or
add
pop
int3
cdq
mov
cmp
mov
xchg
xchg
fst
dec
fld
push
add
ds
fcomp
in
cmp
pusha
into
dec
dec
xchg
pop
jb
pop
js
out
(bad)
mov
jo
or
pop
xchg
xchg
xchg
lds
fisubr
mov
in
push
mov
mov
inc
inc
mov
retf
test
mov
clc
inc
cmc
cdq
cmp
add
sbb
in
repz
aaa
add
shr
int
movs
add
cdq
retf
movs
push
sbb
push
sub
sub
stos
or
and
pop
rcr
and
adc
cmp
ins
test
xchg
mov
jns
inc
push
repnz
dec
ror
mov
xor
in
aam
pop
cmp
add
xor
mov
add
rol
test
add
sbb
push
lods
mov
push
jmp
or
mul
call
add
(bad)
dec
sub
loope
push
and
mov
inc
and
popf
add
jmp
sbb
mov
jecxz
sub
xchg
mov
stos
sti
inc
sbb
sub
gs
or
test
dec
push
cdq
lods
inc
(bad)
pop
sbb
or
xchg
fnstcw
(bad)
mov
jg
push
scas
and
adc
push
xchg
and
dec
xchg
add
sub
jl
dec
repz
out
outs
adc
pusha
cmp
mov
scas
rcr
sub
in
repz
xlat
retf
pop
push
and
adc
mov
sub
aaa
ins
xchg
pop
mov
(bad)
xor
jecxz
js
or
cmp
ror
ins
clc
pop
or
(bad)
clc
mov
push
sbb
daa
test
pop
push
ja
test
stos
in
or
in
xchg
bound
inc
cmc
cmc
pop
dec
ins
mov
nop
add
jmp
push
into
shl
std
dec
mov
and
test
in
pop
inc
add
push
cmp
push
mov
loop
adc
hlt
rcr
pop
shr
and
dec
call
fild
cmp
in
out
leave
aaa
pushf
inc
les
(bad)
xor
ficomp
in
push
iret
push
pop
mov
hlt
inc
push
push
fwait
out
out
mov
ins
add
add
ror
fs
mul
mov
retf
xchg
pop
jno
lods
xchg
push
jg
fmul
cmp
mov
gs
add
jb
fdiv
xor
xchg
push
sbb
stos
(bad)
push
lock
stos
mov
adc
inc
adc
push
mov
(bad)
in
sbb
xchg
cli
sub
xchg
xchg
int3
hlt
push
cmps
fwait
dec
sahf
int3
jbe
or
shl
push
retf
cs
fidivr
retf
lds
imul
add
xchg
shr
inc
dec
into
movs
cmp
les
push
pop
inc
call
add
loop
xor
pop
mov
push
jecxz
jl
retf
test
xor
add
cli
dec
(bad)
retf
inc
out
mov
xchg
popf
pop
in
bound
call
aaa
adc
ss
jne
pop
ss
dec
sub
cli
xchg
ds
repz
mov
cmp
adc
push
jecxz
mov
loop
jmp
lahf
jnp
pop
dec
sbb
or
fcmovb
fwait
ja
enter
stos
xchg
ror
jnp
and
ins
mov
pop
stos
fcomp
loop
add
loopne
ret
daa
repnz
ja
or
rcl
add
sub
stos
mov
shl
jp
dec
push
add
sar
(bad)
mov
xor
xor
jno
adc
jne
retf
lock
in
aam
mov
jp
or
fsub
fmul
aaa
push
and
pushw
sub
inc
mov
sbb
loop
(bad)
and
stos
xlat
popf
pusha
cdq
je
aam
mov
ds
dec
cli
stos
mov
sub
test
sub
push
mov
xchg
push
gs
pop
adc
inc
cmp
xor
pop
ins
dec
iret
test
inc
aaa
rcl
add
fist
pop
cmp
ds
nop
xchg
xor
in
jge
(bad)
ds
pop
icebp
and
pop
lea
inc
ja
dec
iret
push
jno
push
mov
sahf
int3
(bad)
in
adc
add
stos
xchg
jbe
pop
cmp
push
sub
pop
mov
cmc
push
dec
aam
(bad)
rep
dec
setl
push
xchg
pop
out
mov
adc
pop
shl
push
jne
call
imul
jmp
push
inc
dec
dec
adc
mov
test
mov
and
cdq
scas
jne
dec
or
mov
cmc
or
out
mov
sub
repnz
dec
jae
test
jne
loopne
cwde
dec
arpl
test
or
mov
mov
jp
div
jne
dec
push
mov
stos
sbb
cmp
arpl
enter
pop
push
in
lods
or
cdq
xchg
pop
pop
mov
test
movs
lock
push
les
shl
fwait
ss
(bad)
jnp
mov
or
not
out
mov
cmc
and
(bad)
arpl
daa
inc
sub
(bad)
fst
shl
and
les
push
inc
stos
or
fidiv
ja
cmp
sub
dec
sub
add
scas
data16
fldcw
mov
jle
lds
dec
jp
mov
jnp
aam
mov
push
lods
(bad)
jecxz
mov
xchg
cmp
(bad)
aad
jmp
mov
jns
imul
cwde
sbb
mov
cmp
push
data16
xor
or
loope
push
test
pop
lods
or
aam
aas
mov
stos
sbb
(bad)
sbb
xchg
push
inc
jne
test
outs
adc
aad
das
sub
sar
pop
xor
rcl
xor
test
mov
adc
das
dec
xchg
pusha
cmp
hlt
dec
dec
(bad)
push
cmp
push
push
lods
sbb
out
adc
shl
pop
pusha
xchg
inc
sub
movs
xlat
xor
in
call
or
adc
jge
jp
mov
xor
in
popf
pop
mov
and
sub
adc
inc
add
cmp
push
xchg
cmp
jge
aas
pushf
adc
std
push
and
arpl
std
cmp
ins
or
lods
push
repnz
add
jecxz
xor
cmps
mov
inc
add
and
cmp
push
cmc
(bad)
loop
and
xchg
jmp
scas
add
test
je
xchg
into
int
jns
or
jl
push
aaa
cmp
lods
fisubr
cmc
mov
mov
les
mov
mov
sbb
xchg
and
mov
not
jo
test
pop
(bad)
sbb
mov
xor
add
xor
stos
xor
cmp
push
pop
lods
xchg
push
pop
xchg
push
cmp
outs
jg
cwde
iret
sbb
lea
cmc
cmc
ds
jmp
ficom
inc
inc
cs
repnz
icebp
test
ins
sbb
mov
hlt
jmp
shr
sahf
sub
mov
mov
and
sub
enter
mov
imul
sbb
mov
sahf
ds
jge
adc
or
clc
cmp
cmp
std
mov
lock
test
push
mov
push
mov
mov
mov
cmp
push
mov
jmp
pop
pop
xchg
cwde
rol
xor
sbb
aam
addr16
imul
mov
mov
xchg
mov
push
mov
and
dec
loope
aas
or
dec
movs
enter
push
repnz
(bad)
fldenv
jg
jmp
shr
mov
xchg
inc
push
jp
in
addr16
fs
into
push
and
aam
mov
sbb
pushf
ror
gs
mov
or
inc
fisttp
or
aam
push
sbb
fcom
add
icebp
scas
(bad)
xor
inc
ret
mov
mov
mov
push
mov
fidiv
in
stc
arpl
retf
js
shr
sar
mov
loop
xchg
inc
iret
sbb
push
sbb
xor
fdivr
and
bound
cwde
pop
jo
mov
ss
jecxz
sub
jnp
repz
adc
or
scas
ret
push
adc
add
xor
(bad)
leave
inc
mov
daa
pop
mov
pusha
pushf
in
icebp
push
fistp
dec
or
test
push
cli
or
popa
cmp
xor
or
mov
push
sub
cli
jp
loope
lods
in
xchg
xchg
and
jmp
mov
xchg
aam
lods
jae
xlat
sub
and
add
ins
gs
das
js
push
aam
stos
retf
pop
iret
jmp
lds
fadd
inc
mov
jmp
test
lock
push
dec
outs
or
aas
cmc
or
hlt
ds
leave
lea
fnstenv
int3
mov
aaa
outs
in
pop
out
icebp
ret
vpackuswb
xor
and
cmp
vcvtsi2ss
jg
mov
dec
aam
mov
xor
in
sahf
ror
aaa
inc
imul
in
retf
jmp
fidivr
mov
pop
push
retf
mov
stos
dec
adc
adc
cmp
jbe
xor
loopne
push
pop
xor
ins
cmp
mov
pop
fst
in
ja
(bad)
daa
sbb
stc
lea
popa
mov
add
push
push
add
add
shl
js
sbb
or
popf
stc
movs
lods
retf
adc
out
arpl
push
fld
lods
fs
aaa
dec
out
repz
pop
xchg
sub
lds
pop
push
stc
or
and
daa
adc
sbb
and
mov
hlt
xchg
stos
cld
jbe
mov
sub
je
inc
jbe
data16
xor
test
fstp
jns
pushf
aad
add
int
jle
cmp
adc
(bad)
lods
mov
sbb
xchg
xchg
cmp
test
dec
aad
and
jae
or
(bad)
sub
pop
add
mov
fwait
enter
jge
push
int3
pop
cmp
nop
jb
aas
int3
(bad)
nop
mov
mov
dec
in
loopne
pop
pop
(bad)
xchg
cmp
xor
out
push
movs
out
fmul
xor
xchg
adc
add
jp
jmp
lahf
mov
(bad)
gs
push
sbb
cmc
retf
xchg
lods
inc
iret
dec
sub
push
movs
call
cdq
sbb
push
dec
dec
cli
xor
xchg
lahf
aaa
stc
imul
fwait
pop
or
cmps
mov
xchg
mov
pop
sbb
loope
movs
push
fs
sbb
imul
loop
in
mov
push
xchg
out
into
xor
sub
retf
and
cmp
data16
push
add
mov
adc
mov
cmc
in
loope
push
xchg
jae
lods
mov
ins
xchg
pop
out
call
adc
cmp
outs
fmul
sub
repz
jno
movs
repnz
inc
popa
mov
lods
cmp
dec
js
popa
adc
fimul
push
ss
ja
sbb
fmul
inc
fiadd
sub
stos
pop
dec
test
jle
mov
inc
jnp
push
stc
mov
data16
mov
jge
enter
dec
push
mov
ins
mov
dec
xchg
addr16
(bad)
push
cmp
aaa
sbb
adc
and
jle
inc
cmp
mov
ins
dec
int3
push
sub
xor
lds
rcl
inc
shl
fsub
ss
pop
sbb
sub
dec
mov
xchg
jecxz
fld
(bad)
pop
sbb
mov
idiv
rcl
or
mov
arpl
ss
cmps
stc
sti
inc
aad
sub
dec
inc
and
mov
pop
pop
sub
add
sbb
test
fs
jle
(bad)
int3
mov
dec
add
std
ret
lahf
pop
dec
hlt
xor
push
in
jno
xlat
cdq
and
cwde
jbe
(bad)
lods
push
pop
push
xor
adc
push
push
fst
adc
inc
fcomp
mov
mov
out
add
enter
xchg
jle
cs
retf
cli
sbb
fidiv
adc
js
add
xor
(bad)
nop
ret
out
sbb
stc
xchg
int
add
mov
js
aaa
out
inc
movs
ss
mov
(bad)
shl
pop
mov
or
and
mov
push
mov
mov
push
inc
sub
dec
imul
subps
(bad)
or
lods
xor
jp
mov
pop
inc
cmp
pop
sub
cdq
jmp
adc
js
xor
jbe
mov
test
cmc
xchg
adc
clc
jbe
mov
scas
retf
lea
or
add
mov
lahf
mov
inc
movs
jo
inc
popa
dec
(bad)
int3
jmp
jecxz
mov
retf
jns
rcl
test
movs
test
pop
or
xchg
in
mov
ds
add
loopne
or
lock
mov
push
jle
xchg
pusha
mov
js
call
loope
dec
push
sti
or
les
int
pop
pushf
sbb
scas
mov
xor
xor
cmp
dec
in
cmp
and
sar
shl
mov
out
add
out
aam
pop
mov
push
pop
lock
and
lahf
push
stc
jb
je
mov
rol
adc
fmul
sub
xor
inc
fild
jl
hlt
or
mov
xchg
aad
aam
sub
mov
cmc
nop
hlt
push
leave
jle
mov
je
ja
pop
jl
mov
lahf
xchg
in
rcl
sub
js
push
inc
jmp
les
mov
push
jge
aam
pop
inc
add
shl
xor
cmp
out
adc
nop
adc
mov
je
pop
jle
mov
and
(bad)
xor
jmp
rcr
adc
push
xchg
lods
(bad)
fiadd
cmp
movs
or
xchg
lea
sbb
mov
mov
xchg
add
xchg
leave
xchg
push
push
sub
outs
or
add
xor
mov
sub
and
sub
out
sub
xor
push
xor
aaa
lahf
xor
loope
loope
add
(bad)
lock
or
xor
adc
xchg
push
std
push
cmp
mov
pop
xor
sahf
mov
scas
add
aad
fmul
dec
aam
mov
or
xchg
les
jae
push
xchg
call
stos
or
pop
pop
pop
mov
mov
push
fild
pusha
xor
mov
adc
push
jmp
jecxz
cli
icebp
xchg
in
mov
popa
test
lds
push
ss
xchg
into
jo
fwait
cwde
jae
es
pop
mov
jbe
(bad)
stos
imul
xor
pop
lods
loopne
cs
scas
and
imul
out
pop
pop
rol
js
sahf
dec
xor
(bad)
in
std
pop
sti
xlat
jmp
ret
mov
je
xor
sub
fcomp
xchg
inc
(bad)
push
adc
sub
retf
jno
jmp
or
or
jmp
or
jl
adc
jecxz
adc
push
in
sub
shl
xchg
cmp
xor
xchg
retf
shl
inc
fidivr
dec
mov
shl
mov
pusha
cmp
xor
jbe
pop
jmp
popa
inc
mov
ins
mov
sahf
jo
xchg
ins
(bad)
dec
data16
mov
clc
mov
push
pusha
(bad)
fwait
fwait
ror
scas
rcr
mov
or
mov
push
pop
in
dec
pop
push
sti
xchg
sub
xor
std
ret
fadd
ja
sbb
add
retf
xor
ja
inc
(bad)
dec
adc
std
xor
inc
fwait
stos
aad
(bad)
lahf
pop
fmul
add
xchg
and
leave
sbb
jbe
lahf
or
imul
push
cdq
dec
jle
adc
fwait
bound
(bad)
mov
jno
or
sub
data16
shl
pop
cli
dec
arpl
out
sbb
adc
mul
movs
xlat
adc
ret
pop
sub
sub
mov
fcmovne
gs
and
lock
jmp
push
(bad)
icebp
imul
in
pop
mov
lods
inc
mov
rcr
xchg
push
shl
push
and
add
sub
daa
xchg
sbb
mov
adc
xchg
shl
test
xchg
out
lods
shl
dec
xchg
rol
and
inc
push
dec
imul
in
test
int3
and
stos
mov
inc
mov
outs
xor
xor
pop
fnstsw
mov
sub
movs
sti
mov
inc
and
adc
mov
aaa
aaa
retf
mov
sub
sub
push
jo
cmps
fadd
retf
dec
cmp
cs
(bad)
les
call
sbb
imul
push
jne
cs
je
mov
repnz
xchg
mov
and
pop
stos
push
or
cmps
cmp
jae
lods
mov
pop
add
adc
mov
pushf
imul
add
retf
and
adc
push
cwde
mov
xchg
je
mov
add
hlt
outs
ret
or
iret
cmps
shl
add
sub
and
cdq
adc
sub
mov
aad
int3
test
popa
jge
imul
das
js
push
mov
sti
pusha
cdq
xchg
sub
test
push
mov
xor
dec
mov
retf
retf
pop
fisub
gs
into
pop
inc
fmul
pop
dec
jmp
adc
mov
stos
clc
(bad)
push
iret
cmp
inc
mov
mov
push
call
ffreep
in
mov
cmps
aam
out
inc
add
push
movs
cmc
ins
or
add
mov
ret
dec
aaa
mov
int3
out
jae
mov
cmp
fcmovb
cmp
push
(bad)
aam
arpl
pop
ss
sub
mov
cmp
mov
mov
push
pusha
mov
inc
into
test
mov
mov
xor
popa
shl
jp
adc
shl
pause
(bad)
sbb
mov
sub
pop
or
jmp
sub
inc
fwait
xor
mov
xchg
in
push
mov
mov
mov
ret
xchg
in
jns
pop
shl
stos
(bad)
xor
(bad)
dec
in
jno
dec
mov
daa
ja
adc
pop
sbb
dec
lds
push
jecxz
arpl
stc
es
pop
lds
cmp
shl
dec
in
mov
push
mov
cli
(bad)
lea
loop
xor
jge
sbb
xchg
retf
pop
cli
jle
gs
fsub
aam
arpl
scas
xor
ror
ja
xor
jno
test
pop
dec
adc
push
inc
(bad)
dec
jge
jns
inc
jns
leave
mov
mov
pop
sbb
fld
neg
(bad)
sub
test
rcr
cmps
(bad)
cli
lods
pop
inc
fs
add
loop
mov
dec
mov
repnz
mov
add
adc
push
cmp
out
call
mov
out
sub
and
and
ins
retw
das
retf
cmc
inc
sub
not
mov
test
push
bound
dec
test
adc
mov
sbb
jno
sub
sbb
call
test
ss
fstp
sbb
ficomp
enter
leave
or
fcom
push
xor
inc
das
pop
or
popf
aas
pushf
std
aaa
sub
mov
lds
inc
inc
int
in
jg
adc
mov
push
push
test
or
sub
mov
movs
inc
arpl
scas
shl
jle
aam
jp
push
mov
lods
clc
pop
adc
sbb
mov
fadd
jmp
mov
add
or
push
jle
xor
into
out
or
mov
lock
mov
nop
gs
(bad)
pop
mov
out
fsub
dec
mov
ins
sub
or
sbb
sub
bnd
sti
mov
sbb
popf
cli
into
add
inc
mov
iret
mov
call
sbb
pusha
in
dec
sbb
dec
call
aad
les
mov
test
push
shr
loopne
mov
adc
pop
adc
lods
out
imul
icebp
cmp
xchg
iret
dec
fimul
cdq
mov
xchg
mov
cmp
jp
inc
push
dec
inc
dec
gs
sar
dec
cs
repz
scas
mov
push
dec
or
pop
dec
cmps
adc
xchg
mov
add
and
sbb
ja
(bad)
rcr
xlat
es
sub
add
mov
cmp
sub
loopne
xor
mov
and
xchg
jp
lea
mov
dec
out
and
mov
add
popf
loop
xchg
pmulhw
jb
push
cld
mov
xor
or
jl
shl
mov
cmp
xor
outs
fwait
pop
jo
xor
add
or
test
iret
rcl
pop
popa
mov
mov
out
jecxz
test
inc
sub
std
and
sub
xchg
mov
mov
and
jp
jl
add
xor
sub
cmp
inc
loop
xchg
lods
mov
sbb
out
or
cmp
mov
xchg
mov
dec
and
mov
sub
mov
inc
xchg
cmp
add
adc
pop
stos
stos
pop
add
aas
ret
(bad)
ins
pop
arpl
or
jbe
(bad)
repnz
and
and
xchg
into
mov
scas
ret
repnz
push
push
push
push
add
loope
and
jne
add
pop
sbb
mov
scas
or
and
leave
lea
mov
inc
imul
cmp
adc
mov
jmp
mov
imul
cmp
stos
test
adc
(bad)
jmp
shr
and
repnz
pop
or
sbb
dec
fldcw
cmps
cmp
sub
out
adc
jno
fwait
rcr
mov
imul
in
(bad)
lods
jbe
sbb
xchg
(bad)
clc
rcl
ss
xor
and
gs
sbb
push
mov
mov
pushf
lea
popa
outs
mov
push
lahf
jbe
scas
test
add
inc
jno
jl
aad
fldcw
inc
aam
je
stos
adc
add
add
repz
(bad)
jnp
aam
cmp
or
or
cdq
add
push
mov
adc
mov
mov
dec
jb
mov
popf
sub
pop
xor
add
loop
(bad)
ins
cmc
sub
ins
xor
or
and
ja
and
movs
call
sbb
clc
xor
js
add
cmp
cmp
aad
xchg
xchg
xor
jle
cmp
ret
adc
push
mov
push
dec
dec
mov
rcr
dec
(bad)
jge
ficom
sahf
and
cdq
adc
(bad)
test
test
into
fld
test
jmp
test
mov
sbb
imul
push
pop
or
adc
cmp
call
mov
mov
pminub
call
test
dec
data16
inc
iret
sub
sub
xchg
fisttp
aad
push
pop
sub
mov
lahf
sub
out
inc
jbe
sbb
jl
je
pextrw
push
in
das
(bad)
cmp
jb
lods
sbb
jle
ret
xchg
into
xchg
jns
push
jae
ins
nop
fild
stos
sbb
push
or
mov
push
shl
inc
movs
add
mov
out
sbb
addr16
jle
out
test
mov
nop
xor
outs
push
clc
jge
adc
sub
js
loop
mov
arpl
iret
add
movs
sub
xchg
jmp
adc
jp
ret
seta
out
jle
pop
push
aas
push
(bad)
ror
inc
xor
popa
add
mov
lds
test
xor
lahf
pop
add
out
pop
es
mov
call
lea
je
add
test
mov
dec
(bad)
fdivr
repnz
rcr
fist
jmp
mov
inc
nop
stos
sub
adc
cmp
inc
add
int3
mov
push
and
nop
(bad)
mov
add
jo
and
jmp
ret
jo
arpl
pop
or
in
ret
dec
inc
es
pop
outs
pusha
pusha
pop
scas
cmp
fimul
aad
sub
add
nop
ss
les
jnp
cwde
jmp
sbb
sahf
in
sti
push
fsub
mov
add
dec
ficom
push
adc
mov
inc
daa
fidivr
jle
movs
and
je
imul
xchg
dec
movs
test
push
test
ffreep
bound
xchg
push
and
mov
loope
jb
pop
adc
retf
cmp
stos
mov
xchg
xor
nop
sbb
retf
into
cmp
js
fucom
adc
mov
or
into
shr
repz
fidivr
cmp
dec
pop
aad
call
pop
jno
push
or
(bad)
shr
out
mov
pop
pop
cmc
pop
dec
jb
xor
ret
and
mov
dec
add
mov
mov
call
mov
inc
jnp
mov
xchg
lea
shr
sbb
es
mov
jg
aaa
jmp
cmp
aad
iret
jl
call
imul
xor
ficom
xchg
add
inc
daa
add
or
dec
add
add
hlt
fstp
div
(bad)
daa
or
xor
sar
outs
or
stos
outs
xchg
xor
mov
out
mov
ss
in
jle
das
fdivr
out
stos
popa
dec
push
inc
mov
hlt
add
add
addr16
xchg
xchg
and
data16
inc
cdq
aas
ins
lds
pop
data16
adc
push
xor
mov
retf
int3
mov
das
or
cmp
popf
dec
test
mov
mov
ret
inc
mov
xchg
push
push
jno
mov
or
fmul
outs
sbb
inc
sub
cmps
dec
scas
mov
mov
dec
outs
mov
dec
and
cmp
mov
sub
adc
sub
bound
or
dec
cdq
inc
pop
inc
in
inc
mov
xor
fnstcw
jne
push
movs
pop
inc
inc
mov
call
xor
adc
ins
push
mov
shld
lock
jo
pop
add
adc
(bad)
mov
sbb
pusha
jo
das
mov
inc
jb
mov
xchg
jle
cmp
inc
xor
das
push
mov
out
ins
sbb
inc
push
cmps
inc
add
sub
bound
fdivr
(bad)
cmp
ins
loop
fsubr
rcl
sbb
mov
cwde
stos
hlt
mov
or
add
or
(bad)
pop
pop
jmp
dec
inc
xor
inc
xchg
out
add
xchg
xchg
fst
push
xor
jmp
loope
int3
fsubr
bound
repz
xor
test
lods
int3
and
out
push
dec
mov
mov
call
push
out
rol
sub
cmc
add
and
nop
idiv
add
shl
add
dec
lds
mov
ins
mov
mov
retw
mov
push
das
fucomi
fs
xchg
lods
stos
ror
aam
or
movs
pop
push
aas
or
sub
add
fwait
mov
inc
jbe
mov
or
cmp
xor
jno
jbe
sub
mov
jne
cmp
test
and
cwde
in
inc
scas
pop
or
pop
push
imul
daa
and
loopne
pop
movs
into
clc
mov
mov
lods
nop
retf
div
ffree
jae
add
fadd
aas
sbb
mov
or
mov
aaa
mov
and
jnp
lds
push
add
inc
jg
call
fmul
jb
ret
pop
mov
jne
(bad)
ffree
movs
and
dec
adc
mov
add
lods
pop
and
push
fcomip
shl
inc
sbb
movs
inc
outs
movs
inc
es
sub
dec
jnp
int
shl
mov
repz
mov
je
push
inc
fist
enter
loopne
or
add
(bad)
jle
jge
outs
inc
cmps
lods
xor
xor
(bad)
out
mov
cmps
inc
imul
sahf
sub
arpl
in
ins
jg
adc
mov
add
in
hlt
mov
iret
jae
popa
pop
mov
cmp
xor
call
add
xchg
fild
lahf
and
xchg
jae
out
ffree
lahf
lock
pushf
and
fadd
pop
ds
xor
add
add
add
in
push
stos
call
jmp
dec
outs
xor
add
jmp
push
xchg
leave
adc
dec
ror
xchg
sar
xchg
push
lea
mov
mov
xchg
or
adc
mov
fbld
or
fisubr
in
sub
xchg
push
out
pusha
pop
sub
gs
xor
mov
sbb
lods
sub
(bad)
in
mov
outs
sub
push
pop
arpl
pop
mov
sbb
mov
rcr
sahf
scas
push
loop
xor
shl
and
out
mov
push
sub
jnp
cwde
dec
out
dec
dec
or
xor
out
ins
(bad)
jl
inc
lods
test
pop
or
pop
test
mov
cdq
mov
add
loopne
dec
pop
mov
mov
sub
lods
mov
and
xor
int
mov
jge
push
and
sbb
push
mov
mov
push
imul
outs
jno
dec
xchg
adc
movs
mov
adc
aad
test
or
(bad)
int3
push
dec
and
xor
dec
out
jg
mov
fwait
sbb
dec
in
sub
xlat
mov
mov
sub
pusha
sub
leave
lods
xchg
adc
and
inc
sbb
stc
push
in
sbb
imul
sbb
lds
jns
mov
sub
xor
loopne
fmul
adc
add
lahf
sbb
mov
daa
pop
lock
add
imul
lds
jg
sbb
loopne
(bad)
test
sub
cli
sbb
cmp
or
mov
jmp
mov
push
mov
imul
adc
shl
(bad)
dec
and
jmp
stc
dec
and
jecxz
fsubrp
xor
push
xchg
cli
neg
sbb
push
cwde
nop
or
sub
dec
inc
mov
lahf
dec
fld
dec
add
jno
in
clc
sbb
adc
fist
ja
xor
pop
outs
push
lods
jns
cdq
int
mov
imul
push
xchg
dec
mov
lods
jg
mov
xor
jbe
xchg
gs
cli
jno
push
imul
sbb
ds
push
sub
mov
sbb
jno
xchg
stc
pop
push
fs
dec
test
inc
data16
xchg
data16
aam
scas
pushf
aas
je
test
sbb
add
jne
xor
mov
aaa
neg
mov
or
int3
xor
adc
mov
xchg
jno
and
add
ja
adc
jo
push
adc
xchg
and
cmp
(bad)
(bad)
enter
or
mov
jecxz
mov
mov
mov
repnz
or
xchg
enter
inc
arpl
mov
std
sub
lock
mov
mov
fst
leave
fmul
add
scas
or
or
jbe
add
add
xchg
mov
dec
popa
call
xchg
call
jl
movs
outs
fs
cli
cdq
repz
cmp
ins
xchg
outs
popa
fwait
add
inc
test
outs
rcl
mov
cdq
stos
mov
and
shr
loope
or
pop
ret
not
push
and
std
push
cli
cmp
sahf
mov
mov
push
test
push
xchg
into
loopne
dec
lds
lods
out
fadd
or
jmp
inc
pushf
jns
mov
adc
shr
pop
mov
and
ins
push
fs
aam
and
dec
pop
test
xchg
pop
jne
popa
call
data16
sub
mov
xchg
or
xor
sbb
pop
sub
inc
das
and
in
sub
in
stos
inc
xor
adc
jno
add
lods
cmp
cmp
cli
stos
sbb
inc
test
(bad)
(bad)
pop
popa
call
fcmovbe
or
push
xor
iret
sbb
int3
jno
std
sub
mov
inc
movs
add
scas
cwde
scas
rol
or
mov
out
popf
pop
and
dec
shr
xchg
mov
out
jno
ja
test
push
dec
xor
push
(bad)
pusha
mov
pop
xor
xor
and
lea
and
gs
fwait
push
add
cli
pop
push
stos
mov
shl
popf
scas
lock
push
les
xchg
push
adc
xlat
sbb
cli
mov
fsubr
adc
stos
inc
xchg
sub
int3
jecxz
loopne
mov
pop
cmps
sub
pusha
jl
and
icebp
adc
xor
in
sbb
inc
sar
fcomp
cmp
inc
sub
add
cwde
idiv
adc
mov
mov
pop
push
jecxz
es
aam
pop
mov
lahf
dec
or
xchg
and
adc
cmc
psrld
rol
dec
stc
pusha
and
bound
hlt
and
inc
mov
cmp
idiv
add
push
xchg
push
jno
lods
sub
int3
enter
mov
mov
sbb
test
aam
pop
sar
js
adc
out
imul
lods
mov
cmp
sahf
outs
mov
in
popf
mov
dec
pop
jmp
in
inc
mov
sub
bound
out
jnp
sbb
mov
sti
xchg
sar
dec
mov
js
xor
mov
retf
cld
lahf
push
inc
sbb
sbb
sbb
mov
mov
xor
shl
push
mov
pop
jp
lea
mov
cmps
or
pop
pop
adc
outs
fcomp
push
pop
mov
mov
jno
dec
fucom
pop
ins
aad
and
add
cwde
fcomi
mov
jp
fs
mov
repz
cmp
add
rcr
add
iret
sub
gs
mov
inc
fwait
cmp
fisubr
sbb
jnp
out
ds
test
call
scas
dec
sbb
lods
div
sahf
push
scas
adc
pushf
and
repz
nop
or
pop
jb
mov
les
aaa
cmp
dec
loope
dec
sbb
sbb
push
loop
sub
or
sub
inc
add
push
in
les
cmp
pop
push
dec
cmp
sub
mov
or
cmp
dec
movs
loop
xchg
mov
pop
fld
hlt
lds
xor
js
scas
mov
dec
popf
and
aaa
imul
jle
jb
(bad)
fisubr
vmread
rcl
repz
xchg
jo
adc
pop
add
xchg
repz
out
add
ficom
out
sub
pop
cmp
in
mov
jne
dec
jbe
and
sub
push
or
popa
xor
iret
stos
mov
enter
(bad)
dec
pusha
lds
nop
inc
pop
add
sub
leave
cmp
pop
mov
mov
add
shl
fnstsw
sbb
jno
fadd
cdq
imul
xchg
(bad)
mov
pop
test
pop
and
(bad)
fdivr
cmp
mov
jne
repnz
ds
cmp
and
adc
adc
mov
and
(bad)
adc
in
and
mov
in
jne
out
push
lahf
(bad)
popf
xchg
and
fisub
mov
pop
inc
sub
gs
(bad)
sbb
(bad)
jnp
outs
or
jnp
sti
pop
jbe
call
scas
test
dec
call
in
ss
inc
adc
fimul
adc
pop
jmp
and
les
sbb
pop
popf
xchg
and
nop
mov
in
repz
aam
jns
adc
jge
pop
inc
pop
fwait
or
ja
call
ins
inc
pusha
lods
xor
fmul
adc
pop
push
rol
mov
rcl
test
test
rcr
lea
inc
and
cwde
mov
xor
jns
cdq
cld
hlt
sbb
mov
stos
mov
xchg
sbb
call
sahf
mov
in
outs
int3
movs
cwde
push
ss
popf
mov
or
fcom
push
push
(bad)
jae
stc
add
cmp
sbb
mov
adc
in
xor
scas
jnp
push
mov
scas
dec
inc
sbb
sbb
aaa
mov
pop
pop
mov
add
pop
mov
and
dec
(bad)
push
or
push
rol
nop
mov
aaa
cmps
mov
pushf
out
push
cmps
push
rcr
cli
sub
aam
sbb
dec
push
in
aad
lds
sub
adc
jbe
jne
pop
jecxz
fdivr
test
pop
imul
adc
repz
inc
out
or
and
shl
shl
pop
daa
js
xor
dec
pop
loope
mov
xchg
es
sub
(bad)
shl
div
jmp
repz
call
push
mov
add
in
in
lahf
aaa
jne
sub
cmps
scas
mov
das
xor
fsub
std
out
mov
stos
shl
outs
scas
das
push
int3
mov
push
lfs
xchg
or
into
sbb
dec
cld
cmp
repz
sub
inc
fdiv
push
mov
xchg
push
xor
mov
sub
dec
inc
push
aam
in
or
xor
dec
sbb
aad
fs
inc
mov
mov
jne
sub
inc
dec
cmp
ret
je
jnp
and
sbb
cmps
push
data16
pop
jp
pop
call
sar
jg
pop
adc
xchg
xor
pop
mov
mov
xor
lock
dec
std
push
mov
test
adc
mov
dec
lea
aas
call
es
mov
pop
ss
inc
dec
and
inc
stos
mov
repz
imul
ins
push
push
push
push
pop
or
inc
xchg
xor
nop
push
(bad)
int3
fcomp
adc
jb
cdq
mov
adc
sahf
mov
mov
in
lods
mov
leave
retf
leave
mov
(bad)
sub
test
nop
add
mov
push
ret
jle
test
push
mov
add
cmc
xchg
xchg
rcl
xor
shr
dec
repnz
dec
push
pop
pop
mov
iret
bound
pop
mov
xchg
mov
in
retf
iret
mov
enter
mov
and
add
jnp
pop
lahf
and
not
inc
inc
inc
inc
jmp
push
and
enter
inc
shl
xchg
mov
pop
push
lock
mov
sbb
cmp
rol
sub
xchg
mov
arpl
cmps
adc
les
jns
retf
jge
jp
push
or
int
push
xchg
push
ins
jbe
fcmovnbe
push
out
loopne
leave
out
stc
sbb
loop
adc
ret
mov
bound
dec
int
mov
repz
pop
cdq
(bad)
xchg
adc
or
movs
cmps
sbb
dec
in
popf
jns
sub
pop
imul
inc
nop
cmps
fidiv
sub
cmc
xor
out
fnstsw
sub
pop
or
jae
cmp
inc
loop
mov
sbb
mov
mov
xchg
int3
ja
push
mov
loop
mov
mov
ret
sbb
gs
xchg
pop
icebp
push
sbb
stc
lahf
inc
lahf
daa
inc
fld
ret
mov
ss
push
mov
inc
jl
jl
leave
inc
lea
idiv
mov
int
dec
cld
in
int3
(bad)
jb
adc
push
jmp
pop
xor
jecxz
stos
mov
pop
daa
ja
xchg
addr16
mov
fdivr
popa
xchg
sub
pop
xor
mov
inc
and
mov
repnz
dec
push
(bad)
jnp
rcl
loopne
lock
and
int
ss
mov
inc
iret
popa
inc
lods
ficomp
jns
pop
loope
mov
ins
out
into
test
pushf
xchg
dec
cmp
cs
sar
dec
shr
inc
mov
out
ds
sub
mov
test
mov
out
adc
rol
movs
popf
ss
arpl
mov
hlt
stos
add
xchg
xor
fucomip
or
mov
out
pop
and
pop
fs
sbb
mov
pop
cmp
ja
andnps
mov
iret
rcl
stos
or
mov
inc
and
fld
xchg
or
and
dec
mov
and
inc
(bad)
stc
inc
pop
push
ror
stos
and
cmps
aam
cdq
scas
or
es
sub
(bad)
mov
test
call
push
sbb
sbb
adc
mov
stos
loope
retf
inc
push
jmp
call
(bad)
bound
adc
jge
push
stc
in
stos
xchg
inc
inc
jns
xchg
dec
fisttp
sar
xor
push
or
out
dec
fidivr
add
jg
xor
pop
(bad)
rol
cmp
jmp
jg
xchg
add
xor
or
mov
int3
mov
call
push
or
xchg
and
sub
(bad)
ror
xchg
pop
aad
jle
xchg
push
adc
mov
imul
aad
in
inc
dec
cmp
mov
dec
xchg
nop
sub
sub
pop
xor
popa
call
pop
inc
aas
dec
repz
div
std
sub
adc
or
pop
xor
jp
in
jns
inc
mov
push
jmp
push
jmp
cmp
mov
in
mov
cld
adc
popa
cmp
mov
sbb
push
inc
adc
pop
test
cmps
fnstsw
div
inc
out
mov
mov
ins
mov
dec
mov
aam
fcmovb
pop
call
jmp
inc
pop
inc
inc
clc
xor
es
inc
push
dec
inc
add
and
or
push
pop
popf
push
movs
lods
dec
sahf
(bad)
cld
out
fisttp
arpl
les
pop
leave
cli
lock
les
(bad)
fs
daa
jns
std
jne
add
or
xor
xchg
mov
or
int
test
jo
addr16
mov
jl
push
or
out
pcmpeqw
add
mov
dec
pop
pop
push
call
js
jl
sub
mov
mov
xchg
into
add
xchg
sti
call
retf
xor
paddq
mov
dec
and
pop
ret
pop
pop
mov
ficomp
aam
sub
push
int
call
movs
xor
mov
mov
push
movs
mov
out
sub
icebp
out
popf
and
cli
call
pop
pusha
adc
jb
xchg
or
cmp
jge
retf
(bad)
mov
push
(bad)
inc
inc
jle
cwde
inc
fcomp
cli
pop
jg
pop
cmps
mov
mov
mov
sbb
test
and
aad
rcr
adc
nop
inc
xchg
cwde
xorps
outs
pop
push
sbb
cmp
daa
xchg
cwde
stos
jle
jmp
test
rcl
jmp
sub
jne
stc
sub
jmp
cmps
inc
cmp
xor
pusha
pop
hlt
or
(bad)
mov
cdq
loope
js
call
dec
hlt
add
stos
push
and
mov
inc
fbld
mov
loopne
pusha
clc
cmp
retf
and
data16
mov
adc
xor
hlt
jp
sbb
repz
add
dec
dec
mov
or
ins
jns
add
inc
inc
and
pop
test
pop
ret
lock
stos
rol
and
cmps
ss
pop
dec
mov
cmp
out
and
test
jb
fnsave
shl
js
ror
mov
mov
int
and
dec
inc
xor
jg
cpuid
mov
ds
mov
sahf
and
ss
in
sub
cs
xor
push
rol
sbb
push
push
mov
rol
cmp
mov
push
sub
push
lds
fidiv
fisttp
xor
jnp
rcl
les
pop
pusha
mov
sbb
aad
(bad)
fistp
dec
dec
in
dec
test
mov
xor
add
add
dec
add
sub
mov
push
dec
jb
dec
in
(bad)
and
(bad)
or
lock
cli
cmp
test
inc
outs
pop
mov
in
sub
push
sub
daa
mov
stos
stc
pop
(bad)
retf
scas
mov
and
int
stos
and
mov
pop
(bad)
mov
jne
xor
mov
js
dec
sub
jge
mov
xor
dec
mov
bound
add
loope
adc
popa
mov
add
cmps
(bad)
cmp
push
sbb
test
mov
dec
jmp
push
xchg
or
pusha
add
sti
sub
push
mov
add
pop
sbb
mov
xchg
(bad)
adc
das
out
cmc
ds
cdq
iret
call
leavew
sbb
or
adc
sbb
in
cmp
pop
cmp
jmp
mov
mov
mov
cli
sub
mov
in
test
dec
pop
jb
call
push
inc
sets
xchg
lahf
mov
bound
movs
jecxz
aaa
aam
xor
mov
fwait
jns
jbe
xchg
cmps
(bad)
call
pusha
outs
push
sti
sbb
mov
mov
jl
jns
pop
out
mov
cmp
out
ja
ret
mov
xlat
pop
enter
dec
pusha
pop
inc
lods
sub
leave
lods
mov
xchg
movs
push
mov
(bad)
(bad)
pop
mov
rol
(bad)
ja
jne
mov
retf
push
ins
call
adc
inc
jae
jp
inc
jns
mov
jg
and
cmp
outs
dec
cmp
jl
aad
cmc
stc
loopne
clc
push
and
scas
(bad)
and
(bad)
fnstenv
push
pop
daa
xchg
into
xor
cld
stos
aas
push
and
jne
dec
fwait
mov
pop
adc
retf
jmp
bound
mov
and
xor
(bad)
cmp
dec
xor
shl
outs
test
push
not
rcr
xchg
call
mov
ficom
adc
sbb
retf
pop
xor
mov
inc
cwde
push
popf
mov
jecxz
dec
nop
and
mov
or
push
inc
inc
popa
in
pop
test
inc
dec
lock
pop
dec
inc
push
fadd
cwde
jmp
ss
icebp
sub
cdq
pop
or
xchg
push
sub
adc
add
pusha
hlt
shl
xchg
mov
outs
xchg
mov
cld
mov
mov
jnp
aam
ds
push
stos
js
lock
mov
mov
(bad)
lods
sti
xor
fsubr
(bad)
jp
pop
mov
inc
loop
fwait
dec
imul
cmp
loopne
sbb
jnp
js
pop
pop
xor
movs
das
mov
sub
(bad)
stc
sub
out
cmp
cli
loop
mov
scas
sub
loopne
imul
fmul
jmp
and
jmp
ret
rcl
pop
rol
ror
mov
imul
loop
add
ret
or
movs
and
popf
inc
fbld
push
mov
test
pop
and
add
pop
mov
into
stc
sbb
leave
in
call
push
mov
cdq
scas
mov
inc
cmp
scas
cmp
add
sbb
jnp
push
inc
div
or
cmp
add
shr
call
jmp
inc
ja
je
cmp
mov
dec
int
pop
or
xor
or
mov
fiadd
add
test
aam
aam
xchg
xchg
arpl
and
popf
adc
sahf
pop
rcr
dec
xchg
push
xchg
or
and
pop
popa
and
or
xor
xchg
xchg
cmp
mov
dec
lahf
in
jle
sbb
retf
movs
fwait
xlat
pop
inc
jg
scas
xchg
jle
fisubr
(bad)
adc
test
xlat
repnz
xchg
or
imul
mov
sbb
dec
hlt
int3
cs
data16
inc
test
(bad)
ja
cmp
fist
xor
(bad)
scas
dec
mov
daa
and
xchg
push
sbb
in
sub
call
mov
mov
fbstp
test
pop
cli
xchg
add
mov
xchg
ja
and
pop
scas
dec
jnp
inc
inc
inc
xlat
xor
jmp
clc
out
pop
sub
(bad)
cmp
or
push
mov
push
test
addr16
(bad)
jg
add
add
jmp
in
xlat
mov
loop
rol
cmp
aas
ss
loope
scas
add
mov
sub
cmp
lds
pop
sbb
repnz
mov
jmp
mov
in
scas
mov
out
cmp
(bad)
bound
add
mov
xchg
sub
pop
mov
shl
(bad)
sbb
mov
jmp
xchg
cmps
xor
push
sub
jno
sbb
cwde
push
add
lods
(bad)
lds
inc
ins
jle
nop
cmc
inc
xor
jnp
repnz
mov
inc
mov
sub
mov
fistp
in
cwde
sub
xor
addr16
pushf
push
test
imul
movs
push
inc
cs
loope
sahf
adc
sbb
ss
add
cmp
mov
cmp
push
xchg
and
pop
inc
adc
cmp
scas
jb
xchg
mov
(bad)
jo
add
inc
repnz
inc
fdiv
mov
in
dec
xchg
sar
mov
cs
jae
and
add
enter
lods
add
das
inc
sbb
cmps
push
cmps
lahf
(bad)
fild
jno
mov
dec
shl
sbb
mov
ficom
cmp
aaa
lds
add
pop
lods
cdq
hlt
pop
call
sub
out
lods
movs
movntq
in
push
outs
pop
stc
test
lods
gs
and
ja
imul
sbb
imul
ret
ins
add
fxch
shl
sbb
cmp
inc
sbb
push
std
jbe
or
fild
inc
pusha
jl
movs
test
jnp
loop
and
inc
cld
jae
xchg
or
or
cmp
in
scas
xchg
mov
xchg
jo
loop
test
(bad)
push
inc
rol
out
jecxz
arpl
outs
mov
sub
dec
adc
or
test
xchg
sbb
into
ins
or
fmul
jl
push
mov
pop
popf
or
and
and
cmps
aas
mov
push
pop
cld
or
xor
push
loope
int3
jl
jmp
cmp
les
movs
fcmove
icebp
fwait
inc
into
jae
cmp
and
dec
pop
cwde
stc
adc
mov
push
pop
adc
out
in
repnz
js
sbb
fcomp
inc
sub
clc
xchg
lea
fs
jns
add
push
cmp
sub
(bad)
scas
mov
(bad)
cld
(bad)
(bad)
xor
imul
add
out
push
cmp
sahf
xchg
sbb
test
sbb
push
(bad)
je
add
lds
popf
mov
and
sbb
xor
cmp
imul
jne
sub
dec
sbb
mov
jne
dec
fadd
pop
mov
jbe
cli
sar
pushf
mov
pushf
nop
sbb
sahf
nop
fwait
(bad)
jo
or
cmp
sub
fild
mov
dec
sti
jne
fidivr
jg
xlat
or
loopne
dec
stos
leave
sub
(bad)
inc
cmps
xchg
xchg
les
inc
mov
pop
(bad)
ret
pop
inc
fimul
(bad)
adc
pop
push
cmp
and
pusha
ja
sar
cli
(bad)
(bad)
push
add
aad
mov
add
inc
sub
(bad)
sbb
imul
call
and
push
enter
or
loop
dec
(bad)
loope
dec
sbb
cmc
sub
in
ds
cmp
out
jb
mov
mov
in
mov
sti
mov
jnp
fiadd
popa
jns
sub
scas
imul
sub
mov
adc
add
push
(bad)
imul
cmp
and
sub
(bad)
and
pop
and
in
xchg
jg
out
cmp
cmps
repz
dec
aaa
(bad)
adc
sub
neg
and
xor
adc
fmul
in
dec
jae
or
cmp
repz
or
enter
cmps
fadd
adc
aad
xlat
ss
jp
jl
es
inc
inc
pop
jl
test
xchg
cld
add
mov
cmps
sbb
sub
cdq
mov
int
in
xchg
sub
ins
cmp
gs
icebp
and
mov
push
push
cdq
mov
dec
in
xor
add
pop
mov
sbb
fs
ss
xchg
adc
sbb
pop
xchg
mov
xor
out
fadd
pop
mov
cli
and
retf
dec
push
jnp
xor
jb
sub
mov
outs
mov
mov
retw
mov
xchg
in
or
stc
imul
sub
fadd
xor
ret
xchg
retf
aaa
scas
mov
ret
ret
and
mov
pop
in
push
mov
and
es
cmp
pop
(bad)
outs
dec
in
fadd
daa
pop
xchg
sub
mov
jecxz
call
pushf
cmp
(bad)
iret
loopne
push
cmp
data16
js
push
bnd
stos
fisub
int
mov
mov
sub
or
mov
lds
jne
inc
fisttp
pusha
jbe
dec
ja
xchg
pop
enter
or
hlt
sti
sti
and
sub
std
mov
cld
mov
movs
js
jmp
mov
out
add
ds
shl
jne
sub
(bad)
pop
xor
add
ss
test
mov
mov
fstp
cmp
adc
es
jmp
out
pop
xchg
mov
mov
add
in
test
pushf
mov
sbb
adc
stos
jns
sbb
xor
(bad)
mov
dec
popa
or
adc
aam
ret
and
adc
data16
(bad)
inc
push
inc
sbb
adc
lds
(bad)
int
jns
push
enter
sub
sbb
xor
nop
popa
sbb
imul
fistp
leave
adc
outs
and
cli
popw
iret
cwde
jl
dec
xor
jmp
pop
jecxz
popf
iret
mov
shl
mov
mov
or
mov
pop
int
pop
xchg
fisttp
dec
mov
popf
xchg
data16
jp
fiadd
dec
aad
aas
aas
lods
dec
not
pop
sbb
imul
fst
scas
sbb
jae
test
and
mov
dec
aas
adc
and
add
stos
jmp
test
cmp
mov
pop
sub
or
sbb
mov
outs
rcr
adc
stos
mov
and
je
sbb
and
pop
or
add
xchg
pop
inc
(bad)
fsubr
inc
inc
mov
mov
dec
dec
inc
inc
clc
lods
das
adc
cmc
jno
add
inc
jne
mov
cmp
jmp
inc
inc
and
dec
xchg
ret
adc
mov
mov
or
push
jmp
pop
add
cli
(bad)
popa
les
xor
mov
fnstenv
push
repnz
nop
mov
mov
scas
xor
mov
out
cmp
dec
shl
dec
sti
push
xor
(bad)
sub
mov
sbb
push
mov
cmp
mov
sbb
pusha
popf
dec
sub
sub
sbb
popf
jmp
aas
(bad)
out
sbb
jae
mov
sbb
bound
push
jb
inc
push
cmps
call
xchg
xor
sub
shl
push
sar
mov
popa
jecxz
and
das
les
mov
mov
xchg
lds
jmp
adc
out
std
mov
ret
xor
mov
xchg
imul
push
or
pop
ss
mov
xchg
mov
dec
push
mov
push
mov
inc
cmp
dec
lock
xchg
xor
int
mov
xchg
(bad)
mov
pop
xor
or
mov
inc
xor
mov
ja
aad
fprem1
mov
mov
mov
stos
mov
adc
xor
mov
jge
and
stos
retf
inc
xor
test
(bad)
lea
add
xchg
pop
add
(bad)
clc
sbb
dec
push
pop
push
dec
retf
mov
test
dec
lods
test
stos
xor
add
fwait
mov
cmp
cmc
ds
add
inc
(bad)
xchg
xchg
xchg
(bad)
jne
jg
aam
dec
(bad)
fdivr
js
test
jle
cmp
dec
adc
mov
inc
hlt
push
loope
(bad)
cmps
push
js
sbb
(bad)
dec
in
les
or
arpl
aam
popa
lock
sbb
push
es
mov
pop
mov
mov
add
mov
ins
ds
out
add
repnz
ins
adc
jmp
mov
pop
popf
es
xchg
scas
pop
out
sub
fsubr
sti
call
push
mov
adc
mov
pop
cmc
(bad)
(bad)
imul
test
mov
adc
jle
ds
outs
inc
mov
test
xor
shr
adc
test
add
lods
dec
aaa
test
and
sbb
sub
fdiv
pop
cmps
pop
sbb
xor
and
sub
xor
jmp
adc
push
and
mul
mov
xor
mov
and
stos
mov
fisub
cwde
cs
lahf
cdq
jecxz
jecxz
lods
lods
je
add
(bad)
xchg
outs
pop
cmp
cdq
push
jecxz
imul
cwde
bound
pop
repnz
nop
push
(bad)
inc
je
aaa
inc
adc
ret
pop
cld
dec
xchg
mov
adc
test
call
inc
xchg
push
sbb
push
adc
cli
lds
test
outs
and
xor
icebp
enter
sub
sbb
jp
cmps
scas
jae
mov
mov
pop
movs
mov
push
(bad)
jg
jno
sub
xlat
(bad)
fstp
test
ds
call
mov
repnz
jns
xchg
fimul
dec
xchg
cmps
test
dec
sbb
inc
fidivr
addr16
pop
and
pusha
loopne
iret
mov
fdiv
mov
imul
movs
pop
cs
and
pop
sahf
loop
loope
retf
xor
sti
iret
cmp
xchg
out
repnz
and
sub
out
jp
sub
push
pop
pop
outs
mov
call
adc
mov
dec
xchg
lods
or
dec
mov
pop
scas
xor
mov
(bad)
jp
jo
jae
sub
addr16
retf
or
xor
adc
mov
dec
cwde
sub
cmp
cld
mov
or
xor
fucomp
ret
ret
retf
mov
cwde
mov
push
pop
cld
cmps
arpl
add
les
(bad)
add
pusha
idiv
out
jns
bound
call
sbb
outs
cmp
and
mov
ror
retf
lds
bound
push
mov
div
fstp
push
adc
jne
aas
sbb
cld
cmps
es
dec
push
jle
scas
(bad)
aas
int
(bad)
fwait
bt
or
addr16
nop
dec
ret
pop
push
xchg
leave
mov
(bad)
cwde
jb
push
mov
mov
cdq
xor
imul
test
adc
xor
sbb
or
ins
sbb
mov
mov
pop
mov
mov
loop
ret
pop
inc
es
ss
(bad)
mov
into
xor
adc
pusha
ss
mov
dec
mov
mov
loope
mov
push
mov
leave
push
nop
loopne
mov
push
or
push
test
inc
fdivr
sub
adc
pop
sbb
adc
sbb
ret
sbb
jbe
mov
and
lds
(bad)
int3
loopne
xor
ror
add
mov
movs
and
outs
jo
or
push
dec
sbb
retf
add
mov
stc
loopne
xor
xor
enter
(bad)
xor
out
int3
cs
push
outs
cmc
xchg
loopne
inc
sub
sub
and
fs
scas
aas
or
inc
(bad)
les
adc
cli
xchg
xor
mov
jecxz
iret
or
out
dec
(bad)
icebp
jae
in
popf
push
out
pop
jge
ret
leave
push
mov
mov
cmps
shl
cli
push
add
iret
outs
push
lods
or
dec
into
jb
call
mov
jo
and
shl
loop
adc
stos
lahf
or
jno
xor
mov
lods
add
(bad)
es
or
push
sub
lock
bound
jl
std
lods
outs
imul
push
xchg
outs
sub
push
cmp
inc
or
inc
inc
test
fisubr
scas
push
xchg
pop
mov
mov
cdq
jmp
inc
daa
xor
and
sub
into
clc
push
pop
adc
loop
(bad)
jmp
cmp
mov
cdq
lahf
and
jno
fcom
push
xor
jge
or
stos
jl
int
movs
pop
or
cwde
fs
in
imul
and
stos
mov
imul
add
arpl
cmp
push
jnp
sbb
and
int
cmps
xlat
sub
cmps
jmp
push
cli
push
xor
xlat
mov
dec
and
fadd
loopne
pop
inc
loope
std
mov
mov
sub
cmps
jmp
movs
mov
popf
out
test
or
mov
dec
jmp
add
mov
fidivr
iret
xor
ins
mov
lea
push
jno
or
xchg
push
fcmovnbe
fnstcw
stos
data16
test
arpl
cmc
or
jecxz
icebp
lock
popf
mov
push
push
mov
lock
pop
push
movs
test
jg
adc
scas
mov
fcomp
out
inc
jno
leave
or
cmp
(bad)
jmp
push
inc
gs
mov
xlat
retf
fs
aaa
mov
mov
xchg
sbb
movs
xchg
stos
add
bound
inc
mov
pushf
cmps
mov
arpl
loopne
xchg
shl
add
mov
jmp
int
push
mov
sbb
and
mov
pop
add
retf
pop
retf
xchg
hlt
mov
pop
push
adc
(bad)
push
add
movs
push
push
sbb
lods
imul
jle
popf
imul
stos
sub
jns
and
call
in
sub
in
mov
push
push
fld
mov
xchg
pop
adc
push
test
and
ret
js
xchg
jo
mov
fstp
lock
mov
leave
or
mov
outs
ins
push
lds
aaa
mov
pop
add
sub
fistp
scas
xchg
xor
loopne
dec
mov
ficomp
cmc
imul
jo
aad
mov
out
ss
mov
adc
nop
pop
add
in
popa
pop
test
adc
and
mov
mov
pop
pushf
call
cmp
cmp
push
aaa
pop
stos
or
xchg
jle
aad
es
pop
or
mov
(bad)
ins
lea
mov
mov
retf
ret
movs
fisubr
dec
int
je
sub
xchg
mov
cmp
ds
inc
fidivr
pop
mov
add
push
xchg
fstp
int
push
adc
sub
inc
fbstp
lods
push
outs
test
push
mov
neg
pop
sbb
jecxz
mov
jno
sar
or
jle
xchg
jge
lea
stos
adc
sbb
sub
xchg
int
adc
xchg
jecxz
std
pop
sti
xor
es
mov
and
jg
out
sub
retf
pop
inc
sbb
mov
jo
xor
fwait
test
(bad)
push
mov
push
cmp
setl
xacquire
add
jge
dec
out
jmp
and
push
add
rol
stos
popf
and
lds
out
aam
fst
inc
mov
push
fldenv
jecxz
imul
push
mul
call
inc
dec
ja
aaa
aad
lds
adc
push
cmc
(bad)
mov
mov
pop
mov
sbb
jl
sub
sub
ret
addr16
addr16
neg
jge
xor
aad
xor
lods
mov
add
shl
loop
push
loop
pop
fnop
sub
push
and
outs
hlt
cli
popa
adc
pop
or
xchg
and
inc
dec
aaa
dec
retf
retf
mov
aam
or
mov
xor
sub
adc
mov
jl
push
add
in
cmp
inc
inc
movs
(bad)
(bad)
loop
popf
adc
stc
call
in
mov
push
cmc
xor
rcr
(bad)
jmp
jl
jo
jmp
mov
mov
imul
mov
idiv
repnz
retf
sbb
cld
mov
out
or
aas
mov
stos
(bad)
inc
out
sbb
mov
imul
jnp
cmp
repz
mov
stos
jp
ret
mov
pushf
scas
ror
dec
mov
rcr
pop
dec
outs
ret
out
dec
mov
std
jmp
push
cmp
dec
pop
es
lds
push
mov
aam
in
mov
out
sahf
hlt
adc
pop
nop
inc
mov
mov
lods
or
out
push
in
xor
stc
(bad)
mov
outs
push
out
repz
sub
push
jl
inc
and
lea
mov
fidiv
jns
(bad)
aas
jmp
(bad)
aad
lods
dec
out
and
das
fadd
mov
loope
pop
outs
call
or
mov
daa
xor
retf
mov
pop
push
adc
jnp
lods
pop
es
scas
mov
xchg
sbb
xor
enter
mov
mov
pop
test
push
jmp
push
sub
pop
or
mov
mov
mov
jg
dec
fcmove
outs
outs
lea
movs
fwait
push
jnp
sbb
test
fistp
ins
fsubr
sub
push
daa
idiv
or
nop
iret
xor
sbb
adc
jno
adc
outs
sbb
retf
fisub
rcr
pop
sahf
(bad)
movs
retf
push
fs
or
mov
test
adc
mov
pop
inc
cli
cmp
call
and
pop
hlt
inc
popa
out
mov
cmps
push
pop
xor
cmps
xor
fisttp
jno
(bad)
cld
jg
mov
lods
mov
push
xchg
xchg
xor
cwde
mov
shr
mov
push
push
test
int3
mov
adc
xchg
xor
mov
add
jo
push
xor
sub
(bad)
aas
ret
adc
arpl
inc
scas
pop
test
inc
addr16
jae
mov
adc
idiv
lds
lahf
sar
mov
jns
ins
sbb
mov
push
icebp
mov
inc
scas
jbe
cmp
sub
xchg
jnp
hlt
dec
xchg
sub
or
push
cmp
xchg
fld
adc
and
pusha
or
add
sbb
sti
lods
or
push
lahf
outs
push
push
adc
sub
bound
pop
std
push
lahf
mov
dec
dec
scas
mov
mov
lods
push
push
in
(bad)
or
idiv
rcr
repz
push
cmp
jl
cmp
test
shr
repz
xchg
js
xchg
xlat
jmp
lea
imul
outs
add
sub
cmps
icebp
mov
gs
shl
icebp
enter
nop
sbb
fnsave
mov
mov
jno
jp
mov
or
addr16
rol
addr16
sub
pop
or
add
dec
push
(bad)
loope
mov
inc
add
adc
or
(bad)
outs
iret
mov
xlat
mov
jle
scas
jl
sub
cmps
aad
and
dec
out
jmp
aas
cmp
push
xchg
xor
dec
mov
ja
inc
jg
pusha
lods
push
fadd
sahf
dec
icebp
mov
cwde
loope
mov
dec
imul
sbb
pop
aad
movs
call
push
adc
outs
mov
xchg
cmp
cdq
pop
mov
inc
dec
adc
xchg
cli
retf
adc
les
adc
pop
rol
icebp
call
and
pop
aam
add
aam
fisttp
fs
jb
jmp
movs
icebp
data16
arpl
jl
xchg
cli
out
mov
stos
mov
inc
arpl
xchg
push
sub
mov
in
sahf
mov
not
xchg
in
scas
lds
jae
ficom
gs
lock
xor
cmp
mov
add
adc
jae
lods
pop
pop
sar
sbb
xor
fdivrp
in
pop
cmps
mov
mov
xchg
in
xor
popf
scas
js
xchg
lea
push
test
or
mov
pop
inc
push
ud1
and
cmc
call
pop
pop
outs
test
xor
xchg
stos
jge
cmp
sub
xor
std
mov
mov
stos
hlt
and
mov
mov
imul
in
rcl
test
push
adc
jb
mov
sbb
add
sbb
jo
cmc
(bad)
psrld
jl
movs
mov
sbb
mov
out
xchg
sbb
push
sub
ja
jmp
cmp
lea
xchg
inc
jno
(bad)
in
int3
fwait
mov
test
mov
sbb
jnp
sbb
icebp
sub
aam
imul
lahf
stos
and
in
jno
arpl
cdq
add
mov
aaa
inc
mov
cmp
bound
movs
in
dec
and
and
cmp
call
bound
neg
push
int
and
push
imul
call
mov
and
xor
daa
xor
mov
add
and
retf
pop
xchg
mov
dec
fld
jg
retf
add
arpl
(bad)
jne
push
icebp
jmp
test
popa
repnz
push
dec
mov
das
mov
popf
or
cwde
cli
push
sbb
ss
jns
in
or
dec
push
or
mov
outs
jns
popf
pop
add
mov
push
or
hlt
add
stc
xor
mov
ins
jno
inc
ds
shld
dec
jae
out
mov
test
pusha
xchg
xchg
mov
push
lahf
enter
aas
dec
push
test
mov
enter
and
push
add
pop
mov
xor
test
adc
mov
and
cmp
iret
dec
test
or
lods
icebp
cmp
mov
ret
push
mov
leave
push
or
pop
xor
movs
outs
jle
mov
push
mov
jg
dec
into
enter
push
inc
mov
call
sub
dec
sub
adc
jmp
pop
and
lds
dec
and
int
sahf
icebp
sbb
xor
(bad)
retf
pop
sbb
mov
xor
test
test
lods
retf
add
fisttp
test
cli
fcmovnb
jbe
xor
scas
(bad)
jge
cmps
sbb
or
mov
leave
nop
arpl
jle
sbb
xor
xchg
fmul
enter
test
push
imul
push
test
fld
fwait
mov
sub
and
stos
inc
sub
sub
(bad)
add
or
sub
popf
ror
test
aad
pop
in
mov
cmps
cmp
add
jb
scas
mov
addr16
or
cmps
fadd
mov
test
scas
nop
in
(bad)
cmc
pop
jp
xchg
sbb
imul
mov
mov
gs
movs
rcr
and
push
es
int3
ror
add
mov
out
std
inc
pop
adc
je
push
std
mov
and
fidivr
stos
mov
mov
xchg
ss
icebp
cmps
sub
shl
stos
pushf
cld
lahf
adc
test
push
mov
int
daa
pop
test
mov
jae
std
mov
jmp
xchg
cmp
jle
stos
mov
or
fsubp
xchg
mov
push
stc
cmps
jl
(bad)
in
int
cmp
cmp
pop
cdq
retf
push
sub
sub
enter
mov
mov
add
fbld
or
or
lds
scas
pop
repz
mov
or
push
ds
pop
cmp
jne
sub
mov
cdq
sub
push
mov
inc
fmul
addr16
cs
in
data16
fmul
adc
xchg
sub
inc
jle
call
aas
int
xchg
aas
pop
mov
xchg
inc
out
stos
ins
clc
xchg
lods
xchg
sahf
mov
jbe
out
mov
in
sub
out
(bad)
jb
sbb
jp
push
pop
xor
xor
repnz
fidivr
xor
inc
outs
dec
or
fisubr
sahf
xor
dec
sbb
repnz
out
pop
mov
push
sar
nop
push
mov
into
pop
mov
(bad)
mov
(bad)
fcom
in
scas
or
inc
jle
pusha
jecxz
aam
inc
or
mov
push
adc
or
div
dec
lds
ret
sbb
jl
jnp
jmp
jb
xchg
bound
or
cmp
imul
fs
call
jnp
xor
mul
mul
mov
fild
mov
xchg
jbe
push
or
push
iret
(bad)
mov
neg
ja
xor
adc
adc
pop
cmp
mov
das
jae
mov
test
stos
sbb
push
shr
ss
push
mov
push
mov
inc
fdivr
pop
xchg
sub
out
push
fmul
icebp
xchg
push
popf
loope
je
sbb
push
stos
test
jge
dec
adc
dec
xor
mov
sub
sbb
stc
add
imul
and
sbb
mov
fdivr
push
loope
fwait
stos
les
jecxz
mov
das
sbb
mov
pop
pop
add
jge
(bad)
xor
loop
pop
or
sub
mov
hlt
mov
or
lea
into
or
nop
push
push
pop
xor
lea
xor
fcom
xchg
rcl
inc
cmp
jae
int
sahf
dec
nop
or
es
xor
adc
stos
imul
loopne
adc
or
cmc
or
pushf
cmp
dec
cmp
and
aad
(bad)
jmp
inc
loop
or
dec
shl
inc
test
push
jle
inc
pop
in
out
(bad)
push
mov
mov
cli
rol
mov
(bad)
test
imul
enterw
mov
mov
mov
pop
je
jo
pop
(bad)
in
sub
jne
sub
inc
fsub
in
cmp
aam
or
fwait
and
jl
push
adc
add
or
loope
dec
std
shl
cmp
mov
fsubrp
adc
and
mov
add
imul
xor
out
daa
loopne
mov
sbb
push
es
jle
ds
cmc
sbb
mov
leave
call
xor
jbe
lods
mov
daa
sbb
arpl
retf
in
dec
lea
inc
cmp
into
cmp
mov
fcomp
sbb
xchg
(bad)
fld
sbb
add
or
push
in
out
cmp
cmp
ins
fist
sub
imul
(bad)
mov
and
push
stos
aam
and
clc
add
mov
push
pop
fbld
sub
push
les
cmc
fidiv
jecxz
inc
jns
ret
jns
and
fwait
mov
enter
push
stos
(bad)
sbb
mov
jb
pop
push
imul
jo
stos
jl
call
mov
mov
stc
pop
push
xchg
cwde
bound
mov
ret
pop
(bad)
mov
sbb
inc
(bad)
fmulp
mov
sbb
out
jbe
mov
into
push
sub
push
iret
mov
pop
xchg
dec
adc
add
(bad)
rcl
xchg
sbb
neg
cmps
dec
push
jns
imul
xor
xchg
inc
mov
sbb
mov
sbb
retf
gs
cmps
add
xchg
je
push
bound
sub
into
cmp
aaa
les
and
stc
sbb
cmps
jmp
xchg
retf
xor
gs
adc
scas
dec
pop
xchg
add
and
jmp
movs
inc
(bad)
iret
(bad)
cmp
and
pop
mov
bound
ret
retf
sbb
mov
fst
pop
push
scas
lods
mov
cmp
dec
adc
jmp
mov
cmp
jmp
dec
repz
pop
cld
sti
std
jns
lods
int3
add
xor
jbe
ret
dec
sbb
add
popf
scas
outs
aaa
and
icebp
adc
add
push
push
je
push
daa
jbe
inc
out
and
adc
xchg
pop
out
jnp
mov
sbb
push
int3
lock
push
xor
fisub
add
and
jmp
inc
aas
daa
addr16
xchg
aas
sbb
fs
and
sub
aad
add
fistp
repz
imul
jns
push
push
jae
adc
and
and
mov
mov
push
cmp
adc
bound
push
loope
pusha
ret
xor
test
dec
clc
fcmovb
dec
xchg
iret
xor
out
call
in
imul
cs
scas
add
mov
retf
outs
and
jmp
or
sub
(bad)
pusha
movs
and
mov
lods
push
out
dec
or
push
mov
call
jbe
retf
and
push
mov
dec
cdq
lods
gs
hlt
or
lods
das
inc
push
test
dec
mov
out
popa
jle
aaa
jb
daa
push
or
mov
sbb
es
push
mov
jmp
adc
fisttp
cld
scas
mov
aaa
push
lds
xlat
sbb
stos
scas
mov
pop
iret
and
inc
cmps
test
mov
fwait
jecxz
sbb
sbb
pop
push
or
xchg
push
sub
imul
sbb
lods
cdq
xchg
cmp
xchg
test
movs
sbb
popa
inc
sub
aad
iret
add
sti
inc
inc
aad
dec
jo
cli
adc
cli
pushf
xchg
dec
mov
mov
addr16
add
sbb
cdq
(bad)
dec
pop
add
sub
add
in
test
pop
jp
and
xor
rol
outs
lods
cmp
inc
enter
or
inc
popf
shl
jmp
ds
sbb
movs
jp
mov
cmps
jne
push
(bad)
fcom
fisttp
lods
jnp
and
xlat
mov
adc
dec
push
call
inc
mov
or
aaa
push
and
test
xchg
inc
xchg
add
cdq
add
jo
cld
adc
xchg
stc
inc
int3
mov
inc
popa
sbb
sub
pop
add
push
(bad)
or
fcmovnu
iret
pop
out
xor
arpl
out
xor
fwait
pusha
pusha
sbb
xlat
mov
add
jns
add
cmp
into
push
gs
xchg
cmps
add
ror
stc
pop
inc
das
popf
imul
push
xor
aas
xchg
push
dec
setae
mov
lds
xchg
push
dec
xor
xchg
ret
adc
stos
nop
ds
repz
mov
xor
fmul
mov
sbb
pop
test
mov
int
adc
jg
outs
adc
cdq
gs
mov
sbb
int3
retf
push
inc
in
inc
retf
fstp
fstp
sbb
xchg
das
fsubrp
enter
cld
ror
sbb
cmp
fistp
add
push
pop
jns
and
jle
sub
or
mov
pop
mov
jle
xchg
cmp
rol
jge
fsub
sbb
mov
mov
sbb
rol
popf
rcl
dec
mov
pop
cmp
inc
enter
lock
xor
push
adc
fnstcw
mov
push
aam
push
jno
mov
push
fs
retf
mov
mov
mov
(bad)
cmc
leave
pop
dec
adc
inc
jg
and
test
jbe
push
std
or
test
push
dec
or
cs
arpl
arpl
mov
sbb
daa
fdiv
rol
outs
pop
jb
popf
push
push
push
adc
sbb
or
bound
mov
fstp
and
mov
ja
mov
push
pop
push
pop
pop
ficomp
jo
cmp
mov
jno
in
lock
pop
pop
mov
out
xchg
out
int
add
pop
mov
inc
jne
or
lods
xchg
xchg
out
mov
adc
fdivr
dec
lods
jb
std
sub
leave
and
fiadd
sti
shl
shr
psubw
xor
dec
ds
test
pop
inc
movs
leave
loopne
lods
sub
sub
dec
dec
jg
mov
xchg
aaa
scas
jb
cs
inc
fdivr
int
gs
adc
fwait
dec
jae
xor
hlt
mov
loop
sbb
int
mov
and
cmp
xchg
jbe
xchg
sbb
out
jnp
push
lods
push
adc
ret
out
xchg
lock
pop
arpl
jno
sti
mov
dec
mov
outs
xor
nop
xchg
pusha
xor
dec
out
mov
lods
pop
inc
mov
movs
sub
inc
sbb
popa
cmps
mov
es
shl
xchg
ds
push
sub
fstp
mov
mov
std
push
mov
pop
pop
(bad)
aad
cwde
stc
cmc
or
ins
nop
popf
xor
call
and
adc
sahf
xor
ficomp
rol
cmps
js
je
xor
mov
movs
mov
xchg
pop
dec
sbb
jmp
loope
cli
sub
mov
push
aas
push
add
aaa
mov
cmps
call
daa
or
dec
stos
xchg
sbb
imul
aaa
call
or
inc
(bad)
loop
aas
adc
mov
gs
mov
lock
int3
pop
push
(bad)
xor
adc
sub
jne
push
sbb
jb
retf
push
aam
xchg
ffreep
dec
das
mov
jle
and
cmp
adc
nop
(bad)
mov
cmps
cs
daa
jp
sbb
ret
pushf
movs
imul
or
retf
aaa
cli
loopne
leave
fs
jl
xor
xchg
(bad)
and
mov
(bad)
cld
das
popf
cmps
cmp
push
jae
sub
sti
rol
fiadd
mov
cmp
push
aam
popf
dec
cmp
mov
movs
sbb
fstp
sar
sub
sbb
lods
cdq
ss
inc
and
adc
or
cdq
push
es
or
xchg
aam
or
mov
sub
lods
retf
mov
shl
sub
mov
jns
cmp
pop
or
mov
dec
das
xchg
jge
xchg
pop
test
mov
add
mov
cmps
inc
mov
add
and
ins
or
xchg
adc
add
inc
out
dec
ins
push
(bad)
push
xor
sti
push
sub
sub
retf
pop
pop
cmps
cmps
rol
jmp
sbb
fcomi
stos
sar
cdq
test
adc
mov
xor
mov
call
ret
cdq
sub
inc
push
adc
xchg
push
xchg
or
rcl
fnstenv
inc
jno
sbb
dec
pop
pop
enter
mov
jne
lock
push
sub
leave
push
pop
lds
aam
(bad)
sub
jne
and
adc
ret
aad
xor
cdq
in
lods
pop
jmp
inc
test
and
imul
dec
jp
dec
pushf
jae
rcr
mov
movs
adc
ror
push
jo
inc
and
jae
add
xchg
in
aaa
stc
xchg
fisttp
pop
scas
mov
bound
xchg
pop
int
fs
push
sti
loop
scas
inc
idiv
frstor
mov
and
push
js
mov
adc
dec
pop
es
mov
mov
push
dec
ss
fadd
test
adc
mov
(bad)
sub
loop
or
or
push
push
jo
into
sub
dec
pop
push
inc
popa
inc
push
cmp
xchg
and
es
lahf
sub
pop
adc
push
cli
or
mov
xor
(bad)
int
xchg
dec
mov
out
pop
pop
push
pop
jno
inc
test
inc
(bad)
dec
std
icebp
mov
ret
dec
hlt
xchg
mul
ficomp
ror
loop
cdq
pop
ficomp
inc
or
fistp
or
jbe
popf
or
(bad)
mov
lods
fs
adc
lods
out
shl
add
push
mov
push
out
movs
outs
mov
dec
cmps
fiadd
adc
test
pop
push
push
adc
test
outs
scas
mov
dec
je
dec
or
into
mov
sar
pop
adc
in
cld
pop
in
adc
data16
cs
pushf
mov
retf
(bad)
adc
push
jmp
ret
dec
stos
ds
mov
iret
pusha
dec
pop
inc
inc
pop
pop
pop
rcr
push
pop
sbb
xor
outs
icebp
push
outs
sahf
pop
jl
cmp
jg
daa
mov
stc
(bad)
push
scas
dec
xor
mov
inc
rcl
xor
jle
shr
cmp
mov
pop
sub
arpl
mov
mov
sbb
gs
cwde
push
jl
push
mov
and
ret
mov
jmp
out
mov
addr16
cmp
inc
push
sbb
lock
sbb
push
pop
test
xchg
or
retf
xlat
dec
jle
rol
fimul
cmp
int
shr
sahf
(bad)
std
das
jo
es
cld
pop
xchg
push
push
out
fs
cmc
mov
ror
push
fadd
mov
adc
gs
ficom
dec
mov
aas
outs
and
int
outs
lods
les
std
and
cmp
push
sbb
das
cmp
add
cs
pusha
lea
and
dec
sbb
mov
xlat
push
lock
stos
call
(bad)
dec
add
mov
hlt
mov
into
add
adc
cmp
jmp
iret
mov
test
out
je
jno
neg
add
int
xchg
and
test
test
mov
cmp
inc
ins
rcl
inc
xor
ror
jae
je
retf
xor
in
mov
mov
aam
aam
(bad)
in
cmc
fidiv
gs
xor
imul
div
in
inc
imul
push
and
mov
pop
pop
leave
(bad)
hlt
ins
cwde
mov
sbb
cmc
adc
inc
sub
push
jp
das
leave
adc
xor
fdivr
(bad)
fcom
xchg
adc
mov
lahf
dec
cmp
sub
aaa
cmps
inc
js
xchg
add
adc
(bad)
mov
cmp
pushf
(bad)
scas
lods
shr
pop
aaa
mov
and
adc
cmps
test
pop
daa
xchg
mov
sub
ins
xchg
xchg
les
or
dec
mov
sti
ret
cld
jl
(bad)
in
jns
xlat
jne
fs
pop
sbb
stc
(bad)
dec
neg
sbb
push
stos
out
fstp
jmp
dec
push
sbb
sbb
add
lock
call
mov
lds
inc
in
sub
xor
jo
or
cmp
bound
loop
lahf
cwde
cmp
bound
pusha
shr
inc
pop
es
iret
or
jmp
sbb
and
pop
sub
test
nop
into
test
lahf
mov
cld
add
sbb
jle
push
aas
dec
pop
enter
in
(bad)
xor
or
and
stos
in
cmp
mov
das
dec
fistp
ja
jns
jo
sbb
cwde
inc
neg
xchg
sbb
arpl
cmps
aas
cs
xor
add
inc
push
hlt
push
inc
(bad)
clc
pop
adc
inc
sbb
stc
je
sbb
xchg
into
ja
and
inc
lds
loopne
ret
test
dec
sbb
sbb
cwde
xchg
aas
ror
or
mul
ret
mov
or
std
loope
xchg
inc
or
je
adc
mov
iret
cwde
xchg
lock
mov
call
xchg
test
fist
into
jo
adc
sti
xor
jmp
int
movs
std
and
sbb
retf
inc
data16
scas
stos
imul
movs
push
mov
mov
adc
and
into
in
mov
mov
rcl
scas
add
mov
mov
std
das
int
mov
pop
cmps
sahf
(bad)
mov
popa
dec
arpl
mov
dec
cmp
movs
jnp
pop
jge
mov
cs
inc
push
pop
mov
dec
jne
je
out
sub
push
jecxz
lods
push
cmp
push
ret
xor
out
xchg
pop
mov
and
mov
nop
cmps
(bad)
(bad)
jbe
int
mov
loopne
dec
hlt
call
aam
sbb
in
sub
inc
(bad)
retf
adc
xor
test
addr16
mov
dec
jle
ret
or
sysexit
loop
pop
setae
push
push
mov
xlat
call
stos
add
jp
leave
adc
sbb
(bad)
shl
adc
les
icebp
movs
sar
adc
sub
jecxz
je
es
jp
xor
dec
out
movs
and
leave
push
push
push
xchg
mov
mov
retf
aad
pushf
or
inc
sub
stc
mov
(bad)
shl
dec
stc
xor
aaa
test
addr16
loope
retf
jb
aaa
pop
jg
lahf
fiadd
mov
xchg
sub
pop
cmps
fcomp
xor
mov
dec
mov
repz
lods
cmp
(bad)
hlt
xlat
inc
sbb
aaa
(bad)
mov
sub
or
or
sahf
and
test
mov
dec
pop
jecxz
push
popf
push
loop
dec
cmp
repnz
xchg
mov
inc
iret
mov
aas
mov
or
sub
cmp
sbb
push
jp
sub
push
inc
cmp
retf
adc
aad
push
cli
add
pop
sbb
gs
push
pop
cld
xor
mov
mov
jo
enter
and
mov
ss
xor
sub
hlt
(bad)
mov
pop
adc
ja
push
mov
addr16
popf
xor
fcom
push
pop
mov
pop
mov
xor
loopne
jmp
cmp
add
int3
xchg
in
xchg
fmulp
mov
imul
sbb
call
dec
dec
jbe
ds
xchg
pop
or
mov
imul
call
pop
dec
int3
rcr
jns
imul
push
pop
out
stos
add
int
sbb
jmp
mov
xor
repnz
aas
fimul
das
jp
or
push
jle
inc
aam
pop
dec
fwait
push
in
outs
test
push
mov
push
or
inc
inc
imul
fsub
mov
inc
pop
pushf
fadd
add
adc
test
es
mov
xor
into
push
sbb
adc
les
fwait
hlt
in
push
push
or
inc
mov
fistp
add
mov
sbb
fld
outs
aaa
repnz
retf
sbb
add
es
jo
loop
pushf
jo
cmps
mov
aaa
daa
scas
dec
mov
loopne
xlat
pop
or
xchg
data16
cmp
jb
aaa
xchg
jecxz
adc
bound
push
mov
stos
adc
test
cmp
es
es
or
(bad)
jmp
mov
push
(bad)
fisub
scas
call
jmp
jmp
retf
cmp
mov
scas
push
inc
fs
cmps
rcl
ja
xchg
pop
xor
cs
mov
cld
shr
inc
pop
cmp
and
jb
scas
adc
repz
sub
jmp
call
cmp
rcl
xor
mov
adc
test
rcr
dec
or
xor
in
push
mov
icebp
stc
mov
sbb
or
das
mov
aam
xchg
fisubr
pop
mov
xchg
mov
xchg
pop
(bad)
push
in
inc
jbe
xchg
push
mov
test
rcl
inc
ret
sub
es
repz
imul
js
adc
imul
xchg
ror
les
inc
neg
call
ins
push
mov
ficomp
repnz
and
mov
push
clc
test
shr
or
retf
push
jae
add
sub
jp
push
mov
shr
pusha
daa
mov
stc
mov
mov
lods
jmp
xchg
inc
les
mov
push
push
adc
jno
xor
lea
push
shl
sbb
jno
xor
sbb
cmc
jg
les
and
xor
gs
and
push
push
jl
push
ret
dec
aaa
lock
xchg
jae
icebp
ins
add
fdivr
cdq
gs
cmp
adc
cli
aaa
ficom
int3
call
div
mov
(bad)
push
popa
pop
push
jecxz
sti
cmp
mov
div
dec
cmps
inc
cdq
cdq
cmc
or
and
mov
or
(bad)
cmp
aad
dec
ret
inc
mov
jg
adc
and
popf
test
bound
adc
int3
adc
bound
pop
push
scas
(bad)
scas
xor
pop
fmul
out
fst
addr16
xchg
int
mov
test
dec
and
dec
mov
and
xchg
mov
rol
and
inc
in
hlt
popf
mov
daa
loop
xor
sahf
into
(bad)
lock
sbb
mov
mov
push
adc
dec
mov
enter
mov
cmp
cmp
js
add
dec
mov
mov
neg
sbb
icebp
sub
jno
jle
ss
xor
ss
pop
mov
lock
push
mov
sub
fld
call
and
pop
mov
sub
pop
pop
mov
xor
xor
lods
stc
(bad)
fmul
xor
mov
pop
imul
cdq
and
out
(bad)
popa
mov
adc
push
pop
pop
enter
out
fwait
sbb
push
out
and
add
sub
std
push
cmp
sub
call
xor
sub
pop
not
out
cmc
out
sbb
xchg
mov
cmp
ja
cdq
sub
(bad)
push
bound
das
cwde
dec
add
imul
and
or
inc
xchg
add
int3
push
(bad)
in
adc
retf
bound
inc
rol
frstor
pushf
dec
in
add
imul
xchg
int3
sbb
fnstsw
sub
mov
sti
mov
jne
mov
xor
add
or
push
daa
adc
jg
ds
push
cmps
test
cmps
xchg
out
or
xchg
std
sahf
or
jb
xchg
jo
xchg
mov
imul
mov
cld
js
cmps
icebp
inc
xor
push
lods
adc
jo
out
lods
jl
mov
icebp
fmul
push
rol
jns
and
pop
dec
xchg
cmp
xchg
jmp
cmps
or
cld
and
into
push
test
mov
retf
fiadd
fnsave
xchg
sub
lock
test
jp
retf
ret
imul
and
rcl
pop
cmp
test
xlat
idiv
inc
xchg
or
leave
pop
dec
sbb
daa
cmp
icebp
lods
retf
mov
(bad)
sbb
in
jg
scas
sbb
stc
mov
sbb
retf
inc
dec
cmp
adc
les
clc
push
pushf
test
test
test
(bad)
outs
add
ret
add
outs
mov
sbb
icebp
rol
call
(bad)
mov
(bad)
loopne
push
jb
and
push
nop
and
jmp
dec
lods
jecxz
xchg
and
push
cmp
mov
adc
or
push
jae
sub
mov
retf
xor
pop
jnp
and
xor
and
lahf
sar
leave
jle
dec
mov
(bad)
sub
jp
(bad)
pop
dec
push
rol
or
stos
std
mov
retf
enter
adc
mov
jl
loopne
jp
jns
pop
dec
punpckhwd
lods
inc
jbe
mov
and
movs
in
adc
test
lock
loope
or
or
inc
fst
dec
ror
pop
push
mov
outs
repz
enter
xadd
(bad)
lahf
or
(bad)
jmp
inc
nop
(bad)
addr16
mov
pop
xor
inc
retf
inc
into
fld
inc
mov
loope
fild
ret
test
and
stc
mov
dec
ins
cmp
test
fild
cmp
mov
shl
add
mov
in
imul
movs
xchg
jae
push
dec
out
add
ror
sub
mov
jb
sbb
fwait
mov
adc
scas
mov
leave
mov
or
jns
js
pop
add
dec
pop
lods
stc
xlat
(bad)
xor
fwait
repnz
int3
stos
xchg
xor
test
pop
or
retf
push
cmps
jno
xlat
ja
and
and
gs
fsubr
(bad)
and
or
test
nop
push
loopne
cli
stos
ror
lods
test
xchg
mov
lods
fistp
cmp
std
mov
aad
push
jae
mov
xchg
sub
or
aad
xchg
mov
arpl
push
sbb
outs
push
adc
and
jg
mov
push
mov
sar
pusha
sar
cdq
cmps
dec
mov
mov
inc
jl
gs
or
mov
movs
sahf
rcl
popa
clc
cmc
jae
xchg
sub
jg
lods
cmp
loopne
rcl
neg
imul
fcom
adc
cmp
jns
lea
pusha
pop
ret
and
sbb
data16
(bad)
inc
jnp
jecxz
pop
imul
or
jmp
retf
js
or
pop
fsubrp
rol
jne
jb
xchg
call
mov
loopne
icebp
nop
push
maskmovq
test
mov
jg
mov
out
sbb
cli
jns
int3
scas
xchg
inc
mov
mov
push
xchg
or
inc
and
xchg
sub
and
out
xor
pop
cs
jmp
jge
mov
movs
stos
xchg
jno
inc
jnp
sti
add
jno
push
mov
dec
jp
js
das
pusha
stos
ss
push
mov
cmps
jae
aas
push
and
(bad)
out
sbb
lock
xor
or
fwait
retf
or
outs
stc
inc
xchg
aad
add
fsqrt
imul
and
imul
lods
mov
dec
std
or
loopne
call
xchg
ss
in
push
xchg
mov
mul
xor
lahf
pop
jae
dec
add
retf
test
enter
mov
mov
push
ret
cmp
or
repz
es
cwde
xchg
sub
mov
sbb
stos
sub
jae
push
inc
xchg
xchg
mov
je
sub
fdiv
retf
add
cld
adc
or
or
lds
in
jmp
(bad)
and
clc
adc
xor
aam
rcr
dec
jbe
mov
sub
shr
test
test
rol
mov
xor
outs
dec
push
fidiv
xor
imul
aaa
loop
add
in
xchg
cmp
shl
jno
retf
mov
shl
movs
test
and
xchg
add
jbe
sahf
xchg
or
lock
xor
sysexit
xchg
popa
cmp
rcr
and
mov
jp
or
fidiv
jle
sbb
xchg
add
cs
and
sbb
enter
stos
out
int
fsubr
sub
stos
idiv
cmp
mov
mov
fistp
leave
je
out
fisttp
aas
les
inc
ins
pusha
inc
mov
mov
call
ins
cmp
je
cmp
movs
sub
xchg
push
lods
jb
sti
fdivr
or
fcom
cmp
rep
fsub
adc
imul
cmps
jae
xchg
stos
pusha
dec
or
jl
aad
mov
sub
sti
test
mov
adc
mov
imul
shr
inc
dec
push
mov
dec
pop
jbe
(bad)
imul
ins
mov
xchg
fimul
repnz
test
lds
outs
xchg
push
mov
jmp
in
loop
adc
xor
xor
in
shl
fmul
mov
push
repnz
sbb
inc
push
shr
pop
enter
aad
mov
lock
mov
or
sbb
imul
ret
mov
cmp
ins
movs
(bad)
sbb
mov
imul
sahf
xchg
adc
and
jmp
test
adc
lahf
jbe
xchg
push
enter
jp
mov
popf
sbb
xchg
sub
push
iret
sti
jp
cdq
pop
enter
adc
mov
xchg
cmps
iret
ficomp
mov
or
adc
jmp
and
aad
xchg
adc
iret
ins
inc
movs
std
add
mov
and
outs
adc
pop
push
sti
pop
test
pop
cmp
out
pop
sub
retf
lods
xor
scas
(bad)
(bad)
fwait
dec
bound
push
dec
int
lea
xchg
jne
mov
cmps
out
enter
xor
and
addr16
imul
push
out
mov
inc
lahf
call
retf
or
jmp
test
xor
mov
xchg
icebp
push
push
cmp
mov
ror
mov
imul
test
test
std
daa
jge
mov
mov
mov
outs
mov
pop
aaa
scas
mov
adc
inc
cmp
movs
mov
hlt
dec
push
xchg
pop
adc
mov
adc
dec
mov
push
mov
lods
mov
adc
push
test
push
cmp
(bad)
retf
ret
inc
test
dec
mov
inc
xor
sbb
adc
popf
outs
push
mov
cmp
loop
mov
je
div
ficomp
adc
retf
stos
test
jnp
ret
pop
dec
jp
aam
sub
cmp
cmp
jl
jmp
lea
inc
aas
sbb
jnp
(bad)
mov
retf
push
icebp
scas
add
aad
rol
gs
mov
xor
out
lds
mov
pop
xor
cmc
push
dec
lea
push
shr
xchg
mov
lea
xchg
icebp
iret
je
xchg
cmp
adc
icebp
imul
lods
push
mov
daa
xchg
cmps
ja
cdq
idiv
sub
jge
push
add
push
or
xchg
pop
cdq
mov
cmc
retf
aam
ret
ds
and
dec
adc
sbb
xor
sub
int
cmps
or
jbe
mov
ja
cmp
mov
nop
pop
push
push
mov
psubw
push
mov
and
ja
sbb
sub
(bad)
xchg
stos
fcom
not
cmp
push
and
fwait
dec
mov
scas
ins
in
dec
mov
sub
add
xor
lock
call
mov
inc
push
push
jnp
mov
xlat
test
ret
and
ja
xor
cmp
lods
inc
jae
or
or
mov
sbb
mov
call
pop
retf
(bad)
mov
mov
icebp
mov
push
ins
pop
sbb
push
dec
sub
and
adc
inc
inc
sub
or
adc
push
sahf
or
gs
fldcw
pop
xchg
les
aas
pop
adc
inc
mov
jbe
mov
in
add
sub
scas
xor
mov
inc
pop
rcr
imul
mov
xor
sbb
adc
mov
cmp
cmps
enter
push
aad
aad
sub
nop
jecxz
and
das
pop
cmp
pop
xor
outs
movs
in
mov
mov
std
stc
(bad)
push
cli
fadd
test
mov
aad
mov
mov
loope
jle
sbb
push
es
fldlg2
push
sub
ds
lods
stos
je
nop
test
and
call
push
sbb
or
jp
push
mov
dec
push
jmp
fldcw
adc
push
jne
loop
sbb
je
add
jno
pop
mov
ficom
fnstenv
int3
lahf
aaa
dec
lds
cwde
xchg
sbb
add
cmp
sub
adc
test
xchg
pop
fdivr
cwde
add
lea
jae
cmc
or
jmp
test
movs
xchg
popf
pushw
rol
data16
adc
mov
mov
cmp
lds
mov
or
cmp
mov
icebp
jnp
test
push
push
pop
cmps
mov
nop
pop
ja
sub
cmp
ja
xchg
xor
leave
mov
(bad)
push
int3
push
nop
sti
adc
cmp
mov
jbe
mov
cmp
sub
inc
inc
add
mov
stos
push
jno
xlat
in
test
pusha
leave
ss
pusha
daa
mov
mov
cmps
aam
push
sti
retfw
add
addr16
sbb
jne
xchg
pop
rol
mov
outs
iret
rcr
sub
mov
cmps
mov
pop
movs
rol
dec
call
mov
sub
test
add
enter
cmp
add
sbb
pushf
pop
xor
into
and
mov
xchg
int
jnp
ja
push
inc
xchg
mov
or
mov
pop
jb
mov
pop
(bad)
adc
mov
sbb
test
mov
jns
popa
rcr
mov
push
sub
push
mov
cmps
outs
retf
loop
fcomp
adc
(bad)
mov
and
add
push
pop
or
das
add
(bad)
popa
mov
jbe
test
stos
retf
ror
mov
mov
lahf
mov
(bad)
hlt
(bad)
mov
test
lds
sub
mov
and
xchg
in
jbe
or
std
xor
movs
mov
cmp
inc
call
push
mov
add
or
and
nop
mov
xchg
sbb
push
iret
inc
push
cwde
hlt
mov
jmp
or
sub
fcomp
mov
mov
xor
sbb
mov
test
jne
add
leave
lods
mov
shr
mov
(bad)
ficomp
ja
mov
or
sub
cmp
jb
fsub
xor
ret
inc
pop
sub
in
rol
xchg
push
call
arpl
xchg
dec
sbb
mov
(bad)
cmp
mov
lock
aam
jle
clc
ins
stos
mov
jne
push
cmp
push
imul
rcl
dec
sti
mov
cmp
repnz
popf
int
mov
mov
loope
int3
(bad)
and
xor
sbb
fwait
mov
and
push
jo
or
sub
push
(bad)
std
inc
das
sahf
mov
or
pop
js
pop
hlt
inc
jbe
cwde
sub
push
mov
pop
movs
dec
xchg
sbb
ror
(bad)
push
fiadd
dec
dec
ins
or
stos
movs
movq
jge
fwait
dec
jmp
sar
cmp
retf
or
add
push
rcr
add
sub
pop
(bad)
sub
adc
xchg
inc
mov
pop
test
and
sub
ret
imul
dec
mov
fstp
push
xchg
inc
rcl
xchg
icebp
dec
jb
sbb
inc
mov
adc
xchg
jnp
cmp
and
and
(bad)
push
jmp
in
out
adc
in
(bad)
xor
adc
push
push
int
and
mov
add
inc
ins
mov
adc
jl
lahf
inc
lods
mov
cld
mov
popf
adc
fadd
lds
jbe
dec
lds
test
mov
mov
mov
mov
outs
inc
nop
jl
dec
inc
out
jo
out
and
push
ret
fld
push
rcl
fucomip
xor
push
adc
shr
xchg
sbb
sub
sub
cmp
xchg
add
lods
(bad)
push
clc
jno
xchg
out
push
and
mov
mov
scas
and
inc
mov
cmc
ss
xchg
pusha
adc
cmp
xchg
imul
mov
pop
pop
fcom
mov
add
test
xchg
leave
es
out
or
mov
mov
test
mov
and
sub
(bad)
sahf
mov
or
fisub
data16
test
lods
dec
sub
(bad)
sub
inc
jg
dec
mov
dec
(bad)
pop
add
cmp
(bad)
mov
les
neg
test
cmp
mov
lock
mov
push
cmp
push
stos
jnp
imul
sbb
pop
lds
mov
test
fidiv
(bad)
loopne
mov
retf
aam
popf
mov
call
sub
sub
xlat
push
xchg
sub
into
pop
fwait
aad
pop
mov
mov
add
fs
shr
ret
mov
ins
push
dec
mov
mov
js
dec
(bad)
neg
push
addr16
mov
mov
add
jmp
xchg
shl
fisubr
aas
fiadd
cmp
dec
mov
jmp
sbb
pushf
add
sub
mov
xor
int3
inc
pop
dec
pop
xor
hlt
movs
jmp
or
cdq
(bad)
lods
test
mov
xchg
adc
int3
add
loope
iret
mov
jns
fidiv
lea
inc
test
out
pop
dec
push
push
scas
mov
fstp
das
out
movs
dec
or
jg
sub
sub
mov
dec
cmp
daa
aam
imul
gs
jecxz
mov
(bad)
hlt
jbe
cmp
adc
shr
aam
jnp
je
and
es
and
push
adc
pop
(bad)
mov
(bad)
pop
and
arpl
mov
sbb
cmp
cmp
and
jns
or
test
outs
call
shl
push
and
mov
mov
pop
mov
nop
es
xchg
into
xor
pop
(bad)
inc
fstp
aas
mov
push
cmp
jnp
ret
mov
lahf
dec
pop
popa
out
shr
xchg
jle
loopne
(bad)
scas
or
(bad)
dec
jmp
in
dec
pop
inc
sub
(bad)
push
cmp
sbb
out
pop
jmp
or
lds
(bad)
shr
mov
push
mov
mov
jnp
mov
xchg
aas
out
dec
pop
jge
lods
and
arpl
ins
test
(bad)
les
sub
mov
shrd
xor
es
cdq
das
adc
cmps
xchg
sahf
aam
popf
push
add
mov
sahf
(bad)
mov
rcl
movs
jnp
jnp
push
adc
xchg
fst
fs
test
lds
scas
sbb
shl
cmp
scas
jne
mov
inc
popa
aad
lock
mov
mov
mov
dec
mov
mov
sti
daa
jnp
mov
push
jle
rol
mov
lea
xor
call
(bad)
push
bound
mov
pop
fldenv
stos
mov
sbb
mov
fldcw
push
retf
hlt
push
adc
pop
aam
pop
or
jnp
(bad)
jl
jne
lea
mov
ret
imul
xchg
pop
ja
jmp
push
mov
dec
mov
outs
(bad)
daa
push
into
rcr
and
movs
jnp
nop
call
xchg
push
call
fsubr
arpl
aad
nop
pop
ss
push
fld
sub
push
jge
out
mov
xor
and
mov
adc
pop
retf
cmp
popa
inc
(bad)
and
jae
stos
inc
push
inc
pop
dec
and
pmulhuw
push
and
fwait
ss
pushf
push
ins
and
jmp
fsubr
lock
mov
sub
adc
imul
sbb
ins
mov
les
xchg
clc
mov
add
xchg
mov
dec
xchg
xor
xchg
loope
push
mov
and
jo
dec
lea
mov
xor
xor
xchg
retf
fdivr
mov
sub
nop
sar
mov
jb
rcl
lds
out
pusha
jle
jecxz
movs
aaa
rcl
cmp
fincstp
and
(bad)
or
lea
sbb
test
inc
mov
ss
sahf
pop
stos
imul
cmps
xchg
mov
dec
push
pop
mov
jns
(bad)
pop
push
ins
cmp
and
je
dec
cmc
and
int
fs
into
jno
test
lds
adc
mov
xchg
dec
pop
loopne
jmp
ja
daa
cwde
mov
stos
xchg
shl
rcr
dec
adc
fwait
cwde
mov
push
and
or
pop
std
xchg
mov
in
ss
push
inc
call
push
into
push
pop
std
pop
cmps
(bad)
lds
fdiv
shl
inc
or
cmp
xor
shl
or
stos
popa
jbe
jecxz
adc
inc
sbb
shl
leave
fs
int3
inc
pusha
inc
and
test
jns
xchg
dec
jno
ja
clc
out
stos
imul
push
scas
adc
loope
xchg
push
cmc
adc
xchg
out
retf
ins
and
xor
int3
mov
cmp
not
push
mov
daa
popa
(bad)
jl
jo
sub
mov
arpl
pop
dec
sub
outs
(bad)
sti
add
(bad)
or
pop
pop
jns
add
add
and
in
push
mov
popf
(bad)
or
or
fadd
repz
push
dec
and
fst
push
mov
adc
xchg
or
fist
push
pusha
dec
push
pop
push
ret
in
je
adc
sbb
(bad)
stos
inc
add
mov
rcl
outs
xchg
or
or
daa
cs
div
fs
int3
cmp
jo
push
xor
aad
mov
aas
cmps
xchg
stos
adc
inc
add
(bad)
ds
mov
add
movs
fisubr
es
(bad)
(bad)
dec
jns
mov
ins
fst
outs
jmp
xchg
pop
sub
scas
retf
fdivr
xchg
mov
stos
inc
push
or
in
mov
adc
and
jp
std
push
ret
cdq
cdq
push
pop
fcomp
sub
cwde
jmp
xor
add
sbb
and
or
jp
dec
xor
cmp
jge
adc
loope
dec
outs
inc
fs
add
xor
nop
call
bnd
xchg
inc
idiv
pop
int3
mov
aaa
sahf
mov
mov
(bad)
jle
or
and
(bad)
and
jne
repnz
iret
sbb
pop
push
push
inc
imul
xlat
push
mov
xchg
test
cmps
jo
cmp
inc
call
add
cmc
(bad)
(bad)
popa
inc
test
call
popa
or
(bad)
jo
pop
and
dec
sub
sub
push
not
int
xchg
or
xchg
jmp
mov
ja
dec
lods
xlat
stos
mov
adc
mov
add
mov
inc
and
push
mov
dec
ret
int
inc
outs
mov
mov
rcl
rcl
push
lea
pop
outs
lods
shr
xor
mov
push
pop
or
mov
push
ldmxcsr
lds
lds
sbb
mov
jne
or
cmp
jl
leave
dec
pop
jbe
lods
jecxz
sbb
cs
loope
ret
inc
pop
in
or
in
mov
add
adc
ret
adc
ds
or
test
jecxz
jo
iret
or
(bad)
adc
cmp
nop
test
ins
push
dec
stos
xchg
and
and
jbe
mov
sub
(bad)
push
sub
out
in
add
push
mov
or
stc
sbb
add
lods
imul
(bad)
popa
data16
fild
dec
outs
cmps
mov
dec
hlt
mov
xchg
add
xchg
push
mov
xor
dec
dec
xlat
ret
add
or
test
sbb
in
push
adc
addr16
pusha
adc
in
test
repz
mov
cmps
mov
push
out
xchg
lock
mov
push
or
ds
xchg
je
lea
xor
jge
sahf
add
cwde
mov
ss
daa
(bad)
int3
(bad)
cli
xchg
mov
cmp
mov
enter
pushf
adc
pop
jo
xor
sbb
and
cmp
fsubrp
imul
add
pop
arpl
icebp
ret
gs
jb
mov
mov
and
retf
(bad)
fist
dec
cmp
xor
dec
fwait
std
lea
cmc
popa
hlt
push
mov
out
jno
leave
pop
or
imul
jne
jns
mov
addr16
ficomp
test
retf
lods
test
or
adc
scas
fist
bound
push
in
sub
lock
out
cmp
nop
mov
data16
push
mov
push
and
icebp
push
int3
lock
xchg
jno
or
jae
sub
clc
int
sub
pop
inc
test
jmp
in
add
out
jg
jmp
mov
xchg
xor
mov
mov
push
popa
arpl
adc
pop
repnz
sbb
shl
rcr
icebp
movs
fs
das
xor
add
jae
jecxz
xlat
sti
or
loope
xchg
xlat
jmp
cmps
pop
int3
aad
dec
cs
nop
pop
out
movs
loope
xchg
mov
fist
je
adc
ja
mov
pushf
in
dec
(bad)
pop
pop
(bad)
jns
(bad)
inc
ds
push
mov
mov
lea
call
push
dec
mov
js
popf
cmps
pop
inc
loopne
push
loopne
inc
pop
push
cdq
int
aaa
mov
fwait
push
out
mul
lea
mov
and
call
and
cmp
xor
inc
mov
icebp
fstp
sub
pop
movs
mov
xchg
ror
cld
clc
aas
adc
enter
in
sbb
icebp
push
movs
pop
in
mov
pop
xor
cmps
dec
xchg
sub
xchg
aaa
retf
bound
lahf
sub
jnp
and
xchg
lahf
push
clc
push
test
xchg
and
ror
call
idiv
cmp
rcl
mov
push
adc
mov
fist
sti
jp
push
aaa
rcl
mov
mov
xchg
pop
push
dec
addr16
push
jno
dec
clc
add
jge
xor
hlt
xor
call
pop
jbe
out
enter
aaa
sbb
dec
cmps
push
stos
out
outs
mov
icebp
mov
popf
xor
jo
add
xchg
or
pop
xor
mov
retf
sub
jo
mov
ja
cmp
sbb
sbb
mov
jmp
dec
repnz
mov
loop
(bad)
call
pop
ds
adc
or
cmp
popa
mov
inc
loop
hlt
or
mov
movs
mov
xchg
aaa
ficomp
shl
test
aad
or
xchg
ins
test
retf
shl
sbb
mov
push
shl
iret
pop
add
sub
jge
and
ss
dec
in
out
ss
mov
in
outs
test
mov
mov
rol
call
mul
cmp
pop
mov
cli
scas
and
mov
movs
ins
out
stos
cmc
and
test
xchg
test
cmps
aaa
cmp
scas
adc
cmc
mov
and
and
xchg
fsubp
adc
ss
mov
inc
jae
mov
mov
mov
cwde
shl
cmps
sbb
scas
fs
mov
iret
scas
pop
mov
dec
jns
lock
push
and
or
dec
mul
or
enter
je
mov
sbb
mov
and
lea
jp
icebp
(bad)
in
cmp
(bad)
mov
aam
adc
xchg
mov
aaa
nop
push
mov
pop
(bad)
in
inc
je
(bad)
and
mov
pop
sbb
out
ja
push
or
in
or
iret
add
stc
mov
lods
into
clc
jge
shr
sub
pushf
aad
out
pop
dec
xchg
int
mov
fild
(bad)
cmp
stos
sbb
ret
les
lock
sbb
add
int
int3
aaa
or
lods
inc
outs
dec
fstp
cmps
mov
sub
cmp
cmp
loope
cmp
xor
sbb
jmp
push
test
inc
xor
arpl
(bad)
push
ror
daa
xchg
data16
fdivr
rcl
addr16
xor
fld
fidiv
adc
mov
std
retf
adc
mov
xchg
jmp
rol
dec
stc
xchg
mov
cmp
push
loopne
push
jnp
into
push
xchg
repnz
mov
in
jle
add
ins
mov
pushf
ins
xchg
fisubr
scas
test
xchg
hlt
test
fwait
or
pop
dec
mov
test
cld
sub
adc
pop
sub
jbe
mov
fstp
mov
and
add
in
pop
xor
(bad)
xchg
jb
or
call
fs
out
loopne
xchg
jg
jb
paddd
jp
sub
in
sub
(bad)
ret
outs
dec
push
inc
xchg
cmps
and
sub
push
dec
jno
fisubr
and
repz
mov
dec
scas
cmp
in
lods
loopne
adc
(bad)
pop
dec
dec
adc
xchg
dec
addr16
addr16
in
scas
push
cmps
sbb
cmps
das
fld
mov
add
and
cmps
in
loopne
push
and
push
rcl
adc
push
xchg
jae
or
cdq
xchg
mov
in
or
cwde
rcl
popf
inc
and
lds
dec
xor
or
loopne
aaa
push
fild
(bad)
ins
jno
jmp
sbb
xor
shl
nop
jge
cs
in
pop
push
mov
mov
add
cmp
neg
xor
jmp
xor
cs
cmps
xchg
adc
ss
clc
mov
hlt
cmp
cmps
stos
jmp
data16
(bad)
and
(bad)
jg
imul
rol
and
cmps
test
pop
pop
(bad)
jb
xchg
rcr
dec
and
jge
js
push
mov
pop
out
inc
iret
arpl
scas
jmp
jl
sub
sub
fwait
jno
xor
sbb
dec
and
xchg
pop
pop
mov
jne
retf
hlt
and
pop
test
mov
jnp
inc
dec
clc
mov
sub
xchg
and
aam
or
cmps
xchg
sar
cmp
pop
inc
mov
push
inc
cmp
mov
xor
pop
sbb
scas
mov
xor
int
push
inc
mov
cmps
jle
jle
lock
cwde
out
loopne
es
push
cli
fiadd
cmp
lds
pop
mov
leave
sub
lahf
push
pop
je
xor
cmp
std
fdivr
sub
aam
bt
enter
jb
retf
xlat
clc
loope
hlt
in
mov
pop
push
imul
sbb
xchg
xor
in
jb
mov
inc
(bad)
mov
fstp
adc
mov
jbe
mov
(bad)
pushf
cmp
mov
bound
inc
sub
and
adc
jns
ret
or
repnz
pop
push
int
add
xor
xor
sbb
loope
rcl
and
cmc
hlt
addr16
add
push
dec
nop
dec
pop
sti
mov
sub
dec
in
popf
call
push
scas
mov
add
sub
pop
call
cmps
inc
cmp
sub
les
dec
add
mov
iret
call
sub
xor
push
shl
push
push
rcl
cli
je
xchg
cld
mov
jl
stc
xchg
nop
jmp
pop
pop
xor
sub
retf
rol
and
mov
pusha
les
data16
int
push
mov
push
test
push
sub
mov
lods
sbb
outs
or
cdq
imul
shl
in
adc
scas
dec
mov
loop
aam
cdq
rcl
das
pop
js
inc
mov
jl
retf
and
pop
mov
out
daa
mov
jbe
pushf
sahf
stos
addr16
add
push
(bad)
int3
push
aam
fs
repz
push
std
or
in
popa
inc
cmp
sub
in
dec
add
aaa
sub
inc
jl
jmp
test
mov
addr16
inc
cmp
dec
lea
sub
xchg
pop
inc
leave
inc
pop
daa
mov
dec
fnstsw
mov
or
mov
in
cld
aas
jecxz
xchg
data16
div
hlt
scas
fcom
and
fdiv
cmp
or
or
fstp
sub
inc
xchg
dec
fstp
hlt
lods
outs
stos
inc
jae
cs
fimul
test
in
stc
mov
and
cld
adc
cmp
in
push
mov
and
and
pop
cwde
push
int
mov
fsubr
call
pop
loopne
out
(bad)
add
xchg
cmc
fcmovnu
sti
xchg
inc
lea
pop
push
and
fs
xor
js
push
repnz
mov
mov
sbb
pop
mov
mov
adc
xor
lods
ins
jno
push
dec
xor
test
lds
add
shl
or
fild
xor
cld
out
add
mov
xchg
mov
and
(bad)
jle
pop
jb
loope
cmp
cmp
cmp
ins
mov
pop
pop
xchg
dec
push
or
push
dec
mov
mov
pop
ds
in
in
xchg
dec
and
mov
pop
xchg
repnz
add
mov
pop
mov
xchg
mov
add
es
xchg
arpl
test
jmp
repz
xor
cdq
dec
add
stos
lods
das
sub
lea
out
dec
pop
or
xor
je
and
xchg
inc
pop
or
ror
jno
or
xchg
pop
inc
mov
mov
mov
dec
stos
lods
les
add
and
pusha
adc
adc
and
fs
mov
mov
adc
pop
cmp
sbb
repnz
dec
sub
xor
iret
inc
or
pop
pop
in
(bad)
push
push
push
push
and
jmp
xchg
and
jg
jo
or
xor
inc
cwde
adc
sbb
push
mov
stos
pop
mov
dec
out
jecxz
outs
and
out
jp
push
test
sub
fwait
ret
lahf
sub
or
test
inc
xlat
dec
retf
inc
das
xor
cld
jns
inc
pop
push
repnz
stos
mov
imul
sbb
mov
jp
add
movs
xchg
(bad)
call
inc
push
push
xor
stos
sti
(bad)
xor
mov
or
jo
repnz
jns
mov
mov
loop
or
popa
ins
sub
int3
push
fsubr
mov
repnz
xchg
mov
out
xchg
mov
dec
mov
(bad)
mov
sbb
(bad)
xor
jl
mov
sub
das
add
lods
enter
fld
lahf
mov
mov
push
stos
bound
mov
jb
stos
dec
mov
stc
test
mov
daa
jle
call
pop
mov
mov
cmp
or
add
mov
cmp
jnp
dec
and
cmps
add
(bad)
mov
aad
dec
pop
bound
int3
push
pop
imul
adc
pop
dec
inc
push
(bad)
int
dec
mov
in
or
xchg
sahf
mov
dec
cld
jle
dec
aad
mov
xlat
dec
stos
push
adc
stos
jbe
pop
jo
add
gs
add
int3
pop
test
scas
sti
in
shl
jp
jb
hlt
jmp
pop
mov
add
retf
call
mov
jecxz
popf
push
mov
std
aam
sub
mov
call
pop
(bad)
pushf
ror
inc
fabs
jb
popf
stc
pusha
jmp
idiv
sub
push
cld
ror
call
lods
add
jmp
push
addr16
fst
adc
lock
(bad)
xchg
stos
scas
nop
add
(bad)
fwait
push
das
mov
cmp
mov
in
cmps
xchg
and
cmp
push
pop
dec
xchg
lea
fisub
mov
call
dec
add
push
jle
daa
xor
in
call
test
inc
dec
gs
sub
mov
sub
stos
sbb
lods
pop
fstp
pop
xlat
inc
sahf
movs
mov
daa
pop
(bad)
xlat
fs
fisttp
call
mov
hlt
add
ret
cmp
and
mov
inc
data16
out
mov
pop
jae
mov
push
aaa
lea
xchg
test
push
adc
pop
mov
retf
sbb
lea
popa
xchg
sti
imul
xchg
mov
and
jns
stos
cmp
or
add
pop
loopne
push
sbb
fnsave
fidiv
mov
jae
stos
pop
mov
jmp
sub
jg
call
aaa
fs
imul
fstp
dec
sub
push
mov
sbb
add
dec
sti
cmp
das
fmul
stos
fidiv
aad
dec
jnp
inc
(bad)
enter
inc
mov
and
mov
adc
rol
xchg
jbe
adc
es
dec
xchg
loopne
fmul
mov
test
mov
or
push
shl
fsubr
xchg
dec
mov
xor
addr16
and
imul
cwde
adc
inc
sbb
repz
sub
xchg
pop
and
call
aam
fwait
pop
(bad)
mov
mov
cdq
mov
stc
push
pusha
push
call
pop
mov
sahf
xor
ret
dec
push
adc
dec
pop
call
xchg
hlt
dec
test
in
stos
fwait
repnz
pop
in
out
pushf
outs
cmps
ja
cld
lods
adc
ins
mov
iret
push
daa
lahf
or
sbb
scas
jmp
push
sub
daa
mov
mov
or
(bad)
xchg
add
outs
mov
mov
jl
scas
mov
or
xor
dec
or
enter
lods
out
jmp
mov
ins
into
mov
inc
push
jmp
adc
or
outs
jbe
mov
mov
pop
push
add
int3
mov
cmps
pop
sahf
cmp
dec
pop
iret
and
mov
jg
xchg
out
push
(bad)
xchg
or
xchg
cwde
xor
sbb
sbb
add
arpl
mov
mov
or
xchg
mov
out
inc
sbb
sbb
bound
(bad)
pop
les
imul
push
jle
xor
dec
sub
mov
cmp
mov
ret
sub
sub
inc
imul
fmul
nop
push
ss
add
inc
cmps
jo
in
jmp
ds
mov
sti
popa
cdq
(bad)
(bad)
jbe
rcr
stos
ss
mov
popa
sub
pop
and
mov
xchg
ins
jno
pop
mov
mov
call
cmc
sti
jne
sahf
add
mov
mov
xchg
mov
jge
pop
std
es
jmp
mov
xor
mov
lods
pop
call
ss
fcomp
scas
movs
repz
and
arpl
out
pop
xlat
int
leave
sub
stos
repnz
sub
and
inc
pop
mov
sbb
cmp
or
mov
arpl
xor
adc
push
ja
jns
test
cmp
xchg
cmps
mov
fadd
and
add
dec
mov
js
lds
mov
sub
mov
scas
ins
push
out
push
xchg
and
jp
inc
dec
loopne
sbb
imul
pop
jge
jb
movs
aam
sbb
leave
movs
mov
push
jmp
xchg
ins
stos
jnp
mov
jg
or
dec
mov
adc
imul
mov
xor
pop
repnz
cmp
fisub
pop
dec
add
mov
jb
xor
adc
push
mov
mov
xor
out
xchg
aas
lods
in
retf
push
js
sbb
dec
cmp
test
mov
dec
pop
cmp
sub
mov
cmps
(bad)
dec
daa
push
cmp
shl
jbe
stc
jne
jg
bound
imul
nop
dec
jnp
jge
adc
iret
test
inc
cmp
shr
mov
jle
in
inc
mov
repz
pop
dec
cld
dec
xlat
sbb
mov
outs
mov
sbb
mov
fs
aam
repz
scas
xor
xor
jl
in
daa
sbb
and
(bad)
xchg
int3
movs
xchg
call
xchg
mov
pop
or
mov
push
sbb
pop
(bad)
jmp
ins
and
xor
mov
and
add
cdq
or
pop
in
add
xchg
add
gs
jmp
adc
cmp
repnz
lea
jne
xchg
xor
or
jno
loope
mov
scas
inc
mov
jno
push
out
pusha
and
cli
push
std
test
movs
mov
test
loop
push
inc
xchg
test
push
xor
mov
stos
and
inc
pusha
nop
pushf
mov
outs
and
jge
or
cmp
sub
aaa
xchg
inc
pop
add
add
popf
xchg
arpl
cmp
sbb
leave
cli
fsub
mov
mov
xor
inc
popf
and
push
jno
or
(bad)
xchg
scas
cmp
inc
idiv
mov
mov
mov
rcl
aam
sub
pop
int3
ds
push
sbb
outs
inc
mov
push
int3
dec
ss
push
jo
inc
inc
(bad)
or
mov
adc
pusha
push
jbe
adc
not
adc
jnp
inc
outs
or
test
xchg
cs
test
pop
es
adc
push
out
push
sub
movs
enter
imul
aas
fistp
add
dec
inc
hlt
repz
jnp
loope
les
(bad)
or
in
sub
xchg
pop
dec
add
fadd
push
fadd
xchg
mov
mov
push
ret
dec
test
jo
jo
sti
lea
es
mov
fs
xchg
ins
scas
dec
es
imul
loop
xchg
aad
xchg
and
pop
mov
mov
push
ss
push
or
pop
pop
icebp
cwde
fisttp
imul
jbe
dec
cmps
stos
xchg
mov
lds
xchg
and
es
shl
stos
and
fisub
fst
mov
mov
xchg
push
(bad)
out
fnsave
nop
or
rcr
pop
pop
xchg
and
xor
mov
je
pop
call
xor
dec
hlt
sub
popa
adc
dec
bound
jmp
adc
mov
jno
outs
mov
lods
pop
retf
xor
cmps
add
loopne
xchg
arpl
ss
(bad)
fs
icebp
(bad)
cwde
ss
and
fisttp
mov
data16
sbb
xchg
(bad)
push
or
std
pop
inc
and
add
lea
mov
popf
clc
and
xor
or
sbb
mov
sbb
fnsave
mov
ss
mov
loopne
sbb
(bad)
push
cdq
adc
es
fstp
push
adc
ja
je
adc
mov
adc
jg
push
dec
aaa
aaa
push
xchg
fnclex
cmc
dec
repnz
and
cwde
cmp
mov
mov
pop
pop
out
mov
sti
test
dec
push
int
int3
jmp
(bad)
dec
jne
jecxz
aaa
cli
and
adc
sbb
sbb
mov
cmps
adc
in
pop
loopne
xor
sbb
neg
jle
inc
or
jmp
pop
xor
xor
out
sar
lods
push
call
add
push
cmp
push
push
xchg
dec
jp
mov
cmc
xchg
and
jb
(bad)
aad
xor
data16
int3
imul
push
mov
sbb
loop
cs
mov
call
jmp
add
test
adc
push
imul
ja
rcl
les
pop
sbb
fcmovbe
xchg
ja
inc
mov
into
cmp
cs
mov
shl
mov
and
push
jmp
ret
cmp
adc
pop
js
mov
dec
popa
jmp
inc
mov
repz
bound
mov
xor
jl
inc
imul
je
rol
es
cmps
mov
add
xor
push
aad
dec
mov
push
inc
or
es
lock
pop
popf
les
hlt
mov
adc
rcl
cmps
fadd
pushf
pop
enter
sbb
xchg
ficom
xchg
cs
setp
push
push
or
cmp
mov
push
ss
fcom
inc
jno
adc
dec
adc
or
cmp
(bad)
or
xchg
mov
dec
inc
lock
mov
jle
imul
clc
mov
cmp
popa
sub
ror
jno
adc
(bad)
mov
ss
cmps
or
xlat
in
pop
sub
aas
rcl
(bad)
(bad)
xchg
cmp
sub
arpl
rcr
xchg
out
mov
in
popa
imul
imul
mov
pop
aaa
mov
mov
jb
jge
jge
pop
aas
or
jle
xchg
jne
ss
dec
popa
loope
add
adc
sub
cmc
rcr
or
aas
cmp
jb
xchg
sahf
xor
iret
cs
fidivr
fwait
and
mov
jp
arpl
xchg
jnp
lea
add
mov
dec
loopne
lea
inc
or
scas
sar
push
push
inc
jmp
pop
fwait
loope
stos
ss
and
imul
gs
dec
mov
dec
(bad)
sti
lahf
addr16
rcr
jbe
xchg
ja
jne
sbb
inc
enter
ins
repz
iret
outs
xor
mov
jae
push
adc
pop
xchg
push
int3
mov
test
or
scas
aam
xchg
cdq
fsub
jecxz
sbb
cs
mov
xor
mov
mov
hlt
int3
lock
xchg
dec
or
or
mov
add
daa
jp
scas
pop
clc
sbb
xchg
cmp
mov
cmps
dec
dec
rcl
repnz
fcomp
lods
pop
xchg
mov
pop
clc
jne
mov
int
sahf
adc
les
int
(bad)
das
jnp
sub
retf
hlt
sbb
out
adc
popa
mov
jmp
push
pop
xlat
retf
adc
cmp
out
rcl
ret
cmps
fild
mov
out
aad
retf
sub
repnz
popf
xor
inc
mov
call
cmps
sbb
lock
and
cmp
aas
mov
dec
dec
sbb
cmp
jbe
push
call
call
lock
mov
loopne
or
jge
rol
mov
mov
movs
int
mov
pop
jbe
mov
adc
pop
jno
or
pop
adc
fnsave
mov
mov
sub
stc
push
jmp
push
data16
add
int
bound
xor
out
pop
test
rcr
jnp
xchg
add
loopne
outs
xor
add
repz
push
nop
gs
daa
ror
mov
mov
pop
int3
sub
and
stc
cmc
xchg
add
in
mov
sub
shl
shl
into
xor
sti
xor
shl
outs
or
leave
xchg
lds
fisub
dec
aaa
loopne
addr16
adc
movs
stc
dec
js
push
je
cmp
jmp
mov
xchg
push
nop
cmp
mov
aad
popa
sub
mov
test
fild
in
sub
test
or
fild
mov
scas
sbb
test
int3
imul
push
mov
pop
sahf
(bad)
push
gs
jnp
jmp
mov
minps
xchg
xor
test
es
mov
leave
xor
aaa
jg
lea
xor
cmovge
bound
je
inc
bound
int
data16
bound
sbb
push
sbb
arpl
adc
mov
mov
leave
mov
loop
shl
leave
arpl
mov
sub
cli
stc
mov
or
stos
adc
mov
jmp
push
pop
nop
xor
sub
adc
sub
mov
popf
mov
inc
push
mov
loopne
mov
inc
les
push
mov
out
fcom
call
sub
out
and
xlat
mov
lds
jo
int
dec
mov
retf
test
mov
int
lds
mov
xor
add
mov
sub
(bad)
adc
jg
cld
cmc
js
arpl
out
pusha
leave
out
xchg
test
adc
mov
in
cmp
pop
loope
inc
(bad)
loope
in
(bad)
(bad)
dec
add
lock
jb
mov
movs
inc
retf
pop
adc
popf
mov
ret
nop
xchg
in
add
imul
ja
or
dec
push
pusha
xchg
and
dec
inc
mov
out
adc
jbe
mov
xchg
inc
push
push
add
rcl
cmp
and
int3
xchg
popa
mov
and
out
xchg
test
jb
pusha
mov
mov
out
jmp
das
xchg
ins
cwde
sub
mov
cmc
and
mov
cmp
adc
mov
cmp
(bad)
imul
mov
ins
movs
xor
test
jge
dec
rol
adc
lock
push
dec
imul
lods
pop
cmp
(bad)
xor
push
test
pop
test
call
pusha
ret
ret
retf
and
pop
add
push
daa
enter
mov
add
ficomp
xor
pushf
daa
inc
inc
jb
inc
pop
cmps
pop
in
and
push
adc
aas
and
mov
pop
mov
js
call
cmp
dec
xor
cmp
scas
add
cmp
jmp
inc
mov
test
jge
(bad)
cmp
inc
lods
jge
pop
or
jge
(bad)
xlat
jae
push
daa
js
adc
jmp
sub
mov
fsub
mov
cmp
outs
ret
dec
sar
or
pop
adc
out
pop
sar
cld
es
rcr
pop
aam
mov
ror
loop
dec
xchg
mov
sub
xchg
xor
call
test
ins
mov
xor
into
mov
ja
popf
inc
push
jp
fwait
leave
les
sbb
add
dec
cmc
inc
fstp
cmp
mov
pushf
nop
aam
lock
pusha
nop
push
js
mov
cmp
mov
test
pop
movs
mov
mov
mov
out
sbb
or
scas
lea
and
fiadd
sbb
inc
xchg
daa
dec
push
(bad)
xor
xchg
inc
xchg
nop
push
xchg
inc
dec
sub
xchg
xor
sbb
add
mov
mov
push
loope
xchg
or
pop
mov
mov
retf
mov
je
push
jp
xor
stc
mov
cdq
or
lods
fwait
dec
test
(bad)
jle
jg
push
sbb
out
sbb
mov
mov
in
or
ins
test
push
sub
or
bound
fnstcw
sub
push
popf
inc
xchg
inc
adc
sub
ins
mov
mov
push
mov
adc
cmps
add
sub
addr16
rcr
sub
gs
fbld
or
mov
mov
dec
dec
retf
fidiv
xchg
xor
mov
fmul
mov
pop
push
mov
xchg
je
pop
xchg
pop
mov
lods
adc
mov
and
shl
jge
mov
push
push
nop
outs
mov
leave
cmps
pop
fdiv
lods
rcr
cmps
add
pop
fistp
mov
jg
pop
or
jge
imul
xchg
xchg
sbb
pusha
stc
das
inc
xor
sub
xchg
scas
sub
cs
ret
pop
fisttp
gs
ret
push
dec
mov
sub
mov
push
inc
cdq
add
mov
imul
outs
gs
adc
hlt
inc
out
inc
xor
adc
xchg
pop
dec
not
xchg
test
daa
int3
stc
and
dec
cmc
jno
jecxz
pop
mov
mov
inc
push
xchg
cmp
fbstp
sub
push
das
inc
cwde
js
jno
add
das
add
or
xchg
jbe
mov
retf
inc
push
movs
popf
jmp
and
pushf
cmp
jae
pop
outs
std
sub
retf
cmp
loope
push
ret
adc
in
mov
xor
retf
fmulp
mov
dec
dec
pop
jmp
lock
sub
cmp
mov
jp
push
out
mov
ins
movs
call
repnz
and
mov
div
loope
fdivr
and
or
or
dec
or
jmp
pop
push
js
adc
push
sbb
mov
pop
xchg
inc
adc
cmps
shr
mov
push
clc
scas
test
mov
push
sbb
xor
fcmovnbe
mov
into
fs
or
sub
daa
loope
xor
xor
xor
movs
cmp
mov
out
inc
repz
fisttp
lods
or
and
cs
aad
fidivr
lods
adc
movs
pop
cmp
inc
adc
jns
stos
sbb
adc
mov
out
jmp
mov
pop
stos
adc
mov
cmp
mov
add
fldenv
mov
sbb
out
test
mov
call
pop
fnstsw
sub
loope
les
dec
mov
sbb
int
ret
mov
mov
jmp
call
or
sub
xor
cmc
loop
sub
cmp
cwde
pushf
int3
and
sub
lea
or
fnstcw
fld
mov
ret
ins
sbb
or
sub
adc
pop
xor
mov
or
inc
rol
ror
inc
push
outs
push
into
rcl
test
(bad)
push
pop
fisubr
test
ins
js
push
and
inc
jl
out
adc
lds
adc
xchg
push
daa
sbb
cmps
ret
sub
mov
inc
add
lods
test
xor
ret
aas
jb
ret
and
sbb
xor
xor
jns
cmp
xchg
lea
push
in
sub
cmp
inc
mov
mov
cmc
shr
jns
in
dec
mov
jae
push
ds
add
dec
inc
sub
mov
loop
mov
stos
shl
pop
sbb
and
cwde
mov
cmps
sbb
test
push
and
aaa
and
mov
add
jecxz
ins
mov
adc
mov
sub
pop
ret
cmps
mov
mov
xor
ins
pop
aam
pushf
jo
(bad)
jg
fiadd
push
jmp
mov
fiadd
dec
jbe
mov
maskmovq
not
add
jnp
adc
xchg
xor
lds
mov
or
adc
or
dec
out
add
dec
dec
sbb
fistp
cmc
cld
ret
pop
jo
test
pop
jg
sbb
xchg
sbb
outs
add
lock
ret
or
retf
add
add
sbb
lods
(bad)
dec
fiadd
xor
lock
xlat
movs
rol
or
push
movs
jmp
xor
xor
jne
pop
stos
jne
inc
dec
je
data16
lds
pop
out
sub
mov
jnp
loopne
xor
xor
mov
fldcw
(bad)
loopne
dec
mov
mov
shl
or
fwait
mul
xchg
inc
scas
add
dec
jmp
or
mov
pusha
(bad)
adc
aam
cmps
push
sub
inc
and
fnstsw
aad
sar
cmps
repnz
ret
jbe
lock
or
dec
sbb
cli
out
xor
ja
pop
sahf
fbstp
push
inc
ins
add
mov
pop
xor
fsub
fsub
call
jp
jnp
inc
test
sbb
and
movs
push
or
mul
push
fiadd
pop
rol
or
cmc
cmp
inc
pop
mov
outs
jae
adc
inc
cmp
ins
call
inc
jbe
rol
leave
loop
and
into
rcl
xchg
ins
jg
scas
inc
stos
popa
add
loop
mov
in
lods
fld
jnp
ss
mov
mov
in
lahf
or
out
mov
shr
sub
loopne
ds
ficom
jnp
fmul
xchg
retf
jnp
out
(bad)
mov
lock
test
out
pop
cmp
jo
sub
shl
test
jp
pop
test
test
jl
stos
es
inc
popa
loopne
outs
xchg
dec
jne
loope
xchg
mov
push
cmp
mov
bound
jmp
and
xor
lock
test
push
pushf
fucomip
jno
test
test
(bad)
sub
idiv
xor
dec
mov
jns
data16
lods
push
and
xchg
fucomip
ret
and
push
mov
jg
ins
cli
mov
jecxz
enter
call
(bad)
stos
clc
cmp
mov
(bad)
or
test
push
scas
sub
xchg
jl
jo
fisttp
and
cs
retf
adc
xor
xchg
sub
fld
jmp
adc
dec
jb
cmp
out
mov
imul
add
loopne
dec
stos
aam
xchg
stos
icebp
sub
sbb
adc
sbb
adc
and
call
loop
mov
sub
adc
ins
cmp
mov
dec
adc
cs
fpatan
hlt
sbb
push
inc
push
ds
mov
inc
and
xor
arpl
enter
jb
lods
out
pmulhuw
mov
dec
mov
mov
push
xor
dec
push
jl
adc
test
test
aad
mov
dec
inc
xchg
ins
push
inc
hlt
ins
jp
mov
cmc
add
ret
or
jmp
or
out
std
rcl
sbb
and
inc
mov
xlat
fwait
xchg
mov
retf
push
inc
aas
inc
pop
cmp
dec
ja
rcr
loopne
jmp
or
add
cld
js
scas
inc
jno
mov
cmp
ins
cdq
sub
sbb
aam
and
and
mov
call
push
push
cmp
push
xchg
or
cmp
inc
loopne
test
mov
icebp
call
push
cmc
inc
mov
cld
frstor
jns
enter
mov
sub
test
mov
cmps
and
loop
popa
loopne
sbb
pushf
and
in
aad
in
mov
mov
loop
retf
lea
inc
dec
int
outs
movs
mov
aas
cmps
mov
cld
pushf
jg
xor
push
jo
imul
sub
out
sbb
mov
mov
add
frstor
mov
or
enter
mov
xor
mov
inc
sti
mov
jbe
sub
sub
and
fistp
mov
clc
mov
or
imul
xchg
mov
mov
push
sahf
xchg
pop
mov
dec
cmp
test
and
(bad)
dec
rcr
jmp
pop
addr16
scas
sbb
ss
mov
xor
loop
mov
mov
adc
or
cmps
outs
jno
ja
xchg
in
into
inc
xchg
pop
mov
(bad)
jo
jmp
hlt
push
test
imul
inc
jo
lods
mov
fdivr
imul
call
mov
sahf
lock
sar
stos
and
retf
aas
leave
call
jecxz
ficom
mov
push
sti
and
in
cs
mov
(bad)
sub
xchg
add
mov
adc
lods
test
sub
rol
test
xchg
xor
(bad)
jmp
lock
lock
xchg
xor
jb
pop
out
sub
and
and
push
jbe
cmp
xchg
repnz
xor
popa
aaa
paddq
sub
cli
sbb
out
mov
mov
mov
rcr
popf
dec
into
xor
pop
adc
les
call
out
xchg
scas
hlt
pushf
outs
sub
fist
cmp
inc
pop
lods
gs
sbb
repz
dec
push
stos
ss
sub
inc
mov
add
add
(bad)
fbstp
sti
repnz
cmps
cmp
enter
mov
lods
and
scas
mov
rcr
push
sbb
js
cdq
stos
mov
(bad)
fidivr
xchg
dec
adc
add
in
mov
push
aad
popf
movs
aas
push
add
xor
int3
pop
xlat
and
add
mov
ror
stos
sbb
xchg
adc
imul
scas
inc
or
imul
lods
outs
repz
test
(bad)
jmp
and
pop
add
mov
call
stos
mov
cmp
daa
jecxz
(bad)
repz
push
pop
dec
adc
sbb
add
ss
(bad)
xor
cmp
out
outs
pop
addr16
lods
push
repnz
push
loopne
jo
mov
(bad)
add
jnp
and
cwd
xlat
add
jge
sahf
xor
mov
mov
push
sub
imul
in
and
fsub
pop
frstor
xchg
xor
enter
je
dec
ds
sub
pop
xchg
outs
mov
js
dec
xor
mov
sub
xlat
cmps
inc
dec
add
dec
dec
pop
loop
lods
mov
and
add
das
push
jb
mov
sub
movs
sub
jle
push
xor
lock
or
pop
sti
es
(bad)
or
and
pop
in
cmp
and
jo
sbb
push
sub
mov
mov
js
mov
movs
sub
loop
mov
sub
fst
and
je
push
movaps
iret
cmp
jle
mov
mov
push
jle
inc
inc
fiadd
and
lods
fnstsw
cmps
adc
gs
mov
sahf
call
mov
iret
adc
mov
dec
dec
push
and
add
std
sbb
dec
cs
and
xchg
int3
dec
aam
shr
pop
sbb
jmp
or
pop
ret
dec
in
dec
pop
mov
push
addr16
(bad)
cmp
push
jnp
mov
sbb
add
cs
fnsave
inc
sub
xchg
(bad)
fimul
scas
pop
or
call
mov
dec
scas
add
popa
icebp
aam
clc
mov
ins
es
inc
aad
mov
ss
lock
xchg
mov
clc
pop
mov
jbe
ficomp
inc
loopne
jmp
sbb
xchg
aaa
movs
gs
shr
push
retf
or
push
movs
and
jmp
xrelease
je
cmp
inc
ffree
inc
test
xor
fmul
mov
data16
pushf
or
push
mov
cmps
adc
dec
movs
pop
mov
test
(bad)
hlt
and
mov
js
add
mov
repnz
pop
xchg
(bad)
stc
pop
xor
shl
mov
ret
cmp
xchg
mov
pop
mov
mov
dec
lock
test
das
cmc
sub
js
dec
inc
stos
cmps
movs
add
dec
inc
out
out
inc
mov
stc
sbb
jle
(bad)
inc
mov
mov
ror
ret
pop
sbb
or
mov
test
inc
lods
aas
inc
xchg
das
or
lock
adc
repnz
rol
fcom
leave
jb
jae
adc
jne
mov
stos
jmp
out
ja
sbb
mov
inc
or
ds
jbe
pop
push
ret
and
push
dec
out
adc
cld
call
sti
stos
je
loop
mov
xchg
push
xchg
dec
mov
rep
adc
inc
pop
dec
xor
dec
rcl
pop
iret
sub
cmp
test
inc
add
jb
add
pop
dec
or
cdq
jnp
add
rep
pop
add
jae
inc
inc
(bad)
scas
xchg
ss
(bad)
xchg
repnz
out
retf
out
arpl
xchg
fs
pop
nop
push
ds
dec
cs
jmp
mov
in
dec
jp
jg
pop
jo
repz
jnp
retf
ret
ffreep
sbb
dec
pop
hlt
vmread
fadd
mov
cmps
movs
cli
and
loope
cli
mov
adc
mov
mov
jmp
sahf
xchg
mov
or
mov
imul
ret
out
rol
cmc
jb
idiv
inc
ror
inc
(bad)
out
stos
inc
or
jecxz
adc
push
sub
js
sub
push
fnstenv
outs
iret
inc
push
and
fidiv
sahf
cld
imul
and
add
outs
mov
inc
or
xchg
xchg
outs
mov
pop
push
je
mov
cmp
jbe
ss
jmp
es
xchg
lods
pop
outs
mov
pop
shl
fdiv
pop
cmc
inc
in
cmp
aas
pop
fistp
cld
icebp
mov
mov
outs
sub
xor
xchg
shr
lods
and
pop
mov
xchg
cmp
je
aad
push
test
lods
cld
mov
stc
sbb
mov
inc
daa
rol
xchg
or
in
push
and
mov
aaa
ja
mov
jmp
pop
lahf
pushf
xor
mov
mov
clc
fidiv
cmp
popa
fstp
rol
jbe
pop
scas
inc
and
aaa
push
cld
sbb
xchg
mov
jl
imul
jnp
xchg
ss
daa
jecxz
sbb
xchg
cmp
dec
mov
pop
jae
repnz
jecxz
pop
ucomiss
push
xchg
adc
or
or
cmp
push
out
clc
push
mov
loop
in
mov
bound
sub
out
cmp
cmps
aam
retf
xchg
cli
fdiv
add
mov
test
ss
jmp
add
jne
retf
inc
retf
cs
push
popf
(bad)
(bad)
jns
arpl
cs
xor
xor
sbb
jecxz
sbb
in
pop
sbb
inc
sub
iret
popf
dec
pop
xchg
cmp
leave
inc
fimul
in
mov
aam
or
test
std
fadd
jmp
xchg
test
imul
in
in
ficom
and
pop
loope
sbb
fs
outs
push
xor
push
or
adc
inc
popa
das
jno
dec
out
arpl
mul
and
lods
add
add
mov
clc
outs
ss
nop
dec
lds
out
push
sbb
test
lds
fidiv
and
movs
imul
fnstsw
repz
popa
cmp
jle
test
(bad)
ficom
ret
sbb
pop
bound
inc
and
ficom
mov
mov
(bad)
fcomp
cmc
jl
sahf
mov
add
and
loop
xor
xchg
mov
add
test
retf
mov
cmps
in
jg
in
xor
sahf
iret
shl
dec
xor
sub
and
pop
xchg
xchg
jp
mov
jne
mov
and
sbb
jnp
adc
xor
xchg
stc
shl
push
in
pop
or
(bad)
sub
push
leave
and
outs
xchg
pop
jbe
mov
jl
ss
sbb
movs
test
and
fldcw
xchg
outs
push
or
and
jl
out
push
jne
test
pop
js
sbb
(bad)
dec
mov
adc
fsubr
mov
outs
pop
iret
sbb
imul
mov
mov
outs
repnz
push
in
mov
inc
fdivr
fidiv
ss
ror
or
mov
repz
dec
fucomp
scas
shl
nop
(bad)
fstp
clc
call
fbstp
dec
pop
dec
mov
add
movs
mov
rcl
in
fcomp
inc
stc
inc
push
push
pusha
movs
fcom
dec
cmps
sbb
pushf
add
rcl
push
add
shl
and
stc
adc
sbb
pop
lods
fimul
xchg
xor
test
gs
add
stc
dec
push
xchg
cli
ret
int
call
cwde
cwde
retf
add
fwait
sbb
lock
(bad)
pop
dec
add
jbe
jmp
mov
fldenv
or
mov
mov
ins
ret
mov
xchg
mov
jmp
arpl
fisubr
stos
out
xor
int3
ds
arpl
es
adc
mov
cld
daa
dec
scas
popf
test
xchg
lahf
pushf
xlat
sbb
push
pop
pop
repz
out
hlt
xchg
cdq
imul
jne
out
xor
mov
loop
and
cmp
das
les
jne
sbb
pop
stos
movs
pop
mov
jg
add
or
test
scas
adc
ins
fnstsw
stos
cdq
and
outs
fistp
push
mov
adc
pop
pop
aam
push
adc
pop
push
shr
(bad)
push
out
jmp
arpl
sbb
add
fadd
push
pop
imul
inc
mov
es
lds
pop
loope
xchg
fstp
xor
je
dec
retf
push
pop
mov
ret
mov
arpl
jmp
jge
mov
and
xor
stc
add
inc
dec
sbb
adc
lea
inc
pop
aam
xchg
test
mov
add
test
arpl
fisttp
mov
sbb
bound
(bad)
push
call
in
outs
mov
test
mov
test
xchg
test
jge
push
mov
xchg
or
cmp
das
jo
test
(bad)
push
enter
sbb
je
mov
popa
in
les
dec
push
or
sbb
or
mov
jmp
xchg
repnz
cmc
(bad)
in
mov
xchg
inc
sbb
mov
dec
and
js
adc
cmps
das
inc
and
out
aas
mov
jnp
xor
in
jge
ror
mov
fwait
popf
aam
push
nop
es
in
nop
cli
adc
scas
push
add
lea
pop
pop
sbb
shr
pop
dec
xchg
outs
dec
mov
pusha
pushf
pop
(bad)
and
test
out
dec
add
sbb
loop
scas
pop
int
out
mov
loope
lock
sub
jbe
fsub
shl
lods
lods
cmps
jno
adc
cmps
push
xchg
dec
shl
ret
pop
dec
adc
popf
jbe
ret
xlat
(bad)
mov
(bad)
lds
into
xor
int
push
jmp
imul
loopne
aam
xor
push
pop
lods
imul
mov
fs
test
dec
fwait
mov
inc
dec
(bad)
retf
test
sub
dec
(bad)
mov
fisttp
in
xchg
xchg
sub
xchg
outs
pop
popa
aaa
xor
cld
popf
add
jle
test
gs
jnp
push
xor
sbb
popa
pop
push
mov
fldcw
mov
js
cs
mov
lahf
sub
gs
std
add
jno
sbb
sub
pop
loope
and
rcr
test
inc
adc
or
and
or
add
push
call
xlat
xchg
jle
mov
jmp
sub
pop
pop
jg
pop
mov
mov
xchg
inc
dec
xchg
ins
or
cwde
or
clc
fcom
rol
movs
ins
pushf
movs
retf
sahf
push
xor
mov
ins
fnstenv
sub
and
dec
(bad)
call
aas
dec
cmp
sub
xor
cmp
shl
loop
and
(bad)
cmp
ins
arpl
cmc
in
sbb
arpl
in
push
pop
sbb
cs
cli
mov
adc
dec
loop
pop
not
jb
push
ss
pop
fs
bound
sub
pop
adc
loope
cs
cmp
xor
add
xor
aaa
mov
pop
xchg
enter
mov
ds
xchg
dec
inc
dec
sub
mov
js
xlat
lahf
push
mov
pop
fisttp
out
loop
inc
jecxz
or
scas
inc
test
adc
push
or
sub
mov
cmps
add
sub
test
cld
pop
cmp
push
cmps
test
cmp
ins
icebp
adc
mov
ins
xor
mov
mov
adc
sbb
add
xchg
sti
lahf
inc
and
adc
mov
dec
pushf
inc
push
inc
ins
push
out
adc
iret
xor
sub
(bad)
jl
fstp
inc
psllq
aas
mov
les
fcom
test
in
pop
icebp
ins
jno
pushf
adc
or
(bad)
push
cmp
sti
out
pop
mov
jl
mov
inc
rcr
xchg
push
ins
mul
sbb
and
mov
mov
xor
inc
cwde
scas
cdq
in
aad
sub
add
lea
pop
mov
or
fisub
(bad)
push
jmp
fwait
outs
sub
call
push
mov
je
movs
es
outs
rcr
mov
dec
pop
addr16
sub
lds
xlat
ins
add
stos
lods
sbb
shr
or
push
xor
retf
mov
icebp
cmp
out
sub
sub
or
mov
add
add
shl
out
(bad)
push
cmp
(bad)
cwde
push
and
outs
movs
jae
jns
and
cli
jbe
sub
xchg
popf
into
test
mov
sar
xchg
popf
or
dec
dec
push
popa
xlat
call
(bad)
and
rcr
lods
xor
std
cwde
cs
jnp
jmp
je
lds
fs
sti
mov
sub
pop
hlt
jns
dec
jge
lahf
mov
cmp
ret
aam
out
pop
fsubr
stos
xor
fsubr
fcmovnbe
jge
nop
jle
or
or
mov
add
xor
cwde
push
jns
in
inc
iret
push
xchg
mov
out
sub
cs
xchg
gs
in
mov
sub
inc
adc
add
(bad)
jb
jp
jbe
mov
lods
xchg
mov
or
movs
xlat
jno
fnstsw
mov
jae
dec
enter
cmps
jno
xchg
imul
enter
test
mov
dec
hlt
(bad)
(bad)
lahf
add
aam
lds
shl
leave
(bad)
inc
and
ret
adc
pop
jo
loop
sub
and
jns
pop
adc
mov
lds
gs
sahf
adc
dec
cmc
out
les
xor
xchg
mov
les
adc
das
add
pop
inc
jmp
mov
nop
adc
scas
(bad)
mov
in
xchg
pop
or
pop
cld
fdivr
cmp
and
ret
icebp
jle
push
mov
(bad)
ficomp
pop
jge
adc
movsx
dec
inc
loop
in
ja
push
jp
or
mov
adc
(bad)
lea
push
out
cs
sub
in
scas
popa
iret
inc
inc
xor
mov
out
loop
xor
dec
ins
and
test
ja
addr16
sbb
pop
mov
inc
xor
cmp
jbe
aas
stos
mov
cdq
cmp
jno
inc
invd
(bad)
mov
cmc
inc
frstor
push
pop
mov
fidivr
pop
sbb
push
adc
mov
adc
pop
ror
sub
push
jmp
mov
add
icebp
lahf
fst
lahf
mov
mov
or
add
and
mov
ret
test
rcl
leave
inc
sub
inc
jne
test
pop
inc
xchg
fimul
dec
lea
mov
(bad)
cwde
test
push
cs
inc
xchg
icebp
(bad)
sbb
jbe
daa
inc
add
jmp
retf
xchg
test
or
mov
add
dec
push
dec
xlat
test
xchg
push
inc
lock
test
xor
inc
gs
pop
sub
mov
cli
dec
sbb
xchg
into
xchg
out
in
or
cmp
push
(bad)
sbb
pop
pop
repz
cwde
cwde
es
add
sbb
add
dec
ins
push
stc
ror
test
cmp
stos
or
lods
int
xor
pop
push
inc
adc
fstp
clc
push
xlat
pusha
scas
jp
loopne
push
stos
stos
and
add
adc
mov
xchg
out
inc
push
sbb
loop
push
shl
pop
sahf
popf
test
sbb
rcl
jae
(bad)
fcmovnb
adc
out
sti
hlt
mov
fdivp
popa
sub
mov
ss
scas
mov
xchg
or
adc
xor
or
mov
pop
dec
fld
jb
outs
cwde
fwait
leave
rcl
test
mov
mov
mov
aas
sub
mov
cld
dec
repnz
icebp
ret
mov
or
jbe
test
jne
inc
repnz
or
nop
repz
inc
dec
fdiv
dec
pop
outs
cmps
aas
and
mov
mov
push
mov
icebp
jo
cwde
outs
cmp
mov
dec
sar
mov
scas
xor
pop
mov
fcom
test
outs
xchg
sub
cli
and
push
cli
mov
xchg
ret
push
movs
test
shl
hlt
pop
or
push
out
loopne
out
mov
mov
xor
nop
pushf
les
add
xchg
and
ins
mov
mov
out
pop
dec
xchg
dec
jmp
add
mov
lods
add
pop
imul
sahf
test
push
nop
lahf
test
sbb
and
or
sub
push
jp
fdivr
retf
push
sbb
add
jno
mov
xor
mov
jne
cmp
and
sub
mov
dec
imul
call
pop
int
sbb
adc
je
cmp
push
mov
jae
(bad)
inc
in
push
pop
sbb
enter
sub
jge
inc
rcr
inc
aaa
dec
repnz
popa
and
push
add
mov
int
in
xlat
push
iret
adc
xor
cmp
sub
int3
retf
lods
rcl
aam
ja
or
or
enter
sub
inc
add
xor
int
(bad)
cmp
jb
xor
jno
es
ins
mov
aas
data16
(bad)
retf
and
outs
sar
xor
inc
xchg
push
and
pop
xor
or
push
aad
pop
sti
sbb
xchg
cld
scas
dec
mov
test
and
or
pop
pop
ret
dec
retf
mov
add
and
cld
inc
dec
bound
test
call
inc
dec
lds
sbb
inc
pop
scas
call
cmps
daa
inc
mov
inc
push
pushf
mov
or
xor
outs
pop
xchg
hlt
cld
sub
xor
fisubr
es
js
mov
arpl
stc
fs
inc
das
leave
mov
adc
xchg
xchg
ret
dec
call
or
inc
aad
and
and
sub
add
cmp
cwde
inc
cmp
mov
jnp
xchg
push
add
push
or
mov
mov
(bad)
or
loope
jno
dec
mov
adc
scas
sbb
xlat
sar
fcmovu
or
(bad)
ret
dec
push
and
inc
add
xor
xor
cmp
enter
scas
mov
aas
aas
cmp
(bad)
hlt
mov
shl
into
add
lea
int
and
inc
mov
cdq
or
pop
ror
adc
dec
mov
es
icebp
aam
cdq
iret
pop
jne
add
dec
and
mov
pop
cwde
pop
mov
ret
stos
adc
mov
in
mov
adc
adc
hlt
mov
sub
popa
sub
iret
xchg
mov
std
add
push
out
jo
push
inc
or
ficomp
inc
sub
xchg
inc
ja
shr
pause
xchg
cmps
gs
jle
xchg
sub
nop
mov
std
push
sub
mov
fsubr
pop
std
daa
outs
sub
enter
sub
lods
cdq
test
and
inc
aad
(bad)
lahf
mov
sub
push
adc
mov
add
lods
add
ss
add
test
arpl
loopne
add
repnz
mov
ret
test
mov
push
mov
(bad)
xchg
sar
and
shr
sti
adc
movs
push
popa
or
mov
xor
mov
fadd
and
test
nop
jp
push
jnp
mov
add
and
mov
xor
push
pop
jo
in
pop
stos
lds
inc
jne
mov
xchg
mov
imul
and
add
jnp
call
out
pop
(bad)
(bad)
pop
icebp
jnp
jbe
or
fldenv
cmp
xchg
push
in
cmp
repnz
stc
pushf
scas
icebp
aas
xchg
adc
pop
push
sbb
jno
xchg
xor
xor
(bad)
xor
pop
push
test
aam
xlat
je
pusha
(bad)
aaa
out
push
mov
shr
imul
adc
xchg
push
in
retf
lods
push
test
push
popf
fiadd
mov
repz
aas
xchg
sub
lds
lods
jnp
stos
pusha
or
dec
mov
mov
mov
push
out
mov
jmp
sub
dec
std
xor
(bad)
or
lock
xor
adc
out
not
inc
(bad)
jbe
cmc
inc
fsubrp
into
imul
jne
sti
cmp
dec
mov
jne
out
fstp
icebp
xor
mov
fcomp
sub
mov
dec
ret
sbb
fwait
cmp
stc
in
jo
pop
jne
clc
stos
mov
popa
lods
mov
scas
mov
dec
fs
mov
lods
jae
ret
std
jmp
mov
pop
gs
ja
mov
icebp
pushf
mov
fistp
xor
push
inc
sbb
and
je
repz
push
mov
mov
ret
sbb
mov
outs
in
xchg
jmp
cmp
fist
push
mov
pop
fnstcw
(bad)
sbb
jbe
mov
popa
inc
push
rcr
sbb
fcomp
push
xlat
retf
or
imul
lods
stos
or
fidivr
mov
jl
mov
mov
cmp
pop
clc
jp
jne
ins
cmp
leave
data16
mov
cmp
xor
jo
push
inc
push
jae
js
fnstenv
or
loop
mov
imul
and
aad
or
push
call
adc
cmp
aad
retf
and
push
sub
cld
xor
je
pop
aas
loop
int
sbb
xchg
in
jns
les
jnp
and
push
int
push
fistp
cmps
test
sub
and
stos
lods
jecxz
imul
fst
ja
adc
(bad)
enter
das
jmp
fidiv
in
jb
popf
add
sahf
call
loope
inc
cmp
arpl
pop
sub
inc
pop
(bad)
or
cwde
popf
rol
cdq
pop
add
in
xchg
xchg
sbb
pop
adc
inc
or
aaa
and
call
cmps
(bad)
jnp
sub
bound
in
jge
dec
adc
xchg
mov
pop
pop
push
push
js
dec
and
cmp
xchg
aas
ret
push
mov
gs
shr
scas
mov
pop
cmc
adc
and
neg
pop
adc
xchg
and
dec
pop
inc
call
das
mov
scas
jge
sbb
pop
mov
mov
lahf
or
test
inc
jge
cmp
xlat
add
mov
sub
mov
xor
and
dec
rol
repz
(bad)
sub
std
pop
or
sub
sbb
mov
jecxz
stc
stos
sbb
xor
pop
jg
dec
add
mov
cmp
dec
mov
mov
inc
ss
fbld
and
popa
mov
lahf
dec
jmp
ret
mov
mov
sub
sub
in
cmc
xchg
mul
mov
in
test
xchg
sbb
add
bound
mov
stos
pop
ja
movs
in
lahf
xor
(bad)
test
mov
rep
mov
(bad)
cmc
stos
pop
fiadd
jae
scas
movs
(bad)
cdq
aaa
jbe
inc
and
arpl
or
cmp
mov
push
in
pop
inc
inc
sbb
add
push
cmps
sbb
mov
jg
fs
sti
jmp
stc
xlat
add
popa
xchg
dec
pop
out
sub
fs
mov
push
push
pop
sbb
mov
xor
mov
adc
xor
sub
jbe
cmps
jp
mov
mov
or
push
dec
sub
or
inc
sahf
shl
daa
mov
xchg
sub
inc
das
jae
cmp
pop
xchg
sbb
mov
mov
or
sbb
shr
lods
add
or
stc
xchg
mov
shl
mov
mov
mov
xchg
xchg
(bad)
fimul
jo
in
aam
loope
mov
push
push
(bad)
push
into
mov
xchg
outs
cwde
mov
ja
loope
pop
mov
ja
test
sub
pop
inc
mov
cld
ins
and
push
sub
push
pop
rol
cmp
test
scas
sbb
test
fistp
xor
mov
popa
enter
jb
bound
pop
movs
test
push
mov
adc
inc
fs
push
mov
or
lods
xor
jle
add
fs
dec
out
mov
jmp
(bad)
cmp
test
sub
push
mov
lods
add
cdq
test
retf
jl
stos
(bad)
gs
jmp
rcl
sbb
arpl
imul
sbb
nop
aam
inc
inc
out
and
ret
mov
clc
xchg
push
mov
mov
push
xor
pop
pop
jl
pop
aas
popf
fimul
inc
xchg
inc
adc
mov
push
jmp
ret
call
and
push
mov
imul
bound
fisttp
push
ins
pop
push
cmp
mov
mov
or
cmps
outs
ficom
jp
jp
inc
mov
test
or
push
fsubr
ret
pop
call
nop
xchg
xor
(bad)
ins
mov
mov
xlat
cmp
and
iret
test
mov
push
mov
cmp
mov
mov
out
mov
inc
inc
pop
xlat
cmp
(bad)
sbb
dec
mov
xor
cmp
data16
pop
dec
xor
jl
push
jns
add
(bad)
fmul
je
xchg
rcr
popf
adc
test
push
imul
cmp
mov
ins
iret
mov
jmp
in
lods
adc
xor
xor
mov
pop
push
push
jo
movs
cmp
aam
mov
xor
leave
xor
jecxz
xchg
outs
cmp
sub
scas
in
les
sbb
mov
pop
inc
push
je
inc
lods
aas
inc
inc
cmp
cmp
xchg
ds
push
inc
mov
xlat
xor
xor
jmp
pop
in
push
add
loope
cmp
repnz
push
jnp
push
retf
sbb
add
add
push
out
popf
dec
push
sar
pop
or
and
addr16
push
fisubr
adc
sbb
xchg
test
mov
(bad)
call
add
imul
mov
fistp
das
retf
sbb
out
ja
fimul
dec
jmp
push
push
fsubr
xchg
daa
inc
cmp
mov
sub
shr
mov
mov
push
dec
popf
inc
test
cmc
cmp
push
and
inc
popf
fdiv
sbb
jns
popf
arpl
sbb
in
mov
loope
adc
shl
sbb
cmp
push
push
in
mov
sub
mov
retf
ficom
outs
sub
sbb
out
ss
js
(bad)
xor
adc
and
push
push
out
ins
mov
jo
mov
fwait
daa
(bad)
retf
inc
icebp
outs
ret
scas
push
dec
clc
in
fwait
inc
pop
mov
pop
(bad)
(bad)
aad
enter
fs
push
pop
mov
ja
xchg
loop
mov
push
push
xchg
frstor
into
movs
xchg
adc
add
push
mov
lahf
sbb
std
outs
(bad)
xchg
add
mov
add
mov
sub
(bad)
mov
pop
push
and
mov
xor
push
mov
xchg
or
scas
pop
jno
(bad)
fbld
aas
mov
les
mov
mov
jecxz
cs
icebp
bound
xchg
dec
mov
out
ins
clc
xor
dec
push
jmp
xchg
aaa
pop
xchg
in
test
fstp
pop
xor
rol
mov
imul
lods
jae
mov
retf
mov
cmp
adc
shr
dec
adc
push
sub
and
ret
dec
call
aad
dec
push
neg
dec
or
fsub
pop
iret
push
mov
push
jmp
jmp
ins
fdiv
xlat
xchg
leave
imul
push
lea
mov
mov
mov
push
(bad)
(bad)
sbb
adc
cmp
cmc
pop
fidiv
jg
icebp
push
push
test
stos
(bad)
lods
mov
ret
inc
out
xchg
or
loopne
(bad)
mov
in
rcl
mov
loopne
mov
mov
mov
ror
and
or
imul
mov
mov
xor
jg
(bad)
ror
aad
dec
pop
jae
in
gs
aaa
adc
or
push
pop
push
ror
popa
xor
std
pop
imul
inc
imul
adc
mov
aaa
adc
dec
stc
(bad)
jne
sbb
mov
(bad)
push
push
push
mov
jnp
cli
push
outs
xor
jle
sbb
stc
or
imul
jbe
fcompp
adc
xchg
je
(bad)
jns
setns
jl
les
test
xlat
mov
cmp
retf
jmp
or
test
ret
outs
rol
mov
mov
push
ret
loopne
or
push
mov
xor
aas
push
ins
xchg
pop
and
push
mov
or
push
jb
jne
fistp
hlt
sub
js
call
sbb
jl
in
mov
scas
mov
pop
jne
mov
cmps
js
sbb
sub
not
outs
pop
add
push
icebp
mov
mov
and
stos
daa
int3
sbb
or
mov
icebp
call
mov
fcom
mov
dec
and
push
mov
jnp
or
xor
lahf
lods
out
mov
push
inc
jmp
(bad)
mov
aad
mov
sti
int3
mov
mov
jmp
sbb
mov
fxch
ret
push
dec
inc
or
fdiv
cmps
ret
pop
cdq
cs
aaa
push
push
mov
sbb
dec
nop
pop
dec
mov
xlat
mov
scas
pop
adc
je
sar
sub
ins
or
rcr
dec
scas
inc
scas
sbb
inc
test
test
in
out
popa
adc
ds
mov
push
push
dec
rcr
and
mov
stos
mov
stos
idiv
xor
lea
jge
mov
cld
(bad)
xchg
sar
xchg
or
adc
sub
xchg
(bad)
push
adc
pushf
push
xchg
imul
cli
loop
test
addr16
out
push
cmp
xlat
pop
mov
test
fist
push
push
lock
mov
mov
adc
sbb
stc
xor
pop
push
xchg
into
ins
sbb
out
sbb
scas
push
enter
icebp
fistp
rol
pop
pop
or
int3
cwde
cmp
sub
mov
loope
mov
in
cmp
adc
outs
add
cmp
inc
(bad)
dec
pusha
mov
mov
jno
test
outs
dec
xchg
out
mov
push
adc
ss
dec
add
pop
fistp
mov
gs
push
dec
mov
fcmovne
xchg
movs
mov
push
xchg
std
mov
or
xor
aad
inc
inc
hlt
data16
dec
push
add
movs
pop
sbb
std
and
mov
ror
push
das
rol
pop
mov
mov
mov
outs
not
xor
jns
les
and
jmp
(bad)
stos
aad
and
ret
(bad)
cmp
push
ficom
fst
in
xor
or
daa
pushf
jno
xchg
pop
sbb
ss
cmp
sub
xor
and
jmp
call
fadd
fidivr
mov
add
arpl
adc
nop
push
popf
sbb
ror
in
cmp
inc
call
jno
xchg
inc
inc
les
hlt
ss
movs
push
mov
(bad)
jp
lock
jb
xchg
sbb
or
pop
in
out
mov
stos
xchg
shl
dec
leave
popf
fwait
ret
jne
hlt
icebp
ins
sbb
fsubr
or
dec
pop
jmp
sub
sbb
jno
mov
sti
push
xor
aaa
psubsw
rol
cmc
add
scas
hlt
adc
xor
cmp
mov
cmp
ins
rol
and
or
test
call
sbb
sahf
loope
gs
fisub
and
push
repz
(bad)
cs
sub
inc
add
out
mov
sub
cmp
mov
cmp
sbb
or
sub
jnp
idiv
jle
outs
je
inc
mov
in
imul
jne
repz
mov
das
mov
mov
and
sbb
das
ja
jae
loop
clc
call
(bad)
stc
in
adc
mov
dec
sbb
cmp
push
xor
push
xchg
call
mov
mov
stc
cmp
pusha
jo
shl
adc
call
into
or
add
rol
cli
bound
sbb
(bad)
cmp
inc
neg
imul
(bad)
clc
jle
sub
js
mov
imul
cmc
sub
and
test
test
xchg
mov
pop
sub
mov
jge
pop
shl
mov
and
icebp
out
inc
xchg
cwde
fcom
mov
sub
add
ror
das
add
or
test
jno
cmp
ret
mov
icebp
push
push
shl
or
int
adc
inc
fimul
sbb
jmp
mov
xchg
inc
cmp
sub
mov
jnp
mov
out
cmp
xlat
mov
xchg
mov
nop
inc
data16
xchg
and
xchg
dec
sahf
adc
repz
mov
retf
scas
push
or
xlat
xlat
mov
push
pop
push
jns
cli
fwait
jne
mov
fwait
aad
or
test
(bad)
sub
xor
inc
mov
cmp
dec
mov
cmp
xchg
mov
repz
cmps
pop
out
cmp
inc
mov
and
loopne
sti
les
inc
inc
daa
nop
ins
inc
mov
fdivr
cmp
mov
sub
mov
repnz
out
icebp
inc
hlt
call
lea
jnp
ja
mov
bound
movs
jnp
repnz
es
adc
pusha
pop
pusha
mov
fstp
out
outs
cli
fcmovnb
ins
stc
inc
mov
jmp
and
cwde
add
test
pop
(bad)
test
shl
paddb
add
fisttp
hlt
jbe
push
mov
fmul
dec
and
mov
xor
xchg
fidivr
fcom
pop
mov
or
add
xor
call
in
in
call
mov
cmps
adc
cmp
or
xor
in
fmul
loop
dec
hlt
in
bound
jne
repz
addr16
jge
in
nop
adc
xor
push
or
xor
mov
pop
test
push
dec
cmp
in
cwde
pop
inc
mov
sub
dec
jnp
dec
sub
or
dec
test
stos
mov
add
jl
cmp
inc
(bad)
ja
jl
adc
xor
stc
retf
std
cmp
mov
mov
xor
dec
std
xchg
(bad)
iret
xchg
ret
cmps
pop
mov
cmp
xor
adc
cs
lds
xchg
stc
push
cmp
push
out
push
fstp
mov
imul
push
dec
inc
cmps
add
add
mov
out
jo
mov
push
hlt
cmp
cld
mov
fiadd
cmp
jns
pop
cmp
or
cwde
pop
sbb
push
icebp
shl
inc
pop
lock
pusha
jno
aad
arpl
push
movs
and
arpl
add
dec
dec
aad
push
ret
dec
push
int3
or
xor
add
imul
or
xchg
jmp
inc
push
lods
xor
dec
ror
xor
stc
jge
mov
inc
rol
push
pushf
shl
and
push
loop
pop
inc
adc
out
cld
pop
popf
push
jg
imul
inc
xor
xchg
bound
mov
inc
mov
clc
jge
and
adc
outs
inc
pop
push
cs
nop
(bad)
sub
and
or
outs
mov
xchg
adc
lods
lahf
push
ins
into
aaa
dec
stos
(bad)
test
(bad)
cmps
push
mov
(bad)
pop
in
or
and
and
(bad)
mov
xchg
ret
mov
jns
pop
sti
push
and
fisub
inc
pop
jl
sbb
jb
sub
shr
ja
int3
sub
inc
icebp
out
add
or
mov
cmp
imul
mov
mov
fistp
clc
call
push
ins
je
dec
fwait
pop
retf
mov
bound
mov
mov
fdiv
mov
cwde
sbb
sbb
out
out
sub
sbb
inc
push
aad
fsub
jno
retf
push
add
enter
aam
mov
sub
pushf
pusha
(bad)
cmp
or
or
xor
rcr
pop
hlt
push
pushf
mov
add
and
cmps
stos
out
sbb
add
fidivr
into
cmp
sbb
push
add
jmp
and
lock
cmp
jns
mov
xor
sub
mov
repz
push
xlat
dec
js
ret
adc
and
or
sub
sbb
adc
adc
cmp
adc
mov
les
adc
push
lahf
jns
jl
inc
mov
and
shl
lea
ror
loopne
mov
test
dec
push
push
enter
loopne
enter
leave
enter
test
mov
add
jp
cmp
cdq
and
xor
xlat
rcl
bound
mov
sbb
sahf
cmps
lods
sbb
movs
jg
ret
xor
push
test
and
pop
nop
(bad)
jp
mov
adc
enter
data16
iret
ja
inc
in
jmp
icebp
call
xchg
cs
or
or
adc
jnp
mov
inc
mov
arpl
jge
push
icebp
pushf
mov
add
pop
sub
mov
jmp
jnp
push
leave
adc
or
inc
sub
or
fdivr
mov
mov
pop
jge
fisubr
inc
push
sbb
cmp
test
pop
fs
loop
sub
xchg
push
outs
(bad)
jmp
jo
clc
stc
out
mov
(bad)
sub
dec
scas
shr
fcomp
das
out
and
int3
xlat
hlt
ror
jl
repnz
fsubr
pop
icebp
lahf
gs
xchg
cs
arpl
jmp
aas
mov
lea
add
repnz
pop
mov
inc
scas
lea
loopne
leave
(bad)
inc
push
xchg
sbb
(bad)
or
sbb
fist
push
cmp
nop
popa
idiv
mov
jle
or
in
pop
jno
pop
sub
inc
out
inc
mov
push
mov
cmp
cmc
movs
and
adc
hlt
or
loopne
add
xchg
mov
pop
jecxz
pop
adc
dec
jmp
jmp
pop
into
ds
rcr
shld
add
and
(bad)
rcl
fsincos
and
mov
pop
sbb
jb
(bad)
inc
adc
and
dec
dec
sub
dec
pop
sbb
fist
or
cld
enter
and
add
lock
lahf
lods
pushf
rcl
loop
mov
inc
xchg
jo
call
jo
gs
cmc
push
sbb
ds
mov
add
test
(bad)
xor
mov
dec
iret
sub
div
xor
xchg
vpcomud
test
lods
js
and
sub
shl
movs
dec
mov
pop
loope
xchg
aaa
or
mov
or
xor
dec
aam
jmp
add
retf
xchg
xlat
mov
fsub
pop
inc
push
mov
sbb
fs
sbb
lods
jle
jns
jb
push
sbb
outs
push
rol
std
mov
enter
daa
jl
xor
push
sub
jb
push
aas
leave
dec
mov
adc
into
test
ins
push
jmp
push
add
test
cmps
xchg
enter
(bad)
and
xor
jo
xor
sub
sahf
xchg
jae
xor
into
stc
pop
shl
daa
cmp
mov
xlat
xchg
jle
xchg
bound
in
sbb
adc
and
and
pop
test
sar
jo
jmp
int3
sub
fidiv
test
push
stc
(bad)
clc
outs
cmp
push
les
dec
imul
dec
jl
cmp
sbb
sub
imul
push
bound
mov
xor
mov
add
call
and
mov
in
cld
mul
popf
and
jl
sti
(bad)
(bad)
mov
in
loope
int3
add
push
or
mov
push
ja
jp
aas
or
ja
cli
in
outs
out
mov
jnp
push
sub
push
(bad)
sub
cmp
ss
mov
inc
sbb
call
ret
push
shl
aas
xlat
movs
jmp
cwde
pop
mov
test
inc
aam
in
fistp
mov
mov
mov
into
leave
mov
out
xchg
cdq
je
inc
dec
adc
aas
push
data16
retf
sbb
ja
test
mov
add
or
sbb
movs
fdivr
add
pop
retf
cwde
push
jmp
add
dec
out
add
pop
idiv
pop
arpl
push
pop
aas
jge
loope
push
in
mov
imul
fmul
mov
jbe
xor
ins
xchg
mov
(bad)
sub
call
jne
lea
into
push
sbb
push
das
add
inc
aas
add
push
adc
jmp
in
add
(bad)
shl
xchg
cmp
jo
add
sbb
inc
adc
out
mov
shl
fldenv
das
hlt
sbb
push
cli
lea
test
pop
or
add
sbb
(bad)
jb
mov
add
mov
outs
mov
in
and
adc
fucom
or
push
or
out
fst
data16
imul
lea
pop
jbe
sar
arpl
jecxz
or
inc
adc
xor
and
inc
pop
das
dec
retf
clc
fsubr
push
mov
icebp
je
adc
add
loopne
jge
push
xchg
movs
js
loopne
ins
inc
stos
mov
dec
and
jns
fisub
ds
xchg
in
cmc
nop
mov
mov
cmps
add
jbe
push
mov
inc
fs
push
or
or
mov
xor
push
ins
push
clc
xor
or
sbb
loope
sahf
mov
pop
inc
push
cli
aas
mov
out
pop
fcomp
loop
mov
xchg
jmp
popa
jmp
sbb
adc
adc
imul
jl
dec
inc
imul
pop
xchg
mov
lods
sar
mov
sti
ror
mov
or
mov
or
aas
sahf
sbb
inc
mov
push
or
test
sub
aam
idiv
popf
shl
add
jge
cmps
mov
mov
loope
adc
mov
fisubr
stos
jno
cmp
and
sbb
fnstsw
mov
xchg
adc
jae
outs
fadd
out
div
call
cmps
les
scas
repz
call
mov
or
data16
or
test
push
push
xor
cdq
pop
and
cdq
das
pop
fmul
xchg
pusha
movs
loopne
mov
mov
test
inc
adc
xlat
fs
ss
fstp
and
sbb
push
jmp
jo
das
stos
cld
adc
mov
movs
jg
stos
sub
jnp
sbb
outs
mov
adc
and
adc
xor
push
add
dec
dec
mov
or
popf
test
pop
imul
mov
dec
cwde
aaa
ror
idiv
bound
in
shl
std
out
sti
inc
repnz
shr
fisttp
add
push
and
cmps
jecxz
inc
cwde
sub
in
ds
test
sub
mov
jo
sbb
jnp
push
dec
aaa
add
xor
mov
xchg
push
dec
addr16
test
sub
xchg
mov
dec
dec
cmp
push
jne
sub
fsub
and
and
arpl
dec
daa
jnp
inc
pop
gs
cs
add
test
(bad)
sub
and
out
inc
mov
add
hlt
rcr
cmps
dec
or
mov
pushf
pop
and
gs
xor
fs
pop
mov
push
ret
cmps
lea
pop
xchg
repz
leave
xchg
mov
addr16
adc
mov
push
sbb
inc
dec
mov
adc
leave
mov
mov
(bad)
fsubr
mov
ror
mov
(bad)
xchg
lahf
sar
(bad)
aam
cmps
xor
aas
jmp
add
push
popf
pop
(bad)
ins
fidiv
push
outs
outs
sbb
mov
repz
mov
popa
jl
add
movs
cwde
outs
mov
icebp
(bad)
fild
dec
lds
mov
popf
cmp
clc
jg
addr16
mov
outs
xchg
adc
call
(bad)
shl
xor
imul
loop
mov
jnp
out
xor
mov
dec
lds
test
xchg
mov
push
inc
call
ficomp
mov
scas
outs
pop
xor
cmp
shr
adc
wrmsr
mov
dec
inc
xchg
not
sbb
call
ins
nop
daa
add
pop
mov
movs
push
mov
int3
sbb
push
xor
xchg
mov
lods
fdiv
mov
(bad)
mov
fwait
lock
and
jmp
mov
in
add
or
mov
and
mov
ss
out
lea
xchg
inc
imul
(bad)
icebp
add
mov
iret
mov
lea
stos
mov
sar
sub
xchg
arpl
hlt
mov
cli
pop
cdq
lds
lds
or
jecxz
or
daa
inc
mov
mov
in
jb
(bad)
not
out
in
(bad)
rol
mov
fwait
scas
arpl
call
fs
sub
outs
sbb
stos
push
stc
xchg
fdivr
call
ja
add
adc
aaa
inc
push
aam
fidivr
lock
mov
cli
std
xor
sbb
push
cs
cmp
dec
imul
sbb
cmp
xchg
sub
adc
data16
lock
jmp
retf
xlat
push
lahf
imul
inc
call
adc
push
mov
xor
jle
mov
das
jle
into
(bad)
push
mov
sbb
xchg
adc
sub
sahf
outs
xor
ret
scas
adc
mov
cmp
mov
cs
jp
xchg
retf
xchg
popa
in
jg
mov
jl
and
mov
sub
and
sub
dec
sub
adc
fimul
jecxz
ins
xor
and
in
and
imul
adc
data16
xchg
cmp
repz
fsub
cmps
test
fnstsw
(bad)
jg
mov
sub
int
pop
push
movs
and
pop
sahf
pushf
(bad)
lahf
or
pop
rol
sbb
call
push
dec
fisttp
test
cdq
jg
fiadd
mov
outs
cmps
fadd
jmp
and
inc
(bad)
lahf
pop
daa
lahf
pusha
shr
pop
aam
mov
and
pop
and
loopne
test
push
mov
sub
mov
stc
add
jno
stos
push
(bad)
mov
nop
xor
mov
push
add
dec
jmp
cmp
stos
movs
xchg
popf
test
and
pusha
sbb
xchg
inc
jo
out
into
cmp
retf
(bad)
test
pop
mov
add
repnz
and
mov
inc
xchg
lods
pop
pop
cmp
push
and
outs
out
pop
pop
inc
call
xchg
sbb
push
pop
push
mov
mov
push
gs
retf
xor
jnp
pop
xor
outs
jnp
lods
out
nop
in
daa
in
dec
jmp
jo
mov
mov
push
mov
shl
adc
loopne
sbb
cmc
sbb
adc
cmp
and
cli
not
enter
shl
aad
jns
sub
(bad)
and
lods
rol
mov
mov
fist
lods
ret
mov
inc
mov
xchg
movs
adc
(bad)
cmps
fcmovb
jns
xchg
lods
cmp
cdq
dec
push
mov
and
(bad)
fst
inc
dec
ss
lahf
or
aam
sbb
dec
add
or
add
loopne
dec
cmp
push
jecxz
fld
movs
aas
cmps
fmul
mov
xlat
adc
push
xchg
cli
leave
arpl
pop
cwde
popa
or
xor
mov
fwait
fs
push
mov
pop
movs
push
out
and
(bad)
arpl
lods
add
jge
sub
fdivr
push
or
icebp
dec
test
jbe
test
sub
pop
cmp
jo
ss
(bad)
xchg
cdq
or
hlt
push
in
adc
xor
pop
stos
mov
hlt
movs
shl
idiv
fwait
lahf
or
and
ja
sub
nop
test
ds
in
sbb
cdq
dec
mov
mov
pop
or
dec
outs
cwde
into
loopne
addr16
inc
adc
sub
stos
hlt
inc
std
mov
adc
push
jecxz
xor
jne
rcl
sub
test
mov
xchg
ret
adc
adc
cdq
rcl
jmp
pop
jmp
nop
fs
jmp
pop
cmps
sub
cli
popa
mov
into
inc
and
out
clc
pop
test
shr
jg
mov
js
jge
int3
arpl
fsub
xchg
xchg
push
dec
cmc
xchg
(bad)
xlat
int
jmp
nop
out
xchg
mov
cmp
xchg
pushfw
push
push
push
sbb
mov
imul
jbe
cmp
jmp
(bad)
ficom
and
sub
xlat
pop
mov
repnz
loope
(bad)
cmps
pop
dec
in
out
lds
scas
xor
jle
mov
xchg
in
mov
ret
dec
inc
jno
push
mov
or
cs
loop
xor
mov
mov
or
xor
aad
dec
jecxz
xchg
pop
cmp
xchg
ror
mov
test
or
movs
(bad)
scas
retf
loop
cs
pop
inc
dec
jecxz
nop
sub
je
xchg
push
dec
mov
pop
mul
pop
sbb
addr16
jg
cmps
aaa
sub
repz
pushf
fld
pop
es
aad
int3
lds
and
test
sub
sar
(bad)
ficom
mov
stc
xchg
and
inc
test
adc
mov
retf
xchg
add
inc
ins
mov
or
jbe
mov
mov
test
jmp
mov
sbb
ins
add
inc
dec
add
movs
xchg
cli
mov
pop
lods
pop
sub
mov
hlt
add
xor
test
mov
xchg
inc
movs
mov
pusha
leave
jb
rol
sub
jmp
add
and
mov
scas
into
test
ret
push
add
sub
mov
cmc
dec
push
mov
fidiv
mov
sub
lods
outs
sub
out
sub
cli
mov
add
inc
jl
mov
(bad)
push
enter
jp
out
and
test
dec
ja
or
in
cmp
das
cmps
test
test
outs
push
cld
popf
lds
fldcw
ror
in
pop
cs
xchg
rol
mov
(bad)
dec
dec
or
lds
lods
inc
gs
lds
fcmovbe
(bad)
mov
xchg
sub
jnp
pushw
jp
or
xchg
inc
ins
xchg
push
jp
mov
and
mov
push
sbb
test
mov
mov
xchg
popa
mov
loopne
call
ret
or
jno
xchg
inc
popf
sub
and
cmp
ins
sbb
rcl
pop
scas
adc
outs
sbb
arpl
sbb
cmp
xchg
push
cmp
call
fucom
adc
pop
add
mov
sbb
mov
jle
lods
jmp
mov
lea
fistp
(bad)
sbb
mov
sub
pushf
mov
jp
sahf
jg
stos
sub
jmp
pusha
dec
stos
sbb
in
jae
div
cmps
fsubr
fsubr
mov
ss
clc
cld
dec
out
add
hlt
lods
mov
jp
or
sub
cmc
xchg
jecxz
pop
dec
adc
pop
(bad)
pop
mov
inc
(bad)
mov
test
push
shl
or
inc
arpl
fmul
xor
loope
test
xchg
jmp
(bad)
call
push
shl
icebp
ss
xor
leave
pop
and
and
dec
or
sbb
test
xor
fild
sahf
fcomp
mov
addr16
jmp
ins
dec
popa
xor
lods
pop
call
test
call
push
aaa
jno
cmp
mov
cs
popa
fld
push
and
(bad)
xchg
and
cmp
rcl
xchg
inc
push
xchg
js
xchg
stc
add
inc
out
and
ins
adc
js
add
leave
inc
fbld
or
ds
mov
push
add
ins
jl
in
dec
mov
fs
cmps
jnp
fldcw
mov
icebp
inc
sti
in
push
pop
in
adc
in
enter
std
mov
mov
sub
std
xor
mov
jne
mov
call
cmp
adc
and
test
or
(bad)
addr16
inc
cmp
mov
jno
mov
shl
leave
pop
fwait
gs
std
popf
pop
fsub
mul
jmp
out
add
in
fsubr
mov
dec
mov
inc
or
aam
mov
mov
pcmpgtb
sub
pop
sbb
inc
aam
pop
lods
test
leave
loop
loopne
mov
or
mov
imul
cmps
aas
pushf
adc
outs
push
or
lock
mov
inc
shl
mov
add
sub
jns
cmp
push
xor
(bad)
out
js
xchg
mov
push
inc
dec
adc
push
add
push
cmp
nop
jecxz
push
and
pop
adc
sbb
cwde
and
push
mov
add
sti
and
and
rol
mov
pop
sbb
push
xor
push
mov
loope
jo
ins
or
mov
idiv
lock
loopne
pop
lea
inc
adc
aad
or
cmp
or
add
cmp
xchg
into
rcr
dec
movs
rcr
(bad)
sub
lods
test
push
pop
retf
dec
cmps
mov
std
inc
(bad)
imul
xchg
xor
ss
test
clc
js
mov
fwait
nop
lahf
retf
mov
push
inc
mov
test
mov
adc
pushf
jne
sub
sbb
sub
loop
loope
xchg
rcr
int
mov
mov
mov
adc
or
lods
clc
cmp
add
mov
loope
mov
leave
aaa
and
aas
dec
jbe
lock
test
movs
jge
jg
es
adc
mov
fwait
mov
jb
pusha
out
jecxz
push
pop
aas
aad
rcl
lahf
sub
cmp
fsub
pushf
mov
(bad)
push
jmp
rcl
sbb
jno
or
sbb
xchg
cld
mov
cmp
xchg
fimul
daa
sbb
jno
push
fs
cli
fnstcw
xchg
in
jmp
mul
push
ror
dec
and
sub
and
add
mov
stos
sub
daa
dec
mov
adc
clc
std
mov
mov
adc
xor
mov
lods
out
jge
push
push
pop
loopne
stc
shr
pop
push
cmp
stos
xor
sbb
stos
mov
jmp
mov
aas
(bad)
dec
(bad)
ins
js
add
adc
xchg
int
arpl
mov
cmp
and
ficom
add
push
mov
dec
and
push
in
ds
imul
shr
cdq
movs
test
pop
mov
js
rcr
das
dec
pop
test
dec
or
mov
stos
cmp
iret
cwde
or
ret
fwait
scas
cmp
outs
pushf
cmc
mov
pop
stos
mov
push
hlt
cmc
ret
jae
hlt
pop
scas
pop
jae
add
retf
clc
jno
sbb
aam
push
(bad)
sbb
fcom
xchg
adc
mov
enter
fcmovnb
stos
std
or
sti
or
fbstp
or
xchg
pop
cwde
and
inc
sbb
test
(bad)
fist
pop
add
test
retf
aaa
xchg
(bad)
mov
and
sar
movs
mov
inc
jle
inc
add
out
jmp
ret
dec
fs
pop
xor
out
mov
fwait
aaa
mov
jae
test
fild
mov
das
sub
sbb
add
adc
out
jo
or
dec
in
enter
in
out
push
xor
sbb
inc
dec
xor
add
stos
and
jo
rol
int3
xchg
mov
test
(bad)
imul
push
popa
shl
sar
fcomp
mov
(bad)
jbe
xor
and
fstp
scas
pop
ret
push
jmp
idiv
sub
xchg
pop
retf
mov
cs
mov
inc
inc
and
mov
retf
and
fisttp
cs
repnz
or
out
fld
repnz
iret
or
mov
sar
sbb
mov
dec
addr16
adc
cmps
lods
lods
xor
pop
push
xlat
sbb
cmc
inc
add
xor
les
psubusb
or
mov
bound
jp
sahf
sub
ja
fmulp
mov
nop
sbb
in
cmp
inc
xor
out
out
mov
(bad)
sbb
lods
xor
xor
and
(bad)
sahf
adc
leave
push
les
pop
or
jbe
mov
nop
xor
loop
pusha
pop
and
bound
push
mov
inc
push
mov
mov
push
mov
scas
xchg
push
add
xor
lahf
cld
test
fdivr
xchg
xchg
pop
lods
sbb
and
cs
jmp
push
fisubr
dec
xor
push
sahf
xor
popa
push
sub
les
sar
imul
cmps
or
sahf
and
xlat
jmp
loopne
sub
adc
sbb
inc
mov
xor
cmps
adc
ficom
in
mov
push
xchg
jb
dec
stos
fidivr
in
leave
and
mov
mov
loopne
add
jmp
and
jle
xchg
rol
xchg
mov
je
js
adc
add
jns
jge
in
rcl
mov
adc
jae
ds
xor
push
sbb
retf
fld
dec
or
in
mov
dec
mov
inc
jns
adc
fsubr
fs
lahf
outs
push
inc
mov
pop
aad
mov
pop
into
(bad)
imul
ins
adc
xor
scas
lock
and
dec
cvtps2pi
adc
loopne
jne
mov
ss
dec
sbb
in
or
xchg
sbb
pop
fdiv
sub
icebp
inc
pop
jle
dec
das
ret
scas
outs
loop
fdiv
gs
or
cmp
das
pop
arpl
cmp
out
push
data16
mov
add
loope
mov
jg
adc
xor
xor
cli
adc
sbb
jbe
mov
cwde
sbb
adc
push
out
arpl
mov
mov
icebp
dec
push
xor
add
pop
dec
inc
add
inc
or
(bad)
xlat
imul
add
in
mov
mov
pop
mov
fcomi
fisttp
sti
fbld
sub
inc
push
dec
cmp
imul
mov
fmul
shl
sar
je
loop
imul
cmp
clc
dec
ror
and
inc
push
inc
outs
or
gs
idiv
daa
pop
popf
(bad)
cld
jecxz
mov
or
jmp
lahf
inc
xchg
adc
nop
icebp
sub
ror
dec
mov
and
sahf
out
cmp
stc
pop
sbb
arpl
(bad)
cmc
mov
leave
jo
push
jecxz
retf
xchg
in
xor
and
sahf
dec
dec
shl
sbb
(bad)
jle
pop
pop
dec
ins
cli
push
pop
push
adc
icebp
xor
mov
jns
xchg
aam
sub
mov
sub
inc
xchg
out
scas
nop
mov
out
add
int3
loope
adc
push
icebp
nop
jo
and
or
add
(bad)
bnd
xchg
add
sub
fsubp
mov
shl
xor
mov
fimul
or
dec
dec
mov
inc
sub
mov
add
(bad)
dec
rol
and
inc
pusha
or
mov
pop
ins
jl
in
mov
ret
lods
retf
retf
push
stos
stos
or
cdq
fst
xchg
cs
xor
(bad)
imul
clc
pusha
jne
je
repnz
add
loop
mov
sub
mov
sub
inc
nop
mov
cmps
mov
sbb
bswap
adc
ins
addr16
cs
mov
jmp
ret
xor
loopne
pop
or
fwait
scas
enter
mov
mov
ds
bound
and
jne
mov
inc
push
add
stc
cmps
fyl2xp1
not
aad
dec
sbb
sub
stc
in
push
test
xchg
test
cwde
pushf
inc
in
pop
adc
cld
xlat
lods
mov
out
push
mov
(bad)
daa
jns
xor
xchg
outs
xor
inc
lods
jl
(bad)
idiv
xor
pop
jle
sub
jo
ret
int
mov
jno
and
(bad)
jge
add
(bad)
movs
xchg
lods
cli
push
sbb
hlt
out
cmps
lds
mov
push
mov
mov
push
mov
fld
dec
icebp
mov
push
(bad)
jno
cmp
sbb
inc
xchg
jge
add
das
cmp
jne
mov
jmp
cmp
(bad)
(bad)
test
xlat
pop
jecxz
cmp
dec
std
sti
mov
mov
adc
mov
sub
dec
sub
and
push
mov
jnp
dec
enter
pop
mov
jb
cld
jmp
clc
scas
ror
jne
repz
xrelease
jmp
push
push
inc
adc
or
dec
or
jmp
xlat
sar
ret
push
pop
es
retf
cmp
fucomi
mov
mov
in
xchg
pop
inc
lods
rcl
mov
xchg
shl
ror
aam
xor
push
pop
push
sub
sub
mov
mov
(bad)
mov
stc
push
ins
sub
pop
out
icebp
add
xchg
and
jne
addr16
jo
inc
jo
in
mov
sub
(bad)
xchg
cmp
shl
pop
shl
mov
inc
cmp
lods
mov
push
loope
mov
jno
add
js
or
or
jg
lea
mov
sbb
cmp
and
mov
and
pop
dec
sbb
and
movs
rcl
arpl
xchg
les
mov
outs
pop
mov
rol
shl
jnp
sub
jnp
test
lock
adc
ds
sbb
int
and
adc
jecxz
jp
(bad)
and
xor
cmp
adc
dec
xchg
mov
ret
pop
imul
mov
(bad)
dec
(bad)
fstp
pop
(bad)
retf
imul
(bad)
int
movs
xor
leave
mov
sub
mov
sbb
movs
ss
xor
loop
and
jmp
pop
xor
push
fiadd
push
scas
hlt
in
call
xor
push
pushf
icebp
int
inc
mov
xor
sahf
push
jle
pop
test
mov
in
mov
pushf
loope
std
jb
scas
dec
frstor
lea
or
mov
xlat
lods
dec
hlt
sar
fincstp
cmp
adc
setge
xchg
retf
fsub
and
popf
pop
jno
jne
pop
fisttp
mov
gs
stos
mov
outs
xlat
fisub
mov
add
add
jb
aad
mov
das
and
shr
inc
add
test
fsubr
iret
dec
mov
and
and
fist
dec
inc
mov
jo
jle
or
jge
(bad)
aas
dec
out
loop
jecxz
bound
mov
aas
push
js
jno
pop
xor
lea
fnstenv
jbe
xchg
les
sub
push
mov
dec
cli
call
arpl
(bad)
loope
frstor
not
xchg
mov
cmp
mov
loopne
call
adc
mov
xlat
sub
dec
push
(bad)
popf
(bad)
xor
ja
mul
hlt
jnp
sysexit
push
xor
jne
shl
lahf
sar
mov
mov
mov
iret
neg
sahf
stos
addr16
push
stos
inc
inc
call
xchg
sub
push
(bad)
mov
dec
in
cli
out
inc
mov
inc
jl
nop
jmp
mov
jmp
fcomp
xor
daa
dec
jge
div
adc
xchg
call
scas
fcmovnu
or
repz
sbb
dec
cmp
fcomp
pop
fstp
adc
in
xor
jmp
pop
xchg
test
fwait
xor
pop
or
into
js
inc
push
shl
mov
sbb
fst
ds
adc
jns
out
retf
mov
mov
stos
mov
add
hlt
push
fnstcw
mov
push
mov
mov
adc
stos
and
mov
sbb
(bad)
icebp
bound
add
shl
mov
in
in
sub
xor
and
jl
xchg
jl
or
sbb
fst
bound
pop
retf
xchg
push
cmp
(bad)
fstp
push
rol
sbb
stos
mov
out
xor
nop
outs
sbb
mov
movs
lock
loope
push
outs
stc
push
(bad)
retf
jp
loop
xor
lea
mov
shr
je
push
aam
jmp
mov
aas
xchg
fist
mov
repnz
sbb
mov
adc
push
or
push
jecxz
out
not
jo
popf
arpl
in
dec
fstp
jg
pop
jo
sub
arpl
das
stc
stos
add
jmp
(bad)
and
bound
loop
push
xchg
fwait
push
cwde
adc
aaa
rcpps
ins
outs
cmc
jns
mov
push
imul
sub
mov
ret
inc
js
sbb
rcl
cdq
leave
or
ins
xor
inc
popa
dec
dec
push
xor
push
add
lahf
push
mov
jnp
fisubr
sahf
inc
mov
push
nop
push
sahf
dec
sub
sub
rcr
outs
int3
test
test
adc
jmp
sub
ret
int
idiv
xchg
pop
out
fiadd
pusha
push
aaa
xchg
inc
in
adc
(bad)
sbb
jp
aas
adc
into
scas
mov
int
aam
dec
retf
sub
ja
and
pusha
inc
inc
jmp
cmps
mov
cmp
mov
into
ret
mov
stos
ss
mov
xchg
mov
pop
aam
sti
xchg
(bad)
fild
mov
mov
cmps
add
jmp
jecxz
loope
ds
adc
les
in
push
cmp
in
fwait
cmps
out
(bad)
out
fbstp
pop
jb
add
cmp
aaa
xchg
pop
dec
out
loop
aas
mov
not
lods
je
bound
pushf
leave
mov
mov
adc
fdivr
mov
pop
xchg
add
mov
jbe
test
and
sub
call
and
aaa
pop
dec
pop
mov
add
jno
jle
stc
xchg
ss
ja
sub
xchg
cmps
jl
mov
pop
out
cmp
adc
sbb
pop
pop
dec
mov
int
ja
xor
aaa
push
fwait
ss
pop
aad
clc
pop
mov
pusha
add
xor
push
inc
sub
dec
jg
lock
add
xchg
test
bnd
adc
jno
call
push
inc
sub
cmp
nop
and
cdq
addr16
dec
mov
sub
sub
bound
jae
jg
popa
cmp
inc
cli
dec
sub
xor
mov
push
popf
enter
das
push
enter
jmp
call
push
(bad)
pop
data16
test
stos
repnz
pop
jo
aaa
adc
sbb
pop
xchg
inc
push
dec
push
ffreep
mov
and
add
rol
ins
dec
retf
push
jae
(bad)
loope
clc
aad
or
cli
repz
lahf
xchg
(bad)
pusha
aaa
adc
mov
gs
stc
test
xchg
stos
repnz
in
(bad)
dec
pop
stc
int3
outs
aaa
dec
ror
jmp
jge
rcr
retf
pop
das
dec
jnp
adc
mov
mov
scas
adc
enter
inc
adc
fs
sub
xor
mov
fst
mov
jp
dec
stos
jg
xor
lock
xor
(bad)
(bad)
inc
repnz
push
add
sbb
xchg
retf
fsub
mov
and
mov
popf
inc
mov
cmps
cdq
in
or
nop
sbb
gs
push
repz
jmp
leave
adc
xchg
fsubr
div
(bad)
mov
adc
popa
or
mov
bound
push
xchg
mov
popa
test
mov
inc
ror
jb
pop
test
cmps
fdiv
or
push
movs
fnstenv
jns
xor
out
adc
or
push
push
xchg
pop
push
or
jp
mov
pop
mov
sbb
jo
xchg
inc
xor
mov
sbb
sbb
sub
movs
or
or
push
(bad)
mov
shl
(bad)
jp
mov
jge
test
and
les
and
add
jbe
pop
fmul
xor
js
sbb
test
dec
push
ja
scas
mov
inc
test
cli
xchg
arpl
imul
inc
and
dec
mov
adc
jp
ins
push
sahf
cli
les
pop
mov
in
xchg
scas
arpl
inc
push
lahf
jmp
pop
jl
xchg
movs
movs
mov
int
test
pop
repnz
int
test
iret
(bad)
aam
sub
add
sub
mov
inc
and
mov
mov
mov
int
sub
fild
bnd
std
mov
jae
mov
jg
dec
mov
inc
mov
jne
loop
jns
outs
sub
and
jmp
mov
cmps
push
fadd
pop
inc
pop
addr16
lahf
pop
push
inc
cdq
mov
movs
aas
jmp
cmp
dec
jge
daa
lods
ret
dec
inc
sub
scas
nop
jns
or
out
adc
mov
mov
ror
call
and
rcl
xor
inc
jb
lods
push
push
ins
js
sbb
and
or
push
and
lods
inc
cmp
mov
pop
in
mov
cwde
ret
addr16
mov
shr
mov
mov
ins
xchg
mov
pop
retf
push
js
nop
popa
mov
imul
push
and
pop
popa
pop
push
xchg
gs
fiadd
cmp
cmp
inc
mov
or
pop
fdiv
mov
test
mov
push
or
pusha
xor
inc
adc
mov
ins
mov
mov
and
test
mov
pop
adc
dec
xor
or
imul
push
pop
je
jb
ss
pusha
cmps
ret
in
inc
inc
jo
dec
pop
pop
pop
fs
jo
ss
lods
daa
lea
pop
das
sbb
popa
jecxz
in
mov
popf
scas
fcomp
mov
jmp
scas
adc
mov
(bad)
inc
lods
xchg
retf
xchg
(bad)
xor
inc
xchg
pop
cmc
add
les
xchg
test
ja
adc
inc
out
add
(bad)
icebp
mov
hlt
xor
fiadd
pop
in
or
jmp
inc
pop
frstor
(bad)
repz
shl
loope
aas
mov
or
test
test
mov
ins
fadd
cmp
jg
jns
test
pop
in
je
jle
cs
shl
in
rcr
out
mov
mov
dec
jo
sub
push
lea
jecxz
mov
or
lds
push
xor
sbb
jb
mov
pop
xchg
xchg
nop
adc
sbb
test
add
out
lds
and
std
movs
pop
ss
mov
pop
cmp
(bad)
mov
cmc
lods
jmp
shl
(bad)
mov
pop
repnz
sub
int3
mov
sbb
in
call
enter
fs
stos
lods
adc
nop
jae
dec
jb
leave
repz
dec
dec
pop
xchg
ins
or
scas
cmp
inc
sub
(bad)
mov
mov
in
and
ins
sub
and
add
(bad)
pushf
or
mov
scas
or
clc
push
scas
add
mov
jnp
sub
les
push
aam
(bad)
sub
jmp
int3
retf
or
cdq
int3
jae
xlat
sub
out
pop
(bad)
pop
sub
gs
(bad)
jno
mov
cmc
dec
inc
xor
sub
dec
cld
add
pop
mov
gs
dec
nop
(bad)
iret
push
xor
mov
push
repnz
sbb
movs
ja
add
mov
cdq
inc
shr
jns
jbe
(bad)
mov
jae
and
arpl
retf
mov
push
sahf
dec
shl
jl
push
dec
lahf
cwde
jg
(bad)
mov
mov
sub
jne
jae
fs
jae
ja
repz
mov
ret
push
inc
les
and
sbb
xchg
shl
pop
jbe
pop
lea
mul
out
addr16
arpl
push
lods
outs
aaa
mov
inc
int3
cli
das
cli
xchg
(bad)
rcr
fwait
or
(bad)
repz
imul
mov
jae
inc
fwait
mov
mov
jmp
loope
daa
or
inc
data16
clc
lea
add
out
(bad)
dec
jmp
xchg
cmp
pop
hlt
fwait
mov
int3
pop
xor
mov
lods
cmp
jns
fld
add
ds
mov
dec
xor
test
push
jo
(bad)
loope
dec
pop
in
jb
clc
retf
sub
ror
aas
pop
sbb
cwde
xchg
aaa
ffree
cwde
std
mov
stos
enter
addr16
mov
mov
sbb
mov
add
ins
dec
mov
repz
xor
push
repz
(bad)
je
sub
cmps
jle
ret
push
loop
nop
dec
add
and
cmp
call
cdq
xchg
pop
popa
das
jmp
xchg
cmc
cmp
sti
pop
loope
rcr
pop
sbb
loope
jns
and
xchg
jle
inc
je
adc
(bad)
dec
xor
fisub
xor
or
adc
xor
pushf
dec
cmps
push
in
repz
icebp
mov
iret
test
mov
mov
mov
push
xchg
nop
or
cmps
adc
fldcw
mov
daa
pushf
inc
call
out
js
mov
in
cdq
sub
dec
ja
cmp
sub
fs
icebp
dec
bound
seta
mov
outs
mov
mov
arpl
dec
stos
xor
lea
cmp
jne
daa
mov
rol
sar
xchg
xchg
adc
les
rol
mov
in
inc
rol
fwait
dec
jl
inc
mov
mov
pop
shl
xlat
mov
adc
sub
call
icebp
sbb
ds
push
xchg
or
jns
(bad)
fwait
outs
fbstp
ja
ins
jae
das
rcr
movs
scas
cmp
jno
push
pop
inc
jb
and
adc
mov
out
sub
sbb
cmc
fwait
repz
push
cmp
push
fsubp
cmp
arpl
inc
test
ret
dec
lds
pop
cmp
(bad)
mov
inc
mov
jmp
jb
cmp
test
hlt
pop
ret
or
sbb
cs
retf
add
push
enter
add
cwde
cmp
test
jmp
mov
outs
ss
inc
and
push
sub
in
sub
mov
sub
aas
add
dec
sar
xor
outs
hlt
push
mov
fwait
sar
mov
adc
add
xchg
pop
cmp
adc
sbb
mov
int3
jp
ret
retf
mov
and
lods
fisub
sub
and
cmp
outs
dec
popa
repnz
jmp
test
in
mov
xor
mov
ins
pop
mov
je
int3
mov
push
adc
mov
punpcklwd
sub
pop
in
stos
jg
jne
rol
push
daa
in
cmc
imul
mov
aaa
fwait
push
mov
ja
in
stos
xor
outs
in
xor
cmps
pop
imul
mov
push
movs
mov
(bad)
xchg
ins
bound
dec
jle
add
ja
jecxz
mov
data16
add
mov
jmp
inc
and
div
ins
(bad)
xchg
xchg
jg
out
ficom
pusha
out
dec
popf
stos
dec
js
fwait
sub
dec
test
popf
dec
or
or
(bad)
inc
in
les
and
imul
cmp
inc
sub
jmp
dec
fsubr
sub
dec
sbb
adc
adc
dec
ror
in
arpl
mov
xchg
outs
cmps
xor
xchg
ins
mov
pop
leave
not
sbb
pop
sbb
add
scas
dec
and
pop
out
mov
mov
lahf
call
rcl
xchg
push
jb
or
push
inc
inc
mov
mov
es
addr16
test
push
sti
test
add
jle
pop
out
test
or
or
sbb
retf
stos
xor
stos
and
mov
cdq
es
xor
push
push
(bad)
into
aad
sahf
icebp
inc
das
(bad)
jbe
pop
(bad)
cld
jle
dec
sbb
push
inc
mov
ret
dec
movs
out
inc
adc
pop
imul
push
inc
and
add
and
or
push
xchg
ret
xchg
das
inc
sub
stc
push
mov
sbb
push
enter
cli
mov
retf
push
fimul
jge
cli
xlat
mov
dec
leave
xchg
imul
cdq
add
pop
xor
jle
mov
adc
bound
cmp
jmp
mov
push
and
inc
pop
imul
mov
js
ins
pop
cmp
cmp
cdq
mov
and
inc
(bad)
loop
sbb
lea
jns
fs
js
xsha256
cmps
aad
push
lahf
mov
adc
mov
mov
stos
les
sbb
mov
stos
cmp
or
xor
les
mov
adc
pop
je
lods
xchg
jno
dec
jo
xchg
cdq
sbb
aam
ret
scas
add
fadd
bound
cli
push
xchg
or
dec
and
add
push
loopne
cmps
jo
mov
fsub
push
loop
jae
into
je
scas
daa
into
(bad)
dec
(bad)
lds
cdq
movs
and
lea
or
mov
retf
scas
lods
loopne
adc
inc
pop
or
int3
push
xor
or
icebp
fbld
push
push
sahf
adc
adc
xor
loope
mov
(bad)
fdiv
sub
shl
test
adc
and
rcl
jge
sub
dec
hlt
aaa
shl
js
jo
retf
inc
dec
test
cmp
add
jne
or
and
mov
sbb
cmc
jno
push
inc
retf
fcmovu
in
sub
ins
test
movs
and
xor
inc
xchg
xchg
aad
adc
mov
imul
and
push
cmps
sub
and
sub
imul
sbb
rol
retf
dec
push
aas
and
nop
call
call
loopne
arpl
dec
sbb
dec
cs
test
out
jecxz
mov
movs
or
movs
xor
lods
loopne
adc
sub
out
xchg
stos
in
jnp
add
retf
aaa
pop
mov
cmps
sub
or
add
int3
pop
ret
cmp
scas
pop
or
jo
jo
ja
pop
sub
fwait
imul
mov
push
lea
pop
sub
jmp
inc
push
lds
pop
mov
lds
mov
fwait
popa
loop
xchg
ja
push
(bad)
ja
movs
ins
mov
test
inc
pop
loope
push
stos
aad
jle
mov
stos
cs
xchg
push
dec
sub
jle
ja
int
test
mov
mov
fwait
test
test
pusha
cmp
ds
ret
repz
mov
mov
push
mov
jns
enter
cmps
retf
dec
imul
xchg
test
add
mov
jecxz
pop
ret
test
fdivr
std
inc
jb
push
push
addr16
fnsave
sub
push
outs
div
dec
cmp
jle
shr
push
push
sub
inc
xor
mov
dec
jg
int
add
test
mov
mov
nop
fsubr
fcom
xchg
and
sub
call
dec
test
xchg
cmp
mov
push
cmp
std
cmps
pop
sbb
shl
mov
inc
sar
sub
pop
ret
dec
fs
adc
lea
xor
xor
out
xor
ss
add
jmp
les
clc
inc
gs
loopne
outs
aas
loope
pusha
sbb
idiv
push
mov
push
das
push
shr
pop
jae
lahf
lds
pop
cli
ja
push
pop
xor
test
adc
cmp
gs
pop
sti
mov
nop
mov
ret
push
cmp
xchg
lods
sbb
out
jo
sub
sar
mov
mov
adc
arpl
pop
(bad)
loope
movs
push
jge
movs
push
aas
int
retf
cmp
dec
sti
xor
jp
cli
loopne
test
mov
jnp
out
cmp
movs
sub
sbb
les
mov
jmp
sbb
call
push
shr
test
fst
inc
xchg
dec
or
pop
out
pop
or
out
mov
xchg
lea
and
out
mov
rol
inc
cld
jge
xor
retf
aam
mov
(bad)
lea
sub
mov
(bad)
mul
pop
cmps
pop
and
add
les
sbb
jmp
and
push
jg
dec
add
ror
imul
pop
adc
xlat
jns
push
loop
mov
ror
pop
es
mov
mov
adc
jle
add
jb
mov
stos
xlat
fst
cmp
fdivr
push
pop
mov
cmps
cmps
push
iret
lods
mov
daa
push
ja
jle
addr16
stc
sub
mov
call
sub
scas
mov
mov
enter
mov
cmp
cmps
xor
jns
and
popa
sbb
lods
xor
dec
jle
call
loopne
xor
add
ja
cmp
add
push
in
test
xchg
jmp
inc
scas
cmp
loope
inc
xchg
push
rcl
adc
push
push
rcl
jb
dec
add
test
xchg
sub
and
xchg
inc
or
aas
lods
cmp
(bad)
in
adc
push
fst
sbb
and
jecxz
add
sub
loopne
stc
and
out
sub
jne
sub
cld
pop
(bad)
mov
jbe
sub
aam
scas
sub
dec
movs
loopne
or
sbb
addr16
in
mov
movs
fsubr
add
cwde
xor
sub
mov
jecxz
retf
sub
jnp
push
adc
loop
mov
gs
mov
push
fmul
push
cld
mov
adc
fld
aaa
jmp
leave
cmps
and
mov
dec
sub
cmp
cmovb
cmp
nop
movs
jns
sahf
pop
fiadd
pop
aam
dec
mov
mov
fwait
pop
sbb
or
aas
ins
jmp
or
fcom
push
xchg
pop
ss
mov
or
dec
push
add
ss
popf
retf
push
enter
cmp
xchg
repz
test
mov
dec
sub
call
cmp
mov
popa
push
cdq
pop
mov
lea
mov
jnp
jo
mul
arpl
stos
adc
sar
cmp
push
push
sub
movs
in
int3
int3
shl
popf
pop
jecxz
idiv
jg
sbb
push
test
out
mov
das
aas
or
fsub
rol
or
cld
test
and
ret
add
pop
(bad)
outs
push
fadd
ins
cwde
fidivr
jmp
sbb
sub
mov
jmp
aaa
dec
(bad)
sub
imul
retf
or
sahf
jnp
aaa
or
xchg
loop
ds
(bad)
call
dec
inc
loop
inc
cmc
adc
in
mov
dec
mov
div
outs
mov
push
cmp
pop
sbb
adc
or
in
jp
mov
xor
test
dec
sub
mov
or
int3
sub
stos
sbb
pop
frstor
mov
(bad)
daa
xchg
mov
call
adc
ins
push
jge
inc
pusha
ins
retf
sub
adc
lods
or
out
mov
out
sahf
fadd
mov
sbb
pop
sbb
sub
movs
pushf
(bad)
jb
mov
xchg
pop
pop
(bad)
dec
jns
test
fistp
arpl
push
mov
jb
leave
das
data16
sbb
push
fadd
popa
mov
shl
dec
retf
outs
jns
jge
sub
xor
mov
inc
xchg
fidivr
xchg
inc
cmps
inc
pop
push
in
ins
inc
movs
push
sub
mov
push
aas
jecxz
cli
pop
lock
adc
ins
retf
fwait
into
dec
mov
pop
jbe
push
mov
and
cwde
test
sbb
imul
ins
outs
cmps
loopne
or
xchg
mov
xor
nop
jg
mov
xor
and
adc
imul
xor
outs
sub
fcom
dec
and
in
lock
cmps
js
push
outs
cld
adc
js
sbb
scas
or
mov
loop
icebp
pop
aas
cwde
retf
cmp
fld
mov
xchg
aas
xor
jne
jno
add
mov
push
adc
rol
jle
dec
dec
dec
or
cdq
push
xchg
dec
cmp
or
push
mov
xchg
jecxz
imul
push
adc
and
cs
add
sti
test
in
xor
mov
dec
pop
jb
jnp
mov
int
jnp
sub
shl
shl
ds
pop
adc
sar
sub
xor
push
sbb
mov
dec
and
loopne
xor
dec
cwde
cdq
(bad)
and
adc
jmp
(bad)
xor
add
test
rcr
and
push
call
jp
sub
not
jmp
pop
stos
xor
mov
jbe
or
sub
mov
xor
and
stos
stos
jo
out
mov
push
daa
xor
fsubr
cdq
add
(bad)
push
clc
sub
add
not
test
add
ins
mov
inc
std
scas
mov
or
lds
mov
pop
outs
sbb
pusha
mov
dec
call
in
cmp
xor
jmp
fwait
pusha
stos
cmp
sti
fnstsw
outs
in
add
adc
ret
rcr
ins
xchg
imul
mov
sbb
popa
call
pop
scas
inc
bound
push
jl
test
push
sub
and
fiadd
sbb
push
dec
mov
out
adc
lods
daa
test
jb
sbb
mov
shr
cs
out
jmp
pop
sti
xor
add
add
and
push
adc
lock
push
(bad)
hlt
inc
fisttp
xchg
jle
outs
and
adc
jns
ja
mov
inc
(bad)
jae
jnp
push
ins
pop
xchg
jnp
or
push
sub
(bad)
es
scas
scas
push
push
xor
mov
mov
fistp
movs
iret
mov
xlat
call
ror
repnz
lahf
inc
imul
outs
repz
int3
jne
cli
pushf
neg
out
mov
push
sar
(bad)
push
out
xor
mov
fiadd
xor
push
ss
std
cwde
(bad)
push
fild
cmp
mov
mov
inc
out
imul
(bad)
sbb
test
sbb
sub
jmp
pop
shl
push
sub
sti
rcl
nop
das
cli
(bad)
pop
sti
mov
mov
popa
imul
xchg
and
(bad)
call
aaa
pop
inc
xor
sbb
inc
ud2
cli
scas
mov
and
rcr
inc
fwait
lock
(bad)
cmp
fldenv
inc
loop
std
in
adc
and
fisubr
push
stos
sub
or
cmps
(bad)
pop
in
sub
ins
(bad)
imul
shl
pop
dec
dec
fs
imul
xor
cli
(bad)
shr
xlat
out
aaa
jp
call
in
sahf
pop
push
(bad)
int
and
push
and
add
(bad)
pop
sub
fld
out
mov
js
sbb
sahf
lock
(bad)
ja
sbb
adc
mov
and
dec
xchg
and
jbe
pop
daa
sub
dec
xor
dec
jmp
fnstcw
xor
pop
jmp
dec
or
nop
inc
add
jne
mov
pop
(bad)
cmp
(bad)
daa
mov
jbe
pop
xor
push
or
stos
cmp
mov
rcl
push
loopne
push
jae
hlt
add
arpl
xchg
add
pop
cmc
jmp
xchg
or
add
jmp
cmps
stc
aaa
popf
(bad)
call
js
test
adc
jle
mov
pop
xlat
in
ins
xchg
inc
ss
xor
jge
pop
enter
dec
ja
retf
jne
jb
jo
repz
leave
push
shr
test
add
adc
jnp
imul
pop
xchg
sbb
and
xchg
cli
jge
xchg
fnstenv
test
in
mov
or
xchg
xchg
and
or
pop
shl
jnp
push
jp
repnz
sub
mov
mul
mov
icebp
or
and
lds
outs
sub
jne
rcl
adc
xor
iret
aad
cli
lods
gs
pop
in
lock
and
lahf
add
and
popa
mov
mov
mov
jbe
out
xor
mov
and
aad
rol
cmps
mov
sub
mov
lods
popa
and
pop
sbb
mov
neg
(bad)
dec
call
cli
inc
jp
shl
adc
(bad)
sub
js
iret
scas
push
lods
mov
mov
pop
inc
cmp
xlat
push
adc
or
gs
movs
mov
fidivr
mov
cmp
push
mov
or
fs
inc
es
pop
jmp
xlat
pop
test
fst
repz
loopne
call
inc
mov
lds
call
jne
pop
lock
mov
cmps
jnp
add
lea
cvtps2pd
retf
and
aam
push
mov
(bad)
shl
pop
jl
cmp
mov
adc
popf
jbe
sub
es
outs
movs
lock
mov
fsub
fist
inc
cmp
fimul
ins
fadd
pop
outs
inc
cmps
sub
jno
add
inc
cmp
retf
repz
popa
mov
cmp
repz
(bad)
cs
push
out
pop
jg
icebp
out
hlt
cmp
scas
inc
mov
pop
jns
fwait
jns
test
and
mov
add
(bad)
jne
mov
repz
sub
stos
outs
pusha
mov
push
out
aaa
push
retf
pop
fnstsw
mov
clc
push
adc
add
dec
sbb
cmp
push
xor
test
test
add
pushf
or
or
sahf
cmps
mov
mov
(bad)
add
cmps
add
xor
jae
mov
dec
rcl
loope
pop
sbb
cmp
sbb
(bad)
jne
mov
adc
pusha
call
sub
lods
xor
pop
mov
sbb
push
adc
sub
ficom
mov
cmp
in
jo
push
pop
mov
lea
sbb
ds
mov
cmps
xchg
(bad)
mov
jbe
inc
mov
fadd
sbb
clc
out
(bad)
movs
sbb
mov
push
movs
xlat
pop
xor
test
repnz
repnz
mov
add
push
dec
inc
mov
cwde
add
nop
iret
mov
cdq
out
and
addr16
mov
pop
and
fisttp
mov
repz
jmp
ins
cld
out
push
mov
push
pop
mov
xchg
sbb
xchg
mov
pop
ss
add
aam
and
lods
push
lods
inc
dec
fst
aad
jge
out
cs
jb
(bad)
daa
test
add
mov
(bad)
push
xchg
sbb
(bad)
mov
ja
mov
push
std
gs
dec
jne
mov
aaa
xor
xor
lods
add
pusha
mov
(bad)
mov
mov
ror
inc
nop
cmp
xchg
inc
shr
out
mov
cmc
mov
out
cmps
adc
lock
loope
add
add
push
adc
scas
ins
mov
icebp
adc
leave
and
fld
and
push
pushf
popf
cmc
ror
jbe
jl
dec
add
sbb
push
sbb
mov
aam
inc
call
fadd
pop
adc
mov
int
mov
cmovp
aaa
mov
sar
sbb
inc
inc
mov
mov
fdiv
hlt
jbe
stc
cdq
sub
stos
xlat
out
mov
push
test
push
outs
sbb
push
cmp
xor
pop
mov
std
inc
std
sbb
jl
or
mov
ja
call
push
fld
arpl
mov
out
das
cs
inc
std
push
or
sar
repz
ret
mov
push
lods
cmp
retf
(bad)
or
xchg
mov
mov
pop
(bad)
xchg
arpl
or
sti
repnz
and
nop
aam
dec
imul
mov
js
or
into
popf
dec
sbb
sar
add
push
mov
and
sahf
shr
push
jmp
xlat
pushf
mov
push
cdq
xor
jne
ss
nop
push
rol
dec
ret
cmp
ja
iret
cmp
and
lods
outs
push
sbb
ficomp
retf
das
pop
jecxz
cmps
mov
or
in
movs
dec
lds
sub
xor
inc
cmp
popf
add
sar
add
push
jne
jb
add
js
jecxz
cld
adc
cld
out
sbb
sub
(bad)
retf
or
call
pop
cmps
mov
jbe
fwait
xor
xor
jl
push
ret
iret
fdivrp
cmp
cmp
jmp
inc
and
mov
add
cwde
out
pop
cmp
sbb
add
or
fsubr
dec
call
ret
nop
pop
mov
int
sub
rol
popa
cmp
ss
or
imul
jae
mov
cwde
(bad)
fisubr
sbb
sub
xor
cwde
dec
pop
or
aam
mov
push
cld
sub
leave
(bad)
mov
sbb
mov
mov
daa
clc
mov
xchg
add
push
aad
pop
sti
sbb
(bad)
js
xchg
push
jmp
repnz
dec
in
lds
js
mov
outs
hlt
xchg
pushf
retf
add
cs
cmps
test
lods
cmps
cmp
sub
in
hlt
shr
imul
add
mov
cmp
addr16
loope
push
jnp
dec
and
sub
sub
inc
push
inc
ds
pop
data16
inc
mov
sub
xor
cmp
cmps
push
xchg
test
push
hlt
pop
je
xchg
sbb
shl
cdq
push
mov
cmp
inc
push
sub
ins
push
(bad)
adc
push
mov
ja
rol
retf
scas
push
shr
push
pop
xchg
xor
and
fdivr
pop
repnz
xor
div
mov
adc
xor
fwait
jp
dec
test
aad
movs
shl
(bad)
and
mov
mov
aad
xor
mov
sbb
aad
and
push
scas
mov
ja
mov
mov
or
ficomp
dec
xchg
int
jns
pusha
loope
xor
sub
pop
repz
add
clc
dec
sub
div
into
jo
or
clc
aas
aad
stc
movs
ret
jns
movs
fadd
stc
mov
jl
mov
mov
mov
push
es
push
xchg
add
push
sti
aas
inc
add
add
push
dec
sar
dec
jmp
jge
adc
dec
jnp
and
cmp
dec
arpl
and
ins
jae
mov
xor
sub
mov
pop
pusha
test
cdq
cmp
and
pusha
loopne
inc
das
push
ja
xor
sbb
int
(bad)
mov
sbb
mov
ror
shr
addr16
xor
jb
dec
push
popf
(bad)
mov
pusha
mov
(bad)
sbb
cli
sar
mov
aad
dec
pushf
leave
lods
sub
push
jbe
xor
or
jb
dec
pushf
mov
sahf
push
mov
mov
cli
mov
ror
mov
sahf
shl
iret
adc
cmp
imul
and
jmp
push
mov
push
in
sub
leave
test
sub
mov
or
mov
or
add
aas
arpl
ret
out
mov
out
fwait
inc
ds
mov
dec
mov
jl
scas
ja
xor
mov
icebp
push
and
mov
sti
pop
mov
ins
and
cdq
mov
fwait
dec
dec
aam
jb
xor
sub
pop
outs
ins
xchg
pop
mov
cdq
test
pop
call
call
pop
inc
or
mov
mov
les
ins
cmp
jp
push
ffreep
mov
sbb
mov
sti
push
ja
sub
sbb
bound
dec
adc
int3
mov
aam
lods
xchg
stc
dec
push
push
push
repnz
es
(bad)
jne
popf
fiadd
jno
mov
xchg
sub
stc
dec
pop
imul
add
xor
cmp
mov
(bad)
sbb
icebp
aaa
jecxz
push
push
mov
sub
(bad)
adc
xchg
ins
or
sub
jmp
mov
pop
int
jne
add
mov
xchg
mov
inc
add
mov
scas
scas
mov
ins
add
sti
jg
fs
dec
mov
xor
adc
ins
loope
and
arpl
sbb
bound
cmovge
pop
push
popa
cmp
pushf
shl
mov
jbe
sub
jmp
lods
dec
and
cmp
movs
or
xlat
mov
cmc
jbe
aad
mov
movs
pop
cmp
xchg
out
adc
sbb
lahf
out
fsqrt
aaa
jmp
jecxz
icebp
adc
cmp
ins
add
xchg
out
popa
sub
add
pop
xchg
cmp
dec
das
and
and
mov
xchg
adc
cmp
scas
add
pop
pop
test
inc
jg
add
(bad)
aas
jg
jmp
jmp
test
jb
ret
mov
inc
xor
dec
cmp
mov
xchg
addps
sbb
and
mov
jnp
outs
mov
mov
std
pop
call
or
xor
sub
test
push
xlat
sub
pop
fwait
shr
push
inc
shr
stc
shl
arpl
ret
and
repz
xor
add
out
mov
push
shr
lar
xor
or
(bad)
and
push
inc
jnp
in
icebp
mov
mov
rcl
cmp
mov
adc
pop
outs
or
xchg
xor
mov
sub
xchg
out
or
mov
daa
nop
push
outs
ins
test
outs
aas
(bad)
mov
push
or
add
outs
add
add
pop
mov
xor
stos
ins
test
aad
xor
adc
mov
sub
cmp
in
sbb
pop
lahf
test
jge
jo
lea
retf
dec
cmp
sub
mov
test
add
movs
(bad)
inc
test
xchg
pop
in
mov
test
shl
shl
add
test
popa
outs
push
mov
pop
lock
add
cmp
pop
jp
jne
inc
repz
movs
repz
mov
cmp
jbe
les
mul
jge
dec
push
jle
out
ins
shr
pop
lock
mov
mov
ins
xor
adc
pop
mov
xchg
iret
and
repz
mov
test
jo
ficomp
js
push
xchg
push
pop
fidivr
mov
mov
and
cli
and
sub
loope
call
arpl
das
xor
in
clc
sbb
scas
into
mov
pop
pop
leave
lods
out
dec
scas
sub
cli
jne
popf
iret
pop
xchg
repz
rol
fs
(bad)
jae
pusha
fst
fwait
les
out
mov
inc
mov
in
fild
hlt
faddp
add
dec
es
cli
jo
sbb
add
jecxz
inc
push
repz
mov
sar
jmp
sub
nop
jnp
repz
inc
mov
or
pop
mov
inc
(bad)
adc
jb
dec
adc
dec
ds
hlt
in
sub
int
pop
fldenv
div
fld
and
lds
imul
ins
aaa
ret
arpl
mov
into
ins
xchg
add
sub
push
gs
mov
or
ss
mov
pop
jnp
imul
and
ss
push
lds
or
rcr
addr16
nop
adc
xor
or
jl
cs
(bad)
cwde
jmp
mov
jl
mov
test
cmps
ret
in
in
inc
loop
repnz
das
mov
lods
in
int3
add
out
xor
(bad)
mov
pop
pop
js
sub
in
jns
and
int3
inc
jmp
(bad)
push
jbe
push
data16
in
inc
iret
cmp
push
inc
enter
jle
dec
ret
je
add
xor
and
xchg
nop
push
retf
fbld
shl
shl
nop
fdivr
push
imul
mov
mov
mov
sbb
data16
mov
ins
xchg
dec
test
icebp
cli
xor
shr
ds
sub
add
pop
adc
iret
pop
jp
pop
outs
dec
scas
sbb
cmp
scas
xlat
(bad)
and
(bad)
stc
sbb
xor
sub
xor
xor
arpl
pop
pcmpgtb
add
add
mov
ror
and
adc
popa
ja
scas
mov
adc
outs
(bad)
jne
and
stos
mov
xor
mov
sahf
(bad)
mov
ins
pushf
hlt
(bad)
pushf
cmps
add
jns
outs
xchg
sub
pop
call
lods
sbb
dec
rol
sub
js
adc
loop
push
jp
inc
inc
or
jno
or
clc
or
fisub
pop
fucomp
idiv
std
add
iret
inc
out
cli
jmp
neg
sbb
mov
movs
adc
push
call
push
sbb
dec
into
cmps
pop
cmp
in
add
and
cmps
pop
movs
mov
bound
mov
mov
rcr
ds
jne
pop
je
lods
imul
jp
loope
push
clc
ficomp
loope
adc
jp
jae
aaa
and
xchg
pop
stc
sbb
xchg
sbb
cwde
cmp
js
jmp
cwde
add
out
imul
mov
jmp
ss
push
fsubrp
jb
inc
pushf
mov
call
cld
fldcw
sbb
mov
push
test
daa
mov
inc
enter
std
lock
lahf
mov
fistp
test
(bad)
ffree
pusha
adc
ror
bound
fild
push
inc
fcomip
xchg
repz
lahf
xchg
mov
daa
dec
mov
fmul
mov
cwde
pop
rol
jae
pop
pushf
inc
push
hlt
clc
mov
retf
jl
cwde
movs
xchg
jmp
sub
xchg
xor
mov
mov
jl
outs
push
ss
cli
jns
dec
out
cmps
mov
xchg
inc
xchg
pop
cmp
lahf
nop
hlt
(bad)
adc
jb
pop
adc
pop
pop
adc
pushf
sub
xchg
xor
push
cmp
movs
mov
xor
aas
jmp
in
adc
cmp
sti
out
xchg
xchg
popf
retf
lds
inc
or
mov
sbb
int3
xor
rol
sub
loop
mov
call
dec
or
mov
ja
cmp
fcomp
pop
cld
idiv
mov
jl
adc
cli
adc
inc
pop
push
je
sbb
mov
repnz
cmp
jnp
clc
gs
adc
xchg
lods
mov
mov
data16
mov
popa
sbb
out
and
je
xor
sti
sti
retf
(bad)
dec
adc
xchg
retf
cwde
cmp
loope
mov
je
adc
jg
ds
mov
ss
loope
je
xor
fild
inc
mov
cmp
sub
jmp
mov
or
call
dec
fidivr
push
jg
in
fistp
fnstcw
loop
outs
cmp
int
fsubr
jg
cmps
jb
dec
mov
ret
cwde
push
or
mov
bound
pop
push
test
in
xchg
test
jecxz
out
cmp
push
cmp
inc
mov
test
in
sub
clc
rcr
mov
mov
icebp
inc
pop
leave
sub
add
jno
scas
inc
outs
lock
das
xchg
call
les
enter
xor
inc
mul
lea
push
mov
popa
inc
sub
sahf
les
mov
test
jmp
rcr
lods
lods
imul
inc
test
sbb
pop
aas
pop
jb
push
lea
movs
xlat
mov
out
jp
pop
adc
pop
stc
adc
shl
out
imul
sbb
mov
push
das
iret
dec
outs
jns
add
cmp
mov
xchg
test
adc
arpl
pop
dec
inc
icebp
shl
ja
inc
das
or
xchg
pusha
pop
add
fcomp
mov
sbb
push
arpl
call
ret
mov
sti
enter
(bad)
sbb
fst
mov
pop
cmp
or
and
jne
pop
jnp
fst
push
inc
xor
out
aaa
sub
outs
jbe
add
rcl
fisubr
xchg
sub
xchg
out
xlat
or
ret
fistp
inc
daa
cmovge
jmp
mov
aam
movs
loop
leave
cs
dec
push
imul
jae
dec
and
or
cmp
cmp
and
xor
inc
mov
pop
dec
xor
test
pop
scas
add
sbb
iret
repz
sahf
sbb
xor
jp
cmp
jge
sbb
xchg
(bad)
jns
mov
pushf
mov
das
dec
popa
stc
iret
or
jmp
jl
add
xchg
test
pop
jae
arpl
jecxz
fwait
and
jo
cs
loopne
push
mov
xchg
shl
aaa
or
ins
jmp
ins
push
mov
cmp
adc
pop
out
popa
push
test
(bad)
or
stos
jns
data16
inc
jb
inc
popf
shl
add
and
sub
jns
cmp
bound
jl
rcl
xchg
push
cmp
jno
std
mov
fsubr
pop
jae
cmp
and
aaa
xchg
imul
movs
scas
jge
adc
loopne
and
cmp
popa
mov
std
in
inc
(bad)
fcom
out
push
push
fcomp
js
sub
call
ins
jne
jnp
imul
mov
jb
push
lods
pop
cmp
(bad)
or
inc
in
mov
mov
pushf
mov
cwde
movaps
mov
push
push
mov
mov
xchg
jmp
call
fiadd
push
pop
nop
lahf
pop
xchg
shr
pop
pop
daa
jg
retf
scas
sbb
scas
cli
es
mov
rol
aad
pop
sar
push
adc
sub
sub
mov
lods
sbb
and
hlt
push
add
idiv
mov
mov
jne
js
cmp
stc
ret
pushf
je
jmp
fisttp
xor
xchg
push
xor
inc
loopne
xor
in
jbe
xchg
mov
into
cmp
jns
xchg
cld
test
or
mov
xchg
xor
jne
adc
icebp
mov
jne
and
jb
sub
dec
jl
add
inc
mov
call
loop
pushf
rol
popf
pop
rcl
enter
stos
push
lock
pop
jae
sbb
hlt
retf
and
stc
fidiv
loope
sbb
sub
push
dec
adc
cmp
xchg
cdq
jae
in
iret
dec
pop
mov
jecxz
test
pusha
sbb
outs
or
shl
cmp
or
into
aam
dec
stos
in
sub
call
call
stc
cmps
add
xor
sub
inc
xor
xchg
mov
test
div
cwde
into
xor
mov
mov
cmp
test
cmp
mov
or
mov
adc
repz
mov
out
pop
iret
fdivr
sbb
int
mov
into
mov
jns
mov
mov
aad
add
cmps
daa
or
jge
dec
xchg
test
pop
push
xchg
outs
test
adc
(bad)
pop
out
inc
aam
test
mov
push
fild
scas
sub
sbb
mov
mov
adc
and
hlt
push
sbb
push
mov
cmp
cli
xor
retf
retf
fdiv
dec
jmp
call
sub
retf
mov
call
stos
lahf
(bad)
jle
pop
push
lock
jmp
sbb
pusha
sub
pop
into
sub
and
inc
cmps
mov
mov
mov
je
cmp
in
sub
js
xlat
push
mov
ds
xor
dec
fsubr
cmp
dec
ja
or
jl
call
je
ret
and
lds
mov
mov
lods
sbb
push
jl
adc
push
(bad)
retf
push
ret
add
xor
mov
mov
mov
and
dec
push
cmp
loopne
pop
das
mov
cmp
lahf
call
push
mov
or
jg
pop
int3
int
imul
cmps
int3
int
xchg
aad
mov
pushf
xchg
cld
cld
dec
rcl
bnd
mov
mov
dec
sub
(bad)
xchg
outs
jg
cmc
mov
mov
xor
mul
or
scas
xchg
push
jg
shl
inc
popf
lea
inc
pushf
or
xchg
jecxz
dec
jnp
jmp
(bad)
(bad)
mov
in
cdq
les
jmp
jae
mov
and
inc
mov
xlat
cld
sub
test
ds
or
arpl
push
mov
or
jne
jnp
punpckhbw
ds
mov
loope
xchg
xor
cwde
out
pop
jmp
rcr
aam
(bad)
sbb
fisttp
aaa
mov
repnz
ins
ret
cdq
(bad)
arpl
shl
scas
mov
cmp
rcl
into
sar
mov
jp
mov
lds
jmp
and
pop
jp
icebp
in
pop
out
sbb
pop
das
jne
xlat
push
and
in
test
fnstcw
div
mov
sbb
hlt
leave
stc
cmp
mov
mov
pop
pop
pop
loopne
je
leave
mov
ja
clc
xor
fstp
xchg
or
movs
inc
mov
cmp
or
adc
fnstsw
xchg
(bad)
jne
and
fcmovnb
xchg
adc
mov
int
dec
frstor
cmp
cmp
out
shl
inc
mov
sti
pop
outs
imul
out
sub
cmp
inc
jnp
out
jl
sar
pop
popf
mov
mov
push
not
jbe
jne
sub
aam
loop
dec
sub
push
sub
fst
xor
dec
sbb
outs
xor
mov
stos
pop
jae
pusha
dec
jo
std
popf
mov
pop
pop
dec
mov
cmp
fnstsw
sbb
cmp
gs
xchg
jae
mov
lea
test
test
loope
mov
leave
inc
out
jne
pop
not
mov
outs
jbe
pop
mov
retf
scas
jl
mov
fmul
inc
adc
cmp
out
das
push
popf
push
lods
mov
mov
push
push
fxch
and
and
out
push
retf
or
das
inc
and
sar
or
mov
imul
ins
fldcw
cmp
sbb
mov
out
arpl
movs
out
jmp
sbb
shl
jmp
mov
jl
dec
ror
sub
test
retf
inc
pop
ret
ja
in
fstp
(bad)
pop
gs
xor
jno
cli
imul
das
add
fadd
(bad)
out
lds
fisubr
sbb
adc
xchg
mov
sbb
ds
div
test
mov
frstor
aaa
fild
mov
or
jle
stc
mov
sub
scas
jp
repz
push
imul
retf
add
in
mov
push
or
jno
cmp
jo
mov
mov
mov
out
dec
(bad)
std
xor
dec
inc
scas
std
call
retf
ret
xchg
xchg
mov
jns
stos
aaa
(bad)
mov
iret
pop
movs
or
popf
mov
ins
adc
mov
clc
int
mov
mov
adc
dec
lea
data16
imul
retf
outs
ret
mov
sub
or
pop
outs
cmp
inc
jmp
sub
(bad)
clc
mov
mov
cmps
xor
xlat
out
push
jne
rol
dec
aaa
jb
push
repz
jle
and
xor
call
rol
mov
mov
mov
(bad)
js
(bad)
sub
loopne
icebp
cmp
out
fisubr
jb
test
push
out
dec
fldl2t
dec
mov
retf
cdq
or
or
or
fmul
jno
pop
jecxz
sub
sti
fucom
xor
js
out
adc
(bad)
idiv
cwde
fxch
cld
(bad)
dec
pop
cmp
scas
daa
(bad)
repz
ja
pop
fisttp
sbb
fld
cwde
outs
mov
repz
out
mov
out
push
xchg
loopne
jnp
mov
ret
bound
mov
outs
aaa
test
and
es
adc
out
lods
cli
inc
(bad)
test
mov
outs
out
test
lahf
jmp
jbe
scas
int
add
and
add
or
outs
lds
addr16
jl
lods
sbb
cmp
xchg
and
cmps
call
cmp
adc
xor
and
cli
sbb
repnz
jl
sub
cmp
mov
repnz
in
jmp
sar
inc
mov
inc
hlt
adc
daa
cmps
xchg
push
int
mov
retf
stc
in
fisttp
mov
in
cmp
in
outs
out
xchg
aam
dec
xlat
fsubr
or
ins
ret
loopne
xchg
(bad)
clc
fstp
gs
sub
pop
or
in
dec
jmp
inc
jmp
inc
xchg
xor
pusha
fidiv
mov
jmp
mov
inc
ins
retf
lods
inc
dec
clc
movs
call
inc
leave
cmp
popf
popf
ins
and
cmc
jg
or
rcr
adc
cmp
cmps
cmps
fcom
mov
mov
jnp
push
xchg
and
xor
cmp
jl
adc
xor
push
mov
mov
mov
sahf
jmp
jnp
gs
dec
mov
in
call
into
dec
inc
daa
leave
cmp
push
mov
scas
and
je
hlt
in
pop
xlat
add
sub
and
dec
dec
scas
in
jmp
inc
ret
hlt
pop
mov
lods
imul
mov
lods
inc
cwde
(bad)
sbb
pop
jne
leave
push
stc
(bad)
inc
scas
push
mov
jnp
(bad)
fsub
jno
jne
(bad)
std
sub
sub
push
out
push
mov
iret
sbb
xchg
leave
shr
ret
(bad)
std
in
inc
out
dec
clc
sbb
dec
dec
push
jne
mov
xor
mov
je
ror
pop
pop
int3
arpl
cmp
inc
popa
mov
lea
push
stc
push
js
imul
mov
hlt
or
pop
ret
adc
cmc
rol
push
(bad)
mov
jmp
pop
js
mov
shl
mov
test
or
xchg
out
call
mov
loop
iret
xor
stos
xlat
idiv
fwait
mov
jo
jp
cmp
fadd
(bad)
aad
or
push
mov
clc
inc
xlat
into
jecxz
push
cmc
push
daa
xchg
mov
push
mov
xchg
adc
cli
jl
pop
fcomp
test
mov
push
add
mov
mov
out
int3
outs
mov
add
aas
mov
push
mov
pusha
mov
mov
jno
jmp
movs
cmp
(bad)
les
aad
adc
shl
mov
and
sti
xchg
fwait
push
int3
xchg
lods
ins
loope
mov
sahf
pop
mov
push
hlt
inc
mov
push
jb
movs
sahf
sti
sub
mov
xlat
daa
pop
pop
mov
push
xchg
mov
arpl
jnp
mov
sub
xchg
xlat
ficomp
push
imul
neg
dec
test
in
(bad)
push
mov
or
xor
cs
fst
xchg
addr16
or
lds
pcmpeqd
mov
sbb
xor
push
sub
jmp
sub
iret
ss
xchg
rcr
push
stos
iret
(bad)
or
cs
xor
pop
jae
cmps
cs
popf
(bad)
mov
xor
add
add
fimul
addr16
inc
pop
movs
out
jp
addr16
xor
inc
retf
ins
or
shr
xor
push
jg
stc
mov
aam
call
adc
fisttp
pop
in
inc
jb
scas
(bad)
cmp
jg
into
mov
not
add
aaa
jno
add
xchg
outs
cmp
jno
push
in
idiv
shl
in
inc
xchg
sbb
loope
into
push
scas
dec
cmp
sbb
rep
(bad)
dec
cmp
mov
push
lods
out
out
call
rol
test
loope
loopne
jo
(bad)
nop
cmps
(bad)
loop
add
ret
into
jne
pusha
xchg
jg
or
dec
out
int3
(bad)
lods
lds
les
(bad)
push
pop
cmp
clc
jmp
not
movs
out
push
je
stos
mov
xor
(bad)
jge
test
jno
(bad)
mov
and
in
stos
out
or
aas
mov
cwde
push
pushf
rcl
mov
mov
scas
call
adc
inc
push
out
cmp
(bad)
pop
dec
mov
fsub
xor
pop
fbld
mov
int3
xchg
lahf
or
push
jmp
fcmovu
jp
cdq
shl
lods
pop
xchg
push
mov
shl
(bad)
push
sub
mov
imul
movs
jo
(bad)
popf
lock
dec
xor
out
fistp
data16
mov
dec
fcmovne
add
movs
icebp
enter
mov
xchg
imul
mov
lods
cmps
ins
sbb
xor
prefetch
(bad)
test
into
xchg
ffreep
sti
imul
cvtpi2ps
rcl
mov
xor
lea
loop
call
mov
push
into
in
add
das
in
adc
lahf
jg
jecxz
jmp
cmovp
lods
ds
aaa
clc
out
adc
fnstenv
aad
shl
repz
scas
mov
pop
sub
daa
fwait
in
loop
xor
jbe
push
sub
stos
out
adc
aam
test
cmp
out
mov
jecxz
adc
loope
mov
adc
push
scas
jge
loope
(bad)
adc
pop
mov
inc
jecxz
mov
adc
test
pop
xchg
leave
scas
cmp
mov
xor
or
jle
call
mov
adc
inc
cmc
push
lahf
xor
xchg
mov
shl
adc
and
popf
jp
mov
mov
cmp
sub
or
mov
add
into
test
out
or
cmp
int3
mov
inc
sub
nop
add
fsubr
xor
lods
jmp
cmc
cmp
outs
ja
cwde
mov
stos
cmp
int
dec
(bad)
aam
mov
into
data16
hlt
dec
aaa
je
pop
sbb
mov
jmp
pushf
into
push
push
mov
dec
jne
mov
push
jns
into
repnz
mov
pushf
add
sub
hlt
mov
lahf
push
mov
int
mov
pop
test
mov
in
jp
cmps
lahf
sbb
inc
jae
push
mov
adc
mov
or
nop
xchg
fidiv
push
xor
int3
ret
in
(bad)
or
push
pushf
mov
clc
xlat
std
retf
int
sub
sahf
lds
inc
into
jne
jnp
cmp
fs
nop
jg
sbb
loop
xor
sbb
mov
push
xchg
in
ret
push
fcomp
ror
addr16
xchg
mov
ror
je
sub
int3
mov
add
in
xchg
push
push
ss
pop
(bad)
(bad)
cld
cmp
jmp
or
and
pop
mov
je
adc
dec
xchg
sbb
jg
mov
mov
cmp
jnp
psrlq
cmps
mov
pop
movs
lahf
jo
and
push
test
jge
nop
dec
cmps
(bad)
sub
(bad)
xchg
in
fiadd
jb
fdivr
scas
dec
mov
sti
push
pop
push
add
adc
cvtdq2ps
jns
test
jl
retf
loopne
pop
stos
sahf
push
inc
jo
push
popf
lahf
sbb
std
pushf
sub
xor
std
mov
cmp
dec
(bad)
hlt
call
inc
pop
clc
(bad)
inc
repz
jmp
push
push
push
and
aas
aam
or
lea
cmps
dec
out
dec
or
pop
fbld
cmps
aam
aaa
imul
les
jno
(bad)
js
push
xor
jecxz
or
xchg
int3
movs
cmp
in
pcmpgtb
push
icebp
enter
aad
call
addr16
out
adc
xchg
cwde
out
punpckhdq
(bad)
sub
outs
test
jle
test
mov
ins
jb
and
iret
pop
scas
into
mov
dec
pop
mov
mov
mov
cmps
dec
mov
lahf
ficomp
(bad)
jo
sub
arpl
jns
test
out
ins
adc
in
fwait
xchg
test
mul
inc
aam
mov
shr
dec
fisubr
push
in
outs
ror
adc
sti
movs
stos
out
dec
jno
add
(bad)
mov
mov
mov
cdq
ja
cmc
aad
xor
inc
leave
jp
push
in
hlt
xchg
lock
dec
adc
pushf
fs
inc
cmp
pop
fistp
sar
sbb
mov
and
stos
xchg
xor
xlat
into
push
scas
inc
adc
sahf
(bad)
imul
jo
jbe
fs
retf
mov
add
fwait
and
test
and
cmp
shr
push
into
jmp
jmp
adc
dec
pop
adc
retf
push
or
retf
mov
sub
(bad)
clc
xchg
shr
mov
enter
cmp
and
mov
sbb
out
mov
ror
mov
(bad)
jmp
addr16
cmp
in
ins
dec
mov
int
jge
pop
and
xor
mov
sbb
mov
scas
pusha
jle
pop
push
mov
data16
arpl
mov
fwait
sti
(bad)
pop
inc
inc
outs
jecxz
mov
pop
dec
pusha
push
daa
inc
(bad)
mov
scas
push
mov
jmp
pop
movs
cmp
mov
pop
scas
jb
push
fsub
adc
dec
mov
adc
imul
js
mov
daa
ret
mov
int
inc
int3
sbb
pop
pusha
sar
aad
ja
call
jne
jnp
dec
outs
icebp
cmp
dec
(bad)
jae
outs
popa
sub
loopne
ins
movs
mov
mov
test
imul
add
bound
cdq
inc
popf
sub
push
pop
jnp
mov
fidiv
into
and
inc
fcom
lds
cmps
push
pusha
push
call
mov
inc
adc
stos
aaa
sub
inc
mov
cld
pop
mov
ret
pop
ss
cmp
cmp
jb
cmp
adc
pop
gs
(bad)
lods
les
pop
xor
icebp
int3
retf
enter
stc
inc
mov
dec
clc
retf
rcr
cld
xchg
neg
sub
jns
jecxz
add
cmp
jns
xchg
mov
pop
outs
mov
cmp
mov
xor
dec
cs
jns
test
lods
and
push
sub
nop
aas
idiv
and
cli
(bad)
add
cmp
sbb
push
out
ds
xchg
fld
cmp
fsub
xor
xor
and
sahf
and
or
jle
mov
stc
std
lahf
aas
mov
rcr
cli
iret
jo
(bad)
push
jb
pop
movs
push
and
xor
push
cmp
or
add
sar
dec
int
adc
pop
adc
nop
mov
add
into
sar
das
(bad)
jmp
ds
rol
imul
and
(bad)
inc
pop
push
pusha
push
push
push
imul
movs
loopne
pop
test
pushf
cmp
cmp
pop
jle
xchg
jno
lods
mov
dec
and
mov
in
ins
inc
das
mov
mov
dec
jl
sbb
pop
daa
mov
push
xor
inc
imul
adc
mov
call
dec
push
jb
or
fcom
popa
cdq
test
mov
in
adc
fisttp
dec
or
and
int3
movs
dec
cmp
loopne
push
(bad)
in
and
inc
(bad)
stos
sbb
out
test
jne
es
ss
or
dec
adc
daa
push
lds
daa
pop
stc
mov
jl
jmp
sahf
dec
add
sub
call
mov
adc
cli
stos
cs
sbb
ins
rcr
sti
dec
pop
stos
daa
and
adc
jnp
cmp
push
or
mov
jl
adc
push
adc
(bad)
pusha
and
aam
aam
jmp
mov
test
(bad)
popf
dec
icebp
adc
push
mov
retf
imul
sbb
inc
ins
and
and
add
(bad)
js
mov
out
jae
pushf
sbb
out
pop
(bad)
xchg
aam
icebp
jo
xor
(bad)
neg
sar
inc
retf
sub
sets
in
pop
inc
jnp
jle
jg
mov
cmp
fild
push
xchg
xchg
popf
inc
(bad)
mov
lds
inc
pop
xor
ficom
sub
ror
or
mov
jo
mov
mov
sbb
xchg
push
(bad)
(bad)
sub
ror
call
sub
mov
aad
or
inc
cmp
jmp
jle
lahf
ds
scas
sbb
push
(bad)
pop
add
inc
sahf
stos
emms
repz
sub
and
pop
or
pop
pusha
jp
push
mov
daa
or
adc
rcr
cmp
cmc
dec
cmc
inc
ds
jmp
test
retf
mov
movs
xor
aas
ins
add
or
cmp
mov
addr16
adc
adc
mov
add
test
nop
inc
lods
mov
push
bound
add
out
not
pushf
xor
sbb
cmps
ins
jmp
pop
and
lods
xchg
add
pop
mov
push
shl
and
dec
push
jnp
test
inc
mov
jl
add
popa
cli
and
pop
push
mov
retf
adc
sub
rcl
mov
arpl
movs
sbb
dec
mov
inc
not
pop
sbb
mov
js
push
movs
or
addr16
push
xlat
adc
fwait
cmp
sub
cs
inc
mov
(bad)
aam
imul
xlat
fsub
pop
and
and
ins
cmps
jmp
in
cmp
xchg
jo
imul
stos
xchg
cs
jne
mov
inc
xchg
sub
mov
hlt
test
inc
daa
sahf
inc
cmc
xor
lods
mov
mov
daa
dec
mov
sub
cmps
movs
pop
sub
xor
mov
paddsw
xchg
jne
and
test
shl
sti
mov
jae
enter
aam
sub
lahf
pop
push
lds
xchg
jp
push
enter
pop
jmp
mov
data16
popf
cmp
or
mov
xchg
int
mov
pop
enterw
pop
pop
loope
push
jp
push
sub
lock
ins
mov
add
movs
pop
ret
cmp
xor
lds
mov
(bad)
in
jmp
push
xchg
les
push
je
addr16
lods
push
aad
imul
ret
xlat
push
xor
push
(bad)
cli
bound
add
cmc
push
mov
dec
rcl
sbb
outs
loop
push
retf
je
popf
add
aas
mov
test
out
(bad)
enter
pop
push
rol
dec
mov
dec
dec
fucomi
mov
jmp
rol
adc
ds
dec
(bad)
xchg
or
lods
dec
mov
cmp
pop
mov
fldenv
mov
dec
test
int3
mov
dec
sub
outs
pop
inc
ds
adc
or
mov
jno
push
mov
dec
leave
dec
cmc
push
fmul
dec
dec
and
(bad)
jne
inc
mov
lock
popa
movs
inc
cmp
sub
sbb
xchg
mov
pop
es
inc
jl
movs
cmp
cmp
add
dec
jo
jl
int3
push
or
jb
mov
ret
cmp
(bad)
lds
movs
outs
je
test
sub
xchg
xor
loop
inc
mov
or
mov
and
sub
mov
sahf
dec
hlt
and
adc
xchg
lods
rol
add
jno
push
lods
test
and
js
ja
sbb
out
lods
in
or
or
xor
mov
cdq
and
xchg
es
adc
push
in
out
jg
aad
jb
outs
jb
imul
add
pop
in
into
das
mov
es
fimul
fadd
ret
and
inc
sbb
in
sbb
aam
loopne
cmp
and
ret
fsubr
pop
inc
enter
ficomp
sub
dec
pop
int3
and
js
es
enter
arpl
sub
in
or
pop
std
push
ror
push
inc
adc
dec
xor
cmp
cmps
cs
xchg
inc
xor
adc
mov
push
into
mov
cmp
mov
mov
xchg
(bad)
call
xchg
jp
or
and
xchg
pop
hlt
ins
rol
add
sbb
cmp
fs
mov
lock
lock
mov
ror
ds
add
sar
imul
pop
pop
mov
sahf
pop
mov
rol
call
in
cmp
pop
xchg
jle
jnp
sbb
dec
ins
mul
push
pop
pop
mov
mov
iret
add
cmp
nop
inc
xchg
xor
xor
out
dec
ret
mov
push
jmp
xchg
mov
in
cmova
xchg
xchg
push
cmps
cmp
test
cmps
nop
xchg
test
shl
fist
mov
sti
inc
push
mov
movs
jnp
push
pop
loop
out
or
pop
mov
mov
mov
and
test
jmp
mov
inc
add
jns
in
push
pop
ins
xor
aas
pop
cdq
cmp
test
inc
sbb
js
movs
or
cwde
add
xchg
loop
pushf
inc
lock
add
and
push
(bad)
sub
or
pop
inc
pop
mov
and
pop
(bad)
imul
sub
push
scas
xor
out
stos
aad
add
add
cwde
out
pop
stos
add
fdivp
inc
pop
ss
sub
ins
(bad)
jno
and
push
bound
adc
xchg
push
nop
push
xchg
cmp
xchg
fnsave
gs
xchg
movs
out
and
retf
xchg
adc
push
rcr
mov
xor
pop
mov
pop
mov
add
ficom
cdq
sub
push
mov
inc
push
fidiv
out
and
test
adc
stos
daa
push
pop
add
sbb
adc
call
(bad)
xor
dec
inc
jecxz
(bad)
and
push
sub
and
mov
aam
jmp
js
sbb
sub
jg
js
sbb
fnstsw
jl
iret
lahf
fpatan
sti
aas
icebp
(bad)
sti
out
mov
jle
ins
jge
fidivr
ret
or
enter
pop
pop
movs
pop
xchg
cmp
cmps
(bad)
fsub
sub
cmp
add
mov
mov
mov
pushf
retf
stos
push
ficomp
in
mov
outs
and
jae
cmc
mov
daa
push
repnz
je
iret
mov
int3
xlat
inc
clc
mov
in
xchg
or
(bad)
cmp
sti
(bad)
push
xchg
sbb
test
sub
shl
mov
dec
shl
std
adc
js
mov
pop
fdivr
std
dec
pop
fbstp
push
and
dec
sti
sti
lds
jae
jge
xor
popf
jge
outs
jae
inc
dec
in
iret
cmps
test
and
pop
sti
jbe
mov
dec
fcomp
arpl
adc
loopne
or
dec
xchg
xor
adc
repz
scas
sbb
jge
jnp
mov
(bad)
push
mov
push
pop
xchg
pop
es
or
data16
in
adc
mov
mov
mov
mov
and
xchg
lds
dec
dec
cmp
and
mov
mov
xchg
mov
out
int3
sbb
cvtps2pi
jmp
popa
pop
add
inc
ins
adc
or
jge
xchg
add
mov
jne
cmps
xlat
or
adc
sbb
sbb
mov
jbe
jge
adc
fdiv
and
rcl
cwde
push
sbb
je
mov
loope
sub
or
fst
sub
pop
jp
out
or
or
sub
cmps
fcmovnb
mov
fcmovu
xchg
xchg
sub
adc
lods
mov
adc
or
test
jae
pop
aad
sbb
push
adc
test
mov
xchg
push
out
mov
or
jl
adc
fsub
pop
movs
jne
mov
jb
lds
imul
xchg
push
jae
mov
out
mov
adc
inc
(bad)
fwait
cmp
test
dec
inc
ror
push
jb
xor
pop
mov
leave
test
mov
inc
adc
pop
ds
fbld
inc
loopne
lods
js
mov
(bad)
test
jno
sbb
scas
imul
popa
mov
push
shr
jmp
nop
dec
div
in
popf
inc
mov
pop
cmp
mov
pop
push
in
rcl
xchg
ret
cs
or
aam
ja
imul
leave
popf
dec
ret
outs
cmp
mov
ret
pop
test
stos
ins
les
cdq
imul
repz
lods
retf
pusha
pop
adc
mov
adc
cs
mov
pop
xchg
lock
or
mov
lock
fwait
xchg
sbb
lock
mov
jmp
inc
and
pop
aad
lock
jns
mov
addr16
outs
jmp
inc
jp
xchg
das
mov
outs
pop
adc
in
push
pop
mov
sahf
xchg
(bad)
cli
lds
push
push
fwait
adc
jae
cdq
inc
push
and
mov
or
out
sub
int3
lds
mov
jno
push
inc
sub
adc
dec
jo
pop
xor
sbb
daa
mov
push
sub
sbb
xchg
and
jmp
and
fwait
sub
rcl
inc
dec
jns
mov
outs
mov
rol
push
and
mov
and
and
and
mov
mov
jmp
mov
xor
push
push
jmp
jns
in
cmps
add
jno
sub
cmp
xchg
test
repnz
out
call
add
mov
shr
pop
sbb
ins
mov
mov
fcom
mov
rol
sti
stos
jp
gs
fistp
cmps
xlat
mov
mov
repnz
sbb
mov
movs
call
test
pop
mov
dec
stos
nop
lods
fdiv
lods
mov
adc
sbb
ja
jl
jb
pop
add
movs
dec
leave
lea
jbe
and
adc
ret
or
shr
xor
xchg
and
ins
ins
popf
jno
inc
xor
stos
arpl
dec
mov
sbb
inc
inc
jne
jb
jno
cmp
or
lahf
rol
fld
add
ss
mov
hlt
xchg
inc
scas
push
push
loop
or
outs
cmp
cmp
xchg
xlat
int3
push
add
ror
pop
sub
cmp
push
daa
jo
cwde
rcr
jns
loopne
cmps
(bad)
mov
xchg
cmps
or
cmps
xor
lds
ins
mov
jno
sbb
ja
movs
and
sub
into
sub
or
mov
(bad)
adc
sub
mov
xor
sub
sbb
daa
mov
leave
jno
lods
(bad)
mov
mov
ja
and
aam
out
inc
ja
ret
in
cwde
and
inc
leave
frstor
adc
inc
pop
push
(bad)
into
out
cmp
mov
pop
test
stos
mov
sbb
retf
jp
mov
push
xor
repnz
or
sub
les
lods
aas
jp
and
add
xlat
xor
mov
sbb
inc
popf
enter
mov
push
push
std
ret
push
movs
(bad)
pop
call
dec
sbb
into
cmp
cmps
pop
pop
jns
aaa
push
push
aaa
mov
pop
push
arpl
mov
test
icebp
inc
jmp
inc
outs
add
mov
mov
(bad)
cli
xchg
outs
or
adc
push
movs
je
xor
bound
dec
sub
and
ins
sbb
mov
sbb
addr16
jg
push
in
push
xchg
ret
inc
les
xchg
and
push
mov
imul
push
mov
pop
call
out
or
add
adc
fisubr
xchg
leave
or
jne
cmp
or
out
sub
push
retf
add
sub
std
xlat
enter
shl
cmp
mov
xor
ja
push
(bad)
lea
hlt
stos
loop
push
jo
push
sub
xor
pop
sub
mov
dec
minps
in
shr
pop
mov
dec
sbb
sub
mov
ds
adc
xor
dec
xchg
push
movs
or
jecxz
xchg
stos
fld
xor
pop
popa
mov
test
mov
jo
or
pop
enter
clc
dec
cs
cmp
jae
sub
pop
add
retf
xor
and
or
xchg
fdiv
mov
sahf
ins
push
pusha
mov
repz
(bad)
or
sbb
fisttp
inc
inc
dec
xor
xor
cmp
sub
stos
aaa
cmc
inc
test
push
mov
cmp
mov
test
and
jo
cwde
mov
push
xchg
xor
xchg
push
pop
push
lahf
outs
mov
lods
vpperm
rcr
or
retf
mov
add
push
(bad)
mov
pushf
push
sub
cmps
(bad)
fs
sbb
shr
or
test
out
add
cmp
sbb
mov
cmp
xor
push
push
adc
push
xchg
repz
test
ror
xlat
or
jb
(bad)
mov
cmps
outs
mov
push
cmp
inc
mov
popa
or
jno
push
add
sub
fisubr
mov
sbb
mov
loop
cmp
push
lea
mov
sar
add
xor
sti
(bad)
sub
push
and
es
pop
aaa
mov
mov
push
push
xchg
mov
inc
in
push
fnsave
xor
adc
fidivr
mov
add
add
mov
or
dec
mov
int
jne
mov
push
jo
es
jg
xor
sbb
push
addr16
inc
sub
cdq
mov
and
inc
xlat
sbb
dec
fidiv
and
push
gs
imul
leave
jmp
push
ja
jecxz
push
test
popa
pop
adc
imul
push
adc
cmp
mov
and
mov
cmp
popa
nop
daa
stc
addr16
xchg
pop
call
in
loopne
in
test
fs
mov
xor
push
lock
test
ret
loop
and
cdq
sbb
mov
xchg
push
ss
fmul
push
lahf
pop
add
arpl
xlat
push
rcr
fbld
ret
outs
xor
xchg
fnstsw
xchg
sub
sbb
xchg
loopne
xor
ficom
pop
test
ins
mov
jmp
idiv
cmp
sbb
lock
leave
(bad)
std
rcr
xchg
clc
ss
or
inc
mov
push
pushf
push
adc
cs
jmp
mov
push
and
je
xchg
pushf
mov
and
cmp
jb
fadd
jp
lock
shl
test
add
lds
xchg
rol
js
cwde
test
inc
lods
lock
or
cmps
iret
lds
inc
loopne
adc
ss
add
jns
xchg
les
pop
xchg
jb
scas
cmp
stc
xchg
and
xchg
xchg
bound
push
movs
in
and
(bad)
pusha
sbb
pop
sbb
pop
(bad)
sub
sub
mov
pop
test
ret
add
jo
xor
test
icebp
outs
popa
inc
or
mov
bound
push
xchg
test
fwait
rol
not
imul
or
xchg
or
shl
pop
mov
pop
push
pop
xchg
mov
xor
sub
scas
xor
pop
jae
loope
jae
cdq
adc
stos
add
push
sub
retf
ins
(bad)
call
test
jmp
mov
in
(bad)
xchg
es
dec
add
jo
fisub
fsubr
outs
int
jae
pop
mov
push
fstp
sbb
add
ins
pop
gs
mov
neg
push
inc
adc
adc
pop
mov
inc
stc
lods
in
or
pushf
ret
fwait
dec
lahf
or
pop
dec
mov
iret
mov
adc
movs
(bad)
sbb
inc
jne
push
add
xor
mov
scas
shr
mov
sbb
add
pop
push
out
pop
repz
xchg
(bad)
jns
movs
xor
jno
sbb
loop
jae
push
das
and
or
int
jbe
fcomp
bound
dec
dec
js
xlat
mov
sub
add
lea
je
loop
sub
(bad)
pop
adc
test
or
ins
leave
test
outs
mov
sub
dec
in
out
mov
fld
fcom
ret
movs
sahf
sbb
inc
leave
aad
cmp
das
xor
scas
cmp
ins
fbld
aaa
out
(bad)
and
jnp
xor
mov
jae
fiadd
mov
gs
push
rcr
ins
mov
out
cmp
addr16
cmp
and
pop
sub
scas
add
mov
xor
leave
mov
inc
outs
xor
sbb
or
rcr
sub
in
clc
dec
ret
int3
pusha
scas
push
adc
enter
sbb
adc
pusha
add
add
adc
lock
and
push
or
pop
add
push
sahf
jmp
dec
pop
xor
dec
mov
pop
mov
pop
mov
inc
mov
push
stc
adc
xor
mov
(bad)
jmp
repnz
pop
fsub
adc
and
jnp
pop
jl
or
push
push
pop
shl
pop
fisttp
push
das
into
ja
int
clc
aad
inc
jo
cli
retf
or
cli
xchg
mov
dec
cmp
pop
fstp
movs
mov
dec
sbb
sahf
mov
jb
and
xor
retf
ja
sub
xor
push
cmps
pop
mov
scas
aam
adc
sbb
test
(bad)
sub
ins
(bad)
lods
adc
push
mov
adc
out
sti
sbb
fdiv
inc
(bad)
dec
stos
cmp
dec
jmp
sub
ret
retf
in
retf
cmp
loopne
or
jl
pop
neg
mov
add
jne
leave
jno
sahf
retf
xchg
dec
dec
cwde
cdq
jmp
enter
or
das
scas
aaa
aas
mov
movs
loope
shl
xchg
mov
add
jg
pop
jbe
aas
xor
shr
mov
loopne
jg
cmp
hlt
aas
push
pop
sub
test
ss
inc
mov
ins
ret
fwait
push
outs
pop
loop
mov
push
push
int
daa
out
lods
sub
jb
sbb
dec
stos
xchg
mov
mov
fst
sbb
inc
hlt
mov
sub
xor
sub
xchg
push
sub
lods
push
fsub
fnstsw
aam
ins
or
ret
hlt
enter
ins
pop
and
aas
mov
sbb
and
sub
push
jmp
dec
mov
pop
(bad)
pop
(bad)
fwait
clc
hlt
stos
test
jp
dec
jge
mov
arpl
xor
scas
sub
mov
pop
and
jmp
shl
jo
jb
icebp
fisttp
jecxz
push
dec
scas
es
cmp
and
ins
cmp
mov
out
or
mov
mov
std
jns
sahf
aaa
fimul
inc
aad
sub
adc
mov
loop
mov
xchg
pop
lods
mov
jne
xchg
inc
mov
adc
ins
xchg
pop
jns
out
push
std
into
popa
xchg
adc
jae
push
push
jnp
xor
test
loope
push
test
ret
aam
and
push
stc
lea
or
xchg
mov
test
push
push
loope
cmc
retf
aaa
mov
shl
pop
(bad)
add
pop
or
and
or
in
sub
and
cmps
mov
push
adc
movs
call
test
in
call
jp
shl
ss
or
outs
sbb
stos
cmp
mov
out
loopne
xchg
dec
or
dec
test
cmp
sub
rcl
fild
mov
jmp
sbb
in
pusha
enter
push
fiadd
dec
xor
mov
inc
outs
movs
mov
inc
adc
jle
dec
adc
(bad)
movs
stos
xor
pop
ret
jo
xchg
inc
rep
fldlg2
repnz
jecxz
int
mov
(bad)
aam
pushf
inc
or
inc
sub
add
mov
pop
mov
pop
jle
jae
pop
jl
push
xor
imul
mov
and
leave
out
adc
stos
xchg
inc
pop
aam
xchg
add
lea
jb
push
xchg
fidivr
movs
jns
(bad)
cmc
fistp
xchg
outs
mov
into
inc
cmp
sub
push
popa
cmp
add
test
sub
add
add
lds
imul
jg
dec
std
dec
jno
js
(bad)
shr
loopne
adc
or
call
adc
add
dec
call
call
mov
ja
jmp
enter
popa
cli
adc
(bad)
dec
cld
mov
xor
sahf
adc
fwait
mov
aad
ss
and
adc
sub
ds
inc
add
mov
jl
or
add
xor
jmp
(bad)
add
or
fdiv
push
in
ficom
mov
ret
dec
and
mov
mov
fld
sbb
aaa
mov
fist
aas
call
mov
ds
mov
out
aam
push
sbb
and
fcom
adc
mov
mov
fmul
ins
jae
xor
sub
mov
in
jmp
icebp
out
mov
or
push
and
or
shr
xchg
(bad)
sub
test
mov
dec
mov
stc
retf
sub
(bad)
xor
xor
outs
push
ds
popa
pop
cmps
push
pusha
(bad)
into
mov
test
loope
repnz
cwde
and
xchg
cdq
and
cwde
das
lds
jg
add
dec
sub
(bad)
cmp
jl
call
add
cmp
sbb
data16
jle
ret
sub
sbb
fst
daa
push
stos
mov
dec
mov
ja
mov
lock
lea
and
scas
lea
mov
or
push
adc
sub
int
cmp
add
mov
or
jmp
aas
(bad)
imul
xlat
dec
pop
loopne
fwait
js
and
sbb
mov
sub
cli
mov
bound
mov
inc
cmp
mov
cmp
(bad)
retf
pop
and
ins
pusha
mov
and
sbb
push
jmp
ret
int3
dec
mov
jmp
fdivr
lahf
inc
(bad)
and
mov
test
add
inc
and
cdq
dec
outs
xchg
or
fs
loop
sub
cmp
shl
lea
stos
cmp
push
retf
stos
fs
test
gs
or
outs
test
shl
push
dec
pop
cli
pop
mov
add
sbb
mov
cmps
std
stc
mov
mov
xlat
and
jne
xchg
sahf
adc
hlt
mov
inc
bound
aas
dec
pusha
mov
push
xadd
cmp
stc
(bad)
fdivr
ret
in
test
jae
shl
adc
add
add
adc
xchg
rcl
(bad)
push
(bad)
xor
jmp
push
ins
add
xor
call
or
inc
repnz
inc
adc
xchg
js
mov
mov
push
ss
test
es
ror
pushf
call
jle
(bad)
sub
or
shr
dec
sar
pop
test
push
aam
sub
(bad)
loop
aas
inc
daa
test
pop
mov
or
dec
sub
sar
or
scas
retf
adc
mov
out
xchg
add
add
mov
retf
jp
fmul
test
gs
jmp
ja
or
call
mov
sub
mov
mov
mov
div
xchg
loope
mov
sub
pop
xchg
cs
dec
adc
ds
retf
mov
movs
xchg
and
jg
xchg
cdq
or
dec
dec
test
stc
sbb
and
sub
mov
pop
inc
pop
test
push
clc
addr16
pusha
fistp
mov
unpckhps
cmp
mov
add
mov
inc
xor
scas
test
in
enter
movs
js
and
sbb
or
retf
add
cmp
xchg
imul
add
add
xchg
jle
push
xor
iret
inc
cmc
neg
fisubr
shr
pop
imul
sub
jbe
rcr
aad
mov
mov
in
xlat
dec
in
and
or
stc
dec
fsub
sti
push
sti
pop
lds
sub
inc
shr
loop
inc
cmp
dec
(bad)
xor
push
push
aas
or
sbb
pop
imul
and
inc
int3
imul
ss
pushw
rcl
es
mov
or
movs
push
push
or
dec
mov
inc
or
push
sbb
retf
aas
mov
xlat
adc
push
ins
test
ja
pop
push
vmwrite
adc
push
sub
scas
imul
jno
pop
xchg
cld
adc
pop
(bad)
fmul
inc
fs
lds
out
arpl
xchg
jo
mov
stos
pop
icebp
arpl
fldenv
mov
sub
cmp
jbe
iret
leave
sub
iret
mov
inc
or
push
dec
call
xchg
mov
push
sbb
mov
dec
lock
cmp
add
push
or
jmp
xchg
jg
ja
mov
nop
or
and
dec
inc
pusha
js
test
sub
or
arpl
sub
sub
dec
xor
and
fwait
in
adc
sbb
adc
push
mov
lds
jae
pop
imul
adc
dec
(bad)
clc
daa
mov
xchg
adc
cdq
cmp
mov
and
and
int3
mov
fimul
jge
scas
js
xor
xor
jl
jmp
xchg
pop
std
arpl
sbb
ss
mov
xchg
and
aad
pop
xchg
push
bound
cmp
inc
sbb
mov
bound
in
mov
addr16
push
sub
cmp
cmp
cmp
lds
xor
in
inc
sbb
in
add
inc
xor
pop
cmps
call
sbb
xor
gs
push
push
cmp
dec
fisub
jo
aad
ja
xchg
stc
pop
adc
cld
mov
inc
mov
or
or
inc
add
push
nop
and
inc
rol
sbb
and
leave
aas
jl
scas
(bad)
xchg
push
add
mov
push
mov
cmc
mov
fadd
add
or
movs
retf
outs
pop
sub
mov
scas
in
push
aam
and
dec
sti
ss
mov
fld
aas
dec
push
mov
cmc
mov
mov
mov
mov
jmp
jecxz
xlat
les
mov
push
push
(bad)
das
outs
xchg
inc
jo
mov
adc
dec
(bad)
lods
dec
fs
fiadd
aam
icebp
aaa
stos
scas
loop
push
jns
call
sub
nop
movs
push
mov
cmp
cmp
push
mov
shr
and
mov
sub
xchg
and
imul
aad
cld
sar
je
imul
push
daa
mov
sbb
call
push
or
push
test
cli
xchg
fimul
imul
ret
dec
sbb
push
mov
ret
pop
jbe
sub
xor
dec
jmp
clc
sbb
sub
add
sbb
cmp
repz
mov
cmps
cmp
in
shr
ins
leave
dec
imul
mov
(bad)
adc
dec
sti
or
call
or
pushf
mov
pop
int
or
and
lods
xchg
sub
xchg
xor
cld
mov
arpl
test
cli
aam
sbb
ds
xor
mov
sar
and
jmp
xchg
push
mov
mov
sbb
out
xor
mov
sbb
out
stos
ins
loop
test
ss
repnz
mov
jge
je
cwde
(bad)
sbb
mov
pushf
out
xor
push
ret
jg
fisubr
adc
ror
sub
jg
scas
push
test
gs
push
arpl
pop
jecxz
add
mov
or
outs
mov
lock
cdq
pop
lods
adc
sti
mov
dec
dec
pop
or
add
mov
dec
fst
dec
xchg
jnp
xchg
aam
pop
loope
loope
stos
push
(bad)
rol
jmp
nop
mov
add
dec
adc
popf
imul
imul
inc
and
nop
sub
pop
iret
sbb
shl
cli
rol
and
mul
cld
sahf
jecxz
pop
adc
add
jo
mov
loop
push
adc
fwait
out
adc
jl
adc
in
cmp
movs
cmps
pop
je
in
movs
sbb
mov
and
and
int
loop
sbb
jmp
(bad)
stos
int
sahf
or
dec
cmp
retf
ret
dec
push
mov
adc
ja
sub
xor
in
adc
in
cdq
xor
inc
mov
lds
inc
xchg
jbe
or
or
cli
(bad)
test
push
adc
pop
xor
imul
adc
jo
dec
rcr
js
ins
sbb
jge
dec
rcl
mov
add
add
mov
push
and
into
test
cmp
adc
and
mov
fcomp
and
leave
idiv
retf
jmp
into
mov
loope
pop
mov
cld
cmps
jmp
lods
push
xchg
mov
fstp
or
mov
repz
jbe
push
arpl
sbb
int3
test
sub
bound
push
int3
xchg
mov
ficomp
adc
test
xchg
sub
or
aaa
or
call
loopne
imul
and
adc
jne
add
outs
push
cwde
mov
(bad)
(bad)
jg
add
aam
nop
inc
push
js
icebp
add
int3
test
shl
pop
fisttp
xor
xor
daa
pop
pop
call
push
ja
(bad)
cmp
xor
mov
mov
mov
push
stos
cmps
push
inc
jmp
shl
xchg
add
jb
xlat
es
adc
push
rcr
xchg
test
xchg
jmp
xlat
mov
or
dec
lock
sbb
test
mov
test
cmp
pop
adc
iret
inc
cmp
dec
inc
mov
inc
mov
push
or
jns
mov
adc
sahf
sbb
int3
jp
repnz
mov
jb
int
add
dec
outs
ret
sbb
mov
(bad)
xor
and
jae
retf
sub
pop
ja
test
push
ins
retf
aad
icebp
jno
fild
pop
pop
(bad)
cmp
cdq
lods
pop
sbb
outs
push
inc
je
dec
cmp
cmp
fs
push
movs
inc
inc
inc
js
cmp
inc
repnz
shl
leave
push
inc
call
push
pusha
sub
sub
or
sub
dec
ins
xchg
mov
fild
outs
stos
cmc
jl
fidiv
mov
ret
sub
lods
xchg
call
or
xchg
scas
scas
sub
stc
mov
sub
out
fidiv
jl
adc
xchg
xor
mov
and
dec
jns
and
or
ret
pop
popa
add
or
mov
retf
pop
jne
stos
fs
sub
aaa
push
nop
xlat
mov
out
and
pushf
xchg
ret
push
push
sub
jns
das
xchg
(bad)
(bad)
repz
mov
bound
js
rcl
daa
push
popa
push
mov
jmp
rcl
shr
and
or
movs
dec
push
or
popf
sub
in
cmp
adc
mov
aas
rcr
dec
lock
jg
cmp
pop
inc
cli
je
xchg
inc
aad
sbb
xchg
or
push
test
int
push
adc
pop
fmul
inc
mov
aam
mov
jge
(bad)
cld
fs
enter
jnp
stos
sahf
push
sbb
dec
mov
dec
lds
dec
mov
es
out
push
pop
mov
retf
and
jp
(bad)
arpl
cmp
in
cmp
shr
hlt
shr
push
mov
adc
stos
inc
out
addr16
mov
fcmovnb
das
xchg
test
push
fs
jmp
dec
shr
nop
bnd
cmps
in
mov
xor
int3
pop
jbe
add
xor
xchg
adc
pop
cwde
inc
aam
ret
and
sbb
test
jmp
lods
mov
jp
xchg
int
xchg
cmps
pop
retf
xchg
mov
pop
stc
or
add
cli
lods
pop
xlat
mov
imul
sub
mov
fimul
cmp
fwait
clc
ins
ins
pop
jle
push
ins
xchg
jbe
test
jno
shl
(bad)
push
jo
in
mov
std
xchg
in
and
mov
mov
cmps
jbe
cdq
sub
pop
mov
inc
ins
mov
das
(bad)
mov
mov
ss
mov
xchg
shufps
lods
aad
scas
and
push
jp
pop
ret
fistp
push
mov
xor
mov
xchg
movs
jg
daa
mov
popa
cmps
mov
mov
inc
fisttp
inc
dec
push
aam
pop
and
repnz
add
outs
in
sub
or
push
mov
sbb
(bad)
inc
ret
push
push
mov
fs
xchg
push
stos
test
mov
jae
movs
popf
or
mov
call
push
mov
scas
test
lahf
mov
dec
xor
jmp
add
jmp
cmp
xchg
enter
xor
mov
prefetchw
or
adc
fistp
push
pop
outs
lods
mov
mov
test
ins
cmp
add
out
adc
mov
jmp
dec
movups
pop
lea
enter
test
adc
jbe
ja
push
push
imul
mov
in
pop
cdq
xchg
mov
mov
sub
sub
mov
push
ins
xchg
fdivr
pop
mov
push
cld
dec
mov
pop
mov
push
call
push
xor
jbe
and
sar
mov
pop
call
push
xor
aaa
cmp
jl
shr
adc
push
mov
inc
stc
hlt
inc
sub
xchg
xchg
out
or
movs
pop
pop
movs
jp
je
jb
add
cmp
in
pop
int
xor
fnsave
jb
arpl
stos
ss
pop
jl
mov
mov
leave
test
push
lahf
mov
pushf
sbb
ror
pop
sbb
cmp
ja
mov
dec
clc
xor
mov
fwait
xor
retf
xchg
add
mov
inc
push
rcl
jo
loope
xor
mov
dec
jle
or
mov
sub
imul
inc
add
jae
(bad)
adc
jg
cmp
xor
repz
(bad)
cmps
sub
sub
mov
xchg
inc
test
cs
push
(bad)
sub
mov
aaa
or
pop
jo
cs
repnz
call
hlt
test
fwait
jp
mov
test
mov
or
pop
and
sub
push
mov
jecxz
mov
xor
fsubr
mov
lahf
add
leave
lods
sti
loop
fdivr
xor
inc
(bad)
cmp
fisttp
scas
cmp
rol
aas
cs
jae
mov
call
sbb
push
pop
je
push
pop
jmp
(bad)
dec
mov
jbe
les
xor
push
add
stos
dec
js
jbe
loope
out
ins
push
lea
push
mov
mov
pop
or
dec
xor
out
or
adc
fs
test
push
or
out
fstp
xchg
push
out
jae
mov
mov
int
pop
adc
fadd
out
xchg
aas
scas
jge
out
jnp
scas
mov
jge
pop
popa
pop
mov
mov
int3
add
mov
mov
fidiv
clc
lock
fistp
mov
jb
or
jb
jmp
jbe
mov
jb
cmp
or
xchg
inc
in
aaa
mov
cmp
jae
mov
std
pop
dec
mov
push
pop
arpl
inc
popa
sti
fdivr
push
dec
sbb
mov
rol
mov
jmp
dec
cmp
mov
loope
nop
mov
lea
mov
icebp
pop
dec
push
in
hlt
push
mov
dec
mov
bound
and
cs
adc
int3
aam
sub
xchg
sbb
stos
mov
push
lods
fwait
out
dec
xor
lods
fwait
ss
ret
mov
js
jo
dec
mov
xchg
into
mov
mov
loop
mov
or
aad
cdq
pusha
in
cmp
imul
adc
lock
mov
and
jne
arpl
mov
fcomp
fistp
xchg
push
jge
mov
mov
sar
aam
mov
xlat
mov
das
mov
mov
fdivr
xchg
enter
jnp
cmp
and
jns
enter
cmp
jae
cmp
xchg
mov
sub
(bad)
push
pop
and
(bad)
rcl
add
xchg
sbb
inc
stc
cmp
or
(bad)
(bad)
in
mov
repnz
scas
dec
jp
fldenv
cmp
mov
fidiv
(bad)
arpl
mov
mov
mov
in
xchg
ss
sahf
repnz
jg
fnstenv
pop
ins
out
into
and
ins
dec
sbb
adc
pop
mov
cwde
ja
cmp
jbe
mov
into
pop
xchg
inc
adc
mov
adc
mov
lds
push
sti
imul
test
pop
jge
shl
and
movs
mov
xlat
xlat
call
arpl
inc
cdq
nop
jge
cmps
int3
fs
in
retf
mov
xor
(bad)
ja
out
pop
pop
jns
stos
inc
call
call
sbb
addr16
pop
cmp
outs
xor
nop
push
mov
cs
ss
shl
repz
aaa
pop
adc
in
mov
push
loopne
or
mov
adc
das
mov
icebp
pop
add
sub
pop
push
pop
mov
adc
setne
xlat
and
sub
imul
dec
bound
call
inc
inc
dec
test
aam
repz
dec
arpl
adc
out
mov
xchg
mov
movs
pop
mov
jne
call
ja
ins
aam
mov
call
sbb
pusha
into
out
mov
dec
pop
mov
sbb
adc
sti
sbb
aas
or
repnz
ss
iret
xchg
mov
mov
outs
(bad)
or
xchg
repz
inc
test
cdq
cld
les
retf
shl
nop
ss
add
xchg
in
(bad)
xlat
pushf
(bad)
cmp
shl
rol
mov
fmul
dec
ins
sti
fadd
ins
(bad)
(bad)
imul
jle
cmp
not
ret
xor
int3
into
imul
jl
xchg
push
lahf
push
mov
mov
xor
jo
jp
jbe
cmp
fs
int3
out
rcr
xchg
cmp
cmp
sbb
imul
cmc
repz
cmp
rcr
into
push
loopne
mov
in
movs
in
bnd
(bad)
jae
mov
xchg
iret
cli
mov
daa
jl
add
mov
outs
out
pop
mov
fdiv
xchg
neg
add
dec
mov
inc
cmp
call
xchg
xor
pop
mov
jbe
test
sbb
sbb
sbb
ss
and
xlat
loop
mov
pop
xchg
movs
jnp
and
bnd
rcr
in
jmp
push
stc
ss
pusha
xor
iret
adc
adc
xor
in
imul
mov
cdq
ret
ins
gs
daa
fidivr
cmp
xchg
div
daa
ss
cmp
mov
leave
mov
adc
les
add
loope
xchg
(bad)
mov
imul
ins
cwde
cmc
and
jbe
mov
mov
cld
fcmovnbe
add
xchg
sbb
jnp
fdiv
sub
rcl
mov
shr
sbb
retf
mov
ins
int3
add
popa
jmp
inc
jne
dec
add
pushf
sbb
popa
xlat
or
push
xor
and
iret
loop
cmps
xor
jecxz
mov
(bad)
jg
push
in
adc
shl
fnstenv
dec
sbb
mov
sbb
test
data16
outs
xchg
in
jp
emms
push
mov
ja
fsub
push
fucomi
loope
jge
jmp
fcomp
sbb
adc
mov
xor
adc
outs
jmp
pop
in
sahf
aad
(bad)
cs
mov
mov
into
cwde
out
sbb
xor
loopne
push
icebp
jmp
gs
jp
popf
rol
ror
mov
push
jbe
cmps
in
mov
aaa
fidivr
push
outs
and
push
test
movs
(bad)
movs
lods
ficomp
(bad)
call
adc
das
imul
imul
std
push
addr16
pmaxsw
fs
ja
push
add
ja
cmps
sar
loope
outs
lods
sar
jae
(bad)
out
sub
and
adc
sbb
fadd
sbb
stos
jmp
add
cmp
jp
aaa
pop
push
or
or
push
lahf
adc
mov
cdq
icebp
sbb
fnstcw
imul
shr
nop
xor
pop
sbb
jle
mov
pop
retf
shl
out
sub
pop
call
ret
dec
in
xchg
je
neg
jbe
adc
or
(bad)
jmp
mov
test
dec
xor
in
adc
cmp
imul
je
or
push
adc
jae
mov
sbb
clc
add
cmps
sti
inc
sbb
jne
cdq
retf
(bad)
out
pushf
dec
mov
sub
mov
ret
inc
popa
jge
imul
int
aaa
scas
dec
add
cmp
mov
cmc
iret
xlat
mov
push
mov
test
aam
jo
es
and
ss
int
test
imul
mov
jo
popf
mov
cld
(bad)
je
dec
mov
mov
xchg
xlat
xor
dec
cmps
mov
cli
cmp
mov
and
xchg
rol
adc
pop
jae
retf
dec
sbb
(bad)
jbe
cmp
xchg
dec
shl
fs
pop
loop
adc
xchg
dec
mov
xor
add
fxch
xchg
push
mov
sbb
adc
add
jmp
arpl
cs
out
pause
cmp
out
sahf
dec
and
push
sbb
(bad)
fisubr
jns
test
(bad)
(bad)
cwde
or
dec
pop
inc
imul
pop
popf
xor
(bad)
jnp
ins
(bad)
mov
add
imul
inc
aam
and
hlt
mov
sbb
jmp
imul
xchg
cdq
inc
(bad)
fcmovne
jp
jb
xchg
and
adc
pop
fbstp
cwde
popa
mov
mov
mov
lods
scas
pop
sub
in
jno
xchg
icebp
pushw
pop
sbb
imul
repz
xor
out
lea
in
push
xor
sahf
dec
dec
(bad)
jmp
add
jae
jmp
mov
daa
out
sub
jnp
mov
xor
dec
mov
jp
cmps
pop
(bad)
inc
movs
xor
sub
daa
nop
mov
das
xchg
sbb
(bad)
adc
nop
fnsave
add
std
dec
xchg
scas
xor
cli
mov
stc
int
mov
hlt
rcr
into
ins
push
retf
push
icebp
sub
addr16
std
fcmove
inc
push
pushf
and
cmp
(bad)
fdivr
test
sbb
xor
push
mov
cmps
fstp
xchg
dec
sub
mov
cld
cs
or
pushf
mov
mov
push
cmp
pop
jmp
jae
adc
cmc
add
js
xchg
loop
int3
data16
(bad)
jl
mov
xchg
into
ins
pushf
imul
imul
cmp
adc
loopne
nop
dec
leave
push
adc
shl
aam
cmps
mov
jmp
nop
cwde
in
call
(bad)
cmp
xchg
(bad)
mov
pop
push
cmp
and
popa
jecxz
pop
imul
clts
lods
movs
movs
dec
pop
mov
mov
fst
push
mov
rcr
lock
sbb
cmps
pop
mov
mov
inc
xchg
mov
aam
repz
ss
icebp
xor
mov
jno
adc
retf
mov
test
push
xor
push
pushf
sbb
fsub
adc
inc
cmps
outs
adc
jge
into
imul
pusha
aaa
mov
xchg
or
rcl
inc
or
pop
sar
inc
push
in
in
pop
xor
jno
out
mov
dec
retf
imul
pop
or
sub
cmp
pushf
inc
jae
(bad)
mov
mov
push
mov
xchg
sbb
call
fst
pop
imul
js
je
sbb
jb
jae
cmps
fs
add
jbe
arpl
sbb
xor
xor
xchg
lods
jl
in
ins
iret
adc
in
push
movs
xchg
les
push
arpl
mov
dec
fwait
mov
mov
adc
repz
mov
es
idiv
jno
adc
xchg
ret
pop
enter
mov
sbb
pop
into
aas
push
push
xor
mov
xor
shl
imul
jo
jo
into
call
(bad)
push
(bad)
(bad)
cmp
int3
sub
dec
xor
mov
rcr
inc
mov
hlt
mov
loopne
popf
outs
addr16
push
call
xchg
jno
pop
add
push
outs
inc
mov
mov
shl
call
xchg
xchg
dec
cwde
repnz
(bad)
adc
cmp
fwait
pop
fcmovnb
jae
jmp
mov
fldenv
dec
jns
js
pop
fcmovnu
call
lds
xor
imul
or
dec
scas
in
or
test
test
retf
xor
inc
shl
test
xchg
adc
push
mov
jnp
leave
xchg
mov
or
pop
adc
cmc
inc
cmp
add
mov
scas
adc
xor
and
jecxz
jbe
lahf
jl
mov
jbe
retf
fimul
int3
sti
cmps
fisttp
mov
dec
inc
movs
sbb
xor
or
push
aaa
in
pop
outs
pop
lea
ins
(bad)
hlt
out
scas
jno
mov
fwait
mov
mov
add
mov
cmps
or
inc
and
cmp
iret
jle
inc
stc
xlat
int
iret
lahf
jb
jns
popf
pop
cmc
xchg
dec
cmp
pushf
sti
xchg
mov
sbb
sub
sar
jb
mov
pushf
lods
cmp
cmp
xchg
sti
(bad)
gs
push
sti
pop
ret
sbb
mov
sub
mov
icebp
fs
std
push
(bad)
dec
and
sbb
aas
push
sbb
test
jmp
mov
and
test
sub
ja
inc
in
iret
imul
mov
push
lahf
ins
retf
adc
dec
mov
inc
xor
xchg
xor
sub
nop
retf
mov
cs
clc
sub
jmp
out
cmp
je
aam
adc
dec
mov
adc
xchg
dec
out
cmp
jmp
in
mov
imul
jmp
cmp
or
jne
mov
es
test
rcr
lds
shl
pop
repz
dec
scas
lods
adc
pop
mov
mov
cdq
jbe
ins
fnsave
arpl
addr16
jle
jbe
arpl
jae
sub
push
mov
cmps
pop
and
imul
arpl
ret
and
push
les
pop
fcmovb
ret
pop
mov
leave
push
sub
push
es
xor
mov
pop
imul
cmp
mov
push
jp
sub
fcom
idiv
fs
popa
repnz
sub
call
outs
inc
push
ss
inc
or
jne
sar
or
xlat
push
adc
rcl
ins
pop
and
push
push
push
jl
cmc
in
and
call
(bad)
xor
ins
les
call
xor
outs
dec
out
cmp
loopne
sar
int3
stc
mov
out
stc
xor
sub
out
leave
push
sti
inc
cmps
cmps
jecxz
fistp
jl
pop
push
test
icebp
out
pop
test
mov
sahf
outs
xor
and
add
(bad)
gs
(bad)
cld
bound
sub
mov
frstor
repz
jb
fwait
mov
and
xor
push
mov
sub
add
loop
test
inc
data16
neg
or
data16
fld
or
mov
mov
jl
lods
out
push
fs
std
mov
popf
mov
pop
test
pop
mov
pop
retf
adc
fwait
fs
xchg
push
sar
pop
adc
lahf
jl
pop
test
sub
dec
mov
jbe
test
fs
pop
fcmovnb
mov
add
retf
(bad)
mov
call
into
mov
dec
pop
dec
xchg
ss
sub
inc
fcomp
xchg
mov
and
adc
or
xor
jmp
dec
push
les
test
jle
or
mov
dec
out
retf
push
mov
js
jno
cs
pop
jmp
stos
ds
inc
adc
call
fwait
jge
outs
push
mov
push
es
sub
mov
out
cmc
pushf
xchg
int
mov
push
mov
jne
lods
push
dec
mov
lods
ret
(bad)
cmp
aam
mov
xor
lea
push
dec
aaa
out
and
push
xchg
mov
inc
pop
(bad)
movs
dec
xor
cwde
imul
(bad)
push
stos
sbb
stc
inc
(bad)
jmp
pop
das
cwde
mov
or
not
inc
inc
xor
loopne
loop
call
dec
mov
mov
and
mov
(bad)
jmp
pop
imul
dec
xor
sbb
iret
and
jp
adc
(bad)
fadd
(bad)
(bad)
out
std
rol
cwde
into
jae
cmps
push
push
inc
stc
(bad)
enter
pop
sbb
jb
outs
jnp
loop
int3
fwait
int
imul
xchg
lds
pop
jge
hlt
outs
fwait
pop
add
cs
imul
out
xchg
mov
popf
or
mov
pop
in
cmp
retf
cmps
loope
in
ss
(bad)
lea
pop
imul
push
scas
mov
lods
push
test
imul
mov
sbb
mov
jbe
sub
jl
cwde
mov
(bad)
sbb
push
popf
xchg
sbb
xchg
retf
movs
dec
movs
pop
test
out
mov
jno
cmp
mov
popa
in
mov
lahf
or
sti
push
lds
fwait
in
sub
ror
(bad)
mov
fld
mov
or
pop
jae
push
add
cmps
or
and
adc
dec
aaa
bt
xchg
push
fdiv
call
loopne
xor
mov
mov
jge
cs
fs
fld
pop
inc
pop
mov
sbb
out
gs
rcl
aad
push
callw
xchg
cmc
sti
loop
push
not
jl
sub
mov
test
xchg
cs
sub
loop
imul
scas
rcr
add
in
push
jle
cmp
inc
dec
mov
push
ret
rep
outs
xor
xchg
xchg
out
das
sub
popa
xchg
popa
cmp
in
jecxz
cmc
jmp
imul
sub
hlt
stos
jge
jmp
mov
or
or
stos
pop
sbb
in
(bad)
ins
mov
call
dec
xchg
cmp
outs
lods
je
lds
test
sbb
scas
addr16
scas
mul
dec
in
icebp
sub
aad
shl
imul
ins
cmps
add
mov
mov
data16
(bad)
fcmovb
mov
mov
cdq
call
fidiv
push
jmp
ins
push
xor
xor
sahf
mov
mov
jo
pop
leave
jb
ret
pop
jns
xor
adc
mov
into
xchg
lods
jns
cdq
jnp
(bad)
ds
jge
in
jb
xchg
jnp
pop
xor
stos
jge
sbb
mov
aad
jb
mov
cli
sub
retf
sbb
cmp
in
ret
retf
cwde
and
fcmovnu
adc
popfw
mov
inc
mov
push
scas
inc
inc
cmps
xor
fwait
lock
fwait
popa
mov
jns
sbb
jbe
push
lods
pop
stos
add
mov
mov
pop
pop
jmp
lahf
dec
mov
imul
cmp
iret
pushf
dec
mov
mov
cmps
cmps
imul
fmul
sub
std
push
dec
mov
fmul
imul
lahf
xor
retf
cmp
push
sbb
std
jecxz
pop
or
dec
push
xchg
int
sub
xor
addr16
push
movntq
pusha
mov
popa
jb
mov
idiv
mov
dec
popa
inc
pop
pop
add
fwait
ja
outs
adc
pop
lds
ret
push
dec
call
ret
push
popf
(bad)
and
mov
(bad)
mov
call
jmp
popf
jp
dec
ror
mov
aam
enter
mov
sub
pop
cmp
mov
pop
pop
adc
fbstp
cli
sub
scas
xor
shl
loope
jl
mov
jne
test
xor
les
in
pop
retf
cmp
push
outs
dec
fwait
and
cmp
je
movs
jle
jmp
ds
sbb
das
fcmovnbe
scas
ja
xchg
mov
push
aad
shl
cmp
pop
or
(bad)
mov
cli
mov
dec
in
stos
xchg
or
hlt
std
aaa
mov
loop
stos
js
fisub
fwait
sbb
lahf
jnp
aad
enter
xor
data16
push
xor
mov
inc
aam
add
jl
xor
xor
adc
jne
or
sub
xchg
pop
ds
xchg
jl
retf
mov
scas
loopne
inc
and
xchg
push
bound
pop
sub
dec
mov
cmp
sbb
inc
xor
push
push
lods
fstp
cli
in
jns
sti
ins
dec
pop
movs
imul
imul
cmc
jmp
add
retf
sub
push
push
sub
arpl
(bad)
mov
shr
pop
mov
fldenv
push
sbb
movs
div
jmp
xchg
dec
sub
mov
cmps
dec
cmp
mov
push
sti
js
sbb
sbb
pop
ror
fs
jae
(bad)
pop
ins
imul
dec
call
mov
push
imul
inc
add
aad
push
ins
inc
pop
fldcw
mov
imul
inc
aad
inc
sub
adc
mov
sub
xchg
dec
fistp
push
lock
out
push
fs
pop
inc
fiadd
xchg
mov
mov
and
mov
(bad)
stos
fdiv
push
add
imul
xchg
jbe
jne
das
xor
or
scas
xor
movs
and
(bad)
inc
push
dec
imul
inc
jmp
jmp
dec
clc
jno
cwde
pusha
push
add
stos
or
jg
jns
pusha
in
sbb
sbb
xchg
dec
push
sbb
inc
retf
pop
es
xchg
bound
jno
jmp
mov
or
retf
out
xchg
shl
cmp
xchg
add
xchg
in
and
adc
lods
mov
int
int
sub
repz
fs
sahf
cdq
adc
xchg
and
rol
aad
data16
fistp
test
dec
jp
inc
test
sub
jge
cmp
xor
lock
dec
cli
dec
inc
(bad)
push
fxch
das
xchg
sbb
das
lahf
ins
jl
xor
push
adc
lds
(bad)
ins
and
cmp
sub
xchg
ds
push
mov
jmp
aaa
aaa
cmp
sbb
push
or
jmp
aas
jmp
test
mov
mov
int
pusha
jge
aad
cmps
mov
fwait
jecxz
out
sub
(bad)
test
scas
push
xchg
sbb
daa
or
mov
pop
data16
loop
and
mov
fldenv
xor
adc
aad
mov
sbb
cmp
or
mov
inc
dec
pop
cmp
and
jae
dec
out
lahf
out
fwait
jg
lods
or
lahf
cmp
push
dec
and
push
xchg
push
leave
call
sub
add
test
and
lods
push
cmp
outs
lods
cli
mov
inc
pop
jmp
ror
pop
scas
jmp
repnz
mov
and
(bad)
cwde
dec
cmc
sub
xchg
xchg
popa
bound
mov
add
test
pop
icebp
fcom
cmp
(bad)
pushf
mov
xor
jle
fwait
out
sbb
dec
adc
and
div
mov
mov
or
adc
and
gs
pop
in
mov
or
jb
mov
in
ret
pop
call
es
inc
fs
mov
fldcw
leave
fild
mov
fdiv
enter
inc
xchg
mov
shl
dec
pop
xchg
cmp
lods
adc
cwde
out
outs
pop
inc
and
push
test
cli
cmp
pop
add
leave
xchg
stos
xor
jbe
mov
fwait
push
xchg
cmp
lods
inc
retf
adc
loop
jle
imul
fmul
jae
nop
ret
push
sub
(bad)
jmp
mov
adc
(bad)
mov
sub
test
add
fucomip
in
sbb
push
jb
fs
fcmovu
sbb
fld
mov
shr
out
mov
in
mov
pop
inc
(bad)
bound
ret
loope
push
ja
bound
mov
add
idiv
mov
push
push
(bad)
cwde
int3
adc
into
fcom
dec
(bad)
call
outs
cmp
loop
inc
call
or
pop
lahf
push
and
mov
jmp
into
cmps
cmp
outs
cmp
mov
and
outs
lods
leave
(bad)
mov
outs
mov
scas
mov
fucomp
(bad)
out
cli
test
outs
stos
push
inc
jno
pop
ss
neg
pop
pop
mov
stc
adc
cmps
stc
shr
cmp
mov
add
pop
js
sbb
push
or
ss
dec
mov
shr
ret
retf
sub
xor
xor
mov
int3
inc
ja
rep
loopne
arpl
mov
fistp
sub
ret
cmovle
cwde
mov
out
(bad)
out
(bad)
lods
out
shr
mov
cmp
xchg
mov
sub
sar
movs
imul
add
cmps
repz
in
hlt
or
push
xchg
jl
mov
and
jae
mov
sbb
shl
mov
(bad)
mov
mov
inc
retf
jmp
(bad)
movs
cmp
das
dec
adc
inc
test
hlt
div
enter
out
and
shl
mov
pop
xchg
stc
retf
out
mov
and
push
movs
inc
mov
mov
jbe
daa
inc
cld
pop
(bad)
popa
adc
ret
leave
je
dec
(bad)
or
mov
cmc
pop
dec
mov
pusha
je
pop
(bad)
sbb
sahf
repnz
inc
pop
jmp
or
xchg
jecxz
xchg
sub
out
imul
test
pop
sub
push
cli
dec
fwait
ss
sbb
xchg
pop
pop
push
je
das
aaa
(bad)
jne
loopne
mov
inc
ins
scas
inc
clc
mov
(bad)
aad
movs
push
je
wrmsr
mov
ret
push
mov
out
xchg
push
mov
jmp
mov
cmp
packsswb
xchg
jmp
cmp
sar
mov
jno
dec
mov
jbe
dec
mov
cmp
scas
xchg
scas
mov
jg
fs
or
mov
cdq
loop
jmp
sub
pop
xchg
repnz
xchg
mov
cli
push
and
fxch
faddp
pop
popf
sub
data16
mov
dec
sbb
jbe
rcl
mov
xor
aas
inc
sub
stos
xor
out
xor
je
cmp
dec
xlat
nop
movs
repnz
addr16
xchg
pop
imul
addr16
shr
out
loop
cdq
rcr
imul
sub
mov
aaa
mov
fucomip
inc
xchg
pop
mov
jae
cmp
and
inc
addr16
ror
shl
psllq
mov
call
loopne
outs
ja
xor
retf
enter
je
in
pop
cmc
scas
aas
cmc
inc
popf
ss
jmp
mov
jp
enter
sahf
retf
ret
test
sar
or
jecxz
xchg
mov
add
mov
xchg
out
scas
pop
dec
or
jmp
imul
out
popa
aam
je
scas
dec
addr16
xor
pop
(bad)
cwde
xor
mov
mov
dec
mov
mov
sbb
mov
retf
(bad)
sti
mov
jge
xor
fiadd
stc
imul
pop
div
jg
dec
call
lods
xchg
outs
jge
adc
mov
push
mov
sub
fld
jae
add
fwait
push
xchg
push
push
add
pop
rol
lea
inc
int
pop
dec
retf
sahf
(bad)
mov
inc
daa
lock
es
and
xchg
mov
jecxz
outs
add
fsubrp
or
and
adc
sar
rcl
cmps
cmps
xor
pop
test
loopne
or
aaa
sbb
call
xchg
sahf
mov
add
mov
jle
mov
inc
aam
sbb
adc
das
cmc
mov
push
mov
push
adc
or
or
jae
sub
aam
mov
xchg
mov
(bad)
data16
mov
xchg
shl
cs
outs
inc
cmp
pop
or
lods
test
pop
sbb
inc
and
(bad)
nop
push
hlt
adc
mov
fdivr
js
(bad)
or
test
push
sbb
cmp
(bad)
push
push
test
xchg
add
adc
jmp
pop
stos
test
adc
mov
mov
aas
xor
call
add
lods
sbb
inc
add
sbb
cmps
or
(bad)
retf
mov
jo
pop
daa
(bad)
adc
mov
jo
ja
lods
test
or
test
xor
mov
in
mov
push
iret
pop
ss
mov
loop
into
xor
jno
jge
rcl
mov
pop
in
in
lahf
sbb
mov
call
and
repnz
add
add
mov
mov
jle
mov
ror
xor
and
xor
retf
pop
(bad)
aad
or
fsub
sub
jno
jle
xor
test
lahf
xor
xchg
add
imul
fdivr
clc
mov
in
test
ret
movs
mov
test
fnsave
loopne
fiadd
inc
clc
adc
cdq
mov
xchg
mov
inc
pop
js
and
jmp
dec
adc
sbb
je
jno
enter
retf
mov
in
aam
xor
in
test
aas
or
xor
inc
loop
mov
es
std
les
aad
inc
xor
xchg
icebp
pop
xchg
inc
jb
add
add
rcl
jo
repnz
(bad)
loop
je
jae
pop
ret
inc
sub
add
xor
add
lahf
xor
mov
shr
(bad)
je
xor
(bad)
pop
push
inc
adc
pop
sbb
sbb
sub
test
dec
jo
and
icebp
pop
(bad)
fs
(bad)
fistp
mov
push
(bad)
ss
or
mov
adc
xchg
jecxz
cdq
js
jbe
mov
popa
add
inc
dec
sub
xor
jbe
dec
shr
loopne
out
jge
scas
jmp
js
cmp
fwait
cmp
fnsave
push
mov
adc
push
pop
outs
pop
add
cmp
dec
adc
cli
aad
dec
dec
and
jo
sar
inc
lods
cmp
xchg
ret
cmc
jp
in
je
mov
call
lea
xchg
sub
pop
loope
inc
cld
add
jb
xor
cli
stc
rol
cmps
dec
shr
cmps
mov
adc
shl
or
out
jne
adc
sbb
loope
arpl
jo
dec
jle
xchg
scas
pop
sbb
add
fwait
mov
call
icebp
xchg
mov
add
cli
fild
sti
test
inc
xchg
in
cmp
xchg
std
stos
xchg
cmp
inc
out
pop
jo
sbb
pop
and
ss
jmp
ror
jl
xor
add
mov
(bad)
and
and
daa
xchg
(bad)
ror
jecxz
fisub
sub
hlt
mov
push
xchg
push
add
mov
adc
jno
adc
mov
sar
sub
(bad)
imul
fistp
pusha
les
mov
out
xlat
sqrtps
cs
dec
mov
aas
adc
add
mov
ds
mov
cs
stos
in
int
int3
add
or
call
mov
je
inc
ror
dec
pop
into
lea
push
mov
jns
push
mov
add
adc
stos
or
xor
xlat
xor
pusha
ins
out
jg
sbb
in
jmp
dec
dec
pop
xchg
sub
int3
add
or
dec
jecxz
ja
(bad)
pusha
je
sar
scas
cmp
inc
mov
xor
call
inc
and
push
jo
sbb
enter
jne
dec
mov
js
or
mov
xor
iret
bound
jecxz
fistp
sahf
fs
sbb
(bad)
lock
inc
cdq
iret
mov
push
mov
nop
jo
mov
pop
aas
and
in
xchg
dec
mov
leave
mov
and
repnz
cmp
and
fwait
sub
xor
xor
popf
and
fadd
or
loopne
or
lods
sbb
jnp
and
std
or
(bad)
stc
adc
in
push
and
mov
loopne
mov
cmp
mov
iret
xchg
adc
add
mov
push
xchg
xor
jmp
ja
inc
jns
or
ret
retf
bswap
sbb
sub
je
les
sbb
and
or
xchg
jecxz
pop
xor
loope
and
nop
push
and
dec
mov
mov
cmp
nop
cmp
int
inc
out
sbb
add
inc
add
adc
and
xchg
gs
mov
jmp
push
mov
pop
mov
lea
rcr
inc
add
jp
ds
int3
push
test
out
push
retf
xor
sbb
dec
mov
iret
or
push
pop
ins
repz
mov
enter
push
sub
outs
inc
cmp
xor
xchg
retf
aaa
and
inc
paddusw
test
cli
or
add
pusha
cmp
rcr
repz
fs
or
push
cmp
dec
push
fcom
push
lds
lahf
add
rcr
adc
inc
rol
xor
jbe
jo
push
shl
jae
xchg
repz
dec
push
add
jmp
jle
jg
mov
jge
lds
jl
test
les
adc
cmp
jp
inc
dec
or
xchg
(bad)
xor
push
sbb
dec
xor
mov
repz
cli
repz
ret
int3
ins
add
aas
mov
cmovge
jecxz
sti
or
and
js
mov
sub
jp
mov
jecxz
shl
(bad)
xlat
xchg
iret
loopne
lea
xor
pop
je
std
dec
xchg
stc
aad
inc
mov
pop
mov
pop
adc
stc
push
fsub
addr16
or
mov
jo
outs
daa
(bad)
(bad)
dec
lods
sahf
ja
imul
rol
in
pusha
add
mov
fs
arpl
out
cmp
push
push
movs
pusha
cld
(bad)
cmp
mov
fstp
xor
ret
xchg
nop
out
lds
push
jge
imul
retf
movs
mov
push
push
and
inc
sbb
les
add
fsub
push
sub
scas
and
mov
movs
dec
jg
shl
add
in
inc
loope
nop
aaa
in
inc
cwde
ret
mov
aas
pop
jl
test
aad
ds
shl
cmp
xchg
(bad)
mov
mov
mov
out
dec
mov
sbb
mov
aad
fmulp
mov
gs
ins
inc
retf
lods
jp
lea
xor
sbb
sbb
icebp
stc
mov
inc
imul
addr16
pushf
sbb
repnz
add
push
jb
sub
sbb
add
sbb
(bad)
cmps
bt
scas
push
xchg
pop
mov
rol
sbb
jno
jmp
(bad)
add
jecxz
mov
pusha
add
sar
icebp
sbb
and
cmps
dec
sub
jge
scas
or
pop
and
in
sbb
inc
sub
push
or
jg
jmp
sahf
add
mov
retf
mov
and
mov
xchg
jne
sub
hlt
bound
and
cmc
inc
pop
cmp
adc
push
inc
or
mov
push
sub
add
bound
ds
dec
sti
(bad)
mov
mov
sub
jle
xlat
xor
mov
mov
ret
pusha
loopne
pop
pusha
xchg
inc
and
dec
(bad)
mov
ret
outs
(bad)
dec
imul
sub
mov
lock
xchg
bound
sbb
loope
add
movs
out
and
xor
hlt
mov
or
outs
mov
lock
mov
into
dec
ret
cmp
xchg
fsub
xor
das
fld
out
lahf
sbb
vmread
mov
and
clc
je
movs
fstp
fist
jb
pop
xchg
daa
pop
xlat
adc
mov
fst
add
call
cmp
cmc
(bad)
rcr
dec
ins
jns
inc
inc
in
fmul
mov
adc
mov
retf
adc
dec
xchg
jecxz
inc
ja
jmp
daa
xor
add
sbb
cmp
fsub
add
push
pop
pop
push
pop
shl
and
push
mov
mov
movs
push
and
mov
add
push
cmp
scas
test
mov
aam
xchg
add
or
movs
sbb
(bad)
mov
dec
sbb
mov
pusha
hlt
xchg
mov
jae
(bad)
xchg
inc
adc
outs
adc
xor
test
mov
inc
outs
imul
leave
or
jno
jge
clc
xor
pop
pop
pop
loope
mov
cdq
pusha
cmp
mov
loopne
bnd
aaa
fldenv
sbb
mov
dec
sbb
out
inc
arpl
cmp
sub
dec
mov
push
movs
add
push
mov
pushf
aad
inc
push
lahf
loop
cmps
ror
mov
lock
(bad)
xor
js
push
pop
xchg
mov
rcr
and
scas
ins
sub
popf
sub
push
sbb
stc
imul
(bad)
(bad)
cld
jmp
lock
inc
xchg
inc
aas
rol
call
adc
xchg
mov
jl
add
jge
mov
cmps
(bad)
push
out
test
xor
jne
shr
mov
loop
and
lds
inc
jecxz
ror
push
mov
pop
leave
loop
retf
xchg
jge
mov
jns
aaa
sub
and
xor
lock
pop
pop
aam
scas
pushf
inc
(bad)
lea
pop
leave
cmc
push
push
dec
add
js
mov
(bad)
gs
adc
iret
retf
fdivr
les
(bad)
enter
icebp
cmp
mov
repnz
xor
ret
aam
cs
sub
scas
mov
cwde
in
mov
mov
ss
test
adc
outs
adc
and
mov
daa
(bad)
add
fcmove
pop
popf
lds
sub
add
int3
pop
dec
xor
imul
xor
call
pop
mov
(bad)
div
ret
cmp
in
jnp
mov
push
pop
mov
inc
sbb
int3
sbb
leavew
pusha
dec
sar
rcr
add
inc
or
cmp
pop
jnp
ret
adc
mov
sbb
pop
xor
js
mov
xchg
int3
xor
xor
clc
(bad)
pop
push
mov
adc
rcr
push
call
and
ins
jmp
pop
xlat
jnp
adc
add
xchg
cmp
jb
jmp
lods
jno
int
mov
and
das
inc
and
inc
sbb
inc
jno
inc
and
or
rol
pop
mov
sti
lds
cmc
js
jmp
push
sti
and
add
cmps
mov
outs
dec
scas
inc
push
fbld
dec
out
xor
inc
pushf
pop
mov
test
cmp
adc
sbb
and
adc
adc
pop
or
dec
into
movs
shl
data16
in
dec
or
and
jnp
rol
int
sub
push
adc
xchg
dec
mov
pop
adc
icebp
ret
lods
out
jo
outs
mov
cmps
or
cld
mov
fld
cmp
pop
mov
(bad)
gs
inc
ins
adc
enter
cmp
adc
xor
mov
call
adc
adc
lea
dec
inc
(bad)
xor
push
adc
add
fsubr
sub
jp
mov
mov
sti
jne
sub
lds
and
mov
and
test
ds
sbb
fld
fidivr
cmp
xchg
add
cmp
retf
(bad)
int
dec
add
xor
jo
out
sbb
sbb
xor
mov
retf
mov
ffree
and
retf
pop
jg
jle
inc
js
jg
sbb
popa
sub
cmp
(bad)
push
imul
inc
mov
cwde
das
push
push
movs
add
xchg
push
iret
pop
loope
loop
rol
imul
and
adc
addr16
adc
or
test
inc
sbb
add
movs
sbb
add
sbb
pushf
aad
jle
enter
in
dec
xchg
jle
push
push
movd
dec
mov
iret
jecxz
xor
lods
int
rol
adc
movs
enter
adc
movs
jne
jp
shl
je
push
xor
pop
adc
mov
xchg
sar
aaa
xchg
sahf
sbb
jl
xor
out
fdiv
jmp
push
dec
xchg
mov
or
pop
cmp
or
inc
int
shl
mov
sbb
pushf
inc
or
or
call
call
inc
mov
push
push
pop
(bad)
nop
ja
rol
jg
pop
sub
retf
mov
xchg
jge
ficom
inc
pop
inc
jo
pop
stc
(bad)
jb
mov
xor
cmp
push
mov
cmp
inc
sahf
sub
adc
sbb
loopne
icebp
dec
shl
push
lahf
out
cwde
mov
test
and
and
daa
fild
and
mov
movs
sub
jnp
pop
lds
ror
mov
sub
cmps
movs
ret
xor
mov
or
stos
(bad)
fstp
sub
sbb
mov
pop
and
sub
jbe
jmp
out
pop
pop
int3
mov
movs
push
sub
pop
jno
int3
scas
cs
js
hlt
pop
imul
and
inc
mov
es
push
adc
xor
outs
and
jmp
sar
adc
sbb
sub
xchg
int
jb
pop
sub
mov
xchg
mov
xor
mov
and
aas
leave
add
jmp
xchg
sbb
mov
fs
and
aad
xchg
ds
or
aad
inc
pop
xor
sub
mov
pusha
mov
mov
fsubr
dec
lds
push
push
xlat
adc
lds
push
repz
ds
sbb
cmp
mov
inc
sahf
xchg
outs
shl
pop
adc
push
jl
push
call
lds
and
mov
lahf
xor
mov
dec
and
sar
(bad)
loop
dec
add
fst
adc
js
enter
call
sbb
dec
xlat
stos
xchg
add
adc
(bad)
loopne
push
sbb
mov
push
sbb
or
and
adc
retf
test
pushf
mov
mov
mov
cmp
test
or
add
push
dec
scas
mov
fild
aaa
mov
or
pop
xor
and
mov
and
popf
into
adc
in
jns
clc
or
adc
mov
jo
in
jno
mov
leave
aad
clc
out
inc
pop
pop
add
sub
xchg
and
pop
test
pop
push
(bad)
retf
xor
push
mov
and
sub
add
nop
test
push
(bad)
pop
mov
mov
xor
pop
pop
jo
lahf
jo
and
cmps
sar
js
push
cmp
sbb
xchg
push
cmps
sbb
pop
jecxz
inc
and
out
jmp
out
pop
pop
(bad)
bound
sbb
rol
or
add
clc
fisubr
jecxz
pop
xor
inc
or
jg
mov
loope
daa
retf
mov
push
mov
sub
repnz
loop
cli
sbb
xor
cld
pushf
fcom
ja
pushf
cmp
mov
(bad)
pop
dec
xor
lahf
adc
sbb
mov
push
call
mov
push
inc
stc
leave
xlat
adc
mov
stc
mov
out
adc
imul
mov
mov
sahf
push
pop
xchg
pop
xor
pop
sub
(bad)
(bad)
das
inc
jbe
jns
loop
mov
data16
aas
cmp
adc
movs
adc
jbe
adc
stc
rcl
rol
movs
inc
inc
ja
retf
cs
mov
mov
scas
mov
xor
neg
mov
xchg
test
lods
sbb
lods
and
cmp
mov
test
cmps
sar
pop
jecxz
shl
popf
and
xchg
(bad)
mov
pop
or
adc
pop
and
imul
ins
and
push
sar
neg
fidivr
pushf
inc
sti
loop
and
outs
enter
cmp
fdivp
addr16
xchg
in
clc
mov
xor
int3
or
neg
mov
shr
push
in
jbe
adc
sbb
iret
dec
mov
push
xor
daa
add
sbb
mov
je
sbb
pop
adc
shr
icebp
(bad)
std
(bad)
leave
mov
fadd
pcmpeqb
mov
xor
sti
test
add
arpl
xor
cmp
jg
test
dec
inc
aaa
outs
pop
call
stos
stos
and
cdq
cmp
jecxz
cmp
fild
(bad)
es
jmp
js
push
call
jp
stos
inc
enter
js
jo
xchg
in
dec
pop
jae
call
gs
mov
ins
shl
lods
movs
sbb
jge
mov
dec
(bad)
popa
xor
fldcw
pop
mov
push
in
loope
mov
dec
mov
dec
aaa
pop
jge
nop
jbe
scas
rcl
fild
add
dec
push
push
mov
xor
mov
mov
fcom
(bad)
cmp
jae
cmp
repz
jnp
mov
push
jo
push
dec
jno
cdq
and
pop
movs
movs
pop
dec
xchg
les
nop
ins
adc
test
sahf
mov
ins
lods
xchg
cmp
in
pop
cmp
lss
mov
stc
aad
xor
sbb
and
and
pop
call
loop
fcom
outs
push
lods
test
mov
(bad)
adc
push
imul
mov
dec
and
jl
loopne
cmp
and
push
add
adc
loope
push
in
fs
leave
scas
inc
inc
dec
gs
lock
jne
mov
leave
(bad)
scas
adc
mov
movs
inc
jmp
push
shl
mov
jle
inc
addr16
xchg
sbb
addps
fadd
xchg
inc
or
rcl
retf
cmps
mov
cmp
add
dec
gs
adc
pop
fiadd
fs
add
ds
and
mov
push
rcr
mov
sbb
data16
bnd
std
xchg
pop
xor
push
movs
mov
call
push
cli
cwde
add
clc
cs
and
ret
adc
sti
inc
xor
mov
xchg
cwde
jne
cld
adc
cs
test
pop
es
inc
jecxz
jp
sahf
pushf
in
push
in
addr16
mov
sbb
and
loope
out
xor
or
and
jmpw
icebp
push
inc
mov
jnp
jae
push
mov
push
push
dec
push
popa
and
adc
inc
sub
pushf
pop
imul
fisttp
pop
cs
pop
sbb
enter
inc
jnp
xchg
jge
xchg
or
sbb
jb
sub
nop
das
movs
xor
or
sub
cwde
cmp
adc
mov
adc
retf
and
sub
push
xchg
lods
repnz
jg
xchg
and
mov
inc
mov
cmp
imul
pop
and
mov
imul
test
dec
or
push
jle
inc
sbb
pop
movs
cpuid
cs
pop
ins
mov
push
push
sbb
test
test
sub
jmp
sub
pop
and
inc
imul
aas
push
or
xchg
push
dec
in
aas
fcomp
push
mov
rol
xchg
cld
int3
or
mov
xchg
mov
mov
jecxz
icebp
push
pop
add
push
lahf
(bad)
cmc
adc
xchg
xor
out
xchg
mov
inc
and
int
dec
mov
xor
enter
or
in
(bad)
sub
push
mov
push
add
bound
frstor
dec
stc
iret
je
clc
js
in
imul
cmp
cmps
scas
jp
call
and
sar
enter
cmps
shl
push
mov
xor
lds
xchg
push
jmp
adc
mov
mov
shl
ds
add
mov
pop
je
sbb
add
(bad)
mov
push
ret
es
dec
(bad)
push
or
mov
sub
mov
es
inc
(bad)
loop
mov
ss
push
test
inc
ins
adc
cmp
mov
adc
and
cs
les
jbe
sbb
mov
xor
popf
out
sub
lods
jge
repz
xchg
xchg
and
ins
push
jo
fs
outs
xchg
pop
loop
stos
data16
pop
mov
es
sub
xor
fcom
movs
dec
mov
xor
sub
leave
push
dec
and
loopne
and
push
sahf
ror
mov
mov
mov
sub
and
mov
sbb
popa
sbb
cmp
or
pop
(bad)
addr16
(bad)
daa
or
clc
adc
jae
(bad)
or
or
pop
dec
xchg
fs
mov
xor
push
addr16
dec
xchg
sbb
repz
dec
mov
movs
(bad)
mov
test
nop
jg
inc
shl
inc
inc
push
pusha
xchg
call
or
xchg
adc
cmp
popf
rcl
loop
sub
mov
push
inc
sbb
add
lds
adc
retf
push
test
inc
xor
ins
push
pop
sti
sbb
xor
jb
scas
or
in
mov
xor
push
fistp
xor
lds
push
(bad)
dec
push
jp
lods
test
and
and
pop
or
or
add
push
jno
cli
les
ret
mov
pusha
cmp
mov
add
ret
cld
or
dec
jb
dec
int
adc
mov
mov
fidivr
inc
xor
rol
adc
aas
rcr
iret
test
xor
(bad)
popf
mov
iret
xor
push
(bad)
into
and
aad
sbb
jno
mov
cmp
clc
xchg
sbb
ret
movs
push
push
push
cwde
imul
xor
push
(bad)
push
loop
adc
ins
push
(bad)
in
sbb
mov
or
xor
fnstcw
push
xchg
push
push
add
xchg
je
mov
add
xchg
fcmovbe
(bad)
lds
inc
mov
enter
mov
test
data16
sbb
cmps
xchg
push
jne
fcmovnbe
pop
mov
aas
test
inc
loope
xchg
test
ins
fsubr
mov
xor
inc
push
jp
mov
int3
fstp
jno
ds
aad
(bad)
movs
test
jmp
fxch
adc
xchg
ins
add
sbb
dec
dec
mov
lea
push
sbb
cmps
aam
xlat
push
xor
inc
jmp
arpl
cdq
mov
adc
cmp
lahf
cmp
leave
push
fldenv
ja
or
push
push
xchg
xor
inc
xchg
test
pop
ror
jbe
sar
int3
iret
inc
jbe
xor
(bad)
mov
cmps
mov
inc
test
and
sub
xchg
adc
cmp
xchg
fdivr
pop
pop
sar
lahf
or
andps
pop
lods
pop
movs
xchg
mov
scas
add
ror
ins
cwde
cld
loop
pop
dec
enter
std
int
sub
shl
imul
mov
mov
pop
mov
fldenv
xor
sbb
adc
in
je
pop
rol
cmps
rcr
jmp
bound
sub
xchg
shl
and
lea
and
lods
fwait
nop
imul
jns
xchg
cmc
jno
xchg
enter
push
push
loop
test
loopne
jle
pmaxsw
jae
std
iret
out
idiv
xchg
retf
xor
loope
icebp
push
adc
inc
jge
mov
xchg
jl
shl
add
test
mov
jnp
cmps
push
or
inc
xlat
shl
shr
pop
stc
xchg
pop
jb
adc
jl
(bad)
cmp
sbb
add
rcl
cdq
push
xchg
ret
pop
and
xchg
out
xor
dec
sub
lods
icebp
rcl
inc
scas
add
fst
sbb
mov
sbb
stos
mov
stc
add
(bad)
data16
xor
mov
adc
aaa
out
add
adc
xor
mov
xchg
fcmovnb
jns
xchg
jo
xchg
push
xchg
sub
mov
rcl
sub
dec
dec
leave
sub
push
loopne
dec
inc
jmp
gs
push
adc
lock
outs
inc
sbb
rol
rol
and
inc
jle
ret
sub
std
adc
ins
dec
jb
pop
inc
mov
ss
cmc
mov
ja
pop
or
fidiv
push
cmp
das
sub
dec
jnp
xchg
inc
(bad)
xchg
push
push
pop
cmp
test
sub
push
jge
add
pop
xchg
cwde
pop
frstor
add
pop
(bad)
dec
mov
aam
jmp
jb
in
sbb
lods
dec
fcmovnu
push
cmp
push
jp
xor
mov
or
mov
and
xor
and
sbb
aaa
push
retf
push
inc
mov
jnp
stos
sub
inc
leave
push
pop
jne
pusha
cmp
add
mov
pop
mov
in
pop
out
(bad)
imul
adc
js
or
jae
dec
push
adc
dec
jb
neg
add
dec
cdq
jge
fild
xor
das
fadd
adc
mov
jno
cmp
dec
sti
ss
enter
or
sbb
sub
push
js
sub
inc
push
mov
adc
adc
(bad)
stos
dec
xor
push
sbb
jle
xchg
arpl
stos
out
call
jno
dec
ja
xchg
add
push
and
mov
lahf
pop
xchg
inc
les
push
adc
xor
popa
adc
xor
iret
or
sub
out
inc
inc
loop
nop
adc
or
cmps
mov
dec
sub
sbb
cmps
lock
ds
and
fs
cmp
xchg
test
xchg
je
mov
out
dec
push
ins
or
aam
add
sub
dec
adc
xchg
pop
stc
popf
pop
dec
jl
push
inc
cmp
dec
sub
jl
pop
in
sub
mov
retf
dec
xchg
das
cmp
movs
pop
dec
or
repnz
lods
retf
xchg
daa
mov
dec
cmps
xor
out
pusha
sub
jae
cmp
xor
arpl
mov
or
movs
movs
mov
repnz
add
movs
mov
push
xor
movs
cmp
loopne
cdq
mov
mov
dec
add
ret
and
into
dec
dec
pop
sbb
and
push
das
inc
outs
jp
mov
xchg
pop
inc
fldenv
inc
sub
and
xchg
inc
lea
push
or
dec
pop
or
imul
(bad)
cdq
movs
cdq
adc
adc
sub
in
jbe
mov
fsub
and
shr
add
push
daa
mov
daa
ret
adc
iret
in
enter
and
shl
xchg
and
add
in
push
mov
mov
mov
(bad)
mov
rol
or
loope
movs
mov
arpl
jmp
xor
fldenv
iret
(bad)
add
add
push
sub
nop
sbb
mov
lods
rol
retf
pop
push
push
xor
sub
mov
aam
leave
lock
cmp
inc
sub
sbb
push
adc
pop
scas
cs
mov
mov
xor
and
fs
hlt
mov
daa
mov
lods
cmp
pop
dec
mov
mov
cmp
ins
test
mov
adc
lods
repz
sbb
das
into
or
jno
fimul
inc
(bad)
push
cdq
ja
xor
inc
push
xor
mov
push
mov
ins
js
sbb
mov
ror
xchg
xchg
cwde
test
push
(bad)
imul
rcl
and
scas
and
mov
inc
test
in
or
or
lds
ret
jnp
fnstenv
cmp
adc
mov
add
or
bound
ss
popa
mov
inc
xchg
pop
jecxz
inc
popa
cmp
shr
or
(bad)
out
add
dec
pop
adc
stc
add
stos
push
sub
sahf
pusha
cmp
mov
outs
jl
lahf
mov
or
dec
xchg
and
pushf
in
into
imul
cmp
mov
pop
jmp
fild
sub
pop
movs
(bad)
dec
pop
xchg
pop
xchg
inc
pop
xor
or
stos
fdivr
iret
xor
xchg
jl
xor
pop
mov
sbb
xor
pop
cdq
movs
xchg
addr16
daa
mov
es
inc
sub
in
xchg
mov
dec
add
mov
adc
mov
add
fwait
das
mov
adc
or
enter
xor
outs
mov
fs
mov
xchg
(bad)
adc
or
mov
mov
dec
or
and
into
sub
(bad)
aam
shl
mov
inc
stos
push
in
add
scas
sub
add
in
and
(bad)
call
leave
sub
inc
xchg
rcr
dec
add
add
lock
sub
int3
cmp
scas
or
inc
xchg
out
enter
sbb
adc
inc
arpl
lods
mov
mov
shl
xchg
mov
add
pop
push
cdq
and
in
shr
push
scas
loope
add
in
mov
shl
fmul
mov
test
adc
mov
addr16
repnz
shr
add
inc
lds
clc
lods
dec
cs
imul
fisubr
pop
add
imul
sub
out
pop
add
mov
loopne
mov
xor
sar
pusha
(bad)
dec
lods
or
dec
pushf
cmc
ds
cmps
and
stos
add
xlat
xor
cwde
push
popf
ret
(bad)
cmp
test
mov
push
push
fbld
bound
icebp
xchg
ins
pop
push
clc
sbb
(bad)
and
cwde
inc
inc
jae
inc
or
(bad)
loopne
xor
add
sub
xchg
cmp
sbb
cmp
mov
add
ds
push
cdq
dec
sbb
xor
mov
popf
gs
sub
add
sbb
adc
inc
or
xchg
sbb
cmp
sub
lea
lock
repz
popa
lods
out
mov
push
sbb
mov
mov
inc
xor
ins
in
imul
sub
mov
push
cmp
pusha
xor
daa
loop
repnz
push
inc
sahf
bound
ins
mov
scas
push
(bad)
inc
je
inc
ficomp
or
rcr
outs
in
cmps
pop
call
repnz
push
loopne
pop
into
cmps
jo
pop
mov
pop
mov
(bad)
xor
mov
js
test
and
dec
jnp
dec
xor
call
sar
(bad)
sub
push
fist
push
call
and
xchg
mov
sub
dec
sub
fisubr
adc
je
sbb
pop
popf
(bad)
out
mov
retf
nop
cdq
mov
push
jl
push
cmp
adc
inc
and
cmp
xor
rcr
mov
mov
aam
add
inc
ds
and
adc
stos
jb
gs
mov
shr
sbb
jno
mov
push
pop
mov
mov
jns
push
cmps
call
pop
cs
jns
not
and
xchg
sbb
sub
sub
sub
inc
jp
jp
stc
adc
ins
jbe
popa
inc
inc
lahf
and
in
ror
movs
fidivr
repnz
sub
or
mov
cmps
dec
jne
or
addr16
add
(bad)
adc
dec
push
gs
jg
jge
mov
mov
adc
jl
stos
and
push
jl
adc
adc
xor
push
sub
mov
test
call
inc
mov
scas
movs
idiv
add
stos
(bad)
pusha
dec
or
push
push
movs
adc
xor
dec
dec
push
fidiv
cmps
ja
data16
adc
fs
jmp
cmp
icebp
sbb
in
dec
xchg
shl
push
and
rcl
push
sbb
jnp
adc
mov
adc
jb
sub
test
pop
mov
xchg
or
dec
xchg
addr16
pop
jae
push
cdq
psrlw
ins
mov
(bad)
(bad)
jecxz
retf
pop
cmp
movs
cmp
xchg
jb
sub
hlt
sub
sub
mov
ins
mov
xchg
mov
xchg
jb
dec
mov
xchg
int
add
pcmpeqw
mov
test
xor
mov
or
test
push
sahf
gs
(bad)
cmp
sub
cmp
jb
imul
sub
(bad)
daa
test
enter
sbb
mov
pop
dec
inc
imul
ja
or
bound
mov
adc
rol
or
mov
(bad)
sbb
sti
mov
push
stos
sbb
inc
pop
and
pusha
stos
jno
(bad)
dec
mov
inc
imul
adc
jns
mov
xlat
xchg
or
sub
dec
inc
aam
push
imul
and
fmul
cmp
xor
push
push
dec
mov
je
sub
cmc
popf
(bad)
test
rcr
lods
les
sbb
xor
outs
frstor
test
ror
xor
inc
push
(bad)
mov
ins
and
sbb
dec
test
xlat
adc
push
leave
push
pushf
sub
lods
call
mov
aad
mov
mov
push
or
add
push
out
add
arpl
push
scas
push
mov
or
in
hlt
arpl
nop
xchg
bound
loopne
es
in
add
xchg
jnp
pop
or
jne
xor
pop
mov
xchg
mov
add
push
push
stos
mov
mov
sbb
lods
cmps
inc
pushf
and
mov
xlat
aad
or
dec
and
jle
xor
mov
fldcw
iret
push
outs
loope
push
mov
or
fiadd
inc
sub
push
loopne
mov
test
gs
inc
gs
aad
sbb
sbb
sub
adc
repnz
xchg
scas
push
imul
add
and
icebp
jb
aam
cmp
fld
cmp
sub
fisubr
push
pop
mov
test
imul
cs
inc
mul
xchg
iret
xchg
add
mov
or
pop
or
xor
add
sbb
jl
push
fucomi
push
hlt
ret
jnp
enter
mov
outs
push
add
xchg
push
int
test
popa
adc
in
dec
ret
add
jne
add
push
nop
push
fs
ret
push
cmp
add
mov
int3
test
xchg
nop
movs
push
cmps
test
fiadd
das
dec
into
or
jl
pop
outs
idiv
imul
cmp
(bad)
pop
mov
cmp
pusha
mov
addr16
(bad)
mov
mov
or
and
mov
inc
xchg
or
or
sub
dec
inc
test
fild
loope
cmp
loop
popf
popf
sub
push
ds
xor
mov
jmp
jge
(bad)
out
je
inc
fs
inc
sub
imul
pushf
adc
push
cld
test
lahf
mov
or
js
and
xchg
ins
icebp
inc
inc
daa
push
das
retf
pop
sbb
xor
and
lods
sub
in
js
sbb
movs
xchg
sub
xchg
ins
data16
js
ret
loop
lahf
inc
cmp
sub
push
ins
(bad)
and
inc
out
mov
(bad)
adc
daa
dec
test
jecxz
push
adc
fisub
(bad)
mov
sub
shl
sub
xchg
rol
mov
aam
into
sbb
in
cmp
adc
push
adc
push
cwde
mov
les
rol
inc
adc
cmps
(bad)
xor
jle
pusha
xor
sub
outs
jg
inc
mov
sbb
mov
push
cmp
jmp
mov
dec
nop
cmp
add
inc
cdq
cmp
jb
test
mov
mov
xor
mov
sub
push
push
mov
cmp
or
push
(bad)
and
rcr
scas
retf
mov
in
sbb
cmc
std
dec
push
jnp
mov
nop
aad
dec
jno
sbb
shr
(bad)
jecxz
fisttp
movs
sti
pop
and
sub
test
sbb
cmp
and
add
add
scas
leave
and
data16
mov
and
and
pushf
movs
fwait
fwait
pop
pusha
xchg
sub
fs
imul
mov
mov
cmp
inc
sahf
cmps
push
jae
push
xchg
outs
mov
pop
sub
(bad)
mov
mov
popf
bound
mov
and
or
and
test
cwde
mov
add
fld
test
cdq
imul
test
(bad)
mov
pop
test
add
sub
sub
or
mov
out
cmp
or
sub
or
bnd
shl
xchg
cmp
sahf
stos
inc
cmp
mov
mov
xlat
xor
mov
mov
fcmovnbe
popf
xchg
sbb
aaa
loop
and
sbb
pop
mov
and
pop
and
cmp
sbb
imul
sti
lahf
bsr
add
in
retf
sub
xchg
add
cmp
retf
mov
adc
out
jo
mov
movs
xchg
test
mov
cwde
imul
imul
out
dec
mov
js
iret
xchg
fs
sbb
pop
jmp
test
sbb
movs
push
cmp
test
push
xor
jae
jecxz
in
mov
cld
fdecstp
ins
and
adc
push
sub
scas
cmp
retf
sbb
(bad)
jno
movs
retf
shl
fld
push
enter
sub
xchg
dec
arpl
je
test
ins
ss
bound
jno
xor
nop
pop
dec
push
shr
jnp
add
scas
push
jecxz
fld
xchg
sbb
addr16
cmps
mov
cwde
bound
lods
jecxz
and
dec
jmp
lahf
cmp
mov
adc
ins
add
je
dec
adc
int3
(bad)
mov
pop
push
cmp
pop
mov
iret
leave
xchg
pushf
mov
jno
rcl
int3
sub
pushf
xlat
nop
stc
mov
and
movs
rcl
inc
pop
int
push
arpl
cmp
addr16
mov
mov
xor
sbb
lods
xor
or
jns
std
cmp
aad
adc
jae
inc
add
pop
mov
sar
pop
xor
data16
pop
cmp
adc
rcr
cmps
inc
cld
lds
mov
jge
push
sbb
or
test
dec
dec
inc
push
pop
mov
fdiv
out
loop
mov
jecxz
dec
loope
push
inc
mov
adc
(bad)
fldcw
outs
jbe
aaa
cmp
mov
sbb
mov
movs
xchg
inc
fidivr
xchg
fidivr
inc
cmc
xchg
movs
lea
mov
movs
add
fs
dec
mov
xor
jo
addr16
(bad)
and
mov
push
les
add
mov
push
pusha
jno
cmps
mov
aad
int
lahf
inc
xchg
(bad)
pop
xor
pop
lods
xchg
ins
enter
inc
push
gs
mov
outs
mov
out
and
ins
fild
inc
popf
add
mov
add
dec
enter
dec
mov
xchg
addr16
mov
fsubr
call
js
ins
cs
in
and
pop
cmp
jo
jecxz
pop
and
sub
int
adc
mov
or
sahf
aad
mov
je
pop
jecxz
or
fsubr
sub
ror
mov
mov
mov
ins
lahf
sbb
xchg
inc
sbb
inc
adc
or
mov
leave
adc
jb
xor
and
or
xor
sar
push
jno
mov
adc
jge
ror
int
or
imul
xchg
mov
jl
sub
inc
jo
mov
mov
or
stos
cmp
adc
xchg
sti
cmp
int3
inc
add
dec
inc
jmp
mov
dec
push
(bad)
adc
popf
push
xor
sbb
iret
fcmove
mov
mov
out
fmulp
mov
retf
xchg
fst
sbb
push
cdq
jae
mov
retf
bound
inc
mov
mov
pop
rcr
jl
dec
sub
add
lods
imul
xor
sub
jg
lods
(bad)
mov
xor
retf
or
mov
mov
sbb
jb
inc
push
cmc
push
dec
lock
out
mov
inc
dec
jecxz
add
adc
retf
mov
add
pop
jecxz
or
sub
fdiv
ins
fadd
cmps
adc
xchg
ins
pushf
sahf
int
jns
fiadd
mov
imul
imul
sbb
outs
call
inc
xor
adc
test
movs
nop
shl
sar
cs
mov
push
jge
adc
mov
pop
in
xchg
stos
jns
scas
mov
ror
mov
outs
cmps
xchg
or
sbb
clc
push
push
(bad)
pop
mov
pop
and
mov
dec
add
mov
lods
xor
inc
sbb
jmp
out
mov
dec
and
fcmovnb
retf
or
iret
mov
cmps
outs
mov
and
mov
xor
loop
and
(bad)
lods
aas
xchg
and
dec
nop
inc
addr16
and
cwde
inc
cmp
xchg
pop
xchg
dec
xchg
mov
mov
xchg
daa
lds
mov
inc
lock
mov
(bad)
xor
sbb
test
mov
ds
ror
pop
test
fadd
mov
out
inc
ins
push
add
mov
push
dec
xchg
bound
jecxz
outs
sahf
mov
mov
dec
popf
push
movs
leave
xor
into
jb
mov
inc
adc
mov
cmp
mov
add
push
aas
pop
add
das
push
mov
pushfw
or
outs
imul
loope
hlt
pop
fidivr
cmp
pop
ds
popa
mov
or
add
(bad)
adc
ret
sbb
mov
push
xor
std
call
sar
test
arpl
cwde
add
jns
mov
add
jmp
or
xor
addr16
in
imul
pop
in
sar
mov
jo
adc
outs
mov
iret
adc
jae
out
adc
xor
aad
push
int3
add
pop
push
(bad)
fsub
adc
in
jne
push
adc
addr16
ss
dec
sub
gs
ror
jl
mov
inc
add
les
or
add
pop
or
xor
push
leave
mov
adc
int3
sub
push
xchg
sub
dec
jecxz
fldcw
jae
mov
ss
mov
and
xchg
mov
sar
push
adc
push
out
adc
pusha
repz
shl
push
xchg
sub
shr
nop
pusha
aad
leave
inc
sub
or
repnz
add
fsubr
push
cmp
adc
sub
call
es
sub
and
xchg
fwait
push
xor
mov
mov
xchg
sub
mov
sahf
sbb
in
fadd
adc
ror
into
ja
push
cdq
mov
mov
mov
lea
adc
(bad)
jle
cmp
cwde
push
mov
cmp
mov
adc
add
call
sub
int3
and
mov
rcl
xchg
shl
mov
mov
stos
mov
xchg
push
pop
stos
add
fldcw
mov
jmp
and
pop
add
pop
push
xchg
imul
jns
(bad)
(bad)
pop
sbb
out
loop
and
(bad)
out
mov
popa
add
push
pop
inc
outs
sub
jecxz
cmp
mov
nop
jbe
sub
mov
and
xor
push
in
nop
xor
lds
add
sub
mov
lahf
xchg
pop
jno
gs
xor
hlt
adc
imul
add
pusha
or
test
adc
pop
jecxz
jae
add
xor
adc
or
xchg
or
xchg
ins
out
shl
out
mov
push
js
(bad)
mov
test
mul
lods
dec
iret
and
and
daa
sbb
jb
pop
aam
and
loop
push
pop
xchg
jae
add
jae
jge
je
jl
test
inc
xor
dec
cs
cmp
scas
and
gs
out
jno
in
cmp
shr
push
add
retf
push
adc
std
scas
and
icebp
adc
sub
mov
sub
scas
inc
lock
fild
xor
push
mov
xor
jb
pop
call
jbe
cmps
xchg
cmp
adc
fsubr
push
push
cmp
add
add
xor
leave
inc
jo
adc
sub
enter
and
cmp
fcmovbe
add
rcr
out
mov
cmp
cld
pop
rol
cmp
push
bound
repnz
add
sbb
push
pusha
pop
push
movs
adc
in
dec
push
or
push
cmp
cmps
(bad)
jmp
bound
into
mov
xchg
push
das
jbe
adc
dec
mov
add
mov
mov
jp
mov
pop
jb
nop
dec
movs
std
cmp
sar
ret
add
and
cmp
popa
sub
call
(bad)
je
movs
jecxz
adc
es
or
cdq
pop
stos
add
inc
jne
xor
inc
sar
lea
cmps
cmp
fisttp
xor
or
fsubr
mov
mov
shl
imul
sbb
(bad)
xchg
outs
les
retf
iret
js
leave
inc
push
push
sub
popf
imul
sub
and
test
leave
jge
into
sbb
fwait
dec
jbe
xor
xor
push
and
xor
fisttp
test
mov
xor
cmp
push
movs
sti
mov
ins
jne
mov
sbb
pop
ss
stos
inc
sub
pop
mov
cli
shl
xor
mov
popa
retf
fstp
rcl
out
test
sub
pop
test
mov
mul
push
sub
out
xor
dec
xor
test
mov
(bad)
aam
pop
inc
xlat
test
add
ins
lods
inc
iret
imul
mov
jmp
scas
add
pop
inc
aaa
sub
retf
ret
ffreep
dec
test
cmp
mov
mov
mov
xchg
adc
cmps
mov
cmps
fs
adc
inc
mov
or
sbb
outs
enter
stos
aam
mov
cdq
cwde
clc
ret
je
xor
arpl
jecxz
pop
mov
inc
mov
dec
cs
inc
push
sub
xor
push
push
mov
je
cwde
mov
push
ret
adc
xor
mov
pushf
sbb
les
cmp
mov
dec
jno
cs
pop
mov
sub
inc
ja
cmp
hlt
stos
outs
sbb
es
into
sahf
dec
loope
(bad)
int
add
das
lods
xor
jmp
mov
gs
sbb
adc
or
mov
imul
sbb
outs
aaa
bound
movs
bound
xchg
shl
jl
xor
or
cmp
popf
mov
mov
sbb
sbb
jge
or
call
mov
sub
mov
mov
dec
scas
pop
bound
int3
xchg
sbb
sahf
xor
dec
push
cmp
cmp
mov
std
dec
cmps
(bad)
sbb
loopne
(bad)
sbb
stc
adc
div
jecxz
fwait
ret
xor
and
iret
in
dec
scas
mov
ins
pop
add
xchg
or
idiv
add
(bad)
xchg
or
sti
pop
xchg
push
in
addr16
and
jae
cs
cdq
out
sbb
(bad)
push
or
adc
(bad)
or
xor
mov
dec
push
cmps
(bad)
ror
nop
jo
or
mov
lods
push
push
cmp
sub
push
jge
pusha
adc
mov
add
push
inc
mov
mov
push
cmp
ins
test
sub
inc
ror
mov
sub
cmp
jo
repz
pop
fist
jae
lea
dec
xchg
mul
in
fisubr
stos
add
or
xchg
add
js
pushf
jns
aam
fcmovne
push
push
ret
mov
cmc
(bad)
das
in
xor
es
hlt
inc
inc
jecxz
aas
daa
fnstcw
addr16
mov
pop
lea
mov
mov
pop
or
mov
gs
ret
mov
xchg
fcmovb
(bad)
cmp
rol
data16
call
es
xlat
mov
(bad)
(bad)
fiadd
imul
cmc
cmp
call
in
mov
inc
cmc
(bad)
mov
mov
sbb
lods
mov
lea
pop
fisttp
out
jg
sub
sub
clc
adc
pop
or
dec
jle
jl
mov
fmul
cmp
push
sub
cli
fcmovnbe
jbe
ret
adc
es
idiv
(bad)
jg
cld
fcmove
loop
cs
sbb
add
xlat
cld
xor
lods
in
mov
xor
in
addr16
jge
inc
in
dec
jne
outs
mov
outs
pop
pop
mov
movs
cli
(bad)
mov
(bad)
scas
imul
mov
add
ffreep
gs
daa
and
stc
(bad)
leave
cmc
mov
iret
pop
(bad)
mov
jmp
push
out
push
imul
mov
xchg
call
and
or
mov
jecxz
jp
sbb
or
or
repz
hlt
in
jmp
pusha
adc
pop
pop
cmp
jmp
(bad)
in
das
mov
mov
(bad)
clc
hlt
push
xor
jmp
(bad)
ds
outs
push
fild
call
retw
repz
adc
sar
mov
out
sub
pop
dec
out
out
mov
push
xor
hlt
mov
rcl
(bad)
jge
pop
in
jg
icebp
inc
jbe
aad
out
sbb
fdiv
sbb
loop
ret
inc
out
push
(bad)
mov
adc
cmc
add
cld
ins
test
movs
imul
xchg
dec
jg
fwait
push
jnp
jmp
cld
pop
jge
fimul
inc
shl
sbb
jg
cmp
pop
lock
jne
fcom
retf
cdq
int3
jl
sub
add
mov
(bad)
pop
pop
push
out
mov
or
in
jmp
arpl
and
pop
mov
aad
fsubr
xchg
cvtdq2ps
dec
jp
sti
add
add
mov
or
sbb
pop
pusha
arpl
jmp
fld
setbe
test
sar
add
stc
mov
repz
lods
sbb
loope
adc
ror
add
arpl
push
inc
add
(bad)
xchg
xlat
or
dec
pop
jo
inc
fwait
(bad)
xchg
mov
and
mov
ds
jae
jle
dec
call
jmp
aad
inc
mov
cmp
xchg
arpl
push
mov
mov
movs
or
gs
and
or
dec
test
pusha
push
lods
or
push
dec
cli
fistp
test
ja
dec
inc
fmul
shl
icebp
push
fwait
cdq
fist
into
fcmovnb
xor
lock
adc
inc
lods
mov
or
mov
add
mov
sbb
leave
cmps
call
and
push
test
fstp
and
int
fnsave
out
and
leave
cmp
mov
rcl
jb
jmp
mul
cmp
repz
cmps
or
mov
and
mov
lahf
or
pop
test
mov
lods
pop
lock
out
sbb
jmp
jl
mov
jbe
xchg
repnz
push
in
ins
and
or
stos
jo
jno
dec
push
stc
scas
add
inc
lods
nop
pop
and
fldcw
outs
xchg
aas
add
or
jecxz
push
ror
cs
std
fld
push
retf
ret
fs
sub
fs
add
out
jl
dec
xchg
outs
xchg
(bad)
sbb
xchg
in
mov
sahf
and
sbb
add
jno
add
call
retf
shr
mov
or
fmul
popf
inc
in
ins
dec
loop
xor
sbb
nop
aas
push
lods
stos
aaa
add
adc
sbb
aad
and
(bad)
cld
(bad)
sti
repz
sub
inc
movs
sbb
push
push
enter
dec
stos
leave
mov
imul
out
mov
stos
sbb
fdiv
call
shl
sbb
and
sahf
(bad)
jmp
mul
jle
ficomp
out
pop
repnz
or
xchg
or
into
pop
ds
pop
or
fcom
fisubr
xchg
in
jmp
out
fadd
inc
loopne
ror
push
dec
jmp
mov
aad
push
push
std
dec
or
retf
sub
push
mov
outs
jo
jae
and
rol
add
(bad)
pop
cld
aaa
in
faddp
(bad)
inc
in
fwait
test
mov
add
jbe
push
pop
loopne
repz
inc
pop
add
dec
lock
fdivr
jge
xor
out
xchg
inc
sub
sbb
out
jnp
nop
ja
bound
xor
mov
scas
push
std
movs
inc
movs
cmp
pusha
mov
dec
xchg
loope
add
jmp
pop
mov
or
or
inc
mov
xor
sahf
adc
add
mov
sub
es
pop
sti
pop
retf
vpcmpeqb
data16
call
dec
idiv
test
dec
or
jnp
(bad)
mov
xlat
sbb
out
add
xchg
enter
pop
fild
xchg
sub
aaa
hlt
pop
xchg
push
outs
sub
ret
and
fstp
jmp
push
cld
or
in
rcl
fist
push
fist
xchg
fstp
lods
data16
pop
(bad)
xor
loope
cmp
loopne
sub
jbe
mov
pop
mov
xlat
call
mov
push
lock
mov
ret
movaps
mov
pusha
das
out
sub
das
imul
push
dec
lock
imul
adc
sub
xchg
inc
scas
mov
in
scas
xlat
out
xor
call
cld
das
sbb
cmp
mov
imul
aaa
fstp
sahf
icebp
sub
inc
(bad)
leave
ja
push
jnp
mov
add
mov
sub
cmp
(bad)
sub
or
xor
outs
leave
sbb
(bad)
xchg
dec
cmp
lahf
mov
mov
imul
(bad)
(bad)
call
gs
test
add
and
or
(bad)
repnz
test
loope
lock
pop
ins
cmp
loop
mov
pop
mov
in
std
ja
cdq
in
lods
call
fstp
xor
mov
and
ret
and
cmp
sti
add
xchg
je
push
and
int
jne
test
rcl
push
mov
sbb
shl
outs
mov
and
fidiv
mov
repnz
in
std
mov
or
call
call
or
sub
mov
aaa
ss
aaa
out
dec
jns
fnstenv
(bad)
into
hlt
inc
outs
mov
jl
mov
popa
inc
jl
scas
stc
xor
and
mov
aas
rcr
lds
inc
mov
(bad)
mov
add
mov
xor
lock
out
xlat
xchg
pop
shl
mov
shl
cmp
mov
add
mov
mov
cld
mov
test
stos
mov
inc
call
jecxz
add
repz
(bad)
and
ss
dec
xchg
adc
call
movs
js
imul
leave
mov
bound
mov
mov
mov
rcr
dec
dec
cmp
mov
stc
imul
add
xchg
jge
sub
call
(bad)
xchg
push
aad
sub
cmp
mov
(bad)
shl
cmp
mov
aaa
fs
sbb
or
stos
mov
pop
dec
enter
dec
xchg
div
sub
out
pop
and
and
test
mov
adc
inc
call
cmp
add
ins
shl
out
add
ss
cmps
repnz
cmp
xor
push
or
(bad)
aaa
cmp
imul
test
mov
inc
mov
adc
popf
or
lods
jp
dec
xchg
js
ja
cmp
ffree
push
sbb
pop
aaa
std
cmp
mov
retf
out
test
ss
fwait
mov
(bad)
rcl
sbb
ja
jnp
ins
rcl
iret
cmp
jns
and
aaa
mov
pop
aad
pop
movs
sub
or
jg
imul
fwait
stos
sti
jbe
cmp
jae
xchg
sti
mov
outs
mov
xchg
or
push
cmp
push
bound
add
cmp
lahf
pop
cld
xor
cmps
jle
pop
imul
(bad)
sbb
icebp
push
adc
(bad)
adc
stos
jecxz
movs
cmp
pusha
and
push
ins
pop
cmps
rol
(bad)
stc
jb
loope
fstp
sub
push
stos
add
test
xchg
pop
scas
inc
cmps
pop
fld
or
std
and
push
(bad)
xchg
gs
outs
add
mov
loope
xor
dec
clc
push
out
ja
retf
mov
loopne
dec
mov
ret
jmp
mov
inc
push
cwde
adc
inc
pop
sti
dec
inc
xchg
mov
xor
jmp
scas
pop
mov
loope
or
stos
nop
shl
adc
jnp
push
mov
fstp
and
push
sbb
sbb
dec
pop
jge
jae
cld
popf
pusha
ficom
in
pop
mov
fcomi
out
sub
lahf
fmul
(bad)
frstor
fldcw
pop
mov
push
dec
jmp
inc
ret
dec
(bad)
ss
pusha
in
pop
lea
pop
and
out
into
rcl
ins
or
mov
imul
push
aas
mov
pop
dec
test
inc
cmp
add
adc
jp
mov
inc
movs
lods
ds
mov
out
outs
mov
inc
fsubr
xor
pop
sti
out
mov
mov
mov
or
rol
dec
inc
out
retf
push
test
js
jnp
sub
mov
inc
or
js
retf
jmp
clc
add
cmp
repz
and
stos
outs
out
(bad)
jb
stc
ins
loopne
out
addr16
xlat
jno
sub
rol
daa
jns
xlat
sub
push
add
push
jg
icebp
push
add
sbb
mov
dec
call
aas
jne
or
xchg
(bad)
repz
es
(bad)
dec
and
xor
inc
adc
mov
aas
jmp
ins
add
add
sti
stos
push
out
rol
daa
mov
call
adc
jno
ds
mov
push
sub
push
sbb
icebp
jl
lods
push
xor
(bad)
imul
scas
lods
int3
push
imul
clc
es
sahf
push
out
(bad)
pop
shld
xor
mov
dec
je
jle
mov
adc
xor
xor
daa
push
sbb
adc
lock
je
or
or
pop
sub
idiv
sub
xchg
stos
or
pop
dec
sub
popa
jns
mov
loop
push
sbb
adc
mov
cmp
pop
leave
xchg
push
add
aam
lds
out
fnstenv
loope
cmp
das
push
sbb
outs
jp
mov
nop
or
arpl
js
leave
stos
cmp
inc
ror
jecxz
adc
jne
adc
jl
pushf
xchg
js
sbb
cmp
retf
movs
jb
hlt
cmp
push
add
shl
push
adc
mov
ja
jmp
adc
jecxz
pop
dec
lea
fnstcw
sti
shr
and
aad
es
das
hlt
sbb
mov
dec
pushf
mov
dec
iret
or
push
push
mov
das
pushf
or
or
sbb
xchg
sub
sub
xchg
push
js
pop
sar
lock
pop
mov
push
mov
cld
inc
fst
dec
xchg
xchg
mov
sbb
or
in
icebp
retf
repnz
push
mov
enter
and
pop
mov
loopne
lock
adc
jno
je
push
fdiv
sbb
sti
je
sub
and
(bad)
out
aam
xlat
xchg
xor
outs
inc
inc
push
cld
ror
sbb
add
loope
cli
xchg
cmp
in
loopne
mov
fnsave
sbb
dec
pop
outs
(bad)
bound
cld
jo
gs
loopne
lea
lods
aaa
mov
pushf
repz
xor
movs
mov
fnsave
repnz
adc
xlat
xchg
fstp
in
aad
xchg
hlt
ins
pop
or
sub
pop
ja
int
mov
and
dec
jp
ja
xchg
cmp
aaa
in
jg
fs
mov
pop
std
in
xchg
shr
not
cmp
xor
icebp
inc
pop
iret
dec
mov
cmp
aad
ficom
test
or
pop
dec
push
test
(bad)
outs
inc
in
adc
dec
hlt
inc
jbe
arpl
das
pop
pop
xor
mov
fimul
ss
dec
or
jnp
hlt
xlat
inc
fcom
loop
inc
dec
loope
lods
adc
cmps
jecxz
clc
into
jmp
clc
cmps
pop
mov
and
lods
ror
dec
mov
xor
lds
int
mov
xor
call
dec
lds
frstor
dec
cmp
stos
sub
les
lock
mov
jp
aam
cli
mov
loope
push
in
jns
loopne
jle
and
push
movs
inc
push
daa
push
ins
jl
sub
nop
neg
cmp
push
dec
inc
(bad)
mov
adc
(bad)
bnd
fist
push
xchg
mov
leave
mov
imul
adc
idiv
ins
aam
add
lea
push
sbb
call
pop
mov
mov
dec
ret
jnp
cmp
push
adc
mov
bswap
int
imul
push
xor
cmc
cmp
ins
cmps
fild
fwait
add
out
rol
jmp
cdq
cmps
sbb
push
adc
repnz
repnz
ja
ret
push
fdivr
lahf
adc
(bad)
aad
jmp
retf
jo
sub
out
sub
pop
sbb
sbb
lahf
fisub
ficomp
jns
shl
or
jle
or
(bad)
jns
ficom
sub
es
(bad)
push
addr16
ins
push
mov
mov
rcr
or
pop
add
push
loopne
outs
retf
mov
cmps
xor
fild
adc
mov
outs
xlat
dec
loop
rol
xchg
ja
in
(bad)
or
inc
in
dec
or
xchg
sbb
cmpps
(bad)
sbb
mov
sub
mov
outs
movs
ins
outs
mov
out
sub
dec
mov
pop
jae
mov
jno
inc
dec
mov
push
sub
and
arpl
repnz
sbb
push
jb
fst
(bad)
fnstcw
les
mov
xchg
and
mov
aam
loope
scas
pop
inc
(bad)
in
jle
push
adc
and
dec
jbe
cmp
(bad)
mov
repnz
sub
cmp
idiv
(bad)
sbb
jmp
(bad)
loope
outs
or
gs
sbb
or
call
or
fst
inc
mov
scas
loopne
imul
pop
stos
ret
inc
cwde
lock
mov
mov
lods
jb
rcl
loop
das
packssdw
sar
lea
jp
xchg
pop
js
jg
rol
arpl
sbb
mov
pop
sar
cs
addr16
lock
ror
int3
shl
aad
jns
fstp
lea
inc
lea
jmp
loope
push
and
xchg
and
xor
sub
pop
push
jno
jne
dec
mov
hlt
dec
xor
jno
pop
sahf
fs
adc
push
sub
push
push
sbb
sahf
sub
push
mov
sahf
cmc
mov
mov
test
jecxz
adc
aad
cwde
push
cmc
leave
and
aas
(bad)
iret
in
int
jge
and
xor
bound
jmp
jmp
or
ret
push
jmp
push
lods
lods
pop
(bad)
(bad)
sub
mov
ja
aam
sub
sti
imul
test
jmp
popa
(bad)
cmc
(bad)
neg
mov
popa
out
mov
in
jge
cmp
inc
mov
(bad)
sahf
xchg
xor
inc
jne
inc
fidiv
idiv
stc
xor
mov
dec
sbb
push
sub
pusha
mov
push
ret
mov
mov
cs
jno
call
mov
pusha
adc
mov
fs
mov
lock
(bad)
cmp
inc
inc
xor
outs
inc
out
mov
dec
scas
xchg
shl
xchg
or
dec
imul
clc
shl
stos
and
dec
lods
ja
nop
fnstsw
adc
aaa
xchg
je
out
ret
test
sbb
mov
sar
xchg
ja
xor
adc
repz
lea
lds
sub
push
xchg
xchg
enter
ss
pop
(bad)
ficom
cdq
mov
and
jecxz
aad
popa
in
dec
mov
inc
and
fwait
aaa
ja
clc
mov
ret
push
dec
add
je
jge
aaa
out
(bad)
(bad)
pop
mov
scas
jmp
dec
xchg
push
sbb
(bad)
mov
jnp
adc
xor
sbb
outs
sub
jmp
jmp
addr16
jb
push
cmps
adc
xor
movs
push
mov
jmp
shl
jb
jb
mov
(bad)
ficomp
stos
mov
inc
inc
xor
mov
outs
inc
inc
rcl
mov
pop
cmps
dec
push
xchg
mov
mov
je
xchg
mov
and
ret
push
jae
ret
das
xor
outs
mov
fwait
mov
repz
add
xor
add
imul
sub
scas
xor
mov
test
sti
fs
cdq
push
pushf
(bad)
cmp
hlt
imul
pop
cmps
enter
cmp
cli
sbb
fimul
int3
rol
aam
xchg
imul
shl
adc
push
bound
mov
ror
fadd
inc
cmp
ret
inc
test
(bad)
iret
mov
xlat
or
or
lahf
out
das
add
dec
jo
dec
or
and
jmp
or
adc
aad
pop
movs
and
pusha
(bad)
das
xor
and
inc
icebp
stos
xchg
les
add
(bad)
ret
dec
jmp
std
dec
and
cmp
cmp
push
cmps
imul
(bad)
inc
dec
je
pusha
push
or
repz
stos
xlat
ja
xchg
mov
fmul
adc
and
popf
movs
idiv
(bad)
cld
(bad)
stc
sbb
or
adc
aaa
movs
xor
mov
mov
je
pop
sub
outs
cdq
call
rol
adc
push
inc
mov
pop
in
xchg
aaa
sub
sbb
dec
fistp
mov
push
xor
in
gs
sub
push
mov
inc
loop
(bad)
enter
inc
scas
and
int3
imul
mov
adc
retf
mov
jb
test
mov
add
cmp
xchg
test
mov
lock
mov
into
clc
pinsrw
cwde
arpl
xchg
ret
lods
cwde
xchg
mov
push
data16
bswap
in
add
adc
(bad)
(bad)
mov
jge
inc
shl
sbb
cmp
mov
retf
out
push
jno
(bad)
jg
hlt
test
popf
movs
mov
int3
out
mov
or
test
mov
call
xor
cld
leave
das
or
mov
sub
or
xor
sti
pop
(bad)
ins
cmp
ret
sub
ja
jmp
aas
cmp
rcl
test
rol
adc
scas
jle
sar
addr16
adc
(bad)
sub
mov
loopne
xchg
dec
cwde
out
hlt
repz
push
pop
dec
and
ret
cmp
dec
mov
iret
repz
(bad)
cmps
sub
lods
ss
jne
lods
jecxz
fbstp
fstp
(bad)
and
das
sbb
push
outs
in
mov
cmp
retf
mov
adc
nop
xchg
and
inc
mov
dec
push
mov
pop
js
in
(bad)
and
mov
mov
adc
inc
icebp
mov
push
push
stos
iret
xchg
in
loopne
(bad)
push
inc
pop
and
stos
sbb
xor
addr16
xor
outs
nop
cmp
rol
cwde
test
(bad)
stos
cmps
jno
outs
neg
push
hlt
imul
pop
mov
pop
cmp
test
push
pop
push
enter
or
repz
push
ss
rol
jmp
test
jp
and
mov
repnz
and
mov
or
xor
sbb
mov
repz
xchg
out
movs
outs
mov
call
xor
(bad)
cmp
ja
ins
or
sbb
fimul
dec
cmps
(bad)
mov
iret
push
jg
push
popf
fwait
ss
movs
sbb
scas
shl
outs
mov
ret
fsub
xor
lods
inc
sub
xchg
sub
test
dec
out
sti
aam
into
es
inc
dec
popa
jno
scas
push
cmp
call
(bad)
sar
test
cmps
repnz
js
daa
or
enter
fdiv
(bad)
test
call
sbb
cmps
retf
add
sub
push
pop
arpl
(bad)
jne
dec
sub
sbb
and
movs
out
cmp
test
mov
mov
addr16
xchg
and
arpl
push
sub
add
loope
mov
cmc
pop
jae
xchg
jge
adc
or
or
xchg
pop
(bad)
sub
cmp
inc
xchg
cld
aas
loope
std
retf
cmps
mov
sbb
je
mov
ss
fisttp
mov
adc
xor
imul
movs
cmp
shl
dec
mov
or
mov
push
aad
jbe
pop
fadd
jge
jg
mov
jno
inc
xchg
sbb
je
or
in
and
sbb
jno
inc
fwait
out
stc
mov
xchg
push
sub
mov
pop
sub
mov
leave
shl
add
pop
xchg
mov
lods
mov
dec
dec
jne
ins
pop
pushf
and
into
aas
outs
push
pushf
mov
mov
add
xor
sbb
add
sbb
add
xor
popa
xor
pop
sbb
ret
pop
pop
outs
in
in
pop
jl
inc
das
aaa
mov
jmp
je
push
(bad)
fldcw
cwde
into
lea
sbb
ret
ror
push
not
jo
or
mov
mov
call
stos
dec
jmp
dec
sbb
lds
imul
shr
fwait
ret
loope
add
mov
dec
xchg
out
xor
mov
mov
movs
xor
imul
jns
outs
fwait
repnz
fwait
dec
inc
leave
sbb
sub
jns
pop
sar
xor
jg
addr16
push
arpl
and
mov
test
out
sbb
enter
or
sahf
lea
dec
mov
das
not
ss
ins
add
push
daa
mov
cmp
jmp
push
jno
in
sbb
cmc
jg
stos
sbb
mov
call
xchg
out
das
in
xor
fs
push
dec
sbb
movs
pushf
mov
imul
sti
fmul
gs
sbb
test
mov
cmp
sub
jmp
xchg
test
movs
sbb
inc
sahf
clc
popa
dec
mov
mov
or
push
pusha
das
cmp
jle
jo
jle
cli
outs
xor
xor
inc
cmp
pop
xor
fcom
ins
test
repnz
jbe
pop
neg
ins
jo
push
or
enter
add
movs
pop
jge
dec
sub
popf
out
test
add
das
outs
xor
(bad)
out
add
je
cdq
push
mov
xchg
les
mov
out
xor
loop
data16
mov
lods
fstp
xlat
mov
mov
sbb
sbb
adc
sub
mov
sub
inc
in
shl
(bad)
in
cdq
(bad)
jo
mov
mov
vpunpcklbw
sar
mov
push
test
repnz
xor
(bad)
(bad)
pop
sbb
jae
aaa
into
pop
rcl
bound
iret
xchg
inc
(bad)
mov
imul
loopne
clc
lds
out
or
aad
mov
mov
xor
dec
mov
mov
(bad)
aaa
lock
into
cmp
add
sub
int
retf
or
in
outs
xchg
frstor
sbb
popa
push
jp
xor
call
dec
sbb
pop
icebp
dec
sbb
mov
and
and
xchg
es
adc
sti
pop
aas
pop
stos
mov
out
dec
push
push
push
add
adc
mov
and
push
aas
(bad)
out
addr16
rol
stc
dec
lds
xchg
rcr
xor
push
aaa
shr
mov
jge
add
jecxz
mov
push
popf
stos
and
rol
out
repnz
pop
cmp
dec
xchg
mov
enter
dec
das
lea
stc
inc
sbb
push
shr
inc
xlat
(bad)
push
iret
stc
xchg
xchg
mov
mov
vcomisd
test
mov
or
shl
into
(bad)
(bad)
std
popa
pop
mov
add
jb
inc
xor
mov
xor
stc
std
and
mov
and
xor
int3
or
push
sub
and
xchg
sub
outs
aaa
shl
xor
nop
xchg
jmp
out
clc
jmp
or
dec
imul
inc
xchg
jmp
popf
pop
(bad)
jne
stc
pusha
test
push
das
loopne
int3
jnp
inc
rcr
mov
sub
push
div
outs
dec
jmp
pop
mov
and
add
fisttp
jmp
iret
add
outs
enter
ficom
and
dec
je
push
fstp
sub
mov
mov
add
sbb
fcom
cwde
mov
jmp
jecxz
mov
aam
in
push
jg
popf
lahf
pop
dec
test
popa
test
lahf
xor
imul
rcl
mov
dec
mov
xchg
test
cmp
cmc
push
push
add
inc
aam
push
sub
mov
cmp
loopne
adc
cmp
retf
xchg
mov
adc
pop
and
jg
xchg
in
loopne
sbb
jg
nop
pop
mov
enter
xor
sub
xor
out
adc
or
cmp
inc
mov
loopne
rcr
int3
mov
dec
mul
xchg
sbb
dec
jg
jmp
mov
frstor
enter
inc
push
push
int3
pop
inc
mov
cwde
mov
mov
sar
mov
xchg
sub
aaa
(bad)
jmp
add
ins
fmul
fisttp
fldenv
xor
mov
int
push
or
mov
cmp
pop
lods
nop
jns
aad
dec
mov
jle
add
pop
cmp
test
mov
sub
fsubr
stc
mov
cmps
clc
pop
mov
or
adc
ja
sub
jecxz
mov
in
mov
inc
js
and
cmp
or
mov
mov
push
je
mov
fist
xor
sysret
je
mov
idiv
das
stc
bound
xchg
ins
mov
pop
inc
loop
nop
dec
test
mov
push
xor
adc
cwde
xchg
mov
sub
ret
pop
lods
jecxz
sbb
mov
inc
test
std
rcr
cmp
mov
push
mov
jae
adc
mov
shl
pop
movs
mov
or
xchg
xchg
cmp
push
add
loope
xchg
push
dec
dec
nop
dec
dec
push
cmp
sub
sub
add
push
(bad)
xchg
movs
and
lods
and
(bad)
not
scas
scas
push
jge
mov
and
or
mov
xchg
test
jno
lds
mov
repnz
call
imul
sbb
jns
push
adc
and
movs
outs
sub
pushf
or
mov
dec
bound
mov
mov
pop
and
in
mov
fwait
into
push
fistp
sub
leave
fild
jmp
ret
std
shr
jp
scas
(bad)
in
and
sahf
loope
xchg
fwait
sub
xchg
or
mov
pop
imul
aaa
pop
inc
mov
pop
popa
(bad)
(bad)
in
icebp
inc
cmp
jmp
adc
sbb
and
push
jno
push
leave
cdq
rcr
push
and
div
clc
fadd
inc
nop
fst
xchg
mov
mov
retf
ret
sub
cmp
and
jbe
pop
shl
es
cdq
mov
and
lods
retf
sbb
mov
call
mov
ins
jle
jl
mov
dec
das
cld
iret
stos
dec
jle
test
mov
daa
mov
test
dec
in
add
mov
jae
mov
add
push
add
pop
dec
mov
sbb
mov
in
cli
fcom
xchg
movs
stc
or
jmp
int3
clc
push
enter
sub
cmp
adc
inc
pop
jp
into
inc
inc
inc
retf
mov
dec
sar
movs
pop
aas
ins
js
add
cli
push
add
jge
test
adc
test
push
and
dec
(bad)
push
iret
int
push
mov
pop
call
in
inc
xchg
les
(bad)
mov
sub
fsubr
add
add
xor
sti
mov
arpl
mov
pushf
or
add
mov
push
cmp
inc
mov
sub
jb
push
adc
cmp
int3
mov
and
xor
je
call
js
mov
pop
and
ror
xchg
cmp
push
dec
mov
push
push
jecxz
pusha
jl
xchg
jo
shl
xor
mov
das
retf
bnd
fcmove
out
and
cdq
mov
inc
add
mov
ret
add
(bad)
xlat
mov
jne
push
add
dec
cmp
(bad)
in
xor
out
test
cmp
cld
test
jne
lods
dec
jmp
ds
inc
jne
push
addr16
std
data16
inc
cmp
mov
mov
je
pop
add
xor
icebp
xor
movs
retf
(bad)
je
or
cld
ds
mov
cmp
imul
sub
or
fdivr
ja
cmp
or
ror
inc
push
inc
shl
mov
inc
shl
or
hlt
cs
and
push
xor
inc
push
test
(bad)
loopne
rol
rcr
mov
inc
jae
fisubr
loop
mov
(bad)
dec
add
mov
adc
fst
sub
mov
adc
push
lock
dec
dec
sahf
mov
jmp
lods
add
add
push
mov
cmp
mov
mov
xchg
in
mov
add
mov
push
fxch
das
mov
ins
xchg
repnz
daa
imul
cli
mov
shl
sbb
pop
adc
sbb
dec
sub
daa
addr16
(bad)
scas
fucom
pop
mov
jbe
xlat
sbb
dec
push
jae
cmc
pop
outs
pop
mov
int3
push
in
repz
jl
push
fstp
call
push
xchg
data16
repnz
mov
ja
call
cmps
inc
pop
mov
dec
dec
out
mov
jge
adc
clc
add
or
fstp
jmp
nop
frstor
mov
dec
dec
xor
loopne
test
sbb
xchg
mov
push
into
popa
mov
shl
push
jl
call
jnp
scas
inc
inc
xor
add
or
lahf
fdivr
ss
fstp
aad
pushf
sub
inc
push
pop
add
mov
fucomp
mov
pop
clc
es
mov
jecxz
fnstenv
or
sbb
xor
cmp
pop
les
inc
aad
and
mov
jae
and
dec
iret
cmps
add
(bad)
mov
mov
and
(bad)
dec
sub
lods
mov
cwde
mov
add
lock
sbb
into
xchg
pop
mov
adc
and
pop
cmp
test
out
jno
jg
cdq
mov
(bad)
xor
push
gs
in
bound
xor
mov
cmp
(bad)
scas
push
retf
sub
cmp
fistp
push
stos
rol
xor
xor
xchg
loop
cli
jno
push
fist
aad
jge
aaa
ss
add
daa
adc
loopne
adc
out
test
popa
mov
jbe
retf
mov
aas
push
inc
mov
mov
inc
in
rol
test
jmp
sbb
repnz
aam
div
cmp
sbb
cld
es
inc
dec
inc
cmps
fistp
stos
jp
cwde
sub
fiadd
int3
(bad)
lock
push
(bad)
(bad)
jle
fsubr
out
inc
js
ror
or
shr
jb
jnp
inc
scas
mov
xor
(bad)
cmp
mov
fldz
push
inc
retf
cmps
sub
cmp
ret
xchg
jne
arpl
push
daa
pop
ins
adc
mov
sub
inc
jns
popf
or
add
lods
loope
dec
cmp
and
loope
dec
jno
call
shl
mov
pop
mov
push
stos
aam
adc
popf
repnz
xor
xchg
sbb
aas
jae
push
cmps
add
sbb
jecxz
addr16
push
mov
aas
imul
or
imul
push
mov
xchg
into
sub
mov
cvttps2pi
sbb
scas
inc
inc
push
mov
cmps
ins
ds
sbb
xchg
fwait
cs
mov
inc
es
mov
shr
sbb
fstp
enter
add
or
push
mov
push
sbb
add
add
int3
test
sahf
ins
adc
cwde
cmp
stos
faddp
pop
call
mov
arpl
out
inc
jbe
jle
xchg
add
nop
aad
pop
pop
push
or
mov
(bad)
xchg
lods
sbb
ret
ffree
cmp
pop
aam
clc
test
or
mov
dec
push
push
xchg
(bad)
push
gs
imul
(bad)
fild
xchg
iret
xor
dec
pushf
push
xlat
mov
mov
daa
aaa
adc
adc
mov
js
retf
inc
pusha
jo
push
push
mov
adc
int
jnp
es
imul
hlt
std
and
sub
and
rcr
inc
jmp
lods
mov
jnp
xor
or
sbb
call
mov
mov
push
mov
xchg
mov
loopne
cmp
sti
fld
xchg
sbb
jo
shl
xchg
pop
and
or
cld
mov
push
loopne
dec
jl
pop
add
jo
test
adc
in
inc
fsincos
mov
rcr
jne
xor
push
lods
sub
movs
xchg
sub
mov
fwait
retf
cmp
xlat
cmp
mov
mov
push
add
addr16
xchg
inc
popf
test
ret
pop
xor
add
stos
mov
push
out
jae
mov
jp
mov
mov
inc
mov
mov
jl
jl
mov
in
sub
not
add
int
xor
jmp
sub
xor
adc
push
mov
and
add
or
add
in
test
push
push
dec
shr
lods
xor
jbe
xchg
sbb
js
xor
cmc
adc
add
push
add
les
sbb
dec
fisub
cdq
jp
lods
add
cmps
jae
pop
adc
retf
retf
push
stos
in
add
and
add
mov
or
cmp
(bad)
add
sbb
or
sub
test
sti
or
jb
cmovle
push
aam
sbb
mov
mov
aad
pop
inc
cmc
push
mov
jp
das
(bad)
stc
int
call
pop
pop
imul
xor
push
bswap
fs
mov
jno
ins
mov
in
(bad)
shr
jle
shl
fwait
and
pop
cmps
leave
mov
mov
cmps
les
mov
sbb
ins
and
enter
out
sti
mov
daa
out
mov
clc
out
sub
push
mov
pop
sar
stos
mov
div
std
xchg
cld
mov
popa
cdq
mov
sub
in
ror
xchg
mov
or
popf
mov
mov
popf
jmp
mov
sub
cmc
jnp
imul
iret
mov
pop
add
pop
inc
cmp
jmp
das
iret
xchg
add
rcr
idiv
xor
xchg
sbb
std
js
jl
ds
mov
bound
adc
ror
je
icebp
inc
inc
les
and
imul
test
in
call
cmp
or
test
movs
(bad)
(bad)
push
jno
nop
popa
pop
push
jnp
outs
and
xor
movs
add
and
add
and
repnz
shr
jg
lds
in
repz
or
xor
jmp
sti
(bad)
loopne
cld
bound
mov
sar
jmp
fdivp
into
xchg
shl
ret
popa
sbb
jmp
mov
mov
fcomp
int3
dec
sbb
xchg
add
popa
xchg
cmps
fstp
or
sbb
hlt
aad
jne
in
pop
pop
(bad)
(bad)
aam
les
test
lods
fwait
xchg
adc
adc
cmps
call
js
push
sub
or
mov
loopne
adc
sub
push
imul
sub
pop
sub
call
xchg
out
iret
lds
push
ret
push
sbb
sub
push
ss
cmp
cld
dec
fisub
sbb
mov
mov
dec
and
pop
iret
shr
or
sub
lods
pushf
andnps
pop
xor
std
mov
ret
in
sbb
int3
jp
loope
test
push
shl
loop
or
xchg
fs
sub
jb
xor
xor
xor
xor
add
in
jecxz
cmp
push
or
jmp
mov
inc
pop
adc
mov
rcr
test
inc
sub
jne
scas
or
int
jb
pop
jg
pop
cmps
inc
jge
xchg
out
sbb
dec
mov
jns
(bad)
(bad)
outs
movs
or
mov
rcr
test
or
xchg
add
adc
sbb
stos
cmp
dec
stc
mov
jns
mov
mov
mul
ins
mov
pop
cld
add
mov
push
push
stos
sti
stos
xchg
mov
shr
pushw
fdiv
or
xchg
jp
xchg
in
or
mov
lea
rcr
xchg
sbb
dec
xor
pop
shr
xor
les
jbe
push
(bad)
jbe
xlat
ret
not
data16
fwait
leave
cmp
outs
lea
xor
faddp
mov
imul
sub
mov
fnstenv
add
cmp
cmps
mov
add
or
jne
dec
aam
aam
mov
fstp
or
scas
call
xchg
int3
cmps
dec
mov
dec
(bad)
adc
sbb
and
mov
(bad)
mov
jle
xor
jo
cdq
mov
mov
adc
cdq
xor
les
or
call
mov
jbe
xchg
xor
push
inc
mov
aaa
fistp
(bad)
leave
and
lea
ficom
sub
adc
adc
shl
cmp
arpl
sbb
cmps
sbb
call
mov
cmp
test
inc
dec
je
(bad)
push
xchg
cmp
dec
outs
popf
xchg
clc
dec
sahf
ins
out
int3
retf
jb
jo
jle
inc
outs
jne
or
ins
test
xor
add
mov
out
mov
push
bound
add
xchg
sub
and
mov
shl
rol
sbb
ss
out
xor
pop
imul
sbb
push
add
mov
mov
mov
stos
jae
xor
add
mov
iret
xor
xor
ins
xor
mov
xor
cmp
cwde
outs
mov
add
jecxz
sar
cmps
mov
outs
scas
ins
inc
push
mov
push
stc
retf
inc
jmp
xchg
xor
mov
inc
mov
dec
xchg
imul
and
push
jb
pop
dec
loop
ins
push
loop
jnp
cmps
pop
fld
leave
jne
xchg
retf
push
inc
xchg
sti
retf
mov
sbb
jl
cmp
mov
mov
or
dec
das
hlt
add
(bad)
jmp
mov
sbb
jg
jno
pop
rol
in
sub
enter
cli
bound
lahf
push
xor
sub
sahf
es
test
ss
dec
rcr
rol
mov
xor
lock
jnp
scas
lods
sub
add
inc
push
xor
ret
add
pminub
and
xchg
xor
adc
imul
jmp
imul
inc
fbstp
repnz
mov
in
cs
and
and
sbb
xchg
repz
nop
jo
and
test
addr16
xor
pop
push
mov
out
or
dec
jmp
sbb
mov
mov
daa
adc
ins
and
ficom
sahf
nop
sahf
mov
jmp
cmps
mov
adc
sub
mov
xlat
or
ins
adc
xor
inc
int3
jmp
fsubr
int3
sbb
mov
mov
nop
and
pusha
mov
inc
shl
aam
pushf
data16
mov
inc
mov
rcr
push
(bad)
jns
mov
xchg
and
cmps
fcmovu
test
adc
cmp
push
cmp
mov
sub
or
adc
shl
cmp
sub
or
mov
shl
fwait
stc
ja
int3
jnp
addr16
dec
inc
scas
test
std
cmp
and
clc
and
dec
test
mov
stos
daa
xchg
aaa
xor
shl
jecxz
push
outs
mov
push
ins
push
sub
cmp
fs
pop
ret
fimul
cmps
imul
and
xchg
xchg
imul
popa
xchg
dec
push
push
and
pop
rcl
jb
mov
or
mov
xchg
ja
sub
cmp
stos
jle
mov
outs
sbb
loopne
add
js
mov
fwait
sti
push
xlat
les
mov
cwde
js
call
or
cmp
or
add
rol
in
in
inc
hlt
jl
outs
cmc
mov
mov
cld
sbb
pop
out
cs
and
adc
add
adc
adc
cmp
xor
add
and
pop
pop
movs
dec
mov
xchg
xchg
dec
(bad)
stos
add
loopne
inc
cdq
push
push
iret
lods
cld
adc
stos
push
fisubr
inc
scas
sbb
pop
ror
icebp
iret
pop
fcom
daa
imul
cmc
xor
push
(bad)
dec
mov
xor
cmc
(bad)
fbstp
adc
ins
push
pop
sub
inc
push
inc
adc
cmp
js
addr16
lods
test
add
jns
adc
cli
stos
es
mov
fnsave
ds
pop
mov
in
inc
jp
mov
dec
(bad)
ror
or
movs
mov
mov
sub
adc
jmp
outs
fstp
jmp
(bad)
cli
repnz
sub
adc
mov
call
or
shl
repz
sbb
mov
xor
inc
push
std
cmp
ss
add
or
enter
aad
and
retf
or
cmp
adc
inc
test
push
stos
cmp
mov
mov
rcr
pop
mov
lock
xchg
retf
add
in
push
jle
and
and
movs
adc
outs
out
adc
mov
mov
push
pop
popa
mov
pushf
inc
arpl
ror
jo
pushf
cmp
dec
outs
test
sub
aam
cdq
scas
push
pop
hlt
call
fs
or
xchg
push
in
std
inc
into
dec
jne
cmps
shl
push
fld
xchg
add
pop
mov
dec
mov
cld
jne
pop
pop
xor
ins
leave
loop
std
mov
out
inc
jmp
ins
cmp
push
out
jbe
pop
add
xor
mov
cwde
out
aaa
loope
es
bound
ins
repnz
sub
out
cs
mov
das
xchg
icebp
xor
jg
enter
or
out
aam
jp
mov
xchg
sahf
mov
or
pop
sahf
add
xchg
int
adc
shr
mov
imul
adc
and
mov
push
lahf
enter
scas
outs
pop
jnp
cmp
mov
cwde
(bad)
xchg
(bad)
mov
add
or
(bad)
pushf
(bad)
in
pusha
loope
sbb
push
mov
inc
dec
std
push
in
sti
jmp
pop
mov
jne
int
scas
out
std
leave
mov
leave
retf
adc
jne
inc
out
cdq
add
mov
inc
xchg
ret
hlt
ins
test
and
push
ins
and
loopne
mov
sub
inc
cmp
cmps
call
cmp
das
fld
in
and
imul
xchg
sbb
nop
das
out
dec
bound
push
pop
int3
leave
adc
das
push
mov
xchg
call
push
mov
jo
cmp
jmp
test
xor
xor
ds
add
inc
pop
adc
jl
adc
or
or
dec
push
imul
icebp
xchg
cs
imul
(bad)
push
push
(bad)
fidivr
in
pop
fcomp
js
adc
mov
adc
jle
pop
daa
push
push
mov
dec
ds
jecxz
lock
scas
cmp
add
fistp
jno
mov
in
dec
daa
adc
inc
adc
mov
sub
and
fcom
inc
outs
mov
sbb
ins
fprem1
adc
or
out
sub
bound
lea
outs
inc
ds
sahf
mov
jge
push
test
and
push
fwait
adc
sbb
cwde
rol
movs
or
js
xchg
rcl
enter
pop
add
and
jecxz
dec
aas
and
leave
mov
in
pop
(bad)
mov
pop
pop
cmp
xchg
jge
and
inc
enter
cmp
dec
movs
ds
xchg
cmc
mov
sar
adc
adc
je
leave
lock
sbb
js
stos
adc
push
pop
mov
sbb
cmp
leave
fistp
cmps
adc
dec
push
sbb
jae
inc
stos
maxps
shr
das
push
shl
mov
(bad)
enter
rcl
add
push
test
call
cmp
stos
add
ret
call
ret
fiadd
dec
push
fisttp
popa
cld
xchg
mov
push
jae
(bad)
mov
add
sub
pop
xchg
or
fist
(bad)
xchg
cdq
jae
sar
jl
fimul
arpl
test
push
movs
test
sub
imul
rcl
or
and
mov
ret
pop
inc
sahf
ret
inc
pop
inc
sahf
lea
xchg
aad
stos
push
outs
lods
test
push
or
mov
loopne
jmp
xor
addr16
or
cmp
or
out
pop
popa
dec
pop
sbb
rol
rcl
int3
test
inc
cmp
add
aaa
ss
and
cli
retf
and
xchg
xchg
cmp
push
mov
loopne
push
mov
into
or
idiv
sbb
into
cmps
mov
int
into
test
push
push
adc
mov
outs
fdivr
push
push
mov
xchg
mov
mov
sahf
xchg
mov
std
cmp
nop
rcl
mov
in
mov
in
xlat
or
jecxz
pop
dec
cwde
int
xor
sub
arpl
cmps
loop
jae
mov
psrlw
pop
sahf
cld
imul
rcl
mov
les
jno
pop
pop
jae
xor
xchg
adc
xor
lods
mov
fistp
mov
add
mov
(bad)
popf
ins
mov
test
xchg
in
push
adc
sub
cmp
xchg
lods
outs
pop
push
xchg
and
(bad)
outs
xor
sbb
mov
cmc
mov
dec
pop
push
xchg
push
in
xchg
mov
dec
shl
lds
add
push
inc
cli
lods
cmp
in
inc
lods
jns
jne
(bad)
xchg
add
ret
int
cli
sub
jmp
and
push
outs
jle
popf
call
es
cmp
xchg
sbb
scas
mov
xchg
mov
mov
mov
je
add
outs
lods
mov
cld
add
dec
add
dec
push
cmp
test
sbb
pop
(bad)
sbb
stos
arpl
mov
mov
mov
not
gs
jmp
popa
pop
pop
mov
and
dec
jno
into
add
inc
jnp
jmp
repz
mov
stos
ins
imul
xchg
retf
hlt
pop
pop
in
xlat
jne
popf
mov
imul
cmps
mov
icebp
loop
imul
cmp
mov
xchg
cdq
inc
js
std
sbb
les
in
cli
outs
call
cli
test
push
adc
nop
pop
lock
enter
stos
leave
fisub
rcl
in
cli
fisub
fld
pusha
pop
sbb
xor
adc
jnp
sbb
jmp
test
mov
jle
imul
mov
in
jbe
xchg
mov
icebp
pop
inc
mov
fld
cs
lods
or
retf
mov
popf
jno
or
loopne
sahf
jge
xlat
jmp
dec
btr
inc
movs
leave
push
cmp
aam
fistp
ret
mov
jle
imul
mov
cs
popf
mov
in
or
add
imul
scas
add
pop
mov
push
out
in
bound
sub
sar
movs
movs
dec
rcl
jne
fbld
or
sbb
xchg
nop
lods
jmp
push
mov
mov
dec
dec
stos
aam
add
dec
mov
stc
test
mov
fmul
rep
mov
inc
pop
stos
fcmovbe
pop
bound
jle
add
mov
or
mov
sub
nop
mov
lods
fsubr
cmp
xchg
stos
jmp
adc
jnp
rol
cmp
(bad)
jb
jg
int3
(bad)
mov
lock
inc
icebp
cmp
mov
ja
xchg
das
hlt
stos
dec
shl
pop
inc
out
mov
adc
les
pop
cmps
xchg
addr16
mov
daa
push
retf
into
rol
adc
out
and
xor
pop
jbe
cmp
lock
fisttp
jns
lods
push
dec
adc
aad
mov
and
dec
ss
mov
push
jle
(bad)
pop
jns
stos
lea
adc
cmps
enter
dec
leave
cmp
dec
fcmovne
out
add
inc
jb
(bad)
push
(bad)
mov
ins
inc
daa
or
mov
fs
add
aas
xor
dec
and
cs
dec
test
ss
repz
jo
bound
loop
mov
aam
stos
loope
in
pop
lahf
cmp
enter
mov
lods
pop
pushw
add
jle
inc
push
lock
jbe
mov
adc
lods
inc
push
xchg
dec
cld
mov
ficomp
xchg
or
cwde
imul
in
shr
int
addr16
ss
test
mov
or
dec
pusha
inc
push
out
sbb
leave
and
cmp
xor
or
iret
fwait
xchg
pop
xchg
add
xor
xchg
icebp
addr16
push
push
xlat
cmp
xor
inc
mov
ins
pusha
mov
push
aaa
sub
je
pop
sub
sub
lahf
ror
xchg
imul
mov
mov
pop
push
gs
ret
mov
sub
out
sbb
out
imul
not
loope
into
cli
sbb
pop
pop
lods
push
mov
pop
das
lds
scas
rol
and
push
add
lock
xor
test
std
cmp
jecxz
sub
push
xor
pop
outs
(bad)
fiadd
jmp
dec
loope
mov
cmp
pop
pop
aad
movs
fimul
aam
loopne
loopne
lds
lea
ret
les
lock
stos
adc
dec
rol
mul
xor
pop
mov
sub
out
shr
lock
sbb
mov
add
test
fsubr
pop
(bad)
adc
out
pop
jg
rcr
push
cmp
ja
mov
inc
push
push
jmp
and
push
or
pusha
retf
push
jnp
sbb
mov
mov
adc
dec
xchg
xchg
imul
and
in
imul
xlat
xor
jo
mov
cmp
xor
dec
imul
(bad)
pop
sub
mov
ret
mov
jmp
dec
xor
mov
mov
shr
rol
mov
daa
mov
(bad)
mov
sbb
mov
fidiv
out
cmp
vpsubsw
sbb
push
dec
cmp
les
imul
retf
sbb
push
popf
sahf
mov
mov
sahf
dec
mov
shr
pop
push
int3
xor
and
cwde
dec
jnp
mul
(bad)
push
out
jb
sub
aam
lods
stc
sar
jbe
jmp
rcr
xchg
nop
jl
aam
sbb
adc
sbb
cmp
and
lods
mul
ficom
jbe
cmps
aad
push
in
pop
cmps
cmp
push
xchg
ins
inc
(bad)
loopne
mov
out
cmps
add
mov
push
pop
dec
dec
fldenv
mov
in
daa
outs
test
popa
xor
stc
pop
nop
sahf
push
cmp
movs
cld
mov
add
neg
cmps
cli
adc
sub
push
or
cmp
sbb
or
xor
cmp
ss
scas
dec
jne
lahf
lods
sub
iret
imul
jbe
dec
cdq
sub
cmps
repnz
inc
sub
fcom
stc
dec
push
sar
cmp
inc
or
(bad)
mov
call
cdq
push
leave
dec
mov
cmps
dec
jnp
test
push
pop
mov
mov
sub
lea
xchg
sti
jmp
das
sahf
mov
test
(bad)
pop
fwait
or
ja
lds
stos
(bad)
sbb
mov
push
verw
dec
and
outs
lea
mov
pop
sahf
dec
pop
aam
repnz
and
rcr
or
add
pop
xchg
lahf
push
out
xchg
in
sahf
repnz
sbb
sbb
or
mov
push
cmovs
sbb
adc
iret
cmc
ret
inc
pusha
mov
cmp
test
(bad)
sub
adc
icebp
xchg
popf
call
fnsave
jne
cmps
inc
cmp
xor
repnz
fisubr
int
jg
push
retf
lods
ins
push
daa
jmp
inc
mov
sbb
dec
push
hlt
or
and
fwait
xchg
jnp
inc
ret
dec
jns
pop
iret
ret
pop
lock
xchg
cmp
mov
cwde
icebp
jle
mov
fs
cs
mov
add
fidivr
xchg
jmp
cwde
shl
mov
jle
icebp
shl
jbe
xchg
daa
enter
pushf
in
repnz
das
cmc
nop
mov
loop
mov
push
jmp
and
xchg
pop
icebp
mov
jmp
xchg
(bad)
push
add
aad
scas
ret
xchg
and
mov
pop
lds
and
cld
in
es
adc
addr16
sahf
ss
lock
jnp
(bad)
add
jmp
jge
cmp
test
jnp
cmpps
cmp
out
popf
imul
lahf
or
adc
mov
loope
sbb
imul
lods
neg
dec
sub
mov
sbb
sub
push
and
(bad)
aam
dec
(bad)
cmp
lea
cmp
adc
or
(bad)
mov
xchg
dec
mov
mov
dec
xlat
push
push
stos
(bad)
xchg
pop
test
or
jo
in
push
sbb
dec
adc
in
cmp
popa
dec
push
in
xchg
inc
icebp
jne
dec
mov
inc
pop
ds
fwait
mov
cmp
inc
scas
lods
mov
fmul
mov
int
inc
sub
retf
pop
cmp
or
jmp
jne
nop
(bad)
jb
in
ins
jmp
dec
push
and
pop
or
lods
and
fcomi
mov
nop
repnz
sbb
mov
bound
xor
dec
xchg
sub
loopne
push
lock
add
dec
shr
lods
enter
jecxz
push
dec
add
gs
xchg
inc
lock
mov
fdivr
jmp
mov
cmp
mov
push
mov
cmp
jge
dec
sbb
cld
sub
lods
jne
dec
or
rcr
mov
mov
enter
mov
inc
mov
int
xchg
dec
pop
jl
mov
inc
lock
int3
push
shl
call
test
sbb
aas
sar
mov
pusha
push
jo
stc
lea
push
pop
mov
stos
js
lods
and
xor
ret
xor
movs
out
ss
mov
lahf
xchg
aaa
cmp
call
mov
cmp
mov
in
loopne
ja
ror
ja
ret
push
aas
shr
(bad)
sbb
inc
ins
jge
scas
movs
ins
or
jge
cmp
adc
loopne
push
mov
sbb
push
push
add
cmp
pop
fs
push
dec
inc
inc
dec
and
ret
shl
rcl
xchg
pop
jae
jmp
jp
inc
adc
mov
jmp
cmp
jmp
push
pop
and
cld
outs
xor
mov
leave
movs
aaa
pop
rcr
push
xor
add
out
and
stos
add
pop
je
jecxz
lods
mov
pop
xor
add
sub
test
in
or
test
ins
adc
sbb
pop
imul
je
int
and
test
xor
js
dec
popf
addr16
or
jle
jecxz
cmps
xor
stc
jne
lahf
lock
(bad)
mov
fbstp
sub
pushf
pushw
push
inc
and
cld
ds
adc
mov
aas
pushf
xchg
sbb
mov
dec
add
push
or
lds
pop
sahf
repz
ret
jge
call
aas
in
xor
and
ror
ret
movs
or
mov
fbstp
fidiv
inc
mov
js
(bad)
sub
jb
scas
mov
xor
push
fldz
sti
jge
mov
push
out
cmc
call
push
repnz
pop
je
cs
in
cmps
adc
jl
pop
jecxz
ficom
pop
or
push
dec
push
sub
call
mov
mov
sti
push
jae
sub
sahf
aam
cmp
push
cwde
jns
add
mov
repnz
xchg
push
idiv
add
movs
jno
jb
sbb
jp
lahf
int
dec
mov
xor
les
inc
sbb
sbb
icebp
cdq
stc
mov
pop
data16
push
jne
out
and
cmp
aas
bound
mov
cmp
add
mov
fadd
lods
addr16
clc
imul
pushf
xchg
jmp
icebp
push
pop
gs
aam
ins
fs
aad
mov
sahf
call
out
cdq
data16
sub
xchg
xor
pop
and
aam
fmul
ret
and
int3
cwde
outs
stos
popa
mov
mov
repz
(bad)
rcr
jne
mov
adc
mov
mov
call
sahf
jl
clc
inc
or
pop
inc
adc
dec
cs
movs
and
shr
aam
jmp
jns
xchg
jle
mov
sbb
and
fmul
lahf
shr
and
xchg
stos
xor
and
rcr
ret
adc
jns
add
or
fmul
sub
mov
(bad)
dec
adc
mov
sub
(bad)
and
pop
inc
bound
fisttp
push
data16
pop
mov
sbb
xchg
mov
sub
ins
add
cmp
add
shl
stc
inc
and
sub
xor
cmp
dec
jb
dec
xor
add
dec
mov
or
and
inc
mov
shl
loop
jnp
cmp
push
push
push
add
rol
mov
push
inc
sub
mov
cs
pop
and
jns
stos
jae
test
dec
inc
mov
imul
pop
pop
or
jle
jae
ins
xor
jnp
imul
mov
inc
int
int3
jae
jnp
mov
mov
div
cmps
and
loope
mov
nop
dec
ins
lods
lahf
pop
push
sub
cld
fdivrp
retf
mov
bound
movs
bound
push
push
das
add
test
xor
and
in
push
hlt
cld
sbb
ds
fidiv
cmps
push
push
mov
pusha
sbb
popa
xchg
and
pop
push
xchg
dec
jecxz
pop
daa
jae
dec
imul
shl
jl
push
jbe
sbb
stos
xor
bound
dec
jp
xchg
mov
mov
bound
mov
mov
icebp
fs
dec
or
div
jmp
fcmovnbe
retf
out
sbb
in
cmp
jmp
inc
aas
pcmpgtd
mov
imul
mov
hlt
xchg
push
cmc
add
cmp
push
jp
stos
inc
sti
inc
pop
repz
iret
push
mov
fucomi
aad
fisttp
pop
mov
mov
sbb
push
xor
cwde
mov
mov
mov
mov
sub
jg
lods
push
out
xor
scas
pop
loop
xchg
lock
pop
dec
test
xchg
repz
dec
sti
or
rcl
ficom
lods
pop
inc
xchg
pop
xor
sar
inc
inc
int3
adc
jnp
dec
xor
mov
ss
cmp
mov
fbstp
(bad)
int3
lods
dec
lods
sti
sbb
mov
cmp
inc
xor
movs
push
sub
adc
data16
adc
mov
fidivr
fwait
xor
inc
(bad)
retf
mov
mov
pop
mov
push
xchg
mov
push
mov
fsubr
mov
sahf
outs
xor
mov
mov
hlt
bound
cmp
xor
lods
movs
dec
add
iret
aas
and
mov
icebp
jmp
mov
stos
pop
jno
cmp
fcom
xchg
mov
or
rcr
shl
int
pop
dec
outs
pop
xchg
les
mov
pop
ins
cwde
cmp
inc
fwait
lods
mov
or
sahf
push
xchg
push
xchg
fcmovne
cmps
or
mov
xchg
scas
adc
sbb
and
sub
out
sbb
xchg
cmp
pop
test
jle
dec
jle
push
push
adc
test
aad
jl
xchg
jae
idiv
push
mov
dec
mov
pop
popa
pop
test
mov
and
rcr
xor
pop
repz
mov
push
dec
mov
ss
aam
inc
into
idiv
enter
and
add
push
push
add
sub
sbb
push
adc
sti
inc
sbb
cwde
xlat
xchg
leave
neg
pop
jae
les
jns
xchg
rcl
xchg
dec
xlat
push
mov
mov
cmp
adc
adc
push
dec
mov
push
xor
in
pop
mov
add
retf
pop
enter
jmp
pop
pusha
rcl
ss
push
pop
loopne
(bad)
push
lods
sub
xor
adc
stos
xor
(bad)
mov
jo
jne
push
mov
dec
outs
jl
inc
xchg
adc
or
jb
enter
sub
lock
cmp
addr16
mov
mov
aas
adc
in
add
jmp
adc
out
sbb
std
jmp
test
mov
lods
cmp
and
add
gs
repnz
enter
dec
mov
inc
fcom
jp
add
xor
gs
jmp
mov
repnz
mov
js
pop
inc
stos
daa
shr
ficom
push
xor
mov
in
stc
mov
xor
push
or
pop
(bad)
js
popa
cmp
lods
jo
lds
xchg
mov
jbe
retf
mov
jbe
inc
fisubr
sbb
test
jns
xchg
sub
rol
stos
shl
aad
mov
das
push
jbe
cmp
setne
dec
iret
and
imul
pusha
clc
clc
jbe
xchg
dec
dec
inc
dec
sub
shl
mov
rol
xchg
sahf
lahf
mov
jo
adc
add
adc
(bad)
push
imul
icebp
and
sahf
sahf
or
push
sbb
std
jmp
dec
ins
mov
adc
or
aam
mov
rcl
out
inc
xchg
xchg
jl
pushf
rol
and
jae
jg
imul
outs
and
pushf
pop
inc
scas
or
pop
(bad)
movs
div
pop
bound
repnz
not
sbb
mov
pop
sub
scas
push
cmps
lock
(bad)
aam
scas
mov
dec
ret
(bad)
lods
jb
loope
or
pop
lods
imul
mov
pop
dec
sbb
popf
int
sub
jne
sub
cmp
mov
hlt
xor
xor
aad
test
jns
xchg
xor
aad
fcom
mov
or
f2xm1
xchg
dec
popf
pushf
jmp
jmp
fisub
ficomp
ror
or
daa
cli
fldenv
mov
push
cmp
dec
lods
imul
add
stos
aam
lods
out
fstp
es
jle
jbe
xor
in
xchg
mov
add
dec
int3
in
push
push
push
lock
sub
fsubr
jns
mov
cmp
fiadd
sbb
adc
test
out
retf
add
leave
leave
aas
mov
jle
sti
and
mov
or
adc
mov
and
sub
jne
jbe
test
addr16
ja
lock
dec
ins
fidiv
rcr
lds
fist
pop
out
cwde
int
adc
sub
dec
jge
gs
pop
es
rcl
add
vaddss
cwde
mov
dec
fist
xchg
outs
icebp
out
push
lods
fisttp
or
cli
or
jmp
rcr
jmp
pop
push
xor
test
cmp
push
add
add
mov
sub
jns
push
imul
jmp
xor
sub
jmp
ins
push
(bad)
mov
mov
lock
out
sub
sbb
fmul
jno
ins
sbb
sbb
pusha
lods
out
cwde
mov
sub
push
imul
jnp
in
add
ret
jle
sub
enter
int
pop
mov
dec
stos
xlat
mov
cmp
or
ds
jo
inc
xor
out
fsincos
cmp
add
jecxz
pop
and
inc
popf
xor
mov
push
hlt
and
fist
out
outs
aaa
(bad)
lods
test
loop
pop
push
cmp
inc
add
lea
dec
dec
push
jne
adc
push
inc
mov
cmp
je
fisub
push
aaa
mov
ror
dec
jmp
xchg
cmp
mov
call
out
daa
and
push
dec
fdiv
js
and
or
jecxz
inc
stc
add
in
adc
or
xchg
lock
je
je
push
cs
pop
enter
ficom
add
test
sahf
push
push
mov
fimul
push
scas
ins
dec
push
ja
aam
cwde
ficom
pop
adc
inc
fmul
mov
cmp
out
(bad)
jbe
or
dec
and
xchg
jae
dec
xor
aad
repnz
pop
sbb
adc
jl
fwait
lods
rol
dec
pusha
pop
lahf
movs
mov
pop
mov
(bad)
fisttp
pop
xchg
aam
cmp
arpl
sub
fmul
mov
and
ret
fnstenv
repnz
push
lods
retf
mov
retf
es
adc
aas
scas
or
mov
add
retf
mov
jmp
(bad)
(bad)
jl
cdq
sbb
cmp
icebp
iret
mov
jl
xor
cli
jmp
imul
iret
test
outs
iret
xchg
mov
mov
movs
adc
pop
or
inc
xor
xchg
push
nop
popf
sub
cmp
scas
ins
cwde
xchg
int3
sub
push
adc
div
sub
(bad)
jmp
jecxz
lods
mov
out
or
mov
nop
std
popf
(bad)
pop
retf
stc
rcr
mov
call
rcl
add
add
stos
and
and
mov
test
popf
and
xor
jge
fsubr
pushf
pop
xchg
ja
ret
je
xchg
mov
xor
mov
adc
mov
call
test
mov
or
imul
mov
pop
push
lods
(bad)
cmp
loopne
jbe
mov
fwait
xchg
push
push
push
add
mov
scas
jge
or
cmp
push
(bad)
mov
sub
push
pop
xchg
jnp
adc
int
and
loop
test
dec
dec
ss
(bad)
cmp
cmp
mov
fwait
retf
jne
add
(bad)
mov
shl
jge
push
nop
movs
cwde
pusha
inc
(bad)
inc
fiadd
sbb
dec
and
xchg
sbb
xchg
fisttp
les
jbe
test
(bad)
sbb
cmp
adc
out
movs
mov
and
sar
jb
test
movs
dec
lods
or
xor
jb
dec
push
adc
(bad)
xor
loope
pop
in
add
xchg
(bad)
and
xchg
nop
gs
pop
data16
sahf
lods
(bad)
sbb
call
xchg
(bad)
movs
and
lds
sbb
pop
mov
test
adc
stos
mov
or
inc
xchg
and
xchg
out
hlt
dec
xchg
movs
mov
inc
js
dec
cmps
(bad)
cdq
jae
inc
ror
xor
outs
jns
push
call
pushf
mov
inc
popf
mov
xchg
ja
(bad)
sub
mov
dec
jl
call
or
test
repnz
(bad)
cmp
lea
into
loope
mov
and
jbe
mov
jo
sbb
dec
outs
mov
push
inc
setnp
fs
pop
mov
leave
(bad)
or
and
mov
cmc
loopne
ja
imul
jne
fnstenv
sar
sub
and
fcom
add
and
and
xor
push
mov
lds
push
ins
in
mov
and
or
xchg
sub
jmp
cmp
dec
retf
sub
leave
addr16
xchg
xchg
popa
push
mov
dec
mov
enter
std
sub
xchg
inc
mov
adc
mov
mov
dec
fadd
(bad)
retf
(bad)
sar
in
loope
push
shl
outs
dec
inc
sbb
push
push
cmp
fwait
scas
push
mov
inc
xor
cwde
ret
aad
jmp
pop
push
add
xor
xor
mov
popa
loop
icebp
or
retf
jle
mov
push
push
xchg
in
pusha
adc
push
adc
and
jb
imul
mov
fs
retf
icebp
sbb
into
and
dec
jo
push
pop
push
shr
xchg
or
repz
cmc
mov
(bad)
cmp
jne
and
int
dec
sbb
or
outs
fisub
retf
jnp
std
sar
retf
scas
mov
stos
sbb
popa
and
add
jns
add
sub
popa
fld
or
jbe
push
mov
scas
sbb
jo
enter
test
aas
mov
adc
cdq
arpl
std
cmp
mov
outs
jmp
push
mov
outs
in
sub
int
mov
and
es
mov
sbb
push
and
mov
xor
add
xlat
sub
adc
cld
mov
(bad)
lods
and
jo
add
mov
cwde
sub
mov
push
mov
sub
push
ja
pop
inc
imul
lock
inc
pop
pop
rcl
fs
pop
mov
and
gs
sub
jecxz
jmp
sub
fs
adc
out
cmp
mov
cmp
adc
cmps
mov
loop
movs
inc
jae
mov
cli
jb
das
jbe
jmp
fisubr
or
sbb
hlt
push
sub
out
or
std
cmp
jl
daa
xor
retf
(bad)
lock
jle
mov
cmp
mov
pop
sub
dec
jge
and
pop
imul
cmp
les
jns
lds
xchg
stc
xor
imul
dec
shl
addr16
jmp
out
push
vmovdqu
dec
dec
sahf
xchg
jno
lds
loop
int
ret
sbb
retf
mov
pop
pop
je
mov
mov
inc
cmps
sub
(bad)
push
pop
inc
sbb
fs
nop
ret
xchg
push
xor
push
cmp
mov
jle
xchg
fild
imul
add
in
sub
loope
iret
pop
jp
jns
inc
loope
mov
rol
in
mov
pushf
mov
sub
mov
and
stos
mov
stos
push
int
cmp
test
mov
dec
pop
std
and
lods
xchg
pop
pop
in
jmp
cdq
(bad)
mov
jae
(bad)
inc
mov
aas
daa
cwde
adc
test
xchg
hlt
aad
or
jnp
adc
vpsubusw
sbb
inc
loop
adc
movs
ja
retf
ror
scas
fist
rcl
pop
push
call
enter
inc
mov
fsubr
cdq
pop
and
pop
out
daa
mov
loop
dec
xchg
fist
scas
xchg
xchg
pop
aam
sar
repz
sub
pusha
push
dec
fwait
arpl
aaa
cmc
cmp
mov
outs
jno
call
cmc
push
popa
ins
sbb
xchg
and
add
test
mov
imul
aaa
cmps
add
dec
add
mov
add
je
fs
mov
and
or
jp
mov
aaa
inc
fwait
and
cmp
fadd
loop
sbb
mul
dec
and
push
xlat
jo
stos
dec
add
jmp
cmps
xchg
pushf
xor
into
push
mov
out
fbstp
push
dec
bound
fs
fwait
inc
jo
adc
int3
add
cmp
ficomp
push
xor
sti
push
sbb
out
mov
push
inc
loopne
arpl
pop
sahf
lea
xchg
mov
into
jmp
scas
ret
cmp
addr16
(bad)
cmp
shl
adc
fmul
leave
dec
push
cdq
repnz
pop
xchg
jp
mov
ss
cmp
xor
inc
cmps
mul
loop
mov
cdq
jecxz
xor
mov
je
mov
xor
jo
jmp
jecxz
cdq
lods
movs
out
jns
push
mov
push
add
add
cdq
test
mov
ds
out
xchg
xchg
gs
xor
cli
xor
jne
test
div
pop
jp
mov
das
ret
push
call
mov
xchg
movs
mov
movs
cmp
idiv
xor
adc
ror
call
ror
hlt
stos
rol
xchg
pop
xor
add
adc
ret
mov
(bad)
nop
dec
jae
jmp
out
imul
std
cwde
sbb
fsub
rcr
call
mov
test
pop
rcl
pop
inc
pop
rcl
ret
inc
outs
and
mov
mov
adc
rol
cmp
inc
fsub
test
push
adc
xor
in
loopne
(bad)
mov
loop
mov
push
mov
xchg
fisttp
int
fiadd
lods
or
in
mov
adc
(bad)
fnsave
xor
or
pop
std
xchg
or
push
out
or
in
outs
jge
push
into
xchg
mov
loope
retf
and
push
cmp
sahf
push
and
ds
mov
std
cmp
and
stos
mov
mov
push
(bad)
popa
push
push
sbb
mov
in
sub
mov
nop
shl
jmp
push
sub
ror
mov
test
hlt
pop
nop
fistp
jge
xchg
adc
jecxz
or
inc
mov
call
je
imul
lahf
ror
adc
inc
cmp
out
push
aad
(bad)
dec
mov
ret
inc
mov
sti
or
repnz
aam
cdq
jge
and
test
dec
push
dec
div
sub
inc
icebp
push
inc
ret
xchg
adc
movs
jmp
cld
jp
push
sub
mov
push
bnd
ficom
cmps
scas
fisubr
test
inc
aaa
retf
call
aam
out
mov
lahf
jg
mov
jo
sbb
push
in
sti
test
dec
pshufw
loope
pop
call
mov
retf
in
xor
jp
or
jno
lea
rcr
adc
hlt
(bad)
in
in
or
cli
cmp
or
shl
imul
jnp
stos
push
stos
std
jne
mov
retf
inc
dec
aad
das
cmp
ins
mov
into
or
push
pop
cmp
xchg
mov
mov
cwde
je
and
jnp
les
dec
sti
into
lahf
stc
inc
xor
scas
call
fst
fist
and
inc
aad
jno
jnp
inc
adc
xor
pop
pop
std
jmp
loope
mov
push
and
mov
dec
stos
mov
sub
jecxz
xor
cdq
sub
mov
movs
pusha
push
popa
pop
aad
(bad)
mov
xchg
mov
xor
inc
(bad)
push
outs
add
stc
in
jae
loope
and
pusha
(bad)
jecxz
and
push
in
inc
add
adc
movs
ficom
imul
int
(bad)
push
mov
xor
xchg
sahf
mov
cwde
fistp
xchg
sbb
std
push
add
adc
inc
in
gs
sbb
scas
and
loope
popa
scas
inc
in
aam
js
test
movs
xchg
enter
popf
shl
dec
pop
rol
push
cmp
ja
adc
cld
rcr
call
cld
leave
and
mov
mov
call
xchg
sub
pop
mov
add
jbe
dec
push
sub
push
es
sbb
(bad)
out
dec
mov
aaa
pop
mov
sti
aad
mov
or
shr
ins
rcl
lock
dec
sbb
jg
loope
repnz
imul
popf
xor
sub
dec
xor
div
mov
test
sbb
pop
add
xchg
fcmovnb
jno
inc
fidiv
aam
popf
test
push
jbe
not
inc
ret
je
mov
sbb
sbb
nop
in
cli
mov
xchg
cmps
movs
stc
cld
mov
call
lods
sbb
ret
and
xchg
mov
test
ror
cdq
movs
jle
imul
dec
ins
jae
push
jp
or
sub
and
rcl
cmp
adc
pop
out
jle
jne
fwait
add
push
and
lods
or
mov
shl
imul
mov
dec
sahf
pop
push
dec
ret
mov
fstp
sbb
mov
jne
ficom
xor
frstor
adc
lock
xchg
push
add
test
xchg
adc
stos
fist
jb
mov
test
sbb
inc
mov
ret
inc
mov
loopne
test
dec
add
add
jo
sbb
cmp
(bad)
add
loop
push
xchg
scas
pop
ds
jecxz
xor
mov
je
push
mov
shl
aaa
mov
push
loopne
outs
shl
test
arpl
cmp
loope
ja
cmps
cmp
sbb
pushf
sti
aas
jne
lods
dec
int3
jnp
inc
cwde
popa
jb
lods
sbb
or
pusha
mov
out
fild
addr16
mov
xchg
lea
pushf
ds
mov
inc
xchg
aad
add
pusha
out
sub
mov
cli
ins
sbb
adc
daa
or
inc
jl
inc
xchg
mov
xor
pop
jg
mov
jp
mov
lea
ja
pop
ins
or
add
out
pop
jnp
add
jno
test
ins
outs
pop
push
lahf
jnp
nop
pushf
and
sbb
mov
cmp
test
xchg
xchg
xchg
loopne
sar
aaa
lods
or
mov
add
mov
in
into
in
sub
div
dec
and
je
xchg
push
jns
sbb
add
dec
lea
repnz
jmp
mov
(bad)
mov
push
push
sbb
call
repz
in
or
int3
push
push
and
cmp
arpl
sbb
lock
inc
(bad)
dec
mov
sar
mov
xchg
jl
mov
sbb
sub
gs
cmp
and
ins
cmp
ret
adc
data16
inc
iret
paddb
jg
sbb
fmul
mov
out
mov
jecxz
or
out
mov
ins
scas
sub
out
popf
lahf
and
mov
add
sbb
xor
mul
cmps
out
(bad)
mov
and
hlt
outs
dec
stos
leave
cmp
or
hlt
(bad)
mov
xor
(bad)
xchg
xor
mov
jne
retf
pop
add
mov
mov
pop
mov
jb
dec
add
mov
dec
push
sub
jp
adc
sub
in
div
add
mov
push
add
mov
mov
add
push
adc
popa
push
cld
fcomp
hlt
sub
mov
mov
aad
jno
mov
(bad)
mov
gs
mov
adc
enter
inc
push
adc
gs
xchg
sub
dec
add
pop
inc
cs
(bad)
mov
cwde
xchg
ss
xor
add
pushf
xor
pop
add
sbb
pop
cmp
out
push
stc
inc
sub
ret
ror
js
xor
stc
fadd
pop
gs
dec
inc
mov
(bad)
dec
mov
sti
call
leave
xor
paddq
in
jle
fsubr
imul
dec
rol
sbb
fwait
pop
fs
int3
xor
mov
push
mov
dec
cmc
xchg
jl
inc
xchg
shl
add
cmp
cmps
push
imul
jecxz
popf
pushf
dec
ss
sti
vandnpd
jmp
jb
pop
test
sub
xchg
xchg
inc
sbb
push
sub
lods
fdivr
xchg
ficom
inc
mov
cmp
loop
cli
mov
jb
icebp
les
lods
cmc
mov
cwde
cs
or
adc
cdq
dec
dec
jmp
mov
mov
adc
mov
and
cmps
mov
shl
inc
(bad)
out
jns
mov
push
add
pop
les
daa
inc
mov
mov
xchg
jecxz
retf
pop
mov
adc
mov
jno
xcrypt-ctr
cmps
fcmovnbe
ins
sub
test
or
lods
fs
movs
scas
push
test
es
aad
inc
frstor
jge
test
push
sar
push
lock
pop
out
pop
in
push
add
in
popa
push
mov
repz
test
test
daa
adc
sbb
gs
aaa
lahf
jno
int
dec
dec
push
add
shl
mov
lods
movs
shl
stos
mov
adc
test
adc
fisubr
es
inc
pusha
popf
mov
xchg
add
hlt
fdiv
(bad)
cmp
push
xor
out
dec
popf
push
sahf
pop
add
jne
test
arpl
sbb
dec
or
outs
mov
cmp
lods
or
pop
test
mov
lea
(bad)
fsub
out
mov
xlat
mov
stos
jb
pop
bound
dec
enter
fs
cli
call
adc
fdiv
stos
movs
mov
push
xor
pop
test
push
out
sub
frstor
sub
je
fist
inc
push
mov
(bad)
stos
stos
xchg
mov
inc
dec
lods
adc
push
adc
dec
xor
adc
lods
popa
xor
aam
xchg
scas
sub
dec
adc
data16
push
sbb
mov
sub
sub
and
cmp
fdivr
and
jnp
sub
push
popa
lods
scas
popf
dec
lods
mov
mov
pop
vmaxsd
rcr
and
neg
cmp
and
into
cwde
sti
jno
and
pop
jp
mov
scas
sbb
xchg
mov
int3
inc
push
sub
popa
sub
dec
add
jnp
(bad)
pushf
sbb
cmps
adc
(bad)
mov
lock
xchg
cs
push
adc
cdq
pop
clc
mov
int3
sbb
popa
neg
iret
xchg
lods
cmp
dec
fdivr
popf
add
and
sub
leave
fnstenv
jmp
ret
nop
loope
adc
sti
jg
std
add
stos
sti
test
inc
dec
test
in
push
dec
push
aaa
pop
iret
adc
pop
repz
mov
(bad)
cmp
lds
sbb
in
lahf
cld
int3
jo
aas
add
ret
into
sti
rcr
fisub
jge
xor
push
es
add
push
imul
stos
xor
imul
shl
test
not
adc
inc
pop
sbb
dec
mov
dec
lods
pop
sub
in
xchg
inc
mov
push
popaw
add
jnp
ds
inc
sahf
xor
mov
push
arpl
jbe
sahf
dec
and
stc
mov
jge
push
sub
arpl
jge
sti
aad
xchg
jne
ds
xchg
je
mov
cdq
ror
or
push
inc
movd
aad
rcr
xchg
and
pop
sub
and
call
or
pop
outs
push
aam
pop
sahf
dec
fwait
retf
or
into
mov
push
mov
hlt
pop
retf
fldcw
je
sub
mov
(bad)
icebp
int
and
ins
or
and
pusha
mov
adc
mov
jbe
(bad)
jne
mov
cmp
imul
mov
push
jb
jge
movs
fwait
inc
shl
retf
daa
ins
in
xchg
retf
das
push
mov
xchg
jb
fs
inc
mov
mov
push
xor
cmp
enter
addr16
mov
fs
xor
mov
imul
mov
mov
mov
sbb
or
or
push
lds
mov
xor
sbb
rcl
xchg
adc
into
adc
lods
mov
push
mov
pop
pop
jmp
jecxz
push
xor
lock
xor
loopne
pop
mov
xlat
rcr
test
xor
iret
xchg
push
fs
adc
xor
push
mov
imul
loope
push
push
push
cmc
add
outs
mov
push
retf
(bad)
xor
(bad)
sahf
cmp
adc
stos
int3
scas
xlat
imul
fstp
xor
mov
pusha
lods
jns
cs
push
aam
ret
int
push
mov
lock
movs
stos
pop
(bad)
sub
out
cmp
sbb
push
jne
test
push
inc
mov
stos
fbld
stos
and
in
sbb
push
mov
lds
mov
pop
scas
lds
sahf
or
pusha
in
mov
rol
or
pop
sub
adc
dec
dec
mov
dec
das
jmp
loop
and
aad
loope
daa
push
stc
mov
jae
dec
and
ror
inc
jo
push
xchg
cmps
fild
idiv
fcmovb
inc
push
int
stos
lahf
into
sub
pop
stos
shr
mov
shr
and
out
sbb
call
cmp
pop
jg
mov
pop
dec
xor
sti
lds
loope
sahf
lea
xor
xchg
sub
aam
mov
mov
sub
jmp
ret
sbb
inc
pop
test
into
call
xor
jo
ret
in
cs
adc
push
add
sub
stos
sub
push
popa
mov
jge
jl
inc
or
sub
imul
jmp
cmp
jl
adc
imul
pop
xor
adc
lds
xchg
sub
push
test
clc
iret
adc
add
test
into
stos
ins
xor
pop
les
push
mov
mov
pushf
and
pusha
xor
loop
sub
lods
pushw
jo
and
add
cwde
aaa
add
rcr
mov
push
mov
mov
xchg
add
sbb
xchg
mov
pop
xchg
xchg
and
sahf
mov
mov
loop
fidivr
xchg
lods
push
dec
push
pop
shr
lea
jb
mov
aam
jge
adc
mov
in
nop
sbb
cmp
add
add
xchg
mov
fdivr
pop
pop
aas
adc
push
ret
pop
mov
add
in
(bad)
push
cmp
pop
pop
pop
int
cmp
add
dec
popf
dec
or
jmp
imul
repz
fimul
inc
jmp
stos
push
std
aam
sar
jmp
sub
nop
call
ja
int
add
xor
lds
call
daa
inc
jle
xchg
into
enter
mov
mov
and
ss
push
mov
xchg
rcr
sbb
pop
or
and
pop
lods
mov
in
jle
addr16
fidivr
stmxcsr
movs
mov
push
xor
jno
ret
adc
(bad)
push
jo
dec
fstp
cs
out
ror
push
push
push
cmp
dec
imul
int
imul
test
dec
or
jp
paddd
adc
repnz
(bad)
fsubr
inc
dec
hlt
ins
push
push
jecxz
nop
loopne
outs
out
and
jmp
addr16
inc
mov
xchg
adc
xchg
jmp
popa
cs
xchg
push
stos
push
jp
mov
and
lds
jb
add
(bad)
int3
adc
or
aas
mov
cmp
sti
mov
in
sub
fisub
dec
lahf
mov
mov
frstor
ins
push
test
jmp
inc
or
cmp
aas
push
mov
adc
mov
adc
fdivrp
dec
aas
or
jo
fisub
push
ds
stos
test
nop
fcomp
mov
shl
out
stos
test
xchg
mov
sahf
stos
iret
pusha
and
mov
fld
inc
loope
cmp
test
lods
ret
push
repnz
mov
cmps
es
in
pop
adc
cmps
movs
fcom
pop
and
sub
(bad)
rcl
outs
scas
shl
daa
push
lods
jle
sub
repnz
cli
xor
lahf
push
test
mov
lahf
sub
aas
and
js
fwait
inc
addr16
sbb
add
(bad)
adc
add
mov
push
lods
pop
pop
mov
inc
inc
or
inc
sub
jns
inc
cmp
add
adc
pop
add
imul
pop
daa
cmp
adc
pop
jo
ror
dec
fnsave
enter
mov
sahf
push
xor
pop
push
fucomi
and
call
push
xor
movs
aad
cmp
dec
push
sub
ret
inc
lods
int
aam
adc
sbb
xchg
xor
cmp
out
mov
arpl
cs
popa
mov
dec
and
or
(bad)
bound
stos
xor
stos
outs
jge
mov
mov
mov
jg
sbb
push
sub
test
mov
outs
ret
frndint
loope
ins
jno
bound
mov
mov
popa
push
jmp
push
repnz
int
add
add
hlt
movs
lods
xor
rcr
push
jmp
push
movs
dec
dec
(bad)
xor
pop
in
jg
movs
inc
add
pop
fisttp
sbb
mov
push
stos
inc
add
test
push
aam
fnstenv
gs
add
outs
out
loopne
jne
push
outs
scas
dec
mov
out
sub
mov
sub
(bad)
gs
jnp
jne
xchg
cmps
mov
pushf
xor
pop
inc
pop
mov
jns
sub
ja
push
fadd
rep
mov
jmp
pop
adc
stc
jecxz
in
mov
jmp
or
mov
push
push
aas
movs
adc
add
ins
dec
pusha
dec
mov
stos
push
sub
pop
pop
add
xchg
push
mov
jns
call
fisttp
pop
pop
or
sub
pop
int
movs
out
fmul
enter
lea
into
xor
outs
cli
call
scas
(bad)
aam
xchg
lock
xchg
scas
int3
fdivr
mov
js
js
not
push
popf
(bad)
div
aas
mov
adc
cmps
push
repnz
add
es
imul
inc
shl
mov
push
add
pop
and
shr
jle
jno
js
nop
push
push
jbe
and
shr
call
inc
push
mov
add
xchg
xchg
xchg
fs
lea
and
fdiv
mov
dec
nop
adc
or
xor
fstp
jno
cmc
fsub
xor
fnstsw
loop
xor
mov
push
lock
mov
and
ins
jmp
sbb
outs
jae
lock
fs
ret
gs
add
sub
into
inc
cmp
nop
sub
das
pop
popa
ja
mov
mov
jns
loopne
movs
add
aaa
push
jns
test
cld
adc
sar
mov
xchg
sub
jne
xlat
fidiv
fidivr
enter
inc
jl
test
mov
pusha
adc
fcmovnu
imul
adc
out
shr
jmp
dec
hlt
sub
jp
inc
stc
(bad)
cmc
adc
sub
stc
inc
jne
push
jmp
mov
cmp
dec
adc
js
push
xor
jg
dec
into
jnp
mov
pop
dec
sbb
mov
loop
adc
(bad)
sub
xchg
cmp
sub
sbb
cld
lods
mov
cmc
loope
je
clc
clc
and
test
cmp
jnp
jge
retf
into
pop
(bad)
retf
lock
addr16
dec
pop
xchg
add
or
push
dec
xor
sbb
je
push
bndstx
push
adc
mov
push
bound
adc
xchg
xchg
jle
jae
addr16
xchg
mov
sbb
cmps
in
hlt
daa
lods
mov
mov
imul
dec
(bad)
dec
into
in
fs
jo
add
inc
out
(bad)
adc
push
repz
retf
xor
out
repz
sbb
jns
sbb
mov
cmps
cli
adc
xchg
das
mov
test
es
into
mov
mov
mov
sub
or
ds
add
je
imul
mov
pop
movs
cmp
xor
mov
(bad)
pop
jl
mov
sbb
sbb
add
loop
sub
iret
cwde
fnstsw
loop
out
sub
push
into
(bad)
in
fs
lock
into
mov
sbb
cmp
push
stos
jne
nop
push
je
push
push
les
cmp
xor
fwait
sti
or
inc
dec
in
or
arpl
aam
imul
aas
mov
push
push
mov
pop
jl
pushf
push
punpckhbw
into
mov
push
adc
jmp
push
aam
(bad)
stc
push
and
test
iret
xchg
sub
cwde
and
sbb
mov
sbb
push
inc
mov
pop
jle
loope
sub
jecxz
pop
push
ins
mov
push
lods
sub
or
jmp
popf
daa
retf
xchg
adc
mov
mov
dec
push
test
enter
jl
es
adc
cmps
xchg
jg
xchg
mov
in
cmp
jmp
mov
outs
call
jp
mov
fild
lock
mov
mov
in
mov
mov
mov
mov
mov
ror
cli
adc
test
fbld
cli
cld
and
into
inc
adc
adc
into
cs
retf
mov
mov
cld
sub
cmp
aad
inc
cmps
and
test
mov
ins
jl
imul
es
lds
ja
mov
out
lock
mov
imul
pop
lds
inc
retf
jo
sub
mov
jb
adc
jbe
mov
inc
icebp
mov
mov
adc
or
xchg
push
xchg
adc
in
(bad)
push
mov
jb
ins
jle
je
dec
(bad)
jne
inc
inc
pusha
and
test
pop
ins
sub
mov
and
adc
mov
adc
sbb
xor
cmp
pop
mov
sub
push
dec
fs
dec
ror
into
xor
sbb
mov
das
cld
add
xor
jg
lea
rcr
les
test
pusha
mov
mov
push
cbw
mov
push
push
jmp
mov
dec
add
(bad)
cmp
cli
mov
cmp
cmp
stos
xor
xchg
inc
mov
xchg
pop
pop
xchg
xchg
(bad)
(bad)
jbe
dec
sub
sbb
shl
pop
cmps
cmp
ins
fsubrp
gs
das
jne
mov
cli
push
mov
or
mov
cld
mov
inc
ins
sbb
data16
pop
fist
ror
add
(bad)
cli
sub
ja
mov
test
and
aas
sbb
cmp
fist
imul
push
popa
mov
ja
push
lds
jle
cmp
in
push
push
fistp
push
(bad)
dec
fldenv
fist
xchg
lea
jae
mov
jg
jge
outs
jae
iret
and
(bad)
call
xchg
test
in
push
add
nop
mov
(bad)
das
mov
jecxz
sbb
cmovns
mov
cmp
inc
jge
and
fmul
inc
int3
dec
cld
jns
cmp
mov
mov
(bad)
mov
adc
jmp
mov
lahf
call
xor
xlat
xchg
(bad)
xchg
into
and
mov
xor
inc
(bad)
mov
xchg
sahf
ret
mov
inc
sar
pop
in
pop
jg
loopne
jge
pmovmskb
neg
mov
shl
xchg
jmp
das
fsqrt
add
cmc
les
stc
mov
hlt
mov
sti
imul
div
push
xchg
xchg
out
xchg
mov
(bad)
push
mov
and
mov
xchg
adc
mov
mov
xor
inc
fs
mov
xor
inc
pop
out
fist
dec
and
jmp
shl
add
outs
aad
(bad)
mov
out
mov
leave
add
(bad)
sti
mov
popw
or
add
sub
xor
xchg
mov
adc
leave
out
mov
dec
sub
jle
ds
xor
and
mov
int3
push
push
inc
dec
call
test
lahf
cdq
jg
retf
or
inc
xor
jmp
stos
mov
jo
outs
mov
sbb
xor
mov
int
gs
out
mov
std
lahf
mov
clc
stc
mov
jle
test
(bad)
repz
ss
inc
das
xchg
aas
shl
mov
mov
rcl
sbb
rcl
add
push
xor
xchg
jmp
jle
shr
out
pop
mov
push
adc
jbe
mov
leave
xor
in
adc
mov
in
pop
and
fsin
iret
jmp
jo
leave
push
ror
mov
out
or
cmp
mov
imul
jae
aas
inc
xchg
jbe
stc
clc
dec
sbb
mov
mov
dec
aaa
xor
ins
mov
cli
pop
or
fidiv
cs
mov
je
cmp
les
xchg
sub
push
xchg
xor
sti
int3
xor
movs
pusha
ror
adc
push
dec
and
pop
mov
jecxz
sbb
or
popa
popa
add
mov
mov
dec
ins
cmc
mov
leave
es
jl
leave
pusha
int
xchg
hlt
dec
std
rcr
mov
jne
push
xchg
cmp
and
mov
xor
and
mov
popa
(bad)
jmp
fsub
sti
frstpm(287
push
(bad)
ins
in
cmp
xchg
bound
loop
das
ins
pop
retf
xchg
sub
xchg
test
call
rol
xchg
aad
adc
mov
fwait
out
cli
dec
xor
and
jg
std
rcr
mov
jle
mov
(bad)
push
inc
adc
dec
std
in
mov
je
sub
pop
movs
adc
push
sub
ficom
je
xchg
mov
(bad)
cli
test
dec
(bad)
pop
cmc
lea
les
mov
push
jp
xor
popf
dec
mov
cwde
xlat
add
pop
push
or
ret
inc
jg
jg
out
inc
mov
outs
adc
cld
stc
dec
aam
ins
iret
daa
push
mov
xchg
icebp
pop
mov
gs
jnp
movs
mov
xchg
les
(bad)
call
stc
pop
cwde
adc
jbe
mov
jne
movs
in
and
repz
and
gs
pop
sub
rcr
mov
xlat
out
xor
cmp
(bad)
inc
cmp
movs
mov
retf
outs
and
sbb
push
sub
les
lods
mov
xchg
pop
daa
xchg
lea
pop
inc
xchg
pushf
push
pop
adc
mov
ins
ret
sar
dec
dec
pop
scas
shl
or
das
out
xor
xchg
mov
or
pop
lods
in
push
mov
loopne
pop
dec
in
movs
jmp
and
cmp
mov
mov
scas
mov
and
inc
jmp
mov
xchg
scas
adc
pop
es
scas
or
push
xor
add
jp
in
sub
shl
int3
rcr
xchg
outs
mov
rol
loopne
inc
jg
outs
div
mov
xchg
(bad)
mov
in
xchg
adc
pusha
arpl
fldenv
add
xchg
bound
dec
jmp
adc
sti
cmc
dec
mov
jae
ins
in
imul
jmp
mov
push
dec
sahf
cmp
jp
mov
push
sbb
inc
dec
test
xchg
outs
mov
dec
loope
cld
mov
and
lss
(bad)
xchg
mov
retf
mov
sub
in
aam
out
inc
(bad)
icebp
add
and
sub
jb
mov
add
idiv
out
and
ins
inc
add
push
shl
rcr
hlt
add
push
loopne
(bad)
cmp
stc
scas
adc
dec
in
adc
jns
(bad)
repz
in
ds
mov
dec
jmp
mov
mov
add
ror
fucomip
xlat
cwde
fnstsw
pop
pop
mov
(bad)
mov
sub
repz
loope
and
inc
mov
hlt
dec
cmp
jb
cmp
xchg
ss
(bad)
jmp
loopne
pop
loop
cwde
fistp
enter
ror
cmp
das
aaa
fldenv
ins
retf
xor
mov
fimul
mov
sub
out
and
mov
fdivr
jmp
sub
or
jg
pusha
out
mov
pushf
dec
inc
les
jecxz
xor
add
jne
mov
push
cmp
sub
adc
sbb
xchg
and
push
mov
jae
aad
es
xchg
mov
pop
dec
push
fs
dec
cmp
adc
ja
retf
xchg
cwde
pop
and
icebp
mov
inc
pop
in
inc
or
jbe
or
jnp
test
xchg
gs
mov
mov
stc
popa
pusha
aam
ins
mov
fld
add
xor
lock
adc
mov
sbb
adc
aaa
adc
inc
or
outs
pop
mov
adc
xchg
or
(bad)
sub
imul
dec
cdq
lds
cwde
cmp
jne
mov
xlat
push
and
jl
mov
pusha
cmp
xor
pminub
retf
sahf
div
add
les
sbb
push
inc
cmp
xlat
jmp
cmc
adc
cwde
adc
loop
mov
mov
sub
cs
fisub
xor
sbb
repnz
push
fild
mov
inc
mov
in
add
mov
jp
and
in
or
adc
lahf
stc
cs
jb
xchg
jne
jae
mov
pop
sbb
mov
jmp
rol
inc
mov
sti
sbb
sbb
mov
and
scas
test
add
and
and
push
xor
push
test
cmps
test
xchg
mov
push
cmps
or
dec
mov
mov
call
sbb
sub
cmps
ja
sahf
dec
addr16
test
or
mov
pop
inc
jmp
jg
iret
lea
test
imul
lock
jns
aad
and
pop
push
pop
nop
mov
sub
push
jae
sub
mov
(bad)
xor
or
cmc
dec
mov
loop
popa
call
xor
xchg
retf
in
stc
leave
xor
lods
mov
leave
cmp
inc
dec
cmp
mov
or
daa
sbb
push
cli
lds
xchg
sbb
adc
xor
jbe
stos
mov
scas
popf
mov
dec
aam
pushf
adc
adc
retf
mov
xchg
add
sub
setl
jae
adc
adc
aas
adc
iret
in
or
jne
push
(bad)
mov
dec
int3
(bad)
adc
mov
xor
(bad)
(bad)
xor
xchg
push
popa
iret
pop
imul
pop
pop
ja
pop
or
mov
popa
ror
int
pop
dec
inc
pop
imul
gs
mov
out
sbb
pusha
jmp
xchg
mov
imul
sub
push
ret
push
test
add
mov
mov
dec
jb
adc
sbb
inc
push
cwde
push
(bad)
outs
jg
inc
sbb
xchg
movs
sub
mov
fisttp
lock
(bad)
gs
inc
jg
mov
add
lds
in
enter
adc
inc
pop
jb
ins
dec
gs
test
test
aad
jo
scas
loope
mov
(bad)
push
out
push
aam
stos
mov
out
jg
sub
mov
mov
mov
xchg
dec
int3
xchg
je
fcomp
ds
add
ss
xor
retf
loope
mov
cmps
ds
cmp
add
mov
inc
mov
mov
in
and
cmp
pop
fadd
add
xor
scas
or
inc
mov
fsub
sbb
mov
mov
repnz
push
mov
jecxz
pushf
(bad)
xor
mov
xchg
jl
lea
add
adc
out
mov
clc
jbe
push
mov
(bad)
loope
mov
aam
mov
mov
ins
fsubr
jp
mov
je
sub
rcl
call
fisttp
in
data16
pusha
inc
sub
retf
sub
xchg
lods
xchg
xor
cs
dec
lods
push
pop
cmp
in
and
inc
mov
nop
and
jns
call
dec
dec
loope
add
pusha
(bad)
pop
mov
sbb
mov
jle
das
outs
pop
inc
xchg
stos
dec
jno
cmp
adc
(bad)
aas
lock
hlt
retf
pop
dec
mov
push
lods
ja
or
or
jns
lods
daa
bound
mov
pop
xor
adc
mov
push
push
imul
inc
mov
stos
sub
and
jl
xchg
in
fld
sahf
test
(bad)
je
adc
mov
dec
sbb
and
aam
pop
xlat
xchg
shr
lods
in
cmps
call
mov
jne
imul
lock
xchg
add
or
ret
loop
pop
lods
jne
into
pop
mov
call
dec
ins
adc
add
shl
or
xchg
mov
mov
push
xchg
jp
mov
adc
add
pop
dec
xchg
out
sahf
dec
lods
rcr
and
mov
sub
jnp
pop
push
xor
xchg
add
xchg
sar
sbb
cmp
xor
jmp
dec
mov
div
outs
mov
imul
(bad)
inc
lods
push
sub
jmp
cwde
push
in
or
fcmovne
stos
push
js
jge
ret
mov
xchg
in
xor
aad
adc
adc
jb
add
jne
mov
push
ins
out
ror
or
fist
shr
push
jno
push
pop
sar
cdq
adc
pop
add
adc
idiv
aad
dec
lea
adc
sub
pop
idiv
jle
or
lods
lahf
and
out
push
data16
add
or
jle
movs
xchg
push
pop
push
xor
bound
or
cdq
adc
mov
sub
cdq
adc
ds
push
and
sub
dec
fidivr
mov
(bad)
into
and
or
rcr
or
sahf
ror
cdq
sbb
sbb
faddp
cli
mov
mov
fsubr
xchg
rcl
pop
lods
out
inc
pop
sbb
mov
mov
fnsave
test
cmps
call
cld
mov
(bad)
data16
cmps
in
sub
jmp
fs
mov
sar
iret
dec
mov
cmps
ja
out
adc
mov
mov
dec
push
ja
inc
push
imul
ret
repz
xor
pushf
adc
push
(bad)
adc
xchg
dec
clc
shr
cvtps2pi
mov
mov
dec
jmp
mov
or
popa
mov
cmps
add
pop
mov
pop
pusha
popf
gs
loop
icebp
aas
jne
add
push
fcomp
sbb
mov
imul
adc
(bad)
fcom
mov
cmp
fsubr
mov
fcmovne
popa
retf
push
pop
(bad)
jnp
dec
xor
sub
lahf
mov
cld
jmp
movs
stos
dec
xchg
mov
inc
mov
dec
les
int
jmp
or
call
dec
pop
dec
imul
add
adc
(bad)
sub
inc
sbb
pop
pop
mov
push
sahf
out
les
outs
in
pushf
loop
mov
ins
bound
jne
cwde
and
push
jns
pusha
jae
mov
in
cmps
enter
push
loope
push
out
repz
sar
cmp
int3
inc
in
sub
mov
std
daa
xchg
push
mov
cld
outs
and
(bad)
pop
jnp
clc
std
and
mov
and
les
pop
sbb
and
cli
add
mov
and
(bad)
xor
into
dec
loope
add
jne
pop
jle
jl
cmp
out
sbb
jecxz
mov
cmp
out
scas
aaa
xor
shr
daa
sbb
sub
cmp
inc
scas
lea
dec
in
pop
iret
sbb
test
mov
push
or
xor
push
inc
in
loopne
mov
stc
xor
adc
jno
ret
or
mov
and
jb
jbe
bound
jb
jp
in
div
adc
out
ficom
outs
in
pop
mov
dec
inc
mov
stos
rcr
inc
daa
pop
imul
or
pop
in
out
inc
add
push
sbb
xchg
cld
out
jge
jg
sbb
fs
jge
repz
cli
jo
imul
aaa
and
ins
(bad)
jo
out
sbb
xchg
fs
adc
ins
lock
sub
out
push
ret
xchg
cmp
movs
adc
cld
lock
push
and
fcomip
mov
popf
in
mov
lds
scas
sub
mov
jb
icebp
pop
push
test
push
fcmovnu
pusha
shr
out
stc
sbb
ss
sbb
pop
and
sub
hlt
out
ret
push
mov
lahf
fisttp
mov
pop
inc
leave
mov
push
shl
gs
adc
dec
mov
and
add
iret
repz
fwait
sub
loopne
mul
xor
push
push
jp
jge
or
pop
jmp
in
mov
in
rcr
sbb
(bad)
push
shl
clc
sbb
jp
cwde
xchg
xor
imul
and
mov
cli
jg
jge
fnstcw
out
(bad)
pushf
outs
sar
arpl
xchg
in
jb
add
pop
dec
xchg
sbb
sar
loopne
dec
inc
ret
xor
sub
mov
dec
mov
nop
fild
pop
movs
idiv
aas
scas
out
cmp
jge
(bad)
dec
std
push
sti
jg
out
fst
in
mov
aam
outs
pop
clc
scas
adc
arpl
loopne
xchg
push
shr
ficom
gs
(bad)
cs
mov
mov
(bad)
loopne
int
mov
sti
mov
fs
lahf
or
lea
push
dec
call
mov
out
outs
(bad)
iret
sub
mov
mov
sub
pop
jb
fdivr
js
fwait
xchg
mov
std
pop
repz
test
leave
(bad)
lds
push
test
mov
dec
div
sbb
xchg
or
ins
shr
jmp
setae
jmp
xlat
fnsave
pop
(bad)
nop
ret
and
stc
sbb
dec
xchg
jg
std
outs
fistp
xor
(bad)
(bad)
mov
cmps
pop
jge
cmp
(bad)
cmp
std
jge
dec
xor
std
lods
inc
pop
jle
jp
push
mov
and
not
xor
add
(bad)
mov
aaa
mov
mov
ret
les
xchg
pop
idiv
loope
jge
and
call
sub
leave
bound
mov
sti
jmp
data16
les
aam
call
lock
cmp
lahf
aas
iret
dec
test
ret
add
pop
(bad)
std
movs
gs
shl
mov
mov
mov
mov
idiv
shl
jo
addr16
xchg
pushf
push
icebp
push
sbb
pop
in
mov
mov
mov
test
(bad)
(bad)
mov
dec
jmp
std
cmp
int3
das
cmps
adc
mov
mov
jmp
pop
sub
cld
movs
std
jae
aaa
outs
mov
loope
cld
jp
fsub
xor
xchg
jecxz
(bad)
jns
mov
dec
pop
into
lock
mov
push
push
jle
popf
nop
gs
ins
je
push
repnz
pop
jmp
call
mov
add
ret
(bad)
int3
cmp
push
fcmove
mul
add
pop
push
(bad)
pop
test
xchg
dec
fdivr
sti
aas
mov
das
mov
lods
jmp
ror
imul
outs
push
push
loop
rol
mov
jnp
sbb
movs
push
repnz
pop
adc
loope
ucomiss
xor
xchg
test
jnp
aas
ss
cmps
mov
sub
pop
in
mov
add
ffreep
loop
and
outs
adc
ret
div
xchg
cmp
js
cmps
retf
jo
cld
jle
sub
imul
add
xchg
jmp
lods
cs
pop
cmp
test
neg
mov
enter
test
sub
xor
mov
shl
mov
call
push
sbb
(bad)
dec
mul
mov
cmp
adc
iret
dec
push
cli
icebp
dec
outs
clc
ins
fnstsw
in
push
arpl
jmp
xchg
div
scas
mov
mov
mov
jl
loop
pop
push
dec
das
adc
je
fwait
mov
push
in
nop
mov
pop
mov
ja
adc
cmp
mov
sbb
or
add
push
add
push
pusha
jae
or
loop
mov
mov
inc
sbb
int
lahf
popa
adc
ins
add
pushf
stos
xchg
and
sbb
pusha
sbb
outs
ja
sub
call
imul
daa
mov
inc
sbb
nop
xchg
mov
out
mov
ins
xor
arpl
es
fidivr
adc
shl
push
loope
dec
sbb
icebp
xor
inc
add
cdq
push
cmp
dec
loopne
jno
sbb
xor
repnz
test
popf
dec
ins
popf
pop
add
jo
and
aam
loope
ror
(bad)
out
sbb
(bad)
fxch
repz
jmp
or
and
movs
ror
fiadd
mov
inc
out
out
xchg
inc
test
cmp
mov
mov
int
mov
or
mov
pushf
lock
fbstp
cli
mov
adc
jnp
scas
pop
push
movs
jle
aam
adc
(bad)
es
mov
or
mov
mov
ja
xchg
fs
fwait
cdq
mul
ins
xor
or
xchg
and
outs
cmps
daa
push
pusha
int3
pusha
push
icebp
test
ror
in
sbb
push
adc
sbb
mov
mov
sbb
cwde
std
mov
xor
xor
sub
cmp
ror
ss
dec
or
mov
adc
sahf
or
pop
loopne
xchg
es
mov
and
pop
mov
les
loopne
das
pop
mov
xchg
mov
in
pop
das
out
and
data16
adc
xor
inc
push
mov
fstp
sbb
ja
sbb
push
(bad)
rol
loop
inc
dec
into
das
pop
int
push
retf
add
mov
sub
mov
cmp
pmulhuw
add
xor
ja
inc
xor
mov
pop
push
mov
jb
add
loop
sbb
cmp
jne
ja
les
lods
mov
and
sbb
adc
mov
adc
loope
dec
pop
adc
lea
push
dec
xchg
pop
enter
mov
and
mov
dec
call
jmp
add
fwait
pop
fadd
fwait
shr
pop
pop
jecxz
xor
pusha
movd
push
dec
mov
mov
add
push
xor
add
adc
ss
addr16
sub
test
sub
jno
or
ds
mov
addr16
test
inc
into
test
enter
pop
fdiv
rcr
cmp
sbb
les
pop
in
inc
int
jbe
and
mov
push
and
sbb
mov
mov
loope
add
inc
sbb
int3
aam
adc
imul
sbb
popf
inc
dec
xlat
mov
rol
loopne
movs
mov
sub
sub
test
mov
das
mov
sbb
sub
xor
cwde
sbb
mov
or
loope
sbb
pop
sbb
or
bound
sbb
xchg
xchg
arpl
and
xchg
inc
(bad)
sub
pop
adc
arpl
or
retf
and
dec
push
cmp
jae
and
sub
adc
xor
add
dec
lahf
mov
data16
jb
xor
test
cs
(bad)
loopne
cmp
(bad)
jge
add
mov
add
sbb
ror
pop
dec
push
cmp
ja
jbe
cmps
and
push
aas
and
fstp
mov
mov
mov
js
mov
jp
mov
add
inc
fbld
mov
adc
data16
sar
fs
fisttp
sbb
sub
lds
add
int
outs
sub
push
out
and
push
pop
lods
pop
ret
add
rol
xchg
xor
loope
daa
sbb
jne
(bad)
call
and
fldenv
pusha
imul
mov
dec
mov
or
leave
gs
xchg
gs
sub
push
imul
into
test
xor
repz
in
popf
or
jge
adc
and
test
arpl
cmp
jg
xchg
dec
cmps
mov
in
cmp
lods
mov
mov
fstp
movs
cdq
jo
jae
push
pop
test
(bad)
sub
and
xchg
cmp
or
sub
push
mov
sbb
or
and
ror
pop
(bad)
call
fwait
movs
mov
mov
shr
test
inc
mov
cmc
inc
stos
fiadd
leave
xor
xor
mov
rol
imul
arpl
inc
in
xor
add
or
addr16
xchg
xor
retf
xchg
add
sbb
rol
jp
lods
push
inc
mov
pop
sbb
add
ja
push
mov
pusha
mov
lahf
popa
add
cli
test
xor
shufps
lock
(bad)
leave
in
and
popf
in
(bad)
xor
xchg
mov
out
dec
jmp
cmp
imul
or
fcomp
sti
add
adc
inc
mov
es
sub
or
mov
popa
repz
out
mov
das
fsubr
int3
sub
xchg
mov
rcr
mov
cmps
push
gs
xor
mov
xchg
add
ins
push
rcr
lea
xchg
and
mov
cmc
xchg
inc
shl
xor
icebp
bound
sub
in
jmp
shl
xor
xchg
adc
fwait
mov
xchg
add
pop
lods
mov
xor
jns
iret
out
ret
sub
cmp
cwde
jecxz
aam
loop
and
shl
rol
fisubr
push
mov
mov
sbb
dec
lds
or
ins
pop
(bad)
fnstenv
aas
cmp
push
pop
(bad)
fcom
adc
adc
xor
gs
shl
cmp
jecxz
stc
push
push
retf
add
push
shr
fs
mov
(bad)
adc
aad
repnz
pop
sub
js
xchg
fst
les
(bad)
pop
test
dec
retf
daa
int3
stc
pop
xor
or
stos
pop
xchg
sbb
adc
xor
inc
pop
js
inc
or
sar
sub
inc
sub
cmp
jg
fldenv
cmp
lock
pushw
dec
cmp
jno
sbb
inc
enter
or
push
xchg
xor
neg
xchg
mov
loopne
loopne
push
adc
std
jmp
cmp
mov
aas
and
adc
pushf
das
or
es
cmps
mov
fnstsw
dec
xchg
xchg
push
inc
gs
hlt
(bad)
in
and
adc
test
cdq
pop
sbb
repnz
push
out
rol
mov
in
sub
xor
pop
push
ins
adc
les
scas
or
mov
out
inc
bound
data16
mov
ret
stos
xchg
movs
cmp
and
xor
pushf
cmp
retf
jbe
dec
into
lock
mov
stc
push
ss
mov
mov
jmp
fist
push
sbb
bound
leave
mov
dec
jl
add
cmps
adc
push
and
(bad)
mov
sub
jmp
loopne
out
or
xor
cs
mov
push
dec
(bad)
test
arpl
repnz
jo
(bad)
dec
adc
fiadd
aaa
cmps
inc
test
and
inc
and
xchg
mov
mov
or
adc
dec
and
leave
cmc
sahf
adc
xchg
sub
push
pop
mov
xor
or
scas
(bad)
neg
in
or
jp
cmps
les
ja
xchg
inc
dec
shr
pop
fwait
mov
icebp
into
push
int3
mov
ud2
sub
stos
jbe
xor
jp
xchg
inc
ja
loope
cmps
pop
xor
sbb
cmps
mov
push
in
or
mov
arpl
or
into
lods
adc
(bad)
fcmovnb
ret
retf
cmp
mov
popa
jp
cmp
out
push
(bad)
icebp
mov
jb
mov
pop
pop
adc
ins
xchg
mov
xor
and
add
leave
mov
pop
sahf
and
mov
jge
xchg
push
popf
cmp
mov
and
jb
and
cmp
pop
repz
push
and
outs
jns
push
fdiv
and
adc
or
add
aas
push
sub
popa
xchg
mov
sub
xor
adc
mov
loope
push
imul
sub
adc
stos
fs
jno
retf
int
pop
scas
test
daa
jge
(bad)
fld
jnp
loope
pop
push
and
cmps
jno
cmps
test
jge
mov
mov
bound
push
in
fcomp
push
or
adc
(bad)
lahf
or
pop
nop
mov
or
ins
in
adc
xchg
jecxz
mov
imul
or
and
ret
and
xchg
xchg
pop
inc
sbb
push
pushf
cwde
sbb
jae
jmp
daa
leave
fnstenv
fmul
movs
and
mov
push
call
daa
dec
adc
fnstenv
or
push
test
aaa
jbe
cmp
fisttp
sti
and
inc
pop
(bad)
adc
or
imul
jmp
dec
call
and
movs
mov
cli
xor
test
add
and
je
ins
and
adc
mov
cmp
sahf
fisub
sbb
addr16
inc
and
and
or
sahf
dec
mov
pop
xchg
xor
inc
or
test
mov
add
inc
or
sub
pop
(bad)
xor
and
xchg
xchg
int
inc
je
push
stos
jmp
je
sub
ret
push
bound
ds
repz
jns
dec
sbb
sbb
int3
xchg
add
dec
out
cmp
jl
dec
or
call
mov
das
dec
in
lods
cdq
pop
popa
mov
int
test
into
out
mov
out
jae
aad
add
pop
or
and
and
or
sbb
(bad)
mov
cmps
mov
test
pop
mov
test
fs
push
push
xlat
mov
add
mov
mov
or
jnp
push
add
sar
mov
out
in
in
(bad)
hlt
adc
xor
pop
int
pushf
push
push
jo
dec
adc
stos
sub
aam
jmp
add
push
fsub
ja
mov
cmp
dec
cmp
adc
dec
adc
das
popa
into
das
loop
pop
mov
mov
stos
test
stc
bound
test
aam
inc
rcr
clc
or
fucomi
mov
xchg
es
cli
push
loop
push
push
xchg
fisub
ret
pop
add
cli
scas
es
and
push
add
neg
test
icebp
loop
push
adc
cmps
and
mov
fwait
jae
mov
mov
(bad)
retf
scas
add
fmul
push
les
outs
hlt
cdq
xchg
add
pop
add
outs
sbb
xchg
adc
icebp
xor
push
mov
xor
sar
jecxz
and
pop
dec
arpl
and
aam
pop
mov
test
retf
leave
pop
jecxz
ins
pop
inc
xchg
arpl
xor
adc
add
and
jle
push
mov
loop
(bad)
inc
jecxz
loop
xchg
movs
mov
leave
outs
mov
iret
or
or
stos
cmp
push
jb
out
rol
pop
ins
aam
jecxz
xchg
loope
or
lods
mov
xchg
dec
popf
or
es
inc
inc
cmp
jle
mov
mov
dec
pop
dec
in
fild
stos
add
or
mov
xchg
push
loop
jmp
movs
mov
aam
cwde
sbb
or
add
adc
ins
sbb
dec
jmp
imul
sbb
ds
jns
out
pusha
pop
mov
xor
loope
je
cmp
imul
adc
call
cmp
xchg
je
push
call
hlt
xor
cmc
mov
inc
daa
cmp
in
mov
loopne
inc
mov
cmps
fsubr
cs
jp
bound
sub
sub
out
ret
lea
pop
and
fwait
jbe
(bad)
fwait
mov
lock
add
push
lods
and
addr16
in
mov
rol
adc
mov
sub
sbb
inc
inc
and
or
pop
ins
jns
fnstsw
inc
mov
push
push
or
add
outs
adc
cmp
push
cdq
(bad)
fstp
cwde
add
mov
pop
cmc
mov
mov
pop
sub
pop
ins
aas
add
sub
imul
jge
inc
pop
int3
xor
push
es
sub
mov
ins
jmp
add
jle
jg
mov
movs
outs
xchg
repnz
cmp
cwde
(bad)
inc
dec
popa
jp
bound
stos
imul
cmps
sbb
adc
enter
sti
xchg
mov
lock
mov
sbb
jno
xchg
xor
jb
shl
daa
xchg
bound
aas
pop
sar
js
lahf
mov
sub
sub
mov
nop
and
or
stos
inc
lock
loop
test
cmp
jmp
es
mov
push
sbb
pusha
scas
adc
inc
jle
sbb
mov
mov
push
mov
icebp
push
(bad)
gs
cmc
test
(bad)
mov
push
mov
push
jmp
add
xor
imul
xchg
sub
push
cmp
outs
sub
popf
fild
cmp
xor
adc
ret
test
push
xor
imul
fst
stos
mov
cdq
aam
cmps
ss
jnp
shr
jp
adc
repz
cmp
dec
mov
test
call
fwait
loopne
retf
inc
shl
cli
test
std
imul
push
sub
mov
push
aas
les
mov
and
dec
pop
mov
ins
pop
in
and
push
add
aad
add
neg
adc
xor
rol
mov
aam
(bad)
sub
dec
push
mov
dec
aad
out
test
aaa
mov
push
and
pushf
sbb
mov
in
add
fwait
out
sub
loopne
inc
lods
add
cmp
xchg
dec
inc
ins
stos
pop
loopne
retf
jecxz
int3
mov
sub
sahf
mov
jp
pop
xchg
push
shl
pop
push
gs
les
enter
xor
lods
ss
mov
cli
push
mov
jmp
jae
ret
mov
popa
daa
dec
fwait
adc
lock
(bad)
pushf
cwde
dec
jge
mov
add
dec
fiadd
pushf
cmp
loope
ret
dec
repnz
xor
mov
dec
aam
pop
adc
sub
mov
mov
cmps
sbb
imul
or
rcl
adc
loopne
and
lods
or
sbb
xor
mov
jecxz
pop
adc
clc
clc
inc
sub
shr
sbb
sahf
lods
inc
inc
cwde
and
lds
dec
ja
scas
sub
stos
popf
add
data16
out
test
sbb
jmp
push
and
and
push
mov
test
pop
push
sub
adc
inc
mov
ins
xlat
popa
outs
into
inc
stos
movs
and
out
retf
inc
ja
and
int3
mov
jns
xchg
mov
dec
daa
sub
xor
outs
xor
push
dec
and
mov
lahf
inc
loope
mov
and
inc
ret
popa
adc
inc
call
(bad)
fiadd
jmp
sysret
fistp
dec
xchg
adc
cmp
out
mov
je
push
loopne
mov
or
xor
pop
in
repz
fidivr
sbb
mov
jle
(bad)
pop
lahf
ds
add
gs
pop
mov
test
sti
sub
mov
in
loopne
sbb
mov
(bad)
(bad)
inc
out
movs
or
dec
sbb
movs
push
mov
mov
outs
fnstsw
add
leave
push
push
call
jno
cmps
mov
adc
cmp
movs
mov
mov
pushf
mov
call
fiadd
in
(bad)
in
aad
iret
jmp
push
push
push
inc
lods
cdq
mov
pop
lock
mov
pop
test
sbb
clc
xchg
or
pop
push
ret
pop
jge
xchg
adc
jne
outs
fldenv
push
stos
xchg
leave
ror
lds
sti
add
jno
xor
std
mov
clc
jne
loope
loopne
xor
in
or
rcr
out
ret
dec
add
add
test
aam
lock
pushf
cmp
pop
pop
push
mov
push
mov
imul
cmps
(bad)
stc
adc
fiadd
xor
sub
and
call
pop
scas
into
(bad)
sub
(bad)
aam
imul
jnp
add
inc
aaa
jmp
cmps
bound
mov
jmp
lods
out
es
test
leave
pop
popf
xlat
jmp
fs
fwait
or
imul
inc
xor
sbb
jo
pop
stos
aad
fs
xchg
xor
rcr
jp
loop
popa
out
push
shl
add
jp
adc
dec
sub
mov
stos
xchg
test
daa
sbb
mov
sbb
stos
push
mov
pop
mov
test
push
fs
in
in
cdq
(bad)
icebp
push
jmp
xlat
leave
dec
retf
loope
cmc
sbb
sti
iret
pop
cwde
pop
fwait
pushf
int
inc
or
movhps
test
pusha
pop
sub
xchg
jle
mov
popa
fdivr
loope
in
jno
mov
add
pop
out
push
push
out
fnstenv
retf
fimul
pop
icebp
nop
cmp
inc
push
xchg
adc
inc
retf
ds
sbb
adc
or
jle
out
ret
fdivrp
jbe
imul
mov
mov
mov
xchg
repnz
loope
sbb
es
and
adc
lods
in
in
push
dec
jae
dec
ja
sbb
and
dec
xchg
ss
ror
dec
aas
sbb
call
popa
test
rcr
mov
xchg
lock
push
retf
xlat
pop
push
dec
xchg
or
add
push
stos
shr
imul
cmp
jmp
lahf
popa
adc
sbb
sub
fcomp
pop
add
push
fstp
repnz
mov
and
mov
sub
pop
(bad)
aaa
sub
cmp
xchg
dec
push
xor
outs
clc
mov
sbb
inc
imul
pop
mov
adc
add
cmp
imul
js
nop
adc
pop
adc
scas
cmc
xchg
mov
and
or
mov
scas
sbb
dec
mov
mov
loop
cmp
mov
es
lods
xchg
popa
cmps
or
retf
movs
mov
(bad)
xor
pop
mov
xchg
jl
mov
imul
rcr
sub
cmp
adc
adc
icebp
loopne
pop
mov
push
add
pop
icebp
mov
push
out
add
and
push
inc
scas
fcom
mov
movs
dec
xor
dec
rcl
xor
adc
mov
push
shl
xor
mov
push
pop
adc
or
xchg
push
dec
lods
mov
adc
pop
lods
iret
push
dec
in
push
neg
aam
cwde
mov
les
sar
xchg
mov
adc
and
stc
or
int
and
jbe
fs
and
push
cmp
lea
(bad)
cli
nop
retf
inc
pusha
cwde
dec
jmp
jns
mov
pusha
lahf
dec
sub
in
push
mov
scas
(bad)
nop
pop
jge
lock
cmp
mov
into
mov
inc
scas
aas
(bad)
daa
jne
push
and
add
jae
xlat
pop
cmc
dec
loope
inc
add
addr16
sbb
loop
ret
inc
cmp
shl
push
cmp
sbb
xor
mov
inc
add
xchg
js
inc
jecxz
add
or
lea
ins
sub
lock
fldcw
cmp
out
fstp
lahf
jns
pushf
std
into
pop
gs
(bad)
adc
pushf
and
or
in
jne
retf
adc
or
mov
adc
sbb
mov
int
bound
and
jecxz
aas
add
hlt
or
mov
push
ins
imul
dec
mov
lea
les
or
scas
xchg
inc
adc
fs
sub
mov
add
pop
pop
test
test
data16
int3
popf
mov
scas
shr
mov
loop
mov
sub
xchg
in
retf
jmp
push
mov
pop
ss
cld
add
ds
cli
aaa
das
sub
icebp
xchg
jbe
(bad)
mov
loope
ret
retf
jg
int
in
push
inc
mov
out
retf
sahf
sbb
gs
dec
pop
enter
ror
pop
xchg
mov
fmul
imul
mov
xchg
pop
popf
stos
jge
es
