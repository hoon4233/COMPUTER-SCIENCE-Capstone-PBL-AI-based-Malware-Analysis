lea
lea
lea
push
push
call
pop
pop
push
push
push
push
call
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
in
jo
and
fcmovu
arpl
cmp
popa
lahf
fadd
jecxz
jmp
nop
sahf
stc
nop
jmp
xchg
sub
dec
call
jecxz
cld
cmp
pop
loop
xchg
or
out
fnclex
xchg
cld
stos
push
xchg
fist
xchg
inc
fucom
cdq
pop
add
adc
outs
mov
mov
std
arpl
(bad)
sbb
fwait
imul
(bad)
pushf
popf
sahf
repz
fadd
leave
and
int
fadd
adc
in
arpl
dec
out
out
push
mov
pushf
mov
aad
sahf
xor
(bad)
scas
call
pushf
(bad)
and
movs
arpl
mov
cmp
popa
push
mov
test
adc
loopne
arpl
out
movs
cmp
cmp
dec
and
fcom
popa
jg
fadd
clc
mov
sahf
fwait
loope
pusha
sbb
mov
mov
mov
mov
xchg
xor
fnstcw
outs
inc
sahf
mov
popf
popf
sahf
(bad)
(bad)
push
stos
popf
popf
mov
mov
mov
mov
mov
fwait
fs
push
sahf
xlat
popf
mov
dec
xchg
jecxz
dec
pop
call
aad
mov
or
jnp
pop
cdq
push
push
add
jmp
imul
jge
push
add
mov
or
rcr
add
adc
and
or
cmp
stos
and
movs
push
pop
mov
adc
sub
add
pop
aam
or
xor
rol
sti
mov
adc
add
mov
adc
out
repnz
push
js
or
jmp
test
push
add
pop
test
popf
sbb
(bad)
mov
mov
mov
or
in
xor
xor
add
adc
and
adc
adc
lods
pop
adc
test
adc
jmp
cmp
and
repnz
jl
popa
ret
and
sub
cmp
inc
xor
sub
inc
xor
xor
and
scas
aaa
sub
lods
sub
movs
and
lods
xor
xor
sub
scas
daa
ss
(bad)
sub
and
sub
sub
xor
xor
call
xor
sub
es
hlt
xor
out
aaa
sub
sub
and
sub
sub
es
and
ret
xor
sub
xor
das
cs
ret
sub
and
es
das
xor
ss
and
daa
sub
and
daa
das
and
and
and
xor
cmp
sub
and
xor
and
aaa
xor
das
sub
and
imul
sub
push
aaa
xor
jle
sub
jle
inc
cmp
je
data16
cs
dec
xor
jne
jl
and
inc
dec
adc
inc
add
loopne
jmp
fnstenv
outs
out
loope
bound
call
arpl
cwde
jge
or
fwait
jecxz
push
stos
cs
inc
xchg
ds
jno
mov
enter
and
rcl
loope
in
inc
sbb
data16
in
arpl
jmp
(bad)
cwde
mov
jecxz
fs
in
jmp
pusha
fscale
xchg
lahf
mov
popf
push
addr16
loope
cdq
adc
mov
mov
cwde
mov
sbb
jne
dec
and
jo
fnsave
or
dec
mov
popa
dec
mov
mov
or
cli
sbb
fld
inc
ficomp
mov
fldcw
ficomp
popf
mov
fsubr
fiadd
addr16
fisttp
je
jecxz
loope
adc
jg
xchg
nop
mov
jecxz
popf
push
push
fnsave
mov
mov
mov
popa
loope
lock
popa
inc
add
mov
inc
retf
inc
ror
add
loop
arpl
cmps
cmp
mov
fist
nop
lock
push
sahf
loopne
imul
jne
jne
int3
movs
mov
popa
cmp
add
ja
mov
out
(bad)
adc
call
xchg
iret
jnp
mov
sbb
sbb
push
cmp
repz
popa
scas
lods
add
add
xlat
(bad)
sbb
jp
push
cmps
sti
push
xlat
(bad)
push
les
sti
cmp
xlat
dec
jb
shl
cmps
cdq
repnz
out
sub
sub
popa
and
sub
cmp
jb
and
ja
cmp
sub
and
push
cmp
dec
and
cmp
cmp
dec
xor
sub
es
pop
aaa
and
pop
aas
xor
test
sub
xor
mov
cmp
mov
sub
sub
test
and
xchg
and
mov
sub
sub
sub
sub
cs
and
das
cmc
xor
and
xor
sub
xor
xor
sub
xor
aas
and
jmp
xor
sub
das
int3
and
sub
sub
and
xor
ret
xor
xor
and
sub
and
xor
cmp
sub
cmp
sub
sub
cmp
sub
daa
es
cmp
and
xor
sub
and
sub
xor
and
sbb
cmp
xor
ss
das
and
fs
das
jbe
sub
sub
sub
and
xor
push
das
sub
aaa
dec
cmp
and
xor
push
sub
xor
pop
les
bound
inc
loope
shl
popa
in
adc
rol
or
clc
mov
bound
inc
and
push
push
push
push
mov
enter
and
pusha
popa
fcom
outs
adc
ins
stos
and
ins
scas
in
pop
test
inc
out
ss
stos
xor
inc
jo
add
mov
mov
inc
imul
popa
pushf
movq
cmc
sub
fs
fs
ins
bound
pop
data16
bound
pop
jns
jl
cmp
test
(bad)
xor
xor
adc
sub
mov
dec
pop
arpl
les
call
mov
and
inc
mov
in
ret
mov
and
retf
push
ret
push
ret
pop
lds
stos
pop
inc
mov
and
mov
ror
stos
dec
dec
xor
cmp
cmp
xor
cmps
mov
mov
das
mov
dec
xor
sub
stos
scas
dec
mov
cmps
pushf
dec
cmp
adc
sub
add
lods
or
add
mov
lods
jo
xor
(bad)
mov
ins
enter
(bad)
xor
popa
(bad)
cmp
push
(bad)
mov
movs
rol
mov
ret
mov
ror
mov
mov
retf
mov
cmp
and
retf
mov
and
and
enter
les
and
lds
and
inc
xor
dec
cmp
mov
scas
push
into
cmp
mov
sbb
mov
shr
fldcw
in
test
mov
sbb
sar
adc
movs
mov
inc
fnstenv
out
adc
fcos
and
sbb
popa
fst
jns
ins
retf
push
pop
jp
hlt
adc
xrelease
stos
iret
and
add
cdq
jmp
(bad)
mul
shr
xchg
nop
les
cwde
fs
ins
in
retf
push
cmps
sbb
cmps
adc
pushf
sbb
mov
mov
sbb
out
cmp
pushf
mov
ja
add
lea
popf
sbb
cdq
xchg
jne
test
mov
les
push
int
add
int
sbb
mov
repz
and
sub
jae
sub
adc
jns
call
gs
dec
sbb
push
into
sbb
mov
data16
adc
and
in
daa
outs
inc
mov
(bad)
fnstcw
mov
push
mov
dec
jecxz
aas
fcos
sub
mov
and
or
sub
sbb
(bad)
xor
push
movs
pop
sbb
(bad)
cmp
push
movs
pop
sbb
(bad)
and
push
movs
pop
sbb
(bad)
sub
pop
movs
(bad)
rol
adc
pop
movs
aaa
sbb
(bad)
sbb
pop
movs
aas
adc
jae
push
movs
cmps
sub
outs
dec
xlat
loopne
push
shl
jae
adc
leave
xor
push
xchg
shl
out
sub
adc
mov
adc
xchg
adc
inc
or
loopne
dec
imul
dec
stc
lahf
jecxz
outs
cmps
sub
adc
sbb
mov
dec
jg
add
into
push
mov
aas
outs
daa
test
adc
cmp
mov
dec
jg
and
dec
cli
pop
and
outs
daa
loope
call
call
xlat
in
dec
rcr
inc
dec
jg
dec
aaa
pop
aaa
mov
inc
mov
leave
or
adc
push
mul
(bad)
leave
or
out
sbb
loopne
dec
fnstsw
add
daa
pop
adc
jmp
or
(bad)
adc
mov
mov
(bad)
or
xlat
and
sub
xor
cmps
fwait
shl
and
sub
dec
inc
push
dec
loop
(bad)
push
and
adc
in
dec
push
or
pop
mov
dec
ja
stc
or
jno
imul
mov
mov
and
inc
and
pop
aad
in
cld
dec
test
fwait
xlat
in
or
lods
xchg
xchg
and
sub
loopne
inc
and
cmovae
push
not
pop
je
scas
loopne
sbb
popa
xor
or
sub
je
lahf
or
out
mov
cmp
mov
jno
dec
or
mov
and
scas
hlt
loopne
jno
aaa
daa
add
(bad)
push
addr16
int
outs
dec
cmp
and
mov
and
ror
and
mov
cs
dec
mov
mov
mov
sub
cmp
les
movs
and
mov
lods
and
(bad)
lods
cdq
dec
cmp
sbb
scas
push
int
sub
dec
xor
mov
std
retf
mov
and
inc
xor
into
xor
(bad)
mov
and
mov
rol
cmp
and
dec
xor
fisttp
daa
inc
int3
xor
dec
dec
xor
dec
mov
scas
cmp
mov
and
dec
mov
mov
dec
aas
mov
adc
mov
and
mov
stos
mov
mov
or
mov
and
cmp
jg
mov
mov
gs
mov
and
cmp
ffreep
mov
daa
xlat
leave
mov
retf
ret
mov
inc
sar
inc
into
aas
lods
mov
mov
mov
mov
mov
xor
stos
jmp
pop
cdq
test
mov
fistp
mov
xchg
dec
add
dec
pop
jmp
cdq
xor
je
sar
push
adc
fisubr
inc
jae
call
cdq
xchg
xchg
fsub
jne
cli
sti
nop
mul
push
pop
adc
adc
les
test
gs
(bad)
les
in
inc
sbb
lea
jnp
xchg
sbb
sub
xor
icebp
mov
lds
fs
inc
in
test
mov
and
pop
je
fcom
pushf
cdq
xchg
mov
sahf
scas
pop
dec
ja
adc
sbb
mov
jno
add
or
jmp
inc
mov
xor
add
sbb
std
pop
mov
test
xchg
in
add
sbb
lods
jmp
add
js
sbb
in
jmp
and
jo
jns
pushf
sbb
mov
jae
push
data16
gs
(bad)
loopne
sar
dec
fwait
sar
xchg
cdq
mul
xchg
sbb
xchg
pop
data16
push
xor
cmps
aad
or
adc
xchg
sbb
pop
fnstcw
xor
jmp
comiss
dec
inc
mov
add
xchg
int
iret
dec
push
in
xchg
std
gs
push
jmp
dec
pop
jae
add
fisttp
retf
inc
shl
sbb
out
push
xchg
push
mov
cmp
aas
pop
or
loopne
inc
stc
xor
ret
dec
in
in
cmp
sti
push
or
retf
dec
(bad)
sub
xrelease
sub
imul
je
std
pmuludq
fstp
sub
rcr
mov
sti
jbe
cmp
sbb
retf
jns
scas
push
out
jle
rcl
xor
sub
mov
pop
mov
pop
adc
outs
adc
xchg
sub
inc
fistp
int
xchg
ret
gs
test
std
mov
inc
jae
pop
or
bound
(bad)
inc
loop
popf
fstp
dec
xchg
dec
fadd
or
xchg
fisub
sti
dec
(bad)
cpuid
je
xchg
sub
add
cmps
xor
retf
in
add
xor
pop
fisttp
adc
je
fmulp
das
jb
push
mov
add
shr
mov
cdq
mov
mov
jno
mov
aaa
arpl
sub
stc
gs
clc
mov
nop
mov
push
adc
in
inc
mov
cmps
fstp
xor
mov
(bad)
loopne
adc
stos
cmp
mov
pop
xchg
push
xor
mov
shr
gs
pushf
jb
inc
push
mov
inc
xchg
and
pop
sbb
mov
mov
mov
mov
imul
data16
add
pop
cmps
adc
popf
jne
in
in
cmps
test
inc
fstp
pop
mov
popa
ret
retf
or
push
arpl
test
stos
scas
adc
xchg
add
neg
dec
inc
mov
fcom
test
stos
popf
and
xor
ins
adc
or
mov
sbb
xor
push
loopne
adc
jle
gs
add
jo
fwait
xchg
mov
pushf
and
aaa
xor
fnstsw
adc
(bad)
mov
or
mov
lods
repz
das
loope
lock
fisub
adc
sti
jle
cmp
dec
sub
(bad)
mov
neg
cmc
popa
lods
mov
sub
push
loop
stos
cmp
je
movs
dec
aas
adc
test
pop
or
movs
rol
xor
mov
xor
outs
mov
pop
(bad)
xor
pop
lods
mov
adc
mov
mov
rcr
push
shl
xor
fwait
stos
mov
inc
or
rcl
cld
dec
loopne
mov
dec
jle
sbb
icebp
push
sar
mov
out
movs
pop
lods
fcomp
int
xlat
call
dec
mov
sbb
mov
arpl
or
fcmovbe
aam
pop
out
lahf
shl
gs
adc
pop
jmp
outs
cmc
stos
imul
fdivr
adc
out
mov
das
jl
push
pop
jmp
lods
jo
into
xchg
cmp
(bad)
rol
loopne
dec
jle
xor
add
(bad)
dec
movs
outs
inc
ja
neg
mov
je
pusha
iret
test
adc
cmp
call
mov
xor
js
test
in
enter
repz
rcl
xor
dec
dec
fld
out
jns
jle
mov
xor
lea
jnp
fwait
add
cli
rcr
or
rol
and
lds
stc
mov
jbe
add
std
leave
pop
dec
inc
movs
test
cmps
mov
jmp
xor
out
retf
aas
comiss
das
rcr
mov
mov
cmp
lods
sbb
ins
lods
and
imul
dec
mov
add
scas
push
xchg
lock
shl
lock
jmp
inc
test
jmp
(bad)
mov
add
mov
mov
jmp
cmp
ins
sbb
and
dec
das
adc
int3
out
mov
mov
lock
fmul
or
mov
pushf
adc
push
pop
pusha
rcl
ficomp
or
fist
data16
push
or
inc
and
out
aam
cmps
and
mov
movs
push
xor
nop
pop
mov
adc
and
push
aas
scas
pop
push
cmp
add
stos
adc
and
sar
and
daa
hlt
pop
mov
loop
xor
loop
mov
jecxz
mov
mov
push
push
aas
lods
pop
push
xor
xlat
xor
dec
push
mov
mov
mov
pop
mov
ds
mov
mov
fistp
cmps
sub
mov
xchg
fstp
and
mov
es
cmp
pop
push
mov
mov
jne
mov
cmps
jl
cmp
(bad)
aam
mov
in
push
xor
in
cmp
mov
fcmovbe
cmp
sub
dec
push
xor
dec
sar
and
pop
mov
lods
cmp
mov
and
mov
movs
push
ds
mov
inc
xchg
xor
addr16
xor
jno
xor
mov
xor
mov
call
sub
xor
and
out
jae
out
xor
and
mov
inc
(bad)
xor
pop
shr
sbb
xor
xor
inc
fisttp
fwait
ins
dec
loopne
(bad)
sbb
pop
push
jo
stc
imul
les
in
fstp
mov
in
xor
inc
leave
leave
sbb
pop
adc
(bad)
mov
cs
xchg
cdq
xchg
les
sub
js
xor
jns
test
inc
test
les
repnz
test
in
sbb
inc
sbb
shr
push
in
in
jo
sub
in
fs
jo
cdq
cmp
add
repz
rol
call
rol
and
sub
(bad)
jae
addr16
test
add
fistp
jp
rol
jns
sbb
xlat
mov
add
dec
pop
jp
cmp
fistp
fcmovnb
jnp
sub
jns
pcmpgtd
mov
int3
dec
push
bound
repz
js
ins
jmp
sbb
xor
mov
add
add
adc
icebp
jbe
(bad)
out
push
push
add
cmp
enter
sub
fisttp
lea
int
aam
inc
push
xor
shl
in
inc
clc
push
fcomip
pop
or
sub
inc
add
sbb
push
mov
and
inc
imul
push
sub
cs
fs
xor
jns
setbe
cmps
enter
jl
cmp
push
sub
or
jecxz
jne
mov
jae
mov
sbb
jo
in
push
xor
ins
or
(bad)
cmovb
jne
add
(bad)
sbb
ins
cs
xor
ins
adc
ins
xchg
xor
push
xor
ins
ins
jo
in
add
sbb
ins
js
(bad)
(bad)
xor
ins
je
(bad)
push
jbe
sub
paddsb
xor
sub
adc
sbb
sub
lods
and
ins
movs
iret
push
es
je
ins
cmp
xchg
cli
xor
mov
dec
es
jle
jae
in
lds
sbb
cld
fnstenv
sbb
sub
hlt
(bad)
ins
xor
sahf
cmp
in
mov
jne
ins
jl
inc
jle
push
paddsb
leave
jo
fidiv
ins
dec
xor
mov
xor
mov
int
es
ins
aam
dec
xchg
jmp
dec
adc
call
xchg
(bad)
and
sub
adc
das
dec
mov
xchg
mov
xor
(bad)
stos
jnp
cli
inc
xor
cmc
icebp
cmp
out
push
int
and
je
ins
call
je
sub
inc
paddsb
ror
gs
push
add
mov
sub
dec
xor
cmc
lods
xor
inc
inc
paddsb
int
sub
(bad)
aam
jns
xchg
das
in
fs
into
(bad)
dec
ins
out
clc
xor
dec
pushf
pushf
mov
and
jno
xor
cs
shl
xchg
shl
ins
test
das
ins
mov
push
in
pop
nop
xchg
outs
fnsave
das
in
jo
mov
xchg
outs
imul
xchg
pop
mov
dec
fmul
adc
out
add
jae
xchg
push
pop
sbb
mov
adc
in
cdq
ss
repz
popa
lock
les
repz
popa
add
pop
jmp
or
hlt
loopne
pop
jg
scas
mov
stc
mov
xchg
jl
inc
shl
jnp
movs
sbb
push
sbb
mov
jno
push
ins
test
jae
xlat
push
into
cdq
pop
cwde
icebp
daa
js
jae
cmps
popa
repz
popa
pop
rep
test
cdq
pop
and
jnp
jae
mov
icebp
sbb
xor
ret
(bad)
and
mov
pop
xchg
xor
shl
sbb
jg
fsub
add
or
icebp
jg
and
or
add
popf
sbb
daa
mov
gs
pop
les
cmp
in
test
add
sub
pop
adc
xchg
add
jno
data16
adc
push
adc
push
inc
or
cmps
pop
or
pop
jp
xor
pop
jl
jns
sbb
sbb
inc
(bad)
iret
scas
cdq
fcomi
mov
jns
inc
pop
jg
lock
jns
cmp
scas
dec
pop
es
jmp
push
sub
sub
cdq
xchg
lea
inc
mov
xchg
rcr
dec
mov
pop
ss
sbb
cmc
cld
mov
push
mov
(bad)
mov
push
(bad)
pop
add
(bad)
mov
cmps
inc
pop
add
sub
inc
cmps
mov
ins
in
dec
out
push
push
js
mov
push
mov
and
adc
(bad)
lods
lahf
fstp
and
(bad)
sub
xlat
cmp
push
cmp
clc
sar
and
pop
mov
mov
xlat
aam
mov
pop
pop
cmp
(bad)
mov
enter
dec
(bad)
lods
retf
sar
(bad)
cmps
ss
mov
mov
cmp
and
(bad)
mov
movs
sub
mov
cdq
pop
xor
popf
fnstcw
adc
or
pop
xor
lock
cmp
and
push
cmp
push
fdiv
cmps
imul
xor
pop
pop
mov
rcl
xor
retf
aad
movs
dec
pop
mov
lds
sub
cmp
movs
cmp
pop
mov
movs
mov
fidivr
cmps
and
cmp
cmp
pop
and
mov
pusha
int
loopne
fstp
jnp
and
mov
idiv
repnz
xchg
jp
call
in
ficom
jnp
jns
sub
pop
or
repz
(bad)
cli
add
aas
in
adc
or
in
add
jns
out
adc
mov
(bad)
addr16
or
icebp
inc
stos
pop
cmp
jns
out
xor
(bad)
sbb
sbb
leave
jle
pop
mov
cdq
xchg
loop
stos
(bad)
ss
and
xchg
ins
xor
inc
adc
test
mov
pop
mov
aas
js
test
add
inc
pop
jp
inc
retf
(bad)
sti
jnp
fstp
repz
inc
pop
ins
jmp
jo
inc
pop
mov
pop
jne
sbb
push
mov
in
test
mov
jecxz
add
xor
mov
or
mov
dec
mov
ffreep
div
xlat
cdq
pop
in
retfw
or
ds
jb
dec
data16
and
mov
xchg
les
inc
enter
pop
inc
push
dec
jp
sub
sbb
dec
push
cmc
sti
stos
aam
or
mov
xchg
xor
cld
dec
mov
xchg
in
adc
push
addr16
test
je
cmps
repnz
cmp
out
jne
add
cmps
rcl
aas
mov
mov
push
in
(bad)
mov
push
aam
or
push
mov
mov
out
xor
jmp
push
xor
shl
jno
popf
cmc
jne
(bad)
xchg
aad
loop
ins
xor
or
jo
mov
pop
data16
cmp
and
xchg
popf
imul
ficom
fnsave
xor
cmps
rcr
and
jle
sbb
xor
sub
ja
push
jle
jno
rcr
lods
sub
push
inc
dec
mov
out
sub
push
jmp
mov
dec
adc
inc
shl
vpsrlq
call
scas
or
sub
adc
cmc
push
jle
mov
push
sub
push
xor
movs
push
xor
dec
push
sub
(bad)
sar
loopne
mov
or
lock
push
stc
push
adc
sbb
stos
aaa
movs
sub
adc
retf
inc
mov
mov
jns
rcl
jo
xor
cs
lods
out
shl
and
aas
lods
xlat
aam
lods
pop
push
cmp
pop
pop
cmps
(bad)
cmp
movs
rcr
int
cmp
aaa
fdivr
and
pop
mov
mov
aad
sub
pop
cmp
test
aas
das
xchg
push
mov
daa
sbb
mov
adc
and
fnstenv
mov
mov
sub
mov
sub
jg
mov
and
mov
and
pop
ds
push
pop
xor
sub
pop
mov
xlat
fnstsw
and
mov
lods
dec
fnsave
scas
aaa
pop
cmp
sar
cmps
cmp
cmps
mov
pop
cmp
fnstcw
movs
cdq
pop
mov
sbb
mov
lods
xchg
shl
and
pop
xor
or
cs
xchg
outs
inc
dec
jnp
cmps
fnstcw
sbb
(bad)
inc
mov
out
retf
dec
jns
pop
inc
out
dec
push
inc
or
call
sbb
or
jmp
jg
or
push
push
mov
jg
jb
jnp
jge
xchg
xor
es
cli
mov
lea
leave
mov
sbb
(bad)
out
mov
repz
pop
dec
push
pop
add
ret
push
mov
xor
jp
xchg
pop
jp
aaa
cmp
cwde
(bad)
dec
ss
pop
repz
fisub
into
pop
xor
mov
les
pcmpgtd
sbb
mov
jns
pop
out
cmps
or
push
pusha
xchg
les
mov
in
add
bndstx
mov
data16
comiss
push
add
add
pop
jp
inc
shl
jno
and
push
mov
sar
jae
jmp
test
(bad)
mov
pop
(bad)
adc
cmc
add
pop
repnz
cmp
add
test
jns
xor
sbb
outs
cmp
in
cmp
lahf
xchg
out
fistp
pop
jnp
add
(bad)
fs
jmp
repnz
cmc
sub
inc
in
inc
push
int
lods
mov
sub
out
clc
icebp
cmps
lods
ins
push
mov
pop
fwait
lea
jp
loopne
cmp
or
out
lea
mov
or
xlat
lea
in
push
icebp
imul
sub
push
out
sub
clc
and
cdq
xchg
sti
cdq
xchg
call
or
aad
out
cmp
xchg
push
movs
or
xchg
popa
bound
out
mov
mov
jno
dec
cmp
inc
in
pop
int3
pusha
loop
pop
js
jg
jmp
xchg
into
call
mov
sub
adc
clc
push
mov
das
jge
cmc
dec
add
push
or
cmps
lea
aad
or
xchg
inc
pop
data16
enter
inc
retf
inc
sahf
js
scas
adc
push
mov
inc
idiv
mov
jge
in
push
dec
add
test
jne
clc
cmps
mov
imul
push
mov
sub
jb
fwait
cmp
sub
lea
push
es
add
scas
or
jge
in
mov
daa
test
pop
pushf
xchg
pop
push
sti
jge
call
scas
hlt
in
adc
and
pop
adc
dec
pushf
mov
push
(bad)
retf
xchg
xchg
(bad)
jno
test
mov
xchg
inc
(bad)
push
push
jl
ret
mov
inc
add
rcl
stc
mov
jbe
imul
pusha
stc
ss
xchg
imul
xchg
lahf
or
push
(bad)
das
cmp
sub
mov
inc
call
ss
push
ja
je
jb
cmps
outs
jne
jns
imul
sub
sub
sub
sbb
retf
lods
cmp
imul
std
adc
in
call
daa
in
or
aaa
pushf
addr16
mov
shl
aam
sbb
retf
lods
or
cmp
adc
jge
sub
mov
push
mov
or
or
mov
or
mov
lods
cmp
enter
leave
aas
dec
cmp
sbb
imul
inc
cmp
test
ret
in
push
push
sub
and
sub
sub
ret
push
jae
retf
popa
loopne
inc
mov
test
adc
sub
out
test
aad
mov
ror
xchg
pop
cli
test
aas
(bad)
test
jg
retf
push
aam
or
ins
data16
adc
dec
cmp
push
or
in
jl
icebp
xor
push
(bad)
leave
(bad)
jl
or
pop
sub
aaa
mov
push
pushf
int3
mov
xor
adc
test
mov
stos
push
mov
aad
mov
test
in
sub
xrelease
push
mov
mov
repz
clc
(bad)
lods
sub
loop
mov
or
stc
ss
lds
out
nop
(bad)
div
mov
mov
mov
jle
mov
aad
xchg
dec
push
push
lods
xor
mov
arpl
mov
dec
inc
jbe
jns
loopne
nop
cmp
and
jb
aam
jb
push
jns
outs
test
push
cld
jmp
and
int3
xlat
fmul
cld
or
jmp
inc
lea
add
jl
or
int3
pushf
or
cmp
cmps
dec
jp
shl
xchg
ins
fbld
call
dec
pop
xchg
jle
sub
dec
sar
movs
dec
xor
in
mov
scas
pop
sub
addr16
lock
mov
in
ficom
jne
sub
retf
outs
pop
push
fisubr
movs
dec
(bad)
scas
movs
dec
retf
dec
lods
jecxz
psrad
pop
ds
movs
dec
pushf
in
pslld
inc
pop
xor
mov
(bad)
scas
fs
adc
xor
emms
fwait
iret
push
scas
in
pop
int3
lods
dec
push
scas
movs
dec
inc
jnp
sub
xor
and
cs
jmp
invd
mov
(bad)
test
movs
dec
addr16
jl
sbb
ds
scas
movs
pop
adc
and
outs
test
int3
scas
jle
mov
ja
mov
mov
dec
jnp
movs
add
jge
dec
xchg
jno
dec
sbb
sbb
pop
ret
mov
in
push
mov
fistp
bnd
pop
je
hlt
add
dec
movs
mov
sbb
dec
dec
mov
movs
dec
popf
imul
jmp
test
dec
into
mov
push
rdtsc
test
movs
mov
mov
dec
not
dec
cli
test
in
lea
movs
cvtpi2ps
stos
dec
loop
in
dec
mov
and
mov
and
dec
push
test
and
adc
dec
not
mov
jne
push
pop
sbb
fimul
xchg
jbe
sub
in
or
jne
mov
pop
shld
jne
bound
sysenter
lods
dec
rep
inc
neg
pop
jp
mov
imul
push
sahf
pop
xchg
push
fcmovnbe
pop
or
push
mov
pop
or
fwait
jne
sub
xchg
push
repz
mov
int
test
adc
scas
rsm
call
hlt
into
fcom
mov
sub
pop
aad
mov
push
inc
lods
nop
pusha
pop
lods
cwde
je
lods
test
inc
lods
cwde
jo
sub
pusha
dec
lods
pop
jb
lods
test
jb
cwde
jo
lods
test
jp
xchg
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
lods
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
xor
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
xor
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
scas
inc
jb
mov
or
inc
jb
aas
shl
je
push
mov
mov
mov
shl
push
ds
enter
(bad)
mov
shl
pop
cmp
adc
jle
daa
scas
cld
adc
cld
xchg
out
ds
addr16
call
loop
cld
xlat
mov
add
mov
adc
push
(bad)
push
addr16
adc
push
(bad)
push
mov
and
xlat
out
cld
shl
stos
cld
nop
out
jp
cmps
jae
xchg
cmps
js
push
and
cmp
and
mov
xchg
mov
xlat
jnp
daa
aad
push
arpl
mov
adc
daa
and
out
jge
loopne
cmp
and
cmp
pop
xor
in
mov
cmps
or
mov
loop
repz
xor
cmc
push
mov
mov
xchg
adc
cmp
mov
xchg
adc
(bad)
push
pop
pop
pop
popa
addr16
mov
jae
xchg
inc
xor
inc
jb
cmp
jmp
push
scas
jbe
inc
jb
mov
push
xor
mov
out
jb
addr16
mov
and
lock
les
loope
mov
mov
push
xor
mov
pop
mov
arpl
mov
mov
push
aad
jo
adc
mov
out
je
cmps
(bad)
mov
mov
inc
mov
mov
mov
xchg
and
xor
sbb
pop
fs
jo
and
xchg
daa
addr16
loope
mov
mov
mov
push
in
cmc
push
cmps
stc
mov
and
jb
arpl
xchg
pusha
add
xor
adc
loop
mov
es
xchg
arpl
jae
and
shl
addr16
bound
mov
and
jno
and
adc
mov
inc
xor
and
jbe
movs
push
jo
loope
mov
es
shl
push
xor
xchg
mov
stos
repnz
bound
xchg
cmps
repz
and
push
es
cmp
xchg
loopne
bound
ror
mov
sbb
jmp
jno
call
or
cmp
cmc
mov
pop
pop
scas
push
dec
jmp
popf
addr16
fdivr
into
je
pop
fimul
dec
jmp
mov
xor
enter
pop
push
inc
bound
inc
jle
mov
inc
xor
sbb
shl
cdq
adc
mov
sar
push
or
pop
jns
std
int
(bad)
int3
pop
sub
data16
mov
pop
mov
push
popf
xchg
sbb
lods
push
or
jg
data16
int
dec
add
jl
fimul
cmp
jl
cwde
lds
pop
fwait
inc
xchg
mov
lea
mov
leave
pop
xor
mov
jne
xrelease
fwait
adc
in
xchg
xchg
push
sbb
clc
xchg
call
xchg
(bad)
sbb
gs
jl
stc
aas
jne
xchg
sbb
jnp
dec
fprem1
push
(bad)
xchg
cmp
dec
cmp
pop
xchg
aad
jp
stc
sar
out
mov
xchg
sub
cmc
pop
lea
sub
(bad)
mov
stc
jmp
aas
stc
cmp
jne
clc
aas
arpl
(bad)
data16
cmp
mov
mov
or
mov
pop
pop
fwait
pop
mov
adc
pop
jb
push
push
sbb
xlat
inc
int
push
jecxz
not
and
ss
cmps
pop
not
in
jae
loop
mov
jecxz
not
loope
mov
and
mov
mov
(bad)
mov
loope
mov
daa
inc
mov
and
jb
popa
mov
xchg
arpl
jo
mov
pop
hlt
push
fs
repnz
daa
data16
jecxz
repz
test
xlat
arpl
jbe
daa
jae
aam
mov
jae
daa
inc
ja
loope
jb
out
xor
dec
mov
cmps
xchg
mov
mov
sbb
xchg
pusha
lahf
jno
popa
cmps
not
out
icebp
xchg
pusha
lods
mov
daa
icebp
xor
arpl
mov
and
ja
in
mov
arpl
aaa
aam
push
not
mov
pop
xor
mov
out
xchg
out
jae
es
lock
mov
js
push
out
ss
add
push
popa
inc
mov
arpl
adc
mov
fwait
mov
sub
cmps
pop
cmp
mov
loop
push
je
sbb
add
jne
stc
pushf
test
push
dec
(bad)
dec
dec
jb
sbb
loop
clc
pop
sar
add
jns
mov
add
mov
idiv
jle
xchg
test
push
movs
push
xchg
push
gs
out
or
movs
inc
inc
cmps
sub
pop
mov
lds
rol
mov
gs
sbb
mov
sahf
gs
sub
aaa
jl
ret
fild
stos
mov
movs
mov
loop
push
test
adc
inc
jb
mov
jns
pop
add
cmps
xchg
pop
jo
lock
adc
pop
js
sbb
sub
inc
xor
pop
lea
cmps
dec
cli
and
cmp
ins
imul
sbb
jo
or
push
mov
xchg
xor
test
sbb
or
pop
cmp
call
jns
dec
cli
mov
aam
mov
(bad)
pop
pop
jl
mov
mov
adc
jl
mov
mov
sbb
and
(bad)
fmul
mov
lea
cmp
ret
xchg
pop
inc
cmp
(bad)
das
int3
shl
(bad)
js
push
imul
push
mov
push
movs
outs
mov
mov
jne
push
mov
scas
xchg
xchg
mov
inc
out
out
sub
mov
scas
movs
inc
out
ficom
xchg
das
(bad)
push
mov
mov
mov
nop
out
xchg
mov
pop
stc
sub
push
out
ja
and
and
xlat
mov
mov
pop
arpl
lock
jno
out
xor
inc
xor
daa
mov
popa
pop
jb
and
jbe
and
repz
and
xor
mov
bound
imul
shl
mov
xlat
cmps
mov
xor
push
and
mov
dec
je
and
xor
push
out
cmc
(bad)
cmps
call
out
xor
mov
test
mov
and
icebp
pop
arpl
jae
mov
xor
and
repnz
mov
xchg
mov
out
hlt
pop
out
mov
data16
loopne
repz
jmp
cmps
div
push
in
repnz
and
xor
(bad)
mov
xor
and
push
es
xor
out
je
loop
jne
in
ss
es
jb
daa
movs
mov
loope
xor
mov
push
loope
fsub
cmps
out
cmps
inc
dec
mov
dec
jb
mov
mov
movs
xchg
jnp
xchg
pushf
inc
jb
mov
cmp
push
fsub
ret
aad
or
xchg
mov
imul
out
mov
mov
push
or
dec
rol
inc
fsub
into
fld
or
in
cmp
(bad)
mov
xor
cmps
push
dec
pushf
pop
jns
mov
popf
lea
jl
push
stos
cmp
mov
cmps
inc
mov
inc
pop
repnz
jb
call
xchg
or
stos
test
shl
push
mov
loopne
dec
repz
fcomp
adc
sbb
pop
cs
adc
out
outs
(bad)
cld
inc
test
push
ins
(bad)
add
idiv
add
cld
xchg
and
dec
pop
bound
mov
cwde
pop
pop
cmp
dec
mov
cmp
cmps
inc
push
cmps
je
enter
or
inc
cmp
add
jle
(bad)
mov
addr16
lea
add
xchg
sti
ret
sub
popf
int3
sub
add
xor
inc
test
sub
inc
cmp
mov
xchg
cli
(bad)
ins
pop
sub
mov
sbb
mov
mov
retf
adc
jg
add
cdq
add
arpl
loopne
adc
cmp
dec
pop
jno
ror
inc
or
outs
ficom
cmps
push
jbe
mov
movs
call
neg
sbb
jp
out
mov
and
push
mov
aam
hlt
pop
or
cmp
inc
jnp
cmps
add
retf
cli
leave
inc
jg
xor
pop
jmp
gs
into
xor
mov
fldenv
loopne
dec
je
add
dec
arpl
mov
push
lock
or
and
pop
jnp
mov
jmp
push
xor
iret
scas
cmps
(bad)
sbb
arpl
or
sbb
mov
test
add
stos
ror
xchg
inc
arpl
push
test
fwait
cwde
add
xor
stc
gs
fs
ror
mov
mov
sbb
imul
pop
push
imul
imul
inc
jb
mov
shl
mov
out
adc
inc
ins
xchg
mov
int3
imul
jmp
mov
push
sub
and
jmp
aam
popa
call
pop
bound
sub
popa
xor
adc
mov
xchg
cmps
aas
sub
loopne
cs
mov
dec
jmp
push
stos
shl
push
out
in
push
es
push
cmps
loope
xchg
data16
in
adc
test
sub
cmps
imul
popa
ja
xchg
mov
mov
outs
push
loope
push
push
daa
or
push
mov
push
outs
adc
fldcw
and
push
shl
mov
jmp
shl
xor
xchg
and
pop
mov
mov
out
shl
test
adc
dec
push
shl
pop
imul
push
test
out
call
aad
and
stos
push
and
inc
adc
add
inc
mov
popw
push
lahf
mov
pop
mov
cli
dec
lock
pop
mov
lock
inc
inc
cdq
mov
repnz
push
cmp
sbb
pop
jl
jle
fwait
mov
mov
add
xchg
dec
mov
repz
cmps
jae
jne
add
sub
out
dec
mov
(bad)
mov
inc
jb
mov
inc
jb
mov
inc
jb
mov
inc
jb
mov
inc
jb
mov
inc
xor
cli
xchg
gs
jp
pop
dec
mov
push
mov
cli
outs
mov
mov
lds
into
push
aam
int3
adc
add
mov
push
fild
rcl
add
jnp
sbb
sbb
idiv
cmp
and
dec
add
push
hlt
lahf
xchg
jbe
push
in
ret
(bad)
pop
sbb
cmps
(bad)
inc
add
js
adc
enter
jb
inc
sti
ins
nop
push
mov
lea
mov
xchg
fdiv
push
cmp
ss
dec
pop
in
mov
sti
inc
cmp
call
(bad)
sar
(bad)
pushf
and
mov
cld
inc
mov
adc
std
aad
aam
imul
pop
mov
lea
inc
xor
add
outs
repnz
bound
jnp
mov
std
xchg
sbb
pop
jp
pop
sahf
cmc
adc
(bad)
xchg
daa
dec
jmp
or
inc
cmp
sbb
imul
test
stc
inc
cmp
shl
sbb
push
or
adc
inc
test
shl
clc
inc
cmp
add
ret
add
stos
mov
out
mov
sbb
mov
das
sub
adc
push
mov
pop
aas
imul
dec
outs
and
aaa
mov
mov
cs
mov
lock
mov
mov
outs
jbe
int
add
mov
outs
push
into
mov
push
mov
jp
and
mul
outs
jns
mov
aas
mov
mov
jmp
mov
push
lock
mov
loope
jnp
gs
xor
sub
add
sub
xchg
(bad)
loope
push
in
addr16
call
repz
(bad)
in
popa
add
ins
hlt
or
in
jnp
cs
lods
push
xlat
lods
dec
add
or
enter
cwde
mov
add
jmp
adc
mov
push
cmp
movs
mov
jne
sar
add
cmp
add
repz
dec
mov
dec
mov
ja
pop
add
data16
cmp
stos
fimul
rcr
sbb
jns
sub
cmp
jne
jl
mov
adc
dec
sub
mov
cmp
sub
cld
int3
jl
sbb
hlt
ret
and
data16
icebp
inc
(bad)
jl
out
or
mov
or
inc
jns
push
ja
jle
fdivr
xor
shl
aam
cs
fstp
test
and
test
sahf
xor
dec
in
inc
in
fistp
xchg
adc
push
mov
ret
pop
xchg
push
adc
jg
jb
mov
pushf
mov
cmp
daa
ds
or
push
aas
test
push
cmp
(bad)
mov
mov
shl
push
inc
cmp
test
mov
sti
cwde
(bad)
or
push
mov
ins
test
shl
pop
cli
pop
int3
cmp
into
fcomp
nop
jl
push
mov
push
mov
push
mov
add
and
shl
jo
and
(bad)
hlt
(bad)
out
adc
enter
(bad)
adc
mov
pop
(bad)
push
out
or
adc
jae
jo
mov
push
mov
jge
jno
mov
push
mov
(bad)
sub
cld
cmps
shl
cmp
dec
sbb
test
dec
sbb
int3
dec
sbb
test
dec
sbb
clc
leave
pushf
sbb
ins
iret
xor
inc
fist
dec
lods
sbb
pop
add
push
xchg
ins
iret
xchg
dec
sbb
cwde
dec
sbb
xchg
ins
iret
jecxz
adc
xchg
dec
mov
cli
xchg
aas
repnz
inc
add
adc
adc
mov
cld
stos
stos
mov
lods
push
retf
adc
mov
mov
sub
mov
ret
inc
pop
xchg
enter
cdq
cld
movs
add
js
dec
mov
aam
add
(bad)
stc
jmp
jmp
sub
cdq
jl
shr
add
loope
fimul
add
leave
loope
fisubr
int
in
cmp
out
jge
add
mov
inc
or
cmp
test
lds
mov
in
in
mov
and
jb
jecxz
mov
or
xlat
addr16
loope
mov
sbb
adc
out
loop
and
movs
xchg
addr16
popa
pop
bound
push
and
mov
push
mov
add
(bad)
mov
dec
and
retf
and
adc
fldenv
xchg
and
movs
xchg
and
push
and
movs
nop
pusha
stos
and
push
loop
in
bound
push
popa
jl
push
and
(bad)
bound
xlat
and
xchg
addr16
xchg
arpl
arpl
mov
and
adc
and
addr16
in
and
adc
ja
push
out
movs
push
and
daa
push
in
and
loop
mov
adc
loope
mov
push
and
pusha
aam
mov
(bad)
aad
sub
xlat
out
and
data16
xchg
out
movs
adc
jns
adc
cli
shl
mov
aad
dec
arpl
dec
arpl
push
lock
push
inc
mov
adc
xor
cmp
mov
adc
inc
cmp
adc
(bad)
mov
pop
int
retf
push
lock
dec
ror
dec
imul
pop
in
mov
or
xor
xchg
mov
xor
mov
or
outs
ja
cs
pop
xor
jb
pop
pop
jb
dec
cld
lods
jmp
jb
repz
push
xor
inc
or
or
push
pop
sub
sbb
nop
inc
or
sar
sub
mov
add
mov
sub
pushf
and
lea
bsr
dec
cmp
inc
jno
add
out
cmps
(bad)
jno
rcr
retf
mov
mov
sub
jb
dec
cmp
mov
pop
jp
fs
call
jae
popf
mov
jmp
fadd
mov
adc
fadd
pusha
repz
mov
popa
clc
inc
cmps
dec
jg
sub
mov
sar
ror
ss
push
mov
nop
cli
pop
scas
or
jno
into
push
addr16
test
cmps
push
xchg
pop
cmps
push
nop
pop
cmps
push
mov
fcom
xchg
pop
cmp
shl
inc
ja
bound
jmp
lds
inc
in
daa
dec
push
stos
cwde
ins
adc
push
test
int3
inc
neg
scas
test
pop
shl
inc
retf
inc
shl
dec
out
dec
retf
mov
not
in
xchg
push
call
dec
cmps
iret
aam
jmp
stos
cwde
ins
imul
test
push
inc
not
inc
adc
xchg
inc
sbb
push
sbb
not
add
call
dec
cmp
loop
push
push
pop
out
cmps
fbld
xchg
(bad)
in
xchg
and
xchg
and
arpl
cmps
jae
push
and
loop
addr16
xchg
addr16
loope
mov
push
and
push
cmps
shl
xchg
loop
addr16
and
and
mov
xchg
and
out
daa
lods
bound
mov
mul
adc
mov
add
and
addr16
dec
push
movs
dec
es
cmps
push
daa
shl
push
and
popa
fldenv
jecxz
mov
adc
jecxz
shl
out
and
pusha
push
mov
hlt
out
and
cmps
push
out
cmps
xchg
out
out
arpl
es
cmps
into
loope
out
and
push
jecxz
out
mov
adc
and
adc
stos
popw
and
fs
jecxz
and
daa
je
push
in
bound
popa
add
mov
mov
push
loopne
in
movs
push
mov
pop
fbld
jcxz
push
and
addr16
loopne
and
push
push
mov
ja
adc
movs
adc
cld
loope
add
(bad)
loopne
loope
fs
out
and
and
data16
push
daa
shl
xchg
and
jp
cmp
bound
movs
ds
rol
mov
cmc
es
push
outs
cwde
push
retf
or
mov
add
dec
ficom
xchg
jp
sbb
or
mov
outs
aam
push
(bad)
mov
inc
(bad)
lea
fdiv
lea
dec
jns
adc
lea
js
mov
pop
out
je
shr
iret
jge
or
push
bound
test
mov
and
mov
gs
aad
or
jl
out
xchg
movs
rcr
inc
or
or
test
sub
pop
(bad)
aam
enter
xor
aam
or
inc
mov
push
add
xchg
adc
mov
pop
hlt
cdq
adc
pop
aad
cwde
lea
data16
adc
aaa
or
dec
loop
pusha
repz
pop
mov
push
and
inc
mov
enter
mov
mov
mov
push
sub
pop
pop
rcl
retf
rol
data16
bound
pop
es
imul
test
ins
xor
mov
rcl
imul
aaa
js
je
or
dec
cmp
popa
data16
imul
jmp
sub
jp
dec
jmp
out
pop
mov
jmp
and
inc
push
in
jnp
and
mov
leave
jge
mov
xchg
mov
and
lea
mov
jl
inc
push
icebp
or
jbe
cmc
mov
mov
into
push
xchg
xor
inc
cmps
movs
push
cmps
test
loope
cmps
mov
push
arpl
adc
jp
push
popa
inc
popa
aam
xchg
xchg
daa
mov
mov
shl
xchg
mov
cwde
mov
aad
out
pop
out
in
addr16
and
(bad)
(bad)
out
pusha
clc
daa
push
and
and
loopne
arpl
or
adc
mov
loop
jecxz
jecxz
es
and
and
arpl
and
daa
data16
movs
imul
shl
mul
push
popa
sti
cmps
xchg
loopne
in
loope
arpl
shl
dec
jecxz
movs
(bad)
movs
shl
shl
adc
out
in
loopne
and
and
and
loopne
movs
aam
mov
push
loope
movs
push
and
addr16
addr16
out
mov
clc
popf
push
xor
jbe
jb
inc
push
jae
enter
cwde
call
retf
out
loope
call
mov
and
jb
mov
pop
xchg
retf
rcr
push
jp
sub
sbb
ja
or
cmc
add
mov
and
jge
lea
mov
mov
inc
mov
dec
cld
(bad)
lea
inc
bound
mov
inc
inc
fdivr
fucompp
or
enter
nop
inc
or
mov
mov
push
cmps
xor
pop
or
test
push
xchg
dec
aas
sbb
(bad)
fisttp
mov
mov
js
mov
jbe
sbb
push
and
out
lahf
jmp
xchg
loop
out
and
inc
jb
dec
cld
neg
inc
cmp
mov
repz
cmp
cmc
pop
sub
test
cmp
es
dec
push
or
mov
xchg
jb
adc
in
repnz
dec
or
add
ins
bound
mov
gs
jbe
lea
cmp
or
mov
pop
mov
xchg
aad
cmps
lea
or
jecxz
xor
dec
movs
ss
movs
or
(bad)
stc
pop
clc
mov
aas
mov
and
mov
or
(bad)
mov
mov
aaa
cmp
out
pop
imul
cmp
lods
push
mov
in
xor
ss
(bad)
movs
sti
repz
hlt
push
mov
pop
pop
dec
jmp
or
fscale
mov
add
and
xor
js
adc
jb
or
repnz
push
int
xchg
xchg
(bad)
mov
xchg
out
inc
(bad)
cmc
outs
xchg
xchg
(bad)
mov
xchg
sub
cmp
ret
sub
mov
aas
xor
arpl
lods
mov
xchg
jge
les
mov
push
jb
(bad)
cmps
hlt
sbb
loop
sbb
aad
inc
sbb
popw
sbb
(bad)
int3
sbb
xchg
pushf
push
out
sbb
adc
arpl
adc
call
call
xor
cdq
xchg
cmps
cld
pop
adc
rcr
pusha
les
loope
fwait
xchg
arpl
ficom
aad
push
and
push
fcomp
push
in
pop
pop
arpl
popf
push
cmps
outs
cdq
adc
in
push
(bad)
cmps
jae
pop
(bad)
cmc
cdq
push
loope
pop
xchg
loope
fcom
(bad)
sbb
mov
or
adc
(bad)
vinsertps
sbb
shl
fcom
cmps
call
mov
ins
cwde
xchg
es
pop
aam
neg
push
loope
pushf
pop
and
sahf
shl
lahf
adc
cdq
xchg
es
pop
xchg
out
call
push
cdq
adc
loop
push
adc
and
pop
mov
stos
ficom
bound
adc
and
es
aad
inc
pop
push
in
cdq
shl
dec
sbb
int3
fist
cdq
aam
push
pop
xlat
and
adc
and
push
xchg
arpl
jmp
push
jle
inc
inc
in
imul
stos
enter
retf
(bad)
adc
mov
imul
mov
sub
cmp
jo
shl
imul
repnz
sub
jle
push
xor
xchg
adc
(bad)
xchg
ins
push
fcomp
sbb
rol
mov
cmp
cmp
in
or
inc
mov
cmps
(bad)
retf
push
pop
xor
push
xchg
lea
or
cmp
dec
fdiv
jge
fcmovnb
xchg
stos
mov
xor
cmp
retf
dec
mov
xor
push
mov
dec
popf
(bad)
xor
fild
sbb
fs
je
inc
leave
mov
push
dec
mov
push
mov
mov
mov
adc
repz
mov
sbb
mov
hlt
inc
mov
lock
lods
lods
mov
ret
mov
jb
fidivr
or
sbb
pop
or
stc
enter
mov
sbb
and
xchg
ds
push
repz
mov
inc
ins
repnz
stos
jns
xor
push
mov
mov
aam
movs
dec
bound
cmp
push
xor
mov
stos
lea
outs
jns
loop
and
mov
(bad)
fadd
je
fadd
je
loopne
je
in
je
call
lds
lds
lds
lds
lds
ret
add
je
or
je
or
je
adc
je
adc
je
sbb
je
sbb
je
and
je
and
je
sub
je
sub
je
xor
je
xor
je
cmp
je
cmp
je
inc
ret
inc
ret
dec
ret
dec
ret
push
ret
push
ret
pop
ret
pop
ret
pusha
ret
fs
push
ret
jo
je
je
je
js
je
jl
je
add
out
test
je
mov
je
mov
je
nop
ret
xchg
ret
cwde
ret
pushf
ret
mov
ret
test
je
lods
ret
mov
je
mov
je
mov
ret
rol
out
(bad)
enter
int3
ret
rol
je
aam
je
fadd
je
fadd
je
loopne
je
in
je
call
ret
lock
hlt
ret
clc
ret
cld
ret
add
je
add
je
or
je
or
je
adc
je
adc
je
sbb
je
sbb
je
and
je
and
je
sub
outs
out
xor
ret
je
xor
je
cmp
je
cmp
je
inc
ret
je
inc
ret
je
dec
ret
je
dec
ret
je
push
ret
je
push
ret
je
pop
ret
je
pop
ret
je
pusha
ret
je
fs
je
push
ret
je
jo
je
je
je
js
je
jl
je
add
out
test
je
mov
je
mov
je
nop
ret
je
xchg
ret
je
cwde
ret
je
pushf
ret
je
mov
ret
je
test
je
lods
ret
je
mov
outs
out
mov
ret
je
mov
ret
je
(bad)
enter
int3
ret
je
rol
je
aam
je
fadd
je
fadd
je
loopne
je
in
je
call
ret
je
lock
je
hlt
ret
je
clc
ret
je
cld
ret
je
add
je
add
je
or
je
or
je
adc
je
adc
je
sbb
je
sbb
je
and
je
and
je
sub
je
sub
je
xor
je
xor
je
cmp
out
cmp
je
inc
shl
push
call
hlt
stos
aas
or
pop
mov
sbb
push
out
lahf
aas
dec
xor
rcl
std
inc
sti
xchg
mov
hlt
jle
shl
push
(bad)
jg
dec
sbb
fldenv
out
int3
mov
mov
mov
dec
jnp
aas
or
sbb
lods
nop
pusha
mov
jl
mov
xchg
lea
lds
fxtract
jle
add
mov
mov
aas
push
adc
xor
out
scas
addps
push
sbb
jle
shl
imul
pop
jmp
aad
inc
adc
add
div
aas
or
in
shl
(bad)
xor
mov
test
or
jp
stos
adc
jle
adc
adc
outs
rol
aam
hlt
loope
pop
loope
cli
outs
mov
leave
mov
jne
lods
psubusw
mov
out
inc
sbb
div
mov
dec
xor
fwait
(bad)
mov
cmc
mov
ds
xor
fcomi
cmc
js
fs
dec
push
call
or
or
jne
(bad)
shl
dec
push
cli
hlt
and
mov
pop
das
mov
mov
je
push
outs
scas
adc
icebp
mov
xchg
xlat
mov
inc
dec
pop
xlat
out
push
push
addr16
fist
and
sbb
and
out
pop
aam
mov
pop
adc
popf
adc
mov
aas
sbb
and
nop
shl
add
xchg
and
aad
loope
xchg
push
and
nop
push
in
aad
bound
xchg
arpl
rcl
mov
xchg
adc
sub
aam
jno
xchg
mov
jnp
adc
loop
pop
(bad)
and
xchg
adc
or
nop
popa
mov
push
in
xchg
shl
pop
aam
out
push
push
addr16
push
adc
and
nop
adc
lods
adc
aad
xor
adc
mov
push
xchg
out
xchg
xchg
addr16
xchg
push
loopne
aam
mov
adc
and
xchg
aad
daa
aam
arpl
rcl
lods
push
adc
jae
push
loope
rcl
movs
mov
xchg
adc
loope
push
(bad)
rol
neg
adc
fnsave
ret
mov
and
mov
pop
push
cmp
mov
xchg
inc
scas
cli
pop
out
and
into
pushf
fiadd
dec
sub
popa
jb
mov
fcmove
idiv
repnz
push
push
call
xor
movs
lea
add
iret
outs
or
fs
ins
sub
xchg
or
push
or
inc
mov
lock
out
dec
jb
mov
push
pop
arpl
test
jmp
add
dec
data16
cmp
inc
xor
aas
mov
mov
inc
push
sti
pop
rol
dec
jo
repnz
cli
mov
into
sahf
repnz
mov
xor
je
mov
and
add
test
mov
cmp
cmp
and
dec
xchg
cmps
rol
inc
or
xchg
push
iret
sbb
ret
inc
jb
scas
jo
xor
cld
retf
bound
call
popf
vcvttss2si
rol
sub
(bad)
mov
aas
cmps
lea
repnz
ds
cmp
push
mov
sub
int3
pushf
mov
enter
in
add
inc
test
bound
test
jo
inc
aas
and
test
fdivr
adc
mov
xor
int
fldenv
outs
cmp
les
mov
rcr
es
ins
pushf
cmp
pop
cmp
int3
ins
pop
cmp
aam
pop
cmp
fsubr
cmp
in
pop
cmp
in
ins
pop
cmp
hlt
ins
pop
cmp
cld
ins
pop
cmp
add
pop
cmp
or
pop
cmp
adc
pop
cmp
sbb
pop
cmp
and
pop
cmp
and
loope
jo
pusha
adc
ins
pop
cmp
cmp
cmp
inc
ins
pop
cmp
dec
ins
pop
cmp
push
ins
pop
cmp
pop
ins
pop
cmp
pusha
ins
pop
cmp
push
ins
pop
mov
gs
inc
jge
lods
inc
jge
in
inc
cmp
xchg
in
inc
std
mov
nop
sub
cmp
sub
jge
lods
inc
jge
in
inc
cmp
mov
inc
jge
lods
inc
mov
lods
ins
inc
jge
sub
jge
sub
mov
shr
mov
enter
int3
ins
pop
std
fsubr
cmp
(bad)
in
inc
jge
lods
inc
jge
in
inc
cmp
out
in
inc
std
in
ins
pop
std
cld
ins
dec
cmp
sbb
sub
cmp
adc
inc
mov
add
pop
sub
jge
sub
mov
cmp
inc
mov
xor
inc
mov
xor
and
inc
jge
ins
inc
cmp
pop
sub
mov
push
in
inc
jge
ins
pop
cmp
inc
sub
jge
sub
mov
push
sub
mov
ins
ins
inc
jge
lods
inc
std
jl
pop
cmp
lahf
sub
fwait
sub
nop
imul
sub
jmp
cmp
sub
cwde
imul
sub
mov
sub
mov
inc
std
lods
jmp
jge
imul
imul
inc
jge
imul
imul
jmp
jge
imul
dec
cmp
(bad)
jmp
jge
stos
inc
jge
jmp
cmp
imul
inc
std
icebp
jmp
jge
imul
inc
std
loopne
inc
cmp
sbb
inc
mov
adc
inc
mov
push
stos
inc
cmp
add
jmp
jge
sub
cmp
inc
jge
imul
dec
cmp
daa
sub
and
inc
std
pop
sub
pop
jmp
jge
imul
inc
jge
stos
inc
jge
imul
sub
inc
stos
inc
mov
pusha
imul
gs
ins
stos
inc
jge
sub
sub
inc
jmp
cmp
fwait
jmp
nop
push
jge
push
cmp
xchg
gs
mov
push
cmp
mov
pop
cmp
mov
inc
cmp
aaa
ja
daa
ds
cmp
xor
pop
sbb
out
ds
sub
xchg
and
or
mov
fstp
test
sbb
cmp
enter
sub
cmp
stos
dec
mov
jmp
and
or
mov
mov
aaa
fnsave
xchg
stos
cmps
popf
jbe
or
and
out
ret
push
mov
jo
sub
jmp
mov
cdq
ret
fdiv
loope
mov
push
cmp
cmp
xchg
ret
je
jno
sbb
push
push
mov
stc
popa
test
inc
jns
xchg
imul
cmp
ja
and
lahf
jo
mov
pushf
jae
sub
pop
outs
cmp
mov
fdiv
pop
je
push
scas
imul
neg
xchg
ret
je
fnstsw
mov
imul
int
sbb
(bad)
cmp
in
inc
sub
mov
xor
test
or
and
call
pop
outs
cmp
push
js
or
daa
or
xchg
jae
je
or
enter
fucom
cmp
call
or
xor
mov
mov
xchg
or
and
test
sbb
sub
je
pop
imul
ds
or
inc
jns
call
or
pusha
push
ins
std
js
fsub
je
jg
ret
jl
xor
push
jne
jo
fadd
dec
pop
push
sub
sbb
add
mov
daa
(bad)
fadd
pusha
xlat
push
sub
xlat
in
cmps
ret
(bad)
daa
add
or
sbb
dec
jge
and
jbe
ja
jno
and
jo
enter
mov
jl
fsubr
scas
enter
gs
inc
lds
jno
fild
sub
call
and
push
xchg
ins
cmp
sbb
pop
pop
in
imul
xchg
and
test
and
mov
popf
jne
sbb
stc
enter
sub
mov
xchg
ja
in
leave
pop
out
call
test
shl
and
push
ins
cmp
dec
sub
and
fadd
dec
xchg
mov
jo
addr16
js
repnz
pop
cmp
popa
js
cwde
mov
in
xchg
pushf
test
int3
push
xchg
mov
hlt
mov
cmp
adc
movs
ins
jp
mov
(bad)
and
add
xchg
ret
repnz
test
addr16
cwde
js
mov
rol
sub
(bad)
and
test
cmp
sti
data16
pop
push
push
or
std
hlt
sub
(bad)
and
addr16
cmp
shl
sbb
mov
int
daa
repz
int3
adc
gs
add
fsub
sbb
inc
jge
addr16
popf
push
cmp
in
or
xor
int
daa
iret
mov
int3
daa
ins
or
std
push
mov
and
addr16
repnz
addr16
mov
or
inc
addr16
pop
int
daa
fwait
mov
int3
jnp
or
cmp
call
repnz
ins
mov
es
push
mov
ret
cmp
loopne
or
les
adc
(bad)
imul
bound
mov
es
daa
cmp
fidivr
push
in
mov
mov
aas
dec
shl
(bad)
dec
aad
dec
or
lea
loop
mov
and
xchg
loop
retf
out
push
out
dec
push
cmps
jmp
push
out
dec
push
loop
dec
xchg
and
push
xchg
es
leave
push
loopne
int3
xchg
and
dec
push
mov
push
or
loop
or
addr16
dec
push
fisttp
movs
pop
mov
pusha
popa
dec
push
and
dec
adc
scas
push
push
sub
xchg
loopne
or
sti
dec
xchg
and
xchg
bound
aam
or
mov
dec
push
fs
lea
xchg
or
mov
loope
adc
pusha
mov
sub
or
xchg
es
adc
jp
adc
push
and
dec
xlat
jecxz
or
and
adc
loopne
or
and
dec
push
es
push
mov
sub
push
mov
ja
push
arpl
adc
add
shl
dec
retf
mov
push
movs
xchg
enter
dec
shl
fwait
dec
push
and
mov
and
aad
jp
inc
addr16
inc
jb
fild
data16
mov
cdq
cmps
push
les
cmp
cdq
cmp
sbb
fstp
mov
adc
jne
cmp
and
jl
clc
jns
mov
adc
inc
xor
out
xor
gs
or
cwde
cmps
sahf
ds
lahf
add
(bad)
xchg
sbb
loope
sbb
xchg
lods
jmp
mov
xor
movs
movs
mov
pop
inc
or
int3
cs
sbb
test
adc
fisub
xchg
fcomp
loopne
jb
fiadd
or
inc
repnz
loopne
aaa
movs
fisttp
sub
push
and
add
stc
dec
fucom
mov
or
sbb
sbb
dec
loopne
cmp
mov
xor
xchg
and
or
sub
sub
scas
or
mov
mov
mov
(bad)
sbb
nop
loopne
test
call
fs
lea
mov
dec
imul
jg
scas
call
les
inc
xchg
pop
stos
cmp
pop
and
jns
rcl
int
mov
imul
call
xchg
pop
mov
mov
lahf
test
js
sahf
test
lahf
call
jle
sub
push
pop
test
js
xchg
int3
jnp
sahf
enter
cmp
into
sbb
(bad)
mov
jae
test
jg
sahf
ins
gs
call
jle
icebp
mov
fild
xor
xor
mov
jl
jg
lahf
sbb
mov
jl
pop
hlt
bound
pop
popa
mov
cmc
push
ds
leave
or
inc
les
fimul
push
fiadd
mov
jnp
(bad)
pop
(bad)
mov
ror
xor
pop
fild
inc
popa
pop
lds
scas
in
movs
push
xchg
and
xchg
daa
stos
dec
pop
fs
mov
and
dec
aad
jg
xlat
and
leave
adc
mov
mov
mov
xchg
mov
pop
enter
leave
push
cmps
popa
rcpps
int
mov
jbe
push
data16
adc
(bad)
xchg
and
retf
inc
or
jge
dec
or
out
mov
loope
int3
xchg
daa
sbb
aad
popa
mov
es
adc
int3
xchg
and
push
daa
mov
adc
data16
push
in
mov
in
iret
push
arpl
dec
adc
int3
int
pusha
ror
push
and
or
pop
dec
shl
cmps
push
push
movs
mov
into
xchg
and
xorps
iret
adc
and
(bad)
adc
mov
dec
dec
xchg
mov
push
mov
addr16
dec
adc
int3
aad
bound
outs
(bad)
std
and
cld
push
cmp
test
sbb
jb
lods
inc
repz
jo
repnz
bound
push
cld
fadd
sub
jp
and
daa
cs
mov
fcomp
mov
hlt
push
pop
ins
sti
pop
ret
stos
xor
fadd
push
imul
data16
jno
dec
pop
and
(bad)
pushf
and
inc
xor
or
mov
push
xor
jp
adc
inc
mov
in
mov
and
(bad)
clc
xchg
lea
push
push
lahf
push
jb
lahf
cdq
adc
(bad)
jecxz
in
retf
inc
pop
data16
mov
dec
dec
and
fimul
add
or
das
test
hlt
dec
cmp
mov
mov
inc
es
aaa
dec
xchg
pushf
pop
pop
push
aad
fild
pushf
cmp
jae
push
nop
pop
mov
in
mov
lods
out
or
test
ja
jns
pusha
add
mov
jo
(bad)
popf
push
inc
jb
inc
and
out
fadd
mov
sub
nop
and
test
fisubr
pop
push
ret
retf
or
mov
gs
call
popf
sbb
gs
movs
xchg
pop
pusha
test
cmc
push
stc
test
mov
adc
xchg
jecxz
pushf
mov
pop
(bad)
(bad)
and
enter
or
xchg
xchg
cdq
push
out
jb
xor
hlt
(bad)
psubb
lods
cld
jno
lahf
shr
imul
sub
into
popa
add
inc
rcr
fwait
dec
adc
iret
in
push
jmp
cdq
hlt
fistp
xor
int3
pop
aaa
jecxz
dec
mov
hlt
iret
fs
icebp
sahf
js
xchg
fidivr
out
dec
test
out
dec
dec
mov
jbe
dec
or
jno
in
sahf
sbb
xchg
icebp
fsubr
dec
xor
out
test
pop
hlt
mov
mov
add
loope
into
ror
adc
lahf
fild
ret
pop
not
lahf
pop
cmp
mov
mov
test
popa
adc
and
push
cli
fild
in
or
loopne
push
data16
and
mov
and
push
push
movs
mov
xchg
addr16
mov
add
xchg
cmps
enter
int
adc
xchg
test
and
inc
xchg
loopne
adc
push
bound
push
jecxz
adc
cmps
xor
aad
cmp
mov
inc
add
and
inc
pop
and
add
shl
(bad)
test
xchg
inc
xchg
out
test
out
shl
test
out
add
pusha
lods
add
loopne
rcl
jns
shl
pop
push
out
inc
adc
inc
test
mov
pop
inc
adc
adc
popa
fadd
push
and
les
in
add
out
inc
push
mov
outs
inc
xchg
repnz
inc
push
jecxz
adc
xchg
shl
inc
inc
push
movs
mov
dec
adc
loop
test
and
add
cmps
add
loope
add
xchg
loop
jmp
test
ins
mov
add
push
or
xchg
sbb
ja
sbb
(bad)
arpl
popa
push
jb
rol
mov
rol
and
xchg
adc
cmp
(bad)
jae
adc
fs
mov
push
int3
ja
pop
xor
aam
or
loopne
xor
adc
add
aad
xchg
rcl
call
movs
and
in
test
jecxz
add
loopne
ret
push
fs
add
push
ret
add
adc
inc
push
es
ret
nop
popa
sbb
adc
pop
add
out
push
mov
out
add
mov
test
cmc
adc
adc
inc
inc
push
addr16
les
and
adc
push
ret
sbb
xchg
mov
jecxz
push
loopne
inc
adc
daa
stos
adc
repz
aad
mov
test
add
xchg
pusha
iret
rcl
pextrw
push
mov
push
rcl
pop
xchg
cmps
pop
xchg
loopne
add
sub
push
and
push
push
arpl
adc
inc
xchg
jecxz
(bad)
adc
mov
push
mov
xchg
adc
fwait
icebp
cmp
or
ret
push
jmp
in
xchg
pop
xor
ret
push
inc
jb
rol
jb
rol
arpl
inc
jb
rol
mov
xchg
sar
mov
jb
push
add
inc
jbe
mov
push
jae
adc
ins
xchg
cmps
xor
aad
jne
push
mov
mov
adc
pusha
dec
xchg
movs
nop
adc
push
cmps
sbb
fs
adc
and
push
cmps
adc
push
push
out
adc
aaa
adc
add
and
inc
xchg
and
xchg
cmps
mov
and
rcl
push
adc
cmps
lahf
adc
and
mov
outs
inc
adc
out
(bad)
xchg
es
push
arpl
ret
shl
mov
test
(bad)
mov
jecxz
rcl
mov
xchg
mov
sbb
xchg
and
(bad)
mov
push
adc
push
adc
and
adc
cmp
push
and
inc
push
daa
xchg
aam
leave
add
dec
ret
push
inc
push
daa
aam
(bad)
arpl
xchg
jcxz
adc
jecxz
ret
stos
push
xchg
addr16
adc
je
push
and
pop
xchg
popa
inc
rcl
add
and
xchg
mov
push
(bad)
xchg
and
inc
shl
fiadd
push
loope
xchg
and
or
dec
dec
fs
int
aas
stos
and
pop
pop
arpl
xchg
adc
pop
jb
(bad)
fadd
push
aad
jb
aad
adc
jne
jb
dec
inc
xor
inc
jb
xlat
xchg
shl
cmp
inc
push
lods
lea
xchg
sahf
push
jne
enter
repz
inc
stos
test
push
lea
(bad)
lods
and
es
adc
jo
outs
push
dec
xchg
sahf
pusha
mov
lahf
or
jnp
aad
jae
in
mov
xlat
pop
stos
addr16
adc
les
xchg
aad
jb
xlat
xchg
call
arpl
inc
jb
aad
jb
xchg
xchg
shl
xchg
daa
jb
sub
cmps
sub
push
inc
jbe
and
jae
test
and
adc
ret
les
bound
add
mov
adc
xchg
daa
sbb
adc
sahf
test
loopne
adc
loopne
adc
sub
loopne
(bad)
push
xor
(bad)
and
les
aas
adc
out
pop
aad
mov
mov
xchg
(bad)
aam
rol
push
es
(bad)
shl
sbb
push
and
inc
shl
inc
push
arpl
adc
loop
inc
xchg
and
and
add
and
xchg
mov
or
and
rcl
adc
adc
and
push
daa
and
add
pusha
jbe
push
and
test
mov
mov
xchg
and
inc
shl
into
inc
xchg
cmps
dec
(bad)
xchg
rol
push
cmps
adc
adc
popf
inc
aad
loope
in
mov
pop
jb
not
jnp
dec
jb
aam
jb
fld
scas
adc
jb
into
push
outs
(bad)
outs
loopne
and
int
mul
jmp
xor
or
neg
jnp
aam
jae
in
mov
(bad)
pop
stos
jmp
xchg
cs
ja
or
shl
pop
rol
lds
xchg
xchg
adc
shl
(bad)
shl
inc
xchg
out
shl
mov
adc
ins
(bad)
shl
add
and
adc
cmp
(bad)
xchg
and
inc
push
mov
int3
add
push
and
adc
fwait
lds
pushf
add
adc
jecxz
xchg
jecxz
adc
lods
push
pop
mov
mov
push
mov
cli
les
es
xchg
arpl
adc
adc
xchg
cmps
xchg
add
out
xchg
fs
push
and
xchg
out
adc
stos
add
movs
sub
inc
adc
repnz
nop
arpl
push
popa
mov
add
loop
inc
push
and
(bad)
pop
movs
push
add
bound
inc
xchg
and
shl
inc
push
addr16
(bad)
pop
and
popa
xor
aam
cmp
push
cmps
add
arpl
(bad)
lahf
push
(bad)
xchg
or
push
jnp
(bad)
push
lea
mov
adc
(bad)
xchg
xor
cmp
sbb
outs
aad
jns
adc
lods
sub
outs
movs
jmp
(bad)
ja
dec
cdq
adc
xchg
fwait
shr
mov
rcl
mov
fadd
inc
xor
movs
adc
mov
push
in
lds
nop
xchg
shl
sub
fmulp
je
(bad)
aad
or
adc
aam
imul
ja
outs
ins
inc
xor
xlat
inc
stos
mov
mov
inc
xchg
aad
in
inc
xchg
mov
rol
mov
or
xchg
arpl
inc
xchg
mov
pop
ret
push
mov
gs
call
adc
xor
push
inc
pusha
mov
std
aad
inc
cli
shl
mov
shl
push
stc
adc
sahf
js
and
mov
xchg
arpl
aad
jmp
push
in
aas
xchg
mov
repz
shl
jg
push
cmps
(bad)
mov
push
and
cmp
arpl
mov
shl
sti
xchg
out
cmp
push
mov
sub
(bad)
(bad)
idiv
(bad)
mov
mov
jp
addr16
mov
adc
iret
mov
adc
adc
aad
pop
jp
addr16
shl
loope
shl
loop
push
out
cmp
out
sti
push
mov
idiv
out
stc
xchg
loopne
mov
xchg
loope
clc
shl
mov
xchg
cmps
loopne
cmps
les
inc
xor
dec
inc
jb
icebp
jl
sbb
cmp
jg
lahf
or
std
stc
push
out
adc
mov
ja
xor
and
push
dec
pop
arpl
inc
mov
sub
mov
(bad)
push
and
test
xor
adc
add
test
jo
call
adc
xor
xlat
pusha
cmp
push
mov
inc
cli
push
test
jecxz
cmp
cmps
(bad)
(bad)
mov
nop
mov
shl
daa
cld
push
out
cmp
mov
xor
xchg
and
cld
adc
clc
jns
mov
sar
mov
mov
push
mov
pop
jge
loope
std
shl
pusha
jnp
mov
scas
mov
aam
jo
push
mov
cli
mov
push
out
clc
push
and
mov
push
out
js
jecxz
mov
shl
pusha
std
aam
loopne
xchg
pusha
imul
mov
xor
xchg
and
mov
adc
loopne
jg
and
shl
mov
(bad)
daa
adc
xlat
and
jg
and
cli
xchg
loopne
mov
mov
jmp
jo
push
jns
inc
outs
mov
imul
or
sti
push
out
pop
xchg
sbb
out
or
xor
(bad)
arpl
jmp
jo
cli
inc
mov
jmp
jb
jmp
ret
mov
inc
jb
scas
xchg
rol
adc
jbe
jb
data16
es
jb
cmp
ds
and
aas
push
mov
int
push
arpl
cmp
(bad)
(bad)
cmp
mov
sbb
mov
pop
and
cmp
and
mov
adc
jp
push
out
mov
aad
inc
mov
aam
(bad)
aam
xchg
sti
push
jecxz
ds
data16
push
popa
pop
mov
xchg
cmps
call
daa
sub
adc
mov
adc
loope
clc
xchg
and
xlat
cmp
clc
push
addr16
jnp
mov
xchg
and
aam
push
jl
popa
pop
clc
shl
cmp
jecxz
adc
pusha
cmp
mov
adc
repz
xchg
out
mov
xchg
out
mov
xchg
mov
nop
mov
adc
pop
cmp
movs
in
adc
cmp
and
xchg
and
call
xor
in
pop
adc
push
jl
adc
or
test
push
jmp
pop
scas
fs
sti
les
int
pop
arpl
sti
inc
mov
sub
sbb
inc
mov
aam
and
adc
jo
jmp
test
shl
or
xchg
loopne
jg
movs
adc
daa
lahf
sti
aad
fistp
and
sti
xchg
loopne
mov
adc
icebp
stc
shl
mov
mov
shl
add
sti
xlat
cmps
mov
daa
push
js
and
adc
data16
jl
cmps
out
push
arpl
mov
(bad)
es
cmp
and
mov
push
and
aam
jnp
nop
pusha
add
aam
push
sti
aam
(bad)
mov
xchg
mov
pushf
cmp
addr16
clc
adc
cmp
arpl
cmp
adc
sub
ss
es
push
arpl
shl
cmp
add
push
and
cmp
daa
mov
and
xchg
cmps
push
jg
daa
fidivr
and
jg
mov
loopne
xchg
pusha
jmp
pop
cmps
sub
xchg
data16
push
daa
mov
std
shl
(bad)
stc
nop
pusha
inc
jg
and
pop
mov
xchg
jg
mov
xor
mov
jo
cmc
jl
sbb
cmp
jg
lahf
or
and
ins
lods
sbb
pusha
cli
(bad)
cmp
dec
pop
scas
je
jns
or
pop
arpl
in
inc
jno
std
inc
mov
in
inc
jb
in
xchg
xor
jb
in
(bad)
jae
das
data16
mov
push
dec
mov
in
inc
or
mov
adc
mov
repnz
cmp
mov
adc
push
out
jg
and
xchg
es
adc
idiv
and
mov
push
mov
cmp
es
mov
xchg
popa
xlat
jl
loope
mov
push
daa
fnstsw
shl
jecxz
push
addr16
(bad)
mov
scas
cmp
mov
adc
js
push
and
push
cmps
push
jl
pusha
add
adc
clc
push
mov
push
jle
loopne
cld
push
sbb
aad
mov
mov
push
cmps
das
call
mov
aaa
std
push
loopne
js
out
clc
push
fs
pusha
test
out
jp
mov
sar
push
pusha
xchg
cmp
call
cli
adc
jecxz
mov
push
mov
test
mov
cmp
lea
sub
jns
sbb
inc
dec
inc
aaa
fs
lock
aas
push
sbb
pop
arpl
clc
inc
or
lods
movs
adc
xchg
rcr
inc
sub
sub
jb
gs
push
lea
cmps
out
push
in
ds
fs
mov
nop
out
cmp
and
mov
push
cmps
push
shl
mov
shl
cmp
push
jecxz
mov
xchg
cmps
retf
cmp
bound
shl
adc
mov
mov
cli
adc
push
jge
jecxz
aas
pop
loop
std
push
cmp
adc
(bad)
jp
mov
retf
cmps
adc
and
xchg
and
call
in
mov
adc
push
mov
mov
adc
mov
jl
xchg
mov
cmp
jecxz
cli
push
and
jl
arpl
cli
adc
pop
mov
shl
movs
jge
and
push
out
call
idiv
xor
js
xchg
jecxz
aas
push
mov
add
cmp
cmps
mov
push
(bad)
sbb
adc
pop
jle
in
adc
gs
jmp
mov
mov
outs
add
fs
imul
gs
add
test
(bad)
scas
or
out
(bad)
xor
pop
das
ret
dec
cmp
ja
mov
push
arpl
fild
xchg
nop
pop
mov
add
in
jl
daa
jns
aad
mov
mov
loopne
mov
in
xor
dec
hlt
shl
adc
bound
arpl
mov
cmps
jecxz
(bad)
cmps
loop
adc
lods
xor
es
xor
es
push
daa
jae
(bad)
and
mov
es
lock
loope
mov
cmps
dec
ja
dec
lock
xlat
xor
(bad)
aam
push
loope
mov
cmps
sahf
jo
in
hlt
push
and
xlat
out
je
and
push
mov
mov
adc
cmp
adc
add
shl
leave
je
daa
int3
jo
movs
adc
adc
xchg
repnz
mov
daa
repz
out
push
daa
jmp
and
mov
mov
mov
mov
out
xor
out
repz
es
xor
mov
push
xor
jecxz
repz
fidiv
fnsave
aad
addr16
scas
lock
and
call
stos
adc
test
add
loopne
stos
mov
jns
imul
imul
mov
rol
adc
or
rol
cmc
xlat
loop
jno
pusha
gs
bound
push
es
out
mov
mov
sti
jne
popa
inc
jno
bound
jbe
and
jbe
and
jo
fs
repnz
out
jno
and
mov
es
push
and
mov
out
mov
and
mov
daa
repz
addr16
lock
ret
cmps
inc
mov
mov
dec
xor
xchg
jb
popa
push
icebp
nop
es
repz
daa
sbb
and
je
and
repz
jecxz
xor
popa
div
fs
xchg
and
shl
mov
mov
loopne
je
cmps
leave
mov
jecxz
xor
jae
loopne
mov
cmps
(bad)
mov
cmps
xor
mov
jmp
xchg
pusha
ins
je
es
push
and
not
daa
cmp
loope
xor
pusha
push
jno
daa
add
es
jl
cmc
sbb
daa
xchg
push
idiv
sbb
add
in
jp
or
sbb
ret
cmp
push
jge
pop
not
mov
mov
ja
daa
mov
mov
movs
lds
adc
mov
push
in
ja
and
xor
push
ja
mov
sbb
(bad)
out
mov
out
xor
cmps
jmp
loope
xor
out
mov
popa
cmp
adc
jae
addr16
lock
and
jo
bound
xchg
addr16
jbe
fdiv
xchg
bound
mov
popa
cs
and
repz
mov
cmp
adc
mov
inc
xor
and
xlat
and
not
(bad)
shl
xlat
mov
popf
aaa
xchg
and
xor
and
ss
and
mov
daa
lods
jae
and
aaa
push
in
mov
cmps
mov
icebp
pop
and
shl
push
aaa
xlat
jecxz
xor
out
xor
data16
jb
cmps
fdivp
push
cmps
fwait
mov
arpl
repz
out
repz
sub
pop
and
je
xor
loopne
jae
and
mov
loop
lock
daa
inc
jbe
cmps
push
xor
data16
adc
not
jb
and
not
xor
mov
addr16
push
aas
adc
inc
jb
inc
inc
jb
mov
adc
out
lock
arpl
xor
daa
or
push
daa
adc
adc
push
not
sbb
jecxz
not
ja
and
repz
arpl
nop
loop
aaa
xchg
mov
hlt
jbe
loopne
xor
es
adc
xor
cmps
or
adc
adc
xchg
xchg
xor
popa
sbb
push
fdiv
pop
out
icebp
adc
repz
lods
ss
div
out
mov
loopne
mov
loopne
mov
and
not
cmps
inc
mov
mov
mov
push
xchg
lock
push
jae
movs
pop
je
cmps
pop
ja
movs
movs
xor
adc
outs
xor
loope
xor
out
jne
addr16
jno
es
not
inc
hlt
adc
mov
shl
push
cmps
sbb
adc
data16
data16
xchg
and
mov
loop
je
and
repz
cmps
ss
daa
jns
adc
mov
je
xor
retf
and
not
daa
adc
mov
movs
(bad)
xchg
out
je
scas
mov
push
aas
mov
inc
jb
inc
inc
jb
xor
stos
cld
mov
cmps
test
shl
not
and
mov
out
mov
loop
not
and
aaa
aam
pop
jbe
loope
mov
cmps
mov
ss
mov
mov
xchg
and
jbe
loopne
xor
jge
xlat
bound
xor
and
mov
es
ja
out
jo
data16
shl
sbb
adc
mov
mov
arpl
adc
and
and
shl
clc
mov
mov
ret
not
inc
mov
mov
dec
jne
pusha
push
xor
(bad)
not
out
xor
pop
xor
bound
xor
sub
xchg
and
jb
out
jno
and
ja
es
not
data16
push
data16
mov
mov
nop
mov
and
xor
and
mov
and
mov
cmps
ins
not
arpl
jbe
daa
aaa
not
stc
xor
adc
shl
popa
(bad)
xor
cmps
sysenter
xchg
mov
xchg
jb
and
xor
shl
sbb
mov
arpl
xor
and
aaa
xchg
es
and
(bad)
fild
data16
out
adc
shl
daa
push
push
out
cmp
fimul
xor
in
and
push
stos
sbb
or
mov
cmps
push
dec
jp
jp
jmp
add
rcr
pop
test
xchg
ret
bnd
mov
sbb
js
xchg
xchg
test
xchg
fwait
dec
jb
jl
jbe
inc
pop
and
pop
repnz
leave
push
mov
retf
mov
xchg
out
push
das
callw
mov
pushf
pushf
loop
xchg
mov
push
(bad)
out
push
sbb
test
sub
xchg
pop
popf
mov
into
rcr
out
push
mov
inc
adc
fld
mov
les
and
sub
(bad)
or
sub
cmp
push
ss
or
into
daa
mov
rcl
cmp
xchg
mov
sbb
fimul
je
cmps
sbb
pushf
rcl
dec
mov
mov
int3
fsubr
dec
ss
sub
ds
dec
icebp
sbb
mov
mov
dec
arpl
ror
lahf
iret
(bad)
dec
jne
(bad)
jmp
mov
and
movs
xor
call
sub
nop
scas
es
imul
pop
repz
ds
sub
sbb
or
les
rol
das
repnz
and
jmp
mov
jmp
mov
push
mov
stc
(bad)
rcr
aad
mov
xlat
mov
sbb
aad
mov
stc
aas
ds
or
jle
aad
mov
in
mov
outs
(bad)
jmp
push
jle
mov
sbb
outs
dec
and
ds
pop
out
rcr
cmp
into
out
movs
loop
inc
jb
out
jb
out
jb
out
jb
stc
inc
jb
stc
inc
jb
stc
inc
jb
stc
inc
jb
stc
inc
jb
stc
inc
jb
stc
inc
jb
stc
inc
jb
stc
inc
jb
stc
inc
jb
sub
stos
push
push
addr16
push
and
lods
xchg
daa
inc
jmp
into
stos
xchg
and
ins
xchg
and
lods
adc
test
push
cmps
call
push
xor
mov
shl
cmp
stos
aam
test
xchg
mov
dec
test
push
out
sub
sbb
xchg
addr16
test
xchg
mov
test
sub
cmps
icebp
push
loop
sub
xchg
and
adc
jecxz
scas
xchg
out
stos
xchg
mov
push
jmp
sahf
test
mov
cmps
sub
out
sub
and
sub
jb
adc
cmp
cli
sub
add
adc
les
push
cmps
retf
test
adc
cs
and
adc
sub
cmps
dec
fwait
push
dec
cmps
loop
dec
ss
push
and
jl
retf
pop
cmp
mov
ror
cmp
push
in
dec
xchg
jmp
add
clc
push
jb
das
mov
aam
shl
stos
(bad)
loop
jmp
xlat
cmps
loop
pop
fs
cmps
repz
sti
sub
and
sub
out
out
pop
fs
sub
mov
adc
push
es
scas
adc
loope
xchg
and
jmp
and
es
push
movs
imul
push
in
out
push
cmps
add
loop
ins
adc
push
adc
aam
nop
sub
and
lods
adc
mov
ins
adc
push
xchg
es
sub
loopne
sub
es
(bad)
daa
cmp
adc
shl
sub
int3
scas
shl
cvtpi2ps
push
test
cmps
pop
sub
xlat
mov
loopne
shl
push
aad
ja
push
out
scas
pop
and
cs
add
xchg
mov
or
push
fs
scas
xchg
adc
xchg
mov
jb
jns
jle
push
jg
(bad)
outs
jb
test
out
test
add
outs
push
arpl
push
and
das
shl
jmp
shl
sub
(bad)
push
push
pusha
fsubr
and
sub
and
shl
outs
shl
sub
data16
adc
fs
sub
pop
sub
and
sub
movd
and
shl
shr
adc
shr
push
out
imul
mov
and
push
and
aad
lods
jmp
shl
xor
jmp
aad
sub
add
xchg
mov
push
stos
aad
adc
outs
adc
pop
lods
push
mov
and
xchg
out
sub
out
call
adc
aaa
out
xchg
out
sub
jmp
pop
in
stos
xchg
loope
sub
and
and
push
adc
pop
outs
adc
lods
xchg
jecxz
scas
push
cmps
lods
imul
test
and
pop
cmps
xor
aad
js
pop
mov
inc
scas
xlat
and
outs
xchg
and
imul
packssdw
pusha
pop
stos
aad
pop
test
and
out
aad
mov
jmp
lods
cs
out
scas
push
movs
xlat
jnp
loope
mov
mov
bound
add
pop
imul
imul
test
push
and
scas
push
cmps
sbb
and
test
adc
das
scas
adc
in
call
adc
mov
test
adc
xchg
xchg
pusha
dec
test
(bad)
mov
xchg
lods
shl
pop
in
xchg
daa
pop
scas
xchg
jcxz
xchg
loope
sub
and
call
pop
and
sub
xlat
loop
sub
out
lods
aam
ret
or
adc
sub
shl
cs
loope
test
jecxz
call
shl
outs
scas
aad
outs
scas
xchg
loope
lods
xchg
jecxz
lods
xchg
cmps
cmp
cmp
out
out
xchg
cmps
test
push
es
arpl
in
xchg
pusha
push
lods
nop
and
shl
pop
outs
shl
data16
adc
cs
out
lods
adc
jmp
movs
outs
shl
mov
test
shl
or
dec
mov
loope
in
xchg
lock
mov
std
jl
add
shl
lahf
or
stos
ins
push
movs
lods
ins
shl
jb
push
and
jmp
pusha
cld
out
xchg
out
scas
adc
shl
dec
ins
push
movs
dec
test
shr
xchg
out
call
aam
sbb
and
in
shl
and
in
xchg
loop
outs
xchg
es
xlat
es
shl
cmp
adc
jnp
nop
and
push
sub
and
out
push
out
jmp
push
jecxz
ins
adc
popf
das
push
mov
out
aad
ins
out
pop
daa
in
test
pop
mov
stc
scas
push
es
imul
loopne
out
xchg
and
xchg
and
push
mov
pop
in
xchg
pusha
pop
lods
xchg
pusha
in
xchg
daa
jecxz
push
loope
out
push
in
in
push
popa
jbe
aam
mov
xchg
and
cs
std
push
jecxz
das
push
movs
sub
and
out
adc
cmp
outs
jo
add
ret
in
sub
(bad)
jmp
pusha
jno
shl
in
push
loopne
test
pusha
sub
loop
lods
xchg
out
sub
popa
or
sub
addr16
imul
pop
ins
xlat
es
xchg
data16
out
adc
in
push
out
push
out
lods
push
fs
aam
mov
sub
es
jmp
loopne
outs
adc
or
xlat
popa
push
ins
adc
push
push
loope
out
adc
fld
out
out
push
cmps
in
push
movs
out
push
and
adc
xor
xchg
es
adc
mov
out
adc
add
push
or
daa
int
push
mov
xchg
lods
push
and
sub
aad
mov
lods
xchg
and
adc
jmp
xchg
and
lods
push
mov
sti
scas
xchg
popa
add
shl
dec
push
popa
lea
shl
cs
loop
imul
imul
aam
cmps
cmp
(bad)
mov
inc
idiv
(bad)
(bad)
icebp
jge
adc
pop
outs
xor
(bad)
mov
inc
fmul
(bad)
mov
inc
adc
pushf
pop
out
call
bound
hlt
inc
(bad)
mov
popa
mov
pushf
push
bound
pushf
push
(bad)
(bad)
cld
popa
mov
popf
inc
bound
(bad)
mov
(bad)
mov
jo
pop
pushf
or
jbe
fs
into
add
sub
scas
xchg
cmps
cmc
out
shl
lods
push
out
scas
pop
jecxz
das
shl
stos
xchg
pusha
dec
scas
adc
dec
in
shl
adc
pop
out
das
xchg
cmps
cwde
ins
shl
stos
push
mov
jmp
stos
push
jecxz
in
adc
mov
push
and
xchg
mov
add
xchg
and
xchg
pusha
enter
dec
sub
loope
stos
adc
aam
xchg
and
cs
pop
push
cmps
bound
adc
mov
jo
pop
popa
repz
and
sub
cmps
jl
xchg
out
cmps
push
mov
into
loope
or
shl
(bad)
and
and
mov
adc
in
movs
out
aam
push
and
cmps
xor
popa
push
mov
inc
loopne
and
mov
push
and
in
and
in
cmps
pop
mov
xchg
jecxz
mov
xchg
and
and
xchg
cmps
aaa
movs
shl
mov
push
data16
adc
xchg
shl
into
and
xlat
fs
mov
mov
mov
mov
push
arpl
push
jb
pop
mov
push
out
mov
jmp
arpl
jno
bnd
jl
sub
push
jns
mov
mov
inc
ret
push
js
fwait
push
stos
ds
jg
icebp
inc
push
clc
xchg
dec
das
shl
(bad)
jne
stc
pop
xor
icebp
inc
mov
(bad)
sub
(bad)
push
adc
mov
lea
lock
lea
jl
ds
xchg
and
xchg
cli
data16
xlat
push
std
jb
dec
jb
lock
push
and
pop
repnz
fwait
cmp
mov
mov
icebp
push
arpl
sar
xor
xchg
jbe
push
in
jmp
outs
iret
mov
sub
ds
jae
loop
pusha
mov
xchg
popa
stc
movs
push
fs
adc
(bad)
mov
pop
es
(bad)
mov
(bad)
loope
data16
sbb
loope
and
loopne
mov
xchg
bound
pop
out
mov
push
cmps
mov
xchg
daa
clc
mov
adc
(bad)
in
popa
and
jecxz
loope
mov
adc
push
out
movs
push
and
mov
adc
sub
xchg
out
arpl
and
and
data16
xchg
and
pusha
pop
and
cmps
(bad)
cmps
iret
out
and
loope
addr16
adc
adc
push
out
loope
in
out
out
loope
loopne
and
lods
data16
mov
shl
mov
adc
mov
cmps
push
in
cmps
shl
dec
bound
retf
adc
and
out
mov
pop
pusha
push
and
pusha
pop
popa
in
arpl
addr16
cld
dec
mov
inc
push
scas
mov
dec
jecxz
jnp
adc
dec
jmp
xor
std
sub
jb
jmp
fld
repz
dec
or
bound
repz
(bad)
mov
jl
inc
or
pop
das
sub
push
arpl
pusha
adc
pusha
adc
in
es
loope
mov
shl
(bad)
mov
and
xchg
loop
out
and
out
pusha
jmp
xlat
mov
mov
nop
cmps
mov
and
mov
inc
xchg
cmps
dec
mov
adc
pusha
(bad)
mov
fldenv
loopne
movs
push
loopne
jecxz
mov
test
xchg
mov
jbe
xchg
out
and
mov
aas
movs
push
out
and
mov
or
adc
shl
xchg
loopne
mov
push
loopne
out
loop
bound
cmps
push
mov
out
adc
ja
push
data16
adc
std
loope
in
cmps
xlat
es
push
pusha
(bad)
cmps
xchg
jecxz
and
shl
xchg
loop
cmps
xchg
loopne
and
out
mov
shl
sub
pop
repz
addr16
jecxz
and
cmps
xchg
popa
xchg
popa
ret
jecxz
out
out
pusha
lea
movs
and
leave
inc
mov
fist
test
repnz
test
adc
dec
mov
(bad)
jmp
out
push
fdiv
mov
(bad)
mul
(bad)
shr
outs
jns
jmp
test
push
sbb
pop
repnz
clc
jb
out
xchg
ss
enter
mov
test
aad
(bad)
div
jl
enter
xlat
push
lahf
or
movs
or
cli
daa
bound
jo
jne
jb
jne
repnz
jl
mov
jns
xchg
icebp
inc
push
fs
repnz
jb
(bad)
mov
(bad)
xchg
aad
mov
jo
cmp
pop
push
lahf
or
jge
stc
add
bound
jo
out
(bad)
push
cmp
jns
pusha
or
jg
pop
pusha
jb
mov
sbb
paddsb
or
dec
mov
xchg
out
cmps
shl
fisub
adc
and
mov
lods
cmps
xchg
data16
pop
fs
adc
je
xchg
data16
mov
push
loope
gs
cmps
inc
and
loop
mov
push
loopne
and
push
gs
data16
mov
daa
es
and
adc
cmps
adc
jecxz
loop
es
aam
mov
popa
adc
mov
push
daa
adc
int
xchg
cmps
(bad)
gs
and
daa
push
daa
sbb
(bad)
push
loopne
in
loop
cmps
push
and
gs
out
in
and
push
movs
mov
push
daa
clc
in
jmp
fs
in
loopne
and
in
addr16
popa
adc
shl
push
out
in
popa
cdq
mov
xchg
bound
movs
shl
sub
shl
xor
shl
out
bound
adc
dec
in
pusha
mov
adc
push
mov
nop
mov
popf
cmps
xchg
and
mov
xchg
mov
xor
xor
aam
(bad)
mov
or
gs
arpl
jae
daa
adc
mov
mov
push
loope
in
and
fldenv
push
jecxz
in
in
movs
xchg
and
nop
cmps
test
xchg
and
in
out
mov
xlat
mov
ret
daa
mov
aam
iret
daa
xchg
loop
and
shl
aad
(bad)
mov
movs
and
mov
out
jecxz
jecxz
and
cmps
xor
loope
loop
daa
jg
shl
pop
data16
cmps
and
dec
es
jecxz
daa
xchg
and
and
xchg
fldenvw
loopne
mov
adc
arpl
sub
es
loope
out
and
movs
push
loope
in
and
out
daa
mov
mov
(bad)
mov
adc
cwde
popa
xchg
arpl
movs
xchg
popa
out
xlat
es
loope
popa
xchg
es
out
and
loopne
cmps
push
and
shl
shl
jecxz
cmps
push
mov
inc
and
int
mov
xchg
xor
inc
lea
test
cs
push
or
jmp
shr
or
shr
pop
arpl
(bad)
mov
xchg
aas
out
xor
push
movs
xlat
and
loopne
daa
xchg
loope
and
aam
and
bound
and
mov
jb
adc
cli
loop
movs
mov
cmps
nop
out
addr16
mov
mov
adc
pop
fs
jecxz
movs
push
arpl
in
data16
and
scas
fs
mov
mov
xlat
daa
cld
and
fs
cmps
aam
inc
and
adc
or
xchg
daa
xchg
bound
pusha
push
es
and
push
mov
mov
shl
and
pop
and
xchg
data16
and
arpl
fist
loope
pop
shl
sbb
adc
pop
daa
pop
fcom
sbb
popf
xchg
movs
fst
daa
ins
pushf
adc
mov
adc
cmp
push
and
fwait
pop
out
js
fs
(bad)
mov
or
or
xchg
adc
xlat
pop
adc
fcomp
adc
and
pop
adc
sub
adc
adc
xor
shl
jnp
adc
loop
cwde
shl
pop
xchg
mov
rcr
addr16
ficom
call
mov
fcom
daa
sub
push
in
sbb
and
pop
mov
cmp
add
shl
test
pop
mov
adc
push
in
popf
xlat
daa
sahf
fcom
out
fcom
arpl
addr16
sbb
jecxz
fst
mov
aam
mov
xchg
popa
cld
pop
push
mov
loop
sbb
and
fist
or
adc
cdq
push
loope
fist
in
fwait
xchg
out
sbb
cmps
gs
jecxz
pop
nop
outs
sbb
shl
(bad)
cmps
clc
ficom
and
fst
loop
sbb
loopne
fwait
adc
and
pop
aam
adc
pushf
xchg
daa
sbb
pop
adc
pop
xchg
mov
stos
sub
push
add
cmp
ja
cmps
adc
aad
jge
dec
or
data16
sbb
hlt
data16
stos
hlt
cmp
retf
jns
iret
aad
cld
retf
lahf
mov
neg
jae
fst
sub
push
fs
aam
xor
sbb
mov
inc
sbb
pusha
dec
pop
aam
mov
adc
xchg
sbb
and
pop
push
fs
sahf
adc
daa
sbb
out
pop
xlat
mov
stos
fcom
repz
es
push
pusha
jg
push
loopne
sbb
pusha
add
push
jecxz
pop
push
mov
rcr
(bad)
mov
ficomp
and
pop
push
arpl
pop
(bad)
loopne
fcmovbe
and
(bad)
jecxz
pop
nop
loopne
pop
push
daa
sti
push
adc
pusha
inc
sbb
adc
or
aam
push
sbb
aad
sbb
nop
popa
and
and
xchg
mov
scas
sbb
loop
pop
adc
call
fs
shl
inc
pop
adc
pop
xchg
mov
(bad)
pop
push
xlat
pop
adc
ficom
pop
pop
aad
and
push
es
push
cmps
jmp
rcr
mov
pushf
jbe
out
sbb
pop
adc
inc
pop
adc
dec
fcmovnbe
jecxz
pop
aad
xchg
pop
push
and
call
mov
fst
and
pop
aam
mov
nop
loope
sahf
xchg
loopne
sbb
arpl
push
movs
rcr
loop
lahf
push
jecxz
cdq
push
mov
rcr
push
loope
fcom
ficomp
push
cmps
fstp
(bad)
es
xlat
arpl
fwait
shl
mov
adc
mov
fcom
pusha
inc
sahf
(bad)
mov
or
pop
push
and
push
aad
cdq
sbb
bound
sbb
and
pop
push
in
xchg
arpl
pop
push
out
push
push
and
pop
push
mov
sti
pop
push
and
shl
sbb
dec
sahf
push
pusha
adc
push
fwait
push
jecxz
lahf
adc
pop
push
out
ficom
and
arpl
push
movs
in
fst
xor
out
pop
push
popa
sti
fbld
mov
inc
mov
or
jb
sbb
push
pop
xlat
arpl
ficom
cmps
sbb
xchg
and
xlat
addr16
shl
out
fcom
jecxz
fst
mov
jg
shl
(bad)
sbb
jecxz
pop
adc
or
adc
xchg
pop
shl
push
fwait
pop
and
pop
adc
and
cdq
xchg
out
fst
out
ficom
aaa
sbb
and
pop
adc
pop
shl
dec
fcom
es
pop
push
mov
adc
mov
sbb
push
out
sbb
and
pop
push
in
fcom
pusha
mov
aam
mov
xchg
out
fst
popa
inc
fst
and
pop
adc
popf
pop
loopne
pop
xlat
loop
fcom
bound
push
and
sbb
aad
data16
and
sbb
out
pop
shl
fst
push
push
out
fcom
cmp
aad
inc
fst
(bad)
fcom
cmps
dec
fst
and
pushf
xchg
mov
pop
pop
adc
lahf
fsub
shl
inc
mov
xor
jb
sbb
ds
mov
mov
cmp
jmp
inc
jb
lods
dec
outs
(bad)
jo
xor
retf
clc
call
jae
outs
fwait
(bad)
cmps
cld
inc
mov
mov
rcr
jae
adc
ds
jb
fwait
mov
ds
jl
and
jb
repz
scas
cld
sahf
or
xor
js
dec
and
inc
jb
fwait
mov
inc
or
jae
or
jb
pop
push
jb
popf
push
and
pop
xchg
mov
outs
sbb
popa
scas
lahf
xlat
out
sbb
and
sahf
aam
jp
push
mov
inc
pop
pop
(bad)
retf
and
ficom
in
cdq
shl
pop
sbb
and
ficom
loop
aam
in
pop
xchg
and
ficom
jno
adc
je
aad
cmp
mov
xchg
and
sbb
xlat
pop
xlat
out
lahf
push
and
pop
adc
sbb
xchg
out
pop
adc
adc
scas
fst
and
sbb
bound
sahf
push
mov
sbb
rcr
or
loopne
popf
adc
push
fwait
push
pushw
fwait
adc
pushf
pop
adc
sbb
pop
mov
ficom
jecxz
ficom
popf
push
popa
neg
adc
jnp
aad
add
movs
(bad)
fcom
or
xchg
loop
fist
(bad)
mov
pop
pop
xchg
and
push
arpl
adc
outs
pop
adc
fcom
jne
adc
jp
adc
sahf
push
and
(bad)
loopne
xor
mov
mov
imul
in
dec
jle
arpl
mov
xlat
jb
push
inc
mov
iret
fs
aas
add
mov
inc
mov
popa
xchg
fmulp
addr16
aas
(bad)
xchg
outs
mov
jb
outs
sbb
xchg
inc
iret
mov
adc
add
(bad)
cli
push
mov
jmp
dec
xchg
mov
push
pop
jnp
pop
int3
movs
adc
scas
pop
arpl
cmps
ds
xchg
cmp
movs
adc
pop
arpl
pusha
push
outs
ss
fs
ds
sub
push
xor
cwde
aad
jne
(bad)
mov
aas
pop
adc
pop
adc
dec
ficom
loopne
(bad)
loopne
ficom
push
push
aam
and
push
arpl
lahf
xlat
loop
sbb
lods
fwait
push
pusha
xor
xchg
and
push
out
pop
push
mov
ret
call
int3
fwait
xchg
adc
push
mov
pop
fwait
adc
out
adc
movs
call
sub
adc
mov
shl
ja
xchg
and
xlat
arpl
pop
push
and
pop
push
loopne
pop
pop
and
popf
push
xchg
(bad)
loopne
fcom
popa
loopne
shl
es
lods
pushf
push
mov
jae
xchg
addr16
xchg
data16
pop
push
mov
test
adc
adc
xchg
xchg
pop
mov
pop
push
xchg
and
adc
adc
in
aam
stos
push
nop
cmps
sub
adc
mov
push
movs
xor
mov
adc
ret
push
shl
popa
add
(bad)
cmps
lahf
or
and
push
dec
push
dec
push
(bad)
out
sar
bound
outs
sbb
lea
inc
pop
ret
shl
pop
or
push
push
jb
xchg
push
mov
(bad)
push
shl
mov
out
adc
mov
call
pusha
data16
in
rcl
cs
es
xchg
push
and
adc
and
xchg
pop
pusha
cmp
adc
adc
cmps
(bad)
push
xchg
pusha
push
adc
popa
aad
adc
pop
adc
loope
xchg
aad
scas
xchg
xchg
loopne
pop
xlat
not
addr16
xchg
popa
mov
aad
bound
push
push
mov
dec
push
xlat
es
adc
out
push
aad
xchg
push
xchg
mov
sbb
and
push
and
xchg
adc
repnz
and
rcl
pop
xchg
adc
pusha
leave
aam
and
push
adc
xlat
adc
xchg
and
push
mov
mov
xchg
adc
and
adc
lock
aam
hlt
adc
addr16
adc
jecxz
adc
mov
into
adc
loopne
adc
jecxz
push
aam
xchg
aam
cmps
pop
push
shl
addr16
and
adc
ds
(bad)
and
pusha
mov
jl
aad
stc
(bad)
mov
mov
adc
inc
fwait
push
movs
sbb
mov
sub
inc
fwait
push
mov
lds
repnz
enter
test
mov
and
inc
fwait
push
xchg
sbb
mov
and
inc
fwait
push
je
(bad)
pop
fisub
jb
pop
push
in
(bad)
aad
pop
xchg
adc
daa
loop
xchg
loop
xchg
adc
in
rcl
sub
and
aam
jne
xchg
out
xlat
adc
jl
adc
and
adc
and
push
push
loope
nop
push
movs
xchg
push
xchg
bound
adc
sbb
adc
es
xchg
mov
rcl
es
push
cmps
lock
adc
cmp
(bad)
bound
xchg
loope
xchg
xchg
daa
mov
mov
push
(bad)
(bad)
popa
rcl
xchg
and
push
shl
(bad)
push
mov
and
adc
(bad)
xchg
pusha
out
adc
popa
xor
aam
repz
aam
mov
push
push
arpl
adc
adc
mov
adc
dec
push
nop
and
xlat
xchg
arpl
push
shl
cdq
push
push
arpl
(bad)
pop
mov
jecxz
xlat
loopne
push
pop
mov
mov
push
and
xchg
pop
out
push
adc
in
push
shl
add
data16
xchg
and
push
adc
(bad)
push
in
xchg
adc
push
push
popa
daa
push
push
mov
stos
rcl
pusha
jbe
push
not
loopne
push
xchg
es
adc
inc
push
xchg
cmps
adc
jecxz
xchg
aad
jl
cmps
inc
inc
sbb
add
jo
xchg
jbe
mov
jo
adc
mov
xor
jp
xchg
repnz
adc
outs
pop
add
xchg
add
add
inc
xor
pop
inc
mov
add
jb
inc
push
jb
add
inc
fcom
push
mov
out
xchg
push
and
xchg
es
push
addr16
adc
jecxz
adc
adc
fs
mov
push
push
xchg
cmps
rcl
loopne
xchg
pop
loopne
rcl
mov
and
xchg
daa
test
adc
out
push
xchg
and
(bad)
mov
cmp
adc
test
adc
orps
loopne
push
xchg
mov
(bad)
adc
and
xchg
adc
jecxz
adc
sub
shl
sub
adc
jae
aam
js
adc
mov
aad
addr16
out
push
shl
retf
mov
(bad)
xchg
(bad)
and
xchg
shl
out
xchg
out
push
adc
and
adc
loopne
push
xlat
mov
std
push
adc
adc
inc
adc
and
aam
loope
push
shl
adc
cwde
adc
mov
and
xchg
movs
adc
mov
call
push
push
mov
sbb
mov
inc
push
jb
(bad)
ret
(bad)
adc
xchg
push
jecxz
xchg
push
and
nop
mov
sbb
xchg
and
(bad)
and
adc
loopne
push
(bad)
and
adc
out
push
push
popa
cmp
xchg
loope
aam
daa
xchg
inc
rcl
and
push
in
xchg
(bad)
(bad)
rcl
loopne
adc
and
push
adc
and
push
push
cmps
ins
adc
out
adc
loopne
aam
call
pusha
sti
push
(bad)
cmps
inc
push
xchg
mov
rsqrtps
adc
loope
push
xchg
out
adc
loop
xchg
push
and
rcl
and
push
mov
das
adc
jno
xchg
out
push
push
loope
aam
out
nop
adc
xchg
xchg
arpl
adc
retf
push
aad
rcl
loopne
xchg
push
jecxz
push
pop
loop
push
pop
mov
arpl
data16
xlat
loopne
push
pop
and
adc
in
xchg
push
mov
rcl
mov
leave
xlat
xchg
addr16
nop
push
movs
rcl
adc
fcom
cmps
fist
adc
loop
shl
scas
adc
pusha
xor
shl
push
xchg
mov
jb
inc
ss
inc
in
pop
sbb
test
push
pop
inc
push
cmp
pop
mov
xchg
adc
mov
(bad)
cmp
push
jbe
jns
add
jae
es
push
jb
push
aas
shr
jmp
data16
mov
inc
xor
clc
cmp
jmp
ja
imul
push
mov
xchg
inc
xor
lods
xchg
cmp
scas
push
sub
push
(bad)
in
dec
addr16
mov
jmp
jl
xor
cmp
pop
jge
repnz
jge
dec
in
sbb
jns
mov
test
jl
ret
mov
cmp
lods
lock
cmp
add
clc
sbb
test
cmp
test
sub
js
int
mov
lea
dec
addr16
adc
xor
(bad)
sbb
jge
js
das
imul
push
cld
fild
jns
lea
push
xchg
les
lea
(bad)
in
stc
jns
pushf
cli
(bad)
(bad)
enter
or
mov
xchg
fwait
data16
call
cmp
(bad)
or
iret
retf
ret
push
fmul
xchg
loope
(bad)
mov
aaa
cmp
inc
or
imul
push
out
inc
and
adc
push
sub
and
cmp
fiadd
sub
or
(bad)
jae
sbb
jne
cs
mov
sbb
movs
pop
inc
dec
xor
sub
jl
movs
je
cmp
loopne
cmp
loope
inc
cwde
mov
mov
cli
mov
xchg
sub
daa
and
mov
sub
stos
loope
ficom
push
nop
push
fwait
sahf
scas
sahf
pop
sahf
nop
push
arpl
scas
sahf
inc
jl
jge
lods
cs
mov
sbb
stos
fdiv
addr16
(bad)
jge
inc
lods
sub
xchg
inc
int
jmp
jecxz
movs
rol
je
and
hlt
movs
mov
and
movs
pop
pop
push
and
std
(bad)
cmps
in
pushf
ins
stc
enter
jmp
cld
push
mul
pushf
sub
test
in
in
cmp
mov
inc
add
in
test
mov
push
jl
inc
mov
sub
sub
jge
movnti
adc
and
jns
mov
xchg
(bad)
sbb
inc
mov
push
jb
enter
iret
xchg
mov
jno
xchg
and
or
and
enter
mov
mov
or
xchg
arpl
lea
and
dec
push
fimul
xlat
mov
test
adc
or
and
int3
aad
std
or
xchg
pusha
or
or
(bad)
and
aam
push
retf
push
leave
push
jecxz
or
jecxz
dec
shl
movs
int3
aad
out
mov
jecxz
(bad)
aam
test
fs
adc
dec
adc
or
mov
push
mov
mov
xlat
dec
xchg
jecxz
int
and
(bad)
arpl
xchg
cmps
call
enter
mov
and
dec
xchg
and
nop
and
adc
ret
and
mov
and
mov
lea
mov
mov
dec
aam
jmp
adc
in
mov
test
push
jecxz
or
fs
dec
adc
cmp
pop
pop
inc
(bad)
push
(bad)
or
bound
out
cmp
mov
xchg
in
inc
jb
mov
cmp
leave
add
inc
mov
je
out
data16
rcl
dec
hlt
jne
lea
mov
data16
mov
push
and
inc
int3
into
jne
pop
les
cld
sbb
fisttp
fwait
xor
mov
jb
fisub
mov
push
pop
cdq
adc
fstp
jne
push
mov
jl
fsubr
int3
mov
xor
popf
mov
xor
jl
sbb
mov
sbb
rcr
or
je
cmp
xor
(bad)
lahf
lods
fidivr
sbb
(bad)
popf
(bad)
enter
fdiv
into
test
ins
fdivr
pop
fiadd
jl
adc
ret
rcr
sub
loopne
xor
in
lea
push
iret
fwait
test
test
mov
pop
inc
(bad)
or
mov
jl
add
fidivr
xlat
fidivr
push
mov
add
mov
mov
jbe
ins
inc
xchg
scas
mov
lods
inc
retf
mov
cmp
je
jge
lods
add
rep
jmp
dec
cmp
push
lea
and
pop
sub
mov
scas
jecxz
hlt
lods
add
xor
outs
shr
scas
stc
je
mov
push
jge
pop
mov
sar
xchg
ret
ins
xor
and
outs
xlat
xchg
ret
ins
xor
xor
ret
out
scas
cmp
and
cli
push
jge
ja
rcl
outs
das
xchg
adc
mov
sbb
loop
inc
mov
lods
add
jle
sbb
pop
mov
outs
push
pop
cmp
nop
je
pop
scas
xchg
mov
mov
ret
mov
jge
leave
sbb
rcl
add
mov
and
(bad)
push
mov
jae
int3
adc
push
icebp
stos
add
inc
leave
lds
mov
jae
push
push
jge
test
adc
push
mov
jge
addr16
push
mov
mov
jne
push
sub
aam
push
lock
add
cmp
dec
mov
sbb
out
int
clc
out
bound
loopne
shl
lea
out
aam
xor
mov
inc
lea
adc
fcom
aas
mov
int
dec
repz
mov
loop
or
inc
or
scas
sbb
js
in
cmp
stc
out
loopne
int3
or
std
lods
jge
imul
sbb
(bad)
push
loop
and
imul
or
xchg
out
inc
jmp
scas
pushf
push
jge
fdiv
jge
imul
push
out
js
pop
stos
add
(bad)
jle
iret
pop
aad
push
xchg
hlt
inc
out
sub
add
mov
add
mov
stos
ret
sub
aaa
xchg
jmp
xor
scas
inc
push
jge
hlt
rcl
nop
in
fiadd
int
jge
push
mov
add
(bad)
(bad)
loope
inc
mov
add
jmp
std
iret
aaa
aad
push
imul
inc
out
push
jo
scas
icebp
js
int3
addr16
loope
bound
add
xlat
retf
rcl
jge
jmp
shl
adc
ret
test
aad
(bad)
push
out
repz
scas
jne
push
cmp
shl
xlat
push
je
and
fs
lods
mov
test
aad
mov
scas
clc
lock
jle
push
xchg
push
jge
aaa
xchg
push
mov
clc
push
(bad)
stos
add
push
jmp
mov
out
nop
pop
push
cmp
rcl
imul
xor
fnop
jmp
scas
jg
jecxz
jnp
cmp
lea
cwde
add
push
dec
inc
jmp
jecxz
pop
push
cmp
pop
push
cmp
push
orps
push
mov
ds
clc
imul
imul
dec
repz
enter
or
hlt
dec
rcl
xor
mov
rcr
xchg
sub
call
push
cmp
and
add
dec
ja
jl
cmp
std
in
mov
imul
push
retf
adc
fimul
cmps
stos
sbb
test
xor
jl
xchg
lahf
lock
cmp
push
sbb
ret
mov
mov
sub
(bad)
aaa
test
outs
mov
clc
push
mov
jge
rol
rcr
outs
xor
pop
push
cmp
adc
mov
push
jae
lods
call
push
cs
cwde
test
xor
inc
sbb
or
movs
std
push
int3
pop
inc
pop
std
out
dec
pop
ss
or
cmps
loope
jno
out
sahf
or
(bad)
loope
mov
cs
or
int
xor
mov
mov
mov
mov
movs
ror
out
int
cmps
or
push
fs
retf
push
and
xchg
loopne
push
xchg
call
dec
pop
es
push
and
retf
jmp
push
out
int3
adc
xor
(bad)
mov
mov
mov
mov
push
dec
nop
pusha
dec
dec
push
es
(bad)
adc
xchg
into
push
es
dec
adc
pop
dec
nop
and
push
out
retf
xchg
mov
stos
or
data16
adc
daa
cmp
shl
inc
inc
aad
dec
test
loope
(bad)
shl
nop
adc
cwde
adc
adc
jmp
add
adc
test
inc
aad
cmp
aad
ret
inc
aam
inc
add
retf
and
add
es
adc
pop
xchg
mov
daa
inc
adc
inc
adc
mov
repnz
cmps
mov
ret
inc
ret
push
out
inc
push
pusha
or
shl
adc
adc
aad
pop
adc
add
and
fisubr
and
rol
(bad)
jmp
inc
xchg
nop
push
inc
mov
xchg
push
fisubr
mov
cmps
jne
(bad)
ins
jge
retf
fdivr
push
dec
mov
mov
pushf
push
lods
iret
or
outs
cmps
lock
jle
dec
add
mov
loope
and
dec
popf
xor
stos
xchg
lea
adc
mov
jge
icebp
out
jl
xlat
sub
jmp
ret
test
in
sub
out
mov
mov
jmp
pushf
into
push
fucomp
sub
(bad)
arpl
test
out
pop
stc
push
lods
(bad)
lahf
dec
jns
jmp
daa
pushf
popa
xchg
add
retf
pop
xchg
in
mov
(bad)
dec
mov
ds
(bad)
out
jl
or
inc
sbb
out
jl
repnz
jmp
repnz
sub
pop
js
sub
hlt
push
fwait
adc
mov
xor
cs
addr16
cmp
and
out
div
sub
mov
inc
fcom
cdq
fsub
xchg
lock
or
mov
(bad)
hlt
mov
sbb
test
jp
jmp
mov
sbb
sub
inc
and
xor
dec
pop
and
and
xor
hlt
sub
stos
and
xor
jecxz
and
and
jae
xchg
sti
mov
popa
outs
or
popa
(bad)
data16
xor
lahf
cmp
cmp
rol
or
icebp
adc
arpl
and
jecxz
and
mov
jb
push
rol
jecxz
pop
push
pop
popa
xor
xor
mov
adc
inc
mov
popa
mov
loopne
loope
push
or
je
or
adc
adc
cs
xor
(bad)
cmp
rcr
adc
in
popa
cs
xor
(bad)
cmp
ror
jmp
setb
and
repz
sysexit
div
(bad)
scas
lock
out
repz
sbb
xor
loop
icebp
jae
sbb
sbb
pop
sbb
and
lea
add
add
loopne
adc
xchg
jecxz
xchg
mov
jmp
shl
icebp
xchg
repz
mov
rcl
add
xchg
daa
add
inc
shl
iret
(bad)
aad
aam
xchg
push
les
sahf
push
aad
cmps
add
pusha
outs
(bad)
push
fs
ret
xchg
popa
mov
xchg
jecxz
ret
jle
push
arpl
push
and
adc
push
mov
retf
and
add
daa
push
inc
aam
pop
xchg
loopne
inc
pop
out
inc
xchg
bound
adc
jo
nop
mov
jg
aad
mov
inc
adc
test
and
test
and
addr16
add
popa
fwait
ret
adc
sbb
push
data16
xchg
daa
and
push
and
pop
adc
and
(bad)
xchg
and
inc
pop
and
inc
push
movs
add
add
xchg
out
inc
push
out
(bad)
xchg
daa
rol
loopne
(bad)
shl
sahf
inc
xchg
and
sub
daa
not
push
jb
adc
xor
adc
cmp
adc
push
out
adc
inc
adc
xchg
xchg
sbb
adc
push
test
adc
push
enter
xchg
xor
jle
imul
adc
mov
jns
push
scas
enter
xor
pop
mov
stos
push
mov
pusha
mov
mov
mov
call
pusha
ror
outs
or
push
cmps
mov
jmp
jmp
(bad)
mov
push
enter
repnz
bound
mov
mov
imul
adc
test
sub
dec
xchg
sbb
adc
lea
inc
clc
fwait
aam
ror
cdq
xchg
aam
shl
xchg
mov
lock
push
push
mov
repz
mov
lea
pop
rcr
jbe
(bad)
aam
adc
and
aad
jb
adc
repz
mov
mov
enter
outs
movs
lea
adc
mov
mov
or
cwde
(bad)
out
fdiv
stos
push
jns
xlat
pop
movs
pushf
int3
add
jb
pusha
dec
mov
fild
push
dec
xor
mov
mov
mov
hlt
data16
pop
jmp
imul
int3
pop
sub
pop
pop
jbe
mov
dec
outs
call
retf
(bad)
jg
clc
inc
push
(bad)
test
mov
fcomp
imul
stos
xchg
movs
inc
das
loopne
pop
and
sub
jmp
mov
mov
(bad)
sub
sar
dec
mov
les
mov
xchg
push
es
inc
nop
out
pop
push
jecxz
inc
pop
(bad)
fild
adc
sbb
shl
gs
addr16
xchg
loop
push
xchg
es
xchg
mov
sti
lds
popa
add
mov
dec
xchg
retf
and
xchg
popa
xchg
inc
shl
call
loop
lds
test
shl
test
xor
arpl
mov
aas
(bad)
(bad)
daa
inc
rcl
push
add
mov
push
movs
push
rcl
push
inc
push
pusha
faddp
(bad)
es
xchg
mov
and
ret
sub
adc
mov
stc
add
cmps
mov
add
out
inc
xchg
and
adc
push
xchg
and
je
dec
adc
lea
es
arpl
push
xchg
xlat
ja
test
inc
bound
push
jb
pop
inc
jno
push
jl
and
dec
(bad)
push
cmp
jns
adc
jns
stos
jne
outs
xchg
push
inc
(bad)
jmp
cmp
std
lods
sbb
call
pop
div
data16
leave
adc
jge
or
or
jns
jge
movs
lea
(bad)
cmps
push
pop
jmp
push
addr16
sub
adc
or
cs
xchg
mov
push
xchg
jbe
mov
inc
dec
inc
sub
push
shl
mov
outs
xchg
lea
rol
xchg
arpl
aam
sub
xchg
and
loopne
add
pusha
jb
pop
pusha
cmp
adc
(bad)
aad
add
test
popa
iret
(bad)
rol
arpl
nop
jecxz
adc
in
adc
das
(bad)
xchg
bound
inc
xchg
jecxz
pop
adc
mov
xchg
and
pop
push
movs
or
out
inc
adc
add
cwde
rcl
lahf
xchg
arpl
push
and
inc
adc
push
xlat
cmps
out
inc
nop
cmps
xor
jae
shl
inc
push
out
les
and
adc
mov
adc
xchg
jge
mov
lahf
cli
push
and
cmp
mov
xlat
loop
mov
adc
idiv
push
and
call
sar
mov
xchg
daa
retf
mov
shl
push
mov
xchg
fdivr
daa
mov
push
and
push
out
jg
sbb
mov
aaa
jnp
mov
xchg
(bad)
jns
call
dec
out
gs
jns
mov
sub
jb
jmp
jns
dec
push
test
(bad)
cmp
or
lea
(bad)
cmp
sub
mov
push
(bad)
(bad)
(bad)
imul
dec
xor
push
shr
jl
adc
cmp
ja
pushf
or
xor
sub
cmp
addr16
lea
ja
push
(bad)
cmp
sub
xor
pop
ror
pusha
cmp
cmp
push
xlat
xlat
cmp
mov
pushf
or
leave
xlat
jns
daa
sub
xor
sub
scas
cmc
jns
pop
lods
mov
cmp
cmps
push
xlat
cmp
imul
adc
xlat
cmp
out
mov
mov
xlat
mov
lea
push
in
js
out
cmp
daa
scas
cmp
and
cmp
adc
js
(bad)
loopne
cld
xchg
data16
cmp
pusha
inc
cmp
bound
clc
(bad)
and
jl
loope
cmp
pop
out
mov
xchg
addr16
and
sti
xchg
mov
jg
pop
loopne
jp
bound
jge
test
out
jns
out
mov
pop
xchg
cld
xlat
loopne
jle
es
jnp
loopne
std
push
loopne
cmp
adc
addr16
aam
mov
push
jecxz
std
push
and
jns
mov
ret
cmp
enter
dec
jge
jecxz
std
adc
push
mov
push
loope
js
mov
gs
xlat
and
es
pop
loope
mov
push
and
cmp
cmps
adc
inc
dec
cmp
inc
mov
aam
inc
jge
or
aam
push
aas
or
lea
fs
or
arpl
aam
int
imul
jmp
adc
aam
int
xchg
mov
lea
addr16
aam
int3
xchg
inc
jb
xchg
cmp
mov
pushf
lea
aam
push
xor
dec
(bad)
cmps
push
pop
fwait
inc
enter
mov
aam
lea
xor
arpl
nop
mov
lea
aam
leave
adc
pop
data16
jae
sub
in
jns
sub
cmp
aaa
or
inc
push
jmp
cmp
xor
mov
(bad)
xlat
aad
push
adc
inc
mov
call
dec
jb
aad
scas
leave
xor
test
push
inc
out
cmp
mov
rcl
jns
xor
lea
(bad)
inc
dec
mov
adc
cmps
push
call
cmps
(bad)
xchg
and
mov
adc
in
mov
xchg
es
xchg
mov
mov
mov
xchg
and
jl
and
aam
xchg
mov
xlat
and
xlat
mov
bound
popa
in
cmp
mov
cmc
jns
and
clc
xchg
and
cmp
jns
cmps
or
pusha
dec
mov
push
popa
adc
xchg
and
js
pusha
pusha
jnp
call
out
jns
mov
cld
(bad)
push
arpl
shl
ret
and
mov
shl
adc
mov
sbb
aam
fs
push
in
mov
(bad)
cmps
bnd
and
mov
push
in
mov
xchg
mov
retf
std
aad
sar
adc
(bad)
cmp
call
push
jbe
inc
xor
xchg
mov
lea
jp
ins
fs
sbb
ds
mov
xchg
mov
lea
sub
mov
inc
out
and
xor
sub
push
jb
in
fs
push
js
pop
push
test
sar
js
or
lea
sar
push
fisubr
jnp
cmp
ins
gs
sar
push
pop
aaa
xchg
dec
out
or
jns
loopne
jl
and
cmp
addr16
pushf
or
jmp
in
ja
test
cmp
sub
dec
jns
jl
loope
ror
fs
mov
jecxz
leave
pushf
or
cmp
data16
sar
pop
mov
xchg
mov
(bad)
rcl
jns
jne
mov
lea
out
neg
sar
xchg
in
mov
mov
jns
adc
mov
or
fistp
sti
pusha
xchg
sar
push
jbe
mov
jb
sar
add
fdivp
arpl
sar
push
enter
jmp
lea
in
jl
fdivr
mov
lea
mov
push
pusha
add
shl
mov
push
cmps
adc
mov
pop
jge
es
cmp
pusha
jecxz
push
pusha
movs
jg
arpl
jg
data16
xchg
daa
jo
adc
jle
mov
(bad)
jns
mov
lds
and
push
cmps
or
loopne
mov
xlat
es
cmp
cmps
sbb
push
loopne
sti
adc
gs
pusha
push
jl
addr16
and
jns
pusha
cmp
cld
call
jns
inc
(bad)
adc
bound
cli
pop
sar
pop
jnp
arpl
cmp
cmps
sbb
jg
cmps
daa
cli
shl
cs
push
out
jl
popa
idiv
xlat
mov
aas
jp
movs
inc
sti
push
pusha
test
mov
mov
in
mov
push
es
xchg
popa
pop
(bad)
xchg
and
cmp
in
shl
out
jl
and
xchg
mov
jne
push
out
jl
and
jnp
fs
cld
push
arpl
aad
mov
loope
xchg
sbb
mov
in
movs
or
or
pop
or
(bad)
loopne
(bad)
call
xor
push
inc
jb
jmp
sbb
push
xor
jl
movs
xchg
(bad)
xchg
and
jg
loope
jge
in
cmp
out
jnp
pusha
scas
cmp
adc
idiv
adc
cli
jl
and
mov
adc
dec
cmp
arpl
mov
push
es
xchg
mov
fidivr
movs
mov
adc
jmp
jecxz
jg
out
jnp
mov
inc
cmp
test
xchg
and
ds
out
mov
push
sbb
shl
daa
cld
(bad)
and
loope
mov
adc
lock
push
addr16
xchg
loope
mov
push
in
(bad)
xchg
loope
aas
xchg
and
jge
mov
push
cmp
mov
cmps
aas
push
mov
scas
jle
lods
mov
push
popa
xor
jl
arpl
pop
arpl
icebp
shl
mov
and
hlt
xchg
mov
(bad)
pop
fucomi
lock
jo
pop
or
and
mov
mov
arpl
push
jae
xor
push
daa
ret
and
jb
popa
(bad)
adc
in
repz
xlat
and
repz
and
popa
lods
mov
arpl
xchg
and
xlat
and
repz
stc
mov
and
adc
les
out
jae
and
aaa
shl
sbb
adc
and
bound
movs
jmp
xor
and
xor
xchg
out
xor
xor
cmps
dec
mov
and
push
daa
shl
pop
out
mov
cmps
fdiv
push
es
mov
out
xchg
and
icebp
push
and
lock
jb
es
lock
or
adc
or
xor
and
xor
push
and
xor
mov
loopne
aam
call
repnz
jno
shl
repz
cmps
stc
jae
addr16
push
and
ss
movs
add
and
jp
inc
mov
inc
xlat
push
mov
cmp
idiv
xor
jb
inc
jbe
pop
adc
imul
adc
mov
push
jecxz
popf
or
or
inc
mov
aas
nop
cmps
and
in
mov
arpl
pusha
shl
out
repnz
fdiv
shl
hlt
shl
jo
and
mov
out
xor
daa
aaa
jno
mov
jns
(bad)
popa
mov
xlat
mov
dec
jo
mov
xchg
xor
push
xor
lock
and
xor
loop
jne
mov
ja
adc
mov
push
arpl
je
loope
repz
mov
add
not
mov
push
shl
not
data16
push
daa
gs
and
adc
in
jb
daa
lock
aaa
jne
and
xchg
loope
jb
and
jne
mov
mov
xchg
and
cmc
push
mov
xchg
repz
fidiv
push
and
push
and
push
fs
shl
xor
xchg
data16
push
cmps
push
mov
add
daa
mov
nop
arpl
xor
pusha
aad
xchg
and
repz
bound
mov
and
xlat
loop
mov
popa
sbb
cmps
stos
cmp
stos
and
push
rcr
arpl
push
push
cmp
(bad)
mov
jecxz
jb
pop
inc
repz
jo
mov
cmp
inc
cs
pop
add
or
pop
cmps
jne
sbb
dec
ror
dec
pop
iretw
adc
jo
push
mov
dec
cdq
mov
cwde
cmps
fisttp
cld
popa
daa
js
fnstsw
cmps
and
cli
xchg
pushf
cwde
or
jb
cdq
sub
adc
lea
(bad)
jmp
out
mov
sti
mov
pop
(bad)
popf
jo
data16
jge
or
sub
dec
sbb
test
mov
pop
sbb
clc
jmp
inc
xor
ja
neg
inc
mov
inc
mov
xor
push
clc
mov
dec
xor
sbb
daa
mov
pop
dec
in
mov
or
fmul
jns
sbb
test
(bad)
mov
cmp
dec
test
cmp
in
pop
xchg
push
fsub
pusha
in
fldenv
std
out
sbb
jecxz
lea
clc
adc
stc
out
sub
cmp
push
sar
ins
retf
in
push
movs
push
add
fidivr
enter
lea
adc
frstor
dec
repnz
jo
repz
or
mov
xchg
call
dec
xor
push
daa
add
outs
ds
cmp
cmp
loop
sahf
fsub
sub
cmp
lds
sbb
push
xchg
loop
outs
jo
cmps
adc
pushf
and
bound
jnp
std
add
cmp
jo
mov
test
sbb
sahf
pop
int3
or
cmp
imul
popa
cld
pop
je
imul
loope
dec
mov
mov
jmp
daa
push
ja
cwde
pusha
and
dec
xor
not
mov
add
or
movs
pushf
int
cmp
(bad)
jns
popf
mov
imul
out
or
push
sahf
addr16
fs
lock
fimul
lea
add
ins
imul
xor
fucomi
int3
stos
pop
dec
lds
lea
mov
stc
scas
aad
or
inc
ds
push
inc
and
lock
cmp
mov
push
arpl
ds
inc
push
adc
repz
lahf
or
push
push
add
data16
adc
inc
push
fs
ds
retf
jae
mov
outs
xchg
sahf
lock
cld
cmp
jns
lds
pushf
(bad)
icebp
cmp
mov
(bad)
jns
leave
mov
mov
outs
pop
fstp
test
ds
test
and
inc
shl
xor
out
hlt
(bad)
mov
xchg
ja
and
jbe
and
xchg
mov
and
and
xlat
mov
jmp
adc
ja
push
popa
div
push
and
jb
mov
add
and
adc
leave
xor
and
not
mov
daa
pushf
mov
pusha
pop
cmc
push
addr16
adc
and
mov
imul
daa
jno
adc
repz
out
xor
daa
js
adc
push
mov
and
jb
loope
repnz
shl
out
hlt
xchg
addr16
xchg
and
xor
mov
cs
push
cmps
xor
xchg
cmps
clc
mov
daa
cmp
xchg
and
not
cmps
int3
mov
jecxz
xor
pop
repnz
mov
fidiv
adc
cmps
mov
and
jbe
and
mov
cmps
mov
adc
mov
mov
and
xor
adc
mov
adc
nop
xor
mov
sbb
push
out
jb
cmps
and
push
loopne
repz
stos
jbe
arpl
repnz
daa
push
adc
jmp
xor
push
mov
popa
mov
imul
inc
dec
or
stc
push
inc
out
mov
es
inc
cmp
fs
push
arpl
pop
push
mov
data16
clc
adc
cmp
push
(bad)
push
mov
out
jb
add
test
cld
or
mov
jb
cmp
or
cmp
pop
es
dec
sar
repnz
sub
pop
mov
jge
dec
gs
mov
fnstcw
leave
cmps
es
or
out
xor
inc
mov
xor
scas
js
xchg
imul
jb
stos
xchg
mov
push
or
shl
push
in
es
or
sub
repnz
inc
xor
adc
fnsave
cmp
xor
mov
dec
test
stc
shl
fstp
es
fstp
sbb
cmps
sub
cdq
adc
daa
cdq
in
ret
jne
es
fdivr
es
pop
cld
inc
in
dec
mov
ret
fistp
int
mov
js
test
sub
inc
stc
test
cld
(bad)
cmp
pop
int3
cmps
(bad)
jmp
test
xchg
sub
mov
xchg
imul
mov
test
jb
push
push
sbb
add
lea
neg
fsubr
cmp
pop
sub
mov
pop
(bad)
cmp
clc
xchg
scas
int
push
jne
pop
inc
out
mov
mov
mov
in
addr16
cmp
fstp
push
ja
test
add
jo
je
pop
clc
dec
sub
pop
movs
iret
js
and
std
aam
and
pusha
sub
(bad)
int3
mov
and
jae
xor
js
mov
(bad)
in
jecxz
ret
nop
retf
(bad)
sbb
mov
clc
ja
cmp
std
push
mov
clc
ret
stc
add
dec
in
push
mov
push
cs
dec
cmp
xchg
mov
jmp
aam
mov
push
es
jmp
and
ins
xchg
pusha
js
push
and
ins
adc
lods
xchg
loop
imul
mov
aam
(bad)
jmp
sbb
sub
loope
sub
cmps
aaa
outs
push
loopne
out
push
and
lods
adc
js
xchg
bound
imul
dec
stos
push
mov
xlat
sub
xchg
out
ins
push
jecxz
lods
pop
out
ins
shl
outs
sub
jecxz
test
xchg
and
sub
addr16
lods
push
arpl
cs
and
push
mov
aam
push
fsubr
loop
lods
push
pusha
jecxz
(bad)
addr16
adc
sub
and
ins
xchg
and
jmp
jecxz
in
push
loopne
sub
mov
les
addr16
push
shl
or
outs
xchg
(bad)
imul
pop
scas
xchg
mov
imul
loope
scas
xchg
cmps
neg
cmp
out
pop
sbb
dec
pop
xor
rcl
retf
arpl
es
jne
fs
jo
movs
(bad)
xor
test
fild
push
lock
add
out
dec
imul
or
iret
rcl
sti
mov
add
xchg
iret
aam
mul
fsubr
and
sub
pusha
popa
cs
loopne
imul
sub
mov
mov
adc
jmp
mov
ins
xchg
mov
or
out
push
adc
adc
xchg
popa
sbb
adc
pop
jmp
adc
scas
scas
xchg
es
cs
loop
das
xchg
popa
cmp
shl
ds
aad
xchg
xlat
out
out
adc
iret
imul
shr
adc
adc
in
aad
fild
adc
mov
out
xchg
data16
sub
and
imul
cmp
imul
loop
sub
retf
scas
xchg
pusha
push
ins
pop
bound
adc
test
loope
out
xchg
out
scas
adc
popa
jmp
xchg
mov
jb
push
daa
(bad)
test
and
sub
and
test
push
out
outs
shl
adc
and
cs
and
xchg
mov
and
aad
jmp
out
and
ja
dec
leave
les
inc
sbb
ds
sub
ror
in
imul
mov
cwde
inc
jno
dec
fninit
jmp
lods
xchg
inc
cmp
in
test
mov
sub
push
mov
mov
jmp
inc
in
xchg
cmps
leave
sub
(bad)
and
scas
adc
xlat
push
xchg
popw
cs
mov
push
xchg
and
push
and
jmp
cmp
adc
add
push
cmps
or
xchg
jecxz
sub
mov
call
mov
fs
xchg
cmps
das
push
adc
loope
sub
shl
cld
test
adc
ins
adc
dec
cs
retf
out
shl
scas
adc
cdq
ins
push
movs
pop
in
push
out
out
push
movs
movs
sub
cmps
outs
test
xchg
and
sub
sti
sub
out
lods
shl
scas
xlat
popa
dec
sub
and
das
shl
adc
push
and
out
(bad)
mov
push
xchg
loope
outs
shl
in
xlat
out
jmp
nop
jmp
pusha
add
and
nop
loop
outs
shl
imul
and
outs
push
cmps
call
arpl
ins
adc
adc
cmps
je
push
cmp
and
pop
mov
cld
cmp
mov
popa
xor
adc
adc
(bad)
inc
es
cmps
dec
mov
in
(bad)
dec
add
jg
(bad)
sub
mov
jg
mov
adc
ds
push
xor
jg
ins
mov
cmp
mov
mov
mov
cld
push
cwde
pop
pop
mov
mov
cld
jl
sub
sbb
call
aas
push
ret
fsubr
xchg
call
mov
inc
inc
mov
rcl
lods
adc
cld
cmp
(bad)
mov
call
ror
sar
(bad)
call
mov
sbb
std
test
jae
sti
fisub
pop
mov
repz
xchg
clc
dec
sbb
cs
inc
dec
call
(bad)
or
std
mov
pushf
cmp
mov
cmc
(bad)
stc
sub
sbb
mov
dec
adc
jb
das
jns
int3
test
sbb
and
repnz
test
lea
inc
cmp
mov
pop
(bad)
(bad)
test
xor
shl
dec
mov
jns
inc
inc
xchg
mov
(bad)
xchg
sub
jmp
add
or
ja
xchg
jp
or
dec
push
repz
inc
jl
cs
xor
mov
das
xchg
je
sub
test
push
lods
mov
int
sub
or
push
shl
add
fcom
or
jns
scas
test
push
push
sub
pop
out
sub
and
outs
push
mov
repnz
aam
stc
lods
xlat
mov
add
adc
push
in
shl
dec
test
cmps
mov
shl
xchg
outs
shl
fild
shl
loope
push
daa
movs
scas
xchg
jecxz
imul
ja
push
mov
clc
jmp
inc
sub
mov
mov
push
jecxz
scas
adc
xchg
jmp
sbb
arpl
adc
sub
loop
imul
sub
bound
sub
adc
cmc
out
xchg
cmps
jg
adc
aas
ins
xchg
cmps
sub
adc
or
data16
(bad)
jecxz
outs
xchg
and
out
push
and
out
push
and
push
scas
adc
mov
xchg
xor
cmps
cmp
xchg
loopne
cs
popa
inc
outs
xchg
loop
jmp
and
mov
xchg
movs
das
add
xor
(bad)
mov
ds
mov
jmp
std
call
stos
push
repnz
jmp
cmps
les
test
(bad)
and
mov
nop
and
es
xchg
popa
pop
adc
and
mov
test
fs
mov
jbe
adc
out
pusha
aad
inc
bound
lds
shl
mov
adc
xlat
loopne
cmps
xchg
arpl
popa
pop
pusha
push
jecxz
mov
push
out
in
loopne
pusha
push
cmps
imul
daa
ja
push
mov
cmp
pop
loope
arpl
and
out
out
and
pusha
adc
out
daa
adc
cdq
and
es
push
and
outs
loopne
jecxz
jecxz
arpl
fs
data16
(bad)
jecxz
and
out
xlat
jecxz
jecxz
addr16
arpl
mov
iret
out
mov
xchg
arpl
and
gs
pusha
mov
(bad)
sti
daa
jmp
push
mov
inc
adc
xor
retf
icebp
call
mov
retf
cwde
sbb
or
mov
out
rol
in
mov
(bad)
int3
or
inc
push
sbb
stos
int
nop
cli
mov
jg
mov
mov
test
leave
add
push
test
xchg
lea
push
dec
mov
inc
inc
jb
and
add
mov
scas
jge
(bad)
retf
or
adc
std
sbb
stos
dec
jl
data16
adc
cld
scas
xchg
xor
pop
xchg
xor
pushf
mov
xchg
pop
or
sub
add
cmp
jnp
mov
dec
(bad)
sar
xor
retf
cwde
mov
adc
cmp
sar
sub
jno
sbb
or
(bad)
cmp
dec
push
call
add
adc
or
fstp
ins
mov
mov
add
mov
inc
xchg
sub
(bad)
and
int3
jns
and
mov
xor
jmp
ins
mov
(bad)
push
jbe
nop
fsubr
retf
dec
push
cmps
lea
mov
jmp
in
mov
mov
loope
sbb
cmp
int3
sub
stc
ret
adc
xor
int
jno
or
in
inc
shr
inc
dec
and
xchg
movs
add
push
scas
or
pop
scas
dec
leave
(bad)
and
push
(bad)
bt
add
pshufw
or
loope
lea
mov
lahf
mov
add
dec
out
push
or
test
pushf
push
lods
dec
add
jne
or
mov
or
sub
ret
mov
or
sub
or
loop
dec
(bad)
bound
cs
iret
push
inc
inc
shl
retf
and
dec
(bad)
(bad)
or
and
add
pusha
push
iret
pop
pusha
xchg
fdiv
jo
lahf
ss
push
jmp
add
jae
mov
mov
add
popa
pop
dec
adc
or
sub
push
call
lds
or
(bad)
lea
inc
mov
dec
iret
repnz
inc
js
retf
and
lea
dec
(bad)
and
inc
rsm
fs
inc
inc
push
mov
dec
pop
jmp
(bad)
mov
push
push
pop
push
gs
fadd
jmp
lds
xchg
call
cs
std
push
jmp
clc
add
adc
ret
je
pusha
ret
into
xchg
cdq
js
xchg
mov
scas
mov
jmp
mov
iret
aad
fs
aam
inc
iret
xchg
stos
cmp
sub
dec
adc
jmp
cmp
sub
push
ret
out
out
and
loopne
mov
js
xlat
jecxz
and
data16
loopne
bound
es
adc
push
and
movs
(bad)
loopne
out
pusha
data16
adc
ins
in
addr16
push
cmps
jbe
xchg
and
cmps
push
daa
test
pop
out
and
loopne
mov
xlat
gs
mov
sbb
es
xchg
loopne
and
xchg
pusha
out
es
and
addr16
sti
mov
pop
movs
and
add
jecxz
and
and
push
loope
out
and
xchg
cmps
push
data16
loope
xchg
es
adc
out
daa
push
loopne
addr16
mov
cmp
adc
ret
and
cmps
dec
movs
xchg
es
xchg
(bad)
xlat
popa
push
popa
aad
push
daa
sbb
out
loopne
jecxz
popa
aam
out
xchg
mov
out
loope
loop
out
fs
mov
(bad)
es
push
mov
ret
mov
dec
adc
nop
in
pusha
xchg
in
cmps
fsub
frstorw
xchg
ss
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
xor
jb
pusha
push
repnz
pop
cmps
sub
cmps
je
shl
es
fs
mov
push
mov
test
aad
mov
and
adc
pop
out
data16
cmps
adc
cmps
movs
cmps
xchg
popa
test
daa
adc
repnz
and
cmps
pop
and
adc
out
bound
adc
popa
xchg
out
gs
and
jecxz
out
loop
movs
push
mov
push
popa
and
sub
push
jecxz
mov
shl
mov
arpl
loope
es
mov
push
cmps
push
pusha
push
jecxz
mov
pop
and
mov
es
daa
scas
jecxz
pusha
ins
mov
xchg
and
mov
adc
ret
and
push
in
shl
adc
push
pusha
aam
aad
fsub
cmps
pop
adc
and
adc
pusha
in
out
pusha
rep
pop
loop
in
daa
cmp
in
clc
xor
dec
aad
test
aaa
inc
shl
jbe
mov
ja
and
leave
dec
sub
or
(bad)
jb
into
cwde
mov
cli
sub
mov
ds
jmp
stos
add
push
fild
(bad)
out
push
js
xchg
dec
aad
mov
mov
jb
jmp
jb
push
mov
mov
adc
jb
mul
jmp
add
add
out
mov
xor
inc
(bad)
enter
into
ja
or
ss
push
mov
movs
pop
cs
inc
mov
cwde
cmp
add
sbb
mov
pop
xchg
push
in
mov
fdivr
inc
or
pusha
in
pop
push
sbb
inc
jb
dec
test
xor
jle
sub
sbb
fsub
lea
cmp
pushf
sub
hlt
or
(bad)
xchg
mov
(bad)
cwde
hlt
jbe
out
pop
jecxz
push
lea
push
mov
adc
lea
in
sbb
imul
lea
xchg
mov
hlt
fnstenv
inc
or
mov
and
inc
in
xor
xchg
aas
mov
push
sbb
clc
jns
xchg
(bad)
mov
jmp
clc
shl
test
mov
std
jle
mul
jle
retf
jg
out
jle
cmp
arpl
in
arpl
in
jg
in
jg
cli
(bad)
je
clc
ds
in
jg
in
jg
in
jg
in
jg
mov
jge
mov
loopne
out
test
and
(bad)
jge
(bad)
ds
addr16
jle
call
jg
in
jg
lods
jb
jecxz
jbe
bound
jb
jmp
aaa
mov
lods
jo
jb
jle
jbe
jle
dec
in
jg
in
jg
sub
pop
aas
dec
sub
sahf
out
push
and
mov
push
jp
sub
inc
inc
cmp
test
repz
fidivr
push
outs
sub
jb
ss
pop
jg
fs
jp
jg
fwait
mov
sahf
cmp
scas
push
add
call
in
jg
in
gs
(bad)
cmp
add
addr16
add
int
outs
jmp
outs
repnz
mul
jg
push
jg
call
out
fisubr
call
in
jg
in
gs
in
(bad)
jg
add
sub
add
push
outs
mov
fs
mov
call
mov
in
dec
imul
mov
sahf
int
scas
pop
pushf
lds
fcmove
pop
jg
in
inc
call
pusha
mov
jecxz
and
mov
cmc
ds
pop
fisubr
jo
cmps
jp
and
sub
pop
xchg
pop
movs
pop
inc
(bad)
in
dec
push
add
fidiv
xchg
mov
adc
sub
add
outs
pop
dec
cmp
and
inc
and
call
loop
cmc
(bad)
ins
iret
lods
test
inc
in
outs
(bad)
fistp
stos
mov
test
push
js
outs
fisubr
cmp
lods
add
outs
jae
outs
neg
out
add
clc
out
stc
pushf
sub
loop
sbb
mov
data16
push
ficom
lea
jno
loopne
mov
cmps
mov
je
(bad)
es
inc
push
mov
add
cld
and
push
popf
out
sahf
into
clc
sti
add
addr16
cmps
imul
jmp
cmps
cmps
mov
outs
call
out
outs
sbb
jle
mov
cmps
pop
(bad)
cld
push
cs
outs
out
add
sub
xor
add
and
addr16
loop
pop
fs
xchg
lods
inc
jle
repnz
outs
xchg
sbb
push
fistp
push
outs
lods
sbb
mov
das
cli
dec
sub
ds
inc
add
mov
jg
sbb
mov
das
cli
push
jmp
mov
and
cs
push
jg
ret
ja
(bad)
lock
ins
out
and
and
mov
loopne
mov
cli
ds
mov
jg
out
jg
data16
js
mov
cld
sub
out
add
push
(bad)
mov
shl
jg
push
pop
iret
ja
(bad)
lock
dec
fs
mov
jge
jg
lea
sbb
jae
outs
test
mov
jg
idiv
je
stos
push
cwde
mov
cmps
sbb
jmp
and
outs
mov
(bad)
aas
das
es
cmps
inc
dec
outs
cmp
stos
jae
push
push
mov
(bad)
movs
ret
cld
test
inc
pop
push
outs
mov
jmp
cli
and
jle
push
sbb
pop
cs
call
push
inc
and
jle
iret
test
pop
icebp
scas
test
mov
dec
outs
and
sahf
jle
repnz
ret
outs
or
ds
(bad)
cs
push
imul
scas
cmp
add
mov
jmp
loopne
jg
mov
scas
dec
cmp
outs
shl
inc
pop
cld
inc
jg
lahf
jae
shl
ds
push
mov
ds
data16
xor
pop
add
jb
jae
(bad)
lock
fs
xor
inc
icebp
mov
addr16
and
aas
sbb
dec
outs
xchg
and
into
inc
pop
add
out
imul
and
inc
fsub
cmps
mov
inc
icebp
jmp
jge
inc
mov
inc
icebp
call
push
aas
popa
lock
inc
pusha
jle
push
pop
push
jg
pop
shr
mov
jg
mov
push
inc
add
jle
and
fs
loopne
jg
cmp
jmp
sub
loopne
lahf
and
cs
dec
mov
push
loopne
inc
mov
inc
imul
data16
jmp
lock
(bad)
pop
ins
outs
or
clc
das
cli
mov
mov
jge
mov
sbb
retf
inc
cmp
cs
mov
test
push
sub
fmul
js
popa
push
xchg
inc
adc
push
sbb
and
push
xchg
cmps
mov
pop
push
loopne
call
repz
shl
pop
nop
loop
sbb
inc
pushf
shl
lds
mov
shl
ficom
out
sbb
push
out
call
movs
pop
adc
das
push
aam
lods
push
xchg
cmps
mov
push
and
cdq
aam
cmp
adc
loope
fist
inc
pop
adc
mov
xchg
arpl
sahf
push
and
push
push
cmps
cwde
ficom
sbb
daa
mov
pushf
adc
cs
push
daa
out
sbb
loop
sbb
mov
jnp
adc
out
ficom
addr16
pushf
adc
call
xchg
sbb
mov
sbb
adc
loop
fst
mov
push
adc
and
iret
les
pop
push
push
pcmpgtd
mov
xor
push
in
hlt
int3
xor
jnp
push
dec
inc
dec
call
xor
cmp
mov
sub
dec
cs
mov
outs
cmp
lods
sub
pop
mov
jl
xchg
push
mov
test
mov
jae
sbb
mov
xor
sub
mov
clc
pusha
outs
fistp
bound
inc
jl
jo
and
dec
push
push
loope
push
enter
jb
popa
mov
sub
dec
sub
sbb
inc
mov
and
jl
xchg
mov
aam
out
push
xchg
es
scas
lods
pop
mov
add
cmps
ret
pusha
inc
(bad)
in
mov
jbe
mov
mov
dec
dec
cmp
aaa
aaa
mov
or
mov
dec
inc
xor
fidiv
das
(bad)
out
mov
mov
xor
outs
hlt
in
jecxz
je
cmp
mov
(bad)
jmp
mov
or
lea
dec
mov
xor
add
adc
dec
cmp
sti
jle
pushf
dec
lahf
mov
mov
test
xchg
dec
add
paddd
into
dec
test
pop
or
aaa
leave
ret
sbb
adc
dec
fadd
mov
popf
pop
les
push
dec
fimul
adc
mov
xchg
sbb
xlat
xchg
ret
push
rcl
push
lahf
sbb
(bad)
jge
(bad)
jmp
dec
inc
pop
mov
int
gs
mov
popa
add
adc
retf
rol
pop
push
inc
aad
dec
adc
dec
popf
sbb
xchg
inc
pop
add
(bad)
add
or
(bad)
dec
cmp
(bad)
dec
xor
aad
mov
or
sub
adc
out
iret
xor
iret
push
inc
dec
add
cwde
ret
imul
jne
mov
pop
lss
ret
push
outs
fisttp
sbb
dec
push
sub
jecxz
pop
repnz
vcvtps2dq
push
push
dec
pushf
dec
or
jl
int3
not
or
in
iret
inc
repnz
xor
(bad)
pop
xchg
lea
mov
lea
dec
jb
mov
sbb
scas
test
sbb
(bad)
dec
pop
or
in
iret
add
test
xor
in
pop
fmulp
aad
dec
jge
or
aam
add
rcr
xor
xchg
in
xchg
dec
jne
or
sbb
sbb
pop
rol
setb
out
add
inc
xchg
mov
cmp
pop
out
push
into
fidivr
xchg
lahf
mov
cmps
push
cmp
mov
mov
cmp
mov
pop
or
dec
push
push
jbe
push
mov
dec
sub
jl
pop
or
scas
inc
push
push
push
inc
cld
hlt
dec
sub
xchg
imul
pushf
scas
adc
retf
jmp
out
push
(bad)
pop
jle
(bad)
aad
adc
iret
cmps
sbb
cmps
push
or
xor
repz
retf
ror
push
repz
xor
fstp
sbb
dec
inc
lea
dec
mov
pop
xchg
inc
mov
sub
pop
aad
pop
xchg
push
into
arpl
ss
push
aad
dec
lea
and
pop
xchg
sbb
sub
and
test
xor
push
(bad)
pop
out
int3
imul
mov
dec
in
test
retf
jmp
(bad)
fsub
pop
add
xchg
fld
fmul
fwait
int
pop
xor
xchg
push
rcr
es
jb
(bad)
cmps
push
es
ss
loop
pop
(bad)
sbb
push
inc
pop
(bad)
dec
loop
xor
or
push
into
out
ss
retf
inc
push
sub
push
(bad)
pop
mov
push
sub
xor
pop
scas
scas
fxch
test
pop
into
mov
xor
dec
outs
mov
jb
(bad)
(bad)
mov
push
(bad)
(bad)
(bad)
movhps
xchg
jl
sbb
adc
(bad)
push
mov
cmc
int
out
xchg
inc
pop
push
and
ficomp
pop
call
sub
pop
xor
push
push
jp
mov
push
cmp
jmp
retf
(bad)
(bad)
loop
jno
(bad)
test
dec
pop
jae
xor
(bad)
push
sub
loopne
test
cmps
in
pop
icebp
dec
cmp
xchg
xchg
add
adc
popa
fwait
pop
xlat
bound
xlat
mov
sub
shl
xor
xchg
push
and
push
push
fs
rcl
or
xchg
or
arpl
xchg
adc
pop
rcl
cmps
xchg
shl
nop
xchg
popa
sub
push
mov
repz
and
xchg
xlat
bound
xlat
push
es
adc
cmps
add
push
loope
xchg
adc
push
adc
out
push
push
pusha
adc
(bad)
and
rcl
mov
and
adc
cmps
outs
push
push
addr16
loop
push
adc
in
adc
mov
(bad)
push
xchg
mov
dec
push
pop
and
adc
mov
sbb
xchg
and
aam
es
push
push
lods
adc
bound
adc
mov
xchg
shl
inc
push
push
daa
(bad)
loopne
xlat
shl
rcl
and
adc
xlat
aam
mov
cwde
xchg
xchg
arpl
adc
mov
xor
dec
push
test
fs
inc
push
adc
je
jne
push
popa
xor
xchg
and
cli
jecxz
mov
mov
stos
stc
push
xor
cld
mov
retf
xchg
add
cli
xor
jnp
mov
or
mov
jmp
cmc
sbb
jecxz
sub
sti
push
dec
retf
dec
mov
jnp
test
int3
inc
(bad)
arpl
and
and
stos
test
cmp
mov
(bad)
lds
push
pop
xchg
mov
(bad)
stc
jge
mov
inc
test
push
mov
or
inc
inc
dec
nop
ins
pop
mov
mov
stos
ret
(bad)
in
rcl
jge
fs
jae
add
mov
add
cmp
movs
std
push
in
ds
mov
sbb
jle
add
das
cmps
fcomp
cmps
lea
cmp
xlat
jmp
jo
xchg
sub
push
mov
inc
mov
das
rcr
push
lea
test
xor
(bad)
pop
xchg
mov
int3
jmp
mov
mov
mov
xor
xchg
mov
jnp
fimul
shl
pop
or
scas
inc
jg
jb
add
or
cli
cmp
xchg
popa
inc
sub
popf
sub
xchg
fimul
imul
push
jb
nop
xchg
pusha
sbb
jecxz
push
shl
push
pop
pusha
scas
rcl
mov
not
push
addr16
push
nop
cmps
cmp
shl
add
and
xchg
push
pusha
lea
push
es
aam
and
push
adc
in
xchg
and
shl
out
pop
pop
loopne
aad
jecxz
push
push
and
push
xchg
mov
xchg
push
and
push
jecxz
pop
shl
dec
adc
fs
push
xchg
cmps
adc
push
mov
pop
(bad)
shl
and
xchg
push
and
xchg
push
loop
push
xlat
daa
mov
adc
add
pop
movs
test
mov
mov
push
mov
xchg
adc
loope
xchg
push
out
rcl
and
out
aam
pusha
stos
(bad)
shl
ins
push
pop
and
adc
daa
(bad)
push
push
pusha
cld
rcl
push
adc
lds
adc
mov
push
daa
push
rcl
call
pusha
out
push
mov
das
xchg
xchg
daa
in
push
adc
repz
addr16
adc
aam
cmps
inc
xchg
stc
loopne
cmp
push
add
pop
icebp
popa
xchg
xor
inc
xchg
dec
rep
jns
adc
mov
mov
mov
adc
mov
(bad)
inc
ins
and
daa
addr16
dec
push
cmp
cmp
jmp
js
pop
pop
inc
inc
outs
mov
call
test
xchg
mov
mov
add
mov
mov
popf
cmps
(bad)
out
or
(bad)
imul
mov
imul
xor
xor
js
or
mov
movs
dec
cmp
jge
inc
xchg
cmps
or
and
push
fdivr
jb
pop
stc
sbb
fdiv
jae
sbb
test
popf
mov
enter
mov
inc
mov
in
test
mov
adc
mov
lea
mov
mov
call
sbb
sar
add
sbb
mov
add
inc
mov
jecxz
ins
shl
(bad)
int3
mov
(bad)
aaa
stos
enter
jbe
fsubr
ins
or
mov
test
jecxz
mov
mov
mov
pop
popf
pop
jmp
sbb
mov
mov
cmps
data16
ja
dec
outs
cmps
cld
mov
xor
fadd
es
hlt
movs
mov
ja
int
int
push
nop
div
push
test
dec
cmp
dec
test
jl
pop
mov
ja
sub
in
cmc
test
cld
xor
push
ffreep
ins
cmc
xchg
ins
mov
mov
lods
pop
or
cmc
test
xor
or
ja
(bad)
sbb
and
out
ja
imul
xlat
aaa
in
cmc
test
ss
and
aaa
inc
stc
ins
cmc
xchg
lods
push
ret
in
cmc
test
out
test
das
lods
xlat
fucomip
cmc
test
mov
mov
sub
sub
xlat
imul
cmc
test
out
aaa
inc
cmp
xchg
pop
sub
test
std
xor
nop
out
ja
push
ins
cmc
xchg
lods
xchg
lahf
in
cmc
test
std
xor
out
test
ins
ins
cmc
xchg
das
lods
pop
mov
cmc
test
std
xor
(bad)
jge
pop
mov
ins
cmc
xchg
lods
xlat
dec
in
cmc
test
mov
test
sub
cmc
test
out
test
sub
xor
xor
aas
std
lock
mov
ss
fdiv
sub
aam
sub
shl
sub
int3
or
pop
enter
xor
in
dec
inc
inc
shr
cmp
pop
retf
lods
das
lock
ins
inc
shr
and
cmp
bound
push
pushf
jnp
adc
add
clc
sbb
iret
cmp
repz
jne
(bad)
fisttp
pop
add
sub
cmp
sbb
popf
xor
adc
es
fcmovne
push
(bad)
cld
das
jge
jl
sub
fwait
inc
ins
sub
sub
sub
and
in
jle
retf
or
xchg
inc
dec
je
sub
fs
in
xchg
mov
scas
mov
adc
pop
dec
js
lahf
retf
arpl
inc
jmp
xor
push
pop
lea
shr
add
sub
mov
mov
cmc
adc
pop
dec
retf
inc
das
jge
mov
sub
test
pop
mov
cmc
test
out
lods
xor
or
sub
push
pop
rcl
add
adc
xlat
lahf
cld
jne
pop
mov
jl
loopne
xor
xchg
inc
ror
adc
sub
pushf
add
mov
or
push
fst
jg
pop
or
adc
inc
and
sar
xor
dec
push
mov
pop
arpl
mov
sub
pushf
sahf
xor
arpl
sub
and
sub
push
mov
push
mov
cmp
mov
push
mov
es
adc
inc
dec
jne
mov
sbb
jl
push
arpl
int
arpl
and
shr
push
js
pop
xchg
or
ds
ja
xchg
test
and
xor
les
cmp
sub
lock
or
rcl
xchg
adc
sbb
lods
pop
xlat
pop
push
aas
xchg
into
or
dec
pop
mov
test
retf
xor
xor
je
arpl
xor
ds
jne
cld
call
pop
shl
fs
ins
es
dec
sub
inc
sbb
subps
jl
imul
xchg
adc
sbb
or
ds
cmp
dec
pop
jns
test
xor
cmp
sbb
jae
arpl
xor
mov
sub
sbb
and
lods
pop
sbb
ins
es
cs
or
subps
or
push
jp
sub
mov
ja
push
je
lods
pop
(bad)
jp
aas
sub
adc
or
es
bound
ins
repnz
cmp
sbb
jae
arpl
icebp
cld
and
sub
enter
mov
xor
dec
das
pushf
cld
popf
outs
inc
mov
subps
or
push
xchg
sbb
adc
sbb
xor
cwde
leave
add
aam
or
xchg
cs
iret
xor
cmp
sbb
jae
arpl
xor
push
xor
push
and
lods
add
mov
inc
sbb
xor
fmul
icebp
cld
mov
push
and
lods
add
xchg
shl
jno
sbb
xor
clc
mov
cld
sahf
xor
push
and
lods
cmp
xchg
shl
jno
sbb
pop
push
push
push
aas
xchg
mov
out
ja
cld
loop
ins
pop
or
pop
jnp
lods
xor
mov
xor
xor
adc
mov
or
pop
arpl
or
sub
and
out
cld
adc
push
cmp
mov
lods
cs
mov
pop
loop
pop
mov
sahf
out
dec
rcr
dec
push
jecxz
xchg
and
aad
jl
mov
mov
sbb
push
and
lods
das
or
or
sub
dec
sbb
push
and
lods
das
and
or
sub
(bad)
inc
sub
sub
pop
(bad)
lods
das
cmp
push
jl
xor
inc
sub
rcl
pop
xor
lods
das
aad
pop
sbb
sbb
pop
sub
clc
push
and
lods
das
in
repnz
sbb
aas
xor
push
push
sub
loopne
and
lods
das
test
fstp
xor
jbe
sub
mov
pop
jnp
lods
das
popf
repnz
fnstsw
sub
dec
imul
push
and
adc
xor
cmps
arpl
pop
push
and
lods
das
dec
repnz
push
std
push
jl
fwait
xor
mov
push
and
lods
das
repnz
lds
jl
lahf
xor
xchg
ja
sbb
push
and
lods
das
jge
sbb
fstp
xor
out
jno
sbb
push
and
lods
das
adc
push
jl
div
sub
(bad)
or
cmp
pop
retf
and
popf
push
jl
fbstp
sub
fiadd
and
lods
das
(bad)
pop
gs
fnstsw
xor
ss
sub
enter
cmp
lods
das
(bad)
sbb
(bad)
xor
push
sbb
lock
and
lods
das
cmc
repz
sbb
jl
and
sub
data16
cwde
push
and
lods
das
dec
repz
sbb
xor
mov
(bad)
sar
sub
shr
mov
cmp
sar
jne
dec
adc
xor
pushf
lock
pop
clc
mov
imul
and
dec
push
jecxz
mov
repz
sbb
(bad)
(bad)
test
in
sub
shr
sbb
cs
pop
inc
shr
adc
sti
data16
add
cmp
cmc
out
jmp
ins
pop
rol
sub
les
mov
pop
xchg
sub
loopne
or
push
pop
das
ins
pop
das
lods
movs
outs
or
(bad)
mov
jb
push
arpl
pop
repz
cmp
sub
and
adc
or
rcl
push
and
pushf
pop
fst
out
mov
mov
push
in
inc
inc
aas
push
dec
mov
adc
sub
ss
push
jg
stos
xor
in
jge
dec
adc
fisttp
sub
sub
(bad)
and
pop
xchg
dec
in
mov
cmp
ins
and
jae
pop
cmps
das
sub
adc
jae
dec
mov
sub
inc
ret
ins
out
mov
dec
outs
mov
(bad)
pop
scas
cmp
jbe
inc
push
fst
lea
sahf
jns
lods
aam
(bad)
(bad)
adc
ficom
jb
test
xchg
add
sbb
and
xchg
loop
add
mov
ins
inc
adc
jae
xchg
cmps
repnz
jns
push
and
inc
xchg
out
add
mov
enter
mov
push
popa
adc
push
and
ret
sbb
inc
xchg
daa
and
add
addr16
xchg
and
add
and
adc
mov
ret
and
rcl
xchg
(bad)
push
xchg
in
inc
push
cmps
pop
inc
push
mov
ret
out
inc
push
mov
icebp
adc
xor
nop
out
inc
push
and
add
es
push
and
add
movs
dec
ret
push
add
out
adc
inc
xchg
and
adc
pop
ret
push
in
lds
and
ret
push
push
cmps
ja
shl
repz
adc
and
inc
adc
retf
inc
adc
or
les
xchg
les
cmps
fwait
add
mov
ret
add
jmp
cmps
mov
shl
cld
inc
adc
and
aad
push
add
and
test
cmps
add
stc
xor
xchg
lds
js
inc
rol
push
inc
mov
adc
into
dec
enter
repz
xor
jns
jne
inc
dec
mov
pop
xor
aam
loop
mov
mov
add
jns
mov
lods
cmp
push
push
enter
repnz
pop
mov
xchg
jge
sub
cmp
mov
mov
push
mov
imul
loop
(bad)
lea
add
outs
lods
jl
cs
(bad)
mov
rcl
sbb
imul
clc
scas
stos
lds
test
int3
aas
js
aam
out
xchg
or
or
sub
pop
push
xchg
out
add
jmp
call
xor
push
xchg
cmps
cmp
fcomp
sbb
gs
lods
mov
cmp
arpl
sbb
clc
sahf
mov
cmp
adc
mov
push
repnz
xchg
inc
dec
xchg
fdivr
inc
xchg
lods
mov
lea
xor
or
xor
push
push
mov
call
mov
movs
adc
mov
das
bound
aaa
push
repnz
push
and
test
popa
cmp
div
xor
or
fcom
dec
xchg
push
scas
loop
fucomi
ret
inc
or
lock
pop
cmp
ret
mov
add
and
push
ds
test
ret
into
adc
loop
mov
pop
add
mov
loop
jb
and
sbb
inc
ret
popa
adc
sub
pop
fst
or
inc
inc
loopne
xor
int
(bad)
std
mov
push
js
inc
add
mov
push
loop
inc
add
int
adc
ins
xchg
mov
mov
sbb
aad
or
xor
mov
xor
fucomip
ins
sbb
retf
adc
and
inc
fist
popa
sbb
into
and
and
add
adc
rcr
mov
fidiv
adc
leave
add
pop
out
adc
and
adc
repnz
add
add
daa
xchg
inc
or
adc
add
sbb
fnstcw
add
sub
idiv
sbb
dec
adc
cdq
dec
lods
or
loop
fnsetpm(287
repz
(bad)
jmp
repnz
dec
and
cmp
repnz
ror
inc
inc
sbb
(bad)
pop
hlt
mov
data16
jmp
into
ret
push
inc
sbb
lock
sub
sbb
lds
repnz
add
dec
push
(bad)
test
push
inc
into
dec
mov
inc
add
add
dec
mov
jge
cli
inc
shl
aad
mov
adc
ss
in
push
push
movs
iret
add
push
loopne
add
out
push
(bad)
data16
loopne
inc
shl
call
(bad)
push
out
inc
xlat
daa
jb
push
loopne
adc
add
and
pop
adc
arpl
add
popa
xchg
inc
shl
push
push
xlat
mov
fiadd
cmps
out
push
out
add
daa
sub
xlat
mov
mov
xchg
mov
jge
push
mov
inc
add
fs
add
bound
lds
in
les
sbb
and
adc
daa
add
out
rcl
mov
xchg
and
(bad)
aad
cmp
pop
mov
xchg
xchg
pusha
dec
pop
push
popa
or
and
adc
fld
aad
es
nop
mov
in
push
shl
test
nop
and
les
inc
shl
inc
adc
or
xchg
and
inc
push
cmps
adc
xchg
mov
pop
add
loope
add
loop
adc
inc
push
cmps
push
inc
xchg
and
adc
jg
xchg
mov
jo
cmps
rol
nop
es
xlat
shl
jp
inc
cld
adc
push
jo
gs
xchg
push
out
retf
xchg
test
inc
push
sub
cmp
dec
push
dec
jmp
push
std
dec
mov
shl
idiv
add
ficomp
std
(bad)
mov
mov
pop
mov
cdq
adc
xchg
mov
or
mov
fcom
push
xchg
push
push
push
lea
xchg
cmp
stos
sub
imul
aaa
mov
mov
xlat
push
mov
cli
xlat
push
fdiv
push
push
pop
dec
push
inc
mov
in
sbb
adc
mov
push
aad
fsub
xchg
call
and
data16
inc
mov
mov
sbb
mov
(bad)
repz
les
xlat
test
sahf
sbb
stc
sti
ss
repz
sub
sbb
jmp
cmp
xchg
in
xor
sbb
mov
xchg
nop
adc
xor
jl
dec
push
inc
ja
test
jmp
test
push
fadd
jns
repnz
ins
outs
pop
sub
movs
pushf
sbb
stc
retf
cmp
bound
test
inc
xchg
jbe
into
cs
or
test
jns
popf
jmp
pop
cli
or
fwait
sub
or
cmp
enter
addr16
xlat
or
(bad)
cwde
stc
enter
xchg
sti
sbb
mov
lock
cmp
mov
add
pop
out
jmp
sbb
rcr
fcmovne
int3
adc
sub
fdivr
mov
sbb
fnstsw
pop
cwde
stos
std
xchg
xchg
and
mov
pop
test
inc
stc
out
mov
fs
enter
popf
or
enter
ffree
pop
lds
icebp
loop
sbb
fsubr
sti
pop
push
push
or
xchg
ss
and
sub
movs
add
push
fisub
clc
mov
add
or
and
add
sbb
or
ficom
add
inc
sub
xor
(bad)
aad
repz
test
push
movs
leave
xchg
pushf
je
mov
in
loop
cmps
shr
mov
(bad)
(bad)
stc
loop
shr
adc
rol
fcomp
scas
and
sub
clc
sbb
stos
sbb
jns
imul
add
repnz
(bad)
dec
mov
call
push
shl
aaa
cmp
or
and
lods
xchg
sub
xchg
repnz
xlat
ss
xchg
mov
jae
mov
jmp
call
cmc
fdiv
pop
call
sbb
ins
adc
movs
dec
lods
mov
shl
mov
xchg
daa
adc
out
js
and
jle
loopne
mov
xchg
loopne
cli
xchg
addr16
adc
mov
push
and
cmp
mov
ds
bound
aad
iret
(bad)
push
movs
push
js
cmps
push
cli
push
loope
std
xchg
popa
sbb
shl
mov
mov
xchg
jecxz
clc
shl
jbe
xchg
and
js
mov
mov
clc
push
cmps
lds
push
and
cmp
arpl
(bad)
push
loopne
jns
arpl
cmp
mov
arpl
xlat
cmps
cs
xchg
stos
mov
aad
aaa
jge
jecxz
cmp
bound
cmp
loopne
ds
iret
cmp
and
ds
and
mov
push
sbb
pop
in
jle
and
jg
fs
cmp
push
arpl
cmp
and
push
jecxz
cmp
out
js
loop
mov
aam
or
adc
or
push
cmps
adc
push
arpl
aad
arpl
shl
dec
mov
repz
movs
and
scas
push
xchg
fimul
cmp
jle
and
js
fild
adc
xchg
xchg
mov
inc
inc
dec
ss
es
inc
push
dec
or
push
es
iret
lods
fs
retf
test
mov
cmps
lea
jmp
push
inc
mov
mov
push
pop
cmp
xchg
push
popa
test
xor
imul
scas
mov
add
bound
mul
stc
ret
push
inc
jp
shr
inc
push
mov
dec
cmps
jbe
inc
sbb
(bad)
xadd
rcl
(bad)
pop
sub
(bad)
rcl
cmps
pushf
fisubr
clc
jb
or
mov
test
pop
jb
(bad)
pop
xchg
sbb
outs
xchg
mov
mov
xchg
mov
repnz
call
es
cld
add
push
inc
mov
(bad)
lods
pushf
loop
inc
mov
xchg
mov
or
enter
ja
cmp
les
mov
and
adc
xor
in
rcl
pop
lods
inc
cwde
test
xchg
fs
repnz
test
fadd
cmp
mov
mov
jnp
lea
call
les
xchg
jno
dec
aas
mov
pop
rcl
(bad)
pop
mov
jmp
jo
mov
sbb
popf
inc
push
mov
add
pop
mov
test
lock
inc
mov
ins
retf
push
mov
xchg
mov
pop
add
inc
jns
mov
call
vmread
push
jle
loopne
jg
arpl
push
fdivr
push
addr16
cmp
mov
outs
call
jle
mov
cmc
aas
shl
jl
push
data16
jns
mov
mov
mov
push
cmp
push
data16
adc
pop
cmp
daa
and
push
addr16
adc
cmp
xchg
jecxz
jns
jecxz
jge
and
cmp
shl
inc
cmp
jecxz
mov
push
retfw
clc
push
daa
sar
adc
loope
cmp
loopne
jns
loop
cmp
data16
mov
push
cmps
mov
shl
mov
xchg
and
xlat
loopne
cmp
mov
dec
mov
push
adc
addr16
cld
push
popa
pop
mov
xchg
mov
and
xchg
out
cmp
and
clc
adc
mov
shl
js
xchg
pusha
cmp
mov
xchg
arpl
jg
cmps
pusha
jns
mov
jns
mov
xchg
mov
sbb
xchg
stos
repnz
bound
jecxz
addr16
cmps
xchg
rol
lea
scas
push
in
ja
mov
sub
jl
pop
pop
xor
popf
test
into
xor
jno
xchg
and
les
mov
in
mov
push
movs
idiv
xchg
cmps
mov
cld
push
mov
test
xlat
jecxz
cmp
cmps
aam
shl
fdivr
xchg
and
clc
aad
movs
mov
shl
mov
shl
clc
aas
push
out
ds
in
cmp
data16
jge
mov
adc
mov
xchg
addr16
mov
adc
cwde
(bad)
xchg
es
mov
push
mov
das
mov
adc
and
aad
cli
mov
aad
sar
into
cmp
push
aas
pop
and
cmp
push
movs
and
push
movs
call
mov
push
pusha
cli
aas
xlat
loop
mov
adc
movs
dec
cmp
pusha
push
jle
loopne
aas
aam
pop
std
xchg
mov
fdivr
(bad)
data16
mov
stos
jge
and
jp
cmps
repz
push
out
mov
push
movs
cmp
mov
adc
(bad)
jp
and
cli
adc
cmp
loopne
aam
cmps
xor
jo
mov
sub
enter
adc
push
das
mov
(bad)
push
jno
mov
adc
(bad)
jl
out
clc
push
out
js
movs
mov
pop
cmps
xchg
cld
xchg
mov
sbb
cmp
out
mov
push
in
mov
push
loopne
mov
adc
jl
xchg
out
js
mov
mov
mov
adc
aad
fidivr
xchg
and
xchg
and
jg
mov
outs
std
adc
push
xchg
xor
pop
and
cld
push
mov
lds
adc
shl
dec
jl
mov
xchg
std
shl
fstp
nop
cmps
popf
clc
adc
in
jge
loope
mov
push
and
mov
aad
cmp
xchg
and
mov
push
mov
enter
mov
adc
out
jp
jecxz
mov
xlat
cmps
mov
push
out
outs
inc
jb
outs
inc
jb
outs
inc
jb
push
dec
jb
jle
jo
dec
(bad)
adc
(bad)
pop
inc
jb
jb
xlat
mov
mov
fisttp
out
scas
mov
(bad)
dec
jb
jp
or
sub
ror
xor
js
xchg
sbb
daa
pop
xchg
sahf
cmp
add
loope
jb
pop
cmp
(bad)
shr
(bad)
setnp
jb
popa
inc
pop
inc
loopne
adc
test
and
pop
inc
inc
lods
rsm
enter
out
jno
inc
dec
add
xor
pop
push
xchg
xor
inc
iret
outs
(bad)
and
xchg
xchg
(bad)
lea
mov
lea
cmp
movs
jl
push
daa
add
bound
bound
pop
(bad)
mov
cld
cs
sub
out
mov
les
adc
jo
inc
(bad)
adc
xchg
xchg
cmp
mov
mov
les
test
daa
movs
jns
adc
mov
cld
shl
outs
sar
ds
push
sbb
in
in
cmp
call
push
call
ret
sub
mov
paddb
inc
std
dec
ins
sar
sub
mov
mov
cmp
pop
sub
and
cmp
and
call
sub
xor
dec
sahf
cdq
fcomp
cmp
test
lahf
xor
push
sbb
dec
sahf
and
jmp
jae
fistp
neg
jmp
xor
iret
cli
es
inc
inc
adc
and
mov
es
xor
or
xor
jp
fdivrp
es
aaa
leave
loop
pop
cmp
xchg
xchg
inc
and
shl
xchg
jb
loope
xor
loop
icebp
pop
and
mov
and
lock
cmps
xor
xchg
and
adc
out
mov
movs
inc
mov
daa
mov
push
in
not
mov
pop
repnz
sbb
mov
in
adc
push
(bad)
cmps
stos
jo
pusha
mov
xchg
out
jae
addr16
mov
and
jno
bound
xor
mov
enter
or
shl
push
jo
movs
pop
lock
es
mov
cmps
and
adc
ja
and
push
pusha
imul
div
and
xor
bound
not
in
repz
out
mov
mov
push
mov
arpl
jo
and
xor
mov
stos
xor
xchg
bound
mov
and
jo
and
repnz
and
jno
mov
retf
es
cwde
cmps
add
inc
retf
lods
jno
aad
xchg
pop
inc
jb
jbe
outs
inc
fsub
jne
push
es
je
dec
push
fs
dec
scas
ret
jp
gs
mov
shl
int3
fs
outs
sbb
dec
pushf
out
xor
sbb
sbb
and
jb
sbb
mov
mov
sbb
(bad)
dec
adc
mov
sub
push
inc
pop
mov
adc
add
retf
sub
les
mov
push
pushf
xor
mov
dec
or
pushf
cmps
ins
das
std
add
enter
xor
inc
popa
int3
test
xor
mov
fcom
stos
repz
fcomp
or
int3
inc
jb
popf
jl
push
std
fdivr
loop
fadd
(bad)
add
mov
mov
popf
test
arpl
movs
pop
mov
or
push
call
pop
mov
cwde
out
adc
jns
pop
cmp
les
popa
jmp
fistp
stos
(bad)
loope
sub
call
lds
repz
sub
fisubr
mov
les
test
les
clc
retf
adc
lea
cmps
test
stos
fcmovne
cli
pop
fs
push
lea
cdq
and
lahf
sbb
fidivr
mov
les
sbb
push
les
push
les
or
push
lds
cli
inc
and
imul
(bad)
mov
xchg
mov
imul
clc
test
ds
ret
mov
ss
(bad)
movs
popa
rol
fidiv
xchg
test
lods
clc
mov
pushf
loop
test
sub
rcr
ds
sub
out
dec
into
(bad)
test
fild
movs
or
sar
mov
jp
into
(bad)
scas
adc
sbb
xchg
test
inc
ret
sahf
iret
(bad)
scas
leave
rol
fimul
sub
test
lods
ret
(bad)
cmp
in
sbb
xchg
lods
rol
test
push
fs
rcl
cmp
xor
pop
xchg
test
mov
add
inc
sub
sub
(bad)
jp
inc
mov
adc
push
add
pop
repnz
repnz
aam
data16
fs
xchg
cmps
stos
xor
jecxz
ss
loope
xor
pusha
jg
push
addr16
adc
mov
out
ss
pusha
or
xchg
pusha
int3
xor
and
xor
fnsave
movs
icebp
adc
loop
aad
sub
push
loope
xor
out
cmc
push
out
not
data16
xlat
popa
xchg
aam
pop
icebp
xchg
(bad)
iret
xor
bound
mov
pop
jo
arpl
jno
data16
adc
xor
and
xchg
and
adc
in
jo
cmps
mov
adc
daa
jp
nop
mov
shl
mov
or
pop
and
jb
popa
adc
(bad)
loop
ja
mov
and
push
out
ss
stos
mov
loopne
mov
out
xor
bound
jb
popw
jno
out
je
loope
xchg
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
addr16
jb
repz
repnz
xor
shl
cwde
mov
es
repz
cmps
in
aam
mov
repnz
and
icebp
push
loope
jno
push
(bad)
mov
and
xor
xchg
mov
iret
jbe
loope
jne
out
xor
fs
xor
loopne
xor
movs
jecxz
push
fs
ss
and
aaa
push
out
aaa
push
out
not
mov
xchg
xlat
jecxz
mov
bound
shl
adc
(bad)
mov
pop
xor
es
es
lock
lods
je
cmps
xor
cmps
jae
push
fs
not
mov
jne
and
nop
loope
xor
pusha
or
arpl
aaa
push
jecxz
ja
bound
aad
cmps
xor
fs
je
cmps
scas
ja
jecxz
ss
loope
repnz
mov
popa
jge
xchg
arpl
xor
(bad)
repnz
or
and
xor
mov
sbb
push
mov
movs
mov
cmps
out
jne
and
xor
es
xchg
loop
mov
popa
mov
repnz
mov
mov
(bad)
data16
out
cmps
inc
mov
clc
ins
mov
es
loopne
mov
lea
cmp
jmp
xor
fwait
test
xor
mov
xchg
push
mov
stos
push
leave
idiv
out
rcr
sti
jecxz
xor
add
pushf
mov
push
mov
push
pop
inc
mov
xchg
push
out
fld
cld
mov
jns
pop
std
je
fmul
xchg
stos
xlat
ins
jb
xchg
sub
dec
pop
mov
test
xchg
jo
xchg
or
cdq
adc
cwde
cmp
pop
dec
push
dec
mov
pushf
add
pushf
shr
jle
adc
cmp
rol
and
dec
inc
inc
aad
test
mov
sub
cmp
cmp
data16
sbb
dec
icebp
mov
mov
inc
push
bound
iret
mov
sub
mov
sbb
and
mov
rcr
iret
add
(bad)
call
dec
ficomp
sbb
sar
mov
inc
jge
xchg
comiss
add
sub
mov
jge
mov
je
mov
jnp
cld
cmp
in
retf
jb
fs
mov
imul
cmp
fwait
or
sahf
mov
xchg
or
jg
dec
ja
ret
sar
comiss
iret
sar
iret
js
cli
sar
cld
mov
jnp
cmp
ja
ins
dec
jbe
out
sar
mov
lds
sbb
inc
mov
fild
cld
cmp
xlat
lds
mov
push
retf
hlt
clc
cmp
js
jge
jnp
cld
test
jb
das
mov
daa
sar
les
addr16
ss
inc
mov
xchg
push
cld
cmp
adc
repz
adc
and
cmp
outs
cmps
out
mov
push
scas
in
or
in
fist
sbb
inc
std
cmp
in
nop
lahf
cdq
ror
sbb
dec
cs
fiadd
scas
pop
in
pop
mov
mov
std
test
arpl
cmc
jmp
call
imul
clc
add
inc
cmc
pop
les
test
pop
xchg
in
inc
dec
sbb
mov
movs
into
mov
fs
scas
mov
inc
sbb
push
and
or
and
mov
mov
or
movs
mov
cmp
sbb
xchg
mov
bound
push
mov
jb
jnp
jb
jae
jp
ja
jns
jnp
jb
jnp
jb
jnp
jb
jnp
jb
jnp
jb
jnp
jb
jnp
jb
sti
push
jb
jae
cmps
shl
jns
jnp
jb
jnp
jb
jnp
jb
jnp
jb
jnp
jb
jnp
jb
jnp
jb
cmp
mov
(bad)
loope
test
adc
add
pop
fs
sub
cmps
dec
cs
(bad)
out
push
arpl
xlat
and
das
xchg
and
aam
daa
test
loopne
sub
daa
out
das
push
and
shl
aaa
ins
pop
data16
movs
pop
push
(bad)
mov
or
cs
loop
sub
and
imul
data16
adc
push
adc
scas
sub
aaa
jmp
(bad)
sub
es
sub
push
scas
shl
or
xchg
out
jmp
and
push
push
cmps
es
es
push
pusha
imul
and
adc
push
movs
cmp
aam
shr
and
scas
adc
dec
push
and
adc
adc
xchg
arpl
test
and
call
adc
out
xchg
mov
mov
xchg
and
shl
sub
mov
push
xor
pop
repnz
pop
mov
mov
popa
repz
push
mov
ror
jno
ret
push
mov
adc
inc
mov
xchg
mov
std
push
pop
push
xchg
fmul
add
dec
cli
sar
pusha
mov
xor
mov
adc
retf
popf
fadd
jbe
pop
fcomp
or
sbb
and
cmp
call
sbb
into
in
add
or
add
mov
pop
mov
(bad)
sbb
cmp
pop
test
(bad)
jae
cwde
cld
test
sub
dec
mov
mov
loopne
shl
(bad)
cmp
(bad)
jp
(bad)
pusha
jb
std
push
je
adc
mov
add
call
pushf
movs
jns
adc
ins
push
jbe
pusha
(bad)
(bad)
pop
test
mov
test
fisttp
xchg
iret
sbb
dec
xchg
imul
sahf
scas
mov
dec
cmp
sahf
lods
test
xchg
dec
xchg
pop
rol
lea
lds
mov
cmp
call
pushf
mov
cmps
mov
xchg
mov
and
add
mov
mov
inc
test
int
add
imul
aad
xchg
adc
add
pop
xchg
nop
sbb
dec
mov
xchg
push
inc
inc
xlat
and
inc
push
mov
adc
inc
adc
add
scas
inc
adc
ins
xchg
inc
rol
sbb
retf
sbb
push
pop
(bad)
mov
adc
push
dec
xchg
fadd
inc
nop
ret
sbb
xchg
mov
adc
ret
mov
(bad)
xchg
shl
sub
push
nop
lods
xchg
add
add
test
adc
sbb
sbb
rcl
cwde
pushf
rcl
or
inc
push
jae
adc
adc
mov
push
ret
adc
ffreep
test
cwde
push
test
pop
mov
pop
mov
iret
pop
mov
pop
mov
iret
pop
mov
pop
mov
iret
pop
mov
pop
mov
iret
pop
mov
pop
mov
iret
pop
mov
pop
mov
iret
pop
mov
pop
mov
iret
pop
mov
pop
mov
pop
aam
ret
xchg
rcl
rcl
(bad)
push
rcl
push
inc
pop
retf
aad
push
dec
fidivr
dec
fnstenv
dec
fdiv
dec
fild
dec
fisubr
push
fnstsw
push
pop
cmp
adc
inc
push
add
nop
inc
dec
pop
fstp
add
rcl
inc
fwait
add
sbb
push
xchg
mov
add
cmc
inc
retf
pop
push
adc
pop
fs
inc
sbb
dec
into
pop
mov
mov
mov
dec
inc
into
pop
mov
(bad)
pop
dec
dec
dec
inc
ret
ja
fsub
js
pop
ret
pop
xchg
mov
ins
retf
je
popa
ret
xchg
in
push
fisub
adc
lea
sub
and
sub
out
call
push
mov
fsubr
xchg
es
push
pusha
arpl
push
fs
ins
xchg
cmps
xor
aad
xor
push
and
call
xchg
pusha
inc
sub
xchg
mov
push
outs
adc
shr
adc
sbb
adc
jecxz
adc
das
shl
lods
adc
repz
mov
in
(bad)
mov
ret
out
stos
push
jecxz
stos
adc
shr
pop
and
outs
xchg
and
push
and
stos
adc
ins
xchg
and
imul
mov
stos
push
shl
and
popa
adc
lea
push
pusha
push
shl
shl
push
mov
fucom
push
movs
data16
cmps
jecxz
xchg
addr16
pusha
imul
addr16
nop
and
loop
pusha
mov
mov
adc
mov
xor
cmps
push
pop
cmp
cmp
dec
adc
mov
jb
packssdw
inc
jbe
add
cmp
aad
sbb
adc
cli
push
cmc
cwde
clc
adc
or
loope
jp
loopne
js
pushf
xchg
or
push
dec
sbb
push
add
lea
push
inc
repnz
ja
stos
icebp
push
mov
sub
(bad)
sbb
pusha
pop
mov
adc
xor
pop
loope
xor
mov
mov
mov
bound
fistp
pop
out
jno
gs
shl
mov
mov
sbb
repnz
jl
mov
xchg
(bad)
mov
clc
push
xchg
dec
movs
(bad)
mov
retf
pop
lahf
mov
mov
mov
fstp
pop
mov
mov
stc
inc
pop
lods
mov
sub
popa
bound
add
xchg
mov
call
rol
mov
mov
pop
xor
ror
dec
jle
push
rcr
or
out
or
cld
inc
test
or
mov
cmp
or
leave
sar
jns
jmp
adc
xchg
stc
test
push
inc
and
jnp
cmp
repnz
cmp
xor
cmp
jnp
cld
sub
mov
ret
sti
pop
dec
ins
sub
mov
sub
sub
(bad)
pop
pop
cmp
ja
jnp
movs
sbb
push
sbb
out
scas
fidivr
ja
cs
jl
cmp
push
pop
aas
jmp
dec
sbb
scas
int3
pushf
mov
jmp
pop
mov
std
(bad)
push
xor
cmps
aas
inc
jb
lods
(bad)
test
jno
mov
imul
jecxz
jno
mov
outs
xchg
outs
jmp
fdivr
cmp
dec
in
cmp
cmp
pop
jge
pushf
sbb
call
ins
movd
mov
pop
stc
daa
mov
call
popa
lods
dec
test
cmp
out
call
xchg
xchg
jnp
setle
das
test
jl
push
jecxz
mov
jb
xchg
jb
push
jo
je
daa
jb
pop
mov
jle
inc
and
std
sub
pop
mov
pop
jno
clc
call
pusha
bound
xchg
jae
push
jo
cli
pop
daa
jb
cmp
(bad)
loope
mov
or
mov
aaa
sub
sub
outs
bound
inc
pusha
pushf
in
add
xlat
cld
and
test
outs
mov
ret
mov
mov
mov
stc
iret
mov
push
and
arpl
jmp
bound
adc
popa
mov
jmp
cmp
jo
outs
pusha
and
inc
jp
jb
imul
mov
and
jb
push
loopne
stos
jmp
pop
(bad)
iret
pshufw
inc
jp
adc
inc
and
jbe
std
xchg
cmp
inc
and
and
mov
cmp
dec
cmp
push
jb
mov
jno
pop
pop
cmp
or
inc
pop
or
sub
and
jo
pop
(bad)
or
add
sbb
idiv
lock
nop
push
xor
push
mov
adc
pop
aas
sub
(bad)
data16
xchg
cmps
xchg
loopne
and
sbb
loopne
mov
shl
mov
push
and
fs
je
xchg
addr16
aad
(bad)
and
loop
loope
cmps
push
out
cmps
or
push
movs
into
out
mov
xchg
push
fldenvw
xlat
pusha
mov
out
sub
sub
jecxz
and
loopne
cmps
cmp
push
and
cmps
adc
mov
(bad)
popa
adc
xchg
and
es
cmps
(bad)
loopne
and
fs
aam
stos
and
mov
ja
xchg
bound
addr16
pusha
cmp
xchg
and
pop
and
cmps
shl
(bad)
mov
shl
push
popa
xchg
and
popa
xchg
out
daa
(bad)
pusha
es
arpl
xlat
mov
sub
adc
mov
xchg
jecxz
and
mov
cmps
xchg
daa
inc
addr16
movs
test
daa
or
and
cmps
dec
adc
dec
inc
fs
cmp
outs
push
(bad)
xlat
daa
xchg
dec
inc
jb
js
dec
push
push
das
xchg
pop
xchg
cli
dec
sub
jmp
repnz
adc
out
jle
fwait
push
in
inc
dec
sbb
jbe
dec
fmul
dec
nop
fxrstor
cmps
pop
out
(bad)
cmc
nop
fisttp
mov
xor
push
dec
retf
mov
cmp
dec
aam
mov
gs
repz
adc
push
in
push
xchg
dec
pop
jns
jo
pop
adc
inc
movs
pop
or
imul
mov
ins
(bad)
std
mov
push
pop
xchg
mov
jns
push
ficomp
(bad)
(bad)
mov
sub
pushf
je
sub
cmp
out
xor
test
and
call
push
call
cmp
mov
adc
fidiv
sub
jbe
xchg
adc
cld
xor
mov
push
aaa
or
sub
call
dec
retf
enter
or
gs
adc
inc
jmp
push
bound
mov
adc
sbb
xor
jns
(bad)
(bad)
test
scas
nop
js
fistp
test
dec
aaa
jns
jge
fstp
cs
shl
mov
out
jp
ins
or
pop
shl
(bad)
inc
int
das
pop
shr
fld
or
push
add
cs
fld
ds
arpl
gs
dec
stos
lods
and
fadd
enter
gs
push
pop
fcomp
pop
add
das
fimul
adc
pop
ror
ds
push
and
int
ja
pop
iret
std
enter
push
pop
stc
das
inc
popa
xchg
adc
jmp
inc
jns
jmp
inc
mov
inc
int
pop
add
cdq
sti
fisubr
call
das
pop
shl
adc
movs
xor
push
(bad)
(bad)
cmp
sub
test
mov
out
cmp
sbb
cli
(bad)
aad
aam
sbb
(bad)
sub
sbb
cmp
inc
ins
(bad)
int
cmps
adc
cmp
pop
lods
jae
adc
test
repnz
ficomp
scas
xchg
movs
dec
jno
adc
sqrtps
cmps
adc
stos
and
adc
and
adc
and
add
xchg
loope
in
loope
and
popa
enter
adc
xchg
mov
(bad)
mov
fs
xchg
pusha
out
cmps
adc
mov
push
movs
mul
xchg
loop
bound
daa
mov
call
dec
cwde
adc
sbb
push
fs
cwde
shl
ficomp
cmps
fcmovu
xchg
loopne
fcom
addr16
pop
xchg
and
xchg
daa
sub
xchg
addr16
push
loope
(bad)
arpl
sbb
mov
int3
popf
aam
int
xchg
es
sbb
adc
adc
sbb
push
daa
pop
sbb
and
push
and
pop
push
out
popf
xchg
and
ficom
mov
add
out
call
push
fwait
aam
aam
pop
jecxz
call
popa
cdq
aam
jecxz
push
out
sbb
mov
jno
adc
bound
fcom
inc
fcom
popa
inc
fst
cmps
retf
fcom
and
fwait
xchg
leave
push
jb
test
jge
fimul
cmp
dec
add
mov
mov
cmc
leave
cmps
adc
clc
mov
sahf
or
or
js
and
shr
mov
cwde
sbb
imul
or
andps
dec
mov
pop
test
fadd
lea
push
repnz
jb
test
or
popa
cwde
(bad)
and
call
and
sbb
mov
enter
and
mov
or
loopne
pop
mov
mov
xchg
jbe
addr16
es
out
int3
sub
cmp
dec
adc
enter
jmp
xor
push
bnd
jae
out
xchg
xor
cmps
xor
adc
sbb
fadd
mov
mov
pop
sub
imul
enter
jbe
push
mov
stos
lahf
(bad)
sbb
jp
movs
adc
or
jmp
int
add
call
test
mov
pushf
cwde
pop
js
sbb
xchg
lea
retf
mov
dec
call
in
dec
loopne
mov
xchg
stc
je
scas
int
mov
cmps
shl
add
retf
cmps
jns
xchg
jecxz
fidiv
out
jb
test
loopne
mov
inc
loope
jmp
push
stos
int3
sub
movs
sbb
dec
sti
fldenv
or
pusha
mov
xchg
scas
jns
cld
xor
pop
imul
cmp
arpl
inc
loopne
call
xchg
scas
into
xor
xor
sub
dec
jmp
fisub
out
mov
fldcw
mov
mov
outs
arpl
imul
loope
js
cmps
mov
outs
call
daa
mov
add
sti
or
dec
sub
mov
add
arpl
mov
clc
shl
mov
xchg
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
rcr
cmp
mov
add
mov
jnp
stos
push
jp
xor
test
mov
fwait
dec
iret
clc
push
test
sti
xor
mov
rcr
shr
fild
ret
xor
enter
push
aad
mov
mov
ret
jg
lock
mov
push
or
sbb
mov
cmp
test
mov
rol
in
xor
pop
xor
mov
mov
xor
jbe
add
pushf
jp
sti
enter
stos
loopne
cmovo
frstor
cdq
jp
sahf
hlt
jns
lock
jns
pop
mov
xor
mov
add
xchg
or
out
pop
iret
push
out
mov
mov
lods
lock
push
nop
in
jge
adc
sahf
mov
fist
js
pushf
mov
pop
idiv
jge
mov
mov
shr
shl
push
movs
lahf
add
add
jo
call
pop
dec
mov
or
pop
mov
in
pop
mov
popf
sbb
jle
loopne
push
hlt
inc
push
or
icebp
mov
xor
mov
sbb
xor
cmp
mov
inc
push
or
xchg
popa
jmp
adc
push
add
mov
push
mov
dec
xchg
jl
push
in
push
jne
dec
iret
lods
push
lahf
mov
aad
arpl
ins
jbe
mov
dec
xchg
jl
push
in
push
adc
and
ret
xchg
pop
imul
add
xchg
adc
icebp
out
push
push
push
dec
mov
jo
arpl
ret
mov
lock
mov
sbb
jb
(bad)
mov
mov
inc
adc
ins
jl
cld
xchg
sub
mov
fsub
mov
cmc
ret
out
sub
xchg
jae
pop
ins
cld
add
jle
inc
rol
cld
pusha
or
hlt
pop
ins
cli
fnstsw
fiadd
call
test
ret
push
mov
dec
outs
ins
push
and
mov
fdivr
mov
ins
push
cmp
pop
mov
dec
test
push
xchg
mov
ins
push
jne
sub
fiadd
cmps
mov
sub
dec
cmp
jge
dec
xchg
jo
(bad)
or
aas
cmp
jge
dec
xchg
jo
jae
mov
sbb
add
xchg
mov
inc
add
jge
dec
nop
jo
hlt
inc
adc
dec
call
popa
adc
clc
jo
mov
test
adc
jle
xor
mov
mov
mov
mov
sbb
mov
mov
mov
jg
mov
mov
inc
loope
add
stos
inc
outs
adc
adc
enter
test
rol
iret
cld
pop
popf
mov
sub
ret
jle
jo
outs
outs
dec
test
pop
shl
mov
jmp
iret
nop
pop
shl
stos
outs
outs
dec
dec
jmp
iret
sbb
xchg
jns
outs
lods
jo
sbb
stos
and
lahf
mov
mov
jge
icebp
mov
ret
and
stos
outs
sub
stc
mov
mov
shl
mov
fdivrp
jecxz
ret
mov
sub
push
sub
xor
cwde
call
lea
mov
sbb
inc
jb
sbb
loope
fcmovnbe
arpl
pop
pop
arpl
fwait
xchg
mov
outs
sbb
jecxz
ficom
aaa
cwde
push
in
fist
cli
pop
push
and
lahf
push
test
out
lahf
xchg
and
pop
adc
and
fcom
and
cwde
push
jecxz
pop
adc
in
push
daa
and
fs
push
pusha
repz
adc
pop
push
in
pop
(bad)
pusha
cmp
es
push
(bad)
popa
add
ficom
mov
push
sbb
and
sbb
mov
pop
(bad)
and
aad
movs
popf
shl
scas
pop
adc
in
pop
push
and
adc
and
pop
push
pusha
mov
pushf
adc
(bad)
mov
push
daa
xchg
fist
arpl
fcom
bound
and
adc
loope
fcom
mov
shl
pushf
shl
mov
xchg
shl
test
pop
in
xchg
push
data16
xchg
loop
xchg
adc
pop
push
xchg
loop
adc
data16
arpl
xchg
xchg
loopne
adc
xchg
(bad)
loopne
xchg
shl
jp
cmps
arpl
dec
dec
pop
xchg
inc
push
add
jno
mov
xchg
mov
out
mov
test
add
xchg
cmp
hlt
pop
rol
pop
inc
jle
addr16
adc
dec
(bad)
std
and
sub
or
popa
sti
sti
in
mov
std
shl
mov
jmp
sub
ja
add
cmp
(bad)
xchg
add
mov
cmps
inc
or
ror
mov
sti
jb
out
test
jle
loope
enter
repz
mov
pop
fsub
mov
test
or
sub
int3
mov
scas
add
cmp
js
mov
in
inc
pop
enter
jns
inc
jae
scas
mov
cmovo
dec
(bad)
out
jmp
jecxz
dec
sub
jecxz
cmp
pop
outs
nop
jmp
add
loope
pop
scas
jno
mov
lea
scas
mov
(bad)
aam
test
mov
cmp
mov
push
mov
lea
pop
nop
ds
repnz
ins
cdq
jg
lea
inc
xchg
int
mov
lea
cmp
shl
pusha
cmp
out
cmp
pop
(bad)
mov
and
cmp
mov
lods
(bad)
sub
cmp
popa
mul
cmp
lods
add
sub
jge
std
jmp
or
ins
out
inc
jae
jg
sub
jno
loop
das
cmps
jge
mov
jns
push
cmp
mov
mov
jl
cmp
mov
outs
es
outs
js
(bad)
mov
sub
cmp
das
inc
mov
stos
jg
cmp
push
sub
outs
sub
xor
aas
mov
imul
(bad)
mov
mov
out
mov
in
cmp
jb
push
cmp
inc
and
std
(bad)
retf
bound
xor
(bad)
retf
bound
mov
(bad)
retf
bound
xor
(bad)
retf
bound
repnz
bound
mov
(bad)
retf
loop
sub
loope
xor
cmp
mov
loop
fs
and
mov
(bad)
out
fs
and
inc
loop
lock
(bad)
out
fs
loop
pop
mov
int
inc
loop
imul
fs
mov
mov
(bad)
fsub
movs
addr16
xor
popa
(bad)
movs
mov
fbld
and
mov
arpl
test
ja
mov
arpl
fld
out
into
fisub
jae
add
lahf
enter
and
sub
fnstsw
cli
out
arpl
fs
arpl
adc
(bad)
hlt
xor
(bad)
std
mov
sti
cwde
lods
ret
js
scas
mov
addr16
adc
inc
sbb
aaa
daa
fld
fs
das
add
les
sub
imul
(bad)
je
mov
mov
imul
mov
and
jmp
mov
push
std
pop
neg
dec
sub
jns
adc
dec
xor
inc
mov
mov
mov
arpl
pop
add
movs
ins
arpl
fs
aaa
adc
pop
arpl
fs
daa
push
sub
fild
push
lea
push
call
push
mov
stc
jne
mov
push
call
cwde
sub
xchg
and
fs
jnp
jnp
movs
add
add
stc
fnstsw
pop
(bad)
lahf
daa
push
out
es
popa
or
call
ins
and
test
jns
movs
data16
inc
xchg
ss
aad
(bad)
movs
mov
repz
sub
stos
mov
sahf
push
es
cmp
cmp
and
rcr
stos
mov
jbe
es
and
cmp
and
sti
sbb
pop
dec
push
es
or
les
add
ficomp
das
fwait
dec
pushf
pop
push
sbb
pop
push
adc
pop
push
mov
pop
inc
fs
push
push
scas
push
mov
mov
je
out
(bad)
repz
bound
(bad)
dec
cmps
sub
loope
xor
stos
scas
cmc
ja
mov
mov
push
jmp
ss
jp
idiv
and
inc
test
xor
jo
cwde
jg
add
out
inc
stc
inc
pop
xchg
pop
scas
xchg
in
inc
mov
iret
fs
add
and
xchg
pop
push
pop
clc
neg
mov
pop
les
jmp
push
sbb
mov
std
and
mov
mul
lods
or
or
mov
cmps
jmp
adc
lahf
sbb
or
popf
aaa
cmps
jmp
(bad)
call
lods
aaa
cmps
jmp
xor
pop
cmp
sub
and
call
lea
lahf
call
xchg
adc
jne
jne
jo
jae
xlat
add
jne
xor
sub
jne
push
iret
fwait
enter
cmp
sbb
push
xchg
out
test
jb
(bad)
push
jb
xlat
shl
rcl
push
push
push
and
adc
lahf
aad
cmps
pop
rcl
loope
shl
sub
push
not
push
cmps
mov
aam
and
xchg
push
cmps
pop
push
(bad)
popa
or
push
out
push
xchg
popa
adc
push
and
aad
daa
pop
rcl
pusha
pop
aam
and
xchg
and
push
xchg
out
rcl
and
shl
mov
xchg
and
pop
shl
jg
push
pusha
inc
aad
and
push
xchg
arpl
adc
and
push
xchg
data16
push
in
push
aam
out
push
loopne
adc
mov
sub
push
push
popa
xor
xchg
adc
adc
mov
push
pop
shl
aad
xchg
out
xchg
push
out
aam
out
xchg
shl
xchg
adc
push
data16
aam
loop
xchg
xchg
mov
stc
xchg
push
addr16
adc
inc
push
push
addr16
adc
shl
or
xchg
arpl
push
push
mov
cdq
aad
cmps
pop
rcl
popa
addr16
out
adc
push
(bad)
adc
xor
popa
xchg
push
xchg
and
mov
pop
cmp
inc
daa
push
mov
inc
cmp
jae
jp
xor
(bad)
mov
or
clc
daa
lds
mov
dec
out
call
out
adc
std
push
cmp
pop
or
clc
daa
xchg
inc
pop
xchg
dec
push
dec
repz
jl
push
pop
cmp
push
int3
mov
or
test
mov
push
(bad)
xor
cmps
js
adc
test
dec
push
js
sbb
clc
jle
mov
dec
jb
push
mov
mov
or
shl
mov
or
test
lea
inc
xchg
jl
iret
mov
jecxz
pop
and
sbb
daa
retf
aaa
or
adc
pop
mov
lea
dec
int3
fs
clc
(bad)
aaa
or
addr16
dec
(bad)
jnp
jmp
xor
mov
retf
(bad)
fs
clc
xor
fcomp
mov
xchg
inc
cmp
popa
jb
fmul
ja
mov
jmp
(bad)
sub
add
popf
pop
bound
mov
push
ja
std
outs
data16
mov
jae
out
sub
movs
pushf
(bad)
xchg
mov
cmp
mov
fimul
lods
jle
dec
pop
lock
sahf
mov
ret
inc
xchg
addr16
and
scas
(bad)
cdq
mov
call
pop
stos
pop
stc
test
mov
(bad)
fld
out
mov
dec
stc
add
push
sub
jg
stc
test
sahf
arpl
enter
xor
test
mov
mov
icebp
sub
mov
mov
fbstp
ja
scas
js
test
aam
add
mov
test
inc
dec
fmul
mov
mov
push
add
ret
inc
xchg
cmp
jmp
fimul
jle
lods
mov
(bad)
sbb
jg
add
inc
cwde
shl
sbb
mov
mov
scas
js
mov
shl
stos
mov
test
inc
pop
jmp
in
test
sahf
mov
clc
aam
inc
xor
das
test
mov
movs
clc
and
sub
add
xchg
cmps
test
enter
loop
cmp
pop
out
mov
sub
mov
cmp
add
test
(bad)
jg
mov
scas
cmp
hlt
cmp
jae
cmp
inc
xor
dec
jno
jp
cmp
fnstcw
mov
out
(bad)
mov
clc
mov
jge
dec
sahf
out
test
xor
fmul
mov
dec
cld
fcomp
cmp
dec
jle
in
movs
dec
in
or
ret
jnp
dec
outs
cmp
fidiv
inc
dec
inc
mov
js
sti
sub
xchg
mov
clc
loop
xor
mov
lods
js
pop
push
or
sub
xlat
mov
popf
(bad)
cmp
mov
inc
pushf
cmp
ja
popa
in
mov
and
push
(bad)
mov
in
dec
div
dec
idiv
outs
das
sub
scas
pushf
mov
add
das
sub
mov
lods
mov
sub
add
xor
loopne
mov
fucomip
mov
mov
ja
test
sub
lock
inc
cmc
mov
lods
js
and
inc
cmp
ja
std
and
adc
cdq
cwde
cmc
inc
pop
xor
clc
xchg
call
ret
add
call
adc
sub
stos
idiv
cmp
and
mov
mov
pop
shl
sub
xor
cld
clc
dec
inc
std
ja
push
mov
inc
push
pop
jge
sbb
lods
mov
jb
das
pop
not
cmp
scas
mov
stos
sar
mov
gs
fidivr
cmp
test
mov
(bad)
mov
cmp
ja
jge
nop
jmp
outs
jae
mov
jnp
mov
std
hlt
(bad)
(bad)
repnz
mov
mov
xchg
clc
lahf
int
lds
mov
loop
push
jae
enter
retf
shl
dec
push
loop
int3
aad
inc
mov
mov
or
int3
xchg
and
dec
push
popa
sbb
pop
iret
xchg
data16
mov
(bad)
shl
mov
xchg
and
shl
mov
dec
xchg
out
or
jecxz
dec
adc
movs
int
xchg
loop
or
and
dec
push
loopne
mov
mov
(bad)
retf
xchg
and
or
mov
xor
and
psrlq
jns
push
cmps
jnp
aad
xchg
xchg
mov
into
dec
push
dec
movhlps
push
rcpps
push
enter
dec
xchg
loopne
dec
adc
cmps
or
or
daa
stos
int3
push
data16
aam
xor
mov
out
andnps
dec
xchg
bswap
shl
int3
adc
(bad)
int3
xchg
arpl
int
cmps
fmul
adc
mov
out
push
in
mov
loop
dec
adc
hlt
dec
push
arpl
rsqrtps
cmp
xchg
es
dec
and
or
fsub
jb
int3
pop
cmp
add
pop
cmp
xor
arpl
cdq
add
cmp
fsub
mov
and
mov
cli
pusha
pop
or
jl
in
into
or
fbld
mov
loop
mov
pop
xor
lea
push
repz
or
fdivr
push
inc
pushf
pop
sbb
fmul
gs
pushf
sub
(bad)
or
mov
jb
arpl
scas
cmp
pop
mov
or
inc
in
(bad)
cmp
mov
xor
inc
mov
lea
js
lock
cmps
(bad)
call
fdivr
pushf
xchg
cld
mov
xor
inc
mov
jbe
sub
pushf
aam
retf
mov
mov
adc
(bad)
jmp
add
mov
jb
loope
mov
sub
mov
(bad)
or
nop
(bad)
int
xchg
(bad)
ret
pop
retf
pop
add
mov
in
arpl
xlat
sbb
adc
(bad)
lods
pusha
mov
mov
loope
xor
mov
pop
stos
mov
addr16
aad
(bad)
arpl
inc
and
sbb
fcom
mov
addr16
enter
stos
push
sbb
lods
(bad)
sub
xor
sub
fsub
dec
into
out
or
xor
addr16
pop
push
xchg
xor
xor
adc
addr16
sbb
nop
icebp
nop
icebp
daa
into
jae
mov
mov
out
xor
fbld
call
mov
int3
addr16
or
fcom
andps
pop
into
mov
into
cmp
pop
dec
jmp
fsubr
stos
ret
repz
cdq
and
icebp
cmp
fdiv
cmp
xor
mov
cmp
and
mov
cwde
mov
jne
sub
xor
mov
lods
mov
cmc
mov
enter
enter
add
cwde
icebp
sbb
icebp
cmps
icebp
out
addr16
mov
cwde
mov
xor
xor
adc
mov
mov
add
adc
loop
into
push
xor
into
and
div
lahf
jno
xor
into
jg
xchg
inc
iret
addr16
ja
dec
mov
(bad)
into
adc
ja
dec
movs
mov
into
sbb
out
inc
js
push
cwde
out
pop
into
push
psubusb
mov
cwde
xchg
push
popa
dec
mov
out
out
icebp
pop
psubusb
mov
mov
sysret
ja
mov
jae
aad
sub
jne
push
sbb
into
xor
popf
mov
xor
in
mov
jge
imul
cdq
and
(bad)
aas
sets
push
mov
nop
cmc
xor
sbb
push
xchg
je
shl
jb
cli
mov
fild
fcom
popf
(bad)
je
sub
cwde
test
shl
shr
jl
cwde
test
mov
out
ins
aas
adc
xchg
jno
aas
add
adc
shl
xchg
inc
jp
iret
out
aam
dec
jmp
into
popa
mov
sub
xchg
mov
frstor
aas
pop
ret
nop
cdq
cli
test
fbld
dec
popf
in
test
pusha
call
loope
cli
in
mov
aad
xchg
jp
ins
push
pusha
push
xor
cmp
(bad)
(bad)
jp
cmp
push
cmp
xlat
mov
iret
pop
push
adc
js
(bad)
int3
sbb
xchg
call
and
aas
pop
into
or
out
cmc
mul
cmps
xor
cmp
aas
shl
jecxz
scas
icebp
pop
lahf
mov
retf
sbb
and
shl
mov
cmps
xor
jbe
push
loopne
jp
pushf
in
nop
neg
ds
jne
div
nop
icebp
or
sbb
push
out
lahf
icebp
add
daa
into
inc
mov
cwde
mov
popa
popa
dec
dec
mov
mov
stos
popa
inc
cwde
push
pusha
mov
daa
fistp
fmul
xor
jae
mov
nop
jg
jle
mov
shl
lock
icebp
icebp
ret
(bad)
jmp
xchg
loope
xor
and
arpl
sub
inc
into
jge
sub
jo
adc
mov
cwde
les
xchg
ja
lds
xor
mov
(bad)
mul
xchg
lea
in
push
mov
push
jb
adc
inc
xchg
es
adc
imul
out
adc
mov
rol
loopne
add
and
xchg
es
(bad)
xchg
and
push
loopne
add
daa
addr16
and
(bad)
aam
push
adc
movs
repz
adc
cmp
push
and
push
and
xchg
mov
or
jecxz
test
push
(bad)
push
loopne
(bad)
(bad)
mov
pop
lds
es
push
mov
test
xchg
and
test
cmps
inc
xchg
pusha
add
and
push
data16
(bad)
push
in
ret
adc
ret
push
add
cmps
sbb
aad
popa
inc
xchg
out
(bad)
xchg
cmps
push
inc
xchg
and
xchg
loop
inc
xchg
mov
jp
adc
add
arpl
inc
push
mov
push
(bad)
push
mov
pop
adc
pop
inc
aad
mov
(bad)
xchg
mov
out
inc
push
and
shl
xchg
cmps
inc
mov
loopne
inc
pop
cmps
ret
loope
xchg
xchg
xchg
inc
jb
xchg
inc
jb
lods
xchg
push
rol
xor
inc
jb
rol
cmp
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
rol
push
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
push
inc
jb
xchg
inc
jb
push
js
dec
lods
xchg
mov
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
imul
xchg
xchg
repnz
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
imul
xchg
xchg
out
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
lahf
dec
jb
lahf
dec
jp
lahf
dec
jp
lahf
dec
jp
lahf
dec
jp
lahf
dec
jp
xchg
inc
jp
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
sub
(bad)
enter
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
pop
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
xchg
inc
jb
add
adc
adc
push
cmps
and
push
and
inc
shl
add
xchg
and
les
loope
xchg
mov
retf
rcl
or
xchg
and
adc
cdq
lds
fild
cmps
out
xchg
pusha
test
(bad)
bound
pop
and
inc
(bad)
pusha
mov
push
cmp
out
ret
push
out
(bad)
shl
test
mov
int3
ret
pop
out
ret
adc
push
and
xchg
and
(bad)
(bad)
and
push
push
pusha
xor
loope
(bad)
xchg
mov
jp
push
mov
inc
les
retf
inc
adc
push
inc
xchg
and
pop
push
and
pop
xchg
loopne
test
cmps
addr16
daa
jmp
xchg
mov
jo
shl
jb
push
addr16
add
mov
add
daa
ret
and
adc
test
pop
xchg
daa
xchg
ret
fadd
pushf
inc
aam
mov
(bad)
push
out
add
imul
loope
ret
clc
adc
jle
xchg
and
adc
(bad)
push
data16
lds
cmps
mov
dec
dec
cwde
xchg
xchg
jno
lods
inc
jb
test
popf
or
shl
mov
out
sub
jmp
nop
(bad)
movs
mov
or
pop
xchg
xchg
or
aas
pop
jmp
popf
dec
cmps
or
inc
data16
mov
cmp
cdq
xchg
jae
cmp
stc
out
repnz
popf
mov
nop
mov
inc
paddd
pop
repnz
dec
(bad)
jge
jbe
(bad)
pop
dec
je
fdiv
push
cmp
sbb
and
call
mov
js
test
inc
bnd
int3
fnstsw
xchg
fnstsw
mov
lea
jbe
xchg
arpl
xchg
es
js
in
push
daa
xchg
outs
shl
dec
dec
sub
sbb
mov
jne
mov
out
leave
cmp
cdq
dec
cmp
pushf
ins
xchg
out
pop
push
std
(bad)
xchg
xchg
inc
sub
inc
mov
inc
add
adc
adc
fsub
jge
push
sub
cmp
push
cmp
sub
mov
cmc
and
mov
in
mov
mov
xor
mov
iret
pop
stos
mov
add
cdq
(bad)
shl
jge
(bad)
sub
nop
out
cwde
aaa
pop
sbb
pop
push
call
js
cmp
nop
or
push
xchg
in
ins
add
ins
shl
ins
mov
jns
lods
mov
dec
sub
nop
mov
jle
nop
test
mov
adc
mov
inc
jb
test
jb
test
jb
test
jb
test
jb
test
jb
test
jb
test
jb
test
jb
test
jb
cld
push
jb
sti
push
cmps
xchg
jns
arpl
jp
cmps
pop
mov
xchg
jecxz
cmp
and
js
jecxz
stc
push
and
push
and
cmp
cli
jns
data16
cmps
lds
cmps
dec
jns
movs
mov
push
daa
pop
jns
out
(bad)
xchg
mov
loopne
adc
bound
pop
movs
stos
cmp
loopne
jle
and
cmp
jnp
shl
cli
push
and
jnp
es
mov
adc
xchg
cmp
loop
mov
xchg
es
daa
cmp
stos
stc
adc
mov
(bad)
mov
push
out
cli
push
data16
adc
cmps
dec
cmp
cli
push
popa
push
ds
cdq
mov
push
out
mov
adc
ds
in
cli
push
arpl
jle
loope
mov
(bad)
arpl
retf
dec
jb
mov
pop
in
mov
xchg
inc
jb
fwait
pop
push
je
dec
or
aad
addr16
jp
dec
push
pop
inc
or
(bad)
stos
xchg
jmp
repnz
or
std
outs
stos
or
imul
jns
sahf
jb
cmp
stc
push
mov
mov
test
das
mov
rcr
add
or
pop
es
jb
cmc
push
or
retf
push
cli
clc
dec
fstp
imul
aam
lea
fs
xor
les
push
sar
lock
mov
(bad)
push
mov
and
mov
mov
pop
sub
je
cld
addr16
test
imul
lea
retf
push
inc
cmp
sahf
push
and
sub
adc
push
clc
jnp
imul
mov
fwait
mov
dec
push
push
mov
mov
js
cdq
dec
xlat
push
xchg
in
adc
repz
mov
lock
mov
shl
dec
dec
mov
jp
outs
aad
cwde
cdq
sbb
into
inc
(bad)
or
rol
jle
(bad)
stos
loop
stc
push
mov
imul
mov
stos
ins
jns
pop
mov
retf
mov
sahf
inc
(bad)
fld
push
push
das
mov
(bad)
xchg
adc
mov
test
add
inc
(bad)
add
test
aaa
cmp
or
fadd
into
xchg
cmps
adc
pop
test
cli
push
fadd
xchg
addr16
pop
aad
outs
out
mov
hlt
(bad)
retf
mov
out
test
mov
sbb
clc
ds
xchg
das
mov
fcom
mov
scas
aam
(bad)
xchg
mov
(bad)
push
pop
out
inc
mov
xlat
inc
dec
inc
xchg
pop
add
stc
push
push
ss
lds
(bad)
stos
and
pop
stc
mov
inc
ret
call
push
inc
add
jmp
out
cdq
xchg
xchg
in
pop
(bad)
sub
lods
adc
mov
xchg
inc
pop
mov
(bad)
stos
inc
add
stos
enter
call
jns
inc
sahf
stc
push
cmps
xchg
leave
xlat
inc
(bad)
jmp
stc
cmps
pop
out
push
xchg
xchg
in
fcmovb
stos
xor
(bad)
mov
inc
jmp
mov
imul
mov
inc
les
mov
adc
mov
retf
call
addr16
push
xchg
mov
jmp
aaa
add
std
stos
push
mov
stos
adc
iret
stos
push
(bad)
std
stos
sbb
xchg
push
mov
stos
es
std
stos
mov
stos
cmp
(bad)
stos
ds
mov
xchg
mov
repnz
stos
dec
jmp
std
stos
push
mov
stos
mov
xlat
inc
add
push
cmps
jmp
retf
stos
cmp
adc
cmp
(bad)
test
xchg
ins
sahf
inc
pop
stc
xchg
jmp
call
test
(bad)
stos
data16
(bad)
stos
retf
arpl
ins
mov
stc
fimul
pop
stc
sub
add
stc
stos
mov
fiadd
xchg
ins
scas
test
cdq
(bad)
stos
jbe
mov
push
cdq
test
cli
add
stc
adc
out
or
mov
leave
jle
xchg
es
pusha
jne
jmp
push
les
dec
xchg
mov
leave
sbb
cmps
mov
bound
jge
test
retf
data16
pop
pushf
sub
leave
imul
add
addr16
xchg
xchg
and
and
in
sub
sti
push
inc
call
stc
daa
lds
pop
dec
test
outs
add
mov
lds
stc
cwde
xchg
xchg
imul
repz
cmp
test
mov
add
xchg
and
jp
jecxz
cli
push
and
cld
aam
pop
cmp
push
bound
jp
popa
cs
aam
mov
adc
jge
mov
cmp
push
and
js
iretw
cmp
cmps
xchg
cmp
daa
call
and
cld
shl
mov
jnp
pushw
shl
mov
xchg
out
ds
jp
shl
inc
jge
movs
add
cmp
push
mov
adc
adc
fdivr
push
loopne
mov
(bad)
arpl
adc
cs
xchg
mov
mov
shl
jle
push
and
aad
cmp
dec
sti
push
and
call
pusha
sbb
and
cld
aam
lods
mov
xchg
mov
ss
aad
jnp
aam
xor
jb
out
mov
es
xor
adc
xchg
es
mov
pop
ja
daa
out
aam
xor
es
cmp
sbb
adc
jmp
imul
sub
xchg
xchg
dec
sbb
cmp
push
jns
(bad)
sbb
xchg
cmp
jnp
out
nop
stc
les
je
pushf
enter
mov
pop
jb
push
sub
add
xor
ins
mov
enter
adc
js
inc
out
push
cmp
jne
lea
das
ins
mov
sar
call
sbb
jb
sar
jmp
pop
mov
mov
test
sar
shl
popa
jge
and
mov
popa
std
add
push
enter
bound
cmp
xchg
fwait
mov
arpl
loopne
sbb
inc
mov
lea
pusha
imul
dec
je
xchg
jo
mov
jb
cmp
sub
fsubr
push
pop
jb
pop
mov
jmp
std
retf
pop
call
inc
fiadd
loopne
push
lods
xchg
jno
add
into
mov
movs
pop
mov
sbb
popa
sub
js
and
ret
sbb
or
nop
int
sub
shl
iret
fadd
xchg
xchg
sub
xchg
pushf
push
pop
cmp
ds
or
gs
mov
mov
jmp
scas
mov
mov
popa
cmc
dec
retf
mov
fwait
or
push
mov
outs
push
adc
inc
test
popa
or
ss
dec
mov
std
pop
dec
mov
fcomp
aaa
xchg
aas
push
aaa
loope
and
or
lahf
jecxz
xor
push
push
mov
mov
(bad)
lock
jae
xor
loopne
mov
cmps
nop
xor
(bad)
mov
loopne
aaa
xchg
jecxz
not
xor
es
out
mov
out
ja
mov
jbe
push
es
xor
and
ss
popa
add
push
and
xor
in
aaa
push
and
jo
arpl
aad
and
adc
fs
es
mov
jno
aad
xor
push
jecxz
mov
cmps
mov
mov
and
xchg
data16
shl
xor
jecxz
jne
out
jo
pushw
mov
daa
pop
jae
and
xor
and
xor
loopne
ja
out
not
jl
push
xchg
mov
dec
mov
pusha
mov
push
in
mov
push
not
sbb
aad
pushf
cmc
(bad)
out
not
cmps
outs
jbe
arpl
not
loope
aaa
adc
clc
mov
and
xlat
and
xchg
popa
xor
retf
not
loop
lock
out
xor
jecxz
repz
mov
pusha
and
push
and
mov
out
ja
and
cdq
inc
mov
add
data16
mov
movs
dec
sbb
cmp
cmp
push
pop
cmp
or
sbb
mov
sar
or
pop
dec
cmp
jb
cmp
pop
jmp
add
jb
addr16
pop
jecxz
dec
xor
dec
jge
retf
jg
mov
std
fsubr
lea
std
push
or
ret
das
pusha
aaa
xor
mov
imul
outs
call
ret
test
jns
int
imul
sbb
test
inc
aas
lock
pushf
cld
bound
dec
fisub
and
dec
cmp
dec
jl
sbb
test
mov
sbb
add
cwde
inc
jb
in
adc
jge
in
adc
xor
mov
xor
dec
popa
jb
pop
std
dec
scas
xchg
inc
mov
push
lahf
(bad)
(bad)
loopne
cmp
out
mov
movq
fcom
dec
mov
xchg
(bad)
mov
pop
cmp
cmp
add
fbstp
ret
bound
mov
ret
cmp
pop
mov
mov
mov
cwde
pop
cmp
sti
xchg
retf
in
shl
mov
(bad)
xor
dec
mov
pop
(bad)
loopne
adc
(bad)
cmps
jb
xor
call
xor
aad
imul
icebp
add
out
movs
loopne
push
mov
jmp
sub
in
add
adc
fdivp
mov
mov
push
into
push
mov
(bad)
loopne
push
or
pop
and
cmc
ss
jno
mov
jbe
jae
mov
or
dec
mov
mov
sbb
loop
xchg
or
loope
pop
xchg
mov
gs
jbe
fmulp
mov
or
inc
sbb
in
fcmovbe
cmps
cmp
and
retf
push
loopne
sub
mov
out
repz
push
mov
mov
loopne
adc
or
mov
xchg
aaa
xor
jo
push
jmp
repnz
xor
xor
out
not
mov
ret
mov
int3
jb
mov
shl
sbb
shl
mov
ja
and
icebp
xchg
cmps
stos
icebp
push
mov
ja
xlat
mov
cmp
xor
loope
jbe
loope
mov
out
mov
pusha
adc
icebp
push
pusha
pop
not
cmps
loopne
push
cmps
(bad)
not
mov
sub
push
popa
mov
adc
jg
adc
jp
xchg
out
icebp
adc
inc
mov
and
not
cmpxchg
(bad)
xor
mov
pop
xor
arpl
jne
in
hlt
xchg
arpl
cmc
adc
daa
imul
mov
adc
hlt
mov
and
adc
xor
daa
ret
mov
and
jne
mov
push
mov
and
mov
out
ja
and
arpl
push
addr16
xchg
and
jae
mov
jns
(bad)
bound
jne
pusha
inc
je
es
not
popa
fidiv
jb
pushf
inc
mov
push
adc
retf
bound
push
mov
inc
and
sahf
dec
cli
inc
mov
retf
xchg
sbb
fistp
or
cdq
cmp
ins
fwait
jmp
pushf
jbe
xchg
fidivr
dec
fwait
cdq
or
inc
test
jge
push
and
xchg
or
jb
in
or
cmps
xchg
mov
(bad)
jns
mov
sbb
mov
or
(bad)
xor
aas
ret
mov
jge
pop
das
pop
mov
pop
xchg
outs
pusha
outs
loopne
dec
daa
scas
(bad)
xor
ret
and
data16
add
xchg
out
pushf
push
jb
daa
test
fwait
repz
stos
or
pop
jge
ins
jmp
mov
mov
cs
inc
mov
dec
mov
lea
push
mov
add
fcomp
mov
idiv
or
in
pop
inc
pushf
data16
lock
pop
xor
je
adc
rcr
pop
imul
inc
jge
adc
cmp
pop
cmps
(bad)
jmp
and
rcr
or
pop
js
and
sbb
mov
mov
xchg
mov
mov
cmps
sub
nop
adc
cwde
mov
jns
xchg
pop
stos
jecxz
dec
mov
adc
test
les
(bad)
push
test
mov
push
xchg
push
shl
adc
nop
cld
mov
jecxz
mov
xor
ds
ins
addr16
sub
dec
bound
lods
sub
mov
imul
in
mov
jns
xor
xor
sbb
mov
adc
mov
jb
sub
aaa
out
xchg
arpl
push
es
test
bound
push
and
das
push
pusha
dec
jmp
cmps
push
push
cmps
(bad)
push
adc
jecxz
call
push
and
xlat
es
sub
es
(bad)
out
test
and
test
adc
mov
or
push
es
sub
and
stos
xchg
loope
jmp
pop
mov
out
out
adc
repz
and
scas
(bad)
and
and
test
xchg
and
sub
out
sub
xchg
mov
and
shl
jmp
out
push
push
arpl
ins
aad
jnp
xchg
and
in
push
out
ins
xchg
pusha
mov
mov
adc
aam
push
sub
and
imul
daa
sub
test
xchg
daa
cs
out
jmp
mov
outs
adc
sub
cmps
dec
in
pop
daa
xchg
sub
pop
ins
xchg
addr16
push
loope
call
jp
sbb
mov
pop
sub
(bad)
adc
push
test
mov
fisub
shl
xor
inc
jmp
loope
mov
inc
mov
(bad)
push
and
xchg
jge
sbb
scas
sbb
sbb
outs
sub
xlat
sbb
jmp
cmp
and
push
mov
shl
retf
(bad)
inc
je
addr16
xchg
jmp
and
adc
jge
rol
or
cmp
mov
jnp
and
lock
push
xchg
fstp
xor
inc
cmp
aad
dec
sub
mov
mov
mov
adc
jge
xchg
pop
imul
ins
mov
push
mov
rcl
cmp
lods
mov
mov
adc
cmps
fwait
(bad)
data16
xchg
mov
lea
mov
(bad)
in
les
stos
clc
(bad)
mov
or
push
jnp
les
xchg
ror
sub
push
ss
int
push
or
call
js
mov
ret
push
add
xchg
pop
xchg
mov
push
inc
std
xchg
sar
xchg
pop
pop
in
xor
jno
mov
add
push
mov
mov
int3
pop
outs
addr16
mov
add
jp
pop
mov
sti
pop
mov
movs
retf
loope
or
cli
dec
gs
scas
sbb
pop
sub
inc
jle
aaa
jp
arpl
popa
and
ja
ins
fs
push
pop
jle
mov
adc
jns
xchg
pop
ficom
inc
fs
xlat
inc
ds
xlat
cmps
add
adc
mov
(bad)
push
das
xchg
mov
pop
out
xchg
and
xchg
loop
outs
push
and
aad
sub
push
in
push
push
es
jmp
push
and
push
push
mov
(bad)
and
out
push
and
stos
adc
pop
stos
adc
sbb
daa
cmps
stos
aam
and
adc
sub
out
test
push
jecxz
outs
adc
loope
sub
loop
jmp
push
and
adc
xchg
outs
shl
ins
push
cmps
fucomip
xchg
pusha
loop
shl
mov
jmp
fs
sub
loop
push
xchg
mov
jg
xchg
mov
(bad)
jmp
push
addr16
das
adc
push
outs
push
daa
xchg
ins
push
and
in
adc
mov
lods
inc
outs
xchg
xchg
xchg
mov
mov
cdq
push
out
rcl
pop
sti
mov
stos
jns
xchg
movs
inc
mov
jb
call
ja
jne
mov
push
cli
stos
push
into
mov
inc
(bad)
aad
sub
out
sbb
jge
stos
mov
pop
dec
mov
inc
lods
je
jge
jb
fnstsw
dec
pop
popa
jge
sub
sub
cmc
xor
int
dec
mov
iret
pop
inc
std
add
adc
clc
or
mov
mov
inc
outs
call
sti
fsub
lods
xchg
xchg
cld
call
jp
and
xor
xchg
push
lea
cmps
or
das
or
sbb
pushf
adc
lea
inc
mov
mov
fwait
push
mov
add
inc
push
inc
cmp
pop
xchg
mov
js
test
mov
xor
pop
cmp
mov
cmc
outs
mov
aad
sub
js
gs
mov
mov
test
dec
repnz
cmp
pushf
and
dec
push
lea
gs
lock
inc
stos
pushf
imul
mov
xchg
jp
push
or
mov
cmpxchg
(bad)
sbb
dec
dec
stos
sti
dec
cmp
minps
sbb
mov
mov
dec
adc
fsubr
sti
dec
pop
jne
rdmsr
mov
(bad)
ds
lods
repz
fwait
iret
out
or
push
iret
jb
iret
or
stos
(bad)
lahf
mov
stos
and
(bad)
imul
repnz
sub
xor
mov
call
fld
inc
push
mov
imul
outs
adc
dec
sub
das
xchg
data16
sub
(bad)
fsubr
xchg
and
stos
shl
imul
push
and
outs
adc
in
xlat
bound
shl
add
xchg
mov
push
out
push
out
sub
xlat
mov
fwait
sub
ins
push
out
sub
out
in
push
fs
cs
hlt
imul
mov
push
cmp
cmp
mov
inc
sub
or
xchg
mov
xchg
sub
cdq
das
adc
sbb
shl
mov
ins
xchg
pusha
lods
sub
xor
push
mov
clc
jmp
shl
ret
and
xchg
mov
xchg
stos
push
addr16
sub
push
loopne
outs
xchg
data16
scas
aam
outs
xchg
and
jmp
mov
ja
shl
jb
xchg
arpl
out
push
out
in
push
arpl
stos
aam
(bad)
pushf
cld
and
mov
jge
pop
arpl
push
jb
mov
js
std
bound
adc
daa
bound
mov
mov
jno
inc
imul
lods
add
xchg
add
inc
call
dec
(bad)
fs
clc
push
jnp
test
or
xchg
or
ret
mov
inc
fistp
xor
add
lea
sbb
add
sbb
movs
inc
cmps
movs
push
rcl
inc
bnd
mov
pop
clc
jg
adc
inc
adc
or
mov
leave
ss
xor
pop
or
mov
xor
and
mov
xor
mov
out
mov
xor
inc
mov
clc
or
mov
ins
mov
mov
mov
jae
add
cmp
rcr
xchg
jo
pop
add
xchg
iret
sub
jno
jb
sar
aaa
rcl
and
pop
mov
jg
mov
enter
xchg
pop
xor
push
test
inc
jno
ror
pop
xor
lock
(bad)
rol
mov
lea
dec
mov
ds
lahf
aam
int3
push
imul
dec
xchg
aaa
xchg
leave
jg
and
sahf
pushf
sbb
repz
andnps
mov
cmp
pop
jne
inc
jl
bound
cmp
ret
aad
inc
cmp
dec
cmps
jge
mov
jl
push
xchg
push
fs
jbe
mov
jbe
xor
jl
dec
test
mov
add
idiv
push
adc
add
xor
shl
jl
popa
les
sub
pusha
inc
cmp
jne
pop
jne
movs
inc
add
mov
jg
popa
addr16
cdq
cmp
data16
sahf
pop
jg
in
push
jne
mov
dec
pop
test
out
pop
add
mov
es
mov
xor
fstp
ins
aas
inc
outs
mov
push
xchg
mov
test
imul
leave
push
lea
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
popa
push
jb
movs
(bad)
loopne
gs
and
jecxz
mov
psraw
mov
(bad)
popa
shl
pop
popa
xchg
popa
mov
popa
adc
in
movs
aad
mov
adc
jne
xlat
and
in
out
movs
aad
xchg
adc
xchg
daa
retf
in
loope
data16
push
daa
pop
mov
adc
mov
arpl
addr16
and
daa
jbe
push
and
adc
out
data16
inc
daa
xchg
arpl
mov
aad
xchg
mov
aad
pop
mov
push
mov
bound
mov
out
out
pusha
aaa
mov
push
movs
jg
adc
cmp
shl
ret
or
dec
cmps
adc
push
cmps
xchg
daa
sbb
adc
pop
loope
arpl
pop
loop
call
scas
mov
daa
cmps
test
pop
repnz
sub
ret
sub
jp
enter
(bad)
iret
mov
jbe
jmp
js
xor
mov
xor
dec
jb
mov
mov
div
imul
or
lea
adc
cmp
jb
dec
cmp
in
pop
jae
int
jb
mov
xchg
dec
push
mov
data16
dec
js
or
call
or
(bad)
(bad)
mov
push
aaa
ja
aas
jb
push
jge
push
inc
jb
sub
inc
into
or
inc
push
js
push
mov
xor
cmp
sub
sbb
ror
cmp
inc
push
pop
xchg
inc
or
mov
std
das
cmps
push
test
jge
test
out
js
cmps
call
xlat
(bad)
sbb
inc
(bad)
add
push
jo
cmps
(bad)
into
lods
or
pusha
mov
(bad)
mov
jmp
mov
push
imul
mov
jb
retf
hlt
mov
or
dec
mov
pop
ret
adc
movs
test
dec
repz
xchg
int
jle
jge
cdq
xchg
popf
jmp
dec
and
(bad)
mov
jb
dec
mov
sbb
jae
mov
jno
pop
lods
add
mov
(bad)
fwait
inc
mov
pop
cmp
mov
dec
std
in
outs
pop
pop
sbb
pop
or
imul
jbe
mov
jmp
ror
add
hlt
cwde
adc
aam
shl
clc
and
aas
(bad)
pushf
in
ror
jb
jge
push
retf
(bad)
call
mov
imul
xchg
sbb
bound
adc
test
cmpxchg
mov
leave
repnz
retf
inc
sbb
into
cli
jbe
dec
mov
cdq
mul
mov
cmps
xor
fsubr
aaa
fadd
shl
cli
mov
push
imul
(bad)
cmp
xchg
jmp
retf
cli
shr
inc
test
cmp
push
mov
xor
mov
es
xchg
cld
movs
sub
js
sub
cli
push
sub
fisubr
int
add
mov
inc
stos
retf
and
mov
cmp
scas
cmps
and
scas
scas
fld
shr
adc
mov
push
cmp
scas
inc
mov
jnp
loop
mov
dec
and
scas
ret
or
mov
sbb
(bad)
ds
jp
cmp
scas
dec
in
fist
sbb
push
aam
data16
mov
mov
mov
add
fisubr
sub
jecxz
xor
int3
cld
pushf
sub
mov
cmp
mov
clc
out
jg
mov
xchg
push
fldcw
dec
clc
xor
out
mov
in
add
xchg
xchg
test
xchg
je
mov
fcmovne
and
add
sub
dec
movs
pop
clc
adc
push
cmps
dec
aas
dec
cmp
imul
jb
mov
lea
mov
jb
inc
lahf
or
std
enter
in
pop
cmp
or
ja
jb
dec
jno
call
shl
ja
push
pop
cmp
mov
dec
test
xor
pop
stc
pop
dec
popf
scas
and
jno
aaa
cmp
mov
jge
jp
inc
push
inc
mov
enter
xor
or
push
jb
mov
dec
add
jae
xchg
dec
cmp
mov
movs
fsub
lea
popf
int
mov
pop
mov
lea
js
jnp
mov
rol
pusha
lea
out
aam
cwde
adc
loopne
mov
add
xlat
popf
mov
inc
mov
or
ins
(bad)
cld
ss
xlat
ja
mov
test
div
pop
(bad)
imul
sbb
aas
mov
fwait
test
(bad)
mov
sub
jbe
(bad)
jbe
push
xchg
mov
dec
cmp
mov
dec
mov
xchg
pop
or
in
leave
dec
cmps
(bad)
sti
(bad)
std
inc
adc
mov
and
dec
into
or
push
enter
mov
push
xor
xchg
mov
or
adc
sbb
sub
sbb
dec
mov
sbb
mov
sbb
push
sar
imul
mov
and
clc
pop
jmp
adc
sar
bound
adc
and
push
dec
mov
xor
pop
test
xor
add
sub
sar
mov
sbb
jb
out
mov
jae
nop
pop
xor
rol
xor
sar
mov
out
mov
call
jg
sar
mov
inc
neg
sub
std
xchg
imul
out
clc
js
int
sbb
sub
mov
add
sub
arpl
and
outs
nop
iret
pop
mov
mov
mov
(bad)
rol
mov
aaa
push
mov
bound
hlt
sub
(bad)
jle
and
or
mov
ficomp
clc
mov
mov
outs
ret
push
sbb
dec
mov
cmp
aad
test
jb
(bad)
sub
lea
and
outs
test
dec
jmp
(bad)
scas
js
sub
(bad)
retf
(bad)
into
scas
clc
jg
scas
js
push
mov
push
pop
mov
jnp
mov
jle
mov
jg
mov
jnp
mov
push
mov
jg
mov
cmp
mov
jg
mov
jp
scas
js
push
mov
ja
mov
jp
mov
jg
mov
js
mov
push
cmps
js
pop
mov
jae
mov
jle
mov
pop
push
js
outs
mov
clc
jle
mov
jnp
mov
jp
mov
js
push
mov
jns
mov
jp
scas
mov
popa
push
scas
clc
pusha
xchg
fnstsw
pop
scas
mov
imul
scas
js
sub
bound
scas
clc
pusha
rcl
add
xchg
push
scas
cmp
scas
mov
pusha
sti
inc
je
push
scas
mov
imul
scas
mov
stos
imul
clc
pusha
add
mov
scas
clc
test
push
pop
lods
retf
into
into
scas
cmp
scas
clc
pop
(bad)
scas
cmp
mov
mov
imul
scas
mov
popa
xchg
movs
pop
push
mov
mov
pusha
inc
push
pop
mov
scas
js
jns
xchg
mov
js
xchg
scas
js
mov
mul
bound
pop
les
mov
outs
(bad)
xor
mov
mov
jo
push
xchg
mov
lods
js
dec
lods
js
push
lods
mov
(bad)
call
lods
mov
push
sub
js
inc
popa
jb
lods
mov
arpl
push
(bad)
mov
lods
clc
test
push
pop
lods
or
js
adc
js
pop
jae
inc
push
lods
mov
imul
lods
mov
vpexpandw
lods
js
cli
lods
cmp
push
(bad)
mov
lods
clc
lods
cmp
lods
retf
(bad)
into
lods
js
shr
cmp
ss
fisubr
clc
addr16
and
stos
lods
mov
addr16
mov
add
lods
mov
addr16
push
(bad)
mov
lods
mov
or
cmp
lods
cmp
lods
clc
imul
lods
mov
arpl
adc
mov
data16
jge
jbe
mov
adc
fidivr
lods
clc
leave
dec
lods
js
push
lods
cmp
js
sbb
inc
pop
lods
mov
imul
lods
mov
bound
lods
js
lods
js
cmp
mov
lods
clc
lods
stc
push
pop
lods
or
bound
lods
mov
popa
pop
jb
inc
push
lods
mov
imul
lods
mov
(bad)
imul
arpl
push
(bad)
mov
lods
clc
lods
cmp
lods
retf
(bad)
into
lods
js
shr
adc
fisubr
fs
test
stos
lods
mov
fs
push
cmps
mov
mov
inc
push
(bad)
mov
lods
js
jns
(bad)
mov
mov
jae
lods
clc
gs
int3
pusha
cmp
stos
mov
mov
mov
push
lds
jbe
mov
adc
stos
mov
stos
js
dec
stos
js
push
stos
clc
jae
stos
js
sbb
inc
pop
stos
mov
imul
stos
mov
bound
stos
js
ss
js
cmp
(bad)
mov
stos
clc
lods
stc
push
pop
lods
or
js
adc
js
fisttp
sbb
stos
mov
imul
jmp
imul
mov
add
mov
stos
clc
test
push
inc
mov
into
stos
cmp
stos
js
(bad)
stos
js
call
bound
push
popa
sub
stos
js
mov
js
mov
js
mov
push
(bad)
mov
stos
clc
lods
jns
pop
lods
mov
js
xchg
stos
clc
jne
stos
js
fidiv
inc
sahf
stos
mov
outs
(bad)
repnz
outs
stos
clc
outs
xchg
mov
jmp
cmp
push
(bad)
mov
stos
mov
lods
dec
stos
js
dec
stos
js
push
stos
clc
jp
stos
js
sbb
pop
stos
mov
imul
stos
mov
bound
stos
js
ss
js
cmp
(bad)
mov
stos
clc
lods
stc
push
pop
lods
or
js
adc
js
pop
je
inc
push
stos
mov
imul
stos
mov
(bad)
stos
js
imul
cmp
push
(bad)
mov
stos
clc
lods
cmp
lods
retf
(bad)
into
stos
js
shr
js
call
bound
xchg
fs
scas
stos
js
mov
js
mov
js
mov
push
(bad)
mov
stos
clc
lods
jns
pop
lods
mov
js
xchg
stos
clc
jg
stos
js
fidiv
sahf
stos
mov
outs
aam
jg
push
mov
ins
mov
test
cmp
push
(bad)
mov
test
pop
lods
dec
test
js
push
test
js
sbb
inc
pop
test
clc
imul
test
js
xor
js
cmp
(bad)
mov
test
pop
lods
or
js
adc
js
pop
ja
inc
push
test
clc
imul
test
js
repnz
js
cli
test
(bad)
mov
test
pop
lods
retf
(bad)
into
test
mov
popa
call
bound
nop
fs
scas
test
js
mov
js
mov
push
(bad)
mov
test
pop
lods
mov
js
xchg
test
js
fidiv
inc
sahf
test
clc
imul
mov
bound
js
jbe
js
jp
cmp
push
(bad)
mov
test
lods
mov
test
bound
js
push
test
dec
push
test
popa
sbb
inc
pop
test
bound
test
imul
test
bound
test
bound
test
bound
test
bound
test
arpl
push
(bad)
mov
test
lods
stc
push
pop
lods
or
js
adc
mov
bound
test
(bad)
test
popw
cmp
test
test
(bad)
out
test
dec
outs
jno
imul
js
add
mov
test
movs
cmp
mov
test
ror
mov
dec
(bad)
test
popa
call
bound
xchg
fs
scas
test
bound
test
bound
push
(bad)
mov
test
lods
jns
pop
lods
mov
js
xchg
test
dec
xchg
test
popa
fidiv
inc
sahf
test
bound
clc
imul
mov
bound
js
jbe
js
jp
cmp
pop
(bad)
mov
cmps
clc
lods
mov
cmps
js
dec
cmps
js
push
cmps
js
push
cmps
js
sbb
inc
pop
cmps
mov
imul
cmps
mov
bound
cmps
js
cmps
js
cmp
(bad)
mov
cmps
clc
lods
stc
pop
pop
lods
or
js
adc
js
pop
jns
inc
push
cmps
mov
imul
cmps
mov
(bad)
mul
cmp
pop
(bad)
mov
cmps
clc
lods
cmp
lods
retf
(bad)
into
cmps
js
shl
js
call
bound
aad
or
scas
cmps
mov
ret
mov
arpl
(bad)
mov
cmps
clc
lods
jns
(bad)
lods
mov
js
xchg
cmps
cmp
cmps
js
or
xchg
cmps
cmp
popf
jb
push
mov
push
jbe
mov
sbb
cmps
clc
test
pop
pop
lods
dec
cmps
mov
pop
push
cmps
mov
fs
mov
loop
cmps
mov
gs
repnz
fisubr
cmps
mov
gs
push
cmps
mov
outs
rcr
add
pop
or
cmps
cmp
cmps
mov
push
xor
call
clc
push
pop
push
(bad)
out
cmps
mov
ret
mov
add
mov
cmps
js
cmp
mov
cmps
js
into
cmps
cmp
fisubr
jb
daa
ret
out
xor
hlt
sub
mov
fisubr
add
jnp
bound
movs
and
das
xchg
es
mov
shr
adc
cmps
gs
cli
sub
movs
mov
das
xor
lds
xor
clc
sbb
cmp
ja
and
leave
aas
add
sub
jle
js
cmp
bound
or
aad
sub
movs
js
in
fnstsw
fidivr
mov
jae
in
xor
mov
pop
jae
in
xor
(bad)
sub
pop
js
inc
xchg
inc
bound
mov
mov
es
push
and
not
fwait
cmp
js
bound
stos
adc
cmp
lds
mov
loopne
scas
outs
imul
in
int3
movs
js
pop
addr16
mov
hlt
movs
js
aam
push
bound
aas
jb
lods
js
shl
or
mov
retf
nop
mov
(bad)
jmp
cmp
js
(bad)
bound
gs
mov
loope
(bad)
jo
jmp
stos
icebp
sbb
js
js
jns
out
js
out
inc
mov
jae
movs
(bad)
xor
sbb
add
mov
cld
inc
movs
cmp
lea
dec
movs
js
shl
sub
aam
mov
call
mov
popf
ss
or
sbb
in
aas
movs
cmp
mov
js
sbb
bound
mov
add
bound
cmp
jb
fs
aas
inc
mov
ja
mov
stos
mov
jmp
movs
cmp
dec
mov
retf
bound
movs
cmp
(bad)
fs
(bad)
out
sti
sub
outs
nop
cmps
sbb
mov
clc
xor
call
cmps
fs
xor
call
pop
jae
mov
dec
mov
adc
xchg
fs
(bad)
in
shr
jae
aad
jb
mov
inc
mov
jecxz
stos
sbb
jp
push
fwait
dec
fwait
mov
(bad)
jb
cmps
outs
jle
adc
jl
sti
mov
jae
jecxz
cmp
pop
mov
inc
mov
jmp
loop
mov
inc
and
pushf
mov
bound
fdivr
js
mov
mov
out
pop
jne
mov
jl
fimul
mov
mov
jp
mov
js
ret
pop
(bad)
div
sub
sar
mov
push
sub
push
adc
aaa
jb
mov
and
jecxz
(bad)
out
clc
sub
fld
push
or
fsubr
mov
bound
(bad)
jae
pop
bound
jmp
xchg
imul
fldpi
cmp
cli
sub
mov
and
(bad)
jae
pop
bound
imul
fdiv
cmp
ficomp
outs
jp
and
addr16
bound
imul
fdivr
cmp
ficomp
mov
ins
and
out
sub
sbb
imul
cmp
aas
out
call
mov
mov
cli
add
sub
bound
cmp
std
ja
mov
push
int
mov
push
bound
aas
into
pop
pop
add
pushf
popf
repnz
inc
dec
out
(bad)
sbb
jb
frstor
mov
mov
jb
(bad)
data16
mov
pop
cdq
lock
bound
sti
sub
mov
mov
clc
sub
inc
pop
mov
sbb
add
add
mov
(bad)
shl
inc
pop
nop
mov
pop
add
clc
stc
mov
(bad)
cmp
mov
pop
test
xchg
push
clc
jo
mov
loop
mov
jmp
sahf
mov
mov
jnp
cmp
sti
cmp
sub
clc
lods
js
bound
mov
mov
and
jecxz
popf
add
mov
bound
ds
inc
pop
sub
movs
pop
lods
cmp
mov
pop
js
adc
push
loop
mov
pop
scas
cmp
js
das
and
inc
mov
js
js
jmp
sahf
mov
ret
clc
js
fcmovnbe
cmp
and
xchg
repz
(bad)
stc
cmp
jo
and
in
push
mov
bound
pop
inc
pop
shl
mov
xor
lock
ja
sub
mov
sub
mov
jb
sub
push
mov
std
js
mov
add
test
jb
sar
xor
js
jmp
stos
adc
cmp
cli
js
sti
loopne
sbb
addr16
cdq
iret
loopne
sbb
dec
pusha
(bad)
fs
repnz
sub
and
bound
jns
imul
cmp
xchg
jns
inc
mov
jp
push
mov
pop
bound
jnp
pop
mov
lods
jl
cmp
popf
not
mov
jmp
xchg
cmp
in
mov
fbld
and
cmps
in
cmp
mov
retf
push
pop
inc
pop
call
jb
stc
jecxz
out
jmp
xchg
stos
(bad)
cmp
cmp
pop
stc
std
mov
cmp
push
scas
push
mov
sbb
xchg
mov
aaa
in
adc
xlat
sbb
push
rcl
(bad)
enter
leave
ficomp
arpl
(bad)
pop
jb
mov
push
inc
jb
add
jb
cwde
(bad)
jmp
ret
inc
scas
sahf
ret
(bad)
push
push
or
push
test
pop
jo
fst
mov
mov
mov
sbb
fst
rol
stos
pop
sbb
add
inc
inc
fld
jb
add
push
call
sbb
cmp
cmp
imul
mov
lea
pop
bound
pop
mov
mov
jb
jecxz
lea
sbb
mov
sbb
or
loopne
xor
and
bound
fisttp
scas
pop
js
mov
cmp
cld
pop
js
enter
mov
push
idiv
fld
inc
ret
jb
fst
fcmovne
shl
or
out
retf
xchg
and
pusha
out
mov
and
dec
adc
adc
and
shl
dec
(bad)
mov
int3
dec
xchg
jecxz
int3
push
out
int
and
push
(bad)
fisttp
popa
jecxz
shl
in
xchg
cmps
outs
or
popa
mov
xchg
pusha
xor
push
es
mov
es
or
es
dec
push
daa
or
adc
leave
xchg
cmps
push
mov
pusha
pop
or
and
or
arpl
mov
mov
mov
adc
cmp
push
and
dec
xchg
ror
and
dec
xchg
es
or
adc
push
retf
aam
xlat
mov
out
dec
push
cmps
and
adc
gs
jmp
leave
adc
mov
xchg
data16
push
and
or
fs
shl
push
dec
xchg
arpl
push
arpl
retf
cwde
dec
xchg
popa
push
dec
xchg
mov
mov
mov
loope
int
mov
mov
mov
(bad)
shl
sti
mov
or
in
cmp
inc
bound
inc
push
cmp
dec
mov
fwait
cmps
cmc
mov
aam
xchg
cmps
sub
or
jns
imul
fmul
ror
pop
imul
cmps
cld
fdiv
movs
enter
mov
mov
popa
out
dec
sbb
(bad)
jne
dec
in
and
int3
fcomp
mov
xor
dec
bound
addr16
cwde
and
push
inc
pop
aam
fstp
ror
fild
movs
repnz
xor
push
jb
cmps
test
outs
cmp
test
fmul
sub
jno
pushf
sbb
mov
add
dec
push
test
pop
cmp
inc
xor
popa
inc
jb
mov
pop
repz
mov
(bad)
sbb
mov
sbb
sub
pop
jmp
adc
addr16
adc
test
push
xchg
sub
cs
cmps
lea
aad
std
and
fbstp
lea
pop
mov
ins
pop
ret
mov
in
in
and
or
and
int
xor
mov
and
cmp
aam
neg
test
pusha
push
xchg
retf
adc
lods
jge
lahf
scas
loop
frstor
cmp
fild
mov
cwde
and
push
(bad)
pop
pusha
ret
in
xchg
and
push
ret
dec
loopne
inc
and
stc
pop
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
shl
je
int3
mov
aaa
push
shl
fcmovu
mov
pop
inc
nop
cmp
sub
lea
shl
imul
push
cmp
jl
call
ins
pop
sar
loop
and
xchg
jno
xchg
in
adc
jo
jne
xchg
jge
pop
sar
sbb
jl
cmp
mov
movs
jp
ret
in
jmp
push
cmp
cld
stos
xchg
repnz
fcmovu
fadd
inc
nop
cmp
sar
push
movs
mov
fild
sbb
movs
xor
and
cmp
dec
inc
bound
shl
icebp
jl
ficomp
movs
or
test
js
mov
cmp
mov
add
jne
lock
lods
call
jmp
sbb
addr16
(bad)
cld
inc
pop
cmp
cmps
movs
jle
into
add
xchg
jnp
cli
mov
jae
mov
fmul
(bad)
and
push
and
or
xor
push
arpl
into
(bad)
out
(bad)
(bad)
out
int3
xchg
out
iret
push
daa
test
adc
out
(bad)
push
out
lea
adc
xchg
cmps
sbb
push
pusha
popa
enter
mov
arpl
mov
and
or
jecxz
mov
mov
jp
xchg
jecxz
lea
inc
dec
aad
dec
(bad)
push
cmps
lea
push
(bad)
adc
aad
xchg
and
iret
aam
and
mov
stos
dec
push
in
(bad)
push
es
shl
xor
dec
adc
mov
inc
(bad)
adc
enter
or
int3
shl
int3
push
mov
fisttp
daa
mov
push
push
data16
retf
jmp
loopne
mov
loop
or
(bad)
cld
mov
cmps
(bad)
inc
xchg
add
and
ret
shl
adc
push
es
daa
cmps
bound
inc
jg
mov
lahf
add
jnp
inc
xlat
xchg
mov
xchg
push
jno
test
sar
xchg
cmp
mov
cli
ins
fisttp
jmp
xchg
xor
mov
sub
or
scas
or
sahf
int
pop
adc
cdq
jmp
(bad)
out
xchg
sbb
ror
mov
push
jmp
cld
mov
inc
mov
mov
inc
inc
mov
icebp
bound
push
scas
sub
inc
xor
mov
xor
fiadd
mov
aas
js
adc
inc
cwde
pop
cmc
iret
cmps
iret
pop
aas
cmp
outs
sub
js
xor
or
fcom
repz
pop
out
jecxz
sbb
(bad)
(bad)
adc
or
mov
sub
xlat
mov
mov
cmps
ret
mov
dec
sbb
sub
mov
clc
xor
mov
mov
jns
in
imul
out
mov
or
mov
sub
and
push
test
xor
inc
sub
lahf
sar
pop
rol
fdivr
sub
xchg
inc
push
loopne
xor
clc
or
adc
mov
stos
(bad)
push
sub
nop
das
sub
or
xchg
int3
(bad)
sbb
(bad)
fisubr
int3
(bad)
ficomp
fidiv
sbb
pop
push
(bad)
call
xlat
pop
push
int3
(bad)
pop
fs
(bad)
fcmove
pop
aam
inc
int3
(bad)
sbb
(bad)
fcmovu
sbb
pop
dec
int3
(bad)
fimul
(bad)
fisub
(bad)
fidivr
int3
(bad)
call
rcr
int3
(bad)
pop
sbb
(bad)
pop
aas
push
xlat
ficom
int3
(bad)
sbb
pop
aad
sbb
(bad)
ficomp
(bad)
pop
adc
int3
(bad)
call
rcr
cmc
iret
(bad)
pop
mov
(bad)
pop
imul
call
(bad)
pop
cmp
(bad)
call
(bad)
pop
inc
pop
xlat
pop
fxch
(bad)
call
rcr
mov
fwait
xlat
call
(bad)
fidivr
iret
(bad)
pop
mov
iret
(bad)
call
(bad)
pop
xchg
iret
(bad)
sbb
iret
(bad)
ficomp
iret
(bad)
fiadd
iret
(bad)
fimul
iret
(bad)
fidiv
(bad)
sbb
(bad)
fidiv
(bad)
call
(bad)
sbb
(bad)
sbb
(bad)
pop
push
iret
(bad)
fiadd
(bad)
ficomp
(bad)
fimul
(bad)
sbb
(bad)
ficom
(bad)
pop
dec
iret
(bad)
ficomp
(bad)
fidiv
iret
(bad)
fisubr
iret
(bad)
fidivr
iret
(bad)
fisub
iret
(bad)
fidivr
iret
(bad)
fidiv
iret
(bad)
ficom
iret
(bad)
fidiv
iret
(bad)
fidivr
iret
(bad)
fisub
iret
(bad)
fisubr
iret
(bad)
(bad)
into
(bad)
fcmovu
into
(bad)
call
(bad)
pop
jecxz
(bad)
fcmove
into
(bad)
sbb
into
(bad)
sbb
into
(bad)
call
(bad)
pop
fcmovne
(bad)
(bad)
into
(bad)
pop
ret
into
(bad)
(bad)
into
(bad)
sbb
into
(bad)
(bad)
into
(bad)
sbb
into
(bad)
call
(bad)
call
(bad)
fisubr
into
(bad)
ficom
into
(bad)
call
(bad)
fiadd
into
(bad)
sbb
into
(bad)
pop
jno
(bad)
fidiv
call
(bad)
pop
jp
loope
jbe
pop
cmp
pop
and
push
into
xchg
mov
dec
pop
dec
push
or
xchg
lods
(bad)
pop
pop
je
bound
and
dec
fiadd
or
adc
inc
aam
ss
addr16
xor
pop
shl
inc
leave
pop
xchg
loopne
mov
fiadd
pop
pop
test
xor
mov
add
inc
rol
cmp
adc
dec
neg
inc
mov
stc
pop
sub
mov
pop
dec
test
pop
jbe
aad
add
add
nop
inc
test
neg
or
ss
adc
(bad)
cwde
dec
test
(bad)
push
mov
in
(bad)
test
pop
enter
fadd
push
pop
imul
mov
gs
stc
ja
scas
xor
push
mov
(bad)
pop
xchg
(bad)
ja
xor
mov
popf
(bad)
sbb
or
mov
into
mov
cmp
fld
lahf
or
cmp
popf
dec
and
std
sbb
dec
icebp
mov
pop
inc
sub
inc
(bad)
mov
leave
jge
out
ss
inc
outs
sti
out
stos
adc
(bad)
mov
fld
daa
fwait
push
aam
push
jns
clc
add
mov
sub
pop
sbb
imul
and
sbb
and
test
scas
sbb
mov
test
cs
pop
sbb
shl
xchg
pop
pop
pop
pop
fstp
dec
aad
add
inc
in
inc
dec
xchg
cmp
mov
mov
or
jmp
stc
(bad)
xchg
jmp
or
inc
xor
mov
xor
ffree
int3
fadd
pop
jle
and
mov
inc
sahf
or
(bad)
rcl
sbb
fadd
dec
leave
pop
mov
jb
loop
xchg
mov
(bad)
or
or
aam
inc
in
adc
cli
outs
enter
or
mov
xchg
inc
and
or
cli
jg
retf
fadd
enter
fdivr
dec
out
aaa
mov
inc
xor
(bad)
pop
inc
stos
or
fadd
and
or
pop
sbb
xchg
mov
cmp
dec
int3
out
addr16
dec
sbb
(bad)
pop
fist
xchg
xlat
cdq
aam
sbb
gs
mov
in
dec
pop
pop
pop
aas
retf
dec
jmp
mov
pop
cdq
xchg
aad
retf
pminub
mov
pop
jmp
retf
or
push
stos
enter
mov
sub
into
call
adc
dec
push
retf
(bad)
adc
(bad)
call
xchg
xor
xchg
loope
cmp
retf
dec
cmc
retf
(bad)
xchg
adc
clc
call
retf
fild
out
push
and
jae
add
adc
pop
pop
adc
imul
(bad)
pop
jae
ss
stos
xchg
pop
out
xchg
jecxz
or
stos
xchg
sbb
in
sub
xchg
fistp
mov
sbb
cmp
std
cmp
sub
inc
push
mov
push
push
inc
adc
out
inc
xchg
and
add
aam
jnp
push
loop
inc
adc
add
and
add
push
daa
xchg
inc
shl
test
popa
pop
inc
xchg
mov
in
push
jecxz
adc
xor
adc
cmp
shl
mov
xchg
cmps
lea
loopne
ret
push
add
push
addr16
test
mov
movs
inc
aad
push
adc
es
xchg
daa
ja
adc
jecxz
pop
shl
ret
mov
dec
les
adc
adc
push
(bad)
push
pusha
pop
adc
fiadd
aam
mov
add
loopne
test
mov
mov
xchg
pusha
jl
xchg
arpl
push
and
inc
push
jecxz
adc
retf
popa
rol
adc
pop
inc
push
popa
fiadd
loop
xchg
mov
(bad)
inc
mov
xchg
call
ins
dec
jb
sub
or
inc
xor
jmp
les
dec
jmp
outs
mov
test
out
mov
dec
sti
repz
loopne
inc
xchg
sar
push
pop
pop
and
lea
mov
mov
sahf
aaa
pop
std
push
pop
sbb
xchg
cmp
fld
mov
pop
or
aaa
test
xchg
inc
pop
jb
sub
adc
clc
cmp
pop
mov
fadd
push
push
clc
xchg
mov
pop
or
js
gs
mov
cmp
pop
xor
xchg
sbb
call
mov
jmp
call
pop
(bad)
mul
mov
push
pop
mov
xor
(bad)
fstp
jbe
(bad)
mov
mov
xchg
inc
jb
jmp
ja
dec
add
fcomp
mov
nop
(bad)
jle
popf
adc
test
loopne
adc
(bad)
in
fcomp
or
fisubr
sub
sbb
mov
mov
pop
test
arpl
add
or
cmp
fstp
lea
xchg
js
add
push
sub
pop
cmps
lea
pop
clc
mov
mov
cld
cmp
pushf
pusha
jge
add
std
(bad)
sbb
mov
push
jb
std
ins
mov
mov
push
(bad)
sbb
inc
xchg
or
add
sbb
stc
or
push
push
cmp
or
jno
jns
pop
ja
popf
xor
js
add
add
mov
mov
push
xchg
js
es
inc
sahf
dec
add
push
out
sbb
icebp
fadd
adc
push
shl
xor
js
add
fcmovnb
pop
mov
fild
mov
xchg
add
retf
mov
push
cs
gs
pop
mov
sbb
rdpmc
sub
imul
adc
fiadd
push
cld
push
pop
or
inc
xor
adc
pop
jecxz
mov
dec
aad
push
or
inc
jb
clc
push
jb
clc
xchg
cmps
out
shl
stc
adc
lods
js
out
cmp
arpl
cmp
push
cmps
xchg
xchg
mov
dec
cmp
sar
push
data16
xchg
data16
xchg
mov
imul
push
loope
(bad)
shl
idiv
push
pusha
js
push
cmp
cmps
cmp
inc
mov
xchg
and
cli
push
out
jns
cmps
adc
push
out
jnp
and
xchg
loop
aas
aad
mov
aas
(bad)
jecxz
cmp
and
stc
adc
sti
push
popa
add
mov
iret
sti
adc
loope
mov
adc
stc
push
loopne
mov
aad
gs
pop
popa
push
mov
xchg
(bad)
(bad)
cli
(bad)
arpl
cmp
arpl
mov
adc
jl
and
clc
adc
aam
shl
adc
shl
pop
js
cmps
pop
jns
daa
mov
addr16
mov
sub
sti
(bad)
and
and
mov
dec
fldl2e
inc
adc
push
es
loop
lahf
cmp
mov
xchg
mov
addr16
data16
sbb
push
or
xchg
cmps
jg
dec
aad
push
push
push
or
xchg
cmps
in
cli
out
popf
cld
jge
sbb
cmp
or
mov
mov
mov
cmc
xchg
xor
scas
lea
pop
pushf
sub
mov
adc
popf
(bad)
fsubr
adc
mov
xor
inc
add
adc
add
adc
mov
add
sub
xor
enter
pop
std
xchg
enter
pushf
cmp
(bad)
jmp
icebp
inc
lods
data16
sbb
sub
dec
call
push
mov
mov
lods
les
mov
dec
inc
mov
xlat
dec
mov
mov
pop
sub
jp
stc
in
adc
dec
xchg
cmp
(bad)
std
in
rcl
ret
cmp
xchg
cmp
movs
mov
fstp
adc
cmp
retf
pop
iret
test
test
mov
pop
push
shl
test
jns
scas
jg
xchg
imul
mov
push
daa
addr16
adc
xchg
fldenv
push
cmp
dec
mov
sti
addr16
jge
ss
xor
enter
repz
out
mov
or
jmp
pop
mov
pop
aaa
jmp
jecxz
sahf
mov
and
icebp
shl
xchg
mov
cli
xchg
outs
mov
shl
mov
(bad)
addr16
mov
adc
inc
mov
push
out
cmp
push
and
mov
shl
call
out
stc
push
arpl
cmp
jno
xchg
jecxz
jns
loopne
cmp
mov
mov
(bad)
addr16
cmp
shl
sar
push
and
adc
pusha
js
cmps
mov
xchg
loop
cmp
xchg
mov
jnp
shl
sti
cmp
and
mov
(bad)
bound
jns
popa
push
ds
xchg
ds
mov
cwde
js
daa
mov
jns
loopne
mov
aam
xor
pop
and
cmp
add
and
mov
adc
dec
mov
and
mov
push
test
mov
jb
(bad)
inc
cmps
retf
(bad)
mov
loop
inc
jb
rol
xchg
add
rcl
mov
add
add
add
(bad)
push
mov
(bad)
adc
mov
push
(bad)
sbb
or
or
(bad)
adc
jo
out
pop
enter
mov
arpl
sar
(bad)
fdiv
fiadd
mov
sub
out
pop
or
scas
jge
mov
(bad)
dec
xor
pop
dec
bound
xchg
xchg
lea
or
pushf
das
std
push
push
add
adc
jge
cmp
and
sbb
daa
bound
call
test
mov
repnz
imul
ror
or
(bad)
repz
test
adc
das
test
popa
rcr
or
out
pop
pushf
jl
jbe
xchg
arpl
or
js
leave
shr
jle
sub
stos
cdq
pop
pushf
packuswb
fisttp
sub
je
js
mov
cmp
aam
lea
test
adc
test
lea
adc
add
push
mov
iret
pop
add
xchg
adc
adc
leave
outs
xor
xchg
sub
xchg
push
add
xor
or
push
jmp
rcr
movs
fst
(bad)
cmps
push
adc
cmps
sbb
sbb
fs
push
fbstp
rcr
fnsave
mov
adc
sbb
push
pop
fs
aad
ja
rcr
in
(bad)
pop
in
(bad)
pop
mov
dec
xchg
repnz
int
fst
jp
leave
fs
push
maxps
movs
add
push
inc
mov
mov
data16
js
inc
into
fst
inc
jb
sub
xchg
mov
pop
out
icebp
adc
test
cmp
out
lods
fisub
mov
pusha
bound
rol
or
push
jb
repnz
loop
icebp
push
addr16
xchg
bound
je
daa
das
mov
mov
xor
push
and
hlt
xchg
and
push
addr16
(bad)
and
mov
mov
enter
or
adc
push
lock
and
push
cmps
pop
xor
out
hlt
push
mov
test
push
and
xlat
pusha
jae
push
pusha
mov
jae
mov
test
jecxz
mov
and
cmc
push
and
not
and
mov
loope
jae
mov
and
call
lock
and
hlt
adc
mov
mov
and
mov
out
icebp
adc
out
jae
jecxz
mov
cmps
push
xor
cmps
fdiv
movs
in
xchg
es
xor
adc
mov
xchg
and
mov
mov
lock
es
stos
xchg
fiadd
push
fild
rol
jns
pushf
in
or
xor
xchg
(bad)
xlat
popa
loopne
dec
push
mov
repnz
jnp
mov
je
pushf
loope
es
mov
cmp
ins
xchg
push
nop
xchg
dec
cld
and
jo
ja
lahf
loopne
sbb
jmp
mov
pop
mov
fcom
xchg
(bad)
bound
mov
jae
(bad)
retf
lock
and
dec
mov
inc
mov
fdivr
mov
and
inc
and
(bad)
or
mov
or
cmp
mov
sahf
fiadd
or
lods
out
mov
(bad)
out
call
jne
js
fild
or
and
stc
sbb
scas
stos
shl
pop
xor
std
lea
cmps
leave
cdq
stos
int
int3
mov
pop
out
jns
cld
sbb
enter
int
outs
(bad)
dec
dec
imul
pop
fst
lea
mov
rcr
and
out
pop
mov
rcr
jns
mov
inc
or
lea
(bad)
fnstenv
push
daa
xchg
popf
in
fidiv
mov
push
and
push
pop
das
and
jne
mov
or
ss
jae
outs
test
xchg
cmp
push
js
xchg
(bad)
mov
in
mov
es
mov
pusha
or
adc
xchg
cmps
xlat
mov
mov
lahf
jno
and
aaa
push
data16
mov
out
jno
data16
xchg
loop
xor
xor
adc
xor
and
mov
and
xor
mov
push
mov
addr16
xor
loopne
hlt
push
jecxz
mov
popa
and
adc
jecxz
adc
daa
out
lock
mov
xchg
out
jno
and
lock
jecxz
ja
and
xlat
loopne
xor
and
not
xchg
xor
xchg
mov
es
out
mov
and
xor
mov
mov
xchg
loopne
lock
mov
repnz
and
not
bound
aaa
xlat
bound
adc
push
ja
movs
shl
shl
and
arpl
xor
outs
jb
mov
xor
ja
mov
add
adc
into
repz
mov
aad
shl
xchg
mov
push
xor
daa
(bad)
shl
das
xor
scas
jno
jecxz
jae
popa
jbe
pop
and
ja
mov
xor
daa
cmps
ret
fild
inc
icebp
push
test
push
jns
jge
enter
inc
jnp
hlt
inc
mov
test
jno
fild
add
inc
push
inc
inc
sti
cdq
(bad)
int
sbb
ss
movs
addr16
cwde
popf
push
cmp
iret
in
mov
push
mov
bound
lea
dec
pop
pushf
jmp
lea
imul
test
inc
or
push
fwait
inc
mov
mov
push
push
and
outs
jns
mov
bound
jmp
(bad)
cld
and
mov
stos
in
dec
ds
nop
mov
sub
cmp
xchg
retf
mov
cwde
cmp
mov
loopne
jbe
xlat
adc
pop
adc
cld
in
mov
in
mov
call
cmps
mov
add
sbb
dec
and
mov
pop
mov
mov
pop
mov
push
imul
xchg
mov
stos
outs
call
leave
dec
cdq
lea
xchg
mov
xchg
fwait
sbb
mov
test
cmp
dec
mov
add
les
shr
jno
jl
test
popa
xlat
retf
sub
jbe
xlat
clc
push
xchg
ins
jbe
xlat
clc
inc
jae
jge
jg
test
(bad)
mov
jbe
mov
jbe
mov
jbe
mov
adc
mov
jl
call
pop
mov
std
mov
push
(bad)
pop
mov
jl
push
test
ins
sbb
dec
daa
into
lods
ins
cmp
icebp
lods
or
sub
sub
call
lods
ins
lock
ret
sub
adc
mov
push
mul
cmp
into
xchg
xor
and
xor
daa
into
jne
in
xor
jecxz
xor
jecxz
hlt
push
and
jb
mov
outs
repnz
pusha
in
jbe
and
not
jle
push
addr16
push
arpl
jno
mov
mov
push
mov
pop
jno
es
mov
daa
xor
bound
xchg
out
ss
movs
mov
adc
mov
xchg
loope
mov
es
xchg
jecxz
mov
movs
pop
xor
loope
icebp
xchg
out
mov
and
mov
bound
shl
pop
mov
in
xor
loope
not
out
not
daa
jae
adc
div
shl
xchg
shl
test
push
jecxz
cmc
xchg
out
mov
and
addr16
xor
es
cmps
daa
cmc
push
cmps
jmp
mov
and
mov
movs
hlt
jne
es
fs
adc
es
mov
movs
cmp
inc
dec
fdivr
data16
cmc
fstp
imul
jb
out
jb
out
inc
sub
cmps
addr16
adc
sar
dec
mov
(bad)
push
mov
es
jae
frstor
and
cmp
imul
fsub
pop
imul
out
outs
lods
stc
into
dec
rol
mov
popa
jb
cwde
addr16
repz
mov
sbb
add
add
hlt
fcomp
movs
cmps
dec
aas
sbb
leave
test
pop
dec
loop
inc
mov
cmps
cwde
adc
jecxz
fadd
mov
xchg
daa
mov
cli
pop
pop
cmp
fcomp
mov
loope
cmp
pusha
mov
adc
loope
xchg
inc
enter
sbb
inc
daa
imul
fst
mov
push
or
(bad)
int3
xchg
mov
dec
xlat
(bad)
mov
xchg
mov
adc
(bad)
jnp
pop
mov
lea
js
cli
or
jb
jbe
fmul
(bad)
cmp
xchg
cmps
xlat
lods
or
std
arpl
sbb
adc
push
sub
sbb
cmps
dec
sbb
or
xor
mov
jmp
xchg
push
mov
ror
xchg
push
sti
mov
pusha
add
pop
mov
add
mov
jo
add
iret
daa
push
sbb
imul
pop
stos
mov
add
lods
neg
xor
out
xchg
push
in
test
(bad)
xchg
adc
dec
adc
add
add
add
mov
mov
in
add
outs
in
test
int
push
aaa
test
cmp
or
or
aam
int
in
add
icebp
and
dec
je
push
aaa
fsub
jnp
or
test
sbb
adc
or
mov
les
mov
mov
sub
mov
xor
add
jge
xor
pop
ja
stos
inc
shl
mov
in
inc
mov
(bad)
test
dec
pop
shl
mov
in
adc
pusha
ja
xor
jmp
mov
sbb
mov
lds
out
(bad)
out
add
push
mov
test
push
mov
les
or
loop
cmps
or
jecxz
cld
cmp
xchg
cmp
imul
jbe
outs
inc
inc
xor
stc
inc
stos
mov
and
mov
cmp
mov
sar
inc
jb
sub
pusha
(bad)
push
sub
sbb
mov
loope
aad
cmps
lods
push
and
lods
adc
jmp
addr16
adc
js
adc
jg
adc
loope
scas
shl
mov
movs
dec
in
xchg
mov
adc
test
pusha
push
outs
push
mov
loopne
shl
call
adc
jno
shl
cmp
shl
les
push
daa
enter
dec
das
shl
cs
out
scas
push
and
out
push
in
jmp
cmps
imul
das
aad
outs
ins
adc
jmp
jg
xchg
mov
shr
add
push
in
jmp
adc
and
adc
out
call
push
es
scas
xchg
imul
shl
cmc
shl
mov
scas
adc
imul
cmps
adc
adc
pop
outs
push
fs
jmp
arpl
das
xchg
cmps
outs
scas
adc
sub
sub
les
inc
dec
xor
push
jb
and
test
fcomp
dec
mov
sbb
push
cmp
mov
mov
add
mov
push
in
rol
inc
mov
and
sub
inc
clc
cmc
js
jmp
jp
dec
mov
push
aam
push
adc
lock
cmp
pusha
cmps
push
mov
jbe
cli
movs
in
leave
pop
or
or
push
bound
jp
sbb
dec
test
in
adc
into
xchg
call
jl
jno
mov
addr16
lock
mov
mov
imul
les
xor
push
jb
add
push
mov
mov
cmp
icebp
cli
pop
mov
add
xchg
lea
cli
pop
push
(bad)
cmp
mov
out
js
jle
pop
fmul
outs
repnz
sahf
and
jmp
cmp
mov
sub
out
xchg
popf
or
add
sbb
call
cwde
aam
mov
xchg
lea
cmp
lock
mov
xchg
add
add
nop
push
cmp
push
mov
sub
(bad)
ret
pop
pushf
mov
mov
add
mov
xchg
and
jge
xchg
add
adc
js
sub
addr16
es
dec
ins
dec
xchg
mov
push
jmp
sub
sub
sub
imul
lock
jmp
jmp
or
sub
rcl
pop
dec
xor
push
ds
(bad)
xchg
jb
int
jo
rcl
mov
push
js
(bad)
push
jne
not
jb
hlt
push
jo
call
push
jo
loop
jne
jecxz
jb
sbb
jo
push
jo
adc
lock
imul
push
or
in
sbb
call
and
test
jo
pop
test
jmp
js
sbb
imul
cmp
push
iret
xor
cmovs
jae
push
pop
imul
arpl
xchg
pmaxsw
cmp
pop
push
lock
call
inc
in
push
jmp
mov
movs
sbb
sub
pop
ins
in
cmps
jmp
nop
aam
push
lock
mov
dec
cwde
sbb
sub
out
je
jmp
pop
and
xlat
fsubr
inc
jmp
test
xor
sub
lock
push
test
xor
sub
lock
jmp
popf
(bad)
pop
push
cmp
mov
pop
mov
call
push
sar
pop
test
mov
sub
(bad)
or
push
loope
aam
lock
cmp
adc
jo
add
rcr
mov
pusha
jbe
loope
adc
dec
sub
data16
xchg
jae
es
jo
imul
sub
dec
mov
mov
push
int
stc
push
adc
icebp
jl
push
sub
test
lock
aam
xchg
je
jmp
push
gs
jno
cmp
adc
push
cwde
jae
push
mov
mov
lock
jmp
test
ins
jnp
dec
popf
dec
mov
inc
mov
inc
stos
inc
scas
inc
sar
inc
jb
inc
(bad)
inc
jb
inc
inc
das
push
jb
stos
push
and
imul
loope
lods
adc
lods
lods
push
daa
jo
xchg
mov
jp
(bad)
out
lods
push
es
das
shl
add
out
xchg
out
imul
xchg
lods
xlat
out
sub
mov
pop
push
pop
movs
and
jmp
pusha
sub
loope
imul
outs
shl
ds
aad
jnp
adc
sub
daa
or
mov
push
loopne
jmp
and
push
data16
in
xchg
cmps
out
(bad)
data16
shl
sub
pop
out
out
shl
mov
push
jecxz
test
loopne
jmp
(bad)
ins
aad
iret
ins
push
mov
shr
loop
das
aad
fwait
push
push
mov
jmp
cs
imul
xchg
data16
aad
jl
push
popa
cmp
adc
jmp
push
stos
adc
daa
xchg
sub
and
lds
retf
jae
popf
outs
or
js
test
push
outs
mov
push
ss
jp
pop
jge
mov
inc
push
pop
xor
mov
icebp
pop
and
add
loope
push
or
pop
jb
xor
bound
dec
jb
loope
jl
rol
ret
mov
inc
jb
cmc
mov
sub
lds
cmps
aam
shl
dec
imul
out
or
test
jle
dec
cmp
jbe
daa
adc
jmp
push
in
sub
mov
lock
cmp
fisttp
enter
jb
movs
cmp
push
or
adc
lahf
xchg
mov
icebp
inc
push
arpl
inc
out
imul
inc
loop
fstp
leave
mov
jno
sbb
xor
or
jp
xchg
push
sub
lods
repnz
sbb
nop
inc
repnz
imul
mov
iret
inc
test
add
xchg
nop
mov
xor
push
mov
nop
mov
xor
cmp
fwait
and
dec
pop
or
add
xlat
sbb
loop
inc
dec
out
ss
mov
xor
dec
sub
cmp
mov
aaa
loopne
pop
mov
pop
mov
repnz
mov
mov
aaa
xchg
(bad)
lds
adc
mov
out
mov
mov
xchg
mov
add
pop
xchg
sbb
or
push
fidivr
lea
lods
cdq
pop
jmp
movs
pop
(bad)
in
mov
add
cmps
sti
(bad)
push
pop
test
ret
sub
mov
inc
pushf
mov
push
test
loop
fist
mov
mov
fldenv
mov
fdecstp
test
inc
pop
movs
imul
in
lahf
xchg
addr16
or
adc
test
add
fldenv
adc
xchg
rol
arpl
add
sub
xchg
ds
test
jle
dec
lahf
data16
(bad)
pop
in
fcom
movs
and
cs
adc
and
cdq
out
xchg
add
scas
add
(bad)
inc
(bad)
sbb
(bad)
jmp
in
adc
outs
icebp
inc
fsub
ins
adc
gs
leave
fsubp
loop
sbb
and
leave
daa
lea
sbb
in
inc
pop
movs
sbb
inc
pop
cmps
xor
and
int3
fsubp
jne
pop
and
push
aad
gs
in
fsin
push
test
movs
fadd
mov
test
cmps
xchg
add
lahf
es
in
aam
jne
adc
lods
cmp
es
sbb
hlt
aam
mov
cmc
sbb
(bad)
icebp
sbb
(bad)
std
sbb
(bad)
stc
sbb
inc
sbb
(bad)
sbb
vmovss
(bad)
sbb
(bad)
sbb
vmovaps
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
vsqrtss
vmulss
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
dec
sbb
(bad)
adc
sbb
(bad)
sbb
sbb
(bad)
and
sbb
(bad)
sub
sbb
(bad)
xor
sbb
(bad)
cmp
sbb
inc
(bad)
sbb
dec
(bad)
sbb
(bad)
push
sbb
(bad)
push
sbb
(bad)
pop
sbb
(bad)
pop
sbb
(bad)
gs
(bad)
popa
sbb
(bad)
ins
sbb
(bad)
imul
(bad)
sbb
(bad)
jge
(bad)
sbb
inc
sbb
dec
sbb
(bad)
xchg
sbb
(bad)
xchg
sbb
(bad)
popf
sbb
(bad)
cdq
sbb
(bad)
movs
sbb
(bad)
mov
sbb
(bad)
test
sbb
(bad)
mov
(bad)
sbb
(bad)
mov
sbb
inc
sbb
dec
sbb
dec
sbb
(bad)
aad
(bad)
sbb
(bad)
fstp
(bad)
sbb
(bad)
in
(bad)
sbb
(bad)
in
sbb
(bad)
jmp
sbb
(bad)
icebp
sbb
(bad)
std
sbb
(bad)
stc
sbb
inc
sbb
dec
sbb
(bad)
adc
sbb
(bad)
sbb
sbb
(bad)
and
sbb
(bad)
sub
sbb
(bad)
xor
sbb
(bad)
cmp
sbb
inc
(bad)
sbb
dec
or
dec
adc
mov
fsubr
mov
jle
jae
jg
sbb
mov
outs
(bad)
jle
dec
xchg
jae
sahf
jmp
jae
jno
push
into
(bad)
jnp
lds
hlt
ds
gs
adc
ret
test
(bad)
fstp
test
and
add
and
sub
inc
adc
lds
out
ds
mov
es
lds
in
ds
add
movs
rcr
cmp
popf
dec
xchg
jae
sahf
sti
ds
sbb
out
sbb
sahf
jmp
mov
cmp
popa
mov
std
frstpm(287
(bad)
push
jae
jno
pop
in
add
(bad)
mov
mov
cmp
aas
adc
hlt
(bad)
mov
xchg
jg
sbb
mov
sub
cwde
(bad)
fdivr
jle
add
std
mov
out
sub
pop
xchg
lds
(bad)
mov
or
add
add
popf
mov
out
dec
fdiv
sub
(bad)
cdq
sar
push
das
xor
test
sahf
test
xchg
inc
add
inc
push
scas
popf
dec
jp
out
std
or
and
aam
stc
es
movs
mov
in
add
jg
addr16
(bad)
fisttp
inc
dec
xor
mov
jae
popf
in
rcr
in
lea
das
adc
mov
sahf
cdq
fadd
lahf
adc
add
(bad)
xor
fs
inc
in
jb
push
je
sar
sbb
xchg
or
jae
jg
enterw
inc
mov
add
sbb
xchg
imul
pop
addr16
xor
in
jmp
xor
pop
scas
popf
std
jnp
out
push
or
idiv
les
dec
sbb
test
scas
or
in
sbb
sbb
push
add
sbb
and
xchg
push
xchg
dec
xchg
popa
fxam
xchg
cmp
inc
pushf
push
cdq
inc
fsub
into
dec
pushf
push
xchg
inc
shl
push
ret
mov
push
retf
test
(bad)
dec
xchg
push
mov
aam
cs
mov
or
es
cs
in
pushf
cmc
ds
cmp
retf
jae
cdq
fistp
pushf
scas
rcr
out
int
in
add
aas
add
or
sti
mov
xchg
fld
xchg
jnp
daa
lds
and
cmp
test
cmp
out
jns
inc
push
push
xchg
sbb
in
mov
retf
jne
sub
test
aaa
dec
imul
sub
sbb
aam
ds
pop
cmps
lods
and
stos
test
cs
dec
cmps
lods
nop
mov
jmp
xor
or
mov
jle
jne
xor
out
mov
div
or
add
out
imul
div
sbb
adc
out
ja
div
sub
and
out
ja
div
ds
test
cdq
enter
inc
mov
add
test
out
(bad)
in
lahf
lds
aam
shl
ror
fsub
es
xchg
rol
(bad)
push
mov
repz
div
ds
rol
(bad)
cmps
mov
repz
div
ds
test
cwde
enter
inc
mov
fst
test
loope
inc
in
test
mov
(bad)
mov
clc
pop
cmp
daa
lods
adc
dec
inc
cmps
xor
lods
fucom
test
mov
mov
cmp
fld
cdq
pop
cmc
(bad)
pop
movs
xor
add
ds
pop
mov
cmp
sahf
jns
cwde
out
retf
pusha
push
cmp
push
inc
lods
aam
out
xchg
daa
in
dec
test
gs
xchg
out
mov
jmp
inc
xchg
xchg
out
mov
vcmpsd
ds
mov
xchg
popf
inc
cmps
pop
or
test
je
sbb
push
or
cmps
lods
movs
sbb
jmp
test
dec
cmps
lods
xor
cli
inc
test
jp
ror
adc
dec
xchg
dec
movs
out
and
mov
jae
popa
jmp
sbb
pushf
(bad)
test
add
sbb
push
in
sub
mov
cmp
(bad)
movs
lock
movs
test
in
(bad)
mov
fwait
inc
in
cmc
inc
out
xchg
add
or
lds
in
(bad)
sbb
and
sbb
or
add
rol
xchg
jg
imul
lods
dec
sbb
(bad)
jns
mov
fcomi
inc
ins
xchg
lods
mov
(bad)
imul
push
sub
add
mov
sti
hlt
inc
push
sub
cmps
dec
inc
popf
call
fwait
add
aam
inc
adc
pop
sahf
adc
gs
int
test
mov
jg
in
(bad)
mov
cli
jle
mov
jae
popa
(bad)
ds
pop
out
hlt
add
in
hlt
inc
das
aas
in
fisubr
js
sbb
test
inc
bound
sub
in
out
cmc
test
xor
inc
das
pop
in
ficom
js
and
test
inc
cmp
sub
pop
out
inc
in
dec
hlt
inc
das
outs
in
fidivr
in
lods
out
test
adc
sub
pop
out
dec
in
(bad)
mov
sub
hlt
inc
das
inc
in
fsubp
push
ss
in
lods
mov
cmps
jecxz
and
xchg
jnp
fistp
loope
jle
sbb
gs
out
repz
inc
sub
idiv
test
and
xchg
jnp
stos
out
ds
test
scas
cmc
inc
sti
shl
mov
loopne
popf
leave
xor
jae
pusha
fdivr
int3
and
xchg
jg
in
(bad)
sahf
or
(bad)
in
movs
out
out
xchg
jae
stos
jmp
es
test
loop
mov
or
test
push
retf
mov
mov
mov
ds
mov
(bad)
dec
sar
lods
das
xor
repz
fiadd
mov
aad
push
mov
mov
jae
(bad)
fistp
scas
ds
loop
out
ss
enter
ja
cli
(bad)
mov
xchg
jnp
popf
enter
inc
mov
cmp
cmp
lahf
xchg
cli
addr16
nop
and
rol
pop
sahf
xchg
mov
lahf
jge
out
jle
sbb
and
addr16
mov
jg
sar
pop
sahf
mov
bound
jle
sbb
or
loop
xchg
mov
xor
sbb
and
xchg
jno
aas
(bad)
jle
ss
adc
xchg
jnp
pusha
fistp
and
repz
add
adc
and
jle
cli
xchg
jnp
ffree
fadd
inc
add
pop
mov
cmp
inc
add
jg
inc
xor
loope
sar
repnz
add
sub
xchg
pop
and
jle
cli
xchg
jnp
ffree
add
or
inc
inc
add
xor
inc
xor
fistp
ins
repnz
add
jge
xchg
aaa
jecxz
(bad)
les
nop
and
in
loopne
ror
mov
add
jecxz
jle
sbb
popa
ret
sti
out
scas
inc
(bad)
ds
imul
out
ret
sub
loopne
rol
test
int
dec
in
arpl
add
push
jecxz
push
fsubrp
jecxz
fild
pop
pop
add
jb
(bad)
imul
std
sub
and
sar
push
in
pusha
pop
xchg
aad
sar
icebp
inc
push
aaa
and
fidivr
(bad)
loopne
jle
lock
jp
(bad)
xchg
jnp
faddp
ds
ret
test
mov
fs
sar
sbb
stc
sar
fdivr
mov
xor
and
jle
push
mov
add
out
add
and
jo
loopne
pop
(bad)
cli
lds
xchg
inc
add
xchg
and
jle
stc
xchg
jnp
faddp
ds
lds
out
sti
sub
xchg
jg
loopne
mov
aad
inc
scas
mov
fdivr
(bad)
dec
jb
jns
test
xchg
lock
fidiv
mov
ss
mov
lds
frstor
in
cwde
cmp
iret
cmp
inc
cld
loope
(bad)
sub
out
xchg
inc
sar
leave
ror
out
adc
mov
(bad)
test
add
icebp
cmp
cs
bound
into
js
ret
test
lea
ins
jle
push
sysret
in
push
inc
jb
pop
(bad)
and
pop
shl
int
shl
rcr
aam
rcr
shl
sahf
shl
popf
pop
push
and
ficom
mov
sbb
mov
repnz
and
shl
mov
sbb
out
push
xchg
mov
mov
aad
push
pop
pop
jecxz
pop
adc
fistp
mov
mov
fst
and
(bad)
cmps
xor
mov
cld
pop
shl
add
and
adc
popf
aam
mov
adc
pop
pop
push
out
pop
xchg
mov
and
bound
shl
imul
lods
(bad)
popa
xor
xchg
mov
mov
adc
out
adc
xchg
daa
retf
adc
xchg
and
nop
aad
pop
adc
aad
es
shl
and
aam
push
rcl
and
xchg
push
data16
rcl
jnp
push
retw
es
xchg
loope
push
push
cmps
or
push
jecxz
xchg
push
mov
mov
dec
pop
adc
mov
inc
daa
jb
ins
pop
cmp
popa
loopne
mov
sar
cmp
mov
loope
push
pop
xchg
repz
(bad)
dec
add
cmps
popf
dec
hlt
test
(bad)
int3
mov
rol
leave
sahf
cmp
xor
or
inc
push
push
neg
push
outs
jne
xor
dec
(bad)
add
pop
dec
out
cmps
enter
(bad)
lods
dec
jecxz
jns
imul
adc
inc
xor
popa
jns
movs
lahf
imul
sub
or
cmc
sub
jnp
clc
rol
mov
imul
add
or
jle
fs
(bad)
lock
sbb
xchg
pop
ins
xlat
popf
nop
aaa
inc
mov
mov
test
inc
adc
or
repz
popf
daa
or
(bad)
mov
movs
fidivr
cmp
dec
clc
mov
out
mov
(bad)
rcl
mov
sbb
jge
adc
ret
cli
rcl
cdq
jmp
inc
mov
cli
adc
mov
mov
add
add
bound
cs
mov
jge
jno
clc
movs
push
push
int
pop
pop
xchg
or
mov
pushf
shl
push
(bad)
clc
cmps
xchg
dec
rcr
cmp
pop
cmp
xor
mov
test
test
mov
retf
push
mov
ins
inc
dec
imul
inc
aaa
push
push
dec
or
mov
mov
cld
jb
ror
aaa
imul
outs
mov
add
call
je
push
test
or
mov
push
sbb
pop
in
add
push
add
push
add
or
push
addr16
push
mov
fwait
(bad)
push
pusha
pop
rcl
mov
and
xchg
arpl
xchg
and
push
and
push
aad
xor
loop
push
aam
jp
shl
rcl
pusha
dec
rcl
iret
xchg
shl
(bad)
push
push
xchg
push
shl
cwde
xlat
push
movs
fwait
(bad)
push
daa
mov
push
shl
xchg
xchg
popa
out
rcl
cmps
jo
xchg
loopne
(bad)
push
jecxz
xchg
push
cmps
mov
xchg
xchg
mov
mov
loopne
adc
push
in
push
adc
xchg
xchg
mov
mov
rcl
push
pop
xchg
and
push
mov
mov
xchg
adc
inc
aam
cmps
xchg
push
loop
push
push
out
(bad)
xchg
jecxz
rcl
loopne
adc
(bad)
xchg
mov
rcl
push
push
movs
jmp
shl
xchg
xchg
cmps
aaa
adc
arpl
adc
and
xchg
xchg
cmps
add
adc
retf
xchg
shl
mov
push
and
shl
xchg
aam
pop
xchg
adc
pop
xchg
adc
es
cmps
pop
stc
daa
cmps
movs
jae
dec
bound
inc
push
push
or
(bad)
and
push
pop
in
retf
call
push
loop
outs
xor
ret
fild
inc
push
mov
cmps
sbb
and
into
nop
paddd
iret
mov
pop
ror
int
cmp
rcl
inc
addr16
fs
jle
cmps
or
std
test
cmp
shl
jge
mov
std
in
push
clc
xchg
mov
jle
inc
jb
cld
sub
dec
mov
sbb
mov
cdq
xlat
sub
pop
and
movs
jbe
jo
pop
repz
aas
lahf
cmp
in
stos
add
add
imul
cmp
ss
xchg
mov
jp
or
fsub
dec
mov
adc
repz
xchg
test
add
pop
lds
sub
dec
lods
cli
jge
sub
xchg
adc
lea
imul
push
arpl
popf
aas
adc
adc
sbb
loopne
or
cmp
gs
xor
xchg
pushf
xor
mov
lea
test
jge
ja
pop
xor
sub
jb
cmp
pop
mov
ficomp
gs
mov
jp
lea
xor
xchg
jne
mov
pop
jnp
iret
cmc
loopne
dec
mov
stos
(bad)
fcom
and
int3
push
sar
xlat
sub
retf
xchg
inc
icebp
sbb
xchg
je
cmp
xor
mul
jb
(bad)
enter
xor
mul
repnz
mov
push
mul
jb
(bad)
iret
mov
and
mov
repnz
int
pop
sti
and
aam
dec
sbb
icebp
jnp
cmps
mov
jl
jecxz
xor
leave
sti
mov
test
sti
fild
sbb
je
dec
push
dec
sub
(bad)
mov
mov
mov
mov
jnp
pop
lock
lods
xchg
inc
sub
cmp
jp
mov
jnp
pop
not
cdq
popf
jecxz
push
mov
jnp
pop
not
imul
xchg
fsubr
loope
lock
push
sub
cmps
bnd
sub
adc
jno
enter
pop
test
cmp
(bad)
mov
sbb
imul
addr16
popa
sub
inc
icebp
sbb
mov
imul
arpl
cmp
adc
scas
push
lds
or
adc
scas
push
lds
sbb
adc
scas
push
lds
ins
pushf
mov
jo
cmp
xchg
push
in
push
push
aad
jns
lds
or
sar
adc
xor
inc
push
arpl
jnp
mov
jnp
adc
and
test
in
jnp
(bad)
lods
leave
inc
inc
and
call
in
loopne
je
xchg
push
popa
sub
cmc
mov
repnz
xor
cmc
mov
jb
(bad)
into
mov
lods
cmc
mov
xor
inc
xor
cmc
mov
xor
clc
and
xlat
mov
inc
icebp
jnp
movs
mov
fcom
jecxz
lods
add
sti
ficom
mov
jmp
les
jb
push
cmp
mov
js
idiv
repz
sbb
mov
mov
int
xor
je
jmp
cmp
es
sub
mov
push
adc
stos
jns
mov
xor
out
jl
mov
xor
(bad)
sub
add
mov
mov
mov
cmp
pop
mov
mov
inc
sub
mov
jnp
pop
lock
mov
cmp
jp
mov
jnp
pop
not
lea
bnd
pop
not
sbb
mov
jnp
sahf
jecxz
and
pop
and
add
and
and
rcl
pop
daa
xor
or
mov
xor
hlt
mov
jb
pop
lock
xor
bnd
inc
not
cmp
sar
scas
push
(bad)
cmp
or
push
sti
fcmovnbe
mov
out
xor
stos
cld
jnp
push
clc
push
ror
xor
sbb
mov
mov
(bad)
jns
push
mov
sub
mov
jg
pop
xor
jmp
imul
repnz
enter
xor
retf
movs
imul
into
mov
pop
xor
jmp
imul
jb
inc
not
mov
test
jnp
sti
into
xchg
mov
popa
xor
cs
(bad)
arpl
xchg
inc
lea
or
push
(bad)
loope
scas
pop
in
inc
jnp
mov
push
(bad)
icebp
xor
adc
scas
push
(bad)
rol
jnp
shl
sbb
xor
mov
imul
arpl
(bad)
out
mov
and
jl
and
pop
fisub
jl
xor
imul
xchg
cmp
test
mov
frstor
mov
xchg
cs
inc
sbb
push
sbb
push
sbb
pop
pop
push
jb
cmp
push
cmp
dec
sbb
ins
or
xor
inc
jb
or
push
add
push
push
inc
jp
add
push
xchg
add
push
ret
imul
inc
outs
mov
(bad)
imul
adc
imul
add
imul
inc
outs
add
push
adc
imul
(bad)
ins
push
push
inc
jp
add
push
add
pop
push
(bad)
imul
add
(bad)
push
add
imul
add
imul
inc
jp
add
outs
outs
add
push
adc
imul
outs
sbb
(bad)
outs
push
adc
imul
xchg
add
imul
pop
inc
push
inc
pop
ins
bound
inc
outs
adc
imul
(bad)
outs
push
adc
imul
pop
outs
sbb
inc
outs
pop
adc
outs
add
inc
imul
outs
or
pop
bound
add
outs
jbe
inc
outs
jp
inc
outs
add
bound
xchg
push
pop
jle
push
inc
jp
or
jp
push
(bad)
jns
push
inc
jle
add
inc
pop
pop
imul
inc
outs
or
(bad)
outs
push
sbb
xor
pop
jb
add
arpl
add
bound
(bad)
outs
add
outs
stos
adc
out
add
push
add
push
fiadd
inc
outs
add
imul
pop
push
push
add
push
jp
pop
imul
pop
push
sub
pop
push
adc
pop
push
pop
pop
(bad)
outs
push
add
imul
xchg
add
push
or
xor
pop
push
push
pop
imul
push
mov
add
jp
add
outs
outs
add
outs
rol
pop
push
call
outs
add
inc
imul
inc
jp
add
outs
into
add
push
pop
(bad)
imul
add
addr16
outs
popw
inc
dec
push
(bad)
ins
scas
add
push
(bad)
cmova
add
outs
push
add
imul
pop
imul
(bad)
outs
mov
xchg
push
inc
outs
repnz
outs
mov
(bad)
outs
mov
pop
(bad)
ins
bound
(bad)
imul
add
scas
pop
xchg
add
push
add
push
sahf
pop
(bad)
(bad)
add
imul
or
jns
add
outs
mov
pop
imul
and
loop
inc
outs
out
inc
jp
add
push
xchg
add
xchg
add
push
push
pop
imul
xchg
add
pop
push
xor
(bad)
imul
inc
jp
pop
pop
push
add
outs
push
inc
jp
adc
(bad)
bound
(bad)
imul
and
imul
(bad)
imul
inc
outs
mov
inc
dec
jp
inc
outs
ds
pop
imul
(bad)
imul
add
push
adc
(bad)
outs
call
jnp
adc
jle
push
inc
jle
adc
mov
inc
jle
or
add
imul
(bad)
imul
inc
jp
add
imul
add
imul
inc
outs
call
imul
adc
jle
or
push
or
inc
jp
adc
jns
adc
(bad)
adc
pop
jle
or
sub
inc
jp
adc
jns
adc
jl
sbb
jae
or
push
xchg
xchg
and
inc
outs
jb
inc
imul
pop
pop
imul
pop
imul
pop
push
out
pop
(bad)
outs
push
adc
imul
inc
outs
push
pop
pop
imul
inc
outs
mov
outs
push
add
(bad)
imul
add
(bad)
outs
bound
pop
push
adc
outs
stos
add
push
rol
pop
imul
(bad)
bound
add
imul
(bad)
outs
or
outs
into
add
xchg
pop
pop
imul
inc
imul
xchg
add
outs
out
add
(bad)
imul
adc
imul
add
ins
mov
inc
jp
adc
jg
add
pusha
jbe
inc
push
mov
or
jp
pop
pop
outs
stos
add
xchg
push
pop
imul
xchg
add
push
push
es
outs
or
xchg
push
inc
jp
add
push
cmp
xchg
pop
(bad)
outs
bound
(bad)
imul
xchg
push
inc
jp
adc
push
adc
jg
adc
jns
adc
inc
pop
inc
jns
push
(bad)
addr16
outs
dec
add
push
pop
inc
imul
pop
inc
imul
(bad)
bound
xchg
add
push
scas
add
push
(bad)
adc
call
adc
bound
adc
outs
dec
adc
jle
adc
(bad)
neg
pop
jae
or
inc
push
add
ins
jmp
imul
pop
pop
imul
(bad)
outs
ret
imul
add
mov
imul
pop
push
cli
pop
(bad)
imul
add
imul
add
inc
outs
push
add
jp
add
outs
inc
pop
inc
imul
(bad)
jns
add
inc
outs
xor
(bad)
outs
jbe
inc
imul
(bad)
outs
jle
pop
(bad)
add
imul
pop
push
scas
add
rol
inc
jp
push
inc
jl
or
addr16
push
xchg
adc
(bad)
jle
adc
bound
add
imul
pop
imul
xchg
add
cs
inc
outs
xchg
push
(bad)
outs
(bad)
add
outs
sahf
push
pop
imul
xchg
add
imul
(bad)
jns
and
xchg
push
pop
imul
xchg
pop
(bad)
imul
xchg
add
inc
imul
xchg
push
inc
jp
add
inc
outs
mov
inc
outs
mov
(bad)
popa
test
imul
outs
mov
add
stos
cmova
add
outs
adc
outs
push
or
dec
call
jp
or
push
retf
imul
pop
imul
(bad)
ins
test
push
jle
inc
imul
ins
cmps
or
jp
or
inc
outs
adc
inc
imul
inc
outs
pop
sbb
add
inc
jp
or
push
dec
or
data16
(bad)
outs
ss
imul
inc
jp
or
push
or
out
(bad)
imul
or
imul
(bad)
imul
or
imul
(bad)
outs
add
xchg
adc
dec
push
or
xchg
or
imul
or
push
stos
or
outs
or
imul
imul
xchg
or
add
pop
push
mov
xchg
or
push
mov
sbb
popa
cmps
or
stos
or
outs
out
or
push
or
xchg
or
sbb
pop
imul
arpl
(bad)
imul
pop
push
xor
xchg
or
inc
jp
or
imul
pop
push
sub
(bad)
imul
or
outs
sbb
pop
push
inc
sbb
imul
or
imul
pop
imul
outs
cli
or
imul
pop
imul
inc
outs
out
or
push
sbb
imul
outs
call
jb
or
imul
or
test
imul
(bad)
imul
or
outs
or
push
(bad)
or
outs
fimul
pop
push
sbb
push
or
outs
(bad)
sbb
imul
pop
imul
inc
jp
or
push
or
imul
jp
push
pop
imul
pop
push
or
inc
jns
or
outs
pop
or
sahf
or
push
xchg
pop
push
or
mov
pop
imul
pop
imul
inc
imul
xchg
sbb
imul
pop
imul
inc
jp
or
push
pop
sbb
imul
sbb
imul
(bad)
dec
dec
or
mov
pop
push
jbe
(bad)
imul
cs
push
out
pop
imul
pop
imul
inc
outs
push
or
outs
call
imul
inc
outs
xchg
inc
outs
retf
outs
mov
(bad)
outs
xor
pop
imul
inc
jp
sysret
outs
dec
xchg
push
xchg
or
imul
(bad)
jns
or
imul
(bad)
outs
inc
or
imul
(bad)
imul
push
(bad)
imul
or
and
pop
imul
inc
imul
add
push
or
imul
inc
imul
pop
push
sbb
imul
inc
dec
mov
inc
jp
push
pop
push
sbb
outs
and
pop
jg
or
pusha
stos
push
inc
push
ror
inc
jp
push
pop
imul
pop
outs
push
or
inc
or
push
or
pop
jo
add
jb
pop
imul
inc
imul
adc
jb
push
pop
arpl
or
adc
ins
xchg
xsaves
push
pop
imul
(bad)
imul
or
outs
dec
or
repnz
push
sbb
outs
jp
pop
push
bound
inc
jp
or
push
xchg
or
imul
inc
jp
or
push
pop
or
outs
ret
jl
or
popa
dec
or
outs
mov
xchg
or
outs
mov
(bad)
outs
jp
(bad)
outs
jle
pop
push
es
imul
inc
jno
add
jne
push
pop
push
or
inc
push
(bad)
push
xchg
or
imul
jns
cmp
pop
pusha
jp
(bad)
outs
jle
inc
jp
or
imul
or
ror
pop
imul
(bad)
push
or
imul
sbb
xchg
or
outs
into
push
inc
jp
push
pop
outs
jbe
inc
jp
or
push
or
outs
bound
(bad)
outs
data16
imul
jns
or
addr16
or
outs
push
or
inc
push
ret
data16
pop
imul
jp
sub
outs
test
mov
push
(bad)
imul
push
pop
push
push
push
inc
imul
or
imul
pop
imul
imul
(bad)
popa
jp
pop
imul
inc
jp
push
xchg
or
stos
or
outs
out
sbb
xchg
or
inc
jp
sysret
outs
inc
or
(bad)
imul
or
imul
(bad)
outs
test
jp
or
imul
imul
inc
jbe
pop
inc
push
out
or
push
xchg
ja
imul
pop
push
mov
xchg
or
pop
push
cmp
xchg
or
pop
imul
inc
push
cs
inc
imul
sbb
imul
pop
push
push
sysret
push
into
pop
inc
jp
ja
imul
(bad)
push
push
xchg
xsaves
sysret
imul
(bad)
jns
add
jb
push
xchg
sbb
imul
push
inc
sysret
imul
jp
or
outs
jb
inc
jp
or
imul
inc
outs
mov
or
imul
push
xchg
or
imul
(bad)
outs
sahf
or
imul
inc
outs
inc
push
xchg
push
(bad)
outs
mov
imul
pop
jb
or
fs
(bad)
outs
bound
(bad)
cmps
or
outs
sub
imul
cs
outs
push
push
(bad)
imul
pop
xchg
or
pop
imul
pop
imul
inc
push
cmp
inc
outs
jle
inc
imul
pop
xchg
or
(bad)
imul
or
outs
fimul
inc
outs
sahf
or
outs
ret
jp
push
(bad)
outs
or
xchg
push
inc
imul
pop
push
jle
pop
push
out
xchg
sbb
xor
add
js
or
imul
pop
imul
xchg
or
xchg
pop
pop
js
or
pop
imul
push
bound
imul
inc
jp
push
pop
push
push
or
imul
imul
or
inc
imul
inc
jp
xsaves
push
(bad)
outs
jbe
(bad)
(bad)
cli
push
inc
outs
jle
xchg
push
(bad)
imul
(bad)
ins
cs
pop
imul
jns
or
pop
push
inc
push
(bad)
imul
push
pop
imul
pop
push
push
(bad)
imul
inc
imul
imul
(bad)
data16
imul
outs
out
or
imul
xchg
or
outs
sbb
inc
jp
or
imul
push
inc
jns
or
inc
jp
or
inc
jp
push
inc
dec
bound
inc
push
stos
or
pop
imul
imul
imul
inc
xor
inc
dec
(bad)
or
pop
imul
jp
push
pop
outs
mov
(bad)
imul
(bad)
imul
(bad)
jns
or
bound
push
inc
outs
scas
or
imul
xor
sbb
inc
push
inc
xor
imul
(bad)
outs
mov
pop
imul
inc
jp
xor
imul
xor
outs
push
(bad)
outs
scas
xor
outs
adc
pop
imul
inc
outs
fisub
inc
outs
pop
cmp
ret
imul
xchg
xor
outs
xor
inc
outs
jbe
(bad)
outs
cmp
xchg
xor
outs
loop
inc
jp
xor
outs
stos
xor
push
adc
pop
imul
pop
imul
(bad)
imul
and
imul
and
imul
(bad)
outs
ds
inc
jp
xor
push
xor
imul
inc
jp
xor
imul
xchg
xor
imul
pop
jb
and
jle
and
dec
xor
imul
push
(bad)
xor
inc
outs
data16
js
xor
imul
(bad)
imul
and
outs
or
pop
pusha
dec
xor
outs
xor
pop
imul
xor
imul
xor
outs
xor
outs
push
xor
push
xor
outs
inc
and
imul
(bad)
ins
mov
inc
jp
xor
imul
pop
outs
jle
inc
imul
inc
imul
imul
xchg
xor
shl
xchg
ss
jp
xor
push
xor
xchg
(bad)
imul
cmp
xor
pop
imul
pop
imul
inc
jp
xor
outs
jmp
outs
push
and
outs
push
sub
pop
jb
xor
imul
push
into
xor
popa
mov
inc
outs
jbe
xchg
sub
outs
bound
push
stos
xor
outs
push
xor
push
and
outs
pop
xor
outs
inc
xor
xchg
(bad)
imul
xor
mov
inc
jp
xor
jp
es
jns
ds
jp
aaa
pop
imul
xchg
xor
push
xor
imul
inc
jp
xor
outs
xor
push
retf
imul
pop
imul
jns
ss
jb
xor
fs
aaa
pop
outs
mov
xor
outs
xor
xchg
and
outs
(bad)
xor
imul
and
imul
pop
outs
dec
xor
dec
xor
imul
inc
jp
ss
imul
pop
imul
inc
jp
xchg
xor
outs
xor
push
and
imul
pop
ins
pop
aaa
pop
outs
fidiv
inc
jp
xor
pop
imul
sub
pop
jb
xor
imul
xor
push
jmp
push
push
xor
push
xor
ins
push
xor
xor
imul
inc
jns
xor
imul
xor
push
mov
and
imul
(bad)
out
cmp
adc
xchg
and
imul
xor
ret
outs
inc
and
push
xor
xor
pop
push
jp
xchg
xor
imul
pop
bound
xor
outs
push
xchg
and
imul
js
xor
inc
xor
imul
pop
outs
xor
jp
and
outs
jp
xchg
xor
and
pop
imul
pop
imul
pop
js
sub
je
aas
inc
inc
push
xor
imul
(bad)
imul
xor
imul
xor
imul
pop
push
xor
loop
(bad)
imul
xor
imul
(bad)
imul
pop
imul
pop
pusha
inc
xor
outs
xchg
pop
push
mov
pop
push
cmp
pop
push
xor
loop
(bad)
imul
(bad)
imul
pop
imul
inc
imul
xor
imul
inc
jp
xor
mov
pop
imul
xchg
daa
inc
jp
xchg
xor
xchg
es
imul
and
(bad)
ins
push
aaa
inc
jp
xor
push
(bad)
daa
(bad)
imul
pop
jb
xchg
xor
xchg
es
imul
and
(bad)
ins
outs
aaa
inc
jp
xor
push
fisubr
(bad)
imul
(bad)
popa
retf
push
xor
imul
pop
imul
xor
bound
ss
push
out
and
pop
push
xor
xchg
aaa
inc
push
inc
xor
(bad)
imul
daa
inc
outs
div
pop
imul
inc
jp
xor
inc
jp
xor
(bad)
outs
push
xor
outs
sbb
(bad)
imul
inc
jp
xor
imul
sub
jns
das
pop
jb
xor
inc
outs
mov
sub
jl
sub
jb
xor
inc
adc
pop
imul
inc
outs
pop
xor
pop
imul
inc
jp
and
retf
jne
cmp
pop
push
mov
xor
imul
outs
cmps
and
imul
(bad)
ins
scas
aaa
inc
push
xchg
sub
jp
ds
and
pop
push
push
xor
push
mov
(bad)
outs
jbe
(bad)
dec
mov
xchg
and
imul
inc
outs
scas
xor
(bad)
imul
(bad)
imul
imul
pop
imul
xor
imul
xor
imul
inc
jns
xor
(bad)
imul
xor
pop
imul
imul
inc
jp
xor
imul
pop
imul
push
push
xor
pop
imul
jns
xor
outs
loop
pop
imul
jp
aaa
pop
imul
push
(bad)
ss
push
fidiv
inc
jp
ss
imul
xor
imul
outs
mov
inc
push
cli
xchg
xor
mov
aaa
inc
arpl
ss
outs
out
ss
push
xchg
xor
pop
imul
imul
(bad)
outs
or
pop
imul
inc
imul
xchg
ss
outs
bound
imul
inc
jns
aaa
(bad)
imul
aaa
inc
imul
pop
imul
pop
imul
pop
pusha
inc
aaa
(bad)
outs
dec
cs
jp
cmp
xor
mov
pop
push
es
imul
ins
and
pop
imul
(bad)
jns
aaa
(bad)
pusha
adc
inc
imul
outs
sbb
(bad)
addr16
xor
outs
xor
outs
inc
and
inc
jp
aaa
pop
push
idiv
pop
push
xor
mov
xor
jmp
outs
adc
inc
outs
sbb
pop
imul
(bad)
imul
aaa
(bad)
outs
push
xor
inc
jp
aaa
pop
push
mov
xor
imul
pop
imul
inc
pusha
shl
(bad)
outs
xchg
xchg
aaa
(bad)
outs
sahf
xor
ret
imul
xor
inc
imul
xchg
cmp
jns
xor
imul
xor
push
xor
(bad)
imul
cmp
imul
(bad)
push
cmp
push
into
cmp
push
jbe
(bad)
push
cmp
push
data16
imul
(bad)
push
xchg
cmp
imul
cmp
outs
inc
cmp
imul
inc
jp
cmp
push
mov
inc
jp
cmp
push
ds
push
cmp
pop
imul
xchg
cmp
imul
inc
jp
cmp
outs
call
outs
inc
cmp
inc
jp
cmp
outs
repnz
mov
(bad)
outs
cmp
pop
push
loop
inc
push
sub
pop
push
adc
inc
jp
cmp
imul
cmp
push
sub
mov
xchg
xor
repnz
imul
(bad)
imul
xor
cmp
stos
cmp
push
cmp
push
xor
push
xor
pusha
call
imul
xchg
sub
dec
cmp
imul
inc
jns
cmp
(bad)
outs
data16
sub
inc
jns
cmp
xchg
cmp
outs
sbb
inc
imul
sub
push
cmp
popa
mov
outs
push
cmp
imul
inc
imul
inc
jp
cmp
imul
cmp
imul
cmp
imul
jp
cmp
outs
sbb
pop
push
cmp
outs
add
(bad)
outs
xchg
xchg
cmp
(bad)
imul
cmp
imul
(bad)
dec
(bad)
cmp
mov
cmp
(bad)
imul
inc
imul
(bad)
outs
xchg
cmp
imul
inc
jp
cmp
imul
inc
outs
push
cmp
push
mov
xchg
cmp
imul
cmp
outs
xchg
aas
pop
imul
outs
sbb
(bad)
outs
fidivr
xchg
ds
imul
outs
dec
cmp
outs
push
sub
jns
and
inc
inc
mov
xor
and
pop
push
stos
cmp
push
shl
(bad)
dec
push
ds
push
fidivr
pop
push
inc
xchg
cmp
into
cmp
push
mov
xchg
ds
imul
xchg
cmp
outs
out
pop
jns
aas
pop
push
cmp
push
xchg
sub
imul
xchg
cmp
imul
(bad)
mov
inc
push
jbe
xchg
cmp
xchg
cmp
imul
inc
jp
cmp
jp
cmp
imul
(bad)
imul
(bad)
imul
cmp
push
cmp
imul
inc
jp
aas
inc
outs
jle
pop
push
cmp
outs
data16
outs
jmp
imul
(bad)
imul
ds
dec
inc
cmp
push
sub
imul
(bad)
imul
pop
push
jle
(bad)
jnp
xor
popa
cmp
push
aas
inc
imul
cmp
(bad)
cmp
push
sahf
xor
inc
cmp
imul
inc
outs
into
cmp
push
sub
imul
inc
imul
inc
push
cmps
xor
sub
xchg
sub
imul
cs
push
call
pusha
add
pop
outs
push
cmp
imul
jp
cmp
push
mov
pop
push
cmp
push
cmp
jp
cmp
push
push
aaa
inc
jp
ds
imul
xchg
cmp
outs
inc
ds
imul
inc
jp
cmp
repnz
outs
mov
pop
imul
pop
imul
aas
pop
push
cmp
push
cmp
inc
outs
call
js
sub
push
sub
inc
inc
mov
pop
imul
pop
push
ds
imul
inc
jp
cmp
push
push
pop
push
sar
inc
imul
xchg
das
inc
jp
xchg
cmp
xchg
cs
imul
sub
(bad)
ins
mov
cmp
push
cs
(bad)
imul
sbb
jb
ds
addr16
cmp
jp
ds
imul
inc
jp
cmp
inc
push
mov
pop
imul
imul
pop
imul
pop
imul
inc
dec
scas
ds
imul
imul
jp
sub
xchg
aas
xchg
ds
imul
inc
jp
cmp
imul
(bad)
outs
mov
pop
imul
(bad)
imul
cmp
push
ds
outs
push
cmp
imul
(bad)
imul
aas
pop
imul
inc
jp
cmp
inc
jp
cmp
inc
jp
cmp
imul
cmp
xchg
aas
pop
imul
inc
imul
inc
jp
cmp
pop
push
xchg
(bad)
outs
retf
push
cmp
inc
jp
cmp
imul
cs
jns
xor
jb
cmp
xchg
cmp
outs
push
cmp
imul
pop
outs
sahf
sub
imul
pop
imul
(bad)
imul
cmp
(bad)
imul
xor
outs
loop
xchg
sub
imul
cmp
(bad)
imul
pop
push
xchg
sub
imul
(bad)
xor
(bad)
imul
(bad)
imul
cmp
(bad)
imul
inc
outs
outs
aas
(bad)
outs
adc
pop
imul
(bad)
outs
fidivr
xchg
cmp
imul
(bad)
jns
cmp
bound
ds
jp
ds
push
mov
cmp
imul
outs
out
inc
jp
cmp
pop
imul
jl
cmp
push
aas
xchg
aas
xchg
aas
inc
push
or
(bad)
imul
cmp
imul
inc
jp
ds
imul
cmp
pop
imul
jp
ds
push
push
ds
outs
dec
cs
jp
cmp
arpl
cmp
imul
inc
imul
das
pop
imul
pop
imul
(bad)
imul
aas
xchg
cmp
imul
sub
jnp
daa
inc
jns
ss
inc
jbe
pop
imul
imul
inc
jp
ds
push
push
inc
push
push
sub
pop
popa
sbb
pop
jns
cmp
(bad)
cmp
imul
outs
push
sub
jp
cmp
outs
mov
cmp
pop
js
cmp
inc
imul
pop
pusha
push
cs
outs
push
ds
call
cmp
(bad)
outs
push
aas
inc
jp
cmp
(bad)
jns
ds
bound
inc
push
mov
aas
pop
push
jmp
push
sub
inc
jp
cmp
sahf
xor
inc
cmp
push
cmp
imul
cmp
push
cmp
imul
inc
jp
cmp
jns
add
xchg
cmp
push
cmp
inc
jp
aas
pop
push
inc
cmp
retf
jp
cmp
push
cmp
imul
cmp
outs
loop
xchg
cmp
imul
inc
jns
cmp
(bad)
outs
(bad)
and
outs
fisub
outs
pop
and
imul
outs
(bad)
and
mov
(bad)
imul
imul
inc
jp
and
push
es
imul
and
adc
inc
outs
push
xor
fidiv
(bad)
jns
cmp
jb
and
push
mov
(bad)
imul
xchg
and
(bad)
and
push
cmp
jmp
imul
xor
imul
xor
imul
inc
imul
pop
(bad)
into
and
push
cli
and
imul
xor
imul
inc
imul
xchg
and
pop
push
and
push
and
imul
imul
imul
and
jp
and
inc
imul
(bad)
imul
and
push
and
outs
push
xor
imul
pop
imul
imul
imul
and
(bad)
imul
imul
pop
imul
data16
xchg
and
imul
inc
push
sbb
xchg
and
imul
and
retf
outs
push
and
imul
sub
jns
and
push
and
data16
imul
sub
shl
xchg
xor
imul
and
add
pop
outs
push
xchg
cmp
jle
sub
inc
repnz
jbe
xchg
and
imul
jp
and
push
sub
pop
outs
outs
xor
xchg
and
imul
and
imul
(bad)
imul
and
popa
test
imul
and
push
xor
imul
and
push
xor
(bad)
fisub
inc
outs
inc
and
imul
and
outs
repnz
xchg
xor
imul
inc
jp
and
loop
xchg
and
imul
inc
jp
and
push
(bad)
and
outs
call
fs
and
(bad)
and
outs
dec
xor
outs
jb
(bad)
imul
xor
jle
sub
es
push
and
shl
inc
outs
xchg
xor
outs
fisub
xchg
and
and
imul
jp
ss
jl
and
jb
and
(bad)
mul
pop
imul
xor
ins
jmp
push
push
sub
fisub
pop
push
inc
and
push
retf
push
and
repnz
mul
(bad)
push
and
push
data16
push
outs
and
imul
and
imul
and
imul
sub
jbe
inc
imul
and
imul
inc
jp
and
push
scas
and
outs
shl
inc
jp
and
pusha
call
outs
xor
jp
sub
dec
es
ins
into
xchg
xor
div
(bad)
jns
jns
jb
and
push
xor
imul
xor
imul
inc
imul
(bad)
jp
es
push
es
imul
jp
and
push
and
xor
inc
outs
mov
inc
jp
and
outs
(bad)
and
outs
loop
inc
outs
cmps
xor
imul
inc
push
xchg
and
imul
and
imul
inc
imul
and
outs
mov
xchg
daa
inc
jp
and
imul
and
push
pop
push
xchg
and
push
daa
pop
imul
push
and
imul
es
push
push
xor
xchg
xor
pop
imul
jp
and
imul
daa
inc
imul
es
imul
pop
push
ret
outs
xchg
jp
and
bound
inc
imul
inc
data16
pop
push
jle
pop
imul
xchg
xor
ins
stos
xor
jns
xor
jb
and
imul
xor
xchg
daa
pop
imul
imul
and
pop
outs
mov
xor
jb
xchg
and
xchg
xor
xchg
xor
pop
push
xor
(bad)
jp
and
outs
repnz
imul
inc
jp
and
imul
jp
cmp
(bad)
push
stos
and
outs
out
es
imul
and
inc
jp
and
push
or
(bad)
outs
mov
jp
and
push
mov
sub
jp
daa
pop
push
daa
pop
push
and
inc
jp
es
outs
xchg
and
pop
imul
outs
add
inc
imul
imul
(bad)
imul
sub
pop
push
jle
inc
push
out
xchg
cmp
jl
sub
jns
and
push
sbb
pop
push
add
xchg
and
imul
daa
xchg
daa
pop
imul
jl
cmp
jb
daa
pop
(bad)
out
xchg
xchg
xor
xchg
cmp
jge
cs
jns
and
imul
(bad)
imul
daa
pop
push
xor
imul
bound
and
imul
imul
(bad)
jno
and
push
es
imul
aas
(bad)
jge
das
(bad)
js
and
push
mov
push
mov
(bad)
imul
and
xchg
and
imul
jge
das
inc
jp
and
push
fisub
push
ret
imul
es
outs
dec
das
(bad)
outs
jb
pop
jb
es
popa
cli
and
ds
and
(bad)
outs
jmp
push
push
es
imul
aas
pop
bound
sub
jno
and
imul
(bad)
bound
inc
bound
and
imul
jp
es
push
and
imul
xchg
and
push
sahf
xchg
and
(bad)
aaa
pop
imul
inc
outs
mov
pop
push
cli
cmp
jb
xchg
daa
(bad)
push
and
outs
sub
xchg
and
imul
arpl
sub
inc
jp
xchg
and
push
and
outs
xor
pop
jb
cs
jp
es
imul
inc
outs
es
outs
stos
and
inc
jp
and
imul
xchg
es
imul
(bad)
arpl
(bad)
jnp
xor
(bad)
push
es
outs
cmp
imul
and
push
stos
and
push
sar
xchg
sub
inc
fisub
pop
push
and
xchg
inc
outs
mov
(bad)
imul
ss
imul
and
outs
es
inc
imul
cs
jp
and
outs
sahf
daa
xchg
and
push
mov
outs
dec
and
imul
pop
imul
outs
cli
ss
imul
xchg
and
imul
and
imul
inc
arpl
(bad)
push
or
imul
xchg
cmp
imul
sub
push
imul
xchg
cmp
imul
(bad)
outs
stos
sub
dec
outs
sub
push
sub
jp
sub
xchg
sub
imul
(bad)
imul
xor
mov
(bad)
imul
pop
push
and
xchg
sub
push
xchg
sub
outs
shr
(bad)
imul
xchg
sub
outs
add
pop
imul
inc
jp
sub
jp
sub
imul
outs
mov
cmp
imul
(bad)
bound
(bad)
imul
sub
pop
push
sub
push
sub
push
xor
pusha
push
and
dec
sub
imul
(bad)
imul
sub
loop
pop
imul
(bad)
imul
push
push
sub
call
jp
sub
imul
imul
cmp
imul
xchg
sub
bound
inc
push
stos
sub
outs
out
sub
imul
push
fisub
inc
jp
sub
imul
inc
push
mov
xchg
cs
outs
ss
outs
jp
xchg
cmp
mov
cmp
outs
sub
inc
push
adc
xchg
sub
push
sub
push
sub
jns
sub
imul
sub
imul
sub
imul
inc
outs
mov
sub
imul
sub
dec
outs
sub
pop
imul
(bad)
outs
sahf
and
inc
sub
imul
pop
imul
sub
imul
jns
xor
inc
outs
out
(bad)
imul
sub
outs
xchg
cmp
xchg
sub
jno
das
inc
imul
pop
imul
inc
popa
into
sub
jb
xchg
sub
mov
and
jl
aaa
pop
jb
sub
imul
pop
imul
xchg
and
jl
xor
jb
cs
push
push
xor
jno
sub
imul
xor
pop
bound
inc
imul
sub
adc
xchg
daa
xchg
xor
(bad)
arpl
sub
imul
sub
imul
cmp
(bad)
mov
jnp
xchg
sub
push
and
push
pop
imul
cmp
xchg
sub
fisubr
pop
push
ret
jb
and
js
sub
outs
mov
inc
outs
repnz
idiv
pop
imul
outs
jle
pop
push
sub
imul
xchg
das
pop
push
cmp
imul
outs
pop
sub
outs
push
das
pop
push
xchg
inc
imul
inc
jb
daa
(bad)
bound
inc
push
jp
inc
jp
sub
outs
and
inc
jp
sub
jp
sub
push
cmp
outs
pop
cs
jp
sub
push
sub
(bad)
sub
retf
push
jb
pop
jb
daa
inc
dec
cmp
(bad)
imul
inc
push
sub
(bad)
ins
outs
cmp
adc
xchg
cs
jp
cs
push
sub
imul
jp
sub
outs
xor
pop
push
cmp
imul
inc
push
loop
(bad)
push
sub
imul
pop
imul
pop
imul
inc
imul
inc
jp
sub
(bad)
cmp
push
cs
imul
cs
imul
inc
jp
cs
push
sub
cmps
sub
imul
(bad)
imul
sub
xchg
cmp
pop
outs
inc
sub
imul
(bad)
outs
or
inc
outs
push
cmp
pop
push
das
inc
outs
mov
sub
push
cmps
sub
imul
xchg
ds
addr16
xchg
cmp
xchg
cmp
jg
xor
inc
jb
cs
bound
sub
inc
outs
cmp
pop
imul
outs
bound
inc
jp
cmp
pop
push
sub
push
sub
jp
cmp
pop
imul
inc
outs
(bad)
cs
imul
push
repnz
inc
imul
(bad)
outs
mov
sub
ins
xchg
sub
imul
das
(bad)
imul
and
jp
cs
outs
sub
imul
cs
push
daa
inc
jp
xchg
cs
push
cs
jp
sub
push
sub
imul
inc
imul
sub
push
sub
jp
sub
(bad)
imul
inc
outs
push
sub
imul
(bad)
jns
push
jb
xchg
das
inc
imul
inc
imul
sub
push
cs
outs
pop
xchg
cmp
outs
ret
push
retf
push
xor
(bad)
imul
cmp
outs
bound
push
sub
inc
imul
(bad)
outs
xchg
cmp
imul
das
pop
push
sub
outs
xchg
pop
push
sub
jp
sub
push
cs
outs
jbe
pop
imul
pop
imul
inc
outs
push
pop
imul
jp
cmp
imul
pop
outs
fisubr
inc
jp
cmp
imul
sub
mov
imul
(bad)
outs
mov
inc
jp
cmp
imul
sub
outs
jmp
outs
shr
pop
push
sbb
inc
jns
aas
pop
push
cmp
push
cmp
jg
cmp
push
cmp
mov
inc
jp
sub
push
mov
sub
imul
pop
push
push
aas
pop
imul
pop
push
aas
inc
imul
(bad)
outs
inc
sub
push
mov
push
cmp
jp
xchg
cmp
addr16
xchg
aas
xchg
cmp
outs
outs
cmp
jg
cmp
jg
cmp
call
add
xchg
aas
xchg
cmp
outs
dec
cmp
jle
cmp
jle
ss
js
imul
mov
sub
imul
inc
outs
adc
xchg
sub
imul
xchg
sub
jp
aas
(bad)
imul
pop
imul
outs
mov
pop
imul
pop
push
mov
cs
outs
cmps
sub
pop
push
aas
xchg
sub
push
call
imul
pop
push
cs
jp
sub
outs
jb
pop
imul
cs
push
bound
xchg
sub
outs
push
pop
push
adc
inc
outs
push
cs
imul
pop
push
(bad)
das
xchg
sub
dec
ds
outs
mov
inc
outs
imul
inc
jp
das
pop
push
loop
pop
imul
inc
jp
cs
imul
inc
jp
ds
imul
das
inc
imul
(bad)
outs
xchg
inc
imul
sub
push
mov
inc
jns
ds
push
cmp
mov
cmp
stos
cmp
cs
inc
jp
sub
pop
imul
jp
sub
imul
pop
push
into
ds
imul
push
ds
imul
xchg
sub
push
sub
(bad)
imul
inc
jl
inc
pop
addr16
inc
xchg
inc
xchg
inc
xchg
inc
(bad)
jle
inc
xchg
inc
pop
bound
dec
pop
jae
pop
(bad)
dec
jle
xchg
inc
(bad)
outs
push
xchg
push
xchg
push
pop
imul
jp
push
pop
push
push
inc
jp
push
pop
imul
imul
push
(bad)
outs
xor
imul
inc
inc
imul
(bad)
push
push
inc
jp
push
inc
ins
sub
outs
cs
pop
imul
pop
inc
jp
push
(bad)
imul
push
inc
jp
push
inc
push
mov
pop
outs
jbe
inc
push
(bad)
push
inc
outs
bound
jp
inc
(bad)
imul
inc
jp
pop
(bad)
jns
pop
(bad)
jns
push
inc
jp
inc
(bad)
jns
inc
xchg
pop
pop
jl
push
inc
jp
push
inc
push
ss
xchg
push
pop
imul
push
pop
imul
inc
jp
push
pop
push
push
inc
jp
push
pop
imul
(bad)
imul
push
xchg
push
xchg
inc
inc
imul
(bad)
jae
pop
(bad)
dec
jb
xchg
push
inc
jp
push
(bad)
outs
(bad)
push
inc
jp
push
pop
outs
es
inc
imul
push
xchg
pop
inc
jp
push
xchg
push
inc
outs
push
push
inc
outs
inc
inc
(bad)
outs
push
push
(bad)
popa
dec
push
xchg
push
pop
imul
inc
outs
ss
inc
jp
inc
xchg
inc
pop
push
push
(bad)
imul
inc
outs
cs
inc
outs
rcl
imul
(bad)
imul
pop
imul
inc
imul
pop
ins
mov
outs
xor
mov
pop
imul
(bad)
outs
(bad)
push
pop
outs
and
cmps
push
pop
imul
inc
jp
inc
pop
ins
xchg
push
inc
imul
push
inc
outs
ficom
adc
xchg
jp
push
inc
jp
push
pop
push
jbe
inc
jp
push
pop
push
mov
push
xchg
push
(bad)
imul
dec
xchg
pop
(bad)
push
sbb
outs
push
inc
pop
push
push
(bad)
imul
(bad)
outs
dec
inc
inc
outs
dec
push
inc
outs
jb
pop
imul
push
(bad)
imul
inc
imul
(bad)
outs
jmp
outs
rcl
push
inc
pop
imul
(bad)
outs
push
push
pop
outs
ret
push
retf
jp
inc
pop
ins
xor
imul
inc
outs
jle
inc
jp
push
pop
push
push
inc
jp
push
inc
jp
push
pop
push
push
push
xchg
dec
inc
jo
pop
inc
adc
push
inc
outs
mov
imul
(bad)
imul
(bad)
imul
inc
xchg
push
(bad)
imul
push
pop
push
rcl
push
fiadd
imul
push
(bad)
outs
mov
mov
imul
pop
ins
repnz
inc
jns
inc
pop
push
push
xchg
push
(bad)
outs
bound
push
inc
inc
outs
stos
push
xchg
push
inc
imul
push
pop
push
add
imul
xchg
push
inc
jp
push
xchg
inc
(bad)
outs
mov
push
(bad)
outs
and
outs
es
inc
jns
push
xchg
push
pop
push
push
push
xchg
push
inc
imul
inc
pop
imul
(bad)
outs
into
push
pop
push
push
inc
imul
imul
inc
jp
push
xchg
inc
(bad)
outs
stos
push
inc
imul
inc
inc
imul
push
inc
outs
push
push
xchg
push
pop
push
or
outs
into
pop
inc
jp
push
xchg
push
inc
jp
push
pop
push
loop
(bad)
push
push
inc
jp
push
inc
push
rcl
imul
inc
jns
push
(bad)
imul
inc
imul
inc
jp
push
xchg
push
(bad)
outs
repnz
xchg
push
pop
imul
jp
push
xchg
push
inc
jp
inc
inc
outs
sub
outs
scas
inc
inc
jp
push
inc
jp
push
pop
imul
(bad)
outs
pop
dec
(bad)
jns
dec
inc
jb
push
pop
arpl
push
(bad)
outs
mov
outs
mov
inc
jb
push
xchg
push
xchg
push
pop
imul
xchg
popa
inc
jb
push
pop
pusha
outs
push
inc
outs
rcl
outs
push
push
pop
imul
xchg
push
(bad)
imul
pop
push
mov
pop
push
cmp
imul
push
pop
push
sub
outs
inc
(bad)
jns
push
xchg
push
pop
push
ficom
inc
push
inc
outs
push
push
xchg
inc
xchg
push
xchg
push
(bad)
imul
inc
outs
ds
xchg
inc
xchg
push
pop
push
inc
inc
imul
push
push
(bad)
imul
inc
inc
outs
push
push
inc
outs
ret
jp
push
inc
push
into
push
(bad)
imul
(bad)
imul
inc
inc
jb
push
pop
fs
pop
outs
stos
push
inc
imul
inc
imul
(bad)
imul
push
pop
imul
outs
add
push
push
inc
outs
or
into
push
xchg
push
inc
imul
jns
outs
inc
jb
push
pop
mov
push
inc
jp
push
(bad)
imul
inc
inc
outs
call
imul
push
xchg
push
inc
jp
inc
xchg
push
(bad)
push
push
pop
push
bound
push
push
pop
imul
xchg
inc
inc
imul
imul
pop
inc
jp
push
(bad)
outs
ret
jp
push
xchg
push
pop
push
mov
(bad)
imul
push
pop
imul
dec
inc
jb
push
pop
bound
push
inc
outs
fimul
sahf
pop
(bad)
arpl
inc
(bad)
outs
or
push
push
pop
imul
push
pop
imul
inc
jp
push
pop
push
cmps
push
(bad)
push
push
inc
jp
push
(bad)
imul
push
xchg
inc
inc
imul
(bad)
imul
pop
(bad)
ins
into
push
pop
push
not
cmp
imul
inc
jp
push
pop
push
jmp
jp
push
pop
push
sbb
push
push
xchg
inc
(bad)
imul
(bad)
outs
dec
push
xchg
push
xchg
push
pop
push
push
pop
push
loop
inc
outs
cmps
push
xchg
push
pop
imul
outs
adc
(bad)
push
inc
jp
push
inc
jp
push
xchg
push
pop
imul
inc
outs
mov
jbe
pop
inc
arpl
push
xchg
push
inc
jp
push
pop
push
push
inc
jp
inc
pop
imul
push
push
xchg
inc
inc
imul
(bad)
imul
(bad)
outs
sbb
pop
push
(bad)
imul
pop
imul
dec
(bad)
jns
push
inc
jb
push
inc
addr16
inc
jp
push
xchg
push
inc
outs
jmp
imul
outs
push
push
xchg
push
xchg
push
pop
push
push
pop
push
mov
outs
into
push
xchg
push
pop
imul
xchg
inc
pop
push
push
(bad)
outs
loop
(bad)
push
push
xchg
push
inc
jp
inc
xchg
push
(bad)
outs
push
push
pop
outs
ficom
push
add
jns
inc
jb
inc
pop
jle
pop
inc
jp
push
xchg
push
inc
jp
push
pop
push
push
inc
jp
push
pop
push
push
inc
jp
push
xchg
inc
(bad)
outs
rcl
(bad)
push
(bad)
imul
(bad)
imul
inc
pop
imul
(bad)
outs
jb
pop
outs
mov
inc
push
jle
inc
outs
loop
xchg
inc
(bad)
imul
push
pop
push
push
push
pop
push
fiadd
outs
inc
push
pop
push
push
pop
push
push
inc
imul
inc
pop
imul
inc
outs
jle
xchg
push
xchg
push
inc
imul
(bad)
jns
push
inc
jb
pop
xchg
pop
pop
push
push
pop
inc
outs
add
imul
outs
retf
push
pop
inc
jp
pop
pop
imul
xchg
pop
inc
jp
dec
xchg
pop
(bad)
imul
(bad)
imul
pop
inc
push
push
pop
pop
imul
(bad)
outs
pop
pop
xchg
push
inc
jp
push
inc
mov
jp
dec
(bad)
outs
jb
pop
imul
push
pop
pop
push
pop
xchg
inc
(bad)
jns
pop
inc
jb
pop
pop
fs
pop
pop
outs
push
pop
inc
jp
pop
xchg
pop
inc
outs
ficomp
outs
or
(bad)
pop
xchg
pop
inc
imul
dec
pop
imul
pop
outs
jp
inc
imul
pop
imul
inc
jp
pop
(bad)
imul
pop
imul
xchg
pop
inc
jp
pop
pop
push
dec
pop
imul
pop
ins
dec
pop
pop
outs
into
pop
inc
jp
pop
pop
push
pop
pop
imul
inc
(bad)
jns
jae
jb
dec
(bad)
jle
dec
inc
jp
pop
xchg
pop
(bad)
imul
pop
imul
xchg
pop
inc
outs
xchg
imul
pop
pop
xor
outs
jbe
xchg
dec
(bad)
imul
pop
pop
imul
dec
xchg
pop
pop
ins
rcr
push
pop
inc
jp
pop
xchg
pop
pop
push
pop
inc
jp
pop
xchg
pop
(bad)
outs
mov
push
jbe
pop
imul
pop
push
dec
inc
imul
inc
outs
dec
pop
ins
stos
pop
pop
ins
out
pop
pop
outs
adc
jp
pop
pop
push
sahf
pop
pop
push
pop
inc
jp
pop
inc
push
into
pop
xchg
pop
xchg
pop
pop
push
mov
pop
xchg
pop
(bad)
imul
(bad)
jns
pop
inc
jb
pop
pop
fs
pop
pop
outs
push
pop
inc
jp
pop
xchg
pop
inc
outs
mov
outs
into
dec
(bad)
outs
mov
xchg
pop
inc
imul
pop
imul
outs
es
inc
imul
pop
pop
imul
inc
jp
pop
pop
push
push
dec
(bad)
imul
pop
jg
pop
xchg
pop
(bad)
outs
mov
pop
push
jp
inc
imul
pop
ins
mov
inc
inc
jb
pop
xchg
pop
(bad)
imul
pop
push
pop
pop
xchg
pop
inc
outs
ret
imul
inc
pop
dec
dec
xchg
pop
(bad)
outs
ss
xchg
pop
pop
push
mov
pop
pop
imul
outs
scas
pop
(bad)
imul
pop
(bad)
outs
pop
pop
(bad)
imul
dec
(bad)
outs
retf
bound
inc
outs
repnz
xchg
dec
(bad)
imul
inc
jp
pop
inc
push
stos
pop
xchg
pop
inc
imul
pop
inc
jp
pop
inc
imul
xchg
dec
inc
jp
pop
xchg
pop
pop
push
cmp
outs
ds
inc
jp
pop
xchg
dec
pop
ins
push
(bad)
jl
ins
inc
jb
pop
inc
addr16
pop
inc
jp
pop
pop
imul
push
dec
(bad)
imul
pop
xchg
pop
xchg
pop
inc
jp
pop
xchg
dec
inc
jns
pop
pop
imul
inc
jp
pop
inc
jp
pop
pop
imul
pop
push
pop
dec
xchg
pop
inc
outs
inc
dec
pop
imul
inc
imul
dec
xchg
pop
pop
outs
and
push
jmp
push
push
pop
pop
push
sahf
pop
inc
imul
(bad)
outs
inc
pop
xchg
dec
inc
jp
pop
xchg
pop
pop
push
jp
inc
outs
jle
inc
jp
pop
xchg
dec
pop
ins
push
(bad)
jl
inc
inc
jb
pop
xchg
pop
pop
push
push
pop
inc
outs
add
jp
pop
xchg
inc
pop
ins
dec
pop
inc
jb
pop
pop
bound
dec
(bad)
outs
(bad)
pop
inc
outs
loop
pop
imul
pop
ins
outs
pop
pop
imul
inc
outs
(bad)
pop
pop
push
sahf
pop
pop
push
xchg
push
dec
pop
inc
jp
pop
(bad)
imul
pop
(bad)
outs
loop
(bad)
imul
(bad)
outs
cs
pop
pusha
rcr
jp
pop
pop
imul
(bad)
jns
inc
inc
jb
pop
pop
bound
pop
xchg
pop
(bad)
imul
inc
inc
jb
pop
inc
addr16
pop
pop
push
pop
xchg
pop
pop
imul
inc
jp
dec
inc
arpl
push
inc
jbe
push
pop
bound
push
inc
jp
push
pop
pusha
xchg
arpl
push
inc
jb
push
(bad)
popa
repnz
inc
addr16
(bad)
jl
pop
(bad)
arpl
pop
inc
imul
pop
inc
jp
pop
inc
push
push
pop
xchg
pop
pop
imul
pop
pop
imul
inc
jns
pop
pop
push
repnz
pop
outs
jbe
pop
push
mov
pop
inc
outs
pop
xchg
dec
xchg
pop
(bad)
imul
imul
pop
inc
jp
pop
pop
push
dec
pop
imul
push
pop
pop
imul
jp
pop
(bad)
imul
inc
outs
ds
pop
imul
jp
pop
(bad)
imul
pop
pop
push
push
pop
inc
imul
push
inc
jp
pop
pop
push
mov
jp
pop
pop
push
ss
(bad)
push
pop
inc
jp
pop
pop
imul
(bad)
outs
push
inc
imul
pop
push
pop
inc
outs
xchg
dec
(bad)
outs
call
imul
(bad)
imul
(bad)
imul
dec
xchg
pop
inc
outs
mov
pop
push
ds
inc
jb
dec
inc
jp
jg
jb
pop
inc
arpl
pop
inc
jp
pop
xchg
pop
inc
jp
pop
inc
outs
sahf
pop
pop
imul
inc
outs
(bad)
pop
inc
jp
dec
xchg
pop
(bad)
outs
xor
imul
pop
inc
push
cmps
pop
pop
imul
pop
pop
push
dec
pop
imul
inc
jp
pop
inc
push
inc
pop
xchg
pop
inc
imul
pop
pop
push
pop
pop
push
dec
pop
imul
pop
ins
mov
pop
inc
jp
pop
pop
push
cs
inc
jns
pop
inc
push
sbb
outs
push
pop
(bad)
outs
add
jp
pop
(bad)
imul
pop
inc
imul
inc
jp
pop
(bad)
imul
pop
inc
imul
pop
push
(bad)
pop
(bad)
push
pop
pop
ins
sahf
pop
(bad)
imul
pop
pop
imul
xchg
pop
pop
imul
pop
ins
mov
xchg
push
inc
xor
pop
inc
outs
loop
(bad)
outs
out
inc
outs
sub
outs
push
inc
jp
pop
inc
imul
dec
xchg
pop
pop
push
or
jp
pop
xchg
pop
(bad)
outs
jbe
pop
push
(bad)
pop
pop
imul
(bad)
imul
imul
pop
(bad)
push
push
inc
jp
push
(bad)
jns
dec
(bad)
jns
push
inc
jp
pop
pop
push
pop
pop
push
pop
pop
push
mov
pop
push
dec
inc
imul
arpl
pop
(bad)
outs
pop
inc
outs
stos
pop
pop
push
pop
inc
jp
pop
pop
push
pop
inc
jp
pop
(bad)
imul
pop
xchg
pop
pop
imul
inc
jp
pop
xchg
pop
(bad)
imul
dec
xchg
pop
inc
outs
cmps
pop
(bad)
outs
push
pop
imul
pop
push
push
pop
xchg
pop
pop
imul
dec
xchg
pop
xchg
pop
inc
outs
mov
inc
jp
pop
pop
push
mov
pop
inc
jp
pop
xchg
pop
inc
outs
scas
pop
(bad)
imul
inc
inc
jb
pop
pop
bound
dec
inc
outs
xchg
or
outs
mov
mov
(bad)
imul
(bad)
bound
push
inc
outs
mov
dec
(bad)
imul
pop
inc
jp
inc
inc
jp
inc
xchg
inc
inc
outs
sahf
inc
pop
push
push
pop
imul
push
inc
xchg
push
inc
imul
outs
jbe
xchg
inc
(bad)
outs
ds
inc
jp
inc
pop
push
inc
pop
imul
inc
inc
jp
inc
pop
ins
push
inc
inc
outs
pop
push
pop
imul
inc
outs
mov
inc
pop
imul
inc
jp
push
pop
ins
test
cmp
outs
inc
outs
bound
cmps
inc
pop
push
outs
push
inc
imul
push
xchg
inc
pop
imul
imul
outs
mov
or
imul
pop
push
inc
pop
imul
xchg
inc
pop
imul
(bad)
jns
push
inc
jb
inc
inc
data16
inc
pop
ins
adc
imul
inc
pop
push
mov
or
outs
push
inc
pop
outs
repnz
inc
push
cmp
outs
mov
push
(bad)
imul
push
inc
fs
push
(bad)
jns
inc
inc
data16
inc
(bad)
outs
pop
inc
inc
push
or
push
inc
pop
push
mov
push
test
cmp
imul
dec
inc
addr16
outs
push
inc
pop
imul
push
inc
pop
push
inc
xchg
push
(bad)
jns
inc
inc
jb
push
(bad)
jle
dec
inc
jp
inc
(bad)
outs
ss
(bad)
outs
cmp
imul
jp
inc
inc
push
push
xchg
inc
inc
imul
inc
(bad)
imul
inc
inc
imul
(bad)
outs
inc
inc
xchg
inc
inc
jp
inc
xchg
inc
inc
jp
inc
pop
imul
imul
inc
xchg
inc
pop
push
adc
outs
push
inc
inc
jp
inc
xchg
push
pop
ins
adc
inc
jnp
jb
inc
inc
addr16
inc
inc
jp
inc
xchg
inc
pop
push
push
pop
imul
inc
outs
loop
pop
imul
pop
push
inc
pop
imul
inc
outs
push
dec
pop
bound
push
pop
popa
sahf
inc
xchg
inc
inc
jp
inc
inc
ins
dec
inc
inc
push
xor
imul
xchg
inc
pop
imul
inc
jp
inc
inc
push
stos
inc
xchg
inc
(bad)
outs
push
inc
xchg
inc
xchg
inc
inc
imul
inc
jp
inc
pop
push
inc
inc
jp
inc
pop
imul
(bad)
jns
je
jb
dec
inc
js
inc
inc
outs
cmps
inc
pop
push
cs
inc
imul
push
(bad)
imul
ins
sahf
push
pop
outs
inc
inc
xchg
inc
pop
outs
mov
imul
inc
imul
inc
inc
jp
push
xchg
inc
(bad)
outs
loop
xchg
inc
xchg
inc
pop
imul
inc
jp
inc
xchg
push
(bad)
outs
sbb
imul
inc
(bad)
bound
dec
inc
outs
mov
imul
inc
xchg
inc
inc
imul
inc
inc
jp
inc
xchg
inc
inc
imul
inc
inc
outs
adc
imul
xchg
inc
(bad)
outs
add
push
inc
pop
push
mov
jp
inc
pop
imul
xchg
push
(bad)
jl
push
jb
inc
xchg
inc
pop
imul
jp
inc
(bad)
imul
inc
(bad)
imul
(bad)
bound
inc
xchg
push
(bad)
outs
mov
jp
push
xchg
inc
inc
outs
jp
inc
jp
inc
inc
push
inc
inc
imul
(bad)
outs
scas
inc
xchg
push
(bad)
jl
inc
(bad)
push
inc
xchg
inc
xchg
inc
inc
push
retf
jns
inc
(bad)
imul
xchg
inc
inc
imul
inc
(bad)
imul
inc
imul
push
inc
jp
inc
xchg
inc
pop
push
push
inc
outs
(bad)
push
pop
bound
push
xchg
inc
xchg
inc
inc
imul
push
xchg
pop
inc
jns
dec
inc
pop
jmp
imul
jp
inc
xchg
push
(bad)
outs
pop
push
pop
imul
imul
inc
inc
jp
inc
inc
imul
outs
test
cli
inc
inc
js
inc
inc
outs
loop
pop
push
push
inc
imul
(bad)
imul
pop
push
inc
xchg
inc
xchg
push
inc
imul
inc
jp
inc
pop
push
push
pop
imul
xchg
inc
(bad)
outs
ds
inc
jp
inc
xchg
push
(bad)
outs
sub
outs
scas
inc
xchg
inc
xchg
inc
(bad)
outs
fiadd
jp
push
xchg
inc
xchg
inc
xchg
inc
(bad)
outs
into
push
(bad)
jns
inc
inc
jb
inc
xchg
inc
(bad)
outs
inc
jp
inc
xchg
push
(bad)
outs
jmp
outs
adc
outs
(bad)
inc
(bad)
outs
sbb
jp
inc
pop
push
inc
pop
imul
pop
ins
retf
jp
inc
(bad)
outs
mov
(bad)
imul
(bad)
push
push
pop
ins
bound
out
(bad)
imul
push
adc
push
inc
pop
push
fiadd
popa
inc
inc
inc
outs
inc
inc
inc
outs
dec
push
inc
imul
inc
jb
inc
xchg
inc
pop
push
and
jb
inc
xchg
inc
inc
outs
scas
inc
xchg
inc
pop
push
pop
inc
jle
dec
mov
inc
inc
imul
inc
outs
dec
push
pop
imul
outs
jbe
pop
imul
outs
inc
outs
and
imul
pop
imul
(bad)
imul
inc
xchg
inc
(bad)
push
inc
pop
push
push
inc
pop
push
push
inc
imul
inc
outs
mov
inc
xchg
inc
xchg
push
pop
imul
inc
outs
rol
imul
push
(bad)
imul
inc
inc
jp
inc
inc
push
push
inc
pop
imul
outs
test
cli
push
pop
ins
mov
inc
xchg
inc
pop
imul
inc
imul
outs
xchg
inc
xchg
push
xchg
pop
pop
jle
dec
(bad)
jle
inc
pop
push
inc
pop
push
xor
push
inc
(bad)
(bad)
cli
dec
inc
outs
jle
xchg
push
(bad)
imul
pop
ins
scas
inc
pop
imul
inc
outs
push
pop
(bad)
jle
dec
inc
pop
push
inc
inc
imul
inc
xchg
inc
(bad)
imul
inc
xchg
inc
pop
imul
jnp
inc
xchg
inc
inc
jp
inc
inc
push
adc
xchg
push
pop
outs
fiadd
jp
inc
(bad)
imul
inc
inc
jp
inc
inc
push
mov
pop
push
cmp
inc
jp
inc
inc
imul
(bad)
outs
push
xchg
push
inc
jns
inc
xchg
inc
pop
push
push
dec
xchg
inc
pop
imul
inc
imul
pop
ins
jb
pop
imul
inc
outs
cmp
jns
push
inc
jb
inc
pop
addr16
pop
push
out
push
pop
push
inc
inc
outs
push
inc
inc
outs
sbb
outs
pop
inc
xchg
inc
inc
imul
push
(bad)
jl
inc
inc
jb
inc
inc
popa
jbe
xchg
push
(bad)
imul
inc
inc
jp
inc
xchg
push
(bad)
outs
outs
inc
(bad)
bound
inc
xchg
push
(bad)
imul
inc
inc
imul
inc
jp
inc
inc
imul
inc
pop
push
push
(bad)
imul
inc
(bad)
imul
pop
push
inc
inc
imul
inc
imul
push
(bad)
imul
inc
inc
imul
inc
jp
push
(bad)
imul
inc
inc
outs
cmps
inc
(bad)
outs
push
inc
jp
dec
inc
jp
inc
inc
ins
push
inc
xchg
push
inc
outs
pop
push
inc
jp
imul
inc
pop
arpl
push
(bad)
outs
repnz
inc
outs
not
imul
inc
outs
loop
(bad)
outs
cmps
inc
xchg
inc
inc
imul
dec
xchg
dec
inc
jp
dec
(bad)
outs
pop
dec
(bad)
outs
inc
dec
inc
outs
(bad)
dec
inc
jp
dec
pop
imul
pop
ins
jbe
inc
outs
jp
inc
outs
dec
imul
inc
outs
push
pop
imul
pop
push
dec
inc
imul
xchg
dec
xchg
dec
inc
jp
dec
pop
imul
xchg
dec
inc
outs
ss
(bad)
outs
jp
pop
js
dec
pop
push
pop
inc
imul
push
dec
pop
push
adc
imul
pop
bound
dec
inc
pushw
dec
pop
push
mov
imul
xchg
pop
pop
ins
jp
(bad)
jns
push
inc
jb
dec
xchg
dec
xchg
dec
inc
jp
dec
pop
imul
inc
outs
call
jl
inc
inc
jnp
dec
inc
imul
pop
inc
jp
dec
xchg
dec
pop
imul
inc
outs
mov
pop
pop
ins
cmps
pop
(bad)
jns
dec
inc
jb
dec
pop
popa
push
dec
xchg
dec
inc
jp
dec
pop
outs
push
pop
pop
imul
pop
ins
xchg
mov
jp
dec
pop
push
mov
pop
push
ds
pop
push
dec
pop
push
dec
xchg
dec
inc
jp
dec
pop
imul
inc
imul
xchg
dec
inc
outs
inc
pop
pop
imul
(bad)
imul
inc
imul
xchg
pop
inc
outs
jle
(bad)
jl
inc
inc
jnp
dec
pop
push
out
dec
pop
push
push
dec
pop
imul
xchg
dec
(bad)
outs
inc
dec
pop
imul
jl
push
inc
jb
dec
(bad)
addr16
pop
imul
inc
jb
dec
pop
pusha
loop
inc
outs
es
(bad)
outs
stos
dec
pop
push
dec
pop
push
(bad)
pop
inc
imul
dec
xchg
dec
pop
push
dec
xchg
pop
xchg
push
inc
jb
dec
inc
data16
pop
ins
jp
pop
imul
inc
outs
loop
(bad)
jge
inc
(bad)
jp
dec
xchg
dec
inc
jp
pop
xchg
dec
inc
outs
sbb
ins
push
pop
pop
push
dec
(bad)
imul
imul
inc
inc
jp
dec
(bad)
imul
dec
pop
arpl
dec
xchg
dec
pop
push
dec
xchg
inc
xchg
pop
inc
jb
dec
(bad)
popa
call
imul
xchg
dec
(bad)
imul
dec
xchg
inc
xchg
push
inc
jb
dec
(bad)
popa
es
inc
outs
sub
outs
out
inc
inc
imul
(bad)
addr16
dec
pop
imul
inc
jp
dec
(bad)
imul
dec
inc
outs
mov
imul
inc
jp
dec
pop
push
mov
inc
inc
jp
dec
(bad)
imul
dec
(bad)
imul
dec
(bad)
bound
dec
xchg
dec
xchg
inc
(bad)
outs
(bad)
push
inc
jb
inc
(bad)
(bad)
into
pop
pop
popa
xor
popa
mov
xchg
dec
inc
outs
ds
(bad)
outs
loop
pop
arpl
pop
inc
jp
dec
inc
popa
scas
dec
xchg
pop
inc
imul
dec
xchg
dec
pop
push
dec
xchg
inc
xchg
pop
inc
jb
dec
pop
imul
pop
push
mov
dec
(bad)
jns
pop
inc
outs
push
xchg
dec
xchg
inc
xchg
bound
call
outs
add
outs
inc
dec
inc
imul
dec
pop
imul
imul
pop
outs
jle
inc
jp
dec
pop
imul
(bad)
imul
pop
push
fimul
outs
fimul
imul
xchg
dec
inc
outs
or
imul
dec
pop
outs
cmp
imul
outs
loop
inc
jp
dec
(bad)
imul
xchg
dec
inc
outs
xchg
dec
inc
outs
ficomp
outs
fiadd
pusha
ret
jns
dec
pop
fs
outs
mov
imul
dec
inc
jp
dec
inc
outs
mov
pop
(bad)
outs
dec
pop
push
outs
dec
pop
imul
xchg
pop
(bad)
imul
inc
inc
add
imul
dec
(bad)
imul
imul
dec
pop
push
dec
pop
imul
pop
xchg
dec
pop
push
pop
pop
imul
xchg
dec
xchg
dec
(bad)
outs
push
dec
inc
imul
(bad)
outs
or
mov
outs
jb
pop
imul
inc
jp
inc
pop
ins
jle
inc
jb
dec
xchg
dec
xchg
dec
inc
jp
dec
inc
push
push
dec
pop
push
dec
xchg
dec
(bad)
outs
inc
dec
inc
jp
pop
(bad)
imul
push
dec
inc
outs
repnz
(bad)
outs
mov
xchg
pop
inc
outs
ds
pop
push
es
pop
push
out
dec
pop
imul
pop
(bad)
jns
dec
(bad)
addr16
dec
xchg
pop
inc
outs
push
dec
xchg
dec
inc
outs
mov
outs
repnz
xchg
pop
inc
outs
cmp
imul
(bad)
outs
mov
dec
inc
imul
pop
push
dec
xchg
dec
pop
push
dec
pop
jns
dec
(bad)
imul
(bad)
imul
pop
imul
inc
push
mov
dec
xchg
dec
inc
jp
dec
xchg
pop
pop
imul
pop
push
sbb
outs
pop
dec
pop
push
dec
pop
push
dec
push
(bad)
pusha
mov
ja
dec
inc
outs
jbe
(bad)
imul
pop
xchg
push
xchg
inc
inc
jbe
dec
inc
imul
(bad)
outs
push
dec
xchg
inc
(bad)
jl
push
inc
jb
dec
inc
popa
(bad)
dec
xchg
dec
inc
outs
push
dec
xchg
inc
(bad)
jl
push
inc
jb
dec
(bad)
data16
imul
(bad)
outs
dec
(bad)
imul
push
(bad)
popa
adc
(bad)
dec
pop
push
ficom
ret
jno
dec
pop
push
dec
pop
xchg
push
inc
data16
(bad)
je
dec
inc
imul
dec
xchg
dec
pop
push
dec
pop
push
adc
xchg
inc
inc
je
dec
pop
push
inc
dec
pop
bound
xchg
dec
(bad)
imul
dec
inc
addr16
inc
outs
ds
inc
imul
xchg
dec
(bad)
imul
dec
pop
push
pop
inc
imul
pushw
inc
inc
pop
inc
dec
pop
outs
push
dec
inc
outs
dec
dec
inc
outs
dec
pop
pop
imul
inc
imul
xchg
dec
inc
outs
mov
dec
pop
push
dec
inc
jp
pop
pop
imul
pop
imul
dec
inc
jp
pop
(bad)
imul
(bad)
imul
dec
xchg
dec
pop
push
pop
pop
ins
test
cmp
jp
dec
pop
imul
pop
imul
inc
jp
pop
xchg
dec
pop
push
dec
pop
push
dec
inc
imul
pop
pop
imul
pop
outs
dec
dec
xchg
dec
inc
jp
dec
pop
imul
xchg
push
(bad)
jns
inc
inc
jae
dec
xchg
dec
inc
jp
dec
xchg
pop
xchg
dec
inc
imul
pop
imul
pop
imul
inc
jp
dec
pop
imul
inc
jp
dec
pop
push
dec
pop
push
pop
pop
imul
pop
push
dec
pop
imul
pop
pop
push
push
pop
jb
fs
pop
call
outs
or
(bad)
dec
inc
jp
dec
pop
push
jb
pop
push
pop
xchg
dec
xchg
dec
(bad)
imul
xchg
dec
(bad)
outs
push
inc
jp
dec
pop
push
push
pop
pop
push
inc
inc
jp
pop
inc
imul
dec
xchg
dec
pop
imul
inc
dec
mov
xchg
dec
pop
push
pop
xchg
dec
(bad)
push
dec
xchg
dec
xchg
dec
inc
outs
adc
jp
dec
xchg
dec
inc
outs
fimul
jp
dec
xchg
dec
pop
outs
dec
dec
xchg
dec
pop
push
mov
inc
imul
xchg
inc
pop
addr16
xchg
pop
xchg
pop
pop
jg
imul
jae
popa
inc
inc
push
je
outs
add
push
popa
xchg
jae
outs
dec
jo
imul
inc
outs
jp
inc
jp
popa
(bad)
imul
(bad)
imul
je
push
push
jae
imul
inc
jp
jno
push
jo
imul
pop
imul
imul
push
jb
outs
jbe
pop
push
jae
imul
(bad)
outs
bound
out
xchg
popa
pop
ins
scas
jne
imul
inc
outs
(bad)
jb
imul
push
inc
jno
jp
jb
imul
jo
imul
jno
imul
jae
outs
cmps
jb
push
popa
pop
push
shl
imul
jno
outs
xor
(bad)
jo
jp
jb
imul
inc
imul
jno
imul
xchg
jnp
adc
je
imul
(bad)
ins
xchg
jae
imul
pusha
pop
imul
outs
add
imul
jno
imul
jae
imul
inc
jp
je
imul
jne
push
adc
jp
pusha
(bad)
imul
jne
push
pusha
xchg
jno
imul
inc
imul
(bad)
outs
xor
imul
je
jp
je
imul
je
jp
jae
imul
(bad)
imul
imul
jo
jp
jae
push
mov
imul
pop
push
jb
imul
je
outs
data16
push
out
jno
imul
pop
imul
imul
pop
push
arpl
imul
jp
fs
jg
fs
jns
fs
jle
jno
jp
jae
imul
jno
jp
pusha
pop
push
adc
imul
jae
jp
jo
imul
xchg
arpl
push
arpl
imul
imul
jno
outs
bound
outs
data16
ins
stos
jo
imul
addr16
js
arpl
addr16
arpl
outs
inc
addr16
jg
pusha
(bad)
jg
addr16
jp
arpl
mov
pop
addr16
xchg
pusha
xchg
addr16
jle
gs
jle
push
js
cmova
jo
pusha
xchg
ja
jp
ja
imul
ja
outs
xchg
imul
jb
outs
xor
imul
(bad)
imul
jb
jp
arpl
push
out
jb
outs
xchg
jno
outs
(bad)
jo
push
arpl
push
inc
ja
outs
xchg
imul
pop
push
repnz
inc
jp
jbe
jp
arpl
imul
pop
push
jmp
imul
imul
outs
pop
jae
imul
jae
push
dec
jno
imul
ja
outs
bound
push
jae
outs
jle
(bad)
imul
bound
push
ja
outs
(bad)
jno
push
push
jo
push
jb
jp
jno
imul
inc
imul
jp
jo
outs
cmp
imul
xchg
bound
imul
(bad)
imul
inc
imul
(bad)
outs
shl
imul
popa
inc
jle
inc
jle
bound
dec
jno
imul
pop
push
bound
push
(bad)
jno
jp
jno
outs
out
inc
outs
stos
bound
outs
jno
push
jae
imul
jb
push
jae
jp
jno
jp
bound
push
jae
outs
into
ja
outs
bnd
push
cmp
push
loop
inc
jp
fs
jle
jg
jp
jp
data16
jp
popa
(bad)
jns
popa
xchg
jge
jl
ins
pop
js
push
inc
jae
jbe
pusha
into
jno
jp
jno
push
jp
pop
imul
jno
jp
jne
outs
jmp
jp
jbe
imul
jbe
imul
je
jp
je
push
ja
imul
jo
outs
cmp
ds
imul
pop
push
outs
jo
imul
inc
jp
jne
jnp
jo
outs
add
imul
ja
imul
inc
jp
gs
jl
jns
addr16
xchg
popa
(bad)
jle
arpl
bound
jno
imul
inc
outs
push
jne
jp
jbe
imul
gs
outs
repnz
dec
div
outs
cli
jo
push
xchg
jbe
push
jne
imul
ins
(bad)
jns
pop
inc
jae
ja
addr16
fs
push
push
jno
imul
pop
imul
xchg
jo
imul
fs
push
cmps
ja
jp
jne
imul
imul
jb
imul
xchg
jo
imul
pop
imul
jns
ja
bound
jne
imul
(bad)
outs
and
out
inc
jp
ja
imul
jo
jp
je
imul
outs
pop
jo
jp
fs
push
dec
ja
imul
jno
outs
mov
jne
outs
mov
jne
imul
pop
imul
pop
push
je
outs
call
outs
xor
xchg
mov
jp
ja
outs
mov
inc
outs
ss
(bad)
jl
push
inc
jae
ja
arpl
fs
push
stos
jbe
imul
inc
imul
pop
push
push
addr16
imul
inc
outs
(bad)
jae
outs
dec
jbe
push
bnd
imul
pop
push
jae
imul
push
sub
jp
je
outs
adc
outs
push
jb
outs
pop
xchg
ja
imul
xchg
jae
ins
mov
push
mov
inc
jp
je
imul
(bad)
ins
and
jp
jb
outs
jmp
push
(bad)
jne
ins
sbb
sahf
addr16
imul
outs
inc
je
imul
xchg
jbe
imul
pop
push
loop
inc
jp
ja
imul
ja
imul
ja
outs
ret
jp
ins
pop
push
mov
data16
jp
addr16
push
jb
imul
addr16
push
je
imul
jne
outs
xchg
jne
imul
pop
imul
outs
pop
jbe
imul
outs
inc
ja
jp
jae
imul
jae
jp
ja
outs
cli
ja
jp
jne
push
es
push
cs
imul
ja
imul
xchg
jbe
outs
inc
push
(bad)
outs
retf
jp
jne
push
ss
push
jae
push
xchg
ja
outs
data16
outs
push
pop
push
push
jne
outs
(bad)
jbe
jp
jb
outs
pop
jb
imul
outs
xchg
jns
je
push
popw
imul
xchg
push
(bad)
outs
mov
jbe
outs
loop
xchg
jb
imul
outs
out
jbe
jp
jne
imul
jae
push
jne
outs
xor
push
inc
outs
retf
jp
jbe
imul
gs
push
(bad)
popw
push
data16
outs
jmp
push
js
imul
push
jns
outs
fidivr
outs
add
jns
jl
imul
jl
push
push
imul
jp
imul
(bad)
imul
imul
outs
(bad)
jp
outs
sbb
jp
jge
push
jnp
outs
xchg
imul
pop
push
idiv
push
jnp
imul
bound
out
pop
arpl
js
outs
xchg
pusha
(bad)
jo
jne
jbe
jns
outs
fidivr
push
jge
outs
inc
arpl
jae
jp
pusha
bnd
outs
ss
outs
mov
jp
jp
jp
imul
jge
push
xchg
jnp
imul
imul
bound
jns
push
xor
jp
jp
imul
jp
push
jmp
push
push
jns
outs
sbb
jno
jo
jne
jns
imul
push
pop
imul
outs
idiv
outs
jp
(bad)
jns
inc
inc
jae
js
popa
out
inc
jp
jnp
imul
xchg
jnp
push
push
jp
jp
jge
imul
jns
imul
inc
dec
mov
xchg
jge
imul
jge
push
push
xchg
imul
push
je
jp
jl
push
ret
outs
(bad)
jns
outs
retf
jp
push
pop
outs
idiv
jp
jge
outs
(bad)
jnp
push
cmps
popa
(bad)
jno
jo
jno
js
push
jge
imul
xchg
jb
jge
push
xchg
jl
imul
jl
imul
inc
jp
jl
push
push
xchg
jnp
imul
jge
push
imul
call
jbe
jo
push
(bad)
jnp
push
into
js
outs
xor
imul
inc
jp
js
push
loop
xchg
jns
jp
jns
imul
pop
imul
dec
fidivr
outs
pop
jg
jp
js
outs
push
jp
push
jg
outs
dec
imul
idiv
jp
jg
push
bound
outs
out
pop
push
out
js
push
xchg
imul
pop
js
imul
jle
imul
bound
jbe
push
(bad)
popa
mov
inc
jp
jg
imul
jns
push
jp
imul
inc
push
push
js
imul
inc
jp
jns
push
xchg
outs
or
jp
js
imul
push
(bad)
jbe
ja
push
data16
imul
inc
jp
js
imul
jg
imul
pop
imul
pop
push
retf
outs
dec
jnp
push
jle
outs
ss
imul
inc
jp
jle
push
sub
outs
scas
jns
push
push
push
dec
sbb
imul
jle
outs
(bad)
jle
push
jns
push
jb
(bad)
imul
jg
push
js
outs
loop
xchg
arpl
xor
(bad)
jns
jno
js
jl
outs
pop
jns
push
inc
jno
jp
jns
imul
push
inc
jp
jle
jp
jle
imul
js
push
jnp
imul
jle
push
push
imul
inc
jp
jns
outs
xchg
outs
or
jp
jns
imul
pop
imul
pop
push
jle
outs
bound
push
jle
imul
xchg
jb
jp
js
push
call
jns
jge
arpl
(bad)
outs
retf
jp
jg
imul
js
outs
cmp
imul
jge
outs
data16
push
outs
jns
jp
jg
outs
xchg
jns
jp
js
imul
jns
imul
jp
jle
outs
xor
outs
ss
outs
cmp
jp
ins
inc
imul
js
push
xchg
pusha
pop
imul
inc
jae
jg
outs
sahf
ins
pop
dec
ret
outs
(bad)
jg
push
jle
imul
jge
outs
cli
jg
imul
jge
imul
pop
imul
jl
outs
sbb
pop
jle
imul
jle
imul
push
jns
imul
ins
pop
push
mov
jg
imul
pop
push
jle
push
jle
imul
outs
push
ins
(bad)
jns
jg
pusha
fidivr
inc
jg
imul
inc
outs
push
ins
(bad)
outs
jb
xchg
pop
(bad)
outs
cli
js
jp
jg
push
jl
imul
inc
outs
cs
jp
js
imul
pop
push
js
imul
inc
jp
jge
imul
imul
inc
outs
jb
pop
push
ins
xchg
jg
push
mov
jg
push
jg
imul
(bad)
jns
push
inc
jae
outs
pop
jle
outs
inc
jp
js
popa
(bad)
jle
ins
or
imul
jg
imul
pop
push
mov
jns
imul
jge
outs
xchg
jle
imul
ins
inc
imul
jp
ins
repnz
xchg
jle
imul
inc
jp
jns
push
data16
push
out
jg
jp
jg
imul
outs
pop
imul
pop
imul
outs
inc
jg
imul
outs
push
jl
jp
outs
pop
push
jp
imul
outs
pop
push
jl
push
jg
imul
jnp
imul
inc
outs
pop
outs
pop
push
ja
jnp
jnp
push
jge
outs
retf
imul
pop
push
mov
(bad)
jne
jns
outs
mov
jle
imul
jge
imul
xchg
jne
imul
jnp
imul
jnp
jp
jnp
push
outs
inc
dec
ds
outs
bound
data16
push
jp
push
outs
xchg
jl
imul
outs
fisubr
imul
jge
imul
imul
jp
push
jnp
imul
jp
push
jmp
outs
push
jnp
imul
jge
push
jp
imul
jp
imul
inc
jp
jge
push
jbe
(bad)
push
jnp
jp
jge
imul
jg
push
scas
jg
push
jg
outs
push
outs
(bad)
outs
call
outs
add
imul
js
jp
jnp
imul
inc
outs
cmp
ins
(bad)
jge
imul
inc
outs
addr16
je
jb
pop
outs
outs
pop
imul
xchg
jp
jp
jg
push
outs
pop
push
jge
imul
ins
pop
imul
inc
jp
jnp
imul
jg
outs
loop
inc
jp
outs
inc
imul
jle
imul
(bad)
imul
jl
bound
jbe
outs
xchg
retf
imul
jp
jp
jg
imul
(bad)
imul
jge
push
scas
jl
outs
xchg
addr16
ins
push
jno
imul
popa
inc
jp
arpl
or
push
pusha
inc
outs
xor
outs
mul
push
arpl
mov
jae
imul
inc
jae
pusha
xchg
gs
jp
jno
push
push
popa
xchg
bound
push
jb
imul
pusha
(bad)
imul
pop
push
(bad)
gs
push
jno
imul
push
scas
pusha
pop
push
bound
push
bound
imul
outs
push
imul
inc
bound
push
mov
inc
imul
xchg
bound
imul
inc
outs
out
inc
jp
pusha
(bad)
imul
addr16
push
fidiv
jp
popa
(bad)
imul
pop
push
or
push
jb
pop
imul
inc
jp
xchg
popa
pop
push
data16
js
js
je
pusha
inc
js
bound
push
pusha
inc
jp
bound
push
jo
push
popa
inc
outs
push
jo
outs
retf
push
bound
mov
pop
push
jg
imul
inc
arpl
arpl
out
inc
jp
popa
inc
push
push
jo
imul
pusha
xchg
popa
pop
imul
xchg
jo
dec
push
(bad)
(bad)
imul
(bad)
imul
data16
ins
jle
pop
push
jo
imul
fs
outs
out
fs
push
jo
imul
inc
addr16
fs
push
popa
(bad)
imul
(bad)
outs
(bad)
popa
pop
imul
popa
pop
pusha
jbe
inc
jp
xchg
arpl
loop
(bad)
jns
jl
jae
arpl
pusha
outs
arpl
shl
outs
push
jbe
imul
ins
(bad)
jp
pusha
(bad)
outs
inc
popa
xchg
fs
imul
pop
imul
inc
outs
mov
jbe
imul
xchg
ins
(bad)
jne
popa
pop
push
fs
push
jae
imul
imul
pop
outs
inc
arpl
push
jp
jp
push
xchg
jne
push
popa
inc
jp
bound
ds
pop
push
bound
jmp
imul
pop
push
pop
jae
imul
popw
outs
into
addr16
imul
jns
pusha
pop
push
mov
jae
push
sub
imul
inc
imul
(bad)
(bad)
outs
fisub
outs
xor
inc
pusha
xchg
pusha
(bad)
imul
inc
outs
mul
outs
mov
addr16
push
out
inc
outs
jmp
outs
xchg
bound
push
arpl
call
outs
ret
push
jo
imul
pusha
pop
push
mov
addr16
outs
bound
push
pusha
(bad)
imul
pop
push
push
xchg
popa
pop
push
add
push
retf
outs
into
bound
jb
inc
push
cli
arpl
push
addr16
push
jb
imul
pop
push
out
xchg
inc
outs
push
jb
imul
arpl
imul
xor
or
dec
popa
pop
push
pusha
xchg
popw
push
jb
push
bound
imul
pop
push
shl
imul
inc
jp
popa
pop
push
ret
outs
(bad)
arpl
outs
retf
jp
arpl
outs
mov
xchg
jb
imul
xchg
arpl
push
pusha
xchg
jb
imul
inc
outs
push
bound
imul
inc
jp
popa
pop
push
arpl
imul
bound
push
mov
inc
jp
jb
imul
xchg
popa
(bad)
outs
push
inc
jp
popa
pop
push
push
addr16
jp
popa
pop
push
pusha
inc
imul
pop
imul
pop
imul
imul
jp
popa
(bad)
imul
inc
imul
fs
imul
jne
push
pop
fs
imul
xchg
popa
inc
outs
dec
jne
imul
push
mov
popa
pop
outs
loop
pop
imul
xchg
jl
jp
ins
(bad)
push
push
gs
imul
pusha
inc
outs
sahf
fs
imul
inc
jp
popw
push
dec
pusha
inc
jp
popw
push
cli
fs
push
popa
inc
jp
popw
imul
xchg
fs
imul
inc
jp
data16
outs
(bad)
jne
imul
popa
pop
push
xchg
imul
jne
outs
jbe
pop
push
mov
fs
jp
popw
push
cs
pop
push
push
popa
xchg
pusha
inc
jp
popw
push
ja
imul
xchg
outs
(bad)
aas
dec
gs
outs
jb
(bad)
outs
jbe
(bad)
ins
mov
je
imul
xchg
xchg
addr16
push
je
imul
pop
pusha
push
je
pusha
sbb
pop
xchg
je
push
dec
popa
pop
push
je
push
jbe
pop
push
mov
addr16
push
gs
push
ja
push
ins
inc
jp
pusha
pop
outs
xchg
pusha
xchg
ja
push
ins
inc
jp
pusha
pop
outs
push
pusha
inc
outs
mov
push
fs
push
mul
popa
cmp
imul
fs
imul
je
imul
pop
push
pusha
inc
outs
fidiv
add
imul
outs
retf
imul
inc
imul
gs
outs
jle
pop
push
cmps
inc
imul
inc
jp
popa
pop
outs
shl
push
gs
jp
ja
imul
data16
imul
ja
dec
into
xchg
(bad)
(bad)
imul
gs
jp
ja
imul
(bad)
(bad)
imul
outs
outs
data16
outs
push
arpl
(bad)
arpl
push
fidiv
inc
jle
jnp
outs
(bad)
ja
gs
push
jb
pop
push
cli
fs
push
loop
inc
inc
bound
push
out
fs
push
(bad)
bound
call
outs
and
(bad)
fs
imul
inc
imul
pop
push
fs
push
fs
imul
outs
data16
push
pop
push
shl
imul
fs
outs
add
jp
ja
outs
or
into
(bad)
(bad)
imul
(bad)
outs
mov
arpl
and
cmps
addr16
outs
sub
out
inc
jp
jbe
push
gs
imul
pop
imul
imul
inc
imul
addr16
outs
mov
pop
push
mov
addr16
outs
mov
pusha
pop
push
gs
push
adc
(bad)
ja
jns
push
pop
pusha
inc
bound
xchg
push
gs
push
gs
imul
inc
jp
jbe
push
bound
push
arpl
imul
pop
push
arpl
push
bound
sbb
push
bound
imul
outs
push
outs
inc
jp
arpl
push
xor
push
cmp
jae
jne
jle
outs
inc
jp
bound
outs
scas
arpl
push
jbe
imul
inc
outs
and
jbe
imul
jbe
imul
gs
outs
(bad)
arpl
push
out
pop
imul
xchg
fs
imul
jp
jns
imul
(bad)
imul
pop
push
jnp
jns
push
(bad)
jle
fs
jp
imul
outs
mov
ins
pop
push
cs
push
js
imul
imul
imul
ret
ins
inc
jns
imul
imul
mov
inc
jp
imul
jns
push
push
(bad)
outs
cmps
push
push
imul
ins
pop
push
jnp
imul
(bad)
jl
pop
inc
jae
push
(bad)
outs
push
push
push
into
imul
repnz
inc
imul
pop
push
jns
imul
inc
jp
ins
xchg
imul
outs
push
outs
xchg
push
inc
jp
dec
pop
push
add
push
retf
imul
push
outs
jbe
inc
jp
push
push
push
push
imul
outs
jmp
outs
push
imul
jp
js
push
push
inc
push
retf
jp
ins
xchg
push
outs
ss
xchg
imul
and
imul
imul
scas
push
pop
push
imul
pop
addr16
jae
imul
imul
outs
push
push
(bad)
ins
imul
imul
inc
imul
inc
jp
js
imul
ins
xchg
js
imul
(bad)
outs
push
imul
imul
js
imul
pusha
inc
outs
imul
imul
jno
js
pusha
mov
pop
push
push
imul
xchg
imul
fisubr
imul
jp
imul
or
dec
ins
pop
imul
(bad)
jns
push
pop
push
and
imul
inc
imul
(bad)
ins
xchg
jge
imul
imul
push
js
imul
outs
xchg
push
inc
imul
jnp
imul
xchg
imul
push
imul
sahf
outs
inc
jp
jnp
outs
xchg
jnp
push
outs
dec
jnp
push
push
inc
jp
push
(bad)
outs
bound
jp
outs
xchg
imul
push
xchg
push
xchg
jb
jns
popa
mov
outs
pop
imul
push
imul
jp
jnp
imul
jnp
imul
imul
push
ins
(bad)
ins
(bad)
jnp
imul
push
inc
jp
outs
xchg
imul
imul
jns
imul
inc
jp
jnp
push
imul
outs
xchg
imul
jns
outs
pop
bound
xchg
outs
xchg
push
outs
dec
push
inc
jp
imul
push
inc
imul
xchg
push
outs
out
outs
xchg
imul
jp
outs
inc
jp
push
push
retf
push
jae
jns
inc
pop
jbe
pop
push
push
outs
ds
bound
jp
jp
push
push
outs
scas
outs
xchg
imul
jp
jp
imul
inc
imul
jp
push
push
mov
xchg
outs
inc
jp
imul
loop
(bad)
imul
(bad)
outs
jmp
imul
inc
outs
pop
imul
sub
(bad)
jp
imul
jp
push
imul
outs
pop
push
jp
imul
xchg
push
push
out
jp
outs
shr
popa
push
ins
inc
outs
pop
ins
inc
outs
pop
jg
imul
inc
jae
ins
(bad)
imul
outs
repnz
inc
jp
outs
inc
imul
push
xchg
outs
(bad)
jbe
imul
outs
pop
push
push
ins
inc
imul
inc
inc
sub
outs
pop
outs
or
push
outs
inc
jp
imul
cmp
outs
mov
jge
push
jmp
outs
push
imul
pop
imul
cmp
xchg
imul
inc
outs
dec
imul
outs
imul
mov
jge
push
ins
pop
imul
pop
push
shr
push
ins
inc
outs
pop
imul
push
outs
pop
push
xchg
jp
outs
inc
imul
ins
(bad)
outs
ss
xchg
outs
xchg
outs
pop
push
ins
inc
imul
xchg
jge
push
(bad)
push
pop
push
sub
inc
ins
(bad)
ins
dec
js
jns
fs
jae
ins
pop
arpl
(bad)
imul
inc
outs
jle
pop
outs
bound
outs
data16
inc
jp
jl
imul
xchg
ins
pop
imul
xchg
outs
(bad)
bound
outs
xchg
jp
imul
inc
inc
cli
push
pop
imul
push
ins
pop
push
outs
jl
outs
shl
jnp
imul
push
add
imul
pop
push
jge
imul
outs
pop
imul
inc
jp
outs
pop
imul
inc
jp
push
pop
imul
pop
push
push
jge
imul
inc
imul
(bad)
ins
retf
imul
outs
xchg
jg
imul
outs
inc
imul
jl
push
imul
pusha
pop
ins
(bad)
outs
push
jg
push
outs
inc
inc
outs
xchg
outs
pop
imul
jle
imul
jl
jae
imul
mov
ins
inc
imul
inc
jp
outs
inc
data16
outs
push
jg
outs
sbb
addr16
ins
inc
imul
xchg
jbe
jg
addr16
ins
mov
xchg
outs
pop
imul
push
bound
jp
ins
pop
outs
push
inc
jp
imul
push
ins
(bad)
imul
pop
push
xchg
push
push
ins
pop
push
jbe
inc
imul
xchg
ins
pop
push
jl
imul
ins
(bad)
imul
xchg
ins
pop
push
outs
inc
imul
ins
inc
imul
js
jae
ins
xchg
outs
pop
push
imul
jg
outs
cmps
xchg
imul
outs
imul
(bad)
jge
jp
addr16
jp
push
outs
sub
inc
outs
inc
outs
mov
jnp
ja
jg
fs
dec
imul
imul
jle
imul
imul
ins
inc
push
push
jle
imul
inc
outs
fisubr
push
inc
jle
push
bound
push
push
imul
pop
push
outs
inc
imul
outs
pop
push
adc
push
ins
inc
imul
inc
jp
ins
pop
push
outs
pop
outs
(bad)
ins
inc
imul
outs
inc
outs
mov
inc
jp
outs
pop
imul
outs
xchg
ins
xchg
jle
imul
pop
imul
ins
xchg
jl
imul
inc
jp
push
push
jle
imul
xchg
outs
pop
push
(bad)
jle
outs
mov
outs
inc
imul
inc
jp
ins
(bad)
outs
push
xchg
les
nop
inc
outs
ficomp
add
add
jg
xchg
les
xchg
add
repnz
add
not
inc
imul
inc
jp
xchg
add
jmp
push
nop
inc
imul
les
xchg
add
inc
add
mov
inc
jp
add
cmp
add
mov
xchg
add
jmp
jl
cdq
inc
push
push
xchg
test
xchg
add
push
xchg
add
adc
mov
add
mov
add
mov
inc
jp
xchg
add
(bad)
nop
inc
jp
xchg
add
cmps
xchg
add
sub
les
add
sahf
xchg
test
add
outs
retf
imul
add
mov
inc
outs
mov
inc
jp
add
xchg
test
add
push
xchg
test
xchg
inc
outs
call
jae
xchg
les
xchg
test
xchg
les
add
xchg
les
nop
inc
outs
jp
test
xchg
imul
popf
inc
jno
xchg
add
outs
nop
inc
outs
push
xchg
jl
test
xchg
les
xchg
les
xchg
add
(bad)
xchg
test
add
xchg
add
xor
les
xchg
add
mov
nop
les
xchg
inc
imul
les
xchg
add
(bad)
xchg
add
sbb
inc
outs
or
js
xchg
les
xchg
test
nop
add
not
test
add
xchg
les
cwde
inc
outs
jmp
imul
les
xchg
les
xchg
add
inc
xchg
test
add
xchg
les
nop
inc
outs
mov
test
cwde
les
add
xchg
les
xchg
add
stos
xchg
test
xchg
test
add
xchg
inc
imul
add
inc
fwait
add
xchg
les
xchg
inc
outs
jb
inc
outs
mov
inc
imul
les
xchg
test
nop
add
stos
xchg
add
outs
xchg
les
inc
jp
nop
add
pop
add
xchg
test
xchg
add
xchg
test
xchg
add
jb
add
mov
add
jp
inc
jae
nop
add
and
les
xchg
add
out
fwait
inc
jp
nop
les
xchg
test
xchg
add
sahf
mov
nop
les
xchg
test
nop
add
push
xchg
add
repnz
les
inc
outs
cli
xchg
les
fwait
inc
jp
cwde
inc
cmps
mov
stos
add
les
nop
les
xchg
add
pop
xchg
test
add
nop
add
xchg
inc
outs
mov
add
jbe
inc
jae
xchg
add
jle
les
xchg
add
es
test
nop
add
scas
xchg
les
add
nop
test
fwait
test
mov
jae
xchg
add
dec
xchg
les
xchg
inc
outs
mov
inc
jp
xchg
add
cli
xchg
test
xchg
les
xchg
inc
jp
nop
add
sub
test
xchg
add
(bad)
xchg
add
sbb
inc
jp
add
xchg
add
retf
imul
inc
outs
xor
test
nop
les
test
add
xchg
inc
outs
stos
xchg
les
xchg
test
xchg
add
xchg
add
add
fwait
add
adc
imul
jp
xchg
test
xchg
inc
outs
not
les
mov
inc
jp
xchg
add
push
add
out
xchg
test
nop
les
add
xchg
add
inc
xchg
add
xchg
les
add
nop
inc
imul
inc
jp
xchg
add
ds
test
xchg
les
cwde
les
test
xchg
add
adc
add
call
imul
inc
jp
xchg
test
test
mov
add
mov
nop
add
and
inc
imul
add
out
popf
inc
xor
xchg
test
xchg
test
xchg
test
xchg
les
xchg
inc
jp
xchg
inc
jp
xchg
add
mov
test
test
cmp
inc
jp
xchg
add
es
inc
imul
xchg
test
test
(bad)
xchg
inc
imul
test
xchg
inc
outs
(bad)
xchg
les
xchg
test
xchg
cwde
inc
jp
xchg
add
mov
test
bound
inc
outs
jmp
imul
outs
push
xchg
test
xchg
outs
sahf
xchg
inc
push
inc
xchg
test
xchg
add
dec
xchg
test
xchg
add
mov
add
jp
les
xchg
les
xchg
les
xchg
add
push
add
outs
xchg
xchg
inc
push
sbb
add
inc
xchg
inc
jp
xchg
add
dec
xchg
test
nop
test
test
mov
add
cli
xchg
les
xchg
les
xchg
add
out
add
push
les
sahf
les
mov
xchg
inc
outs
pop
test
imul
add
xchg
les
nop
inc
imul
test
lea
xchg
inc
jbe
xchg
test
xchg
inc
outs
out
xchg
test
lahf
les
inc
jae
xchg
add
push
nop
add
add
test
lahf
les
inc
jae
xchg
add
add
lea
loop
add
xchg
inc
outs
stos
cwde
les
inc
jae
xchg
add
(bad)
test
xchg
inc
imul
xchg
test
cwde
test
mov
xchg
les
xchg
les
pushf
inc
jp
xchg
add
bound
inc
outs
jmp
jnp
xchg
test
xchg
add
pop
lahf
inc
jp
xchg
add
adc
dec
xchg
inc
pushw
xchg
add
repnz
les
inc
jae
pushf
les
xchg
add
bound
inc
outs
sub
inc
outs
rcl
outs
ficom
test
xchg
add
inc
xchg
or
les
xchg
add
ss
inc
outs
cli
test
pop
popf
les
xchg
add
push
inc
jp
xchg
test
xchg
inc
jp
xchg
add
sbb
add
adc
imul
inc
outs
into
xchg
test
xchg
outs
ss
add
mov
xchg
add
mov
add
out
sahf
inc
inc
rol
test
xchg
les
xchg
test
xchg
les
xchg
inc
jp
xchg
add
into
xchg
add
xacquire
mov
test
xchg
inc
jp
xchg
mov
xchg
inc
outs
jmp
push
test
sbb
test
xchg
test
xchg
add
or
inc
push
ss
add
cmp
les
xchg
test
xchg
add
sub
test
xchg
les
xchg
les
xchg
inc
jp
xchg
add
inc
outs
or
imul
imul
inc
imul
inc
jp
xchg
data16
outs
add
mov
jg
mov
add
ficom
imul
xchg
inc
outs
mov
add
jbe
add
cli
xchg
test
xchg
inc
imul
add
sub
inc
jp
xchg
add
push
xchg
add
sbb
les
xchg
retf
imul
test
xchg
les
xchg
add
mov
xchg
inc
jp
xchg
add
xchg
add
stos
xchg
add
scas
xchg
inc
imul
popf
add
pop
cdq
inc
imul
lahf
add
xchg
add
into
popf
add
jb
inc
outs
mov
inc
jp
call
bound
les
call
push
fwait
inc
jp
mov
sbb
inc
imul
jp
pushf
add
mov
inc
outs
mov
inc
imul
test
cwde
inc
arpl
fwait
inc
imul
cdq
les
cdq
inc
imul
inc
jp
cwde
les
cdq
les
cdq
test
mov
les
cwde
inc
imul
add
jbe
add
jp
inc
push
loop
inc
imul
inc
jp
pushf
add
cs
test
cwde
inc
jp
mov
ficomp
add
(bad)
pushf
add
retf
imul
cdq
les
mov
pushf
add
loop
add
es
scas
cwde
inc
imul
inc
jp
fwait
add
ficomp
jp
mov
dec
cwde
inc
push
xor
test
cwde
les
mov
out
test
cdq
inc
jp
mov
imul
pushf
add
call
imul
cdq
inc
imul
les
mov
popf
inc
jp
cwde
les
fwait
inc
jp
fwait
add
and
inc
jp
mov
cs
les
mov
mov
mov
mov
inc
imul
mov
mov
inc
imul
fwait
test
call
out
inc
jp
fwait
inc
jp
mov
xchg
cdq
les
popf
test
popf
add
push
cwde
add
add
imul
xchg
add
test
outs
dec
jg
mov
mov
xchg
add
adc
test
pop
jle
lea
add
test
cwde
inc
dec
call
mov
test
cdq
inc
jp
sahf
les
cwde
add
cwd
test
cwde
test
cwde
add
push
call
sbb
inc
outs
add
add
mov
inc
jp
sahf
inc
ins
ss
jle
test
lahf
add
es
out
cwde
add
xchg
call
call
imul
call
mov
add
mov
add
jp
test
cwde
les
call
stos
lahf
inc
jp
cwde
add
adc
inc
jp
mov
sahf
fwait
inc
push
(bad)
mov
mov
add
mov
test
fwait
inc
jp
cwde
add
dec
inc
imul
inc
jp
cdq
les
cdq
test
cdq
test
fwait
inc
jp
fwait
add
sahf
sahf
add
add
inc
jns
cdq
add
push
mov
jb
add
ss
inc
imul
fwait
inc
imul
add
sub
inc
jle
fwait
inc
jp
cdq
test
sahf
add
sahf
sahf
add
inc
mov
cdq
add
dec
fwait
inc
jp
call
mov
add
jp
test
mov
and
inc
jp
sahf
add
cs
inc
outs
rcr
test
cdq
test
mov
mov
(bad)
xchg
inc
jp
xchg
test
sahf
inc
jp
mov
jns
mov
inc
test
lahf
test
sahf
inc
jp
sahf
add
xchg
fwait
inc
outs
xchg
call
fimul
inc
push
or
inc
outs
xor
test
sahf
inc
outs
mov
lahf
add
out
add
jmp
outs
adc
inc
imul
fwait
add
sbb
imul
add
dec
popf
inc
outs
mov
test
xchg
inc
jp
lahf
add
lea
popfw
inc
jp
cwde
add
scas
cdq
test
pushf
add
push
pushf
add
pop
pushf
inc
jp
sahf
add
add
inc
jl
xchg
add
dec
lea
mov
les
mov
mov
pushf
inc
outs
sub
outs
xchg
cdq
add
xchg
lea
pop
cdq
inc
jp
pushf
add
xchg
les
cdq
test
pushf
add
mov
add
cmp
les
nop
les
cwde
test
pushf
add
out
pushf
inc
jp
lea
ficomp
add
sbb
retf
imul
test
pushf
add
jp
add
mov
lea
es
inc
outs
jmp
imul
les
lahf
inc
imul
inc
jp
lahf
test
mov
jb
inc
imul
popf
add
ds
les
mov
out
inc
outs
sub
outs
adc
add
pop
mov
push
popf
les
mov
ins
push
cdq
add
dec
mov
push
pushf
inc
imul
add
mov
lahf
les
popf
add
data16
push
add
cs
inc
outs
rcr
outs
sbb
add
ret
imul
test
jbe
add
mov
cwde
add
bound
les
mov
ror
outs
call
imul
inc
imul
sahf
les
lahf
add
cmp
imul
cwde
add
sub
push
push
sahf
inc
imul
jp
call
(bad)
fwait
inc
jp
pushf
add
push
fwait
inc
jp
fwait
add
jbe
add
cli
pushf
test
sahf
inc
jp
call
jmp
outs
push
call
sbb
inc
jp
lahf
les
fwait
inc
jp
popf
les
sahf
add
xor
inc
jp
pushf
add
ds
inc
outs
and
imul
pushf
inc
outs
xchg
sahf
inc
jp
test
call
data16
retf
imul
pushf
les
fwait
inc
jp
pop
loop
inc
outs
out
test
sahf
inc
jp
pushf
add
push
fwait
inc
outs
(bad)
pop
ficomp
les
pop
push
fwait
add
repnz
pushf
add
cli
pop
jle
test
sahf
inc
imul
les
sahf
test
mov
inc
jp
sahf
add
pop
pushf
inc
imul
inc
imul
inc
jp
call
jb
test
lahf
inc
jp
fwait
add
mov
pushf
test
popf
test
mov
fwait
add
push
mov
push
lahf
test
call
inc
fwait
add
(bad)
call
dec
mov
xor
test
fwait
add
mov
pushf
les
sahf
inc
imul
inc
imul
outs
push
popf
inc
imul
lahf
inc
imul
xchg
inc
jp
mov
retf
imul
test
sahf
les
mov
inc
jns
fwait
add
cmps
fwait
inc
imul
sahf
inc
jp
popf
test
lahf
inc
imul
inc
imul
inc
jp
call
xor
inc
outs
mov
sahf
inc
jp
popf
add
lea
scas
xchg
les
test
outs
xchg
test
pop
stos
les
add
inc
outs
retf
jo
mov
test
imul
xchg
inc
outs
loop
les
add
test
xchg
add
adc
test
add
add
les
add
add
xchg
test
add
xchg
les
test
add
add
test
test
call
imul
les
call
dec
movs
test
add
test
add
les
test
stos
test
adc
les
xchg
add
push
add
add
test
add
test
imul
les
xchg
inc
outs
cmps
add
test
(bad)
add
add
inc
add
push
add
imul
test
jp
inc
jp
test
imul
add
inc
jp
nop
add
push
test
imul
nop
test
add
test
nop
les
add
add
cli
xchg
test
cwde
les
mov
jno
add
push
cwde
test
mov
pusha
call
push
test
xchg
add
push
test
test
jp
test
mov
test
test
rcl
add
pop
test
add
les
add
add
xor
les
lea
add
add
test
test
nop
add
xchg
add
add
add
mov
inc
jp
xchg
les
xchg
add
xchg
test
add
inc
jp
xchg
add
add
out
add
cmps
add
push
xchg
les
add
xchg
xchg
les
add
add
xchg
imul
fwait
add
mov
xchg
add
and
inc
jp
add
add
inc
jp
add
xchg
sahf
xchg
xchg
xchg
test
add
test
add
outs
jle
add
bound
les
fwait
les
pop
xchg
(bad)
xchg
add
sbb
add
add
outs
retf
outs
into
add
xchg
add
mov
add
xchg
add
stos
add
out
xchg
push
add
pop
add
xchg
xchg
add
dec
add
dec
xchg
jb
add
jbe
les
xchg
xchg
les
add
cmps
add
out
add
push
fld
pop
nop
inc
jp
xchg
retf
dec
push
add
les
mov
les
nop
add
and
test
add
xchg
add
add
inc
jp
add
xchg
xchg
add
into
xchg
mov
inc
imul
add
add
add
inc
jp
add
xchg
mov
test
add
add
test
xchg
les
mov
add
xchg
add
cli
add
out
les
add
test
test
add
add
push
xchg
add
mov
add
xor
inc
outs
jp
les
test
test
imul
add
push
xchg
add
sbb
add
add
inc
ja
xchg
add
test
push
test
imul
les
test
xchg
(bad)
test
xchg
ret
outs
xchg
les
test
mov
les
xchg
inc
imul
add
xchg
xchg
test
xchg
les
add
xchg
mov
inc
imul
inc
jp
xchg
add
mov
test
stos
add
test
push
movs
les
test
add
add
test
xchg
add
dec
test
outs
xor
add
mov
add
add
data16
xchg
shr
add
pop
xchg
inc
jp
test
test
mov
outs
mov
inc
imul
inc
outs
mov
xchg
les
mov
add
(bad)
test
fiadd
inc
jp
xchg
push
add
test
xchg
xchg
add
jbe
test
add
imul
imul
xchg
inc
imul
test
sahf
test
xchg
xchg
mov
jp
xchg
les
test
add
test
test
imul
test
(bad)
test
outs
ficom
les
xchg
test
xchg
xchg
xacquire
jbe
inc
outs
cli
test
mov
xchg
mov
les
add
sbb
outs
add
inc
imul
les
add
add
xchg
xchg
and
add
sub
inc
jp
test
push
add
test
xchg
xchg
inc
jp
xchg
add
mov
add
mov
test
xchg
test
push
xchg
outs
mov
add
cdq
les
add
add
xchg
test
xchg
les
test
jbe
inc
jp
xchg
add
jle
add
and
push
xchg
scas
xchg
add
xchg
add
add
test
test
test
or
add
mov
add
add
add
jle
add
and
les
mov
jb
test
push
add
add
add
inc
xchg
add
retf
imul
jp
test
xchg
jp
inc
jns
test
and
add
sub
inc
jp
xchg
xchg
xchg
test
test
bound
inc
outs
ret
imul
xchg
add
add
cli
test
test
loop
inc
outs
cmps
xchg
add
xchg
xchg
test
ficom
push
push
xchg
test
xchg
test
test
xchg
add
xchg
les
cwde
les
test
mov
cdq
add
(bad)
lea
pop
mov
cdq
inc
imul
outs
inc
mov
push
cdq
les
stos
inc
imul
add
jle
inc
jp
mov
imul
inc
jp
cdq
add
adc
test
add
mov
or
inc
jp
cdq
add
mov
mov
bound
imul
inc
imul
les
mov
call
js
mov
xchg
test
mov
repnz
cdq
les
mov
and
add
push
test
les
mov
(bad)
cdq
add
fimul
add
or
imul
mov
lea
ss
inc
jne
test
mov
imul
add
push
inc
jp
mov
adc
add
sbb
test
mov
push
mov
mov
push
cwde
test
mov
mov
inc
outs
mov
cwde
add
mov
mov
push
inc
imul
add
inc
imul
push
mov
(bad)
mov
or
test
mov
cli
xchg
test
mov
arpl
mov
imul
mov
out
mov
push
xchg
les
test
mov
mov
(bad)
mov
mov
add
inc
imul
jne
test
mov
and
jp
cwde
add
out
lea
ror
add
fcmovb
test
mov
popa
or
jl
mov
cwde
test
mov
test
push
loop
inc
jp
mov
sub
les
mov
fwait
test
mov
pop
mov
mov
dec
pop
dec
mov
repnz
fwait
inc
jns
mov
mov
out
inc
imul
test
mov
fwait
test
pop
pop
mov
or
jp
fwait
add
push
mov
pop
mov
jp
inc
jns
mov
out
add
push
inc
jp
pop
push
mov
(bad)
mov
mov
outs
pop
mov
lea
mov
mov
into
mov
outs
jb
inc
imul
inc
popa
mov
pop
cmps
mov
outs
pop
(bad)
fwait
add
call
outs
or
outs
mov
les
mov
pop
(bad)
fwait
test
mov
pop
mov
outs
pop
ror
add
pop
pop
push
pop
cdq
add
(bad)
xchg
add
retf
xor
add
jb
inc
imul
add
jle
inc
jp
pop
imul
mov
call
sbb
add
ret
push
mov
pop
xor
les
mov
jle
add
and
add
sub
inc
jp
mov
(bad)
mov
mov
outs
fimul
les
cdq
test
mov
mov
jb
inc
imul
add
mov
call
out
inc
jp
mov
imul
mov
mov
fimul
add
xchg
les
pop
mov
test
call
mov
mov
push
mov
mov
popf
inc
imul
imul
add
add
add
retf
push
test
les
xchg
les
test
push
dec
les
mov
mov
scas
mov
mov
xchg
mov
call
push
push
mov
push
mov
mov
repnz
cli
mov
mov
outs
bound
inc
outs
stos
mov
scas
lea
mov
fimul
outs
add
jp
mov
mov
mov
mov
add
jp
add
mov
mov
jmp
imul
test
xchg
and
(bad)
les
pop
or
imul
xchg
(bad)
popf
add
and
les
mov
popf
test
mov
push
mov
pop
pushf
test
pop
push
lea
retf
imul
mov
jp
inc
imul
inc
jns
mov
out
les
mov
pushf
inc
jns
mov
push
mov
push
mov
lahf
add
mov
outs
push
mov
outs
repnz
add
cli
pop
mov
mov
pop
mov
mov
ror
imul
imul
pushf
test
pop
mov
mov
jbe
add
mov
pushf
add
bound
inc
imul
inc
jp
pushf
inc
imul
pushf
test
mov
sub
retf
imul
mov
imul
pushf
add
and
les
mov
adc
add
sbb
add
ret
jnp
xchg
mov
xor
les
xchg
lea
cmps
aam
jb
(bad)
les
xchg
lea
call
jp
lahf
les
lea
push
mov
jb
add
mov
mov
mov
bound
test
mov
adc
add
call
imul
mov
mov
xor
add
mov
mov
outs
loop
les
mov
mov
mov
push
mov
push
mov
outs
inc
mov
push
mov
or
outs
jb
add
mov
inc
outs
jp
les
pop
and
imul
lea
push
mov
push
pop
ret
imul
sahf
add
dec
mov
pop
jp
test
mov
bound
outs
push
inc
imul
mov
(bad)
lahf
les
add
mov
pop
dec
sahf
test
pop
mov
mov
imul
lea
and
inc
jp
mov
mov
outs
shr
outs
fimul
inc
jp
mov
inc
lea
dec
lahf
les
test
popf
add
jp
inc
jp
lea
cmps
sahf
add
jmp
outs
xchg
mov
call
jp
sahf
les
pop
outs
retf
imul
mov
mov
sahf
les
mov
sub
inc
jp
mov
outs
push
mov
imul
mov
push
(bad)
test
les
mov
inc
addr16
add
mov
mov
imul
test
mov
inc
imul
jp
mov
inc
imul
les
mov
push
xchg
add
dec
mov
inc
js
mov
push
mov
test
mov
push
mov
test
mov
outs
adc
add
pop
test
les
add
xchg
inc
imul
mov
imul
mov
add
mov
mov
outs
jmp
imul
imul
mov
jp
mov
imul
les
mov
jp
mov
jp
mov
test
mov
push
cmps
mov
jp
mov
outs
scas
mov
imul
mov
push
sahf
mov
push
mov
outs
push
mov
inc
imul
mov
push
mov
mov
outs
es
outs
stos
mov
imul
add
push
mov
outs
sbb
inc
jp
mov
imul
mov
imul
mov
les
mov
add
cmps
mov
push
outs
mov
inc
imul
inc
jp
mov
imul
mov
outs
(bad)
mov
outs
dec
mov
jp
mov
push
mov
outs
div
inc
jp
mov
push
es
push
scas
sahf
test
mov
popa
xchg
mov
outs
call
imul
les
mov
bound
mov
les
mov
imul
inc
outs
mov
mov
add
scas
mov
imul
mov
push
pop
mov
push
mov
dec
push
mov
les
mov
imul
mov
push
jle
les
mov
imul
mov
outs
cs
imul
inc
jp
mov
jp
mov
push
mov
test
mov
push
jb
les
mov
les
mov
push
mov
jp
mov
les
mov
imul
add
fidiv
inc
imul
outs
push
mov
inc
jns
mov
les
mov
outs
cli
mov
imul
ins
mov
mov
outs
stos
mov
jp
mov
push
xchg
mov
push
mov
dec
fidiv
add
push
mov
push
mov
outs
push
mov
imul
inc
imul
xchg
les
mov
imul
mov
test
mov
push
mov
imul
mov
add
(bad)
mov
push
mov
imul
test
mov
dec
cmp
add
loop
add
cmps
mov
dec
jmp
imul
inc
imul
inc
jp
mov
outs
sahf
mov
jp
mov
test
mov
imul
mov
outs
ss
dec
cmp
test
mov
outs
es
imul
les
mov
test
mov
arpl
mov
push
mov
imul
inc
imul
test
mov
outs
jbe
add
cli
xchg
add
mov
mov
imul
inc
jp
mov
imul
mov
jp
mov
imul
outs
fisub
inc
jp
mov
outs
mov
les
mov
push
mov
imul
imul
inc
jp
mov
outs
stos
mov
outs
out
mov
jp
movs
add
push
xchg
inc
imul
add
add
add
or
test
mov
push
cmp
les
mov
imul
movs
add
out
mov
imul
cmps
test
cmps
les
stos
test
mov
push
mov
inc
imul
add
mov
mov
jbe
mov
outs
cmps
mov
push
outs
mov
test
mov
data16
inc
jp
mov
imul
mov
imul
mov
outs
jp
inc
jp
movs
add
loop
inc
imul
mov
imul
mov
outs
xchg
mov
jp
movs
les
mov
imul
mov
dec
dec
mov
push
mov
test
movs
les
movs
add
jle
inc
outs
and
inc
outs
jmp
imul
movs
add
sbb
add
inc
mov
push
mov
dec
dec
mov
jp
mov
jp
mov
push
mov
jp
mov
imul
imul
mov
push
mov
imul
movs
add
push
mov
outs
add
les
mov
imul
inc
imul
les
add
ds
outs
and
push
mov
dec
outs
mov
jp
mov
imul
add
sahf
movs
test
mov
bound
inc
outs
retf
imul
lods
les
mov
add
mov
mov
push
mov
push
scas
movs
les
mov
les
mov
push
xor
imul
movs
les
mov
imul
inc
imul
movs
inc
jns
mov
imul
push
mov
push
pop
mov
imul
mov
push
dec
mov
push
mov
dec
mov
inc
jp
mov
push
mov
cmps
inc
jns
mov
push
out
mov
jp
mov
imul
add
sahf
cmps
inc
jp
mov
arpl
mov
outs
retf
push
mov
jp
mov
push
cmps
test
mov
test
mov
arpl
mov
jp
mov
outs
outs
mov
jp
cmps
add
xchg
mov
add
push
mov
imul
jp
mov
push
mov
imul
les
test
mov
(bad)
(bad)
mov
push
mov
imul
inc
jp
mov
jp
cmps
add
xchg
mov
push
mov
outs
pop
mov
imul
add
ret
push
mov
imul
mov
push
mov
les
mov
imul
mov
outs
out
inc
imul
mov
jns
mov
imul
mov
push
xchg
add
push
mov
add
cmps
add
cmp
add
bound
les
mov
add
shl
inc
outs
pop
cmps
les
cmps
test
mov
arpl
mov
outs
into
mov
push
movs
les
scas
les
mov
les
mov
outs
es
imul
add
shl
inc
jp
mov
imul
mov
jp
mov
outs
retf
outs
into
mov
imul
inc
jp
mov
data16
mov
outs
mov
mov
cmps
mov
imul
mov
imul
push
mov
push
ret
imul
cmps
test
mov
imul
mov
imul
cmps
add
out
inc
js
mov
push
sar
add
pop
mov
add
ret
dec
inc
mov
inc
imul
test
add
mov
mov
add
out
add
sub
add
adc
test
mov
inc
imul
add
dec
test
add
jb
inc
imul
inc
data16
mov
add
bound
test
test
les
mov
les
mov
inc
outs
inc
mov
add
retf
jp
mov
les
test
mov
test
test
add
sub
test
mov
add
sbb
les
mov
add
retf
push
mov
inc
jp
test
test
mov
add
es
jp
mov
test
mov
les
mov
test
mov
test
mov
add
jb
add
ss
imul
outs
jle
inc
jp
mov
add
stos
mov
les
test
imul
mov
outs
push
mov
les
mov
les
mov
add
jbe
add
cli
mov
add
mov
mov
add
scas
mov
add
push
stos
test
mov
les
mov
add
dec
mov
test
mov
inc
outs
cli
mov
les
mov
inc
jo
mov
les
test
mov
test
mov
inc
imul
test
mov
inc
outs
jbe
les
mov
add
mov
mov
test
mov
inc
data16
mov
les
mov
jnp
mov
test
mov
test
mov
inc
jp
mov
test
mov
test
mov
jns
mov
inc
jp
mov
inc
imul
les
stos
test
mov
inc
outs
xor
les
stos
test
mov
les
mov
test
mov
inc
jp
stos
add
fidivr
inc
imul
test
mov
test
mov
add
jbe
les
mov
test
test
les
stos
les
mov
test
mov
test
mov
add
xchg
inc
imul
test
movs
test
mov
les
mov
inc
imul
les
mov
les
stos
test
mov
bound
stos
add
fidivr
test
mov
les
inc
imul
outs
jbe
test
scas
test
mov
jp
mov
inc
jp
mov
inc
imul
les
stos
test
mov
inc
jp
mov
add
into
mov
push
stos
test
mov
les
mov
test
mov
les
test
test
mov
test
sahf
test
mov
inc
outs
mov
inc
outs
mov
les
call
jle
add
mov
mov
add
cs
inc
outs
(bad)
stos
test
mov
inc
jp
mov
les
mov
add
xor
add
cli
stos
les
mov
les
mov
add
scas
mov
inc
jp
lods
add
sbb
imul
outs
inc
mov
test
mov
test
mov
add
jle
inc
jp
mov
add
stos
scas
test
mov
jp
mov
add
pop
mov
add
inc
lods
add
(bad)
mov
add
into
mov
inc
outs
mov
les
lods
add
(bad)
mov
inc
jp
mov
test
mov
les
mov
jb
mov
inc
imul
inc
jp
lods
les
sahf
inc
imul
lods
add
jp
test
lods
les
mov
test
mov
add
adc
inc
jp
mov
add
add
test
mov
test
mov
test
mov
add
and
outs
jmp
imul
jp
mov
inc
jp
mov
les
mov
add
push
lods
les
mov
inc
jp
mov
add
loop
add
es
les
mov
test
mov
inc
jp
mov
add
xchg
inc
push
repnz
test
mov
inc
outs
and
outs
sub
outs
adc
les
mov
test
mov
les
mov
inc
outs
mov
inc
imul
mov
inc
jp
mov
inc
jp
mov
test
mov
test
mov
les
mov
inc
outs
retf
imul
mov
test
movs
test
mov
inc
imul
add
push
test
movs
inc
popa
sar
push
mov
test
mov
jl
mov
add
mov
add
jbe
test
mov
jl
movs
test
mov
add
jmp
jno
mov
inc
outs
pop
mov
jl
mov
add
inc
scas
inc
imul
mov
test
mov
outs
jle
test
mov
les
mov
jp
mov
add
push
test
les
mov
jnp
mov
add
retf
jp
mov
add
mov
inc
outs
cli
mov
add
bound
test
mov
js
mov
inc
outs
(bad)
mov
add
pop
mov
add
inc
mov
add
into
scas
test
mov
add
mov
mov
add
cmps
mov
inc
imul
xchg
adc
out
bound
cmp
pop
dec
xchg
dec
adc
cmps
and
les
arpl
inc
lea
(bad)
sub
repnz
bound
push
add
(bad)
es
xchg
xor
cdq
cld
jg
inc
iret
test
or
cmp
in
inc
mov
rcr
cmp
(bad)
out
out
sar
outs
push
pop
cmp
fxtract
adc
sub
inc
mov
scas
adc
xor
bound
dec
xor
mov
jnp
xchg
fstp
outs
jp
jnp
xor
aas
jmp
out
push
popf
in
adc
adc
mov
pusha
cmps
adc
or
mov
loope
outs
daa
jb
(bad)
arpl
mov
loope
outs
daa
jb
(bad)
arpl
mov
out
outs
daa
jb
(bad)
arpl
outs
daa
jb
stos
xor
xchg
push
mov
pop
adc
jmp
mov
outs
lods
mov
arpl
sahf
or
jmp
ins
xor
test
mov
jl
adc
fist
popa
jge
push
mov
stc
les
ret
ficom
jno
push
mov
stc
les
(bad)
ficom
inc
xor
mov
stc
les
jmp
push
jno
xor
mov
stc
les
out
push
ja
mov
add
inc
pop
pop
mov
inc
xor
addr16
ins
cmp
(bad)
sbb
hlt
push
mov
jnp
push
adc
jb
in
addr16
ins
cmp
(bad)
sbb
hlt
push
mov
mov
dec
mov
shl
xchg
jnp
shl
sbb
mov
jp
shl
mov
or
in
push
repnz
xlat
es
push
mov
jl
adc
and
das
push
loope
stos
adc
lods
push
mov
pop
ins
shl
cmps
push
daa
data16
xchg
out
ins
xchg
out
test
mov
xor
aam
mov
sub
shl
retf
es
sub
loop
imul
sub
loope
jmp
daa
and
xchg
out
test
push
mov
repz
adc
sti
sub
arpl
xchg
and
lods
adc
sub
mov
shl
push
lods
push
loopne
imul
sahf
sub
mov
es
pop
cmps
cs
and
push
fs
shl
xor
call
aad
(bad)
jmp
add
daa
or
push
mov
adc
adc
push
jecxz
imul
in
adc
ins
push
push
out
stos
push
jecxz
in
(bad)
and
xchg
loopne
outs
aad
add
jmp
push
jmp
and
mov
jg
cmc
rol
xor
jb
xchg
xchg
adc
clc
fldenv
stc
out
mov
clc
inc
in
js
jb
cdq
and
adc
lea
call
in
dec
jb
fcmovne
lea
out
pop
ds
xor
pop
mov
cmp
int3
mov
repz
rol
sub
cmp
jnp
add
stc
ins
repnz
inc
mov
call
mov
enter
iret
mov
inc
arpl
stos
add
jbe
add
sahf
jl
enter
int
inc
cmp
jo
mov
test
add
loopne
inc
xor
jp
lahf
jge
ss
adc
retf
xor
ins
xchg
jle
sub
adc
cmp
cli
cmps
inc
or
daa
xchg
adc
sti
sbb
or
movs
(bad)
sti
inc
mov
add
add
inc
jb
mov
repnz
mov
or
hlt
inc
jb
sti
cdq
jb
mov
data16
cmp
mov
xchg
movs
jmp
push
test
cdq
push
push
dec
ds
ins
out
xchg
mov
or
xor
call
mov
xchg
movs
ds
inc
push
(bad)
shr
ins
xchg
mov
mov
out
inc
push
jbe
cli
cdq
push
dec
jp
test
push
mov
ret
xchg
movs
inc
jp
inc
lds
les
dec
addr16
jb
mov
dec
jb
mov
inc
das
bound
(bad)
mov
outs
mov
shl
sbb
aas
push
mov
cmp
in
xchg
movs
mov
inc
int
arpl
inc
cmp
mov
sbb
or
stos
mov
ja
rol
jg
(bad)
jp
inc
sbb
test
dec
mov
jne
xor
cmp
xor
cmp
cli
and
xchg
ror
dec
or
inc
stos
jmp
or
adc
daa
mov
pop
xor
pop
push
or
dec
jmp
std
xor
cs
inc
pop
daa
lea
jge
jb
pop
pop
dec
or
jnp
rol
lea
inc
or
xor
xchg
pop
jge
jb
sub
xchg
fs
adc
inc
mov
jle
push
xchg
xor
mov
pop
sahf
and
push
mov
or
pop
jp
push
fnstsw
xor
test
and
repnz
cmp
and
dec
adc
inc
retf
shl
jecxz
inc
and
inc
xchg
jno
std
fwait
adc
xor
fistp
ret
in
std
xor
test
jle
stos
(bad)
stc
mov
mov
pushf
int3
jno
lea
cmp
inc
and
mov
les
pop
shr
xchg
mov
stos
loopne
fs
add
mov
bnd
add
jmp
test
leave
inc
xor
(bad)
cld
aas
xchg
inc
sbb
int3
imul
jnp
fistp
pop
lahf
add
addr16
add
inc
pop
dec
lock
xchg
add
mov
or
sub
inc
lahf
test
add
es
pop
cmp
test
imul
dec
js
inc
pop
ins
mov
inc
pop
jmp
adc
pop
lods
xchg
push
sbb
sbb
call
inc
fucomip
add
pop
mov
mov
sbb
add
cmp
fisubr
cld
xchg
mov
xchg
ins
sub
clc
adc
pop
mov
pop
or
add
xchg
pop
js
ret
(bad)
pop
adc
mov
retf
sub
(bad)
call
ret
fldcw
sub
pop
mov
push
sbb
imul
inc
fucomi
or
or
xor
retf
sub
rcr
cs
jmp
scas
or
adc
pop
cmp
xchg
sub
sbb
les
test
or
call
rcr
mov
aam
push
test
jmp
(bad)
sbb
out
xlat
shr
test
lods
inc
inc
fsubr
fiadd
push
imul
inc
fucomi
pop
enter
pop
mov
outs
leave
pop
in
arpl
jmp
rcr
out
push
sbb
rcl
mov
fcmovb
fldcw
(bad)
fisubr
aam
sub
test
jmp
(bad)
sbb
ja
aad
repz
stos
cld
adc
test
inc
pop
jmp
gs
imul
sbb
push
pop
lods
fild
lahf
sub
rcr
inc
pop
js
rcr
push
pop
lods
mov
clc
repz
lahf
test
adc
sbb
inc
pop
in
les
movs
rcr
cmp
imul
lds
lods
xchg
(bad)
pop
sub
lahf
push
fld
inc
sbb
lds
push
add
sub
xchg
jnp
pop
cwde
sub
mov
hlt
xchg
sub
inc
cwde
call
ins
inc
fld
push
push
push
jmp
sahf
mov
ret
add
pop
lods
sbb
(bad)
pop
sub
inc
cmp
inc
sbb
jmp
push
mov
push
mov
pushf
inc
or
add
mov
mov
fld
push
sahf
sub
std
xchg
pop
sub
cmps
pop
pop
js
or
imul
or
jmp
push
iret
fisubr
iret
fucomi
or
sbb
mov
or
jg
call
pop
pop
ins
and
sbb
cmp
sbb
mov
sbb
imul
mov
jmp
mov
push
dec
pop
in
mov
mov
jno
sbb
into
pop
out
mov
or
bound
sub
fld
or
push
ret
sahf
jmp
cdq
iret
sbb
inc
pop
jmp
mov
xchg
sbb
sahf
enter
retf
mov
sbb
dec
sbb
mov
dec
pop
in
leave
pop
cmp
dec
fsubr
xchg
retf
rcr
push
push
pop
pop
jmp
or
push
mov
fsubr
mov
mov
stos
ret
or
movs
leave
pop
and
pop
stos
mov
mov
ins
inc
add
out
fisttp
push
sub
enter
dec
fsubr
dec
mov
jmp
fistp
imul
leave
call
pop
pop
ins
cs
sbb
ds
sbb
ret
in
push
pop
sbb
setg
inc
sbb
jmp
push
retf
dec
dec
pop
sub
push
fdivr
test
sbb
mov
sbb
jle
dec
mov
inc
js
cmp
mov
loopne
pop
sbb
or
dec
lods
dec
(bad)
dec
stos
iret
or
test
dec
pop
js
mov
mov
jecxz
pop
cmp
lea
stos
pop
xchg
imul
dec
lods
pop
mov
mov
push
(bad)
dec
mov
ret
sub
enter
or
icebp
retf
cmps
dec
fsubr
stos
or
in
outs
iret
sbb
cmps
or
lods
out
sbb
cli
enter
dec
cwde
in
push
enter
sbb
pop
mov
push
inc
lahf
imul
pop
mov
dec
retf
fimul
sbb
mov
fisubr
aas
fcomp
lods
data16
test
sub
fsubr
inc
int3
fwait
jmp
mov
out
fmul
fisubr
ret
mov
dec
pop
fld
mov
retf
jmp
mov
js
int3
pop
lods
and
sbb
mov
sub
lods
outs
mov
lods
push
retf
fsubr
retf
dec
dec
cwde
in
fimul
sbb
(bad)
fldl2t
sbb
sbb
(bad)
fcomp
stos
and
in
cmps
int3
pop
in
cmp
adc
sti
or
clc
mov
pop
jmp
sub
dec
pop
imul
pop
sub
add
imul
dec
stos
lea
pop
in
mov
pop
clc
push
sbb
std
fcomp
imul
pop
in
cli
ret
out
cwde
(bad)
nop
int3
fisubr
mov
into
int3
cdq
in
add
pop
jmp
or
jmp
dec
or
stos
jae
fsubr
aas
retf
pop
clc
jg
pop
js
dec
pop
jmp
cmp
push
imul
enter
cdq
pop
in
retf
jmp
int3
sbb
inc
retf
pop
clc
push
retf
push
dec
call
cdq
pop
jmp
dec
sbb
jp
sbb
dec
pop
jmp
fucomi
outs
(bad)
lods
xchg
pop
(bad)
jmp
dec
sbb
fstp
sub
mov
add
retf
pop
clc
inc
add
pop
clc
jae
pop
clc
dec
pop
cmp
leave
pop
clc
cmps
sbb
jmp
inc
sbb
sbb
(bad)
int
jmp
mov
out
dec
enter
pop
fsubr
fimul
sub
rcr
retf
jmp
inc
sbb
loope
sbb
or
test
mov
call
aad
cdq
imul
pop
stos
pop
int3
pop
clc
inc
push
pop
clc
call
sub
push
pop
sub
js
dec
in
jg
fild
cmps
(bad)
fisubr
ins
or
es
int
cmp
pop
lods
mov
fldlg2
pop
push
pop
jmp
or
jmp
dec
ficomp
jmp
mov
pop
mov
sub
jmp
and
sbb
mov
or
jmp
push
or
sbb
dec
into
sbb
push
dec
fsubr
xchg
cwde
jmp
sahf
sbb
mov
cmp
(bad)
or
out
dec
lods
call
int
test
xchg
(bad)
dec
in
xchg
dec
lahf
cmp
sahf
sub
dec
sbb
inc
cwde
ins
retf
ins
icebp
retf
ja
dec
lods
clc
lea
js
dec
sbb
(bad)
call
lea
inc
call
(bad)
pop
test
inc
mov
push
int3
fisubr
mov
push
stos
data16
jmp
test
lahf
pop
stos
in
fisubr
mov
js
(bad)
cwde
stos
push
addps
or
jmp
or
add
pop
pop
sub
cwde
jmp
mov
test
jp
or
mov
mov
clc
sub
pop
in
xchg
mov
sbb
sub
int3
cwde
and
call
addps
or
jmp
pop
ins
cmp
loopne
ret
sbb
in
sbb
out
fdivrp
push
(bad)
pop
sub
pop
sbb
sub
addps
inc
mov
mov
pop
clc
mov
pop
js
dec
pop
jmp
mov
retf
movs
or
pop
clc
out
lahf
sbb
push
pop
pop
mov
sbb
add
fldcw
sahf
dec
pop
jmp
xor
sbb
dec
fild
pop
in
loopne
pop
stos
arpl
pop
jmp
maxps
mov
jmp
pop
pushf
sbb
mov
mov
or
pop
lods
and
sti
cmps
leave
sbb
jns
pop
jmp
mov
jmp
jne
pop
jmp
mov
dec
fld
lea
sbb
push
in
rcr
pop
scas
pop
mov
sub
lea
cmp
sub
dec
pop
jmp
mov
(bad)
mov
xchg
mov
stos
adc
pop
mov
push
int3
pop
jmp
into
pop
cmp
int
sti
test
fisubr
loop
sahf
imul
pop
in
sti
fcomp
xchg
dec
pop
test
sahf
int3
fisubr
dec
xchg
in
dec
dec
fdivr
mov
fldpi
mov
pop
jmp
dec
pop
jmp
leave
pop
lods
and
pop
push
int3
sbb
mov
stos
nop
mov
(bad)
int3
sbb
fcmovne
pop
test
add
in
or
fild
enter
pop
sbb
cs
jmp
in
fisubr
push
fldcw
int3
(bad)
pop
leave
pop
test
pop
push
sbb
ror
dec
jns
cdq
dec
sti
iret
addps
sbb
call
or
pop
jmp
out
dec
sbb
mov
add
mov
iret
std
xchg
add
adc
pop
(bad)
ins
cwde
lahf
add
mov
test
cmp
sbb
loope
cwde
imul
pop
ins
jmp
stos
push
repnz
bound
inc
jae
jmp
dec
mov
lods
or
pop
in
jb
fisubr
call
test
daa
mov
pop
in
outs
jo
jo
jae
lods
adc
fldcw
mov
jmp
mov
test
mov
sub
repnz
sti
es
jns
out
sti
cmp
js
bound
jmp
and
jmp
pop
jmp
shl
sbb
mov
dec
(bad)
push
cli
mov
(bad)
ins
fdivr
pop
lock
dec
stos
ss
stos
cli
mov
js
mov
jmp
jno
jmp
lock
repnz
outs
mov
sub
jno
jmp
or
fsubr
call
imul
jo
imul
jae
jmp
loope
sub
cmp
mov
mov
test
jmp
fld
shl
imul
jae
jmp
xor
lods
xchg
add
dec
xor
movs
(bad)
xor
xor
fisubr
xor
jmp
cwde
and
pop
js
aaa
pop
sub
test
mov
or
pop
mov
fld
inc
and
jmp
jno
jmp
mov
jmp
gs
sub
clc
lock
data16
sub
xor
lods
out
test
mov
pop
lock
clc
fdiv
dec
in
xor
cwde
sub
repz
and
stos
jg
dec
clc
mov
jecxz
jp
jmp
lock
inc
lock
inc
lock
lock
jmp
lock
lock
jmp
lock
inc
lock
inc
lock
inc
lock
jmp
lock
lock
inc
lock
inc
lock
stos
push
lock
mov
clc
stos
mov
clc
xchg
repz
stos
aam
dec
mov
pushf
mov
stos
push
jno
jmp
dec
jo
gs
jno
ins
cmp
dec
mov
test
mov
sub
movs
mov
sub
sbb
cmps
xor
stos
push
pusha
adc
xchg
cmp
jmp
pop
sub
inc
and
dec
xor
or
mov
test
jae
jmp
cmp
push
stos
and
pop
cmp
jae
lods
ins
mov
(bad)
icebp
fisubr
pop
cmp
fisubr
xchg
fld
pavgw
icebp
xor
jmp
cwde
jmp
pop
lods
cli
jo
in
jle
pop
jmp
(bad)
xor
pop
clc
push
repz
mov
or
fsubr
iret
loopne
test
ja
or
mov
cmp
sti
in
sbb
stos
jb
imul
or
push
mov
clc
lahf
repnz
stos
push
jno
in
push
jne
jmp
(bad)
mov
loope
test
js
jmp
mov
jmp
push
cld
cmp
mov
pop
mov
adc
push
in
ret
mov
pop
jmp
inc
lock
inc
inc
lock
jmp
inc
lock
lock
add
jp
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
in
inc
lock
lock
inc
lock
lock
jmp
inc
lock
mov
add
cmps
jmp
inc
lock
jmp
inc
lock
inc
lock
jmp
inc
lock
jmp
inc
lock
inc
lock
inc
lock
mov
add
loop
inc
lock
inc
lock
jmp
inc
lock
inc
lock
inc
lock
out
inc
lock
inc
lock
inc
inc
lock
out
inc
lock
out
inc
lock
cdq
imul
add
cs
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
dec
out
inc
lock
out
inc
lock
out
inc
lock
out
inc
lock
out
inc
lock
mov
add
push
inc
lock
out
inc
lock
out
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
lock
inc
lock
lock
add
xchg
out
inc
lock
out
inc
lock
out
inc
lock
out
inc
lock
inc
lock
out
inc
lock
inc
lock
lock
out
inc
lock
lock
lock
stos
fsubrp
inc
lock
inc
lock
out
inc
lock
lock
inc
lock
inc
lock
out
inc
lock
inc
lock
inc
lock
inc
lock
out
inc
lock
add
push
out
inc
lock
inc
lock
out
inc
lock
inc
lock
inc
lock
out
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
out
inc
lock
mov
add
pop
out
inc
lock
out
inc
lock
out
inc
lock
out
inc
lock
inc
lock
jmp
lock
out
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
add
xchg
inc
lock
lock
out
inc
lock
out
inc
lock
inc
lock
out
inc
lock
out
inc
lock
scas
inc
lock
inc
lock
pop
lock
add
ret
lock
out
inc
lock
inc
lock
inc
lock
inc
lock
jmp
lock
lock
inc
lock
inc
lock
out
inc
lock
out
inc
lock
add
push
in
inc
lock
inc
lock
in
inc
lock
inc
lock
in
inc
lock
jmp
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
add
dec
in
inc
lock
in
inc
lock
in
inc
lock
in
inc
lock
in
inc
lock
call
inc
lock
in
inc
lock
inc
lock
in
inc
lock
in
inc
lock
inc
lock
pop
lock
lock
jbe
inc
lock
inc
lock
inc
lock
lock
inc
lock
lock
in
inc
lock
in
inc
lock
in
inc
lock
in
inc
lock
mov
add
mov
inc
lock
inc
lock
lock
in
inc
lock
lock
call
inc
lock
inc
lock
inc
lock
in
inc
lock
lock
test
lock
in
inc
lock
inc
lock
inc
lock
inc
lock
in
inc
lock
lock
in
inc
lock
inc
lock
in
inc
lock
inc
lock
in
inc
lock
inc
lock
jge
lock
add
cmp
inc
lock
inc
lock
inc
lock
inc
lock
in
inc
lock
inc
lock
in
inc
lock
in
inc
lock
in
inc
lock
in
inc
lock
lods
inc
lock
in
inc
lock
lock
add
in
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
out
inc
lock
inc
lock
lock
inc
lock
lock
in
inc
lock
jge
lock
add
mov
in
inc
lock
in
inc
lock
inc
lock
inc
lock
lock
in
inc
lock
lock
in
inc
lock
inc
lock
inc
lock
jge
lock
test
jmp
lock
inc
lock
inc
lock
in
inc
lock
in
inc
lock
inc
lock
inc
lock
inc
lock
loop
lock
inc
lock
loop
lock
inc
lock
mov
lock
inc
stos
push
loop
lock
inc
lock
lock
inc
lock
lock
inc
lock
loop
lock
lock
loop
lock
dec
inc
lock
loop
lock
loop
lock
mov
lock
add
push
loop
lock
inc
lock
loop
lock
inc
lock
lock
clc
fisub
js
and
pop
mov
adc
fsubr
push
mov
xchg
in
int
pop
movs
or
lods
mov
jmp
xor
sbb
mov
pop
imul
jns
cmp
fisubr
shr
pop
and
fnstcw
dec
lods
inc
stc
sahf
sub
aas
pop
imul
push
sub
jp
aas
jmp
mov
pop
stos
in
or
jmp
fild
sar
dec
mov
call
sub
stos
cdq
sub
mov
dec
lods
inc
lock
jae
fisub
mov
stc
pop
mov
xor
cmp
sub
stos
adc
stos
dec
movs
push
mov
pop
in
add
in
(bad)
mov
sbb
es
retf
out
mov
dec
stos
daa
cmp
and
dec
ins
mov
mov
cwde
in
xchg
imul
pop
cmp
jmp
dec
movs
dec
cmp
iret
mov
fnstenv
repz
sbb
bnd
imul
std
cdq
and
stc
mov
test
(bad)
inc
mov
sti
xchg
jp
imul
test
(bad)
jle
sub
mov
dec
cmp
mov
xchg
test
cmp
fisubr
loop
sbb
and
stos
stos
cli
sbb
push
jge
sub
mov
dec
mov
dec
lock
in
push
jmp
jmp
cmp
mov
push
(bad)
repnz
push
jecxz
call
pop
test
and
test
cmp
jns
cmp
clc
sbb
(bad)
pop
js
push
sbb
inc
test
push
test
movs
inc
mov
pop
push
xor
retf
movs
ds
dec
sub
jl
jmp
sti
out
call
mov
cdq
in
push
mov
(bad)
jmp
jmp
jecxz
cmp
lods
(bad)
mov
pop
clc
cli
cmp
jb
dec
ins
cli
jge
mov
popa
sti
or
test
mov
outs
mov
fldpi
adc
mov
fdivr
mov
push
xor
sti
mov
stos
cmp
cmp
call
sbb
mov
in
dec
cmp
sbb
sub
fsubr
in
sub
push
cmp
pop
js
jnp
sub
mov
mov
inc
jns
jmp
fsub
xor
cli
dec
in
sub
pop
cmp
cmp
(bad)
sti
pop
js
jnp
sub
push
mov
fwait
mov
cwde
jmp
mov
adc
jg
stos
(bad)
cli
or
mov
push
mov
jnp
xchg
lods
cmps
cmp
jmp
dec
movs
addr16
fsubr
mov
jmp
bound
jp
jmp
sbb
or
sti
loop
dec
cld
idiv
mov
cmp
mov
jmp
or
cli
hlt
sbb
in
mov
fnstenv
mov
call
push
mov
jmp
mov
dec
lods
fisubr
pop
cmp
mov
cwde
movs
sti
test
pop
js
arpl
test
(bad)
mov
mov
xchg
mov
into
scas
dec
in
retf
cld
cmp
cwde
sub
mov
dec
stos
mov
jg
imul
mov
popa
mov
fnstenv
mov
call
nop
jge
test
outs
pminsw
push
mov
ret
cli
dec
lods
test
lahf
in
cmp
push
mov
mov
or
mov
push
jae
sub
mov
jge
jnp
mov
fsubr
adc
cdq
sub
gs
sub
retf
xor
cmp
sub
(bad)
fisubr
dec
loopne
scas
or
outs
mov
pop
sub
cld
pop
js
jl
sub
mov
mov
pop
mov
sbb
jg
ins
xchg
dec
clc
mov
fsub
out
or
jl
and
mov
in
and
(bad)
jmp
in
or
outs
cmp
mov
lea
sbb
pop
dec
add
in
or
shr
lea
mov
mov
jge
sub
pop
cmp
xchg
sub
aas
sbb
sub
scas
dec
movs
sbb
mov
fdiv
inc
out
pop
stos
xchg
mov
jmp
pop
outs
mov
and
or
ss
mov
cmp
mov
sub
or
cmp
imul
in
dec
test
sahf
mov
pop
stos
xchg
lods
mov
scas
push
mov
cmps
mov
pop
clc
cli
ds
push
scas
xor
test
cmp
mov
fwait
hlt
or
fldcw
sbb
xchg
call
mov
js
ds
jnp
jp
lods
icebp
mov
dec
clc
mov
mov
retf
sub
std
pop
imul
jg
sub
sub
push
shl
jmp
cmp
stos
or
or
aaa
mov
pop
clc
mov
sub
jmp
ins
push
mov
test
mov
jae
mov
fisubr
mov
pop
in
test
pop
mov
mov
cld
sbb
cmp
out
ja
call
jne
push
mov
in
mov
adc
clc
inc
movs
xchg
mov
mov
call
cwde
std
cmp
stos
retf
ins
bound
pop
imul
jns
sub
call
sbb
jmp
sbb
add
push
mov
pop
mov
cmp
mov
push
mov
sar
mov
ins
scas
out
dec
in
imul
mov
jmp
push
sub
xor
adc
or
pop
aas
fbld
mov
pop
mov
(bad)
cs
pop
out
mov
aaa
stc
lahf
lods
xor
xchg
imul
iret
test
js
test
sub
fdivrp
cli
icebp
pop
in
gs
pop
mov
sar
jmp
xchg
mov
cld
cmp
dec
jl
movs
je
or
cmp
dec
sub
repnz
jmp
sub
sahf
stos
in
cld
dec
cmp
clc
dec
cmp
scas
adc
outs
shr
dec
jns
lods
int
pop
push
cmc
jg
sub
sub
push
cld
movs
mov
mov
push
mov
push
in
sbb
lods
popf
cld
or
jg
imul
fwait
stos
push
or
fneni(8087
es
sahf
jmp
pop
sub
or
mov
stc
in
dec
mov
add
fsubr
push
jmp
adc
mov
dec
in
imul
push
jb
mov
fisubr
jbe
pop
js
pusha
cwde
sub
scas
push
mov
cmp
sar
mov
fsubrp
sbb
fisubr
pusha
sbb
jo
jae
jb
cmp
mov
test
pop
imul
(bad)
daa
test
fbstp
cmps
pop
sub
xor
cdq
mov
fild
xchg
repnz
sbb
cwde
loope
xor
stos
data16
pop
sti
stc
mov
pop
cmp
mov
dec
jmp
out
pusha
lods
out
movs
fsubp
dec
cmp
loope
mov
xchg
bound
ret
out
stos
ret
icebp
mov
ret
pusha
sbb
fbstp
cmps
pop
sub
mov
lods
mov
arpl
loope
psubsw
cmps
pop
sub
mov
lods
xchg
and
jmp
retf
sti
test
mov
xchg
test
(bad)
mov
retf
in
mov
fisub
mov
pop
mov
cmps
pusha
fwait
mov
bound
push
mov
shl
scas
sbb
fsub
cwde
call
dec
cmps
pop
clc
inc
out
clc
pop
scas
pop
sti
jo
xlat
sub
mov
sbb
jp
retf
sub
cmps
pop
mov
mov
jae
mov
inc
out
push
jmp
dec
scas
pop
sti
shl
sti
adc
and
cmps
fisub
repnz
js
popa
cwde
sub
jae
mov
sub
es
test
fdiv
xchg
jmp
pop
stc
push
lods
(bad)
jae
stos
mov
or
dec
jecxz
mov
je
mov
cli
repz
mov
xor
jmp
ds
frndint
push
loope
imul
sbb
push
and
into
in
pop
jmp
sar
movs
fucomi
mov
dec
test
jmp
imul
sbb
ins
and
cli
in
pop
jmp
pop
clc
aad
dec
sub
push
mov
xchg
sub
push
loopne
ins
retf
imul
mov
fisubr
inc
lods
outs
and
xor
retf
test
and
mov
or
js
jecxz
lods
mov
cmp
arpl
ss
imul
clc
cmp
fdivp
je
dec
ins
arpl
call
shl
fdivr
cmp
pushf
loope
in
loope
jecxz
arpl
jmp
repnz
pop
lods
cmc
lock
imul
cwde
imul
jmp
mov
(bad)
jmp
jnp
jecxz
stos
sbb
shl
fsubr
adc
repnz
in
loop
and
mov
imul
sar
sbb
fisubr
aaa
and
sub
pop
jmp
test
loopne
mov
pop
sub
push
and
imul
jmp
sub
cmp
shr
add
push
out
lods
push
xor
int
push
and
loope
lods
movs
mov
clc
aaa
popa
cwde
jo
fs
sub
or
cmp
in
jle
psubsb
lods
push
cmp
and
imul
call
lods
pop
jmp
pop
cmp
mov
aaa
in
stos
out
xor
cmp
cwde
movs
out
sbb
mov
dec
clc
mov
movs
sbb
mov
clc
call
stos
(bad)
mov
mov
sahf
imul
mov
jns
mov
mov
mov
clc
xor
lock
cwde
imul
cmps
and
sub
push
lods
sbb
cwde
cmps
pop
stos
push
mov
out
sbb
adc
test
mov
push
cmps
(bad)
out
push
out
imul
sub
arpl
or
push
and
test
movs
fwait
stos
fnstenv
sub
mov
fucomip
mov
cmps
sbb
mov
out
stos
xor
inc
sub
and
mov
fucomip
or
xchg
loop
mov
sbb
fwait
stos
shl
ins
adc
dec
and
cwde
jmp
fsubr
cmp
ret
mov
movs
pop
mov
test
(bad)
lahf
in
or
aad
pop
push
loop
stos
push
in
sub
movs
pop
and
sbb
sbb
pop
jmp
mov
jae
mov
mov
in
jbe
ins
jns
sahf
movs
arpl
sub
jmp
pop
stos
shl
imul
test
sbb
and
add
lods
fldenv
add
xor
pop
test
and
sbb
imul
mov
xchg
daa
fsubr
sbb
dec
jno
(bad)
xchg
repnz
mov
inc
hlt
retf
and
and
loope
fs
outs
push
sti
stos
scas
pop
sti
jle
fld
cmc
cmps
cdq
ins
sub
pop
ins
in
movs
sbb
inc
daa
pop
imul
shr
(bad)
fsubr
xchg
leave
movs
sub
jae
mov
ja
mov
jmp
jmp
outs
fs
cmp
out
test
(bad)
cwde
imul
jmp
movs
pop
sub
pop
mov
dec
jl
daa
pop
js
jecxz
lods
mov
sbb
mov
lods
cmp
in
sub
scas
cmps
shr
loop
repnz
dec
ins
xlat
sbb
popf
aaa
sbb
test
stos
xchg
dec
lods
mov
pop
and
in
mov
xor
mov
scas
push
and
(bad)
pop
sti
out
cmps
pop
sub
mov
pop
mov
call
jmp
xchg
lock
dec
xor
push
movs
pop
ins
loop
pop
in
jae
shr
xor
test
loop
lods
jmp
mov
fs
inc
jg
arpl
push
bound
sbb
push
lods
fldpi
inc
cmps
pop
sub
(bad)
or
or
in
lods
fs
clc
mov
addr16
mov
cld
scas
sbb
cmps
fisubr
loope
mov
shl
jmp
and
or
popf
call
mov
sahf
sub
psubsw
xor
cld
(bad)
mov
xchg
imul
call
je
mov
pop
in
mov
sbb
pop
stos
add
xchg
in
mov
push
test
and
sti
mov
fisubr
jo
push
clc
sub
dec
mov
movs
add
sub
fdivp
clc
ss
ins
xchg
loope
push
cmps
sbb
pop
mov
fdivr
sbb
jae
loope
bound
lods
fldpi
mov
pop
sub
sub
or
cmp
lahf
gs
mov
pop
cmp
in
lods
xor
(bad)
xchg
mov
sbb
fisubr
ret
mov
iret
in
ins
retf
and
mov
xor
or
mov
adc
mov
mov
outs
and
xor
fistp
xchg
in
push
and
sbb
add
cmps
sbb
into
mov
fdivr
lods
jle
jae
loope
bound
cmps
sbb
repnz
fucomi
movs
fs
call
jle
push
sti
and
sub
pop
imul
push
mov
pop
mov
and
cdq
imul
or
outs
pop
movs
loop
sbb
stc
retf
stos
and
and
mov
and
repnz
dec
ins
popf
out
push
push
test
fsubr
aad
cmp
test
fisubr
and
sub
push
mov
push
sub
jmp
lahf
imul
iret
mov
loop
cld
leave
push
dec
clc
mov
push
stos
rep
mov
jnp
dec
test
cmps
stc
or
and
jmp
xchg
sub
imul
add
out
fidivr
or
fdivr
test
add
das
(bad)
jge
sbb
sub
stos
pop
ins
jle
pop
jmp
test
sub
dec
clc
or
popf
call
fsubr
stos
shr
sub
std
jne
push
in
ds
bound
stos
and
jmp
dec
in
adc
sahf
jnp
imul
sub
jo
test
sub
push
jmp
cwde
sub
stos
sbb
cmp
test
out
jae
and
std
std
mov
mov
outs
call
retf
in
jmp
movs
cdq
sub
sub
sub
jae
jnp
ds
sub
mov
scas
dec
xor
and
std
loope
push
in
mov
imul
ins
lds
lahf
imul
or
shl
dec
bound
sar
outs
fdiv
mov
dec
test
sti
stos
sub
push
jmp
out
out
pop
jmp
fwait
sub
cwde
jnp
sub
mov
into
jb
jecxz
cld
(bad)
stos
pop
js
mov
shr
mov
sti
or
sub
or
stos
fwait
mov
scas
lods
call
test
(bad)
dec
mov
dec
mov
call
sti
mov
sbb
imul
sti
sub
cli
or
cmp
sti
std
(bad)
std
mov
push
jae
ds
in
pop
sub
fidivr
push
sub
pop
stos
dec
stos
fdivr
adc
lods
(bad)
push
adc
js
ins
sahf
sub
sub
jmp
inc
movs
adc
pop
in
mov
push
jnp
cmp
push
mov
fidivr
sahf
jl
imul
cmp
in
or
mov
sti
or
jae
sub
in
pop
jmp
lahf
sub
pop
sub
sub
sub
popf
xor
stos
or
call
ja
sbb
jmp
mov
stos
das
stos
fcomi
mov
sbb
scas
stos
sbb
out
lods
sbb
aam
call
sub
jmp
inc
movs
fdivr
or
(bad)
in
sahf
movs
cli
sub
sbb
imul
push
scas
mov
fbstp
in
in
pop
sub
scas
pop
and
push
shr
sub
sub
in
mov
ret
clc
mov
sub
jmp
inc
movs
arpl
pop
jmp
mov
push
jae
aas
dec
in
adc
cmp
stos
sbb
inc
mov
fdivr
sar
pop
cmp
fld
in
pop
cmp
loop
cmp
and
jns
stos
xchg
cs
ins
pop
imul
mov
pop
call
adc
push
mov
dec
outs
pop
test
xor
mov
sub
shl
fldenv
mov
push
jae
cmp
fwait
sub
jnp
lods
sbb
iret
mov
fdivr
sub
xor
fwait
in
clc
in
mov
loopne
mov
cmp
(bad)
xchg
dec
call
mov
lahf
imul
inc
test
mov
pop
in
repnz
pop
sub
mov
stos
pop
stos
mov
out
cdq
stos
lods
dec
imul
lods
add
enter
pop
cmp
pop
js
cld
mov
push
lods
pop
js
mov
sbb
stc
lods
pop
sub
ins
pop
lods
sub
pop
mov
scas
std
shr
ins
lods
sbb
adc
retf
in
push
call
and
mov
push
es
out
sbb
cmc
sbb
pop
ins
cwde
cmp
fwait
in
mov
fwait
stos
mov
je
stos
js
sbb
das
fwait
in
test
mov
adc
or
pop
jmp
(bad)
xchg
pop
mov
aad
push
test
aaa
out
dec
lods
mov
ins
pop
movs
and
stos
jbe
call
lods
call
jp
js
arpl
test
push
jae
cmp
add
lahf
mov
int
push
push
das
sbb
je
sub
mov
sbb
in
pop
cmp
sbb
imul
lods
cdq
je
movs
inc
sti
(bad)
shr
or
push
cmps
sbb
dec
jmp
stos
dec
stos
sbb
mov
sbb
and
mov
push
cmp
sub
mov
mov
ins
lahf
in
out
call
ins
sahf
jmp
retf
call
xchg
clc
(bad)
daa
cmp
jl
and
xor
mov
jb
push
popa
xor
loope
and
and
mov
cmps
and
add
dec
out
push
jae
cmp
pop
sub
sub
outs
pop
lods
cdq
lods
fwait
ins
adc
sbb
fld
mov
pop
sub
mov
ja
test
call
pop
cmp
xchg
in
shr
pop
sub
out
pop
js
outs
cwde
sub
mov
dec
std
(bad)
imul
mov
dec
in
ins
pop
in
push
inc
js
shl
mov
cmps
adc
sahf
ja
cmps
or
push
std
mov
xlat
movs
or
push
loope
pusha
iret
loopne
jbe
mov
mov
out
push
jae
push
sahf
cmp
cdq
ins
stos
in
pop
in
xchg
imul
push
mov
enter
dec
mov
ret
loope
mov
ds
adc
ja
movs
jb
adc
std
adc
mov
stc
(bad)
inc
cmp
test
(bad)
mov
add
adc
in
mov
sbb
shl
aaa
push
movs
jnp
push
in
jge
in
push
mov
ss
sti
lock
(bad)
std
mov
iret
mov
inc
loopne
jae
jbe
pusha
pop
clc
dec
mov
xchg
cmp
stc
into
jb
js
jnp
sti
push
jnp
test
mov
xor
test
stos
xchg
out
fisubr
outs
sbb
(bad)
outs
pop
mov
sbb
sbb
in
sahf
sub
mov
bound
pop
sub
scas
outs
sbb
stos
in
pop
cmp
test
sahf
in
xchg
rcr
lods
int3
inc
(bad)
mov
cld
push
adc
test
dec
shr
adc
call
mov
pop
sub
sar
push
fidiv
loop
cwde
sub
sbb
stos
add
sub
or
test
nop
sbb
cdq
push
pop
sub
mov
cmp
sbb
adc
jae
xchg
fldenv
adc
jmp
sbb
and
stos
jb
bsf
xchg
pop
cmp
(bad)
or
ficom
pop
js
ror
push
add
push
cmovno
sub
rcr
push
cli
xchg
sar
pop
fcomi
daa
fistp
call
scas
xlat
pop
jmp
call
adc
jmp
pop
dec
mov
dec
ror
test
ror
jne
dec
sub
sub
iret
mov
call
hlt
fistp
jae
sbb
jmp
sbb
pop
jae
push
sbb
dec
adc
cmp
add
in
dec
ins
repz
mov
jge
pop
sub
adc
cmp
(bad)
(bad)
(bad)
cld
xchg
xchg
sbb
pop
fsubrp
dec
inc
adc
pop
(bad)
cdq
imul
pop
js
fwait
sbb
nop
pop
sub
repz
lods
outs
(bad)
retf
jb
rcr
push
push
or
push
pop
sti
in
rcr
sub
leave
cdq
stos
xchg
push
dec
in
dec
push
sahf
cmp
rcr
lods
retf
test
pop
pop
jae
adc
test
cmp
sbb
call
cmp
fwait
sub
dec
xchg
jae
fwait
pop
cld
push
fistp
out
fcomp
sbb
rcr
sub
add
jecxz
xchg
std
mov
or
test
rcr
jmp
or
mov
xchg
pop
sub
ficom
(bad)
jmp
mov
mov
mov
fisubr
xlat
jmp
xchg
pop
ins
sub
in
ds
enter
dec
js
push
pop
cmp
add
xchg
adc
fidivr
adc
push
ret
sub
sub
nop
cdq
jmp
adc
ins
not
stos
mov
xchg
sub
rcr
repnz
rcr
js
sbb
call
or
sbb
xchg
pop
sub
xchg
sbb
jecxz
xchg
call
push
pop
clc
mov
push
lods
mov
sbb
cmp
lods
out
push
pop
clc
mov
fwait
sbb
outs
adc
stos
inc
cwde
sbb
push
xchg
pop
sub
mov
pop
jecxz
add
mov
sbb
push
pop
lods
icebp
adc
mov
adc
call
and
pop
mov
outs
adc
lods
cs
pop
stos
pop
rcr
push
push
cwde
sub
nop
sbb
ror
in
test
inc
lods
inc
push
fcomip
xor
push
lods
xor
adc
clc
mov
dec
mov
sub
dec
cmp
pop
mov
xchg
fisttp
(bad)
fcmovne
and
cld
jl
pushf
cdq
mov
push
push
dec
in
test
xchg
fwait
ins
loopne
fisubr
test
nop
sub
xchg
or
sar
pop
sub
adc
adc
jmp
fwait
sub
dec
sub
jmp
fisubr
or
rol
mov
push
fstp
jmp
add
push
pop
ins
push
sbb
jae
inc
push
js
fimul
mov
pop
cmp
ror
xor
clc
sti
inc
push
cmp
xchg
fwait
imul
fwait
call
inc
xchg
sbb
add
sub
neg
xchg
test
mov
(bad)
popf
test
xor
sbb
push
lea
inc
dec
mov
jne
sar
(bad)
leave
aad
sub
adc
aaa
(bad)
sbb
add
sub
icebp
mov
lods
push
sbb
push
add
add
(bad)
ror
dec
pushf
or
lahf
(bad)
or
out
into
mov
loop
fcomi
cmp
adc
mov
mov
mov
push
push
sbb
adc
test
aad
sub
xchg
fdivr
sbb
fld
sahf
inc
or
addr16
dec
jle
inc
or
out
add
jae
aad
sub
push
mov
inc
dec
(bad)
js
into
cld
inc
add
add
mov
rcr
pop
inc
xlat
scas
add
mov
leave
aam
sub
test
xchg
fidiv
pop
pop
jmp
fucomi
loope
pop
sub
das
aam
test
xchg
fwait
imul
sbb
int
stos
or
dec
clc
adc
psubq
int
mov
daa
add
and
psubq
or
push
std
loope
sbb
cmp
or
inc
xchg
or
aam
lods
sbb
pop
pop
sti
push
xchg
pop
lods
adc
sbb
inc
adc
mov
dec
shl
pop
adc
adc
xor
fwait
stos
xlat
adc
add
lea
stos
sahf
aad
stos
adc
pop
in
add
pop
in
or
xlat
sbb
ss
fdivr
loopne
sbb
inc
push
jmp
push
int
mov
dec
mov
mov
add
into
(bad)
mov
xchg
fisubr
push
mov
xchg
into
ret
mov
xchg
pop
and
xchg
pop
sub
std
xchg
pop
sub
pop
imul
sub
adc
ins
mov
add
xlat
pushf
pop
test
(bad)
stos
inc
xchg
fisubr
push
mov
jmp
fcom
jmp
push
jmp
add
jecxz
sbb
(bad)
adc
sub
lods
adc
jae
push
pop
stos
inc
nop
sbb
push
cwde
call
adc
xchg
fnstenv
cmp
inc
test
bound
fucomi
sub
test
dec
dec
shl
fst
fidiv
adc
jnp
xchg
cwde
in
pop
xchg
pop
ins
push
mov
mov
pop
pop
jmp
lahf
stos
cmp
in
sub
sub
push
xchg
sub
iret
ret
mov
xchg
pop
mov
(bad)
adc
xor
fsincos
or
sbb
xchg
fdivr
push
nop
xlat
mov
movs
xchg
sbb
nop
pop
lods
movs
push
fwait
sub
xchg
fnstenv
ficom
imul
ins
fst
push
adc
add
(bad)
adc
lods
xor
and
sbb
ins
mov
adc
add
es
fisubr
or
sbb
fist
fst
shl
into
xchg
add
dec
xchg
fnstenv
repnz
sbb
pop
stos
sbb
and
sub
xchg
fdivr
mov
jae
push
cwde
and
call
xchg
sbb
push
fld
mov
cwde
and
test
jmp
ss
es
mov
out
test
lods
xchg
pop
js
sbb
pop
inc
sub
pop
cwde
jmp
dec
mov
lock
pop
in
retf
out
(bad)
iret
dec
clc
mov
push
jnp
add
mov
sub
fucomi
rcr
fwait
stos
pop
pop
or
cdq
sub
add
mov
pop
xchg
stos
retf
imul
sub
cmc
pop
enter
sub
(bad)
xor
ficomp
cmps
cdq
pop
and
pop
fild
cdq
fdivr
or
fptan
xchg
pop
adc
pop
push
jae
cdq
fwait
ins
pop
ficomp
push
jmp
ins
jb
cdq
sub
sbb
es
pop
out
bound
cwde
sub
or
push
inc
sub
fcomp
jmp
inc
pop
mov
push
add
mov
cdq
nop
stos
mov
sub
clc
pop
or
mov
inc
shl
sub
fidiv
sbb
lods
lds
cwde
push
fstp
cwde
adc
cdq
inc
pop
lods
add
enter
sahf
sub
adc
mov
sbb
mov
add
mov
push
(bad)
jb
pop
fisubr
ror
stos
add
fidiv
nop
pop
lods
mov
sahf
test
inc
fwait
lods
jg
sbb
stos
cmps
pop
mov
icebp
adc
lods
nop
push
shl
ficomp
cdq
sub
pop
sub
dec
cdq
sar
fistp
repnz
pop
mov
jle
pop
sub
arpl
(bad)
mov
dec
push
stos
xchg
fimul
call
push
dec
iret
jb
sbb
ret
call
or
pop
mov
repz
add
cmp
fsubr
or
imul
cdq
bound
add
pop
mov
popf
or
imul
pop
xchg
stos
dec
inc
add
dec
pop
cwde
sub
pop
enter
add
mov
fwait
pop
ins
mov
sbb
jmp
sbb
leave
add
sbb
repnz
pop
lods
inc
popf
call
sbb
add
call
fist
lods
in
push
jae
fistp
lods
stos
fdivr
xor
add
cwde
pop
and
ficomp
fstp
sub
sbb
in
push
retf
fdivr
retf
sub
lahf
stos
jbe
fdivr
jp
sahf
cmp
pushf
fucomp
test
cmp
sbb
pop
lods
mov
push
jae
fcmovu
jnp
cwde
cwde
in
dec
fwait
pop
ins
pop
add
fcmovu
jb
pop
cwde
sub
lahf
in
cwde
sbb
fwait
pop
sub
lods
ficomp
mov
fcom
loopne
cdq
fisubr
pop
pop
sub
pop
fcomp
jnp
inc
add
pushf
pop
mov
pop
push
lods
inc
inc
inc
and
mov
push
push
pusha
inc
add
popf
fldenv
sbb
jmp
add
sbb
mov
sbb
test
rcr
xchg
fwait
sub
fcomp
sub
inc
add
rcl
loopne
sbb
push
inc
pop
lods
bound
fisubr
ret
shl
xchg
sbb
mov
test
push
jae
pop
dec
in
xchg
sbb
test
sbb
jmp
mov
stc
pop
cwde
sub
pop
dec
ins
out
inc
add
mov
pop
adc
jmp
add
rcr
test
inc
add
ret
fcmovu
test
mov
sbb
or
mov
sub
jge
sbb
add
test
das
sbb
jmp
add
pop
sahf
cwde
in
les
xchg
sahf
sbb
fwait
pop
sub
dec
inc
add
test
push
jae
pop
lahf
loopne
fwait
add
ds
jb
call
cmp
or
or
jae
sbb
mov
sbb
sub
inc
sbb
test
pop
mov
push
call
in
sahf
lods
out
cdq
sub
sub
mov
lahf
sbb
(bad)
fwait
popf
jnp
inc
add
sbb
mov
(bad)
pop
call
sbb
test
sbb
sbb
in
add
fwait
pop
mov
jmp
fcomp
imul
fisttp
fisttp
and
add
sbb
or
fdivp
jno
pop
and
mov
pop
cwde
ins
and
sub
(bad)
outs
jno
add
pushf
or
arpl
sub
add
fwait
call
into
pushf
fdivr
sub
sbb
pop
lea
retf
push
dec
js
or
cld
jae
inc
ds
sbb
ficomp
push
pop
enter
shr
shl
ror
aad
popf
imul
fucomi
cli
lahf
pop
in
fstp
outs
cmp
sub
inc
shr
adc
fcom
imul
xor
fnstcw
pop
pop
(bad)
dec
pop
pop
ins
rcr
add
feni(8087
(bad)
(bad)
push
test
cmc
popf
sbb
and
push
jae
sahf
fisubr
pushf
fldcw
test
stos
xchg
fstp
stos
(bad)
popf
(bad)
ficomp
fwait
sub
fistp
xchg
pop
test
dec
or
stos
mov
sub
jmp
mov
mov
dec
push
and
dec
(bad)
jmp
dec
bsf
pop
pop
cmp
or
jmp
pop
pop
lods
popf
push
pop
test
sbb
inc
and
ficomp
jge
cwde
and
lahf
pop
sub
xlat
push
out
leave
(bad)
push
test
push
enter
leave
dec
cmp
pop
pop
stos
inc
pop
pop
cmp
add
xor
dec
(bad)
stos
jbe
mov
enter
fcomp
mov
cmc
push
sbb
push
lahf
pop
sub
int
push
imul
add
pop
cwde
and
fmul
mov
mov
dec
jecxz
xchg
sbb
lahf
pop
imul
enter
pop
mov
jmp
sub
enter
sub
inc
(bad)
sbb
sub
inc
fwait
lods
mov
fisubr
lahf
call
pop
fbstp
pop
pop
jmp
mov
pop
mov
lods
pop
mov
push
inc
add
fwait
aad
in
ficomp
fcomip
push
push
pop
imul
adc
sbb
inc
shr
pop
cwde
sub
sahf
fdivr
push
sar
fstp
test
push
lahf
stos
inc
push
sbb
pop
fwait
test
sbb
or
sahf
sub
mov
movs
stos
xchg
(bad)
jle
fldcw
data16
pop
sub
sub
adc
xlat
sbb
sub
lahf
pop
cs
sbb
sub
push
mov
lea
pop
neg
sub
retf
mov
mov
fstp
loope
pushf
sbb
ficomp
imul
adc
ficomp
fild
push
sahf
push
pusha
pop
xchg
pop
in
push
sahf
pop
sub
mov
cwde
and
(bad)
sbb
call
cmps
dec
fld
sbb
cmp
or
test
sbb
or
(bad)
sahf
lods
add
pop
in
or
retf
lods
or
fucomip
ss
stos
jns
cwde
imul
clc
mov
sbb
out
sbb
sbb
add
mov
jae
add
scas
inc
push
pop
mov
enter
dec
ror
jo
shl
and
jae
push
pop
movs
mov
rcr
inc
cwde
and
push
pop
js
inc
sbb
xchg
add
mov
dec
inc
pop
jmp
retf
dec
or
adc
jae
inc
pop
gs
lahf
ins
jae
dec
clc
clc
ret
dec
in
mov
(bad)
or
cmps
sbb
jle
cwde
jmp
push
dec
lods
int3
nop/reserved
add
fwait
ret
or
add
in
xchg
stos
into
(bad)
or
or
sbb
xor
dec
cmp
xchg
adc
adc
arpl
dec
lods
movs
ret
dec
in
imul
sub
fsubr
push
xchg
call
pop
pop
add
sbb
dec
inc
lahf
in
int
or
sbb
cmps
mov
sub
popa
ret
mov
ror
xchg
bound
ret
fiadd
pop
js
inc
lahf
sub
xchg
dec
clc
add
dec
in
dec
inc
pop
call
jb
pop
js
ret
cdq
sub
inc
or
daa
ret
cwde
cmp
dec
stos
imul
fwait
call
push
(bad)
pop
lods
xchg
push
push
mov
add
fucomip
dec
sbb
or
test
stos
mov
pop
fild
sbb
mov
rcr
jmp
pop
push
sub
inc
mov
add
push
xchg
jmp
inc
(bad)
mov
dec
(bad)
call
sbb
jle
call
xchg
in
cs
cwde
sub
adc
in
push
rcr
add
sbb
lods
rol
out
inc
inc
fsubr
fadd
sbb
into
ret
xor
dec
lods
stos
or
sti
std
add
daa
sbb
test
rcr
ins
ret
fild
ror
rcr
stos
sahf
test
imul
fucomip
dec
adc
test
test
jb
pop
mov
jns
sahf
imul
jmp
test
jmp
ins
push
pop
lods
scas
sbb
adc
sbb
push
ror
sub
mov
jae
add
js
inc
cwde
and
sbb
ret
push
stos
sub
add
outs
mov
mov
sbb
clc
xchg
inc
pop
mov
lahf
inc
fucomip
fild
pop
js
inc
cwde
sub
rcr
add
lods
and
pop
sti
ss
mov
cwde
cmp
mov
mov
xchg
inc
sub
out
nop
fld
push
rcr
adc
imul
pop
inc
ins
rol
jmp
sbb
mov
in
repnz
test
jmp
rcr
add
loopne
cdq
sub
sbb
rcr
xchg
sbb
leave
fsubr
sahf
ret
or
inc
xchg
xchg
imul
dec
in
dec
add
retf
in
jne
sbb
(bad)
fldlg2
outs
test
jmp
retw
scas
adc
jmp
xchg
test
lods
aam
pop
cmp
(bad)
dec
js
test
adc
in
iret
rcr
mov
dec
stos
jb
call
test
lods
mov
add
jmp
pop
jmp
or
or
add
xchg
jmp
pop
cmp
xchg
nop
jns
ror
jg
call
mov
in
sbb
sbb
stos
add
jmp
pop
push
pop
stos
pop
(bad)
sbb
ret
jmp
xchg
pop
shl
xor
test
sub
fild
(bad)
mov
outs
inc
fld
xchg
inc
or
pop
sbb
(bad)
dec
clc
dec
(bad)
dec
clc
push
(bad)
dec
clc
push
(bad)
dec
clc
fiadd
pop
sub
in
pushf
call
test
xor
fisubr
add
cmp
dec
sbb
stos
lds
xchg
sbb
xchg
(bad)
mov
(bad)
dec
clc
into
inc
pop
clc
ret
jnp
inc
cwde
sub
test
cmp
fwait
daa
sti
(bad)
(bad)
clc
inc
sbb
(bad)
fidivr
inc
cwde
sub
cdq
lods
sahf
sbb
fadd
fld
xchg
inc
pop
clc
mov
fidivr
inc
cwde
sub
add
mov
mov
cdq
mov
jecxz
sub
fiadd
neg
inc
lock
inc
lock
fild
add
inc
lock
fild
sbb
inc
lock
fild
adc
inc
lock
fild
sub
inc
lock
and
inc
lock
cmp
inc
lock
xor
inc
lock
dec
fild
dec
fild
inc
fild
inc
fild
pop
fild
pop
fild
push
fild
push
fild
push
inc
lock
fild
(bad)
fild
data16
jp
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
inc
lock
lock
lock
inc
sbb
(bad)
lea
sub
inc
lahf
jecxz
add
fucomip
jns
or
xchg
pusha
(bad)
retf
test
scas
xchg
sbb
outs
add
cmp
(bad)
sbb
pop
inc
pop
mov
les
enter
pop
cmp
add
lods
cmps
(bad)
pop
sti
jg
fwait
in
mov
mov
jbe
call
inc
pop
jmp
xchg
ror
ror
add
fsubr
inc
sbb
dec
add
pop
mov
js
dec
in
std
inc
fwait
jmp
addr16
lds
push
(bad)
lahf
sub
inc
pop
in
xchg
pop
in
sbb
push
push
adc
jmp
iret
pop
shr
clts
fld
inc
sbb
inc
sbb
mov
les
sub
pop
pop
sub
push
mov
xchg
sbb
xchg
in
fwait
adc
jmp
mov
jmp
adc
adc
test
jmp
inc
push
sub
pop
pop
sub
xchg
mov
mov
and
rcr
fiadd
adc
inc
pop
outs
mov
sbb
jo
pop
stos
mov
sbb
jmp
(bad)
int
mov
pop
or
mov
fadd
lods
xchg
sbb
inc
inc
sbb
or
sbb
cmc
inc
lahf
sub
les
mov
push
fucomi
jp
or
cmp
xchg
shr
push
inc
pop
sub
dec
xchg
jmp
inc
cwde
in
lds
fld
or
push
add
sbb
aad
sub
push
pop
lods
mov
sbb
adc
or
adc
dec
lods
sbb
sahf
sub
sbb
push
lea
mov
push
mov
pop
jmp
out
(bad)
or
jmp
cmp
push
mov
xchg
inc
fsubr
push
into
pop
jmp
mov
sbb
adc
fsubr
retf
aad
stos
sahf
add
ins
jne
fldcw
xchg
sub
add
sbb
sbb
clc
aam
pop
mov
sbb
pop
in
rcr
adc
add
or
dec
pop
cmp
dec
dec
sub
retf
cwde
arpl
or
(bad)
cdq
jecxz
fmul
es
leave
mov
xchg
leave
dec
clc
sbb
cs
or
inc
sbb
call
or
pop
sub
dec
sbb
bound
sbb
jle
sbb
retf
or
ficomp
call
stos
into
cdq
mov
inc
(bad)
cdq
stc
push
or
jmp
rol
cmp
inc
jo
push
jl
sahf
push
or
push
jl
retf
iret
mov
or
ins
mov
cmp
rol
mov
lea
add
retf
lock
nop
ret
lock
int
mov
rol
jo
mov
lods
push
rol
or
popa
mov
mov
loope
call
repz
jp
inc
mov
xchg
arpl
jno
add
test
adc
rcr
lock
int3
add
cmp
xor
push
xor
repnz
shl
and
ret
loop
je
xchg
inc
mov
bswap
sub
push
stc
adc
pop
adc
data16
lea
fs
ficomp
rcl
adc
inc
jne
mov
(bad)
inc
mov
jne
mov
jle
inc
iret
adc
imul
jne
mov
xor
adc
pop
ja
adc
fcom
push
xchg
cmp
sub
xchg
dec
lock
xlat
jns
test
mov
sub
shl
xchg
dec
lock
jb
shufps
lock
popa
xor
xchg
arpl
xchg
push
add
stos
dec
pop
lock
adc
mov
xor
rol
aas
(bad)
xchg
xor
or
or
inc
xor
lock
fidiv
push
sbb
nop
ret
mov
push
pop
push
sbb
sub
pusha
icebp
retf
loope
rol
aas
pop
pop
shl
adc
lock
xor
add
jnp
jecxz
outs
repnz
nop
loopne
ins
add
loope
adc
and
xor
fwait
jmp
xchg
das
mov
xor
mov
xor
adc
adc
inc
and
loopne
scas
dec
stc
xlat
rol
push
and
loopne
lock
stc
push
push
mov
push
adc
mov
int
mov
ror
rol
aam
push
xor
adc
mov
nop
rol
rcr
xor
inc
xchg
xchg
push
rcr
loopne
mov
stc
test
ret
fs
fld
mov
push
mov
xor
xchg
nop
mov
push
loopne
ror
rol
cs
dec
xor
xchg
(bad)
hlt
push
rol
xlat
rcl
loopne
sbb
cmp
adc
and
jl
sub
adc
pop
sbb
xor
adc
aaa
adc
jnp
arpl
aas
nop
inc
loope
aad
xchg
push
rcr
loopne
rcr
test
push
stc
pop
rol
sahf
mov
lock
ret
arpl
mov
jne
les
add
jbe
ret
mov
jmp
xor
popa
pop
xor
sahf
aaa
add
ss
es
xor
mov
adc
rol
push
jmp
lock
xchg
jae
and
stos
push
inc
out
icebp
mov
in
cmp
inc
repz
jb
sbb
cmp
jbe
xchg
(bad)
aad
add
loop
or
xchg
inc
mov
fcom
loopne
scas
dec
lock
add
and
push
loopne
fcom
loopne
scas
dec
lock
rol
ss
cs
sub
ficom
loopne
leave
inc
mov
(bad)
inc
jo
pushf
xor
xchg
jns
sub
inc
mov
(bad)
(bad)
push
loopne
sbb
xor
push
inc
mov
repnz
lock
jp
mov
jae
push
mov
push
and
cld
sub
adc
mov
inc
push
arpl
sub
mov
daa
xchg
xchg
mov
mov
sub
ret
fs
xchg
or
fcmovnb
add
mov
rol
ret
fs
mov
retf
xor
rcl
loopne
inc
xchg
mov
mov
loopne
mov
data16
cmp
mov
sbb
loopne
cwde
std
lods
jle
mov
xchg
adc
adc
cs
add
pop
rcl
loopne
push
dec
mov
sub
ret
into
aas
adc
out
test
aas
mov
and
add
ss
inc
lock
rcl
loopne
cdq
jge
retf
mov
lods
dec
mov
xor
jo
and
outs
popf
add
jae
add
cmps
or
xlat
ret
mov
jl
inc
mov
pop
jae
push
push
add
es
cmp
inc
mov
add
cmp
adc
mov
test
xor
inc
lock
dec
xor
inc
mov
std
push
add
jb
inc
lock
mov
xlat
inc
jo
sub
(bad)
lock
sub
jno
xchg
jmp
xlat
inc
jae
jbe
xor
out
retf
mov
push
push
xor
mov
rcr
add
mov
lock
mov
push
dec
test
jg
data16
not
or
add
adc
inc
sti
adc
aas
mov
sahf
add
pop
popa
lock
xchg
jae
fs
add
lock
xchg
jne
in
mov
adc
lock
inc
xor
xor
loopne
aam
nop
xchg
enter
leave
test
enter
leave
xchg
stc
das
xchg
nop
or
xor
ret
lock
add
cmp
inc
mov
aam
jo
mov
lods
(bad)
aam
repz
xor
and
icebp
xchg
jae
in
mov
adc
lock
xchg
jne
in
mov
adc
lock
xchg
jge
in
xor
xor
loopne
fs
xor
sbb
pop
cmp
pop
cmp
sbb
xchg
and
les
lock
inc
icebp
xor
mov
xor
xchg
jecxz
out
aam
shl
mov
mov
push
xor
xchg
jecxz
mov
pop
push
xor
xchg
jecxz
mov
fs
xor
sahf
cmp
aaa
cmp
sahf
ss
movs
xor
shl
ins
push
aad
cmp
imul
ret
setno
xchg
push
mov
loopne
aad
adc
jne
loopne
aad
adc
jne
loopne
pop
push
xor
adc
mov
test
in
mov
in
(bad)
sbb
in
xchg
mov
in
pextrw
or
adc
mov
xchg
aas
push
inc
lock
pop
add
push
jb
into
sub
mov
(bad)
inc
xor
inc
lock
ret
arpl
mov
lock
ret
sub
dec
lock
fs
pop
adc
jae
pop
repz
pop
mov
pusha
sbb
sub
mov
sub
das
push
xor
dec
movs
(bad)
lock
mov
mov
aad
jo
mov
dec
lock
mov
sub
dec
inc
cmp
fadd
in
sti
dec
inc
mov
xchg
mov
lock
inc
mov
ret
or
aaa
inc
mov
fimul
loopne
cmp
sub
inc
lock
cs
(bad)
out
add
push
and
loopne
or
mov
mov
xchg
lods
addr16
pop
mov
sub
lock
sub
xor
and
ins
mov
sub
lock
jmp
jbe
jns
mov
or
imul
fwait
out
sub
out
push
cmp
sub
stos
psubb
cmp
push
cmp
sbb
mov
paddsb
cmp
sub
mov
or
mov
mov
adc
add
mov
add
mov
add
push
dec
push
stc
xchg
cmps
push
sbb
push
mov
cdq
cmps
push
sbb
imul
pusha
icebp
push
push
push
loope
cmp
or
pop
ror
jmp
lock
daa
xor
dec
sbb
mov
outs
repnz
stc
loope
adc
aaa
imul
inc
icebp
loop
push
lock
cmps
push
sbb
imul
test
sbb
inc
jmp
icebp
mov
cmp
fs
and
rcr
and
mov
xor
sbb
jnp
sti
and
jo
loopne
inc
(bad)
cmp
and
jge
scas
ins
xor
mov
shl
pop
shl
inc
repz
or
mov
and
idiv
jg
push
sbb
(bad)
mov
jne
or
push
xchg
loope
adc
cmp
les
loope
or
cmp
xor
cmovns
cmp
cmps
add
jae
aam
ltr
inc
retf
(bad)
sub
aad
pop
lock
or
xor
jge
ja
and
into
jbe
into
pushf
dec
pop
nop
xlat
sub
xor
sub
lock
rcl
ss
mov
xor
add
xor
add
push
xor
add
push
cmc
inc
lock
arpl
sub
inc
jmp
inc
adc
out
mov
dec
add
arpl
and
and
lock
xchg
xchg
or
and
push
xor
jecxz
jo
ret
xor
push
xor
jecxz
stos
dec
int3
sar
ror
adc
cmps
rep
mov
out
lods
mov
mov
xchg
jmp
xchg
popa
lock
jae
cwde
ja
xchg
call
adc
sbb
scas
call
adc
sbb
xor
enter
sub
nop
push
je
mov
jns
xchg
jne
ds
xchg
nop
call
xor
sub
div
dec
xor
xor
adc
out
cmp
adc
jmp
mov
sti
jp
xor
sub
mov
jl
or
cmp
push
jmp
adc
push
sub
xor
dec
xor
call
add
out
pop
or
sub
(bad)
movs
packssdw
out
ss
lock
sub
nop
dec
jmp
add
cmps
jbe
dec
jmp
xor
sub
adc
cmps
jns
jp
add
and
lock
(bad)
jl
pop
(bad)
cmp
rol
(bad)
in
xchg
test
lock
push
(bad)
out
loopne
addr16
lods
cmp
and
jmp
loope
or
arpl
adc
inc
call
add
adc
inc
lock
ret
cmp
jo
cmp
fs
mov
push
mov
lods
and
jl
popf
addr16
(bad)
jl
cmps
addr16
adc
jl
test
sub
out
push
mov
in
(bad)
in
jmp
adc
cs
mov
push
xor
scas
add
inc
repz
lock
xchg
and
sub
jmp
adc
ins
pop
jmp
push
add
add
and
ins
add
scas
ins
mov
cs
lock
mov
(bad)
mov
mov
nop
inc
out
shl
das
add
aas
inc
xor
mov
shl
xchg
retf
xchg
cld
mov
scas
sahf
loopne
lods
push
es
jecxz
mov
add
adc
jecxz
jae
ret
add
mov
jecxz
fldcw
ret
add
mov
jecxz
imul
add
sahf
pop
xor
pop
cmp
cdq
pop
cmp
aaa
(bad)
mov
add
dec
shl
jno
cs
mov
lods
push
xor
outs
jecxz
pop
add
stos
push
xor
outs
jecxz
and
mov
jecxz
lahf
cs
add
outs
jecxz
mov
add
fiadd
shr
ret
adc
pop
xor
sahf
cs
loopne
sub
ror
dec
aas
and
div
bnd
xor
das
inc
mov
scas
push
xor
cwde
outs
pusha
lock
push
mov
jbe
loopne
(bad)
lea
ret
aas
ret
and
cmp
xor
and
ins
das
add
into
sahf
add
sbb
jb
loopne
xor
xchg
(bad)
mov
push
loopne
ds
pop
or
loopne
das
inc
push
add
loopne
das
ret
pop
pop
mov
xor
stos
das
add
iret
xor
cmps
das
or
das
adc
in
mov
aad
lods
mov
shl
das
adc
retf
xchg
nop
sahf
outs
push
loopne
loopne
das
(bad)
das
and
aas
adc
inc
lock
das
add
mov
aas
add
daa
jle
sbb
inc
jo
xor
ins
add
jmp
lods
xchg
or
add
pop
push
or
into
mov
arpl
ins
add
sub
mov
ins
mov
(bad)
arpl
jl
jbe
adc
test
cdq
jmp
push
jle
jge
test
mov
jae
sbb
mov
in
mov
jne
pushf
outs
mov
in
mov
jge
sbb
and
loop
adc
popf
push
mov
in
or
add
(bad)
(bad)
add
mov
pop
xchg
in
or
pop
scas
in
and
cmp
jmp
(bad)
lock
pop
xchg
nop
mov
add
std
sub
shr
sub
mov
imul
mov
mov
out
jb
dec
jle
icebp
(bad)
sub
lock
inc
mov
dec
dec
lock
ret
mov
out
mov
pusha
jle
icebp
(bad)
sub
xor
sbb
ss
dec
lock
cmp
xor
add
adc
pop
lock
lock
mov
adc
sub
adc
loop
(bad)
lock
xchg
nop
ds
add
push
sub
pop
xor
ret
mov
iret
aas
adc
or
add
outs
inc
pusha
xor
adc
mov
xor
inc
or
mov
arpl
and
mov
movq
jno
sub
jne
jno
(bad)
jge
mov
sub
push
xchg
sbb
cmp
jb
xor
adc
mov
in
dec
mov
sub
into
jmp
adc
aam
jl
mov
out
jb
inc
jg
icebp
fisubr
pop
xor
ins
ret
mov
inc
inc
adc
sub
push
xor
ins
jecxz
nop
sub
push
xor
ins
jecxz
xchg
ret
shr
adc
mov
js
push
xor
(bad)
mov
pop
xchg
pop
xor
fistp
in
aad
cmp
fstp
sub
mov
pusha
xor
test
out
mov
jo
icebp
dec
and
xor
ret
cwde
pop
loop
lock
adc
xchg
inc
xor
mov
xchg
stos
xor
or
xlat
sub
jecxz
add
ret
rcr
push
xor
jecxz
sbb
add
xchg
pop
xor
pop
cmp
xchg
pop
aaa
dec
aad
mul
add
cmp
jno
and
enter
mov
inc
push
shl
ret
arpl
popa
add
inc
dec
lock
ret
xchg
push
or
lock
xor
fs
add
push
ins
jae
adc
in
adc
hlt
in
adc
in
mov
and
lock
add
cmp
lock
xor
arpl
inc
inc
lock
xor
arpl
inc
dec
lock
xor
sub
push
fiadd
lock
xor
fs
dec
add
jmp
in
in
mov
loopne
hlt
in
call
in
ins
xor
test
and
lock
stos
or
inc
inc
lock
ret
arpl
inc
inc
lock
ret
arpl
add
inc
dec
lock
ret
fs
inc
add
inc
dec
lock
ret
fs
dec
add
mov
lods
repz
mov
mov
dec
in
hlt
in
dec
push
sub
xor
test
mov
loopne
inc
inc
lock
ret
arpl
lods
add
lock
arpl
add
inc
dec
lock
xor
add
jbe
dec
lock
xor
dec
adc
ins
jae
add
mov
sbb
hlt
lods
rcr
lods
sub
and
jno
jae
shl
loop
loope
jne
adc
ror
(bad)
jecxz
lock
jge
adc
or
and
call
mov
loopne
lock
in
inc
inc
jecxz
add
int
dec
and
leave
mov
pusha
push
loopne
mov
jecxz
mul
add
push
movs
push
xor
pusha
jecxz
mov
ret
shr
mov
cmp
jecxz
cmp
add
nop
pop
xor
rcr
xor
xchg
pop
xor
xor
cvttps2pi
ret
arpl
mov
jne
adc
mov
mov
jge
xchg
jp
call
jg
xchg
jge
xchg
loopne
lock
or
add
out
pop
iret
jb
jg
std
inc
lock
pusha
push
loopne
dec
fdiv
into
fcmovb
loopne
fbld
inc
push
jb
jae
nop
push
mov
loopne
lock
jb
jne
adc
jmp
jge
push
push
xor
xchg
xchg
cmp
xor
mov
lahf
cs
sahf
aaa
js
lahf
ss
(bad)
sahf
xor
adc
mov
or
cmp
fdivrp
ret
popf
pop
xchg
nop
push
loope
loopne
and
push
dec
scas
jbe
xor
xor
xor
arpl
inc
inc
lock
ret
arpl
add
inc
dec
lock
ret
fs
mov
jg
push
inc
xor
cmp
test
cmp
xchg
out
xchg
cmp
push
inc
lock
ret
pop
jbe
add
or
xor
loopne
shl
xchg
popa
jecxz
fldenv
ret
inc
cld
lods
push
xor
inc
int3
inc
clc
xor
fs
lea
mov
out
add
in
pop
retf
jae
jno
and
mov
popa
ret
cwde
ret
lock
(bad)
lock
inc
pop
ret
in
xchg
xchg
sar
out
cmc
dec
je
mul
jno
adc
adc
cli
loope
lock
jae
jne
xchg
outs
mov
loope
lock
je
jge
pop
dec
mov
out
lock
je
jg
xchg
push
mov
out
lock
jmp
inc
dec
jmp
jae
mov
jmp
dec
lock
xchg
nop
ds
loopne
jmp
ret
mov
push
and
fnstcw
push
retw
mov
push
inc
xor
push
es
sub
mov
xchg
sub
ret
pop
out
mov
xchg
xchg
loopne
add
(bad)
xor
jbe
add
jnp
jle
jp
jle
jnp
ds
ret
sahf
pushw
loopne
jmp
and
fnstcw
mov
jecxz
pop
es
fsub
jecxz
inc
es
inc
test
push
xor
data16
mov
ret
add
jecxz
movs
add
xchg
pop
xor
push
cmp
cmp
rcr
aaa
sub
mul
mov
scas
and
cmps
jb
pop
fnstcw
retf
pop
aaa
xor
repz
jo
jne
jae
pop
dec
mov
out
lock
mov
out
lock
(bad)
pop
mov
out
lock
jne
jg
push
addr16
out
lock
or
add
int
pop
jecxz
pop
xor
jg
cli
inc
lock
out
pextrw
jne
jae
xchg
inc
xor
mov
xchg
mov
stos
xlat
sub
jecxz
sbb
ret
rcl
push
xor
jecxz
loope
add
xchg
pop
xor
pop
aaa
or
pop
xor
and
mov
push
fdivr
mov
jecxz
js
push
shr
ret
arpl
add
inc
dec
lock
ret
fs
inc
add
inc
dec
lock
aaa
ret
test
sbb
mov
adc
hlt
in
cs
mov
mov
cmps
jb
dec
fdivr
cmp
(bad)
lods
aaa
ret
arpl
inc
inc
lock
xor
arpl
inc
dec
lock
xor
sub
push
fiadd
lock
xor
fs
dec
add
jmp
in
in
mov
jecxz
hlt
in
inc
ins
xor
push
sahf
fstp
mov
(bad)
sbb
ret
arpl
inc
inc
lock
arpl
add
inc
dec
lock
ret
fs
inc
add
inc
dec
lock
fs
dec
add
mov
stos
repz
mov
mov
mov
hlt
in
dec
inc
mov
fdiv
push
fstp
pop
inc
or
stos
add
clc
xor
arpl
add
inc
dec
lock
xor
mov
push
jle
dec
lock
ret
xchg
adc
push
lock
mov
add
hlt
in
push
inc
mov
mov
push
jle
cmp
sub
(bad)
mov
xchg
add
test
ret
arpl
in
add
inc
dec
lock
xor
cmp
push
into
inc
dec
lock
xor
add
fisubr
lock
mov
shr
hlt
in
out
inc
mov
jl
inc
push
mov
cmp
cli
inc
mov
das
icebp
popa
mov
ja
jae
aad
mov
in
lock
jne
adc
mov
jge
adc
mov
in
lock
ja
jg
adc
mov
in
lock
or
add
int
outs
loope
pop
out
ja
dec
clc
inc
lock
(bad)
cld
cmp
ja
jae
adc
xchg
xchg
rol
inc
stos
daa
mov
xchg
outs
test
loopne
stos
xlat
and
imul
je
mov
jae
hlt
ins
push
inc
mov
xor
arpl
call
xchg
xchg
inc
xor
(bad)
and
xchg
xchg
scas
test
loopne
and
xchg
xchg
mov
and
xchg
xchg
mov
xor
or
ret
mov
repnz
data16
test
xchg
nop
adc
loopne
mov
xor
cmp
mov
ffree
mov
xor
jp
mov
push
mov
jecxz
(bad)
cmp
shr
xor
jecxz
push
cmp
cmp
jp
mov
sbb
pop
cmp
lea
lods
int
cmp
xor
ret
mov
and
ret
test
mov
cmp
push
dec
or
mov
jecxz
pop
pop
push
rol
ret
arpl
pop
dec
lock
sub
adc
add
pop
dec
lock
add
adc
jae
jg
rep
add
lods
add
mov
(bad)
(bad)
arpl
xchg
out
lock
xchg
cld
adc
mov
cli
and
imul
mov
cli
mov
jge
dec
push
xor
(bad)
loopne
mov
aaa
nop
mov
fmul
pop
xor
cmp
mov
ffree
mov
xor
jnp
mov
repnz
inc
lock
arpl
js
nop
mov
lock
ret
arpl
add
pop
dec
lock
ret
fs
mov
jg
dec
inc
xor
mov
mov
test
test
icebp
dec
xchg
nop
bnd
loopne
mov
xor
cmp
mov
jge
mov
xor
pop
push
inc
shr
arpl
js
push
push
dec
lock
sub
fs
mov
jg
dec
inc
xor
mov
mov
test
test
inc
dec
xchg
nop
inc
jnp
loopne
mov
xor
jnp
mov
sub
aam
lock
pop
or
mov
ret
cmp
ins
imul
xor
mov
adc
mov
xor
(bad)
mov
lock
ret
nop
add
imul
stos
std
fld
(bad)
bound
sub
inc
mov
mov
div
pop
or
add
cmp
inc
cmp
xor
sub
sub
js
loopne
xlat
stos
repnz
xchg
montmul
cmps
add
ins
pusha
lds
inc
push
in
push
cmp
nop
mov
lock
sbb
mov
pop
xlat
lsl
(bad)
ficomp
loope
cmp
rcr
js
xchg
mov
cmp
cmps
or
ds
repnz
mov
pop
pop
lock
hlt
test
pop
xchg
ins
outs
add
repnz
cdq
(bad)
fidiv
arpl
out
and
mov
retf
inc
mov
and
ins
xor
mov
jle
inc
hlt
jmp
pop
fsubr
xchg
and
popf
nop
into
dec
sub
ret
pop
push
cmp
lock
sub
xchg
(bad)
jns
loopne
sub
(bad)
cmp
inc
xor
add
and
pop
pop
in
cmp
nop
lea
ins
sbb
ret
(bad)
(bad)
jl
jo
adc
mov
ret
cwde
push
stc
ins
lock
cmp
adc
sahf
adc
mov
arpl
sub
inc
lock
mov
jl
shl
jne
mov
inc
mov
inc
sbb
xor
in
cmp
push
inc
push
in
mov
ret
cli
and
nop
mov
fs
lock
xchg
loopne
push
inc
jo
sub
xor
sar
mov
call
xor
inc
jo
sub
xor
mov
xchg
data16
loopne
mov
sub
cmp
mov
cmps
sub
jnp
xchg
(bad)
mov
add
outs
adc
inc
cs
xor
inc
cmp
and
cs
mov
ds
fdiv
cs
xor
es
mov
or
dec
inc
jo
cs
xor
inc
inc
dec
sub
outs
adc
dec
inc
mov
xor
adc
ds
add
jmp
mov
and
cmps
jmp
stc
mov
pminsw
adc
lods
jmp
sar
pminsw
inc
jae
mov
jmp
leave
mov
cmp
pop
ins
adc
aas
dec
xor
inc
mov
mov
ret
arpl
ja
rcl
(bad)
xchg
lock
stos
xchg
(bad)
loopne
sar
mov
sti
imul
sar
mov
pop
mov
dec
jno
ins
push
jnp
inc
mul
add
inc
cld
xchg
sbb
test
push
cld
xchg
adc
pop
lock
mov
and
sbb
inc
inc
lock
ret
xchg
and
pop
xchg
jnp
xchg
(bad)
loopne
cs
mov
jle
shl
xchg
(bad)
xchg
inc
push
loopne
cs
xchg
pop
sar
mov
xchg
iret
sub
xchg
(bad)
mov
cs
xchg
outs
(bad)
mov
jne
mov
push
ins
pop
pop
cdq
pop
pop
push
loope
inc
dec
fxch
das
add
pop
jae
(bad)
push
xor
out
jnp
inc
xor
jbe
mov
hlt
das
add
aas
pop
cdq
(bad)
jle
jae
int
jnp
pop
add
push
inc
mov
pushf
das
add
inc
pop
cdq
pop
inc
dec
loope
das
ret
arpl
idiv
es
jmp
mov
add
das
ret
arpl
jbe
sar
jmp
loope
das
ret
fs
add
cmc
ret
mov
loope
sub
fs
xor
mov
loope
clc
rcl
dec
mov
jb
cmp
mov
mov
mov
xor
cld
jecxz
sti
ret
fld
loope
sub
arpl
adc
sar
jp
dec
mov
ret
mov
xchg
ret
jge
cmp
sbb
inc
inc
push
mov
cld
pop
dec
enter
xor
ins
push
cwde
lock
lock
inc
dec
lock
arpl
xlat
mov
jge
cmp
add
mov
outs
adc
cmp
inc
fwait
stos
sar
xchg
cmp
sbb
inc
inc
sar
inc
pop
dec
enter
xor
ins
push
cwde
test
pop
lock
inc
dec
lock
xor
mov
loope
sub
arpl
jne
shl
cld
mov
loope
sub
add
std
ret
jmp
fs
hlt
das
rcl
std
and
clc
xor
loope
stc
rcl
inc
mov
jb
cmp
add
daa
inc
dec
dec
mov
xor
jge
mov
dec
jmp
lock
outs
adc
cmp
mov
cmp
nop
es
jge
mov
sub
jl
cli
outs
adc
cmp
mov
cmp
mul
xor
lock
push
add
jp
and
cmp
mov
loope
push
xor
cmc
inc
icebp
stos
jmp
lock
jge
cmp
mov
cmp
nop
es
jge
mov
imul
jl
pop
outs
adc
cmp
mov
cmp
mul
retf
mov
movd
jecxz
add
stc
or
mov
and
lods
mov
ret
test
pushf
jns
(bad)
std
jl
popa
outs
adc
cmp
mov
xor
fidiv
push
adc
mov
(bad)
jl
lea
jge
xor
push
xor
adc
pop
es
mov
cmps
fs
lock
scas
adc
sub
push
mov
arpl
xchg
loope
vpunpcklbw
jge
xor
and
mov
add
test
inc
stc
xor
cmps
xchg
(bad)
adc
loopne
int
stc
add
cmps
xchg
(bad)
adc
loopne
xor
adc
fistp
outs
or
xor
dec
mov
xchg
cmp
rcl
dec
push
loope
and
arpl
repnz
loope
and
fs
adc
fidivr
out
xor
ret
xchg
xlat
fmul
rcr
jl
in
or
(bad)
repnz
xor
repnz
sub
pusha
icebp
or
and
arpl
jnp
shl
repnz
loope
and
fs
sub
add
and
jmp
fs
cli
cmp
adc
and
clc
aas
xor
push
jnp
add
outs
repnz
rcr
out
pop
lock
mov
sbb
jae
jmp
inc
lock
and
xchg
pop
sbb
xchg
mov
pop
and
mov
push
sar
hlt
daa
and
loopne
and
xchg
push
fisub
rcl
xchg
(bad)
mov
push
loopne
and
xchg
ds
mov
shl
ret
xor
pop
bound
mov
xchg
out
loopne
popa
adc
mov
cli
inc
inc
mov
mov
cmp
enter
xor
bound
bound
cwde
and
loope
push
cdq
pop
push
dec
loope
and
mov
popa
adc
xor
add
mov
cli
push
rcr
test
xchg
push
loop
jl
lods
sub
jne
lock
out
push
in
sbb
ret
mov
sbb
cld
loopne
sub
jne
and
imul
mov
add
push
or
cmp
fld
push
and
lock
push
sub
jne
add
jle
or
dec
lock
cmp
adc
sub
cdq
(bad)
loope
and
inc
sbb
jo
jmp
adc
lock
ror
fcom
mov
xor
dec
jae
xchg
fnstsw
in
sbb
bound
mov
mov
cmp
mov
test
sbb
jle
fsubr
xchg
sub
cmp
stos
lahf
sub
pop
test
dec
jmp
fucomi
mov
cmp
mov
mov
pop
sti
in
fisubr
cmp
push
adc
lods
adc
sub
mov
add
push
dec
test
in
dec
jmp
pop
mov
mov
push
fisubr
jbe
fwait
in
jmp
imul
jmp
sahf
push
pop
lods
sub
inc
ins
pop
lods
dec
stc
fisubr
sub
jmp
dec
lods
stc
sub
imul
call
test
in
adc
fld
aad
sbb
pop
imul
sub
lahf
push
pop
sub
jmp
ss
pop
lods
jmp
popf
jmp
mov
ins
pop
test
adc
pop
in
call
call
sub
dec
cmp
stc
sbb
push
sub
mov
sahf
stos
std
ins
pop
cmp
ins
fldcw
stos
pop
fs
sub
sub
pop
gs
es
lods
call
sub
mov
or
sbb
fwait
mov
mov
pop
mov
jp
fwait
jmp
ins
fucomi
jbe
cwde
in
test
scas
sbb
xchg
outs
sbb
ds
sub
in
pop
lods
xchg
cmp
pop
lods
dec
(bad)
fisubr
sub
jmp
dec
lods
std
sub
or
movs
sbb
ins
pop
mov
ret
jmp
sahf
imul
pop
sub
clc
ret
sub
sub
or
icebp
stos
pop
cs
pop
clc
mov
sub
sub
add
das
inc
in
imul
ret
in
mov
in
dec
sub
inc
clc
push
sub
ret
call
sar
cmp
sub
jmp
inc
clc
and
ret
in
jp
add
(bad)
sub
call
mov
inc
clc
mov
ret
jmp
add
inc
in
inc
sub
call
fisub
ret
sti
adc
sti
(bad)
daa
inc
clc
stos
sub
call
bound
add
es
jmp
es
clc
mov
sub
jmp
push
daa
inc
clc
sub
in
(bad)
sub
pop
sub
call
push
cmp
jmp
and
clc
stos
sub
jmp
and
add
es
inc
jmp
cs
jmp
sub
loope
sub
jmp
mov
inc
jmp
push
imul
dec
call
pop
out
sbb
mov
cdq
imul
pop
jmp
loop
dec
js
mov
pop
sti
scas
outs
fldcw
xlat
jg
jmp
sub
ins
pop
sub
test
inc
out
sbb
outs
fsubr
scas
sbb
mov
lahf
test
scas
pop
clc
jmp
test
in
sahf
stos
imul
lods
stos
sub
pop
jmp
pop
jmp
shl
pop
ins
inc
sub
imul
cld
psubsb
sub
jmp
imul
fisubr
test
sub
and
mov
outs
fwait
mov
(bad)
das
pop
mov
or
jmp
outs
fucomi
lods
cwde
in
stc
call
sbb
movs
ins
sbb
cmp
sub
out
pop
lods
push
outs
pop
cmp
cld
fisubr
cs
add
pop
lods
mov
sahf
sub
lods
lahf
jecxz
out
sbb
outs
and
cwde
imul
mov
ins
scas
lahf
sub
pop
test
pop
in
sbb
mov
or
aad
mov
fwait
mov
mov
push
sbb
jl
jmp
test
sbb
cli
outs
fucomi
mov
jmp
sbb
(bad)
imul
ins
sbb
out
pop
lods
into
outs
pop
cmp
push
fisubr
das
or
mov
sub
lods
movs
cs
sub
test
imul
sbb
xchg
jmp
sub
pop
cmp
sub
lahf
sub
outs
pop
test
repz
sbb
mov
or
ins
mov
fwait
mov
cmp
mov
out
pop
(bad)
(bad)
lods
pop
jmp
fwait
in
shr
clc
or
call
ins
pop
mov
scas
push
fisubr
cs
sub
lods
pop
in
add
in
aam
pop
in
sahf
sub
sbb
shr
inc
jle
jmp
adc
xor
jl
jge
adc
xor
xor
cmps
xchg
(bad)
mov
xor
outs
xor
sub
loopne
or
sbb
xchg
sahf
xchg
(bad)
pop
sub
loopne
or
jne
ins
xor
daa
cmp
or
ror
pop
lock
pop
push
in
adc
retf
daa
pop
adc
pop
dec
jns
inc
or
gs
jb
nop
pop
aaa
add
push
xchg
pop
lock
add
stos
imul
jb
jecxz
out
out
icebp
mov
xchg
bound
mov
dec
imul
xchg
dec
jecxz
dec
jbe
icebp
pop
imul
mov
es
fucomp
imul
pop
xor
push
sub
inc
push
xor
adc
jne
jae
mov
push
lock
sbb
mov
pop
adc
or
mov
cdq
xchg
(bad)
xchg
sub
loopne
or
mov
outs
xor
xchg
(bad)
mov
or
cdq
sbb
jae
xchg
(bad)
mov
add
je
inc
stc
imul
cmp
or
shr
pop
lock
push
in
adc
push
retf
cld
inc
cmp
mov
xor
jmp
xchg
nop
inc
loopne
xchg
sub
retf
jecxz
ret
leave
pusha
icebp
movs
je
loope
sbb
arpl
adc
lock
push
loope
sbb
fs
add
shr
and
xor
sbb
add
sar
loopne
nop
pop
xor
xor
jnp
pop
or
nop
dec
pusha
jo
push
sbb
or
shl
mov
push
xor
adc
jne
dec
inc
mov
imul
ret
mov
je
lods
call
add
and
or
into
or
shl
mov
jge
or
fimul
inc
add
pop
adc
or
out
or
repz
xchg
retf
dec
jae
clc
es
enter
fsubr
mov
inc
push
mov
into
ja
loopne
sbb
loope
add
popa
loope
enter
pop
adc
xchg
pop
lock
fwait
xchg
(bad)
out
sub
loopne
imul
test
sub
mov
repnz
test
pop
dec
jecxz
inc
jns
icebp
sub
cmp
jecxz
push
mov
xchg
imul
cmp
pop
xor
outs
and
frstor
imul
jae
gs
jp
pop
lock
sbb
aas
sbb
loopne
sbb
std
or
xchg
add
inc
jmp
push
lock
mov
lock
in
mov
int3
ud0
and
sub
cmps
enter
pop
adc
(bad)
aad
lock
pop
xchg
mov
cld
loopne
adc
jne
sbb
mov
enter
adc
jne
cmp
loop
inc
mov
and
fst
enter
adc
jne
cmp
retf
test
in
popf
lea
and
enter
adc
jne
pop
pusha
xor
xchg
adc
jbe
lock
ret
xchg
mov
xchg
pop
sbb
loopne
sbb
mov
sbb
ror
push
lock
xchg
(bad)
(bad)
jbe
loopne
sbb
xchg
push
in
cld
jb
shl
xchg
pop
sbb
xchg
rcr
add
or
jns
sbb
jecxz
xchg
(bad)
and
add
xchg
or
sbb
outs
xor
popf
xchg
(bad)
xor
add
pop
or
jmp
popf
xchg
pop
sub
loopne
or
stc
sbb
scas
and
cld
stos
or
sar
call
and
neg
and
sbb
loopne
sbb
loopne
loopne
(bad)
cwde
adc
jne
(bad)
addr16
dec
and
sbb
and
dec
and
(bad)
fnstsw
sti
pop
adc
repz
pminsw
dec
jae
clc
and
enter
fsub
pop
adc
sbb
pminsw
jae
add
enter
sbb
pop
adc
add
cmp
jne
add
stos
outs
cdq
(bad)
bound
bnd
fldcw
add
mov
add
jbe
jnp
addr16
outs
repnz
loope
push
(bad)
call
sbb
xor
cmp
add
jmp
cdq
(bad)
mov
push
ret
arpl
and
lock
jno
loope
push
ret
arpl
into
mov
loope
push
ret
fs
(bad)
xor
lock
push
loope
push
ret
fs
(bad)
cmp
scas
into
and
dec
add
loope
ds
xchg
push
outs
repnz
pusha
jo
fwait
sbb
lods
push
mov
or
loopne
push
add
inc
push
cdq
pop
jno
loope
mov
iret
into
cmp
cmp
in
int3
pop
ret
mov
out
dec
push
loopne
or
lock
call
push
ret
arpl
pop
adc
nop
push
dec
push
loopne
fistp
push
addr16
pop
ret
fs
adc
nop
xor
loopne
xchg
inc
lock
iret
mov
dec
or
iret
jl
jb
adc
inc
inc
lock
adc
pop
lock
and
iret
jl
xor
push
inc
lsl
outs
iret
mov
xor
cmp
jmp
add
adc
lsl
jno
mov
xor
pop
adc
add
mov
and
adc
into
jmp
inc
jmp
push
lock
xchg
(bad)
jb
push
loopne
push
ret
popf
inc
ja
nop
push
cmp
loopne
push
inc
lock
ja
nop
call
and
dec
jecxz
pop
xor
jmp
rcr
dec
jecxz
jae
inc
icebp
(bad)
pop
popa
lock
mov
jecxz
(bad)
xchg
inc
icebp
add
lock
repz
pusha
pusha
or
sbb
mov
cmp
mov
or
ret
mov
sub
cld
shrd
jge
or
ret
sub
push
cmps
mov
cld
psrlw
jge
or
sub
push
cmps
lods
jae
orps
test
outs
xor
loopne
push
push
lock
xchg
(bad)
cmp
loopne
or
stc
and
(bad)
lock
jl
pop
lahf
xchg
(bad)
into
sub
loopne
or
mov
gs
adc
add
or
outs
(bad)
lock
repz
in
add
cmp
mov
mov
loopne
ret
arpl
or
lock
xchg
cmp
cmp
sbb
arpl
lds
lock
cmp
sub
(bad)
sbb
arpl
add
aad
(bad)
call
dec
mov
jg
or
lock
fnstsw
pop
adc
or
mov
or
pop
cmps
loope
cld
jno
or
mov
or
push
cmps
(bad)
cld
lgs
jge
or
mov
or
push
cmps
leave
jb
cmovp
xchg
nop
inc
dec
push
loopne
adc
dec
dec
jecxz
xlat
inc
inc
icebp
push
pop
popa
lock
repnz
adc
dec
jecxz
imul
pop
popa
lock
repnz
add
jecxz
jg
inc
icebp
mov
lock
cmp
mov
pop
adc
or
mov
or
pop
cmps
imul
adc
or
mov
or
push
cmps
inc
repnz
cvtps2pi
jge
or
mov
or
push
cmps
xor
cld
orps
jge
or
mov
repnz
and
add
inc
ret
push
jb
jmp
inc
jmp
jl
(bad)
inc
xchg
psrad
jl
fwait
pop
adc
(bad)
push
xor
inc
jecxz
mov
jl
stc
adc
bndldx
inc
clc
sahf
sbb
jmp
or
sub
sbb
add
pop
das
xchg
and
std
cld
movntps
mov
and
cmp
mov
add
mov
jl
pop
or
ret
call
mov
dec
dec
inc
lock
(bad)
jl
clc
std
cmp
sbb
ret
pop
sbb
jne
lea
(bad)
or
fcom
ret
arpl
add
lock
add
pop
std
jl
test
mov
movs
sbb
ret
ficom
jge
dec
inc
lock
sbb
mov
dec
push
and
ret
fistp
adc
lea
fiadd
add
(bad)
pop
pusha
lock
adc
jge
lock
(bad)
sub
xchg
cmps
adc
loopne
adc
mov
ret
rcl
xchg
iret
mov
jge
loopne
adc
xchg
ds
add
shr
push
lock
adc
loopne
adc
xchg
es
add
rol
push
lock
adc
loopne
adc
xchg
and
mov
jne
and
add
ins
retf
bound
loope
jl
(bad)
adc
loope
dec
cdq
(bad)
xchg
(bad)
loope
xor
xchg
repnz
adc
loope
addr16
(bad)
mov
xor
pop
add
mov
adc
loope
fs
pop
sbb
fld
inc
push
push
inc
lock
fnstcw
xchg
sbb
shr
jp
adc
(bad)
paddw
inc
push
pop
inc
lock
sbb
int3
loope
clc
jne
(bad)
shrd
inc
push
pop
inc
lock
fnstcw
fiadd
pop
jne
fdivr
clc
sub
xchg
xchg
inc
jmp
inc
lock
ret
xchg
out
sub
xchg
mov
jl
loopne
adc
mov
cmp
cs
xchg
iret
push
adc
loopne
adc
xchg
es
rol
push
lock
adc
loopne
adc
xchg
repz
mov
sahf
adc
int
retf
adc
cs
jle
push
add
out
xor
jle
dec
inc
dec
pop
ins
test
jno
sbb
outs
call
aam
adc
sbb
jp
inc
sar
test
addr16
fucomi
mov
adc
aas
imul
adc
loopne
(bad)
cmp
cmps
test
pop
ss
arpl
loopne
adc
iret
and
mov
push
adc
arpl
int
adc
xlat
mov
test
add
dec
or
(bad)
mov
in
add
adc
push
cdq
(bad)
loope
adc
adc
inc
and
rcl
cmp
out
push
adc
out
pminsw
jle
ror
enter
sbb
push
adc
xadd
jmp
inc
enter
fdivr
push
adc
aaa
sbb
hlt
fistp
add
lock
jmp
cli
loopne
jle
(bad)
test
dec
inc
and
imul
ret
xchg
jg
pop
xchg
das
adc
loopne
adc
mov
dec
add
rcr
xchg
(bad)
dec
jle
loopne
adc
xchg
mov
cmp
add
shl
xchg
(bad)
push
jle
loopne
adc
xchg
push
jg
es
jo
ins
into
adc
pop
mov
call
adc
mov
fiadd
add
nop
adc
mov
sar
adc
add
(bad)
xchg
arpl
ds
fnstcw
cdq
(bad)
es
jnp
adc
outs
bnd
iret
movs
adc
loope
bound
loope
ss
sub
outs
repnz
jns
lock
push
add
xchg
popa
cdq
(bad)
(bad)
or
push
jnp
add
outs
repnz
les
loope
popa
cdq
(bad)
(bad)
dec
loope
push
adc
mov
aam
ret
lock
lock
fadd
stos
addr16
cdq
cmovs
inc
into
jmp
stos
push
mov
stos
ud0
ds
loope
push
ret
dec
and
inc
and
cmps
sar
xchg
push
adc
mov
pminsw
jae
nop
jmp
enter
sbb
push
adc
mov
pminsw
sub
mov
push
adc
fcmovnb
and
sub
aas
add
mov
push
add
push
xchg
xchg
(bad)
push
es
pop
gs
stc
test
inc
jecxz
out
inc
icebp
and
lock
mov
jmp
icebp
push
jns
loope
push
ret
or
(bad)
xchg
das
inc
jae
add
inc
enter
fadd
lods
push
xchg
setge
sub
(bad)
cmp
cmp
mov
xor
jl
mov
adc
push
dec
xor
push
(bad)
mul
add
xchg
fs
stc
xor
jecxz
iret
retf
pusha
icebp
mov
push
loope
pop
ret
fs
into
xchg
rol
(bad)
xchg
inc
inc
jae
ins
sub
bound
pusha
icebp
rcl
sbb
mov
into
loopne
pop
add
(bad)
cdq
(bad)
push
sbb
push
xchg
lahf
pop
jmp
imul
(bad)
jns
aad
push
and
stos
ret
dec
js
loope
pop
ret
arpl
jmp
jmp
cmp
xchg
xchg
pop
daa
add
or
shl
outs
push
loop
inc
mov
sub
cmc
in
push
xchg
jle
iret
sub
(bad)
jmp
jl
pushf
push
scas
(bad)
xchg
xchg
mov
sub
and
int
mov
push
adc
arpl
int
lock
jnp
loope
adc
arpl
jnp
loope
adc
fs
or
mov
jge
add
lods
and
sub
shl
lock
add
lock
scas
push
xchg
inc
sahf
retf
(bad)
cld
mov
sub
test
or
push
xor
jns
adc
push
loopne
adc
fsubr
pushw
retf
push
test
jne
stos
jnp
jns
fimul
in
push
sbb
lahf
adc
jnp
lock
ret
xchg
mov
adc
push
loopne
adc
mov
rcr
iret
xchg
push
loopne
adc
cmp
push
cs
push
lock
adc
push
loopne
adc
xchg
nop
loop
add
mov
loopne
pop
jo
lahf
pop
jo
sbb
mov
mov
jmp
ret
jmp
(bad)
add
adc
pop
(bad)
jmp
jl
cmp
cdq
dec
mov
pop
inc
lock
ret
jmp
(bad)
add
inc
fadd
pop
(bad)
jmp
jl
dec
test
lock
jmp
cmp
add
xchg
nop
xor
add
push
add
pop
jo
sahf
pop
jo
sbb
add
mov
jmp
ret
jmp
sbb
add
ret
sar
pop
(bad)
jmp
jl
lods
test
lock
pop
inc
lock
pop
ret
jmp
sbb
add
inc
fcom
(bad)
jmp
jl
clc
test
lock
inc
lock
ret
jmp
cmp
sbb
sar
nop
sbb
sbb
pop
ins
add
pop
jo
sbb
scas
in
mov
push
sbb
cmp
pop
jne
pop
cmp
add
out
ss
xchg
pop
jns
cli
in
iret
mov
jmp
pop
jo
call
aad
ret
movd
out
jmp
pop
jo
pop
jns
(bad)
in
les
add
ins
call
xchg
lahf
pop
jo
sbb
ds
ficomp
add
jmp
ret
jmp
pop
dec
mov
pop
jo
sbb
shl
add
jmp
jl
test
cdq
dec
sub
inc
lock
add
dec
add
jmp
arpl
dec
adc
pop
dec
xor
xchg
(bad)
push
cmp
loopne
int3
jl
jp
adc
sbb
out
sbb
add
push
es
movs
or
loope
inc
cdq
(bad)
into
mov
ret
jmp
pop
jo
fwait
pop
jne
adc
cvtpi2ps
repz
pop
jo
push
jns
and
cmc
icebp
mov
push
loopne
fwait
pop
jbe
das
inc
lock
add
mov
std
push
in
inc
inc
fstenv
das
inc
lock
add
out
add
jmp
mov
jge
sbb
sbb
mov
loopne
sbb
in
or
jg
add
mov
or
pop
(bad)
xchg
(bad)
(bad)
cmp
loopne
sbb
int
ins
xor
sbb
rcl
push
gs
or
loopne
or
std
dec
arpl
loopne
sbb
mov
jnp
(bad)
sbb
mov
scas
jnp
lock
ret
mov
sbb
sbb
repz
lock
mov
arpl
jbe
adc
sbb
add
fsub
dec
adc
inc
pop
jo
pusha
adc
cs
pop
lock
pusha
adc
cmp
lock
adc
ss
push
lock
nop
push
sbb
jnp
push
cwde
add
or
ret
mov
push
and
cs
adc
sbb
repz
sbb
jg
inc
dec
lock
pusha
adc
jb
inc
lock
pusha
adc
mov
lock
retf
add
cmp
add
(bad)
xchg
jnp
sbb
mov
stos
cmp
scas
cwde
pop
lock
mov
inc
lock
out
inc
out
inc
and
jge
sbb
retf
push
mov
push
rcr
mov
sbb
sbb
adc
loopne
or
loopne
or
stos
ins
pusha
xchg
nop
out
push
loopne
cwde
sbb
and
jb
inc
lock
sbb
adc
je
jge
int3
andps
ret
mov
sbb
int3
inc
jns
in
inc
or
mov
sbb
jg
dec
in
jl
ret
mov
sbb
(bad)
hlt
jns
in
push
(bad)
and
dec
dec
adc
test
lds
nop
push
push
push
loopne
xchg
cmp
pop
sbb
ds
cmp
push
sbb
or
mov
push
xchg
cmp
push
adc
jb
cli
jmp
inc
lock
add
nop
and
jmp
adc
inc
inc
lock
ret
jmp
pop
jo
sbb
push
and
shr
shr
(bad)
scas
sbb
mov
leave
xchg
shr
ficomp
mov
ret
lock
dec
adc
sbb
ficomp
ret
int3
dec
adc
mov
mov
mov
inc
cdq
(bad)
es
loope
or
arpl
push
and
repnz
lock
xchg
(bad)
loopne
push
inc
stc
xchg
inc
inc
xor
push
jmp
adc
pop
pop
and
push
dec
adc
push
inc
mov
mov
cmp
pop
jo
push
ret
int3
ds
loopne
xor
jns
std
loope
mov
lea
loopne
push
inc
mov
or
ret
fs
pop
add
push
ficom
sub
pop
push
push
push
and
fidivr
add
jne
xchg
jnp
bound
add
mov
inc
lock
add
lock
jmp
adc
pop
bound
push
inc
shl
xchg
nop
mov
sbb
js
push
add
test
inc
lock
pusha
lock
lock
cmp
loope
out
push
popa
mov
push
ret
arpl
push
and
rcr
aad
pop
mov
loopne
push
inc
jns
test
mov
retf
out
dec
adc
out
cmp
cdq
dec
adc
push
dec
mov
pop
add
xchg
push
or
mov
ror
fpatan
jmp
(bad)
loop
push
loopne
push
ret
stos
daa
idiv
push
shl
es
ret
mov
xchg
xor
movnti
cmp
and
ja
cmp
inc
dec
adc
jnp
pminsw
bnd
pop
retf
jl
imul
add
pminsw
jae
mov
inc
enter
fcom
call
test
pop
jo
pop
or
add
xlat
jmp
nop
movzx
jecxz
mov
pusha
icebp
push
pusha
push
loope
movnti
push
sub
retf
lock
loope
movnti
or
fcmovu
and
xor
loope
movnti
or
lock
xor
mov
pop
outs
repnz
pusha
jo
mov
in
push
pusha
push
loopne
or
loope
adc
loope
or
arpl
adc
mov
jge
sbb
add
aas
icebp
mov
jge
sbb
xor
adc
sbb
cmp
pop
jae
inc
xor
fiadd
inc
fadd
push
xchg
ins
xchg
sub
cld
mov
adc
pop
jmp
or
xchg
jmp
jns
cmp
mov
pop
cmp
loopne
sbb
jns
or
xchg
(bad)
sar
loopne
sbb
jns
or
xchg
(bad)
loop
add
out
sbb
cmp
or
xchg
(bad)
repnz
loopne
sbb
cmp
xor
shr
pop
lock
and
gs
or
push
fwait
or
push
loopne
or
xchg
(bad)
cmps
cmp
loopne
sbb
jns
or
xchg
(bad)
mov
add
push
sbb
outs
xor
cmp
inc
cmp
outs
xor
cmp
inc
cmp
ins
xor
xor
rcl
pop
lock
add
call
or
xchg
(bad)
mov
loopne
or
std
mov
jmp
pop
jo
popf
pop
jne
addr16
xchg
(bad)
fimul
adc
cmp
sbb
test
inc
stc
adc
mov
loopne
sbb
outs
xor
mov
loopne
sbb
outs
xor
mov
loopne
sbb
ins
xor
pop
cs
push
lock
cmp
retf
loop
dec
adc
sbb
mov
sbb
push
es
pop
jecxz
fist
icebp
push
or
jmp
jmp
add
ins
sbb
jl
jecxz
adc
sbb
jmp
inc
lock
ret
xchg
or
pop
xchg
push
add
loopne
add
mov
push
adc
ror
xchg
iret
imul
(bad)
cli
ins
push
loopne
add
xchg
add
cmp
adc
shl
lock
xchg
pop
add
xchg
xlat
adc
jns
ins
dec
lock
ret
outs
fild
shl
adc
stos
push
pop
push
pop
push
and
sar
or
jne
xchg
pop
jo
sub
lock
inc
lock
ret
jmp
pop
inc
mov
pop
jo
adc
jmp
jns
adc
mov
jmp
pop
jo
xchg
pop
jne
xor
seto
ret
arpl
sbb
xchg
dec
inc
adc
adc
(bad)
adc
sar
(bad)
mov
jge
adc
out
ret
mov
push
adc
adc
not
ret
mov
and
rol
inc
enter
fadd
mov
shr
sar
mov
push
xchg
dec
xor
sar
ins
push
in
cmp
ret
mov
ds
cld
loopne
or
jne
add
xor
sar
or
jne
and
push
or
inc
sar
or
jne
and
push
sub
data16
inc
fld
sar
or
jne
and
mov
jnp
fst
add
loopne
add
xchg
mov
adc
rol
iret
jecxz
xchg
(bad)
bound
mov
mov
stos
mov
adc
mov
rcr
inc
lock
dec
inc
lock
fsubr
cmp
mov
in
les
ret
mov
(bad)
(bad)
cld
loopne
or
jne
add
popf
pop
push
and
sar
or
jne
and
ret
(bad)
sbb
push
sar
or
jne
and
sub
inc
mov
cmp
(bad)
push
and
sar
or
jne
and
adc
or
sar
or
jne
and
jp
inc
mov
cmp
fnstsw
sar
or
jne
xchg
push
mov
rol
pusha
inc
adc
punpcklwd
xchg
jne
jb
push
mov
cmp
add
pop
adc
movs
outs
dec
lock
ret
mov
adc
in
add
loopne
add
loopne
add
stos
cmps
std
mov
rol
iret
out
add
loopne
add
xchg
mov
or
jne
jo
mov
add
test
int3
arpl
(bad)
lea
xchg
jnp
nop
ficom
push
loopne
pop
push
test
outs
dec
lock
ret
arpl
sbb
nop
(bad)
adc
loopne
pop
outs
xor
sar
test
into
outs
dec
lock
add
fs
adc
adc
and
xchg
or
jmp
or
adc
lock
inc
mov
push
jl
(bad)
bnd
loope
add
or
jl
rol
jge
adc
pop
adc
mov
rol
jbe
dec
mov
adc
jg
mov
jge
adc
jp
inc
fisubr
mov
jge
adc
mov
inc
lods
lahf
dec
rol
pop
sahf
sar
add
jge
adc
stos
adc
xchg
xor
jge
adc
mov
cld
mov
jge
adc
retf
fcmovu
std
mov
jge
adc
ficom
sub
outs
jae
aam
jl
aad
jno
out
sar
inc
adc
adc
cli
adc
mov
popa
inc
adc
adc
or
inc
inc
pop
sti
mov
jge
pop
dec
mov
push
ret
les
cli
mov
jge
pop
dec
mov
push
add
clc
(bad)
xchg
cmovbe
and
inc
enter
pop
ds
jl
mov
pop
dec
mov
push
add
rol
popw
dec
mov
push
add
mov
jge
pop
dec
mov
push
inc
mov
test
pop
dec
mov
push
ret
cmps
outs
clc
(bad)
xchg
fistp
shl
mov
fmul
inc
adc
pop
dec
mov
push
ret
sahf
(bad)
std
mov
jge
pop
dec
mov
push
inc
jl
sti
mov
jge
pop
dec
mov
push
add
es
adc
pop
dec
mov
push
add
mov
push
repz
mov
and
push
pop
lods
in
lock
jne
lock
ret
jbe
xchg
bound
push
and
rol
cmp
out
inc
adc
out
pminsw
push
jl
cmp
inc
adc
(bad)
pminsw
push
jae
adc
inc
enter
fdivr
inc
adc
aaa
xlat
and
mov
mov
cmp
pop
push
loopne
sbb
xor
ret
mov
inc
or
pop
lock
lock
stc
stos
xchg
call
fldenv
jb
ret
mov
jp
out
jmp
inc
lock
push
call
fnstcw
xchg
pop
ret
or
out
jmp
inc
lock
jmp
pop
call
push
in
mov
mov
xchg
mov
cld
loopne
or
push
mov
push
and
xlat
jl
mov
outs
xor
das
or
cli
xlat
jl
mov
outs
xor
das
inc
mov
cmp
sbb
mov
push
pop
xor
adc
mov
inc
adc
jmp
jle
adc
lock
adc
mov
out
jl
cwde
and
lock
push
cmp
cmp
push
loopne
xchg
fnstenv
and
(bad)
push
inc
lock
jmp
ja
sub
punpckhdq
arpl
hlt
inc
adc
and
xor
(bad)
jmp
inc
(bad)
in
inc
jmp
inc
lock
rep
jge
stc
inc
out
cdq
sub
adc
mov
xchg
push
hlt
jmp
inc
lock
inc
lock
stos
fld
inc
hlt
mov
adc
lock
inc
adc
xchg
pop
jo
mov
jns
ret
pminub
jmp
inc
lock
push
inc
lock
fisubr
clc
adc
jo
adc
mov
push
enter
sbb
push
jmp
bound
cld
mov
jne
xchg
push
mov
adc
cdq
(bad)
pop
ja
loope
push
fld
loope
pop
cdq
(bad)
out
sbb
sub
cmp
pop
fcom
cs
ret
dec
pop
push
and
aad
mov
dec
and
inc
mov
cmp
and
and
aad
mov
xor
pop
jo
adc
inc
jmp
ins
lock
sbb
call
jmp
fmul
adc
mov
inc
jne
lock
fnsave
xor
inc
adc
adc
mov
adc
push
es
jecxz
xor
inc
icebp
jle
pop
lock
inc
clc
ss
jmp
daa
loopne
adc
inc
xchg
push
push
in
add
cdq
(bad)
xchg
jbe
loope
add
bound
push
and
iret
sar
inc
adc
jecxz
pminsw
push
ror
jl
xor
adc
or
jae
adc
enter
fdivr
cmp
mov
xor
sbb
cmp
pop
jo
jmp
dec
sub
leave
adc
push
sbb
and
jns
adc
adc
ret
xchg
dec
inc
pop
xchg
pop
jnp
(bad)
xchg
adc
ret
mov
pop
push
xchg
iret
aaa
jnp
(bad)
mov
jnp
xchg
inc
inc
cmp
push
push
lock
jnp
pop
push
loopne
jnp
xchg
adc
xchg
(bad)
ror
loopne
push
jns
jnp
xor
stc
xchg
(bad)
loop
add
pop
push
stc
fnstcw
xor
(bad)
xchg
(bad)
jb
add
arpl
push
mov
fisubr
pusha
icebp
sub
loope
pop
jnp
repz
repnz
jge
sbb
xor
cwde
iret
cs
add
arpl
(bad)
cmp
ret
arpl
jecxz
shl
cmp
add
pop
pop
xchg
ds
xor
out
aaa
fwait
call
loopne
imul
jp
xor
inc
cmp
imul
lock
pop
jo
jmp
jbe
jmp
jb
imul
mov
xchg
jl
pop
imul
fidiv
jmp
or
jno
push
push
sti
push
xchg
mov
sar
jno
dec
mov
xchg
jl
div
shr
mov
jmp
popf
vmwrite
(bad)
bndldx
jmp
or
jno
push
push
jmp
xchg
cmp
and
dec
jp
out
jmp
shr
xor
jmp
popf
(bad)
aam
movntq
out
mov
pinsrw
(bad)
jmp
dec
lock
jb
mov
cli
sbb
xchg
jl
call
(bad)
jno
jmp
or
jb
push
push
int3
sub
xchg
mov
rcr
pop
out
jmp
shr
jb
jmp
popf
pextrw
movsx
jmp
or
jb
push
push
ret
stos
mov
xchg
cmp
sahf
or
outs
dec
call
pop
xor
jmp
aad
mov
nop
shr
punpckhbw
cmp
nop
call
fnstenv
(bad)
lock
jns
loop
gs
jl
dec
xor
xlat
ror
jb
jmp
or
jb
push
push
in
inc
xchg
jecxz
and
or
out
jmp
shr
jb
jmp
popf
mov
(bad)
rsqrtps
jmp
or
jb
push
push
aam
sbb
cmp
cmp
scas
dec
or
loope
push
fist
outs
je
xchg
jl
jg
inc
jmp
cmp
xchg
mov
nop
test
xchg
cmp
stos
jae
dec
loop
out
jmp
shr
jae
jmp
popf
(bad)
(bad)
(bad)
bswap
jae
jmp
or
jae
push
push
jmp
enter
daa
imul
xor
cmc
inc
lock
jae
lock
lock
xchg
and
xchg
cmp
dec
or
outs
or
xchg
(bad)
fimul
loopne
imul
les
cmps
mov
int
mov
xchg
push
stos
test
adc
dec
pop
xor
(bad)
movntq
out
mov
seto
arpl
and
rcr
imul
(bad)
xchg
imul
cmp
icebp
push
sub
mov
adc
jmp
and
pusha
xchg
cmp
or
outs
mov
adc
fldenv
outs
add
shr
push
fnstsw
dec
popf
paddsw
(bad)
getsec
lock
pmaxsw
lock
xchg
(bad)
jp
add
imul
mov
fs
fs
cmps
adc
push
scas
xchg
push
dec
scas
jl
add
dec
pop
xor
lock
wrmsr
jle
arpl
or
jp
xchg
lock
xchg
(bad)
xor
loopne
hlt
dec
cmp
sub
cmp
mov
mov
cmp
push
or
dec
imul
add
imul
jo
dec
lock
cmps
adc
jmp
push
and
scas
jl
cdq
je
jne
jae
xor
cdq
(bad)
sahf
adc
loope
scas
and
mov
sub
add
ins
pop
xchg
nop
out
add
add
xchg
popf
out
js
loop
push
ins
jae
cdq
(bad)
loope
adc
push
jg
loope
and
loope
pop
jnp
call
bnd
iret
js
add
stos
or
loope
pop
jnp
pop
outs
outs
repnz
loope
or
loope
jg
mov
into
mov
inc
scas
jl
leave
cmp
dec
xor
jle
xor
cld
xchg
(bad)
loopne
outs
inc
stc
add
xor
sti
xchg
(bad)
mov
or
jns
loop
sbb
das
jecxz
or
icebp
dec
or
lock
push
mov
inc
mov
inc
inc
fstp
or
jmp
sbb
or
es
xchg
(bad)
bound
push
loopne
jle
std
aaa
cld
xchg
(bad)
dec
loopne
outs
inc
jns
jle
xor
xchg
(bad)
mov
loopne
outs
inc
stc
movs
jle
xor
xchg
(bad)
push
dec
add
push
or
jns
loop
sbb
das
jecxz
out
inc
icebp
and
lock
mov
inc
inc
fnsave
xor
sbb
stos
jl
fimul
xchg
pop
adc
loopne
jge
std
scas
ins
add
jb
jnp
push
ins
mov
pop
ins
add
pop
loope
xor
lods
jecxz
mov
pusha
icebp
aad
push
loope
jl
arpl
gs
dec
lods
and
mov
jl
fs
in
ror
mov
jge
ins
dec
mov
ins
inc
xchg
jnp
(bad)
xchg
inc
sub
shl
enter
fsub
push
xchg
inc
ins
inc
sub
xchg
mov
into
loopne
jl
loope
popa
cdq
pop
dec
loope
jl
arpl
lods
and
jns
push
loope
jl
arpl
lods
loopne
dec
adc
loope
jl
fs
cmp
ins
dec
mov
ins
inc
xchg
fild
jae
les
enter
fadd
(bad)
push
xchg
retf
imul
push
lods
jl
sti
adc
repz
jmp
adc
mov
pop
lock
xchg
(bad)
loopne
push
push
jns
loopne
sbb
sub
inc
icebp
fimul
push
lock
loopne
sbb
mov
adc
loope
jge
fs
fs
sar
lods
and
shl
loope
pop
jnp
sbb
repnz
sub
in
sbb
inc
ins
ret
(bad)
jmp
jl
pop
ja
jne
xor
sub
ret
mov
inc
int
pop
xor
jge
arpl
adc
sbb
adc
ins
dec
mov
ins
inc
mov
push
aas
adc
ins
dec
xor
jl
cmp
stc
xchg
(bad)
loopne
ins
inc
stc
sar
inc
cmp
outs
rcl
push
in
imul
fisubr
adc
retf
lods
jl
dec
aas
adc
ins
dec
mov
ins
ret
mov
jge
adc
ins
dec
mov
ins
inc
push
jmp
mov
jge
ins
dec
xor
not
loopne
bound
gs
xor
dec
cmp
pusha
sar
pop
lock
push
mov
fsubr
xchg
(bad)
out
push
loopne
jae
std
push
arpl
retf
jnp
bound
mov
mov
ret
arpl
adc
int
adc
arpl
push
bound
jnp
mov
jge
arpl
add
not
loopne
bound
adc
dec
cmp
pusha
shr
push
in
mov
cmp
xchg
adc
mov
xor
jge
arpl
mov
mov
xchg
arpl
retf
push
fisttp
adc
arpl
mov
not
loopne
bound
mov
xor
dec
cmp
pusha
cs
pop
lock
jg
mov
push
ret
in
js
lock
cld
push
sbb
adc
adc
jns
push
arpl
add
pop
add
shl
(bad)
lock
arpl
(bad)
out
inc
add
loopne
push
jns
out
push
sbb
and
mov
repnz
dec
out
push
sbb
(bad)
scas
pusha
icebp
scas
sbb
loope
jae
fs
push
rcr
and
mov
push
jnp
inc
arpl
je
pusha
jo
neg
in
cmp
out
mov
jae
loope
outs
cdq
(bad)
mov
dec
loope
jae
arpl
mov
push
loope
jae
arpl
mov
push
loope
jae
fs
jmp
xor
adc
bound
mov
lea
ror
inc
enter
(bad)
enter
arpl
add
into
loopne
jae
loope
outs
cdq
(bad)
loope
mov
adc
and
cli
arpl
jae
xchg
(bad)
xor
loopne
add
jne
push
sbb
and
mov
mov
lock
push
sbb
fwait
lods
pusha
icebp
cli
pop
push
loope
jo
fs
imul
lock
jp
jnp
adc
repnz
jo
cmc
sbb
nop
cdq
cmps
out
mov
into
loopne
jo
loope
ins
cdq
(bad)
call
arpl
adc
push
mov
push
loope
jo
arpl
and
data16
push
loope
jo
fs
(bad)
shl
mov
jge
popa
dec
mov
pusha
inc
xchg
xchg
mov
rcr
fmul
mov
jl
mov
adc
stos
and
mov
sbb
loopne
pusha
add
mov
push
xor
mov
pusha
icebp
xor
push
loope
jo
arpl
imul
lock
pop
push
loope
jo
fs
(bad)
shl
mov
fisub
mov
pusha
inc
xchg
out
(bad)
xchg
daa
and
or
inc
enter
fcomp
retf
xor
jmp
into
loopne
jno
loope
ins
cdq
(bad)
out
push
dec
loope
jno
arpl
call
and
aad
push
loope
jno
arpl
push
loopne
mov
jno
fs
call
mov
jge
pusha
dec
mov
popa
inc
xchg
jnp
(bad)
xchg
inc
and
pusha
dec
inc
enter
fsub
push
xchg
push
mov
adc
lahf
and
and
or
adc
pop
and
xchg
popa
inc
rcr
xchg
(bad)
loopne
add
fucomp
push
sbb
xor
jle
push
lock
push
sbb
inc
lods
pusha
icebp
and
push
loope
jno
fs
push
and
xor
loope
push
jnp
sti
popa
outs
repnz
sbb
loop
add
and
push
stos
test
xor
mov
adc
in
push
xor
es
xchg
icebp
ret
lock
push
sbb
es
pop
mov
add
push
sbb
cmps
stos
pusha
icebp
into
sbb
loope
jbe
cmp
sar
cmps
and
fsubr
loope
push
jnp
outs
repnz
and
jmp
mov
loopne
jbe
loope
imul
in
adc
and
xchg
(bad)
mov
add
push
sbb
jecxz
xor
icebp
dec
add
push
sbb
adc
push
loope
jbe
fs
outs
daa
shr
push
loope
push
jnp
mov
repnz
jae
in
mov
add
jb
push
stos
mov
push
xor
cmps
jl
iret
jl
jne
movs
jb
mov
inc
mov
jnp
xor
cdq
(bad)
loope
jbe
mov
es
sar
jno
sbb
call
dec
pop
xchg
inc
jbe
(bad)
into
sbb
loopne
jbe
mov
and
shl
xchg
iret
pop
jbe
(bad)
(bad)
sbb
loopne
jbe
xchg
push
dec
cmp
gs
push
lock
xchg
(bad)
(bad)
sbb
loopne
jbe
xchg
mov
inc
add
mov
jns
jmp
push
aaa
inc
icebp
sahf
add
lock
cmps
jecxz
jecxz
pusha
icebp
sbb
loope
ja
outs
daa
sar
and
nop
imul
xor
fstp
outs
repnz
and
and
addr16
ret
push
jmp
jl
lahf
jge
jne
jmp
daa
xor
push
lock
push
sbb
mov
leave
jmp
inc
stos
pusha
icebp
sbb
loope
ja
fld
rcr
cmps
and
cmp
xor
xchg
push
jnp
(bad)
outs
repnz
and
dec
jb
in
out
add
cmp
push
jmp
jl
sti
jge
jne
jns
xor
pop
inc
loope
je
retf
gs
and
and
jmp
adc
aas
movs
pminsw
sbb
and
jl
add
adc
daa
movs
pminsw
jae
dec
dec
inc
enter
fcom
adc
dec
movs
cmp
shl
jge
gs
xor
ret
fs
adc
fdiv
stos
sbb
loope
aas
cdq
(bad)
loope
loope
sbb
adc
mov
pop
xchg
xchg
mov
loopne
jle
jne
jne
mov
sub
mov
jl
jmp
xor
mov
sub
fisub
jne
push
outs
xor
pop
inc
mov
dec
inc
frstor
movs
jl
mov
adc
aaa
pusha
xor
sbb
cld
jne
xchg
jmp
pop
xchg
mov
xchg
(bad)
xor
push
loopne
jne
mov
ss
xchg
iret
dec
je
(bad)
ficomp
push
loopne
je
xchg
and
cld
cs
arpl
loop
push
loopne
je
xchg
mov
xchg
(bad)
inc
loopne
push
push
jns
call
jecxz
inc
cs
icebp
add
lock
push
sbb
xlat
cmps
pusha
icebp
mov
jne
fs
sar
(bad)
xchg
dec
and
inc
enter
fsubr
cdq
mov
adc
sub
sub
je
pop
push
loopne
je
std
lods
add
xchg
mov
mov
loopne
or
sbb
mov
sbb
loopne
jne
loope
push
imul
and
adc
gs
xor
jecxz
mov
js
mov
pusha
fldenv
jne
sbb
sbb
loopne
je
std
cmp
jne
mov
jecxz
mov
js
mov
pusha
fldenv
jne
adc
into
add
ret
std
push
sbb
push
jp
int3
xchg
pusha
pop
sub
sub
jmp
adc
sub
cmp
cli
adc
jae
dec
lods
sbb
mov
add
sbb
lods
adc
ret
mov
cli
pop
jo
cli
fnstenv
cli
fldenv
inc
xor
xchg
add
push
sbb
and
add
adc
cmps
push
mov
inc
pop
xchg
jbe
cld
loopne
pusha
adc
imul
aaa
push
and
mov
adc
dec
outs
xor
xchg
jl
aad
push
and
mov
adc
dec
outs
xor
push
inc
(bad)
aaa
push
and
mov
adc
sub
fwait
out
jno
add
ret
xchg
iret
push
pop
xchg
lahf
imul
lock
ficom
ror
xchg
iret
mov
xchg
(bad)
ds
ret
xchg
(bad)
push
cmp
jns
shl
push
lock
push
pop
add
loopne
push
xchg
xchg
add
loopne
not
daa
cmp
jecxz
cmps
cmp
loop
push
lock
not
sub
jecxz
aaa
push
inc
icebp
repnz
dec
not
pop
mov
pusha
icebp
scas
add
loope
imul
pop
repnz
ror
(bad)
xchg
jg
jae
push
push
inc
enter
fsubr
loope
jmp
sbb
pusha
je
jo
test
and
ret
arpl
nop
mov
jge
jp
mov
jnp
lea
sub
jge
jp
xor
push
xor
out
xchg
(bad)
bound
loopne
sbb
mov
outs
push
mov
mov
push
inc
fnsave
popa
ret
jmp
ret
push
inc
fsubr
cmp
in
les
mov
mov
jbe
cli
mov
xor
imul
adc
adc
fidivr
xor
cmp
lock
xor
js
lock
mov
jecxz
adc
add
xor
inc
xor
js
mov
push
js
adc
jns
xor
inc
lock
xor
js
cmc
xchg
sbb
inc
lock
not
sbb
imul
ins
cmps
pop
(bad)
jmp
xchg
cwde
adc
mov
inc
(bad)
fwait
js
fs
pop
cs
xchg
ds
(bad)
ficomp
(bad)
push
loop
(bad)
push
pop
scas
sqrtps
cdq
(bad)
out
(bad)
imul
pop
add
jbe
push
stc
mov
push
sbb
cmp
mov
push
sbb
movs
cmc
push
sbb
fstp
push
loope
push
pop
shl
mov
xor
test
sbb
mov
iret
sbb
imul
loopne
arpl
sbb
pop
cli
popa
cld
bound
add
sbb
test
loopne
imul
lock
jmp
adc
test
dec
arpl
loopne
mov
adc
dec
jns
jmp
lahf
xchg
xchg
(bad)
xchg
push
push
loopne
push
xchg
(bad)
mov
imul
loopne
sbb
fwait
jne
cmp
mov
cmc
ja
enter
mov
sahf
mov
cmp
adc
cdq
(bad)
loope
push
dec
f2xm1
imul
(bad)
jp
jae
ror
pop
inc
outs
repnz
mov
cwde
imul
pop
jne
loope
dec
jnp
idiv
repnz
dec
lock
push
push
cdq
(bad)
loope
and
xchg
loop
cld
loopne
arpl
jne
push
push
and
mov
adc
dec
outs
xor
inc
or
or
adc
dec
outs
xor
inc
inc
mov
push
inc
fst
push
and
mov
adc
push
jge
jge
cmps
rdmsr
jle
lock
fs
jle
push
sti
pop
jo
push
jo
cmp
jl
inc
jns
add
or
push
sbb
addr16
xchg
inc
in
sub
cmp
addr16
mov
lahf
jle
jmp
push
xchg
movs
in
sub
sub
mov
mov
jnp
loope
rsqrtps
movs
jle
fcom
in
push
mov
ds
sbb
push
fwait
idiv
adc
jo
dec
fmul
les
lock
fidiv
xor
add
test
arpl
ja
sar
xchg
mov
jge
jg
mov
jle
(bad)
xchg
mov
jge
jno
mov
xchg
mov
jge
jle
mov
xchg
(bad)
xchg
aaa
aas
jae
sbb
inc
enter
fadd
sbb
es
iret
jg
sbb
xchg
adc
cwde
inc
arpl
xor
jo
test
dec
vmovdqu8
xchg
test
jp
outs
add
mov
xchg
xchg
fbstp
loopne
inc
arpl
popa
(bad)
(bad)
jmp
jo
repz
arpl
jne
jmp
sbb
or
xchg
xchg
into
out
loopne
jle
jmp
xlat
shr
(bad)
push
add
loopne
outs
ret
std
mov
ret
out
sbb
icebp
aaa
movs
jl
fnstenv
shl
mov
adc
iret
dec
lock
mov
push
add
mov
aas
sbb
xchg
cld
sub
mov
mov
scas
(bad)
cli
mov
adc
and
add
ja
xchg
(bad)
ds
add
repnz
adc
jge
xor
test
xor
lock
mov
inc
or
adc
lock
loope
ret
xchg
cmp
fisubr
ret
sub
loope
fld
pop
xor
inc
clc
call
imul
inc
jmp
push
lock
mov
pshufw
inc
loopne
(bad)
popf
pop
or
ins
add
es
ficom
inc
xor
xchg
xchg
xchg
dec
lock
loopne
push
xchg
or
test
or
lock
bound
jp
xchg
xor
sbb
loopne
ins
sbb
add
lods
hlt
ins
ret
arpl
mov
push
loope
ins
ret
arpl
jne
ror
mov
push
loope
ins
ret
(bad)
ror
nop
mov
jge
jge
mov
jl
cmps
call
jae
in
jno
enter
(bad)
mov
adc
pop
ins
add
mov
adc
xchg
(bad)
call
or
sub
cmp
cmp
adc
ss
mov
inc
lock
and
cmp
push
icebp
xor
cmp
push
idiv
lock
sbb
xchg
push
push
repz
cmp
push
cmc
bound
push
push
inc
sub
inc
jg
rcr
cmp
push
or
ins
add
dec
adc
iret
ins
or
adc
xchg
push
xor
loopne
jge
fbld
or
rep
or
jge
sub
mov
xor
jno
lods
jecxz
(bad)
fs
jge
mov
(bad)
mov
adc
cmpxchg
cdq
scas
das
adc
pusha
inc
jo
add
add
cmps
and
jne
push
cmp
pop
push
loopne
ins
or
into
stos
push
nop
lods
add
add
fisub
std
addr16
dec
xor
jb
icebp
aam
adc
ja
dec
jo
pop
sub
es
icebp
fist
repz
adc
shr
xchg
pop
push
add
jb
inc
jns
arpl
shl
xchg
(bad)
adc
loopne
jb
stc
or
xor
out
(bad)
and
loopne
arpl
mul
xchg
(bad)
ds
loopne
arpl
inc
pop
mov
shl
cmp
shl
cdq
adc
xchg
(bad)
rcl
loopne
jb
stc
jl
dec
lock
(bad)
adc
jmp
pop
xor
jb
push
cmps
jl
fbld
adc
xlat
xor
jmp
jle
jecxz
add
xchg
js
aas
or
ret
arpl
sti
aaa
shl
mov
lock
ret
arpl
jnp
shl
mov
lock
push
loope
arpl
fs
or
loope
arpl
adc
xor
outs
inc
jnp
pop
dec
outs
repnz
xchg
dec
enter
lock
or
inc
push
jp
shl
jae
lock
jae
loopne
imul
pop
mov
jo
and
jge
(bad)
pop
jo
cmps
jl
inc
and
mov
jg
sbb
rol
ror
shr
and
jge
jb
mov
jae
lods
fwait
cwde
mov
jge
jb
mov
jae
and
sahf
mov
jge
jl
mov
lahf
mov
jge
jb
mov
popf
(bad)
xchg
mov
jae
mov
daa
pusha
fdivr
or
lock
xchg
fistp
xchg
(bad)
bound
loopne
(bad)
mov
sar
xchg
iret
cmps
bound
loopne
(bad)
cmp
jno
rcl
push
lock
or
loopne
popa
ret
xchg
adc
ret
out
adc
xchg
stos
jl
gs
jl
pop
push
jne
ins
push
scas
and
loope
shl
mov
mov
adc
inc
xchg
cmp
inc
push
add
inc
rcr
push
xor
mov
xchg
inc
movs
cld
loopne
push
jne
popa
push
and
jl
sbb
jne
inc
outs
xor
or
push
jl
sbb
jne
inc
outs
xor
inc
mov
pop
inc
(bad)
cmp
jl
loope
adc
cmps
push
jo
jecxz
(bad)
rcl
loopne
jo
jns
popa
push
(bad)
loop
add
inc
jo
stc
fldenv
xor
in
(bad)
bnd
loopne
popa
outs
cmp
xchg
(bad)
mov
loopne
popa
ins
cmp
pop
cmp
jb
shl
jl
inc
and
jge
jno
mov
jo
and
popa
outs
cmps
jmp
mov
iret
xlat
gs
xchg
(bad)
xor
push
loopne
popa
ret
std
pop
cwde
mov
jne
test
cli
test
mov
lock
mov
and
(bad)
jb
(bad)
sub
fidivr
in
adc
push
inc
lock
xchg
das
pop
pop
xchg
jg
xchg
(bad)
test
loopne
pusha
ret
mov
jp
shr
xchg
(bad)
sahf
push
push
loopne
pusha
ret
xchg
pop
cmp
jae
rol
lock
pusha
xchg
(bad)
cmps
push
push
loopne
pusha
ret
xchg
test
xlat
out
sbb
xchg
arpl
push
and
jno
lock
lods
add
jl
dec
push
mov
popa
ret
arpl
jno
lock
mov
loope
adc
mov
adc
sub
shl
mov
mov
mov
push
inc
and
loope
shl
dec
jecxz
mov
add
mov
push
lds
push
mul
push
xor
pop
xchg
cli
movs
cld
loopne
imul
nop
pusha
push
mov
and
mov
mov
push
inc
outs
xor
dec
or
add
adc
inc
outs
xor
dec
inc
mov
pop
inc
fstp
push
and
mov
mov
and
push
jo
gs
in
jbe
and
jbe
push
neg
and
loop
mov
adc
ja
mov
jbe
and
imul
popf
mov
loope
push
adc
jnp
inc
fidiv
pusha
lock
sbb
pop
or
loope
jnp
pop
pop
loope
repz
sbb
add
mov
inc
pop
xor
mov
add
cli
xchg
xor
(bad)
dec
lock
mov
lock
inc
fs
retw
push
mov
bound
ss
out
mov
adc
ret
mov
jmp
jl
shl
adc
jmp
pminsw
ss
lock
inc
enter
fcomp
and
xor
not
es
aaa
pop
push
jb
adc
ss
xor
jl
mov
jbe
mov
ja
lods
sub
jge
jbe
mov
ja
and
call
inc
js
mov
fwait
mov
jge
jbe
mov
cdq
(bad)
xchg
jnp
jae
push
ins
inc
fsub
pusha
lock
sbb
scas
or
popa
sub
add
idiv
(bad)
ss
arpl
dec
xlat
mov
out
int
and
cli
adc
aaa
jecxz
adc
inc
icebp
pop
adc
lock
cli
push
sbb
mov
push
lock
push
sbb
jae
push
inc
cli
push
sbb
aaa
ret
mov
mov
dec
mov
pop
inc
fstp
jae
out
adc
icebp
mov
push
pop
lahf
xchg
(bad)
push
or
loopne
retw
std
cmp
mov
mov
ret
arpl
(bad)
pop
sar
mov
lock
addr16
arpl
(bad)
pop
ror
mov
lock
push
loope
fs
or
push
loope
fs
adc
xor
push
jnp
add
cmp
lock
pop
icebp
scas
scas
jl
inc
cmp
and
mov
mov
xor
es
pop
sub
loope
je
inc
cmp
and
movs
dec
lock
daa
adc
push
dec
xor
and
jl
outs
je
mov
mov
push
loopne
fs
arpl
je
lock
xchg
(bad)
pop
push
add
pop
bound
pop
and
hlt
push
je
ficom
ins
xor
mov
shr
mov
lock
mov
or
xchg
push
mov
loopne
jae
xchg
fisubr
loopne
mov
lock
dec
(bad)
out
je
lods
inc
je
jmp
cmp
xor
cmp
push
cmp
imul
mov
cld
jne
fsubp
lea
loope
adc
sahf
cmp
jmp
fisubr
test
sbb
jl
and
mov
xor
xor
inc
icebp
xchg
push
lock
xor
inc
icebp
xchg
push
push
lock
mov
mov
mov
push
loope
gs
fs
adc
jb
and
cwde
jns
loope
inc
jnp
arpl
repnz
cmp
dec
lock
loope
inc
xor
(bad)
loopne
daa
adc
ficom
mov
jge
xchg
mov
xor
xor
mov
nop
into
sub
loopne
test
lock
out
(bad)
call
cmp
xchg
(bad)
xchg
jne
loopne
outs
cmp
xchg
(bad)
mov
outs
cmp
xchg
(bad)
mov
fs
cmp
cwde
fwait
cld
xor
shl
(bad)
jae
add
inc
enter
sbb
or
call
adc
dec
dec
inc
lock
mov
sbb
jge
dec
dec
mov
dec
inc
fadd
push
and
jecxz
mov
pop
pop
lock
jns
clc
ret
jmp
or
pop
dec
sbb
push
dec
inc
mov
cmp
loope
daa
cdq
(bad)
mov
pop
ret
arpl
das
sar
push
lock
ficom
loopne
pop
pop
stc
mov
clc
add
jmp
or
sahf
dec
sbb
xchg
dec
inc
mov
clc
pop
add
sub
cdq
(bad)
bound
inc
loope
pop
adc
dec
add
jl
or
adc
dec
inc
lock
push
add
add
(bad)
lock
dec
adc
fst
loopne
dec
inc
stc
add
ret
fs
ret
adc
loop
adc
jmp
push
mov
inc
dec
inc
jmp
adc
or
adc
dec
dec
mov
dec
inc
adc
push
es
mov
cs
jo
and
pop
jo
(bad)
ins
xor
dec
sbb
add
jmp
adc
dec
mov
jmp
inc
mov
mov
xchg
sbb
xor
inc
lock
mov
psraw
packsswb
cmp
cmc
into
xchg
setg
cmp
stc
into
or
dec
cmp
mov
sbb
mov
sub
pop
ret
test
jmp
mov
sub
and
retf
int
bound
or
jmp
adc
xlat
mov
jmp
jl
in
lahf
jl
(bad)
sbb
mov
dec
jae
in
inc
enter
fsubr
sbb
mov
out
cmp
jecxz
push
in
adc
ret
mov
mov
adc
dec
mov
enter
dec
ret
repnz
cmc
sbb
cwde
xchg
mov
mov
pop
and
pop
ret
retf
dec
int
and
or
jmp
adc
dec
mov
jmp
jl
imul
xor
pminsw
jae
js
inc
enter
fsub
adc
fwait
mov
jmp
pop
ins
add
cdq
(bad)
fisubr
push
loope
aaa
dec
fld
pop
add
adc
(bad)
loope
js
sbb
jb
mov
call
sub
(bad)
jb
jae
idiv
fucom
dec
outs
repnz
dec
lock
pop
add
inc
das
cdq
(bad)
call
shl
lea
retf
xor
fist
loopne
dec
inc
stc
popf
pop
outs
xor
xchg
(bad)
mov
push
loopne
pop
outs
cmp
dec
or
gs
ins
cmp
fs
dec
sar
pop
lock
push
movs
aas
sbb
mov
aaa
mov
ss
in
and
ret
mov
push
imul
push
add
fisub
leave
push
xor
inc
shl
mov
xchg
xor
dec
push
ins
jmp
cdq
(bad)
and
push
loope
ss
fldcw
pop
add
sti
add
jae
or
sbb
pop
ss
rcr
loope
sub
jae
fidivr
fnstsw
ss
lock
pop
add
sub
cdq
(bad)
mov
pop
and
sbb
jge
dec
dec
mov
dec
inc
ret
mov
jge
dec
dec
mov
dec
inc
or
movs
mov
jge
dec
dec
xor
fst
loopne
dec
inc
stc
test
xor
fs
dec
cs
pop
lock
push
push
in
xchg
inc
lock
adc
femms
jns
adc
add
sub
add
ret
push
xor
push
jecxz
xor
(bad)
sub
push
sbb
push
jecxz
inc
xor
mov
push
sbb
ror
loope
pop
ret
fs
inc
daa
shr
and
add
and
fisttp
outs
repnz
or
aad
sbb
jb
add
pop
out
push
jmp
jl
(bad)
push
adc
ret
push
xor
mov
jmp
push
jecxz
daa
call
fld
push
sbb
aaa
mov
pop
xor
loope
pop
ret
fs
inc
daa
ror
mov
lock
xor
xchg
(bad)
dec
outs
repnz
pusha
jo
fistp
in
mov
and
sub
into
loopne
pop
add
addr16
cdq
(bad)
cmps
mov
loope
dec
jecxz
sub
adc
mov
pop
mov
fst
loopne
dec
inc
stc
popa
pop
push
(bad)
pop
outs
add
arpl
stc
jno
outs
xor
outs
add
in
sub
jns
ret
pavgw
(bad)
sub
lock
push
push
ja
mov
arpl
or
jmp
push
push
add
dec
(bad)
jl
pop
push
adc
jmp
mov
das
dec
lock
and
(bad)
jl
jmp
dec
dec
mov
dec
inc
ret
mov
jge
dec
dec
mov
dec
inc
lea
sbb
dec
xor
pop
out
xor
fist
loopne
dec
inc
stc
rcr
xchg
bound
rcl
push
in
push
(bad)
lock
adc
retf
(bad)
jl
dec
sbb
dec
mov
dec
ret
jns
movs
mov
jge
dec
dec
mov
dec
ret
and
mov
adc
dec
dec
xor
fcom
loopne
dec
inc
stc
gs
ins
xor
popa
cmp
dec
sar
pop
lock
push
in
push
pop
lock
mov
das
or
jmp
pusha
nop
mov
loopne
rcl
push
or
mov
call
sbb
jecxz
pop
xor
stos
das
push
lock
push
sbb
out
mov
xchg
xor
loope
pop
ret
fs
daa
shl
and
fs
xor
into
jl
(bad)
or
xor
in
sahf
dec
add
add
mov
push
adc
sbb
dec
lock
jecxz
jl
and
adc
dec
dec
mov
dec
inc
ret
mov
jge
dec
dec
mov
dec
inc
(bad)
iret
mov
adc
dec
dec
xor
fcom
loopne
dec
inc
stc
cdq
pop
ins
xor
popa
cmp
dec
cs
pop
lock
in
pop
pusha
lock
lea
popa
enter
or
ret
(bad)
in
pusha
nop
outs
or
loopne
rcl
ss
inc
icebp
(bad)
cs
lock
rcl
or
inc
icebp
mov
push
lock
(bad)
jecxz
ror
push
loope
pop
ret
fs
inc
daa
shr
and
add
and
fisttp
outs
repnz
or
aad
sbb
jb
ret
xchg
outs
out
push
push
add
sahf
lea
push
adc
push
inc
mov
sub
and
pop
adc
dec
dec
mov
dec
inc
ret
mov
jge
dec
dec
mov
dec
inc
lea
pop
adc
dec
dec
xor
fst
loopne
dec
inc
stc
mov
pusha
cmp
dec
cs
pop
lock
mov
ins
ret
in
push
jle
jmp
mov
out
jns
or
or
xchg
pusha
nop
ret
loopne
iret
shr
or
jecxz
pop
jo
icebp
shl
push
lock
jecxz
daa
aas
inc
icebp
loop
push
lock
iret
push
sbb
mov
pusha
icebp
fidivr
ret
fs
dec
daa
ror
and
lods
dec
xor
push
jb
fnsave
outs
repnz
push
pusha
jo
xlat
sbb
dec
fbld
loopne
cmp
add
out
cdq
(bad)
es
mov
aas
xor
pop
lock
rcl
loopne
inc
inc
stc
loope
push
(bad)
fisub
loopne
inc
inc
stc
icebp
push
outs
xor
(bad)
xchg
(bad)
loopne
and
(bad)
push
sbb
add
mov
jle
push
lock
jp
mov
outs
inc
fisttp
fdivr
mov
js
add
push
xchg
(bad)
adc
ret
std
sub
mov
add
ins
test
ret
arpl
dec
xor
repnz
cmp
ret
arpl
dec
rol
and
jmp
push
loope
push
ret
fs
retf
add
adc
inc
dec
mov
inc
inc
xchg
xor
jae
cmp
enter
fsubr
call
call
push
pop
adc
mov
push
add
pop
inc
ret
push
xchg
xchg
pusha
nop
rol
fsubp
sub
adc
jp
jecxz
addr16
icebp
mov
into
push
sbb
jecxz
ja
inc
icebp
mov
push
lock
push
sbb
pop
and
aam
ret
fs
dec
daa
rcr
dec
xor
(bad)
jae
fld
pop
pusha
jo
push
sbb
cmps
inc
add
loope
push
push
push
xor
pop
adc
enter
and
push
and
adc
jge
inc
dec
mov
inc
inc
ret
mov
jge
inc
dec
mov
inc
inc
(bad)
imul
adc
inc
dec
xor
xlat
xchg
(bad)
loopne
inc
inc
stc
popa
push
ins
xor
ins
cmp
inc
shl
pop
lock
push
mov
(bad)
xchg
(bad)
loop
push
loopne
push
ret
std
push
inc
add
and
push
out
aas
push
ins
sbb
arpl
xor
inc
and
aas
push
loope
push
ret
arpl
rcl
and
mov
push
ret
outs
leave
adc
repnz
jge
inc
dec
mov
inc
inc
xchg
arpl
jae
mov
enter
fcomp
(bad)
jmp
adc
xchg
jns
stos
inc
ret
mov
loop
fsubp
fxch
adc
stos
add
mov
jb
push
lock
int
sbb
add
mov
add
push
lock
and
push
and
aas
push
loope
push
ret
fs
daa
shr
and
or
xor
cmps
jo
fst
inc
outs
repnz
pusha
jo
push
sbb
test
pop
loop
push
or
xor
cmp
jbe
mov
and
push
and
adc
jge
inc
dec
mov
inc
inc
ret
mov
jge
inc
dec
mov
inc
inc
lea
lods
mov
jge
inc
dec
xor
push
out
xor
aad
(bad)
sbb
loopne
inc
inc
stc
xor
xor
cmp
inc
rol
lock
cld
popa
ret
in
fwait
js
outs
cmp
or
dec
xor
mov
jmp
add
arpl
and
clc
push
ret
arpl
and
loope
push
ret
fs
lods
mov
jge
inc
dec
mov
inc
inc
xchg
shr
jae
fsubr
pop
pop
inc
fmul
jmp
mov
pusha
lock
loopne
push
add
arpl
cmp
pop
loope
les
jecxz
cmp
cmc
inc
inc
cld
test
adc
ret
lock
inc
inc
mov
xchg
cld
loopne
pop
adc
push
push
push
or
xchg
pop
adc
jbe
xor
jle
pop
stos
jl
dec
or
xchg
pop
adc
jbe
xor
inc
mov
push
frstor
xchg
pop
adc
retf
push
xor
jecxz
out
pusha
icebp
mov
push
loope
push
ret
arpl
or
jle
and
lahf
cmp
loope
push
ret
fs
adc
push
adc
jge
inc
dec
xor
push
in
aaa
scas
imul
mov
(bad)
pop
jo
(bad)
fnstenv
(bad)
fnstenv
pusha
push
inc
cmp
paddsb
arpl
xchg
and
push
loope
push
ret
arpl
dec
cmp
mov
loope
push
ret
fs
adc
jle
adc
inc
dec
mov
inc
inc
xchg
imul
jae
cld
imul
pop
inc
fsubr
in
push
xchg
sub
inc
arpl
ret
loopne
push
add
lahf
dec
cdq
(bad)
fidivr
dec
loope
push
ret
arpl
into
adc
mov
inc
dec
mov
inc
inc
mov
stos
adc
dec
mov
inc
inc
ret
mov
jge
inc
dec
mov
inc
ret
leave
dec
test
jae
push
push
enter
fdiv
push
inc
xchg
sub
jmp
xchg
and
jae
adc
retf
popw
jecxz
xor
dec
and
lock
retf
xchg
pop
jecxz
xchg
mov
push
lock
retf
xchg
jecxz
mov
and
lock
push
sbb
pop
jecxz
mov
inc
icebp
jle
push
lock
jg
mov
imul
das
sbb
inc
pop
(bad)
loopne
in
push
xchg
mov
cmp
adc
push
dec
cdq
(bad)
loope
ret
repz
cmp
in
inc
pusha
jne
xchg
nop
inc
rcl
inc
push
ins
mov
push
loope
cmp
dec
push
add
fwait
or
loope
je
sbb
cli
cmp
loope
and
loope
je
fstp
inc
outs
repnz
dec
lock
retf
and
loope
push
ret
arpl
adc
rcl
jge
inc
dec
mov
inc
inc
mov
not
adc
inc
dec
xor
push
out
xor
rcl
loopne
daa
push
jns
je
push
mov
push
ret
jmp
ret
push
jle
jmp
adc
inc
dec
mov
inc
inc
ret
mov
jge
inc
dec
mov
inc
inc
or
push
adc
inc
dec
xor
rcl
loopne
inc
inc
stc
mov
ins
xor
imul
lock
in
sahf
inc
lock
test
push
adc
sbb
adc
inc
dec
xor
call
(bad)
pop
gs
pop
inc
inc
stc
jne
outs
xor
gs
pop
inc
inc
jns
push
outs
xor
gs
pop
inc
inc
stc
push
push
ins
xor
cmp
inc
shr
lock
adc
cmc
rcr
in
xchg
dec
xor
cdq
(bad)
scas
cmp
xor
arpl
xor
jp
pusha
lock
cmp
loope
push
ret
arpl
cmp
mov
push
loope
push
ret
fs
rcr
cmp
loope
push
ret
fs
dec
daa
shr
dec
xor
loop
jnp
mov
repnz
pusha
mov
vmovd
pop
push
in
nop
jl
fist
adc
xlat
test
cmp
in
les
mov
mov
jnp
cli
test
mov
cmps
inc
add
test
js
jmp
(bad)
mov
push
loope
cmp
pop
dec
add
mov
cdq
pop
push
jae
jns
jnp
mul
repnz
iret
inc
dec
add
xchg
ds
(bad)
loope
push
fisttp
pop
outs
repnz
add
mov
and
ret
arpl
adc
ror
adc
pop
dec
mov
pop
inc
mov
(bad)
or
jge
pop
dec
xor
dec
out
xor
into
xchg
(bad)
mov
cmp
jbe
outs
push
dec
bound
jb
inc
(bad)
inc
ret
jmp
ret
push
pusha
in
jmp
adc
pop
dec
mov
pop
inc
ret
mov
jge
pop
dec
mov
pop
inc
or
or
jge
pop
dec
xor
dec
out
xor
into
xchg
(bad)
loopne
pop
inc
stc
mov
ja
cld
loop
cs
pop
lock
push
in
add
call
cdq
fisttp
jmp
jl
pop
and
ret
mov
push
jnp
push
fistp
mov
inc
cmp
xchg
retf
popa
fisub
add
and
aas
(bad)
cmp
cmp
adc
xor
jae
cmp
jl
and
adc
pop
fwait
pminsw
jae
inc
jbe
enter
fmul
adc
inc
fwait
cmp
lds
adc
pop
dec
xor
enter
jnp
loopne
pop
inc
stc
sbb
iret
xchg
(bad)
mov
add
dec
cmp
icebp
(bad)
push
sbb
fwait
jecxz
setl
je
xor
fisubr
fnstsw
fistp
xor
pop
jo
fstp
mov
movs
mov
(bad)
(bad)
jnp
loopne
pop
inc
stc
aad
push
(bad)
mov
loopne
pop
inc
stc
movs
dec
outs
xor
xchg
(bad)
push
jnp
loopne
cmp
test
sbb
mov
and
push
lock
mov
ja
fnsave
inc
fs
or
lock
dec
xor
dec
xchg
pop
daa
push
loopne
dec
ret
std
xchg
retf
xchg
(bad)
sar
loopne
cmp
push
aad
sbb
sbb
mov
out
push
lock
aad
sbb
mov
cmp
xor
sbb
mov
xchg
push
lock
push
inc
mov
je
fstp
rcr
xchg
jmp
xchg
mov
or
mov
outs
cwde
jl
loope
adc
pop
dec
mov
pop
inc
ret
mov
jge
pop
dec
mov
pop
inc
or
or
jge
pop
dec
mov
pop
ret
aad
mov
xchg
or
jge
pop
dec
mov
pop
inc
xchg
scas
mov
xchg
lahf
sbb
mov
inc
enter
fcom
ret
jns
cmp
jmp
(bad)
lock
dec
xchg
(bad)
adc
push
loopne
dec
ret
std
div
adc
or
cmps
cmp
dec
ret
mov
pop
add
shl
xor
dec
ret
retf
jno
bound
sbb
jmp
adc
add
jae
sub
sbb
or
mov
sub
jae
xor
lea
or
mov
push
cdq
cmp
aad
adc
pop
dec
xor
retf
push
jns
loopne
pop
inc
stc
or
int
(bad)
cmps
jns
loopne
cmp
add
push
sbb
cdq
jecxz
call
xor
into
imul
pushf
fstp
add
pop
jo
fistp
mov
jo
cmps
mov
(bad)
out
jns
loopne
pop
inc
stc
lds
xor
retf
(bad)
jns
loopne
pop
inc
stc
aad
outs
xor
xchg
(bad)
push
jns
loopne
cmp
mov
sbb
mov
adc
push
lock
push
fisub
mov
jne
frstor
inc
fs
cli
pop
pop
lock
dec
xor
dec
xchg
(bad)
ss
loopne
dec
ret
std
or
pop
jle
loopne
cmp
push
sbb
push
jecxz
sbb
push
lock
rcl
ds
jecxz
stos
jnp
icebp
out
push
lock
rcl
cs
jecxz
cmp
icebp
idiv
outs
push
jle
inc
mov
jb
(bad)
(bad)
push
xchg
fiadd
inc
cmc
push
xchg
xchg
mov
sub
adc
jg
jl
icebp
or
jge
pop
dec
mov
pop
inc
ret
mov
jge
pop
dec
mov
pop
inc
or
or
jge
pop
dec
mov
pop
ret
aad
mov
xchg
push
or
jge
pop
dec
mov
pop
inc
xchg
mov
push
jae
movs
jae
enter
fsub
dec
add
idiv
jg
retf
lock
add
push
loopne
dec
ret
std
(bad)
mov
(bad)
mov
push
ds
lock
jg
daa
loop
and
ffree
adc
and
in
ret
xchg
jecxz
pop
xchg
mov
and
loopne
dec
ret
mov
ds
cs
xchg
iret
push
dec
xchg
(bad)
shl
push
loopne
dec
ret
xchg
sbb
cld
push
pop
ror
push
lock
cli
and
loopne
dec
ret
xchg
mov
jg
loopne
cmp
jns
rcl
push
pop
jecxz
dec
adc
icebp
call
sbb
fistp
push
loope
dec
ret
fs
test
ja
(bad)
xchg
push
pop
jae
jl
inc
enter
fdiv
vpminsw
vpminsw
inc
shr
ins
stc
jl
stc
rcl
mov
push
cmp
lock
pop
jecxz
cmps
movs
inc
icebp
bound
lock
push
sbb
aaa
popf
pusha
icebp
pop
and
loope
dec
ret
fs
push
daa
ror
lahf
and
sub
xor
xchg
(bad)
pop
outs
repnz
pusha
jo
dec
sbb
(bad)
pop
inc
xlat
out
call
xchg
adc
repnz
jl
jmp
adc
rcl
out
lahf
jecxz
jnp
pusha
icebp
sbb
dec
ret
arpl
push
or
add
loope
dec
ret
fs
aad
rcl
pushf
pusha
lock
and
loope
dec
ret
fs
push
shl
pushf
pusha
lock
jp
jnp
adc
push
ror
es
ins
sub
mov
pushf
(bad)
cmovge
loopne
dec
ret
std
ror
xchg
(bad)
adc
fs
inc
stc
or
xor
iret
xchg
(bad)
and
pushf
pop
inc
stc
sbb
xor
enter
jl
loopne
pop
inc
jns
dec
outs
xor
enter
jl
loopne
pop
inc
stc
stc
dec
ins
xor
pop
sar
adc
mov
pusha
jo
dec
sbb
cmps
pop
add
scas
pushf
jl
mov
inc
push
dec
push
cdq
(bad)
mov
pop
loope
sbb
lock
rcl
push
and
les
xchg
ret
jne
xchg
fwait
dec
xchg
(bad)
loopne
dec
ret
mov
ficomp
rcl
xchg
iret
mov
xchg
(bad)
xor
push
loopne
dec
ret
xchg
cmp
cld
ss
shr
push
lock
dec
xchg
(bad)
fisub
push
loopne
dec
ret
xchg
lahf
into
xchg
(bad)
(bad)
jge
loopne
ds
jns
rcl
xor
inc
icebp
cli
ds
lock
rcl
and
pusha
icebp
cmps
and
loope
dec
ret
fs
aam
rcl
(bad)
xchg
ja
jae
pop
jo
enter
(bad)
mov
jmp
jl
sbb
ud0
cdq
(bad)
ds
loope
dec
ret
retf
or
bound
sbb
cmp
xchg
movlps
mov
jae
nop
mov
enter
sbb
movlps
mov
pminsw
jo
enter
fsub
fsub
popf
cmp
pop
movlps
pop
dec
mov
pop
inc
ret
mov
jge
pop
dec
mov
pop
inc
or
mov
xchg
jp
adc
pop
dec
xor
leave
xchg
(bad)
mov
pop
inc
stc
xchg
dec
ins
xor
jg
cld
ss
shr
pop
lock
push
in
mov
add
adc
aas
xchg
jl
retf
sub
ret
mov
pop
fnsave
and
mov
or
inc
lock
retf
cmp
adc
jmp
adc
inc
xchg
pminsw
mov
jl
ja
adc
outs
xchg
pminsw
jae
je
inc
enter
fcomp
xlat
xor
add
jge
push
dec
xor
inc
call
(bad)
loopne
push
inc
stc
rol
sub
xchg
(bad)
jp
add
jl
push
jns
fist
cmps
xchg
jecxz
inc
sahf
pusha
icebp
and
loope
bound
jmp
outs
repnz
jo
(bad)
sbb
enter
push
sub
add
imul
and
ret
arpl
fild
xchg
popa
add
jge
push
dec
mov
push
inc
or
mov
adc
push
dec
xor
out
aaa
xchg
(bad)
xchg
(bad)
shl
loopne
xor
arpl
push
imul
jg
frstor
fsubrp
scas
leave
inc
pop
add
push
push
push
push
xor
xchg
jl
inc
dec
adc
ficom
push
adc
mov
call
sbb
jecxz
pop
test
push
lock
push
sbb
out
xchg
pusha
icebp
xchg
sub
loope
inc
ret
fs
(bad)
shl
(bad)
xchg
cmps
adc
mov
enter
fcomp
sub
sub
inc
inc
outs
fild
(bad)
push
sub
loopne
inc
ret
std
and
xchg
(bad)
bound
loopne
xor
(bad)
sbb
test
push
lock
push
sbb
dec
lahf
pusha
icebp
sub
loope
inc
ret
fs
xchg
rol
mov
jae
call
dec
inc
fdivr
clc
push
xchg
loopne
ret
xchg
cmp
out
add
mov
out
jl
jecxz
push
in
adc
ret
mov
(bad)
jo
loopne
xor
popa
fst
add
jecxz
pop
stos
inc
icebp
jmp
sbb
das
xor
icebp
cli
xor
inc
fst
and
jecxz
aas
cmp
mov
push
lock
pusha
outs
push
jb
or
cmp
push
pop
ins
shl
cdq
(bad)
loope
das
dec
fnstenv
inc
add
jecxz
cdq
(bad)
mov
pusha
jnp
lahf
imul
das
mov
fadd
loope
xor
pop
jae
fbld
pop
aaa
dec
outs
repnz
das
into
jmp
adc
cdq
(bad)
loope
push
inc
jmp
pop
lock
ret
jmp
fst
cmp
stc
retf
lock
push
sbb
ret
mov
or
jmp
fst
cmp
stc
(bad)
dec
addr16
jle
push
inc
stos
mov
lds
push
inc
ret
arpl
fld
ror
xchg
and
in
push
loope
inc
ret
arpl
sbb
rcr
xchg
and
repz
loope
inc
ret
fs
pop
daa
shr
xchg
and
ret
loope
inc
ret
fs
pop
sub
cmp
xor
jb
jnp
sbb
repnz
pusha
jo
les
in
fdiv
hlt
xchg
into
loopne
inc
add
fistp
ror
dec
loope
push
inc
jmp
jbe
bound
lock
ret
jle
mov
stos
or
jl
or
adc
mov
dec
xor
std
fcom
xchg
adc
mov
pop
xor
in
fcom
xchg
jecxz
mov
xor
fstp
push
sbb
adc
mov
jle
push
lock
imul
xchg
fisubr
out
int3
push
push
sbb
xor
xchg
jl
fisttp
jne
fidivr
cli
push
add
mov
ret
arpl
cwde
or
cli
xchg
mov
loope
inc
ret
arpl
pop
cmp
or
push
loope
inc
ret
fs
pop
daa
rcr
xchg
and
repnz
loope
inc
ret
fs
pop
sub
sub
xor
bound
fisttp
push
outs
repnz
pop
pusha
jo
ret
sbb
push
sub
loopne
inc
add
retf
pop
cdq
pop
rcl
dec
xchg
and
sub
jg
adc
ret
(bad)
lds
loopne
xor
push
sbb
jecxz
ja
pusha
icebp
lahf
sub
loope
inc
ret
mov
ror
sub
loope
inc
ret
fs
pop
sub
sahf
xchg
and
jl
xor
jmp
imul
loop
inc
lock
test
scas
push
and
fwait
cmp
add
mov
fist
jae
les
jl
iret
add
mov
(bad)
xchg
pminsw
push
jae
in
jnp
enter
fdiv
add
mov
out
(bad)
sbb
call
dec
addr16
sbb
adc
pop
outs
pop
pop
cmp
test
inc
mov
adc
test
(bad)
aaa
dec
lock
ret
test
xor
and
adc
push
dec
xor
push
(bad)
jbe
add
or
jns
inc
outs
xor
ret
xchg
pop
ja
loopne
push
inc
stc
cmp
ret
xchg
(bad)
push
ja
loopne
push
inc
stc
or
mov
rcl
cmp
cmp
jmp
adc
inc
push
std
sbb
xchg
xchg
jl
(bad)
dec
adc
outs
xor
mov
push
and
xchg
jl
(bad)
dec
adc
outs
xor
jnp
(bad)
sbb
cmps
xchg
jl
lods
dec
adc
pop
pop
jo
push
inc
fwait
mov
adc
lock
dec
pop
lock
int
stos
or
jl
xchg
dec
stos
packssdw
pop
loope
xchg
jecxz
pop
bound
push
ret
ret
xchg
(bad)
loopne
push
inc
mov
mov
xchg
(bad)
pop
je
loopne
push
inc
jns
inc
outs
xor
je
loopne
push
inc
stc
inc
inc
outs
xor
je
loopne
push
inc
stc
push
inc
ins
xor
mov
shl
sub
pop
xchg
pop
cmp
aas
dec
adc
inc
push
sub
push
and
xchg
jl
and
jne
outs
xor
or
bound
jne
outs
xor
js
(bad)
sbb
mov
jne
pop
pop
jo
push
inc
fwait
into
push
inc
jmp
imul
pusha
pop
cmp
stos
mov
(bad)
in
adc
cmp
dec
lock
inc
ret
test
xchg
jl
dec
push
adc
push
dec
mov
push
ret
mov
mov
adc
push
dec
mov
push
add
push
adc
push
dec
mov
push
inc
xchg
sbb
adc
push
dec
mov
push
inc
fwait
or
jae
adc
pusha
sbb
adc
adc
sub
cmp
ret
xchg
sub
jae
xchg
(bad)
repnz
loopne
inc
ret
mov
jbe
shr
xchg
(bad)
call
xchg
bound
cld
outs
push
rol
lock
mov
inc
ret
xchg
xor
fisubr
push
enter
sbb
call
jne
dec
push
add
cdq
(bad)
fisubr
jbe
sahf
xchg
arpl
out
adc
push
(bad)
lock
push
inc
ret
xchg
(bad)
loop
add
adc
cmp
inc
push
(bad)
bnd
loopne
push
inc
cmp
rcl
mov
inc
outs
xor
xchg
(bad)
xchg
jne
loopne
push
inc
stc
mov
fidivr
ror
mov
fsubp
mov
adc
aam
mov
stos
push
ins
mov
cwde
pop
push
loope
aad
(bad)
add
fwait
out
(bad)
shl
jp
(bad)
xchg
outs
repnz
aad
iret
jo
add
mov
cmps
jb
jle
jp
pop
stos
outs
repnz
dec
lock
cwde
pop
lock
loope
add
xchg
pop
xor
sub
jge
inc
clc
adc
jnp
jge
xchg
pop
in
js
ret
call
bound
js
jbe
ret
inc
mov
out
mov
xchg
xchg
sbb
and
(bad)
or
jno
or
jo
or
retf
xor
inc
xchg
(bad)
call
cwde
(bad)
dec
push
loope
mov
pop
cmps
adc
(bad)
push
aad
loopne
mov
mov
jne
mov
mov
pop
mov
push
std
emms
push
cmp
dec
popf
das
jno
imul
and
sar
loope
clc
adc
out
and
ret
aam
icebp
icebp
push
jge
xchg
cwde
pop
push
loope
aam
fisttp
loope
out
(bad)
push
mov
mov
pop
jns
mov
xor
inc
mov
in
inc
out
sbb
imul
mov
jne
cmps
dec
xor
mov
pop
loopne
mov
or
mov
pop
loopne
mov
mov
jne
mov
xor
stc
cwde
(bad)
cmps
mov
dec
adc
jle
and
jb
int3
mov
inc
or
push
xor
imul
retf
mov
fnsave
adc
stos
push
mov
stos
js
push
mov
fcomp
lods
mov
dec
pushf
movs
inc
jb
repnz
jb
add
jb
push
jg
pop
jmp
jo
mov
test
adc
mov
outs
mov
push
push
out
jmp
out
add
adc
test
bound
ja
xor
mov
jnp
push
mov
dec
xor
sbb
dec
push
mov
dec
and
dec
sbb
test
jmp
inc
jnp
inc
fld
mov
imul
adc
(bad)
aaa
bound
retf
cwde
shl
xchg
add
mov
xor
je
push
cld
dec
cmps
or
in
test
cs
add
jb
je
mov
movs
lea
(bad)
out
jp
or
or
and
lea
je
push
adc
cwde
or
inc
cmp
xchg
test
mov
jb
mov
movs
adc
mov
jp
fadd
inc
push
pop
mov
jecxz
pushf
adc
(bad)
aaa
(bad)
imul
mov
lea
je
in
int
cwde
shl
les
ror
retf
jae
push
les
mov
sbb
dec
gs
jmp
inc
xor
jb
dec
mov
lea
mov
push
mov
sbb
inc
jb
mov
push
mov
or
inc
jb
mov
mov
cmp
inc
jb
mov
or
jg
shl
jp
xchg
daa
inc
fcom
and
push
adc
mov
push
fst
sbb
daa
pushf
pop
push
cmps
ficom
bound
push
popa
out
call
neg
aad
aas
pop
xchg
mov
add
push
cmps
test
push
movs
leave
pop
xchg
and
push
daa
xlat
fst
rcr
pusha
pop
fist
loop
adc
gs
push
and
pop
(bad)
pusha
mov
xlat
popa
mov
pop
and
pop
push
movs
cmp
and
push
and
mov
or
(bad)
daa
pop
sbb
xchg
fist
and
fwait
adc
pop
sbb
and
xchg
mov
stos
sbb
stos
fst
and
nop
loop
fcmovnbe
loope
popf
adc
inc
ficom
and
lahf
push
fs
xchg
popa
adc
push
loope
fcom
cmps
loope
adc
cs
test
in
jp
inc
inc
xchg
or
adc
(bad)
dec
pusha
lea
push
or
cmp
cli
sbb
add
cmp
lea
out
xor
psllq
gs
ror
call
test
sub
(bad)
xchg
into
movs
jno
jb
or
ja
or
nop
jmp
hlt
cli
les
ja
mov
ja
dec
mov
jb
inc
adc
jb
jne
mov
xchg
or
bound
mov
lea
inc
xor
push
jb
jo
(bad)
xor
sar
sbb
sbb
lea
lds
or
pop
jmp
mov
sti
sbb
lea
repnz
jb
pop
mov
xor
pop
mov
int3
loop
or
repnz
idiv
fwait
or
dec
sub
fldcw
mov
dec
gs
in
cmp
push
mov
mov
dec
jne
xchg
dec
mov
mov
lea
movs
ror
mov
inc
pop
(bad)
int
ins
mov
cmps
repnz
mov
dec
cld
test
loop
(bad)
imul
ins
xchg
sub
dec
pusha
sub
dec
mov
jmp
ins
mov
loope
ins
mov
mov
pop
popa
and
jecxz
popa
lds
pop
adc
fistp
rol
jno
adc
mov
xchg
in
jmp
ins
mov
enter
lods
inc
mov
test
inc
jmp
cdq
inc
cmp
xor
data16
jo
or
fldcw
mov
shr
push
test
aaa
pop
jb
call
rcr
push
mov
sbb
loopne
push
xchg
pusha
loopne
push
data16
push
movs
sub
push
mov
mov
xchg
mov
(bad)
(bad)
addr16
(bad)
and
cdq
push
sbb
dec
pop
adc
fist
arpl
push
out
pop
adc
ficomp
mov
mov
lahf
xchg
pusha
stos
pop
push
addr16
pushf
nop
xor
adc
jle
push
out
pop
push
out
fcom
enter
dec
ficom
mov
push
pop
adc
fcomp
mov
out
push
out
sbb
arpl
xchg
and
push
and
push
shl
cmp
daa
cld
sbb
sbb
in
pop
push
and
fist
and
pushf
push
mov
pushf
fist
in
fst
movs
das
pop
xchg
popa
jmp
xchg
addr16
push
cmps
xor
addr16
pushf
push
loope
pop
pop
out
call
dec
pop
aam
rcr
(bad)
fcmovbe
mov
ficomp
jecxz
pop
push
in
fist
in
pop
adc
mov
push
and
pushf
pop
bound
test
inc
(bad)
jp
ss
nop
or
jge
inc
movs
push
mov
jl
addr16
dec
jmp
pop
test
popf
mov
leave
mov
stos
scas
in
jnp
pop
stos
sbb
pop
hlt
jae
push
imul
mov
shr
outs
mov
push
and
xchg
jmp
mov
les
xchg
sub
int
mov
dec
jno
dec
int3
push
and
or
mov
enter
mov
iret
call
cmp
repz
je
pusha
je
mov
mov
mov
push
or
loopne
xlat
jecxz
pop
jmp
mov
sti
push
adc
sahf
test
jnp
movs
dec
cli
dec
jg
sahf
pusha
in
adc
jb
sbb
stos
iret
jnp
dec
in
aad
in
jle
jb
scas
mov
adc
aas
xor
lds
ds
call
fdiv
out
cmp
fisubr
daa
dec
jl
cli
fsubr
ins
jne
gs
sbb
bts
popa
add
lea
pop
cli
xor
cmps
lea
pop
jae
cwde
out
pop
mov
cld
movs
lds
std
inc
or
imul
shr
stos
rol
jmp
call
mov
inc
fidiv
mov
cmps
rcr
test
inc
sbb
push
repnz
sbb
fidivr
mov
out
repnz
fisub
mov
mov
push
fsubr
pop
fcmovnbe
sub
pop
fsub
iret
out
imul
sbb
movs
cld
jg
pop
ds
push
push
push
cmp
push
jg
test
xchg
xchg
ret
push
jecxz
push
xchg
popaw
nop
(bad)
and
push
arpl
rcl
scas
xchg
xchg
arpl
xchg
push
and
jecxz
push
(bad)
loope
adc
and
adc
or
fs
rcl
in
rcl
sbb
xchg
and
adc
imul
push
loopne
aad
es
rcl
mov
rcl
inc
xchg
pop
and
push
adc
adc
push
xchg
nop
out
push
aad
pop
push
push
popa
popa
push
xchg
and
nop
and
push
out
nop
xchg
cmps
je
push
out
adc
daa
rcl
test
out
xchg
xchg
and
push
fs
adc
adc
shl
rcl
lahf
nop
pop
loop
push
adc
push
adc
stos
push
adc
adc
call
popa
xchg
push
popa
ret
mov
lds
add
adc
xchg
mov
dec
inc
rol
arpl
cmp
mov
or
mov
and
add
pop
loope
imul
mov
fdivr
(bad)
jmp
add
xor
pop
loopne
cmp
and
nop
mov
rol
int3
jns
sub
ret
mov
push
(bad)
mov
add
xchg
pop
ins
inc
(bad)
std
cmp
add
mov
jecxz
mov
pop
cmp
push
lods
dec
mov
cld
imul
add
jns
test
lds
aam
jg
rol
cwde
fdiv
pop
jb
call
mov
dec
cmp
retf
sbb
jae
lea
adc
repnz
push
repnz
ret
mov
adc
stos
inc
ss
jbe
inc
movs
adc
shl
loope
mov
dec
aam
test
ds
jp
lea
dec
add
mov
in
call
enter
mov
ins
mov
mov
mov
data16
mov
jge
enter
(bad)
loope
call
sub
bound
jg
sbb
test
popf
ins
test
fisubr
or
lods
mov
xchg
iret
loope
mov
ins
leave
idiv
fsub
add
sub
mov
sti
mov
xor
mov
mov
mov
inc
mov
rcr
xchg
cmp
or
movs
mov
pop
sbb
cmp
sbb
xor
repnz
inc
cli
and
jle
aaa
jecxz
std
cmp
xchg
cmp
add
test
call
cmp
sub
leave
jns
and
mov
mov
add
sub
jp
add
jns
addr16
aas
pop
(bad)
cmp
sub
repnz
cmp
or
movs
sti
adc
cmp
std
cli
or
icebp
push
mov
movs
sti
es
cmp
loop
out
xchg
icebp
cmp
jns
icebp
je
mov
ds
into
sub
mov
xor
push
or
cmp
imul
sbb
xor
and
cmc
cmp
jns
cmp
je
dec
bnd
sub
or
cmp
imul
mov
xor
mov
out
cmp
jns
test
scas
and
fidivr
sub
sti
cmp
js
jp
jns
les
xchg
cli
in
cmp
aas
pop
ret
sub
mov
cmp
(bad)
hlt
cmp
cs
add
aaa
xor
inc
js
mov
mov
xchg
push
hlt
cmp
cmp
sub
mov
xor
jbe
out
cmp
or
repnz
js
cmp
js
sub
loop
cmp
js
jmp
and
and
sub
cs
add
xor
and
xor
ss
cmp
js
sar
and
mov
ret
retf
xor
in
bound
ins
cwde
xchg
inc
loop
loopne
idiv
cs
js
adc
mov
in
and
js
pop
ds
lds
sbb
hlt
jnp
mov
jne
mov
cmp
mov
stc
mov
jp
xchg
inc
shr
pop
imul
lds
xchg
cmp
xchg
mov
pop
mov
ja
push
cli
(bad)
jbe
cmp
jmp
movs
jnp
cli
stc
jp
jnp
neg
mov
rcl
cmp
jns
dec
mov
push
push
repnz
push
aam
inc
adc
loopne
xlat
shl
into
rcl
push
(bad)
adc
xlat
aad
and
xchg
sbb
loopne
push
push
and
jmp
movs
jae
shl
cmp
pusha
cmp
mov
les
adc
(bad)
aam
cmps
push
xchg
adc
rcl
xlat
mov
pop
xchg
nop
and
rcl
out
adc
out
push
adc
mov
xchg
loop
adc
and
aam
daa
xchg
xchg
mov
mov
out
xlat
push
jecxz
xlat
xlat
and
(bad)
mov
movs
(bad)
xchg
data16
push
arpl
push
shl
aad
arpl
push
push
data16
shl
add
adc
adc
and
xlat
shl
xchg
push
arpl
and
push
push
jecxz
aam
and
(bad)
mov
mov
mov
and
inc
jb
pushf
inc
jb
les
push
add
cdq
xchg
test
xchg
inc
mov
mov
dec
adc
jb
pushf
lds
xchg
jbe
inc
jb
cmp
push
sbb
mov
pushf
test
stc
enter
test
cli
dec
test
or
push
push
pushf
lds
(bad)
jp
leave
add
jne
test
imul
stos
cld
and
dec
adc
jb
pushf
lds
xchg
inc
xchg
(bad)
cmp
push
das
sahf
adc
sbb
jbe
test
stc
enter
test
xchg
xchg
xchg
lea
adc
add
xchg
and
mov
loopne
mov
jecxz
retf
push
and
push
daa
loop
xchg
mov
stos
or
push
loopne
pmullw
retf
cld
retf
shl
mov
ret
dec
shl
push
or
loopne
dec
xlat
and
xchg
loopne
or
fwait
dec
push
data16
push
jecxz
or
data16
push
es
or
mov
xchg
cmps
jl
push
pusha
mov
retf
(bad)
or
enter
dec
dec
push
data16
(bad)
adc
ror
push
out
dec
xchg
pusha
fmul
push
arpl
mov
loope
or
arpl
retf
adc
cmps
jae
xchg
out
int3
push
and
or
and
or
push
daa
mov
out
dec
push
loope
mov
mov
(bad)
xchg
and
dec
push
arpl
inc
dec
mov
iret
test
mov
add
pushf
cld
sbb
int3
push
xchg
cmp
into
adc
fsub
cmps
jg
or
aaa
ror
add
adc
jnp
jnp
xchg
shl
cmp
dec
aaa
or
(bad)
je
add
mov
sbb
inc
sbb
mov
cli
aad
clc
mov
mov
mov
xor
data16
dec
repnz
aas
scas
ret
mov
pop
mov
mov
mov
add
pop
jne
sbb
mov
fcomp
hlt
icebp
mov
push
jb
or
pop
and
ins
idiv
movs
dec
adc
lods
icebp
repz
bound
cmps
push
aad
in
sar
ficomp
cmp
cmp
xlat
add
mov
or
imul
pop
fdivr
mov
fcom
cli
or
lahf
in
jecxz
push
in
lahf
xor
call
div
sub
mov
fmul
ins
jg
adc
inc
leave
jle
push
and
jb
stos
les
mov
and
push
cli
out
or
and
lea
xchg
mov
mov
xchg
(bad)
xchg
pushf
add
(bad)
nop
cmp
xchg
inc
xchg
(bad)
push
dec
or
rcr
ficom
xor
nop
add
mov
imul
cwde
lods
(bad)
push
inc
loop
adc
push
pop
nop
test
(bad)
nop
adc
jl
mov
iret
rol
(bad)
rcl
adc
jb
push
nop
ds
lods
and
mov
pop
sbb
sub
adc
push
fsubr
rcl
(bad)
pop
call
add
inc
nop
cmc
sub
jg
(bad)
adc
mov
sbb
mov
jecxz
dec
adc
push
dec
adc
out
dec
adc
bound
enter
mov
mov
aaa
mov
mov
or
xchg
mov
retf
psrlw
aam
push
and
mov
loopne
retf
daa
dec
nop
cmps
jmp
leave
aad
test
push
out
dec
aam
cmp
(bad)
cmps
add
(bad)
pusha
dec
mov
and
dec
adc
push
retf
sahf
mov
bound
adc
sub
push
out
enter
dec
xchg
and
or
pusha
mov
dec
push
out
or
bound
retf
push
enter
mov
into
xchg
fisttp
aam
in
xchg
or
es
leave
shl
mov
and
(bad)
and
push
(bad)
and
xchg
bound
mov
and
dec
adc
int
xchg
out
or
fs
or
out
or
mov
mov
mov
sub
xchg
loop
or
mov
es
inc
jb
and
std
dec
dec
or
cmps
sti
rol
jb
xchg
add
pushf
stos
and
or
and
mov
retf
rol
rcr
jle
gs
bound
or
arpl
hlt
std
jp
daa
inc
xlat
pushf
sbb
push
xor
xor
xor
pop
mov
xor
repnz
or
pop
movs
adc
ret
aaa
pop
xchg
pushf
pop
push
xor
fcom
mov
inc
icebp
jecxz
fsub
pop
jmp
adc
loope
popf
add
mov
out
in
repz
add
pop
movs
adc
ins
mov
cmp
pop
mov
mov
fst
pop
sbb
lahf
mov
mov
mov
outs
test
lock
cmp
sbb
cmp
or
ror
(bad)
arpl
mov
lahf
(bad)
aad
stos
lea
mov
adc
(bad)
(bad)
movs
out
and
dec
aad
ins
mov
bnd
cmp
mov
stos
lea
cld
mov
mov
mov
xchg
outs
fdivr
mov
dec
pop
cmps
fmul
loopne
or
cmp
jp
or
popf
es
adc
mov
pop
adc
sti
sbb
pop
and
loop
not
ds
loope
jo
les
mov
jmp
clc
icebp
int
iret
push
and
mov
stos
(bad)
dec
(bad)
inc
cmp
(bad)
(bad)
push
(bad)
pop
push
(bad)
sbb
dec
fld
int3
and
scas
mov
cmp
jbe
sti
sbb
and
cmp
mov
and
(bad)
jmp
cmp
mov
cmp
sub
sbb
fstp
cmps
fidivr
xor
push
les
dec
xchg
sti
pop
dec
mov
jnp
mov
push
stos
or
inc
push
loop
pop
vmovntps
pop
or
push
aam
xchg
and
sti
sbb
sbb
cmp
sbb
iret
jnp
mov
test
imul
or
into
cmp
xor
sahf
es
int3
scas
data16
mov
imul
adc
es
fsubr
inc
mov
shl
(bad)
xor
rcl
fidivr
jmp
xor
fidivr
pop
repnz
jmp
pop
icebp
(bad)
push
fidivr
int3
inc
push
fld
jno
scas
push
mov
xor
sub
mov
jnp
pop
fsubp
push
(bad)
outs
jnp
ret
ficom
loopne
inc
jbe
out
shr
(bad)
(bad)
jnp
add
sbb
or
xchg
bts
fnsave
test
ficomp
inc
mov
stos
inc
fdiv
sbb
mov
popa
cli
mov
push
sahf
add
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
sahf
inc
jb
and
fs
inc
repnz
mov
xchg
mov
jl
sahf
lds
sahf
inc
jb
sahf
inc
jb
mov
adc
iret
xchg
jecxz
int
data16
pop
and
adc
out
dec
push
loopne
(bad)
and
push
and
int
daa
cld
mov
popa
xchg
adc
(bad)
leave
or
push
arpl
push
and
int
pusha
sahf
or
adc
push
mov
call
dec
xchg
and
push
jecxz
seto
mov
inc
xchg
cmps
inc
rcl
dec
adc
retf
cmps
push
inc
pop
es
inc
push
cmps
pop
xchg
and
push
cmps
mov
inc
push
mov
jmp
adc
inc
adc
jae
xchg
mov
jl
adc
adc
add
and
push
lea
push
xlat
inc
adc
fcmovnb
(bad)
mov
and
xchg
daa
and
push
pusha
sub
adc
loopne
adc
aas
inc
addr16
dec
mov
outs
and
std
pop
shl
xchg
inc
sbb
call
in
loope
inc
ror
in
cmps
push
cld
dec
inc
sub
imul
ds
imul
(bad)
push
imul
mov
xchg
cmp
out
and
mov
ins
or
rcl
sbb
mov
lea
xor
enter
adc
xchg
add
mov
mov
stos
push
push
nop
test
nop
add
mov
nop
add
mov
loopne
lods
ss
inc
push
or
sar
mov
jg
or
addr16
adc
aad
mov
stos
scas
or
neg
push
jbe
dec
nop
jg
dec
nop
inc
cwd
jae
sbb
jbe
lea
out
rcr
mov
outs
jp
mov
les
mov
and
dec
cli
out
add
lods
test
mov
fidiv
out
pop
arpl
(bad)
adc
test
add
data16
push
pop
into
out
les
sub
lods
(bad)
fcmovne
repnz
in
stos
mov
add
jo
enter
sub
mov
sbb
push
xchg
sbb
pushf
inc
scas
or
mov
sbb
dec
adc
jnp
out
inc
adc
cmp
inc
(bad)
rcr
pusha
inc
sbb
push
xor
push
push
ins
add
rcr
cmp
adc
pop
jmp
mov
shl
pop
pop
sub
sti
mov
add
dec
mov
push
sub
push
sub
sti
sar
add
repnz
jae
out
add
sti
xchg
out
sub
loope
push
inc
or
je
test
test
inc
xchg
cli
shl
or
xchg
add
mov
jge
dec
(bad)
sub
dec
push
pushf
sub
mov
shl
dec
ficom
xchg
cmp
retf
and
jb
pop
jb
push
stos
mov
add
cwde
dec
movs
lea
xor
out
push
(bad)
xchg
push
dec
test
cmp
stos
(bad)
pusha
cmps
(bad)
mov
mov
repnz
sbb
xor
mov
or
push
cdq
dec
lods
ins
movs
lea
(bad)
ins
cmp
and
mov
mov
sub
lea
jecxz
or
lods
lds
jne
jb
test
lea
and
stos
lea
or
mov
mov
adc
add
loopne
xchg
adc
rcl
mov
loop
test
bound
retf
popa
xchg
add
or
retf
adc
jns
xor
jmp
inc
push
xor
fsubr
dec
stos
push
dec
add
add
imul
add
xchg
adc
jb
inc
adc
mov
je
mov
push
aas
jb
(bad)
jae
stos
jmp
movs
and
dec
(bad)
jmp
sub
cmp
cli
xchg
mov
cmps
test
jne
jb
repz
cs
shr
sti
add
pop
push
push
sub
ins
loope
mov
mov
dec
adc
sub
mov
xchg
clc
sbb
mov
jg
imul
mov
add
repz
mov
mov
or
dec
xor
mov
jge
inc
in
adc
shl
inc
mov
adc
(bad)
sahf
sub
mov
sub
mov
(bad)
mov
rcr
mov
retf
dec
cmp
mov
idiv
dec
cmp
jnp
xlat
sub
test
test
sbb
mov
sbb
jp
dec
add
xchg
(bad)
fcom
popf
xor
dec
add
inc
repz
outs
movs
push
or
mov
test
inc
in
hlt
mov
mov
imul
les
dec
and
sti
mov
in
imul
mov
mov
out
jmp
xor
imul
test
mov
frstor
mov
push
js
in
call
push
dec
sti
ds
mov
outs
push
pusha
retf
bound
ror
sub
popa
xor
clc
pop
xor
idiv
xor
add
ins
sti
cmp
xor
ins
push
jno
shl
mov
mov
(bad)
dec
addr16
pop
mov
arpl
jne
mov
xchg
sbb
adc
sar
jl
xchg
lds
add
mov
(bad)
cli
call
mov
fild
cdq
cmp
mov
dec
mov
out
gs
jmp
(bad)
lea
stc
dec
fwait
js
sub
in
in
int
pop
or
xor
fcomp
test
add
ror
call
xlat
push
jb
mov
test
cs
gs
idiv
dec
leave
push
aas
xor
test
ins
fwait
stc
mov
sub
cli
mov
inc
jg
pushf
test
add
push
xchg
push
lods
les
sbb
sub
out
jecxz
add
mov
jl
push
mov
or
lods
dec
jb
inc
aad
and
arpl
jo
scas
retf
mov
dec
in
sub
test
(bad)
loop
and
push
mov
xchg
js
lods
fsubr
addr16
mov
pop
inc
aad
sub
jb
mov
mov
mov
add
lea
ss
add
aas
dec
or
stc
fld
sti
das
out
into
add
xor
fimul
fdivr
or
repz
dec
(bad)
in
gs
xor
add
pop
push
mov
(bad)
jmp
push
fs
fld
mov
adc
mov
hlt
push
push
data16
mov
xchg
mov
pop
jb
xchg
lods
test
jp
addr16
xor
mov
dec
mov
ss
bound
xchg
inc
sub
push
imul
jb
xchg
call
mov
adc
mov
xchg
movs
jge
ret
ss
mov
das
int3
pushf
shr
ja
inc
call
loop
hlt
xchg
ds
jbe
popf
cs
sti
inc
in
mov
or
retf
imul
dec
cli
push
jne
inc
inc
stos
dec
push
pop
cmp
push
push
jb
push
imul
push
jp
pusha
add
xor
stos
sar
idiv
pop
lea
leave
add
mov
mov
mov
or
mov
(bad)
stos
pop
sub
push
movs
inc
adc
dec
cdq
inc
xchg
mov
push
mov
mov
adc
jb
movs
inc
jb
(bad)
push
jb
push
jg
popf
xchg
(bad)
div
xchg
ret
push
xchg
add
sbb
call
jb
test
push
lea
test
mov
test
push
imul
cli
cmp
xchg
test
gs
xchg
cmp
iret
push
push
dec
stos
lea
test
jp
pop
pop
mov
aad
rcr
push
push
movs
lea
or
sahf
lds
enter
sub
push
or
fist
push
(bad)
jg
int
add
xor
mov
aas
and
fstp
dec
or
(bad)
pop
inc
pop
jg
fcomp
pop
into
sbb
aaa
fsub
in
frstor
or
jmp
popf
adc
sbb
inc
test
je
pop
test
arpl
test
jno
mov
inc
jb
lods
test
jb
je
jo
lds
sbb
test
jne
add
jbe
lods
mov
out
jle
add
fld
mov
test
push
mov
xchg
add
enter
mov
inc
cdq
pop
stc
test
xchg
inc
jb
xchg
add
fmul
adc
or
pop
jmp
into
test
rcr
pop
jnp
shr
jbe
mov
mov
mov
das
sbb
test
(bad)
xchg
ret
xchg
cmp
add
adc
(bad)
out
pusha
cmp
daa
test
mov
cmp
dec
fstp
push
mov
sub
add
mov
push
or
add
mov
add
stos
mov
stos
inc
data16
jmp
or
mov
stos
mov
in
jp
jg
mov
mov
lds
mov
jns
mov
push
shl
loop
stos
pop
retf
mov
xor
xchg
les
test
movs
pushf
mov
jp
lea
test
adc
mov
sub
xor
jp
adc
mov
lea
push
mov
push
movs
lea
call
cli
mov
je
aas
lea
ins
nop
pop
adc
cmp
ds
dec
jo
aam
int
push
leave
mov
mov
push
dec
xor
addr16
test
ins
ror
test
or
inc
jo
sub
and
int3
out
call
std
adc
jp
fild
call
fiadd
push
sub
sysexit
xlat
inc
rcl
jge
push
stos
add
jb
mov
add
jno
nop
inc
jb
mov
or
push
rol
vsqrtss
(bad)
out
mov
xchg
aas
mov
xor
loop
jp
cdq
or
loope
cmp
cli
retf
jne
fnstsw
aad
imul
out
push
sbb
(bad)
in
mov
int3
push
popf
bound
xor
add
pop
repz
adc
mov
pusha
hlt
fsub
idiv
inc
sub
(bad)
mov
fstp
mov
or
mov
cs
sub
pop
movs
sti
rcl
retf
fmul
jg
mov
inc
mov
ret
and
mov
ret
mov
cmp
jno
pushf
add
xchg
sti
call
push
mov
pushf
mov
lods
pop
mov
in
mov
sub
cli
push
sub
jne
lahf
push
lods
pushf
out
int3
mov
shr
fs
push
mov
test
xchg
add
fcomp
mov
or
push
movs
lea
sub
test
int
dec
dec
push
aam
loopne
cli
or
int
(bad)
fisttp
imul
xchg
cli
mov
or
pushf
or
or
dec
mov
enter
xchg
and
popa
jo
in
xor
aas
or
rol
jb
fxtract
icebp
cmp
mov
cmp
enter
jno
mov
pop
sub
cmp
xchg
adc
sbb
pop
sbb
hlt
sub
rcr
sbb
add
xchg
mov
mov
pop
shl
out
dec
or
fcomp
mov
stos
and
scas
sti
into
dec
nop
out
mov
mov
call
mov
push
out
cdq
pusha
mov
sbb
cwde
bound
add
jb
js
cmp
dec
int
mov
ins
aas
jb
cmp
call
inc
popa
mov
into
xchg
or
shl
mov
gs
call
xchg
std
dec
cmp
ss
and
test
xchg
cmp
lea
jb
test
stos
ins
jne
je
fdivr
int3
stos
inc
or
(bad)
stc
cli
add
inc
mov
lea
push
inc
jb
push
out
mov
cli
ins
jne
iret
lods
add
repnz
xchg
lods
out
jmp
adc
push
jg
jp
test
sub
adc
xchg
add
mov
jne
(bad)
shr
cli
cld
test
popa
repz
push
sbb
adc
les
xchg
add
(bad)
bound
scas
jmp
movs
push
cmp
pop
inc
sub
dec
jne
movs
jo
stos
sbb
cmp
push
rol
mov
aas
ja
xchg
add
add
xchg
mov
pop
cld
fcomp
punpckhdq
stos
or
mov
iret
inc
pop
imul
scas
add
mov
xor
mov
lods
or
adc
cmp
test
(bad)
inc
addr16
push
test
cmp
jb
shr
mov
inc
(bad)
add
ss
popa
f2xm1
cs
inc
test
ret
dec
lock
jmp
mov
push
imul
push
test
in
adc
mov
outs
mov
stc
gs
jb
outs
dec
mov
scas
test
lds
repz
dec
jb
mov
inc
int3
ja
test
xchg
inc
jb
test
xor
add
aam
pop
cli
dec
int
in
pushf
(bad)
sar
or
nop
mov
imul
adc
or
pop
mov
dec
cmp
scas
mov
mov
push
push
and
cmp
arpl
or
jmp
in
jae
es
scas
add
pop
les
mov
ss
outs
push
jg
sbb
aas
dec
and
add
stos
scas
push
mov
loopne
push
(bad)
scas
lds
push
lods
dec
into
imul
cmp
fsubr
jnp
add
test
mov
fmul
jmp
into
mov
mov
pop
mov
mov
add
mov
dec
mov
nop
fsubrp
xchg
mov
mov
mov
sar
mov
packssdw
or
push
test
xchg
bound
pop
jmp
pusha
gs
paddq
popa
jg
into
and
push
inc
sbb
stos
sar
fdivr
sbb
pop
cmp
(bad)
(bad)
lods
(bad)
in
and
push
ret
or
loope
add
mov
pop
pop
xchg
in
dec
sbb
jl
dec
je
popa
mov
ftst
mov
sbb
dec
clc
call
dec
sbb
dec
sti
dec
pop
or
sbb
pop
dec
pop
and
pushf
add
mov
jno
repz
cmp
mov
cmp
test
cwde
imul
mov
adc
mov
pop
jp
sti
pop
cmps
adc
cmp
into
cmp
(bad)
mov
xchg
adc
pop
jp
pop
js
or
hlt
ret
jl
jp
push
xor
(bad)
jmp
inc
cmp
xchg
test
call
scas
xchg
adc
call
pop
sub
push
mov
pop
addr16
call
into
sbb
jb
jno
into
stc
add
or
jecxz
int3
dec
pop
cmp
push
mov
ins
mov
pusha
jne
xlat
xchg
in
repnz
cli
sahf
add
push
dec
sbb
xchg
mov
sub
into
dec
jb
pop
mov
loop
sbb
adc
sbb
mov
and
test
and
pop
retf
fimul
add
inc
and
or
jnp
push
ret
popa
mov
pop
cmp
imul
pusha
jg
enter
sub
aas
inc
mov
les
jp
test
adc
mov
dec
sbb
das
icebp
pop
stos
lea
or
jg
shl
repz
cld
and
fdivr
rcr
push
in
nop
add
(bad)
jnp
mov
cmp
call
or
pop
stos
fbstp
sti
xchg
mov
jmp
mov
loop
jmp
fist
sbb
sbb
fdivr
adc
test
pop
cmc
xchg
push
scas
add
loop
add
jmp
(bad)
mov
mov
not
mov
adc
mov
ja
and
lock
daa
inc
xor
(bad)
shl
ja
mov
adc
and
ja
and
adc
test
xor
and
not
popa
xor
mov
inc
je
cmps
retf
loope
aaa
push
mov
push
xor
in
mov
mov
(bad)
push
loopne
xor
stos
mov
mov
lock
bound
jae
arpl
icebp
push
mov
dec
xor
and
jo
mov
sbb
out
mov
cmps
and
xchg
loope
ja
bound
jo
movs
mov
aam
repnz
cmps
stc
repnz
mov
shl
arpl
xor
loope
xor
mov
aam
daa
movs
stos
cdq
pop
or
pop
cmp
mov
jg
lock
cmp
mov
add
shl
in
outs
ret
mov
lds
(bad)
loop
jo
sub
cmp
cmp
leave
ret
push
mov
bound
jb
and
fdiv
jns
xchg
lods
inc
aas
or
retf
mov
js
popf
pop
jmp
cmp
in
cmps
cmp
fdiv
mov
adc
sahf
xchg
cmp
jg
lea
jecxz
movs
add
mov
lds
jb
xchg
inc
xor
push
jg
xchg
adc
movs
add
(bad)
test
jnp
int
sub
je
enter
pop
and
and
mov
xchg
call
inc
or
retf
inc
jb
pop
jg
add
lds
sbb
cmp
lds
dec
xchg
xchg
mov
jo
xor
jo
sub
xchg
movsx
shl
cli
mov
call
enter
xor
xor
mov
dec
mov
push
cmp
div
xchg
pop
pop
jge
pop
mov
mov
aad
mov
mov
mov
jp
or
pop
mov
mov
sbb
mov
cmp
jbe
fcom
cli
or
jbe
inc
mov
push
xor
or
cwde
cli
and
aaa
ret
sbb
pop
fwait
or
pop
imul
mov
pop
jmp
mov
loop
push
mov
sbb
aaa
xchg
scas
sti
test
enter
mov
imul
add
inc
cmp
mov
mov
jp
fidivr
jp
push
imul
xchg
lods
and
and
push
bound
add
fs
cli
cmp
sbb
test
dec
clc
data16
setb
imul
pop
xchg
test
mov
cmp
mov
or
fnstcw
pop
cmp
jnp
mov
imul
inc
jmp
dec
mov
(bad)
out
es
retf
mov
xor
fs
mov
sub
pop
cdq
jmp
(bad)
ret
(bad)
inc
(bad)
pop
repz
popf
push
jne
rol
int3
neg
mov
cmps
(bad)
inc
dec
lock
adc
add
cmps
inc
mov
dec
jne
add
sub
pushf
and
dec
pop
and
xor
cmp
pop
cmp
(bad)
fcos
dec
test
test
out
adc
mov
adc
pop
movs
lea
leave
aaa
dec
(bad)
pop
jg
mov
adc
pop
leave
mov
fidivr
mov
or
xchg
(bad)
mov
pop
mov
pushf
ficomp
mov
xor
fcmovnb
or
pop
cli
repz
inc
hlt
imul
shl
das
inc
jmp
rol
mov
aam
jmp
dec
sahf
test
dec
pop
scas
(bad)
rol
inc
xchg
adc
imul
out
data16
dec
sahf
test
cmp
dec
imul
dec
outs
mov
or
jle
push
cmp
adc
(bad)
dec
test
pop
imul
pop
jg
outs
add
dec
inc
pop
cmp
cwde
test
xchg
xchg
pop
inc
mov
pop
data16
mov
mov
cmps
inc
xor
pop
and
ins
push
imul
mov
test
arpl
add
push
mov
mov
mov
gs
and
ins
std
mov
pop
lea
adc
xor
sbb
cmp
push
retf
adc
mov
mov
pop
cmp
sar
cmp
sub
test
stc
retf
cmp
cmps
inc
jbe
lds
out
xor
push
dec
lock
xchg
daa
cmp
mov
pop
jp
sbb
xchg
fmul
leave
retf
in
lods
mov
dec
fs
cwde
push
popa
movs
inc
mov
mov
inc
cmps
aam
jp
xor
mov
lea
mov
aam
in
lods
nop
and
sub
and
lods
shl
jle
push
movs
jmp
push
mov
add
shl
iret
imul
xchg
sub
loope
sub
sahf
lods
push
jecxz
call
push
cmps
arpl
pusha
outs
lods
push
sub
xchg
mov
jp
xchg
and
jmp
xchg
data16
adc
dec
sub
popa
adc
mov
fldln2
shl
jecxz
push
mov
call
push
arpl
adc
jb
push
in
imul
ins
aam
inc
ins
adc
sub
retf
lods
xchg
bound
stos
push
and
sub
es
sub
arpl
stos
adc
push
stos
xchg
and
sub
and
pusha
imul
(bad)
data16
push
jecxz
sub
cmps
push
jmp
xchg
mov
dec
jmp
push
jmp
bound
xchg
loop
scas
adc
data16
addr16
aad
out
imul
lods
xchg
mov
aaa
jmp
push
in
ins
adc
cmps
adc
test
and
lods
add
jno
add
inc
dec
fiadd
pop
xchg
add
or
js
fld
jo
pop
cwde
cdq
lds
push
arpl
inc
imul
xchg
sbb
sub
and
dec
dec
ror
mov
mov
inc
jb
push
ins
jb
(bad)
mov
dec
jl
mov
mov
pop
and
cmp
movs
aaa
and
jp
mov
inc
mov
sahf
test
add
jb
sbb
aad
mov
jp
dec
push
xchg
lea
in
aas
xchg
rol
movs
xlat
addr16
cmp
inc
call
rcl
inc
jb
inc
imul
sbb
inc
in
or
jg
fdiv
adc
hlt
cmp
sbb
loope
(bad)
rol
adc
das
dec
jmp
je
mov
jp
movs
retf
mov
add
dec
in
xchg
int
xchg
scas
(bad)
mov
mov
test
jge
aad
repz
inc
aas
movs
mov
cli
mov
stos
jmp
dec
daa
les
push
push
mov
cmps
jg
leave
stos
stc
pop
ret
fimul
lahf
inc
fst
adc
dec
pop
mov
or
pop
push
lahf
sub
aad
cmps
mov
mov
inc
ret
iret
mov
cmp
rcl
or
lea
inc
or
fisttp
pop
dec
inc
lahf
rcr
mov
inc
add
inc
call
arpl
aad
jmp
sbb
fcmove
dec
mov
push
pop
js
aad
ja
adc
popf
xlat
retf
push
sar
or
mov
dec
mov
dec
add
sti
jb
push
lods
ret
(bad)
cld
leave
(bad)
stos
adc
paddw
ins
jmp
(bad)
dec
inc
ret
leave
imul
mov
xchg
and
ret
xchg
ret
jno
fcomp
sbb
lahf
lahf
dec
fwait
pop
xchg
add
and
jnp
push
xchg
pusha
mov
fdivr
aam
arpl
js
cmp
mov
xor
xchg
mov
jle
push
pop
adc
es
lahf
bound
mov
jo
retf
add
inc
inc
adc
leave
aam
ret
enter
pop
adc
ret
sahf
mov
adc
add
outs
stos
push
bnd
nop
and
(bad)
bound
cs
inc
ins
pop
pusha
push
outs
push
jecxz
push
push
popa
push
sub
out
nop
mov
push
jmp
pop
popa
addr16
out
call
adc
imul
push
popa
ds
push
mov
loopne
out
xchg
out
in
shl
mov
xchg
es
cs
sbb
and
lods
(bad)
daa
sub
xchg
cmps
jbe
xlat
addr16
push
popa
jle
pop
and
xlat
mov
pop
scas
shl
iret
sub
push
and
call
adc
cdq
scas
(bad)
popa
pop
ins
push
cmps
lods
xchg
popa
in
nop
mov
sub
aad
mov
nop
and
out
shl
ds
addr16
aad
ret
mov
retf
mov
push
in
shl
push
sub
cmps
sbb
mov
addr16
xchg
jecxz
call
push
mov
cmp
adc
inc
outs
push
and
sahf
(bad)
and
(bad)
movs
push
pop
fs
mov
fisttp
jl
jb
xor
pop
mov
pop
mov
and
jge
xchg
sbb
jl
jb
sar
lods
mov
pop
int3
sub
xchg
sbb
inc
adc
push
clc
cmps
mov
lds
into
xchg
xchg
mov
std
call
push
fisub
ret
sbb
sub
jb
fild
mov
add
or
les
and
pop
repnz
mov
sub
cmp
movs
mov
lea
jge
adc
jge
sbb
std
inc
pop
jl
stos
(bad)
mov
cmp
xor
mov
repz
jnp
push
push
imul
push
jnp
pop
xchg
xchg
dec
jmp
sbb
fdivr
mov
ret
mov
stos
jge
aad
js
repnz
jp
inc
stos
lea
push
fld
dec
fs
in
cmp
sbb
mov
ja
sahf
cmp
fcom
(bad)
mov
dec
imul
mov
mov
lds
mov
stc
xlat
mov
in
xlat
jno
loop
imul
push
xchg
retf
jns
xor
cmp
mov
stc
xlat
jno
in
xlat
gs
call
push
gs
xchg
bound
ret
jno
cmp
icebp
push
retf
mov
mov
xlat
jno
in
jno
loop
ins
(bad)
in
push
dec
stc
xlat
jns
mov
ret
xor
xlat
jno
loopne
ins
and
xchg
push
stc
ret
mov
xlat
jno
fwait
ret
call
xchg
jno
xor
xor
or
(bad)
xlat
xor
mov
jmp
sar
fwait
cwde
ins
aas
call
xchg
fist
xlat
xor
pop
jmp
xor
xchg
push
sti
xlat
xor
ret
jns
or
test
mov
fistp
push
jb
pop
sub
xchg
xchg
cld
xlat
xor
shl
or
int3
aaa
mov
mov
clc
xlat
jne
pop
sub
loop
mov
and
xchg
test
ret
xor
mov
test
push
pop
sub
ds
xchg
cli
xlat
xor
mov
xor
jns
jg
xlat
jae
push
or
mov
movs
adc
add
in
jno
pop
imul
mov
and
jno
mov
mov
and
xor
mov
xchg
mov
jno
adc
mov
clc
lods
test
sbb
push
push
add
(bad)
out
rol
in
xchg
loopne
lods
pop
and
in
mov
mov
xchg
jecxz
bound
adc
jecxz
fs
pop
in
loopne
pusha
push
popa
and
and
loopne
popa
test
cmps
push
mul
je
pop
jecxz
movs
adc
cmp
adc
mov
or
xchg
mov
xchg
jecxz
popa
push
cmps
xchg
and
pusha
(bad)
xlat
mov
in
xlat
out
loop
data16
push
popa
je
push
data16
push
movs
stc
loope
cmps
jnp
xchg
and
loop
popa
lds
loope
mov
adc
(bad)
jecxz
and
loope
movs
fisub
push
and
jecxz
cmps
movs
daa
xchg
and
mov
aam
mul
pop
and
loopne
movs
mov
popa
adc
ret
and
loop
cmps
mov
or
adc
push
mov
xchg
and
loop
daa
sbb
gs
es
popa
adc
jmp
push
loope
arpl
out
arpl
mov
inc
and
pop
shl
leave
and
mov
jns
mov
mov
lds
loop
jno
mov
lahf
test
xor
popf
emms
into
and
into
rol
jns
es
jnp
sub
cmp
push
sub
mov
sar
iret
dec
cmp
mov
xchg
hlt
mov
or
ins
lea
gs
sahf
cmp
int
mov
mov
pop
adc
cwde
adc
xor
inc
aas
sub
xor
sahf
mov
push
adc
sahf
mov
add
enter
mov
dec
mov
fadd
or
retf
pop
js
mov
sub
daa
pop
mov
retf
sub
sbb
cmp
cmp
ret
aas
xor
push
pushf
xor
add
push
aas
or
adc
mov
sbb
in
xor
lods
jmp
mov
xor
add
sub
xchg
dec
fstp
jb
xor
xchg
call
inc
int
lea
or
aad
movs
(bad)
out
sar
dec
adc
mov
or
lea
mov
cmp
loop
or
pop
clc
add
or
mov
xchg
and
pushf
mov
xor
movs
xor
cld
fdivr
sar
hlt
ror
inc
sub
jno
xor
movs
jns
xchg
js
push
cmps
popa
push
push
sbb
jae
push
movs
or
push
jl
(bad)
pusha
test
ret
mov
push
test
clc
ins
mov
imul
addr16
mov
test
test
hlt
repz
mov
imul
hlt
repz
xchg
test
cmp
out
jmp
cli
pusha
int3
scas
jmp
add
loopne
xor
xlat
and
push
movs
pop
jecxz
and
adc
and
xlat
loop
pusha
pop
and
xchg
cmps
xor
cmps
xchg
data16
jecxz
out
in
in
and
dec
mov
adc
xchg
pusha
shl
aam
adc
mov
push
daa
mov
and
es
adc
stos
jecxz
and
mov
push
mov
cli
addr16
out
daa
(bad)
mov
dec
and
and
shl
data16
loopne
pusha
pop
and
mov
adc
movs
cmps
push
mov
ins
and
daa
hlt
and
jl
adc
out
bound
mov
xchg
bound
push
cmps
xchg
and
cwde
and
fisub
mov
in
sub
shl
sub
xchg
cmps
mul
xchg
and
mov
push
and
adc
and
and
push
data16
(bad)
mov
adc
daa
pop
es
and
xchg
and
add
jb
movs
inc
jl
lods
inc
mov
out
inc
jb
lahf
lds
das
stos
sbb
xlat
(bad)
int3
push
push
cmp
inc
jp
das
pop
cmc
fsubr
dec
lea
mov
dec
jne
jb
(bad)
mov
xchg
retf
sbb
add
and
mov
retf
in
cmp
(bad)
in
pcmpeqb
gs
mov
enter
mov
jne
inc
jns
mov
mov
sub
sbb
cmp
mov
ja
(bad)
arpl
xor
dec
mov
test
or
clc
lods
push
mov
mov
xchg
pushf
clc
jne
mov
pop
inc
stos
retf
add
lods
push
dec
mov
cdq
shl
test
dec
ficom
test
int3
jnp
or
stos
or
call
and
lahf
fistp
dec
adc
mov
mov
je
mov
in
dec
inc
cdq
add
call
inc
cmp
sub
mov
pop
clc
jl
test
or
lock
in
pushf
movs
inc
jl
lods
inc
mov
dec
pop
mov
test
repz
sbb
mov
xor
stos
pop
or
int3
int
push
mov
cmp
xor
add
xor
add
and
xor
das
jbe
aaa
das
aad
cmp
or
cmp
jmp
(bad)
sti
jp
or
lds
out
(bad)
xor
push
cmp
jg
mov
lds
push
mov
jae
dec
ds
ficomp
and
push
add
sub
rcl
inc
inc
test
mov
cmp
mov
js
outs
add
sbb
adc
mov
int
dec
imul
cmp
sub
mov
into
push
sbb
sub
pop
or
push
jnp
jle
aad
jle
das
jle
(bad)
shr
out
btr
or
cmp
sub
out
movs
push
sbb
mov
sbb
aam
sahf
sbb
push
ins
dec
sbb
and
push
adc
stc
dec
js
stc
ins
adc
cmp
sub
and
push
(bad)
fst
or
sbb
(bad)
adc
add
jle
test
out
comiss
adc
fdivr
repz
lea
and
loop
aad
int
push
daa
jb
div
sbb
sbb
mov
(bad)
or
mov
scas
test
inc
das
or
stc
in
xchg
or
push
(bad)
adc
sbb
hlt
das
int3
mov
int3
(bad)
dec
pop
jp
fldcw
sbb
cli
cdq
shl
mov
das
or
push
scas
ror
adc
int3
push
or
xor
dec
sub
pop
imul
cmp
sbb
rol
leave
adc
inc
and
(bad)
adc
lods
and
jle
pop
int3
or
das
or
sti
jecxz
pop
repnz
mov
repnz
les
mov
daa
js
or
enter
mov
aad
push
sub
outs
and
das
or
cmp
mov
fnstsw
scas
sbb
xlat
cmp
punpckldq
sub
out
cmp
or
lods
cmc
dec
repz
adc
imul
ret
cmp
iret
enter
cs
mov
dec
cld
add
aas
call
mov
cmovp
dec
shl
shl
and
stc
cmp
xor
jne
jge
cmp
repz
ds
std
cmp
dec
pop
dec
jnp
adc
push
push
sbb
fild
push
xor
add
jnp
mov
ret
jbe
lea
cmp
add
gs
sub
daa
lahf
mov
fidivr
das
adc
ins
adc
push
inc
xor
in
xchg
dec
sub
sbb
sahf
pop
adc
inc
into
sbb
mov
outs
or
or
sbb
outs
push
loop
push
outs
loopne
int3
repz
push
push
sbb
push
or
jae
pop
das
sbb
addr16
out
sbb
pop
scas
push
jmp
xor
dec
or
repz
jb
ss
call
sub
pop
xor
push
dec
fistp
adc
and
xchg
into
jb
or
sbb
es
jae
daa
add
hlt
cmps
push
int3
mov
pop
or
push
das
inc
jne
in
sub
inc
das
ins
arpl
out
cvtdq2ps
jg
adc
xor
or
sbb
xchg
lods
jecxz
dec
mov
inc
(bad)
outs
ins
aaa
pop
adc
xor
adc
cmp
pop
int3
push
out
mov
ret
loopne
sub
add
xlat
ret
and
sbb
bswap
out
es
mov
cmp
or
inc
outs
xor
mov
outs
adc
sti
repz
sti
cmp
jae
ss
xchg
adc
pop
lods
shl
scas
int3
dec
dec
scas
aad
adc
out
das
or
pop
outs
adc
or
sti
repz
ss
hlt
repz
cwde
enter
or
les
or
mov
jle
jge
sub
dec
in
rol
mov
sahf
adc
push
mov
das
or
dec
imul
sahf
aas
push
sahf
cmp
or
inc
das
or
dec
das
push
pop
test
or
add
aad
xchg
or
sbb
scas
jno
or
ins
add
ror
sbb
mov
sub
push
push
scas
jno
jge
ins
les
mov
stc
add
xor
cmp
repz
sbb
fwait
push
in
mov
push
and
jmp
push
or
sbb
aad
or
div
aas
sub
lods
inc
das
aad
test
or
popf
adc
push
fild
or
mov
sub
lahf
jg
in
mov
int3
mov
les
dec
repz
jg
sbb
icebp
repz
adc
fdiv
test
add
and
fst
es
popf
aad
pop
ficom
pusha
sbb
(bad)
mov
in
adc
mov
ja
shl
je
xchg
loop
pop
xchg
arpl
xchg
loope
fcom
loope
fist
daa
push
pushf
aam
nop
sbb
cwde
aad
pop
lahf
push
in
call
imul
pop
loope
pop
push
jecxz
fist
mov
add
push
es
fcmovnbe
mov
(bad)
sahf
shl
(bad)
adc
fistp
mov
daa
fist
outs
(bad)
and
jecxz
pop
xchg
addr16
sbb
cmps
jp
push
addr16
sahf
adc
xchg
push
fs
pop
push
and
pushf
push
arpl
nop
cmps
cwde
ficom
popa
in
adc
movs
pop
xlat
daa
cs
pusha
jmp
push
cmps
aaa
fcmovnbe
loope
sbb
and
fcom
cmps
add
aad
dec
pop
xchg
arpl
ficom
adc
xchg
arpl
push
and
adc
call
stos
cdq
adc
sub
xlat
loopne
ficom
addr16
shl
int3
xor
dec
daa
or
movs
lea
adc
jb
ins
push
mov
or
pusha
jae
lods
pop
repnz
xchg
jae
jb
dec
mov
pop
xchg
mov
(bad)
jg
cs
push
outs
ss
call
mov
in
xor
cmps
shrd
cmp
add
jmp
inc
fdivr
jmp
jle
inc
pop
mov
mov
(bad)
jecxz
mov
jg
outs
int
dec
cld
popa
mov
mov
adc
or
int
mov
addr16
test
sbb
add
pushf
and
dec
inc
aaa
mov
xchg
dec
stos
shl
sbb
dec
add
inc
cmp
arpl
dec
fmulp
inc
inc
push
sbb
push
icebp
scas
mov
mov
add
gs
xchg
or
ret
aaa
popf
(bad)
adc
mov
gs
loop
dec
inc
mov
mov
xor
sbb
je
pop
ins
icebp
rep
(bad)
int
mov
fdiv
mov
mov
cdq
int
ss
adc
xchg
lea
pop
sahf
xlat
std
loop
push
div
sub
call
xor
repnz
or
jge
repz
xchg
rcr
xor
sbb
sbb
jecxz
stos
add
sub
stos
xor
out
fstp
shr
pop
clc
ds
sbb
xor
retf
fldenv
das
adc
inc
push
int3
fstp
in
push
push
aam
mov
push
add
out
adc
mov
ds
cdq
sbb
dec
in
cmp
sar
push
xor
shl
out
das
sar
das
push
cmp
jg
fldcw
dec
inc
inc
fsubr
out
sbb
push
sub
adc
adc
test
sub
fld
push
rcr
enter
or
scas
in
xchg
rcr
sub
xor
ror
inc
cmp
and
mov
jecxz
sub
fldcw
add
neg
dec
sbb
adc
and
out
lea
nop
les
xor
pop
lods
ins
out
lea
sbb
mov
pop
cmp
cs
xchg
ins
icebp
fldcw
mov
(bad)
out
sbb
adc
cmps
leave
dec
into
(bad)
stc
repz
leave
sub
dec
fdivr
jmp
int
dec
mov
outs
pusha
jecxz
int3
push
xor
cwde
mov
push
int3
in
xor
add
add
dec
cmp
xchg
adc
fwait
mov
push
int3
in
and
inc
push
adc
not
xchg
mov
lods
sub
je
enter
xchg
inc
ins
repnz
sub
enter
enter
sbb
sbb
jecxz
test
es
icebp
ret
add
(bad)
pop
xor
sbb
loop
xchg
enter
es
xlat
sbb
mov
scas
sub
out
cmps
push
aam
inc
cmp
adc
adc
mov
in
mov
aam
push
out
and
pop
out
jmp
add
sbb
pop
rcr
test
hlt
repnz
sbb
sbb
das
mov
sub
fst
sub
adc
mov
xor
sbb
out
pop
fwait
xchg
mov
jmp
out
sbb
das
sub
pop
add
cmps
add
enter
sti
stos
sub
add
in
icebp
fnstenv
dec
push
(bad)
sub
and
out
sbb
enter
pop
arpl
cdq
add
inc
fsin
mov
add
jmp
in
nop
push
loope
adc
mov
xor
out
push
xchg
jecxz
xchg
push
jecxz
xchg
xchg
loope
aam
mov
or
xchg
xlat
push
xchg
(bad)
(bad)
aad
cmps
ficom
adc
and
xchg
data16
nop
jecxz
pop
push
es
push
xchg
popa
repnz
adc
jne
xlat
mov
mov
adc
and
aad
mov
rcpps
and
xchg
mov
call
pusha
arpl
adc
stos
push
aad
mov
pop
loopne
xchg
adc
ds
and
push
cmps
push
push
adc
xchg
adc
(bad)
xchg
adc
(bad)
adc
loopne
xchg
xchg
and
aam
addr16
adc
out
aam
in
xchg
daa
out
xchg
adc
xor
push
loopne
xchg
adc
sti
rcl
rcl
out
nop
push
in
adc
loopne
adc
out
xchg
(bad)
mov
sbb
and
adc
out
rcl
and
push
(bad)
out
xchg
push
and
adc
jb
cmp
dec
(bad)
rol
sub
test
mov
cli
inc
jb
iret
inc
or
xor
jns
and
leave
mov
dec
mov
mov
or
or
or
scas
out
cmp
out
test
lock
inc
mov
mov
inc
mov
cli
sub
sbb
dec
mov
jp
xchg
test
mov
fadd
sar
lahf
inc
stos
rcr
and
jecxz
inc
stos
adc
mov
xor
pop
lock
mov
dec
cli
pusha
and
mov
fild
cmc
mov
ja
pop
fsub
inc
or
das
push
jb
inc
jmp
mov
sub
stos
lea
cmp
scas
push
mov
mov
fwait
or
add
pushf
sbb
mov
lds
inc
imul
mov
mov
cld
add
or
dec
jmp
int3
push
sti
lods
pop
xchg
cwde
add
sub
jg
dec
ret
lds
pop
ficomp
movs
mov
pop
xor
or
or
push
stos
lea
and
test
inc
sub
cmp
mov
sahf
call
ins
push
xor
lods
lock
pop
xchg
jp
mov
pop
cmps
jo
bound
jo
push
jo
push
cmps
jo
adc
jo
pop
mov
xchg
lods
mov
sbb
xchg
add
pop
jbe
test
lods
mov
lea
mov
push
iret
cwde
arpl
and
cli
lock
test
(bad)
shl
push
cmp
add
mov
cwde
sbb
(bad)
mov
daa
lods
fs
jb
daa
lahf
stos
aaa
mov
xchg
jo
lahf
xor
mov
mov
mov
add
stos
test
stos
push
cmp
xchg
mov
mov
lods
push
dec
cmp
ins
sub
mov
sahf
mov
add
mov
mov
es
(bad)
dec
mov
in
leave
fsubp
jno
inc
mov
(bad)
mov
dec
cld
ja
jno
and
movs
rcl
loopne
push
xchg
bound
pop
loope
push
push
loope
push
push
arpl
pop
push
daa
add
xchg
popa
movups
dec
adc
(bad)
xchg
bound
pop
aad
ficom
nop
jecxz
rcl
mov
in
push
nop
out
adc
out
push
pop
mov
jp
pop
adc
and
push
push
and
push
xlat
daa
xchg
push
xchg
bound
rcl
and
adc
pusha
rcl
daa
jmp
rcl
mov
aaa
adc
xchg
nop
and
xchg
push
daa
test
xchg
add
adc
enter
xchg
rcl
popa
push
push
shl
pop
pop
push
ficom
movs
cmps
pop
push
mov
outs
rcl
jo
shl
cli
nop
xchg
loopne
push
adc
push
adc
xchg
adc
mov
rcl
and
xchg
xchg
loop
xchg
pop
daa
cmps
xchg
push
jecxz
xchg
push
mov
push
xchg
and
adc
es
shl
cmp
adc
sti
xchg
shl
push
xchg
pop
pusha
xchg
adc
jecxz
push
adc
or
lds
add
inc
adc
inc
jae
repnz
mov
stc
push
or
jp
ret
jnp
fld
inc
or
jp
mov
loop
sub
jl
rol
adc
add
cmp
sbb
cli
aam
jmp
les
enter
sbb
ds
int
sbb
sbb
test
mov
lds
les
mov
movs
mov
repz
xchg
mov
aam
(bad)
fild
mov
jb
cli
in
fmul
mov
cmp
cmp
sbb
gs
out
aam
dec
leave
fadd
imul
mov
pop
and
push
lea
cmp
xchg
adc
dec
mov
fisttp
jmp
or
movs
adc
inc
and
xor
xchg
fwait
ret
xchg
bound
cmp
jecxz
stos
pop
mov
mov
add
pushf
inc
or
or
cmp
les
sub
jp
jmp
cmp
dec
mov
cmp
mov
das
sub
mov
cmp
mov
mov
jmp
and
dec
cmp
aaa
cmp
push
push
sti
imul
in
push
je
dec
adc
pop
sar
jge
addr16
add
mov
pop
dec
out
popf
sub
dec
jecxz
lea
xchg
xchg
ret
adc
mov
adc
jo
aad
(bad)
rcl
cmp
pusha
inc
rcl
and
aam
bound
adc
arpl
adc
push
jecxz
adc
nop
addr16
xchg
jecxz
xchg
adc
out
push
shl
aaa
push
shl
cli
push
(bad)
cmps
(bad)
aam
and
push
push
movs
or
lea
push
cmps
push
push
shl
cwde
rcl
and
adc
addr16
adc
jmp
adc
aaa
xchg
push
and
xchg
push
out
push
xchg
es
push
xchg
and
push
push
dec
aad
popa
int
push
fs
push
daa
xchg
push
push
and
xchg
(bad)
ficom
adc
aam
(bad)
call
xchg
push
cmps
jb
(bad)
loope
adc
stc
push
push
pusha
std
push
xchg
and
xlat
loope
aad
jecxz
mov
pop
add
adc
ja
popa
fstp
bnd
add
jb
push
aam
out
xchg
push
and
push
push
not
shl
inc
adc
nop
or
xlat
out
push
shl
xchg
adc
and
push
push
es
shl
gs
push
jecxz
(bad)
xchg
data16
adc
pusha
jno
push
and
rcl
cli
push
shl
add
xchg
mov
leave
push
push
in
xchg
adc
aad
xchg
pusha
sbb
xchg
mov
and
sub
cmps
sub
adc
addr16
push
aad
jle
push
mov
ret
mov
or
and
shl
xchg
leave
adc
fmul
xlat
mov
and
xchg
sub
xchg
mov
test
xchg
arpl
or
cmp
xlat
bound
adc
and
enter
int
and
mov
cdq
or
fisttp
addr16
iret
push
in
dec
adc
daa
lods
enter
(bad)
push
popa
xor
adc
jp
xchg
popa
ret
movs
pop
or
out
dec
pop
mov
test
push
dec
xchg
fnstcw
iretw
es
aam
gs
add
jg
mov
inc
jb
jmp
stos
bound
fs
fld
dec
push
aaa
xchg
ins
fsub
add
jnp
jle
sub
retf
jb
fiadd
fcom
sbb
cmc
out
add
xor
mov
add
repnz
jbe
adc
imul
cmp
xor
add
mov
test
lds
fadd
pushf
int3
repnz
not
fsub
push
or
add
adc
mov
sub
cwde
adc
cmp
aaa
arpl
fdivr
inc
or
mov
(bad)
mov
stos
or
jp
mov
loop
sub
sbb
stos
loop
bound
cdq
call
and
xchg
gs
jp
jo
scas
lea
es
clc
and
in
repz
xchg
push
push
mov
cmp
xor
mov
ret
mov
js
or
movs
dec
repz
mov
inc
mov
loop
mov
pop
aad
xor
jo
cmp
inc
test
or
cmc
sbb
movs
call
push
cld
dec
pop
in
pmaxub
mov
jl
and
adc
nop
cdq
pop
shr
clc
xor
lds
fbld
pop
push
sahf
mov
cmp
dec
sub
mov
lods
fldenvw
and
in
loopne
inc
and
pop
mov
and
mov
jle
cmp
loopne
pop
or
cdq
sbb
movs
jp
ret
(bad)
pop
add
and
jns
es
mov
(bad)
loopne
push
and
mov
and
loope
pop
(bad)
cmp
cmps
inc
xor
loop
jge
loopne
and
and
imul
cmp
and
pop
add
jge
sbb
adc
loopne
pushf
inc
add
es
sub
loopne
jle
and
cmp
or
aaa
sbb
sub
sub
mov
lds
add
fbld
inc
inc
jns
and
pop
ret
pushf
sub
pop
mov
cli
loopne
icebp
or
das
and
and
sub
mov
xor
mov
jb
mov
push
adc
and
fwait
and
sub
xchg
push
in
cmp
jg
mov
pop
lods
popa
or
mov
sub
jg
out
popf
outs
lds
mov
xchg
jnp
jb
add
mov
pop
cmp
fsub
stos
mov
aas
add
xchg
pop
shl
call
push
jns
sub
dec
(bad)
cmp
mov
idiv
cmp
jb
cwde
dec
inc
add
sbb
cmovle
or
(bad)
mov
jo
cwde
retf
sub
mov
movs
or
sbb
mov
mov
test
das
fisub
(bad)
mov
xchg
adc
mov
mov
std
mov
fdivrp
pop
add
(bad)
aas
ret
sbb
rcl
inc
ret
and
xchg
enter
imul
jle
mov
loope
lahf
int
mov
jecxz
std
aas
ret
cmp
shr
je
add
or
adc
jns
das
lds
jae
sub
sub
(bad)
aaa
jae
ret
jbe
fistp
cmp
dec
pop
les
mov
fld
pop
pushf
popf
push
ins
add
enter
jae
in
dec
mov
leave
push
test
retf
inc
jb
mov
add
and
push
addr16
(bad)
loope
leave
shl
out
mov
out
int
and
(bad)
aam
jae
push
in
dec
aam
cld
or
fs
lea
test
and
leave
aam
dec
dec
xchg
daa
push
lea
aad
(bad)
loopne
mov
and
retf
aam
cmps
dec
xlat
popa
out
xlat
addr16
leave
xchg
mov
mov
adc
mov
xchg
pusha
cmp
adc
mov
xchg
shl
lea
addr16
(bad)
popa
xchg
or
fmul
xchg
and
int
(bad)
out
push
and
or
push
loope
into
xchg
jecxz
movmskps
aas
or
mov
int3
aam
add
adc
int
addr16
enter
or
mov
and
adc
in
dec
push
mov
xor
xchg
es
inc
jb
fadd
xchg
fadd
(bad)
int
addr16
jb
fadd
xchg
inc
jb
fadd
mov
inc
jb
fadd
mov
inc
jb
fadd
mov
fadd
cmps
fadd
stos
pushf
push
jb
into
adc
(bad)
int
mov
mov
adc
(bad)
ror
(bad)
and
leave
nop
sbb
mov
movs
enter
or
push
pusha
jbe
push
mov
aas
dec
xchg
loop
(bad)
adc
and
mov
dec
mov
cmps
push
mov
and
or
xchg
mov
cmps
or
xchg
cmps
outs
leave
xchg
loope
dec
xlat
loopne
dec
adc
jp
nop
jecxz
mov
mov
push
or
and
shl
ror
data16
push
loopne
retf
and
and
aad
sub
xchg
out
or
and
lea
dec
adc
es
dec
push
in
or
addr16
adc
push
or
push
dec
xchg
and
mov
loope
dec
push
out
lea
jmp
setno
repnz
dec
push
es
xlat
out
(bad)
nop
pusha
or
es
xchg
jecxz
iret
adc
nop
mov
cwde
iret
aam
sbb
or
adc
loopne
dec
xlat
and
and
cmp
in
mov
aas
jb
enter
bound
es
gs
pop
movs
test
push
in
lds
sahf
gs
fsub
into
(bad)
bound
mov
xlat
dec
sub
popf
in
add
cmp
xchg
les
in
sub
cwde
ins
mov
or
mov
aas
xor
and
mov
mov
scas
lods
and
out
jg
push
in
mov
cmp
fsub
sbb
xor
lahf
cmp
mov
jmp
or
sbb
test
add
sbb
pop
fwait
xchg
pop
mov
mov
icebp
mov
pop
imul
movs
xchg
push
jg
mov
cs
lea
repz
or
lock
jb
push
jg
or
and
cdq
sbb
add
mov
and
out
loopne
in
jmp
jb
sub
ror
cmp
mov
and
jle
stc
imul
fldcw
jge
jbe
int3
aaa
mov
sub
mov
in
shl
jbe
movs
aaa
mov
sub
xor
pop
fild
jb
cmps
mov
enter
retfw
xchg
dec
mov
jb
rcl
mov
test
and
ret
dec
xor
mov
dec
xor
test
sub
mov
ds
mov
xor
or
sub
dec
neg
iret
fld
mov
mov
dec
xor
popf
jbe
xor
test
pop
jb
sub
test
sub
push
ds
ds
xor
call
sbb
adc
repnz
cdq
and
dec
sub
dec
xor
test
ss
popf
jbe
or
test
sahf
jae
sub
mov
leave
sub
mov
xor
dec
neg
inc
aam
repnz
dec
sub
test
jbe
enter
mov
mov
dec
sub
mov
sar
mov
jbe
test
cmps
int
repz
sub
mov
push
adc
jae
rol
dec
mov
jae
movs
push
repnz
inc
repnz
sbb
pop
repz
(bad)
push
sbb
fnsave
in
test
pop
mov
shl
jp
push
loopne
push
mov
inc
jb
rol
mov
rol
cmps
rol
stos
rol
scas
rol
rcl
inc
jb
rol
fcmovbe
inc
jb
rol
ret
jb
rol
retf
jb
rol
repnz
not
inc
jb
rol
(bad)
rol
loop
inc
jb
rol
jmp
jb
rol
push
rol
sbb
inc
jb
rol
add
inc
jb
rol
jb
rol
xor
inc
jb
rol
cmp
inc
jb
rol
and
inc
jb
rol
sub
jb
lds
loop
pop
shl
push
inc
nop
out
inc
shl
xchg
jecxz
test
pop
rcl
pop
inc
shl
and
shl
ins
inc
aad
mov
shl
repnz
aad
jns
xchg
arpl
(bad)
(bad)
cmps
inc
rcl
add
adc
inc
shl
adc
jecxz
inc
xlat
mov
and
adc
ret
repz
ret
sti
lds
out
inc
push
pusha
inc
add
out
add
and
add
lahf
ret
adc
push
inc
adc
out
xchg
addr16
fs
xchg
out
adc
xor
xchg
loop
(bad)
push
cmps
jle
aam
inc
xchg
dec
inc
xchg
mov
xchg
add
and
add
mov
pop
xchg
data16
shl
adc
mov
xchg
daa
aaa
xchg
and
pop
out
adc
in
pop
push
loopne
push
xchg
daa
(bad)
inc
nop
and
rcl
xchg
mov
out
shl
scas
inc
(bad)
out
(bad)
aam
mov
adc
jp
in
lea
adc
jb
jae
mov
adc
jb
push
push
xor
mov
enter
pusha
mov
jl
shl
rol
fmul
or
lods
mov
cmc
syscall
sbb
jns
xor
push
push
and
add
or
rol
pushf
inc
mov
imul
sar
mov
dec
pop
js
adc
add
neg
xor
hlt
mov
cmp
adc
dec
mov
mov
mov
aad
pop
out
(bad)
in
pop
inc
lock
or
xchg
sub
data16
icebp
mov
enter
xor
out
test
pusha
(bad)
aas
fcomi
mov
pop
dec
repz
test
mov
jp
mov
lea
stos
pop
test
mov
cmps
or
pushf
adc
xchg
dec
push
jmp
jl
js
jbe
mov
lea
leave
fdivp
adc
mov
jne
jbe
jle
mov
lds
rcr
cli
fdiv
cli
or
das
sub
popf
cmp
lea
sub
dec
out
cli
mov
mov
aad
imul
imul
cmps
dec
mov
fadd
std
xchg
mov
fcom
cmp
sbb
nop
repnz
xor
cmps
fist
enter
mov
stos
std
adc
mov
xchg
and
daa
shl
adc
aas
pop
ds
bnd
and
dec
or
mov
fsubr
mov
push
call
repnz
jae
shl
mov
shl
(bad)
mov
sar
jo
xor
mov
test
jle
inc
sbb
pop
and
sub
shl
jecxz
push
sar
or
inc
and
out
mov
enter
(bad)
xor
cwde
and
jbe
int
xor
call
adc
xor
sub
enter
adc
pop
dec
adc
mov
pop
xor
jmp
repz
repnz
dec
nop
int
repnz
sbb
movs
repz
loope
jns
fcomp
push
pop
aad
cli
jle
mov
cwde
sub
test
imul
popf
loopne
ret
mov
dec
dec
inc
shl
push
inc
xchg
data16
aam
sbb
push
jecxz
test
mov
sub
das
adc
icebp
inc
push
movs
repnz
shl
jl
push
cmps
inc
adc
dec
(bad)
xchg
and
test
xchg
(bad)
push
and
(bad)
push
cmps
pop
xchg
cmps
inc
push
out
inc
xchg
cmps
sub
adc
inc
adc
xor
out
lds
jnp
push
fs
adc
inc
xchg
popa
pinsrw
xchg
inc
push
pusha
aam
xchg
mov
fild
and
push
and
ret
shl
repnz
push
out
lds
cmp
add
shl
inc
add
loop
test
mov
adc
aam
cwde
inc
adc
and
xchg
es
adc
imul
and
adc
out
(bad)
nop
and
inc
xchg
loop
pop
xlat
mov
adc
push
adc
daa
adc
xor
gs
add
dec
jp
mov
mov
enter
adc
pop
lods
cs
imul
mov
fdiv
lea
ss
repz
mov
cmp
mov
mov
cmps
or
movs
mov
ins
data16
lods
or
and
dec
or
sub
mov
lods
jb
cmc
mov
jmp
ins
push
sub
sub
clc
ins
jb
push
jg
rcl
xchg
(bad)
mov
sub
mov
scas
cmp
xor
movs
mov
out
inc
in
mov
loope
clc
cdq
bound
sub
pop
cmp
arpl
xor
push
mov
dec
jns
or
push
pop
mov
lea
inc
xchg
ins
push
sbb
push
mov
mov
fsub
mov
outs
jb
xchg
aas
rol
push
cmp
mov
icebp
sbb
xchg
(bad)
push
cmp
pop
stos
(bad)
into
add
mov
mov
xchg
in
loope
mov
imul
or
cmp
test
or
daa
mov
sub
addr16
aaa
fcomp
popf
push
inc
or
mov
(bad)
sar
cmp
pop
sub
daa
push
sub
daa
repnz
sub
loopne
popa
sub
push
sub
mov
rcr
dec
ds
mov
fsub
dec
push
repz
mov
xchg
xor
add
test
and
xor
fsub
rcr
cmp
mov
xor
push
mov
cmps
movs
and
mov
(bad)
lock
fcom
(bad)
into
xor
inc
or
lea
inc
lods
cmp
jo
xlat
fcomp
mov
addr16
lock
cmc
rcr
jo
sbb
cmp
mov
inc
sub
out
lea
aam
mov
sub
int
call
and
sub
dec
jle
and
jno
jl
sub
inc
iret
mov
lods
in
ret
jp
jge
mov
xchg
fistp
daa
call
mov
sub
push
fs
adc
jb
xchg
and
mov
nop
mov
test
nop
and
sti
push
pusha
aam
adc
mov
push
loope
mov
aam
sub
xchg
bound
mov
pop
and
shl
std
nop
pusha
pop
(bad)
push
popa
inc
stc
push
out
aas
shl
dec
mov
adc
push
jg
cmps
push
mov
xchg
and
xchg
and
clc
shl
xor
adc
(bad)
adc
ret
and
mov
adc
push
mov
nop
addr16
stc
xchg
and
clc
xchg
out
push
cmps
sub
shl
xor
mov
cmp
mov
xchg
adc
leave
mov
aad
sar
push
fs
aam
fdivrp
xchg
out
mov
shl
call
cli
(bad)
and
push
jecxz
ds
rol
and
adc
jno
bound
call
test
jle
dec
or
jbe
pop
cmp
movs
cwde
sbb
xchg
and
sahf
sub
cld
outs
dec
mov
dec
bound
movs
outs
stos
jb
mov
push
mov
push
adc
cli
mov
popa
gs
pop
faddp
cmp
jge
lea
cli
dec
adc
adc
inc
stos
cwde
adc
js
clc
or
fst
push
mov
stos
call
cmp
mov
aad
lea
mov
repz
nop
adc
xchg
adc
into
inc
pop
inc
sbb
call
rcl
inc
enter
mov
sar
pushf
push
mov
pop
xor
gs
mov
dec
jmp
jmp
ret
ds
(bad)
aad
aas
ja
aam
cdq
dec
les
ins
mov
mov
mov
fimul
adc
or
cmp
les
dec
into
jmp
mov
cmp
add
enter
and
xchg
and
push
mov
sbb
xchg
xchg
pop
mov
push
mov
pop
push
cdq
repz
cmp
or
cmp
and
sub
loope
rol
clc
cmp
out
mov
gs
data16
adc
lods
xor
clc
dec
pop
mov
sbb
fldenv
mov
cmp
jb
cmp
addr16
sbb
cmp
cmp
cmp
out
mov
data16
cmp
call
test
sti
push
dec
sub
pop
ins
push
cmp
scas
shl
leave
push
add
cmps
dec
sar
inc
stos
daa
fwait
loope
imul
mov
add
push
cmp
js
sub
push
test
pop
sbb
mov
sub
cmp
pusha
push
jnp
out
les
mov
ret
icebp
sbb
mov
sub
xor
fs
jecxz
cmp
push
mov
pop
addr16
sbb
pop
cmp
add
pop
pop
mov
gs
test
adc
mov
gs
jnp
daa
ss
jbe
mov
pop
lea
aas
(bad)
gs
aaa
(bad)
fild
add
or
in
test
add
mov
dec
shl
adc
inc
scas
mov
xchg
push
mov
lds
sub
jb
into
mov
es
jle
cdq
adc
pop
jmp
mov
push
lahf
adc
mul
push
or
push
xchg
clc
dec
jle
adc
(bad)
icebp
xor
adc
adc
into
xchg
push
imul
xchg
push
adc
push
jnp
into
push
jnp
cwde
jg
mov
aas
xchg
scas
aaa
inc
aaa
adc
outs
xor
pushf
push
xor
ja
out
adc
mov
cmp
icebp
inc
jnp
loop
scas
imul
cmc
ret
(bad)
cmp
jo
jp
retfw
out
cli
adc
mov
nop
and
cmp
and
cmp
adc
xor
adc
cmp
push
and
ds
or
xchg
daa
or
es
xchg
pushw
mov
(bad)
out
cli
adc
and
xchg
cmps
out
xlat
pusha
stos
jg
in
jl
and
mov
push
loope
mov
push
cmps
push
mov
adc
addr16
mov
push
mov
fwait
jle
mov
loope
push
cmps
and
es
jnp
and
cmp
and
jg
and
cmp
push
daa
add
shl
mov
push
loope
(bad)
push
mov
pop
mov
push
popa
mov
(bad)
push
in
std
push
in
mov
shl
mov
cmps
cmps
retf
mov
rol
add
sti
cdq
(bad)
(bad)
movs
outs
push
out
add
dec
inc
push
mov
mov
mov
ror
cmc
add
cmp
or
pop
ficom
xchg
or
es
test
cmp
adc
pop
mov
repnz
or
popa
adc
mov
mov
adc
lods
jecxz
mov
out
add
mov
lahf
les
mov
add
mov
sti
cmp
icebp
sbb
add
jb
adc
mov
xor
mov
jae
mov
jb
adc
jbe
xor
mov
out
add
mov
aam
loopne
scas
call
dec
xor
push
mov
adc
cld
pop
mov
aam
ror
adc
push
fbstp
js
dec
mov
or
imul
nop
scas
call
fcomi
(bad)
mov
mov
jno
mov
bound
and
sub
sub
jmp
popa
or
pop
push
in
jmp
cmp
lea
lods
push
cli
mov
out
push
int
test
or
adc
cli
jno
sbb
push
(bad)
mov
icebp
cmp
or
es
sub
cmc
scas
sub
in
out
pushf
or
xchg
inc
push
sub
fdivr
push
xchg
test
xor
mov
sbb
loop
sbb
mov
out
xchg
jne
outs
gs
xchg
(bad)
dec
mov
mov
mov
xchg
ror
sbb
jo
ficom
sbb
int
sbb
sub
jo
loopne
(bad)
(bad)
mov
xor
push
cmp
inc
es
or
icebp
or
dec
je
ss
inc
mov
dec
je
xor
mov
mov
adc
push
dec
xor
push
es
aad
retf
repnz
rcr
jecxz
cmp
add
out
mov
bound
push
and
xor
xchg
bound
push
out
jb
in
repz
cmps
fidiv
and
mov
and
mov
in
jbe
mov
sub
mov
data16
push
and
xor
loope
not
loop
icebp
(bad)
addr16
mov
in
je
shl
cmps
aad
push
bound
push
in
lock
out
mov
cmps
mov
cmc
push
out
mov
and
jno
loopne
mov
data16
mov
add
nop
jecxz
xor
popa
mov
mov
xchg
je
mov
fidiv
and
xor
adc
jae
mov
repnz
pusha
mov
hlt
adc
inc
cmc
shl
mov
xchg
arpl
jbe
and
aad
push
not
out
icebp
xchg
cmps
cmps
lock
daa
mov
loope
shl
sub
and
pop
cmps
xor
(bad)
jecxz
not
out
mov
jecxz
jno
and
repnz
pusha
leave
aaa
push
movs
or
xchg
mov
inc
jecxz
jb
ja
adc
cwde
bound
or
xchg
repz
out
or
add
jno
fld
int3
inc
and
inc
mov
movs
test
inc
data16
and
mov
arpl
xor
xor
xchg
dec
lea
xchg
sbb
jnp
inc
rcl
dec
mov
cmp
into
popf
inc
mov
cdq
add
js
gs
pop
dec
retf
sbb
and
or
std
mov
mov
repz
les
(bad)
or
sti
jmp
xchg
mov
gs
sub
movs
sbb
enter
aas
cld
(bad)
fadd
mov
sbb
jb
loop
push
cli
shr
(bad)
fadd
inc
mov
fmul
(bad)
in
iret
push
outs
add
jecxz
cmps
or
loop
jg
dec
(bad)
fsubr
cmps
sbb
xor
sub
loop
mov
les
mov
mov
enter
sbb
sub
or
mov
adc
xor
fistp
pop
mov
mov
or
sub
mov
sbb
daa
ins
int3
inc
jb
add
or
or
mov
shl
scas
loope
pop
sbb
jmp
or
loope
(bad)
rcl
imul
ror
retf
cmps
leave
add
mov
sbb
mov
outs
outs
call
clc
adc
cmp
call
cdq
push
adc
popf
mov
jo
mov
mov
push
sub
dec
adc
lods
into
push
jo
and
shl
cmps
sbb
mov
sub
dec
shr
cmp
xchg
cwde
jmp
(bad)
push
sbb
jmp
das
pop
(bad)
adc
popa
jnp
fwait
sar
es
pop
(bad)
xchg
sbb
xchg
call
adc
mov
lahf
cmp
es
xor
sbb
jnp
xchg
scas
jo
out
cmp
out
xor
sbb
jnp
call
push
sbb
ret
es
lea
adc
jmp
jecxz
add
dec
push
pop
cdq
sti
xchg
xchg
imul
adc
push
(bad)
cmps
stos
into
ins
mov
cdq
sti
outs
aam
push
sbb
iret
push
in
jp
mov
xlat
es
xchg
jl
xor
jb
pop
jmp
push
sub
and
icebp
loop
sar
repnz
inc
xchg
enter
add
frstor
xchg
inc
(bad)
repz
pop
mov
add
outs
jp
adc
outs
pushf
(bad)
stos
out
jno
scas
out
dec
cdq
stos
outs
imul
cs
adc
scas
imul
fld
ret
mov
out
inc
mov
fwait
xor
(bad)
es
mov
push
sbb
cli
es
lods
mov
sbb
sti
es
mov
jp
lahf
sbb
es
xchg
into
adc
in
xchg
lahf
mov
repnz
or
adc
jp
call
push
fstcw
xchg
jne
or
push
jnp
mov
fcmove
push
sbb
jp
mov
bound
adc
mul
das
lds
add
(bad)
lds
outs
and
sahf
sbb
adc
adc
ret
pop
outs
sub
int
push
xchg
clc
cmps
mov
dec
leave
es
jno
dec
mov
std
arpl
sbb
cmp
sbb
push
xchg
in
push
inc
xor
jns
sbb
ins
test
test
popf
or
xchg
pop
xchg
idiv
xor
push
mov
and
sbb
jge
add
stc
xchg
sbb
push
lods
and
jae
xor
jp
les
mov
ret
mov
xor
jbe
fistp
cmp
(bad)
cmp
mov
xor
and
(bad)
(bad)
add
daa
and
cmp
test
pop
dec
jns
(bad)
stos
xchg
mov
arpl
jg
xchg
ret
xchg
addr16
aaa
push
and
ja
addr16
jo
es
ss
popa
shl
adc
mov
addr16
xor
out
adc
movs
ja
mov
imul
mov
clc
xor
cmps
mov
cmc
push
pusha
ret
mov
popa
mov
loop
xor
push
ja
mov
pop
jo
arpl
shl
repz
jmp
jbe
cmps
xor
push
and
mov
out
not
xor
test
xchg
daa
iret
mov
cmps
into
mov
and
push
and
mov
arpl
lock
and
(bad)
arpl
xor
and
repz
daa
mov
push
mov
cmp
cmp
shl
xor
xchg
xchg
daa
retf
out
repz
and
mov
cmps
xchg
jo
jecxz
mov
and
jne
jecxz
mov
and
xor
adc
add
inc
jae
fcmovnb
test
inc
jb
loope
xchg
add
(bad)
or
inc
sub
data16
xor
mov
dec
jb
jns
and
mov
rol
mov
push
lods
std
sahf
sbb
inc
cmp
(bad)
gs
xor
sbb
fmul
cmp
inc
add
mov
xchg
jmp
pop
stc
add
mov
and
cmp
jmp
adc
push
and
or
sub
mov
or
ins
loop
add
sub
cdq
cmp
sbb
xlat
cwde
mov
pop
xor
mov
das
js
cwde
test
mov
cdq
(bad)
fld
aaa
aas
xor
xlat
pop
mov
add
push
imul
or
enter
sbb
jmp
xchg
dec
loop
gs
add
dec
adc
pushf
push
std
mov
test
std
sti
in
ret
pop
cmp
lods
shl
bound
stos
nop
icebp
pop
mov
dec
fmul
xchg
xchg
rol
jecxz
sti
fstp
inc
or
cli
jmp
sub
inc
jl
xor
pop
into
mov
xlat
inc
sbb
fwait
adc
xlat
aad
push
(bad)
dec
movs
movs
push
ja
xchg
mov
gs
pop
int
push
hlt
sub
xlat
fwait
and
movs
sbb
and
lock
and
ror
pop
mov
fs
push
pop
mov
push
bound
loope
in
push
fs
cs
jecxz
sub
out
stos
pop
mov
add
aam
lds
xchg
loope
jmp
adc
adc
fldlg2
adc
fucomip
push
addr16
adc
test
test
imul
mov
push
arpl
sub
and
lods
xlat
mov
sub
and
sub
and
lods
adc
stos
(bad)
pusha
(bad)
sub
movs
pop
lods
xchg
and
cs
addr16
mov
sub
xlat
data16
out
shl
repz
and
ins
shl
ds
push
popw
jmp
int
xchg
shr
xchg
loopne
call
adc
out
push
arpl
adc
imul
aaa
sub
lock
push
ds
push
cmps
(bad)
jmp
inc
call
aam
mov
and
sub
cmps
xchg
out
pop
daa
fldcw
adc
push
out
sub
mov
mov
sti
inc
jb
sti
add
jb
and
dec
repz
mov
cmp
jb
aas
pop
xor
dec
xor
push
imul
dec
int
mov
test
sbb
pop
ret
add
xchg
pushf
pop
cmp
xchg
adc
pop
cwde
mov
test
dec
add
inc
or
inc
xor
adc
jb
test
cs
test
sbb
jp
dec
add
jb
mov
lds
nop
in
nop
xor
aas
dec
out
stos
sbb
jg
cmp
cmps
sub
xchg
pushf
in
in
int3
mov
add
sub
out
jnp
repnz
xchg
enter
sbb
outs
cmp
jb
std
test
fs
cmps
mov
add
pop
inc
out
call
xor
xchg
inc
(bad)
rol
test
enter
push
aam
fst
add
mov
pop
xor
mov
dec
mov
rcr
add
cmp
cli
add
repnz
mov
push
adc
enter
sti
push
sbb
push
repnz
add
in
and
xor
sbb
popa
pop
cmp
(bad)
aam
leave
dec
pop
xchg
pop
in
mov
mov
pop
or
mov
jno
sbb
mov
add
lods
aas
sbb
movs
adc
mov
mov
jge
sbb
or
and
jno
add
mov
sahf
jno
push
sub
movs
retf
movs
xchg
dec
mov
mov
sahf
sub
stos
loope
movs
lods
daa
add
lods
loope
pop
mov
lods
jge
sahf
icebp
test
test
sahf
sub
and
(bad)
fdivr
fs
cmc
sub
sub
hlt
pop
(bad)
pop
int3
mov
push
sahf
ss
push
lods
aas
out
lods
mov
std
and
mov
xchg
shl
in
cmps
or
(bad)
pop
ret
movs
test
mov
push
mov
adc
aaa
pop
int3
mov
jle
and
mov
xor
leave
fcmove
loopne
mov
mov
(bad)
mov
lahf
popa
sbb
pop
or
mov
cmp
sub
adc
pop
xchg
inc
shl
add
test
sub
mov
pop
pop
xchg
mov
xchg
sbb
mov
mov
test
in
movs
test
mov
mov
mov
test
xchg
push
gs
pop
xchg
mov
mov
test
out
add
dec
loopne
pop
xchg
mov
xchg
pop
xchg
mov
js
test
xchg
or
mov
mov
test
jmp
(bad)
and
push
lea
jge
xchg
pop
gs
xchg
inc
rcr
popa
xchg
jmp
cmp
jl
xchg
pop
sub
retf
inc
sub
shr
int
sbb
lea
std
add
mov
adc
fucomip
shl
call
and
ins
xchg
out
ins
shl
push
lods
adc
je
push
jecxz
imul
out
shl
(bad)
lods
adc
test
xchg
arpl
xchg
daa
(bad)
lods
aad
push
stos
shl
push
push
popa
lahf
stos
push
and
lods
shl
ins
push
mov
scas
ins
xchg
lods
in
push
pusha
mov
push
and
in
push
jecxz
in
push
mov
pop
jmp
int3
in
shl
sub
mov
xchg
jmp
push
ins
xchg
out
cs
in
pop
popa
jmp
sub
imul
cmps
cmp
mov
lods
xchg
pusha
push
out
adc
iret
stos
xchg
loope
scas
adc
push
jmp
pop
in
push
daa
sub
and
push
imul
ins
sub
pusha
jae
adc
(bad)
sub
jge
xchg
out
sub
es
stos
push
mov
push
sub
loop
jmp
in
imul
out
xchg
out
ins
push
cmps
call
sub
push
popa
jae
push
addr16
cmps
inc
push
inc
fldcw
sub
bound
inc
cmp
cli
sahf
dec
mov
pop
inc
jb
jmp
les
test
add
test
inc
inc
retf
xor
imul
mov
add
sbb
cmp
sub
xchg
dec
mov
push
pop
out
test
cmp
lea
mov
(bad)
fild
add
(bad)
push
xor
add
sub
cld
aas
stos
adc
jge
in
sahf
mov
mov
push
adc
repnz
jp
sbb
jb
or
lods
fcom
or
push
je
and
jg
mov
cs
jge
mov
jb
pop
cmp
pop
push
and
or
and
les
pop
mov
push
stos
lea
adc
or
push
cmp
cmp
sub
lds
mov
or
rol
push
or
push
cmp
fld
rcr
push
stc
sub
mov
add
add
sub
lds
ins
mov
push
and
in
jl
or
add
push
add
lds
in
push
or
dec
popf
fidivr
movs
mov
inc
xor
add
push
jo
sub
sub
popf
popa
ror
push
sbb
loopne
popa
push
inc
mov
std
push
mov
fadd
imul
outs
shr
icebp
mov
xchg
sbb
sbb
pop
mov
mov
inc
mov
mov
inc
cdq
push
add
push
test
les
mov
and
add
and
cwde
pop
les
mov
pop
mov
push
pop
mov
push
mov
sub
loop
les
sub
push
lds
mov
daa
push
in
in
imul
and
imul
and
add
pop
(bad)
jne
rcr
sbb
sahf
shl
and
jl
imul
les
add
add
inc
retf
mov
pop
(bad)
push
push
rcl
aad
scas
and
popa
in
mov
push
jecxz
mov
(bad)
addr16
(bad)
and
es
and
mov
push
arpl
and
xchg
mov
xchg
mov
and
adc
mov
arpl
mov
repnz
cmps
cmp
daa
mov
arpl
and
cmps
push
fs
shl
addr16
adc
push
cmps
sbb
and
nop
mov
data16
out
and
ja
push
loope
and
mov
mov
pusha
push
mov
mov
adc
retf
cmps
shl
out
and
daa
fldenv
xlat
daa
out
pop
and
loope
out
bound
cmps
aaa
and
xchg
mov
cmp
loop
daa
(bad)
in
and
xchg
mov
xchg
pusha
(bad)
daa
push
mov
shl
pushf
loope
cmps
and
aad
jecxz
xchg
mov
in
out
addr16
adc
cmp
pop
jecxz
addr16
pusha
and
push
xor
inc
les
add
jno
leave
inc
jb
int3
inc
fidiv
popf
aaa
pop
add
dec
pop
dec
inc
or
int
sub
movs
int3
mov
rol
cdq
pop
out
cmp
push
dec
or
(bad)
jg
aam
and
xor
or
mov
adc
es
dec
push
jb
popa
fstp
mov
sub
gs
enter
lock
fdivr
xlat
test
pop
xor
or
inc
cmp
test
lea
mov
pop
bnd
(bad)
and
jp
cmp
mov
loope
pushf
push
push
cmc
lea
cmc
fsubr
sbb
inc
push
dec
xor
inc
inc
das
cmp
dec
add
push
mov
movs
enter
lea
jnp
js
cmps
enter
and
sar
in
mov
adc
nop
fisub
jae
adc
loop
jne
or
lods
int
or
lea
cwde
ficomp
or
ret
test
mov
mov
shr
mov
stc
cld
ds
lods
and
mov
cs
push
stos
das
sbb
xchg
idiv
pop
cld
adc
adc
inc
mov
ja
fld
es
js
aam
cmp
jne
in
adc
mov
lock
test
fs
js
aam
mov
mov
sar
push
ins
cld
xor
mov
cld
ss
adc
js
cmp
pop
stc
fcomp
mov
cmp
cwde
xchg
cld
dec
mov
in
arpl
daa
xchg
es
popa
or
adc
fs
arpl
daa
xchg
mov
xchg
es
push
loop
and
pusha
and
(bad)
and
jecxz
and
gs
rep
push
loopne
movs
xlat
(bad)
sti
cmps
adc
push
in
xchg
push
in
daa
(bad)
mov
shl
push
loope
fs
popa
pop
out
daa
pushf
fs
pusha
in
push
and
and
(bad)
jmp
mov
xor
push
and
pusha
push
and
adc
xchg
aam
and
bound
movs
aad
or
push
xchg
and
and
cmps
pop
pusha
pop
and
pusha
mov
in
popa
ins
loopne
popa
lods
popa
xchg
mov
cmc
loopne
loopne
and
push
and
bound
jecxz
in
and
daa
push
movs
xchg
xchg
out
and
in
mov
and
push
jecxz
gs
arpl
and
sub
pusha
hlt
loopne
and
popa
shl
mov
movs
shl
inc
adc
mov
push
mov
xchg
mov
and
dec
and
inc
or
loopne
jmp
cmps
test
into
inc
jb
rol
popf
push
mov
rcr
retf
jp
push
mov
jns
push
test
sub
push
out
dec
stos
mov
pop
adc
push
stc
pop
jle
shl
pusha
add
add
mov
psubd
add
jb
or
movs
cli
mov
aam
scas
mov
test
adc
sbb
daa
or
jbe
push
cmp
cdq
mov
(bad)
test
or
int
mov
mov
pop
repnz
test
dec
or
mov
(bad)
leave
push
lods
pop
lock
into
call
mov
iret
inc
dec
inc
dec
aas
imul
mov
xlat
pop
pop
mov
rcr
push
repnz
push
lock
aaa
and
or
adc
mov
or
add
jbe
mov
jb
or
sbb
and
call
fld
mov
mov
repz
push
xor
sub
repz
add
xor
in
xor
jp
jns
std
jmp
fld
repnz
jmp
xor
jns
add
fdivr
mov
(bad)
pop
xchg
ret
es
mov
inc
jg
hlt
pop
pusha
fstp
arpl
call
ret
add
not
rcr
sub
adc
aas
mov
pop
ds
push
aas
mov
pop
cmp
bound
cli
fwait
adc
mov
bound
pop
mov
bound
cli
fwait
adc
mov
bound
pop
mov
fnstcw
cmp
sub
pop
sub
xor
sub
jmp
mov
inc
in
mov
retf
sbb
lods
add
data16
or
push
clc
inc
pop
mov
add
mov
add
out
out
(bad)
cmp
clc
out
sub
out
out
cmps
mov
mov
push
ins
push
inc
xchg
add
or
pop
enter
popf
(bad)
mov
sub
(bad)
aas
adc
pop
movups
in
mov
retf
and
push
add
cdq
jle
xchg
ja
pop
mov
add
xchg
inc
rol
add
mov
shl
mov
sub
inc
in
cmps
mov
shl
pop
gs
inc
sbb
xchg
mov
push
mov
mov
sub
mov
add
mov
inc
or
jge
arpl
pop
daa
jg
cmc
fnstsw
cs
cmps
mov
sub
mov
add
scas
outs
mov
push
pushf
add
mov
inc
shr
inc
add
add
push
jle
clc
or
mov
imul
cmps
test
stc
es
enter
lods
addr16
cmc
out
jmp
xchg
cmps
add
sub
jb
dec
outs
test
mov
mov
adc
push
push
jae
call
mov
adc
adc
shl
rcr
jecxz
sbb
in
xchg
bound
mov
jmp
aad
xor
pusha
mov
shl
ds
(bad)
loopne
fist
daa
inc
sbb
iret
sbb
and
aad
xchg
sahf
adc
pushf
pop
xchg
cmps
loop
push
mov
pop
push
addr16
fst
loopne
pop
xchg
loopne
pushf
xchg
retw
sbb
cmps
add
(bad)
cmps
leave
push
adc
or
fcom
es
pop
shl
fcmovnbe
and
fist
loop
adc
and
push
movs
stos
pop
xchg
jecxz
popf
xchg
arpl
(bad)
es
xchg
loope
sbb
mov
xchg
and
popf
shl
push
popf
aam
xchg
pop
push
fs
call
popa
fcom
cmps
sbb
sub
push
repnz
push
in
pop
push
popa
mov
fcom
cmps
or
loope
sbb
push
adc
addr16
test
xor
adc
xor
test
mov
call
shr
repnz
mov
fldcw
imul
sti
sahf
stos
mov
jns
ror
inc
and
scas
xor
clc
stos
jns
mov
leave
adc
icebp
stos
jno
dec
hlt
mov
mov
retf
int3
adc
test
mov
or
in
dec
jg
fimul
lds
(bad)
jmp
lods
aaa
test
xor
retf
jb
sbb
call
das
lea
stos
mov
sbb
gs
aam
or
push
cmps
pushf
push
int3
gs
aad
or
sub
mov
jp
xchg
(bad)
sub
jg
(bad)
and
mov
imul
stos
or
fs
dec
mov
jb
popa
cmp
retf
stos
adc
mov
(bad)
iret
movs
mov
(bad)
mov
xchg
jno
mov
mov
xor
je
adc
ds
mov
mov
les
sub
loope
sbb
push
mov
push
xor
rcr
mov
xchg
lea
push
ins
mov
adc
mov
(bad)
push
stc
pop
js
mov
(bad)
loopne
in
fwait
movs
sbb
and
into
leave
(bad)
fs
fwait
and
jp
daa
fs
leave
(bad)
push
std
(bad)
gs
popf
std
data16
gs
loopne
jg
loopne
in
pop
clc
mov
xchg
cmps
je
mov
out
add
jbe
mov
test
jp
mov
xchg
mov
xchg
stc
xchg
out
gs
jnp
sbb
xchg
xchg
mov
sbb
xchg
xchg
mov
add
xor
xchg
sti
inc
outs
push
es
mov
xchg
out
inc
outs
push
stos
xchg
stc
shl
xchg
sar
sbb
test
ret
iret
jnp
sbb
test
ret
out
add
(bad)
cwde
mov
test
bound
xchg
sub
xchg
into
(bad)
dec
pop
push
mov
and
mov
jnp
sbb
test
into
ja
out
add
mov
test
mov
test
push
xchg
stc
jle
xchg
jo
adc
dec
js
and
or
(bad)
(bad)
mov
in
sub
sbb
call
mov
dec
push
or
jb
or
jb
or
jb
or
jb
fst
daa
xor
push
in
sbb
fs
fist
inc
pop
aam
dec
sbb
mov
xchg
pop
push
mov
sbb
xlat
loopne
call
and
popf
push
and
fcom
daa
mov
adc
fcom
and
pop
xchg
mov
enter
dec
push
(bad)
loopne
(bad)
and
pop
adc
cwde
fst
and
adc
mov
neg
xchg
and
pop
xchg
data16
fst
jge
shl
add
xchg
mov
dec
fst
push
cwde
adc
loopne
pop
aam
sbb
adc
and
adc
mov
cwde
push
and
sbb
mov
clc
cwde
pop
cmps
mov
ficom
add
push
mov
pand
push
pop
push
fs
and
dec
loop
inc
stc
sbb
push
pop
test
xor
test
pop
scas
jns
gs
xchg
fwait
xor
mov
test
pop
and
inc
jb
out
jns
push
lods
jp
sub
mov
pusha
xor
jbe
cli
mov
pop
sbb
scas
add
popf
lock
(bad)
loope
scas
int
mov
mov
add
mov
xor
push
jb
retf
mov
mov
les
sbb
leave
retf
xlat
mov
syscall
enter
xor
loope
jb
icebp
push
aam
out
cmc
mov
jb
outs
cmp
cld
sub
pusha
push
mov
mov
cld
sub
adc
cmp
mov
mov
(bad)
push
into
(bad)
repnz
sahf
icebp
(bad)
jmp
and
jnp
out
jne
dec
adc
imul
mov
or
icebp
aas
imul
loopne
(bad)
cmc
icebp
mov
mov
add
shl
add
repnz
mov
mov
scas
mov
cmp
sub
icebp
movs
lea
icebp
mov
fdivr
or
xor
lea
imul
fcomp
repz
ja
fisubr
daa
and
xor
sub
xor
daa
leave
mov
cmp
add
sub
pop
sub
cmp
ins
sub
daa
push
adc
sbb
lock
outs
hlt
jne
pop
xor
and
outs
cmp
dec
push
cmp
imul
adc
aaa
pop
inc
cld
daa
jge
std
not
xchg
adc
imul
fbld
or
lods
sub
cld
addr16
lods
jp
xor
pop
mov
fucom
mov
push
ins
sub
xchg
mov
mov
adc
aaa
mov
pop
mov
outs
(bad)
lods
jmp
jo
cmp
daa
xor
lods
sub
xor
out
cmp
pusha
bound
add
add
cld
xor
push
shr
daa
sub
cmp
lods
loop
std
pop
iret
arpl
lods
sub
cld
frstor
shr
daa
ja
(bad)
and
jle
call
cmp
fcomp
std
dec
retf
retf
std
ds
xchg
jge
retf
shr
cmp
sar
retf
adc
and
cli
daa
and
push
in
push
xchg
mov
add
push
out
push
(bad)
daa
int3
push
nop
addr16
xchg
push
loope
xchg
xchg
and
push
shl
sbb
push
cmps
out
xchg
pusha
mov
adc
out
xchg
push
arpl
nop
push
loopne
rcl
data16
shl
add
xchg
aam
retf
xchg
push
out
xchg
push
out
xchg
push
es
rcl
pop
rcl
out
xchg
push
cmps
and
es
xchg
and
xchg
aad
not
pop
and
pop
mov
inc
push
push
jecxz
adc
dec
push
push
or
xchg
popa
push
push
xchg
daa
push
rcl
es
xchg
push
jecxz
rcl
and
loop
adc
and
aad
mov
push
and
xchg
push
mov
std
rcl
bound
adc
add
xchg
pop
and
(bad)
out
aad
loop
push
pop
mov
sbb
xlat
mov
sub
push
and
adc
cmps
repz
xchg
loope
push
push
loopne
adc
pusha
adc
and
push
adc
rcl
pop
mov
fist
(bad)
loop
aam
loopne
sti
and
dec
adc
inc
or
pop
push
test
cmp
cmp
shr
mov
fisub
mov
adc
or
inc
pop
xor
shl
cld
sub
ja
jp
ret
rcr
push
mov
add
mov
lods
cld
jg
ss
mov
and
jb
push
lds
sub
inc
mov
lods
stos
mov
out
adc
repnz
test
repnz
cmp
retw
imul
cmp
xchg
ret
jg
idiv
and
cld
cmc
ror
fucomp
(bad)
hlt
dec
cmp
dec
mov
jne
add
pushf
pop
push
cld
cmp
mov
or
bound
clc
jg
mov
lods
xchg
(bad)
dec
adc
dec
ins
mov
ss
mov
hlt
(bad)
in
xor
dec
pop
cld
and
or
xor
ins
aam
inc
std
movs
push
jns
dec
sub
and
or
push
std
sbb
cmps
jmp
stos
arpl
mov
int3
jp
icebp
lods
xchg
lea
aas
adc
xchg
in
mov
mov
test
jg
int3
pushf
je
inc
jb
(bad)
(bad)
cmps
and
push
lds
dec
jmp
jle
jnp
pushf
push
ss
lods
ja
jmp
jnp
cmp
mov
xchg
scas
push
ja
stos
push
xor
cli
outs
push
adc
add
sbb
cwde
hlt
fsub
inc
push
in
inc
aad
cmp
sti
int
cmc
xor
xchg
adc
sub
cmps
sub
cmp
push
rol
(bad)
xor
xor
inc
out
xchg
xchg
cmp
xchg
leave
jmp
jle
(bad)
adc
push
mov
and
hlt
or
mov
ds
gs
out
pop
bound
sub
imul
inc
add
add
shl
test
mov
add
arpl
jmp
xchg
sbb
inc
xlat
mov
add
jg
jmp
xchg
je
inc
xlat
aam
xor
xor
arpl
enter
inc
bound
or
mov
mul
jno
imul
push
mov
xor
push
pop
pop
fisub
imul
sub
cwde
cwde
or
mov
jp
enter
ds
xchg
sar
pop
push
push
out
ret
mov
adc
ficom
mov
sub
xchg
jmp
push
add
mov
mov
jae
dec
pusha
and
cmps
adc
mov
loop
xchg
mov
idiv
inc
dec
xchg
sub
push
imul
lods
sub
retf
push
jnp
arpl
and
push
add
mov
call
push
cmp
sbb
jecxz
dec
jmp
cmps
retf
xchg
and
jl
push
mov
movs
xlat
push
jae
out
aam
ins
(bad)
sub
call
jmp
call
jb
leave
loope
xchg
cmp
inc
ins
xchg
adc
sub
mov
bound
xchg
sub
xchg
push
jmp
adc
xchg
not
arpl
add
xlat
add
dec
add
inc
fcmovnb
loopne
lahf
cld
sbb
add
push
rol
mov
ret
repnz
out
jp
out
xor
cmps
add
xchg
fnstcw
cld
pop
stos
adc
mov
pusha
(bad)
jle
std
and
adc
push
es
rcl
loopne
push
xchg
out
aad
out
rcl
cmps
mov
aad
jae
(bad)
mov
mov
push
push
daa
inc
xchg
xlat
dec
rcl
arpl
nop
and
adc
xchg
mov
sbb
adc
cmps
aad
mov
call
rcl
and
xchg
addr16
push
in
xchg
xchg
and
pop
shl
inc
xchg
adc
or
adc
dec
xchg
adc
xchg
push
adc
push
xchg
adc
sahf
push
xchg
out
adc
and
adc
sub
adc
sub
xchg
xor
push
out
adc
and
adc
mov
add
push
jecxz
adc
push
out
rcl
rcl
and
adc
push
movs
mov
xchg
push
sub
out
push
shl
xchg
push
arpl
push
shl
stos
pop
inc
jb
pop
inc
jb
pop
inc
jb
pop
inc
jb
pop
inc
jb
mov
adc
hlt
cmps
bound
add
jns
pop
inc
cmp
out
push
mov
fcomp
int
std
sub
inc
gs
bound
xor
stc
imul
popf
jp
mov
retf
jp
or
idiv
hlt
jmp
cwde
xor
cmp
(bad)
in
aad
pop
xchg
pop
mov
mov
stos
adc
jo
xor
push
add
mov
mov
cli
xchg
dec
push
add
mov
cmp
outs
jae
movs
rol
mov
add
cld
pop
jns
inc
call
dec
mov
(bad)
out
arpl
cmp
pop
loop
sub
movs
call
stos
lea
js
cmp
mov
xlat
and
inc
int3
inc
cwde
adc
outs
pushf
add
rcl
sub
jb
mov
xchg
jns
cmp
sub
inc
loopne
movs
adc
aam
fdivr
lea
mov
call
mov
aad
cwde
fstp
sbb
lea
les
in
out
out
daa
push
pop
fsub
bound
cmp
pop
jne
xor
pop
and
in
jae
(bad)
fstp
test
cmp
inc
and
dec
test
test
dec
jge
cs
mov
jb
sbb
stos
mov
leave
in
jb
pop
outs
popf
aaa
mov
pop
(bad)
in
es
or
push
xchg
in
or
arpl
seta
mov
retf
shl
inc
or
cmps
ret
mov
or
adc
and
dec
shl
sbb
xchg
loop
mov
loope
mov
out
dec
push
arpl
push
mov
mov
push
pusha
cmp
nop
and
push
and
enterw
or
nop
jecxz
dec
adc
pushw
mov
out
dec
xchg
jecxz
or
mov
cs
xchg
cmps
repz
adc
mov
xlat
loopne
leave
push
cmps
cmp
xchg
out
dec
shl
dec
xchg
mov
push
movs
aam
shl
dec
push
es
dec
xchg
cmps
sbb
xchg
mov
and
dec
adc
stos
retf
push
and
dec
xchg
pusha
mov
push
arpl
adc
enter
dec
(bad)
mov
retf
and
dec
push
movs
push
mov
arpl
mov
in
push
popa
mov
int
loopne
or
(bad)
loop
push
push
and
mov
and
or
and
dec
xchg
loope
retf
aad
adc
nop
bound
aam
loopne
out
xchg
and
aam
stos
fmul
mov
mov
test
outs
jp
das
test
lea
(bad)
adc
call
out
adc
fldenv
addr16
jp
das
test
lea
add
mov
scas
dec
push
jo
or
out
or
xchg
out
dec
shl
dec
adc
sbb
(bad)
loopne
xlat
cmps
mov
dec
pop
and
retf
push
loopne
dec
adc
jle
xchg
loop
dec
adc
and
mov
retf
retf
lea
adc
nop
mov
push
(bad)
xlat
cmps
cmps
dec
shl
gs
cmps
stos
or
pusha
in
dec
adc
mov
push
and
mov
jecxz
dec
aam
or
cmps
ret
daa
leave
mov
mov
xchg
addr16
dec
push
pusha
(bad)
dec
nop
loop
dec
xchg
out
dec
push
cmps
out
push
movs
in
push
mov
out
lea
and
retf
jle
shl
add
xchg
daa
dec
into
xchg
popa
into
dec
adc
adc
push
movs
(bad)
fimul
and
dec
adc
mov
out
dec
xchg
mov
mov
xchg
loopne
mov
(bad)
iret
push
and
mov
out
dec
adc
es
iret
pop
out
mov
pop
push
push
loope
mov
cmps
in
adc
push
sbb
jb
sbb
push
addr16
and
(bad)
sub
push
mov
and
pop
sbb
add
test
xor
inc
shl
mov
dec
pusha
icebp
inc
jp
imul
inc
and
mov
pop
or
mov
inc
into
das
push
cmp
(bad)
mov
lahf
(bad)
cmovb
jb
jns
mov
fisubr
punpcklbw
aaa
cmc
xchg
fmul
iret
movs
mov
je
dec
xchg
(bad)
sti
jecxz
sbb
enter
repnz
imul
push
add
dec
fs
jne
adc
pop
test
mov
jle
call
ss
dec
push
sbb
mov
in
pushf
or
lea
and
add
aaa
sub
stc
xor
pop
(bad)
mov
dec
pop
loop
jbe
sub
cld
je
inc
ja
es
sub
(bad)
(bad)
push
rcr
or
xor
sbb
ja
cli
mov
mov
jae
jb
loop
sub
repz
and
bound
out
and
cmc
in
add
or
(bad)
(bad)
fadd
cmp
dec
fs
mov
addr16
mov
mov
or
ins
adc
loop
add
xor
cli
fwait
daa
mov
add
jns
ins
retf
bound
xchg
pusha
inc
adc
cmp
xchg
and
sub
lahf
inc
(bad)
(bad)
jno
inc
cmp
mov
bound
and
lea
(bad)
aam
pop
pop
or
push
enter
and
push
lea
outs
inc
xchg
sbb
jp
pop
stc
shl
sbb
mov
xchg
sub
mov
bound
imul
mov
mov
cmp
jl
add
jmp
mov
retf
sub
adc
and
jecxz
pop
pop
loop
jns
out
sbb
add
jmp
mov
js
xchg
ror
pop
pop
mov
(bad)
popf
xlat
xchg
mov
(bad)
cmp
sbb
sub
inc
fs
jno
xor
pop
loop
js
outs
fsub
add
jmp
mov
sbb
fadd
into
add
neg
jb
aad
(bad)
sbb
out
push
xchg
loopne
out
add
ficomp
shl
call
(bad)
(bad)
out
sahf
cmps
lods
daa
rol
std
ret
sub
cli
bound
fs
rcr
not
inc
cli
pop
xchg
pusha
pop
(bad)
jp
and
bound
pop
(bad)
and
nop
mov
mov
mov
and
(bad)
mov
mov
dec
push
inc
adc
in
lea
popa
cmc
jg
adc
push
aad
daa
leave
sbb
into
test
nop
cs
and
sti
loope
cli
push
sbb
sahf
out
pop
add
(bad)
ins
jae
sbb
out
shr
add
loopne
pop
lds
and
popa
ja
test
bound
lods
loopne
sub
bound
pusha
jae
cmc
sbb
jge
and
push
jmp
xchg
and
into
mov
sub
sti
imul
dec
nop
arpl
mov
mov
push
xchg
mov
push
repnz
pop
aad
xor
push
push
dec
data16
pop
iret
add
std
jb
pop
xchg
cmps
pop
push
jmp
sbb
and
test
xchg
loopne
(bad)
dec
adc
xchg
mov
adc
xchg
pusha
jae
jmp
bound
mov
add
cdq
adc
imul
and
sbb
jmp
bound
aam
(bad)
std
ins
jecxz
sub
pusha
ret
mov
xchg
and
adc
and
and
les
repnz
inc
and
ret
mov
and
lahf
call
push
movs
mov
je
hlt
arpl
test
loopne
les
mov
cmp
lods
clc
ss
sbb
push
outs
adc
jno
(bad)
jmp
and
test
nop
pop
pop
leave
add
or
push
and
jo
and
sub
jp
ror
cli
into
and
outs
xchg
clc
test
dec
pushf
pop
test
nop
dec
aam
cmp
jecxz
je
pop
sbb
sub
imul
jecxz
je
pop
unpckhps
and
and
xchg
(bad)
adc
ficomp
sbb
ins
sti
and
sahf
mov
nop
jmp
adc
inc
mov
sbb
sub
popf
cmps
fwait
clc
add
add
sbb
movs
loopne
bound
(bad)
jmp
bound
sbb
dec
mov
pop
push
mov
inc
push
iret
add
push
iret
add
fcmovu
jb
fwait
and
outs
loopne
gs
pusha
jne
rcr
jbe
clc
std
popf
retf
xchg
pop
fwait
rol
fstp
mov
loop
sahf
mov
loope
and
mov
nop
cmp
std
xor
je
sar
pop
inc
sbb
ret
mov
pop
(bad)
jnp
pop
cmp
shl
mov
and
inc
(bad)
or
jecxz
jnp
pop
scas
sbb
fwait
sti
and
bound
push
and
pop
pusha
shr
jne
outs
hlt
xchg
add
and
add
loope
pop
fistp
mov
pop
in
mov
rcr
lods
lods
sahf
call
out
fbld
jge
rcr
call
test
sahf
bound
cmp
popf
mov
adc
and
lahf
jno
outs
inc
add
jp
pop
push
aad
bound
adc
mov
pop
dec
shl
(bad)
fcmovnu
mov
xchg
xchg
mov
or
mov
pusha
push
jb
popf
aaa
pop
ror
mov
mov
fs
sbb
loopne
jb
adc
loope
pop
call
lahf
sbb
fisub
xor
and
test
stos
jo
jmp
sbb
jecxz
pop
sbb
pop
cdq
push
mov
sbb
repnz
and
bound
shl
shl
ss
popf
adc
push
out
add
pop
cli
cdq
call
sbb
jle
sbb
pop
daa
mov
dec
and
std
cmp
sbb
pop
fwait
push
pop
jns
sbb
mov
and
ret
nop
adc
mov
jle
cmps
clc
sub
xchg
sub
popf
mov
adc
loope
call
sbb
push
and
imul
test
test
jmp
arpl
rcr
std
sbb
mov
xchg
arpl
pop
outs
pop
xchg
push
clc
jns
sbb
sbb
mov
add
into
stc
and
and
shl
ret
cmps
clc
mov
sub
popf
push
imul
push
stos
jns
sbb
sbb
mov
daa
mov
inc
fscale
cmp
jecxz
pop
adc
pop
xchg
push
cwde
jns
sbb
push
and
stos
add
outs
clc
and
or
mov
mov
cmps
sbb
addr16
ret
mov
shl
fdivr
xor
ficomp
add
push
and
sbb
jbe
mov
call
bound
adc
std
adc
mov
xchg
mov
pop
xchg
push
xor
ficomp
out
sbb
dec
imul
pop
xchg
pop
inc
inc
xor
and
dec
pop
inc
inc
and
jno
adc
push
loop
fscale
ret
cmp
fcomp
bound
cmps
loopne
mov
cmps
pusha
xor
inc
test
push
pop
call
sbb
xor
data16
xchg
test
gs
fscale
adc
jecxz
pop
rcr
sbb
adc
and
pop
sbb
or
add
pop
sub
es
pushf
retf
jg
cwde
and
clc
pop
pop
push
jg
popf
jnp
adc
jg
and
push
adc
ja
sub
add
rcr
fistp
add
shl
sbb
xor
and
adc
bound
xlat
iret
and
add
jb
call
dec
mov
repnz
pop
loope
cmp
fisubr
pop
dec
shl
ret
fimul
push
ss
scas
push
scas
pusha
aas
xchg
push
shl
dec
call
scas
pusha
aas
sbb
ja
loope
repnz
call
scas
pusha
mov
adc
loopne
mov
jg
dec
adc
shl
sbb
jecxz
jg
fdivr
push
xchg
and
std
add
jecxz
jg
fcom
push
adc
cdq
movs
and
jae
repz
ins
enter
xor
(bad)
jo
mov
popa
pop
jae
push
cli
rcr
rcr
adc
aam
(bad)
clc
adc
push
mov
jl
imul
jle
pop
ds
and
adc
push
movs
(bad)
inc
dec
shl
ret
pop
fsubr
mov
sbb
ins
enter
push
jae
aas
add
bound
popa
jae
fiadd
add
into
mov
mov
mov
cmps
push
sbb
(bad)
dec
pop
xchg
and
sbb
dec
pusha
loopne
cmps
scas
jo
out
and
(bad)
add
into
mov
lods
jae
popa
sbb
fisubr
add
jo
ins
les
cmp
and
imul
ret
mov
mov
cmps
aam
jae
(bad)
and
jno
into
add
jl
jb
pop
inc
add
jo
mov
sbb
repz
pusha
shl
jo
outs
loopne
sbb
and
adc
ret
popa
pop
push
jo
push
into
jecxz
scas
sub
mov
shl
jae
push
fisub
movs
aaa
lods
pusha
aas
or
mov
shl
jb
push
out
and
(bad)
pop
xchg
lea
popf
cmp
rcr
pop
sbb
push
mov
adc
jo
add
shr
bound
iret
xor
cli
xchg
jo
and
jmp
nop
pop
ins
adc
mov
mov
shl
sub
push
in
popf
or
adc
inc
sub
test
and
add
popf
loopne
idiv
loopne
inc
push
pushf
sbb
shl
out
in
outs
pop
sbb
sahf
aam
hlt
cs
adc
and
pop
sbb
push
jb
sbb
adc
mov
movs
or
adc
mov
mov
sbb
dec
cs
int3
pop
push
nop
mov
mov
mov
or
jle
adc
(bad)
in
cs
(bad)
loopne
icebp
push
sub
add
xchg
mov
lahf
fimul
adc
enter
adc
in
popa
(bad)
jge
mov
mov
or
cs
mov
shl
sbb
popf
into
es
jb
sub
sbb
xchg
sub
xchg
loop
(bad)
push
loopne
add
cmp
push
loope
inc
push
les
cmps
mov
adc
pop
les
jecxz
ret
and
push
out
ret
sub
out
inc
shl
add
xchg
cmps
js
adc
pop
add
jecxz
inc
push
out
push
xlat
cmps
xlat
inc
xchg
mov
fwait
inc
xchg
addr16
push
in
add
addr16
shl
test
ret
adc
xor
xor
and
xchg
arpl
jge
out
mov
(bad)
and
cli
adc
push
jge
popa
adc
xchg
pusha
sbb
push
and
jge
cmps
pusha
mov
adc
std
adc
idiv
pop
es
js
loope
jl
sar
dec
cmp
xchg
es
adc
(bad)
cmp
es
and
jnp
pusha
and
push
popa
call
jnp
loopne
stc
aam
ja
push
loope
cli
push
loopne
js
es
jns
and
mov
adc
mov
xchg
pusha
sar
aam
fstp
mov
cmp
das
cmp
mov
push
xchg
ficom
repnz
dec
pop
mov
jmp
xor
repnz
leave
mov
adc
push
sbb
repnz
mov
sbb
push
or
push
rcl
jge
mov
in
push
aas
imul
test
jmp
cli
movs
mov
mov
test
ja
or
movs
rcr
push
lds
adc
shl
jb
imul
sub
lds
sub
sbb
xchg
inc
xlat
jg
mov
pop
clc
and
fsub
sbb
xlat
cli
ficomp
sub
xchg
outs
inc
stos
adc
xchg
push
test
(bad)
(bad)
shr
dec
test
push
pushf
bound
xlat
mov
pop
je
sub
neg
mov
cmp
bound
push
js
push
jg
pop
xlat
cli
pushf
sub
mov
inc
xchg
jo
int3
repz
je
mov
pop
xor
mov
mov
cli
test
jb
inc
cmp
sub
cmp
xchg
xchg
lea
imul
in
aam
movs
and
pop
mov
shr
in
iret
repnz
stc
inc
sbb
ror
stc
fisttp
idiv
jl
xchg
inc
(bad)
sbb
test
das
rol
sub
mov
push
adc
inc
inc
mov
jmp
ss
or
adc
push
inc
aam
cmp
cmp
popa
(bad)
cmp
outs
sub
inc
inc
call
jnp
cmp
mov
push
(bad)
mov
cld
fldcw
jle
push
xchg
sub
push
mov
push
cld
in
sub
call
xchg
adc
push
arpl
stc
loop
sub
cli
pop
sub
stc
cmp
inc
(bad)
retf
xchg
or
push
xchg
lods
adc
imul
pop
xchg
xor
cs
addr16
sub
sub
jg
(bad)
or
cmp
inc
jl
inc
clc
ja
retf
cmp
fs
xchg
cmps
jns
dec
inc
or
jge
mov
mov
rol
std
(bad)
scas
stos
cmp
test
sub
mov
jge
xchg
adc
xor
pop
inc
mov
pop
xchg
xor
xchg
std
shl
cmp
mov
add
stos
dec
imul
cmp
scas
inc
push
push
xor
push
(bad)
sar
pop
(bad)
in
adc
xchg
ds
inc
dec
std
shr
adc
ins
xchg
inc
mov
test
or
push
and
pop
jle
fmul
retf
and
cdq
movs
aam
push
inc
rcr
out
daa
sub
and
dec
push
pop
std
in
xchg
jle
stc
mov
cld
xchg
cmp
call
fnstsw
sub
gs
xchg
mov
and
cmp
lea
dec
inc
out
(bad)
scas
retf
xchg
adc
cld
ret
xchg
cmp
fidivr
push
shl
inc
call
fild
adc
xchg
or
test
jp
xchg
push
inc
loop
mov
(bad)
mov
mov
jo
stc
add
inc
inc
jns
lock
xchg
cmp
mov
xchg
and
or
push
inc
jae
out
into
adc
mov
pop
js
add
(bad)
inc
addr16
out
jecxz
cmp
mov
adc
xchg
xor
call
lds
sub
loop
cwde
(bad)
lahf
or
pop
movs
jnp
sub
mov
mov
mov
lds
mov
push
xchg
popf
and
mov
sub
dec
or
sbb
mov
or
xchg
ds
cmps
repz
sbb
mov
test
in
(bad)
push
sbb
ret
xchg
cmp
inc
jns
sub
mov
push
enter
pushf
adc
sar
and
stc
push
out
call
pusha
adc
xchg
and
jge
and
(bad)
shl
imul
xchg
mov
jb
adc
js
push
and
cmp
nop
cmps
inc
mov
push
out
jns
mov
xchg
cli
adc
arpl
(bad)
daa
mov
call
cmps
call
stc
xchg
and
mov
xchg
out
call
and
mov
(bad)
mov
or
fs
mov
xchg
out
mov
adc
mov
mov
push
mov
mov
push
in
cmp
in
stc
adc
jge
push
and
jge
data16
xlat
bound
xchg
and
mov
xlat
mov
pop
jns
out
movsx
dec
dec
jno
aas
inc
cld
addr16
add
jno
adc
lds
stc
and
das
iret
mov
je
and
sbb
test
jge
test
inc
outs
gs
or
(bad)
or
outs
cmp
inc
mov
and
data16
cmp
jecxz
lea
push
inc
xchg
das
add
pop
jo
js
inc
inc
xchg
pop
dec
sar
iret
sub
inc
mov
or
test
jbe
imul
mov
add
push
pushf
bound
out
imul
mov
dec
(bad)
out
inc
mov
push
pop
lods
cmp
jp
xor
stos
lea
inc
push
(bad)
and
inc
inc
mov
adc
(bad)
mov
xchg
sub
psubsb
mov
scas
imul
mov
fsubr
add
jb
sar
(bad)
mov
dec
mov
xor
imul
pop
lds
pusha
ror
repz
adc
stc
lods
push
stos
lea
inc
sub
test
mov
adc
lea
adc
lods
or
mov
dec
scas
stos
adc
sar
dec
mov
mov
xor
inc
add
adc
call
inc
jp
mov
scas
movs
test
pop
aad
pop
les
aad
pop
outs
call
mov
scas
sti
inc
outs
outs
adc
mov
je
dec
test
outs
sbb
pushf
ja
mov
sbb
pusha
xchg
lahf
dec
sub
or
push
int
call
mov
or
dec
les
mov
xchg
and
mov
fwait
stos
ret
ret
lahf
cmc
in
sbb
pop
aad
sbb
(bad)
call
adc
les
fcomp
adc
pop
dec
aad
(bad)
pop
ror
outs
les
dec
aad
cmp
clc
cmp
cld
mov
dec
sbb
aad
shr
mov
aad
cmp
fcomp
jnp
xchg
cmp
push
ror
aad
sar
sti
rol
push
popa
adc
test
push
jne
mov
dec
data16
les
push
mov
cs
movs
js
or
adc
pushf
out
sub
or
dec
imul
jmp
ss
daa
scas
mov
cmp
scas
sbb
mov
mov
enter
add
cwde
cld
and
fsubr
nop
sbb
cdq
enter
push
in
ds
pop
ins
xchg
fcomp
xchg
and
out
pop
outs
in
mov
push
lds
cmp
sbb
ins
fisub
add
pusha
shl
jecxz
xor
addr16
hlt
xchg
jecxz
jo
and
xor
push
arpl
jbe
cmps
in
(bad)
mov
imul
and
hlt
push
loope
jb
mov
data16
cmps
inc
xor
push
loope
jae
and
repz
adc
mov
sahf
mov
mov
arpl
aam
in
xchg
mov
sub
nop
mov
jbe
shl
(bad)
jno
and
xor
add
push
es
xor
push
in
repnz
mov
adc
push
addr16
xchg
addr16
mov
jecxz
jo
mov
imul
mov
mov
push
cmps
stc
mov
data16
jne
pusha
add
nop
mov
mov
adc
adc
adc
xchg
xor
adc
loop
je
cmps
cmps
xor
scas
jno
in
repnz
and
xlat
and
nop
out
xor
es
jbe
daa
les
loopne
jb
daa
jle
inc
sub
mov
push
mov
xor
inc
mov
arpl
fs
or
mov
shr
mov
rcl
jecxz
jb
sbb
fdiv
int3
fimul
retf
push
bnd
and
push
lea
clc
fmul
jnp
arpl
xor
add
inc
ftst
inc
xchg
jecxz
jb
pusha
es
and
pushf
js
imul
(bad)
pop
out
sbb
mov
leave
mov
call
adc
repnz
mov
sbb
lea
or
jg
fs
and
dec
fs
fnstsw
fwait
icebp
aas
out
fldcw
int3
bound
xchg
add
cmp
or
jp
cdq
pop
fwait
lea
xor
cld
stos
(bad)
pushf
lods
idiv
or
fs
jne
inc
out
mov
mov
imul
scas
add
sub
adc
mov
pop
imul
stc
pushf
sbb
lea
mov
mov
cld
dec
jle
sub
imul
out
cmp
aaa
sbb
push
fild
retf
mov
push
push
(bad)
mov
adc
(bad)
aas
dec
pop
jle
outs
jmp
push
aaa
daa
cmp
cmp
cli
jne
sbb
mov
data16
movs
xor
mov
stos
aaa
adc
lock
cmps
mov
(bad)
and
ja
mov
push
mov
pusha
ret
xor
and
mov
out
xor
push
xor
and
ja
arpl
push
in
jb
arpl
xor
sub
loope
jae
es
shl
mov
not
popa
xor
mov
dec
xor
and
not
xchg
mov
mov
(bad)
xlat
es
je
mov
mov
push
mov
jns
xchg
mov
shl
and
aaa
xchg
pusha
or
xchg
push
mov
mov
fbstp
adc
sbb
adc
and
adc
and
xor
in
xor
push
and
mov
data16
push
mov
inc
xor
mov
and
xor
xchg
bound
pop
mov
pop
xor
out
jo
mov
push
adc
jmp
aam
xor
push
out
jbe
daa
jle
adc
xor
xchg
and
push
sbb
adc
mov
movs
dec
into
and
cwde
dec
mov
cmp
lahf
mov
xchg
pushf
lds
sub
jmp
lds
jns
push
inc
cmp
out
add
int
dec
loop
cwde
test
jmp
xchg
xor
lea
in
jb
addr16
and
pop
mov
in
movs
lea
pop
call
arpl
mov
adc
jae
mov
in
jb
pop
inc
mov
push
sbb
dec
adc
(bad)
mov
pop
mov
pop
loop
jg
add
repnz
fcos
mov
(bad)
mov
loop
test
in
mov
dec
or
xlat
fmul
outs
mov
scas
in
test
movs
mov
test
cmp
in
imul
mov
sahf
and
in
mov
xor
cmp
cwde
sub
add
xchg
jns
fcomp
jp
sbb
add
pop
repz
sahf
pop
daa
in
fdivr
cmp
fdivr
imul
movs
sub
dec
in
push
out
fwait
or
cmps
imul
or
pop
das
cmc
jne
cld
int
outs
jbe
movs
sbb
xchg
pop
ins
stc
imul
and
sbb
int3
cmp
pop
nop
adc
aam
lds
sbb
or
in
pop
sub
cmp
cmc
push
shl
sti
sbb
je
clc
and
cmp
mov
test
cmps
ret
sti
popf
inc
imul
iret
mov
mov
pop
dec
jnp
adc
xor
sub
adc
push
clc
retf
gs
cmp
cmp
mov
sub
ins
sub
cmp
call
cmp
push
call
aaa
scas
sub
test
add
enter
test
fucomip
jne
pop
fmul
test
fbld
test
lahf
mov
cmp
iret
jp
push
push
add
aam
pop
mov
movs
fwait
jne
and
cmc
(bad)
mov
xor
loop
mov
loopne
mov
and
xor
xor
aam
sti
mov
es
jne
and
mov
mov
dec
hlt
adc
dec
jb
out
je
and
xor
push
and
jne
daa
arpl
push
cmps
test
push
data16
aam
xor
push
in
mov
and
je
fs
not
mov
xchg
not
cmps
xchg
repnz
and
hlt
aad
cmps
ja
mov
sub
data16
not
je
jecxz
jne
mov
xor
daa
int
xchg
loop
jae
bound
ja
loope
cmc
push
and
xor
sub
xchg
pusha
in
jne
pusha
xor
aam
xor
push
addr16
xor
pusha
inc
sub
fs
push
nop
mov
xchg
stos
push
and
stos
adc
pop
ins
shl
pop
sub
cmps
and
push
addr16
cmps
test
sub
aad
mov
adc
js
push
popa
mov
jmp
aam
dec
ins
shl
imul
adc
add
jb
cmp
dec
cmp
jb
inc
jb
cmp
jp
inc
jb
cmp
bound
inc
jb
cmp
push
inc
jb
cmp
xchg
cmp
xchg
cmp
call
jb
cmp
xchg
inc
jb
cmp
mov
inc
jb
cmp
mov
inc
jb
cmp
mov
cmp
cmps
cmp
stos
cmp
scas
cmp
sar
inc
jb
cmp
fidivr
inc
jb
cmp
adc
push
and
sub
mov
and
aam
lods
sub
cmc
imul
cmp
xchg
loopne
sub
mov
sub
push
adc
shr
xchg
loop
sub
push
sub
mov
out
push
out
sub
sub
daa
mov
shl
jae
aam
(bad)
jmp
and
push
and
in
xchg
pusha
ret
popa
or
shl
retf
in
test
xchg
mov
fsubr
pusha
mov
ins
shl
ins
push
data16
test
adc
xchg
popa
jmp
xchg
and
cs
mov
dec
in
xchg
arpl
push
cmps
nop
outs
nop
popa
xlat
sub
mov
sbb
shl
sub
movs
ins
nop
out
push
and
xlat
mov
imul
adc
mov
jmp
out
push
xchg
(bad)
iret
stos
push
jecxz
ins
push
jecxz
stos
xlat
and
push
loope
in
adc
out
push
jecxz
push
mov
sub
push
arpl
test
and
imul
and
stos
adc
lea
scas
(bad)
retf
js
cmp
dec
jbe
jns
stos
pop
cmp
mov
call
(bad)
jno
xor
shr
push
push
mov
cli
or
or
addr16
inc
retf
icebp
(bad)
scas
ds
xor
les
aam
mov
rcl
add
jmp
mov
add
imul
mov
enter
popa
cld
jnp
adc
mov
mov
push
pop
fwait
pop
ret
mov
test
add
es
repz
pushf
movs
jmp
jp
jp
outs
sbb
clc
push
bound
out
cli
movs
rol
add
dec
idiv
mov
pop
push
add
enter
add
add
pushf
test
stos
lea
cli
or
mov
ss
sti
jg
mov
inc
mov
fs
xchg
(bad)
lds
xchg
cmp
movs
lea
and
fnstsw
pop
jmp
ss
rol
fadd
mov
jns
dec
fld
cli
mov
sahf
lds
or
les
pop
jp
add
pop
out
js
imul
(bad)
std
lahf
pminsw
fwait
lods
loopne
fwait
lods
stc
mov
sub
jno
ins
hlt
icebp
popf
ins
repnz
sahf
in
sbb
fs
inc
movs
fstp
loopne
cmp
xchg
mov
add
xor
in
(bad)
into
mov
sub
inc
pop
les
mov
(bad)
in
and
mov
ins
inc
dec
lock
push
push
xchg
xchg
cdq
xchg
std
inc
mov
sbb
(bad)
in
inc
lods
js
add
mov
xchg
clc
xchg
mov
ins
mov
js
lods
std
jge
leave
mov
mov
sub
mov
mov
stos
mov
and
sbb
in
add
push
and
xor
ficomp
xchg
xor
mov
push
in
mov
pop
sahf
ins
mov
mov
cld
fldcw
call
xor
mov
shl
pop
(bad)
lock
sub
outs
jle
clc
jmp
call
cmps
mov
or
movs
sahf
xchg
in
icebp
jbe
sbb
loop
pushf
stc
inc
fild
out
dec
xor
test
mov
sbb
mov
lahf
jno
mov
mov
mov
xor
push
pop
inc
jnp
mov
mov
pop
clc
and
iret
pop
stc
xchg
cmp
cmp
ds
dec
sub
cmp
inc
mov
in
jo
js
cmp
dec
cld
and
clc
xchg
leave
mov
jo
movnti
psadbw
xchg
loopne
mov
in
cdq
or
xor
jo
fisubr
popf
mov
cld
xchg
test
lea
pop
mov
xor
jbe
mov
fwait
lods
repz
jns
call
and
clc
xchg
fild
loopne
daa
fdivrp
stc
mov
fdiv
cmps
(bad)
lds
iret
popa
je
clc
(bad)
jne
pop
cld
xor
(bad)
in
xor
add
lods
lods
int3
inc
(bad)
inc
push
(bad)
sub
mov
out
xor
mov
mov
pop
mov
sub
inc
(bad)
dec
inc
mov
out
sub
ins
in
xor
mov
lods
sbb
inc
(bad)
movzx
in
add
xchg
push
mov
lods
pop
ja
sbb
sbb
push
cmps
ss
mov
neg
inc
cmc
push
mov
outs
ds
scas
dec
jge
cmps
push
xor
and
dec
jge
aas
js
sbb
test
cld
jp
cvttps2pi
add
popa
cld
jle
cmps
adc
(bad)
jp
iret
mov
dec
sub
xchg
out
sub
cmps
xor
xchg
bound
sub
push
ins
xchg
cmps
inc
ins
push
or
iret
jmp
and
scas
push
and
sub
mov
daa
outs
aad
arpl
out
lods
adc
aaa
stos
pop
data16
adc
test
push
mov
or
(bad)
retf
sub
loope
in
push
daa
aam
shl
sbb
xlat
bound
ins
push
pushw
imul
sub
cmps
repz
and
xchg
loopne
sub
xchg
leave
sub
jecxz
sub
addr16
lods
xchg
addr16
outs
xchg
addr16
mov
cmps
in
push
and
sub
out
jmp
jp
adc
mov
in
push
movs
sub
or
loopne
cs
arpl
std
jl
or
mov
jg
pop
dec
jb
ds
jb
lock
(bad)
es
sub
dec
outs
sahf
mov
ds
xchg
push
leave
inc
jle
jb
(bad)
clc
push
jmp
mov
or
xchg
add
jae
sbb
(bad)
jle
sub
movs
lea
test
mov
pushf
sub
stos
mov
push
add
mov
les
mov
jmp
sar
fst
rol
aad
mov
mov
pop
mov
jmp
pavgb
stos
adc
pop
mov
xor
test
sbb
mov
sbb
(bad)
adc
xor
inc
mov
out
jg
cmp
cmp
idiv
xor
dec
mov
pushf
hlt
test
inc
jmp
dec
mov
(bad)
push
or
inc
inc
mov
inc
xchg
mov
fdiv
jne
test
add
xor
push
mov
mov
lahf
sbb
mov
enter
stos
dec
repnz
jg
test
jmp
ror
push
sub
jecxz
mov
jo
sbb
idiv
xchg
push
mov
dec
adc
xchg
inc
xchg
inc
xchg
pop
xchg
pop
xchg
push
xchg
push
xchg
push
lods
mov
add
js
add
sahf
sbb
push
mov
inc
adc
xchg
or
jo
sbb
sar
inc
adc
xchg
dec
ds
add
or
in
in
sub
push
mov
push
jo
sbb
sbb
adc
clc
dec
jmp
xchg
leave
aaa
or
mov
out
sbb
cmp
pop
adc
stc
dec
jmp
xchg
leave
aaa
call
jle
mov
clc
xchg
sti
jns
fwait
movs
nop
imul
cmc
lods
mov
add
jns
add
lahf
sbb
pushf
xchg
xchg
jns
xchg
add
nop
imul
add
nop
xchg
imul
ss
lahf
sbb
ss
or
cmp
leave
push
xor
imul
mov
test
jbe
ins
jno
sbb
stc
dec
jmp
xchg
leave
cmp
push
jns
add
lahf
sbb
cmp
adc
jg
adc
ror
mov
add
push
sti
jns
add
jo
shl
js
sub
adc
jg
adc
(bad)
stc
dec
adc
sbb
pop
sub
jbe
adc
sbb
ficomp
aaa
cli
dec
jmp
xchg
leave
mov
lds
ret
xchg
mov
stc
jb
sbb
add
rcl
jb
mov
jle
cmp
test
xchg
jbe
mov
sahf
jmp
test
push
dec
xchg
mov
mov
mov
ss
adc
lods
push
in
lods
pop
inc
sub
mov
test
jae
stos
jp
das
xor
movs
ja
push
int3
popa
adc
xchg
dec
aaa
jle
xchg
xor
add
push
in
inc
jp
rcr
xchg
imul
imul
fmul
jne
mov
jl
mov
add
lahf
sbb
sbb
dec
in
(bad)
cli
inc
dec
std
xchg
dec
xor
xchg
jbe
arpl
test
push
fidivr
xchg
jne
inc
adc
leave
inc
aam
jge
aad
add
push
sub
test
fidivr
adc
retf
ins
xchg
jmp
les
iret
dec
push
pop
cmp
stos
push
bnd
jmp
xor
inc
jb
sti
mov
sub
shl
scas
and
mov
xor
push
mov
std
pusha
adc
inc
mov
adc
leave
and
and
bound
adc
jecxz
out
popa
fneni(8087
xchg
mov
loopne
nop
and
fs
loopne
es
popa
mov
aam
jne
shl
mov
adc
pop
arpl
jecxz
mov
pop
and
shl
shl
nop
mov
pop
loope
jecxz
loopne
loope
and
test
xchg
jecxz
jecxz
mov
mov
push
pusha
jmp
xchg
bound
mov
aam
lds
mov
xchg
movs
aam
aam
aad
sahf
and
pop
popa
xchg
pusha
popa
and
mov
out
and
loop
xlat
loopne
and
and
arpl
jecxz
in
dec
popa
push
jecxz
pusha
aad
xchg
mov
adc
addr16
daa
fisub
xchg
popa
and
daa
shl
mov
push
loopne
daa
xchg
mov
cmp
xchg
arpl
aad
and
mov
out
in
cmps
push
shl
pop
mov
xchg
addr16
arpl
arpl
sub
adc
ss
xor
imul
cs
jnp
in
jp
push
xchg
xchg
pop
jp
mov
imul
lds
loop
shl
aad
mov
rol
cmp
leave
or
lods
retf
push
mov
mov
cmc
imul
cmp
sbb
sub
lds
test
js
inc
dec
push
pop
or
into
cmc
imul
jp
cmp
dec
lock
cmp
call
sbb
mov
data16
cmp
fadd
pusha
je
adc
mov
mov
ja
xor
inc
push
fidivr
lea
movs
mov
mov
mov
addr16
fucom
xchg
mov
dec
push
inc
mov
xchg
mov
ss
inc
mov
retf
cmp
or
outs
sbb
or
push
jg
mov
jg
fadd
les
popf
retf
jp
fwait
or
pushf
inc
out
lea
mov
neg
pop
and
mov
enter
mov
nop
push
mov
mov
inc
scas
int3
xchg
jle
int3
xchg
jp
int3
xchg
jbe
int3
xchg
jb
int3
xchg
outs
scas
int3
xchg
push
int3
xchg
scas
int3
xchg
bound
int3
xchg
sbb
int3
xchg
adc
int3
xchg
or
rcl
and
(bad)
mov
cdq
xchg
mov
test
mov
mov
int3
pop
fsubrp
fst
lods
fcom
ins
fist
in
ficom
in
fst
lods
fist
sub
aam
lods
fcom
fist
in
ficom
in
fst
lods
mov
cmp
test
pushf
cld
(bad)
adc
sbb
inc
inc
mov
push
inc
xchg
push
rcl
fisttp
(bad)
repz
jmp
add
xchg
test
movs
pop
mov
jbe
dec
lods
mov
dec
scas
retf
mov
test
mov
mov
sti
(bad)
adc
test
aam
mov
sub
aam
pushf
lea
into
test
cwde
(bad)
sbb
(bad)
xchg
adc
dec
mov
mov
fiadd
sbb
sbb
aam
mov
int
scas
mov
xchg
xor
sub
mov
mov
int
push
rol
xchg
and
mov
cmp
lods
pop
lea
outs
inc
pop
mov
shr
jl
scas
(bad)
mov
mov
lods
(bad)
cwde
lahf
lods
dec
xchg
call
xor
adc
mov
test
mov
cmp
sub
rol
(bad)
nop
push
push
fst
mov
sbb
inc
mov
int3
xchg
push
test
not
push
mov
ret
dec
adc
add
arpl
rol
(bad)
nop
xchg
inc
fst
mov
sbb
add
(bad)
adc
lods
int3
xchg
push
test
not
push
mov
(bad)
dec
adc
mov
arpl
int3
xchg
ss
fst
mov
sbb
cmp
int3
xchg
fcmovbe
int3
mov
shl
adc
sub
adc
or
out
test
rcl
arpl
ror
xchg
repz
cmp
mov
ret
or
fld
repz
dec
mov
popf
(bad)
push
mov
pushf
push
sub
ins
sub
popf
adc
mov
or
ret
(bad)
fmul
sub
not
ret
sbb
int3
out
mov
sub
test
in
cwde
sub
pushf
fist
bswap
aam
xchg
por
repnz
(bad)
sahf
mov
rcr
into
and
not
rcl
cli
arpl
cmp
push
sub
data16
fs
int3
xchg
or
popf
call
mov
lods
or
fmul
scas
cmp
std
push
pop
and
int3
aam
and
push
adc
rcl
out
arpl
and
int
rcl
pop
or
adc
adc
jge
scas
arpl
ror
xchg
inc
fmul
loope
aad
inc
push
(bad)
push
jmp
std
aam
int
test
lahf
mov
mul
mov
test
int3
mov
icebp
cmp
push
or
test
xor
sub
push
int
rcl
xor
arpl
push
xor
sub
jle
cmp
(bad)
dec
aam
xchg
rcl
mov
std
aam
enter
bound
retf
dec
rcl
and
dec
rol
test
leave
iret
xchg
dec
imul
cmps
retf
popf
adc
sti
push
dec
sbb
jp
int3
mov
adc
mov
leave
imul
jne
and
mov
in
mov
adc
std
push
test
adc
xchg
ins
fsubr
jge
adc
arpl
and
fistp
out
sub
scas
outs
adc
fwait
sbb
int3
aam
out
in
and
xor
push
or
rcl
test
retf
rcl
xchg
xor
fst
ror
sbb
in
(bad)
adc
ror
xchg
not
int3
mov
shl
adc
das
mov
outs
xor
es
call
arpl
cmps
mov
pop
mov
test
int3
mov
ror
cmc
sub
loope
repz
rcr
mov
dec
in
fld
mov
dec
sbb
shr
dec
xor
lods
ror
ror
cmp
sbb
jmp
push
nop
mov
xchg
xchg
pop
sub
mov
or
fisttp
adc
fwait
int3
(bad)
int3
aam
in
in
fld
or
push
mov
xchg
hlt
ror
hlt
sti
rol
cmp
push
push
xchg
shr
xor
frstor
nop
shl
outs
push
sub
push
in
in
cmp
add
int3
ror
not
cmp
adc
jmp
xor
(bad)
xchg
shr
pushf
xchg
stos
adc
aam
shl
loopne
sub
inc
ins
fst
popa
outs
mov
add
cwde
push
jecxz
sbb
pop
cdq
adc
(bad)
fcmovnbe
arpl
fcom
daa
sub
fcom
and
pop
push
and
adc
xchg
adc
dec
pop
push
daa
dec
ficom
cmps
xlat
sbb
mov
ficomp
mov
and
pusha
out
xlat
out
ficom
sub
push
data16
xchg
out
pop
adc
mov
sahf
shl
inc
sbb
mov
leave
sbb
loope
sbb
popa
push
call
pop
sbb
pop
cwde
shl
fcom
and
pop
aam
sub
push
addr16
aad
jae
xchg
mov
jge
xchg
popa
add
loop
pop
push
and
(bad)
loop
lahf
shl
aam
adc
adc
shl
and
cmps
data16
aam
imul
push
pusha
neg
and
adc
cmp
and
fst
and
sahf
aam
retf
pop
adc
push
ficom
push
pop
push
out
fst
arpl
adc
jb
inc
popa
jbe
inc
jb
sbb
int
mov
or
dec
inc
push
push
mov
inc
or
mov
jbe
dec
or
mov
dec
inc
or
push
mov
and
out
idiv
fimul
add
inc
mov
bound
jl
cmps
aas
jmp
test
int
jne
inc
jecxz
enter
and
xchg
test
or
mov
aaa
fld
mov
pushf
rcr
adc
ins
jnp
inc
test
cmps
rol
pushf
pop
mov
cmp
test
lds
mov
test
aam
sbb
test
cli
mov
mov
bound
fnstcw
addr16
rcr
cli
xor
sub
dec
xchg
xchg
dec
xchg
mov
or
and
fimul
or
sub
push
movs
pushf
add
mov
lea
sub
mov
cmp
xchg
loope
and
mov
mov
mov
lea
jnp
cld
in
mov
or
and
lds
xor
rcr
and
push
and
jne
ds
cs
add
dec
push
aaa
mov
add
add
and
and
ds
inc
cwde
ins
into
inc
dec
add
xor
inc
fcmovnu
arpl
add
adc
mov
xor
out
and
rcl
mov
jae
or
adc
(bad)
and
fadd
loopne
scas
mov
jne
cmp
inc
rcr
add
mov
add
mov
cmp
mov
and
scas
fidivr
push
cmp
ins
repnz
inc
add
addr16
mov
inc
push
xchg
and
fiadd
cmp
or
movs
mov
or
fist
push
(bad)
cmp
imul
jo
jne
add
cmp
jle
repz
cmp
xchg
sub
push
pop
and
or
inc
sbb
loopne
inc
dec
and
or
jle
push
movs
mov
or
adc
cmp
aas
sub
jo
jne
add
cmp
or
jle
pusha
cmp
xchg
sbb
jnp
cmp
ds
push
fidivr
or
push
inc
add
xor
xor
push
xor
push
mov
ins
add
xor
imul
jno
mov
push
push
xchg
xor
xchg
and
push
mov
xchg
pusha
add
(bad)
mov
push
lahf
xlat
bound
pop
xchg
popw
pop
push
popa
sbb
mov
mov
sbb
adc
mov
aad
aaa
call
mov
pop
push
mov
or
push
daa
subps
popf
push
daa
push
sbb
and
push
pusha
pop
sbb
push
cmps
addr16
cmps
out
fwait
push
movs
scas
fst
mov
xchg
popa
repz
xchg
and
adc
aas
push
push
daa
inc
lahf
adc
add
pop
mov
int
aad
xchg
pop
push
jecxz
fist
fistp
cmps
fcom
cmps
pop
xchg
imul
adc
mov
aad
mov
fst
pop
aam
cmps
pop
xchg
adc
int3
adc
and
rcl
daa
(bad)
adc
loopne
adc
push
popaw
xchg
aad
out
shl
adc
and
data16
mov
mov
nop
push
add
add
push
adc
xlat
adc
es
push
xchg
cmps
sbb
movs
pop
aam
and
(bad)
inc
inc
jb
inc
inc
jb
inc
inc
jb
inc
inc
jb
inc
inc
jb
inc
inc
jb
inc
inc
jb
inc
inc
jb
inc
inc
jb
inc
inc
jb
inc
inc
jb
xchg
addr16
push
inc
mov
(bad)
xor
jae
push
inc
pop
add
or
jb
push
test
sbb
fadd
loope
jmp
jne
ffree
inc
inc
mov
dec
xor
ds
xchg
mov
inc
xchg
xor
or
add
mov
add
cwde
adc
aam
into
inc
add
xor
jp
jb
int
pop
and
je
das
mov
ins
repnz
push
repnz
imul
cmp
iret
mov
mov
test
jb
jmp
cmp
and
pop
hlt
jno
repnz
and
repz
bound
cs
cmps
outs
ds
jnp
inc
or
xchg
sbb
imul
mov
mov
or
mov
and
dec
frstor
mov
mov
les
cmp
pushf
and
pop
xor
stos
nop
enter
les
sbb
mov
(bad)
fdivr
jl
or
ds
cmp
push
jecxz
mov
aad
jle
push
les
xchg
ret
int3
lds
jnp
fldenv
jnp
fldcw
js
fst
or
pop
js
fstp
or
inc
js
fld
or
dec
js
(bad)
or
jbe
or
jb
or
jle
or
jp
or
data16
fldenv
or
outs
js
fldcw
or
push
js
fst
js
fstp
js
fstp
js
fld
js
fld
js
(bad)
js
(bad)
js
fnstenv
js
fnstenv
js
fnstcw
js
fnstcw
js
fldenv
js
fldenv
js
fldcw
js
fldcw
js
(bad)
js
(bad)
js
(bad)
js
(bad)
js
fld
js
fld
js
fxch
js
fxch
js
fdecstp
js
fptan
js
fsin
js
fsqrt
js
(bad)
js
(bad)
js
fldz
js
fldl2e
js
fst
js
fstp
js
fld
js
(bad)
js
fnstenv
js
fnstcw
js
fldenv
js
fldcw
js
fst
or
push
jns
fstp
or
pop
jns
fld
or
inc
jns
(bad)
adc
fstp
rcl
jmp
push
jmp
js
mov
jno
dec
shr
sbb
dec
mov
xchg
arpl
leave
in
sbb
sbb
or
stc
xchg
retf
pop
pop
xchg
pusha
xor
or
leave
and
retf
jle
or
(bad)
imul
cs
loopne
aad
scas
loopne
test
dec
push
sbb
jns
and
xchg
fadd
pop
mov
ret
and
or
pusha
pop
pop
push
pop
xor
out
ror
repnz
push
and
mov
pop
cmp
xor
in
cld
out
(bad)
mov
mov
jl
or
loop
xor
sahf
jns
int
jecxz
les
imul
pop
imul
arpl
ins
xor
sub
ds
rcr
jmp
add
or
mov
int3
mov
mov
lods
sub
sbb
cs
push
mov
mov
jecxz
out
push
int3
mov
jmp
lods
sub
jl
das
cdq
or
pop
push
clc
mov
or
adc
sub
jle
leave
(bad)
push
add
outs
dec
cmp
aam
mov
pop
aam
jle
pop
rol
cmps
sbb
enter
fstp
les
retf
or
pop
call
fs
leave
push
ins
xor
cdq
sti
frstor
repz
or
push
mov
xchg
push
ret
add
cmps
call
aas
call
sbb
and
aaa
test
and
repz
es
ss
xor
push
add
stos
outs
mov
sbb
aas
adc
rcr
inc
in
leave
push
mov
mov
dec
in
leave
data16
and
jg
fiadd
mov
dec
js
xor
sbb
mov
outs
in
add
mov
jno
adc
in
shl
bound
cdq
divps
cmps
into
(bad)
pop
pop
sti
cmps
ss
int
jae
ins
pop
pop
adc
cdq
out
sub
jmp
repz
(bad)
jg
aam
sbb
or
pop
gs
inc
gs
add
add
outs
dec
data16
mov
pop
aam
mov
pop
aam
jg
pop
int3
jg
adc
pop
add
outs
dec
idiv
pop
aam
mov
pop
aam
sbb
fnstcw
or
fwait
outs
mov
out
sbb
fnstenv
gs
xor
ret
ds
cmp
ret
jmp
aas
adc
shl
sbb
jno
sbb
ss
xor
dec
aad
inc
data16
inc
jl
jecxz
xor
mov
cmps
mov
or
imul
sbb
mov
ss
outs
jl
fstp
idiv
push
jl
xchg
mov
leave
sbb
pop
push
add
(bad)
outs
xor
dec
stc
(bad)
and
sbb
pop
icebp
test
ss
leave
bound
or
mov
(bad)
jl
and
xor
popa
aad
fiadd
and
(bad)
jl
fisttp
jno
push
sbb
leave
fisubr
jmp
outs
cdq
xchg
xchg
cmp
pop
push
pop
adc
rcl
ins
mov
outs
xor
in
stc
out
(bad)
jl
rcr
jae
pop
rcl
cmps
mov
enter
jecxz
stc
shl
mov
pop
jno
mov
sbb
add
es
mov
push
lock
cmp
mul
xor
mov
and
pop
jge
xlat
inc
ins
mov
repnz
(bad)
addr16
mov
ins
dec
data16
jae
dec
mov
mov
pop
aam
jnp
fabs
add
add
sahf
inc
or
clc
jg
fyl2x
add
adc
repnz
aad
xor
fcomp
dec
or
add
jge
mov
adc
mov
rcl
test
call
ror
cmp
xor
leave
xor
nop
dec
das
jno
test
leave
or
ins
or
(bad)
lahf
dec
pop
lods
push
jb
cmp
mov
lds
inc
add
mov
or
aam
xchg
adc
xchg
and
shl
pushf
adc
aam
fs
push
in
pop
push
es
aad
pusha
icebp
xlat
push
out
rcl
mov
jnp
nop
addr16
and
xchg
mov
or
shl
or
cmps
xchg
int3
push
and
adc
es
nop
out
int
cmps
sub
adc
xor
and
mov
pusha
or
cmps
ret
popa
or
and
daa
adc
adc
sbb
push
loope
int
and
or
pusha
jmp
aad
ins
mov
xor
push
and
or
daa
jg
shl
jle
adc
les
push
mov
retf
or
push
and
dec
xchg
and
leave
push
daa
pushf
or
out
retf
out
push
loop
mov
sub
(bad)
push
mov
ds
dec
push
and
adc
push
or
movs
retf
retf
xchg
int
cmps
push
lea
cwde
or
and
dec
or
dec
mul
cmp
arpl
jne
outs
xchg
cmp
xchg
xchg
stc
stc
add
jae
pushf
xor
(bad)
(bad)
loope
inc
jne
addr16
push
pop
add
xchg
icebp
test
xchg
and
push
aam
je
mov
daa
mov
jbe
adc
retf
push
mov
shl
push
(bad)
jmp
or
loop
jb
cwde
jne
stc
mul
and
lds
mov
jns
sbb
mov
mov
mov
push
pop
cdq
movs
adc
xchg
dec
mov
rcr
cmps
mov
or
cmps
adc
xor
mov
or
lahf
inc
cmps
movs
call
mov
and
pop
enter
push
cmp
xor
stos
mov
mov
push
mov
or
cdq
imul
sbb
jmp
cmp
xor
sti
add
cdq
movs
shl
loop
dec
stos
ja
pop
(bad)
fst
out
xor
(bad)
cld
retf
lahf
sbb
popa
test
call
loope
inc
jo
cwde
adc
mov
lds
aad
jo
xchg
data16
cmp
cmp
mov
pop
or
add
or
xchg
push
dec
cmp
int3
mov
push
push
leave
jg
adc
stc
ins
xchg
int3
jp
nop
dec
mov
call
push
mov
iret
or
das
sbb
sbb
add
add
adc
or
push
xor
or
xor
and
outs
or
pop
leave
pop
fs
xor
and
xor
push
nop
sbb
test
nop
cmp
pop
nop
cmp
sbb
xchg
cmp
or
add
aad
repnz
add
and
pop
lock
adc
jno
out
js
cld
xor
xor
dec
aas
xchg
repnz
xor
enter
push
or
popf
or
inc
pop
sub
and
arpl
or
xor
shl
fisttp
es
sti
inc
sbb
(bad)
jecxz
or
pop
fstp
repz
jecxz
mov
and
and
(bad)
or
fnsave
jl
jbe
add
out
into
xchg
pusha
mov
dec
shl
scas
mov
and
mov
out
or
test
push
and
dec
xchg
out
dec
adc
dec
mov
es
or
arpl
shl
(bad)
push
and
xlat
loope
or
push
adc
outs
retf
mov
xchg
cmps
test
and
push
push
data16
loope
enter
into
xchg
loopne
or
nop
dec
push
and
retf
adc
pop
or
mov
sub
shl
mov
xchg
cmps
xor
xchg
and
aam
mov
dec
nop
and
(bad)
push
and
or
in
dec
push
fmul
popa
sbb
and
or
and
dec
xchg
bound
push
mov
clc
enter
retf
aad
ror
xchg
push
movs
into
dec
xchg
and
into
push
cmps
pusha
cmps
and
dec
dec
dec
inc
push
push
jne
jb
pusha
inc
sbb
xchg
adc
and
xor
inc
inc
adc
test
outs
jb
jecxz
add
cli
rcl
loope
cvttps2pi
dec
jl
mov
(bad)
push
sub
lea
out
mov
std
xor
enter
aam
out
in
scas
pop
jg
rcr
imul
dec
jge
mov
cmp
cmp
packuswb
shl
daa
add
mov
pushf
les
mov
pop
lock
add
mov
arpl
mov
sub
jp
test
lods
adc
mov
data16
je
cwde
adc
icebp
sub
int
jmp
xchg
scas
xor
jge
push
test
out
jno
inc
mov
sti
test
mov
xor
add
arpl
and
lods
inc
inc
test
or
arpl
xor
popa
and
mov
movs
adc
mov
cmp
mov
mov
test
push
jb
jbe
arpl
mov
es
inc
cmp
mov
inc
jecxz
test
fmul
call
pop
repnz
pop
sub
adc
add
add
and
scas
clc
push
or
outs
dec
cmps
clc
ror
call
popf
and
push
mov
lock
addr16
mov
cmp
cmps
fwait
loop
and
cwde
add
cli
fdivr
add
imul
inc
ja
jo
int3
out
add
aas
out
cwde
jbe
cmps
out
inc
xchg
mov
cmps
out
inc
popf
mov
add
sahf
fild
dec
jmp
daa
cmp
outs
fdivr
add
or
xchg
int
inc
cwde
int3
test
es
(bad)
fwait
dec
add
test
nop
mov
push
cwde
lds
in
inc
cmps
in
push
addr16
jmp
inc
scas
outs
and
push
repz
stos
cwde
out
add
stos
jle
mov
xchg
push
mov
mov
cdq
mov
mov
pop
test
add
cmp
retf
cwde
xchg
sti
add
jno
cwde
push
shl
cwde
sbb
jl
cli
pop
add
jb
or
push
out
dec
(bad)
and
aam
cmc
mov
jle
nop
popa
mov
or
adc
bswap
xchg
loopne
mov
ror
shl
sbb
push
data16
push
jecxz
iret
xlat
pusha
jmp
pop
loop
or
cmps
xor
and
dec
aam
aas
dec
xchg
and
aam
dec
(bad)
aam
mov
adc
aad
aam
fmul
push
jecxz
or
and
adc
into
xchg
loopne
or
out
dec
push
out
dec
adc
mov
enter
or
shl
dec
push
loopne
mov
push
int3
aam
call
mov
cmps
or
daa
sub
xchg
and
int3
xchg
and
push
adc
jns
push
loope
or
add
add
(bad)
(bad)
and
iret
push
mov
pop
(bad)
xlat
and
lea
popa
loopne
adc
out
pop
loop
or
in
mov
repz
push
arpl
(bad)
and
push
(bad)
and
(bad)
xlat
loope
pop
push
loopne
rcl
into
les
push
adc
xchg
adc
adc
adc
dec
dec
retf
(bad)
jle
test
addr16
xor
push
inc
dec
hlt
push
pop
repnz
inc
add
or
test
inc
inc
add
jb
outs
mov
mov
mov
inc
arpl
push
push
sub
jb
jno
lea
pop
xor
test
mov
lea
add
adc
js
adc
adc
fs
mov
add
dec
jp
int
cmp
in
dec
xor
lahf
int
sub
sub
jle
into
jbe
in
or
and
cli
movs
ret
mov
xor
push
inc
pop
mov
sbb
add
adc
mov
adc
jb
int
stos
sbb
push
add
mov
sub
pop
xchg
fmul
cmp
add
mov
loopne
enter
loope
(bad)
xchg
or
leave
jecxz
cdq
in
jmp
cmp
lahf
imul
push
cmp
mov
jb
cmps
cmp
test
jbe
mov
aaa
and
repnz
ret
(bad)
cmp
enter
inc
and
sub
dec
jmp
xlat
in
ins
lock
sbb
stos
out
repnz
xchg
pop
scas
cmp
dec
jmp
repnz
arpl
out
stos
lea
mov
cli
enter
mov
popa
test
mov
les
sbb
cmp
cmp
sub
stc
jge
in
cmp
popf
or
cdq
leave
mov
cdq
leave
mov
cdq
leave
mov
fldpi
mov
fadd
dec
add
jmp
arpl
repz
mov
cwde
dec
or
ror
dec
xchg
leave
push
cmp
mov
loop
les
xor
mov
sub
ins
cdq
test
stos
enter
adc
repz
inc
(bad)
mov
xchg
retf
div
adc
adc
pop
jmp
mov
call
enter
or
xchg
mov
imul
cdq
test
stos
enter
adc
aaa
sbb
mov
jmp
dec
cli
push
cdq
repnz
iret
dec
std
call
mov
call
mov
test
dec
dec
cwde
ror
ror
leave
repnz
pop
mov
lds
adc
or
xchg
ror
pop
jmp
mov
cmps
loopne
jo
div
mov
jmp
mov
or
add
retf
dec
xlat
lahf
xor
in
fs
jnp
cwde
fisubr
xchg
push
fsubr
mov
fwait
or
dec
mov
neg
ds
leave
or
jnp
repnz
or
jns
adc
ins
pop
or
sti
not
adc
lea
out
fwait
or
dec
pop
jmp
imul
xchg
clc
or
fwait
or
pop
pop
jmp
icebp
jns
cdq
push
test
dec
imul
(bad)
fwait
or
mov
or
pop
jmp
imul
int3
nop
fst
retf
jg
stc
sbb
pusha
pop
jmp
xchg
test
ror
pop
jmp
mov
cwde
cdq
xchg
test
dec
out
xor
sbb
ss
cmp
cwde
in
fmul
outs
(bad)
retf
lahf
or
ins
pop
push
sbb
mov
inc
ja
mov
xchg
sbb
mov
js
pushf
or
idiv
cmp
enter
or
xchg
lea
sbb
mov
pop
xrelease
fild
cmps
pushf
leave
test
sub
mov
dec
pushf
aam
call
mov
xchg
add
push
ja
mov
sahf
push
xchg
add
sbb
mov
or
pushf
or
push
out
mov
pushf
dec
mov
or
fwait
pop
imul
imul
mov
fist
scas
pop
jmp
push
push
cdq
inc
pop
jmp
xchg
aam
imul
or
ficomp
xchg
(bad)
pushf
mov
xor
ja
mov
aam
or
add
ja
fcom
adc
mov
xchg
xor
mov
(bad)
fmul
push
pop
test
xchg
jl
sub
stc
(bad)
leave
xchg
and
mov
js
popf
or
(bad)
jge
mov
add
mov
fmul
push
cs
dec
dec
push
pop
xrelease
fiadd
mov
sub
adc
pop
xchg
leave
repnz
mov
popf
leave
enter
dec
mov
popf
leave
mov
adc
rcr
retf
mov
pushf
leave
push
sahf
pop
jmp
mov
inc
out
jmp
or
imul
(bad)
jecxz
div
data16
enter
dec
mov
sahf
ror
retf
xlat
mov
jecxz
into
mov
sahf
ror
cdq
ret
mov
sbb
jb
test
int
or
sub
cli
out
push
arpl
stos
out
jne
pop
or
push
inc
jb
inc
push
repnz
add
xchg
mov
xchg
pusha
(bad)
lds
push
add
xchg
inc
push
out
add
(bad)
bound
pop
xchg
out
add
loope
inc
aam
mov
push
movs
jne
push
jecxz
(bad)
adc
mov
pop
adc
add
addr16
ret
pop
and
adc
cmps
lahf
add
arpl
inc
push
and
add
cmps
push
add
and
pop
xchg
and
adc
test
mov
inc
add
xchg
popa
cmova
adc
cmps
aad
shl
test
and
adc
addr16
aad
sub
push
pusha
stos
inc
push
mov
repnz
lds
daa
inc
add
es
add
out
test
daa
xchg
ret
push
loope
adc
(bad)
push
movs
fild
cmps
loop
xlat
and
inc
adc
jne
daa
lods
inc
push
test
jge
jb
aaa
dec
(bad)
call
dec
test
add
inc
jb
jo
mov
mov
sar
or
mov
fsubr
test
jnp
sub
jmp
iret
cmp
fadd
pusha
sub
test
ret
push
pop
sbb
test
mov
adc
popf
sbb
xchg
mov
repnz
xchg
pop
push
add
jb
lods
push
jb
div
ror
or
cmps
mov
shl
cwde
pusha
adc
jb
push
add
adc
cmps
imul
clc
fsub
mov
xor
les
ret
pushf
retf
lea
pushf
pop
sub
dec
fsub
fsub
lea
ins
xor
push
mov
mov
xchg
out
mov
xchg
imul
scas
mov
dec
xchg
test
xchg
lods
nop
(bad)
in
xchg
stos
(bad)
fistp
pop
(bad)
gs
aas
imul
(bad)
jmp
cli
xor
or
xrelease
adc
xchg
mov
(bad)
in
and
push
leave
mov
out
repz
xchg
test
pop
gs
es
iret
mov
(bad)
int
cdq
out
ret
cmp
jbe
pop
push
adc
mov
test
stos
add
cdq
int
mov
xchg
mov
and
jp
cmps
mov
xchg
data16
and
es
test
sahf
jp
es
movs
mov
pop
add
cmp
sub
jae
test
shl
xchg
pop
fsub
data16
movs
mov
jp
and
lods
cmps
cmp
movs
pop
xor
pop
and
fimul
mov
ja
mov
test
or
fdivr
loope
fcom
ss
lahf
dec
add
and
dec
jp
mov
or
push
push
push
repnz
jge
and
mov
adc
and
cmp
and
stc
aam
mov
mov
push
and
mov
(bad)
(bad)
cmp
and
xchg
cmps
fdivr
pusha
mov
jl
jecxz
std
adc
(bad)
xchg
loop
mov
xchg
jecxz
stc
push
and
ds
in
cmp
cmp
mov
mov
adc
sar
push
and
cmp
pop
js
jecxz
cmp
shl
sub
shl
stc
adc
mov
push
loope
mov
(bad)
cmps
pop
jl
mov
or
push
daa
int
xchg
out
mov
nop
cwd
stc
push
cmps
sbb
push
mov
fs
adc
das
cmp
arpl
aam
xor
push
jle
adc
imul
xor
adc
push
test
(bad)
(bad)
push
sbb
sub
push
sbb
mov
arpl
xchg
pop
push
xchg
lahf
es
jb
mov
mov
mov
inc
or
xchg
imul
jp
mov
fs
loope
mov
cmp
mov
lea
shl
inc
jbe
gs
mov
or
cli
mov
int3
sbb
dec
jb
lods
jmp
cmp
jnp
mov
add
mov
rol
adc
xchg
lea
es
imul
add
enter
jno
cmp
stos
stos
imul
add
or
xchg
stos
(bad)
(bad)
dec
add
dec
sub
fist
leave
jp
cmc
xchg
jp
sbb
out
pushf
mov
jb
add
jg
adc
add
mov
jp
test
sbb
push
mov
cmps
mov
ins
inc
mov
xor
xchg
dec
jbe
movs
cli
xor
call
inc
fs
lds
jmp
adc
xchg
cmp
ss
test
and
pop
mov
jmp
lahf
xchg
mov
xchg
enter
fs
cld
shl
sti
into
das
sahf
and
xchg
movs
ret
sub
out
cmps
push
sub
cs
data16
aad
push
jl
mov
inc
sar
or
ss
xchg
dec
mov
and
xchg
sbb
push
test
pop
jg
add
out
ins
and
ret
xor
mov
xor
mov
leave
lds
or
and
dec
pop
outs
(bad)
daa
sub
lahf
dec
adc
sbb
lea
or
push
adc
sbb
adc
ds
bound
push
data16
cmp
loope
mov
push
fs
cld
xchg
cmps
add
(bad)
popa
add
aam
enter
dec
cmp
cmps
push
jg
loope
jl
mov
popf
jge
jecxz
mov
push
loopne
mov
xchg
mov
jbe
shl
aas
mov
nop
and
clc
xchg
popa
add
aam
or
aam
dec
mov
xchg
and
ds
fstp
adc
jecxz
nop
data16
mov
shl
mov
push
fs
(bad)
out
cmp
nop
mov
xchg
iretw
aas
adc
aad
adc
fidivr
adc
mov
push
std
xlat
jecxz
sti
adc
xor
ds
sti
stc
xchg
and
mov
push
fs
cmp
adc
sar
in
cmp
bound
push
daa
fidivr
xchg
pusha
arpl
adc
mov
push
and
mov
nop
loop
jns
data16
nop
bound
adc
mov
(bad)
dec
jle
gs
mov
jge
add
jb
ins
inc
dec
or
cwde
jmp
ja
lds
sbb
inc
dec
and
xor
stos
jp
push
aas
test
push
jl
ins
xchg
lods
lods
xchg
jge
and
xchg
cmp
pop
pushf
popf
or
repz
mov
mov
jb
push
jb
(bad)
aad
call
mov
xchg
popa
repz
loope
cmp
(bad)
ds
bound
mov
adc
(bad)
adc
push
cmp
and
mov
aam
daa
js
data16
xchg
loopne
mov
push
out
call
es
shl
mov
xchg
xchg
or
(bad)
iret
mov
xchg
out
mov
xchg
and
mov
push
popa
mov
jl
loop
call
out
mov
xchg
daa
aas
mov
shl
add
push
out
mov
adc
jge
and
mov
push
arpl
jl
mov
push
cmp
idiv
daa
mov
xchg
out
cmp
and
(bad)
push
mov
inc
mov
adc
mov
xchg
loop
cmp
mov
mov
jnp
mov
scas
sti
(bad)
and
jp
arpl
cmp
and
xlat
loope
std
push
out
mov
add
call
cmp
lea
ins
pop
xor
outs
add
dec
xchg
mov
retf
pop
test
ret
cmp
jb
dec
inc
out
push
and
lods
sbb
aam
jmp
lods
adc
jp
outs
inc
mov
adc
repz
adc
dec
imul
mov
sub
cmp
sbb
stos
lea
test
lods
or
mov
cmps
gs
xor
xchg
mov
sub
outs
inc
pop
xor
rcr
aas
or
outs
inc
push
outs
imul
sbb
mov
mov
mov
shl
xor
loopne
mov
push
shl
mov
movs
rol
ss
pop
nop
jg
and
(bad)
retf
dec
loop
loopne
push
mov
xor
test
and
inc
call
aas
push
mov
pop
les
jmp
test
mov
outs
add
jb
push
mov
jle
add
bound
cs
add
mov
repnz
push
arpl
adc
out
in
sahf
cli
mov
in
mov
sbb
or
stc
pop
jae
je
xchg
ficomp
mov
dec
fild
(bad)
(bad)
(bad)
cmc
sbb
repz
mov
mov
push
and
dec
cld
mov
int
add
outs
outs
int3
adc
dec
sub
lahf
inc
jno
cmp
push
in
stos
push
push
xor
aad
ds
push
push
jp
aad
fwait
mov
mov
jg
push
jae
cmp
mov
jbe
sahf
cmp
aad
xchg
addr16
xor
jecxz
jno
loop
mov
daa
gs
mov
in
xor
adc
pusha
(bad)
jno
cmps
mov
xor
daa
push
mov
cmps
mov
push
and
shl
adc
and
ja
out
mov
loop
mov
and
aaa
xchg
mov
sub
shl
imul
cmps
div
xchg
out
mov
daa
mov
jb
and
push
jecxz
icebp
aad
into
xor
(bad)
mov
shl
nop
mov
sbb
sbb
and
jecxz
jae
cmps
push
jno
div
xchg
jecxz
xor
addr16
push
mov
add
popa
inc
repz
mov
dec
mov
mov
push
not
daa
sbb
xchg
loope
xor
mov
test
shl
stos
cmc
push
mov
jne
adc
std
jae
and
push
dec
mov
mov
push
inc
and
or
adc
arpl
test
pop
enter
push
outs
add
fadd
mov
dec
mov
into
pop
mov
daa
or
or
adc
xor
pusha
add
xor
push
inc
jb
lahf
call
aaa
dec
push
jmp
push
jg
out
pusha
add
adc
sbb
arpl
mov
or
je
arpl
repz
mov
pop
mov
cdq
sbb
jb
pop
inc
popf
rcl
mov
inc
pop
inc
(bad)
jecxz
adc
cwde
data16
test
jne
sub
fdiv
lea
out
loopne
retf
dec
and
inc
adc
dec
in
mov
out
hlt
dec
imul
mov
enter
pop
sub
rol
popf
jg
cs
stos
and
pushf
cmp
push
test
add
xor
jbe
repnz
inc
enter
push
add
xor
stc
shr
adc
pushf
sub
sbb
adc
cmp
xor
adc
and
xchg
fistp
cmp
cmp
je
jp
stc
outs
aas
pop
sub
fistp
stc
jb
jp
js
aas
fstp
in
jp
pop
aas
ja
(bad)
cmp
loope
mov
push
pop
(bad)
cmp
fistp
add
std
sub
(bad)
aaa
xor
(bad)
cli
dec
clc
dec
sbb
pop
mov
clc
jecxz
cmp
lds
aaa
cmp
mov
das
cmp
int
(bad)
loopne
gs
std
int
fsubr
jns
add
cmp
dec
push
inc
or
lahf
repnz
lahf
cmp
xor
jecxz
clc
(bad)
cmp
cmp
fistp
cmp
cli
cli
cmp
pop
pop
sbb
cmp
clc
jge
jae
mov
ja
cli
ret
aas
frstor
movs
daa
test
push
sbb
adc
push
adc
call
sub
jp
call
(bad)
ja
mov
fisttp
cmp
push
xchg
dec
out
lds
bound
out
bound
adc
jb
gs
jb
gs
jb
gs
jb
gs
jb
mov
repnz
adc
pop
hlt
xchg
loop
jno
mov
jmp
div
cmc
jbe
loop
jno
loop
not
in
mov
es
mov
daa
or
adc
xlat
mov
xchg
mov
mov
cwde
jno
and
ja
fs
daa
stos
xor
lods
jno
bound
shl
mov
jno
mov
inc
mov
and
(bad)
and
hlt
xchg
and
xchg
loope
cmc
aad
fdiv
loop
hlt
pop
mov
out
mov
jecxz
not
and
ja
cmps
push
loope
jno
mov
push
mov
and
icebp
push
bound
xlat
jecxz
ja
adc
push
arpl
repz
addr16
xchg
mov
imul
ja
cmps
xor
pop
loope
jae
loop
xor
pusha
add
push
mov
dec
xor
mov
adc
aad
(bad)
nop
mov
data16
shl
jb
bound
ja
arpl
xor
popa
ss
xchg
mov
jg
xchg
daa
xchg
xlat
daa
add
popa
in
push
add
add
sahf
dec
arpl
cmp
sbb
inc
push
leave
dec
inc
lea
addr16
push
push
or
stos
xor
sbb
push
je
fs
xchg
test
imul
dec
jnp
fsub
loopne
sub
nop
iret
clc
test
pop
mov
pop
ror
and
jb
mov
into
push
fadd
ficomp
and
mov
jb
(bad)
shr
arpl
scas
(bad)
pop
cli
bound
push
loopne
test
shl
mov
call
out
dec
mov
(bad)
ja
xor
mov
fwait
cmp
or
add
xchg
out
mov
(bad)
adc
jg
push
test
enter
pop
sbb
popf
(bad)
cmc
fstp
les
call
fstp
push
xchg
fimul
inc
jge
aas
xor
cmps
mov
test
(bad)
mov
inc
cmps
lea
cwde
mov
adc
fisubr
jnp
jnp
int
mov
mov
adc
xor
ins
repnz
sub
xchg
dec
repnz
mov
int3
std
leave
pushf
jmp
cmps
imul
cli
inc
popw
mov
xor
ja
push
rol
dec
mov
push
mov
cmps
in
adc
in
imul
inc
clc
and
imul
jl
out
jl
fucom
jl
fstp
jl
fstp
iret
push
mov
lods
enter
mov
inc
ffree
ins
iret
push
clc
or
int3
cmp
xor
fstp
push
(bad)
mov
and
paddq
js
or
jge
int3
aam
pop
(bad)
mov
xor
xlat
adc
dec
int3
jl
adc
add
je
paddusw
ins
unpckhps
paddusw
(bad)
(bad)
cmp
pop
mov
jle
in
jnp
pop
dec
jge
popf
idiv
sbb
test
fstp
idiv
lods
mov
push
push
aam
ja
mov
cmps
add
jge
shr
mov
ds
ficom
or
mov
add
or
pop
and
cli
ins
(bad)
mov
mov
addr16
inc
lahf
dec
les
jbe
inc
jp
test
mov
adc
push
jno
mov
arpl
push
cmps
lods
xor
icebp
aaa
adc
movs
cmp
shl
je
and
sub
xchg
arpl
sub
pusha
push
ins
shl
aam
shl
pop
sub
xchg
mov
jmp
sub
call
xlat
mov
cld
call
shl
in
nop
retfw
imul
movs
xlat
sub
xchg
mov
pop
in
push
loopne
sub
and
mov
jmp
adc
jbe
aam
mov
nop
and
scas
push
and
call
xchg
bound
xchg
daa
int3
stos
nop
loopne
sub
jecxz
sub
mov
sbb
mov
sub
in
in
aam
jbe
push
mov
aas
test
mov
ret
sub
(bad)
jmp
(bad)
out
xchg
and
adc
shr
bound
test
loop
sub
and
in
shl
mov
imul
sub
daa
mov
pop
addr16
lods
out
data16
or
mov
inc
shr
push
or
pop
mov
cmp
mov
mov
pop
fadd
gs
mov
inc
jb
fdivr
das
call
mov
or
push
cmp
pop
scas
cmp
push
jb
xchg
repz
mov
sbb
sbb
test
mov
ficomp
and
push
and
or
sbb
rcr
mov
mov
jp
mov
inc
push
push
enter
adc
jmp
mov
xchg
sbb
fcmovb
loop
push
dec
arpl
out
mov
mov
repz
ret
clc
js
fdivr
mov
xchg
xor
jo
popa
xchg
and
int3
sub
dec
test
sbb
cmc
mov
js
dec
adc
mov
inc
fwait
es
cmps
aaa
or
and
pushf
repnz
cmp
inc
les
das
mov
adc
push
enter
fadd
sbb
les
out
sbb
mov
add
movs
call
ror
pop
cld
cwde
in
mov
es
test
mov
xchg
mov
(bad)
fild
mov
lea
sbb
push
add
fmul
adc
cli
adc
call
add
add
add
and
adc
arpl
out
and
rol
and
adc
arpl
in
lods
and
mov
and
aad
add
retf
cmp
jmp
int
sbb
fs
jbe
push
or
loopne
shl
pop
add
fdiv
mov
fwait
jle
push
adc
add
shl
ret
fs
adc
ins
ret
ss
fs
aaa
movs
and
mov
push
aad
add
sbb
and
ja
inc
xor
scas
and
push
movs
mov
(bad)
and
sbb
dec
mov
gs
jae
jle
mov
cmp
add
scas
loop
pop
sub
add
(bad)
jmp
pop
pop
pop
pop
add
push
je
inc
test
xchg
dec
addr16
inc
cmp
adc
in
imul
mov
(bad)
mov
push
sub
es
out
adc
push
push
pusha
lahf
scas
push
mov
cmps
sub
es
cs
popa
sub
push
cmps
ja
push
movs
je
xchg
cmps
(bad)
sub
and
in
xchg
and
out
xchg
arpl
imul
adc
xlat
popa
fild
xlat
loopne
outs
push
and
aam
and
pusha
imul
daa
mov
xchg
out
outs
push
cmps
sti
das
nop
pusha
std
ins
adc
xchg
pusha
xchg
xchg
mov
shr
and
outs
shl
fucomip
shl
push
outs
pop
in
scas
xchg
and
bound
push
xchg
data16
push
and
push
xchg
mov
xchg
dec
in
push
es
xchg
(bad)
adc
ins
push
mov
in
push
cmps
test
xlat
es
push
out
out
xchg
data16
sub
nop
jecxz
sub
mov
ins
inc
push
push
jle
xor
sub
jb
inc
test
outs
add
or
push
xchg
jp
xchg
jge
dec
pop
add
inc
sub
sar
xor
aad
and
in
mov
push
fs
aaa
(bad)
hlt
int3
pushf
jo
jmp
xor
cli
fcomp
ror
aad
pop
cwde
push
add
jb
mov
jnp
sub
cmp
out
push
dec
mov
ret
pop
(bad)
cli
repz
jg
pusha
mov
cmp
jp
mov
push
not
sahf
pushf
sbb
and
dec
mov
sub
cmp
aad
stos
enter
test
inc
xlat
jb
mov
adc
xor
imul
ret
mov
adc
jp
cmp
js
mov
mov
cmp
sub
mov
je
imul
xor
(bad)
adc
jle
cld
and
test
js
push
inc
jbe
test
aam
cmp
inc
repnz
push
and
dec
cmp
cli
test
and
mov
lds
inc
cmp
loop
hlt
xchg
shl
xchg
shl
xchg
ret
je
dec
sbb
test
hlt
xchg
inc
mov
xchg
shl
mov
xchg
push
shl
hlt
xchg
(bad)
in
xchg
sub
xor
and
mov
pop
pop
enter
xchg
(bad)
lock
mov
dec
shl
xchg
shl
fdiv
movs
cmp
hlt
pop
push
adc
xchg
or
mov
fldenv
(bad)
(bad)
in
inc
arpl
xor
mov
pop
into
dec
adc
fldenv
inc
fwait
xchg
mov
test
mov
fwait
hlt
cmp
push
and
xchg
push
xchg
js
out
popf
mov
xchg
scas
shl
imul
inc
cs
js
shl
mov
mov
xlat
jg
inc
retf
mov
push
imul
call
cmps
scas
push
loope
in
adc
imul
jecxz
stos
push
out
jmp
daa
mov
adc
mov
cs
and
ins
adc
dec
sub
mov
lahf
push
loopne
jmp
loop
in
adc
mov
ins
scas
push
popa
je
pop
fs
adc
mov
sub
and
ins
xchg
loopne
das
adc
xchg
lods
shl
aam
push
cmps
pop
in
adc
pop
sub
daa
loop
adc
movs
sub
(bad)
es
scas
push
cmps
mov
push
and
pusha
jmp
shl
in
xchg
mov
leave
push
and
xchg
cmps
push
lods
adc
xchg
sub
out
push
cmps
pushf
scas
(bad)
cmps
and
and
sub
cmps
inc
pop
mov
xor
mov
inc
adc
and
into
hlt
repnz
(bad)
pusha
adc
imul
jle
dec
out
or
or
sub
pushf
push
add
daa
mov
sbb
or
xchg
xchg
test
adc
neg
retf
arpl
jno
jb
mov
pop
push
scas
pop
xor
test
repnz
jae
ins
push
mov
pop
inc
xor
mov
nop
mov
mov
sub
call
fbstp
retf
in
dec
mov
xchg
popa
arpl
mov
(bad)
retf
mov
xchg
in
add
test
fcmovnb
pushf
mov
jle
or
test
sar
(bad)
xchg
or
add
lahf
or
mov
push
lock
add
dec
std
test
adc
aas
or
dec
test
fadd
and
ss
out
xor
mov
or
jno
stos
cmp
jno
jp
dec
sbb
movs
jp
or
pusha
test
mov
enter
int
sar
jo
mov
and
ins
add
inc
or
ins
inc
sbb
mov
sbb
fwait
pop
sbb
fistp
hlt
jecxz
mov
hlt
sbb
push
xchg
push
ins
(bad)
jl
imul
xor
movs
ins
push
adc
or
push
fisub
(bad)
sbb
sbb
imul
adc
test
xor
sub
clc
jle
fcmovne
mov
popa
xchg
mov
adc
or
(bad)
sub
leave
mov
div
fistp
push
mov
cmp
into
rol
xor
mov
sub
je
sbb
loop
(bad)
xlat
aas
cmp
mov
fidivr
jge
(bad)
mov
ret
pop
push
clc
call
jne
fisub
mov
push
(bad)
pushf
sub
mov
adc
jo
jo
jo
jb
jo
jb
jo
jb
jo
jb
jo
jb
jae
jb
jae
jb
jae
jb
jae
jb
jae
jb
jae
jb
jae
jb
and
mov
es
jmp
xchg
and
push
arpl
xchg
mov
cmp
push
cmps
and
addr16
mov
xchg
jecxz
es
addr16
out
addr16
loope
loop
cmps
xlat
mov
and
adc
loopne
addr16
and
shl
stc
addr16
loope
loop
arpl
loopne
mov
dec
mov
xchg
popa
adc
adc
nop
and
push
pusha
shl
fbld
loop
mov
pop
and
addr16
mov
mov
adc
and
movs
aas
out
and
shl
inc
pusha
xchg
mov
(bad)
mov
xlat
and
push
movs
fisub
loope
mov
xlat
addr16
xchg
jecxz
out
and
push
popa
repnz
mov
loopne
mov
inc
bound
jecxz
daa
iret
daa
adc
mov
pop
loop
and
and
es
out
mov
adc
mov
xchg
mov
jg
cmps
mov
fldenv
inc
arpl
jb
cmp
popf
xchg
dec
retf
dec
mov
pop
mov
rol
sar
lods
inc
jb
mov
add
adc
cmp
out
lar
call
xchg
xchg
and
cmp
std
xchg
(bad)
test
fdiv
js
mov
mov
jbe
jb
dec
shl
mov
cmp
dec
jno
push
adc
repz
dec
dec
mov
add
sub
lods
pop
fnstsw
ret
arpl
cmps
dec
jae
test
lea
pop
clc
(bad)
int
dec
sub
call
nop
test
jb
pop
xchg
mov
mov
movs
out
jbe
add
das
jmp
mov
dec
test
mov
pusha
loopne
int
sbb
jmp
mov
cld
adc
gs
(bad)
int
std
mov
enter
lea
scas
cli
lea
movs
or
cmp
adc
lahf
gs
(bad)
sbb
mov
xor
mov
xchg
out
mov
or
push
push
movs
push
pop
push
(bad)
ins
sti
jae
imul
push
(bad)
push
icebp
and
or
jnp
imul
push
(bad)
popa
icebp
and
pop
cmp
jbe
and
push
sti
jae
(bad)
(bad)
dec
jnp
fcomp
jae
and
push
and
xor
jmp
addr16
imul
loope
mov
cmp
add
retf
test
cmp
mov
jae
data16
push
cdq
and
mov
sub
mov
xor
jmp
outs
cld
dec
in
xchg
sub
cmp
shl
mov
cs
xlat
inc
cmp
cs
and
les
and
jae
mov
add
stos
test
jo
adc
mov
add
and
cmp
inc
bswap
push
or
mov
and
cdq
cli
test
xlat
arpl
(bad)
int3
xchg
pop
dec
(bad)
push
and
(bad)
mov
outs
(bad)
xchg
jbe
pop
jmp
test
xor
nop
cmp
jae
jae
aad
jae
push
pusha
(bad)
mov
fadd
aaa
(bad)
in
outs
(bad)
sbb
mov
jmp
out
int3
outs
cli
imul
clc
mov
add
jp
(bad)
pop
jp
push
adc
mov
in
outs
(bad)
jmp
jne
loop
jbe
add
repz
sbb
mov
(bad)
ja
stc
imul
call
daa
stc
imul
sti
mov
dec
and
(bad)
mov
xchg
retf
fnstenv
pop
jecxz
(bad)
sbb
test
(bad)
pop
xchg
push
mov
jbe
test
mov
imul
jecxz
int3
(bad)
jecxz
or
or
inc
or
outs
push
dec
rol
and
pop
dec
push
arpl
mov
in
pop
pop
dec
jl
sub
iret
pusha
test
(bad)
xchg
or
test
mov
movs
sub
lock
push
jns
xlat
dec
js
push
and
dec
push
jo
dec
in
pop
jl
sub
cmp
sar
adc
add
mov
and
pop
pop
stc
imul
(bad)
mov
nop
push
stos
test
(bad)
mov
or
xchg
sbb
call
xor
cmps
cmps
mov
fisubr
(bad)
and
sar
xlat
in
leave
jb
mov
mov
dec
(bad)
add
repnz
clc
jae
xchg
xor
sbb
mov
repnz
icebp
in
xchg
repnz
or
or
jp
bound
outs
pop
dec
adc
fidiv
cmps
adc
mov
cmp
ins
jmp
cmp
xchg
pop
pop
sub
aaa
xor
xchg
cmps
dec
sbb
or
and
mov
push
out
and
pusha
mov
push
daa
jnp
shl
jnp
adc
and
daa
dec
adc
or
nop
out
cmps
push
es
xchg
mov
popf
bound
and
push
out
jecxz
mov
xor
shl
jnp
xchg
cmps
(bad)
fs
inc
sbb
loopne
sbb
and
push
out
sbb
fs
cwde
push
pusha
push
fst
cmps
pop
fcom
arpl
pop
and
sbb
and
pop
adc
xchg
and
aam
cmp
mov
ret
movs
lds
out
pop
shl
pop
sbb
push
and
pop
push
sbb
mov
loopne
adc
fcom
in
sbb
movs
jb
xlat
out
pop
pop
arpl
pop
shl
lds
push
jecxz
fist
mov
adc
xchg
loope
call
cmps
sbb
daa
outs
pop
adc
mov
push
and
pop
shl
sbb
popa
inc
ficom
add
pop
push
movs
mov
xchg
cmps
xchg
pop
adc
push
fcmovnbe
and
fcom
and
stos
stc
daa
ror
outs
repz
adc
or
pop
mov
dec
cmp
sbb
mov
jge
pop
sub
jp
and
push
xchg
mov
jl
fnstenv
or
sbb
inc
or
je
xor
mul
push
pop
cmp
push
enter
push
sub
dec
pop
and
sbb
dec
or
pop
ja
cmp
cdq
add
into
sahf
inc
and
lods
fmul
inc
dec
mov
dec
jb
test
lea
dec
mov
shr
ret
dec
leave
fcomp
leave
cmp
mov
pop
scas
mov
mov
es
or
enter
mov
dec
pop
adc
ror
enter
lods
add
ds
je
dec
in
or
mov
mov
arpl
fsubr
popf
adc
pop
mov
adc
movs
repnz
mov
es
out
ja
xchg
xchg
test
loope
lods
inc
jnp
cld
mov
daa
xchg
enter
jns
ja
lea
(bad)
call
or
lock
mov
jmp
retf
push
mov
je
lea
cmc
ins
fidiv
mov
fadd
mov
dec
inc
sti
dec
mov
jmp
cld
call
jge
or
xor
cmp
shl
gs
lock
cld
aas
div
cmp
out
mov
add
in
mov
call
adc
sbb
mov
addr16
ret
cmp
cdq
pop
mov
add
mov
mov
jp
jmp
add
dec
aas
daa
lds
jb
push
fmul
adc
or
cli
imul
mov
test
sti
lahf
lds
inc
adc
mov
mov
int
sbb
inc
xchg
inc
sbb
inc
in
mov
and
scas
psubd
mov
jl
xchg
cmp
xchg
jae
add
adc
cmp
cmp
mov
data16
or
int3
cmps
jae
push
sub
and
mov
test
inc
sbb
dec
inc
std
call
adc
lock
mov
ja
mov
cmp
retw
dec
dec
adc
dec
xchg
cli
cld
mov
cmp
dec
icebp
mov
push
repnz
sahf
push
and
out
ficom
mov
push
in
ficom
xchg
fist
cwde
xchg
out
cdq
push
cmps
cmps
pop
push
loopne
fist
jmp
adc
out
push
xlat
loope
cdq
push
data16
adc
pushf
xchg
bound
shl
add
xchg
cmps
ret
sbb
retf
and
push
push
adc
xchg
loop
pushf
push
mov
lahf
fwait
nop
loope
fwait
adc
pop
xlat
and
fist
mov
xchg
jecxz
push
xchg
mov
mov
cwde
adc
inc
fist
mov
or
nop
pusha
nop
sahf
(bad)
loop
fst
fst
and
sbb
arpl
cwde
xchg
popa
imul
popa
sub
ficom
cmps
ds
push
cmps
clc
pop
shl
push
xchg
daa
inc
cwde
xchg
and
fcom
xlat
pop
push
movs
aad
adc
cdq
xchg
cmps
pop
cwde
xchg
mov
addr16
daa
mov
popf
inc
outs
out
jge
xchg
fist
and
popf
(bad)
jecxz
pop
adc
(bad)
pop
adc
push
out
fist
mov
pop
pushf
pop
out
fwait
push
and
pop
push
cmps
mov
pop
adc
lods
sahf
aam
xor
shl
je
push
jecxz
pop
shl
cmp
pop
adc
pop
shl
sbb
xchg
fist
pop
sbb
mov
movs
sbb
xchg
popa
push
xchg
loop
lahf
push
and
push
in
pop
shl
std
fcom
jecxz
fist
movs
test
pop
cmps
dec
fst
and
xchg
loope
pop
xchg
pusha
sbb
loopne
sbb
jecxz
cwde
xlat
mov
sub
shl
mov
push
and
fst
arpl
pop
xchg
mov
lds
nop
es
out
ficom
push
popf
xchg
loopne
sbb
loopne
pop
shl
arpl
push
popa
and
shl
outs
fist
cmps
mov
xchg
mov
fist
jecxz
cdq
push
fs
(bad)
cmps
enter
push
fcom
movs
xchg
popf
(bad)
jecxz
fcmovbe
and
shl
push
push
pusha
and
cmps
xchg
fisub
sahf
jae
xlat
xor
ret
adc
pop
adc
cdq
push
cmps
push
fst
out
call
push
push
xchg
out
popf
shl
ficomp
pop
and
push
daa
jmp
and
fst
cli
pop
(bad)
cmps
cmp
adc
push
in
sbb
data16
sbb
adc
pop
cdq
push
pusha
pop
fwait
xchg
jecxz
fist
loopne
sbb
push
and
pop
nop
pusha
in
pop
nop
and
cdq
(bad)
out
popf
xchg
pusha
stc
pop
adc
cmp
push
out
pop
nop
mov
enter
pandn
and
pop
xchg
loop
pop
shl
arpl
xlat
jecxz
cdq
xlat
scas
sahf
push
cmps
jmp
push
and
push
and
push
data16
push
mov
xchg
adc
add
pop
xchg
arpl
sbb
adc
pop
push
sbb
and
jns
or
mov
jne
arpl
mov
dec
not
dec
jb
in
jnp
jmp
adc
(bad)
arpl
pusha
retf
cmp
in
mov
popa
xchg
push
mov
sbb
fcom
aaa
(bad)
fnsave
bound
fs
and
outs
outs
(bad)
stos
mov
inc
xor
les
add
sub
jo
or
sar
push
fdiv
(bad)
xor
jns
cs
dec
arpl
xlat
xor
xchg
pop
iret
mov
pop
mov
loopne
arpl
js
into
dec
ins
cmp
mov
mov
xor
pushf
enter
jb
push
cmp
enter
mov
jbe
xchg
out
cld
xor
xor
lock
mov
xchg
jno
shl
cmp
lea
cmp
movs
pop
xchg
xchg
mov
add
pop
mov
pop
fadd
mov
cmps
cmp
lea
cmp
arpl
xor
pusha
rol
pop
mov
hlt
mov
mov
lock
cwde
retf
push
jno
dec
sbb
mov
mov
popf
fwait
cli
dec
and
mov
js
xchg
mov
push
lods
test
stos
daa
add
push
jmp
enter
dec
in
call
sbb
push
jmp
push
in
dec
cwde
xchg
pop
adc
(bad)
pop
cmp
adc
sahf
xchg
rcr
xchg
xchg
sbb
push
push
mov
push
mov
sbb
sbb
push
pop
push
mov
and
cmp
adc
cmp
inc
sub
mov
inc
mov
jmp
and
and
fnstcw
push
pusha
pop
inc
dec
sub
in
ss
in
ss
sbb
mov
add
push
outs
sbb
push
je
sbb
loopne
outs
jne
out
or
and
stos
mov
push
es
sbb
sbb
push
push
sbb
xor
fist
cmp
(bad)
out
mov
sbb
scas
push
push
es
xor
sbb
push
xor
movs
jb
and
gs
and
in
rcr
or
in
push
adc
pop
and
mov
addr16
cli
sbb
cmps
cli
sbb
outs
repnz
push
neg
sbb
sbb
push
into
jp
push
(bad)
(bad)
ror
and
sbb
inc
fidivr
push
lahf
or
aaa
push
sbb
call
ficom
int
or
fisubr
mov
cmp
sbb
sub
js
pop
out
dec
pop
out
sbb
sahf
clc
jmp
or
sbb
pop
arpl
scas
mov
jmp
sbb
inc
pop
add
imul
cmp
fidivr
xchg
pop
mov
add
push
cmp
neg
cli
cmp
cmps
test
fwait
or
mov
mov
sbb
pop
ins
pop
mov
sar
inc
sbb
push
and
add
xor
popa
pop
test
cmp
xchg
(bad)
jp
xchg
(bad)
fsubr
sbb
jne
cmp
push
loop
fsubr
xchg
(bad)
mov
ret
cmp
stc
lea
pop
xchg
push
stc
fcomi
xchg
pop
clc
test
and
mov
sbb
mov
outs
mov
sbb
jp
cmp
sbb
sub
bound
test
push
mov
lea
pop
xchg
mov
(bad)
neg
stc
mov
inc
(bad)
mov
pop
clc
in
mov
sbb
(bad)
(bad)
ficomp
mov
stos
pop
xchg
xchg
or
adc
(bad)
cmp
inc
pop
fidivr
push
inc
push
fisubr
mov
adc
sub
xchg
mov
add
pop
add
stos
pop
dec
pop
cmc
jp
sub
sbb
add
stc
(bad)
xchg
fcomp
push
xor
shr
push
push
dec
adc
sbb
adc
or
push
(bad)
sbb
push
fistp
jne
dec
xlat
and
sbb
inc
mov
sbb
js
fs
or
aaa
dec
jp
inc
(bad)
or
adc
ins
sbb
outs
jecxz
out
xchg
sbb
nop
push
fisub
mov
sbb
push
mov
pop
dec
cwde
ret
pop
adc
dec
pop
cmp
pop
dec
sahf
and
add
adc
sbb
mov
push
inc
call
outs
sbb
push
imul
aaa
cmps
js
push
ja
fimul
jge
in
aaa
ss
inc
or
es
adc
add
pop
sbb
aad
or
sbb
sbb
popa
pop
add
(bad)
in
jle
imul
cmp
pop
popf
and
pop
push
aas
adc
ja
sbb
mov
fidivr
push
jae
sub
dec
xchg
retf
adc
ret
sbb
sub
(bad)
add
adc
mov
add
jmp
dec
loopne
gs
(bad)
(bad)
push
neg
sbb
sbb
sbb
jg
push
mov
inc
fcmovnbe
into
and
sbb
adc
or
pop
and
push
aaa
outs
ins
sbb
call
xor
int
or
inc
mov
inc
cmp
sbb
or
pop
jmp
cwde
push
int
(bad)
sbb
sub
pop
push
stos
adc
out
cmps
ins
fld
jbe
pop
popf
sbb
arpl
ja
sbb
mov
cmp
lds
sbb
dec
aam
sbb
add
fidivr
adc
add
cmp
adc
dec
xchg
or
xchg
es
fldcw
popa
fisub
(bad)
push
jmp
fimul
popf
into
sbb
push
fist
sbb
les
ficom
dec
xchg
(bad)
sbb
adc
out
sbb
and
push
test
pop
pushf
jmp
cmp
adc
xchg
rcl
xchg
out
sbb
inc
dec
or
jecxz
and
fdivr
push
loop
inc
dec
test
movs
push
test
jecxz
lods
sbb
dec
aam
mov
push
xchg
push
adc
repnz
(bad)
pop
inc
adc
xor
fldcw
pusha
jnp
shl
clc
jle
jnp
fdiv
adc
jo
test
mov
test
mov
test
stos
test
scas
test
rol
jb
test
fiadd
jb
test
retf
jb
test
repnz
test
inc
jb
adc
stc
push
adc
call
pusha
inc
xchg
shl
xchg
shl
mov
mov
rcl
xchg
and
rcl
ficom
in
push
nop
and
lods
pop
push
arpl
adc
and
shl
xchg
push
out
adc
inc
push
push
and
push
shl
dec
xchg
adc
pop
adc
xchg
adc
aad
mov
out
shl
push
shl
stos
aad
and
xchg
shl
je
push
out
xlat
push
out
xchg
xchg
pusha
rcl
ret
rcl
popa
retf
cmps
or
push
arpl
xchg
shl
push
xchg
jecxz
adc
mov
and
shl
outs
push
push
es
shl
not
pusha
call
adc
add
shl
(bad)
xchg
pop
and
(bad)
pop
and
rcl
pop
xlat
shl
sbb
xchg
push
and
push
cmps
sub
push
mov
not
push
in
xlat
pop
out
(bad)
adc
jge
push
mov
ret
popa
dec
adc
cmps
enter
(bad)
aam
popa
push
adc
cmps
call
and
push
shl
ins
push
loopne
add
or
push
dec
arpl
test
aaa
xchg
sub
aam
adc
sub
pop
test
mov
ret
es
neg
xchg
mov
mov
bound
shl
cmps
vcmpsd
mov
xor
xlat
push
jb
add
lea
imul
movs
inc
or
jl
jb
jmp
jnp
ret
inc
mov
dec
jno
popf
fcom
cdq
pop
or
test
or
sti
dec
jge
dec
loop
sahf
fwait
adc
mov
rcr
and
jge
push
cmp
dec
enter
test
pushf
add
bound
cwde
js
sub
mov
test
test
(bad)
data16
and
lods
(bad)
aad
jge
outs
inc
fwait
pushf
xchg
js
icebp
data16
test
xchg
rcr
fsub
jb
jecxz
(bad)
shl
dec
stos
adc
jbe
fcomp
xchg
xor
cwde
or
xchg
repnz
shl
retf
xor
xchg
inc
in
ret
ffreep
jp
ffreep
jbe
ffreep
jb
ffreep
outs
in
ret
ffreep
data16
ret
ffreep
sahf
in
lods
stc
jmp
retf
int
sub
push
mov
rcr
scas
push
(bad)
sub
push
je
adc
lahf
jle
inc
outs
xchg
loop
mov
std
jb
je
in
shl
fs
inc
faddp
sub
pop
and
pop
test
cmp
pop
cld
(bad)
loopne
fadd
jns
(bad)
or
cmc
pop
cmp
adc
repz
int
jmp
pop
and
mov
add
fiadd
pop
mov
add
sahf
pusha
mov
sbb
neg
fdivrp
rcr
pop
je
pop
push
fcomp
sbb
sbb
mov
in
ret
ret
pop
(bad)
mov
pusha
ret
jb
mov
and
(bad)
fistp
in
jp
pop
loope
clc
adc
popa
hlt
pop
fsub
(bad)
adc
ins
hlt
pop
fimul
icebp
sbb
pop
iret
mov
or
and
mov
in
rol
faddp
stos
cmc
lahf
jge
in
ret
(bad)
int
loopne
ret
clc
aad
sub
pop
(bad)
faddp
and
pop
xchg
loope
fsubr
xchg
(bad)
xor
hlt
pop
cli
add
fdivrp
cmp
ret
loope
repz
ret
and
out
(bad)
clc
loopne
inc
out
clc
arpl
fcmovb
call
jmp
jmp
in
das
cmps
adc
shr
mov
int
add
in
cmp
push
sahf
mov
movs
inc
int
mov
dec
dec
push
and
mov
mov
fmulp
shl
daa
or
popa
movs
dec
push
mov
sub
dec
shl
retf
adc
dec
shl
inc
dec
adc
les
push
out
iret
adc
(bad)
iret
adc
xchg
dec
xlat
pusha
adc
adc
dec
xchg
loope
mov
loop
dec
(bad)
loopne
retf
jmp
adc
jo
xchg
and
into
push
mov
ret
loope
or
loope
dec
xchg
bound
shl
nop
lea
and
mov
cdq
retf
shl
pop
mov
daa
popa
leave
shl
daa
dec
shl
stos
or
popa
ss
push
data16
push
and
fs
or
loope
push
xlat
and
(bad)
push
daa
or
push
daa
adc
xlat
bound
xchg
mov
cmps
iret
push
cmps
and
enter
dec
loopne
add
loop
clc
xchg
adc
push
jnp
mov
pop
cmp
loope
mov
out
xor
and
pushf
inc
std
push
stos
out
(bad)
in
jmp
or
jb
call
aam
dec
mov
adc
pop
test
das
data16
lods
mov
jl
(bad)
cmp
aam
xchg
pushf
xor
ins
jb
sbb
scas
inc
idiv
call
pop
and
lahf
fcomp
popf
adc
mov
sub
add
mov
dec
mov
or
cmp
mov
fcomp
ret
mov
jb
sbb
stos
inc
or
sbb
sbb
(bad)
test
or
inc
in
mov
out
std
(bad)
hlt
ror
call
mov
enter
mov
mov
ficomp
inc
cmp
lea
bound
cmps
cmp
pop
adc
lods
(bad)
call
iret
sti
repz
dec
dec
pop
into
bound
sub
mov
cmp
dec
mov
daa
fistp
and
mov
push
mov
sbb
mov
inc
push
jae
inc
loop
(bad)
bound
adc
xor
fs
lea
cld
(bad)
fisub
sub
xor
mov
rol
inc
mov
stos
les
popf
cmps
les
popf
mov
les
popf
fcmovb
push
popf
(bad)
les
popf
rol
push
popf
into
les
popf
retf
popf
push
rcr
inc
rcr
jle
push
mov
fimul
repnz
out
xlat
pop
lea
aad
mov
rcr
mov
(bad)
pop
(bad)
adc
pop
mov
scas
mov
bound
cmp
stos
fisub
push
aad
nop
mov
aad
push
js
mov
call
push
mov
fmul
ficom
into
cmp
push
jae
fcom
inc
or
push
popf
inc
rcr
lds
repz
loop
in
sub
lds
popf
imul
loop
jg
mov
popa
popf
sub
dec
sbb
adc
mov
dec
inc
cmp
cmp
(bad)
loop
cmps
pop
mov
lods
popa
call
cmps
fbld
aam
mov
lods
popa
call
add
sbb
xchg
aam
test
lds
addr16
sbb
rcl
push
test
lds
cmps
test
(bad)
out
test
lock
loop
cmps
pop
mov
aam
mov
loope
sbb
xlat
sahf
mov
test
movs
aas
mov
cmp
hlt
retf
hlt
dec
inc
aas
mov
cmp
cmc
sub
push
out
mov
pop
inc
aas
repz
loop
mov
les
xor
and
pop
(bad)
fidiv
call
test
(bad)
push
daa
push
(bad)
ds
retf
popf
dec
repz
loop
jl
mov
fimul
mov
push
popf
outs
jl
pop
xchg
cmp
popf
jl
dec
sbb
out
frstor
outs
(bad)
idiv
popa
mov
icebp
out
fnsave
dec
bound
jl
bound
and
(bad)
popf
mov
cmp
mov
jmp
bound
pop
xchg
hlt
sbb
aas
popf
and
jmp
dec
sub
cmp
dec
out
loop
out
mov
adc
(bad)
repz
out
jp
mov
out
daa
mov
pop
aam
pop
std
cmps
pop
and
rol
mov
push
pop
aaa
scas
loope
jmp
fist
sub
mov
sub
(bad)
cmps
shl
out
jge
inc
es
pop
out
adc
and
and
xor
test
sbb
push
adc
lea
dec
nop
mov
push
popf
mov
sbb
(bad)
sahf
mov
fs
loope
dec
xlat
dec
nop
mov
and
ja
sahf
mov
xchg
fdivp
sbb
(bad)
and
cmp
adc
(bad)
loop
pop
pop
mov
jge
mov
loope
stos
fimul
sub
das
popf
lods
pop
ds
jbe
xor
pop
dec
jmp
ja
pop
jb
mov
fist
push
sbb
dec
test
xlat
fnstsw
popf
repz
dec
nop
cmp
and
jecxz
sahf
mov
fstp
xchg
mov
push
test
std
test
loop
add
jge
(bad)
enter
aaa
and
pop
dec
test
enter
aaa
and
sub
test
jmp
and
and
shl
popa
push
scas
loope
loop
push
mov
enter
fstp
xchg
rcr
xchg
fstp
test
aaa
and
outs
enter
enter
mov
ins
arpl
retf
xchg
pop
or
shl
adc
ror
fisttp
aaa
mov
jne
jp
popf
mov
inc
mov
sbb
xchg
and
ret
and
push
and
(bad)
xchg
and
test
push
and
inc
adc
mov
es
adc
push
inc
push
and
add
cmps
sahf
ret
xchg
mov
add
and
add
xchg
cmps
jbe
nop
mov
cld
inc
push
loopne
rcl
inc
inc
xchg
mov
dec
ret
push
adc
rol
nop
loop
inc
adc
sbb
push
jecxz
add
mov
out
add
mov
cld
ret
sti
add
push
and
out
adc
(bad)
push
fs
ret
xchg
(bad)
sbb
bound
adc
mov
test
shl
mov
add
mov
xadd
inc
push
and
inc
push
es
ret
cwde
add
daa
cmps
(bad)
xchg
xchg
jmp
cmps
aam
adc
mov
push
cmp
mov
xor
mov
repnz
mov
ins
pop
mov
nop
inc
mov
jp
or
loop
cmp
push
outs
in
outs
or
lods
sbb
popf
std
pop
icebp
xchg
aaa
shl
cmp
lock
repz
test
jb
sahf
cmp
or
mov
shr
rcl
pop
adc
xchg
adc
xchg
fsubr
rcl
out
jmp
mov
dec
jns
add
inc
jb
cmp
sbb
sub
js
add
int
je
lods
lea
into
nop
pop
inc
adc
mov
lea
dec
pop
or
jmp
mov
cmp
cld
repz
adc
ins
mov
mov
mov
ins
ins
js
out
test
popf
adc
inc
std
add
mov
lods
push
mov
inc
test
xor
std
cld
cmp
ins
in
adc
bound
lods
pop
outs
adc
aad
add
inc
inc
push
cmp
inc
sar
add
jnp
inc
xchg
sti
lods
inc
adc
es
sar
movs
inc
adc
add
or
leave
or
pop
inc
or
add
add
call
sbb
inc
fs
or
dec
pop
jp
fcmovne
pop
jge
dec
mov
out
or
ret
test
inc
int3
adc
fsubr
dec
daa
ss
sub
cwde
inc
sbb
aas
cdq
dec
cs
fcomp
jbe
sbb
mov
fmul
pop
cmps
jl
or
clc
xor
es
stc
movs
rcr
clc
push
push
jbe
sbb
add
ret
sbb
pop
mov
jbe
cmps
xchg
loope
pop
adc
dec
cmps
add
cmps
push
es
fistp
cwde
mov
leave
pop
sub
ss
cmps
int
cmps
leave
mov
stc
mov
push
test
add
lea
sub
leave
or
push
push
pop
sub
mov
mov
sbb
jnp
popf
fdivp
xchg
dec
cld
rcl
inc
xor
push
data16
adc
adc
add
es
(bad)
push
and
arpl
pop
pop
movs
pop
add
loope
add
push
cmps
and
adc
stos
(bad)
shl
xor
push
and
add
jl
(bad)
pusha
add
push
pusha
or
push
data16
adc
push
inc
push
fadd
pop
lds
popa
and
push
daa
stos
(bad)
xchg
popa
stos
inc
pop
out
xchg
and
adc
cmp
adc
cmp
pusha
mov
out
add
into
inc
shl
rol
push
cmps
sbb
shl
fild
adc
rcl
les
jmp
push
adc
hlt
inc
shl
xchg
cmp
xchg
and
shl
enter
or
nop
cmps
rol
adc
fwait
add
pop
test
loopne
add
in
xchg
arpl
(bad)
push
arpl
(bad)
pop
bound
adc
mov
rcl
add
inc
aaa
mov
fld
jb
cmps
ret
add
or
inc
inc
enter
or
jge
sub
loop
jmp
loope
and
xlat
arpl
(bad)
hlt
mov
xor
lahf
jge
cld
mov
js
loopne
inc
repz
cld
jg
sbb
or
add
or
jecxz
mov
movs
ret
mov
jbe
pushf
ins
inc
mov
or
jp
or
lods
(bad)
loopne
mov
(bad)
mov
xchg
inc
xchg
push
lods
shr
xchg
inc
mov
jae
push
cs
mov
inc
sub
test
in
into
pop
loopne
mov
mov
sub
loopne
(bad)
fcomp
hlt
pause
mov
hlt
mov
mov
scas
add
dec
div
nop
pop
cli
jg
push
jmp
push
adc
mov
fild
lods
xor
xchg
sbb
in
mov
push
mov
or
mov
xchg
ins
repnz
idiv
repz
pop
ins
lods
or
ret
retf
jl
pop
mov
(bad)
or
call
(bad)
dec
adc
jae
daa
mov
jae
outs
cmps
xor
xlat
scas
repz
lods
xor
add
mov
mov
mov
stos
jae
ja
mov
sti
mov
jae
arpl
repz
mov
outs
stos
repz
lods
jae
sbb
xrelease
lods
mov
pop
lods
jae
retf
mov
mov
mov
xchg
jae
xrelease
stos
repz
lods
xrelease
mov
xchg
cmps
mov
xchg
stos
mov
xchg
scas
mov
xchg
xchg
mov
xchg
xchg
sbb
fwait
mov
sbb
xchg
xchg
cmps
mov
xchg
popa
jecxz
mov
xor
mov
cmps
jae
sar
jbe
xor
outs
shl
sub
loope
xchg
(bad)
mov
daa
(bad)
xor
add
xchg
inc
ss
xchg
mov
jbe
sub
bound
dec
mov
daa
and
lea
ds
mov
mov
js
pushf
ror
mov
or
jl
test
xchg
ror
jae
dec
not
mov
(bad)
and
icebp
jecxz
test
xchg
sbb
test
xor
jbe
mov
cmc
xchg
lods
(bad)
popa
jecxz
mov
add
test
jp
loop
test
lods
mov
or
push
mov
or
cs
dec
je
xchg
and
rcr
(bad)
mov
and
mov
xchg
dec
(bad)
repnz
mov
jp
popa
lock
aas
popa
repnz
sub
ret
or
jbe
ins
xchg
jmp
(bad)
sub
adc
cs
push
xchg
xchg
mov
ret
sub
cs
shl
icebp
lods
xor
popa
lock
mov
repnz
xchg
xor
lods
pop
pop
xchg
xor
mov
dec
xchg
fld
sub
adc
or
clc
dec
adc
cli
xor
dec
push
xor
jbe
ins
and
cwde
mov
push
pop
jae
imul
adc
ret
mov
daa
jb
data16
cmp
in
dec
shl
mov
fwait
loop
inc
sub
xchg
inc
div
mov
es
in
stos
xor
outs
sbb
mov
mov
int
lods
dec
lock
mov
ficom
fwait
loop
ret
enter
mov
or
bound
inc
or
ss
add
pushf
mov
push
and
jl
mov
jmp
std
push
popa
icebp
cld
xchg
loope
(bad)
pop
and
std
shl
std
mov
push
arpl
xchg
popa
dec
shl
cmp
cmps
adc
cmp
fistp
adc
loop
adc
fs
arpl
mov
xchg
mov
ss
and
(bad)
out
cli
xchg
and
js
and
mov
xchg
and
std
push
out
clc
push
daa
sbb
push
out
jnp
cmps
and
addr16
loop
jp
mov
icebp
clc
adc
hlt
cmp
and
cmp
adc
les
dec
std
xchg
arpl
stc
xchg
arpl
adc
adc
cmp
in
mov
push
out
mov
(bad)
scas
sti
push
and
js
and
shl
clc
mov
pop
and
jle
and
cli
push
mov
push
mov
xchg
mov
pushf
cli
adc
bound
pop
cmps
push
pop
bound
aas
xchg
and
sti
xchg
and
jns
inc
mov
adc
mov
mov
(bad)
mov
xchg
pusha
lds
adc
dec
inc
outs
arpl
stos
add
pop
lods
dec
ds
jns
movs
jge
sbb
ds
enter
scas
fcomp
shr
add
js
sahf
stos
add
xor
pop
es
(bad)
fst
cmp
jge
or
xchg
inc
push
mov
mov
cmps
jmp
jb
stos
add
mov
pop
push
xchg
sbb
movs
jmp
adc
pusha
loopne
ror
sbb
jno
push
mov
aad
mov
jnp
xchg
add
inc
outs
arpl
push
pop
popa
out
js
sbb
clc
popf
xchg
push
push
mov
mov
sbb
nop
jb
mov
mov
and
push
jb
sub
(bad)
gs
or
imul
cli
shl
add
lods
adc
jmp
adc
retf
rcl
popf
adc
fnstcw
sti
cmps
adc
test
cli
cmps
cmp
pop
and
inc
mov
inc
std
inc
lea
cmp
pop
or
stos
sbb
fwait
or
cmp
lea
push
sub
xchg
mov
mov
pop
(bad)
and
mov
and
push
and
stos
lds
dec
iret
jge
or
sbb
add
sbb
add
out
rep
fidivr
loopne
cmp
mov
shl
fwait
mov
shl
outs
mov
xchg
mov
mov
adc
cmp
and
jnp
loope
ds
dec
aas
xchg
pusha
int3
jns
mov
xchg
jg
mov
sbb
cmp
loopne
ds
bound
xchg
popa
scas
cmp
idiv
push
mov
clc
cld
pop
and
jle
daa
dec
mov
push
daa
adc
push
and
mov
xlat
popa
pop
cmp
mov
std
xchg
es
js
es
xlat
es
xchg
cmps
jae
pop
out
mov
adc
ds
pusha
inc
stc
push
loope
js
cmps
(bad)
clc
xchg
bound
push
mov
fidivr
pop
out
cmp
nop
cmps
arpl
test
std
pop
and
xchg
and
cld
adc
cmp
adc
add
xlat
cmps
iret
call
mov
push
adc
push
and
mov
adc
call
dec
jl
add
jecxz
jno
xchg
inc
jb
fwait
ret
arpl
sbb
push
adc
push
jb
pushf
xor
pop
mov
xchg
sub
jb
jns
mov
scas
sar
or
imul
rcr
fdiv
sub
out
arpl
ins
(bad)
stos
or
ins
jb
jnp
retf
(bad)
in
js
pop
lods
sbb
jge
cmp
lea
adc
es
mov
adc
mov
inc
jne
lods
inc
enter
mov
xchg
das
lea
js
push
rol
movs
mov
xor
aam
and
pop
inc
xchg
dec
mov
jmp
inc
mov
xchg
sub
inc
fscale
pop
into
and
pushf
push
popf
inc
lea
mov
xor
int3
mov
mov
in
jge
ret
sbb
xchg
inc
mov
or
lea
lods
add
inc
repnz
jmp
lea
mov
ins
lods
dec
dec
xchg
std
cmps
test
mov
xchg
adc
push
aad
inc
je
mov
push
jle
sbb
adc
enter
push
rcl
xor
sub
in
adc
xchg
fisubr
(bad)
jnp
popa
stos
adc
xchg
inc
lods
cli
jmp
cmp
mov
xchg
aas
(bad)
sbb
adc
jl
xchg
xchg
mov
pop
dec
mov
sub
aam
repz
arpl
xchg
loope
cmp
and
std
adc
or
pop
out
jnp
and
shl
pop
jge
arpl
cld
xchg
mov
arpl
push
mov
scas
mov
push
out
mov
xchg
mov
add
push
and
cmp
mov
mov
push
cmp
fs
ds
movs
mov
cmp
shl
ss
arpl
mov
xchg
es
push
mov
add
push
loope
jp
jecxz
cmp
cmps
sar
adc
jl
cmps
popf
jle
addr16
addr16
push
mov
idiv
and
sti
push
mov
jge
aam
inc
mov
xlat
popa
leave
jl
pusha
psubq
jecxz
cld
adc
adc
and
adc
fstp
loopne
mov
xchg
out
cmp
push
out
mov
xchg
and
jp
mov
add
xchg
loope
mov
xlat
mov
push
mov
shl
lahf
ins
mov
xchg
cmp
dec
stos
in
mov
jp
jbe
scas
scas
sbb
mov
jae
or
outs
mov
add
xor
loopne
sub
push
xor
rol
sti
push
movs
fidivr
and
nop
and
cmp
and
cli
xchg
cmps
mov
nop
arpl
jg
popa
clc
cmp
mov
inc
repnz
pusha
pop
jae
loopne
mov
cmps
dec
mov
es
hlt
push
loope
cmc
(bad)
and
jae
mov
and
adc
mov
pusha
das
jae
loop
xor
ja
adc
jne
push
loopne
jae
and
jo
addr16
ja
data16
push
loopne
mov
popa
nop
pause
and
lock
pop
xor
pop
xor
fs
icebp
push
cmps
scas
mov
out
jne
pusha
jno
push
cmps
mov
adc
cmc
adc
(bad)
aaa
push
movs
test
xchg
mov
dec
mov
addr16
not
es
je
and
xor
in
mov
cmps
movs
mov
es
jb
data16
xlat
arpl
mov
popa
(bad)
not
and
adc
xchg
loope
je
and
repnz
pusha
or
push
cmc
push
cmps
xchg
xor
push
loopne
hlt
push
arpl
mov
pusha
sub
pop
and
cmp
adc
mov
mov
xchg
push
ins
mov
mov
mov
hlt
iret
add
ret
adc
and
adc
jo
xor
xor
aaa
mov
jmp
es
nop
mov
or
xchg
and
repnz
aad
aam
sbb
adc
pop
cmc
shl
mov
repnz
popa
outs
icebp
xchg
and
fs
shl
div
adc
sti
repnz
xchg
daa
pop
mov
and
daa
(bad)
cmc
push
mov
push
jne
out
icebp
adc
sbb
xchg
pusha
popa
hlt
xchg
and
adc
sub
adc
sub
mov
xor
nop
cmps
ds
mov
xchg
arpl
shl
int3
mov
addr16
jne
cmps
pop
xor
mov
pushf
mov
and
repnz
data16
xchg
and
mov
mov
(bad)
mov
jecxz
mov
mov
(bad)
xor
mov
xchg
ja
pusha
xchg
mov
mov
fnsave
xlat
bound
mov
daa
outs
xor
adc
ja
in
mov
out
jb
and
jno
mov
shl
daa
mov
loopne
mov
mov
xchg
mov
mov
pop
mov
jmp
xchg
test
jg
popa
sbb
or
pop
in
jmp
(bad)
pop
jbe
xchg
or
pushf
clc
daa
sahf
mov
xor
clc
inc
(bad)
cmps
int
cld
shr
sbb
fmul
aas
pop
push
mov
pop
pop
mov
mov
jo
lods
cdq
mov
(bad)
jecxz
jb
mov
xchg
fdivr
jecxz
add
ret
pusha
rcr
mov
repz
jae
or
add
ins
mov
mov
lods
adc
mov
inc
mov
or
in
jmp
cmp
imul
or
test
inc
sbb
iret
mov
add
fs
cmp
repz
adc
and
xlat
pop
adc
jl
(bad)
imul
pop
lods
lea
lds
dec
es
inc
mov
cwde
mov
(bad)
fidiv
cmp
(bad)
jecxz
mov
scas
pop
arpl
dec
cs
sub
(bad)
shr
sbb
pusha
jb
jno
rcr
mov
cwde
cmps
enter
and
mov
mov
sub
sbb
cmp
out
mov
or
pop
sub
pop
push
sbb
push
leave
dec
cld
popa
les
outs
xor
push
je
adc
push
pushf
pop
stos
xchg
call
imul
push
push
push
adc
sub
or
adc
mov
push
mov
fbld
mov
cmp
or
xchg
outs
pop
cld
dec
xor
jle
ret
in
xlat
gs
or
jbe
fisttp
imul
std
ins
loope
sti
mov
mov
popa
into
adc
dec
or
ret
cmp
pop
dec
adc
pop
ror
mov
add
jo
mov
xchg
xlat
pop
test
mov
pop
pop
inc
pmullw
shl
es
and
push
rol
test
fstp
inc
sub
pop
inc
jecxz
fsub
or
nop
inc
cmps
scas
retf
stos
lahf
xchg
mul
push
or
jnp
pushf
xor
mov
scas
in
push
dec
sbb
cmp
push
jle
add
jnp
push
(bad)
rcr
adc
pop
xchg
bound
sbb
sbb
dec
arpl
xchg
or
in
cld
pop
push
xchg
loopne
push
mov
fwait
repnz
mov
fistp
popf
test
call
mov
inc
cmps
inc
push
stos
lahf
xchg
jg
mov
or
push
(bad)
pop
pop
js
push
add
inc
iret
fst
jo
inc
or
(bad)
pop
inc
push
mov
jle
or
mov
xor
mov
push
jge
inc
inc
mov
sti
hlt
xchg
data16
jne
bound
mov
mov
or
nop
mov
adc
xchg
daa
xchg
mov
pusha
sahf
mov
and
xor
mov
out
not
stos
jb
pusha
lock
mov
cmp
pop
and
mov
and
push
mov
mov
(bad)
and
shl
adc
push
mov
pushf
icebp
xchg
data16
adc
out
xor
pusha
mov
adc
mov
push
mov
mov
mov
mov
iret
jae
mov
xchg
mov
(bad)
aam
(bad)
jecxz
mov
and
ss
out
jb
mov
push
jb
out
not
daa
clc
repz
and
cmc
aam
ret
mov
mov
pop
and
cmc
xchg
arpl
shl
(bad)
push
mov
and
xlat
addr16
and
ss
daa
jo
xlat
arpl
pop
out
not
inc
jbe
out
ja
cmps
mov
and
jne
loope
ja
daa
xchg
xor
out
jne
loope
je
mov
arpl
aam
cwde
pop
and
mov
hlt
inc
xor
cmps
pop
jae
adc
xchg
inc
push
arpl
movs
and
cmps
cmp
cmp
jnp
pop
sub
in
arpl
mov
add
pop
cmc
jne
movs
shl
pop
mov
pop
jle
mov
(bad)
popa
dec
or
out
pop
cmp
mov
es
jb
and
sub
push
dec
repnz
xlat
inc
pop
and
add
fadd
pusha
jb
fmul
mov
scas
sbb
call
mov
adc
dec
jl
call
xor
inc
cmp
mulps
xchg
mov
not
lea
ja
xor
or
pop
mov
cdq
add
leave
test
mov
or
jecxz
(bad)
cmp
scas
and
and
test
movs
mov
fwait
into
pop
push
push
clc
lea
mov
pop
fmul
in
popf
adc
mov
idiv
cmp
cmps
pushf
inc
nop
adc
cmp
dec
or
pop
cmp
int
stos
nop
fadd
sbb
or
pop
mov
shr
pop
pop
and
test
hlt
jl
imul
jl
push
test
push
test
mov
push
test
jp
nop
push
test
cmps
jl
adc
movs
jl
push
test
push
test
xchg
push
test
jo
mov
hlt
call
int3
push
test
pop
jp
aam
fwait
jl
pop
jnp
fcom
test
test
jl
imul
andnps
mov
es
mov
push
test
sub
add
jl
push
test
xchg
test
ja
jl
push
test
movs
mov
pop
mov
movs
jl
push
test
ja
jl
push
test
xchg
test
and
in
or
mov
push
mov
jne
lods
lods
push
test
xchg
pop
jp
mov
mov
inc
mov
(bad)
fidivr
stos
mov
jno
adc
shr
jp
and
inc
ret
pop
jnp
in
xchg
mov
imul
push
ja
ds
pushw
(bad)
push
test
inc
mov
pop
or
xchg
jl
inc
mov
add
push
lds
int
pop
xor
scas
pop
xchg
push
pop
jl
loopne
or
hlt
pop
or
xchg
shl
jl
test
inc
test
add
in
sbb
add
pop
test
mov
or
jmp
dec
jmp
xchg
jecxz
ins
push
mov
fucomp
shl
mov
lods
push
popa
lods
in
push
es
xchg
out
call
shl
cld
jmp
les
data16
shl
or
push
pusha
mov
push
cmps
(bad)
call
push
and
out
xchg
daa
cmps
call
xchg
callw
cmps
ins
outs
push
cmps
xor
xchg
daa
repz
cmps
cmp
loop
adc
push
jecxz
imul
psubsw
sub
loop
stos
pop
in
in
nop
pop
jmp
out
adc
sub
push
mov
jbe
shl
jle
push
in
imul
bound
aam
retf
daa
lea
push
cmps
xchg
push
xchg
data16
mov
fs
shl
lock
aas
test
shl
add
call
fisttp
shr
add
xor
ret
jnp
xchg
jle
sbb
sti
and
les
int
push
pusha
outs
jle
mov
dec
es
xor
pusha
sbb
push
jns
std
iret
aas
test
and
ror
jo
ds
jnp
cmp
sbb
xchg
jnp
aaa
cli
frstor
mov
adc
mov
repz
adc
or
mov
rcl
jnp
pushf
cs
rcr
inc
jnp
rcl
xchg
out
daa
(bad)
icebp
inc
mov
or
cmp
sbb
aam
pushf
and
mov
jb
sub
out
or
stos
ret
mov
mov
cwde
cmp
das
aad
enter
sub
cwde
pop
aam
dec
fld
sub
mov
jmp
aad
rcr
mov
pushf
pop
shr
adc
ins
jb
pushf
add
fidivr
mov
lods
mov
jb
sbb
sbb
in
(bad)
jns
mov
xchg
xor
adc
dec
icebp
imul
push
jmp
sar
pop
scas
imul
jge
bound
pop
dec
cmps
mov
push
out
pop
pop
and
lock
sbb
push
cmps
jg
cmc
xchg
cld
neg
pop
inc
sub
xchg
mov
(bad)
jl
mov
xchg
jg
pop
dec
outs
mov
(bad)
movs
jmp
adc
ss
sbb
ds
push
rep
int3
dec
xlat
inc
fsub
movs
(bad)
cmps
inc
xchg
or
push
ins
and
fimul
ds
push
add
cmp
call
aaa
dec
cmp
fbld
scas
dec
xchg
test
mov
(bad)
fist
xchg
add
stc
inc
not
mov
cmp
inc
scas
fcomi
test
cwde
or
aas
push
mov
ds
push
dec
inc
iret
inc
cs
test
inc
mov
push
push
lods
xor
adc
push
jae
ins
shl
sub
push
es
pop
inc
out
xchg
jecxz
in
pop
loopne
test
jecxz
push
shl
xchg
out
shl
fld
shl
test
cmps
mov
scas
push
pusha
lods
sub
and
xchg
daa
mov
xchg
mov
jl
shl
shr
mov
or
shl
or
out
xchg
out
outs
shl
cwde
sub
loop
out
adc
addr16
shl
in
adc
cs
aam
ja
nop
cmps
js
shl
jle
push
and
jmp
enter
dec
in
push
pusha
push
test
arpl
das
push
popa
fsubr
xchg
and
jmp
shl
stos
jmp
imul
shl
call
push
mov
sub
test
push
cmps
mov
adc
push
in
push
daa
xchg
out
xchg
mov
pop
imul
bound
outs
sub
out
in
xchg
and
sub
xor
ins
adc
adc
push
mov
inc
jb
loopne
jb
aas
push
jb
scas
push
mov
push
out
or
jb
add
rcr
jp
inc
jo
push
or
mov
push
pop
jb
mov
push
in
call
mov
je
and
mov
push
jb
out
adc
call
mov
mov
and
and
mov
js
pusha
hlt
out
xchg
xor
push
sar
push
jb
cs
and
mov
inc
jb
mov
push
jb
js
cmc
movs
out
xchg
xor
mov
push
jb
mov
push
repnz
mov
and
mov
inc
repnz
push
jb
lods
adc
lds
in
out
or
or
push
jb
mov
xchg
bound
out
xchg
xor
mov
jg
sub
push
repnz
das
inc
and
in
xchg
mov
mov
and
push
jb
mov
inc
jb
pusha
jns
addr16
inc
jb
scas
push
push
dec
mov
inc
jb
push
push
push
dec
mov
fs
js
push
xchg
mov
fs
mov
push
movs
mov
inc
jb
fiadd
push
mov
inc
jb
pop
jle
test
fs
jae
push
mov
inc
jb
inc
cmp
mov
dec
jb
dec
ins
push
aam
add
sbb
mov
push
push
cld
mov
jle
in
addr16
sar
addr16
and
sar
jb
mov
sbb
outs
jb
(bad)
popa
push
sub
cli
jl
xchg
stos
int3
push
sbb
inc
bound
push
jg
imul
inc
mov
jp
jb
adc
push
mov
xchg
data16
icebp
cld
rcl
add
push
into
jg
add
mov
test
mov
add
ins
push
jb
cmp
and
dec
call
mov
shl
dec
jb
push
not
mov
cld
xchg
mov
jb
fcmovb
push
xchg
js
fisttp
add
aaa
pop
jb
mov
push
mov
jge
and
mov
add
stc
mov
push
popf
mov
mov
pusha
jne
std
mov
dec
sbb
jb
xor
push
aam
add
jge
jb
cdq
push
push
lock
inc
mov
outs
jb
(bad)
push
repnz
sbb
jo
std
jns
push
retf
mov
ds
sti
outs
jb
int
push
adc
outs
jb
sub
push
push
mov
or
aas
jnp
pop
call
add
fild
ins
and
push
pop
mov
and
push
pop
push
push
mov
or
outs
push
jb
add
push
das
mov
cmp
ja
push
push
inc
jb
lds
fstp
push
arpl
inc
jb
xor
sub
in
cmp
mov
nop
inc
jb
pushf
sbb
mov
je
call
mov
ret
mov
and
mov
dec
inc
mov
jb
mov
inc
lds
jo
imul
inc
xor
jg
jb
cmc
ins
push
lahf
mov
dec
stos
cld
dec
jb
xchg
bound
mov
movs
push
cdq
dec
jb
cmp
mov
push
add
jb
xchg
jmp
fbld
(bad)
jle
clc
mov
fnstsw
xor
or
jg
xor
mov
in
dec
inc
jb
pop
inc
push
or
sbb
popf
dec
pop
push
or
outs
jb
add
add
lea
movs
pusha
sub
mov
pusha
(bad)
loopne
jb
push
out
push
and
dec
jb
aad
push
jae
cmp
movs
js
add
ret
stc
js
adc
mov
add
popa
jb
sbb
fnstcw
pushf
jnp
mov
mov
mov
mov
dec
push
cmps
mov
out
jg
jb
in
push
xchg
mov
mov
pop
mov
inc
and
addr16
jne
push
xor
jb
les
mov
inc
jb
fild
test
inc
xor
fs
(bad)
dec
push
sti
mov
pop
sahf
lea
sbb
mov
inc
or
dec
jb
sbb
mov
add
mov
dec
jb
retf
stos
mov
call
jp
std
push
test
push
push
jb
mov
push
jl
add
pop
xchg
push
jb
xchg
enter
add
pop
arpl
iret
pop
xchg
leave
inc
jb
out
xchg
cmp
mov
fidivr
xor
popa
xchg
mov
add
inc
jb
xchg
mov
js
(bad)
fist
xchg
mov
dec
mov
jb
enter
mov
mov
mov
and
in
mov
pop
es
jb
xchg
and
jmp
or
sahf
stos
jb
lahf
mov
xchg
mov
and
and
xchg
mov
add
ss
pusha
jb
mov
xchg
mov
ss
ins
jb
sub
ret
xchg
outs
jb
aam
xchg
add
jns
add
inc
repz
adc
xlat
fadd
xchg
inc
sub
inc
jg
sub
fiadd
jle
ja
aas
mov
jae
cmp
jp
xor
xchg
jae
(bad)
out
pop
xchg
js
jb
inc
xor
jns
test
outs
jb
xor
mov
in
push
jb
fs
mov
jge
mov
inc
xchg
mov
xor
pop
ins
ja
fdiv
jne
xchg
pop
push
xchg
mov
cli
mov
jns
out
into
xchg
mov
push
and
xchg
mov
cs
imul
jno
jb
mov
add
(bad)
or
jb
sbb
sbb
inc
jb
ins
sub
push
mov
adc
push
jae
mov
mov
jecxz
out
dec
jb
mov
xchg
adc
sub
jb
cmp
ins
mov
dec
ret
jb
ret
fld
mov
pop
add
inc
(bad)
mov
scas
ret
mov
or
and
adc
xor
loop
pop
and
pop
jb
popf
sbb
dec
and
adc
mov
mov
xor
push
jb
sbb
mov
mov
pop
and
push
jb
mov
mov
mov
xor
gs
xlat
sub
call
mov
ret
adc
jb
cmp
mov
add
xor
jb
les
mov
push
cmps
jae
aas
nop
pop
mov
ret
mov
mov
sub
mov
div
mov
mov
mov
sub
dec
pop
push
jb
in
mov
xor
arpl
mov
les
not
xor
push
xchg
outs
jb
mov
sub
and
mov
push
pop
jb
jg
test
pop
pop
jb
xchg
sbb
adc
xor
jnp
xor
out
sub
setno
sbb
sbb
mov
push
(bad)
xchg
pop
jb
or
xor
jb
outs
add
ds
pop
jb
xchg
add
ja
mov
test
cmp
jae
xchg
xchg
test
mov
fild
cwde
pop
jb
jo
test
mov
or
xor
cmps
mov
mov
popf
cmp
pop
jb
dec
out
add
ins
jb
aam
test
mov
inc
shl
test
mov
stc
fiadd
in
fdiv
outs
jb
xor
and
ins
jb
push
fld
loop
pop
jb
test
test
mov
jnp
loopne
jb
dec
or
ficom
pop
jb
or
test
sbb
xlat
shr
cwde
mov
stc
mov
jge
stos
mov
mov
mov
jb
pop
mov
xchg
sub
jb
ins
mov
bound
push
jb
loopne
mov
inc
hlt
inc
xchg
push
jb
out
aaa
mov
ret
mov
jb
out
rol
jp
push
mov
ret
jmp
jb
in
test
ret
rol
mov
mov
ret
iret
jbe
fild
add
or
inc
jb
or
test
mov
es
dec
jb
dec
xchg
sbb
mov
and
jb
cwde
xchg
aad
inc
out
out
outs
dec
jb
gs
ins
sbb
sbb
mov
adc
lock
jb
xchg
lea
es
xor
push
jb
xchg
mov
mov
ds
mov
add
inc
jb
push
jp
ret
cmp
push
push
mov
bound
mov
sub
pop
jb
in
sbb
inc
lods
cli
inc
dec
jb
idiv
in
out
dec
jb
fstp
(bad)
sar
pusha
jb
adc
xchg
push
ret
inc
jb
adc
xchg
enter
sbb
push
sbb
mov
es
xchg
sbb
dec
jb
mov
inc
push
scas
sbb
cmove
pop
pop
test
dec
mov
retf
ret
fimul
pop
push
cmp
bswap
add
jb
push
jb
xchg
sbb
sbb
ret
and
jb
xor
nop
and
fist
cmp
nop
loop
sbb
in
jb
jl
xchg
xlat
retf
ret
les
push
sbb
nop
ror
cmp
jb
pop
push
nop
xlat
retf
add
scas
dec
jb
inc
sbb
cmps
fadd
mov
pop
iret
sub
ret
in
jb
xor
iret
jo
add
fisubr
jb
xchg
sub
retf
sbb
leave
inc
push
into
leave
inc
jb
leave
inc
jb
leave
inc
jb
leave
inc
jb
leave
inc
jb
leave
inc
jb
leave
inc
jb
leave
inc
jb
leave
inc
jb
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
fst
ja
nop
and
fcom
cmps
add
shl
mov
shl
dec
pop
push
loopne
fst
adc
loope
pop
adc
cwde
shl
mov
cdq
adc
fwait
push
jecxz
sbb
mov
jae
push
pusha
mov
(bad)
mov
(bad)
fnop
retfw
loop
sbb
push
fwait
nop
addr16
fist
cdq
fcmovbe
popa
ficomp
shl
in
xchg
mov
lods
cdq
push
es
adc
mov
push
and
cdq
adc
call
or
adc
ficom
rcr
adc
pop
call
bound
nop
arpl
pop
push
mov
hlt
pop
(bad)
and
pop
adc
sbb
inc
sbb
cmps
or
push
mov
rcr
shl
(bad)
adc
mov
fist
arpl
pop
xchg
mov
repz
xchg
out
sbb
cli
sbb
out
cdq
xchg
cmps
rcr
pusha
push
sbb
adc
rcr
adc
fwait
pop
push
fs
and
fcom
test
xchg
xor
neg
shl
cmp
shl
sbb
and
popf
shl
int3
pop
shl
cwde
shl
rcr
and
sbb
push
and
push
fs
cdq
push
popa
mov
xchg
addr16
adc
jp
push
and
adc
ficom
dec
fist
retf
lahf
push
mov
push
pop
xchg
loope
fwait
adc
loopne
adc
jmp
pop
xlat
and
fcom
xor
xchg
loope
ficom
arpl
sahf
xchg
retfw
fcom
push
pop
shl
fwait
adc
call
data16
stos
dec
dec
and
inc
mov
ret
add
dec
mov
xchg
lods
movs
inc
cs
xor
mov
sar
and
(bad)
outs
retf
scas
mov
xor
mov
bound
retf
xchg
pusha
aam
lds
dec
stos
adc
test
cmp
push
dec
lods
lea
and
fdivr
fst
gs
clc
xchg
in
jb
cmp
or
jae
(bad)
hlt
cmp
jb
xor
sbb
or
aas
fs
xchg
mov
add
mov
mov
xor
ret
in
ins
add
xor
or
cmp
sub
mov
sbb
sbb
mov
inc
das
and
push
jb
(bad)
rcr
adc
jmp
and
shl
or
adc
(bad)
fdivr
arpl
repnz
and
inc
gs
xor
jecxz
pop
cmp
(bad)
mov
arpl
adc
cmp
push
push
js
mov
lea
shr
pop
loopne
and
jle
cmp
mov
mov
(bad)
jb
(bad)
mov
in
dec
or
cwde
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
jb
push
mov
mov
mov
pop
push
daa
dec
pop
jb
enter
dec
pop
jp
enter
mov
and
mov
adc
outs
and
pop
shl
pop
push
and
pop
pop
adc
sahf
and
enter
mov
adc
dec
adc
pop
repnz
dec
imul
mov
adc
and
dec
pop
out
mov
and
push
and
dec
pop
push
adc
pop
fisub
dec
push
and
dec
pop
or
dec
pop
into
and
enter
mov
sbb
pop
(bad)
adc
pop
and
mov
and
jmp
pop
adc
mov
and
sbb
mov
and
push
inc
sub
push
retf
push
dec
sub
enter
dec
push
mov
das
dec
push
mov
sub
pop
jmp
push
shr
or
sub
pop
mov
sub
fs
mov
sub
addr16
mov
sub
pop
jbe
dec
addr16
sub
addr16
pop
out
enter
mov
xor
xchg
mov
xor
call
xor
data16
pop
(bad)
xor
popa
mov
mov
xor
mov
xor
mov
xor
or
mov
mov
mov
mov
aaa
enter
dec
dec
pop
aaa
enter
mov
aaa
or
xor
into
aaa
enter
mov
xor
dec
cli
aaa
mov
das
mov
xor
out
enter
dec
dec
scas
cmp
enter
enter
mov
cmp
enter
dec
inc
retf
dec
into
xor
dec
repnz
or
mov
xor
mov
daa
or
sbb
jmp
inc
push
mov
cmp
inc
pop
cmp
inc
inc
mov
cmp
inc
retf
inc
mov
enter
dec
inc
idiv
dec
inc
jp
enter
dec
inc
loop
dec
inc
add
jmp
jge
add
jl
add
jl
sbb
jg
pop
enter
mov
pop
dec
jg
push
enter
dec
jl
or
add
jle
add
jns
add
arpl
add
js
add
rol
dec
arpl
add
jnp
sbb
jp
add
jp
or
and
jne
add
jne
add
je
and
inc
cmps
ss
push
push
dec
je
add
jns
add
ja
add
jbe
aaa
enter
dec
push
dec
add
inc
mov
enter
mov
push
enter
mov
push
mov
push
enter
mov
xor
dec
inc
xchg
pop
enter
enter
or
add
jne
add
inc
mov
push
xor
dec
jnp
push
mov
or
jns
or
enter
dec
jp
xor
cs
pop
push
add
push
push
add
sbb
mov
ss
jo
and
jo
cmovs
add
(bad)
not
or
mov
and
push
push
or
add
jb
add
jns
add
push
pop
add
ja
and
push
or
dec
jb
add
enter
mov
and
push
bound
enter
enter
enter
enter
mov
xor
pop
sbb
pop
pop
aaa
enter
mov
adc
ins
retf
inc
into
add
ins
neg
or
mov
sbb
outs
mov
add
inc
sub
push
outs
sbb
outs
xchg
pop
enter
enter
dec
sbb
push
dec
test
cdq
mov
xchg
dec
lahf
sub
mov
clc
jo
xchg
jmp
dec
lahf
xchg
jmp
jnp
mov
mov
lahf
ins
fsubr
mov
jns
mov
jnp
stos
loopne
scas
mov
retf
push
xchg
aam
mov
lahf
shr
jns
pop
or
fwait
sub
lahf
(bad)
lods
jns
and
push
xchg
cld
loopne
mov
add
fbstp
jmp
jge
ds
data16
cmc
xor
stos
js
adc
mov
sahf
push
scas
js
fcmove
data16
cmc
xor
stos
js
xor
mov
popf
cmp
data16
cmc
xor
stos
js
pop
jecxz
mov
inc
scas
jp
xchg
fld
xchg
jns
xchg
inc
jmp
mov
dec
pop
stos
les
outs
jmp
mov
stc
pop
fcmovnu
stc
fidivr
jns
mov
enter
push
xchg
mov
cmp
xchg
jns
fild
lahf
and
jns
addr16
pop
jmp
lahf
jae
jle
mov
pop
xchg
mov
jns
popf
in
stc
fbld
or
or
pop
sahf
into
sub
shr
stc
scas
(bad)
stos
cmp
fild
mov
cmps
jecxz
(bad)
sti
jo
ins
mov
dec
xchg
(bad)
imul
sti
jo
add
fwait
pop
sub
mov
jmp
mov
cli
jo
shl
imul
sub
(bad)
push
out
ins
mov
repz
pop
outs
stos
jp
das
sub
cmp
jl
sub
cmp
or
jo
jl
pusha
fwait
inc
sub
dec
scas
jl
xchg
cli
jns
jle
jo
mov
or
adc
mov
push
sub
leave
out
jns
iret
fstp
pop
mov
dec
pop
jnp
pop
cdq
jbe
jns
mov
sub
test
scas
mov
mov
mov
cwde
cmc
jns
lahf
(bad)
jo
mov
call
xor
jmp
pushf
cmps
loop
mov
mov
loop
mov
xchg
pop
xchg
ret
mov
leave
ins
lahf
shr
xchg
out
mov
adc
jmp
cmp
jmp
jmp
pop
(bad)
loop
xchg
xor
push
xchg
push
jmp
sahf
jmp
jns
push
in
mov
sub
mov
into
int3
(bad)
fist
out
jns
pop
jmp
js
pop
in
jns
loopne
mov
lahf
sub
js
ds
mov
ds
jns
sti
into
imul
jmp
mov
push
dec
sub
xchg
inc
out
mov
sahf
pop
lods
jns
pop
in
lods
mov
push
inc
pop
stos
int3
inc
pop
out
ins
jne
mov
fstp
fninit
stc
inc
ds
pop
sub
xchg
(bad)
push
jns
dec
into
data16
mov
mov
sub
lahf
mov
in
stc
pop
add
stc
pop
xchg
fdivrp
pop
add
sub
lahf
ret
cld
jns
push
jmp
mov
fbld
mov
pop
dec
lods
pop
pushf
fucomp
mov
lahf
shr
mov
call
bound
js
stc
in
cmp
cli
jmp
sti
in
jns
pop
jmp
pop
mov
jecxz
pop
dec
jecxz
pop
dec
ins
push
sahf
adc
jns
xlat
dec
inc
pop
fucomi
sbb
ss
mov
stos
sub
loopne
mov
jmp
mov
in
stc
mov
ins
arpl
push
in
jns
xlat
ja
pop
(bad)
jns
pop
idiv
arpl
jns
add
iret
push
xchg
inc
mov
js
dec
mov
js
inc
push
mov
mov
iret
sub
push
xchg
mov
mov
pop
arpl
dec
pop
out
dec
cwde
jmp
retf
repnz
dec
pop
mov
jns
jnp
imul
in
pop
lahf
pop
int
pop
or
jns
ret
out
mov
sbb
jns
repz
mov
jmp
cmp
sar
mov
(bad)
in
jns
pop
sbb
imul
cs
jno
mov
pop
pop
out
mov
pop
cmp
xchg
das
push
lahf
imul
and
idiv
outs
cmp
mov
fld
retf
out
stc
fsubr
fistp
pop
adc
dec
pop
push
out
jns
fwait
adc
out
cmp
addr16
mov
lahf
das
out
js
jae
mov
lahf
cmp
js
jg
cmp
(bad)
out
js
mov
mov
lahf
shr
js
xchg
out
cmp
fucomip
js
mov
sti
cmp
scas
out
cmp
imul
js
mov
cli
cmp
cmp
xchg
loop
lahf
(bad)
out
js
shr
cmp
out
js
fucomip
cmp
cmps
out
js
jmp
cmp
mov
js
imul
cmp
mov
out
cmp
out
js
pxor
sahf
push
out
cmp
in
push
arpl
sub
lahf
pop
out
mov
arpl
out
mov
sahf
imul
cmp
rcl
bound
loop
lahf
pop
out
js
mov
push
pusha
mov
lahf
sub
mov
gs
adc
lahf
mov
sbb
ins
xchg
sbb
ins
cwde
sbb
ins
pushf
sbb
ins
inc
ins
mov
mov
mov
ins
lea
jo
mov
ins
mov
mov
popa
add
fs
jge
jl
ins
dec
or
nop
sub
sbb
jl
push
mov
nop
dec
mov
arpl
push
or
pop
test
test
push
(bad)
cmp
mov
sbb
ins
movs
push
mov
mov
push
cdq
imul
or
imul
xchg
jge
or
jmp
sbb
ins
or
jbe
sbb
in
add
cmc
mov
loop
adc
jmp
jge
ret
xor
jno
adc
push
lock
fld
push
(bad)
lods
aad
push
nop/reserved
jge
mov
pop
inc
cmps
add
jo
popa
(bad)
adc
popf
inc
inc
push
aam
(bad)
jle
pop
cld
jne
pop
jmp
mov
(bad)
push
sbb
push
push
mov
push
sbb
pop
jl
xor
adc
xchg
adc
mov
sub
mov
fdivr
add
adc
mov
adc
jns
jp
mov
frstpm(287
nop
popa
xchg
in
ss
nop
scas
dec
ret
stos
jo
(bad)
iret
push
and
in
mov
or
mov
sub
add
mov
and
jge
pop
(bad)
or
lods
cmp
pop
(bad)
std
mov
aas
mov
push
inc
arpl
xchg
or
(bad)
push
or
xchg
ret
call
or
mov
push
(bad)
(bad)
xchg
sub
inc
in
in
add
push
aam
xor
mov
cld
push
pop
inc
aas
pusha
test
mov
push
sub
popa
xchg
adc
push
js
mov
xchg
sbb
ins
sub
jo
es
push
push
inc
test
adc
push
pop
pusha
mov
adc
inc
lea
dec
mov
das
test
loopne
ret
sbb
push
push
ins
ret
inc
push
(bad)
or
test
cld
and
scas
sbb
test
push
fld
(bad)
fwait
ins
mov
adc
fadd
sub
loopne
ret
mov
pusha
pop
aad
adc
adc
fdiv
add
adc
mov
jmp
mov
pop
pop
push
sub
pusha
xchg
adc
(bad)
xchg
imul
dec
mov
adc
fst
push
push
cmc
iret
push
sbb
cmp
(bad)
popa
mov
dec
mov
adc
and
mov
loop
ret
adc
dec
add
call
mov
std
dec
xchg
popa
inc
dec
xchg
jecxz
mov
mov
dec
iret
aam
adc
shl
sbb
and
and
or
stos
iret
aam
sub
xchg
arpl
leave
push
loop
mov
jl
push
and
nop
add
(bad)
and
mov
mov
push
mov
bound
iret
xchg
loopne
dec
pop
mov
loop
push
and
or
push
data16
xchg
jecxz
leave
push
out
push
adc
inc
mov
loope
(bad)
push
daa
retf
mov
push
retf
nop
loop
lea
data16
in
xchg
loope
dec
shl
ins
push
adc
jo
xchg
popa
hlt
retf
jnp
xchg
out
dec
adc
or
mov
mov
adc
(bad)
shl
pop
mov
mov
addr16
push
pusha
imul
es
push
cmps
jno
push
and
adc
movs
ins
pop
sbb
push
fiadd
pusha
fwait
jo
inc
call
cmps
cmps
(bad)
or
call
or
ret
je
jb
addr16
in
mov
in
xchg
sbb
add
shl
cmp
call
jp
jb
dec
push
mov
mov
bound
lahf
sbb
iret
lds
or
enter
clc
or
js
mov
lea
test
adc
mov
sub
cdq
xor
mov
sub
(bad)
or
call
mov
or
and
(bad)
add
mov
pusha
movs
mov
fwait
popf
adc
inc
ss
sbb
cli
rcr
inc
mov
add
pop
std
rcr
in
sub
jge
(bad)
sub
inc
mov
out
sub
bound
fld
pushf
fsubr
not
adc
int
scas
sbb
dec
mov
mov
mov
sub
fcmovnu
inc
repz
push
jl
jo
sbb
cmp
bound
(bad)
setge
repnz
jnp
mov
inc
jle
or
mov
jge
pushf
sbb
sbb
loop
jp
test
ins
or
test
sub
mov
loope
je
cmp
sbb
push
xchg
inc
jl
mov
and
sbb
pop
xchg
inc
jl
mov
and
sbb
cwde
in
jl
mov
adc
cli
sub
ds
fs
cmp
lods
(bad)
push
rol
ror
and
lea
loope
je
inc
int3
lds
das
leave
repz
mov
comiss
or
mov
psrlq
es
jne
xchg
push
movs
push
pop
arpl
mov
and
mul
pop
or
fsubr
cmp
xchg
adc
mov
sbb
pop
add
inc
pop
loopne
test
sub
mov
call
adc
stc
jmp
aaa
mov
stc
sub
movs
movs
test
sub
pop
fwait
fs
aas
xor
sub
push
js
push
in
mov
or
push
mov
push
out
dec
push
and
into
shl
dec
shl
push
xchg
mov
icebp
or
pusha
mov
push
daa
mov
or
cmps
ret
cmps
mov
xchg
(bad)
aam
shl
or
bound
mov
es
adc
dec
adc
mov
and
xchg
loop
or
adc
leave
aam
mov
(bad)
mov
lds
xlat
out
or
and
mov
out
or
loop
iret
pop
and
into
push
es
mov
in
shl
push
(bad)
(bad)
out
dec
push
out
mov
out
iret
xchg
mov
or
addr16
dec
adc
mov
nop
cmps
nop
dec
pop
mov
cwde
retf
push
loopne
or
es
push
and
dec
xlat
mov
xor
push
data16
push
mov
mov
retf
or
(bad)
into
xchg
addr16
retf
xchg
loopne
mov
icebp
mov
inc
(bad)
sub
in
jb
iret
inc
push
ror
icebp
sbb
rcl
aad
jle
sub
leave
fdivr
dec
(bad)
in
xor
jb
iret
sub
enter
mov
mov
cmp
add
adc
push
add
pop
inc
cmp
ret
sub
pop
mov
adc
add
mov
inc
mov
mov
ins
enter
data16
sub
push
and
scas
fwait
or
pop
xchg
and
(bad)
fs
arpl
lods
enter
pop
fld
inc
fldcw
mov
and
and
xor
outs
movs
jge
mov
fs
push
xchg
and
dec
cld
or
and
ret
mov
nop
jl
(bad)
ror
xlat
jl
lock
push
pop
ins
dec
(bad)
aad
pop
js
mov
xor
hlt
cmp
and
ret
mov
pushf
or
mov
pushf
mov
dec
mov
jbe
mov
mov
jecxz
pushf
cmp
std
or
add
xchg
cwde
pushf
adc
arpl
idiv
sbb
cmp
mov
in
push
and
(bad)
ret
test
out
inc
jmp
fs
call
test
mov
inc
push
pop
outs
inc
jmp
mov
or
push
outs
jmp
and
pop
mov
data16
jp
adc
mov
mov
or
dec
pop
hlt
lahf
stos
cmp
jbe
dec
sti
jnp
lds
mov
es
test
sbb
ss
add
xchg
jg
nop
test
test
inc
jle
pop
test
and
mov
push
pop
mov
es
push
das
mov
es
fst
jmp
dec
mov
test
sti
sbb
retf
and
test
pop
add
cmp
test
icebp
mov
xchg
inc
cmp
scas
int
push
push
rcl
mov
push
sahf
sti
sbb
mov
adc
push
dec
adc
sbb
ja
std
(bad)
ds
dec
pop
push
rol
add
daa
(bad)
ret
push
out
adc
mov
add
cmps
jmp
adc
add
pusha
mov
shl
adc
inc
shl
rol
out
xchg
cmps
mov
es
push
and
inc
push
data16
inc
adc
popf
add
mov
and
push
and
xchg
das
rcl
(bad)
aam
xor
push
in
add
xchg
mov
inc
add
loope
inc
shl
xchg
add
xlat
and
rcl
movs
add
adc
push
xchg
loopne
ret
repz
adc
jp
xchg
mov
add
push
and
nop
and
inc
xchg
arpl
inc
shl
inc
push
es
add
mov
movs
add
and
shl
sub
(bad)
addr16
shl
inc
adc
inc
shl
cmp
and
add
cmps
iret
(bad)
nop
es
adc
push
add
loope
xchg
mov
pop
inc
push
out
rcl
pusha
inc
push
and
shl
lods
inc
push
fs
inc
nop
pusha
cmc
add
and
add
push
rol
push
rol
pop
rol
pop
rol
inc
rcr
leave
dec
and
or
arpl
rol
neg
movs
dec
cli
jge
push
mov
xchg
xchg
ins
lea
cmp
pushf
lods
cmc
inc
dec
fidiv
jb
nop
std
out
sbb
scas
or
lods
bound
and
or
mov
stos
mov
add
sbb
aam
lahf
adc
push
lods
mov
pop
test
add
jmp
rcr
lds
sub
add
push
pop
mov
xchg
loopne
in
xchg
clc
outs
(bad)
rol
mov
jmp
es
add
test
repz
adc
dec
cmps
jecxz
mov
and
xor
adc
inc
std
loopne
rol
enter
repnz
sub
add
(bad)
mov
inc
adc
push
inc
or
imul
mov
dec
inc
adc
(bad)
cs
inc
mov
mov
clc
stc
sbb
ret
lahf
push
inc
test
jge
cdq
jb
lea
ss
cld
clc
mov
imul
mov
lea
mov
mov
xor
loop
jp
and
sub
(bad)
(bad)
and
lea
xor
popa
ficomp
out
sbb
test
jle
cmp
cmp
stos
int3
add
sbb
push
sbb
xlat
cmp
mov
sbb
lods
inc
movs
pop
test
arpl
sahf
or
popa
push
popa
pushf
xchg
inc
cmp
retf
add
aad
and
cmp
and
test
mov
dec
arpl
xchg
and
adc
aam
jo
shl
xacquire
daa
jle
xchg
mov
add
mov
pop
push
pop
shl
rcl
(bad)
xchg
and
inc
pop
mov
es
shl
lods
add
addr16
shl
mov
(bad)
shl
test
pop
jecxz
lds
and
test
xchg
ret
xlat
loope
add
mov
pop
adc
push
fs
shl
inc
shl
ins
add
push
jecxz
(bad)
push
daa
cmp
loopne
adc
inc
rcl
(bad)
(bad)
and
xlat
push
lds
loop
inc
shl
mov
inc
push
outs
push
xchg
stos
inc
adc
je
(bad)
cmps
mov
xchg
mov
inc
inc
shl
dec
inc
shl
int3
rcl
push
push
nop
arpl
inc
xchg
es
add
movs
adc
xchg
sub
xchg
cmps
mov
push
out
idiv
dec
sbb
inc
aam
push
dec
adc
cdq
push
aam
xchg
fs
inc
mov
adc
mov
ss
jle
xor
call
mov
add
inc
aad
retf
paddusw
stos
or
push
fnstenv
scas
pusha
stos
js
adc
push
leave
fwait
mov
jp
xchg
xor
adc
imul
cwde
lds
addr16
in
pop
fadd
call
stc
xor
jp
jb
sub
rcr
push
arpl
xor
hlt
xchg
popf
adc
cmp
dec
xchg
mov
sub
loop
js
out
ret
int3
rcr
stc
pop
jb
sub
xor
lods
ins
jb
push
ficomp
lods
or
mov
mov
lea
jge
cli
stc
movs
dec
fld
dec
cmp
sbb
mov
cmc
adc
adc
bound
js
jns
movs
in
movs
jnp
push
push
jg
xchg
sub
dec
xlat
cmp
jge
mov
lea
in
inc
mov
sub
int
pop
inc
add
test
sub
cmp
cmp
(bad)
dec
mov
das
ror
aaa
mov
or
inc
pushf
in
rcr
in
mov
pop
jne
pop
lahf
ja
out
mov
sbb
xor
inc
cwde
cld
jne
cdq
cld
or
fwait
push
add
pushw
mov
mov
xor
pop
pop
jne
pop
pop
mov
imul
test
sahf
mov
sbb
pop
cmp
cmc
cwde
fcomp
jne
pop
fidiv
ins
pop
pop
ja
test
pop
jne
ret
ins
pop
add
pop
dec
push
popf
push
fimul
xchg
iret
cmc
pop
cwde
jle
or
mov
mov
and
jle
(bad)
xor
into
fidiv
cmp
retf
das
jle
push
je
enter
xchg
inc
sbb
push
pop
pop
cmp
adc
(bad)
shl
int3
cmp
adc
call
(bad)
rol
push
sbb
std
sbb
(bad)
fisub
pop
in
xor
mov
out
(bad)
repnz
fidiv
pushf
adc
sar
jne
or
xchg
pop
(bad)
and
sbb
add
adc
and
dec
push
mov
sar
push
cmps
jbe
xchg
dec
sahf
push
fild
std
(bad)
out
mov
dec
(bad)
aam
in
add
arpl
add
jecxz
adc
aaa
ret
shl
clc
inc
adc
jge
adc
add
mov
into
jns
es
mov
shl
cmp
addr16
mov
xchg
out
cmp
and
cmp
and
jns
es
mov
push
fs
adc
push
mov
pop
movs
dec
sti
push
in
aas
adc
adc
mov
xlat
daa
and
push
loopne
mov
xchg
and
mov
pop
arpl
adc
mov
cmp
inc
jnp
and
adc
dec
jge
jecxz
cmp
daa
(bad)
mov
push
addr16
sti
push
and
cmp
mov
repz
xchg
jecxz
jnp
movs
jnp
push
and
movs
add
adc
cmp
shl
cli
xchg
mov
adc
shl
sahf
cld
adc
mov
cmp
arpl
(bad)
cmps
idiv
fs
push
out
cmp
inc
sub
sub
push
cmp
inc
cmp
call
jp
cmp
scas
push
out
push
loop
rcl
mov
mov
rol
jle
aam
jl
cmp
push
repnz
dec
mov
icebp
push
add
pushf
cli
aam
or
in
xchg
mov
dec
cwde
or
cmps
push
cmp
or
xchg
inc
mov
fiadd
jb
push
sub
std
pop
jl
lods
xchg
pusha
xchg
call
mov
gs
push
jmp
xchg
sub
sub
jns
mov
mov
jb
mov
movs
pop
or
in
lea
inc
cdq
or
rol
and
bound
test
adc
clc
lods
and
std
pushf
rcl
cld
int
or
(bad)
pop
jb
pop
js
fcomp
ret
or
push
rol
dec
or
add
imul
popf
stos
retf
adc
sub
push
mov
in
mov
mov
xor
fcom
lea
in
das
adc
ret
xchg
sbb
mov
mov
inc
or
arpl
bnd
fsub
rcr
inc
test
test
repz
clc
jle
xchg
cld
pop
clc
adc
ret
fsubr
xchg
or
ds
push
std
cmp
xchg
adc
sbb
scas
push
(bad)
dec
sbb
out
sbb
(bad)
pop
pop
pop
or
dec
xchg
pop
sbb
add
pop
lahf
mov
mov
ror
pop
mov
fbstp
daa
pop
aas
dec
sbb
inc
fisubr
dec
sbb
push
sbb
dec
(bad)
cmps
dec
pop
pop
push
retf
lahf
sub
lahf
adc
sbb
mov
pop
or
loopne
dec
sbb
ret
cmps
addr16
xchg
cli
dec
cwde
pop
jg
sbb
mov
mov
xor
pop
out
mov
popa
es
fcomp
mov
pop
xchg
inc
fdivr
dec
cwde
fistp
jnp
fisttp
cmps
or
add
ins
xchg
sbb
retf
cwde
pop
mov
or
pop
stos
dec
sbb
imul
mov
dec
sbb
pop
mov
pop
fisttp
sbb
jno
lahf
mov
sbb
jp
push
(bad)
dec
pop
pop
fwait
xor
pop
pop
repz
sbb
or
push
jmp
push
cmp
dec
sbb
jae
lahf
cmps
inc
fcomp
mov
pop
mov
mov
sti
je
fild
jnp
pop
add
fild
sub
dec
test
xor
fsubr
mov
scas
(bad)
pop
add
push
daa
dec
pop
pop
cmp
pop
pop
push
retf
sbb
retf
fstp
dec
push
mov
inc
dec
cwde
dec
xchg
or
jg
sbb
icebp
fcomp
push
add
outs
dec
sbb
retf
pop
lahf
pop
retf
fdivr
movs
ins
pop
mov
xchg
dec
pop
pop
xor
out
ins
add
lahf
add
outs
(bad)
pop
mov
jae
loopne
dec
sbb
xchg
dec
cwde
pop
dec
dec
call
jae
pop
cmp
pop
iret
or
lahf
xchg
or
dec
pop
sub
lahf
retf
lea
pop
iret
dec
sbb
dec
cdq
sbb
les
pop
neg
lahf
xor
xor
pop
push
sbb
outs
mov
sub
addr16
sbb
fwait
shr
pop
scas
sbb
rcr
pop
push
or
(bad)
mov
dec
dec
pop
popa
add
(bad)
outs
sub
jp
cmp
aas
dec
sbb
dec
sbb
jmp
pop
pusha
scas
dec
pop
pop
mov
mov
imul
outs
pop
dec
sbb
inc
cmp
push
dec
sbb
dec
sbb
repz
outs
pop
pusha
(bad)
dec
pop
pop
mov
or
pop
xor
dec
mov
es
imul
pop
jg
sbb
adc
pop
pushf
int
sbb
test
pop
fisttp
pop
pop
(bad)
int
pop
mov
pop
jg
or
(bad)
sbb
movs
or
into
dec
jmp
sbb
(bad)
jl
push
mov
xlat
push
lahf
retf
jnp
pop
sbb
ja
sbb
fimul
mov
pop
sti
mov
in
sub
rcr
lds
cs
mov
cwde
rcr
pop
ror
gs
fild
mov
pop
xor
pop
push
dec
add
sbb
sub
jns
lds
loop
pop
(bad)
pop
pop
add
fistp
gs
mov
pop
addr16
add
dec
or
cmp
push
int
pop
test
dec
js
pop
lea
inc
pop
push
dec
pop
sbb
pop
in
clc
movs
cmp
pop
test
rcl
inc
lahf
adc
lds
add
popf
jbe
jp
pop
xor
leave
push
fwait
xchg
pop
add
push
les
iret
ins
push
dec
cmp
rcr
dec
iret
popf
scas
push
jp
jae
adc
xlat
xor
add
bound
cs
push
mov
sbb
icebp
sbb
pop
push
xchg
clc
movs
mov
pop
popa
enter
sub
jg
lahf
ss
adc
or
out
xchg
pusha
jl
mov
adc
push
push
jl
ins
dec
push
push
(bad)
cs
add
jl
mov
call
sbb
lea
cld
shl
and
xlat
out
stc
shl
jmp
adc
mov
xchg
and
push
(bad)
(bad)
jle
mov
inc
sti
xchg
daa
inc
jle
out
jle
and
(bad)
data16
push
popa
adc
and
stc
adc
and
and
cmp
pop
mov
mov
xlat
bound
cmp
xchg
cmps
retf
jnp
in
jle
loop
cmp
and
mov
push
pusha
bound
adc
std
xchg
and
xchg
popa
mov
xchg
mov
mov
std
push
mov
xchg
adc
or
xlat
and
xchg
adc
xchg
and
std
xchg
mov
and
shl
movs
mov
pop
es
jl
mov
(bad)
jle
movs
cld
jl
mov
ret
mov
dec
ds
addr16
jnp
addr16
jp
and
mov
aam
out
shl
test
cli
pop
cmps
repz
xchg
es
cmp
nop
mov
mov
pusha
push
mov
shl
jge
mov
rcl
inc
mov
scas
mov
jecxz
and
fsubr
inc
mov
scas
bound
leave
fisttp
mov
jge
xor
rcl
ret
xor
inc
mov
inc
bnd
mov
inc
mov
sub
dec
outs
jno
ins
adc
cmp
inc
cmp
adc
dec
mov
and
clc
test
pop
in
movs
test
jl
mov
add
adc
xchg
pop
push
je
adc
enter
cwde
es
inc
xor
pushf
fcmovnb
lock
push
jge
push
mov
test
lods
adc
mov
adc
push
out
jl
(bad)
sbb
add
adc
dec
iret
retf
pop
js
cdq
les
arpl
(bad)
rcr
pop
outs
ins
mov
mov
mov
cmp
sub
loope
fsub
push
mov
fadd
pushf
adc
or
pusha
lods
shl
mov
jge
or
jge
jbe
lods
lea
(bad)
(bad)
enter
rcl
and
shr
sub
lea
loop
cmp
ror
push
or
test
rcr
sub
sar
sub
shr
stos
ret
sbb
loop
in
push
sub
(bad)
rol
mov
pop
cmp
cmp
sub
ret
lea
lods
shr
ffreep
sbb
jnp
loop
mov
adc
inc
repnz
in
adc
jmp
inc
repnz
in
adc
jmp
mov
(bad)
in
xchg
fucomi
aas
adc
push
push
into
fsubrp
push
rcr
pop
adc
sub
pushf
popa
(bad)
pop
sub
adc
sbb
sahf
daa
loope
mov
sub
dec
out
pop
adc
ror
sub
sub
mov
adc
jne
ror
jmp
in
xor
pusha
call
sbb
rcr
sub
or
sub
xor
call
lods
jle
xor
push
lds
ja
cmp
push
mov
rcr
adc
mov
int
es
fadd
jno
pop
push
xchg
ror
or
sub
xor
call
jmp
push
lds
xor
fdivr
jo
push
out
xor
rcr
or
dec
retf
cmp
adc
imul
fdivr
jmp
jmp
nop
pop
jmp
dec
mov
jo
pop
es
or
sub
ins
mov
in
ret
dec
xchg
cmp
call
in
mov
cmp
dec
and
ret
stos
inc
cmp
cmp
ror
and
sub
(bad)
or
mov
pushf
in
mov
xchg
cmp
das
int3
cmp
adc
imul
adc
jae
pusha
cwde
jg
sub
jmp
ret
cmp
int3
fucomip
inc
shl
xor
lahf
or
xchg
xor
(bad)
popa
scas
jl
(bad)
lea
rcr
sub
and
out
ins
or
mov
imul
pushf
xchg
call
sbb
jle
inc
lock
out
jmp
add
push
jecxz
call
and
fmul
adc
inc
cmp
cmp
nop
sbb
scas
lock
jmp
xor
jno
loopne
cmp
mov
pop
xchg
pop
or
mov
hlt
cmp
sbb
pop
adc
and
rcl
(bad)
jmp
nop
push
(bad)
enter
fild
mov
ja
pushf
leave
xor
sub
(bad)
imul
sahf
fsubr
xor
outs
sub
push
data16
fdivr
mov
ds
jmp
or
cmps
and
(bad)
adc
jle
inc
les
and
retf
sahf
sub
xchg
ds
push
ins
fnstsw
xchg
ds
pop
jbe
mov
not
fld
retf
aam
(bad)
fsubr
mov
(bad)
sbb
(bad)
in
mov
cmp
(bad)
fcomp
aam
jecxz
fidivr
(bad)
retf
cmp
xchg
pop
out
in
not
loopne
xor
es
mov
mov
push
jno
bound
push
loopne
xor
and
je
loopne
icebp
pop
pusha
loopne
adc
sub
xchg
cmps
repz
daa
mov
push
cmp
es
xor
les
dec
lock
arpl
mov
and
je
mov
pop
xor
cmps
cmc
push
jecxz
aaa
push
and
cmc
nop
out
mov
cmps
mov
adc
mov
push
and
aam
aas
mov
and
xor
xchg
mov
mov
shl
not
fwait
jne
mov
jecxz
push
data16
not
imul
jne
cmps
jno
push
fs
pop
cmp
push
and
cmc
xlat
and
xchg
jecxz
jne
pusha
(bad)
xor
loopne
ja
cmps
xchg
icebp
aam
fidiv
push
cmps
pusha
mov
jecxz
mov
arpl
shl
out
ss
mov
mov
push
movs
mov
xor
daa
xor
sub
push
test
in
xchg
mov
and
mov
in
enter
fcomp
pop
cmc
inc
mov
jp
out
mov
push
mov
mov
std
mov
cmp
add
in
pop
inc
sub
add
jl
lods
lea
jge
fdivr
js
mul
inc
dec
inc
ds
xchg
push
jp
xlat
lods
rcr
std
and
and
or
loope
shl
dec
mov
cwde
in
rol
add
lods
adc
inc
addr16
xchg
ss
ins
jb
mov
int3
iret
gs
xchg
add
test
lods
loopne
pop
ins
mov
jb
xor
xor
or
jbe
ins
std
add
test
out
cmp
adc
mov
cwde
xchg
les
mov
movs
int3
push
leave
jnp
repz
scas
jo
push
mov
xchg
jb
ret
cmp
pop
sbb
dec
mov
sbb
or
push
(bad)
xchg
int
xchg
popf
dec
push
sub
jl
jl
sti
sbb
mov
mov
sti
data16
rol
mov
or
xchg
(bad)
into
inc
fwait
adc
push
pop
in
mov
repz
test
mov
pushf
rcr
int3
or
ins
lock
jb
xor
and
and
xor
dec
or
aad
lea
dec
pop
or
in
lods
loop
arpl
ror
out
mov
push
push
mov
push
loope
mov
loopne
mov
addr16
ja
and
push
and
mov
and
mov
arpl
cmc
push
jecxz
mov
and
not
es
cmc
xchg
mov
ret
not
daa
into
xor
loopne
not
out
xor
xlat
popa
sbb
push
fdiv
mov
mov
cmps
stos
repz
loope
jae
and
mov
arpl
xor
loop
xor
loopne
jne
mov
dec
not
push
ss
and
ja
and
jbe
es
push
cmps
not
shl
out
lock
jecxz
mov
cmps
je
push
addr16
shl
not
mov
ret
stos
adc
retf
push
adc
shr
xchg
and
ins
shl
sbb
adc
stos
xchg
cmps
lods
adc
sub
and
das
(bad)
and
sub
jecxz
push
data16
test
aam
push
lods
shl
or
and
in
push
in
scas
aam
fwait
in
adc
pop
in
shl
stos
adc
test
stos
xchg
mov
mov
xchg
out
imul
ins
adc
ret
sub
mov
adc
mov
arpl
stc
ret
div
inc
xchg
jo
int3
or
and
pop
add
mov
xchg
jl
mov
inc
mov
out
je
cmp
je
xchg
pushf
lock
mov
jbe
call
lods
sbb
push
je
or
push
lods
lea
leave
cld
mov
push
lahf
pushf
outs
cmp
pop
std
pop
(bad)
stc
add
mov
adc
push
cmp
jp
inc
cmps
jmp
lods
sti
pop
test
inc
xor
push
cmp
mov
xor
addr16
xchg
fwait
ds
ret
push
mov
pop
add
div
rol
push
mov
rcr
push
bound
jle
bound
jl
mov
sahf
adc
sub
pop
jmp
lahf
scas
cwde
mov
mov
mov
scas
(bad)
cwde
inc
in
mov
pop
jns
mov
cmp
pushf
js
dec
das
jo
cmp
dec
lods
mov
std
and
dec
push
mov
cmp
lock
test
inc
pop
cmp
fstp
bound
or
mov
setp
xor
mov
adc
pop
cmp
lea
mov
shl
push
sbb
pop
inc
fstp
(bad)
jmp
and
mov
jle
xchg
dec
add
mov
jae
mov
stos
mov
ficom
rcr
sbb
push
adc
fistp
jbe
mov
popf
clc
clc
add
cmovb
jb
(bad)
imul
push
xchg
mov
or
push
jecxz
outs
push
and
push
xchg
out
jmp
and
outs
push
and
scas
adc
jmp
adc
sub
push
arpl
scas
push
and
push
cmps
clc
sub
cli
test
mov
add
sub
pusha
mov
shl
xchg
outs
shl
scas
shl
sbb
pusha
loopne
nop
loopne
scas
push
movs
scas
stos
pop
outs
scas
shl
imul
in
das
push
cmps
sti
stos
push
daa
mov
jmp
push
out
sub
int3
lods
aam
push
test
push
cs
daa
cwde
stos
shl
cwde
test
adc
in
xchg
out
das
xchg
mov
imul
push
cmps
cli
outs
xchg
loope
in
push
pusha
sub
fs
pusha
or
push
fs
stos
adc
(bad)
jmp
shl
and
fs
push
jecxz
sub
addr16
outs
push
daa
mov
push
out
adc
cld
sub
fs
imul
cmp
mov
cmp
or
inc
shl
push
pop
cmp
aam
cs
and
sbb
push
in
or
adc
add
push
ror
ret
or
pusha
int3
and
inc
ins
pop
inc
sar
cmps
jp
sbb
hlt
mov
imul
cmp
mov
or
jp
pop
outs
push
cmp
pop
add
lods
lea
cli
add
pushf
outs
repnz
push
xchg
add
adc
cmp
cdq
daa
cmp
stos
rol
sbb
rcr
pop
xchg
sbb
cmp
inc
enter
push
push
leave
pushf
jp
lods
stos
adc
ret
popf
mov
xor
xor
ret
add
sbb
mov
ret
xor
lea
add
lock
push
cld
ficom
mov
dec
jae
push
(bad)
mov
lahf
(bad)
dec
(bad)
sub
cwde
cmp
imul
popf
clc
lods
fcom
mov
pop
repnz
icebp
xchg
xchg
or
add
and
push
stos
lea
shl
xchg
jmp
fdivr
inc
xor
imul
cmp
scas
test
mov
add
stos
jno
fwait
cdq
bound
inc
call
pop
test
rcl
mov
xor
retf
out
pushf
(bad)
addr16
outs
test
imul
cmp
cmps
pop
cmp
inc
push
cmp
std
sub
leave
cmp
xchg
push
ss
add
xchg
leave
fstp
xlat
pop
call
enter
(bad)
ins
xor
cmp
push
ja
xchg
cmp
or
adc
push
rcr
jns
js
push
push
sbb
cmp
xchg
sub
cmp
ja
xchg
outs
test
xchg
addr16
das
shl
inc
sub
pop
scas
sar
cmps
jno
xchg
scas
bound
sub
push
sbb
cmp
xchg
outs
cmp
mov
std
ja
xchg
scas
test
xchg
cmps
(bad)
sbb
and
not
data16
aas
sbb
cmp
nop
mov
jb
ins
leave
ja
xchg
xchg
test
mov
mov
out
icebp
cmp
push
daa
add
xchg
leave
mov
ja
rol
data16
cwde
pusha
xor
xchg
dec
jg
lods
ss
sub
int
cmp
fidiv
not
mov
jp
mov
mov
(bad)
jl
xchg
enter
adc
es
mov
inc
stos
jno
cdq
cdq
pusha
xchg
mov
fld
add
ins
mov
lahf
mov
pop
hlt
leave
push
test
xchg
mov
leave
or
mov
lahf
mov
jl
xchg
enter
not
inc
arpl
xchg
stos
jg
jl
shl
rsqrtps
jl
xchg
es
ins
push
mov
dec
sub
mov
adc
xchg
data16
(bad)
loope
jmp
mov
ins
pop
loope
sub
push
out
push
and
jmp
shl
ret
mov
int3
jmp
shr
shl
fsubr
(bad)
and
adc
out
nop
es
in
xchg
loopne
out
adc
mov
push
cmps
mov
adc
vunpcklps
lods
shl
push
scas
shl
cdq
imul
call
popa
and
imul
shl
lods
adc
clc
ins
adc
mov
sub
push
out
ins
xlat
jecxz
das
xchg
(bad)
(bad)
outs
push
cmps
push
out
pop
loopne
das
nop
pusha
fisubr
out
sub
fs
xchg
cmps
imul
nop
bound
sub
jns
shl
inc
sub
mov
retf
ins
push
mov
xchg
call
shl
fisubr
push
and
push
jecxz
stos
xlat
and
out
push
pusha
outs
out
push
mov
repz
shl
hlt
jmp
and
mov
inc
jb
inc
(bad)
inc
jb
inc
ret
jb
test
pusha
pop
out
pop
and
outs
push
movs
mov
lods
xchg
mov
jmp
(bad)
stos
xchg
out
in
adc
loop
bound
adc
shl
mov
nop
popa
push
out
es
mov
push
arpl
mov
(bad)
mov
in
and
loop
in
cmps
mov
mov
xchg
pusha
(bad)
arpl
mov
pusha
pop
mov
xchg
daa
pop
in
es
shl
and
imul
loope
adc
xor
data16
in
mov
shl
loop
addr16
or
adc
dec
mov
adc
push
in
loope
and
and
mov
nop
mov
out
and
movs
xor
xchg
mov
mov
mov
xchg
cmps
push
mov
xchg
bound
mov
jb
sar
in
fneni(8087
add
jge
call
pop
les
xor
cli
mov
lods
loop
(bad)
dec
mov
cmp
cld
dec
ins
lock
fscale
pop
push
mov
add
fidiv
push
pop
cld
std
xchg
in
pushf
call
sar
jl
js
and
ror
cmp
push
jp
fsub
js
inc
lock
and
xlat
push
jl
inc
xor
loopne
mov
xor
loop
stc
stos
add
push
(bad)
inc
mov
pusha
jp
lea
imul
add
fwait
mov
dec
sub
xor
fistp
mov
leave
mov
or
idiv
icebp
lock
sub
ins
mov
loope
das
xchg
fwait
test
mov
lea
mov
out
sahf
adc
retf
xor
adc
(bad)
xchg
fsubr
mov
xor
or
mov
enter
ror
mov
add
mov
mov
or
or
mov
or
enter
int
push
xlat
leave
fnstsw
inc
pop
xor
ficomp
mov
mov
iret
sub
in
mov
pop
iret
mov
(bad)
ds
inc
jmp
xchg
ds
(bad)
ds
fidivr
sbb
fidivr
sbb
ret
xchg
ds
retf
pop
leave
ds
xor
sbb
ss
cmp
sbb
ds
and
sbb
es
sub
sbb
cs
adc
sbb
push
ds
sbb
sbb
push
ds
add
sbb
push
ds
or
sbb
push
ds
jb
sbb
jbe
sbb
jp
sbb
jle
sbb
bound
sbb
data16
push
sbb
outs
ds
push
ds
push
ds
pop
ds
pop
ds
inc
ds
inc
ds
dec
ds
dec
ds
mov
sbb
mov
sbb
mov
aas
sbb
mov
aas
sbb
stos
aas
sbb
scas
aas
sbb
xchg
aas
sbb
xchg
aas
sbb
call
xchg
aas
sbb
adc
push
sahf
jmp
xchg
mov
pop
in
sbb
mov
xchg
sub
add
and
mov
gs
pushf
(bad)
and
mov
fs
ffreep
xchg
dec
and
pushf
sub
sahf
mov
mov
fstp
and
mov
sbb
sub
sbb
cs
sbb
adc
sbb
push
aas
sbb
sbb
sbb
push
aas
sbb
add
sbb
push
aas
sbb
or
sbb
push
aas
sbb
jae
sbb
jbe
sbb
jnp
sbb
jle
sbb
arpl
sbb
data16
sbb
push
sbb
sar
sbb
ror
xor
push
aas
pushf
popf
ret
inc
pop
aas
(bad)
mov
cmp
inc
aas
fsub
dec
aas
pushf
pusha
int
add
mov
pushf
popf
push
cmp
lods
add
cmps
cmp
mov
sbb
cmp
pop
xchg
cmp
mov
pushf
cmp
test
pushf
sbb
int
inc
mov
pushf
dec
fimul
sbb
cmp
std
cmp
in
sbb
lds
pushf
inc
or
adc
sar
sbb
push
aaa
and
fidivr
sbb
mov
sub
push
(bad)
cmp
retf
dec
dec
push
ds
xor
sbb
adc
inc
cmp
sbb
out
jmp
arpl
add
sub
pop
imul
xor
cmp
sbb
pushf
loope
cwde
sbb
add
pushf
sub
push
xor
xlat
push
es
jno
pushf
cdq
hlt
fwait
add
jb
and
popa
cmp
cs
adc
cmp
pop
cmp
mov
add
push
cmp
xchg
pop
pop
aaa
std
cmp
jmp
cdq
mov
cmp
mov
pop
in
dec
or
scas
cmp
cmp
cmp
jno
nop
cmp
mov
pushf
out
out
(bad)
mov
sbb
movs
adc
xchg
cmp
pop
in
(bad)
cmc
cmp
dec
cmp
in
cmp
fcomp
pop
in
fsub
sub
cmp
cdq
test
ja
mov
pop
sub
fwait
or
ret
push
mov
and
cmp
sbb
xchg
push
vmptrld
cmp
mov
pop
and
cmp
and
pop
pop
in
jns
xchg
cmp
stos
sbb
adc
pushf
leave
push
cmp
add
sbb
repnz
pop
inc
jns
pushf
movs
fs
adc
stc
fstp
xchg
sbb
movs
lock
(bad)
popa
cmp
sbb
daa
mov
add
shl
dec
xor
adc
cmp
sti
cmp
cmps
cmp
scas
cmp
pop
xchg
xor
mov
pushf
add
cmova
jecxz
pop
test
pushf
test
fdiv
pop
mov
fdiv
xchg
xor
inc
xchg
cmp
push
add
pushf
cmp
or
xchg
cmp
and
pop
loop
sbb
cmc
cmp
std
cmp
ret
rcr
sbb
retf
cmp
cdq
and
cmp
mov
pop
fstp
pop
mov
retf
and
pop
into
xchg
mov
sbb
xor
ss
xor
sbb
mov
cmp
paddq
pop
add
pop
idiv
cmp
repz
(bad)
adc
sbb
pop
mov
inc
sbb
pop
sub
pop
popa
cmp
mov
or
imul
sub
jge
sub
jbe
sbb
xchg
fimul
pop
dec
cmp
fimul
cmp
pop
cmp
push
cmp
mov
push
or
push
xor
cmps
cmp
loop
or
cmp
outs
pop
jb
inc
mov
sbb
pusha
loope
inc
mov
pop
jecxz
int3
sysret
test
pop
push
jmp
cmp
ss
add
xchg
cmp
sub
and
in
cmp
jge
inc
in
pop
sbb
add
std
cmp
add
pushf
test
sbb
cmp
ret
or
adc
pop
fidivr
fsubr
aas
or
cmp
xchg
scas
shr
inc
sub
pushf
retf
fsubp
sbb
and
pushf
aas
pop
call
fild
sbb
retf
jns
inc
or
pushf
cli
xchg
push
xor
add
pushf
pop
movs
push
sbb
sbb
fmul
or
adc
fmul
imul
xor
cmp
lods
jo
xchg
fdiv
sbb
xchg
fadd
jbe
fsubr
push
aam
xchg
fcom
bound
cmp
cmp
jl
in
inc
outs
cmp
aaa
sbb
sti
mov
sbb
lahf
(bad)
fcom
xchg
fsubr
xchg
xor
test
add
mov
fdivr
mov
(bad)
fcom
lock
pop
movs
(bad)
fsubr
pop
or
lods
les
aad
pushf
enter
pop
ffree
pushf
cmp
(bad)
dec
add
sbb
mov
les
cli
les
loop
pushf
pop
dec
out
pop
jmp
pushf
cmps
pop
jmp
inc
adc
(bad)
add
xor
sbb
fsub
mov
cmp
les
or
pushf
cmps
pusha
mov
inc
xor
pushf
(bad)
sbb
cmp
fcom
icebp
loope
xchg
les
sbb
(bad)
sub
sbb
push
push
xchg
pushf
out
or
(bad)
pop
les
inc
les
inc
les
jle
pop
imul
ja
in
sub
(bad)
fcomp
lds
pop
les
popf
test
aas
sub
inc
xchg
vmovups
sbb
pop
fsubr
cmp
test
sbb
aaa
fwait
and
imul
or
lds
jo
call
fmul
ffree
sbb
adc
pop
add
sbb
outs
mov
sbb
mov
lds
mov
inc
repnz
cld
mov
fdivr
sbb
pop
mov
(bad)
rcl
xchg
(bad)
(bad)
jmp
(bad)
or
fmul
mov
pop
add
fdiv
cmp
sbb
dec
unpckhps
add
and
sub
pop
addr16
adc
pushf
mov
pop
(bad)
push
(bad)
pop
xchg
fdivr
dec
lds
pop
lds
data16
shl
fcom
enter
jbe
pushf
jne
inc
xor
jg
pushf
movs
sbb
pushf
jmp
pushf
push
inc
lea
xchg
movs
adc
mov
movs
(bad)
fsub
lods
leave
and
(bad)
pop
sub
in
pop
mov
pop
push
retf
(bad)
mov
stos
ja
fistp
es
int
pop
adc
or
inc
aad
sbb
fs
sbb
xor
push
inc
loop
pushf
icebp
or
fcomp
lods
pop
adc
(bad)
fadd
mov
pop
sti
(bad)
pushf
xchg
nop
jns
inc
add
pushf
iret
stos
cmp
xchg
(bad)
fdiv
fistp
sbb
adc
pop
sbb
sbb
xlat
add
(bad)
and
fmul
mov
xchg
(bad)
fdiv
mov
(bad)
fmul
jmp
pop
xchg
jg
sub
inc
(bad)
pop
out
jne
adc
dec
(bad)
pop
cmp
push
(bad)
pop
inc
lock
xchg
sbb
adc
push
(bad)
outs
(bad)
fdivr
cmp
pop
data16
pop
xor
mov
(bad)
jle
pop
pop
or
(bad)
pop
mov
pop
sbb
and
adc
mov
and
pushf
(bad)
pop
icebp
xchg
ss
xchg
(bad)
pushf
sub
ja
pop
lods
(bad)
pushf
pop
jl
sub
(bad)
pushf
movs
jmp
or
(bad)
pushf
aam
lods
or
sbb
sub
int
pop
dec
adc
ds
(bad)
fadd
fcmovb
pushf
repz
(bad)
pop
adc
(bad)
sbb
fisubr
mov
adc
sti
(bad)
pushf
ret
sbb
repz
pushf
adc
mov
or
pushf
popa
cmps
and
add
pushf
pushf
fidiv
sbb
xchg
sbb
add
adc
sub
fadd
and
(bad)
cmp
fdiv
data16
push
pop
xor
fmul
mov
inc
aaa
(bad)
fmul
aas
(bad)
fdiv
dec
xor
(bad)
daa
(bad)
pushf
pop
pop
sbb
pushf
(bad)
shl
inc
adc
sbb
adc
(bad)
pop
into
jnp
sub
add
pushf
and
movs
sbb
(bad)
pushf
pop
test
rcr
ss
rcr
rcr
rcr
rcr
rcr
and
aaa
dec
xor
xchg
rcr
sbb
(bad)
mov
fdiv
mov
in
pop
mov
mov
mov
rcr
rcr
rcr
fsubr
mov
pop
imul
fsubr
jns
fsub
jo
aaa
pop
popa
rcr
mov
rcr
enter
rcr
in
(bad)
push
rcr
pusha
or
pavgb
inc
inc
rcr
rcr
adc
(bad)
aaa
rcr
jg
(bad)
das
rcr
rcr
sbb
xor
adc
cmp
adc
pop
sbb
push
xchg
pop
data16
sbb
jle
and
std
rcr
enter
rcr
xor
rcr
rcr
rcr
xor
adc
(bad)
retf
js
pop
cmp
stos
lods
pop
push
xchg
jne
(bad)
mov
pushf
push
jmp
push
mov
and
cwde
rcr
in
sub
nop
rcr
iret
lock
jge
cmps
or
add
cmp
and
push
xchg
pushf
dec
sbb
pop
cli
fs
aaa
(bad)
jle
fcomp
or
fsub
cmp
dec
rcr
add
push
rcr
add
pop
pop
rcr
push
(bad)
daa
rcr
dec
sbb
pop
sub
sbb
call
jmp
fcom
jnp
push
pop
add
pop
gs
scas
xchg
sbb
adc
inc
xor
rcr
cs
ret
aaa
xor
(bad)
jmp
pop
bnd
sahf
cmp
inc
cli
ret
ins
lds
inc
ret
jne
xor
(bad)
retf
ret
mov
ret
mov
ret
call
mov
test
fsubr
sub
pushf
outs
sub
imul
inc
add
xor
mov
sbb
xchg
pop
ds
inc
cdq
ret
enter
outs
ret
fisub
add
ret
xchg
sysexit
pop
jle
pushf
cmp
pop
push
push
mov
dec
ret
fsub
pushf
jmp
sbb
pop
push
and
xchg
jo
(bad)
sub
pop
lods
retf
pop
adc
sbb
pushf
xor
into
pop
inc
xor
pushf
bound
ret
(bad)
or
add
jecxz
pop
sbb
call
pushf
es
add
pop
(bad)
sub
pop
jecxz
pushf
call
sbb
push
aam
(bad)
repz
pushf
daa
stos
inc
adc
retf
ret
pushf
jae
jg
pop
rol
(bad)
in
daa
inc
fadd
pushf
in
xor
pop
rol
sbb
shr
fmul
xor
mov
ret
sbb
call
cmp
out
cmova
out
and
daa
sbb
pop
cmps
ret
pushf
fisttp
mov
xchg
cmps
or
push
ret
pushf
inc
stos
push
add
pop
ret
fdivr
inc
ret
fadd
pop
ins
cmp
dec
ret
sbb
addr16
sub
ja
pushf
inc
pop
outs
and
jl
pop
leave
(bad)
and
fs
sbb
(bad)
cmp
ins
ret
pop
addr16
sub
lea
(bad)
mov
or
add
add
or
push
push
inc
xor
pop
xchg
sub
pop
cmp
pop
mov
and
fdiv
mov
or
ret
fmul
mov
inc
ror
pop
(bad)
pop
fmul
pop
repnz
xchg
and
ror
add
fcom
les
(bad)
icebp
int3
pop
mov
stc
int3
pop
rcr
xor
sbb
add
jmp
adc
pop
sahf
int3
fdivr
xchg
int3
fadd
arpl
ja
and
daa
inc
xchg
pop
ins
dec
rcl
pop
mov
shl
(bad)
mov
(bad)
add
pushf
cmp
fistp
inc
cmps
int3
pushf
jno
pop
add
lods
jnp
xor
push
int3
pushf
shl
call
sbb
ins
fs
pop
inc
int3
sbb
mov
push
(bad)
jge
fcomp
jne
pop
in
or
pop
sbb
(bad)
adc
gs
sbb
fs
cs
sbb
pop
lods
loope
ss
adc
sbb
mov
int3
pop
and
xor
int3
fsubr
mov
inc
cmp
pop
mov
jno
inc
xor
sbb
rcl
pop
and
or
imul
int
mov
ror
pushf
jecxz
cdq
sub
enter
std
cli
and
fst
pop
xchg
int
xchg
(bad)
or
pop
icebp
int
rcl
xchg
int
pop
pusha
jp
(bad)
loope
pop
imul
xchg
ja
(bad)
mov
sbb
jns
or
int
sbb
add
sahf
int
pop
in
cmps
ds
cmps
int
xchg
adc
(bad)
or
inc
mov
pushf
add
mov
mov
inc
inc
int
cwde
neg
sbb
mov
(bad)
push
int
cmp
cmova
data16
jns
(bad)
gs
mov
ins
int
les
xor
jne
fdivr
jge
fcomp
or
mov
or
fsubr
mov
xchg
int
and
int
jo
xchg
xor
mov
stos
xor
int
into
adc
pop
xor
pop
pop
int
sbb
in
ficom
ror
stos
call
into
pop
shr
into
pop
aas
repz
(bad)
fmul
pop
inc
pop
add
pop
loope
pop
xchg
dec
mov
pushf
in
inc
add
pop
icebp
into
pop
add
adc
stc
into
sbb
aam
aaa
pop
mov
sbb
jge
pop
pop
xchg
sbb
mov
into
fcom
in
or
xchg
fmul
cmps
into
pop
retf
or
into
pushf
or
dec
cmp
outs
out
or
dec
into
fcom
inc
into
sbb
inc
mov
fmul
mov
into
fsub
call
fcomp
into
fdiv
shr
adc
or
and
inc
jne
pushf
arpl
cmps
adc
or
fsub
add
pop
in
push
mov
fcom
adc
pop
adc
sbb
mov
push
inc
sub
pushf
mov
js
xchg
into
pop
out
movs
ss
cmp
sbb
xchg
xor
inc
xor
sbb
sub
and
xor
mov
pop
push
pop
fmul
pushf
sbb
popf
cmp
inc
aam
sbb
jmp
and
inc
loope
pop
aad
shr
(bad)
stc
iret
fsubr
xor
icebp
iret
pushf
fs
add
inc
jbe
sbb
int3
adc
(bad)
jle
sbb
push
cmps
adc
iretw
fmul
ins
ins
cmp
outs
iret
pushf
outs
out
cmp
push
iret
pushf
mov
aaa
add
pop
iret
pop
out
sbb
sbb
iret
pushf
dec
pop
sbb
mov
out
sub
cdq
loopne
pop
movs
iret
sbb
movs
mov
(bad)
lods
iret
pushf
pop
aas
cld
adc
ret
arpl
and
iret
pushf
ds
iret
pushf
inc
test
iret
pop
mov
mov
pop
int
mov
(bad)
cli
iret
pushf
sbb
xchg
iret
pushf
gs
data16
add
(bad)
ror
pop
(bad)
or
adc
xor
fcomp
stc
sbb
enter
or
enter
jnp
inc
cmp
fcom
jns
xor
and
fsubr
sbb
(bad)
sub
fmul
adc
fdiv
adc
and
mov
loope
inc
push
enter
mov
xchg
pop
hlt
data16
pushf
sbb
or
xchg
pop
addr16
enter
inc
sbb
pop
enter
pop
sbb
push
enter
cmps
or
pop
mov
enter
sbb
jmp
mov
pop
sbb
jp
xchg
sub
mov
and
popf
enter
or
xchg
enter
mov
inc
(bad)
enter
pop
sbb
test
enter
cmp
inc
repnz
movs
sbb
jno
mov
pop
jecxz
fsub
fcmovne
(bad)
lock
inc
ror
sbb
add
enter
es
ror
test
cmp
(bad)
inc
push
pop
pop
xor
sbb
sahf
mov
inc
sub
sbb
cli
pop
add
and
sbb
leavew
or
enter
adc
pushf
and
or
pop
inc
sbb
sub
mov
leavew
pop
(bad)
cmp
add
mov
cmp
jbe
pushf
arpl
daa
inc
jg
fmul
inc
leave
pushf
shl
fmul
in
movs
adc
leave
fdiv
sbb
pop
or
adc
dec
leave
pushf
es
adc
pop
mov
pop
jnp
aas
and
leave
pop
xchg
leave
fsubr
and
sbb
scas
in
adc
add
leave
pop
nop
(bad)
out
pop
loop
pushf
not
data16
jmp
pop
lock
pop
aad
jb
inc
clc
leave
pop
sub
or
pushf
inc
and
(bad)
leave
leave
pushf
mov
ror
fdiv
xchg
cwde
and
fxch
fmul
retf
xor
xchg
retf
xor
add
dec
xor
ss
aad
adc
push
retf
and
sbb
neg
(bad)
stos
mov
(bad)
pop
retf
sbb
retf
dec
jns
inc
fs
xlat
adc
inc
jl
pushf
div
sbb
je
pop
or
rcr
dec
retf
das
and
pop
inc
retf
int3
pop
or
call
retf
cmps
clc
push
xchg
push
xor
mov
pop
sbb
in
fs
and
mov
sbb
or
sbb
xchg
sub
or
lods
test
(bad)
fwait
retf
sub
retf
add
pop
jmp
pop
pusha
(bad)
js
pop
loopne
fmul
clc
retf
ins
in
xor
lock
add
push
xchg
retf
or
sbb
ror
mov
ss
fxch
pushf
int3
sub
pushf
xor
push
cmp
sub
fsub
and
retf
fdiv
push
retf
fdivr
into
(bad)
cmp
push
retf
sbb
push
cs
pop
ss
pop
inc
push
add
inc
aas
retf
pop
mov
daa
retf
fdivr
mov
cmp
and
sar
push
retf
pop
push
scas
in
or
pop
retf
pop
test
fnstcw
inc
retf
pop
iret
fwait
out
sbb
retf
sbb
ins
mov
push
movs
or
jge
pop
xchg
aaa
dec
and
retf
pushf
jmp
ins
retf
sbb
fnstsw
pop
dec
aaa
xor
xchg
sahf
aas
pop
or
repnz
sbb
cli
jno
inc
mov
sbb
mov
test
test
pushf
stc
mov
fcom
jno
sbb
ror
pushf
bound
or
fmul
pop
xchg
aam
aas
inc
ror
in
mov
or
pop
lock
fsubr
or
pop
(bad)
adc
loope
fdivr
nop
sbb
xchg
retf
pop
xor
aam
ja
out
xchg
aam
scas
je
add
push
aam
iret
xor
pop
adc
inc
and
ins
shr
xchg
aam
mov
das
aam
shl
adc
daa
aam
add
dec
sbb
pop
aam
push
and
add
movhps
shr
xor
inc
aam
cmp
aam
outs
adc
jne
fadd
ins
aam
cmc
push
mov
and
mov
pushf
inc
inc
nop
or
xchg
aam
mov
mov
fmul
pop
sti
xor
cmp
aam
dec
cmp
pushf
scas
(bad)
(bad)
xchg
stos
sbb
mov
outs
and
jecxz
pop
inc
rcl
pushf
lea
add
enter
mov
mov
lahf
and
clc
aam
push
je
and
aam
mov
aaa
pop
jmp
lahf
and
loope
pop
ss
cli
or
sbb
fsubr
jecxz
xchg
aad
pushf
out
xchg
aad
iret
imul
cmp
cmp
aad
inc
sbb
pop
das
aad
xchg
js
and
repz
pop
or
inc
aad
addr16
adc
xchg
mov
add
(bad)
push
aad
sti
mov
aad
pop
or
cmp
shr
or
aad
or
sub
call
jge
fdivr
cdq
js
inc
test
pop
dec
(bad)
sti
or
stos
lock
xchg
cmp
call
inc
mov
in
(bad)
stos
aad
mov
leave
sbb
fist
and
mov
aas
pop
inc
rcl
mov
jne
(bad)
enter
adc
aad
je
fisttp
inc
(bad)
fcomp
loope
fadd
xchg
dec
sbb
add
sbb
aad
push
inc
fisub
not
pop
xchg
and
and
push
(bad)
fadd
ss
and
sbb
mov
inc
push
(bad)
pushf
dec
mov
(bad)
sbb
jp
ss
das
(bad)
pushf
loop
add
xchg
(bad)
pop
sub
pop
push
pop
clc
or
xor
sbb
cdq
into
xor
dec
(bad)
(bad)
leave
aas
es
inc
(bad)
pushf
pop
test
adc
pop
(bad)
pushf
push
out
cmp
push
(bad)
pushf
mov
ins
(bad)
sbb
aaa
push
ds
gs
sbb
inc
pop
add
jge
fmul
jno
inc
jb
fdiv
mov
sbb
aaa
nop
or
adc
xor
sbb
inc
and
sub
xchg
(bad)
fdivr
stos
(bad)
sbb
mov
(bad)
sbb
xchg
sbb
sbb
sbb
mov
(bad)
pop
cmc
fistp
fmul
xchg
adc
inc
fcom
fdiv
push
and
mov
(bad)
pushf
repz
or
pop
loope
pop
adc
and
pop
outs
xor
fcom
xlat
pushf
loopne
pop
xor
jle
pushf
sbb
data16
sbb
inc
xor
sbb
jo
or
fisttp
sbb
xlat
pushf
or
cmp
pop
inc
xlat
sbb
pop
push
sbb
dec
xlat
fadd
xor
pushf
call
and
xlat
pop
adc
fwait
add
and
pushf
pusha
mov
daa
(bad)
sub
adc
pop
adc
push
aas
inc
sbb
lea
mov
xlat
pushf
mov
repnz
(bad)
popa
das
es
xlat
fsub
sti
pop
cmp
jb
sub
(bad)
jmp
pushf
pop
and
rcl
pushf
in
fwait
or
pushf
adc
add
dec
add
xlat
sbb
icebp
pop
pop
xchg
jo
(bad)
mov
xlat
sbb
cld
xlat
sbb
xor
push
xchg
pushf
mov
cmp
push
xlat
pop
repnz
xor
jmp
adc
inc
xlat
sbb
fidivr
xchg
pushf
mov
and
pop
mov
pushf
fld
rcr
add
movs
sub
cmps
rcr
jg
mov
(bad)
lods
rcr
xor
inc
xchg
rcr
fst
inc
pushf
rcr
out
push
xchg
and
rcr
arpl
div
imul
adc
fwait
sub
push
mov
rcr
inc
adc
rcl
pop
out
sbb
pushf
xor
add
mov
and
retf
rcr
cmp
xor
pushf
out
scas
push
(bad)
cmp
pushf
sbb
shr
pop
and
pop
imul
fsubr
adc
pushf
in
cmps
cmp
sbb
pop
psubusw
pushf
test
fwait
int
or
jno
pop
bnd
pop
xchg
fdiv
cmp
fmul
shr
data16
and
inc
pop
rcr
jecxz
or
pop
push
rcr
push
shr
xchg
pop
dec
cmc
dec
add
inc
rcr
mov
addr16
mov
pushf
push
add
xor
cmp
rcr
loop
(bad)
pushf
rcr
xchg
rcr
mov
fadd
inc
add
stc
cli
or
std
rcr
cmc
rcr
in
rcr
(bad)
xor
loop
pop
mov
ja
(bad)
fcmovbe
pushf
fmul
fistp
xchg
rcr
retf
inc
inc
test
sbb
lds
add
mov
rcr
sub
pop
pop
mov
rcr
xchg
jecxz
aas
(bad)
sbb
sbb
xor
cmp
and
xchg
rcr
jns
pushf
in
adc
inc
jno
sbb
xor
sbb
imul
das
(bad)
jle
sbb
adc
rcr
dec
rcr
push
rcr
pop
rcr
cmps
rcr
scas
rcr
lea
sbb
mov
sbb
in
sub
test
sbb
adc
xchg
or
xchg
rcr
mov
pop
mov
in
pop
(bad)
cld
sbb
inc
in
rcr
popf
pop
add
rcr
mov
cli
rcr
xchg
mov
(bad)
nop
pop
push
pop
retf
or
jb
inc
rcl
fdiv
pop
ds
fcmovnbe
sbb
cli
cmps
and
and
fadd
(bad)
xor
(bad)
sub
pushf
or
sbb
xor
pushf
jbe
dec
and
cmp
pop
test
add
pop
aam
rcl
or
fsubr
adc
sbb
das
cmps
add
sbb
sbb
(bad)
mov
inc
popa
rcr
add
pushf
scas
jmp
or
jle
fdiv
fidivr
fcom
or
cmp
pusha
or
inc
inc
rcr
adc
pop
rcr
outs
add
push
rcr
loope
sub
scas
rcr
jo
pop
ss
movs
rcr
mov
(bad)
bound
pop
mov
pushf
sbb
mov
sbb
lea
sbb
adc
sbb
popf
rcr
stos
xor
rcr
in
rcr
loop
pop
test
add
dec
and
(bad)
repnz
mov
add
rcr
xor
ret
rcr
movs
add
rcr
inc
cmp
rcl
pop
sub
add
and
rcr
adc
cmp
pushf
hlt
add
and
xor
sbb
xchg
sbb
fs
adc
sub
sbb
ret
pop
adc
sbb
out
mov
sbb
cmp
rcr
jno
sbb
inc
rcr
mov
rcr
jbe
fcomp
dec
sub
jg
fsub
rcr
pusha
sbb
pop
outs
rcr
adc
xchg
fisubr
(bad)
pushf
(bad)
mov
pop
and
test
pushf
(bad)
out
icebp
aaa
xchg
cmp
mov
pop
push
mov
push
(bad)
mov
adc
pop
cmc
sbb
fcomp
aad
pushf
js
outs
ss
fcmovu
sbb
xor
add
ins
dec
push
inc
retf
add
xor
outs
sbb
fcomp
ja
(bad)
jecxz
sbb
dec
nop
sub
jmp
fdiv
jecxz
sbb
adc
fmul
pop
sbb
xor
pop
add
(bad)
outs
or
or
fsubr
lods
shl
jbe
std
adc
outs
loope
inc
and
pushf
in
mov
pushf
ds
and
fcomp
push
fcomp
dec
(bad)
hlt
shl
mov
and
lds
add
ja
fsubr
outs
(bad)
lock
sbb
addr16
and
sub
mov
add
fstp
dec
aaa
pop
mov
sbb
mov
fstp
cmp
sbb
mov
sub
mov
sbb
(bad)
mov
pop
loop
js
pop
movs
fstp
fstp
pushf
jb
and
rcr
sbb
lahf
dec
cs
retf
shl
inc
ret
cmp
add
(bad)
cli
fstp
and
pop
repz
mov
rol
fstp
push
push
pop
jecxz
sbb
jb
sbb
and
xchg
fstp
mov
or
pushf
repnz
in
inc
add
pushf
add
adc
fstp
push
sub
and
lods
push
aad
inc
sub
pop
repz
clc
add
and
pop
push
into
push
cmp
bound
imul
dec
fstp
push
fstp
(bad)
sub
(bad)
pop
fstp
cmp
adc
push
pushf
aad
inc
outs
fstp
in
shl
inc
ja
fsubr
mov
push
pop
jg
fcom
and
or
xchg
sbb
addr16
xchg
sub
out
lds
pushf
ficomp
movs
(bad)
push
(bad)
rol
xchg
dec
add
pop
cdq
adc
mov
pop
ss
vsubss
mov
pop
mov
fldcw
xchg
ficomp
hlt
sbb
fcmovu
pop
push
pop
xchg
xor
loop
pop
dec
bound
pushf
fwait
dec
movs
add
repz
sti
(bad)
adc
cmp
add
sbb
push
dec
add
or
sbb
dec
gs
adc
sbb
adc
pop
popa
sar
xchg
ficomp
push
inc
sbb
ret
inc
ds
mov
ficomp
dec
ficomp
inc
(bad)
pop
dec
pushf
or
mov
mov
inc
push
ficomp
bound
pop
outs
(bad)
and
dec
and
(bad)
pop
jmp
ficomp
sti
add
ficomp
cwde
aas
cmp
sub
sub
inc
test
pop
inc
mov
(bad)
and
(bad)
cld
mov
and
out
das
cmp
mov
lds
mov
xchg
adc
mov
sbb
inc
mov
pop
cmp
push
push
inc
rcr
clc
and
xchg
(bad)
xor
push
(bad)
rcr
sbb
int3
jmp
sbb
nop
les
xchg
fistp
adc
adc
fistp
ret
and
mov
pop
and
(bad)
inc
lods
retf
jg
fdivr
out
inc
fs
xchg
popf
or
(bad)
int
lods
push
inc
push
fistp
push
xor
pop
(bad)
jae
add
fistp
dec
xor
dec
fistp
push
and
fistp
xor
or
pop
ret
cmp
and
fsub
sub
fdivr
aas
aas
das
pop
adc
pop
sbb
xor
sbb
sbb
cmc
fisubr
pop
add
sbb
pushf
cmps
aas
inc
or
pushf
xlat
or
ins
push
mov
fdivr
loopne
sbb
cmp
adc
scas
and
rcr
fadd
and
mov
rcr
(bad)
loop
cmp
leave
fcomp
or
add
inc
mov
pushf
pop
aam
sub
mov
pop
stos
cwde
call
pop
xlat
jnp
and
pop
icebp
adc
lahf
fcomp
int3
and
bound
adc
fcomp
fiadd
sbb
adc
pushf
adc
sbb
xor
fcomp
rcl
push
add
fcomp
or
cmps
cmp
jns
sahf
pop
(bad)
push
fcomp
loope
mov
xchg
fcomp
fcomp
cmp
fdiv
xor
pop
out
mov
pushf
lods
pop
inc
dec
movs
cmp
fcomp
adc
sbb
xlat
dec
ss
or
sbb
cmp
sbb
and
inc
stc
fstp
retf
pop
icebp
fstp
jmp
add
inc
(bad)
fstp
ins
jnp
pop
(bad)
(bad)
fst
xor
pop
into
fstp
sub
pop
(bad)
fstp
xor
inc
(bad)
sbb
pop
pop
pop
pop
cmps
fstp
mov
(bad)
and
cmps
sub
retf
repz
mov
pop
xor
out
daa
inc
mov
pushf
push
jae
xor
fstp
das
mov
pop
popf
fstp
stos
je
(bad)
gs
jmp
pop
aas
div
fadd
das
xchg
sbb
icebp
rdpmc
xchg
sbb
inc
scas
cmp
dec
fstp
or
push
fstp
mov
pop
pop
fstp
and
pushf
rcr
pop
(bad)
sub
fsubr
xor
and
xor
sbb
sub
add
fstp
add
fadd
cwde
(bad)
and
or
fdiv
popa
aaa
sub
adc
pop
imul
call
fmul
cmp
cmp
sub
jae
adc
pop
neg
sbb
jge
sbb
(bad)
xchg
lods
add
xchg
test
xchg
fcmovu
dec
je
cmp
xlat
ficomp
pop
ja
xchg
sub
pushf
and
mov
xor
xchg
sub
mov
(bad)
std
fld
inc
test
pop
cmp
xchg
and
pushf
call
pushf
movs
adc
(bad)
cmp
aas
(bad)
ficomp
jge
fdiv
mov
pop
jb
fmul
ficomp
inc
ficomp
test
aaa
xchg
sbb
add
xchg
pop
mov
and
inc
sub
pushf
stc
jl
pop
(bad)
and
pushf
xor
ficomp
push
imul
xor
pushf
xchg
cmp
ficomp
add
sbb
jbe
cmp
sbb
fsub
mov
fcomp
jmp
cmp
inc
loope
sbb
sbb
and
into
fcmovnu
popf
and
xor
neg
fsubr
js
pop
xchg
fcmovnu
adc
adc
pop
jns
sbb
out
fistp
xchg
fcmovnu
iret
test
inc
lahf
fistp
sar
mov
fistp
mov
pop
int
jg
(bad)
mov
sbb
(bad)
movs
fistp
sbb
(bad)
lods
fistp
push
fcmovnu
std
sahf
sti
sbb
pop
fistp
lods
add
fcmovnu
dec
mov
pushf
test
xchg
inc
jb
pushf
aad
repnz
jp
pushf
xor
pop
(bad)
fistp
imul
xchg
cmp
adc
pop
retf
push
out
or
fmul
fdivr
jp
xchg
fistp
push
push
push
(bad)
xor
sbb
cli
retf
cs
cmp
pop
add
fistp
(bad)
and
sub
pushf
pop
in
bnd
(bad)
ftst
sbb
cmps
(bad)
cmp
shl
jge
mov
sbb
mov
in
iret
pop
les
xchg
in
cs
cs
out
in
push
call
in
mov
lahf
in
cmc
pop
not
xchg
dec
xchg
mov
sbb
pop
inc
sub
in
fucomp
fild
inc
mov
fcom
dec
les
xchg
and
movs
in
mov
xor
pop
in
jmp
add
pop
push
in
adc
add
inc
dec
in
dec
xor
in
mov
jp
(bad)
les
adc
jb
sbb
mov
inc
push
sbb
ret
inc
arpl
pop
mov
sbb
pop
(bad)
cdq
shl
or
call
(bad)
or
pushf
jno
sahf
and
in
scas
add
(bad)
cmp
pop
call
or
xor
pop
add
bound
pop
sub
fmul
jl
(bad)
and
sbb
xchg
dec
pop
pop
fxam
pop
in
mov
in
es
cmp
imul
pop
xchg
cdq
(bad)
push
inc
out
pop
jmp
or
pop
out
in
sbb
sbb
mul
fcom
pop
and
jmp
sbb
repz
xchg
or
xchg
test
pop
xchg
in
inc
sbb
sbb
(bad)
inc
movs
in
stc
cdq
retf
cmp
add
push
pop
inc
mov
fdivr
cmp
mov
repz
inc
in
les
in
cmp
(bad)
push
in
imul
inc
pop
in
or
sbb
push
jmp
sbb
aas
dec
adc
jb
fsubr
pusha
and
xchg
dec
xor
inc
add
pushf
retf
or
or
fadd
dec
cmp
jns
mov
pop
mov
and
sbb
jecxz
cmp
sub
sbb
sub
in
inc
jne
push
(bad)
cmp
fcom
shl
retf
in
and
xchg
out
cmps
aas
push
inc
shl
sbb
sbb
(bad)
(bad)
out
mov
sbb
out
leave
movs
lods
sub
gs
xor
(bad)
out
jae
fcomp
(bad)
mul
fsubr
(bad)
out
aad
inc
xchg
shl
jle
rcl
xchg
out
fwait
mov
out
sti
mov
sbb
movs
out
sbb
shl
xchg
add
mov
sbb
cmp
call
inc
out
xor
lods
or
pop
out
inc
scas
add
xchg
fsub
push
(bad)
clc
add
xchg
pop
and
or
out
inc
ss
pop
shl
or
pushf
ret
scas
cld
xor
out
sbb
xor
pop
sbb
pop
push
adc
sbb
or
adc
fdivr
cmova
out
sbb
sar
pop
cmp
sbb
mov
and
sbb
cmp
out
sar
mov
pop
shl
daa
mov
xor
pop
sub
sbb
inc
mov
pop
push
out
out
adc
xor
fdivr
xor
movntq
out
and
hlt
push
inc
jg
pushf
adc
out
push
ins
out
mov
push
and
push
out
shl
pop
cs
clc
cs
inc
out
jae
(bad)
sub
dec
out
mov
sub
(bad)
mov
pushf
mov
pushf
adc
out
cwd
lea
(bad)
stos
out
mov
xchg
out
call
call
mov
out
fwait
adc
pop
repz
sti
xor
pushf
and
out
outs
and
pushf
mov
shl
pop
in
mov
xchg
out
cmp
mov
inc
shl
dec
in
dec
xor
leave
out
xchg
pushf
repz
or
pop
cmp
pushf
or
jp
(bad)
and
pushf
pop
pop
or
pop
mov
and
retf
adc
push
loopne
adc
loopne
inc
inc
pop
sbb
ss
ss
jg
fdivr
js
adc
ja
pushf
cmp
outs
loopne
pop
test
push
(bad)
fs
mov
pop
loopne
cld
dec
cmp
pop
push
loopne
sbb
add
loopne
gs
neg
xchg
fadd
mov
mov
mov
pop
sbb
mov
fsubr
jmp
xchg
shl
xor
call
pop
xchg
loopne
and
cmp
pop
mov
fcomp
adc
fsub
sti
loopne
cld
test
add
sub
jmp
pushf
jns
cmp
mov
fsub
pushf
lds
loopne
es
pop
jb
inc
pop
xchg
loopne
cwde
lods
push
daa
pop
cmp
sbb
icebp
jg
inc
xor
sbb
inc
xchg
add
sub
sbb
fsub
xchg
loope
mov
push
loope
in
ja
pop
push
loope
sbb
loope
inc
push
sbb
xchg
loope
xchg
clc
sbb
(bad)
sub
xchg
sbb
in
and
ja
pop
push
xor
cmp
loope
xchg
pop
in
xor
loope
retf
push
jbe
pop
dec
loope
sub
cmp
ja
cmps
aas
xchg
pushf
xchg
add
movs
loope
ret
sbb
lods
loope
outs
fsubr
xchg
and
mov
lods
adc
adc
loope
sub
ret
xchg
loope
inc
mov
(bad)
fwait
loope
sahf
push
int
xchg
loope
out
push
sbb
jmp
pop
pop
add
pop
xchg
loope
jo
xor
mov
shl
in
lods
in
pop
inc
enter
in
push
inc
shl
sbb
mov
loope
scas
push
cs
and
pop
(bad)
aas
xchg
sub
call
loop
jno
ja
(bad)
ss
xchg
bound
xchg
loop
rcl
loop
cmp
fnstcw
jbe
std
pop
(bad)
pop
loop
(bad)
inc
outs
loop
cmc
mov
ds
addr16
or
daa
xchg
sbb
lds
mov
dec
loop
xlat
cdq
test
mov
inc
pop
loop
arpl
add
loop
movs
mov
loop
push
add
movs
loop
cmp
mov
fcomp
mov
(bad)
mov
fsub
mov
pop
ror
xchg
pop
sbb
push
mov
adc
xchg
loop
mov
jmp
pop
idiv
cmp
jecxz
sbb
dec
cmp
sti
loop
inc
pop
adc
pop
lock
mov
enter
out
sbb
shl
xor
push
sub
fsub
pushf
pusha
or
loop
mov
sub
sbb
iret
mov
sbb
sbb
jecxz
jae
fld
xchg
jecxz
mov
jecxz
(bad)
icebp
int
inc
sahf
jecxz
xchg
sbb
xchg
fsub
fadd
add
mov
sbb
add
xor
mul
pop
dec
test
xor
cmp
inc
out
(bad)
adc
inc
out
jecxz
add
xlat
jecxz
pusha
mov
jecxz
mov
aam
xchg
jecxz
lds
jecxz
sub
mov
(bad)
xor
fdivr
sub
jecxz
nop
push
sbb
and
jle
(bad)
sub
imul
inc
ret
inc
sbb
fcomp
add
pushf
ror
jecxz
cmp
jecxz
popa
jge
add
jnp
sbb
fist
sbb
arpl
sbb
mov
sbb
pop
mov
fsubr
fidivr
pop
pop
jecxz
and
jecxz
int3
cmc
push
sbb
dec
jecxz
ds
xor
jl
gs
mov
mov
(bad)
mov
add
xchg
adc
(bad)
xchg
in
sbb
xchg
int
xchg
jnp
inc
mov
fdiv
cmps
adc
pop
xchg
pushf
sbb
in
pushf
dec
fdiv
sbb
shl
sbb
in
or
out
sbb
aam
cmova
in
pushf
outs
ins
mov
xchg
pushf
fabs
jne
inc
(bad)
in
pushf
xor
in
pop
dec
rcr
mov
sub
add
sub
in
pop
jp
sbb
inc
adc
pushf
mov
es
or
fmul
push
sub
inc
add
pushf
(bad)
(bad)
pop
jnp
fdivr
jae
pop
fiadd
in
fadd
cmps
sbb
arpl
pop
pop
jg
sub
pop
in
fsub
push
in
pushf
fsqrt
pushf
xor
dec
in
sbb
mov
xor
or
xchg
add
pop
mov
fadd
sbb
xor
or
fsub
sbb
xchg
pop
xchg
pcmpeqd
pop
mov
fdivr
jle
pop
pop
xchg
in
sbb
ins
pop
sub
sahf
in
pushf
jg
dec
push
pop
out
pushf
call
(bad)
fld
cmp
in
pushf
sub
(bad)
in
sbb
fmul
xor
mov
int3
in
pop
aam
inc
sbb
aam
pop
ss
or
in
pushf
inc
arpl
inc
and
mov
pushf
in
cmp
das
inc
xor
ins
or
adc
in
sbb
inc
scas
add
or
sbb
ret
fcom
or
sub
pop
sbb
fsubr
loop
pop
arpl
sbb
push
sahf
xor
imul
dec
push
cmp
jae
pop
adc
aam
pop
jnp
pop
pop
(bad)
push
cmp
inc
in
fmul
dec
in
sbb
ret
xchg
fmul
pop
in
fadd
mov
fmul
test
sti
push
inc
mov
sbb
int3
cmp
(bad)
mov
ds
mov
repnz
aad
es
xchg
movs
add
xchg
out
pop
data16
out
out
sbb
scas
inc
adc
jl
es
(bad)
out
fadd
push
div
imul
sbb
push
clc
sbb
int3
out
fdivr
shr
xlat
int3
ror
adc
push
ss
out
sbb
sbb
add
sub
fcomp
out
pop
jae
in
mov
ret
push
out
pop
aad
jo
pop
ss
sbb
mov
out
sbb
xchg
retf
daa
out
pushf
xchg
jmp
sbb
das
out
pop
rcr
das
pop
push
out
pop
and
pop
out
sbb
cmc
retf
xor
mov
fnstcw
dec
out
pushf
retf
mov
sub
je
sbb
inc
mov
jg
loopne
pop
gs
sbb
(bad)
(bad)
cs
ins
out
(bad)
sbb
sbb
stc
adc
inc
popf
out
fdivr
int3
and
sub
mov
add
mov
sbb
(bad)
dec
xchg
fsubr
addr16
out
pushf
mov
stos
out
sbb
in
xor
pop
shr
pop
cmp
pop
add
ins
std
jne
inc
shr
mov
enter
fsub
sub
out
pushf
sbb
jl
inc
clc
out
sbb
shr
pushf
mov
jmp
loope
pop
adc
pop
add
xor
xchg
out
fsub
cmp
int
or
push
out
pop
retf
cmp
ds
fsub
pop
adc
(bad)
ss
pop
ins
lea
pop
mov
stos
add
out
fadd
lock
es
pop
out
sbb
push
rol
xchg
sbb
inc
repz
dec
out
pushf
xchg
imul
inc
out
pushf
loopne
inc
add
jl
pushf
ds
out
fcom
out
xchg
pushf
sahf
xchg
adc
pop
cld
arpl
and
or
inc
xor
mov
sub
loopne
out
inc
mov
or
pop
mov
pop
pop
cld
add
inc
stos
call
ja
xchg
mov
sbb
or
and
push
sbb
mov
shr
std
mov
call
adc
call
sub
call
sub
loope
fsubr
push
xor
add
fcomp
xchg
and
push
call
sbb
call
aas
inc
es
or
sub
call
xor
aas
call
sbb
inc
call
or
inc
mov
call
add
pop
call
cmp
or
call
and
jb
pushf
movs
daa
in
push
inc
jp
sbb
pop
leave
cmp
sub
sbb
jmp
adc
stos
and
jmp
xor
mov
mov
fsubr
xchg
cmp
mov
sbb
test
(bad)
mov
pop
add
push
sti
or
cmp
jmp
xor
repz
sub
jmp
gs
mov
sar
pop
imul
fsub
lea
inc
push
jmp
and
pop
xor
jmp
daa
inc
pop
jmp
sbb
das
jmp
or
daa
jmp
and
cmp
pushf
mov
xor
(bad)
cli
invd
xchg
ds
cmp
inc
jmp
adc
pop
jmp
cmova
sbb
test
adc
jmp
and
mov
jmp
aaa
pop
jb
pop
in
call
sbb
and
sub
push
nop
int
inc
fwait
jmp
xchg
jmp
stos
jmp
mov
xor
(bad)
mov
(bad)
sbb
mov
sbb
fcom
(bad)
enter
mov
jmp
fldl2e
fcom
shr
pushf
std
xchg
pushf
xor
sbb
(bad)
loope
fcomp
push
xchg
lea
xchg
mov
(bad)
jbe
fcom
out
lds
(bad)
jle
sbb
loope
sub
addr16
outs
jmp
push
jmp
pop
jmp
inc
jmp
dec
jmp
xor
sbb
fcomp
pop
dec
xor
(bad)
and
jbe
(bad)
sub
jmp
(bad)
adc
push
cmp
adc
adc
add
pop
popf
fxch
das
xchg
jmp
bnd
or
push
cmp
cli
jmp
ins
xchg
jecxz
sbb
stos
stos
sub
jmp
pop
cld
push
fadd
inc
shr
fcomp
push
dec
and
fucomi
fdiv
xlat
sub
shr
movs
call
icebp
nop
xor
inc
mov
sbb
inc
or
xchg
cmp
(bad)
mov
mov
pop
test
mov
pop
add
cdq
jmp
jne
icebp
cs
mov
pushf
mov
daa
xor
(bad)
push
es
jle
pushf
cmp
mov
sbb
xchg
pop
ja
lahf
aad
inc
addr16
enter
(bad)
pop
jmp
push
mov
add
push
jmp
imul
xchg
xchg
jge
sbb
mov
jmp
sbb
xor
sbb
(bad)
ins
xor
sub
jl
xchg
sar
(bad)
sbb
mov
pushf
dec
movs
xchg
pop
or
pushf
cwde
pushf
sbb
int3
jbe
cmp
cli
hlt
pushf
xor
repnz
fdivr
push
sbb
scas
adc
jecxz
sbb
retf
inc
fcomi
pop
mov
inc
shl
fsub
popa
sub
mov
sbb
hlt
pop
mul
xor
mov
push
or
mov
pushf
arpl
xchg
sbb
test
mov
xchg
mov
cdq
hlt
fdivr
push
dec
push
xchg
sbb
(bad)
xchg
hlt
sbb
sub
sub
fmul
loop
xchg
fmul
fsub
sbb
outs
hlt
sbb
sbb
movs
mov
hlt
pop
in
xchg
mov
mov
push
pop
dec
hlt
pop
jle
hlt
sbb
sbb
sbb
pop
mov
pop
test
add
out
enter
hlt
sbb
xchg
sub
hlt
sbb
adc
hlt
sbb
test
sbb
xlat
sbb
pop
hlt
fsubr
adc
inc
inc
hlt
fcom
cmp
xchg
mov
cmc
fmul
outs
loopne
pop
mov
lahf
and
cmc
pushf
inc
inc
ds
(bad)
lods
cmc
pushf
mov
cmc
fmul
push
shl
popf
cmc
sbb
sahf
mov
sbb
repnz
inc
mov
pop
xchg
adc
xchg
cmc
pushf
in
add
sbb
mov
cmc
sbb
jle
push
xchg
cmc
fcom
shl
pop
(bad)
jmp
pop
es
mov
sbb
dec
xchg
or
mov
xor
xor
pop
out
cmp
cmc
pop
adc
scas
or
sbb
pushf
mov
adc
sbb
inc
fidivr
pop
sbb
fsub
mov
cmc
pop
fs
xchg
xor
cmc
pop
mov
mov
pop
retf
and
jbe
pushf
xor
cmc
pushf
dec
jle
sub
addr16
sbb
cmp
pop
ret
js
sbb
push
cmc
pushf
or
dec
cmc
pushf
jo
clc
cmp
imul
fadd
aas
and
pop
mov
pushf
or
lods
neg
das
xor
movs
neg
mov
inc
popf
neg
loope
les
xchg
neg
(bad)
neg
xor
mov
cli
neg
xchg
sub
xor
jmp
xchg
neg
(bad)
lds
pop
fcomi
pop
mov
dec
daa
inc
retf
neg
shl
mov
cmp
add
xchg
neg
sar
xchg
neg
inc
aaa
(bad)
and
pushf
test
sbb
sbb
fadd
and
neg
adc
and
xchg
neg
mov
or
push
neg
adc
sbb
data16
cmc
dec
hlt
sub
outs
neg
or
and
neg
pusha
inc
inc
jg
fdiv
inc
neg
int3
fcmovbe
and
dec
neg
push
neg
mov
sub
neg
movs
neg
sti
inc
pusha
sub
neg
sub
mov
fdivr
lods
adc
neg
test
pop
leave
test
pop
push
lods
mov
xchg
adc
sbb
and
aas
xchg
neg
jmp
xchg
neg
imul
das
inc
sti
neg
ret
neg
or
inc
retf
neg
push
cli
das
(bad)
shl
pushf
outs
cmp
es
fdiv
pop
adc
(bad)
and
fmul
push
cmps
add
sub
fmul
adc
pop
xor
sbb
push
rcl
xchg
neg
pushf
pop
xor
xchg
neg
dec
sbb
or
sbb
cmc
lock
ins
das
ficom
push
neg
outs
neg
leave
cmps
mov
sbb
(bad)
out
sbb
jle
fdiv
icebp
das
(bad)
ja
fcomp
dec
neg
inc
neg
adc
neg
adc
adc
div
bound
inc
movs
lock
sub
popa
sub
mov
in
(bad)
mov
pop
xchg
sahf
mov
pushf
retf
sub
xchg
ds
popf
lock
xor
pop
xchg
lock
lock
cld
dec
inc
xor
loop
pop
and
stos
and
inc
jmp
sbb
(bad)
sbb
aas
and
pop
(bad)
lock
lock
scas
adc
lock
or
or
cmp
and
aaa
lock
jo
leave
sub
addr16
add
and
pushf
enter
inc
sub
pop
or
jg
xchg
pop
inc
sub
lock
(bad)
out
or
sbb
rcr
push
jp
pushf
pushf
ror
pop
pop
(bad)
lock
xor
add
add
lock
ss
inc
pop
lock
test
pop
xchg
sbb
inc
xor
lock
adc
xor
popf
fild
mov
repnz
mov
ret
test
pushf
xor
mov
(bad)
nop
icebp
pop
push
inc
popf
cmp
cdq
icebp
pop
test
icebp
pop
clc
daa
call
sub
push
xchg
icebp
fsub
or
(bad)
div
fcomp
out
icebp
pop
jmp
pushf
sub
fcomip
pushf
dec
fidiv
fdiv
int3
icebp
pushf
icebp
or
icebp
fadd
jecxz
adc
cmp
fsubr
xchg
xchg
loopne
(bad)
sub
lods
sbb
and
dec
das
(bad)
sbb
sar
inc
adc
pushf
test
or
pop
aad
or
inc
add
fsub
fwait
test
pop
jno
pop
add
jae
pushf
ror
ins
push
inc
imul
ss
loope
(bad)
arpl
sbb
imul
xchg
sbb
pop
clc
or
(bad)
adc
cmp
icebp
sbb
(bad)
sub
xchg
pushf
push
pop
cmps
sub
mov
cmp
xchg
daa
cmp
test
adc
(bad)
mov
(bad)
cmp
xchg
sbb
sbb
repnz
push
mov
fadd
ds
cs
cs
repnz
repnz
fsubr
xor
repnz
push
jp
sub
cld
repnz
es
pushf
enter
inc
int3
repnz
loope
and
repnz
in
cs
(bad)
fsubr
and
push
and
sti
mov
inc
xor
stos
or
repnz
add
fdivr
xchg
cwde
daa
pop
or
pop
adc
repnz
pop
push
jecxz
(bad)
sbb
sbb
push
repnz
idiv
and
imul
push
push
xor
inc
jae
fsub
dec
push
(bad)
js
fadd
repnz
pop
lahf
ja
mov
repnz
jecxz
cmp
repnz
(bad)
mov
xchg
mov
fdiv
mov
repz
inc
aad
cmp
mov
mov
pop
call
xchg
sbb
jg
sub
sahf
repz
mov
repz
xchg
out
sbb
out
repz
out
jge
xor
repz
jge
pop
push
fmul
in
inc
hlt
repz
int3
repz
cmc
pop
fld
pop
(bad)
repz
adc
fdiv
pop
jno
mov
inc
aad
sbb
sbb
sub
sub
in
xchg
adc
push
xor
pop
xchg
push
fcomp
inc
or
pop
out
mov
repz
or
fsub
pop
sub
adc
sbb
xor
xchg
sbb
adc
push
xchg
pop
or
sbb
fmul
ds
jo
sbb
xchg
jns
xchg
sbb
xlat
call
sbb
mov
pushf
dec
jns
sbb
repz
pusha
mov
inc
test
and
mov
and
xchg
pushf
mov
mov
pop
fst
cmp
cmp
cld
sbb
pop
push
adc
cmps
cld
pushf
lahf
or
cmp
scas
cld
pushf
fisub
and
js
adc
(bad)
pop
bound
add
(bad)
cld
sbb
xor
aaa
xchg
cld
sbb
sub
sub
hlt
cld
pushf
adc
fwait
xor
cld
cld
fmul
lock
(bad)
in
pop
popf
pusha
fstp
xchg
cld
pop
loopne
mov
inc
adc
or
xchg
and
mov
pop
sbb
fcomip
pop
or
cld
sbb
stc
jl
pop
cmp
sbb
pop
shr
pop
in
sbb
sub
pop
icebp
sahf
popf
adc
push
cld
fsubr
pop
cld
fcom
push
sub
inc
cld
fsubr
dec
cld
pushf
add
xor
js
ds
jns
fmul
shr
popa
cld
pushf
pop
(bad)
imul
or
js
cmp
xchg
std
sbb
int3
out
pop
mov
fcomp
fwait
test
jo
fidivr
mov
aad
pop
mov
pop
ret
add
scas
std
sbb
rcl
inc
cmps
std
sbb
mov
std
fcomp
aam
sbb
rep
xor
std
sbb
int3
fild
xchg
std
fsub
xor
sub
std
std
pushf
sbb
cmc
std
pushf
push
adc
fsubr
loop
pushf
in
xor
cmp
enter
adc
pushf
jno
bound
mov
add
sbb
add
sub
pop
adc
(bad)
xor
fsubr
mov
sbb
jl
xor
and
fmul
sub
std
pushf
arpl
sub
push
std
pop
mov
dec
std
fadd
jle
xor
inc
std
pop
sbb
(bad)
cmp
jns
pop
jne
mov
pushf
mov
jbe
pushf
lds
cmp
jle
fdiv
xchg
fmul
push
or
(bad)
(bad)
pushf
mov
xchg
(bad)
pop
(bad)
jl
cmp
(bad)
pushf
cmp
movs
(bad)
pop
xchg
and
add
lods
or
xchg
out
(bad)
mov
retf
sar
mov
sti
add
test
pop
adc
fdivr
pop
push
loope
fadd
jmp
ret
icebp
(bad)
pop
add
out
aas
xchg
(bad)
pop
jns
cmps
aaa
(bad)
push
(bad)
pushf
lods
cmp
sbb
mov
(bad)
pushf
or
push
(bad)
sbb
scas
cmp
(bad)
das
(bad)
sbb
aaa
daa
cmp
daa
(bad)
fmul
leave
pop
sbb
aas
(bad)
fsubr
add
(bad)
sbb
mov
(bad)
sbb
jnp
sbb
pop
(bad)
sbb
mov
sbb
data16
pushf
mov
outs
(bad)
pop
aam
dec
and
mov
(bad)
pushf
push
dec
pop
push
xchg
sbb
pusha
pop
xor
dec
(bad)
(bad)
and
es
mov
pushf
and
call
push
js
inc
movs
call
jg
xchg
or
or
mov
test
(bad)
xchg
and
(bad)
(bad)
call
cmc
(bad)
fdiv
fs
cli
call
inc
stos
or
cs
sbb
adc
call
pop
loopne
xchg
(bad)
fadd
dec
out
mov
push
ss
retf
call
xor
fsub
cmp
pop
enter
inc
and
pushf
xor
(bad)
fmul
or
adc
sbb
mov
(bad)
sbb
fmul
cmp
call
pop
sbb
or
sbb
push
cmp
jle
sbb
push
jg
inc
jbe
fdivr
dec
xor
sbb
xor
call
pop
call
enter
push
call
dec
call
mov
add
jnp
cmp
mov
imul
mov
pop
in
add
fsub
jmp
pop
cli
jmp
fidivr
pop
xchg
clc
pushf
ret
push
xchg
or
mov
clc
pop
mov
shl
xchg
clc
fmul
push
lock
add
(bad)
loop
fdivr
in
(bad)
(bad)
sbb
mov
clc
pushf
in
fidiv
fdivr
jmp
clc
sbb
in
xor
cmp
sbb
mov
pushf
aad
lds
ucomiss
daa
pop
and
pushf
inc
push
and
sbb
fdivr
adc
pop
div
clc
sbb
iret
fs
add
pushf
inc
arpl
data16
fdiv
outs
clc
pushf
aam
mov
jbe
pop
sbb
xchg
sbb
jle
fcom
pop
xchg
pop
mov
dec
clc
(bad)
jge
xchg
sbb
fcomp
pop
xchg
sub
movs
stc
fdiv
lods
stc
pushf
std
xchg
lea
or
sub
mov
scas
adc
cdq
or
push
(bad)
(bad)
stc
pop
lds
stc
sbb
sahf
jmp
fcom
push
sbb
loop
pop
mov
mov
(bad)
jmp
xchg
stc
pushf
jne
cmp
pop
or
sbb
dec
cmp
pop
retf
stc
pop
push
lods
or
inc
sar
pop
push
sub
fdivr
fdiv
stc
fdivr
or
xchg
stc
pop
and
xor
sbb
and
and
pushf
ja
and
stc
pushf
out
stc
and
sbb
xchg
stc
pop
inc
arpl
pop
mov
test
pop
outs
stc
fsubr
call
adc
push
daa
inc
jle
pop
jg
sbb
sbb
pop
out
xchg
pushf
hlt
jbe
adc
stc
sbb
or
xchg
pushf
inc
jl
aas
(bad)
push
stc
fsubr
lods
cli
pushf
enter
inc
movs
cli
pushf
ds
xor
(bad)
mov
fnstenv
xchg
dec
push
inc
(bad)
cli
fsub
cmp
pop
test
fmul
sub
adc
popf
cli
pushf
dec
cmp
fsub
jmp
pop
loop
fsub
xor
inc
cli
cli
pushf
pop
jns
and
repz
fcomp
cli
sbb
sbb
adc
ret
cli
fsub
mov
or
add
and
add
push
xchg
cli
pop
les
cli
pop
xor
xor
dec
scas
jp
xchg
cli
pushf
test
or
fmul
mov
cli
pushf
xor
sbb
fdiv
jne
(bad)
cs
fcomp
push
cli
pushf
fnsave
inc
pop
cli
sbb
add
mov
add
dec
cli
sbb
jne
sub
cli
pop
ret
adc
jg
fcom
mov
cli
sbb
adc
xor
js
adc
xchg
sti
pushf
in
cmps
outs
aaa
inc
pushf
sti
pushf
push
xchg
push
pop
gs
dec
sub
(bad)
sti
pushf
test
sti
pushf
xlat
pop
inc
sub
mov
cmc
xchg
mov
(bad)
stos
sti
pop
mov
sar
sbb
outs
aaa
push
xchg
sti
pop
adc
fimul
mov
dec
and
retf
sti
pop
stos
in
ins
add
sti
pop
ret
cs
sti
sbb
sbb
cs
jecxz
fsubr
rol
(bad)
call
test
inc
adc
fsubr
leave
ins
sbb
sbb
pushf
push
(bad)
xor
push
mov
add
sti
fcom
xor
pushf
stc
pop
das
add
cmp
pushf
add
sti
fadd
leave
add
sti
pop
mov
pop
inc
pop
sti
pop
(bad)
jl
pop
push
sti
fadd
dec
sti
fmul
sbb
pop
cmp
push
pop
jg
sbb
pop
(bad)
sub
ja
sbb
cli
adc
fsub
inc
push
pop
fs
pushf
test
xlat
push
inc
pushf
test
(bad)
sub
xchg
test
mov
pop
test
(bad)
mov
jge
inc
mov
pop
xor
sub
(bad)
lods
test
mov
push
or
in
jge
sbb
rol
(bad)
retf
jnp
sahf
and
ret
test
cmps
mov
test
repz
jmp
fdiv
in
xchg
test
sbb
inc
adc
xchg
test
sub
inc
add
inc
cmp
xchg
test
pop
shl
pop
sub
inc
ds
and
xor
add
(bad)
dec
test
push
test
imul
sub
pop
test
out
and
xchg
pop
test
sbb
fcomp
pop
push
or
xchg
test
cmp
fsubr
pop
ret
add
and
xchg
cs
popf
test
(bad)
scas
jmp
(bad)
movs
test
sti
int3
push
xor
dec
cs
mov
fdivr
ins
cmp
mov
ret
std
inc
sbb
xchg
test
cs
inc
rol
push
xchg
test
mov
mov
inc
jecxz
fdiv
jge
push
(bad)
jmp
pushf
add
repnz
test
mov
xchg
test
add
cmp
or
adc
jg
inc
pop
pop
sbb
pop
inc
and
sub
leave
sbb
(bad)
xor
daa
pop
test
dec
test
pop
cmp
inc
inc
test
outs
adc
ja
xchg
lea
and
test
mov
test
sbb
popa
retf
jge
pop
je
pushf
mov
mov
ss
test
daa
(bad)
pushf
xchg
inc
and
popf
adc
adc
lods
xchg
movs
xchg
mov
lock
mov
pushf
xchg
sub
xor
retf
repnz
lods
ss
ret
adc
inc
cs
fiadd
add
dec
and
jmp
pushf
fnstenv
sub
xchg
sti
xchg
pop
add
lock
xor
xor
fstp
inc
add
adc
sbb
and
adc
add
sub
sub
and
add
cmp
das
inc
dec
xchg
outs
sub
in
xchg
pop
repz
sbb
ss
xchg
xchg
bound
add
xchg
fcomp
xchg
xchg
pop
and
xchg
jle
adc
xchg
fcom
xchg
call
cld
xchg
in
pushf
pop
pop
fwait
add
in
xchg
pushf
jo
sub
aad
fdiv
jno
add
fld
push
pop
lds
push
inc
retf
mov
shl
xchg
or
mov
lods
pop
pop
mov
mov
xchg
jmp
(bad)
xchg
xchg
fwait
xchg
jle
add
push
jmp
mov
xchg
dec
ja
lahf
scas
add
xor
pop
xchg
fmul
push
xchg
pop
xchg
cmp
pop
inc
inc
xchg
pop
sbb
mov
jg
inc
xchg
xchg
xchg
daa
xchg
add
test
xchg
js
pop
ja
sbb
movs
sub
(bad)
cld
sbb
sbb
pop
push
or
in
sbb
sbb
sub
fld
or
sbb
in
inc
xor
inc
sub
ret
test
stos
or
cmc
mov
sbb
dec
sysret
stos
sbb
sbb
aam
adc
cld
(bad)
cmp
xchg
sbb
and
mov
or
mov
js
sbb
xchg
(bad)
pop
jo
pop
cmp
xor
inc
push
mov
pop
adc
xor
pop
sbb
sbb
dec
pop
dec
sbb
imul
mov
sbb
cmp
cs
cli
sbb
sbb
dec
cmp
lahf
xchg
cdq
add
sbb
pop
sbb
jo
push
(bad)
pop
sbb
sbb
inc
lods
adc
in
pushf
jmp
ds
in
sbb
xchg
sbb
inc
std
sbb
mov
sbb
(bad)
aad
pushf
inc
call
sbb
inc
mov
push
push
xchg
add
pop
push
aad
and
out
cmp
fisubr
sbb
pop
xchg
sbb
outs
cmp
xchg
pushf
in
sbb
(bad)
push
mov
pop
jo
fmul
je
inc
jns
pop
fwait
mov
sbb
dec
sbb
push
sbb
sbb
sbb
cmp
cmp
sbb
(bad)
aaa
sbb
cmovg
xchg
sbb
sbb
adc
pop
mov
in
sbb
cmp
jns
cmp
js
adc
mov
call
fsubr
popa
xchg
and
lds
adc
fld
adc
rol
adc
hlt
neg
xchg
ins
ss
mov
add
pop
mov
fcom
mov
pop
pop
add
inc
fwait
sbb
sbb
mov
sbb
jns
(bad)
pusha
sbb
cmp
js
sbb
mov
and
jno
pop
xor
xor
dec
fcomp
ss
xor
sbb
mov
xchg
fcomp
push
sbb
sbb
sbb
mov
pop
pop
jb
adc
dec
add
pop
aas
sbb
cmp
daa
sbb
cmp
xchg
sbb
mov
sbb
lods
sbb
or
(bad)
mov
mov
pushf
out
sub
pop
scas
sbb
repz
pop
xchg
sbb
pop
(bad)
lahf
sbb
shl
loopne
push
or
pop
lahf
test
(bad)
test
pop
mov
in
sbb
lods
(bad)
aaa
pop
in
sbb
cmp
aaa
xchg
inc
fld
sbb
sbb
lods
movs
aaa
inc
retf
fisub
sub
rcl
push
(bad)
cmp
cmp
mov
lods
and
sub
or
adc
aas
xchg
sbb
pop
mov
add
and
loopne
push
sub
jo
pop
xor
pop
js
pushf
ins
pop
mov
inc
popa
sbb
and
imul
pushf
or
sbb
cmp
inc
dec
sbb
sub
lock
(bad)
mov
jo
pop
mov
sbb
sbb
mov
(bad)
jmp
(bad)
cmps
mov
lahf
mov
jnp
xor
xchg
mov
dec
push
xor
pop
mov
xchg
and
out
cmp
mov
jle
jbe
inc
jmp
inc
loop
fdiv
fimul
pop
ror
pop
retf
mov
ret
mov
and
pushf
jg
dec
push
(bad)
xor
pop
sub
pop
and
(bad)
sbb
xchg
mov
pop
push
pop
(bad)
or
pop
add
xchg
pop
bound
adc
mov
mov
jbe
pop
hlt
adc
xor
jle
pop
das
sub
adc
mov
jbe
inc
dec
mov
enter
mov
lods
jle
(bad)
pop
mov
cmps
lea
lods
lea
mov
sbb
pop
xchg
sbb
mov
cmps
xor
test
cmp
lea
adc
pop
cdq
aas
inc
popf
lea
in
sbb
test
(bad)
jmp
(bad)
repnz
fdivr
sbb
lea
in
int
inc
ret
dec
and
mov
sub
inc
ror
sub
sbb
inc
and
pop
pop
sub
sub
xor
pop
inc
cmp
xor
jb
xor
or
cmp
adc
sub
sbb
add
lea
leave
and
xchg
sbb
sbb
lea
and
add
jbe
fsubr
or
pop
dec
(bad)
fsubr
inc
(bad)
fadd
les
(bad)
pop
lea
sahf
cld
push
xchg
pop
inc
das
mov
pushf
scas
cmp
add
movs
mov
loope
js
(bad)
mov
cmp
(bad)
mov
sbb
mov
mov
test
sbb
popf
mov
movs
sub
xchg
mov
jmp
xchg
mov
mov
cli
mov
repnz
retf
mov
and
sub
ret
mov
loop
fs
fisttp
add
ror
xchg
mov
and
aas
xchg
mov
xor
xor
or
es
add
cmp
sbb
sub
inc
stos
sub
xchg
pushf
mov
mov
inc
mov
cs
dec
mov
ja
pushf
mov
fisubr
(bad)
jg
pop
cli
pop
add
xchg
sbb
dec
retf
or
inc
sub
xchg
(bad)
sbb
jns
cmp
(bad)
pop
fisubr
(bad)
pop
pop
xor
xchg
or
xchg
jmp
aas
inc
mov
jle
inc
movs
(bad)
fdivr
inc
push
pop
lods
(bad)
pushf
push
add
(bad)
pop
xchg
(bad)
pop
fisttp
(bad)
sbb
mov
(bad)
pop
ins
rcl
pop
repz
pushf
mov
xor
je
adc
sbb
cmp
jmp
fcom
pop
cs
adc
adc
sbb
xchg
(bad)
fcom
mov
xor
or
sbb
xor
xchg
(bad)
pop
fsubp
inc
xor
ins
cld
sub
sub
and
repz
sub
(bad)
fdiv
cli
push
sub
std
cmp
pop
inc
(bad)
pop
jge
dec
xor
xchg
cmp
(bad)
ja
fdiv
mov
cmp
outs
(bad)
pop
or
xor
fs
sbb
mov
mov
jecxz
jno
xchg
sub
mov
pop
and
pop
test
or
mov
adc
pop
mov
fmul
cmp
pushf
jl
sbb
(bad)
mov
xchg
xchg
mov
int3
xor
fdivr
dec
push
or
retf
push
or
sbb
gs
(bad)
sti
mov
xchg
lea
pop
xrelease
out
xor
pop
jmp
pop
jo
push
add
mov
mov
pushf
out
xchg
and
adc
push
xchg
mov
test
sbb
mov
mov
test
fwait
xchg
mov
je
mov
inc
ds
cmps
add
inc
mov
dec
mov
push
mov
pop
mov
push
(bad)
addr16
fcmovne
ja
(bad)
outs
mov
add
mov
jl
sbb
push
sub
pop
test
cmp
mov
ds
imul
jno
or
xchg
ja
inc
movs
mov
icebp
cmp
nop
jmp
(bad)
mov
pop
je
imul
mov
adc
ret
jmp
pushf
xor
mov
data16
pop
fisttp
sbb
sbb
cmp
and
pop
or
xrelease
clc
mov
lods
in
inc
add
pop
inc
or
daa
inc
adc
adc
sbb
das
xchg
mov
cmp
sbb
inc
dec
xor
xor
sub
adc
add
mov
jnp
push
xchg
pushf
push
add
sbb
jg
xchg
or
ud2
sbb
outs
mov
sti
int3
and
pop
addr16
sbb
ss
jg
pushf
push
xchg
std
add
je
pushf
mov
mov
add
test
sub
outs
test
mov
cmova
out
pop
inc
movs
mov
mov
pop
mov
rcr
(bad)
mov
sbb
sub
es
retf
fnsave
ficom
and
mov
xor
pop
xchg
add
sbb
sub
jecxz
sbb
xchg
adc
sti
mov
les
xor
lock
or
sub
or
sahf
or
clc
dec
adc
(bad)
jne
pop
sub
push
(bad)
and
and
or
mov
mov
mov
addr16
xor
mov
and
test
add
pop
mov
pop
mov
syscall
pop
xor
pop
mov
in
inc
or
pop
xchg
repz
cs
hlt
mov
cld
mov
aam
sbb
in
sbb
cs
adc
in
mov
cmp
pop
aad
fdivr
ficom
sbb
fisttp
or
mov
out
ja
xor
xchg
add
mov
dec
or
mov
fiadd
inc
stos
mov
mov
xchg
mov
sub
ds
mov
mov
mov
jo
pop
aas
dec
mov
pushf
imul
sbb
or
or
imul
pushf
push
arpl
sbb
pop
data16
dec
mov
inc
mov
ds
dec
inc
jg
inc
aaa
mov
lds
(bad)
das
mov
fstp
leave
or
daa
mov
cmp
pop
mov
adc
pop
mov
or
pop
in
jnp
or
add
fcomp
cld
xchg
pop
dec
xchg
jno
(bad)
cmc
xchg
fdiv
in
xchg
pop
int3
inc
gs
pop
in
sbb
movs
xchg
adc
fst
inc
rcl
xchg
xchg
pop
sti
hlt
pop
daa
xchg
xchg
pop
adc
or
inc
mov
mov
xchg
pop
xor
xchg
pop
sti
and
and
mov
dec
sub
fwait
xchg
sbb
iret
pop
pop
pop
nop
xchg
pushf
xchg
dec
ins
push
pop
mov
xchg
add
inc
js
pop
jne
movs
xchg
fsub
imul
or
add
xchg
fdiv
xor
inc
dec
xchg
pushf
mov
and
push
xchg
pushf
fimul
cmp
xchg
sbb
(bad)
cmp
es
sbb
cmp
inc
das
xchg
fdivr
aaa
xchg
pushf
in
outs
sub
xchg
rcr
inc
pop
xchg
pop
dec
(bad)
stc
das
xchg
sbb
xor
pop
retf
add
xchg
pop
cs
mov
(bad)
in
fmul
sbb
mov
jg
inc
cmc
xchg
pop
in
inc
sbb
or
xchg
pop
fs
adc
retf
add
cmp
rcl
sbb
ficom
ds
mov
mov
sbb
push
mov
adc
cmp
mov
call
sbb
dec
outs
cmp
mov
sbb
nop
xchg
fadd
movs
cmc
cmp
cwde
xchg
pop
push
dec
jno
(bad)
pusha
xchg
fadd
adc
lods
push
cs
jno
(bad)
xlat
call
mov
sbb
mov
xchg
pushf
mov
pop
xchg
fsubr
inc
aaa
xchg
sbb
rol
or
cs
pop
jo
mov
fsub
aas
xchg
pushf
retf
and
xchg
pushf
or
xchg
sbb
jnp
sub
xchg
sbb
or
cmp
(bad)
aam
adc
adc
pushf
or
or
in
xchg
pop
pop
sbb
pop
mov
std
xchg
pushf
jmp
cmc
xchg
pop
add
sar
jle
fst
pop
ret
xchg
dec
and
pop
sti
or
pop
rcl
sbb
pop
jcxz
(bad)
mov
into
and
mov
rcr
inc
mov
sbb
mov
xchg
pop
arpl
sub
pop
adc
(bad)
cwde
xchg
pop
retf
sti
sbb
adc
and
push
inc
sub
popa
xchg
fcom
jns
sbb
sub
pop
jg
xchg
pushf
pop
aaa
sub
jle
fsub
xchg
pop
jmp
retf
adc
or
fmul
in
das
xchg
xchg
pushf
test
pop
xchg
pop
add
pop
jae
push
xchg
pushf
test
cmp
fmul
jnp
xor
jl
adc
sub
sbb
add
add
aad
pushf
xchg
out
sub
pop
fisub
xchg
xchg
pushf
ds
pop
(bad)
int
fsub
sti
cmp
repnz
sbb
sbb
sbb
inc
dec
sbb
loop
pop
adc
add
sub
pop
xchg
xchg
fsubr
xchg
fmul
dec
lods
add
xchg
sbb
movs
jge
inc
mov
or
ins
and
(bad)
mov
mov
fsubr
test
sbb
mov
xchg
sbb
fcomp
icebp
xchg
push
push
pop
inc
xchg
sbb
push
adc
ds
sbb
xchg
pushf
jge
xor
sbb
ins
fild
xchg
pop
xor
addr16
sbb
cmp
cmp
sbb
fmul
adc
pop
shl
mov
pushf
xor
or
add
pop
push
cmp
sahf
sbb
xor
fbld
pop
sub
(bad)
and
ins
and
ficom
cs
rcl
sbb
retf
sbb
test
pop
outs
lock
push
(bad)
sti
nop
pop
lods
shl
pop
fcmovb
iret
cmp
nop
pushf
push
xor
ins
and
aas
pop
cwde
nop
pop
mov
nop
nop
pushf
loope
scas
xor
mov
and
adc
inc
mov
stc
adc
mov
pushf
icebp
sbb
sbb
xchg
inc
aas
inc
mov
ins
cs
inc
nop
pop
jmp
fsub
out
leave
cmp
mov
nop
sbb
sbb
push
xchg
(bad)
xchg
dec
sub
nop
pushf
push
cmps
jnp
(bad)
ja
fdiv
or
(bad)
jl
pop
cmp
movs
aas
pop
or
pop
add
nop
pop
dec
or
pop
inc
sbb
xor
xchg
cmp
inc
sub
cmps
ja
jae
and
cmp
sub
ret
loope
enter
xchg
sbb
ins
leave
or
jno
test
sbb
pusha
or
inc
jecxz
(bad)
mov
xchg
sbb
sbb
xchg
xchg
pushf
push
clc
xchg
fdivr
adc
(bad)
mov
pop
(bad)
nop
xchg
sbb
clc
je
xchg
sub
pushf
cld
rcl
fsubr
dec
sar
fstp
sbb
retf
(bad)
dec
xchg
(bad)
mov
and
inc
and
(bad)
pop
xchg
fdiv
xchg
adc
mov
(bad)
sub
xchg
pushf
shl
repz
addr16
fmul
mov
xchg
pushf
jbe
imul
aaa
pop
add
or
sbb
cmps
ret
adc
xchg
sbb
mov
xchg
pop
jnp
mov
(bad)
adc
fisubr
pop
sub
hlt
and
pusha
les
rcr
aaa
(bad)
xor
cs
retf
ins
add
xchg
xchg
fmul
fist
sub
rcl
sbb
jmp
sbb
or
add
stos
lods
cwde
push
inc
clc
xchg
pushf
jmp
lock
pushf
sbb
lods
and
mov
pop
inc
adc
(bad)
test
pop
xchg
xchg
pushf
sbb
cli
adc
test
jnp
xchg
pushf
mov
inc
xchg
(bad)
inc
xor
dec
xchg
pushf
das
fsubr
xchg
addr16
(bad)
mov
iret
push
inc
cmps
xchg
pop
jmp
int
(bad)
scas
xchg
pushf
xor
sub
xchg
pushf
jge
lds
xchg
adc
test
sbb
mov
or
push
adc
xchg
pushf
xchg
inc
sub
and
and
cmp
and
mov
fadd
ficom
or
ret
pop
gs
ss
retf
ja
retf
xor
cmp
pop
fnstsw
xchg
xchg
pushf
sub
mov
fadd
mov
inc
adc
and
sbb
cmp
xchg
fmul
xchg
nop
daa
(bad)
or
xor
jno
fsubr
jns
sbb
push
sbb
cmp
or
mov
(bad)
pop
xchg
sbb
pop
(bad)
and
push
xchg
fmul
dec
xchg
fsub
add
inc
inc
xchg
fmul
sbb
pushf
push
std
arpl
js
jno
xchg
sbb
movs
xchg
pop
fist
mov
inc
pushf
xchg
pushf
cmp
daa
(bad)
xchg
xchg
sbb
aam
or
xchg
fadd
test
xor
daa
mov
xchg
pushf
dec
xchg
call
pushf
fnstsw
adc
ficom
sub
ja
add
retf
xchg
sbb
call
xchg
fcom
jno
or
cmp
pop
xor
xchg
pushf
(bad)
aaa
fsubr
xchg
pushf
fdiv
sbb
(bad)
adc
xchg
pushf
fsubr
cmp
aas
pop
add
(bad)
pushfw
sbb
add
inc
outs
pushf
pushf
ret
fistp
fcom
mov
or
pushf
pushf
mov
and
pushf
pushf
(bad)
sub
inc
dec
pushf
fcomp
imul
xchg
fdivr
in
aaa
(bad)
pop
pushf
pop
mov
cmc
and
movs
pushf
fdiv
push
adc
inc
lods
pushf
sbb
(bad)
(bad)
and
xchg
fld
(bad)
mov
popa
and
jecxz
sar
lea
inc
xchg
pushf
pushf
push
jno
sub
call
xchg
pushf
fdivr
out
xor
inc
(bad)
dec
ss
repz
pop
scas
mov
adc
sti
pushf
pop
in
lea
pop
ret
pushf
sbb
jnp
add
imul
xchg
cmp
inc
fcomp
pop
and
xor
sub
sbb
xor
adc
xchg
fwait
xor
add
mov
movs
sub
jbe
cmp
push
popf
pushf
pop
retf
inc
outs
popf
fdivr
xor
popf
pushf
lahf
iret
fild
jmp
sbb
xor
add
dec
popf
pushf
inc
out
xor
(bad)
pop
popf
pop
aam
pop
add
xor
adc
lods
popf
pushf
dec
dec
pop
movs
popf
pop
and
popf
pushf
aad
add
inc
mov
sbb
fsub
(bad)
lea
xor
dec
pop
xor
call
xchg
jo
inc
jmp
pop
jecxz
pushf
(bad)
xchg
popf
pop
jmp
push
aaa
inc
repz
pop
adc
or
inc
retf
popf
sbb
xor
add
mov
es
fcomp
cmp
popf
sbb
cmp
fadd
or
(bad)
and
add
mov
sahf
sbb
les
xor
ss
sbb
dec
or
(bad)
jmp
inc
das
push
pop
(bad)
das
sahf
pushf
popf
mov
inc
push
sahf
fadd
add
pop
(bad)
pop
sahf
pop
adc
sub
pop
inc
sahf
pushf
push
js
inc
dec
sahf
fcom
je
pushf
shl
sahf
fmul
sahf
pop
cmps
dec
cmps
push
pop
ins
sahf
pop
(bad)
out
cmp
sahf
pop
cmp
xor
popf
sahf
pop
pop
retf
mov
sahf
pop
ret
push
inc
mov
pop
aas
cmps
inc
sub
pop
mov
inc
mov
cmps
and
sahf
pop
fstp
mov
pop
rcr
aas
pop
fistp
adc
rcr
inc
enter
xchg
pop
lock
pop
and
addr16
jae
sbb
pop
loope
pop
xchg
add
sub
and
pop
pop
cmp
fcomp
push
lahf
pop
cmp
ret
ds
pop
pop
add
fcomp
das
lahf
pushf
(bad)
mov
cmp
mov
or
lahf
fdivr
push
or
in
mov
(bad)
(bad)
fnstsw
pop
inc
lahf
pushf
xor
jl
pushf
jae
push
pushf
mov
ins
lahf
fadd
push
cwde
and
gs
fsub
outs
in
inc
popf
lahf
pushf
jno
fstp
xchg
lahf
pushf
xor
xchg
mov
fmul
mov
fbstp
pop
mov
pop
xchg
std
xor
lahf
pushf
fild
lahf
sbb
or
or
jne
es
rcr
and
enter
aam
push
mov
mov
pushf
jge
dec
adc
icebp
lahf
sbb
call
pop
jmp
cmp
movs
mov
pop
out
sub
fdivr
fld
daa
pop
push
cwde
fcomp
das
pop
pop
cwde
pop
pushf
in
adc
daa
cwde
fsub
retf
inc
das
cwde
pop
cs
push
push
xchg
cwde
fsubr
sbb
cmp
fcomp
inc
cwde
pop
aam
push
ss
dec
cwde
sbb
std
popf
sysret
push
cwde
fsubr
dec
sub
pop
cwde
sbb
mov
cwde
(bad)
retf
sbb
pop
xor
jne
xchg
pop
dec
push
cwde
pop
xchg
pop
cdq
add
sbb
inc
mov
xchg
adc
fmul
mov
ja
inc
stos
cwde
sbb
fdivr
mov
fcom
sbb
xchg
jbe
xchg
cwde
fmul
sub
ss
enter
cmp
xchg
cwde
fadd
jbe
(bad)
fstp
sub
int
and
(bad)
and
jbe
data16
neg
push
inc
push
cdq
pop
les
aaa
and
push
cdq
sbb
rol
pop
push
cdq
fdiv
shr
pop
cdq
pop
mov
das
cdq
sbb
mov
cdq
pop
setle
sbb
js
xor
xchg
fdivr
dec
cdq
pushf
out
jmp
cdq
sbb
dec
lods
sub
pop
cdq
pushf
jae
xchg
cmp
push
cdq
sbb
mov
sub
ins
cdq
sbb
arpl
pushf
sbb
cdq
pushf
popa
std
ja
xchg
pop
test
mov
xor
adc
sbb
pushf
inc
cmp
fsubr
stos
cdq
fdivr
rol
pop
mov
mov
fsubr
stc
add
mov
sbb
cmp
sub
enter
adc
cdq
fdiv
mov
pushf
inc
daa
cdq
sub
rcr
es
jmp
lods
sbb
loope
pop
add
or
pop
stc
cdq
fcomp
xor
inc
mov
and
jbe
pop
jmp
sbb
enter
call
push
inc
outs
call
push
call
pop
call
inc
call
dec
call
xor
pushf
mul
call
and
sbb
mov
call
adc
cld
xrstors
sahf
cmp
jge
les
or
or
repnz
cli
call
loop
sbb
pop
stos
pop
inc
jmp
pop
mov
rcr
push
inc
fistp
and
ret
call
enter
clc
popa
add
mov
pushf
clc
out
xor
mov
push
or
xor
sbb
jne
adc
call
cdq
call
sbb
pop
mov
jle
fsubr
pushaw
sbb
data16
outs
fwait
sbb
mov
sysret
addr16
pop
ret
aas
pop
pop
fadd
jns
xchg
fmul
mov
pushf
nop
movs
outs
sbb
inc
fwait
sbb
xchg
inc
ss
cmp
fadd
xor
pop
jno
dec
cmp
sub
add
pushf
call
dec
fs
pop
adc
fist
or
xor
fwait
sbb
shl
cmp
out
sub
jne
xor
pop
jmp
sbb
ret
pop
jecxz
pop
ror
or
fistp
and
rcr
sub
fwait
sbb
outs
cmps
cmp
rcr
(bad)
mov
fcom
pop
push
or
fwait
sbb
addr16
inc
mov
sub
push
xchg
add
inc
xchg
fmul
sar
(bad)
xchg
fcomp
sahf
fwait
pushf
loope
cld
adc
data16
fcomp
test
sbb
and
pop
ja
sbb
das
sbb
sbb
clc
scas
sbb
inc
movs
pushf
cmp
jmp
sbb
cmp
movs
sbb
jmp
ret
sub
and
pushf
sbb
adc
(bad)
sub
pushf
je
ds
xor
shr
cmp
loop
xchg
push
sbb
or
pop
adc
xchg
movs
pop
adc
movs
pushf
jp
mov
sbb
push
mov
(bad)
rep
fsub
sub
pop
sti
movs
sbb
sti
cmps
and
data16
and
enter
out
add
shl
xchg
movs
pop
jnp
cmp
xchg
jl
inc
test
lods
sub
adc
movs
sbb
jno
sbb
mov
inc
xchg
inc
sahf
movs
pop
xor
dec
pop
pop
xchg
movs
pop
pop
xchg
xchg
sbb
call
fld
xchg
inc
jg
sbb
shl
pop
inc
je
sbb
inc
xchg
cmova
aam
mov
pop
inc
movs
pop
pop
scas
sbb
inc
pop
movs
fsub
sbb
pushf
cmp
xor
rcr
and
repz
gs
rcl
or
movs
pop
faddp
xchg
sbb
add
xrstors
movs
pop
jb
push
fcomp
jmp
sbb
imul
(bad)
jecxz
pop
push
pop
mov
clc
movs
pushf
cdq
or
movs
fdiv
jecxz
sbb
into
push
daa
inc
shl
(bad)
fldenv
cmp
sti
gs
pop
ss
and
mov
jmp
fadd
mov
xor
mov
pushf
xor
in
pop
mov
xchg
cmps
movs
pushf
mov
and
repnz
sub
inc
push
cmps
pushf
push
inc
xor
pop
cmps
pushf
imul
sbb
test
pop
inc
je
sbb
xchg
pop
jbe
mov
sbb
or
xor
sbb
sub
xchg
jl
inc
sbb
pop
inc
add
cmp
cld
push
or
xor
xor
cmp
xor
dec
jae
inc
sub
aaa
(bad)
shl
cs
fsub
add
cmps
pushf
jmp
enter
inc
inc
cmp
lock
fsubr
push
and
test
cmp
xchg
cmps
sbb
imul
cmp
(bad)
xchg
cmps
pushf
jno
jnp
xchg
aam
pop
mov
adc
xchg
aaa
pop
mov
ins
or
mov
sbb
mov
cmps
pushf
jmp
cmps
fdivr
jo
sbb
cmp
pop
push
cmps
fsub
dec
cmps
sbb
(bad)
div
inc
inc
cmps
sbb
pop
cmp
cmps
sbb
jo
sub
jne
sbb
stos
(bad)
(bad)
ins
cmps
pop
sar
xor
cmps
sbb
mov
and
sbb
das
sbb
push
xchg
adc
or
es
add
cmova
cmps
fdiv
jns
xchg
cmps
pushf
mov
mov
pop
sub
sbb
cmps
pushf
sub
jp
(bad)
(bad)
pop
xchg
cmps
fsubr
enter
outs
lods
xor
shl
xbegin
push
cmp
icebp
cmps
fadd
jmp
fsubr
xchg
cmps
sbb
sub
pop
(bad)
cdq
cmps
sbb
adc
pop
mov
xchg
cmps
sbb
jecxz
aas
inc
sahf
cmps
pop
sbb
cmp
cmps
pop
jp
sar
scas
cmps
pushf
lea
sub
mov
fdiv
pop
or
mov
leave
es
inc
mov
push
pop
dec
mov
cmp
push
mov
or
sub
mov
add
pusha
xchg
sub
int3
push
sub
jge
pop
cs
adc
add
cmps
sub
xchg
(bad)
(bad)
adc
xor
sbb
add
and
sbb
mov
and
xor
sbb
cmp
add
shl
inc
enter
pop
pop
sub
pop
add
fsub
ds
loope
pop
xchg
lods
icebp
sub
mov
xor
icebp
mov
sub
push
mov
mov
cs
xchg
xor
(bad)
test
inc
xchg
mov
or
mov
cmp
repz
or
mov
sbb
mov
or
into
inc
sbb
retf
aaa
jnp
xchg
sbb
mov
cs
ins
mov
add
mov
sub
mov
add
jne
pop
outs
add
adc
adc
cmp
add
xor
push
fsubr
(bad)
adc
sub
sub
es
and
cs
cmp
xor
fnsave
pop
enter
stos
jne
mov
push
or
mov
cmp
shl
xor
jmp
pop
adc
inc
push
cmp
stc
mov
sbb
mov
push
(bad)
jbe
pop
mov
or
jle
pop
lock
xchg
fsub
daa
icebp
add
jae
mov
fcom
pop
mov
add
inc
mov
xor
inc
push
shl
fs
ss
mov
je
xchg
sbb
lods
mov
ja
inc
mov
pushf
jmp
or
xchg
cmp
addr16
xor
xchg
mov
adc
mov
xor
loop
sbb
sub
inc
jmp
(bad)
shl
cmp
mov
sbb
adc
and
pop
or
pop
(bad)
in
xor
cmp
adc
and
add
call
fdiv
sbb
and
add
sbb
or
vmptrst
fadd
jbe
(bad)
sar
pop
outs
mov
add
mov
adc
cmps
push
aas
(bad)
push
mov
sub
push
add
push
mov
add
mov
cmp
(bad)
mov
sbb
cmp
sbb
push
sub
mov
xchg
mov
add
lea
adc
lods
mov
inc
cli
mov
or
mov
sbb
jmp
(bad)
loop
pop
push
xor
cmp
(bad)
aas
xchg
mov
cmp
or
ret
mov
adc
cmp
sub
xor
cmp
sub
adc
xchg
inc
sbb
aas
(bad)
adc
sub
test
mov
sub
data16
cs
outs
mov
ds
jbe
pushf
jg
xchg
mov
adc
xchg
pushf
es
out
sub
dec
mov
xor
push
mov
ds
pop
mov
xor
das
cmp
lods
pop
push
ins
jo
inc
mov
pushf
mov
sahf
or
lods
fdivr
xlat
push
aas
inc
test
and
lods
fdivr
adc
pop
xchg
lods
pop
scas
dec
xchg
sub
call
(bad)
loop
fcom
in
es
jmp
(bad)
rep
fcom
sti
lods
pop
aam
das
sub
ret
lods
sbb
arpl
(bad)
retf
lods
fcomp
or
shr
and
fsubr
push
(bad)
and
aas
xchg
lods
sbb
mov
lods
fcomp
lods
(bad)
ficomp
mov
or
inc
or
cmp
xchg
div
xchg
lods
sbb
sbb
inc
outs
lods
pop
aas
in
xor
pushf
dec
mov
add
lods
sbb
mov
lods
pop
int
stos
add
dec
lods
pop
add
sub
pop
inc
lods
pop
jbe
std
sub
pop
lods
sbb
cmps
xor
(bad)
push
lods
pushf
repz
pop
lods
lods
fsubr
sub
outs
in
xchg
sub
mov
pop
vmovd
xchg
addr16
test
xchg
mov
(bad)
xchg
lods
pop
fisubr
mov
jmp
pop
loop
pushf
outs
not
sti
lods
pushf
movs
in
out
inc
rep
pop
std
mov
sbb
retf
lods
pop
and
push
and
ret
lods
pop
js
icebp
cmp
fsubr
pop
shr
(bad)
sub
xchg
lods
fdivr
xchg
and
cmp
pop
xor
pop
or
mov
cld
or
lods
pushf
mov
ins
adc
js
cs
push
lods
pop
xor
pop
lods
sbb
mov
xor
test
das
pop
dec
lods
pushf
into
cmp
xchg
pop
sub
rcl
inc
jg
pop
pusha
(bad)
mul
lods
fmul
ins
lods
pushf
in
repnz
sub
cmp
pushf
scas
sbb
in
and
test
aaa
xchg
(bad)
sub
mov
sbb
sahf
push
and
mov
cvttps2pi
lea
jmp
pop
cmp
fisubr
sbb
push
mov
out
scas
pushf
mov
and
iret
ins
push
sbb
jle
add
pop
and
xchg
scas
pushf
mov
aaa
scas
fdivr
addr16
xor
aas
scas
sbb
sub
add
daa
scas
sbb
pop
jno
pop
sub
pushf
mov
scas
fmul
sbb
pop
sbb
fsub
push
bound
inc
add
fcomp
scas
sbb
fdivrp
adc
jne
sbb
push
push
(bad)
jge
sbb
aam
cmp
gs
sbb
cld
cmp
xchg
pop
mov
or
inc
push
scas
pop
ficomp
sub
pop
scas
sbb
mov
scas
fsubr
add
dec
scas
pushf
xchg
push
(bad)
aaa
es
inc
mov
lods
add
mov
mov
pushf
scas
loope
and
nop
scas
pop
les
scas
fdiv
aaa
jnp
xchg
lds
pop
mov
cmp
icebp
scas
sbb
icebp
pop
aas
(bad)
stc
scas
fsub
mov
scas
fcomp
pop
adc
out
pushf
pushf
jno
and
fisubr
pop
(bad)
(bad)
scas
sbb
and
scas
sbb
push
mov
sbb
cld
xchg
or
mov
add
aaa
scas
sbb
std
mov
xchg
scas
sbb
fmul
pop
test
scas
pop
clc
mov
scas
pushf
xor
push
sbb
and
fcom
jge
fsubr
js
sbb
jne
sbb
xor
sub
das
bound
pop
bound
or
jmp
pushf
pop
xor
scas
pushf
jle
xchg
pop
inc
inc
scas
pushf
adc
(bad)
mov
inc
push
inc
mov
fadd
stos
test
js
jne
(bad)
mov
cmp
inc
cwde
test
ret
mov
or
nop
test
xor
add
test
pop
out
cmp
mov
test
in
add
aas
(bad)
icebp
test
and
adc
(bad)
jmp
aas
push
pop
(bad)
test
mov
(bad)
test
(bad)
loop
or
into
test
and
test
pop
xor
movs
popf
mov
pop
fmul
mov
pop
daa
cmp
inc
aaa
test
jnp
dec
or
cmp
pop
xchg
xchg
pop
(bad)
adc
fadd
mov
sub
movs
xchg
add
sbb
mov
sbb
jg
sbb
ins
test
xor
sub
fmul
inc
sbb
jp
sbb
and
xchg
sbb
pop
push
xor
add
cmp
xchg
fdivr
fldcw
mov
cmc
sbb
mov
ins
adc
inc
adc
pop
mov
pushf
pop
iret
out
or
test
or
pop
mov
inc
mov
pop
inc
nop
test
add
cdq
test
aaa
xchg
test
ss
out
sbb
in
cmp
icebp
mov
test
xor
mov
test
push
inc
fild
and
xlat
test
das
inc
das
test
sbb
and
pushf
lahf
pop
mov
pop
xlat
stos
repnz
mov
pushf
data16
popf
push
xchg
stos
sbb
sbb
xchg
adc
sub
pop
ins
test
or
test
and
test
or
jb
sbb
into
lea
(bad)
dec
test
push
pop
inc
test
add
test
xor
sbb
shl
(bad)
stos
stos
pushf
pop
sahf
cld
add
movs
mov
xor
mov
lock
mov
fdivr
stos
fadd
ds
inc
sub
sbb
ja
cmp
pop
mov
(bad)
jmp
rcl
fisubr
pop
mov
push
adc
cmp
stos
pushf
inc
mov
stos
pop
mov
out
pushf
loop
push
cmp
stos
sbb
add
cmp
pop
stos
sbb
dec
out
cmp
xchg
add
or
pop
popa
adc
or
sbb
xor
and
xor
sbb
repnz
cmp
xchg
pop
inc
and
mov
fdiv
sbb
push
stos
pushf
imul
push
pop
pop
stos
pushf
xchg
(bad)
sbb
stos
pushf
(bad)
dec
aad
inc
dec
stos
fdiv
adc
stos
pushf
pop
aaa
push
pop
xchg
fmul
arpl
cmp
dec
aaa
pop
inc
xchg
stos
sbb
or
sbb
mov
stos
pop
lds
sub
ss
cmp
pop
in
inc
adc
mov
mov
(bad)
mov
sahf
xor
xor
imul
stos
sbb
movs
mov
sahf
call
stos
fsub
data16
(bad)
stos
fdivr
or
(bad)
(bad)
stos
fadd
push
add
imul
xor
fcom
fdivr
pop
stos
pop
dec
dec
shr
xchg
lahf
jnp
inc
or
pop
rcr
inc
add
fsubr
mov
stos
sbb
push
and
(bad)
xor
stos
cmp
sub
xchg
and
xor
pop
push
aam
(bad)
push
stos
sbb
int3
stc
or
rol
add
inc
stos
pushf
add
stos
pop
push
loopne
or
jae
pushf
stos
mov
stos
(bad)
pop
sbb
pop
arpl
sub
fwait
mov
je
mov
fmul
mov
mov
mov
jns
dec
sub
mov
fadd
mov
rcr
inc
sub
hlt
(bad)
aaa
xchg
mov
pop
test
add
into
mov
movs
cmp
inc
(bad)
mov
stc
das
js
pop
fidiv
inc
out
fdiv
xor
out
mov
test
mov
(bad)
jbe
cmp
push
xchg
mov
inc
xor
xor
mov
(bad)
adc
pop
test
lods
sbb
mov
outs
jg
and
sub
adc
inc
xor
sub
xchg
mov
sbb
mov
mov
xchg
jle
cmp
mov
shl
pop
or
pop
mov
sub
bound
xchg
pushf
cdq
mov
pushf
in
xor
fmul
repz
inc
xor
(bad)
mov
pop
(bad)
nop
mov
retf
mov
mov
and
mov
pop
sub
sbb
pushf
sbb
pop
clc
add
cs
mov
xor
pop
shl
inc
(bad)
mov
adc
mov
cld
sahf
or
(bad)
mov
and
daa
sub
out
mov
pop
xor
mov
cmp
pop
(bad)
popa
or
sbb
mov
dec
inc
adc
xchg
cmp
in
sub
adc
sbb
jb
pop
(bad)
sub
sbb
cs
xor
test
xchg
sahf
sbb
xor
enter
mov
pop
cmp
xchg
fsub
mov
jecxz
jge
xchg
sbb
inc
retf
sub
push
pop
pop
dec
pop
arpl
sbb
mov
lds
out
xchg
pop
and
cmps
xchg
xor
pop
xor
inc
cwde
mov
iret
call
ds
ds
push
jmp
mov
cmp
inc
mov
(bad)
cs
mov
pop
and
cmp
(bad)
leave
mov
gs
xchg
jge
pop
cmps
mov
jmp
scas
mov
das
test
inc
xchg
mov
inc
mov
add
xor
pop
xchg
sysret
(bad)
mov
aaa
cmp
fsubr
cmps
and
jl
fcom
mov
retf
das
jno
xchg
ss
pop
(bad)
push
mov
fs
mov
cdq
xor
pop
inc
mov
call
mov
xchg
pop
xor
push
sbb
xor
ret
cmp
or
and
adc
sub
sub
mov
push
push
loopne
pop
sbb
sub
add
sbb
or
das
inc
repz
dec
mov
mov
mov
add
inc
loopne
fsub
mov
sbb
call
xor
inc
shl
xor
fnstenv
or
jmp
mov
xor
mov
fmul
movs
push
inc
mov
pop
mov
scas
mov
fiadd
inc
cmps
mov
push
in
and
sahf
mov
pusha
aaa
cs
xchg
xor
pop
(bad)
mov
(bad)
outs
adc
xchg
sub
icebp
mov
pop
je
sbb
pop
add
ins
mov
into
inc
das
adc
mov
xor
mov
inc
out
or
push
mov
movs
fisub
(bad)
js
pop
inc
inc
mov
cmp
or
pop
cmp
fs
xor
or
sub
cs
and
push
pop
sbb
add
mov
or
sub
add
sbb
sti
mov
jnp
pop
cmp
add
call
sub
inc
loopne
pushf
or
fsubr
dec
adc
int3
ja
xchg
mov
jecxz
pop
adc
push
dec
adc
xchg
cmp
fmul
mov
pushf
icebp
data16
inc
mov
sbb
inc
xchg
xor
inc
(bad)
mov
mov
xchg
mov
(bad)
add
xor
sub
fcomp
and
inc
ins
mov
add
adc
in
or
pop
jl
fsub
and
sbb
jge
push
(bad)
dec
mov
test
das
(bad)
push
mov
shl
daa
pop
pop
mov
xor
xor
jne
and
sub
or
xor
sub
cmp
and
add
pop
pop
or
adc
jmp
pushf
sub
mov
pop
sar
xchg
mov
loope
stos
and
clc
mov
sub
xor
inc
shl
xchg
mov
and
sbb
dec
pushf
cs
fnstenv
add
mov
push
cmps
mov
mov
dec
adc
out
or
mov
add
aas
cmp
mov
and
xchg
sub
lahf
mov
int3
mov
mov
pop
inc
sbb
fsqrt
pop
(bad)
fs
mov
jl
sbb
icebp
mov
inc
je
sbb
out
sbb
mov
jo
jecxz
mov
sbb
mov
cmc
pushf
add
(bad)
push
mov
adc
in
sbb
sub
dec
sub
repz
inc
cmp
xchg
mov
xor
cmp
or
xor
add
xor
sbb
ds
adc
xor
addr16
pop
loopne
pushf
mov
clc
mov
aam
ins
add
lock
xor
cmc
cmp
enter
mov
mov
mov
and
fnstenv
adc
pop
shl
mov
pop
dec
movs
cmp
mov
mov
aad
mov
mov
xor
cmc
add
mov
mov
mov
iret
add
in
mov
(bad)
scas
mov
cmp
mov
pop
(bad)
cld
aas
xchg
popf
scas
retf
xchg
(bad)
mov
mov
or
sub
(bad)
je
fdiv
xchg
adc
jge
pop
mov
mov
repz
adc
pop
ins
mov
xor
adc
retf
and
sbb
adc
add
adc
or
and
nop
or
pushf
cmps
fsub
add
scas
lea
inc
sub
aas
pop
shl
sub
out
sbb
mov
sbb
mov
push
hlt
pop
push
xchg
mov
stos
(bad)
aam
xchg
mov
cmp
stc
cmp
loope
fadd
cmp
out
pop
lods
mov
or
shl
ds
xchg
mov
sub
push
add
push
lods
stos
xor
xchg
add
enter
inc
mov
sbb
mov
es
scas
mov
jae
in
adc
movs
mov
mov
in
xor
outs
rol
push
mov
sub
pop
(bad)
dec
mov
dec
and
pop
mov
pushf
or
jge
pop
loope
sub
xchg
pushf
ss
add
inc
sub
mov
cmps
add
adc
fisttp
outs
and
mov
add
mov
mov
add
and
xor
xor
push
xchg
mov
into
jp
and
and
adc
je
cmp
cmp
push
(bad)
leave
mov
xor
fidivr
(bad)
out
pop
dec
es
sub
scas
lea
(bad)
cmc
mov
aas
xchg
mov
sbb
jns
push
xchg
sub
fdivr
cwde
mov
adc
mov
inc
pop
inc
test
imul
aaa
push
mov
xor
dec
mov
sub
inc
mov
sbb
pop
mov
xor
push
lods
add
ins
mov
adc
gs
pop
pop
jge
fadd
fsub
inc
jb
fdivr
or
mov
ss
xchg
mov
add
adc
inc
sub
(bad)
and
xchg
mov
xor
mov
enter
push
xchg
aas
inc
sar
inc
fdivr
sbb
mov
jmp
mov
pop
or
push
push
(bad)
stc
mov
pop
(bad)
push
mov
cmp
mov
daa
xchg
pop
and
imul
mov
mov
mov
add
push
mov
xor
mov
mov
sbb
dec
mov
or
ret
mov
adc
in
inc
xor
arpl
inc
xchg
mov
and
mov
adc
test
and
mov
adc
repnz
xor
and
clc
sbb
loop
pushf
inc
jo
cmp
jmp
sbb
or
mov
adc
jl
cmp
ret
mov
sbb
enter
and
pop
inc
xor
or
cmp
adc
and
xchg
mov
add
adc
or
sbb
xor
mov
add
push
mov
sub
jle
pushf
xor
fcom
push
(bad)
pop
call
pushf
rcl
out
xchg
pushf
sub
push
mov
add
test
mov
sbb
mov
push
sub
jne
mov
pushf
int
in
or
fsub
or
popf
mov
adc
xchg
mov
adc
mov
adc
cmp
inc
cli
mov
aas
pop
repz
ds
mov
(bad)
jecxz
sbb
xchg
fstp
or
sar
or
lock
mov
adc
dec
pop
push
pop
xchg
mov
push
pop
sub
cmp
mov
cmp
sbb
add
push
mov
add
rol
pop
pop
push
mov
push
xchg
pushf
jp
pushf
pop
inc
outs
mov
push
(bad)
ja
fadd
cmps
add
inc
jg
pushf
es
mov
xor
jmp
xor
push
mov
add
mov
add
movs
mov
add
mov
add
mov
fdivr
jl
sbb
mov
enter
mov
adc
(bad)
mov
pop
xchg
mov
push
(bad)
call
pop
loop
pushf
pop
jmp
mov
mov
pop
repz
ss
sti
mov
add
dec
scas
sub
enter
push
sbb
sar
cmp
mov
adc
and
push
pop
sub
and
inc
mov
(bad)
cmp
or
push
mov
sbb
call
(bad)
mov
cmp
xchg
retf
enter
push
ds
mov
mov
pop
rol
pop
add
and
mov
and
mov
xor
mov
add
mov
cmp
push
pop
retf
push
mov
or
inc
mov
add
dec
mov
das
pop
jb
pop
jge
jle
inc
jnp
sbb
add
sbb
(bad)
ja
xchg
mov
pop
mov
sbb
shl
pop
mov
add
js
xchg
sub
mov
sub
sub
cmp
jnp
fcom
aam
xchg
fcom
mov
add
pop
jmp
add
mov
xor
sahf
or
(bad)
xlat
mov
cmp
mov
cs
ret
mov
push
inc
(bad)
mov
and
mov
xor
mov
fsub
pushf
mov
mov
mov
sbb
mov
sbb
xlat
mov
add
js
jne
data16
jbe
ja
mov
je
sub
pop
jmp
out
jl
jmp
stos
xchg
mov
cmp
mov
arpl
xchg
(bad)
mov
and
mov
sbb
arpl
sbb
jbe
data16
inc
arpl
jmp
kmovw
or
mov
pop
cmp
(bad)
js
ins
xchg
ja
pop
xchg
mov
or
mov
lds
js
jp
mov
stos
es
clc
push
or
jmp
es
cmp
add
and
jns
xchg
js
stos
fdiv
dec
hlt
clc
xor
or
test
shr
rol
sbb
and
sar
inc
xchg
int3
stos
mov
mov
sar
inc
mov
and
fistp
lahf
stos
pop
mov
pop
out
int
pop
cmc
and
mov
lds
es
pop
cmp
rol
adc
push
xchg
clc
faddp
push
xchg
push
stos
pop
mov
or
or
push
jp
lea
dec
retf
and
mov
dec
push
dec
dec
mov
and
les
sub
pop
mov
push
pop
sub
xchg
sti
(bad)
mov
fist
fist
popf
scas
mov
adc
(bad)
(bad)
fld
xchg
push
retf
stos
sti
inc
cmp
stc
sbb
fwait
mov
je
xlat
stos
pop
mov
inc
mov
xor
pop
mov
cs
jmp
(bad)
scas
mov
pop
xchg
retf
jne
xchg
dec
outs
mov
mov
xor
dec
hlt
in
(bad)
xchg
loop
add
rcl
fsub
xor
dec
inc
jo
add
int
lahf
and
adc
scas
jae
inc
and
out
lods
xchg
mov
ss
add
pusha
lods
mov
(bad)
cmp
sub
pop
mov
pop
mov
xchg
mov
mov
mov
sbb
mov
ss
jp
mov
jnp
sti
mov
mov
mov
pop
jnp
xchg
shl
xchg
in
les
test
xchg
xor
jnp
pushf
or
xor
inc
push
mov
inc
sbb
in
rcl
mov
mov
dec
imul
in
(bad)
sti
cmp
scas
xchg
inc
sbb
repnz
xchg
push
addr16
sti
inc
sbb
in
mov
std
lods
jg
dec
test
(bad)
xchg
out
xchg
xor
pop
inc
retf
xchg
popf
out
xchg
sbb
add
mov
fsub
jge
jae
clc
repnz
xchg
dec
dec
pop
push
xor
js
test
dec
push
cwde
sub
outs
add
popf
jae
mov
shl
mov
retf
push
xor
and
adc
pop
xchg
jbe
mov
xchg
repnz
popa
inc
sbb
jp
inc
or
jp
add
xor
cmp
mov
call
adc
or
cmps
xor
popf
mov
push
pop
(bad)
test
inc
fnsave
mov
cmps
dec
xchg
arpl
xchg
inc
add
pop
cld
push
call
addr16
mov
xchg
xchg
inc
sbb
repnz
xchg
push
addr16
sti
inc
sbb
in
mov
std
lods
jg
dec
test
(bad)
xchg
out
xchg
xor
pop
inc
retf
xchg
popf
out
xchg
pop
pop
sbb
popf
xlat
jle
clc
or
(bad)
pop
sbb
in
inc
sbb
inc
cmp
clc
out
mov
(bad)
pop
sbb
in
mov
clc
icebp
cmp
clc
sbb
push
popf
pop
dec
mov
or
imul
(bad)
clc
out
sbb
in
mov
dec
or
pop
es
add
and
push
test
lahf
jge
inc
call
dec
add
adc
retf
mov
(bad)
jmp
inc
mov
xchg
neg
(bad)
and
inc
or
inc
xchg
xchg
call
xor
xchg
and
xchg
push
in
js
fxtract
(bad)
ds
sub
es
xchg
ret
push
sbb
int
push
sbb
and
in
sbb
xchg
inc
sbb
std
sbb
sub
cmps
inc
(bad)
pop
xchg
cmp
inc
cwde
add
inc
aaa
sbb
ins
and
xchg
dec
pop
pop
ja
sbb
mov
dec
cmc
push
inc
cwde
cld
xchg
xchg
mov
in
and
xchg
mov
jp
xchg
in
cmps
jae
sbb
xchg
sub
mov
fld
pop
inc
sbb
xchg
sbb
xchg
sbb
xchg
fbld
mov
xchg
xchg
scas
dec
fisub
out
sbb
cmps
inc
sbb
inc
fwait
add
ficomp
test
xchg
mov
push
dec
movs
pop
popf
jae
mov
fbld
dec
cmp
retf
int3
fsub
les
imul
xchg
mov
pop
js
xchg
add
add
fld
std
in
mov
mov
pop
fnsave
mov
or
leave
fmul
popf
mov
dec
pop
xor
mov
and
cs
jmp
ss
jg
jmp
and
out
mov
inc
call
pop
dec
xchg
cmps
ins
cwde
or
inc
mov
inc
call
pop
dec
stos
cmps
ins
cwde
add
inc
push
and
or
jmp
(bad)
fdiv
cli
pop
sub
xchg
in
and
jae
mov
and
xchg
xor
call
shl
dec
xchg
clc
push
sbb
mov
and
in
xor
mov
mov
sbb
add
mov
loop
aas
xchg
and
dec
xor
call
sub
adc
cmp
sbb
in
mov
mov
(bad)
cmp
mov
cmp
and
fstp
dec
sbb
push
pop
dec
xor
mov
loope
popf
mov
cli
push
call
inc
xchg
pusha
push
sub
scas
std
in
outs
xchg
mov
cmp
test
ins
nop
push
jo
inc
add
pop
out
lahf
xchg
mov
ja
mov
aaa
call
dec
data16
jne
mov
fidiv
or
dec
add
xchg
dec
cmp
inc
adc
pusha
inc
popf
jae
mov
shl
xchg
jg
outs
arpl
xor
jo
dec
mov
fsub
pop
mov
movs
push
or
and
cmp
fist
mov
mov
lea
movs
pop
dec
jecxz
xor
iret
sub
arpl
arpl
mov
cmp
mov
mov
sbb
inc
iret
rcl
(bad)
sbb
retf
fild
push
scas
scas
push
xor
daa
inc
scas
out
mov
out
fcom
cmps
lea
and
jb
out
mov
in
fcom
movs
lods
fst
daa
ja
shl
js
shl
cmp
popa
ret
mov
setge
daa
push
ficom
out
ficom
popa
fwait
sbb
mov
es
xchg
mov
cs
shl
ja
push
es
xchg
loop
sbb
jecxz
cdq
(bad)
arpl
(bad)
(bad)
or
xlat
arpl
fst
data16
(bad)
and
sbb
and
fwait
xchg
mov
in
(bad)
cmps
jo
push
daa
xor
shl
jns
adc
fcmovbe
daa
add
adc
push
pop
xchg
and
pop
xchg
bound
and
pop
push
arpl
shl
pop
sbb
jecxz
fwait
push
cmps
out
nop
mov
lods
(bad)
mov
mov
pop
in
sahf
shl
pop
push
and
pop
xlat
out
pushf
xchg
jecxz
pop
push
out
sbb
mov
adc
adc
mov
in
mov
jno
mov
cld
xor
mov
push
cmps
pop
dec
outs
mov
lods
out
fwait
push
jl
cdq
pop
cmps
pushf
lock
jge
iret
sub
mov
ror
pop
ror
bound
xor
mov
sbb
and
jbe
xlat
mov
mov
mov
dec
arpl
loopne
inc
loopne
jns
add
add
je
and
ret
fcomp
cld
lds
lods
lea
std
mov
dec
sbb
adc
mov
dec
mov
hlt
loope
pop
mov
pop
mov
outs
popf
out
mov
repz
popa
inc
xor
ins
aas
xor
mov
test
push
add
arpl
and
xor
out
mov
pause
out
cmp
xor
dec
jge
pop
pusha
mov
stos
lods
sub
repz
mov
scas
jne
lods
lea
mov
pop
sbb
push
mov
hlt
sbb
ret
aad
addr16
loope
repnz
je
int3
cld
mov
test
pmuludq
or
jno
push
je
mov
(bad)
(bad)
dec
lods
rcl
out
mov
repz
std
inc
cmc
imul
fnstsw
dec
mov
mov
mov
mov
test
mov
jl
pop
dec
inc
mov
sub
sub
and
adc
pop
mov
ins
outs
enter
(bad)
pop
(bad)
jg
imul
mov
xchg
popf
sbb
push
cld
cmc
out
mov
push
push
xchg
jp
int
mov
push
push
sbb
inc
aam
sbb
ins
xchg
adc
mov
push
push
lahf
jno
in
dec
std
daa
push
ss
push
retf
mov
pop
stos
inc
push
sbb
cmp
ins
cs
(bad)
jmp
test
sbb
imul
push
je
pop
test
lahf
mov
test
pop
nop
shl
aas
cmps
mov
cmp
aas
xchg
dec
dec
jmp
(bad)
shr
lahf
xchg
xor
lods
clc
xor
test
dec
retf
test
push
jnp
adc
inc
xor
add
ins
push
mov
ficomp
call
fbld
data16
cmps
inc
lods
cmp
or
jecxz
test
mov
aaa
mov
lock
jo
mov
push
inc
jp
inc
fidivr
jne
outs
mov
push
test
dec
test
xchg
jp
push
shr
adc
xor
add
mov
mov
dec
pop
jnp
mov
mov
mov
shl
cmp
sbb
adc
or
mov
adc
mov
sbb
sbb
dec
or
nop
jge
mov
mov
jne
repz
push
test
js
push
sbb
adc
xor
add
dec
pushf
adc
pop
mov
retf
and
mov
mov
mov
scas
cmp
push
fistp
or
mov
xor
sbb
enter
xchg
cmp
inc
mov
mov
lods
pop
mov
push
test
mov
push
push
cli
jmp
push
clc
inc
xor
add
rcl
lea
mov
sub
cmp
and
pop
sub
(bad)
shl
or
icebp
xor
mov
and
and
ficomp
mov
xor
lods
test
sahf
test
adc
push
adc
add
xor
push
adc
fild
call
fbld
push
mov
cmps
mov
cmp
and
mov
out
mov
cmc
lods
fstp
test
inc
leave
lods
fadd
sub
xor
imul
ficomp
xchg
and
pop
cmps
loop
sub
stos
ds
pusha
or
imul
pavgw
mov
lock
jo
mov
lods
inc
mov
pop
xchg
mov
mov
push
test
out
sub
adc
jl
(bad)
sub
xor
add
ret
mov
mov
and
sub
stos
ds
jge
xor
or
jecxz
push
jno
xor
sbb
clts
jo
cdq
jge
mov
mov
cmc
lods
repz
push
test
jo
lods
sub
sub
xor
xchg
shr
adc
push
es
jg
retf
jecxz
mov
cmps
cmp
aas
cmps
imul
rol
ins
xchg
xor
(bad)
lods
jge
and
pop
xchg
sub
cld
sub
mov
add
(bad)
shl
add
mov
pop
mov
jmp
cmps
fidiv
gs
iret
cs
jg
sbb
sub
xchg
pop
dec
ds
mov
sbb
jbe
lahf
xchg
xchg
cld
sub
push
ret
(bad)
rcr
(bad)
dec
arpl
xchg
ins
cwde
pop
cmp
or
push
mov
jecxz
mov
cmps
sub
outs
xor
iret
scas
std
cmp
add
xchg
jo
xchg
jmp
mov
int
fidivr
mov
mov
cld
sub
mul
mov
(bad)
dec
arpl
xchg
ins
cwde
pop
inc
push
adc
test
dec
inc
xchg
xor
lahf
outs
add
ret
cmps
jbe
cmp
mov
adc
into
push
call
adc
rdpmc
jo
mov
int
mov
pop
xchg
mov
sub
sub
clc
add
pop
add
mov
fs
sahf
lahf
sub
adc
xchg
sbb
icebp
mov
popa
xlat
push
js
mov
xchg
ret
mov
pop
pop
push
aaa
push
inc
cmovge
and
mov
and
xchg
mov
jo
sahf
mov
inc
out
mov
mov
test
adc
outs
mov
mov
xchg
jg
xchg
hlt
ins
call
pop
js
jmp
movs
push
mov
cmps
mov
cmp
jl
movs
and
mov
pop
xor
push
fcmovne
sbb
lods
jge
cmc
dec
inc
dec
mov
mov
test
movs
int
test
mov
xchg
mov
outs
call
pop
cmp
push
mov
movs
mov
sub
sub
cmps
rcr
(bad)
ror
lea
clc
xor
push
jg
add
push
std
int
push
mov
mov
test
into
int
xchg
dec
mov
xchg
(bad)
ja
fbld
pop
lock
add
std
sub
sub
or
jecxz
xor
push
or
jo
mov
int
repnz
mov
test
dec
int
out
mov
xchg
imul
cs
stc
sbb
sub
test
cmc
lea
clc
lea
rcl
push
sbb
mov
add
jg
movs
jae
loop
and
psllw
mov
cmp
sbb
mov
movs
xor
outs
jbe
inc
popf
mov
lods
sub
in
inc
mov
mov
inc
aam
pop
jge
bound
push
mov
seta
cmps
adc
nop
data16
xchg
fcom
and
push
loope
xchg
push
pusha
es
nop
loop
nop
push
daa
cs
push
and
push
push
addr16
mov
cmp
(bad)
mov
add
mov
mov
movs
adc
daa
xchg
adc
pusha
fst
xchg
mov
daa
xchg
xchg
loop
aam
scas
aam
pusha
in
nop
shl
mov
push
movs
aaa
push
pop
movs
mov
xchg
xlat
loop
(bad)
push
loopne
(bad)
aad
mov
adc
aam
push
and
push
push
mov
mov
xlat
xlat
loop
push
push
data16
xchg
daa
jae
push
loopne
rcl
loope
push
xchg
mov
test
push
and
xlat
addr16
xchg
and
mov
and
xchg
es
dec
pop
addr16
aad
mov
retf
push
cmps
test
shl
repnz
adc
mov
push
out
or
out
mov
add
adc
add
xchg
mov
iret
or
mov
xchg
mov
push
or
loop
int3
push
and
dec
adc
jbe
inc
jb
loop
cmps
aas
fwait
inc
dec
mov
mov
jmp
popf
or
cdq
inc
jb
cdq
inc
jb
fldenv
mov
fmul
call
jb
(bad)
adc
stos
pop
jb
pushf
(bad)
adc
ds
jb
sbb
stos
rcr
add
sbb
dec
jb
mov
adc
pop
xor
addr16
cdq
inc
cmp
(bad)
mov
idiv
pop
jle
mov
sbb
dec
lea
stc
sub
cmp
mov
or
outs
xchg
mov
pop
leave
inc
int
and
add
inc
mov
add
js
mov
jb
cwde
cmp
neg
mov
inc
lods
and
and
dec
leave
idiv
cmp
xchg
dec
sub
or
and
mov
dec
inc
pop
cmp
push
out
mov
sbb
gs
and
fdiv
or
xchg
pushf
jo
add
fild
xlat
rcr
pop
arpl
xchg
mov
fcomp
ss
repnz
addr16
cwde
pop
addr16
cdq
add
mov
xchg
inc
jl
sub
pop
jae
sbb
mov
mov
fsub
sqrtps
and
push
inc
push
xor
dec
mov
mov
mov
mov
dec
sbb
call
lea
push
jmp
sar
retf
cld
mov
dec
pop
test
jns
aam
addr16
jmp
pop
dec
movs
pop
call
jmp
and
ret
out
push
test
out
inc
jmp
test
addr16
push
mul
jmp
dec
fnsave
and
pop
les
and
sub
mov
xlat
addr16
jmp
in
pop
les
or
cdq
sub
pop
mov
and
pop
imul
test
xchg
mov
xchg
adc
daa
cdq
cs
je
sub
std
dec
add
(bad)
cwde
inc
xor
pop
test
xchg
pop
test
cmp
jle
pop
sahf
add
imul
xor
je
mov
aam
sbb
pusha
movs
sti
xor
mov
cmp
or
dec
scas
arpl
mov
or
inc
aad
fs
sub
adc
inc
and
cmps
sti
sbb
or
imul
xchg
aam
cdq
data16
cmp
add
(bad)
pop
les
or
dec
in
cdq
fs
cdq
(bad)
or
pop
add
push
inc
mov
mov
mov
cmp
pop
adc
movs
test
es
jmp
stc
jbe
jns
jmp
js
aam
fstp
mov
cmps
jnp
sub
in
cmp
imul
sti
xor
or
sti
adc
and
cmp
stos
aas
cmps
sti
xor
mov
inc
inc
jmp
scas
jnp
push
movs
sti
cmp
inc
sub
inc
jmp
stc
jbe
jns
jmp
js
aam
cdq
es
cmps
sti
xor
pop
pop
jmp
popa
cwde
dec
imul
add
mov
aad
and
fisttp
xor
fwait
mov
imul
push
xchg
ret
inc
inc
jmp
test
sti
cmp
and
or
pop
xor
jle
jmp
jg
aam
sahf
xor
xor
jae
mov
adc
pop
jmp
jg
out
loope
jmp
pop
pop
inc
jmp
ret
xor
dec
call
mov
mov
push
jmp
mov
sbb
mov
mov
xor
jmp
jno
pop
imul
mov
xor
pop
test
adc
jmpw
sti
xor
pop
and
(bad)
and
mov
jmp
sahf
cmp
sar
aam
loope
jmp
inc
popa
push
jmp
pop
and
push
mov
sbb
das
jb
in
stos
pusha
jle
cwde
mov
pop
imul
movs
add
jbe
inc
xor
pop
test
mov
mov
mov
fistp
inc
cdq
jns
pop
pop
inc
jmp
jae
jbe
mov
imul
mov
fstp
mov
lds
mov
les
pop
cli
add
jmp
movs
xchg
xchg
sti
xor
or
mov
test
cmp
cmp
sti
xor
push
jne
xor
inc
stos
out
cmps
xchg
pop
mov
inc
sub
call
push
mov
inc
sub
inc
jmp
and
stos
xchg
sbb
xor
stos
dec
mov
mov
jmp
lahf
jne
test
add
iret
dec
cmps
clc
inc
mov
jbe
ds
and
mov
int
shr
sub
and
pop
jp
gs
sahf
adc
jge
push
xchg
jmp
mov
test
aam
pushf
mov
jmp
fcomp
ja
mov
jmp
mov
mov
inc
jmp
arpl
lock
pop
imul
stc
ja
mov
mul
imul
jmp
jb
mov
aad
cmp
les
push
ds
outs
rcr
hlt
pushf
movs
adc
mov
inc
sub
nop
jns
(bad)
outs
jmp
mov
aad
lock
aam
arpl
and
dec
popa
mov
mov
jmp
pushf
fs
(bad)
or
inc
cmp
stos
pushf
mov
jmp
pushf
in
popf
(bad)
or
inc
cmp
mov
mov
jmp
popf
in
ins
fstp
or
inc
cmp
cs
fmul
push
popf
or
retf
cwde
movs
push
mov
sti
cmp
rol
pop
jle
mov
and
movs
sub
add
sbb
adc
pop
dec
add
pop
(bad)
pop
pop
adc
add
jae
mov
jmp
cmps
les
or
jb
mov
adc
jle
inc
xor
dec
mov
std
inc
jo
sahf
inc
jb
fistp
add
sahf
add
and
jb
lahf
inc
stos
sbb
dec
cld
dec
inc
lds
mov
jb
or
stc
pop
mov
fisub
jb
into
adc
test
pop
cmp
loop
mov
loopne
mov
jle
stos
jg
jge
xor
mov
mov
mov
inc
xor
arpl
push
(bad)
xor
pop
jo
adc
jo
loop
lsl
mov
push
mov
sub
stos
dec
jb
push
mov
dec
pop
daa
nop
sbb
mov
jp
sub
mov
mov
inc
or
sub
shr
dec
push
rcr
movs
jmp
dec
shl
lea
mov
pop
xchg
cmp
fadd
xchg
mov
mov
jns
push
out
ret
mov
mov
jns
retf
stos
adc
pushf
push
outs
mov
fsub
ins
mov
add
xor
fdiv
dec
mov
lea
cli
sub
call
push
mov
sahf
pop
push
ret
outs
xor
mov
dec
cld
or
icebp
mov
mov
jmp
fnstcw
mov
pushf
add
push
sub
jnp
fadd
mov
sub
xchg
dec
jl
popa
stos
add
xor
out
cmps
scas
pop
xor
jb
xchg
adc
fsubr
jmp
pusha
aas
mov
mov
ficom
mov
out
in
adc
ds
push
rcr
push
dec
inc
sbb
movs
outs
sbb
mov
xor
dec
nop
jns
test
iret
cmp
mov
inc
nop
inc
jno
lock
jb
add
push
fadd
jb
pushf
and
mov
lods
out
jns
pop
or
pushf
jbe
or
sahf
nop
cmp
pop
sub
call
mov
or
or
shl
mov
jo
mov
dec
loopne
mov
jmp
not
jo
fcmovbe
ins
jb
nop
add
dec
call
push
inc
neg
(bad)
cld
imul
sub
mov
mov
xor
xchg
and
or
dec
jge
add
ins
mov
ins
mov
mov
je
mov
cmp
dec
sub
in
and
repz
mov
sub
pop
sub
repz
push
and
pusha
push
mov
cwde
mov
ins
cmp
cwde
imul
cmp
cmp
or
mov
sbb
inc
jl
cdq
repz
xor
cmp
cmp
out
lds
in
mov
into
test
cmp
or
xor
mov
or
and
xchg
push
hlt
cld
out
mov
ret
and
jp
jne
sbb
jp
ret
xchg
mov
cli
fwait
sar
test
mov
scas
adc
jmp
jg
jnp
movs
jmp
call
push
outs
cmp
outs
(bad)
imul
ret
sub
outs
iret
stos
xor
push
outs
js
stos
adc
cwde
adc
dec
into
xchg
(bad)
popa
cmp
and
bound
mov
push
fs
and
adc
xchg
push
adc
cmps
mov
sbb
cmps
and
and
lea
cmps
mov
test
lea
mov
mov
mov
xor
or
nop
mov
sub
inc
mov
mov
mov
inc
and
or
es
imul
sub
cmps
mul
mov
sahf
imul
movs
scas
ja
aam
push
mov
jge
add
test
dec
leave
stos
add
or
rol
push
stos
pop
cmps
push
mov
and
cwde
aaa
inc
pop
mov
repnz
cmp
cmp
leave
in
cwde
pcmpgtb
ror
movs
pop
ja
xchg
nop
aad
pop
repz
icebp
fxch
movs
pop
test
or
(bad)
xchg
add
inc
adc
mov
push
and
push
loope
inc
adc
aas
(bad)
shl
rol
pop
add
es
push
jecxz
(bad)
shl
inc
shl
adc
push
jecxz
inc
shl
cmps
test
out
rcl
xchg
mov
repnz
shl
jns
xchg
and
pop
(bad)
loop
adc
es
inc
shl
adc
push
and
inc
xchg
out
inc
shl
mov
test
and
add
aaa
inc
shl
mov
adc
push
shl
cmp
aad
inc
add
push
cmps
retf
and
adc
mov
pop
pop
push
es
rcl
loopne
adc
in
inc
adc
(bad)
push
and
inc
xchg
and
(bad)
and
ret
push
arpl
inc
(bad)
and
test
bound
xchg
xchg
xchg
pop
add
fiadd
data16
cmps
(bad)
shl
stos
inc
adc
sub
shl
mov
xchg
addr16
nop
and
push
arpl
inc
push
mov
xchg
bound
add
cmps
push
(bad)
xchg
bound
ret
cmps
mov
xor
cdq
push
and
push
jge
outs
push
arpl
adc
ins
xor
cmp
iret
ins
mov
call
jecxz
popf
shr
int3
je
add
stos
stc
repnz
inc
outs
dec
mov
xchg
lds
call
mov
lea
push
or
sbb
loope
xor
enter
inc
or
jge
add
push
push
fs
int3
icebp
sbb
mov
cli
adc
jb
test
cmpps
adc
test
adc
ret
or
idiv
xor
loope
(bad)
sar
clc
pop
mov
or
fisubr
(bad)
pop
lods
ret
pop
neg
cwde
pop
mov
inc
add
push
mov
sub
rcr
movs
lods
push
cdq
xor
dec
jl
push
or
mov
lods
wrmsr
les
bound
jb
lods
xor
push
fwait
int
sbb
sbb
jge
mov
and
xor
icebp
add
mov
adc
cmp
inc
jg
lea
iret
inc
xor
cmp
cmp
pushf
sbb
jmp
or
popa
call
out
cmp
and
ror
and
or
int
aaa
and
shl
and
sar
xchg
xlat
shl
add
shl
cmp
das
and
retf
iret
and
pushf
repz
sub
cs
and
cmp
and
push
ficomp
das
loop
or
adc
and
push
cmp
and
retf
or
jmp
and
sbb
dec
retf
dec
retf
fst
lea
das
cmps
loop
enter
scas
in
and
push
cmp
inc
add
inc
retf
xor
adc
and
adc
fucomp
sbb
ror
jae
pop
xchg
or
dec
xchg
xchg
pop
mov
rcr
jo
pop
mov
ret
xor
dec
and
shl
sbb
mov
loopne
push
loope
inc
and
xor
push
and
ror
sbb
xchg
xor
adc
out
push
fnstenv
inc
and
xor
jle
fst
push
rcr
pop
outs
sbb
sbb
push
jmp
xor
stc
sbb
mov
ficomp
adc
xor
ss
sbb
repz
not
test
cli
pop
neg
mov
push
adc
sub
rol
or
jmp
xor
xor
sbb
jo
dec
cs
or
push
cmps
loop
mov
rcl
adc
jecxz
ins
es
adc
outs
(bad)
rol
or
out
mov
adc
dec
fnsave
enter
sbb
mov
or
push
pop
loop
mov
fadd
dec
(bad)
and
dec
pushf
xchg
movs
inc
jecxz
and
rcl
dec
pushf
push
and
adc
repnz
xor
mov
cmp
repz
push
fld
cmp
mov
mov
ss
push
jae
mov
xlat
daa
jno
adc
sti
jl
arpl
adc
pop
xlat
bsr
dec
mov
xchg
loopne
cmp
out
jp
fs
cli
aad
addr16
xlat
loop
sti
xchg
mov
push
shl
xor
adc
stc
adc
cld
cli
xchg
mov
add
xchg
and
stc
xchg
cmps
mov
xchg
arpl
pop
daa
sbb
addr16
mov
(bad)
mov
stos
std
aad
sub
adc
(bad)
stc
push
arpl
js
out
jl
and
cld
xchg
out
mov
shl
sbb
adc
jecxz
adc
sub
push
bound
mov
xlat
cmps
jl
shl
jg
push
and
jge
out
mov
adc
xlat
cli
adc
mov
push
fistp
mov
loopne
xchg
pusha
scas
mov
xchg
addr16
push
and
jns
cmps
jg
xlat
and
js
cmps
dec
clc
adc
mov
adc
ds
popa
pushf
ds
es
jg
and
xchg
bound
and
(bad)
push
mov
(bad)
push
mov
adc
push
cmp
mov
jle
jo
nop
dec
mov
aas
xchg
es
daa
dec
jmp
and
inc
ror
inc
xchg
jl
outs
mov
sub
pusha
inc
or
shl
aad
adc
ror
xchg
sub
arpl
enter
movs
cwde
int3
imul
jecxz
arpl
xor
shl
mov
daa
or
sbb
imul
fcom
(bad)
and
imul
retf
cmp
mov
imul
push
jl
and
clc
rcr
mov
repnz
js
dec
test
and
in
imul
pushf
mov
sbb
imul
add
pushf
push
add
jns
clc
fcmovu
cli
in
or
pusha
jmp
sub
mov
sub
jns
retf
clc
pop
dec
ret
ins
lea
stos
inc
adc
lods
adc
push
cmp
cld
push
cmp
dec
aam
lea
jge
xor
les
nop
mov
or
imul
ja
mov
movs
test
enter
pushf
pop
imul
imul
and
jns
popf
push
mov
pop
adc
ins
lea
jns
dec
adc
jmp
xor
out
leave
jle
pusha
inc
fbstp
popa
leave
retfw
mov
xor
mov
stc
mov
ss
mov
mov
mov
mov
xor
add
fidiv
outs
cmp
xchg
shl
lock
push
pop
in
shl
mov
cmc
retf
mov
popa
bound
(bad)
push
pop
cmp
pop
jmp
sti
mov
popa
out
mov
xor
out
aas
and
dec
scas
mov
lea
cmc
out
adc
stos
mov
push
iret
stc
aaa
dec
(bad)
into
mov
retf
cdq
popa
scas
dec
pushf
out
push
cmp
into
out
and
mov
fisttp
pop
xor
retf
cmp
int
pop
dec
daa
dec
adc
je
lock
jno
popa
add
jbe
and
lods
sbb
shr
outs
fwait
div
dec
push
pushf
and
dec
pop
mov
mov
hlt
shl
dec
pushf
mov
pop
cmp
test
and
call
and
test
in
call
lea
into
mov
ret
arpl
and
call
jb
push
dec
xor
(bad)
leave
jl
neg
mov
popa
jb
pushf
xchg
inc
mov
jecxz
pop
div
dec
fimul
and
test
mov
jo
cmc
push
data16
loopne
stos
lock
and
mov
mov
mov
data16
dec
sbb
lods
jecxz
sbb
and
xchg
in
aad
movs
or
jb
lods
inc
jb
in
push
jb
std
push
cmps
sub
shl
call
out
(bad)
push
addr16
push
loop
cmp
daa
dec
cmp
push
pusha
sar
popa
push
jle
and
stc
shl
fdivr
loop
push
jecxz
mov
push
and
mov
adc
mov
xchg
bound
push
and
clc
push
cmps
ret
loopne
clc
shl
psubb
and
cld
xchg
(bad)
xlat
cld
adc
xchg
mov
bound
push
loope
call
daa
scas
std
push
cmps
xor
adc
clc
shl
(bad)
mov
adc
push
mov
xchg
pusha
int3
cmp
aam
nop
addr16
ds
daa
sahf
clc
xchg
(bad)
fidivr
push
movs
in
push
addr16
xchg
es
clc
adc
cmp
bnd
out
cmp
shl
cmp
arpl
cmp
mov
(bad)
jge
mov
pop
aas
shl
jnp
mov
mov
cmp
mov
xor
push
movs
stc
mov
(bad)
out
mov
push
and
iret
mov
mov
inc
xchg
cmps
std
xor
inc
jb
mov
sbb
mov
aas
test
dec
(bad)
loope
rcr
push
jno
jge
cmp
pushf
ret
mov
ror
shl
out
arpl
mov
lods
or
in
(bad)
out
cmp
add
xor
lods
adc
popa
cmp
sub
mov
in
jecxz
push
mov
xchg
sbb
mov
push
pop
sub
call
and
sbb
sbb
scas
add
nop
dec
jl
sbb
into
(bad)
xlat
outs
lods
shr
xchg
mov
push
mov
cmp
outs
jb
mov
std
aam
mov
hlt
adc
jmp
sbb
outs
mov
pushf
mov
add
mov
inc
xchg
stc
outs
push
adc
lea
mov
mov
xor
mov
lea
stc
popf
cs
ret
jae
xor
adc
and
test
mov
push
ins
jb
addr16
loop
or
(bad)
movs
pop
cmp
fwait
enter
mov
pop
fcom
add
arpl
test
fisttp
push
lahf
add
scas
xlat
movs
fiadd
pop
movs
adc
sub
jl
jo
push
test
pop
push
data16
movs
out
into
push
jo
xor
pop
loop
fbstp
mov
out
xchg
pop
sbb
inc
mov
ret
mov
xchg
pop
jno
jg
sahf
ds
pop
adc
daa
mov
xchg
inc
push
retf
xor
adc
push
jae
daa
pop
xor
xchg
cmps
and
xchg
outs
mov
jecxz
xor
jbe
xchg
and
xor
and
jo
xor
push
lock
and
repz
or
xor
mov
pop
xor
popa
movs
jae
and
and
mov
(bad)
div
push
in
xor
arpl
jb
out
mov
es
aad
dec
xor
out
jne
mov
pop
mov
data16
shl
xor
popa
and
loope
mov
arpl
nop
popa
mov
xchg
daa
div
adc
repnz
and
adc
jae
cmps
mov
nop
daa
push
jb
bound
shl
pop
cmc
adc
hlt
push
cmps
arpl
popa
addr16
push
mov
sub
loop
add
mov
inc
jb
mov
js
sub
cmc
adc
add
cmp
pop
ins
repz
repnz
pop
push
sti
pop
lods
dec
stos
mov
dec
or
pusha
repnz
out
add
std
xchg
or
(bad)
ins
je
xor
mov
sbb
mov
jae
int3
cmc
rcr
lea
(bad)
(bad)
and
mov
leave
pushf
out
and
mul
pop
cmp
cmp
inc
out
dec
in
mov
movs
pop
xor
jg
cmp
popf
jmp
enter
repz
sar
mov
mov
jle
push
fcmove
js
lock
pushf
cmp
add
stc
pop
mov
stos
pop
jns
cmps
fiadd
and
outs
sbb
rcr
or
mov
fidivr
add
test
loope
adc
sub
adc
sub
in
cld
ret
mov
mov
pop
mov
mov
aaa
bound
shl
rol
in
mov
xor
mov
xchg
lock
fistp
ret
mov
mov
dec
fwait
or
arpl
daa
mov
cld
adc
mov
lea
inc
mov
and
inc
sub
icebp
int
test
sbb
sub
inc
repz
sub
xchg
adc
add
inc
add
rol
pop
pop
retf
inc
imul
push
repz
and
push
bound
ins
ds
test
add
sub
popf
sub
dec
shr
or
cs
jb
retfw
and
rcl
pop
or
retf
aas
push
or
cmc
sub
xchg
mov
adc
sub
out
(bad)
and
mov
dec
add
scas
pop
pop
inc
rcl
imul
push
in
adc
mov
dec
cmp
sub
out
shr
pop
mov
dec
and
not
sbb
bound
push
mov
ins
sub
inc
dec
xchg
jae
fcomp
fdivrp
xchg
xor
jp
ret
ins
jns
add
cmps
mov
adc
lock
or
shr
inc
rcr
sbb
or
jno
arpl
shr
(bad)
rcl
pop
xchg
sub
ds
lds
add
xor
out
adc
mov
xor
adc
fist
ret
shr
rcl
lahf
popf
or
shr
inc
adc
(bad)
inc
dec
mov
xadd
adc
adc
icebp
neg
add
mov
sahf
ds
sar
outs
sar
adc
mov
or
adc
out
xchg
jl
call
jo
cmps
pusha
xchg
fwait
jmp
cmp
ins
shl
jnp
call
push
dec
xchg
push
repnz
cmps
push
jb
mov
sbb
mov
adc
lahf
or
adc
fild
inc
dec
adc
xchg
pushf
cmps
sub
cmp
sub
cmp
ins
shl
jmp
push
cdq
pop
jbe
(bad)
jg
adc
xchg
sar
sub
adc
ins
std
jecxz
jmp
clc
(bad)
and
adc
fdivr
rcr
inc
sbb
pushf
sub
dec
sbb
push
pushf
shl
mov
scas
sub
push
out
adc
xchg
pop
leave
mov
sbb
call
in
sub
mov
aad
dec
dec
in
xchg
pushf
mov
mov
pushf
mov
xchg
pushf
cmp
sar
xchg
pushf
mov
repnz
pop
inc
push
test
push
dec
jmp
das
pop
out
sub
movs
es
stos
iret
aas
add
pop
push
daa
pop
nop
mov
repnz
jmp
adc
pop
test
pop
mul
sbb
sub
shr
xchg
xor
xor
cmc
dec
dec
pusha
cmp
popf
add
aaa
mov
pushf
ffreep
push
scas
push
ja
(bad)
imul
popf
bound
lahf
inc
ja
(bad)
addr16
pushf
xchg
push
retf
lahf
mov
xchg
pushf
popaw
sar
loope
sbb
jne
mov
mov
in
or
jbe
pushf
mov
mov
or
mov
mov
sbb
add
push
pushf
mov
xchg
sbb
xchg
sahf
or
inc
fst
aad
pop
sar
shl
pop
cmp
push
(bad)
jp
(bad)
mov
xchg
mov
repz
xor
mov
mov
pause
out
jae
mov
int3
mov
loop
jb
loope
not
mov
pop
aaa
push
movs
loopne
shl
adc
sub
xlat
arpl
xchg
out
jne
and
mov
and
je
arpl
xor
mov
dec
xor
loopne
not
xchg
xor
xchg
data16
(bad)
loopne
xor
and
adc
ja
data16
xchg
loop
xor
cmp
push
mov
inc
ja
pusha
or
shl
xchg
cmc
pop
fs
mov
loope
mov
arpl
adc
repnz
addr16
and
ss
pusha
jae
shl
je
xchg
bound
push
es
ss
popw
not
and
xor
fs
mov
cmps
pop
mov
and
xor
out
jae
es
shl
movs
mov
daa
out
mov
movs
out
xor
jo
adc
enter
cmps
(bad)
dec
dec
inc
mov
mov
mov
mov
test
dec
test
xchg
je
aas
sub
push
jge
mov
push
adc
cmp
enter
repnz
inc
aas
test
adc
sub
inc
rol
adc
or
cmp
arpl
imul
dec
jo
mov
(bad)
out
jbe
sub
lods
adc
xchg
mov
push
jl
push
imul
xor
pop
jb
call
int3
or
adc
pop
stc
xchg
or
inc
leave
pop
stos
lea
(bad)
mov
or
cmps
pop
push
inc
jecxz
out
cmp
or
jns
pushf
in
mov
or
xor
sbb
add
cmps
add
mov
arpl
or
bound
arpl
fsubr
popa
or
shl
shl
adc
arpl
clc
loopne
mov
inc
sub
dec
lods
lea
ret
or
xor
test
js
dec
inc
xor
dec
sbb
mov
sub
pop
pushf
idiv
pushf
es
shl
xor
or
cld
clc
idiv
lock
lods
jge
fwait
pop
and
outs
enter
out
mov
jbe
retf
repnz
fmul
cmp
daa
test
adc
inc
xor
jbe
xor
mov
xor
jp
pop
repz
icebp
push
daa
cmp
cmc
mov
inc
outs
out
jmp
add
hlt
loopne
xor
icebp
lock
fwait
icebp
and
outs
je
aas
xchg
push
cmp
iret
jbe
leave
xchg
push
ins
lock
dec
lock
add
xchg
push
loop
or
add
mov
add
icebp
adc
lahf
sar
popa
and
jbe
retf
aad
sahf
daa
pop
ja
lock
jmp
xor
mov
hlt
shl
cmc
xor
jbe
or
ss
icebp
cmp
and
adc
jbe
shl
cmc
or
adc
loop
mov
jnp
xchg
out
add
idiv
mov
not
add
bound
push
loop
jns
loope
ja
or
jbe
cmp
fwait
or
jo
cmp
jg
sub
jno
push
shl
pop
nop
inc
mov
loope
or
jg
or
sub
jg
das
not
inc
xor
inc
pop
xchg
and
neg
das
iret
test
pop
xor
jmp
cmp
jno
and
div
not
and
mov
enter
leave
ds
mov
leave
lock
ja
mov
mov
push
and
enter
jo
mov
mov
in
mov
not
push
(bad)
mov
jbe
jae
pusha
in
mov
ss
and
sbb
xor
inc
jl
mov
jp
push
add
dec
outs
adc
xchg
outs
shl
fldcw
(bad)
and
sub
gs
scas
sub
movs
lock
cmp
push
mov
add
push
and
in
adc
loop
outs
(bad)
and
shl
call
and
stos
adc
and
sub
push
and
out
xchg
and
push
shl
retf
push
pusha
retf
cmps
adc
push
loopne
outs
xchg
loopne
sub
push
and
sub
arpl
push
mov
mov
adc
jmp
shl
jmp
and
sub
arpl
scas
xchg
addr16
xchg
loop
test
(bad)
cmps
cwde
jmp
imul
shl
sub
xchg
loop
test
pop
loope
test
and
sub
cmp
pop
sbb
inc
jp
jb
retf
and
popa
repnz
push
rcl
push
lds
mov
or
test
bound
neg
mov
or
mov
mov
inc
lods
xor
inc
jle
cs
hlt
mov
(bad)
mov
test
or
mov
dec
adc
sahf
or
dec
jb
cmp
jb
out
mov
cmp
pop
jp
add
test
cmp
cmp
ret
mov
aad
rcr
cmp
fild
push
ss
in
jp
dec
mov
inc
inc
xchg
fsubr
lods
ret
outs
js
mov
lock
cld
dec
std
pop
test
sub
xor
jge
xchg
dec
cmp
push
xchg
mov
pop
neg
inc
cmp
xrelease
mov
add
cmp
test
ret
lods
xchg
pop
mov
mov
jl
jecxz
or
and
enter
mov
fnstsw
xor
mov
dec
xor
xor
stos
fsubr
fdivr
lea
inc
xchg
js
lods
mov
test
add
int
adc
or
sbb
outs
(bad)
sar
int
xchg
dec
add
pop
push
popf
push
add
outs
xor
mov
pop
xchg
test
inc
cmp
bound
repnz
sbb
imul
inc
cmp
mov
sbb
dec
hlt
sbb
mov
sbb
cmps
push
je
into
jno
sbb
imul
aam
(bad)
scas
adc
mov
scas
mov
dec
pop
cmp
(bad)
lock
add
idiv
retf
adc
(bad)
jo
jno
or
adc
imul
pop
ror
add
and
xchg
dec
add
sub
sub
mov
retf
ins
int3
(bad)
rcr
js
xchg
push
out
dec
fisubr
aad
retf
jb
xchg
jb
pop
xchg
ror
lods
retf
bound
jb
sub
lods
rol
shr
repz
dec
je
or
xchg
int
imul
mov
rcr
lods
into
into
sbb
sub
push
mov
aam
iret
cmp
lods
out
mov
jmp
fdiv
fisttp
mov
out
sbb
xor
jle
(bad)
jno
sub
jae
mov
imul
xlat
xchg
dec
imul
push
xor
pop
mov
outs
shl
lods
shl
shr
and
sub
push
retf
mov
ss
mov
rcr
adc
out
imul
mov
shl
dec
mov
mov
add
ficom
push
and
nop
dec
add
push
sub
cmp
sbb
das
out
sbb
sbb
dec
jne
ror
int
ins
repz
push
ret
int3
cmp
pop
or
adc
inc
movmskps
push
adc
push
std
dec
add
sub
icebp
out
imul
in
ror
fwait
cmps
lea
jle
xor
lds
arpl
std
adc
fst
jl
arpl
lods
lods
cmp
mov
inc
mov
inc
mov
mov
jle
xor
lds
ins
cmc
std
adc
fstp
scas
jo
push
mov
mov
xchg
mov
push
test
adc
and
sub
shl
in
nop
mov
imul
pusha
push
push
pusha
mov
shl
xor
pop
and
sub
and
test
loope
das
push
and
stos
shl
xchg
sub
loopne
lods
push
and
out
(bad)
pusha
es
and
push
data16
nop
es
call
push
cmps
cmp
jecxz
scas
push
and
das
push
jecxz
sub
and
out
adc
pop
sub
push
cmps
and
daa
fs
cmps
push
push
out
outs
push
fs
push
es
push
cmps
jnp
adc
jg
adc
sub
mov
leave
lods
push
es
jmp
push
sub
out
stos
adc
push
and
xchg
mov
sub
push
daa
icebp
stos
push
in
sub
and
sub
jecxz
in
arpl
(bad)
(bad)
out
loop
and
jecxz
and
push
jecxz
mov
adc
arpl
nop
loop
movs
push
out
mov
push
jb
xchg
mov
xor
inc
jno
test
xor
inc
xor
cmp
push
mov
adc
cdq
mov
ret
pushf
cwde
popa
ror
xor
mov
and
xchg
adc
jg
into
push
cmp
or
mov
or
arpl
mov
jns
enter
(bad)
mov
add
jle
inc
mov
scas
push
jmp
or
retf
pop
jb
jo
rcr
cs
mov
jl
test
call
push
mov
ss
repnz
mov
jb
cld
iret
adc
sar
xor
inc
sub
leave
xor
and
sar
mov
mov
sbb
cmp
pop
jo
sub
dec
cli
nop
repz
(bad)
in
pop
xchg
dec
ins
(bad)
out
jl
aas
adc
ins
mov
nop
inc
js
jmp
push
mov
mov
pushf
shl
lods
lea
mov
mov
into
or
dec
xchg
sbb
icebp
mov
mov
pop
jl
xor
dec
jns
mov
(bad)
dec
lods
jmp
inc
ds
data16
add
pusha
cwde
adc
sbb
movs
(bad)
xchg
arpl
mov
inc
pop
mov
in
inc
int3
pop
pushf
adc
and
int
mov
inc
int3
(bad)
xor
test
inc
pop
lea
daa
or
mov
dec
lea
mov
jbe
xchg
test
pop
hlt
mov
ret
in
add
adc
retf
xor
test
int3
or
sete
sbb
jns
gs
mov
sub
outs
(bad)
mov
adc
gs
das
xchg
pop
leave
and
mov
mov
out
mov
cmp
idiv
xchg
ins
pop
sub
mov
lods
sbb
sub
mov
push
(bad)
jge
xor
sbb
pop
mov
push
aas
gs
js
xchg
sbb
xchg
and
mov
jbe
leave
jge
xor
mov
or
cmp
pop
pop
outs
int3
push
push
hlt
or
sbb
sbb
mov
cmp
sbb
cmp
sub
inc
and
jmp
scas
adc
cmp
pop
pop
pop
int3
fcomp
jne
xlat
pusha
jmp
dec
sub
mov
aam
fscale
bound
es
idiv
adc
pusha
imul
mov
and
mov
adc
out
in
mov
mov
fnsave
jp
mov
lods
push
lea
adc
pop
lds
scas
dec
xchg
pushf
rcl
cdq
(bad)
xchg
call
enter
xor
and
(bad)
adc
sbb
addr16
mov
or
jge
xor
mov
mov
mov
xchg
dec
mov
mov
jb
aaa
stos
ds
pushf
or
or
int3
and
or
inc
dec
adc
ins
jb
repnz
sub
mov
push
xchg
or
or
mov
xchg
icebp
cmp
or
add
(bad)
dec
dec
mov
jmp
sahf
adc
push
cs
sub
iret
(bad)
pop
push
add
or
jb
xchg
std
in
pushf
xchg
enter
xor
(bad)
repz
dec
cmp
add
out
xchg
pop
pop
xchg
add
test
mov
or
int
mov
mov
dec
cmovg
(bad)
lds
mov
je
pushf
adc
jbe
int
and
cmc
pushf
adc
and
movs
inc
sbb
jl
enter
aam
sub
test
rcl
dec
stc
ret
xor
push
jb
dec
mov
dec
dec
repnz
fadd
dec
mov
or
add
call
dec
pop
mov
mov
je
adc
mov
add
mov
mov
inc
cmp
jne
dec
and
or
and
in
cmp
(bad)
cmp
gs
xchg
xchg
sti
in
out
and
mul
in
loop
mov
sahf
loope
xor
pop
adc
mov
mov
(bad)
(bad)
mov
xchg
cli
mov
dec
(bad)
mov
bound
mov
mov
jae
xchg
inc
and
jo
sub
jo
xor
jo
cmp
jo
add
jo
or
jo
adc
jo
sbb
jo
popa
xchg
xchg
imul
jo
jne
jo
jns
jo
jge
jo
inc
xchg
inc
xchg
dec
xchg
dec
xchg
push
xchg
push
xchg
pop
xchg
pop
xchg
mov
xchg
test
xchg
mov
jo
mov
jo
mov
xchg
add
jo
lea
jo
xchg
xchg
cdq
xchg
popf
xchg
loope
jo
in
jo
jmp
xchg
icebp
xchg
cmc
xchg
stc
xchg
std
xchg
rol
inc
leave
xchg
int
jo
rol
jo
fld
jo
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
test
test
imul
inc
jne
jo
jns
jo
jge
jo
inc
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
mov
test
test
test
mov
jo
mov
jo
mov
test
add
inc
lea
inc
xchg
test
cdq
test
popf
test
loope
jo
in
jo
jmp
test
icebp
test
cmc
test
stc
test
std
test
rol
leave
test
int
jo
rol
inc
fld
inc
and
jo
sub
jo
xor
jo
cmp
jo
add
jo
or
jo
adc
jo
sbb
jo
popa
test
test
imul
jo
jne
jo
jns
jo
jge
jo
inc
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
mov
test
test
test
mov
jo
mov
jo
mov
test
add
jo
lea
jo
xchg
test
cdq
test
popf
test
loope
jo
in
jo
jmp
test
icebp
test
cmc
test
stc
test
std
test
rol
inc
leave
test
int
jo
rol
jo
fld
jo
and
jo
and
cli
jo
sub
cli
jo
xor
cli
jo
cmp
cli
jo
add
cli
jo
or
cli
jo
adc
cli
jo
sbb
cli
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
cli
jo
inc
cli
jo
dec
cli
jo
dec
cli
jo
push
cli
jo
push
cli
jo
pop
cli
jo
pop
cli
jo
mov
cli
jo
test
cli
jo
mov
jo
mov
jo
mov
cli
jo
cmp
jo
mov
jo
(bad)
cli
jo
xchg
cli
jo
xchg
cli
jo
cdq
cli
jo
popf
cli
jo
loope
jo
in
jo
jmp
cli
jo
icebp
cli
jo
cmc
cli
jo
stc
cli
jo
std
cli
jo
sar
inc
vpshufhw
jo
int
jo
sar
jo
aad
jo
fsqrt
jo
(bad)
jo
and
jo
and
sti
jo
sub
sti
jo
xor
sti
jo
cmp
sti
jo
add
sti
jo
or
sti
jo
adc
sti
jo
sbb
sti
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
sti
jo
inc
sti
jo
dec
sti
jo
dec
sti
jo
push
sti
jo
push
sti
jo
pop
sti
jo
pop
sti
jo
mov
sti
jo
test
sti
jo
mov
jo
mov
jo
mov
sti
jo
cmp
jo
mov
jo
(bad)
sti
jo
xchg
sti
jo
xchg
sti
jo
cdq
sti
jo
popf
sti
jo
loope
jo
in
jo
jmp
sti
jo
icebp
sti
jo
cmc
sti
jo
stc
sti
jo
std
sti
jo
sar
inc
vpshuflw
jo
int
jo
sar
jo
aad
jo
fsincos
jo
(bad)
jo
and
jo
and
clc
jo
sub
clc
jo
xor
clc
jo
cmp
clc
jo
add
clc
jo
or
clc
jo
adc
clc
jo
sbb
clc
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
clc
jo
inc
clc
jo
dec
clc
jo
dec
clc
jo
push
clc
jo
push
clc
jo
pop
clc
jo
pop
clc
jo
mov
clc
jo
test
clc
jo
mov
jo
mov
jo
mov
clc
jo
cmp
jo
mov
jo
(bad)
clc
jo
xchg
clc
jo
xchg
clc
jo
cdq
clc
jo
popf
clc
jo
loope
jo
in
jo
jmp
clc
jo
icebp
clc
jo
cmc
clc
jo
stc
clc
jo
std
clc
jo
sar
inc
(bad)
inc
leave
clc
jo
int
jo
sar
jo
aad
jo
fprem
jo
(bad)
jo
and
jo
and
stc
jo
sub
stc
jo
xor
stc
jo
cmp
stc
jo
add
stc
jo
or
stc
jo
adc
stc
jo
sbb
stc
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
stc
jo
inc
stc
jo
dec
stc
jo
dec
stc
jo
push
stc
jo
push
stc
jo
pop
stc
jo
pop
stc
jo
mov
stc
jo
test
stc
jo
mov
jo
mov
jo
mov
stc
jo
cmp
jo
mov
jo
(bad)
stc
jo
xchg
stc
jo
xchg
stc
jo
cdq
stc
jo
popf
stc
jo
loope
jo
in
jo
jmp
stc
jo
icebp
stc
jo
cmc
stc
jo
stc
stc
jo
std
stc
jo
sar
inc
vpshufd
jo
int
jo
sar
jo
aad
jo
fyl2xp1
jo
(bad)
jo
and
jo
and
(bad)
jo
sub
(bad)
jo
xor
(bad)
jo
cmp
(bad)
jo
add
(bad)
jo
or
(bad)
jo
adc
(bad)
jo
sbb
(bad)
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
(bad)
jo
inc
(bad)
jo
dec
(bad)
jo
dec
(bad)
jo
push
(bad)
jo
push
(bad)
jo
pop
(bad)
jo
pop
(bad)
jo
mov
(bad)
jo
test
(bad)
jo
mov
jo
mov
jo
mov
(bad)
jo
cmp
jo
mov
jo
(bad)
(bad)
jo
xchg
(bad)
jo
xchg
(bad)
jo
cdq
(bad)
jo
popf
(bad)
jo
loope
jo
in
jo
jmp
(bad)
jo
icebp
(bad)
jo
cmc
(bad)
jo
stc
(bad)
jo
std
(bad)
jo
sar
inc
vpshufhw
jo
int
jo
sar
jo
aad
jo
fsin
jo
(bad)
jo
and
jo
and
push
sub
push
xor
push
cmp
push
add
push
or
push
adc
push
sbb
push
push
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
inc
push
dec
push
dec
push
push
push
push
push
pop
push
pop
push
mov
push
test
push
mov
jo
mov
jo
mov
push
cmp
jo
mov
jo
(bad)
push
xchg
push
xchg
push
cdq
push
popf
push
loope
jo
in
jo
jmp
push
icebp
push
cmc
push
stc
push
std
push
sar
inc
vpshuflw
jo
int
jo
sar
jo
aad
jo
fcos
jo
(bad)
jo
and
jo
and
cld
jo
sub
cld
jo
xor
cld
jo
cmp
cld
jo
add
cld
jo
or
cld
jo
adc
cld
jo
sbb
cld
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
cld
jo
inc
cld
jo
dec
cld
jo
dec
cld
jo
push
cld
jo
push
cld
jo
pop
cld
jo
pop
cld
jo
mov
cld
jo
test
cld
jo
mov
jo
mov
jo
mov
cld
jo
cmp
jo
mov
jo
(bad)
cld
jo
xchg
cld
jo
xchg
cld
jo
cdq
cld
jo
popf
cld
jo
loope
jo
in
jo
jmp
cld
jo
icebp
cld
jo
cmc
cld
jo
stc
cld
jo
std
cld
jo
sar
inc
(bad)
inc
leave
cld
jo
int
jo
sar
jo
aad
jo
frndint
jo
(bad)
jo
and
jo
and
std
jo
sub
std
jo
xor
std
jo
cmp
std
jo
add
std
jo
or
std
jo
adc
std
jo
sbb
std
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
std
jo
inc
std
jo
dec
std
jo
dec
std
jo
push
std
jo
push
std
jo
pop
std
jo
pop
std
jo
mov
std
jo
test
std
jo
mov
jo
mov
jo
mov
std
jo
cmp
jo
mov
jo
(bad)
std
jo
xchg
std
jo
xchg
std
jo
cdq
std
jo
popf
std
jo
loope
jo
in
jo
jmp
std
jo
icebp
std
jo
cmc
std
jo
stc
std
jo
std
std
jo
sar
inc
vpshufd
jo
int
jo
sar
jo
aad
jo
fscale
jo
(bad)
jo
and
jo
and
bnd
sub
bnd
xor
bnd
cmp
bnd
add
bnd
or
bnd
adc
bnd
sbb
bnd
gs
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
bnd
inc
bnd
dec
bnd
dec
bnd
push
bnd
push
bnd
pop
bnd
pop
bnd
mov
bnd
test
bnd
mov
jo
mov
jo
mov
bnd
xor
jo
mov
jo
(bad)
bnd
xchg
bnd
xchg
bnd
cdq
bnd
popf
bnd
loope
jo
in
jo
jmp
bnd
icebp
bnd
cmc
bnd
stc
bnd
std
bnd
shl
inc
vpshufhw
jo
int
jo
shl
jo
aad
jo
fptan
jo
(bad)
jo
and
jo
and
repz
sub
repz
xor
repz
cmp
repz
add
repz
or
repz
adc
repz
sbb
repz
gs
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
repz
inc
repz
dec
repz
dec
repz
push
repz
push
repz
pop
repz
pop
repz
mov
repz
test
repz
mov
jo
mov
jo
mov
repz
xor
jo
mov
jo
(bad)
repz
xchg
repz
xchg
repz
cdq
repz
popf
repz
loope
jo
in
jo
jmp
repz
icebp
repz
cmc
repz
stc
repz
std
repz
shl
inc
vpshuflw
jo
int
jo
shl
jo
aad
jo
fpatan
jo
(bad)
jo
and
jo
and
lock
sub
lock
xor
lock
cmp
lock
add
lock
or
lock
adc
lock
sbb
lock
gs
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
lock
inc
lock
dec
lock
dec
lock
push
lock
push
lock
pop
lock
pop
lock
mov
lock
test
lock
mov
jo
mov
jo
mov
lock
xor
jo
mov
jo
(bad)
lock
xchg
lock
xchg
lock
cdq
lock
popf
lock
loope
jo
in
jo
jmp
lock
icebp
lock
cmc
lock
stc
lock
std
lock
shl
inc
(bad)
inc
leave
lock
int
jo
shl
jo
aad
jo
f2xm1
jo
(bad)
jo
and
jo
and
icebp
jo
sub
icebp
jo
xor
icebp
jo
cmp
icebp
jo
add
icebp
jo
or
icebp
jo
adc
icebp
jo
sbb
icebp
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
icebp
jo
inc
icebp
jo
dec
icebp
jo
dec
icebp
jo
push
icebp
jo
push
icebp
jo
pop
icebp
jo
pop
icebp
jo
mov
icebp
jo
test
icebp
jo
mov
jo
mov
jo
mov
icebp
jo
xor
jo
mov
jo
(bad)
icebp
jo
xchg
icebp
jo
xchg
icebp
jo
cdq
icebp
jo
popf
icebp
jo
loope
jo
in
jo
jmp
icebp
jo
icebp
icebp
jo
cmc
icebp
jo
stc
icebp
jo
std
icebp
jo
shl
inc
vpshufd
jo
int
jo
shl
jo
aad
jo
fyl2x
jo
(bad)
jo
and
jo
and
div
sub
div
xor
div
cmp
div
add
div
or
div
adc
div
sbb
div
div
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
div
inc
div
dec
div
dec
div
push
div
push
div
pop
div
pop
div
mov
div
test
div
mov
jo
mov
jo
mov
div
xor
jo
mov
jo
(bad)
div
xchg
div
xchg
div
cdq
div
popf
div
loope
jo
in
jo
jmp
div
icebp
div
cmc
div
stc
div
std
div
shl
inc
vpshufhw
jo
int
jo
shl
jo
aad
jo
fdecstp
jo
(bad)
jo
and
jo
and
div
sub
div
xor
div
cmp
div
add
div
or
div
adc
div
sbb
div
div
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
div
inc
div
dec
div
dec
div
push
div
push
div
pop
div
pop
div
mov
div
test
div
mov
jo
mov
jo
mov
div
xor
jo
mov
jo
(bad)
div
xchg
div
xchg
div
cdq
div
popf
div
loope
jo
in
jo
jmp
div
icebp
div
cmc
div
stc
div
std
div
shl
inc
vpshuflw
jo
int
jo
shl
jo
aad
jo
fincstp
jo
(bad)
jo
and
jo
and
hlt
jo
sub
hlt
jo
xor
hlt
jo
cmp
hlt
jo
add
hlt
jo
or
hlt
jo
adc
hlt
jo
sbb
hlt
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
hlt
jo
inc
hlt
jo
dec
hlt
jo
dec
hlt
jo
push
hlt
jo
push
hlt
jo
pop
hlt
jo
pop
hlt
jo
mov
hlt
jo
test
hlt
jo
mov
jo
mov
jo
mov
hlt
jo
xor
jo
mov
jo
(bad)
hlt
jo
xchg
hlt
jo
xchg
hlt
jo
cdq
hlt
jo
popf
hlt
jo
loope
jo
in
jo
jmp
hlt
jo
icebp
hlt
jo
cmc
hlt
jo
stc
hlt
jo
std
hlt
jo
shl
inc
(bad)
inc
leave
hlt
jo
int
jo
shl
jo
aad
jo
fxtract
jo
(bad)
jo
and
jo
and
cmc
jo
sub
cmc
jo
xor
cmc
jo
cmp
cmc
jo
add
cmc
jo
or
cmc
jo
adc
cmc
jo
sbb
cmc
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
cmc
jo
inc
cmc
jo
dec
cmc
jo
dec
cmc
jo
push
cmc
jo
push
cmc
jo
pop
cmc
jo
pop
cmc
jo
mov
cmc
jo
test
cmc
jo
mov
jo
mov
jo
mov
cmc
jo
xor
jo
mov
jo
(bad)
cmc
jo
xchg
cmc
jo
xchg
cmc
jo
cdq
cmc
jo
popf
cmc
jo
loope
jo
in
jo
jmp
cmc
jo
icebp
cmc
jo
cmc
cmc
jo
stc
cmc
jo
std
cmc
jo
shl
inc
vpshufd
jo
int
jo
shl
jo
aad
jo
fprem1
jo
(bad)
jo
and
jo
and
jmp
xor
jo
xor
jmp
add
jo
add
jmp
adc
jo
adc
jmp
popa
jmp
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
jmp
dec
jmp
push
jmp
pop
jmp
mov
jmp
lods
jmp
mov
jo
mov
jmp
test
jo
mov
jo
(bad)
jmp
xchg
jmp
popf
jmp
in
jo
jmp
jmp
cmc
jmp
std
jmp
vpshufhw
jo
int
jo
shr
jo
aad
jo
fldl2e
jo
fucomp
jo
and
jo
and
jmp
inc
sub
jmp
inc
xor
jmp
inc
cmp
jmp
inc
add
jmp
inc
or
jmp
inc
adc
jmp
inc
sbb
jmp
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
jmp
inc
inc
jmp
inc
dec
jmp
inc
dec
jmp
inc
push
jmp
inc
push
jmp
inc
pop
jmp
inc
pop
jmp
inc
mov
jmp
inc
test
jmp
inc
mov
jo
mov
jo
mov
jmp
inc
sub
jo
mov
jo
(bad)
jmp
inc
xchg
jmp
inc
xchg
jmp
inc
cdq
jmp
inc
popf
jmp
inc
loope
jo
in
jo
jmp
jmp
inc
icebp
jmp
inc
cmc
jmp
inc
stc
jmp
inc
std
jmp
inc
shr
inc
vpshuflw
jo
int
jo
shr
jo
aad
jo
fldpi
jo
fucomp
jo
and
jo
and
call
jo
xor
jo
xor
call
jo
add
jo
add
call
jo
adc
jo
adc
call
jo
popa
call
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
call
jo
dec
call
jo
push
call
jo
pop
call
jo
mov
call
jo
lods
call
jo
mov
jo
mov
call
jo
test
jo
mov
jo
(bad)
call
jo
xchg
call
jo
popf
call
jo
in
jo
jmp
call
jo
cmc
call
jo
std
call
jo
(bad)
inc
leave
call
jo
shr
jo
aad
jo
fld1
jo
fucomp
jo
and
jo
and
jmp
jo
xor
jo
xor
jmp
jo
add
jo
add
jmp
jo
adc
jo
adc
jmp
jo
popa
jmp
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
jmp
jo
dec
jmp
jo
push
jmp
jo
pop
jmp
jo
mov
jmp
jo
lods
jmp
jo
mov
jo
mov
jmp
jo
test
jo
mov
jo
(bad)
jmp
jo
xchg
jmp
jo
popf
jmp
jo
in
jo
jmp
jmp
jo
cmc
jmp
jo
std
jmp
jo
vpshufd
jo
int
jo
shr
jo
aad
jo
fldl2t
jo
fucomp
jo
and
jo
and
out
jo
sub
out
jo
xor
out
jo
cmp
out
jo
add
out
jo
or
out
jo
adc
out
jo
sbb
out
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
out
jo
inc
out
jo
dec
out
jo
dec
out
jo
push
out
jo
push
out
jo
pop
out
jo
pop
out
jo
mov
out
jo
test
out
jo
mov
jo
mov
jo
mov
out
jo
sub
jo
mov
jo
(bad)
out
jo
xchg
out
jo
xchg
out
jo
cdq
out
jo
popf
out
jo
loope
jo
in
jo
jmp
out
jo
icebp
out
jo
cmc
out
jo
stc
out
jo
std
out
jo
shr
inc
vpshufhw
jo
int
jo
shr
jo
aad
jo
fldz
jo
fucomp
jo
and
jo
and
out
jo
sub
out
jo
xor
out
jo
cmp
out
jo
add
out
jo
or
out
jo
adc
out
jo
sbb
out
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
out
jo
inc
out
jo
dec
out
jo
dec
out
jo
push
out
jo
push
out
jo
pop
out
jo
pop
out
jo
mov
out
jo
test
out
jo
mov
jo
mov
jo
mov
out
jo
sub
jo
mov
jo
(bad)
out
jo
xchg
out
jo
xchg
out
jo
cdq
out
jo
popf
out
jo
loope
jo
in
jo
jmp
out
jo
icebp
out
jo
cmc
out
jo
stc
out
jo
std
out
jo
shr
inc
vpshuflw
jo
int
jo
shr
jo
aad
jo
(bad)
jo
fucomp
jo
and
jo
and
in
jo
sub
in
jo
xor
in
jo
cmp
in
jo
add
in
jo
or
in
jo
adc
in
jo
sbb
in
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
in
jo
inc
in
jo
dec
in
jo
dec
in
jo
push
in
jo
push
in
jo
pop
in
jo
pop
in
jo
mov
in
jo
test
in
jo
mov
jo
mov
jo
mov
in
jo
sub
jo
mov
jo
(bad)
in
jo
xchg
in
jo
xchg
in
jo
cdq
in
jo
popf
in
jo
loope
jo
in
jo
jmp
in
jo
icebp
in
jo
cmc
in
jo
stc
in
jo
std
in
jo
shr
inc
(bad)
inc
leave
in
jo
int
jo
shr
jo
aad
jo
fldlg2
jo
fucomp
jo
and
jo
and
in
jo
sub
in
jo
xor
in
jo
cmp
in
jo
add
in
jo
or
in
jo
adc
in
jo
sbb
in
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
in
jo
inc
in
jo
dec
in
jo
dec
in
jo
push
in
jo
push
in
jo
pop
in
jo
pop
in
jo
mov
in
jo
test
in
jo
mov
jo
mov
jo
mov
in
jo
sub
jo
mov
jo
(bad)
in
jo
xchg
in
jo
xchg
in
jo
cdq
in
jo
popf
in
jo
loope
jo
in
jo
jmp
in
jo
icebp
in
jo
cmc
in
jo
stc
in
jo
std
in
jo
shr
inc
vpshufd
jo
int
jo
shr
jo
aad
jo
fldln2
jo
fucomp
jo
and
jo
and
loop
inc
sub
loop
inc
xor
loop
inc
cmp
loop
inc
add
loop
inc
or
loop
inc
adc
loop
inc
sbb
loop
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
loop
inc
inc
loop
inc
dec
loop
inc
dec
loop
inc
push
loop
inc
push
loop
inc
pop
loop
inc
pop
loop
inc
mov
loop
inc
test
loop
inc
mov
jo
mov
jo
mov
loop
inc
and
jo
mov
jo
(bad)
loop
inc
xchg
loop
inc
xchg
loop
inc
cdq
loop
inc
popf
loop
inc
loope
jo
in
jo
jmp
loop
inc
icebp
loop
inc
cmc
loop
inc
stc
loop
inc
std
loop
inc
shl
inc
vpshufhw
jo
int
jo
shl
jo
aad
jo
(bad)
jo
fucom
jo
and
jo
and
jecxz
inc
sub
jecxz
inc
xor
jecxz
inc
cmp
jecxz
inc
add
jecxz
inc
or
jecxz
inc
adc
jecxz
inc
sbb
jecxz
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
jecxz
inc
inc
jecxz
inc
dec
jecxz
inc
dec
jecxz
inc
push
jecxz
inc
push
jecxz
inc
pop
jecxz
inc
pop
jecxz
inc
mov
jecxz
inc
test
jecxz
inc
mov
jo
mov
jo
mov
jecxz
inc
and
jo
mov
jo
(bad)
jecxz
inc
xchg
jecxz
inc
xchg
jecxz
inc
cdq
jecxz
inc
popf
jecxz
inc
loope
jo
in
jo
jmp
jecxz
inc
icebp
jecxz
inc
cmc
jecxz
inc
stc
jecxz
inc
std
jecxz
inc
shl
inc
vpshuflw
jo
int
jo
shl
jo
aad
jo
(bad)
jo
fucom
jo
and
jo
and
loopne
inc
sub
loopne
inc
xor
loopne
inc
cmp
loopne
inc
add
loopne
inc
or
loopne
inc
adc
loopne
inc
sbb
loopne
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
loopne
inc
inc
loopne
inc
dec
loopne
inc
dec
loopne
inc
push
loopne
inc
push
loopne
inc
pop
loopne
inc
pop
loopne
inc
mov
loopne
inc
test
loopne
inc
mov
jo
mov
jo
mov
loopne
inc
and
jo
mov
jo
(bad)
loopne
inc
xchg
loopne
inc
xchg
loopne
inc
cdq
loopne
inc
popf
loopne
inc
loope
jo
in
jo
jmp
loopne
inc
icebp
loopne
inc
cmc
loopne
inc
stc
loopne
inc
std
loopne
inc
shl
inc
(bad)
inc
leave
loopne
inc
int
jo
shl
jo
aad
jo
fchs
jo
fucom
jo
and
jo
and
loope
inc
sub
loope
inc
xor
loope
inc
cmp
loope
inc
add
loope
inc
or
loope
inc
adc
loope
inc
sbb
loope
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
loope
inc
inc
loope
inc
dec
loope
inc
dec
loope
inc
push
loope
inc
push
loope
inc
pop
loope
inc
pop
loope
inc
mov
loope
inc
test
loope
inc
mov
jo
mov
jo
mov
loope
inc
and
jo
mov
jo
(bad)
loope
inc
xchg
loope
inc
xchg
loope
inc
cdq
loope
inc
popf
loope
inc
loope
jo
in
jo
jmp
loope
inc
icebp
loope
inc
cmc
loope
inc
stc
loope
inc
std
loope
inc
shl
inc
vpshufd
jo
int
jo
shl
jo
aad
jo
fabs
jo
fucom
jo
and
jo
and
out
inc
sub
out
inc
xor
out
inc
cmp
out
inc
add
out
inc
or
out
inc
adc
out
inc
sbb
out
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
out
inc
inc
out
inc
dec
out
inc
dec
out
inc
push
out
inc
push
out
inc
pop
out
inc
pop
out
inc
mov
out
inc
test
out
inc
mov
jo
mov
jo
mov
out
inc
and
jo
mov
jo
(bad)
out
inc
xchg
out
inc
xchg
out
inc
cdq
out
inc
popf
out
inc
loope
jo
in
jo
jmp
out
inc
icebp
out
inc
cmc
out
inc
stc
out
inc
std
out
inc
shl
inc
vpshufhw
jo
int
jo
shl
jo
aad
jo
(bad)
jo
fucom
jo
and
jo
and
out
inc
sub
out
inc
xor
out
inc
cmp
out
inc
add
out
inc
or
out
inc
adc
out
inc
sbb
out
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
out
inc
inc
out
inc
dec
out
inc
dec
out
inc
push
out
inc
push
out
inc
pop
out
inc
pop
out
inc
mov
out
inc
test
out
inc
mov
jo
mov
jo
mov
out
inc
and
jo
mov
jo
(bad)
out
inc
xchg
out
inc
xchg
out
inc
cdq
out
inc
popf
out
inc
loope
jo
in
jo
jmp
out
inc
icebp
out
inc
cmc
out
inc
stc
out
inc
std
out
inc
shl
inc
vpshuflw
jo
int
jo
shl
jo
aad
jo
(bad)
jo
fucom
jo
and
jo
and
in
inc
sub
in
inc
xor
in
inc
cmp
in
inc
add
in
inc
or
in
inc
adc
in
inc
sbb
in
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
in
inc
inc
in
inc
dec
in
inc
dec
in
inc
push
in
inc
push
in
inc
pop
in
inc
pop
in
inc
mov
in
inc
test
in
inc
mov
jo
mov
jo
mov
in
inc
and
jo
mov
jo
(bad)
in
inc
xchg
in
inc
xchg
in
inc
cdq
in
inc
popf
in
inc
loope
jo
in
jo
jmp
in
inc
icebp
in
inc
cmc
in
inc
stc
in
inc
std
in
inc
shl
inc
(bad)
inc
leave
in
inc
int
jo
shl
jo
aad
jo
ftst
jo
fucom
jo
and
jo
and
in
inc
sub
in
inc
xor
in
inc
cmp
in
inc
add
in
inc
or
in
inc
adc
in
inc
sbb
in
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
in
inc
inc
in
inc
dec
in
inc
dec
in
inc
push
in
inc
push
in
inc
pop
in
inc
pop
in
inc
mov
in
inc
test
in
inc
mov
jo
mov
jo
mov
in
inc
and
jo
mov
jo
(bad)
in
inc
xchg
in
inc
xchg
in
inc
cdq
in
inc
popf
in
inc
loope
jo
in
jo
jmp
in
inc
icebp
in
inc
cmc
in
inc
stc
in
inc
std
in
inc
shl
inc
vpshufd
jo
int
jo
shl
jo
aad
jo
fxam
jo
fucom
jo
and
jo
and
fidiv
sub
fidiv
xor
fidiv
cmp
fidiv
add
fidiv
or
fidiv
adc
fidiv
sbb
fidiv
fidiv
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
fidiv
inc
fidiv
dec
fidiv
dec
fidiv
push
fidiv
push
fidiv
pop
fidiv
pop
fidiv
mov
fidiv
test
fidiv
mov
jo
mov
jo
mov
fidiv
sbb
jo
mov
jo
(bad)
fidiv
xchg
fidiv
xchg
fidiv
cdq
fidiv
popf
fidiv
loope
jo
in
jo
jmp
fidiv
icebp
fidiv
cmc
fidiv
stc
fidiv
std
fidiv
rcr
inc
vpshufhw
jo
int
jo
rcr
jo
aad
jo
(bad)
jo
fstp
jo
and
jo
and
(bad)
sub
(bad)
xor
(bad)
cmp
(bad)
add
(bad)
or
(bad)
adc
(bad)
sbb
(bad)
(bad)
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
(bad)
inc
(bad)
dec
(bad)
dec
(bad)
push
(bad)
push
(bad)
pop
(bad)
pop
(bad)
mov
(bad)
test
(bad)
mov
jo
mov
jo
mov
(bad)
sbb
jo
mov
jo
(bad)
(bad)
xchg
(bad)
xchg
(bad)
cdq
(bad)
popf
(bad)
loope
jo
in
jo
jmp
(bad)
icebp
(bad)
cmc
(bad)
stc
(bad)
std
(bad)
rcr
inc
vpshuflw
jo
int
jo
rcr
jo
aad
jo
(bad)
jo
fstp
jo
and
jo
and
fdiv
sub
fdiv
xor
fdiv
cmp
fdiv
add
fdiv
or
fdiv
adc
fdiv
sbb
fdiv
fdiv
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
fdiv
inc
fdiv
dec
fdiv
dec
fdiv
push
fdiv
push
fdiv
pop
fdiv
pop
fdiv
mov
fdiv
test
fdiv
mov
jo
mov
jo
mov
fdiv
sbb
jo
mov
jo
(bad)
fdiv
xchg
fdiv
xchg
fdiv
cdq
fdiv
popf
fdiv
loope
jo
in
jo
jmp
fdiv
icebp
fdiv
cmc
fdiv
stc
fdiv
std
fdiv
rcr
inc
(bad)
inc
leave
fdiv
int
jo
rcr
jo
aad
jo
(bad)
jo
fstp
jo
and
jo
and
fnstenv
sub
fnstenv
xor
fnstenv
cmp
fnstenv
add
fnstenv
or
fnstenv
adc
fnstenv
sbb
fnstenv
fnstenv
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
fnstenv
inc
fnstenv
dec
fnstenv
dec
fnstenv
push
fnstenv
push
fnstenv
pop
fnstenv
pop
fnstenv
mov
fnstenv
test
fnstenv
mov
jo
mov
jo
mov
fnstenv
sbb
jo
mov
jo
(bad)
fnstenv
xchg
fnstenv
xchg
fnstenv
cdq
fnstenv
popf
fnstenv
loope
jo
in
jo
jmp
fnstenv
icebp
fnstenv
cmc
fnstenv
stc
fnstenv
std
fnstenv
rcr
inc
vpshufd
jo
int
jo
rcr
jo
aad
jo
(bad)
jo
fstp
jo
and
jo
and
fidiv
sub
fidiv
xor
fidiv
cmp
fidiv
add
fidiv
or
fidiv
adc
fidiv
sbb
fidiv
fidiv
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
fidiv
inc
fidiv
dec
fidiv
dec
fidiv
push
fidiv
push
fidiv
pop
fidiv
pop
fidiv
mov
fidiv
test
fidiv
mov
jo
mov
jo
mov
fidiv
sbb
jo
mov
jo
(bad)
fidiv
xchg
fidiv
xchg
fidiv
cdq
fidiv
popf
fidiv
loope
jo
in
jo
jmp
fidiv
icebp
fidiv
cmc
fidiv
stc
fidiv
std
fidiv
rcr
inc
vpshufhw
jo
int
jo
rcr
jo
aad
jo
(bad)
jo
fstp
jo
and
jo
and
fbstp
sub
fbstp
xor
fbstp
cmp
fbstp
add
fbstp
or
fbstp
adc
fbstp
sbb
fbstp
fbstp
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
fbstp
inc
fbstp
dec
fbstp
dec
fbstp
push
fbstp
push
fbstp
pop
fbstp
pop
fbstp
mov
fbstp
test
fbstp
mov
jo
mov
jo
mov
fbstp
sbb
jo
mov
jo
(bad)
fbstp
xchg
fbstp
xchg
fbstp
cdq
fbstp
popf
fbstp
loope
jo
in
jo
jmp
fbstp
icebp
fbstp
cmc
fbstp
stc
fbstp
std
fbstp
rcr
inc
vpshuflw
jo
int
jo
rcr
jo
aad
jo
(bad)
jo
fstp
jo
and
jo
and
fdiv
sub
fdiv
xor
fdiv
cmp
fdiv
add
fdiv
or
fdiv
adc
fdiv
sbb
fdiv
fdiv
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
fdiv
inc
fdiv
dec
fdiv
dec
fdiv
push
fdiv
push
fdiv
pop
fdiv
pop
fdiv
mov
fdiv
test
fdiv
mov
jo
mov
jo
mov
fdiv
sbb
jo
mov
jo
(bad)
fdiv
xchg
fdiv
xchg
fdiv
cdq
fdiv
popf
fdiv
loope
jo
in
jo
jmp
fdiv
icebp
fdiv
cmc
fdiv
stc
fdiv
std
fdiv
rcr
inc
(bad)
inc
leave
fdiv
int
jo
rcr
jo
aad
jo
(bad)
jo
fstp
jo
and
jo
and
fnsave
sub
fnsave
xor
fnsave
cmp
fnsave
add
fnsave
or
fnsave
adc
fnsave
sbb
fnsave
fnsave
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
fnsave
inc
fnsave
dec
fnsave
dec
fnsave
push
fnsave
push
fnsave
pop
fnsave
pop
fnsave
mov
fnsave
test
fnsave
mov
jo
mov
jo
mov
fnsave
sbb
jo
mov
jo
(bad)
fnsave
xchg
fnsave
xchg
fnsave
cdq
fnsave
popf
fnsave
loope
jo
in
jo
jmp
fnsave
icebp
fnsave
cmc
fnsave
stc
fnsave
std
fnsave
rcr
inc
vpshufd
jo
int
jo
rcr
jo
aad
jo
(bad)
jo
fstp
jo
and
jo
and
shl
sub
shl
xor
shl
cmp
shl
add
shl
or
shl
adc
shl
sbb
shl
shl
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
shl
inc
shl
dec
shl
dec
shl
push
shl
push
shl
pop
shl
pop
shl
mov
shl
test
shl
mov
jo
mov
jo
mov
shl
adc
jo
mov
jo
(bad)
shl
xchg
shl
xchg
shl
cdq
shl
popf
shl
loope
jo
in
jo
jmp
shl
icebp
shl
cmc
shl
stc
shl
std
shl
rcl
inc
vpshufhw
jo
int
jo
rcl
jo
aad
jo
(bad)
jo
fst
jo
and
jo
and
shl
sub
shl
xor
shl
cmp
shl
add
shl
or
shl
adc
shl
sbb
shl
shl
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
shl
inc
shl
dec
shl
dec
shl
push
shl
push
shl
pop
shl
pop
shl
mov
shl
test
shl
mov
jo
mov
jo
mov
shl
adc
jo
mov
jo
(bad)
shl
xchg
shl
xchg
shl
cdq
shl
popf
shl
loope
jo
in
jo
jmp
shl
icebp
shl
cmc
shl
stc
shl
std
shl
rcl
inc
vpshuflw
jo
int
jo
rcl
jo
aad
jo
(bad)
jo
fst
jo
and
jo
and
shl
sub
shl
xor
shl
cmp
shl
add
shl
or
shl
adc
shl
sbb
shl
shl
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
shl
inc
shl
dec
shl
dec
shl
push
shl
push
shl
pop
shl
pop
shl
mov
shl
test
shl
mov
jo
mov
jo
mov
shl
adc
jo
mov
jo
(bad)
shl
xchg
shl
xchg
shl
cdq
shl
popf
shl
loope
jo
in
jo
jmp
shl
icebp
shl
cmc
shl
stc
shl
std
shl
rcl
inc
(bad)
inc
leave
shl
int
jo
rcl
jo
aad
jo
fnop
jo
fst
jo
and
jo
and
shl
sub
shl
xor
shl
cmp
shl
add
shl
or
shl
adc
shl
sbb
shl
shl
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
shl
inc
shl
dec
shl
dec
shl
push
shl
push
shl
pop
shl
pop
shl
mov
shl
test
shl
mov
jo
mov
jo
mov
shl
adc
jo
mov
jo
(bad)
shl
xchg
shl
xchg
shl
cdq
shl
popf
shl
loope
jo
in
jo
jmp
shl
icebp
shl
cmc
shl
stc
shl
std
shl
rcl
inc
vpshufd
jo
int
jo
rcl
jo
aad
jo
(bad)
jo
fst
jo
and
jo
and
(bad)
jo
sub
(bad)
jo
xor
(bad)
jo
cmp
(bad)
jo
add
(bad)
jo
or
(bad)
jo
adc
(bad)
jo
sbb
(bad)
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
(bad)
jo
inc
(bad)
jo
dec
(bad)
jo
dec
(bad)
jo
push
(bad)
jo
push
(bad)
jo
pop
(bad)
jo
pop
(bad)
jo
mov
(bad)
jo
test
(bad)
jo
mov
jo
mov
jo
mov
(bad)
jo
adc
jo
mov
jo
(bad)
(bad)
jo
xchg
(bad)
jo
xchg
(bad)
jo
cdq
(bad)
jo
popf
(bad)
jo
loope
jo
in
jo
jmp
(bad)
jo
icebp
(bad)
jo
cmc
(bad)
jo
stc
(bad)
jo
std
(bad)
jo
rcl
inc
vpshufhw
jo
int
jo
rcl
jo
aad
jo
(bad)
jo
fst
jo
and
jo
and
xlat
jo
sub
xlat
jo
xor
xlat
jo
cmp
xlat
jo
add
xlat
jo
or
xlat
jo
adc
xlat
jo
sbb
xlat
jo
xlat
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
xlat
jo
inc
xlat
jo
dec
xlat
jo
dec
xlat
jo
push
xlat
jo
push
xlat
jo
pop
xlat
jo
pop
xlat
jo
mov
xlat
jo
test
xlat
jo
mov
jo
mov
jo
mov
xlat
jo
adc
jo
mov
jo
(bad)
xlat
jo
xchg
xlat
jo
xchg
xlat
jo
cdq
xlat
jo
popf
xlat
jo
loope
jo
in
jo
jmp
xlat
jo
icebp
xlat
jo
cmc
xlat
jo
stc
xlat
jo
std
xlat
jo
rcl
inc
vpshuflw
jo
int
jo
rcl
jo
aad
jo
(bad)
jo
fst
jo
and
jo
and
aam
inc
sub
aam
inc
xor
aam
inc
cmp
aam
inc
add
aam
inc
or
aam
inc
adc
aam
inc
sbb
aam
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
aam
inc
inc
aam
inc
dec
aam
inc
dec
aam
inc
push
aam
inc
push
aam
inc
pop
aam
inc
pop
aam
inc
mov
aam
inc
test
aam
inc
mov
jo
mov
jo
mov
aam
inc
adc
jo
mov
jo
(bad)
aam
inc
xchg
aam
inc
xchg
aam
inc
cdq
aam
inc
popf
aam
inc
loope
jo
in
jo
jmp
aam
inc
icebp
aam
inc
cmc
aam
inc
stc
aam
inc
std
aam
inc
rcl
inc
(bad)
inc
leave
aam
inc
int
jo
rcl
jo
aad
jo
(bad)
jo
fst
jo
and
jo
and
aad
inc
sub
aad
inc
xor
aad
inc
cmp
aad
inc
add
aad
inc
or
aad
inc
adc
aad
inc
sbb
aad
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
aad
inc
inc
aad
inc
dec
aad
inc
dec
aad
inc
push
aad
inc
push
aad
inc
pop
aad
inc
pop
aad
inc
mov
aad
inc
test
aad
inc
mov
jo
mov
jo
mov
aad
inc
adc
jo
mov
jo
(bad)
aad
inc
xchg
aad
inc
xchg
aad
inc
cdq
aad
inc
popf
aad
inc
loope
jo
in
jo
jmp
aad
inc
icebp
aad
inc
cmc
aad
inc
stc
aad
inc
std
aad
inc
rcl
inc
vpshufd
jo
int
jo
rcl
jo
aad
jo
(bad)
jo
fst
jo
and
jo
and
retf
sub
retf
xor
retf
cmp
retf
add
retf
or
retf
adc
retf
sbb
retf
gs
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
retf
inc
retf
dec
retf
dec
retf
push
retf
push
retf
pop
retf
pop
retf
mov
retf
test
retf
mov
jo
mov
jo
mov
retf
or
jo
mov
jo
(bad)
retf
xchg
retf
xchg
retf
cdq
retf
popf
retf
loope
jo
in
jo
jmp
retf
icebp
retf
cmc
retf
stc
retf
std
retf
ror
inc
vpshufhw
jo
int
jo
ror
jo
aad
jo
fxch
jo
(bad)
jo
and
jo
and
retf
jo
sub
retf
jo
xor
retf
jo
cmp
retf
jo
add
retf
jo
or
retf
jo
adc
retf
jo
sbb
retf
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
retf
jo
inc
retf
jo
dec
retf
jo
dec
retf
jo
push
retf
jo
push
retf
jo
pop
retf
jo
pop
retf
jo
mov
retf
jo
test
retf
jo
mov
jo
mov
jo
mov
retf
jo
or
jo
mov
jo
(bad)
retf
jo
xchg
retf
jo
xchg
retf
jo
cdq
retf
jo
popf
retf
jo
loope
jo
in
jo
jmp
retf
jo
icebp
retf
jo
cmc
retf
jo
stc
retf
jo
std
retf
jo
ror
inc
vpshuflw
jo
int
jo
ror
jo
aad
jo
fxch
jo
(bad)
jo
and
jo
and
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
jo
and
leave
jo
sub
leave
jo
xor
leave
jo
cmp
leave
jo
add
leave
jo
or
leave
jo
adc
leave
jo
sbb
leave
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
leave
jo
inc
leave
jo
dec
leave
jo
dec
leave
jo
push
leave
jo
push
leave
jo
pop
leave
jo
pop
leave
jo
mov
leave
jo
test
leave
jo
mov
jo
mov
jo
mov
leave
jo
or
jo
mov
jo
(bad)
leave
jo
xchg
leave
jo
xchg
leave
jo
cdq
leave
jo
popf
leave
jo
loope
jo
in
jo
jmp
leave
jo
icebp
leave
jo
cmc
leave
jo
stc
leave
jo
std
leave
jo
ror
inc
vpshufd
jo
int
jo
ror
jo
aad
jo
fxch
jo
(bad)
jo
and
jo
and
into
jo
sub
into
jo
xor
into
jo
cmp
into
jo
add
into
jo
or
into
jo
adc
into
jo
sbb
into
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
into
jo
inc
into
jo
dec
into
jo
dec
into
jo
push
into
jo
push
into
jo
pop
into
jo
pop
into
jo
mov
into
jo
test
into
jo
mov
jo
mov
jo
mov
into
jo
or
jo
mov
jo
(bad)
into
jo
xchg
into
jo
xchg
into
jo
cdq
into
jo
popf
into
jo
loope
jo
in
jo
jmp
into
jo
icebp
into
jo
cmc
into
jo
stc
into
jo
std
into
jo
ror
inc
vpshufhw
jo
int
jo
ror
jo
aad
jo
fxch
jo
(bad)
jo
and
jo
and
iret
jo
sub
iret
jo
xor
iret
jo
cmp
iret
jo
add
iret
jo
or
iret
jo
adc
iret
jo
sbb
iret
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
iret
jo
inc
iret
jo
dec
iret
jo
dec
iret
jo
push
iret
jo
push
iret
jo
pop
iret
jo
pop
iret
jo
mov
iret
jo
test
iret
jo
mov
jo
mov
jo
mov
iret
jo
or
jo
mov
jo
(bad)
iret
jo
xchg
iret
jo
xchg
iret
jo
cdq
iret
jo
popf
iret
jo
loope
jo
in
jo
jmp
iret
jo
icebp
iret
jo
cmc
iret
jo
stc
iret
jo
std
iret
jo
ror
inc
vpshuflw
jo
int
jo
ror
jo
aad
jo
fxch
jo
(bad)
jo
and
jo
and
int3
jo
sub
int3
jo
xor
int3
jo
cmp
int3
jo
add
int3
jo
or
int3
jo
adc
int3
jo
sbb
int3
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
int3
jo
inc
int3
jo
dec
int3
jo
dec
int3
jo
push
int3
jo
push
int3
jo
pop
int3
jo
pop
int3
jo
mov
int3
jo
test
int3
jo
mov
jo
mov
jo
mov
int3
jo
or
jo
mov
jo
(bad)
int3
jo
xchg
int3
jo
xchg
int3
jo
cdq
int3
jo
popf
int3
jo
loope
jo
in
jo
jmp
int3
jo
icebp
int3
jo
cmc
int3
jo
stc
int3
jo
std
int3
jo
ror
inc
(bad)
inc
leave
int3
jo
int
jo
ror
jo
aad
jo
fxch
jo
(bad)
jo
and
jo
and
int
inc
sub
int
inc
xor
int
inc
cmp
int
inc
add
int
inc
or
int
inc
adc
int
inc
sbb
int
inc
gs
inc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
int
inc
inc
int
inc
dec
int
inc
dec
int
inc
push
int
inc
push
int
inc
pop
int
inc
pop
int
inc
mov
int
inc
test
int
inc
mov
jo
mov
jo
mov
int
inc
or
jo
mov
jo
(bad)
int
inc
xchg
int
inc
xchg
int
inc
cdq
int
inc
popf
int
inc
loope
jo
in
jo
jmp
int
inc
icebp
int
inc
cmc
int
inc
stc
int
inc
std
int
inc
ror
inc
vpshufd
jo
int
jo
ror
jo
aad
jo
fxch
jo
(bad)
jo
and
jo
and
ret
sub
ret
xor
ret
cmp
ret
add
ret
or
ret
adc
ret
sbb
ret
gs
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
ret
inc
ret
dec
ret
dec
ret
push
ret
push
ret
pop
ret
pop
ret
mov
ret
test
ret
mov
jo
mov
jo
mov
ret
add
jo
mov
jo
(bad)
ret
xchg
ret
xchg
ret
cdq
ret
popf
ret
loope
jo
in
jo
jmp
ret
icebp
ret
cmc
ret
stc
ret
std
ret
rol
inc
vpshufhw
jo
int
jo
rol
jo
aad
jo
fld
jo
ffree
jo
and
jo
and
ret
jo
sub
ret
jo
xor
ret
jo
cmp
ret
jo
add
ret
jo
or
ret
jo
adc
ret
jo
sbb
ret
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
ret
jo
inc
ret
jo
dec
ret
jo
dec
ret
jo
push
ret
jo
push
ret
jo
pop
ret
jo
pop
ret
jo
mov
ret
jo
test
ret
jo
mov
jo
mov
jo
mov
ret
jo
add
jo
mov
jo
(bad)
ret
jo
xchg
ret
jo
xchg
ret
jo
cdq
ret
jo
popf
ret
jo
loope
jo
in
jo
jmp
ret
jo
icebp
ret
jo
cmc
ret
jo
stc
ret
jo
std
ret
jo
rol
inc
vpshuflw
jo
int
jo
rol
jo
aad
jo
fld
jo
ffree
jo
and
jo
and
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
(bad)
jo
and
(bad)
jo
sub
(bad)
jo
xor
(bad)
jo
cmp
(bad)
jo
add
(bad)
jo
or
(bad)
jo
adc
(bad)
jo
sbb
(bad)
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
(bad)
jo
inc
(bad)
jo
dec
(bad)
jo
dec
(bad)
jo
push
(bad)
jo
push
(bad)
jo
pop
(bad)
jo
pop
(bad)
jo
mov
(bad)
jo
test
(bad)
jo
mov
jo
mov
jo
mov
(bad)
jo
add
jo
mov
jo
(bad)
(bad)
jo
xchg
(bad)
jo
xchg
(bad)
jo
cdq
(bad)
jo
popf
(bad)
jo
loope
jo
in
jo
jmp
(bad)
jo
icebp
(bad)
jo
cmc
(bad)
jo
stc
(bad)
jo
std
(bad)
jo
rol
inc
vpshufhw
jo
int
jo
rol
jo
aad
jo
fld
jo
ffree
jo
and
jo
and
(bad)
jo
sub
(bad)
jo
xor
(bad)
jo
cmp
(bad)
jo
add
(bad)
jo
or
(bad)
jo
adc
(bad)
jo
sbb
(bad)
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
(bad)
jo
inc
(bad)
jo
dec
(bad)
jo
dec
(bad)
jo
push
(bad)
jo
push
(bad)
jo
pop
(bad)
jo
pop
(bad)
jo
mov
(bad)
jo
test
(bad)
jo
mov
jo
mov
jo
mov
(bad)
jo
add
jo
mov
jo
(bad)
(bad)
jo
xchg
(bad)
jo
xchg
(bad)
jo
cdq
(bad)
jo
popf
(bad)
jo
loope
jo
in
jo
jmp
(bad)
jo
icebp
(bad)
jo
cmc
(bad)
jo
stc
(bad)
jo
std
(bad)
jo
rol
inc
vpshuflw
jo
int
jo
rol
jo
aad
jo
fld
jo
ffree
jo
and
jo
and
les
sub
les
xor
les
cmp
les
add
les
or
les
adc
les
sbb
les
les
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
les
inc
les
dec
les
dec
les
push
les
push
les
pop
les
pop
les
mov
les
test
les
mov
jo
mov
jo
mov
les
add
jo
mov
jo
(bad)
les
xchg
les
xchg
les
cdq
les
popf
les
loope
jo
in
jo
jmp
les
icebp
les
cmc
les
stc
les
std
les
rol
inc
(bad)
inc
leave
les
int
jo
rol
jo
aad
jo
fld
jo
ffree
jo
and
jo
and
lds
sub
lds
xor
lds
cmp
lds
add
lds
or
lds
adc
lds
sbb
lds
lds
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
lds
inc
lds
dec
lds
dec
lds
push
lds
push
lds
pop
lds
pop
lds
mov
lds
test
lds
mov
jo
mov
jo
mov
lds
add
jo
mov
jo
(bad)
lds
xchg
lds
xchg
lds
cdq
lds
popf
lds
loope
jo
in
jo
jmp
lds
icebp
lds
cmc
lds
stc
lds
std
lds
rol
inc
vpshufd
jo
int
jo
rol
jo
aad
jo
fld
jo
ffree
jo
and
jo
and
cmp
sub
cmp
xor
cmp
cmp
cmp
add
cmp
or
cmp
adc
cmp
sbb
cmp
cmp
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
cmp
inc
cmp
dec
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pop
cmp
mov
cmp
test
cmp
mov
jo
mov
jo
mov
cmp
cmp
jo
mov
jo
lea
jo
xchg
cmp
xchg
cmp
cdq
cmp
popf
cmp
loope
jo
in
jo
jmp
cmp
icebp
cmp
cmc
cmp
stc
cmp
std
cmp
sar
inc
lds
jo
leave
cmp
int
jo
sar
jo
aad
jo
fnstcw
jo
fnstsw
jo
and
jo
and
cmp
sub
cmp
xor
cmp
cmp
cmp
add
cmp
or
cmp
adc
cmp
sbb
cmp
cmp
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
cmp
inc
cmp
dec
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pop
cmp
mov
cmp
test
cmp
mov
jo
mov
jo
mov
cmp
cmp
jo
mov
jo
lea
jo
xchg
cmp
xchg
cmp
cdq
cmp
popf
cmp
loope
jo
in
jo
jmp
cmp
icebp
cmp
cmc
cmp
stc
cmp
std
cmp
sar
inc
lds
jo
leave
cmp
int
jo
sar
jo
aad
jo
fnstcw
jo
fnstsw
jo
and
jo
and
cmp
sub
cmp
xor
cmp
cmp
cmp
add
cmp
or
cmp
adc
cmp
sbb
cmp
cmp
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
cmp
inc
cmp
dec
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pop
cmp
mov
cmp
test
cmp
mov
jo
mov
jo
mov
cmp
cmp
jo
mov
jo
lea
jo
xchg
cmp
xchg
cmp
cdq
cmp
popf
cmp
loope
jo
in
jo
jmp
cmp
icebp
cmp
cmc
cmp
stc
cmp
std
cmp
sar
inc
lds
jo
leave
cmp
int
jo
sar
jo
aad
jo
fnstcw
jo
fnstsw
jo
and
jo
and
cmp
sub
cmp
xor
cmp
cmp
cmp
add
cmp
or
cmp
adc
cmp
sbb
cmp
cmp
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
cmp
inc
cmp
dec
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pop
cmp
mov
cmp
test
cmp
mov
jo
mov
jo
mov
cmp
cmp
jo
mov
jo
lea
jo
xchg
cmp
xchg
cmp
cdq
cmp
popf
cmp
loope
jo
in
jo
jmp
cmp
icebp
cmp
cmc
cmp
stc
cmp
std
cmp
sar
inc
lds
jo
leave
cmp
int
jo
sar
jo
aad
jo
fnstcw
jo
fnstsw
jo
and
jo
and
ds
sub
ds
xor
ds
cmp
ds
add
ds
or
ds
adc
ds
sbb
ds
gs
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
ds
inc
ds
dec
ds
dec
ds
push
ds
push
ds
pop
ds
pop
ds
mov
ds
test
ds
mov
jo
mov
jo
mov
ds
cmp
jo
mov
jo
lea
jo
xchg
ds
xchg
ds
cdq
ds
popf
ds
loope
jo
in
jo
jmp
ds
icebp
ds
cmc
ds
stc
ds
std
ds
sar
inc
lds
jo
leave
ds
int
jo
sar
jo
aad
jo
fnstcw
jo
fnstsw
jo
and
jo
and
aas
jo
sub
aas
jo
xor
aas
jo
cmp
aas
jo
add
aas
jo
or
aas
jo
adc
aas
jo
sbb
aas
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
aas
jo
inc
aas
jo
dec
aas
jo
dec
aas
jo
push
aas
jo
push
aas
jo
pop
aas
jo
pop
aas
jo
mov
aas
jo
test
aas
jo
mov
jo
mov
jo
mov
aas
jo
cmp
jo
mov
jo
lea
jo
xchg
aas
jo
xchg
aas
jo
cdq
aas
jo
popf
aas
jo
loope
jo
in
jo
jmp
aas
jo
icebp
aas
jo
cmc
aas
jo
stc
aas
jo
std
aas
jo
sar
inc
lds
jo
leave
aas
jo
int
jo
sar
jo
aad
jo
fnstcw
jo
fnstsw
jo
and
inc
and
cmp
inc
sub
cmp
inc
xor
cmp
inc
cmp
cmp
inc
add
cmp
inc
or
cmp
inc
adc
cmp
inc
sbb
cmp
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
cmp
inc
inc
cmp
inc
dec
cmp
inc
dec
cmp
inc
push
cmp
inc
push
cmp
inc
pop
cmp
inc
pop
cmp
inc
mov
cmp
inc
test
cmp
inc
mov
jo
mov
jo
mov
cmp
inc
cmp
inc
mov
inc
lea
inc
xchg
cmp
inc
xchg
cmp
inc
cdq
cmp
inc
popf
cmp
inc
loope
jo
in
jo
jmp
cmp
inc
icebp
cmp
inc
cmc
cmp
inc
stc
cmp
inc
std
cmp
inc
sar
lds
inc
leave
cmp
inc
int
jo
sar
inc
aad
jo
fnstcw
inc
fnstsw
inc
and
jo
sub
jo
xor
jo
cmp
jo
add
jo
or
jo
adc
jo
sbb
jo
popa
cmp
jo
imul
jo
jne
jo
jns
jo
jge
jo
inc
cmp
jo
dec
cmp
jo
push
cmp
jo
pop
cmp
jo
mov
cmp
jo
lods
cmp
jo
mov
jo
mov
cmp
jo
test
jo
lea
jo
xchg
cmp
jo
popf
cmp
jo
in
jo
jmp
cmp
jo
cmc
cmp
jo
std
cmp
jo
lds
jo
int
jo
sar
jo
fnstcw
jo
and
jo
and
xor
sub
xor
xor
xor
cmp
xor
add
xor
or
xor
adc
xor
sbb
xor
xor
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
xor
inc
xor
dec
xor
dec
xor
push
xor
push
xor
pop
xor
pop
xor
mov
xor
test
xor
mov
jo
mov
jo
mov
xor
xor
jo
mov
jo
lea
jo
xchg
xor
xchg
xor
cdq
xor
popf
xor
loope
jo
in
jo
jmp
xor
icebp
xor
cmc
xor
stc
xor
std
xor
shl
inc
lds
jo
leave
xor
int
jo
shl
jo
aad
jo
fnstenv
jo
fnsave
jo
and
jo
and
xor
sub
xor
xor
xor
cmp
xor
add
xor
or
xor
adc
xor
sbb
xor
xor
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
xor
inc
xor
dec
xor
dec
xor
push
xor
push
xor
pop
xor
pop
xor
mov
xor
test
xor
mov
jo
mov
jo
mov
xor
xor
jo
mov
jo
lea
jo
xchg
xor
xchg
xor
cdq
xor
popf
xor
loope
jo
in
jo
jmp
xor
icebp
xor
cmc
xor
stc
xor
std
xor
shl
inc
lds
jo
leave
xor
int
jo
shl
jo
aad
jo
fnstenv
jo
fnsave
jo
and
jo
and
xor
sub
xor
xor
xor
cmp
xor
add
xor
or
xor
adc
xor
sbb
xor
xor
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
xor
inc
xor
dec
xor
dec
xor
push
xor
push
xor
pop
xor
pop
xor
mov
xor
test
xor
mov
jo
mov
jo
mov
xor
xor
jo
mov
jo
lea
jo
xchg
xor
xchg
xor
cdq
xor
popf
xor
loope
jo
in
jo
jmp
xor
icebp
xor
cmc
xor
stc
xor
std
xor
shl
inc
lds
jo
leave
xor
int
jo
shl
jo
aad
jo
fnstenv
jo
fnsave
jo
and
jo
and
xor
sub
xor
xor
xor
cmp
xor
add
xor
or
xor
adc
xor
sbb
xor
xor
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
xor
inc
xor
dec
xor
dec
xor
push
xor
push
xor
pop
xor
pop
xor
mov
xor
test
xor
mov
jo
mov
jo
mov
xor
xor
jo
mov
jo
lea
jo
xchg
xor
xchg
xor
cdq
xor
popf
xor
loope
jo
in
jo
jmp
xor
icebp
xor
cmc
xor
stc
xor
std
xor
shl
inc
lds
jo
leave
xor
int
jo
shl
jo
aad
jo
fnstenv
jo
fnsave
jo
and
jo
and
ss
sub
ss
xor
ss
cmp
ss
add
ss
or
ss
adc
ss
sbb
ss
gs
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
ss
inc
ss
dec
ss
dec
ss
push
ss
push
ss
pop
ss
pop
ss
mov
ss
test
ss
mov
jo
mov
jo
mov
ss
xor
jo
mov
jo
lea
jo
xchg
ss
xchg
ss
cdq
ss
popf
ss
loope
jo
in
jo
jmp
ss
icebp
ss
cmc
ss
stc
ss
std
ss
shl
inc
lds
jo
leave
ss
int
jo
shl
jo
aad
jo
fnstenv
jo
fnsave
jo
and
jo
and
aaa
jo
sub
aaa
jo
xor
aaa
jo
cmp
aaa
jo
add
aaa
jo
or
aaa
jo
adc
aaa
jo
sbb
aaa
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
aaa
jo
inc
aaa
jo
dec
aaa
jo
dec
aaa
jo
push
aaa
jo
push
aaa
jo
pop
aaa
jo
pop
aaa
jo
mov
aaa
jo
test
aaa
jo
mov
jo
mov
jo
mov
aaa
jo
xor
jo
mov
jo
lea
jo
xchg
aaa
jo
xchg
aaa
jo
cdq
aaa
jo
popf
aaa
jo
loope
jo
in
jo
jmp
aaa
jo
icebp
aaa
jo
cmc
aaa
jo
stc
aaa
jo
std
aaa
jo
shl
inc
lds
jo
leave
aaa
jo
int
jo
shl
jo
aad
jo
fnstenv
jo
fnsave
jo
and
inc
and
xor
inc
sub
xor
inc
xor
xor
inc
cmp
xor
inc
add
xor
inc
or
xor
inc
adc
xor
inc
sbb
xor
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
xor
inc
inc
xor
inc
dec
xor
inc
dec
xor
inc
push
xor
inc
push
xor
inc
pop
xor
inc
pop
xor
inc
mov
xor
inc
test
xor
inc
mov
jo
mov
jo
mov
xor
inc
xor
inc
mov
inc
lea
inc
xchg
xor
inc
xchg
xor
inc
cdq
xor
inc
popf
xor
inc
loope
jo
in
jo
jmp
xor
inc
icebp
xor
inc
cmc
xor
inc
stc
xor
inc
std
xor
inc
shl
lds
inc
leave
xor
inc
int
jo
shl
inc
aad
jo
fnstenv
inc
fnsave
inc
and
jo
sub
jo
xor
jo
cmp
jo
add
jo
or
jo
adc
jo
sbb
jo
popa
xor
jo
imul
jo
jne
jo
jns
jo
jge
jo
inc
xor
jo
dec
xor
jo
push
xor
jo
pop
xor
jo
mov
xor
jo
lods
xor
jo
mov
jo
mov
xor
jo
test
jo
lea
jo
xchg
xor
jo
popf
xor
jo
in
jo
jmp
xor
jo
cmc
xor
jo
std
xor
jo
lds
jo
int
jo
shl
jo
fnstenv
jo
and
jo
and
sub
sub
sub
xor
sub
cmp
sub
add
sub
or
sub
adc
sub
sbb
sub
sub
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
sub
inc
sub
dec
sub
dec
sub
push
sub
push
sub
pop
sub
pop
sub
mov
sub
test
sub
mov
jo
mov
jo
mov
sub
sub
jo
mov
jo
lea
jo
xchg
sub
xchg
sub
cdq
sub
popf
sub
loope
jo
in
jo
jmp
sub
icebp
sub
cmc
sub
stc
sub
std
sub
shr
inc
lds
jo
leave
sub
int
jo
shr
jo
aad
jo
fldcw
jo
(bad)
jo
and
jo
and
sub
sub
sub
xor
sub
cmp
sub
add
sub
or
sub
adc
sub
sbb
sub
sub
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
sub
inc
sub
dec
sub
dec
sub
push
sub
push
sub
pop
sub
pop
sub
mov
sub
test
sub
mov
jo
mov
jo
mov
sub
sub
jo
mov
jo
lea
jo
xchg
sub
xchg
sub
cdq
sub
popf
sub
loope
jo
in
jo
jmp
sub
icebp
sub
cmc
sub
stc
sub
std
sub
shr
inc
lds
jo
leave
sub
int
jo
shr
jo
aad
jo
fldcw
jo
(bad)
jo
and
jo
and
sub
sub
sub
xor
sub
cmp
sub
add
sub
or
sub
adc
sub
sbb
sub
sub
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
sub
inc
sub
dec
sub
dec
sub
push
sub
push
sub
pop
sub
pop
sub
mov
sub
test
sub
mov
jo
mov
jo
mov
sub
sub
jo
mov
jo
lea
jo
xchg
sub
xchg
sub
cdq
sub
popf
sub
loope
jo
in
jo
jmp
sub
icebp
sub
cmc
sub
stc
sub
std
sub
shr
inc
lds
jo
leave
sub
int
jo
shr
jo
aad
jo
fldcw
jo
(bad)
jo
and
jo
and
sub
sub
sub
xor
sub
cmp
sub
add
sub
or
sub
adc
sub
sbb
sub
sub
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
sub
inc
sub
dec
sub
dec
sub
push
sub
push
sub
pop
sub
pop
sub
mov
sub
test
sub
mov
jo
mov
jo
mov
sub
sub
jo
mov
jo
lea
jo
xchg
sub
xchg
sub
cdq
sub
popf
sub
loope
jo
in
jo
jmp
sub
icebp
sub
cmc
sub
stc
sub
std
sub
shr
inc
lds
jo
leave
sub
int
jo
shr
jo
aad
jo
fldcw
jo
(bad)
jo
and
jo
and
cs
sub
cs
xor
cs
cmp
cs
add
cs
or
cs
adc
cs
sbb
cs
gs
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
cs
inc
cs
dec
cs
dec
cs
push
cs
push
cs
pop
cs
pop
cs
mov
cs
test
cs
mov
jo
mov
jo
mov
cs
sub
jo
mov
jo
lea
jo
xchg
cs
xchg
cs
cdq
cs
popf
cs
loope
jo
in
jo
jmp
cs
icebp
cs
cmc
cs
stc
cs
std
cs
shr
inc
lds
jo
leave
cs
int
jo
shr
jo
aad
jo
fldcw
jo
(bad)
jo
and
jo
and
das
jo
sub
das
jo
xor
das
jo
cmp
das
jo
add
das
jo
or
das
jo
adc
das
jo
sbb
das
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
das
jo
inc
das
jo
dec
das
jo
dec
das
jo
push
das
jo
push
das
jo
pop
das
jo
pop
das
jo
mov
das
jo
test
das
jo
mov
jo
mov
jo
mov
das
jo
sub
jo
mov
jo
lea
jo
xchg
das
jo
xchg
das
jo
cdq
das
jo
popf
das
jo
loope
jo
in
jo
jmp
das
jo
icebp
das
jo
cmc
das
jo
stc
das
jo
std
das
jo
shr
inc
lds
jo
leave
das
jo
int
jo
shr
jo
aad
jo
fldcw
jo
(bad)
jo
and
inc
and
sub
inc
sub
sub
inc
xor
sub
inc
cmp
sub
inc
add
sub
inc
or
sub
inc
adc
sub
inc
sbb
sub
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
sub
inc
inc
sub
inc
dec
sub
inc
dec
sub
inc
push
sub
inc
push
sub
inc
pop
sub
inc
pop
sub
inc
mov
sub
inc
test
sub
inc
mov
jo
mov
jo
mov
sub
inc
sub
inc
mov
inc
lea
inc
xchg
sub
inc
xchg
sub
inc
cdq
sub
inc
popf
sub
inc
loope
jo
in
jo
jmp
sub
inc
icebp
sub
inc
cmc
sub
inc
stc
sub
inc
std
sub
inc
shr
lds
inc
leave
sub
inc
int
jo
shr
inc
aad
jo
fldcw
inc
(bad)
inc
and
jo
sub
jo
xor
jo
cmp
jo
add
jo
or
jo
adc
jo
sbb
jo
popa
sub
jo
imul
jo
jne
jo
jns
jo
jge
jo
inc
sub
jo
dec
sub
jo
push
sub
jo
pop
sub
jo
mov
sub
jo
lods
sub
jo
mov
jo
mov
sub
jo
test
jo
lea
jo
xchg
sub
jo
popf
sub
jo
in
jo
jmp
sub
jo
cmc
sub
jo
std
sub
jo
lds
jo
int
jo
shr
jo
fldcw
jo
and
jo
and
and
sub
and
xor
and
cmp
and
add
and
or
and
adc
and
sbb
and
and
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
and
inc
and
dec
and
dec
and
push
and
push
and
pop
and
pop
and
mov
and
test
and
mov
jo
mov
jo
mov
and
and
jo
mov
jo
lea
jo
xchg
and
xchg
and
cdq
and
popf
and
loope
jo
in
jo
jmp
and
icebp
and
cmc
and
stc
and
std
and
shl
inc
lds
jo
leave
and
int
jo
shl
jo
aad
jo
fldenv
jo
frstor
jo
and
jo
and
and
sub
and
xor
and
cmp
and
add
and
or
and
adc
and
sbb
and
and
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
and
inc
and
dec
and
dec
and
push
and
push
and
pop
and
pop
and
mov
and
test
and
mov
jo
mov
jo
mov
and
and
jo
mov
jo
lea
jo
xchg
and
xchg
and
cdq
and
popf
and
loope
jo
in
jo
jmp
and
icebp
and
cmc
and
stc
and
std
and
shl
inc
lds
jo
leave
and
int
jo
shl
jo
aad
jo
fldenv
jo
frstor
jo
and
jo
and
and
sub
and
xor
and
cmp
and
add
and
or
and
adc
and
sbb
and
and
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
and
inc
and
dec
and
dec
and
push
and
push
and
pop
and
pop
and
mov
and
test
and
mov
jo
mov
jo
mov
and
and
jo
mov
jo
lea
jo
xchg
and
xchg
and
cdq
and
popf
and
loope
jo
in
jo
jmp
and
icebp
and
cmc
and
stc
and
std
and
shl
inc
lds
jo
leave
and
int
jo
shl
jo
aad
jo
fldenv
jo
frstor
jo
and
jo
and
and
sub
and
xor
and
cmp
and
add
and
or
and
adc
and
sbb
and
and
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
and
inc
and
dec
and
dec
and
push
and
push
and
pop
and
pop
and
mov
and
test
and
mov
jo
mov
jo
mov
and
and
jo
mov
jo
lea
jo
xchg
and
xchg
and
cdq
and
popf
and
loope
jo
in
jo
jmp
and
icebp
and
cmc
and
stc
and
std
and
shl
inc
lds
jo
leave
and
int
jo
shl
jo
aad
jo
fldenv
jo
frstor
jo
and
jo
and
es
sub
es
xor
es
cmp
es
add
es
or
es
adc
es
sbb
es
gs
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
es
inc
es
dec
es
dec
es
push
es
push
es
pop
es
pop
es
mov
es
test
es
mov
jo
mov
jo
mov
es
and
jo
mov
jo
lea
jo
xchg
es
xchg
es
cdq
es
popf
es
loope
jo
in
jo
jmp
es
icebp
es
cmc
es
stc
es
std
es
shl
inc
lds
jo
leave
es
int
jo
shl
jo
aad
jo
fldenv
jo
frstor
jo
and
jo
and
daa
jo
sub
daa
jo
xor
daa
jo
cmp
daa
jo
add
daa
jo
or
daa
jo
adc
daa
jo
sbb
daa
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
daa
jo
inc
daa
jo
dec
daa
jo
dec
daa
jo
push
daa
jo
push
daa
jo
pop
daa
jo
pop
daa
jo
mov
daa
jo
test
daa
jo
mov
jo
mov
jo
mov
daa
jo
and
jo
mov
jo
lea
jo
xchg
daa
jo
xchg
daa
jo
cdq
daa
jo
popf
daa
jo
loope
jo
in
jo
jmp
daa
jo
icebp
daa
jo
cmc
daa
jo
stc
daa
jo
std
daa
jo
shl
inc
lds
jo
leave
daa
jo
int
jo
shl
jo
aad
jo
fldenv
jo
frstor
jo
and
inc
and
and
inc
sub
and
inc
xor
and
inc
cmp
and
inc
add
and
inc
or
and
inc
adc
and
inc
sbb
and
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
and
inc
inc
and
inc
dec
and
inc
dec
and
inc
push
and
inc
push
and
inc
pop
and
inc
pop
and
inc
mov
and
inc
test
and
inc
mov
jo
mov
jo
mov
and
inc
and
inc
mov
inc
lea
inc
xchg
and
inc
xchg
and
inc
cdq
and
inc
popf
and
inc
loope
jo
in
jo
jmp
and
inc
icebp
and
inc
cmc
and
inc
stc
and
inc
std
and
inc
shl
lds
inc
leave
and
inc
int
jo
shl
inc
aad
jo
fldenv
inc
frstor
inc
and
jo
sub
jo
xor
jo
cmp
jo
add
jo
or
jo
adc
jo
sbb
jo
popa
and
jo
imul
jo
jne
jo
jns
jo
jge
jo
inc
and
jo
dec
and
jo
push
and
jo
pop
and
jo
mov
and
jo
lods
and
jo
mov
jo
mov
and
jo
test
jo
lea
jo
xchg
and
jo
popf
and
jo
in
jo
jmp
and
jo
cmc
and
jo
std
and
jo
lds
jo
int
jo
shl
jo
fldenv
jo
and
jo
and
sbb
sub
sbb
xor
sbb
cmp
sbb
add
sbb
or
sbb
adc
sbb
sbb
sbb
sbb
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
sbb
inc
sbb
dec
sbb
dec
sbb
push
sbb
push
sbb
pop
sbb
pop
sbb
mov
sbb
test
sbb
mov
jo
mov
jo
mov
sbb
sbb
jo
mov
jo
lea
jo
xchg
sbb
xchg
sbb
cdq
sbb
popf
sbb
loope
jo
in
jo
jmp
sbb
icebp
sbb
cmc
sbb
stc
sbb
std
sbb
rcr
inc
lds
jo
leave
sbb
int
jo
rcr
jo
aad
jo
fstp
jo
fstp
jo
and
jo
and
sbb
sub
sbb
xor
sbb
cmp
sbb
add
sbb
or
sbb
adc
sbb
sbb
sbb
sbb
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
sbb
inc
sbb
dec
sbb
dec
sbb
push
sbb
push
sbb
pop
sbb
pop
sbb
mov
sbb
test
sbb
mov
jo
mov
jo
mov
sbb
sbb
jo
mov
jo
lea
jo
xchg
sbb
xchg
sbb
cdq
sbb
popf
sbb
loope
jo
in
jo
jmp
sbb
icebp
sbb
cmc
sbb
stc
sbb
std
sbb
rcr
inc
lds
jo
leave
sbb
int
jo
rcr
jo
aad
jo
fstp
jo
fstp
jo
and
jo
and
sbb
sub
sbb
xor
sbb
cmp
sbb
add
sbb
or
sbb
adc
sbb
sbb
sbb
sbb
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
sbb
inc
sbb
dec
sbb
dec
sbb
push
sbb
push
sbb
pop
sbb
pop
sbb
mov
sbb
test
sbb
mov
jo
mov
jo
mov
sbb
sbb
jo
mov
jo
lea
jo
xchg
sbb
xchg
sbb
cdq
sbb
popf
sbb
loope
jo
in
jo
jmp
sbb
icebp
sbb
cmc
sbb
stc
sbb
std
sbb
rcr
inc
lds
jo
leave
sbb
int
jo
rcr
jo
aad
jo
fstp
jo
fstp
jo
and
jo
and
sbb
sub
sbb
xor
sbb
cmp
sbb
add
sbb
or
sbb
adc
sbb
sbb
sbb
sbb
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
sbb
inc
sbb
dec
sbb
dec
sbb
push
sbb
push
sbb
pop
sbb
pop
sbb
mov
sbb
test
sbb
mov
jo
mov
jo
mov
sbb
sbb
jo
mov
jo
lea
jo
xchg
sbb
xchg
sbb
cdq
sbb
popf
sbb
loope
jo
in
jo
jmp
sbb
icebp
sbb
cmc
sbb
stc
sbb
std
sbb
rcr
inc
lds
jo
leave
sbb
int
jo
rcr
jo
aad
jo
fstp
jo
fstp
jo
and
jo
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
sbb
jo
mov
jo
lea
jo
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rcr
inc
lds
jo
leave
push
jo
int
jo
rcr
jo
aad
jo
fstp
jo
fstp
jo
and
jo
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
sbb
jo
mov
jo
lea
jo
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rcr
inc
lds
jo
leave
pop
jo
int
jo
rcr
jo
aad
jo
fstp
jo
fstp
jo
and
inc
and
sbb
inc
sub
sbb
inc
xor
sbb
inc
cmp
sbb
inc
add
sbb
inc
or
sbb
inc
adc
sbb
inc
sbb
sbb
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
sbb
inc
inc
sbb
inc
dec
sbb
inc
dec
sbb
inc
push
sbb
inc
push
sbb
inc
pop
sbb
inc
pop
sbb
inc
mov
sbb
inc
test
sbb
inc
mov
jo
mov
jo
mov
sbb
inc
sbb
inc
mov
inc
lea
inc
xchg
sbb
inc
xchg
sbb
inc
cdq
sbb
inc
popf
sbb
inc
loope
jo
in
jo
jmp
sbb
inc
icebp
sbb
inc
cmc
sbb
inc
stc
sbb
inc
std
sbb
inc
rcr
lds
inc
leave
sbb
inc
int
jo
rcr
inc
aad
jo
fstp
inc
fstp
inc
and
jo
sub
jo
xor
jo
cmp
jo
add
jo
or
jo
adc
jo
sbb
jo
popa
sbb
jo
imul
jo
jne
jo
jns
jo
jge
jo
inc
sbb
jo
dec
sbb
jo
push
sbb
jo
pop
sbb
jo
mov
sbb
jo
lods
sbb
jo
mov
jo
mov
sbb
jo
test
jo
lea
jo
xchg
sbb
jo
popf
sbb
jo
in
jo
jmp
sbb
jo
cmc
sbb
jo
std
sbb
jo
lds
jo
int
jo
rcr
jo
fstp
jo
and
jo
and
adc
sub
adc
xor
adc
cmp
adc
add
adc
or
adc
adc
adc
sbb
adc
adc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
adc
inc
adc
dec
adc
dec
adc
push
adc
push
adc
pop
adc
pop
adc
mov
adc
test
adc
mov
jo
mov
jo
mov
adc
adc
jo
mov
jo
lea
jo
xchg
adc
xchg
adc
cdq
adc
popf
adc
loope
jo
in
jo
jmp
adc
icebp
adc
cmc
adc
stc
adc
std
adc
rcl
inc
lds
jo
leave
adc
int
jo
rcl
jo
aad
jo
fst
jo
fst
jo
and
jo
and
adc
sub
adc
xor
adc
cmp
adc
add
adc
or
adc
adc
adc
sbb
adc
adc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
adc
inc
adc
dec
adc
dec
adc
push
adc
push
adc
pop
adc
pop
adc
mov
adc
test
adc
mov
jo
mov
jo
mov
adc
adc
jo
mov
jo
lea
jo
xchg
adc
xchg
adc
cdq
adc
popf
adc
loope
jo
in
jo
jmp
adc
icebp
adc
cmc
adc
stc
adc
std
adc
rcl
inc
lds
jo
leave
adc
int
jo
rcl
jo
aad
jo
fst
jo
fst
jo
and
jo
and
adc
sub
adc
xor
adc
cmp
adc
add
adc
or
adc
adc
adc
sbb
adc
adc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
adc
inc
adc
dec
adc
dec
adc
push
adc
push
adc
pop
adc
pop
adc
mov
adc
test
adc
mov
jo
mov
jo
mov
adc
adc
jo
mov
jo
lea
jo
xchg
adc
xchg
adc
cdq
adc
popf
adc
loope
jo
in
jo
jmp
adc
icebp
adc
cmc
adc
stc
adc
std
adc
rcl
inc
lds
jo
leave
adc
int
jo
rcl
jo
aad
jo
fst
jo
fst
jo
and
jo
and
adc
sub
adc
xor
adc
cmp
adc
add
adc
or
adc
adc
adc
sbb
adc
adc
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
adc
inc
adc
dec
adc
dec
adc
push
adc
push
adc
pop
adc
pop
adc
mov
adc
test
adc
mov
jo
mov
jo
mov
adc
adc
jo
mov
jo
lea
jo
xchg
adc
xchg
adc
cdq
adc
popf
adc
loope
jo
in
jo
jmp
adc
icebp
adc
cmc
adc
stc
adc
std
adc
rcl
inc
lds
jo
leave
adc
int
jo
rcl
jo
aad
jo
fst
jo
fst
jo
and
jo
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
adc
jo
mov
jo
lea
jo
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rcl
inc
lds
jo
leave
push
jo
int
jo
rcl
jo
aad
jo
fst
jo
fst
jo
and
jo
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
adc
jo
mov
jo
lea
jo
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rcl
inc
lds
jo
leave
pop
jo
int
jo
rcl
jo
aad
jo
fst
jo
fst
jo
and
inc
and
adc
inc
sub
adc
inc
xor
adc
inc
cmp
adc
inc
add
adc
inc
or
adc
inc
adc
adc
inc
sbb
adc
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
adc
inc
inc
adc
inc
dec
adc
inc
dec
adc
inc
push
adc
inc
push
adc
inc
pop
adc
inc
pop
adc
inc
mov
adc
inc
test
adc
inc
mov
jo
mov
jo
mov
adc
inc
adc
inc
mov
inc
lea
inc
xchg
adc
inc
xchg
adc
inc
cdq
adc
inc
popf
adc
inc
loope
jo
in
jo
jmp
adc
inc
icebp
adc
inc
cmc
adc
inc
stc
adc
inc
std
adc
inc
rcl
lds
inc
leave
adc
inc
int
jo
rcl
inc
aad
jo
fst
inc
fst
inc
and
jo
sub
jo
xor
jo
cmp
jo
add
jo
or
jo
adc
jo
sbb
jo
popa
adc
jo
imul
jo
jne
jo
jns
jo
jge
jo
inc
adc
jo
dec
adc
jo
push
adc
jo
pop
adc
jo
mov
adc
jo
lods
adc
jo
mov
jo
mov
adc
jo
test
jo
lea
jo
xchg
adc
jo
popf
adc
jo
in
jo
jmp
adc
jo
cmc
adc
jo
std
adc
jo
lds
jo
int
jo
rcl
jo
fst
jo
and
jo
and
or
sub
or
xor
or
cmp
or
add
or
or
or
adc
or
sbb
or
or
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
mov
or
test
or
mov
jo
mov
jo
mov
or
or
jo
mov
jo
lea
jo
xchg
or
xchg
or
cdq
or
popf
or
loope
jo
in
jo
jmp
or
icebp
or
cmc
or
stc
or
std
or
ror
inc
lds
jo
leave
or
int
jo
ror
jo
aad
jo
(bad)
jo
fisttp
jo
and
jo
and
or
sub
or
xor
or
cmp
or
add
or
or
or
adc
or
sbb
or
or
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
mov
or
test
or
mov
jo
mov
jo
mov
or
or
jo
mov
jo
lea
jo
xchg
or
xchg
or
cdq
or
popf
or
loope
jo
in
jo
jmp
or
icebp
or
cmc
or
stc
or
std
or
ror
inc
lds
jo
leave
or
int
jo
ror
jo
aad
jo
(bad)
jo
fisttp
jo
and
jo
and
or
sub
or
xor
or
cmp
or
add
or
or
or
adc
or
sbb
or
or
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
mov
or
test
or
mov
jo
mov
jo
mov
or
or
jo
mov
jo
lea
jo
xchg
or
xchg
or
cdq
or
popf
or
loope
jo
in
jo
jmp
or
icebp
or
cmc
or
stc
or
std
or
ror
inc
lds
jo
leave
or
int
jo
ror
jo
aad
jo
(bad)
jo
fisttp
jo
and
jo
and
or
sub
or
xor
or
cmp
or
add
or
or
or
adc
or
sbb
or
or
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
mov
or
test
or
mov
jo
mov
jo
mov
or
or
jo
mov
jo
lea
jo
xchg
or
xchg
or
cdq
or
popf
or
loope
jo
in
jo
jmp
or
icebp
or
cmc
or
stc
or
std
or
ror
inc
lds
jo
leave
or
int
jo
ror
jo
aad
jo
(bad)
jo
fisttp
jo
and
jo
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
or
jo
mov
jo
lea
jo
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
ror
inc
lds
jo
leave
push
jo
int
jo
ror
jo
aad
jo
(bad)
jo
fisttp
jo
and
jo
and
pshufw
jo
xor
jo
xor
pshufw
jo
add
jo
add
pshufw
jo
adc
jo
adc
pshufw
jo
popa
pshufw
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
pshufw
jo
dec
pshufw
jo
push
pshufw
jo
pop
pshufw
jo
mov
pshufw
jo
lods
pshufw
jo
mov
jo
mov
pshufw
jo
test
jo
mov
jo
lea
jo
xchg
pshufw
jo
cdq
pshufw
jo
loope
jo
in
jo
jmp
pshufw
jo
cmc
pshufw
jo
std
pshufw
jo
lds
jo
leave
pshufw
jo
ror
jo
aad
jo
(bad)
jo
fisttp
jo
and
inc
and
or
inc
sub
or
inc
xor
or
inc
cmp
or
inc
add
or
inc
or
or
inc
adc
or
inc
sbb
or
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
or
inc
inc
or
inc
dec
or
inc
dec
or
inc
push
or
inc
push
or
inc
pop
or
inc
pop
or
inc
mov
or
inc
test
or
inc
mov
jo
mov
jo
mov
or
inc
or
inc
mov
inc
lea
inc
xchg
or
inc
xchg
or
inc
cdq
or
inc
popf
or
inc
loope
jo
in
jo
jmp
or
inc
icebp
or
inc
cmc
or
inc
stc
or
inc
std
or
inc
ror
lds
inc
leave
or
inc
int
jo
ror
inc
aad
jo
(bad)
inc
fisttp
inc
and
jo
sub
jo
xor
jo
cmp
jo
add
jo
or
jo
adc
jo
sbb
jo
popa
or
jo
imul
jo
jne
jo
jns
jo
jge
jo
inc
or
jo
dec
or
jo
push
or
jo
pop
or
jo
mov
or
jo
lods
or
jo
mov
jo
mov
or
jo
test
jo
lea
jo
xchg
or
jo
popf
or
jo
in
jo
jmp
or
jo
cmc
or
jo
std
or
jo
lds
jo
int
jo
ror
jo
(bad)
jo
and
jo
and
add
sub
add
xor
add
cmp
add
add
add
or
add
adc
add
sbb
add
add
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
mov
add
test
add
mov
jo
mov
jo
mov
add
add
jo
mov
jo
lea
jo
xchg
add
xchg
add
cdq
add
popf
add
loope
jo
in
jo
jmp
add
icebp
add
cmc
add
stc
add
std
add
rol
inc
lds
jo
leave
add
int
jo
rol
jo
aad
jo
fld
jo
fld
jo
and
jo
and
add
sub
add
xor
add
cmp
add
add
add
or
add
adc
add
sbb
add
add
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
mov
add
test
add
mov
jo
mov
jo
mov
add
add
jo
mov
jo
lea
jo
xchg
add
xchg
add
cdq
add
popf
add
loope
jo
in
jo
jmp
add
icebp
add
cmc
add
stc
add
std
add
rol
inc
lds
jo
leave
add
int
jo
rol
jo
aad
jo
fld
jo
fld
jo
and
jo
and
add
sub
add
xor
add
cmp
add
add
add
or
add
adc
add
sbb
add
add
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
mov
add
test
add
mov
jo
mov
jo
mov
add
add
jo
mov
jo
lea
jo
xchg
add
xchg
add
cdq
add
popf
add
loope
jo
in
jo
jmp
add
icebp
add
cmc
add
stc
add
std
add
rol
inc
lds
jo
leave
add
int
jo
rol
jo
aad
jo
fld
jo
fld
jo
and
jo
and
add
sub
add
xor
add
cmp
add
add
add
or
add
adc
add
sbb
add
add
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
mov
add
test
add
mov
jo
mov
jo
mov
add
add
jo
mov
jo
lea
jo
xchg
add
xchg
add
cdq
add
popf
add
loope
jo
in
jo
jmp
add
icebp
add
cmc
add
stc
add
std
add
rol
inc
lds
jo
leave
add
int
jo
rol
jo
aad
jo
fld
jo
fld
jo
and
jo
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
add
jo
mov
jo
lea
jo
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rol
inc
lds
jo
leave
push
jo
int
jo
rol
jo
aad
jo
fld
jo
fld
jo
and
jo
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
jo
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
add
jo
mov
jo
lea
jo
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rol
inc
lds
jo
leave
pop
jo
int
jo
rol
jo
aad
jo
fld
jo
fld
jo
and
inc
and
add
inc
sub
add
inc
xor
add
inc
cmp
add
inc
add
add
inc
or
add
inc
adc
add
inc
sbb
add
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
add
inc
inc
add
inc
dec
add
inc
dec
add
inc
push
add
inc
push
add
inc
pop
add
inc
pop
add
inc
mov
add
inc
test
add
inc
mov
jo
mov
jo
mov
add
inc
add
inc
mov
inc
lea
inc
xchg
add
inc
xchg
add
inc
cdq
add
inc
popf
add
inc
loope
jo
in
jo
jmp
add
inc
icebp
add
inc
cmc
add
inc
stc
add
inc
std
add
inc
rol
lds
inc
leave
add
inc
int
jo
rol
inc
aad
jo
fld
inc
fld
inc
and
jo
sub
jo
xor
jo
cmp
jo
add
jo
or
jo
adc
jo
sbb
jo
popa
add
jo
imul
jo
jne
jo
jns
jo
jge
jo
inc
add
jo
dec
add
jo
push
add
jo
pop
add
jo
mov
add
jo
lods
add
jo
mov
jo
mov
add
jo
test
jo
lea
jo
xchg
add
jo
popf
add
jo
in
jo
jmp
add
jo
cmc
add
jo
std
add
jo
lds
jo
int
jo
rol
jo
fld
jo
and
inc
and
jp
inc
sub
jp
inc
xor
jp
inc
cmp
jp
inc
add
jp
inc
or
jp
inc
adc
jp
inc
sbb
jp
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jp
inc
inc
jp
inc
dec
jp
inc
dec
jp
inc
push
jp
inc
push
jp
inc
pop
jp
inc
pop
jp
inc
mov
jp
inc
test
jp
inc
mov
jo
mov
jo
mov
jp
inc
cmp
inc
mov
inc
lea
inc
xchg
jp
inc
xchg
jp
inc
cdq
jp
inc
popf
jp
inc
loope
jo
in
jo
jmp
jp
inc
icebp
jp
inc
cmc
jp
inc
stc
jp
inc
std
jp
inc
sar
lds
inc
leave
jp
inc
int
jo
sar
inc
aad
jo
fnstcw
inc
fnstsw
inc
and
inc
and
jnp
inc
sub
jnp
inc
xor
jnp
inc
cmp
jnp
inc
add
jnp
inc
or
jnp
inc
adc
jnp
inc
sbb
jnp
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jnp
inc
inc
jnp
inc
dec
jnp
inc
dec
jnp
inc
push
jnp
inc
push
jnp
inc
pop
jnp
inc
pop
jnp
inc
mov
jnp
inc
test
jnp
inc
mov
jo
mov
jo
mov
jnp
inc
cmp
inc
mov
inc
lea
inc
xchg
jnp
inc
xchg
jnp
inc
cdq
jnp
inc
popf
jnp
inc
loope
jo
in
jo
jmp
jnp
inc
icebp
jnp
inc
cmc
jnp
inc
stc
jnp
inc
std
jnp
inc
sar
lds
inc
leave
jnp
inc
int
jo
sar
inc
aad
jo
fnstcw
inc
fnstsw
inc
and
inc
and
js
inc
sub
js
inc
xor
js
inc
cmp
js
inc
add
js
inc
or
js
inc
adc
js
inc
sbb
js
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
js
inc
inc
js
inc
dec
js
inc
dec
js
inc
push
js
inc
push
js
inc
pop
js
inc
pop
js
inc
mov
js
inc
test
js
inc
mov
jo
mov
jo
mov
js
inc
cmp
inc
mov
inc
lea
inc
xchg
js
inc
xchg
js
inc
cdq
js
inc
popf
js
inc
loope
jo
in
jo
jmp
js
inc
icebp
js
inc
cmc
js
inc
stc
js
inc
std
js
inc
sar
lds
inc
leave
js
inc
int
jo
sar
inc
aad
jo
fnstcw
inc
fnstsw
inc
and
inc
and
jns
inc
sub
jns
inc
xor
jns
inc
cmp
jns
inc
add
jns
inc
or
jns
inc
adc
jns
inc
sbb
jns
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jns
inc
inc
jns
inc
dec
jns
inc
dec
jns
inc
push
jns
inc
push
jns
inc
pop
jns
inc
pop
jns
inc
mov
jns
inc
test
jns
inc
mov
jo
mov
jo
mov
jns
inc
cmp
inc
mov
inc
lea
inc
xchg
jns
inc
xchg
jns
inc
cdq
jns
inc
popf
jns
inc
loope
jo
in
jo
jmp
jns
inc
icebp
jns
inc
cmc
jns
inc
stc
jns
inc
std
jns
inc
sar
lds
inc
leave
jns
inc
int
jo
sar
inc
aad
jo
fnstcw
inc
fnstsw
inc
and
inc
and
jle
inc
sub
jle
inc
xor
jle
inc
cmp
jle
inc
add
jle
inc
or
jle
inc
adc
jle
inc
sbb
jle
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jle
inc
inc
jle
inc
dec
jle
inc
dec
jle
inc
push
jle
inc
push
jle
inc
pop
jle
inc
pop
jle
inc
mov
jle
inc
test
jle
inc
mov
jo
mov
jo
mov
jle
inc
cmp
inc
mov
inc
lea
inc
xchg
jle
inc
xchg
jle
inc
cdq
jle
inc
popf
jle
inc
loope
jo
in
jo
jmp
jle
inc
icebp
jle
inc
cmc
jle
inc
stc
jle
inc
std
jle
inc
sar
lds
inc
leave
jle
inc
int
jo
sar
inc
aad
jo
fnstcw
inc
fnstsw
inc
and
inc
and
jg
inc
sub
jg
inc
xor
jg
inc
cmp
jg
inc
add
jg
inc
or
jg
inc
adc
jg
inc
sbb
jg
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jg
inc
inc
jg
inc
dec
jg
inc
dec
jg
inc
push
jg
inc
push
jg
inc
pop
jg
inc
pop
jg
inc
mov
jg
inc
test
jg
inc
mov
jo
mov
jo
mov
jg
inc
cmp
inc
mov
inc
lea
inc
xchg
jg
inc
xchg
jg
inc
cdq
jg
inc
popf
jg
inc
loope
jo
in
jo
jmp
jg
inc
icebp
jg
inc
cmc
jg
inc
stc
jg
inc
std
jg
inc
sar
lds
inc
leave
jg
inc
int
jo
sar
inc
aad
jo
fnstcw
inc
fnstsw
inc
and
and
jl
inc
sub
jl
inc
xor
jl
inc
cmp
jl
inc
add
jl
inc
or
jl
inc
adc
jl
inc
sbb
jl
inc
gs
inc
imul
jno
jo
jne
jo
jns
jo
jge
jo
inc
jl
inc
inc
jl
inc
dec
jl
inc
dec
jl
inc
push
jl
inc
push
jl
inc
pop
jl
inc
pop
jl
inc
mov
jl
inc
test
jl
inc
mov
jo
mov
jo
mov
jl
inc
cmp
mov
lea
xchg
jl
inc
xchg
jl
inc
cdq
jl
inc
popf
jl
inc
loope
jo
in
jo
jmp
jl
inc
icebp
jl
inc
cmc
jl
inc
stc
jl
inc
std
jl
inc
sar
jl
inc
leave
jl
inc
int
jo
sar
aad
jo
fnstcw
fnstsw
and
inc
and
jge
inc
sub
jge
inc
xor
jge
inc
cmp
jge
inc
add
jge
inc
or
jge
inc
adc
jge
inc
sbb
jge
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jge
inc
inc
jge
inc
dec
jge
inc
dec
jge
inc
push
jge
inc
push
jge
inc
pop
jge
inc
pop
jge
inc
mov
jge
inc
test
jge
inc
mov
jo
mov
jo
mov
jge
inc
cmp
inc
mov
inc
lea
inc
xchg
jge
inc
xchg
jge
inc
cdq
jge
inc
popf
jge
inc
loope
jo
in
jo
jmp
jge
inc
icebp
jge
inc
cmc
jge
inc
stc
jge
inc
std
jge
inc
sar
lds
inc
leave
jge
inc
int
jo
sar
inc
aad
jo
fnstcw
inc
fnstsw
inc
and
inc
and
jb
inc
sub
jb
inc
xor
jb
inc
cmp
jb
inc
add
jb
inc
or
jb
inc
adc
jb
inc
sbb
jb
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jb
inc
inc
jb
inc
dec
jb
inc
dec
jb
inc
push
jb
inc
push
jb
inc
pop
jb
inc
pop
jb
inc
mov
jb
inc
test
jb
inc
mov
jo
mov
jo
mov
jb
inc
xor
inc
mov
inc
lea
inc
xchg
jb
inc
xchg
jb
inc
cdq
jb
inc
popf
jb
inc
loope
jo
in
jo
jmp
jb
inc
icebp
jb
inc
cmc
jb
inc
stc
jb
inc
std
jb
inc
shl
lds
inc
leave
jb
inc
int
jo
shl
inc
aad
jo
fnstenv
inc
fnsave
inc
and
inc
and
jae
inc
sub
jae
inc
xor
jae
inc
cmp
jae
inc
add
jae
inc
or
jae
inc
adc
jae
inc
sbb
jae
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jae
inc
inc
jae
inc
dec
jae
inc
dec
jae
inc
push
jae
inc
push
jae
inc
pop
jae
inc
pop
jae
inc
mov
jae
inc
test
jae
inc
mov
jo
mov
jo
mov
jae
inc
xor
inc
mov
inc
lea
inc
xchg
jae
inc
xchg
jae
inc
cdq
jae
inc
popf
jae
inc
loope
jo
in
jo
jmp
jae
inc
icebp
jae
inc
cmc
jae
inc
stc
jae
inc
std
jae
inc
shl
lds
inc
leave
jae
inc
int
jo
shl
inc
aad
jo
fnstenv
inc
fnsave
inc
and
inc
and
jo
inc
sub
jo
inc
xor
jo
inc
cmp
jo
inc
add
jo
inc
or
jo
inc
adc
jo
inc
sbb
jo
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jo
inc
inc
jo
inc
dec
jo
inc
dec
jo
inc
push
jo
inc
push
jo
inc
pop
jo
inc
pop
jo
inc
mov
jo
inc
test
jo
inc
mov
jo
mov
jo
mov
jo
inc
xor
inc
mov
inc
lea
inc
xchg
jo
inc
xchg
jo
inc
cdq
jo
inc
popf
jo
inc
loope
jo
in
jo
jmp
jo
inc
icebp
jo
inc
cmc
jo
inc
stc
jo
inc
std
jo
inc
shl
lds
inc
leave
jo
inc
int
jo
shl
inc
aad
jo
fnstenv
inc
fnsave
inc
and
inc
and
jno
inc
sub
jno
inc
xor
jno
inc
cmp
jno
inc
add
jno
inc
or
jno
inc
adc
jno
inc
sbb
jno
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jno
inc
inc
jno
inc
dec
jno
inc
dec
jno
inc
push
jno
inc
push
jno
inc
pop
jno
inc
pop
jno
inc
mov
jno
inc
test
jno
inc
mov
jo
mov
jo
mov
jno
inc
xor
inc
mov
inc
lea
inc
xchg
jno
inc
xchg
jno
inc
cdq
jno
inc
popf
jno
inc
loope
jo
in
jo
jmp
jno
inc
icebp
jno
inc
cmc
jno
inc
stc
jno
inc
std
jno
inc
shl
lds
inc
leave
jno
inc
int
jo
shl
inc
aad
jo
fnstenv
inc
fnsave
inc
and
inc
and
jbe
inc
sub
jbe
inc
xor
jbe
inc
cmp
jbe
inc
add
jbe
inc
or
jbe
inc
adc
jbe
inc
sbb
jbe
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jbe
inc
inc
jbe
inc
dec
jbe
inc
dec
jbe
inc
push
jbe
inc
push
jbe
inc
pop
jbe
inc
pop
jbe
inc
mov
jbe
inc
test
jbe
inc
mov
jo
mov
jo
mov
jbe
inc
xor
inc
mov
inc
lea
inc
xchg
jbe
inc
xchg
jbe
inc
cdq
jbe
inc
popf
jbe
inc
loope
jo
in
jo
jmp
jbe
inc
icebp
jbe
inc
cmc
jbe
inc
stc
jbe
inc
std
jbe
inc
shl
lds
inc
leave
jbe
inc
int
jo
shl
inc
aad
jo
fnstenv
inc
fnsave
inc
and
inc
and
ja
inc
sub
ja
inc
xor
ja
inc
cmp
ja
inc
add
ja
inc
or
ja
inc
adc
ja
inc
sbb
ja
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
ja
inc
inc
ja
inc
dec
ja
inc
dec
ja
inc
push
ja
inc
push
ja
inc
pop
ja
inc
pop
ja
inc
mov
ja
inc
test
ja
inc
mov
jo
mov
jo
mov
ja
inc
xor
inc
mov
inc
lea
inc
xchg
ja
inc
xchg
ja
inc
cdq
ja
inc
popf
ja
inc
loope
jo
in
jo
jmp
ja
inc
icebp
ja
inc
cmc
ja
inc
stc
ja
inc
std
ja
inc
shl
lds
inc
leave
ja
inc
int
jo
shl
inc
aad
jo
fnstenv
inc
fnsave
inc
and
and
je
inc
sub
je
inc
xor
je
inc
cmp
je
inc
add
je
inc
or
je
inc
adc
je
inc
sbb
je
inc
gs
inc
imul
jno
jo
jne
jo
jns
jo
jge
jo
inc
je
inc
inc
je
inc
dec
je
inc
dec
je
inc
push
je
inc
push
je
inc
pop
je
inc
pop
je
inc
mov
je
inc
test
je
inc
mov
jo
mov
jo
mov
je
inc
xor
mov
lea
xchg
je
inc
xchg
je
inc
cdq
je
inc
popf
je
inc
loope
jo
in
jo
jmp
je
inc
icebp
je
inc
cmc
je
inc
stc
je
inc
std
je
inc
shl
je
inc
leave
je
inc
int
jo
shl
aad
jo
fnstenv
fnsave
and
inc
and
jne
inc
sub
jne
inc
xor
jne
inc
cmp
jne
inc
add
jne
inc
or
jne
inc
adc
jne
inc
sbb
jne
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
jne
inc
inc
jne
inc
dec
jne
inc
dec
jne
inc
push
jne
inc
push
jne
inc
pop
jne
inc
pop
jne
inc
mov
jne
inc
test
jne
inc
mov
jo
mov
jo
mov
jne
inc
xor
inc
mov
inc
lea
inc
xchg
jne
inc
xchg
jne
inc
cdq
jne
inc
popf
jne
inc
loope
jo
in
jo
jmp
jne
inc
icebp
jne
inc
cmc
jne
inc
stc
jne
inc
std
jne
inc
shl
lds
inc
leave
jne
inc
int
jo
shl
inc
aad
jo
fnstenv
inc
fnsave
inc
and
inc
and
push
inc
sub
push
inc
xor
push
inc
cmp
push
inc
add
push
inc
or
push
inc
adc
push
inc
sbb
push
inc
gs
inc
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
inc
inc
push
inc
dec
push
inc
dec
push
inc
push
push
inc
push
push
inc
pop
push
inc
pop
push
inc
mov
push
inc
test
push
inc
mov
jo
mov
jo
mov
push
inc
sub
inc
mov
inc
lea
inc
xchg
push
inc
xchg
push
inc
cdq
push
inc
popf
push
inc
loope
jo
in
jo
jmp
push
inc
icebp
push
inc
cmc
push
inc
stc
push
inc
std
push
inc
shr
lds
inc
leave
push
inc
int
jo
shr
inc
aad
jo
fldcw
inc
(bad)
inc
and
inc
and
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
push
jo
sub
inc
sub
push
jo
cmp
inc
cmp
push
jo
or
inc
or
push
jo
sbb
inc
sbb
push
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
dec
push
jo
push
push
jo
pop
push
jo
mov
push
jo
lods
push
jo
mov
jo
mov
push
jo
test
inc
mov
inc
lea
inc
xchg
push
jo
cdq
push
jo
loope
jo
in
jo
jmp
push
jo
cmc
push
jo
std
push
jo
lds
inc
leave
push
jo
shr
inc
aad
jo
fldcw
inc
(bad)
inc
and
inc
and
imul
xor
inc
xor
imul
add
inc
add
imul
adc
inc
adc
imul
popa
imul
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
imul
dec
imul
push
imul
pop
imul
mov
imul
lods
imul
mov
jo
mov
imul
test
inc
mov
inc
lea
inc
xchg
imul
cdq
imul
loope
jo
in
jo
jmp
imul
cmc
imul
std
imul
lds
inc
leave
imul
shr
inc
aad
jo
fldcw
inc
(bad)
inc
and
inc
and
outs
jo
sub
outs
jo
xor
outs
jo
cmp
outs
jo
add
outs
jo
or
outs
jo
adc
outs
jo
sbb
outs
jo
outs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
outs
jo
inc
outs
jo
dec
outs
jo
dec
outs
jo
push
outs
jo
push
outs
jo
pop
outs
jo
pop
outs
jo
mov
outs
jo
test
outs
jo
mov
jo
mov
jo
mov
outs
jo
sub
inc
mov
inc
lea
inc
xchg
outs
jo
xchg
outs
jo
cdq
outs
jo
popf
outs
jo
loope
jo
in
jo
jmp
outs
jo
icebp
outs
jo
cmc
outs
jo
stc
outs
jo
std
outs
jo
shr
lds
inc
leave
outs
jo
int
jo
shr
inc
aad
jo
fldcw
inc
(bad)
inc
and
inc
and
outs
jo
sub
outs
jo
xor
outs
jo
cmp
outs
jo
add
outs
jo
or
outs
jo
adc
outs
jo
sbb
outs
jo
outs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
outs
jo
inc
outs
jo
dec
outs
jo
dec
outs
jo
push
outs
jo
push
outs
jo
pop
outs
jo
pop
outs
jo
mov
outs
jo
test
outs
jo
mov
jo
mov
jo
mov
outs
jo
sub
inc
mov
inc
lea
inc
xchg
outs
jo
xchg
outs
jo
cdq
outs
jo
popf
outs
jo
loope
jo
in
jo
jmp
outs
jo
icebp
outs
jo
cmc
outs
jo
stc
outs
jo
std
outs
jo
shr
lds
inc
leave
outs
jo
int
jo
shr
inc
aad
jo
fldcw
inc
(bad)
inc
and
and
ins
jo
sub
ins
jo
xor
ins
jo
cmp
ins
jo
add
ins
jo
or
ins
jo
adc
ins
jo
sbb
ins
jo
gs
jo
imul
jno
jo
jne
jo
jns
jo
jge
jo
inc
ins
jo
inc
ins
jo
dec
ins
jo
dec
ins
jo
push
ins
jo
push
ins
jo
pop
ins
jo
pop
ins
jo
mov
ins
jo
test
ins
jo
mov
jo
mov
jo
mov
ins
jo
sub
mov
lea
xchg
ins
jo
xchg
ins
jo
cdq
ins
jo
popf
ins
jo
loope
jo
in
jo
jmp
ins
jo
icebp
ins
jo
cmc
ins
jo
stc
ins
jo
std
ins
jo
shr
ins
jo
leave
ins
jo
int
jo
shr
aad
jo
fldcw
(bad)
and
inc
and
ins
jo
sub
ins
jo
xor
ins
jo
cmp
ins
jo
add
ins
jo
or
ins
jo
adc
ins
jo
sbb
ins
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
ins
jo
inc
ins
jo
dec
ins
jo
dec
ins
jo
push
ins
jo
push
ins
jo
pop
ins
jo
pop
ins
jo
mov
ins
jo
test
ins
jo
mov
jo
mov
jo
mov
ins
jo
sub
inc
mov
inc
lea
inc
xchg
ins
jo
xchg
ins
jo
cdq
ins
jo
popf
ins
jo
loope
jo
in
jo
jmp
ins
jo
icebp
ins
jo
cmc
ins
jo
stc
ins
jo
std
ins
jo
shr
lds
inc
leave
ins
jo
int
jo
shr
inc
aad
jo
fldcw
inc
(bad)
inc
and
inc
and
bound
sub
bound
xor
bound
cmp
bound
add
bound
or
bound
adc
bound
sbb
bound
bound
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
bound
inc
bound
dec
bound
dec
bound
push
bound
push
bound
pop
bound
pop
bound
mov
bound
test
bound
mov
jo
mov
jo
mov
bound
and
inc
mov
inc
lea
inc
xchg
bound
xchg
bound
cdq
bound
popf
bound
loope
jo
in
jo
jmp
bound
icebp
bound
cmc
bound
stc
bound
std
bound
shl
lds
inc
leave
bound
int
jo
shl
inc
aad
jo
fldenv
inc
frstor
inc
and
inc
and
arpl
sub
arpl
xor
arpl
cmp
arpl
add
arpl
or
arpl
adc
arpl
sbb
arpl
arpl
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
arpl
inc
arpl
dec
arpl
dec
arpl
push
arpl
push
arpl
pop
arpl
pop
arpl
mov
arpl
test
arpl
mov
jo
mov
jo
mov
arpl
and
inc
mov
inc
lea
inc
xchg
arpl
xchg
arpl
cdq
arpl
popf
arpl
loope
jo
in
jo
jmp
arpl
icebp
arpl
cmc
arpl
stc
arpl
std
arpl
shl
lds
inc
leave
arpl
int
jo
shl
inc
aad
jo
fldenv
inc
frstor
inc
and
inc
and
pusha
jo
sub
pusha
jo
xor
pusha
jo
cmp
pusha
jo
add
pusha
jo
or
pusha
jo
adc
pusha
jo
sbb
pusha
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
pusha
jo
inc
pusha
jo
dec
pusha
jo
dec
pusha
jo
push
pusha
jo
push
pusha
jo
pop
pusha
jo
pop
pusha
jo
mov
pusha
jo
test
pusha
jo
mov
jo
mov
jo
mov
pusha
jo
and
inc
mov
inc
lea
inc
xchg
pusha
jo
xchg
pusha
jo
cdq
pusha
jo
popf
pusha
jo
loope
jo
in
jo
jmp
pusha
jo
icebp
pusha
jo
cmc
pusha
jo
stc
pusha
jo
std
pusha
jo
shl
lds
inc
leave
pusha
jo
int
jo
shl
inc
aad
jo
fldenv
inc
frstor
inc
and
inc
and
popa
jo
sub
popa
jo
xor
popa
jo
cmp
popa
jo
add
popa
jo
or
popa
jo
adc
popa
jo
sbb
popa
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
popa
jo
inc
popa
jo
dec
popa
jo
dec
popa
jo
push
popa
jo
push
popa
jo
pop
popa
jo
pop
popa
jo
mov
popa
jo
test
popa
jo
mov
jo
mov
jo
mov
popa
jo
and
inc
mov
inc
lea
inc
xchg
popa
jo
xchg
popa
jo
cdq
popa
jo
popf
popa
jo
loope
jo
in
jo
jmp
popa
jo
icebp
popa
jo
cmc
popa
jo
stc
popa
jo
std
popa
jo
shl
lds
inc
leave
popa
jo
int
jo
shl
inc
aad
jo
fldenv
inc
frstor
inc
and
inc
and
data16
sub
data16
xor
data16
cmp
data16
add
data16
or
data16
adc
data16
sbb
data16
gs
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
data16
inc
data16
dec
data16
dec
data16
push
data16
push
data16
pop
data16
pop
data16
mov
data16
test
data16
mov
jo
mov
jo
mov
data16
and
inc
mov
inc
lea
inc
xchg
data16
xchg
data16
cdq
data16
popf
data16
loope
jo
in
jo
jmp
data16
icebp
data16
cmc
data16
stc
data16
std
data16
shl
lds
inc
leave
data16
int
jo
shl
inc
aad
jo
fldenv
inc
frstor
inc
and
inc
and
addr16
sub
addr16
xor
addr16
cmp
addr16
add
addr16
or
addr16
adc
addr16
sbb
addr16
gs
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
addr16
inc
addr16
dec
addr16
dec
addr16
push
addr16
push
addr16
pop
addr16
pop
addr16
mov
addr16
test
addr16
mov
jo
mov
jo
mov
addr16
and
inc
mov
inc
lea
inc
xchg
addr16
xchg
addr16
cdq
addr16
popf
addr16
loope
jo
in
jo
jmp
addr16
icebp
addr16
cmc
addr16
stc
addr16
std
addr16
shl
lds
inc
leave
addr16
int
jo
shl
inc
aad
jo
fldenv
inc
frstor
inc
and
and
fs
sub
fs
xor
fs
cmp
fs
add
fs
or
fs
adc
fs
sbb
fs
gs
imul
jno
jo
jne
jo
jns
jo
jge
jo
inc
fs
inc
fs
dec
fs
dec
fs
push
fs
push
fs
pop
fs
pop
fs
mov
fs
test
fs
mov
jo
mov
jo
mov
fs
and
mov
lea
xchg
fs
xchg
fs
cdq
fs
popf
fs
loope
jo
in
jo
jmp
fs
icebp
fs
cmc
fs
stc
fs
std
fs
shl
fs
leave
fs
int
jo
shl
aad
jo
fldenv
frstor
and
inc
and
gs
sub
gs
xor
gs
cmp
gs
add
gs
or
gs
adc
gs
sbb
gs
gs
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
gs
inc
gs
dec
gs
dec
gs
push
gs
push
gs
pop
gs
pop
gs
mov
gs
test
gs
mov
jo
mov
jo
mov
gs
and
inc
mov
inc
lea
inc
xchg
gs
xchg
gs
cdq
gs
popf
gs
loope
jo
in
jo
jmp
gs
icebp
gs
cmc
gs
stc
gs
std
gs
shl
lds
inc
leave
gs
int
jo
shl
inc
aad
jo
fldenv
inc
frstor
inc
and
inc
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
sbb
inc
mov
inc
lea
inc
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rcr
lds
inc
leave
pop
jo
int
jo
rcr
inc
aad
jo
fstp
inc
fstp
inc
and
inc
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
sbb
inc
mov
inc
lea
inc
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rcr
lds
inc
leave
pop
jo
int
jo
rcr
inc
aad
jo
fstp
inc
fstp
inc
and
inc
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
sbb
inc
mov
inc
lea
inc
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rcr
lds
inc
leave
pop
jo
int
jo
rcr
inc
aad
jo
fstp
inc
fstp
inc
and
inc
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
sbb
inc
mov
inc
lea
inc
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rcr
lds
inc
leave
pop
jo
int
jo
rcr
inc
aad
jo
fstp
inc
fstp
inc
and
inc
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
sbb
inc
mov
inc
lea
inc
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rcr
lds
inc
leave
pop
jo
int
jo
rcr
inc
aad
jo
fstp
inc
fstp
inc
and
inc
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
sbb
inc
mov
inc
lea
inc
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rcr
lds
inc
leave
pop
jo
int
jo
rcr
inc
aad
jo
fstp
inc
fstp
inc
and
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
sbb
mov
lea
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rcr
pop
jo
leave
pop
jo
int
jo
rcr
aad
jo
fstp
fstp
and
inc
and
pop
jo
sub
pop
jo
xor
pop
jo
cmp
pop
jo
add
pop
jo
or
pop
jo
adc
pop
jo
sbb
pop
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
pop
jo
inc
pop
jo
dec
pop
jo
dec
pop
jo
push
pop
jo
push
pop
jo
pop
pop
jo
pop
pop
jo
mov
pop
jo
test
pop
jo
mov
jo
mov
jo
mov
pop
jo
sbb
inc
mov
inc
lea
inc
xchg
pop
jo
xchg
pop
jo
cdq
pop
jo
popf
pop
jo
loope
jo
in
jo
jmp
pop
jo
icebp
pop
jo
cmc
pop
jo
stc
pop
jo
std
pop
jo
rcr
lds
inc
leave
pop
jo
int
jo
rcr
inc
aad
jo
fstp
inc
fstp
inc
and
inc
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
adc
inc
mov
inc
lea
inc
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rcl
lds
inc
leave
push
jo
int
jo
rcl
inc
aad
jo
fst
inc
fst
inc
and
inc
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
adc
inc
mov
inc
lea
inc
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rcl
lds
inc
leave
push
jo
int
jo
rcl
inc
aad
jo
fst
inc
fst
inc
and
inc
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
adc
inc
mov
inc
lea
inc
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rcl
lds
inc
leave
push
jo
int
jo
rcl
inc
aad
jo
fst
inc
fst
inc
and
inc
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
adc
inc
mov
inc
lea
inc
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rcl
lds
inc
leave
push
jo
int
jo
rcl
inc
aad
jo
fst
inc
fst
inc
and
inc
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
adc
inc
mov
inc
lea
inc
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rcl
lds
inc
leave
push
jo
int
jo
rcl
inc
aad
jo
fst
inc
fst
inc
and
inc
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
adc
inc
mov
inc
lea
inc
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rcl
lds
inc
leave
push
jo
int
jo
rcl
inc
aad
jo
fst
inc
fst
inc
and
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
adc
mov
lea
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rcl
push
jo
leave
push
jo
int
jo
rcl
aad
jo
fst
fst
and
inc
and
push
jo
sub
push
jo
xor
push
jo
cmp
push
jo
add
push
jo
or
push
jo
adc
push
jo
sbb
push
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
push
jo
inc
push
jo
dec
push
jo
dec
push
jo
push
push
jo
push
push
jo
pop
push
jo
pop
push
jo
mov
push
jo
test
push
jo
mov
jo
mov
jo
mov
push
jo
adc
inc
mov
inc
lea
inc
xchg
push
jo
xchg
push
jo
cdq
push
jo
popf
push
jo
loope
jo
in
jo
jmp
push
jo
icebp
push
jo
cmc
push
jo
stc
push
jo
std
push
jo
rcl
lds
inc
leave
push
jo
int
jo
rcl
inc
aad
jo
fst
inc
fst
inc
and
inc
and
dec
jo
sub
dec
jo
xor
dec
jo
cmp
dec
jo
add
dec
jo
or
dec
jo
adc
dec
jo
sbb
dec
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
dec
jo
inc
dec
jo
dec
dec
jo
dec
dec
jo
push
dec
jo
push
dec
jo
pop
dec
jo
pop
dec
jo
mov
dec
jo
test
dec
jo
mov
jo
mov
jo
mov
dec
jo
or
inc
mov
inc
lea
inc
xchg
dec
jo
xchg
dec
jo
cdq
dec
jo
popf
dec
jo
loope
jo
in
jo
jmp
dec
jo
icebp
dec
jo
cmc
dec
jo
stc
dec
jo
std
dec
jo
ror
lds
inc
leave
dec
jo
int
jo
ror
inc
aad
jo
(bad)
inc
fisttp
inc
and
inc
and
dec
jo
sub
dec
jo
xor
dec
jo
cmp
dec
jo
add
dec
jo
or
dec
jo
adc
dec
jo
sbb
dec
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
dec
jo
inc
dec
jo
dec
dec
jo
dec
dec
jo
push
dec
jo
push
dec
jo
pop
dec
jo
pop
dec
jo
mov
dec
jo
test
dec
jo
mov
jo
mov
jo
mov
dec
jo
or
inc
mov
inc
lea
inc
xchg
dec
jo
xchg
dec
jo
cdq
dec
jo
popf
dec
jo
loope
jo
in
jo
jmp
dec
jo
icebp
dec
jo
cmc
dec
jo
stc
dec
jo
std
dec
jo
ror
lds
inc
leave
dec
jo
int
jo
ror
inc
aad
jo
(bad)
inc
fisttp
inc
and
inc
and
dec
jo
sub
dec
jo
xor
dec
jo
cmp
dec
jo
add
dec
jo
or
dec
jo
adc
dec
jo
sbb
dec
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
dec
jo
inc
dec
jo
dec
dec
jo
dec
dec
jo
push
dec
jo
push
dec
jo
pop
dec
jo
pop
dec
jo
mov
dec
jo
test
dec
jo
mov
jo
mov
jo
mov
dec
jo
or
inc
mov
inc
lea
inc
xchg
dec
jo
xchg
dec
jo
cdq
dec
jo
popf
dec
jo
loope
jo
in
jo
jmp
dec
jo
icebp
dec
jo
cmc
dec
jo
stc
dec
jo
std
dec
jo
ror
lds
inc
leave
dec
jo
int
jo
ror
inc
aad
jo
(bad)
inc
fisttp
inc
and
inc
and
dec
jo
sub
dec
jo
xor
dec
jo
cmp
dec
jo
add
dec
jo
or
dec
jo
adc
dec
jo
sbb
dec
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
dec
jo
inc
dec
jo
dec
dec
jo
dec
dec
jo
push
dec
jo
push
dec
jo
pop
dec
jo
pop
dec
jo
mov
dec
jo
test
dec
jo
mov
jo
mov
jo
mov
dec
jo
or
inc
mov
inc
lea
inc
xchg
dec
jo
xchg
dec
jo
cdq
dec
jo
popf
dec
jo
loope
jo
in
jo
jmp
dec
jo
icebp
dec
jo
cmc
dec
jo
stc
dec
jo
std
dec
jo
ror
lds
inc
leave
dec
jo
int
jo
ror
inc
aad
jo
(bad)
inc
fisttp
inc
and
inc
and
dec
jo
sub
dec
jo
xor
dec
jo
cmp
dec
jo
add
dec
jo
or
dec
jo
adc
dec
jo
sbb
dec
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
dec
jo
inc
dec
jo
dec
dec
jo
dec
dec
jo
push
dec
jo
push
dec
jo
pop
dec
jo
pop
dec
jo
mov
dec
jo
test
dec
jo
mov
jo
mov
jo
mov
dec
jo
or
inc
mov
inc
lea
inc
xchg
dec
jo
xchg
dec
jo
cdq
dec
jo
popf
dec
jo
loope
jo
in
jo
jmp
dec
jo
icebp
dec
jo
cmc
dec
jo
stc
dec
jo
std
dec
jo
ror
lds
inc
leave
dec
jo
int
jo
ror
inc
aad
jo
(bad)
inc
fisttp
inc
and
inc
and
dec
jo
sub
dec
jo
xor
dec
jo
cmp
dec
jo
add
dec
jo
or
dec
jo
adc
dec
jo
sbb
dec
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
dec
jo
inc
dec
jo
dec
dec
jo
dec
dec
jo
push
dec
jo
push
dec
jo
pop
dec
jo
pop
dec
jo
mov
dec
jo
test
dec
jo
mov
jo
mov
jo
mov
dec
jo
or
inc
mov
inc
lea
inc
xchg
dec
jo
xchg
dec
jo
cdq
dec
jo
popf
dec
jo
loope
jo
in
jo
jmp
dec
jo
icebp
dec
jo
cmc
dec
jo
stc
dec
jo
std
dec
jo
ror
lds
inc
leave
dec
jo
int
jo
ror
inc
aad
jo
(bad)
inc
fisttp
inc
and
and
dec
jo
sub
dec
jo
xor
dec
jo
cmp
dec
jo
add
dec
jo
or
dec
jo
adc
dec
jo
sbb
dec
jo
gs
jo
imul
jno
jo
jne
jo
jns
jo
jge
jo
inc
dec
jo
inc
dec
jo
dec
dec
jo
dec
dec
jo
push
dec
jo
push
dec
jo
pop
dec
jo
pop
dec
jo
mov
dec
jo
test
dec
jo
mov
jo
mov
jo
mov
dec
jo
or
mov
lea
xchg
dec
jo
xchg
dec
jo
cdq
dec
jo
popf
dec
jo
loope
jo
in
jo
jmp
dec
jo
icebp
dec
jo
cmc
dec
jo
stc
dec
jo
std
dec
jo
ror
dec
jo
leave
dec
jo
int
jo
ror
aad
jo
(bad)
fisttp
and
inc
and
dec
jo
sub
dec
jo
xor
dec
jo
cmp
dec
jo
add
dec
jo
or
dec
jo
adc
dec
jo
sbb
dec
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
dec
jo
inc
dec
jo
dec
dec
jo
dec
dec
jo
push
dec
jo
push
dec
jo
pop
dec
jo
pop
dec
jo
mov
dec
jo
test
dec
jo
mov
jo
mov
jo
mov
dec
jo
or
inc
mov
inc
lea
inc
xchg
dec
jo
xchg
dec
jo
cdq
dec
jo
popf
dec
jo
loope
jo
in
jo
jmp
dec
jo
icebp
dec
jo
cmc
dec
jo
stc
dec
jo
std
dec
jo
ror
lds
inc
leave
dec
jo
int
jo
ror
inc
aad
jo
(bad)
inc
fisttp
inc
and
inc
and
inc
jo
sub
inc
jo
xor
inc
jo
cmp
inc
jo
add
inc
jo
or
inc
jo
adc
inc
jo
sbb
inc
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
inc
jo
inc
inc
jo
dec
inc
jo
dec
inc
jo
push
inc
jo
push
inc
jo
pop
inc
jo
pop
inc
jo
mov
inc
jo
test
inc
jo
mov
jo
mov
jo
mov
inc
jo
add
inc
mov
inc
lea
inc
xchg
inc
jo
xchg
inc
jo
cdq
inc
jo
popf
inc
jo
loope
jo
in
jo
jmp
inc
jo
icebp
inc
jo
cmc
inc
jo
stc
inc
jo
std
inc
jo
rol
lds
inc
leave
inc
jo
int
jo
rol
inc
aad
jo
fld
inc
fld
inc
and
inc
and
inc
jo
sub
inc
jo
xor
inc
jo
cmp
inc
jo
add
inc
jo
or
inc
jo
adc
inc
jo
sbb
inc
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
inc
jo
inc
inc
jo
dec
inc
jo
dec
inc
jo
push
inc
jo
push
inc
jo
pop
inc
jo
pop
inc
jo
mov
inc
jo
test
inc
jo
mov
jo
mov
jo
mov
inc
jo
add
inc
mov
inc
lea
inc
xchg
inc
jo
xchg
inc
jo
cdq
inc
jo
popf
inc
jo
loope
jo
in
jo
jmp
inc
jo
icebp
inc
jo
cmc
inc
jo
stc
inc
jo
std
inc
jo
rol
lds
inc
leave
inc
jo
int
jo
rol
inc
aad
jo
fld
inc
fld
inc
and
inc
and
inc
jo
sub
inc
jo
xor
inc
jo
cmp
inc
jo
add
inc
jo
or
inc
jo
adc
inc
jo
sbb
inc
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
inc
jo
inc
inc
jo
dec
inc
jo
dec
inc
jo
push
inc
jo
push
inc
jo
pop
inc
jo
pop
inc
jo
mov
inc
jo
test
inc
jo
mov
jo
mov
jo
mov
inc
jo
add
inc
mov
inc
lea
inc
xchg
inc
jo
xchg
inc
jo
cdq
inc
jo
popf
inc
jo
loope
jo
in
jo
jmp
inc
jo
icebp
inc
jo
cmc
inc
jo
stc
inc
jo
std
inc
jo
rol
lds
inc
leave
inc
jo
int
jo
rol
inc
aad
jo
fld
inc
fld
inc
and
inc
and
inc
jo
sub
inc
jo
xor
inc
jo
cmp
inc
jo
add
inc
jo
or
inc
jo
adc
inc
jo
sbb
inc
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
inc
jo
inc
inc
jo
dec
inc
jo
dec
inc
jo
push
inc
jo
push
inc
jo
pop
inc
jo
pop
inc
jo
mov
inc
jo
test
inc
jo
mov
jo
mov
jo
mov
inc
jo
add
inc
mov
inc
lea
inc
xchg
inc
jo
xchg
inc
jo
cdq
inc
jo
popf
inc
jo
loope
jo
in
jo
jmp
inc
jo
icebp
inc
jo
cmc
inc
jo
stc
inc
jo
std
inc
jo
rol
lds
inc
leave
inc
jo
int
jo
rol
inc
aad
jo
fld
inc
fld
inc
and
inc
and
inc
jo
sub
inc
jo
xor
inc
jo
cmp
inc
jo
add
inc
jo
or
inc
jo
adc
inc
jo
sbb
inc
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
inc
jo
inc
inc
jo
dec
inc
jo
dec
inc
jo
push
inc
jo
push
inc
jo
pop
inc
jo
pop
inc
jo
mov
inc
jo
test
inc
jo
mov
jo
mov
jo
mov
inc
jo
add
inc
mov
inc
lea
inc
xchg
inc
jo
xchg
inc
jo
cdq
inc
jo
popf
inc
jo
loope
jo
in
jo
jmp
inc
jo
icebp
inc
jo
cmc
inc
jo
stc
inc
jo
std
inc
jo
rol
lds
inc
leave
inc
jo
int
jo
rol
inc
aad
jo
fld
inc
fld
inc
and
inc
and
inc
jo
sub
inc
jo
xor
inc
jo
cmp
inc
jo
add
inc
jo
or
inc
jo
adc
inc
jo
sbb
inc
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
inc
jo
inc
inc
jo
dec
inc
jo
dec
inc
jo
push
inc
jo
push
inc
jo
pop
inc
jo
pop
inc
jo
mov
inc
jo
test
inc
jo
mov
jo
mov
jo
mov
inc
jo
add
inc
mov
inc
lea
inc
xchg
inc
jo
xchg
inc
jo
cdq
inc
jo
popf
inc
jo
loope
jo
in
jo
jmp
inc
jo
icebp
inc
jo
cmc
inc
jo
stc
inc
jo
std
inc
jo
rol
lds
inc
leave
inc
jo
int
jo
rol
inc
aad
jo
fld
inc
fld
inc
and
and
inc
jo
sub
inc
jo
xor
inc
jo
cmp
inc
jo
add
inc
jo
or
inc
jo
adc
inc
jo
sbb
inc
jo
gs
jo
imul
jno
jo
jne
jo
jns
jo
jge
jo
inc
inc
jo
inc
inc
jo
dec
inc
jo
dec
inc
jo
push
inc
jo
push
inc
jo
pop
inc
jo
pop
inc
jo
mov
inc
jo
test
inc
jo
mov
jo
mov
jo
mov
inc
jo
add
mov
lea
xchg
inc
jo
xchg
inc
jo
cdq
inc
jo
popf
inc
jo
loope
jo
in
jo
jmp
inc
jo
icebp
inc
jo
cmc
inc
jo
stc
inc
jo
std
inc
jo
rol
inc
jo
leave
inc
jo
int
jo
rol
aad
jo
fld
fld
and
inc
and
inc
jo
sub
inc
jo
xor
inc
jo
cmp
inc
jo
add
inc
jo
or
inc
jo
adc
inc
jo
sbb
inc
jo
gs
jo
imul
inc
jno
jo
jne
jo
jns
jo
jge
jo
inc
inc
jo
inc
inc
jo
dec
inc
jo
dec
inc
jo
push
inc
jo
push
inc
jo
pop
inc
jo
pop
inc
jo
mov
inc
jo
test
inc
jo
mov
jo
mov
jo
mov
inc
jo
add
inc
mov
inc
lea
inc
xchg
inc
jo
xchg
inc
jo
cdq
inc
jo
popf
inc
jo
loope
jo
in
jo
jmp
inc
jo
icebp
inc
jo
cmc
inc
jo
stc
inc
jo
std
inc
jo
rol
lds
inc
leave
inc
jo
int
jo
rol
inc
aad
jo
fld
inc
fld
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
sar
jae
fnstcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
sar
jae
fnstcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
sar
jae
fnstcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
sar
jae
fnstcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
sar
jae
fnstcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
sar
jae
fnstcw
jae
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
mov
jae
imul
inc
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
inc
lea
inc
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
inc
int
jae
sar
inc
fnstcw
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
sar
jae
fnstcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
inc
gs
inc
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jae
mov
jae
mov
mov
inc
xor
jae
lea
jae
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jae
in
jae
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jae
shl
jae
fnstenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
inc
gs
inc
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jae
mov
jae
mov
mov
inc
xor
jae
lea
jae
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jae
in
jae
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jae
shl
jae
fnstenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
inc
gs
inc
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jae
mov
jae
mov
mov
inc
xor
jae
lea
jae
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jae
in
jae
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jae
shl
jae
fnstenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
inc
gs
inc
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jae
mov
jae
mov
mov
inc
xor
jae
lea
jae
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jae
in
jae
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jae
shl
jae
fnstenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
inc
gs
inc
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jae
mov
jae
mov
mov
inc
xor
jae
lea
jae
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jae
in
jae
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jae
shl
jae
fnstenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
inc
gs
inc
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jae
mov
jae
mov
mov
inc
xor
jae
lea
jae
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jae
in
jae
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jae
shl
jae
fnstenv
jae
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
mov
inc
gs
inc
imul
inc
jne
jae
jns
jae
jge
jae
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jae
mov
jae
mov
mov
inc
xor
inc
lea
inc
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jae
in
jae
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
leave
mov
inc
int
jae
shl
inc
fnstenv
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
inc
gs
inc
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jae
mov
jae
mov
mov
inc
xor
jae
lea
jae
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jae
in
jae
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jae
shl
jae
fnstenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
stos
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
stos
jae
inc
stos
jae
dec
stos
jae
dec
stos
jae
push
stos
jae
push
stos
jae
pop
stos
jae
pop
stos
jae
mov
stos
jae
test
stos
jae
mov
jae
mov
jae
mov
stos
jae
sub
jae
lea
jae
xchg
stos
jae
cdq
stos
jae
popf
stos
jae
loope
jae
in
jae
jmp
stos
jae
icebp
stos
jae
cmc
stos
jae
stc
stos
jae
std
stos
jae
shr
inc
leave
stos
jae
int
jae
shr
jae
fldcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
stos
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
stos
jae
inc
stos
jae
dec
stos
jae
dec
stos
jae
push
stos
jae
push
stos
jae
pop
stos
jae
pop
stos
jae
mov
stos
jae
test
stos
jae
mov
jae
mov
jae
mov
stos
jae
sub
jae
lea
jae
xchg
stos
jae
cdq
stos
jae
popf
stos
jae
loope
jae
in
jae
jmp
stos
jae
icebp
stos
jae
cmc
stos
jae
stc
stos
jae
std
stos
jae
shr
inc
leave
stos
jae
int
jae
shr
jae
fldcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
test
inc
gs
inc
imul
jae
jne
jae
jns
jae
jge
jae
inc
test
inc
inc
test
inc
dec
test
inc
dec
test
inc
push
test
inc
push
test
inc
pop
test
inc
pop
test
inc
mov
test
inc
test
test
inc
mov
jae
mov
jae
mov
test
inc
sub
jae
lea
jae
xchg
test
inc
cdq
test
inc
popf
test
inc
loope
jae
in
jae
jmp
test
inc
icebp
test
inc
cmc
test
inc
stc
test
inc
std
test
inc
shr
inc
leave
test
inc
int
jae
shr
jae
fldcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
test
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
test
jae
dec
test
jae
push
test
jae
pop
test
jae
mov
test
jae
lods
test
jae
mov
jae
mov
test
jae
test
jae
lea
jae
xchg
test
jae
popf
test
jae
in
jae
jmp
test
jae
cmc
test
jae
std
test
jae
lds
jae
int
jae
shr
jae
fldcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
scas
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
scas
jae
inc
scas
jae
dec
scas
jae
dec
scas
jae
push
scas
jae
push
scas
jae
pop
scas
jae
pop
scas
jae
mov
scas
jae
test
scas
jae
mov
jae
mov
jae
mov
scas
jae
sub
jae
lea
jae
xchg
scas
jae
cdq
scas
jae
popf
scas
jae
loope
jae
in
jae
jmp
scas
jae
icebp
scas
jae
cmc
scas
jae
stc
scas
jae
std
scas
jae
shr
inc
leave
scas
jae
int
jae
shr
jae
fldcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
scas
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
scas
jae
inc
scas
jae
dec
scas
jae
dec
scas
jae
push
scas
jae
push
scas
jae
pop
scas
jae
pop
scas
jae
mov
scas
jae
test
scas
jae
mov
jae
mov
jae
mov
scas
jae
sub
jae
lea
jae
xchg
scas
jae
cdq
scas
jae
popf
scas
jae
loope
jae
in
jae
jmp
scas
jae
icebp
scas
jae
cmc
scas
jae
stc
scas
jae
std
scas
jae
shr
inc
leave
scas
jae
int
jae
shr
jae
fldcw
jae
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
lods
jae
lods
jae
imul
inc
jne
jae
jns
jae
jge
jae
inc
lods
jae
inc
lods
jae
dec
lods
jae
dec
lods
jae
push
lods
jae
push
lods
jae
pop
lods
jae
pop
lods
jae
mov
lods
jae
test
lods
jae
mov
jae
mov
jae
mov
lods
jae
sub
inc
lea
inc
xchg
lods
jae
cdq
lods
jae
popf
lods
jae
loope
jae
in
jae
jmp
lods
jae
icebp
lods
jae
cmc
lods
jae
stc
lods
jae
std
lods
jae
shr
leave
lods
jae
int
jae
shr
inc
fldcw
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
lods
jae
lods
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
lods
jae
inc
lods
jae
dec
lods
jae
dec
lods
jae
push
lods
jae
push
lods
jae
pop
lods
jae
pop
lods
jae
mov
lods
jae
test
lods
jae
mov
jae
mov
jae
mov
lods
jae
sub
jae
lea
jae
xchg
lods
jae
cdq
lods
jae
popf
lods
jae
loope
jae
in
jae
jmp
lods
jae
icebp
lods
jae
cmc
lods
jae
stc
lods
jae
std
lods
jae
shr
inc
leave
lods
jae
int
jae
shr
jae
fldcw
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
shl
jae
fldenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
shl
jae
fldenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
shl
jae
fldenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
jae
dec
mov
jae
push
mov
jae
pop
mov
jae
mov
mov
jae
lods
mov
jae
mov
jae
mov
mov
jae
test
jae
lea
jae
xchg
mov
jae
popf
mov
jae
in
jae
jmp
mov
jae
cmc
mov
jae
std
mov
jae
lds
jae
int
jae
shl
jae
fldenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
cmps
jae
cmps
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
cmps
jae
inc
cmps
jae
dec
cmps
jae
dec
cmps
jae
push
cmps
jae
push
cmps
jae
pop
cmps
jae
pop
cmps
jae
mov
cmps
jae
test
cmps
jae
mov
jae
mov
jae
mov
cmps
jae
and
jae
lea
jae
xchg
cmps
jae
cdq
cmps
jae
popf
cmps
jae
loope
jae
in
jae
jmp
cmps
jae
icebp
cmps
jae
cmc
cmps
jae
stc
cmps
jae
std
cmps
jae
shl
inc
leave
cmps
jae
int
jae
shl
jae
fldenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
cmps
jae
cmps
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
cmps
jae
inc
cmps
jae
dec
cmps
jae
dec
cmps
jae
push
cmps
jae
push
cmps
jae
pop
cmps
jae
pop
cmps
jae
mov
cmps
jae
test
cmps
jae
mov
jae
mov
jae
mov
cmps
jae
and
jae
lea
jae
xchg
cmps
jae
cdq
cmps
jae
popf
cmps
jae
loope
jae
in
jae
jmp
cmps
jae
icebp
cmps
jae
cmc
cmps
jae
stc
cmps
jae
std
cmps
jae
shl
inc
leave
cmps
jae
int
jae
shl
jae
fldenv
jae
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
movs
jae
movs
jae
imul
inc
jne
jae
jns
jae
jge
jae
inc
movs
jae
inc
movs
jae
dec
movs
jae
dec
movs
jae
push
movs
jae
push
movs
jae
pop
movs
jae
pop
movs
jae
mov
movs
jae
test
movs
jae
mov
jae
mov
jae
mov
movs
jae
and
inc
lea
inc
xchg
movs
jae
cdq
movs
jae
popf
movs
jae
loope
jae
in
jae
jmp
movs
jae
icebp
movs
jae
cmc
movs
jae
stc
movs
jae
std
movs
jae
shl
leave
movs
jae
int
jae
shl
inc
fldenv
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
movs
jae
movs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
movs
jae
inc
movs
jae
dec
movs
jae
dec
movs
jae
push
movs
jae
push
movs
jae
pop
movs
jae
pop
movs
jae
mov
movs
jae
test
movs
jae
mov
jae
mov
jae
mov
movs
jae
and
jae
lea
jae
xchg
movs
jae
cdq
movs
jae
popf
movs
jae
loope
jae
in
jae
jmp
movs
jae
icebp
movs
jae
cmc
movs
jae
stc
movs
jae
std
movs
jae
shl
inc
leave
movs
jae
int
jae
shl
jae
fldenv
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
call
imul
jae
jne
jae
jns
jae
jge
jae
inc
call
dec
call
push
call
pop
call
mov
call
lods
call
mov
jae
mov
call
test
jae
lea
jae
xchg
call
popf
call
in
jae
jmp
call
cmc
call
std
call
lds
jae
int
jae
rcr
jae
fstp
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
fwait
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
fwait
jae
inc
fwait
jae
dec
fwait
jae
dec
fwait
jae
push
fwait
jae
push
fwait
jae
pop
fwait
jae
pop
fwait
jae
mov
fwait
jae
test
fwait
jae
mov
jae
mov
jae
mov
fwait
jae
sbb
jae
lea
jae
xchg
fwait
jae
cdq
fwait
jae
popf
fwait
jae
loope
jae
in
jae
jmp
fwait
jae
icebp
fwait
jae
cmc
fwait
jae
stc
fwait
jae
std
fwait
jae
rcr
inc
leave
fwait
jae
int
jae
rcr
jae
fstp
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
cwde
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
cwde
jae
inc
cwde
jae
dec
cwde
jae
dec
cwde
jae
push
cwde
jae
push
cwde
jae
pop
cwde
jae
pop
cwde
jae
mov
cwde
jae
test
cwde
jae
mov
jae
mov
jae
mov
cwde
jae
sbb
jae
lea
jae
xchg
cwde
jae
cdq
cwde
jae
popf
cwde
jae
loope
jae
in
jae
jmp
cwde
jae
icebp
cwde
jae
cmc
cwde
jae
stc
cwde
jae
std
cwde
jae
rcr
inc
leave
cwde
jae
int
jae
rcr
jae
fstp
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
cdq
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
cdq
jae
inc
cdq
jae
dec
cdq
jae
dec
cdq
jae
push
cdq
jae
push
cdq
jae
pop
cdq
jae
pop
cdq
jae
mov
cdq
jae
test
cdq
jae
mov
jae
mov
jae
mov
cdq
jae
sbb
jae
lea
jae
xchg
cdq
jae
cdq
cdq
jae
popf
cdq
jae
loope
jae
in
jae
jmp
cdq
jae
icebp
cdq
jae
cmc
cdq
jae
stc
cdq
jae
std
cdq
jae
rcr
inc
leave
cdq
jae
int
jae
rcr
jae
fstp
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
sahf
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
sahf
jae
inc
sahf
jae
dec
sahf
jae
dec
sahf
jae
push
sahf
jae
push
sahf
jae
pop
sahf
jae
pop
sahf
jae
mov
sahf
jae
test
sahf
jae
mov
jae
mov
jae
mov
sahf
jae
sbb
jae
lea
jae
xchg
sahf
jae
cdq
sahf
jae
popf
sahf
jae
loope
jae
in
jae
jmp
sahf
jae
icebp
sahf
jae
cmc
sahf
jae
stc
sahf
jae
std
sahf
jae
rcr
inc
leave
sahf
jae
int
jae
rcr
jae
fstp
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
lahf
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
lahf
jae
inc
lahf
jae
dec
lahf
jae
dec
lahf
jae
push
lahf
jae
push
lahf
jae
pop
lahf
jae
pop
lahf
jae
mov
lahf
jae
test
lahf
jae
mov
jae
mov
jae
mov
lahf
jae
sbb
jae
lea
jae
xchg
lahf
jae
cdq
lahf
jae
popf
lahf
jae
loope
jae
in
jae
jmp
lahf
jae
icebp
lahf
jae
cmc
lahf
jae
stc
lahf
jae
std
lahf
jae
rcr
inc
leave
lahf
jae
int
jae
rcr
jae
fstp
jae
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
pushf
jae
gs
jae
imul
inc
jne
jae
jns
jae
jge
jae
inc
pushf
jae
inc
pushf
jae
dec
pushf
jae
dec
pushf
jae
push
pushf
jae
push
pushf
jae
pop
pushf
jae
pop
pushf
jae
mov
pushf
jae
test
pushf
jae
mov
jae
mov
jae
mov
pushf
jae
sbb
inc
lea
inc
xchg
pushf
jae
cdq
pushf
jae
popf
pushf
jae
loope
jae
in
jae
jmp
pushf
jae
icebp
pushf
jae
cmc
pushf
jae
stc
pushf
jae
std
pushf
jae
rcr
leave
pushf
jae
int
jae
rcr
inc
fstp
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
popf
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
popf
jae
inc
popf
jae
dec
popf
jae
dec
popf
jae
push
popf
jae
push
popf
jae
pop
popf
jae
pop
popf
jae
mov
popf
jae
test
popf
jae
mov
jae
mov
jae
mov
popf
jae
sbb
jae
lea
jae
xchg
popf
jae
cdq
popf
jae
popf
popf
jae
loope
jae
in
jae
jmp
popf
jae
icebp
popf
jae
cmc
popf
jae
stc
popf
jae
std
popf
jae
rcr
inc
leave
popf
jae
int
jae
rcr
jae
fstp
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xchg
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
xchg
jae
inc
xchg
jae
dec
xchg
jae
dec
xchg
jae
push
xchg
jae
push
xchg
jae
pop
xchg
jae
pop
xchg
jae
mov
xchg
jae
test
xchg
jae
mov
jae
mov
jae
mov
xchg
jae
adc
jae
lea
jae
xchg
xchg
jae
cdq
xchg
jae
popf
xchg
jae
loope
jae
in
jae
jmp
xchg
jae
icebp
xchg
jae
cmc
xchg
jae
stc
xchg
jae
std
xchg
jae
rcl
inc
leave
xchg
jae
int
jae
rcl
jae
fst
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xchg
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
xchg
jae
inc
xchg
jae
dec
xchg
jae
dec
xchg
jae
push
xchg
jae
push
xchg
jae
pop
xchg
jae
pop
xchg
jae
mov
xchg
jae
test
xchg
jae
mov
jae
mov
jae
mov
xchg
jae
adc
jae
lea
jae
xchg
xchg
jae
cdq
xchg
jae
popf
xchg
jae
loope
jae
in
jae
jmp
xchg
jae
icebp
xchg
jae
cmc
xchg
jae
stc
xchg
jae
std
xchg
jae
rcl
inc
leave
xchg
jae
int
jae
rcl
jae
fst
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
nop
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
nop
jae
inc
nop
jae
dec
nop
jae
dec
nop
jae
push
nop
jae
push
nop
jae
pop
nop
jae
pop
nop
jae
mov
nop
jae
test
nop
jae
mov
jae
mov
jae
mov
nop
jae
adc
jae
lea
jae
xchg
nop
jae
cdq
nop
jae
popf
nop
jae
loope
jae
in
jae
jmp
nop
jae
icebp
nop
jae
cmc
nop
jae
stc
nop
jae
std
nop
jae
rcl
inc
leave
nop
jae
int
jae
rcl
jae
fst
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xchg
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
xchg
jae
inc
xchg
jae
dec
xchg
jae
dec
xchg
jae
push
xchg
jae
push
xchg
jae
pop
xchg
jae
pop
xchg
jae
mov
xchg
jae
test
xchg
jae
mov
jae
mov
jae
mov
xchg
jae
adc
jae
lea
jae
xchg
xchg
jae
cdq
xchg
jae
popf
xchg
jae
loope
jae
in
jae
jmp
xchg
jae
icebp
xchg
jae
cmc
xchg
jae
stc
xchg
jae
std
xchg
jae
rcl
inc
leave
xchg
jae
int
jae
rcl
jae
fst
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xchg
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
xchg
jae
inc
xchg
jae
dec
xchg
jae
dec
xchg
jae
push
xchg
jae
push
xchg
jae
pop
xchg
jae
pop
xchg
jae
mov
xchg
jae
test
xchg
jae
mov
jae
mov
jae
mov
xchg
jae
adc
jae
lea
jae
xchg
xchg
jae
cdq
xchg
jae
popf
xchg
jae
loope
jae
in
jae
jmp
xchg
jae
icebp
xchg
jae
cmc
xchg
jae
stc
xchg
jae
std
xchg
jae
rcl
inc
leave
xchg
jae
int
jae
rcl
jae
fst
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xchg
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
xchg
jae
inc
xchg
jae
dec
xchg
jae
dec
xchg
jae
push
xchg
jae
push
xchg
jae
pop
xchg
jae
pop
xchg
jae
mov
xchg
jae
test
xchg
jae
mov
jae
mov
jae
mov
xchg
jae
adc
jae
lea
jae
xchg
xchg
jae
cdq
xchg
jae
popf
xchg
jae
loope
jae
in
jae
jmp
xchg
jae
icebp
xchg
jae
cmc
xchg
jae
stc
xchg
jae
std
xchg
jae
rcl
inc
leave
xchg
jae
int
jae
rcl
jae
fst
jae
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
xchg
jae
gs
jae
imul
inc
jne
jae
jns
jae
jge
jae
inc
xchg
jae
inc
xchg
jae
dec
xchg
jae
dec
xchg
jae
push
xchg
jae
push
xchg
jae
pop
xchg
jae
pop
xchg
jae
mov
xchg
jae
test
xchg
jae
mov
jae
mov
jae
mov
xchg
jae
adc
inc
lea
inc
xchg
xchg
jae
cdq
xchg
jae
popf
xchg
jae
loope
jae
in
jae
jmp
xchg
jae
icebp
xchg
jae
cmc
xchg
jae
stc
xchg
jae
std
xchg
jae
rcl
leave
xchg
jae
int
jae
rcl
inc
fst
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xchg
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
xchg
jae
inc
xchg
jae
dec
xchg
jae
dec
xchg
jae
push
xchg
jae
push
xchg
jae
pop
xchg
jae
pop
xchg
jae
mov
xchg
jae
test
xchg
jae
mov
jae
mov
jae
mov
xchg
jae
adc
jae
lea
jae
xchg
xchg
jae
cdq
xchg
jae
popf
xchg
jae
loope
jae
in
jae
jmp
xchg
jae
icebp
xchg
jae
cmc
xchg
jae
stc
xchg
jae
std
xchg
jae
rcl
inc
leave
xchg
jae
int
jae
rcl
jae
fst
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
mov
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jae
mov
jae
mov
mov
or
jae
lea
jae
xchg
mov
cdq
mov
popf
mov
loope
jae
in
jae
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
inc
leave
mov
int
jae
ror
jae
(bad)
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
mov
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jae
mov
jae
mov
mov
or
jae
lea
jae
xchg
mov
cdq
mov
popf
mov
loope
jae
in
jae
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
inc
leave
mov
int
jae
ror
jae
(bad)
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
mov
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jae
mov
jae
mov
mov
or
jae
lea
jae
xchg
mov
cdq
mov
popf
mov
loope
jae
in
jae
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
inc
leave
mov
int
jae
ror
jae
(bad)
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
mov
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jae
mov
jae
mov
mov
or
jae
lea
jae
xchg
mov
cdq
mov
popf
mov
loope
jae
in
jae
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
inc
leave
mov
int
jae
ror
jae
(bad)
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
mov
mov
imul
jae
jne
jae
jns
jae
jge
jae
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jae
mov
jae
mov
mov
or
jae
lea
jae
xchg
mov
cdq
mov
popf
mov
loope
jae
in
jae
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
inc
leave
mov
int
jae
ror
jae
(bad)
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
(bad)
jae
gs
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
(bad)
jae
inc
(bad)
jae
dec
(bad)
jae
dec
(bad)
jae
push
(bad)
jae
push
(bad)
jae
pop
(bad)
jae
pop
(bad)
jae
mov
(bad)
jae
test
(bad)
jae
mov
jae
mov
jae
mov
(bad)
jae
or
jae
lea
jae
xchg
(bad)
jae
cdq
(bad)
jae
popf
(bad)
jae
loope
jae
in
jae
jmp
(bad)
jae
icebp
(bad)
jae
cmc
(bad)
jae
stc
(bad)
jae
std
(bad)
jae
ror
inc
leave
(bad)
jae
int
jae
ror
jae
(bad)
jae
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
mov
mov
imul
inc
jne
jae
jns
jae
jge
jae
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jae
mov
jae
mov
mov
or
inc
lea
inc
xchg
mov
cdq
mov
popf
mov
loope
jae
in
jae
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
leave
mov
int
jae
ror
inc
(bad)
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
lea
lea
imul
jae
jne
jae
jns
jae
jge
jae
inc
lea
inc
lea
dec
lea
dec
lea
push
lea
push
lea
pop
lea
pop
lea
mov
lea
test
lea
mov
jae
mov
jae
mov
lea
or
jae
lea
jae
xchg
lea
cdq
lea
popf
lea
loope
jae
in
jae
jmp
lea
icebp
lea
cmc
lea
stc
lea
std
lea
ror
inc
leave
lea
int
jae
ror
jae
(bad)
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xor
imul
jae
jne
jae
jns
jae
jge
jae
inc
xor
dec
xor
push
xor
pop
xor
mov
xor
lods
xor
mov
jae
mov
xor
test
jae
lea
jae
xchg
xor
popf
xor
in
jae
jmp
xor
cmc
xor
std
xor
lds
jae
int
jae
rol
jae
fld
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xchg
xchg
imul
jae
jne
jae
jns
jae
jge
jae
inc
xchg
inc
xchg
dec
xchg
dec
xchg
push
xchg
push
xchg
pop
xchg
pop
xchg
mov
xchg
test
xchg
mov
jae
mov
jae
mov
xchg
add
jae
lea
jae
xchg
xchg
cdq
xchg
popf
xchg
loope
jae
in
jae
jmp
xchg
icebp
xchg
cmc
xchg
stc
xchg
std
xchg
rol
inc
leave
xchg
int
jae
rol
jae
fld
jae
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xchg
xchg
imul
jae
jne
jae
jns
jae
jge
jae
inc
xchg
inc
xchg
dec
xchg
dec
xchg
push
xchg
push
xchg
pop
xchg
pop
xchg
mov
xchg
test
xchg
mov
jae
mov
jae
mov
xchg
add
jae
lea
jae
xchg
xchg
cdq
xchg
popf
xchg
loope
jae
in
jae
jmp
xchg
icebp
xchg
cmc
xchg
stc
xchg
std
xchg
rol
inc
leave
xchg
int
jae
rol
jae
fld
jae
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
test
test
imul
inc
jne
jae
jns
jae
jge
jae
inc
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
mov
test
test
test
mov
jae
mov
jae
mov
test
add
inc
lea
inc
xchg
test
cdq
test
popf
test
loope
jae
in
jae
jmp
test
icebp
test
cmc
test
stc
test
std
test
rol
leave
test
int
jae
rol
inc
fld
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
test
test
imul
jae
jne
jae
jns
jae
jge
jae
inc
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
mov
test
test
test
mov
jae
mov
jae
mov
test
add
jae
lea
jae
xchg
test
cdq
test
popf
test
loope
jae
in
jae
jmp
test
icebp
test
cmc
test
stc
test
std
test
rol
inc
leave
test
int
jae
rol
jae
fld
jae
and
jae
and
cli
jae
sub
cli
jae
xor
cli
jae
cmp
cli
jae
add
cli
jae
or
cli
jae
adc
cli
jae
sbb
cli
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
cli
jae
inc
cli
jae
dec
cli
jae
dec
cli
jae
push
cli
jae
push
cli
jae
pop
cli
jae
pop
cli
jae
mov
cli
jae
test
cli
jae
mov
jae
mov
jae
mov
cli
jae
cmp
jae
mov
jae
(bad)
cli
jae
xchg
cli
jae
xchg
cli
jae
cdq
cli
jae
popf
cli
jae
loope
jae
in
jae
jmp
cli
jae
icebp
cli
jae
cmc
cli
jae
stc
cli
jae
std
cli
jae
sar
inc
(bad)
inc
leave
cli
jae
int
jae
sar
jae
aad
jae
fsqrt
jae
(bad)
jae
and
jae
and
sti
jae
sub
sti
jae
xor
sti
jae
cmp
sti
jae
add
sti
jae
or
sti
jae
adc
sti
jae
sbb
sti
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
sti
jae
inc
sti
jae
dec
sti
jae
dec
sti
jae
push
sti
jae
push
sti
jae
pop
sti
jae
pop
sti
jae
mov
sti
jae
test
sti
jae
mov
jae
mov
jae
mov
sti
jae
cmp
jae
mov
jae
(bad)
sti
jae
xchg
sti
jae
xchg
sti
jae
cdq
sti
jae
popf
sti
jae
loope
jae
in
jae
jmp
sti
jae
icebp
sti
jae
cmc
sti
jae
stc
sti
jae
std
sti
jae
sar
inc
(bad)
inc
leave
sti
jae
int
jae
sar
jae
aad
jae
fsincos
jae
(bad)
jae
and
jae
and
clc
jae
sub
clc
jae
xor
clc
jae
cmp
clc
jae
add
clc
jae
or
clc
jae
adc
clc
jae
sbb
clc
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
clc
jae
inc
clc
jae
dec
clc
jae
dec
clc
jae
push
clc
jae
push
clc
jae
pop
clc
jae
pop
clc
jae
mov
clc
jae
test
clc
jae
mov
jae
mov
jae
mov
clc
jae
cmp
jae
mov
jae
(bad)
clc
jae
xchg
clc
jae
xchg
clc
jae
cdq
clc
jae
popf
clc
jae
loope
jae
in
jae
jmp
clc
jae
icebp
clc
jae
cmc
clc
jae
stc
clc
jae
std
clc
jae
sar
inc
(bad)
inc
leave
clc
jae
int
jae
sar
jae
aad
jae
fprem
jae
(bad)
jae
and
jae
and
stc
jae
sub
stc
jae
xor
stc
jae
cmp
stc
jae
add
stc
jae
or
stc
jae
adc
stc
jae
sbb
stc
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
stc
jae
inc
stc
jae
dec
stc
jae
dec
stc
jae
push
stc
jae
push
stc
jae
pop
stc
jae
pop
stc
jae
mov
stc
jae
test
stc
jae
mov
jae
mov
jae
mov
stc
jae
cmp
jae
mov
jae
(bad)
stc
jae
xchg
stc
jae
xchg
stc
jae
cdq
stc
jae
popf
stc
jae
loope
jae
in
jae
jmp
stc
jae
icebp
stc
jae
cmc
stc
jae
stc
stc
jae
std
stc
jae
sar
inc
(bad)
inc
leave
stc
jae
int
jae
sar
jae
aad
jae
fyl2xp1
jae
(bad)
jae
and
jae
and
(bad)
jae
sub
(bad)
jae
xor
(bad)
jae
cmp
(bad)
jae
add
(bad)
jae
or
(bad)
jae
adc
(bad)
jae
sbb
(bad)
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
(bad)
jae
inc
(bad)
jae
dec
(bad)
jae
dec
(bad)
jae
push
(bad)
jae
push
(bad)
jae
pop
(bad)
jae
pop
(bad)
jae
mov
(bad)
jae
test
(bad)
jae
mov
jae
mov
jae
mov
(bad)
jae
cmp
jae
mov
jae
(bad)
(bad)
jae
xchg
(bad)
jae
xchg
(bad)
jae
cdq
(bad)
jae
popf
(bad)
jae
loope
jae
in
jae
jmp
(bad)
jae
icebp
(bad)
jae
cmc
(bad)
jae
stc
(bad)
jae
std
(bad)
jae
sar
inc
(bad)
inc
leave
(bad)
jae
int
jae
sar
jae
aad
jae
fsin
jae
(bad)
jae
and
jae
and
push
sub
push
xor
push
cmp
push
add
push
or
push
adc
push
sbb
push
push
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
inc
push
dec
push
dec
push
push
push
push
push
pop
push
pop
push
mov
push
test
push
mov
jae
mov
jae
mov
push
cmp
jae
mov
jae
(bad)
push
xchg
push
xchg
push
cdq
push
popf
push
loope
jae
in
jae
jmp
push
icebp
push
cmc
push
stc
push
std
push
sar
inc
(bad)
inc
leave
push
int
jae
sar
jae
aad
jae
fcos
jae
(bad)
jae
and
jae
and
cld
jae
sub
cld
jae
xor
cld
jae
cmp
cld
jae
add
cld
jae
or
cld
jae
adc
cld
jae
sbb
cld
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
cld
jae
inc
cld
jae
dec
cld
jae
dec
cld
jae
push
cld
jae
push
cld
jae
pop
cld
jae
pop
cld
jae
mov
cld
jae
test
cld
jae
mov
jae
mov
jae
mov
cld
jae
cmp
jae
mov
jae
(bad)
cld
jae
xchg
cld
jae
xchg
cld
jae
cdq
cld
jae
popf
cld
jae
loope
jae
in
jae
jmp
cld
jae
icebp
cld
jae
cmc
cld
jae
stc
cld
jae
std
cld
jae
sar
inc
(bad)
inc
leave
cld
jae
int
jae
sar
jae
aad
jae
frndint
jae
(bad)
jae
and
jae
and
std
jae
sub
std
jae
xor
std
jae
cmp
std
jae
add
std
jae
or
std
jae
adc
std
jae
sbb
std
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
std
jae
inc
std
jae
dec
std
jae
dec
std
jae
push
std
jae
push
std
jae
pop
std
jae
pop
std
jae
mov
std
jae
test
std
jae
mov
jae
mov
jae
mov
std
jae
cmp
jae
mov
jae
(bad)
std
jae
xchg
std
jae
xchg
std
jae
cdq
std
jae
popf
std
jae
loope
jae
in
jae
jmp
std
jae
icebp
std
jae
cmc
std
jae
stc
std
jae
std
std
jae
sar
inc
(bad)
inc
leave
std
jae
int
jae
sar
jae
aad
jae
fscale
jae
(bad)
jae
and
jae
and
bnd
sub
bnd
xor
bnd
cmp
bnd
add
bnd
or
bnd
adc
bnd
sbb
bnd
gs
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
bnd
inc
bnd
dec
bnd
dec
bnd
push
bnd
push
bnd
pop
bnd
pop
bnd
mov
bnd
test
bnd
mov
jae
mov
jae
mov
bnd
xor
jae
mov
jae
(bad)
bnd
xchg
bnd
xchg
bnd
cdq
bnd
popf
bnd
loope
jae
in
jae
jmp
bnd
icebp
bnd
cmc
bnd
stc
bnd
std
bnd
shl
inc
(bad)
inc
leave
bnd
int
jae
shl
jae
aad
jae
fptan
jae
(bad)
jae
and
jae
and
repz
sub
repz
xor
repz
cmp
repz
add
repz
or
repz
adc
repz
sbb
repz
gs
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
repz
inc
repz
dec
repz
dec
repz
push
repz
push
repz
pop
repz
pop
repz
mov
repz
test
repz
mov
jae
mov
jae
mov
repz
xor
jae
mov
jae
(bad)
repz
xchg
repz
xchg
repz
cdq
repz
popf
repz
loope
jae
in
jae
jmp
repz
icebp
repz
cmc
repz
stc
repz
std
repz
shl
inc
(bad)
inc
leave
repz
int
jae
shl
jae
aad
jae
fpatan
jae
(bad)
jae
and
jae
and
lock
sub
lock
xor
lock
cmp
lock
add
lock
or
lock
adc
lock
sbb
lock
gs
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
lock
inc
lock
dec
lock
dec
lock
push
lock
push
lock
pop
lock
pop
lock
mov
lock
test
lock
mov
jae
mov
jae
mov
lock
xor
jae
mov
jae
(bad)
lock
xchg
lock
xchg
lock
cdq
lock
popf
lock
loope
jae
in
jae
jmp
lock
icebp
lock
cmc
lock
stc
lock
std
lock
shl
inc
(bad)
inc
leave
lock
int
jae
shl
jae
aad
jae
f2xm1
jae
(bad)
jae
and
jae
and
icebp
jae
sub
icebp
jae
xor
icebp
jae
cmp
icebp
jae
add
icebp
jae
or
icebp
jae
adc
icebp
jae
sbb
icebp
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
icebp
jae
inc
icebp
jae
dec
icebp
jae
dec
icebp
jae
push
icebp
jae
push
icebp
jae
pop
icebp
jae
pop
icebp
jae
mov
icebp
jae
test
icebp
jae
mov
jae
mov
jae
mov
icebp
jae
xor
jae
mov
jae
(bad)
icebp
jae
xchg
icebp
jae
xchg
icebp
jae
cdq
icebp
jae
popf
icebp
jae
loope
jae
in
jae
jmp
icebp
jae
icebp
icebp
jae
cmc
icebp
jae
stc
icebp
jae
std
icebp
jae
shl
inc
(bad)
inc
leave
icebp
jae
int
jae
shl
jae
aad
jae
fyl2x
jae
(bad)
jae
and
jae
and
div
sub
div
xor
div
cmp
div
add
div
or
div
adc
div
sbb
div
div
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
div
inc
div
dec
div
dec
div
push
div
push
div
pop
div
pop
div
mov
div
test
div
mov
jae
mov
jae
mov
div
xor
jae
mov
jae
(bad)
div
xchg
div
xchg
div
cdq
div
popf
div
loope
jae
in
jae
jmp
div
icebp
div
cmc
div
stc
div
std
div
shl
inc
(bad)
inc
leave
div
int
jae
shl
jae
aad
jae
fdecstp
jae
(bad)
jae
and
jae
and
div
sub
div
xor
div
cmp
div
add
div
or
div
adc
div
sbb
div
div
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
div
inc
div
dec
div
dec
div
push
div
push
div
pop
div
pop
div
mov
div
test
div
mov
jae
mov
jae
mov
div
xor
jae
mov
jae
(bad)
div
xchg
div
xchg
div
cdq
div
popf
div
loope
jae
in
jae
jmp
div
icebp
div
cmc
div
stc
div
std
div
shl
inc
(bad)
inc
leave
div
int
jae
shl
jae
aad
jae
fincstp
jae
(bad)
jae
and
jae
and
hlt
jae
sub
hlt
jae
xor
hlt
jae
cmp
hlt
jae
add
hlt
jae
or
hlt
jae
adc
hlt
jae
sbb
hlt
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
hlt
jae
inc
hlt
jae
dec
hlt
jae
dec
hlt
jae
push
hlt
jae
push
hlt
jae
pop
hlt
jae
pop
hlt
jae
mov
hlt
jae
test
hlt
jae
mov
jae
mov
jae
mov
hlt
jae
xor
jae
mov
jae
(bad)
hlt
jae
xchg
hlt
jae
xchg
hlt
jae
cdq
hlt
jae
popf
hlt
jae
loope
jae
in
jae
jmp
hlt
jae
icebp
hlt
jae
cmc
hlt
jae
stc
hlt
jae
std
hlt
jae
shl
inc
(bad)
inc
leave
hlt
jae
int
jae
shl
jae
aad
jae
fxtract
jae
(bad)
jae
and
jae
and
cmc
jae
sub
cmc
jae
xor
cmc
jae
cmp
cmc
jae
add
cmc
jae
or
cmc
jae
adc
cmc
jae
sbb
cmc
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
cmc
jae
inc
cmc
jae
dec
cmc
jae
dec
cmc
jae
push
cmc
jae
push
cmc
jae
pop
cmc
jae
pop
cmc
jae
mov
cmc
jae
test
cmc
jae
mov
jae
mov
jae
mov
cmc
jae
xor
jae
mov
jae
(bad)
cmc
jae
xchg
cmc
jae
xchg
cmc
jae
cdq
cmc
jae
popf
cmc
jae
loope
jae
in
jae
jmp
cmc
jae
icebp
cmc
jae
cmc
cmc
jae
stc
cmc
jae
std
cmc
jae
shl
inc
(bad)
inc
leave
cmc
jae
int
jae
shl
jae
aad
jae
fprem1
jae
(bad)
jae
and
jae
and
jmp
xor
jae
xor
jmp
add
jae
add
jmp
adc
jae
adc
jmp
popa
jmp
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
jmp
dec
jmp
push
jmp
pop
jmp
mov
jmp
lods
jmp
mov
jae
mov
jmp
test
jae
mov
jae
(bad)
jmp
xchg
jmp
popf
jmp
in
jae
jmp
jmp
cmc
jmp
std
jmp
(bad)
inc
leave
jmp
shr
jae
aad
jae
fldl2e
jae
fucomp
jae
and
jae
and
jmp
inc
sub
jmp
inc
xor
jmp
inc
cmp
jmp
inc
add
jmp
inc
or
jmp
inc
adc
jmp
inc
sbb
jmp
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
jmp
inc
inc
jmp
inc
dec
jmp
inc
dec
jmp
inc
push
jmp
inc
push
jmp
inc
pop
jmp
inc
pop
jmp
inc
mov
jmp
inc
test
jmp
inc
mov
jae
mov
jae
mov
jmp
inc
sub
jae
mov
jae
(bad)
jmp
inc
xchg
jmp
inc
xchg
jmp
inc
cdq
jmp
inc
popf
jmp
inc
loope
jae
in
jae
jmp
jmp
inc
icebp
jmp
inc
cmc
jmp
inc
stc
jmp
inc
std
jmp
inc
shr
inc
(bad)
inc
leave
jmp
inc
int
jae
shr
jae
aad
jae
fldpi
jae
fucomp
jae
and
jae
and
call
jae
xor
jae
xor
call
jae
add
jae
add
call
jae
adc
jae
adc
call
jae
popa
call
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
call
jae
dec
call
jae
push
call
jae
pop
call
jae
mov
call
jae
lods
call
jae
mov
jae
mov
call
jae
test
jae
mov
jae
(bad)
call
jae
xchg
call
jae
popf
call
jae
in
jae
jmp
call
jae
cmc
call
jae
std
call
jae
(bad)
inc
leave
call
jae
shr
jae
aad
jae
fld1
jae
fucomp
jae
and
jae
and
jmp
jae
xor
jae
xor
jmp
jae
add
jae
add
jmp
jae
adc
jae
adc
jmp
jae
popa
jmp
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
jmp
jae
dec
jmp
jae
push
jmp
jae
pop
jmp
jae
mov
jmp
jae
lods
jmp
jae
mov
jae
mov
jmp
jae
test
jae
mov
jae
(bad)
jmp
jae
xchg
jmp
jae
popf
jmp
jae
in
jae
jmp
jmp
jae
cmc
jmp
jae
std
jmp
jae
(bad)
inc
leave
jmp
jae
shr
jae
aad
jae
fldl2t
jae
fucomp
jae
and
jae
and
out
jae
sub
out
jae
xor
out
jae
cmp
out
jae
add
out
jae
or
out
jae
adc
out
jae
sbb
out
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
out
jae
inc
out
jae
dec
out
jae
dec
out
jae
push
out
jae
push
out
jae
pop
out
jae
pop
out
jae
mov
out
jae
test
out
jae
mov
jae
mov
jae
mov
out
jae
sub
jae
mov
jae
(bad)
out
jae
xchg
out
jae
xchg
out
jae
cdq
out
jae
popf
out
jae
loope
jae
in
jae
jmp
out
jae
icebp
out
jae
cmc
out
jae
stc
out
jae
std
out
jae
shr
inc
(bad)
inc
leave
out
jae
int
jae
shr
jae
aad
jae
fldz
jae
fucomp
jae
and
jae
and
out
jae
sub
out
jae
xor
out
jae
cmp
out
jae
add
out
jae
or
out
jae
adc
out
jae
sbb
out
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
out
jae
inc
out
jae
dec
out
jae
dec
out
jae
push
out
jae
push
out
jae
pop
out
jae
pop
out
jae
mov
out
jae
test
out
jae
mov
jae
mov
jae
mov
out
jae
sub
jae
mov
jae
(bad)
out
jae
xchg
out
jae
xchg
out
jae
cdq
out
jae
popf
out
jae
loope
jae
in
jae
jmp
out
jae
icebp
out
jae
cmc
out
jae
stc
out
jae
std
out
jae
shr
inc
(bad)
inc
leave
out
jae
int
jae
shr
jae
aad
jae
(bad)
jae
fucomp
jae
and
jae
and
in
jae
sub
in
jae
xor
in
jae
cmp
in
jae
add
in
jae
or
in
jae
adc
in
jae
sbb
in
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
in
jae
inc
in
jae
dec
in
jae
dec
in
jae
push
in
jae
push
in
jae
pop
in
jae
pop
in
jae
mov
in
jae
test
in
jae
mov
jae
mov
jae
mov
in
jae
sub
jae
mov
jae
(bad)
in
jae
xchg
in
jae
xchg
in
jae
cdq
in
jae
popf
in
jae
loope
jae
in
jae
jmp
in
jae
icebp
in
jae
cmc
in
jae
stc
in
jae
std
in
jae
shr
inc
(bad)
inc
leave
in
jae
int
jae
shr
jae
aad
jae
fldlg2
jae
fucomp
jae
and
jae
and
in
jae
sub
in
jae
xor
in
jae
cmp
in
jae
add
in
jae
or
in
jae
adc
in
jae
sbb
in
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
in
jae
inc
in
jae
dec
in
jae
dec
in
jae
push
in
jae
push
in
jae
pop
in
jae
pop
in
jae
mov
in
jae
test
in
jae
mov
jae
mov
jae
mov
in
jae
sub
jae
mov
jae
(bad)
in
jae
xchg
in
jae
xchg
in
jae
cdq
in
jae
popf
in
jae
loope
jae
in
jae
jmp
in
jae
icebp
in
jae
cmc
in
jae
stc
in
jae
std
in
jae
shr
inc
(bad)
inc
leave
in
jae
int
jae
shr
jae
aad
jae
fldln2
jae
fucomp
jae
and
jae
and
loop
inc
sub
loop
inc
xor
loop
inc
cmp
loop
inc
add
loop
inc
or
loop
inc
adc
loop
inc
sbb
loop
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
loop
inc
inc
loop
inc
dec
loop
inc
dec
loop
inc
push
loop
inc
push
loop
inc
pop
loop
inc
pop
loop
inc
mov
loop
inc
test
loop
inc
mov
jae
mov
jae
mov
loop
inc
and
jae
mov
jae
(bad)
loop
inc
xchg
loop
inc
xchg
loop
inc
cdq
loop
inc
popf
loop
inc
loope
jae
in
jae
jmp
loop
inc
icebp
loop
inc
cmc
loop
inc
stc
loop
inc
std
loop
inc
shl
inc
(bad)
inc
leave
loop
inc
int
jae
shl
jae
aad
jae
(bad)
jae
fucom
jae
and
jae
and
jecxz
inc
sub
jecxz
inc
xor
jecxz
inc
cmp
jecxz
inc
add
jecxz
inc
or
jecxz
inc
adc
jecxz
inc
sbb
jecxz
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
jecxz
inc
inc
jecxz
inc
dec
jecxz
inc
dec
jecxz
inc
push
jecxz
inc
push
jecxz
inc
pop
jecxz
inc
pop
jecxz
inc
mov
jecxz
inc
test
jecxz
inc
mov
jae
mov
jae
mov
jecxz
inc
and
jae
mov
jae
(bad)
jecxz
inc
xchg
jecxz
inc
xchg
jecxz
inc
cdq
jecxz
inc
popf
jecxz
inc
loope
jae
in
jae
jmp
jecxz
inc
icebp
jecxz
inc
cmc
jecxz
inc
stc
jecxz
inc
std
jecxz
inc
shl
inc
(bad)
inc
leave
jecxz
inc
int
jae
shl
jae
aad
jae
(bad)
jae
fucom
jae
and
jae
and
loopne
inc
sub
loopne
inc
xor
loopne
inc
cmp
loopne
inc
add
loopne
inc
or
loopne
inc
adc
loopne
inc
sbb
loopne
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
loopne
inc
inc
loopne
inc
dec
loopne
inc
dec
loopne
inc
push
loopne
inc
push
loopne
inc
pop
loopne
inc
pop
loopne
inc
mov
loopne
inc
test
loopne
inc
mov
jae
mov
jae
mov
loopne
inc
and
jae
mov
jae
(bad)
loopne
inc
xchg
loopne
inc
xchg
loopne
inc
cdq
loopne
inc
popf
loopne
inc
loope
jae
in
jae
jmp
loopne
inc
icebp
loopne
inc
cmc
loopne
inc
stc
loopne
inc
std
loopne
inc
shl
inc
(bad)
inc
leave
loopne
inc
int
jae
shl
jae
aad
jae
fchs
jae
fucom
jae
and
jae
and
loope
inc
sub
loope
inc
xor
loope
inc
cmp
loope
inc
add
loope
inc
or
loope
inc
adc
loope
inc
sbb
loope
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
loope
inc
inc
loope
inc
dec
loope
inc
dec
loope
inc
push
loope
inc
push
loope
inc
pop
loope
inc
pop
loope
inc
mov
loope
inc
test
loope
inc
mov
jae
mov
jae
mov
loope
inc
and
jae
mov
jae
(bad)
loope
inc
xchg
loope
inc
xchg
loope
inc
cdq
loope
inc
popf
loope
inc
loope
jae
in
jae
jmp
loope
inc
icebp
loope
inc
cmc
loope
inc
stc
loope
inc
std
loope
inc
shl
inc
(bad)
inc
leave
loope
inc
int
jae
shl
jae
aad
jae
fabs
jae
fucom
jae
and
jae
and
out
inc
sub
out
inc
xor
out
inc
cmp
out
inc
add
out
inc
or
out
inc
adc
out
inc
sbb
out
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
out
inc
inc
out
inc
dec
out
inc
dec
out
inc
push
out
inc
push
out
inc
pop
out
inc
pop
out
inc
mov
out
inc
test
out
inc
mov
jae
mov
jae
mov
out
inc
and
jae
mov
jae
(bad)
out
inc
xchg
out
inc
xchg
out
inc
cdq
out
inc
popf
out
inc
loope
jae
in
jae
jmp
out
inc
icebp
out
inc
cmc
out
inc
stc
out
inc
std
out
inc
shl
inc
(bad)
inc
leave
out
inc
int
jae
shl
jae
aad
jae
(bad)
jae
fucom
jae
and
jae
and
out
inc
sub
out
inc
xor
out
inc
cmp
out
inc
add
out
inc
or
out
inc
adc
out
inc
sbb
out
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
out
inc
inc
out
inc
dec
out
inc
dec
out
inc
push
out
inc
push
out
inc
pop
out
inc
pop
out
inc
mov
out
inc
test
out
inc
mov
jae
mov
jae
mov
out
inc
and
jae
mov
jae
(bad)
out
inc
xchg
out
inc
xchg
out
inc
cdq
out
inc
popf
out
inc
loope
jae
in
jae
jmp
out
inc
icebp
out
inc
cmc
out
inc
stc
out
inc
std
out
inc
shl
inc
(bad)
inc
leave
out
inc
int
jae
shl
jae
aad
jae
(bad)
jae
fucom
jae
and
jae
and
in
inc
sub
in
inc
xor
in
inc
cmp
in
inc
add
in
inc
or
in
inc
adc
in
inc
sbb
in
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
in
inc
inc
in
inc
dec
in
inc
dec
in
inc
push
in
inc
push
in
inc
pop
in
inc
pop
in
inc
mov
in
inc
test
in
inc
mov
jae
mov
jae
mov
in
inc
and
jae
mov
jae
(bad)
in
inc
xchg
in
inc
xchg
in
inc
cdq
in
inc
popf
in
inc
loope
jae
in
jae
jmp
in
inc
icebp
in
inc
cmc
in
inc
stc
in
inc
std
in
inc
shl
inc
(bad)
inc
leave
in
inc
int
jae
shl
jae
aad
jae
ftst
jae
fucom
jae
and
jae
and
in
inc
sub
in
inc
xor
in
inc
cmp
in
inc
add
in
inc
or
in
inc
adc
in
inc
sbb
in
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
in
inc
inc
in
inc
dec
in
inc
dec
in
inc
push
in
inc
push
in
inc
pop
in
inc
pop
in
inc
mov
in
inc
test
in
inc
mov
jae
mov
jae
mov
in
inc
and
jae
mov
jae
(bad)
in
inc
xchg
in
inc
xchg
in
inc
cdq
in
inc
popf
in
inc
loope
jae
in
jae
jmp
in
inc
icebp
in
inc
cmc
in
inc
stc
in
inc
std
in
inc
shl
inc
(bad)
inc
leave
in
inc
int
jae
shl
jae
aad
jae
fxam
jae
fucom
jae
and
jae
and
fidiv
sub
fidiv
xor
fidiv
cmp
fidiv
add
fidiv
or
fidiv
adc
fidiv
sbb
fidiv
fidiv
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
fidiv
inc
fidiv
dec
fidiv
dec
fidiv
push
fidiv
push
fidiv
pop
fidiv
pop
fidiv
mov
fidiv
test
fidiv
mov
jae
mov
jae
mov
fidiv
sbb
jae
mov
jae
(bad)
fidiv
xchg
fidiv
xchg
fidiv
cdq
fidiv
popf
fidiv
loope
jae
in
jae
jmp
fidiv
icebp
fidiv
cmc
fidiv
stc
fidiv
std
fidiv
rcr
inc
(bad)
inc
leave
fidiv
int
jae
rcr
jae
aad
jae
(bad)
jae
fstp
jae
and
jae
and
(bad)
sub
(bad)
xor
(bad)
cmp
(bad)
add
(bad)
or
(bad)
adc
(bad)
sbb
(bad)
(bad)
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
(bad)
inc
(bad)
dec
(bad)
dec
(bad)
push
(bad)
push
(bad)
pop
(bad)
pop
(bad)
mov
(bad)
test
(bad)
mov
jae
mov
jae
mov
(bad)
sbb
jae
mov
jae
(bad)
(bad)
xchg
(bad)
xchg
(bad)
cdq
(bad)
popf
(bad)
loope
jae
in
jae
jmp
(bad)
icebp
(bad)
cmc
(bad)
stc
(bad)
std
(bad)
rcr
inc
(bad)
inc
leave
(bad)
int
jae
rcr
jae
aad
jae
(bad)
jae
fstp
jae
and
jae
and
fdiv
sub
fdiv
xor
fdiv
cmp
fdiv
add
fdiv
or
fdiv
adc
fdiv
sbb
fdiv
fdiv
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
fdiv
inc
fdiv
dec
fdiv
dec
fdiv
push
fdiv
push
fdiv
pop
fdiv
pop
fdiv
mov
fdiv
test
fdiv
mov
jae
mov
jae
mov
fdiv
sbb
jae
mov
jae
(bad)
fdiv
xchg
fdiv
xchg
fdiv
cdq
fdiv
popf
fdiv
loope
jae
in
jae
jmp
fdiv
icebp
fdiv
cmc
fdiv
stc
fdiv
std
fdiv
rcr
inc
(bad)
inc
leave
fdiv
int
jae
rcr
jae
aad
jae
(bad)
jae
fstp
jae
and
jae
and
fnstenv
sub
fnstenv
xor
fnstenv
cmp
fnstenv
add
fnstenv
or
fnstenv
adc
fnstenv
sbb
fnstenv
fnstenv
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
fnstenv
inc
fnstenv
dec
fnstenv
dec
fnstenv
push
fnstenv
push
fnstenv
pop
fnstenv
pop
fnstenv
mov
fnstenv
test
fnstenv
mov
jae
mov
jae
mov
fnstenv
sbb
jae
mov
jae
(bad)
fnstenv
xchg
fnstenv
xchg
fnstenv
cdq
fnstenv
popf
fnstenv
loope
jae
in
jae
jmp
fnstenv
icebp
fnstenv
cmc
fnstenv
stc
fnstenv
std
fnstenv
rcr
inc
(bad)
inc
leave
fnstenv
int
jae
rcr
jae
aad
jae
(bad)
jae
fstp
jae
and
jae
and
fidiv
sub
fidiv
xor
fidiv
cmp
fidiv
add
fidiv
or
fidiv
adc
fidiv
sbb
fidiv
fidiv
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
fidiv
inc
fidiv
dec
fidiv
dec
fidiv
push
fidiv
push
fidiv
pop
fidiv
pop
fidiv
mov
fidiv
test
fidiv
mov
jae
mov
jae
mov
fidiv
sbb
jae
mov
jae
(bad)
fidiv
xchg
fidiv
xchg
fidiv
cdq
fidiv
popf
fidiv
loope
jae
in
jae
jmp
fidiv
icebp
fidiv
cmc
fidiv
stc
fidiv
std
fidiv
rcr
inc
(bad)
inc
leave
fidiv
int
jae
rcr
jae
aad
jae
(bad)
jae
fstp
jae
and
jae
and
fbstp
sub
fbstp
xor
fbstp
cmp
fbstp
add
fbstp
or
fbstp
adc
fbstp
sbb
fbstp
fbstp
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
fbstp
inc
fbstp
dec
fbstp
dec
fbstp
push
fbstp
push
fbstp
pop
fbstp
pop
fbstp
mov
fbstp
test
fbstp
mov
jae
mov
jae
mov
fbstp
sbb
jae
mov
jae
(bad)
fbstp
xchg
fbstp
xchg
fbstp
cdq
fbstp
popf
fbstp
loope
jae
in
jae
jmp
fbstp
icebp
fbstp
cmc
fbstp
stc
fbstp
std
fbstp
rcr
inc
(bad)
inc
leave
fbstp
int
jae
rcr
jae
aad
jae
(bad)
jae
fstp
jae
and
jae
and
fdiv
sub
fdiv
xor
fdiv
cmp
fdiv
add
fdiv
or
fdiv
adc
fdiv
sbb
fdiv
fdiv
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
fdiv
inc
fdiv
dec
fdiv
dec
fdiv
push
fdiv
push
fdiv
pop
fdiv
pop
fdiv
mov
fdiv
test
fdiv
mov
jae
mov
jae
mov
fdiv
sbb
jae
mov
jae
(bad)
fdiv
xchg
fdiv
xchg
fdiv
cdq
fdiv
popf
fdiv
loope
jae
in
jae
jmp
fdiv
icebp
fdiv
cmc
fdiv
stc
fdiv
std
fdiv
rcr
inc
(bad)
inc
leave
fdiv
int
jae
rcr
jae
aad
jae
(bad)
jae
fstp
jae
and
jae
and
fnsave
sub
fnsave
xor
fnsave
cmp
fnsave
add
fnsave
or
fnsave
adc
fnsave
sbb
fnsave
fnsave
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
fnsave
inc
fnsave
dec
fnsave
dec
fnsave
push
fnsave
push
fnsave
pop
fnsave
pop
fnsave
mov
fnsave
test
fnsave
mov
jae
mov
jae
mov
fnsave
sbb
jae
mov
jae
(bad)
fnsave
xchg
fnsave
xchg
fnsave
cdq
fnsave
popf
fnsave
loope
jae
in
jae
jmp
fnsave
icebp
fnsave
cmc
fnsave
stc
fnsave
std
fnsave
rcr
inc
(bad)
inc
leave
fnsave
int
jae
rcr
jae
aad
jae
(bad)
jae
fstp
jae
and
jae
and
shl
sub
shl
xor
shl
cmp
shl
add
shl
or
shl
adc
shl
sbb
shl
shl
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
shl
inc
shl
dec
shl
dec
shl
push
shl
push
shl
pop
shl
pop
shl
mov
shl
test
shl
mov
jae
mov
jae
mov
shl
adc
jae
mov
jae
(bad)
shl
xchg
shl
xchg
shl
cdq
shl
popf
shl
loope
jae
in
jae
jmp
shl
icebp
shl
cmc
shl
stc
shl
std
shl
rcl
inc
(bad)
inc
leave
shl
int
jae
rcl
jae
aad
jae
(bad)
jae
fst
jae
and
jae
and
shl
sub
shl
xor
shl
cmp
shl
add
shl
or
shl
adc
shl
sbb
shl
shl
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
shl
inc
shl
dec
shl
dec
shl
push
shl
push
shl
pop
shl
pop
shl
mov
shl
test
shl
mov
jae
mov
jae
mov
shl
adc
jae
mov
jae
(bad)
shl
xchg
shl
xchg
shl
cdq
shl
popf
shl
loope
jae
in
jae
jmp
shl
icebp
shl
cmc
shl
stc
shl
std
shl
rcl
inc
(bad)
inc
leave
shl
int
jae
rcl
jae
aad
jae
(bad)
jae
fst
jae
and
jae
and
shl
sub
shl
xor
shl
cmp
shl
add
shl
or
shl
adc
shl
sbb
shl
shl
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
shl
inc
shl
dec
shl
dec
shl
push
shl
push
shl
pop
shl
pop
shl
mov
shl
test
shl
mov
jae
mov
jae
mov
shl
adc
jae
mov
jae
(bad)
shl
xchg
shl
xchg
shl
cdq
shl
popf
shl
loope
jae
in
jae
jmp
shl
icebp
shl
cmc
shl
stc
shl
std
shl
rcl
inc
(bad)
inc
leave
shl
int
jae
rcl
jae
aad
jae
fnop
jae
fst
jae
and
jae
and
shl
sub
shl
xor
shl
cmp
shl
add
shl
or
shl
adc
shl
sbb
shl
shl
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
shl
inc
shl
dec
shl
dec
shl
push
shl
push
shl
pop
shl
pop
shl
mov
shl
test
shl
mov
jae
mov
jae
mov
shl
adc
jae
mov
jae
(bad)
shl
xchg
shl
xchg
shl
cdq
shl
popf
shl
loope
jae
in
jae
jmp
shl
icebp
shl
cmc
shl
stc
shl
std
shl
rcl
inc
(bad)
inc
leave
shl
int
jae
rcl
jae
aad
jae
(bad)
jae
fst
jae
and
jae
and
(bad)
jae
sub
(bad)
jae
xor
(bad)
jae
cmp
(bad)
jae
add
(bad)
jae
or
(bad)
jae
adc
(bad)
jae
sbb
(bad)
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
(bad)
jae
inc
(bad)
jae
dec
(bad)
jae
dec
(bad)
jae
push
(bad)
jae
push
(bad)
jae
pop
(bad)
jae
pop
(bad)
jae
mov
(bad)
jae
test
(bad)
jae
mov
jae
mov
jae
mov
(bad)
jae
adc
jae
mov
jae
(bad)
(bad)
jae
xchg
(bad)
jae
xchg
(bad)
jae
cdq
(bad)
jae
popf
(bad)
jae
loope
jae
in
jae
jmp
(bad)
jae
icebp
(bad)
jae
cmc
(bad)
jae
stc
(bad)
jae
std
(bad)
jae
rcl
inc
(bad)
inc
leave
(bad)
jae
int
jae
rcl
jae
aad
jae
(bad)
jae
fst
jae
and
jae
and
xlat
jae
sub
xlat
jae
xor
xlat
jae
cmp
xlat
jae
add
xlat
jae
or
xlat
jae
adc
xlat
jae
sbb
xlat
jae
xlat
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
xlat
jae
inc
xlat
jae
dec
xlat
jae
dec
xlat
jae
push
xlat
jae
push
xlat
jae
pop
xlat
jae
pop
xlat
jae
mov
xlat
jae
test
xlat
jae
mov
jae
mov
jae
mov
xlat
jae
adc
jae
mov
jae
(bad)
xlat
jae
xchg
xlat
jae
xchg
xlat
jae
cdq
xlat
jae
popf
xlat
jae
loope
jae
in
jae
jmp
xlat
jae
icebp
xlat
jae
cmc
xlat
jae
stc
xlat
jae
std
xlat
jae
rcl
inc
(bad)
inc
leave
xlat
jae
int
jae
rcl
jae
aad
jae
(bad)
jae
fst
jae
and
jae
and
aam
inc
sub
aam
inc
xor
aam
inc
cmp
aam
inc
add
aam
inc
or
aam
inc
adc
aam
inc
sbb
aam
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
aam
inc
inc
aam
inc
dec
aam
inc
dec
aam
inc
push
aam
inc
push
aam
inc
pop
aam
inc
pop
aam
inc
mov
aam
inc
test
aam
inc
mov
jae
mov
jae
mov
aam
inc
adc
jae
mov
jae
(bad)
aam
inc
xchg
aam
inc
xchg
aam
inc
cdq
aam
inc
popf
aam
inc
loope
jae
in
jae
jmp
aam
inc
icebp
aam
inc
cmc
aam
inc
stc
aam
inc
std
aam
inc
rcl
inc
(bad)
inc
leave
aam
inc
int
jae
rcl
jae
aad
jae
(bad)
jae
fst
jae
and
jae
and
aad
inc
sub
aad
inc
xor
aad
inc
cmp
aad
inc
add
aad
inc
or
aad
inc
adc
aad
inc
sbb
aad
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
aad
inc
inc
aad
inc
dec
aad
inc
dec
aad
inc
push
aad
inc
push
aad
inc
pop
aad
inc
pop
aad
inc
mov
aad
inc
test
aad
inc
mov
jae
mov
jae
mov
aad
inc
adc
jae
mov
jae
(bad)
aad
inc
xchg
aad
inc
xchg
aad
inc
cdq
aad
inc
popf
aad
inc
loope
jae
in
jae
jmp
aad
inc
icebp
aad
inc
cmc
aad
inc
stc
aad
inc
std
aad
inc
rcl
inc
(bad)
inc
leave
aad
inc
int
jae
rcl
jae
aad
jae
(bad)
jae
fst
jae
and
jae
and
retf
sub
retf
xor
retf
cmp
retf
add
retf
or
retf
adc
retf
sbb
retf
gs
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
retf
inc
retf
dec
retf
dec
retf
push
retf
push
retf
pop
retf
pop
retf
mov
retf
test
retf
mov
jae
mov
jae
mov
retf
or
jae
mov
jae
(bad)
retf
xchg
retf
xchg
retf
cdq
retf
popf
retf
loope
jae
in
jae
jmp
retf
icebp
retf
cmc
retf
stc
retf
std
retf
ror
inc
(bad)
inc
leave
retf
int
jae
ror
jae
aad
jae
fxch
jae
(bad)
jae
and
jae
and
retf
jae
sub
retf
jae
xor
retf
jae
cmp
retf
jae
add
retf
jae
or
retf
jae
adc
retf
jae
sbb
retf
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
retf
jae
inc
retf
jae
dec
retf
jae
dec
retf
jae
push
retf
jae
push
retf
jae
pop
retf
jae
pop
retf
jae
mov
retf
jae
test
retf
jae
mov
jae
mov
jae
mov
retf
jae
or
jae
mov
jae
(bad)
retf
jae
xchg
retf
jae
xchg
retf
jae
cdq
retf
jae
popf
retf
jae
loope
jae
in
jae
jmp
retf
jae
icebp
retf
jae
cmc
retf
jae
stc
retf
jae
std
retf
jae
ror
inc
(bad)
inc
leave
retf
jae
int
jae
ror
jae
aad
jae
fxch
jae
(bad)
jae
and
jae
and
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
jae
and
leave
jae
sub
leave
jae
xor
leave
jae
cmp
leave
jae
add
leave
jae
or
leave
jae
adc
leave
jae
sbb
leave
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
leave
jae
inc
leave
jae
dec
leave
jae
dec
leave
jae
push
leave
jae
push
leave
jae
pop
leave
jae
pop
leave
jae
mov
leave
jae
test
leave
jae
mov
jae
mov
jae
mov
leave
jae
or
jae
mov
jae
(bad)
leave
jae
xchg
leave
jae
xchg
leave
jae
cdq
leave
jae
popf
leave
jae
loope
jae
in
jae
jmp
leave
jae
icebp
leave
jae
cmc
leave
jae
stc
leave
jae
std
leave
jae
ror
inc
(bad)
inc
leave
leave
jae
int
jae
ror
jae
aad
jae
fxch
jae
(bad)
jae
and
jae
and
into
jae
sub
into
jae
xor
into
jae
cmp
into
jae
add
into
jae
or
into
jae
adc
into
jae
sbb
into
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
into
jae
inc
into
jae
dec
into
jae
dec
into
jae
push
into
jae
push
into
jae
pop
into
jae
pop
into
jae
mov
into
jae
test
into
jae
mov
jae
mov
jae
mov
into
jae
or
jae
mov
jae
(bad)
into
jae
xchg
into
jae
xchg
into
jae
cdq
into
jae
popf
into
jae
loope
jae
in
jae
jmp
into
jae
icebp
into
jae
cmc
into
jae
stc
into
jae
std
into
jae
ror
inc
(bad)
inc
leave
into
jae
int
jae
ror
jae
aad
jae
fxch
jae
(bad)
jae
and
jae
and
iret
jae
sub
iret
jae
xor
iret
jae
cmp
iret
jae
add
iret
jae
or
iret
jae
adc
iret
jae
sbb
iret
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
iret
jae
inc
iret
jae
dec
iret
jae
dec
iret
jae
push
iret
jae
push
iret
jae
pop
iret
jae
pop
iret
jae
mov
iret
jae
test
iret
jae
mov
jae
mov
jae
mov
iret
jae
or
jae
mov
jae
(bad)
iret
jae
xchg
iret
jae
xchg
iret
jae
cdq
iret
jae
popf
iret
jae
loope
jae
in
jae
jmp
iret
jae
icebp
iret
jae
cmc
iret
jae
stc
iret
jae
std
iret
jae
ror
inc
(bad)
inc
leave
iret
jae
int
jae
ror
jae
aad
jae
fxch
jae
(bad)
jae
and
jae
and
int3
jae
sub
int3
jae
xor
int3
jae
cmp
int3
jae
add
int3
jae
or
int3
jae
adc
int3
jae
sbb
int3
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
int3
jae
inc
int3
jae
dec
int3
jae
dec
int3
jae
push
int3
jae
push
int3
jae
pop
int3
jae
pop
int3
jae
mov
int3
jae
test
int3
jae
mov
jae
mov
jae
mov
int3
jae
or
jae
mov
jae
(bad)
int3
jae
xchg
int3
jae
xchg
int3
jae
cdq
int3
jae
popf
int3
jae
loope
jae
in
jae
jmp
int3
jae
icebp
int3
jae
cmc
int3
jae
stc
int3
jae
std
int3
jae
ror
inc
(bad)
inc
leave
int3
jae
int
jae
ror
jae
aad
jae
fxch
jae
(bad)
jae
and
jae
and
int
inc
sub
int
inc
xor
int
inc
cmp
int
inc
add
int
inc
or
int
inc
adc
int
inc
sbb
int
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
int
inc
inc
int
inc
dec
int
inc
dec
int
inc
push
int
inc
push
int
inc
pop
int
inc
pop
int
inc
mov
int
inc
test
int
inc
mov
jae
mov
jae
mov
int
inc
or
jae
mov
jae
(bad)
int
inc
xchg
int
inc
xchg
int
inc
cdq
int
inc
popf
int
inc
loope
jae
in
jae
jmp
int
inc
icebp
int
inc
cmc
int
inc
stc
int
inc
std
int
inc
ror
inc
(bad)
inc
leave
int
inc
int
jae
ror
jae
aad
jae
fxch
jae
(bad)
jae
and
jae
and
ret
sub
ret
xor
ret
cmp
ret
add
ret
or
ret
adc
ret
sbb
ret
gs
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
ret
inc
ret
dec
ret
dec
ret
push
ret
push
ret
pop
ret
pop
ret
mov
ret
test
ret
mov
jae
mov
jae
mov
ret
add
jae
mov
jae
(bad)
ret
xchg
ret
xchg
ret
cdq
ret
popf
ret
loope
jae
in
jae
jmp
ret
icebp
ret
cmc
ret
stc
ret
std
ret
rol
inc
(bad)
inc
leave
ret
int
jae
rol
jae
aad
jae
fld
jae
ffree
jae
and
jae
and
ret
jae
sub
ret
jae
xor
ret
jae
cmp
ret
jae
add
ret
jae
or
ret
jae
adc
ret
jae
sbb
ret
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
ret
jae
inc
ret
jae
dec
ret
jae
dec
ret
jae
push
ret
jae
push
ret
jae
pop
ret
jae
pop
ret
jae
mov
ret
jae
test
ret
jae
mov
jae
mov
jae
mov
ret
jae
add
jae
mov
jae
(bad)
ret
jae
xchg
ret
jae
xchg
ret
jae
cdq
ret
jae
popf
ret
jae
loope
jae
in
jae
jmp
ret
jae
icebp
ret
jae
cmc
ret
jae
stc
ret
jae
std
ret
jae
rol
inc
(bad)
inc
leave
ret
jae
int
jae
rol
jae
aad
jae
fld
jae
ffree
jae
and
jae
and
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
(bad)
jae
and
(bad)
jae
sub
(bad)
jae
xor
(bad)
jae
cmp
(bad)
jae
add
(bad)
jae
or
(bad)
jae
adc
(bad)
jae
sbb
(bad)
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
(bad)
jae
inc
(bad)
jae
dec
(bad)
jae
dec
(bad)
jae
push
(bad)
jae
push
(bad)
jae
pop
(bad)
jae
pop
(bad)
jae
mov
(bad)
jae
test
(bad)
jae
mov
jae
mov
jae
mov
(bad)
jae
add
jae
mov
jae
(bad)
(bad)
jae
xchg
(bad)
jae
xchg
(bad)
jae
cdq
(bad)
jae
popf
(bad)
jae
loope
jae
in
jae
jmp
(bad)
jae
icebp
(bad)
jae
cmc
(bad)
jae
stc
(bad)
jae
std
(bad)
jae
rol
inc
(bad)
inc
leave
(bad)
jae
int
jae
rol
jae
aad
jae
fld
jae
ffree
jae
and
jae
and
(bad)
jae
sub
(bad)
jae
xor
(bad)
jae
cmp
(bad)
jae
add
(bad)
jae
or
(bad)
jae
adc
(bad)
jae
sbb
(bad)
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
(bad)
jae
inc
(bad)
jae
dec
(bad)
jae
dec
(bad)
jae
push
(bad)
jae
push
(bad)
jae
pop
(bad)
jae
pop
(bad)
jae
mov
(bad)
jae
test
(bad)
jae
mov
jae
mov
jae
mov
(bad)
jae
add
jae
mov
jae
(bad)
(bad)
jae
xchg
(bad)
jae
xchg
(bad)
jae
cdq
(bad)
jae
popf
(bad)
jae
loope
jae
in
jae
jmp
(bad)
jae
icebp
(bad)
jae
cmc
(bad)
jae
stc
(bad)
jae
std
(bad)
jae
rol
inc
(bad)
inc
leave
(bad)
jae
int
jae
rol
jae
aad
jae
fld
jae
ffree
jae
and
jae
and
les
sub
les
xor
les
cmp
les
add
les
or
les
adc
les
sbb
les
les
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
les
inc
les
dec
les
dec
les
push
les
push
les
pop
les
pop
les
mov
les
test
les
mov
jae
mov
jae
mov
les
add
jae
mov
jae
(bad)
les
xchg
les
xchg
les
cdq
les
popf
les
loope
jae
in
jae
jmp
les
icebp
les
cmc
les
stc
les
std
les
rol
inc
(bad)
inc
leave
les
int
jae
rol
jae
aad
jae
fld
jae
ffree
jae
and
jae
and
lds
sub
lds
xor
lds
cmp
lds
add
lds
or
lds
adc
lds
sbb
lds
lds
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
lds
inc
lds
dec
lds
dec
lds
push
lds
push
lds
pop
lds
pop
lds
mov
lds
test
lds
mov
jae
mov
jae
mov
lds
add
jae
mov
jae
(bad)
lds
xchg
lds
xchg
lds
cdq
lds
popf
lds
loope
jae
in
jae
jmp
lds
icebp
lds
cmc
lds
stc
lds
std
lds
rol
inc
(bad)
inc
leave
lds
int
jae
rol
jae
aad
jae
fld
jae
ffree
jae
and
jae
and
cmp
sub
cmp
xor
cmp
cmp
cmp
add
cmp
or
cmp
adc
cmp
sbb
cmp
cmp
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
cmp
inc
cmp
dec
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pop
cmp
mov
cmp
test
cmp
mov
jae
mov
jae
mov
cmp
cmp
jae
mov
jae
lea
jae
xchg
cmp
xchg
cmp
cdq
cmp
popf
cmp
loope
jae
in
jae
jmp
cmp
icebp
cmp
cmc
cmp
stc
cmp
std
cmp
sar
inc
lds
jae
leave
cmp
int
jae
sar
jae
aad
jae
fnstcw
jae
fnstsw
jae
and
jae
and
cmp
sub
cmp
xor
cmp
cmp
cmp
add
cmp
or
cmp
adc
cmp
sbb
cmp
cmp
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
cmp
inc
cmp
dec
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pop
cmp
mov
cmp
test
cmp
mov
jae
mov
jae
mov
cmp
cmp
jae
mov
jae
lea
jae
xchg
cmp
xchg
cmp
cdq
cmp
popf
cmp
loope
jae
in
jae
jmp
cmp
icebp
cmp
cmc
cmp
stc
cmp
std
cmp
sar
inc
lds
jae
leave
cmp
int
jae
sar
jae
aad
jae
fnstcw
jae
fnstsw
jae
and
jae
and
cmp
sub
cmp
xor
cmp
cmp
cmp
add
cmp
or
cmp
adc
cmp
sbb
cmp
cmp
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
cmp
inc
cmp
dec
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pop
cmp
mov
cmp
test
cmp
mov
jae
mov
jae
mov
cmp
cmp
jae
mov
jae
lea
jae
xchg
cmp
xchg
cmp
cdq
cmp
popf
cmp
loope
jae
in
jae
jmp
cmp
icebp
cmp
cmc
cmp
stc
cmp
std
cmp
sar
inc
lds
jae
leave
cmp
int
jae
sar
jae
aad
jae
fnstcw
jae
fnstsw
jae
and
jae
and
cmp
sub
cmp
xor
cmp
cmp
cmp
add
cmp
or
cmp
adc
cmp
sbb
cmp
cmp
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
cmp
inc
cmp
dec
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pop
cmp
mov
cmp
test
cmp
mov
jae
mov
jae
mov
cmp
cmp
jae
mov
jae
lea
jae
xchg
cmp
xchg
cmp
cdq
cmp
popf
cmp
loope
jae
in
jae
jmp
cmp
icebp
cmp
cmc
cmp
stc
cmp
std
cmp
sar
inc
lds
jae
leave
cmp
int
jae
sar
jae
aad
jae
fnstcw
jae
fnstsw
jae
and
jae
and
ds
sub
ds
xor
ds
cmp
ds
add
ds
or
ds
adc
ds
sbb
ds
gs
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
ds
inc
ds
dec
ds
dec
ds
push
ds
push
ds
pop
ds
pop
ds
mov
ds
test
ds
mov
jae
mov
jae
mov
ds
cmp
jae
mov
jae
lea
jae
xchg
ds
xchg
ds
cdq
ds
popf
ds
loope
jae
in
jae
jmp
ds
icebp
ds
cmc
ds
stc
ds
std
ds
sar
inc
lds
jae
leave
ds
int
jae
sar
jae
aad
jae
fnstcw
jae
fnstsw
jae
and
jae
and
aas
jae
sub
aas
jae
xor
aas
jae
cmp
aas
jae
add
aas
jae
or
aas
jae
adc
aas
jae
sbb
aas
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
aas
jae
inc
aas
jae
dec
aas
jae
dec
aas
jae
push
aas
jae
push
aas
jae
pop
aas
jae
pop
aas
jae
mov
aas
jae
test
aas
jae
mov
jae
mov
jae
mov
aas
jae
cmp
jae
mov
jae
lea
jae
xchg
aas
jae
xchg
aas
jae
cdq
aas
jae
popf
aas
jae
loope
jae
in
jae
jmp
aas
jae
icebp
aas
jae
cmc
aas
jae
stc
aas
jae
std
aas
jae
sar
inc
lds
jae
leave
aas
jae
int
jae
sar
jae
aad
jae
fnstcw
jae
fnstsw
jae
and
inc
and
cmp
inc
sub
cmp
inc
xor
cmp
inc
cmp
cmp
inc
add
cmp
inc
or
cmp
inc
adc
cmp
inc
sbb
cmp
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
cmp
inc
inc
cmp
inc
dec
cmp
inc
dec
cmp
inc
push
cmp
inc
push
cmp
inc
pop
cmp
inc
pop
cmp
inc
mov
cmp
inc
test
cmp
inc
mov
jae
mov
jae
mov
cmp
inc
cmp
inc
mov
inc
lea
inc
xchg
cmp
inc
xchg
cmp
inc
cdq
cmp
inc
popf
cmp
inc
loope
jae
in
jae
jmp
cmp
inc
icebp
cmp
inc
cmc
cmp
inc
stc
cmp
inc
std
cmp
inc
sar
lds
inc
leave
cmp
inc
int
jae
sar
inc
aad
jae
fnstcw
inc
fnstsw
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
cmp
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
cmp
jae
dec
cmp
jae
push
cmp
jae
pop
cmp
jae
mov
cmp
jae
lods
cmp
jae
mov
jae
mov
cmp
jae
test
jae
lea
jae
xchg
cmp
jae
popf
cmp
jae
in
jae
jmp
cmp
jae
cmc
cmp
jae
std
cmp
jae
lds
jae
int
jae
sar
jae
fnstcw
jae
and
jae
and
xor
sub
xor
xor
xor
cmp
xor
add
xor
or
xor
adc
xor
sbb
xor
xor
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
xor
inc
xor
dec
xor
dec
xor
push
xor
push
xor
pop
xor
pop
xor
mov
xor
test
xor
mov
jae
mov
jae
mov
xor
xor
jae
mov
jae
lea
jae
xchg
xor
xchg
xor
cdq
xor
popf
xor
loope
jae
in
jae
jmp
xor
icebp
xor
cmc
xor
stc
xor
std
xor
shl
inc
lds
jae
leave
xor
int
jae
shl
jae
aad
jae
fnstenv
jae
fnsave
jae
and
jae
and
xor
sub
xor
xor
xor
cmp
xor
add
xor
or
xor
adc
xor
sbb
xor
xor
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
xor
inc
xor
dec
xor
dec
xor
push
xor
push
xor
pop
xor
pop
xor
mov
xor
test
xor
mov
jae
mov
jae
mov
xor
xor
jae
mov
jae
lea
jae
xchg
xor
xchg
xor
cdq
xor
popf
xor
loope
jae
in
jae
jmp
xor
icebp
xor
cmc
xor
stc
xor
std
xor
shl
inc
lds
jae
leave
xor
int
jae
shl
jae
aad
jae
fnstenv
jae
fnsave
jae
and
jae
and
xor
sub
xor
xor
xor
cmp
xor
add
xor
or
xor
adc
xor
sbb
xor
xor
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
xor
inc
xor
dec
xor
dec
xor
push
xor
push
xor
pop
xor
pop
xor
mov
xor
test
xor
mov
jae
mov
jae
mov
xor
xor
jae
mov
jae
lea
jae
xchg
xor
xchg
xor
cdq
xor
popf
xor
loope
jae
in
jae
jmp
xor
icebp
xor
cmc
xor
stc
xor
std
xor
shl
inc
lds
jae
leave
xor
int
jae
shl
jae
aad
jae
fnstenv
jae
fnsave
jae
and
jae
and
xor
sub
xor
xor
xor
cmp
xor
add
xor
or
xor
adc
xor
sbb
xor
xor
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
xor
inc
xor
dec
xor
dec
xor
push
xor
push
xor
pop
xor
pop
xor
mov
xor
test
xor
mov
jae
mov
jae
mov
xor
xor
jae
mov
jae
lea
jae
xchg
xor
xchg
xor
cdq
xor
popf
xor
loope
jae
in
jae
jmp
xor
icebp
xor
cmc
xor
stc
xor
std
xor
shl
inc
lds
jae
leave
xor
int
jae
shl
jae
aad
jae
fnstenv
jae
fnsave
jae
and
jae
and
ss
sub
ss
xor
ss
cmp
ss
add
ss
or
ss
adc
ss
sbb
ss
gs
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
ss
inc
ss
dec
ss
dec
ss
push
ss
push
ss
pop
ss
pop
ss
mov
ss
test
ss
mov
jae
mov
jae
mov
ss
xor
jae
mov
jae
lea
jae
xchg
ss
xchg
ss
cdq
ss
popf
ss
loope
jae
in
jae
jmp
ss
icebp
ss
cmc
ss
stc
ss
std
ss
shl
inc
lds
jae
leave
ss
int
jae
shl
jae
aad
jae
fnstenv
jae
fnsave
jae
and
jae
and
aaa
jae
sub
aaa
jae
xor
aaa
jae
cmp
aaa
jae
add
aaa
jae
or
aaa
jae
adc
aaa
jae
sbb
aaa
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
aaa
jae
inc
aaa
jae
dec
aaa
jae
dec
aaa
jae
push
aaa
jae
push
aaa
jae
pop
aaa
jae
pop
aaa
jae
mov
aaa
jae
test
aaa
jae
mov
jae
mov
jae
mov
aaa
jae
xor
jae
mov
jae
lea
jae
xchg
aaa
jae
xchg
aaa
jae
cdq
aaa
jae
popf
aaa
jae
loope
jae
in
jae
jmp
aaa
jae
icebp
aaa
jae
cmc
aaa
jae
stc
aaa
jae
std
aaa
jae
shl
inc
lds
jae
leave
aaa
jae
int
jae
shl
jae
aad
jae
fnstenv
jae
fnsave
jae
and
inc
and
xor
inc
sub
xor
inc
xor
xor
inc
cmp
xor
inc
add
xor
inc
or
xor
inc
adc
xor
inc
sbb
xor
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
xor
inc
inc
xor
inc
dec
xor
inc
dec
xor
inc
push
xor
inc
push
xor
inc
pop
xor
inc
pop
xor
inc
mov
xor
inc
test
xor
inc
mov
jae
mov
jae
mov
xor
inc
xor
inc
mov
inc
lea
inc
xchg
xor
inc
xchg
xor
inc
cdq
xor
inc
popf
xor
inc
loope
jae
in
jae
jmp
xor
inc
icebp
xor
inc
cmc
xor
inc
stc
xor
inc
std
xor
inc
shl
lds
inc
leave
xor
inc
int
jae
shl
inc
aad
jae
fnstenv
inc
fnsave
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
xor
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
xor
jae
dec
xor
jae
push
xor
jae
pop
xor
jae
mov
xor
jae
lods
xor
jae
mov
jae
mov
xor
jae
test
jae
lea
jae
xchg
xor
jae
popf
xor
jae
in
jae
jmp
xor
jae
cmc
xor
jae
std
xor
jae
lds
jae
int
jae
shl
jae
fnstenv
jae
and
jae
and
sub
sub
sub
xor
sub
cmp
sub
add
sub
or
sub
adc
sub
sbb
sub
sub
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
sub
inc
sub
dec
sub
dec
sub
push
sub
push
sub
pop
sub
pop
sub
mov
sub
test
sub
mov
jae
mov
jae
mov
sub
sub
jae
mov
jae
lea
jae
xchg
sub
xchg
sub
cdq
sub
popf
sub
loope
jae
in
jae
jmp
sub
icebp
sub
cmc
sub
stc
sub
std
sub
shr
inc
lds
jae
leave
sub
int
jae
shr
jae
aad
jae
fldcw
jae
(bad)
jae
and
jae
and
sub
sub
sub
xor
sub
cmp
sub
add
sub
or
sub
adc
sub
sbb
sub
sub
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
sub
inc
sub
dec
sub
dec
sub
push
sub
push
sub
pop
sub
pop
sub
mov
sub
test
sub
mov
jae
mov
jae
mov
sub
sub
jae
mov
jae
lea
jae
xchg
sub
xchg
sub
cdq
sub
popf
sub
loope
jae
in
jae
jmp
sub
icebp
sub
cmc
sub
stc
sub
std
sub
shr
inc
lds
jae
leave
sub
int
jae
shr
jae
aad
jae
fldcw
jae
(bad)
jae
and
jae
and
sub
sub
sub
xor
sub
cmp
sub
add
sub
or
sub
adc
sub
sbb
sub
sub
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
sub
inc
sub
dec
sub
dec
sub
push
sub
push
sub
pop
sub
pop
sub
mov
sub
test
sub
mov
jae
mov
jae
mov
sub
sub
jae
mov
jae
lea
jae
xchg
sub
xchg
sub
cdq
sub
popf
sub
loope
jae
in
jae
jmp
sub
icebp
sub
cmc
sub
stc
sub
std
sub
shr
inc
lds
jae
leave
sub
int
jae
shr
jae
aad
jae
fldcw
jae
(bad)
jae
and
jae
and
sub
sub
sub
xor
sub
cmp
sub
add
sub
or
sub
adc
sub
sbb
sub
sub
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
sub
inc
sub
dec
sub
dec
sub
push
sub
push
sub
pop
sub
pop
sub
mov
sub
test
sub
mov
jae
mov
jae
mov
sub
sub
jae
mov
jae
lea
jae
xchg
sub
xchg
sub
cdq
sub
popf
sub
loope
jae
in
jae
jmp
sub
icebp
sub
cmc
sub
stc
sub
std
sub
shr
inc
lds
jae
leave
sub
int
jae
shr
jae
aad
jae
fldcw
jae
(bad)
jae
and
jae
and
cs
sub
cs
xor
cs
cmp
cs
add
cs
or
cs
adc
cs
sbb
cs
gs
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
cs
inc
cs
dec
cs
dec
cs
push
cs
push
cs
pop
cs
pop
cs
mov
cs
test
cs
mov
jae
mov
jae
mov
cs
sub
jae
mov
jae
lea
jae
xchg
cs
xchg
cs
cdq
cs
popf
cs
loope
jae
in
jae
jmp
cs
icebp
cs
cmc
cs
stc
cs
std
cs
shr
inc
lds
jae
leave
cs
int
jae
shr
jae
aad
jae
fldcw
jae
(bad)
jae
and
jae
and
das
jae
sub
das
jae
xor
das
jae
cmp
das
jae
add
das
jae
or
das
jae
adc
das
jae
sbb
das
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
das
jae
inc
das
jae
dec
das
jae
dec
das
jae
push
das
jae
push
das
jae
pop
das
jae
pop
das
jae
mov
das
jae
test
das
jae
mov
jae
mov
jae
mov
das
jae
sub
jae
mov
jae
lea
jae
xchg
das
jae
xchg
das
jae
cdq
das
jae
popf
das
jae
loope
jae
in
jae
jmp
das
jae
icebp
das
jae
cmc
das
jae
stc
das
jae
std
das
jae
shr
inc
lds
jae
leave
das
jae
int
jae
shr
jae
aad
jae
fldcw
jae
(bad)
jae
and
inc
and
sub
inc
sub
sub
inc
xor
sub
inc
cmp
sub
inc
add
sub
inc
or
sub
inc
adc
sub
inc
sbb
sub
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
sub
inc
inc
sub
inc
dec
sub
inc
dec
sub
inc
push
sub
inc
push
sub
inc
pop
sub
inc
pop
sub
inc
mov
sub
inc
test
sub
inc
mov
jae
mov
jae
mov
sub
inc
sub
inc
mov
inc
lea
inc
xchg
sub
inc
xchg
sub
inc
cdq
sub
inc
popf
sub
inc
loope
jae
in
jae
jmp
sub
inc
icebp
sub
inc
cmc
sub
inc
stc
sub
inc
std
sub
inc
shr
lds
inc
leave
sub
inc
int
jae
shr
inc
aad
jae
fldcw
inc
(bad)
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
sub
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
sub
jae
dec
sub
jae
push
sub
jae
pop
sub
jae
mov
sub
jae
lods
sub
jae
mov
jae
mov
sub
jae
test
jae
lea
jae
xchg
sub
jae
popf
sub
jae
in
jae
jmp
sub
jae
cmc
sub
jae
std
sub
jae
lds
jae
int
jae
shr
jae
fldcw
jae
and
jae
and
and
sub
and
xor
and
cmp
and
add
and
or
and
adc
and
sbb
and
and
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
and
inc
and
dec
and
dec
and
push
and
push
and
pop
and
pop
and
mov
and
test
and
mov
jae
mov
jae
mov
and
and
jae
mov
jae
lea
jae
xchg
and
xchg
and
cdq
and
popf
and
loope
jae
in
jae
jmp
and
icebp
and
cmc
and
stc
and
std
and
shl
inc
lds
jae
leave
and
int
jae
shl
jae
aad
jae
fldenv
jae
frstor
jae
and
jae
and
and
sub
and
xor
and
cmp
and
add
and
or
and
adc
and
sbb
and
and
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
and
inc
and
dec
and
dec
and
push
and
push
and
pop
and
pop
and
mov
and
test
and
mov
jae
mov
jae
mov
and
and
jae
mov
jae
lea
jae
xchg
and
xchg
and
cdq
and
popf
and
loope
jae
in
jae
jmp
and
icebp
and
cmc
and
stc
and
std
and
shl
inc
lds
jae
leave
and
int
jae
shl
jae
aad
jae
fldenv
jae
frstor
jae
and
jae
and
and
sub
and
xor
and
cmp
and
add
and
or
and
adc
and
sbb
and
and
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
and
inc
and
dec
and
dec
and
push
and
push
and
pop
and
pop
and
mov
and
test
and
mov
jae
mov
jae
mov
and
and
jae
mov
jae
lea
jae
xchg
and
xchg
and
cdq
and
popf
and
loope
jae
in
jae
jmp
and
icebp
and
cmc
and
stc
and
std
and
shl
inc
lds
jae
leave
and
int
jae
shl
jae
aad
jae
fldenv
jae
frstor
jae
and
jae
and
and
sub
and
xor
and
cmp
and
add
and
or
and
adc
and
sbb
and
and
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
and
inc
and
dec
and
dec
and
push
and
push
and
pop
and
pop
and
mov
and
test
and
mov
jae
mov
jae
mov
and
and
jae
mov
jae
lea
jae
xchg
and
xchg
and
cdq
and
popf
and
loope
jae
in
jae
jmp
and
icebp
and
cmc
and
stc
and
std
and
shl
inc
lds
jae
leave
and
int
jae
shl
jae
aad
jae
fldenv
jae
frstor
jae
and
jae
and
es
sub
es
xor
es
cmp
es
add
es
or
es
adc
es
sbb
es
gs
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
es
inc
es
dec
es
dec
es
push
es
push
es
pop
es
pop
es
mov
es
test
es
mov
jae
mov
jae
mov
es
and
jae
mov
jae
lea
jae
xchg
es
xchg
es
cdq
es
popf
es
loope
jae
in
jae
jmp
es
icebp
es
cmc
es
stc
es
std
es
shl
inc
lds
jae
leave
es
int
jae
shl
jae
aad
jae
fldenv
jae
frstor
jae
and
jae
and
daa
jae
sub
daa
jae
xor
daa
jae
cmp
daa
jae
add
daa
jae
or
daa
jae
adc
daa
jae
sbb
daa
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
daa
jae
inc
daa
jae
dec
daa
jae
dec
daa
jae
push
daa
jae
push
daa
jae
pop
daa
jae
pop
daa
jae
mov
daa
jae
test
daa
jae
mov
jae
mov
jae
mov
daa
jae
and
jae
mov
jae
lea
jae
xchg
daa
jae
xchg
daa
jae
cdq
daa
jae
popf
daa
jae
loope
jae
in
jae
jmp
daa
jae
icebp
daa
jae
cmc
daa
jae
stc
daa
jae
std
daa
jae
shl
inc
lds
jae
leave
daa
jae
int
jae
shl
jae
aad
jae
fldenv
jae
frstor
jae
and
inc
and
and
inc
sub
and
inc
xor
and
inc
cmp
and
inc
add
and
inc
or
and
inc
adc
and
inc
sbb
and
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
and
inc
inc
and
inc
dec
and
inc
dec
and
inc
push
and
inc
push
and
inc
pop
and
inc
pop
and
inc
mov
and
inc
test
and
inc
mov
jae
mov
jae
mov
and
inc
and
inc
mov
inc
lea
inc
xchg
and
inc
xchg
and
inc
cdq
and
inc
popf
and
inc
loope
jae
in
jae
jmp
and
inc
icebp
and
inc
cmc
and
inc
stc
and
inc
std
and
inc
shl
lds
inc
leave
and
inc
int
jae
shl
inc
aad
jae
fldenv
inc
frstor
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
and
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
and
jae
dec
and
jae
push
and
jae
pop
and
jae
mov
and
jae
lods
and
jae
mov
jae
mov
and
jae
test
jae
lea
jae
xchg
and
jae
popf
and
jae
in
jae
jmp
and
jae
cmc
and
jae
std
and
jae
lds
jae
int
jae
shl
jae
fldenv
jae
and
jae
and
sbb
sub
sbb
xor
sbb
cmp
sbb
add
sbb
or
sbb
adc
sbb
sbb
sbb
sbb
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
sbb
inc
sbb
dec
sbb
dec
sbb
push
sbb
push
sbb
pop
sbb
pop
sbb
mov
sbb
test
sbb
mov
jae
mov
jae
mov
sbb
sbb
jae
mov
jae
lea
jae
xchg
sbb
xchg
sbb
cdq
sbb
popf
sbb
loope
jae
in
jae
jmp
sbb
icebp
sbb
cmc
sbb
stc
sbb
std
sbb
rcr
inc
lds
jae
leave
sbb
int
jae
rcr
jae
aad
jae
fstp
jae
fstp
jae
and
jae
and
sbb
sub
sbb
xor
sbb
cmp
sbb
add
sbb
or
sbb
adc
sbb
sbb
sbb
sbb
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
sbb
inc
sbb
dec
sbb
dec
sbb
push
sbb
push
sbb
pop
sbb
pop
sbb
mov
sbb
test
sbb
mov
jae
mov
jae
mov
sbb
sbb
jae
mov
jae
lea
jae
xchg
sbb
xchg
sbb
cdq
sbb
popf
sbb
loope
jae
in
jae
jmp
sbb
icebp
sbb
cmc
sbb
stc
sbb
std
sbb
rcr
inc
lds
jae
leave
sbb
int
jae
rcr
jae
aad
jae
fstp
jae
fstp
jae
and
jae
and
sbb
sub
sbb
xor
sbb
cmp
sbb
add
sbb
or
sbb
adc
sbb
sbb
sbb
sbb
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
sbb
inc
sbb
dec
sbb
dec
sbb
push
sbb
push
sbb
pop
sbb
pop
sbb
mov
sbb
test
sbb
mov
jae
mov
jae
mov
sbb
sbb
jae
mov
jae
lea
jae
xchg
sbb
xchg
sbb
cdq
sbb
popf
sbb
loope
jae
in
jae
jmp
sbb
icebp
sbb
cmc
sbb
stc
sbb
std
sbb
rcr
inc
lds
jae
leave
sbb
int
jae
rcr
jae
aad
jae
fstp
jae
fstp
jae
and
jae
and
sbb
sub
sbb
xor
sbb
cmp
sbb
add
sbb
or
sbb
adc
sbb
sbb
sbb
sbb
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
sbb
inc
sbb
dec
sbb
dec
sbb
push
sbb
push
sbb
pop
sbb
pop
sbb
mov
sbb
test
sbb
mov
jae
mov
jae
mov
sbb
sbb
jae
mov
jae
lea
jae
xchg
sbb
xchg
sbb
cdq
sbb
popf
sbb
loope
jae
in
jae
jmp
sbb
icebp
sbb
cmc
sbb
stc
sbb
std
sbb
rcr
inc
lds
jae
leave
sbb
int
jae
rcr
jae
aad
jae
fstp
jae
fstp
jae
and
jae
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
sbb
jae
mov
jae
lea
jae
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rcr
inc
lds
jae
leave
push
jae
int
jae
rcr
jae
aad
jae
fstp
jae
fstp
jae
and
jae
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
sbb
jae
mov
jae
lea
jae
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rcr
inc
lds
jae
leave
pop
jae
int
jae
rcr
jae
aad
jae
fstp
jae
fstp
jae
and
inc
and
sbb
inc
sub
sbb
inc
xor
sbb
inc
cmp
sbb
inc
add
sbb
inc
or
sbb
inc
adc
sbb
inc
sbb
sbb
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
sbb
inc
inc
sbb
inc
dec
sbb
inc
dec
sbb
inc
push
sbb
inc
push
sbb
inc
pop
sbb
inc
pop
sbb
inc
mov
sbb
inc
test
sbb
inc
mov
jae
mov
jae
mov
sbb
inc
sbb
inc
mov
inc
lea
inc
xchg
sbb
inc
xchg
sbb
inc
cdq
sbb
inc
popf
sbb
inc
loope
jae
in
jae
jmp
sbb
inc
icebp
sbb
inc
cmc
sbb
inc
stc
sbb
inc
std
sbb
inc
rcr
lds
inc
leave
sbb
inc
int
jae
rcr
inc
aad
jae
fstp
inc
fstp
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
sbb
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
sbb
jae
dec
sbb
jae
push
sbb
jae
pop
sbb
jae
mov
sbb
jae
lods
sbb
jae
mov
jae
mov
sbb
jae
test
jae
lea
jae
xchg
sbb
jae
popf
sbb
jae
in
jae
jmp
sbb
jae
cmc
sbb
jae
std
sbb
jae
lds
jae
int
jae
rcr
jae
fstp
jae
and
jae
and
adc
sub
adc
xor
adc
cmp
adc
add
adc
or
adc
adc
adc
sbb
adc
adc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
adc
inc
adc
dec
adc
dec
adc
push
adc
push
adc
pop
adc
pop
adc
mov
adc
test
adc
mov
jae
mov
jae
mov
adc
adc
jae
mov
jae
lea
jae
xchg
adc
xchg
adc
cdq
adc
popf
adc
loope
jae
in
jae
jmp
adc
icebp
adc
cmc
adc
stc
adc
std
adc
rcl
inc
lds
jae
leave
adc
int
jae
rcl
jae
aad
jae
fst
jae
fst
jae
and
jae
and
adc
sub
adc
xor
adc
cmp
adc
add
adc
or
adc
adc
adc
sbb
adc
adc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
adc
inc
adc
dec
adc
dec
adc
push
adc
push
adc
pop
adc
pop
adc
mov
adc
test
adc
mov
jae
mov
jae
mov
adc
adc
jae
mov
jae
lea
jae
xchg
adc
xchg
adc
cdq
adc
popf
adc
loope
jae
in
jae
jmp
adc
icebp
adc
cmc
adc
stc
adc
std
adc
rcl
inc
lds
jae
leave
adc
int
jae
rcl
jae
aad
jae
fst
jae
fst
jae
and
jae
and
adc
sub
adc
xor
adc
cmp
adc
add
adc
or
adc
adc
adc
sbb
adc
adc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
adc
inc
adc
dec
adc
dec
adc
push
adc
push
adc
pop
adc
pop
adc
mov
adc
test
adc
mov
jae
mov
jae
mov
adc
adc
jae
mov
jae
lea
jae
xchg
adc
xchg
adc
cdq
adc
popf
adc
loope
jae
in
jae
jmp
adc
icebp
adc
cmc
adc
stc
adc
std
adc
rcl
inc
lds
jae
leave
adc
int
jae
rcl
jae
aad
jae
fst
jae
fst
jae
and
jae
and
adc
sub
adc
xor
adc
cmp
adc
add
adc
or
adc
adc
adc
sbb
adc
adc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
adc
inc
adc
dec
adc
dec
adc
push
adc
push
adc
pop
adc
pop
adc
mov
adc
test
adc
mov
jae
mov
jae
mov
adc
adc
jae
mov
jae
lea
jae
xchg
adc
xchg
adc
cdq
adc
popf
adc
loope
jae
in
jae
jmp
adc
icebp
adc
cmc
adc
stc
adc
std
adc
rcl
inc
lds
jae
leave
adc
int
jae
rcl
jae
aad
jae
fst
jae
fst
jae
and
jae
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
adc
jae
mov
jae
lea
jae
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rcl
inc
lds
jae
leave
push
jae
int
jae
rcl
jae
aad
jae
fst
jae
fst
jae
and
jae
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
adc
jae
mov
jae
lea
jae
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rcl
inc
lds
jae
leave
pop
jae
int
jae
rcl
jae
aad
jae
fst
jae
fst
jae
and
inc
and
adc
inc
sub
adc
inc
xor
adc
inc
cmp
adc
inc
add
adc
inc
or
adc
inc
adc
adc
inc
sbb
adc
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
adc
inc
inc
adc
inc
dec
adc
inc
dec
adc
inc
push
adc
inc
push
adc
inc
pop
adc
inc
pop
adc
inc
mov
adc
inc
test
adc
inc
mov
jae
mov
jae
mov
adc
inc
adc
inc
mov
inc
lea
inc
xchg
adc
inc
xchg
adc
inc
cdq
adc
inc
popf
adc
inc
loope
jae
in
jae
jmp
adc
inc
icebp
adc
inc
cmc
adc
inc
stc
adc
inc
std
adc
inc
rcl
lds
inc
leave
adc
inc
int
jae
rcl
inc
aad
jae
fst
inc
fst
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
adc
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
adc
jae
dec
adc
jae
push
adc
jae
pop
adc
jae
mov
adc
jae
lods
adc
jae
mov
jae
mov
adc
jae
test
jae
lea
jae
xchg
adc
jae
popf
adc
jae
in
jae
jmp
adc
jae
cmc
adc
jae
std
adc
jae
lds
jae
int
jae
rcl
jae
fst
jae
and
jae
and
or
sub
or
xor
or
cmp
or
add
or
or
or
adc
or
sbb
or
or
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
mov
or
test
or
mov
jae
mov
jae
mov
or
or
jae
mov
jae
lea
jae
xchg
or
xchg
or
cdq
or
popf
or
loope
jae
in
jae
jmp
or
icebp
or
cmc
or
stc
or
std
or
ror
inc
lds
jae
leave
or
int
jae
ror
jae
aad
jae
(bad)
jae
fisttp
jae
and
jae
and
or
sub
or
xor
or
cmp
or
add
or
or
or
adc
or
sbb
or
or
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
mov
or
test
or
mov
jae
mov
jae
mov
or
or
jae
mov
jae
lea
jae
xchg
or
xchg
or
cdq
or
popf
or
loope
jae
in
jae
jmp
or
icebp
or
cmc
or
stc
or
std
or
ror
inc
lds
jae
leave
or
int
jae
ror
jae
aad
jae
(bad)
jae
fisttp
jae
and
jae
and
or
sub
or
xor
or
cmp
or
add
or
or
or
adc
or
sbb
or
or
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
mov
or
test
or
mov
jae
mov
jae
mov
or
or
jae
mov
jae
lea
jae
xchg
or
xchg
or
cdq
or
popf
or
loope
jae
in
jae
jmp
or
icebp
or
cmc
or
stc
or
std
or
ror
inc
lds
jae
leave
or
int
jae
ror
jae
aad
jae
(bad)
jae
fisttp
jae
and
jae
and
or
sub
or
xor
or
cmp
or
add
or
or
or
adc
or
sbb
or
or
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
mov
or
test
or
mov
jae
mov
jae
mov
or
or
jae
mov
jae
lea
jae
xchg
or
xchg
or
cdq
or
popf
or
loope
jae
in
jae
jmp
or
icebp
or
cmc
or
stc
or
std
or
ror
inc
lds
jae
leave
or
int
jae
ror
jae
aad
jae
(bad)
jae
fisttp
jae
and
jae
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
or
jae
mov
jae
lea
jae
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
ror
inc
lds
jae
leave
push
jae
int
jae
ror
jae
aad
jae
(bad)
jae
fisttp
jae
and
jae
and
(bad)
inc
sub
(bad)
inc
xor
(bad)
inc
cmp
(bad)
inc
add
(bad)
inc
or
(bad)
inc
adc
(bad)
inc
sbb
(bad)
inc
gs
inc
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
(bad)
inc
inc
(bad)
inc
dec
(bad)
inc
dec
(bad)
inc
push
(bad)
inc
push
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
mov
(bad)
inc
test
(bad)
inc
mov
jae
mov
jae
mov
(bad)
inc
or
jae
mov
jae
lea
jae
xchg
(bad)
inc
xchg
(bad)
inc
cdq
(bad)
inc
popf
(bad)
inc
loope
jae
in
jae
jmp
(bad)
inc
icebp
(bad)
inc
cmc
(bad)
inc
stc
(bad)
inc
std
(bad)
inc
ror
inc
lds
jae
leave
(bad)
inc
int
jae
ror
jae
aad
jae
(bad)
jae
fisttp
jae
and
inc
and
or
inc
sub
or
inc
xor
or
inc
cmp
or
inc
add
or
inc
or
or
inc
adc
or
inc
sbb
or
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
or
inc
inc
or
inc
dec
or
inc
dec
or
inc
push
or
inc
push
or
inc
pop
or
inc
pop
or
inc
mov
or
inc
test
or
inc
mov
jae
mov
jae
mov
or
inc
or
inc
mov
inc
lea
inc
xchg
or
inc
xchg
or
inc
cdq
or
inc
popf
or
inc
loope
jae
in
jae
jmp
or
inc
icebp
or
inc
cmc
or
inc
stc
or
inc
std
or
inc
ror
lds
inc
leave
or
inc
int
jae
ror
inc
aad
jae
(bad)
inc
fisttp
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
or
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
or
jae
dec
or
jae
push
or
jae
pop
or
jae
mov
or
jae
lods
or
jae
mov
jae
mov
or
jae
test
jae
lea
jae
xchg
or
jae
popf
or
jae
in
jae
jmp
or
jae
cmc
or
jae
std
or
jae
lds
jae
int
jae
ror
jae
(bad)
jae
and
jae
and
add
sub
add
xor
add
cmp
add
add
add
or
add
adc
add
sbb
add
add
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
mov
add
test
add
mov
jae
mov
jae
mov
add
add
jae
mov
jae
lea
jae
xchg
add
xchg
add
cdq
add
popf
add
loope
jae
in
jae
jmp
add
icebp
add
cmc
add
stc
add
std
add
rol
inc
lds
jae
leave
add
int
jae
rol
jae
aad
jae
fld
jae
fld
jae
and
jae
and
add
sub
add
xor
add
cmp
add
add
add
or
add
adc
add
sbb
add
add
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
mov
add
test
add
mov
jae
mov
jae
mov
add
add
jae
mov
jae
lea
jae
xchg
add
xchg
add
cdq
add
popf
add
loope
jae
in
jae
jmp
add
icebp
add
cmc
add
stc
add
std
add
rol
inc
lds
jae
leave
add
int
jae
rol
jae
aad
jae
fld
jae
fld
jae
and
jae
and
add
sub
add
xor
add
cmp
add
add
add
or
add
adc
add
sbb
add
add
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
mov
add
test
add
mov
jae
mov
jae
mov
add
add
jae
mov
jae
lea
jae
xchg
add
xchg
add
cdq
add
popf
add
loope
jae
in
jae
jmp
add
icebp
add
cmc
add
stc
add
std
add
rol
inc
lds
jae
leave
add
int
jae
rol
jae
aad
jae
fld
jae
fld
jae
and
jae
and
add
sub
add
xor
add
cmp
add
add
add
or
add
adc
add
sbb
add
add
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
mov
add
test
add
mov
jae
mov
jae
mov
add
add
jae
mov
jae
lea
jae
xchg
add
xchg
add
cdq
add
popf
add
loope
jae
in
jae
jmp
add
icebp
add
cmc
add
stc
add
std
add
rol
inc
lds
jae
leave
add
int
jae
rol
jae
aad
jae
fld
jae
fld
jae
and
jae
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
add
jae
mov
jae
lea
jae
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rol
inc
lds
jae
leave
push
jae
int
jae
rol
jae
aad
jae
fld
jae
fld
jae
and
jae
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
jae
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
add
jae
mov
jae
lea
jae
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rol
inc
lds
jae
leave
pop
jae
int
jae
rol
jae
aad
jae
fld
jae
fld
jae
and
inc
and
add
inc
sub
add
inc
xor
add
inc
cmp
add
inc
add
add
inc
or
add
inc
adc
add
inc
sbb
add
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
add
inc
inc
add
inc
dec
add
inc
dec
add
inc
push
add
inc
push
add
inc
pop
add
inc
pop
add
inc
mov
add
inc
test
add
inc
mov
jae
mov
jae
mov
add
inc
add
inc
mov
inc
lea
inc
xchg
add
inc
xchg
add
inc
cdq
add
inc
popf
add
inc
loope
jae
in
jae
jmp
add
inc
icebp
add
inc
cmc
add
inc
stc
add
inc
std
add
inc
rol
lds
inc
leave
add
inc
int
jae
rol
inc
aad
jae
fld
inc
fld
inc
and
jae
sub
jae
xor
jae
cmp
jae
add
jae
or
jae
adc
jae
sbb
jae
popa
add
jae
imul
jae
jne
jae
jns
jae
jge
jae
inc
add
jae
dec
add
jae
push
add
jae
pop
add
jae
mov
add
jae
lods
add
jae
mov
jae
mov
add
jae
test
jae
lea
jae
xchg
add
jae
popf
add
jae
in
jae
jmp
add
jae
cmc
add
jae
std
add
jae
lds
jae
int
jae
rol
jae
fld
jae
and
inc
and
jp
inc
sub
jp
inc
xor
jp
inc
cmp
jp
inc
add
jp
inc
or
jp
inc
adc
jp
inc
sbb
jp
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jp
inc
inc
jp
inc
dec
jp
inc
dec
jp
inc
push
jp
inc
push
jp
inc
pop
jp
inc
pop
jp
inc
mov
jp
inc
test
jp
inc
mov
jae
mov
jae
mov
jp
inc
cmp
inc
mov
inc
lea
inc
xchg
jp
inc
xchg
jp
inc
cdq
jp
inc
popf
jp
inc
loope
jae
in
jae
jmp
jp
inc
icebp
jp
inc
cmc
jp
inc
stc
jp
inc
std
jp
inc
sar
lds
inc
leave
jp
inc
int
jae
sar
inc
aad
jae
fnstcw
inc
fnstsw
inc
and
inc
and
jnp
inc
sub
jnp
inc
xor
jnp
inc
cmp
jnp
inc
add
jnp
inc
or
jnp
inc
adc
jnp
inc
sbb
jnp
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jnp
inc
inc
jnp
inc
dec
jnp
inc
dec
jnp
inc
push
jnp
inc
push
jnp
inc
pop
jnp
inc
pop
jnp
inc
mov
jnp
inc
test
jnp
inc
mov
jae
mov
jae
mov
jnp
inc
cmp
inc
mov
inc
lea
inc
xchg
jnp
inc
xchg
jnp
inc
cdq
jnp
inc
popf
jnp
inc
loope
jae
in
jae
jmp
jnp
inc
icebp
jnp
inc
cmc
jnp
inc
stc
jnp
inc
std
jnp
inc
sar
lds
inc
leave
jnp
inc
int
jae
sar
inc
aad
jae
fnstcw
inc
fnstsw
inc
and
inc
and
js
inc
sub
js
inc
xor
js
inc
cmp
js
inc
add
js
inc
or
js
inc
adc
js
inc
sbb
js
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
js
inc
inc
js
inc
dec
js
inc
dec
js
inc
push
js
inc
push
js
inc
pop
js
inc
pop
js
inc
mov
js
inc
test
js
inc
mov
jae
mov
jae
mov
js
inc
cmp
inc
mov
inc
lea
inc
xchg
js
inc
xchg
js
inc
cdq
js
inc
popf
js
inc
loope
jae
in
jae
jmp
js
inc
icebp
js
inc
cmc
js
inc
stc
js
inc
std
js
inc
sar
lds
inc
leave
js
inc
int
jae
sar
inc
aad
jae
fnstcw
inc
fnstsw
inc
and
inc
and
jns
inc
sub
jns
inc
xor
jns
inc
cmp
jns
inc
add
jns
inc
or
jns
inc
adc
jns
inc
sbb
jns
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jns
inc
inc
jns
inc
dec
jns
inc
dec
jns
inc
push
jns
inc
push
jns
inc
pop
jns
inc
pop
jns
inc
mov
jns
inc
test
jns
inc
mov
jae
mov
jae
mov
jns
inc
cmp
inc
mov
inc
lea
inc
xchg
jns
inc
xchg
jns
inc
cdq
jns
inc
popf
jns
inc
loope
jae
in
jae
jmp
jns
inc
icebp
jns
inc
cmc
jns
inc
stc
jns
inc
std
jns
inc
sar
lds
inc
leave
jns
inc
int
jae
sar
inc
aad
jae
fnstcw
inc
fnstsw
inc
and
inc
and
jle
inc
sub
jle
inc
xor
jle
inc
cmp
jle
inc
add
jle
inc
or
jle
inc
adc
jle
inc
sbb
jle
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jle
inc
inc
jle
inc
dec
jle
inc
dec
jle
inc
push
jle
inc
push
jle
inc
pop
jle
inc
pop
jle
inc
mov
jle
inc
test
jle
inc
mov
jae
mov
jae
mov
jle
inc
cmp
inc
mov
inc
lea
inc
xchg
jle
inc
xchg
jle
inc
cdq
jle
inc
popf
jle
inc
loope
jae
in
jae
jmp
jle
inc
icebp
jle
inc
cmc
jle
inc
stc
jle
inc
std
jle
inc
sar
lds
inc
leave
jle
inc
int
jae
sar
inc
aad
jae
fnstcw
inc
fnstsw
inc
and
inc
and
jg
inc
sub
jg
inc
xor
jg
inc
cmp
jg
inc
add
jg
inc
or
jg
inc
adc
jg
inc
sbb
jg
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jg
inc
inc
jg
inc
dec
jg
inc
dec
jg
inc
push
jg
inc
push
jg
inc
pop
jg
inc
pop
jg
inc
mov
jg
inc
test
jg
inc
mov
jae
mov
jae
mov
jg
inc
cmp
inc
mov
inc
lea
inc
xchg
jg
inc
xchg
jg
inc
cdq
jg
inc
popf
jg
inc
loope
jae
in
jae
jmp
jg
inc
icebp
jg
inc
cmc
jg
inc
stc
jg
inc
std
jg
inc
sar
lds
inc
leave
jg
inc
int
jae
sar
inc
aad
jae
fnstcw
inc
fnstsw
inc
and
and
jl
inc
sub
jl
inc
xor
jl
inc
cmp
jl
inc
add
jl
inc
or
jl
inc
adc
jl
inc
sbb
jl
inc
gs
inc
imul
jno
jae
jne
jae
jns
jae
jge
jae
inc
jl
inc
inc
jl
inc
dec
jl
inc
dec
jl
inc
push
jl
inc
push
jl
inc
pop
jl
inc
pop
jl
inc
mov
jl
inc
test
jl
inc
mov
jae
mov
jae
mov
jl
inc
cmp
mov
lea
xchg
jl
inc
xchg
jl
inc
cdq
jl
inc
popf
jl
inc
loope
jae
in
jae
jmp
jl
inc
icebp
jl
inc
cmc
jl
inc
stc
jl
inc
std
jl
inc
sar
jl
inc
leave
jl
inc
int
jae
sar
aad
jae
fnstcw
fnstsw
and
inc
and
jge
inc
sub
jge
inc
xor
jge
inc
cmp
jge
inc
add
jge
inc
or
jge
inc
adc
jge
inc
sbb
jge
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jge
inc
inc
jge
inc
dec
jge
inc
dec
jge
inc
push
jge
inc
push
jge
inc
pop
jge
inc
pop
jge
inc
mov
jge
inc
test
jge
inc
mov
jae
mov
jae
mov
jge
inc
cmp
inc
mov
inc
lea
inc
xchg
jge
inc
xchg
jge
inc
cdq
jge
inc
popf
jge
inc
loope
jae
in
jae
jmp
jge
inc
icebp
jge
inc
cmc
jge
inc
stc
jge
inc
std
jge
inc
sar
lds
inc
leave
jge
inc
int
jae
sar
inc
aad
jae
fnstcw
inc
fnstsw
inc
and
inc
and
jb
inc
sub
jb
inc
xor
jb
inc
cmp
jb
inc
add
jb
inc
or
jb
inc
adc
jb
inc
sbb
jb
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jb
inc
inc
jb
inc
dec
jb
inc
dec
jb
inc
push
jb
inc
push
jb
inc
pop
jb
inc
pop
jb
inc
mov
jb
inc
test
jb
inc
mov
jae
mov
jae
mov
jb
inc
xor
inc
mov
inc
lea
inc
xchg
jb
inc
xchg
jb
inc
cdq
jb
inc
popf
jb
inc
loope
jae
in
jae
jmp
jb
inc
icebp
jb
inc
cmc
jb
inc
stc
jb
inc
std
jb
inc
shl
lds
inc
leave
jb
inc
int
jae
shl
inc
aad
jae
fnstenv
inc
fnsave
inc
and
inc
and
jae
inc
sub
jae
inc
xor
jae
inc
cmp
jae
inc
add
jae
inc
or
jae
inc
adc
jae
inc
sbb
jae
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jae
inc
inc
jae
inc
dec
jae
inc
dec
jae
inc
push
jae
inc
push
jae
inc
pop
jae
inc
pop
jae
inc
mov
jae
inc
test
jae
inc
mov
jae
mov
jae
mov
jae
inc
xor
inc
mov
inc
lea
inc
xchg
jae
inc
xchg
jae
inc
cdq
jae
inc
popf
jae
inc
loope
jae
in
jae
jmp
jae
inc
icebp
jae
inc
cmc
jae
inc
stc
jae
inc
std
jae
inc
shl
lds
inc
leave
jae
inc
int
jae
shl
inc
aad
jae
fnstenv
inc
fnsave
inc
and
inc
and
jo
inc
sub
jo
inc
xor
jo
inc
cmp
jo
inc
add
jo
inc
or
jo
inc
adc
jo
inc
sbb
jo
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jo
inc
inc
jo
inc
dec
jo
inc
dec
jo
inc
push
jo
inc
push
jo
inc
pop
jo
inc
pop
jo
inc
mov
jo
inc
test
jo
inc
mov
jae
mov
jae
mov
jo
inc
xor
inc
mov
inc
lea
inc
xchg
jo
inc
xchg
jo
inc
cdq
jo
inc
popf
jo
inc
loope
jae
in
jae
jmp
jo
inc
icebp
jo
inc
cmc
jo
inc
stc
jo
inc
std
jo
inc
shl
lds
inc
leave
jo
inc
int
jae
shl
inc
aad
jae
fnstenv
inc
fnsave
inc
and
inc
and
jno
inc
sub
jno
inc
xor
jno
inc
cmp
jno
inc
add
jno
inc
or
jno
inc
adc
jno
inc
sbb
jno
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jno
inc
inc
jno
inc
dec
jno
inc
dec
jno
inc
push
jno
inc
push
jno
inc
pop
jno
inc
pop
jno
inc
mov
jno
inc
test
jno
inc
mov
jae
mov
jae
mov
jno
inc
xor
inc
mov
inc
lea
inc
xchg
jno
inc
xchg
jno
inc
cdq
jno
inc
popf
jno
inc
loope
jae
in
jae
jmp
jno
inc
icebp
jno
inc
cmc
jno
inc
stc
jno
inc
std
jno
inc
shl
lds
inc
leave
jno
inc
int
jae
shl
inc
aad
jae
fnstenv
inc
fnsave
inc
and
inc
and
jbe
inc
sub
jbe
inc
xor
jbe
inc
cmp
jbe
inc
add
jbe
inc
or
jbe
inc
adc
jbe
inc
sbb
jbe
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jbe
inc
inc
jbe
inc
dec
jbe
inc
dec
jbe
inc
push
jbe
inc
push
jbe
inc
pop
jbe
inc
pop
jbe
inc
mov
jbe
inc
test
jbe
inc
mov
jae
mov
jae
mov
jbe
inc
xor
inc
mov
inc
lea
inc
xchg
jbe
inc
xchg
jbe
inc
cdq
jbe
inc
popf
jbe
inc
loope
jae
in
jae
jmp
jbe
inc
icebp
jbe
inc
cmc
jbe
inc
stc
jbe
inc
std
jbe
inc
shl
lds
inc
leave
jbe
inc
int
jae
shl
inc
aad
jae
fnstenv
inc
fnsave
inc
and
inc
and
ja
inc
sub
ja
inc
xor
ja
inc
cmp
ja
inc
add
ja
inc
or
ja
inc
adc
ja
inc
sbb
ja
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
ja
inc
inc
ja
inc
dec
ja
inc
dec
ja
inc
push
ja
inc
push
ja
inc
pop
ja
inc
pop
ja
inc
mov
ja
inc
test
ja
inc
mov
jae
mov
jae
mov
ja
inc
xor
inc
mov
inc
lea
inc
xchg
ja
inc
xchg
ja
inc
cdq
ja
inc
popf
ja
inc
loope
jae
in
jae
jmp
ja
inc
icebp
ja
inc
cmc
ja
inc
stc
ja
inc
std
ja
inc
shl
lds
inc
leave
ja
inc
int
jae
shl
inc
aad
jae
fnstenv
inc
fnsave
inc
and
and
je
inc
sub
je
inc
xor
je
inc
cmp
je
inc
add
je
inc
or
je
inc
adc
je
inc
sbb
je
inc
gs
inc
imul
jno
jae
jne
jae
jns
jae
jge
jae
inc
je
inc
inc
je
inc
dec
je
inc
dec
je
inc
push
je
inc
push
je
inc
pop
je
inc
pop
je
inc
mov
je
inc
test
je
inc
mov
jae
mov
jae
mov
je
inc
xor
mov
lea
xchg
je
inc
xchg
je
inc
cdq
je
inc
popf
je
inc
loope
jae
in
jae
jmp
je
inc
icebp
je
inc
cmc
je
inc
stc
je
inc
std
je
inc
shl
je
inc
leave
je
inc
int
jae
shl
aad
jae
fnstenv
fnsave
and
inc
and
jne
inc
sub
jne
inc
xor
jne
inc
cmp
jne
inc
add
jne
inc
or
jne
inc
adc
jne
inc
sbb
jne
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
jne
inc
inc
jne
inc
dec
jne
inc
dec
jne
inc
push
jne
inc
push
jne
inc
pop
jne
inc
pop
jne
inc
mov
jne
inc
test
jne
inc
mov
jae
mov
jae
mov
jne
inc
xor
inc
mov
inc
lea
inc
xchg
jne
inc
xchg
jne
inc
cdq
jne
inc
popf
jne
inc
loope
jae
in
jae
jmp
jne
inc
icebp
jne
inc
cmc
jne
inc
stc
jne
inc
std
jne
inc
shl
lds
inc
leave
jne
inc
int
jae
shl
inc
aad
jae
fnstenv
inc
fnsave
inc
and
inc
and
push
inc
sub
push
inc
xor
push
inc
cmp
push
inc
add
push
inc
or
push
inc
adc
push
inc
sbb
push
inc
gs
inc
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
inc
inc
push
inc
dec
push
inc
dec
push
inc
push
push
inc
push
push
inc
pop
push
inc
pop
push
inc
mov
push
inc
test
push
inc
mov
jae
mov
jae
mov
push
inc
sub
inc
mov
inc
lea
inc
xchg
push
inc
xchg
push
inc
cdq
push
inc
popf
push
inc
loope
jae
in
jae
jmp
push
inc
icebp
push
inc
cmc
push
inc
stc
push
inc
std
push
inc
shr
lds
inc
leave
push
inc
int
jae
shr
inc
aad
jae
fldcw
inc
(bad)
inc
and
inc
and
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
push
jae
sub
inc
sub
push
jae
cmp
inc
cmp
push
jae
or
inc
or
push
jae
sbb
inc
sbb
push
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
dec
push
jae
push
push
jae
pop
push
jae
mov
push
jae
lods
push
jae
mov
jae
mov
push
jae
test
inc
mov
inc
lea
inc
xchg
push
jae
cdq
push
jae
loope
jae
in
jae
jmp
push
jae
cmc
push
jae
std
push
jae
lds
inc
leave
push
jae
shr
inc
aad
jae
fldcw
inc
(bad)
inc
and
inc
and
imul
xor
inc
xor
imul
add
inc
add
imul
adc
inc
adc
imul
popa
imul
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
imul
dec
imul
push
imul
pop
imul
mov
imul
lods
imul
mov
jae
mov
imul
test
inc
mov
inc
lea
inc
xchg
imul
cdq
imul
loope
jae
in
jae
jmp
imul
cmc
imul
std
imul
lds
inc
leave
imul
shr
inc
aad
jae
fldcw
inc
(bad)
inc
and
inc
and
outs
jae
sub
outs
jae
xor
outs
jae
cmp
outs
jae
add
outs
jae
or
outs
jae
adc
outs
jae
sbb
outs
jae
outs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
outs
jae
inc
outs
jae
dec
outs
jae
dec
outs
jae
push
outs
jae
push
outs
jae
pop
outs
jae
pop
outs
jae
mov
outs
jae
test
outs
jae
mov
jae
mov
jae
mov
outs
jae
sub
inc
mov
inc
lea
inc
xchg
outs
jae
xchg
outs
jae
cdq
outs
jae
popf
outs
jae
loope
jae
in
jae
jmp
outs
jae
icebp
outs
jae
cmc
outs
jae
stc
outs
jae
std
outs
jae
shr
lds
inc
leave
outs
jae
int
jae
shr
inc
aad
jae
fldcw
inc
(bad)
inc
and
inc
and
outs
jae
sub
outs
jae
xor
outs
jae
cmp
outs
jae
add
outs
jae
or
outs
jae
adc
outs
jae
sbb
outs
jae
outs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
outs
jae
inc
outs
jae
dec
outs
jae
dec
outs
jae
push
outs
jae
push
outs
jae
pop
outs
jae
pop
outs
jae
mov
outs
jae
test
outs
jae
mov
jae
mov
jae
mov
outs
jae
sub
inc
mov
inc
lea
inc
xchg
outs
jae
xchg
outs
jae
cdq
outs
jae
popf
outs
jae
loope
jae
in
jae
jmp
outs
jae
icebp
outs
jae
cmc
outs
jae
stc
outs
jae
std
outs
jae
shr
lds
inc
leave
outs
jae
int
jae
shr
inc
aad
jae
fldcw
inc
(bad)
inc
and
and
ins
jae
sub
ins
jae
xor
ins
jae
cmp
ins
jae
add
ins
jae
or
ins
jae
adc
ins
jae
sbb
ins
jae
gs
jae
imul
jno
jae
jne
jae
jns
jae
jge
jae
inc
ins
jae
inc
ins
jae
dec
ins
jae
dec
ins
jae
push
ins
jae
push
ins
jae
pop
ins
jae
pop
ins
jae
mov
ins
jae
test
ins
jae
mov
jae
mov
jae
mov
ins
jae
sub
mov
lea
xchg
ins
jae
xchg
ins
jae
cdq
ins
jae
popf
ins
jae
loope
jae
in
jae
jmp
ins
jae
icebp
ins
jae
cmc
ins
jae
stc
ins
jae
std
ins
jae
shr
ins
jae
leave
ins
jae
int
jae
shr
aad
jae
fldcw
(bad)
and
inc
and
ins
jae
sub
ins
jae
xor
ins
jae
cmp
ins
jae
add
ins
jae
or
ins
jae
adc
ins
jae
sbb
ins
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
ins
jae
inc
ins
jae
dec
ins
jae
dec
ins
jae
push
ins
jae
push
ins
jae
pop
ins
jae
pop
ins
jae
mov
ins
jae
test
ins
jae
mov
jae
mov
jae
mov
ins
jae
sub
inc
mov
inc
lea
inc
xchg
ins
jae
xchg
ins
jae
cdq
ins
jae
popf
ins
jae
loope
jae
in
jae
jmp
ins
jae
icebp
ins
jae
cmc
ins
jae
stc
ins
jae
std
ins
jae
shr
lds
inc
leave
ins
jae
int
jae
shr
inc
aad
jae
fldcw
inc
(bad)
inc
and
inc
and
bound
sub
bound
xor
bound
cmp
bound
add
bound
or
bound
adc
bound
sbb
bound
bound
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
bound
inc
bound
dec
bound
dec
bound
push
bound
push
bound
pop
bound
pop
bound
mov
bound
test
bound
mov
jae
mov
jae
mov
bound
and
inc
mov
inc
lea
inc
xchg
bound
xchg
bound
cdq
bound
popf
bound
loope
jae
in
jae
jmp
bound
icebp
bound
cmc
bound
stc
bound
std
bound
shl
lds
inc
leave
bound
int
jae
shl
inc
aad
jae
fldenv
inc
frstor
inc
and
inc
and
arpl
sub
arpl
xor
arpl
cmp
arpl
add
arpl
or
arpl
adc
arpl
sbb
arpl
arpl
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
arpl
inc
arpl
dec
arpl
dec
arpl
push
arpl
push
arpl
pop
arpl
pop
arpl
mov
arpl
test
arpl
mov
jae
mov
jae
mov
arpl
and
inc
mov
inc
lea
inc
xchg
arpl
xchg
arpl
cdq
arpl
popf
arpl
loope
jae
in
jae
jmp
arpl
icebp
arpl
cmc
arpl
stc
arpl
std
arpl
shl
lds
inc
leave
arpl
int
jae
shl
inc
aad
jae
fldenv
inc
frstor
inc
and
inc
and
pusha
jae
sub
pusha
jae
xor
pusha
jae
cmp
pusha
jae
add
pusha
jae
or
pusha
jae
adc
pusha
jae
sbb
pusha
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
pusha
jae
inc
pusha
jae
dec
pusha
jae
dec
pusha
jae
push
pusha
jae
push
pusha
jae
pop
pusha
jae
pop
pusha
jae
mov
pusha
jae
test
pusha
jae
mov
jae
mov
jae
mov
pusha
jae
and
inc
mov
inc
lea
inc
xchg
pusha
jae
xchg
pusha
jae
cdq
pusha
jae
popf
pusha
jae
loope
jae
in
jae
jmp
pusha
jae
icebp
pusha
jae
cmc
pusha
jae
stc
pusha
jae
std
pusha
jae
shl
lds
inc
leave
pusha
jae
int
jae
shl
inc
aad
jae
fldenv
inc
frstor
inc
and
inc
and
popa
jae
sub
popa
jae
xor
popa
jae
cmp
popa
jae
add
popa
jae
or
popa
jae
adc
popa
jae
sbb
popa
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
popa
jae
inc
popa
jae
dec
popa
jae
dec
popa
jae
push
popa
jae
push
popa
jae
pop
popa
jae
pop
popa
jae
mov
popa
jae
test
popa
jae
mov
jae
mov
jae
mov
popa
jae
and
inc
mov
inc
lea
inc
xchg
popa
jae
xchg
popa
jae
cdq
popa
jae
popf
popa
jae
loope
jae
in
jae
jmp
popa
jae
icebp
popa
jae
cmc
popa
jae
stc
popa
jae
std
popa
jae
shl
lds
inc
leave
popa
jae
int
jae
shl
inc
aad
jae
fldenv
inc
frstor
inc
and
inc
and
data16
sub
data16
xor
data16
cmp
data16
add
data16
or
data16
adc
data16
sbb
data16
gs
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
data16
inc
data16
dec
data16
dec
data16
push
data16
push
data16
pop
data16
pop
data16
mov
data16
test
data16
mov
jae
mov
jae
mov
data16
and
inc
mov
inc
lea
inc
xchg
data16
xchg
data16
cdq
data16
popf
data16
loope
jae
in
jae
jmp
data16
icebp
data16
cmc
data16
stc
data16
std
data16
shl
lds
inc
leave
data16
int
jae
shl
inc
aad
jae
fldenv
inc
frstor
inc
and
inc
and
addr16
sub
addr16
xor
addr16
cmp
addr16
add
addr16
or
addr16
adc
addr16
sbb
addr16
gs
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
addr16
inc
addr16
dec
addr16
dec
addr16
push
addr16
push
addr16
pop
addr16
pop
addr16
mov
addr16
test
addr16
mov
jae
mov
jae
mov
addr16
and
inc
mov
inc
lea
inc
xchg
addr16
xchg
addr16
cdq
addr16
popf
addr16
loope
jae
in
jae
jmp
addr16
icebp
addr16
cmc
addr16
stc
addr16
std
addr16
shl
lds
inc
leave
addr16
int
jae
shl
inc
aad
jae
fldenv
inc
frstor
inc
and
and
fs
sub
fs
xor
fs
cmp
fs
add
fs
or
fs
adc
fs
sbb
fs
gs
imul
jno
jae
jne
jae
jns
jae
jge
jae
inc
fs
inc
fs
dec
fs
dec
fs
push
fs
push
fs
pop
fs
pop
fs
mov
fs
test
fs
mov
jae
mov
jae
mov
fs
and
mov
lea
xchg
fs
xchg
fs
cdq
fs
popf
fs
loope
jae
in
jae
jmp
fs
icebp
fs
cmc
fs
stc
fs
std
fs
shl
fs
leave
fs
int
jae
shl
aad
jae
fldenv
frstor
and
inc
and
gs
sub
gs
xor
gs
cmp
gs
add
gs
or
gs
adc
gs
sbb
gs
gs
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
gs
inc
gs
dec
gs
dec
gs
push
gs
push
gs
pop
gs
pop
gs
mov
gs
test
gs
mov
jae
mov
jae
mov
gs
and
inc
mov
inc
lea
inc
xchg
gs
xchg
gs
cdq
gs
popf
gs
loope
jae
in
jae
jmp
gs
icebp
gs
cmc
gs
stc
gs
std
gs
shl
lds
inc
leave
gs
int
jae
shl
inc
aad
jae
fldenv
inc
frstor
inc
and
inc
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
sbb
inc
mov
inc
lea
inc
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rcr
lds
inc
leave
pop
jae
int
jae
rcr
inc
aad
jae
fstp
inc
fstp
inc
and
inc
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
sbb
inc
mov
inc
lea
inc
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rcr
lds
inc
leave
pop
jae
int
jae
rcr
inc
aad
jae
fstp
inc
fstp
inc
and
inc
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
sbb
inc
mov
inc
lea
inc
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rcr
lds
inc
leave
pop
jae
int
jae
rcr
inc
aad
jae
fstp
inc
fstp
inc
and
inc
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
sbb
inc
mov
inc
lea
inc
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rcr
lds
inc
leave
pop
jae
int
jae
rcr
inc
aad
jae
fstp
inc
fstp
inc
and
inc
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
sbb
inc
mov
inc
lea
inc
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rcr
lds
inc
leave
pop
jae
int
jae
rcr
inc
aad
jae
fstp
inc
fstp
inc
and
inc
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
sbb
inc
mov
inc
lea
inc
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rcr
lds
inc
leave
pop
jae
int
jae
rcr
inc
aad
jae
fstp
inc
fstp
inc
and
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
sbb
mov
lea
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rcr
pop
jae
leave
pop
jae
int
jae
rcr
aad
jae
fstp
fstp
and
inc
and
pop
jae
sub
pop
jae
xor
pop
jae
cmp
pop
jae
add
pop
jae
or
pop
jae
adc
pop
jae
sbb
pop
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
pop
jae
inc
pop
jae
dec
pop
jae
dec
pop
jae
push
pop
jae
push
pop
jae
pop
pop
jae
pop
pop
jae
mov
pop
jae
test
pop
jae
mov
jae
mov
jae
mov
pop
jae
sbb
inc
mov
inc
lea
inc
xchg
pop
jae
xchg
pop
jae
cdq
pop
jae
popf
pop
jae
loope
jae
in
jae
jmp
pop
jae
icebp
pop
jae
cmc
pop
jae
stc
pop
jae
std
pop
jae
rcr
lds
inc
leave
pop
jae
int
jae
rcr
inc
aad
jae
fstp
inc
fstp
inc
and
inc
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
adc
inc
mov
inc
lea
inc
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rcl
lds
inc
leave
push
jae
int
jae
rcl
inc
aad
jae
fst
inc
fst
inc
and
inc
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
adc
inc
mov
inc
lea
inc
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rcl
lds
inc
leave
push
jae
int
jae
rcl
inc
aad
jae
fst
inc
fst
inc
and
inc
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
adc
inc
mov
inc
lea
inc
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rcl
lds
inc
leave
push
jae
int
jae
rcl
inc
aad
jae
fst
inc
fst
inc
and
inc
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
adc
inc
mov
inc
lea
inc
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rcl
lds
inc
leave
push
jae
int
jae
rcl
inc
aad
jae
fst
inc
fst
inc
and
inc
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
adc
inc
mov
inc
lea
inc
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rcl
lds
inc
leave
push
jae
int
jae
rcl
inc
aad
jae
fst
inc
fst
inc
and
inc
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
adc
inc
mov
inc
lea
inc
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rcl
lds
inc
leave
push
jae
int
jae
rcl
inc
aad
jae
fst
inc
fst
inc
and
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
adc
mov
lea
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rcl
push
jae
leave
push
jae
int
jae
rcl
aad
jae
fst
fst
and
inc
and
push
jae
sub
push
jae
xor
push
jae
cmp
push
jae
add
push
jae
or
push
jae
adc
push
jae
sbb
push
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
push
jae
inc
push
jae
dec
push
jae
dec
push
jae
push
push
jae
push
push
jae
pop
push
jae
pop
push
jae
mov
push
jae
test
push
jae
mov
jae
mov
jae
mov
push
jae
adc
inc
mov
inc
lea
inc
xchg
push
jae
xchg
push
jae
cdq
push
jae
popf
push
jae
loope
jae
in
jae
jmp
push
jae
icebp
push
jae
cmc
push
jae
stc
push
jae
std
push
jae
rcl
lds
inc
leave
push
jae
int
jae
rcl
inc
aad
jae
fst
inc
fst
inc
and
inc
and
dec
jae
sub
dec
jae
xor
dec
jae
cmp
dec
jae
add
dec
jae
or
dec
jae
adc
dec
jae
sbb
dec
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
dec
jae
inc
dec
jae
dec
dec
jae
dec
dec
jae
push
dec
jae
push
dec
jae
pop
dec
jae
pop
dec
jae
mov
dec
jae
test
dec
jae
mov
jae
mov
jae
mov
dec
jae
or
inc
mov
inc
lea
inc
xchg
dec
jae
xchg
dec
jae
cdq
dec
jae
popf
dec
jae
loope
jae
in
jae
jmp
dec
jae
icebp
dec
jae
cmc
dec
jae
stc
dec
jae
std
dec
jae
ror
lds
inc
leave
dec
jae
int
jae
ror
inc
aad
jae
(bad)
inc
fisttp
inc
and
inc
and
dec
jae
sub
dec
jae
xor
dec
jae
cmp
dec
jae
add
dec
jae
or
dec
jae
adc
dec
jae
sbb
dec
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
dec
jae
inc
dec
jae
dec
dec
jae
dec
dec
jae
push
dec
jae
push
dec
jae
pop
dec
jae
pop
dec
jae
mov
dec
jae
test
dec
jae
mov
jae
mov
jae
mov
dec
jae
or
inc
mov
inc
lea
inc
xchg
dec
jae
xchg
dec
jae
cdq
dec
jae
popf
dec
jae
loope
jae
in
jae
jmp
dec
jae
icebp
dec
jae
cmc
dec
jae
stc
dec
jae
std
dec
jae
ror
lds
inc
leave
dec
jae
int
jae
ror
inc
aad
jae
(bad)
inc
fisttp
inc
and
inc
and
dec
jae
sub
dec
jae
xor
dec
jae
cmp
dec
jae
add
dec
jae
or
dec
jae
adc
dec
jae
sbb
dec
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
dec
jae
inc
dec
jae
dec
dec
jae
dec
dec
jae
push
dec
jae
push
dec
jae
pop
dec
jae
pop
dec
jae
mov
dec
jae
test
dec
jae
mov
jae
mov
jae
mov
dec
jae
or
inc
mov
inc
lea
inc
xchg
dec
jae
xchg
dec
jae
cdq
dec
jae
popf
dec
jae
loope
jae
in
jae
jmp
dec
jae
icebp
dec
jae
cmc
dec
jae
stc
dec
jae
std
dec
jae
ror
lds
inc
leave
dec
jae
int
jae
ror
inc
aad
jae
(bad)
inc
fisttp
inc
and
inc
and
dec
jae
sub
dec
jae
xor
dec
jae
cmp
dec
jae
add
dec
jae
or
dec
jae
adc
dec
jae
sbb
dec
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
dec
jae
inc
dec
jae
dec
dec
jae
dec
dec
jae
push
dec
jae
push
dec
jae
pop
dec
jae
pop
dec
jae
mov
dec
jae
test
dec
jae
mov
jae
mov
jae
mov
dec
jae
or
inc
mov
inc
lea
inc
xchg
dec
jae
xchg
dec
jae
cdq
dec
jae
popf
dec
jae
loope
jae
in
jae
jmp
dec
jae
icebp
dec
jae
cmc
dec
jae
stc
dec
jae
std
dec
jae
ror
lds
inc
leave
dec
jae
int
jae
ror
inc
aad
jae
(bad)
inc
fisttp
inc
and
inc
and
dec
jae
sub
dec
jae
xor
dec
jae
cmp
dec
jae
add
dec
jae
or
dec
jae
adc
dec
jae
sbb
dec
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
dec
jae
inc
dec
jae
dec
dec
jae
dec
dec
jae
push
dec
jae
push
dec
jae
pop
dec
jae
pop
dec
jae
mov
dec
jae
test
dec
jae
mov
jae
mov
jae
mov
dec
jae
or
inc
mov
inc
lea
inc
xchg
dec
jae
xchg
dec
jae
cdq
dec
jae
popf
dec
jae
loope
jae
in
jae
jmp
dec
jae
icebp
dec
jae
cmc
dec
jae
stc
dec
jae
std
dec
jae
ror
lds
inc
leave
dec
jae
int
jae
ror
inc
aad
jae
(bad)
inc
fisttp
inc
and
inc
and
dec
jae
sub
dec
jae
xor
dec
jae
cmp
dec
jae
add
dec
jae
or
dec
jae
adc
dec
jae
sbb
dec
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
dec
jae
inc
dec
jae
dec
dec
jae
dec
dec
jae
push
dec
jae
push
dec
jae
pop
dec
jae
pop
dec
jae
mov
dec
jae
test
dec
jae
mov
jae
mov
jae
mov
dec
jae
or
inc
mov
inc
lea
inc
xchg
dec
jae
xchg
dec
jae
cdq
dec
jae
popf
dec
jae
loope
jae
in
jae
jmp
dec
jae
icebp
dec
jae
cmc
dec
jae
stc
dec
jae
std
dec
jae
ror
lds
inc
leave
dec
jae
int
jae
ror
inc
aad
jae
(bad)
inc
fisttp
inc
and
and
dec
jae
sub
dec
jae
xor
dec
jae
cmp
dec
jae
add
dec
jae
or
dec
jae
adc
dec
jae
sbb
dec
jae
gs
jae
imul
jno
jae
jne
jae
jns
jae
jge
jae
inc
dec
jae
inc
dec
jae
dec
dec
jae
dec
dec
jae
push
dec
jae
push
dec
jae
pop
dec
jae
pop
dec
jae
mov
dec
jae
test
dec
jae
mov
jae
mov
jae
mov
dec
jae
or
mov
lea
xchg
dec
jae
xchg
dec
jae
cdq
dec
jae
popf
dec
jae
loope
jae
in
jae
jmp
dec
jae
icebp
dec
jae
cmc
dec
jae
stc
dec
jae
std
dec
jae
ror
dec
jae
leave
dec
jae
int
jae
ror
aad
jae
(bad)
fisttp
and
inc
and
dec
jae
sub
dec
jae
xor
dec
jae
cmp
dec
jae
add
dec
jae
or
dec
jae
adc
dec
jae
sbb
dec
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
dec
jae
inc
dec
jae
dec
dec
jae
dec
dec
jae
push
dec
jae
push
dec
jae
pop
dec
jae
pop
dec
jae
mov
dec
jae
test
dec
jae
mov
jae
mov
jae
mov
dec
jae
or
inc
mov
inc
lea
inc
xchg
dec
jae
xchg
dec
jae
cdq
dec
jae
popf
dec
jae
loope
jae
in
jae
jmp
dec
jae
icebp
dec
jae
cmc
dec
jae
stc
dec
jae
std
dec
jae
ror
lds
inc
leave
dec
jae
int
jae
ror
inc
aad
jae
(bad)
inc
fisttp
inc
and
inc
and
inc
jae
sub
inc
jae
xor
inc
jae
cmp
inc
jae
add
inc
jae
or
inc
jae
adc
inc
jae
sbb
inc
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
inc
jae
inc
inc
jae
dec
inc
jae
dec
inc
jae
push
inc
jae
push
inc
jae
pop
inc
jae
pop
inc
jae
mov
inc
jae
test
inc
jae
mov
jae
mov
jae
mov
inc
jae
add
inc
mov
inc
lea
inc
xchg
inc
jae
xchg
inc
jae
cdq
inc
jae
popf
inc
jae
loope
jae
in
jae
jmp
inc
jae
icebp
inc
jae
cmc
inc
jae
stc
inc
jae
std
inc
jae
rol
lds
inc
leave
inc
jae
int
jae
rol
inc
aad
jae
fld
inc
fld
inc
and
inc
and
inc
jae
sub
inc
jae
xor
inc
jae
cmp
inc
jae
add
inc
jae
or
inc
jae
adc
inc
jae
sbb
inc
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
inc
jae
inc
inc
jae
dec
inc
jae
dec
inc
jae
push
inc
jae
push
inc
jae
pop
inc
jae
pop
inc
jae
mov
inc
jae
test
inc
jae
mov
jae
mov
jae
mov
inc
jae
add
inc
mov
inc
lea
inc
xchg
inc
jae
xchg
inc
jae
cdq
inc
jae
popf
inc
jae
loope
jae
in
jae
jmp
inc
jae
icebp
inc
jae
cmc
inc
jae
stc
inc
jae
std
inc
jae
rol
lds
inc
leave
inc
jae
int
jae
rol
inc
aad
jae
fld
inc
fld
inc
and
inc
and
inc
jae
sub
inc
jae
xor
inc
jae
cmp
inc
jae
add
inc
jae
or
inc
jae
adc
inc
jae
sbb
inc
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
inc
jae
inc
inc
jae
dec
inc
jae
dec
inc
jae
push
inc
jae
push
inc
jae
pop
inc
jae
pop
inc
jae
mov
inc
jae
test
inc
jae
mov
jae
mov
jae
mov
inc
jae
add
inc
mov
inc
lea
inc
xchg
inc
jae
xchg
inc
jae
cdq
inc
jae
popf
inc
jae
loope
jae
in
jae
jmp
inc
jae
icebp
inc
jae
cmc
inc
jae
stc
inc
jae
std
inc
jae
rol
lds
inc
leave
inc
jae
int
jae
rol
inc
aad
jae
fld
inc
fld
inc
and
inc
and
inc
jae
sub
inc
jae
xor
inc
jae
cmp
inc
jae
add
inc
jae
or
inc
jae
adc
inc
jae
sbb
inc
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
inc
jae
inc
inc
jae
dec
inc
jae
dec
inc
jae
push
inc
jae
push
inc
jae
pop
inc
jae
pop
inc
jae
mov
inc
jae
test
inc
jae
mov
jae
mov
jae
mov
inc
jae
add
inc
mov
inc
lea
inc
xchg
inc
jae
xchg
inc
jae
cdq
inc
jae
popf
inc
jae
loope
jae
in
jae
jmp
inc
jae
icebp
inc
jae
cmc
inc
jae
stc
inc
jae
std
inc
jae
rol
lds
inc
leave
inc
jae
int
jae
rol
inc
aad
jae
fld
inc
fld
inc
and
inc
and
inc
jae
sub
inc
jae
xor
inc
jae
cmp
inc
jae
add
inc
jae
or
inc
jae
adc
inc
jae
sbb
inc
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
inc
jae
inc
inc
jae
dec
inc
jae
dec
inc
jae
push
inc
jae
push
inc
jae
pop
inc
jae
pop
inc
jae
mov
inc
jae
test
inc
jae
mov
jae
mov
jae
mov
inc
jae
add
inc
mov
inc
lea
inc
xchg
inc
jae
xchg
inc
jae
cdq
inc
jae
popf
inc
jae
loope
jae
in
jae
jmp
inc
jae
icebp
inc
jae
cmc
inc
jae
stc
inc
jae
std
inc
jae
rol
lds
inc
leave
inc
jae
int
jae
rol
inc
aad
jae
fld
inc
fld
inc
and
inc
and
inc
jae
sub
inc
jae
xor
inc
jae
cmp
inc
jae
add
inc
jae
or
inc
jae
adc
inc
jae
sbb
inc
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
inc
jae
inc
inc
jae
dec
inc
jae
dec
inc
jae
push
inc
jae
push
inc
jae
pop
inc
jae
pop
inc
jae
mov
inc
jae
test
inc
jae
mov
jae
mov
jae
mov
inc
jae
add
inc
mov
inc
lea
inc
xchg
inc
jae
xchg
inc
jae
cdq
inc
jae
popf
inc
jae
loope
jae
in
jae
jmp
inc
jae
icebp
inc
jae
cmc
inc
jae
stc
inc
jae
std
inc
jae
rol
lds
inc
leave
inc
jae
int
jae
rol
inc
aad
jae
fld
inc
fld
inc
and
and
inc
jae
sub
inc
jae
xor
inc
jae
cmp
inc
jae
add
inc
jae
or
inc
jae
adc
inc
jae
sbb
inc
jae
gs
jae
imul
jno
jae
jne
jae
jns
jae
jge
jae
inc
inc
jae
inc
inc
jae
dec
inc
jae
dec
inc
jae
push
inc
jae
push
inc
jae
pop
inc
jae
pop
inc
jae
mov
inc
jae
test
inc
jae
mov
jae
mov
jae
mov
inc
jae
add
mov
lea
xchg
inc
jae
xchg
inc
jae
cdq
inc
jae
popf
inc
jae
loope
jae
in
jae
jmp
inc
jae
icebp
inc
jae
cmc
inc
jae
stc
inc
jae
std
inc
jae
rol
inc
jae
leave
inc
jae
int
jae
rol
aad
jae
fld
fld
and
inc
and
inc
jae
sub
inc
jae
xor
inc
jae
cmp
inc
jae
add
inc
jae
or
inc
jae
adc
inc
jae
sbb
inc
jae
gs
jae
imul
inc
jno
jae
jne
jae
jns
jae
jge
jae
inc
inc
jae
inc
inc
jae
dec
inc
jae
dec
inc
jae
push
inc
jae
push
inc
jae
pop
inc
jae
pop
inc
jae
mov
inc
jae
test
inc
jae
mov
jae
mov
jae
mov
inc
jae
add
inc
mov
inc
lea
inc
xchg
inc
jae
xchg
inc
jae
cdq
inc
jae
popf
inc
jae
loope
jae
in
jae
jmp
inc
jae
icebp
inc
jae
cmc
inc
jae
stc
inc
jae
std
inc
jae
rol
lds
inc
leave
inc
jae
int
jae
rol
inc
aad
jae
fld
inc
fld
inc
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
sar
jb
fnstcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
sar
jb
fnstcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
sar
jb
fnstcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
sar
jb
fnstcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
sar
jb
fnstcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
sar
jb
fnstcw
jb
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
mov
jb
imul
inc
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
inc
lea
inc
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
inc
int
jb
sar
inc
fnstcw
inc
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
sar
jb
fnstcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
inc
gs
inc
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jb
mov
jb
mov
mov
inc
xor
jb
lea
jb
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jb
in
jb
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jb
shl
jb
fnstenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
inc
gs
inc
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jb
mov
jb
mov
mov
inc
xor
jb
lea
jb
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jb
in
jb
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jb
shl
jb
fnstenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
inc
gs
inc
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jb
mov
jb
mov
mov
inc
xor
jb
lea
jb
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jb
in
jb
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jb
shl
jb
fnstenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
inc
gs
inc
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jb
mov
jb
mov
mov
inc
xor
jb
lea
jb
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jb
in
jb
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jb
shl
jb
fnstenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
inc
gs
inc
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jb
mov
jb
mov
mov
inc
xor
jb
lea
jb
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jb
in
jb
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jb
shl
jb
fnstenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
inc
gs
inc
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jb
mov
jb
mov
mov
inc
xor
jb
lea
jb
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jb
in
jb
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jb
shl
jb
fnstenv
jb
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
mov
inc
gs
inc
imul
inc
jne
jb
jns
jb
jge
jb
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jb
mov
jb
mov
mov
inc
xor
inc
lea
inc
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jb
in
jb
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
leave
mov
inc
int
jb
shl
inc
fnstenv
inc
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
inc
gs
inc
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
inc
mov
inc
dec
mov
inc
dec
mov
inc
push
mov
inc
push
mov
inc
pop
mov
inc
pop
mov
inc
mov
mov
inc
test
mov
inc
mov
jb
mov
jb
mov
mov
inc
xor
jb
lea
jb
xchg
mov
inc
cdq
mov
inc
popf
mov
inc
loope
jb
in
jb
jmp
mov
inc
icebp
mov
inc
cmc
mov
inc
stc
mov
inc
std
mov
inc
shl
inc
leave
mov
inc
int
jb
shl
jb
fnstenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
stos
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
stos
jb
inc
stos
jb
dec
stos
jb
dec
stos
jb
push
stos
jb
push
stos
jb
pop
stos
jb
pop
stos
jb
mov
stos
jb
test
stos
jb
mov
jb
mov
jb
mov
stos
jb
sub
jb
lea
jb
xchg
stos
jb
cdq
stos
jb
popf
stos
jb
loope
jb
in
jb
jmp
stos
jb
icebp
stos
jb
cmc
stos
jb
stc
stos
jb
std
stos
jb
shr
inc
leave
stos
jb
int
jb
shr
jb
fldcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
stos
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
stos
jb
inc
stos
jb
dec
stos
jb
dec
stos
jb
push
stos
jb
push
stos
jb
pop
stos
jb
pop
stos
jb
mov
stos
jb
test
stos
jb
mov
jb
mov
jb
mov
stos
jb
sub
jb
lea
jb
xchg
stos
jb
cdq
stos
jb
popf
stos
jb
loope
jb
in
jb
jmp
stos
jb
icebp
stos
jb
cmc
stos
jb
stc
stos
jb
std
stos
jb
shr
inc
leave
stos
jb
int
jb
shr
jb
fldcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
test
inc
gs
inc
imul
jb
jne
jb
jns
jb
jge
jb
inc
test
inc
inc
test
inc
dec
test
inc
dec
test
inc
push
test
inc
push
test
inc
pop
test
inc
pop
test
inc
mov
test
inc
test
test
inc
mov
jb
mov
jb
mov
test
inc
sub
jb
lea
jb
xchg
test
inc
cdq
test
inc
popf
test
inc
loope
jb
in
jb
jmp
test
inc
icebp
test
inc
cmc
test
inc
stc
test
inc
std
test
inc
shr
inc
leave
test
inc
int
jb
shr
jb
fldcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
test
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
test
jb
dec
test
jb
push
test
jb
pop
test
jb
mov
test
jb
lods
test
jb
mov
jb
mov
test
jb
test
jb
lea
jb
xchg
test
jb
popf
test
jb
in
jb
jmp
test
jb
cmc
test
jb
std
test
jb
lds
jb
int
jb
shr
jb
fldcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
scas
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
scas
jb
inc
scas
jb
dec
scas
jb
dec
scas
jb
push
scas
jb
push
scas
jb
pop
scas
jb
pop
scas
jb
mov
scas
jb
test
scas
jb
mov
jb
mov
jb
mov
scas
jb
sub
jb
lea
jb
xchg
scas
jb
cdq
scas
jb
popf
scas
jb
loope
jb
in
jb
jmp
scas
jb
icebp
scas
jb
cmc
scas
jb
stc
scas
jb
std
scas
jb
shr
inc
leave
scas
jb
int
jb
shr
jb
fldcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
scas
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
scas
jb
inc
scas
jb
dec
scas
jb
dec
scas
jb
push
scas
jb
push
scas
jb
pop
scas
jb
pop
scas
jb
mov
scas
jb
test
scas
jb
mov
jb
mov
jb
mov
scas
jb
sub
jb
lea
jb
xchg
scas
jb
cdq
scas
jb
popf
scas
jb
loope
jb
in
jb
jmp
scas
jb
icebp
scas
jb
cmc
scas
jb
stc
scas
jb
std
scas
jb
shr
inc
leave
scas
jb
int
jb
shr
jb
fldcw
jb
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
lods
jb
lods
jb
imul
inc
jne
jb
jns
jb
jge
jb
inc
lods
jb
inc
lods
jb
dec
lods
jb
dec
lods
jb
push
lods
jb
push
lods
jb
pop
lods
jb
pop
lods
jb
mov
lods
jb
test
lods
jb
mov
jb
mov
jb
mov
lods
jb
sub
inc
lea
inc
xchg
lods
jb
cdq
lods
jb
popf
lods
jb
loope
jb
in
jb
jmp
lods
jb
icebp
lods
jb
cmc
lods
jb
stc
lods
jb
std
lods
jb
shr
leave
lods
jb
int
jb
shr
inc
fldcw
inc
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
lods
jb
lods
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
lods
jb
inc
lods
jb
dec
lods
jb
dec
lods
jb
push
lods
jb
push
lods
jb
pop
lods
jb
pop
lods
jb
mov
lods
jb
test
lods
jb
mov
jb
mov
jb
mov
lods
jb
sub
jb
lea
jb
xchg
lods
jb
cdq
lods
jb
popf
lods
jb
loope
jb
in
jb
jmp
lods
jb
icebp
lods
jb
cmc
lods
jb
stc
lods
jb
std
lods
jb
shr
inc
leave
lods
jb
int
jb
shr
jb
fldcw
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
shl
jb
fldenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
shl
jb
fldenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
shl
jb
fldenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
jb
dec
mov
jb
push
mov
jb
pop
mov
jb
mov
mov
jb
lods
mov
jb
mov
jb
mov
mov
jb
test
jb
lea
jb
xchg
mov
jb
popf
mov
jb
in
jb
jmp
mov
jb
cmc
mov
jb
std
mov
jb
lds
jb
int
jb
shl
jb
fldenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
cmps
jb
cmps
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
cmps
jb
inc
cmps
jb
dec
cmps
jb
dec
cmps
jb
push
cmps
jb
push
cmps
jb
pop
cmps
jb
pop
cmps
jb
mov
cmps
jb
test
cmps
jb
mov
jb
mov
jb
mov
cmps
jb
and
jb
lea
jb
xchg
cmps
jb
cdq
cmps
jb
popf
cmps
jb
loope
jb
in
jb
jmp
cmps
jb
icebp
cmps
jb
cmc
cmps
jb
stc
cmps
jb
std
cmps
jb
shl
inc
leave
cmps
jb
int
jb
shl
jb
fldenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
cmps
jb
cmps
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
cmps
jb
inc
cmps
jb
dec
cmps
jb
dec
cmps
jb
push
cmps
jb
push
cmps
jb
pop
cmps
jb
pop
cmps
jb
mov
cmps
jb
test
cmps
jb
mov
jb
mov
jb
mov
cmps
jb
and
jb
lea
jb
xchg
cmps
jb
cdq
cmps
jb
popf
cmps
jb
loope
jb
in
jb
jmp
cmps
jb
icebp
cmps
jb
cmc
cmps
jb
stc
cmps
jb
std
cmps
jb
shl
inc
leave
cmps
jb
int
jb
shl
jb
fldenv
jb
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
movs
jb
movs
jb
imul
inc
jne
jb
jns
jb
jge
jb
inc
movs
jb
inc
movs
jb
dec
movs
jb
dec
movs
jb
push
movs
jb
push
movs
jb
pop
movs
jb
pop
movs
jb
mov
movs
jb
test
movs
jb
mov
jb
mov
jb
mov
movs
jb
and
inc
lea
inc
xchg
movs
jb
cdq
movs
jb
popf
movs
jb
loope
jb
in
jb
jmp
movs
jb
icebp
movs
jb
cmc
movs
jb
stc
movs
jb
std
movs
jb
shl
leave
movs
jb
int
jb
shl
inc
fldenv
inc
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
movs
jb
movs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
movs
jb
inc
movs
jb
dec
movs
jb
dec
movs
jb
push
movs
jb
push
movs
jb
pop
movs
jb
pop
movs
jb
mov
movs
jb
test
movs
jb
mov
jb
mov
jb
mov
movs
jb
and
jb
lea
jb
xchg
movs
jb
cdq
movs
jb
popf
movs
jb
loope
jb
in
jb
jmp
movs
jb
icebp
movs
jb
cmc
movs
jb
stc
movs
jb
std
movs
jb
shl
inc
leave
movs
jb
int
jb
shl
jb
fldenv
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
call
imul
jb
jne
jb
jns
jb
jge
jb
inc
call
dec
call
push
call
pop
call
mov
call
lods
call
mov
jb
mov
call
test
jb
lea
jb
xchg
call
popf
call
in
jb
jmp
call
cmc
call
std
call
lds
jb
int
jb
rcr
jb
fstp
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
fwait
jb
in
inc
inc
out
ins
inc
outs
dec
mov
xchg
fsubp
imul
jb
inc
fwait
jb
inc
fwait
jb
dec
fwait
jb
dec
fwait
jb
push
fwait
jb
push
fwait
jb
pop
fwait
jb
pop
fwait
jb
mov
fwait
jb
test
fwait
jb
mov
jb
mov
jb
mov
fwait
jb
sbb
jb
lea
jb
xchg
fwait
jb
cdq
fwait
jb
popf
fwait
jb
loope
jb
in
jb
jmp
fwait
jb
icebp
fwait
jb
cmc
fwait
jb
stc
fwait
jb
std
fwait
jb
rcr
inc
leave
fwait
jb
int
jb
rcr
jb
fstp
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
cwde
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
cwde
jb
inc
cwde
jb
dec
cwde
jb
dec
cwde
jb
push
cwde
jb
push
cwde
jb
pop
cwde
jb
pop
cwde
jb
mov
cwde
jb
test
cwde
jb
mov
jb
mov
jb
mov
cwde
jb
sbb
jb
lea
jb
xchg
cwde
jb
cdq
cwde
jb
popf
cwde
jb
loope
jb
in
jb
jmp
cwde
jb
icebp
cwde
jb
cmc
cwde
jb
stc
cwde
jb
std
cwde
jb
rcr
inc
leave
cwde
jb
int
jb
rcr
jb
fstp
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
cdq
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
cdq
jb
inc
cdq
jb
dec
cdq
jb
dec
cdq
jb
push
cdq
jb
push
cdq
jb
pop
cdq
jb
pop
cdq
jb
mov
cdq
jb
test
cdq
jb
mov
jb
mov
jb
mov
cdq
jb
sbb
jb
lea
jb
xchg
cdq
jb
cdq
cdq
jb
popf
cdq
jb
loope
jb
in
jb
jmp
cdq
jb
icebp
cdq
jb
cmc
cdq
jb
stc
cdq
jb
std
cdq
jb
rcr
inc
leave
cdq
jb
int
jb
rcr
jb
fstp
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
sahf
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
sahf
jb
inc
sahf
jb
dec
sahf
jb
dec
sahf
jb
push
sahf
jb
push
sahf
jb
pop
sahf
jb
pop
sahf
jb
mov
sahf
jb
test
sahf
jb
mov
jb
mov
jb
mov
sahf
jb
sbb
jb
lea
jb
xchg
sahf
jb
cdq
sahf
jb
popf
sahf
jb
loope
jb
in
jb
jmp
sahf
jb
icebp
sahf
jb
cmc
sahf
jb
stc
sahf
jb
std
sahf
jb
rcr
inc
leave
sahf
jb
int
jb
rcr
jb
fstp
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
lahf
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
lahf
jb
inc
lahf
jb
dec
lahf
jb
dec
lahf
jb
push
lahf
jb
push
lahf
jb
pop
lahf
jb
pop
lahf
jb
mov
lahf
jb
test
lahf
jb
mov
jb
mov
jb
mov
lahf
jb
sbb
jb
lea
jb
xchg
lahf
jb
cdq
lahf
jb
popf
lahf
jb
loope
jb
in
jb
jmp
lahf
jb
icebp
lahf
jb
cmc
lahf
jb
stc
lahf
jb
std
lahf
jb
rcr
inc
leave
lahf
jb
int
jb
rcr
jb
fstp
jb
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
pushf
jb
gs
jb
imul
inc
jne
jb
jns
jb
jge
jb
inc
pushf
jb
inc
pushf
jb
dec
pushf
jb
dec
pushf
jb
push
pushf
jb
push
pushf
jb
pop
pushf
jb
pop
pushf
jb
mov
pushf
jb
test
pushf
jb
mov
jb
mov
jb
mov
pushf
jb
sbb
inc
lea
inc
xchg
pushf
jb
cdq
pushf
jb
popf
pushf
jb
loope
jb
in
jb
jmp
pushf
jb
icebp
pushf
jb
cmc
pushf
jb
stc
pushf
jb
std
pushf
jb
rcr
leave
pushf
jb
int
jb
rcr
inc
fstp
inc
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
popf
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
popf
jb
inc
popf
jb
dec
popf
jb
dec
popf
jb
push
popf
jb
push
popf
jb
pop
popf
jb
pop
popf
jb
mov
popf
jb
test
popf
jb
mov
jb
mov
jb
mov
popf
jb
sbb
jb
lea
jb
xchg
popf
jb
cdq
popf
jb
popf
popf
jb
loope
jb
in
jb
jmp
popf
jb
icebp
popf
jb
cmc
popf
jb
stc
popf
jb
std
popf
jb
rcr
inc
leave
popf
jb
int
jb
rcr
jb
fstp
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
xchg
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
xchg
jb
inc
xchg
jb
dec
xchg
jb
dec
xchg
jb
push
xchg
jb
push
xchg
jb
pop
xchg
jb
pop
xchg
jb
mov
xchg
jb
test
xchg
jb
mov
jb
mov
jb
mov
xchg
jb
adc
jb
lea
jb
xchg
xchg
jb
cdq
xchg
jb
popf
xchg
jb
loope
jb
in
jb
jmp
xchg
jb
icebp
xchg
jb
cmc
xchg
jb
stc
xchg
jb
std
xchg
jb
rcl
inc
leave
xchg
jb
int
jb
rcl
jb
fst
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
xchg
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
xchg
jb
inc
xchg
jb
dec
xchg
jb
dec
xchg
jb
push
xchg
jb
push
xchg
jb
pop
xchg
jb
pop
xchg
jb
mov
xchg
jb
test
xchg
jb
mov
jb
mov
jb
mov
xchg
jb
adc
jb
lea
jb
xchg
xchg
jb
cdq
xchg
jb
popf
xchg
jb
loope
jb
in
jb
jmp
xchg
jb
icebp
xchg
jb
cmc
xchg
jb
stc
xchg
jb
std
xchg
jb
rcl
inc
leave
xchg
jb
int
jb
rcl
jb
fst
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
nop
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
nop
jb
inc
nop
jb
dec
nop
jb
dec
nop
jb
push
nop
jb
push
nop
jb
pop
nop
jb
pop
nop
jb
mov
nop
jb
test
nop
jb
mov
jb
mov
jb
mov
nop
jb
adc
jb
lea
jb
xchg
nop
jb
cdq
nop
jb
popf
nop
jb
loope
jb
in
jb
jmp
nop
jb
icebp
nop
jb
cmc
nop
jb
stc
nop
jb
std
nop
jb
rcl
inc
leave
nop
jb
int
jb
rcl
jb
fst
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
xchg
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
xchg
jb
inc
xchg
jb
dec
xchg
jb
dec
xchg
jb
push
xchg
jb
push
xchg
jb
pop
xchg
jb
pop
xchg
jb
mov
xchg
jb
test
xchg
jb
mov
jb
mov
jb
mov
xchg
jb
adc
jb
lea
jb
xchg
xchg
jb
cdq
xchg
jb
popf
xchg
jb
loope
jb
in
jb
jmp
xchg
jb
icebp
xchg
jb
cmc
xchg
jb
stc
xchg
jb
std
xchg
jb
rcl
inc
leave
xchg
jb
int
jb
rcl
jb
fst
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
xchg
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
xchg
jb
inc
xchg
jb
dec
xchg
jb
dec
xchg
jb
push
xchg
jb
push
xchg
jb
pop
xchg
jb
pop
xchg
jb
mov
xchg
jb
test
xchg
jb
mov
jb
mov
jb
mov
xchg
jb
adc
jb
lea
jb
xchg
xchg
jb
cdq
xchg
jb
popf
xchg
jb
loope
jb
in
jb
jmp
xchg
jb
icebp
xchg
jb
cmc
xchg
jb
stc
xchg
jb
std
xchg
jb
rcl
inc
leave
xchg
jb
int
jb
rcl
jb
fst
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
xchg
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
xchg
jb
inc
xchg
jb
dec
xchg
jb
dec
xchg
jb
push
xchg
jb
push
xchg
jb
pop
xchg
jb
pop
xchg
jb
mov
xchg
jb
test
xchg
jb
mov
jb
mov
jb
mov
xchg
jb
adc
jb
lea
jb
xchg
xchg
jb
cdq
xchg
jb
popf
xchg
jb
loope
jb
in
jb
jmp
xchg
jb
icebp
xchg
jb
cmc
xchg
jb
stc
xchg
jb
std
xchg
jb
rcl
inc
leave
xchg
jb
int
jb
rcl
jb
fst
jb
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
xchg
jb
gs
jb
imul
inc
jne
jb
jns
jb
jge
jb
inc
xchg
jb
inc
xchg
jb
dec
xchg
jb
dec
xchg
jb
push
xchg
jb
push
xchg
jb
pop
xchg
jb
pop
xchg
jb
mov
xchg
jb
test
xchg
jb
mov
jb
mov
jb
mov
xchg
jb
adc
inc
lea
inc
xchg
xchg
jb
cdq
xchg
jb
popf
xchg
jb
loope
jb
in
jb
jmp
xchg
jb
icebp
xchg
jb
cmc
xchg
jb
stc
xchg
jb
std
xchg
jb
rcl
leave
xchg
jb
int
jb
rcl
inc
fst
inc
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
xchg
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
xchg
jb
inc
xchg
jb
dec
xchg
jb
dec
xchg
jb
push
xchg
jb
push
xchg
jb
pop
xchg
jb
pop
xchg
jb
mov
xchg
jb
test
xchg
jb
mov
jb
mov
jb
mov
xchg
jb
adc
jb
lea
jb
xchg
xchg
jb
cdq
xchg
jb
popf
xchg
jb
loope
jb
in
jb
jmp
xchg
jb
icebp
xchg
jb
cmc
xchg
jb
stc
xchg
jb
std
xchg
jb
rcl
inc
leave
xchg
jb
int
jb
rcl
jb
fst
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
mov
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jb
mov
jb
mov
mov
or
jb
lea
jb
xchg
mov
cdq
mov
popf
mov
loope
jb
in
jb
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
inc
leave
mov
int
jb
ror
jb
(bad)
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
mov
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jb
mov
jb
mov
mov
or
jb
lea
jb
xchg
mov
cdq
mov
popf
mov
loope
jb
in
jb
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
inc
leave
mov
int
jb
ror
jb
(bad)
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
mov
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jb
mov
jb
mov
mov
or
jb
lea
jb
xchg
mov
cdq
mov
popf
mov
loope
jb
in
jb
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
inc
leave
mov
int
jb
ror
jb
(bad)
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
mov
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jb
mov
jb
mov
mov
or
jb
lea
jb
xchg
mov
cdq
mov
popf
mov
loope
jb
in
jb
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
inc
leave
mov
int
jb
ror
jb
(bad)
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
mov
mov
imul
jb
jne
jb
jns
jb
jge
jb
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jb
mov
jb
mov
mov
or
jb
lea
jb
xchg
mov
cdq
mov
popf
mov
loope
jb
in
jb
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
inc
leave
mov
int
jb
ror
jb
(bad)
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
(bad)
jb
gs
jb
imul
jb
jne
jb
jns
jb
jge
jb
inc
(bad)
jb
inc
(bad)
jb
dec
(bad)
jb
dec
(bad)
jb
push
(bad)
jb
push
(bad)
jb
pop
(bad)
jb
pop
(bad)
jb
mov
(bad)
jb
test
(bad)
jb
mov
jb
mov
jb
mov
(bad)
jb
or
jb
lea
jb
xchg
(bad)
jb
cdq
(bad)
jb
popf
(bad)
jb
loope
jb
in
jb
jmp
(bad)
jb
icebp
(bad)
jb
cmc
(bad)
jb
stc
(bad)
jb
std
(bad)
jb
ror
inc
leave
(bad)
jb
int
jb
ror
jb
(bad)
jb
and
inc
sub
inc
xor
inc
cmp
inc
add
inc
or
inc
adc
inc
sbb
inc
popa
mov
mov
imul
inc
jne
jb
jns
jb
jge
jb
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
mov
mov
test
mov
mov
jb
mov
jb
mov
mov
or
inc
lea
inc
xchg
mov
cdq
mov
popf
mov
loope
jb
in
jb
jmp
mov
icebp
mov
cmc
mov
stc
mov
std
mov
ror
leave
mov
int
jb
ror
inc
(bad)
inc
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
lea
lea
imul
jb
jne
jb
jns
jb
jge
jb
inc
lea
inc
lea
dec
lea
dec
lea
push
lea
push
lea
pop
lea
pop
lea
mov
lea
test
lea
mov
jb
mov
jb
mov
lea
or
jb
lea
jb
xchg
lea
cdq
lea
popf
lea
loope
jb
in
jb
jmp
lea
icebp
lea
cmc
lea
stc
lea
std
lea
ror
inc
leave
lea
int
jb
ror
jb
(bad)
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
xor
imul
jb
jne
jb
jns
jb
jge
jb
inc
xor
dec
xor
push
xor
pop
xor
mov
xor
lods
xor
mov
jb
mov
xor
test
jb
lea
jb
xchg
xor
popf
xor
in
jb
jmp
xor
cmc
xor
std
xor
lds
jb
int
jb
rol
jb
fld
jb
and
jb
sub
jb
xor
jb
cmp
jb
add
jb
or
jb
adc
jb
sbb
jb
popa
xchg
xchg
imul
jb
jne
jb
jns
jb
jge
jb
inc
xchg
inc
xchg
dec
xchg
dec
xchg
push
xchg
push
xchg
pop
xchg
pop
xchg
mov
xchg
test
xchg
mov
jb
mov
jb
mov
xchg
add
jb
lea
jb
xchg
xchg
cdq
xchg
popf
xchg
loope
jb
in
jb
jmp
xchg
icebp
xchg
cmc
xchg
stc
xchg
std
xchg
rol
inc
leave
xchg
int
jb
rol
jb
pop
jbe
inc
(bad)
fcomi
(bad)
pop
dec
sub
(bad)
(bad)
mov
inc
and
lock
xor
hlt
les
and
xor
(bad)
mov
add
aad
mov
pop
inc
and
sub
ret
movs
and
mov
popa
xor
mov
dec
dec
sub
int
mov
or
fwait
pushf
mov
cmp
retf
out
pop
js
pop
cmp
cld
(bad)
mov
sbb
sbb
fcmovnb
fidiv
mov
inc
test
xchg
test
js
fidiv
mov
test
in
adc
mov
ret
inc
daa
xor
or
add
mul
fs
(bad)
mov
sub
and
enter
jnp
(bad)
jmp
test
iret
leave
stos
arpl
fnstsw
mov
sbb
sbb
sahf
dec
pop
das
(bad)
(bad)
fnsave
(bad)
int
mov
or
xlat
lahf
mov
cmp
leave
leave
stos
sahf
pop
js
adc
out
cld
test
cmp
push
dec
pop
das
cmp
(bad)
mov
inc
adc
sbb
lea
xor
movs
(bad)
fidiv
outs
xor
ret
addr16
push
push
jecxz
loope
xchg
inc
daa
xor
shl
loopne
test
and
or
dec
dec
sub
ins
jnp
or
jmp
in
sub
stos
pop
pop
jg
lods
cmp
cld
push
mov
sbb
int
pop
das
mov
clc
fld
mov
inc
cdq
or
out
jno
test
sub
fidiv
repnz
ret
call
icebp
mov
mov
daa
xor
pop
mov
out
xor
and
pop
push
std
mov
and
and
enter
jbe
or
mov
jns
sub
test
sub
mov
or
dec
dec
dec
sub
fprem
fld
or
out
cli
cdq
mov
add
push
inc
pop
jnp
jmp
loopne
call
lock
xor
pop
xor
mov
dec
add
cmc
mov
pusha
xor
lahf
shl
inc
and
(bad)
(bad)
mov
add
inc
jecxz
mov
jl
ss
int
test
mov
lea
push
jmp
sub
mov
or
jbe
mov
cmp
retf
fldcw
div
cdq
outs
adc
xor
aam
fisub
je
int3
push
sbb
sub
xchg
jo
add
shl
int
icebp
(bad)
push
and
stc
lahf
mov
outs
add
adc
jb
cmp
test
mov
sbb
or
sub
and
ins
jnp
ja
jmp
cs
mov
stos
mov
inc
out
cld
in
cdq
outs
or
sbb
xor
das
pop
stos
(bad)
retf
jo
sbb
lods
jmp
sahf
sbb
xor
test
inc
and
hlt
ret
addr16
push
mov
out
ds
xor
xor
jno
cmps
inc
loopne
dec
in
and
or
mov
sub
ins
jnp
jb
jmp
lds
sub
stos
aas
and
mov
cld
test
test
das
shl
imul
sbb
adc
test
or
inc
pop
ror
ret
call
(bad)
mov
xchg
ds
xor
mov
jg
cmc
aam
and
pop
inc
inc
and
pop
repnz
jbe
jae
jmp
pop
add
test
or
(bad)
sub
mov
jno
fidiv
clc
fucom
les
jne
sbb
call
add
sub
pop
dec
jmp
sar
jo
push
push
mov
pop
xor
mov
stos
jg
cmc
inc
jmp
xor
jg
cmps
mov
sub
and
pop
icebp
(bad)
ss
clc
ins
add
pusha
popf
mov
ret
ss
int3
test
add
imul
sub
int
les
div
jmp
cs
mov
scas
bound
js
xlat
dec
jmp
dec
cmc
cdq
outs
mov
mov
xor
stos
(bad)
into
je
sub
sbb
int3
jmp
jecxz
cmps
mov
sub
sub
cld
addr16
outs
add
fstp
and
xor
jb
sbb
imul
lock
push
xor
leave
sub
inc
mov
ins
jnp
jne
jmp
cs
mov
stos
fisub
pop
push
inc
out
cld
(bad)
outs
sub
lahf
mov
das
jns
(bad)
enter
jnp
lock
jmp
xor
fs
inc
and
cld
addr16
push
jecxz
popf
mov
iret
cmp
xor
adc
jno
xchg
imul
and
or
mov
sub
pop
repnz
jnp
jo
jmp
movs
add
stos
pop
and
in
inc
out
cld
inc
cmc
mov
cmp
lea
pop
das
repnz
clc
fld
imul
sbb
xor
test
call
sub
xor
mov
imul
out
mov
jae
daa
xor
popf
fdiv
pop
jge
cmc
hlt
out
and
pop
fiadd
inc
and
pop
repnz
jbe
jno
jmp
cmp
sub
test
ins
inc
in
sti
cli
hlt
mov
bound
or
push
xor
sub
clc
ffree
(bad)
outs
jl
ja
out
mov
or
add
fldcw
mov
cli
call
shr
scas
fldcw
xchg
dec
jmp
or
call
mov
(bad)
xor
mov
add
gs
aad
and
jl
inc
and
push
mov
jae
and
jg
mov
inc
adc
cmp
push
aad
movs
push
adc
xor
pop
xchg
xor
sbb
xor
sbb
xor
adc
xor
or
hlt
fiadd
lods
je
cmp
je
js
je
je
je
jo
je
ins
in
je
push
in
je
pusha
in
je
sbb
je
sbb
je
adc
hlt
sbb
in
xor
dec
ins
xor
dec
lods
mov
inc
lods
je
inc
lods
je
cmp
mov
js
xor
je
xor
jo
xor
ins
lods
je
push
in
xor
pusha
lods
xor
pushf
lods
xor
cwde
lods
xor
xchg
lods
xor
nop
lods
xor
mov
xor
test
xor
mov
lods
xor
mov
je
lock
je
in
in
neg
push
imul
popf
pop
ja
dec
dec
es
xchg
fild
sbb
ret
cdq
int
cmc
fcmovnb
lods
je
sub
pop
mov
in
hlt
sbb
ins
je
lock
xor
in
lods
xor
call
in
je
mov
in
xor
sbb
sbb
lods
xor
or
xor
or
sbb
lods
xor
cmp
xor
cmp
sbb
lods
xor
sub
xor
sub
dec
pusha
in
push
into
adc
pop
mov
mov
fcom
or
in
aad
rcl
out
or
sti
cwde
mov
in
push
mov
fdivr
mov
in
ins
je
and
je
and
ficomp
in
je
shr
xor
int3
in
xor
mov
sbb
lods
xor
mov
lods
xor
mov
xor
lods
lods
xor
test
xor
movs
lods
xor
mov
lods
je
fsubr
hlt
pop
xchg
lods
(bad)
cmps
dec
mov
sub
mov
pop
fucom
jmp
xor
lds
adc
movs
push
int3
retf
cmp
push
mov
jns
ja
or
pop
mov
pop
push
jmp
or
xor
add
je
inc
out
xor
jl
xor
cmp
xor
xor
je
push
scas
xor
and
xor
pop
scas
xor
push
scas
xor
push
outs
je
or
das
movs
push
inc
mov
ret
and
adc
(bad)
imul
loopne
cmp
pop
xor
test
sub
nop
movs
and
xor
pop
mov
and
outs
mov
jnp
ds
mov
nop
mov
mov
clc
icebp
pop
mov
je
clc
outs
je
je
je
mov
hlt
sbb
out
xor
test
xor
movs
scas
xor
mov
scas
xor
fsubr
xor
shr
xor
enter
les
je
mov
scas
sub
jl
jb
dec
mov
mov
and
cmp
push
push
adc
pop
dec
mov
and
mov
dec
lds
jle
adc
ds
mov
xchg
fs
jno
jle
aas
sub
sbb
mov
scas
xor
loopne
xor
pop
scas
xor
pop
scas
xor
push
scas
xor
push
scas
xor
dec
scas
xor
dec
scas
xor
inc
scas
xor
inc
scas
xor
jl
xor
js
xor
je
xor
xor
or
loope
aaa
and
dec
sub
jno
stos
cmp
push
sub
mov
mov
sahf
movs
test
movs
xor
add
mov
mov
(bad)
mov
test
movs
pop
xor
retf
daa
push
and
je
fsub
mov
push
out
hlt
sbb
je
enter
test
xor
shr
sbb
scas
xor
hlt
scas
xor
lock
xor
in
scas
xor
call
outs
xor
mov
movs
retf
xchg
or
sti
sbb
fdivp
in
mov
pusha
and
in
repz
iret
push
in
fdivr
pop
cmp
xchg
or
imul
xchg
ins
test
jmp
cmp
test
scas
call
gs
jp
or
pop
cmp
(bad)
xor
add
loope
sbb
xor
je
xor
jo
xor
sub
xor
push
mov
xor
pushf
mov
je
aam
xor
push
loope
in
stos
retf
adc
and
test
or
clc
pop
cmc
in
jno
or
fdivp
in
xor
add
sahf
mov
rol
scas
push
fistp
or
push
sahf
jg
jnp
or
neg
mov
ins
cmp
loopne
je
lods
loope
pop
call
mov
xor
pop
mov
xor
adc
xor
adc
xor
or
neg
cmps
mov
dec
sub
jns
je
hlt
in
out
or
and
hlt
in
outs
dec
retf
outs
mov
mul
inc
movs
arpl
xor
retf
dec
pop
push
jg
(bad)
cmp
add
ins
outs
push
mov
jg
retf
jp
sub
push
es
mov
sar
push
jno
pop
xor
loopne
ficom
ficom
mov
xor
test
xor
mov
mov
mov
mov
cmc
and
fs
call
mov
sbb
dec
xchg
fsubp
in
mov
retf
push
push
mov
repnz
mov
dec
lods
gs
fbstp
lahf
jl
maskmovq
xor
mov
cli
or
cmp
mov
add
(bad)
cwde
sbb
fistp
cmp
mov
xor
add
xor
cmp
xor
xor
xor
sub
repnz
loopne
je
jecxz
retf
push
adc
mov
movs
scas
das
dec
xchg
shl
and
mov
fidivr
mov
movs
and
pop
repz
mov
shl
dec
dec
mov
fdiv
in
test
rcr
inc
enter
inc
pop
std
in
jnp
mov
stos
and
or
xor
push
xor
je
xor
mov
xor
lods
mov
xor
movs
mov
xor
fsub
je
aam
xor
sar
xor
xchg
ret
mov
xor
mov
mov
je
retf
scas
dec
xchg
jge
jp
in
pushf
xor
xchg
lods
dec
dec
xor
and
and
xchg
loop
sbb
(bad)
movs
cs
dec
pop
cmps
in
push
dec
popf
jl
cmp
add
pop
cld
and
mov
(bad)
in
mov
je
(bad)
mov
je
sbb
xor
push
mov
xor
dec
mov
je
inc
loop
sbb
xor
push
jae
jle
xor
je
push
test
cmp
fdiv
in
outs
dec
xchg
in
mov
hlt
and
call
and
(bad)
arpl
sbb
or
outs
popa
pusha
(bad)
(bad)
and
daa
movs
bound
jmp
mov
dec
repz
fucomp
pop
mov
dec
add
hlt
pop
nop
loop
pop
int3
mov
xor
les
xor
cld
mov
je
hlt
loop
pop
jo
jne
xchg
scas
dec
adc
and
fisub
daa
fisubr
mov
xchg
and
hlt
movs
test
and
pop
dec
call
or
call
or
pop
mul
dec
push
std
daa
data16
ins
sbb
sbb
popa
pop
fwait
sbb
mov
ins
popa
popf
xchg
pop
repz
ret
fisubr
hlt
pop
add
xor
jl
xor
js
xor
je
xor
jo
xor
ins
movs
xor
push
in
pop
and
xor
rcl
in
ficom
mov
jmp
mov
add
sahf
xor
mov
in
pop
mov
sub
sbb
xor
xchg
sub
es
mov
pop
stos
or
movs
gs
fstp
imul
inc
daa
popa
sbb
call
push
in
popa
pushf
dec
fdiv
lea
aam
call
xor
call
movs
xor
mov
movs
xor
sbb
sbb
in
dec
rol
in
pop
test
arpl
or
fstp
outs
or
in
(bad)
push
sti
pop
mov
imul
xchg
movs
sti
ficom
in
stos
or
dec
fwait
mov
cli
mov
mov
cmps
out
jle
mov
(bad)
jno
push
mov
sbb
iret
jl
mov
(bad)
mov
xor
cwde
movs
xor
xchg
movs
xor
nop
movs
xor
mov
sbb
cmc
in
and
sbb
hlt
mov
imul
call
retf
push
imul
fwait
sbb
mov
out
retf
adc
movs
cmp
sbb
lds
add
hlt
in
push
adc
mov
jmp
sub
xor
and
movs
(bad)
loope
je
into
or
sbb
dec
in
xor
or
xor
or
xor
add
xor
cmp
xor
jo
xor
sbb
fs
mov
pop
pusha
mov
pop
push
cmc
daa
sub
mov
mov
retf
xchg
or
fiadd
push
stc
call
mov
sub
and
cs
cli
ficomp
cmps
and
dec
retf
pop
daa
fst
lock
xor
and
jmp
je
mov
cmps
xor
mov
xor
lods
cmps
xor
test
xor
movs
out
pop
and
xor
pop
addr16
frstor
xor
stos
pusha
or
or
mov
out
cs
push
or
call
jl
jne
inc
jmp
xchg
cmp
hlt
movs
xchg
test
(bad)
out
call
retf
cmps
cli
sbb
fnstenv
pop
mov
fnstenv
push
and
sbb
and
fs
lock
mov
pop
imul
sub
xor
and
xor
and
xor
pop
cmps
xor
push
cmps
hlt
pop
shl
rcr
daa
xor
pop
hlt
mov
cli
cmps
xor
or
dec
sar
sbb
xlat
jmp
mov
push
js
xchg
cdq
hlt
and
add
mov
out
test
mov
jmp
cli
call
iret
dec
clc
movs
pusha
pop
out
xor
pop
cmps
xor
fsub
xor
shl
je
mov
xor
test
sbb
cmps
je
cmp
cmps
pop
clc
data16
pop
je
int3
mov
jb
test
xor
adc
nop
call
inc
hlt
movs
addr16
aam
cmp
fcmovbe
push
hlt
movs
jae
mov
jns
call
enter
data16
inc
mov
enter
and
cmc
and
jmp
mov
and
test
or
addr16
xchg
add
(bad)
hlt
je
or
xor
dec
mov
xor
inc
mov
je
cmp
hlt
pop
xor
hlt
sbb
mov
neg
and
daa
pushf
dec
pop
mov
xor
jecxz
mov
cmp
sbb
movs
div
push
mov
fiadd
hlt
movs
ret
jbe
mov
push
icebp
ins
or
mov
cmp
push
mov
call
fistp
call
and
and
sbb
out
pop
xchg
fbstp
xor
cld
stc
xor
clc
mov
xor
lock
je
test
hlt
pop
movs
jns
sbb
mov
cmc
sbb
js
fcmovbe
js
jmp
retf
fimul
xor
mov
clc
jg
mov
je
push
cmp
mov
in
aaa
retf
cmp
pop
and
aas
mov
pop
pop
shl
retf
ret
fmul
sub
fld
lock
stos
mov
std
pop
mov
jbe
and
xor
push
mov
xor
pushf
mov
xor
aam
je
sar
xor
int3
clc
xor
mov
xor
(bad)
clc
je
cmp
pop
jge
mov
cmp
(bad)
xchg
ja
ds
add
mov
imul
hlt
in
sub
dec
mov
je
nop
clc
je
mov
xor
mov
cmc
jae
jl
dec
dec
jnp
pop
js
mul
or
mov
repnz
in
retf
dec
cmp
or
sbb
pop
popf
sti
xor
sbb
xor
adc
xor
or
je
inc
sti
je
jl
je
js
je
xor
xor
xor
lock
jae
fsub
jnp
call
mov
cmp
movs
mov
or
cmp
pop
add
hlt
pop
add
je
js
jne
xor
out
mov
fild
outs
dec
mov
jg
fbld
or
mov
cmc
pop
sar
fimul
pop
dec
mov
xor
cmp
sbb
mov
je
lods
mov
hlt
sbb
sbb
mov
ss
sbb
hlt
movs
jbe
dec
dec
adc
loop
rol
and
psraw
cwde
aaa
sub
hlt
sbb
jnp
sbb
jnp
sbb
sti
mov
pop
jae
gs
dec
cmovno
mov
jae
push
adc
hlt
call
xor
cmp
xor
xor
xor
sub
xor
and
xor
sbb
sbb
cli
xor
push
cli
mov
mov
mov
pop
aas
dec
adc
jp
(bad)
lds
xor
out
sbb
les
add
jge
lahf
loopne
jbe
out
jle
pop
sbb
mov
fnstcw
call
mov
int3
cli
mov
sar
int3
xchg
arpl
add
mov
repnz
hlt
call
je
test
xor
movs
mov
xor
fdivr
xor
aam
xor
sar
je
mov
xor
les
xor
fstp
jl
xchg
sti
cli
cmp
in
inc
hlt
in
stos
dec
dec
mov
jecxz
movs
add
or
cmp
punpckhdq
sbb
xor
add
xor
inc
cmp
mov
js
add
pop
mov
ss
xor
fisubr
mov
xor
pop
mov
xor
push
mov
xor
dec
mov
xor
inc
mov
je
cmp
je
cmp
xor
je
hlt
sbb
hlt
pop
in
std
mov
call
mov
std
cmp
inc
hlt
movs
out
enter
fcom
sar
ja
or
add
das
push
movs
jnp
fwait
cli
std
xor
mov
hlt
pop
mov
hlt
fisubr
fisubr
mov
je
fdivr
pop
sbb
xor
sar
xor
enter
les
xor
cld
mov
xor
hlt
mov
xor
in
mov
xor
in
hlt
sbb
mov
repz
xor
fistp
and
lea
xlat
add
iret
test
std
movs
mov
dec
idiv
cdq
outs
xor
fs
xor
pop
mov
je
xchg
cld
xor
adc
hlt
sbb
je
dec
cld
je
add
xor
inc
mov
xor
js
xor
je
xor
jo
xor
ins
mov
xor
fs
xor
pushf
mov
xor
xchg
mov
jge
mov
movs
sti
xor
bsf
sahf
cmp
cmps
mov
mov
mov
movs
push
and
rdpmc
add
or
pop
mov
pop
cmp
sbb
cld
xor
int3
mov
xor
les
pop
cld
mov
xor
hlt
mov
xor
in
mov
xor
in
xor
loopne
xor
sbb
je
pop
push
push
mov
xor
or
xor
or
sbb
je
inc
mov
cmp
mov
xor
dec
jge
add
xchg
pop
in
or
je
sub
and
dec
test
in
pusha
mov
mov
jne
(bad)
xor
inc
aas
xor
cmp
xor
js
xor
je
xor
jo
xor
ins
mov
xor
fs
xor
fdivr
xor
xchg
mov
xor
mov
xor
test
je
cld
push
mov
xor
lock
fwait
sub
out
mov
xor
or
xchg
movs
jecxz
mov
jmp
or
add
mov
mul
aaa
in
sub
stos
cmp
sbb
add
cmp
pop
xor
pop
lods
push
call
mov
je
pop
(bad)
xor
pop
mov
xor
adc
xor
or
xor
add
xor
cmp
je
jo
je
ins
(bad)
je
push
(bad)
je
pusha
inc
adc
xor
les
cmp
inc
add
aas
mov
dec
xchg
mov
and
jg
das
mov
movs
retf
call
cmp
mov
popa
mov
je
pushf
(bad)
xor
cwde
mov
je
sar
je
int3
(bad)
xor
enter
test
xor
mov
mov
xor
mov
xor
lods
mov
xor
movs
mov
xor
fdivr
xor
aam
mov
nop
mov
cld
fimul
je
mov
jg
cdq
mov
fld
outs
xchg
out
or
push
daa
pop
cmps
mov
add
jg
pop
xchg
mov
push
mov
pop
shl
pop
or
mov
sbb
xor
add
xor
js
xor
xor
xor
xor
xor
sub
xor
and
xor
pop
mov
sbb
sbb
xor
dec
mov
sbb
xor
inc
mov
pop
inc
mov
pop
mov
dec
mov
leave
mov
sar
xor
pop
lods
sahf
mov
xchg
cmp
je
out
fsubp
(bad)
mul
dec
mov
mov
inc
adc
mov
xchg
arpl
fcmovne
sub
xor
sbb
mov
sbb
mov
sbb
mov
sbb
icebp
je
cwde
icebp
xor
aam
xor
shl
xor
enter
les
je
cld
mov
pop
mov
mov
sbb
mov
fldlg2
xor
imul
sub
mov
pop
mov
sub
adc
xor
jno
into
or
xor
inc
or
loop
xor
js
xor
je
xor
xor
xor
sub
xor
and
xor
sbb
xor
adc
je
dec
lock
or
xor
inc
mov
sbb
xor
jl
xor
js
xor
je
xor
jo
je
ins
mov
pop
sub
hlt
fisub
jne
pushf
mov
fistp
xor
(bad)
aad
sbb
lahf
adc
or
shl
add
leave
dec
jmp
mov
cmps
enter
sti
div
jmp
xor
in
xor
mov
mov
sbb
mov
sbb
mov
sbb
mov
pop
mov
xor
mov
xor
xor
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
xor
sbb
mov
adc
mov
or
ss
mov
mov
add
dec
xchg
adc
jp
pop
mov
je
push
mov
out
movs
dec
lock
out
or
ss
div
pop
adc
xor
push
mov
sbb
sbb
xor
inc
mov
sbb
xor
jl
xor
js
je
xor
xor
xor
xor
ins
mov
sbb
xor
fs
sbb
xor
pushf
mov
sbb
mov
sbb
mov
sbb
mov
sbb
jae
fwait
clc
repz
gs
lahf
mov
loop
ins
retf
xchg
outs
dec
popf
and
call
or
push
xor
adc
cmc
movs
scas
loop
xchg
pop
mov
sbb
hlt
pop
test
xor
cld
mov
sbb
mov
sbb
mov
sbb
mov
pop
lods
repz
test
xor
in
xor
mov
mov
sbb
mov
sbb
xor
adc
xor
or
xor
add
xor
cmp
hlt
sbb
mov
sbb
xor
push
mov
sbb
xor
popf
or
test
ror
hlt
in
jns
xlat
add
cli
sbb
movs
cmp
repnz
sbb
repnz
sbb
fidiv
mov
sbb
xor
fs
sbb
je
fdiv
xor
fdiv
xor
nop
mov
sbb
xor
test
xor
mov
mov
sbb
xor
lods
mov
sbb
mov
sbb
jb
pop
cwde
mov
dec
aam
leave
pop
push
xor
pop
push
push
xor
icebp
ja
pushf
shl
sbb
(bad)
xor
add
xchg
repz
fwait
xor
mov
push
mov
hlt
call
xor
loopne
xor
sbb
xor
sbb
xor
adc
xor
or
je
add
je
js
xor
xor
xor
xor
xor
sub
je
pusha
cmc
je
pop
mov
pop
sbb
xor
push
mov
sbb
xor
dec
mov
sbb
mov
pop
inc
cmc
(bad)
fld
mov
jecxz
jno
pop
icebp
xor
je
push
jge
xlat
jecxz
sti
pop
movs
retf
pop
movs
je
xchg
div
sbb
xor
nop
mov
sbb
xor
test
je
cld
cmc
xor
clc
mov
sbb
je
in
cmc
xor
test
xor
movs
mov
sbb
mov
sbb
mov
sbb
cmc
je
nop
cmc
je
int3
mov
pop
mov
xor
les
xor
cld
jne
sbb
cmc
hlt
call
neg
ins
push
cmc
out
jo
sahf
mov
iret
je
and
mov
mov
fwait
xchg
or
frndint
jg
pop
lea
xor
add
je
inc
hlt
xor
cmp
xor
cmp
sbb
je
ins
hlt
xor
push
hlt
xor
pusha
hlt
xor
pop
mov
sbb
xor
push
mov
sbb
xor
dec
mov
pop
or
xor
add
xor
inc
mov
sbb
pop
cmp
je
xor
xor
jo
xor
ins
je
sbb
xor
fs
sbb
xor
pop
jne
xor
ss
pop
mov
sbb
(bad)
xor
fiadd
hlt
sbb
hlt
sbb
je
in
hlt
xor
test
xor
movs
mov
sbb
mov
sbb
mov
sbb
xor
int3
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
pop
mov
mov
sbb
mov
sbb
mov
pop
test
je
movs
hlt
je
mov
ja
sbb
mov
sbb
xor
adc
mov
mov
std
fwait
les
neg
pusha
mov
pop
cmc
ds
cli
mov
sbb
je
xor
pop
sub
xor
call
mov
pop
pusha
div
div
div
adc
xor
push
mov
sbb
sbb
je
add
je
add
xor
cmp
xor
js
xor
je
xor
jo
xor
ins
mov
pop
sub
xor
and
xor
pusha
mov
sbb
xor
xchg
mov
pop
shl
xor
int3
mov
sbb
mov
sbb
aaa
xor
jns
je
mov
xor
lock
mov
pop
call
ja
pop
mov
mov
sbb
mov
fcmovbe
mov
sbb
mov
sbb
mov
pop
mov
xor
test
xor
cld
mov
sbb
mov
sbb
mov
sbb
mov
pop
lods
mov
sbb
mov
sbb
mov
and
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
pop
pop
jmp
mov
nop
xor
nop
mov
inc
inc
dec
cmp
jmp
jne
call
add
jmp
mov
mov
mov
jmp
ret
nop
jmp
sub
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
pop
pop
xor
xor
ss
aaa
xchg
cmp
cmp
in
cmp
cmp
cmp
xchg
and
in
cmp
and
cmp
in
cmp
and
xchg
cmp
in
cmp
daa
xchg
in
cmp
sub
cmp
in
cmp
sub
cmp
in
cmp
sub
in
cmp
sub
xchg
cmp
cmp
cmp
das
xchg
adc
adc
push
xchg
pop
xchg
sbb
sbb
push
xchg
pop
xchg
add
add
add
xchg
or
cmp
or
fcom
cmp
cmp
or
xchg
fist
cmp
cmp
jo
cmp
jno
cmp
jb
cmp
jae
cmp
je
cmp
jne
cmp
jbe
ja
js
jns
js
jns
jns
jns
jp
jns
jnp
jl
jge
jle
jg
pusha
xchg
jl
popa
xchg
jle
jg
jl
bound
jle
gs
xchg
addr16
push
xchg
gs
sbb
ins
xchg
ins
xchg
outs
xchg
(bad)
xchg
outs
xchg
push
xchg
les
jle
gs
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
fs
jle
gs
jg
imul
pop
xchg
fs
jns
gs
pop
xchg
cmp
cmp
pop
xchg
pop
xchg
sbb
sbb
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
pop
xchg
pop
xchg
inc
xchg
inc
xchg
ins
xchg
dec
xchg
dec
xchg
dec
xchg
(bad)
xchg
pop
xchg
dec
xchg
dec
xchg
dec
xchg
dec
xchg
dec
xchg
pop
xchg
dec
xchg
mov
mov
mov
adc
mov
mov
mov
mov
mov
xchg
mov
xchg
mov
xchg
mov
xchg
(bad)
xchg
cmp
mov
xchg
mov
xchg
enter
in
cmps
xchg
cmps
xchg
leave
xchg
push
xchg
test
retf
xchg
cmps
xchg
retf
xchg
test
xchg
dec
xchg
lods
xchg
int3
xchg
lods
xchg
scas
xchg
scas
xchg
pop
xchg
pop
xchg
cmp
nop
xchg
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
xchg
sbb
xchg
xchg
xchg
xchg
xchg
mov
xchg
cdq
xchg
call
xchg
pushf
xchg
popf
xchg
inc
xchg
inc
xchg
push
xchg
sahf
xchg
inc
xchg
lahf
xchg
sbb
push
xchg
cmp
adc
xchg
adc
xchg
test
pop
xchg
pop
xchg
cmp
test
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
popf
xchg
inc
xchg
sbb
xchg
stos
xchg
mov
xchg
mov
xchg
lods
xchg
int3
xchg
lods
xchg
scas
xchg
scas
xchg
pop
xchg
pop
xchg
cmp
nop
xchg
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
xchg
xchg
cmps
xchg
int
mov
cmps
xchg
into
xchg
xchg
xchg
cmp
mov
sbb
iret
xchg
cmp
mov
cwde
xchg
dec
xchg
cdq
xchg
sbb
pushf
xchg
popf
xchg
sbb
dec
xchg
lea
(bad)
xchg
mov
sbb
xchg
adc
adc
icebp
xchg
cmp
repnz
sbb
push
xchg
pop
xchg
pop
xchg
cmp
repz
sbb
push
xchg
hlt
xchg
iret
xchg
dec
xchg
cmc
xchg
dec
xchg
cdq
xchg
not
clc
xchg
stc
xchg
cli
xchg
sti
xchg
cld
xchg
sbb
popf
xchg
sbb
xchg
(bad)
xchg
call
loope
add
loop
(bad)
xchg
jecxz
in
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
pop
pop
cmp
mov
cmp
cmp
cmp
std
jle
cmp
cmp
cmp
std
jle
and
cmp
cmp
cmp
cmp
cmp
xor
jle
cmp
cmp
cmp
std
jle
xor
cmp
cmp
xor
jle
cmp
cmp
cmp
mov
push
cmp
mov
cmp
cmp
cmp
mov
cmp
mov
push
and
ds
push
cmp
jno
cmp
fnstcw
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
std
jle
sub
dec
pop
cmp
mov
push
and
cmp
clc
cmp
cmp
cmp
call
cmp
clc
cmp
cmp
cmp
mov
push
cmp
mov
push
and
cmp
(bad)
cmp
cmp
cmp
push
jp
aas
push
cmp
cmp
cmp
push
cmp
(bad)
cmp
(bad)
cmp
cmp
cmp
mov
push
cmp
mov
push
and
cmp
fstp
cmp
mov
mov
cld
cmp
cmp
jp
cmp
cmp
icebp
cmp
std
jle
sub
xor
pop
cmp
std
jle
sub
fs
cmp
std
jle
sub
xor
cmp
std
jle
sub
dec
dec
popa
cmp
std
jle
sub
ins
and
cmp
std
jle
sub
push
jb
cmp
std
jle
sub
adc
xor
jle
sub
cmp
cmp
std
jle
sub
xor
jle
sub
inc
pop
data16
std
jle
sub
dec
dec
jge
xor
jle
sub
pop
pop
cmp
std
jle
sub
or
aas
or
cmp
cmp
pop
mov
cmp
mov
mov
cmp
mov
mov
push
xor
ds
push
xor
cmp
mov
cmp
mov
push
cmp
mov
cmp
cmp
cmp
cmp
cmp
mov
cmp
mov
push
cmp
cmp
xor
ds
push
cmp
lds
push
cmp
mov
cmp
mov
push
cmp
or
cmp
or
cmp
sti
cli
xor
cmp
cmp
pusha
cmp
add
sub
aas
mov
cmp
cmp
cmp
cmp
mov
push
cmp
int
cmp
mov
push
cmp
mov
cmp
cmp
push
cmp
cmp
cmp
cmp
xor
cmp
cmp
lds
cmp
stos
(bad)
sbb
mov
cmp
mov
push
and
cmp
mov
push
and
cmp
push
cmp
cmp
cmp
imul
(bad)
cmp
fidivr
cmp
or
cmp
pop
mov
mov
cmp
cmp
inc
push
and
cmp
std
push
cmp
cmp
mov
mov
cmp
mov
cmp
jmp
and
cmp
cmp
mov
mov
cmp
mov
jl
cmp
mov
cmp
std
jb
cmp
cmp
pop
mov
cmp
pop
mov
cmp
mov
pop
mov
aas
jb
cmp
cmp
mov
push
and
cmp
cld
push
cmp
cmp
mov
cmp
mov
cmp
add
cmp
add
cmp
test
cmp
cmp
cmp
mov
mov
push
and
cmp
mov
cmp
pop
mov
mov
cmp
mov
cmp
std
jl
cmp
cmp
mov
sub
cmp
cmp
push
mov
cmp
cmp
push
cmp
aas
push
cmp
cmp
cmp
mov
push
cmp
cld
jb
cmp
cmp
std
jbe
cmp
cmp
pop
cmp
ins
cmp
push
cmp
ins
cmp
mov
push
cmp
mov
and
cmp
mov
stc
cmp
cld
push
cmp
cmp
clc
pop
aas
cmp
cmp
mov
cmp
push
cmp
cmp
cmp
cmp
mov
push
cmp
mov
push
cmp
mov
mov
sbb
cmp
std
jb
cmp
cmp
mov
cmp
mov
and
aas
sbb
cmp
mov
or
cmp
mov
mov
(bad)
sbb
mov
cmp
stos
cmp
cmp
aas
test
push
jp
cmp
pop
cmp
outs
cmp
mov
cmp
pop
cmp
mov
cmp
mov
cmp
or
cmp
cmp
add
cmp
(bad)
cmp
cmp
cmp
(bad)
ds
cmp
ds
cmp
cmp
jo
cmp
cmp
cmp
cmp
ds
cmp
cmp
cmp
data16
cmp
ds
cmp
cmp
ds
cmp
cmp
arpl
cmp
cmp
bound
cmp
cmp
ins
cmp
cmp
ds
cmp
cmp
outs
cmp
cmp
outs
cmp
cmp
mov
imul
cmp
ds
lds
or
cmp
cmp
pop
cmp
cmp
adc
cmp
cmp
pop
cmp
cmp
sbb
cmp
cmp
daa
cmp
cmp
and
cmp
cmp
das
cmp
cmp
sub
cmp
cmp
aaa
cmp
cmp
xor
cmp
cmp
aas
cmp
cmp
cmp
cmp
cmp
retf
(bad)
cmp
sub
(bad)
ds
cmp
rol
lds
ds
cmp
cmp
cmp
ds
(bad)
cmp
(bad)
cmp
ds
aad
(bad)
ds
(bad)
ds
(bad)
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
pop
pop
(bad)
fild
das
das
jmp
data16
(bad)
das
and
(bad)
sub
das
das
(bad)
das
das
das
das
lods
sub
sub
das
test
and
(bad)
aam
das
das
xchg
inc
or
das
movs
das
sub
sub
das
(bad)
nop
rcl
shr
das
das
das
lods
les
mov
das
xchg
inc
das
das
das
xchg
sub
push
sbb
das
scas
aam
pop
das
das
and
(bad)
jmp
and
mov
and
das
das
(bad)
ja
das
das
nop
sub
out
stos
data16
das
(bad)
cli
rcl
shl
mov
das
mov
das
lods
(bad)
sub
mov
das
das
mov
das
jbe
mov
scas
cs
das
in
(bad)
das
das
das
das
jl
jge
js
jns
scas
ret
ret
das
das
das
(bad)
or
das
das
scas
ret
scas
cs
das
mov
rcl
rcr
stos
lods
das
das
das
(bad)
pop
das
das
das
lods
int3
das
mov
das
movs
jo
(bad)
pop
cs
das
(bad)
(bad)
rcl
push
shr
das
mov
das
sar
mov
das
das
das
mov
das
(bad)
leave
rcl
shr
imul
push
das
das
das
movs
sbb
and
mov
or
rcl
nop
inc
or
das
movs
adc
das
(bad)
cli
rcl
rcl
das
and
xchg
das
das
das
das
mov
das
mov
mov
das
xchg
inc
or
das
movs
das
sub
sub
das
(bad)
lods
rcl
shl
stos
xchg
rcl
scas
rol
das
das
(bad)
test
stos
(bad)
rcl
movs
jmp
imul
mov
shl
mov
and
mov
or
mov
mov
shr
sub
iret
mov
and
(bad)
(bad)
rcl
call
push
daa
das
das
das
das
(bad)
sbb
rcl
scas
jmp
das
das
das
mov
mov
shr
or
rcl
sub
mov
rcr
in
daa
sbb
mov
das
das
das
das
out
in
daa
sbb
daa
mov
daa
cs
das
(bad)
in
rcl
ror
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
pop
pop
pop
repnz
sbb
popf
adc
loop
sar
mov
test
pop
scas
add
jnp
pop
pop
cld
ds
ror
push
mov
push
push
push
push
push
push
push
push
push
push
add
into
int
iret
int3
leave
enter
movs
icebp
(bad)
jnp
jb
sgdtd
jnp
jae
in
test
sti
xchg
push
adc
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
